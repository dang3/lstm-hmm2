push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
and
adc
adc
adc
adc
lods
loopne
lea
push
repz
lods
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
sub
pop
push
imull
in
enter
push
ljmp
gs
sbb
aaa
mov
cwtl
dec
jb
cmp
in
pop
cmp
sbb
fcmove
and
lcall
push
andb
xor
mov
mov
mov
xor
imul
or
push
movsl
out
adc
in
in
inc
shlb
sbb
mov
adc
in
mov
mov
test
jno
test
addr16
cs
hlt
jmp
mov
mov
out
push
push
divb
or
repnz
or
repz
movd
inc
je
adc
inc
lret
mov
pop
or
testl
fldenv
icebp
cmpsl
rolb
push
jns
ja
shrl
fldcw
mov
insl
sbb
lods
mov
in
sbb
mov
adc
pop
daa
mov
add
repz
xchg
int3
xor
or
xchg
inc
cmp
movaps
cmp
insl
data16
shrb
or
es
mov
sbb
xchg
inc
xorl
aaa
xor
fisubl
mov
adc
mov
arpl
in
in
xlat
hlt
loopne
jecxz
enter
dec
ret
mov
fcmovu
testl
mov
mov
xchg
fldenv
cmc
pop
scas
and
cld
cmc
xor
jnp
mov
push
mov
out
cmpsb
mov
mov
and
mov
pop
dec
scas
add
shrb
jb
and
and
inc
imul
adc
mov
add
fsubl
cli
add
sbb
jmp
popa
loope
imul
xchg
aad
xorb
mov
nop
shlb
adc
daa
jno
mov
add
push
jp
jge
push
fcmovu
dec
data16
lcall
cmp
push
or
and
mov
cmp
scas
iret
or
sub
mov
sbb
cmp
addb
notb
xor
xchg
mov
inc
rclb
stc
xor
vpmulhw
push
jnp
in
push
xchg
mov
in
aaa
inc
and
cmp
cli
xchg
sbb
or
imul
out
dec
or
mov
jae
dec
repz
pusha
add
dec
add
sbb
push
movsb
xor
imul
push
cmp
lods
mov
ficomps
sbb
pop
andb
jecxz
or
pushf
sahf
sub
mov
enter
int3
jae
arpl
shr
out
aam
repnz
lods
mov
aaa
cmpb
jmp
mov
dec
popf
mov
adc
inc
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
lods
in
jle
adc
adc
adc
adc
pcmpeqd
mov
cmp
pop
mov
pop
scas
sbb
out
test
aam
hlt
lret
int3
stos
arpl
cmc
pop
mov
xor
pop
cmp
adc
dec
cmp
dec
popa
xchg
mov
xchg
repz
mov
ljmp
adc
pop
xlat
adc
fwait
xor
ror
mov
clc
in
fcmovu
cld
imul
adc
pushf
adc
sbb
adc
sbb
jbe
es
jae
std
jmp
das
sbb
push
xchg
imul
dec
push
std
pusha
sub
jno
imul
add
sub
adc
sub
and
mov
mov
idivb
popa
arpl
lcall
inc
mov
mov
andb
lods
shrb
mov
int3
stc
pusha
jmp
popf
sub
movsb
mov
ffreep
sub
mov
ror
mov
pop
mov
or
adc
fs
and
repnz
jmp
and
sub
clc
jmp
js
bound
or
dec
ret
das
jo
in
or
das
adc
inc
lods
mov
mov
loopne
pop
jmp
test
sub
fldl
dec
ds
bound
lahf
test
adc
popf
or
shlb
repz
inc
addr16
xor
add
popf
adc
pushf
jae
mov
inc
stos
scas
imul
rcll
shll
push
out
inc
inc
shrb
insl
pop
pop
unpcklps
adc
pop
int3
imul
adc
fmull
lahf
xor
push
push
movsl
scas
cmc
mov
fwait
repnz
ja
in
mov
cmpsl
mov
loope
fcoms
outsb
inc
test
shrl
in
ret
mov
sub
popa
ret
das
push
int
pop
inc
arpl
insl
lock
xor
inc
mov
fistps
inc
and
imul
add
aam
test
fcom
pop
dec
clc
mov
sbbl
inc
mov
fcom
push
push
inc
dec
adc
jmp
mov
call
add
mov
cld
cli
xor
xchg
mov
shll
insb
cmp
mov
imul
push
loop
repnz
icebp
in
mov
int3
mov
add
sbb
lock
sbb
and
pop
fdivs
jl
sbb
stos
xor
enter
push
jnp
inc
dec
lcall
stos
pop
push
xor
popa
push
xchg
pusha
dec
iret
lcall
lods
fcoml
movsb
test
cwtl
mov
gs
dec
sahf
das
out
cs
cwtl
inc
sarb
ja
iret
mov
enter
or
push
ror
ljmp
mov
pop
pop
fistpll
ret
pop
cli
push
inc
pushf
inc
xchg
imul
shll
adc
add
add
push
mov
mov
roll
ficompl
mov
cmpsl
es
mov
in
push
xor
outsb
inc
loopne
inc
data16
add
mov
cmpsl
addr16
dec
mov
cltd
daa
in
enter
dec
clc
iret
sub
mov
or
jae
sbb
scas
pop
mov
inc
push
outsl
sbb
in
jnp
xor
jae
cmpsb
adc
dec
sub
pop
out
xchg
or
or
daa
sbb
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
dec
jecxz
jle
or
adc
adc
adc
sbb
scas
mov
jl
jnp
mov
jp
push
dec
idiv
outsb
sarl
adc
out
xchg
lds
inc
fsubs
mov
pop
cmp
mov
das
push
xchg
xchg
mov
mov
adc
pop
push
int3
adc
shll
adc
outsl
std
mov
stc
dec
lock
repz
and
mov
orb
repz
fldl
test
loop
outsl
pop
pushf
rcrl
inc
add
jg
idiv
sub
xchg
insb
mov
lea
fcoms
push
jno
xlat
aas
aam
adc
lds
and
mov
mov
mov
mov
jg
add
jns
cmp
int
add
xchg
out
aam
xchg
xchg
inc
das
push
pop
dec
mov
mov
xorb
aaa
fistpl
fstps
iret
inc
jg
js
mov
mov
sbb
ret
inc
push
sbb
iret
mov
loopne
mov
sub
cmp
xor
lret
dec
test
xchg
sbb
lret
dec
push
or
lds
bound
cmpsl
addb
jg
pusha
push
xchg
xchg
insl
fyl2xp1
sub
fdivrl
or
pushf
or
repnz
ret
dec
jnp
or
stos
cmc
iret
stc
test
mov
xchg
lock
xor
and
mov
je
call
aaa
mov
inc
jno
fucomip
fisubl
iret
xchg
adc
rcll
mov
mov
mov
lock
scas
iret
imul
cmp
lds
mov
pushf
es
pop
aad
xor
jp
leave
out
rol
je
jne
shlb
je
xlat
or
or
jnp
xor
fisubrs
pusha
sub
out
mov
ficoml
cmp
pushf
ret
lea
insb
mov
dec
test
jle
and
adc
sub
push
loop
push
pop
sub
pop
and
cwtl
test
rorl
addr16
pop
sub
aad
pop
mov
andl
inc
inc
popf
insl
xor
dec
cmc
cmp
movsb
xchg
or
mov
gs
mov
cmp
adc
je
sub
scas
popa
push
push
cmpsb
aas
cmp
inc
dec
xchg
or
psraw
sbbb
ljmp
stc
inc
fistl
lcall
push
pop
mov
mov
ds
xchg
rcrl
inc
xchg
cltd
insb
sub
call
cld
mov
fsubrl
addr16
jb
mov
adc
pop
inc
pop
sbb
mov
ficoml
or
outsl
dec
sub
inc
inc
push
fwait
orl
loope
inc
cmpb
mov
cmp
ja
movsb
bound
dec
dec
aas
scas
iret
adc
hlt
iret
jge
push
push
pop
or
push
sbb
mov
cmp
outsl
aas
push
dec
loop
call
and
mov
loop
jae
jle
stos
mov
sahf
aad
imul
jp
add
add
xchg
and
xor
fsubrl
cmp
leave
adc
bound
rcl
lods
nop
inc
lods
sub
das
pop
push
mov
or
pop
les
push
jl
aaa
mov
cmp
pop
aaa
add
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
sbb
int3
xor
test
xchg
pop
sarb
jnp
mov
ljmp
mov
lock
sub
andl
sub
adc
inc
add
movsb
cwtl
cli
mov
add
jecxz
adc
lock
mov
jmp
inc
or
es
adc
mov
es
js
vpmacswd
les
cwtl
cmp
cli
and
cmp
jg
sbb
movsb
repnz
insl
xor
aam
jnp
je
lock
pop
cmpsb
jecxz
inc
mov
jmp
mov
movsl
jecxz
cmpsb
xor
enter
add
mov
and
push
mov
out
imul
push
pop
jmp
stc
sarb
mov
les
testl
xor
add
es
outsl
jle
sbb
xor
imul
xchg
repz
xchg
or
inc
outsl
sub
and
pop
mov
dec
and
dec
and
pop
mov
pusha
fnsave
adc
ret
adc
ljmp
inc
inc
pop
xlat
sti
gs
xlat
sub
mov
insb
sbb
cmp
cli
inc
fs
stc
cmp
push
push
loope
loope
repz
popf
daa
and
shlb
jle
adc
scas
jl
outsl
xor
cs
adc
pop
repnz
repnz
push
cs
xor
sub
nop
mov
add
out
dec
rcrl
hlt
pop
xor
fidivrl
lea
aad
inc
fcom
lods
jb
ss
pop
push
aad
xchg
lds
loope
or
repz
hlt
jmp
icebp
sub
fstpt
xchg
push
pop
sbb
mov
mov
scas
xor
into
adc
xchg
jo
adc
add
lods
jg
xchg
or
mov
cmpsl
jp
inc
sub
mov
jge
mov
sbb
sub
loopne
insb
push
in
mov
shl
and
stc
pop
es
mov
test
xor
cmpsb
push
pop
lods
sahf
movsl
repnz
test
aaa
lods
int
mov
test
inc
mov
sub
or
lds
shld
faddp
adc
int3
xor
test
scas
sub
je
jl
mov
clc
push
dec
push
dec
sub
dec
mov
aaa
inc
mov
xlat
jbe
lea
rolb
stc
push
in
dec
sub
adc
insb
sbb
cmpsb
push
xor
push
adc
push
inc
shll
inc
out
jge
and
lds
pop
stos
rcrb
dec
nop
cmc
lods
mov
outsl
cmpsb
mov
loope
push
bound
xchg
and
sbb
daa
enter
jle
add
jnp
adc
nop
jb
jae
nop
push
pushaw
fprem
je
aad
xor
je
add
sub
int3
enter
adc
sub
adc
les
repz
hlt
cmpsb
pop
out
dec
sarb
push
lahf
mov
mov
andl
fldenv
mov
scas
pop
mov
mov
nop
jge,pt
in
cmp
xchg
test
sahf
call
inc
test
cmp
lods
test
sti
in
xor
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
movsb
adc
notl
adc
adc
adc
pop
sbb
mov
jg
push
jecxz
push
push
or
mov
mov
test
push
imul
out
test
shll
pop
add
decl
push
and
push
sub
ja
mov
popf
subb
mov
xlat
test
and
or
mov
lret
pop
lcall
add
xchg
iret
lods
stos
outsl
xchg
push
inc
rcl
fidivrs
mov
jnp
sahf
hlt
shrl
inc
in
jecxz
jle
mov
popf
or
or
cmovne
sub
iret
xchg
and
jnp
adc
jl
dec
aaa
push
inc
pop
lret
rolb
call
jno
push
ss
sbb
mov
cmp
loope
ret
cltd
add
pop
movsb
sahf
dec
or
push
sbb
sti
daa
mov
push
pop
mov
cmp
push
into
aaa
jno
fnstcw
jge
push
or
pushf
cmp
mov
addr16
stos
add
ljmp
adc
xchg
mov
and
arpl
mov
push
mov
jno
ljmp
popf
or
sysret
push
dec
jne
js
xchg
into
or
sti
mov
loope
jle
add
in
nop
pop
lcall
inc
xor
mov
dec
lahf
mov
jl
mov
nop
inc
push
rol
mov
out
mov
cwtl
push
jmp
fstpt
pop
sti
mov
addr16
mov
cmp
mov
jg
cmp
sub
int3
jns
jmp
dec
int
scas
loopne
pop
and
push
loopne
dec
mov
xor
or
stos
imul
gs
and
xchg
fs
fisubl
pop
mov
mov
or
lahf
jge
inc
cwtl
ret
cmp
jmp
or
imul
scas
ret
mov
adc
pop
int3
gs
jl
jmp
xor
insb
fsubrp
jb
add
jae
push
shrd
inc
aas
fcoml
in
mov
push
out
push
cli
inc
xchg
cmp
lret
and
lahf
cmp
cs
in
cmp
ja
stc
add
fildll
cmpsb
ja
mov
lcall
dec
pop
jno
dec
enter
shl
and
mov
mov
mov
add
jb
orl
imul
mov
pop
ret
pushf
stos
int
gs
je
jp
lahf
pushl
les
fsubs
stc
pushf
cbtw
fdivrl
sub
cmpsl
mov
outsb
inc
mov
sbb
cmp
outsb
aad
repnz
push
adc
out
nop
sub
test
ss
mov
mov
pop
ud2
pusha
movsb
add
pop
enter
and
or
mov
mov
lods
mov
test
les
mov
push
ret
jns
jge
in
ficoms
jo
sbb
push
inc
pop
jmp
push
pop
cld
bound
push
cld
cmp
int3
dec
jns
cmc
lret
out
sbb
pop
decl
out
pop
arpl
sub
sub
scas
hlt
dec
les
sbb
in
or
imul
aas
adc
sub
repnz
pushf
jnp
jg
dec
sbb
mov
decl
imul
sbb
ret
lds
int
inc
add
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
mov
push
mov
int
adc
push
loop
inc
jg
sub
sbb
add
inc
mov
pop
jge
rcl
addr16
sti
dec
loopne
mov
call
xchg
sub
adc
jb
repz
repnz
push
aaa
neg
stc
in
xchg
pop
rolb
dec
loop
orb
push
repz
push
mov
add
and
or
mov
mov
lret
jo
inc
inc
fwait
pop
or
dec
add
lds
push
es
test
call
pop
cmp
out
in
int3
pop
fildl
cmp
xchg
pop
xchg
inc
ja
sub
cmpsl
pop
lods
add
jp
out
mov
dec
in
lea
jmp
out
fildl
in
enter
nop
es
xor
imul
mov
xorb
std
nop
insl
ljmp
jne
sub
stos
mov
and
mov
lahf
jo
sub
push
dec
bound
jns
dec
out
sbb
fdivl
xor
sub
dec
adc
jge
std
test
mov
imul
push
jle
fwait
mov
les
out
push
fdivl
or
jne
xorl
mov
aas
pop
lret
mov
xchg
or
xor
nop
mov
repnz
outsl
scas
rcrl
je
add
cmc
jecxz
and
pop
xchg
out
mov
pop
jae
sbb
sub
pop
lods
inc
stc
cmp
and
fcom
xor
je
inc
mov
pop
xor
leave
pushf
push
cld
sbb
cs
in
jb
dec
mov
pop
lret
int3
lcall
in
xchg
adc
sahf
inc
mov
add
cmpb
stos
lahf
in
mull
aam
xchg
in
int3
jb
sub
pop
dec
mov
stos
loope
mov
adc
fsubrs
mov
xlat
stos
push
les
rolb
jmp
xchg
movsb
mov
add
sbb
mov
fnstsw
sbb
js
jno
mov
lret
adc
xor
or
aaa
iret
aad
jnp
into
enter
jp
test
or
scas
aad
mov
jmp
mov
shrl
cmpsl
pop
add
xor
sbb
test
sub
mov
pop
sbbb
stos
sbb
shlb
stc
popf
cld
aad
inc
inc
adc
icebp
and
pop
enter
cltd
sub
and
aam
push
push
pop
sub
shlb
in
sub
mov
cmc
inc
stc
mov
inc
mov
fdivrs
xchg
xor
jb
xor
and
xor
sub
pop
lods
and
and
dec
stc
cli
inc
mov
rclb
sbb
sahf
ja
and
scas
cmc
ja
cltd
movsb
imul
loop
jnp
bound
pop
inc
loopne
mov
ljmp
xchg
or
into
subb
repz
inc
dec
or
stos
mov
cmp
sub
jnp
mov
add
add
das
cmp
roll
in
repnz
sbb
leave
lds
xor
sub
ljmp
push
and
dec
pop
mov
ja
ficoml
xor
add
inc
xchg
and
jle
js
push
bound
cwtl
negb
add
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
inc
lret
xchg
js
in
adc
int
adc
lcall
sbb
aas
fsts
stc
stos
out
jb
ds
jnp
xlat
pop
loopne
jns
pop
pop
add
mov
jge
mov
lods
popa
pop
adc
mov
fwait
mov
push
ja
jb
inc
push
sbb
mov
sub
ss
pop
cmp
in
inc
nop
mov
cmp
adc
dec
rorb
stc
mov
aas
xor
push
xor
push
sbb
jecxz
jno
jecxz
pand
jo
iret
mov
loopne
mov
adc
stos
das
and
inc
f2xm1
scas
std
pop
fistps
loopne
scas
mov
mov
mov
inc
dec
xchg
loope
ja
enter
mov
mov
aam
xor
jno
xchg
or
or
shl
lds
push
mov
sbb
and
outsl
es
inc
arpl
jg
and
aaa
jne
mov
cmpb
dec
or
fisubs
test
incb
pop
xchg
push
pop
or
xlat
out
lods
mov
pop
xchg
jo
fdivs
test
loope
out
loope
sbb
mov
das
imul
push
dec
pop
xorb
divb
aas
and
test
push
rcrl
fbld
xchg
pop
testl
cmp
pop
mov
xor
sub
movl
repnz
leave
cli
insl
ret
jb
pop
in
dec
xchg
xor
scas
nop
test
fsubr
xor
pop
out
push
movsl
iret
mov
mov
sub
frstor
ljmp
push
daa
adc
sub
loope
jp
jmp
ljmp
mov
dec
xchg
fbstp
popa
ljmp
roll
adc
pop
pushf
dec
ljmp
pop
fstpt
pop
inc
jge
sbb
sub
cmp
movsl
lahf
es
xchg
dec
fldt
push
jbe
sbb
mov
jge
adc
test
adc
jmp
adc
aam
push
pop
daa
sbb
aas
test
sub
and
mov
adc
in
pop
cwtl
imul
fisubrs
push
mov
xchg
ficoml
sub
repz
adcl
mov
add
xchg
push
cmpsl
loopne
rcl
out
fldt
cmpsb
dec
dec
jle
mov
mov
inc
xor
push
mov
leave
jns
xorb
xlat
xchg
shll
add
dec
and
cs
hlt
lds
fildll
clc
fiadds
test
xchg
push
pop
dec
orl
cli
dec
mov
cwtl
cmpsb
icebp
push
outsb
cmp
add
mov
out
mov
sbb
dec
movsb
mov
push
lret
push
mov
popa
leave
lods
mov
movl
cmpsb
mov
mov
insl
negl
push
mov
jb
clc
out
jns
shrb
out
sbb
scas
aas
jne
popf
mov
das
ret
adc
in
popf
loop
pushf
add
cld
out
daa
lret
xchg
rcl
idivl
xor
lods
dec
mov
adc
out
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
repz
push
out
adc
adc
adc
fistpl
ds
arpl
shl
stos
jecxz
iret
fmull
cmp
pop
push
into
xchg
dec
inc
leave
cmpsb
ss
inc
gs
cmp
ss
imul
mov
cmc
xor
in
outsl
cmp
pop
hlt
cmp
or
jp
imul
lock
mov
fs
cli
and
mov
test
add
xchg
imul
push
movsb
and
or
psubq
aaa
sbb
inc
or
push
int
rol
lods
inc
dec
push
mov
subb
inc
sahf
ljmp
iretw
pop
add
pushf
add
jmp
xchg
sub
in
inc
ret
push
ficompl
dec
in
sub
sbb
into
mov
lret
adc
mov
sbb
fisubrl
xchg
sbb
pop
stos
aad
adcl
xchg
push
inc
and
mov
push
inc
imul
cmp
xchg
lret
inc
and
sub
bound
rcr
adc
mov
es
jmp
push
fidivl
add
jmp
dec
orl
mov
sub
into
mov
xchg
sub
idivw
aaa
or
and
add
out
or
dec
and
hlt
jl
jmp
mov
inc
cmp
lock
popf
and
stc
mov
loop
mov
jb
or
mov
xchg
xchg
mov
rcll
aas
mov
das
cmp
add
lods
icebp
pop
add
stos
sbb
addr16
enter
das
rol
andb
lock
call
dec
push
xor
adc
push
test
pusha
add
scas
rorl
mov
push
aam
lds
push
das
pusha
nop
cmp
inc
inc
mov
xor
lea
mov
ret
fildl
and
mov
inc
daa
lret
adc
cltd
clc
les
jno
and
pop
xor
outsl
cmp
dec
xor
std
cmp
jl
rcrl
or
mov
test
call
aaa
data16
aad
jb
dec
xor
rcll
mov
dec
fdivs
sarl
ret
ss
cmp
and
dec
jbe
orl
in
in
dec
pop
mov
fwait
pop
loope
test
arpl
mov
dec
cmc
push
push
not
movsb
lods
pop
insb
jb,pn
testb
rolb
push
lret
test
and
gs
mov
lods
inc
fs
jmp
cmp
xchg
xchg
ljmp
jl
out
testb
fidivrl
cwtl
mov
insl
icebp
aaa
inc
sub
fisttps
stos
sub
dec
je
fistpll
fsubl
add
ljmp
jp
sbb
push
cmp
movsb
mov
in
shlb
int
cmp
arpl
cwtl
ja
sbb
or
pop
mov
pusha
ss
js
stc
mov
xchg
sub
mov
and
outsb
std
int3
dec
pop
push
outsb
mov
jnp,pt
roll
xor
dec
sbb
ror
rorl
clc
ret
push
test
sbb
fs
mov
nop
rcll
loopne
fisubrl
cmp
les
data16
ret
lret
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
pushf
enter
ficoms
adc
adc
adc
pop
jo
pop
inc
xchg
xchg
stos
fistps
adc
cmp
dec
popa
and
mov
pop
fldt
push
mov
push
call
dec
loopne
add
xchg
sub
das
dec
sbbb
ja
push
jnp
daa
lret
out
add
into
in
mov
imul
jl
pop
pusha
pop
movsb
scas
fidivrs
sar
scas
sub
das
int3
fistl
lret
xchg
jae
sbb
loopne
xorb
leave
or
jnp
ret
adcb
notb
lahf
xchg
testb
call
jbe
dec
mov
pop
or
or
inc
imul
lods
lahf
dec
jb
fs
scas
es
push
fnstsw
mov
dec
pop
rcrb
add
jne
fbstp
cld
outsl
push
mov
int3
jmp
stos
push
fsubrl
mov
mov
sub
jne
dec
push
xlat
jae
add
pop
xor
enter
ja
jno
mov
and
mov
jmp
jle
pop
and
das
jmp
push
xchg
aam
mov
jle
push
rorb
xor
cmp
out
push
adc
and
clc
sbb
scas
sbb
lock
push
je
cmp
or
fdivs
jo
aas
pusha
pop
lahf
aas
mov
in
fsubp
dec
stos
xchg
jo
and
mov
pop
shrb
cwtl
shll
xchg
psubsw
jmp
leave
idivb
or
push
aas
mov
pop
and
ret
push
and
sbbb
cs
cmp
dec
insl
mov
or
and
loopne
std
scas
xchg
pop
sub
and
mov
sub
xor
jo
adc
negl
mov
inc
push
aam
mov
mov
scas
aas
movsl
mov
or
push
ss
in
fdivrl
nop
and
adc
add
adc
pop
inc
push
sahf
pop
xor
in
lcall
aaa
xor
ss
ljmp
jecxz
outsb
add
int
push
xor
lret
or
xor
sub
js,pn
orl
es
mov
mov
pop
jnp
mov
aaa
cmpsb
cli
sbb
iret
es
push
fcmovu
stos
xchg
xor
subl
jns
push
xor
push
repz
les
adc
cmp
loope
xchg
xchg
xchg
or
mov
sarb
scas
loope
lock
sub
daa
mov
xchg
sbb
fsub
loopne
sbb
fwait
push
push
leave
fldcw
jns
std
xorl
cmp
dec
mov
or
test
mov
in
enter
int3
js
inc
ljmp
sbbb
xorl
push
jmp
inc
test
and
shrl
js
cmp
fisttps
shlb
je
adc
push
sti
and
jno
pop
push
push
mov
fs
daa
push
in
cli
adc
mov
fwait
test
xor
xor
sub
push
aam
roll
sub
test
mov
divl
dec
addb
jmp
inc
filds
mov
add
mov
inc
mov
pop
fs
pop
dec
pop
mov
cmp
jmp
mov
shl
jmp
fmuls
sbb
jp
mov
jge
adc
int
adc
iret
mov
loop
les
popa
push
arpl
sets
adc
fxam
out
dec
push
subl
or
cmpsb
xchg
in
adc
xor
scas
inc
aaa
lcall
push
mov
xor
negl
add
push
xor
popf
aad
mov
mov
push
mull
pop
push
xchg
outsl
les
sahf
mov
cmpl
in
or
add
mov
aam
jmp
dec
stos
adc
sbb
loopne
pushf
add
pop
jl
cmp
scas
pop
icebp
cld
adc
rolb
mov
jo
cmpl
add
pop
mov
leave
adcb
or
mov
bound
call
rcl
lods
cs
in
xchg
cltd
mov
push
push
or
cltd
mov
or
lahf
clc
sub
and
adc
dec
mov
jl
xor
aaa
jae
sub
in
pop
push
cmc
push
dec
sub
gs
mov
imul
adc
pop
pop
in
cmpsl
leave
mov
mov
cmc
addl
mov
adcb
inc
push
mov
ficomps
shlb
pop
iret
inc
cmpsl
test
xchg
int3
popa
or
test
movb
push
push
lds
xor
inc
nop
ljmp
js
cmpsl
arpl
je
imul
test
xor
cs
mov
xor
pause
jp
mov
int3
mov
cli
shrb
mov
cs
mov
cmc
mov
and
lds
rcr
aaa
in
mov
jle
lods
xor
mov
mov
lods
testl
add
test
pop
or
sub
leave
ss
pop
xchg
cmp
aas
in
adc
ret
or
mov
lock
push
mov
ret
fisubl
in
imul
lods
lret
sbb
addr16
mov
mov
pop
mov
lea
xchg
cs
sub
cltd
ficoms
in
imul
push
xor
and
nop
lods
dec
fisubl
mov
fidivs
out
js
xchg
or
filds
movsl
add
mov
sbb
rcll
add
cmpsl
jbe
lods
sub
mov
xchg
mov
mov
add
inc
xchg
or
mov
dec
mov
and
aas
mov
fwait
and
jmp
mov
dec
lcall
xor
sahf
mov
cmp
xchg
cmp
and
cmc
add
mov
inc
mov
aam
out
push
mov
pop
sub
xchg
lds
mov
mov
stos
mov
jb
sbb
pop
imul
pusha
flds
sub
push
fbld
imul
push
jns
mov
fstl
lds
mov
xlat
bound
jp
xchg
adc
push
xchg
push
loope
push
push
hlt
das
cltd
sbbb
enter
add
lcall
xchg
jno
popf
and
or
cmp
adc
sbb
inc
mov
out
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
fwait
arpl
int3
adc
int
adc
cmp
lea
dec
mov
fistps
add
call
cmp
addr16
enter
mov
or
push
sub
mov
jle
stos
int3
pop
xor
faddp
rol
xchg
push
aas
pop
test
out
and
mov
jae
sbb
sti
mov
popf
popa
nop
mov
dec
cmp
daa
or
lahf
in
cmp
outsb
add
sub
rep
dec
mov
insl
pop
mov
cld
add
orl
xchg
clc
mov
xor
stc
aas
and
xchg
mov
fisttpl
pop
jg
sbb
add
dec
push
cmpsb
xchg
or
sbb
addr16
mov
inc
jnp
stos
imul
pop
push
inc
xchg
shlb
mov
ss
add
jl
test
out
repz
orb
cwtl
int3
or
sbb
mov
out
out
jo
xor
lcall
jecxz
cmp
sub
push
test
ja
lret
jle
loopne
inc
icebp
cmp
leave
jecxz
int
ror
and
lahf
out
les
cmp
xor
cltd
rcll
roll
movsl
dec
sbb
mov
cmp
cmp
pushf
lods
dec
inc
or
lret
or
pusha
scas
flds
inc
cli
out
mov
xor
sbb
mov
lods
xchg
sti
enter
aas
sub
loopne
cmp
pop
lret
cmc
mov
gs
or
fwait
dec
divl
jcxz
mov
ret
rolb
sub
les
mov
xchg
dec
xchg
mov
fs
fwait
inc
pushf
ret
dec
pop
sbb
adc
xchg
mov
mov
fwait
aaa
rclb
sbb
adc
fcoms
mov
out
rclb
lods
or
push
dec
cmc
xchg
dec
mov
jae
dec
push
jge
cmp
mov
sub
push
les
pop
and
or
lcall
pop
mov
jg
dec
cmp
add
jo
into
stos
xor
dec
pop
test
adc
cmpsb
out
lret
push
lock
jmp
cmp
push
sub
out
aad
movsb
in
aas
and
cmp
clc
push
cmpsl
test
mov
jle
insl
sbb
add
mov
lea
inc
shrl
adc
in
fimuls
adc
pop
dec
push
outsb
adc
mov
dec
cmpsb
sbb
leave
dec
mov
loopne
imull
push
mov
mov
loopne
adc
xorl
out
andl
mov
vpmulhuw
sahf
jb
mov
out
lret
ret
xchg
push
shl
adc
nop
jo
loop
daa
hlt
inc
add
xchg
cld
jmp
jbe
dec
mov
int3
xlat
mov
sbb
cs
in
push
or
ret
iret
aaa
stc
push
push
pushf
xchg
xchg
dec
hlt
sbb
jmp
push
ret
cmp
push
or
jne
and
sub
jecxz
lret
xchg
enter
mov
cmp
mov
mov
cmp
push
mov
sbb
and
in
fistps
jmp
adc
sub
je
cmp
lret
or
inc
pop
addr16
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
mov
les
adc
adc
adc
das
mov
loopne
xlat
inc
ss
cmpsl
ja
fidivs
sbb
das
repz
pop
inc
fistl
adc
imul
fidivrs
mov
push
adc
and
lea
cmp
test
adc
xor
mov
adc
adc
out
test
mov
mov
xchg
fsubl
sub
ja
xlat
outsb
test
mov
jmp
enter
pop
js
lret
and
sbb
jns
mov
xor
aaa
std
out
cmp
data16
addl
xchg
pusha
sti
inc
xor
sti
xor
mov
adc
xchg
sbbl
add
inc
popa
xor
lcall
mov
lods
stos
jmp
and
decb
pop
test
adc
pop
mov
push
push
leave
fwait
jp
cmp
sbb
pop
lahf
push
jge,pn
fs
xchg
or
mov
aad
cmp
leave
addr16
enter
ret
push
jp
aas
out
or
mov
xchg
add
mov
cld
aam
jnp
xchg
xlat
xchg
xchg
xor
pop
xor
jbe
adc
and
stos
xor
push
leave
jmp
shlb
xchg
push
jecxz
cmc
push
xchg
inc
sbb
or
outsb
and
add
dec
add
xchg
shll
jp
sub
int
jns
loop
out
xchg
adc
inc
inc
pop
jo
add
dec
lea
fistl
sub
test
lahf
aas
jbe
lock
fnsave
inc
dec
insl
pop
pop
shll
dec
es
ss
mov
popa
fs
in
adc
push
stc
cmp
call
cmp
cmp
sub
pop
movsl
mov
out
fstpt
mov
inc
jl
addr16
adc
or
jle
int
test
dec
push
and
or
and
ja
add
ds
in
rorl
mov
push
ret
jge
outsl
fidivrl
jmp
mov
sub
cmp
push
push
sbb
sub
hlt
cmpsl
push
int
cmc
dec
stc
cmpl
sbb
aaa
adc
and
outsl
and
cmp
cli
cmp
das
aas
mov
nop
addb
mov
push
cwtl
inc
bound
es
push
mov
jae
int
adc
sub
fstpl
das
pop
jno
cmp
jge
insb
stos
sahf
mov
mov
cmp
xchg
jns
adc
test
inc
packssdw
push
gs
jbe
pusha
aaa
mov
adc
push
popf
jb
xchg
dec
into
out
aaa
addr16
faddp
mov
lock
mov
mov
in
sub
in
pop
je
cli
out
lea
add
div
mov
filds
pop
ss
jae
sbb
aas
cli
imul
jb
xchg
xchg
jge
fucomi
int3
sbb
pushf
pop
ret
aaa
fldt
and
decb
jbe
cmp
xchg
add
or
mov
aas
stos
imul
pop
int3
icebp
push
bound
pop
in
loope
mov
push
sub
mov
into
cli
mov
dec
outsb
inc
iret
cmp
sbb
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
sub
js
ret
int
adc
jp
in
loope
cmp
mov
enter
jnp
ret
or
dec
mov
dec
bound
mov
xchg
fdivl
loopne
pop
mov
ficoms
stc
jge
repnz
lock
movsl
nop
inc
call
mov
xor
mov
gs
fistpl
dec
clc
test
dec
clc
out
scas
mov
mov
mov
cmpsl
xor
pop
jmp
cltd
cmp
push
loopne
in
and
aad
adc
push
push
daa
or
push
es
test
loop,pt
mov
out
push
sti
fdivrs
sti
jne
cli
cmc
mov
cwtl
fwait
hlt
xor
insl
pop
aad
fcompl
mov
push
dec
lods
pusha
fs
xor
jmp
pop
and
sub
les
xchg
fdivrl
or
jle
stos
mov
or
mov
adc
leave
sarl
clc
cmp
mov
add
pop
push
popf
xchg
jbe
sti
insl
lods
ljmp
adc
insl
and
outsl
cmovle
mov
sbb
aad
pop
sbb
hlt
sub
hlt
ljmp
sbb
iret
sbb
and
and
dec
dec
jle
loope
or
xchg
push
adc
scas
or
sbb
jmp
inc
mov
test
scas
mov
adc
xchg
mov
popf
cmp
sbb
mov
in
xor
inc
add
jno
cmc
sub
sbb
cmp
sub
xchg
push
xchg
inc
xchg
pop
pop
ljmp
mov
push
push
or
sbb
lret
insl
and
decl
mov
sbb
cs
cmp
mov
repz
insl
push
jns
sahf
jecxz
das
in
pop
push
push
hlt
push
xor
cmc
lret
add
mov
lahf
shlb
nop
mov
or
xchg
push
xor
inc
xor
repnz
pop
ret
sub
xor
daa
iret
adc
push
lds
decl
repz
popf
mov
push
lds
sbb
div
mov
mov
pop
fisubrs
jbe
jb
popf
sub
loop
fstpl
gs
mov
cmc
fdivs
je
or
mov
add
addr16
xchg
repnz
xlat
xchg
ror
fcoml
cmp
mov
sbb
sub
mov
jmp
push
andl
gs
xor
push
xorl
and
jmp
push
mov
jle
or
jbe
jns
xor
xchg
or
pop
jp
sbb
lods
imul
pushf
push
or
mov
ret
in
xchg
jne
lds
rclb
gs
test
cli
lahf
mov
popf
call
cmp
int
mov
mov
jecxz
sub
sbb
xor
lds
nop
leave
leave
mov
mov
pop
xchg
cld
stc
xlat
movsb
scas
mov
aad
enter
sbbl
cs
ljmp
mov
test
cmp
push
pop
out
cwtl
cli
insb
popf
lahf
xlat
pop
out
movsb
enter
in
out
jnp
sarb
sahf
mov
stos
xchg
sbb
jp
sbb
push
es
fstpt
popf
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
dec
sarb
mov
adc
lcall
addr16
hlt
test
push
enter
push
cmp
push
les
test
or
in
and
xor
sarl
sete
xor
inc
movsl
inc
adcl
scas
imull
and
out
aad
pop
mov
in
and
or
pop
or
adc
fcom
dec
inc
mov
fdivrl
xchg
xchg
cld
push
outsb
icebp
rcll
out
sbbb
or
xor
test
and
fsubrl
pop
pop
in
pop
iret
lahf
loopne
xchg
in
xchg
int
ljmp
enter
rolb
pop
add
xor
cmp
cmc
pop
lds
pop
inc
scas
daa
adc
fcomip
rcrb
sbb
jmp
cld
sbb
pop
pop
dec
repz
add
jmp
jge
icebp
xor
push
adc
jmp
ja
mov
mov
pop
stc
mov
lcall
mov
sub
out
shlb
mov
scas
push
bound
cli
sub
sbb
pop
loope
mov
mov
jo
lock
out
ja
adc
dec
mov
mov
scas
xor
aam
nop
jle
cs
ss
ret
lcall
jl,pn
cmp
mov
lret
flds
test
cltd
or
and
xchg
mov
into
mov
dec
fisttpll
outsb
dec
fcmovne
jbe
pop
push
cmp
push
mov
cmp
adc
push
push
clc
sti
loop
and
std
bound
pop
ljmp
dec
push
int3
dec
test
and
xor
pop
dec
sub
ljmp
xor
iret
push
sub
inc
movsl
xor
out
jae
insb
bound
mul
sbbb
jbe
scas
loope
xchg
xchg
inc
mov
into
repz
add
out
cmp
mov
daa
add
jae
jns
pop
adc
rorl
test
xlat
sub
stc
jp
rcll
xchg
clc
inc
mov
fcomps
mov
adcb
push
pop
xchg
loopne
rol
out
fistl
mov
xor
jmp
pop
mov
xor
dec
sarl
fcomps
push
xchg
xorb
dec
push
orb
jnp
and
ja
outsl
imul
adc
sti
inc
mov
ret
push
sbb
mov
or
mov
add
frstor
subb
out
popa
fs
bound
dec
xchg
mov
adc
jb
sub
rcll
push
mov
mov
mov
ds
into
mov
lods
xor
push
mov
fisubl
daa
dec
subb
mov
pop
pop
mov
inc
insl
insb
movsl
xchg
add
push
std
dec
pusha
xchg
or
gs
aad
sahf
shl
mov
or
sti
mov
popa
add
scas
sbb
stc
cmp
adc
stos
mov
sbb
jecxz
popf
sbb
in
jmp
pop
rcrl
cmp
dec
das
repz
mov
lret
xchg
push
sub
ljmp
add
test
mov
popa
inc
inc
es
popa
and
push
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
setns
int
adc
out
imul
push
or
pop
int
adc
cmp
jo
cs
inc
out
lods
push
cld
add
popa
test
and
imul
test
cld
das
inc
sbb
ss
pop
push
das
adc
xchg
push
and
stos
mov
mov
lds
leave
lahf
test
push
in
rcrb
pop
cltd
push
jecxz
dec
repz
shlb
jns
pushf
mov
repz
and
lock
jmp
sbb
jo
addl
or
cvtpi2ps
aad
and
divl
insl
xchg
dec
mov
pop
sub
cmp
jnp
mov
or
mov
jns
dec
ljmp
jl
fst
xor
push
sub
mov
dec
xchg
cmp
xorl
imul
xorl
cmp
into
scas
sbb
fwait
sub
mov
imul
xor
aad
inc
pop
sbb
add
adc
imulb
sbb
mov
fst
pop
fnstsw
pop
sbb
repnz
fs
jl
push
xchg
mov
ljmp
cld
fidivrl
xchg
out
outsl
xchg
mov
fidivrl
mov
out
pushf
int3
lret
out
jge
bnd
icebp
mov
mov
mov
mov
fldl
cmpb
sbb
pushf
call
cmp
sub
out
icebp
rcll
mov
mov
pop
int3
jp
imul
xchg
sti
sbb
inc
leave
adc
inc
push
xlat
pop
sbb
sub
out
ret
js
pushf
repz
fwait
add
mov
aam
xchg
xchg
jns
mov
mov
adc
sbbb
xor
mov
fninit
dec
inc
or
adc
ret
xchg
sub
mov
enter
sub
xchg
enter
iret
enter
jns
inc
add
jns
movsl
or
inc
aas
cli
aam
pop
cld
sub
in
mov
addb
push
push
test
pop
cmp
clc
out
shlb
clc
mov
cmpsb
push
movsl
daa
insl
pop
add
sbb
or
fsubs
int
jo
mov
mov
cmpb
push
lods
sbb
pushf
test
jae,pt
sahf
mov
pop
inc
mov
sbb
repnz
jp
jb
jmp
push
lock
and
xor
inc
test
xchg
repz
loope
jnp
test
stos
jnp
cmp
lahf
sbb
scas
shl
dec
in
push
inc
adc
test
push
cmp
mov
or
pop
aas
xor
into
xchg
dec
int3
push
mov
ss
jl
andl
movsl
or
stos
sub
fstl
add
outsl
fdivs
push
add
mov
test
add
out
lret
into
mov
sbb
jnp
add
add
jmp
mov
jb
xchg
dec
scas
jle
mov
jno
jl
xchg
jno
notl
pop
out
call
roll
jecxz
jecxz
hlt
cmp
loopne
mull
sbb
add
fistl
dec
jbe
adc
jnp
ss
add
nop
daa
ja
pop
call
jl
adc
sbb
mov
roll
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
mov
shrl
adc
movsb
test
xchg
mov
inc
cmp
lahf
aam
pop
movaps
faddl
mov
xor
cwtl
mov
jmp
jge
movsl
jl
ds
maxps
push
jo
xor
inc
loop
mov
test
adc
pop
lret
adc
outsb
mulb
inc
fdivs
mov
out
in
jns
xor
daa
mov
push
pop
pop
mov
scas
inc
inc
pop
fsubrl
cmp
pusha
inc
lret
and
mov
and
add
fucomp
sbb
and
sbb
enter
inc
push
mov
xlat
cmpsb
aaa
cwtl
aaa
push
daa
popf
mov
mov
scas
pop
das
sub
sub
push
into
jl
sbb
xchg
ret
add
adc
pop
dec
or
adc
push
xchg
mov
rcrb
das
mov
sbb
add
jp
les
xor
add
sbb
adc
out
mov
call
sub
cmp
xor
cmpsb
and
ret
lods
mov
jbe
sarl
jnp
xchg
fsubl
ss
aaa
adc
mov
shlb
loopne
outsl
xchg
outsb
push
icebp
rcrl
data16
inc
xor
jbe
lret
dec
lods
cmp
dec
hlt
dec
bound
sbb
mov
jg
lret
pop
cltd
sbb
and
cmc
sub
mov
push
push
jb
mov
inc
cltd
stc
push
mov
xchg
loopne
imul
and
mov
out
cmpsl
inc
push
shrl
fisttpll
or
into
sti
push
sub
mov
movb
push
loopne
pop
les
sbb
push
sub
and
jle
add
shlb
xchg
sub
cmp
stc
aam
inc
loop
xor
jbe
xchg
cld
cmp
pop
sbb
sbb
pop
inc
or
and
inc
jl
mov
sbb
xchg
mov
test
mov
adcl
adc
mov
and
sub
dec
clc
iret
pop
dec
test
xchg
and
sub
mov
xchg
xor
scas
testl
jmp
xchg
shlb
xlat
loop
std
pushf
fs
addr16
xchg
shl
andl
sbb
pop
sbb
xor
mov
mov
lea
or
sbb
mov
hlt
data16
shrl
inc
push
push
das
frstor
out
icebp
out
xorl
pop
rorb
sub
fwait
cmpsl
lret
std
jg,pn
jmp
mov
xor
inc
sbb
je
xor
or
daa
push
sub
movsl
mov
lods
cwtl
dec
jno
dec
ds
ficoml
adc
pusha
js
sahf
adc
sub
adc
jmp
mov
fimuls
mov
loop
dec
and
out
sbb
jmp
aad
aas
loope
jl
idivl
inc
adc
add
push
out
imul
fsubr
pop
push
ds
jne
xor
mov
flds
sub
push
xchg
loop
push
lret
cmp
stos
fdivrp
push
movsb
inc
push
or
and
xchg
mov
xchg
scas
mov
shlb
mov
sbb
sub
dec
xchg
ja
es
mov
cmpsb
test
int3
jp,pt
cli
mov
adc
les
inc
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
and
stc
jle
mov
adc
xor
sub
mov
test
rep
xchg
js
push
pop
jae
fldcw
pop
cld
icebp
movsl
adc
add
add
into
add
addl
sub
or
pushf
push
fistps
jne
xchg
cld
xor
mov
inc
sarl
sarb
sbb
push
dec
pushf
sub
cmc
les
sti
lcall
faddl
rolb
daa
jecxz
jae
sub
mov
hlt
xchg
sahf
test
xchg
mov
imull
icebp
dec
subl
adc
jge
push
popl
xor
scas
es
pop
pop
xchg
cmp
add
ja
push
mov
xchg
sub
movsl
in
es
dec
int3
fmulp
mov
insl
jnp
adcb
pusha
mov
jecxz
ljmp
mov
incb
negb
pop
dec
jp
outsl
rcll
cmp
push
xor
pop
and
jg
fwait
and
mov
repnz
jmp
scas
hlt
and
out
push
cmp
jmp
inc
sbb
or
add
dec
sahf
mov
push
jl
fstpl
popa
movsb
push
cmp
mov
cmp
daa
dec
mov
js
ss
repz
pop
mov
push
push
sbb
xor
mov
adc
roll
fimuls
adc
pop
in
xchg
push
fnsave
jle
jmp
aam
add
imul
mov
mov
mov
pushf
cmc
adc
jmp
fstpl
xor
std
loope
sbb
popa
push
lods
out
add
xor
arpl
test
sarl
sub
mov
ret
push
pop
dec
jl
mov
aas
out
xor
fcoms
imul
or
out
in
pop
orl
ja
bound
fstps
xchg
push
sahf
and
inc
call
or
sub
push
sar
icebp
inc
sub
mov
xor
mov
mov
mov
add
push
aaa
dec
lret
aad
sbb
jmp
in
int3
repz
int3
cmpsl
xchg
insl
lahf
hlt
sub
push
cmp
insb
mov
cmp
inc
mov
add
dec
mulb
jge
icebp
push
adc
sub
xchg
pop
sub
rcrl
xor
scas
shr
jns
sti
icebp
cmpsl
lret
mov
jne
loope
test
popf
push
cmp
mov
out
mov
or
pop
repz
jns
shll
push
xchg
sub
enter
and
xchg
mov
inc
xchg
dec
imul
jg
jge
lea
and
sub
js
cmp
es
sub
jo
and
and
push
lea
mov
lcall
ret
sahf
popf
push
dec
loope
ds
mov
data16
hlt
mov
cmp
hlt
pop
jge
aas
and
and
dec
or
and
inc
mov
xchg
pop
ret
and
sbb
jl
jecxz
push
or
rorl
xchg
mov
ret
mov
dec
sub
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
cltd
jp
sub
adc
adc
subl
jnp
sbb
mov
arpl
pop
pop
clc
xchg
jae
mov
pop
sub
and
loop
sub
add
lahf
scas
cmpsb
push
mov
in
enter
sti
popf
sbb
loop
jnp
jns
add
push
push
mov
push
dec
mov
push
or
int
pop
xorl
dec
xor
sbb
push
or
hlt
pop
dec
lods
jne
fwait
and
data16
push
lret
cmp
push
int
dec
mov
mov
sub
imul
popa
sbb
iret
and
push
fsubl
call
cmc
sbb
lahf
aas
xchg
lods
pop
cs
add
or
jp
aad
rcr
insb
adc
add
js
xor
cld
mov
pop
ljmp
sbb
adc
repz
loope
and
and
cmp
fldl
jae
daa
adcb
addr16
std
jb
ret
sahf
insl
adc
bound
dec
popf
pop
jne
mov
mov
cmp
hlt
shll
loop
scas
sub
xchg
mov
mov
xchg
ljmp
and
xchg
into
lcall
pop
loope
mov
or
add
adc
adc
das
std
outsl
add
lods
iret
stc
pushf
in
mov
or
sub
jno
cmpl
outsl
xchg
xor
push
mov
ds
insl
xchg
aas
dec
pusha
lret
jge
mov
jmp
pop
jmp
addl
mov
lret
aas
cld
add
cltd
push
pushf
jo
and
cli
aaa
stos
mov
clc
push
cwtl
pop
cmp
mov
add
sub
in
cmp
mov
mov
stc
xchg
pextrw
arpl
add
sub
mov
xchg
cltd
lods
sub
sbb
cmc
insb
xchg
cwtl
pop
mov
pop
sbb
xor
add
push
jne
mov
sbb
push
les
stos
lret
aam
inc
scas
les
stos
lea
cmp
lahf
jno
int3
daa
pushf
push
adc
shll
pop
sub
imul
outsl
mov
and
fcoml
mov
in
push
hlt
arpl
ret
imul
adc
push
push
cmpsl
je
sub
dec
xchg
mov
push
mov
loop
sbb
shrb
xchg
pop
and
js
stos
fsubrl
stos
push
mov
outsl
inc
mov
jo
icebp
int3
sub
and
movsb
mov
pop
mov
repz
hlt
jmp
insb
popa
js
xchg
push
cmpsl
out
cwtl
xchg
fnsave
out
aam
dec
cs
std
mov
push
jp
xor
mov
cmpsb
mov
shrl
imul
stos
mov
sub
mov
dec
adc
hlt
je
mov
repz
mov
sti
xor
push
jp
ds
cmp
fisttps
add
jecxz
mov
jmp
int
adc
jae
push
fs
fldcw
inc
out
mov
jbe
testl
pop
mov
jmp
and
or
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
xor
push
call
lock
cmp
xor
adc
mov
sub
jne
cmp
push
or
je
jbe
popa
std
xor
mov
test
scas
jle
sub
xchg
sbb
mov
xor
xchg
test
add
lock
add
mov
xor
jne
jl
shrl
sub
lret
test
jle
pop
vandnps
add
addb
js
mov
rcl
cmpsl
pop
push
push
mov
popf
lods
fidivl
xor
lcall
repz
and
adc
rol
enter
sub
cwtl
not
stos
fistpl
pop
xor
cld
mov
xchg
jle
and
movsl
push
insb
pop
pop
loopne
orb
out
out
mov
add
push
int
jecxz
jno
add
dec
loope
inc
ficoml
push
pop
shrl
out
enter
mov
mov
out
sub
cmp
push
mov
das
sbb
push
add
pop
mov
jp
xchg
pop
movsb
mov
xchg
jmp
jo
jmp
out
sti
and
imul
jno
cmp
ret
lock
xor
pop
mov
mov
jecxz
outsl
test
cmp
cwtl
push
pop
cmp
xor
inc
fbld
dec
push
stc
sbb
stos
push
push
enter
call
xchg
xchg
pop
ja
imul
or
js
insl
fwait
cli
mov
adc
push
add
call
cmp
adc
loopne
sub
ret
jns
cmp
movsb
mov
sub
sub
sahf
aam
loop
xlat
movsb
jno
push
jbe
dec
cmp
jl
or
inc
sbb
and
adc
bound
lcall
test
roll
push
loope
sub
sarb
adc
jmp
fisubl
cmp
imul
cltd
xchg
icebp
mov
popfw
in
lds
jp
push
nop
pop
test
lods
dec
push
mov
rorl
enter
ljmp
add
xlat
or
dec
iret
lret
xlat
fwait
push
pop
cmpsl
jl
jge
or
mov
lods
cld
scas
dec
loope
cs
mov
xor
nop
ljmp
scas
scas
add
fstl
pop
insb
jge
lcall
test
mov
mov
sti
sub
mov
or
adc
dec
mov
mov
dec
leave
mov
inc
adc
stos
jno
cmp
jge
add
aaa
add
add
xlat
movsb
outsl
pop
repnz
and
popa
daa
inc
add
insl
incb
fiaddl
add
icebp
stos
sbb
test
xchg
cmpsl
mov
mov
fisubl
ret
push
xor
inc
divb
adc
rcll
cmpsb
dec
jl
adc
mov
cli
in
in
jmp
sbb
imul
and
push
mov
int
or
clc
jb
addr16
xchg
sub
imul
lds
rcrl
xchg
add
cmp
daa
dec
lock
xor
jle
icebp
mov
cmp
mov
fldcw
clc
rolb
rcl
test
test
sub
es
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
fs
mov
adc
adc
adc
push
out
adc
mov
sbb
int
cmpsb
add
add
pop
cwtl
stos
lea
adc
sub
leave
mov
enter
inc
dec
xchg
mov
and
lret
leave
loope
testl
shlb
loope
sub
dec
xchg
loopne
push
inc
sub
ficoms
jmp
fsts
enter
xlat
sub
push
sbb
js,pn
jmp
mov
hlt
jmp
push
and
imul
popa
dec
xchg
mov
loop
cmc
xor
jns
mov
les
or
test
mull
adc
shl
push
jp
das
add
inc
cmp
fldl
stos
push
sti
pusha
or
in
popf
mov
jb
cmpsb
mov
and
cwtl
dec
inc
mov
pop
mov
daa
cltd
loopne
dec
lods
popf
sahf
ja
loopne
inc
xchg
xchg
add
rolb
mov
and
fs
faddl
addr16
xchg
fadd
mov
mov
iret
out
add
xchg
sub
das
sbb
andb
or
test
add
push
leave
dec
cltd
lahf
rorl
aam
scas
outsl
cwtl
lret
or
sti
mov
jl
mov
dec
ljmp
les
flds
push
add
ja
mov
mov
rolb
popa
loop
das
sub
pop
lds
loopne
add
ljmp
pop
fimull
mov
lods
nop
in
icebp
or
test
outsb
aas
enter
push
jnp
inc
movsb
mov
leave
aas
gs
or
pop
addb
imul
inc
fistpll
adc
pushl
sub
int
aam
inc
das
cltd
add
jnp
repnz
sub
or
dec
int
pop
inc
mov
cmp
inc
adc
out
cmc
xor
sub
jae
adc
xor
pop
mov
jbe
mov
xor
cmpsl
xchg
test
pop
xchg
push
inc
or
mov
inc
adc
stos
pop
xor
mov
lock
scas
jle
mov
rcl
pop
sbb
inc
pop
pop
push
mov
outsb
pop
call
and
pop
rcr
jg
push
push
mov
jl
insl
mov
fcmovnu
adc
jb
mov
ficomps
mov
xor
insb
pop
imul
subl
es
adc
adc
or
pusha
cwtl
and
sbb
arpl
neg
push
outsl
add
adc
enter
inc
cmp
fsubrs
pop
and
pop
sbb
in
sub
cmc
sbb
inc
xchg
gs
sbb
dec
call
xlat
filds
cmovle
push
leave
test
push
popa
ret
sbb
insb
insl
fcoms
shlb
into
adc
inc
fistpl
lock
mov
cmc
and
aad
movsl
jg
lds
push
jbe
test
gs
or
and
sub
ret
fidivl
jo
andb
cmp
pop
lods
add
adc
aaa
jmp
inc
ss
xchg
mov
insl
or
xchg
adc
or
int3
pop
pop
sbb
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
lods
xchg
jle
test
adc
adc
adc
pop
bound
aam
mov
inc
imull
add
pop
clc
shrl
pusha
pushf
loope
inc
pushf
int3
jno
jl
ror
and
sub
outsl
scas
xchg
jbe
mov
int3
dec
xor
or
sbb
cltd
in
push
push
mov
sub
js
xchg
mov
and
mov
inc
cmovae
idiv
cmc
fs
jp
sbb
push
mov
adc
push
mov
cmpsl
dec
fwait
in
mov
int
sbb
stos
pusha
dec
fmull
test
dec
stos
or
jbe
jae
aad
lods
xchg
xor
fildll
shr
cmp
xchg
stc
fwait
daa
pop
ss
push
in
mov
adc
push
insb
xchg
imul
cwtl
pop
test
daa
orl
daa
ficoms
inc
aad
sbb
cmpb
push
test
jge
ss
xchg
out
mov
stc
mov
push
inc
mov
mov
js
call
dec
xchg
outsb
aad
sub
out
cld
in
hlt
pop
popa
cmp
fisttpl
lock
xchg
sub
xlat
shlb
xor
inc
and
mov
or
stc
icebp
scas
push
push
fisttpll
add
jbe
sub
or
popf
rcll
xor
mov
pop
push
test
add
inc
push
pop
jnp
fisubs
cmp
pop
sub
into
cmp
nop
lcall
or
fs
cltd
adc
js
mov
add
loop
fcomi
mov
jo
addr16
jle
test
add
push
divb
dec
test
fs
addr16
ret
cli
fiaddl
lea
jge
mov
movsb
inc
pop
add
clc
adc
repz
sti
iret
pushf
popf
pop
roll
and
jmp
divl
icebp
out
fcomps
icebp
or
adc
pop
aam
imul
add
xchg
jnp
or
lret
jp
and
sub
mov
push
mov
cmp
jl
and
pop
cmpl
repnz
mov
in
pop
pop
into
mov
push
xor
jecxz
adc
ficomps
dec
or
mov
aad
or
repnz
add
mov
or
jle
add
mov
incl
and
cs
sbb
or
xor
lods
test
popf
mov
dec
imul
xchg
mov
push
pop
inc
cmpsb
clc
jne
pop
es
or
jns
pop
loop
jb
adc
fldenv
fwait
xchg
push
adc
inc
jp
out
adc
and
into
setbe
and
xor
sub
rolb
xchg
inc
pop
mov
test
int
ret
push
mov
mov
loope
push
imul
xchg
or
xchg
add
add
pop
jns
and
jp
aam
in
insl
mov
xor
imul
mov
not
in
aas
pusha
mov
adc
sbb
xor
insl
inc
add
jl
rol
mov
and
div
fwait
mov
mov
inc
push
sbb
hlt
outsl
sbb
outsl
repnz
test
sbb
xorb
in
sbb
jmp
push
pop
mov
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
inc
arpl
push
jl
adc
adc
adc
std
mov
scas
cmp
jno
jb
jl
cmc
push
test
xchg
int3
das
clc
sbb
or
dec
inc
popa
addr16
jno
dec
push
sub
sub
insb
movsl
cmc
lret
mov
fwait
fwait
out
jb
adc
jle
mov
cmp
cmc
idivl
loope
or
mov
xor
aas
into
add
lods
push
mov
sbb
shl
pushf
cltd
and
inc
or
aam
fsubrl
push
ret
sub
int3
pop
and
inc
push
sub
jmp
in
mov
cmp
pop
xor
mov
or
roll
hlt
jne
adc
mov
int
jnp
adc
mov
mov
dec
mov
xlat
push
imul
fsubs
aad
lods
lods
dec
mov
fsubs
out
dec
xor
sbb
mov
add
mov
jns
mov
adc
fwait
roll
jnp,pn
fcmovne
mov
push
mov
pop
ret
cmp
inc
sub
hlt
mul
test
shl
cmp
push
sub
rcl
sbb
xchg
inc
jl
fldcw
ljmpw
lahf
stc
mov
jmp
lret
in
arpl
sbb
xor
xchg
pop
inc
and
mov
out
cmp
xor
add
pop
and
push
fwait
xchg
add
cwtl
imul
mov
xchg
in
mov
lret
out
adc
xchg
ret
jl
sbb
cmp
cmp
cwtl
repz
mov
adc
or
mov
jne
xor
xchg
xor
push
xchg
or
mov
and
lcall
add
xchg
push
movsb
es
es
inc
and
or
cmp
ret
xor
push
daa
test
inc
push
mov
scas
mov
enter
cmp
pop
ret
xchg
ljmp
jbe
jg
pop
mov
bound
pop
mov
and
jbe
fimull
test
std
imull
sbb
jge
rorl
iret
cmp
sub
fdivl
mov
jno
mov
nop
cmp
outsl
jns
xorl
mov
add
mov
mov
ds
mov
dec
mov
cmp
add
jnp
mov
and
loop
cmp
sbb
pop
xchg
mov
icebp
icebp
mov
sub
cld
iret
jns
das
sbbb
add
rep
test
xor
lret
adc
testl
iret
mov
jne
movsl
dec
es
inc
fidivs
mov
movsb
pop
fildl
xchg
jmp
shrl
inc
out
cld
scas
cmp
xchg
pusha
mov
mov
adc
and
push
push
ficomps
dec
mov
push
into
ffree
push
outsb
lock
ror
push
in
ss
push
pusha
push
or
pop
aad
shr
std
ds
xor
ret
in
push
out
adc
rorb
cmp
and
pop
ljmp
mov
cmp
lods
lcall
fcmove
mov
cmpsb
sub
push
gs
push
jge
nop
cli
lock
xchg
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
movsl
xorl
je
adc
adc
adc
fwait
popf
loopne
dec
add
or
dec
fwait
jg
repz
in
and
or
push
mov
mov
sub
ret
push
inc
cs
ret
jnp
cmpl
pop
pop
lods
std
jle
sub
cmp
movsb
mov
xchg
mov
or
pop
cmpb
mov
cmpsl
movsl
push
cs
pop
loopne
stos
dec
and
cli
stc
out
mov
lods
mov
ljmp
inc
pop
xchg
enter
jnp
outsb
push
lcall
out
jne
mov
into
fidivl
xor
inc
push
cmp
pop
add
push
push
xchg
out
adc
and
inc
jns
iret
test
divl
test
jge
xchg
gs
fwait
xor
mov
sahf
mov
lcall
nop
in
or
mov
addb
cli
sbb
clc
ljmp
sub
pop
mov
arpl
jge
fdiv
xor
mov
sbb
stos
les
lret
popa
fdivrs
jge
dec
out
lods
jp
dec
cli
das
or
test
xchg
xchg
cmc
popa
mov
mov
xchg
movsl
mov
popf
in
jns
aas
fwait
cmp
mov
out
sbb
pusha
ja
and
sub
in
cli
into
sub
lcall
iret
adcb
inc
xor
cmpsl
mov
pcmpeqb
cmp
sub
jnp
push
js
sbb
adc
push
jle
mov
scas
lock
jnp
xchg
mov
cmp
rcrl
rcl
fucomi
stos
ljmp
sbb
pusha
pop
fs
mov
fld
hlt
pop
fnstsw
int
loope
outsb
movsb
data16
xchg
mov
fdivrp
pusha
ja
adc
mov
mov
adc
xchg
dec
xorl
mov
sbbl
mov
cs
lock
clc
es
dec
mov
decb
pop
push
imul
mov
sbb
dec
hlt
scas
loope
out
add
push
lcall
xchg
mov
jae
cmpsb
lds
int3
jae
and
pop
lret
xlat
xchg
int
mov
xchg
jns
jne
test
mov
or
fidivs
or
imul
insb
js
sbb
push
test
out
lret
push
mov
push
xchg
mov
mov
test
mov
in
fwait
fwait
aaa
xor
inc
imul
inc
imul
mov
sub
andb
adc
aas
sbb
js
cmp
inc
push
arpl
jnp
in
add
dec
popf
fistpl
out
lea
popf
subl
pop
mov
adc
mov
lahf
cltd
ret
loope
mov
jb
sbbb
lods
mov
xlat
and
or
movsl
mov
sbb
scas
imul
sbbl
rolb
xor
inc
xchg
outsl
xlat
pop
inc
aaa
lods
dec
mov
cld
daa
in
test
fists
xchg
pop
sub
repnz
ss
jbe,pt
ficoms
xor
pop
roll
jg
mov
gs
icebp
xchg
sub
lcall
sbb
jo
loop
inc
sub
incl
pusha
sbb
sbb
sbbb
shl
cltd
inc
inc
ljmp
dec
add
gs
shrd
jmp
ja
jle
sub
xchg
mov
or
js
jb
adc
adc
adc
jnp
fists
mov
mov
gs
lods
and
lret
movsl
dec
hlt
enter
nop
jne
enter
mov
pop
out
dec
cmp
or
dec
xlat
insb
cmpsl
sbb
push
aaa
in
pop
in
jne
sub
fwait
aam
inc
jmp
roll
loopne
xor
lock
pop
std
nop
outsb
dec
scas
ret
aam
jae
push
popa
mov
aaa
sahf
inc
cwtl
repz
mov
sbb
sub
sahf
call
es
xor
sarb
daa
in
fstpl
scas
ror
adc
icebp
sbb
adc
scas
outsl
std
popa
stc
pop
dec
pop
inc
add
sub
bound
insl
xchg
fs
pop
stc
xor
pop
or
js
sbb
pop
nop
ja
mov
mov
push
hlt
gs
mov
jmp
xchg
jo
dec
insl
and
xlat
adc
push
jbe
xor
js
mov
jl
cmp
or
out
and
push
jno
sub
mull
insl
nop
mov
jnp
push
pop
push
cmp
add
fldt
dec
pop
jmp
subb
mov
or
xchg
arpl
inc
cmpsl
out
add
loopne
mov
lock
rcr
mov
dec
xor
inc
imul
arpl
movl
pop
push
in
into
mov
addb
inc
dec
jecxz
inc
outsb
pop
sbb
inc
js
in
aam
or
xor
scas
cwtl
cld
fimuls
jle
pop
mov
rol
pop
or
mov
add
pusha
loope
add
pop
adc
sbb
jbe
xchg
lret
insl
gs
inc
and
mov
shll
mov
mov
insl
stc
mov
push
popf
addr16
out
in
int
daa
sbb
les
or
add
adc
mov
add
sub
mov
test
repnz
into
lods
push
inc
std
cltd
dec
mul
out
mov
orl
subl
mov
cmp
mov
gs
push
jg
pop
mov
fs
or
dec
or
cli
push
or
stos
mov
mov
hlt
cmp
je
movsb
iret
push
inc
out
jmp
jmp
stc
mov
inc
mov
or
ret
iret
xchg
jecxz
pop
dec
fidivrs
xor
push
cwtl
inc
mov
sub
sbb
add
sub
fwait
sub
mov
stos
pop
cwtl
adc
test
xchg
mov
pop
shr
stos
outsb
jbe
add
push
jns
movsb
mov
inc
push
inc
cli
adc
pop
xchg
pop
into
jno
mov
aaa
out
push
or
or
ljmp
xchg
mov
mov
sub
subl
enter
sti
push
ret
je
xchg
sub
or
inc
mov
sbb
mov
push
jbe
jle
fadds
push
cmp
push
xchg
add
jmp
stc
pop
sub
addr16
add
fisubrs
sbb
cmp
push
cmp
jnp
js
popf
out
movsl
sub
xor
rol
sbb
push
or
jb
mov
stos
mov
xor
les
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
cs
jbe
and
adc
int
adc
cmpb
push
push
fabs
jmp
and
and
sbb
rcl
pop
out
push
sarb
into
xchg
cmp
jecxz
inc
pop
mov
jne
mov
test
std
mov
sbb
rcll
mov
mov
inc
decl
mov
xchg
rcl
fchs
test
in
popa
mov
enter
out
data16
lods
into
cld
fdivr
cs
and
fcmovb
jmp
ss
out
ret
sub
push
add
stos
push
rcrb
call
adc
mov
cmpl
aaa
adc
sbb
es
out
lods
mov
cmpsb
fwait
mov
leave
fs
lret
scas
or
std
push
xor
and
push
fstl
js
scas
dec
cli
push
lds
sbb
sub
cmpsl
dec
fchs
sub
inc
pop
push
aam
inc
or
mov
push
pop
cld
push
scas
push
shl
inc
jmp
out
push
es
pop
add
jl
leave
jmp
sub
sahf
loope
mov
cmp
out
std
cmpsb
jb
pop
add
fsubrl
sub
or
sahf
jge
data16
jno
jg
rolb
jecxz
sub
bound
test
aam
and
cmp
push
jne
xor
cmp
pop
sbb
ja
add
subb
sbb
mov
popf
and
jne
iret
shrd
sbb
adc
xor
test
test
out
xchg
jb
dec
jg
push
fwait
aam
inc
inc
xlat
xchg
stos
cwtl
addr16
or
leave
test
aad
addb
or
mov
in
mov
pop
shrl
push
or
inc
subb
push
inc
pop
sahf
fildll
jge
out
jno
dec
sub
pushf
hlt
popa
push
sbb
lcall
nop
add
pop
sub
aam
cli
ljmp
inc
xchg
stos
push
fisubrs
sub
add
mov
out
xor
dec
stos
sbb
mov
xchg
push
pop
icebp
mov
das
icebp
in
mov
mov
idivb
inc
dec
clc
xchg
push
xlat
loope
loope
data16
mov
mov
les
inc
test
rcr
popf
stos
inc
xor
add
fldcw
and
mov
cmp
and
add
push
test
xchg
cmp
aad
popa
sub
sbbb
jge
jbe,pn
or
sbb
push
push
add
mov
push
out
aam
xchg
aas
bound
xor
sbb
sbb
iret
add
pop
lds
and
xchg
jecxz
dec
sub
push
push
mov
add
lahf
test
popl
push
and
lea
push
int
adc
in
cld
adc
push
jle
adcb
pop
jno
lahf
xorl
xor
or
push
jge
pushf
mov
lea
dec
pop
out
mov
sub
jae
sub
testb
pop
loope
test
xor
in
sub
fisubl
adc
adc
adc
adc
and
dec
dec
push
dec
pop
lret
cmpsb
lds
sub
push
and
jmp
fbld
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
mov
mov
fisubs
adc
adc
or
mov
and
push
xor
or
js
inc
xchg
mov
pop
xlat
sahf
lods
test
cmp
jg
sbb
out
mov
sbb
mov
ss
cld
mov
mov
mov
pop
mov
roll
int
sub
lods
sub
push
jge
pop
dec
subl
outsb
dec
icebp
or
pop
rclb
cmp
xchg
pop
jb
pop
hlt
ljmp
std
icebp
xchg
cs
sbb
in
mov
push
xchg
sbbb
mov
shrl
mov
test
in
jg
in
adc
xchg
mov
mov
icebp
aam
fdivp
mov
xchg
mov
push
pop
or
pop
jne
or
inc
xor
adc
shl
pushf
push
xchg
das
jg
jecxz
pop
jne
mov
mov
pushl
mov
dec
outsl
mov
dec
sub
out
jns
inc
mov
dec
int
loop
sbb
push
sahf
test
push
pushl
inc
dec
repnz
sbb
mov
mov
and
xor
rclb
add
jle
fwait
insb
jl
movsb
call
inc
mov
out
addb
into
hlt
inc
sub
ss
fcom
movsl
clc
or
fwait
mov
cs
add
xor
sub
mov
adc
ss
and
xlat
std
divl
sti
jno
adc
movsb
or
adc
dec
mov
setle
cmp
in
pop
mov
jp
inc
dec
ret
test
fstps
inc
je
sbb
and
push
lret
lea
imul
and
jg
adc
imull
leave
je
jp
xorb
jmp
out
enter
jmp
pop
push
scas
pop
hlt
inc
in
sbb
hlt
pop
xchg
subb
adc
xchg
cld
mov
xchg
aas
ljmp
push
andb
sub
mov
insl
test
mov
mov
xchg
add
scas
addr16
push
ret
xor
adc
xor
jge
mov
add
and
mov
cmp
out
fsubl
pushf
push
out
inc
mov
movsl
stc
xor
or
adc
iret
push
push
add
roll
shl
pop
scas
stos
pop
dec
pop
cltd
push
ds
subl
jl
or
pushf
push
jnp
jb
jbe
pop
hlt
data16
dec
hlt
fmull
pushf
pop
arpl
ror
rolb
push
mov
xchg
sbb
pop
out
aas
adc
push
scas
bnd
add
mov
push
push
movsb
add
adc
xchg
std
jp
add
je
dec
jp
dec
sti
iret
enter
out
testb
mov
inc
subb
cld
push
xchg
dec
fmul
add
add
pusha
sti
add
cs
or
lock
idiv
xchg
or
mov
mov
pop
push
cmp
inc
push
loopne
hlt
lods
pop
and
outsb
fbstp
dec
adc
lods
xor
fadds
cmp
enter
pushf
add
rorb
fs
jmp
inc
xor
sub
mov
mov
sub
xchg
inc
imul
mov
cld
std
mov
popf
rcr
cmp
out
mov
iret
cmp
push
imul
nop
lock
fcmove
cmpl
mov
lock
pop
or
sub
div
cmp
add
push
or
xor
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
mov
adc
pop
adc
xor
adc
jb
pop
sbb
mov
mov
ss
cmp
frstor
lea
repnz
gs
cmp
les
adc
daa
cmc
addr16
scas
jmp
mov
mov
push
sub
inc
sbbb
mov
enter
es
leave
jno
sbb
or
xor
jnp
outsb
pop
or
nop
sub
pop
and
pop
cmp
dec
pop
shl
addr16
mov
dec
cltd
repnz
in
adc
jbe
cwtl
xlat
pop
movsb
pop
fbstp
imul
into
shll
cmp
arpl
push
xor
jb
addr16
fstps
jmp
rorl
jecxz
mov
call
ret
mov
imul
xor
gs
scas
sbb
jbe
and
divl
shll
jns
cmp
jbe
in
es
fimull
adc
jg
out
or
dec
sbb
scas
mov
mov
push
ret
add
add
mov
aaa
sbb
test
rcll
das
dec
mov
jle
xor
cmp
add
call
movsl
repnz
cmp
mov
sub
lods
movmskps
push
adc
pop
cmp
xchg
ret
jle,pt
jmp
aad
hlt
pop
sub
push
mov
popa
jb
dec
gs
sbb
mov
les
xor
lea
dec
pop
lret
dec
bound
inc
iret
fistps
and
mov
push
fcmovb
cltd
imul
add
je
inc
jnp
xorl
paddb
dec
shll
andl
std
sbb
das
and
mov
movsb
dec
das
cs
and
mov
cmp
loopne
insl
stc
imul
fmulp
or
sti
into
enter
mov
add
bound
jb
stc
jnp
cld
push
cmp
jl
pop
dec
push
out
data16
push
cs
shl
shrl
xor
rol
jle
das
sub
inc
cltd
xor
xlat
pop
stc
push
int3
enter
insl
aaa
cwtl
movsl
pop
fidivrs
or
lahf
cmpsl
xchg
out
xorps
xor
icebp
out
rclb
sub
or
popl
movsl
mov
orl
lea
leave
repz
ja
pop
loop
lds
jle
sub
lcall
xchg
push
sbb
or
or
push
pop
out
nop
xchg
jge
fcompl
sarl
xchg
push
mov
out
iret
inc
test
jmp
frstor
out
xor
fistl
popa
adc
lahf
and
jo
jns
orb
aad
inc
lds
addl
jne
pop
mov
test
lcall
pushf
iret
sahf
fyl2x
xchg
mov
xor
ret
inc
mov
jns
inc
fistpll
jp
jno
inc
cwtl
lret
sub
sub
outsl
ficomps
aas
ds
mov
es
jb
sub
xchg
outsl
fdivrs
push
mov
in
ret
sti
sub
inc
cld
jg
mov
mov
lods
iret
scas
inc
add
push
adc
xchg
cs
jbe
push
or
in
popa
mov
popa
lock
lcall
mull
sbbb
inc
punpckhdq
aam
fildll
xchg
clc
ss
jle
or
mov
sub
stc
push
sub
andb
std
scas
leave
jge
sub
sub
mov
inc
lret
mov
scas
lods
loope
pushf
push
fists
mov
pop
xchg
test
mov
enter
out
push
dec
out
push
push
cwtl
jg
cmp
sar
and
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
inc
push
xor
adc
adc
adc
test
push
jae
lret
jne
shrl
and
sub
pusha
loopne
xlat
jb
call
data16
int3
js
insb
cli
mov
jbe
adc
inc
jl
mov
clc
outsb
or
dec
mov
jge
cli
push
out
mov
and
cmp
stc
jo
mov
fcom
push
cmpsb
es
xchg
incl
negl
lds
int
xor
sub
sbb
add
cmc
jmp
add
pop
xchg
dec
les
and
push
ret
std
cmc
outsl
dec
adc
xchg
and
add
dec
mov
mov
xlat
jge
fsubrs
je
jle
mull
inc
xor
and
outsb
add
aam
sub
mov
je
pop
sub
dec
push
arpl
enter
sti
xchg
popa
pop
out
push
mov
fwait
adc
negl
orb
adc
cmp
sub
fdivr
test
pushf
inc
or
outsb
fisubrs
xchg
mov
and
pop
call
xlat
in
jns
sub
mov
imul
jns
mov
xchg
mov
inc
sub
xor
add
popf
cmp
xchg
imul
add
xchg
push
stos
hlt
call
clc
inc
leave
jg
xor
fmulp
movsl
mov
shlb
push
cld
enter
cmc
inc
movsl
jo
pop
pop
pop
sbb
std
out
sub
rcll
or
inc
xchg
es
or
mov
in
push
push
adc
xchg
mov
ficompl
inc
shlb
imul
mov
xor
mov
cmp
in
cmp
jl
sbbl
addl
push
cmp
push
add
sbb
mov
jle
rcrl
adc
xchg
add
mov
aam
test
loopne
adc
pop
ljmp
sbb
pop
pop
out
ja
push
pusha
push
test
ss
andl
int
out
jg
jmp
repz
pop
outsl
sahf
push
sub
mov
pop
mov
les
out
and
cltd
stc
ret
push
pop
mov
mov
js
popa
pop
and
xchg
mov
cld
fldenv
shll
es
dec
add
dec
xchg
dec
movsl
fistpl
push
mov
scas
cmp
xchg
xchg
push
pop
sub
mov
mov
repnz
push
add
inc
icebp
outsl
stc
ss
sti
fnstcw
sub
or
adc
sub
mov
push
jbe
fcomi
mov
cld
mov
fs
xor
cwtl
cmc
faddl
or
mov
in
adc
or
movsb
movsb
pop
cmp
in
xchg
dec
scas
adc
dec
fbld
jb
test
push
and
pop
jae
mov
or
inc
mov
aaa
pop
mov
jge
xlat
clc
push
inc
inc
lea
out
aas
out
lds
dec
add
ret
cmpsl
ljmp
cmp
popf
push
push
add
std
jb
adc
sub
add
dec
mov
mov
pop
mov
and
cmp
cmp
cmp
mov
xchg
push
xchg
xadd
push
xorl
push
pop
mov
sbb
popw
and
aad
test
fnstenv
jle
stos
push
dec
mov
aam
sub
sbb
das
or
mov
or
mov
push
xchg
test
movsl
adc
std
mov
pop
negl
and
adc
pop
inc
lea
rorl
mov
int3
int
add
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
inc
data16
dec
adc
xor
adc
jno
neg
movsl
adc
ljmp
push
xlat
loope
and
jge
addr16
xchg
or
cwtl
aam
jnp
shll
cli
mov
add
jb
mov
cmp
outsb
push
loopne
das
pop
xor
cmpsb
cmc
gs
jmp
sbb
inc
in
arpl
inc
push
cld
add
xor
iret
data16
popf
push
in
fbld
dec
mov
arpl
fldenv
jno
aad
mov
jle
pop
add
mov
in
jecxz
push
dec
dec
ljmp
cmpsb
inc
pop
stos
push
daa
cmp
xlat
setb
insb
aam
out
roll
roll
add
pcmpeqb
test
inc
cltd
jge
xchg
fwait
into
mov
out
out
test
mov
and
jl
adc
push
test
loop
mov
xchg
mov
mov
add
cltd
outsl
out
cli
jle
jbe
ficomps
adc
push
mov
rcl
fwait
dec
loope,pt
xchg
sahf
sbb
xor
xchg
pop
cmp
dec
arpl
push
outsl
icebp
fnstenv
lods
das
cmp
mov
adc
enter
fisttpl
xor
mov
pop
int3
xor
in
mov
out
imul
jne
icebp
adcl
fiaddl
push
or
lock
rorl
aaa
adc
int
pop
dec
enter
add
and
hlt
loope
xchg
sbb
mov
aad
add
pop
loop
push
adcb
cmpl
jb
mov
jne
cwtl
popf
outsb
daa
cmpsl
loop
icebp
push
and
and
jb
cmp
push
adc
lods
mov
leave
mov
insb
adc
pop
std
mov
repz
and
sarl
or
stos
test
jmp
notb
dec
push
push
xchg
cmp
iret
ds
push
mov
jg
add
adc
sahf
and
or
pop
push
inc
xor
jl
stc
daa
pop
xchg
adc
ja
sub
xor
cwtl
xor
pop
jg
std
jge
imul
adc
loopne
xchg
js
lea
imul
mov
dec
fdivrl
mov
xlat
loop
je
push
aas
sbb
push
mov
mov
mov
stos
cmp
pop
notl
mov
shlb
mov
pop
fwait
je
enter
lcall
mov
xchg
push
add
lcall
sarb
mov
and
cs
pusha
out
stos
movb
lock
sbb
aaa
mov
mov
inc
mov
in
cmc
sbb
sbb
sbbl
mov
jne
sub
scas
shlb
inc
fnstenv
gs
pop
xchg
jge
mov
dec
dec
dec
jle
mov
lock
mov
and
or
ficomps
jo
add
test
and
aaa
mov
mov
pop
in
aaa
fnsave
lret
mov
mov
icebp
cmp
jle
inc
lret
push
or
push
mov
or
xchg
mov
sub
or
xor
mov
xor
mov
pop
fnstenv
add
lcall
repnz
cmp
lcall
ds
pusha
cmp
push
mov
pop
cmp
int
rorl
cltd
xchg
mov
cltd
sub
lods
idivb
sbb
lock
cmp
pusha
lret
adc
fstpl
jp
fldpi
inc
iret
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
pop
cmp
mov
or
testb
insb
test
test
jmp
cmp
mov
cmpl
and
mov
mov
add
or
xchg
xor
cmp
jl
cmpl
xchg
loope
cmpsb
dec
cld
data16
sbb
push
mov
mov
pop
scas
or
push
sub
test
dec
fmuls
shlb
ficomps
adc
in
cmp
shrb
mov
insl
arpl
push
ret
test
add
xor
and
cwtl
sub
pop
mov
outsl
xchg
mov
rcr
lret
xchg
stos
dec
lock
xor
mov
fdivs
out
arpl
pop
sub
stos
fs
jno
inc
fcomps
pop
lcall
xor
adc
bound
jge
outsl
jae
adc
mov
pop
cltd
ret
hlt
mov
mov
push
dec
test
das
sbb
lods
mov
mov
add
xchg
lcall
mov
sbb
imul
sub
out
loop
in
cmpsl
movsb
mov
lret
push
adc
out
outsb
push
ret
and
dec
sbb
pop
je
data16
mov
push
adc
pop
xchg
test
inc
orb
sub
daa
inc
cld
pop
aad
push
stc
mov
jnp
pusha
or
cmpsb
fldcw
aam
rolb
cmp
sub
jp
js
push
repz
sbb
scas
or
push
sub
div
xor
xor
mov
cs
jge
loopne
mov
outsb
pop
loopne
mov
leave
jmp
neg
cs
lcall
xor
out
and
or
insb
loope
mull
test
push
mov
mov
push
mov
fldt
insl
adc
loopne
push
lret
es
ja
cmp
pop
adc
mov
repz
rolb
sbb
or
push
mov
pop
push
jno
jae
loopne
aad
and
inc
sbb
sub
shrb
sub
push
add
nop
jne
es
add
push
inc
cwtl
xor
pop
mov
decb
loopne
push
lahf
push
pop
or
mov
xchg
mov
push
orl
pop
lcall
add
into
inc
leave
shlb
push
orb
mov
outsb
mov
repnz
lret
add
pop
push
cld
pop
dec
mov
pop
cmc
lea
or
xor
les
call
jb
jae
xchg
aaa
add
cmpsb
mov
mov
xchg
inc
jmp
or
shlb
imul
inc
fstpt
mov
push
mov
or
ljmp
idiv
stos
lods
push
mov
mov
add
jne
adcl
lds
and
xor
in
push
loopne
hlt
cmp
popf
push
mov
xchg
xor
pop
in
test
add
or
int3
mov
or
jp
xor
mov
pop
pop
les
call
ja
push
data16
test
xchg
out
in
enter
pop
pop
sbb
cmp
push
cmp
jecxz
xor
pop
das
ficoml
movl
repz
hlt
and
lock
xchg
sbb
push
lock
dec
push
fwait
dec
outsb
jl
rcrb
lret
das
sbb
imul
add
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
push
push
cmp
adc
adc
adc
and
or
add
test
inc
mov
mov
jg
rcll
cli
insl
imul
lods
iret
stc
xchg
jno
or
js
std
call
jl
sbb
xor
pop
insl
mov
jne
sti
inc
mov
xor
std
sbb
ret
mov
and
stos
add
icebp
push
ret
xlat
cmp
in
dec
imul
adc
inc
aad
push
adc
pusha
nop
fcmovb
xchg
das
std
push
xor
int
in
or
sbb
daa
pushf
pop
jnp
sbb
xchg
mov
sbb
jmp
inc
jp
out
jno
rcrb
jl
daa
rcll
xor
xchg
add
dec
xchg
pop
mov
inc
std
xor
jp
outsl
hlt
mov
scas
push
lcall
loop
fcmovne
mov
idiv
fwait
add
sub
sbb
icebp
hlt
aam
callw
stos
test
or
dec
into
clc
mov
js
mov
cltd
pop
sub
frstor
mov
xor
push
in
sbb
into
popa
mov
xor
in
pop
xchg
in
mov
popa
inc
xchg
xor
xchg
jns
xchg
xchg
mov
dec
mov
push
push
and
mov
push
and
out
push
pop
push
mov
inc
pop
arpl
cmp
pop
loope
cs
xor
incl
nop
sbb
cmp
pushw
lds
cwtl
enter
xchg
in
arpl
in
and
mov
mov
std
std
iret
jne
test
add
dec
popf
pop
mov
xor
iret
or
scas
test
mov
push
xchg
jne
mov
push
pop
xchg
popa
movsb
or
mov
movsl
addr16
ficoms
mov
jg
imul
dec
aas
push
or
cmc
xor
or
sub
daa
dec
stos
insb
ljmp
loop
sub
jne
insb
repz
rcl
push
and
js
loope
mov
mov
clc
mov
test
icebp
in
mov
daa
pusha
stos
jmp
xor
lea
in
sub
cmp
scas
adc
xor
or
pop
sub
cmpsb
push
inc
or
clc
push
adc
sub
loope
fmull
jle
ds
int3
jo
jp
push
ret
xchg
out
lods
mov
dec
add
lahf
inc
and
test
or
mov
mov
fsub
fs
push
mov
pop
pop
sbb
sahf
dec
pop
pushf
and
mov
aas
jecxz
insb
ficoml
mov
mov
lcall
cmp
je
lret
fldcw
jbe
or
repnz
fwait
push
std
test
sbb
pushf
jnp
int
daa
lcall
rolb
xchg
out
sub
push
dec
shlb
pop
jnp
cld
orb
outsb
sti
shll
xor
mov
cltd
ja
pop
adc
xor
fidivrs
jns
scas
stos
jp
sub
jb
push
xchg
lods
movl
in
movsl
dec
in
push
sub
sahf
push
mov
xchg
out
js
data16
or
adcb
out
mov
or
push
jnp
cmp
fistps
cmpsl
push
inc
loop
mov
mov
xchg
out
rcl
jl
mov
push
jmp
adc
pushf
lcall
xchg
cmpsb
pop
dec
imul
mov
in
loop
neg
fwait
cmp
repz
div
mov
push
pop
popa
inc
or
push
mov
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
dec
push
ljmp
mov
mov
jns
mov
das
and
jns
and
sub
lods
arpl
ja
sbb
shlb
lgs
aad
sbb
mov
cld
lds
jo
loop
fwait
pusha
ss
mov
leave
cmp
xor
cmp
cmc
nop
test
lret
mov
fisttps
fsubrs
les
aas
and
cmp
or
mov
pop
sub
sbb
cmp
xorb
dec
mov
dec
pop
aaa
and
arpl
imul
lahf
jmp
inc
ds
sti
or
mov
jbe
lahf
sub
sbb
adc
inc
lret
sbb
neg
mov
shl
xchg
repnz
jae
iret
xor
cmp
adc
imul
aam
mulb
sub
mov
jecxz
mov
dec
stos
xchg
test
mov
lahf
xchg
mov
decl
int3
mov
xor
inc
inc
mov
push
sahf
xchg
mov
shrb
inc
push
sbb
jge
cmp
cmp
cmp
rcrb
inc
adc
xchg
mov
mov
jbe
les
and
lcall
insl
or
aaa
add
xchg
test
add
or
ret
fstpl
push
test
add
sub
jge
data16
enter
arpl
jle
pushf
and
cmp
fildl
pop
push
rorb
decb
sub
and
jno
insl
clc
stos
std
mov
xor
sub
insl
dec
xor
aas
dec
aam
aad
scas
inc
ds
ja
popf
sub
loop
push
stos
mov
mov
sub
mov
mov
stos
das
and
outsl
mov
jge
mov
fs
push
adc
xchg
or
outsb
ljmp
cmp
test
xchg
push
mov
xchg
mov
enter
push
bound
loop
sbb
cmp
test
dec
shl
pop
add
xchg
adc
dec
outsb
dec
aad
into
scas
jle
test
xor
xchg
jge
mov
mov
into
mov
out
aaa
ret
add
test
addr16
fmul
jecxz
inc
or
lcall
jo
jne
adc
fcompp
adc
mov
mov
sub
jecxz
shll
out
xor
mov
jl
lret
outsl
xlat
dec
sub
ds
mov
cmp
popa
bound
push
subl
lret
cmc
mov
mov
scas
jmp
jno
jp
pop
imul
movsl
xlat
inc
ret
adc
pop
pop
adc
mov
sbb
leave
bound
inc
adc
inc
pop
jne
cld
or
adc
mov
inc
mov
xchg
fnstsw
fildll
fcomps
scas
sub
fs
push
push
add
and
roll
jmp
jg
xchg
les
fcmovnb
mov
movsl
mov
xor
rolb
sahf
or
cmovns
mov
and
or
lret
stos
add
mov
adc
cmp
imul
add
pop
test
add
aaa
loope
aaa
pushf
ja
pop
push
sarb
pop
xchg
mov
mov
out
cmpsb
and
in
ficoms
lods
rolb
xor
jmp
mov
popa
lcall
mov
mov
xor
adc
cwtl
fs
cmp
nop
mov
rclb
mov
add
sub
test
enter
or
pop
add
and
mov
xor
mov
or
xor
xor
ret
sub
in
sbb
jb
out
dec
add
out
push
cmp
add
pop
lock
cmp
outsb
or
das
mov
mov
cmp
fldenv
subb
xchg
adc
mov
sahf
inc
lea
xchg
jmpw
cmp
xor
jmp
aad
call
icebp
mov
xchg
or
cmp
bnd
int3
iret
inc
xor
dec
dec
dec
ret
pop
and
pop
sahf
les
push
dec
lret
or
mull
and
xchg
lods
mov
pop
jp
mov
gs
pop
xor
adc
or
mov
std
inc
add
lock
push
and
nop
jo
in
jne
in
int3
popl
hlt
testl
inc
fistl
out
rorl
mov
pop
push
or
stos
out
add
lret
mul
enter
adc
movsb
dec
hlt
push
in
cmpl
sbb
je
mov
cmp
mov
std
inc
xchg
pop
mov
sub
insb
dec
pop
jae
dec
test
dec
es
mov
mov
clc
cmp
sub
lea
push
ficoml
and
add
ljmp
xor
hlt
xor
insl
mov
jle
fisubs
jmp
push
cld
dec
fldl
pop
into
cmpl
jmp
leave
mov
popf
pop
sbb
pop
mov
xorl
and
mov
or
cld
pushf
cli
lret
jo
in
ss
xorb
je
subb
or
xchg
or
adc
mov
xchg
shll
faddl
dec
test
popf
loopne
negl
xlat
mov
push
insb
push
pop
ret
push
xchg
mov
mov
out
cld
les
jmp
scas
inc
in
dec
cld
lods
fwait
sub
test
lock
lds
add
les
or
insb
in
mov
dec
gs
cwtl
shll
sbb
dec
movsl
daa
add
mov
fisttpl
std
popa
fcomps
hlt
rorb
sub
mov
bound
testb
mov
push
inc
or
insl
inc
add
push
arpl
add
scas
ret
sbb
fcmovnbe
fnstenv
dec
mov
inc
sub
pop
jo
dec
in
mov
xchg
xor
and
mov
lea
jp
gs
jg
cmc
add
and
push
stos
pop
inc
loope
push
push
ret
shl
jg
jl
xchg
dec
fwait
out
push
pop
dec
in
sub
pop
loopnew
popa
out
fistps
mov
lcall
sub
stos
call
jge
push
data16
xchg
popf
cmpsb
jmp
mov
js
mov
mov
adc
inc
lret
mov
rorb
pusha
push
cltd
mov
adc
scas
dec
int
or
sub
mov
arpl
rclb
scas
shr
xor
cltd
push
fidivrs
cmp
shll
push
xlat
decb
fwait
xor
movb
jne
test
aad
cmpb
jge
dec
adc
lds
inc
cmc
fistps
lret
out
arpl
addr16
sub
jbe
icebp
inc
mov
scas
arpl
faddl
mov
xor
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
mov
insb
int
adc
fmull
adc
xor
xor
jecxz
inc
popl
xor
testl
dec
xchg
pop
xor
in
cmpsb
inc
push
scas
inc
fnsave
dec
gs
push
fldenv
adc
jmp
mov
mov
mov
and
sub
loopne
sbb
fnstenv
fidivs
push
jmp
inc
mov
push
cld
sahf
lock
xor
imul
add
sub
popa
pop
xlat
xchg
popf
pop
push
sbb
adc
shl
push
mov
inc
mov
inc
and
dec
jmp
mov
insl
add
mov
mov
mov
mov
and
xchg
sub
jle
sub
ret
mov
ljmp
mov
clc
cli
mov
jmp
adc
inc
fisubrl
movsl
clc
or
inc
jl
dec
stc
scas
sbb
arpl
pop
jmp
icebp
and
idivb
pop
mov
clc
arpl
mov
int3
insb
repnz
sbb
adc
inc
gs
insl
cmpsl
nop
push
and
outsl
jns
push
loope
jne
sti
fcmovbe
cltd
adc
cli
leave
int
aam
inc
xor
mov
pop
push
loope
mov
les
mov
popf
cmc
pusha
fidivs
dec
adc
pop
test
push
stc
aam
lret
in
repz
jae
push
cltd
repz
fwait
popa
pusha
cwtl
popl
lcall
mov
jg
dec
dec
aam
sbb
in
add
jmp
or
mov
mov
ficoms
in
sub
jle
js
add
pop
imul
ror
push
mov
xor
lcall
push
xor
rorl
test
outsl
pop
dec
sub
out
jo
clc
cmpsb
fsubrl
push
mov
enter
int
loopne
mov
test
movsl
or
push
sahf
jl
dec
aam
jnp
and
mov
push
not
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
adc
mov
movlps
xlat
daa
dec
xor
movsb
mov
fucomp
repnz
stos
dec
repz
leave
rcl
xchg
jbe
jg
and
mov
jle
push
mov
mov
out
xchg
sbb
sub
xchg
push
icebp
dec
jne
mov
sub
leave
data16
ljmp
xor
aas
loop
lahf
and
xor
popf
cli
ja
mov
mov
addr16
xlat
rcrb
sbb
mov
mov
insl
pop
mov
mov
sub
add
dec
dec
jmp
scas
jno
out
lret
cltd
mov
lahf
sahf
and
jecxz
aad
std
push
test
or
and
fisubl
subl
aaa
rorb
loopne
lods
fxch
dec
mov
stos
pop
xor
sahf
cmpsl
add
cmp
dec
inc
jbe
lock
pop
out
sahf
push
sti
cmp
not
and
or
dec
sbb
aad
popa
shll
aas
call
jae
inc
js
pop
pop
sub
jne
pop
xchg
mov
dec
cwtl
jo
xchg
sub
and
movsb
pop
repnz
mov
push
out
stos
mov
cmovbe
sbb
insl
popa
xchg
add
insb
inc
nop
out
mov
stos
cmpsl
das
mov
pop
mov
mov
lahf
adc
ficoml
jb
loope
cli
int3
ds
adc
loopne
movb
ljmp
hlt
mov
or
pop
lods
xchg
dec
bnd
fsubrl
push
mov
fscale
data16
xchg
inc
fmull
cmc
xchg
imul
clc
iret
sub
test
cmpsb
or
mov
dec
js
sub
mov
stos
stos
inc
pop
push
mov
adc
or
je
xor
adc
cs
out
adc
or
lea
mov
repz
clc
adc
xchg
addr16
xor
ljmp
inc
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
mov
adc
fmull
adc
add
test
icebp
cmp
pushf
cltd
dec
ss
adc
sub
imul
daa
loopne
add
ret
and
jp
iret
loope
pop
mov
frstor
xor
xor
stos
outsb
sub
out
pop
jmp
xchg
dec
jnp
jno
mov
push
rorl
mov
shlb
bound
adc
adc
aas
outsl
push
pusha
ds
in
mov
push
cwtl
mov
push
icebp
xchg
adc
imul
mov
pop
push
lcall
inc
jb
push
mov
push
jbe
mov
lret
leave
dec
aaa
and
test
movq
pop
or
xor
cltd
mov
fimuls
fcom
movsb
xchg
dec
loopne
dec
mov
jnp
and
and
jmp
repz
ror
xchg
xchg
mov
mov
loop
mov
stos
push
sbb
lcall
sub
push
loope
cmpsl
xchg
fwait
push
sub
int
mov
adc
push
repnz
mov
cmpsl
cli
arpl
test
sub
mov
sbb
negl
mov
imull
xor
stc
mov
and
ret
cmpsb
add
test
call
or
ljmp
mov
xchg
fldcw
pop
dec
in
addb
inc
xchg
imul
push
mov
mov
divb
fld
out
sub
pavgw
scas
loope
pop
push
in
adc
sbb
int3
xchg
rorl
jno
mov
rolb
sbb
shl
ss
add
sub
loopne
push
enter
lds
pop
xchg
int3
jae
jbe
pusha
push
loop
push
add
sti
push
xchg
adc
loopne
pusha
iret
and
cmpsl
inc
mov
sub
dec
xchg
icebp
jp
popf
nop
call
cltd
js
ds
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
mov
stos
and
movlps
inc
or
sbb
ljmp
sahf
push
fwait
jp
mov
sub
out
mov
pop
sub
jns
xchg
xor
roll
add
test
inc
push
orl
mov
out
push
js
sbb
addr16
cmpsl
push
fidivl
mov
push
and
pop
sub
jne
mov
ljmp
in
or
sbb
sbb
inc
out
cmpsl
pushf
cmpb
fildll
dec
mov
aaa
jns
and
pop
into
xchg
xor
arpl
jne
mov
jb
cmp
imul
or
jnp
add
fistpl
lret
or
cmp
push
mov
inc
hlt
fdivrl
xchg
push
repz
or
cmpsl
lods
dec
pop
dec
or
push
pop
movsb
int3
and
mov
jne
mov
push
xchg
or
xor
pop
pusha
jo
repnz
xchg
xchg
mov
mov
push
mov
and
cmp
xchg
movsl
push
pop
in
mov
rorb
adc
shlb
hlt
xchg
inc
lcall
pop
repnz
negb
adc
mov
stos
outsl
pop
jecxz
or
sbb
pop
lea
and
push
push
je
and
dec
jp
data16
adc
aaa
mov
in
orl
cs
xchg
test
pushf
aas
cmp
mov
inc
cli
out
mov
pop
stos
hlt
mov
push
es
xchg
inc
mov
inc
rorb
dec
cmpsb
push
inc
xchg
test
es
in
lods
test
dec
and
shrb
movsb
push
sbb
xor
xchg
sbb
cmpb
jecxz
sbb
inc
add
shll
inc
mov
adc
xchg
push
icebp
adc
aas
cmp
aad
nop
fsub
loopne
mov
dec
ret
jae
or
cmp
mov
ja
leave
mov
mov
xchg
mov
ja
es
movsl
ss
sub
inc
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
test
adc
fmull
adc
lock
mov
add
dec
jl
jnp
jge
mov
popf
xchg
loope
and
addr16
xor
pushl
mov
aad
enter
mov
mov
les
inc
mul
mov
or
std
or
and
dec
adc
xchg
pop
aam
jmp
cmp
ret
arpl
cmp
cmp
mov
or
in
loopne
gs
add
sbb
xchg
sub
dec
imul
xchg
inc
outsl
adc
lds
push
mov
ja
mov
mov
sub
pop
sub
adc
lret
mov
jne
or
imul
lret
insl
lcall
add
cmp
mov
cmp
mov
lea
add
xchg
stos
cmp
sbbl
enter
mov
out
dec
call
repz
out
mov
lret
pop
fwait
push
adc
push
pop
or
sub
mov
test
xchg
xor
pop
leave
inc
push
gs
pop
push
xor
les
les
xor
in
or
pop
sbb
xchg
xchg
insl
test
cmp
dec
sbb
jp
iret
xor
and
mov
mov
cmp
mov
mov
insl
mov
sbb
cmpsl
jbe
fwait
xor
cs
test
pop
int3
out
xchg
add
mov
addb
inc
out
in
add
jo
insl
sbb
mov
jmp
jo
fstpl
ret
add
xorb
aam
xor
test
ficoms
cmp
imul
push
sarb
out
mov
adc
ss
mov
inc
jae
push
lret
sbb
adc
xchg
dec
mov
mov
bsf
pop
fsubrp
cmpsb
sbb
jb
pop
mov
mov
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
adc
imul
cmp
loope
pop
xor
and
xor
mov
bnd
mov
fsubrs
loop
cmpsl
pop
mov
xlat
cmpsb
mov
enter
mov
and
daa
int
mov
adc
mov
jp
cmp
fstps
dec
push
mov
xor
movsl
adc
data16
push
loopne
sub
fsubr
cmc
add
jno
cmp
gs
and
pop
sti
push
dec
aad
sub
arpl
test
push
imul
xchg
ja
clc
add
ret
dec
mov
or
jp
dec
jl
mov
push
adc
xor
int
popa
mov
fwait
jae
inc
xor
roll
dec
jbe
inc
outsl
icebp
cmpsl
sub
mov
rol
arpl
sbb
cmp
lods
neg
or
fcmovnu
xchg
xor
jae
xor
pop
push
ja
mov
adc
jno
imul
out
sbb
dec
xchg
mov
cli
cmc
cli
xchg
mov
fadd
hlt
lret
insb
lret
dec
add
scas
sub
pop
clc
fldcw
sbb
push
xor
mov
sbb
mov
jo
xor
pop
movsb
adc
mov
lods
mov
in
imul
xlat
sub
or
les
push
xor
cmp
addr16
and
xchg
mov
mov
pop
enter
sbb
push
pop
xrelease
cld
xor
int3
scas
adc
cmp
mov
subb
lds
pop
call
jnp
add
or
push
nop
incb
insl
pushf
pop
sub
mov
pusha
xchg
jge
push
inc
fisubs
jne
cmc
mov
add
xor
fimuls
lret
rclb
sub
mov
mov
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
sub
jle
adc
fmull
adc
cwtl
xchg
or
inc
cmpsb
xor
and
jae
into
mov
dec
jmp
lods
mov
cltd
dec
roll
fdivrs
es
push
inc
stos
mov
mov
std
iret
mov
push
lods
pop
cmpsb
lcall
jbe
ljmp
pop
into
mov
ss
pop
aas
fisttpll
es
rolb
mov
je
or
mov
popf
out
or
cmc
jbe
cltd
shrb
add
in
ja
inc
dec
stos
repnz
dec
test
imul
ds
loopne
jae
stc
jecxz
scas
clc
mov
lret
add
jns
xchg
sub
jo
xchg
inc
incl
xor
sbb
fcomps
inc
out
loope
pop
lds
cmp
int
psrld
int3
stos
push
xchg
das
movsl
sub
adc
outsb
push
sub
stos
je
xchg
pusha
arpl
mov
aam
data16
dec
mov
enter
adc
or
push
sub
add
fstps
pop
pop
mov
jnp
adc
hlt
sbb
cmp
xchg
jo
movsl
cmp
std
cmp
imull
mov
repnz
push
inc
mov
xchg
xchg
cltd
int3
movq
stc
add
lcallw
fdivs
jne
mov
push
sti
mov
or
popf
push
stc
lahf
inc
clc
mov
adc
fcoml
sbb
cmpsb
inc
or
xchg
lds
jl
loope
xor
dec
call
enter
shrl
add
outsl
fucom
ret
mov
loop
jmp
inc
jmp
adc
sbb
fwait
xchg
repnz
into
add
or
dec
inc
aam
add
mov
movsl
mov
imul
adc
mov
mov
mov
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
xorl
stos
jmp
mov
push
incl
imul
adc
jl
xor
popf
lret
dec
jnp
mov
pop
addr16
loope
shr
mov
cmc
movsb
mov
enter
andb
lods
in
xchg
xchg
jno
cmc
dec
dec
add
add
int3
xor
xchg
aaa
sub
xor
orb
inc
mov
adc
push
add
les
add
pop
or
and
push
mov
pop
pop
repz
stos
mov
inc
jno
fisttpll
mov
push
cmp
rcr
mov
inc
pop
mov
or
aaa
xor
sub
aaa
push
pop
ret
cmpsl
push
jg
movsl
mov
mov
fstp
xor
dec
mov
stos
lret
in
lcall
cmc
lret
and
loopne
mov
pusha
pop
gs
add
mov
jmp
add
pop
or
and
loopne
sub
fisubrl
jg
mov
inc
fdivrs
data16
icebp
aam
int
push
fsubrl
imul
inc
repz
mov
push
aam
outsl
out
push
add
push
lea
test
cmp
xchg
inc
shll
shrb
mov
mov
fidivs
xchg
mov
test
mov
fisttpl
jg
mov
les
mov
rcr
add
cmp
aas
sub
movsb
cmp
adc
fwait
mov
sti
lcall
test
std
les
jl
adc
mov
std
and
insl
sub
mov
jg
dec
bts
arpl
inc
mov
mov
lds
sbb
mov
das
inc
jne
jns
mov
ret
mov
fsub
mov
jmp
jnp
jle
rcl
shll
add
sbb
pop
xor
repz
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
dec
cmp
cmp
rorl
loope
imul
mov
mov
adc
jg
sub
xlat
mov
mov
inc
adc
push
or
std
mov
cltd
insl
mov
mov
test
sarb
and
jnp
xor
mov
out
stc
cmp
scas
sub
inc
or
es
push
or
in
and
sti
test
cmovno
icebp
and
loope
mov
jae
sub
or
das
pushf
and
push
push
jl
or
inc
mov
int
dec
in
push
xorl
lret
arpl
fimuls
mov
jecxz
mov
push
ffreep
push
and
mov
and
cld
es
dec
pop
cmc
cmp
sbb
sub
fwait
ss
inc
cmpsl
cmp
jnp
cs
lds
inc
push
lock
jb
stc
aaa
mov
push
and
shrl
das
jns
adc
enter
add
adc
inc
test
sbb
sub
sub
shll
sub
pop
pop
jmp
jg
xlat
mov
fs
mov
rorb
inc
xor
sbbl
pop
push
lds
pop
sub
add
cmpsb
addb
ss
push
mov
sub
dec
int3
dec
and
jle
mov
or
xchg
jo
pop
cmp
rolb
aam
shlb
inc
pop
add
pop
add
jle
int3
mov
push
mov
insl
repz
push
inc
sahf
cltd
popf
mov
xlat
mov
mov
orl
fsubr
xchg
test
jl
aas
enter
push
loopne
or
shl
add
and
int3
repnz
push
shll
repz
push
scas
and
add
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
fisubrl
mov
fmull
adc
dec
xchg
jae
jne
mov
repz
into
mov
mov
jne
and
push
sub
and
sbb
push
int3
and
in
xchg
mov
push
dec
add
sarb
scas
or
outsl
xor
cmpsb
inc
ja
stc
repz
dec
popf
dec
add
aaa
es
iret
inc
push
xchg
icebp
negl
jbe
xchg
das
dec
push
mul
loopne
xor
daa
repz
dec
repnz
inc
sub
lock
inc
icebp
movsl
xchg
pop
andb
mov
or
jo
idiv
adcb
pop
sahf
mov
mov
add
xchg
lds
out
push
loope
dec
dec
movsb
es
xchg
aas
outsl
jno
or
stc
push
mov
cmp
movsb
xor
push
lock
and
mov
jl
mov
sub
out
into
dec
inc
pop
dec
xchg
insl
inc
and
xchg
inc
es
pushf
fs
mov
or
and
inc
hlt
ja
mov
push
sbb
and
and
scas
cmp
lds
imul
sbb
pop
inc
or
insb
je
xlat
push
ja
daa
addr16
popf
and
inc
cmp
and
push
es
les
jge
jmp
cwtl
xchg
mov
rcll
sbb
mov
jo
fiaddl
mov
jg
add
mov
mov
lds
push
and
or
lret
sahf
xor
mov
mov
mov
inc
jae
lea
ss
sub
sbb
je
xchg
push
in
xchg
dec
adc
mov
out
movsb
movsb
pop
cmpsl
aaa
pop
mov
call
shrb
adc
imul
and
ficoms
inc
jns
enter
int
jmp
mov
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
xchg
test
mov
fmull
adc
lock
cmp
xchg
in
push
call
sbb
aad
lds
daa
clc
add
stos
lods
push
pop
add
inc
and
leave
adc
pushw
jne
lods
and
or
int3
mov
dec
cld
mov
std
cmpsb
loop
popf
es
cmpsb
test
xlat
notb
pop
or
cmp
cld
jg
out
scas
sti
pop
into
mov
js
mov
fistpll
out
sub
lods
pop
insb
xor
jl
in
pop
iret
popf
mov
inc
push
popf
mov
sti
jecxz
mov
andl
dec
into
sbb
or
push
jp
aad
sbb
sub
xlat
cmp
mov
pusha
loope
xor
ret
or
or
das
push
scas
outsl
cmp
lock
mov
push
mov
mov
out
cmp
popa
int
enter
dec
popa
push
nop
test
mov
mov
sbb
sbb
cmp
mov
xchg
cld
push
popa
add
ret
mov
sti
mov
fisttpl
rorb
mov
mov
dec
pop
ficompl
inc
dec
jmp
ds
xchg
dec
lock
inc
mov
rcrl
pop
add
lods
sub
rcr
loope
jle
fldl
inc
test
xchg
test
xchg
mov
mov
jmp
pushf
stc
pop
xchg
ja
stc
mov
lcall
mov
adc
enter
out
jno
inc
jno
sub
dec
dec
notl
sbb
dec
pushf
faddl
iret
add
xchg
mov
ss
pop
enter
mov
lds
call
sbb
push
sub
data16
sub
jg
clc
xchg
mov
mov
pop
sbb
bound
adc
mov
je
fisubrs
bnd
jge
leave
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
and
jle
notb
adc
movlps
sub
jmp
cmpsb
pop
pop
xchg
into
pop
lea
insl
loope
adc
imul
sbb
jne
mov
push
mov
sbb
test
out
jae
lods
add
push
pop
cmp
cmpsl
xchg
mov
les
pop
sub
xor
push
jnp
jmp
mov
insb
cmpl
int
cmp
es
jbe
cmp
btc
push
shll
fwait
ss
notb
lcall
test
add
rcrl
xchg
test
adc
sub
mov
rcr
sub
lret
je
aam
or
sub
imul
in
das
pop
ljmp
in
cmc
pushf
ror
pop
sahf
int3
push
jae
iret
adc
mov
ljmp
xchg
xor
ljmp
int3
sbb
inc
rol
mov
jge
js
push
and
mov
int
test
stos
lods
mov
cli
sub
push
ljmp
jne
cltd
ljmp
and
cmpl
in
and
push
xchg
cld
mov
dec
mov
sbbl
rcrb
test
xchg
xorb
dec
mov
push
fucomp
in
in
mov
cs
dec
inc
push
stc
adc
xchg
addb
fs
ret
pop
iret
clc
loop
mov
int3
repz
xor
stc
xchg
or
mov
notb
cmp
cmp
dec
push
push
loop
xor
and
icebp
cmp
xchg
lea
add
es
pop
mov
xor
jne
enter
es
push
push
cli
sbb
ss
fisttps
sti
test
mov
mov
and
dec
mov
ret
xor
pop
movsl
push
call
decb
cwtl
add
mov
jbe
orb
lahf
or
push
push
into
cmp
jnp
push
sbb
scas
add
add
xchg
xchg
mov
inc
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
push
or
into
std
xchg
sbb
aas
cli
out
mov
jb
ljmp
out
cmpsb
dec
add
popf
test
fwait
xchg
or
cmc
jle
pushf
loopne
shrl
insl
shlb
inc
shr
jmp
ss
xchg
mov
adc
or
int
sti
mov
mov
dec
lock
fnstenv
fnstcw
js
cs
xchg
and
push
movl
fdivrs
ret
cmp
add
xchg
loope
lds
clc
popa
xchg
aam
or
add
clc
jg
mov
sti
dec
dec
adcl
inc
adc
lcall
insb
jne
fdiv
stc
pop
fisttpll
inc
loopne
jg
stc
aam
lods
clc
mov
pop
ja
scas
sti
ljmp
inc
or
sub
push
sbb
loop
je
in
sub
pop
loope
xor
and
std
in
mov
test
outsl
jl
test
mov
sti
dec
dec
pop
std
loopne
mov
mov
sub
cs
and
test
mov
sub
int3
lock
cmp
pop
inc
aad
jo
daa
ds
mov
push
shrl
or
xor
dec
dec
insl
xchg
out
leave
and
das
pop
mov
in
adc
sub
sub
mov
inc
mov
jno
sub
xor
xor
rcll
fdivl
xchg
outsb
in
ficompl
mov
jp
ret
add
sub
ds
icebp
sbb
mov
test
orl
push
sbb
loope
xor
xor
shl
jg
xlat
inc
xchg
ljmp
pop
hlt
popf
dec
imul
mov
push
and
push
dec
jp
out
xor
std
lods
loopne
and
inc
addr16
dec
inc
cmp
in
push
ds
mov
out
loop
mov
divl
popa
mov
ret
sub
in
push
test
adc
jmp
loope
icebp
aas
jo
cmp
rol
add
lods
fstl
adc
jno
mov
dec
jo
leave
mov
push
or
mov
repz
aam
sarb
jb
orl
dec
jo
movsb
or
push
cltd
lcall
mov
iret
xchg
cwtl
mov
jg
sti
test
arpl
mov
ss
pop
dec
xchg
popf
push
je
into
mov
gs
addb
pusha
fbstp
loopne
mov
jns
fsubrs
aam
or
dec
or
xor
mov
fcomp
jge
sbb
dec
or
push
sbb
add
cmpsb
cmp
bound
loopne
int3
imul
sub
pop
fdiv
mov
mov
push
push
mov
mov
mov
fwait
mov
add
inc
cmp
data16
xor
jmp
or
xor
out
fcoms
xchg
mov
push
cmpb
loopne
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
push
mov
adc
adc
mov
jle
dec
adc
es
pop
addr16
not
dec
and
pop
and
push
loopne
es
sub
dec
mulb
push
sbb
iret
add
int
jmp
cmp
insl
dec
push
inc
jo
add
scas
jne
jno
pop
mov
xor
sub
push
cmpsb
in
cld
xchg
jne
jecxz
push
or
push
imul
jno
cmp
push
pop
xchg
lret
lret
jecxz
xchg
pushf
push
xchg
aad
pop
fimuls
cld
mul
rorl
inc
adc
xor
add
or
mov
lock
and
leave
mov
or
shl
es
pop
aam
adc
or
int3
or
test
pop
int
in
jne
aam
jae
xlat
aad
call
gs
xchg
cltd
mov
pop
testl
mov
test
popa
add
imul
and
add
xchg
movsb
and
lock
ret
mov
mov
mov
rclb
mov
xchg
sub
push
pop
sti
dec
add
mov
dec
add
add
add
mov
jge
push
arpl
xor
push
popf
mov
xlat
adc
je
push
and
sub
js
sbb
jae
add
fnstenv
xchg
or
pop
test
ja
dec
or
xor
popa
stos
adc
or
in
test
dec
dec
and
out
fucomp
aam
icebp
sbb
xor
xor
je
and
pop
xor
jg
fildl
lret
and
cmc
arpl
pushf
stc
mov
sbb
adcb
mov
outsl
jmp
push
ret
jge
loopne
loope
jno
das
nop
pop
lods
fsubrl
imul
xchg
loop
cli
dec
sub
fsubrp
mov
and
xchg
inc
ja
mov
loope
stos
mov
adc
cmpsl
addr16
mov
jmp
cmp
sbb
movsb
mov
sub
sti
or
xor
add
into
push
mov
stc
and
cli
fwait
test
inc
mov
xchg
inc
and
jbe
rclb
subl
jae
lods
dec
sbb
pop
xor
sbbb
lahf
mov
cmpsl
int3
ljmp
das
fsubrp
lcall
xchg
mov
mov
pop
cmp
pusha
mov
inc
in
and
push
mov
xchg
cmpsl
dec
pop
iret
add
unpcklps
push
lock
movsl
cmp
sbb
in
mov
lods
je
jl
push
fcompl
sarb
cmp
and
jnp
pushf
mov
popa
leave
add
mov
sbb
add
mov
push
sub
in
scas
push
xchg
mov
push
jae
ja
push
orl
push
cmpsb
mov
and
cmp
int
cld
xor
sti
rcl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
cmp
mov
jo
adc
daa
mov
popf
in
adc
mov
or
and
mov
adc
lods
repz
adc
adc
ret
or
inc
mov
leave
icebp
ja
fcoml
jns
jg
loop
out
mov
shr
sahf
arpl
pushf
adc
mov
jns
pop
lock
and
jo
daa
mov
shll
push
ret
ret
jne
pop
aam
clc
pusha
mov
fisttpll
jle
inc
repnz
test
pop
decb
push
js
movsb
mov
mov
sub
stc
adc
lret
adc
cmc
push
sub
popa
dec
clc
fwait
inc
or
jne
push
and
xor
lods
addl
cmpsb
mov
jnp
mov
enter
ret
dec
fadd
cwtl
sub
dec
mov
jbe
call
cli
jnp
lret
dec
fisubrl
jl
sahf
adc
pusha
sti
sahf
jns
sarl
or
orl
iret
lods
cmp
jnp
sbb
test
pop
ret
mov
out
jnp
adc
push
mov
ljmp
jae
ret
sbb
push
imul
repnz
inc
cltd
fdivrs
fldt
cmp
rcll
loope
push
and
test
sbb
or
cmp
and
cmp
into
aam
int
cld
dec
sub
fistl
fsubs
test
cmp
push
leave
or
xor
and
mov
mov
jb
mov
fsubs
test
nop
ss
xchg
adc
xchg
pop
rolb
scas
and
lods
ret
movsb
insl
mov
xor
cmp
cmp
test
jae
mov
sbb
cs
outsl
stos
and
and
ret
out
xor
shrl
jle
xchg
jg
outsb
fsubl
in
fs
jle
or
pop
inc
pop
mulb
sbb
rcll
sarb
pop
mov
cmp
add
mov
sti
mov
mov
test
inc
es
pop
push
sbb
mov
hlt
das
xor
sub
mov
in
sbb
push
xchg
mov
je
movsb
jp
and
lahf
mov
inc
mov
adcb
lahf
cld
ss
inc
incl
cld
ss
mov
js
stos
gs
imul
int3
add
fadds
push
insl
mov
jb
repz
addl
aam
dec
ss
mov
mov
add
call
mov
lret
push
lock
mov
dec
sahf
dec
fimuls
pop
popl
in
mov
inc
sub
aaa
bound
adc
jg
leave
leave
jp
add
fs
mov
and
mov
dec
sub
mov
add
rcr
nop
inc
mov
mov
add
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
adc
push
fstl
adc
adc
sbb
fcoml
push
out
cmp
xchg
cmp
push
mov
pop
bnd
sti
mov
arpl
jo
pusha
mov
ds
inc
xor
pusha
pop
and
xchg
call
ficoml
cmp
sub
sbb
popf
sbb
out
fcoml
in
dec
push
mov
ds
pop
loop
iret
push
push
pop
inc
inc
mov
pop
ss
imul
fistl
test
or
pop
pusha
mov
outsl
mov
mov
pop
cmp
sub
sub
ds
lods
movsl
loopne
pusha
aaa
in
ss
xlat
aaa
sub
add
sbb
xor
icebp
xchg
pop
stos
mov
lock
xchg
push
mov
sub
notb
in
jl
std
or
inc
std
or
cmp
lcall
push
dec
cmp
push
les
push
pop
jnp
sbb
add
inc
imull
inc
repz
add
sahf
js
in
xlat
push
mov
rol
jle
notl
dec
pop
repnz
xchg
push
fisubrl
mov
adc
adc
sub
fldt
jns
mov
clc
cltd
adc
rclb
data16
jbe
mov
aam
sbb
stos
lcall
stos
add
sbb
jbe
sub
sahf
cltd
lcall
loope
in
out
push
imul
jge
or
cld
pop
cmp
imul
sub
sub
adc
mov
dec
inc
popf
stc
xchg
lods
mov
popf
mov
lods
xchg
inc
cmp
or
jl
push
cli
jb
push
call
and
pop
xchg
push
out
adc
sbb
cltd
notb
fsubl
add
stos
fsubrs
mov
movsl
sub
fwait
int
inc
xlat
mov
loope
cmp
sarb
xchg
dec
out
dec
mov
shll
cmpsl
std
testb
and
add
mov
adc
cmc
cli
or
xchg
and
lcall
repz
sub
sbb
xchg
push
ljmp
or
pop
ja
test
stos
sub
mov
test
out
mov
inc
add
mov
ss
mov
imul
aam
cmpsl
or
aaa
sbb
push
mov
mov
in
clts
in
jle
les
adc
inc
add
mov
push
leave
test
test
cltd
pop
jbe
movsl
dec
les
bound
das
adc
pop
cltd
or
daa
adc
sahf
icebp
mov
dec
push
movsl
inc
cmp
loope
push
dec
jmp
push
and
out
and
xor
jae
subl
mov
mov
int3
addr16
push
je
in
outsb
mov
push
xor
test
adc
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
jge
out
stos
sahf
aad
adc
adc
mov
fwait
data16
in
nop
cs
mov
xor
bound
loope,pt
or
test
loope
xor
push
or
jl
inc
repnz
pop
pushf
push
sub
jge
mov
jg
and
je
rorl
int
sahf
jg
push
push
in
ljmp
mov
in
movsb
lcall
jns
data16
test
cltd
in
pop
out
adc
cs
pop
in
inc
aam
push
xchg
in
jl
jne
fldenv
pop
push
mov
aaa
dec
add
imul
loope
mov
push
xchg
jo,pn
shll
pop
into
mov
aas
mov
sub
in
mov
xchg
ljmp
fcmovu
mov
ffreep
pusha
push
shll
cmp
ds
xor
pop
stc
adc
inc
push
mov
iret
fwait
das
and
adc
lret
cmp
push
cmpsl
pop
sarb
movsl
ljmp
mov
or
add
fmul
addb
mov
adc
xor
psubq
jp
xchg
xchg
inc
sub
dec
mov
mov
cmc
jo
ret
jl
cmp
addb
ror
shrb
mov
cmpsl
mov
mov
add
mov
imul
add
enter
aam
rcrb
lock
scas
fwait
jnp
lahf
stos
fs
dec
test
daa
mov
push
xor
cli
mov
movl
mov
jmp
je
mov
iret
aaa
add
xchg
repnz
cmp
pop
popa
lds
adc
mov
imul
hlt
aas
mov
imul
mov
xor
or
daa
fsts
inc
pop
add
sub
jbe
fwait
jns
inc
popf
stos
ficomps
or
inc
stos
inc
enter
pop
pop
and
xor
dec
in
ret
lods
jb
jle
cld
or
js
mov
pop
in
pop
test
shll
test
ss
xlat
inc
push
fildll
inc
and
orl
daa
call
les
cmc
shlb
mov
sub
aaa
hlt
lds
or
scas
inc
jmp
push
rcrb
out
jno
xchg
pop
xor
out
sbb
das
jnp
push
cmp
in
and
das
mov
pop
mov
testl
sub
ljmp
jb
xchg
or
xchg
jbe
inc
xorb
or
inc
add
mov
imul
sti
mov
mov
push
cltd
push
out
dec
push
repz
cmp
mov
in
pop
pop
rcl
aaa
aaa
mov
jne
shlb
pop
dec
test
add
out
inc
pop
test
push
sbbl
sti
cmp
mov
in
push
or
pop
mov
mov
fmuls
leave
incl
decl
mov
or
jmp
xchg
decl
cmp
adc
stos
loope
and
cli
lret
adc
jo
adc
xor
popw
and
ja
adc
sub
jge
outsb
aaa
in
sbb
pop
mov
jns
adc
stc
sbb
jno
mov
aas
cmp
inc
xchg
lret
or
outsl
and
inc
push
fmuls
shrl
add
jns
sub
xchg
jnp
mov
mov
jle
pushf
out
pop
popf
std
add
mov
int3
jbe
mov
dec
je
gs
sbb
ss
out
dec
int
lret
aam
mov
xchg
addr16
and
inc
aas
mov
outsl
mov
lcall
cmc
sbb
popa
sub
in
add
cli
in
fists
inc
std
or
in
pusha
inc
hlt
push
inc
mov
push
lahf
cmp
xchg
pop
xchg
popa
roll
fwait
inc
stc
xchg
nop
push
push
mov
mov
sbb
scas
adc
xchg
cmpsb
or
dec
roll
inc
xchg
mov
mov
inc
add
in
sub
add
pop
jecxz
loope
cli
cmp
cmp
shr
fildll
outsb
jns
xchg
popf
adc
and
inc
jg
add
push
shll
pop
add
cmc
adc
aam
dec
push
xor
mov
mov
xor
lret
mov
loope
inc
push
xchg
je
pop
or
mov
inc
push
xor
adc
dec
loope
imul
adc
push
ja
or
jp
xchg
sti
or
push
xor
mov
sti
jae
and
movsl
iret
je
sbb
sbbb
imul
arpl
pop
outsl
jp
call
mov
or
cltd
xor
and
push
clc
fdivr
sub
lock
pop
out
pop
mov
lret
call
repnz
call
cwtl
mov
fstpt
int
xchg
lret
dec
ret
add
out
mov
lods
pop
mov
cmp
cltd
push
mov
lcall
sbb
dec
daa
cmc
lret
adc
cmp
dec
mov
sub
add
xchg
inc
sarl
in
out
jp
hlt
and
inc
jle
cmp
mov
xchg
xchg
adc
mov
nop
push
inc
out
mov
push
sub
int
mov
lock
add
jo
dec
aas
int3
inc
mov
mov
in
or
jg
test
cmc
insb
mov
inc
movsl
dec
outsl
lret
sub
mov
and
imul
inc
stos
inc
repnz
inc
inc
ret
push
and
enter
mov
ret
xor
mov
jle
add
mov
hlt
call
push
jmp
fadds
pop
xorb
insl
push
in
shl
push
push
and
lcall
aaa
loop
or
ficompl
fs
hlt
mov
cltd
call
fstl
dec
leave
dec
add
pushf
inc
mov
popf
or
imul
test
inc
xor
mov
xchg
int
cmp
xorl
ret
leave
fs
subb
rorl
enter
pop
int3
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
pop
xor
rcrb
inc
push
inc
sub
addr16
out
aas
sbb
push
je
out
jmp
call
fs
mov
sub
cs
mov
js
popa
mov
jl
push
push
xchg
cs
push
loope
jge
add
pop
and
jle
cmp
mov
xor
jge
adc
mov
push
add
xor
movsb
dec
loope
push
mov
sub
arpl
nop
daa
and
leave
mov
or
sti
scas
mov
xchg
fwait
pop
adc
mov
mov
mov
mov
lcall
dec
adc
insl
mov
movsl
fmuls
adc
mov
jle
add
fdivs
xchg
sub
addl
cltd
or
in
aas
xchg
test
ret
cld
cwtl
aad
stos
dec
hlt
repz
sub
pop
in
loope
jg
jp
mov
mov
fisttpl
pop
rol
test
pop
add
jl
ljmp
xor
movb
cmp
or
mov
test
cmp
xor
es
outsl
mov
push
movhps
and
pusha
add
mov
sub
out
sub
repz
rcrb
mov
clc
xchg
in
and
in
mov
mov
iret
pop
dec
push
push
stc
ret
mov
cmp
cmp
out
xchg
inc
lahf
std
in
ret
push
rorl
push
pop
shrl
sbb
mov
pop
fs
shl
jmp
dec
sbb
pop
fstpl
aam
push
pop
mov
cmpl
fcompl
jle
out
jge
xchg
jnp
push
fsubrl
out
arpl
repz
or
iret
shrl
adc
mov
pop
push
cmp
hlt
call
mov
data16
inc
xorl
test
cltd
adc
or
lea
lds
rcrl
test
aas
daa
xchg
sub
aad
or
lds
int
cmp
loope
mov
mov
push
push
cld
outsb
decb
mov
test
cmp
or
clc
ljmp
cwtl
jge
dec
insl
mov
xchg
andl
sub
pop
pop
loop
fildl
cmc
out
inc
jo
lret
xchg
dec
mov
repnz
lock
inc
or
scas
test
outsl
jb
xor
test
jnp
push
sub
adc
lss
xor
enter
popf
xchg
adc
ror
xor
addl
out
in
push
cmp
int
xchg
hlt
jge
jae
push
insl
loope
into
xchg
push
lock
call
mov
adcb
adc
mov
sub
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
in
sub
rcll
jo
adc
sbb
mov
adc
xchg
inc
hlt
sbb
jp
pop
or
das
and
push
push
jbe
fcmovnbe
push
aad
ret
fs
xchg
and
add
icebp
pop
inc
dec
or
mov
cwtl
add
push
fistpl
in
and
sahf
aaa
orb
jno
arpl
cmp
in
imul
out
adc
xchg
movsl
push
ja
test
sbb
and
test
mov
aam
nop
adc
fidivl
fmuls
mov
jecxz
cmp
fistl
mov
js
jge
or
sbb
es
fisubl
movb
dec
lods
push
ret
sub
fimull
jae
lods
push
push
loope
stos
jp
leave
clc
addb
and
cmp
mov
sub
jp
lds
lock
sbb
inc
or
inc
mov
enter
add
imul
push
enter
sub
out
into
adc
push
lea
rolb
dec
mov
jae
mov
inc
push
adc
pop
arpl
jp
xchg
pop
aas
test
test
bound
inc
fs
add
in
jmp
jp
in
jp
push
sbb
pop
adc
push
push
or
push
add
in
pop
mov
jne
cli
inc
jmp
pushf
cmp
mov
jmp
jmp
enter
inc
iret
fstpl
jp
inc
pushf
mov
inc
mov
or
inc
xchg
inc
mov
cmp
push
vpshuflw
xor
mov
mov
scas
mov
or
aaa
out
sbb
stc
pop
test
mov
sub
and
push
sbb
loopne
or
add
sbbb
cmp
rclb
icebp
out
cmp
mov
sbb
mov
inc
sbbb
dec
pop
sbbb
inc
jl
inc
pushf
jecxz
nop
inc
aad
arpl
jbe
xchg
push
loop
mov
sahf
jb
imul
scas
jb
lahf
into
nop
std
js
jle
adcl
jg
adc
pop
cmp
mov
sub
aam
imul
pusha
push
jge
andb
mov
cmp
cmp
adc
mov
mov
inc
mov
das
les
lock
add
fsubl
test
jo
xor
int3
inc
mov
imul
js
add
mov
rcll
scas
lret
js
xor
jle
rcll
ja
test
cltd
jb
shll
dec
push
xor
xor
test
xchg
test
loopne
pop
subl
dec
mov
xchg
or
outsl
xor
gs
sub
adc
adc
adc
dec
pop
dec
fldenv
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
xchg
stos
push
mov
adc
adc
or
sbb
xchg
sub
and
push
push
ljmp
scas
jno
or
add
je
aam
jo
shl
jl
insl
js
jns,pt
push
fnstenv
ret
jne
jmp
dec
test
stos
stos
iret
insb
insl
inc
jle
push
enter
jecxz
rcr
mov
incb
aad
sbb
pop
pop
std
or
sub
lret
add
dec
std
xchg
or
pop
int3
mov
cmc
nop
push
mov
mov
cmpb
xchg
jns
add
push
pop
push
mov
jbe
lods
jno
or
pop
xchg
sbb
mov
push
or
adc
js
push
ljmp
cmp
fildl
fistl
xchg
enter
xchg
dec
adc
mov
sti
dec
ss
lcall
es
dec
mov
sub
test
sub
or
cld
subl
test
leave
push
fs
test
movsb
aas
pop
cli
fsub
es
or
dec
pop
pusha
xlat
push
or
xchg
in
addr16
lret
dec
push
add
cmpsb
sub
lret
aas
call
push
lock
dec
fs
xlat
or
imul
mov
mov
mov
sbb
mov
mov
xor
mov
repnz
mov
loope
test
je
movsb
or
mov
test
add
and
adc
outsb
push
push
inc
and
flds
dec
movsb
iret
xor
jg
sub
inc
jle
ret
insl
jo
xchg
stos
xor
and
clc
cmp
sub
insb
pop
in
cltd
push
fwait
push
sub
inc
lret
inc
es
mov
pop
cmp
pop
movsb
push
and
lcall
push
loop
add
cmp
addr16
imul
cmc
js
xor
inc
lret
repz
enter
or
inc
cld
or
fcmovu
test
arpl
mul
and
add
adc
add
push
pop
dec
rol
inc
sub
and
pushl
sub
out
sbb
aam
push
mov
or
ret
mov
sbb
ss
adc
mull
xchg
cld
xchg
test
pop
jg
xchg
lcall
mov
sbb
jb
mov
shrl
popf
xlat
insb
lds
or
pop
and
addb
push
addr16
into
xor
jp
pop
aaa
inc
cmp
fidivrs
push
shll
xor
pop
cmp
and
jecxz
inc
sub
lcall
movsb
mov
popf
lcall
je
out
popa
stos
ret
std
ss
push
fistpll
push
in
aam
ljmp
cli
ficoml
shrb
fdivrs
lods
xchg
pop
inc
push
mov
and
jo
mov
popa
inc
cmp
addl
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
jl
xor
xchg
cli
popa
dec
int3
ja
lahf
push
add
stos
mov
std
popf
mov
lock
bound
lods
cmc
lods
sub
mov
cli
jl
mov
in
lea
push
aam
lds
sbb
fisttpll
lret
outsl
in
fdivrs
fadds
lea
std
add
mov
push
adc
jle
pop
shrl
out
sub
add
sub
cltd
dec
pop
xlat
adcb
inc
nop
loop
jmp
call
ds
adc
loopne
mov
mov
jae
push
add
jl
mov
sbb
rorb
push
out
jp
aam
jae
testb
in
pop
sub
pushf
mov
es
pushf
pop
xorl
add
mov
clc
jo
mov
inc
mov
out
sbb
cmp
or
pushf
push
arpl
js
testb
xor
mov
bound
sub
cmp
into
insb
xchg
bound
pop
xchg
fwait
or
xchg
dec
sbb
jb
insb
or
pop
sbb
shlb
test
fisttpl
fldl
add
stos
scas
in
pushf
xlat
pop
mov
cmc
sub
xor
push
mov
lods
cmp
idivb
pop
popf
pop
cmp
or
inc
cmpsb
push
or
dec
adc
fnstsw
hlt
mov
arpl
dec
out
pop
lahf
pusha
mov
outsl
mov
fiadds
push
dec
xorl
fs
xchg
push
push
pop
xchg
sub
xchg
jecxz
inc
sub
insb
or
mov
cmp
jp
cmc
ficoml
sub
cmpsl
add
das
lcall
dec
fistpll
sub
push
xor
popf
mov
stos
ret
add
xchg
push
jl
orb
mov
ja
push
dec
dec
sub
cs
call
xor
jnp
sub
lret
dec
inc
int3
lcall
cmc
cltd
std
xchg
push
xor
push
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
and
imull
adc
ljmp
in
mov
add
test
in
adc
push
xchg
adc
xor
pop
arpl
aam
lods
iret
sbb
sbb
daa
xor
xor
mov
stos
inc
dec
push
lods
xor
lahf
adc
out
dec
xchg
cmp
cwtl
aam
cli
jecxz
inc
out
xchg
cmp
fnstsw
test
mov
test
dec
leave
gs
mov
es
mov
add
pop
and
nop
xor
sub
pop
sub
xor
sti
in
sti
push
mov
outsl
popf
sti
xor
mov
fs
push
in
fisubrs
pop
jnp
pushf
gs
mov
in
pushf
add
adc
sahf
dec
add
test
jmp
ret
fdivl
divl
mov
in
or
and
mov
push
ficompl
sarb
stos
rclb
mov
shr
cmpb
insl
fisubs
sub
xchg
in
dec
and
xchg
jno
ja
loope
lahf
ss
arpl
testl
pop
iret
jp
sbb
ficoms
mov
in
movsl
adc
push
sub
jae
lret
call
int3
sahf
das
inc
ljmp
adc
imul
lret
icebp
clc
test
jae
pop
dec
shrb
data16
lcall
mov
cmp
popa
fcompl
or
into
dec
aad
inc
mov
push
mov
data16
call
xchg
cmp
jge
push
inc
cmp
xchg
push
xor
xchg
xchg
adc
lods
and
mov
jp
scas
or
sub
pop
lret
in
adcb
out
jno
push
movsb
loopne
sub
insl
out
fidivs
sub
iret
aaa
push
pop
lea
mov
sub
jne
sub
js
cmp
loopne
sub
sbb
push
notl
daa
cmp
add
pop
fstl
repz
shll
push
flds
add
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
js
stos
mov
adc
or
stos
sbb
xor
int
push
push
add
aaa
lret
ficoms
inc
mov
ss
scas
add
scas
xchg
xchg
nop
js
mov
leave
or
xchg
and
stos
fwait
jl
mov
jg
seto
cmpsb
mov
hlt
or
add
int3
mov
adc
add
stos
rorb
stos
roll
push
orb
adc
mov
fistpl
daa
icebp
push
jnp
mov
jne
mov
inc
arpl
adc
adc
sbb
or
jae
cmpl
enter
mov
scas
jnp
ljmp
inc
mov
push
push
or
xchg
mov
mov
xlat
lods
aam
or
xor
push
popa
xor
fdivl
test
dec
xchg
iret
mov
sbb
xchg
push
std
hlt
adcb
push
ljmp
fbstp
iret
fisttpl
stos
mov
test
outsl
jmp
cmp
cmpsl
nop
cwtl
sahf
cmp
lea
hlt
jmp
fdiv
xor
negb
into
lret
cmc
adc
ljmp
dec
inc
pop
mov
leave
push
sahf
mov
jge
xorb
imul
not
jb,pt
push
ds
inc
aad
add
outsl
lcall
out
cmpsl
cwtl
jl
ficoms
pop
mov
lret
mov
ret
xchg
imul
aad
outsl
imul
into
arpl
pop
adc
clc
xorb
nop
scas
dec
or
repz
lahf
and
jb
xor
lock
push
inc
mov
sbb
dec
and
cmp
hlt
add
mov
mov
xor
push
stc
movsl
in
push
daa
mov
fdivrs
subb
lret
pop
int3
cmp
mov
xchg
jbe
out
and
xor
jl
dec
mov
or
sub
repz
add
inc
movsb
sub
lods
les
jne
in
mov
adc
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
xlat
punpckhdq
adc
stos
movlps
xor
sbb
notb
hlt
jg
test
in
lahf
call
sbb
or
xor
cltd
mov
cmp
sbb
movsb
loopne
sbb
call
popa
lods
push
arpl
pop
pop
aas
sahf
mov
cmp
mov
cmp
mov
mov
xchg
sub
lahf
shrl
jp
xchg
cmp
xchg
sbb
inc
icebp
or
jge
enter
cld
mov
xchg
pop
cmp
push
and
ret
jge
jne
jnp
ficomps
fisttpll
mov
lock
test
adc
inc
out
lods
aad
or
mov
push
sub
int
mov
arpl
icebp
ret
ds
fsubrl
or
mov
ljmp
xchg
aas
inc
ss
cltd
cwtl
mov
xchg
pop
mov
lahf
pop
pop
mov
inc
add
cmp
sbb
sbb
or
mov
sbb
out
pop
gs
sub
insl
xchg
inc
lods
mull
push
xor
ljmp
loopne
xchg
inc
test
fcmovne
stos
mov
inc
inc
jecxz
push
pop
xor
les
out
xor
cld
sbb
mov
insl
and
xor
lahf
ret
push
pop
fiadds
loopne
sub
lock
and
std
add
mov
adc
cmpxchg
xchg
mov
idivl
inc
out
clts
rcll
cmc
std
push
or
push
das
push
xchg
xor
ficompl
lea
lret
sbb
sbb
aam
jl
xor
cmc
inc
push
push
push
jbe
pop
mov
jbe
jp
rorb
std
andl
pop
rorl
shrb
testb
shll
inc
sub
outsb
sub
jbe
sbb
lahf
mov
cwtl
jae
mov
lods
xchg
pop
mov
fsubl
ds
mov
adc
inc
pop
fwait
ja
int
jne
xchg
mov
sbb
pop
dec
mov
xor
inc
dec
loope
sbb
shll
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
xchg
stos
mov
adc
stos
movlps
lahf
loop
sbb
out
cmp
in
out
out
xchg
rolb
mov
icebp
push
or
sbb
rolb
jle
stc
jno
cmp
fucom
push
fwait
loop
in
push
sub
out
mov
out
push
push
push
test
in
mov
or
mov
in
or
inc
xchg
shlb
lods
pop
sub
dec
mov
arpl
outsl
and
ret
jnp
aam
dec
adc
in
cwtl
cmp
cmc
repz
push
adc
push
aaa
rcll
cmpsl
shr
and
imul
pop
or
mov
shll
sti
add
nop
lret
fsubs
mov
pop
movsl
int
inc
and
pop
cs
icebp
stc
imul
mov
popa
mov
cld
inc
adc
inc
test
sbb
fsts
es
ss
fwait
stos
xchg
stc
dec
mov
pop
xchg
xchg
dec
push
sahf
push
mov
std
cmp
fwait
sub
loop
cltd
add
xlat
insb
jle
sub
popa
sub
mov
inc
jbe
jb
repz
stos
cld
fiadds
shrl
sbb
push
jge
les
lods
or
mov
iret
adc
scas
aam
dec
lods
jp
fidivs
test
adc
mov
dec
push
stos
lds
add
xlat
xchg
xor
ret
out
je
int
xchg
mov
mov
lea
fcmovb
sub
cmp
pop
arpl
subb
mov
and
imul
dec
inc
or
pop
sub
sub
lods
cmp
pop
xchg
jmp
cmp
sbb
jp
cs
add
flds
mov
test
stc
lret
das
sbb
add
xchg
push
jbe
sbb
loope
lods
std
xchg
mov
nop
push
add
js
bound
sahf
xlat
clc
scas
push
or
out
push
add
clc
dec
in
repz
stos
mov
repnz
adc
xlat
push
lahf
inc
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
out
adc
jmp
sbb
inc
and
mov
fcmovnbe
movsb
insb
sti
mov
push
sti
jnp
push
and
fmull
cli
insb
out
xor
pop
outsl
cmp
out
loope
cltd
push
insb
mov
mov
js
sub
adc
mov
or
xor
lock
pop
inc
xchg
test
jg
xor
fldl2t
add
sub
xchg
fcoms
mov
setg
gs
ret
cmp
aas
clc
lock
scas
push
out
sbb
fidivrl
enter
or
iret
push
jg
jl
fcoms
cli
insb
int3
jecxz
xor
nop
leave
add
mov
nop
jbe
or
fidivrs
jp
or
je
hlt
iret
mov
cmp
scas
cmp
jle
adc
inc
out
cmc
mov
and
xor
out
mov
adc
int3
jmp
mov
sbb
pop
and
jb
cmp
imul
jnp
adc
ljmp
lods
or
xchg
inc
add
adc
faddp
test
arpl
jl
fs
addr16
inc
mov
cwtl
loope
push
fsubs
bound
mov
sti
mov
pop
repz
cmp
inc
daa
fisubs
mov
and
jecxz
push
cli
sti
adc
gs
cmp
in
test
jp
in
sbb
jo
or
loopne
lcall
in
dec
insl
push
call
mov
xorb
dec
scas
xor
add
imul
out
jecxz
and
or
xor
add
pop
mov
hlt
dec
push
pop
stos
into
loopne
out
aas
lea
scas
mov
ss
sbbl
pop
stos
test
xchg
sti
fisttpl
sbb
mov
mov
adc
add
pop
movsb
pop
push
mov
and
orb
mov
icebp
js
test
push
inc
mov
inc
push
cltd
pop
mov
xor
dec
ds
int
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
outsl
sub
mov
icebp
mov
or
lods
jb
push
andb
out
lahf
jae
sbb
dec
shld
cmpsb
stos
mov
fstl
sbbb
in
xchg
shrb
mov
les
iret
inc
out
mov
dec
pop
stc
jno
loope
xchg
cmp
call
jecxz
adc
pop
data16
out
xchg
and
scas
sti
dec
pushf
mov
pop
aam
inc
pmaxsw
lods
fcoml
nop
scas
jbe
jp
jns
push
lods
sbb
xchg
xchg
adc
or
orl
out
or
mov
adc
lods
sbb
out
cmpsb
sti
xlat
push
fildll
push
loope
mov
cmp
int
loope
insl
shrl
scas
frstor
inc
cli
imul
adc
mov
call
loopne
xchg
mov
roll
inc
ss
fdivl
in
cmc
jae
pop
xchg
xlat
dec
sbb
insl
pop
mov
loopne
cmp
mov
in
arpl
sbb
dec
data16
pop
adc
xchg
outsb
mov
test
aas
mov
pusha
mov
mov
nop
incl
xorb
je
imul
inc
fiaddl
sbb
sbb
add
cmp
or
aaa
fmuls
cltd
es
mov
xor
aad
mov
insb
or
xchg
cs
rcll
mov
push
sbb
or
les
cmp
data16
ljmp
fs
pop
lahf
push
mov
imul
mov
ficomps
mov
enter
push
dec
mov
in
iret
sbb
adc
add
and
test
and
enter
iret
shrb
jo
scas
cmp
jp
cld
jle
sbb
or
andl
xchg
hlt
jbe
aad
add
sbb
cmp
test
adc
pop
pop
out
xor
ficoms
sub
adc
adc
les
xchg
sahf
inc
sarl
add
jecxz
add
mov
pushf
movsb
dec
fcmovnb
bound
jbe
lock
jg
inc
jb
mov
mov
test
sbbb
nop
xlat
rolb
mov
ret
repnz
inc
and
js
pop
sbb
pop
add
dec
jp
aam
pop
dec
pop
jmp
out
mov
lret
sbb
dec
push
test
ds
stc
cwtl
mov
dec
aaa
push
inc
dec
loopne
mov
mov
lods
std
sbb
push
aam
jge
xchg
popa
das
push
push
jle
xchg
add
in
sahf
inc
inc
test
lds
sub
sub
jp
fstpt
cmp
sub
shll
add
lahf
or
sahf
jne
push
xchg
repnz
incb
in
xor
xchg
sbbl
xchg
cltd
lock
add
aad
or
gs
sbb
inc
mov
push
mov
pop
ret
add
or
mov
inc
mov
xchg
fdivs
xchg
jle
lock
mov
sub
and
xchg
xor
popa
sarl
arpl
jns
cmp
int3
jg
aas
fldl
out
outsl
cmp
addl
push
sbbb
js
leave
inc
cmpsl
add
jle
push
sub
cmc
pusha
pop
jecxz
fisubs
fistpl
pop
push
add
adc
inc
inc
lret
mov
jge
jg
dec
pop
push
gs
sbbb
mov
nop
fadds
cmc
lcall
jno
jge
popf
mov
jno
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
add
adc
pop
adc
adc
lahf
and
fadds
mov
inc
mov
inc
and
or
xor
pop
sub
pop
mov
popl
push
imul
pop
nop
ss
add
lds
jl
jl
push
addb
insl
mov
mov
or
icebp
sbb
add
sti
or
in
incl
es
xchg
data16
ljmp
out
mov
inc
les
add
loope
push
sbb
rolb
imul
hlt
sub
adc
pop
mull
cld
xor
or
xchg
jno
test
push
mov
cli
cld
addr16
or
lret
push
mov
ds
mov
pushf
fnsetpm(287
lds
inc
bound
jmp
and
and
test
jno
jo
xor
clc
push
cmp
push
push
adc
push
mov
sbb
xor
cmpl
fldt
testl
lock
in
sbb
xchg
mov
cmpsl
add
mov
stos
inc
cmp
je
mov
sbb
pusha
pop
cmp
xchg
sub
mov
outsl
xor
repnz
jno
inc
in
mov
out
faddl
or
stc
jecxz
mov
and
fwait
jle
pop
int3
jmp
sahf
fsub
test
outsl
dec
cwtl
std
pop
push
iret
jo
push
loopne
cwtl
xchg
xor
xchg
sbb
push
loope
imul
cmp
inc
inc
cs
mov
pop
add
out
movsbl
sub
roll
pop
inc
jg
and
inc
fs
ret
out
mov
xchg
mov
push
xor
pop
pop
js
sub
xchg
pop
outsb
xchg
cld
out
xlat
add
stc
add
sbb
push
xchg
push
xor
test
jns
sub
sbb
mov
mov
adc
fwait
loope
mov
sub
imul
pop
movswl
adc
rorl
pop
xchg
mov
xchg
push
cmp
mov
sub
xchg
cltd
xchg
mov
out
sbb
xor
mov
cwtl
pop
xchg
jmp
loop
xor
mov
xor
pusha
pusha
mov
sbb
inc
repnz
pop
sbb
xor
or
out
sarl
sbb
jbe
rorl
inc
jle
and
ror
or
stos
jbe
push
jp
lcall
mov
pusha
cmp
idivl
xor
dec
flds
les
iret
push
das
out
shr
pop
mov
rcl
push
nop
and
fldl2e
mov
lret
out
shlb
mov
mov
ficomps
mov
or
push
mov
dec
push
je
push
add
leave
mov
addr16
sbb
dec
ja
push
testb
mov
cmc
dec
sbb
pop
dec
dec
hlt
sbb
sbb
sti
test
pop
inc
je
nop
fwait
lcall
xor
jp
lea
mov
mov
mov
out
dec
mov
inc
rep
mov
clc
mov
pop
add
mov
xchg
daa
add
sub
movsl
rolb
xor
and
loop
jl
xchg
daa
cltd
pop
push
mov
aad
xor
pushl
adc
daa
sub
jnp
in
sub
sbbl
and
or
ret
imul
out
cmp
xchg
mov
mov
aas
pop
stc
fiadds
dec
jp
loop
mov
and
inc
sub
add
les
movsb
push
fs
or
sub
iret
jmp
icebp
fwait
ja
jb
lcall
lods
sub
fdivl
mov
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
lahf
or
mov
and
adc
sub
call
stos
lea
outsl
iret
fldenv
int3
lret
sub
dec
rcrl
mov
cmp
loop
ljmp
ljmp
sbb
in
or
or
lret
or
nop
insb
cmp
js
xchg
push
in
xor
pop
fidivs
and
je
add
cmp
adc
xchg
sub
xchg
je
orl
sbb
xor
mov
cmp
leave
mov
icebp
in
std
daa
ret
stc
popf
or
or
xchg
enter
dec
mov
enter
int3
inc
clc
pop
loopne
pop
test
in
mov
dec
dec
mov
pop
orl
mov
outsl
cmp
leave
mov
aaa
icebp
and
je
out
in
jmp
outsl
f2xm1
stc
and
cmp
jle
insl
dec
scas
popf
mov
add
dec
inc
repz
and
xchg
mov
enter
fdiv
jae
cmp
gs
out
mov
xchg
fwait
stc
mov
dec
jecxz
scas
push
and
dec
movsl
lahf
sub
rorb
out
xor
sub
cmp
lea
add
sbbl
repnz
add
push
pop
outsb
mov
ficompl
clc
loop
popf
fadd
xchg
negl
cmp
outsl
rcr
sbb
mov
xchg
inc
dec
mov
xchg
xchg
ss
movsl
sub
orl
inc
mov
pop
fistl
repnz
clc
lods
jmp
sbbb
scas
mov
mov
rclb
or
loope
lock
xchg
sbb
icebp
jno
pop
cmp
xor
enter
and
mov
ja
mov
pop
cmp
cmpsl
inc
arpl
imul
pop
jecxz
or
mov
xor
and
test
test
loope
movsl
pop
fwait
inc
xor
scas
cmp
pusha
sbb
rcl
push
lods
outsl
dec
out
lret
pop
test
cmp
ret
in
and
lds
inc
negl
xchg
leave
jae
mov
das
aam
xorb
push
fcompl
cmpsb
mov
pop
les
pusha
jne
or
je
movsl
mov
add
movswl
scas
test
mov
pop
test
xchg
or
fucomp
repz
mov
gs
xchg
cmpsb
xchg
cmp
jb
jo
cmpsb
loope
xchg
rcrl
add
push
jno
xchg
dec
arpl
add
movb
jns
jo
adc
pop
data16
cmp
add
mov
imull
imul
movsb
nop
xchg
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
inc
add
xor
icebp
loop
fidivrs
fnstsw
or
xor
pop
xchg
cmp
push
stc
sub
pop
sahf
xchg
ds
pop
imul
push
push
add
pop
sti
les
cmpsl
bnd
sub
imul
shlb
fistl
ja
sarl
or
insb
fisubs
inc
ret
ficoml
sbb
pop
mov
mov
inc
adc
add
mov
jp
fcmovu
mov
sub
rclb
push
mov
dec
mov
aaa
pop
stc
xchg
sub
sub
jle
push
enter
and
jmp
sub
jns
mov
repnz
lock
testb
xchg
or
shlb
cmpsl
ret
sub
iret
pop
xor
lret
dec
adc
mov
pop
jo
aad
scas
mov
sbb
mov
cltd
shrb
xor
pop
add
mov
push
push
fs
test
dec
addr16
arpl
and
rcll
orl
gs
outsl
mov
rcrl
aad
push
jo
loope
push
pop
adcb
or
inc
and
sub
adc
inc
leave
and
movsl
cmp
mov
jo
ret
pop
lock
mov
js
stos
jb
aaa
cltd
mov
cmp
in
cmp
mov
sti
adc
adc
push
mov
fmull
int3
or
outsl
pop
xchg
and
lods
clc
dec
stos
add
jne
push
or
sub
push
inc
xchg
cmpsb
push
xor
mov
mov
data16
inc
cmp
sub
scas
mov
push
pop
or
inc
loopne
pusha
push
out
mov
leave
and
mov
and
mov
out
in
loope
mov
mov
andl
sub
ljmp
cmpsb
loopne
in
and
xchg
adc
or
jno
push
addb
popa
cmp
mov
ret
sbb
std
ljmp
sbb
push
mov
and
push
pushf
cli
in
mov
inc
mov
jmp
inc
xchg
cmp
std
cmp
shll
jns
push
int3
sbb
in
loop
push
cmp
lea
pop
rcll
add
pushf
in
add
jmp
ja
pop
and
mov
ja
push
xlat
pop
enter
daa
or
sub
cltd
insb
movsl
pop
xor
fidivl
cmp
push
imul
jb
lds
cld
ljmp
lock
nop
pop
push
or
movsb
pop
xchg
aas
sub
xchg
push
and
stc
mov
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
enter
adc
and
adc
inc
push
cmp
cmp
and
ffree
leave
in
inc
or
cmp
push
lret
dec
mov
xchg
adc
push
mov
outsl
mov
or
cmp
or
dec
ret
mov
cld
hlt
or
loopne
ja
inc
mov
xor
sbb
stos
inc
loopne
or
insb
shll
xchg
push
out
sub
inc
cmovnp
sti
lds
dec
sub
dec
popf
xchg
lcall
in
and
or
arpl
sbb
push
sbb
or
xlat
mov
and
adc
lock
inc
push
icebp
sub
out
notb
aas
xorl
adc
dec
jns
or
shlb
pop
and
data16
out
pop
jge
out
push
and
mov
cmpl
adc
lock
fs
and
inc
cmp
out
xor
in
icebp
mov
in
int3
or
sbb
pop
cmp
pushf
and
add
test
sbb
mov
int3
stos
jecxz
ljmp
mov
mov
inc
dec
add
dec
sbb
and
dec
mov
stos
es
mov
outsb
push
cmovs
mov
fcomps
roll
dec
daa
movsb
xor
fidivs
inc
adc
test
jb
or
jecxz
sub
lods
jbe
icebp
jns
xchg
or
shrl
and
pushf
pop
ds
mov
mov
add
inc
loop
xchg
pop
dec
xchg
leave
mov
sub
xchg
xchg
insb
lock
or
lock
aas
and
ja
pusha
outsb
or
push
sub
cmc
les
cltd
xchg
addl
mov
xor
push
or
inc
idivl
pop
icebp
loop
pop
mov
pop
or
dec
ret
add
and
fisttpl
sti
in
lock
je
insl
in
xchg
fadds
adc
movsb
sarb
pop
mov
jnp
fwait
push
in
lods
out
lret
push
jmp
loope
pop
lods
sbb
mov
in
sti
or
repnz
imul
mov
hlt
outsb
fstpl
mov
ja
sti
cltd
mov
movsl
imul
movsb
in
jb
push
jl
mov
fidivrs
pop
rolb
mov
push
cld
js
inc
add
adc
pop
push
or
xchg
rclb
sub
mov
add
cmp
and
inc
lret
popa
sub
jbe
test
ficoms
and
lret
fcos
int3
es
and
bound
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
push
sbb
stos
pop
jae
adc
dec
lcall
imul
jo
call
adcl
rcrl
int
add
jmp
mov
sbb
xchg
sbb
mov
lret
mov
cmpsl
daa
sar
inc
pop
mov
and
sahf
paddq
sbb
or
rcrl
pop
test
or
xor
popa
cltd
mov
sbb
addr16
int
lcall
sbb
outsl
in
adc
mov
lea
repnz
loop
fisubs
stc
loop
arpl
jbe
roll
push
adc
mov
enter
mov
fbld
cmp
or
gs
punpcklbw
mov
mov
mov
fiaddl
test
jg
lret
mov
inc
xor
add
dec
mov
push
les
ret
pushf
push
daa
xor
repnz
popa
je
outsl
dec
mov
mov
and
xchg
dec
sub
push
sbb
sub
cltd
stc
pop
cmp
lea
xchg
cli
add
shr
scas
jbe
pop
and
and
mov
repz
pop
inc
es
adc
sbb
fwait
dec
aas
loop
and
sbb
adc
xor
xor
lods
outsl
mov
xchg
or
fwait
lock
mov
andl
bound
xchg
sahf
and
push
setl
xor
mov
inc
lahf
movsl
adc
mov
add
lds
les
xchg
push
pop
and
ret
in
ljmp
push
lret
stos
cmp
lods
add
lahf
movsb
push
pop
jae
dec
pop
jo
xor
mov
xchg
sbbl
cmc
xor
push
gs
mov
push
and
sbb
lods
push
lret
sub
fucom
push
notl
les
cli
in
mov
or
sbb
sbb
sbb
lock
insb
lea
inc
out
sub
lcall
jge
loope
mov
inc
test
std
push
mov
mov
ds
js
xchg
inc
fldl
sub
outsb
loopne
mov
jmp
icebp
mov
dec
xchg
sbb
sbb
jo
cltd
mov
nop
insb
sub
aam
cmp
call
and
fistps
jmp
and
repz
push
cmp
sbb
mov
adc
mov
mov
dec
mov
stos
dec
lret
inc
loopne
sbbl
ret
jl
mov
dec
inc
xchg
out
push
out
pop
xor
mov
mov
adc
std
pop
push
xchg
in
add
or
ficomps
mov
into
add
add
out
sub
sub
pop
call
xchg
adc
fs
xor
fldcw
adcl
fisttpll
adc
fstpl
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
push
cmc
loope
popa
notb
xor
rorb
lcall
daa
cmp
in
pop
inc
clc
loop
add
inc
cmp
jecxz
jne
or
in
pop
mov
iret
jo
xchg
out
or
dec
jo
lretw
cmp
addl
sub
divb
push
or
adc
mov
loopne
push
pop
test
movsl
xor
dec
dec
mov
addl
cmpb
shll
pop
mov
cmp
scas
sub
sbb
mov
and
repz
outsl
pushf
and
xchg
test
xchg
xor
jg
lret
jne
outsl
xchg
add
pop
mov
pop
sub
jl
inc
into
icebp
lret
dec
add
cs
fnstcw
mov
lret
sub
rol
mov
insl
lods
xchg
adcl
shrl
push
xchg
adc
mov
cs
sub
aam
fucomip
jmp
inc
pop
iret
outsb
pop
movsb
inc
out
out
je
xorl
out
xor
mov
jg
stos
icebp
lods
mov
mov
ss
and
ret
rcrb
pop
fidivl
mov
aam
mov
xchg
mov
push
push
inc
mov
iret
call
test
sbb
dec
dec
jg
jle
stos
jbe
rolb
adc
sbb
mov
inc
scas
test
das
roll
mov
insb
sbb
add
stc
mov
push
pop
popa
jno
divl
sub
xchg
int
fistpl
add
cmpsl
gs
lahf
mov
js
cmp
imul
jns
fisubrl
imul
or
inc
push
mov
pop
sub
xchg
sbb
cmpsl
inc
mov
and
repnz
mov
and
mov
mov
mov
insl
sbb
push
push
ret
cmpsl
aam
aaa
sbb
mov
jp
imul
cmpsl
sahf
cs
xor
je
mov
bound
js
cli
cmp
rcl
lret
sbb
pop
add
cmp
xlat
stc
inc
add
and
jno
mov
test
jge
mov
mov
ret
or
repz
and
repnz
stos
mov
adc
mov
xor
and
push
sbb
sub
add
or
loopne
loope
or
mov
sub
xchg
dec
sbb
incb
bswap
jl
shl
inc
ss
jecxz
push
mov
push
loopne
mov
push
jno
jg
xor
xor
push
xchg
mov
cmc
and
sbb
out
xor
mov
mov
cmp
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
cs
mov
or
push
ljmp
sub
lock
sub
ficoms
fwait
mov
mov
je
leave
jge
mov
sbb
mov
iret
addr16
adcb
int3
mov
ds
roll
je
imul
bound
ds
jp
sbb
push
sub
xchg
mov
dec
movsb
mov
mov
push
pop
push
dec
cmp
and
das
xor
sub
je
push
dec
loope
sbb
ret
adc
sub
lcall
loope
sub
popf
mov
add
movsl
int3
xchg
cmp
sub
jle
jp
ljmp
pop
adc
stos
in
xor
pop
jl
aad
and
fxch
adc
sbb
andl
dec
dec
dec
insl
pcmpgtw
mov
pop
mov
scas
add
fs
jne
aam
outsb
imul
call
test
loopne
ljmp
in
mov
aam
sahf
stos
dec
fldt
cli
push
xchg
cmp
lret
push
es
xchg
dec
pop
outsb
sub
lea
sbb
std
cld
and
shrl
pop
scas
pop
mov
ret
inc
and
daa
data16
push
insb
in
ficompl
push
std
inc
lahf
or
adc
or
bnd
xchg
out
adc
xor
adcl
dec
xchg
cltd
aas
lahf
imul
test
cmp
sbb
icebp
test
inc
movsl
cs
inc
call
inc
and
scas
sti
ss
inc
sbb
sbb
movsb
scas
push
add
xchg
lods
or
cltd
mov
mov
outsb
inc
sub
mov
push
mov
cli
data16
add
ret
and
xlat
sbb
sub
insl
pop
dec
adc
push
and
xchg
xchg
jge
jecxz
in
inc
adcl
lea
xchg
mov
mov
xchg
inc
call
xchg
inc
pop
or
mov
subl
sahf
dec
cmp
fs
cmp
and
lods
mov
loope
mov
xchg
mov
inc
cmc
data16
out
add
mov
dec
dec
in
adc
mov
out
pop
cmp
test
dec
cmpsb
pop
mov
movsl
push
and
dec
fldl
iret
orl
setno
popf
sbb
fcmovbe
lods
sbb
sbb
in
clc
lods
mov
jns
lods
pop
mov
xchg
pusha
scas
mov
in
dec
inc
outsb
jmp
cltd
std
movsl
ljmp
jnp
jp
dec
add
popf
jne
mov
syscall
repnz
push
loop
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
das
aad
xor
sbb
mov
adc
scas
iret
sbb
or
fmul
arpl
jecxz
sti
push
and
fdiv
testb
jmp
scas
jmp
out
mov
fadds
xor
loopne
dec
jae
loop
add
lods
push
cwtl
cmp
or
ret
das
inc
jg
mov
jbe
call
push
imulb
and
pop
push
mov
lcall
sbb
add
ds
pop
xor
xor
jg
pop
mov
pop
or
mov
ret
or
fwait
sbb
je
sarb
jmp
fsubs
cli
movl
cltd
in
mov
mov
jg
and
rorb
inc
inc
pop
fwait
ja
cmc
ficompl
cmp
push
mov
pop
jbe
and
and
clc
jb
outsl
inc
nop
or
rcrb
inc
cli
fistps
ja
pushf
inc
daa
pop
adc
pop
out
stos
mov
cli
mov
cltd
loope
rolb
mull
vpcomuw
test
cltd
mov
cld
push
shll
add
fisubrs
imul
je
test
idivb
adcl
inc
stos
fadd
insb
je
xchg
andl
jmp
xor
in
mov
hlt
divb
sbb
sahf
jmp
mov
adc
incb
adc
xchg
adc
fwait
daa
int3
push
jl
daa
lods
pop
jne
push
test
insl
les
dec
xor
movsl
enter
pop
xchg
pop
sahf
mov
pop
iret
stos
sbb
inc
pop
shrd
ljmp
sub
dec
mov
mov
dec
mov
jae
sbb
cmpl
jno
repnz
in
mov
loope
ret
scas
arpl
adc
test
sbb
rcll
repnz
cmc
pushf
lcall
daa
push
mov
scas
mov
sub
push
push
mov
adc
jl
cmpsb
cmp
int3
loopne
and
outsb
popa
pop
adcl
incl
push
cs
mov
mov
popf
test
pop
xchg
fildll
orb
inc
jo
mov
aam
js
push
loopne
lds
mov
mov
leave
sti
pop
jg
dec
cli
and
popf
adc
out
mov
dec
sub
aaa
jge
outsb
dec
xor
mov
adc
or
inc
jnp
insb
mov
outsl
sbb
mov
and
xor
cli
aam
cltd
cmp
pushl
shlb
or
in
add
daa
lock
out
push
mov
mov
inc
pushf
xchg
sarb
aad
cmp
dec
mov
cmc
sub
add
jb
mov
int3
xchg
lret
jno
sub
jg
lret
addl
jl
repz
sbb
in
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
addb
adc
adc
test
lcall
sahf
adc
iret
mov
xor
fbstp
in
into
cmp
adc
sbb
insl
pusha
out
mov
cltd
jnp
pop
jbe
dec
or
int3
inc
sub
and
fs
dec
xor
cmp
pop
test
dec
sub
nop
daa
cwtl
shll
sbb
insl
or
addl
inc
xchg
push
test
adc
arpl
xchg
jno
xlat
fnstcw
aad
mov
das
cmp
lds
aam
pop
stos
inc
cmp
fwait
mov
mov
dec
xlat
mov
pop
out
or
rcrb
ja
shrb
aad
cmp
or
sbb
xor
leave
stc
push
fs
sbbl
xchg
jae
in
popa
adc
bound
in
sbb
mov
jecxz
shll
inc
hlt
jmp
push
mov
xor
mov
jns
loop
push
scas
inc
cmpsl
inc
insl
fldt
or
cmp
mov
xchg
cmpsb
xor
xchg
fists
pop
fisubrs
in
push
xchg
push
adc
jmp
idiv
sarl
movsb
lahf
add
push
cmp
sbb
sub
lock
fisttpl
xor
dec
loopne
adc
jp
pop
cltd
lcall
xchg
dec
aam
inc
mov
inc
ret
test
push
mov
pop
jb
add
jecxz
addr16
or
pop
mov
scas
scas
xor
out
out
mov
fmull
mov
sub
pop
mov
fwait
xchg
and
hlt
adc
notl
imul
xor
xorb
scas
xchg
stc
add
out
jns
rorl
jae
mov
stos
mov
mov
insb
call
xor
push
mov
stos
cltd
ret
cmp
pop
add
dec
push
test
add
and
pop
dec
inc
enter
or
push
dec
pop
in
mov
out
outsl
add
sbb
jns
cwtl
pop
sti
gs
cwtl
or
popa
add
lds
cmp
push
cmc
mov
mov
repnz
xor
or
mov
jge
cmp
iret
ja
pop
lret
cltd
cwtl
xchg
std
fwait
insl
lret
mov
or
stc
out
mov
mov
mov
sbb
ret
imul
mov
call
ds
sub
mov
mov
fidivl
and
shll
pop
leave
sub
jno
sub
dec
xchg
cltd
jae
xchg
fucom
jo
xchg
mov
push
mulb
shll
leave
out
push
dec
dec
pop
lods
xor
cld
pop
pusha
rcll
jge
jmp
push
push
jmp
outsb
xchg
std
sub
and
cmp
add
push
add
mov
sub
add
sbb
ja
jle
mov
mov
xor
jle
js
ds
or
mov
in
adc
out
cmpsb
push
mov
jmp
je
test
stos
push
cmpsl
fisubrs
inc
cld
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
adc
pop
lods
test
adc
adc
arpl
xor
scas
mov
cmp
or
in
and
ja
mov
ret
fwait
aaa
jg
xchg
jo
int
fadd
enter
xchg
das
jp
aaa
mov
or
call
lahf
in
mov
loop
sub
fs
cld
xor
fwait
adc
jl
push
stos
add
cmp
std
sub
fdivrl
fadds
dec
jg
push
inc
fs
fs
dec
cmp
test
jg
mov
inc
jne
subl
cmp
push
xchg
iret
roll
ret
dec
xchg
inc
out
jle
pop
scas
daa
sbb
sbb
test
popf
ror
push
pop
mov
cmp
xchg
and
and
jnp
insb
pop
xchg
cmp
aam
mov
mov
adc
negb
sbb
xor
int3
test
out
daa
ror
lret
mulb
cmp
insb
mov
test
mov
or
mov
out
push
movsb
test
jnp
xchg
addr16
lret
sarl
mov
push
xchg
leave
clc
lret
lea
insb
mov
insl
ret
out
sbb
adc
cmp
sub
mov
sbb
lahf
pop
mov
mov
cmp
imul
std
dec
loope
pusha
mov
mov
rcll
out
inc
push
clc
sbb
xchg
sub
es
push
mov
dec
sarb
inc
pop
xor
sub
xchg
push
pop
xchg
pushf
dec
push
adc
pushf
lcall
ret
das
incb
pop
sahf
in
push
cmovb
pop
sahf
sub
std
mov
sbb
rcrb
ss
mull
in
shll
iret
test
sub
mov
sbb
ficomps
shll
xor
sub
clc
jae
add
inc
mov
fdivs
loop
mov
imul
xor
sbb
jg
xchg
mov
mov
dec
inc
pop
dec
fcmovne
call
inc
cmpsl
mov
arpl
sub
or
pop
xlat
nop
les
aas
mov
mov
inc
push
sti
mov
xchg
sbb
jecxz
mulb
jmp
fs
xor
sbb
cmpsl
clc
mov
in
test
bound
mov
jae
cmp
jbe
rcl
repnz
int3
fnstsw
jbe
pop
je
loope
jp
sub
fsubrs
aas
ss
sub
push
push
pop
xor
cmp
inc
stos
es
push
test
lahf
jmp
into
fwait
xlat
iret
sub
ret
bound
ja
push
ss
add
in
fisttpl
iret
daa
fsubrs
xchg
mov
pop
out
js
insl
cmp
ret
rcr
jbe
sarb
add
mov
shlb
lods
ja
test
daa
sbb
dec
in
mov
mov
lods
hlt
test
push
enter
bound
aaa
dec
inc
pusha
mov
jne
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
jbe
pop
push
adc
jp
adc
push
dec
mov
xlat
popf
mov
inc
add
jge
test
std
xchg
pop
xchg
shrb
cmp
jle
iret
test
cmc
dec
xchg
leave
cmp
mov
sbb
and
pop
pop
fs
je
mov
jp
push
add
mov
data16
sub
sub
cli
loope
imul
and
add
in
dec
pushf
out
jne
into
fstpt
adc
pop
and
popf
insl
ret
xchg
adc
xchg
mov
mov
ret
in
and
jnp
pop
mov
xchg
mov
push
fs
mov
aam
add
dec
jbe
push
insl
sbb
cmp
mov
movsl
mov
fisubl
mov
shrb
xor
inc
jb
mov
jnp
lret
mov
lahf
jnp
add
fistpll
xchg
cs
sbb
jecxz
mov
test
test
xor
cli
inc
popf
rcr
flds
pop
stos
adc
mov
sahf
push
push
or
xor
mov
ret
out
std
fildll
or
sbb
mov
cmp
lcall
cmp
popf
scas
adc
scas
icebp
jle
fdivrs
push
mov
xlat
sbb
mov
cmp
push
test
mov
test
in
inc
cs
das
aad
popa
and
lea
jae
das
xor
mov
imul
popa
mov
pop
repnz
adc
cld
out
xchg
mov
ja
mov
pop
pop
idivb
loop
in
jmp
xor
adcl
cmp
fcoms
and
mov
cmp
fldl
call
andl
lods
lret
lret
pop
and
test
cli
add
mov
lret
aas
mov
ficoml
xchg
cmpsb
out
inc
pop
add
inc
cmp
sti
sub
jge
dec
adc
popa
pop
std
inc
sub
shr
add
imul
push
inc
jecxz
jge
subl
in
les
test
stos
rep
imul
lock
call
fisubrl
insb
jle
lods
cld
clc
jg
es
inc
xor
pusha
jle
jne
jne
jecxz
adc
cmp
andb
lds
daa
cmc
dec
insb
push
pusha
je
xlat
cmpsl
scas
mov
bound
jb
mov
dec
and
add
icebp
xlat
ljmp
xchg
js
mov
enter
int3
add
inc
jg
add
imul
mov
pop
and
pop
pop
xchg
or
aad
xchg
xchg
dec
mov
outsb
push
rcrb
lret
sub
fwait
jmp
adc
sbb
pop
addr16
xchg
sub
sub
push
enter
fs
mov
testl
mov
pusha
aas
movd
mov
push
inc
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
jns
js
inc
adc
lea
adc
es
iret
pusha
push
mov
add
push
pop
outsb
or
fs
data16
in
fwait
lret
mov
xor
repz
add
lahf
or
std
cwtl
jl
mov
lahf
shrl
addl
insl
dec
pusha
or
mov
xchg
insl
cmp
sub
sub
adc
jmp
mov
pushf
jnp
xor
aad
rorb
cmc
fidivrl
mov
rcr
gs
sbb
pushf
lods
lea
inc
fwait
push
leave
in
adcl
in
or
sub
ret
sarb
in
test
cmpsl
dec
sub
es
imul
dec
adc
andl
jmp
pushf
outsb
out
int
mov
mov
pop
and
mov
dec
cmp
and
lods
cmp
mov
es
stc
or
push
imul
jp
xor
loopne
mov
mov
jns
incl
stos
loopne
rclb
sub
push
loope
adc
rorl
pop
mov
mov
inc
adc
sub
mov
and
mov
mov
xchg
pop
and
add
std
sbb
inc
mov
shll
cmpl
xchg
sub
add
dec
dec
ljmp
jl
movsl
push
aaa
inc
movsb
push
xor
jo
sub
xchg
jecxz
popf
mov
jg
test
mov
movsb
cmp
push
out
mov
push
cltd
mov
mov
pushf
das
in
mov
fsubrl
cwtl
pop
sbb
inc
popa
and
sbb
push
cld
clc
xor
or
push
in
jnp
scas
in
add
shl
mov
lcall
inc
mov
ja
jo
jae
out
aam
inc
pop
out
repnz
rorb
jae
xor
aam
hlt
iret
inc
or
or
sbb
adc
push
incl
mov
dec
aaa
pop
je
inc
ss
pushf
xlat
jb
dec
xchg
pop
jp
daa
sbbb
jle
push
fistl
lret
movl
mov
scas
xchg
or
sahf
pop
xchg
enter
mov
rol
xor
sahf
cmpsb
cmp
cmp
gs
stos
std
push
pop
or
jge
ret
dec
aad
pop
mov
js
push
test
repnz
pop
test
pop
xor
xchg
outsb
xor
std
xchg
ja
dec
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
je
loop
dec
xor
call
jp
pop
sbb
jle
mov
ds
cmp
fsts
xchg
pusha
les
out
mull
xor
fnstenv
jmp
inc
inc
sbb
in
and
stos
dec
test
leave
cs
pushf
mov
repz
test
sub
daa
xchg
call
dec
sbb
or
movsl
movsb
add
xchg
add
idivl
cmpsl
mov
cli
jnp
fdivl
pop
dec
xchg
sbb
popf
xor
test
jmp
sbb
js
imul
jbe
std
push
shl
in
lcall
icebp
imul
jae
pusha
dec
in
jp
or
add
pop
test
shrb
pop
push
mov
testl
out
inc
jno
ret
leave
lret
sbb
aad
ret
rclb
xchg
xchg
in
mov
cmp
mov
into
push
lahf
push
jl
sbbl
pushf
scas
sub
cmc
outsb
repnz
cs
mov
aaa
push
outsb
test
mov
mov
adc
sahf
fs
repz
inc
sti
das
sub
adcb
mov
push
jno
mov
int
clc
cmp
jnp
xchg
gs
or
imul
lods
fcomi
out
jp
sub
or
cmpsl
and
loope
sbb
push
lret
pop
adc
pushl
mov
cmp
outsb
and
push
inc
mov
rcrl
rolb
mov
daa
movsb
inc
loop
dec
cmp
imul
mov
rol
jne
cmpsb
lock
out
in
dec
and
mov
lods
insl
jb
movsb
xlat
sahf
xchg
mov
ret
push
lcall
cwtl
fcompl
add
dec
xor
push
jns
cmpsl
xlat
xlat
mov
cmp
in
push
sbb
dec
negb
mov
jecxz
push
jne
or
mov
add
pop
in
sbb
lahf
iret
mov
in
fs
shll
fsubrl
mov
mov
jns
jne
out
push
pop
jle
dec
mov
out
arpl
in
mov
je
das
inc
add
addr16
and
pop
movsb
mov
cld
daa
sahf
insl
pop
cmp
lcall
dec
or
jmp
jecxz
aam
jle
mov
cmp
dec
push
fisttpl
cld
push
or
pop
sti
jns
xchg
sbb
xor
lcall
test
loopne
cmp
and
mov
ret
mov
sti
push
dec
cwtl
xor
pop
fisubl
cmp
and
stos
xchg
or
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
adc
jnp
mov
je
inc
add
lods
add
out
xor
jge
adc
mov
ror
xchg
stos
negb
pop
lods
or
sbb
mov
dec
add
mov
repnz
dec
adc
xor
pop
dec
mov
lods
nop
int3
xor
test
fisubs
fmulp
shrl
lods
repz
lods
push
xchg
and
mov
std
inc
stos
outsl
cmc
xchg
jae
jne
stos
pop
xchg
dec
push
mov
gs
pop
add
mov
mov
jb
xor
imul
push
rorb
mov
or
fildll
add
pop
lret
aam
push
jo
push
loop
pop
and
inc
int3
dec
sbb
push
pop
cmp
push
popl
push
xor
adc
call
xchg
ds
ljmp
imul
jp
leave
aad
in
jae
mov
adc
imul
xor
dec
jl
jecxz
imul
fstpl
mov
jne
jmp
inc
test
mov
lea
aas
fnsave
sub
mov
add
outsl
adc
push
mov
jo
inc
sbb
pop
iret
loopne
data16
dec
mov
insb
mov
cwtl
push
xchg
cmpsw
sbb
rorb
ror
jl
push
and
inc
es
orb
mov
and
popf
mov
es
std
mov
mov
or
clc
test
mov
mov
cmp
mov
push
xchg
mov
inc
xchg
lock
mov
inc
adc
outsb
and
fsts
stos
enter
dec
es
mov
pop
pop
mov
xor
push
mov
bswap
cmp
cmp
cmp
cmovp
and
daa
jo
je
enter
and
sub
pop
adc
xor
ljmp
sbb
test
add
mov
lsl
pop
mov
std
adc
ret
test
push
jae
sbb
xchg
ret
popf
sti
repnz
sub
in
rcrl
sbb
adc
sbb
fisubs
xor
push
mov
mov
loopne
ret
dec
dec
xchg
xchg
xchg
in
dec
jne
ds
mov
frstor
lock
xchg
fsubs
ud1
jl
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
mov
aaa
adc
lea
adc
rorb
sbb
add
sub
xlat
mov
ljmp
loope
lock
in
push
ds
dec
dec
ficompl
add
loope
sub
jg
lds
cs
sub
aad
aam
into
mov
jbe
ds
mov
lods
addr16
dec
mov
in
xchg
xor
add
mov
enter
ja
insl
and
sbb
inc
mov
lea
mov
lds
into
push
testl
fwait
xchg
push
lods
jge
or
ljmp
sbb
dec
fs
lea
mov
stos
xlat
xchg
cmpsb
shrb
insl
add
out
sbb
xor
pop
cmp
xchg
scas
xor
leave
push
pop
jmp
inc
xchg
into
xor
inc
jecxz
cwtl
rcl
lcall
mov
loop
adc
dec
jge
rol
loope
lods
call
dec
push
lret
dec
mov
insl
aad
pusha
jecxz
or
leave
push
out
xchg
jne
test
sub
xor
xor
mov
rol
mov
push
fsubrs
jae
push
push
jmp
and
mov
loope,pt
xchg
aam
daa
mov
adc
mov
sub
cli
and
int3
and
gs
xchg
inc
test
movsb
imul
ret
mov
arpl
cmp
icebp
fwait
sub
and
add
push
jmp
rcr
mov
mov
mov
in
xchg
in
mov
xchg
jae
arpl
mov
dec
repz
add
clc
adc
jecxz
jae
js
inc
idivb
cmp
lods
cmpsb
mov
add
jne
insl
mov
push
in
rorl
dec
js
xor
push
sbb
sub
fisttpl
dec
add
bound
dec
sbb
outsl
jge
lahf
and
sahf
popf
mov
cmp
ja
xchg
out
maxps
aam
rcll
xor
push
cld
or
aad
nop
mov
mov
loopne
xchg
pushf
jno
js
shrl
ret
lods
mov
test
pop
sub
es
shl
addl
and
or
sbb
das
mov
add
ds
scas
cli
mov
mov
mov
lret
aas
jl
add
sbb
cmpsb
dec
pop
test
push
cli
pop
out
adc
inc
adc
jo
mov
mov
and
gs
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
add
adc
lea
adc
dec
mov
and
sub
mov
pusha
sbb
int
insb
movsb
fwait
xor
cmpsb
arpl
and
pop
mov
and
and
push
cld
loope
jnp
out
pop
xchg
cmp
fwait
mov
dec
push
or
enter
cmp
dec
cmp
js
test
sbb
into
mov
inc
pop
adc
xor
repz
dec
hlt
fwait
xchg
pop
les
lods
hlt
mov
mov
jmp
push
in
fldl
dec
loopne
sbb
popl
mov
jae
ret
filds
das
lahf
jns
and
mov
xchg
jecxz
jnp
sbb
pop
push
sbb
xlat
enter
sbb
or
sbb
data16
or
nop
out
sarb
or
pop
cmp
pop
mov
addb
or
or
loop
add
mov
dec
push
popw
pop
inc
outsb
pop
mov
mov
dec
test
xor
sti
in
test
rorl
fadds
popf
arpl
adc
xor
push
mov
cmpsl
in
jecxz
adc
inc
lea
gs
sbb
ds
xchg
push
mov
lgs
pop
lds
or
idivl
lds
mov
out
add
or
push
sbb
rol
imul
repnz
cmpsb
sub
sbb
fcmovu
and
dec
shlb
les
mov
jecxz
divb
pop
push
sbb
mov
add
js
in
mov
sti
insb
mov
mov
cmpsl
test
shr
in
or
imul
js
insb
rcrb
mov
mov
arpl
cmpsb
add
mov
or
fimull
pop
mov
rclb
pop
xchg
push
xor
push
dec
jno
xchg
mov
popf
mov
jecxz
jg
sahf
adc
jl
gs
daa
mov
out
and
pop
in
aam
loope
push
cltd
add
dec
inc
adc
sbb
sub
jmp
inc
mov
lret
mov
xlat
scas
dec
sub
xchg
jge
popf
xchg
jne
adc
sarl
inc
dec
mov
sbb
sti
jno
dec
sahf
mov
popf
xchg
fs
std
push
push
xor
int3
cmp
dec
ds
ss
and
mov
push
mov
pop
mov
adc
add
dec
push
dec
pop
lret
hlt
je
inc
std
adc
call
inc
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
xchg
rep
mov
movlps
pop
dec
stos
sbb
mov
arpl
test
repnz
adc
sub
out
clc
xor
popa
loope
aas
movsb
fdivrs
dec
rolb
fldcw
out
push
xor
jne
mov
cltd
mov
sub
call
inc
dec
lahf
jmp
xchg
mov
jecxz
mov
ljmp
rorl
fstl
mov
fwait
das
fidivl
loop
push
xor
cmp
nop
scas
xchg
pushl
and
dec
test
clc
jge
sbb
aad
sub
cmp
jae
jge
push
enter
cmp
addr16
lds
das
push
mov
xor
cmpsb
stos
rclb
sbbl
jle
push
mov
or
sub
popf
cmc
pop
adc
mov
jl
dec
sub
incb
mov
addr16
adc
enter
sub
popf
outsb
hlt
pop
and
mov
std
ds
fs
imulb
pop
sub
jnp
into
sahf
js
sbb
inc
pop
sub
pop
cmp
push
orb
mov
in
test
inc
or
stos
dec
cmp
sbb
fwait
test
andb
fs
mov
nop
imul
aam
daa
push
out
out
jno
call
push
xchg
mov
pop
negl
xor
call
test
jp
dec
icebp
shll
xchg
fxch
jne
popf
cltd
jnp
divb
mov
outsl
jb
pop
and
sub
mov
push
popa
jp
cmpsb
outsb
fnsave
sub
and
test
cmpsb
es
int3
push
lret
and
jbe
shrl
mov
sahf
push
les
mov
into
int
inc
add
popa
pop
je
jl
repnz
adc
enter
mov
xchg
dec
xchg
aaa
adc
in
in
sbb
jl
adc
test
ds
clc
rcr
dec
dec
xor
pop
in
push
pop
xorb
mov
cli
fwait
mov
add
out
xor
fiaddl
inc
xor
gs
rcrl
nop
sti
or
pop
or
sbb
add
ja
dec
lret
je
or
fstps
out
scas
xor
dec
lret
int
insl
adc
outsb
jne
das
fwait
mov
in
incl
xlat
popf
adc
lds
cmp
int3
push
loop
push
nop
mov
mov
cmp
push
cwtl
dec
dec
adc
sbb
cmp
mov
cmp
or
xor
or
push
add
jmp
and
lods
and
js
xchg
icebp
stos
xor
adc
lea
adc
xlat
repnz
daa
int3
movsl
xchg
aas
inc
mov
add
xor
mov
dec
jmp
add
or
jp
add
out
jmp
fldenv
xchg
stc
gs
sub
push
add
stos
jecxz
int
inc
lahf
pop
jb
and
fidivrs
testb
gs
xchg
mov
pop
and
pop
xchg
push
rorl
mov
mov
ret
xor
popf
mov
cltd
add
lods
inc
push
add
out
out
adc
and
lret
sti
cmp
xchg
inc
inc
call
xor
test
or
jmp
in
inc
jb
inc
dec
es
sub
cld
jp
mull
jae
pop
icebp
or
hlt
lret
movhlps
adc
mov
decl
adc
mov
es
or
add
xor
cld
lea
cmp
in
inc
lds
cmp
xchg
cmp
xchg
mov
mov
inc
subb
in
leave
and
and
push
or
mov
xlat
mul
jb
insb
adc
iret
out
xor
inc
fst
mov
sub
adc
andl
mov
cmp
loop
mov
outsl
sbb
insb
ret
push
add
insb
add
loope
jbe
int
popa
xor
cmpsl
mov
shl
cmpsl
mov
jge
bound
cld
cli
lea
sarl
fnstcw
mov
movsl
sbb
sub
movsb
xor
enter
sub
fiaddl
pop
pop
mov
clc
mov
jge
lcall
cld
sbb
adc
mov
cmpsb
cltd
sub
mov
das
mov
mov
mov
jns
jmp
mov
cmp
sub
stc
push
imul
adc
or
and
fnstcw
cmp
sub
ss
je
loop
repz
dec
insb
insl
sub
hlt
xor
dec
add
je
sub
or
xchg
loope
push
popa
push
push
into
cmc
repnz
nop
pop
inc
xor
sbb
fisttpll
js
cmp
sub
loope
lods
inc
pusha
adc
mov
movsb
push
pop
cld
leave
inc
arpl
hlt
xchg
ret
insl
movsb
sub
dec
ret
rclb
add
jle
dec
xchg
mov
repz
aas
sub
add
cwtl
jge
jmp
daa
xor
or
cmpsl
pop
adc
pushf
jo
lods
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
and
sbb
ret
ret
out
scas
jecxz
dec
push
les
xchg
fstpt
ss
scas
arpl
inc
and
dec
daa
add
ret
aas
leave
stos
push
cmp
sub
xchg
int3
xchg
dec
int
sahf
sbb
pop
mov
push
in
mov
iret
ss
adc
outsb
mov
inc
mov
push
mov
push
xor
inc
scas
push
rclb
dec
outsb
inc
dec
mov
add
mov
dec
loope
mov
inc
add
pushf
adc
dec
pop
add
nop
pop
cwtl
xchg
sub
sti
adc
mov
iret
sbb
rcrb
xlat
outsb
mov
push
out
adcl
add
xchg
not
hlt
iret
jno
mov
xor
jecxz
fnstcw
test
cli
inc
fldenv
jae
cmpsb
and
add
rcl
test
adc
mov
rorl
push
sbb
fwait
inc
fisubs
sub
cmpsb
insb
daa
ss
ret
and
lods
pop
adc
mov
jne
pushf
enter
daa
sarb
sbbb
shlb
das
jge
leave
insl
loope
adc
rorb
pop
mov
enter
outsl
aas
add
movsb
fisubrl
or
sub
mov
dec
aad
ljmp
in
hlt
cli
mov
test
dec
lret
push
push
mov
les
push
pop
aam
lock
das
xchg
jb
jmp
mov
mov
pop
push
cmpsl
shll
roll
and
jmp
les
cwtl
cwtl
pop
xorl
dec
mov
pushf
out
data16
loopne
lods
dec
adc
xchg
addl
orl
out
lahf
push
lcall
xor
inc
add
mov
xor
lods
jnp
fimuls
sti
iret
xchg
adc
sbb
cld
xchg
adc
imul
push
lcall
fsubrl
cmp
or
jp
ja
popf
aam
adc
sbb
ficomps
cmpl
icebp
fisubs
and
xchg
movsb
inc
out
jae
imul
and
sahf
les
adc
clc
shll
xorl
stos
xor
clc
mov
call
pusha
push
adc
sahf
pop
xor
xchg
sub
out
inc
popf
enter
jp
loop
adc
rorl
and
in
rolb
jp
dec
adc
nop
and
push
pusha
xchg
arpl
mov
idivl
scas
shll
cwtl
divb
mov
sub
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
lret
sbb
adc
xor
xor
js
jo
leave
jno
and
cs
pop
or
pusha
sbb
inc
ja
lahf
dec
jbe
insl
into
out
add
fwait
cltd
lods
pop
jg
nop
mov
push
xchg
arpl
sbb
popf
inc
xlat
sahf
dec
fisubl
xor
push
and
xchg
leave
pop
and
dec
xor
les
xlat
rcrb
jmp
jmp
inc
mov
les
and
mov
hlt
movsb
enter
aam
repnz
int3
push
scas
mov
decb
in
push
movsb
xchg
xchg
xchg
mov
sub
push
jg
mov
daa
fdiv
mov
andb
push
lods
xchg
xchg
or
fisttps
in
lret
inc
push
jg
inc
stc
test
js
jmp
fst
mov
cmpsb
test
mov
sbb
hlt
repz
sbbl
ljmp
mov
into
dec
scas
aas
xchg
sub
popa
sub
aaa
or
aad
cmpsl
stos
push
add
insb
hlt
scas
in
and
sbbl
add
cmpsb
icebp
sbb
je
sbb
fimull
or
stos
add
data16
dec
in
xor
sub
dec
in
sub
cmp
aas
arpl
in
sbb
pop
je
jbe
cli
cwtl
dec
rol
sbb
loopne
or
cltd
arpl
adc
mov
enter
and
cwtl
scas
inc
adc
ret
aaa
in
mov
shll
mov
insb
jmp
aad
lds
int
sub
and
xor
popa
jmp
xchg
mov
movb
sbb
xchg
lahf
sbb
mov
inc
pop
mov
mov
and
pop
fsubs
xor
push
dec
xor
js
xchg
orl
pop
push
shrb
daa
rclb
mov
dec
repz
ss
ror
std
push
mov
insl
mov
std
data16
mov
inc
mov
addb
jbe
je
lods
daa
pop
xchg
xchg
mov
pop
push
mov
cmp
fs
and
mov
aas
insb
and
cld
pop
cmc
mov
mov
imul
and
sub
or
popf
mov
ficomps
lds
and
push
ds
loopne
inc
jne
xor
lock
jbe
xor
mov
pop
bound
fldl2t
inc
insl
sub
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
and
mov
adc
sbb
xor
sbb
and
push
cmpsb
sub
insl
cmp
les
xchg
adc
loopne
in
ljmp
adc
je
and
pusha
scas
xchg
lea
push
push
mov
jecxz
ljmp
mov
testl
adc
shrb
mov
ja
xor
ret
xor
iret
dec
inc
scas
xlat
jbe
push
test
test
hlt
je
data16
jne
out
and
out
cmp
popa
pop
mov
lret
rcrb
pop
xchg
daa
adc
xchg
insl
mov
add
mov
pop
out
jo
lcall
rcrl
ret
jb
sbb
xchg
hlt
out
loopne
jae
inc
dec
or
xchg
lods
mov
xchg
push
inc
jg
bound
pushf
xor
std
dec
mov
jmp
imul
movsb
xor
scas
jae
mov
loopne
icebp
xor
stos
xor
inc
xor
setns
daa
inc
adc
or
jecxz
and
sbb
mov
das
add
pop
push
lret
add
cwtl
or
insl
fadds
in
sbb
mov
loopne
mov
adc
push
sub
leave
mov
test
cmp
push
cmpl
das
popa
fcmovb
rorb
pop
mov
jmp
xchg
jmp
push
fiadds
push
int
pusha
jae
sub
xchg
jmp
add
adc
jo
jae
xor
push
mov
mov
sub
adc
cmpb
lret
stos
insb
push
jb
push
scas
fdivs
arpl
fwait
test
mov
es
mov
or
in
xchg
icebp
pushf
sub
outsl
das
pusha
sahf
cld
xor
insb
xadd
neg
stc
jb
leave
xstore-rng
cmpsl
inc
les
inc
pop
and
in
stos
test
fimuls
das
subl
xchg
fisubrl
inc
sbb
pop
sbbb
cs
xchg
aam
jl
cmc
sbb
mov
leave
ss
push
lods
jo
aam
out
es
mov
int3
test
js
sbb
fwait
xor
fs
mov
cmp
push
mov
test
jae
sbb
mov
push
add
pop
into
push
jmp
cmp
push
push
jmp
insl
mov
push
test
xor
rdmsr
ret
mov
pop
sbb
out
xor
ja
data16
xor
ds
rcrl
mov
inc
lcall
bound
test
mov
and
dec
cld
mov
dec
adc
push
mov
inc
mov
or
jne
lock
mov
int3
sub
fisttps
shll
jns
push
adc
lds
or
stos
pop
sbb
xchg
rorb
insl
imul
cmpsb
lcall
leave
inc
mov
test
call
xorb
inc
fsubrl
cmc
xor
lahf
add
cltd
push
sub
or
xchg
inc
xor
clc
repnz
mov
push
enter
mov
and
inc
sbb
sti
cmpsb
mov
je
rcll
add
sbb
push
loope
xor
not
mov
sarb
push
ret
loop
lret
sub
push
enter
fwait
mov
and
adc
add
and
cwtl
hlt
js
test
ds
jns
lock
ja
test
xchg
mov
aaa
mov
pop
lods
dec
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
xor
stos
aaa
unpckhps
mov
pop
mov
dec
ficompl
jmp
cs
jnp
fcomps
xchg
fidivrs
cmp
pop
mov
int
inc
rcll
pop
dec
es
push
xchg
fadd
lahf
test
or
push
call
mov
pop
or
ret
lods
dec
dec
out
dec
pop
les
inc
data16
mov
pop
in
movsb
imul
mov
dec
lcall
fwait
xor
lret
inc
orb
dec
mov
sbb
bound
test
lcall
or
insb
push
xor
jle
mov
cmpb
lods
push
lods
cmp
inc
or
jmp
and
xor
pop
xchg
iret
sub
xor
cmpsb
cmp
push
fsubrl
outsb
push
lcall
dec
aad
jl
mov
lea
xor
mov
lods
push
inc
push
mov
jmp
sub
cmpsl
in
and
std
insl
enter
xor
xor
mov
popa
fmuls
xor
stos
lock
inc
sub
xlat
rorl
shll
xchg
call
fsubrs
pop
pop
jge
adc
hlt
lret
sub
es
rsm
stos
push
cld
dec
call
cmpb
int3
mov
test
push
lcall
push
add
push
mov
sbb
xor
sarl
inc
jnp
jno
lea
pop
orl
pushf
int
mov
adc
es
ljmp
data16
sti
sbb
xchg
and
mov
adc
test
ret
cld
fisubrl
mov
in
mov
test
push
pop
cmpsl
ja
pop
fsubrl
or
mov
cld
icebp
ds
xor
cmpsl
push
pop
mov
push
arpl
imul
push
cmp
mov
mov
push
or
cmp
or
push
mov
xor
popf
out
sbb
ret
dec
sbb
cmp
frstor
cmp
cmp
or
popf
xor
cmp
ja
leave
mov
inc
sti
shl
push
mov
inc
and
and
and
push
iret
mov
xchg
push
dec
xlat
int3
loope
and
lds
lret
frstor
enter
or
mov
dec
mov
lea
in
mov
wrmsr
xlat
fwait
repz
je
js
jge
sbb
push
aas
lretw
xchg
mov
gs
and
push
xchg
fs
dec
enter
aam
std
cmpsb
cltd
fcoms
ljmp
bswap
adc
lods
inc
pop
push
ja
or
adc
xchg
popf
pop
xchg
xor
int
pusha
mov
orb
leave
daa
rcrb
pop
adc
sbb
mov
in
or
jmp
xchg
imul
lea
mov
push
xor
aad
push
mov
stos
stos
mulb
imul
not
xchg
ds
xor
adc
cmc
mov
divl
movsb
and
fcomps
subl
hlt
mov
xchg
push
dec
sbbb
jae
add
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
js
pop
adc
adc
fisubs
ffreep
call
xchg
pop
popf
sub
push
cmp
imul
mov
icebp
mov
ret
lods
push
sub
dec
push
addb
jmp
aam
and
aas
jmp
pop
push
cs
sti
xchg
cs
imul
push
outsl
cld
cmp
pop
mov
and
dec
mov
fidivs
jge
outsb
popf
inc
lea
popa
fstpt
and
fcompl
les
loop
cmp
fwait
lock
add
push
push
or
scas
cmp
pop
inc
les
add
dec
sub
movsl
mov
les
jmp
aas
mov
enter
push
cmp
leave
mov
mov
add
mov
dec
add
movsl
out
jnp
inc
stc
add
jp
lods
sarl
loope
clc
jg
jge
sbb
mov
dec
inc
xchg
mov
dec
jae
sbb
xchg
and
xchg
push
out
cmpsl
daa
dec
mov
xchg
pusha
xor
ljmp
imul
rorb
inc
mov
loopne
in
dec
inc
push
roll
pop
push
push
cmpsb
cmc
and
inc
xor
pop
adc
into
andb
pop
cli
push
adc
outsb
adc
pushl
enter
and
fldenv
test
adc
into
pop
call
adc
cmc
sbb
push
int
fs
push
add
gs
rorl
xchg
pop
dec
sub
sbb
mov
sub
jbe
inc
test
dec
sub
xor
cld
jb
jmp
movsl
scas
push
push
loope,pn
adc
into
out
add
pop
fimuls
push
mov
dec
mov
sub
xchg
shll
cmp
jnp
lret
mov
cmp
repnz
pop
dec
orb
cli
leave
clc
push
mov
repz
mov
outsb
movsl
cmc
jp
sbb
divl
imul
cli
sub
inc
adc
les
std
aad
mov
push
sbb
xor
cmpsb
test
sbb
lret
fcomps
and
data16
mov
filds
adc
push
add
sub
aad
out
adc
push
sub
subb
leave
ss
int3
fisubrl
andl
xchg
push
xorl
mov
cld
push
lret
ss
add
inc
sarl
or
popf
stos
stc
pop
push
addb
leave
out
jl
shlb
cmp
daa
or
insl
jne
gs
nop
xchg
loope
nop
jb
shl
inc
mov
pop
lods
mov
sub
clc
push
add
outsl
mov
push
mov
xor
pop
insb
push
dec
and
ds
sbb
xchg
scas
call
ret
inc
xchg
push
inc
cli
mov
inc
add
cmp
lret
inc
sub
push
test
mov
and
ficompl
test
add
and
jno
adc
push
ss
inc
arpl
dec
leave
inc
adc
lock
repz
mov
rcl
add
sbb
cld
or
add
js
cmp
fimuls
enter
imul
pop
imul
xor
sub
shrb
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
add
adc
adc
fisubrl
cmp
into
enter
or
les
cmc
xchg
xchg
add
ljmp
cmpsb
mov
ja
mov
dec
mov
int3
push
adc
jo
adc
popa
lahf
sbb
push
out
sbb
mov
sub
jns
repnz
pop
xchg
orl
popf
xor
inc
movsl
xor
fs
movb
cwtl
sbb
inc
sub
pop
or
inc
adc
outsb
fs
jge
push
pop
out
rolb
jecxz
sahf
push
out
push
inc
push
fidivs
jae
pop
pop
inc
adc
jmp
out
pop
dec
mov
jmp
lret
mov
inc
lahf
test
xchg
fwait
lret
dec
sub
cwtl
jae
pop
icebp
sub
movsb
cmp
cmp
mov
mov
and
mov
rcl
inc
mov
cli
lods
scas
mov
add
jecxz
pop
imul
push
sbb
arpl
outsb
mov
ds
dec
cmc
iret
out
hlt
cmp
idivb
xor
clc
push
mov
xchg
jl
into
pop
and
mov
mov
loop
sub
cmc
jge
cmp
push
icebp
test
push
addr16
int
nop
lea
xor
fdivrl
imul
mov
xchg
jmp
scas
pop
xchg
inc
mov
mov
and
and
xchg
outsl
sbb
cmp
mov
adc
nop
andl
in
or
mov
repnz
imul
pop
dec
dec
arpl
xor
fcmovne
lock
fwait
xor
gs
sbb
mov
and
cmc
adc
popf
pop
dec
in
push
jnp
sub
pop
add
xchg
inc
pop
cmc
enter
xor
mov
mov
xor
sahf
sub
popf
cmpb
int3
inc
in
leave
repz
test
shl
pop
jo
pop
out
jnp
insl
pop
inc
push
enter
addb
icebp
xor
icebp
cltd
jg
push
push
fs
mov
cwtl
lock
in
into
iret
dec
aam
mov
dec
lahf
mov
mov
test
jmp
xchg
or
js
cmpsb
jp
jmp
stos
ja
fldt
mov
or
pop
pop
repz
bound
pop
sub
addb
popl
mov
mov
leave
movl
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
js
or
adc
adc
in
jge
sti
xchg
mov
das
adc
aaa
jo
mov
dec
xlat
mov
je
cmp
out
frstor
add
mov
dec
lock
xchg
pop
adc
add
pop
fistpll
mov
add
cmpxchg
mov
out
mov
iret
lret
inc
lret
jnp
mov
push
imul
aas
sub
xor
add
xchg
add
mov
arpl
test
mov
push
ljmp
les
mov
xlat
jmp
out
je
stos
push
in
jecxz
or
sub
fcomps
test
add
adc
stc
mov
test
daa
fcompl
ja
dec
cmp
push
insb
jb
push
xor
mov
adc
sbb
xor
jg
in
fistpll
iret
call
sbb
mov
ror
les
mov
xlat
xor
xchg
lcall
sub
xchg
mov
jmp
shrb
and
mov
mov
cwtl
lret
xlat
cwtl
sub
add
stos
mov
mov
ljmp
push
sub
jb
rcl
jne
adc
cltd
les
pop
jge
or
aam
inc
pop
pop
clc
mov
xchg
and
jae
jnp
inc
repz
sarl
shll
movsl
call
fisubl
fmul
in
push
xor
inc
leave
adc
push
add
add
add
xchg
and
mov
jmp
daa
xchg
mov
push
xchg
movsl
ret
gs
notb
add
dec
mov
ret
enter
mov
idiv
es
or
push
mov
dec
enter
xchg
xor
fnsave
mov
lret
hlt
enter
sti
subb
sub
mov
and
adc
dec
les
adc
scas
inc
lcall
iret
iret
std
lret
dec
iret
and
je
add
xor
stos
enter
outsl
sbb
jge
xor
cmc
lods
movsl
xchg
loopne
mov
test
or
fistl
xchg
jno
call
push
test
pop
aad
aaa
aam
cmpsl
mov
shll
out
inc
hlt
push
cwtl
sarl
aad
test
mov
push
mov
mov
in
int3
fimuls
sbb
mov
std
sbb
repz
xchg
imul
sar
and
add
aad
aas
mov
dec
inc
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
adc
cmp
adc
fnstenv
mov
cmc
xchg
pusha
add
dec
xor
push
testl
pop
sbb
mov
sub
push
out
ss
pop
mov
mov
cwtl
xchg
lcall
lahf
int
mov
xchg
addb
jg
mov
movsl
pop
dec
xor
xor
in
cmp
outsb
sbbl
aaa
inc
fstpl
xchg
adc
sub
enter
shrb
sbb
stos
rclb
sbb
xor
add
scas
shrl
add
mov
fcmovnbe
and
loopne
ds
jae
ds
mov
mov
std
mov
xorl
pushf
subl
jno,pt
xchg
test
adcl
mov
es
lahf
lcall
aam
icebp
arpl
scas
int3
dec
dec
js
aas
jmp
arpl
imul
cmpsb
mov
mov
push
out
rorl
fimull
jbe
negb
sbb
ss
cmp
icebp
mov
jbe
jp
ret
test
pop
loope
fidivrl
inc
jns
lcall
stos
loop
cli
jp
dec
adcb
sbb
stc
js
pushf
adc
scas
jae
int
rcl
decl
inc
xchg
dec
add
insb
ljmp
scas
in
fcmovbe
mov
adc
jns
mov
scas
gs
adc
adc
dec
sbb
dec
fadd
aaa
sbb
jmp
cmp
push
out
push
popaw
mov
ret
cs
daa
lret
dec
imul
subl
or
adc
sub
cmp
pusha
popf
push
das
cld
xchg
cmpsl
mov
adc
test
mov
inc
mov
push
clc
aad
int
in
mov
jno
push
mov
adc
mov
notb
insl
cmpsl
scas
xchg
xchg
mov
sub
mov
inc
or
sbb
es
jmp
mov
test
enter
push
adc
cltd
das
aam
inc
ja
jne
xchg
in
loopne
push
in
arpl
notb
scas
sbb
shrb
inc
lods
aas
ljmp
fdivl
mov
mov
sub
ret
and
add
lret
rclb
fsubs
andl
adc
shl
sub
test
shl
idivb
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
lods
test
push
out
adc
adc
mov
pop
lret
inc
out
out
mov
movsl
lods
add
movsl
sbb
xchg
xor
nop
pop
call
xchg
inc
outsl
mov
push
negl
adc
stc
xchg
mov
bound
test
sub
mov
push
arpl
pop
or
fisttpl
sbb
sbb
repz
lret
mov
push
insb
mov
mov
xchg
pop
jnp
mov
subl
js
outsl
jno
fdivrl
sarb
push
popf
cmp
inc
jo
inc
fimuls
sbb
cmpsb
sbb
dec
rorb
test
xchg
cmpsb
popa
ret
mov
roll
sti
inc
shrl
lock
sti
inc
jge
daa
mov
clc
clc
jb
cmp
lahf
add
xchg
scas
shlb
ds
mov
mov
divl
sub
dec
ret
add
movsb
aaa
xchg
setne
jns
daa
pop
inc
call
lret
cmp
add
paddq
imulb
std
out
mov
roll
sub
push
hlt
jne
imul
pop
inc
pop
stos
mov
push
test
and
push
push
cmpsl
aad
jle
push
lock
mov
mov
pop
das
xchg
shrl
js
daa
lret
repz
or
mov
or
dec
or
fcmovnb
mov
std
xchg
push
pop
xor
or
cmpsb
sbb
cld
add
fs
lods
cmpsl
test
iret
pop
add
push
jmp
pop
aad
jbe
xor
scas
nop
jge
xchg
sbb
push
cmp
or
into
test
sahf
lods
sahf
test
subl
pop
mov
cmpsb
sub
nop
mov
add
int3
js
dec
xlat
imul
in
cmp
inc
xchg
nop
fldl
adc
mov
test
and
push
bound
aaa
push
imul
shlb
or
shrl
cli
mov
sbb
cmpb
lret
aas
mov
gs
es
pop
test
out
sub
sbb
and
push
inc
dec
insb
pop
test
xor
test
and
and
cli
and
lcall
push
xlat
push
sti
sub
rcll
fs
mov
sub
repnz
push
inc
cmpsb
test
shlb
and
inc
cmc
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
mov
cmpb
movlps
enter
sbb
push
xchg
psllq
mov
pop
jmp
cltd
jb
sbb
loopne
sub
jne
mov
cmp
andb
les
lock
into
scas
or
aad
fwait
mov
cmp
stos
adc
sbb
out
inc
popa
jbe
pop
mov
pop
int3
ffreep
stc
mov
inc
in
xor
dec
scas
or
mov
mov
call
hlt
cmp
jecxz
cmp
sbb
rol
mov
out
jns
pop
pop
bound
mov
pop
cwtl
push
out
cli
xchg
ljmp
or
mov
test
and
insl
rcll
test
jo
or
mov
lahf
and
bound
iret
aam
fwait
les
fadds
add
cltd
pushf
add
sbb
les
movsl
sub
out
out
loop
stos
rorb
xchg
xorl
pop
test
ljmp
sbb
cmp
adc
cmpsb
test
pop
imul
mov
loope
mov
fs
xchg
in
pop
loope
xor
and
mov
dec
pop
jns
out
sub
ljmp
jl
rorl
movsl
cmp
xchg
adc
sti
repnz
imull
in
push
mov
dec
inc
mov
sarl
repnz
xor
push
sbb
mov
pop
loopne
ret
sub
mov
pmulhw
xchg
mov
jbe
and
xor
xor
sbb
outsl
cmp
mov
xchg
add
lcall
imul
or
jmp
inc
fstpt
fs
mov
add
xor
outsl
lret
in
lock
stos
mov
xlat
mov
cmpsl
sbb
scas
xchg
mov
jno
push
es
pop
cmp
add
cmp
aam
or
and
enter
mov
sahf
test
xchg
ret
pushf
sbb
xor
sbb
sti
ds
or
xor
dec
clc
pop
cltd
fwait
std
cld
cmp
inc
fsub
sbb
sbb
add
xor
es
inc
mov
call
lods
sub
aam
gs
pop
dec
push
add
out
mov
test
xor
call
dec
popl
jg
in
or
xchg
push
xchg
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
adc
in
adc
fdivr
xor
or
push
pop
sbb
test
fwait
sahf
movsl
sahf
xchg
fisttps
cmp
cwtl
mov
cmp
pop
or
inc
cmpsb
sti
hlt
lahf
leave
sub
jp
pop
and
sub
pushf
push
adc
adc
test
icebp
addr16
cmp
insb
and
test
sbb
mov
les
push
push
mov
cmp
cs
xchg
mov
mov
notb
add
shlb
ds
shll
aam
shrb
pop
cld
dec
add
clc
inc
push
cmp
test
in
add
cmp
fidivl
cld
cmp
mov
out
loop
push
sub
stos
cli
cmp
push
sahf
or
adc
inc
or
and
enter
dec
mov
fistpll
filds
insb
push
pushl
mov
xchg
dec
jmp
jg
icebp
fimull
sub
xorl
in
idivb
push
cli
daa
lret
cmpsl
adc
outsl
rorl
out
sub
in
push
repnz
loop
rcr
and
xchg
sub
pop
mov
std
aaa
mov
mov
mov
ljmp
jp
sub
adc
lock
in
mov
cmp
push
cmpsl
sub
or
pushf
ret
in
cmp
cmpsl
rep
rcrb
mov
testb
push
cmp
pop
sbb
aaa
mov
stos
mov
pop
xchg
rorb
mov
mov
jnp
dec
lret
xor
insb
not
fmull
pop
std
sub
out
mov
loope
sbb
orl
outsl
loop
icebp
jns
negl
iret
sub
out
mov
cmp
ret
stos
pop
sti
movsb
pushl
inc
sub
pop
pushf
xor
xchg
push
sbb
xchg
sub
call
fnstcw
inc
xor
sbb
dec
mov
pusha
dec
add
addl
js
dec
jnp
sub
push
out
mov
lods
pop
data16
ja
mov
int3
fidivrs
repnz
xchg
inc
cmpsb
hlt
pop
sub
aaa
jno
xor
xor
rorl
cmp
adc
lods
inc
adc
sbb
sub
dec
cmp
mov
and
jge
scas
pop
dec
je
and
punpckhbw
jmp
dec
dec
cmp
mov
push
or
mov
jno
xchg
push
xchg
sti
sbb
jns
add
push
loope
inc
and
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
sbb
loopne
adc
inc
pop
sbb
cs
xchg
dec
add
popl
ss
mov
cwtl
jne
jns
mov
ss
insb
into
adc
ret
xor
push
std
cmp
jb
popf
or
mov
imul
iret
xor
jl
rorb
jnp
xchg
adc
jo
jns
inc
cwtl
test
push
sti
cmp
dec
xor
add
fwait
push
aas
pusha
sub
dec
or
xchg
adc
mov
popf
inc
into
xchg
push
cmp
pop
dec
faddl
pushf
in
scas
into
mov
jecxz
cmpsl
fisubrl
lret
xor
inc
xchg
mov
stos
mov
enter
outsl
ja
push
xchg
fldcw
xchg
lret
cwtl
xor
mov
sbbl
lret
xchg
push
jg
and
bound
jb
hlt
jge
push
xchg
xchg
ds
fldl
cmp
cmpsl
cmp
adc
pop
stos
stos
mov
pop
dec
rcll
or
dec
jl
dec
or
push
add
ficomps
pop
incb
pop
add
dec
xchg
pop
sti
cmp
roll
outsb
mov
sub
stos
test
movsl
dec
add
push
paddsw
pop
fcoms
xlat
sub
jne
dec
xchg
cld
jno
rol
into
mov
pop
adc
xor
aas
jno
fstpl
cmp
insl
ss
xor
sbb
sbb
test
fidivrl
roll
sub
mov
pop
ss
shll
jmp
movsb
lahf
jecxz
dec
lds
outsl
sbb
inc
or
mov
mov
sub
jecxz
add
jae
bound
out
or
enter
stc
in
lods
std
pop
push
call
loop
xchg
sub
add
jl
xchg
sub
vminps
lods
sub
pop
mov
sub
int
jae
mov
mov
xchg
je
xor
pop
cmp
clc
ja
pop
dec
fcomi
pop
pop
and
cmpsl
adc
mov
cmp
and
cmp
sbb
bound
divl
or
fisttpl
push
push
in
xor
xchg
pusha
push
pop
setle
ljmp
add
add
inc
inc
and
mov
mov
jno
rol
mov
ret
dec
int3
mov
and
cmc
btrl
in
and
inc
icebp
adc
mov
sarl
sbb
jo
ss
or
bound
movsb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
cwtl
xlat
test
cmp
inc
xchg
movswl
inc
jmp
jb
mov
adc
fs
js
addr16
inc
lock
sbb
dec
mov
mov
enter
mov
pop
in
cwtl
cltd
imul
lods
mov
int
sub
cmp
jns
pop
pop
mov
cmp
aas
insb
cmp
mov
hlt
mov
shll
notb
aad
or
sbb
mov
ja
adc
and
popf
insl
loopw
pusha
imul
cmc
push
cs
push
in
outsl
jle
insl
adc
inc
mov
pop
pop
or
mov
sub
mov
xchg
jg
in
push
sar
int3
jg
hlt
jo
pop
ret
or
stos
jl
mov
int
mov
ljmp
dec
mov
push
pop
inc
std
and
add
enter
pop
push
or
dec
lret
addb
cmp
mov
stc
push
xchg
jnp
in
gs
mov
stos
rcr
es
or
mov
push
loope
jae
mov
inc
mov
lock
mov
movsl
xchg
sahf
push
fsubr
pop
in
xor
mov
movsl
and
mov
xor
push
mov
pop
sub
push
hlt
mov
std
into
lcall
pop
int3
stos
jnp
xor
mov
pop
pusha
jge
pop
jno
mov
stos
xchg
push
xchg
pusha
jnp
cmpsl
pop
pop
mov
push
add
leave
xchg
adc
incl
add
or
push
out
xor
cs
and
mov
jno
pop
jl
push
push
xchg
loopne
rolb
fdivrl
lea
lahf
xor
xchg
fisttpll
sbb
adc
out
or
mov
sbb
gs
insl
jbe
add
repnz
test
out
push
jp
sahf
xor
pushf
lea
jecxz
mov
push
pop
ss
in
mov
arpl
les
ss
mov
inc
pop
insl
shl
inc
push
pop
scas
in
or
out
int
xchg
mov
jae
cli
adc
ja
daa
dec
jnp
mov
lea
push
dec
sub
or
mov
cmp
mov
adc
in
sub
sub
into
icebp
push
cmp
sub
mov
sarl
dec
loop
jae
push
leave
and
dec
xor
pop
aam
mov
push
jecxz
lods
mov
add
xchg
loopne
jno
mov
and
cmp
mov
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
push
jb
mov
xchg
movlps
fdivs
loopne
clc
in
test
mov
or
mov
andl
jle
lret
adc
fldenv
dec
lret
loop
xlat
arpl
jl
pop
xchg
or
lea
adc
icebp
inc
jb
xchg
into
adc
jecxz
cmp
sbb
and
aam
mov
pushf
into
inc
imul
mov
pushf
or
pop
out
jb
push
xchg
and
es
add
out
test
adc
cs
cmpsl
lods
out
mov
fsub
fidivrl
scas
cld
add
sbb
jbe
in
mov
xchg
xchg
jb
mov
dec
nop
sub
jmp
out
jge
enter
mov
inc
add
cs
in
outsb
ret
leave
pop
in
sub
cmp
sbb
icebp
imul
loopne
mov
dec
test
repz
repnz
pop
sbb
adc
dec
sub
or
push
mov
test
and
scas
icebp
push
popf
test
das
enter
mov
dec
rorl
lcall
xchg
addl
mov
dec
dec
xor
test
dec
outsb
aad
mov
pushf
or
lea
jbe
mov
pop
sbb
xor
std
sub
jmp
lock
cmp
out
pop
lds
test
jno
xchg
es
cmp
jae
dec
cmpsl
and
pop
fnstcw
stos
add
call
jecxz
leave
mov
shlb
mov
cmp
dec
clc
push
pop
jmp
out
int
iret
push
jb
mov
movsb
cld
cmp
mov
repnz
cmp
inc
les
pop
mov
mov
sahf
mov
or
repz
scas
pop
divb
movl
jo
cmp
mov
xchg
push
add
scas
outsb
mov
adc
or
push
iret
stc
inc
mov
xor
jl
bound
roll
shlb
ljmp
sub
stos
xchg
dec
mov
dec
adc
xor
inc
add
ljmp
jge
push
mov
std
arpl
adc
aad
dec
or
pop
icebp
scas
mov
fsubs
inc
xchg
mov
jno
mov
xor
dec
push
minps
lahf
test
add
adc
ret
vmulss
cmp
xchg
mov
cmp
cmp
push
adc
mov
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
cmp
aad
pop
ss
cmp
inc
fs
pop
mov
jno
sahf
in
cmpsl
cwtl
mov
pop
mov
dec
mov
adc
dec
xchg
popf
das
popa
les
sbb
jp
sbb
shlb
fisttps
mov
imul
cwtl
jno
or
test
pop
sub
pop
add
clc
fldl
clc
test
inc
cmp
cld
test
out
pusha
inc
pusha
cli
stc
adc
aam
and
rcrl
adc
xchg
mov
adc
xchg
jge
lock
push
cmp
push
jne
sahf
es
mov
push
repz
sbb
mov
insl
jl
xchg
inc
test
push
and
sub
cmovg
lret
and
jl
add
jo
push
popa
mov
nop
aam
mov
out
je
les
or
xor
fldcw
pop
jb
mov
loop
scas
mov
orl
stos
jnp
sbbl
gs
jl
ror
in
lods
push
mov
mov
jno
js
push
je
out
imul
mov
lahf
outsl
inc
xor
jmp
pusha
in
push
in
mov
scas
mov
in
jmp
in
fcoms
mov
lods
cmp
loop
and
mov
and
test
sub
xchg
inc
shll
loopne
xchg
xchg
mov
jae
enter
pushf
call
lods
xchg
aas
push
jmp
ja
mov
push
and
lret
add
test
xor
ficoml
mov
dec
lret
push
mov
add
push
mov
pop
lods
movsl
dec
xor
pop
cld
cmp
cmc
es
sbb
push
out
inc
inc
jns
inc
mov
rclb
mov
hlt
test
cld
outsl
scas
lret
inc
je
add
incl
add
out
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
fldl
scas
into
adc
adc
inc
sbb
jno
mov
push
xchg
mov
adc
xchg
ss
shlb
add
lahf
jns
and
push
jo
dec
scas
add
sbb
mov
mov
cmp
daa
mov
fstps
loop
sub
mov
mov
pusha
js
push
call
nop
xchg
insb
mov
cmpl
repz
call
mov
jmp
lods
jo
rorl
pop
roll
adc
inc
scas
negb
jo
pop
dec
cltd
sub
movb
movsl
daa
lcall
mov
shrb
scas
xchg
imul
andb
sbb
loop
out
xor
ret
push
scas
xor
inc
les
push
mov
pop
test
ds
adc
aam
fsubp
add
jb
das
lcall
pop
cmp
popa
jno
xorb
rcll
ret
scas
icebp
xor
or
cmp
or
in
pushl
in
inc
adc
sahf
cmp
cmp
sbb
shrb
xor
and
pop
add
ljmp
cmpsb
neg
push
or
out
and
movsl
js
in
mov
cmpsl
add
ljmp
mov
mov
out
enter
insl
mov
daa
popa
ss
xlat
jo
pop
mov
stos
add
subb
xchg
inc
rcrb
imul
jns
add
test
jne
or
faddl
icebp
sub
lods
cmpl
lahf
and
xor
cmp
pop
jmp
pusha
pop
aaa
test
inc
hlt
outsl
pop
mov
in
test
push
mov
xor
les
stos
das
mov
test
call
or
or
cmp
sbb
shrl
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
mov
lret
enter
enter
ljmp
popf
jl
repz
es
sbb
mov
pop
xor
nop
inc
mov
std
mov
daa
cmpsl
mov
inc
popa
sti
jnp
scas
in
shlb
cli
sbb
adc
daa
xor
sbb
adc
and
repnz
aas
int
loopne
xor
mov
std
cltd
sub
fcmovnu
xchg
cmpsb
push
inc
rcr
adc
fbld
out
add
dec
mov
sub
pop
pop
frstor
scas
test
icebp
repz
lcall
cmp
add
cmc
sbb
mov
clc
inc
hlt
push
loope
popl
mov
call
mov
mov
mov
dec
add
xor
cmp
cmp
mov
push
je
cmp
jl
mov
xchg
mov
es
push
sbb
or
xchg
ss
movsb
rcrb
inc
jl
pushf
pop
cmp
mov
add
sbb
mov
insl
inc
fcmovb
mov
roll
mov
out
inc
push
xchg
fs
xchg
pop
int
lret
cmp
mov
xor
push
xor
insb
div
out
outsl
cltd
lods
mov
fistps
xchg
jne
add
mov
mov
jle
out
pop
dec
rcrb
fcom
mov
leave
pushf
xor
jmp
stos
pop
lds
test
aad
add
add
pop
pushf
push
outsb
pop
or
lds
clc
xchg
sbb
and
add
push
jle
cld
xor
dec
imul
pusha
cs
dec
fists
lcall
dec
jp
jb
cmc
sbb
outsb
mov
push
xor
mov
adc
sub
iret
mov
push
pop
in
ret
inc
call
clc
imul
lahf
inc
or
test
outsl
adcb
shrb
push
fwait
sbb
lds
int
push
fs
cmpsl
clc
in
pop
mov
jmp
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
sar
stos
push
adc
adc
ficomps
movsb
jne
jp
shll
dec
add
add
cmpsb
xor
cmpsb
cmc
jg
inc
test
ljmp
push
xlat
add
xchg
mov
dec
lret
hlt
outsb
lret
sbbl
out
pop
jno
jnp
jnp
sbb
jae
sti
jmp
jne
xchg
rolb
cmp
outsl
add
cltd
push
jmp
test
fcmovnbe
cmp
cli
push
cltd
in
movsb
cmpsl
shr
aam
je
jl
mov
xor
loopne
imulb
jns
std
aad
adc
jnp
fwait
jae
dec
rcll
shrl
mov
cmp
vandnps
pop
movsl
pop
mov
sub
mov
stos
loope
sub
push
out
xchg
mov
subb
jecxz
sub
add
test
cmp
call
pop
clc
shl
roll
or
adc
sub
call
xchg
adc
cmp
push
xor
push
xchg
push
push
fiaddl
add
sbb
and
push
inc
and
mov
iret
pop
out
das
repz
inc
mov
push
dec
adc
divb
inc
bound
mov
out
or
xchg
sbb
cmp
rclb
insb
outsb
mov
jne
fstps
scas
jo
aad
jno
shlb
lods
sub
stos
es
lds
lret
push
and
sub
add
addl
xchg
xorb
cmpsb
dec
bound
orb
sbb
pop
xchg
mov
cmp
and
sub
fsubrp
incb
pop
adc
mov
pop
mov
popa
mov
sub
iret
mov
sub
in
xor
test
inc
jecxz
in
outsb
ss
inc
dec
jecxz
adc
ljmp
stos
in
sbb
aad
dec
inc
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
inc
mov
adc
movlps
cmp
cmp
pop
jne
test
xchg
mov
and
mov
dec
pop
into
inc
xchg
xchg
jo
dec
in
push
popa
dec
out
push
iret
cmp
push
nop
sub
xchg
and
movsb
xor
es
outsl
xor
int
aaa
mov
sub
pop
in
es
js
xchg
cmp
jne
cmp
call
scas
lret
sub
xor
adc
mov
imul
lahf
inc
mov
sbb
icebp
pusha
inc
xrelease
lcall
inc
cltd
dec
cmp
ss
or
cmp
pop
loope
ret
pop
jle
jge
fcomip
mov
icebp
faddp
xor
cmp
xchg
mov
orb
iret
loope
call
xchg
push
xor
movsl
ret
pop
and
test
mov
adc
dec
cwtl
and
popf
ja
test
pop
mov
loope
out
mov
outsb
lea
xchg
nop
int3
cmc
cltd
push
leave
andb
aam
ficoml
rorb
push
jb
icebp
movsl
and
mov
push
js
mov
enter
jle
adc
repnz
negl
jb
divb
dec
loope
jo
ja
inc
or
xor
xor
stos
mull
xchg
outsl
addr16
push
push
xchg
sti
push
bnd
or
int
divl
mov
jmp
cmc
test
pop
out
jmp
scas
sbb
dec
and
mov
mov
mov
rep
push
jno
and
out
push
xchg
in
mov
je
test
ss
pop
fcomps
test
test
inc
cmp
inc
and
fdivrp
push
add
or
test
movsb
jae
enter
lods
clc
jns
dec
adc
scas
faddl
inc
jo
neg
pusha
lcall
shll
mov
push
cmp
loop
sbb
lods
sub
add
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
or
mov
enter
sbb
loop
fcoms
push
roll
push
adc
leave
nop
stc
sbb
out
call
movsl
jnp
test
ljmp
push
inc
lahf
ret
int3
adc
sub
mov
iret
aas
jmp
clc
movb
xor
sbb
cli
dec
xchg
jmp
pop
mov
fcoml
fistpll
xor
push
in
xchg
adc
adc
mov
cmp
lret
mov
push
sbb
pop
repnz
idiv
outsb
pop
add
xor
sbb
fdivrs
rolb
ds
jecxz
cmc
xor
orl
mov
mov
lock
pusha
es
sub
xor
push
sub
mulb
aam
or
push
loope
push
in
cmp
dec
sub
mov
dec
sbb
lcall
mov
int3
adc
mov
push
and
push
std
ljmp
xchg
pshufw
push
ja
inc
pop
rcl
cwtl
call
xor
decl
jb
stc
icebp
sub
cli
mov
jl
jmp
push
adc
lret
xor
sahf
imull
aaa
add
mov
and
xor
nop
js
shl
and
iret
mov
jbe
mov
sbb
movsl
mov
xchg
sub
adc
sbb
mov
jne
pop
inc
shl
mov
xchg
into
das
lds
repnz
dec
test
sub
jge
into
out
lods
jae
ret
cmp
mov
out
pop
shrb
idivb
mov
adc
cmc
sub
rcr
xor
cmpsl
cmpsb
mov
ja
stos
out
push
cmpsb
mov
daa
xor
data16
sar
xor
lock
add
or
mov
add
lret
mov
into
push
adc
incl
testb
adc
test
leave
in
add
shl
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
scas
insb
xor
adc
cmp
daa
clc
mov
jl
mov
sub
cmp
enter
lock
outsb
cmp
das
fisubrl
repz
fs
adc
xchg
mov
mov
test
cmpsl
es
xchg
xor
sbb
loope
jno
icebp
ds
jl
push
inc
or
jne
out
add
cs
std
cwtl
adc
out
jge
cmp
sti
inc
enter
sub
mov
sbb
out
jg
or
cmpsl
lret
jns
cmovs
add
mov
and
outsb
pop
jp
jmp
push
stos
xchg
mov
fsub
pop
mov
insb
test
loope
jl
xor
fwait
and
add
pop
ja
xchg
adc
lret
xor
lds
lea
cmpsb
sbb
pop
mov
insl
adc
ret
mov
loop
sub
fstps
mov
and
ss
cltd
xor
mov
in
dec
mov
ret
out
dec
sbb
mov
cmpsl
in
adc
outsb
or
movsb
mov
mov
js
lret
sbb
mov
or
out
mov
cltd
jmp
sbb
cmp
xchg
mov
imul
cwtl
pushl
jle
xchg
jns
xlat
test
and
mov
jg
idivb
loop
push
fadds
xchg
loop
rorl
adc
push
inc
push
mov
push
mov
dec
sbb
add
adc
jmp
addb
jge
ja
dec
push
icebp
cld
lds
out
jo
scas
mov
sbb
dec
lahf
or
mov
fstps
mov
push
dec
jno
fs
add
inc
jbe
inc
loope
mov
inc
xor
and
decl
cs
es
lret
or
cs
fnsave
mov
sti
pop
or
lahf
inc
and
push
jb
or
adc
dec
stc
mov
lock
jne
sbb
lock
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
xor
stos
out
adc
adc
jo
sbb
mov
pop
mov
mov
pop
setge
pop
mov
scas
or
xor
cmp
das
sbb
fldt
div
inc
int3
xlat
rcrl
pop
fistl
sbb
pop
sbb
inc
fsubp
mov
mov
lods
xchg
insb
out
jnp
insb
cmp
nop
mov
mov
fnstenv
dec
sti
lahf
jp
cwtl
mov
mov
push
repz
sub
sub
jle
xchg
stos
cmp
pushf
loope
cmp
sti
jp
test
les
jecxz
xchg
or
mov
mov
mov
sbb
aad
nop
mov
mov
fcom
and
jbe
mov
mov
pusha
mov
sub
xor
push
xor
nop
and
xchg
inc
inc
adc
rclb
loopne
mov
mov
cmp
cmc
lcall
out
aam
push
sbb
xor
push
jae
xor
xchg
imul
fwait
loope
shll
js
mov
or
xchg
cmp
xchg
jmp
mov
xchg
sti
mov
push
scas
xchg
idivl
andb
xchg
mov
xlat
cld
test
ljmp
jbe
icebp
push
aam
jle
inc
jnp
popa
mov
pop
clc
mov
pusha
bound
dec
adc
test
cmpsl
ret
dec
aas
std
icebp
mov
bnd
sbb
aam
sub
test
push
in
lahf
pushf
pusha
sbb
test
shlb
push
mov
jmp
das
imul
add
popf
test
jle
jg
fucomip
dec
push
mov
mov
dec
dec
std
jo
lret
fidivs
mov
cmp
mov
repz
inc
push
sub
std
fcoms
aam
nop
mov
pavgw
push
icebp
cmp
lds
cmp
cmp
cwtl
push
cmpl
rcrb
xor
push
lret
repnz
fdivr
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
jne
add
enter
pop
int
sbb
mov
add
push
adc
or
push
fildll
in
loopne
loop
es
push
mov
clc
test
xor
mov
mov
jge
in
les
iret
cld
fldl
adc
int3
push
xor
sbb
sub
hlt
outsl
int
int
js
ret
fld
xchg
adc
mov
adc
sub
jge
loope
ret
paddusw
xchg
add
hlt
loopne
jb
mov
jl,pt
mov
int3
pop
jne
inc
aaa
cli
cmp
pop
das
pop
out
lods
sahf
inc
dec
jnp
mov
jp
dec
lcall
pop
pusha
int3
bound
mov
mov
lcall
jp
call
jmp
scas
adc
mov
stc
in
pusha
jge
jbe
cli
xchg
inc
mov
jg
outsl
loope
dec
loop
stos
bound
mov
out
popa
xchg
push
lea
mov
push
in
jo
fstpt
and
add
dec
push
mov
push
or
jae
les
cmp
cmp
lahf
sarl
xchg
push
test
mov
jl
cltd
push
data16
add
mov
adc
sti
inc
dec
pop
scas
pop
push
or
leave
and
js
jl
int
ljmp
jg
cli
nop
dec
xchg
push
push
inc
jb
lcall
iret
loope
or
insb
daa
repz
ret
popa
int3
in
mov
adc
push
sub
dec
lock
aas
mov
push
in
popf
shrl
mov
mov
jge
sbbl
mov
xor
pop
jge
lods
dec
gs
in
add
jno
xor
nop
adc
aad
mov
into
mov
nop
add
pop
outsb
xchg
loop
xchg
add
rolb
movsb
or
iret
mov
outsb
fsubs
fnsave
shlb
ficompl
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
push
xlat
pusha
js
test
adc
movlps
fimull
fbld
inc
in
fdivrs
lcall
fimuls
lods
es
push
call
xor
push
rcr
mov
iret
pop
mov
insl
lds
pop
adc
xor
jmp
sub
mov
stc
in
loopne
cmpl
loope
push
pop
fdiv
dec
push
add
sbb
mov
lcall
repnz
inc
int3
lock
repz
push
jp
sbb
mov
add
dec
inc
sbb
cli
fistpl
pushf
imul
mov
inc
fisubrl
jo
dec
dec
rcl
pop
js
stc
mov
push
jns,pn
pop
cltd
addr16
sbb
out
mov
sub
or
pusha
stos
push
sbb
sub
xchg
mov
push
popa
inc
addr16
movsb
lret
mov
inc
int
fistpl
cmc
cli
rol
add
ja
adc
call
and
fs
mov
sti
pop
shll
fcoml
adc
mov
pop
xchg
fmul
lds
sub
mov
sub
and
xchg
call
jne
sti
adc
adc
dec
loopne
sub
jl
test
adc
jmp
mov
arpl
mov
dec
in
cli
push
push
in
xchg
out
lds
mov
cmp
fsubrp
pop
mov
pop
and
cwtl
push
movsb
decb
stos
jns
in
idivb
shr
cmpsl
ret
in
push
mov
or
dec
fbstp
bound
xchg
inc
and
mov
ret
xor
pop
dec
xor
sbb
cmp
mov
sbb
pop
sbb
in
cmovg
mov
xlat
jno
and
pop
mov
data16
mov
mov
xchg
imul
dec
lahf
test
inc
jmp
add
outsl
or
mov
jae
jno
cmp
in
popf
rcl
pushf
jl
test
fwait
push
es
cmpsl
jb
mov
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
sbb
add
adc
dec
sub
jge
inc
repnz
cmp
mov
mov
jp
mov
in
sbb
push
adcb
loop
add
add
sti
loopne
data16
outsb
jb
test
or
mov
and
push
jno
fidivs
das
jb
mov
jbe
loop
pop
fldenv
xor
mov
xor
into
jo
iret
add
iret
mov
push
xchg
xor
and
push
test
hlt
orl
pusha
pop
and
insb
mov
xchg
in
sub
mov
and
loopne
jp
mov
hlt
ja
fwait
shl
cmpb
loopne
movsl
jg
xchg
xchg
into
cmc
jae
cli
mov
repz
mov
popl
pop
mov
cmp
jo
fcmovu
fisubs
add
jl
mov
mov
inc
jecxz
push
mov
mov
push
add
cmp
ds
es
ret
jne
rolb
jl
pop
fbld
inc
mov
cli
enter
call
insb
sub
mov
push
cli
shll
daa
cmp
dec
into
nop
loop
icebp
pop
in
lcall
cmpsl
xlat
aad
push
fcoms
dec
xlat
jnp
and
adc
scas
xlat
orl
cmp
add
mov
push
not
cld
popf
test
dec
incl
or
imulb
cmovo
pop
jg
shrl
aaa
test
repnz
aaa
or
pop
xchg
fiadds
roll
and
adc
mov
test
aad
or
lahf
sub
cmp
push
jne
nop
pop
in
cmp
scas
cli
popa
lods
test
lea
sub
dec
lcall
mov
pop
sub
in
repnz
ret
cmp
mov
std
test
mov
loope
stos
iret
cmpsl
cmpsl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
jnp
push
mov
adc
bound
dec
add
test
loop
test
test
aam
mov
insb
movsl
in
addr16
dec
push
ret
inc
test
sbb
jl
xchg
pop
or
add
imul
test
add
cwtl
cld
andl
mov
jbe
inc
and
lods
lahf
pusha
stos
jb
ret
mov
mov
cmpsl
push
pop
sti
daa
test
push
cmp
pop
cwtl
mov
sbb
js
cmp
lahf
sub
jb
mov
insb
test
out
push
fwait
dec
sbb
mov
xchg
dec
in
mov
imul
pop
adc
jno
dec
or
test
iret
dec
dec
mov
dec
int
mov
add
mov
lods
mov
pop
insl
push
fsts
xchg
sub
xlat
dec
bound
in
sarl
mov
sti
les
mov
into
stc
adc
bound
xchg
fnstenv
mul
push
testl
or
loope
mulb
mov
movsb
or
xchg
mov
subl
xor
xchg
fbstp
andl
loope
neg
int3
popa
add
jp
mov
push
xchg
icebp
mov
sbb
repz
jge
roll
add
leave
dec
adc
mov
js
jmp
jbe
dec
inc
lock
mov
push
lea
in
inc
mov
dec
test
mov
mov
ret
xchg
cmp
stos
cmp
xchg
mov
into
lahf
js
das
outsl
inc
xchg
les
sub
xor
scas
mov
daa
jb
je
and
inc
mov
inc
sub
sub
popa
mov
loop
arpl
mov
dec
ret
xchg
inc
cmp
pop
aad
dec
mov
jnp
pop
sbb
xchg
and
cwtl
es
aam
jae
add
lret
mov
lret
lret
dec
pop
sbb
jle
push
pop
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
push
pushf
adc
adc
das
and
push
mov
mov
movsb
scas
cs
lods
lock
fnstcw
loopne
movsl
es
pop
xchg
sbb
and
mov
inc
jns
ret
mov
jmp
stos
cmp
inc
enter
ret
test
xor
les
imul
sbb
inc
lret
jle
cmovo
test
stos
lea
mov
lcall
pop
inc
adc
in
push
in
sub
or
mov
jnp
outsb
andl
or
add
dec
clc
lahf
fidivs
jns
lock
test
jecxz
xchg
popl
mov
dec
jmp
cmp
iret
pop
inc
cmc
push
jmp
lods
mov
stc
je
popa
jge
pusha
adc
push
pop
sbb
test
cld
dec
rclb
xchg
cld
jecxz
mov
mov
imul
stos
addr16
and
mov
push
das
dec
dec
cmp
add
sbb
bound
cmp
imul
or
mov
lods
push
imul
push
shl
or
ljmp
cmp
and
cmpsb
xchg
data16
mov
nop
sarl
sub
insb
sbb
lods
sbb
cmp
adc
cmpl
lods
fxam
mov
sbb
sbb
enter
push
int3
mov
cmp
enter
inc
push
dec
fcoms
jl
in
xchg
mov
inc
sub
push
xchg
lea
lret
mov
jg
insl
fadds
dec
notb
test
shll
sahf
push
pop
mulb
fld
out
dec
push
mov
ficomps
fwait
or
jae
jmp
xchg
pusha
out
xchg
dec
ret
or
icebp
dec
jecxz
xchg
xor
test
sub
in
shlb
fmulp
sti
inc
cs
test
xor
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
cmp
adc
movlps
ror
xorb
ficomps
or
insb
out
jno
scas
mov
pop
dec
sub
iret
push
enter
adc
lret
das
sbb
or
repz
mov
xchg
xor
mov
pop
cmp
mov
scas
shl
push
outsb
sbb
rol
or
aaa
mov
push
mov
ljmp
sbb
push
or
mov
sub
and
sub
mov
and
inc
lea
mov
aam
faddp
jmp
das
bound
jnp
divb
cs
and
in
xchg
loopne
pop
sub
cmpsb
jecxz
movsb
sbb
mov
ljmp
pop
sub
rorb
aam
pusha
sub
mov
push
and
fldt
dec
bound
sbb
sbb
push
scas
mov
push
jp
jg
enter
xchg
mull
cmp
data16
ficoml
enter
xor
inc
xor
mov
jb
adc
sbb
cwtl
fwait
adc
sub
inc
sbb
rorb
shll
inc
jle
repnz
ror
fistpll
and
idivb
pop
mov
aas
lds
decl
stos
add
cmp
adc
ret
xchg
push
andps
pop
ds
stos
sbb
xlat
cs
adc
sbb
pop
mov
lds
iret
mov
sub
mov
adc
lret
jno
mov
and
pop
into
mov
add
jecxz
movsl
push
loopne
inc
cmp
xlat
pop
hlt
dec
mov
ficompl
pop
test
aad
sahf
stc
mov
testl
repnz
and
sub
out
pop
mov
push
pusha
add
cmp
inc
xor
fldt
loop
data16
aaa
das
or
lahf
shll
ja
stc
stos
mov
lcall
push
fmull
mov
xchg
shr
in
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
aas
sbb
enter
shrd
mov
push
dec
repnz
sbb
sbb
and
fists
lcall
xchg
lds
popf
cld
rorl
movsl
xchg
jl
mov
inc
daa
cmp
pushl
xchg
ret
push
gs
mov
aam
add
mov
mov
leave
xor
sbb
decb
inc
in
dec
test
jns
aaa
ret
add
divl
daa
das
stos
lret
cmc
popw
lock
pop
pusha
or
popa
mov
or
add
fiadds
pushf
fists
jecxz
enter
std
divl
jmp
sarb
es
lcall
mov
sbb
xor
sbb
ret
or
jb
out
mov
dec
imull
mov
cmp
xor
fisttps
pop
pop
add
cmp
push
mov
push
sbb
or
or
mov
sbb
or
mov
into
popf
scas
mov
outsb
push
pop
iret
out
cltd
mov
pop
gs
adc
mov
inc
js
push
add
pop
mov
and
xchg
cmp
fwait
testb
stos
xchg
fstl
inc
je
push
or
and
push
pusha
test
js
out
sbb
dec
stos
xchg
cmp
test
out
add
mov
adc
lds
or
sarb
fcomp
mov
stos
sub
insl
add
inc
in
sti
aad
cmpsl
pop
jo
ds
cmc
xacquire
ljmp
fildl
dec
into
es
das
aas
out
cmp
std
xchg
dec
cmp
testl
lcall
ljmp
iret
dec
or
jecxz
insb
mov
jo
roll
mov
jp
dec
jo
pop
pop
clc
scas
cld
add
pop
fwait
pop
fildl
add
stos
movsb
popa
and
fwait
or
pop
insl
mov
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
dec
cmpb
movlps
mov
cltd
pop
or
ficomps
scas
adc
fwait
movzbl
sbb
scas
pop
adc
lock
fs
inc
fcom
sahf
in
std
pop
not
or
push
hlt
call
dec
pop
pop
jmp
movsl
xchg
call
fisubl
rcrl
loope
and
ja
jno
cld
fucomp
out
mov
or
mov
sbb
ds
js
jne
mov
mov
int3
test
lods
jmp
sbb
test
cmp
mov
adcl
xor
scas
jl
xchg
loopne
adc
mov
push
andb
push
icebp
push
jg
bnd
clc
call
mov
outsb
lcall
aaa
call
loope
test
sbb
ljmp
pop
push
fsubr
out
pop
daa
sub
movsb
aam
pop
cmp
shlb
mov
add
xchg
mov
mov
sbb
outsb
pop
repnz
adc
outsl
iret
adc
pop
and
loopne
mov
imul
inc
gs
fistpll
mov
std
rol
mov
inc
loope
sbb
push
pusha
dec
stos
mov
push
add
popf
or
ret
mov
pop
jl
inc
mov
pop
and
int3
sub
add
mov
lea
and
adc
jmp
pusha
out
and
icebp
sub
pusha
xchg
popa
xchg
pop
pop
jnp
xlat
int
scas
inc
jg
loope
mov
lret
shlb
xor
rcrb
popa
hlt
addr16
jns
cmp
sbb
sub
xchg
es
lahf
xor
outsb
jnp
sub
and
test
jo
cwtl
mov
into
loop
insl
jl
and
je
sbb
loopne
push
or
sbb
mov
lods
fs
in
je
arpl
sub
movsb
sbb
test
add
rcrb
lods
mov
adc
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
scas
push
cmpsb
js
mov
adc
cmc
loope
je
sub
sub
sbb
jl
sbb
adc
xchg
out
xor
cld
cmp
shrl
stc
gs
sbbb
mov
shl
mov
sub
inc
or
scas
sti
shll
push
sub
cmp
mov
lds
fwait
rcrb
mov
sbb
stos
popa
shlb
popa
fbld
and
xchg
push
rcll
cmp
iret
xchg
push
xor
mov
fnsave
aas
jmp
lahf
ret
stos
pusha
sbb
mov
mov
clc
mov
jmp
or
xor
push
xchg
xchg
pop
aad
and
daa
mov
inc
push
mov
pop
ja
jae
pop
push
sub
sahf
cli
cmp
sub
dec
jecxz
xchg
into
sbb
rol
movsl
sub
push
pop
enter
call
cli
push
xchg
fisubrl
push
pop
scas
pop
popa
dec
aas
sub
xchg
sub
call
insl
inc
data16
lds
fimuls
xchg
lea
cli
dec
aam
sub
mov
in
out
or
mov
ror
mov
shrl
adc
fcomip
mov
push
stc
push
shll
xor
mov
movsb
or
sub
mov
fcoms
adc
and
notl
pop
ljmp
add
dec
out
cmp
ret
jne
hlt
mov
enter
add
pop
push
or
aad
pop
std
push
and
xchg
fstps
xor
mov
pushf
xchg
adc
out
cmp
push
mov
ja
sbb
xor
push
outsb
ds
mov
sub
cmp
outsb
mov
imul
shlb
xor
cli
sahf
out
pop
push
and
jne
mull
out
ror
stos
mov
add
xor
xor
and
cmp
je
out
popf
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
icebp
je
inc
add
pop
cmovl
sbb
dec
addr16
cmpsl
xor
bound
push
test
xor
outsl
loope
sub
out
ljmp
dec
jp
cmp
push
sub
out
stos
sbb
cltd
jg
push
xchg
mov
iret
outsl
ret
mov
mov
pop
test
sub
mov
add
jbe
dec
pop
mov
nop
aas
neg
xor
and
sub
lret
sub
mov
iret
fsubs
inc
sub
sbb
out
xor
mov
fdivp
fisttpll
sub
push
data16
mov
dec
adc
mov
sbb
pop
in
loope
jno
ds
jne
popf
cs
lea
fdecstp
mov
adc
jle
popa
mov
rclb
inc
stos
inc
inc
mulb
sbb
rcrb
jno
cmp
movsl
xor
fnclex
js
mov
movsb
lock
pop
mov
out
xor
mov
mov
cmp
inc
adc
stos
subl
jae
push
push
adc
add
push
dec
testl
shlb
jmp
shlb
mov
jns
daa
test
push
iret
stos
xchg
test
cmp
stos
rolb
fcoms
sbb
lds
jmp
in
loope
pop
ss
cmpsb
push
lcall
loop
pop
adc
push
ja
aas
sub
lret
jbe
cmp
mov
lahf
cmp
lock
or
cmc
cmpsb
icebp
int3
push
adc
fs
idiv
jno
inc
hlt
loop
lret
or
sub
inc
inc
daa
das
pusha
inc
pop
xchg
arpl
enter
test
xchg
lods
mov
cmp
cmp
or
add
or
aad
pop
daa
ja
inc
mov
sarl
sbb
gs
aam
aaa
jmp
push
js
fisubrl
jg
cmp
push
mov
mov
lret
fmuls
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
ja
push
push
xchg
adc
cmpsb
and
lahf
lds
stos
sub
push
add
cmp
pop
stos
add
mov
jp
or
or
test
jge
mov
or
xchg
sub
push
or
push
xchg
iret
shrb
adc
outsl
cmp
or
pop
adc
pop
test
outsb
mov
addr16
mov
mov
jns
jo
cld
or
movsl
shl
test
add
xchg
loopne
lods
arpl
xor
and
test
adc
rorl
dec
pop
fsubr
add
xor
ja
xor
pop
adc
mov
inc
mov
jo
cmp
xor
dec
jecxz
dec
pop
adc
xchg
and
dec
icebp
xlat
data16
dec
sbb
fsubs
pop
jge
cmpsb
in
xchg
repnz
jmp
dec
adcl
aam
sbb
ret
mov
add
or
mov
jle
push
push
push
adcb
ret
sub
pusha
cmp
adc
dec
aaa
inc
pop
cmp
cmpsb
sub
lret
dec
push
fcomps
mov
loop
in
xchg
mov
mov
sub
icebp
pushf
adc
push
mov
out
and
push
jge
or
repnz
dec
lds
xchg
push
movsb
call
add
inc
push
jnp
add
dec
popa
and
pop
arpl
loopne
mov
xchg
out
lret
insl
pop
lods
jmp
pop
pop
and
cmp
mov
mov
push
lcall
repnz
ret
mov
push
adcb
sbb
outsb
push
in
or
adc
xchg
jp
loope
lds
nop
popa
lcall
lret
movsb
scas
lods
test
jo
js
bound
ja
shlb
mov
fs
inc
lcall
jae
adc
jp
xchg
add
orb
pop
and
imul
decl
pushl
xor
mov
call
or
jmp
mov
or
mov
push
push
and
stos
push
adcb
xchg
sub
int3
mov
xorb
mov
mov
ds
enter
clc
xlat
jnp
lock
lea
fimull
lret
insb
cli
dec
pushf
imul
mov
les
push
repz
stos
adcb
inc
movsl
push
in
mov
or
or
iret
arpl
and
js
ret
mov
xor
frstor
cli
sbb
sahf
sub
jo
adc
test
adc
in
jmp
sub
insb
sbb
mov
add
cmp
dec
rolb
mov
cli
xor
aad
or
and
data16
fistps
mov
insl
xchg
sub
xchg
add
or
cmpsb
adc
stc
into
in
lret
das
xorl
test
test
inc
movsb
push
sub
jle
ja
jns
pop
add
pop
jge
or
pop
pop
pop
outsl
mov
adc
outsl
cmp
sbb
and
lods
xchg
dec
insl
mov
mov
sub
sbb
mov
fs
aas
ja
mov
sbb
imul
lock
jnp
xor
sub
imul
inc
pop
or
gs
nop
lds
xchg
sbbl
movsbl
fisttps
popa
pop
jae
test
pop
stc
inc
mov
fwait
cmc
xor
jg
les
out
mov
cmp
cli
pop
sbb
shl
ret
xchg
dec
xorl
cmpsl
insb
test
bswap
dec
hlt
imul
or
push
inc
add
outsb
cltd
push
pop
sbb
jns
lret
xchg
out
mov
xor
xchg
lahf
lods
jb
mov
xor
pop
jb
out
push
push
and
shl
inc
into
xor
ss
test
mov
pop
mov
ficoml
outsl
mov
div
jp
sub
sub
leave
cltd
mov
adc
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
or
jb
or
adc
movlps
clc
test
jnp
mov
fsubs
fwait
lea
leave
jnp
inc
pop
fsub
pop
or
mov
adc
xchg
roll
and
mov
mov
pop
sbb
js
incl
cmpsb
adcl
cmp
jp
xor
test
mov
test
cs
mov
pop
adc
frstor
clc
icebp
stc
out
cwtl
adc
dec
inc
lret
ja
sub
mov
pop
icebp
fbld
and
jns
fnstcw
outsb
mov
jo
sarl
mul
ja
mov
sbb
cmp
test
cmp
shll
push
push
xor
add
sub
and
lahf
scas
cs
sub
lahf
loopne
add
or
jbe
mov
arpl
cld
mov
pop
add
jl
mov
jb
outsb
clc
ret
lret
outsl
or
mov
mov
cmc
jb
shll
addr16
out
bound
pushf
mov
std
mov
jmp
mov
pop
aam
push
mov
xchg
aas
cmc
pop
clc
mov
addr16
scas
shrb
repz
rcrl
lea
xchg
mov
mov
sbb
fistpll
adc
jle
jmp
adc
daa
and
or
inc
xchg
dec
xchg
cld
imul
mov
les
fsubp
jmp
cli
push
jp
cwtl
cwtl
sbb
sbb
inc
push
loope
mov
sbb
dec
mov
out
or
cmpl
hlt
out
mov
addr16
dec
cwtl
inc
ss
insb
pop
fwait
ret
sub
outsl
out
or
ror
sbb
fsubrs
or
add
or
jne
inc
or
lret
out
gs
or
fwait
popa
sbb
or
movsb
divl
sbb
std
ficompl
dec
xchg
sub
xchg
mov
push
adc
rorl
ret
mov
ret
hlt
out
inc
imul
rcrb
mov
cltd
mov
or
xor
fsubr
cmp
add
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
dec
jle
mov
movlps
pop
stc
xchg
das
sbb
ljmp
cli
mov
das
dec
addr16
and
movsl
in
fstpt
outsl
loop
aad
and
xchg
movsl
adc
out
push
pop
ds
and
imul
sbb
jo
pusha
imul
pop
lahf
lret
shrb
pop
flds
test
jp
xchg
loopne
add
nop
xor
in
jne
out
in
cmp
mov
stos
push
dec
aas
aad
jne
cmpsl
cmc
ja
xchg
jae
pop
fisttpll
mov
dec
jnp
lcall
sbb
fwait
daa
ror
imul
loopne
push
addr16
ret
fildll
pop
movsb
movl
mov
rcr
sahf
imul
inc
inc
daa
xlat
ds
nop
or
fbld
dec
inc
adc
lahf
lret
and
divl
fsubs
push
mov
ds
stos
ret
adc
jnp
cmpl
test
pop
cmp
pop
cwtl
mov
inc
mov
pop
inc
roll
mov
sub
lret
adc
cmp
pop
imul
dec
inc
pop
cli
lods
test
mov
xor
mov
xchg
stos
arpl
imul
dec
sbb
sub
cmp
mov
mov
stos
cltd
imul
xchg
lds
or
push
and
lret
and
push
dec
cltd
mov
adc
shlb
popf
int
mov
xchg
push
call
pop
sub
repz
sbb
inc
mov
or
outsl
dec
dec
ljmp
sbb
push
lds
mov
push
sarb
lretw
loopne
adc
fisubrl
mov
pop
ljmp
adc
andb
leave
aaa
in
clc
lods
aad
ret
cmc
lcall
mov
add
jb
jns
dec
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
inc
ss
jb
adc
adc
in
scas
push
cmpsl
cmp
jne
je
mov
data16
iret
jl
dec
int
outsl
mov
cmc
adc
mov
mov
sbb
mov
cmpsb
ds
xchg
add
inc
das
jb
test
mov
pop
lcall
ss
adc
push
push
inc
and
popf
mov
mov
dec
push
mov
sub
mov
hlt
cmc
mov
mov
sub
out
stc
add
xor
mov
pushf
inc
and
imul
mov
jnp
les
fsubrl
lock
idivb
mov
sbb
sbb
push
fistpl
xor
scas
or
cmpl
aas
ja
xchg
or
lea
push
in
xlat
or
sub
loopne
jne
roll
je
xor
dec
sbb
mov
mov
xchg
sahf
ljmp
jb
xlat
xor
add
repnz
xchg
add
jmp
stos
loop
andb
leave
sahf
jbe
mov
sar
movsb
push
inc
mov
xor
push
cmp
in
call
sub
xchg
dec
cltd
into
xor
or
push
mov
js
add
xchg
psrad
add
shr
xor
cmp
sub
sub
lock
or
xchg
dec
loope
in
and
adc
cmc
lds
fsubrl
mov
jecxz
cmp
fs
or
jo
fmull
mov
xor
shrl
xchg
test
xchg
js
or
outsb
mov
xor
pop
rclb
mov
dec
into
pop
out
pop
jge
test
movl
in
sub
adc
jg
mov
loop
enter
ret
xchg
inc
rorl
pop
xorb
ljmp
pop
jb
repnz
shr
mov
sbb
add
imul
and
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
dec
test
mov
enter
testl
pop
clc
sahf
mov
xor
jo
rcrl
add
sub
stos
fcmovnb
inc
pop
icebp
cs
out
jge
push
out
js
js
fdivs
lock
sub
stos
std
outsb
or
js
dec
push
push
and
cmp
xchg
jnp
jle
jmp
imul
mov
ret
adc
mov
xchg
jmp
lds
aad
arpl
or
cmp
out
ljmp
dec
fistpll
arpl
jmp
aad
jne
mov
aaa
fimuls
mov
and
inc
inc
mov
loopne
cmp
add
add
out
sbb
jle
jnp,pt
enter
inc
ret
mov
adc
adc
outsl
fs
loop
dec
or
sub
cmpsl
rorl
fucomp
sbb
xor
in
pusha
das
jbe
adc
addr16
in
cmpsl
int3
or
movsl
popf
insl
shrb
jge
cmp
cmpl
lds
shlb
in
cwtl
dec
push
push
xchg
mov
popf
out
sbb
push
ljmp
pusha
ljmp
pop
cltd
out
inc
clc
fwait
es
test
lahf
incb
and
movsb
adc
repz
movsb
fwait
or
lds
out
rcl
addr16
outsl
pusha
mov
gs
and
test
stc
lock
test
aad
fwait
cmp
out
adc
and
js
nop
dec
push
push
inc
in
mov
jge
sti
cmpsb
jae
lret
and
dec
jb
jno
fists
faddl
jg
cmpsb
stos
and
mov
popa
data16
test
test
fiadds
add
insb
sub
xchg
mov
cmp
addr16
jmp
sub
lret
cmp
insl
xor
insl
popf
cmpl
jmp
rorb
xchg
jne
sar
loope
scas
jp
mov
imul
inc
cli
out
je
mov
pushf
shl
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
push
data16
push
adc
or
neg
mov
inc
lds
mov
in
dec
addr16
test
stos
mov
jmp
mov
xorl
daa
sarl
into
sbb
int3
in
mov
mov
icebp
das
xor
lcall
in
movsb
xor
push
dec
push
inc
xchg
cmp
frstor
xchg
test
loopne
sub
pop
sub
add
fcoml
mov
jnp
js
mov
aam
in
in
and
xor
test
sub
cmp
add
ja
push
cmp
mov
mov
jg
test
xchg
and
add
int
je
push
in
cmp
inc
or
adc
out
xchg
inc
repz
loop
sbb
xchg
cmp
and
fadd
test
pop
mov
push
aas
lods
sub
sub
mov
pop
pop
aam
cltd
jg
sbb
sbb
les
sub
cld
mov
dec
xchg
add
xor
mov
jg
test
imul
out
loope
mov
aam
mov
cmp
xchg
jo
pop
pop
or
sbb
xor
js
insb
push
push
sub
mov
mov
mov
ret
loope
sub
stc
ss
mov
aas
pop
inc
je
sarl
lods
bound
mov
inc
rorb
into
push
ja
add
ficoml
dec
mov
lret
jecxz
fsubrl
mov
xchg
sub
sbb
jae
push
adc
lret
loopne
iret
jbe
jne
xchg
dec
push
mov
shrl
add
push
clc
outsb
xlat
jno
fisubrl
es
lret
arpl
pop
mov
sub
aas
pop
mov
mov
mov
cmp
xchg
ss
or
adc
jne
dec
fisttps
lea
jle
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
add
enter
pusha
lret
out
cmpsb
orb
push
stos
push
sub
sub
jle
daa
cmp
std
and
xchg
pop
push
sbbb
push
iret
je
roll
pop
cmp
xchg
fimull
in
xlat
orl
arpl
popa
jp
dec
inc
sbb
sub
jb
xlat
lahf
gs
adc
and
dec
and
push
ljmp
sub
dec
push
pop
or
subl
in
sub
adc
fadd
fcompl
addr16
loop
jnp
fisttpl
inc
mov
movsb
insb
or
adc
cmp
orb
mov
test
mov
mov
lahf
outsb
adc
add
mov
xchg
andb
rorl
mov
xlat
outsb
scas
jge
sbb
inc
jp
sbb
pop
cmp
out
pop
dec
and
add
mov
xchg
adc
inc
xor
jae
inc
inc
and
sub
je
push
inc
sub
fucomip
mov
cmpsb
daa
jp,pn
pushf
adc
xor
imul
xor
cwtl
add
mov
xchg
jmp
mov
js
mov
lcall
jb
mov
or
xor
loopne
xchg
fisubl
and
bound
lods
mov
adcb
or
push
mov
loop
ret
in
std
fnsave
addr16
and
xchg
adc
outsb
adc
adc
fldt
push
push
push
sarl
pop
mov
pop
les
pop
int
in
fsubp
gs
cmpsb
cmp
scas
fcmovb
fwait
add
cmp
lahf
jb
mov
imul
popf
clc
jmp
mov
push
and
out
sub
mov
ds
out
ds
jns
mov
add
pop
xchg
xchg
inc
jno
fcoml
dec
mov
cmc
fisttpll
mov
xor
dec
cld
lods
ret
lds
mov
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
shl
xor
mov
jmp
stos
roll
int3
jnp
mov
jl
pop
inc
lret
xchg
xchg
ljmp
adc
lods
int
out
xor
lret
lret
icebp
jnp
xor
inc
inc
out
das
pop
mov
out
add
call
in
pusha
insb
repnz
cli
inc
and
lcall
mov
sub
and
jb
aaa
cmp
in
aas
add
loope
out
sub
jmp
push
pop
nop
push
data16
test
jb
nop
lret
inc
sti
sub
dec
jp
push
cwtl
or
rcr
jns
mov
pop
das
dec
push
xchg
fsubrp
push
mov
push
add
out
push
pop
es
hlt
insl
cmp
lea
cltd
sbb
mov
decb
add
cli
lods
sub
cld
push
or
iret
pop
nop
int
test
xchg
ret
popf
test
xchg
jo
notb
xchg
jne
jge
mov
cmpsb
jecxz
push
lret
jp
mov
js
sbb
sahf
jge
push
inc
pop
add
dec
lret
repz
add
jo
lock
popa
mov
cmp
cwtl
test
sbb
rcr
xchg
scas
push
cmp
inc
sbb
and
adc
cmp
and
push
dec
or
pop
cmp
jnp
sub
arpl
push
xor
fs
push
sub
inc
out
in
inc
iret
mov
inc
cs
testb
dec
ljmp
mov
push
pop
das
dec
dec
repnz
test
inc
or
mov
adc
adc
repz
pop
test
mov
out
sahf
nop
pop
sub
insb
push
gs
adc
pop
pop
imul
outsl
mov
movsl
in
and
mov
call
push
rolb
idivb
mov
pop
popa
cmp
inc
call
cmp
sbb
cmp
inc
aad
mov
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
aam
sbb
enter
fsubs
add
mov
cmc
call
call
adcb
lods
push
into
mov
idiv
jno
add
popf
push
pop
repz
repz
scas
jns
mov
xor
js
adc
xor
popa
sbb
mov
push
incb
call
push
iret
pop
mov
stos
pop
popa
mov
jg
out
jge
in
cltd
ret
and
inc
xor
xor
cs
ret
push
pop
cmc
sbb
aam
cmpsl
adc
int3
cld
mov
mov
and
push
ret
lock
adc
loop
and
mov
dec
push
ficomps
lock
daa
movsl
mov
lds
mov
sarl
and
div
loope
outsl
xor
jno
test
and
sub
sbb
dec
cmpl
push
fcompl
push
dec
xchg
pop
xor
jmp
mov
cmp
push
mov
inc
repnz
xchg
fidivl
stos
das
lock
lods
into
daa
xchg
mov
jbe
xchg
pop
scas
stos
mov
adc
fdiv
nop
jg
jae
outsb
sub
mov
es
loope
mov
addr16
fcompl
je
push
mov
inc
and
jge
pop
mov
pop
fadds
test
ljmp
mov
xor
xor
popf
xchg
cmp
jmp
jb
je
iret
out
inc
cld
jb
sbb
jmp
cmp
sub
xor
cmp
and
dec
rorl
incl
mov
xor
sbb
pop
push
scas
cwtl
pop
in
std
pop
mov
cmpsb
mov
imul
ds
pop
lods
lods
in
push
jbe
xchg
mov
or
ret
pop
add
xorb
pop
pusha
xor
xor
clc
call
data16
test
sahf
add
cmp
mov
sbb
push
enter
mov
xor
xchg
fdivrl
movsl
add
sbb
sti
fs
inc
or
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
fmull
mov
ficoml
adc
aaa
pop
loopne
jecxz
cmpsb
jns
xchg
push
mov
dec
pop
shlb
pushf
shll
negl
pop
jae,pt
xchg
adc
loopne
ds
xchg
call
cmp
es
pop
addr16
dec
add
cmp
shlb
fcomi
jno
inc
int3
mov
call
loopne
jle
xor
dec
push
jp
pop
les
rclb
sub
arpl
pop
mov
ljmp
movsb
fnstenv
mov
or
lods
loop
test
shll
outsb
stos
jl
xor
stos
js
nop
xchg
nop
push
dec
je
jg
out
mov
adc
test
addl
xchg
adc
xchg
mov
int3
js
idiv
sub
xchg
dec
mov
cmpsl
icebp
jae
frstor
imul
mov
fisubrs
ljmp
aad
xor
popa
popf
pop
loope
addr16
das
mov
mov
frstor
inc
repz
inc
adc
fwait
data16
testb
xchg
push
addr16
arpl
xchg
dec
jae
je
pop
insb
shlb
cli
mov
ds
add
jb
sbb
aam
fdivrl
loopne
ficoms
fadds
dec
in
mov
sub
les
sbb
mov
sbb
push
lock
bound
stos
mov
add
hlt
das
lods
sbb
loopne
xchg
mov
mov
or
pop
jecxz
popf
xor
sar
dec
adc
call
vcvtsi2ssl
imul
lahf
out
and
mov
popa
xor
scas
cmc
mov
mov
pushl
jbe
mov
leave
xchg
dec
test
adc
and
xor
sbb
xor
or
std
pusha
out
mov
mov
and
mov
shlb
scas
xchg
lods
ds
mov
hlt
pop
cwtl
test
mov
mov
jne
aam
dec
xlat
sbb
pop
cs
xchg
cmp
lcall
sbb
aaa
mov
imul
pop
mov
dec
es
add
push
mov
fildl
sbb
xlat
inc
imul
push
pop
and
push
loope
fldl
ljmp
rdpmc
sub
loope
aas
jae
hlt
pop
movsl
es
pop
cmp
dec
push
in
mov
ficomps
loopne
push
mov
push
or
pmaxsw
mov
mov
ss
je
aam
popf
aad
jns
inc
out
and
mov
iret
dec
jnp
cmpsl
xor
test
repz
dec
jmp
sub
xchg
aas
cld
jns
ret
push
inc
jne
mov
addr16
insl
and
loop
insl
lahf
pushf
leave
ficoml
inc
and
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
stos
push
adc
adc
cltd
sbb
faddl
mov
repnz
int3
adc
jno,pn
ret
sub
cli
pop
xlat
scas
cmp
inc
les
dec
or
jmp
cmp
cmp
rorl
xor
divl
mov
imul
inc
pop
xor
leave
push
sahf
ja
dec
insb
adc
or
adc
and
jo
test
mov
dec
xor
mov
xor
addr16
xor
add
out
int
pop
adc
fmull
lcall
test
imul
cmp
insl
inc
sti
cmp
cmp
jnp
dec
in
jge
aas
cld
sub
inc
hlt
cmc
xor
shlb
rolb
adcl
das
bound
mov
movsb
jne
rol
push
and
rorb
stos
mov
sub
int
push
sbb
stos
cmpsb
aam
push
inc
sub
fmuls
scas
inc
add
mov
dec
mov
cs
js
cmp
or
into
loope
repz
cmc
mov
and
push
or
cltd
xor
mov
mov
pushf
bound
rcrb
dec
or
push
ja
fidivrs
jge
arpl
cs
call
sbb
jle
pop
xchg
shlb
jno
stc
cmp
call
lret
push
scas
mov
jbe
add
ds
mov
add
rorb
inc
roll
mov
jae
dec
in
loope
mov
decb
popa
mov
lret
inc
sbb
mov
jl
pop
mov
repz
or
push
sub
pop
gs
adc
cmpl
push
sbb
mov
and
dec
xchg
int
xchg
sbb
sub
inc
movsb
loopne
icebp
mov
mov
inc
adc
push
aaa
dec
scas
push
hlt
push
sbbb
pop
inc
inc
jmp
lret
mov
jmp
xlat
jle
jns
pop
push
rcll
rcl
jb
push
int
push
push
ds
xor
xchg
mov
popf
adc
leave
out
mov
ds
daa
dec
push
sbb
jl
incb
push
add
push
js
fldt
outsb
xchg
sbb
jbe
fiadds
cld
inc
adc
lret
rcrb
repz
inc
pop
add
or
mov
xchg
loope
insl
popf
leave
or
fnstsw
scas
dec
dec
sti
nop
push
rcrl
movsl
or
movsl
addr16
ficoms
test
cmp
aam
xor
adc
ljmp
cmp
push
inc
mov
cmc
or
xorb
sbb
fisubrl
pop
push
or
jb
or
lock
jle
sub
stc
bound
stc
les
lcall
dec
xchg
xchg
js
dec
adc
stc
adc
sub
cld
sub
inc
adc
test
jp
mov
inc
jg
or
push
loope
clc
movsb
jae
sbb
stos
mov
dec
cmp
out
cmpl
mov
movsb
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
