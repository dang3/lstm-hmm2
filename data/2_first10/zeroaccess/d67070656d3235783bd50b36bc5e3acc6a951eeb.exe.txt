push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
icebp
cmpsb
xchg
push
movsl
add
fld
fcom
enter
leave
cld
icebp
fmulp
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
lock
out
cmp
int3
lret
aad
mul
xor
mov
fcomi
std
test
iret
xchg
in
das
ret
cmp
cmp
add
ffreep
fsubrp
roll
test
adcb
cmc
repnz
xor
iret
jmp
aam
aad
fld
in
out
sbb
test
cmp
jmp
out
cmp
stc
fcmovnb
shr
std
sar
in
mov
in
jmp
aaa
lds
lock
into
aaa
stc
fdivrl
idiv
in
cmp
loop
rcl
jmp
clc
mov
jmp
mov
mov
clc
leave
out
fst
int3
out
icebp
fucom
xor
clc
repz
xchg
idiv
lret
call
in
hlt
xor
ret
ror
cmp
fsub
icebp
xchg
jecxz
ljmp
sar
nop
test
in
ret
cmc
fsubr
cmp
aas
sti
stc
aam
fld
fld
sub
ljmp
xor
xor
cmp
clc
shll
stc
sar
test
stc
loopne
bnd
fucom
jmp
repnz
ss
shl
imul
aaa
aaa
fnclex
test
aas
cmp
aam
std
in
incb
mov
aad
call
xor
clc
into
rol
ret
shl
out
in
leave
ret
sti
mov
in
int3
out
int3
jmp
mov
aad
in
cld
jecxz
call
fst
out
fmul
loopne
loopne
fnsetpm(287
test
addl
in
shr
lock
out
sbb
mov
loope
fcmovnu
in
lock
xor
in
icebp
repnz
cmp
into
ds
hlt
cmp
fstpt
fdivp
rcl
ds
in
fdivr
jecxz
in
out
fcmovne
lock
idivb
rol
repz
enter
mul
loope
into
xchg
sbb
in
jmp
hlt
lret
lret
hlt
cmp
sti
test
loopne
cli
lret
mov
shr
rorb
jecxz
ljmp
repnz
shl
xchg
movl
cld
icebp
loopne
xor
iret
lret
das
fdiv
into
cld
sar
and
loopne
div
fxch
in
iret
in
fld
mov
xchg
and
das
ret
fld
in
rcr
jmp
ret
xchg
loop
clc
ljmp
in
xor
cld
aaa
enter
clc
loop
fcomip
sti
aad
hlt
loop
std
int3
enter
out
out
sub
icebp
fidivrs
lock
repnz
not
and
cli
repz
repnz
iret
cmc
sarl
loope
cld
sti
fsincos
fstp
jmp
fcomip
loop
out
out
out
repnz
jecxz
in
fdiv
jecxz
cmpb
xchg
mov
icebp
in
lret
loopne
lock
cmc
lret
aas
sar
icebp
sub
ret
fcmovnu
ljmp
xchg
fiadds
icebp
cmp
cmp
cmp
idivl
rol
xchg
lret
adcl
loop
rcr
idivb
into
int
cmp
addl
cmp
jmp
cld
jmp
xchg
rcr
jecxz
cmp
int
loope
fdiv
sarb
addb
mov
ljmp
shrl
rol
cmp
loop
aad
testl
loopne
shrb
cmp
rol
clc
fsubr
ror
into
rorb
lret
loopne
or
xchg
repz
idivb
out
cmp
shr
icebp
loope
ljmp
mov
mov
in
ljmp
inc
clc
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
xor
add
movsl
add
test
jmp
rcr
loop
fmulp
out
lock
repnz
test
divl
out
sar
cli
test
hlt
idiv
cmp
in
xchg
fildll
neg
hlt
ss
rol
fsub
cmc
cli
fdivr
call
out
adcl
lret
out
fxch
cmc
sar
repnz
fmul
in
test
lock
cmp
xlat
iret
xor
idivl
int
hlt
inc
aam
testb
jmp
shl
mov
repnz
in
jmp
int3
in
cli
cmp
aaa
rcr
rolb
popl
aam
ljmp
in
fprem1
xlat
ds
ffree
fcmovb
jmp
in
cmp
mov
test
shl
lret
enter
hlt
cmc
shl
shl
ds
test
rolb
in
repnz
fsin
xor
idivb
loopne
test
aad
out
jmp
into
shrl
ret
xor
out
call
add
out
xchg
jmp
test
cli
cmp
repnz
rcr
repz
fildl
loopne
jmp
xchg
xchg
loop
cli
sub
fldln2
cmp
adc
sar
not
loop
fldpi
out
xchg
loop
loopne
repz
stc
into
sar
cmp
mov
loope
lock
ror
int3
loopne
das
out
sti
int
stc
fucomip
ror
cmp
inc
test
int
call
cmc
out
xlat
fnstenv
fsubr
lock
ret
mov
faddp
xlat
lds
int
xchg
das
out
lock
ss
loopne
in
in
rorl
testb
mov
lret
enter
xlat
in
aam
ret
inc
test
stc
rcr
enter
in
ror
xchg
icebp
aam
lock
fsubr
fcmovu
ljmp
testl
ret
jecxz
lock
xlat
shlb
iret
out
xor
ds
into
out
out
aam
leave
jmp
lock
repnz
in
int3
lock
sti
ror
imul
into
ror
rolb
xor
mov
test
xchg
fisttpll
stc
jmp
out
xor
cmp
hlt
out
out
in
out
std
test
fnstsw
loop
jecxz
cmc
cli
lret
fdiv
in
aad
mov
loop
sbb
repnz
and
enter
cmp
xlat
hlt
not
rolb
incb
jecxz
xchg
ret
xor
enter
addb
repz
mov
cmc
lret
in
xchg
std
xchg
loope
call
cli
cld
in
xor
repnz
aad
loopne
jmp
in
icebp
iret
in
aas
sar
jecxz
int
hlt
hlt
icebp
jmp
icebp
out
inc
stc
repz
test
out
jecxz
xor
ljmp
cmp
into
test
cmp
xlat
loop
movl
shl
lret
stc
leave
lock
enter
and
out
loop
fadds
orb
in
ss
fsubr
cmp
shl
stc
aam
cmp
aam
jmp
test
std
xchg
out
das
fcmovbe
xor
hlt
aam
aad
aam
cmp
mul
div
cmp
mov
sub
in
in
cmc
cmc
fcmovnbe
hlt
out
lret
ss
lret
sbb
fmul
out
mov
loop
in
xor
not
clc
out
xor
incl
xchg
repz
out
in
lret
in
iret
xchg
sub
idiv
rcr
lret
in
leave
out
cmp
cld
shl
lock
ret
std
mov
repnz
aaa
jmp
ljmp
in
fnstenv
shl
roll
jmp
out
repnz
loop
iret
ret
xor
jmp
cmp
sti
jecxz
repnz
xchg
aad
in
xchg
ljmp
fdivl
jmp
in
fidivrs
out
addb
sbb
lret
lret
int
in
cmpb
rcr
int3
xor
fdivrp
or
in
std
int
les
and
fisttps
ret
cmp
lock
loopne
lock
decb
add
fadd
leave
int
bound
inc
aad
aam
pop
int3
pop
jle
movsl
add
test
ds
lret
int
cld
cli
cli
jmp
test
in
repnz
fucomi
fdivrp
stc
std
xor
frndint
lret
in
stc
mov
mov
lret
int
sti
shr
rcl
fcom
stc
test
icebp
vpminub
xlat
test
mov
int
jmp
mov
loope
lret
shll
aas
clc
fistpll
fnstsw
rol
fadd
fcmovnu
sbb
std
repz
lret
xor
xor
cmp
cmp
fadd
neg
std
fcmovu
in
orb
shl
jmp
div
repnz
loopne
in
icebp
cld
incb
sti
sub
in
sub
out
cmp
in
cmp
cmp
icebp
inc
mov
hlt
orb
repz
fst
xor
ds
xlat
lret
into
icebp
hlt
xchg
out
dec
hlt
int
call
xor
fnstsw
aad
lock
mov
test
leave
leave
fldl
xlat
rol
aaa
icebp
loope
repz
xlat
fnstcw
xchg
xlat
lea
mov
cs
aam
cmp
clc
sti
enter
aam
xchg
fmul
fmul
in
in
repz
fcomip
call
stc
out
out
lock
fpatan
xlat
out
neg
xlat
xor
test
jmp
loope
ror
fcmovbe
jmp
stc
icebp
repz
icebp
rorl
ret
faddl
rcr
aaa
xlat
sti
out
neg
sar
cld
hlt
out
lret
leave
orl
fdivp
in
ret
enter
cmp
ljmp
test
test
sti
jecxz
in
in
xchg
mov
shl
xor
fadd
int
lret
shr
roll
out
cmp
in
out
xchg
xchg
ljmp
cmp
xor
call
hlt
aaa
rcr
cmp
stc
fisttpl
out
fiadds
jmp
aam
cld
int3
std
rol
xlat
adc
mov
cld
call
loope
and
out
enter
enter
cmp
rcr
icebp
fcmovnu
in
roll
fists
lret
cmp
in
cmp
lret
iret
out
fdiv
in
in
int
test
fucomip
loopne
into
xchg
into
out
iret
ret
out
leave
fcomip
fsub
ret
std
jecxz
jmp
out
in
out
rolb
int3
jmp
ror
out
ljmp
loopne
loop
cld
call
in
jmp
call
int
xchg
leave
aaa
test
cli
cmc
ds
cmp
adc
ret
mov
std
in
out
iret
hlt
shr
ret
in
fxch
cmp
xlat
jecxz
rcl
add
fucompp
in
mov
stc
lret
aad
cmp
leave
lock
clc
rcl
fadd
test
incb
test
repz
adc
out
cli
ljmp
xor
repz
push
shl
repz
leave
fsubp
xchg
mov
div
sti
cs
cmp
aaa
cmp
loop
test
std
test
lret
lret
in
in
int3
out
xor
repnz
xor
iret
cmp
div
ret
iret
stc
stc
inc
fcmovne
sbb
out
cld
xchg
int3
fdivp
in
cmp
test
cld
shl
add
cmp
fdivr
aam
test
lret
fstp
test
in
out
lret
out
shl
cmp
testb
mov
lret
mov
iret
out
mul
sar
clc
cmp
fcmove
shr
fdivp
fidivrl
xchg
loopne
cld
call
jmp
cld
mov
xor
icebp
in
iret
shl
in
loope
sar
movb
int3
icebp
aam
fadd
xor
xor
faddp
jmp
sarl
out
in
iret
jecxz
aam
addb
mov
clc
call
in
aam
rolb
repz
fimuls
repnz
enter
xor
shr
into
cmp
lret
aaa
idiv
test
sar
test
orl
call
xor
dec
cmp
std
ffreep
aad
mov
leave
cmc
mov
mov
out
into
in
rcl
int
cmc
iret
cld
repz
testl
cld
xchg
out
out
clc
leave
int
fidivrl
cmp
shr
xlat
sar
std
aad
test
fmulp
lea
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
xor
movsl
add
ret
in
jmp
xchg
out
xchg
shl
lret
int3
fxch
aam
cmp
rcl
idiv
aad
cli
xchg
mov
fisttpll
call
in
icebp
aaa
enter
std
enter
cmc
idiv
add
fiaddl
leave
incl
aaa
call
aaa
in
fstpt
aaa
iret
int
rcr
lock
loop
mov
test
into
xchg
out
dec
jecxz
rcl
repz
in
cmp
jmp
incl
cmc
neg
fdivr
lret
add
aad
in
call
icebp
sar
aaa
test
icebp
and
mov
out
fists
shr
jmp
lock
and
shl
xlat
aad
cli
vpsubd
out
in
icebp
repz
cmp
int3
loopne
iret
ret
shl
mov
idiv
int
enter
std
xchg
xor
ss
enter
cld
not
cmp
fiadds
fisttpl
xchg
into
repz
das
jmp
repnz
icebp
cmc
add
xchg
ljmp
in
ljmp
leave
ror
fucomi
fld
aam
in
ret
int3
int
clc
xchg
loope
into
jecxz
ret
xor
cmc
fadd
int3
cmp
faddp
out
in
call
mov
xlat
ret
jmp
aad
addl
filds
std
xchg
repz
iret
in
divl
aad
rcl
fcomp
cmc
repnz
loope
out
fdivrs
sti
in
loop
in
out
ljmp
aad
lock
sar
not
rcr
test
in
xchg
loop
out
out
enter
jmp
rolb
std
icebp
aas
rcr
jecxz
adcb
shr
int
in
repz
out
rcl
cmp
test
cmp
loopne
lea
idiv
fmul
mov
xor
xor
lret
int3
cli
add
loop
jmp
iret
loopne
sub
int
cmp
cli
rcl
leave
ss
rol
out
fxch
test
vpminub
shlb
mov
int3
push
std
fucomip
testb
into
into
loope
jmp
leave
out
in
into
shlb
fucomip
repz
sti
fldl
test
mov
aaa
cmp
in
rcr
aaa
call
rcr
shr
shl
fmull
repnz
shlb
cs
repz
jmp
test
roll
repnz
loope
sub
ror
out
fidivl
iret
ss
into
repnz
repnz
mov
in
into
iret
int3
clc
or
cld
rol
imul
loopne
rcr
enter
hlt
in
hlt
aad
shl
lock
das
xor
loopne
xor
sbb
loope
jmp
leave
loop
nop
in
repnz
lock
lret
int3
cmc
shl
ds
xchg
rcl
mov
or
leave
xchg
out
xchg
lret
xchg
loope
jmp
out
lret
jmp
cld
cmp
mov
in
mov
mov
mov
leave
loop
in
aaa
icebp
out
in
fdivr
jmp
stc
loop
repz
call
orl
ror
out
std
jmp
lock
and
fdivr
mov
test
and
repz
icebp
call
shlb
shr
sti
lret
fidivrl
sti
jecxz
mov
fcomip
mov
mov
in
xor
repnz
in
xor
jmp
iret
shl
add
ljmp
mov
test
int3
shll
stc
div
xlat
ret
in
shr
into
cli
test
inc
ret
ss
cmp
cmp
rcr
addl
in
xchg
ror
ret
cmc
jecxz
out
or
icebp
out
loop
test
lret
popl
shl
call
aad
sar
sti
int3
xlat
aas
jecxz
leave
test
loop
stc
fildl
xchg
f2xm1
leave
rcr
aaa
hlt
fucom
out
stc
jmp
aas
cmc
fcmovb
ret
loop
stc
test
out
ret
int
loop
cmp
cmp
iret
loop
in
div
lds
cli
iret
lret
add
mov
jmp
int3
rcl
aad
int3
call
rol
adc
movsl
add
lock
ljmp
cld
cmp
into
in
rcr
mov
mov
xlat
in
xchg
sti
call
ret
shll
int
idiv
jmp
loope
cld
cmp
flds
lock
xor
bnd
cli
xor
ljmp
out
shl
jmp
fucomip
int
test
xor
fprem1
cmp
test
sbb
jecxz
xor
mov
clc
ror
out
in
cmp
jmp
neg
lock
jmp
fisttps
mov
sarb
lock
int
cmp
cmc
ret
iret
cmp
ftst
orb
out
loopne
orb
hlt
xlat
out
fcmovu
not
rolb
shl
addb
out
movl
idiv
cmp
fdivrp
cli
ljmp
rorb
aad
ss
out
lret
stc
lock
test
out
mov
xchg
test
xor
ss
adc
int3
sar
jmp
fcmove
stc
xchg
in
mov
xor
rcl
aam
into
fcomp
test
sar
fadd
cmc
stc
int
int
sub
in
in
in
fcom
into
ljmp
sti
rcl
ror
jecxz
xchg
in
loopne
out
test
aas
in
out
xor
fucomp
imul
loop
fcomp
cmp
rcl
or
std
fldlg2
in
fucomi
in
mov
enter
imul
fnstenv
fucom
shl
jecxz
fiadds
out
add
int
das
aam
xor
xor
in
lock
ds
sti
fcomip
cmp
sbb
int
lret
shr
lret
xor
in
cmc
sbb
lds
or
fildl
shl
lret
sti
cld
repz
repz
jmp
test
popl
xor
cli
hlt
fsubrp
jmp
loopne
sub
ret
fcom
roll
ffree
ficoms
in
not
fcom
hlt
fcmovne
cmp
cmp
ret
stc
repnz
mov
in
roll
cs
les
out
cmp
cmp
cmp
int
into
mov
cmc
stc
fcmovnu
in
into
lret
and
xor
cmp
out
shl
shl
sti
cli
icebp
loopne
repz
cmp
out
orl
xor
neg
loopne
ret
test
jecxz
jmp
fists
fbstp
xor
aam
cmp
cmc
into
ljmp
rolb
cld
mov
and
loope
ret
lock
xlat
rcr
ds
repnz
clc
fldl
mov
jecxz
cld
lret
hlt
int
in
cmp
std
fadds
stc
idiv
mov
repz
xchg
call
in
stc
cmp
fadd
aas
mov
cmc
in
xchg
mov
fucomp
fisttps
fadd
xor
cld
cmp
sti
ret
loope
stc
fisttpll
test
xchg
cmc
xor
lret
in
repz
testb
incb
loop
lret
cld
out
xor
sar
lock
in
cli
icebp
faddp
loope
mov
cmc
leave
cld
test
jmp
ljmp
int
aaa
repz
iret
sar
sti
shl
addb
neg
enter
ror
xor
ret
aad
sti
leave
and
shr
sar
lock
neg
in
clc
test
xchg
test
jmp
jmp
loopne
in
fcmovnu
ds
in
enter
in
rcl
xor
aam
jmp
int3
xlat
test
lock
repz
out
in
lret
mov
shr
in
out
jmp
aas
cmp
icebp
iret
rcr
in
sti
ret
cmp
loope
ljmp
out
cli
xor
leave
ret
cmp
ffree
sar
ret
out
lret
xchg
mov
xchg
mov
out
into
out
cmp
leave
aaa
repz
out
icebp
shll
and
aad
test
loope
icebp
loop
aad
divl
loope
sti
lret
in
stc
loopne
cmc
std
int
lock
movb
out
cli
iret
mov
movl
jmp
int3
rcl
fstp
fldt
in
repz
jle
jecxz
in
ss
aas
sti
aas
jecxz
loopne
in
sub
loopne
xchg
in
or
sub
fdiv
not
in
rolb
orl
xor
hlt
ss
cmp
repz
rorb
out
int
jmp
int3
int3
cmc
in
ret
leave
icebp
fcmovu
repnz
lret
hlt
fcmovnu
lock
fildl
mov
mov
xor
div
fadds
fcmovb
cmp
adc
dec
test
leave
xchg
xchg
in
cli
icebp
hlt
repz
fsub
ret
out
icebp
out
ffree
aam
mov
jmp
ror
fsubp
clc
xor
in
cmp
cmp
iret
xor
cmc
in
hlt
test
in
loop
fdiv
test
loope
fcomip
xor
out
aam
xor
enter
sub
lock
ljmp
leave
enter
rcr
jmp
stc
in
hlt
mul
xor
fdiv
out
aam
test
in
clc
lret
ljmp
icebp
fcmovne
cmc
repnz
out
fdivp
sar
in
stc
fstp
cmp
out
out
nop
enter
fst
repz
xlat
icebp
out
shlb
repnz
neg
jecxz
hlt
hlt
neg
jecxz
xchg
sub
loope
mov
aad
clc
repz
out
jmp
in
iret
leave
repz
xchg
xchg
out
out
cmp
out
fildl
xchg
xchg
test
lret
std
cli
cld
ret
and
lock
cmp
xor
ljmp
std
in
test
fdivrp
jmp
out
in
mov
out
out
popl
sub
cmp
faddl
repz
jmp
filds
in
out
xchg
int
clc
shlb
xlat
std
aas
lock
xchg
fdivr
mov
mov
nop
std
int3
mov
vcvtpd2dq
ss
xor
call
loope
rol
clc
sti
movl
testb
aad
rol
fadds
loope,pt
hlt
flds
hlt
xchg
aad
cmc
into
cmc
cmp
int3
lock
lock
incb
jmp
fsubr
fstp
hlt
mov
ret
mul
clc
not
fsubr
rcl
int
out
hlt
mov
cmp
into
int3
lock
int3
div
out
cmp
sub
out
clc
out
out
addb
lret
in
loopne
aad
in
xlat
out
in
fcmovnb
cmc
aam
sti
idiv
sti
in
loopne
std
int3
shl
out
fidivl
out
cmc
out
ds
fnstcw
cld
cmp
rcr
mov
loope
divl
cmc
sar
repnz
cmp
cmp
aas
repnz
loop
loop
fdivr
leave
into
xchg
das
out
rcl
sti
cmp
cli
lock
incl
loopne
out
lea
out
loop
jmp
hlt
ror
cmp
out
xor
xchg
shl
orl
nop
call
aam
icebp
cli
imul
lret
clc
lret
int
loope
mov
std
mov
stc
std
int3
loope
lret
lret
repnz
divl
into
shl
clc
loopne
incl
fld1
ljmp
addb
xor
lock
cmp
roll
loope
nop
lret
icebp
test
lret
loope
sti
lock
xlat
fmul
cli
test
fprem1
fcmovu
loope
lret
repz
out
in
hlt
fcmovbe
enter
fucomi
lret
fildl
fcmovb
jmp
std
addb
jecxz,pn
jmp
cmp
sbb
in
icebp
flds
enter
lret
fmull
cmc
xor
cmp
cli
out
cmp
sarl
repz
inc
loopne
out
orl
in
out
in
iret
leave
lret
std
shl
fst
fcmovnb
loopne
or
fmull
dec
aam
repz
cld
cmp
shl
div
aas
add
out
loope
loopne
fcmovu
loop
mov
jecxz
xor
int
cmp
idiv
out
in
loop
clc
sti
cmp
mov
int
enter
mov
xchg
mov
repz
repz
clc
in
ljmp
repz
xchg
mov
lea
xor
xor
lea
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
movsl
jbe
adc
jle
movsl
add
cld
cmp
std
and
mov
fiaddl
xchg
in
enter
call
loopne
lock
adc
fmulp
fisttpll
mov
lock
clc
lret
loope
out
into
repz
cmp
fcmovnu
aas
loop
clc
loope
leave
std
ffreep
sar
mov
xor
cmp
cmp
fsubr
out
repz
sti
rorb
enter
mov
out
hlt
out
lret
cld
fadd
sti
loop
ret
rol
aad
loop
lret
leave
jecxz
jecxz
ljmp
int
aaa
jmp
div
sbb
jmp
sbb
in
in
shl
shr
lock
lret
leave
shlb
fidivl
sar
sarl
fcomp
fcmove
stc
mov
xchg
xchg
jmp
ret
xor
call
fcmovne
cmp
into
repz
div
loope
jmp
movl
int3
loop
call
dec
fidivrs
into
jecxz
out
addl
shr
shl
aad
iret
int3
xor
cmc
idivb
cmp
repz
fadd
enter
in
fmulp
mov
aaa
call
fadd
jmp
loop
sar
ret
stc
test
fcmove
leave
std
jmp
loop
mov
cs
repz
sti
int3
iret
in
sarl
aas
ret
clc
call
loopne
hlt
in
into
call
cmp
cld
repz
aas
cmp
cld
leave
loop
popl
aad
lock
int3
aad
iret
out
cmp
push
fxch
std
cmp
fdiv
xchg
hlt
test
repz
cmp
ret
fsubp
add
and
std
int3
lret
jecxz
jmp
divb
in
out
sti
jecxz
cmpb
incb
loope
clc
adc
jecxz
xchg
out
clc
call
repz
int3
sar
out
aad
testl
or
xor
lret
fmul
lret
repnz
into
shl
mov
addb
xchg
addl
sti
repz
cmp
fstpt
in
hlt
jecxz
test
out
xchg
in
in
iret
lock
cmp
iret
in
out
fildl
std
leave
ret
ret
jecxz
loope
xchg
ror
xchg
xlat
icebp
xlat
in
xlat
cmp
int
lret
and
jmp
jecxz
sbb
xor
xor
int
cmc
int
fnstsw
out
leave
test
cld
enter
int3
mov
sub
rcl
fidivrl
enter
jmp
int
loopne
fcmovu
mov
clc
enter
iret
xchg
jmp
repnz
fidivrl
ds
repz
jmp
int3
ljmp
jmp
aad
in
repz
xor
into
sti
into
xlat
cmp
cli
stc
loopne
mov
ret
std
xlat
fucomip
jecxz
lock
iret
std
aas
jmp
iret
cmc
iret
jmp
lock
in
idiv
ret
mov
sti
fcmovu
and
int3
lock
repz
enter
addl
loop
loopne
out
faddl
in
stc
jmp
xor
cmp
fsincos
roll
ffreep
ds
std
ljmp
xor
fcom
jmp
cmp
rol
rcl
repz
cmp
ret
out
fdivp
jmp
idivl
xlat
xor
repnz
repz
iret
cld
sti
ret
repz
in
in
sbb
fisttpll
aam
lock
int
leave
rcl
int
ds
loope
cmp
fiaddl
rorb
sar
in
icebp
cli
fnstcw
in
shl
sti
test
rol
lock
rcr
ret
test
mov
xchg
int
iret
out
xor
shr
int
in
fcmovnbe
cld
sbb
in
aad
dec
fimull
hlt
fmulp
out
ret
in
cmp
leave
repz
add
hlt
repnz
fstp
xchg
clc
int3
xchg
mov
repz
enter
dec
out
jmp
ror
fdivrs
or
fucomi
mov
xor
cmp
leave
shr
fdivr
jmp
test
test
popl
jmp
xor
repnz
icebp
lret
rol
ffree
std
cli
cmp
xor
ret
jmp
test
out
loop
int3
sub
xor
xor
cld
xor
movzwl
jmp
ret
aas
ret
aad
aad
mov
mov
push
jle
movsl
add
shl
in
test
sub
loopne
test
lret
enter
cmp
cmp
aam
jecxz
out
mov
fildl
shll
lret
cmc
xor
xor
iret
rcr
in
cld
fistpll
hlt
mov
mov
icebp
xor
iret
into
aam
clc
xor
idiv
add
cmpb
lock
jecxz
jmp
into
mov
lret
iret
iret
repnz
icebp
test
fcmovu
fdivr
lret
int3
sti
xchg
mov
in
int3
neg
loopne
rcr
rcr
test
rolb
leave
sti
int
in
mul
lds
xlat
cmp
int3
into
into
and
out
not
std
cmp
vpandn
xchg
or
int3
in
out
cmp
aas
cmp
fstp
rolb
test
jecxz
ljmp
iret
ss
out
in
cmp
ret
into
vshufps
ljmp
out
in
out
subb
clc
xor
cmp
fcmovnb
hlt
mov
out
cli
int3
loop
enter
aam
add
into
mul
enter
out
repnz
repnz
leave
int3
lea
sti
out
out
in
xlat
call
ljmp
iret
mov
mov
mov
std
std
jecxz
fsub
stc
clc
fcmovne
enter
clc
jmp
ret
enter
in
cli
out
cli
jmp
xchg
xor
fdivs
int
incl
ds
hlt
in
out
into
in
lock
into
iret
das
xlat
sar
repz
cli
sarl
aam
in
fisttpll
in
lret
enter
idiv
aad
iret
xlat
fsubr
lock
loop
ret
test
in
dec
cs
fnstenv
filds
addl
repnz
out
loopne
divb
int3
fcmovne
loopne
cmc
int3
out
in
shl
xchg
decb
add
icebp
sti
icebp
lock
cmp
lock
lret
mov
cmc
div
sub
jecxz
cmp
cmc
cmp
hlt
int3
loop
fadd
lds
into
out
out
jmp
xor
clc
in
repnz
in
shl
out
loop
fisttps
in
out
repnz
shll
fprem
in
cmp
sti
fcom
ljmp
loope
mov
fsubrp
mov
in
leave
mov
out
xor
xor
cmp
loope
shl
test
fiaddl
loopne
call
fdiv
cmp
xor
hlt
cmp
cli
cmp
hlt
cld
ds
lock
fcomip
sbb
leave
mov
mov
out
loope
mov
in
cli
out
loop
not
ds
fcomi
decb
in
xchg
shl
enter
iret
ss
fistpll
aam
xor
enter
test
or
and
icebp
das
out
cld
sti
xor
fdiv
test
ds
sti
mov
mov
mov
out
out
fdiv
test
fcomi
fucomip
shr
fildl
cld
in
loope
xchg
in
mov
xor
divl
xlat
iret
ret
std
shl
fcomi
lret
mov
in
cld
test
test
lds
xor
icebp
stc
repz
lock
sti
fcmovnb
loop
rorl
icebp
cmp
lock
jmp
in
fstp
ds
ret
fdivp
lret
add
jmp
test
out
in
cld
into
out
idiv
stc
cmp
iret
xchg
in
fdivr
filds
icebp
mov
xchg
repnz
cmp
call
ds
jecxz
rorl
loop
jmp
int3
leave
call
shll
in
out
fcmove
loope
xlat
inc
cli
jmp
lret
lock
rorb
leave
cld
fidivl
rcl
cli
fadd
mov
in
in
call
ljmp
ss
shr
out
cld
xchg
sub
std
xchg
fucomip
aad
xor
clc
vpsubd
cld
int3
cmc
cmp
in
cmp
jecxz
hlt
call
test
fcmovbe
int
in
icebp
fcom
in
out
cmp
lock
int
repnz
testl
mov
rcr
fcmovnu
mov
jno
and
movsl
add
sti
call
in
ret
jecxz
leave
in
cmc
cmp
imul
xor
cmp
leave
loope
fdivr
stc
fcoms
in
in
int
xor
vaddsubps
rcr
lret
shl
repnz
xchg
out
sti
in
icebp
in
int
xor
jmp
ss
cmp
aad
sar
out
cld
xlat
clc
shl
out
xchg
repz
clc
sti
fdivr
std
xlat
jmp
rol
repnz
cli
lret
lret
mov
int3
jecxz
mov
sub
cld
cmp
out
iret
xlat
icebp
cmp
std
jecxz
aas
leave
iret
mov
lret
loopne
fstl
sti
sarl
loopne
int
fsincos
loopne
testl
out
in
cmc
in
test
lock
iret
sti
cmp
loopne
repnz
cmp
xlat
lret
into
xchg
leave
int
idiv
cmp
fcmovu
shl
aam
out
xlat
std
mov
fdivrp
jmp
jmp
enter
jmp
lret
xor
stc
ret
shr
loope
jmp
nop
in
xchg
xchg
in
aas
shr
cmp
fucomi
int
repnz
std
test
enter
mov
jecxz
aam
xlat
stc
cld
int
ss
jmp
idiv
faddp
rol
mov
out
xor
repnz
jmp
idiv
fstp
fsubp
idivb
fcmovnb
int3
mov
shl
aam
out
in
fdivr
into
loopne
cmp
cmc
shl
mov
lret
ljmp
iret
orl
enter
out
aas
flds
sti
xchg
mov
fucomi
out
rorl
in
aaa
fmul
lock
in
jmp
shl
testl
repz
aaa
xor
aam
xor
fcmovu
shl
cmp
loop
stc
aad
inc
aad
int3
ret
repnz
lock
repz
leave
ror
fdivp
stc
int3
sarl
inc
in
jmp
dec
sti
int
shl
mov
mov
lret
repz
rcr
int3
fcmovnu
cld
cmp
idivb
adc
idiv
sti
mov
repz
xor
xor
int
cmc
lret
hlt
fidivrl
fsqrt
out
fcmovu
cld
cli
enter
lret
fucomip
jmp
leave
int
repnz
loopne
adc
rcr
movl
out
aad
aaa
leave
cld
lret
hlt
cmc
lret
icebp
clc
clc
loopne
fdivrp
shl
mov
in
dec
in
in
loop
mul
aad
shrb
int3
repz
fcmove
ror
out
loop
cmp
faddl
xchg
and
ror
in
aaa
out
and
xlat
ret
hlt
ret
fcmovbe
aam
jmp
call
rol
leave
int
xor
out
lret
cmp
xlat
hlt
fadd
call
lret
fdivrp
loope
xchg
repz
xor
ss
sar
in
repnz
xchg
test
jmp
leave
out
int3
ror
shl
cmp
in
out
out
loope,pt
std
shl
loop
std
ret
test
cli
incl
shl
cmp
cmp
and
rcr
testl
hlt
test
xor
stc
xor
cmp
cmp
rcr
jmp
cmp
and
cli
fisttpll
icebp
enter
lea
ror
stc
aaa
fiadds
fdivr
jmp
loopne
xchg
call
aad
jmp
in
shl
shl
sti
shl
repnz
xchg
mov
imul
stc
xchg
jmp
test
jmp
lock
jecxz
iret
cmp
fucomip
not
sub
in
xlat
aad
or
repnz
xor
ss
cmp
and
fadd
sti
jmp
in
mov
mov
rcll
neg
aad
in
hlt
aas
fdivrl
loope
test
aas
xchg
out
cli
cli
in
fucomp
ljmp
in
iret
cmp
ds
fdivrp
ret
roll
or
loope
mov
in
into
iret
cmc
cmp
sarl
aad
shl
xor
stc
xchg
nop
int
nop
int3
ret
xor
xor
test
enter
sar
loope
cmp
out
jmp
repnz
ror
xor
int3
fxch
sar
fcmovnu
hlt
icebp
aad
addl
mov
or
mov
aad
leave
aad
fcmovnu
sub
or
movsl
add
nop
into
ss
leave
ljmp
cmp
fcmovbe
mov
fucom
xchg
std
xchg
shl
lret
out
rcr
fnstenv
sti
fincstp
jecxz
shl
mov
leave
jecxz
lea
in
das
sarb
vpmullw
ljmp
ret
xchg
cld
ljmp
jmp
lret
out
hlt
cld
std
cmp
fstpt
lock
rcl
ret
out
neg
lds
loope
ror
lock
xor
repnz
aad
cmp
in
cmp
repnz
jecxz
repz
fiadds
or
shl
vpsubsb
cmp
clc
int
dec
sbb
xchg
shl
out
dec
imul
int
lret
enter
lret
aaa
ljmp
leave
lret
fsubrp
test
test
repz
int3
jecxz
lret
idiv
in
clc
int3
fdivp
sti
sbb
mov
rcr
cld
lock
int3
icebp
cmp
fdiv
enter
out
fiadds
in
ret
loope
add
fmull
xchg
int
int3
fdivp
into
int3
int
fadds
int
loop
test
rcl
xor
xor
sarb
cmp
push
xlat
sti
ss
test
ret
mov
test
fcmovbe
fimull
in
ljmp
icebp
cmp
rcl
repnz
fadd
mov
std
lock
icebp
shr
lret
ret
jmp
out
cld
test
aad
xlat
test
idiv
int
fdiv
mov
sub
rcr
xor
call
shl
loopne
mov
ret
out
loope
in
shlb
out
ljmp
fcmovnu
xlat
shl
sti
std
shl
lret
jmp
out
xchg
cmc
clc
clc
cmc
xor
repz
int
test
and
icebp
out
int3
adc
jmp
in
repz
ds
std
sti
neg
cmp
sar
fsubr
cli
xlat
iret
lock
loope
xchg
xchg
test
hlt
hlt
shr
sar
cmp
aas
roll
fcmovnu
push
fsubrp
movl
int
das
cmp
fcomp
addb
sar
neg
in
dec
mov
in
xchg
jmp
cmp
lock
stc
cmp
faddp
fiaddl
fildl
in
cld
leave
stc
xor
cld
xlat
fdivp
call
shl
test
fadd
mov
fsubr
fimuls
int
fscale
neg
aas
loop
ret
fadds
orb
not
iret
cmp
fnstenv
rol
jecxz
into
repnz
sti
call
ljmp
cmp
fcom
xor
repnz
ror
into
fcmovnb
cli
rol
loopne
fst
test
in
fdivs
xor
out
aad
idivl
shr
icebp
ds
aas
xchg
cli
repnz
ret
mov
xchg
mov
repz
lret
cli
fucomi
repz
lock
leave
std
jecxz
cmp
int
call
out
stc
jecxz
leave
fcomp
out
sti
fcmovnbe
adc
icebp
rolb
lds
in
xchg
call
fsub
lret
and
add
frstpm(287
lock
xchg
ljmp
jmp
call
div
fildl
jecxz
in
addl
xor
ss
div
div
repnz
out
in
ds
call
in
xchg
test
mov
not
cmp
leave
aam
fyl2x
sarb
loop
fucom
mov
fisttpll
jmp
int
in
cmp
test
repz
loopne
cmp
lret
call
rorb
cmp
int
rcr
out
test
clc
movb
out
orb
cmp
aad
ds
int
cmp
in
test
fucomp
fndisi(8087
in
out
nop
xchg
in
nop
int3
enter
clc
in
hlt
int
lock
in
lds
out
lret
enter
jmp
mov
divb
cmc
sar
cld
hlt
faddl
push
div
and
cmp
fdivr
in
orl
loopne
or
not
cli
loope
faddl
sti
repz
into
out
div
xor
rorb
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fisttpl
sub
jle
add
cmp
fcom
rcr
cld
xlat
loopne
addl
fldln2
std
xchg
loope
ljmp
into
sti
out
fcomip
sti
rcr
shl
idiv
test
loopne
aam
fsub
lret
sti
addb
ss
cli
cmp
test
xchg
mov
mov
loop
in
in
sbb
xor
shr
aad
neg
cmp
jecxz
mul
rol
in
repz
mov
lret
ljmp
xor
ss
hlt
iret
testb
xchg
jmp
sub
into
mov
xchg
repnz
int
in
loope
fcmovu
loop
in
call
fcmove
lock
fcomp
mul
in
leave
ss
hlt
xlat
stc
call
into
call
lret
int
fdivs
xor
rcl
cmp
sti
fucomi
repz
xchg
aam
fmul
in
jmp
in
lock
fcmovne
fdiv
shll
stc
repnz
incl
test
xchg
ftst
jecxz
into
enter
rolb
fmull
xchg
ljmp
ljmp
faddp
fyl2x
fxch
cli
fld
shl
in
nop
fmuls
xchg
clc
xor
rcr
into
std
repz
cmp
test
mul
mov
shl
ret
shl
out
shr
icebp
neg
clc
ret
call
in
fcmovnu
out
lock
out
loopne
iret
int3
jecxz
xor
rcl
aad
loopne
into
fnstsw
in
add
cli
incl
cmc
fnstenv
lret
out
out
fldl2t
repz
test
hlt
in
in
test
into
test
lret
loop
aaa
xor
iret
faddl
add
test
ror
not
jmp
ljmp
fcos
sti
test
xchg
dec
mov
or
bnd
icebp
hlt
loope
shl
cmp
sti
hlt
loop
enter
repnz
int3
mov
shr
xor
das
cmp
cmp
int
and
hlt
jecxz
stc
test
in
adc
mov
xchg
test
in
in
out
sar
fiaddl
in
mov
fmul
fcoml
das
fdivs
vshufps
cmp
test
xlat
stc
call
jmp
in
fstl
cmp
iret
fdivr
out
cmp
sarl
in
test
decb
div
loopne
stc
in
jmp
loopne
cmp
into
ss
add
fsubp
fdivr
dec
cld
fmul
jmp
fimuls
mov
int
int3
std
cmp
repnz
cmp
fcomp
and
jmp
out
into
shl
in
in
repnz
push
cmc
rcr
repnz
enter
or
shr
xchg
ror
bnd
int
iret
int3
fidivrl
cld
out
test
fld1
in
hlt
xchg
aas
hlt
mul
in
into
enter
lret
rcl
rol
lret
ljmp
jmp
mov
xor
fcmovb
hlt
in
repz
std
xlat
fdiv
adc
test
in
adcl
cmp
iret
fxch
neg
lret
out
loope
icebp
ffree
faddl
lock
sub
aaa
rol
enter
jmp
in
in
jmp
mov
fisttpl
lret
enter
call
sarb
jecxz,pt
fmull
xchg
loope
xchg
rcr
lock
divl
aas
rcl
ds
rol
cmp
cld
leave
fists
out
in
neg
shr
fcmovbe
loopne
and
jecxz
sbb
imul
mov
xchg
in
stc
divl
out
lret
aam
lock
stc
aad
cmc
jmp
out
fucomip
mov
ljmp
lock
cmp
xor
aam
mov
mov
xchg
xchg
mov
imulb
loop
aas
fdivrl
out
xlat
mov
leave
test
aas
shr
enter
fidivs
cmp
sti
sti
rcr
loope
and
out
int3
cli
repnz
mov
rol
jmp
out
hlt
cmp
shl
fmuls
test
and
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
sar
frstor
xor
movsl
add
fdivp
std
cld
adc
cli
jmp
test
out
into
das
call
cmc
fcmovnu
aad
repz
xor
mov
fsub
test
nop
mul
ljmp
into
ror
fcmovnb
loop
cli
in
mov
std
filds
mov
ror
leave
shr
cmp
int3
lock
lret
lock
ret
aam
clc
out
testb
mov
repnz
cmp
repz
cmp
lock
loopne
loope
hlt
loope
test
mov
sub
cmp
cmp
xor
cli
vshufps
popl
mov
out
in
out
aam
out
shr
lock
ds
ds
in
adcb
out
shll
div
fcmovbe
aas
hlt
test
rol
hlt
loop
mov
aas
call
test
iret
sub
cmp
ss
aam
rcl
addb
mov
jecxz
neg
dec
test
icebp
out
int
out
cld
enter
cmp
clc
loope
fsub
out
out
orl
sub
cld
out
cli
clc
rol
std
xchg
aam
add
mov
in
mov
loop
jmp
shl
fdivrp
xlat
cld
lds
mov
iret
test
cmc
in
neg
int
lock
loop
aam
jecxz
xchg
in
in
xchg
shr
shlb
cmp
lret
hlt
fcomi
repnz
addl
loopne
xchg
addl
cmp
fcomp
int3
in
stc
fnstcw
icebp
faddl
mov
xchg
out
int
xor
stc
sub
enter
cmp
fdiv
sti
stc
call
jecxz
xchg
lock
repnz
test
into
fdivp
rol
xchg
cmp
in
fsub
int3
jecxz
rolb
xor
cmp
ljmp
fcomp
ret
ljmp
into
incl
ror
jmp
sar
int
fadd
loope
call
decl
xchg
icebp
loope
fxtract
sti
xor
lret
in
cmp
lock
call
loope
xchg
xchg
loop
out
ss
fnstenv
in
cmp
xor
sti
aad
sti
stc
sar
leave
rorl
std
loope
sub
not
jmp
repnz
stc
stc
jmp
clc
lea
xchg
aaa
jmp
cmp
sti
in
inc
fcmovnu
aas
cli
loopne
cmp
std
in
in
rcr
out
lret
fmul
imul
cmp
int
idiv
ror
test
mov
sbb
lock
repnz
lret
in
idiv
cmp
cld
cmc
shl
aad
out
xor
enter
std
xchg
std
jmp
int
lret
out
cmp
xor
repz
stc
orb
rolb
ljmp
in
shr
sar
loopne
aam
jmp
sti
out
lock
enter
iret
ljmp
loope,pt
clc
cmp
out
stc
cld
ret
sub
mov
xor
repz
xor
out
ds
out
test
jecxz
inc
fldl
xchg
mov
aam
iret
cmp
xor
into
ss
aam
out
ret
aad
loope
sti
mov
addb
std
sti
ds
lret
shl
iret
ds
fsubr
call
fstp
in
fdiv
addl
cmp
shr
out
sarb
ret
into
xlat
loop
movl
decb
divl
stc
cmc
loope
shl
hlt
testl
in
repz
fdiv
repnz
in
divb
out
std
shl
repnz
in
lock
fcmovne
hlt
out
fsin
sti
test
aaa
loop
sti
int
cmp
int3
int3
cmpb
xor
ret
in
mul
lock
in
in
cmp
out
roll
sbb
fucomp
out
mov
sbb
xchg
out
in
cmc
in
iret
lret
cmp
fdivr
aad
test
std
add
lret
lret
in
aad
in
aam
int3
lret
fxch
out
in
aaa
lock
fld
xlat
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
outsl
push
mov
jle
add
leave
fisttps
fucomip
fucom
enter
ret
aam
out
sar
in
jecxz
ret
out
aad
ljmp
iret
out
xor
rcl
sarb
fmulp
add
aam
hlt
clc
addl
cmp
xchg
aam
int
not
cmp
shr
fnop
fucom
clc
fyl2xp1
int3
fcmovnu
fcmovu
test
shr
std
hlt
in
shlb
in
mul
fcmove
sbb
addl
testl
xchg
ljmp
aad
fdiv
loopne
xchg
ret
rcr
call
int3
loop
repnz
jecxz
lret
divb
repnz
stc
cmp
idiv
fcmovnu
fcmovnb
test
incb
out
sub
test
repz
cmc
stc
stc
dec
rol
repz
loop
imul
testl
loope
aam
idivb
jmp
sti
cmp
cmp
shl
sti
repnz
clc
fimull
iret
std
xchg
shr
out
fsub
xor
testb
cmp
and
cld
in
mov
ss
jmp
shr
fadds
sti
out
cmpb
stc
fxch
fdivrp
mov
mov
jmp
fcmovb
fdivrs
faddp
loope
repz
out
loop
leave
fucomp
orl
fidivrs
imul
cmp
repnz
push
ljmp
nop
jmp
aam
aam
shl
aad
xor
ljmp
cmp
and
shr
out
div
ror
iret
sar
stc
fdiv
fdiv
fsub
fimuls
xchg
cmp
xor
ljmp
fadds
stc
fcom
xchg
repnz
das
shrl
lret
aam
out
shl
bnd
cli
std
xor
xlat
mov
ror
xor
stc
shl
loope
cmp
hlt
rcl
in
inc
cli
fsub
nop
nop
out
mov
rol
fcmovne
xlat
inc
flds
filds
ljmp
xor
into
xor
std
cmp
sarb
incb
hlt
jecxz
sub
out
cmp
out
repnz
shl
ss
cmc
in
lds
lock
xchg
out
fucomi
nop
int3
enter
ret
stc
call
icebp
stc
fistpll
cmc
mov
fsub
mov
std
into
hlt
jmp
jecxz
rol
xor
cld
xor
in
cmp
sar
sar
mov
xchg
std
int
out
iret
into
ss
cld
hlt
call
out
repz
ds
cld
loop
sti
or
repz
into
and
out
idivb
rcr
fcomi
call
xlat
out
in
shl
loope
out
xor
in
xor
imul
stc
lret
shl
cld
cmc
ret
neg
xor
enter
shl
xlat
xor
sub
int3
sar
xlat
and
stc
loopne
mov
xchg
mov
icebp
cmc
jecxz
rcl
xor
cmp
repnz
int
fdiv
mul
mov
out
fisttps
xchg
jmp
xchg
ljmp
lret
fucomp
fnstsw
cli
in
cld
not
jmp
aas
add
int
out
das
div
xor
idiv
lret
aam
fdiv
in
aas
fdivp
not
xchg
jmp
adc
xchg
xor
iret
int
xor
cmp
in
cmp
test
out
movl
ror
cmp
repnz
rcr
jecxz
clc
sti
xlat
jmp
jmp
jecxz
iret
or
icebp
xchg
ljmp
fcomp
sti
cmp
cmp
fcomi
fsub
std
ljmp
lret
int
test
ret
jecxz
int
xlat
fidivrl
imul
stc
aas
xchg
jmp
mov
out
cmc
xor
das
jmp
test
fucomp
iret
jecxz
fildl
lret
loope
cmc
cmc
xchg
int
aad
aaa
enter
shl
cmp
lock
xchg
movb
std
cld
roll
sti
xlat
xor
rcl
loope
lock
sbb
aad
clc
jmp
jecxz
int
fyl2xp1
out
icebp
fadd
sti
xor
fimull
out
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
mov
jle
movsl
add
lret
mov
sub
hlt
call
lret
ss
cmp
aas
cmp
lret
jmp
shr
mov
xor
fidivrl
cmp
out
movl
repz
hlt
xchg
repnz
out
shl
rcr
fcmovnbe
loopne
ret
in
sti
out
fcmove
in
fildl
in
lret
hlt
in
lret
test
cmp
roll
shr
loop
fiadds
loopne
aad
das
xor
aad
notrack
sar
repz
rcr
call
clc
int3
xchg
in
int
in
in
repnz
fdivl
cmp
hlt
rol
hlt
aad
idiv
cli
jmp
xchg
cmc
out
rcl
cmc
out
iret
sti
icebp
add
out
ret
aad
aas
mov
xchg
out
addb
iret
lock
lds
iret
xor
test
sbb
or
int3
in
xchg
fildl
clc
fmul
fsubr
cmp
iret
repz
aas
cmp
call
jmp
into
lret
int3
in
xchg
shlb
xor
aad
sti
shl
repz
test
xlat
orb
xchg
std
mov
xor
not
std
xor
clc
sti
xor
fcmove
fcomp
call
mov
mov
sub
rol
cmp
rcl
fstpt
clc
mul
jmp
in
lret
xor
loope
in
in
call
repz
lds
loop
lret
loop
adcb
in
cmp
ljmp
cmp
fld
stc
test
ljmp
pop
jmp
loopne
fcmovnu
fcmovu
fcomi
loop
test
xlat
fsub
icebp
out
into
lock
aaa
int3
jmp
shlb
jmp
cld
in
int3
fcom
loop
hlt
idivb
cmp
fmulp
jecxz
xchg
mov
fucomi
hlt
loop
jecxz
neg
leave
leave
out
ror
test
xlat
xor
orb
shl
loope
out
xlat
xor
std
jmp
cld
fdiv
xlat
cmp
faddl
leave
cmp
rorb
jmp
cmc
cmp
xor
int3
loopne
ret
test
mul
in
mov
popl
in
shl
iret
cmp
cmp
cli
xchg
not
aam
clc
in
addb
icebp
loop
das
int
in
ss
out
int3
loop
icebp
loopne
rcr
stc
test
add
leave
loop
loope
aad
icebp
aaa
repz
cld
std
in
cmp
test
lret
test
sbb
rcl
movb
iret
leave
xlat
in
cmp
fdivrs
aam
lret
cld
iret
ljmp
ret
xor
in
ds
cmp
std
fdivrs
fdivr
in
fst
ds
cli
lea
cmc
lret
sar
into
aaa
iret
sar
cmp
cli
addl
in
fldpi
int
xchg
out
repnz
std
rcl
fdiv
aad
loopne
orl
fsubrp
jmp
jmp
jmp
cmpl
rcr
clc
fiaddl
xchg
sti
mov
aaa
loop
test
fstp
xlat
std
int
aas
cmc
ds
cli
aas
loopne
int3
mov
int
hlt
out
ds
faddp
out
cmp
fisttpll
incl
repnz
aam
cmc
cmp
int3
ss
cmp
sar
rorl
cli
adcb
fidivrl
cmp
aam
lret
leave
iret
cmp
sar
shl
in
or
out
call
xor
in
cli
call
cli
fdiv
out
cli
flds
mov
shlb
fcmovne
adc
repz
test
into
mov
ror
cmp
in
stc
iret
xor
shr
rol
fcom
clc
fimull
call
mul
repz
fmul
fidivrs
in
cmp
cmp
mov
fistl
shr
call
ds
cli
jecxz
lock
ds
cld
mov
clc
out
xor
out
xlat
int
lret
xor
cli
out
aam
in
sti
rcr
hlt
enter
fdivr
fsubp
int
leave
movl
add
fstp
je
xchg
or
and
jle
movsl
add
int3
in
fdivl
cmp
hlt
aas
xlat
repz
jmp
aas
out
in
leave
sbb
iret
mov
repz
out
div
shl
sti
enter
sar
lret
sar
test
fldl
icebp
rolb
cmp
xor
xor
loopne,pt
loope
ret
test
in
lret
leave
lret
filds
repz
ds
shl
aad
cmp
loopne
cld
aam
loopne
test
into
ljmp
enter
stc
int
jmp
testl
testl
shl
out
cmp
int
cmp
ret
cld
test
in
decb
ljmp
sti
fcmovb
div
repz
icebp
in
jecxz
mul
leave
lret
in
rorb
jecxz
icebp
cmp
shl
call
out
rol
cld
enter
test
clc
fsub
mov
int3
xchg
aad
das
in
int3
xor
int
fcmovnu
iret
fdecstp
loop
leave
jmp
out
std
cmp
cmp
clc
iret
ss
rcl
int
faddl
shr
aam
aas
jmp
std
stc
out
loope
hlt
xor
rcr
xor
iret
xlat
idiv
icebp
clc
fmul
cmc
lock
xchg
lret
fstp
out
in
loope
idiv
hlt
iret
ds
hlt
cmc
rolb
loopne
out
enter
in
out
repz
xor
ret
int3
cmp
leave
loop
idivb
flds
fisttpl
rclb
rcl
das
sti
hlt
clc
fidivrs
lret
out
shl
out
fistpll
fimuls
nop
xchg
mov
sub
out
fstpt
loope
sarb
test
out
enter
lret
jecxz
lock
mov
int3
out
repz
stc
cmp
iret
cmp
sti
loope
hlt
mov
lret
cld
test
int3
sarl
repz
int
cmp
loop
loop
out
rol
enter
in
leave
loopne
out
iret
loope
test
ss
fidivrl
cs
sti
rcl
rol
sar
aad
repz
aad
call
repnz
in
in
out
fidivrl
out
out
iret
clc
xor
ret
jecxz
in
sar
in
jecxz
out
ror
icebp
cld
into
fiaddl
std
loope
cmp
out
lea
out
out
aad
ss
repz
call
in
ret
test
stc
std
cld
in
mov
int3
rcr
out
shlb
not
ror
fidivrs
enter
cmp
lock
fmul
loop
cmp
aas
call
rcl
aad
aad
repnz
fucom
stc
fcmovnb
std
stc
xchg
enter
shl
mov
jmp
aam
rolb
mov
mov
leave
loopne
rcll
ret
fsubr
aaa
sti
shlb
or
ret
aas
test
in
lret
in
in
incl
jmp
ret
ljmp
rcr
mov
call
jmp
loopne
iret
in
das
repnz
int
call
ror
out
shl
jecxz
ret
test
in
fneni(8087
lock
sub
xor
fsubr
imul
aas
aas
fsubr
mul
fneni(8087
neg
test
xchg
in
loop
int
int3
lret
repz
fucomi
fucomi
lret
stc
out
out
mov
fimuls
jmp
aam
aam
aaa
in
jmp
not
lock
into
rol
cmp
leave
or
lea
in
xor
fcmove
cmc
cmp
icebp
cmp
iret
stc
fld
in
mov
into
in
in
call
int
lret
repz
shl
fcmovnu
loop
aad
fdiv
jmp
enter
xchg
cs
out
lret
icebp
incl
out
ret
lret
lock
iret
sti
into
xchg
out
jmp
loop
cli
neg
repnz
aam
cmp
xchg
xchg
aam
jmp
xchg
xchg
jmp
test
jmp
std
out
ds
iret
rcr
cld
jmp
xchg
jmp
test
out
fisttpl
sub
jecxz
out
enter
aaa
sarl
fadds
fld
fsubr
fmul
mov
xor
call
jmp
cmp
jecxz
out
loop
jmp
std
nop
fsubr
into
in
pushl
loopne
int3
ljmp
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
mov
ret
jle
movsl
add
lret
lock
testl
call
iret
iret
xor
enter
cmp
xchg
fcmovnbe
clc
in
enter
std
repnz
lock
sub
lret
ss
fmul
aam
lock
bnd
test
lret
cld
fucomp
xchg
mov
out
repz
xlat
out
in
ss
fiadds
rcr
movl
and
rcl
hlt
clc
div
aas
rcl
std
not
ffreep
aas
cmp
fadds
hlt
enter
clc
repz
stc
icebp
std
idiv
ret
into
fadd
aad
call
xchg
sub
rcr
rcl
aad
shr
cmp
fdivr
sti
cmc
aad
mov
xchg
out
mov
cs
in
icebp
xor
ljmp
out
shl
loop
loop
in
addb
jmp
cs
clc
int
ljmp
in
fdivr
loope
test
test
xor
imul
repnz
stc
sbb
fstpt
fistpll
clc
jmp
in
jecxz
mov
cmp
leave
out
loopne
hlt
jecxz
loope
hlt
in
ror
loope
in
lock
call
out
shl
jmp
cmp
div
enter
cmp
out
call
jecxz
leave
in
lock
ljmp
out
call
loopne
clc
repz
fucomp
jecxz
xchg
in
lock
imull
idiv
int3
cmc
out
in
shl
stc
out
jmp
sbb
in
repnz
lock
hlt
rol
cmp
clc
shl
jecxz
cmc
loopne
xchg
in
rol
loop
shl
xor
cli
lret
rcl
loopne
cld
aas
out
rorl
out
jecxz
shr
lret
loop
cmp
rcl
cmp
in
mov
in
nop
fstp
shl
xchg
leave
xor
lret
out
hlt
rcr
cld
shr
cmp
xlat
mov
fdivr
mov
xchg
fisttpll
clc
ret
leave
xor
int
sar
fcmovbe
cmp
test
sarl
xchg
out
ret
loop
out
rcl
out
loop
div
fnstcw
fsubrp
aam
filds
std
in
testl
cmc
in
in
in
aad
ror
jmp
aam
out
aad
incb
decl
out
test
shl
rcl
out
ss
in
in
les
aad
aad
call
fcmovnu
fdivrp
aas
shr
in
shl
ss
repz
loopne
loop
aam
in
cld
testl
into
aad
repnz
ljmp
shl
sbb
testb
cmp
mov
fistpll
stc
adc
in
std
clc
cmp
xchg
les
int3
repz
out
repz
cmp
test
sti
stc
cld
test
lret
xchg
loopne
xor
iret
call
xlat
xor
aam
loop
aas
mov
xlat
enter
mov
repnz
cmp
fstp
repnz
std
repnz
loop
into
in
xchg
call
ljmp
cmpl
jecxz
jecxz
fldl
ljmp
ss
out
stc
aaa
xor
loopne
repnz
out
jecxz
xlat
sti
in
shr
xchg
out
out
stc
lret
fcmovne
lock
aas
aam
idivl
loope
mov
jmp
fisttpl
ss
call
repz
out
sbb
repnz
leave
ret
mov
mov
jecxz
icebp
icebp
cmp
xor
lret
aas
fadd
cmp
out
repz
fdiv
sti
ljmp
jecxz
aam
cli
aam
lret
jmp
xlat
ror
out
xor
loope
repz
xchg
sub
aam
ss
in
call
push
aaa
ffree
out
loopne
lret
loopne
loope
jmp
div
aaa
cmp
fistpll
ljmp
loop
out
out
xchg
ljmp
out
rol
aam
jmp
fnstcw
sar
ret
out
cli
out
cmp
into
into
rclb
int
hlt
aaa
ss
lret
xor
lock
in
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
push
dec
push
out
enter
add
loope
and
ret
lret
call
in
xchg
icebp
loop
in
aad
fcmovne
out
aad
icebp
neg
in
fucom
cmp
hlt
cmp
xchg
jmp
shl
repz
out
lret
cmp
out
fst
addl
xchg
loopne
out
mov
xchg
hlt
shll
cmp
sar
loop
cld
cmc
cmp
xchg
out
fst
nop
hlt
icebp
sarl
jecxz
out
out
clc
or
in
fadd
sti
decb
lret
cld
in
std
into
repz
call
cld
cmp
cmp
int
shl
aaa
aas
loope
fisttps
mov
int3
std
xor
jecxz
cmc
cmp
cld
fnsave
vmovq
int3
aas
fucomp
xchg
xchg
int
xchg
repnz
call
fcom
leave
std
fdiv
cld
aam
mov
in
mov
popl
repz
cmp
in
div
xor
loop
cld
dec
in
loopne
loope
call
cli
xor
aaa
cmp
cmp
xchg
fxch
mov
xchg
rcl
stc
into
jmp
cmp
and
loopne
leave
enter
in
sbb
shr
int
int3
f2xm1
out
iret
rcl
aas
dec
mov
xlat
in
out
and
mov
out
jecxz
sti
rcl
rcr
int3
div
in
cmp
out
clc
loope
jmp
iret
fucom
ret
out
out
fnsave
cld
jmp
add
fucom
sar
cld
test
sti
test
mov
icebp
into
cmp
ss
cmc
in
fdivrl
std
cmp
loope
cld
ret
rorl
test
lds
cli
in
cmp
sar
cmp
rcl
ds
rol
mov
in
xlat
flds
xchg
mov
leave
xor
ret
in
in
lret
stc
jecxz
ret
repz
hlt
sti
addl
xchg
into
in
cs
iret
cmp
enter
int
jmp
ret
loop
mov
incb
clc
jmp
repnz
xlat
cmp
cmpl
cmc
inc
in
ret
mov
fsub
fdivp
lret
jmp
in
out
cmp
cld
icebp
ss
jecxz
ffreep
xor
xchg
movl
out
iret
int
int3
repnz
testl
mov
aam
call
repz
aad
fcom
cmp
xlat
repz
aam
fiadds
xchg
xchg
xchg
ror
cmc
cli
ret
cmp
in
aam
repz
loope
aad
aas
leave
ret
lea
mov
mov
cld
ror
ss
xlat
repz
enter
fst
int3
lock
fldl
jmp
out
leave
repz
loopne
icebp
xchg
fcmovu
sti
mov
nop
test
aaa
ror
in
cld
aas
xlat
cld
out
stc
loopne
std
rolb
xchg
repz
shr
xor
xor
xor
rcr
aaa
cmp
fstpt
rcl
clc
call
int3
jmp
icebp
and
stc
aam
lret
cmp
xor
push
fucom
cld
fcmovb
out
xchg
shr
aas
cmc
int3
cmp
xor
into
xor
mov
jecxz
xchg
stc
jmp
ljmp
icebp
lret
jmp
cmp
cmp
jecxz
rcl
rcr
out
ror
aad
fsin
jmp
mov
lret
stc
ret
clc
lret
sarl
out
loope
testb
out
nop
test
hlt
int3
out
xchg
lock
ret
mul
cmp
cmpl
into
shr
cld
test
loopne
jmp
xchg
ljmp
lret
ret
out
test
addl
rcr
test
ss
sti
aaa
in
cmc
in
jecxz
loop
test
enter
test
hlt
xchg
xchg
shr
xor
rcr
fdivr
lock
fcomip
in
rol
imul
xlat
jmp
lock
fmul
fisttpll
xor
leave
not
sti
cli
int3
loop
hlt
out
mov
out
jmp
lret
ljmp
lret
sti
out
out
std
int
lock
lret
int3
popl
mov
ss
aad
lret
cmc
cmp
rcr
rcl
enter
xor
jmp
aam
mov
inc
xor
adc
add
fsubrp
in
int3
incl
divb
sti
icebp
fcmovne
rol
cmc
fidivrl
std
fcomi
sar
cmc
in
orl
aam
lock
lret
xor
rcr
int
cmp
fcomip
test
fsubr
fucomi
xchg
fists
fdiv
leave
repnz
sti
std
loop
std
jecxz
rcl
sub
rol
xchg
clc
leave
ret
leave
enter
shr
loopne
repnz
loop
fimull
hlt
shlb
cld
cmp
cmp
cmp
xchg
mov
fadd
xchg
fdiv
xchg
in
into
cld
fdivrl
cmc
ror
and
sub
mov
rclb
out
xor
std
in
call
neg
lret
loope
cmp
loop
mov
les
xor
loop
xlat
cli
repnz
stc
incb
rol
addb
sbb
in
out
out
dec
std
fdivrl
rcr
cmpl
mov
in
testb
xor
cmpb
shl
ret
rol
mov
lret
int
in
mov
loope
jecxz
out
cld
repz
cmp
sar
cli
faddp
out
movb
fucomi
call
out
stc
jmp
cmp
xlat
ds
aad
mov
out
out
sti
fdiv
in
div
icebp
jmp
loopne
cmc
cmp
aam
cli
fcmove
out
xchg
fucom
xchg
test
idiv
loop
iret
sar
stc
shl
sti
fcmovb
test
add
clc
int3
dec
repnz
xor
cmc
aaa
leave
aam
loop
sti
out
sti
mov
rolb
xor
enter
cmpb
repz
test
fcmovnu
and
loope
loope
xlat
jmp
std
aaa
fcmovu
cli
loope
rcr
call
out
filds
in
out
xor
ret
in
out
loope
cmp
fadd
push
hlt
repz
sbb
in
cld
lock
in
in
loope
repnz
out
rol
cmp
call
fucomi
out
mov
ljmp
fmul
loopne
in
xchg
orb
test
loop
into
icebp
call
aad
lret
clc
in
cmp
xlat
div
loope
loope
test
icebp
sub
aaa
int3
cld
das
cmp
rcl
test
hlt
into
loop
sbb
cmc
test
loopne
enter
dec
stc
int3
in
xabort
or
test
ret
mul
mov
std
enter
in
mov
out
stc
in
cmp
clc
fmul
ds
aaa
stc
stc
addl
fucomi
in
loopne
shlb
xor
fidivl
xor
repnz
jmp
in
icebp
sbb
clc
dec
fsubr
xchg
xchg
int3
leave
xor
stc
cmc
cmpl
out
lock
out
incl
ljmp
repnz
stc
fcmovu
neg
cli
out
addl
addl
into
call
lret
fxtract
cli
cmp
cmp
xor
xchg
jmp
in
in
jmp
mov
cs
aam
lret
int3
test
idiv
test
out
icebp
mov
rcl
xor
fdiv
cmp
in
sti
fsubp
hlt
cmp
xor
sti
idiv
fnsetpm(287
xchg
leave
cld
loopne
ljmp
int
cmp
in
or
test
jecxz
xlat
loop
in
fcmovne
in
in
in
jmp
lret
std
aad
sti
adc
loope
leave
out
sbb
mov
das
cli
ret
std
out
into
jmp
sti
ret
not
cli
fadds
std
jecxz
int3
lock
not
in
neg
call
sbb
faddp
sar
xchg
xchg
xchg
int
out
xor
stc
fdivr
lret
hlt
repz
rorl
fdivp
enter
jecxz
aaa
lock
int
std
cmp
into
loope
repnz
or
testl
in
cmc
rcl
leave
aaa
xor
ss
loop
and
stc
fisttps
fucomi
in
cld
xchg
lea
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
pop
mov
mov
add
jecxz
lret
xor
xlat
lret
repz
hlt
div
cmc
call
fsincos
in
leave
xchg
iret
rol
cmc
fidivl
repnz
faddl
hlt
xchg
orb
mov
xor
fcmovb
xlat
rcr
aad
cmp
icebp
stc
addl
mov
jmp
call
loop
sub
shl
dec
loope
fcmovnu
ret
stc
test
out
cmp
repnz
std
iret
rol
fldpi
aam
rcr
cld
rol
idivb
cli
in
fmul
cmp
jecxz
lock
jmp
cmp
repnz
test
aam
shl
mov
out
lret
fildl
cli
ljmp
stc
cld
cmp
addl
fsubrp
mov
jmp
fnstenv
jmp
fldl
xor
test
jecxz
mov
nop
fmull
in
int3
lock
std
fdiv
hlt
ds
and
out
in
out
jecxz
loop
sub
lret
int
cli
in
cmc
fcmove
testl
int
fsubp
mov
ror
repnz
aaa
clc
leave
xor
rolb
call
fsubp
leave
mov
in
in
out
out
jmp
loopne
out
out
ret
test
aam
cli
clc
ds
test
cld
mov
hlt
xchg
xchg
xor
cmp
cmp
aam
hlt
neg
loop
xchg
in
cld
fstp
mov
mov
sar
imul
enter
fadds
out
inc
mov
xchg
int
in
aam
sub
lock
aam
loop
test
out
ds
test
in
cmc
sti
loop
std
fimuls
xor
lret
iret
fmul
rolb
test
in
aad
fisttpl
decl
cld
int
fbstp
leave
stc
cmp
cmp
sub
and
ror
xchg
int3
fists
jmp
clc
aaa
xlat
cmp
clc
cli
out
faddl
aad
clc
in
in
fnstcw
cmp
cmc
lret
ds
std
in
cmc
clc
mul
out
sub
ror
ljmp
stc
push
repnz
cmp
aam
std
clc
out
mov
and
lret
mov
fld1
ret
jmp
rcr
jmp
stc
not
cmp
rcr
xchg
sbb
addb
aam
in
repnz
not
mul
addb
out
out
in
xchg
ljmp
mov
cmp
int3
jmp
fdivrp
idivl
shl
idiv
in
lret
mov
in
shl
ret
cmp
out
into
cmp
fcmovnu
repz
loope
fmulp
shr
test
jecxz
into
in
clc
fcmovbe
fidivrs
lock
add
std
roll
clc
mov
mov
loop
sub
cmc
iret
push
cmp
out
into
stc
lock
shr
and
in
enter
repnz
repz
cld
xor
fidivrl
dec
cmc
fdivrs
mov
nop
cli
shl
leave
in
into
xlat
into
cmp
ljmp
rol
aam
sub
out
rorb
xor
aad
in
in
fdivr
fcomi
cmp
xor
mov
int
lret
rcl
leave
clc
shl
ljmp
loop
repnz
xchg
aad
test
test
loope
in
iret
xor
jmp
enter
jmp
dec
div
cmc
xchg
fst
repz
mov
mov
jmp
leave
rcl
int3
stc
rol
sti
jmp
int
jecxz
ds
mov
sub
xchg
xor
out
fdivrs
fdivl
ljmp
test
ret
fucomi
cli
out
xchg
repnz
out
test
xor
in
iret
out
sar
sti
jecxz
xlat
in
hlt
call
fucomp
loopne
fcmovne
dec
nop
shr
lret
fsubr
ss
clc
int3
into
cli
hlt
jecxz
sbb
ds
int3
stc
fcmovne
jmp
xchg
shll
clc
fbstp
sar
aam
addb
add
and
out
int
ror
into
out
clc
cld
idiv
repz
std
cli
xlat
sbb
ljmp
loop
fcoml
ror
xlat
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
iret
xor
cld
fdivr
cmp
roll
adc
mov
fmuls
shl
cmc
xor
out
cmp
xor
fmulp
xchg
xlat
out
repz
mov
out
test
fcomip
in
out
xor
lret
xor
fmul
cmc
int3
sar
loop
aam
fcmovu
in
mov
leave
sub
xor
out
repz
jmp
loope
shl
call
stc
enter
jmp
rcl
in
cmc
les
hlt
aad
into
div
enter
sarb
and
test
loop
mov
in
mov
xor
repnz
neg
shl
rol
cld
fucomip
not
fisttpll
orl
stc
xor
lock
jmp
stc
in
aas
repz
fsub
fimuls
test
into
hlt
std
cld
cmpl
out
ror
ljmp
jmp
out
xchg
icebp
repz
cmp
stc
stc
or
ror
leave
test
xlat
loope
out
sub
xor
aaa
ftst
lock
repz
in
shl
fucom
call
out
jmp
ljmp
xor
test
into
shl
test
leave
sti
lret
fneni(8087
into
jecxz
int3
fsubrp
xchg
divl
out
xor
xor
icebp
sti
out
xlat
cmp
out
in
rol
clc
cmpb
addb
xchg
in
into
aaa
cli
icebp
call
fucompp
hlt
sbb
enter
enter
lret
xchg
xchg
loope
shl
lock
leave
out
into
repz
xlat
ljmp
mov
test
imul
xchg
xchg
mov
icebp
jecxz
das
cli
in
cli
into
aaa
in
leave
sti
sti
rolb
mov
mov
cmc
xlat
xor
hlt
aaa
xor
ds
rol
xor
cld
test
jmp
into
mov
into
sub
clc
fiaddl
jmp
fimull
f2xm1
sti
in
fsubp
nop
iret
jmp
in
lock
repz
icebp
stc
rcl
out
and
lret
test
mov
mov
out
in
aad
hlt
icebp
cmc
hlt
jecxz
lds
cmp
ror
inc
jecxz
xchg
in
mov
rcl
xor
out
fdivr
int3
out
cld
xorb
cmp
jecxz
fsubp
test
enter
loop
fnstenv
out
int
cmp
rolb
fiadds
leave
lock
icebp
leave
xchg
nop
adcb
xor
cmc
fsubp
cmp
cld
mov
fsubrp
in
xchg
xchg
xchg
std
iret
in
icebp
sub
cli
div
std
int3
in
idiv
clc
in
ds
xchg
hlt
mov
int
lret
fisttpl
jmp
hlt
sti
fcmovne
aam
shl
ds
orl
orb
jmp
out
shr
cld
aam
loop
aas
ret
test
enter
in
lret
std
xchg
ss
xor
loopne
cmc
out
cmp
ret
loope
std
jecxz
aad
enter
xchg
call
in
cmp
into
in
xlat
ds
shl
ret
les
aam
ret
xchg
adcb
lret
leave
sar
cmp
ffree
lock
mov
test
incl
out
std
xchg
in
hlt
jmp
icebp
fsub
jecxz
jmp
aam
mul
ret
out
ljmp
cmp
lock
neg
shl
cld
aaa
fsin
lret
aad
into
out
ljmp
vpmaxsw
xor
jmp
cmp
fisttps
iret
fmuls
call
div
int3
out
repnz
repz
filds
out
addl
shl
leave
fstpt
imul
ret
cmp
rcr
std
roll
test
in
xchg
aam
lret
enter
loopne
ret
repnz
cld
mov
ljmp
out
loope
xchg
xor
fdiv
shr
cmp
aam
rolb
stc
test
enter
rclb
cmp
cmc
cmp
cmp
in
ffree
cld
out
lret
mov
xchg
jmp
loopne
shll
cs
cmp
lock
dec
rcr
enter
xchg
in
int3
jmp
movl
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
fstpt
movsl
add
test
test
clc
cli
ffreep
int3
clc
call
sub
icebp
in
fcmovu
fmulp
call
add
ret
shl
leave
leave
lret
stc
sti
jecxz
nop
icebp
jecxz
int3
enter
jmp
int
mul
repnz
jecxz
enter
cmc
into
rol
xor
int3
fst
aam
clc
repz
cmp
in
test
lret
mov
mov
idivb
enter
roll
sti
enter
in
in
mov
mov
sar
out
into
in
sti
aaa
int3
jmp
repz
enter
not
jmp
ror
xlat
out
aam
sti
cmp
ret
xor
mov
ret
xchg
xchg
repz
icebp
out
jecxz
stc
test
hlt
iret
icebp
fldl
std
in
test
xchg
fildl
xlat
int3
fcom
lock
cli
rcr
stc
rolb
decb
dec
rolb
iret
icebp
hlt
int
call
cmpl
repnz
in
xchg
shr
rcll
hlt
div
shr
int3
repnz
cld
out
loope
mov
test
out
out
out
mov
fmul
aaa
out
fdivrp
repnz
cmp
test
test
mov
out
repz
in
sub
int3
xlat
rcr
out
cli
loope
ret
in
cmp
xchg
sti
call
shl
aaa
test
in
cmp
xor
cmp
idiv
aas
jecxz
ret
mov
iret
in
leave
fidivl
rcr
xor
icebp
loopne
shl
loope
sti
mov
filds
shr
ljmp
jmp
in
aad
loop
test
mov
int3
mov
jmp
shll
shll
std
cli
call
bnd
sar
cmp
jecxz
loope
dec
loope
shl
in
leave
xor
jecxz
lock
xor
adc
xchg
int3
test
shr
mov
ret
fldl2t
fdivrs
repz
loopne,pt
shl
cmc
lret
loope
loop
int3
leave
out
aad
xor
int3
enter
out
iret
imul
rcr
int3
fsubr
ljmp
leave
mov
out
mov
divb
shlb
loopne
rcl
repz
cld
mov
rorb
ss
fmulp
in
rcl
into
loope
xor
xor
rcr
lock
subb
fdiv
cmc
in
div
in
enter
in
loope
std
decb
testl
ljmp
lock
sti
cli
fidivrl
call
or
stc
xor
icebp
in
jecxz
loop
lret
enter
xor
idiv
ret
add
shl
cmp
mov
in
aam
lret
in
cmc
lock
dec
fdivrp
into
fcmovu
jecxz
test
sti
cli
fildl
mov
ljmp
loopne
fidivrs
rcr
cli
clc
adc
int3
lea
sub
iret
repnz
loopne
cmp
cld
ret
aam
fucom
mov
sub
out
loope
int3
ret
divb
xor
rcl
repz
fiadds
into
in
test
cmc
mov
xor
xor
cmp
filds
int
jmp
int
shlb
xor
lret
cmp
icebp
ljmp
loope
call
int3
icebp
xchg
in
rorb
enter
cmc
lret
fistpll
ret
hlt
shl
out
mov
lea
loop
cmc
fisttps
hlt
in
cmp
clc
fcmovnu
jecxz
cmp
sar
sti
ljmp
rcl
in
in
ss
hlt
sti
sarb
cmp
shr
test
sbb
fld
lret
cli
lock
out
out
std
test
mov
aad
stc
call
sbb
rcr
ret
fisttpl
cld
in
in
loopne
in
xor
repz
ljmp
addl
mov
mov
fsin
hlt
lock
sub
shl
idiv
fdivr
xor
cmp
fnstsw
ret
nop
out
xchg
rol
call
in
enter
ret
sti
ret
cmp
xchg
mov
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
mov
popf
mov
jle
movsl
add
ret
test
loope
iret
mov
ror
jmp
out
jmp
aad
fcom
xlat
ret
call
jmp
fdivr
mov
aam
stc
leave
repz
cmp
std
not
repnz
faddp
jmp
sti
test
cmc
cmp
fiadds
xlat
std
sbb
in
mov
out
xchg
xor
iret
shr
xor
lret
jmp
ds
cmp
xlat
movl
call
in
cli
out
out
fcmovnu
aas
shl
sti
les
out
in
mov
out
out
shl
jmp
into
call
bnd
rol
hlt
ljmp
xchg
test
iret
leave
fmul
frndint
out
xor
rol
repnz
xor
fmul
xchg
xchg
ljmp
test
fsubr
fidivrs
iret
iret
rol
out
fyl2x
vcvtpd2dq
cld
icebp
and
mul
fcom
rcl
cmp
out
neg
sar
sar
loopne
orb
shr
incl
ret
fdiv
into
sti
cmc
testl
jecxz
iret
ljmp
ror
ret
into
jmp
in
lret
test
cmc
shl
hlt
idivl
sti
test
hlt
xor
lock
repz
out
fcmovu
test
test
enter
loope
testl
ror
lds
rcl
leave
ljmp
rcr
cli
sti
lret
out
jecxz
cli
ror
call
cld
cmp
loopne
jmp
fidivrl
jmp
in
jmp
int
lock
xor
cmp
lock
roll
test
mov
out
rcl
lock
into
cmp
aaa
enter
fcomp
iret
jecxz
xchg
xlat
ds
fsub
test
or
test
loopne
xor
lret
jmp
out
cli
ret
cmc
sarb
test
lock
mov
icebp
lret
in
out
into
jmp
fildl
out
mov
jmp
lret
loope
hlt
addl
fidivrl
stc
sti
xchg
in
leave
fcom
xchg
cld
loope
mov
xor
shl
xor
lock
aaa
aas
idivb
test
xchg
ljmp
int
and
rcl
xor
sarl
hlt
cmp
cmp
out
cmc
loopne
lds
in
test
in
shl
rcl
call
addl
cld
cld
out
sti
into
xchg
in
int3
out
in
iret
jmp
ds
fucomip
loop
neg
lock
out
in
cmp
nop
enter
adcb
fdiv
sti
xor
test
sti
adc
cmc
xlat
mov
test
hlt
fstl
icebp
int3
xor
in
cmp
hlt
cld
xchg
ret
int3
out
lret
xchg
out
hlt
iret
cmp
rcr
idivl
idiv
fnclex
std
cmp
cmp
lea
rcl
ljmp
cmp
call
stc
cld
in
cld
rolb
xchg
jecxz
mov
jecxz
into
int3
out
iret
xlat
cmp
repnz
rcr
stc
shl
call
out
cld
ljmp
leave
xor
fmul
aas
jmp
fnstsw
in
aad
loopne
aas
fisttpl
mov
mov
jecxz
cmp
in
in
fnstcw
enter
jmp
sar
rcl
jmp
loope
mov
jmp
decb
loop
in
cs
leave
iret
stc
out
loopne
xlat
cld
shl
movb
iret
cmp
ret
into
test
neg
fmul
jmp
int
fldl
enter
cmp
int
jmp
aam
out
cmp
loope,pt
fdiv
hlt
iret
hlt
fsub
mov
xchg
ror
lock
aad
mov
cmc
fcmove
cmp
out
stc
hlt
lds
ffreep
out
out
loopne
xchg
out
int3
jmp
in
xlat
in
in
cmp
cmp
loope
fnstcw
rorl
rolb
out
leave
out
leave
out
hlt
std
aad
into
cmp
fdiv
jmp
in
xchg
mov
int
out
repz
out
fldl2t
int
fstp
or
cmp
jecxz
faddl
add
mov
mov
jmp
int3
enter
lret
int
stos
test
leave
mov
mov
in
jle
add
in
in
std
jmp
repz
sti
cmc
aas
cmp
rcr
jecxz
loopne
cli
aam
ret
imul
mov
enter
jmp
in
shrb
cmc
lret
rcr
repnz
div
testl
enter
aad
xor
int
in
int
cmp
clc
repnz
mov
nop
in
incl
aaa
ret
fst
xor
cld
xor
loop
div
repnz
loopne
leave
out
out
enter
mov
cmp
sub
lret
cli
fcmovu
loop
fucom
cld
fcomi
fsts
int3
lock
ss
das
imul
cmc
xor
std
repz
test
out
out
aad
test
in
sar
aas
in
std
cld
ret
test
call
jmp
test
sti
ljmp
stc
fucomip
out
movb
mov
cs
ret
lock
rcr
sbb
loopne
mov
ret
mov
mov
loop
fcmove
orb
cmc
aad
cmp
iret
jmp
repz
cld
loopne
out
call
int3
in
jmp
jecxz
mov
xor
cmp
out
faddl
fcmovnb
cmpl
mov
rorl
out
jmp
cmp
fsubp
shr
cmp
cld
xor
stc
lret
std
fnclex
xchg
xchg
ror
rol
cmp
repz
int3
incl
fst
decb
test
mov
repz
shl
cmp
shl
idiv
jecxz
cmp
cld
adc
mov
into
out
test
xor
call
fdivrs
xor
shl
cmc
test
mov
lret
icebp
out
in
divb
sarb
fidivrl
lock
ret
out
sbb
jmp
stc
xchg
fucomp
addb
cs
std
lret
fsubp
test
aad
inc
lret
xchg
hlt
xchg
xor
iret
lret
ror
icebp
in
in
jecxz
ffreep
lret
leave
int
clc
int
int
aam
xor
cmp
icebp
xor
cmc
hlt
aaa
cmp
test
ret
sub
int
iret
jmp
aam
jecxz
xor
aad
incl
fcmovb
add
out
mov
out
stc
int
ss
jecxz
shl
loop
stc
xlat
leave
out
or
sbb
in
neg
cld
xor
cmp
lock
int3
in
cmpb
fsubrp
mov
in
into
loopne
imulb
lock
into
ss
in
ret
aam
jmp
orb
aad
in
xor
repnz
cld
int
frstpm(287
sar
icebp
in
or
mov
shl
fmul
mov
into
in
lock
fsubrp
cld
lock
ret
test
cli
inc
aam
in
mov
out
xchg
xor
repz
std
shr
int
xlat
fildl
cmc
ljmp
jecxz
out
lock
xor
cmc
cmp
idivl
xor
xchg
loop
jecxz
call
in
lock
clc
lret
ret
out
lret
aam
xlat
sti
imul
hlt
hlt
mov
out
enter
rolb
lret
shr
icebp
sarb
aas
cmc
rcr
rol
loope
neg
and
fsts
cld
out
clc
sub
fsubr
cmp
lret
hlt
aas
icebp
int
shl
aas
in
aad
loop
enter
ljmp
ret
hlt
fcmovu
aaa
int3
cmp
ret
addl
cli
sti
repnz
in
call
rcl
std
dec
in
fnstsw
cli
loopne
test
or
icebp
xchg
repnz
lret
loopne
fcomi
lds
lret
fcmovu
stc
into
adc
call
fadds
orl
cmp
ljmp
fsqrt
stc
cld
add
in
fnsetpm(287
orb
adc
idivb
loop
fnstcw
into
xchg
add
in
loop
nop
aam
repnz
in
stc
fidivrl
loope
lock
lock
call
ret
in
lock
hlt
cmp
iret
cli
loope
rcl
xchg
aam
jmp
lea
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
in
jmp
ljmp
xchg
fiaddl
testb
ror
or
int3
rol
fstp
lock
adc
rol
orb
roll
jecxz
ljmp
idiv
out
cld
testb
in
in
stc
ljmp
lock
out
stc
icebp
into
flds
test
std
loop
hlt
std
out
mov
xchg
ljmp
cmc
aad
shl
loop
xchg
test
and
loope
out
rolb
aas
repz
stc
cld
cmp
loopne
cmp
rcr
addl
clc
mov
sub
ret
xor
icebp
in
idivl
cmp
test
out
loop
fadd
test
test
mov
mov
leave
mov
in
divb
sarb
aaa
fidivrl
clc
xor
fcos
fmuls
mov
jecxz
xchg
mov
ljmp
rcl
lret
ljmp
cmc
in
out
sub
jmp
call
xor
iret
int
std
cmp
cmp
fidivrs
iret
out
fidivrl
call
les
lock
call
enter
xor
test
rcl
rcr
cld
sti
mov
stc
in
nop
xchg
fmulp
shr
aad
fcmove
int3
xor
repnz
iret
loopne,pt
fcmovb
jmp
neg
enter
aam
aam
lret
leave
lret
shr
stc
icebp
hlt
xor
jmp
icebp
addb
leave
enter
xchg
in
rcl
out
leave
fstp
int3
sti
cmp
mov
std
shl
std
mov
loop
fxam
ljmp
ss
loope
fst
addb
sti
xchg
adc
aam
enter
cmp
cmp
xlat
into
loop
xchg
cmp
xchg
iret
lea
into
lret
stc
shl
xor
icebp
into
cmp
lock
in
icebp
xchg
jmp
fdivrl
fidivs
rcr
cmc
rcr
rcl
shl
or
loope
fists
cmp
ss
in
xor
lds
out
out
rorl
jmp
repnz
out
aad
loope
sti
addb
aam
loopne
xlat
leave
int3
in
in
jmp
repz
sti
lock
out
test
mul
enter
fstp
fsub
in
xchg
out
cmc
xor
fsub
lock
out
cmp
rcl
clc
cmp
rol
cmc
fstl
int
divb
jecxz
hlt
in
cmp
sarl
loop
fdivrp
sti
cli
out
xchg
rorl
xor
fcomi
aam
rcr
stc
cmp
int
aad
inc
ffreep
mov
mov
xchg
out
int
xor
out
sar
sti
cmp
incb
fcmovu
mov
test
out
xor
xor
clc
lock
iret
xchg
test
ffree
loopne
cld
cli
nop
cld
fildl
xor
xor
int
icebp
cmc
lock
cld
hlt
loope
aad
leave
enter
test
xor
aad
out
int3
icebp
jecxz
addl
test
xchg
ror
stc
leave
cs
cld
in
fdiv
loope
loopne
rcl
out
fiadds
stc
fsubrp
loope
loopne
shll
sti
loope
sti
cli
mov
movl
ror
ret
jecxz
das
std
fmul
aaa
rcl
clc
jecxz
shl
call
test
rcll
shl
cmc
jecxz
cmp
in
in
ret
fcmovnu
in
test
addl
loope
loopne
int3
das
into
test
hlt
stc
cmp
in
fcmovnbe
shr
loopne
and
in
out
in
mov
int3
loope
int3
in
in
int
cmp
repz
shl
mov
mov
ret
mov
imul
mov
in
xchg
mov
in
ret
ror
cmp
repz
in
out
fndisi(8087
flds
test
mov
cmp
out
sar
icebp
rcl
repnz
test
call
into
fmulp
xchg
mov
shl
fistpll
fst
iret
ror
std
shl
jecxz
sti
orb
loopne
in
sar
leave
lret
out
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
dec
jp
cmpsb
in
jle
movsl
add
fcom
in
add
aam
jecxz
loope
xchg
int3
jecxz
xchg
jmp
in
aam
clc
in
std
cmp
jecxz
ffree
out
int
fldlg2
cld
or
xchg
shl
lret
int3
out
ror
into
fcmove
fcmovb
cmp
cmc
cmp
cld
sti
xchg
repz
xor
cmp
std
shl
repnz
fdiv
ffreep
test
leave
test
loopne
hlt
imul
loope
sub
cmp
loop
sar
in
dec
adc
jecxz
aam
shrb
xor
repz
hlt
xlat
repz
iret
loopne
cmp
loopne
flds
lret
nop
loope
int3
xor
shrb
cmp
cmp
cmp
cli
in
in
orl
mov
clc
fsubr
fdiv
lret
ds
int
test
stc
fdivp
mov
leave
out
decl
aam
ljmp
in
cmc
xor
hlt
fiaddl
ljmp
in
xlat
hlt
lock
xor
ljmp
ds
xlat
out
cli
xlat
clc
mov
jecxz
sar
ffree
cli
shl
cmc
jmp
addl
repz
rcl
sar
sarb
int3
cld
ss
fcmovu
mov
ffree
xchg
ljmp
xchg
xchg
aas
fmul
out
cmp
cmp
fdiv
not
shl
cli
xchg
fsubp
lret
mov
xchg
out
std
out
in
xor
shlb
ss
aaa
cld
rol
fstp
roll
test
in
jmp
xchg
call
into
xor
clc
xlat
fdivrs
out
in
neg
repnz
cld
lock
ror
xor
into
ljmp
cmc
cli
sar
shl
out
cld
out
lock
xchg
addb
ss
fisubrl
out
out
shr
xlat
loopne
cmp
loope
fdivr
mov
out
loopne
jecxz
nop
repnz
int
sub
shll
fucom
lock
idivb
cmpb
hlt
cmp
hlt
mov
test
iret
xor
div
int3
cmc
rcl
out
repz
loop
fadd
call
cmp
lock
xor
loop
adc
loop
out
test
mov
mov
fsubp
jmp
call
out
ds
rolb
mov
sub
and
into
call
repz
in
xlat
lret
cli
into
idivb
ret
fucom
out
std
shr
xchg
lock
loop
loope
xor
in
rcr
cmp
iret
fdivp
lock
jecxz
cmpl
loop
xchg
lret
out
iret
shl
shlb
cmp
cmp
out
jecxz
in
rcl
rol
aad
loope
mov
xchg
ret
iret
jmp
cmc
cmp
test
cmp
jmp
fadd
mov
jmp
jmp
ss
xor
aaa
cmp
cmp
into
cmp
imul
aam
loop
jmp
vphadduwd
iret
xor
cmp
loope
fcomp
fcmovu
aad
call
mov
xchg
mov
fnstenv
int3
into
aaa
out
rcr
lret
into
iret
cmp
ror
xchg
enter
int3
iret
ret
aad
int
sti
xor
icebp
in
fdivrp
rol
fmulp
out
test
in
clc
loop
mov
lock
icebp
repnz
xchg
in
addb
sbb
out
aad
xor
fdecstp
sti
cli
repz
aad
rcr
clc
fxch
cld
clc
mov
xchg
mov
idivl
divb
cmp
cli
jmp
aas
fyl2x
clc
fiaddl
stc
loopne
fsubp
and
int3
imul
shl
hlt
fldln2
call
test
lret
int3
fdivrp
mov
out
lret
shl
fdivrl
aad
lret
out
stc
aam
fdivrp
cmp
ret
aad
lret
decl
stc
xor
call
out
std
cmp
rcr
jecxz
xchg
test
mov
jmp
in
not
ds
ljmp
hlt
ret
shr
in
lret
mov
rcr
mov
out
fadd
stc
cmp
int
cmp
ds
int
idiv
mov
mov
loope
out
adcb
xlat
repnz
ljmp
ljmp
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
sbb
bnd
movsl
add
cmp
rcl
mov
loope
call
lret
rcl
fsqrt
enter
cmp
fldl
mov
in
jmp
fdivr
not
sti
std
hlt
test
sti
jecxz
mov
cld
fcomip
fisttpl
test
shl
leave
idiv
repz
aam
test
shl
test
jecxz
mov
sbb
repz
int
int3
ror
loop
in
icebp
loope
loope
out
xchg
lds
aam
lret
iret
test
fmul
fbstp
repnz
test
aas
adc
fstpt
in
in
fdivr
loopne
xor
into
fcmovu
out
imul
ds
ss
repnz
mov
loope
jmp
fucomp
mov
in
call
stc
enter
repz
fadds
mov
loopne
lea
clc
repz
ret
ljmp
std
std
aam
adc
sti
test
incl
leave
jecxz
cmp
stc
rol
imul
not
iret
aad
leave
test
out
icebp
test
in
mov
ljmp
xor
aaa
cli
lret
stc
repnz
addl
lret
adc
mov
shl
repz
lret
cmp
lock
bnd
lret
int3
jecxz
int
adc
lret
out
dec
repnz
shl
cmp
testb
out
xchg
sub
lret
fdivl
fdivrp
cmp
xchg
aas
cld
sub
ljmp
into
xorb
ret
xor
cli
jmp
lock
xlat
and
ljmp
stc
mov
test
xor
iret
mul
repnz
neg
fiadds
cld
repnz
mov
xor
xor
shr
fmul
or
aas
sti
xchg
mov
fstp
xabort
test
iret
icebp
ror
std
xchg
xlat
fdivs
in
not
cmp
cmp
cli
out
rcr
aam
out
fcmovnbe
std
fsub
repz
fucomip
das
aaa
cli
out
mul
out
shr
cld
ror
repz
xlat
stc
sti
rol
xlat
iret
in
addb
ret
fld1
ss
dec
fildl
flds
in
jmp
xchg
loope
out
ret
lret
out
aad
ljmp
stc
aas
enter
mov
out
incb
in
xor
leave
cmp
xlat
out
loopne
sarb
fisttpll
enter
fdivr
ror
into
in
xor
iret
call
lock
repz
and
cli
clc
out
stc
leave
cld
loop
rorl
cli
leave
lret
repnz
cld
cmpb
mov
in
mov
mov
repz
cmp
ror
sar
clc
incb
imul
sti
iret
addl
dec
jmp
repnz
out
cld
in
addb
nop
repz
hlt
xchg
test
cmc
cmp
fadd
jmp
lock
jecxz
xchg
call
aas
mov
out
mov
repz
mov
not
in
cs
int3
jmp
out
cld
test
fdiv
mov
in
out
testl
in
lret
repz
hlt
ds
xlat
rol
fcmovnb
fmull
iret
jmp
jmp
xor
in
iret
stc
in
cmp
iret
faddl
test
in
in
stc
fcmovnu
jmp
mov
cld
out
ds
in
fsubrp
test
jmp
out
jecxz
out
mov
loope
jmp
ss
leave
not
fsub
test
mov
into
in
std
nop
shl
jecxz
les
iret
fmul
out
in
cld
fdivr
ds
icebp
shl
enter
in
lret
out
xor
cmp
clc
aaa
jmp
fcmovnb
test
filds
leave
xchg
or
in
sub
iret
ret
fdivp
xor
sub
test
ds
stc
test
mov
enter
lock
ljmp
cmc
test
int
loope
loop
cli
cmc
bnd
fisttpll
rorl
xor
ss
sar
test
rol
jmp
lret
lret
xor
in
cmp
cld
leave
fucomip
aad
test
sti
cli
sti
mov
mov
jmp
aam
int
aad
fldt
sbb
je
jle
movsl
add
enter
call
aas
icebp
call
cmc
lock
repz
lret
enter
jecxz
and
iret
loope
loop
aam
fucomi
cmp
out
iret
in
out
out
test
in
sbb
adc
cmp
ror
into
out
aad
jecxz
std
in
cmp
call
call
out
ret
out
sarl
cmc
cli
shl
fadds
std
in
fucom
lea
stc
icebp
out
cmp
test
in
cli
rcl
xchg
cld
lret
int3
addb
lret
aad
repz
sar
fiadds
orl
lock
in
out
fcmovb
ds
xchg
in
lds
out
out
lock
lret
icebp
aad
cmp
xor
fidivrs
in
rolb
mov
jmp
jecxz
xchg
out
aam
sub
lret
into
out
int
fdivp
loopne
loop
rcl
in
dec
test
enter
xchg
mov
cmc
out
enter
cmc
iret
idivb
sti
shl
xchg
cmc
test
mov
fdiv
cli
enter
cmp
aad
out
xlat
cmc
add
in
iret
decb
ret
int3
clc
cmp
aam
fsubr
rol
fucomi
les
xchg
lock
xchg
xchg
rcl
das
lock
xor
icebp
icebp
aaa
fadds
xchg
ds
mov
in
cmc
into
ss
fnstcw
call
icebp
xor
std
test
jecxz
adc
repz
out
xor
cmp
icebp
fidivrs
sti
idiv
int
cli
std
mov
jmp
lret
in
out
les
stc
out
sti
aam
icebp
cmp
ret
aad
loop
test
in
stc
loop
hlt
test
div
leave
loop
ljmp
shl
rcr
rcl
std
std
out
mov
out
in
in
dec
in
enter
xlat
out
cmp
aam
icebp
loopne
loope
ret
jmp
mov
int3
lock
hlt
aam
shlb
leave
ror
sti
xlat
int3
shr
cmpb
into
cmc
fsin
aam
jmp
std
movl
clc
aam
stc
in
rcr
leave
shl
jmp
cmp
sti
call
jmp
out
out
shl
in
sti
stc
cmp
lret
stc
lret
sub
fld
movl
repz
ss
xor
sarb
xlat
cmp
testb
lea
in
das
lret
xlat
lret
int
in
cld
cld
aam
cmp
clc
loopne
fildl
xchg
leave
xchg
repnz
loope
lock
out
jmp
les
xchg
push
cli
mov
loope
ss
leave
cmp
leave
cmp
out
rcl
out
clc
ret
out
std
xchg
fldl
stc
clc
cmp
xor
fcomi
test
shl
clc
fcom
lock
mov
jmp
lds
fcmovnbe
cli
loop
int3
aaa
testl
cld
cli
into
mov
std
fcom
int
in
out
lock
ljmp
sti
faddl
and
flds
cs
shr
cli
jmp
out
icebp
cmp
cmc
rolb
cld
int
fst
out
std
sbb
loope
lret
sti
repz
cmp
cmp
stc
fcomip
fnstcw
mov
fsub
mov
in
fucompp
xchg
xchg
shr
cmp
into
jmp
aad
clc
sar
rolb
rcr
jecxz
enter
xchg
fucom
xor
xor
std
shr
ds
std
fdiv
fstp
orl
mov
cs
stc
xlat
jmp
sti
cld
cmp
fucomip
fucomi
mov
fxch
les
loop
int
aam
lret
xor
cmp
aam
repnz
les
mov
call
stc
sti
into
ljmp
cmc
aad
icebp
shl
cmc
xchg
xlat
in
int
mov
call
call
cmp
rcr
fstp
addb
int
repnz
in
fdivs
int
in
rcl
hlt
ljmp
aas
cmp
faddp
lret
mov
add
add
jmp
aam
iret
int3
fst
outsl
fmull
cmp
jle
add
in
xchg
lret
repz
jecxz
lock
not
aad
in
rcl
mov
fisttpl
lret
shll
repnz
rcr
div
cmc
stc
aad
cmp
xchg
jecxz
out
in
out
shr
stc
fsubrp
repz
sti
in
sar
fnclex
incb
rolb
int
xor
lret
xlat
test
in
mov
std
ret
xchg
mov
lret
leave
or
icebp
aam
xor
fidivrl
cmp
cmp
sar
ret
inc
testl
jmp
jmp
xor
cmp
sti
ror
sar
repz
mov
loope
iret
out
fstl
fsub
jmp
cmp
iret
aam
fiaddl
lock
fcmovnu
std
xchg
orb
xor
fsubr
cmp
add
loop
cmp
leave
xlat
mov
ljmp
rcl
aaa
sti
ss
std
enter
ret
dec
test
sti
lret
cli
leave
lea
sti
cmp
fcomi
aad
aas
stc
fdiv
loopne
jmp
clc
neg
mov
into
xchg
in
in
loope
fyl2xp1
shl
lret
enter
test
out
rolb
lret
stc
lea
cmc
shl
xor
in
leave
fxch
loop
sti
and
std
sbb
stc
lret
mov
in
xchg
aam
out
jmp
lock
ds
shl
lret
out
jmp
mov
jecxz
repnz
clc
ljmp
cmp
inc
cmp
fstp
and
loope
adc
cmc
in
fptan
shl
aad
sti
aad
or
in
jmp
fcmovbe
mov
adc
jmp
in
rcr
icebp
ljmp
adc
fnstsw
out
in
out
mov
fsubr
repz
iret
lret
jmp
cmp
int
aam
aad
not
loop
sbb
out
mov
in
enter
cmp
shl
repnz
xlat
mov
call
jmp
xor
leave
in
das
imul
ljmp
and
shr
neg
clc
mov
in
shr
test
out
fdivr
in
cmp
shr
cmp
fcmovnb
out
sti
ljmp
ror
hlt
std
fsubp
cmp
out
fdivrs
cmp
xchg
in
jmp
sub
loopne
xor
jmp
cmpb
shl
xlat
shl
jmp
enter
out
repz
in
shlb
aaa
rcr
fcmovnbe
int3
hlt
jmp
jecxz
shl
jmp
int3
out
lret
loope
int
jecxz
in
iret
cld
repz
cli
sti
out
stc
rolb
xchg
std
in
rolb
fdivs
xor
hlt
into
fistpll
fdiv
ds
std
loopne
rcr
fadd
std
in
repz
iret
stc
cmp
fninit
sbb
sarl
cmp
sbb
out
ljmp
out
in
lret
xor
sti
fcmovnbe
shlb
sarl
cmc
fsubp
lret
cld
call
xchg
mov
ljmp
cmp
cmp
rcr
cld
test
xchg
out
out
loope
ror
lret
rcl
cmp
int
loopne
icebp
sti
fnclex
out
out
jecxz
mov
int
out
hlt
lret
icebp
shl
int
cmc
jecxz
cmp
fstp
jmp
lret
jmp
nop
sbb
sti
mov
aaa
cmp
fprem
cmp
test
bnd
aad
cli
mov
xchg
in
shlb
out
ds
rcl
loop
icebp
icebp
shl
aam
shl
mov
loop
mov
into
aad
in
cli
jmp
inc
iret
cmp
cmp
dec
mov
and
jecxz
and
rol
div
in
fucomp
cli
sar
ret
fsub
sti
ffree
mul
xchg
cli
dec
repnz
xor
aaa
ljmp
aad
in
repz
mov
lret
into
ror
std
loop
iret
in
in
int
rcl
ss
repz
loop
aam
mov
loopne
mov
mov
aam
sti
iret
lock
idivb
sbb
sar
lock
sti
in
int
sti
ljmp
xor
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
mov
cmpb
add
iret
call
sti
test
out
test
fisttpll
clc
mov
vaesdec
out
clc
cmpl
xchg
jmp
lea
shl
ret
divl
cmp
icebp
jmp
in
addl
jmp
lret
xchg
int3
xchg
cmc
cmp
out
sar
idiv
and
repnz
nop
mov
mov
xchg
lock
lds
stc
xor
fnstcw
idiv
cmc
rcr
lock
stc
xchg
lret
imull
xlat
shl
jecxz
mul
leave
aaa
repz
fyl2x
cli
in
aad
mov
out
jmp
loope
loope
mov
enter
into
lock
addl
jecxz
cli
mov
xchg
cli
aam
xor
out
out
ds
out
repnz
fucom
out
out
ficoml
cmp
jecxz
into
iret
repnz
ss
ror
cli
xlat
int
rolb
xor
shl
out
lret
iret
out
aam
ljmp
repnz
testb
jecxz
rcl
rolb
call
leave
xor
into
int
mov
loopne
imul
fldl
lret
int3
xor
ss
in
repnz
fdiv
cld
flds
mul
testl
rol
cmp
xor
loop
hlt
movb
rcl
in
xchg
imul
das
cmp
out
stc
rcl
rcl
int
rcl
out
lock
mov
leave
mov
rcr
in
cmp
cmp
int3
sar
fdivp
xchg
lds
ljmp
in
cmc
aad
jmp
fstpt
clc
cmp
into
int
aad
sar
repnz
lret
xchg
xchg
fisttps
hlt
leave
ds
in
aad
out
inc
in
lock
mov
out
icebp
call
jmp
fdivs
hlt
loopne
roll
mov
xchg
call
aam
aaa
cmp
std
cmp
in
loope
ror
repz
in
sti
test
aam
mul
out
aad
cmp
fdivrl
sub
sar
sti
in
icebp
fimuls
sub
in
ror
in
cmc
xor
ss
cmp
int
in
aaa
cld
sar
sti
call
and
mov
out
ret
jecxz
repz
cld
ror
cld
filds
std
test
leave
cli
std
fmull
shl
rcr
aam
rcr
repnz
cli
cmp
cmp
addl
xchg
mov
ljmp
aam
cmp
cmp
hlt
cmp
repnz
out
xlat
jecxz
cli
nop
mov
shr
out
in
out
ss
aaa
aaa
clc
cmp
ds
repnz
repz
test
in
int3
iret
in
mul
jmp
lock
ss
jmp
ds
cli
mov
hlt
vpsrad
jmp
std
fnstsw
into
in
repz
hlt
cmp
cmp
repz
xor
rcr
cmp
out
cli
in
mov
call
div
std
cli
xor
fcmovnbe
incb
loop
fcmovnbe
sti
mov
cli
repz
mov
repz
lret
into
fbstp
clc
fsubrp
faddl
xchg
jmp
out
fldl
jecxz
hlt
leave
repnz
cld
cmp
loope
vpaddusb
clc
mov
loop
cmp
out
test
lock
aas
repz
cmc
fsub
and
xchg
mov
call
shr
loope
ret
stc
xor
int
cld
sar
fbstp
mul
mov
lock
test
hlt
xlat
iret
in
leave
cli
cmp
adc
cli
aam
movb
xchg
ljmp
jmp
sti
jmp
sbb
iret
add
out
loope
orb
not
out
ss
aad
aam
dec
cli
cmp
call
in
jmp
xchg
repz
div
repz
ror
out
div
cmp
xchg
out
sti
leave
addb
loop
out
mov
xlat
cmp
cmc
fsubr
fdiv
out
faddl
out
in
jmp
ss
in
ret
cmp
cmp
fisttps
test
add
add
clc
xor
add
jmp
rol
xlat
int
arpl
mov
icebp
or
nop
imul
idiv
enter
neg
jmp
fcmove
shr
call
in
enter
iret
and
sar
ret
jmp
cmp
in
std
or
cmc
xchg
lock
cmp
repz
xchg
enter
ret
cmc
test
sub
lock
jmp
test
les
test
lret
cmc
loope
stc
ret
repz
fldt
lock
fadd
icebp
cmp
testb
incb
lret
cmp
aad
xlat
stc
jecxz
std
icebp
out
xchg
fiadds
jmp
int
out
in
test
aam
jmp
cmp
lock
rcl
cld
stc
hlt
cld
fxch
cld
loop
ret
das
cmc
repnz
xor
sar
idiv
aad
testl
in
cs
xor
into
xor
lret
ds
clc
iret
fcmovb
clc
cmc
into
in
lock
lock
icebp
in
out
fsubr
stc
aaa
clc
cmp
xor
sarb
out
rcr
lds
jecxz
adc
idivl
repnz
enter
aad
sarl
sbb
jecxz
sbb
xlat
enter
test
ret
lret
repz
addb
jmp
mov
mul
xchg
clc
loop
imul
not
call
std
stc
mov
std
jecxz
out
mov
jmp
mov
mul
cmp
in
sub
test
out
call
stc
aam
loopne
lock
mov
aam
jmp
cmp
cmp
in
jmp
int3
sarb
rcr
jmp
sti
iret
decb
in
int3
call
shl
ret
out
repz
and
jmp
lret
int
iret
jecxz
xor
int3
fcmovnu
cmp
repz
mov
xchg
cli
fucompp
cli
leave
out
xacquire
enter
jmp
cmp
sbb
sti
ret
mov
int
stc
xchg
jecxz
xchg
aam
in
sarb
in
idiv
int
aad
cmp
loope
aad
stc
xchg
add
out
jmp
xchg
aaa
aam
fdiv
lret
ss
add
loope
in
test
in
out
xor
das
call
cmp
clc
fsubp
hlt
test
aad
call
icebp
mov
fcmovnbe
in
fdivr
leave
int
jmp
cmp
loopne
fiaddl
mov
test
cld
enter
aad
cld
int
cmp
clc
enter
loope
in
in
aam
in
hlt
lock
icebp
call
cli
out
cmp
test
mov
xchg
loope
repz
ljmp
fdivr
sti
addb
enter
addl
into
imul
jmp
int3
out
sbb
xlat
sti
incl
repz
into
xor
lret
out
rol
rcl
fadd
fnstsw
rorb
shl
int3
in
shl
loop
int
lret
in
icebp
cmp
clc
lret
jmp
cmc
in
loope
enter
mov
leave
icebp
ljmp
ss
iret
rcr
sti
icebp
lret
std
jecxz
out
std
jecxz
mov
fcoms
mov
hlt
lret
xor
aad
cld
shr
cmpl
aad
test
orb
out
aaa
ret
xor
cmp
fcomi
out
fmul
cmc
fcmovu
icebp
icebp
fmuls
mov
aas
lds
call
cmp
cmpl
ret
xchg
and
sti
mov
out
repnz
call
stc
std
fdivp
shl
cmp
ret
cld
clc
call
mov
lock
repz
lret
fstpt
fldpi
repnz
iret
sti
icebp
cmc
in
adc
cli
fdivrp
xchg
ljmp
shll
call
jmp
xchg
and
std
mov
std
int
rorl
xor
cmc
in
rcl
fdivp
cmp
rcr
fcomip
ljmp
mov
loop
out
xchg
ljmp
fcmovne
fiadds
loope
mov
test
testl
into
ss
ljmp
test
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
jecxz
cmpsb
inc
nop
mov
movsl
add
sti
ror
aad
addl
lret
idiv
ror
sti
fcmovu
ror
sub
test
xchg
fdivr
stc
cli
and
out
divb
out
fsubp
stc
cmp
out
fcos
mov
leave
mov
mov
nop
nop
in
repz
cmc
sti
cli
lret
cld
cmp
aas
fstpt
cmp
enter
std
or
rclb
shr
cmc
sarl
sarb
cmp
fld
sti
std
sar
stc
in
mov
mov
in
repnz
xchg
lock
into
xor
lret
aaa
cmp
ds
ds
stc
rorb
idiv
out
test
dec
lock
xor
out
das
shlb
cmp
shll
in
loop
lret
roll
loope
xor
fnstcw
into
cmp
cmp
div
cmp
xor
test
out
lock
xchg
test
cmp
into
fcomip
repz
push
repnz
rol
int3
sti
leave
rolb
sarl
aaa
out
xlat
out
loopne
adc
cmc
aas
loop,pt
xchg
ret
shl
out
test
cmp
cmp
cmp
jecxz
jmp
test
loope
jmp
not
fcmovnb
xchg
rcl
fisttps
hlt
cld
cmp
aas
test
sti
rcl
stc
test
loop
lret
shl
shrl
ret
sub
rcr
out
iret
std
neg
testb
cmc
movb
loope
aam
rcr
in
lock
repz
loopne
addl
ljmp
jmp
das
fcom
fdivr
fsubp
loop
fcmovb
rcr
aad
in
in
mov
repz
repnz
fcmovu
cmc
fcom
leave
stc
out
ds
jecxz
aam
jecxz
call
fldl
in
sar
lret
aaa
clc
xlat
out
sti
rol
flds
loope
loope
cli
int3
loope
xor
cs
out
cld
repz
shl
aas
imul
sti
fucom
out
cli
aad
xlat
testl
jmp
in
xlat
cli
xlat
out
aaa
cmp
sar
lock
repnz
cld
aam
fldl
test
in
hlt
ret
sub
sti
jmp
enter
in
aad
xchg
test
fiadds
loop
repnz
ss
fcmove
aaa
aad
fadd
ret
xchg
loop
fcmovb
loop
xchg
xchg
nop
xchg
mov
aad
loope
repnz
cmc
shl
in
cmp
imul
test
notb
jecxz
fdivp
aaa
xlat
sar
cld
clc
shl
ret
fiaddl
call
jmp
aam
lock
int3
ds
jecxz
roll
std
lds
loop
out
repnz
fcmovu
xor
xor
into
xor
repz
dec
sti
xchg
test
loope
mov
aaa
rol
jmp
ss
fcmovb
jmp
loopne
lds
stc
jmp
out
out
mov
jmp
div
lret
lret
std
jmp
sbb
loop
aam
clc
ret
test
ljmp
xchg
in
loop
jmp
int
enter
jmp
fadd
out
fcomi
enter
enter
out
xchg
mov
lret
sarb
out
iret
fcmovbe
iret
aad
fst
fsincos
cld
fisttpl
mov
out
repnz
stc
xor
xor
shl
repz
cld
xchg
sti
xor
sbb
hlt
out
xor
fnstsw
cmc
jmp
int3
cld
hlt
test
aad
ljmp
hlt
rcl
out
in
ljmp
cmc
sar
cmp
loope
sti
lret
filds
xor
in
lock
rcr
xlat
fucomi
repnz
fdivrp
incl
fsubr
jmp
jmp
call
shrl
out
jmp
fcomip
iret
sar
cld
mov
clc
fsub
int3
fmul
int3
ljmp
shr
fmul
fucomi
aaa
clc
ljmp
into
cmp
in
test
out
out
test
rol
fldz
imul
ljmp
repnz
test
lret
fsub
loopne
ss
aam
xor
cmp
ds
out
fmulp
ret
std
out
int
leave
xchg
and
cmp
aam
xor
icebp
int3
std
ret
ffreep
mov
mul
into
pushl
jmp
int
into
fst
das
inc
aam
movsb
shl
mov
movsl
add
ficoms
int3
not
iret
ret
jmp
cmp
cmp
mov
lret
loopne
cmp
xchg
into
out
imul
shl
icebp
sti
stc
xor
shl
in
loope
loop
xchg
hlt
test
mov
loope
mov
out
xor
icebp
xlat
cmp
test
dec
in
out
loopne
rcl
loop
out
loope
aam
sti
ds
fidivrs
xor
icebp
out
out
out
sti
in
rolb
rol
div
shll
cmp
cmp
sti
int
repz
loopne
cmc
mov
jmp
lock
jecxz
ljmp
out
aad
in
ret
fdivr
fdivr
fcmove
mov
std
std
std
out
and
cld
aaa
bnd
fucom
shl
fisttpll
popl
out
shl
sub
clc
xor
jmp
ds
sar
aad
sar
xchg
xlat
enter
test
in
jmp
ficoms
out
aad
imul
test
in
push
test
addl
loopne
repnz
shlb
stc
int3
rcl
shl
fdivrp
rcl
cmp
in
jmp
fimuls
lret
xor
ss
sar
cli
sarl
out
jmp
call
jmp
out
xor
not
addb
aam
fsubrp
out
loope
testb
ss
in
cmp
std
out
cld
in
rclb
icebp
rol
sti
cmp
fnstenv
div
faddl
addb
into
in
iret
out
xchg
xor
sar
ss
ds
jmp
aas
repnz
in
mov
out
in
into
aaa
fucompp
lret
cmp
fcomip
in
ret
iret
repnz
in
ljmp
lea
cli
cmp
rol
xlat
into
ljmp
cli
orl
les
xor
not
icebp
fucomip
aad
fdivp
ss
aam
enter
loope
fiaddl
rcl
int
ror
jmp
out
faddp
leave
shl
in
ret
shr
out
mov
in
aad
sti
cmp
aam
rcr
in
cli
lock
filds
fcomp
loope
xchg
lock
mov
cmp
in
fdivs
cli
xlat
loopne
fcmovnbe
rcr
jecxz
hlt
frndint
lret
test
mov
jmp
aam
lock
stc
out
ljmp
and
out
mov
loope
lret
xchg
rcr
aad
leave
icebp
shr
cmp
and
not
mov
fmul
out
out
xchg
in
repz
xor
cmp
div
fiadds
test
cli
enter
jecxz
out
xchg
xchg
test
enter
aaa
ljmp
stc
cmp
aam
mov
cli
fadds
nop
loope
iret
xor
out
repnz
xlat
sar
cmp
cmp
cld
cmp
jmp
leave
rcr
adc
in
fsubrp
leave
ret
lret
int
repz
repnz
into
aad
cmc
add
rcl
mov
lret
and
in
xor
in
jmp
cld
int3
in
loop
fcmovbe
roll
or
jecxz
repnz
in
fstp
enter
cmp
clc
int
into
clc
ret
ret
sarb
ret
leave
jmp
std
into
xchg
test
shl
in
cmp
ss
out
cmp
fscale
and
mov
xchg
jmp
std
fdiv
mov
mov
xor
jmp
cmp
xor
cmp
cmp
ds
in
in
xchg
in
mov
out
repnz
rcl
loop
xor
stc
leave
repnz
repnz
lds
shr
mov
cmc
stc
leave
out
shl
out
out
jecxz
fcomp
test
sti
addb
repz
ss
aaa
icebp
out
fnsave
jmp
ret
incl
test
mov
addb
cs
rol
sti
xor
lret
cmp
repnz
sti
out
mov
shl
aad
not
lret
stc
repnz
iret
cld
jecxz
cmc
in
mov
fcmovne
iret
mov
mov
jecxz
leave
enter
iret
repnz
lock
adc
fcmovnb
fcmovne
testl
data16
add
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
icebp
ret
aaa
jmp
lret
shl
out
cld
into
loopne
repz
mov
jecxz
ljmp
xor
xlat
in
rcr
cmc
xlat
ret
cld
cld
ret
jecxz
clc
in
loopne
fildl
inc
iret
cmc
call
leave
enter
fsub
fnop
enter
xor
in
test
xchg
out
xchg
fsubrp
lret
cmc
lock
xor
cmp
loopne
repnz
loop
out
mov
mov
mov
mov
call
in
stc
into
icebp
lret
call
in
sti
sub
inc
test
loopne
mov
mov
rcl
cmc
shl
not
fbstp
cmc
in
lock
ds
neg
fimuls
out
roll
cmp
fsin
fidivrs
out
sar
aad
test
cld
cld
loop
cli
xor
hlt
ljmp
shr
cmp
clc
cmp
test
imul
fdivrp
in
cmp
test
cmc
repz
std
aaa
lret
fidivrl
in
ds
std
testl
test
sar
cmp
cmp
lock
fsubr
loop
sar
out
icebp
loop
loop
xchg
fsub
hlt
loope
mov
iret
ss
in
stc
xor
icebp
ret
cmp
loop
sub
in
out
xchg
out
jmp
lret
not
int3
in
out
loope
out
cmp
in
fprem1
stc
mov
cld
in
mov
xchg
shr
sar
rcr
iret
fucomi
in
lret
test
sbb
test
mov
ret
icebp
std
rcl
ss
neg
cmp
int
xor
sub
shl
ljmp
in
in
rclb
out
das
jmp
iret
adc
addl
lret
leave
dec
lret
int3
in
xchg
cmp
leave
cmp
lret
ljmp
mov
jmp
xchg
call
ljmp
idiv
into
loope
iret
repz
cli
repz
xchg
cli
flds
out
shl
lret
ror
loopne
cmpb
incl
out
sar
lret
int
xchg
sub
jmp
out
loopne
xor
loopne
loopne
ret
ljmp
orb
rcl
in
stc
ds
loope
ret
loope
jmp
fmull
ror
cmp
int3
call
cmp
sub
clc
stc
sti
xchg
decl
jecxz
in
xor
sarb
int3
shl
loopne
jmp
out
flds
aam
ljmp
into
sti
aas
in
stc
cld
std
aad
leave
cmc
lret
leave
bnd
loop
test
in
cmp
hlt
in
xlat
ret
aam
int3
orb
shl
icebp
in
jecxz
cmp
flds
xchg
mov
lret
into
cld
int3
nop
icebp
shl
xor
xor
into
lock
out
sub
cli
loopne
test
clc
xlat
into
in
into
out
xchg
out
pushl
rcl
out
fdivrl
int
cmp
in
fimuls
enter
fildl
out
loop
leave
std
icebp
fmul
xor
test
ds
ljmp
jmp
lock
int3
out
cmp
hlt
cld
iret
cmp
test
in
fmulp
leave
shl
loope
div
loop
sub
aam
cmp
rcr
fidivrs
int3
jmp
jmp
xlat
ret
das
idivl
fcmovnb
add
fcmovne
int
out
push
xchg
ror
int
ror
into
repnz
call
out
cmp
fildl
mov
jmp
xchg
mov
into
shrl
call
adc
fdiv
addl
loope
out
test
rorl
out
in
cmp
idivb
or
int
repz
jmp
nop
lock
ror
idivb
icebp
xor
int3
jmp
hlt
add
aad
sti
rorb
jmp
out
ljmp
fbstp
out
shl
xor
cmp
adc
fdivrp
fcmovnb
and
cmc
loop
xchg
lret
lret
fcomip
jmp
in
fcmovbe
xlat
xor
faddl
mov
sar
mov
out
call
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
lahf
sbb
test
jle
enter
xor
ffreep
test
mov
int
out
mov
int
das
into
xor
out
rcr
neg
aaa
cli
bnd
cli
cli
mov
shr
xchg
not
stc
enter
shlb
clc
repnz
ljmp
stc
fcom
clc
mov
cmp
hlt
xor
aaa
iret
cmp
sti
ret
out
ret
xchg
test
stc
lret
mov
xchg
jecxz
leave
enter
aam
clc
shl
out
shl
ret
repz
std
cld
mov
fisttps
stc
lock
imul
out
sti
xor
in
aas
repnz
in
imul
lret
repz
xor
stc
xor
fmul
cli
rcr
call
std
leave
out
and
repnz
rorb
repnz
aad
repnz
jmp
ret
repnz
icebp
int3
adc
cld
sti
das
aad
cmp
cmp
fldl
jecxz
int
xchg
stc
in
mov
cld
xlat
int
cmp
out
ret
xchg
or
lock
mov
fists
ss
sti
fcmovnu
ds
mov
and
out
icebp
loope
jecxz
aad
fidivrl
call
loopne
aad
loop
loop
filds
cld
fists
sub
out
fcomp
rcr
repnz
jmp
jecxz
in
out
xchg
iret
out
aam
out
int3
xor
in
or
cmp
aas
in
loop
cmp
std
call
lret
call
f2xm1
shll
div
fsubp
shr
cmp
and
lds
leave
mov
lret
out
iret
cmp
hlt
cmp
aam
clc
cmp
and
ffreep
fimull
orb
shl
cmp
xor
stc
loop
jmp
lock
ret
loopne
sub
cld
leave
test
lret
ret
out
into
sti
ds
xlat
out
loope
std
add
mov
loop
in
pause
mov
xor
fcmovne
rol
xor
in
ret
sti
loope
hlt
loopne
call
lea
out
iret
in
in
cmp
loopne
les
in
fxch
jmp
hlt
repnz
in
shl
neg
xor
loopne
idiv
xor
flds
jecxz
mov
jecxz
and
xor
clc
int3
cld
into
cmp
fucomp
xlat
cmp
roll
addb
test
loop
loop
icebp
aad
int
sub
addb
loopne
leave
fucomip
loope
std
xchg
test
out
loop
cmp
cmp
aaa
jmp
shl
enter
dec
stc
out
jecxz
xchg
lret
cmc
loopne
cmp
jmp
cmp
lock
loopne
fsqrt
jecxz
stc
cld
mov
fsubp
xchg
rorl
xor
rol
shl
lret
test
stc
roll
xchg
call
cmc
cmp
out
xor
not
rcr
add
sar
mov
neg
mov
iret
loop
int3
int
test
aas
int3
jmp
out
fcmovbe
clc
cmc
in
test
jmp
loop
loop
jmp
int3
clc
jmp
lock
shl
clc
cld
loopne
ret
and
fcmovnu
xor
mul
cli
lret
sti
fmul
int3
fld
fcmovnb
out
out
fadds
test
call
ljmp
cld
iret
stc
icebp
repnz
addb
in
imul
clc
lret
cld
roll
ljmp
imul
ds
fnstsw
cli
mov
in
jmp
int3
shrb
shr
cld
clc
shl
sarl
fistpll
loop
adc
std
xlat
mul
out
clc
enter
sti
into
in
call
rcl
hlt
in
xlat
imul
fcmovnbe
cld
in
lock
jmp
in
in
out
lret
jmp
int
add
cmp
mov
ljmp
xchg
xchg
ret
ss
fxch
repz
cmc
stc
clc
ds
fcmovb
mov
xchg
xchg
int3
iret
leave
add
not
repnz
ss
ss
repz
cmp
fdivr
vpmuludq
icebp
out
mov
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
sbb
ja
pushf
jle
xchg
add
icebp
jecxz
int3
ss
lock
ror
in
in
cmp
std
xor
ljmp
leave
repz
rorl
sar
icebp
leave
hlt
lock
aas
aas
fnstcw
enter
loop
mov
in
xchg
lea
enter
sar
aas
jmp
loope
ss
ret
fst
jmp
mov
mov
repz
lock
stc
enter
cmp
aam
sar
cli
loop
mov
stc
jmp
int
ret
aam
shl
fsubr
aaa
cmp
rcr
ds
aam
cli
jecxz
fucomip
adcb
clc
xor
fld
aaa
cmp
aam
repz
not
fdivr
test
in
icebp
sbb
out
call
jmp
fdivrp
cld
not
xlat
fxtract
hlt
fsub
add
fucomip
adcl
int3
int3
iret
int
std
stc
in
mul
bnd
orl
shl
not
aas
ret
call
shl
cmp
cmp
hlt
xchg
fadds
cmc
ror
stc
cmp
in
cmp
repnz
iret
stc
rol
cmc
jmp
in
loope
in
mov
das
sub
std
cmc
cmc
in
ror
cmp
loope
clc
cld
testl
loopne
icebp
shl
out
call
icebp
sarb
in
lock
cmp
cmp
in
ret
or
fldl2t
orl
out
cmp
std
rcl
fdivrp
out
in
fmul
jmp
int
orl
fdecstp
xor
lret
out
lret
ds
cli
xlat
leave
out
fimuls
jmp
jmp
xor
cld
fxch
jmp
loopne
sarl
ljmp
loope
popl
repnz
cmp
cmp
out
xor
aam
xchg
mov
cli
xchg
jmp
xor
jmp
out
into
fdiv
fsub
and
sub
fcmovnu
fmul
test
cmp
mov
call
in
into
lret
sti
rol
iret
stc
loopne
xchg
loope
mov
test
ret
in
out
out
xbegin
out
fndisi(8087
in
lret
jmp
nop
mov
out
xchg
out
xor
lret
repnz
int3
iret
shl
loope
fmull
sub
ljmp
repnz
out
sti
into
aas
in
int
fiaddl
mov
test
notl
shl
loop
shl
cmp
ror
in
std
stc
fiadds
cmc
aam
in
testb
repnz
cmc
int3
int3
ss
ror
ss
test
cmc
cld
jmp
lret
std
nop
jecxz
hlt
enter
cmp
rol
filds
ret
enter
nop
call
cmp
leave
aaa
xor
clc
ror
fcom
cmp
out
call
in
jmp
in
jmp
lret
aaa
idiv
jmp
sar
fcmovnbe
rcl
roll
orl
int
das
int3
leave
lret
fdivrp
fdivrp
loopne
rcl
aas
neg
xchg
into
loopne
mov
or
repnz
repz
les
lock
loop
rcr
xchg
out
cli
int
xchg
ret
int3
out
les
leave
stc
xor
jmp
roll
lret
test
in
xchg
xor
repz
in
jmp
lret
sar
aam
fcmovnu
clc
fcmovbe
orl
fdivp
loope
aad
stc
repnz
iret
cmp
loopne
stc
test
fsub
sub
mov
enter
nop
repz
shlb
out
cld
out
pushl
cmp
cmp
mov
xlat
jecxz
test
iret
out
fstl
rcr
divb
ds
int
inc
cli
ret
test
fcmovnu
lret
jmp
fadd
shr
stc
hlt
fldl2e
clc
call
faddl
test
in
mov
jmp
lock
hlt
ss
out
lock
cmp
inc
mul
aad
fld
jmp
enter
xchg
repz
clc
cmp
lret
cmc
imul
lock
ret
test
std
neg
iret
out
mov
loop
rcl
mul
xor
call
clc
int3
test
cmp
in
andl
inc
add
jne
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
xchg
frstpm(287
out
int3
lock
out
jmp
repnz
fimull
fstp
mov
xor
repz
out
xor
xor
xlat
repnz
adc
std
lock
ljmp
test
call
int
repnz
xor
sbb
lret
fidivrl
mov
jmp
iret
ljmp
out
shl
cmp
lock
xor
repz
jecxz
rolb
mov
ljmp
call
in
test
rcl
fcmovnbe
mov
lret
clc
jmp
shl
xlat
fnstsw
shr
fdiv
ret
ret
test
fisttps
cmc
mov
aaa
lret
leave
in
xor
out
loope
mov
ffree
jmp
mov
addb
shr
out
cmp
enter
iret
sti
add
jmp
hlt
mov
xchg
xchg
shrb
in
loope
cmp
aam
out
shl
xchg
enter
fisttpll
out
repnz
xchg
icebp
cli
call
jmp
aad
mov
in
adc
repz
stc
cld
cld
icebp
ljmp
test
mov
aam
test
icebp
in
ret
call
repnz
test
fiadds
in
jmp
rolb
clc
repnz
cmp
out
fmul
rcr
hlt
fldl
lret
jmp
loopne
in
int3
fmul
repnz
mov
in
cmp
sti
add
repz
lret
hlt
xor
hlt
cmc
stc
lret
call
xchg
ret
fildl
in
repnz
lret
xchg
rcl
clc
icebp
lret
fucomi
cmp
shl
aam
lds
mov
jecxz
out
call
ror
in
fcmovnbe
lret
jecxz
fmul
aad
cmp
in
fstp
lret
jmp
pause
rcl
xor
out
sti
out
fcom
fdecstp
add
in
in
call
lea
repnz
repz
aaa
loope
shr
int
sti
rcl
ret
repz
in
jmp
xchg
sub
mov
ljmp
aas
aad
loopne
in
in
and
icebp
in
fmulp
aaa
in
ss
out
int
cld
fcomp
in
sub
shl
loopne
mov
loope
repz
rol
in
aaa
sar
rcr
lock
loopne
into
out
call
test
lret
sti
test
xchg
lret
aam
loop
xor
out
int3
dec
stc
int
sub
ret
xchg
test
in
mov
jmp
ss
rcr
loopne
fsubp
out
aad
loop
mov
fimull
fsubr
loop
repnz
out
cmp
jecxz
shl
in
jmp
enter
ffree
into
xchg
repz
sarl
into
repnz
out
cmp
leave
out
and
shr
xchg
jmp
repz
fdivp
clc
cmp
loop
div
fiaddl
rcll
out
in
int
into
cmp
cld
add
clc
mov
repz
ret
mov
stc
stc
in
mov
in
mov
sbb
loope
out
xor
in
test
icebp
in
xchg
iret
repnz
clc
ret
cmp
fcmove
cld
rcr
out
fcomp
loope
fcmovbe
lret
jmp
icebp
fsubp
int
xlat
shll
cli
aam
cld
bnd
into
in
loop
ljmp
lret
lret
mov
jmp
sti
rol
cmp
cmp
cmp
ds
out
filds
nop
int3
mov
xchg
rcl
in
lret
aam
enter
loope
clc
xlat
rol
out
aad
out
mov
mov
int
cld
addl
jmp
shl
cmpl
loop
jmp
mov
int
fdivr
fldl
out
xor
loopne,pt
xor
cli
in
ret
sar
in
jmp
out
xchg
lock
int3
icebp
ror
cmp
shl
jecxz
fdiv
flds
std
iret
xchg
mov
xor
fcmovbe
cmp
loopne
cld
out
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
insl
int
jle
xchg
add
fmull
lds
in
jecxz
std
xor
cli
out
sarl
clc
aam
shr
aam
mov
mov
icebp
in
int
loopne
ljmp
call
shl
lock
test
fsubr
lea
ljmp
in
fdivs
testl
mov
mov
and
sub
jecxz
fsub
div
aam
ljmp
fcom
ret
ds
mov
xor
xor
cmc
fdivp
rolb
jecxz
iret
ret
loope
in
filds
jecxz
jmp
ret
xor
call
fildl
mov
in
mov
repz
test
sbb
out
in
sub
shl
int3
out
int3
lret
testl
std
cli
std
ljmp
xchg
loopne
rol
fxch
aaa
repz
ds
neg
cmp
clc
leave
sti
in
xchg
jmp
cmp
cld
sti
cmp
aad
lds
test
xchg
fsub
test
shl
adc
call
xlat
iret
into
int3
fnstcw
loope
cmc
aas
std
les
jmp
out
jmp
xlat
in
enter
in
ss
clc
stc
out
fcmovb
in
hlt
xlat
test
int
lret
xchg
ret
ljmp
and
idiv
stc
clc
clc
xchg
and
int
nop
incb
icebp
int
enter
loop
in
cmp
hlt
leave
mov
test
and
lock
cli
enter
cmp
hlt
sarl
sti
jecxz
jmp
ljmp
mov
loop
clc
in
fdivr
dec
aam
lock
cmpb
enter
test
out
lret
mov
bnd
jmp
cmp
stc
test
fsubrp
mov
out
int
ljmp
aam
in
ljmp
jecxz
flds
and
fxch
in
int
not
cmc
out
cmp
fdivrs
cmp
cmpl
out
and
out
xchg
icebp
icebp
repnz
into
cmp
jmp
xor
xlat
mul
int3
in
cmp
aas
aad
std
movb
adcb
fsubr
xlat
sar
aam
in
ret
loopne
out
neg
lret
int
filds
xchg
repnz
iret
clc
out
out
cmp
loope
xlat
cli
clc
rcr
fcomi
in
in
loop
fistl
rol
aad
out
out
ss
ffreep
mov
fstp
inc
mov
int
cli
mov
neg
xor
lret
lret
ret
loop
in
in
mov
iret
iret
lret
in
repz
jmp
cmp
sub
cmc
neg
out
mov
xchg
iret
jmp
sub
in
hlt
fmulp
xor
loopne
adc
sarb
jmp
call
lret
shrl
ljmp
cli
xor
out
shl
adc
std
fcomip
sbb
out
shr
mov
repz
ret
cmc
cld
cli
testl
ljmp
mov
hlt
adc
xor
fistpll
sub
aad
idiv
not
fisttpll
xchg
mov
ljmp
cmp
in
dec
cli
addl
lock
sar
out
out
in
cmc
iret
cmp
repz
out
loop
sti
fdiv
lret
sti
rorb
ljmp
rcl
ljmp
rol
call
fists
out
repnz
hlt
sti
cmp
sti
cmc
cmp
call
repz
fsub
test
sti
aam
out
in
in
in
mov
clc
stc
int
ss
ss
addl
xchg
xchg
fstl
into
fxch
hlt
cld
stc
ss
cmp
aam
ffreep
flds
enter
xchg
in
popl
int3
xor
shl
stc
test
hlt
test
loop
out
xlat
jecxz
out
jmp
mov
shl
cmp
roll
ret
sub
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
sahf
test
xchg
add
xor
leave
aam
idivl
jmp
decb
shl
rorl
fadd
xor
repnz
xorb
sbb
repnz
fcmovb
mov
or
repz
sti
sti
fcomp
repz
repnz
ret
loope
jmp
idiv
ljmp
mov
enter
xor
loope
rcl
out
cli
mov
fcmovnb
loopne
out
rorb
mov
xlat
jmp
leave
cmp
sarb
sarl
shl
call
mov
test
out
sub
cmp
vpslld
fcmovnbe
xor
out
aad
cmp
std
mov
lock
mov
xchg
ljmp
aaa
cmp
std
f2xm1
in
aad
xor
out
sbb
in
clc
loop
aam
cmp
test
std
fmulp
ret
jecxz
stc
ljmp
fucomip
icebp
sub
lret
int
div
roll
stc
xlat
out
cli
imul
cld
ljmp
ret
leave
test
xor
les
in
in
jmp
mov
loop
xlat
in
out
cmp
or
cmc
repnz
div
cmc
ret
fucom
fsubp
xchg
cmc
out
out
lret
int3
xor
hlt
fstp
fcomp
clc
cmp
fcmovnu
lock
aad
in
loopne
decb
in
out
rol
out
loop
cmp
jecxz
fcmovu
stc
fisttps
xor
cmc
fldz
aad
xor
xlat
shr
in
adc
rcl
ret
loop
cmc
xchg
jecxz
icebp
out
out
loope
xor
clc
sub
rcl
fstp
cld
cmp
icebp
fchs
jmp
cld
mov
xchg
mov
shlb
jmp
cmc
clc
jmp
cmc
ret
int3
testb
or
out
jecxz
out
std
aaa
fistpll
or
cli
ret
add
std
jmp
in
mov
mov
xor
fstpt
into
loop
adc
jecxz
sub
jmp
std
test
aad
sar
stc
cmp
rcl
fiadds
fadd
jmp
mov
icebp
hlt
in
shr
xor
cmp
aad
out
int
shr
test
addb
int
out
icebp
jecxz
aas
xor
cmc
cld
xor
sti
fidivrs
stc
loopne
xlat
xchg
orl
into
out
int3
loope
repz
loopne
in
cmp
shr
lret
cli
cmp
out
imul
cli
cmp
in
std
xchg
rorl
sarb
out
not
out
mul
cmp
fcmovbe
in
test
in
iret
sub
int3
cmc
rorl
mul
icebp
cmp
loope
rol
jecxz
loop
int
rcll
out
cli
jecxz
into
out
clc
iret
iret
fcmovu
cmc
xor
stc
fdiv
jmp
int3
loope
cld
ror
out
xor
lds
rcl
aad
aad
rcr
stc
cmp
hlt
hlt
fcmovnb
out
cld
or
sti
bnd
lret
xlat
aad
hlt
loope
into
not
icebp
test
sar
hlt
loope
sti
loopne
jmp
mov
lock
in
icebp
stc
out
cld
xor
repnz
test
fcmovu
xchg
cli
lret
cli
fiaddl
int
lret
cmp
fdiv
lock
inc
out
xlat
test
rol
lret
out
fst
aam
ljmp
neg
cmp
lret
ret
into
mov
loope
cld
int
mov
shl
lret
cmp
into
cmp
shl
in
addb
icebp
aam
aaa
shl
cli
in
fyl2xp1
shr
test
cli
sbb
call
enter
aam
aad
xor
cmp
in
lret
lret
ds
cld
jecxz
test
in
lea
nop
loop
jmp
xor
loope
cmp
rolb
fadd
enter
icebp
vpsrad
in
sarb
fsub
lret
div
xlat
fninit
ret
and
sub
jecxz
lock
jmp
shrl
cli
xor
cld
in
jmp
ffreep
jecxz
xchg
lea
call
icebp
icebp
rol
fmul
iret
repnz
jmp
cli
cmp
test
test
nop
div
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
sub
clc
leave
std
scas
jle
xchg
add
shr
iret
into
fxch
out
fld
lock
fcmovne
out
loopne
ds
xchg
mov
in
stc
repnz
xchg
test
hlt
test
hlt
xor
out
xlat
test
into
rcl
ret
fadd
cmp
mov
out
orb
in
aaa
cmp
cmp
fsubp
std
repnz
xlat
repnz
out
mov
fildl
cmpl
in
in
int3
int
stc
xlat
loop
div
fsubr
shr
iret
and
int3
cld
addl
jmp
ljmp
cmp
jecxz
jecxz
int
jmp
mov
xor
fadd
movl
rcr
ljmp
icebp
xchg
dec
loopne
aam
int
cmc
aaa
xor
in
cmp
aas
std
out
call
fcmovb
nop
jmp
xchg
xchg
std
nop
xchg
loop
aam
xor
cmp
cli
out
lock
ret
fsub
sti
orl
fiadds
lret
cmp
imul
cmp
mov
xlat
aam
filds
mov
jmp
in
ss
repnz
ss
out
in
aad
out
fadds
in
enter
ret
cmp
xor
fcmovbe
sar
ret
fstp
fldl2t
mov
test
inc
repz
call
cmp
int3
repz
repz
clc
rcr
movb
repnz
jmp
repnz
ret
shl
leave
jmp
cmp
shl
mov
fninit
out
mov
mov
xor
xor
cmp
in
fdivs
repz
test
icebp
loope
fildl
lds
out
in
lret
lret
shl
icebp
in
sub
std
cmp
test
lret
xor
cs
fsubr
repnz
ret
cmp
ret
vpaddusw
leave
fisttpll
aad
cmp
iret
lret
in
aam
addb
addb
ljmp
vpsrlw
aas
call
and
rcr
ljmp
out
mov
aam
icebp
xor
repz
jmp
xor
out
loop
jmp
stc
shl
xor
int
cmp
xlat
fcom
fstp
in
fdivrl
out
shl
std
leave
stc
out
out
in
jmp
adc
test
jmp
xor
loopne
repz
cmpl
lret
repnz
xor
in
not
hlt
int
cmp
in
icebp
out
jmp
in
xchg
xchg
sub
fmul
repz
sarb
leave
mov
int
enter
out
test
stc
in
aam
fdiv
rcr
loopne
leave
mov
mov
loopne
icebp
into
adcl
ljmp
test
ds
div
inc
loop
mov
test
repz
leave
cmc
cmp
cld
fxtract
fadd
int
cmp
ret
loop
cli
test
test
loope
out
cmp
fnstcw
aaa
cli
loopne
add
shl
enter
ljmp
loope
xchg
int
cmp
fnstcw
fucomi
enter
rcl
iret
ret
lock
sar
stc
or
into
shl
xlat
into
hlt
shl
aam
fst
fistpll
lret
lock
aam
out
fisttpll
mov
rcl
aaa
repz
xor
fld1
lret
aad
hlt
in
loope
repnz
rol
fdivr
call
hlt
mov
lock
xor
rolb
rcr
stc
stc
fucomp
lret
and
cli
test
xchg
out
int3
out
clc
aad
cmp
ret
testb
test
xchg
sub
lock
fldz
dec
jmp
shl
fcmovbe
xchg
ljmp
jmp
jecxz
hlt
xor
lock
leave
int3
cmp
loopne
cmc
cmc
out
fiadds
mov
in
cld
mov
nop
aad
shl
enter
out
in
repz
test
xlat
mov
mov
mov
subb
les
lock
into
xor
into
in
idiv
icebp
xchg
jecxz
out
cmp
in
mov
xchg
ss
lret
div
shl
cmp
sar
addb
leave
or
mov
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
xchg
pop
push
outsl
adc
add
test
cmc
mov
aaa
ss
aaa
call
in
shr
out
sarb
fmulp
mov
lock
jmp
icebp
out
stc
cmp
ljmp
cmp
fiadds
in
shl
std
dec
int
into
cmp
aam
lock
ret
cli
cmp
mov
in
call
repz
jmp
iret
call
iret
repz
inc
xchg
int3
into
ffreep
ret
jmp
cmp
ljmp
rcl
loope
mov
fsub
xchg
jmp
fdiv
hlt
idiv
aam
rcr
test
cmp
clc
lret
lock
fcmovnbe
test
loope
hlt
leave
aad
lret
cmp
fidivrs
xchg
jecxz
filds
mov
xor
int
lret
leave
stc
rcr
sti
cmc
repnz
rol
cmc
int
mov
rclb
icebp
ss
repz
icebp
cld
sarb
fst
div
stc
leave
aad
enter
or
jmp
imul
fcmovnbe
fsincos
sarb
fcmovnb
sarl
jecxz
fcomp
xlat
in
iret
repnz
out
int
lock
repnz
std
cmpl
ds
ljmp
lret
fcom
icebp
xor
lret
ljmp
cmp
loopne
cld
jmp
fsts
leave
shl
stc
int
cmp
fstp
int3
lret
aam
cmc
lock
fxch
fcomp
in
out
sti
lock
xor
std
ss
out
int3
into
cmp
and
aad
loop
jmp
xchg
shl
in
das
icebp
cli
iret
xlat
aas
cmc
stc
into
cld
loop
div
jmp
jecxz
int3
xchg
out
loopne
repz
sti
fnstsw
cmp
lret
ror
incb
cmc
int3
incb
jmp
stc
cmp
cmp
out
xorb
out
or
testl
cli
out
xchg
loopne
mul
shl
jecxz
cmp
aam
sarb
into
into
cmp
out
aad
in
int3
xchg
lret
ss
lret
fdivrs
cli
fdivp
cli
jecxz
inc
cli
xlat
jmp
fucomi
rolb
in
in
neg
aaa
lret
in
out
jecxz
neg
xlat
testb
lock
hlt
xchg
stc
lock
fucomi
icebp
fdivrp
fsubrp
cld
in
aam
enter
fsubr
fcmovne
repnz
hlt
subl
not
imul
leave
fidivs
ds
sti
fsub
aam
stc
mov
jmp
in
out
fsubr
cmp
out
idivb
aad
cmp
std
ret
cld
stc
mov
jecxz
fst
shl
in
fxch
fdivrl
sti
out
fstp
lret
int3
ret
fnstsw
loop
fdiv
adc
mov
cli
nop
lds
out
shr
fdivr
in
fcmovnbe
out
rcr
loope
rcl
shr
xlat
test
loop
fldpi
out
xchg
repnz
in
jmp
rcl
cmc
cmc
xor
rcr
add
loope
cmp
int
in
out
stc
hlt
aad
fdiv
cld
icebp
int
sti
ror
clc
xchg
dec
in
int
fiaddl
xchg
adc
sub
out
sti
cmc
sarb
ljmp
loop
loop
rcr
in
loope
xchg
out
in
lret
call
in
hlt
shl
hlt
shr
repz
jecxz
xlat
std
mov
and
sub
shr
shr
ror
out
in
int3
lret
ror
cmp
call
cmc
testl
out
xchg
not
xor
lds
aam
cmp
call
ljmp
xchg
loope
int
repnz
aaa
in
jmp
clc
aas
loope
cmp
xlat
test
cli
mov
jmp
jmp
jmp
repnz
in
loopne
cmc
cmp
call
out
in
fdivr
lock
call
cmc
xor
hlt
cmp
clc
rcl
stc
loop
fcmovnb
ffree
testb
arpl
add
add
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
push
aas
add
lock
fildl
ljmp
ss
ret
cld
cmp
ret
incl
test
xchg
out
rcl
repz
jmp
fsubr
cmp
xlat
clc
sar
ret
fucomip
lret
xlat
sbb
call
fcom
ret
out
cmp
fdivp
hlt
sbb
into
testl
lret
mov
mov
test
out
shr
mov
cli
fdivrs
cmp
out
ret
clc
out
movb
loop
sar
enter
std
lret
repnz
rol
stc
cmc
loopne
mov
loopne
xor
iret
jmp
cmp
hlt
int3
fsubrp
cmp
addl
mov
loopne
in
into
int3
jmp
repz
shrb
stc
cmp
ljmp
jecxz
test
fadds
jecxz
orl
xor
div
ss
das
out
imul
or
idiv
rcl
aam
fisttpll
mov
shl
mul
shr
fdivrp
repnz
rcl
aad
fadd
sti
leave
test
lret
lds
xor
icebp
lret
cmp
jmp
repnz
idiv
in
stc
fucomi
mov
out
jmp
out
call
jmp
cmp
cmp
fcmovnb
xchg
test
call
jecxz
mov
rorb
in
xlat
call
cmp
not
stc
out
aad
int
out
enter
ljmp
jmp
aam
cld
loope
rcr
fsub
addb
test
std
rcr
fsubrp
in
lock
fadd
out
sbb
int
in
in
out
adc
in
xor
std
bnd
cmp
icebp
cmp
loope
out
shl
xchg
shll
jecxz
fdivr
out
cmp
into
rcr
rcr
test
add
fiadds
fstp
aam
xor
ss
cli
not
jmp
test
aad
cmp
xlat
fucomp
adcb
repnz
in
rcl
rcl
jmp
cld
cmp
out
fdivp
mov
cli
adc
cmc
jmp
in
aam
leave
cmp
or
fstpt
test
lret
enter
mov
repnz
into
rcr
in
out
fcmovbe
std
fcmovb
sar
call
mov
loope
test
sti
decl
cmp
repz
fucomp
rolb
ret
in
sti
out
incb
xchg
icebp
cli
xor
in
icebp
iret
aas
fucom
call
ds
sti
loop
xchg
loope
addb
int3
xlat
jmp
fnstsw
fdivrs
hlt
hlt
clc
aas
cmc
ret
rcr
mov
xlat
call
jmp
aam
cmp
fdiv
repnz
ret
loopne
xchg
xor
cmp
repnz
iret
not
cmc
cmpb
repz
testl
mov
loopne
int
int
out
in
into
cld
incb
call
mov
out
std
add
repz
loope
ss
cld
cmp
in
sti
int
ret
ds
stc
in
in
mov
leave
test
jmp
shl
jecxz
icebp
out
repz
aas
idivl
cmp
clc
mov
ljmp
mov
int
cli
call
ljmp
mov
fdiv
test
incb
test
ljmp
fdiv
in
shl
cmp
aas
int3
out
fdivp
int
mov
jmp
repz
loopne
repz
xlat
aad
rol
xlat
ljmp
out
sti
fsubp
repz
jmp
sti
fcomi
in
repz
in
cmc
adc
aam
in
fimull
sub
faddl
icebp
in
fdivrl
loopne
sarl
cmp
cmp
cld
int3
lret
call
out
loop
cli
hlt
xor
repnz
loopne
cld
rcr
test
shlb
les
add
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
mov
jle
rclb
mov
call
idivl
leave
sar
sub
lock
fildl
in
test
mov
enter
enter
fstp
cld
out
rol
test
ljmp
in
fucom
ret
xor
into
hlt
jmp
lock
lock
iret
ret
rcr
aad
call
ficoms
fcomp
int
int3
xlat
repnz
cmp
repz
sar
imul
cli
test
in
mov
out
test
in
rcr
stc
cmp
rcl
cld
sbb
incb
iret
call
ljmp
stc
clc
test
cmpl
lea
mov
into
sub
repnz
fmul
rcl
incl
xchg
lock
leave
lock
fbstp
into
lret
fldl2e
rcr
fdivrp
stc
loop
jecxz
jmp
enter
test
call
fdivl
imul
out
clc
out
and
test
into
jecxz
xchg
xchg
test
sub
fdivrl
cmc
rcl
fdivr
cli
std
in
in
mov
mov
lock
icebp
jmp
cmp
ss
int3
iret
fdiv
roll
mov
jecxz
mov
out
out
iret
enter
cs
std
lock
cmp
shl
fcomi
ret
cli
mov
and
jecxz
xchg
fdivrs
jecxz
call
aam
shl
std
cmp
xor
sub
inc
in
hlt
and
xor
leave
int
xor
in
mul
rol
mov
mov
ret
out
fcmovne
mov
ret
cs
enter
ljmp
sti
lock
hlt
cli
out
idiv
lret
xchg
jmp
xlat
xor
clc
repnz
out
in
shr
hlt
and
test
addl
xchg
test
sub
sti
in
stc
lret
cmp
out
cmp
rcr
jecxz
fcom
leave
fcomip
cmp
cli
nop
in
in
out
xlat
stc
fsqrt
jmp
incl
out
adc
aad
div
out
cmp
sti
cmp
int
xlat
std
out
int
xchg
call
mul
fiaddl
int
jmp
xor
cli
rcl
xor
aam
cmp
rorl
cld
loope
enter
hlt
in
aaa
cmp
into
test
ljmp
out
incb
leave
das
leave
ror
aad
jmp
cmp
mul
hlt
repnz
test
mov
xchg
ljmp
xor
lret
rolb
fildl
out
xchg
repnz
xchg
loopne
in
cmc
shl
iret
fmul
fucom
test
in
loop
enter
idiv
mov
repz
lock
nop
not
jmp
fidivs
test
aas
xchg
xlat
loopne
test
test
rorl
repz
in
sarl
clc
int
aad
repnz
loopne
jmp
icebp
out
leave
lock
out
int3
cmp
jmp
test
std
sti
loopne
repz
loop
mov
in
ret
loopne
xlat
fcmove
stc
sar
hlt
aas
ret
aaa
loope
in
clc
jmp
leave
loop
call
loopne
loope
icebp
repz
iret
iret
idiv
cmp
fdiv
in
fadd
lret
mov
out
std
lock
jmp
jmp
cli
test
xchg
shl
fyl2xp1
testb
rcl
jecxz
iret
sub
int3
cmc
xlat
lret
clc
shl
cmc
cmp
xlat
icebp
repnz
rorb
enter
fsubr
fsubrp
testl
loop
out
cld
xchg
loop
lock
div
jmp
fdivr
rolb
repnz
ret
ret
mov
fst
xchg
mul
lret
stc
vpmulhw
and
fadd
mov
fninit
jmp
lea
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
leave
push
cli
pop
mov
jle
repnz
test
repnz
loop
out
das
lret
fyl2x
aas
icebp
aas
xchg
xlat
lret
test
mov
in
leave
ret
icebp
int3
fcmovne
lret
jmp
fcmovu
ret
idiv
cli
jmp
incb
lret
xor
cld
out
idiv
repnz
out
test
test
in
or
into
sbb
aad
stc
enter
int
shl
fiadds
rcl
in
cld
xchg
fmull
hlt
not
neg
fcmovnbe
fptan
dec
sar
fstp
fadd
stc
fsubr
test
nop
loope
nop
xchg
test
repnz
aaa
ds
fnstcw
int
cmp
ret
imul
lret
lret
icebp
test
out
rcl
clc
sar
cmp
stc
aam
cmp
aad
ror
clc
shl
in
lret
loope
sbb
lock
cmp
aaa
leave
loope
hlt
sarl
sar
loop
lret
cmp
out
fcomip
jmp
fldpi
ljmp
cmp
cld
iret
cld
stc
addl
cmp
repz
shlb
jmp
repnz
fsub
neg
ljmp
rolb
xor
in
fucomp
call
repz
ds
test
mov
int
icebp
out
divb
sarb
fxtract
iret
ss
sar
std
out
cld
repnz
mov
aad
ffree
mov
xchg
in
into
iret
xor
jmp
fcomp
sbb
cmp
sbb
iret
fcmove
std
loope
in
fyl2xp1
aam
cmp
in
out
fnstcw
lock
shl
xchg
fldln2
test
jecxz
fcoml
out
call
jmp
rol
aam
repz
out
enter
or
shrb
cmp
stc
fyl2x
cmp
ds
cld
aas
test
ljmp
lret
in
stc
shl
sti
fnstenv
fcomip
fcomip
ret
repnz
cmc
xor
ljmp
imul
out
iret
aam
sti
fsub
lock
add
xbegin
enter
lea
enter
out
sarb
fcomp
icebp
cld
rolb
fiadds
xchg
ret
out
sar
in
aaa
repnz
fcmovbe
cld
shl
lret
nop
int
cld
iret
out
into
xchg
cmp
cmpb
into
fcom
ffree
mov
call
mov
in
sub
clc
ds
sar
test
loop
decb
addb
aam
loop
out
leave
cmp
lock
out
sti
mov
neg
lret
addl
out
out
cmc
stc
loopne
cmp
ret
repz
in
std
rcll
in
sar
ds
ljmp
test
add
mov
in
leave
cld
mul
out
sub
enter
ds
out
fsub
test
cmp
fdivr
lds
loop
in
or
xorl
rcr
iret
repz
jmp
sbb
cmc
aam
test
mov
mov
aas
jmp
repz
shr
shr
testb
cli
into
cld
jmp
in
hlt
hlt
cmp
std
out
ljmp
ffreep
stc
jmp
int3
sub
xchg
xor
clc
in
fptan
cmp
lret
fdivp
aad
roll
loop
push
in
int3
not
clc
loop
clc
in
shr
aas
repz
jecxz
incl
lret
in
mov
xor
aaa
out
not
shl
in
aad
xchg
xchg
rol
jecxz
jmp
out
out
shl
in
into
fcmovu
cmp
call
cld
cmp
repz
xchg
add
mov
sti
clc
loopne
in
xchg
mov
in
std
fnstcw
cli
fabs
jmp
sub
aam
xchg
ljmp
inc
lock
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
xor
sub
aas
add
jmp
in
xor
aaa
repnz
sbb
addl
stc
addb
adcb
xor
aas
fnstcw
cmp
std
cmp
ljmp
in
fcos
out
xlat
clc
cmp
xor
neg
lret
decl
or
rcl
sub
xlat
shr
xlat
aaa
icebp
fnstcw
xlat
fdiv
in
fstp
mov
mov
out
nop
lock
int3
xchg
ret
fdiv
lock
cmp
loopne
aad
cmp
jecxz
xlat
xlat
test
testb
nop
loopne
ret
xor
fcomi
enter
rcr
cmp
stc
ret
and
addb
in
into
in
into
fsubr
jmp
jmp
fcomip
mov
cmc
clc
and
in
icebp
repnz
int3
ror
int3
int
aam
fcmovu
repnz
cmp
in
ficoml
mov
ror
ljmp
fistpll
iret
test
bnd
rcr
in
adc
mov
hlt
xor
cmp
xlat
in
cli
lret
cmp
cmpl
call
cld
fisttps
rcl
fucomi
stc
int3
lret
cmp
clc
cmp
div
in
sbb
enter
in
xchg
icebp
loopne
stc
out
in
jmp
lock
loopne
loop
int3
vpsubq
jecxz
loope
xchg
out
out
jmp
in
in
fdiv
cmp
cmc
add
loope
enter
ljmp
call
int
fdivp
ss
fsin
cmc
cmp
incl
loop
jmp
in
out
aam
loopne
idiv
div
ror
into
in
cmp
mov
mov
fsub
dec
in
in
xchg
xor
ror
test
in
clc
repz
faddp
fsubr
enter
mov
out
leave
out
loop
cmp
sarb
cmp
stc
test
out
test
aas
mov
in
jmp
xor
ret
int
out
repz
cmp
rol
cmp
loop
flds
int3
rcl
icebp
enter
xor
repnz
ss
cmp
rcr
fst
out
fcmovnbe
xchg
cli
loope
repz
in
fdivs
lock
cmp
aas
fcmovne
lret
sti
cmp
mov
lock
out
mov
hlt
lret
int
cmp
sti
xlat
out
shl
in
sarl
hlt
filds
out
fcmovne
cmc
xchg
leave
call
out
ror
out
cmc
icebp
sti
addb
jmp
xchg
xchg
subl
aam
ror
std
cmp
lock
xlat
cmp
rcr
clc
incl
shr
loopne
aad
cmc
idiv
cmp
ss
cmp
ss
xlat
ret
in
mov
cmp
mov
lret
out
xor
xor
rol
xchg
movl
out
out
sarb
lret
ds
ljmp
loope
test
cld
loope
call
out
lret
out
out
in
fcmovu
cli
hlt
cmp
aad
rcr
out
fiadds
int
leave
sub
stc
call
xlat
fdivr
shl
repz
fmul
fidivrs
jecxz
in
sub
lea
sarl
enter
div
fmulp
fadds
fprem1
ljmp
in
cmc
repnz
int
cmp
aad
loope
cmp
aam
call
fdiv
call
in
jecxz
repz
call
cmp
div
jmp
ret
fndisi(8087
stc
lret
and
jecxz
cmp
mul
hlt
aad
sarl
cli
loop
cmp
orl
out
in
push
call
cli
cmc
sar
iret
jmp
in
std
testb
xchg
xchg
out
xchg
jecxz
lret
aaa
fxch
loopne
lret
int
sti
fldl
clc
in
mov
sub
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
sar
xchg
xchg
rol
xor
xor
cli
sar
rcl
cld
icebp
in
fadd
sarl
inc
test
out
nop
mov
out
in
cmp
das
xor
in
shl
cmc
push
int3
fiaddl
out
ror
fninit
leave
fxch
icebp
cmp
push
out
sarl
inc
mov
iret
fucomp
xchg
loop
imul
clc
shl
cmp
lret
cmp
fmul
fsincos
jmp
jmp
out
call
in
nop
xor
shr
fbstp
cld
cmp
int3
idivb
add
ret
fucom
xchg
or
adcb
neg
std
xor
call
cmc
ss
mov
imul
hlt
sti
mov
nop
loope
std
out
iret
xor
repnz
xor
shr
ror
int3
cld
adc
in
fmulp
into
clc
cld
test
nop
iret
test
in
not
iret
int3
iret
leave
cld
adc
cld
call
rcr
xor
jecxz
cmp
fdivrp
test
jmp
in
into
std
into
clc
loopne
fcomi
rcr
cli
fadd
leave
loop
decl
into
rclb
int3
cmp
leave
cli
faddl
mov
leave
fucom
loop
lock
in
xor
rcr
aas
loope
fidivrs
xlat
out
test
repz
in
and
mov
hlt
ror
out
shl
enter
fnstsw
fdivrp
orl
repz
icebp
rcl
call
in
icebp
in
cmp
cld
out
cmp
idivl
stc
cld
loope
xchg
loope
repnz
fcomip
fadd
icebp
cld
out
ss
aaa
repnz
out
addb
enter
mov
shl
out
neg
out
repz
xor
jmp
iret
in
cli
lock
jmp
fdivr
fstp
mov
aam
icebp
jecxz
out
ss
std
sti
in
xlat
into
rol
fidivrl
not
mov
add
fstp
xchg
out
xchg
xchg
loope
xor
cmp
cld
out
jmp
cmp
cmp
fcmovnu
mov
rcr
in
cld
mov
xchg
lret
cmp
aad
into
cmc
faddl
fstp
fdivrp
and
xchg
aad
lret
imul
lret
cmpb
loope
xlat
shl
enter
lret
fcmovb
loope
test
lock
jmp
rcl
in
ret
ds
fsub
loop
in
out
out
out
out
lret
int
jmp
sarb
ret
aas
test
mov
or
rol
div
cli
in
rcl
shl
xchg
fdiv
testb
int
ror
in
loope
sub
cmp
lret
cld
cmp
in
loop
out
ret
ret
jmp
fucomip
loop
rorb
cli
cli
hlt
repz
shr
out
flds
dec
int3
out
nop
fucomp
fidivrl
divl
sbb
out
test
shr
in
cli
vshufps
fsubr
call
xor
cmp
fidivrl
aad
repz
stc
fld
dec
repnz
xchg
aad
out
int3
sti
out
idivl
sarl
or
leave
fcmovne
sub
int3
fucomp
in
xchg
xchg
cs
out
iret
enter
into
loop
repnz
mul
sti
out
loopne
shl
adcb
int3
lret
not
aad
into
cmp
and
mov
fxch
out
jmp
jmp
inc
in
xor
out
icebp
sti
cld
repnz
not
shl
cmc
in
fdiv
mov
aam
fdivr
jmp
aaa
jmp
iret
in
jecxz
loop
cmp
mov
test
ror
in
xor
cli
xor
cmc
cld
mul
fiadds
fcomi
idiv
out
test
shl
mov
aam
xor
repnz
hlt
incb
rcl
lret
cmc
in
fsubp
enter
mov
aam
int
xor
in
cmp
out
test
cmp
jmp
in
out
xchg
mov
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
mov
pop
fwait
dec
jle
aas
add
test
ljmp
ss
fcmovnbe
iret
incl
fdiv
adc
leave
rorb
repnz
fidivrl
shl
out
xor
ds
loop
in
clc
add
fsubrp
ljmp
leave
rol
rcl
iret
call
fidivrl
in
faddl
jecxz
fldl
ljmp
idivl
idivl
cmp
jecxz
clc
mov
testb
addl
xlat
rcl
aaa
xlat
int
cmc
test
aad
filds
nop
out
cld
into
jecxz
jmp
leave
out
in
repz
cmp
repnz
in
fsubr
out
loopne
in
ss
in
sar
std
cmp
aam
test
out
fsub
xor
test
and
shlb
enter
int
cld
out
cmp
testl
lret
mov
loopne
mov
cmp
divl
sti
in
ds
icebp
clc
ds
rol
cmp
frndint
enter
adc
xchg
dec
out
xor
lret
out
fincstp
cmp
out
xchg
and
xchg
hlt
in
enter
shl
iret
in
cmp
cmc
lds
icebp
push
fiadds
int
into
out
fdiv
cmp
clc
cli
mov
mov
sbb
into
popl
in
cmp
cmp
cli
test
sti
in
leave
in
fcomp
xchg
fmull
vpsrld
cmp
lret
fcmovnu
cmp
cld
aad
call
loop
cmp
call
ret
cli
cli
enter
jmp
sbb
leave
jmp
call
icebp
xchg
and
clc
enter
fsubr
ljmp
clc
jecxz
clc
mov
out
call
jecxz
icebp
cmp
out
aam
cmp
iret
cmp
test
xchg
aam
in
ffreep
in
jecxz
mov
repz
in
in
xor
roll
fdivr
ret
call
cmc
jmp
call
lret
cmp
aaa
loop
rolb
lret
testl
lret
in
cli
repz
in
fcmovnbe
aam
stc
loop
aam
in
in
xchg
iret
fisttpll
xor
std
out
in
ds
out
repz
rol
int
xchg
lea
jmp
cmc
in
in
repz
jmp
sti
cld
in
fsubp
mov
les
lret
out
fists
xor
out
cmp
lock
rol
cmc
add
xchg
sti
jecxz
out
hlt
out
or
repnz
aaa
xor
lret
icebp
sub
std
aam
ret
cld
mov
test
fidivl
int3
aad
shl
rcl
aam
loopne
ds
roll
lret
into
stc
shl
out
xchg
xlat
repz
fdivrl
fidivrl
cmc
hlt
hlt
clc
fcomp
loope
aam
cmp
xchg
fstp
into
rcr
hlt
int
aam
std
cli
repnz
rol
incb
aad
lret
fcmove
std
ror
out
xchg
rol
jmp
ljmp
int
not
test
in
in
mov
in
out
xchg
mov
fcom
rcl
in
aas
loop
rcr
icebp
stc
ror
ret
lea
fsubrp
loope
repnz
out
lret
out
clc
xlat
aad
fmulp
sti
xlat
leave
sar
vcmppd
xchg
jmp
fidivs
xor
rcr
leave
cmp
jmp
shr
shl
in
xlat
add
and
in
nop
into
shr
xor
clc
cld
ffree
sti
int
les
cld
sti
cli
leave
xchg
xchg
ret
xor
sti
ror
loop
in
xchg
xchg
fisttpl
cli
jecxz
loop
xchg
enter
jecxz
leave
aad
out
shl
aas
rcr
fsubr
incl
sti
jmp
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
ret
mov
jle
aas
add
ljmp
in
cmp
roll
sarb
jmp
fldl
jmp
test
aad
call
cmp
lret
rol
out
mov
loope
int3
mov
addl
aad
icebp
icebp
loope
loopne
cmp
fxch
popl
test
ss
ror
aaa
into
addb
shl
xlat
mov
cli
xchg
ror
xor
sti
clc
cmp
stc
iret
fdivp
out
ret
jecxz
lret
fildl
rcl
out
jmp
stc
lret
fidivrl
xchg
idiv
xor
fcmovne
mov
lock
in
lock
cli
div
ds
repnz
sti
ljmp
mov
repnz
enter
shr
ffree
test
xchg
lock
mov
xchg
ljmp
jecxz
divb
lret
out
ljmp
sbb
fsubr
mov
and
aaa
ss
xor
enter
jmp
ret
test
inc
cli
movl
call
out
fucomi
in
ljmp
out
sti
sub
ljmp
vpmullw
out
shll
out
idivb
fcmovbe
rcr
shl
repz
loop
mov
ret
lret
enter
lock
xor
out
int3
ds
aam
test
rcl
mov
loope
neg
orb
fdivs
out
hlt
das
fsubp
in
into
cmp
xchg
fcmovnbe
cmc
xlat
repnz
rol
fsubr
fucomi
das
enter
clc
test
out
loopne
loop
loop
sbb
xor
xor
dec
loope
cmp
add
test
fiaddl
fucomi
lret
std
rol
loop
loop
in
std
shl
iret
neg
fiaddl
and
stc
test
loope
lret
lret
rcr
int3
sar
cld
out
loope
testb
or
call
shl
out
hlt
out
aas
into
test
rcr
in
mov
fdivr
in
xchg
rorb
aam
stc
out
icebp
idivl
in
clc
cmp
std
sub
mov
out
addl
into
xor
stc
lret
fndisi(8087
sar
adc
fcmovnb
test
loopne
fcmove
incl
rol
loop
xor
aas
cli
lret
in
into
in
iret
sub
shl
sub
out
enter
stc
fstp
cmp
lret
clc
xchg
in
sti
shr
out
test
out
lret
in
xor
fiadds
in
jmp
aad
jecxz
lea
hlt
decb
repnz
cmp
shr
sarl
jecxz
ds
out
ret
in
mov
int3
in
xchg
loop
xor
cld
rcr
out
aam
in
shr
xlat
ret
stc
fadd
lock
sti
int
out
mov
enter
neg
xor
ret
cmp
xlat
mov
loopne
imul
int3
les
xor
repnz
cli
std
faddp
rcl
mul
aad
lret
mov
loopne
xchg
aad
loope
loop
fdivl
cmp
test
loop
cmp
fsubr
fmull
shl
les
ret
cmp
enter
jecxz
xlat
cmp
loope
fmulp
cli
ficoml
jecxz
shl
cmc
in
clc
rcr
lret
shr
iret
int
rcr
mov
aam
cli
nop
test
rorb
ret
aam
aad
xor
aas
ret
icebp
aam
add
loopne
cld
loopne
xchg
out
mov
cmc
xlat
fcmovbe
iret
enter
aad
clc
into
fstp
mov
std
loope
hlt
aas
mov
dec
mov
in
cmp
cmp
sarb
cmp
std
mul
ljmp
lock
out
out
mov
mov
jmp
ret
ror
ret
rcl
je
repz
sbb
add
in
rcl
out
xor
idivl
ds
ds
cmp
out
loop
cld
loop
in
stc
xchg
movb
fdivl
aaa
cmc
sti
cmp
icebp
xlat
sti
lock
loop
loopne
loopne
enter
loop
lock
icebp
enter
loope
aam
xlat
in
cld
ret
or
xlat
mov
mov
int3
out
xor
int
cmp
shl
in
ret
sar
ffreep
leave
fdiv
lds
out
shr
loop
aad
rcl
fmul
repz
ret
hlt
out
mov
cli
lret
xchg
sti
int3
lock
int3
xor
cmc
iret
stc
inc
rcl
cmp
out
ret
idiv
call
xchg
nop
decl
xor
in
out
xor
fdivrp
addb
jmp
iret
out
loopne
xchg
stc
int3
ljmp
in
sti
div
hlt
ljmp
loopne
std
icebp
loopne
jecxz
fstpt
ffreep
ljmp
aad
in
hlt
mov
std
adc
xchg
mov
shl
lret
cmp
aaa
sti
cmp
xlat
into
ffree
test
aas
loop
test
xchg
sub
int
ret
xor
cld
stc
iret
std
cld
shl
cmp
faddp
not
test
fcmovne
in
ljmp
out
jmp
jmp
stc
out
loope
out
sar
fabs
mov
test
int
sub
lock
repz
hlt
not
sarl
fiaddl
rcl
loope
loopne
loop
loop
shl
nop
loope
shll
cmp
int
roll
not
enter
in
lock
xchg
xchg
aam
mov
xor
jmp
aaa
xlat
cmp
addb
fcom
jecxz
mul
icebp
lea
xor
shl
cld
in
ds
xor
mov
xchg
sub
nop
std
int
xchg
xor
ljmp
cmp
aad
shl
ds
fsub
cmp
sti
idiv
in
cld
into
jmp
jmp
int3
icebp
fcomi
fcomip
fyl2x
loop
cli
enter
loope
clc
fisttpll
aaa
in
leave
cmp
lret
loopne
lret
fnstsw
sar
call
test
leave
jecxz
fiadds
sub
stc
rcr
aad
aas
std
xlat
icebp
fiaddl
repz
xchg
repz
xor
ror
int3
in
xchg
xlat
loopne
fucomi
lret
mov
loope
icebp
repnz
clc
cli
in
fdivrl
ret
xlat
into
cli
aad
sbb
int3
cli
jecxz
loope
lea
loop
ljmp
leave
lret
out
adc
xlat
xlat
leave
test
lret
test
stc
in
mov
mov
jmp
ror
fdivp
cmp
jmp
xchg
rcl
aas
loope
sub
std
int3
xchg
aaa
das
int
ljmp
loopne
sar
hlt
call
enter
ffree
out
lock
aaa
xor
sti
fucomi
idiv
aad
test
out
test
rolb
iret
cs
into
loop
cmp
add
flds
loope
mov
into
aad
lret
cmp
jmp
xlat
cmp
loop
cld
les
mov
xchg
test
int
out
xlat
iret
cmp
shr
sbb
or
call
out
out
in
out
test
in
int3
xor
cld
out
out
shl
stc
int
std
clc
fcmovnu
out
loop
cmp
ror
cli
fst
icebp
add
stc
fcmovnbe
test
leave
loop
out
in
xchg
lock
shl
div
shll
xor
fcmovne
cld
cmp
cmp
fdivp
aas
xchg
imul
loope
in
xor
out
in
out
xlat
cmp
cmp
aas
jmp
enter
mov
int
fiadds
jecxz
lret
cmp
repz
fdivr
jecxz
add
test
fcmovnbe
test
fcmovne
rcll
add
add
iret
vpaddusw
fstp
pop
mov
outsl
push
inc
neg
pop
jle
aas
add
in
out
into
cmc
int3
aam
sti
iret
cmp
cmpb
add
loop
mov
sti
rcll
sarl
out
rcr
fdivp
idiv
shl
aam
fabs
in
std
jmp
icebp
mov
out
mov
lret
cmp
std
cmp
cli
cmp
shr
rcr
incb
cld
xchg
lret
mov
xor
cmp
repnz
aam
fstp
repnz
rol
orl
xchg
in
loopne
rcr
repz
out
lock
not
xchg
mov
fcmovbe
fstp
xchg
out
in
int
xor
fsqrt
in
not
xchg
jmp
enter
lock
mov
out
ljmp
cmc
std
shl
iret
in
testb
in
addl
les
lret
fsub
aam
shl
loopne
rolb
aas
test
lock
loope
in
test
jecxz
in
iret
hlt
xlat
lret
sub
ss
loope
cli
rcl
loop
jmp
iret
lret
nop
out
cmc
out
call
repnz
fcos
test
iret
ret
out
test
int
int
mov
out
int3
iret
int
cli
sti
iret
shr
std
repz
fidivrs
incb
movb
out
xchg
fcomip
hlt
in
fcmovnbe
out
ds
xlat
cmp
out
addl
leave
lret
in
lret
xchg
iret
xchg
call
shl
not
xor
in
sti
stc
iret
icebp
xchg
clc
lret
loop
mov
loop
out
test
shl
hlt
int3
fcmovne
iret
shlb
stc
hlt
repz
in
cmc
test
mov
mul
in
fldpi
aas
rcl
iret
stc
cmp
loopne
orb
lea
ljmp
ss
aas
std
cmpb
hlt
mul
stc
xlat
xchg
in
jecxz
mov
aad
jecxz
sarl
hlt
ljmp
ds
fsub
aam
fimull
mov
mov
lret
xlat
aam
jmp
imul
xor
cmpb
div
loop
flds
jmp
shll
xor
cmp
cli
cmp
cld
jecxz
cmp
xchg
mov
call
jecxz
iret
enter
ror
cli
sar
int
lock
jecxz
cmp
jmp
leave
cld
xchg
lea
int3
enter
fmul
fmul
xor
test
std
sti
jmp
sti
jmp
int3
aad
shl
ss
cmc
repz
lret
std
lret
cli
std
ljmp
fsubp
xchg
xchg
divl
jmp
std
repz
fcmove
int3
cmp
aaa
ds
cli
in
loopne
orb
fidivrl
out
ljmp
in
repz
xlat
aas
xchg
ljmp
sub
shr
jecxz
xor
cmp
sti
out
fdivrp
aad
clc
ret
cmc
cmp
loope
fucompp
sbb
jmp
jmp
clc
ror
out
fcmovne
out
shl
out
shl
fneni(8087
ret
mov
jmp
loop
out
xchg
out
xor
ss
cli
cli
cmp
pushl
ret
aad
hlt
cli
fdivr
cld
ret
mov
aad
sar
shlb
jmp
cmp
fdivr
sti
cmp
sti
loopne
decb
out
call
xor
out
xor
aad
aad
sbb
ror
fxch
out
out
ljmp
enter
call
lock
fdivrp
loop
aam
sbb
ftst
loope
out
aaa
xor
out
stc
xor
cmp
stc
aad
fcmovbe
push
rol
fdivr
loope
fcmovne
decb
xchg
icebp
loop
out
fsubr
clc
sbb
cmc
loopne
cmp
mov
out
test
repnz
fcom
xor
aaa
cmp
int3
idiv
sarb
loopne
xlat
neg
cmc
or
lret
cld
adcb
xor
leave
fnop
aaa
int
ret
cmc
shl
loop
stc
shl
xlat
addl
ror
add
jmp
fcom
xlat
push
xlat
outsb
sarb
pop
jle
aas
add
lret
enter
cli
in
repnz
iret
int
rorb
fxch
jecxz
sbb
aad
aad
aam
aam
jmp
rcr
sar
jecxz
icebp
xchg
xlat
fisttpl
lret
xchg
mov
int
xabort
clc
cmc
lock
mul
repnz
sbb
int3
cli
loop
into
xchg
mov
ret
in
int
cmp
shl
out
hlt
and
cli
in
jmp
lock
shl
cmp
leave
leave
enter
cmp
ss
xchg
adc
enter
rorl
iret
in
xor
sti
into
in
fstp
rcl
out
sti
into
ret
cli
leave
loopne
ret
icebp
cmp
int
enter
cmp
cmp
stc
xlat
cmc
ffree
ret
aad
fxch
mov
repz
mov
jmp
leave
lock
cmp
out
jmp
out
sti
jecxz
out
fildl
ljmp
in
rcr
int3
call
ds
fdivrp
fyl2xp1
mov
loope
pause
loopne
xor
xor
iret
faddl
icebp
xchg
jmp
jmp
int
add
enter
les
cmp
adc
xchg
jmp
faddl
jmp
jmp
mov
aad
in
fdiv
icebp
sti
xor
fucomp
mul
loope
shl
fmuls
int
jmp
loop
jmp
repnz
not
hlt
ss
shl
vpaddq
lock
mov
jmp
adc
in
jmp
jmp
stc
xacquire
ret
loopne
in
ror
fdivp
sbb
call
loope
repz
repnz
loop
test
xchg
ret
mov
in
addb
fdiv
out
into
out
fcmovbe
loope
test
clc
hlt
cmp
sub
fsubr
stc
fldl
xchg
cs
ds
jmp
out
mov
ljmp
stc
shl
lock
out
sub
out
iret
idiv
xlat
enter
shl
fistpll
ret
fadd
out
out
fsub
xchg
xchg
out
out
rcl
stc
int
fxtract
push
loope
out
jmp
out
mov
sub
jecxz
out
cmc
ljmp
loopne
ret
xlat
in
mov
stc
sti
loope
int
hlt
aas
rol
ss
shr
clc
ljmp
rol
in
cld
stc
lret
int
in
test
into
xor
shl
repz
test
loopne
lret
jmp
int
ror
ljmp
xor
iret
aad
xor
aad
ret
ret
addb
xchg
mov
xor
loop
sti
xlat
lret
loop
idiv
cmpl
incb
mov
xchg
mov
ljmp
cmp
in
in
into
ret
filds
xor
mov
ror
lock
cmc
in
sub
sti
adc
test
ds
add
in
mov
xchg
repz
xor
fsub
rcl
cld
enter
shl
ss
fadds
aas
jmp
loope
fistl
xor
cmp
into
cld
cmp
call
lock
aam
stc
rorb
mov
aam
cli
vpsrlq
shr
loopne
lock
xlat
shl
loope
aad
lret
in
fdivr
in
hlt
lret
in
out
std
fucom
cmp
test
ret
call
imul
stc
and
jecxz
lock
repnz
in
out
fdivrp
cmp
vmovq
and
test
xchg
shl
loope
loopne
in
cld
ljmp
fsubrp
cli
ret
xlat
aad
sti
sti
or
in
fucomp
addb
fdivr
fcom
cmp
cli
loopne
out
shl
cli
testl
loop
jmp
cli
jmp
cld
call
jecxz
hlt
rorb
out
in
xchg
into
cmp
je
push
push
mov
jmp
rcl
rol
rol
rcl
mov
xchg
addr16
popa
jle
aas
add
out
fsubr
test
fiaddl
loop
jecxz
cld
call
mov
jecxz
cmc
and
hlt
xor
hlt
sti
fstp
icebp
sarl
in
in
loopne
int3
ffreep
clc
mov
jecxz
cmp
in
int
jmp
fmuls
cmc
out
sti
add
cld
fimuls
call
xlat
cmp
rolb
aam
jmp
ljmp
ljmp
aaa
aam
jmp
xor
rolb
jmp
call
test
aaa
enter
rcl
ror
lds
out
mov
lea
in
ror
xor
cli
out
rcl
fnstcw
icebp
ret
xabort
idiv
enter
in
jmp
aad
icebp
into
iret
cmp
loope
xor
push
fcomp
sti
xlat
jecxz
fisttpl
iret
in
mov
hlt
in
leave
fmul
out
cmp
into
jecxz
out
mov
repnz
mov
xchg
in
icebp
shl
lret
shl
out
shl
into
ret
sar
call
stc
leave
fmul
jmp
fcmovnbe
repnz
lock
sti
jecxz
enter
int3
lock
cmp
rol
fadd
loop
int3
into
xchg
icebp
in
in
cmp
cmp
cmp
cmp
fildl
idiv
mov
test
out
xchg
out
xor
aam
idiv
std
int
aaa
aad
shl
cmpl
loop
jmp
sbb
fmulp
repnz
shlb
lock
fcmovne
std
aad
ret
aam
loopne
neg
fcomip
ret
cld
fiadds
or
sub
ror
call
cmpl
in
mov
call
jmp
hlt
xor
enter
div
lret
cli
ffree
repz
xlat
mov
cli
fcmovne
in
int
fdivp
icebp
xlat
lret
xlat
jmp
cmp
fmul
cld
shl
out
shl
call
dec
xchg
repz
cmp
iret
fmul
rolb
stc
enter
in
fsubr
test
aam
cmp
xlat
shr
adc
sti
rol
fadd
ds
int
int3
sarb
shl
xor
aam
sub
aam
aad
out
stc
adc
cld
ljmp
out
test
ljmp
in
repnz
iret
int
imul
call
out
int3
repnz
lret
subl
in
out
enter
aam
cmp
loope
fimull
lock
fucomi
in
xor
aad
lret
cmp
jmp
jmp
jecxz
leave
ret
in
les
out
ljmp
fidivrl
stc
call
aaa
cmp
fcmovnu
cmp
mov
xchg
iret
icebp
fsubr
in
jmp
out
loope
sub
fld
jmp
movl
lret
lret
repz
fcmovnu
cli
xor
rcr
fcmovnb
ret
stc
cld
fyl2xp1
test
shr
lock
ljmp
xor
fdiv
fistpll
in
fldl
stc
ror
in
fsubr
in
loop
aam
cmp
repz
loope
in
cmp
fadd
mov
in
dec
enter
in
ret
hlt
out
cmp
int
cmpb
clc
into
ds
jecxz
cmc
in
out
test
int3
enter
cmc
enter
clc
fneni(8087
ret
fmull
fmuls
into
int
jecxz
sub
sarl
icebp
fidivrl
sar
cld
mul
rcl
adc
cld
out
into
mov
adc
out
repnz
bnd
aam
incb
in
clc
icebp
loop
fildl
das
ror
out
shll
in
rcl
cli
iret
int
repz
iret
shrl
xor
fnstcw
call
rcr
faddl
loope
xchg
stc
mov
mov
xchg
rol
xor
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
and
and
jle
add
in
in
repz
aaa
cmp
cmp
in
clc
xchg
std
in
xchg
out
mov
lea
ljmp
in
aam
cmp
cli
in
leave
jmp
mov
loope
in
xor
ljmp
cli
cmp
in
out
mov
aam
orb
iret
out
out
enter
fldlg2
ljmp
repnz
ret
lret
dec
xchg
xor
mov
fbstp
shr
icebp
cmc
enter
xor
shl
fcmovbe
cli
rol
repz
or
in
roll
call
loopne
ret
rol
ljmp
loope
iret
push
xchg
hlt
xor
leave
in
sub
in
lock
loope
icebp
loope
les
jmp
loope
xor
int3
xchg
lds
iret
call
repz
int3
cmp
stc
fcmove
xchg
xchg
test
sub
idivl
out
call
ror
aas
cmp
aam
clc
out
ror
ret
rol
xlat
cmp
repz
loop
sbb
in
fiaddl
clc
fcom
sti
xchg
into
fldl
ss
aad
cmp
stc
cmp
shr
call
test
cld
lret
out
call
loope
lret
ror
rcl
icebp
lret
sbb
xlat
test
cmp
xchg
out
into
enter
pushl
imul
int
cli
not
fdivr
test
jmp
repnz
lret
xlat
imulb
fcmove
int
hlt
fcomip
fsub
loope
sbb
jmp
jmp
cli
orb
int3
xor
aad
sar
xor
repz
and
out
aad
in
in
xor
out
lret
call
repz
or
ds
enter
in
cmp
adc
hlt
rcr
cmp
loop
cmc
shl
ret
fadd
mul
out
lock
out
repnz
bnd
aad
loop
out
das
fistpll
repnz
int3
loope
aad
out
jecxz
faddl
in
cld
xchg
xchg
cmp
cld
out
loopne
cli
fdivr
shl
test
jmp
icebp
std
jmp
ret
hlt
in
jmp
in
aas
cmp
hlt
std
call
cld
cmp
ljmp
repz
aas
loopne
aad
iret
rcl
aad
int3
into
out
lock
ss
in
fcomi
repz
std
sarb
addl
loopne
out
orl
ss
leave
fxch
jmp
cmp
ds
sar
rolb
nop
int3
iret
jecxz
out
ljmp
lret
loope
addl
loopne
imul
jmp
xchg
xchg
mov
rcl
hlt
aaa
in
aad
shl
sti
cmp
repnz
ret
out
mov
lret
ljmp
aam
into
repz
fmul
int3
push
fidivrl
sar
call
jmp
xlat
ss
in
xor
loop
sar
fptan
sti
ret
std
leave
mov
lret
loop
out
loopne
enter
cmp
lock
cmc
into
int
shl
ds
enter
jmp
loopne
xchg
in
cmp
jecxz
xor
in
repz
hlt
out
ret
call
fmul
fcoml
out
int
aam
jmp
lret
test
xor
ret
loopne
jecxz
lret
fsub
mov
aas
loopne
lret
cmc
out
out
int3
aas
aas
std
xlat
fdivrp
fcmovnbe
clc
ffree
hlt
mov
icebp
mov
xor
repnz
icebp
cmc
cli
in
in
loop
incl
and
lret
lret
int
icebp
ljmp
icebp
xor
out
cmp
ret
cli
call
movb
lea
imull
repnz
in
cmp
idivb
out
rol
cmp
flds
test
xor
in
aam
aam
jge
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
mov
push
jle
add
out
sti
sarl
rcr
xor
cmp
ret
aad
ret
mov
loop
enter
loopne
ret
fcmovne
fidivrl
push
xlat
cld
aam
aam
icebp
aad
jmp
enter
adc
cmc
icebp
lret
cmp
cli
int
sti
inc
out
ret
mov
int3
mov
int3
xor
into
aam
cli
cmp
aad
fadds
or
clc
out
out
faddl
enter
lock
int3
aam
cmp
fdivrp
sti
fimuls
fldl2t
sti
ljmp
xor
jecxz
int
aaa
cmp
lret
call
in
rcr
loop
aad
lea
loope
out
lock
lock
clc
leave
shll
loope
ffreep
fildl
xchg
lret
lret
mov
mov
aam
ds
loopne
icebp
leave
shl
fsubrp
sti
mov
push
xchg
in
std
test
shlb
stc
ret
std
cmc
idivb
out
sti
out
ret
and
mov
lret
cmp
mov
loop
in
xor
hlt
int
loopne
cmp
fdivr
cli
fdivp
xchg
xchg
mov
in
sti
xchg
mov
cs
fdiv
clc
into
xor
in
loope
ret
stc
fdiv
mov
mov
orl
int
cli
int3
repnz
fst
out
ds
stc
stc
aas
fld1
in
in
or
loope
mov
jecxz
sti
clc
xor
int3
cmp
ret
test
lock
mov
int3
fiadds
out
lret
out
aad
enter
ds
cmp
stc
shr
in
mov
lea
jmp
in
cmp
das
sti
cmp
ret
test
std
ret
mov
repnz
ljmp
leave
loopne
iret
test
cmp
int3
and
xchg
shlb
lock
not
clc
jecxz
aas
test
shl
out
or
loop
fisttpl
xor
les
fucomi
rolb
rcr
xchg
orb
cli
mov
cmp
cmp
fnstcw
aam
jmp
add
out
ljmp
iret
jmp
call
ss
fmul
repz
repz
and
movl
in
aad
aad
ror
cmp
test
loop
jmp
fcomip
test
sub
out
clc
cmc
cmp
fidivrs
fadds
leave
loop
neg
std
nop
imul
lock
sti
divl
hlt
fistpll
idivl
fistpll
ret
xchg
ds
leave
mov
mov
aas
xor
fucomi
out
fdiv
cli
not
in
in
cmp
sbb
repz
cld
fisttps
jecxz
out
leave
lret
lds
int3
idivl
fidivrl
clc
cmp
shr
stc
movb
mov
cmc
out
iret
in
int3
repz
leave
cmp
addl
and
xlat
inc
lret
call
ljmp
cmp
lock
test
xchg
aad
enter
lret
lret
icebp
mov
jecxz
lret
aad
aam
sti
repnz
cld
xor
div
mov
int3
loop
call
fsincos
jmp
lret
jmp
loope
sbb
hlt
lret
fadd
test
adc
ret
shl
into
lret
aaa
loopne
addb
out
ret
xchg
jmp
addb
cmc
enter
lret
fdivrl
test
xlat
mov
lret
sti
sbb
in
std
cld
loopne
cmc
repnz
int3
ljmp
clc
ret
mov
mov
decl
lret
fsubr
jmp
ss
int
and
call
icebp
leave
rolb
icebp
test
ljmp
jmp
iret
repz
adc
mov
test
xor
in
pop
mov
jmp
aam
fadd
fstp
pusha
shl
sub
jmp
outsb
jle
aas
add
sarb
lret
int
cmp
cmc
cmc
cld
in
in
repnz
jmp
loopne
sub
loop
enter
repnz
loope
loope
hlt
xor
jmp
mov
xlat
lret
in
cmc
lret
ds
test
test
mov
mov
xchg
jmp
jecxz
int
out
int
fidivrs
fmul
repnz
icebp
mov
in
stc
fsub
cld
repnz
divb
icebp
repnz
ljmp
repz
hlt
xlat
fisttpl
repz
cmp
cmp
ffree
xlat
xchg
shl
repz
fdivr
mov
xchg
fisttpll
cmp
jmp
shl
std
fsub
repz
fdivr
ftst
fldz
mov
out
mov
out
aaa
loop
shrl
ror
loopne
fcmovu
icebp
ret
xchg
test
xlat
dec
in
enter
repz
ss
leave
out
lock
xor
repz
faddp
call
sti
test
test
mov
int3
in
sarl
call
hlt
rcl
cmp
out
aad
mov
ret
les
xchg
mov
mov
mul
cmp
leave
iret
in
out
repnz
aad
stc
add
sbb
jmp
aam
out
icebp
in
jmp
clc
cmp
cmp
idivb
test
roll
std
in
int
and
into
cmc
jecxz
lret
out
int3
aam
jmp
fdivrs
in
repnz
les
loope
fdivr
jmp
xchg
cmc
xchg
icebp
out
lret
cmp
sarb
out
mov
mov
mov
mov
leave
lock
mov
int3
xchg
aaa
shll
cmp
repz
repnz
ljmp
xchg
ffreep
fcom
mov
int3
jmp
out
sbb
enter
repz
dec
iret
int
movb
stc
fimull
loopne
sarl
cmp
cmc
cmp
fxch
cmpb
lret
iret
dec
xchg
nop
hlt
in
not
int
shll
int
icebp
fcmovnu
neg
hlt
inc
fcmovnbe
in
in
fsubp
fisttpll
xchg
xor
into
into
rol
lret
cmp
sar
sbb
enter
orb
icebp
loop
test
icebp
fldl2t
xor
idiv
shl
loopne
sti
ds
xchg
flds
shr
shl
into
ss
test
in
loop
cli
rol
clc
fadd
stc
int
stc
orl
leave
sub
xor
out
cmpl
cld
aas
test
div
out
into
mov
mov
mov
fidivl
ds
lock
jmp
mov
sub
aam
loop
int3
out
fucomp
icebp
clc
cmp
rcr
fadd
sti
fst
rcl
test
repnz
int3
ret
ret
enter
loopne
iret
call
fcmovnbe
cmpb
mov
out
stc
fcmovnbe
into
int3
rcll
neg
int3
xor
sub
loopne
jmp
loop
stc
mov
out
out
jmp
into
aam
clc
out
cld
fidivrl
xlat
fsubp
incb
fucom
jmp
cli
out
test
out
in
fsincos
in
in
std
iret
cmp
cmp
hlt
shl
mov
in
cli
in
out
cmc
aad
vpsubd
cli
cmp
cmp
fdivrs
sbb
aam
fdivp
ljmp
into
xchg
shl
in
repz
iret
lret
lret
aam
lock
fptan
ljmp
xor
sub
in
xor
icebp
aad
cmp
sti
incb
test
sub
test
cmp
jmp
fnstsw
rolb
test
in
fsubp
in
in
loopne
in
repz
repz
xor
fsub
repz
aas
repz
out
lds
std
cmc
xor
xlat
aad
repnz
shr
iret
cli
inc
cmp
ret
mov
fabs
xlat
std
orb
loopne
out
aaa
out
cmp
push
adc
shr
add
add
fcomp
fistps
je
shlb
fs
jle
add
lret
fprem
cmp
cmp
ret
addb
lock
loopne
xchg
xor
in
ret
int3
cmp
hlt
into
fdiv
fcomi
ror
xor
std
or
cld
loop
xchg
cld
int
xchg
sub
div
out
fsubr
stc
rcr
cmc
in
mul
cmp
fadds
fsubp
out
nop
adc
ljmp
cmp
loop
fucomi
decl
jecxz
cld
fisttpll
out
lock
cmp
roll
out
in
jmp
icebp
lock
clc
shr
ror
clc
leave
cmp
shl
fnstenv
cmp
and
cld
jmp
int
lret
xor
cmp
fld1
sar
hlt
repnz
ret
mov
in
std
leave
fld
xchg
enter
mov
ret
leave
cld
xor
int
aas
clc
int3
std
in
test
xchg
fucom
clc
adc
and
out
enter
aad
enter
std
and
stc
jecxz
roll
fmuls
repnz
fdivl
lret
jecxz
sarl
fucom
stc
fucomi
out
lret
out
leave
out
div
fcomi
std
shl
shl
idiv
cmp
in
fcmovne
mov
imul
in
ljmp
jecxz
ret
cmp
iret
cmc
iret
add
fsub
mov
mov
jecxz
loop
icebp
mov
shl
aam
in
xor
aas
imul
cmpl
flds
hlt
ljmp
out
test
repnz
cli
xlat
cmp
cmp
ss
int3
std
add
ret
xchg
jecxz
in
out
iret
mov
in
lret
in
out
rcl
iret
ljmp
aad
fadds
ret
neg
rorl
shl
clc
shll
xor
clc
fxch
stc
cmp
hlt
fsqrt
fsub
jecxz
cld
repz
ljmp
sub
cmc
fprem
sti
call
cmp
aam
cmp
call
sub
enter
mov
shl
xor
xlat
fsubrl
sar
ror
addb
shl
aad
stc
ljmp
decb
aad
cld
sti
fiadds
xlat
leave
aam
ret
xchg
mov
lret
xchg
out
xor
cmc
out
in
xor
rolb
sti
aam
fisttps
stc
int3
xchg
xor
stc
jmp
rolb
lret
loop
mov
test
ljmp
cmp
ljmp
shr
in
lret
orb
xchg
xor
cmp
ror
into
icebp
imul
shl
out
jmp
ljmp
shl
clc
cmp
clc
ljmp
out
shl
jecxz
mov
in
jmp
aam
xchg
xor
hlt
aad
ljmp
xor
not
mov
and
test
sub
jecxz
xor
or
jecxz
std
out
fnstsw
xor
fists
test
out
ror
jmp
leave
xlat
ret
shl
jecxz
test
sub
ret
lret
loop
ljmp
jmp
out
cmp
cmc
shl
shl
xlat
mov
lret
out
icebp
sub
xchg
loop
into
not
repnz
ljmp
loop,pt
xchg
lock
repnz
xchg
leave
in
repnz
iret
jmp
out
std
out
repnz
aad
jecxz
ror
int3
jmp
call
sub
xor
lret
xor
addl
in
loope
nop
out
ss
out
ror
cmp
in
neg
clc
hlt
hlt
les
incl
loop
ljmp
fdivl
fdiv
jecxz
std
aad
mov
fcompp
fcomp
leave
sub
in
cmc
loop
clc
ret
in
ror
sarl
into
fdivr
loope
rcr
ljmp
into
test
in
in
leave
out
lret
add
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
cmpl
ja
jle
add
pushl
idiv
xor
out
test
shl
rol
add
iret
cld
repz
orb
hlt
xor
ret
and
ret
test
cli
loopne
sti
mov
lret
sub
sti
div
cmp
std
loopne
jecxz
hlt
std
aas
aam
aam
ds
in
in
fisttpll
int3
call
fdivr
inc
iret
addb
mov
out
in
sti
lret
xchg
aam
cmp
in
div
fdivr
into
hlt
fnstsw
ret
ret
fdivr
test
add
xchg
decl
repz
ss
fadd
aam
jecxz
xchg
loop
loop
mov
mov
jmp
shlb
xor
enter
rcr
cmp
hlt
in
fcmovu
push
xchg
mov
std
icebp
in
f2xm1
lds
fldz
icebp
loope
incb
xlat
mov
xchg
xrelease
icebp
out
xlat
out
ds
cmp
fprem
test
fcmovnu
neg
lock
call
repz
cmc
aam
aaa
fcom
adc
loope
aad
out
loopne
sbb
ficoml
loope,pn
iret
call
aas
hlt
cmp
icebp
stc
sar
ljmp
out
mov
aam
repnz
enter
clc
int3
clc
iret
shl
cld
lret
jmp
in
mov
shl
in
jmp
icebp
dec
xchg
int3
fldl
ror
aad
aad
hlt
sarb
rcl
sbb
fcmovbe
fcomi
jmp
ret
ljmp
jecxz
fstpt
cmc
jmp
jecxz
loope
aas
stc
jecxz
in
xchg
fldln2
and
icebp
shr
ss
hlt
cmc
ljmp
iret
fdivr
repz
orb
leave
fxch
out
int3
in
out
cmp
fld
cmc
xor
aam
filds
adc
nop
icebp
test
out
cmp
jmp
out
idiv
cli
out
loop
fiadds
sar
loop
lret
ljmp
fcmovnu
das
iret
out
aaa
and
rol
lock
lret
addb
test
out
std
jmp
fidivrs
rcl
xlat
aas
faddp
in
loope
jecxz
loope
test
mul
cmc
xor
enter
fdivrl
ss
loope
loop
mov
addb
int3
test
call
fpatan
repnz
in
xlat
icebp
loope
jmp
leave
rcr
fsubp
xchg
test
mov
int
xlat
xlat
aaa
cmp
loopne
jmp
test
fdivr
in
in
loope
xchg
fld
xor
cmp
fdivrl
jmp
xor
rolb
lret
mov
xchg
mov
shl
rcl
aaa
sti
in
out
clc
xor
shl
stc
repnz
roll
mov
sti
jmp
xchg
int3
xor
shr
cli
fdiv
cmp
out
cmc
jecxz
call
rcr
in
aam
in
orl
xchg
sub
fcomi
into
dec
aas
addb
test
stc
neg
xchg
xchg
lock
loop
test
idivb
cmc
fscale
in
loopne
jmp
fstp
cmpl
fucomp
lret
xchg
shl
enter
enter
adc
rcr
xchg
into
into
rcl
loopne
test
rol
lret
cmp
out
ds
int3
cmp
loope
test
in
fmulp
in
int3
into
ljmp
stc
fcmovnbe
fnstenv
jmp
xlat
aas
hlt
jmp
in
clc
call
loop
hlt
das
jmp
shl
cmp
jmp
out
hlt
adc
cmp
in
xlat
nop
mov
or
stc
fxch
int3
lret
cli
fnop
stc
cmp
in
xchg
stc
clc
loope
loop
mov
jecxz
mul
clc
repnz
out
sarb
shr
cld
loopne
adc
in
mov
xor
ljmp
fdivr
xor
jmp
int3
rol
aad
pop
pop
movsb
or
push
jle
aas
add
sti
loope
clc
jecxz
sbb
jecxz
sub
jmp
test
int
xor
sti
shl
repnz
in
sti
xchg
ret
aad
loop
iret
loope
int3
shl
push
xor
rol
fcmovne
leave
cmp
ds
loope
cmp
cmp
in
jecxz
ror
lds
clc
lock
in
lret
cmc
fnstcw
div
mov
mov
in
enter
aaa
out
sti
sar
hlt
loope
lret
fcomi
fdivp
loopne
mov
orb
mov
loop
int3
cmc
hlt
cli
aad
out
call
repz
test
in
fadds
mov
hlt
ret
xor
cmp
int
aad
out
div
rol
and
test
in
ret
jmp
cld
sar
ljmp
in
sbb
call
xchg
fcomip
sub
jmp
int
ds
lock
out
rolb
loope
hlt
icebp
cmc
fucomip
loope
stc
rcr
shr
call
ret
clc
ret
add
int3
iret
out
in
out
out
repz
xor
divl
sarl
stc
mul
sar
aam
ret
fisttpll
lret
jecxz
xor
lret
cmp
hlt
clc
fmul
out
cmp
in
stc
ret
sarb
not
fadd
in
stc
jmp
in
sub
aam
repz
push
lret
cmp
cmp
test
flds
fxam
xchg
sub
lret
in
into
fmul
cli
fucomip
shl
in
cld
hlt
ret
cld
cld
cmc
cmp
orb
out
fcmovu
out
hlt
aas
stc
aam
iret
std
aad
xor
fsubp
fiadds
fcmovne
xchg
aad
aad
fcom
fcmovnu
ds
xlat
ffree
in
shl
out
ret
cmpb
ljmp
or
lock
fidivrs
adc
out
loop
int
lea
xchg
cmc
shl
sarb
cmc
xlat
enter
iret
loope
repz
bnd
lea
mov
shll
xor
repz
fcmovnbe
int
sti
sti
in
ds
test
mov
ror
std
xchg
ret
aaa
idiv
sar
in
out
lret
out
loop
sar
ret
aad
test
xchg
in
jmp
loopne
lret
stc
out
leave
fdivrl
xchg
ljmp
xchg
xchg
repnz
iret
int3
cmp
test
leave
fucompp
lret
stc
ret
sbb
in
fucomp
cld
xchg
xchg
enter
leave
out
aam
xor
in
out
ret
repz
mov
into
std
sti
aam
mov
in
aam
lock
lret
xor
fcomi
leave
test
lret
ror
mov
stc
xor
ror
fsubr
cmp
aas
loopne
rol
jmp
fscale
roll
repnz
ss
cmp
cld
cmp
repnz
cmpl
shl
in
fimull
sti
in
xchg
ss
leave
ss
cmp
into
xlat
test
ljmp
mov
rol
hlt
fldl2e
icebp
cmp
cmc
cmc
clc
aaa
loope
in
jecxz
rcr
lret
sbb
fcoml
into
in
int
out
cmc
jmp
iret
roll
std
movb
icebp
loop
icebp
adcl
in
leave
test
loopne
sbb
fucomp
sub
mov
loope
jmp
cmp
in
lret
int3
rol
in
not
mov
cmp
loopne
in
in
loopne
hlt
shlb
in
out
enter
lret
repz
enter
xchg
incl
int3
cli
ljmp
sbb
jecxz
aam
jecxz
sti
fisttpll
incl
ljmp
clc
fneni(8087
fidivs
repz
ret
mov
fcmovnb
in
fists
aad
call
add
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
cs
cs
jle
add
cmc
sti
cmp
div
std
out
fiaddl
jmp
shr
nop
shr
repnz
fstpt
aad
adc
xchg
leave
cli
stc
in
repnz
out
call
shr
lock
aam
xor
cmc
push
iret
icebp
les
loop
mov
cli
repz
cmc
xor
xor
out
out
imul
imul
cli
shl
ret
jmp
mov
lret
iret
int3
ljmp
xor
sar
xor
cmp
lret
aad
sarb
roll
call
loopne
ficoml
ljmp
cmp
repz
into
test
leave
ret
in
xlat
in
lret
sub
out
xchg
out
xor
lret
cmp
into
clc
sti
mov
cmp
stc
iret
int3
loope
in
lret
sub
jmp
aad
clc
aas
out
test
stc
xchg
fcmovne
jmp
aam
test
imul
xor
adc
rol
xchg
mov
jmp
enter
icebp
out
sti
cmp
jecxz
xlat
fucompp
in
sti
fucomi
jmp
jmp
fimuls
cmp
cmp
lret
fiadds
rolb
movl
das
iret
out
clc
sarb
cmp
aad
shr
shl
into
cmp
jmp
stc
int
jmp
test
enter
lock
fxch
repnz
iret
hlt
hlt
xchg
jecxz
fldl
test
shr
xchg
cmc
out
shl
test
ds
cmp
clc
aas
out
std
fdivp
ret
repnz
out
lds
loope
div
call
cmp
icebp
loop
aam
std
test
lret
out
loopne
xchg
rcl
fsincos
hlt
icebp
lret
enter
jecxz
ret
aam
ret
addb
fldl
in
ljmp
shl
repz
stc
test
aad
imul
fiadds
xchg
in
loop
aaa
mul
repz
jmp
clc
in
out
xor
repnz
out
xchg
ljmp
not
in
in
cmp
repz
int3
in
cmc
into
ret
call
int3
ljmp
icebp
divl
xor
int
xlat
jmp
cmp
sti
out
clc
cmp
stc
mov
orb
mov
out
xor
in
fsubr
hlt
shl
cld
xlat
fnstcw
fisttpll
repnz
shll
imul
ds
loop
iret
fsin
hlt
repz
aas
call
loop
loope
ss
aad
cmp
shl
hlt
repz
int3
std
sar
shr
ljmp
repnz
loopne
fmulp
lock
out
hlt
jmp
std
lock
lock
rcl
clc
aam
fst
sub
sti
call
ror
aam
jecxz
in
shlb
or
aas
out
in
rcl
fcom
xlat
leave
mov
shr
mov
icebp
test
hlt
ss
sti
stc
cmp
fcomi
fdivrl
int3
fdivrs
fyl2xp1
in
stc
fsubp
mov
loope
mov
into
in
shl
sar
fdiv
loopne
sti
int3
repz
jmp
mov
sti
mov
cmc
in
lret
ljmp
test
fucomp
cli
aas
cmp
jmp
roll
lock
adc
sti
in
out
std
jmp
jmp
lret
call
loope
aam
xor
test
aas
iret
cmp
out
orb
xchg
xchg
xchg
mov
ror
out
ss
sti
fcmovbe
into
ret
fdivp
mov
jecxz
mov
loop
std
xor
aad
cld
dec
rcr
fidivrl
fcomip
fadds
cmc
nop
adc
filds
test
int3
fstpt
jmp
lock
aaa
jecxz
loop
test
out
jmp
xchg
out
in
test
fxch
bnd
aas
fcomip
filds
sti
out
lret
loopne
lret
xchg
xchg
aad
ror
enter
out
lret
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
adc
add
aas
add
lret
loopne
cmp
icebp
ds
ret
fscale
ffreep
cli
leave
ljmp
out
ret
xor
int
ror
cmc
repz
cmp
lds
stc
rorb
xlat
fdivs
out
lock
sar
out
aam
xchg
loop
iret
add
xor
int
repnz
enter
not
aam
loop
enter
mov
int3
jmp
fmul
out
sti
sar
cmp
aaa
cmp
jecxz
push
ret
movl
rcl
fldl2t
aad
leave
int3
lret
in
fstp
call
les
nop
mov
mov
shlb
out
xbegin
shr
cmp
loope
out
int
test
rcl
ret
in
jmp
idivb
cmp
into
loop
enter
loop
in
mov
mov
stc
in
hlt
dec
cmp
jmp
rcl
ds
call
and
out
lea
ret
in
loopne
xlat
loopne
out
fstp
call
sti
sub
mov
ljmp
neg
xor
fsubr
out
jecxz
cmp
mov
fildl
mov
int
ljmp
sarl
out
loope
sarl
repnz
std
movl
jmp
lret
in
out
fistpll
out
fnstcw
shl
sar
rcr
out
jmp
mov
aam
in
aaa
fxtract
lret
in
loop
aas
loop
rol
call
xchg
or
mov
in
loop
rcr
cmp
cmp
sub
fmulp
cli
in
mov
mov
leave
test
ljmp
fsubr
fcmove
in
cmp
fcomip
frstpm(287
sbb
nop
out
out
leave
addb
in
ss
jmp
in
cmc
out
fpatan
call
leave
stc
in
decb
jecxz
fnstenv
int3
aaa
cmc
rcr
out
not
rcl
fcomp
aad
loope
mov
lret
sar
loop
ljmp
repz
out
stc
repnz
sar
call
fstp
enter
mov
xor
fidivrs
out
jmp
rcl
std
cmc
loop
jecxz
flds
in
in
xor
xlat
in
rcr
clc
lret
stc
test
faddp
enter
cmc
idiv
call
fdivrp
xor
jecxz
in
fstp
cmp
shl
fdiv
loop
aad
fucomip
pop
fcos
loope
xchg
mul
xor
ret
call
aam
xor
fiadds
mov
loope
in
enter
xor
out
fiaddl
adc
cld
test
lret
fcomp
jmp
lret
fisttpll
out
mov
fcom
roll
jecxz
cmc
out
xchg
xlat
mov
enter
xchg
shl
repnz
cs
fdiv
rol
mov
out
jmp
call
in
jecxz
ftst
out
xor
aas
sub
icebp
in
cli
sti
jmp
clc
jmp
out
loop
loop
iret
fcmovnbe
repz
aaa
aaa
lret
fdivr
iret
fcmovbe
not
xchg
xchg
std
int
loope
out
nop
ret
das
div
shr
enter
stc
loope
sarl
loopne
loopne
out
out
jmp
out
into
lret
aaa
cld
aaa
fmul
ffree
icebp
cmp
xlat
inc
clc
mov
cmc
notb
xchg
stc
xor
aas
aam
adc
roll
mov
lret
shr
hlt
in
xor
xor
cld
icebp
sbb
aas
sar
filds
fildl
out
jmp
ret
int3
in
in
ljmp
xlat
sar
and
cli
fcmovbe
iret
mov
cld
fists
in
stc
out
fucomi
cmp
lret
rcl
sti
call
call
enter
nop
xor
loop
mul
lret
sti
rorl
test
sub
add
add
add
into
aam
aad
fst
stc
hlt
stos
xchg
xor
sub
sub
jg
aas
add
int3
rcr
stc
fdivr
test
fninit
sti
lds
addb
xor
fsub
cli
aas
iret
aad
faddl
icebp
int
out
call
xchg
xorl
stc
loopne
iret
addl
int3
loop
xchg
xor
sar
jmp
in
ret
hlt
cli
ret
out
in
test
loopne
leave
jmp
int
lock
clc
cli
into
test
fptan
sti
in
clc
sti
and
xchg
int
fcoml
lret
out
out
jmp
cmp
test
loope
mul
xchg
jecxz
call
call
ror
shl
ljmp
iret
and
adc
sti
lret
lock
fdiv
testb
in
leave
out
fistpll
fcmovnbe
cli
fnstsw
call
ljmp
out
xchg
sub
jmp
fdivp
in
lock
mov
in
dec
into
xchg
in
ret
cmp
stc
iret
int
fcmove
sti
mov
fcmovb
int3
aas
mov
out
xchg
rorl
fld
rol
xlat
rcl
ljmp
fadd
loop
filds
mov
cmp
cmp
jmp
in
cld
clc
repnz
aam
fmull
fcmove
xchg
int
fmulp
call
xor
aas
repnz
rcr
loopne
call
test
xor
cld
std
cmp
call
icebp
sti
not
icebp
in
fdivr
in
ljmp
lret
fsubrp
ss
mov
loope
in
ffree
fmul
repnz
hlt
into
loope
in
repz
std
ss
cmpb
ror
cmpb
nop
leave
std
icebp
shl
cmc
sti
cmp
lret
cmp
icebp
test
lock
std
in
jmp
fdivrp
loop
xor
hlt
ss
mul
shl
ret
xlat
repnz
cmp
mov
loop
aaa
repnz
aad
int3
not
into
roll
ds
in
hlt
clc
stc
in
sti
xchg
out
icebp
loop
leave
lds
les
fiaddl
clc
shr
out
mov
xchg
enter
test
ror
cmp
leave
jecxz
adc
cmp
std
xchg
xor
idiv
aad
idiv
xlat
lret
aam
repnz
cld
out
mov
and
icebp
fcmovu
out
adcl
lret
repz
incl
sbb
loope
ret
fucom
or
clc
in
iret
div
sti
aaa
neg
in
lret
cmp
fnstsw
cmp
out
lret
call
jmp
inc
ret
aaa
aaa
repnz
enter
fdiv
test
in
shr
stc
leave
test
fcos
xchg
mov
loopne
iret
leave
out
ljmp
in
cli
loopne
xchg
addb
enter
int3
ljmp
rcr
std
cmp
iret
sar
hlt
xchg
lret
test
xchg
in
xor
shl
divl
enter
int3
call
lock
ret
roll
loope
std
fucomip
in
out
imul
cmp
call
shlb
ffreep
std
jmp
loop
sub
lock
jmp
shll
shl
xlat
cmp
jecxz
rcl
in
ffree
lret
lret
into
mov
hlt
fld
std
cld
in
shr
cmp
ds
cld
loop
out
xlat
out
jmp
iret
ror
mov
xor
fcmovnb
ljmp
test
adc
jmp
mov
in
rolb
ss
repnz
cmp
out
repz
xlat
leave
ftst
cld
fcmovbe
loope
icebp
xchg
out
xor
jmp
ljmp
fdivp
rol
icebp
sti
call
out
test
int
vaddsubps
xor
out
stc
jmp
movsbl
jmp
aam
aad
fstp
movsb
ficomps
cmp
or
jle
add
out
shl
rol
out
shl
loop
lds
hlt
std
test
rcl
call
icebp
std
shl
loop
ret
sti
enter
int3
xchg
cmc
shl
in
out
ret
stc
ror
sti
fld
loopne
cmp
ret
ljmp
mov
in
xchg
xchg
ret
out
cmp
cld
sti
iret
call
filds
mov
clc
clc
out
iret
test
loope
xor
cmc
sar
aam
jmp
stc
out
aam
clc
mov
mov
int3
fsubrp
jmp
out
xor
aad
leave
lret
in
lock
xlat
test
int
mov
ffreep
mov
out
ljmp
cmp
xlat
in
fsqrt
cld
cli
in
fucomi
call
mov
in
in
cmp
xor
lret
cmp
cmc
fiaddl
cmp
fcmove
lret
aam
hlt
aaa
lds
out
frndint
cmp
addb
loope
loop
out
sbb
int
repz
clc
call
cli
sarl
out
or
not
add
mov
fcmovnb
into
shr
rol
int
aaa
sti
fdivs
lret
icebp
adc
cmp
filds
loope
mov
in
repz
hlt
sub
in
fnstsw
fnstcw
cmc
repnz
fdiv
repz
xchg
mov
xchg
bnd
iret
into
test
test
cmp
neg
jecxz
out
clc
int
lock
ljmp
cmp
stc
in
fdivrp
rorl
in
in
repnz
or
fcmovb
cmp
lret
out
cmp
xchg
and
lret
or
ret
leave
neg
ss
repz
cmp
fdiv
mov
jmp
leave
loopne
leave
mov
out
lret
rcl
xor
repnz
test
filds
sbb
int
nop
out
xchg
in
ss
xor
ljmp
xlat
repnz
or
in
fsqrt
jecxz
mov
jmp
out
cmp
fdivp
les
out
cld
incb
jmp
loope
leave
in
cmp
enter
test
fucomi
jmp
loopne
in
mov
xor
stc
clc
jmp
cli
out
cli
shl
cmp
shl
adc
lret
loope
xchg
in
enter
fsubr
lret
ror
in
cmp
jmp
int
std
jmp
jmp
out
clc
aad
lret
cmp
loopne
shl
repz
add
incb
nop
in
jecxz
enter
xor
in
stc
ds
div
in
cli
sub
mov
rolb
jmp
cmc
fdivrl
repnz
fsubr
rcl
adc
jecxz
aad
lret
xlat
test
call
shl
idiv
jmp
rol
cmp
rcl
jmp
xchg
loopne
int
cld
mov
enter
int3
sti
cmp
cmp
out
repz
clc
test
test
roll
in
repz
aam
xor
in
aam
fstp
fsincos
in
fadds
sub
nop
test
nop
jmp
repnz
clc
xor
cld
cmp
fucomip
jecxz
repnz
cmp
movb
out
mov
repz
repnz
sti
rcl
hlt
lock
aad
out
jecxz
test
shr
loope
into
cli
jmp
into
ds
adc
mov
jmp
std
ljmp
rol
clc
cli
aad
rcr
fsubr
fchs
icebp
loopne
mov
call
fcomip
xchg
iret
out
std
aaa
cli
ror
repz
xchg
jecxz
mov
cld
leave
fsubp
xchg
fsubr
into
repnz
fprem1
cmp
cmp
in
xor
xlat
fdivr
fdivrp
cmc
test
into
jecxz
out
lock
in
shl
repnz
jmp
jmp
cld
cld
divb
shr
add
add
lret
enter
int
cltd
movsb
imul
pop
xchg
jg
stos
adc
aas
add
sti
xor
test
into
mov
xchg
icebp
mov
mov
repnz
xor
lock
jmp
cmp
repnz
loope
loop
iret
xchg
clc
mov
mul
loope
lret
xchg
lret
xchg
loopne
fsubr
ss
ss
clc
shl
aas
xlat
iret
cli
repz
mov
int3
test
iret
rcl
lret
cmp
shlb
out
ret
repz
in
add
cld
call
loopne
sub
xor
repz
fdiv
ror
test
stc
aam
out
std
cmp
ljmp
call
fcmovnu
cmp
fcmovu
flds
lock
out
in
mov
cmp
hlt
in
xor
int3
cmp
test
xchg
leave
lret
loope
mov
call
xchg
cmp
repz
cmp
into
rcr
testb
in
int3
rorb
fcom
out
call
cmp
and
out
xlat
neg
out
in
xlat
leave
addl
xor
xlat
shr
aaa
repz
hlt
aas
in
repz
out
test
idiv
ljmp
sar
fcom
cmp
into
rcr
clc
fcomp
sti
ljmp
in
xchg
lret
fcmovu
test
in
adc
shr
cmc
enter
std
jmp
rorl
not
out
shl
sarl
fidivrl
idivl
iret
aad
rol
jmp
mov
enter
sar
cmp
repz
aas
push
shl
fcmovbe
icebp
sub
test
int
jmp
hlt
out
cmp
fidivrl
fidivrs
xor
xlat
flds
icebp
out
add
test
xor
aad
cmp
out
fabs
ror
sbb
hlt
jmp
loop
nop
xchg
in
jmp
loope
icebp
out
repz
aam
hlt
xor
xrelease
lea
out
nop
rol
out
ret
lret
in
ds
cld
aam
into
jecxz
cmp
mov
out
loope
jmp
xor
stc
ds
shr
xlat
fdivrl
xchg
icebp
mov
test
mov
cli
icebp
into
sti
ror
xor
out
cmp
cmc
test
idiv
in
addl
mov
int3
hlt
out
out
lock
cmp
cld
repnz
loopne
fdiv
into
stc
rcl
in
cli
or
lock
aam
leave
aas
cmp
shl
xchg
ret
ret
loop
mov
loope
in
shr
aam
xorb
cmc
and
cmp
rol
call
test
lret
int
sar
out
fsubr
loop
in
ds
xlat
lds
call
loopne
fnstcw
out
in
ss
repz
iret
out
add
fadd
out
loope
jmp
repz
mov
aam
icebp
std
cmc
rolb
fmull
jecxz
cli
loopne
mov
stc
xor
divb
cmp
cld
int
ret
xchg
sub
aad
mov
cli
xor
iret
loop
rol
cmc
jmp
repnz
icebp
lret
stc
cmp
in
cmp
fcmove
in
fcmove
in
shl
fucomip
xor
stc
hlt
cmp
cmp
fucomip
ret
loop
fucom
loope
cld
ficoms
into
mov
lret
ds
mov
std
aad
jecxz
in
mov
fucomip
xchg
test
loope
into
call
enter
test
xlat
cli
roll
xchg
lret
lea
in
xor
lock
cmp
cmpl
aad
in
clc
loope
in
xchg
call
cli
stc
neg
cmc
cmp
flds
loopne
sub
mov
xchg
jecxz
jecxz
jmp
aaa
xor
rcr
sarb
test
fucomp
sub
sti
in
call
imul
lock
jmp
aam
out
out
shl
fldl
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
jecxz
repnz
fyl2xp1
fyl2xp1
mov
mov
clc
xor
ret
not
das
repnz
ror
jmp
loopne
loopne
cli
addb
test
cmc
lock
lret
cmp
repnz
rcl
rcl
jecxz
sarb
out
cli
aad
lret
fldl
imul
rol
xor
fucomi
ljmp
enter
call
enter
loop
int3
lret
xlat
repz
shll
enter
in
test
cli
int
mov
ret
mov
out
xor
int3
in
fcom
repz
xlat
hlt
jecxz
int
fcmovb
ljmp
mov
in
xchg
xchg
jmp
xor
call
cli
repnz
cmp
clc
cld
cli
ljmp
loop
out
loop
jecxz
iret
ss
shl
sti
fcmovbe
lock
loope
xchg
jmp
int
out
rorb
call
stc
fucomip
ror
rcl
fiaddl
filds
and
in
fcmove
idivl
das
fdivrp
fdivrp
lret
icebp
cmp
in
push
xchg
mov
ffree
fcmovnb
call
out
rcl
int
cmp
cmp
into
aas
cmp
test
sub
out
cli
rolb
repz
in
cmp
fucomi
lret
ds
std
jmp
ret
int
shl
test
sub
iret
repnz
aad
out
cli
repnz
test
adc
faddp
mov
xchg
mov
xchg
jecxz
repnz
sti
cmp
idivl
repnz
cmp
fisttpl
repz
lret
cmc
aad
xor
pushl
cli
fdivp
add
lret
mov
xlat
iret
out
xchg
adc
xchg
aad
ss
enter
hlt
fadds
fnstcw
loope
roll
mov
into
in
out
ss
jecxz
fucomp
shl
out
testb
mov
fdivr
in
icebp
mov
xor
xor
in
cld
repz
int3
lret
lret
test
fsub
imul
std
cli
in
iret
out
in
int
divb
cmp
fsub
ret
ror
cmc
call
mov
jmp
sub
loopne
xor
cli
icebp
fdivrl
cmp
idiv
sar
xchg
mul
ljmp
jmp
leave
cmc
out
ss
cmp
sti
in
xlat
idiv
loop
in
mov
leave
loopne
xchg
repz
not
hlt
cli
xor
lock
fnstsw
loop
neg
test
mov
and
vpcomb
xchg
icebp
shl
call
lock
cmp
aad
icebp
cmp
in
ret
lret
fisttpl
shlb
xor
enter
sti
leave
lret
cld
rcl
fsin
loope
in
cmpb
cld
in
mov
int
cmp
rol
cmp
shr
rol
fdivrp
call
add
loop
test
std
xchg
shl
cmc
leave
shll
aaa
out
out
stc
lret
in
jecxz
cld
jecxz
in
addb
repz
cli
shr
fdivs
rcl
loopne
out
cli
repnz
xlat
jecxz
mov
out
mov
in
xchg
lock
jmp
ljmp
aas
test
out
cmc
mul
enter
cld
test
hlt
mov
lock
call
stc
cld
fistpll
in
repnz
cmc
out
in
out
fmulp
mov
fucom
icebp
out
in
cld
fucomi
out
rcl
in
fnstsw
ret
hlt
loopne
stc
jmp
fcmovnb
test
sarl
rol
clc
out
cld
cmp
ror
jmp
in
loopne
shl
test
std
repnz
adc
xor
les
sti
aad
ret
std
xchg
in
cmc
fiadds
loope
fsubrp
ljmp
neg
fst
std
fiaddl
mov
in
in
dec
xchg
int
iret
icebp
fsubr
fucomi
lret
cmp
aad
shll
cmp
rcl
call
jmp
sub
fnstenv
shlb
lock
jecxz
shr
cmp
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
push
cltd
or
sbb
aas
add
addl
lret
rolb
in
test
ljmp
fdivrl
jecxz
repz
fucomip
test
mov
mov
call
not
in
out
std
cmp
cld
fiadds
xchg
loop
repz
xor
rcl
xor
fucomi
clc
iret
int
hlt
xchg
shl
out
aad
mov
mov
in
in
cmp
iret
xlat
cmc
jmp
out
out
addb
addl
incl
not
cmc
div
lret
icebp
aad
in
sti
lock
addb
jmp
lret
fadd
sarb
into
sarl
sar
ret
loopne
fdivr
loop
filds
jmp
xlat
cmp
int3
xor
cmp
incb
cmp
ret
xchg
jmp
xchg
loop
aaa
out
into
fmul
cmp
flds
mov
call
lock
cmp
clc
out
aas
in
ret
push
aas
ds
ret
mov
jmp
int
int
ljmp
cmp
loopne
icebp
sar
fdivr
aad
out
ret
jecxz
rcl
out
out
in
xlat
cmc
ljmp
adc
roll
enter
mov
fscale
cmc
stc
in
fptan
aas
sar
repz
loop
lret
sti
int
jmp
cld
out
mov
ss
xor
in
fsub
ret
or
xchg
iret
shr
lock
xor
jmp
ljmp
aas
test
out
hlt
hlt
shl
std
jecxz
cli
nop
out
mov
in
lret
rcr
fcmovu
fcmovnbe
in
cmc
aam
fadds
enter
repnz
xchg
int
div
repnz
cmp
loope
fsubp
cmp
std
test
mov
loope
out
out
lds
rol
xlat
cmc
stc
cld
repz
rcl
fdivr
cmp
neg
cld
sti
cli
leave
out
iret
ror
call
icebp
in
cld
std
hlt
rolb
test
rcl
sti
loopne
jmp
out
decb
jmp
cmp
lds
cmp
out
mov
int
out
into
sub
jmp
jmp
xlat
cld
lock
sar
faddl
into
ficoms
loop
aam
in
shl
out
clc
int3
fdivl
ret
and
clc
xchg
jmp
call
int
icebp
rcr
idiv
leave
iret
repz
loopne
cmp
out
mov
test
cmpb
shl
int3
in
fbstp
cmp
loope
loopne
xlat
rol
adc
lea
call
xor
lret
fcmovbe
faddl
hlt
ffreep
sub
into
fcmovne
jmp
iret
rcl
fldl2t
hlt
clc
out
cmp
shl
aad
xlat
xchg
xlat
xchg
ret
mov
ret
repnz
in
mov
xor
fxch
clc
fcmovu
lret
cmp
cld
std
loop
mov
loop
jecxz
filds
jmp
shl
aam
repz
hlt
cmp
fnclex
test
shl
out
loope
xchg
out
xchg
std
ljmp
in
divb
int
fst
cmp
stc
aam
test
cli
mov
enter
mov
aam
sti
cmp
in
cmpb
fcmovnb
into
loopne
ffree
test
loope
jecxz
mov
in
jmp
cmp
xlat
iret
fiaddl
in
cmc
aad
fld
mov
call
xor
fcomi
fsubrp
jmp
sti
aam
in
fcmovu
mov
mov
shl
fldl
ljmp
aaa
int3
clc
cli
not
cmp
cmp
ret
loope
cmp
enter
int3
call
cmp
shl
fldlg2
in
xlat
cmp
adc
clc
xor
clc
fsub
ds
fmuls
add
add
ror
int3
aam
mov
mov
sbb
jle
rcl
enter
in
fsubrp
in
adcb
stc
cmc
cmp
repz
in
std
fiaddl
loop
jecxz
std
test
in
fistl
cmp
xor
cmp
into
loop
int
out
fsub
out
out
out
out
cmp
cmc
in
out
aam
rcl
std
stc
ds
aad
out
fld
loope
fsub
filds
lret
lret
jmp
rcr
in
loop
lock
out
rcr
repnz
in
fucomip
enter
test
xor
enter
les
call
fsubp
out
out
in
int
xor
fcmovbe
xor
fdivr
out
cli
fidivrl
aad
repz
roll
ljmp
fisubrs
out
shl
int
sti
cmp
sar
rol
sarb
xchg
mov
jmp
loopne
imul
in
xor
jmp
fnstenv
fdiv
ffreep
fsub
add
movl
xchg
ss
out
jmp
in
out
shr
in
clc
rcl
rorl
int3
testl
loop
lret
xlat
repnz
cmp
cmp
sar
xor
jecxz
mov
std
loope
cmp
ss
loop
imul
cmp
fcom
cmp
idiv
out
in
lret
fxch
lret
lret
fucomip
loop
xchg
into
lds
cmp
repz
fsubr
lret
cld
ret
rol
sub
mov
or
std
call
xchg
enter
ret
xor
cmc
cmp
std
in
xchg
mov
leave
roll
out
out
jecxz
xchg
loope
aaa
out
call
rcl
cmp
loop
xlat
mov
cmc
loopne
in
lea
aad
sub
in
repnz
in
enter
repz
addl
sti
out
in
xchg
mov
jmp
stc
repnz
rcr
addl
stc
cld
fildl
repz
ljmp
lret
loop
rolb
sbb
std
faddl
imull
stc
ljmp
stc
repz
xlat
fmul
aas
in
out
testb
shl
neg
aaa
aam
not
enter
int3
out
fiaddl
leave
enter
mov
fstp
xchg
fdivs
int3
xor
cmp
ds
out
in
filds
test
out
loope
shll
fincstp
xlat
fstp
out
sarb
idiv
sub
repz
fcomp
rcl
in
loopne
out
loopne
xor
aam
ss
cmp
iret
rol
fcmovbe
repz
out
out
in
int
xchg
mov
call
lret
ret
xlat
cmp
fcmove
jmp
shl
cmp
jmp
out
stc
add
fdiv
fnstsw
aad
in
xor
jmp
iret
jmp
roll
fsub
xlat
fnsetpm(287
loopne
out
cld
jmp
xchg
rcl
lds
ss
hlt
std
jecxz
xlat
leave
nop
jecxz
xchg
in
xchg
jmp
call
xor
shl
fsub
enter
test
out
stc
mov
int3
rorl
out
int
repnz
aas
loope
fmul
ret
fucom
mov
orb
dec
jmp
aad
out
imul
ljmp
out
repz
in
cld
lds
test
into
icebp
out
stc
repnz
ss
lret
repz
xor
hlt
cmp
mov
clc
jecxz
lret
into
fdiv
xchg
aad
ljmp
filds
idivl
mov
rorl
xchg
iret
cs
xor
hlt
stc
out
cmp
xlat
jmp
std
loop
test
shl
aam
in
in
icebp
xor
rcl
xlat
into
in
fnstcw
ds
xchg
xchg
aam
lret
hlt
hlt
stc
clc
repz
filds
testl
cld
or
out
iret
shl
ljmp
cmp
loopne
inc
in
mov
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
cmp
fucomp
fdivr
orl
rcr
imul
rcl
clc
fdivrs
neg
lock
aas
out
jecxz
mov
out
cld
cli
jmp
sar
shl
cmp
shlb
into
fcmovne
adc
hlt
fcmovb
leave
lds
ror
mov
out
repz
out
loop
sti
stc
idiv
clc
lock
loope
cli
jmp
les
mov
leave
xor
lret
hlt
fidivrl
in
stc
xor
ret
aas
in
cmp
fcomip
in
ret
fxch
mov
cli
xchg
mov
in
jmp
ljmp
enter
loope
loopne
xchg
in
xlat
loope
iret
out
int
out
clc
xor
out
fcom
fcmovu
cmc
cli
test
jmp
ror
jmp
int3
loop
in
in
stc
fdivrs
call
lret
add
ret
test
sub
and
out
jecxz
cli
cmp
lret
filds
test
decb
lret
xchg
in
clc
hlt
in
fdivr
out
or
ret
xchg
stc
mov
std
call
ror
aam
xor
xor
fld
repz
lret
cmp
cmc
out
clc
in
loope
jmp
int
aad
xlat
fdivs
xor
ljmp
cli
in
fucom
loop
out
int3
test
repz
sub
rol
in
cli
ljmp
ret
jmp
jmp
in
jecxz
icebp
loope
test
int3
fsincos
cmp
fadd
mul
aas
jecxz
cli
ret
xor
stc
ljmp
xchg
in
shll
aam
fcmovnbe
ljmp
fsubr
jmp
ljmp
fnstsw
mul
clc
xor
aad
cmp
repz
loopne
fcomp
cmc
stc
sti
stc
mov
cli
icebp
int
div
cli
cmp
cmp
lret
into
shl
hlt
ret
loope
orb
test
mov
lock
lret
jmp
fnstcw
test
aad
cld
lret
clc
in
mov
jmp
rcl
into
ss
lock
jmp
xlat
jecxz
cmp
xor
test
jmp
sub
xlat
xor
sar
out
in
lock
into
shl
not
cmp
fisttpll
jecxz
mov
in
mov
fdivrs
cmp
cmp
aas
addl
loop
ljmp
xlat
test
out
cmpl
stc
xchg
out
cmc
lea
xchg
iret
fsubr
cmp
clc
cmp
fdiv
repz
out
rcl
in
fmull
repz
cmp
xor
fst
loopne
cmp
faddp
int3
stc
jmp
lret
pop
call
xor
fstp
cli
sar
fdiv
loopne
test
in
int3
cld
in
loope
imull
xor
xor
cmp
cld
cmp
in
mov
fsubr
mov
xor
xor
leave
std
icebp
repnz
cmp
sarb
cli
std
enter
in
in
loope
cli
mov
lret
test
into
div
lds
shl
shll
fsubrp
repnz
fsub
ret
test
cmp
rorl
xor
sti
in
out
out
out
cmp
sar
stc
testb
out
iret
inc
loope
cmp
sti
lret
ljmp
div
leave
cmp
loope
iret
dec
out
int
ficoms
enter
into
fucomi
in
aad
cli
or
ret
ror
testb
fmul
cmp
sti
std
jmp
adc
loopne
call
in
aad
xor
in
cmp
cld
loopne
loope
cld
aad
flds
mov
xchg
into
test
ret
sar
shl
in
stc
iret
aaa
cmp
xor
adc
fidivrs
cmp
ds
test
test
ss
cmp
loope
addl
mov
mov
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
push
jo
jg
aas
add
mov
cld
addb
aaa
int3
lret
in
sti
div
not
lret
out
out
in
lret
cli
lds
cmp
jmp
call
sar
idiv
jmp
sbb
fucomp
xchg
fstl
call
sti
ljmp
sbb
fcmovu
xchg
repnz
out
jmp
flds
std
xchg
clc
clc
imul
in
call
xchg
mov
in
shr
neg
out
jmp
aas
lds
jmp
int
shl
fbstp
fld1
cmp
out
icebp
in
into
fucom
in
out
idiv
sti
in
hlt
loop
in
jecxz
int
shll
hlt
jmp
cli
sbb
shl
repnz
loopne
sub
loope
loope
div
loope
icebp
fyl2x
mul
xor
not
dec
sti
or
and
enter
loope
nop
xchg
hlt
imulb
xlat
shl
xor
ds
call
cmp
fcompp
repz
test
leave
mov
test
xchg
cld
mov
repnz
repnz
out
xlat
sar
out
ror
aaa
iret
iret
rcr
cmp
filds
int
in
loop
out
sarl
in
xor
rcl
cld
cld
test
xchg
call
fcmovu
jmp
xchg
sub
shl
jecxz
cmp
xlat
in
fdivrp
aam
out
cmc
leave
mov
popl
shl
hlt
out
loopne
cmp
jecxz
in
rol
cmp
fcomi
xlat
xlat
stc
xchg
out
ficoms
in
std
in
idiv
rcr
fadd
xlat
hlt
sbb
jecxz
loopne
roll
fcom
int3
cmp
sar
cli
out
in
into
testl
ror
rcl
shrb
out
leave
idiv
cld
aam
cmpb
out
cli
sti
cmp
ret
test
mov
xchg
hlt
rcl
test
call
into
ret
neg
sti
adc
shl
repnz
imul
lret
repnz
in
leave
lret
cmpl
xlat
xchg
mov
out
shr
in
loope
aam
fdiv
aam
rcr
out
movb
xchg
in
in
loopne
repz
inc
lret
int3
xor
in
into
adc
fmuls
sti
int
shr
call
repnz
out
cmp
cld
sti
cmp
clc
repz
std
jecxz
nop
mov
loopne
hlt
jmp
jmp
cmp
faddl
cli
jmp
lret
sti
rcl
subb
int
mul
cld
cmp
loope
repnz
in
ret
fld
stc
adc
lock
cmp
aaa
iret
aam
cmp
stc
cld
fstpt
test
sti
loope
jmp
leave
shl
loop
cmc
out
lret
les
xor
rcl
cmp
flds
clc
repnz
stc
mov
sar
xchg
enter
aam
out
fnstcw
repz
mov
out
enter
out
xchg
xlat
lret
in
in
rol
lret
cmc
iret
aas
out
cmc
cmp
faddp
xlat
jmp
cld
xlat
lock
aam
into
ftst
out
out
fcom
cmp
rcl
clc
addb
fchs
out
in
fildl
imul
out
ljmp
fdivr
rcl
loopne
out
sti
in
in
fdivr
shr
mov
ffreep
ret
iret
in
xor
aad
cmp
iret
ror
sti
out
lret
out
xchg
call
lret
hlt
hlt
into
repz
sar
mov
sti
repnz
out
rorb
icebp
cmp
div
iret
aam
loop
add
ret
fst
xchg
lret
int
das
xor
icebp
iret
lds
addb
cmp
testb
fists
mov
aam
ljmp
cmp
out
jecxz
incl
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
in
mov
xor
jg
aas
add
cli
lds
lret
xchg
idivb
aad
xor
aas
in
clc
into
cmp
repnz
shl
loop
imul
in
into
leave
mov
loop
ret
ftst
out
aad
cmp
sti
cld
call
ret
lret
mul
loopne
in
or
loop
std
fsub
mul
jmp
rol
loop
out
ds
cld
jmp
xchg
orb
cmp
cmp
shlb
dec
shr
cli
idivb
aam
in
lret
testb
into
leave
enter
lret
fnstcw
fadds
fisttpll
in
int
ljmp
or
loop
test
out
in
faddp
out
fisttpll
xchg
aam
in
jmp
shr
stc
ret
leave
out
cli
popl
into
xlat
iret
lock
enter
int
lock
sti
and
orb
call
in
loopne
hlt
lock
cli
cmp
in
ret
rcr
loope
neg
out
shl
hlt
in
loopne
out
out
cmc
ror
filds
sti
adc
repnz
fucomp
out
int
adc
lret
int
int3
cmp
clc
into
test
mov
aad
jecxz
iret
leave
xchg
repz
out
das
into
fcmovnbe
stc
cmp
std
cmc
neg
in
inc
mov
fcmovu
int
xchg
shrl
call
test
int
rolb
cmp
mov
ret
cli
repz
hlt
idivl
aaa
loop
fcom
out
fiaddl
mov
in
xchg
icebp
ret
lret
shl
lret
cli
in
sarl
ret
ljmp
roll
xor
in
ret
stc
mov
cld
in
leave
aad
jecxz
int3
mov
loop
nop
xlat
in
enter
ss
cmc
add
cmp
fdivr
nop
cli
leave
test
lret
loope
leave
aam
aad
aam
imul
out
out
loop
sub
leave
sub
lret
incl
icebp
out
xlat
aam
clc
hlt
cmp
shl
call
lret
fst
lret
xchg
test
int
mov
xor
jmp
sti
and
test
xchg
in
add
int3
leave
sub
ror
lret
aad
repnz
fadd
fsub
ret
loopne
mov
out
in
out
loope
shr
fcmovbe
std
fucomp
sti
aad
aas
stc
fdivr
or
decl
fmul
jecxz
out
jecxz
out
leave
in
ss
fcmovnbe
ror
ret
neg
hlt
cli
ljmp
rclb
fcmovu
shr
aas
std
icebp
cmp
std
rcl
test
test
xchg
out
repz
cmc
xor
enter
div
enter
cmp
ds
enter
int
ljmp
out
aaa
int
repz
std
cld
out
cmp
loopne
idiv
std
ret
loope
repz
leave
out
fldl2e
cld
aam
repnz
xor
fcmovu
fcomp
sar
jmp
cmp
adc
fadd
lret
out
ret
loopne
out
into
mov
lret
out
fcmovnu
cmc
fcmovnu
lret
or
cmc
leave
mov
loopne
out
mov
loopne
out
jmp
ds
cli
lock
shr
shl
addb
sub
icebp
hlt
xor
fmul
sti
call
hlt
idiv
xchg
ret
icebp
std
in
imul
jmp
sti
in
mov
bnd
call
ret
sarl
rol
aad
fsin
incl
in
into
divl
cmc
in
xor
cmp
leave
icebp
shl
repz
out
xchg
int3
jmp
stc
test
in
cmp
idivl
cmp
clc
and
clc
fsubr
stc
cmc
leave
jecxz
ds
loop
leave
jmp
lret
jmp
imul
aas
sar
div
cmp
cli
clc
orl
pop
add
add
lret
fst
int
test
cmp
bnd
aas
add
call
cli
out
loopne
ficoms
out
lret
sti
cmp
in
adc
aam
cli
iret
roll
xchg
nop
sub
lret
aaa
int3
icebp
ds
xchg
sti
fcompp
loope
in
fxch
mov
jmp
mov
into
shl
fdecstp
repz
int
aam
loop
xlat
clc
shr
not
cld
and
mov
icebp
fcom
xor
stc
cmp
loope
adc
fsubr
int3
lret
loope
jmp
aam
icebp
in
xor
hlt
call
jmp
sarb
not
loop
fiadds
mov
sti
ss
lock
int3
cmpl
repnz
jecxz
in
in
jecxz
orl
out
cmp
shr
ret
aam
out
les
rorl
out
loope
ret
xor
int
fst
hlt
stc
cmp
movl
iret
add
in
in
in
ror
out
cli
clc
rol
fadd
ljmp
ror
xchg
mov
cs
fcmove
cmp
cmp
xlat
cli
loope
out
fsubr
fisttpll
int
mov
int
cmp
out
xor
int3
iret
cmp
add
fcmovnb
jmp
clc
loop
fcmovne
cld
out
xchg
das
in
shlb
lret
sarl
aad
aas
lret
out
aas
loopne,pt
sti
call
jmp
enter
xchg
int3
iret
jmp
repz
icebp
lock
rol
cmc
xlat
fxch
shl
fcmovnu
loop
repnz
in
repnz
repnz
neg
into
call
loop
fldl
shr
out
aam
shl
enter
cmp
addl
hlt
dec
out
nop
ror
mov
hlt
jmp
ret
cmp
cmp
faddp
jmp
in
lock
xchg
lret
mov
loopne
out
repz
clc
sub
ret
and
std
int3
addb
shl
xor
xor
aam
jmp
cli
shll
fst
ret
sti
aam
testb
cld
xchg
xchg
iret
test
loopne
cmc
imulb
jmp
stc
hlt
int
repnz
aad
cmc
xchg
nop
mov
jmp
push
out
call
cmp
lock
xchg
loope
xchg
ror
mov
loop
leave
divb
jecxz
repz
enter
iret
fsub
rcr
repnz
testl
out
xor
in
stc
xor
ljmp
aam
fadds
in
rcr
xchg
cld
jmp
fcmovbe
xor
cmc
cld
cmp
out
imul
or
fcmovne
xchg
out
jmp
icebp
repz
repz
sar
out
fdivr
mov
fucomi
mov
jmp
ret
cmc
int3
aaa
cmp
ss
cld
ffreep
test
out
cmp
adc
stc
call
out
into
xchg
das
leave
out
int
lock
cmp
stc
hlt
fcmovb
mov
mov
leave
xchg
or
xor
out
xor
hlt
xor
icebp
incb
mov
xchg
xchg
xor
repz
cmc
cmp
leave
idiv
lret
shl
ffree
jecxz
fucom
cli
in
fnstsw
xchg
rorl
enter
lret
cmpb
int
aad
mov
out
mov
out
fmul
xlat
aam
xor
aad
icebp
ds
ret
iret
orb
mov
shr
rcl
cmc
into
ret
out
loope
jmp
out
aam
aas
in
aas
cli
cld
addb
fimuls
xor
jmp
xor
test
stc
enter
jmp
loope
div
jecxz
repnz
cli
stc
sbb
test
jmp
lret
fcomip
dec
cmc
out
jmp
shl
fcomi
cmp
out
aam
fdiv
push
fcmovb
add
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fnsave
xor
scas
add
ret
and
lret
jecxz
repz
cmp
fmulp
fucomp
stc
aad
aam
xlat
in
and
mov
addb
ror
int3
imul
cmp
shr
aas
cmp
cmp
out
xlat
faddp
adc
in
xor
ret
fcmovnu
sti
in
cld
std
out
sub
ret
fld
test
jmp
sti
sbb
ljmp
lret
lock
aam
fst
aas
xchg
ret
call
int3
stc
int
int3
aas
loope
xor
fsub
not
aam
in
shl
fucom
aam
fucomi
aad
out
mov
mov
mov
clc
in
cmp
cmp
addl
fucomip
sti
leave
iret
ljmp
cld
in
aam
cmc
icebp
aad
std
iret
cmc
repz
and
test
test
jmp
shl
jmp
aam
addb
sti
in
lret
cmp
fisttpll
call
jmp
cmp
incb
int3
popl
jmp
out
aaa
fucomi
cmp
cli
fdivr
stc
aad
enter
in
mov
out
hlt
jmp
xor
ret
fcmovnb
fst
fcmovnb
out
iret
rorl
sub
iret
icebp
cmp
sar
cmc
out
xlat
mov
testl
xor
repnz
xlat
cs
sar
aas
int3
xchg
test
jmp
pop
leave
ret
test
out
push
aam
out
xlat
repz
sarl
cld
roll
out
fcmovnb
enter
in
filds
in
rol
aam
out
clc
aam
cmp
ret
hlt
cmc
xchg
or
cld
call
out
fnstsw
cmc
call
iret
int
not
cmp
jmp
sti
clc
loop
lock
repz
aad
aaa
fsubr
icebp
cld
rcr
cmp
ret
aaa
fadds
sbb
test
in
and
out
aaa
cmc
std
lret
xor
xor
aam
cli
imul
out
sti
fadd
out
lock
mov
in
shr
fcmovne
shl
loope
sar
cld
stc
stc
xabort
mov
sti
test
addb
shl
enter
test
hlt
out
cmc
test
clc
in
mov
addl
cmp
fdivrp
testb
test
lea
lock
in
cmc
ss
out
shl
div
cmpl
mov
mov
in
shr
shr
fcmovnbe
into
cmp
cmp
fcomip
repz
fisttpll
lock
adcl
loopne
loop
rcr
aam
stc
fsubr
stc
mov
out
fstl
call
hlt
fucomp
roll
incb
loop
std
mov
test
vpsubsb
cmp
aad
fcomi
shl
inc
stc
std
aas
fstl
lret
out
aaa
ss
in
out
out
stc
clc
shl
int
cmp
cmc
mov
xchg
mov
nop
jecxz
out
out
in
out
cmp
jecxz
out
fcmove
sar
xchg
leave
fcmovnbe
jecxz
loop
ret
stc
out
ljmp
xlat
rcr
leave
ljmp
xchg
out
cmc
into
mov
cmc
sti
repz
int3
loopne
faddp
aad
shl
ret
rolb
mov
cs
stc
cld
in
cmp
sbb
call
in
jmp
call
xor
shl
fcomp
cmp
hlt
int
lock
fucom
idivb
stc
fcmovnbe
aad
sbb
fisttpl
iret
rcl
in
cmp
leave
cmp
rcl
cli
clc
rcl
cmp
inc
rorl
int
mul
lret
fcmovbe
sub
stc
test
popl
std
not
in
enter
sar
sbb
out
incb
loope
cld
out
out
nop
repnz
rorb
into
shl
lock
aas
cmp
test
sti
enter
mov
mov
in
rcr
cs
in
idivl
fcmovnb
fcmovu
rol
loope
cmc
fildl
call
in
xor
xlat
movl
xor
jmp
iret
rol
rol
or
push
aaa
loope
dec
jg
aaa
jg
scas
add
cmp
cmc
int
aas
sar
cld
mov
in
push
into
iret
xchg
fsubrp
out
cmp
in
xor
push
out
cmp
ret
aam
out
in
repnz
incl
xlat
std
cmp
fcomi
fucom
in
fcmovu
cmc
ret
lret
out
out
mov
out
xor
in
ror
cli
sub
imul
loop
out
aad
test
loopne
mov
xchg
in
shl
shr
jmp
out
ret
icebp
neg
lock
sbb
fcmovne
mov
fsubr
shl
mov
aam
int3
lret
cmp
std
sar
loopne
ret
enter
mov
test
fisttpll
int3
shl
cmp
ds
test
cmp
not
out
out
loope
nop
test
aaa
out
ss
shlb
aam
rol
cmp
cli
shr
test
mov
clc
lret
cld
jmp
shl
shr
fprem
xor
fcomi
mov
lret
addb
in
cli
lret
cli
stc
into
cmp
xlat
sti
cmp
ret
in
stc
test
aad
enter
ljmp
cmp
xor
jmp
xchg
fisttps
addl
jmp
idiv
ds
loop
orl
loope
xchg
out
in
in
stc
fdivrp
xor
aas
frndint
sti
mov
xchg
orb
mov
fmul
ljmp
cmp
sarl
mov
lret
int3
loop
cs
repnz
repnz
out
cli
aad
out
cmp
fdivrl
lret
leave
nop
std
iret
loope
aad
cs
ljmp
clc
in
icebp
std
jecxz
in
test
fdivr
out
in
icebp
xor
call
xlat
adc
clc
cli
repnz
adc
cld
cld
int3
enter
xchg
in
lret
ror
repz
loope,pt
ret
ror
cmc
in
xlat
shl
mov
in
in
out
in
xlat
hlt
in
cmp
cmp
incl
in
div
mov
fimuls
clc
lret
repnz
aam
faddp
stc
call
std
test
out
test
add
ss
faddl
cmp
movb
enter
fisttpll
enter
in
cli
div
roll
in
cmp
cld
call
xlat
cli
xlat
jmp
jmp
fdiv
cmp
ret
jmp
test
int
mov
enter
aad
cmp
cli
rcr
rcr
loope
mov
in
add
cld
cld
cld
xchg
decb
enter
int3
fldln2
loopne
test
loopne
lock
lret
fsubr
xchg
cmp
mov
icebp
iret
rol
in
aam
loope
out
shl
push
mov
les
orl
test
cli
shr
xlat
adc
roll
jmp
fdiv
mov
xor
xor
in
fstp
loope
mov
mov
xchg
shr
loopne
out
cs
das
lret
fidivl
shl
hlt
neg
aam
in
fsubrp
jmp
call
aad
rol
in
push
leave
fcmovnbe
rcl
in
shl
test
loope
out
into
sub
sti
into
xor
rcr
fnstcw
ret
aam
aam
out
mov
mov
mov
aad
jmp
out
aaa
fcmovne
add
cmpb
push
xchg
sub
in
ljmp
out
iret
in
into
rcr
call
cmp
flds
xchg
out
sti
fisttpl
out
int3
out
aam
cmp
fldl2e
ret
cmp
lret
fucom
mov
mov
icebp
xlat
xor
jmp
iret
fcmovnb
addb
jmp
rcll
xor
iret
idiv
repnz
fsub
std
shl
rcr
ret
fldl
in
int3
in
xor
xor
cld
lret
cmc
out
cld
aad
cli
in
in
xlat
hlt
stc
repnz
shl
fiadds
test
leave
lock
aad
call
cmpb
xlat
rcl
mov
movl
jmp
enter
fxch
shll
or
push
out
loope
cmp
jle
add
in
lret
movl
sub
into
cmp
xlat
fiaddl
repnz
fdivrp
out
xchg
in
xor
stc
sarl
ss
xor
rol
std
in
dec
xchg
cmc
jmp
jmp
out
lock
repz
cmp
ffree
fst
test
xlat
fadds
mov
mov
add
in
jecxz
fsub
ss
cld
int3
repz
clc
std
stc
cmc
decb
jmp
fcomip
out
stc
jmp
aam
shr
cmp
aam
fdivrp
in
fisttpl
repz
into
shll
lret
jmp
cld
aam
out
std
ds
clc
adc
xchg
fucom
std
repnz
xchg
xor
hlt
ljmp
dec
dec
out
ret
fsubrp
ret
shl
out
loop
lret
lret
addb
fildl
imul
loope
call
xor
sub
repnz
cmc
cmp
fmul
out
jecxz
cmp
aam
in
out
out
sbb
mov
mov
shr
hlt
jmp
fcmove
lret
shlb
aas
rcr
testb
clc
repnz
fdivp
out
out
in
cs
lret
cmp
int3
rol
stc
fucomip
xchg
leave
fld
lret
loopne
in
shr
leave
ftst
into
fsincos
cmp
sti
ffreep
aas
cmp
out
icebp
xchg
sti
test
lret
in
nop
loope
rol
xlat
shr
xor
jmp
shl
repnz
fcomp
test
xchg
nop
out
ror
xlat
repnz
int
loopne
icebp
in
aam
or
call
test
jmp
cs
jmp
in
into
vshufps
fsubrp
jecxz
into
fmul
mov
fisttpl
fcmovnbe
hlt
lock
out
ds
icebp
fst
repnz
rorb
fimull
into
shl
enter
jmp
stc
out
out
test
ljmp
xchg
xchg
nop
and
shr
imul
out
into
idivb
addl
call
out
leave
rcl
divb
call
cli
out
fsubrp
cmp
rol
out
fdivrp
vshufps
decb
shr
lock
repnz
repz
cmp
ljmp
ret
into
xlat
out
cli
cmp
aad
std
loop
ret
fdivrp
shl
xchg
jecxz
and
enter
out
cld
stc
rol
repz
neg
ret
stc
stc
mov
in
rolb
iret
in
int3
sarl
jmp
fdivp
in
jecxz
mov
rorl
repnz
xor
xchg
std
mov
test
test
in
decb
xor
cmp
sar
in
sarl
fld
cmp
and
shr
jmp
in
std
mov
leave
xchg
in
or
leave
call
aas
cmc
icebp
loope
aas
neg
aad
xchg
mov
test
jmp
hlt
loopne
test
aad
call
fisttpll
mov
vpaddb
lock
cmp
xor
leave
aam
sti
mov
out
cli
in
nop
mov
out
xor
in
ror
out
in
into
xlat
fcom
shl
cmc
jecxz
test
std
in
fsubrs
hlt
xor
fcmovu
enter
cmp
aas
frstpm(287
ljmp
repnz
in
xchg
mov
repz
fdiv
loopne
in
shl
repz
fdivr
mov
test
mov
cmp
cmc
jmp
repz
loopne
test
std
test
std
in
mov
std
mov
jmp
stc
fnop
cmc
in
cli
iret
fxch
icebp
sub
sbb
mov
nop
stc
in
mov
lock
cmp
shl
shl
jecxz
clc
fmuls
in
ficoms
rcl
in
in
lret
cmp
cmp
ret
loope
xchg
roll
out
test
into
in
mov
cmc
fcmovbe
enter
cmp
int
fdivrl
icebp
in
in
fiaddl
into
repz
in
stc
rcl
adc
ret
leave
leave
aam
mov
lea
fcmovb
in
inc
cld
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
repnz
aas
out
cmp
cmp
fisttpll
xchg
mov
xchg
out
cs
fnstenv
lret
rcr
aas
testb
cli
jmp
iret
sti
call
into
xor
xlat
ror
call
int
lock
in
cmc
out
loope
xchg
jmp
out
lds
int3
aad
aam
ds
cmp
int3
xchg
ret
stc
test
clc
or
sti
xchg
xchg
lock
call
aaa
enter
cmp
fidivrs
incl
fisttps
jmp
iret
imul
enter
cld
out
icebp
in
iret
out
repz
out
cld
loopne
mov
icebp
loopne
nop
xchg
jecxz
int
xlat
in
out
in
lret
lock
fdivrl
aam
leave
sub
mov
repz
xor
iret
int3
ss
or
in
shr
mov
out
test
shl
shl
in
shl
aad
in
out
stc
rcr
addb
out
mov
loopne
hlt
xchg
jecxz
xor
out
lret
fmul
lock
into
ret
addl
mov
ret
vaddsubps
sub
icebp
repz
les
incb
stc
incb
repnz
cli
iret
ffreep
aad
int
loop
ret
test
lea
out
cs
cld
shr
fcomip
in
fdiv
ror
sarl
mov
mov
fiadds
in
xchg
xchg
lret
enter
xlat
fucomp
out
fcmovbe
loope
hlt
xlat
in
faddl
jecxz
mov
in
shl
iret
loop
xor
ljmp
shl
aad
repz
and
call
leave
repz
fxch
ds
call
cld
fdivr
stc
lret
in
mov
fimuls
in
in
int
cmp
xor
cld
cli
in
aas
cld
cld
test
lock
repnz
out
in
xorb
int3
iret
fcom
xlat
aad
enter
out
xchg
loope
in
faddl
out
ljmp
out
jmp
cmp
ret
clc
hlt
fdivr
stc
jmp
lock
loope
rolb
int
aam
fsubr
into
cmc
cmp
int
rcl
fmuls
icebp
lret
out
iret
repnz
cmc
stc
xor
out
out
cmp
fdiv
jecxz
cmp
loopne
test
in
loop
mov
loopne
repz
add
cmp
xchg
xchg
out
jmp
shll
cmc
out
in
shl
shl
std
fdiv
aam
cli
std
xchg
call
xlat
shl
out
fnstenv
repz
xchg
lock
mov
rcl
ss
shl
xabort
sar
jecxz
cmp
rcl
loope
call
in
out
xchg
test
out
lret
sti
sti
in
aam
rcr
jecxz
lock
sti
std
in
lret
fildl
out
jecxz
xor
int
not
shl
loopne
cld
std
fcomp
xchg
out
xchg
ficoms
xor
cmc
out
sti
in
iret
fiadds
in
fdecstp
mov
lret
jmp
mov
xlat
lret
out
aas
sar
rol
aad
lds
mov
loopne
fsubp
mov
out
out
divb
cmc
sarb
faddl
aam
test
test
clc
in
in
jmp
call
rolb
jmp
mul
fisttpl
rcl
ss
cld
cmp
out
out
repz
cld
test
clc
hlt
out
int
nop
loopne
jecxz
adcl
ljmp
clc
ret
cmpb
jmp
hlt
ljmp
xor
fnstcw
cmp
iret
fst
ret
sub
shl
jecxz
xlat
xchg
fmull
int
iret
cmp
aam
cmpb
repz
stc
addb
fstp
repnz
xor
cmp
idivl
in
fdivr
cmp
shl
ljmp
std
lret
xchg
xlat
hlt
not
in
xor
aad
icebp
aad
and
mov
in
cli
in
cld
icebp
lock
out
ss
xor
int
cmc
rcr
adc
mov
rcl
in
stc
in
cmpb
add
sbb
cmp
add
test
add
add
add
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
adc
xchg
xor
jg
scas
add
mov
aad
loopne
lret
shr
ljmp
cmp
in
jmp
fstp
sbb
mov
jmp
hlt
xor
xor
shr
repnz
lds
ret
testl
shl
loop
xor
aaa
ret
xor
loopne
mov
popl
xor
xor
repz
cmp
std
std
out
aas
cmp
xchg
shl
leave
jmp
fadd
cld
fmull
iret
repnz
idiv
lds
repnz
aas
sub
fildl
repz
test
fcomp
mov
fldl
jmp
xor
ljmp
xlat
repz
out
loopne
fmul
mov
adcb
shr
cmp
xor
rol
enter
cli
sar
jecxz
aam
lret
xchg
orl
call
cmp
sarb
std
cmp
cmp
stc
aas
vcvtpd2dq
xchg
mov
mov
std
xchg
cli
in
cli
shr
lock
fcmovne
shl
aam
idiv
cli
out
aas
out
xchg
icebp
loope
mov
aad
cli
sar
rcl
int
adc
aam
fxch
jmp
lock
out
nop
xchg
int
lret
call
cli
shl
aam
icebp
rcr
fucomi
aas
fisttpll
in
test
leave
enter
out
sbb
shl
xchg
loop
in
in
movl
jecxz
jmp
ror
int3
ret
sarb
ret
aam
call
in
repz
out
clc
out
repz
int3
fst
fdivp
rcr
enter
into
mov
mov
into
dec
ljmp
xor
icebp
ret
stc
repnz
mov
cmc
enter
std
iret
out
and
neg
in
jmp
loop
xchg
xlat
cmp
faddl
div
out
cmc
ret
int3
stc
in
fistpll
cmp
not
rcl
jecxz
xlat
mov
ljmp
in
imul
in
ret
aaa
xor
cmp
cld
xor
cmp
sti
hlt
leave
lret
out
les
cmc
mov
ret
out
fdiv
les
repz
int3
div
xor
rcl
orb
jmp
fptan
cld
cmpb
sar
ret
sar
shl
cld
or
iret
add
or
in
fmul
lret
out
ss
out
lock
aad
fld1
shl
and
cld
out
jmp
xchg
out
not
out
sarb
shl
ret
shl
xchg
in
in
mov
cld
ljmp
fdiv
das
cmp
lret
or
shl
call
in
fcmovnu
mov
mov
idivb
out
aam
cmp
into
rcl
cmp
jmp
test
int3
out
roll
cmp
cmp
icebp
leave
push
ret
loop
repnz
xchg
cld
fucomi
ljmp
cmp
out
clc
rcl
sar
repnz
out
enter
lret
vpmaxsw
icebp
out
in
mov
in
cs
hlt
xor
leave
and
xor
cld
fsub
cmp
xchg
loop
ret
ret
fprem1
bnd
ffreep
fxtract
test
jecxz
int3
fdiv
leave
cli
jmp
rcr
stc
rcr
rcr
in
repz
into
fdivrs
stc
enter
dec
in
jmp
int3
sarb
clc
clc
loope
loopne
out
into
fnstsw
neg
repz
call
fdivr
out
mov
cmp
cmp
aas
ss
rol
aaa
iret
iret
repnz
fmull
mov
in
aad
xlat
xbegin
test
rorl
call
mov
cli
xlat
aad
cmc
shr
iret
cmp
out
int3
sbb
out
xlat
repz
stc
frndint
jecxz
in
test
loope
ret
out
divb
fldl
loope
hlt
in
in
jecxz
sti
call
jecxz
xchg
sub
in
xor
xorl
aad
loopne
sti
int
int
xchg
xor
stc
repz
hlt
xor
call
in
shr
loopne
in
addl
icebp
loopne
leave
cmp
idivl
addb
fmull
fsubrp
or
repz
xor
fdivl
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
fldcw
jg
scas
add
loop
shl
jmp
out
mov
cli
lret
in
int
das
cmp
out
hlt
push
in
clc
out
fsub
repnz
ds
ret
idiv
call
addb
iret
rcr
cmp
cmc
fcomi
in
clc
jecxz
mov
loopne
cmp
cmp
xchg
loopne
xor
jecxz
fnstcw
cmp
in
cli
cmp
cmp
stc
stc
jecxz
fisttpl
shl
aam
ljmp
int
in
neg
jmp
jmp
lea
out
das
aaa
leave
in
cmp
fstp
ds
call
in
jmp
icebp
and
out
sub
ror
divb
out
cmp
aas
cmp
idiv
cmc
ret
ret
enter
jmp
clc
xor
int3
xor
cmp
cmp
in
shl
cld
repnz
cli
mov
lea
into
call
rcl
ss
jmp
xor
aaa
addl
test
iret
int
out
ror
cmp
fstp
icebp
into
loop
xlat
inc
sarb
or
fmulp
push
shl
fucomip
shl
icebp
call
repz
aam
aad
lock
cli
stc
orb
int3
int
fmull
shl
xor
lret
sar
div
ret
out
icebp
and
test
add
loope
in
out
xchg
hlt
xor
iret
aad
hlt
hlt
fcmove
ljmp
clc
jmp
lret
mov
lock
mov
jecxz
out
repz
cmp
ret
xchg
out
test
mov
clc
enter
mov
hlt
xchg
icebp
int3
lret
jmp
cmp
addb
lock
sub
filds
fidivl
repnz
in
out
hlt
int
fmulp
xlat
aad
enter
ljmp
iret
xlat
repnz
xor
cmp
adc
cmp
addb
xchg
mov
lret
out
aad
test
leave
cmp
cli
cmc
in
loope
mov
in
nop
out
addb
in
lock
in
repnz
icebp
hlt
into
ret
repz
clc
mov
nop
loop
std
repz
repz
cmp
aas
fstp
div
into
stc
cmc
xlat
in
fiadds
jecxz
mov
ret
int3
call
in
into
cmp
in
jmp
cld
fninit
loopne
cli
lock
lea
in
iret
shl
cmp
cmp
cmp
div
cld
std
lret
jecxz
add
hlt
test
in
ret
loop
ss
cmp
ds
fsub
loope
loope
lret
neg
out
xchg
cmc
lds
xor
shlb
das
imul
fcmovne
cmp
repnz
hlt
cld
test
push
lock
sti
lret
clc
cli
ror
imul
rcl
cmp
enter
loop
sbb
int3
shr
into
xchg
jmp
test
xlat
iret
div
iret
out
cli
faddp
out
loopne
in
lret
flds
xor
in
cmc
stc
aaa
jmp
in
push
loope
cld
in
shl
ljmp
out
iret
mov
call
cmp
repnz
stc
in
call
into
mov
shl
lret
loop
clc
jmp
call
sar
aam
shl
not
ljmp
out
out
lret
dec
iret
xor
loop
ljmp
stc
fmul
leave
rcl
cmp
addb
ljmp
aam
iret
stc
xor
ret
rcr
iret
iret
xchg
out
jmp
ljmp
in
loope
stc
adc
fiaddl
lock
call
xlat
fmul
div
aaa
out
rcl
jecxz
cmp
cli
addb
in
xchg
loopne
sub
aad
aam
xlat
cmc
hlt
std
cmc
loopne
sarl
call
fmulp
in
leave
out
fsubr
fimuls
repz
out
out
cmp
sti
ret
repz
orb
incb
xor
lret
xor
fsubp
fcmovbe
out
jecxz
or
jmp
std
or
nop
ljmp
int
icebp
cmp
fistpll
out
loope
enter
jecxz
stc
test
in
sar
sti
cli
cmp
call
repnz
clc
neg
inc
sub
test
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
dec
jae
pop
into
jg
scas
add
int
rcl
test
xor
idivl
call
cmp
shlb
fiadds
mov
mov
in
in
jmp
xchg
test
icebp
lock
call
shl
xlat
not
ret
loop
lret
out
iret
mov
in
in
mov
cmc
repnz
cli
in
fucomp
cmp
fxch
loope
cmp
loopne
fcmove
call
test
iret
out
out
icebp
out
cmc
xor
std
clc
testb
fdivr
fcmovne
mov
sti
aam
repnz
aam
lret
cmp
into
lret
ffreep
jecxz
repz
call
jmp
jmp
out
int
out
cs
jmp
lock
lock
in
loope
loope
xchg
jmp
aad
repz
lret
xor
aas
stc
out
loop
faddl
xchg
std
ljmp
xchg
leave
aad
enter
fldl2e
ss
loopne
sar
cli
mov
out
stc
clc
out
out
mov
out
jmp
loop
cmp
fsubr
leave
int3
imul
ds
ret
fdivr
cmc
fcmove
test
repz
call
cmp
fidivrl
jecxz
rcr
out
in
nop
lret
loop
repz
hlt
stc
cmp
loope
cld
into
rcr
xchg
repz
movl
int
rol
jmp
into
divb
call
lock
test
fcmovnbe
mov
in
clc
into
int3
xor
icebp
clc
into
ss
rol
cmp
sti
aad
test
test
fisttpll
cld
cmp
int
ret
ror
std
aas
jmp
call
test
in
shl
cmp
sti
cld
out
in
dec
aam
cmp
aas
mov
inc
in
cld
mov
loop
ret
shr
call
fdivr
jecxz
loope
repnz
fucomp
fucomp
fistpll
out
lret
ljmp
xor
xor
fnstenv
stc
aad
or
cmc
fcmovb
loopne
cli
rcl
loopne
fucomi
fucomip
in
mov
cmc
mov
shlb
ror
enter
aad
ds
fdivr
shl
rcr
jecxz
ret
test
out
xchg
lock
call
lock
test
ret
loop
lret
out
mov
hlt
in
iret
add
into
stc
cld
repnz
enter
aad
cmc
ffreep
jecxz
ftst
ret
fsubrp
in
sti
sti
xchg
int3
jecxz
aad
cli
in
shll
lret
loopne
cmp
fabs
fadds
xchg
rolb
jmp
jmp
sti
aam
fnstcw
loop
icebp
rol
ret
ljmp
test
ljmp
leave
aad
not
int3
rcr
out
cmp
sub
in
rcl
out
pushl
das
xor
repz
int
cmp
repnz
std
cli
test
fdivr
in
icebp
int3
xchg
ret
out
cmp
cmp
aas
push
jecxz
repz
mov
xchg
into
rol
xor
cmp
hlt
cmpl
aas
stc
stc
call
std
loope
xchg
jmp
call
clc
aam
lret
and
fcmovnu
sub
fsubp
jmp
mov
loope
aad
out
call
rcl
fcmovnbe
mov
ljmp
loope
xlat
cmp
idivl
cmc
cmp
icebp
dec
ffreep
enter
mov
lret
lret
loop
fucomip
ffreep
into
sar
cs
in
call
aas
loop
rol
jecxz
ret
fmul
test
xchg
ljmp
aam
sti
faddp
lock
cmc
out
repnz
repz
cli
ljmp
in
ss
icebp
loopne
fldl
ret
repnz
fmul
loop
loop
shl
xor
jmp
rcr
sti
call
sti
loope
cmp
div
fcmovu
jmp
rol
shl
ss
leave
hlt
xlat
shl
std
std
test
not
roll
fucomp
int3
lock
ss
xor
cmp
repnz
lret
loopne
vpsrad
test
loope
out
in
nop
fucom
orl
fsubrp
cmp
cli
shll
fnstcw
cld
cmp
shl
addl
xchg
div
aaa
out
in
repnz
xlat
fistpll
aad
lret
loop
idiv
test
clc
in
sti
out
in
add
jmp
fdivs
imul
out
xorl
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
out
cmc
jmp
mov
loop
xchg
in
ss
cli
lock
hlt
in
ffreep
shl
sub
lock
aad
aam
enter
test
call
sarb
aad
xor
repnz
ror
lock
mov
mov
out
nop
mov
xor
iret
jmp
ret
cmc
out
aad
clc
cmp
clc
aas
sbb
test
addb
mov
jmp
ss
fldln2
idivl
rcl
ret
fstp
mov
into
sub
fldl2t
xor
shl
fxch
aam
shl
std
mov
fsubp
into
enter
loopne
jmp
fcmovnu
rcr
cmp
aam
lock
cmp
sti
mov
test
addb
out
ret
lret
loopne
iret
lret
repz
mov
in
mov
fcmovne
ffreep
addl
sti
cmp
loopne
repz
call
mov
test
aaa
in
hlt
ss
cmp
cmc
aas
hlt
into
loop
cld
ljmp
flds
icebp
cmp
leave
shl
hlt
fadd
leave
iret
xlat
sarl
fsub
aad
in
lret
lret
lret
rcr
aaa
test
lret
roll
jecxz
jmp
jmp
lock
xchg
xor
iret
repz
cmp
clc
iret
iret
loop
in
ffreep
leave
lret
jmp
loopne
in
repnz
in
out
in
das
aam
aad
rcl
cmp
into
lret
aam
aad
test
rcl
loop
out
ficoms
hlt
sti
cmc
aad
ss
fiadds
loope
out
neg
out
test
xor
jmp
sti
shl
out
std
repnz
fcmovbe
mov
out
mov
in
aam
ss
icebp
cmp
fucompp
out
fidivrs
xchg
jecxz
enter
xor
int
xchg
std
icebp
xchg
xlat
jecxz
cmp
in
int3
cmp
icebp
int
sbb
std
mov
lock
into
rol
ret
idiv
leave
int3
int3
cli
jecxz
icebp
ds
stc
cld
cmp
loope
mul
into
mov
mov
aas
les
shlb
not
in
fidivrl
out
les
jmp
repnz
xor
in
fldl2t
in
call
out
cmc
icebp
rol
aam
jmp
loopne
xchg
loop
iret
test
mov
int3
repnz
xor
fdivp
cmp
jmp
ret
flds
fiaddl
call
xor
lret
shlb
jmp
sti
rol
std
rcl
shl
mul
in
mov
mov
xor
cmp
out
ds
test
cmc
mov
aad
mov
ljmp
cmc
shlb
fcmove
sarb
sbb
xor
addb
repz
jecxz
jecxz
fcomp
out
cmp
ljmp
out
xchg
cld
rcr
test
cld
not
lret
sarl
in
fildl
ret
fildl
ror
out
xchg
aam
in
imul
into
int
fcmovne
fcmove
ret
call
mov
in
int
iret
lock
xchg
int3
lock
leave
in
xor
xor
fistpll
inc
iret
ret
shl
aam
mov
ror
test
lret
loop
cs
xor
xlat
fsub
out
aam
loope
test
fsincos
lret
icebp
cmc
lock
icebp
idiv
aas
rcr
out
jmp
loop
inc
bnd
in
mov
loop
iret
lock
cmp
clc
clc
xor
in
aad
fdivrp
cld
into
fstp
in
cmc
sub
icebp
loope
cli
out
lret
stc
hlt
rcl
cmp
shl
aad
jmp
repnz
out
adc
sub
icebp
cmp
out
repnz
testl
cmp
out
xchg
out
out
std
lret
out
into
in
lock
sti
clc
fmul
ror
loopne
loop
cmp
rcr
loope
into
in
mov
test
test
call
xor
shl
xlat
lock
repz
out
rcr
not
int3
xchg
lret
xchg
shr
rol
int3
cmp
cmp
std
cmp
cmp
enter
test
jmp
in
shl
fldlg2
loop
out
fmulp
cmc
loope
sar
shl
fprem1
std
fdivr
loopne
fsub
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
push
jb
cmp
jg
scas
add
in
out
lock
leave
jmp
sti
shl
shl
fsqrt
fdivr
loop
lret
loopne
fdivp
enter
out
leave
xor
in
repnz
aas
loope
testl
loopne
ret
jecxz
cmp
lret
repnz
rcl
repnz
clc
repnz
ljmp
loop
aam
clc
repz
ljmp
cmp
repz
ror
repnz
faddl
ljmp
clc
jmp
sar
cmp
add
fneni(8087
fucomip
ljmp
jmp
mov
ror
lock
cmc
out
in
sar
repz
cld
addb
in
out
repnz
bnd
xor
out
ss
fdivr
cmc
cmp
std
call
cli
mov
ljmp
in
out
xor
fsubrp
xorb
loop
cmp
sub
iret
in
in
enter
sti
in
cmc
xor
test
out
lea
mov
ror
aaa
ror
fcmovu
ds
rcr
shl
repnz
fcmovu
or
enter
lret
in
div
repnz
leave
xlat
cmp
cmp
out
cli
fcomp
test
sbb
cli
loopne
ror
xchg
aad
loopne
out
aad
ljmp
test
cld
int
int
nop
rolb
out
cmp
int
aad
icebp
sarl
cmp
in
sti
cmp
cmp
xchg
int
out
into
icebp
cmp
hlt
adc
shl
enter
cli
addl
into
xor
les
lret
cmp
fldl
and
out
mov
in
shl
cmp
cld
fst
loop
clc
rol
frstpm(287
shl
loope
loope
stc
int
jecxz
mov
mov
in
sub
in
idiv
aaa
cmp
out
cld
fildl
ljmp
test
nop
loop
out
test
fcomp
leave
stc
ds
test
cmp
mov
loopne
in
incl
in
out
xor
xlat
fcmovu
rcl
cmc
ret
fisttpl
cmc
sti
jecxz
fdivp
shl
mov
xor
in
in
cli
lret
cmp
cmp
clc
fcom
xlat
mov
mul
fxch
fiadds
lret
imul
aad
out
repnz
in
loopne
fcomip
loope
xchg
fisttpll
int3
rorl
cmp
xor
sarl
cld
ds
fistpll
fsub
in
lret
aas
lret
lea
aad
enter
fptan
divb
sti
hlt
rcl
neg
roll
fsubp
fdivr
loope
cmp
or
repz
sub
cmp
idiv
fdivr
cmc
loop
in
fdiv
icebp
xchg
icebp
adc
int
repz
aad
jmp
loope
int3
aas
lock
repnz
jmp
mov
in
out
loop
out
ljmp
sti
xlat
out
sar
cli
out
add
ljmp
test
fdiv
enter
sti
cmp
loop
ret
xlat
mov
and
jmp
in
ljmp
bnd
std
jecxz
out
fadds
jmp
mov
out
jmp
cmp
aam
rcl
xor
shl
fucomi
mov
xchg
mov
mov
enter
lock
xor
lret
flds
icebp
rcr
loope
int
xchg
mov
xchg
call
int3
bnd
stc
aas
sar
jecxz
std
jmp
out
cmp
call
into
das
sub
xor
sti
xlat
aaa
iret
adc
out
repz
xor
mov
fbstp
rcr
ret
stc
repz
cmp
cmp
rcr
xchg
cld
xlat
cmc
cli
jmp
in
mov
repz
into
xor
aam
icebp
shl
cmp
test
incl
xlat
faddp
xchg
call
out
ret
cmp
ror
out
rcr
hlt
xlat
shl
fildl
int3
lock
into
hlt
in
call
stc
ss
dec
cli
jmp
in
cmp
loope
enter
test
out
into
xchg
out
fdiv
ret
lret
ror
shr
out
out
adc
sti
mov
sub
rcr
repnz
lock
jmp
loopne
into
add
add
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
ret
ds
fnstcw
loopne
cli
mov
icebp
jecxz
int
cs
fdivrs
idiv
sbb
in
rcl
not
fisttps
nop
in
xor
in
leave
clc
shr
cmp
into
jmp
stc
add
mov
into
fmull
xor
imul
out
in
fcmovne
testl
int
jmp
jmp
repz
in
cmp
enter
stc
fdivr
icebp
div
cld
out
lret
xchg
loopne
xchg
loope
ljmp
xlat
lret
fdivr
stc
ds
cli
loope
cld
mov
repz
test
lock
stc
out
imul
in
fdivr
cli
sti
iret
repnz
sti
out
jmp
fsubr
loopne
aad
repz
ljmp
call
loope
loope
in
fadd
mov
jecxz
xchg
lret
jmp
int3
cli
out
enter
or
sti
fldl
leave
testl
rcl
xor
cmp
jmp
cmp
fdivp
aas
rcl
in
fcmovbe
fisttpl
xchg
repz
call
in
test
mov
out
mov
in
xchg
lret
fcmovbe
jmp
lock
idivl
cmp
cmc
in
lds
loop
hlt
mov
cli
lock
xor
sbb
loop
out
aam
ffree
xchg
jmp
jecxz
loopne
aam
aaa
idiv
clc
iret
cli
fst
cmp
cmp
out
enter
int3
lock
fcomi
out
cld
cmp
cmp
not
jecxz
cmc
mov
mov
jecxz
test
int
aam
xor
xor
fcom
dec
ret
shr
fcom
fcmovnb
in
aam
in
mov
mov
xchg
shl
ss
jecxz
cmp
ror
loope,pt
sar
std
shl
fucom
call
out
out
xchg
rolb
div
ss
cmp
cld
sbb
aas
shl
lret
xchg
call
repz
shl
call
call
adc
call
inc
test
xchg
aam
sub
lret
cmp
out
out
jmp
jecxz
cmp
jecxz
fildl
in
xchg
xlat
xlat
in
xor
lret
fstp
fdivr
rcr
cmc
lret
fld
fmulp
iret
out
icebp
in
xchg
sub
in
lret
leave
cmp
repnz
lds
ret
mov
loop
orl
repz
ss
faddl
call
dec
cld
test
jmp
ret
in
imul
clc
call
shl
loope
xchg
loop
incl
lret
lret
out
xor
cmp
into
out
cli
testb
div
ljmp
jecxz
mov
into
jmp
in
aam
std
fcom
out
ret
repz
faddp
lret
mov
int
mov
loopne
out
aaa
enter
enter
lock
aas
ret
lock
in
xchg
into
test
xchg
out
lret
das
out
sar
jmp
addb
loope
shr
sub
xor
idiv
lock
jecxz
ret
mov
lea
testb
xor
shr
int3
fdivrs
sti
icebp
cmp
cli
mov
loope
test
out
decb
ret
enter
shr
sarl
xor
in
hlt
aam
mov
sbb
decl
aam
vpsrlw
iret
fdivl
call
fstp
lea
out
enter
out
lret
lret
lock
int3
jecxz
rcl
mul
xor
iret
lret
xchg
shl
in
cli
fcmovne
hlt
jmp
lret
ret
cmp
fcomp
rcl
les
fists
lret
aad
ss
fsubr
sar
fucomp
test
and
loope
out
xchg
mov
sub
cmp
repnz
call
rcl
sti
into
cmp
ljmp
lret
in
aaa
in
ret
into
loope
mul
sar
rcl
aad
fcompp
mov
roll
out
ss
cld
std
lock
cli
add
fsub
rorl
mov
jmp
rcl
aad
aad
shll
mov
adc
add
ror
stc
vpsubusb
ljmp
stc
cmpb
movb
shl
aam
xlat
xor
sar
leave
call
adc
sbb
ljmp
stc
or
xchg
fsubp
enter
shl
idivl
icebp
ret
ret
mov
fsubr
in
fmulp
shl
mov
ror
jmp
loopne
lret
cmp
out
lret
call
out
call
in
repz
cmp
fdivr
divl
loopne
loop
cli
fisttpl
test
in
xchg
xor
into
in
fcomi
xor
rcr
sti
repz
in
loope
iret
or
fisttps
fdivrs
xor
xor
out
sarl
repz
lret
test
test
jecxz
hlt
jmp
repnz
repnz
adc
shl
loope
stc
call
cld
out
cld
xor
lds
fcom
enter
repz
xor
std
sti
icebp
stc
rolb
in
cmp
call
lret
aaa
in
test
loop
out
mov
fsts
mov
xor
aam
iret
lret
into
loope
aam
cld
fsubp
xchg
clc
jmp
out
mov
divb
in
aaa
cld
cmp
iret
cld
call
les
notb
out
out
int
out
in
jmp
or
repnz
icebp
sti
test
call
mov
xchg
adc
in
xor
out
xor
out
xchg
in
xchg
mov
repnz
loope
xor
xlat
out
not
xor
xor
rcl
out
sti
fmuls
icebp
mov
leave
enter
iret
lret
jmp
rolb
aam
stc
fldl
lret
nop
jmp
ljmp
lret
cmp
int3
xlat
not
cld
cli
push
call
cli
mov
out
xchg
aad
shr
in
aaa
ljmp
iret
icebp
in
cmp
call
fsubp
repnz
enter
xlat
cmp
shl
ffreep
jmp
and
rolb
int3
cli
rcl
ljmp
in
loope
test
repnz
mov
fcomp
out
in
leave
enter
int3
and
fldl
xchg
fstp
call
ljmp
incl
add
neg
icebp
xchg
and
xchg
repnz
cmc
fistpll
icebp
lock
test
fdivr
enter
test
mov
out
div
jmp
xor
fxch
std
xor
into
sbb
ds
xchg
fisttps
int
int
mov
cmp
xor
lock
fidivrs
iret
add
jecxz
vcvtpd2dq
xchg
jmp
in
xor
rcr
neg
imul
fsubr
lret
repz
ds
sar
leave
and
shl
mov
clc
in
das
fcmovnu
hlt
rcl
loop
aad
aad
aad
test
fmull
jecxz
ret
repnz
fdivrp
bnd
in
test
cli
fmuls
repnz
mov
mov
fdivrs
int
fcmovbe
fidivrs
ss
xlat
into
idivb
out
rolb
movl
aaa
aad
hlt
xor
jmp
cmp
cmp
in
repz
out
aad
cmp
clc
into
icebp
out
jmp
icebp
aad
aas
call
fsub
iret
filds
divb
ljmp
loop
ret
repz
lret
in
fcmovne
out
rorl
out
lds
loop
cmp
lret
clc
xor
into
sti
ret
test
lret
lds
lea
enter
rcl
cmp
loop
stc
in
in
aad
hlt
mov
into
in
sti
mov
lea
fcmovnu
ljmp
int3
iret
out
out
ffree
or
xlat
cld
in
jmp
cmc
test
fdivrl
stc
fdivr
int
ds
roll
in
orb
xchg
leave
rol
ror
stc
cmp
rcl
cmp
out
cmc
ret
loop
out
jmp
enter
loope
xorb
shlb
fcmovnbe
fcmovu
cmc
int3
xlat
aas
loopne
in
sarb
lock
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
negl
jg
scas
add
cmc
loop
cld
mov
loop
lock
rol
lret
in
out
jmp
loop
cmc
fucomi
testb
mov
out
ret
jmp
fisttps
jmp
iret
out
cmp
loop
cmp
testb
mov
int3
out
loopne
ror
imul
das
clc
fidivrl
repz
ds
in
ffree
leave
stc
into
jecxz
lret
jecxz
xchg
xchg
sub
cmp
xorl
jecxz
jmp
sti
in
std
out
lea
sar
lret
fiaddl
sarl
jmp
call
rcl
into
jmp
lock
out
rol
std
lock
ds
fmul
sub
mov
mov
out
leave
rcl
in
in
hlt
xor
shr
sar
inc
hlt
fcos
in
test
in
fsubp
iret
loopne
aam
mov
ds
aas
idiv
hlt
loopne
xor
clc
lret
mov
rol
xlat
out
hlt
xor
ret
xchg
ljmp
repz
rcl
aaa
fldl
in
call
out
xchg
icebp
ss
div
call
in
hlt
fadd
out
hlt
xlat
hlt
aad
jmp
ljmp
in
call
xor
lock
stc
fcom
xor
cmc
sti
cld
hlt
addb
in
out
xor
clc
cmp
leave
sti
repz
shl
test
hlt
in
mov
fneni(8087
in
fstl
ret
lock
fdivr
cmp
sti
aad
cmp
cmc
cli
xlat
mov
lret
mov
fsubp
divl
xor
aad
sarl
aam
sti
rcl
jmp
int3
test
out
xchg
out
aaa
fcmovb
out
clc
cmp
ljmp
test
xchg
loope
loop
jmp
adcb
out
sarb
ror
rcl
ret
fst
out
mov
repnz
out
fcmovnu
stc
test
fsub
hlt
sti
sarl
xchg
filds
in
enter
fstpt
rcr
rol
aas
out
ret
in
enter
into
int3
iret
loope
cmc
int
out
cmp
icebp
shl
frndint
fucomip
cli
loope
in
stc
jmp
xchg
nop
into
xor
lret
test
xor
or
test
fnstsw
fucomip
lock
fcomip
sub
cmp
out
cli
hlt
cmc
cmp
sarl
hlt
fiadds
int3
rcr
sub
xchg
or
out
cmp
cmp
aam
cmp
cmp
fiadds
nop
lea
ss
out
lret
xlat
int3
in
iret
cmp
shl
jecxz
aas
fsubr
std
out
into
fsubrp
xchg
jmp
and
xor
xor
lds
std
out
int
icebp
fcomip
div
out
jmp
out
repnz
cli
shr
fdivr
int3
shr
fcomi
rcl
fcomp
aas
test
jmp
mov
int
or
in
out
jmp
sti
or
lock
fmul
cmc
enter
ljmp
ret
lret
cmc
into
fdivrl
aas
stc
int3
cmp
in
cmc
xchg
out
out
decl
out
iret
shl
in
rcl
fcmovbe
iret
cmp
aas
sarl
fcomi
ret
testb
ficoms
xor
out
leave
cmp
stc
stc
cmp
shl
cmp
fucomp
in
shr
xchg
in
test
in
cmc
imul
lret
stc
ds
cmp
mul
leave
imul
in
jmp
or
sub
fcmovu
in
icebp
in
hlt
aas
loopne
rcl
jmp
in
jmp
shr
shl
out
fxch
in
out
lret
in
sti
iret
cmc
ret
in
cmp
xlat
aad
in
jecxz
lea
loope
in
xor
repz
hlt
push
sti
test
repz
loop
jmp
fsubr
int3
in
out
rcl
leave
ftst
clc
sti
shl
in
icebp
lret
cmpb
xlat
cld
ljmp
cmp
aam
das
out
lret
ds
out
aad
ret
out
xor
lret
lret
enter
fcmovne
loopne
fadd
rolb
lret
xchg
xchg
repnz
xchg
ljmp
pop
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
lds
data16
jg
or
jle
hlt
fidivrl
cmp
shl
ljmp
or
test
addb
out
jmp
xor
fsubrp
leave
cmp
ror
addl
mov
in
loope
das
in
shr
sti
jmp
faddl
test
out
leave
sti
fisttpl
nop
xor
loop
lock
lret
fbstp
cld
xchg
and
ds
faddp
jmp
lret
hlt
adc
shrl
iret
div
idiv
cmp
iret
aam
mul
fucomp
incb
in
in
mov
in
ljmp
cmc
repnz
cmc
int
xchg
int3
shl
cmc
out
cmp
std
clc
cmp
add
cmc
fmul
std
loopne
fstl
leave
ljmp
std
fcos
jecxz
aas
stc
hlt
sbb
clc
shl
enter
jmp
into
shr
cmp
std
into
test
fdivr
and
loopne
shl
in
fiadds
enter
int
fistpll
rolb
enter
fcmove
pause
out
test
ljmp
sar
adc
ret
aas
cld
call
mov
mov
loop
icebp
hlt
neg
aad
ds
aad
rol
shl
orb
xchg
out
and
call
sti
cmp
fldl2e
lret
int3
ds
cld
ret
hlt
aad
std
clc
in
sub
call
in
stc
into
shr
repz
add
mov
int3
mov
les
lret
jmp
int3
in
rcr
cmp
repz
incl
std
lock
xor
xlat
neg
shl
in
hlt
loope
div
stc
loopne
repnz
jmp
sbb
add
div
out
in
sar
shr
cmp
rcl
shl
loopne
cld
cli
orl
lock
mov
leave
in
clc
int
stc
fcomp
cmp
in
stc
loopne
fcomi
ljmp
in
cs
cmp
cmp
iret
in
addb
loop
leave
mov
lock
out
xor
int
ret
divl
in
shl
cmp
lret
out
ret
aas
cld
rol
xchg
mov
clc
ret
fisttpl
xlat
int3
cmp
shr
lret
sbb
cmp
ret
fcmovb
mov
ljmp
call
stc
jmp
cmc
fdivr
fcmovbe
cmp
in
aaa
incb
ret
out
decb
loop
fsubr
out
out
repz
repz
sti
cli
loopne
cmp
cmc
in
xlat
jecxz
int
into
fsubr
xor
lock
shll
cmpb
aam
ds
adc
xchg
in
out
xchg
shrl
ret
in
call
fsubr
out
cmp
xlat
aam
xchg
xchg
shl
leave
shr
int3
jmp
lret
aaa
ret
faddp
mul
rorl
fcmovnbe
in
xchg
out
aam
xlat
fdivrs
into
clc
enter
cld
fldz
out
aam
in
fdivr
nop
loop
out
shr
enter
fcomi
std
cmp
cli
fcomp
addb
ret
ljmp
aam
rcl
out
shll
cmp
shll
in
cmp
sti
hlt
fsub
jmp
mov
in
in
jmp
out
xor
fcmovnu
ljmp
xlat
fdivr
aad
out
mov
jecxz
std
jmp
idiv
fnstcw
leave
lret
into
cmc
lret
stc
lock
testb
xchg
out
out
xor
cli
sarb
lret
cmp
cmp
fdiv
cld
loope
lret
fsubp
lret
xchg
mov
mov
stc
lret
cli
cmp
cmp
repz
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
jno
loopne
or
jg
or
jle
out
std
fildl
xchg
mov
into
xchg
ljmp
cmc
lock
in
ds
in
cli
loopne
lds
cmc
mov
ret
aam
test
out
jmp
aam
shl
hlt
sbb
aad
jmp
repnz
aad
shl
aam
out
fmul
aad
cmp
stc
cld
rcl
icebp
leave
test
leave
shl
orl
xor
cmp
ljmp
adc
xlat
mov
mov
out
stc
jmp
imulb
xlat
fadd
ljmp
fcomp
clc
icebp
out
mul
in
ret
filds
in
sub
jmp
out
ret
repnz
cli
mov
mov
fld
loope
cli
hlt
lret
fcomip
xor
cli
cli
div
iret
out
lock
iret
cmp
loopne
cmp
hlt
hlt
idiv
mov
rorb
test
int
aaa
lret
imul
hlt
lret
jmp
stc
and
sbb
mov
fucomi
and
cli
into
out
cmp
lret
fstp
in
ret
xchg
loopne
in
fucomip
int3
iret
xchg
loope
lret
repnz
xlat
out
fsubr
fdivrl
stc
icebp
aas
out
clc
shl
in
jmp
xchg
icebp
int
out
xchg
in
in
aam
cmpl
xchg
jmp
les
addl
in
xor
push
int3
loop
int
clc
cmpl
ret
out
sbb
mov
shl
in
repz
in
cmp
ljmp
xchg
stc
test
int
std
fcomip
xchg
mov
out
shll
ljmp
loope
in
xchg
fsubp
xlat
out
mov
xchg
ffreep
clc
mul
hlt
xor
fcom
fcmovnbe
aas
not
sar
in
lret
cld
xchg
loop
into
out
xor
ds
rcr
aas
loope
sarl
ret
int3
jmp
jmp
in
call
in
cmp
enter
fsub
test
orl
jmp
into
hlt
enter
fdiv
int
into
cld
fadds
xlat
mov
addb
xchg
test
icebp
jmp
out
in
aad
cmp
cmp
mov
cli
xchg
lock
mov
leave
sub
enter
out
loope
aas
test
out
loope
stc
mov
mov
fmull
in
fnstsw
cld
jmp
fcmovnu
add
out
out
stc
std
roll
divb
ror
into
cmp
sbb
clc
ljmp
cld
leave
jmp
shlb
loop
out
ror
in
rcr
aam
int
ds
sti
out
loop
into
out
nop
std
shll
in
not
cmp
out
test
add
addl
loop
xor
loopne
cmc
stc
jmp
fst
out
cmc
aas
fmul
fstp
add
mov
fdivr
call
xchg
xchg
xchg
test
iret
out
cld
cli
ljmp
cld
incl
loop
mov
xchg
repnz
out
out
enter
icebp
clc
cmp
repz
test
sti
xchg
fdivrp
in
in
jmp
fcmovne
xchg
rorl
lock
xor
cmp
xor
sarl
fld
incl
iret
test
iret
rol
ror
int3
xor
cld
xor
cmp
fucomip
cmp
shl
fcmovnu
movb
loope
xor
call
fcmovbe
out
sarb
shl
ret
ds
cli
mov
mov
out
in
aad
aam
fsincos
roll
repz
call
out
mov
hlt
faddp
aam
aad
cs
into
fiaddl
jmp
enter
arpl
loope
add
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
adc
xlat
mov
repz
or
jle
decl
cmc
aad
shrl
icebp
aad
in
int
into
cli
xor
std
fucom
cli
stc
leave
leave
imul
xchg
fstl
ret
aaa
shl
iret
xlat
aaa
std
leave
loope
std
into
fcmovnb
ret
cmp
cld
mov
int3
xchg
loopne
in
jecxz
aam
cmp
cmp
loopne
jecxz
aad
cmp
adc
cli
call
in
rcr
iret
jmp
icebp
lret
jmp
in
sar
adc
in
out
mov
mov
ret
xchg
lret
sti
aaa
hlt
std
cmp
cmp
ffree
mov
mov
enter
leave
out
aam
enter
fsubr
idivb
cmc
cld
out
int
iret
aam
cld
roll
mov
fucomip
test
iret
hlt
xor
das
fsubr
hlt
flds
xlat
cmp
ljmp
or
fisttpll
ljmp
rcl
fdivrp
icebp
inc
testb
mov
fcoml
shl
fldl2e
cmp
ds
xlat
ror
loopne
roll
in
leave
jmp
test
repnz
xor
in
xor
in
rcr
out
not
fdecstp
in
and
test
iret
out
lret
xchg
aaa
out
fadd
out
stc
xor
cli
loop
icebp
sar
sti
fsubr
mov
mov
int3
call
out
cmc
das
rcr
cld
lock
idivl
int
fdivp
loope
rcr
roll
dec
iret
hlt
fucomip
lock
cmp
fcomi
enter
loop
xchg
fadd
in
and
jmp
in
shr
repz
enter
imul
cmp
cld
mov
xchg
fmul
xor
cld
xchg
mov
aaa
int3
ret
out
aam
fcomi
incl
fcmovu
out
out
in
iret
xchg
repz
mov
divl
aad
cli
stc
ss
aam
cmp
cmc
std
enter
lret
and
lock
ljmp
out
xor
leave
sarl
ds
ret
clc
aaa
cmp
xlat
sti
out
cmc
in
xlat
int3
mov
xchg
not
xor
jmp
ds
cmp
xor
jmp
or
mov
aam
into
xlat
fincstp
call
out
lock
clc
jmp
shl
ret
sub
out
test
enter
stc
fcmovnu
cmp
sti
testl
fsubr
test
subl
hlt
cld
into
in
ss
push
int3
leave
int3
out
out
call
aam
into
fsub
lret
aam
in
int3
iret
in
clc
xchg
jmp
or
sub
xchg
aad
shl
out
aad
shr
repz
fcmovnbe
test
xlat
cmc
int3
fistl
lock
ljmp
test
stc
fcmovnb
jmp
call
jmp
hlt
aad
shr
iret
cmc
leave
into
jmp
idivl
vpand
lret
fucomip
xchg
xchg
in
div
lret
int3
out
fdivl
xor
incb
std
add
enter
in
loope
shr
out
rcl
leave
out
into
rcr
jecxz
xchg
sar
fucomip
jecxz
out
in
call
stc
ss
std
not
cmp
out
in
loop
xchg
fadd
in
fdivr
jecxz
in
mov
repnz
repz
clc
fmulp
jmp
sarl
test
clc
test
dec
mov
jmp
out
mov
fdivp
aas
vcvttsd2si
repz
lock
sti
out
call
aad
fadd
out
fcmovnu
enter
mov
xor
sub
cs
xor
out
iret
iret
test
test
test
xchg
fadds
hlt
imul
xor
leave
aam
sti
aad
fdivp
loop
xchg
clc
ljmp
xchg
fmulp
test
shll
idivb
add
andl
add
adc
jmp
rcl
aad
rcrl
xor
and
jg
or
jle
call
cli
xor
loopne
sti
fcomi
mov
fcomp
lea
int
out
xor
enter
fdiv
stc
roll
loopne
rol
cmp
xchg
nop
test
loopne
iret
cli
fdivrl
int3
out
fidivrs
ds
xor
stc
jmp
out
sti
test
iret
leave
xlat
out
xor
clc
cmp
ret
clc
clc
fcmovne
out
out
jmp
into
out
jecxz
jmp
aas
ds
mul
rol
test
int3
mov
shr
shl
shrl
jmp
aad
cmp
fcmovnbe
shl
cld
cld
rcr
mov
int
lea
lock
lret
out
xlat
aad
cmc
aas
lock
ror
mov
loop
aam
ror
int3
jmp
aam
fdivrp
incb
repz
mov
fimuls
aad
lret
jmp
idiv
sti
cli
roll
rorl
out
out
out
jmp
imull
enter
aaa
fcmovnbe
aam
in
loopne
test
roll
iret
nop
flds
das
xor
enter
std
hlt
hlt
icebp
cli
cld
cld
cld
ljmp
xchg
faddp
in
hlt
jecxz
aaa
aas
xor
std
xlat
fsubp
in
ret
sub
rolb
clc
cmc
divb
repnz
jmp
rcl
cmp
hlt
fcomi
ret
mov
adcb
xor
aad
xor
fnstcw
cld
cmp
roll
lret
vpsubusw
mov
mov
shlb
aam
ror
aad
lret
lret
ret
out
sti
idiv
mov
rolb
cmc
lock
sti
ss
aam
int
std
clc
sti
aas
and
leave
cli
xchg
jecxz
leave
call
idiv
ss
fmul
jmp
lret
fld
cmp
fadd
ljmp
popl
jmp
cmp
fdivp
cld
shl
aam
clc
cld
iret
fldl2t
ds
test
rclb
cmp
repz
ds
call
iret
clc
call
fmulp
sti
iret
jmp
shl
loopne
ret
loop
out
aad
cmp
lret
rcl
test
in
fiadds
into
in
lret
xchg
in
aaa
xor
enter
clc
ss
hlt
rcl
std
lock
leave
lret
ljmp
inc
xchg
hlt
out
fdiv
enter
hlt
xlat
in
not
cmp
stc
cmc
lds
rorb
xor
xor
aaa
leave
sti
iret
test
jecxz
rcr
test
out
call
call
repz
ret
xlat
xor
idivb
rcl
ror
fcmovnu
fldl
cli
leave
mov
int3
xchg
fst
int3
jecxz
iret
sub
into
sarl
int
test
rcl
idiv
fcmovb
fldz
enter
in
in
lret
into
ret
sar
call
cmc
cmp
xchg
mov
stc
icebp
mov
mov
test
cmc
lret
int
iret
aad
iret
lock
aam
mov
stc
in
not
lret
leave
decl
jmp
incb
lock
xchg
orl
int
ljmp
cmp
cmp
hlt
int3
loopne
ljmp
mov
in
sarb
iret
cli
jmp
sarl
out
jecxz
addb
jecxz
jecxz
lret
ss
into
rcr
shr
sti
jmp
ret
xor
test
cld
jecxz
loop
out
ret
xor
xor
repz
clc
fst
rcl
test
jmp
cld
sti
shl
out
xor
sub
fsub
fnstcw
fmull
rolb
fldcw
add
rol
add
sbb
add
add
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
fidivrs
sub
jg
roll
jle
aam
lds
aam
cld
xlat
test
stc
out
jmp
cmp
out
xlat
ss
jmp
rcr
cmp
sarl
ret
int3
fisttps
test
out
out
call
iret
rcl
and
cld
clc
aam
out
in
test
loope
rcl
xor
repnz
not
cmp
int
in
aam
leave
in
in
stc
mov
leave
test
mov
mov
shl
cmp
ljmp
inc
std
icebp
mov
lret
leave
bnd
lock
cmc
int
fsubrp
fcomip
in
rcl
rcl
rol
jmp
xchg
mov
addl
in
jecxz
sar
ljmp
cmp
call
loopne
loopne
fldl
xor
sti
fdiv
std
imul
repnz
cmp
and
xlat
cmp
testb
ljmp
in
in
int3
in
test
repnz
jecxz
jmp
lret
in
out
mov
cs
xor
clc
loopne
in
cmc
rcl
fldl
cli
jmp
jmp
les
out
call
fdivr
cld
ror
fldl
fsubrp
fdivr
mov
mov
out
xchg
into
repz
loop
cli
enter
jmp
repnz
neg
or
mov
std
nop
out
int3
xchg
nop
loope
icebp
out
out
hlt
icebp
enter
rol
and
repnz
icebp
hlt
ret
mov
loope
jmp
fdiv
jecxz
fxch
div
out
icebp
fsub
add
out
faddp
in
test
nop
icebp
ret
loop
ljmp
cmp
jecxz
and
add
movl
into
leave
sarb
fnsave
aam
test
call
ljmp
xchg
adc
in
in
jmp
out
cli
cmc
xlat
cli
decl
sti
xchg
test
out
fcomp
repz
std
sti
cli
hlt
into
sti
out
fdivr
xchg
fdiv
shr
sti
cli
mov
or
jmp
lret
lret
ljmp
fdivrp
fucomip
int3
stc
cld
mov
aam
aam
cli
cmp
sti
aas
icebp
repnz
rolb
jecxz
mul
lret
lret
call
in
jecxz
fsubrp
xor
clc
rcr
out
movl
in
jmp
out
lret
shr
fdivrl
fdivrl
rcr
jecxz
xchg
out
lock
iret
repnz
cmp
aad
into
xorb
cmc
aam
fsqrt
icebp
aad
aad
test
repz
test
call
leave
cmp
rol
faddl
fucom
into
in
mov
pushl
sub
fxch
aam
jmp
shl
fcmovu
aam
mov
test
std
push
int3
cmc
out
int
cli
aad
clc
ljmp
test
shl
lret
in
ret
and
imul
stc
out
aam
cmp
cmp
cmp
idivl
out
aas
hlt
fcmovbe
add
or
adc
mov
xor
xor
in
sar
leave
enter
stc
out
cli
xor
ljmp
call
cmp
lret
ljmp
shl
hlt
jmp
loope
ljmp
ljmp
aaa
cmp
out
aas
repnz
icebp
icebp
leave
std
out
xchg
out
orb
into
test
sar
lock
into
icebp
rcr
dec
mov
out
out
and
lock
icebp
into
repnz
cmp
div
addl
mov
mov
roll
aaa
out
rcr
std
xor
cli
aam
out
jecxz
cmc
faddl
jmp
repnz
shll
clc
iret
out
lock
std
aad
in
call
in
loopne
clc
fmuls
fsts
cs
cmc
in
cmp
in
rcl
rcl
icebp
xchg
clc
ljmp
into
xor
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
jg
roll
jle
int3
clc
xor
call
cmc
icebp
cmp
cmp
idivl
testb
xchg
loopne
mov
sti
cs
fstp
ror
hlt
ror
xchg
test
std
lret
mov
fdivr
in
sti
orl
jmp
repnz
in
fcomip
int
test
imul
fcmove
std
rcr
xchg
or
call
call
aas
sub
ret
call
iret
out
xchg
jmp
xor
das
sti
ljmp
fcmovu
shr
enter
mov
rcll
cli
cmp
fcomp
xor
idiv
cld
sub
loopne
sbb
loop
jmp
shl
in
aaa
cmc
in
int3
sarl
loop
ds
xor
push
fmul
fiaddl
mov
shl
aad
rcl
int
int3
rcl
rcl
sti
int
shl
div
loope
in
out
dec
out
ljmp
shlb
out
cmpb
inc
loope
faddp
loop
loopne
clc
iret
fsubrp
test
jmp
cmc
incb
inc
stc
fcmovu
ljmp
std
xchg
xchg
ss
jmp
leave
int3
jmp
lret
in
std
imul
xlat
clc
fnsetpm(287
jmp
lock
xchg
int3
in
jmp
ljmp
lret
fst
lds
hlt
sti
loop
in
in
ljmp
cmp
rol
jmp
xor
div
cli
cld
cmc
fmul
jecxz
rcl
out
sar
int
aaa
xor
out
call
enter
std
aad
fprem1
mul
cmc
test
mov
ljmp
int3
ror
fidivl
int3
not
lret
shl
fdivr
rol
fldl
sti
mov
cmp
icebp
stc
neg
hlt
test
fcomi
sarb
mov
mov
xchg
decb
hlt
shl
cmp
icebp
jmp
fyl2x
fcmovnu
ret
mov
adc
iret
lock
repnz
lock
in
xchg
les
mov
ret
xor
sarl
int3
std
clc
aas
cmp
clc
rol
xchg
std
call
std
in
out
jmp
ss
ror
idivb
imul
cmp
idiv
leave
out
rorb
loop
ror
ljmp
cld
fdivp
adc
fimull
int
xchg
sti
into
hlt
fst
iret
stc
clc
xor
call
std
sarb
fcmovbe
cmp
hlt
mov
jmp
fdivrp
icebp
sar
repz
cmc
shr
das
hlt
in
out
cmp
fcomp
leave
ret
cmp
faddl
fcomip
out
loopne
in
test
enter
cmp
cmp
xor
cmp
fistpll
aad
hlt
cli
out
enter
int
xchg
lret
in
out
jmp
out
iret
ss
fdivp
lock
sar
xchg
fadds
int
jecxz
ror
nop
loopne
in
iret
fcmovne
out
jmp
fucom
rolb
cmp
hlt
lret
out
nop
xchg
aam
cmc
in
not
int
std
cmp
adc
cli
cmp
cli
leave
fcmovne
cld
mov
ljmp
xlat
sub
repnz
loopne
test
in
jecxz
out
int3
call
ljmp
out
repz
leave
fistpll
shl
fmul
addb
xor
leave
idivb
cmp
in
jmp
cmp
flds
fsin
addb
mov
repz
rcl
in
fstpt
stc
in
stc
repnz
loope
aam
vpmulhw
out
lret
icebp
repnz
sub
cmp
repnz
call
hlt
repz
hlt
adc
cld
out
aas
cld
stc
int
lret
mov
lret
in
repz
cli
int3
jmp
into
xlat
cmp
repnz
loope
test
addl
xchg
xchg
xor
aam
neg
jmp
cmp
repnz
ret
cmp
into
fadd
aas
mov
test
in
loopne
jmp
xchg
out
popl
cmp
repnz
repnz
fdivrl
sti
loope
sar
std
mov
inc
cld
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
jmp
vpsraw
out
int3
xor
cmp
xor
hlt
cmc
out
add
cli
addb
loopne
test
lock
in
fdiv
out
loopne
faddl
fld
fnstsw
fimull
in
ljmp
out
imul
lret
stc
fsubrp
iret
test
shl
jecxz
fcomp
std
sub
out
lret
repz
aaa
cmp
lock
idiv
stc
out
icebp
lock
rcl
ret
mov
cli
in
std
repnz
repnz
das
icebp
out
les
cmc
cmp
cmp
loopne
clc
sbb
test
jmp
xchg
loopne
loope
jecxz
div
call
into
in
not
xchg
test
xchg
lret
jmp
shl
aas
loope
in
int
fcmovbe
incb
jecxz
sub
clc
jmp
in
fdivr
mov
stc
lret
repnz
sbb
cli
iret
sti
fxtract
mov
call
fldl2e
jecxz
xchg
repnz
sar
aam
rcr
sar
rolb
std
sbb
leave
mov
xchg
sti
xor
leave
aaa
out
lret
in
cmp
in
jmp
out
in
in
nop
divl
ror
cli
in
cmp
lock
fsin
test
int3
xchg
out
sti
fmull
ljmp
lock
hlt
cli
test
fdivrp
xor
test
fstp
rolb
repnz
fcomip
cmp
lret
fdivr
cmp
enter
fsubr
iret
in
icebp
fsubr
xchg
xor
ret
leave
fcom
iret
repnz
out
lock
fadd
test
jecxz
cli
icebp
nop
aad
cmc
xor
enter
ror
in
loop
shl
repnz
loopne
leave
lret
mov
lret
clc
int3
fisttpl
jecxz
test
int3
adc
sar
sar
jmp
clc
xchg
in
fsubp
in
aad
fmul
xlat
fidivrl
jmp
fmulp
sar
repnz
xchg
cli
nop
iret
sti
test
rcll
aam
repz
ljmp
std
neg
in
mov
lret
in
adc
test
xor
enter
cld
idivl
fst
in
mov
loop
iret
fcmovnb
call
jecxz
int
hlt
sar
leave
cmp
cmp
sar
iret
faddl
out
jmp
jmp
mov
ret
clc
ss
lock
shl
cli
rolb
mov
shr
mov
test
shl
into
out
xor
icebp
out
aam
into
cmp
sbb
cli
xchg
cmc
int
nop
mov
out
fdivp
rcl
imul
cmp
out
out
cmp
sub
out
jecxz
aad
mov
aam
lock
mov
xor
out
cmp
int3
cmp
sti
testl
xrelease
out
cmp
iret
fxch
cli
into
in
cmp
xlat
fdiv
test
test
std
mov
shll
jmp
fxch
cmp
cmp
jecxz
cmp
mov
incl
stc
addl
repnz
fnstcw
cmc
repz
aam
fcomp
xchg
aam
aad
loop
int
sti
mov
ret
cmc
cmp
fsubr
aas
lret
cmp
cmp
fsub
lret
lret
lret
fists
cld
in
int
in
sbb
int
out
out
stc
cmc
out
out
in
mov
cmp
aad
jmp
repnz
ds
sar
hlt
fld
stc
xabort
in
in
loopne
adcl
cmp
testl
cmp
and
mov
shl
in
loop
out
out
in
int
fptan
lret
xlat
loop
into
xchg
cmp
clc
test
cld
xor
mov
aam
shll
fdivr
dec
iret
out
addl
flds
xchg
adc
aam
cld
xor
repz
call
iret
test
test
aad
in
cld
xchg
shl
test
das
in
cmp
lea
movl
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
scas
push
jbe
and
jg
roll
jle
jmp
hlt
icebp
sti
fildl
fdivr
mov
in
std
fcomip
out
jmp
das
icebp
hlt
ror
aam
jmp
call
inc
rcl
cmc
clc
out
in
lret
xchg
rcl
loopne
xor
int3
aam
idiv
sti
cmp
ljmp
rcr
aad
loop
xor
fisttps
in
fdivrl
iret
cld
jmp
loopne,pt
call
out
clc
lea
repz
cmp
out
fdivrp
sarb
sarb
aam
repnz
out
lea
repz
in
shll
fistpll
ret
addb
xlat
in
cld
mov
xor
fxam
jmp
shr
fcompp
shl
neg
shl
xlat
jmp
mov
mov
addb
lret
icebp
cmc
jmp
sti
int
add
cmp
fiadds
mov
mov
notb
sti
jmp
loopne
aad
repnz
cld
fcomp
mov
out
loope
fldl
int
out
in
sarl
adc
sti
cli
fcmovnu
xor
stc
lret
loop
mov
leave
hlt
int
aam
jmp
repz
shr
flds
aam
cli
lret
fmulp
nop
lret
mov
clc
cmp
xor
int
iret
add
neg
test
add
lret
dec
fdivrp
in
loope
loope
xabort
in
out
cld
fcmovnu
aad
or
loopne
jmp
test
ret
nop
dec
icebp
shl
int3
hlt
in
out
stc
lock
fadd
test
out
roll
leave
into
lret
repz
xchg
lea
repnz
int
leave
cmp
in
leave
xor
loop
repz
cmc
stc
test
lret
xchg
sar
int
aad
out
repnz
cld
rcr
loopne
cli
in
loopne
addl
call
aam
shr
in
bnd
clc
repz
jecxz
loop
call
shl
out
ljmp
ljmp
icebp
shl
add
test
aad
shl
addl
xor
lret
cmp
sti
call
test
aad
stc
testl
fisttpll
jecxz
rol
cmc
call
ffreep
sar
cmp
sbb
xlat
jecxz
out
xor
xor
xlat
call
dec
fdivr
rcl
fldl2e
clc
out
loopne
in
loopne
repz
repz
stc
frstpm(287
out
ror
lret
cmc
rol
mov
std
ret
test
loopne
jmp
lret
shr
lock
idivl
rcr
iret
out
clc
rcr
std
ret
fldl
ljmp
shll
cmp
loope
ds
rcr
out
mov
adcl
aaa
xor
xor
test
loop
out
enter
adc
loop
cs
xor
clc
cmp
cld
cmc
hlt
icebp
cmc
fiadds
out
xlat
lret
adc
sub
loopne
call
int3
into
in
shr
in
fsub
repz
std
addl
loop
aad
xor
cmp
enter
out
aas
in
out
adc
ljmp
iret
addl
out
jmp
ret
test
and
idiv
int3
test
lock
shl
lret
xor
cmp
cmp
rcl
std
lock
loopne
mov
stc
fcmovnu
mov
call
clc
int
int3
fninit
in
sar
mov
out
leave
dec
icebp
in
rolb
in
cli
leave
ror
lret
hlt
ds
shl
aam
testl
leave
into
ss
idivb
cmp
aam
xor
les
int
ljmp
jmp
cmp
fst
loop
ds
mov
ljmp
in
loope
aad
int3
xor
icebp
in
out
adc
aas
test
loopne
test
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
ljmp
jle
add
out
out
roll
clc
xor
cmp
into
cmp
repnz
aas
addl
int3
sub
mov
notb
out
cmp
call
sti
test
out
out
lret
sbb
cmc
out
cmp
cli
cmc
sbb
ds
bnd
loopne
leave
mov
lret
in
orl
call
fcmovne
in
loopne
aad
imul
fcmovne
dec
sub
out
lret
leave
cmc
jmp
divl
ret
icebp
out
rcr
hlt
sti
into
mov
in
fcomi
hlt
xor
out
fdiv
sti
ljmp
out
repz
cli
into
out
out
xchg
ret
lret
out
xor
repnz
cmp
loopne
sar
xlat
out
cld
jmp
jmp
popl
cmp
shl
lret
ljmp
in
aad
mov
fcmovne
shr
or
xor
int
lret
xor
cld
fdiv
sbb
aam
loope
test
in
test
rol
int3
xlat
cmp
xlat
shl
iret
cmp
loop
fsub
fdiv
cli
jecxz
loop
into
nop
jecxz
into
testb
in
ljmp
cli
cli
test
loope
loope
lret
test
fmul
in
cmc
fdivrs
sti
aas
sbb
orb
mov
test
icebp
lock
fmul
out
cmp
repz
test
imul
into
cmp
lock
xchg
in
jmp
fld
xlat
enter
rcl
cmc
test
xchg
lret
hlt
mov
test
cli
fsubr
aad
jmp
int
clc
hlt
cmp
int
dec
xlat
vpaddw
test
mov
in
int3
xor
repnz
cmp
fcmovb
clc
xlat
icebp
in
repnz
jecxz
sti
xlat
ljmp
xchg
jmp
in
leave
ror
sti
neg
rolb
xchg
jecxz
stc
out
repnz
div
aaa
out
out
out
fcmovnbe
lret
into
fnclex
in
clc
aam
flds
sti
fiadds
mov
out
divb
xor
cmp
lret
repnz
shl
jecxz
in
leave
in
out
mov
in
mov
xor
stc
xor
std
jmp
test
std
ret
jecxz
loopne
mov
aam
hlt
in
hlt
shrl
rcl
jmp
jmp
stc
test
in
ret
ds
lret
ljmp
jmp
out
lret
cmp
aam
fcmovnbe
decb
fucomi
out
leave
lret
xchg
out
enter
xor
sarb
stc
aad
mov
mov
lock
out
rol
xor
int
in
and
jecxz
in
jecxz
fiadds
xchg
xchg
jmp
icebp
clc
out
xor
testb
mov
aam
cld
mov
jecxz
xchg
fsubp
in
fdiv
lret
test
divb
cmp
in
test
mov
std
mov
sti
jmp
leave
icebp
rcl
jecxz
out
clc
ljmp
loopne
cli
out
fidivrl
test
repz
jmp
jecxz
icebp
xchg
fcom
jmp
iret
into
out
icebp
lock
xrelease
sbb
out
mov
fdiv
xchg
aad
ljmp
sti
ror
sarb
xchg
ljmp
xchg
rcr
ljmp
addl
test
in
xchg
iret
fcom
iret
xchg
jecxz
xchg
int3
jecxz
leave
leave
icebp
enter
aam
ret
and
orb
test
lock
lret
cld
in
cli
in
jecxz
aad
jecxz
int3
mov
out
shr
shll
shlb
icebp
in
fidivrl
ljmp
push
std
out
out
fnop
mov
iret
loopne
xchg
lock
aaa
ss
fmul
repz
aad
jecxz
std
int3
in
test
lret
test
out
xlat
sub
cmp
in
jmp
aam
enter
aad
cmp
and
nop
jg
roll
jle
loop
iret
aas
loop
incb
sbb
loope
jmp
xchg
fcomip
call
fmulp
hlt
xor
stc
repz
test
cmc
call
shl
out
mov
iret
lock
shl
ss
into
ljmp
cli
shl
mov
leave
call
addl
cmp
stc
loope
cmp
cmp
test
jmp
ret
test
out
call
out
in
ds
icebp
ljmp
hlt
jmp
xor
mov
orl
jmp
clc
loope
fdivrp
loope
fadds
xor
out
fcoml
clc
mul
aaa
in
jmp
stc
rcl
neg
mul
idiv
lret
in
fiaddl
xchg
lea
fsubr
sar
test
cmc
rol
mov
into
fucomp
nop
xchg
xchg
ret
in
ss
jmp
inc
loope
ret
mov
cld
call
sub
repnz
cmp
fadds
cli
in
aad
fiadds
jmp
xor
lret
cmp
idiv
cmp
faddl
aad
xchg
leave
mov
shl
in
ror
clc
iret
xor
aam
iret
cli
cmpb
test
mov
test
out
divb
clc
cli
icebp
loop
xlat
xchg
xchg
jecxz
xchg
cmp
fnstenv
aam
lock
cmp
cmc
adc
enter
out
mov
in
in
jmp
enter
cmp
in
out
out
sti
test
in
sbb
faddp
xchg
int
xchg
out
aam
in
in
lock
cmp
stc
jmp
loop
iret
in
fmulp
repz
out
repnz
repz
and
cmc
in
mov
out
in
fadds
test
repz
fidivrl
int
aas
cld
cld
sti
mov
int3
clc
xchg
cmc
aad
leave
aad
int
call
rcl
adc
ljmp
in
loope
repz
xor
shll
lock
shll
cmc
std
loop
leave
mul
addb
or
out
loop
out
fcmovbe
out
cld
lock
rolb
rolb
in
shr
hlt
cmp
cmc
cmc
lock
fldpi
fucomip
ret
repnz
fdiv
into
xchg
fcmovne
roll
fdivrl
lret
fdivrs
shl
shr
cmc
idiv
stc
mov
mov
ror
adc
repnz
icebp
shll
xor
std
cmp
fiadds
int3
lret
ljmp
test
fcmovnu
loopne
cmp
int
add
in
jecxz
in
in
xchg
xchg
std
fsubp
aaa
ljmp
ljmp
xlat
fcom
in
incb
fildl
xor
in
in
stc
xlat
ljmp
rcl
xchg
repnz
clc
ret
int3
test
stc
loopne
add
hlt
imul
sti
mov
xchg
sar
lret
shl
xor
fdivrp
xor
cli
icebp
clc
cmpl
aad
mov
xchg
das
jecxz
jmp
cmp
aas
cli
loop
fucomi
ret
in
lret
sti
filds
in
out
call
into
enter
repz
sarl
fidivrl
std
ljmp
out
sub
enter
rcl
aam
fcmove
sub
jecxz
jecxz
sub
clc
imul
mov
xchg
loop
int
int3
xor
cmp
hlt
cmp
cmp
rol
loopne
testl
in
rorb
xor
in
das
out
dec
out
cmp
ret
jecxz,pt
loopne
mov
mov
fiadds
loope
iret
into
xlat
out
shl
rcl
testl
fiadds
xchg
repnz
lea
dec
cs
clc
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
int
cmc
icebp
sar
call
cli
or
hlt
inc
loope
ljmp
mov
jmp
xor
hlt
repnz
loope
fcomi
aas
call
fisttps
xchg
xchg
shlb
lock
aam
in
xor
fcmove
aam
sti
xlat
aad
or
in
int3
rcll
sub
leave
aam
icebp
enter
loope
fcmovu
testb
mul
fildl
enter
out
clc
rcl
stc
xor
std
vpaddq
fdivrp
fucom
loop
int3
jmp
xchg
int
loopne
cmp
aam
cmp
loop
in
enter
inc
in
fcomp
mov
repnz
cmp
in
fst
cmc
rcl
aaa
addl
out
icebp
mov
int3
jecxz
out
lds
out
in
loope
fadd
in
fcmovb
xchg
hlt
loop
leave
xchg
test
aam
loop
cmp
lret
xor
sarl
out
repnz
cmp
stc
adc
movl
clc
shl
out
jmp
cli
dec
rcl
lret
aad
ds
ret
les
xchg
addb
in
call
in
jmp
sti
adc
jmp
hlt
in
fsubp
sti
testl
out
ss
stc
pushl
clc
xor
fildl
in
orb
cmp
ror
icebp
xor
jmp
sar
cld
shl
cld
repz
lret
cli
fsubr
into
aam
aaa
ret
cli
out
lret
loop
cmp
in
fcomp
out
cmp
sub
out
jmp
into
jmp
in
fdivrs
clc
fistpll
test
in
mov
in
mov
repz
in
in
in
fdivrs
out
out
lret
out
icebp
aas
cmc
add
leave
out
lock
out
mov
xor
fcmovbe
rcl
inc
loopne
test
jecxz
sar
mov
in
cld
xor
loopne
out
xor
neg
test
jmp
fmull
loop
xor
ret
icebp
in
call
addb
rolb
out
fucomp
hlt
shl
out
sarl
idivl
lret
repnz
xlat
cmp
addb
xchg
ficoms
into
jmp
add
ss
test
out
leave
xchg
mov
int3
in
out
out
xor
cld
lret
out
shll
cmp
repz
movl
leave
sub
cmp
in
ljmp
cld
leave
out
cli
cmp
mov
decl
leave
into
rcl
jmp
loope
int3
aad
jecxz
hlt
rolb
test
in
in
aaa
lock
hlt
vpslld
fcmovnu
repz
cmp
rcr
rcl
out
test
fsubr
xchg
bnd
in
into
shr
clc
fadd
fstpt
rol
sbb
aad
and
lret
out
jmp
ret
xlat
aam
aas
jmp
icebp
in
cmp
sti
leave
rorl
jmp
filds
cmp
sti
cmp
enter
idiv
ret
stc
fsub
sub
int
sti
jmp
rolb
call
rcr
ss
cmp
aas
repnz
shl
out
ljmp
mov
orl
aaa
sar
cmp
sti
and
mov
leave
out
mov
mov
loope
shl
iret
in
jmp
in
cli
rcl
cmp
xlat
std
and
not
xlat
loopne
loope
mov
lock
ror
sub
sti
in
cmp
or
xchg
aam
cmp
test
and
xor
ror
enter
rol
lds
fmuls
xchg
adc
lret
in
ljmp
mov
cmp
hlt
mov
xchg
repz
clc
int3
iret
std
int
lret
cmpl
mov
les
add
xor
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
or
cltd
jg
roll
jle
faddl
or
lea
aam
cmc
fdiv
out
ror
aam
out
cli
shl
out
incl
call
loopne
in
mov
ror
cmp
cmp
repnz
cli
in
enter
in
imul
call
aaa
leave
lret
cmpl
aad
fiadds
leave
fmul
out
in
loop
aad
cmp
icebp
cmp
sbb
cld
cli
aad
sbb
in
test
lret
xchg
xchg
shr
jecxz
xor
std
fdivr
ss
leave
in
call
cmp
fcmovbe
hlt
lret
mov
mov
out
imull
imul
ljmp
lret
shl
cmpl
mov
loope
enter
sar
icebp
rcr
hlt
movl
sti
add
out
out
std
test
aad
aad
lret
rcr
rolb
fdivr
loop
sti
std
xchg
addb
clc
stc
int
cmp
jmp
int3
fcmovnb
shl
loope
loopne
fmuls
std
int
out
cmc
call
leave
repz
fsubr
rolb
idiv
ret
in
mov
std
out
in
xchg
enter
aam
fsubr
icebp
enter
xchg
cmp
fucom
test
lea
test
clc
clc
adc
into
rcr
shr
in
mov
in
fxch
lds
ss
loopne
lock
cmp
mul
sti
out
repnz
std
xchg
nop
subl
std
ret
fildl
int3
addl
inc
xor
idiv
fdiv
cmp
cmc
hlt
xlat
fcmovu
xchg
in
mul
out
in
lea
jecxz
cmp
sar
neg
sar
xor
call
fiadds
cmp
sar
rcl
sti
int3
jmp
rcl
hlt
int
cmp
test
and
mov
idivl
aaa
into
neg
sar
rolb
out
shl
call
loop
sub
cmp
out
ror
enter
rol
cmp
fiaddl
loop
out
out
lea
fnstenv
cld
icebp
repnz
and
repnz
in
mov
mov
out
repz
sarl
loop
fst
roll
cli
std
in
jmp
nop
ljmp
in
xor
cmp
jmp
iret
out
clc
loop
test
enter
xchg
lret
addl
aaa
cld
out
xor
ds
sti
mov
fcomp
loope
icebp
lret
shl
aaa
shl
into
lock
fidivrl
aaa
jmp
cld
ds
std
hlt
clc
test
int
test
jmp
xchg
out
hlt
cmp
out
jmp
aad
cld
fsubr
aam
fsubrp
int
incb
call
lret
lret
xor
repz
repz
jmp
in
sti
in
clc
aas
fucom
in
mov
xor
das
fcmovnbe
lock
cld
loopne
mul
in
out
into
fsubr
into
fstp
mov
enter
shr
jmp
ss
fadd
lock
cld
sti
cli
out
int
mov
in
imul
clc
jmp
hlt
rcr
cmp
rcr
ret
ret
fcmovnb
xlat
fucomip
or
vfrczss
xlat
lret
neg
clc
aaa
xlat
std
icebp
shl
std
shl
test
nop
hlt
mov
sar
repz
fdivl
cmp
in
ffreep
shl
cmc
loope
ljmp
rolb
lock
div
out
in
icebp
lock
fsubp
ret
loopne
leave
shl
rolb
leave
jmp
rcr
iret
ljmp
out
xchg
loop
icebp
rcll
xor
out
enter
cmc
lret
fdivr
loopne
clc
cmc
std
xlat
jecxz
out
loope
test
xchg
ss
xor
out
xor
jmp
enter
fmul
fnstcw
fnstenv
pushf
inc
popf
jg
roll
jle
xor
fdivrs
repnz
sbb
mov
sub
cld
lret
out
not
enter
out
sti
stc
in
or
cld
aas
neg
hlt
test
cld
faddl
ss
in
aad
fcmovnu
shl
cli
repz
loop
mov
in
sti
out
fsubrp
out
xchg
rcl
out
cmp
xor
fcmovu
filds
sbb
fsub
loope,pt
xlat
mov
in
cmc
in
aam
sti
cmp
cmp
mul
xor
out
mov
ljmp
aaa
shlb
lret
sti
cmp
iret
int3
jecxz
xchg
leave
xlat
iret
ret
cmc
notb
cmp
jmp
in
rcr
fcmovne
in
xlat
xchg
fiaddl
jecxz
ret
shr
mov
cmc
xor
cld
aad
cmp
aas
lock
movl
std
lret
out
ret
out
cmp
lock
fadd
faddl
cmp
mov
fucomp
int3
loope
int
enter
in
xor
fcmovne
cmp
xchg
sbb
leave
fiadds
dec
jmp
jmp
shr
out
repz
hlt
mov
fiadds
out
icebp
ror
xor
jmp
stc
xor
in
fst
not
lock
mov
mov
rol
fdivrl
sti
clc
iret
iret
lret
jmp
ret
sarb
stc
idiv
mov
ljmp
cmp
cli
cmp
fcos
addb
xchg
loopne
sbb
repnz
rcl
jecxz
jmp
ds
in
rcl
leave
in
xchg
in
out
in
icebp
xor
cmp
lock
std
aad
iret
test
shr
cmc
or
call
cmc
jmp
sub
sti
lock
xlat
faddl
out
aad
mul
lret
int
xchg
mov
icebp
fmul
out
cmc
cmpb
cmp
ret
addb
repnz
ror
iret
enter
fistpll
icebp
repz
fdivrp
xlat
leave
aad
mov
xchg
call
hlt
aad
in
xor
repz
xor
shl
cmp
fisttps
xchg
std
test
ret
fcmovnb
in
rcr
cmp
into
repnz
call
mov
fucomip
cld
mov
mov
rol
in
out
xor
cmp
cmp
loop
fadd
call
sti
test
xchg
jmp
lret
ss
aad
loop
rol
fucomi
in
adc
ffree
jmp
int
loopne
loopne
fcomp
rcl
fprem1
fcom
loop
shl
cmp
jmp
mov
jmp
into
icebp
call
rol
fsubr
enter
shl
loopne
xchg
out
xchg
loop
testl
icebp
leave
in
cmc
cmp
cmp
cmc
fcomip
xchg
cmc
cmc
jmp
mov
leave
out
hlt
in
sub
shlb
xlat
in
ror
lock
cld
sti
fdivrs
stc
fst
call
sti
test
shr
xor
fldl2e
cmp
fidivrs
shl
sti
in
rcr
cli
cmp
mov
movl
ss
ljmp
sti
repz
cmp
xlat
xchg
stc
testl
lock
sub
ss
xlat
aad
repz
aam
filds
int
fcomip
sub
repz
xlat
lock
cli
roll
xor
sbb
std
sti
jecxz
fdivr
cmc
mov
ror
ret
cmc
in
clc
clc
stc
sbb
lds
loopne
out
xchg
hlt
clc
in
shl
sti
out
lret
cmp
shl
fcomp
xor
clc
sub
fistl
xchg
decl
ror
fcmove
cmp
fdivrp
in
jecxz,pt
rcl
testl
out
mov
mov
int3
int3
repnz
rolb
adcl
jmp
enter
fst
ffree
and
dec
jo
adc
push
push
mov
jle
sub
sub
call
out
in
jmp
cmp
div
test
mov
roll
or
div
xor
fstp
out
cmp
ret
stc
lock
loop
mov
leave
push
in
xchg
jmp
das
xlat
fmul
cmp
loopne
hlt
fdivr
in
out
test
xchg
stc
in
fdiv
fsubp
iret
xor
jmp
iret
fsubp
dec
jecxz
f2xm1
hlt
mov
fdivr
popl
shl
xchg
xor
repz
jmp
out
cmp
ljmp
ljmp
icebp
in
in
int
in
hlt
xor
out
xor
cmp
out
repz
fimull
out
shr
in
out
xor
sarl
jmp
xlat
fcomp
int
shr
ret
aas
repnz
fldz
stc
in
mov
out
xchg
lret
fcmovbe
int3
fidivl
addb
xchg
testl
loope
decl
hlt
cmp
fst
in
roll
loop
add
lea
cld
rcl
out
loop
jecxz
xor
int3
lock
iret
repnz
lock
fmull
nop
loopne
lock
cmp
int
into
icebp
neg
sar
shr
stc
mov
fimull
incl
loop
out
iret
fdivs
ss
out
cld
cli
idivl
int
test
cmp
in
fadds
call
loop
xor
fidivrs
ss
fisttps
mov
xor
xor
sub
out
lock
idivb
iret
fcmovne
out
ffreep
jecxz
fdivp
out
xchg
lret
out
loope
or
in
xchg
shlb
int3
int
fcmovnb
cmc
fsubrp
sarb
icebp
std
testb
ljmp
jmp
shl
xor
xor
lock
rcl
fiadds
jecxz
loopne
fldl
int
call
xlat
aaa
repnz
cmp
int3
cmpl
aad
loope
fucomip
fisttpl
out
call
into
fdivrp
rcl
push
out
and
enter
stc
iret
in
cmc
mov
xor
call
loopne
int
aad
jmp
icebp
leave
loope
mov
testl
xor
cmp
iret
cli
stc
cld
fadd
fdiv
cmp
in
fcomi
iret
add
icebp
shrl
iret
call
int
call
xlat
loope
aas
sar
cld
cld
std
cld
shl
iret
loope
ss
out
fcmovbe
clc
sub
jmp
add
cmp
loop
add
and
rcl
int
hlt
aaa
fst
rol
fsubp
test
test
in
idiv
fucomp
cld
test
aaa
out
xor
out
sar
ret
stc
fcmovb
fnstsw
cld
mov
cld
call
shrl
clc
fsubr
sar
fsubr
aam
jecxz
fdivp
test
in
neg
lret
ljmp
in
xchg
jecxz
xor
stc
lret
ds
in
int3
sti
cmpl
decl
addl
xor
lock
sti
loope
cmp
mov
loope
vpmulhuw
int3
sub
repnz
stc
cs
fcmovu
add
hlt
fcomip
sti
sti
aad
cmp
call
repz
xor
enter
in
aam
hlt
test
test
std
std
aam
fiaddl
fisttpll
enter
fucomi
cmp
loope
loopne
in
int3
fsubrp
jecxz
out
decl
shl
enter
into
cmp
jecxz
ret
std
call
shl
xchg
rol
in
out
aad
int
cmc
test
cli
mov
loope
xchg
lea
cmc
loope
loopne
repz
imul
div
cmp
cmp
stc
mov
enter
in
loop
rol
imul
repnz
rcr
cmc
cmp
loope
cmp
cmp
sbb
in
fimuls
shl
enter
out
out
xor
fiaddl
fiadds
add
arpl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
cmp
mov
jle
add
sar
xorl
mov
clc
jecxz
sub
or
xchg
lock
fdiv
repnz
call
cli
sti
orl
cli
sub
jmp
test
cmp
xor
into
cmp
out
loop
neg
jmp
cld
ljmp
sti
out
cmpb
test
cmp
sub
test
loope
enter
std
pop
xlat
out
shl
xor
incl
int3
fcomip
ret
movb
mov
out
ss
call
enter
sbb
shr
stc
cli
cli
sti
call
and
ror
call
ds
int3
cmp
shl
stc
jmp
jmp
ljmp
in
clc
in
shr
sti
cmp
in
out
enter
ret
in
fcmovnbe
addb
loop
out
mov
int3
fsubr
bnd
std
int
clc
in
faddl
xor
sti
fndisi(8087
enter
in
out
out
call
into
in
aad
hlt
fucom
std
fcmovne
jecxz
lret
enter
xchg
rcl
repz
das
out
enter
sarl
sar
cmp
test
fcmovnb
call
jecxz
std
dec
xchg
xchg
xchg
out
xor
in
clc
cmp
aam
cmp
aas
fucom
repnz
clc
mov
xchg
into
mov
rorl
xor
fdivrs
rol
in
xor
cli
call
vshufps
xchg
rorl
sub
cmp
repnz
xor
xchg
ret
mov
nop
shl
mov
mov
in
cmp
in
enter
repnz
div
ljmp
mov
shlb
xor
out
shl
ljmp
test
faddp
std
enter
jecxz
xchg
mov
cmp
lock
loope
fsub
icebp
out
cmp
rcr
out
mov
ror
in
fcmovne
in
cmp
fcmovnb
ret
fnstcw
leave
out
add
in
or
shl
fcmovu
aaa
cmp
iret
ffree
repz
test
in
fcomip
nop
leave
iret
out
clc
ss
shl
icebp
rcr
sbb
ret
out
std
sub
dec
loope
loop
in
xor
icebp
cmc
int3
fidivrl
aad
fistpll
fadds
bnd
testl
jecxz
int
ret
sar
cmp
icebp
out
fmul
in
fst
aad
fdivr
test
in
call
jecxz
into
xor
fcmove
cmp
rcl
rcr
repnz
div
repz
lret
jmp
xchg
mov
in
in
icebp
aam
fdivs
icebp
test
aam
xlat
in
in
ret
ret
in
in
imul
rclb
shl
lock
ss
iret
std
sar
in
cld
cld
test
fdivr
mov
mov
int
xor
int3
ss
xlat
in
out
ljmp
jmp
cmc
leave
xor
out
int3
sti
out
cmp
in
in
ret
aad
enter
add
lret
jmp
in
xlat
in
imul
out
cmp
rcr
addl
clc
into
jecxz
jmp
enter
clc
not
clc
cmp
test
in
mov
mov
int3
xchg
ljmp
hlt
lret
sti
lds
test
int3
loopne
cmp
rorb
fcmovb
sti
enter
in
into
in
cli
out
hlt
fmul
in
jmp
test
jmp
jmp
xchg
mov
xchg
int3
ret
ret
into
xor
hlt
std
rcr
cmp
ret
sti
sar
repnz
fndisi(8087
ffree
mov
in
int3
in
clc
shr
rol
clc
out
cmp
cld
aas
out
vpsrld
ljmp
iret
fcmovnu
sti
loop
iret
aaa
leave
in
iret
cli
into
rolb
repnz
loopne
faddl
jmp
into
icebp
ret
std
out
enter
cli
hlt
filds
sti
jmp
test
aaa
cmp
add
mov
test
inc
add
adc
movl
add
jmp
aas
aam
int3
aad
lret
fstl
pop
mov
add
div
xor
repz
sti
cmp
rcr
clc
rol
ds
cli
loope
std
jecxz
mov
aam
int
cld
int
shl
fsub
sbb
neg
sub
mov
loop
into
xlat
cld
in
cmp
aas
fucomip
hlt
repz
int
lret
test
test
sub
lock
lret
aaa
stc
int
shl
out
cmp
sti
xchg
mov
mov
sti
fcomp
cmp
aas
out
cmpl
aas
fst
xlat
jmp
leave
fcmovu
out
xchg
cmc
add
aad
cmp
aas
cmp
int3
shl
loope
repnz
ret
loopne
ror
sbb
cmp
out
xor
aam
xor
cli
loope
in
icebp
in
leave
test
xchg
orl
ljmp
sti
shl
rcl
fdiv
clc
xlat
loopne
loope
or
sub
in
aaa
iret
int
aad
leave
clc
sti
sar
aad
sti
enter
sbb
int3
int3
aad
loope
stc
cmp
jmp
sarb
repz
loop
lret
loope
out
jecxz
jmp
call
fmul
int
fucomi
lds
mov
out
loop
in
test
loopne
aaa
cmp
in
cmp
sarb
add
lret
and
int3
ljmp
cld
out
rolb
loope
and
leave
in
fdivrp
icebp
sub
aaa
cld
cmp
in
leave
ljmp
repz
loope
out
mov
lock
shr
test
xor
out
cmp
neg
cmpb
rcr
repz
sbb
xchg
mov
not
loope
ljmp
jmp
div
repnz
shr
call
fcom
mul
iret
jmp
cmp
in
xlat
mov
in
mov
std
cli
addb
clc
in
cmp
sarb
repz
cmp
cmp
rol
mov
ds
xchg
hlt
xchg
int
ret
out
cmp
fnstsw
in
test
mov
fstl
fnstenv
hlt
hlt
fiaddl
and
sti
leave
fdivrp
fiaddl
das
cmp
sti
call
cli
hlt
jmp
cmp
adc
fnclex
enter
jmp
int3
xlat
iret
xlat
cmp
cmp
stc
fiaddl
aad
in
in
mov
rcr
iret
jmp
shr
xor
jmp
test
in
jmp
out
in
xchg
jecxz
xor
loop
leave
shll
iret
fdivrl
cmp
lock
int
int
fimull
jmp
cli
xor
ljmp
out
lock
lret
mov
leave
fxam
jmp
xchg
shl
sub
xor
in
cld
sarb
sti
iret
adc
in
out
sub
into
mov
shr
filds
in
xlat
fbstp
lret
jecxz
idiv
faddl
sti
mov
lret
ret
rcr
shl
xchg
xor
call
xor
icebp
lock
cmc
lds
mov
jmp
orl
in
jmp
fcmove
xor
ret
shl
ret
xlat
jmp
mov
int
int
nop
shlb
in
xlat
and
into
jecxz
out
out
xchg
incb
fildl
stc
xor
out
in
repz
sti
aam
cld
mov
flds
cli
int
in
aam
in
aas
ror
cld
ljmp
std
aad
roll
rorb
aad
repz
jmp
fdivrp
cld
int
roll
mov
fsubr
in
or
xchg
das
loop
xor
lret
cmc
cli
xor
ljmp
mov
sarl
stc
xchg
out
loopne
in
loope
xor
ss
clc
cld
rcr
out
rol
out
cli
fisttpll
mov
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
lcall
jle
add
les
xchg
mov
repz
fdecstp
fnstcw
xor
repnz
ljmp
iret
test
call
cmp
call
sti
frndint
xlat
in
lret
addl
fnstsw
test
in
leave
lret
sub
repnz
cmc
call
lea
out
cmp
aam
into
ds
aad
loop
out
fld1
mul
in
xchg
loopne
iret
test
cmc
std
xor
cmpb
icebp
faddp
aam
loope
out
aad
xchg
loope
std
icebp
lock
cmp
in
shl
fucomi
and
jecxz
call
ret
mov
leave
fmulp
loopne
out
xchg
iret
aaa
shll
cmp
shl
fstp
aas
les
enter
orb
int
int
xor
fcomp
iret
ljmp
loopne
cld
stc
out
out
in
out
int
jecxz
repnz
out
cmp
loopne
lret
in
fadds
and
jmp
jmp
out
repnz
aad
stc
cmp
lret
xlat
sti
lock
enter
idiv
xchg
test
xchg
shl
inc
aaa
xlat
aaa
cmp
jmp
lret
out
fxch
loopne
mov
ljmp
iret
stc
loope
fstpt
in
cmp
and
out
orl
or
testb
cmc
aam
fbstp
out
cmp
out
cmpl
mul
fadd
repnz
loopne
cmc
rcl
jecxz
fcmovnbe
cmp
rcl
test
add
repnz
mov
fucom
xchg
rclb
cmp
sarb
fadds
jmp
sbb
std
aam
xchg
lret
shr
out
imul
xor
loopne
call
and
lret
test
mov
loope
aam
repz
adc
roll
incl
aam
xorl
out
fstp
aas
icebp
in
std
test
idivl
clc
mov
std
fninit
out
loopne
xchg
out
cli
cmc
shr
fsub
in
aam
test
mov
sti
xchg
sub
clc
ds
cmp
loop
in
leave
loope
iret
rcl
in
int3
out
fnstcw
leave
cs
lret
ret
icebp
loopne
ret
fildl
mov
xor
out
mul
cmp
ljmp
stc
out
in
sti
int3
rolb
shll
enter
in
out
fstp
cli
in
xlat
sar
test
ret
ret
in
in
lret
mov
ret
in
repz
lock
std
out
lret
std
fsubr
in
jecxz
test
leave
mov
lret
enter
into
xchg
fcomip
sar
int3
aaa
out
shr
fxch
inc
ret
cmc
xchg
call
inc
out
icebp
lock
hlt
iret
into
repz
xor
loopne
fcmovnb
mov
iret
stc
fucom
xchg
dec
aad
cmp
out
in
aaa
lret
jmp
loope
shl
sti
in
in
fcmove
ljmp
int
in
call
aaa
fnstcw
ds
rorb
fdiv
into
iret
or
xlat
out
ljmp
out
in
sbb
call
fisttpll
mov
hlt
loop
xor
xor
neg
sti
cmp
lock
out
fcmove
aam
in
aad
xor
ljmp
cmp
cmp
mov
repz
lret
xlat
xor
stc
out
not
out
fucomi
repz
fdiv
test
loop
mov
xchg
out
hlt
loop
stc
lock
ffree
xlat
cld
std
ret
aam
hlt
xchg
mov
fmull
hlt
aad
out
aam
lret
lret
sbb
repz
xlat
movl
in
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
push
mov
roll
jle
xor
clc
aaa
out
fmul
ret
sbb
sub
loopne
into
shl
hlt
in
int
neg
repz
sar
fdiv
push
idiv
repz
jecxz
ror
xchg
sti
nop
int
not
call
cmp
aad
aam
add
lret
stc
loope
lock
jmp
in
in
xor
in
aaa
fucomp
lock
cld
in
out
sarb
sbb
testl
add
repz
rcl
int
aad
cmp
loop
loope
fldl
fcmovbe
ljmp
cmp
enter
sbb
test
out
addb
xlat
in
ljmp
icebp
loopne
stc
out
and
fiaddl
shr
loope
ret
leave
cmp
lret
cmp
cli
out
test
clc
cld
ret
lret
out
shr
addl
stc
shr
cmp
enter
stc
xor
repnz
xlat
in
flds
fcomip
ljmp
aaa
fcmove
les
jecxz
cmp
sti
xlat
fscale
testl
call
jecxz
iret
rcr
ss
repz
cmp
out
adc
mov
hlt
in
lock
fsubp
loopne
loope
in
jmp
cld
out
icebp
cmp
icebp
cmp
std
xchg
out
icebp
ljmp
in
repnz
cmp
fcomip
ds
iret
test
repz
mov
filds
aam
shr
aad
fdiv
lret
fdivr
incl
out
std
loop
lds
mov
aad
int3
shll
aam
fcomp
fistpll
cmp
stc
inc
call
xchg
cmc
out
out
loope
in
clc
xor
cld
ror
cmp
fadd
xlat
ret
out
ljmp
lock
int
jmp
cmp
xor
ret
call
vphaddubw
ret
not
int3
out
imul
hlt
ret
cmp
lret
cli
test
fstp
out
aad
div
shl
call
fadds
aad
xchg
repz
mov
out
fmul
into
xor
cld
cmp
fstp
shl
fiaddl
lret
call
out
repnz
cmp
xor
lret
lret
xlat
addl
mov
into
xchg
sti
mov
xchg
iret
jecxz
stc
cmc
aaa
aas
fptan
std
into
fsub
fnstsw
ljmp
in
lret
xchg
test
sub
icebp
fnstcw
stc
in
xor
aas
adc
xlat
aas
in
sti
lret
test
mov
jmp
xor
shl
fnstcw
repnz
fdiv
lock
rolb
and
cs
aam
cmp
cmp
cmp
aas
sub
ret
call
clc
mov
shr
xlat
ss
repnz
cmp
cld
sti
into
xchg
ret
std
stc
mov
fisttps
in
out
out
das
xor
cmp
ror
enter
rcr
loope
add
idiv
call
jmp
mov
int3
repz
in
in
fcmove
loope
clc
lock
sbb
test
lret
int
loop
nop
shl
cli
xor
fcomp
cmp
cld
cmp
cmp
std
icebp
fucomp
ljmp
lret
cmc
shl
lds
lock
in
addb
in
rcr
addb
mov
xor
fsubrp
aam
sarb
idiv
out
loope
xlat
out
into
ljmp
enter
iret
shr
cmp
xchg
fcomi
jmp
enter
loop
enter
loope
shl
int
cmp
clc
lret
aad
out
ret
mov
test
loop
mov
out
cmp
cld
rcr
lret
rol
mov
in
lret
cld
stc
cli
fucomp
xor
jmp
aad
ds
sti
ds
jecxz
mov
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
std
enter
jmp
into
shll
out
clc
ss
std
icebp
jecxz,pt
add
out
std
sub
hlt
clc
repnz
leave
sarb
lock
cmp
rolb
cmp
mov
xchg
repnz
nop
jmp
shr
out
xor
adc
ret
test
fmuls
loope
fucomip
leave
in
repnz
shl
jmp
ss
lret
in
out
call
clc
fsubr
adc
fidivs
jmp
icebp
icebp
cmp
lock
ror
std
fsub
leave
repz
loopne
sbb
push
mov
int
int3
das
ss
stc
out
cmp
ds
fadd
addb
loop
or
cmc
out
aaa
sub
cmp
rcl
cmp
fcom
in
rcr
cmc
icebp
mov
loopne
call
lock
shr
ret
cli
xlat
fprem
lret
clc
lock
loopne
aas
cmp
bnd
rcl
vpmuludq
out
cmp
in
test
loop
mov
call
mov
div
hlt
aad
cmp
testl
hlt
ljmp
ljmp
mov
jmp
test
clc
rol
shl
ret
std
decl
in
out
fdiv
in
aam
enter
xor
cmp
int3
sti
std
out
xchg
int3
cs
sarb
into
xor
repz
not
hlt
fsub
aas
clc
test
xchg
int
mov
xchg
xor
div
xor
fsubp
cmc
loope
in
fcomi
fcmovnb
lock
leave
fimuls
lea
xlat
enter
fdivrl
aad
rcl
loop
clc
fld
jmp
std
out
mov
mov
xor
lret
int3
into
lret
stc
cmp
int
neg
aam
std
fiadds
loopne
loopne
int3
in
lret
ror
aaa
int
int
xchg
cmp
dec
cli
mov
int
repnz
or
not
in
cli
repnz
ljmp
vcmpsd
fdivr
icebp
rcr
int
in
xchg
in
repz
jmp
shl
sar
div
div
fdivr
ret
testl
xchg
rcl
lock
fnstenv
in
clc
fadds
icebp
cmc
mov
fadd
out
mov
iret
xchg
mov
cmc
enter
aaa
repz
int
shr
fdiv
stc
icebp
mov
addl
ljmp
lret
out
xor
repz
jecxz
clc
icebp
shl
cli
sti
out
faddp
out
leave
loope
mov
xor
cmp
out
cmp
loop
out
test
fiadds
clc
ljmp
xchg
jmp
out
xlat
fsubr
out
fistpll
cmp
in
loopne
or
addb
cs
ljmp
int
iret
cmp
ret
leave
cmp
icebp
cmp
addl
out
out
fcomp
iret
repz
in
xchg
test
std
loop
out
test
imul
stc
xor
xor
cmp
hlt
test
jmp
mov
cli
clc
imul
lret
icebp
in
jmp
ror
imul
loop
aam
cld
cmp
fsubr
aam
cli
shr
cmp
loopne
xor
lret
lret
in
repnz
cmp
rcl
cmc
sti
lret
out
into
in
aad
mov
out
loope
enter
xchg
into
mov
in
in
std
cmc
iret
out
jmp
in
jecxz
hlt
f2xm1
cmp
jmp
ljmp
in
lret
cmp
out
cld
into
ds
addl
in
call
jecxz
lret
jecxz
in
fdivs
cmc
out
div
add
in
sti
loope
loopne
loop
sti
call
out
int
icebp
out
jmp
shl
cld
icebp
sbb
inc
ret
int3
lret
call
ljmp
lret
fcmove
lock
loop
fcomip
out
sbb
or
std
int3
rcl
jmp
iret
xlat
leave
aam
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
xor
int
mov
jle
fcmovnu
cmp
fcmovne
jecxz
out
xchg
in
cld
mov
mov
jecxz
repz
ljmp
leave
xor
shl
hlt
repz
out
fcomi
loope
addb
les
out
aad
in
cld
lret
out
lret
cmc
mul
test
rcr
cld
fsub
out
in
or
xchg
loope
in
cmp
not
in
fadd
xor
fdivrp
ror
repz
not
roll
fdivrp
jmp
sarl
xor
cmc
aaa
call
aas
rcr
loopne
stc
in
ljmp
repnz
aad
in
iret
cli
fdivrp
cmp
aam
cmp
lret
clc
orl
shl
int3
in
in
cmp
into
fucomip
into
sbb
xlat
dec
out
xchg
iret
out
ljmp
repnz
fldpi
cmp
in
cmp
sti
mov
in
and
and
sub
jecxz
cmp
cld
out
test
lret
test
clc
aas
loopne
xchg
in
cli
mov
call
out
in
ror
cmp
repz
test
fsubrp
in
enter
idivb
fildl
mov
repz
cmp
cmp
repz
ss
rcl
xlat
mov
xchg
popl
call
cmc
hlt
cmc
stc
aad
loopne
xlat
fsubr
cld
fucom
loopne
in
xchg
call
xor
into
xor
int
clc
idiv
hlt
addb
int
out
in
mov
call
fsubrp
aam
xlat
ret
icebp
adc
xlat
cli
lret
fxch
ret
in
in
loop
xor
xor
xlat
int
hlt
clc
test
xchg
fsubp
repz
ret
fisttps
jmp
enter
stc
out
in
stc
shl
repz
out
cmc
sbb
or
xor
in
aad
out
hlt
sti
idiv
ror
cmp
icebp
stc
rolb
test
mov
loopne
iret
lret
xor
das
xor
repz
std
rol
out
testb
incl
fdivp
cmp
out
cli
cmp
fcmovnbe
sti
xlat
aam
ret
fcmovnu
loopne
leave
xlat
loope
jmp
shl
mov
das
shl
out
ljmp
idivl
repnz
cld
mov
adc
xchg
jmp
clc
int
call
cmp
rcr
rcr
flds
jmp
enter
xchg
mov
icebp
not
rcl
clc
cmp
rcr
loope
incl
fstp
mov
mov
int
cmc
call
hlt
hlt
ss
jmp
fdiv
cld
lock
xchg
call
mov
out
xchg
jmp
xor
dec
dec
fcomi
loope
mul
not
jecxz
call
xchg
shl
in
out
call
jmp
adc
push
rcl
lret
lret
mov
xchg
lret
shr
out
leave
aad
in
lret
aad
leave
shr
iret
out
lock
in
neg
addl
in
call
sub
cmp
ret
out
repnz
les
sti
std
xchg
fdivp
aad
sarl
in
into
cli
enter
lret
shl
xchg
fiadds
decl
das
cli
call
cmc
aas
and
mul
sub
ret
test
rcl
jmp
sar
cmp
clc
cli
hlt
int3
test
faddp
in
lret
mov
jmp
xor
cmp
xlat
cmp
out
roll
in
fiaddl
nop
loop
in
xor
in
cld
fdivrs
shl
rcl
idivl
aam
loop
cmp
jmp
xchg
lock
lock
ret
enter
fmul
fsin
iret
test
mov
xchg
cmc
fldl
mov
call
int3
shl
lret
fdiv
cmp
fsubp
aam
fld
in
in
dec
ljmp
sub
enter
xlat
lret
fcmovne
jmp
loop
fnstcw
sbb
sar
xlat
jecxz
test
in
je
mov
xor
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
in
xchg
iret
hlt
jecxz
out
cmp
cmp
xlat
stc
shl
sar
loope
cli
mov
lock
ret
aam
lock
sar
loope
iret
fdivrs
test
jmp
mul
lea
mov
vpmulhuw
repz
fcmove
sar
out
cmp
in
out
mov
xchg
jecxz
ljmp
lret
repz
cmp
cmpl
shl
cli
cmp
aad
enter
jmp
std
hlt
jmp
sarb
aaa
leave
cs
rcr
lret
in
cmp
roll
lret
in
test
incb
shll
into
in
in
rcr
idiv
addb
addb
repnz
loope
ljmp
fprem
sar
rolb
not
flds
lock
aam
in
icebp
idiv
cmc
icebp
hlt
ret
fcmove
cld
hlt
ljmp
call
xchg
sub
lret
ljmp
neg
lds
in
iret
jecxz
nop
fmulp
fbstp
call
iret
aas
shl
cmp
fisttps
std
rorl
cmp
cmp
int3
fidivrl
in
cld
shl
clc
xor
rcl
mov
jmp
std
int
mov
fdivrl
aam
enter
fsincos
in
movb
nop
xchg
into
int
out
hlt
loopne
lret
jecxz
iret
aam
cmp
fscale
call
cld
in
into
aaa
aad
aam
neg
xor
not
out
stc
clc
call
out
cmp
lock
jmp
loopne
cmp
xchg
xlat
roll
loop
int3
in
aam
divb
shr
in
lret
xlat
loope
fcomi
int
xchg
out
cmp
fucomi
mov
cmp
ljmp
shl
loope
cmc
xlat
ljmp
sbb
xor
call
leave
ds
loop
fucom
clc
fst
cmp
xchg
or
lea
in
out
out
aam
jmp
in
int
out
shr
fdiv
enter
test
jmp
in
repz
rcl
cmp
ffree
repnz
cmp
rcl
not
call
in
xchg
lret
mov
shl
lock
ss
lret
aam
add
std
addl
out
fucomi
call
ljmp
ds
int3
aam
sti
fucom
decl
idiv
loopne
lock
test
roll
cli
cld
into
leave
shlb
out
sar
test
ds
repz
out
xlat
mov
mov
ss
aad
sub
ds
idiv
jecxz
fdivrp
out
nop
out
jmp
jmp
xor
leave
cmp
ror
std
ret
rolb
test
fcmovbe
ror
xchg
jmp
neg
int3
idiv
lret
cmp
jecxz
sti
icebp
lock
rcl
out
in
xlat
lds
std
nop
rcl
xor
cmp
hlt
xor
cmc
call
enter
mov
in
mov
jmp
in
cmp
not
cmp
int3
fcmovb
xchg
adc
lret
mov
xchg
loope
shl
sarl
aaa
fucomi
loopne
int3
cmp
std
call
jmp
out
leave
into
call
stc
xor
fldpi
cmp
stc
out
adc
rcl
lock
mov
cld
lret
addl
fsubr
ss
ds
idivb
sarl
xchg
rolb
ret
jmp
repz
stc
xor
std
aam
cmp
into
not
fcomip
cmp
aam
xlat
clc
test
out
call
out
int
ror
xor
in
rcl
shl
fcomp
ljmp
xchg
jmp
aad
out
out
loopne
stc
hlt
fstpt
int
test
aad
test
xchg
imul
iret
int
jmp
cmp
fmull
jge
mov
xor
add
jmp
ror
rcl
mov
loop
scas
inc
jg
roll
jle
aad
clc
in
fcmovu
into
in
in
mov
not
xor
lret
imul
repnz
int
fcomp
loopne
and
clc
fcmovne
call
xor
xor
cmp
aas
sarl
test
flds
lret
in
mov
lock
iret
into
test
icebp
aad
cmp
shl
fdivrp
sti
aam
sub
in
lret
xchg
mov
leave
aad
idiv
jmp
shl
stc
cmp
int3
sbb
stc
iret
shl
rcl
shl
clc
into
jmp
in
call
loope
aam
aas
loopne
call
call
and
loope
cmp
fucomi
cmp
clc
out
iret
icebp
stc
shl
bnd
cli
cli
xchg
ljmp
in
int
fdivrl
aaa
divl
loopne
int
repz
call
loopne
test
sub
mov
int3
fdivs
iret
aad
std
fdivrs
hlt
fildl
testb
test
int
stc
loop
cmp
in
shr
in
ffree
std
sbb
hlt
jmp
in
jecxz
int3
ljmp
xor
not
leave
fcompp
repz
aad
rcl
out
fcomp
rolb
shll
xor
aad
hlt
hlt
out
icebp
repnz
cmp
mov
ret
aad
stc
jecxz
std
jmp
nop
repnz
int3
sar
enter
cmpl
hlt
cmc
leave
loope
sub
int3
in
mov
aam
in
loopne
repz
shr
aaa
std
sar
ror
aas
hlt
cld
out
clc
test
in
fcmovu
mov
cmc
out
clc
cmp
repnz
sti
out
shl
fdiv
xlat
xlat
fdivr
orl
aam
shll
in
cld
ljmp
lock
enter
lret
lea
cs
jmp
jmp
and
xlat
stc
ljmp
cld
cld
faddp
adcb
sti
out
lock
rolb
shr
leave
fmul
xchg
mov
out
fucomp
sub
repnz
testb
cmp
fildl
nop
cld
ljmp
fxch
enter
fdiv
sti
out
fdivrl
into
cmc
in
repz
fcmove
enter
loopne
mov
cmp
xlat
cmp
test
or
fstpt
mov
repnz
roll
out
in
cmp
aas
out
ds
ss
les
bnd
mov
cld
std
cli
fcomp
lret
sub
rcr
in
fcmovne
xor
ljmp
rcr
cld
movb
and
int
xor
lret
lret
xlat
cli
xlat
cmp
adc
shl
rcl
test
fcmove
loopne
xchg
cs
jmp
ljmp
testl
int
loopne
int3
repz
ljmp
cli
repz
not
adc
in
div
cli
sbb
xchg
iret
incl
jecxz
cmp
loope
aam
cmp
test
xlat
test
addl
fldpi
out
repnz
lret
stc
ret
cmpb
loope
and
loop
clc
xchg
std
and
repnz
out
jecxz
cmp
lret
aaa
iret
sarb
shl
icebp
test
in
xchg
clc
test
mov
xchg
xlat
fmul
xor
fdivrl
div
cmp
dec
test
cmc
rorb
jecxz
call
shrl
out
out
repz
in
aaa
jmp
fld
mov
lea
in
jecxz
xor
int
call
into
roll
lock
fcomip
in
ljmp
rolb
out
aad
cmp
fcomi
aad
sbb
aam
ljmp
lret
call
repnz
fdivs
out
aaa
aaa
cld
idivb
cmp
out
sar
mov
fsubrp
testb
into
cmp
stc
int3
in
sar
repz
test
mov
rcll
int3
movzwl
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
iret
aad
add
jle
add
in
xor
shlb
aas
cmp
flds
fcmovu
mov
sti
enter
iret
xchg
lock
out
shl
repz
jecxz
adc
push
clc
nop
mov
cmc
lret
fidivl
in
fcmovbe
lret
loopne
cmpb
stc
in
rol
out
ret
iret
in
in
out
int3
out
iret
rcr
cli
fistpll
repnz
out
or
nop
repz
xor
cli
shl
cmp
in
div
mov
leave
clc
int3
lret
xchg
sub
int
les
cmp
cmp
jmp
out
loop
ret
test
test
sti
mov
int3
jecxz
xchg
call
into
out
iret
shlb
incl
fcomi
fcomp
neg
jmp
into
mov
xchg
test
iret
mov
xor
leave
fldt
clc
jmp
lret
stc
out
loop
stc
cli
mov
in
addb
rol
shl
shl
lret
cmp
aad
in
std
in
ljmp
or
xchg
loopne
icebp
into
xor
stc
cmp
shr
fcmove
clc
fcmovnbe
clc
add
sti
orb
lret
icebp
ss
clc
cmp
xor
cmpb
loop
in
in
in
mov
jmp
into
xorb
not
lock
in
inc
cld
mov
shl
out
xchg
idiv
call
call
fadds
shl
ffree
test
fstl
xor
ds
cmp
fdivr
stc
cmp
in
decb
rcll
repnz
ror
fmul
fsubrp
neg
fneni(8087
repnz
imul
in
test
std
repz
cs
xor
cmp
cmp
std
sti
fyl2x
sti
in
fxch
in
test
in
xchg
or
lret
cmp
cmp
cli
xor
aam
aam
out
mov
sub
out
std
mov
rol
sarl
fdiv
fistpll
int3
ror
out
loop
fnsetpm(287
stc
mov
test
in
imulb
into
aam
cmp
aaa
aas
hlt
into
mul
out
in
call
fsubp
out
std
cmc
xchg
call
ror
xor
repnz
cmp
cmp
rol
fisttpll
lret
out
out
ss
cmc
into
shr
xor
sti
repnz
out
ret
enter
ret
shl
out
fcmove
call
icebp
int3
aaa
lret
int3
stc
hlt
std
iret
loop
hlt
neg
in
in
in
out
mov
iret
lret
fldln2
cmp
jmp
bnd
loope
in
out
mul
ljmp
mov
mov
cli
fadd
call
lock
stc
loopne
not
in
fdivr
jmp
cmc
into
out
in
rol
idiv
repnz
sar
testl
mov
in
cld
into
sbb
enter
in
cmp
fdivr
out
hlt
and
xlat
jmp
in
xchg
in
shl
in
cmp
rcr
cmp
repz
test
xor
test
lea
icebp
jecxz
cmp
cli
fsubr
fcmovnu
repz
and
mov
test
fcomip
xor
jmp
repnz
into
bnd
rcr
rolb
int3
sti
in
repnz
leave
rcl
xor
inc
jecxz
fdivr
in
ret
fildl
xchg
enter
into
shll
fcom
ljmp
shr
int3
out
dec
orb
loop
fcmovnbe
repnz
rcr
into
addl
xchg
mov
mov
enter
lret
cmp
out
aaa
cmp
cli
cmp
jmp
xchg
ljmp
mov
xor
jmp
cmp
iret
loope
clc
cmc
rcr
xlat
leave
int
in
int
std
rclb
not
cmp
divl
jmp
shl
ret
shl
sti
ljmp
mov
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
in
xlat
lret
in
addb
cmp
cmp
ljmp
sbb
clc
fucomip
popl
clc
int
clc
aam
cld
aam
std
fsub
int
ret
out
out
cli
and
fsubp
filds
cs
out
in
sar
fstp
incb
ret
imul
in
enter
aad
xor
call
iret
lock
xrelease
mov
jmp
mov
out
ss
ljmp
out
cmp
mov
sti
cld
mov
loopne
lea
iret
in
cli
fcmovu
ffree
loope
rolb
fildl
repnz
aam
nop
sub
into
leave
xlat
enter
aaa
cmp
cmp
into
adc
sti
out
cld
mov
ffreep
leave
cmp
in
repz
fmul
rolb
orb
mov
iret
cld
mov
xchg
aad
xor
shll
repz
rcr
cmp
cmc
aad
cli
fiaddl
into
out
test
repnz
stc
aaa
out
cmp
out
fnstsw
ret
loop
sti
cmp
fcomp
out
fisttpll
xchg
fdivr
xor
jecxz
cli
hlt
std
aaa
xlat
hlt
sar
iret
fadd
mov
test
lret
fildl
out
xor
cmc
out
xlat
call
sti
cld
sti
ret
neg
out
test
in
addl
sub
jmp
ror
cmp
out
adc
jmp
mov
jmp
fucomip
jmp
leave
lock
clc
leave
in
cmp
sti
cli
fsqrt
lock
stc
fcmove
out
in
adcl
lret
enter
clc
neg
aas
xchg
mov
lret
ljmp
aam
xor
in
in
cmp
xor
lock
fst
rcl
sti
cli
jmp
mov
xchg
out
cmc
in
lock
fdiv
fdivrs
clc
cmp
in
not
loop
mov
ljmp
bnd
cld
shlb
ss
leave
adc
jecxz
vpsubsb
addb
fsub
xchg
in
jmp
jmp
fldpi
fadds
mov
cmp
fucomp
sub
in
ss
rcr
int3
ljmp
xlat
loop
in
mov
loope
call
aad
in
fcmovu
cmp
out
repnz
std
loop
ret
jmp
leave
fsubr
mov
shl
int3
fdiv
out
sbb
not
call
addl
out
out
in
into
ljmp
ds
in
cli
aam
hlt
incl
leave
int3
jecxz
loopne
xor
sarl
cs
aam
in
cmp
loop
inc
xor
clc
mov
int
int3
out
xor
test
loopne
clc
repz
xor
fdivrp
stc
mov
mov
xor
in
xor
in
std
aam
into
fpatan
aas
fildl
jecxz
cld
in
ljmp
call
int3
sar
clc
in
sar
cmp
icebp
jecxz
rolb
xchg
repnz
ljmp
int
cmp
ds
int3
ds
jmp
jmp
nop
in
in
int
out
mul
enter
jmp
fdivrp
cmp
xchg
jmp
sti
xchg
into
ret
loopne
iret
out
cli
lock
leave
fcmovnb
cmpb
incb
fmulp
fsub
int
rorl
ljmp
out
xlat
fcmovnb
shl
loopne
aad
ret
jmp
xchg
in
loope
int
divb
cmp
repnz
fsubrp
cmp
lret
fnstcw
test
out
sti
fsubr
sti
mov
icebp
and
cmp
icebp
leave
ljmp
aam
mov
lret
test
in
loope
call
aam
int
hlt
jmp
jecxz
ds
out
xchg
in
out
cld
ljmp
aaa
icebp
cli
out
xor
add
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
and
lock
hlt
aad
int
and
and
out
jecxz
idiv
in
ss
iret
sar
loope
out
shl
fadds
jmp
in
in
nop
out
shl
xor
xlat
aad
out
iret
int
loop
sbb
loope
cld
adcb
iret
vpmaxsw
div
enter
cmpl
decl
stc
rcl
cld
aam
xor
in
xlat
sti
cmp
rcl
shl
lock
jmp
nop
mov
in
call
in
cli
repz
out
stc
xor
iret
les
orl
jmp
in
into
xchg
xchg
xchg
jmp
cmp
in
fdivrs
xor
movb
mov
lret
out
jmp
shl
sbb
repz
loop
and
xor
fdiv
rcl
rcr
ror
inc
jmp
in
xlat
test
xchg
cmc
ljmp
cmp
out
cmp
in
loopne
iret
ret
sti
lret
loop
mov
and
mov
test
shr
int3
ret
enter
fcmovnu
std
clc
aas
frstpm(287
call
fisttps
movb
cli
in
idivl
fiaddl
iret
xlat
enter
xchg
test
out
icebp
xchg
sti
xchg
xchg
into
out
sub
clc
fst
or
cmp
repz
sub
call
or
xchg
xchg
in
jmp
not
fucomp
icebp
int
cmp
in
test
xor
sti
jecxz
jmp
mov
mov
aaa
mul
in
cmp
repz
fnstcw
ret
sarl
xchg
fsubp
cmc
mov
xchg
repnz
xchg
in
int
cmc
enter
jmp
ret
hlt
std
test
xchg
lock
cli
jmp
xchg
test
jmp
cld
cmp
cmp
ffree
sar
leave
jecxz
out
out
out
into
xchg
jecxz
addl
xlat
shr
stc
sti
sar
into
ret
shr
test
mov
lea
xchg
in
in
vmovq
iret
cmp
fadds
ljmp
mov
out
hlt
xchg
in
cmp
leave
rcr
jmp
fidivrl
xor
in
cli
std
sar
xlat
sti
fcmove
mul
decb
out
cmp
les
clc
neg
repnz
int
jecxz
stc
in
aam
enter
mov
filds
leave
fstpt
rolb
sar
mov
stc
call
xchg
mov
ret
in
int3
cmp
enter
rcl
int
cmp
lock
mov
int3
xchg
jmp
out
repz
in
lock
fldlg2
cmp
adc
in
fcmovb
icebp
in
ret
jecxz
fucomp
enter
mov
subl
fucompp
repz
cmp
cli
fsin
incl
sar
lret
jmp
mov
not
fnstcw
fcomi
icebp
leave
aaa
out
int
loopne
test
std
leave
in
flds
mov
enter
shr
into
int3
cmp
fistpll
fucomp
aad
xchg
jecxz
in
out
fcomip
repz
call
ss
in
cmp
shl
fsubp
hlt
and
cmc
aad
enter
out
lea
hlt
hlt
repz
out
std
cmp
ret
cmp
decb
in
out
call
leave
fcomp
fucomi
call
inc
xchg
in
test
hlt
enter
in
rcll
jmp
xor
out
aas
fsubr
ret
xor
repnz
aam
addl
ljmp
cmc
in
int3
xor
sbb
cli
out
aad
lret
jmp
ror
leave
mov
loopne
rcr
cmc
std
fucomi
xlat
cmp
cmc
roll
loope
mov
xchg
jecxz
int
repz
ror
jmp
aam
fsub
xor
fadds
loop
std
into
ljmp
clc
ds
cld
fcmovnb
sti
repnz
stc
loop
sub
jmp
lret
mov
fildl
adc
jp
jg
roll
jle
mov
cli
out
xlat
xor
icebp
repnz
fsub
cli
in
hlt
sbb
not
fisttps
shl
loope
out
lock
int
rcr
cmp
sbb
rolb
lret
int3
lret
repnz
loopne
stc
out
into
loopne
cmp
rcl
decb
dec
sti
sub
in
call
sti
cmp
loop
fsubrp
in
movb
into
rorl
sarb
hlt
jmp
out
test
out
fnop
mov
test
nop
sub
cld
nop
rorl
divl
lds
shr
lret
cmpb
out
mov
mov
nop
xor
jmp
hlt
fld
icebp
rcr
rcr
clc
clc
test
cli
jecxz
testb
fists
loop
cs
call
jmp
out
filds
ftst
loop
test
jmp
cmp
fxch
cmc
iret
jmp
loop
jecxz
std
idiv
xchg
cli
mov
fninit
aam
out
shr
vpaddsw
icebp
fmul
cmp
loop
cmp
xchg
cli
call
test
nop
lds
not
cmp
jmp
ret
cmpb
fadd
call
xchg
jmp
icebp
ret
int3
rol
xor
fdivp
lret
std
cmc
fdiv
in
or
decl
hlt
sub
out
out
leave
xor
lock
icebp
ljmp
sbb
ret
sti
xlat
in
in
orl
aad
hlt
leave
sar
shl
repz
cli
fld
ljmp
hlt
hlt
notb
div
fdiv
jmp
cld
jecxz
mov
leave
mov
in
ljmp
icebp
iret
out
cli
xlat
xor
test
lret
faddl
mov
xchg
call
cmp
cmp
fcmovu
int3
fcmovnbe
stc
cli
loope
sti
addb
lret
repnz
out
out
ss
stc
xor
ret
cmp
cli
aad
out
jmp
cmc
sub
xlat
into
fsubr
sarb
sarl
mov
stc
out
vpmacssdqh
xor
out
cmc
repnz
vcmppd
fdivp
sti
int
in
push
int3
or
aaa
cmp
cmp
lock
add
addl
jecxz
xor
jmp
cld
cmp
cmp
in
repnz
xlat
loop
rcl
repz
neg
xchg
lret
das
xlat
out
xor
addl
in
fsub
out
and
lock
cli
xlat
cmc
shr
cli
loop
jecxz
fld
repz
fxch
cli
icebp
fmulp
xchg
in
xchg
jmp
out
cmp
aad
cmp
fiadds
in
mov
jecxz
mov
fld
sub
cmp
in
rol
aas
cmp
movb
mov
int
xchg
into
xor
test
aad
in
jmp
cmp
rcr
jmp
int
stc
mov
jmp
iret
xchg
div
clc
loop
int
stc
cmc
iret
addl
in
sti
loope
and
out
int3
out
aas
hlt
ret
fsubr
stc
iret
jmp
aas
flds
std
xlat
fildl
repz
int3
xor
fld
fnstcw
cli
fcomip
cmp
fcom
enter
jecxz
sub
lret
div
repz
stc
aad
cmp
aaa
cld
aad
test
faddp
loop
in
int
cld
lret
in
nop
loopne
iret
leave
cmc
jmp
in
and
lock
fcomip
in
int
int3
cli
ret
lret
loope
jmp
ret
ljmp
cmp
in
inc
repnz
adc
call
ret
loop
mov
call
iret
xor
ljmp
lock
fsubrp
call
shl
icebp
shr
jmp
not
lock
mov
jmp
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
cmp
xchg
test
lock
out
mov
in
in
sti
icebp
cmp
icebp
repnz
ret
ljmp
cli
lds
lds
jmp
stc
fcomip
push
cld
iret
sbb
stc
rcr
xchg
fisttpll
in
aad
jmp
cmp
cmc
rcl
hlt
cmp
not
inc
in
cli
loop
add
rolb
cs
jmp
fprem
not
cmp
hlt
clc
cli
repnz
mov
ss
xor
aaa
cmp
cmp
ds
xchg
fstp
std
xchg
mov
fiadds
shr
lret
aaa
sar
hlt
ret
cmp
mov
neg
iret
addb
repnz
ror
int3
cmp
sbb
mov
cli
sbb
std
leave
loop
leave
fsubp
std
fsubrp
shl
repz
int3
aam
ret
iret
icebp
out
sti
xchg
cld
or
aas
stc
lret
int
ds
jecxz
cmp
test
dec
leave
out
mov
fcomp
mov
std
lret
jmp
repnz
aam
fcmovnbe
clc
lret
test
shl
xrelease
cmc
iret
std
stc
into
repnz
out
in
cli
cmp
ret
and
std
mov
xchg
cmpb
xor
in
fldlg2
cmp
jecxz
hlt
fnstcw
out
cmp
out
sub
repz
lret
aad
sarl
cli
clc
sti
in
loop
loope
xchg
fdiv
aas
mov
fildl
mov
xor
sarb
out
sarb
loop
shl
fstp
fildl
testl
enter
fnstcw
fistpll
ds
cmp
movb
fnclex
into
fsubp
in
ret
cmp
int
int3
fmul
sarb
test
ror
in
mul
out
shl
jecxz
ljmp
cld
cmp
cmp
jmp
fmul
loopne,pt
shl
xlat
cld
out
jmp
sub
out
fdivp
iret
clc
hlt
rolb
fildl
in
xchg
shl
lret
in
call
xor
rol
fldl
mov
mov
test
repz
idiv
cmp
cld
fsub
loopne
xchg
mov
enter
xchg
nop
ret
xchg
out
jmp
out
xor
into
fidivl
jmp
leave
in
idivb
fadd
call
cli
sti
out
enter
mov
lret
jmp
cmp
lock
icebp
loop
roll
lret
test
xchg
out
div
iret
aam
rcr
fdivrs
lock
fildl
mov
enter
lret
nop
mov
ret
sub
xor
ss
repz
rcl
in
idivl
sub
loopne
or
aad
leave
loop
out
rcl
lret
xor
loopne
stc
fstp
repz
ret
lret
mov
int
lret
not
sar
div
fidivl
rol
fcomi
repnz
repnz
or
out
mov
out
ljmp
neg
iret
cmp
stc
cmp
cli
and
xchg
rolb
clc
call
cmp
cmp
sar
aam
test
ret
mov
xchg
rcll
leave
aam
ljmp
aas
test
repz
shl
in
mov
inc
int3
std
mov
imul
icebp
xlat
fxch
cmp
cmp
xlat
out
out
loopne
fldl
icebp
test
jmp
lret
in
fsubr
rcl
ljmp
cmp
test
cld
mov
ret
cld
sub
shl
xchg
out
leave
shll
cld
into
ds
ror
shll
ffreep
xchg
addb
cmp
cs
xor
aas
loop
in
out
std
testb
ljmp
out
sti
stc
cld
leave
repnz
leave
cmp
fcmovnbe
test
mov
repz
int
int3
out
leave
mov
cmp
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
hlt
leave
aam
cld
cmp
sbb
xchg
mul
fucomi
cmc
in
fisttpll
out
adc
cmp
cld
repz
xlat
aad
iret
fsubr
ret
cmp
int
loop
or
mul
sar
cmp
fdivrl
cli
ret
in
int
mov
ljmp
cli
call
cld
out
xchg
div
out
enter
loopne
mov
lock
xlat
repz
iret
hlt
cmp
aas
xchg
cld
xlat
xchg
call
shl
icebp
shl
mov
jmp
lock
cmp
ret
sarb
in
icebp
enter
test
rol
shr
xor
leave
lret
idiv
test
clc
mul
and
xchg
shl
mov
loopne
idiv
into
icebp
rol
int3
cmp
cli
hlt
std
fcomi
cli
jmp
in
test
sub
cmp
ljmp
clc
in
fadds
fsubr
out
mov
aam
aam
shl
out
ds
ffreep
std
repz
sar
aas
mov
aad
cs
xor
out
lock
fxch
std
aam
ret
loope
testb
xchg
jecxz
xchg
repz
sub
cli
sar
in
ds
loopne
in
cli
shl
loopne
aam
loopne
in
decb
xchg
ss
int
test
fdivr
cmp
in
lock
hlt
shr
test
clc
shl
xchg
xchg
shlb
repz
not
icebp
test
out
fiaddl
test
loop
cs
loop
std
cmp
iret
lret
div
ror
ljmp
repnz
xchg
int
jmp
enter
rcl
ds
call
jmp
sub
aad
int3
xlat
call
sarl
jecxz
cli
fst
jmp
fsubp
enter
cld
ljmp
xor
hlt
out
icebp
out
repnz
loop
test
std
enter
fsubrp
lret
iret
shlb
imul
xlat
cmp
hlt
in
int
jmp
sarb
addl
call
jmp
in
rol
aam
ror
sarb
inc
sbb
mov
mov
call
imul
int
xor
out
cmp
cmc
jmp
iret
fldl
fprem1
xor
in
mov
loopne
loopne
out
icebp
leave
fcmovu
int
repnz
neg
fldl
in
xchg
int
repnz
repz
repnz
or
ss
test
out
rclb
mov
iret
xor
aaa
test
aad
cmp
adc
mov
xchg
fdivr
jecxz
and
jmp
idiv
aad
fucomip
cmp
cli
cmc
cli
cmc
loopne
clc
aas
mov
icebp
faddl
xor
xor
cmp
fcom
cmc
cmp
add
jmp
jmp
into
mov
loop
in
into
ljmp
int
rcl
mov
rcl
leave
loopne
cli
call
mov
xor
cmc
sti
stc
fdivrl
cli
sti
and
stc
cli
sbb
call
or
ret
enter
enter
sub
loop
jmp
fmul
mov
or
jmp
call
cli
xor
repz
std
faddl
ret
fdiv
sub
out
ljmp
in
cs
out
cmp
repnz
cmp
shl
out
and
jmp
int
out
in
enter
sti
add
fcmovne
aas
test
idiv
and
test
jmp
icebp
out
cs
rcr
sar
out
cmp
div
int
rcr
cmc
fmull
std
cld
lret
lret
out
ror
out
aaa
cld
out
lret
in
cmp
xchg
loope
xlat
loope
leave
cmp
mov
xor
jecxz
in
shll
lock
lock
cmp
shl
xchg
addl
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
shll
jg
roll
jle
test
jmp
in
leave
cs
lock
repz
cmp
loopne
sti
not
std
rcl
fiadds
fmul
in
int3
mov
sub
ret
xor
rcl
fcmove
jecxz
test
rcr
mov
xchg
ret
popl
mov
ror
in
cmp
cmc
stc
cld
add
cmc
leave
sub
mov
lret
int
xchg
xor
icebp
into
lret
shr
fsubr
stc
lret
loop
loop
out
jmp
jmp
lea
cmc
in
div
cmp
xor
ljmp
out
aas
enter
aad
stc
out
or
xchg
loopne
jmp
mul
fmul
fadds
sarl
iret
icebp
shl
mov
cld
test
in
std
cmc
fucomip
xor
fcmove
ror
clc
cmp
in
iret
lret
in
fdiv
jmp
mov
cld
enter
jmp
or
cli
ljmp
fildl
mov
ljmp
rcll
idiv
lock
fcmovnu
roll
mov
shl
lret
lret
out
mov
lea
idiv
hlt
in
out
xlat
std
shl
test
test
fcmovne
loop
loope
out
fmull
iret
lock
cmp
cmpb
cmc
shl
loopne
cmp
clc
xchg
ret
cmp
enter
fscale
sub
xchg
loop
mov
ret
xchg
nop
std
aaa
enter
in
cmp
aam
cld
loopne
aas
rcl
repnz
lea
out
out
call
int3
out
repz
ds
test
fldl
sti
iret
loope
loop
hlt
xor
repz
repz
in
idivl
cmp
jecxz
cli
call
lock
and
aam
lret
iret
sti
cmc
loopne
xlat
rcl
cmc
fmul
ret
in
ljmp
ror
xor
call
cmc
iret
repz
aad
sbb
sar
neg
hlt
aam
lds
jmp
ljmp
fprem1
clc
xor
xlat
sti
xchg
aam
in
jmp
jmp
xchg
xor
cmp
ds
fdivr
ret
aam
cli
stc
sbb
in
out
jmp
loope
lock
int3
cmp
loop
cmc
cli
roll
or
lret
in
test
cmp
idivl
aaa
shr
in
out
loopne
fiadds
out
addb
enter
out
shr
ljmp
mov
xchg
xchg
clc
jmp
ljmp
cmc
ret
cli
fbstp
jecxz
aam
loopne
roll
xchg
std
jecxz
hlt
out
out
imul
into
int
out
addl
rol
loop
lret
mov
in
shl
repz
cmp
cmp
fld
rcl
out
rcr
in
fsub
ljmp
call
xor
cmp
div
clc
aam
iret
adc
in
test
xchg
loop
jmp
hlt
jmp
cmc
mov
call
in
call
jmp
aaa
test
cld
loopne
fcmovne
xchg
mov
sti
xchg
loopne
xchg
not
sti
icebp
xor
cmp
rol
aas
and
test
loopne
xchg
and
xor
lock
enter
aam
hlt
jecxz
fidivrl
mov
hlt
clc
std
fnclex
or
lret
lock
rcl
repz
leave
fdiv
call
in
lock
repz
fldl
rorb
xlat
ss
ss
rcr
sarb
addb
in
fldpi
jmp
fcomip
shr
shll
cmp
fidivrl
rcl
std
mov
enter
incl
in
hlt
out
loop
call
icebp
or
les
loope
and
rorl
ror
in
ret
call
je
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
daa
jb
rol
addr16
push
add
cmp
ljmp
jmp
addl
leave
shr
int3
cmp
filds
xlat
shl
xchg
loope
ret
test
in
in
xchg
jecxz
ret
out
cmp
in
in
into
ss
stc
ret
fst
in
lret
mov
icebp
loop
test
int
repnz
idiv
cmp
aam
cli
out
hlt
in
xor
sbb
ror
loopne
ljmp
repnz
dec
cmp
hlt
rcl
loop
fstpt
fptan
loopne
in
loop
lret
repz
ljmp
shl
cmp
test
aad
leave
cmc
cli
orl
lds
hlt
cld
cmp
sti
cmp
xlat
ret
idiv
jecxz
xlat
xlat
std
rcr
and
jecxz
repz
repnz
loopne
aam
cli
loope
test
in
fucomp
mov
xchg
mov
call
sar
std
ljmp
ret
fsubp
clc
mov
jmp
nop
fcmovnb
loop
repnz
lock
out
cmp
clc
rcr
int3
fdiv
cld
loope
clc
fildl
in
lret
in
jecxz
das
ljmp
cli
out
cmp
fsub
rol
xor
loopne
fadds
xchg
lret
int
in
clc
ljmp
cmp
out
not
neg
sti
hlt
lret
hlt
clc
clc
repnz
std
out
icebp
test
ror
imul
rol
cli
aas
jmp
in
cmp
fsts
ret
sti
cmp
fcom
sarl
cmp
sti
in
dec
jmp
in
lock
cmc
cli
ds
aad
xchg
repz
fsub
in
stc
jmp
lock
shl
out
rcl
sar
fdivr
aad
cmp
ss
fdivr
lret
jmp
jmp
std
xchg
repnz
sub
div
into
sar
lret
xlat
sbb
cmp
xchg
repz
in
call
call
xchg
lret
repz
leave
xlat
not
cmp
cld
aam
out
div
aam
jmp
cli
fsub
shr
shlb
clc
enter
in
sti
lock
hlt
test
mul
ret
cli
fldl
test
int3
loopne
shll
xor
ror
repz
loopne
cmp
std
idiv
out
call
cmc
xchg
in
repnz
sarl
cld
icebp
iret
clc
jmp
not
repz
mov
aad
vpavgw
out
sbb
sbb
rcr
cmc
lret
cli
xlat
cld
aas
loop
xlat
in
ret
mov
icebp
fists
repz
repz
cmc
sti
fidivrs
jmp
rcr
jecxz
fucomp
addl
ffreep
in
xor
in
icebp
xlat
ror
ror
out
aad
flds
jmp
xchg
int3
iret
jmp
fucomp
fucomp
cmp
aad
call
xlat
into
repnz
loopne
rol
jmp
aad
xlat
in
out
jmp
into
fyl2xp1
fistpll
rorl
xchg
test
lock
in
cmp
cmc
fcmovu
stc
leave
repz
lret
shll
clc
rcl
test
roll
out
in
icebp
icebp
iret
xor
hlt
jmp
les
loopne
jecxz
out
cld
test
out
out
hlt
call
loop
fidivrl
out
loope
mov
testl
fcmovb
xor
cmc
test
hlt
ffree
test
out
fucomi
jecxz
shl
lret
jecxz
rcl
rcl
repz
faddp
ds
loop
aad
test
mov
lock
call
ror
cmp
int3
fcmove
sti
repnz
stc
ds
fucomp
testb
std
shl
into
out
test
leave
ror
sti
in
out
icebp
in
loop
sti
fdivrp
ret
test
xchg
xchg
jecxz
out
ror
jmp
ret
ljmp
idiv
iret
out
and
xchg
jmp
aam
mov
xor
test
cmp
cmp
out
mul
stc
lock
fcomp
hlt
call
xchg
fistl
cmc
aad
fxam
cmp
cmp
rol
aam
ret
aam
xlat
in
lret
out
rolb
jecxz
sar
out
stc
xlat
cmc
ffree
test
cmc
cmc
rcl
ljmp
popl
cmc
lret
cli
in
call
jmp
and
ret
stc
call
loop
test
shrb
out
shlb
in
cmp
cmp
clc
rcr
mov
in
incb
aam
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
insb
jg
push
add
out
loope
shr
enter
fdivr
fnclex
loopne
cli
fnstsw
leave
idiv
testb
out
in
shl
rol
in
std
enter
cmp
ret
jmp
jmp
xchg
xchg
mov
xor
hlt
cmp
xor
lock
call
leave
fstp
in
out
test
das
shlb
xor
clc
fprem1
cmp
rcl
fdivrp
lret
std
call
lds
sub
call
in
loop
in
repz
iret
cli
rcl
sti
sbb
in
fisttps
out
in
ljmp
testb
out
test
inc
cmp
out
int3
lret
repz
icebp
shlb
fistpll
idiv
jecxz
rcl
fst
in
cmp
mov
std
call
ret
leave
out
sti
sarb
iret
cmp
aad
in
icebp
icebp
ret
in
loope
out
sti
filds
loope
in
xor
cmp
lret
iret
faddp
lock
test
jecxz
sub
filds
loope
shlb
xor
into
cmp
test
fxam
in
loopne
mov
in
mov
mov
out
enter
fdivrl
aad
ljmp
xor
test
icebp
lret
mov
shr
out
jmp
cmp
int3
out
sbb
sbb
aad
xchg
repz
imull
int
lret
aad
icebp
cld
add
stc
cld
in
fstp
xchg
orb
mov
out
into
fcom
out
shl
cmp
loopne
stc
vpsrld
imul
loop
sti
out
repz
aad
aad
fsubrs
clc
int3
not
in
xlat
shl
call
lret
repnz
lock
out
enter
fmulp
loop
fnclex
ljmp
in
int3
xchg
loopne
xchg
shl
icebp
stc
cmp
aad
enter
in
shl
cli
out
stc
shl
fcmovu
mov
xchg
xchg
repz
mov
repnz
call
aad
fyl2xp1
loopne
rcl
loopne
mov
aad
loope
mov
call
ss
iret
idivl
stc
ds
aam
loop
ret
cmp
in
sbb
mov
loop
aad
cmp
out
cmp
roll
add
mov
rclb
cmp
ljmp
hlt
iret
in
mul
mov
lret
mov
cmc
jecxz
rcl
in
sarl
sarl
loop
shl
xchg
in
roll
sti
loope
xchg
jecxz
call
clc
not
fcmovne
fdiv
repnz
shr
les
out
orb
lret
sub
jecxz
fprem
aas
fadd
cmp
rolb
cmc
fcom
call
into
jmp
in
mul
cmc
aad
in
hlt
std
clc
inc
fcomi
ds
out
fildl
xor
stc
lock
fxch
stc
stc
jecxz
fadd
test
loopne
sti
add
clc
sub
jmp
xchg
shl
in
leave
rcl
cmp
iret
cmc
testb
adc
neg
incb
sub
repnz
jmp
xchg
in
enter
cld
mov
shl
rcl
xchg
lret
cli
repz
fcomi
xor
shl
test
aam
stc
loop
mov
jecxz
loop
repnz
mov
sarb
into
sub
loop
cmp
hlt
jmp
std
loop
std
mov
out
enter
dec
sar
sarl
stc
in
std
adc
xchg
fisttpl
mov
enter
lret
fnstsw
aam
in
cmp
in
test
mov
shr
xor
ret
cld
aad
lret
ljmp
dec
aad
jmp
lea
repnz
xor
cmc
iret
int
loopne
loop
test
repz
in
jecxz
lret
cld
into
icebp
repz
stc
fcmovb
push
cmp
ret
fsubr
shr
ljmp
into
std
int
out
rol
ret
repz
cmp
add
out
rol
fucomip
cld
stc
out
iret
leave
fcmovnu
out
in
into
in
jecxz
ret
fidivrl
stc
lret
cmp
cli
fsubrp
fyl2xp1
leave
faddp
loope
lock
shl
jmp
out
xlat
lret
int
not
int
cld
cli
xchg
loope
xlat
jmp
out
fucomp
out
mov
hlt
rol
imul
sarl
cmp
repz
in
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
cmp
jg
push
add
hlt
aad
xchg
test
rolb
leave
cli
call
icebp
cmp
adc
cli
in
adc
cli
mov
out
mov
call
stc
jecxz
lock
test
hlt
ljmp
iret
jmp
ret
int
int3
leave
repz
aad
shl
ret
test
stc
and
addb
ret
div
cmp
div
fdivrp
ret
jecxz
hlt
fsubp
cli
jmp
cli
fldl2t
fsub
cmc
ror
repz
mul
fnstenv
cmp
fsubr
repz
mul
test
fidivrs
jecxz
lock
xchg
xchg
out
dec
repz
int
fsubrp
lret
repz
fdivr
xchg
jecxz
out
out
ljmp
ljmp
xor
fucomip
cmc
cli
repz
int3
loop
repnz
out
hlt
icebp
lret
cmp
jmp
aad
repz
ffreep
jmp
in
jmp
cmc
fdivs
iret
lock
hlt
push
out
repz
aas
std
rol
fcmovu
cmc
out
xlat
loope
jecxz
hlt
not
leave
xor
in
xor
hlt
int3
fcmovnb
aas
in
in
ret
in
aad
call
cld
loope
vphaddwd
jmp
jmp
flds
stc
clc
sar
aad
jecxz
rclb
out
iret
aad
fsin
sar
repz
ljmp
clc
std
fsub
std
int
jecxz
lock
fcmovne
aam
into
aaa
fcmovnb
out
ss
xlat
cmp
xlat
xchg
sub
mov
mov
enter
out
ss
repnz
aas
int3
ret
repnz
testb
mov
jmp
repz
fidivl
cmp
std
leave
jmp
lock
call
out
mov
mov
sarb
lret
sti
xlat
rolb
fdivrl
out
mul
std
not
test
iret
call
icebp
test
ljmp
cmp
cmp
fprem1
test
imul
in
fsubrp
cli
ffreep
call
xchg
xchg
lock
bnd
cli
icebp
cmpl
xchg
sbb
decl
leave
sub
jmp
lret
fnop
in
cli
in
lock
and
out
jecxz
in
sub
lret
lret
call
fucomi
fld
jmp
lock
loope
ljmp
out
fists
rcl
div
xor
jmp
fiaddl
leave
ret
sti
out
in
leave
jmp
in
into
icebp
xchg
shll
xlat
jmp
loop
fcom
fdivr
std
incb
into
mul
mov
xchg
mov
cli
repz
sar
sti
cmp
repz
fcmovu
movl
rorl
leave
shr
enter
stc
fcomi
cli
sti
sar
clc
cmp
out
mov
mov
sarb
in
lret
fsubr
lret
neg
into
aad
out
cmc
cld
clc
ljmp
jmp
rcl
out
fcomi
xor
lret
out
aam
fucomp
call
mov
hlt
jmp
idiv
out
fcomi
out
xor
int
into
cmp
shl
test
call
fucomp
xor
shl
xor
shl
in
rcl
or
cld
cli
fdivr
xlat
incl
mov
loop
repz
xor
in
into
lret
cmp
fidivrs
neg
cmc
ljmp
sbb
out
fcmovnb
jmp
aam
loop
cmp
xlat
test
div
int3
xchg
cli
test
lock
out
in
fdiv
lret
ror
loopne
sub
incl
test
lock
aam
ljmp
loopne
ffreep
sbb
loopne
fcmovb
call
stc
int3
mov
test
xor
lock
das
in
aas
fcomp
jmp
test
cli
shl
faddl
in
out
loope
faddl
into
xlat
fcmovnb
xor
ljmp
shl
movl
xchg
icebp
lret
fnstenv
sarb
not
cmp
aam
les
repz
repz
orl
in
int
xor
rolb
fdiv
ret
enter
sub
jecxz
lret
lret
div
iret
cmp
cmp
cmp
fisttps
sti
hlt
mov
in
jmp
ljmp
cmp
ds
mov
std
in
fimuls
xchg
lock
loope
loope
jmp
fdivp
push
movzwl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
icebp
repnz
fdivr
xor
loopne
enter
lock
jecxz
fucomip
ror
jmp
out
cmp
lret
ljmp
rorb
test
cld
test
into
cld
jmp
ljmp
and
aas
std
repz
neg
aas
fstp
iret
int
xchg
adcb
in
lret
std
leave
enter
stc
shl
jecxz
test
xlat
loope
test
jmp
cs
aaa
loop
fdivrp
iret
fdivr
xbegin
fucomp
xchg
jmp
or
shl
lret
jmp
aad
int3
aad
repz
sbb
lret
lea
in
leave
xlat
enter
repnz
jecxz
mov
ffree
lret
xchg
fldl
lds
sti
cmp
out
sarl
xchg
loope
fisttpl
out
loop
loop
enter
fcmovbe
lock
ret
add
call
enter
out
lret
int
loopne
xor
repnz
iret
out
in
xlat
lock
out
bnd
mov
mov
aam
out
cmp
aad
loopne
in
fadds
in
clc
in
mov
ljmp
fcomip
cmc
fst
ds
rcr
cli
out
mov
in
int
fst
nop
out
sub
int3
clc
iret
fadd
dec
fcomp
iret
test
in
xchg
decl
int3
repnz
test
xor
jmp
icebp
ljmp
loop
addl
mov
mov
mov
imul
cmc
xlat
shl
int
repz
icebp
std
xor
mov
loope
xchg
in
in
jmp
aad
rcl
cld
shl
hlt
in
iret
cld
cmc
repnz
xchg
xlat
ljmp
loope
in
int
fdiv
jmp
rcr
repnz
rorl
out
repnz
rclb
int3
in
out
loopne
int3
out
int
cmc
repnz
add
out
fxch
fxch
in
loope
mov
xor
lret
into
test
idiv
sar
in
fmul
sti
ljmp
jecxz
call
neg
fdivrp
ret
clc
repz
mov
out
into
sub
int
cmp
cli
cmp
xor
cli
mov
test
in
out
int3
icebp
cmp
fcmovu
clc
ljmp
call
mov
repnz
out
leave
cmp
lret
fucomip
cli
in
fcmovbe
loopne
lock
loope
fsub
loope
fsubr
jmp
in
loope
in
out
repnz
test
aad
mov
fcom
std
test
cli
rcll
cli
xor
lret
iret
out
loope
rol
jecxz
lret
stc
int3
out
xchg
xchg
orl
lock
call
repnz
test
enter
lock
in
fucom
mov
into
aam
cld
xor
jmp
rcr
ret
fmulp
in
loop
xchg
out
shl
jecxz
aam
hlt
xor
ret
cmp
lock
lret
out
in
shl
test
shl
fsqrt
ss
cmc
int3
rcr
rcr
mov
cli
std
fsubr
nop
ljmp
jmp
lret
fcmovb
xor
cmp
cmc
cli
cmp
clc
fsubp
fmuls
and
rcl
repz
aad
cmp
out
jmp
roll
in
leave
mov
lret
mov
repz
in
out
aad
iret
aam
out
adc
loop
jmp
loope
in
jmp
enter
in
fcmovbe
int
icebp
xlat
cmp
cmc
in
hlt
aad
mov
in
idiv
mov
jmp
repz
leave
jmp
loop
neg
cmc
clc
clc
xor
add
ficoms
xor
into
jmp
xor
aam
xor
jecxz
iret
lock
test
ljmp
shl
aaa
ret
jmp
loop
cmp
cmp
jmp
and
addl
in
in
shlb
repnz
fsin
testl
fadds
fstl
in
imul
std
aas
out
leave
clc
mul
fdivr
iret
shl
cli
jecxz
fsubrp
test
cli
xchg
cld
mov
loopne
xor
repz
cmp
hlt
cld
enter
leave
loop
out
test
orb
xchg
inc
add
inc
add
sti
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
xchg
sahf
jp
jle
add
aam
jmp
into
fsubr
stc
shl
test
cmpb
xchg
vpmuludq
test
in
out
out
out
xlat
clc
aaa
int3
neg
jmp
cmp
adc
icebp
ret
sti
clc
call
loopne
xchg
div
iret
jmp
sbb
int
icebp
stc
icebp
loop
and
int
into
filds
aad
in
aad
shl
rolb
loopne
int3
jmp
jmp
out
clc
cmc
cmp
in
ror
into
jmp
ret
repz
call
xchg
int
out
xor
in
lds
out
aad
lret
repnz
xor
fcom
enter
iret
fst
fcmovne
iret
xchg
int
fcmovu
into
out
cmp
out
ret
not
inc
fdivr
leave
enter
cli
xchg
lock
fmulp
lret
jmp
aaa
xor
cmp
div
aam
cmp
shl
clc
cmp
ljmp
loopne
in
aam
icebp
cmp
in
fcomi
in
stc
stc
call
jmp
xchg
in
test
in
shl
ror
das
sti
repz
cld
cmp
cli
inc
hlt
repz
xlat
out
mov
rolb
out
xor
cmc
hlt
leave
out
rcl
std
fcmovne
loop
out
fdivrl
vpavgb
cld
mov
enter
neg
neg
iret
lock
ror
ret
out
rcl
clc
test
mov
fstp
xchg
hlt
in
ret
fcomp
icebp
repz
xor
cmc
rcr
loope
fadd
fadds
fisttpl
out
aad
out
in
fidivrl
sti
fcmovbe
cmpl
call
loope
lea
loope
cmp
stc
out
int3
in
in
fcom
lret
inc
jmp
call
out
rolb
cmp
cmp
lock
cmp
loopne
sbb
cmc
leave
int3
fcmove
or
repnz
sarb
cmp
aaa
hlt
fcmove
lock
out
aam
adc
call
popl
in
icebp
cmp
ljmp
loope
and
mov
hlt
loope
iret
jmp
iret
shl
in
jecxz
call
sti
sti
rcl
rcr
fadd
ret
int
ret
mov
icebp
into
in
in
lds
ljmp
jmp
iret
in
out
fcmovbe
enter
mov
xchg
iret
bnd
ret
xor
aaa
fidivrs
loope
shl
cmc
hlt
cmp
in
in
test
ror
mov
das
int3
cmp
shl
rcr
loope
loop
out
xchg
addb
xchg
xchg
in
xchg
lret
loope
xor
cmp
ss
in
out
clc
rcr
jmp
fsub
nop
in
mov
in
out
into
ss
out
in
in
cmc
shl
test
cli
addl
nop
ror
lock
sti
out
xor
cmc
ds
rcl
cmp
xor
out
hlt
stc
fdivrp
iret
fucomip
repz
xchg
add
fxtract
repnz
cmc
stc
jmp
aam
fcomp
aad
jmp
out
lock
cmc
hlt
cmp
into
hlt
int3
call
not
cmp
shl
decl
sub
fisttpll
xlat
loop
call
out
fsub
fucomip
and
sti
imul
fimuls
out
aaa
xor
xor
into
cld
leave
call
adc
test
cld
mov
int3
stc
adcl
jmp
xor
leave
repnz
stc
cmp
mov
cmc
fld1
test
rorb
aad
cmp
lret
shr
stc
cmp
stc
xlat
adc
out
xchg
and
mov
fmull
shll
std
xlat
sbb
cmp
out
mov
xor
ljmp
lock
shr
int3
int
addb
add
lret
in
ss
in
out
xlat
cmp
jmp
cli
sti
cld
cli
loop
ret
jmp
mov
in
iret
ss
ret
icebp
repz
div
in
sarb
lret
movl
xor
enter
cli
std
cmp
mul
fcmovb
idiv
out
lds
mov
call
int
leave
lock
rcl
idiv
movb
int3
mov
iret
xchg
aaa
shll
aaa
jmp
fcomi
hlt
cli
stc
fdiv
flds
out
ljmp
iret
shr
repnz
hlt
loope
aad
aad
ret
out
loope
hlt
jmp
mov
add
add
lret
push
add
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
mov
lcall
hlt
jg
jle
add
les
incl
cmp
cmp
cld
repnz
ror
cli
out
loope
sbb
in
fisttpll
xchg
ret
sub
cmp
jmp
xor
dec
ret
fiadds
lret
int3
loope
mov
in
cmp
out
stc
jmp
neg
loopne
mov
xchg
int
xbegin
aad
iret
xor
in
lret
ds
clc
stc
stc
loope
sar
out
fsub
mov
cmp
out
ss
cmp
shr
not
sarb
call
lret
faddp
movl
lret
rcr
std
hlt
iret
repz
sti
in
cli
loope
ljmp
nop
xchg
xor
jmp
test
xor
std
loope
fstp
out
mov
sar
xor
out
cmp
dec
idiv
shlb
loope
fcom
enter
xchg
xchg
ljmp
fidivrl
iret
ljmp
addb
out
fldl
out
cmp
icebp
in
shl
enter
cmc
ret
out
in
cli
repnz
mov
shl
nop
xchg
rcl
leave
aad
fcmovbe
enter
ds
repz
cli
int3
cld
lret
into
sbb
call
out
out
jecxz
enter
xlat
loopne
int3
xchg
aam
aas
in
clc
jmp
in
orb
das
xor
jmp
repz
cmp
mul
cmp
fiadds
int3
sti
mov
jmp
call
into
leave
shll
cmc
xlat
ds
aad
stc
shl
out
test
sub
jmp
cmc
jmp
out
cmp
aad
fsub
out
loopne
dec
mov
mov
out
ficoms
xor
out
leave
sti
repz
int3
cmp
adc
stc
in
int
out
jmp
lret
xorb
xor
icebp
lock
into
lock
repnz
ds
cld
stc
fnstsw
dec
cli
std
aad
jmp
hlt
stc
out
cmp
enter
fst
test
loop
fdivr
ret
xlat
adcl
or
jecxz
aaa
xor
into
sarl
cmp
cmp
in
out
fcomp
xchg
in
in
cmc
jmp
sarb
out
leave
clc
test
jecxz
jecxz
shr
icebp
nop
jmp
cmp
into
out
std
sti
into
std
cmp
clc
shr
ret
neg
loop
lret
sti
xchg
xacquire
enter
repz
testb
lock
out
idiv
loopne
mov
int
icebp
cmp
xor
idiv
jecxz
fadd
cli
fcomip
lea
int3
fadd
div
ret
clc
lret
icebp
out
loopne
iret
test
in
fiadds
jecxz
out
jecxz
idiv
out
xor
icebp
or
xlat
ds
shl
test
fdivr
jmp
clc
clc
in
in
lret
jecxz
fucom
clc
in
xlat
iret
int
cmp
cld
cmp
ret
aad
jmp
xchg
in
sti
rorb
clc
call
cmp
fcomp
aad
cmp
mov
int3
test
lock
jecxz
cmc
fstpt
ss
aas
std
repz
sti
ret
aas
aas
aam
stc
std
dec
nop
out
nop
fimuls
ror
xor
jmp
std
iret
aas
xor
cmp
in
test
test
std
jecxz
jecxz
loope
ss
shl
stc
jmp
aam
loop
and
aam
out
test
test
fiadds
xor
fsincos
out
cmp
aam
aas
sti
stc
xlat
cli
enter
mov
int3
loopne
rorb
jecxz
ret
xor
leave
fcomi
out
int
sar
test
test
neg
cmp
stc
out
cmp
fsubp
fcmovnu
add
cli
ret
sti
fmulp
fdivrp
stc
xchg
loop
mul
xor
sub
out
jmp
xor
fdivrp
cmc
cli
rol
filds
fdiv
into
loope
repz
mov
into
repnz
xlat
in
in
loop
out
fisttpl
out
loopne
rol
xor
cmp
decb
mov
aam
icebp
jmp
lock
or
stc
test
int3
in
mov
int3
out
lock
xor
cmp
sub
rcr
addl
int
test
sub
xchg
xchg
hlt
fmul
icebp
lock
ds
decl
dec
add
cmp
jmp
aad
aad
aad
aad
push
push
scas
sub
lret
jle
add
fcmovne
fdivr
xchg
in
xchg
fiaddl
test
lret
divl
rcl
sti
sarl
loop
cmp
stc
repnz
testl
mov
test
not
xlat
enter
repz
out
fdivr
in
sub
xchg
out
fcmove
repz
rorb
hlt
hlt
cmc
clc
cli
idivb
sbb
fucom
cld
jecxz
fucomip
repz
iret
icebp
jmp
jmp
int3
fiadds
fmul
clc
out
repz
mov
repnz
cld
hlt
fidivs
test
call
in
cld
xchg
mov
lock
leave
xlat
fistpll
stc
cmc
cmpl
ret
in
fmul
cld
test
out
jmp
ljmp
xor
shl
cmp
std
fnstcw
ret
xchg
aam
enter
orl
out
lret
xor
fabs
incl
out
xchg
std
loop
xchg
xor
in
shl
sti
push
xlat
shl
aaa
out
cld
ror
call
xor
into
in
aad
ss
ljmp
fsub
hlt
aad
addl
loope
xchg
icebp
jecxz
ret
clc
enter
int
fcom
icebp
iret
call
cld
in
in
loope
fcoml
cmc
out
aam
icebp
divl
or
cmc
adc
cmc
xchg
repz
fldlg2
xlat
icebp
xlat
aas
aas
fldl
fcmovnb
icebp
flds
nop
sar
loopne
in
loopne
cmp
rol
fxch
cmp
into
out
cmp
test
xchg
test
out
lret
xchg
mov
jecxz
in
xor
cmp
cmp
lock
loop
cmp
out
repnz
cmp
iret
out
shr
cmp
int
aam
repz
addl
in
shl
out
in
iret
lret
hlt
test
mul
iret
rolb
orl
xchg
jmp
out
ss
cmp
jmp
ds
aad
fdivrl
xchg
out
mov
xchg
fdivr
out
in
das
xlat
cmc
lret
shlb
loopne
xlat
fdivp
clc
fildl
in
ljmp
lret
cmp
xor
fucomp
cmp
into
shl
rcl
mov
loopne
addb
out
shr
shr
stc
cld
shl
aad
aad
aad
iret
hlt
in
testl
out
stc
jmp
iret
aaa
ror
lret
cmc
ds
cld
jmp
jmp
mov
nop
call
in
int3
xor
in
int3
cmp
cmp
loop
rolb
loopne
std
xchg
enter
out
loop
subb
aad
xor
cmp
rol
rorl
loope
decb
and
int
cli
fcom
lock
ret
xlat
repnz
ret
xlat
iret
loopne
cmc
hlt
rcl
addb
mov
cld
movl
ljmp
xor
fdiv
fcomp
aas
faddl
loop
mov
leave
out
mov
enter
rcl
in
enter
test
std
out
clc
loop
cld
in
nop
cs
xor
out
vpsrlq
call
aas
test
rol
call
lret
fisttpl
jecxz
leave
lret
out
leave
dec
test
icebp
cmp
out
test
cmc
cld
jecxz
loope
lock
xor
aad
xlat
out
hlt
std
sarl
cmp
ror
clc
loop
mov
loop
int3
out
std
out
xchg
xchg
test
int3
ss
repz
repnz
rol
mov
jmp
int3
jmp
jecxz
test
lds
cmp
shl
ljmp
or
hlt
in
cmp
fldt
ds
fdiv
test
fcmovnb
repnz
jecxz
mov
repnz
xchg
in
mov
xor
xor
enter
lret
out
in
sti
cli
shl
jecxz
stc
lret
iret
sub
adcl
aaa
call
shl
cli
lock
int
ror
aam
ret
jmp
decl
aad
enter
int
cmp
fcmove
test
out
lock
int
call
xor
cmp
fstpt
test
fsub
call
jne
andl
mov
jmp
aas
into
lret
leave
aam
dec
jo
icebp
inc
cmc
sub
or
jle
add
int
out
xor
cmp
fcmovb
std
repnz
addb
fsub
xchg
mov
shr
ss
ds
loopne
std
clc
div
lret
ret
cld
fiaddl
call
out
cld
cmp
cmc
faddl
stc
cli
sbb
enter
fisttpll
xor
lock
out
incl
ret
dec
rol
std
les
icebp
fimull
jecxz
sar
out
jmp
shr
ds
in
sar
cli
int
fisttps
rol
rcr
les
fdivr
lret
dec
iret
ds
xchg
fsub
xor
sbb
fxch
loope
xchg
repz
into
int3
sti
bnd
shl
faddl
test
and
pop
jmp
test
lret
rol
int
jmp
fildl
rcr
mov
les
loope
jecxz
xchg
sub
das
aad
int3
std
aad
xlat
iret
fcomip
fdiv
shl
leave
ljmp
loopne
xchg
fdivp
shrl
hlt
cli
int3
out
sti
frndint
lret
leave
out
fld
fcmovu
ret
add
mov
movb
mov
adc
xor
icebp
out
out
xlat
hlt
lock
out
aad
bnd
test
lret
nop
hlt
cs
enter
iret
lret
ret
aam
mov
enter
call
lret
jecxz
xor
in
icebp
int
jmp
repz
aam
repz
fdiv
lock
xor
xor
repz
fdivr
adc
std
lock
xchg
enter
inc
enter
out
xchg
xchg
xor
aad
xor
into
out
aas
rcr
fxam
sti
fcmovb
repz
jmp
fcmove
xchg
test
or
clc
ljmp
int3
sti
icebp
rcl
addb
mov
jmp
in
xchg
out
xchg
xchg
cmc
call
cli
lock
imul
neg
repnz
clc
int
xchg
icebp
rcr
xchg
mov
cmc
repz
out
icebp
call
int
test
lret
decl
shl
icebp
leave
aad
icebp
out
xor
fcmovbe
iret
iret
int
rcr
filds
xchg
ljmp
test
les
shl
out
iret
faddl
add
mov
jecxz
decl
repz
enter
sti
icebp
cmp
out
xor
sarl
test
test
sub
call
cli
nop
iret
out
cmc
repz
aaa
div
lock
fcmovbe
cli
in
cmp
into
clc
call
fimuls
in
int3
xchg
shr
shl
sub
xor
jmp
stc
ret
rolb
int
xor
sti
div
cli
xlat
out
loopne
xlat
ds
std
mov
ljmp
f2xm1
repz
mov
jecxz
aad
jmp
lret
rcr
sti
in
lock
fsub
in
xchg
out
adc
lret
jmp
call
stc
cli
ds
ret
clc
ret
out
fmuls
fstp
loopne
iret
lret
out
lock
cmp
idivb
fnstcw
int
clc
out
sti
enter
in
sbb
cs
xor
fucomi
jmp
std
xor
fyl2x
sbb
leave
int3
cli
xchg
out
rorb
out
in
cmp
lock
lret
out
idiv
les
cli
orb
out
cmp
hlt
cmc
fmul
ss
sarb
rcr
ret
test
enter
out
rol
leave
ftst
xor
push
fstp
aas
int
out
rolb
in
mov
into
xchg
xor
shl
cmp
sub
ds
in
fildl
mov
aad
in
nop
nop
ret
sbb
mov
shl
fsubr
lock
std
fidivs
loopne
div
testl
lock
aas
lret
out
cmp
cmc
call
stc
in
loopne
incb
jmp
icebp
int
loop
cmp
xor
fdecstp
rcr
and
decl
ljmp
in
sub
icebp
hlt
idivl
cmp
out
iret
fsubp
out
cmc
test
loope
loopne
rorl
out
rcl
lds
xor
out
ss
jecxz
icebp
cld
test
test
mov
lret
loope
xchg
repnz
loope
enter
hlt
lock
aam
fiaddl
fsubrp
mov
jecxz
orl
inc
aas
repz
aam
sar
xchg
or
inc
cld
jmp
int3
ret
int3
int3
sahf
pushf
gs
cmpsl
out
mov
or
jle
mov
xchg
shl
rol
shr
sti
xor
repz
fcmovu
clc
aas
test
fildl
dec
iret
int3
shl
lret
incb
aad
cmc
ror
repnz
fdivrs
cli
rol
faddp
xchg
loopne
fucomi
into
nop
cld
mov
ljmp
std
ss
addl
faddp
lret
in
fsqrt
cmp
ret
push
fadd
shl
jecxz
loop
rcr
out
mov
xor
aam
icebp
cmc
out
fdivrl
repz
loope
cld
fstp
rcr
mov
mov
call
fsubp
repnz
in
fcmovnu
rcl
cmp
repz
into
sbb
roll
xchg
cli
repz
aad
lock
cmp
sarb
std
cld
lock
enter
jmp
or
sub
fmul
fldz
fcmovnu
lock
mov
lret
orb
aad
lret
xor
in
jmp
aam
call
rcl
cmp
jmp
mov
mov
out
rcr
enter
sti
repz
fdivp
adc
icebp
addb
sti
cld
out
addl
lock
cli
icebp
xor
rolb
xlat
lds
in
iret
cld
dec
fcomip
ljmp
out
sti
aad
loop
shl
sar
in
ret
iret
fsts
lock
icebp
out
xor
cli
lret
stc
loop
cmp
rcll
in
jmp
stc
fnstsw
ljmp
aas
loop
loop
fmuls
hlt
out
ljmp
cmp
int
cmp
in
iret
sbb
fimull
xchg
decl
jmp
in
xlat
ror
cmp
test
faddp
enter
in
jmp
loopne
aas
xor
aaa
in
ror
xlat
cli
addb
sbb
vpandn
cli
fdivr
int3
orb
xor
fnsave
rcr
test
rcr
sar
out
out
int3
icebp
xor
iret
int3
not
sarb
aaa
hlt
cld
into
aam
xlat
hlt
jecxz
adcb
or
rol
in
xor
shr
icebp
out
sti
out
shl
stc
out
repnz
mov
fadd
xor
clc
cmp
sar
cli
ffree
xlat
cld
xlat
out
ljmp
into
xor
jmp
std
ds
lret
fnstenv
idiv
mov
jmp
sar
std
subb
cmc
lret
int3
aaa
int
fildl
xchg
jmp
jmp
xchg
das
neg
cld
out
rcr
shl
xlat
ret
std
test
enter
loope
mov
test
xchg
xchg
xchg
mov
lret
xor
fcmove
int
hlt
loope
repnz
add
sar
cli
cmc
lret
fimuls
cmc
cmp
out
cmp
out
sti
repz
ror
repz
cld
in
int
fimull
mov
xor
hlt
repnz
aas
call
out
aad
aam
fcmovne
out
frstpm(287
std
lock
aad
out
cmp
stc
fdivl
jmp
shr
lock
sti
adc
clc
cmc
dec
fdivrp
mov
loop
repz
cmp
fcmovnbe
stc
lret
out
jecxz
shl
test
sub
test
faddl
aaa
out
xor
test
jmp
aam
repz
fimuls
ljmp
iret
jmp
call
sarl
in
sar
sti
fdivr
out
mov
fsubp
test
int3
sar
test
xchg
loopne
jmp
ds
stc
rcr
clc
jecxz
test
fmull
orb
std
fnstsw
out
jecxz
clc
sbb
ret
in
in
fsubr
fdivrp
mov
xchg
stc
not
shll
fldz
int3
cmc
idivl
loopne
sar
out
fld
idiv
mov
mov
repz
lret
mov
jecxz
loope
jecxz
aaa
aaa
jmp
stc
cmp
into
neg
rol
ret
fst
in
loopne
sti
jecxz
repz
stc
bnd
cmp
cld
ror
fcmove
stc
mov
cmc
mov
ljmp
in
in
repnz
sti
int
shl
cmp
ds
jecxz
adc
in
cli
test
sub
fdivl
icebp
cmp
cmp
sti
cmpl
clc
jmp
or
call
shl
ret
loop
cmp
icebp
aaa
cmp
loopne
add
jmp
lret
into
fst
fstp
bound
mov
push
add
cli
add
cld
ljmp
int3
or
loop
div
aam
icebp
jmp
test
rcl
fsqrt
jmp
out
clc
loop
rclb
out
in
rolb
sti
ds
or
xor
addb
test
icebp
shr
fldl2e
vpmaxub
iret
loopne
sub
hlt
fcomip
out
cli
call
xchg
mul
lock
lret
ss
ds
fprem
ffreep
stc
mov
ret
lret
ljmp
xlat
cmc
sarb
sti
fnstenv
lock
fneni(8087
into
ret
fmull
add
xchg
orb
idiv
xor
stc
ds
cmc
clc
addl
repnz
cld
out
fcomip
ret
fcmovne
cmc
cmp
ljmp
rol
fsubrp
cli
cld
mov
hlt
jmp
clc
cli
imull
lock
aad
ljmp
enter
in
mov
int3
fimuls
out
loop
iret
aam
sarl
aas
std
loope
fst
jmp
cli
mov
lret
test
shr
out
in
hlt
leave
loop
lock
out
sti
mov
in
xchg
out
in
mov
cmc
rol
ljmp
lret
cld
fucom
out
lea
mov
out
fcmove
enter
cmp
repnz
rcr
rol
fimuls
jecxz
out
jmp
xor
cli
fstp
lock
hlt
fnclex
sar
ret
incb
out
mov
fcomi
xor
cmp
in
shl
in
loopne
rcr
hlt
cmc
xor
ror
fcmovne
out
roll
cmp
xchg
les
rcl
lock
int
in
int
fcom
sar
icebp
xchg
ljmp
mov
hlt
cmp
iret
xor
lret
fdivrs
cmc
out
cld
iret
fimuls
mov
incl
into
xor
lds
leave
cld
out
int
out
stc
faddp
repz
out
sbb
mov
sub
cmc
fcmove
stc
fcmovb
idiv
clc
hlt
xchg
xchg
filds
lea
sub
out
in
clc
stc
loopne
fneni(8087
test
loop
int
jmp
mov
xor
out
lock
xlat
sar
cmc
out
iret
rolb
out
nop
lret
bnd
call
fmulp
enter
out
in
repz
loopne
hlt
mov
cmp
ljmp
call
dec
sti
shr
test
rol
cld
fucom
fmul
mov
test
xchg
mov
fdiv
aam
xor
adc
loopne
hlt
mov
loopne
int
icebp
ret
loopne
xlat
xor
hlt
fxch
in
out
aas
ds
iret
xchg
std
out
or
mov
lret
out
in
cmp
fstp
ss
cmp
repz
mov
test
xorl
in
std
fcom
loop
rcl
mov
loope
jmp
jmp
test
mov
out
aam
leave
xor
cmp
jmp
rcl
std
test
rol
xchg
lret
jmp
repz
sub
cs
sarl
enter
test
fcmovnu
mov
cmc
xchg
leave
cld
repz
cmc
out
shrl
lret
jecxz
call
testb
std
cmp
testb
orb
ljmp
out
cli
in
repnz
in
clc
lret
jmp
bnd
clc
into
cld
sar
cmp
fdivp
out
sti
out
loope
fiaddl
frstpm(287
iret
fsubp
in
lock
cmp
in
sbb
shl
lock
test
icebp
loope
cmc
aas
jmp
call
repz
sub
repz
int3
fiadds
cli
ror
mov
fcmove
loopne
int3
call
shl
enter
xor
cmp
test
lock
ret
mov
std
fdiv
loope
repz
fdivp
cmc
mov
xlat
cmp
ret
faddl
std
out
sti
filds
mov
jmp
jmp
stc
in
cmp
shl
fstp
lret
std
orl
popl
loop
rcr
repnz
dec
fsubrp
rcl
fnstcw
testl
in
out
xor
jmp
int
iret
rcl
aad
inc
xor
addr16
out
mov
add
in
aad
iret
icebp
cmp
rcl
and
ret
cmc
xchg
in
ljmp
lret
call
aaa
lret
xor
mov
xlat
fsubr
cld
mov
std
mov
into
rcl
int
lret
loop
sbb
cmp
call
in
sub
loopne
mov
in
ret
xor
sar
enter
fadds
repnz
clc
fiaddl
mov
sarl
jmp
jmp
cmp
sti
cmp
enter
out
out
mov
icebp
call
out
cmp
fdivr
repnz
xlat
xchg
jmp
imul
jmp
std
loop
enter
shr
jmp
lret
fiaddl
repz
clc
fiadds
jmp
out
aad
leave
fidivl
int
fistpll
rcl
rcr
adc
std
loop
faddp
leave
cld
mov
decb
out
cld
aaa
ss
iret
out
jecxz
xor
aad
enter
jecxz
orb
clc
fdivr
fcmovu
cld
cmp
or
rol
call
in
xchg
repz
hlt
in
fcomi
in
icebp
lock
jmp
adc
xchg
test
fimull
mov
into
out
int
cmp
in
imul
rcl
hlt
fcomi
cmp
fdiv
loope
in
cmp
mov
ret
shr
out
hlt
cmp
shl
loopne
icebp
aad
fsubp
repz
shr
mov
in
in
mov
xor
int
fcomip
repnz
stc
add
cli
test
fstp
or
loop
hlt
mov
mul
fcomi
iret
idivb
out
loopne
test
ret
rcl
out
enter
loop
xchg
test
ret
xor
rcl
rcr
cmpb
cmp
jmp
int3
iret
icebp
cld
fstl
aam
lret
cmp
cli
cmp
xchg
fiaddl
testl
rol
jmp
cmp
fcomip
xlat
stc
fldl
mov
filds
xor
aaa
divl
cli
lret
in
fldz
sbb
in
test
loopne
mov
ret
loop
jmp
popl
vpmaxub
out
sarb
iret
out
loope
mov
ljmp
rcl
into
jecxz
into
icebp
repz
fucomi
loop
xlat
shl
aad
rorl
int3
enter
out
xor
cmc
in
cmp
fdivr
into
stc
cmc
sti
jecxz
test
sti
stc
fninit
test
jecxz
cmp
xlat
clc
rcl
rolb
cli
cld
fcmovnu
mov
loope
sub
shl
out
div
jecxz
lret
rcr
cmp
fcomip
in
cmp
loope
icebp
out
in
xchg
out
fxch
fdiv
cmp
call
les
cmp
lret
call
jmp
aam
std
out
cmc
cli
lock
cmc
addl
xor
jmp
cmp
stc
icebp
hlt
cmp
aad
jmp
lock
fucomp
nop
ljmp
fcmove
aaa
cmp
repz
lock
cld
stc
enter
lret
jmp
hlt
clc
repz
xor
cld
test
jecxz
decb
lret
shrl
repz
xlat
push
hlt
out
iret
std
test
jmp
fmuls
xchg
aam
iret
loop
cmp
fdivl
in
addb
loop
fscale
in
mov
icebp
loope
sti
jmp
ret
aam
cmc
clc
leave
lret
cli
sti
out
test
enter
stc
dec
les
ret
jmp
xlat
not
xor
rcr
loope
idiv
mov
int
ljmp
ljmp
aam
aam
xor
ds
iret
mov
inc
fldl2e
leave
lret
cmp
test
aam
not
enter
mov
filds
in
ret
sub
fldl
aam
lock
in
aas
in
in
into
int3
and
in
ss
xor
neg
repz
out
cmp
loopne
cli
std
in
ror
jecxz
loope
into
call
fsubp
lret
int
cmp
fnop
neg
fstpt
aad
fpatan
mov
mov
in
lock
out
fsubr
cmc
int
enter
repz
jmp
fiadds
not
in
aam
mov
mov
sub
add
inc
or
out
add
add
aad
fisttpll
sub
dec
add
add
shr
icebp
aam
mov
out
aam
leave
fidivrl
loopne
loop
aam
jecxz
shl
rcr
lret
xchg
xchg
clc
xor
lret
lret
cmc
fcmovb
neg
sti
ret
repz
cmp
ret
fildl
xchg
out
fdivs
cmc
lret
xor
ds
fcmovbe
std
push
lock
stc
mov
jecxz
clc
out
test
out
ret
out
ss
fiaddl
out
test
jecxz
cmp
mov
xchg
rorb
out
enter
rcr
enter
in
cmc
std
sar
inc
mov
cli
cld
mov
loope
in
fcmove
int3
aas
fucomp
cld
aam
int
out
jecxz
test
in
in
cmp
iret
xchg
pop
in
ss
cmp
rcl
lock
test
in
rorl
xchg
jmp
int3
cmp
xlat
cmc
loope
in
ret
enter
and
jmp
into
fcmovnbe
ror
cld
int3
incl
mov
rcr
out
movb
mov
xchg
into
leave
lock
cld
ljmp
out
cli
icebp
cld
neg
leave
mov
cld
mov
lds
cmp
fyl2x
fxtract
cld
cld
and
fld1
idiv
loopne
lret
out
nop
out
hlt
xor
xor
iret
cmc
rcr
ljmp
rcl
leave
adc
loopne
cld
fiaddl
int
leave
cli
cmp
aaa
fucomp
loopne
neg
fucom
test
test
hlt
jmp
test
lret
std
out
std
aam
mov
int
jmp
in
xor
test
jecxz
adc
fcomi
in
loop
mov
test
into
ret
rcl
cmp
repz
shl
clc
add
lret
xchg
aam
repz
sub
fdivp
fdivr
ret
loope
movl
out
lock
ror
lock
stc
cli
cli
testb
ljmp
shl
iret
iret
mov
icebp
sar
out
in
fnstcw
int3
sub
lds
les
loop
test
lret
aaa
shl
div
clc
sti
cli
icebp
aad
stc
cli
fcmovu
leave
lret
clc
fiaddl
xor
lret
enter
stc
in
lret
out
xor
fcomip
ljmp
fisttpl
int
into
jmp
aad
xlat
aaa
rcr
cmp
hlt
out
mov
ljmp
clc
lret
xor
cmp
jmp
lret
fstpt
ds
ret
cli
mov
sub
cmc
ss
aam
fdivrs
rcl
rorb
xlat
ret
in
in
in
in
aam
cmp
cmp
rcl
fcom
call
dec
out
call
fdivs
xor
cmp
rcr
leave
xchg
neg
sub
repnz
into
xchg
loope
vshufpd
xor
hlt
stc
fdivrl
addb
ljmp
test
in
stc
cmp
cmp
hlt
into
iret
cmp
repnz
in
cli
call
lret
loop
int
leave
imul
in
mov
repnz
int
icebp
idiv
mov
div
mov
jmp
in
iret
aam
rcl
xor
cmp
in
orb
out
xchg
out
jecxz
repz
lock
cld
into
icebp
fldl
out
std
sti
roll
out
jmp
in
xor
xor
in
cmp
enter
sti
lret
int
or
ret
int
das
cmp
rcr
clc
fucomip
ds
loop
mov
int3
stc
mov
adcl
leave
call
fdivp
xor
test
ljmp
sub
icebp
loopne
lret
sub
shlb
jmp
int
cmc
test
jecxz
lret
mov
sti
mov
xor
ljmp
div
int3
loope
sbb
sti
mul
fsin
loop
leave
repnz
mov
xchg
int
out
repnz
not
loope
mov
clc
aas
rcr
rol
loope
hlt
shlb
aas
cld
roll
clc
aad
mul
loope
icebp
rcr
out
xor
xor
cmp
in
cmp
shl
test
sarl
sti
out
loopne
loopne
jmp
xchg
loope
jecxz
xor
fyl2x
fiadds
jge
push
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
xor
push
add
cmp
test
cli
fimull
imul
hlt
int3
fcmovbe
sti
pushl
flds
cmp
jmp
mov
mov
in
call
sti
loopne
ret
ret
out
hlt
in
fdivr
out
xchg
icebp
xchg
test
in
std
stc
in
cld
ror
cld
aas
fucomip
aam
test
in
mov
lock
aaa
jmp
fsubr
mul
cmp
fimull
call
fists
shlb
aas
idiv
hlt
cmp
cmp
cli
cmp
cli
loope
std
test
neg
xlat
das
fistpll
clc
fsubr
jecxz
cli
ret
cmp
fcmovbe
int
xchg
lret
rolb
in
out
out
cmp
ds
repnz
loop
sbb
sti
iret
jecxz
int
xchg
out
rcl
cmp
sti
aas
loopne
test
test
std
test
test
xchg
mov
rcll
loop
in
lock
hlt
fcomp
lock
div
test
jmp
aam
xor
jmp
leave
cmp
lret
into
lret
out
neg
sub
fidivrs
mov
std
xchg
loope
int
aam
in
lret
jmp
aam
repnz
ret
ffreep
neg
jmp
lret
into
iret
loop
int3
aas
xor
sar
xlat
into
lret
int
or
fucomip
in
fucomp
mov
in
repnz
rcl
xor
fdiv
cmp
aad
cmp
stc
xchg
test
int3
cmp
or
fcmovnb
lock
enter
sar
fucomp
into
cmc
test
cmp
stc
cmp
out
loop
mov
stc
out
repnz
fcmovu
in
xor
idivb
rcr
icebp
xlat
fmuls
int
lds
int3
jecxz
ror
int
int3
std
test
hlt
fcmovnu
mov
fisttpl
test
xlat
clc
cmp
idivl
cmp
adc
fdivr
ljmp
repnz
xor
lret
loopne
fst
adc
call
fmul
xchg
out
iret
loope
mov
fstpt
loopne
int
test
sarb
lret
loope
mov
xorb
into
out
sti
cmp
fucomp
int3
loop
fcmovu
fcomp
mov
flds
in
in
iret
jecxz
out
xor
lock
fsubrp
cmp
xchg
xchg
das
repnz
mov
into
cmp
aas
cmp
xlat
shl
aam
enter
repnz
shr
xchg
lock
stc
out
iret
out
in
sar
sbb
aas
cmp
cmp
xchg
mov
ljmp
fdivrl
int
cmp
fisttpll
xchg
iret
cs
out
icebp
jmp
out
sar
hlt
repz
in
loope
orb
lret
xchg
aam
sti
out
lret
fstp
into
loopne
shl
aas
test
call
loope
into
xorl
cmc
out
test
loopne
neg
adc
mov
jmp
dec
xchg
out
das
xor
xor
xor
aam
int
sar
loope
mov
in
lret
jmp
int
cmp
jmp
cmp
fidivrs
std
cld
sbb
lret
lock
repz
out
stc
ffree
hlt
cmp
shl
aas
test
aam
fldl
xchg
aam
in
lret
cmp
cmc
lock
sti
into
cmp
in
fcmovne
test
out
cmp
lret
out
rol
ret
call
into
sarl
xchg
mov
xlat
sti
xchg
addb
xor
cmp
in
leave
cmp
jmp
rcl
cmp
sti
shl
leave
ljmp
decb
aaa
sar
clc
jmp
ror
cli
out
iret
xor
std
in
stc
ljmp
out
iret
sti
cli
rcl
iret
stc
shl
out
in
filds
lret
out
fdivp
call
sarl
xlat
stc
in
pushl
hlt
rcr
shl
and
rcl
cli
xlat
test
xchg
lock
jmp
xor
hlt
jmp
int
xor
in
aam
loopne
lret
clc
sti
in
fsubrp
xchg
mov
shr
sti
repnz
hlt
cli
div
out
leave
sbb
call
test
cmp
rcl
hlt
movl
mov
mov
jmp
enter
int
int3
lret
xlat
ja
fnstcw
fcoml
add
repz
jmp
icebp
cmp
call
idivl
in
ljmp
hlt
int
ljmp
or
loope
out
fstp
fninit
ljmp
mov
enter
enter
fcmovnbe
fiaddl
mov
std
out
fsubp
jmp
xchg
icebp
xor
int3
fidivl
cmp
ss
test
in
ret
in
sub
cmp
lret
out
aad
out
xor
xor
jmp
out
into
sar
std
out
ljmp
mov
lret
fdivrs
repnz
stc
stc
clc
repnz
jecxz
hlt
loopne
into
cmp
leave
ljmp
cmp
clc
fld1
sti
filds
std
jmp
xchg
jecxz
out
in
into
mov
ljmp
loopne,pt
testb
fsub
xlat
cmc
out
cmp
fcomip
jmp
test
clc
lret
cmc
xlat
in
jmp
fisttpll
iret
lret
lret
aas
int3
xor
aad
cmp
loopne
aas
xlat
repnz
aas
sub
mov
idiv
out
mov
lret
jmp
xlat
repz
hlt
hlt
fcmovu
std
int3
cmp
rol
cld
ret
jmp
out
into
repnz
repnz
lds
cli
aam
cmpl
mul
loopne
out
mul
stc
into
fiadds
xor
xor
cmp
shl
loopne
icebp
rcr
fisttps
out
test
out
xor
shr
call
iret
stc
addb
test
jmp
fildl
xor
sar
fcmovbe
ss
ds
rcl
ftst
in
fmul
ret
jecxz
leave
loope
call
xlat
xor
out
aaa
ljmp
test
xlat
loopne
lret
loopne
icebp
mov
xor
jmp
add
testb
in
loop
jmp
icebp
or
ljmp
aaa
sarb
aam
ds
std
rcl
rol
ds
xchg
in
addl
rol
jmp
ss
aam
icebp
xor
ret
ret
clc
enter
loope
xchg
loopne
fcmove
out
in
iret
int
std
std
cli
sar
xchg
loope
idiv
loope
loop
mov
ss
sti
cmp
leave
hlt
cli
fldpi
loope
icebp
cmp
addl
loopne
ror
cmc
in
out
push
cmp
stc
aas
cli
fadd
rcr
rcl
in
std
std
ror
jmp
sti
call
cmp
jecxz
aam
mov
enter
enter
into
imul
out
lock
xor
cmp
xlat
repnz
jmp
mov
test
xchg
and
xor
aad
ss
out
rcl
jecxz
in
enter
loope
test
enter
xchg
lret
xor
ds
shl
ret
sarb
xchg
or
rcl
xor
xor
xor
int3
enter
fmulp
in
rcl
iret
test
cmc
lret
or
lock
in
rcl
loope
ret
cli
sti
stc
fsubrs
idivl
cmp
jmp
repnz
sbb
out
mov
nop
xchg
out
fucomp
xchg
in
xor
ljmp
int
ds
fcmovb
test
fadd
lret
out
xchg
icebp
in
out
int3
jmp
faddp
ds
fsub
cmc
repz
mov
fdivr
out
xchg
int
imul
lds
lret
in
lock
cmp
ret
xchg
int3
xchg
xchg
std
xchg
xlat
jmp
xor
out
fidivs
lret
filds
or
jmp
in
in
lret
aad
repz
loop
int3
std
ds
push
stc
fucom
mov
int3
icebp
rcl
xchg
notb
xor
cmp
fchs
inc
jecxz
in
clc
stc
rolb
lds
rcr
repz
aam
shll
cld
cli
lret
fiaddl
shl
test
out
addb
int
enter
fbstp
cld
hlt
fadds
test
xor
ljmp
fcomp
ljmp
sar
xlat
fsubr
sti
loop
xlat
into
fucomi
xor
out
cli
neg
cli
lret
fnsave
loope
iret
lock
dec
sti
jmp
rcl
loopne
int
aaa
int3
repnz
repz
lock
std
mov
fisttpll
test
inc
hlt
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
and
xchg
jp
add
add
addl
xlat
clc
xor
jecxz,pt
test
aad
jmp
sti
testb
mov
out
int
stc
adc
out
test
into
flds
aad
or
xchg
mov
jecxz
lock
test
into
out
addb
repnz
lret
mov
int
leave
lds
jecxz
fldln2
repnz
fsubrp
cli
clc
repnz
std
mov
cmp
stc
xlat
loope
std
shl
out
test
ror
into
clc
icebp
cmp
iret
std
loope
fdivrs
sar
mov
call
xchg
loopne
hlt
out
in
das
fdivrp
fucomp
shl
ret
fcmovbe
aam
fcmovu
jmp
mov
out
in
cmc
cmp
xor
fstpt
sar
icebp
sti
fdivr
fildl
fdivr
in
fucomi
rorl
cli
out
out
int
out
dec
in
enter
neg
sti
fadd
xchg
hlt
cmp
cmp
iret
rcr
cmp
ret
fcmovu
hlt
xchg
dec
std
iret
cli
iret
xchg
rcl
ret
cmc
cmp
idiv
int
bnd
aam
loop
test
mov
in
in
int
int3
cmp
repz
in
in
fcmovb
aad
adc
aam
mov
nop
int
shl
in
and
loope
into
into
fucomp
lret
repz
fdivrp
fcomip
neg
aas
ret
xchg
ljmp
loopne
rcl
lret
out
xor
xor
roll
cmp
mov
sub
xchg
jmp
in
xor
stc
jmp
sti
addb
aad
std
fiadds
hlt
loop
vpmaddwd
aad
lock
leave
in
xlat
fdivrs
mul
ret
aas
xlat
mov
mov
xchg
in
in
jecxz
xor
fisubrl
int3
stc
icebp
fcom
sti
add
jmp
loope
xor
out
loopne
test
hlt
lock
xor
xlat
lock
into
fprem1
cmp
cli
loopne
out
test
testb
xchg
aam
loopne
sub
xor
aam
xlat
cld
icebp
in
sti
out
test
icebp
cli
mov
jmp
enter
icebp
jecxz
leave
enter
leave
cld
cli
icebp
xchg
fisttpl
addl
fnstsw
repnz
fidivrl
aaa
hlt
ds
mov
fdivr
jecxz
in
out
stc
call
call
aas
cmc
out
xchg
out
test
xchg
out
icebp
cmp
fcmovne
cmp
fdiv
icebp
leave
in
sti
cmc
std
ljmp
test
rol
call
rcr
lret
shr
ret
xchg
rcl
in
mov
iret
push
xor
ljmp
int3
aaa
cmp
xlat
call
in
mov
cld
test
mov
icebp
ljmp
in
iret
out
fldl2e
jmp
out
cmp
incl
leave
or
test
loopne
cmc
cmp
jmp
cmp
loop
sarl
in
fcmovnu
hlt
ret
clc
out
in
loopne
leave
loop
loop
in
sti
fmul
ss
or
jecxz
lds
xlat
ljmp
in
out
repz
fstp
xor
enter
rolb
ljmp
fst
in
les
lock
xor
ss
rcl
aas
fdiv
rcl
icebp
lock
std
iret
loop
addl
fxch
out
fcomp
addb
enter
rcl
in
int
call
stc
ljmp
cmc
cmp
fdivrs
cld
inc
into
loop
test
out
in
cmc
rcl
lret
aad
sti
ljmp
icebp
shl
clc
clc
jecxz
test
enter
int3
aaa
cld
std
cmp
clc
loopne
fcmovnb
test
jecxz
in
xchg
icebp
in
adc
lret
ret
cmp
xor
fdiv
ret
hlt
jmp
mov
mov
out
out
xchg
into
xchg
ljmp
jmp
int
incl
fsubrp
fadds
xchg
out
xchg
sub
aad
xor
fiadds
in
rcl
test
jecxz
jmp
nop
xor
cmp
ljmp
stc
sti
sar
clc
shl
fdivr
out
mov
cmp
fucom
xchg
xor
shl
lock
std
lret
cmc
ds
shl
xchg
out
in
fstp
xchg
leave
lock
mov
loop
xor
aad
fsubr
int
shr
mov
mov
xor
jmp
into
int
xlat
cmp
jle
add
cmp
filds
sar
ficoms
xor
out
xor
cmp
adc
fcom
aas
int
addb
xor
lock
cli
in
sbb
ret
enter
loope
in
lret
fisttpll
repnz
divb
ljmp
cmp
mov
test
out
xchg
in
xchg
ljmp
cmp
hlt
into
cmp
out
leave
fdivr
int
in
loope
test
out
cmp
ds
xlat
aam
into
mov
idiv
in
fmul
loopne
mov
cmp
clc
call
ret
test
cld
sar
cmc
in
stc
incl
jmp
aad
cmp
call
in
in
test
xlat
jmp
sti
loop
fstp
test
int
cmc
shll
stc
iret
in
ffree
rol
rcr
ds
fisttpl
loopne
filds
xor
fdivr
in
dec
leave
int3
addb
incl
loop
in
icebp
fadd
imul
cmc
in
aad
jmp
cmp
in
in
add
cmp
mov
mov
aam
aaa
loop
ljmp
iret
aas
ds
not
rol
fimuls
xchg
call
das
ror
in
leave
jmp
out
fnstsw
loope
cmp
test
fisttpll
iret
xchg
out
icebp
icebp
icebp
jmp
into
cmp
lret
loopne
sti
fchs
test
xchg
lret
in
loop
repnz
shl
ss
cmp
fst
cmp
jmp
repz
mov
ljmp
ss
xor
sti
cmpb
clc
adc
cli
repz
addl
int
add
sarl
jmp
ss
loopne
aas
fcomip
fildl
mov
xchg
xchg
jmp
jecxz
in
cmp
aaa
fidivrs
shll
loop
repz
out
rcl
ljmp
fisttpll
ret
aad
clc
aad
out
stc
xor
int3
sarl
sarb
out
div
xchg
mov
call
out
in
into
repz
in
imul
out
xchg
jecxz
sti
jecxz
stc
xchg
loopne
xchg
in
in
repz
lock
xor
shr
fdivp
sti
lock
rolb
test
popl
mov
xor
hlt
roll
aad
cmc
out
fdivrp
iret
popl
aam
sar
enter
cli
adc
rcr
jmp
cmp
out
repz
lock
out
xor
cmp
cmc
cmp
ffreep
aas
sbb
test
in
int
ljmp
fdivs
out
cmp
fxtract
aas
cmp
roll
jmp
fldz
lret
out
jmp
loope
shl
aaa
shlb
repnz
cli
rolb
std
neg
fdecstp
filds
shll
xor
lret
not
aad
rol
fsubp
mov
ret
jmp
lock
in
xor
inc
into
loop
hlt
hlt
out
shl
fld
fcmovu
out
xchg
roll
in
fcom
into
call
into
rol
aam
mul
mov
vpsubusw
fsubr
popl
mov
xor
hlt
xor
in
fmulp
call
fcom
ret
cld
call
std
out
hlt
xchg
test
sarl
sarb
leave
shl
int
fsub
repnz
sar
out
out
addb
lret
xor
aam
fidivrl
ljmp
test
test
cmp
call
in
nop
mov
shl
cmc
repnz
cmp
sti
cmpb
cmc
xchg
in
std
jecxz
mov
ljmp
aas
lret
fcmovu
xchg
in
jecxz
leave
fldz
mov
mov
int3
nop
adcb
icebp
int3
icebp
repnz
leave
fprem
rcl
into
sar
addl
ljmp
iret
into
in
not
xlat
cmp
cmp
aas
ret
loopne
out
mov
out
mov
nop
hlt
int3
mov
enter
jmp
and
aas
sarb
shl
mov
in
fnsetpm(287
xchg
fstl
lret
aaa
cmp
ror
hlt
ret
stc
ljmp
fsubrp
into
in
das
int3
ss
fldln2
repz
fcmovnb
out
out
test
leave
loope
lock
mov
in
cmc
div
out
fcmove
in
add
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
leave
cmp
cmp
test
cmp
std
out
test
mov
xchg
ljmp
clc
in
out
cmp
cmp
add
jmp
cli
in
test
aaa
fdivrs
loop
stc
repnz
iret
aaa
out
std
ds
out
push
fucomi
into
in
sti
frndint
mov
xor
ss
push
repnz
add
repz
xlat
loopne
xchg
out
in
hlt
xor
not
repnz
fcmovne
cmp
ret
ret
mov
fcmovnb
sti
fiaddl
aaa
cs
call
int
jmp
ret
cli
xor
cmp
loope
test
test
int3
aaa
xor
icebp
xor
repnz
repz
ffreep
out
out
sar
fisttps
mov
aam
fnstenv
cld
ljmp
cmc
out
test
clc
incb
test
xor
ss
sti
lret
cmp
clc
loopne
loopne
loope
mov
xlat
mov
fincstp
leave
lret
mov
jmp
in
shl
cmc
stc
shr
ffreep
ds
cli
movl
int
fadd
cmp
jmp
div
incl
cmp
xlat
mov
mov
fcomip
adcb
icebp
ss
rcr
testb
int3
fdivp
sti
test
call
loop
xor
cmp
icebp
fldln2
roll
out
enter
mov
out
xor
aam
lret
jmp
shl
jecxz
ds
in
clc
int
shl
in
lock
in
aad
cmp
cmp
fldl
in
in
lret
xchg
loop
mov
ret
jmp
hlt
in
leave
xor
hlt
iret
in
enter
mov
call
in
out
loope
xor
dec
icebp
enter
clc
cmp
rol
and
ret
in
out
ljmp
jmp
xor
fdiv
loop
ds
fld
leave
fdivr
addb
lea
xor
clc
lock
cli
rcl
shl
hlt
jmp
mov
adcb
nop
out
fcom
jmp
stc
icebp
in
ret
cmp
in
mov
out
xchg
call
xlat
call
clc
int3
in
fdivr
ret
lds
cmp
xchg
xor
aas
test
idiv
lret
cmc
out
rolb
out
loopne
mov
int3
icebp
mov
das
iret
xor
cmc
out
icebp
call
clc
fadds
lret
int3
xlat
jmp
xchg
shll
cmp
neg
in
cmp
ror
xchg
mov
cld
mov
fmul
cld
icebp
test
out
xor
clc
fcom
loope
out
les
lds
xor
ror
in
fcmove
fcmovnb
cmp
sarl
and
leave
into
fimuls
out
loope
cmc
cmp
ljmp
test
or
cld
vprotd
out
divl
in
test
clc
sti
sar
rol
cli
jmp
jecxz
xchg
icebp
and
out
rol
idivl
in
aad
aas
cli
test
sti
icebp
fisttpl
call
lock
int3
in
cmp
in
fcmovnbe
fdivrl
mov
lret
xlat
std
mov
ljmp
ljmp
icebp
ret
repnz
enter
out
mov
test
xchg
xchg
out
repnz
jmp
cmc
cmp
xor
repz
or
imul
loop
xchg
jmp
xor
repz
sar
loope
icebp
fucomp
div
ljmp
adc
aad
aad
cmp
int3
adc
adc
lock
sbb
fldl
sub
sub
cmp
ror
hlt
repz
sarb
repnz
in
fisttpl
in
out
ficoms
not
aam
sti
repz
iret
hlt
int
cmp
loope
add
out
leave
loopne
loope
inc
hlt
lret
test
fdivp
jmp
div
xchg
cmc
vpavgb
fucomp
fildl
call
xlat
test
cmp
div
aas
test
test
mov
xchg
test
out
fisttps
xor
sti
fcom
ds
cmc
std
loope
loop
in
test
enter
call
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
in
cld
cmp
jle
add
xchg
fdivs
int3
hlt
cmpb
and
std
aam
in
stc
loopne
fpatan
lock
repnz
clc
out
into
icebp
lret
clc
aas
div
in
clc
jmp
fmul
test
faddl
int
xor
cs
cmp
fidivrs
sti
repz
mov
rol
ret
int
mov
loope
fadd
ret
out
ss
in
cmp
cmp
clc
call
jecxz
lret
mov
mov
out
mov
fsubrs
ret
iret
aas
into
std
loope
ret
rorl
mov
loope
int
int
rol
test
sar
std
cmp
dec
cli
std
fadds
in
rol
stc
cli
jmp
int3
icebp
fldl
in
std
jecxz
xlat
out
nop
rolb
aad
cmp
xor
cli
fcmovne
sbb
mov
stc
xlat
std
jmp
in
out
loopne
xor
out
iret
icebp
int
stc
aas
iret
call
idiv
fcmovbe
enter
lret
mov
loop
sub
aam
out
xor
aam
lock
int3
xchg
test
fiaddl
xlat
out
jmp
xor
xor
icebp
cmp
int3
lret
clc
aad
out
cli
aad
enter
call
nop
out
icebp
repnz
cmp
lret
cmp
lret
lock
repnz
fdivp
call
jmp
test
xor
cli
repz
rcl
out
incl
loopne
fmul
fucomi
cld
int3
int3
std
mov
xor
lret
cmp
lret
cmp
aam
in
test
out
cmc
xor
xor
cmp
cld
cli
stc
out
loopne
in
jmp
in
in
int3
call
call
lret
clc
cmp
shr
cmp
ret
enter
ret
int3
jecxz
out
repnz
shl
mov
loopne
hlt
cld
call
lret
adc
xlat
enter
cmc
stc
into
lock
xchg
xchg
cmc
ss
fnstcw
repz
out
in
aad
cld
int3
out
rol
ret
filds
in
test
in
call
cmp
fnstcw
icebp
repnz
out
inc
cli
mov
stc
leave
ljmp
aad
aaa
repz
shl
cld
add
repz
imul
call
fcos
sar
int3
clc
ret
aam
loopne
in
mov
leave
mov
divb
cmp
ss
cmp
fcmove
xlat
cmp
aas
test
into
enter
jmp
rcl
in
lret
repz
cld
in
xlat
clc
xlat
jmp
jmp
mov
xor
cmp
ss
jmp
cmp
hlt
hlt
lock
movl
out
xor
iret
jmp
into
shr
out
sarb
fld
bnd
sar
enter
nop
mov
out
divl
lock
fmul
lock
cli
test
faddl
in
jmp
loopne
sti
int3
enter
ds
fcmovnbe
ret
loopne
xchg
roll
in
sub
mul
enter
hlt
stc
loope
xlat
cmp
into
ljmp
out
xor
aas
aaa
cmp
int3
fsubp
in
test
repz
cli
sti
std
fiadds
out
aas
repz
in
das
shr
lret
lock
fsubrp
cmp
cli
fpatan
out
jmp
test
rcr
int3
lds
aad
in
fdivr
fdivr
loopne
aad
in
mov
ror
jmp
in
enter
out
cmp
int3
fcmovnu
int3
fadd
test
fcomip
loopne
stc
clc
in
nop
ret
mov
in
repnz
loop
shl
out
jmp
xlat
neg
icebp
fsub
fcom
sti
ljmp
test
mov
out
call
cmp
out
mov
stc
mov
loop
mov
mov
ljmp
fcmovnbe
out
int3
fdivrl
ds
fcmovnbe
xchg
in
fsubr
out
not
ljmp
lock
cld
ss
rcl
mov
loop
lea
repnz
in
out
aad
loopne
in
out
xchg
in
jmp
std
ljmp
leave
jecxz
aad
ds
ss
cmp
iret
loope
filds
mov
ljmp
xor
jecxz
cld
int3
xlat
xlat
iret
xlat
cmp
loope
loop
test
out
movb
push
mov
push
jmp
ret
rcl
aam
ret
sarl
pop
add
sarb
add
add
ljmp
mov
out
jmp
enter
out
ss
repz
push
into
out
cmp
in
leave
ret
fucomp
and
jmp
call
call
clc
stc
fsub
loopne
in
cli
repz
mov
neg
fmulp
fmulp
jecxz
loope
shr
int3
repz
fcom
cmp
test
cmp
jmp
sti
mov
mov
dec
mov
int
cmp
incl
sti
std
aam
xor
xlat
xlat
sti
jecxz
int
into
loopne
aas
aaa
lds
xor
clc
cli
repnz
and
hlt
cli
repz
in
sub
loopne
std
icebp
loope
call
fcmovnbe
int3
cmp
test
sti
mov
ret
leave
loop
xchg
jmp
mov
loop
rcl
jecxz
lock
lret
cld
ljmp
ret
mov
xchg
div
jmp
repz
aaa
lock
xlat
jecxz
enter
sti
filds
ret
lock
xor
ds
repz
and
repz
xlat
in
jmp
in
not
out
ret
in
ljmp
clc
test
rorl
mov
in
int3
in
in
xor
ss
int3
xor
aas
jecxz
lock
hlt
clc
lret
leave
mov
xchg
xchg
shr
ss
aam
out
div
fdivrp
int3
into
fsubrp
cmp
incl
fcmovnb
ljmp
test
sarl
aam
jmp
fsubp
hlt
out
in
xchg
in
into
incl
adcb
cmp
ljmp
test
repz
jmp
shl
jecxz
rcr
neg
cld
aad
shl
fdiv
and
call
mov
xchg
rclb
cmp
imul
aaa
aaa
rolb
incb
fcmovu
stc
out
jecxz
loopne
xor
lret
ror
xor
into
adc
out
rolb
lret
flds
mov
enter
rcl
xlat
int3
cmp
into
clc
ret
neg
std
ffree
out
loopne
into
mov
out
lea
jmp
ss
clc
in
sbb
shl
shr
mov
stc
loop
stc
lret
xchg
mov
call
shl
add
adc
aas
lds
mov
loope
xor
fcmovnu
ds
neg
out
in
lock
testb
add
stc
test
call
xlat
iret
lock
cmp
fistpll
rcl
call
out
movl
loope
in
aam
sti
out
cli
cld
idivb
leave
repnz
test
aam
aad
ret
leave
enter
fcmovu
stc
ds
hlt
clc
sar
xchg
in
int
jmp
xchg
sti
icebp
mov
ret
enter
std
cmpb
lock
std
aam
xor
ret
jmp
sub
xchg
aad
int
aaa
clc
fdivrl
lret
cld
aam
loope
aam
sar
leave
ds
in
int
leave
mov
out
jmp
sub
cmp
aaa
hlt
cmp
roll
test
fcmovnu
loope
loopne
icebp
int
icebp
int
xor
lret
sti
lret
cmp
idivl
xchg
cmc
hlt
xlat
lret
nop
mov
test
cmp
int3
iret
cmp
add
xlat
std
stc
or
ficoms
xor
cmc
sti
dec
sti
iret
shr
iret
ds
aad
ret
xchg
fcmovnbe
in
lea
shl
jmp
cmp
aad
neg
loopne
mul
fcomip
cmp
lret
lock
rolb
in
fucomi
ror
aas
ror
int3
sub
in
cli
mov
cld
cld
out
sti
mov
divb
aam
jmp
sarl
out
out
and
fildl
rorb
in
sub
lret
into
fdivrs
xor
sti
rcl
std
fcompp
flds
jmp
lret
xchg
loopne
iret
xor
int
iret
out
fnstcw
int
aas
loope
repz
std
hlt
in
incl
call
shl
repnz
ror
loopne
shl
loop
cli
ds
fcomp
sbb
rol
jmp
dec
in
out
jmp
cmp
xor
fcom
stc
out
rcr
cld
std
in
jecxz
out
call
out
into
call
out
xlat
aad
fdivrp
sti
rcr
not
testb
fisttps
stc
ss
aad
cmc
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
jge
int
sub
add
add
fldl2e
iret
int
fiaddl
hlt
fcmovu
cld
std
xor
cld
xchg
xor
leave
sti
xor
das
sarl
cmp
not
and
xchg
stc
in
in
clc
xchg
xchg
out
xchg
loopne
fcmove
cmp
shll
aad
aam
ds
sar
call
fcomip
in
fucomip
jecxz
repnz
fnstcw
xor
fldz
ljmp
jecxz
out
fldz
icebp
out
test
enter
int
ljmp
call
mov
lret
mov
out
in
repnz
out
out
iret
stc
fcmovnbe
test
loopne
stc
call
shl
jecxz
fisttps
out
out
rcr
int3
aaa
out
repnz
fiaddl
ret
cld
mov
jecxz
enter
xchg
loopne
imul
aad
ror
repz
shl
loope
shl
std
xlat
leave
int3
int
sti
sti
lret
mov
icebp
xor
aam
call
fcmovne
std
test
sti
rcr
fildl
lret
in
shl
cmc
xlat
into
lock
enter
int
loop
cmp
ffreep
lret
incb
into
xchg
out
sub
enter
aad
hlt
int
cmp
cmc
in
in
lret
out
shl
loope
shl
aam
ds
icebp
cmp
and
stc
std
addl
cs
divl
cmp
cli
fadd
rorb
popl
rol
mov
xor
repz
loopne
test
testb
in
lock
enter
div
icebp
cmp
shl
int
frstpm(287
aam
cmc
mov
test
loopne
in
loop
mov
enter
sarl
lock
hlt
sbb
aad
jmp
test
out
xor
aad
lock
jmp
aam
icebp
in
adc
out
loopne
in
sti
test
fiadds
lock
cmp
cmp
into
repnz
jmp
loopne
mov
ljmp
xchg
aam
out
lock
shl
ljmp
cmp
shl
mov
in
in
orb
div
sub
xor
repz
fidivrs
lds
out
int
addl
idivb
ljmp
shl
fcom
rcl
clc
mov
loope
repnz
shl
neg
sti
cld
cmp
icebp
fneni(8087
rcl
sti
rol
jecxz
rorl
sti
xchg
out
jmp
int3
hlt
clc
out
cmp
lret
into
xlat
cmp
idivl
xlat
loop
out
aad
jmp
jecxz
jmp
hlt
xor
lret
xlat
hlt
fcmovnbe
loopne,pt
out
sti
call
fcomi
rolb
xchg
into
out
in
xor
ljmp
stc
aas
cmp
fsub
jecxz
loope
fmul
mov
cld
shr
xchg
jmp
xlat
rcl
repz
rcr
add
out
fiaddl
mov
loope
lock
out
lock
into
ss
out
shl
hlt
xlat
ljmp
adcl
sti
stc
ss
cmc
cmc
mov
mov
call
shlb
fdivrl
sbb
ss
rcr
orb
lret
fimull
cmp
int3
repnz
dec
fxch
cmp
aas
std
rolb
mov
repnz
lock
aam
clc
fdivp
cmp
lock
cmc
repnz
test
loop
in
ret
xchg
call
cs
aam
in
cmp
fiaddl
loopne
int3
loope
mov
fcoml
iret
lock
stc
out
clc
repnz
cmp
xchg
testb
shl
in
into
xor
das
in
fst
shl
fnstsw
cmp
shr
rolb
call
out
mov
jmp
repz
cmc
hlt
out
std
addb
imul
cmc
fstp
fsubp
xchg
int
xor
xor
shr
out
rcr
std
repnz
test
mov
fsubp
lock
nop
xchg
int
jmp
fsub
ss
aaa
shll
shl
cli
ffree
xchg
loop
xchg
mov
repnz
int3
idivl
sti
rol
sar
shl
xor
icebp
fcomi
iret
clc
sar
mov
fmull
rclb
cmp
in
shlb
cmp
into
fdivp
ds
aad
out
loope
test
mov
mov
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
movsl
inc
and
add
add
xor
jmp
ljmp
test
cmc
out
iret
decl
in
f2xm1
mov
in
cmp
shr
cmp
loop
cmp
loope
adc
xor
mov
leave
out
mov
shl
out
out
sti
icebp
xlat
fptan
fdivrp
fsub
aad
frndint
jmp
mov
mov
xchg
xchg
das
int3
fcmove
xlat
shl
xor
xlat
add
cli
sti
clc
out
mov
fucomi
std
test
into
icebp
adcl
cmp
aaa
stc
fidivrl
clc
incl
inc
cmp
jmp
in
std
call
shlb
cmp
lret
in
fstpt
xlat
adc
loop
stc
int
mov
loop
in
in
xchg
call
in
shl
lock
cmc
out
ret
sti
hlt
rorl
mov
test
iret
nop
bnd
jmp
rcr
ss
sti
fcmovu
in
in
in
sti
loop
loopne
mov
lret
rcr
enter
lock
xor
mov
test
in
ljmp
in
out
out
enter
lock
loopne
loopne
mov
out
sub
xor
fmul
ror
jmp
into
cmp
fadd
mov
out
fmull
loope
icebp
in
divb
cmp
int
cld
ss
loopne
incl
testb
out
sti
int
xchg
ss
repnz
cmp
int3
fld
hlt
out
test
cld
incb
out
ljmp
cmc
jmp
fxam
in
sti
fdivrp
test
fisttpll
xor
lret
rcl
ds
in
fsub
test
rolb
cmc
divb
div
icebp
hlt
leave
leave
icebp
div
lret
fcomi
loop
fsubp
cmc
fcomp
int
fdivp
sti
and
shl
leave
cmp
in
idivl
std
sub
cli
std
loopne
jecxz
mov
xchg
leave
in
not
into
out
ss
fprem
clc
aam
ret
loope
repnz
ret
in
clc
addl
das
fmul
lock
std
sbb
fsubr
mov
rcl
lock
int
out
fcomi
aad
call
std
jmp
iret
in
icebp
in
xchg
cmc
in
in
lock
lds
mul
lret
not
loopne
xor
int
cmp
testl
aad
in
cmp
xor
xor
fincstp
repnz
add
ljmp
enter
in
out
dec
xlat
int
aad
cmp
enter
out
xchg
fisttpl
xor
lret
call
cmp
lret
int3
neg
cmp
loopne
or
ret
repnz
shl
lret
aaa
cmc
xlat
in
call
cli
loop
incb
jmp
shl
mov
jmp
not
cmp
fdiv
fdivrp
cld
lret
rol
idivb
ljmp
stc
nop
cld
lret
iret
loopne
bnd
cld
hlt
cmc
fndisi(8087
fimull
mov
iret
mov
loopne
into
jmp
repz
std
shr
cmp
ds
out
lret
lret
mov
and
loop
sti
jmp
cmp
fsubr
flds
std
cli
out
xchg
mov
xchg
lea
aad
cmp
jmp
fsubr
cli
lret
into
lock
aas
xchg
mov
xchg
out
test
lret
in
ss
cli
sti
sti
out
or
cmc
incb
clc
fisttps
cmc
mov
fsubr
repz
cmp
xor
div
cld
ret
mov
int3
call
into
test
out
fsub
iret
repnz
cli
lock
in
loopne
leave
jecxz
test
sbb
loopne
call
lret
ret
repnz
int
int
repz
rcl
ret
stc
lea
ljmp
into
cli
sar
sti
xor
xor
test
ret
or
decl
xor
ror
xor
ds
lock
int
out
inc
cmp
cld
ljmp
sub
int
div
lret
aad
f2xm1
hlt
fucomp
ds
rolb
out
mov
out
jecxz
int3
jmp
rcl
xor
rcl
xor
jmp
vmovntdq
xor
orl
xchg
xor
out
cmc
aad
repz
mov
xor
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
jg
jge
push
int3
add
add
fdivr
test
fndisi(8087
in
out
div
hlt
in
cmp
stc
shl
hlt
in
repnz
test
ljmp
mov
xor
iret
jmp
in
test
mov
rcr
ret
jmp
out
repz
imul
hlt
lret
das
lret
fsub
repnz
shr
cli
fcmovb
stc
cld
fmulp
sti
lret
jecxz
ljmp
cmp
cmp
xor
in
into
cld
cmp
enter
test
loope
out
mov
lret
lock
int3
idiv
lret
repnz
shl
roll
in
mov
fiadds
ror
enter
aaa
jmp
rcr
aas
shl
loopne
rcr
in
call
in
xchg
out
out
out
idiv
lds
out
inc
jecxz
adc
inc
lea
xchg
xchg
out
fcmovnb
aad
cmp
cld
cmp
cmp
repnz
mov
mov
cld
clc
fdivr
mov
loopne
lret
leave
enter
repz
jecxz
cli
roll
call
sbb
loope
loopne
sub
cmc
int3
aaa
enter
lock
iret
aas
std
xlat
and
int3
xchg
in
call
into
repnz
aad
idivb
mov
mov
xlat
into
decl
ret
repz
ret
cmp
leave
fistpll
xlat
fnclex
into
fld
jmp
in
cld
lock
rcr
jmp
ftst
in
xor
test
call
addl
cld
mov
jmp
xchg
not
clc
sarl
fnstenv
cmp
stc
faddl
shl
les
iret
divl
jecxz
aam
aad
lock
out
into
in
fsubp
sti
ljmp
nop
out
dec
mov
xor
ret
enter
fmulp
cmp
shl
call
in
sbb
lock
iret
lret
call
hlt
rcl
ffree
leave
fcmovnu
std
xchg
fsubrp
mov
jmp
out
in
in
in
int3
out
in
xlat
std
dec
cld
lock
jmp
into
lret
xchg
in
in
jmp
jmp
xlat
in
repz
fucomip
in
xchg
inc
imul
ljmp
lret
xchg
mov
repnz
cmc
imul
ss
int3
hlt
loopne
fcom
inc
mov
in
inc
clc
ficoml
xchg
shlb
in
xlat
jecxz
cmp
out
cmpl
shl
stc
std
fldl
ror
mov
jmp
fidivrl
int3
shr
aam
inc
cmp
mov
loop
mov
in
xchg
repz
out
shll
stc
aam
shl
aad
rcl
mov
in
fdivrp
addb
xor
shlb
cmp
hlt
out
cmp
xchg
ret
les
lock
icebp
mov
out
xor
clc
jmp
cmp
cmp
loopne
hlt
fxam
cld
in
incb
jmp
out
jmp
in
iret
inc
aam
out
add
orl
jmp
shr
repz
testl
fisttps
xor
loop
into
xor
cld
aad
fdivr
loop
cmp
aad
std
testb
out
fsubp
rcl
shr
sar
fsubrp
lock
loope
loope
test
shl
jmp
into
std
mov
iret
icebp
iret
out
sub
xor
cmc
jmp
iret
leave
cld
aad
ret
fnop
cld
rol
lret
leave
clc
cld
sti
test
test
lock
lds
int
clc
ret
cld
shl
test
orl
mov
out
repnz
int
aaa
icebp
lock
fdiv
repnz
addb
out
sti
out
in
and
lret
cli
xor
lret
cmp
out
loopne
loope
flds
and
out
hlt
ret
jmp
hlt
jmp
stc
aad
aaa
xlat
addb
jmp
sar
mov
aam
cli
std
mul
rcr
rol
cmp
loopne
dec
jmp
int
in
mov
cmc
mov
in
in
out
loope,pt
test
enter
loope
hlt
fsub
in
in
into
enter
cmc
into
cmp
jmp
in
sti
out
jecxz
cmc
lret
xchg
mov
mov
out
ljmp
in
rcl
cmp
jecxz
iret
lock
testl
repnz
int
in
sti
in
rcl
xor
sarl
pop
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
movb
stos
roll
jle
add
cmp
xchg
rol
std
sbb
xchg
sub
loop
sti
cmc
xor
xor
cmp
aas
aad
mov
leave
dec
std
test
fsub
repz
cmc
mov
icebp
aad
in
rcl
aad
aam
jmp
rcl
out
idivb
movb
enter
icebp
in
shr
fld
out
clc
sar
in
loop
fcmove
adc
loope
in
fadd
cli
ljmp
shl
clc
cld
enter
rcr
call
out
out
std
mov
xchg
out
xlat
xor
leave
out
out
aas
cmp
iret
add
jmp
rcr
int
loopne
shll
in
xor
hlt
cmp
aas
int3
ror
repnz
stc
mov
ror
jmp
iret
iret
in
repz
sub
shl
in
f2xm1
lret
sarl
icebp
repnz
loope
ljmp
aam
enter
xlat
ljmp
in
roll
mov
jecxz
icebp
xchg
aad
loopne
icebp
fcomp
icebp
out
cmp
repnz
ds
not
fdiv
lret
lds
rorl
xor
cmp
sbb
xchg
mov
testl
jmp
cmp
into
fucomp
aad
fdivrs
jmp
loop
cld
call
xchg
xchg
ret
xor
lds
out
lret
repz
fcmovbe
std
cmp
repnz
out
hlt
test
fucomi
in
icebp
hlt
out
ljmp
cld
xor
cmc
sti
aad
loope
out
cmc
aas
call
out
in
jecxz
jecxz
idivb
fsubr
xor
cli
ror
xor
into
xor
lret
testb
loope
das
das
xlat
cmc
stc
ss
rcl
hlt
stc
ret
aam
mov
hlt
enter
fimull
sub
xor
out
ss
int
in
fcom
xor
neg
jecxz
int3
int3
out
into
jmp
stc
lret
lds
loopne
xor
xlat
clc
fld
loopne
loope
sub
out
fcmovnbe
lret
enter
ret
in
stc
xlat
rcr
fld
lock
cmpl
fcmovu
jmp
in
sti
iret
test
sub
in
int3
fsubr
icebp
sarl
ret
sar
clc
xlat
jecxz
decb
fcmovne
lret
out
stc
in
cmc
fdivp
repz
push
int
std
test
enter
call
loopne
orl
lock
repz
int
lock
xlat
ret
fcmovb
jmp
cld
jmp
aad
loop
hlt
aad
out
cmp
loope
in
in
mov
lret
xlat
out
fdiv
call
shll
rcl
lret
cmc
clc
rcr
ret
addl
out
in
int3
out
mov
into
nop
aam
icebp
das
xor
xor
sarb
loope
addb
mov
cld
in
cld
jmp
into
fcom
xor
fxtract
ret
hlt
lock
xchg
mov
in
enter
in
clc
call
cmp
aas
adc
fdiv
out
test
test
stc
xchg
ljmp
ret
xor
cmp
shl
cli
fcomip
test
inc
sbb
enter
xchg
jecxz
mov
ret
cmc
repz
leave
cmp
stc
in
fcmovnbe
aad
not
jmp
cli
ljmp
xor
cmp
jmp
ds
cmp
ret
test
div
inc
movl
icebp
out
repnz
sarb
int
rolb
enter
cli
mov
enter
jmp
enter
ffree
cmp
repz
mov
loop
fmulp
fiadds
aam
int
enter
out
aaa
shr
cmp
ret
xchg
fldl
aad
ret
repnz
sti
in
cmc
ds
ljmp
sbb
out
stc
test
in
lock
orb
aam
ds
aad
clc
out
cmp
hlt
ret
xchg
imul
mov
test
repz
test
xor
out
jmp
ds
test
idiv
repz
testb
lret
cmc
fmul
cmp
rol
adc
cld
lret
mov
in
into
mov
test
jmp
test
cmc
sbb
sbb
xchg
lret
in
in
sti
nop
xchg
in
fst
into
fdiv
cmp
in
cmp
xor
xlat
hlt
std
cmp
test
cmp
stc
in
fmulp
sti
fcomip
jmp
xor
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
add
stos
add
enter
sti
fdivrl
aaa
stc
jmp
iret
std
repz
fsubr
loopne
out
into
int3
test
aad
xlat
fucomp
fsub
lock
jecxz
mov
addb
sar
into
call
repz
call
jmp
repnz
xchg
mov
fsubrp
or
cld
div
repz
out
xlat
aaa
aad
cmp
hlt
sti
fucomi
fiadds
mov
sbb
xor
shr
out
fnstsw
jmp
std
incl
jmp
jecxz
sti
xchg
mov
out
hlt
fxch
call
shl
fsubr
fdivp
xchg
faddp
hlt
mov
leave
in
enter
fsubr
or
sar
hlt
stc
xor
jmp
cld
aam
std
call
jecxz
cli
clc
filds
and
cmc
out
in
cmp
shl
int
cmp
iret
hlt
cmp
clc
fdivr
roll
out
out
cli
out
int3
div
shll
xor
fdiv
into
iret
jecxz
out
repz
sub
nop
iret
in
jecxz
out
in
sarl
call
aas
cmp
sti
out
rcl
call
mov
test
fiaddl
xchg
out
fcmovnbe
xor
cmp
sti
in
aas
lock
sbb
filds
decb
xor
out
aad
ror
icebp
cli
cmp
fcmovnbe
testl
in
aas
leave
not
aad
out
aaa
sub
aad
loop
rolb
fcmovbe
std
loopne
test
test
int
enter
cmp
or
vshufps
cmp
xchg
enter
rolb
ss
cmc
fidivrl
test
neg
ret
or
cli
loop
mov
incb
xlat
sar
out
loopne
call
fdivr
fcom
mov
iret
in
ljmp
ss
fdivrs
out
lock
out
shl
xchg
loopne
ror
sbb
fdivrp
fcmovne
cld
int
out
int3
clc
cmc
lret
call
rcl
fiadds
test
aas
into
xchg
out
xchg
rol
hlt
aad
ss
ret
fst
loopne
in
ret
mov
subl
cs
fcmove
lock
rol
rcr
enter
mov
in
mov
shl
ljmp
cs
repz
xor
aas
xor
fsubrp
lock
lock
jmp
neg
loop
fdiv
out
lret
cmp
std
in
out
fcmovbe
xlat
leave
cmp
clc
in
adcb
shl
cmp
out
std
int3
ds
in
hlt
sarb
mov
hlt
filds
out
xchg
imull
xor
sar
iret
sti
inc
cmp
loop
rol
aad
std
stc
mov
xchg
call
fld
mul
repnz
fxch
in
out
fucomp
out
or
xchg
mov
nop
lock
xchg
aaa
out
xor
in
sti
cmpl
xlat
test
in
inc
icebp
iret
cmc
loop
cmp
ror
sti
ror
clc
stc
neg
lock
loope
loope
aad
fsubr
loope
fists
into
in
ss
cmp
imul
lret
xlat
lret
rol
shl
adc
stc
in
xchg
xchg
das
cmp
sti
cmp
sar
out
push
ret
icebp
loope
fadd
ffreep
cli
mov
xchg
fucomp
xor
jmp
clc
aad
ljmp
out
leave
jecxz
clc
fcomp
sti
fstp
or
cmp
int3
aad
shl
loopne
aad
hlt
in
fldl
fmul
loop
fdiv
repnz
xchg
cmp
sti
fcmove
testb
test
int
sbb
mov
test
out
lock
ljmp
aas
xlat
fucom
xrelease
sti
loop
fildl
shrb
jecxz
cli
shll
std
fmul
aas
rcl
ret
testb
in
les
ror
repnz
aam
std
int3
fcmove
xlat
aad
sar
aad
sti
fildl
mov
test
mov
lret
aam
cmp
out
jmp
sti
fadd
jmp
xor
in
leave
aam
in
in
iret
fdivrl
out
hlt
cmp
out
cld
ret
in
jmp
std
mov
out
aaa
test
lock
iret
stc
sub
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
pop
imul
add
out
cld
aam
fsubr
mov
iret
xchg
lock
shll
fcom
jmp
ds
lock
test
add
cmc
mov
loopne
decb
sub
xchg
in
hlt
loop
int
ds
fsub
not
clc
aas
out
aad
enter
rcr
nop
ljmp
xor
jmp
out
lret
sti
sti
out
fcom
cmp
ffree
loope
sti
mov
call
xchg
sub
xor
aas
in
cmp
test
cmp
jmp
fxch
sub
icebp
iret
aaa
ret
imulb
rcr
cmp
std
sarl
idivl
sti
ffreep
cmp
orl
xlat
ss
aas
push
faddp
repz
lret
int3
lds
mov
ss
cmp
sti
lret
fmulp
rolb
loope
in
loope
incl
out
stc
hlt
fldt
int
jecxz
shl
add
test
mov
hlt
lret
cli
repz
loopne
ror
testl
xlat
imul
loope
lret
cmp
xlat
in
enter
into
jmp
jecxz
or
xchg
mov
lret
lock
xor
icebp
fcmovu
out
fcom
std
or
inc
addl
cld
xor
fdivp
in
out
test
fistpll
cmp
repz
idiv
mov
jmp
loopne
in
dec
icebp
call
iret
cmc
xlat
fcomip
cld
idiv
lock
cld
cli
addl
ror
ss
cmc
cld
in
clc
out
out
add
hlt
lret
ljmp
jmp
fcmovbe
jmp
call
aas
out
rcr
out
jmp
iret
in
call
fsub
xor
shl
clc
leave
int
or
f2xm1
enter
shl
roll
stc
lock
lret
cmp
in
out
ds
aam
sar
cli
cli
icebp
test
repz
call
cmp
lret
loop
aas
fcmovnu
lret
idiv
out
lret
xacquire
fcomp
out
rcr
icebp
aad
fstpt
hlt
fcmovnbe
rcr
xchg
std
jmp
mov
aad
sub
aaa
xor
jmp
jecxz
out
in
roll
in
out
enter
cld
test
mov
test
cmp
cmp
sbb
fadds
fldl
lret
in
jmp
in
hlt
cmp
std
cmp
test
repnz
aam
aam
stc
cli
filds
and
aam
ljmp
fcomp
loop
cmp
ffree
out
call
loop
lret
loop
jecxz
in
ret
cmp
icebp
iret
int
ljmp
xlat
stc
out
enter
loopne
shr
jmp
ss
cmp
fnsave
jmp
test
fcomi
mov
jmp
test
out
ss
repnz
iret
cmp
loop
cmp
rol
ret
in
loope
ljmp
int3
fadd
xor
xor
icebp
out
repnz
clc
loop
cld
ror
loope
adc
jecxz
rcl
lea
aaa
ret
enter
int3
jmp
repnz
ffreep
fstp
repz
xchg
cld
stc
out
shl
xchg
ss
aaa
int
lret
fnstsw
cld
cld
xlat
shr
in
stc
std
out
adcl
out
in
aad
out
enter
lock
lret
out
loope
loop
in
nop
int
lret
shl
divb
cmc
imul
ds
cld
xor
xchg
lock
lret
xchg
iret
out
ljmp
cmp
into
fadds
call
jecxz
mov
in
test
movb
in
out
lock
xlat
cld
aam
sarl
cmp
fdivrl
out
sbb
ret
out
repnz
out
cmc
hlt
fdivr
cli
ljmp
sti
repz
ret
iret
shl
xor
ret
test
out
sarl
jmp
cmc
sar
sti
cmc
cmp
roll
loop
ljmp
xchg
out
xor
repz
hlt
rol
icebp
into
icebp
stc
rcr
fadd
ljmp
xor
int3
out
mov
in
loope
cld
cld
cli
out
hlt
ffreep
repnz
jecxz
leave
repz
fxch
jmp
loop
movl
sub
mov
notl
mov
mov
jmp
lret
ror
rcr
lret
fistl
mov
pop
filds
jle
add
test
into
in
fxam
fst
jmp
ds
cmc
sbb
movl
lret
fcmovnu
int
leave
ss
ret
fldl
std
ret
xchg
in
xor
cld
out
sti
fcmovb
lret
ror
cli
sti
loop
enter
lock
ljmp
out
lock
rcr
out
rolb
lock
rorl
in
mov
mov
int3
enter
call
fldl
test
lret
in
lock
test
hlt
cmp
in
cmc
cmc
cmp
hlt
into
xchg
ds
in
sub
call
sarl
out
xor
icebp
xor
sti
xor
aas
aas
clc
loopne
and
shr
xchg
xchg
int3
hlt
imul
divl
xor
leave
xor
aam
out
cmc
out
fnstsw
in
ljmp
mov
into
popl
leave
xor
cmp
hlt
repnz
ds
call
jmp
lock
nop
mov
repz
int
ror
aas
cmp
test
mov
fucomip
cld
out
fcmovb
fisttpl
ret
ret
cmp
cmp
jmp
and
jecxz
loop
addl
loopne
lret
jecxz
lret
not
ss
out
rcr
cmp
hlt
jmp
shr
loopne
leave
sbb
aam
in
cmc
call
repz
hlt
fst
cmp
jecxz
call
jmp
jecxz
int
in
mov
xchg
in
xlat
ror
fdivr
icebp
ror
loopne
std
cli
addb
test
in
jmp
and
iret
in
sub
sti
fldl2e
fiaddl
ret
incb
iret
xchg
sbb
not
cmp
fdivrl
aaa
into
lock
ds
std
fsub
fcomi
std
fstp
jmp
in
xor
call
std
bnd
adc
fcmovnbe
std
cli
mov
mov
into
loope
testb
cs
xor
or
xchg
clc
sbb
aam
leave
out
int3
cli
cli
in
xlat
hlt
shll
cli
shl
cmp
rcl
lret
loop
in
test
nop
fcomip
repnz
jmp
out
cmc
ljmp
clc
neg
cli
cld
aam
in
in
icebp
aad
cs
cmp
out
ljmp
fxch
aam
test
aad
in
in
dec
aam
xor
cld
into
sarb
clc
int
fnstsw
in
mov
mov
into
xchg
lea
ss
lock
clc
stc
jmp
repz
rorl
leave
and
int
cmc
jecxz
ret
ret
in
out
rcl
jecxz
clc
out
jmp
lret
loope
out
into
fists
stc
ljmp
incl
mov
xchg
sub
test
addl
aaa
stc
fcmovbe
cld
test
cli
cmp
call
ljmp
loop
jmp
rol
in
int
rol
sarl
rol
hlt
stc
rcl
aad
mov
xchg
xchg
mov
shr
xor
fidivrs
icebp
xlat
idiv
testl
iret
loop
rclb
icebp
xlat
shlb
cmp
shl
orb
ficoml
xor
in
fdiv
not
loop
in
roll
loop
aad
loopne
mov
std
xchg
shl
sub
loop
icebp
cmp
neg
jmp
repnz
loopne
aam
out
jmp
hlt
iret
enter
xor
lock
aas
fmul
fcmovu
repz
leave
xchg
out
fimuls
fcomip
aad
repnz
in
fcmovne
and
cmc
clc
sar
lock
rcl
in
fucomip
clc
out
sub
leave
test
out
lret
cli
fcmove
cmp
int
fcmovnb
out
ljmp
in
out
out
into
shll
xlat
cmp
rolb
out
rol
repz
in
in
mov
sbb
call
out
cmp
cmp
fdiv
test
fsubr
into
clc
lret
nop
cld
shl
roll
in
call
fsub
fcomi
cld
cmc
mov
out
stc
test
leave
lock
ljmp
cmp
shr
lds
add
enter
int
fnstenv
xchg
inc
in
in
jle
add
lret
iret
jecxz
cmp
xlat
ret
jmp
iret
and
int
call
icebp
icebp
cmp
int
hlt
clc
cmp
add
stc
sub
in
aam
mov
aam
lret
iret
in
fistpll
fmul
neg
aad
lock
repz
in
mov
xchg
mov
xor
cmp
shlb
cmp
in
add
lret
leave
sub
out
into
lock
xor
sub
rcr
sti
cmp
repz
loop
cmc
mov
xchg
fisttpl
rcl
iret
in
std
int
div
aam
fidivrs
xchg
in
fdivrp
call
and
ret
div
xor
fdivrp
cli
out
rol
cmp
hlt
mov
nop
jecxz
cld
jecxz
mov
xor
jmp
fcmove
test
xchg
cmc
rol
aam
call
out
lret
xor
xor
xlat
xor
in
cld
sarl
hlt
sar
shl
ret
xchg
xchg
mov
call
ss
sti
xor
lret
addb
fsubr
loope
nop
call
fucomip
in
repnz
cmc
cli
out
iret
cmpb
stc
in
or
test
mov
vpor
xor
cli
iret
hlt
shr
fdiv
fildl
add
mov
lret
int3
in
jmp
cmp
xor
iret
add
mov
idiv
std
nop
leave
iret
in
xchg
in
out
xor
aad
cmp
cmp
loop
in
test
lret
in
sub
xor
jecxz
in
fcomp
loopne
xor
hlt
loop
cld
fldlg2
loop
nop
mov
hlt
in
aad
icebp
divb
out
aaa
lock
loop
fistpll
std
sar
test
out
nop
cmc
clc
cmc
into
shlb
aam
xor
in
fcmovne
lock
lock
imul
call
into
fcomip
ret
rcl
ret
xchg
sbb
xchg
shr
xchg
repnz
cli
out
fnstsw
aad
loop
adc
faddp
repz
icebp
in
loope
iret
out
aam
out
adc
sti
repnz
out
ds
lret
mov
ljmp
xor
xlat
xor
out
sbb
xchg
ret
ret
int3
fcmovnu
in
iret
leave
in
loopne
test
call
xor
iret
cmp
jecxz
orl
loopne
out
jmp
xchg
fsubr
fcmove
in
repnz
aas
aam
ds
hlt
cld
popl
test
das
cmc
rcl
in
dec
rcl
iret
in
cmp
bnd
int
stc
jmp
in
out
shl
hlt
fidivl
enter
ds
hlt
fsub
fsub
shl
jmp
sub
int3
jmp
lret
xor
stc
cli
cmc
cmp
in
movb
fcmovb
into
mov
out
out
in
iret
lock
lock
iret
aas
rcr
sbb
xbegin
cli
mov
in
fucomi
in
rol
ret
repnz
cmp
fmul
divl
xchg
jecxz
in
vcmpsd
fimuls
repnz
hlt
ss
icebp
shr
iret
into
sar
icebp
mov
cli
mov
into
lret
xchg
in
neg
enter
xor
add
faddl
cli
in
out
sar
jmp
repz
das
repnz
neg
into
aas
ds
fsubp
jecxz
shl
sti
leave
nop
fmuls
xchg
les
fdivr
hlt
fdiv
repz
jmp
hlt
fstpt
xchg
ljmp
mov
hlt
ljmp
sti
xor
xlat
cmp
into
rcl
in
aam
stc
jmp
lock
not
das
aaa
rol
xlat
xor
xlat
loopne
xlat
add
fisttpl
out
xchg
test
in
in
xor
in
iret
xlat
lret
loope
add
mov
mov
xlat
jmp
xchg
incb
icebp
in
call
cli
shl
lock
cli
aam
out
cli
jmp
ljmp
int3
out
sarl
lock
cmc
cmp
icebp
out
cmp
cmp
sti
loope
mov
fldl2e
int3
icebp
cld
jmp
xlat
ret
das
test
loop
aas
ds
cld
testb
jb
add
cmp
jmp
ret
fmul
fcom
fdiv
jne
pop
adc
add
add
mov
mov
rclb
xlat
ret
cld
ljmp
filds
ljmp
std
xchg
aam
xor
sarl
in
cmc
int3
fcmove
hlt
sar
iret
repnz
rorb
fistl
sub
clc
in
shl
fdivp
in
sbb
cmp
cmp
fildl
fsubp
lret
repnz
call
ror
loopne
fucom
fadd
sti
mov
mov
repz
jmp
ror
iret
jecxz
lock
into
in
aaa
lock
ljmp
mov
call
xlat
clc
lock
xchg
std
out
xor
aaa
aam
xor
repnz
sub
iret
cli
ffree
in
test
mov
int
repnz
adc
jmp
ljmp
sar
loope
fnclex
loopne
in
aad
sti
cld
out
mov
orb
fdivrp
cli
hlt
cmc
fsubrp
hlt
neg
fstp
loopne
leave
xlat
stc
jmp
jmp
aaa
call
out
into
leave
aas
fidivs
cli
or
fisttpl
shl
loope
sub
rcl
cld
aad
fnstcw
out
int3
lock
lock
aam
mov
sub
out
out
in
out
cmp
ljmp
addb
vpmulhw
iret
shll
out
shl
lret
aas
leave
into
xlat
xlat
cld
add
mov
test
loopne
out
push
int3
faddl
xor
icebp
shl
iret
shl
icebp
xchg
mov
lock
fchs
int
xchg
sub
fldln2
repz
in
cmp
ret
fcmovnb
clc
mov
sub
mov
shl
in
out
aam
shl
out
int3
fcom
loope
ret
mov
mov
vphaddubd
in
shr
int3
cmp
leave
adc
jmp
ret
lret
int
out
jmp
mov
mov
in
xor
enter
cmp
cmp
fadds
idiv
in
mov
fmul
ljmp
clc
lret
fsubr
lret
filds
aam
mov
cmpl
cld
cld
jmp
loope
repz
enter
out
fcomip
out
lret
loopne
shl
shl
repnz
in
cld
sub
jmp
test
loope
xlat
repnz
lret
sti
in
loop
test
cmp
cmc
mov
xchg
into
repnz
fnop
fdivrp
repz
aas
hlt
ret
into
fprem
sti
mov
hlt
enter
loop
out
out
shr
divl
xor
shl
hlt
fcmovnb
std
cli
test
jecxz
lret
jmp
lock
out
loope
into
fdiv
icebp
les
in
ljmp
shl
stc
icebp
loop
clc
out
fimull
ret
into
into
xor
hlt
fsub
fucomp
loop
fnstenv
sti
cmc
test
shl
int3
fneni(8087
incl
in
cs
fcomp
cmp
fucomp
aam
fadd
icebp
in
loop
sbb
sti
fisttpl
mov
das
rcl
rol
iret
aaa
cmp
repz
cli
stc
ljmp
hlt
xor
rcl
fcomi
shr
ljmp
cli
rcr
sbb
in
ljmp
shr
call
cmp
cmp
ds
cld
stc
repnz
jmp
leave
int
lea
jecxz
lret
cli
repnz
jecxz
addb
out
fmul
sar
xchg
iret
mov
loopne
out
out
out
idivb
cmp
lret
rcr
sar
rcl
stc
in
aas
fdivr
fscale
nop
aam
out
fldcw
cli
div
sti
fdivr
int3
into
shl
mov
hlt
in
or
xor
in
ss
cmp
xchg
out
dec
jmp
aam
xchg
idivb
icebp
enter
ss
into
rolb
loope
mov
and
sub
lock
repnz
les
cmp
stc
shl
int3
add
cmp
xchg
faddl
lds
call
call
cli
not
loopne
std
cld
clc
xchg
ret
test
xchg
mov
out
out
lret
loop
cmp
fidivrl
int3
stc
mul
loope
lock
aam
loopne
fdivs
cmc
jmp
iret
cmp
loopne,pt
icebp
repz
leave
lret
out
loope
lock
jmp
in
iret
xor
roll
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
leave
lock
cmp
fsubp
add
ds
and
lret
nop
test
mov
mov
lds
hlt
test
xor
int3
clc
repz
leave
cmp
clc
mov
cld
lret
out
cs
loopne
std
loop
std
out
aam
mov
xchg
enter
mov
xor
out
cmp
fidivrs
in
rolb
icebp
loopne
test
loope
jmp
cli
fcoms
jecxz
xor
out
sti
rcr
lret
shl
aas
in
fsub
in
sti
xchg
xchg
jecxz
out
xlat
cld
rcl
aad
xor
roll
sub
mov
mov
cmc
clc
shl
cmp
out
xor
jmp
int
fcmovnb
icebp
repz
call
mov
jecxz
or
jmp
rcr
adc
fadds
out
xchg
mov
cmp
out
std
pushl
std
ljmp
shl
decl
rolb
repnz
jmp
in
cmp
iret
std
ljmp
xlat
mov
push
jecxz
iret
icebp
iret
lret
in
xchg
jecxz
xor
out
out
cmp
enter
cmp
out
in
std
std
lret
fisttps
test
shlb
jmp
repnz
cli
out
jmp
ljmp
jmp
jmp
xor
fcmovbe
cmp
cmp
jecxz
repnz
cld
test
mov
lret
fucomi
fucomi
xchg
enter
repz
repz
out
loop
loope
int
fsubr
mov
imul
out
xlat
loopne
fdivrl
sar
rcr
hlt
neg
in
leave
jmp
orl
in
stc
in
fnstsw
clc
repnz
icebp
fsub
in
leave
flds
int
out
enter
shl
fdivs
call
xor
cmc
repz
call
rcr
cs
aad
fstpt
rolb
iret
fldl
and
mov
lret
in
call
lock
repz
enter
cmp
sti
into
stc
sar
cli
faddl
mov
loope
test
jmp
leave
in
ss
iret
fadd
les
sti
mov
in
shr
in
out
loopne
cmp
cmp
aaa
idiv
lock
xor
std
out
cmc
mov
mov
shr
out
jmp
xor
hlt
neg
fdivrl
rcl
aas
out
in
flds
addl
xlat
cmp
xlat
in
fxch
cmp
rcl
aad
rol
test
std
loopne
in
out
xchg
ret
int3
out
aad
ljmp
fnstsw
hlt
xlat
ret
ret
fsub
testb
lret
cmc
xchg
mul
int
xor
into
aad
icebp
aad
fsub
icebp
loop
sbb
sbb
enter
mov
icebp
shl
xlat
cmp
jecxz
fdivr
std
lret
loopne
ret
test
ds
movb
in
out
in
xor
leave
fcomi
jmp
jecxz
hlt
cmc
cli
fcmovu
cli
sti
loop
in
loop
xchg
nop
xchg
loopne
sar
ror
cld
fcmovnb
cmp
out
ret
test
in
ljmp
nop
lret
in
neg
int3
iret
into
lret
stc
shr
roll
sub
mov
lret
icebp
loop
in
lret
mov
shl
call
cmp
rol
test
and
ljmp
in
testb
out
in
lret
fdivr
sti
sarl
rcr
lds
jecxz
call
xchg
in
rol
sarl
aad
cmp
std
fdivr
add
addl
rolb
shl
lret
out
aaa
cld
fdivr
cmp
xlat
xchg
test
fcmovu
mov
in
int3
leave
ljmp
clc
cmp
shl
in
addb
in
dec
mov
int3
shl
call
jmp
iret
in
repnz
rcl
out
leave
neg
fst
lea
leave
ret
jmp
ror
repnz
cmp
loop
out
mov
nop
hlt
jecxz
fsubr
iret
fmul
loope
out
roll
aam
mov
jmp
int
jmp
xor
cmc
into
icebp
faddl
push
or
add
lds
add
aad
xlat
fcmovnu
ret
pop
lock
stc
dec
sub
mov
add
add
adc
ds
iret
int3
call
mov
xor
icebp
lret
les
rcr
jmp
sar
fildl
incl
lock
xor
aas
std
cld
cmp
rcr
xor
sbb
adcl
test
fidivrl
test
in
cmc
aas
call
out
ljmp
into
das
das
int
xor
xlat
fcmovbe
cli
rol
repz
rol
std
fcos
shl
out
mov
into
jmp
xor
out
out
cmp
shl
in
int3
mov
hlt
out
lret
cmc
out
in
shr
lock
int3
xor
add
mov
out
iret
in
sub
leave
int
neg
int3
aad
call
in
into
xchg
test
call
rcl
enter
xlat
cld
int3
lret
lret
fadd
rcr
fyl2xp1
aam
loope
out
xchg
hlt
int
xor
xlat
cli
std
fnstcw
cli
loopne
ret
cmpl
mov
loopne
ljmp
fmul
jmp
loopne
cli
fadd
std
out
repz
jmp
test
test
cmc
into
xor
lock
jmp
cmp
cli
xchg
mov
cmc
aad
in
into
ret
out
mov
xor
in
xor
int
fdecstp
std
and
std
loop
add
loop
lret
in
fisttps
in
enter
cmp
into
shl
clc
test
fistpll
ljmp
out
rorb
leave
xlat
fstpt
hlt
ss
std
in
cli
cld
out
rcl
out
test
hlt
clc
aam
jmp
fdivp
loope
fcmovu
faddp
loope
fmul
shl
mov
xchg
not
repnz
cmp
aaa
not
in
clc
aad
int
jecxz
cmp
fcmovnu
sti
sub
out
lret
int
ss
std
call
xor
addb
out
leave
orb
les
das
call
in
movl
enter
xchg
iret
repnz
leave
enter
rcr
jmp
cmp
hlt
cmp
leave
leave
in
leave
cli
lret
repz
enter
call
cmp
stc
out
iret
cmp
call
cli
in
fisttpll
fcom
sti
not
std
fcmovnbe
loopne
adc
aas
fiaddl
test
lds
roll
shl
divb
cmp
clc
ret
out
out
loope
xor
hlt
lret
stc
in
test
xchg
xor
in
stc
cld
cmp
shl
xlat
cmpl
vpsubusw
sar
loopne
xchg
icebp
out
cmp
fstpt
fst
fnstcw
roll
hlt
fcmovu
addb
sti
in
fsubrp
ret
cmp
iret
aad
cmp
out
push
hlt
std
shr
leave
add
mov
int3
out
repz
icebp
xor
out
incb
in
loop
hlt
aad
xbegin
cld
fcmovne
test
loop
ss
xlat
fdivrs
cli
xor
int
cmp
fstp
std
lret
in
out
test
ljmp
out
cmp
iret
lock
jmp
sbb
mov
cmc
fdivr
in
mov
call
mov
aam
ljmp
and
jecxz
call
rclb
into
xor
in
enter
int3
stc
loop
xlat
xlat
sti
jecxz
lret
fucomp
into
mov
loop
out
enter
rcl
ljmp
fstp
cld
int3
fcmovu
int
shl
xchg
xchg
repz
cmp
in
shl
cmp
ret
fdivr
ds
testl
in
ror
repz
sar
std
lock
out
in
ss
out
cmpl
mov
call
rolb
fstpt
aam
fmul
repz
int3
clc
icebp
fucomi
loope
stc
fcomi
ljmp
loopne
xor
rcr
leave
int
int
test
sarb
fld
lret
icebp
jmp
xor
xor
sub
cmp
fsqrt
xchg
filds
shr
mov
xchg
and
int3
out
not
repnz
into
idiv
ds
loop
hlt
ret
loop
in
sub
rolb
roll
add
push
or
adc
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
push
testl
jle
test
xor
lds
enter
fldl2t
loopne
in
cmp
lock
mul
call
lret
nop
xchg
into
in
lret
repnz
adc
fdivp
enter
cli
cmp
out
test
loop
xor
sar
jmp
test
icebp
jecxz
loope
filds
xchg
mov
aam
lds
leave
jecxz
xor
idiv
cmc
les
sti
int3
in
cld
sbb
out
jecxz
loope
xlat
iret
neg
stc
lret
out
into
cli
ljmp
fcmovu
faddl
mov
in
hlt
cs
in
jmp
rol
into
stc
not
sbb
sar
cmp
testb
out
ljmp
xor
in
cmp
loop
rcr
or
xlat
jecxz
jecxz
fadd
enter
xchg
int
xchg
ss
xor
xor
loopne,pt
fcmovbe
roll
in
in
lock
xchg
xor
jmp
call
int
fxch
fabs
out
fstpt
div
mov
shl
std
mov
xchg
xchg
xor
out
rol
clc
stc
iret
repnz
hlt
std
roll
sti
stc
in
stc
mov
shlb
sub
aad
lret
cmp
aad
mov
xchg
aam
fmull
cli
in
cmp
fsubrp
cmp
loope
test
out
xchg
testl
in
loop
jecxz
rcr
shl
ss
hlt
loopne
rcl
test
adc
shr
loop
out
sar
icebp
shl
aad
lock
adc
jmp
icebp
test
ds
mov
in
jmp
and
aad
leave
std
out
ss
shl
lock
in
in
jmp
call
in
in
xchg
shl
out
cmp
fmul
int
repnz
lret
fucomip
aam
leave
test
loopne
in
mov
stc
lds
cmc
cmp
in
hlt
in
fcomip
add
testl
loopne
imul
leave
cld
div
into
imul
and
fcmovnu
aad
fiadds
out
int3
cmp
ret
xlat
into
lock
repz
aam
out
in
addb
ljmp
stc
xor
call
loopne
shl
loope
ret
leave
out
mov
sar
in
aad
aam
lock
test
mov
in
in
lea
repnz
cmp
std
loope
icebp
hlt
loop
jecxz
testl
ret
iret
hlt
vaddsubpd
fdivrl
out
stc
repz
shl
repz
add
in
mov
sbb
out
jmp
lock
cmc
std
loop
jecxz
mov
call
std
std
rcr
into
xchg
not
aas
rol
shlb
call
repnz
cmc
ds
shl
mov
in
loopne
xchg
leave
sub
rcr
lret
cli
xor
shl
ret
idiv
jmp
in
test
nop
int
into
loop
rol
jecxz
repz
cmp
aam
iret
repnz
clc
sub
aad
in
sbb
test
clc
aam
cmp
jecxz
fidivl
out
call
lret
sti
call
loop
repnz
in
aaa
clc
sarb
sti
cmc
test
sti
std
test
icebp
mov
xor
out
rcl
stc
cld
std
push
aas
in
vcmpss
fdiv
icebp
rorb
in
int3
aam
lret
das
shl
lret
adc
rcr
cmc
fcmovu
rcl
or
leave
in
sti
rol
lock
lret
xor
fcmovbe
lock
repnz
rcr
xchg
lea
mov
lret
fcomip
lret
cmp
in
call
in
test
repnz
add
and
sti
stc
jmp
in
shlb
repz
jecxz
int
cmp
std
ffreep
cmp
mov
fisttpl
lock
ret
not
sar
fcmovne
divl
stc
int
jecxz
in
add
xchg
fimuls
repnz
ljmp
int3
xor
repz
test
clc
ret
fucomi
leave
mov
testl
into
in
in
lret
cli
cmp
sti
clc
in
into
lock
out
cmc
xchg
ljmp
enter
adc
xlat
cmp
sti
lock
movl
jmp
ret
int3
rcl
ret
fldl
into
test
stos
add
incb
cmpb
in
sti
aas
mov
loop
xchg
xchg
cmp
leave
cmp
call
roll
loopne
sbb
xlat
in
call
mov
jmp
std
fmul
aam
rcl
in
ret
test
clc
std
aas
stc
call
mov
mov
into
cmp
icebp
out
div
jmp
cli
aam
rol
cmc
aas
out
lret
out
hlt
loope
xor
sarb
in
xlat
out
not
lret
loop
cmp
test
cmp
fldl2t
iret
decl
in
int
int3
lret
aas
ret
out
rol
hlt
out
fiadds
sbb
xchg
fiadds
rcl
repz
ror
iret
repz
stc
aam
loop
ret
xchg
in
xor
cmp
aad
cmp
loope
cmp
aad
fdiv
incb
loopne
repz
xor
sti
cmc
cld
aad
fidivrl
jmp
mul
in
jmp
cmp
in
ss
clc
out
xabort
aas
icebp
int3
cmc
loop
aam
jecxz
cmc
clc
stc
cld
rcll
xor
xor
icebp
divl
fstpt
faddp
std
ret
xchg
and
lret
addl
shrl
into
out
clc
cmp
aas
cmc
fscale
shl
std
xor
repnz
aad
sbb
shl
test
sub
in
leave
out
cmp
cmp
out
fcmovb
ds
aas
loopne
loop
std
ljmp
fdivs
cmp
sar
cmp
loopne
push
mov
xchg
in
neg
divl
enter
imul
jmp
test
in
stc
neg
ljmp
test
mov
in
xor
call
sarl
out
clc
std
hlt
fdivrp
dec
aad
fcmovnb
call
cld
iret
shl
leave
xor
test
in
in
out
shl
not
aas
rol
not
out
adcl
ret
hlt
test
sar
rol
fsub
fcmovbe
out
mov
fldl2t
fdiv
icebp
mov
rcl
ret
cli
loopne
into
add
into
out
in
std
fimull
ftst
mov
idivl
cmp
shl
out
ffreep
sti
cmc
jecxz
fdivr
call
test
addl
int3
hlt
enter
icebp
std
cmp
call
out
out
out
leave
call
cmp
enter
loop
xor
in
int3
int
addb
in
jmp
in
fnstenv
jmp
rcl
test
ret
fsqrt
cld
int
in
repz
cmp
sti
enter
add
cmp
fcmovbe
loop
mov
mov
rcll
in
aam
xor
cmp
aam
stc
les
in
ljmp
adc
xor
idivb
aaa
std
hlt
fninit
test
fildl
xlat
mov
rorb
fcmovbe
out
aad
aas
rcl
std
ret
out
ret
lret
fisttpll
rcr
subb
ret
enter
into
cmpl
icebp
add
sti
clc
test
out
in
iret
icebp
xlat
ret
xor
shr
cli
fyl2x
jmp
ret
out
cmp
fmuls
mov
test
out
lock
sarl
fcmovnb
fsub
filds
mov
mov
mov
cs
jmp
enter
xor
aam
loop
hlt
enter
out
mov
ret
xchg
mov
xchg
loop
int
in
lret
int3
cmp
shl
neg
ffreep
fneni(8087
in
std
mov
test
hlt
enter
in
ds
in
xor
lock
out
jmp
sti
xchg
xchg
xor
stc
int
das
sti
lock
cmc
jmp
repz
loope
shl
mov
sbb
leave
mov
repnz
aad
jecxz
xor
rcl
aad
fidivrs
sti
addb
into
decl
shl
ljmp
cld
out
into
repnz
shl
xchg
cld
cli
enter
leave
in
into
xor
leave
lock
int3
cmc
clc
aas
fldl
cld
cli
addb
in
xchg
fadd
leave
into
cli
cli
cld
ljmp
repnz
leave
repnz
lret
in
movl
xor
movl
sbb
jmp
fadd
aam
fst
fcoms
sbb
jg
loope
push
addb
stos
add
fildl
and
xor
hlt
out
stc
xlat
cmp
idivl
fyl2x
fmul
leave
mov
loop
mov
hlt
out
in
lret
aaa
loop
push
loope
test
loope
cli
in
cld
lock
shl
out
shl
cmp
xor
int3
std
jmp
ret
cld
test
out
and
or
mov
hlt
into
xlat
stc
fiadds
rcr
cli
xlat
addl
icebp
fst
loopne
in
aam
stc
loop
cmp
sbb
jecxz
mov
fld
cli
fiaddl
lock
cmc
in
cmc
jmp
loop
jmp
stc
in
hlt
rcl
imul
lea
lret
hlt
aam
jecxz
cmp
repz
into
stc
incb
std
flds
lret
ljmp
fmul
sarl
std
icebp
cmpb
icebp
mov
jmp
call
fldl
iret
fsubr
clc
sar
call
out
out
clc
in
out
and
jmp
repnz
cld
out
iret
stc
in
not
hlt
in
call
test
lea
shrl
ljmp
std
icebp
fdivrp
stc
cmp
movl
lret
cld
lret
fmul
out
hlt
fxam
fsubr
std
clc
int3
loope
fisttpl
in
fucomp
fiadds
cs
ljmp
cmp
lock
cmp
repz
inc
stc
sub
in
mov
xor
repz
xor
cli
out
cli
aam
fdiv
in
jmp
cld
fadds
xor
jmp
aam
cld
std
aaa
cmp
loope
ret
rol
loope
leave
int
jecxz
in
enter
xor
fmulp
into
xlat
shl
cmp
test
sar
faddl
fcmovnu
out
lret
not
in
aaa
xlat
lock
out
in
fcomi
xlat
test
test
xchg
lock
sub
div
rol
sarl
repz
repnz
sbb
cmp
out
incb
fsubrp
xchg
ret
xor
call
fmulp
rcr
out
sub
neg
push
ret
std
aam
jmp
repnz
cmc
xor
int3
iret
repnz
not
aad
clc
repz
mov
in
int3
int3
in
shrl
out
lret
out
fidivrl
out
shr
ret
cli
test
loopne
xchg
mov
xchg
loopne
cmc
ret
jecxz
xor
cmp
fcomp
rcr
in
test
out
mov
loopne
rcr
xor
out
jmp
out
repz
sar
std
fucomip
cld
lret
repnz
ret
iret
clc
in
fyl2xp1
cmp
faddl
loop
fmul
cld
call
into
fcoml
sti
out
cmp
xor
cmp
jecxz
jmp
fdiv
cld
sar
jmp
repz
cmp
cs
cmp
repz
sar
stc
testb
mov
fdivp
jecxz
aam
das
leave
imull
in
lret
xlat
test
out
fsub
enter
in
dec
decl
ror
sar
xor
cmp
cli
xlat
bnd
sbb
addb
in
imul
into
ret
sub
clc
iret
stc
in
lret
ds
test
jmp
lret
loope
mov
test
idivb
clc
sti
test
ret
cmp
xchg
call
loope
out
cmp
xor
ss
ret
repnz
xlat
cld
mov
loop
ss
xor
aam
jmp
ds
fucompp
enter
mov
out
aam
shl
aam
iret
call
fidivrs
sti
test
mov
mov
nop
loop
lock
out
test
call
cld
xor
mov
jmp
in
jmp
int3
xchg
rol
hlt
fcomp
into
in
loopne
loop
not
repz
mov
jecxz
in
lret
in
icebp
repnz
in
adc
in
in
in
xor
fucomip
iret
int3
loope
stc
int
repz
repz
mov
sbb
adcb
int3
fsub
in
std
rcl
shl
and
xchg
into
sti
rcll
sub
movl
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
xor
jle
add
jmp
in
into
in
sbb
aam
cmp
fcomi
cmp
movb
mov
aam
xlat
xor
jmp
cmpl
mov
fcmovnbe
jmp
mov
fdivrp
rcr
xchg
ljmp
icebp
cli
out
cmp
loop
cmp
leave
or
fsubrp
out
fsubr
loop
aam
loop
aam
in
fdivs
icebp
idivl
cmp
sti
rol
dec
fdivr
xchg
in
nop
in
mov
out
div
rcr
int3
cmp
xlat
in
jmp
cli
sti
jmp
out
xor
icebp
cli
ss
aad
aad
lret
out
test
out
mov
in
std
div
test
out
out
ror
hlt
rcl
cmp
std
fcmovbe
fsubr
out
neg
rolb
filds
rcr
in
ljmp
rcr
icebp
cmc
out
hlt
clc
xor
aad
mov
mov
out
call
cmp
in
in
sti
cmp
ds
aam
rcr
jmp
mov
out
xchg
out
out
xor
cli
shl
xlat
iret
cmp
aas
test
flds
out
in
ljmp
repnz
out
add
mov
ljmp
mov
repnz
xor
out
cmp
in
ss
ljmp
std
loopne
orb
lea
xor
lret
cmp
std
not
into
repnz
clc
hlt
stc
int
lret
sub
cmp
call
div
xlat
aad
fstp
shl
and
faddl
loop
xchg
xchg
rcl
loope
aaa
ret
hlt
stc
cld
xlat
cmp
cmp
cmp
cmp
jecxz
in
fcmovne
mov
cmc
int
fxch
aad
enter
ret
fstp
enter
aam
std
fistl
call
mul
in
loope
sti
xor
sbb
in
int
int3
aaa
in
xor
out
fidivrl
rcr
fcmovnbe
cmp
rcr
incb
sti
clc
call
xchg
icebp
in
ss
imul
xlat
stc
int
mul
cmp
xchg
enter
jmp
in
clc
imul
aad
lret
leave
cli
repz
cli
xor
enter
loop
shl
std
jmp
out
fxch
cmc
not
aaa
call
cld
sar
fld
cmc
imul
orl
fucompp
lds
cmp
call
sar
rorl
mov
aad
xlat
shr
cmc
fstp
out
testl
sti
orl
addb
bnd
cli
clc
cmp
cmp
fcomp
sbb
mov
enter
test
out
in
in
aad
repnz
sarb
cli
aam
and
jmp
or
fists
lret
cmp
neg
std
xor
or
rolb
ffreep
int
loope
out
in
out
out
ret
icebp
repz
neg
shr
lret
cld
out
testl
repnz
out
aad
shr
lock
stc
fnstcw
shl
aas
xchg
in
fsub
mov
loop
test
ror
in
call
cmc
fyl2x
aas
cli
cmp
jecxz
inc
into
mov
std
out
adcl
rcl
in
stc
xor
idiv
out
out
loopne
loope
test
fmuls
hlt
loope
fsubp
in
int
sti
fdivrl
ds
lock
cmc
sti
mov
fldz
in
repz
mov
repz
repnz
cmp
cmp
fprem1
sarb
cli
mov
aad
fxch
loope
rorb
ret
ret
cmc
out
fdivl
int3
cld
shl
call
loope
jecxz
out
fmul
mov
lock
clc
fsubr
aaa
lock
fmul
cmpb
cmpb
rcr
and
fdivrp
enter
xchg
in
shlb
shr
out
in
call
into
lret
fcomi
incl
shl
loope
adcl
loop
repnz
aas
aas
sarb
sti
and
lret
mov
cli
xchg
repnz
xchg
ret
clc
out
jmp
cld
div
rcl
call
lret
ljmp
jmp
in
sti
xlat
jmp
xlat
cmp
repz
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
lods
mov
add
add
rcr
stc
hlt
out
out
in
jmp
in
mul
cs
out
shl
cld
cmp
icebp
fistpll
iret
inc
out
repz
fsubp
aad
fdivrp
call
jmp
hlt
out
fdivs
cld
ss
filds
in
idiv
jecxz
dec
int
in
aaa
jecxz
lock
stc
cmp
div
cld
in
jmp
in
roll
out
hlt
cmp
std
cmp
cmp
out
fadd
xchg
mov
repnz
in
shl
shr
shlb
xlat
aam
shl
jecxz
cmp
lock
loope
mov
in
movb
imul
xlat
aam
cmp
cmp
loope
xor
aas
std
cld
in
int3
xchg
in
into
xchg
mov
cmp
aad
fsubrp
out
rolb
fdivrp
enter
jmp
shr
xchg
aam
loop
cld
sar
out
cmc
aaa
fdivrl
std
aad
aad
loopne
fiadds
in
repnz
in
ror
in
repnz
cmp
cmp
adc
call
out
jmp
hlt
in
xchg
sub
xor
cmp
shl
stc
fdivr
rcr
jecxz
lret
lret
out
xchg
in
test
into
cld
int3
jmp
aaa
out
mov
test
mov
xor
icebp
aad
call
cmp
inc
std
lock
movb
sbb
xchg
out
rol
divb
sub
hlt
cmp
iret
cmp
faddl
faddl
in
addl
cmp
cmp
iret
leave
aas
cmp
flds
in
orb
mul
out
rcl
leave
in
aaa
hlt
loope
loopne
cmp
rcl
xlat
mov
jecxz
iret
xchg
xor
jmp
rcr
clc
in
lock
cmp
xor
test
jmp
loopne
or
test
out
jmp
cli
ds
add
fsub
aam
cmp
fxch
out
int3
repz
cs
xor
fldl
stc
cmp
fsubp
ret
imul
sti
mov
rol
into
mov
loopne
aad
out
sarl
repz
repz
loope
clc
and
testb
fst
test
loope
xor
repnz
repnz
addl
std
ljmp
int
out
xlat
in
cmp
loop
aas
in
sub
clc
leave
aam
fmulp
mov
out
rcl
fdivrs
sub
shl
fcomi
clc
fiaddl
repz
mov
mov
sti
fptan
rcl
fdivp
hlt
aad
repnz
loop
mov
nop
int
in
aam
cmc
xor
fdivr
aas
rol
fldl
ds
lret
enter
xchg
fcom
shr
test
xlat
cld
jmp
xor
cld
enter
repz
jecxz
out
fdecstp
ret
jmp
shl
shl
loopne
call
aas
loop
in
icebp
xchg
into
hlt
aaa
in
xlat
in
xor
loop
repnz
rcr
ljmp
clc
ror
vpxor
neg
cmp
in
cmp
ret
out
mov
ljmp
mov
into
cli
out
repnz
xor
ds
loope
mov
clc
sti
fisttpl
cmp
int
lock
lret
add
out
inc
ret
testb
icebp
out
xchg
ljmp
cmp
rcl
loopne
cmc
out
les
out
call
in
ljmp
out
int3
aam
aad
cmp
in
addl
std
out
mov
mov
fisttps
xor
ret
fidivrl
aaa
testl
cmc
test
fldl
mov
rorl
fmul
xlat
icebp
aam
fdiv
into
aas
in
movb
into
mov
repnz
test
xor
xor
int
in
aam
rcl
fsubrp
sar
lock
ret
int3
xchg
mov
rorl
lock
int3
fmulp
enter
sar
fdiv
fdivr
ret
fadds
out
xchg
jmp
cli
leave
into
call
into
stc
sar
sti
fmulp
jmp
out
repz
js
inc
add
jge
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
jg
push
pushf
mov
jle
add
mov
aad
stc
xor
xor
loopne,pt
fincstp
in
rcl
aad
aad
lret
movl
leave
aam
out
fdivrl
div
in
repz
imul
aas
orb
mov
out
into
lock
out
out
lock
ret
cmp
aam
fcmovne
cmc
mov
ret
xchg
in
mov
jmp
enter
enter
loope
sti
lock
rcr
stc
fndisi(8087
xor
mov
jecxz
in
into
int3
hlt
repz
repnz
repnz
in
cld
rol
in
enter
xchg
orl
iret
xor
in
sar
clc
incl
shl
test
fucom
jmp
xchg
test
std
lret
out
enter
cmp
hlt
out
aad
hlt
cli
rcl
loopne
xlat
leave
cli
in
out
cmc
icebp
hlt
call
leave
hlt
xor
cld
aaa
cmp
in
ljmp
out
out
ret
repnz
cmp
in
idiv
std
clc
repnz
rcl
out
test
loop
cld
ficoms
das
iret
out
iret
aad
hlt
std
or
int3
out
int
fcmovu
leave
lret
add
test
xor
std
out
xlat
fdivrp
in
addl
jmp
orl
xchg
jmp
idivb
in
cmc
out
add
cmp
repnz
fldl
lock
cmp
rcr
std
cmp
call
xchg
leave
in
out
repnz
filds
cmp
cli
aad
rcr
ss
ret
xchg
fcomip
out
jmp
enter
lret
call
cmp
sbb
loopne
rcr
xchg
cmp
xchg
call
into
int3
xor
idivl
cmpb
test
rolb
in
out
in
ljmp
cmp
xor
xlat
jmp
faddp
fucomp
fdivrs
or
aad
loope
xchg
jecxz
call
clc
fdivp
cmp
repnz
std
in
xchg
cld
mov
fildl
icebp
aad
in
out
and
testl
int
leave
fsub
leave
rorl
into
leave
fcmovnb
aad
cmp
loopne
rcr
aas
cld
fmul
loopne
cli
sti
mov
xchg
stc
clc
std
lret
aaa
aad
div
clc
test
call
fadds
addl
enter
iret
leave
hlt
out
filds
out
mov
decl
lock
ror
fstp
iret
out
cmc
inc
aas
test
test
dec
xchg
fcmovnb
sar
int3
xor
cmp
lret
leave
loopne
cli
fdivp
test
cmc
shl
fcom
stc
mov
jmp
and
cli
fdivrs
hlt
rcl
cmc
stc
repnz
aad
fstp
loope
lret
mov
mov
call
cmc
cmp
in
addl
ror
into
int
clc
into
repz
cld
shl
rcr
mul
out
in
adc
mov
xchg
std
shl
jecxz
loopne
jecxz
shl
in
clc
fcom
test
loopne
repz
or
or
into
adcl
rcr
cmp
cmp
loope
loop
shl
cli
not
nop
loope
into
jmp
test
xor
in
rcr
rcl
lret
aad
lret
ret
lds
and
fcmovnu
fst
out
mov
div
leave
ror
xlat
icebp
in
int
lret
xchg
fsubp
xor
cli
cld
out
aaa
enter
test
std
rol
mov
adc
mov
test
lret
divb
xor
loopne
fxch
testb
mov
in
rol
lock
fst
in
ror
div
xlat
shr
cli
test
xchg
mov
lret
fsubr
mov
aam
aas
cmpl
xlat
jmp
jmp
out
lock
aam
jmp
sub
enter
rol
cmp
xchg
fmul
mov
mov
hlt
int
ret
xor
ffreep
call
add
mov
clc
clc
mov
xchg
in
xchg
sub
shr
fstpt
in
cmp
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
idiv
sbb
leave
xchg
add
add
ljmp
cld
in
ljmp
icebp
fldl
cmp
fucomi
cmp
shl
cmc
ret
rolb
out
in
loop
call
shl
out
int
jmp
out
xlat
out
ds
sti
in
ror
xchg
ljmp
int
fcompp
lock
ret
xchg
sti
mov
mov
ljmp
lds
fmulp
into
lret
stc
in
sti
flds
call
out
jmp
call
clc
loopne
fdivp
out
loop
loopne
cmp
mov
incl
jmp
out
fidivrs
aam
hlt
fadd
vpsubusb
cld
loop
out
test
cmp
iret
fnstenv
ljmp
idiv
call
lea
shl
in
out
xlat
out
out
jmp
sarb
lock
aas
xchg
test
ljmp
lret
out
repz
cli
in
repnz
div
icebp
xlat
into
int3
aad
repz
fmul
repz
aam
in
lret
faddl
leave
xlat
ret
loopne
lret
lock
aad
xor
stc
in
sarl
cld
int
sub
loopne
rcr
lret
stc
lock
loop
in
xchg
shl
xor
sti
cld
fcmovnu
stc
aam
aad
loop
hlt
repz
into
flds
lret
xlat
rol
cli
repnz
call
lret
fsubp
xchg
hlt
loop
mov
out
in
and
mov
shl
stc
bnd
push
test
addb
fdivrp
xchg
hlt
xor
lret
shl
ss
cmp
iret
imul
out
leave
ljmp
icebp
test
aad
in
into
cmp
cmp
aaa
cmp
fxtract
int
sti
fnstcw
orb
into
iret
lock
stc
xor
out
in
fidivrs
cmp
call
shl
addb
in
xlat
int
leave
xor
shr
fsub
in
hlt
sti
out
fsubr
rolb
in
out
int3
jecxz
shl
lock
loope
in
loopne
cli
fcmovne
mov
out
ret
int3
out
cli
ss
shl
aam
adc
enter
sar
lret
cmp
iret
fcmovnu
cmc
cli
shl
not
ffreep
mov
fiaddl
xchg
call
lock
icebp
cmp
xor
neg
into
neg
xabort
clc
cld
loopne
lret
xchg
repnz
enter
shl
repz
rcr
repz
stc
orb
xchg
xchg
shll
jmp
cmp
and
fdivp
aam
mov
shr
cli
mov
iret
repnz
cmp
fdiv
clc
stc
out
lock
test
repz
out
into
sarb
fcomip
cmp
cmp
xor
in
sbb
adc
int3
ljmp
out
fstpt
div
repz
cmp
int3
fsubr
test
cmc
clc
xor
repnz
lret
std
in
iret
aas
fdivp
cmp
int
fmul
in
rcr
in
call
icebp
cmp
aam
fcmovbe
aas
mul
out
in
clc
addb
leave
in
lock
out
cmpb
out
in
ljmp
sbb
loope
repz
fmull
in
sub
imulb
xor
repnz
into
cmp
in
in
lret
iret
cli
out
ret
hlt
clc
out
out
lret
enter
xor
cmp
xor
ret
cmp
loope
loop
fsub
clc
loopne
lock
out
loope
into
jmp
cmc
ljmp
div
in
loopne
clc
ret
xlat
loopne
jmp
mov
sub
loop
jmp
lock
xor
fcom
add
sti
xchg
xchg
rcl
shl
not
xor
ss
leave
sbb
cmp
ret
call
fdivr
in
out
decl
xor
cs
aaa
fscale
sar
lock
cmp
hlt
fucom
fcmovu
mov
out
sti
in
jmp
xor
not
xor
in
in
cmc
xlat
hlt
sar
shl
xchg
mov
out
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
xchg
add
add
fdivrp
stc
nop
int3
loop
ror
rcl
icebp
out
repz
out
ljmp
incl
fcmovu
test
in
orl
int
ljmp
cld
cmp
loope
enter
into
call
int
enter
aaa
xor
xor
sti
hlt
aas
cmc
and
jmp
jecxz
nop
in
fdiv
orl
in
out
shll
cmp
push
mul
test
cli
jmp
jecxz
push
fincstp
rcr
std
leave
cmp
repnz
ds
clc
adc
lret
loop
loope
ljmp
ror
in
icebp
not
call
rol
hlt
jecxz
fcmovnb
orl
xchg
mov
lock
into
cmp
hlt
leave
clc
icebp
repz
testl
lock
cld
xchg
xchg
loope
cmp
icebp
stc
not
cmc
cmp
in
ds
test
iret
lock
ss
in
hlt
jmp
rcl
test
test
call
mov
lea
out
xor
enter
out
cmp
in
dec
xor
cli
enter
iret
mov
shlb
sti
xlat
xor
sti
sar
aad
loope
out
rcr
adc
iret
in
in
lret
and
in
int3
hlt
out
lret
in
cmp
xor
in
call
mov
in
sti
mov
loop
lock
int
jmp
fdiv
cmp
loop
test
sbb
in
or
shr
lock
fcmovbe
fdiv
cld
enter
adc
in
ds
mov
loopne
into
fsubp
xchg
shr
icebp
out
loop
out
into
fdivl
out
adc
cmp
into
aas
iret
les
test
mov
fdivp
repnz
xlat
lock
idivl
fcmovu
jmp
jmp
cmp
mul
cld
testl
xor
in
xor
std
iret
sti
ds
cmp
sar
aas
xchg
cli
int3
xlat
fsubrp
fcom
std
leave
repnz
int3
lock
sarl
fsubrp
repz
repz
loopne
call
shr
out
mov
loop
aad
aaa
fst
icebp
leave
xor
cmp
ror
call
mov
jecxz
repz
into
loop
lret
test
jmp
stc
rcr
in
out
fldl
xchg
neg
out
test
not
cmc
aad
repz
xchg
hlt
ret
fcmovnu
jmp
mov
xchg
xchg
into
repnz
jmp
ss
in
in
fildl
in
int
in
sti
test
loop
xor
cli
in
call
icebp
adc
sar
stc
loop
sti
loopne
call
orb
cmp
xor
cmc
loope
test
shr
in
shl
fsubrp
int3
icebp
loope
hlt
xor
lock
ror
fst
aas
icebp
repz
adc
orb
xchg
repz
call
lret
into
iret
lret
fcom
xchg
hlt
in
call
cli
xchg
test
out
cmp
std
cmp
int3
cld
repnz
leave
loopne
int3
lock
rcr
xchg
mov
enter
call
sbb
clc
rcl
repz
mov
rorb
jmp
icebp
xor
cmp
in
rolb
ret
sbb
leave
into
test
incl
fmul
in
aad
hlt
out
add
cli
aam
clc
out
cld
ror
mov
fsubrp
roll
hlt
cmc
ljmp
sub
les
add
mov
mov
test
out
add
jecxz
xchg
repnz
out
fsub
xchg
xchg
ss
leave
out
aad
fsubrp
cli
aad
clc
ror
shr
loopne
xchg
mov
fsubr
loope
xchg
shl
xchg
cs
in
aaa
into
cmp
std
xlat
jmp
clc
and
and
sti
call
jecxz
mov
idiv
xor
shl
fcomp
repz
in
stc
ljmp
mov
loop
ffreep
add
aad
rcl
xor
int3
stc
ljmp
sarb
shl
ffree
in
enter
ljmp
jmp
cmc
fdivl
fnstcw
hlt
loop
fidivrl
shl
mov
sti
test
xchg
sub
imul
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
cmp
call
divb
loopne
cmpb
ljmp
int3
push
int3
clc
loop
icebp
shr
hlt
stc
cld
std
cmpb
mov
in
les
mov
loop
out
repnz
cs
iret
fbstp
sar
xor
cld
cld
roll
fcmovnu
fsubp
mov
xlat
xor
sti
not
in
in
clc
in
loopne
cmp
adc
fcmovne
lret
addl
shr
fcom
lret
aad
rolb
addl
shll
in
clc
clc
int3
clc
repz
cmp
cmp
out
int
fucompp
xchg
int3
test
shll
lock
cld
cmp
jmp
inc
ffreep
roll
ret
mov
cli
test
out
jmp
lock
adc
out
vpminub
in
rolb
clc
lret
fadd
not
rcl
cmc
fdivrl
jecxz
cli
hlt
shl
ret
lret
out
into
int
and
aad
test
fnstenv
inc
stc
loope
lock
sti
mul
orl
adc
mov
aam
stc
aas
jmp
fcomip
out
aad
loopne
cli
cld
ljmp
mov
jmp
lret
xor
cld
neg
icebp
fcmovnu
adc
loop
adcb
lret
icebp
ljmp
fdivr
in
fcmovnu
out
test
std
jecxz
in
leave
leave
shl
or
mul
in
xor
das
in
aam
cmp
cmp
loope
xlat
fcomip
ret
loopne
movl
xor
lret
f2xm1
out
shr
icebp
out
mov
repnz
xlat
out
cmp
test
int
out
sti
cmc
std
cmp
fcomp
into
cld
icebp
in
testb
lret
in
std
lea
jmp
lock
int
ljmp
aad
test
rcl
ljmp
xchg
std
xchg
in
ss
in
fdivrl
cmp
cmp
cmp
shl
out
fcos
out
lock
xchg
mov
ret
int
jecxz
stc
das
lock
cld
fsubr
into
std
out
test
stc
roll
mov
ljmp
icebp
sarl
out
xorl
cmp
in
mov
xchg
cmc
fdivr
enter
xlat
xlat
out
hlt
in
clc
shr
fisttpl
jmp
hlt
jecxz
repnz
hlt
into
cli
fcomi
xor
cmpl
repnz
shl
in
cmc
lock
xchg
lea
xor
cli
xlat
rcl
cmp
iret
clc
cmp
xchg
std
loop
popl
shr
sub
rcr
rcl
cli
cmp
lock
jmp
nop
shl
fimuls
fnstenv
idiv
repz
out
jecxz
aaa
div
lock
loop
int3
in
shl
loopne
enter
cld
fcom
cli
ret
loop
rol
neg
test
mov
lret
int
shl
loopne
lret
out
iret
cmp
fnstcw
sar
aas
xor
test
ret
cmp
in
nop
nop
loope
imul
fyl2x
out
ljmp
in
aam
sbb
jmp
rcr
orb
fdiv
fcom
std
fdivr
cmp
in
repnz
adc
in
in
call
sbb
test
out
test
sti
int
icebp
fiadds
cmp
cli
mov
orb
enter
cmp
jmp
cld
icebp
xlat
cmp
fld
jmp
in
in
xchg
cmc
fdivs
cli
xor
fldl2e
cli
out
lret
iret
not
roll
jmp
xchg
aam
clc
out
lret
in
jmp
fsubrp
fdivrp
fld
ret
out
mov
loopne
xlat
aad
stc
in
shl
aam
in
aam
out
aaa
jmp
out
xchg
mul
rcl
aam
cmp
mov
loop
lock
leave
in
out
xor
ds
aad
lock
repz
loope
loopne
jmp
sti
ds
loopne
cmp
inc
aas
fadds
fiaddl
out
shl
rol
lock
jmp
ds
std
roll
call
std
call
cmp
cld
jmp
lret
iret
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
fst
mov
jle
ret
cli
cmp
mov
mov
in
in
out
ffreep
in
cli
int3
jmp
out
xlat
xor
test
in
aas
fdivp
enter
push
iret
orb
leave
sar
not
aas
repnz
cmp
fnstcw
out
ret
mov
aad
lret
fdivr
mov
xchg
xchg
nop
ret
loop
shl
out
xor
hlt
cmp
std
cmc
cld
cld
fucom
ds
int3
loope
mov
aam
ffreep
lret
fyl2x
out
not
leave
sbb
shl
repz
mov
mov
in
loope
repz
xchg
hlt
int3
cmp
rcl
out
sti
cmp
cmp
icebp
xchg
cmp
jmp
filds
in
aad
cli
xlat
faddl
shl
cmc
and
idiv
into
std
fcomi
out
shll
out
in
cmc
shl
iret
fmulp
loop
iret
int3
fdivp
idivb
ljmp
out
jmp
xor
lret
std
ljmp
out
cmp
xor
test
fsubr
aam
call
leave
repz
fcmove
out
ret
lock
cld
ret
jmp
mov
loope
jmp
out
jmp
jmp
fcmovnbe
cmp
loop
cmc
cmc
xchg
xchg
cld
loopne
ljmp
jmp
cmp
add
icebp
std
out
testl
nop
out
xor
xor
fmul
jmp
cli
fdiv
rcl
ret
shr
in
enter
sti
out
push
jmp
loop
aaa
cs
xlat
cmp
aad
in
xchg
bnd
popl
call
imulb
ljmp
neg
cmp
out
leave
xchg
rorl
xor
xor
ljmp
idivb
fneni(8087
out
int
sbb
ror
mov
in
int3
aam
shr
clc
loope
cmc
fildl
loope
fisttpl
in
mov
lret
shl
sti
cmp
ljmp
sti
sti
shl
fcomp
sub
lret
mov
rol
ret
fpatan
stc
fxtract
clc
rol
jmp
loop
out
ret
enter
jmp
mov
div
shlb
ljmp
addb
mov
in
orl
ds
iret
sti
fmul
aad
sar
idiv
fcmovnbe
call
mov
loop
repz
enter
fsubr
addl
mov
fucomip
leave
xor
lret
divl
cmp
shl
cmp
cli
fsub
shl
aad
jmp
nop
fmulp
xchg
icebp
shl
test
sub
lret
cmp
icebp
fstpt
lock
std
div
shr
cmc
mov
lret
mov
repz
repz
repz
aad
into
into
xor
cmp
ret
fprem
in
mov
call
clc
mul
fcom
cli
cmp
ror
adc
filds
mov
fisttps
out
rcl
stc
fxch
cmp
fldln2
aas
lock
rcl
loop
mov
leave
lock
call
enter
icebp
leave
sub
not
xchg
addb
leave
fcmovne
jecxz
rcr
xlat
das
in
not
fpatan
leave
cmp
loopne
rolb
neg
mov
shl
iret
aam
loope
jmp
aad
out
xlat
lret
stc
lret
jecxz
sti
fdiv
mov
ret
mov
mov
mov
mov
cs
repz
in
ds
sti
faddl
loop
cmp
in
mov
enter
sti
leave
sti
int
out
cmp
hlt
cmp
aad
test
jecxz
out
xchg
lock
xor
cmp
sti
loopne
loope
cmp
neg
rcr
decl
or
cld
jecxz
lret
cmp
fbstp
fsubr
fistpll
xlat
cmp
in
in
stc
std
sbb
fadd
int3
repnz
fucomip
lret
cmp
ds
out
hlt
loop
ret
aam
fmul
loopne
mov
cmp
lret
shr
xor
in
lret
adc
iret
faddl
into
dec
fdivrp
in
cld
std
dec
icebp
icebp
fxch
cli
int
fucomip
cmp
shr
out
aas
repnz
clc
xchg
repnz
call
ds
aas
shl
cld
fninit
mov
test
fucomi
loope
in
jmp
jmp
fcom
rcr
fstp
fnstsw
fmull
stos
push
cmp
jge
add
add
in
out
repz
out
lret
jmp
cmp
ret
clc
into
shl
sub
sti
fmuls
mov
int3
cmp
jmp
jmp
in
into
cld
fdivrl
ret
sti
loope
test
jecxz
in
rol
aam
out
rcr
fcmovnbe
cli
fiaddl
xlat
cli
out
fscale
rorb
mov
out
cmp
fldl
repnz
xlat
rcr
lret
xchg
hlt
jecxz
cmp
shl
icebp
loop
std
cli
hlt
repz
mov
repz
ror
shl
out
sarb
xlat
ljmp
not
adc
in
lock
loopne
rorb
clc
cmp
std
rcr
iret
out
push
cli
aam
or
sar
loopne
int
call
jmp
in
aaa
fyl2x
clc
aas
test
ds
mov
xchg
test
rorb
das
call
aam
call
fidivrl
cld
fucomip
fstp
int3
mov
icebp
in
shl
in
xor
out
aam
jmp
repz
cmp
sbb
ljmp
xchg
rcl
cmp
repnz
fcmovnbe
cmp
idivl
iret
aam
fcmovnb
test
clc
loopne
loop
in
addl
ljmp
aam
ret
shl
repz
std
fsubrp
mov
incl
adc
ror
into
aaa
lock
out
loop
in
ljmp
in
mov
fimuls
in
cmp
in
stc
icebp
xlat
lret
in
cmpl
aam
aad
out
jmp
add
aam
cs
cmp
loop
fadd
in
addl
call
int3
into
jmp
cmp
idiv
into
idivb
aam
jecxz
imul
testl
enter
rcr
cmp
ljmp
flds
cld
xchg
int
addb
jmp
cmp
loope
sti
clc
roll
call
loop
lock
xor
call
sub
lock
ds
out
clc
in
lret
lret
jecxz
repnz
lret
xor
in
in
leave
enter
repnz
fld
std
enter
mov
rcll
ret
repnz
cld
fucomp
repnz
in
cmp
out
out
fcmovnu
clc
xchg
mov
call
cmp
not
cmp
stc
out
rol
xchg
jmp
int3
sar
jecxz
hlt
clc
in
cld
out
shl
sar
xlat
out
fsubp
std
fadds
movl
aaa
cmc
fcmovne
cmp
lock
cmp
loope
lds
in
in
hlt
cld
lret
xchg
xor
into
repz
lret
call
in
aad
clc
out
out
mov
lea
fucompp
aam
cld
aaa
fucomp
rcr
repz
cmp
xchg
mov
lret
iret
call
lock
fcmovb
repz
aaa
rcl
xlat
hlt
shl
in
ret
sti
in
sti
mov
ror
into
nop
aad
rcl
lock
cmp
dec
icebp
repz
cli
aad
cmp
cli
loopne
xchg
sbb
fdivs
sarl
int
xor
hlt
repnz
ret
sti
mov
int
out
lret
icebp
div
int
ror
rcl
repz
iret
hlt
ret
aam
addl
out
cld
jecxz
jecxz
int3
shlb
cmp
xor
stc
int3
xor
clc
aaa
lock
aam
hlt
call
hlt
test
loop
clc
ret
cli
call
xor
aas
xlat
sar
icebp
loopne
ret
sub
jmp
cmc
jmp
cmp
lret
in
hlt
out
fdivrl
jmp
neg
call
rclb
iret
clc
stc
sti
fistpll
fldl
ret
xchg
test
ret
out
ljmp
fcomip
cmp
in
hlt
cli
iret
shl
sti
out
repz
repz
fdiv
call
jmp
xchg
loopne
xor
xor
jmp
ret
repz
loopne
mov
mov
xchg
lret
adc
out
out
ljmp
cld
dec
out
leave
fiadds
in
xchg
out
loopne
cmp
out
icebp
int3
xlat
lock
ja
mov
jmp
jmp
ror
aam
aad
aam
sbb
stos
stos
add
add
iret
test
mov
jmp
repnz
out
nop
int
iret
in
lret
aaa
xor
shl
aaa
fcomip
repnz
std
call
lock
in
loope
test
fnstenv
xor
cmp
int3
cmp
into
stc
rcr
fcmovb
aam
xchg
loope
xchg
fdivrp
cmc
shl
icebp
xor
stc
ss
repz
div
cmp
int
fldl
aad
xchg
sbb
in
jmp
hlt
enter
aaa
imul
aam
loop
jmp
int
loope
in
lock
ljmp
cmp
aam
stc
lret
hlt
ds
loope
shr
fcomi
test
loopne
shl
xlat
shr
rcl
sti
in
not
out
rcl
into
cmp
jmp
in
xlat
jmp
xchg
aam
jecxz
leave
enter
aad
fiaddl
shl
aad
xlat
test
fimull
fdivr
jmp
shl
fcmovbe
idiv
out
fmuls
fisttpll
repz
repz
call
lock
out
not
cmp
stc
incl
in
xchg
and
lret
sub
cmc
hlt
enter
cmp
sarb
fnstsw
xlat
ffree
xlat
sbb
lret
lret
iret
not
shl
out
in
lret
xor
shr
icebp
push
in
fcmovu
jmp
loope
sti
test
in
int
rcl
not
repnz
cmp
ds
ret
jmp
loope
xlat
lock
xchg
loop
mov
icebp
rol
fdivrl
adc
add
cmp
loopne
call
enter
mov
ret
int3
lock
cmc
int3
iret
roll
fldl
jmp
jmp
in
out
ljmp
cmp
std
out
cmc
cmp
fadd
xlat
sbb
mov
fisttps
std
fsub
jmp
hlt
int3
icebp
hlt
clc
cli
aam
in
mov
sti
mov
mov
lock
jmp
into
enter
in
clc
cli
hlt
out
loopne
out
xchg
xor
ret
icebp
idiv
fucomi
int3
out
cmp
hlt
fldl
in
jmp
in
add
sar
int3
xor
leave
hlt
ds
fdivrl
rcr
sar
loopne
leave
cmc
leave
int
out
test
out
xor
neg
xlat
loop
hlt
loop
sbb
xlat
sar
incb
in
vfrczss
sarb
sub
clc
aaa
jecxz
in
jmp
add
incb
out
in
mov
out
ljmp
fsub
add
loopne
out
mov
lock
stc
xlat
in
cmp
clc
fucompp
xlat
jmp
addb
call
loop
xor
aaa
out
aad
loop
jmp
ljmp
leave
mov
in
cmp
in
stc
sarb
xor
in
sbb
repnz
rolb
mov
nop
rcr
into
jmp
cli
cli
repnz
sar
sar
aas
in
aam
imul
int3
call
rcl
ss
lret
rcl
xor
lock
icebp
clc
in
xchg
clc
xchg
jecxz
lret
hlt
ljmp
ds
sar
aam
incb
addl
lock
cmp
imul
in
int3
rcl
clc
std
cmp
in
loop
enter
out
sti
xchg
in
iret
in
xor
aaa
cld
fcmovnbe
icebp
loope
aas
aad
aad
ret
fcmovnu
hlt
call
mov
leave
cmc
xor
fsubrp
cmp
into
sarl
sti
out
and
mov
iret
int3
in
repnz
aaa
into
aam
aad
clc
aaa
xorb
neg
mov
rorl
enter
xor
cmp
iret
loopne
shl
cmp
int
lock
sub
in
jecxz
lret
idivl
repz
repz
cli
aas
into
lock
enter
enter
int
int
ror
cmp
in
cmc
loopne
lret
sti
loope
iret
xchg
xchg
call
sar
out
fnsetpm(287
cmp
sti
fidivs
cmp
mov
in
test
jmp
nop
iret
jmp
out
enter
into
out
out
cmp
loope
ret
repz
in
cld
loopne
mov
mov
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
dec
mov
add
add
mov
rorb
lret
jmp
fcmovb
fdiv
aad
out
rcr
repz
testb
cmc
jmp
out
repz
lret
call
shl
cmp
fadd
incb
test
cld
fcomi
nop
in
enter
leave
cs
int
or
sar
fcmovnbe
sbb
int
mov
xchg
mul
imul
jmp
into
lret
fmulp
test
in
mov
enter
cld
icebp
xor
rcl
hlt
xor
iret
stc
into
aad
cli
in
out
fdiv
jecxz
stc
cli
loop
lret
lret
fisttps
xor
lock
cmp
icebp
sbb
idiv
xlat
in
addb
int
out
ror
xor
fcmovnb
fsubr
xor
aas
cmp
rol
out
les
ljmp
xor
aad
cmp
ljmp
and
cld
xlat
cli
out
sbb
lock
aad
sarb
frndint
repnz
int
hlt
mov
jmp
mov
fmulp
loop
ljmp
jmp
push
cmp
loopne
fdiv
call
hlt
out
jecxz
lock
lret
test
out
fdivr
cmp
icebp
xchg
fdivrp
call
fiadds
orb
cld
les
fst
int3
jmp
loope
lock
xchg
leave
fisttps
mov
in
mov
in
leave
xor
sti
rcl
inc
test
sbb
enter
stc
int
stc
jecxz
repz
enter
xor
cmp
rol
out
fmull
cld
stc
mov
leave
int
xchg
mov
imul
call
sti
in
repnz
sti
aas
clc
jmp
out
decb
xor
leave
ss
rcl
int3
fcmove
xor
call
mov
icebp
fsubr
test
icebp
cmp
into
push
cmp
aas
loop
mov
jmp
jmp
icebp
std
mov
xor
cs
rcl
xor
repz
jecxz
repz
xlat
xchg
lea
loop
stc
aam
out
fmul
fidivrl
in
cmp
icebp
lock
orl
test
adcb
aad
shl
call
ds
iret
shl
mov
into
rorb
div
aaa
ret
in
icebp
out
stc
lret
std
out
roll
movb
out
in
ljmp
ljmp
movb
in
in
and
shr
xor
lock
cmp
cmc
ret
std
ljmp
leave
fdivrp
mov
in
ret
in
loope
leave
in
iret
neg
shl
loope
addl
mov
rol
int3
in
cmc
cli
cmc
out
idivb
loop
loopne
sar
call
fmul
sti
out
leave
xchg
out
xchg
mov
xlat
xor
lret
int
into
cmp
leave
sti
cli
int3
xor
fiadds
inc
mov
int3
jmp
lock
stc
sti
fst
fsin
imul
repnz
fsubrp
sub
clc
out
fucomp
out
rorl
call
xor
shl
flds
fcmove
jmp
movl
fstpt
cmc
test
rol
sub
shl
lret
test
rclb
ljmp
in
into
cmp
ret
aad
movl
iret
rol
lret
leave
jmp
rcr
icebp
cmp
in
loope
cli
int
decl
into
in
ljmp
hlt
xor
ror
cmc
loopne
in
into
lret
out
xchg
clc
lock
repz
out
aaa
xor
fildl
fcmovne
in
cmp
mov
out
lret
cmp
hlt
cmp
sbb
testb
aam
ljmp
cmp
stc
loopne
xor
icebp
cmp
enter
out
icebp
lds
ror
jmp
fst
fcos
leave
aam
fnstsw
faddl
enter
ror
ss
xor
ss
int3
test
leave
fildl
xchg
repnz
out
int
jge
mov
jmp
rcl
ret
fucomp
insb
fstps
sub
sbb
add
add
jle
jle
out
cmc
icebp
in
fneni(8087
in
lock
out
cli
fstl
xchg
repz
ljmp
out
aam
or
out
iret
ror
into
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
