push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
and
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
cmc
test
clc
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
hlt
xor
aad
cmp
add
icebp
mul
loope
test
dec
in
repnz
jmp
test
int
hlt
sti
jmp
stc
sbb
repz
xchg
test
mov
sub
cmp
lock
out
fdivp
rol
rorl
repnz
vpmaxsw
cs
aam
out
out
roll
hlt
in
fxch
out
nop
mov
cmp
in
cmp
cmp
sti
shl
les
in
xchg
jmp
icebp
out
repz
loopne
leave
sarb
in
cmp
rcl
ret
out
mov
mov
out
shl
hlt
lock
sarb
repnz
ret
cmp
loopne
cli
cli
incb
shr
cmp
aaa
in
stc
fdivl
fcomp
ret
ljmp
out
addl
std
cmp
not
rcl
fidivrs
in
hlt
repz
jmp
out
mov
in
imul
ror
aaa
out
idivb
iret
cmc
fadd
sar
aad
xor
jmp
rol
ror
rcr
fcmovnu
mov
aad
push
or
jle
or
jle
xchg
call
fdivrp
dec
repnz
jmp
int3
in
xor
xor
shr
int3
into
xor
cmp
in
fsubrp
out
out
mov
fisttpll
xor
fsub
aas
cli
repnz
fcmovbe
cli
xchg
jmp
xchg
jmp
fstl
lret
ss
xlat
cmp
fdiv
iret
aad
aad
in
mov
out
in
out
mov
repz
cmp
std
cmp
sbb
lock
jmp
fisttpl
jmp
in
int
into
shll
int3
sarb
rcl
xlat
cmp
in
sti
xchg
xchg
into
in
fdivs
int3
lock
lret
cmp
in
sti
cmc
in
cmp
cld
sti
ret
cld
fmul
int
out
mov
xor
das
cmc
clc
enter
jmp
loope
rcr
into
std
adc
xchg
repnz
out
shl
in
lret
rcr
cmp
repnz
ljmp
iret
loopne
aam
loopne
lock
fsubr
hlt
ds
cmp
in
cld
ljmp
fucomip
cld
into
in
in
ror
xlat
enter
lret
in
and
cmc
loope
ljmp
roll
in
xor
jmp
repz
sti
jmp
mov
mov
out
lret
cmc
xor
cmp
repnz
aad
ret
xbegin
mov
leave
out
nop
aam
ret
cmp
cmp
fmul
out
fcomp
adc
sub
int3
mov
test
shr
jmp
lock
aaa
sarb
out
loope
rol
test
std
int
cli
xchg
ror
hlt
repnz
fucomi
cmp
repz
in
fdivs
int
in
rorl
cmp
fmull
lret
xor
lret
xlat
rcr
cmp
rcr
iret
jecxz
repnz
hlt
jmp
into
xchg
push
pop
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
mov
jle
add
lock
out
lret
leave
ljmp
cmp
aas
loopne
aas
ret
jecxz
and
in
in
ljmp
lock
fidivl
fdiv
rolb
ret
decl
ss
out
xlat
cmc
into
cmp
fcmovnu
sarb
in
out
movb
fcmovnu
or
hlt
iret
ss
int3
cmp
rcl
xor
cmp
in
rolb
clc
stc
out
out
nop
incl
cmp
out
xor
roll
test
enter
in
out
int
nop
hlt
xchg
rcl
xor
leave
leave
repnz
xlat
cmc
ret
call
jmp
mov
sti
icebp
adc
aam
ret
xor
out
loopne
loope
hlt
cli
orb
out
sti
fisttpl
enter
cmp
into
call
fcmovne
stc
repz
stc
icebp
loop
std
out
lock
leave
out
int
mov
hlt
stc
cli
iret
aas
incb
or
cld
out
jmp
xchg
lret
fcomip
fidivl
rcr
in
hlt
leave
sar
cmp
adc
out
test
loop
xlat
in
test
nop
in
xchg
mov
in
jecxz
aaa
cmc
out
leave
xlat
enter
sbb
lret
clc
jecxz
nop
loop
mov
out
xlat
out
lock
hlt
sub
xchg
inc
cmp
std
out
jmp
loope
clc
loopne
xor
div
sar
icebp
or
in
out
repz
mov
jecxz
adc
lret
cli
fadd
out
cld
cmp
std
fidivrl
ror
fadd
rol
jecxz
int3
cld
nop
loopne
jmp
repnz
in
stc
lock
out
ror
stc
out
iret
cmp
shr
lds
shr
in
cld
lret
xor
out
jecxz
test
aad
sti
fcomp
lret
out
test
out
das
rcl
lret
fdivrp
push
add
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
fldt
add
jle
add
cmp
aas
ret
jmp
nop
mov
in
rcr
xor
shl
xlat
xor
loopne
inc
stc
mov
fdiv
fildl
mov
lds
cmp
loopne
repz
shl
ds
jmp
rolb
xchg
cld
xor
fadd
out
cmp
in
rcr
in
enter
mov
rcl
loop
not
xlat
stc
out
stc
rcl
aaa
call
iret
out
shl
cli
fcmovu
in
std
fsubr
jmp
repz
call
int
cmpl
enter
fisttpll
icebp
lock
in
xlat
leave
out
repnz
cmc
loope
test
rcr
test
test
loop
shr
in
fists
ret
int3
aad
cmp
into
out
cmc
bnd
std
lret
fldl
xchg
sarl
fidivrs
aam
into
out
aas
fsub
div
test
call
sub
enter
out
enter
ss
cli
fiaddl
sub
jmp
cld
mov
iret
ljmp
lret
push
lock
into
rorl
leave
fucomi
icebp
or
xchg
aad
xor
rol
lock
cmp
jecxz
clc
cmp
cmc
mov
fildl
iret
cmc
out
fyl2xp1
cmp
fadd
ss
loop
aam
mov
mov
xchg
fucomip
mov
sub
out
jmp
aad
shl
shl
ljmp
xorl
test
lret
fdivp
int
int3
fsub
out
cli
mov
lret
imul
mov
in
jecxz
das
aad
aad
leave
cmp
jmp
loopne
cld
add
incl
test
fcoml
vpsubusb
into
cmp
loopne
hlt
mov
sbb
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
or
jle
or
jle
lock
sub
loop
out
leave
sar
cmc
cmp
ds
hlt
fcmovne
mov
cld
or
shlb
lock
stc
leave
std
into
in
cld
lret
stc
loop
neg
out
cmp
neg
loope
mov
cmp
cmp
cmc
sti
cli
sarb
ret
fcmovnb
ffreep
mov
orl
out
xor
ss
ror
cld
or
aam
les
repz
jecxz
xchg
test
nop
rol
call
lret
lret
div
aas
lds
repz
mov
test
std
jmp
mov
cmp
int
ds
cld
shl
repz
faddp
or
loop
into
in
rolb
cli
call
loope
xor
adc
cld
enter
jmp
out
test
lret
jmp
aam
cmp
cmp
test
in
cld
lret
xchg
xchg
ljmp
cmp
jmp
jmp
aas
cmp
sar
fildl
fucomp
xchg
in
mov
not
ret
fprem
out
cld
divb
cld
hlt
fiadds
jmp
mov
call
rcl
cmp
loop
cmpb
aam
cld
loopne
enter
sti
test
shl
test
fdivs
fdiv
sti
clc
cld
loopne
loopne
iret
out
ror
ljmp
call
lock
clc
fldl
addb
xchg
rolb
cli
rcl
sti
jmp
roll
test
lock
test
not
ror
mul
xor
repnz
cmp
fcomp
aas
not
std
loope
lea
mov
icebp
mov
xor
idivl
shl
ljmp
adc
jecxz
jecxz
int
xchg
mov
aaa
sti
mov
mov
and
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
xchg
movsl
pusha
je
or
or
jle
cmp
idiv
rcr
rcl
shl
cli
icebp
test
clc
in
ror
in
aam
ret
hlt
hlt
xlat
ljmp
in
in
cmp
in
fadd
sub
mov
into
xchg
in
in
jmp
cmp
cli
loopne
cmp
aas
loopne
ret
mov
out
lock
xchg
in
mov
loopne
xor
xlat
cmpb
idiv
adc
loope
mov
int
test
call
out
cmc
sar
cld
test
call
out
rolb
stc
std
mov
hlt
and
shlb
div
lret
cmp
fcomp
fidivrl
div
call
int3
in
call
jmp
in
xor
in
jmp
cmc
in
fneni(8087
lret
fadds
test
xchg
inc
jmp
xchg
out
divb
sub
jmp
out
sar
cmp
testl
ror
icebp
jecxz
cmp
out
fistpll
ds
shl
mov
lret
out
in
nop
into
call
aad
fcmovnu
cmp
fsubr
lret
out
test
fadds
ficoms
rorl
in
ror
enter
out
sar
out
sar
filds
enter
test
xor
aad
std
fidivrl
std
out
iret
repnz
neg
and
in
fdivr
lret
test
mov
in
in
icebp
aam
ss
cmp
cmpb
xlat
and
mov
ljmp
aas
in
in
xor
cmp
hlt
aas
loope
fld
leave
ret
shl
lret
into
xchg
aaa
in
out
sti
int3
out
repnz
cmp
rcl
lret
fimull
icebp
shr
das
xor
test
fcmovbe
ds
xchg
xchg
test
lock
shll
cmp
loope
mov
adc
mov
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
pop
or
or
jle
loopne
in
jmp
ljmp
imul
in
leave
jmp
flds
loop
lret
stc
loopne
xchg
fsts
clc
xor
aam
call
cli
fnclex
jecxz
div
sti
repz
fiaddl
loop
out
mov
ror
lret
ss
clc
aad
out
repnz
decb
fxch
orb
loope
out
aaa
cmp
repnz
cmc
sarl
loop
out
ds
mov
out
out
xlat
mov
repnz
icebp
iret
lret
out
cmp
hlt
fcmovbe
ljmp
vpsubsw
cmc
in
out
mov
in
loop
xlat
cmp
cmp
out
cmp
cmp
fcomp
test
cmp
test
and
in
xor
jmp
ds
cmp
fiaddl
call
fcomi
in
repnz
in
out
lock
rol
iret
cli
add
ror
fldl
xchg
out
orb
sti
out
into
int3
cmc
loope
loopne
fcmovbe
shl
out
aam
lret
fimuls
fsubr
mov
test
jmp
ds
sti
sar
shl
fildl
ljmp
lret
cs
into
lret
incl
out
cmp
mov
leave
lret
call
int
jmp
loopne
cmp
xor
jmp
icebp
shl
fucom
mul
lock
cmp
shr
aaa
xor
std
fsub
repnz
cli
loopne
stc
mov
mov
out
aad
shll
call
out
cmp
into
cld
neg
xchg
incl
out
in
loopne
loopne
rcl
shlb
call
fscale
cmp
shl
xlat
repz
loope
cmc
loope
lret
xor
div
fdiv
incl
mov
aad
in
jmp
mov
fmulp
ret
in
cmp
jmp
fstp
je
xchg
or
loopne
jle
or
jle
xlat
out
icebp
into
repz
fsubrp
ljmp
jmp
test
fsubp
fucomip
repnz
cmp
int
fcos
fnstsw
aam
cli
fnstsw
icebp
jmp
xchg
sub
sbb
xor
jmp
clc
clc
lret
and
call
into
call
int3
in
loope
in
sub
icebp
rolb
rcr
jmp
into
flds
repnz
jmp
sarl
fstpt
icebp
hlt
stc
mov
or
mov
xchg
jmp
test
ror
in
fcmovbe
not
iret
out
in
int
fcomi
out
out
cli
clc
out
loop
xchg
call
in
fmulp
ljmp
repz
repnz
fsubr
xchg
fisttpl
sub
enter
leave
aad
cli
lock
std
mov
fildl
stc
shl
call
enter
xor
in
fsubrp
into
ljmp
rorb
lret
std
repz
xchg
iret
cmp
out
repnz
xor
cmc
cli
and
adcb
cli
xor
enter
not
shl
aas
loope
loop
hlt
out
lret
test
lret
mov
repnz
imul
div
lret
cmp
fsub
loope
xchg
xor
mov
fsubp
nop
jmp
xor
cmp
cmp
cli
rcl
mul
repnz
in
mov
in
enter
xchg
not
fdiv
jecxz
icebp
lock
cmp
ret
clc
icebp
xlat
loopne
sbb
fadd
loope
sti
std
iret
lret
loope
lret
sub
in
out
into
std
std
neg
icebp
icebp
cmp
jmp
jmp
xchg
shr
clc
enter
cmp
out
cmp
lret
cmp
in
clc
fcmovbe
idiv
fldl
or
mov
sarl
fdivr
in
mul
cmp
test
push
add
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
int
push
jle
or
jle
repnz
in
lret
test
jecxz
fiadds
sub
lret
xor
sti
aam
fucomip
cld
and
xlat
out
out
mul
cs
out
stc
iret
sti
cmp
cmpb
cld
lock
fsub
call
rorl
xlat
loop
vpslld
jmp
int3
lock
in
shl
jmp
std
loopne
int3
xchg
lock
rclb
in
jmp
bnd
ljmp
fadd
clc
test
in
stc
rol
call
cs
aad
cmp
in
ss
in
cmp
clc
int
repz
fistl
hlt
aam
ss
out
ror
in
hlt
stc
xlat
sar
into
int3
roll
cld
ljmp
xchg
loopne
in
in
int3
call
stc
xchg
xchg
test
test
in
in
in
repz
int
iret
ret
cld
stc
cmc
test
decb
in
jecxz
xlat
xor
jmp
jmp
ror
jmp
repnz
lret
int3
fabs
loope
call
clc
iret
in
cmp
cmp
out
jmp
ret
cli
fdiv
incl
loop
int
ljmp
ret
ljmp
cmp
cmp
cmp
xlat
int
out
fdivrp
in
mov
rol
lret
ror
cmp
sar
add
fiadds
lea
xlat
out
shr
in
out
hlt
cld
fcmovnu
ret
sarb
fmuls
fucomip
hlt
cmc
int
aas
sub
jecxz
int
lret
ror
shl
shl
repnz
out
les
test
mov
xchg
cmp
xor
cli
lock
out
iret
leave
cmp
mov
neg
in
clc
enter
nop
cmc
adcl
fcmovnbe
rolb
cld
enter
test
movb
mov
mov
mov
jmp
leave
ret
int
int
mov
aaa
push
adc
or
jle
cmc
out
ret
stc
xlat
lret
xor
aas
shr
int3
idivl
loope
test
imul
xchg
and
sub
out
clc
cld
rcr
cmp
aad
lock
out
std
leave
mov
xchg
leave
jecxz
out
shl
shl
clc
rcl
out
shl
testb
movl
xchg
out
ret
aaa
enter
rcl
icebp
lock
cld
loopne
test
in
loopne
or
jmp
lret
jmp
fcmovnbe
sar
aam
cmc
ds
mov
enter
flds
loopne
ret
repnz
aas
aas
lock
shl
in
ret
idiv
mov
ffree
loopne
loopne
lret
out
sarl
fdivs
neg
in
jmp
lret
incb
icebp
xchg
out
das
fnstenv
jecxz
rcl
cmc
lock
idiv
loopne
fucomip
fdivrp
sbb
roll
ss
fucomi
icebp
cmp
cmp
xchg
clc
incb
loop
in
aam
rol
rcr
xor
inc
in
cmp
repnz
jmp
loop
into
in
xchg
into
lret
xor
fnstenv
aam
fincstp
ret
ret
icebp
shl
fadd
cmp
in
out
repnz
ret
test
ret
xor
ds
cmp
fcmovnbe
stc
lock
clc
call
loope
nop
call
into
xor
cmp
aad
cmp
mul
jmp
lret
in
leave
divl
aaa
icebp
leave
in
std
fsub
loop
loop
loop
hlt
xchg
aas
cld
ljmp
in
in
repz
clc
imul
jmp
out
std
fnstcw
adc
out
aad
cmc
fmuls
in
in
lret
in
xor
ss
lock
fdivl
sbb
xor
xchg
int3
or
repz
xchg
xor
in
stc
cmp
jmp
cmp
into
jmp
aam
mov
js
sub
add
cmp
test
shl
loopne
sub
jmp
enter
mov
loop
jecxz
fcmovnb
lret
fcomip
cmpl
aaa
fcmovnu
sar
std
sti
fxch
test
lret
jecxz
sbb
das
lret
out
in
cmp
leave
xlat
enter
test
cmp
xchg
mov
int
xor
fst
imul
xor
stc
repz
test
ds
leave
hlt
out
int3
mov
call
fimuls
cld
in
lock
ss
addl
xor
sub
xchg
fiadds
ret
cmp
in
cs
cli
lret
std
fcmovnu
xchg
cmp
testl
test
neg
call
sti
icebp
ret
loope
ret
ds
std
in
out
ror
and
xor
into
cli
jmp
loope
cld
fninit
shl
aad
in
fiadds
call
lret
iret
cmp
icebp
jmp
addb
xlat
xor
mov
leave
loope
rorb
ret
cmp
stc
out
int
into
ret
xchg
cli
into
fdivr
out
xchg
mov
icebp
repnz
jmp
fidivrl
xchg
iret
aas
std
jecxz
enter
mov
mov
rcl
sub
in
imul
cmp
fmulp
dec
sub
in
out
out
repz
icebp
aam
in
aaa
sar
idiv
inc
fcomp
vpsubd
sbb
adcl
lock
shll
in
fcmovnb
xchg
test
or
rcr
jmp
jmp
sarb
rcl
hlt
cmp
cmp
in
nop
test
lret
nop
xchg
ret
out
leave
lret
lret
cmp
xchg
test
mov
xlat
call
out
cld
sbb
ret
out
jecxz
cmc
movl
ljmp
roll
adc
mov
jmp
xlat
rol
xlat
enter
push
data16
sbb
add
fabs
lock
iret
in
shr
fidivrl
cmc
out
lret
fucomip
ret
dec
aad
loopne
call
ror
lock
leave
lret
cmp
cmp
cmc
in
in
addb
dec
xchg
std
mov
xor
fcmovne
cmp
not
fnstenv
test
aam
cmp
lret
enter
or
sub
iret
int3
ss
shr
xor
clc
aas
cmc
leave
neg
sti
into
xchg
and
enter
aad
leave
clc
xor
imul
in
sti
repz
cli
test
mov
sti
orb
out
hlt
ljmp
and
fdivrl
leave
lret
fucomip
fucomi
ror
loop
test
lret
aaa
xlat
std
clc
testb
addb
jecxz
jecxz
jmp
into
cli
fld
out
into
imul
add
sti
jecxz
and
lock
lock
lock
cmpl
in
adc
ret
clc
leave
loope
xchg
mov
loop
jmp
stc
shl
out
jmp
iret
cmp
aad
std
out
std
inc
leave
in
ret
fildl
jmp
iret
idivl
ss
ss
fsin
sti
loope
out
incb
mov
enter
fdiv
cmp
aam
rcr
iret
fxch
icebp
aas
repz
stc
enter
jecxz
xchg
xchg
shl
int3
jecxz
aad
shl
div
in
int3
ds
flds
loope
test
mov
mov
call
test
ds
fucom
ret
int3
mov
mov
out
xor
cmp
xor
fcomp
cmp
xchg
rcl
sbb
and
xchg
repz
lret
fsubr
enter
cmp
idivl
shl
mov
jmp
std
jmp
int3
or
call
xor
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
div
hlt
ret
call
jmp
jmp
aas
cmp
hlt
fdivs
fsubr
leave
aas
leave
aad
icebp
out
aam
hlt
add
out
stc
sub
cmc
in
mov
shlb
shl
cld
out
lock
cld
test
fadd
xlat
in
ret
leave
addl
enter
loop
cmp
iret
clc
shl
xlat
xchg
les
shr
loope
jmp
jecxz
in
rcr
ss
or
iret
incl
fstl
mov
test
xor
stc
repnz
ss
clc
fsub
stc
loop
add
lock
cmp
xor
repnz
std
ret
xchg
ret
hlt
cmc
mov
into
fiaddl
int3
iret
xor
fnstenv
fcmovnu
fnstcw
cmp
cmp
addb
sbb
in
call
cmc
out
cmp
sti
jmp
fcmovu
loop
hlt
ret
mov
rorb
mov
int
in
out
leave
cmp
neg
fldl
mul
loope
lock
xchg
int
out
jecxz
in
xor
iret
fidivrl
add
icebp
ret
cld
xlat
std
stc
sbb
fsubrp
test
call
into
cmp
ljmp
std
shl
shl
rcr
jecxz
cld
fucom
ror
mov
lds
divl
lret
fcomp
xlat
in
into
ret
cmc
xchg
aam
leave
enter
out
loope
int3
shr
repnz
xor
aad
fstpt
cmp
cli
lea
loop
in
loope
das
in
cli
cli
cmp
out
fmul
into
loope
ret
stc
fprem
fcmovb
neg
cmc
leave
lock
aam
xor
xor
jmp
loope
rcl
fcomp
cmc
loopne
out
into
jecxz
int
cmc
ss
lret
sarl
not
cld
stc
xor
xor
aad
movzwl
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
push
and
or
jle
mov
ljmp
xor
xlat
cmp
jmp
cmp
cmp
jecxz
mov
cld
shl
repnz
ret
icebp
fucomi
into
imul
ror
cmp
jmp
clc
ret
test
sti
in
out
ret
call
xor
in
ljmp
fsubrp
cmp
call
ljmp
aad
in
fcom
shr
enter
jmp
cmp
sbb
mov
mov
in
mov
int3
hlt
xor
xor
xorb
cmc
fadds
test
lret
xchg
repz
icebp
ss
fcmovu
cmc
cmp
int3
faddp
in
incl
fucomp
repnz
mov
xor
call
shl
cmp
and
fldl
mov
out
lock
in
loop
sub
clc
into
xor
iret
jmp
cmp
std
rcl
xchg
ret
xchg
lret
lock
cmp
fcom
lret
cmp
iret
aad
fdivl
out
aam
sar
fcomp
sti
out
in
ror
jmp
stc
fdivr
repz
xor
cmp
std
lock
out
fucompp
enter
xchg
xchg
loopne
rcr
cmp
cld
cmp
sar
cmp
idivl
std
rcl
in
test
movl
out
cmp
sti
into
fcomp
cmp
xchg
sti
rcl
ffree
ljmp
mov
int
in
ljmp
in
repnz
addl
loop
loop
fimuls
aaa
jmp
cmp
ret
aaa
lock
repz
repnz
or
int3
jmp
repnz
idiv
ljmp
aas
cmp
fsubr
loopne
repz
or
test
leave
test
into
out
iret
rcl
sarb
cli
aad
aam
fmul
icebp
aam
fucomp
lret
fmul
jecxz
loopne
cli
ljmp
mov
mov
xor
add
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
mov
jle
or
jle
stc
clc
ljmp
loop
aad
fucomp
mov
repnz
ljmp
cmp
cli
lret
shll
neg
icebp
rcr
test
loop
out
xchg
cli
fmulp
mov
aam
cmc
fdiv
cld
fnstsw
sti
aas
fidivrs
and
repnz
fadds
decb
int3
lock
xlat
cmp
ror
cmpl
out
jmp
fsubrp
lret
repnz
lret
not
call
fcmovb
addl
fsubr
mov
fildl
shll
std
repnz
loopne
out
int
leave
jmp
out
mov
ljmp
aas
idivl
fcomp
fstp
sti
mov
in
fcos
mov
mov
fidivl
loopne
cmp
fdiv
out
rcl
cmp
test
xchg
fcoml
repz
lret
cmp
jmp
rcr
loopne,pt
sti
fiaddl
sub
nop
int
xor
in
int3
in
leave
fcmovu
shl
sar
filds
aas
lea
iret
not
repz
int
fnstcw
out
ljmp
aas
fcomp
fmul
out
xchg
loopne
fsubrp
rcl
ror
test
repz
cmp
sarb
aam
std
mov
aam
cli
in
fadd
loopne
int
shl
xor
call
fldpi
sti
incb
vshufps
cli
nop
test
std
loopne
loop
aaa
xor
fnstsw
aad
cld
ret
cli
loop
cli
movb
lock
test
repnz
enter
aad
aam
shl
jecxz
loope
mov
fmul
test
ljmp
jecxz
repnz
out
in
lret
in
loope
test
icebp
roll
loope
sti
orl
repnz
ljmp
shl
into
sub
mov
jmp
int3
enter
lret
int
stos
test
xchg
mov
push
sbb
jle
add
icebp
leave
mov
mov
in
in
fstp
sub
int3
xor
faddp
std
lret
aam
rcl
rcr
cmc
in
sti
into
rorl
bnd
in
cmp
rolb
ret
mov
jmp
std
jmp
xchg
in
int3
into
fstp
cld
repnz
into
aaa
lock
clc
filds
jmp
iret
ljmp
out
ss
ds
out
test
mov
in
fucom
in
lret
in
out
xlat
test
cmp
clc
cli
sub
clc
add
mul
faddl
loopne
lock
xor
lock
cmc
lret
cli
cmp
clc
repz
icebp
clc
neg
out
loope
lea
out
shlb
enter
fprem1
jmp
out
repz
clc
lret
out
clc
std
cmp
shl
icebp
icebp
loope
icebp
jmp
fldl
fimull
out
icebp
xchg
jmp
xor
in
xor
iret
call
loope
loopne
repnz
fucomi
out
shl
int3
loop
out
xor
ljmp
out
xlat
cld
in
loope
roll
fcmove
mov
fmul
in
mov
xor
loope
idivb
out
cmp
fnstsw
iret
loop
iret
cmc
in
mov
in
in
mov
mov
xlat
in
ret
cmp
jmp
and
stc
sti
stc
sbb
in
out
test
test
loop
aam
in
in
cmp
iret
shl
and
call
movb
mov
jecxz
xor
fdivrs
aas
enter
addl
cmp
nop
stc
cld
rol
jmp
ror
ret
repz
aam
lret
in
sar
neg
mov
repz
lock
shl
cmc
fadd
rcr
cli
cmp
cmp
ret
cmc
loop
loop
out
mov
xchg
mov
lock
movzwl
sub
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
sub
rcl
jmp
fdiv
stc
test
rorl
stc
lret
iret
xor
or
cli
icebp
stc
clc
lret
xlat
cli
loop
sar
cmp
les
nop
cmc
nop
das
cs
cmp
jmp
aas
ds
addb
loop
add
test
xor
stc
ljmp
in
inc
cli
xlat
shl
hlt
aam
loope
jecxz
mov
mov
hlt
lret
out
cmp
aam
shl
addl
test
clc
in
test
aam
fdivrs
int3
xor
aad
clc
aam
mov
loop
in
cmp
icebp
ficoml
test
int
repnz
loope
loop
cmc
fadds
xchg
shl
cld
jmp
divl
fadd
out
rcl
fdivr
shl
std
lock
jmp
sti
addb
leave
sub
in
in
call
dec
aaa
int
repz
fdivrp
mov
cld
clc
mov
call
aad
in
cli
sti
fnstcw
ss
loopne
loope
out
adc
std
in
cli
call
icebp
testb
xor
lret
shr
xlat
les
sti
mov
lret
out
jmp
clc
loopne
shlb
xor
fcmove
fsub
fdivr
fcomip
xchg
xchg
sti
les
rcr
cld
aam
into
divb
neg
out
cmp
cmp
div
icebp
cli
faddp
test
jmp
test
repz
lret
in
repnz
loope
cmpl
and
lret
in
fnsetpm(287
test
ret
xlat
aam
out
ds
fadd
or
idiv
out
test
jmp
ss
aad
neg
fcmovnu
aad
fistpll
clc
cmp
test
or
jmp
aad
shr
iret
shrl
enter
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
int
dec
insb
and
or
jle
hlt
xchg
stc
addb
repnz
jmp
rorl
aaa
cli
movb
cmp
out
jmp
cld
fmull
ss
aam
fistpll
cmp
clc
in
hlt
aad
out
leave
sti
out
ljmp
fists
in
in
cli
not
fcmovb
fucomp
idivl
sbb
mov
in
rcl
loopne
fdivs
loope
idiv
dec
shl
stc
stc
leave
mov
lret
xchg
hlt
xor
stc
out
cmp
cmp
shr
test
std
xlat
fsubrp
enter
jmp
repz
enter
in
sbb
fucom
hlt
xor
sbb
in
in
lret
mov
loopne
shl
repnz
leave
aad
lret
cmp
ret
sar
ret
repnz
sti
xlat
mov
in
mov
aad
xor
rcr
cmp
lock
cmp
repz
out
fiadds
loopne
fcoml
lock
rol
enter
loopne
fld
cld
sar
mov
loop
enter
loope
loopne
int
aam
hlt
cmp
fcmovbe
lret
rcr
fnstsw
fdivr
aam
leave
call
xchg
mov
sti
repz
ljmp
test
fdiv
out
mov
in
loopne
out
mov
imul
icebp
repz
out
xor
ss
fisttps
fsub
fmulp
out
in
ror
call
clc
call
in
cld
repnz
enter
cld
mov
int3
nop
rorb
fdiv
fmul
icebp
int3
shr
icebp
cmp
ds
or
add
mov
shl
out
xor
ss
stc
lock
and
aad
cmc
mov
and
rcr
int3
mov
fadd
cmp
out
cmp
cld
repnz
fcmovbe
rolb
jmp
icebp
mov
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
xchg
jp
jle
or
jle
xchg
int3
fucomp
out
ljmp
rcl
cmp
repz
test
ret
xchg
aam
dec
std
repnz
xchg
jmp
cs
fsubrs
cli
out
cli
filds
shl
cld
imul
in
int3
fucomp
fcmovne
mov
int3
cmp
fcmovbe
or
rcr
in
repz
mov
lret
xchg
aaa
out
xor
loopne
ds
shl
rorb
incb
ljmp
out
cmp
in
rolb
lock
in
int
clc
sti
loopne
lds
mul
lret
fcmovnu
hlt
cld
roll
fsub
clc
mov
xchg
lret
ror
sar
std
repnz
jecxz
fcmove
jmp
incl
repz
in
lock
xchg
aad
call
in
cmc
sar
ret
shr
int3
lret
int
clc
ror
xchg
roll
call
call
cmp
in
ss
cmp
cmp
fnstcw
rcl
mov
ljmp
repz
aam
cmp
neg
call
ror
cmp
cmp
icebp
adcb
xor
jecxz
clc
fstpt
test
loope
aad
call
leave
std
jmp
ret
in
iret
lret
into
fmul
shl
fnstsw
hlt
ret
div
mov
shr
xlat
sti
fadds
loope
ret
int
repnz
call
xlat
ret
rcr
in
hlt
lret
ljmp
div
in
fmul
ror
lret
int
sar
cmp
mov
std
int3
mov
loopne
sar
std
bnd
rcr
repnz
repnz
cmp
cmp
out
cmp
xchg
out
mov
ror
loop
aaa
fcomp
in
lock
je
jmp
aam
int
aad
fldt
sbb
or
jle
loope
clc
fsub
vcmpps
sti
jmp
les
decb
in
aad
out
fldl
out
cmpl
ret
cmp
fsubr
in
xchg
div
rol
aaa
cld
xor
cmp
ret
rolb
jmp
fimull
fsubr
lret
cmp
ss
stc
sbb
idiv
in
fsqrt
int
clc
mov
cli
into
lock
lret
leave
enter
roll
cmc
frstpm(287
fimuls
loop
lret
repz
into
xor
rcl
clc
fcom
in
lock
hlt
mov
std
jmp
test
mov
xlat
xor
in
lock
ss
stc
int3
out
clc
cld
std
ds
stc
fmulp
enter
out
call
loope
lret
ror
out
jmp
into
not
shl
xchg
leave
add
lret
cli
sti
repz
out
lret
fidivl
ror
out
ds
fstp
sbb
out
fst
call
xchg
addb
jmp
iret
fidivs
repnz
aad
xlat
test
test
xchg
les
xchg
lret
ror
repnz
neg
icebp
fcmove
lret
lret
ljmp
test
mov
int3
mov
loop
leave
lret
cmc
flds
sti
loope
loop
test
lea
cld
ljmp
ljmp
cli
rcr
fucomp
fdiv
add
out
mov
cmc
xchg
out
rol
cmc
xlat
fdivrs
cli
cmp
in
repz
test
loope
out
fadds
out
sub
into
cmc
clc
out
cli
faddp
rcl
sar
jmp
sbb
clc
mov
lret
leave
cld
fcomi
aam
icebp
stc
jmp
loope
ds
in
fadd
vpsubw
sti
out
xchg
out
loope
cli
clc
in
cmp
fdivr
icebp
fcmovnbe
inc
fcom
test
sar
int3
mov
mov
mov
jmp
aam
iret
int3
fst
outsl
fmull
data16
daa
jle
or
jle
lock
out
in
shl
fsubp
jmp
hlt
sar
not
fcomp
cmp
out
call
clc
in
ret
nop
out
incl
xor
in
jmp
and
aad
out
stc
movb
loope
ljmp
jmp
shl
jmp
jmp
jecxz
stc
jmp
lret
repz
out
iret
in
fsubp
cmp
jmp
mov
dec
in
lock
out
ret
in
ret
enter
aam
lret
testb
fadds
loope
out
in
jecxz
in
in
xlat
stc
clc
into
fdivrp
stc
jecxz
cmp
out
sti
mov
jmp
xchg
fimuls
ljmp
aam
xor
out
into
out
clc
fiadds
orl
xor
sti
out
fisubrl
fdivrp
into
cmp
sbb
std
in
out
lret
ljmp
out
aaa
into
jmp
xlat
loopne
loope
repz
or
xlat
out
nop
mov
loope
mov
sti
fcom
ds
cmpb
cmp
fildl
call
xor
jmp
sti
out
das
fmul
iret
cmp
cld
xchg
jecxz
test
jmp
xchg
lret
into
loope
fmul
repnz
in
aaa
fbstp
cmp
idiv
not
loopne
rol
out
orb
cmc
ret
icebp
lock
aam
sti
ljmp
filds
aam
test
ljmp
icebp
shl
xor
stc
cmp
fsubr
cmp
aad
fcom
std
and
iret
jecxz
fimuls
cmp
out
clc
out
cli
loop,pt
sarl
test
repz
mov
iret
rolb
rol
in
rcl
sti
lock
sub
out
roll
lock
mov
icebp
xchg
out
cmp
leave
enter
inc
cmp
add
add
leave
xlat
int
fstp
cltd
sbb
stos
and
jle
or
jle
hlt
in
jmp
sar
out
loopne
orl
roll
iret
int
aam
xor
fadd
hlt
aas
std
test
std
xchg
loopne
sub
repnz
fcomip
in
clc
aad
icebp
test
iret
in
or
xchg
sub
cmp
int
xlat
cmp
aam
ret
rcl
mov
cld
and
repz
cli
xor
call
into
shl
and
std
lret
loopne
in
in
xor
iret
cmp
cmp
jmp
repnz
repz
mov
xchg
out
loope
xor
enter
into
cmp
rcl
sti
cld
rolb
decl
xlat
aaa
int
fst
cld
idivb
test
cli
movl
jmp
out
int
xlat
hlt
cmp
xchg
jecxz
sti
enter
mov
orb
mov
fcmovne
cmc
shr
stc
ret
loopne
fucomip
cld
fmull
jmp
xchg
xor
in
repnz
hlt
dec
into
hlt
jmp
test
fmull
test
mov
in
call
cmp
aam
in
xchg
cmc
incl
fisttps
xchg
stc
fdivrl
jmp
aaa
aas
fcmovnb
cmp
cli
lds
test
int3
test
mov
aaa
imul
cli
std
lret
aam
test
lds
add
enter
rcr
out
jmp
xlat
jecxz
aam
in
int3
aad
cli
fcom
cmc
hlt
loop
aas
cli
ljmp
in
shl
cmc
xor
div
cmp
fmulp
repnz
ret
loop
fxch
loop
hlt
fsub
lea
xchg
xor
jecxz
xor
cmp
sar
shl
ret
icebp
ror
clc
rorb
add
rorl
add
jmp
rol
xlat
int
arpl
mov
jl
push
jle
add
test
mov
out
test
nop
loop
iret
leave
leave
xlat
div
jmp
int3
fld
test
loop
mov
ret
out
fldl
filds
in
clc
imul
cmp
ljmp
loop
sbb
fstp
mov
rcll
in
sarl
cmp
cli
jmp
in
out
sti
lret
call
int
xchg
nop
jmp
in
std
lock
iret
int
rol
std
rcr
cli
in
leave
sbb
xor
jmp
call
hlt
fmul
push
int3
aas
fildl
rorl
jmp
xchg
and
int
in
int
xlat
rcl
icebp
ljmp
out
hlt
fisttpll
call
test
in
int3
jmp
cmp
in
out
cmp
out
int
ror
jmp
clc
fdiv
leave
int
mul
out
xor
rol
sti
xlat
fstp
jmp
sar
in
mov
jmp
or
mov
das
into
aaa
repz
cmpb
fstp
jecxz
not
mov
leave
out
enter
out
std
xchg
into
iret
xor
in
aas
std
in
loop
test
call
mov
mov
in
into
loopne
in
hlt
shl
jmp
fucomip
cmp
aas
out
aam
fcmovb
out
out
incb
mov
xor
jmp
out
out
loopne
rcr
fld1
loope
jmp
iret
int3
stc
cld
mov
into
in
ljmp
cmp
int
ds
out
ret
call
mov
int3
loopne
in
sub
xor
out
cmc
clc
lret
icebp
aad
fdivrs
loop
sti
mov
jmp
xchg
in
lret
cli
lret
dec
call
in
frndint
stc
cld
test
clc
lret
repnz
test
f2xm1
int
in
enter
into
jecxz
cmc
xlat
cmp
fmul
xchg
addl
out
mov
jmp
enter
ret
xorb
cmpsl
shrb
jle
idiv
cmp
cli
sbb
std
cmp
idiv
and
in
xchg
out
out
cmp
in
fcmovbe
call
sti
shl
fnclex
loopne
int
out
fcoml
out
clc
icebp
fldlg2
stc
xor
jmp
jmp
rcl
sti
sbb
imul
fdivr
out
xchg
out
loop
in
repnz
xor
aad
into
hlt
test
cmp
clc
ret
loope
aad
jmp
xor
fcomip
aam
ror
ret
fcmovnu
fdiv
and
int
cli
std
movl
stc
fadd
fdivr
xlat
into
in
cli
xchg
rcll
ret
fidivl
cmp
hlt
xor
repnz
cld
aam
loopne
in
mov
repz
shl
xorb
into
cmc
hlt
fld1
aad
in
int
stc
repz
leave
xchg
mov
repnz
xor
repnz
lret
lock
enter
sarb
std
loopne
in
out
xchg
fcom
leave
call
sti
fadd
stc
in
int
test
out
jecxz
sti
mov
stc
clc
xchg
nop
mov
icebp
xlat
shl
sub
lret
jmp
addl
std
add
std
test
fsubp
aam
ret
stc
out
in
aas
repnz
std
stc
call
loope
sbb
into
call
iret
imul
jmp
fdivp
testl
mov
ljmp
shr
ret
stc
cmp
rcl
aas
clc
out
loope
idiv
mov
in
flds
rol
in
sti
fyl2x
cld
ss
adc
ret
xchg
shl
loope
fucomip
jmp
mov
xchg
shr
call
in
xlat
jmp
loope
fisttpl
lret
sti
lret
repz
lret
not
mov
ror
shl
inc
or
jmp
leave
xchg
aaa
cmp
inc
into
das
jle
or
jle
cmpb
mul
enter
out
repnz
xor
iret
repz
ljmp
int
jecxz
fcmovnbe
mov
into
out
fdivr
shl
iret
shl
sub
shl
call
repz
xlat
repnz
in
int
addl
in
repz
sarb
std
rcr
rcr
not
ffreep
enter
cld
leave
xchg
in
int
out
call
in
ror
repz
sti
into
repz
faddp
cli
aam
out
ljmp
rcl
ljmp
jmp
cld
cmp
fmulp
int3
test
loop
addb
clc
sti
rcl
in
lret
sti
test
in
xlat
lds
fcomip
into
into
fsubp
jmp
test
ror
cli
lret
icebp
into
xchg
cli
std
loopne
and
test
fstl
cli
int3
cmc
cmp
lock
in
test
cmp
clc
jmp
mov
sub
int
rcr
out
das
repnz
xor
fcmovnbe
inc
ds
loop
shl
test
out
cli
in
mov
out
sti
out
shl
jecxz
in
cmp
lock
out
in
aad
repz
std
leave
xchg
in
call
mov
fsubrp
cs
fnstenv
ljmp
shr
jecxz
in
mov
loop
jmp
lock
repz
int
shr
std
sbb
loope
sti
lock
mov
hlt
in
enter
out
cmp
enter
sti
addl
int
or
std
loope
jecxz
enter
cld
leave
aas
fcmovu
shlb
out
in
fmull
mov
lret
call
das
xor
aam
clc
push
lret
fidivrl
aam
fiadds
jmp
sti
in
sub
rolb
call
int3
in
clc
out
lret
xchg
shl
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
mov
lock
xor
out
cli
std
lock
lret
in
jecxz
out
sti
push
add
mov
in
into
loopne
in
repz
lret
into
fucomp
shl
repz
repnz
lret
ret
fcmovnu
fsub
ljmp
iret
les
cmc
fmul
in
fstpt
aas
cmp
cli
lock
hlt
loope
ret
xlat
clc
fimuls
loope
shr
xor
icebp
cmp
rcr
sti
cmp
in
shl
cld
in
mov
xchg
cmc
lock
stc
xor
clc
sarl
in
into
sti
cmp
rcr
shl
orb
enter
xchg
int
fsubrp
lock
jmp
shr
call
cmp
xor
jecxz
cmp
aam
sti
cmp
mov
in
xchg
in
lret
xor
jmp
xor
not
faddl
les
std
out
xchg
int
mov
int
in
leave
out
sarl
aas
idiv
rorb
ret
cld
in
mov
out
bnd
out
repz
fcos
lock
cmp
rcr
sti
fsubr
hlt
int
int
leave
test
call
cmp
into
repz
shl
xchg
fucomip
test
nop
loop
leave
xor
shr
sti
rcl
out
xor
cli
fcomip
int3
frndint
loopne
in
out
repnz
fst
cmp
rolb
int3
xchg
mov
hlt
out
int3
shr
ss
cmp
repnz
cmp
shl
loope
leave
enter
iret
out
call
ret
fcomip
lret
div
rol
sbb
aas
jmp
mov
xchg
iret
xchg
int3
fdivp
iret
bnd
xor
rcr
ljmp
ret
loop
std
call
lock
xchg
xchg
repnz
stc
sarb
shl
xchg
cld
repnz
repz
xlat
fsubp
mov
xacquire
xlat
leave
lret
fidivrl
into
rol
or
jmp
ret
enter
int
aas
icebp
jg
xor
ljmp
jle
loope
add
fsubp
cmp
test
in
int3
jmp
xor
xor
sti
ror
into
repnz
jecxz
lret
mov
nop
popl
in
ret
xlat
xor
xor
repnz
test
icebp
loope
jmp
loopne
push
loopne
xchg
loope
stc
xor
call
cmp
loope
xchg
test
addb
ss
lock
lock
stc
test
call
call
clc
cmp
cmp
cmp
loopne
cli
loop
loop
xor
fildl
fmulp
in
cs
repnz
aad
icebp
cmp
stc
iret
loopne
iret
shl
fiadds
decl
roll
rol
repnz
out
into
jmp
out
fcompp
loope
out
testb
out
icebp
call
das
int3
stc
in
cmp
int
fsubp
fadds
cli
clc
int
xchg
test
xor
aaa
aad
xor
ret
clc
fildl
call
test
out
mov
call
in
rcl
cmc
inc
repz
mov
in
xchg
div
ljmp
lret
ds
repz
mov
out
rorb
loope
jecxz
lret
sbb
repnz
cli
stc
std
std
fsubp
out
into
out
cld
icebp
call
in
aam
leave
icebp
aaa
ss
cli
cmp
in
ror
sti
cmp
xchg
addb
in
testb
jmp
rcl
out
icebp
aam
jmp
cli
or
lret
xchg
out
int3
in
sarb
jmp
iret
ret
and
ret
fucomp
cld
fisttpl
xchg
jecxz
in
lds
xor
sti
sti
sbb
cld
jecxz
fmuls
sub
inc
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
or
clc
xor
jle
lea
xor
cli
icebp
neg
fcompp
lock
fneni(8087
shl
icebp
stc
dec
jmp
stc
iret
or
in
in
cmp
in
lock
cmc
in
in
cmc
xlat
les
mov
test
ss
fcom
cli
cmc
stc
int3
cld
clc
loop
in
jmp
xabort
test
mov
in
aad
std
ds
addb
xchg
test
filds
ror
xchg
mov
in
shr
cmp
sti
cmp
int
std
icebp
ret
aad
cld
std
sti
iret
nop
int3
loop
test
xchg
aaa
iret
ret
out
xlat
cmp
out
loope
in
loopne
cmp
testb
int
xchg
jmp
jmp
shl
out
int
aad
in
cmp
call
les
and
loopne
ret
div
aam
cmc
in
stc
div
fsubr
rcr
std
out
cld
std
fcmove
cld
out
ror
clc
fptan
rcl
icebp
out
aam
repz
idiv
shl
loop
sar
fucomp
ret
in
fnop
jecxz
int
in
imul
jecxz
call
hlt
std
rcl
ret
lock
out
jmp
aaa
out
sub
cmp
xor
in
iret
divl
aam
test
and
stc
in
test
out
leave
test
test
xor
sti
fcmovnbe
icebp
out
fildl
in
aam
add
into
xchg
and
cld
sti
leave
aam
cmp
aad
in
lock
lock
cld
fdivrp
ljmp
in
xlat
ss
leave
ror
fucomi
aaa
push
xorl
lds
std
or
in
out
enter
divb
xor
cmp
lock
cmp
add
aam
clc
fucomi
leave
xchg
ficoms
aaa
ret
fcomp
rcl
ljmp
int
sti
cli
fadd
cmc
call
cld
out
int
shr
int3
stc
repz
fcom
mov
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
lret
cld
out
fdiv
iret
fadds
mov
mov
sbb
xchg
sub
ret
xlat
cmp
fdiv
in
call
aas
div
fdiv
std
les
mov
cld
and
ljmp
out
sub
icebp
in
stc
mov
fxch
fmul
in
cld
xchg
aad
in
aad
in
in
into
repz
int
rcl
repnz
ret
cli
nop
out
xchg
fists
stc
neg
clc
aad
cmp
mul
cmp
call
iret
xchg
shr
lret
test
int3
or
xor
ss
into
fidivrl
cmp
cmp
rol
fucomip
testb
fcmovnbe
lret
aas
iret
xlat
xor
fnstcw
ret
fiaddl
fcomip
jmp
icebp
jecxz
fcomip
test
fdiv
cmp
out
enter
loop
loop
xor
and
lret
int3
repz
out
in
leave
sar
cli
ret
cmp
jmp
jecxz
mov
mov
out
in
xchg
iret
shl
shl
std
call
in
aam
iret
aas
rol
lret
icebp
out
xchg
jmp
fyl2xp1
fcmovnbe
ljmp
add
lock
fcmovb
test
orb
aam
fxch
in
in
out
xlat
fiaddl
repnz
lret
in
loop
xor
test
aam
xlat
iret
fldlg2
call
or
xchg
test
jecxz
mov
ret
lock
iret
in
lret
fdivr
fcmovnu
shr
shl
loop
roll
fst
xchg
call
out
ljmp
icebp
std
repz
aam
roll
mov
xor
call
mul
repnz
cmp
stc
ljmp
cld
shl
enter
into
in
in
test
in
int3
cli
imul
cmp
cmp
out
fldl
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
mov
sbb
xchg
cmp
cmp
jle
mov
xchg
neg
aad
fstpt
out
idivb
sarb
hlt
testb
xlat
std
aad
clc
cmp
repnz
decl
enter
cmp
cli
sbb
hlt
out
adc
xchg
fmul
mov
xchg
out
aaa
into
lds
loopne
lret
xor
loope
clc
incl
test
repz
ljmp
cmp
loopne
stc
rolb
xchg
movl
les
aam
xor
sar
lret
in
hlt
aas
cmp
test
fucom
leave
cli
cld
ljmp
divb
cmp
fdivrl
out
int
in
hlt
fdivrp
xchg
lret
iret
sub
cmp
jmp
repnz
add
out
test
cli
jmp
loopne
clc
cmp
aad
cld
cld
xor
stc
fucomp
in
adcb
rcl
icebp
in
mul
aaa
fprem1
icebp
jmp
repz
clc
fisttpll
xchg
xchg
sti
test
xor
xor
stc
cli
hlt
in
cmp
movb
xlat
fcomp
out
jmp
loop
test
cmc
repz
xabort
cmp
cli
std
out
loop
hlt
jecxz
repnz
lret
fdivp
sar
loopne
leave
rorl
cmc
jmp
into
loop
aas
test
loop
mov
lret
jmp
repnz
xlat
out
repnz
cli
fcmovbe
aas
neg
addb
stc
fdivrp
decl
lea
sub
repz
fucomp
aam
cmp
out
rol
or
xchg
std
addb
jmp
in
iret
or
leave
and
incl
out
clc
fnstcw
sar
cmp
in
fcomi
ds
in
cmpb
xchg
std
in
lock
lret
call
aaa
jmp
int
xlat
shl
fnsetpm(287
sti
out
loop
mov
in
cli
aaa
xor
aad
fcmovu
in
out
roll
dec
or
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
out
ficoms
jle
cmp
jle
loopne
cli
idiv
sti
call
shl
jmp
leave
iret
repnz
in
sar
xlat
test
fstp
into
call
and
cmp
out
out
lock
shl
loope
div
xchg
jmp
xchg
mov
fsubr
sti
repz
shr
cmp
icebp
jecxz
repnz
ljmp
in
cli
int
out
aas
repz
repz
fcmovne
int
fdivrl
sar
out
fildl
mov
ljmp
out
cli
loop
fstp
iret
std
aam
cmp
sbb
roll
jecxz
fsubrp
iret
in
ror
in
xor
cmp
icebp
ss
xor
shl
shl
sti
jmp
fucomp
adc
mov
cmp
hlt
jecxz
fmul
leave
cmp
lret
icebp
mov
xchg
lock
loopne
repz
out
repz
not
out
rolb
jecxz
sbb
cmp
cld
test
xchg
out
in
jmp
clc
xor
jmp
fistpll
sarl
in
in
stc
into
loope
mov
inc
test
lock
cli
cmp
loop
sti
std
rol
repz
jecxz
int3
out
int3
cli
out
int3
xchg
aad
leave
out
loop
cmc
aas
test
icebp
fdivrp
xchg
enter
mov
adc
xor
sti
in
ljmp
aam
out
xchg
fdivp
ljmp
shl
iret
xor
out
out
lock
fstp
hlt
cmp
lock
out
fisttps
vpavgw
out
cmp
repnz
sti
vmovq
cld
and
lock
hlt
out
jmp
into
shl
lock
fidivs
leave
fucomp
cmp
test
sti
cld
addb
in
xor
cmp
out
shl
cmc
rcl
in
icebp
add
mov
idiv
sti
out
xchg
lret
in
shr
cli
repz
rol
roll
decb
out
loopne
xchg
in
adc
aad
ret
fxch
ss
stc
sarb
fldl
movl
jne
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
sub
jle
cmp
jle
fdivr
ffree
mov
lret
out
mov
out
int
clc
shlb
in
ror
fcmovbe
cmp
icebp
int
aad
mov
mov
stc
fsub
out
loopne
call
cmp
std
roll
xlat
mov
stc
in
enter
ljmp
sti
xor
clc
lret
cmp
ret
fcomi
sti
test
int3
jmp
in
icebp
sti
lret
fst
loope
out
out
lret
fidivl
cmp
rcl
sub
mov
mov
fstl
jmp
sar
lret
cld
cmp
cmc
in
out
cmp
call
lock
rorl
jmp
vpmullw
rolb
clc
incl
call
lret
in
into
out
xlat
sub
fcos
cmc
int
aam
std
cmc
loopne
call
in
in
repz
cmc
shr
mul
fdiv
rcl
out
aas
into
xor
aam
loopne
sti
test
xchg
out
fnsave
leave
cld
xlat
stc
fcmovne
into
call
fsub
fucom
fisttpl
int3
out
xchg
cs
int
div
aam
aas
out
repnz
cmc
in
hlt
fstp
loop
clc
repnz
out
into
aam
jmp
aad
cli
xlat
xlat
hlt
fdivp
jecxz
roll
jmp
out
lock
xchg
not
loop
jmp
lock
in
fcomi
in
loopne
sub
vpavgw
leave
sub
fidivrs
std
rcr
aam
ret
mov
call
icebp
mov
loop
in
hlt
out
out
sti
icebp
cmp
rcr
idiv
ret
loope
or
out
jmp
jmp
loopne
fcomip
call
xor
icebp
in
ret
fmul
cld
shl
aad
cmp
repnz
iret
repz
xor
int
call
ret
fsub
repnz
roll
lret
addb
shr
shr
cmp
cli
std
xchg
fstp
ret
jmp
in
xchg
sti
loope
out
loop
lret
fidivl
sarl
into
jecxz
icebp
fadd
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
jg
mov
cmp
jle
iret
out
out
std
out
test
xchg
loop
xlat
shlb
clc
hlt
repz
lock
flds
clc
shl
loopne
fimull
lret
mov
ret
out
into
xor
cmp
or
enter
lret
repnz
jecxz
loope
jecxz
xor
xor
stc
lret
adc
test
rol
mov
in
fisttpll
into
nop
testb
repnz
out
icebp
neg
sar
addl
out
in
int3
xchg
enter
fcmovbe
fst
fsub
ljmp
hlt
xchg
mov
lret
lret
clc
cld
std
rorb
in
in
cmc
rcr
aaa
cmc
fcmovnb
and
iret
rorl
test
mov
repz
out
fcmovbe
call
filds
loop
repz
fsubrp
call
fisttps
sti
jecxz
stc
fsubr
cmp
repnz
cli
out
in
fmulp
in
jecxz
addb
loopne
xor
jecxz
rcl
cmp
std
ds
sbb
in
ljmp
bnd
int
std
fdiv
cmp
aad
icebp
cmp
mul
testb
popl
leave
shll
lds
cmp
aad
cmp
aaa
aam
in
xchg
cmc
ljmp
shl
shr
loope
jmp
xor
aam
aam
repnz
lds
testl
int3
out
clc
out
aaa
cld
cmp
stc
cmp
test
std
leave
ret
loop
out
fucomp
lret
xchg
loopne
into
aam
fprem
ror
or
cmp
repnz
call
in
dec
hlt
in
mov
repnz
cmp
int
xlat
std
loope
fcmovbe
and
mov
int3
iret
ror
ficoms
out
xor
cmp
hlt
fdivrp
jecxz
fdiv
loope
loopne
clc
leave
jmp
enter
out
sti
in
dec
rcr
loopne
les
addb
mov
ss
out
idivb
cli
int3
cld
loope
ret
cld
inc
add
push
add
add
leave
lret
aad
flds
mov
decl
jle
cli
sti
ret
incb
loop
fucomp
cld
repz
in
rcl
shl
lret
into
int
xchg
loopne
lret
flds
hlt
fdivp
in
out
fcomi
repz
leave
loopne
cmp
sar
jecxz
or
loope
jmp
loope
int
out
shl
in
int3
std
aaa
sarb
fildl
stc
rol
ljmp
int3
call
sub
shl
repnz
cmp
call
idiv
adc
cli
cmc
xchg
fcmove
lock
addb
repz
addb
in
fdiv
fmuls
lea
ffreep
clc
fdivs
cmp
ljmp
incb
loopne
out
in
mov
in
mul
in
in
cmc
aaa
cmp
cmp
jmp
fistpll
ret
out
ret
fsubrp
mov
mov
vpsubusb
stc
std
jmp
aam
jmp
shl
mov
aam
in
mov
test
lea
cmp
xlat
cmc
lret
aas
fcmovu
aad
les
lret
stc
mov
xchg
loop
jecxz
clc
xor
iret
ljmp
sti
mov
lret
or
std
mov
das
out
rcr
out
into
lret
stc
in
ror
loope
ret
xlat
ljmp
in
jmp
out
shll
lock
rcl
ds
fimuls
int3
call
xor
in
lret
cli
dec
rolb
call
jecxz
test
iret
iret
out
into
aam
stc
xlat
repz
cmp
repz
fnstcw
sar
out
addb
aas
test
orl
rcr
in
call
int3
hlt
loopne
xlat
stc
lret
out
sti
lret
icebp
mov
repz
mov
loope
jmp
cmp
fdivr
shl
out
std
repnz
sub
out
leave
in
mov
shlb
lret
sarl
cli
fstpt
leave
out
shl
test
stc
test
xlat
ret
int
jecxz
in
lret
jecxz
in
lock
fsubp
testl
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
xor
test
addb
rorb
xchg
hlt
enter
xor
cmp
stc
fsubp
xchg
lock
lock
leave
vpand
icebp
clc
ss
clc
cmp
and
fildl
fsts
int3
cmp
clc
lock
cli
xlat
aad
or
aas
hlt
aad
loopne
mov
stc
or
xor
fcom
rcl
aam
cli
idiv
std
into
in
into
ret
fadd
std
fcmovnbe
call
addb
hlt
test
shl
roll
test
shr
stc
out
cld
stc
or
xchg
fdivs
out
out
fcmovnu
cld
sarl
loop
jecxz
mov
call
sar
xlat
shl
fdivrl
xlat
out
xor
clc
int
out
shl
or
mov
in
out
mov
xor
ret
cmp
cli
int3
enter
jecxz
rcl
fnstcw
ljmp
jmp
shrl
rcr
shl
in
into
fnstcw
repz
add
inc
testl
xchg
ss
rcl
iret
std
fdivr
jmp
repnz
fsub
cmp
fsubr
stc
testl
aaa
lret
lret
jmp
fdivr
jecxz
fcmovne
shl
mov
hlt
aam
jmp
ljmp
mov
xlat
icebp
xor
aad
repnz
loop
clc
xchg
xchg
mov
fiadds
rcl
aad
icebp
loopne
shl
sbb
cmp
shr
jmp
jmp
mov
sbb
fucomip
jmp
shl
in
jmp
repz
clc
rcl
cli
sti
std
xor
ljmp
mov
hlt
clc
repnz
icebp
in
aam
loopne
mov
loopne
fcomip
xchg
mov
call
int
cld
in
stc
into
idivb
in
loope
in
loop
cmp
sbb
lret
loope
test
lret
xlat
repnz
xor
repz
fcmove
test
xchg
aam
std
call
xchg
call
into
lret
int
roll
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
divl
inc
or
cmp
jle
out
loop
iret
into
cmp
call
mov
repnz
ret
test
ss
and
aad
cmp
cmc
mov
jmp
xlat
clc
jmp
mov
out
hlt
ljmp
jmp
lock
in
aam
neg
cmc
vpaddsw
jmp
xchg
call
jmp
fxch
cmc
int
int
fistpll
lock
call
cmp
nop
test
ljmp
ljmp
lock
repnz
loope
aam
mov
loopne
loop
ss
lret
xor
iret
test
lds
int
hlt
lret
loope
aad
into
clc
aad
aam
out
out
fadd
out
sar
cmc
aad
out
aas
filds
in
xor
out
aaa
sarb
cli
cmp
loop
rcr
aad
call
loop
in
mov
shl
clc
hlt
repnz
loope
xor
fchs
sti
repnz
mov
clc
leave
test
cmp
leave
xor
les
into
stc
ljmp
cmp
add
ljmp
cmp
in
test
ret
testb
ljmp
stc
fcmovnu
enter
repnz
rcl
loope
shl
faddp
out
call
out
out
repnz
lret
cmp
push
leave
stc
ffree
rol
ret
repz
out
xchg
enter
sti
in
repz
loopne
fnstcw
orb
test
test
fcomi
xor
repnz
ret
out
and
std
lret
mov
fiadds
notb
repz
xor
cmp
fdivp
hlt
xchg
ds
int
int
loope
ljmp
clc
lret
rcr
aas
test
bnd
lds
mov
fdiv
jmp
lret
in
icebp
icebp
hlt
repnz
addb
out
fdivr
loop
out
testb
iret
cmp
mov
jmp
enter
fcmovnbe
fcomp
insb
jae
fiadds
leave
jle
cmp
jle
cmc
rcl
int
out
in
out
out
mov
mov
int
lock
mov
out
shr
fdivs
ss
int
aad
out
loope
clc
test
cmc
std
cmc
fucomip
out
cld
mov
lret
shr
cmp
icebp
xor
aad
xor
xor
aam
mov
aad
int
fucomi
incl
in
jmp
xor
into
ss
and
shl
fucomp
fadds
std
call
jmp
icebp
xor
shr
aas
out
std
jecxz
jmp
jmp
test
out
fucomi
lret
shl
xor
fadd
loopne
xchg
fsqrt
or
std
mov
jmp
int3
out
in
xor
adc
xlat
shl
leave
ror
cmc
enter
loopne
xchg
in
mul
enter
fucomp
clc
rcr
stc
out
enter
into
rcl
loopne
das
loopne
fnstenv
aaa
cmc
aaa
call
cmc
cmp
lock
fdivr
decb
in
hlt
iret
mov
in
in
cmp
imul
std
jmp
iret
sti
icebp
cmc
xor
cmp
cmc
test
in
lret
jmp
out
cmp
hlt
fadds
neg
stc
mov
mov
mov
loopne
test
int3
idiv
loopne
aam
cmp
sti
sti
cld
cmp
fiaddl
or
ffreep
iret
cmp
vpsubw
in
cmp
lock
fcmovbe
stc
jmp
call
mov
call
out
jmp
hlt
in
aad
mov
fisttpl
loope
out
dec
fyl2x
fcmovne
out
aaa
cli
ds
out
rcr
fidivrs
shl
jecxz
cli
loopne
adcl
lock
lret
in
repz
cmp
aam
lock
aad
fld1
sti
loop
loope
xchg
into
aad
xor
imul
icebp
cmp
jecxz
cmpl
hlt
in
loope
cmc
fucomi
leave
jmp
test
xchg
ret
shlb
xlat
into
adc
rcr
orb
mov
mov
shl
lret
mov
add
pop
jmp
aas
lret
ror
lahf
jmp
mov
test
jle
cmp
jle
out
fdivrl
stc
icebp
aam
fcom
iret
clc
xlat
leave
jmp
in
xchg
in
sub
das
das
cmp
out
lret
cmp
rolb
sti
mov
in
std
cmp
xchg
aaa
cmp
aaa
jmp
div
cmp
in
hlt
aam
ret
out
mov
div
int3
leave
sti
cmp
cli
int3
fdivr
out
fcomi
loop
loope
test
rolb
in
repnz
in
ret
clc
shl
cld
sti
cmp
loopne
rcl
ret
cli
in
ret
std
mov
enter
cmp
fiaddl
loop
std
push
in
jmp
mov
and
in
repz
xor
icebp
jmp
out
cmp
call
xchg
rcr
fmull
ret
rcl
int
aas
cmp
loope
cmc
mov
test
fmul
jmp
aaa
fdivr
jmp
out
cld
fdecstp
shl
loop
aam
testb
out
cld
out
xchg
ret
stc
xor
in
repz
loop
into
out
clc
in
rol
test
enter
loopne
lea
sarl
aam
lret
cmp
jmp
sti
lock
cmp
or
lea
xor
out
repz
lret
fcmove
repz
cld
in
xlat
ljmp
ljmp
lock
call
rcr
xor
rolb
mul
clc
in
jecxz
rorl
lock
xor
cmp
std
loop
ret
mov
leave
lret
cli
mov
xor
aaa
stc
dec
jmp
incl
test
in
xor
nop
out
mov
repz
aad
in
in
rol
icebp
ror
cld
cmc
xchg
test
std
mov
out
ljmp
not
cmp
loopne
xor
loop
xor
sti
aam
mul
loopne
leave
sar
dec
cmc
loopne
ret
lock
cli
aam
jmp
faddl
rcl
lret
fsub
sti
out
loop
in
rol
iret
shl
pop
ret
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
out
clc
fucomp
call
adc
enter
xchg
fldz
fmuls
repnz
lret
loop
out
cmp
addl
int
mov
ljmp
in
repz
orl
rorl
aas
aad
call
cli
stc
repnz
and
cli
enter
fmul
into
enter
hlt
lret
in
ret
fcmovb
lds
aas
cmp
out
cld
fmul
or
out
out
xchg
mov
ret
icebp
in
ss
hlt
fidivrs
icebp
ret
xchg
xchg
mov
jecxz
icebp
fcomp
imul
iret
ss
int3
fsub
xor
out
out
call
loopne
jmp
test
lret
call
hlt
xlat
cmp
jecxz
cmp
cli
lret
test
shl
lret
cmp
cmp
xor
in
in
std
lock
out
fcom
clc
cmp
incl
aad
int
sti
repnz
xor
stc
int
repnz
cmp
ret
cli
jecxz
in
sub
orb
int3
leave
fcmovu
divb
aaa
hlt
iret
cmc
sar
test
loop
incl
jmp
in
xchg
imulb
int3
clc
sub
cmp
aas
int3
sti
add
roll
out
lock
lock
ljmp
leave
int3
in
loop
testb
mov
orb
fnstsw
xlat
xor
fsub
neg
ret
mov
fcmovnb
mov
fcomp
in
icebp
loopne
mov
aaa
iret
aaa
ss
imul
loope
rcr
fucomi
mov
nop
test
into
out
sub
in
cmp
cmp
lret
fnsetpm(287
in
cmp
jecxz
test
mov
stc
ror
shr
jmp
adc
in
stc
mov
in
xchg
in
out
icebp
repz
fnstenv
push
xchg
sub
in
mov
std
stc
fcomi
cld
std
int3
shl
div
mov
and
or
jmp
ret
ret
rcl
aad
sbb
popf
add
jle
cmp
jle
div
fidivl
in
fdivp
into
cmpb
std
incb
leave
lret
in
out
test
jecxz
sub
fadd
int
in
sti
aam
fmul
into
test
in
xlat
cli
cld
cli
leave
xchg
xchg
in
orb
cmp
out
cmc
ds
fcmovu
in
ror
test
sti
fld1
jmp
cs
out
sar
shlb
ljmp
cli
test
test
cmp
test
or
xor
roll
into
hlt
jmp
sub
call
mov
loop
ret
xor
fdiv
rcr
sbb
repnz
mov
test
ret
jmp
int
xchg
test
cmp
jmp
fcom
call
cmc
jmp
vpshlb
loope
in
ss
ret
lock
iret
std
aad
lret
out
hlt
in
fcmovnbe
enter
jecxz
loope
repnz
cmc
das
enter
bnd
test
fadd
hlt
xchg
test
xor
fcmove
aam
xor
into
fcmovu
iret
jecxz
fprem1
xchg
out
ret
lret
shl
xlat
int
ljmp
fildl
testl
fsub
xor
shr
ss
cmp
loop
xor
shl
rorl
sti
iret
fst
hlt
out
aas
iret
aaa
iret
out
int3
lock
repz
out
stc
fcom
jmp
aam
mov
mov
mov
out
in
aam
stc
std
aas
hlt
neg
in
test
ror
ffree
in
xlat
fmul
loope
jmp
aad
lret
out
fnstenv
lret
cld
ret
into
in
lock
mov
into
mov
aam
enter
fidivrs
cmp
shl
stc
shl
out
aam
in
loopne
in
lock
enter
fucompp
int3
clc
repz
aam
std
shl
sar
xlat
xchg
mov
loop
loopne
out
out
das
icebp
fmulp
rcl
fidivs
sbb
idiv
loope
fdivr
mov
pop
ret
push
mov
jmp
lret
aad
int
ss
rcll
sarb
adc
jle
div
out
repnz
repnz
int3
rol
in
test
rcr
in
test
xchg
jmp
sub
cmp
sti
leave
fmul
sbb
ret
jmp
into
loope
in
aad
shl
ret
hlt
in
jmp
ret
sar
lds
jecxz
loop
out
icebp
not
sub
ror
aad
ret
in
jmp
int3
fcomip
in
lret
mov
out
cmc
leave
cmp
loop
fidivrl
repz
sbb
ret
loopne
xlat
mov
jmp
mov
into
cmp
xlat
leave
fsubr
std
bnd
out
int
fdiv
fadd
faddp
cld
in
out
cli
loopne
jecxz
mov
out
in
in
sti
div
xor
lock
ds
ffree
fcom
in
out
enter
loope
cmc
xchg
ret
clc
out
cld
repnz
fstpt
jmp
in
xlat
sti
rolb
mov
call
test
hlt
call
xor
cli
lret
rcr
addl
out
ljmp
in
aam
lret
leave
int3
fcomip
loope
iret
out
aam
rcr
ror
in
ljmp
aad
loopne
xor
cmp
rol
cmp
cmp
fdiv
fcmovb
stc
cli
cli
clc
sti
jmp
out
out
jmp
lret
in
jmp
jmp
jecxz
sar
loop
call
fdivr
sti
out
sub
loope
xor
bnd
std
sar
fld
xchg
std
std
xchg
test
lock
lock
cmp
sti
icebp
fpatan
repnz
stc
ret
mov
aad
loopne
shl
aam
into
leave
fmul
cmp
hlt
add
out
incl
into
fsubrp
roll
int3
in
xor
sti
clc
cmp
fcomi
ret
sarb
in
or
loope
loop
leave
repnz
ret
lock
sar
std
loop
mov
loopne
in
pop
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
cli
lret
mov
xchg
into
test
out
xor
fsub
clc
into
fdivrp
out
cmc
div
out
mov
int
orl
into
cmc
test
cmc
icebp
adc
cli
hlt
fld
filds
mov
icebp
xor
call
fldlg2
cmp
lock
rol
rcl
aad
mov
and
jecxz
iret
xor
out
cld
lret
cmp
int3
test
repnz
lock
call
in
jmp
jmp
in
xchg
sub
cmp
fldlg2
int3
cmp
bnd
fcmovu
call
leave
fcmovbe
stc
fcomp
cli
out
shl
sarb
mov
in
lret
xlat
std
in
mov
ret
clc
out
cld
fst
std
out
stc
fiaddl
fnstcw
loopne
call
leave
fimuls
ret
leave
int3
shr
cmp
sti
out
aam
std
out
roll
flds
mov
leave
iret
rol
xlat
lret
cmp
cmpl
enter
loope
ljmp
pop
out
icebp
lret
cmp
repz
rcl
clc
bnd
cld
out
mov
loop
jmp
in
mov
leave
xor
repnz
cmc
div
shl
icebp
sar
fucomi
cmp
test
lret
push
into
xchg
cmp
out
hlt
out
lret
clc
loop
aad
sti
roll
aas
and
addl
repz
cmp
call
cmp
sar
fadds
mov
test
fcmove
lea
sar
rol
loopne
cmp
aas
out
cmp
out
in
flds
call
mov
in
in
out
cmp
aad
cli
ss
aad
inc
fmul
out
loopne
fcmovb
fdivp
lock
mul
xor
cmp
fucomip
in
ret
test
fldz
icebp
out
hlt
mov
ret
repz
xor
je
inc
add
inc
add
inc
and
adcl
add
jmp
fcom
xlat
push
xlat
outsb
rcrb
jns
sub
adc
jle
sti
ljmp
int
rcl
sbb
into
xchg
or
aaa
cld
sarb
lret
int3
int3
lret
xchg
add
ret
sti
lret
xchg
jecxz
call
loope
fcmovnb
out
call
xor
cmp
test
and
enter
mov
call
sti
flds
fucom
mul
les
out
repnz
xlat
lock
das
lret
sarb
aas
idiv
into
shl
fstp
in
lret
mov
xchg
in
xlat
stc
xor
int3
aam
fst
and
loope
mov
repnz
decb
repnz
xor
aad
cmp
jmp
repnz
cld
iret
in
std
ret
cmc
in
loopne
sti
mov
shr
lret
in
shl
repnz
std
fst
mov
sti
ljmp
xchg
fcomi
fists
in
out
idivb
lret
adc
xchg
loope
cld
fcmovu
fmull
shl
loopne
xor
in
shr
fiaddl
orb
out
xchg
into
loopne
jecxz
xchg
das
clc
shl
rcl
out
rcr
fdivrp
out
call
mov
out
iret
lea
aam
aaa
lret
fsubr
cmp
cmp
fdiv
push
cmc
mov
cmc
ret
test
lret
mov
ror
jmp
fdivl
call
dec
fcom
loop
fnstcw
cld
xlat
enter
fmulp
call
fcom
lret
xor
into
aam
loope
addl
xchg
xchg
xchg
lret
jmp
aad
fnstsw
aas
cli
out
idiv
addb
xchg
sti
test
incb
cmp
in
sti
out
in
sarb
fsubp
sar
cmpl
out
in
adcb
loope
cmc
icebp
lock
hlt
cmp
fadds
sar
or
movzwl
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
inc
xchg
inc
neg
jle
adc
jle
in
call
cmc
xlat
in
int
in
lret
sarl
loop
out
inc
fucom
in
test
stc
shr
shl
loop
out
fcomi
repnz
in
fst
testb
icebp
rcr
hlt
icebp
mov
aaa
aad
ss
out
sti
adc
into
in
xchg
shr
xchg
jecxz
into
in
ljmp
bnd
aas
mul
jmp
stc
jmp
xchg
in
lret
icebp
fld
int
ds
cmp
in
ret
incl
iret
mov
icebp
leave
xor
int3
out
ds
out
cld
sti
icebp
sar
fsubr
test
jmp
in
xor
xor
aam
idiv
fcmovne
out
repnz
ffree
jmp
mov
xor
xlat
in
not
cmp
lret
out
cld
rcl
clc
loope
ret
not
leave
mov
out
loope
fcmovne
rcr
out
lret
bnd
in
adc
leave
int3
sub
filds
int3
xor
cmp
cmp
std
loop
rolb
in
aad
fcomi
lock
mov
loop
lock
xor
in
jmp
xlat
addb
jmp
mov
ljmp
loop
vpsrld
cld
adc
rol
repnz
ljmp
iret
ror
aam
mov
mov
lea
lret
cmc
xor
das
icebp
not
ror
loope
cmp
cmp
cld
sub
fcmovnb
mov
loope
out
adcb
in
xor
int3
lock
in
loopne
rcl
rcl
fucomip
test
fucomp
into
fiadds
jmp
hlt
int
cmp
out
in
std
aam
stc
out
out
xchg
iret
nop
popl
in
sti
shl
cmp
rcl
rcl
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
mov
fidivrl
adc
jle
adc
aas
cli
stc
clc
jmp
ljmp
loop
fcomp
cld
fdivrl
aas
roll
dec
fldl2t
jmp
out
xor
rol
xor
cmc
lds
cmp
out
loop
xlat
in
enter
dec
lret
fcmovb
test
shr
test
ror
fmul
ds
leave
mul
rol
fucomp
in
loope
hlt
out
call
loopne
movl
cld
hlt
not
out
cmc
cld
ret
loop
test
adc
std
fisttpll
cmp
cld
lock
repz
repnz
loop
faddl
lock
xor
cmp
cmp
rcr
testb
fmuls
jecxz
sub
repz
leave
jmp
fcmove
enter
loope
in
ret
in
loope
out
fisttpl
sub
repnz
out
imul
repz
jmp
test
ror
jmp
out
lea
cmc
in
in
out
sarl
iret
loopne
sar
fldl
xchg
push
out
fld1
int3
ljmp
fsubrp
repnz
stc
roll
aam
xor
cmp
xlat
shr
fst
fadds
cmp
hlt
jecxz
xchg
xchg
mov
ss
cli
int3
iret
aas
clc
cld
in
cld
test
enter
cld
fildl
enter
rol
out
call
repz
fsubrp
hlt
cmc
in
leave
mov
test
icebp
loopne
vpcomuw
fcmovnu
enter
idivb
out
adc
in
jmp
out
call
in
loope
sub
sar
test
shr
fsub
hlt
shr
out
out
loope
testb
mov
jmp
lret
xor
aad
sti
sar
loop
stc
shl
mov
roll
fsubp
or
loopne
xor
decl
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
push
xchg
aad
popf
fdivrl
adc
jle
out
mul
out
in
xlat
fdiv
int
hlt
ds
cmp
repz
aam
stc
mov
hlt
mov
jecxz
jmp
ds
cld
iret
fsubrp
cmp
fcmovbe
loop
lret
fcmove
out
cli
fucomip
imul
xlat
aam
sarl
int3
fcmove
in
hlt
int3
lock
aam
repnz
mov
ljmp
int3
sbb
ljmp
jmp
shl
enter
hlt
out
out
dec
in
mov
cmp
iret
int3
cmp
cmp
xor
jmp
iret
fstl
stc
lret
aaa
cmp
xlat
fucomp
fucomi
shr
std
cmp
enter
fsubr
loopne
mov
xchg
xchg
shl
xor
cli
repz
shl
in
xchg
into
lret
fcom
jmp
cs
lock
cli
enter
aas
ds
fdivp
cmp
hlt
fisttps
fiaddl
rolb
in
cmp
ds
ret
div
add
out
xchg
mov
into
icebp
repz
divl
out
xor
ljmp
std
out
aas
incb
in
leave
jecxz
jecxz
xchg
mov
out
xor
cmpb
cli
fcmovbe
fdiv
loop
test
or
leave
int3
int
aad
das
lock
aad
lret
cli
int
stc
fistpll
enter
int
out
mov
nop
jmp
rol
into
repz
iret
jmp
repz
repnz
loop
jmp
lret
mov
int3
out
mov
repnz
out
loop
rcl
sar
rcl
push
loop
cld
push
jmp
loopne
in
xchg
fisttpll
cmc
idivl
lock
sar
fucom
ret
repz
fdivrp
into
lret
mov
aam
clc
xor
aaa
jmp
add
out
fdivr
fisttpll
lret
loopne
aaa
cmp
les
out
test
loope
xor
cmp
movl
jb
dec
jmp
aam
fadd
fstp
pusha
shl
fists
jle
adc
jle
mov
cli
mov
xchg
aad
ret
aam
xlat
cmp
cmp
fdiv
movb
in
fcomip
hlt
out
aad
cmp
fucomp
test
aaa
cmp
orl
out
adc
in
mov
icebp
xor
aad
out
neg
ljmp
adc
cld
repnz
jmp
loope
out
call
iret
loopne
repnz
iret
cmc
clc
cmp
shl
test
ds
aad
mov
aad
fdivr
jmp
xchg
loope
stc
ljmp
int
aad
shl
orl
mov
jecxz
hlt
mov
int
loop
lret
hlt
int3
cmc
xor
ret
rcr
loopne
addl
ret
shll
in
stc
cmp
xchg
stc
xchg
cmp
shl
cs
aaa
lret
lret
jmp
int3
shl
and
incb
int3
out
mov
out
xchg
loopne
lret
ljmp
loope
cmc
out
aad
addl
rclb
lret
shl
jmp
sub
out
ljmp
xchg
loope
int3
in
hlt
ss
clc
loopne
stc
aad
fadds
jmp
call
int
not
sti
fcmovne
ror
fistpll
out
loop
rorb
lds
test
out
int
xor
cmp
out
icebp
int
ret
xchg
loope
sti
fsub
out
leave
lret
mov
lret
mov
int3
test
aaa
fcmovnbe
lret
cmc
xlat
in
rol
jmp
xchg
fdivp
icebp
bnd
cmc
int
lret
sarl
out
repz
cmc
test
test
shl
ret
fcmove
call
lret
ret
out
loop
adc
loopne
loop
test
nop
sub
shl
in
push
clc
sbbl
mov
addl
jmp
fcomp
fistps
je
push
bound
add
in
xor
xlat
in
shr
fadd
ret
lret
hlt
stc
fiaddl
mov
aad
std
enter
cmp
fdecstp
sti
testb
sub
jmp
aad
ror
iret
int
cmp
cmp
icebp
std
std
lret
fisttpl
cli
fmull
iret
xlat
lret
repz
rolb
repnz
vpaddusb
fstp
sbb
inc
cli
out
xor
out
cmp
ret
out
out
cmp
xchg
clc
ljmp
hlt
call
clc
divb
aaa
sarl
ffreep
ss
roll
test
int3
mov
in
icebp
iret
hlt
div
into
iret
fsubp
iret
or
loop
adc
fsubp
test
test
in
repz
hlt
xor
ss
std
aad
rolb
fcmovb
or
xchg
in
cli
lret
add
aam
sti
aad
leave
fcmovu
cld
xlat
loopne
aas
aad
repz
sti
out
in
jmp
ret
repz
lock
lret
cmc
jecxz
mul
hlt
add
leave
ljmp
cmp
icebp
out
out
jmp
loope
not
hlt
shl
aam
jmp
sti
mov
int3
out
fucomp
iret
call
aad
in
rcl
aas
std
cmp
lds
cmp
loop
in
mov
in
cmc
xchg
mov
icebp
xlat
cli
lret
icebp
shl
cmp
in
repnz
roll
les
loop
leave
cmp
repz
repz
fcmovnu
in
cmpl
jecxz
int3
lret
in
fists
les
fsubrs
aas
iret
icebp
repz
call
cmc
rcr
fcmovnbe
cli
mov
incl
mov
lock
shr
out
fsubrp
cmp
icebp
lret
aad
rcl
add
test
int3
in
shl
imull
call
fiadds
ffree
loopne
cld
std
loopne
xor
add
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
orl
jle
adc
jle
sbb
sti
incb
cmc
out
clc
cld
jmp
jecxz
ret
test
shr
or
imul
call
out
aas
shlb
ljmp
adc
shl
adc
cmc
xlat
sar
lret
int
in
test
xchg
shr
out
cmp
fmul
icebp
cmp
in
test
out
fisttpll
fsubp
mov
out
lock
cmp
repz
xchg
xor
add
repnz
lock
cmp
cli
out
cmp
xlat
loope
test
test
call
test
cs
xlat
lret
shl
shll
icebp
jecxz
sti
rorb
addl
in
lock
xor
repnz
std
in
roll
fadds
cld
ret
loopne
aam
in
loopne
cmc
sub
fcomp
loopne
cmp
fadds
xlat
out
loop
call
jmp
int
hlt
in
loop
dec
out
icebp
aad
shl
lret
mov
in
cmc
xlat
jecxz
cmp
xlat
div
ds
loope
stc
ds
loope
aad
hlt
lret
xlat
addl
fsubr
lret
lret
shll
std
hlt
call
cmp
bnd
ret
leave
xchg
loopne
in
into
xchg
les
sub
out
in
loop
cli
aam
jmp
clc
lret
adcb
lret
out
cld
ds
idivl
cmp
testb
in
adc
in
cmc
icebp
aam
repz
cmp
shl
addl
aad
fsubr
mov
xor
icebp
ret
cmp
lret
cmp
test
ret
fcmovnu
cld
test
xchg
xchg
out
xchg
icebp
xor
xor
icebp
stc
ss
idiv
cld
fidivrs
add
out
cmp
test
fiaddl
ljmp
aad
sar
out
sarl
test
add
adc
jmp
int3
rol
aad
pop
pop
movsb
or
in
jle
add
int3
rcl
shl
ret
out
lret
xchg
fxch
out
aad
cmp
ljmp
addb
fildl
and
sub
xor
xor
stc
repnz
jecxz
out
aam
idiv
out
jecxz
sbb
mov
call
hlt
in
shl
hlt
icebp
out
aam
clc
aas
sti
mov
cld
mov
sti
sti
jmp
call
shll
stc
cmp
in
cmpl
in
rcr
hlt
out
cli
mov
mov
repz
cli
clc
call
in
sar
shl
clc
mov
jmp
jmp
mov
aaa
stc
in
lret
int3
fnstsw
shl
not
cmp
hlt
in
icebp
xor
repz
hlt
ss
shl
in
test
ret
fstpt
xlat
in
int
cli
sti
out
jecxz
in
jmp
xor
sub
fcmovbe
in
lock
test
loopne
xchg
sbb
enter
repz
iret
cmp
enter
cmp
incl
in
out
loopne
into
test
div
in
int3
in
lock
call
ffree
vpextrw
lret
and
stc
xchg
xchg
lret
stc
aam
xlat
lret
jmp
testb
in
test
jecxz
lea
hlt
into
cmp
inc
shl
cmc
hlt
loope
mov
sti
int
lret
decb
fsub
jmp
shl
cmp
icebp
aaa
loop
int
hlt
hlt
loopne
jmp
decb
sub
jmp
in
ss
cli
cld
icebp
fcmovb
sar
in
enter
in
repnz
xchg
mov
lock
aam
fcmove
shl
aam
les
loop
in
in
fsubr
fimuls
repnz
sarb
aad
loope
sbb
aam
fucom
ret
jecxz
in
test
fldl
and
add
add
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
dec
int
out
jle
add
loop
in
xor
fcmovnu
fsubr
repz
out
imul
sar
fdiv
filds
shl
in
in
cmc
shll
cmp
xor
std
cmp
xlat
int3
fldl
in
lret
lock
xor
mov
sti
in
cmp
rol
xor
fimull
call
incb
hlt
jmp
clc
aad
ret
aam
call
mov
ljmp
mov
rcl
xor
jmp
cld
in
cmc
aam
add
aad
ljmp
xchg
fsub
in
repz
call
cmp
cli
std
cmp
fucom
cmc
jmp
xlat
fucom
fxch
call
out
fcmovnb
call
jmp
flds
idivb
cld
fmul
in
out
aam
in
lret
shll
loopne
in
cmc
xor
repz
vpxor
call
cmc
xor
repz
rolb
jecxz
addb
mov
in
in
lret
ffreep
enter
cld
cmp
jmp
shr
loopne
aad
fscale
mov
int
filds
sarl
in
stc
xor
loopne
ljmp
xchg
or
xchg
icebp
jmp
stc
sti
aam
sarl
ds
cld
and
call
loop
jmp
icebp
mov
ljmp
fsubrp
loopne
int
aad
loope
xlat
jecxz
les
mov
ffreep
aaa
repnz
enter
jmp
sbb
incl
test
xchg
in
icebp
repnz
loop
lock
cmp
repnz
xor
std
ret
mov
jmp
out
mov
in
out
test
cld
jmp
lret
in
repnz
loop
lret
iret
addb
clc
xlat
leave
sarl
ss
stc
clc
repz
int3
hlt
cmp
xchg
add
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
jne
fwait
int
jmp
jle
cmp
xchg
icebp
jecxz
cmc
out
shl
cli
int3
cmp
lret
repz
loope
cmc
mov
enter
sti
fimull
into
aad
rcr
std
fucomp
ror
div
cmp
iret
iret
mov
mov
loopne
incl
lret
repnz
loope
repz
ss
lock
fcmovbe
xlat
out
lret
out
int
rol
ljmp
out
call
fcmovbe
stc
test
lret
sti
clc
out
nop
icebp
cld
std
xchg
orl
in
cmc
in
in
add
repz
cld
out
fucomip
int
repz
rcl
ss
jmp
sar
int3
and
jecxz
clc
xchg
int3
cli
nop
into
xchg
out
shl
imul
std
leave
test
int
int3
out
cmc
aad
in
std
xor
testb
cmc
fcomip
not
xor
std
aad
aam
loopne
out
in
cmp
clc
in
enter
iret
nop
incb
enter
in
sti
out
int
clc
fcmovbe
roll
fdivr
sti
mov
orb
in
xor
aam
xor
lret
not
lock
ret
testl
clc
ret
das
xor
cli
stc
stc
loope
xchg
cmp
cli
call
loopne
jmp
fnstcw
lock
aad
out
enter
mov
jmp
mov
out
jecxz
in
cmp
sbb
fcom
iret
ffree
out
lea
lea
lret
iret
out
jmp
in
repz
shl
mov
inc
incb
ffreep
repz
cli
cmp
ss
shr
loop
mov
fdivr
sti
loopne
mov
xor
aad
fbstp
div
loop
in
repnz
mov
mov
in
jmp
hlt
test
lret
or
mov
nop
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
xchg
sahf
add
jle
add
cld
xor
cmp
fstpt
loop
shl
call
fistl
in
test
repz
out
hlt
std
stc
fstpt
aad
aas
call
out
fucomip
out
mov
xor
bnd
out
cmp
filds
int
std
mov
xor
into
mov
out
lret
in
xor
loop
cmp
cmp
fiaddl
aas
lock
test
fmulp
rcl
in
cmc
in
ror
ljmp
in
aad
rcr
mov
fcmovbe
lea
icebp
xchg
mov
xor
fidivl
lret
into
lret
cmp
ds
stc
int3
cmp
fsubp
loopne
call
fimuls
aam
enter
aaa
call
fst
test
out
icebp
xlat
ljmp
jmp
rcll
repz
cs
cmp
rcl
dec
out
out
out
mov
rorl
xchg
jmp
leave
sti
clc
ss
jmp
out
int3
loope
test
fadd
in
loopne
leave
ljmp
fldl2e
sarl
int3
cmp
cmp
shr
shr
out
fadds
iret
aad
fcmovu
cmp
fcomi
rcr
xor
fndisi(8087
neg
in
testl
fdivrp
int3
mov
call
xor
aam
hlt
add
lret
jecxz
int
repnz
cmc
mov
fstpt
out
call
fucomp
in
in
fndisi(8087
out
jecxz
mov
mov
out
out
fnstenv
out
rcr
rcl
incl
lret
xchg
flds
idiv
jecxz
leave
clc
lret
cmp
aas
fiaddl
out
mov
enter
jmp
lock
loope
stc
cmp
lret
fdivr
and
out
jecxz
shr
fcmovbe
lret
fcmovb
test
fninit
xchg
mov
int3
shl
lret
into
repnz
not
lret
cmc
in
stc
iret
cmc
sbb
mov
mov
jmp
aam
aad
fstp
movsb
ficomps
mov
adc
jle
add
nop
mov
in
out
shl
aas
cmp
fdivp
addb
loope
leave
sub
out
inc
xor
xor
ds
ds
icebp
out
fcmovnbe
in
loopne
ret
int
incl
xchg
std
fsubrp
aad
sarl
cmp
repnz
fldl2e
xlat
jmp
sar
or
xchg
into
iret
in
lock
shlb
rol
hlt
in
sub
clc
ret
int
push
in
xchg
std
adc
in
iret
rcl
and
iret
cmc
mov
jmp
in
jmp
loop
neg
sti
stc
repnz
cli
into
test
std
sti
loope
xchg
ljmp
shll
cli
ss
fcmovnu
jmp
cmp
fcmovb
incl
mov
in
mov
fcom
cmpb
aad
ret
mov
fmul
mov
xchg
shl
out
in
rcl
mul
repz
flds
hlt
cmp
aam
clc
jecxz
mov
into
xchg
in
out
ss
xor
into
std
out
loopne
cmp
fcmovnbe
neg
loop
dec
enter
shr
lret
out
xor
out
fcomp
fdivr
cmp
fidivrs
testb
add
fmuls
xchg
sbb
shl
int3
loopne
div
cmp
fucomi
icebp
in
out
leave
out
in
fsub
fiaddl
leave
in
jmp
shr
xlat
repz
clc
loopne
cmc
mov
out
loopne
repnz
imull
lock
rcr
fcmovnu
ret
not
loope
fst
enter
std
ljmp
ftst
imul
cmp
cld
cmp
cmp
rol
inc
lds
out
sbb
ljmp
cmp
addb
xchg
or
in
sbb
xchg
int
cli
enter
out
decb
add
add
lret
enter
int
cltd
movsb
imul
push
clc
mov
out
jle
adc
jle
ror
incb
rolb
in
int
xchg
mov
mul
not
aad
fcmovnu
cmp
testl
enter
jmp
stc
leave
xor
in
lret
ror
cld
fdiv
iret
icebp
xchg
int
lea
xlat
xor
lret
lock
cmp
int3
cli
lret
int
ffree
div
not
fldl2t
testl
leave
enter
fsub
in
out
int3
cmp
icebp
xor
lret
addb
loope
aam
into
int
sti
xlat
stc
cmp
shl
enter
fdivr
rorl
les
rol
hlt
xor
in
cmp
loop
std
out
out
in
fmulp
in
xchg
call
cmp
cmp
out
fcmovbe
cmp
fdivp
test
jecxz
lret
sbb
test
test
aad
cli
xor
xor
shl
in
out
std
ret
enter
mov
out
xlat
lds
sub
lret
cmp
cld
rol
mul
incl
enter
out
cli
iret
xchg
repnz
fildll
xor
ljmp
aas
ror
xlat
cli
loop
xlat
xchg
int3
stc
mov
out
test
icebp
xchg
cs
rol
idiv
aam
in
into
call
in
cli
sti
xchg
iret
jmp
int3
lds
int
rcr
call
fchs
add
fdivr
jmp
ret
nop
lock
int
xor
fmul
aam
sar
test
aas
out
rorb
into
loope
out
cmp
clc
hlt
fcos
div
repz
sarl
fcomi
cmp
loop
clc
stc
repnz
call
shr
into
idivb
cmc
fxch
hlt
loope
in
repz
fcmove
loopne
shl
sub
in
rcl
shr
in
int
loopne
int3
lret
roll
sub
jmp
fildl
sub
add
iret
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
cmc
out
icebp
fdivrs
call
fcmovnbe
out
repnz
repz
ret
xor
cmp
call
out
mov
fldl2t
into
out
div
call
repz
fcomi
les
jmp
mov
cmc
not
lret
int
repnz
testl
test
fcom
fcmove
test
lea
fsubrs
aad
out
ds
repz
rcr
loop
rol
faddl
shl
jecxz
xor
std
sti
cmp
icebp
lret
fnstcw
or
test
lret
xchg
ljmp
out
int
std
jmp
clc
clc
cmp
xor
xchg
clc
cld
enter
icebp
enter
repz
xor
xor
imul
xor
testb
mov
sbb
jmp
loopne
leave
mov
repnz
not
jmp
cmp
cmp
cmc
fld
cli
jecxz
fcomp
fisttps
xchg
fmull
ljmp
lret
sti
neg
in
in
rol
mov
xchg
fdivr
xchg
xchg
rcll
jmp
stc
xor
test
xchg
clc
mov
sti
mov
in
cli
fptan
out
jmp
xor
add
xlat
aam
mul
sti
loope
repnz
int3
cmc
iret
jmp
out
xor
cmp
repz
leave
aas
cmp
rcl
roll
xchg
enter
int3
xor
vaddsubps
xor
cmp
fdivrl
jmp
fidivrl
cmp
in
loopne
cli
les
cmc
cmp
sub
sub
ret
stc
inc
repz
rorl
div
in
loope
std
ljmp
fcmovnu
fchs
cmp
icebp
fistpll
shr
fsubp
loop
into
leave
flds
xor
iret
loop
in
ss
int
into
rol
shl
loope
int3
stc
addl
aam
xor
cmc
jmp
fnstcw
rorb
test
sub
add
int3
into
fmul
fsubrl
in
jecxz
add
sbb
out
repz
adc
jle
mov
std
xchg
lret
icebp
enter
out
xor
jmp
icebp
jmp
jmp
sti
mov
repnz
int
cmp
xor
loope
cmc
jecxz
aam
std
fnstsw
loop
shr
out
nop
out
clc
hlt
ljmp
ret
out
cld
enter
enter
xchg
leave
xchg
out
aam
hlt
in
cmp
fiadds
mov
out
in
enter
aam
xor
shlb
cld
fucom
repz
xchg
cli
testb
jmp
nop
out
call
xor
in
out
sarb
div
fadd
mov
xchg
fstp
mov
xchg
in
int
fscale
fmul
icebp
cli
cmp
test
loope
xlat
in
fucomip
jmp
rcl
xor
icebp
xor
fmul
out
inc
xchg
icebp
out
fcmovnu
out
xlat
stc
xchg
repz
out
ljmp
aam
in
test
ret
out
fcomi
loope
out
mov
iret
or
sub
stc
int
rcr
mul
cmp
ljmp
out
int3
repnz
clc
xor
out
xor
imul
repnz
shl
int3
aaa
out
test
sub
lds
call
xlat
in
jmp
in
adc
jecxz
in
mov
in
stc
loop
ffreep
int
loop
xor
cld
aam
xor
xor
aam
ret
mov
testb
cmp
fbstp
out
xor
cmp
cmp
cmp
div
cmc
clc
loopne
lret
int
icebp
int
mov
in
mov
int3
jmp
leave
rcr
loopne
call
jecxz
out
filds
shr
out
icebp
jmp
iret
aam
int
not
ret
cmp
test
and
xchg
test
int3
std
mov
iret
int3
pop
jmp
ret
ror
aam
mov
xchg
push
xor
jle
ret
lret
cli
into
shl
stc
ret
shl
stc
ljmp
filds
out
aaa
aas
lret
fadds
ret
mov
mov
fcmovnu
and
not
lret
das
not
shll
ret
shl
xchg
stc
jecxz
enter
addl
aam
int3
sti
in
shl
in
out
aam
loop
leave
mov
cli
loope
lret
jmp
ss
iret
stc
in
cli
hlt
cli
les
mov
nop
test
mov
test
ss
stc
in
cmc
cmp
out
fdivs
loopne
repnz
ffree
leave
mov
jmp
xchg
call
aas
enter
in
clc
clc
hlt
stc
stc
cli
test
fcompp
orb
leave
ret
jecxz
mov
xor
int3
xor
rol
repz
div
shl
test
mov
loop
rolb
stc
aam
clc
leave
out
lret
clc
roll
jmp
out
in
jmp
jmp
hlt
out
aad
repnz
lret
fsubrp
sbb
repz
idiv
out
decl
out
aaa
shl
stc
shr
sti
out
rol
fadds
roll
fucomip
fucomip
jmp
in
in
xor
bnd
cmp
aad
rcl
cli
cld
fiadds
hlt
test
xchg
ret
mov
int3
cmp
rcr
in
shll
sar
fsub
cld
inc
stc
ljmp
in
in
hlt
shr
cli
stc
aad
cmp
repz
loopne
adc
leave
mov
in
mov
shl
in
aam
in
out
mul
in
lret
lock
test
loope
cld
jmp
xchg
iret
enter
lock
int
lret
sub
rcl
cld
ret
std
mov
adc
faddl
out
sti
int
cmc
rcr
cmp
cmp
leave
mov
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
out
cmp
cmc
xchg
test
int
rcl
out
icebp
ret
repz
mov
stc
mov
fildl
in
lock
idivb
ljmp
in
cmp
fcmovu
jmp
mov
mov
xor
in
repz
stc
and
repnz
cmc
repz
out
out
lds
xchg
cs
fnstenv
mov
clc
cmp
clc
test
aad
les
loop
repz
ret
sar
iret
cli
enter
fdiv
test
in
jmp
lret
lock
xchg
imul
in
xor
in
xor
cmp
loop
icebp
std
fcmovnu
lret
loopne
stc
lret
adcb
in
fadd
cmp
loopne
neg
incb
ret
out
sbb
ljmp
les
stc
xlat
hlt
cmp
sarb
ret
fcmovbe
mov
ret
int3
out
iret
icebp
out
call
cli
into
fdivr
fldln2
lret
stc
not
out
in
out
jmp
shr
xchg
out
into
rcr
cli
ror
sar
cmp
fst
ret
cld
iret
xchg
cld
fisttpl
in
lret
loope
jmp
jecxz
ljmp
iret
loope
cmp
cld
ljmp
mov
ret
shr
rcl
repz
in
cmp
cmp
in
cli
jmp
orl
call
aad
xlat
rcr
not
lock
iret
repnz
lret
sub
iret
icebp
icebp
enter
test
xor
cmp
fdivr
lret
fcom
rcl
ret
xchg
ljmp
call
icebp
cmp
into
lock
aas
in
ret
loopne
aam
mov
mov
faddl
mov
aad
int
cs
cmp
ror
out
rcr
in
mov
and
ljmp
vpaddq
out
icebp
aad
roll
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
push
cmpsl
stc
jle
adc
jle
cld
sti
not
cli
into
lock
ret
mov
xor
xrelease
cmc
xor
loopne
stc
not
fcmovnbe
fdivrp
clc
hlt
fxch
fsubp
loop
xor
fmulp
xchg
ljmp
into
sar
rcl
loop
filds
out
lea
fsubr
int
cli
test
sar
loop
call
cld
cmp
aam
shl
ss
div
cmp
std
lret
aaa
ret
xchg
rorb
xchg
jmp
iret
out
xlat
fcmove
fmulp
shl
in
aas
fsub
stc
ret
sti
sti
jmp
lret
ret
into
jmp
xor
leave
in
cli
out
iret
int
xor
int3
test
aam
aam
loope
in
iret
test
lret
lret
xchg
das
xor
lock
icebp
ds
iret
fistpll
jmp
sarb
sti
add
addl
test
repz
lock
dec
ds
sar
in
clc
out
xor
ljmp
xor
enter
hlt
cmp
fdivrp
xor
sti
ret
test
mov
xchg
aam
das
cli
aam
fxtract
clc
rcl
in
leave
fcmovnbe
fcmovb
or
xor
aad
cmp
leave
ss
xlat
enter
test
jmp
stc
icebp
rorb
in
in
in
out
out
iret
in
into
xor
rcr
test
out
aad
in
mov
loop
xchg
xchg
aad
cs
cmp
cs
out
shr
shl
fdivrs
hlt
cmc
enter
jmp
xchg
int
ret
int3
call
int
sarb
out
icebp
lock
fcmovbe
mov
mov
xchg
loop
mov
cmp
sarl
cmp
aad
cmc
out
cmp
ss
loop
test
xchg
jmp
sti
jmp
decb
lock
repz
shl
hlt
imul
loop
hlt
ret
fdivp
in
std
stc
mov
loop
rorb
or
sub
add
ret
iret
enter
int
xchg
cmpsb
push
ja
cld
jbe
mov
add
roll
in
xor
sti
lret
enter
sbb
into
lock
rol
testb
aam
icebp
aam
xor
rol
iret
cld
out
call
rcr
fcomip
in
cmp
fcmovnu
xchg
xchg
test
in
icebp
hlt
cmp
jmp
aas
add
ret
vcvtpd2dqx
cld
in
orl
ljmp
clc
ljmp
rcr
ffree
cmp
into
icebp
rorb
jecxz
sarb
ror
shr
leave
xor
lock
icebp
and
rcl
cld
loopne
mov
in
icebp
out
std
das
repz
fdivrs
movb
sti
loope
int3
cli
rolb
shl
jmp
vpor
cmp
ss
hlt
ret
ror
mov
mov
fcmovnu
jecxz
test
lock
clc
cld
rcl
jmp
cli
cmp
fst
fld
addb
mov
loopne
shl
xchg
into
int
out
fsubr
cmc
icebp
leave
std
fstp
out
and
ds
enter
call
out
lds
std
cmp
lock
fdiv
cmc
ret
stc
repz
cmp
int
sbb
rcl
shr
enter
shl
out
hlt
hlt
enter
iret
stc
cli
xchg
xchg
test
lock
fadd
xor
jmp
repz
cmp
mov
movl
or
ljmp
ds
shl
out
sbb
sbb
out
ror
out
fxch
int3
sti
int3
aam
in
lret
loope
cli
roll
fcmovnb
loop
std
int3
call
jmp
jmp
sarl
stc
mov
int3
xchg
cmp
loope
lock
repz
clc
aas
cld
out
fadd
mov
fucomi
mov
jecxz
mov
cmc
nop
ret
in
std
xor
std
rolb
test
push
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
test
hlt
aam
fucom
clc
in
leave
mov
xchg
mov
leave
shl
lds
std
aad
ds
loope
hlt
cli
mov
xchg
loop
cld
fcmovu
into
decb
aaa
cmp
xor
in
std
loope
rcr
fdivr
fdivrs
loopne
mul
fcmovu
nop
icebp
out
icebp
aaa
fadd
in
xor
call
aad
cmp
rol
jecxz
in
call
repz
repnz
out
out
cld
lock
shl
cmpb
loop
idiv
std
xlat
clc
shl
xchg
into
pop
sub
leave
in
loopne
fistpll
lds
enter
lret
mov
jecxz
xor
fdiv
iret
ds
out
div
aad
aas
and
loope
in
jmp
call
ljmp
cli
iret
cmp
icebp
inc
loop
cli
ljmp
in
loop
cmc
shr
iret
ret
cmc
iret
repnz
cmp
ds
call
int
loop
leave
rcll
into
in
fsubr
stc
shr
fcmovnu
mul
shl
fiadds
out
ljmp
xor
in
mul
repz
imul
rol
test
mov
leave
test
lock
mov
ljmp
lret
repnz
icebp
filds
aam
stc
orb
iret
rcl
in
cmp
aaa
cli
sti
cmpl
cld
inc
not
fdivrp
in
or
shl
leave
les
aad
rcr
cmp
loopne
ret
neg
cmp
fildl
xchg
mov
mov
xor
into
imul
fdiv
loop
rcr
hlt
xlat
call
shl
fucomip
jecxz
iret
aaa
xor
xor
fstp
xlat
loopne
loopne
adc
ret
aam
fmulp
jmp
ljmp
hlt
iret
lret
rcr
cmp
ds
std
push
fmul
xchg
out
out
or
out
je
mov
mov
mov
jmp
xlat
into
rcl
aad
fadd
mov
adc
mov
jle
adc
jle
aam
cld
cld
rcl
fdivrp
out
aad
ds
out
in
xor
in
ss
idivb
lock
stc
and
cmp
jecxz
addl
div
leave
sub
xor
clc
xor
cmp
jecxz
jmp
mov
lret
xchg
lret
xor
lds
in
xlat
fmul
cmp
fdivrl
aad
in
xchg
lock
shl
xor
fcmovnbe
aaa
sti
lock
hlt
call
in
out
jmp
mov
in
aas
shrl
lret
fsubr
ffreep
lret
xor
add
repz
in
ror
cld
loop
mov
xor
lock
in
cmp
cmpl
stc
loop
hlt
std
mov
out
int
xchg
lea
sti
cmp
sar
iret
jmp
sar
xchg
repz
cli
cld
mov
call
hlt
sub
repz
aam
jmp
rcl
xlat
out
sbb
enter
sti
faddl
shl
repz
cmp
hlt
cld
clc
sti
xor
jmp
lret
test
xchg
out
enter
xor
in
lret
repnz
in
xchg
test
call
nop
mov
loope
out
xorb
test
cmp
cmp
repz
hlt
call
dec
loope
mov
das
out
jmp
cmc
icebp
cmp
lock
inc
fsubr
sar
loope
xchg
xchg
mov
in
jecxz
cmp
ss
in
aad
rcl
aas
mul
mul
hlt
stc
loop
rol
xchg
out
xchg
jmp
repnz
xor
lock
clc
repnz
cmc
cmp
rol
std
fldpi
fiaddl
shr
clc
out
rcl
stc
out
icebp
cmp
loopne
out
cmp
test
xlat
shl
out
int
rol
roll
ret
cmp
aad
fcmovne
loope
fldl
add
sub
add
ror
enter
lret
add
mov
jle
add
test
int3
fisttpll
loop
ret
lock
jmp
xor
std
aad
cmp
icebp
repnz
out
roll
xchg
fucomip
mov
shlb
ret
aad
stc
into
cmp
fsub
aas
in
repz
loop
aad
in
lea
icebp
lret
cmp
xor
iret
jmp
idiv
in
cmc
incb
cli
call
std
out
xchg
out
nop
hlt
jecxz
int3
out
cmp
cmc
repz
sbb
fcmovbe
aad
mov
loopne
xchg
fucomi
xchg
lock
xor
ret
lret
leave
out
stc
fstp
out
adc
mov
cld
nop
sar
cli
out
xchg
hlt
into
loope
out
cmp
in
cmp
cmp
cld
icebp
shl
sti
xchg
nop
in
fdivp
aad
in
call
xor
sbb
xlat
std
ret
cld
std
in
cld
fsub
fimuls
lock
repnz
lret
repz
std
fucomp
call
aad
out
icebp
enter
ljmp
ss
cld
ffree
fsubr
add
xchg
sar
add
into
xchg
cld
int
mov
fcmovnu
cld
sarl
stc
test
leave
ljmp
xchg
jmp
into
aam
sarb
lret
xor
int3
shr
aam
fstp
sti
test
ret
mov
movb
test
in
rcl
fstpt
fcmovnb
stc
out
cmp
in
jmp
mov
in
fmuls
and
hlt
xor
out
fst
aam
div
rcl
cmc
into
xchg
mul
movb
fucomp
orl
cmp
lock
sti
loope
sti
vpmulhw
hlt
std
out
loopne
orl
cli
ds
shr
cli
ds
aas
stc
fucomip
ljmp
xchg
loope
sub
clc
xor
sti
fdivr
out
ror
lock
cld
aam
test
mov
decl
in
sub
rcr
decb
test
or
add
or
mov
jmp
int3
enter
into
push
mov
je
mov
jle
add
aaa
rcr
ror
cmp
leave
cld
ror
loop
nop
incb
repnz
lret
lret
ss
cmp
aas
rcl
out
in
shl
incb
faddl
in
cli
in
jmp
xor
shl
xlat
cld
mov
xchg
in
xchg
or
ror
fdivs
fadds
enter
jecxz
loop
sbb
in
test
in
sti
aaa
cmp
testl
aad
mov
cmc
fdivr
in
lock
ret
idiv
std
xlat
lret
cmp
addb
hlt
rorl
loop
out
filds
ss
fsubr
fidivrl
cmc
repnz
iret
cmpb
and
flds
bnd
in
shl
out
lret
repnz
ljmp
clc
cmc
mov
mov
mov
mov
test
test
cmc
cmc
repz
fsub
cmp
mov
xchg
aad
mov
call
out
and
int3
loop
fstp
ss
loope
shl
std
xchg
cmp
cmc
xchg
out
out
ror
xchg
xchg
mov
aas
stc
out
leave
lret
int3
aam
loope
testb
mov
loopne
and
cs
xor
into
cmp
or
cld
rcr
add
fstp
and
rorl
cmc
repz
cmp
cmc
in
sti
shl
vpmulhuw
ljmp
iret
out
jecxz
lret
int
loopne
in
in
into
jmp
ret
in
fldl
in
jecxz
fsub
jmp
lret
xlat
aaa
call
int
lock
repnz
xchg
cli
lret
test
jecxz
call
out
cmp
iret
in
xchg
jmp
mov
sar
out
call
repz
leave
jmp
fmul
sub
cld
aam
aam
stc
lret
in
test
jecxz
rorb
test
push
add
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
sti
in
out
repz
xlat
xor
leave
repnz
rcr
cmp
fstp
jmp
into
loopne
cli
nop
xchg
int
clc
idiv
enter
out
lock
and
mov
jmp
rclb
repz
out
stc
cmp
idivl
sti
fcmovnb
test
call
call
into
in
fcomp
loope
loop
cmp
cmp
cld
addl
xchg
lea
xor
cmp
iret
aad
cli
testb
fscale
loope
shl
cmc
in
xlat
xor
repnz
cli
ror
in
leave
out
and
std
std
dec
out
mov
in
fsubrp
lea
jecxz
sarl
cmp
fdivrl
enter
cli
cld
mov
mov
inc
lock
xlat
fxch
sti
int3
enter
sbb
cld
ds
std
test
mov
sar
into
jmp
aad
cld
jmp
lock
lds
cmc
sti
lret
xchg
iret
xchg
iret
xor
cmp
cmp
into
shr
cld
out
cld
decl
movb
int
icebp
les
ljmp
or
hlt
in
aam
loop
std
std
mov
fstp
in
xchg
in
fcomip
in
hlt
out
call
out
fdivrp
repnz
fcmovbe
std
aad
or
std
loopne
lock
xabort
out
cmp
cmp
cmp
xor
stc
loope
jecxz
mov
call
cli
out
aam
call
ror
test
fcomip
ljmp
mov
in
das
cli
out
ror
sarb
cmp
stc
test
out
shl
mov
cmc
lret
repnz
clc
fdivp
lret
int
aas
in
add
mov
out
xor
lret
leave
cli
icebp
lock
addl
jmp
int
fcmove
fstp
adc
js
aad
ret
ret
jle
adc
jle
bnd
hlt
loop
jecxz
iret
sti
lock
jecxz
int
jecxz
lret
clc
std
fsub
cli
divl
cmp
loope
sti
imul
cmp
lret
mov
std
xchg
out
lret
lock
into
xorb
sti
aas
out
and
int3
icebp
lret
xchg
into
icebp
xor
in
lret
neg
lret
rcl
xchg
addb
in
rorb
fadd
repnz
shr
lock
cmp
out
in
ret
sti
std
out
mov
fists
lock
in
aam
hlt
jmp
rcl
test
fistpll
enter
and
xchg
addl
hlt
fstp
sti
out
push
hlt
sti
fadds
xor
incb
enter
cli
fstpt
iret
test
sti
neg
out
neg
in
dec
in
cmc
xor
sar
in
xor
std
int3
in
xor
rolb
ljmp
ret
orb
repz
into
cmp
fcmovnb
cmc
loop
cld
loopne
in
lds
lock
fchs
xlat
sti
sarl
fstpt
out
std
ror
out
mov
leave
cli
cmp
stc
cmp
ljmp
aas
fcmovbe
loope
call
mov
aaa
das
stc
jmp
icebp
cmc
rcl
leave
cmp
shl
shl
loope
loop
call
xchg
out
ror
out
fptan
div
sti
aas
out
fdiv
hlt
loope
cmc
aam
jmp
sbb
mov
icebp
in
shl
aam
in
xor
fxch
sti
lret
int3
repz
cli
xchg
shr
sti
addb
repnz
xlat
cs
jmp
cmp
sti
out
fcmovbe
bnd
jecxz
lock
fucomip
lret
jmp
xor
iret
enter
out
ffreep
int
cmp
shr
and
fildl
xchg
xchg
jmp
loopne
inc
lock
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
add
addb
add
enter
aad
enter
adc
test
xlat
xlat
in
enter
in
nop
lock
aam
cmp
loop
out
leave
int3
lret
fsubr
fdivr
les
mov
cld
vpcomud
mov
in
aam
lock
loopne
out
jecxz
aad
rcl
ret
mov
xchg
fucomp
out
ret
lret
fucomp
out
sar
sar
rol
clc
fisttps
out
xchg
cld
test
in
leave
sub
jmp
xor
repz
out
rol
lock
hlt
int3
in
lret
into
loope
in
icebp
fdivs
xlat
ss
std
repnz
cld
fincstp
adc
sti
repnz
clc
cli
jecxz
rorl
jmp
out
ror
cmp
in
leave
jmp
jmp
mov
shr
sub
xor
xor
lock
jmp
cmp
into
idivl
fmul
lea
mov
lock
repz
cld
sti
fiaddl
jecxz
xor
mul
iret
ljmp
int3
fdiv
clc
shl
aam
rol
xchg
jmp
fiaddl
rol
loop
cli
divl
fldl
enter
xchg
into
out
jmp
lds
fadd
xor
div
xor
fcmove
in
fdivrs
test
in
ljmp
out
leave
in
icebp
shl
sti
aam
ffreep
cli
fcom
incl
sub
xor
leave
cmc
aaa
das
shl
in
cmpb
loope
in
out
ffreep
in
in
or
jmp
into
xor
xlat
jmp
int
clc
add
ret
or
fdivrp
jecxz
out
lret
in
int3
sub
enter
lock
clc
vpsubw
call
std
rclb
int3
cmp
xor
icebp
int
cmp
jmp
hlt
cmp
iret
out
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
sub
rorb
jle
mov
faddp
lock
and
loop
cmp
cld
lret
loopne
iret
out
cli
vpsrld
mov
fcmovnu
fucomi
in
lock
ret
jmp
out
div
cmp
lret
test
hlt
loope
out
ljmp
out
repnz
cmc
shr
aad
xlat
jecxz
fdivr
in
sti
call
in
lock
call
loopne
fdiv
xlat
xlat
dec
in
in
fcmovnbe
xchg
in
iret
lock
aam
out
xlat
fcomp
clc
sti
sti
mov
rcll
in
fmulp
out
out
cmp
rcr
repnz
xchg
jmp
out
xchg
loop
in
call
aas
int3
cld
icebp
out
in
les
fildl
test
divl
xor
lret
div
cli
loopne
clc
call
cmc
fmuls
call
fstpt
in
xlat
iret
xlat
xlat
in
rol
aas
fcom
in
out
fisttpl
addb
sar
rcr
int3
repz
test
in
mov
sar
orl
int3
clc
int
leave
ljmp
std
jmp
test
or
test
rcll
into
in
cmp
cmp
sbb
mul
fldl
jecxz
jmp
ljmp
rcl
enter
sti
rcr
shl
in
cmp
loope
in
mul
fdivp
iret
icebp
fisttpll
stc
aad
aad
idivl
leave
lret
icebp
lock
rol
leave
lret
mov
nop
xchg
and
shl
stc
xbegin
fsqrt
shlb
aad
out
inc
fucomi
loopne
fildl
xchg
xor
out
fnop
ljmp
ret
cld
orb
cli
fxch
repnz
addl
repnz
fdivs
sar
fadd
out
sub
mov
fmull
cmp
repz
sti
repz
mov
hlt
repz
mov
call
repnz
in
xor
sti
lret
out
stc
cmp
fcom
test
out
xlat
jmp
call
xor
rcr
loope
xor
icebp
sar
jecxz
icebp
mov
mul
sti
in
mov
aaa
test
out
aam
ds
aas
ds
out
cli
cmc
mov
xlat
mov
test
mov
xlat
hlt
lock
out
ror
cmp
test
xor
sti
movl
add
jmp
rol
rcr
fld
pop
into
shll
adc
jle
idiv
lret
lret
cli
test
jmp
aad
sub
int
stc
xor
lret
jmp
aad
ret
fdivr
fisttpl
xchg
xorb
cli
fnstcw
aas
cmp
cmp
test
cmc
cld
jmp
xchg
shl
loopne
repnz
test
xlat
xlat
lret
fscale
xor
xor
cli
xlat
faddp
ret
movl
aad
ror
jmp
ret
les
mov
jmp
into
into
xchg
mov
rcl
iret
xor
int3
fnstenv
fcomip
cld
div
cli
xchg
in
iret
std
shl
leave
cmc
out
in
out
out
cmpb
rcr
stc
faddp
aad
mov
out
mov
in
xchg
into
xchg
repnz
call
fst
faddl
repnz
mov
in
in
loop
rcl
les
stc
xor
rcl
icebp
shl
in
test
clc
xchg
decb
enter
call
div
cmc
lock
loop
cmc
ljmp
icebp
loop
xchg
xor
xor
cmp
dec
aam
loope
in
iret
fimuls
out
or
jmp
xchg
test
fcmovne
out
fcmovnb
jmp
lock
ret
mov
cmp
in
call
ret
lret
in
out
fcmovbe
in
icebp
aas
incl
repnz
jecxz
test
loop
loop
out
fnop
testb
icebp
in
repnz
test
filds
xor
out
clc
xor
or
aaa
hlt
out
ret
iret
lret
in
into
test
rol
rcl
jmp
repz
ljmp
test
xchg
jmp
loope
test
xchg
loopne
cmp
out
aaa
leave
lock
icebp
lret
cmp
in
loop
shl
jecxz
ljmp
icebp
repnz
ret
xlat
jecxz
repz
rcl
cli
stc
repz
fsub
testl
mov
lret
cld
lret
fsub
ds
ds
out
imul
jmp
fiaddl
cld
jecxz
loopne
loope
in
fdivrs
cmp
xchg
hlt
mov
test
test
icebp
fimuls
leave
ss
sti
ss
in
div
fiadds
fadds
sub
mov
xchg
aaa
ret
cmc
sarl
fcom
int
cmp
cli
test
aam
out
sti
ljmp
lret
repnz
xor
in
ss
cli
aas
xlat
rol
loop
fcmovb
inc
cld
daa
test
inc
add
add
add
rolb
add
add
add
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
push
or
xchg
dec
xchg
jle
mov
repz
cld
mov
out
jmp
aad
xlat
loop
lret
aam
leave
ror
aas
in
out
loope
clc
mov
cld
in
out
lock
das
in
repnz
das
cmp
idivb
cmp
iret
iret
fcomip
mov
out
enter
int
addl
stc
call
in
cmp
neg
ret
mov
call
xchg
xchg
cmp
shl
flds
ret
cmp
loop
test
lea
leave
fcmove
in
out
loopne
in
int3
rol
cmp
ret
ret
in
stc
nop
xchg
ljmp
clc
out
fstpt
jmp
cmp
cmp
shl
jmp
stc
nop
or
loop
repz
icebp
jmp
aas
int3
ret
addb
clc
sti
stc
int3
lret
ror
add
fmul
fdivrl
fucomp
loopne
ffree
fcmovnb
mov
incl
in
in
in
xchg
aaa
shll
into
jmp
iret
rolb
repz
rorb
fmul
int3
and
in
call
in
fdivrs
loope
lret
stc
sar
in
ljmp
xchg
aam
loopne
leave
xor
cmp
jmp
int
repnz
repnz
xor
addl
out
in
hlt
xor
xlat
iret
flds
testb
cld
xchg
dec
fucomip
les
cmc
sar
ljmp
std
loopne
rcr
fldl
lret
jecxz
out
hlt
in
ret
call
in
jecxz
into
hlt
out
adc
xchg
call
icebp
cli
repz
repnz
shl
cmp
clc
fcomip
in
aad
out
nop
in
mov
repz
mov
repz
cmp
aas
xlat
inc
not
not
cli
mov
enter
call
repnz
enter
into
cmc
xlat
sar
jecxz
xchg
in
int
jmp
iret
int
fsubr
xor
xor
div
fadds
roll
cld
ljmp
int3
cmp
int3
fnstsw
aam
rcl
fadd
in
fmul
lea
xlat
fmul
repz
out
cld
xor
cli
std
mov
mov
mov
mov
loop
orl
rol
cmp
cmp
div
ss
ffree
in
test
rcl
shl
idiv
fsubp
sti
loope
out
jecxz
cmp
in
shl
aaa
enter
xor
sti
mov
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
xlat
loop
mov
jmp
fmulp
fprem
fsubrp
loopne
mov
xlat
loopne
hlt
repnz
sti
ss
lock
cmpl
aad
aad
sub
fcmovnbe
xchg
int
xor
cmp
repz
cli
into
cmp
ds
in
lret
int
mov
in
int
xchg
clc
sar
ss
out
cmp
in
ds
lock
jmp
out
lret
into
int3
xchg
sar
lret
aad
cmp
iret
fdiv
and
fsubp
fdivr
icebp
sti
xchg
int3
cmp
out
aam
into
testl
clc
leave
in
out
call
lret
das
ret
ret
call
xorb
cli
enter
xlat
mov
int
shr
sub
shl
in
sarl
cmp
xor
jecxz
clc
hlt
clc
out
enter
int3
xchg
in
sar
in
sti
out
div
fcmove
cmc
xor
repnz
repz
in
jecxz
out
or
imul
icebp
in
lock
jmp
not
fcomip
hlt
ret
dec
loop
ljmp
enter
cmp
cmp
lock
fadd
in
in
mov
mov
in
jmp
clc
stc
les
in
xor
clc
aas
jecxz
mov
test
loopne
stc
call
orb
clc
cmp
loopne
cmp
add
ds
mov
enter
xchg
hlt
repz
out
test
cmp
cmp
int
int
mov
aas
fcmovnu
loopne
lret
adc
enter
les
xlat
test
aad
ret
aam
hlt
aas
enter
out
loopne
xchg
iret
adcb
aad
neg
div
sbb
les
in
mov
xchg
mov
in
cmp
rcl
neg
ffreep
leave
out
fabs
call
aam
shrb
leave
ret
ljmp
repz
repnz
orb
sub
jecxz
xor
cli
ljmp
inc
ss
leave
fst
call
loopne
loope
call
aam
jmp
cld
dec
ljmp
shl
fcmovnb
loop
jmp
and
fnstenv
dec
iret
cmp
incl
incb
ret
in
fimuls
icebp
lret
or
sti
ret
out
jecxz
sbb
imul
mov
ljmp
cmp
rcl
out
jmp
xor
dec
or
jmp
rcl
aad
aad
shll
xchg
in
lret
jle
add
into
incl
sti
movl
in
enter
lock
lret
rolb
hlt
in
loop
loop
out
fst
in
iret
clc
in
in
int
jmp
cmp
out
loop
sti
clc
xchg
aad
out
iret
enter
mul
ror
aaa
xor
sbb
lret
ffree
aam
roll
mov
loope
ror
cmc
cmc
shl
ret
clc
out
cmp
shl
fcmove
loope
out
cmp
mov
adc
iret
xchg
lret
xchg
in
in
shr
int3
aad
cmp
sar
cmp
hlt
fucomi
rcl
cld
out
ljmp
in
out
hlt
aam
ljmp
lret
rol
ret
xchg
movb
xor
ss
xor
clc
lret
mov
in
fsub
fldl
ror
jecxz
incb
aaa
xor
clc
rcl
cmpb
loop
mov
sti
xlat
mov
in
mov
and
jmp
lret
out
fstpt
fdivl
xor
into
shl
xchg
enter
stc
call
adc
lret
out
stc
out
xor
cmp
stc
test
fucomp
lret
fmuls
xchg
ljmp
cmp
ds
icebp
cmp
test
rcl
fxam
xchg
into
fnsetpm(287
fcmovbe
mov
iret
repz
into
xor
out
cmp
ror
lret
cmp
xchg
cld
fstp
mov
std
movl
div
jmp
loope
cmp
sti
out
shr
mov
add
test
in
popl
repz
into
xor
shll
cmp
iret
cld
call
sti
fildl
fnclex
ljmp
icebp
int3
clc
aaa
aaa
fistpll
std
fsubp
shl
rol
rol
fcmovu
lret
fmul
cmp
in
xor
enter
ss
in
add
test
sub
lock
jmp
mov
lret
lea
into
lret
lret
in
cmp
repz
rol
fcomi
cmp
out
mul
fdivrp
fdivr
shl
mov
enter
clc
iret
cmp
out
fucom
iret
mul
enter
xchg
in
ret
repnz
ljmp
repnz
int
out
aam
out
hlt
mov
loop
sbb
jecxz
in
xor
lock
cmp
aaa
ds
aas
cmp
stc
or
std
xchg
les
out
ss
rcr
jecxz
aas
out
repz
faddp
enter
out
fiadds
cli
cmp
out
in
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
push
xchg
les
mov
repnz
aas
test
call
mov
out
in
orl
xlat
cmp
icebp
out
lret
test
stc
fadd
jmp
nop
icebp
mov
xor
iret
lock
cmp
fldlg2
call
sarl
filds
mov
test
sti
rcl
rclb
out
xor
cld
cmp
clc
fidivrl
cld
fidivrl
cld
std
fdivr
mov
rolb
rcl
sub
shll
aam
xlat
repz
iret
xchg
mov
jmp
jmp
hlt
into
loope
cmc
ljmp
out
lock
adc
addb
out
xchg
xchg
int3
test
xabort
sar
loop
cld
std
mov
fstp
shl
in
rolb
shlb
xor
lret
enter
cmc
roll
jmp
loopne
out
sbb
shl
repnz
sub
int
lret
sbb
ds
cmp
std
fstl
fnstenv
in
in
pushl
jecxz
icebp
xlat
fmull
mov
lret
iret
out
xlat
iret
out
int3
in
aad
stc
fsubr
hlt
clc
adc
mov
testb
loop
out
xor
das
ljmp
aas
cli
in
shl
xlat
loopne
fsubr
popl
nop
repz
fnop
iret
in
lret
ljmp
out
call
loope
mov
test
nop
int
out
in
leave
aad
enter
inc
fnstcw
sub
test
call
xchg
mov
repz
cmp
aaa
xor
rcr
rcr
lock
mov
add
leave
out
sbb
repz
sti
repnz
in
cli
shll
in
test
std
fcmovnb
xlat
fsubr
loopne
in
xchg
loopne
fsubrs
jecxz
clc
fmulp
cmp
ffree
repnz
ljmp
mov
lea
shl
jmp
out
adc
fiaddl
sub
xchg
fimuls
ret
stc
rcl
ret
in
ds
sbb
lds
lret
xchg
out
ror
jecxz
repnz
aaa
icebp
int
inc
clc
test
neg
test
jmp
aas
out
or
ljmp
loope
ret
cmp
ds
int
fildl
adc
loope
test
out
out
int
jecxz
repnz
repnz
fldl
adc
aas
jecxz
fsub
adcb
int3
xor
repz
decb
test
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
dec
testb
pushf
jle
mov
cmp
int
in
cli
mov
cmp
leave
call
leave
add
into
into
int
fdivrl
loopne
iret
cmp
ljmp
cli
fmul
out
std
sub
xor
iret
shlb
shll
mul
stc
cmp
mov
fdivr
int3
faddl
xor
cmp
lret
mul
aaa
rolb
out
loope
in
lea
jmp
repnz
cmp
in
dec
lock
aas
std
in
xabort
mov
lea
mov
xor
ror
ljmp
jecxz
hlt
cmc
ljmp
std
adc
call
cmp
enter
ds
jecxz
fsubp
fisttps
xchg
cmc
ror
cs
into
xor
leave
ljmp
ds
out
call
call
out
xchg
xlat
ror
fxch
iret
shl
lock
ret
neg
fdivp
loopne
ret
orb
jmp
neg
hlt
shl
cmp
xor
ror
icebp
fcomp
sar
jecxz
in
sar
ds
jmp
shl
enter
sti
cli
in
lock
repnz
cli
xchg
sub
loope
dec
out
jecxz
loop
xor
repnz
lock
icebp
loopne
stc
lret
cmp
xchg
mul
testb
sar
rclb
cmp
in
int
lret
cld
rcl
ret
fcom
neg
enter
call
rcl
repz
aaa
cld
ss
fnstenv
fsub
testb
lret
out
std
in
jmp
xor
fstp
xor
fprem1
fsub
cmp
jmp
hlt
std
test
xlat
ss
cmp
cmp
lret
clc
loopne
icebp
mov
mov
fisttpll
jmp
out
fucomp
loope
fdivr
out
ret
ret
lds
cli
lret
int3
orb
cmp
in
jmp
std
xchg
xlat
and
stc
clc
out
xchg
loopne
out
out
jmp
fxch
int
cmp
rcr
fcmovbe
in
ret
addl
rcr
xchg
loopne
xchg
int3
int3
xor
lret
std
sti
loop
in
addl
jmp
in
out
xor
sti
int
fucomip
cmp
fcmovne
fdivp
ror
leave
lret
jmp
int3
adcb
cli
repnz
aad
jmp
rol
ss
aas
add
xchg
mov
and
jmp
mov
lock
icebp
testb
jmp
rcl
rcr
fstp
aam
cmp
lods
popf
mov
jle
mov
lret
xlat
neg
jecxz
loop
out
mov
filds
mov
shl
ljmp
fcomp
add
test
mov
leave
ljmp
bnd
cmc
aam
sarb
loop
fildl
test
in
xchg
ljmp
xor
fstpt
sti
in
cmp
fdivr
lret
loopne
fsub
loopne
xor
int3
repz
fidivrs
sarl
out
ret
aas
fprem
cli
xchg
loope
loopne
fsubp
and
in
icebp
jecxz
lock
neg
jmp
lret
rol
rcl
in
ljmp
call
loop
lret
cmp
loopne
lret
xor
in
cmp
loop
mov
in
in
loope
in
xchg
ljmp
cmc
out
imul
cmp
in
lock
cmp
fmulp
in
out
into
orl
in
cs
cmp
in
cmp
ret
fsub
and
loop
jmp
mov
test
repz
out
std
cmp
repz
loopne
fmull
sbb
out
in
hlt
ror
xchg
lret
incb
sbb
clc
enter
cld
mov
ljmp
int
cmp
hlt
loopne
cli
xor
test
out
repnz
shr
out
loopne
fsubr
std
aam
xor
rcl
fdivr
into
sti
ret
ret
addl
repz
xchg
out
enter
icebp
std
fcmovne
in
hlt
mul
fadds
hlt
lret
int
sti
ror
fucom
xor
cmp
divl
repz
in
cld
adc
aad
jecxz
and
xchg
filds
in
rcr
cmp
inc
cmp
ret
fmul
in
int3
xchg
test
fdivr
rcr
in
adc
std
cmp
jecxz
sti
lret
test
cli
jmp
cmp
sarl
fadds
hlt
xchg
sti
lret
hlt
cld
enter
leave
xchg
fucom
int
imul
aad
fdivl
aaa
ljmp
stc
loop
add
xlat
in
out
loopne
faddl
leave
repz
out
hlt
xor
out
adc
loopne
fmuls
mov
into
cmc
clc
repnz
xlat
shr
cld
xor
into
inc
cmc
idiv
repnz
out
leave
fsqrt
mov
std
bnd
jmp
out
leave
fdivrp
shl
fcmovnbe
fiaddl
aam
mov
into
nop
hlt
xchg
iret
xor
xor
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
cmc
mov
jle
mov
int
aam
in
cld
in
rcr
cmp
sti
fadd
orb
mov
repz
lret
ljmp
jecxz
fcomi
mov
in
loope
mov
xchg
dec
xchg
in
cli
ljmp
in
ret
clc
cmp
sbb
leave
nop
xchg
call
rcl
int
lret
cld
into
mul
sbb
or
sti
jmp
xor
int
icebp
fincstp
aaa
cmp
cli
loop
xlat
hlt
leave
in
in
orl
fiadds
aad
ljmp
icebp
cli
loopne
out
enter
in
adcl
imul
xor
icebp
rcl
repnz
std
aam
jmp
loop
nop
adc
in
lds
shr
sbb
cmp
sarl
aad
rolb
jecxz
icebp
jecxz
lret
jmp
stc
loope
hlt
cmp
aam
and
clc
stc
nop
xchg
into
mov
out
xor
ljmp
cli
into
cld
icebp
ret
jecxz
cld
mov
fmul
out
cld
int3
mov
xchg
in
repnz
ret
lret
lock
sar
cmp
shl
xchg
hlt
hlt
fdivr
sar
xchg
loopne
imul
aam
icebp
iret
leave
out
aaa
aad
rcr
jecxz
sti
mov
ljmp
orl
lds
loope
sub
mul
cli
lret
cmp
cmc
loopne
aad
mov
lret
sti
rorl
jmp
cmp
int
cmp
fcmovnu
aad
into
icebp
out
xchg
stc
ret
cld
sbb
jecxz
add
jmp
xor
sar
out
sti
aam
mov
or
in
test
mov
xchg
jecxz
fld
neg
fidivl
fiadds
sar
and
aad
lock
std
cmc
mov
sub
xor
sti
into
fndisi(8087
shr
mov
sbb
jmp
lock
in
icebp
int
ljmp
xlat
jmp
cld
in
loop
jmp
rcll
loope
aam
std
ds
rcr
icebp
mov
loopne
fiadds
xchg
int
ljmp
out
fiaddl
aas
adc
stc
mul
fimull
repz
cmc
lret
lock
imulb
xor
cmp
aaa
iret
cmp
imul
test
call
mov
xorl
das
xor
ljmp
cmp
xchg
in
mov
sti
out
rolb
mov
cmp
jmp
rcl
aad
rcrl
sub
movsl
jle
mov
xor
test
cmc
sti
cmp
in
aam
and
iret
filds
rcl
fldt
out
in
fcmovbe
rcr
repz
sbb
mov
mov
loope
in
repz
xor
shr
loope
ror
sub
out
cmp
ror
mov
ret
cld
cmp
shl
fcmovb
out
idiv
mul
in
loope
sar
fst
jmp
in
cmc
aaa
sar
enter
loope
out
cmc
enter
xchg
int
fcom
jmp
sub
aam
repnz
ror
dec
fiaddl
ret
fucomip
xchg
out
addb
aaa
loope
test
fcmovu
stc
iret
loop
in
aad
idiv
out
xlat
lret
out
into
addl
neg
in
lret
in
rol
cmp
and
repz
in
int3
jmp
rorl
xor
aam
out
sbb
cmp
call
rorl
lock
iret
cmp
in
rcr
cmp
fsub
int
shl
out
fcmovu
int3
mov
in
xchg
xchg
aam
call
lret
cmp
jecxz
mov
aas
mov
in
sub
out
aam
aad
repz
aad
lock
iret
sub
out
repz
in
out
out
loope
leave
xor
int
int
aam
hlt
cmp
rol
faddp
in
aad
lret
mov
mov
repz
sarb
int3
xor
out
into
cmc
fnstsw
sti
hlt
rol
leave
xchg
mov
fnstsw
std
incl
int3
aaa
fcmovnu
fcomi
stc
flds
hlt
icebp
and
in
lret
in
into
ljmp
shl
repnz
lock
out
into
ds
fcom
aas
xlat
loop
cmc
call
push
cmc
in
div
xor
cmp
fucomip
cmp
cmpl
push
std
addl
in
fstl
ljmp
out
repz
cmp
cmp
fmull
loope
out
fists
loop
int
fsincos
stc
fsub
fstpt
test
out
leave
out
mov
lock
out
aad
sub
xor
cmc
repnz
cmp
loop
out
sub
sub
lock
stc
in
out
fucomi
jecxz
into
clc
fxch
out
addb
in
int
ljmp
out
cld
loope
shl
test
les
mov
test
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
dec
ret
movl
in
aam
in
repnz
xor
cmc
xlat
imul
loop
test
lret
test
stc
rcl
hlt
sub
cld
hlt
std
iret
fnstsw
cmp
out
sbb
fxch
loopne
mov
std
out
call
out
clc
xor
lret
fisubrl
divb
cmp
cmp
xchg
in
cld
loop
ljmp
mov
call
fcmovu
std
cld
xor
cmp
xlat
aas
hlt
mov
cli
fsubr
into
in
out
test
mov
not
leave
cmp
leave
cmp
fdivs
sbb
in
std
loop
or
imul
out
mov
ljmp
out
cmc
cmp
xor
mul
repz
shl
clc
enter
movb
xlat
fsubr
les
shr
xor
repz
cld
icebp
cmp
fxtract
std
int3
sbb
out
fisttpll
test
enter
cmp
jmp
lock
fucomi
push
test
movb
shl
xor
in
iret
std
fcomp
hlt
iret
fsub
into
les
aam
idiv
fst
cld
repz
icebp
xor
enter
aam
fsubr
loop
aad
ret
aas
ljmp
or
sti
icebp
into
ret
jmp
cmp
ss
loopne
cmc
fiadds
mov
hlt
ret
aam
repnz
jmp
std
int
fnsave
and
in
out
int3
and
rorb
int
enter
xlat
loopne
cmp
in
in
decb
iret
mov
lret
into
lret
aaa
into
jecxz
leave
in
fistpll
xor
ds
filds
test
test
roll
out
xlat
cld
call
clc
fcom
cmp
shl
test
faddl
addl
jmp
aaa
sti
int
and
loopne
xor
decb
and
sub
out
leave
shl
xor
loop
in
out
idiv
cli
fcomi
xchg
in
rcr
xchg
xchg
mov
movl
movl
cmp
movl
jmp
mov
fstp
enter
imul
xchg
sbb
jle
into
mov
in
cmp
jmp
fcmovne
shr
in
xor
cli
cmp
fcmovne
ror
in
xchg
in
out
in
not
int
in
cmp
cmp
iret
and
jecxz
loopne
out
leave
shr
lock
shlb
sub
lret
cmp
cmp
cmpb
sbb
jecxz
sti
jmp
xchg
xchg
in
xchg
out
les
xor
cld
cli
lret
sti
lret
idiv
not
fadds
jecxz
mov
adcb
in
aad
cmc
sti
in
cld
rcl
xchg
std
neg
mov
fimuls
xchg
test
fsub
fcomip
mul
ret
push
mov
jecxz
fisttpll
shr
ss
vpsrlq
icebp
cmp
fucomi
in
ljmp
in
jmp
hlt
aaa
hlt
sar
in
aad
test
mov
aam
add
out
decb
rcl
ret
shll
leave
int3
jmp
repnz
call
fildl
xchg
int3
test
xor
xor
int
cmp
cld
call
shl
sbb
cli
mov
xlat
fmul
mov
xchg
ljmp
aad
fcomi
fsubrp
sarb
adc
filds
mov
xchg
xchg
hlt
xlat
lock
cmp
fidivl
aad
not
div
ds
loopne
sbb
jmp
frstpm(287
aad
shl
out
ret
shl
jmp
adc
ret
std
loopne
in
int3
loop
lea
sub
fucomp
cmc
fdiv
rolb
in
hlt
aad
jecxz
imul
mov
test
in
hlt
xor
bnd
icebp
iret
fucom
test
mul
jecxz
loop
int3
leave
mov
fucomip
rolb
lret
cli
ds
sti
hlt
cli
stc
cmp
loope
jmp
iret
sub
aad
ljmp
loop
filds
mov
test
int3
or
add
add
push
add
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
test
xchg
jecxz
xor
std
ror
xor
fadd
in
lock
jmp
shl
not
cmp
repz
loopne
cmp
test
fcom
leave
jecxz
loope
mov
nop
into
fsub
xor
cmp
idivb
ds
repnz
xlat
fnstcw
loop
fsubrp
int3
dec
filds
shl
iret
int3
xor
ds
stc
flds
lret
lret
out
sub
rcr
icebp
repnz
hlt
iret
lret
idivl
mul
icebp
fcomi
ljmp
mov
sub
cmp
lock
adc
in
addb
xchg
jecxz
cli
into
hlt
jmp
xchg
ret
into
jmp
stc
loop
out
ss
hlt
cmc
loope
aam
mov
leave
out
leave
repz
into
icebp
test
das
das
icebp
cmp
jmp
iret
xlat
cmp
repz
cld
loope
cli
fdivr
in
leave
cld
std
xchg
fucomip
mov
xlat
cmp
xlat
cs
fmulp
icebp
sbb
in
mov
cli
out
shr
decl
fcomp
ror
in
ljmp
loope
lret
cmc
cld
rcr
xchg
aam
loope
lds
lock
fucom
shl
fldl
out
or
repnz
fldl2e
aaa
out
cmp
filds
loop
in
out
icebp
int
roll
leave
jmp
aas
hlt
repnz
cmp
ret
hlt
ret
mov
xchg
loopne
ljmp
repz
loopne
aam
ror
cmp
ret
xlat
int3
loop
out
adcb
xor
sub
loope
cmp
cmp
cmp
bnd
dec
mov
cli
nop
leave
jmp
int3
adcl
hlt
hlt
stc
cmp
adc
xchg
out
test
mov
out
mov
cld
xor
out
std
sar
shl
sar
std
ret
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
out
cli
les
scas
jle
sbb
jle
xchg
rclb
stc
in
xor
xlat
lock
xlat
into
xor
ret
int
aam
aad
idiv
ljmp
iret
ljmp
lock
iret
loope
stc
and
neg
fld1
xchg
loop
xchg
jmp
in
enter
fmul
icebp
lret
lock
cli
xchg
fdiv
in
dec
sti
dec
nop
rolb
leave
ss
fsubr
ss
in
aas
in
hlt
fdivrs
in
mov
lret
cld
xchg
repnz
lret
cmc
xor
aaa
repnz
cmp
rcl
xlat
ret
cmp
xlat
jecxz
leave
xchg
loopne
not
fld
cmp
xlat
aaa
in
hlt
shl
out
leave
jmp
lock
into
shr
lock
jmp
repz
cmp
ljmp
movb
out
int3
sub
aam
aad
ljmp
cmp
fistpll
fidivrl
ror
leave
mov
nop
in
std
jecxz
xchg
cs
xor
call
cmp
hlt
int
fdivr
out
xchg
loope
xchg
out
xchg
xchg
loopne
into
ret
ds
xor
sar
fcmovu
xlat
test
xchg
fsub
loopne
xchg
in
out
aaa
ss
repz
shr
hlt
sar
in
out
add
out
cld
fcomp
out
lret
lea
leave
int3
aam
sub
lock
in
idiv
in
adc
std
xchg
out
iret
lret
in
in
imul
cmc
repnz
cmp
shl
into
add
cmp
mov
loop
fdivr
jmp
fcmovnu
popl
in
cmp
cmp
aad
shll
cld
fld
jecxz
in
sti
jmp
std
fsub
rorb
in
ljmp
cmc
icebp
rcr
cli
addb
ljmp
out
dec
int3
stc
cmc
xor
xchg
mov
ret
into
cli
out
roll
xor
out
in
jmp
iret
ror
iret
neg
test
shl
leave
sbb
xor
sarl
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
bound
cli
sbb
mov
jle
add
cmp
in
in
cli
fadd
xor
enter
int
flds
fcom
fimull
out
loope
xor
aaa
xor
aas
rcl
not
cmp
rcl
mov
call
ret
sub
in
out
iret
lret
fdivrs
ret
cld
les
cld
iret
fisttpll
shlb
aad
shr
enter
jecxz
cmpb
out
jmp
mov
int3
push
xor
ret
std
cmp
repnz
xlat
xor
fisttps
int
ljmp
out
shl
lret
xor
cmp
cmp
cli
out
shl
out
cli
cli
add
sti
sbb
test
out
stc
ror
into
out
in
fsubp
in
lret
in
icebp
addb
out
orl
xor
jmp
sti
int3
cmp
rcr
iret
loopne
movl
xor
loope
loope
jmp
lret
hlt
cmc
iret
cmp
out
enter
fxch
cld
mov
repnz
xchg
ror
out
icebp
xor
lret
cld
ss
int
out
ret
in
and
addb
xchg
or
aad
xor
hlt
repz
std
loope
not
cmp
aad
in
stc
xchg
rcl
int
in
xor
int
imul
sbb
cmp
cmp
testb
loop
xchg
mov
lret
int3
jmp
cmp
sbb
std
loope
lock
cld
in
in
into
fiadds
rol
idiv
std
leave
jmp
ss
aam
aam
hlt
out
out
stc
rcl
in
test
mov
repnz
out
lret
idiv
lret
lock
repz
jmp
loope
in
ljmp
loop
out
in
stc
hlt
fdivl
int
or
cli
ds
loop
clc
int
leave
orl
iret
xlat
fdiv
jmp
iret
aaa
repnz
out
not
and
jmp
aam
enter
aad
cmp
and
enter
jle
sbb
jle
jmp
incl
jmp
in
xor
ret
lret
cmp
out
cmp
cmp
test
out
stc
icebp
adcl
cmc
aad
fcmovnu
loop
fld
in
vpaddd
mov
in
in
out
rolb
fcomp
cmp
lock
loop
cmp
shl
cmp
test
call
fisttps
ret
int3
sti
repnz
out
ljmp
ret
loop
fadds
in
in
shr
xchg
clc
out
cmc
loop
cmp
fsubr
shl
fadd
test
rcr
jmp
out
lret
xchg
cld
adcb
test
sti
idivl
out
fistpll
in
in
xchg
filds
cmc
out
aam
lret
ljmp
out
out
mul
stc
in
fucomp
xchg
mov
hlt
loope
jecxz
repz
ds
cmp
out
cmp
fisttpl
orl
lds
aaa
int
ljmp
cmp
cmc
ret
mov
nop
mov
out
int
out
call
ljmp
out
incl
and
in
loope
call
in
ffree
icebp
ror
aad
jecxz
lock
out
into
in
shl
xchg
out
int3
xor
out
fcomip
cmp
xlat
sti
cli
aam
jmp
mov
mov
in
cld
iret
add
fidivl
cmp
ror
shl
loop
ret
cmp
test
sti
cli
into
out
loope
mov
mov
fld
xlat
shl
int3
cli
loopne
sti
ror
loop
xbegin
cmp
in
xchg
jmp
rol
das
hlt
cmp
loope
test
ds
mov
cmpl
jmp
mov
jecxz
xor
int
out
xor
fsqrt
ror
xchg
jmp
in
xchg
out
jmp
clc
cmp
cmp
repz
shl
rolb
add
pop
add
add
adc
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
mov
test
roll
xor
lret
rcr
sti
fsub
aaa
aad
neg
jecxz
test
cmc
test
xchg
loopne
lock
int3
loope
icebp
out
xor
out
fsubp
cld
cmp
repz
fsubr
enter
rol
nop
mov
xchg
hlt
jmp
xor
fxch
out
int
lret
not
aaa
ffreep
aad
jecxz
lret
loope
icebp
int3
xchg
jecxz
in
aam
out
hlt
icebp
leave
hlt
incl
cli
in
sti
std
orl
mov
jmp
jmp
cmp
std
lock
addl
out
int
adc
out
aas
iret
int
rcr
jmp
out
out
loope
cmp
call
mov
lret
out
repnz
into
sti
lret
xlat
rcr
out
clc
ret
cld
cli
ljmp
repz
out
lret
icebp
xlat
ljmp
hlt
icebp
test
std
sub
mov
in
mov
ret
in
enter
shr
int
std
call
sub
into
test
in
not
out
ljmp
clc
out
fadds
dec
enter
icebp
notb
repnz
aad
icebp
repz
fcmovnb
and
roll
mov
out
ret
lds
cmp
xlat
ror
sti
les
std
cld
cmp
cld
int
jmp
iret
rcl
xchg
ffreep
ljmp
xor
fadd
neg
cmc
fprem1
xchg
fsub
idiv
mov
rcl
xchg
enter
enter
fsqrt
loopne
cmp
test
cld
in
call
hlt
jmp
xchg
leave
xor
in
cld
stc
xorl
fcmovnbe
std
mov
ds
fsubp
call
lock
in
out
rol
jmp
aad
rol
xchg
aas
aam
fmull
cld
lret
int
shl
hlt
cmc
sti
xor
lret
fdiv
repz
fdivr
pushl
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
xchg
les
nop
mov
jle
add
loope
xor
mov
stc
out
xchg
call
cmp
cmp
aad
cmp
ret
xlat
cli
cmp
stc
cld
out
jmp
in
cmp
repnz
into
enter
not
rol
std
stc
xlat
fcomip
div
xchg
nop
loop
rcl
rcr
xlat
hlt
sbb
loop
icebp
shr
rolb
mov
repz
ljmp
ror
fstpt
xor
test
shl
xchg
hlt
mov
shr
in
repz
cmp
jecxz
out
stc
cmp
fildl
jmp
das
xor
leave
fnstenv
fld
cld
shr
rol
vpsrad
aad
std
dec
enter
fucomip
xlat
cmp
enter
aaa
call
cmp
jmp
cmc
jmp
test
xchg
shlb
out
aad
hlt
hlt
cmp
cmp
xor
mov
fimull
repz
test
out
enter
hlt
jmp
incl
loope
out
int3
mov
loopne
rcl
cmc
ljmp
out
xlat
shl
cmp
aad
cli
neg
cmc
in
call
in
mov
xor
cli
out
int
aas
shl
faddl
test
fisttpll
in
shl
cs
cmp
std
iret
lock
cmp
in
into
into
call
cs
cmp
in
aam
ds
call
or
in
int3
xor
repz
int3
jmp
cld
aas
in
rolb
stc
rorb
sar
ret
repnz
cld
out
shr
loop
fdivr
sti
fdivp
repnz
repnz
loop
incb
icebp
aad
push
out
fnstcw
fstp
fdivrp
ftst
ljmp
faddl
cmc
out
jmp
out
lret
dec
lock
mov
fsubr
fcmove
xor
loopne
xchg
repnz
lock
sti
out
cmp
loopne
xlat
fmull
cld
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
inc
ljmp
ret
jle
jmp
test
out
jmp
idiv
cmc
iret
leave
aaa
xor
lock
fnstcw
fistpll
aas
ror
cmp
rcl
nop
icebp
xchg
xchg
xor
xor
shr
hlt
push
iret
ds
loop
ljmp
lret
rcll
in
cmp
int
fcmovnbe
roll
sti
loope
add
in
call
aam
ljmp
cmp
ror
in
in
filds
sti
loope
mov
xchg
xchg
xchg
xor
jecxz
aam
test
cmp
aas
aas
cld
in
stc
xchg
enter
shr
iret
jecxz
xlat
out
jmp
lret
jmp
loope
test
cli
ffree
fildl
xchg
std
in
out
in
cmp
sub
out
iret
sarl
aas
in
xchg
fptan
in
into
out
loop
aad
jmp
cmp
cmp
into
fnstcw
sbb
jmp
lea
out
in
rol
xor
sti
aam
cmp
fstpt
cmpl
ds
shl
nop
test
fcmove
xchg
jecxz
leave
ljmp
xlat
fcmovu
jecxz
loopne
fdivrs
idiv
test
mov
cld
mov
lret
ror
in
jecxz
out
repz
iret
fmul
in
int3
int3
into
call
cmp
hlt
cld
fcomp
fdivrp
out
icebp
call
jmp
iret
xor
hlt
fprem
cmp
xchg
mov
jecxz
sti
cmc
out
out
or
in
xlat
int
repnz
cmp
icebp
enter
cmp
loop
shl
in
fiaddl
in
mov
rcl
call
das
clc
aas
std
fcomip
iret
repz
loopne
or
enter
xchg
loopne
cli
out
cmp
fcmovnu
fdivrp
xlat
aas
fiadds
in
xchg
xchg
repnz
out
xor
clc
sar
cmp
in
test
fists
xchg
in
cmp
divb
aaa
aas
clc
in
int
ret
fxam
loop
fmul
call
out
out
mov
aad
xor
aaa
in
aam
cmp
lret
test
roll
out
ret
in
inc
in
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
std
nop
ror
clc
out
aas
lret
repz
loop
hlt
iret
mov
mov
out
xchg
icebp
leave
out
xor
out
fcmovnu
clc
rcl
shr
aad
or
add
fsubrp
lret
shl
loopne
int3
xor
out
xor
fucomi
xchg
inc
fsincos
incl
jmp
aaa
shl
clc
cmp
into
cli
cmp
out
fiadds
cli
ljmp
xor
xor
divb
fscale
aas
iret
xor
fmulp
in
enter
lret
div
iret
fxch
aad
hlt
out
cmp
sbb
loop
repnz
rol
vpsubsb
loop
or
xor
lret
ss
shl
fldlg2
ret
roll
jmp
in
call
loop
enter
cmp
cld
mul
test
out
ret
lret
mov
fmul
jmp
jecxz
ljmp
ljmp
aas
std
cmp
stc
add
iret
out
jecxz
fmull
aad
ss
cld
hlt
sti
jmp
fucomip
test
cmp
loopne
jmp
fdivr
lret
out
xchg
fnstcw
enter
into
and
rolb
in
loope
out
into
xor
aad
repz
xor
xlat
and
rol
xchg
mov
ljmp
in
xor
clc
jecxz
iret
cmp
jmp
clc
loop
fstpt
loop
hlt
fdivr
cli
adcb
aas
call
jmp
aas
fcomp
mul
rolb
idiv
mov
mov
xlat
rcr
in
stc
cli
aaa
sti
sti
loope
test
cld
testb
lret
into
xchg
mov
out
jmp
fdivrl
cmp
clc
cmpb
cld
rcl
shl
jmp
xor
in
jmp
clc
int3
ljmp
in
loope
orb
int
int3
in
xor
jmp
out
sar
rcr
mov
xchg
nop
lret
inc
in
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
push
shl
fdivrl
jle
jecxz
ret
xor
loop
fadd
hlt
ds
inc
out
ret
loopne
mov
mov
xchg
stc
ljmp
cmp
fsubr
div
loop
clc
not
in
loop
mov
int3
repz
ror
sar
out
cmp
fidivl
rcr
cmp
rcr
loop
fld
loopne
sbb
jmp
in
jmp
into
lock
icebp
aad
iret
icebp
int
xlat
in
out
xchg
cmp
cld
mov
lock
hlt
cmp
cmpb
and
lock
test
jecxz
xor
idiv
jmp
cmp
cmp
jecxz
test
clc
lret
in
or
shl
jmp
lock
iret
stc
out
out
ds
iret
aam
loope
imul
mov
into
test
aad
aad
sti
stc
int
iret
out
lock
and
aad
clc
leave
enter
test
fnstsw
cmp
jmp
icebp
into
cmp
jecxz
stc
lock
mov
loop
ret
test
out
shr
in
fnstcw
lock
xlat
out
in
in
loopne
incb
lret
mov
mov
xor
idivl
leave
icebp
cmp
call
and
fcmovbe
jecxz
clc
fnstsw
or
aad
clc
aad
xor
cld
fmul
jecxz
addb
hlt
ret
testb
loope
in
jmp
aam
cmc
lret
loope
cmc
cmp
aas
sti
test
cld
fstp
add
ret
xchg
mov
in
into
xor
aaa
sarb
rcr
sti
jecxz
bnd
out
decl
fsubrp
call
cmp
jmp
xor
shr
aam
lock
addl
nop
jmp
aad
lret
jmp
jmp
int3
out
rcl
in
fdivrl
in
cmp
mov
xchg
cld
test
xor
aaa
jecxz
icebp
xor
loope
loop
hlt
ljmp
fsub
or
xchg
nop
in
rol
sub
shl
ret
ffreep
cld
fmull
mov
icebp
std
rcr
rcl
sarl
adc
push
flds
add
add
rolb
add
inc
add
movb
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
add
inc
mov
add
xor
fsubr
cmp
cld
hlt
call
in
stc
out
fucomip
stc
cmp
sti
iret
xchg
call
div
repz
xchg
and
sti
in
mov
fsubrp
in
xor
test
cld
int
ret
in
sti
sub
ret
out
stc
mov
icebp
jmp
xor
fdivs
repz
ret
loop
aam
test
fimuls
lret
out
std
loop
aam
iret
ss
xor
xlat
ror
lds
ror
in
mov
out
repz
lret
div
mov
jmp
in
cld
rcr
shl
cmp
fucomi
leave
out
std
sbb
aam
jmp
cmp
fmul
sarb
sti
loopne
cld
iret
in
std
faddp
int
mov
shl
xor
aam
imul
mul
sti
cmp
out
clc
mov
test
ljmp
repnz
xor
in
xlat
rcl
shl
fdivrp
addl
in
xchg
nop
into
lret
xor
das
sti
int3
out
iret
fidivrs
loop
ret
sti
neg
lret
mov
out
cs
cmp
int
neg
not
lret
fdiv
testb
xlat
and
pop
out
jmp
mul
cmp
in
stc
out
sti
aas
out
cmp
cmp
fxch
idiv
loope
ffreep
fsubp
nop
rorl
repz
aaa
imul
cld
cmp
repz
in
test
fxtract
test
out
lret
test
ror
in
lret
stc
jmp
ror
adc
lock
jecxz
mov
cld
in
xchg
test
jecxz
cld
in
cmp
cli
loop
test
loop
xchg
mov
mov
mov
loope
out
xor
out
ljmp
cli
cmp
leave
les
in
out
lret
and
cmp
repz
fnstcw
cmp
out
out
call
test
jecxz
hlt
xor
call
out
cmc
std
std
stc
idiv
cmp
fsubr
testb
fdivr
loopne
loope
sub
icebp
cmp
test
add
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
repz
jle
add
hlt
lret
fldl
in
test
int3
sti
fsub
lock
mov
xlat
jmp
not
int3
jmp
incl
orb
lea
aad
sub
fst
lret
dec
mul
sti
repnz
out
shl
rol
cli
in
int3
in
test
lock
in
aad
call
sarb
hlt
repz
int3
ljmp
divb
xor
ror
clc
cmp
test
loope
aas
clc
cli
cmp
loope
cld
iret
xchg
shlb
sar
repnz
aam
sarl
cld
aas
adc
stc
iret
lock
enter
adc
into
fcmove
jmp
sar
leave
lret
ret
hlt
sar
std
test
cld
xchg
jmp
fnstenv
std
not
leave
in
cmp
lock
stc
ret
int
cld
in
call
repnz
cmp
lret
repz
repnz
ret
fcmovnbe
test
out
nop
stc
repnz
fst
xor
fcmove
lret
aaa
clc
repz
in
xlat
sbb
loope
loopne
adc
xor
out
std
hlt
lret
fdiv
out
roll
mov
nop
xchg
rcl
xor
in
in
iret
xor
repz
clc
loopne
mov
fsubp
adcl
lret
in
out
cmc
out
loopne
out
cmp
ffree
cmc
fdiv
call
in
ljmp
loop
int3
xor
out
stc
icebp
ret
cmp
std
cld
test
call
testb
cmp
fbstp
aam
addl
std
sub
test
mov
in
out
int3
ror
lock
div
aas
clc
hlt
loop
ret
out
call
sbb
out
lds
out
aaa
shl
cmp
in
rcr
lock
enter
xchg
fmul
in
leave
hlt
in
cmc
out
fcmovnbe
int
fst
flds
stc
sti
int
mov
mov
jecxz
enter
shlb
std
xor
mov
mov
jmp
lret
ret
int
lret
in
aad
inc
push
cmc
sub
ret
jle
cmp
hlt
sub
repz
shr
vcvtpd2dq
vprotd
leave
jmp
into
cld
sarl
loop
decb
jmp
in
hlt
jecxz
in
shl
aam
fnstsw
hlt
clc
xlat
fsubr
sbb
repnz
out
std
and
xchg
imulb
cmp
clc
adc
cmp
repz
cmc
testb
out
mov
neg
aad
aaa
aad
aad
loopne
aam
fyl2xp1
aas
out
div
call
out
loope
mov
sub
jmp
rcl
int3
repnz
repz
in
cmp
test
jmp
int3
in
and
int
xor
out
int
cmp
cmc
xchg
fiadds
out
loopne
xchg
ljmp
in
fucomp
into
addb
incb
fnop
repz
addb
in
shl
lret
xor
fidivrl
std
clc
cmp
repz
test
xorl
cmp
fdivrl
ljmp
hlt
repz
xlat
loopne
lret
repnz
xchg
aam
int3
jmp
enter
loopne
and
shr
xlat
out
mov
ljmp
fidivl
sarl
sarb
cmp
int
fdivr
out
fadd
lret
call
out
mov
loop
loop
xor
jmp
std
cmp
cmp
ret
rcr
enter
loop
into
fdivr
call
into
call
cmp
fildl
xor
vpsadbw
in
stc
sub
ret
int
rcr
aas
lret
hlt
fstp
and
xlat
fadd
mov
testb
in
in
stc
in
lret
aam
loop
rol
loopne
les
jmp
leave
out
out
in
loopne
imul
repnz
int3
repnz
ret
xchg
test
sti
out
cld
mov
fsubp
xchg
iret
and
ret
in
lock
sarl
iret
adc
flds
cmc
xchg
lret
std
out
int
loope
cmp
leave
out
lret
ljmp
sahf
clc
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
in
mov
sbb
mov
jecxz
fld
mov
xchg
xchg
repz
ljmp
aam
rcr
ds
ret
sbb
ret
call
in
out
xor
aaa
fdivl
fidivrs
cmp
loopne
fsubr
enter
test
fdivs
aaa
loopne
xchg
aas
jmp
cld
mov
nop
lret
loope
loope
mov
shlb
lret
leave
call
cmpb
std
loopne
enter
test
test
shl
xchg
in
in
rol
rcl
xor
lret
rcr
leave
cmp
addl
loopne
cli
cmp
rcl
ret
aad
cli
test
fcmovbe
std
loop
iret
movl
xchg
fcmovnu
rclb
in
hlt
cli
sub
jecxz
loopne
fdiv
mov
hlt
cmc
addb
fucomip
xchg
hlt
loopne
lret
call
lret
aam
lds
ds
imul
mov
jecxz
int3
shr
lret
jecxz
hlt
hlt
repz
rol
cmp
rol
incb
mov
repz
in
cmc
jmp
icebp
out
idiv
iret
in
enter
fmulp
xchg
cli
icebp
loopne
xchg
aad
clc
lds
enter
cmc
ljmp
std
idiv
cmp
fists
in
enter
lret
repz
fsubr
sarb
aas
vpsllq
in
mov
sub
div
not
icebp
jecxz
call
jmp
stc
ret
out
in
leave
cmp
jmp
loope
enter
test
into
cld
aas
fildl
hlt
aas
enter
xchg
into
ret
and
shrl
out
enter
out
neg
cmp
loop
mov
lret
xchg
mov
xchg
cld
rorb
sti
aam
leave
in
icebp
fdiv
ret
test
repnz
loop
ret
int
iret
jecxz
int
nop
loope
int3
aam
xor
cld
cmc
hlt
in
icebp
repnz
in
xchg
xchg
orb
fdivl
ror
aam
add
mov
orl
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
bnd
out
mov
jle
ret
jle
mul
call
test
loop
test
hlt
div
jmp
aaa
cmp
clc
out
idiv
cmc
lret
aas
in
jmp
loope
int
ss
fpatan
cmp
in
ds
ret
and
mov
test
int3
stc
stc
fucom
jmp
shl
loopne
jmp
aam
lock
iret
fiaddl
icebp
std
ljmp
decl
bnd
aam
int
icebp
loope
incl
clc
neg
out
xchg
fdivr
sar
xchg
int
lock
repz
shll
lret
stc
int
sbb
lock
loope
hlt
aaa
leave
xor
icebp
shl
cmc
fcmovu
fstp
out
in
sar
cld
hlt
roll
fmulp
mov
xchg
out
ret
shrb
cmp
jecxz
test
repz
sub
jmp
nop
int3
xor
stc
fdivrs
cmc
and
xlat
out
cmp
jmp
jmp
ljmp
in
xlat
xlat
cmp
in
aaa
clc
test
mov
lret
jmp
jmp
shll
ss
fdivrp
jmp
cmp
fld
in
idiv
sar
ds
mov
mov
jmp
cld
xor
aam
repnz
dec
fcmovne
loope
icebp
xchg
aad
jmp
fnstcw
shl
fucomp
lret
xor
jecxz
xlat
enter
out
mov
cmc
aam
repz
fcmovnu
in
sti
rol
out
idiv
les
xchg
test
shr
aad
xor
call
int
out
jecxz
enter
lret
popl
out
aad
jmp
lock
clc
aaa
xlat
int
icebp
rol
aam
idiv
vpavgb
std
stc
enter
xchg
and
shll
cmc
ds
xlat
cmp
addl
xlat
fcmove
fisttpl
xor
divl
shr
neg
rolb
aad
incb
fmulp
xchg
dec
in
enter
ljmp
cmpl
loopne
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
outsb
jle
cmp
ret
jle
into
loopne
loope
icebp
lret
out
jecxz
xor
cmp
filds
aad
xlat
fsubrp
ret
xor
out
stc
hlt
out
sar
cmp
in
clc
ds
rcl
call
iret
jmp
xchg
in
mov
xor
into
xlat
out
out
out
enter
fsubp
lret
mov
ss
ror
in
shl
in
ds
lock
xor
fimull
test
loop
xchg
lock
shr
call
jecxz
rcl
sti
in
loope
loop
mov
xchg
mov
out
jmp
xor
repnz
repz
fstpt
lds
enter
out
hlt
jmp
lock
ror
bnd
fstpt
shl
stc
rol
fdivr
xchg
mov
jecxz
lret
int3
repnz
into
in
loopne
aaa
lret
cmpb
cmp
ljmp
icebp
repnz
jecxz
nop
xchg
icebp
shrl
clc
cmc
icebp
leave
fadd
cmp
clc
fdivr
roll
fxch
faddl
xor
shl
aaa
repz
jmp
cmpl
out
aas
idiv
out
movb
jecxz
mov
int
lret
out
leave
int
aam
adc
jmp
jecxz
jecxz
rcl
jecxz
aad
int3
xor
out
not
ret
ror
cmp
jmp
mov
lret
fsub
loop
cs
out
fincstp
jmp
std
cmp
filds
enter
or
jmp
lret
fxch
cmp
sti
adc
cmp
xlat
lret
cli
nop
xchg
out
ljmp
icebp
lock
das
call
cmp
lret
in
in
roll
lock
xchg
test
mov
leave
in
xor
cmp
aad
fiadds
lret
xlat
out
int3
fiadds
imul
stc
xor
out
fcmovbe
cmp
addl
in
int3
into
mov
rol
aad
out
enter
loop
cmp
aad
ret
mov
mov
add
rol
rcr
and
sbb
cmp
jle
add
lock
stc
cli
shr
fldlg2
fmulp
fdivp
repz
mul
cli
out
fucomp
addl
out
into
loope
int3
xor
in
icebp
aas
repz
cmp
loope
rcr
stc
loope
test
out
int
int3
iret
lea
xor
fdivrl
cmp
cmp
repz
fcmovnu
fcomp
fdivr
leave
test
out
in
call
cmp
into
ds
ror
fcmovnb
cli
ret
sbb
jmp
mov
jecxz
loop
shl
ret
fsubr
fidivrs
hlt
repnz
cli
aas
repz
lret
sbb
in
roll
not
cmp
aaa
fucomi
fucom
fcom
cmp
fisttpll
fucomp
rcl
repnz
rcr
fld
clc
std
lock
sar
repz
lret
enter
hlt
orb
iret
ljmp
cmp
std
decl
mov
out
sti
mov
out
lret
int3
stc
leave
shl
in
ds
fucom
loopne
ret
loope
test
cli
out
xchg
ljmp
sti
ss
into
in
out
addl
out
out
loop
std
sbb
roll
ljmp
fnstsw
adc
in
in
xor
mov
in
iret
xlat
cmp
fcomi
ds
and
and
test
orl
in
in
lret
repnz
fidivrl
stc
ret
test
test
in
loope
into
loope
cmpb
shl
in
clc
std
in
icebp
out
lret
xchg
stc
sar
cld
orl
int3
fstpt
repz
in
std
test
add
test
mov
out
lea
aam
cmp
cmc
aam
jmp
in
out
inc
aas
test
in
clc
into
cld
mov
icebp
call
fdivrs
iret
ret
fdivr
lret
fimull
lret
out
fcmovne
cmp
cmp
enter
ss
roll
call
fistpll
jmp
fadd
lret
fstp
aad
mov
cmp
into
mov
ret
jle
sub
aad
in
out
fcmove
out
jecxz
int
fildl
leave
ljmp
orl
ljmp
mov
loop
loopne
xchg
lret
aam
shr
into
std
lds
aad
aas
cli
in
std
xlat
lret
jecxz
addb
icebp
divb
into
xlat
jmp
int
cli
neg
rcr
cmc
fcmovu
ror
loop
test
cmc
leave
jmp
std
stc
fcmove
out
inc
in
sbb
xchg
jmp
lret
fdivrp
cli
int3
orb
sub
sar
adc
flds
loop
out
out
sbb
lret
out
int3
in
iret
xlat
iret
jmp
std
rcr
out
out
mov
mov
dec
lret
aam
jecxz
not
in
das
ss
ror
lret
iret
jecxz
fcom
test
enter
xchg
addl
loop
shll
fxch
cmp
aad
in
rolb
loopne
xchg
mov
in
call
aad
ljmp
sti
loopne
xlat
cld
fxch
loop
xchg
loope
xchg
loope
fld1
hlt
sub
leave
dec
sar
loopne
movl
lret
xchg
roll
repnz
enter
fprem1
shr
cmp
addb
enter
xchg
rcl
xor
call
cmp
rcr
repnz
hlt
std
mov
xchg
out
clc
xchg
fsubp
in
pushl
loop
out
ljmp
in
sti
xlat
rcl
fnstsw
call
int
out
jmp
xor
out
ret
ror
out
xlat
fsubr
int
std
aad
out
xlat
and
loop
mov
xor
jecxz
cld
aaa
repz
ss
hlt
cmp
aas
in
cli
mov
sub
call
test
ror
cmc
fnstsw
shl
in
cmpl
fiadds
mov
in
fcomip
xor
aaa
int
std
xor
in
out
shl
ret
fadd
cmc
into
test
test
ljmp
cmp
add
ret
pop
je
mov
xor
jmp
ror
ror
mov
cmp
xchg
jle
ret
jle
jecxz
aam
repnz
cmp
cli
out
out
aad
decb
sbb
test
hlt
jmp
out
cmp
cmp
jecxz
ror
xchg
cmp
clc
hlt
clc
enter
ror
ror
dec
stc
cmp
fcomp
out
lret
lret
cld
idivl
cld
cmc
xor
cli
jmp
call
shl
out
enter
sbb
fdivrl
lret
fdivrp
fucom
xchg
into
ret
out
cld
sti
cmp
cmp
ds
incb
cmp
popl
loop
in
fcmovne
jmp
cmpb
aam
rorl
sub
lret
ss
out
stc
call
addb
sbb
xbegin
nop
in
shl
mov
in
in
xor
leave
lret
repnz
lock
clc
mov
into
orb
jmp
hlt
repz
xor
aad
cmp
aam
fcmovnu
aad
ret
mov
nop
shr
mov
enter
xor
fsubr
jmp
out
jecxz
aam
fdivrp
fsubr
loop
out
jmp
jmp
in
enter
fcmove
ret
shl
filds
xchg
rorb
jecxz
vpsubd
cld
bnd
icebp
inc
call
jmp
cli
mov
lret
aad
shrb
fcmovbe
cli
clc
fsubr
cld
ror
neg
ret
cld
aad
fisttpll
test
sar
lret
div
sti
addb
mov
test
mov
ljmp
aas
loopne
or
idivb
cmc
test
orl
xchg
in
cli
cli
enter
in
idiv
lret
adc
fcmovne
mov
mov
mov
lock
aad
cmp
xor
fmul
repnz
cmp
mov
in
enter
in
hlt
cs
stc
std
clc
icebp
jmp
jecxz
out
aas
ret
test
lret
into
enter
ljmp
add
jmp
xlat
into
ror
fxch
flds
jp
pop
cmpsb
nop
rcrl
push
jle
ret
jle
shl
iret
call
adc
cmp
ljmp
mov
out
int3
lret
jmp
repnz
in
xlat
cmc
jecxz
jecxz
movl
lret
fadd
int3
cld
enter
testl
ljmp
jmp
aaa
xor
ds
aas
loop
xlat
loopne
xchg
clc
fdivrp
xchg
out
hlt
orl
ljmp
lds
fcmove
loopne
loopne
fmul
xchg
call
xor
ss
shl
in
cmc
repz
aas
xchg
ret
cld
or
xchg
mov
iret
leave
jecxz
repz
int
ror
cli
fcomp
fnsetpm(287
shr
add
xchg
mov
xor
xchg
iret
ret
cli
test
test
aam
enter
sbb
adc
shl
xor
cs
xlat
clc
cld
std
cmc
test
mov
aad
mov
mov
std
fucom
mov
fcmovbe
shr
in
loopne
sarb
adc
mov
clc
ds
add
rolb
loop
cmp
in
clc
iret
leave
jmp
cmpb
ds
mov
call
mov
hlt
enter
ds
push
jmp
adc
ds
les
ror
int3
loop
ret
repz
cmp
in
fcomip
jmp
fmul
mov
xchg
mov
shr
xlat
lock
std
hlt
cmp
not
add
fcmovnbe
in
mov
fdiv
in
loope
into
aam
shr
clc
shl
xor
xor
aam
ret
cmc
rcl
testl
loopne
xchg
aad
cmc
sarl
fidivrl
fcomi
stc
cmp
fdivp
stc
aad
in
out
imul
into
enter
mov
into
enter
rcl
fnstsw
cmp
fdivr
addb
xchg
out
fsub
std
adcb
sar
jmp
clc
aaa
fstpt
ds
aas
testl
in
hlt
addb
sti
les
inc
fsubr
pop
add
add
leave
int3
aam
aad
fnstcw
ficompl
mov
push
jle
ret
jle
icebp
aad
fcmovbe
hlt
loop
lret
xchg
test
xchg
ljmp
out
jmp
addl
in
out
decb
test
int3
icebp
leave
sti
icebp
aad
aas
lock
jmp
in
in
out
testl
in
lds
shrb
fucomi
std
icebp
iret
stc
sbb
addl
cmc
sub
faddp
faddl
aad
xor
repnz
sti
add
faddl
jmp
out
fdivrp
nop
out
repnz
icebp
xor
out
stc
shl
ret
test
cli
mov
mov
imul
stc
fsubp
mov
fxch
into
das
int
cmpl
stc
rol
loop
fcmovnu
fists
jmp
fmulp
std
mul
int
fcomi
fdivrp
shr
sti
loope
xchg
sbb
cs
in
jecxz
icebp
sti
clc
out
in
ljmp
not
jecxz
out
or
mov
out
test
lock
xor
fdivl
xlat
neg
sar
stc
test
mov
in
test
ret
cs
iret
icebp
loopne
hlt
test
sbb
decl
out
in
shl
call
out
lock
ds
fiaddl
xchg
sub
std
xchg
orb
xor
jmp
cmp
fchs
icebp
cld
test
add
iret
leave
out
lret
aad
lret
clc
lret
call
int3
div
testb
in
int
mov
xor
jmp
enter
aad
fcom
loop
lock
stc
test
fldpi
leave
in
xchg
jmp
cmp
shr
shr
xor
sar
sti
in
roll
std
imul
call
in
sar
lret
xor
cmp
aas
std
out
xlat
fadd
mov
orb
in
xor
out
aam
das
in
shl
out
mul
rolb
stc
out
lea
call
rcr
xor
cld
iret
clc
loope
fimull
add
add
ret
int3
fmul
aad
mov
sub
jle
add
cmp
sar
mov
loope
lret
mov
loop
loop
aaa
xor
call
cmp
aad
shl
faddl
int3
leave
lret
addb
cli
std
fcmovnbe
hlt
cli
fnstenv
fbstp
push
movb
and
icebp
or
mov
xor
in
out
sti
cmc
ret
cld
jmp
xchg
fyl2xp1
lret
mov
out
lret
cli
mov
icebp
repz
call
ds
int3
aas
ror
fcomp
faddl
in
sti
test
in
out
into
out
cli
div
xlat
xlat
fmul
cli
out
cmc
cmp
mul
aam
fsubr
test
loop
neg
sub
int3
div
int
fld
mov
mov
mul
mov
icebp
and
aaa
cmp
cmc
xlat
leave
xor
jecxz
idivb
neg
cmc
mov
in
fsubrp
mov
cmp
das
ss
in
int3
icebp
fcomi
fdivrl
fcomp
out
in
mov
fucomi
shr
xor
rol
aad
hlt
fldl2t
fcmovb
aad
stc
leave
cmp
int3
xchg
fadd
out
int
mov
clc
xor
mul
iret
shl
iret
cld
lock
aad
stc
cmc
faddl
repnz
in
cmc
enter
int
in
cmp
loopne
shl
loope
ret
in
loopne
nop
mov
fcoml
xor
hlt
sar
fdecstp
clc
xor
test
in
xchg
test
out
cld
lock
shl
out
fld
xor
cmp
loopne
icebp
push
repnz
stc
hlt
aad
iret
in
in
xor
xor
lret
out
cmp
cld
cli
xchg
in
loop
mov
mov
int3
test
cmc
xor
aam
imul
loop
cli
repnz
in
lret
xchg
loope
out
xchg
leave
leave
int
lret
dec
int
test
jmp
out
ljmp
test
icebp
out
sar
sarb
loope
clc
out
loop
xchg
lret
out
loop
in
into
ljmp
idivb
aas
mov
jge
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
add
jle
pop
jle
ret
jle
hlt
testb
in
rclb
sub
jmp
ffree
ret
ret
fmul
cld
jecxz
repz
sub
out
cmc
rcr
out
sub
ftst
shl
fcmovnu
ret
fabs
fiaddl
in
jecxz
push
loope
loope
int3
neg
shl
cmp
rorl
std
add
or
iret
xor
int
jmp
xor
fxch
aas
test
loopne
std
ret
test
enter
xchg
fsubr
jmp
jmp
jecxz
aam
sar
push
mov
out
loopne
shr
icebp
icebp
into
loope
rcl
rol
in
int
jmp
fdivrp
aas
repz
mov
leave
mov
flds
jmp
shlb
cs
out
cmp
testb
filds
in
fst
xchg
fmul
in
in
mov
icebp
ds
lds
jmp
cld
aam
xchg
clc
repz
enter
jmp
cmc
stc
fidivs
loopne
loopne
idiv
clc
cld
iret
call
in
cmc
rcr
out
fcomi
in
in
fmulp
loope
loopne
test
aad
decb
mov
ljmp
xor
iret
fcmovb
aas
fcomp
test
in
clc
fisttpll
out
jmp
into
xor
fucom
clc
lret
div
movl
loop
int3
repz
mov
aaa
lret
rcr
sarl
in
sar
cmp
cmp
rcr
ljmp
mov
aaa
aaa
aaa
cs
into
cmp
sar
sti
in
call
and
lret
xchg
nop
lret
int
cs
lock
call
rol
idiv
sar
mov
call
rol
clc
out
iret
int
aam
lock
in
repz
cmp
addl
lock
jmp
fdiv
int
out
cmp
cmp
addl
lret
stc
orl
hlt
aad
call
jmp
in
rolb
test
push
clc
mov
jmp
into
aad
vpaddusw
aad
js
jg
sub
push
adc
jle
ret
jle
popl
ficoms
ss
cmp
lret
cmp
jecxz
aam
testl
jmp
out
xor
cmp
repz
fucom
shl
fistpll
out
int
adcl
cmp
sti
aam
aam
not
shl
sbb
sar
ljmp
clc
lock
lret
aad
clc
aad
repnz
test
cld
ds
rcr
test
lret
int3
divl
out
iret
sti
cmp
aaa
repnz
aam
test
jmp
cmc
lret
mov
ljmp
ret
sub
out
sub
cld
les
stc
lret
stc
fstp
sar
hlt
ljmp
enter
xlat
loopne
cld
repz
mov
loop
int3
int
jmp
roll
sarb
idiv
ret
lock
loop
fld
cmc
and
lret
cld
loope
test
stc
xor
cmp
call
xlat
movb
fmul
lock
lret
int
cmp
fstpt
clc
in
rol
repz
xlat
in
loopne
loope
out
rcr
loop
neg
aad
div
fcmove
int3
aas
xlat
enter
leave
fucomip
loop
out
sti
hlt
sub
rcr
repz
leave
repnz
cmp
fcmovne
in
out
repz
fucom
faddl
mov
lock
enter
lret
lock
rcr
xlat
cli
out
test
xchg
call
sar
aam
aad
shl
cmp
sarl
lds
mov
jecxz
mov
cmp
jmp
fcmovne
int3
loopne
adc
out
sar
and
loope
addb
iret
hlt
cmp
xor
cld
loopne
fdivr
fiadds
rcl
aas
test
aam
xor
jecxz
lret
ljmp
ror
cmp
xchg
shr
aam
fsubr
jmp
out
mov
and
shr
lret
aaa
shl
loope
cmp
jecxz
ret
loopne
lret
test
fimull
imul
sub
jmp
aad
int3
fmul
fnstsw
fs
aaa
fcomps
jle
add
lock
iret
fimuls
fcmovne
xor
cmp
shl
cmp
testl
xchg
loop
mov
icebp
shr
fcom
out
lret
sti
sub
fsub
rol
out
loop
aad
lret
enter
addb
jmp
in
ss
cmp
sti
test
xchg
neg
jecxz
loope
sub
mov
addb
in
rcr
xor
sar
rcr
int3
aad
fadd
enter
loopne
lock
rorb
aam
icebp
sub
call
repz
loope
dec
xchg
rcr
into
mov
addb
jecxz
out
ror
aad
clc
cmp
fadd
std
fsubr
loop
xchg
ljmp
in
lock
ljmp
test
xchg
in
aam
loope
out
fsubr
xchg
jmp
xor
leave
fildl
fsubr
fucom
call
mov
ljmp
cmc
fdiv
int
hlt
in
sub
shl
sar
loopne
jmp
mov
mov
in
cmp
adc
icebp
cli
hlt
icebp
decl
iret
test
mov
icebp
ror
aad
repnz
int
fcmovnu
ret
out
fiadds
out
xchg
xor
out
lret
aaa
cmp
aad
cld
neg
sti
test
mov
jecxz
loop
lock
in
xor
xor
in
shl
xlat
fldl
sbb
mov
into
int
mov
in
in
xor
xor
hlt
clc
xlat
rcr
aam
cld
xchg
out
inc
test
loopne
mov
loop
fcmovbe
cmp
std
fidivrs
lret
sarb
iret
repnz
or
mov
ss
stc
xor
into
call
icebp
idiv
test
out
test
loopne
xchg
in
aad
stc
divl
repz
cmp
in
cmc
xchg
fsub
jmp
and
in
fimuls
xor
cmp
cli
stc
cmp
aad
clc
cld
mov
xlat
test
out
in
out
mov
in
decl
call
add
iret
rcl
fcmovne
fnstcw
test
bound
jle
test
test
ror
ljmp
vpsrad
stc
mov
lret
call
into
in
into
xor
xor
in
idivb
stc
out
repnz
icebp
fsubr
mov
fcomi
shr
ret
fsubr
std
ljmp
fdivp
aad
repnz
cmc
testb
jmp
divb
in
cmp
not
push
sarl
and
leave
call
addl
stc
shr
out
leave
sar
fucomp
int
incb
fsubrp
out
in
decl
rol
in
xor
int3
aam
enter
in
fmul
cld
cmc
ret
repnz
mov
in
in
mov
cmc
shl
stc
les
into
jmp
cmpl
loopne
cld
fdiv
jmp
sub
xchg
fdiv
enter
into
clc
cmp
fadds
jmp
in
fidivrs
cld
sti
in
cmp
fcomip
jecxz
cld
out
icebp
hlt
in
fimuls
aad
ret
out
into
int
xor
fsqrt
cmc
hlt
in
cmp
add
jmp
mul
test
leave
in
xchg
in
hlt
test
cmp
aam
xor
aad
fadds
fildl
xor
rcr
aam
sub
fscale
cld
rcl
cmp
mov
fcmovb
addb
loopne
rcl
sti
fdivr
cmp
aad
in
jecxz
xchg
stc
fadds
loopne
xchg
rcl
lea
ljmp
call
not
xchg
fcmovb
xchg
cmc
lret
jmp
xchg
call
fdivrp
int
repnz
loop
loop
mov
lds
stc
out
jmp
mov
loop
lret
aam
repz
ljmp
sar
jecxz
clc
out
std
fdiv
repz
aad
in
enter
sarb
cmp
aas
loopne
flds
out
filds
mov
lret
shl
fdivrp
aam
clc
and
enter
mov
and
cli
out
shr
mov
repz
cmp
jmp
int
int3
int
cmc
inc
cwtl
mov
mov
pusha
arpl
ret
jle
out
cmp
into
cmp
std
add
movb
fimuls
rcr
out
sar
ret
fst
fidivrl
fimull
int
int
test
leave
div
out
out
xor
fdivr
jmp
xchg
xchg
mov
shl
out
fmul
sar
lock
add
fadds
jmp
repz
out
in
shr
lret
lock
loopne
rcl
aam
lret
fcmovnu
int
addb
icebp
repnz
iret
test
call
xlat
cli
cld
mov
xlat
out
test
enter
xor
cmp
fcmovne
leave
cmp
ror
xlat
xchg
jecxz
call
out
shll
cmp
enter
stc
ret
dec
repnz
lret
in
dec
cld
repz
loop
fcmovne
repz
xor
int3
fldln2
clc
sar
loop
in
jecxz
clc
jecxz
enter
jmp
loopne
fcmovnbe
cmp
std
clc
idiv
loop
loope
out
xchg
call
sub
mov
lret
test
cmp
cmp
jecxz
out
shr
jmp
jmp
out
int3
out
xchg
aad
aad
divb
shl
leave
cmp
clc
cmp
repnz
cmp
rcl
std
in
jecxz
leave
cld
lret
repz
rol
in
les
das
lret
iret
hlt
and
fdiv
repnz
out
mov
xchg
loopne
incl
hlt
in
int
iret
call
clc
cmp
xchg
sub
out
rol
into
out
loop
ror
fdivrl
xor
in
jecxz
sbb
test
in
mov
xchg
lret
out
in
imul
ss
hlt
lret
roll
enter
mul
stc
lock
fst
dec
xor
fdivrl
cmp
not
cmp
icebp
add
in
ljmp
aad
loope
aad
ljmp
fcom
call
jmp
fucomp
iret
enter
cld
je
mov
jmp
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
fistpll
aad
out
cli
addl
int3
out
int
test
ljmp
in
shl
out
jmp
leave
jecxz
jecxz
in
in
lret
int3
xor
ljmp
cmp
int3
icebp
out
sarb
fdiv
lret
sti
enter
nop
fdivp
hlt
sarl
loop
xor
cmp
fcmovnbe
cld
in
ret
not
aad
jecxz
in
fmuls
xchg
in
shl
cmp
fdivr
sti
lret
cld
test
movb
clc
and
sar
out
mov
xchg
rcl
shl
stc
iret
imul
rcr
cmp
fcmovbe
in
xlat
xchg
test
mov
into
mov
ror
mov
xor
in
repnz
into
cld
filds
leave
ret
jmp
into
out
lds
leave
int
call
rcr
clc
cmp
mov
neg
cli
in
xlat
stc
ret
int
iret
jmp
aam
repz
repz
sti
fistpll
aad
fdivr
faddl
neg
icebp
xor
xor
cmp
std
cmp
jmp
out
cmc
out
aad
mov
neg
sti
xchg
addl
fxch
repnz
ds
icebp
ds
hlt
mov
test
shr
int3
xchg
das
out
xor
cld
cmp
aam
ret
lock
stc
repnz
mov
sub
in
enter
test
cs
jmp
neg
in
int3
aad
in
repnz
in
lret
out
int
out
cli
out
shll
div
clc
clc
in
repz
jmp
in
fucomi
test
out
ljmp
clc
rcr
cmp
xor
loopne
cli
filds
xchg
into
shr
int3
int
fsubr
fcomip
ret
lret
decl
call
aad
aad
repz
cmp
loopne
add
aam
call
fldl
mov
ror
out
into
aam
fld
stc
in
jecxz
loope
fisttpll
cld
into
roll
ror
int3
iret
ds
addl
jmp
mov
jmp
ret
int
fstl
mov
insl
mov
ret
jle
ret
out
lock
out
jmp
loopne
fxch
iret
cmp
aam
xor
sti
aam
shl
cmp
call
mov
out
out
hlt
in
fdivrs
aad
loopne
cmp
cld
test
call
mov
out
aam
xor
fcmovu
hlt
lret
cmp
ds
cmp
rol
ret
fdiv
mov
ret
enter
mov
iret
in
out
call
lret
hlt
fcmovu
out
orl
sti
hlt
mov
hlt
out
lock
cmp
aad
int
cmp
fcmovne
mov
xchg
mov
xchg
loope
jmp
int
icebp
lret
jmp
sti
fucom
inc
in
fcmovne
testl
out
jmp
icebp
in
aad
stc
lock
cld
loope
in
clc
fiadds
iret
mov
clc
sar
out
aam
not
cld
xlat
fcmovnu
cmpl
std
lea
jecxz
xor
aas
cmp
rol
sbb
std
imul
enter
ljmp
sti
ljmp
loop
jecxz
fsubr
ljmp
mov
out
roll
fsubrp
out
fcompp
repz
xor
mov
fdivp
test
enter
lock
loop
into
roll
jmp
jmp
adcl
jmp
cmp
std
ret
ljmp
lock
aam
ret
shll
shl
ret
sti
test
mov
ffree
leave
in
addl
std
nop
xor
stc
jmp
in
jmp
aam
aad
incl
ret
leave
fimuls
std
lock
aad
call
cmp
aam
loopne
repz
shl
loope
out
fisttpll
jecxz
in
loopne
lock
aaa
ljmp
cmp
cli
ljmp
in
repnz
out
cmp
lock
cmp
cmp
cmp
test
jmp
int3
ret
int
mov
pusha
das
add
fwait
inc
lods
push
jle
add
repnz
lock
loopne
call
test
test
aad
aas
std
lret
rcl
loopne
enter
mov
mov
cld
mov
jmp
xchg
sub
shl
stc
cli
ss
out
cmp
sti
aad
into
flds
test
and
hlt
xchg
loop
in
cli
out
clc
jmp
fcmovu
rcr
xchg
in
sbb
out
xor
int3
out
ljmp
cmp
in
test
cli
in
in
stc
mov
xchg
into
in
icebp
icebp
out
leave
xor
cmp
xor
out
dec
fisttpl
loope
shl
shrl
sub
jmp
shl
shl
iret
rcl
aaa
out
hlt
jmp
mov
lret
xor
jmp
repz
jmp
in
lock
test
out
int
mov
mov
in
xor
sar
out
fdivrp
cmp
jmp
fdivr
loope
jecxz
out
hlt
ret
cmc
icebp
xor
std
testl
xlat
decl
mov
cs
call
dec
int
cmc
fadd
icebp
ret
jmp
enter
loopne
not
loop
vpmaddwd
in
cmp
cmpb
xchg
loop
loope
mov
mov
loopne
out
jmp
out
in
fnstcw
leave
fnstsw
shr
ljmp
jmp
test
jecxz
xlat
in
xor
clc
cmp
inc
ds
aam
rcl
lret
ljmp
shrb
out
jmp
loopne
aad
cli
cmp
not
cmc
mov
in
repnz
hlt
lock
in
aas
out
out
xor
shl
ds
and
rol
loopne
ljmp
mov
in
xlat
in
xor
fdivr
aam
loop
clc
repz
test
lock
out
loop
nop
into
jecxz
repnz
repz
repz
sub
fcomip
loopne
jmp
cld
icebp
lock
aam
call
fld
sub
div
fdivrs
jmp
push
mov
jmp
aad
iret
aas
rol
aad
push
inc
push
adc
jle
test
jle
addb
out
rcr
rcll
xor
in
imul
shl
repz
clc
sub
fst
test
xlat
in
in
fcomip
ljmp
aam
out
leave
xor
repz
out
aam
fildl
mov
xor
into
lock
lock
call
aam
in
in
in
in
mov
call
jmp
fnsave
cmp
xor
cmp
ret
sbb
out
test
in
shrl
sub
jmp
cmp
hlt
cmp
rcl
xchg
clc
stc
fdivr
cld
fisttpll
aam
int
out
cmc
xlat
xor
loop
xor
call
incl
lret
mov
ror
jmp
icebp
icebp
xchg
aam
aam
stc
lret
loopne
xchg
fucomi
out
out
cmc
in
clc
xor
lret
repnz
sarb
jmp
loopne
std
loopne
call
jmp
xchg
in
lret
iret
in
lret
xor
shl
xor
cmp
icebp
fcmovnu
fdiv
sti
ljmp
xchg
xchg
xchg
xor
into
repz
repnz
repnz
rcl
xor
mov
mov
mov
loope
repnz
sar
ljmp
cmp
inc
ret
xlat
in
out
in
iret
popl
sar
lret
cmp
into
loope
fcomip
cld
imul
mov
repnz
fsubrp
in
mov
mov
in
out
xor
sti
aaa
in
xor
loop
sar
fcomip
out
loop
int
clc
nop
jmp
ret
cmp
int3
sti
in
cmc
repz
loope
xor
xchg
clc
roll
jmp
xor
aaa
cli
cld
repz
cmp
pushl
int
mov
call
icebp
std
and
in
jmp
xor
aaa
ljmp
adc
in
lret
test
out
into
shr
jmp
sub
ror
std
jecxz
jecxz
aad
cld
cli
idiv
jmp
ljmp
xlat
lock
loopne
clc
repz
repnz
rolb
xchg
xchg
rcl
sar
ds
dec
in
neg
xlat
and
test
jecxz
shl
in
xor
leave
shlb
ss
loop
loop
icebp
aam
fcomp
cmc
mov
filds
filds
shll
aaa
enter
rcl
out
shl
jmp
int3
out
in
mov
add
add
into
lret
leave
aam
dec
jo
cmp
jl
lcall
jle
sbb
out
ret
in
rcr
cmp
sti
lock
loop
rcl
std
out
mov
aad
mov
xlat
cmp
std
cmp
xor
ffree
shl
ds
mov
stc
lea
leave
out
jecxz
shll
leave
das
cli
sub
icebp
loopne
xlat
fsubp
not
not
push
add
cli
lret
jmp
into
int
cmp
cld
int3
ss
sar
cmp
ret
int3
stc
shr
sti
rorb
cmp
rcl
div
repz
out
lret
loopne
xlat
out
imul
ret
jmp
cmc
mov
sti
int3
icebp
in
xor
not
ss
jecxz
sar
add
jmp
int
into
int3
xchg
out
jmp
rcr
repz
clc
aad
rcr
sti
repnz
xlat
test
loop
fucomp
icebp
xor
cli
std
cmp
faddl
xor
addb
cli
into
xchg
fucomp
jmp
fsqrt
out
adc
repz
repz
repnz
fdivp
cmp
test
out
out
out
shll
cmp
fxtract
ljmp
int
lds
mov
mov
into
ljmp
int
aad
lret
cli
cmp
roll
ljmp
shl
ret
fcmovnbe
cmp
ljmp
iret
fdivp
ret
lret
idiv
fdiv
call
jmp
xor
out
cmp
cmp
repz
icebp
fcom
stc
and
loop
out
jmp
or
aad
cmc
not
fldlg2
xor
rol
movl
sti
call
jecxz
out
out
ljmp
adc
in
ret
jmp
cld
int
rolb
aaa
leave
in
ss
jmp
fdivrl
loopne
call
in
xchg
cmc
repnz
shl
cmp
rcl
call
xchg
in
fxch
ljmp
icebp
xchg
shl
lret
ljmp
ret
iret
fsub
idiv
out
leave
in
repz
int3
xor
div
xor
out
repnz
fnop
inc
not
test
fisttpl
mov
mul
cmp
ret
in
jmp
fildl
repz
fucomip
test
fsub
hlt
loop
in
hlt
ret
sti
cli
sar
jmp
cmc
in
aas
enter
loope
mov
xchg
lret
hlt
ss
inc
or
push
jmp
int3
ret
int3
int3
sahf
pushf
gs
outsb
xor
test
jle
fmul
icebp
test
fcmovb
repnz
fld
in
leave
fld
shl
cld
cmc
adcl
fxch
jmp
cmc
aas
out
shl
mov
fldl
call
xor
shl
iret
dec
fcomp
aaa
loopne
in
xlat
ret
adc
out
ret
testb
jmp
repnz
repz
out
cmp
shr
fldl
or
clc
fimuls
jecxz
not
lret
out
cli
cmp
int3
aam
cmp
mov
fadds
lret
cli
leave
nop
repnz
lret
lret
les
jecxz
out
ret
rol
repnz
out
in
or
test
icebp
icebp
xor
in
ret
not
rol
ds
xor
repnz
add
aam
lds
stc
out
repz
enter
aad
repz
icebp
fnstsw
fidivrl
int
neg
incl
out
repz
loop
imull
lock
in
in
fmul
lret
out
int
adc
incb
mov
xchg
sub
xor
fnstcw
cmp
sar
out
sar
repz
fucomi
fsubr
ljmp
xor
shll
aad
in
fsubr
int3
int3
in
fabs
ds
in
test
test
fcomip
icebp
adcb
ror
fadd
ss
fdivrl
fldl
sub
jecxz
repz
hlt
fdivr
jecxz
not
sti
in
cmc
roll
clc
neg
sti
sti
cli
sbb
loopne
out
lret
enter
sub
xor
cmc
leave
fst
cli
clc
ss
out
ret
cmc
lea
fsub
int
in
ljmp
out
into
sti
hlt
cli
rcr
mul
jecxz
inc
mul
xchg
test
mov
xor
iret
aam
sti
out
cli
cmp
cld
cld
enter
leave
leave
loopne
fcoml
lock
call
loopne
clc
repz
clc
ret
les
xchg
aam
aas
lock
jmp
clc
loopne
jmp
sti
std
icebp
fdivr
fdiv
int
jecxz
jecxz
fstl
xor
out
std
ds
in
out
sarl
cmc
ljmp
into
std
test
icebp
xchg
fadd
int3
in
cmp
repz
leave
sarb
test
mov
rcl
fdivr
loop
xchg
sti
and
into
loop
repz
in
stc
aad
ss
sti
rcl
rolb
fsubp
call
xor
int
lock
repz
sarl
cmp
repz
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
std
outsb
je
jle
add
out
ret
sti
mov
roll
xlat
clc
hlt
iret
shlb
xor
fiadds
mov
cli
cli
ss
stc
cmp
shl
in
fsub
in
mov
nop
xor
out
rcr
ror
aaa
cmc
in
ror
fdivrl
adc
leave
fistpll
loope
loop
out
mov
jmp
lret
cld
shl
sar
sar
ret
clc
ffreep
and
cli
adcb
in
into
leave
hlt
aad
aaa
std
lock
loopne
fcmovu
cld
test
repz
mov
orl
out
jmp
sub
fldlg2
add
sub
mov
mov
in
rol
cmp
shl
fidivrs
rolb
les
lret
in
shl
enter
vcvtdq2pd
roll
fcom
repz
lds
out
hlt
jecxz
out
div
lock
das
neg
cmp
cmp
repz
test
lret
in
mov
fcomi
icebp
xchg
in
xor
int3
lock
aam
aaa
fdivrp
sbb
fiadds
or
std
in
mov
out
xor
xor
cmp
inc
into
addb
stc
out
fmul
stc
into
sar
xchg
mov
rcl
int3
cli
icebp
cmp
cmp
int
mov
hlt
idiv
in
lret
lock
xacquire
in
imul
fcom
fnstenv
jmp
out
cli
orb
mov
mov
xchg
loope
out
lds
jmp
ljmp
lock
in
in
std
in
jmp
shl
xchg
enter
xor
shl
fcmovbe
fcom
jmp
add
repnz
xchg
leave
nop
repnz
repz
int3
cs
sarb
repz
cmp
aas
in
xlat
out
xchg
mov
mov
xchg
int
ret
rol
xor
aad
hlt
cmc
xlat
xchg
cmp
xchg
fmul
xchg
in
aaa
aad
ret
fxch
cmp
in
sarb
cmp
fcmovu
out
in
cld
sar
sar
test
icebp
ror
ret
lret
lock
dec
sbb
xchg
mov
mov
out
mov
ret
shl
stc
ljmp
cmp
in
out
xlat
leave
faddl
xchg
fsubr
enter
rcr
jmp
jmp
and
fxch
and
jmp
int
iret
rcl
aad
inc
xor
sub
call
jle
add
mov
rcll
cmc
iret
idivb
rcl
std
lock
cmp
icebp
cmp
or
jmp
int
cs
xor
fcmovnbe
aas
repnz
cmp
int
fdivrp
out
test
lret
jecxz
call
fdivrs
cmp
loopne
xor
std
stc
xrelease
int
std
or
xor
cmp
ss
cmc
shr
cmp
loope
hlt
xor
fldl
xchg
fiaddl
sar
ret
icebp
ss
cmp
in
fadds
aad
fisttpl
in
xor
iret
repz
std
ror
in
mul
cld
and
stc
leave
test
clc
fldlg2
jmp
mov
icebp
ss
cmp
xor
shl
xlat
out
ret
in
fisttps
in
std
hlt
iret
in
icebp
out
out
aaa
out
jmp
ret
repnz
repnz
stc
sti
or
int3
int3
mov
call
lret
cld
shl
xlat
fdivp
ror
enter
in
loopne
mov
sti
in
repz
rcl
stc
shl
iret
int
aaa
jecxz
out
fildl
std
lret
out
movb
icebp
clc
xlat
xlat
repz
repnz
sti
cli
repz
aad
or
jecxz
mov
leave
out
jmp
lock
xchg
repnz
testb
loopne
cmc
test
lret
mov
cmp
cmp
rcr
lds
rcr
in
cld
cli
lret
in
and
or
xor
xor
in
jmp
hlt
int
cli
cli
mov
call
int3
out
sub
iret
xor
cmp
ror
leave
rcr
icebp
aad
movb
addl
lret
fucompp
cmp
cmp
call
repz
repz
ffreep
ret
jmp
cmp
stc
repnz
sarb
enter
mov
clc
in
icebp
lock
in
repz
in
repnz
cmp
icebp
neg
repz
mov
fdivp
xchg
call
clc
hlt
lret
fcmovnbe
iret
stc
int3
xor
int
lock
lret
cmc
jecxz
jmp
nop
std
ljmp
xor
cld
cmc
aad
iret
hlt
fstp
sti
cmp
ljmp
or
jecxz
fsub
leave
out
int
aas
loopne
sar
out
push
ds
loop
out
rol
loope
cmc
testb
xchg
jb
add
add
add
ret
jmp
mov
fcmovnu
or
sub
pop
lret
jp
jle
add
fisubrl
cmp
loop
rcl
loop
mul
fstp
fisttpl
icebp
xchg
lock
ret
cmc
cmp
clc
xor
sarb
ljmp
enter
in
out
mov
out
in
ror
lock
cmp
lret
cmc
faddp
flds
jmp
fstp
int3
aam
out
hlt
xor
in
fcmovnbe
aam
cmp
mul
mov
lea
xor
in
ljmp
out
xchg
shl
out
les
jmp
rorb
cmc
cmc
cmp
cld
xlat
in
ffreep
cmp
xchg
loope
lret
mov
out
out
iret
rcr
repz
in
into
fmulp
iret
icebp
fcmovbe
repnz
lds
fucompp
repz
xchg
mov
shr
jmp
repz
cmp
ret
jecxz
xchg
xchg
xlat
ljmp
ds
cmp
iret
shl
jecxz
icebp
aam
cmp
cmp
leave
out
lock
lret
divl
into
aam
cmp
cmp
fucom
adc
loopne
jmp
or
faddl
xor
repz
xlat
idivb
out
shl
cli
in
out
in
loope
mov
and
or
div
xor
lret
aad
idiv
cmc
les
imul
into
fcos
repz
lret
xlat
ss
clc
cmp
hlt
shl
in
cmp
xchg
ret
test
xlat
ljmp
std
sti
hlt
roll
mov
mov
fmul
out
fiadds
ljmp
cli
dec
stc
fidivrl
cmc
call
decb
shl
shr
hlt
fucomi
fcom
test
cmp
test
mov
ljmp
out
jecxz
jmp
in
stc
clc
loope
fdivrp
aam
iret
rcl
sti
xchg
iret
int3
xchg
and
fisttps
iret
aaa
std
jmp
clc
fdivrs
mov
nop
int
lock
das
clc
divb
in
xlat
jmp
sti
out
cmc
xor
ret
jecxz
cli
out
in
sub
cmc
mov
icebp
divb
stc
and
out
adc
mov
mov
cmp
cmp
cli
jmp
xor
fmull
fsubrp
fmul
in
iret
iret
loopne
ror
fsubr
jmp
fistpll
xlat
shl
push
not
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
andl
test
jle
not
ret
test
frndint
mov
mov
rcl
iret
cmp
jmp
int
clc
cld
div
idiv
enter
clc
lock
mov
mov
in
int
xlat
cld
repz
out
xor
fcomip
fsubr
xchg
in
loop,pt
or
rorb
iret
call
int3
sar
rcl
in
clc
ret
lret
stc
stc
int3
fsubp
mov
cmc
loop
jecxz
sti
clc
clc
enter
int
std
cmp
and
flds
repz
ret
xor
into
fdivr
fdivp
test
add
xchg
lret
out
repnz
xlat
fidivrl
pushl
int3
cld
xor
fsub
mov
idiv
out
sub
std
xchg
xchg
iret
repz
out
imul
xor
xor
fcmovnu
out
in
int3
in
test
hlt
xor
iret
sti
fsubrp
ds
ds
xrelease
out
in
std
out
iret
ret
call
cmp
shl
std
shlb
out
loope
in
jmp
shl
loopne
cmc
mov
not
std
xor
cmp
ds
aam
lds
ljmp
in
test
cmp
cli
cmp
in
cmpl
out
fstp
std
in
in
call
out
repz
cmp
lret
into
addb
fimull
mov
rclb
fcmovu
xor
cmp
int
iret
icebp
roll
adcl
aaa
in
lock
ljmp
in
fadds
jecxz
into
out
hlt
in
call
out
cmp
lock
xlat
in
fdiv
xchg
jecxz
in
mov
call
clc
hlt
aad
clc
repz
stc
fdivrp
cli
ljmp
xchg
loop
xchg
hlt
fldcw
in
ljmp
xor
aad
incb
mov
ret
out
lret
in
divb
idiv
ret
ret
cli
hlt
repz
fmul
stc
in
out
xchg
xchg
div
cmp
icebp
std
int
loop
cmp
out
cmpb
ret
in
out
int
mov
int
shl
fdivrp
ds
int3
sarl
into
cmc
fmuls
lret
fcomp
jmp
in
loop
jecxz
in
xor
aaa
xlat
lock
loopne
ret
lock
out
in
movl
add
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
lea
jg
jle
add
fdivrp
out
in
rcll
call
jmp
sti
fnop
repz
or
in
cld
int
rcl
fldl
cmc
repnz
int
int
adc
and
lret
lds
mov
mov
lret
fcom
aad
xlat
out
int3
int
out
hlt
ret
mov
icebp
lock
mov
xchg
shl
aam
cli
int
xor
in
out
cmp
fcmovbe
loop
cmp
fiadds
incb
les
into
fmul
xor
cmp
out
ds
icebp
jmp
aam
cmc
xchg
loopne
mov
out
out
sti
int3
out
fsubp
add
xlat
cli
cmp
aas
loope
jmp
ret
cli
mov
loope
out
xchg
in
shl
shlb
fcmovnu
lret
icebp
xor
sti
mov
in
or
cli
fisttpl
loope
stc
leave
fidivrs
sti
std
loope
cmc
ret
testl
aam
in
shl
shlb
int3
enter
loopne
aas
roll
faddl
call
ss
ret
lret
cmp
ljmp
in
fcmove
hlt
mov
ret
sub
out
mov
jmp
cmc
int3
enter
fstp
repz
loopne
and
fucomp
mov
fildl
and
fnstsw
aad
out
fcmovu
sar
fidivrl
cmp
int3
rolb
neg
int
lock
fldl
das
ljmp
fnstcw
loope
loopne
loop
loopne
fmulp
mov
stc
mov
in
sti
lock
into
xchg
jecxz
xor
aad
aaa
aad
clc
xor
shl
fdivrp
enter
xchg
test
adcl
xor
xor
cld
cmp
rcr
loop
fmull
test
enter
cmp
hlt
cmp
roll
xor
xchg
in
fdivp
out
enter
aam
sar
xorl
aas
aad
std
mov
fmulp
aad
mov
cmp
fdiv
fcomip
xor
cmpl
ret
repnz
xchg
std
aad
into
jmp
jmp
fmulp
int
ljmp
clc
repz
cmp
cmp
in
fsubrp
test
loop
or
adc
into
lock
std
repz
rolb
cmp
fmul
enter
fsub
jecxz
sar
lock
call
xlat
cmp
aad
cmc
jecxz
div
aad
fadds
in
xchg
mov
movl
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
pushf
bound
test
jle
hlt
cmp
sti
std
xor
aas
lret
iret
sti
iret
stc
lock
rorl
std
lret
mov
cmp
stc
ss
int
cmp
int
sti
cmpb
xrelease
mov
rcl
lock
cmp
fdivp
idivl
addl
ljmp
mov
iret
imul
xor
shr
lock
adc
shl
fcmovne
loopne
loopne
fcmovbe
in
xor
cmp
icebp
out
leave
add
out
neg
fstp
ret
loop
loopne
call
mov
aam
xlat
xor
repnz
cmp
std
out
test
cld
xchg
in
int3
sti
fldl
out
iret
in
ljmp
iret
iret
out
cli
cli
clc
loop
mov
into
fldl
test
lret
sti
call
test
ret
lret
int
rcr
jmp
jmp
rol
jmp
not
xor
hlt
in
incb
repz
decb
test
ljmp
ljmp
in
int
aad
icebp
sbb
loop
call
xchg
enter
cmp
cmp
enter
ret
loope
test
call
mov
call
shlb
int
out
into
out
fsubrp
aam
into
lock
fldl
sub
ljmp
ss
in
sarb
cld
addl
mov
call
lret
cmp
lret
sti
xlat
aaa
lret
int3
rcr
aas
repnz
mov
loop
out
xchg
out
mov
fadd
repnz
std
clc
int
cmp
test
ds
rol
out
lret
or
int
xchg
jmp
rcl
in
sarl
cmp
cmp
int3
cmp
fdivr
cmp
sti
stc
lds
out
in
out
fsubp
stc
ror
lret
out
enter
ret
ds
cmp
out
mov
jmp
call
sub
fldl2e
sti
repz
fmulp
jmp
in
lret
out
jmp
lret
icebp
fcom
cli
ljmp
loop
xlat
shl
std
jecxz
hlt
repnz
cmc
cld
cld
mov
xchg
adcb
hlt
repz
loopne
cmp
ffree
xlat
repnz
leave
addb
in
faddl
xlat
in
cmc
int
cmp
ss
neg
in
fld
cli
cli
mov
sar
leave
into
lret
mov
out
out
ss
cmp
cli
rcl
lret
mov
jmp
cmp
jmp
into
int
xlat
iret
dec
xchg
jg
test
jle
jecxz
repz
aas
aam
mov
jecxz
shl
out
loopne
mul
call
enter
iret
ljmp
leave
push
cli
int
xchg
iret
mov
lret
aam
sti
repnz
hlt
lret
stc
repnz
fimuls
iret
or
loopne
lock
ret
xor
lret
fcom
cmc
rol
aas
sbb
sti
out
jmp
out
mov
int
out
int3
loope
ret
into
repnz
ss
into
rcl
ffree
rcr
cmp
in
mov
fildl
lret
fdiv
int3
ljmp
repz
jecxz
loop
fucomip
sti
int3
addb
mov
das
aam
out
das
lock
cmp
std
in
fcmove
cld
addl
or
imul
leave
xlat
test
shl
rcr
sti
repnz
jmp
leave
test
or
xlat
in
out
in
fcom
sti
in
fsub
out
aam
in
enter
xchg
div
lret
out
enter
fdivrs
cmp
clc
out
test
jmp
fcmovb
in
sub
das
iret
jmp
sti
ss
cmc
imul
xlat
xchg
ret
in
jmp
out
fxch
orl
fcmove
xor
div
repz
call
sub
fcomip
out
lock
cld
fdivr
lock
out
aam
into
std
jmp
mov
sti
lock
loopne
in
in
iret
lret
jmp
enter
or
aad
cld
xchg
leave
out
fsubp
mov
fstpt
xor
aad
cmp
ret
loope
cli
std
loopne
testb
in
fists
xor
in
hlt
cmc
out
aam
fadds
leave
loopne
ljmp
cs
loope
xor
int
mul
int
ret
aad
mov
ror
jmp
enter
jmp
enter
vpandn
out
aaa
cli
loop
enter
repnz
cmc
aam
cld
xor
ds
rolb
addl
repnz
shl
xor
cmc
ss
cmp
xor
icebp
shl
test
lock
repz
fisttpll
cld
repz
in
test
stc
leave
aaa
fprem
cld
stc
in
jmp
ljmp
xchg
in
loop
xor
in
aaa
ss
jmp
ret
out
leave
sar
orb
decb
add
sbb
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
int
lret
stc
repnz
mov
xchg
lret
ret
out
idiv
int3
cmp
loope
lock
loop
jmp
lret
mov
rcl
repz
lret
int3
rcl
out
cmc
loop
jmp
out
not
fnsetpm(287
ffree
cli
fadd
in
lock
rorl
repz
cmp
into
icebp
fdiv
xor
cmp
aam
loope
xchg
clc
in
in
decb
int3
jmp
aaa
xor
enter
in
xchg
in
mov
in
mov
iret
idiv
sar
leave
cmp
repnz
into
not
xchg
fdivr
lret
jmp
mov
mov
cmp
out
fnsave
or
jecxz
adc
jmp
mov
adc
icebp
cmp
shrl
lock
sarb
test
jmp
cld
jmp
ss
in
cmp
int
aas
std
repnz
cld
mov
xchg
adc
loopne
shl
fxch
cmc
lds
leave
lock
xor
loope
test
call
out
lret
stc
int
out
cmc
ljmp
shr
into
fidivrl
cmp
fcom
cli
fcomi
cli
mov
loope
std
lea
aam
cmc
into
xor
repnz
std
out
fxch
xchg
adc
fsubrp
addb
repnz
rcr
icebp
lret
cmp
in
aaa
cld
test
aas
loopne
ret
jecxz
rcr
ss
xlat
cmp
lock
in
adc
aad
sarb
std
mov
jmp
movl
loope
out
aaa
fprem
sti
fdiv
pushl
int
call
int3
jmp
out
xchg
xor
out
lret
ss
fstpt
cmp
xor
in
add
call
out
xchg
aaa
in
enter
jmp
aad
rol
loopne
stc
out
xchg
rolb
ljmp
leave
repz
out
in
jecxz
xchg
enter
ror
jmp
ljmp
xor
cmp
xor
loop
out
fyl2xp1
out
filds
mov
aaa
shr
int3
repnz
ret
iret
shr
rcl
cmp
loopne
lret
fdiv
xor
cld
into
sarl
test
fistpll
leave
loopne
out
int
call
xor
cli
rcl
aaa
out
call
jecxz
test
in
ljmp
int3
jmp
mov
orl
sub
push
orl
jmp
aam
ror
fcomp
aam
aas
idivb
daa
or
test
jle
cs
cli
in
repz
aam
sti
aas
call
repnz
loopne
sar
shl
neg
in
int
xor
nop
loope
lock
cmc
fcmovu
out
aad
ffree
aad
lock
loope
jmp
jmp
mov
ljmp
test
sti
hlt
fst
int
xor
xchg
loop
cmc
stc
cld
jmp
lock
out
repz
sti
cmp
clc
stc
fildl
xchg
rorb
iret
in
xchg
cld
in
hlt
lret
lret
sarb
cmp
lret
repz
aam
shl
mov
loopne
mov
shl
icebp
icebp
icebp
aas
jecxz
in
cmp
hlt
fsubr
fadds
mov
shr
les
repz
repnz
out
ror
sti
in
fidivrl
out
fdivr
sti
rolb
leave
fucomp
jecxz
shl
ljmp
in
int
aad
ds
repz
cmp
cmp
fdivp
out
sti
cmc
std
sti
xchg
repnz
mov
loopne
aaa
ljmp
roll
mov
roll
in
das
xor
fcompp
cmc
loop
fcmovu
aad
in
vpsraw
cli
sub
mov
xor
std
iret
sti
icebp
sarb
cli
iret
cld
cmc
aas
call
rcr
add
call
xor
cmp
fidivl
into
ds
aas
loopne
and
ljmp
adcl
cmp
fxch
filds
and
xchg
fdiv
hlt
mul
test
in
repnz
jmp
xor
lret
fidivrl
loope
ss
fcmovb
rol
ljmp
jmp
lret
enter
cmp
std
cmp
int3
lock
faddp
ljmp
shl
xchg
xchg
in
rol
cmp
repnz
sar
iret
cmc
out
fadd
shl
mov
out
sti
ljmp
shl
rcr
cmc
aam
sti
aaa
xor
loope
shl
in
hlt
movb
jecxz
mov
std
loope
shr
loop
ret
aad
repnz
xor
cmp
rcr
cmc
incl
mul
stc
xor
aad
xor
jecxz
shl
lock
fcmovnbe
call
leave
jecxz
out
xchg
rcl
shr
int3
iret
aam
xor
icebp
xor
idiv
neg
cli
ljmp
lret
test
icebp
xchg
lds
xor
xor
ss
cmp
ljmp
lock
loop
mov
loopne
into
int
mov
in
xor
mov
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
jecxz
jle
or
jle
add
fcmovnu
in
repz
movb
in
test
adc
not
xor
xor
iret
std
rcl
cmp
cmp
fcmovb
jecxz
mov
hlt
add
out
mov
xchg
xor
icebp
cmp
fdivrs
test
lock
jecxz
in
cld
fcmovnu
sub
into
or
mov
jecxz
out
xor
test
aam
xlat
ror
sarb
in
xchg
xlat
loope
in
test
loope
out
in
cmc
loop
out
xor
repnz
jmp
call
imul
leave
stc
iret
iret
in
cld
aam
int
loope
cli
rol
iret
hlt
repz
rcl
add
loope
shr
loop
std
test
sub
lock
lock
repz
cld
addl
xor
out
std
sub
ljmp
cmp
shl
fdivr
out
fdivp
roll
lret
fmul
in
mov
loop
repz
out
flds
xchg
decb
shr
repnz
in
cmc
repz
enter
cmc
into
int3
cmp
sti
repz
or
hlt
idiv
rcl
int3
das
lret
hlt
icebp
ret
shl
aam
fnstsw
mov
lock
jmp
xor
sarb
jmp
sar
sti
cli
add
fldl
out
jecxz
vpminsw
rcl
clc
shl
aam
fst
std
cmc
loopne
mov
jmp
in
mov
jmp
fmul
icebp
fcomi
lret
cmp
mov
mul
in
out
xchg
out
jecxz
fucomp
aam
rcl
jecxz
sarb
cli
cmp
out
iret
ds
shl
sti
leave
cld
loop
loope
mov
mov
lret
call
int
aas
shr
cmp
xchg
stc
in
out
call
xchg
mov
xor
cmp
into
sarl
int
idiv
cmp
neg
enter
in
fstp
enter
cmc
xor
cmp
loopne
aas
loopne
vpavgb
jecxz
clc
in
xchg
aam
jmp
icebp
in
jmp
ds
xchg
clc
ret
incb
int3
loope
sub
shl
out
xor
std
xchg
add
loope
nop
enter
xorb
loope
fcmovnb
aad
out
int
ljmp
stc
fucompp
out
mov
xchg
xchg
out
xchg
shr
aaa
test
ror
cmc
cmc
test
xlat
aas
enter
push
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
mov
bound
movq
add
std
leave
aas
jmp
mov
mov
icebp
ljmp
int3
aas
rcr
clc
test
xor
in
mov
loop
loope
jmp
loop
ret
sub
icebp
shr
iret
int
test
shl
idiv
mov
sbb
in
lock
repnz
out
lret
clc
div
cld
xlat
out
aam
in
shl
addl
fcmove
repnz
les
jmp
shl
lock
jecxz
out
sti
aad
ffreep
cld
cmp
fldlg2
xchg
in
lock
cmp
lock
hlt
aas
in
sarb
cmpb
repz
int
out
test
loop
sti
jmp
out
loopne
not
aam
out
fdiv
enter
fimuls
xchg
fucomip
hlt
shlb
out
cmp
rcl
test
clc
jmp
fadds
xchg
jmp
int3
std
aam
xor
clc
fdivp
clc
filds
ljmp
fldl
out
leave
std
cld
cmp
cmp
in
out
out
decb
fimuls
ffreep
out
rol
call
leave
hlt
cmp
cmp
filds
imul
mov
stc
xchg
leave
lret
mov
ror
ret
ret
imul
cmp
leave
lock
int
cld
rol
fxtract
mov
mov
ret
rcll
repnz
int3
rcl
iret
fcomp
jecxz
aas
repnz
leave
test
cli
mov
cs
cmp
stc
leave
neg
fdivrp
shl
cmp
cmp
clc
xchg
fadds
mov
cmp
fnstcw
ss
in
fcmovnbe
cmp
cmc
fdivp
in
fninit
faddp
in
mov
ror
sub
xor
repz
aam
shr
addl
std
xlat
leave
in
xchg
test
repz
int3
leave
enter
lret
jmp
aad
vshufps
fadd
cmc
ljmp
test
adc
fidivl
xor
cld
fidivrl
loope
repnz
cmc
test
jmp
ret
enter
rol
xlat
xor
leave
ljmp
aas
fst
fsub
mov
in
fiadds
out
ljmp
fnstsw
cmp
repnz
filds
out
jecxz
call
test
in
fxtract
cmp
ds
into
lds
fldl
enter
shr
aad
ljmp
int
cmp
icebp
mov
out
fcmovb
xchg
xor
add
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
inc
movsb
sahf
cmp
jg
test
jle
or
shl
repz
imul
imul
cmc
xor
mov
xchg
fmul
nop
in
and
das
ret
jmp
shl
call
fndisi(8087
cmp
rorl
fcmovnu
call
in
xlat
std
int3
fsub
lret
in
jecxz
mov
imul
clc
fstp
xchg
cld
test
jecxz
ror
ss
sar
cmp
in
stc
shl
cmp
cli
xchg
lds
fsubp
jecxz
cmp
jmp
leave
fidivrs
sarl
out
and
addb
rcr
cli
jecxz
xchg
aaa
in
rol
hlt
not
cmp
cld
fld
out
sbb
fucomi
ret
into
out
stc
icebp
int
std
mov
into
jmp
ror
jmp
cmp
ret
repz
add
cld
mov
int
cmc
xchg
repz
cli
cli
jecxz
shlb
xlat
ret
fcmovu
roll
cli
xchg
filds
jmp
in
enter
leave
out
in
shr
repz
shl
sti
cmp
fcmove
testb
jmp
ret
enter
cmp
fsubp
leave
shl
not
icebp
testb
loop
lret
ljmp
cli
cli
xor
leave
clc
aad
fcmovnb
rcl
in
sti
mov
mov
out
jmp
aam
stc
xlat
icebp
repz
cli
faddp
in
and
in
call
ficoms
jmp
cmp
iret
fdivp
cmp
ret
cmp
vpsubusb
mov
fmuls
loopne
in
out
aad
lret
lret
jmp
loop
repz
out
repnz
mov
out
out
mov
aaa
enter
int3
cmp
loope
ret
repz
vpmullw
fldl2t
jmp
call
jmp
fdiv
sarl
lret
rcr
cli
aad
aad
fcompp
out
mov
nop
xchg
shl
xor
sti
ljmp
test
rcr
jmp
in
loopne
fucomp
xchg
ljmp
in
cmc
fcmovnu
shr
sarl
int3
aaa
icebp
xchg
cmc
stc
addl
and
shl
xor
ss
into
icebp
cli
out
std
clc
cmc
in
fld
cmc
and
mov
test
lea
idivb
aaa
sar
clc
int3
cmp
fnstcw
cmc
fcomip
jmp
loopne
test
sar
xchg
enter
int
fmulp
cmp
fidivrs
and
jmp
ljmp
xchg
in
call
xor
enter
mov
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
add
adc
jle
add
int3
lret
f2xm1
xor
clc
lock
filds
loop
mov
out
cmp
in
iret
sarl
out
addb
loopne
les
fsubr
out
or
int
cmp
aad
loope
loopne
rolb
orl
call
lret
shl
aaa
xor
xlat
enter
cmc
ffreep
loope
loop
aad
mov
int3
int3
lret
shl
xor
xor
repnz
out
cmp
cmp
clc
mov
xchg
decl
jmp
cmc
clc
aad
fst
clc
stc
repz
rol
rcr
xchg
mov
test
mov
lret
ret
ljmp
into
ret
test
addl
out
test
mov
in
into
xor
sarb
lret
enter
hlt
ret
loope
aad
or
stc
mov
xchg
loope
cmc
lret
stc
clc
repnz
stc
std
iret
sar
int
fdivr
mov
fadds
mov
into
into
xor
cmc
into
int3
cli
iret
cmp
xor
out
repz
stc
xor
fucomip
jmp
into
mov
leave
xor
xor
xor
aaa
into
cli
addl
cld
lret
repnz
xchg
ljmp
fst
cli
cmpb
fadd
fadd
in
ds
sbb
incl
xlat
shl
call
cmp
cld
faddl
icebp
fiaddl
int
fnsetpm(287
xchg
mov
lock
sarb
fidivrl
fucomp
lret
sub
lock
mov
out
jecxz
out
in
ljmp
inc
in
sti
fcmovu
out
loopne
test
int3
out
fdivs
icebp
ljmp
cmp
mov
in
out
mov
xlat
xlat
int
cli
lret
cmp
fsubr
cmc
clc
fildl
lret
flds
int
lock
xor
xor
xlat
stc
flds
fsqrt
fsub
div
orb
xchg
orb
cmp
xor
iret
ljmp
out
aas
std
fmulp
mov
xchg
into
in
sti
xchg
lret
in
lret
cmc
aam
lret
aam
fucomp
aad
ds
mov
fmulp
enter
test
ret
loop
fldlg2
leave
clc
in
cld
xlat
out
cld
sar
loopne
fadd
lret
int
fmul
mov
bnd
cmp
cmc
out
fsub
cmp
and
ret
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
xor
nop
pop
jg
test
jle
sti
cmp
repnz
in
xchg
aaa
lret
enter
ljmp
iret
repz
mov
mov
mov
hlt
das
into
icebp
cld
lret
repnz
stc
sti
test
in
repnz
xchg
lock
cmp
sti
shl
std
out
fldl
lret
mov
cmp
enter
xor
cmp
push
stc
cmp
into
aam
ror
flds
fdiv
sti
mov
xor
jmp
stc
fnsave
iret
loopne
ret
jecxz
faddl
int3
flds
icebp
lock
xor
ss
cli
int
faddl
in
cld
clc
jmp
or
ljmp
repnz
loopne
aam
idiv
sbb
adcb
loopne
bnd
out
jmp
cmc
lds
ret
out
out
in
rcll
test
xor
lret
clc
out
sti
std
jmp
out
cli
lret
sub
ret
xlat
jmp
fcmovne
aad
aaa
in
adc
imul
les
xlat
or
loop
out
lret
repz
ljmp
repz
repz
loopne
out
in
fucomip
xchg
out
sub
out
clc
in
shl
sar
cmp
movl
mov
sarl
sti
cmp
iret
out
int3
fmul
cmpb
in
test
fucomip
loopne
popl
repz
divb
icebp
ds
clc
repnz
iret
out
mov
std
rcr
iret
leave
rcr
fstl
call
iret
or
rcl
icebp
test
mov
lret
mov
sub
cld
inc
push
imul
cli
rcl
sar
in
xor
jmp
cld
shl
fsubrp
into
repz
sbb
shl
cld
mov
xlat
ret
into
fsub
out
popl
loopne
int3
fstpt
stc
cli
cmp
cmp
cld
loopne
cmp
fsubp
out
xchg
in
out
repz
sarb
fidivrs
frndint
int3
loopne
cmp
in
enter
nop
nop
jmp
not
rcl
f2xm1
rcl
ds
xchg
ret
mov
in
movb
int
stc
jecxz
out
cld
fdivrs
iret
out
rcr
jecxz
not
repnz
mov
mov
mov
push
pushl
call
jmp
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
sbb
test
jle
xchg
out
enter
cli
out
lret
fistpll
out
fdivp
repnz
ret
out
testb
ljmp
xor
cmc
hlt
repz
out
sar
cmc
clc
shl
jmp
mov
leave
fsubp
mov
in
call
call
rcl
sti
aam
aad
test
testl
out
xabort
cmp
rcl
out
in
fdiv
cli
mov
fcomip
orb
sti
stc
cmp
int
ljmp
mov
mov
test
test
cld
repnz
loop
into
leave
xor
in
xlat
out
cmp
addl
loopne
call
mov
fdivs
clc
iret
icebp
clc
lret
iret
into
hlt
sar
call
ret
loope
leave
xchg
fcmovne
int3
int
loop
ljmp
cld
fcmovb
shl
in
repnz
ret
sub
fcoms
or
into
iret
test
ds
ret
fdiv
fcmovu
hlt
test
cld
in
lret
xor
repnz
ds
ds
and
fcomip
in
not
imul
ljmp
rol
sti
xlat
test
addl
shl
shr
fscale
shl
aad
fiadds
xor
neg
call
in
aam
jmp
into
lret
cmp
rcr
loopne
test
mov
imul
mov
int
in
jecxz
jmp
cmp
clc
call
loope
ss
shl
mov
ljmp
xchg
jmp
cli
hlt
into
int3
into
call
cld
hlt
iret
push
aas
ljmp
jmp
fucompp
repnz
neg
aam
out
xlat
call
int
cmp
test
test
filds
in
cmc
call
in
cmp
rcl
cli
aad
xlat
add
xchg
jmp
jmp
xor
jmp
into
xor
cmc
jmp
ror
and
and
orb
mov
cmp
clc
xor
xor
cmp
in
test
in
call
jecxz
mov
jmp
clc
das
rcr
repz
ret
test
shl
ret
shr
xlat
or
aam
cmc
xor
lret
rol
aam
rcl
cmp
shl
les
cli
rcr
lret
in
jecxz
fisttpll
xor
lret
aaa
cmp
jne
jmp
enter
rcr
adc
lock
pop
xor
jle
add
in
repz
xor
les
mov
lret
shl
sub
lret
aad
xlat
cmp
cmp
jecxz
out
cld
int3
in
loope
fucomp
test
shr
int
aaa
in
fsubr
cmp
enter
out
fildl
test
out
sbb
nop
int3
aad
ret
lret
jmp
loope
xlat
addl
int3
nop
fcoms
rcl
repnz
xlat
xor
hlt
aas
clc
in
stc
fdiv
fcmovbe
fcomi
fimull
lea
jecxz
ss
cli
int
cli
repz
cmp
aad
aam
movl
fmulp
das
xor
out
icebp
jmp
repnz
ret
shl
cld
in
std
out
repnz
into
xlat
ss
aad
out
xlat
int3
cmp
std
jecxz
jecxz
leave
or
and
lock
enter
ss
idivb
cmp
loopne
jmp
jmp
fsubr
xchg
mov
ss
dec
imul
leave
jecxz
ds
rolb
aas
out
xchg
stc
lret
cmp
cli
into
xchg
call
in
dec
int
test
mov
lea
in
clc
call
jmp
fcmovb
loopne
loop
ljmp
adc
lret
jmp
enter
lock
lock
jecxz
test
fdivr
mov
xor
out
jecxz
fcmovnbe
jmp
repz
sti
fiadds
leave
loopne
testl
aad
out
rcr
in
enter
icebp
loope
jecxz
mov
xlat
jecxz
mov
ret
hlt
aam
int
lret
in
xor
lret
loop
stc
push
fld
stc
leave
stc
cli
fcmove
mov
xchg
shl
fnstenv
mul
sti
repz
icebp
and
xchg
repnz
shl
lret
xor
xor
cmc
repnz
fcmovnb
roll
jmp
cld
xchg
mov
xor
iret
xor
clc
sar
out
aad
ss
shl
repnz
rcl
imul
jecxz
enter
in
enter
iret
lock
les
ret
int
in
nop
iret
xchg
xchg
test
out
jmp
out
shl
fcompp
aam
testb
int
mov
xchg
jecxz
iret
lock
call
into
xor
stc
in
inc
lock
add
jmp
rcl
rcl
aad
mov
fcmovb
mov
mov
test
jle
sti
fiaddl
jecxz
out
sti
lock
xchg
aad
jmp
shr
stc
ret
repnz
jmp
lds
rcl
in
xchg
clc
xor
ljmp
fldpi
roll
jecxz
mov
imul
fldl2t
in
xchg
out
loope
cmp
xor
stc
lock
cli
rcr
cmc
aam
icebp
xchg
loope
aas
addb
out
xchg
cmp
cmp
fcmovbe
cmp
aaa
hlt
cmpl
jecxz
adc
mov
div
in
ret
mov
lock
int
fnstcw
cmc
iret
fldt
int
xor
fsub
mov
orb
leave
nop
ffreep
clc
xor
in
sti
cmp
div
cmp
jecxz
cli
in
jecxz
shr
in
out
imul
shl
xor
fistpll
rcl
iret
shl
aad
incb
fdivr
jmp
nop
hlt
jmp
imul
jmp
cmp
cmp
idiv
out
mov
in
in
sub
test
in
repz
not
aam
out
ret
lock
call
mov
fcomip
jmp
out
ret
ss
shll
into
loopne
loop
jmp
fadds
out
lret
in
xchg
xchg
shl
cmc
clc
jmp
out
shr
loop
cmp
ret
mov
stc
in
lock
shll
leave
in
cmp
cmp
repz
out
repnz
movb
out
mov
not
cmp
ljmp
jecxz
test
loopne
xor
in
ror
out
int3
out
mov
in
out
ljmp
cmc
in
cmc
lock
sti
leave
sti
enter
ljmp
jmp
cs
shl
into
stc
fptan
aas
repnz
loope
cli
aad
std
mov
std
lock
les
int
test
repnz
jmp
cmc
in
orl
rol
loopne
sti
xor
jmp
repnz
neg
hlt
aad
xchg
aam
leave
in
testl
call
lock
idivl
loopne
loop
ds
or
rorb
into
cmp
cmp
in
rol
out
idiv
sti
lret
fcmovnu
mov
aaa
ret
shr
in
hlt
icebp
out
std
test
repz
stc
imul
in
out
fmul
out
leave
xchg
loopne
out
xor
fsqrt
lock
cmp
test
shl
ret
std
sti
jecxz
lret
inc
or
ret
add
xlat
int
fstp
rcr
ficoms
cmp
jg
test
jle
in
int
xchg
icebp
xor
int
in
repnz
ljmp
aad
test
jmp
loope
fmulp
xchg
loopne
aas
call
jmp
lret
sar
int
sar
cmp
cld
shr
jecxz
rcl
loopne
shr
repz
cli
iret
lret
out
aad
cmc
ror
mov
incb
rorb
ret
div
enter
cmp
cmp
into
clc
test
cmp
cli
out
mov
fucomi
nop
jmp
sub
clc
out
fcmovnb
fnstcw
repnz
lret
std
cmp
inc
fstp
clc
in
iret
ret
mov
mov
int3
cld
cmp
int3
repnz
sar
rcr
sarb
addb
addb
sub
xor
int3
lock
loopne
out
fiadds
cli
loopne
fmul
loop
mov
out
shr
cli
cmp
cli
aas
aad
in
test
testl
mov
out
loop
sarl
in
out
aad
shl
sarb
sbb
aam
int
in
fcoml
out
xor
iret
lock
out
clc
repz
repz
stc
ljmp
out
loopne
add
repz
cli
iret
leave
fistpll
cmp
add
cmp
ljmp
cld
cld
hlt
loopne
xor
cmp
leave
lock
shl
lret
icebp
aad
xchg
jmp
jecxz
in
flds
repz
lret
aaa
lret
not
lock
repnz
int3
xor
xchg
fsub
lock
xchg
xchg
ror
cmc
lock
jecxz
rcr
int3
repz
enter
fucomip
f2xm1
xchg
divl
shl
call
hlt
ror
repnz
ret
ds
in
fucom
mov
fiadds
out
aam
jmp
clc
rcl
iret
loopne,pt
jmp
stc
clc
aad
out
int
in
addb
out
xor
into
ds
rcl
in
repnz
xchg
call
rol
in
sar
test
test
cmp
test
test
xchg
faddl
in
jmp
hlt
rolb
fadd
int
out
fstp
repz
mov
shl
aaa
imul
aaa
das
cmp
into
ds
in
fcom
cmc
fiaddl
rorb
test
lret
aam
stc
cmp
xchg
out
loop
cmc
lret
mov
std
int
jmp
sti
inc
add
in
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
xchg
rcll
jle
add
xlat
aam
ds
aam
ret
test
sti
orl
in
xor
xor
cmp
hlt
icebp
ds
addl
rorb
orl
fsubr
lret
repnz
sar
ret
std
loopne
int
xchg
shl
aam
out
iret
aam
repz
repnz
mov
jmp
mov
test
fdivs
icebp
ror
ret
ds
fildl
xchg
jmp
in
int
out
aaa
lret
cmp
shl
test
test
xchg
ror
test
jmp
vpsubsb
out
call
hlt
fistpll
cli
aam
out
loope
mov
ret
icebp
mov
mov
test
test
int3
cld
cmp
rcr
jecxz
clc
repnz
aas
jmp
in
mov
xchg
divb
xlat
cmp
std
test
sarb
cmp
loope
add
int3
test
loope
in
leave
xor
fldl2e
aaa
ljmp
sti
rcr
test
out
fiadds
mov
shr
in
lret
mul
fucomi
out
fxch
or
fcom
sti
orl
mov
aad
aam
cmp
ss
shl
cmp
addb
vpandn
mov
out
icebp
mov
imulb
call
shl
loope
aam
out
xchg
leave
cmc
repz
xchg
hlt
lret
loop
ret
icebp
das
cmp
sub
cmc
test
jmp
jecxz
mov
test
std
loope
jmp
jmp
int
aas
fsub
fdivp
ds
mul
stc
sti
stc
in
out
lock
nop
lea
fcmovnbe
into
cmp
into
incl
ds
std
sti
int
fcmove
nop
repnz
xchg
loop
clc
xor
jmp
aaa
jecxz
out
lock
leave
clc
aam
jmp
nop
sub
hlt
int
rcr
jmp
fildl
xlat
in
jmp
out
out
fisttps
lret
out
iret
cmp
fcmove
repz
sti
mov
into
out
lock
xor
xor
xor
clc
repnz
lock
out
cmp
jmp
shl
jmp
iret
enter
cld
in
div
cld
stc
ljmp
and
fcmovbe
cmp
ror
cli
ss
ret
add
iret
xlat
xlat
into
xlat
fwait
in
mov
pop
cmp
mov
jg
test
jle
clc
ds
ret
out
icebp
out
xchg
std
in
xchg
repnz
int3
cmc
repz
neg
int
aam
out
fdivrs
test
test
mov
mov
sub
les
cld
repz
out
cmp
clc
fldpi
idiv
out
xchg
std
cli
sti
roll
repnz
cld
cld
out
out
testb
hlt
icebp
in
ret
mov
dec
lret
in
lock
mov
ss
f2xm1
out
enter
sbb
stc
out
sti
jmp
movl
iret
into
out
int3
cld
int
xlat
shl
out
cmp
leave
xchg
testb
xor
aad
stc
cmp
hlt
faddl
cmp
aam
jmp
fcmovu
fimull
lret
out
aam
icebp
lret
dec
dec
aaa
clc
shl
mov
mul
sbb
test
shl
int3
divl
fcmovnbe
stc
lock
in
aam
jecxz
movb
cld
or
jecxz
lret
fdivs
ret
cmp
in
clc
or
rcr
test
xchg
in
loop
mov
enter
iret
aad
fmul
fiadds
cmc
fimuls
loope
int3
incl
lret
out
cmp
leave
fsub
in
xor
dec
in
xchg
mov
adcb
in
shl
jecxz
sarl
int
lret
fnstsw
cmp
icebp
fcomp
call
popl
mov
cs
int3
aaa
stc
hlt
in
shl
cmp
in
std
rolb
mov
mov
adc
in
fnstenv
ds
fcmovnb
cmp
aam
cmp
decb
enter
nop
xchg
enter
cmp
xlat
aad
lret
lret
sarb
cmc
test
roll
neg
cmc
out
cmc
cmp
cmp
fiadds
in
ljmp
iret
out
iret
sub
cmp
leave
clc
in
iret
loope
fildl
ret
xchg
out
dec
rolb
cmc
call
cmc
repz
std
xor
xlat
out
lret
jmp
mov
hlt
idiv
repz
cmp
lock
shr
rolb
jmp
enter
sar
iret
rcr
jecxz
in
out
call
jecxz
cmp
xchg
fxch
or
sti
fimuls
repz
hlt
lock
shll
cli
shl
clc
sub
add
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
dec
iret
xor
jle
add
ljmp
test
lret
stc
fucom
xlat
rcr
cld
ljmp
repz
nop
mov
push
shll
ror
lret
ljmp
cmp
cmp
xlat
out
and
loop
mov
xlat
sarl
call
xor
leave
idiv
stc
out
loope
ret
adc
and
repnz
lock
stc
out
out
cmp
ljmp
lds
loopne
int
stc
icebp
cmp
out
sti
hlt
aas
sar
in
addl
mov
out
std
into
jmp
rol
xor
cmc
ds
fincstp
test
xchg
inc
int3
int
popl
hlt
jmp
sti
ror
lret
ror
repz
aam
repnz
rol
faddp
mov
mov
call
fsub
jmp
shll
into
sti
into
shr
shr
ret
vpsubq
in
test
loopne
cli
ficoms
repz
idivl
aas
in
sti
cmp
clc
idiv
loopne
mov
jecxz
mov
movb
xlat
clc
ror
aas
repnz
fcom
into
cli
fld
loope
out
addl
out
sti
sar
fcomip
shl
jmp
stc
fcomip
out
rolb
mov
stc
int3
iret
ficoms
in
jmp
std
out
cmc
hlt
repnz
int
icebp
hlt
ljmp
loopne
iret
loopne
jecxz
lock
leave
fmulp
out
hlt
aad
out
repnz
xlat
fisttps
int
xchg
repnz
repz
in
out
cli
fiadds
test
test
cli
shr
sub
aam
xor
repnz
aaa
cmp
cli
repz
fildl
mov
enter
xchg
jmp
shr
shl
xor
ds
cmp
cld
aad
call
in
mov
into
lock
xor
out
ljmp
hlt
shl
repz
int3
jecxz
std
xchg
in
jmp
lock
in
xor
repz
stc
std
not
sti
loope
test
lret
orb
jecxz
jmp
jmp
leave
call
repz
fdivr
imul
out
sbb
jmp
out
rcr
jmp
fidivl
fnstsw
ret
loope
hlt
std
cmc
lret
xchg
test
out
adc
ss
shr
lock
cmp
in
loopne
neg
test
xchg
fiaddl
mov
decl
add
cli
sar
decl
ret
add
int
ret
int
movsb
inc
push
leave
ret
sti
pop
pusha
sub
jle
add
lds
clc
in
fsubr
roll
hlt
fldl
out
out
xchg
xor
vpminsw
out
cmp
lret
hlt
lret
stc
repnz
in
cmp
xchg
loope
shll
lret
aad
cmpl
out
jecxz
fcomp
and
subl
lret
fidivrs
cmp
lock
aad
mov
fsubr
lret
test
xor
ljmp
out
loopne
iret
sti
repz
testb
enter
loopne
enter
div
clc
cmp
testl
mov
in
test
out
enter
out
cmp
xor
ret
rol
idivl
in
int
adc
lock
sub
sti
in
imul
ljmp
out
test
cmc
call
out
rcll
out
in
ss
into
fdiv
clc
cmpb
aad
cld
clc
out
loop
mov
xchg
mov
out
sti
out
out
out
test
cmp
cmp
cmp
sub
loopne
lock
cmc
mov
loope
in
jmp
leave
int
lock
sar
hlt
out
loop
fdivr
in
fmulp
out
xchg
test
hlt
aam
xor
fsubrl
xlat
aas
cmp
ret
out
ret
xlat
not
jmp
enter
jmp
aaa
jecxz
xlat
cmp
leave
in
inc
stc
aam
fcmovb
in
std
fimull
in
mov
out
repnz
int3
sarl
into
ds
xlat
orb
std
mov
cmp
shrl
sub
ror
enter
fxch
fdiv
out
xchg
cmp
in
repnz
loopne
fdiv
lret
loop
rcl
leave
shr
repz
cmc
xchg
mov
mov
ret
addl
call
lret
movb
xchg
in
adc
lret
cmp
fsubr
jmp
xor
lret
clc
stc
and
repz
mov
mov
lock
fcmovnbe
lret
out
aad
jmp
shlb
cli
fdivp
call
repz
rorb
into
jmp
shr
icebp
shl
shlb
jmp
hlt
icebp
stc
jmp
ds
test
cmc
cli
loop
xlat
dec
lret
mov
xchg
shlb
leave
repz
hlt
cli
in
fdivrp
shr
xor
sti
iret
in
std
fdivr
nop
std
in
fucomip
loopne
into
out
enter
idivb
xor
shl
jmp
ret
int3
rcl
ret
fldl
mov
test
jle
rcl
repz
idivl
mov
jmp
loop
xor
lret
cmc
lret
fcom
fdivp
out
out
loope
shl
loopne
cli
xlat
fmul
cld
iret
in
enter
xchg
repz
hlt
int3
int3
shl
repz
stc
in
test
into
hlt
cld
fcomp
hlt
not
stc
loopne
loop
sub
mov
out
cli
cmp
in
shl
ffreep
call
xchg
aas
ret
jecxz
out
cmp
sbb
ffreep
stc
fnstcw
in
into
cld
fcmovbe
into
shl
or
icebp
in
enter
out
repz
or
out
aas
fsub
jecxz
xchg
enter
in
iret
xchg
iret
into
xor
ss
std
xor
cmp
int
in
hlt
fadd
cmpb
hlt
in
leave
fcomip
dec
hlt
repz
cli
repnz
rcr
aam
iret
aam
cmpb
roll
into
iret
ficoml
xchg
xor
sti
out
rol
sar
fcmovnbe
aam
cld
jecxz
cli
call
int
loop
in
sub
iret
cmc
into
iret
out
icebp
cmp
fmull
fmul
cmp
sub
aaa
lds
cmc
fdivrs
cmp
cmc
std
clc
std
call
mov
fdiv
icebp
shr
leave
out
repnz
test
cmp
cmc
xchg
fisttpl
test
out
ret
shr
aaa
shl
sarb
repz
iret
aad
xchg
mov
lock
int
ljmp
fnstsw
hlt
ror
cmp
aad
out
test
loopne
stc
mov
mov
xchg
sub
ss
call
cli
int3
repz
roll
hlt
xchg
addb
mov
xor
jmp
neg
jmp
roll
lret
int
int3
mov
shl
cmc
mov
fucomip
stc
xor
mov
hlt
aam
rcl
fdivrs
neg
in
fisttps
in
imull
int3
ss
rcr
hlt
fcmovnbe
out
sti
incl
out
loop
out
in
test
xchg
xor
not
fmulp
repnz
cmp
repz
loop
ret
decb
fld1
iret
in
aad
clc
out
aam
in
repz
iret
aas
fsubrp
fsub
and
test
mov
jmp
ret
aaa
aas
jmp
lock
filds
into
addl
in
fcom
clc
cmc
test
out
xlat
lock
roll
pop
add
jmp
fadd
aam
fst
fcoms
sbb
jg
jnp
xor
jg
test
jle
imul
ljmp
cmc
xor
int
xlat
jmp
cmp
icebp
fcmovnb
ret
sar
incb
stc
in
test
rcl
mov
xlat
jmp
cmp
cmp
ss
cld
jmp
test
loopne
jmp
shl
ret
xor
aad
shl
into
rcr
test
xlat
aam
mov
std
neg
mov
xchg
lret
out
xor
shl
out
xor
leave
loope
ffreep
stc
aam
addb
popl
mov
repz
clc
lock
aam
cmp
cmp
std
into
sar
rolb
iret
orl
xor
loop
lock
cld
iret
into
fdivrp
les
out
in
xlat
cli
mov
sti
in
icebp
loope
lock
sub
fidivrl
cmc
fprem1
in
sbb
sbb
ret
leave
clc
xchg
and
ljmp
fdivrp
shr
icebp
int
into
in
fdivrs
mov
fscale
xlat
loope
in
mov
mov
imull
icebp
repz
cli
out
shl
out
fdivrl
mov
hlt
lds
sar
loop
xor
enter
fdivrl
out
enter
test
repz
loope
leave
idiv
mov
shr
fucomip
mov
into
xor
cmp
iret
lret
rcr
int3
xlat
add
std
call
fimull
enter
iret
aaa
fcomip
stc
cld
icebp
std
lock
call
int
cli
xchg
lret
loop
rcl
in
sub
cld
cmp
call
idiv
shl
sub
int3
mov
xchg
in
xchg
repz
loop
shr
ss
icebp
loope
cmc
cmp
xor
jecxz
mov
test
in
cmp
cmp
cmp
stc
cmp
mov
stc
stc
jmp
xchg
in
xor
ret
ret
xchg
mov
cmc
cli
lret
fimull
jecxz
xor
xlat
ret
out
xor
ljmp
fsub
in
fucompp
jecxz
lock
in
loop
cmp
leave
sar
lret
lock
call
out
vshufps
add
cli
out
into
ljmp
rol
loope
cmp
testl
rcl
xor
xor
cld
jmp
ds
sbb
cmp
in
cli
mov
jmp
fadd
std
std
lret
icebp
std
loop
test
hlt
enter
enter
loop
rolb
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
inc
xor
xor
jle
add
rol
aam
repnz
ljmp
and
lret
jmp
out
call
call
in
cld
out
sti
std
int
loopne
loope
loopne
sar
clc
lock
in
xor
xor
xor
in
cmp
ret
cmc
mov
in
mov
sub
mov
cld
call
shll
cmp
int3
lock
out
out
fisttpl
mov
mov
out
in
xor
repnz
fdivr
fdivr
aaa
fnstcw
call
int3
orl
into
jecxz
in
idiv
ds
std
rcr
iret
in
repz
cmc
mov
mov
jecxz
icebp
xchg
adcb
leave
aaa
out
shr
idivb
cmp
leave
and
fisttps
icebp
jmp
aaa
fcomi
call
cmp
iret
loopne
out
mov
fsub
xchg
jecxz
out
aaa
aad
ror
repnz
idiv
aam
filds
in
repz
repnz
aam
cmp
cmp
lock
xlat
fcomi
sti
stc
clc
nop
call
divb
xlat
fst
test
fcmovne
fsub
out
mov
into
xchg
int3
rcl
in
lret
out
cmc
cli
icebp
cmp
stc
lock
test
shr
xlat
call
hlt
mov
jecxz
ret
jecxz
shr
xor
jmp
aad
leave
leave
loope
cmc
jecxz
ljmp
xor
test
lock
repnz
lret
fadds
jmp
ffree
test
out
ret
in
rcl
div
out
sti
rolb
sub
test
clc
ret
stc
out
mov
xchg
test
rcll
lret
fidivs
aas
cmp
jecxz
ds
test
jmp
xchg
test
in
out
in
into
cli
iret
aam
stc
cmpb
xchg
fmuls
xchg
in
in
int
stc
lock
shl
jmp
out
jmp
fisttpll
cmc
mov
clc
enter
int
cmc
repnz
xlat
jecxz
enter
test
fcmovnu
repz
or
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
jge
sbb
cmp
jg
fiaddl
jle
xchg
cmc
out
fdivs
call
jmp
int
loop
xchg
aad
sti
sub
jmp
fsubr
in
call
aad
test
jecxz
call
loopne
int
leave
rcll
in
lret
sarl
stc
xor
cmp
aam
xchg
loop
cmp
mov
xchg
loopne
iret
xchg
aam
fbstp
int
out
aad
cmp
not
rolb
fcmovnb
out
fucom
lock
cli
loop
lret
xor
int3
xor
repz
clc
jmp
sar
roll
sti
mov
xchg
test
iret
and
call
clc
not
sti
and
cmp
xchg
xor
fcmovnu
xor
ds
shl
cli
fsub
loope
flds
xchg
hlt
mov
repz
ljmp
leave
cmp
fdiv
flds
call
sti
out
lret
xchg
in
fcmovnbe
ds
repnz
cmc
fdivr
faddl
imul
call
out
mov
ret
cmp
cld
enter
repnz
cmp
ret
faddp
decb
ljmp
fdivr
fcmove
loope
int3
rcr
fdivp
enter
lret
test
xchg
iret
aaa
jmp
aam
cmp
iret
ret
in
lret
fucomip
mov
call
cmc
ret
cli
out
cmp
ljmp
loop
fprem1
sti
jmp
addb
loop
xor
xlat
sar
iret
cmp
rcl
ds
std
in
fildl
xchg
cmp
rcl
ljmp
out
fcom
inc
leave
in
fdivr
or
addl
cld
ds
repnz
in
fsub
jmp
or
sti
lret
xchg
fbstp
clc
lret
xlat
aad
cmc
fcomi
incl
loopne
loop
lret
loope
shl
xchg
xchg
shr
xor
clc
idivb
fcmovnbe
test
jmp
out
sbb
mov
xchg
in
lret
in
into
lret
into
fstpt
aam
ljmp
xchg
ffree
call
and
loopne
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
pusha
xchg
inc
xchg
cmp
fiaddl
jle
leave
fdivr
jmp
mov
int
iret
int3
xor
lret
out
or
lret
shl
icebp
lret
out
fdivr
lock
std
in
aas
iret
shr
ss
repz
loope
and
loop
cmc
cli
sub
lea
lock
cmp
ror
in
fcmovne
aam
std
xor
fadd
mov
fsub
stc
and
hlt
xlat
xor
aad
in
ror
cmp
loop
loop
mov
mov
mov
hlt
xor
leave
xor
ss
cmp
cmc
loope
cmp
shl
test
out
in
and
jecxz
into
leave
into
repnz
aad
sti
xor
ret
orl
test
repnz
fsub
leave
cmp
icebp
cmp
sbb
cmc
enter
loope
jecxz
shr
in
out
sar
out
fcomp
sar
fiadds
jecxz
cli
xlat
cli
orl
fsubp
lret
jecxz
cmp
icebp
aam
neg
add
div
rcr
fdivrl
sbb
clc
clc
jmp
fst
xorl
jmp
incl
cld
hlt
icebp
in
out
mov
stc
decl
int3
hlt
das
leave
aad
xor
not
loopne
test
aas
repnz
leave
add
jmp
mov
lock
cmp
jmp
int3
inc
xchg
sti
std
std
out
testl
loop
into
cmp
cmp
aam
cli
out
fldl
std
fcmovnu
int3
xchg
lret
xchg
imul
in
repz
out
sti
cmc
cld
in
loop
ds
loop
ret
ljmp
iret
aas
fdiv
in
lds
shl
aas
loopne
fdivr
shl
aam
ret
stc
in
addl
xchg
in
aad
enter
out
cmp
in
in
fiadds
leave
xchg
in
ljmp
int3
lock
test
sti
std
jecxz
ret
jmp
jecxz
xchg
ret
std
lret
aas
leave
shl
cmp
shl
mov
out
leave
xor
xchg
hlt
out
xor
xor
and
rcl
adc
sti
mov
movzwl
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
testb
jg
fiaddl
jle
cmp
loopne
xchg
out
mov
jmp
fsubr
stc
int3
rol
clc
faddp
xlat
aad
cmc
neg
jmp
std
fldcw
enter
out
hlt
incl
ds
test
mov
cli
mov
addb
cmp
repnz
ds
rcl
in
stc
and
call
jmp
in
repz
out
leave
out
ret
div
cli
aad
in
mov
decb
out
test
lret
cmp
in
fucomip
decl
or
loopne
int
call
int
xlat
sar
cmp
lock
rol
cld
inc
out
loop
fucom
in
addb
icebp
ror
cmp
std
adc
xor
add
test
out
mov
leave
int3
rcr
lock
loopne
rcr
in
lret
cld
clc
into
loopne
ret
out
lds
out
mov
xchg
xchg
shr
ljmp
fsub
ror
repnz
in
cmc
sar
out
ds
cli
ljmp
mov
xor
repnz
aaa
cli
cmp
fidivrl
cmp
add
xlat
test
and
repnz
sub
clc
sti
icebp
cli
enter
ss
aam
fsub
mov
fcmovb
xchg
test
jecxz
out
shl
cli
int3
aas
aas
fdiv
ret
addb
fucomp
jmp
std
out
repz
aad
lret
in
call
rcl
cli
aas
stc
loope
test
fisttps
in
cmp
xor
loopne
rcr
out
in
fisttpl
ljmp
in
int
vpsubd
cli
fstpt
sbb
cmp
ds
cli
iret
in
fisttps
shl
int3
xor
repnz
fdiv
test
in
lock
loope
xchg
iret
out
addb
fincstp
test
cmp
not
cmp
or
icebp
rol
fcmovne
int
fsubrp
mov
enter
aad
lret
aad
stc
loope
sti
cmp
test
cli
ljmp
jmp
ljmp
repnz
ss
fcmovb
out
inc
cld
rolb
cmp
sub
jmp
ror
rcr
ror
js
cmp
jg,pt
fiaddl
jle
fiadds
out
int3
mov
icebp
xchg
repz
in
stc
lock
rcl
cld
int
mul
cli
fsub
cli
movl
cmc
ljmp
repz
in
into
fiaddl
clc
lret
idiv
test
call
nop
in
jmp
cmp
fcmovne
lret
cmc
fcmovne
loop
sbb
cld
call
out
lret
in
cli
shll
cmp
rcl
into
cld
test
fsub
cmc
out
mov
loop
into
fld
fucomp
xchg
loop
jmp
fcomi
lock
shl
add
test
aad
stc
xlat
clc
test
dec
mov
in
cmp
iret
ret
sti
repz
test
imul
fsubr
xchg
jmp
in
ljmp
lret
ds
ffreep
cmp
in
jmp
enter
in
out
sar
repz
lret
not
neg
xor
xlat
in
aam
cmp
jecxz
std
loopne
loopne
vpaddb
mov
sub
cli
jmp
xlat
cmp
cld
out
fsubr
loop
in
xchg
fmull
ret
lds
sti
out
aas
cmp
shl
fcomi
loopne
in
sbb
fmulp
iret
hlt
fld1
fadd
cmp
stc
hlt
shl
fdivrp
fadds
xlat
jmp
in
cmc
xor
aam
cmp
out
fdiv
shl
shl
sti
hlt
fmull
out
ffreep
std
int
jmp
out
std
enter
icebp
fidivrl
fdivp
cmc
xchg
jmp
fsub
in
in
xchg
in
std
out
repz
in
cli
xor
ds
repnz
cmp
cli
fcmovu
stc
sub
out
shr
jmp
cmc
ret
in
neg
shl
sti
ds
cmc
sar
repz
fsub
in
lret
jecxz
cmc
in
clc
xor
div
cmp
divl
hlt
loop
mov
in
cld
loop
mov
div
repz
ds
into
ror
test
cmp
in
loop
into
hlt
jmp
int3
out
aad
jmp
int
repnz
ljmp
fadd
idiv
mov
mov
mov
in
pop
int
repnz
jmp
leave
cmc
lret
fsubs
test
add
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
test
fiaddl
jle
xlat
cmp
loope
loope
std
ret
into
stc
mov
loopne
loope
rcl
lds
div
sar
aad
sar
aam
flds
stc
test
icebp
xchg
lock
repnz
aas
cli
not
fdivp
addl
xchg
out
aam
jmp
hlt
call
pushl
ffree
sarb
testl
jmp
out
in
stc
fxch
fmul
lret
clc
aad
in
loope
filds
loopne
lret
out
mov
test
aam
ss
ss
int3
push
enter
out
out
xchg
mov
mov
fxch
shl
into
into
shll
into
clc
repnz
stc
stc
aam
cmp
icebp
aas
stc
adc
lret
lret
lret
cmc
xor
out
cli
enter
std
aas
iret
loop
loopne,pt
hlt
sbb
fisttps
ljmp
sti
shr
cmp
repz
cmp
ret
fdivr
fucom
jmp
mov
imul
divl
loope
clc
shl
out
lock
fucomip
in
sbb
shl
mov
repz
xor
into
stc
xor
ss
fxtract
cmpb
aas
call
dec
lret
out
fsubrp
fsubp
out
fcmovb
cmp
int
ds
ds
fistpll
xchg
test
repz
clc
loope
testl
neg
cmp
lret
call
aad
aas
test
repnz
stc
test
repnz
jmp
loop
icebp
call
rcl
ds
roll
neg
int3
cli
call
repz
hlt
ss
in
out
hlt
stc
fdivs
out
cmc
flds
int
rcr
out
xchg
iret
xor
ror
fsubr
clc
int3
addb
ret
fucomp
in
jecxz
in
xor
out
fucomi
lret
fidivs
repnz
fldl
xchg
and
mov
mov
xor
stc
idiv
das
fnstcw
jmp
cli
fadds
fst
aad
fsub
in
rorb
sar
rcl
iret
leave
cmc
xor
cmc
cli
repnz
testb
jecxz
mov
mov
adcb
xor
rol
add
push
sbb
add
cli
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
xchg
push
ret
jg
fiaddl
jle
clc
repnz
repz
cmc
in
in
rcl
lret
leave
ljmp
loopne
enter
rcr
cmp
xor
sti
xchg
fstp
cli
shlb
ret
xlat
aaa
aaa
cmp
repnz
hlt
out
fsubp
lock
addl
incb
lock
rcl
xor
sarb
loop
out
fisttpl
in
loope
lock
xor
lret
out
adc
lds
xlat
jmp
int3
cli
call
in
ljmp
cmp
aaa
lret
fcmovnu
in
sbb
leave
in
xchg
mov
loope
nop
xchg
loope
xor
into
div
out
fcmovne
stc
loopne
shl
hlt
loopne
aad
xlat
fiadds
xchg
mov
shll
clc
ljmp
shl
iret
ret
ljmp
sti
xchg
vmaskmovdqu
out
enter
add
addb
std
fld1
mov
cli
int
repnz
out
aaa
fcomip
in
fdiv
rolb
ret
out
repnz
in
jmp
jmp
shr
cmp
call
test
aam
cmp
out
cld
jmp
in
in
out
incl
stc
hlt
sarl
cmp
jmp
in
xchg
cmp
fcmovu
lret
shr
into
xchg
clc
in
fcmovnbe
cmp
cmp
cld
stc
out
mov
call
in
loop
repnz
cli
fstpt
xor
cmp
icebp
vpmaxub
fdivrp
stc
enter
or
xchg
divb
cmc
cli
cmp
int3
fstpt
rol
fucom
sti
adc
mov
and
icebp
jecxz
hlt
xchg
out
icebp
aaa
hlt
call
in
cmp
int3
loopne
loop
stc
mov
addb
std
xchg
in
xlat
out
out
out
cmp
loope
cli
sti
repnz
enter
nop
icebp
xlat
test
aaa
cmc
repnz
in
shl
fucom
cmp
aad
fcmovu
test
int
xor
stc
ljmp
cmp
cmp
stc
sbb
sbb
fldlg2
test
xchg
shl
xor
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
pop
xchg
or
lds
fiaddl
jle
fldl2t
cmp
fucomi
test
test
hlt
out
xchg
ret
hlt
int
iret
cld
jmp
sarl
loopne
fcom
shr
stc
test
loope
call
repnz
shl
into
into
lock
aam
cmp
loop
jmp
nop
test
xor
cmp
ss
hlt
ret
shr
jecxz
fcmovu
loopne
std
repnz
xchg
loopne
shr
stc
fnstenv
xor
loope
shl
mov
jmp
sti
roll
iret
leave
jmp
cmp
lock
shr
fcmove
jecxz
test
cli
cmp
dec
icebp
ror
xor
xlat
in
ljmp
cmp
aas
shl
loop
mov
in
enter
nop
in
xchg
shl
idiv
cmp
clc
out
stc
sarb
out
mov
loopne
mov
lret
lea
div
iret
out
in
cmp
test
hlt
stc
ret
loopne
mov
loop
movb
cmp
repnz
neg
icebp
sti
repz
out
aad
or
cli
jmp
jmp
shl
lock
iret
lock
enter
in
in
in
xchg
loope
nop
shl
out
sti
in
in
jmp
ljmp
xor
mov
dec
test
aam
sub
out
xlat
loope
fiaddl
fadd
in
jmp
rorb
vpsllw
rcl
call
lock
stc
xchg
jmp
clc
in
out
call
out
rcr
icebp
ret
cli
mul
fidivrl
cmc
fdivrp
jecxz
ret
enter
mov
call
in
int
frndint
ljmp
cmp
sti
div
ret
into
filds
loopne
aam
aam
cs
loope
cmp
fiadds
test
sub
int
fsubrs
sub
repz
aad
fiaddl
addb
and
hlt
in
or
divb
int3
aaa
call
fadds
fmul
xchg
xchg
aad
xorb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
pop
push
scas
push
mov
add
xor
rcl
int
cmp
and
lock
aad
cli
hlt
mov
std
iret
mov
shl
into
call
int
int3
hlt
enter
ds
stc
ds
test
incl
mov
mov
cmc
cmc
shlb
icebp
iret
fst
test
fptan
cmc
fiaddl
std
mov
mov
xchg
out
out
aad
fadd
cmp
out
repnz
fcomp
adc
sar
in
fldl
xchg
sub
lock
aaa
xor
clc
fdivrp
std
fdivrl
aas
fldl2t
stc
sub
xchg
loopne
call
fcmovnu
fcomi
aaa
neg
xor
test
iret
adc
lret
loope
in
lret
mov
int3
ror
or
aad
aad
out
sti
cmp
cmp
xlat
xor
mov
enter
test
loopne
cmp
xor
int3
cmp
out
aam
xchg
rol
fsubr
fadd
loop
fmulp
lret
rol
ss
iret
in
cmp
hlt
in
fucomp
shl
cld
cmp
lret
fcmovu
nop
xchg
out
xchg
ljmp
out
std
fscale
shl
rol
test
rol
cli
mov
int3
lock
in
mov
loop
lret
clc
div
into
int
cmp
out
shr
fsub
sti
fadds
loope
ret
out
loopne
xchg
cli
shl
xor
sti
int
loop
adc
jmp
shr
mov
xor
iret
sti
repz
into
cmp
iret
sub
fiaddl
or
int3
mov
icebp
mov
jmp
cmp
enter
test
repz
aad
fadd
loope
test
mov
out
loope
icebp
cmp
sti
rcr
ds
into
in
out
sar
hlt
mov
loopne
int
mov
not
cmp
xlat
fcmovnu
cmp
aam
cmp
sti
in
cmp
icebp
cld
rclb
iret
shll
cmp
in
xor
hlt
fdiv
rol
cmc
cmp
les
in
sti
xchg
aad
xor
cmc
into
fdivl
cmp
sar
ret
test
xchg
jecxz
xchg
in
in
cmp
jmp
rol
cmp
loope
lret
int3
cli
fucom
lock
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
or
jg
fiaddl
jle
into
xchg
rol
lret
cmp
stc
xor
hlt
ret
cld
xlat
cmp
fmul
ror
out
shl
out
call
out
aam
cmp
and
ljmp
std
xchg
out
in
in
ret
into
out
ret
in
xor
div
rolb
call
fucomp
out
enter
int3
xor
in
fsincos
clc
out
fadds
jmp
mov
in
ror
repz
xchg
xor
shll
icebp
fiaddl
xlat
ds
filds
xchg
shl
rorb
enter
fcmovu
loope
test
loope
vcmppd
and
lock
in
shll
in
fcmove
aas
rolb
icebp
rol
in
cld
loopne
lret
rcr
out
fcomip
ret
int3
in
call
into
fdiv
lret
iret
loop
jmp
rcl
addl
int3
test
adc
ret
sarb
hlt
lock
icebp
fcom
cmp
fcomp
lock
fsub
ds
loopne
xchg
aaa
cmc
into
out
ljmp
orb
fscale
iret
adc
mov
into
ret
in
repz
cmp
push
clc
neg
jecxz
sarl
jmp
lock
mov
clc
ret
int
cld
cli
out
in
cmc
lock
rol
sti
rolb
sti
or
sti
fimuls
fxch
rcr
lock
lock
ret
xlat
cld
std
fucom
fmul
ret
cld
rolb
out
out
ret
lret
cmp
icebp
cmp
rcl
repnz
mov
loope
loop
xchg
xchg
shlb
shl
lds
cmp
cli
int
std
rcl
imul
fadd
cmc
xlat
xlat
leave
ljmp
xor
xlat
out
sar
ljmp
decb
lret
xchg
fcomip
xor
iret
fpatan
idiv
neg
loope,pt
sar
xlat
icebp
out
in
call
lret
jmp
iret
xchg
sub
vpaddusb
call
fistpll
aam
loopne
jmp
leave
jecxz
shl
mov
lock
lret
sti
in
cmp
cmp
mov
fistpll
fcmovb
add
sub
je
add
rcl
ret
fucomp
insb
fstps
popa
or
fiaddl
jle
lret
jecxz
in
into
xchg
call
sub
xor
cli
div
cmp
in
in
addl
not
fmull
in
loopne
mov
jmp
in
repnz
jmp
cmp
into
xlat
incl
std
fadds
ljmp
aam
hlt
das
xor
clc
test
sub
lret
repnz
xchg
jmp
repnz
cmc
cmp
shr
leave
ds
ret
aas
aam
enter
out
mov
int3
repnz
shrb
repnz
call
std
addl
loopne
out
lret
lret
shl
cmp
idivl
aad
sti
in
stc
loop
mul
fmuls
imul
lock
cmp
cmp
out
rcr
cmp
hlt
lock
bnd
xchg
jmp
aad
xor
stc
clc
ror
rcl
iret
fcom
roll
in
std
lock
shr
in
loopne
not
out
xor
out
jmp
cmc
cmp
bnd
fcmovne
lock
repnz
shl
xor
cmp
not
jmp
fdiv
xlat
orl
repz
xor
fcmovbe
xor
icebp
in
fcmovbe
jecxz
rcr
shl
frndint
or
cmc
jmp
jmp
stc
xor
fsubr
loope
ret
in
fdivrp
in
xlat
fisttpll
mov
int3
aaa
hlt
shl
hlt
enter
aad
loopne
ffreep
enter
sbb
mov
mov
shl
xor
in
aaa
cmp
sarl
lock
repz
loope
mov
cli
call
mov
sub
xbegin
icebp
in
shl
push
aas
ret
testb
rcr
xchg
leave
das
out
xlat
ds
adc
xchg
mov
call
leave
lds
in
out
cmp
fcmovnbe
cld
out
rol
loope
cmpb
jmp
std
leave
nop
icebp
out
xchg
repz
aad
rol
jmp
cmp
lock
aad
sti
ret
aas
test
enter
int
in
in
divb
cmp
fidivrs
shl
xor
fcmovnb
shl
aam
ja
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
stc
out
fisttpl
xchg
mov
out
fcmovbe
aas
or
lds
cli
out
cld
xchg
ljmp
in
idivl
shr
fcmovnu
iret
fsubp
xlat
neg
cmp
std
test
out
fldpi
out
in
xchg
int
fdivs
out
ds
aad
out
rcr
in
fmul
nop
mov
nop
aam
aad
shr
xor
cli
jmp
roll
testl
xor
repz
hlt
enter
aam
repnz
leave
loop
jecxz
repz
mov
xor
cmp
cmp
neg
out
sti
cli
in
cli
into
stc
adcl
cmp
not
lret
frndint
loopne
call
fcmovnu
mov
in
repnz
ret
cmp
rcr
lret
cmp
aam
clc
loop
idiv
rol
lret
addl
stc
idivb
cmp
fyl2x
rolb
xchg
jmp
in
dec
xchg
lret
iret
in
aad
aas
fcmovbe
fiadds
shl
mov
orl
repz
repz
hlt
not
shl
ds
aas
into
cli
loope
lea
in
in
call
in
imul
rcl
div
xlat
sti
int
fsub
std
cld
push
in
mov
iret
test
out
mov
cs
repz
sub
shl
stc
rcl
fdivrp
mov
fdivrp
cli
mov
mov
into
out
mov
xor
test
aaa
int3
ss
cli
clc
loop
cmpl
addb
xchg
hlt
xchg
adc
aam
fcmovbe
not
int
in
cli
loop
shl
ds
mov
jmp
sub
in
cmp
xor
out
fdiv
aam
sti
cmpb
cld
vpmullw
orb
shl
lret
fstpt
in
xor
div
iret
into
ds
fstp
ret
xchg
out
mov
in
jmp
adc
shll
out
cld
shr
loope
idivl
not
fldl
fxch
in
xchg
xor
in
cmp
div
aam
rorb
ja
add
je
add
rcl
aad
loop
pop
sbb
test
jg
fiaddl
jle
xchg
repnz
clc
test
xchg
int
loope
xor
das
fsubr
lock
aam
loop
test
ret
movl
mov
jmp
xor
out
fstpt
repnz
aas
loope
cmp
fst
test
sub
out
in
xchg
xchg
repnz
int3
lret
ljmp
rcr
cld
cmp
loop
repnz
fucom
jmp
in
ror
iret
lret
stc
loopne
in
lock
repnz
in
addl
not
lock
fsub
cmp
cli
cld
out
out
sti
lret
addl
fcomp
shr
and
cmc
repz
mov
cld
stc
mov
jmp
cmp
fidivs
xlat
jmp
fiaddl
mov
in
mov
repz
into
loope
out
aaa
sar
cmp
not
or
jecxz
leave
sti
jecxz
fsubr
fxch
fucomip
addb
out
lock
cli
stc
mov
out
incl
lock
in
lea
jmp
xor
aas
loope
fnop
rol
movb
sbb
xchg
int
out
out
das
fcomp
into
sar
cmp
xor
lock
add
cld
jmp
lret
rcl
xchg
mov
lret
in
cld
out
jmp
or
fcmovbe
testb
into
test
loop
fdiv
hlt
into
cmc
rcl
int3
xor
cmp
rcl
xlat
cli
cmp
lret
stc
mov
in
in
incb
lds
cs
leave
shll
aad
repz
mov
hlt
fucomip
jmp
fldlg2
lret
xchg
out
lret
enter
leave
cmc
int
xor
loop
sti
fcmovnbe
leave
loope
nop
lock
loopne
xor
fdivr
out
out
push
iret
loopne
out
call
into
in
in
icebp
loope
clc
cli
ss
cmp
jmp
out
clc
ds
jecxz
int
jmp
out
divl
repnz
cmp
in
test
add
in
out
clc
xchg
mov
ror
repz
into
shll
cmp
hlt
repnz
repz
mov
negl
jmp
enter
fstp
int
inc
dec
sbbl
or
mov
jg
fiaddl
jle
fdivrp
and
leave
mov
jmp
out
cmc
out
int
jmp
iret
cmc
cmp
movb
mov
lret
xchg
enter
lock
in
xor
out
repz
sti
xor
loopne
xchg
out
test
dec
out
lret
mov
std
lock
xor
fdivrl
ss
loopne
movl
out
in
into
in
xor
lock
clc
ljmp
hlt
in
aam
ljmp
xchg
mov
aas
clc
jmp
imul
ljmp
test
incl
mov
jecxz
lock
in
iret
fcom
out
lret
out
aad
cmp
fsin
icebp
fildl
loop
in
leave
in
cld
out
out
hlt
mov
xor
ss
jmp
enter
aad
xchg
hlt
rcr
testl
xchg
lret
stc
call
cld
lret
repz
icebp
in
in
ds
jecxz
mov
fxch
out
hlt
ror
aad
cmp
loopne
ret
sti
loop
mov
fld
ljmp
xchg
ljmp
fdivrl
sti
aad
cmpb
loopne
xor
mov
int3
int3
lret
icebp
in
int3
shr
lret
fadd
in
idiv
sarl
cmp
aad
cmp
ror
cmp
out
iret
mov
lret
ljmp
jmp
adc
orb
out
lock
mov
mov
into
loop
hlt
leave
in
jmp
int
ret
into
fcmovnbe
cld
std
xchg
cmp
out
test
mov
out
lds
fcmovne
fcomp
cmp
cli
shl
movb
mov
into
out
jmp
iret
xlat
leave
out
jmp
rcr
shl
cld
mov
ljmp
filds
sub
fdivr
shr
loopne
std
not
xchg
mov
loop
test
in
mov
aam
xor
sub
stc
fxch
repz
sbb
hlt
cli
jmp
out
loopne
xchg
jmp
ljmp
enter
loope
aas
aad
loope
test
fdivrs
xchg
loop
sub
lock
rcl
fmul
sub
cmp
movl
ja
movl
mov
jmp
mov
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
andb
data16
jle
add
fcmovnbe
icebp
fadd
sti
loope
xlat
loop
mov
std
loopne
rol
out
xor
leave
test
rolb
aad
lret
sti
fdivr
xchg
addb
xor
lock
lret
fcomi
aad
rcr
cli
jecxz
out
out
int3
shr
mov
out
repz
aad
cld
iret
fcomi
loop
or
in
sbb
in
orl
lret
jmp
aaa
xlat
xor
xor
iret
jmp
lret
shr
fbstp
aam
rcl
lret
jecxz
shl
fcmovnu
rorl
sti
out
repnz
xlat
rol
sub
sarb
loopne
fiaddl
faddl
mov
in
ljmp
int
fld
xor
cmc
in
fldl2t
fcomip
fmuls
fxch
cld
xchg
enter
int3
aam
divb
cmp
out
repz
hlt
cmc
in
enter
loop
incl
out
xor
repz
repz
xacquire
fcomp
icebp
cld
int3
nop
jmp
icebp
loope
jmp
cmp
ljmp
out
test
out
and
in
xchg
shr
int
enter
sti
fnstcw
shl
int
mov
cmp
in
out
cld
mov
sub
enter
in
dec
fmul
out
loop
out
std
std
testb
in
loop
ljmp
int
cmc
int3
aad
sarl
not
cmp
mov
fldl
call
shll
aad
sti
call
lock
repz
icebp
ds
shl
mov
lret
roll
cmp
xor
in
call
int
in
ret
mov
xchg
in
out
nop
cld
loope
xchg
fisubrs
int
int3
cmp
lret
stc
testb
ror
lret
shl
sbb
hlt
loop
cli
fidivrl
or
testl
into
addb
in
int
shl
in
leave
int3
int
int3
adc
fadds
ljmp
ljmp
xor
shlb
add
clc
jmp
aam
mov
int
rol
repnz
sti
push
ret
jle
add
fsubr
sar
in
fmulp
hlt
rol
mov
mov
xchg
xchg
cmc
xor
repnz
idivl
shl
cld
sbb
idiv
call
mov
loop
das
fptan
cli
lret
repnz
iret
cli
push
icebp
xchg
xchg
jecxz
icebp
or
loopne
xor
out
fdiv
cmpl
jecxz
fucom
addl
inc
aam
shl
lret
ror
shr
jmp
fadd
rol
cmpb
ljmp
loopne
test
out
fidivrl
in
xor
cmp
hlt
xchg
enter
loopne
jmp
mov
xchg
enter
cmp
into
xor
or
test
fldl
loop
ljmp
xor
int3
leave
clc
fmul
ljmp
out
movb
addl
shlb
xlat
call
dec
faddl
loope
cli
lret
ljmp
shr
enter
out
sti
cmp
cmp
int3
cmc
icebp
repnz
ljmp
xchg
out
shll
jecxz
in
std
cmc
in
icebp
ret
test
loopne
ljmp
sti
incb
stc
int
ljmp
ret
cld
test
aam
roll
into
in
orl
lock
out
out
cld
ds
in
repz
in
bnd
out
fiadds
mov
shr
xor
cmp
std
cmc
std
loop
repz
idiv
loope
sub
fbstp
ret
out
xor
fcmovnu
enter
out
aad
sti
stc
aam
cmc
mov
and
into
out
in
icebp
fsubrp
rcr
jmp
iret
shll
xlat
cmp
aas
ds
faddp
jmp
ljmp
aad
cli
cmp
ffree
call
test
cmp
mov
lret
iret
cmc
mov
jmp
xor
call
hlt
xor
aas
out
aas
vpsraw
call
int
int
out
ss
fnstenv
sbb
ret
rol
repnz
repnz
std
addl
sbb
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
loopne
mov
jle
add
cmc
ror
sub
lret
fsub
jecxz
ret
jmp
in
in
xor
fiadds
cmp
int3
jmp
fcmovb
sbb
shl
mov
test
repnz
ror
in
into
out
aam
in
aad
in
in
aam
test
mov
std
iret
loopne
in
test
int3
f2xm1
out
stc
rcr
loop
clc
addb
out
cmp
out
jecxz
aaa
iret
in
cmp
aam
lret
cmpb
test
std
ds
decl
out
cli
aad
lret
xlat
icebp
stc
cmp
fsubrp
fdiv
hlt
call
or
out
mov
in
xor
cmp
shr
cmp
repnz
icebp
jecxz
sarl
adc
mov
aam
testb
xchg
ljmp
into
xor
cmp
ljmp
ret
int3
in
out
mov
fiadds
cmc
int
lret
cld
ds
in
loopne
xchg
sti
hlt
in
int3
loopne
loope
out
nop
lret
iret
enter
aaa
cld
out
lret
in
cmc
ret
mov
mov
xchg
shl
aaa
shr
lock
repnz
cmp
les
jecxz
testl
out
stc
ror
rcr
int3
cmp
hlt
cli
fcmovnb
fsub
orb
loop
fucomip
jecxz
cmc
not
shlb
rolb
out
std
fcmove
fucomip
lea
add
lret
fucomip
lock
xlat
add
fcmovne
out
lret
popl
call
cmp
shl
addb
ds
mov
ficoms
rclb
ss
out
ljmp
test
clc
out
fsubr
loopne
out
lret
jecxz
out
int
cli
cmp
out
aam
jmp
int
ret
shl
cld
mov
sti
rorb
call
sti
fmulp
lret
and
leave
dec
loope
std
int3
xchg
shl
ror
ljmp
xor
cmp
frstpm(287
cmp
ret
lret
test
push
int3
mov
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
adc
jp
jg
fiaddl
jle
test
jecxz
lret
in
cld
cmp
not
test
fcmove
test
test
cli
icebp
out
xchg
icebp
loop
rcl
out
aaa
lock
loop
cmp
shl
aas
fmull
loope
repnz
loop
cs
out
lret
cmp
cld
aam
ret
cli
movb
lret
sub
rol
repnz
out
imul
cmp
loopne
aas
repz
in
xchg
int
stc
call
out
in
lret
out
xor
cmp
int3
aaa
fcomip
and
ljmp
cli
out
xchg
fists
jmp
cmp
incb
aad
clc
mov
leave
jmp
leave
leave
rcr
cmp
idiv
jecxz,pt
out
loopne
xchg
icebp
cli
xchg
ret
in
imul
jmp
cli
in
fsubrp
adc
fcmovne
cmp
enter
stc
in
mov
loopne
out
aad
aam
into
cmp
out
sub
repz
cli
ljmp
fcmovb
jecxz
xor
bnd
into
ljmp
out
int
repz
loop
xchg
std
xchg
jmp
sti
out
sti
out
aas
repnz
cmp
call
std
in
mov
shl
aam
out
ljmp
sar
cmp
ret
rcl
dec
out
xchg
mov
sti
cli
out
shr
into
jmp
cli
sarb
sarl
ror
ror
ret
ret
into
lea
jecxz
int3
lock
repnz
hlt
fnstcw
shl
push
xchg
aas
call
test
xchg
xor
cs
icebp
loope
fcmovnbe
in
lret
ret
shl
out
aad
aam
cmp
fcmovnbe
add
out
sti
xchg
cmc
fldl2t
movb
lea
shl
div
shr
iret
lret
cmp
cmp
xrelease
sar
mov
ljmp
cld
int
fcmovbe
ret
loope
fadd
mov
xlat
mov
out
mov
xor
rcr
ror
repz
clc
cmp
inc
jecxz
aam
mov
stc
adc
add
jmp
aad
ret
int
fistpl
test
lret
fistpll
fiaddl
jle
filds
hlt
xchg
loope
mul
test
or
adc
test
cmc
div
cld
ljmp
cmc
addb
xor
idiv
int3
cmp
cli
sar
mov
mov
out
call
out
out
out
jmp
out
shr
fsubr
xor
in
loopne
icebp
aad
ret
rcr
mov
mov
cmp
jmp
rcl
hlt
cmp
int3
cli
ret
idiv
cmp
or
std
mov
aad
neg
xor
aaa
enter
cli
lock
fdivr
call
dec
cld
loopne
icebp
jecxz
int3
shlb
xor
fsubp
ret
sti
in
jmp
popl
lea
cmp
cli
testl
loope
filds
out
jmp
std
jmp
not
cmp
cmp
into
jmp
out
fistpll
cmp
loop
mov
sub
xchg
rol
icebp
xor
ljmp
aas
loopne
test
test
out
out
in
ljmp
jmp
cmc
fidivl
xor
ror
fstp
clc
std
rol
lret
fmuls
out
xchg
xor
out
test
std
f2xm1
cmp
call
in
fstp
icebp
int
fldl
fldln2
cmp
in
in
shr
ret
ret
loope
and
loopne
movl
neg
lock
in
not
fdiv
cmp
rcl
add
lret
lea
sti
xchg
aam
call
int3
fmul
ljmp
ds
in
vpandn
stc
ret
in
in
xchg
loope
fprem1
xor
cmp
sti
cmp
lret
icebp
repz
fdiv
cld
xlat
cld
test
mov
mov
loop
iret
into
repz
sar
xlat
jmp
lret
addl
fcomip
ljmp
iret
xor
xor
fdivrp
out
ss
xchg
shl
cmc
test
mov
jmp
xor
enter
out
int
repz
sar
ror
cmc
nop
lock
fdivrl
not
cmp
jmp
ret
fcmovnb
mov
sbb
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
pop
and
outsb
mov
jg
fiaddl
jle
cmc
jmp
test
int3
test
loope
fcom
in
hlt
fcmovu
fld
cmpl
aas
rorb
or
hlt
aad
jmp
out
repz
fmulp
loop
aas
rcl
xor
in
in
in
out
fisttpll
xor
xor
sti
div
out
cmp
repz
aas
loope
in
jmp
xlat
fxch
ror
jmp
aas
lret
call
repz
and
cmpb
sti
fcmovnu
stc
out
lds
xchg
aaa
jecxz
fxam
iret
in
rcl
cmp
sar
fmull
jmp
xchg
int3
in
xor
xor
jmp
cmp
repnz
loop
cmp
fmul
lds
aam
mov
clc
aaa
fcmovbe
lret
idiv
repz
cld
mov
ret
fcmovne
out
mov
rol
jmp
xor
lret
shl
lret
cmp
test
enter
jecxz
loopne
test
repnz
hlt
xlat
fstp
jmp
hlt
repz
loope
addl
fucomp
sti
roll
ror
sti
out
clc
jmp
aad
loopne
xchg
and
mov
int
test
repnz
xor
lock
cmp
ss
hlt
ds
jecxz
faddl
lret
lret
test
shl
clc
repnz
ljmp
ret
aad
out
mov
hlt
lock
out
cmp
loope
neg
loope
mul
xlat
xchg
out
fmull
fcom
cmp
jmp
xor
out
rcr
fcmovbe
mov
jmp
std
in
ljmp
xlat
cmp
fidivrl
sar
loope
sti
out
xchg
ret
aad
lret
xor
test
rol
incb
neg
and
call
out
jmp
lock
ds
ds
rol
cmp
movl
ss
jmp
jmp
ljmp
hlt
std
call
loopne
in
leave
loope
call
lock
fsubr
test
jecxz
mov
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
sar
jecxz
enter
neg
cmp
out
ljmp
out
iret
shlb
in
jmp
mov
xchg
decb
loop
aaa
into
out
lret
cmp
hlt
int3
cmc
cmp
xlat
cmc
std
xchg
fcoml
jmp
lock
lret
cmc
cmp
hlt
in
in
into
cmc
shl
cmpb
neg
xchg
fcoml
cli
test
out
xlat
aam
jecxz
in
hlt
loope
ror
xchg
fsub
rorl
out
jmp
int
shl
iret
int
ret
in
sar
out
nop
jmp
loop
int3
xchg
xchg
ret
in
stc
cmp
cmp
repnz
sbb
rol
addl
hlt
mov
ret
fld
leave
aam
aad
aad
dec
mov
cmp
into
loopne
int
fsubp
ret
in
ror
cmp
mul
out
lock
out
mov
fiaddl
in
shr
icebp
xor
out
ljmp
jecxz
in
out
or
ljmp
mov
fucomp
ljmp
icebp
in
sarb
shl
repnz
cmp
loopne
jmp
out
repnz
out
int
cmc
in
xor
aad
shr
repz
cmp
rol
loop
xlat
leave
out
nop
xchg
xchg
mov
mov
out
jmp
fnstenv
out
sar
cmp
sti
shl
fsubr
in
lret
out
roll
ror
stc
fsqrt
aad
hlt
cmp
int3
cmpb
or
cld
cli
jecxz
loope
xchg
fsubp
cmc
out
in
stc
lock
aam
xor
in
fst
in
mov
addb
std
ljmp
out
into
leave
stc
cli
ljmp
call
testb
xchg
xlat
xor
in
cmp
aam
int
sar
sti
ffreep
repz
jmp
cli
test
enter
into
lret
mov
sub
lret
ror
fucomi
jmp
std
aad
shl
les
ret
iret
xchg
xchg
lea
jmp
cli
sar
ror
int3
cmc
iret
fmul
not
iret
fucomp
out
fcmove
in
stc
fucom
into
jecxz
lock
loopne
ret
repz
cmp
ds
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
cmpsb
fdivs
ljmp
jle
xlat
clc
test
fidivrs
in
loope
call
xor
in
cmp
aam
lret
loopne
into
xlat
loopne
rcl
fsubp
fld
or
fiadds
lret
call
fdivr
repnz
test
add
out
int
clc
loope
xchg
adc
ljmp
out
icebp
in
ffree
call
in
fsub
leave
lret
jecxz
lret
cs
leave
sub
aad
cmp
icebp
shl
ret
shl
frndint
loope
cld
sbb
in
mov
inc
stc
shr
fcomi
ljmp
int
fmulp
and
ljmp
into
into
int
rol
shr
lret
cmp
cmp
jmp
cmp
rolb
sti
mov
sub
icebp
cli
hlt
fcmovu
jmp
cmp
std
cli
jmp
test
jmp
std
shl
into
out
out
in
sti
fcmovu
cmp
rol
xlat
clc
fdivr
ret
in
mov
in
cli
rcr
cmc
mov
loope
lret
out
cmc
out
jmp
ss
cmp
shl
jecxz
fdivr
call
xor
aad
loop
sti
int
lret
aaa
xor
loope
shl
loope
repz
into
out
xchg
lret
xchg
ror
cmp
cmp
in
repnz
cmp
cmc
sub
or
ljmp
hlt
cld
xor
repnz
ror
cmp
hlt
out
ret
hlt
sub
int
mov
not
vpaddd
int
repz
test
out
loope
ljmp
int3
in
iret
jmp
in
shl
shlb
cli
roll
cld
loope
cld
mov
xchg
in
ret
xlat
into
in
cld
fcmovne
cmp
shl
ret
cmp
jmp
test
lret
repnz
xor
shr
ss
jmp
cmp
cmc
adc
cmp
std
mov
lret
cmc
into
xor
iret
fcomip
and
fcomip
fisttpll
xchg
faddl
loope
das
rol
out
leave
fidivrl
cmp
rol
rol
iret
decb
fadds
xchg
into
ljmp
hlt
xor
xor
add
jmp
int3
int
loope
sub
call
jle
int
iret
in
fcmovnbe
fiadds
clc
call
orl
ret
sti
call
loop
test
sub
loopne
and
xchg
into
xor
stc
xlat
cmp
cmp
fdivl
repz
cli
cmp
jecxz
mov
loopne
out
ror
jmp
aam
sti
xor
ds
fdivrp
fdiv
shl
call
cmp
loopne
icebp
out
repz
out
out
sar
sti
int
in
cld
out
icebp
fmuls
fisttpll
out
rol
in
cmp
ss
lret
sti
mul
filds
hlt
in
lret
sti
loopne
out
not
out
repz
cmp
icebp
enter
stc
aam
icebp
std
aad
std
test
enter
call
mov
leave
aaa
sarl
loope
lock
clc
fld1
loop
fiadds
call
idiv
ss
roll
xchg
mov
faddp
out
in
loop
leave
xchg
rcl
repz
cmp
lock
fsubr
lret
aad
iret
add
fadds
out
in
mov
xchg
aaa
cmp
cmp
cli
cld
repnz
stc
test
out
out
loopne
call
loope
mov
or
out
xor
lock
fyl2x
ss
in
lock
jmp
mov
repz
iret
rcl
aas
icebp
in
loope
jecxz
sar
rcl
std
orb
roll
repnz
xor
xor
rcl
cmp
std
test
repz
stc
xor
mov
or
orl
cmp
cli
aaa
aaa
lret
in
cmp
aad
fcmovb
shl
lret
mov
fcmovu
fsub
loop
out
repnz
xor
std
fcmove
cmp
clc
sar
stc
movb
mov
movl
sti
cmp
cli
fcom
ror
cmc
and
repnz
clc
aad
mov
in
xor
into
jecxz
xlat
das
fdivrs
cmp
rcr
test
xchg
rorl
lret
lret
sub
xor
aad
into
cli
lret
cmpl
fsubr
and
in
filds
lock
fdivs
xor
stc
jmp
enter
fstp
int3
shl
scas
imul
pop
adc
fiaddl
jle
cmp
das
repnz
jmp
loope
rcr
sbb
lret
fcomi
addl
icebp
imul
repnz
ss
cmpb
in
fcmove
out
mov
xchg
mov
aad
ljmp
loope
ret
aas
call
cmp
mov
leave
int3
icebp
in
cmp
fmul
ds
repnz
flds
fmulp
lock
or
sub
ljmp
xlat
xlat
lock
shl
fadds
test
loope
imul
sub
ss
loop
sarb
aad
fadd
fsubp
enter
in
icebp
xchg
std
xchg
jmp
xlat
leave
lret
into
ret
aam
jecxz
mov
loopne
nop
int
iret
in
loope
sub
out
lock
lret
xor
xor
cmp
cmp
xchg
std
sarl
in
fcmovne
in
mov
xchg
aaa
lret
cmp
xlat
ror
sarb
fcmovbe
aas
shl
repz
rcr
loope
in
out
sbb
cli
rcr
in
in
test
xor
aam
into
out
fdivr
out
shl
stc
std
out
inc
rol
cld
int
ljmp
into
loope
in
jmp
fcom
fiaddl
movb
test
fstp
into
icebp
lret
jmp
ret
enter
cmp
iret
fdiv
fcmovbe
cmp
mov
jmp
not
xor
lret
leave
out
in
aad
rcr
ret
loop
xchg
lret
lret
enter
in
jmp
fcom
aam
repz
shr
out
loop
fsubr
xchg
ror
int
repz
cmp
hlt
out
jmp
sar
test
mov
mul
std
cld
mov
icebp
mov
shl
enter
rol
rcr
cli
repnz
cmp
fsub
rol
sar
ret
les
xchg
addb
fcomi
fdiv
fnstsw
cmp
icebp
sbb
lret
in
fstp
xchg
in
in
lock
ss
out
lock
xor
cmp
ss
in
jecxz
enter
int3
mov
addl
icebp
sar
leave
in
leave
addl
mov
aam
imul
jmp
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
xor
repz
lret
out
fmulp
cli
stc
shl
cld
clc
in
xor
jmp
mov
fisttpll
xor
ss
repnz
xor
ffreep
stc
dec
aad
clc
sbb
lret
into
int3
lret
ljmp
fnstsw
enter
fmul
aas
fsubr
flds
clc
fcomp
iret
ljmp
out
in
fucom
loopne
shl
addb
test
lret
mov
rcr
xchg
xchg
sar
repnz
stc
in
xlat
xor
bnd
ljmp
lock
enter
lret
leave
fcmovu
rcl
ret
iret
cmp
jmp
test
fimull
call
shr
shr
xlat
inc
xor
sbb
out
fsub
filds
jmp
int
orb
xor
mul
shl
jecxz
xlat
fsubp
repnz
fxch
in
out
orl
fsub
fdivr
cld
stc
fldl
std
mov
mov
loopne
xchg
in
lret
xlat
lds
clc
sti
cmp
rcl
lock
fcmovnb
loop
fucomip
idiv
cmp
jmp
xor
int
out
fstp
int3
cmp
repz
out
aam
roll
lock
jmp
aam
out
out
in
sti
in
cli
xlat
cli
repz
ljmp
jecxz
out
xor
enter
cli
ss
loop
lock
cmp
addb
test
int3
aad
hlt
in
cld
leave
cmp
xor
out
aad
enter
int3
xchg
orl
leave
hlt
rcl
cmp
sarl
ret
test
xlat
lret
stc
testb
out
loope
ret
in
aam
hlt
icebp
cmp
xlat
in
sar
enter
cli
in
sti
repnz
lock
loopne
out
aaa
stc
xor
leave
hlt
icebp
fcomi
loop
mov
fcomi
loop
les
fcomi
mov
leave
icebp
sti
in
out
enter
cmc
mov
cmp
jecxz
or
ljmp
in
ss
in
aas
out
cmp
xchg
fsubrp
mov
dec
mov
mov
sub
cmp
mov
jbe
jmp
lret
ret
in
call
arpl
movsb
pop
out
jg
fiaddl
jle
lret
jecxz
out
leave
test
xor
aas
out
cli
out
lret
cli
out
fmul
int3
jmp
clc
cmp
sub
cmp
rcl
rorl
call
in
jmp
int
aas
shr
hlt
cld
test
in
cld
out
test
add
iret
repz
hlt
sti
rcl
mul
fst
fistpll
shr
ret
fdivrp
leave
loop
int
iret
fisttpll
jecxz
stc
loope
out
repnz
add
jmp
xchg
aam
shl
ss
das
cmp
fnstsw
iret
in
ret
jecxz
ret
enter
std
cld
mov
in
int3
in
cmp
xor
call
in
fdiv
in
icebp
in
in
jmp
test
cli
loop
icebp
test
xlat
rol
rol
not
cmp
fadd
out
ret
std
in
loopne
lret
shl
shl
hlt
ret
loop
shlb
aad
xor
xor
sarl
shl
mov
or
hlt
lret
push
repnz
int3
leave
std
cmp
cmp
icebp
cmp
out
out
repz
fcmovnu
sub
in
xchg
test
int3
cld
rcr
div
sar
cmc
ret
cld
jmp
out
std
mov
icebp
loop
shl
enter
jmp
out
cmp
fldlg2
clc
rorb
ret
cmp
nop
fsub
aam
nop
ss
xor
idiv
enter
fcmovnu
sarb
xlat
add
enter
ljmp
out
out
lock
les
fsubr
std
fstp
test
addl
out
and
call
fcmovnb
cmp
fsub
test
lret
out
fadd
loop
int3
mov
out
out
clc
rcl
cmp
loope
loop
aas
fdiv
mov
aas
loop
int3
leave
icebp
test
out
fcmovbe
cmc
out
aaa
xor
in
cmp
cmp
fcmovnbe
fadd
jmp
test
rcl
int
out
in
ret
in
lret
out
int3
cmp
loope
jmp
loopne
out
into
out
into
loop
lret
enter
not
cmc
std
rcr
in
std
shl
call
sub
loop
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
jmp
jp
bnd
fiaddl
jle
loop
addb
hlt
xor
cld
cmp
ret
aad
xchg
call
int
call
lock
ljmp
test
cld
xlat
fucom
add
out
mov
icebp
rol
xor
out
out
jmp
cld
ffree
clc
rol
cmc
cmp
loopne
fimull
in
into
ljmp
fidivrs
cmp
cld
flds
fdivr
idiv
mov
clc
lret
std
xchg
call
out
in
cmp
loopne
jecxz
in
iret
add
mov
mov
int
sub
cmp
fst
shl
aas
jmp
fcmovnu
in
icebp
cld
out
sub
cld
jmp
addl
mov
into
mov
call
out
repz
cmp
out
cmp
icebp
ds
test
std
loop
xchg
rcr
leave
cmp
call
mul
add
fiaddl
xchg
fmull
leave
aaa
cmp
in
cmp
repz
out
fstp
hlt
cmc
enter
xor
fucomi
filds
in
into
xor
repnz
rcr
out
sarl
sti
cmc
enter
stc
loope
int3
call
mov
int3
lock
faddp
rorl
in
enter
in
out
rcl
shr
icebp
cmc
fcmovnbe
rol
loope
cmp
addb
cli
lock
repz
out
std
fdivp
aam
fstp
clc
fadds
cmc
enter
jmp
iret
in
loope
f2xm1
ror
fcmovnbe
fdivrl
cmp
loopne
sbb
rol
jecxz
mov
faddp
adcl
cmc
xor
repnz
ffreep
call
fld
repnz
ret
mov
test
fdivrp
jecxz
lock
cmp
frstpm(287
cmp
fcmovnbe
iret
into
out
iret
icebp
fistpll
cli
or
lds
lret
and
in
into
out
lret
jmp
fchs
jecxz
loope
sub
ror
out
call
jmp
xor
cmp
xor
loopne
std
cmp
test
faddp
repnz
add
add
xlat
mov
rcr
xlat
sub
test
fiaddl
jle
lret
testl
clc
enter
in
lret
loope
ret
shl
loope
ljmp
lret
hlt
imul
rcl
repz
repz
lret
int3
aas
stc
mul
rolb
fucomp
cld
cmc
call
divl
aaa
into
sarb
fdiv
adc
out
rcr
rol
xchg
sti
xchg
test
iret
jmp
cmp
enter
in
iret
fdivrs
mov
fld1
jmp
ljmp
iret
shl
out
xlat
sarl
into
aam
stc
lock
fucomip
lret
in
in
cmc
test
out
xor
in
lock
cmp
clc
jecxz
std
cli
fincstp
xchg
mov
faddl
hlt
jmp
ror
leave
call
repz
shlb
fildl
out
iret
nop
in
mov
jmp
jmp
leave
cmc
shl
int3
aam
out
cmc
test
aad
jmp
out
sub
xor
out
jmp
fcmovu
ljmp
test
fdivp
std
ret
xor
lock
cld
out
lock
xor
ror
cld
std
fdivrl
sar
hlt
int3
sar
and
hlt
orl
out
aad
rol
cmp
cmp
cmp
addl
leave
in
lret
int
fimuls
int3
int3
shl
int3
jmp
in
cmp
into
fdivp
clc
rcl
cli
shl
xlat
leave
leave
out
fcmovne
or
div
lock
imul
aad
ljmp
xlat
cmc
xlat
out
mov
stc
in
loopne
out
ret
lret
leave
ljmp
ljmp
into
in
xchg
adc
out
xor
jmp
xorl
xchg
nop
std
nop
out
lret
nop
xchg
test
aaa
lock
lret
stc
fincstp
ftst
fcmovnb
sar
ret
stc
out
in
fcomip
shr
shl
xlat
xor
cmp
aas
lret
repnz
fsubr
xchg
ret
imul
fsubr
or
into
loopne
rcr
fst
cmp
sarl
ret
xlat
shr
div
mov
iret
mov
std
jecxz
aad
cmp
jmp
std
rcl
cmp
jmp
lret
xlat
aas
rcr
int
in
push
push
xchg
jo
outsb
idivb
fiaddl
jle
movb
out
out
jecxz
xchg
mov
adc
xor
icebp
vpsubd
into
sarl
aas
not
in
lea
orb
rcl
call
loopne
ret
iret
ret
test
cmp
call
mul
not
iret
in
jmp
call
or
loopne
shl
fndisi(8087
in
out
xchg
xchg
ror
jecxz
rcl
icebp
fdivrl
aas
out
rcr
lock
shl
aam
incb
shl
rol
sub
ss
cmp
clc
aaa
ljmp
ds
ffreep
mov
fucom
lock
mov
repz
lret
idiv
shl
xchg
mov
stc
rcr
fcmovb
fisttps
and
in
ljmp
shr
cmc
sar
lock
ret
mov
loop
ror
out
cmp
shl
aaa
out
test
aad
sti
enter
aad
loop
xchg
test
mov
lock
int
cmp
out
sar
aam
in
not
rol
in
xlat
xchg
sti
mov
int
orl
xor
lock
cmp
cmp
in
mul
clc
ds
loopne
fmull
mov
out
lea
cmp
imul
jmp
hlt
cli
out
enter
ljmp
orl
cmp
or
icebp
sbb
in
mov
mov
xchg
into
fucomip
in
xlat
lret
cs
ds
cli
fsubr
loope
out
rcl
out
xlat
leave
or
cli
int3
mov
in
loope
in
int
shr
cmp
repz
rcr
repz
in
jecxz
lea
cs
call
out
int3
sbb
repnz
in
fsubp
lret
into
adc
nop
out
ss
out
idiv
cmpb
cli
rcl
clc
cld
cli
rcr
fildl
loop
fstl
lret
xlat
fadd
fcmovnbe
iret
loope
cmp
call
lock
ljmp
cld
cli
rcl
jmp
cld
fcmovb
repnz
leave
fidivrl
mov
out
lret
aam
sub
das
out
in
leave
cmc
stc
fidivrl
lret
add
jmp
jmp
lret
fst
mov
addr16
mov
stc
jg
fiaddl
jle
neg
sbb
sar
call
loop
rcr
test
addl
xlat
ss
xor
fstpt
repz
cld
rol
in
clc
jmp
lock
in
shl
cli
loop
cmp
iret
cmp
lret
ret
ret
into
incl
std
into
lret
loope
mov
mov
rcl
aam
fcomp
cmp
iret
fprem
iret
addb
sti
int
clc
iret
int
in
cmc
rcr
cmp
fcmovnbe
in
cmp
lret
ds
repz
loop
ret
fcos
fcmovnu
out
mov
cli
jmp
cmp
shl
loope
lock
xchg
mov
sti
leave
in
adcl
cmp
out
push
xlat
div
int
in
loopne
out
loop
int
shr
lret
mov
xchg
das
shl
ret
cmc
out
call
idiv
fcomip
add
call
in
das
int
ljmp
aad
hlt
shl
hlt
inc
loope
frndint
cld
fcmovnu
and
aam
xor
ss
jmp
clc
lock
repz
cli
std
stc
call
ljmp
loop
xor
cmp
ds
jecxz
fincstp
fisttps
fmul
lock
cmc
cmp
in
out
jmp
stc
sti
cmp
loope
incl
call
fmulp
rorl
in
clc
cld
std
ds
lret
lock
out
fneni(8087
clc
out
in
add
xchg
lret
rol
repnz
lret
stc
aas
cmc
cmpb
aaa
imul
loopne
rcl
std
int3
out
lret
test
enter
adc
cmp
testl
xchg
ljmp
xor
xor
cmp
out
sti
repz
leave
in
loope
add
cld
loop
mov
cli
xor
icebp
leave
sar
cmp
icebp
roll
sar
test
icebp
aaa
lock
test
leave
std
cmp
stc
roll
leave
cli
mov
test
call
fcmovne
jmp
xchg
ret
mul
test
out
fsub
fimull
xor
hlt
fdiv
xlat
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
cltd
es
cmpsb
sti
jg
fiaddl
jle
rcr
rcr
clc
cmc
cmp
fimull
dec
loopne
iret
mov
cmp
aaa
ljmp
xor
fcmove
out
fmull
fmull
repz
out
repz
loope
into
fcmovu
shl
xor
sti
xchg
xchg
xchg
in
or
hlt
cmp
jmp
sti
cmp
aas
loop
ret
in
loopne
and
mov
xchg
test
lret
xor
repz
or
into
ds
hlt
out
ljmp
out
call
out
in
ljmp
adc
in
fisttpl
std
lds
out
shl
cmp
iret
lock
out
lock
mul
fcmovnu
call
into
and
into
xchg
test
aad
fsubr
cld
cld
fistpll
test
testb
rcl
test
jmp
in
cmp
in
aam
ds
cmp
xchg
leave
test
in
out
ljmp
xor
into
call
std
loop
std
loope
mov
fiaddl
jmp
ljmp
lock
rcr
loopne
fdivr
jmp
xchg
lret
cld
call
rolb
leave
jecxz
lret
fnsave
ds
cmp
mov
mov
addb
out
loope
loopne
out
loope
int
shl
test
shl
fcomi
rol
std
clc
fucom
loopne
mov
rclb
fnstenv
int3
xor
repnz
int
stc
ds
repnz
fmull
xchg
ljmp
shll
cmp
jmp
cli
in
in
ljmp
mov
loopne
ret
les
cmp
loop
int3
roll
cld
ret
xchg
loope
loop
cmp
rcl
cmp
fmulp
repz
out
repz
faddl
mov
rolb
ljmp
xlat
cmp
sti
clc
fadd
fadds
mov
nop
mov
loop
clc
ret
cmp
shr
into
aad
into
repnz
leave
jecxz
cli
fmul
leave
call
jecxz
in
ss
mov
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
insb
scas
add
jg
fiaddl
jle
jmp
aam
stc
in
iret
stc
clc
leave
in
sbb
std
leave
repz
stc
fmul
loop
xor
sar
fisttpll
fcomi
out
std
xchg
repz
in
out
cmp
loopne
lret
rcl
loopne
inc
fdivp
enter
stc
mul
decb
aas
lret
lock
fldl2e
out
repnz
fidivrs
into
cld
aad
mov
incb
in
test
in
into
xlat
aam
lock
ljmp
jmp
int3
test
lret
flds
loope
fcmove
vpor
hlt
cld
rcl
fsubr
ljmp
rcr
xchg
aad
out
icebp
sar
cmp
xlat
fildl
cld
fucomi
fsub
call
lret
and
xchg
rcl
xor
ror
jmp
lret
in
ljmp
test
cmp
mov
icebp
rol
in
fsincos
cs
cmp
test
jecxz
mov
mov
mov
cmp
imul
aaa
ljmp
test
fadd
hlt
clc
jmp
in
sbb
loope
clc
cli
fdivs
aaa
ljmp
aad
in
xlat
mov
mul
mov
loopne
call
xor
cli
cmp
loopne
fstp
loope
ret
rcr
call
dec
icebp
in
mov
xor
fmul
xor
shr
les
movl
jmp
shl
xor
aam
fdiv
aaa
flds
in
ljmp
iret
in
in
push
das
xor
cmp
in
cli
jmp
cli
adc
xchg
fists
xor
in
xor
div
aas
repz
repnz
test
mov
shr
jmp
xor
int3
enter
loope
cmp
cli
fadd
aam
xchg
repnz
fsub
rcr
into
lret
in
imul
loop
into
test
cmc
fcmovnu
aam
mov
loope
or
jmp
shll
lock
idivl
lret
fmul
stc
or
idiv
cli
jmp
xchg
loope
orb
orl
add
leave
aas
ret
vpcmpeqw
mov
add
fiaddl
jle
jecxz
ret
out
enter
out
fcmovu
cmp
loop
fimull
fdivrp
repnz
lret
add
jmp
div
adc
icebp
clc
cmp
imul
fmul
sti
mov
aad
iret
xor
or
aas
cmp
out
call
loopne
cld
xchg
orb
jmp
cmp
cmp
fdiv
fdiv
leave
loop
std
fsubr
jecxz
adcl
cli
repz
sbb
cld
fdivr
fcomi
shl
jmp
popl
rorl
ret
test
fcomi
cmp
cmp
fadd
ret
test
leave
lret
xchg
orb
lret
lret
leave
out
cmp
stc
fstpt
cli
std
int3
test
out
jmp
repnz
in
fsub
xor
clc
lock
ss
xlat
out
cmc
xlat
repnz
enter
jmp
test
in
in
xchg
test
aaa
out
aas
dec
fucom
adc
add
filds
call
out
out
aam
cli
cld
test
std
enter
mul
iret
out
jecxz
lret
shl
idiv
div
cmp
xor
fnstsw
out
aam
std
jecxz
mov
jmp
ror
ljmp
lock
cld
test
mov
fcmovnbe
sti
and
repz
out
shl
in
out
int3
jmp
out
in
cmp
fcmovnb
fcmovu
loope
mul
hlt
leave
int3
loop
int
fisttps
loope
ret
cmp
lret
rcr
xlat
cmp
jecxz
sti
aad
rol
stc
clc
ljmp
loop
fcomi
cld
cmp
cmp
xlat
lret
loopne
xchg
xlat
idiv
cmc
leave
movb
jmp
xor
repz
aaa
into
jmp
sar
cli
fcomp
inc
cmc
ljmp
jecxz
aaa
sub
cmp
fcmovne
out
ljmp
xlat
cli
movb
out
rolb
lock
cmp
hlt
lret
fsubrp
fstp
addb
loope
addl
rcr
cmp
in
shr
loope
ret
and
ret
in
leave
int
call
add
add
ret
lret
ret
int
int3
int
adc
pop
adc
add
popl
int3
int
cmp
cmp
cmc
faddl
ret
in
mov
adc
in
lock
sarl
icebp
icebp
push
icebp
imul
div
aas
ret
ror
fucomi
iret
lock
jmp
loope
shl
test
fnstsw
rol
std
xchg
xlat
call
sub
fildl
clc
ret
clc
std
out
fucomi
cmp
fcmovnbe
shl
aad
ror
xlat
cli
mov
in
in
shlb
cmc
cmp
cmp
shl
loop
rorb
nop
xchg
cmc
clc
shl
in
out
sti
out
mul
adc
aam
sar
leave
out
loopne
mov
out
test
test
in
repz
into
cmp
cli
jecxz
sub
aam
loope
xor
int
into
jmp
test
xor
cmc
mov
jmp
fmull
jmp
sub
cmp
int3
hlt
cmc
iret
shl
sarb
loope
ret
in
mul
lret
lea
in
ljmp
xor
stc
incl
rcr
int3
jmp
fmul
out
or
mov
clc
int
repnz
fst
lret
cmp
out
lret
neg
in
sbb
enter
leave
int3
cld
hlt
in
xchg
lret
fidivl
out
fsincos
cmp
cmp
jecxz
sti
shl
fxch
xlat
lea
iret
loope
xchg
repnz
xor
leave
lock
out
clc
in
into
aas
shl
std
fld1
mov
xchg
in
xchg
repnz
cmp
das
cmp
fiaddl
shl
int3
clc
mov
xchg
mov
iret
addl
sti
hlt
out
cmp
loopne
shl
clc
mov
repz
testb
out
divb
in
lock
leave
sar
int
in
fdivrs
out
cmp
bnd
fcomi
shl
sub
lret
mov
xor
cmp
fildl
fildl
xchg
hlt
xchg
mov
cld
xor
call
shl
int
hlt
fmuls
mov
repnz
out
clc
mulx
cmp
fcmovnbe
cmp
loop
adc
cli
sar
jmp
add
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
in
cli
fstp
mov
repz
xor
into
fadds
test
cmp
mov
fimuls
xchg
iret
out
in
stc
jmp
out
into
out
aaa
sar
clc
fstp
aad
jecxz
mov
leave
xchg
orl
enter
leave
cld
aas
cmp
into
aad
cmp
repz
in
icebp
mov
mov
lock
out
int3
lret
in
mul
rcl
repz
mov
std
mov
shlb
xor
repz
iret
cli
ror
or
xlat
in
std
fisttps
fmull
xlat
das
call
stc
cld
aad
cmp
out
fldpi
sub
cli
repz
in
jmp
xor
out
loop
aam
enter
jecxz
enter
ljmp
cli
std
xor
into
in
ret
imul
rol
mov
lret
xchg
jmp
ret
xor
cmp
out
clc
xor
fistpll
jmp
fiadds
jecxz
test
into
xor
sarl
into
fninit
out
stc
leave
std
cli
mov
out
cli
jmp
in
repz
jmp
cmp
xor
fdivrp
div
fcomi
lea
repnz
mov
ljmp
enter
cmp
lret
cli
in
cmp
loop
out
out
ret
cld
icebp
xchg
xchg
out
rcl
repnz
cli
repz
out
sub
add
ret
hlt
test
fiaddl
out
cmp
out
in
cmp
ror
out
stc
aam
test
inc
test
sti
lret
std
sti
test
jecxz
into
shl
xor
lret
shlb
xor
int3
fcomi
sbb
shr
mov
loope
jmp
fsubp
out
xor
ss
out
in
lret
loopne
shl
cmp
sar
test
loope
lret
ffreep
cli
xchg
in
fsub
mov
sub
xor
xor
in
cmp
loope
xlat
in
xor
in
xchg
movb
out
lret
repz
out
clc
fdivr
fsub
mov
in
jecxz
lret
test
nop
out
jmp
cli
enter
dec
not
aas
iret
out
jecxz
xchg
xor
mov
mov
jmp
into
aam
fmul
dec
cmp
mov
fiaddl
jle
fsubr
jecxz
clc
clc
repnz
sub
cs
sti
stc
roll
shl
leave
mov
faddl
out
int
clc
aad
cmp
neg
call
shl
out
lret
int3
testl
ljmp
xor
fcomp
rol
out
ret
std
out
stc
fcmovnu
jmp
repz
enter
xor
aad
fsub
loopne
repnz
loop
mov
fcmovb
xchg
out
iret
int
ss
xor
out
cmp
loop
aam
icebp
ret
shr
ljmp
xchg
xchg
int
les
cmp
out
xor
cmp
cmp
imul
ror
std
in
test
in
mov
repnz
cmc
aad
sub
icebp
ljmp
out
inc
out
rcl
in
cli
mov
icebp
adcl
out
std
lock
call
mov
into
repnz
in
xor
out
ror
sarb
mov
ret
cld
jecxz
mov
icebp
in
ljmp
lret
fcmovne
fcmovnbe
rolb
not
in
mov
std
mov
fisttpl
repnz
stc
fdivr
repnz
xor
repz
hlt
cli
clc
xchg
loop
loop
std
iret
sti
lock
xchg
repnz
clc
aam
icebp
hlt
neg
out
repz
rcl
xlat
xlat
cmp
test
fbstp
aad
lock
lock
ffree
shl
faddp
jmp
jmp
mov
add
jmp
ror
xlat
std
sbb
int
test
mov
jmp
cld
out
loopne
repnz
jecxz
leave
cmp
cmp
cmp
loopne
and
mov
out
jmp
into
in
repz
shll
out
xlat
jmp
stc
int
clc
aam
out
ret
cld
cmc
mul
mov
in
xchg
xchg
ljmp
in
rcr
cmp
aad
icebp
out
test
lock
rolb
clc
sub
cmp
fcomi
in
int
lock
incl
loope
xchg
in
lret
sub
lock
sti
cmp
loopne
shl
xorb
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
shll
dec
mov
fiaddl
jle
cmp
aad
lea
lret
call
idiv
ss
aaa
in
int
aas
cmc
icebp
out
fld
ret
enter
incb
mov
out
stc
ljmp
clc
fiaddl
enter
loopne
leave
lret
repnz
xchg
enter
in
shl
sti
sti
fstp
cmp
movl
jmp
lock
jmp
loop
out
repnz
cmp
std
int3
ret
hlt
rcl
xchg
xor
fcmovu
mov
in
in
cli
cmp
lret
out
loop
cli
iret
xchg
loope
cmp
leave
out
test
loop
nop
in
xor
jmp
lock
lock
roll
jecxz
cmc
addb
incl
loope
clc
ss
jmp
test
mul
rolb
in
mov
leave
sti
iret
loop
mul
jmp
out
lret
cmc
jmp
fdivr
cld
fucomp
ds
testb
test
sub
fmul
int3
aas
test
cmc
sarb
adc
vpsrad
jmp
enter
enter
cmc
into
loopne
cmp
cmp
clc
fsub
fcom
fisttpll
out
icebp
xchg
xchg
into
leave
fincstp
shl
cmp
fdivr
jmp
repz
test
enter
in
call
clc
das
rcl
sarl
sar
aad
lds
fmul
loopne
test
out
repnz
enter
std
sbb
fucompp
sti
xlat
test
or
addb
aam
aam
aaa
stc
cmp
repnz
repz
repz
fimull
mov
lock
ljmp
sti
ret
loop
in
xlat
jmp
mov
mov
ljmp
aad
shl
shr
fadd
in
rcr
mov
out
loope
jecxz
lock
cmc
shr
out
rolb
clc
in
loopne
lret
loope
int3
hlt
mov
loopne
leave
into
out
ljmp
int
lock
hlt
jecxz
test
ljmp
xor
ret
cmp
rcl
cmp
fiaddl
push
in
jmp
ror
rcl
stos
sub
insl
jbe
jg
sub
jle
ret
jmp
enter
fmul
leave
mov
xchg
rol
clc
aad
ds
xlat
adc
out
orb
cld
lret
icebp
cld
aam
xor
repnz
idivl
int3
shl
rcl
incb
in
loopne
out
leave
fimuls
cmp
cmp
aas
iret
cmp
aad
loop
enter
or
in
rolb
cmp
int3
out
aad
iret
sti
rcl
out
rcr
ret
jmp
loopne
out
sti
int
xchg
fadd
xlat
fdivr
sti
iret
cmp
aaa
loope
jmp
xchg
loope
in
int3
xor
int
xor
icebp
cmc
cmp
out
in
ret
enter
mov
shr
roll
fdivs
lock
cmp
cli
repz
fld
cmc
hlt
call
stc
leave
decl
int
out
stc
icebp
int
iret
fcmovne
repnz
fsin
aad
ret
stc
repz
call
in
ljmp
cmp
into
cmp
in
adc
out
stc
out
neg
cld
xchg
aad
leave
mov
xor
out
out
hlt
sarl
jmp
and
xor
loop
jmp
mov
in
cmp
fprem
out
cld
imul
shr
and
enter
fxch
test
mov
nop
xchg
call
out
xor
ds
fidivl
out
aad
roll
sti
shr
repnz
ss
shl
icebp
into
cmp
addb
loop
fdivrp
fildl
xchg
repz
rcr
std
aas
std
cmc
addb
aam
cmc
mov
mov
out
repz
hlt
out
leave
into
lret
fcmovbe
rcr
test
ret
leave
loope
sbb
adcl
aam
stc
aas
out
idiv
test
out
cli
loope
fiadds
iret
fsubp
fldcw
lret
aaa
vpaddq
icebp
fucomp
cmp
in
mul
enter
call
out
aad
ror
jmp
leave
fdivr
idivb
hlt
repz
jecxz
fdiv
out
xchg
stc
fildl
loop
cmp
xor
push
in
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
cmc
cmp
repz
mov
fld
fsubp
out
hlt
nop
int
out
out
out
jmp
cmp
dec
aam
std
lea
xchg
xchg
xor
call
int3
ss
sbb
ds
cld
incb
cld
fstl
xor
lret
cmp
ror
aam
xlat
neg
out
addb
lock
mov
xor
out
dec
ss
icebp
cmp
out
loope
fsub
cmp
std
xchg
fisttpl
into
mov
aam
adc
call
test
in
xchg
idiv
lock
int
iret
hlt
cmp
loop
cmp
cld
loope
faddl
xchg
fsubrp
xchg
loope
xor
fstpt
ret
repz
out
out
lret
mov
in
xor
jmp
fnstenv
cmp
ret
stc
fst
fsincos
ljmp
repz
xchg
out
in
in
xlat
rcr
cmp
adc
in
rol
jecxz
cmp
enter
shrl
xor
ljmp
int3
fadds
faddl
or
call
xor
jecxz
int
xor
faddl
fucompp
inc
fcmove
flds
into
jmp
sti
call
int3
sarb
test
sar
cli
test
in
test
xor
lock
cmp
call
into
not
cld
mov
ror
mov
rcl
ror
cs
lock
stc
icebp
in
fidivrs
testl
ret
mov
xchg
shrb
fxch
ss
cmp
out
repnz
aas
loop
std
cli
fsub
xlat
jecxz
dec
iret
int3
cli
addb
rcl
in
hlt
hlt
aam
cmc
cmp
in
out
repz
mov
cmc
test
xchg
icebp
fsub
ror
ljmp
cli
dec
xchg
jecxz
loope
cli
loopne
out
fstp
mov
mov
idivb
leave
cmp
aam
cli
idiv
test
fcmove
cli
ret
hlt
call
xchg
fisttps
in
int
scas
xlat
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
dec
cmp
bound
jle
int3
lret
stc
hlt
sti
int
sar
iret
and
cmc
xchg
std
ljmp
xchg
xchg
int3
xlat
icebp
into
fidivrl
std
lock
leave
cld
fldl
rcr
out
aam
ret
mov
hlt
mov
xor
xor
xor
sarl
out
loopne
out
in
lea
mov
loop
xor
hlt
int
leave
out
cli
clc
fdivrp
sbb
leave
fmuls
xchg
int3
jmp
jmp
enter
aaa
idivb
aaa
rol
clc
faddp
flds
lret
ljmp
sub
ror
in
cli
cmc
rcr
ret
in
aam
in
les
rcr
mov
loope
out
cmc
repz
roll
repnz
xchg
leave
mov
std
xchg
out
xor
out
in
xor
stc
fadd
shr
fcomip
xchg
fsubrp
loop
in
xchg
in
ljmp
call
loope
faddp
loop
cmc
fstp
lds
ljmp
ljmp
in
incl
loopne
cmc
fsubrp
clc
out
fisttpl
xchg
enter
bnd
sar
ret
cld
cmc
iret
iret
enter
call
xchg
iret
in
ss
fadd
fdivr
fdiv
int
fcom
xlat
in
aam
clc
cmp
lret
ljmp
in
shl
lock
cmp
ds
icebp
loop
cmp
imul
jecxz
out
xlat
sti
rcr
loope
loope
cs
aaa
fmul
lret
lret
loop
idiv
clc
xchg
orl
neg
divb
enter
jmp
rcr
out
out
addb
lock
xchg
adcb
fcmovbe
repz
std
lret
rol
incl
fstp
aad
loopne
iret
out
mov
mov
not
int
out
cmp
ret
out
neg
jecxz
clc
mov
sti
in
loop
imul
xor
int3
out
ss
sti
fucomi
loop
rcr
mov
mov
test
out
sti
xchg
mov
test
fldlg2
xor
xlat
cmp
hlt
iret
std
roll
jecxz
and
fucom
xchg
lea
add
add
rcl
fcmovne
fst
or
pop
cmp
xchg
jg
fiaddl
jle
xlat
cmc
imul
sub
aas
hlt
lret
xor
cmp
aam
int
lret
out
jmp
shr
into
aam
cmp
jmp
out
int
in
fdivr
iret
sar
aad
fadd
call
icebp
into
into
xchg
hlt
out
xor
xor
enter
cmc
std
cmpb
jecxz
fiaddl
test
ror
repnz
lret
cmp
loop
sti
xlat
out
rol
cli
fld1
mov
mov
lret
out
enter
out
repnz
in
enter
ret
mul
loop
stc
mov
loopne
rcr
adcl
fcmovnb
ljmp
aam
ds
out
mov
fistl
repz
in
cli
in
fmulp
ljmp
aas
test
aam
in
loope
out
xchg
xchg
jecxz
shr
cmp
leave
fdivp
lret
loope
cli
loopne
in
fdivr
ret
into
iret
mov
nop
mov
jecxz,pn
repnz
shl
std
hlt
loopne
int
cmp
sbb
fmul
out
loopne
jmp
lea
cmp
into
out
aad
cmp
lret
aas
shl
addb
dec
mov
mov
lock
rcr
cli
int3
shr
enter
fst
xchg
std
not
frstpm(287
stc
orl
cmp
repz
fcmove
jmp
testl
fisttps
xchg
out
xlat
loopne
lock
enter
hlt
cmp
rcr
shl
fildl
decl
ret
shll
iret
out
in
shr
int3
cmp
loop
repz
cli
test
mov
decb
iret
enter
neg
aad
fnstsw
xlat
bnd
mov
fcmovu
jmp
mov
out
sub
cmp
in
stc
mul
aam
loope
call
mov
cld
jmp
fucomip
sub
xor
dec
enter
ds
ffreep
mov
fcmove
ror
iret
ret
lret
enter
lret
icebp
shl
les
hlt
loope
fimull
mov
xchg
iret
iret
out
lret
fcmovnbe
xor
sti
in
hlt
out
cld
addl
stc
imul
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
das
lcall
jle
test
shlb
loop
out
cli
fxch
cmp
int3
fprem1
sbb
stc
ror
in
ljmp
ljmp
cmc
aam
aam
out
out
adc
ret
aad
cmc
aad
rorl
shl
in
test
rol
lock
std
out
fcomi
and
shl
fdiv
mov
out
leave
lret
aam
xchg
lock
sti
jmp
repnz
testb
out
mov
loope
rcr
int
in
into
into
enter
ljmp
aas
stc
test
test
in
fdiv
fxch
cld
int
lock
xor
jmp
out
xor
out
repz
into
cmc
icebp
fcmovu
sarb
xlat
cmp
lret
sar
mov
repnz
stc
hlt
in
lret
cmc
sub
rol
filds
int
ffree
ror
rolb
shl
out
lret
cmp
call
ret
ret
mov
loope
fldl
test
ret
lock
cmp
adc
fsub
faddp
loopne
inc
ret
sti
mov
aad
in
xor
cs
shl
fcmovne
ds
sar
xchg
flds
icebp
xchg
xchg
enter
shlb
cmp
enter
fnstenv
loope
rcl
test
mov
fmul
loopne
xchg
xchg
ficoms
sub
stc
in
aam
in
incl
hlt
ljmp
xchg
int3
iret
xchg
jmp
cs
fcomi
xlat
cmc
fdivrs
cmp
lret
std
in
rol
xchg
mov
loop
xchg
test
rcl
mul
in
sti
cmp
std
loopne
repz
ss
sti
testl
xchg
nop
shr
in
loope
out
fsubr
test
test
aam
mov
stc
ds
rolb
rcr
out
lret
out
icebp
int3
cmc
leave
icebp
fdivrl
ds
stc
test
rcr
mov
call
repz
icebp
cmp
xor
sbb
ljmp
out
into
aad
int3
aad
aaa
jecxz
xlat
call
clc
xchg
fiadds
in
incb
repz
int
cmc
out
loopne
sar
out
ret
test
loop
mov
in
lea
cmp
jbe
mov
mov
jmp
rcl
into
test
mov
les
imul
jle
add
test
out
rcll
jecxz
xor
in
xor
fcmovu
ffree
test
ljmp
xchg
shr
mov
out
call
jmp
rol
cli
shr
fadds
int3
in
jmp
sbb
nop
repz
ss
lock
cmp
lock
add
fsubp
rol
mov
int3
in
orb
into
xor
out
mov
sub
loop
cmp
ret
in
clc
sbb
xchg
out
imull
fnstenv
clc
ljmp
cmp
rcr
mov
loopne,pt
fstp
adcl
cmp
addl
dec
int3
loope
cld
out
repnz
out
shl
in
fldl2e
loopne
loope
int3
cmp
les
std
loope
test
shr
xor
cmp
clc
lret
sarb
orl
test
loopne
out
lock
icebp
aam
lock
sbb
cmp
fst
mov
iret
mov
test
xchg
roll
fcmovne
fnstenv
cmp
add
cli
shl
fimuls
ror
int3
into
incl
fdivr
fcomp
cmp
stc
std
lret
or
loopne
cli
loopne
cld
jmp
mov
xor
fldz
cmp
bnd
cld
loopne
fcmovnb
xchg
mov
loopne
cld
loopne
xchg
shl
das
fcmovu
icebp
in
out
cmp
std
loope
in
and
mul
cmp
out
out
imull
lret
ror
loope
sbb
out
int
fcmovb
fucomi
call
xlat
xor
shlb
not
shr
repnz
ljmp
shl
adcb
out
in
enter
fucom
fdivrp
vpsubq
cmp
addb
xor
in
ss
rcr
loopne
repz
xlat
jecxz
sti
mov
icebp
sar
roll
cmp
fdivrl
ds
fcmovne
test
fildl
rolb
call
cmc
stc
aaa
cmp
lock
in
ds
sti
test
rolb
rorl
scas
xlat
mov
xor
jmp
rcl
leave
int
aad
or
out
aad
test
fiaddl
jle
xchg
and
jmp
into
jmp
jmp
xor
int
out
in
idiv
fcmovnu
test
fsubp
out
fisttps
aaa
ljmp
out
sti
idiv
out
fdivrl
in
not
rol
xchg
fmul
mov
not
enter
cld
aaa
fsubr
int
xor
in
out
test
std
loop
incb
aam
leave
jmp
cld
std
div
xlat
fdiv
stc
call
clc
lret
repnz
in
rorl
into
aam
in
in
fcmove
fdiv
cmp
testb
fcmovnb
fsubr
mov
xchg
hlt
xlat
aad
lret
out
aad
in
loop
fninit
rol
xchg
out
mul
mov
sub
icebp
int
out
ds
sti
iret
fldl
jecxz
fucom
cli
test
adc
cld
lock
out
loop
out
xor
icebp
loopne
jecxz
test
std
jmp
leave
out
fnstsw
in
mov
sti
cld
xor
push
hlt
roll
out
fadd
out
jmp
xor
lock
cld
icebp
int
jecxz
fcom
enter
cli
int
jmp
cli
faddl
shl
lret
cmp
cmp
cld
clc
lock
repz
jmp
sti
fadds
aam
in
repz
lret
out
int3
cmp
cmp
ret
shl
test
aad
out
fadd
iret
xchg
ss
cmp
enter
in
xlat
jecxz
out
loopne
test
xchg
into
fisttpl
mov
loop
out
out
fdivs
loopne
in
cmc
std
out
jecxz
cmp
loopne
call
int
xorb
icebp
leave
rol
repnz
aas
cmp
lds
ret
enter
out
rcl
cmp
jmp
test
fiadds
jmp
mov
repz
mov
in
into
iret
ss
fiadds
lds
mov
lret
lock
jmp
xor
rcl
iret
xor
fidivrl
mul
cmp
cmc
lret
clc
faddl
mov
aad
ror
int
adc
add
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
dec
inc
lea
add
xlat
mul
xchg
int
xlat
ffree
std
into
xchg
hlt
enter
into
cmp
shl
enter
out
jmp
fmull
ret
into
fucomi
fmul
fcmovbe
cmc
aas
repnz
icebp
fdivr
lret
in
loope
addb
hlt
xor
rcr
out
cmc
cmc
fprem1
fildl
std
out
fucomip
sti
mov
ret
rcl
clc
stc
xor
fucomi
iret
cmp
out
rcl
in
test
aam
fadds
in
mul
xlat
ret
lret
out
out
cli
call
neg
shl
leave
xchg
lret
loopne
sti
repnz
int
xlat
cmp
and
jecxz
sti
leave
aad
clc
in
sti
cli
shl
rcl
leave
aam
sti
jmp
out
leave
aam
cmc
cmp
mov
fisttpll
xchg
lret
das
repnz
test
test
std
nop
hlt
out
clc
xor
jmp
hlt
fcomi
clc
cli
enter
clc
test
lret
das
rcr
int3
xor
sti
aam
aam
test
aam
test
sub
xchg
in
mov
xor
sarl
into
call
rol
sti
shl
xchg
fadd
xlat
imul
leave
lea
shl
jmp
clc
hlt
aad
in
ds
aad
rcl
ret
in
std
jmp
out
int3
in
hlt
ror
divb
ror
hlt
repz
fcomi
cmc
repnz
fld
repnz
lds
hlt
in
in
out
loop
lret
fdiv
xlat
int
xlat
ret
loope
shl
loop
call
sub
xchg
std
loop
out
ret
test
sarl
cli
clc
adc
fsub
fxtract
jmp
enter
loop
adc
into
in
cs
out
lret
iret
fdivrp
icebp
std
fdivrp
ror
hlt
ret
std
mov
cli
ljmp
loopne
icebp
aas
lds
jmp
cmp
jmp
stc
xchg
faddl
std
lret
mov
jmp
repnz
cmp
std
repnz
cmp
enter
sbb
cli
jmp
aam
sub
jmp
ror
out
sar
shr
je
add
iret
ret
rcr
fxch
in
incl
in
scas
or
jle
clc
icebp
in
faddl
loop
incb
int3
rolb
cmp
into
cmp
aaa
jmp
aad
in
icebp
fcmovnu
in
xlat
fisttps
shlb
leave
imul
cld
fdiv
fcomi
xor
aas
fst
loop
test
lret
orb
cmc
fsubp
out
out
int
repz
into
lret
in
clc
hlt
movl
hlt
icebp
in
xor
shrl
cli
fbstp
jmp
cmpl
lret
loopne
test
iret
out
int3
mov
ljmp
cmp
aaa
sub
rcl
mov
leave
sti
out
jmp
lock
int
xor
div
repnz
fcomip
rcl
jecxz
repz
cld
mov
lret
les
loopne
jecxz
xor
repz
in
lret
fbstp
shr
cmp
mov
cli
sti
test
mov
fcmovu
xor
in
cld
fnclex
in
xchg
shl
fisttps
test
filds
rcl
xlat
idivb
jmp
roll
jmp
lret
lea
aam
lret
lock
into
cmp
pushl
cmp
in
cli
out
std
enter
fucomi
fisttps
in
jecxz
lock
aad
cmp
jmp
std
ror
cld
xlat
incb
cld
clc
mov
xor
hlt
lret
iret
loopne
repnz
loop
ret
test
mov
loopne
xchg
leave
cmc
std
ljmp
out
cmp
ret
in
mov
fucomip
enter
xor
out
int
icebp
aas
jmp
inc
in
mov
sub
loop
decl
xlat
shl
int
cmp
loopne
in
test
hlt
in
fcmovnb
div
sub
lret
in
loope
lock
fmul
cmp
lock
cli
cmp
faddl
int3
hlt
in
imul
rcr
aam
sub
aas
fsubr
repnz
icebp
std
fisttpl
in
repz
cmp
ljmp
aas
icebp
sbb
cli
loopne
cmp
jmp
xchg
in
lret
orl
fstpt
jmp
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
out
loopne
fucomi
loopne
iret
sar
in
test
xchg
icebp
xor
hlt
ss
out
loope
fnstcw
repz
call
lock
in
repz
shr
xor
cld
clc
cld
enter
loop
cld
push
xlat
cld
loope
loopne
xchg
iret
aad
in
aam
loopne
aaa
fdivrs
xlat
std
shl
fmull
xchg
stc
xchg
hlt
jmp
repnz
xor
out
fidivs
out
aas
fdivr
aaa
cld
stc
repz
ret
mov
jmp
int3
xor
out
hlt
cmc
cmp
xlat
clc
loope
repz
loop
div
xlat
testb
out
sub
xor
mul
rcr
fdivrl
aaa
shl
std
repnz
xchg
clc
xor
sub
aaa
jmp
repnz
ljmp
std
cmp
ret
xlat
leave
in
clc
in
mov
into
xchg
push
ret
shl
ljmp
xor
les
leave
mov
sub
lock
iret
cs
leave
call
repz
in
rcl
xchg
cld
loopne
lret
lret
rcl
ss
ret
aaa
cld
cld
icebp
rcl
lret
fnstsw
xlat
inc
mul
std
fadd
clc
loope
ljmp
lret
jmp
test
repz
clc
movb
in
out
fxtract
aam
out
lock
out
cmpb
aad
std
icebp
sbb
lds
xchg
shl
lret
int3
rcl
shlb
fdiv
out
ret
fsubp
rcr
orb
mov
xor
bnd
xor
cmp
and
loopne
shl
enter
fcmovne
mov
mov
cs
int3
out
hlt
ss
aas
in
shl
shl
loop
fisttpll
out
jmp
out
leave
fcomi
out
fdivp
sti
lret
std
clc
fpatan
fcmovnb
fsubp
loope
mov
iret
lret
lret
shr
out
lret
shrl
aaa
lret
loop
icebp
xor
cmp
repnz
mul
mov
fsub
out
leave
in
lret
cmc
jmp
rol
mul
jmp
fdiv
sti
clc
aaa
idiv
out
repnz
enter
rclb
sub
jmp
leave
rcr
fcomp
cmc
pop
fildl
jb
inc
mov
jle
cmc
in
int
cmp
cld
div
in
aas
aas
addl
mov
xor
int3
call
shr
in
add
xchg
sub
add
xchg
cmp
in
test
jmp
loop
int
hlt
call
test
cmp
fucom
jmp
lret
lret
cmp
cmc
loope
lock
loopne
std
mov
enter
sbb
in
into
in
sub
in
cmp
out
clc
loope
std
hlt
mov
xor
fcmove
out
enter
fsubrp
int
imul
sub
in
out
ds
sbb
leave
in
mov
ret
shr
mov
int
in
repz
loop
clc
loop
sub
in
in
in
fldl
mov
in
out
fyl2x
shr
cmp
aas
repnz
test
loop
int3
out
mov
hlt
loope
stc
clc
ljmp
cmp
out
ret
aas
jecxz
in
fsubrp
std
xchg
out
int
rcr
stc
lret
in
into
or
hlt
repnz
mov
vphaddubw
out
repz
vpsllw
fdiv
cmp
leave
xlat
ret
mov
in
fstl
repz
fmulp
xor
ret
fldl
fdivr
cmp
in
jmp
leave
shr
cmc
cld
idivl
aam
fdiv
not
xchg
sub
incl
loop
out
lret
repz
f2xm1
std
loop
sbb
inc
int3
icebp
int3
lret
mov
ret
hlt
out
cld
fcmovbe
hlt
iret
stc
and
fninit
mov
aad
loopne
mov
xchg
out
xor
neg
iret
in
lret
fdivrl
cmp
repnz
cli
in
cld
out
mov
fucomp
rcl
notb
cld
jmp
aad
ss
jecxz
xor
xchg
sub
xchg
in
enter
xor
in
into
fdivrs
loope
fidivrl
clc
ret
cld
mov
int
lock
xchg
lret
out
lret
sarb
cmp
sar
fsubp
int3
lret
fucomi
mov
xchg
add
jmp
rcl
iret
aam
aad
sarl
cmp
push
push
cmpsb
jg
fiaddl
jle
repz
clc
jmp
loopne
cmp
ds
jmp
call
out
jmp
repz
cmp
sti
roll
testb
sti
loop
lock
lret
shl
cmp
adc
shl
aam
roll
call
xchg
xor
xor
jmp
fucomp
stc
repz
cmp
mov
fcomi
lret
out
rorl
icebp
cmp
fscale
cmp
aas
in
fcmove
fidivrs
fcmovnb
cmc
test
in
xchg
lea
xor
in
int
in
cmc
cmc
repz
cmp
std
roll
in
in
cmp
sar
shlb
int3
das
into
jmp
in
cmp
aad
in
fucompp
loope
mov
ret
xchg
or
cmc
xor
fcmovb
repz
into
stc
lock
std
rol
out
ret
out
int3
iret
xchg
test
loopne
out
into
ljmp
fdivrp
in
out
fcmovnb
xchg
cmp
loopne
repnz
shr
lret
fnstenv
ror
cli
leave
cmc
out
lock
xlat
int
nop
in
loope
nop
in
roll
lret
fdivr
enter
in
shl
icebp
test
into
out
fcmovu
lock
xchg
jmp
ret
lret
xlat
stc
faddp
ffree
out
icebp
jmp
std
lock
repnz
repnz
xor
out
cld
repz
aas
stc
fprem1
cli
stc
ffree
addl
call
iret
int
sarl
repz
cmc
sar
ret
call
fmulp
mov
fldlg2
int3
xlat
xor
cli
sti
test
cmp
fiadds
mov
stc
jecxz
fdivrp
xchg
lock
out
aad
lret
xor
in
cli
or
in
sti
jecxz
int3
test
out
ss
into
cmc
repnz
loopne
shl
jecxz
ret
mul
in
sbb
loope
lock
loop
shl
sarl
rcr
call
cmc
std
aam
in
ret
test
test
in
fldl
clc
out
cmp
std
sub
neg
div
cli
stc
xchg
lret
int3
orb
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
xlat
mov
jle
add
out
cmc
inc
aaa
sarb
into
aaa
fistpll
out
inc
lock
cmpb
in
in
int
in
lret
loop
test
mov
lret
cmp
cmp
icebp
fcmove
and
out
faddp
ds
int3
mov
int
out
rcl
iret
lret
fnstsw
fdivp
shr
decb
leave
xchg
jecxz
in
out
call
idivl
rcr
aad
out
xchg
jmp
sti
iret
decl
leave
jmp
cmp
cmp
fld
fiaddl
leave
nop
into
out
fsubr
ffreep
out
xlat
fprem
cli
cli
cmp
xor
aam
test
rolb
ljmp
out
int3
out
ss
xor
sti
xor
hlt
fnstcw
hlt
std
out
clc
enter
cmc
test
icebp
in
lret
in
aad
shll
cmp
not
cmp
aad
jmp
aam
rcl
out
sti
out
ror
stc
jmp
lret
loopne
fcmovnu
ret
stc
leave
jmp
mov
shr
int
fldcw
lock
lock
sti
icebp
cmp
mov
jmp
mov
int3
out
ret
aaa
rcl
leave
lret
clc
into
fdiv
icebp
roll
ficoms
mov
out
cmc
sub
jmp
cli
ror
fcmovne
std
fdiv
rol
xchg
hlt
int3
in
in
idiv
call
xlat
aam
repnz
loope
ret
fcmovnu
test
mov
jecxz
leave
xlat
hlt
aam
stc
aas
cmp
ffreep
ds
loopne
mov
filds
test
les
clc
lock
loop
cmp
test
fiaddl
int
rclb
cmp
cmp
stc
dec
sar
cmp
addl
in
loope
aam
rcr
fsub
out
ret
ret
xlat
repnz
call
in
int
jmp
hlt
ljmp
cmc
aaa
std
hlt
cmp
rol
roll
add
xchg
cs
ss
into
adc
into
cmpb
xor
loope
fldl
add
add
rol
ror
int
aam
and
adc
jg
fiaddl
jle
iret
iret
test
ljmp
jmp
cmp
neg
cmc
xor
test
ds
shl
test
int
in
repz
ss
loope
loopne
cmp
shl
cmc
leave
ret
vshufps
repz
loop
lret
cmp
enter
adc
jecxz
inc
call
mov
mov
jmp
xor
xlat
cmp
cld
fildl
in
aam
mov
faddl
xor
fnstsw
jmp
aad
test
ljmp
xchg
mov
jmp
out
rcr
repz
cmp
sbb
fucomi
mov
xchg
jmp
out
in
in
xor
aam
xor
into
out
jecxz
sar
aas
rcr
ljmp
call
xchg
int3
test
ss
call
sar
aaa
sub
enter
sti
lock
rorl
xor
lret
fcomp
cs
out
aaa
div
shl
aam
call
std
clc
stc
xchg
adcl
int
int
in
ds
int3
testb
fcomp
fcmovnu
enter
test
repz
loope
out
lret
std
sar
repnz
ds
enter
out
icebp
jmp
xchg
xor
in
in
clc
das
jmp
jmp
out
rcr
out
leave
stc
fdivr
icebp
xchg
hlt
incl
sub
xor
neg
rcl
mov
call
cmp
mov
rcl
rcr
into
fdiv
int
out
rcr
call
mov
out
xor
into
lret
in
rcl
leave
rcr
loope
cli
cmp
aam
enter
shr
jmp
jmp
jmp
lret
cmc
int3
fst
cmp
in
int
fcom
sar
loope
fchs
call
repz
jecxz
in
shll
in
lock
rol
mul
mov
movb
fsubr
cmc
cmp
cmp
div
test
sti
in
enter
test
test
call
xor
out
icebp
into
test
test
idivl
xlat
jbe
jmp
int
lret
lret
int
mov
jmp
jle
add
xlat
loop
test
xchg
out
mov
iret
cli
cmp
fadds
lock
in
cmp
cmc
incl
xchg
fneni(8087
in
hlt
aas
ljmp
stc
call
lock
ds
mov
lea
in
xchg
in
xor
into
cmp
icebp
hlt
repnz
aas
fadd
sti
fadds
loope
in
out
cmp
cmp
std
lds
jecxz
lret
loopne
rorb
in
ror
xlat
out
cmp
rcl
test
into
test
call
and
mov
xor
cmp
fidivrl
div
repz
lock
test
xlat
jecxz
leave
xchg
loope
fcomip
lret
das
das
jecxz
xor
jmp
in
test
rol
stc
aam
lea
in
out
fidivs
in
repz
cmp
xor
fmulp
flds
mov
addb
std
in
cs
cmp
out
xlat
cmp
rcr
std
cli
nop
cli
leave
mov
xor
jmp
clc
icebp
fdiv
loopne
loop
fcomi
ret
ret
aam
loope
int3
fstp
rcll
lds
cmp
into
sar
addl
int
int3
loopne
shl
in
cmc
cmc
out
fsubr
cmp
cld
adc
in
enter
aam
int
xor
xor
in
xor
cmp
lock
cli
shl
mov
mov
mov
cmp
idiv
rol
cmp
ret
out
shl
call
jecxz
fldl
xor
sarb
cmp
cmc
int3
lock
frstpm(287
cmp
stc
test
icebp
iret
ljmp
int
out
cmc
leave
cmp
in
sti
cld
jmp
out
out
out
cmc
iret
loopne
fnsetpm(287
call
in
dec
loop
cli
repnz
cmp
aad
into
test
loope
iret
int3
in
iret
fdivr
out
leave
hlt
cmp
push
test
in
mov
into
mov
call
ljmp
in
adc
pop
jmp
ror
ror
aad
inc
push
test
add
clc
cmp
test
lret
loopne
test
xlat
out
repnz
leave
jmp
ljmp
mov
xchg
loope
int3
ljmp
iret
cld
xor
hlt
repz
fcmovu
sarl
aas
shl
or
jmp
mov
sub
fchs
fmul
cli
cld
iret
adc
shl
xlat
out
sbb
lret
sbb
xchg
mov
ljmp
cli
repz
in
hlt
sti
orb
icebp
fimuls
aad
into
cs
cmp
repnz
cmp
test
cmpb
enter
lret
in
test
jmp
out
lret
rcr
in
in
repnz
aam
mov
out
sub
jmp
adcl
aaa
shll
in
ffreep
cmp
div
icebp
repz
call
mov
stc
mul
cli
sar
out
fcomip
aam
test
stc
ret
ret
leave
xchg
xchg
ljmp
out
xlat
fcomi
aas
cmc
aad
ret
faddp
enter
stc
in
std
into
cld
int3
out
ret
aaa
into
sar
fcomp
cmp
out
lock
adc
cld
cli
cli
out
xchg
out
aam
xor
iret
jmp
cmp
rcr
ret
cmp
in
fmuls
fcmove
int
fucomip
int3
loop
xor
call
out
cld
rcl
fdiv
fmul
repnz
lret
leave
lret
xchg
repnz
jmp
enter
cmp
testl
call
mov
rcr
rol
in
into
sub
ds
cmp
add
mov
vpsrad
xchg
hlt
in
lret
leave
fstp
jmp
in
out
addb
std
or
ljmp
shr
xlat
out
cmp
incb
shl
aad
xlat
int3
sti
cld
lret
filds
in
ror
in
leave
out
idivl
lock
test
fdiv
mov
in
mov
mov
in
jecxz
std
clc
div
cmp
in
mov
xchg
fsubp
std
fsubr
repz
loopne
sarb
iret
lret
lock
in
cmp
pop
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
dec
dec
adcb
jg
pop
add
fcomp
cmp
std
call
stc
fmull
fld
aam
fsubr
xor
in
movl
loop
jmp
cli
out
xor
leave
repnz
ret
cli
iret
idiv
repz
test
xlat
fstp
leave
mov
repz
rcl
rol
shl
jmp
xlat
aad
fdivl
cmc
hlt
icebp
rol
inc
call
xchg
shr
jmp
div
adc
stc
fst
jecxz
add
fiaddl
out
addb
shl
out
into
lret
repnz
aas
clc
std
sar
out
mov
fcmovb
in
int
in
loopne
fadd
repz
jmp
shl
cmp
out
cmc
aam
out
sbb
std
sbb
xor
loop
icebp
fucomi
leave
iret
cmp
cmp
lock
repnz
repnz
test
loop
xchg
icebp
out
ror
rcr
std
enter
cli
out
ret
ret
std
ret
lret
std
lret
xor
shl
repnz
into
rcr
std
lock
addl
ficoml
stc
divl
int
int
cld
cmp
xor
shl
fcmovnu
out
in
ljmp
not
xor
fyl2x
call
loope
rcr
loopne
rolb
lret
rorl
out
int3
fsubr
in
out
int
rcr
fidivrs
loope
loop
in
in
rorb
in
icebp
aam
stc
in
enter
std
xlat
hlt
jmp
rcr
fcomip
xlat
clc
fdivr
in
test
test
sti
out
xor
ret
sbb
fadd
lock
rcr
jmp
loope
in
out
out
fpatan
int3
ds
mov
aam
aad
std
orl
stc
out
aam
int3
out
lret
loopne
lret
aad
mov
sti
fcompp
enter
lock
mov
xor
lret
in
out
cmp
lock
hlt
fadd
inc
leave
int3
out
enter
jmp
loope
stc
xlat
xor
ror
into
loop
sub
ljmp
call
cmp
fidivrl
adc
iret
loope
test
aad
in
hlt
xchg
loop
test
xor
cmc
sti
sarl
cmc
leave
fmulp
sti
in
aad
jmp
jecxz
leave
mov
std
shr
xchg
iret
int
sti
aad
hlt
cmp
leave
stc
cmp
shl
clc
ret
ret
mov
mov
ror
out
xor
in
repnz
cld
loopne
lock
sbb
ret
loop
ret
and
and
xchg
test
addb
fdivr
out
push
push
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
mov
in
dec
inc
mov
jle
add
out
loope
clc
fucomip
cmp
in
enter
xchg
in
mov
cli
cmp
jmp
lret
cmpb
cmp
push
std
mov
int3
mov
aad
shl
into
sti
aas
iret
int3
cmp
out
rol
out
ret
xlat
int
sar
cld
adcl
cmp
int
out
fcmovb
cld
leave
testb
out
std
repz
xor
ss
out
cmp
xlat
lock
test
stc
xchg
int3
mov
fsubr
shr
iret
cs
icebp
sti
out
repz
loope
cmp
fucom
ret
lds
fcmove
cld
fucom
iret
xchg
in
repz
ret
jmp
lret
fsubr
out
xchg
rol
clc
jmp
loope
loope
jecxz
ljmp
cmc
ds
cmp
iret
cld
in
stc
sti
mov
ret
fmulp
jecxz
nop
lock
into
into
cmc
xor
lock
aad
in
hlt
mov
lret
mov
loopne
std
cli
hlt
lea
lret
idiv
in
inc
cmp
ffree
aam
fsubr
lret
xlat
lret
out
rcll
xor
lret
aad
stc
fidivrs
repz
iret
fsubp
fcmovnbe
fcmove
in
out
aam
xchg
leave
jmp
repnz
ss
shll
aam
into
lock
xchg
enter
in
test
jmp
xlat
fsub
iret
cmp
ret
incl
test
and
in
ret
out
cmp
repz
clc
aam
sar
test
ljmp
sub
jmp
fists
repz
aad
ds
cmp
cli
ret
call
out
jecxz
mov
in
shl
std
ret
int3
fdivr
out
out
ss
sti
leave
cmp
stc
in
sar
call
mov
fsubr
fiadds
in
loopne
clc
clc
aaa
ror
repz
rol
in
neg
sti
fst
dec
ljmp
sbb
hlt
rcl
xor
xor
shl
in
int
fsubrp
ljmp
bnd
xchg
shlb
fucomi
cmp
std
hlt
cmp
test
mov
into
fcos
repnz
jecxz
leave
les
lds
fcmovne
lret
stc
lock
ret
int3
rcl
cmp
std
hlt
leave
out
in
cli
rcr
test
shlb
out
xor
rcl
fsubr
fsub
test
icebp
jmp
ljmp
sub
fucomp
fucomip
aad
or
test
fildl
fsub
mov
iret
shl
lret
out
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
cmp
repz
movsb
mov
jle
add
in
cld
in
rcr
rcl
cmp
cmp
xchg
test
xlat
mov
fldlg2
out
out
in
loope
cmp
cmc
out
loopne
jecxz
icebp
sar
fnstsw
int
fcomp
rclb
aam
int3
lret
out
fsqrt
ljmp
testl
into
xchg
repz
in
ror
into
aam
fidivrs
cmp
stc
repz
loop
mov
fdivr
test
mov
into
imul
cmp
cmp
in
test
test
fnsetpm(287
loop
leave
and
rcr
aad
repz
int3
out
std
cmp
cld
iret
xchg
rcr
or
fmuls
xchg
lret
jecxz
lret
ljmp
mul
in
fcomip
cld
test
call
ljmp
xlat
aad
lds
std
cmpl
cmc
cmp
sti
cli
stc
mov
out
enter
mul
cs
hlt
out
cmp
cmp
cli
cmp
jmp
out
loope
icebp
into
shl
cmc
xor
xor
cli
cmp
out
cli
call
out
or
xchg
ret
lock
rcl
into
icebp
sti
cmp
out
loop
mov
lret
test
mov
aad
fcomp
fnstcw
ds
jecxz
loope
in
fisttps
xchg
in
loopne
out
sub
loopne
fstpt
fcmovnu
out
ds
addb
in
in
aad
ss
repnz
fdivr
ss
out
jmp
cmp
xchg
in
into
lret
jecxz
shl
jecxz
int3
xor
rcr
repnz
loop
into
shr
fcmovnbe
ret
fldl
fimull
in
jmp
hlt
sti
aas
mul
cmp
test
aam
test
mov
fldl
ret
fcom
aam
cld
leave
ljmp
ret
lret
jecxz
jecxz
adcl
cmc
call
std
fdivp
rol
out
fmul
cli
out
into
in
mov
lret
fcmovne
iret
loopne
in
cmp
filds
lret
out
lea
xchg
repnz
xor
in
aaa
icebp
stc
fildl
out
out
incb
test
icebp
int3
aas
call
int
xchg
xchg
fmul
mov
mov
aad
sub
in
loop
frstpm(287
sti
push
into
cld
jmp
hlt
in
clc
test
int
iret
orb
out
iret
cmp
out
rol
int
out
fcmovnb
in
jmp
int3
dec
icebp
test
mov
cmp
not
jmp
ret
ror
aad
and
xchg
pop
push
pop
add
xlat
xor
fcmovnb
out
not
xchg
roll
mov
out
mov
sti
sar
jmp
into
fsubr
lret
int3
clc
test
clc
stc
mov
sti
lret
cli
addl
lds
jecxz
out
ljmp
xor
loop
rolb
leave
lret
lret
xchg
rcll
fcmovb
clc
call
stc
cmp
shr
mov
fisttpll
roll
cmp
shl
shr
in
aam
int
in
vpmaxub
out
in
iret
xchg
xchg
div
shl
jmp
fsubr
int3
jecxz
sarl
out
repnz
mov
int
jecxz
jmp
ljmp
cld
std
stc
sbb
testb
cld
test
in
rcr
repz
fidivl
jmp
cmp
sarb
std
cmc
fisttpl
mov
ror
loopne
int3
xor
jecxz
cmc
int
ret
std
in
fcmovne
loopne
clc
mov
xchg
xchg
test
orl
enter
out
rcl
shl
incb
adcl
repnz
in
out
ffree
in
cld
out
cmc
jmp
fucomi
fcmovu
cld
jmp
fmulp
int3
mov
lret
jmp
jmp
hlt
aas
aad
icebp
cmp
jecxz
les
xchg
lock
out
ror
cmc
cmp
xlat
cli
loopne
mov
lret
repnz
xor
imull
fcmovne
lret
cmp
cli
jecxz
repnz
cld
out
fsubr
leave
sar
mov
iret
xor
out
xor
out
idivl
shl
lds
lea
xchg
decl
repnz
cmp
rcl
fistpll
fadd
shl
loopne
enter
cld
out
mov
shr
repnz
jmp
xor
div
aas
fiadds
mov
loopne
out
in
lret
stc
not
repnz
iret
cli
in
repnz
int3
fcomi
addl
out
cld
xor
sti
ds
xlat
sbb
mov
icebp
shl
mov
cmc
repnz
lds
stc
out
cmc
in
cmp
in
in
lea
xchg
shr
in
sti
cmp
clc
repz
loope
into
ljmp
mov
call
loopne
xor
aam
std
lret
sti
stc
ret
rol
clc
push
fucomip
or
jmp
in
jecxz
aad
xlat
shl
fucom
in
cmp
jecxz
cmp
test
xchg
lds
test
call
push
pop
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
dec
mov
inc
fidivrs
jle
vpmaxsw
cld
cli
aam
cmp
cmp
lock
in
stc
repnz
mov
fdivrp
jecxz
nop
iret
ret
cld
out
lret
adc
fcmovu
icebp
clc
aas
mov
leave
addb
out
mov
jecxz
out
xlat
mov
cmp
into
ds
flds
std
jmp
enter
or
out
in
div
fsin
aad
clc
int3
rcl
jecxz
loopne
les
lock
mul
sti
cld
into
fcmovnu
int3
cmp
cmp
neg
test
cld
hlt
decl
xchg
repnz
mov
out
das
ret
idivb
lret
lock
loopne
rcr
ret
aam
fsub
fyl2xp1
ljmp
shl
lock
in
jmp
cld
fcmovnb
cmp
sti
neg
ret
stc
mov
ror
out
icebp
loope
rol
repz
aas
lret
cmp
cmp
sti
rcr
mov
loopne
in
in
sti
lret
adcl
aaa
fdivr
repz
int3
std
ret
hlt
hlt
shr
test
fcmove
into
or
loope
ljmp
test
test
lock
clc
xlat
repnz
lret
sarb
shl
aaa
fcmovnu
fldpi
clc
icebp
cld
repz
enter
cmp
test
fstp
cmc
ds
xor
fcmovb
ret
in
decb
int3
xchg
idiv
cmc
xor
out
fcomip
aaa
stc
hlt
ret
aam
fcmovnbe
mov
iret
loopne
int
out
aad
ret
xor
fmul
sti
testb
hlt
out
out
jmp
loopne
rcr
clc
das
shll
aam
cmp
call
jmp
rcl
xlat
fmul
nop
repnz
fidivs
int3
int3
aaa
stc
ss
enter
fcmovnbe
aaa
rol
ret
fisttpl
shr
nop
xchg
int3
out
leave
clc
divb
lock
aas
cmc
rcl
fstp
rcr
idiv
not
jmp
fimull
sub
in
int3
icebp
sti
xor
into
fadds
xchg
shl
loopne
fucomp
test
fstp
lret
call
out
cli
into
std
aas
aas
xor
rcr
call
fucom
in
out
iret
repnz
in
aad
xor
xor
xor
out
fldl
cld
fxam
ret
int3
mov
test
clc
ret
div
int3
div
sti
idivb
icebp
ret
in
cmc
mov
nop
xchg
xchg
out
aaa
repz
lret
aaa
fcmovu
cmp
fcmove
fdivr
into
std
add
call
mov
fdivrp
nop
mov
shll
loopne
int
rcr
rcl
cmp
test
xchg
out
jmp
cmp
movl
jmp
aas
aam
aas
aad
iret
aam
adc
mov
jge
and
inc
jg
pop
add
mov
xchg
rcl
xor
cmp
add
orl
fcmovnb
rcr
loopne
adc
out
in
cmp
aam
aas
loope
test
in
fadds
jmp
xchg
mov
xor
fcmovbe
lock
fcomip
fdivrs
ret
ret
aam
aas
clc
mov
out
in
sbb
test
test
clc
xor
not
ror
iret
out
out
into
jecxz
in
fstpt
rcr
aam
test
fisttps
das
int3
ljmp
cmc
lock
out
stc
hlt
jecxz
lret
loopne
int
jecxz
aad
in
int
loop
mul
xor
lret
addl
out
loope
mov
icebp
xor
mov
shl
cmp
cs
loopne
fmul
aas
aad
rcl
test
mov
mov
fisttpl
jmp
in
cmp
cmp
int
fadds
ret
iret
sti
xchg
lret
lea
fsub
out
cmp
xlat
leave
rcl
cmp
icebp
mov
xchg
mov
std
fdivp
jecxz
in
rol
out
iret
out
fcomip
out
aad
cmp
icebp
roll
fcos
mov
repnz
mov
cmp
cmp
hlt
repnz
ljmp
lret
jecxz
icebp
fldl
ret
fdivr
icebp
rcl
cmp
xchg
out
xlat
mul
ljmp
aam
cmp
fcmovnbe
cmp
int3
out
div
ffree
xchg
lock
call
loop
ret
and
xchg
test
xor
shll
int
cld
sarl
ds
out
xchg
xchg
fcmovu
fmuls
in
ficoms
aam
jecxz
cmp
sti
rcr
sti
ds
cld
lds
idiv
xchg
movb
out
idiv
in
fnstsw
ds
ret
not
jmp
aad
out
sti
test
mov
repnz
jecxz
fucompp
clc
int
jmp
int
clc
stc
test
clc
cli
into
jmp
into
lock
xor
shl
aad
aad
cmp
out
cmp
test
fdiv
lret
xchg
sbb
out
out
enter
hlt
fdivrs
fidivrs
cmp
faddl
leave
loope
xchg
mov
ljmp
rcr
stc
xor
clc
ljmp
loopne
jecxz
mov
push
jmp
div
lock
cmp
cmp
hlt
movb
lret
hlt
out
mov
fsub
out
cmp
jmp
cmp
iret
testb
loop
orl
sub
jmp
leave
sti
ds
loopne
in
ret
call
je
mov
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
enter
into
ror
aad
loop
in
movl
sti
test
mov
test
shl
into
div
enter
cmp
fidivrl
xchg
ret
sar
into
fsubr
in
std
ljmp
out
jmp
cmp
rcl
vpsrad
clc
cli
testl
lret
out
cmc
in
call
ret
fdivp
shl
in
sub
fistl
iret
repnz
sti
xor
loope
ret
test
and
fxch
ret
jmp
ss
ret
jmp
cmc
iret
test
aam
shl
stc
dec
stc
and
loope
in
nop
into
xchg
loope
xlat
stc
sarl
stc
cmp
aam
jmp
loop
cld
sbb
in
inc
mov
xchg
xchg
rcr
not
in
sar
sub
cmc
aad
xchg
icebp
out
fucom
out
sub
enter
test
in
idiv
sarl
cmp
shl
out
xchg
stc
loope
ljmp
mov
out
cmp
cmp
fcomp
cld
loopne
into
jecxz
fcmovbe
cmc
call
into
faddl
leave
ror
shl
sti
enter
cmp
fcomi
ffree
incl
mov
in
xlat
neg
xor
xlat
loopne
int3
aas
cmpl
cli
idivb
std
std
ffree
test
std
shl
icebp
lock
mov
cmc
xor
loopne
int
cmc
loope
xlat
out
loopne
std
lds
lock
jecxz
shlb
shl
std
cli
std
testb
aad
fsub
call
divl
aad
repz
cmp
testb
out
testb
in
xor
out
jmp
fdivrp
xor
loope
ffree
test
out
stc
fucomi
lret
in
loope
in
iret
cmp
cmp
fdivp
lock
stc
out
mov
lock
enter
ret
int
ds
hlt
shl
repnz
cmc
xchg
aad
mov
test
loop
incl
cmc
out
fcmovb
das
fidivrs
ds
cld
cli
fcmovnu
clc
icebp
lock
sti
and
loope
in
iret
test
jecxz
out
fistpll
ror
cmp
cmp
xchg
jmp
lock
xchg
div
cmc
xor
lock
in
repz
rcr
jecxz
sti
shl
jmp
std
mov
loop
xchg
std
repz
rol
fsqrt
fcomp
iret
repnz
int3
rolb
loopne
aad
int3
movb
call
shr
repnz
cmp
rol
jmp
cld
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
xchg
lock
leave
rclb
iret
jecxz
aad
cli
ds
stc
adc
aam
sti
lret
test
ljmp
out
leave
sarl
sarl
sbb
cli
fmull
aad
icebp
xlat
lret
ss
iret
fsubrp
fmulp
int
adc
fcmovb
fdiv
adc
mov
lds
int3
repz
int3
into
cld
call
in
rcl
icebp
fldl
clc
xlat
add
out
shl
call
xor
int
repz
aaa
testl
mov
loop
in
jecxz
divb
jmp
out
xor
fdivp
lret
cmp
in
mov
rcr
stc
xchg
into
leave
jecxz
into
pop
xchg
jecxz
cmc
ret
iret
int3
repz
fdivr
in
filds
xlat
test
repz
fdecstp
xor
cmp
sub
aaa
ret
ret
jmp
loop
pop
mov
lock
ret
cmp
jmp
cld
repz
out
in
call
leave
in
xchg
ror
cmc
das
cmc
clc
xor
cli
in
xlat
rcr
aam
aam
xchg
jecxz
fidivrs
nop
mov
repnz
mov
xor
out
rcr
ds
dec
cmp
neg
mov
in
mov
mov
aam
rcr
in
in
aam
roll
aad
out
int3
in
int
mov
adcb
fidivl
push
loopne
loopne
into
lds
test
in
out
ret
into
neg
stc
cmp
and
fucom
cld
flds
out
ljmp
ret
fmul
leave
cli
lock
ror
jmp
cld
ret
and
xor
imul
out
int
xchg
mov
repnz
fdivr
fmul
repnz
roll
cmp
out
cli
test
cs
out
neg
hlt
ror
testb
test
jmp
imulb
cld
xor
ss
cmp
rcr
testl
shl
xor
idivl
div
clc
ljmp
cmc
jecxz
mov
lret
repnz
xchg
into
loop
leave
xor
sti
ljmp
cmp
hlt
xchg
fimuls
lock
out
sub
out
xlat
cmp
ljmp
aam
aam
std
loopne
nop
shl
xchg
repz
loope
sti
fnstsw
shr
lock
testb
ffree
out
testb
jmp
aam
repnz
fdivrs
aas
addl
adc
jmp
rcl
int3
lret
fst
fstl
cmp
jg
pop
add
mov
out
out
nop
enter
enter
in
in
aam
xor
ljmp
repz
fdiv
lret
in
fldl
test
icebp
aad
in
cmp
cli
stc
in
repnz
aaa
test
icebp
rcr
mul
fucomip
lret
sub
fdiv
mov
call
fcomi
lret
cmc
jecxz
xlat
cmc
sar
rcr
jecxz
loopne
icebp
in
mov
aaa
out
leave
out
in
int3
out
loopne
stc
shl
sub
stc
iret
test
rorb
leave
sarb
pushl
leave
fmul
lock
out
and
clc
out
fadd
in
iret
mov
rorl
icebp
icebp
leave
shl
fmulp
loope
cmp
mov
cli
ljmp
aam
repnz
aam
cmp
out
hlt
std
leave
icebp
repz
out
cmp
xchg
jecxz
jmp
lret
mov
cld
repz
xlat
stc
repnz
stc
out
cld
inc
loopne
ljmp
xchg
iret
out
lret
lock
lret
xor
shl
repz
cmp
out
lret
loopne
int3
out
loop
inc
cmp
in
cmp
fcmovnu
stc
aad
cmp
stc
idiv
out
lret
fadd
out
ljmp
loop
lret
xor
add
rolb
out
jecxz
fstp
xchg
test
loop,pn
hlt
in
std
cmp
in
fsubr
ds
ret
mov
test
fdiv
ror
jecxz
loop
out
into
idiv
cmc
cli
cmp
mul
rcr
cld
fildl
out
rorl
out
xor
sar
int3
cli
repz
aad
loope
std
testb
push
mov
or
xor
sarl
aam
cli
sti
ror
cmp
fcmovnu
enter
mov
loop
nop
in
fucomp
repz
ret
xor
int3
int
sti
out
cmp
incb
incl
mov
fcmovnbe
icebp
int3
xchg
into
rol
rcr
lock
in
imul
cmp
out
repnz
lret
fiaddl
test
loop
lock
jmp
lret
int3
testb
cmc
jecxz
call
into
faddp
sar
fsub
repz
cmp
cmp
ds
stc
loop
xor
iret
in
int3
xor
icebp
icebp
rcl
enter
repnz
fld
lock
leave
enter
addl
cs
repnz
iret
xor
xlat
jmp
ror
out
cmp
call
jmp
nop
xchg
call
jmp
int
cmp
cmp
repz
clc
enter
orb
xor
xor
int
lock
test
daa
add
jmp
aad
fnstsw
repz
sti
mov
jle
add
repz
stc
cmc
sub
int
jmp
shr
repz
xor
aad
rcl
rcl
fstp
call
sti
out
out
mov
rcr
repz
cmp
in
out
call
fildl
repz
mov
call
call
test
adc
loop
in
fdivr
fiaddl
fildl
icebp
call
in
icebp
cli
shl
aam
addl
adc
xchg
loope
clc
xor
into
icebp
icebp
aam
ror
rolb
ljmp
xchg
mov
out
xchg
loop
ret
std
fucomip
cmp
rcl
cmp
loopne
enter
jecxz
sti
sti
adc
mov
aad
aam
sarb
repnz
lock
lds
mov
lret
in
iret
xor
in
xor
jmp
xlat
cmp
add
stc
popl
jmp
cli
out
cmp
in
rcl
aas
ret
ret
cli
leave
lret
ficoml
adc
fnsave
xor
icebp
test
flds
enter
orb
vpand
xor
cmp
sar
repnz
faddl
mov
mov
aaa
cmp
ret
shlb
out
loope
hlt
out
rcr
ret
loop
out
int
mov
int
mul
call
fnstenv
fcmovnbe
lret
rol
test
rorl
jecxz
shl
mov
xor
ss
aad
cmp
ror
test
out
adc
test
cli
addb
int3
hlt
mov
xor
cmc
cmp
sar
lret
lock
clc
out
icebp
enter
orb
ficoms
fucomi
fnstsw
cmp
in
lds
cmc
mul
clc
nop
call
rcl
aam
xor
in
mul
cmc
cmp
jmp
fsubp
test
ret
aam
test
sti
nop
test
out
fmul
aaa
idiv
fdivrp
repnz
lock
shl
sti
mul
loopne
incl
xor
cmp
fnsave
in
ds
shl
shl
ret
fmull
call
movl
lret
cmp
shl
in
cli
std
xchg
mov
xchg
cld
ljmp
lock
in
fcmovnu
in
ret
adc
mov
test
sti
in
sti
in
sti
icebp
shl
out
shl
clc
ss
iret
cmp
idiv
loop
cld
fimull
in
orb
aam
repnz
cmp
fisttpll
add
cmc
add
add
aam
aas
aad
iret
aam
ljmp
imul
pop
add
sar
icebp
loopne
idiv
cli
into
xchg
in
in
ljmp
iret
cmp
in
loop
xlat
fisttpl
stc
ljmp
out
sarb
stc
cmp
aad
ds
rol
loop
fildl
test
in
test
jecxz
icebp
cmp
repz
ret
sub
in
fprem
xchg
mov
leave
in
sti
in
xor
std
fcomip
repz
jmp
xchg
and
jmp
cmp
repz
lock
lret
icebp
hlt
cmp
loope
vpaddb
lret
out
in
xchg
xchg
orl
into
out
std
into
sar
shl
stc
ret
leave
fmuls
fmul
int3
subb
jecxz
test
out
fstp
xlat
shl
test
cmp
out
sti
leave
shl
xor
leave
out
cmp
aaa
idivl
fcmovnb
or
fcmovb
ljmp
loope
int
out
das
enter
iret
icebp
repnz
out
hlt
test
cld
cmc
leave
fcom
fisttps
addl
cmc
cmp
jmp
sti
out
idiv
icebp
xchg
in
xchg
into
loopne
fimull
fcmovu
cli
xor
out
cli
out
repz
ljmp
ljmp
loop
ror
fdivp
dec
filds
mov
fldl
icebp
fcoml
repnz
lret
lock
cmp
ret
test
test
jmp
in
xchg
cmc
xchg
rcl
aam
xor
aam
in
cmp
aad
ret
cmc
jecxz
fucom
mov
xchg
shl
cmc
stc
aaa
out
ss
clc
sti
call
stc
mov
adc
repnz
imulb
in
hlt
rol
test
cli
aad
fchs
xchg
leave
in
enter
icebp
loope
nop
mov
aam
cld
cmp
ljmp
iret
fcompp
repnz
repnz
loop
in
fsubrp
stc
enter
cmc
enter
add
fisttpl
xchg
xor
cmp
lret
ror
repnz
into
neg
out
out
inc
fimuls
repnz
icebp
xchg
xchg
shlb
lret
xlat
cmp
cmp
aad
fadds
fucomi
testb
cli
test
mov
into
hlt
test
int
lret
repnz
cli
ss
in
ljmp
mov
xchg
das
loope
rcr
idiv
repz
fcomp
int
clc
cld
cmp
aad
decl
fdiv
int
xor
out
in
enter
loop
mov
add
add
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
ds
int3
jmp
add
cmp
xor
jmp
jmp
in
out
mov
in
iret
shr
in
out
ror
sti
rol
stc
ret
aam
cld
dec
cmc
mov
out
fcmovu
ret
ficoms
lock
in
icebp
stc
stc
fnstenv
sub
fcomip
ret
test
rorl
fdivr
jecxz
in
xorb
lock
cld
aaa
not
ret
fiadds
test
iret
out
mov
aam
mov
shl
repz
aad
loopne
jecxz
cmp
lock
out
addl
lret
shl
xor
cmp
cli
cli
out
shl
test
ljmp
test
ret
sub
call
fcmovne
fcomi
cmp
xchg
inc
mov
mov
mov
and
xor
cmp
into
rol
xor
aam
clc
fildl
out
rcl
imul
jmp
das
icebp
aas
cmp
fneni(8087
repz
ret
jmp
fdivrp
cli
mov
repz
cmc
ds
lret
ror
lret
test
fsub
decb
xor
jecxz
cmp
iret
sar
out
cmp
cmp
hlt
cmc
mov
lret
icebp
call
xor
out
xor
aad
shr
jmp
cmc
fcos
hlt
jmp
mov
fimuls
shl
aaa
loope
lret
shl
cmp
icebp
repz
stc
rol
xlat
call
lret
ljmp
cmp
int3
aam
cmp
loopne
loope
fisttps
ljmp
fcomip
rol
repnz
cmp
lret
ds
int
loop
enter
in
out
shl
or
repz
sti
fdivr
aad
mul
cmp
loop
xchg
hlt
cmc
mov
fcos
out
out
test
fbstp
xor
aad
sar
cmp
aam
fdiv
icebp
in
out
fdiv
cmc
xchg
jmp
jmp
out
out
xor
cmc
icebp
out
in
iret
cmp
lret
iret
in
loopne
mul
jmp
shl
lret
aam
stc
aam
cmp
neg
cmp
fdivrl
repz
mov
call
jmp
shl
repz
cmp
cmp
xor
in
out
ljmp
ficoms
fidivrl
lock
fucomi
clc
cmp
ffree
in
sti
fmul
shl
jmp
out
vpsubsw
clc
xor
div
stc
fidivrl
out
and
clc
fcmovnb
jecxz
orl
out
mul
out
icebp
aad
icebp
fincstp
iret
int3
repz
jmp
rol
rol
stc
hlt
xor
xlat
int
lock
fcoml
jmp
iret
mov
jmp
int3
ror
fst
mov
mov
push
jg
pop
add
idiv
cmp
repnz
out
fidivrl
call
into
enter
repz
shl
divb
icebp
rcl
aas
cld
test
fdivrs
hlt
xlat
fcmovbe
addb
leave
icebp
mov
into
xor
xor
in
jmp
lret
cmp
clc
icebp
xlat
addb
fcomp
vphaddubw
repz
in
out
xlat
xor
in
cmc
fldl
out
test
in
test
cs
in
cmp
aaa
ds
sar
xor
mov
add
mov
in
ljmp
shr
ljmp
cmp
shl
aad
fimuls
mov
adc
out
jmp
ret
xor
ror
in
cmp
incl
out
imul
ret
in
jmp
shl
shl
jmp
aad
fistpll
ds
in
in
leave
cmc
jecxz
fdivrp
lret
out
stc
xlat
out
rcr
cmp
int3
cmc
test
test
rol
mov
int
nop
mov
in
leave
cmc
aad
fcomp
int3
cmp
add
in
addl
repz
out
int3
clc
jmp
cld
rol
cld
clc
rol
ljmp
or
jmp
xor
fmul
stc
imul
ds
roll
xchg
icebp
and
xchg
loopne
ret
xor
sti
xlat
jmp
repnz
clc
fsubp
in
in
fcmovnb
in
jmp
jmp
in
faddp
cmp
iret
out
xor
cmp
cld
repz
out
cmc
fcom
xlat
shl
cli
lret
in
xchg
mov
out
out
cmp
cmp
ljmp
leave
rcr
ljmp
repz
ret
aad
mov
lock
jecxz
ffreep
sti
rorl
sti
sbb
jmp
cmc
cmp
rcr
fsub
cld
in
cmp
aas
mov
clc
clc
cld
out
icebp
mov
aas
ljmp
xlat
div
sti
fcos
test
rol
jecxz
std
hlt
jmp
in
iret
into
xchg
xor
in
into
lret
ds
out
fcmovne
ret
iret
div
loopne
clc
int
sti
fisttpl
out
shr
hlt
rcr
call
aam
les
in
fucomi
in
lds
icebp
in
rol
fmul
out
jmp
fdiv
ret
cmp
ffree
fsubp
mov
loope
sub
sti
jecxz
out
test
addb
clc
addl
shl
sub
iret
leave
std
out
aaa
leave
loope
iret
rcl
stc
rol
faddl
xchg
fiadds
out
xor
add
cmp
jne
jmp
leave
aad
aad
int
jge
in
and
push
jg
pop
add
cmp
lock
ds
in
fnstcw
mov
in
xchg
loopne
out
lret
xchg
hlt
out
icebp
xlat
cmp
into
fchs
loopne
in
clc
xchg
sti
in
loop
mov
in
in
repz
into
clc
cmp
cmp
sti
cli
xchg
cmc
mul
mov
call
orl
fcmove
icebp
cmp
cmp
adc
std
jmp
cli
xchg
in
test
int
loope
les
hlt
repnz
xor
out
in
ret
test
in
mov
xchg
into
lea
cmp
xor
aad
lock
rcl
in
aam
sar
jmp
in
shr
sub
enter
leave
cli
in
rcr
stc
mul
mul
call
jmp
cmp
in
int3
rcl
shrl
fld
ss
iret
int
loop
ret
ds
xchg
jecxz
leave
fsubrp
xchg
ljmp
out
clc
ror
std
shr
dec
clc
add
test
ret
out
out
sub
int3
in
xor
lret
fcom
sti
fsubp
repz
imul
call
aad
in
mov
inc
sarb
loope
not
fdivrp
in
into
lret
repnz
xchg
sub
xor
jmp
out
repnz
out
neg
hlt
ret
mov
loopne
fxch
xchg
shl
in
mov
cs
fstpt
clc
ss
into
test
ret
repz
jmp
cli
mov
cmc
leave
repnz
cmp
icebp
jmp
xor
sar
std
shl
shl
cmp
stc
jmp
adc
cld
cmp
fdiv
into
fadd
clc
imul
fmul
out
mov
inc
nop
repz
out
xor
fucomi
cmp
out
aad
clc
hlt
aam
xchg
cmc
or
sub
repz
out
rcr
jecxz
fucomi
loopne
lock
shl
cld
repnz
test
loop
orb
sub
fcmovnu
in
cli
lock
fdivr
into
loop
xlat
loopne
out
out
fucomp
loopne
adc
xor
xor
test
sti
cmp
add
cli
notrack
lret
xchg
cld
xchg
aam
loopne
test
ljmp
loopne
mov
fildl
cli
fucomp
repz
in
int3
enter
adc
flds
aad
mov
std
lock
cmc
lret
cmc
fcmovu
in
fyl2x
aam
loopne
stc
icebp
repnz
in
in
mov
sbb
mul
icebp
shr
loope
fdiv
sti
repnz
and
popl
lock
fsubrp
aad
inc
cld
xor
jmp
ret
les
je
push
imul
pop
add
ret
leave
xor
icebp
ljmp
std
sar
xchg
loopne
fadd
shl
xchg
xchg
test
cmp
sti
icebp
shl
xlat
mul
stc
leave
faddl
jecxz
jmp
ss
sub
clc
jmp
cmp
in
mov
cli
std
jmp
xor
sub
repnz
hlt
in
lret
cli
cmp
test
testl
int
shlb
cld
ds
ror
call
sti
test
stc
mov
repnz
out
mov
clc
call
xor
xor
jecxz
mov
std
fldln2
mov
mov
into
ss
xor
aaa
lret
out
rcr
ret
hlt
sti
rcr
out
loope
test
out
icebp
out
repnz
xor
in
not
xor
sar
sti
int
xchg
loopne
and
lds
loop
in
aad
int
xor
vpsrld
fcomip
cmp
in
jecxz
icebp
jecxz
cmc
test
loope
or
iret
rol
lret
cli
fucomip
fcmovu
clc
not
cmc
sbb
loope
fsubr
fmull
xor
hlt
jecxz
repz
xor
loop
fdivrp
fcomi
xlat
jmp
orb
out
out
call
lock
div
aam
ret
mov
mov
orb
lds
fidivs
and
repz
mov
mov
or
fisttpll
shlb
shl
cld
ror
in
not
and
fdivr
test
mov
xchg
jmp
cmp
cmp
fprem1
int
sar
test
fldlg2
fsub
in
fisttpl
bnd
stc
icebp
cmp
stc
cld
jmp
cmp
faddp
shl
cmp
in
in
lock
rol
out
std
ss
imul
clc
sbb
mov
clc
sti
ret
xchg
jmp
in
xlat
repz
rcl
out
sti
ret
test
hlt
les
roll
stc
xor
aaa
cmc
out
aad
neg
iret
xor
sti
fimull
imul
shl
xor
jmp
ror
icebp
icebp
vpsubusb
cld
xchg
mov
in
jecxz
loop
in
icebp
jmp
cmp
cmp
icebp
xlat
loope
cmp
in
loopne
xlat
int
fst
adc
repz
jmp
aad
loopne
fdivp
addb
mov
rolb
out
out
into
xor
cmp
ljmp
jmp
fdivp
cli
stc
xlat
jmp
leave
lds
cld
inc
add
add
add
rcl
rcl
aad
add
idivl
or
jg
pop
add
int
lret
xor
rcl
cmp
std
cmp
cld
cmc
adc
call
leave
out
mov
lret
test
std
jmp
cmp
les
int
icebp
fmul
icebp
in
adc
xor
fcmovnbe
call
std
fprem1
hlt
in
jecxz
into
fsub
bnd
out
xor
clc
icebp
cmp
int3
or
cmc
aas
loopne
xlat
adc
loop
xchg
fdivp
nop
jmp
orl
out
lret
out
xor
faddl
leave
mov
fstp
jmp
hlt
out
call
in
loopne
fcomp
cmp
std
repnz
mov
sti
lock
filds
xor
cmp
shl
aam
rol
cli
cld
in
repnz
ljmp
cmp
out
cmp
fcomp
neg
clc
cmpl
out
std
out
ljmp
ss
hlt
in
in
out
iret
hlt
hlt
cli
ss
cld
stc
hlt
enter
lret
out
hlt
fisttpll
repnz
cmp
cmp
idiv
in
in
shl
loop
xchg
out
in
in
fildl
enter
enter
loopne
xor
out
cmc
mov
mov
xor
ret
ss
int
icebp
int
cmp
fsqrt
repz
faddp
hlt
sbb
call
mov
sar
shr
sarl
lret
icebp
fdiv
fiaddl
fimull
or
mov
xor
xlat
out
fcomp
loop
jmp
int
stc
stc
shl
jmp
std
shr
xchg
xchg
xor
ror
cmp
jmp
idivb
icebp
stc
aas
in
out
test
stc
xchg
nop
xchg
xchg
xchg
vpmulhuw
fcomp
lret
cmp
cmp
rol
lock
mov
lea
mov
loopne
mov
ret
hlt
int
jmp
in
fcmovbe
icebp
sar
jmp
out
shl
lret
mov
jmp
cs
hlt
shlb
sti
rcr
aas
shl
xchg
mov
aaa
in
xor
cli
imul
stc
int3
loop
out
not
in
loop
enter
mov
aaa
clc
cmc
sti
cmp
xor
aam
cmp
std
filds
ljmp
fidivl
out
lret
aam
cmp
out
jmp
aas
and
movb
nop
loop
out
jecxz
repnz
lret
shl
stc
aam
xlat
inc
test
loope
out
in
out
lret
aad
rol
xlat
xor
cmp
aad
mul
inc
iret
shl
shr
mov
fsubp
stc
enter
xor
add
mov
pushl
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
rcrb
mov
mov
add
out
test
mov
icebp
aad
aam
shl
in
xor
fcomp
in
clc
sti
repnz
out
int3
mov
jmp
enter
aad
shl
aad
ret
sti
stc
mul
neg
in
cli
fstp
mov
xor
mov
xor
in
cmc
repnz
out
sbb
clc
cmc
mul
ret
loop
testb
in
xchg
xor
leave
xor
aam
ljmp
cmp
std
testb
out
xchg
das
aad
mov
hlt
fsubrp
lret
fsubp
rcl
xchg
std
mov
lret
out
call
enter
shl
rcr
aas
sar
repz
in
inc
cmp
movl
shr
test
test
call
aas
loop
lret
and
neg
aad
xchg
fsubr
out
out
xchg
leave
enter
ss
xor
inc
fdiv
rcl
cmp
sarl
fmul
mov
in
icebp
test
fmull
in
ss
in
fdiv
clc
repz
cli
cmc
mov
hlt
lret
call
ret
int
cmp
loopne
int
cmp
aas
loope
test
fcmove
mov
jmp
test
in
cmc
loopne
aam
clc
sti
out
loop
fld
fucompp
inc
fst
lea
out
in
enter
std
in
filds
rorl
mov
std
xchg
out
xchg
loope
not
int3
lret
jmp
std
cmc
fmul
aas
cld
fcmovu
decb
ret
lret
mov
subl
out
fdivr
leave
in
into
lret
loope
ret
xlat
movl
adc
int3
hlt
in
fldlg2
std
repz
aad
aaa
addb
test
leave
nop
loope
xor
fadd
xor
fnsave
testl
fmul
mov
jmp
test
repz
shl
aaa
repz
cmp
cmp
sub
loopne
in
out
leave
std
mov
jmp
lret
hlt
in
int
out
ds
repnz
test
fldl
nop
mov
icebp
sar
fmulp
sub
cmp
ror
fdivr
out
int3
fcmovnb
fcmovu
xor
sti
ljmp
shl
out
shlb
in
jecxz
sti
cmc
lock
enter
test
dec
leave
xchg
sti
in
in
into
loopne
hlt
int3
cmp
ss
leave
in
shr
roll
out
mov
call
and
aad
out
xor
cmp
out
lret
fcmovnu
rcr
test
aam
mov
mov
dec
ljmp
shl
cmp
xlat
ror
out
cli
cmp
hlt
xchg
xor
jmp
xlat
ror
fld
and
test
fwait
rcll
xchg
bound
pop
add
out
dec
int
int3
lock
in
in
aaa
fstpt
int3
lret
cli
ret
ds
fucomi
lret
flds
or
jecxz
xor
call
aam
jmp
cld
loope
test
fsub
loop
mov
xor
xor
jmp
std
cmc
cmp
lock
call
leave
stc
int3
loop
fmul
nop
out
int3
clc
xor
bnd
addl
loopne
int
mov
neg
lds
xor
rol
iret
fcmovnu
sar
aam
out
lret
mov
repnz
in
test
aad
loop
cmp
int
jmp
sti
into
fsub
rorl
rorl
in
jmp
enter
cmp
cmp
stc
aad
out
sub
loope
orl
jmp
sti
jmp
imul
clc
fdivs
sar
fmul
std
and
fcmovnu
loop
xor
hlt
div
iret
stc
jmp
lret
loop
icebp
loope
repz
sub
fndisi(8087
jmp
in
aam
rcr
cld
rcl
rcl
clc
fldl
enter
xchg
in
lret
jecxz
repz
cli
int3
into
cld
lock
loopne
clc
adc
sar
cld
mov
sbb
jecxz
mov
jecxz
cmc
les
clc
ljmp
stc
sbb
call
test
repz
xchg
jecxz
shl
lret
lret
cmc
into
cmp
idiv
lock
rol
out
imul
ficoml
in
loopne
enter
into
call
cmp
cmp
loop
cmp
decl
vpmacsswd
cmp
ss
lret
in
fsubp
loope
mov
std
clc
cmp
std
repz
in
in
cli
test
ds
rcr
leave
ljmp
jecxz
xchg
mov
hlt
xor
xor
cmp
into
incb
mov
jmp
loopne
ror
shl
mov
call
neg
iret
clc
cli
cmp
cmp
xlat
cmc
fcmovb
jmp
lret
test
rorl
ret
xor
iret
ljmp
jmp
clc
fdivrs
and
test
roll
clc
cmc
aaa
cmp
aad
aad
add
aam
mul
cli
cmc
xlat
test
ljmp
fidivs
xor
ret
aaa
shr
sarl
rcl
test
loope
mov
jmp
in
jmp
repnz
fisttpll
cmc
repz
jmp
clc
test
fcom
cmp
mov
addb
not
fnstcw
into
in
cld
in
fmul
icebp
and
and
pop
add
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
iret
int3
mov
pop
add
aas
out
int3
out
cmp
icebp
cmp
xor
fcomi
lret
div
rol
test
mov
fcmovu
stc
jmp
mov
out
mov
hlt
in
neg
std
xor
int
loope
and
hlt
jecxz
jecxz
fmul
iret
xchg
test
not
ret
lret
ljmp
shl
fcmove
clc
cld
ficoms
xchg
into
sub
in
in
out
std
aaa
fdiv
cli
shl
aas
xchg
leave
mov
fdivp
jmp
mov
lock
into
lret
repnz
aad
aam
test
test
leave
fchs
sti
out
fucomi
xchg
shl
nop
jecxz
jmp
neg
cmp
ror
call
fiadds
test
mov
xchg
cmc
cmc
in
cli
hlt
std
aaa
ss
cmp
std
addb
test
icebp
loope
loop
xchg
loope
xlat
out
ss
hlt
sarl
sti
lock
loope
cmp
jmp
loopne
loopne
test
in
xor
in
cmc
rol
cli
loopne
std
loop
testb
fldl2e
mov
cmc
loop
repz
jecxz
jmp
idiv
roll
inc
leave
lret
lret
in
out
jmp
xor
in
std
leave
fstp
into
shr
ret
loope,pt
cmp
jmp
loopne
loopne
loop
shl
aad
into
lock
ljmp
lds
cld
lret
out
jmp
ror
hlt
fucomip
ljmp
leave
cld
ror
ret
cmp
cmc
out
cmp
sti
enter
mov
shr
in
ret
hlt
out
cli
cmp
fsubr
sarb
cli
add
jmp
std
mov
adcb
cmp
neg
fst
in
fiaddl
testl
loope
jmp
enter
cli
lret
repz
test
out
adc
aam
loop
test
jmp
xor
leave
int3
cmp
fucomp
stc
icebp
fdivp
in
stc
ljmp
in
int3
ljmp
loope
sar
sar
xchg
shr
out
aam
jmp
xchg
lds
aaa
div
aad
int
icebp
loopne
ret
into
ret
enter
call
jecxz
out
sub
in
cld
jmp
std
into
out
mul
call
enter
repz
out
ljmp
div
movb
in
call
ljmp
in
xlat
aam
out
xlat
testl
shr
cli
enter
shlb
icebp
neg
shr
cmp
cmp
rolb
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
mov
shrl
jle
add
fdivrl
in
std
rcll
fstpt
cli
cld
hlt
jmp
cmp
ret
stc
fcmovu
jmp
lea
cmc
xchg
in
xor
jmp
hlt
fidivrl
hlt
leave
xlat
not
rcl
call
rcr
jmp
into
xchg
into
xchg
lds
xlat
in
lock
sarl
int3
ds
ret
rcr
mov
sti
lret
cmp
ror
icebp
addl
sarl
aad
loopne
fdivr
fildl
cld
xchg
fldln2
filds
les
fdiv
ljmp
aad
shl
shl
addl
xor
rol
lock
int3
cmp
lock
cmp
fiadds
loope
out
into
lret
test
mov
shl
out
ljmp
jmp
loop
in
ffreep
clc
and
in
in
iret
sar
in
enter
icebp
fxch
aaa
int3
repnz
iret
sar
ds
cld
call
movb
ljmp
xor
cmp
shl
cli
aam
fadd
cmp
lret
jmp
jecxz
or
cmp
sti
das
int
fldlg2
into
sbb
xrelease
mov
in
xor
mov
icebp
ss
shl
ret
jmp
clc
cld
out
cmp
lock
orb
lea
stc
xlat
icebp
in
cmp
lock
sar
xchg
icebp
test
jmp
xchg
test
out
leave
fdivr
aam
lret
into
shr
xlat
repz
mov
call
hlt
lret
cmc
leave
shl
iret
repnz
xor
hlt
cli
rcl
stc
ffreep
cmc
flds
rorl
aam
shlb
in
sar
sar
aam
call
cld
les
fcomip
xchg
icebp
fdivr
xor
shl
out
fcmovbe
call
ss
jecxz
testl
nop
repnz
fldcw
enter
in
fmul
ror
rcr
cmc
cmp
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
jl
in
push
jle
add
xlat
fdivrp
neg
cld
test
lret
cld
sti
icebp
leave
xchg
std
mov
jmp
jecxz
sar
call
sbb
clc
repz
call
test
jecxz
int3
ss
into
fdivr
out
in
ljmp
ds
in
fsub
mov
out
cli
fucomi
mov
sarb
call
in
out
cli
loopne
cld
stc
loopne
xchg
lret
xchg
xor
das
stc
jmp
lret
stc
rol
test
imul
loope
fdivrp
sti
lret
loop
cs
cmp
cmc
flds
in
sbb
shl
testb
mov
lret
int
shl
lret
leave
cmp
aad
cmp
xlat
aad
xlat
out
clc
ljmp
xchg
cld
int3
xchg
test
in
xor
aam
ss
fmul
jmp
repz
repz
lock
nop
in
aam
ss
repnz
sbb
decl
fadd
sti
mov
enter
cli
xor
roll
rorb
lock
leave
fmull
cmp
clc
xlat
cmp
ljmp
loope
cli
aam
sti
out
std
or
orb
hlt
cmp
int3
leave
leave
ror
rcr
test
stc
cmp
hlt
in
int3
lea
test
lds
fsincos
clc
fmul
rcl
iret
out
cmp
in
jecxz
fnstcw
test
xchg
adc
int
ds
lock
roll
testb
loope
xor
ret
lock
out
cmp
test
iret
faddl
int
fucomi
ficoml
loop
repz
cmc
icebp
fst
shr
ss
cli
in
enter
leave
xchg
ror
call
xor
clc
out
cmp
mul
aad
loopne
mov
mov
repnz
ljmp
mov
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
ds
sub
add
rcr
rcr
ds
in
call
ror
aam
out
imul
cmp
test
adc
rolb
sub
inc
loopne
shr
xlat
ss
xor
ljmp
xor
aam
movb
out
repnz
lret
test
mov
enter
fsubr
ror
loop
lock
call
iret
fstp
xchg
xchg
enter
rcr
cmp
fmulp
cmc
fcomip
movb
mov
mov
xchg
jmp
nop
leave
fcomi
cmp
in
test
hlt
xchg
mov
loope
xchg
mov
out
repz
cs
fstpt
cmp
sti
jmp
fprem
xor
rorb
popl
imul
rol
repnz
lock
out
int
ret
int
aas
rorb
loope
lret
and
xor
jmp
int3
repnz
idiv
div
incb
out
int3
in
jmp
leave
fisttpll
into
aam
rcr
stc
test
decl
mov
fcmovu
or
mov
xor
icebp
cmc
cmp
stc
out
sti
fidivrs
mov
fucomi
addl
cmc
fxtract
repnz
fcom
fildl
loope
xor
fucomi
xchg
out
xchg
int3
imul
int3
xlat
sar
std
lret
fildl
in
into
rolb
call
fdiv
rcl
xor
call
cmpb
std
into
jecxz
out
faddp
clc
xlat
fcmovb
fmul
nop
jmp
loope
loop
in
leave
fdiv
icebp
cmp
ljmp
in
std
mul
idiv
mov
std
std
orl
call
ret
out
iret
loope
fadd
repz
imul
mov
loope
loopne
in
aaa
loop
repnz
icebp
jmp
aad
jecxz
rcl
aam
fsubr
cli
in
lock
loope
lret
out
cmp
jecxz
shl
mov
jmp
ror
aas
int
int
jbe
repnz
out
outsb
jg
sbb
jle
cld
iret
enter
out
sar
iret
mov
ret
ljmp
icebp
loop
in
aaa
clc
ret
into
cli
stc
ljmp
cmp
out
enter
fdivr
cld
lret
lea
hlt
fidivrs
int
std
aas
inc
jecxz
div
add
jmp
cmp
in
aam
aad
ljmp
stc
ror
lret
incl
test
xchg
mov
int3
cmp
in
hlt
int
rcr
dec
stc
hlt
out
in
rorb
lret
xchg
iret
jmp
rcr
shl
fcomp
sti
or
repnz
incb
xchg
out
xchg
sti
in
cmc
jmp
idiv
cld
roll
std
cmp
add
nop
cmc
ret
out
fcmovu
rcl
jmp
int3
shl
iret
cmp
mov
ret
clc
in
mov
repnz
sti
out
int
xor
iret
ret
iret
repz
in
out
and
fists
stc
mov
aad
fnstsw
test
repnz
out
clc
ret
cmc
filds
xorl
cli
shr
in
loope
cmp
orl
xchg
aad
div
aam
ss
in
fucomi
icebp
xlat
ret
cli
std
cld
loope
cmp
nop
fsubrp
repnz
icebp
call
cmp
std
aaa
std
idiv
out
jecxz
rcr
fadds
lret
fisttpll
fldl2t
clc
test
fsub
repz
addb
into
jmp
loop
enter
ftst
divb
cmp
hlt
icebp
into
xor
mul
loope
cli
cld
out
shl
test
rol
lock
ljmp
cld
cmp
loopne
enter
int
ljmp
hlt
loope
xor
aam
int
aad
cld
rcl
aad
std
ret
sub
xlat
xchg
out
test
fdiv
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
in
aad
das
cmc
int3
repnz
aam
int3
cmp
rcl
mov
in
loopne
idiv
neg
fsubr
cmp
jmp
cmp
aad
test
fiaddl
in
imul
xor
lret
cmp
in
sti
loopne
fadds
or
dec
mov
cmc
call
out
cmp
or
in
iret
icebp
fcmovnb
sbb
out
ljmp
loop
lock
out
sar
ret
fadd
fildl
fptan
call
loop
call
fcos
jmp
clc
std
shl
ljmp
lock
xor
sub
fcmovbe
sti
sti
cmp
lock
call
into
loopne
fildl
shll
aam
int
xlat
ds
repnz
shl
xchg
xchg
out
int
iret
lea
loope
repz
aad
xlat
fdivrp
sarl
aas
rcr
cmc
loopne
mov
call
cli
shr
sti
in
jecxz
xor
clc
xor
sar
cmp
iret
aas
enter
out
mov
roll
sub
cmp
addb
idiv
xlat
out
xlat
std
rcr
in
xchg
loope
lock
lret
lock
cli
sarb
aas
ds
sti
stc
stc
shl
rcr
mov
fdivrp
xchg
lret
xchg
shl
mul
stc
aam
out
repz
fnstcw
cld
rcl
leave
int
adc
aad
aad
idivl
iret
fmul
cmp
xlat
cmc
testb
rol
mov
iret
enter
fnstsw
mov
imul
jmp
iret
repz
push
loop
call
fcoml
cmc
xor
iret
in
ror
int
jmp
out
mul
fimull
out
cld
cmc
fiadds
cmp
lret
fcom
fdiv
out
aam
lock
fisttps
vpshlb
aam
rcl
out
xlat
rcl
cli
cmp
hlt
mul
testb
loop
loope
orl
xor
cli
aam
xchg
mov
call
nop
std
out
jmp
clc
aad
fdivrs
aam
neg
xchg
jmp
mov
xor
cmc
ljmp
cmp
test
cmc
mov
in
out
out
fst
out
mov
xor
cmc
cmp
iret
clc
ret
inc
mov
mov
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
xchg
jns
lock
jle
add
cli
mov
int3
mov
popl
lret
enter
repz
icebp
out
ret
shl
cmp
in
cmc
shl
aaa
in
fnstsw
call
lock
aam
hlt
imul
enter
adc
mul
shlb
cmp
fmul
cmp
sti
sti
ret
xchg
mov
out
out
fst
ss
call
icebp
fcomp
loopne
call
aad
int
call
aam
out
cmp
enter
fidivrl
cmp
xchg
fsubrp
xchg
int
lret
jmp
fyl2x
jecxz
xchg
fadds
cmp
out
in
xor
cmp
std
loop
jecxz
neg
test
rorl
ror
not
fmul
ror
cmp
fldl
ret
repz
lds
sbb
in
jmp
int
hlt
fldlg2
int3
lret
icebp
iret
jecxz
fnclex
in
xlat
call
repz
lock
out
leave
xor
loop
aad
test
loop
cld
mov
xor
out
fnstsw
fmul
aad
shl
shl
sarl
call
fmul
leave
pause
xchg
int
rol
call
ds
cld
clc
xchg
idivl
fcmovu
incb
call
clc
fidivs
xor
aam
xchg
clc
fcmovb
test
nop
xchg
shl
ror
shr
out
out
aam
iret
cmp
fsub
rorb
fldl
repz
in
jecxz
ljmp
stc
cmc
icebp
xor
xlat
mov
call
ljmp
aaa
icebp
lret
cmp
hlt
cli
cli
jmp
test
jecxz
ds
ljmp
in
lock
in
in
hlt
jmp
cmp
addb
std
out
mov
iret
inc
hlt
aam
lret
rcl
imul
shll
iret
hlt
cli
sbb
aaa
cmpb
loop
mov
xchg
filds
hlt
in
iret
leave
stc
out
icebp
shl
add
ret
aas
in
nop
adc
ss
shlb
int
out
lret
test
lds
lret
leave
jecxz
out
fmull
int3
loope
ljmp
cli
fstp
cli
cmp
in
aam
test
filds
mov
in
je
or
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
or
nop
sub
jbe
jle
add
jecxz
enter
fnsave
fdivrl
sti
fcmovnb
fsub
ljmp
cld
out
out
fld
int3
sti
fld
lret
lret
loope
sti
iret
cmp
mov
lret
shl
shr
call
cmc
idiv
cmp
icebp
lock
aas
rorb
loope
out
test
ljmp
cld
shl
xchg
repz
in
loop
jecxz
jmp
enter
icebp
icebp
sar
cmp
rcl
addl
lret
in
in
ret
enter
mov
lock
cli
into
in
cmp
fucomip
loope
hlt
aam
ljmp
out
iret
loop
repnz
out
xor
imul
aaa
out
aad
ret
sar
xchg
call
jmp
xchg
iret
int3
sub
lock
rcl
out
in
ror
int
loope
fstp
rcl
loop
fdivp
xchg
out
in
mov
xchg
loop
jecxz
shl
rcr
jmp
jmp
loopne
aaa
neg
fstp
ljmp
mov
aad
jmp
sti
adc
aam
mov
enter
clc
lock
mov
shlb
out
cmp
into
leave
fucomi
sar
aad
neg
bnd
out
out
fiadds
iret
out
in
int
int3
cmp
rcl
cmc
rcr
rol
jmp
into
nop
in
jecxz
call
enter
rcl
xor
fnstcw
repnz
fadd
shl
sbb
in
mov
mov
xchg
xchg
nop
shl
aam
clc
jmp
stc
fldpi
cmc
and
std
fsubr
stc
leave
sbb
cmc
aaa
in
cs
cmp
loop
loopne
inc
clc
xlat
std
in
aam
into
lret
sti
sub
repnz
rcl
iret
jecxz
fldz
cmp
loopne
xlat
ret
les
fucom
fcomip
neg
shlb
hlt
shl
cmp
filds
fdivr
lret
mov
addl
out
cmp
cmp
std
cmp
clc
sti
fadds
in
fmul
fdivr
addl
aad
cmp
aas
stc
icebp
int
shl
stc
cli
and
xchg
out
int
lock
jmp
ror
out
fcmovb
in
and
in
clc
cmp
nop
out
aam
jmp
xor
sar
shl
rol
rcl
sti
addl
mov
repnz
jmp
call
jmp
fiadds
movl
rcl
fst
int
lea
cmpsl
ss
bound
jg
lods
add
loopne
loopne
in
loopne
add
xchg
xorl
shl
cmc
sar
aad
loopne
cli
iret
jecxz
fsqrt
leave
loop
sti
rorl
iret
xlat
jmp
out
cld
fucomi
rol
int
shl
ret
mov
clc
std
loopne
jmp
fsubrp
mov
in
iret
cmc
sub
out
mov
orl
out
cli
xor
ljmp
hlt
aad
xchg
bnd
aad
loope
fdivp
mov
out
aad
out
iret
fdivl
xlat
fdivr
fdecstp
loope
sbb
mov
jecxz
mov
std
in
out
sub
xor
jmp
cmp
jecxz
loope
aam
xchg
into
or
nop
xor
xlat
sbb
icebp
out
shl
call
test
icebp
mul
xor
stc
cld
lret
stc
lret
aaa
cmp
fadd
aam
cli
fisttpl
xchg
out
test
mov
in
hlt
hlt
icebp
in
aam
ss
cmp
cmc
leave
loope
int
jmp
xlat
jmp
call
in
cmp
or
xlat
xchg
cld
jmp
into
fldz
out
loop
jmp
fidivl
xor
std
jmp
addl
fmul
mov
out
out
jmp
divl
lret
xor
cmp
rol
in
in
loop
cmp
mov
call
das
das
sub
cmp
cmp
stc
in
shl
xlat
roll
ret
loopne
lock
test
icebp
ret
ret
sarl
out
sar
aas
ds
fcom
mov
fcomp
mov
fucomp
aam
cmc
icebp
ss
rcl
fdivr
int
xlat
mov
cmp
out
fildl
xor
lret
out
in
call
aam
test
xchg
out
mov
lock
lret
adc
sub
iret
in
repz
shl
fmulp
idiv
loope
ret
out
int
fistl
hlt
out
enter
xor
int3
in
cmpl
in
mov
call
xor
xlat
call
aad
fpatan
into
hlt
test
test
ret
fcmovnbe
in
out
loopne
lret
nop
into
loopne
divb
lret
lret
lret
test
test
test
jmp
sub
call
cmc
sub
les
cmc
sar
repnz
out
fstp
movl
test
mov
xchg
jb
add
add
add
add
movl
enter
int
lds
mov
std
jnp
jle
add
out
ret
shl
xor
xor
into
rcr
in
rcl
cli
dec
cmp
addl
xor
fdivs
int3
div
push
inc
stc
test
fcmovb
sub
loop
das
loop
sub
ds
cmp
not
and
jmp
jecxz
mov
aam
rcr
fiadds
rol
mov
fsub
cmc
repnz
iret
cmc
stc
repz
ds
loop
loop
repz
enter
enter
xchg
xchg
in
iret
lock
icebp
aad
aad
aad
cmp
fidivl
ret
icebp
fcmovb
mov
sbb
mov
jmp
call
cmp
out
jmp
aad
aad
faddl
call
aaa
xor
repz
call
cmp
hlt
test
test
test
int3
repz
xor
fcmovbe
sarl
sar
hlt
ds
shll
rol
fdivr
clc
lret
loope
out
leave
in
out
lds
repnz
stc
repz
jmp
and
cli
idiv
loop
jmp
jmp
rorb
jmp
lret
cmp
shl
cmp
xchg
test
clc
test
into
nop
nop
sar
mov
xor
icebp
in
cmp
xlat
ljmp
hlt
loopne
stc
ret
jecxz
out
fdivp
in
rclb
leave
repz
out
ljmp
loopne
mov
fdivr
into
nop
out
rol
xchg
shr
xlat
lds
fstp
fdivr
fistpll
les
aad
les
xrelease
icebp
out
int3
hlt
fdivrl
loope
ret
jmp
cmp
or
aam
lret
sti
shll
jmp
test
hlt
ret
sti
jmp
int3
out
jmp
out
lock
in
in
ljmp
ret
cli
jecxz
vshufpd
clc
stc
in
lret
in
xor
out
rcl
out
out
aad
or
fsub
fucomp
loop
stc
jmp
shll
jecxz
call
ds
hlt
cmc
icebp
jmp
jmp
xchg
incb
xlat
in
icebp
fnstsw
ret
into
test
repz
aam
lret
loopne
int
mov
xor
repz
shl
out
cli
fst
lret
addl
lock
call
clc
adc
xor
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
sub
add
add
loope
leave
call
int
enter
iret
out
in
ret
aaa
sarl
xor
fcomi
iret
cmp
lock
in
lret
fmuls
cmp
shr
out
clc
xlat
jmp
cli
lret
incl
div
lret
in
sti
xchg
xchg
hlt
call
std
into
ret
adc
jmp
out
mov
icebp
xor
aad
xor
std
icebp
in
cli
jecxz
rol
in
aad
jmp
neg
testl
xor
xor
leave
std
cmp
shr
ret
fstpt
stc
sti
xchg
int
call
ljmp
stc
xor
cld
in
in
rolb
lock
xchg
int3
out
mov
into
xor
ljmp
icebp
testb
aam
lret
int3
shr
xchg
iret
cmp
not
xor
int3
xlat
out
ss
repz
xlat
int
lock
fdiv
out
testb
int3
rol
jmp
jmp
neg
cld
xor
in
sbb
lret
cld
out
in
icebp
test
aad
cmp
shlb
hlt
sar
cmp
cmp
xrelease
aad
clc
out
ljmp
enter
in
rol
rcl
out
ret
repz
ret
xchg
xlat
xchg
adcl
out
ljmp
rcr
out
test
ss
ret
fincstp
jmp
out
aam
shl
fsin
aad
ljmp
jecxz
in
xchg
sub
clc
in
cli
aad
xlat
icebp
ljmp
xchg
hlt
jecxz
fucomi
lock
hlt
shl
xchg
rol
rcl
xor
fildl
shl
adc
mov
cmp
jecxz
cli
in
repnz
int
ret
mul
cmp
int3
aad
xor
cmp
loope
mul
std
mov
mov
lret
loopne
xchg
xchg
fstl
rcl
xor
in
mov
lds
shr
xchg
jmp
out
bnd
flds
div
aad
mov
call
lret
repz
shr
rcl
rcr
sar
shr
fcomp
int3
fcmovbe
test
xchg
in
call
std
cli
nop
nop
out
lret
not
fucomp
fdivp
dec
xor
aas
test
cmp
repz
loopne
out
xchg
xchg
aam
jmp
rolb
adc
jmp
ljmp
xor
jmp
aad
lret
enter
fcmovnu
push
icebp
ret
test
add
jle
add
xchg
hlt
repz
lret
jmp
repnz
clc
filds
mov
in
test
in
int
loope
cmp
std
repz
std
idiv
int3
fstp
ret
mov
stc
xlat
orb
rol
ss
cmp
cmp
cmp
stc
rcl
out
loop
rcr
mov
in
loope
rcr
in
jmp
enter
neg
lret
sti
shl
std
rol
xchg
jmp
ret
shr
repz
inc
hlt
imul
xor
cld
fcom
ror
ret
repz
loop
xlat
out
iret
int
into
test
int
in
aam
cld
lret
repnz
cli
ds
ljmp
enter
rolb
jmp
shl
fcmovnbe
cli
sarl
rcr
aad
mov
shl
xchg
cmp
aad
xor
out
sbb
ljmp
cmp
jmp
out
lret
lock
loop
jmp
xor
aam
fdivrs
mov
mov
xchg
in
in
mov
loop
into
aad
test
in
adc
clc
repnz
repz
test
dec
jecxz
rcl
cmc
shl
stc
xor
xor
stc
cmp
out
ror
std
mov
repz
aam
out
cli
into
fiadds
aad
aad
test
fsubr
icebp
faddl
in
fcmovnbe
rol
cli
fdivrp
int
repz
mov
cmc
iret
out
stc
cld
call
iret
xchg
neg
clc
enter
fistl
hlt
icebp
xlat
jmp
cmp
cmp
ds
addl
test
test
sti
in
cmc
out
call
out
out
cmpl
out
std
out
leave
mov
mov
loope
xchg
das
ret
into
mul
fucomip
cmp
rcr
rcr
cmp
out
loop
fimull
ret
out
hlt
jmp
xor
jecxz
icebp
fcos
cmc
jecxz
in
lea
lock
iret
fdivr
hlt
dec
lret
loop
out
jecxz
decl
in
lret
loopne
xor
sar
in
cmp
faddp
xor
loop
aaa
ds
icebp
std
fmulp
stc
in
rclb
mov
out
cli
shll
sti
sarl
test
cmp
xlat
enter
jmp
pushl
rcr
stc
jmp
rol
aad
std
shl
rcr
shl
jmp
mov
loope
int
rolb
vpsrlq
loopne
loopne
add
mov
mov
xor
jmp
enter
int
enter
push
add
adc
mov
add
add
jmp
sar
aad
cmc
cmp
fucompp
call
nop
in
jmp
into
xlat
xor
jmp
cmp
stc
repnz
out
clc
aam
clc
call
fildl
rorb
loop
aam
jmp
cmp
loopne
into
sti
cmp
aaa
hlt
hlt
fiadds
sti
out
and
aam
xchg
aas
repz
into
in
lret
aad
cmc
sbb
stc
lret
aam
mov
ror
loop
jecxz
repz
cmp
rcr
shl
shl
out
mov
in
cmc
cld
loope
into
orl
aam
shl
int
std
enter
iret
loope
loope
rolb
cli
cli
lret
in
icebp
mov
ret
fucomp
out
in
int3
std
sar
clc
ffreep
aas
rol
hlt
add
sti
fsubp
shl
xchg
icebp
sub
sar
out
ror
cmp
rol
clc
ret
loopne
icebp
jecxz
in
out
xor
in
xor
std
cmp
in
in
loopne
out
enter
enter
cli
rcl
in
aam
ljmp
stc
fdivr
aas
shl
cmpl
out
call
enter
ljmp
xlat
mul
ret
rcl
jmp
ffree
in
icebp
leave
leave
std
test
iret
out
cmp
cmp
xlat
xor
aam
sti
fld1
shr
fisttpl
in
shr
jmp
iret
cmp
cmp
cmp
icebp
out
test
cmc
mov
test
xchg
int
in
in
out
cmp
iret
cld
lock
sti
loop
int3
jecxz
rol
xchg
test
hlt
jmp
shl
xor
leave
aam
in
testb
cli
out
enter
loope
shr
aam
lock
aad
aaa
clc
ret
clc
roll
loope
out
enter
orl
cmp
icebp
cmp
lock
idiv
cmp
out
out
fldz
clc
fcmovu
fmul
rorb
int
fcmovnbe
cmp
lret
iret
iret
aad
mov
mov
out
ret
ficoms
in
stc
in
ljmp
aas
rol
aam
stc
stc
enter
fsubp
orb
cli
out
fdivrp
sarb
in
fcmovnu
icebp
test
loope
fucom
int
bnd
jmp
cli
xor
lock
aad
mov
ret
ljmp
out
sub
into
shl
in
cmp
out
cmp
frstpm(287
test
aam
loopne
jmp
jmp
aas
lret
fcmovnu
xlat
aad
jno
loopne
loop
cmp
add
add
fdivr
out
out
sub
aaa
shl
sti
aas
cmp
ret
stc
in
in
out
fiaddl
xchg
xchg
rcl
xor
loope
aas
jmp
std
std
aad
cli
rol
orl
mov
loop
cmp
stc
leave
cmp
std
out
shl
loopne
aad
mov
call
in
xchg
in
xor
xor
lret
cmc
xor
into
clc
fcmovu
addl
fmuls
jmp
xchg
ss
loope
cmp
jmp
aad
cmc
cmp
out
rcl
mul
mov
int
loope
xorl
xor
ror
icebp
fstp
stc
roll
enter
mov
int3
shl
mov
aaa
ss
fcmove
inc
cmp
xchg
enter
add
in
loope
int
shl
xor
xor
shl
aam
aam
fmul
icebp
std
cmp
int
loop
rorb
aam
icebp
fdivr
call
enter
int3
cli
ret
xchg
out
mov
mov
test
cld
loop
adc
fmul
call
cmp
cmp
in
cli
test
stc
clc
idiv
loop
enter
test
in
xor
cli
cli
xor
cmp
cmp
adc
in
call
lock
in
int3
imul
fdivl
call
int
in
mov
fdiv
cmp
sti
lock
fmul
lret
out
sar
shlb
and
xchg
ljmp
in
hlt
xor
cmc
int3
fstpt
in
icebp
ret
testl
mov
test
jmp
sti
jmp
repnz
aas
cld
call
clc
lock
enter
lret
mov
sar
xor
cmp
lock
leave
or
jecxz
clc
mov
ljmp
out
orl
hlt
sarb
cli
rcr
in
cmp
aad
fsubr
ftst
xchg
ljmp
lret
cmp
xlat
clc
push
idiv
cmc
testb
xchg
xor
xor
cld
in
faddl
fiaddl
call
xor
lret
sar
rolb
std
hlt
loop
ljmp
ror
xor
ss
cld
fldpi
int
test
addl
or
out
xchg
nop
call
in
in
out
rorb
mov
jmp
into
enter
int3
fwait
outsb
mov
pop
cmp
add
add
cmc
fadds
icebp
vpsllq
fmul
loope
out
iret
xchg
sub
sub
ret
jecxz
lock
int3
aam
out
ds
out
adc
fldlg2
xchg
in
test
in
lret
in
call
jmp
loop
out
shl
stc
fldl
nop
sbb
test
lds
fdivrp
cmp
clc
sar
repnz
add
out
int3
lock
in
xor
idivb
sti
fsub
into
clc
loopne
aam
mul
leave
fldl2t
fsubp
mov
cmc
iret
call
xor
fcomp
jmp
cld
into
loopne
repz
sbb
aad
ljmp
in
call
cmp
idivl
cmp
jecxz
cld
in
out
out
sub
loopne
xchg
xchg
into
addl
cmp
out
fchs
sti
shl
lock
or
loopne
in
fmul
jecxz
int3
cmc
int
xor
aaa
lret
clc
leave
loope
jecxz
loop
enter
jmp
in
into
lret
cld
fistl
ljmp
cmp
into
aam
cmc
cmp
clc
mov
in
out
incb
into
shrb
enter
jmp
loopne
rol
loop
aad
rcr
cmp
int3
cmp
out
out
loope
shr
ret
out
cmp
fildl
fdivrp
jecxz
jmp
xchg
out
enter
ss
leave
xor
sti
iret
or
xlat
ficoml
lret
ret
sub
xlat
leave
cmp
lock
std
in
div
std
test
or
ljmp
test
out
out
fincstp
cmp
iret
loope
repnz
shr
sbb
repz
in
xchg
mov
xor
out
imul
fcmovne
xlat
jecxz
in
loopne
test
jecxz
loopne
xchg
lret
jecxz
subb
lock
lret
cmp
fistpll
and
jecxz
shl
xchg
lret
mov
xchg
fbstp
lret
out
ss
cmc
stc
cmp
mov
in
call
dec
adc
aad
in
fnstenv
in
fsubr
sarb
sar
inc
loopne
or
mov
shll
repz
aam
cmp
sar
in
inc
mul
jmp
lret
test
cs
call
jmp
cli
int
stc
idiv
mov
fsubr
mov
lock
loop
xor
aam
shr
iret
cmp
fdivrp
cmc
ret
jecxz
clc
sub
lock
jmp
leave
iret
int3
into
fstp
pushf
mov
arpl
lods
add
mov
out
fndisi(8087
lret
aad
sub
leave
xor
cld
cmp
out
cmc
out
sarb
jecxz
fucomp
enter
in
jmp
out
repz
cmp
lock
aam
aam
in
fstl
xchg
aaa
lret
icebp
lock
icebp
into
int
loopne
int3
in
loopne
ret
call
repz
fildl
aam
cmc
iret
lret
shl
in
icebp
into
cmc
cmc
loope
out
xchg
std
ljmp
repz
aad
ror
les
fst
into
adc
cmp
sbb
mov
std
mov
xorb
in
fcmovnu
loope
out
hlt
in
xlat
rol
sbb
mov
iret
loope
lret
fidivs
shr
fdivl
leave
sar
shl
fucomip
cmp
cld
call
sbb
int
loope
rclb
xor
in
hlt
clc
loopne
ret
into
in
clc
shl
loope
cmc
enter
test
xor
repnz
sarb
xlat
ftst
cld
rorb
stc
lret
test
repz
xabort
jmp
vpmaddwd
cmp
fninit
into
std
ret
std
enter
mov
int
xchg
loope
xchg
ljmp
cli
out
ljmp
repnz
jecxz
mov
loope
call
mov
das
hlt
fsincos
lret
movl
hlt
aad
idiv
stc
xchg
out
jmp
enter
xor
fstp
fdivrl
lock
in
out
ljmp
shlb
in
fadd
cmc
cld
clc
rcl
cmp
sbb
vpextrw
incb
lret
out
iret
in
ret
in
aaa
leave
idivb
icebp
movl
fst
out
jecxz
aad
in
enter
repnz
stc
repnz
repnz
icebp
hlt
in
xchg
xchg
leave
jmp
test
loop
repz
in
fstpt
int3
clc
fcmovbe
in
in
testb
cli
fmuls
aad
jmp
out
shrl
idiv
call
icebp
std
cli
rcr
aam
xchg
out
rcl
shl
repz
xor
cli
loope
ftst
icebp
les
test
leave
lock
cmp
cmp
in
std
ds
cmp
rol
ljmp
aad
leave
jecxz
leave
cli
cmp
dec
lret
lock
aas
fsub
in
cld
leave
ffree
fdivp
icebp
orb
dec
mov
add
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
inc
mov
push
add
add
repz
cmp
loope
div
fdivr
cmp
jecxz
leave
fyl2xp1
enter
int3
fcomip
shl
jecxz
rol
das
cmp
fcom
std
out
std
loopne
out
test
shr
out
ret
ljmp
rcl
not
fsubr
aaa
loopne
stc
cmc
lock
not
test
enter
stc
cli
and
in
sar
xor
rcr
fmul
hlt
cmp
fcmovu
cmc
repz
fstp
ljmp
repz
loop
fsubrp
shll
jecxz
call
lret
sti
cmp
repnz
jmp
jmp
lret
leave
mov
mov
hlt
in
fcmovnbe
cmp
sbb
ret
stc
fdivr
stc
mov
mov
out
shr
jmp
aaa
out
aad
cmc
iret
stc
fdivrp
or
aam
in
enter
cli
jmp
out
int3
hlt
loope
aaa
into
jecxz
in
cmp
int3
stc
cmp
repnz
mov
in
fdivr
fldl
cs
ror
out
fld1
repnz
cmp
xlat
xlat
cmp
mov
sti
fdivr
icebp
fucomip
jmp
int
jecxz
enter
or
loope
sar
clc
orb
rcr
lock
in
out
iret
out
out
in
xor
shl
jecxz
roll
test
in
addl
lock
iret
xor
into
aaa
loop
sarb
ret
cmp
fucomip
mov
test
mov
shl
xor
cli
clc
repnz
xlat
std
rcr
addl
faddp
xchg
xchg
fxch
rcl
sti
int3
repz
in
fdiv
in
in
fninit
in
mov
in
int3
int3
aam
idiv
fdiv
call
cmp
out
sti
lock
idiv
cli
enter
fstp
xchg
cld
xor
xor
fidivrl
out
xor
repnz
cld
int3
in
loop
xor
loopne
mov
int3
sub
leave
les
cmp
in
aaa
lret
lock
test
and
call
xchg
std
in
nop
shl
xlat
fucomi
xlat
xlat
leave
cmp
fndisi(8087
jecxz
ds
call
jmp
jmp
jmp
fsub
sub
dec
xlat
shl
idiv
cmc
xchg
jecxz
hlt
fsubrp
jmp
in
cld
xlat
in
repnz
and
clc
xor
ljmp
aad
into
aad
lret
sti
mul
lock
jmp
out
cmp
clc
out
loopne
test
lock
hlt
clc
cmc
loopne
mov
jmp
enter
aad
leave
fnsave
cmp
pushf
cmp
bound
add
add
leave
sti
test
out
int
lret
sti
iret
call
test
call
lds
xchg
mov
enter
hlt
loopne
fcmovnu
loop
stc
in
fadds
in
loopne
push
rcll
out
cli
enter
clc
ror
repnz
aad
mov
orb
fistl
shr
repz
xor
fdivrp
in
fsqrt
out
repnz
rcr
mov
xchg
xchg
call
xor
loop
fidivrl
jmp
loopne
xor
faddp
loopne
rol
stc
ret
in
mov
cmc
mov
call
xorb
sar
frndint
orl
xchg
in
in
in
xchg
in
jmp
in
in
out
cmp
shr
jmp
jecxz,pt
ret
xor
adcl
fcomp
cli
int
in
imul
hlt
loope
lds
test
xchg
loop
subl
ret
int3
cli
out
ljmp
rcr
in
orl
leave
iret
test
aaa
aam
in
sti
sti
cmp
in
cmp
out
loopne
fmuls
out
xlat
jmp
call
out
shl
int
ds
stc
mov
ret
call
mov
in
jmp
xor
xlat
ljmp
repz
cmp
int
fcmovnb
div
rcl
incl
adc
fincstp
cmc
lret
in
lret
cmc
fcmovnbe
fiaddl
jmp
mov
in
into
mov
into
jmp
jmp
cmp
icebp
in
out
xlat
aad
cmp
fisttpl
fbstp
aam
ljmp
jecxz
ret
icebp
loopne
fdivrp
in
out
fcmovu
int
icebp
fmulp
ss
cli
in
cmp
fmul
int
test
adc
mov
out
xchg
out
ss
int
cmp
lret
sar
repz
ret
icebp
cmp
lret
lret
cli
mov
test
iret
ret
jmp
into
sarb
out
cmp
fdivrs
fisttpll
int
in
jecxz
out
adcb
fcomi
cli
clc
cmp
div
loopne
cmp
aam
sti
xchg
mov
xlat
leave
icebp
in
enter
repz
les
fimuls
mov
into
shl
into
shll
aam
neg
hlt
fstp
shl
xchg
sti
fmul
iret
in
repnz
xchg
in
icebp
lds
aam
test
je
jmp
mov
int
sub
movsb
adc
jle
add
lock
fdivrl
cmp
cmp
fcmovb
flds
sti
out
leave
std
out
std
out
rcll
jmp
fidivrs
loop
rol
addl
leave
loopne
jmp
jmp
out
shrl
aad
call
jmp
adc
aad
cld
out
xlat
int3
and
iret
repnz
shl
cmp
hlt
jmp
into
ret
xlat
loope
test
xor
loop
call
mov
ror
cmp
lret
cmc
fldl2e
loopne
ror
rolb
loop
in
int3
mov
xor
xor
enter
hlt
idiv
ret
clc
jmp
fcmovnb
in
and
test
rcl
cmp
lock
aad
out
aad
ret
push
loop
mov
cld
repz
int
iret
clc
cmp
faddl
cmp
jmp
int
stc
fcoms
test
shlb
enter
ror
aas
icebp
in
rol
stc
aam
in
test
enter
nop
int3
fisttpll
out
vpsubusw
lret
aad
in
test
sar
cmc
mov
lds
icebp
lret
ror
fdivs
cld
ds
cmp
loop
jecxz
sar
std
fildl
icebp
sti
ljmp
icebp
ss
int
sbb
aas
cmp
add
jecxz
loop
clc
xlat
loop
fldln2
xchg
ljmp
lock
ds
in
cld
loop
xlat
out
xlat
ds
in
std
mov
ret
in
jecxz
int
loope
lock
xlat
dec
shl
out
stc
cmp
neg
in
xlat
fisttpl
xchg
into
shr
out
cmp
aad
lret
int
ds
addb
loope
sub
aam
sub
in
cld
out
int
jmp
loop
out
sti
sarb
xrelease
leave
jmp
fucomip
leave
jmp
jecxz
fstpt
xor
ds
rolb
clc
xchg
mov
rolb
xor
xlat
repz
rcl
jmp
out
adc
rcl
shl
add
sar
ljmp
xor
in
fsub
cmp
loopne
aam
rolb
fcmovnu
in
lret
loopne
xchg
cmc
call
das
in
loopne
addb
ljmp
mov
in
out
rol
jmp
das
hlt
repz
aas
int3
out
shl
fsubr
xchg
shl
in
int3
out
cmc
enter
iret
iret
xor
enter
loopne
xlat
test
xor
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
out
daa
rcll
add
add
fstp
shl
leave
fcmovu
shr
repz
xlat
cli
ror
xor
loopne
aas
into
sar
mov
mov
test
out
jmp
jmp
in
sar
sar
xor
cmp
icebp
into
call
out
into
loope
in
and
call
fdiv
fcmovbe
test
out
test
xchg
icebp
int3
shl
hlt
into
enter
fidivrl
cmc
xlat
ret
stc
xchg
aam
xchg
idiv
lock
in
lea
xor
xor
aas
fcomip
hlt
cli
ds
test
lret
mov
out
mov
xchg
call
xor
ljmp
fmulp
xchg
loope
jmp
mov
lret
xchg
std
loop
iret
clc
into
rcl
hlt
xor
stc
ror
cld
int
xlat
sarl
in
jmp
ljmp
adcl
call
fcmovnu
aas
out
shl
in
jmp
test
xchg
in
out
xor
out
in
enter
rcr
fdiv
cld
ljmp
ljmp
into
clc
xor
xor
cmp
lock
loopne
jmp
call
test
xchg
fidivs
out
xor
iret
aas
std
cmp
fcmovbe
xchg
clc
enter
fsub
out
out
or
aaa
repnz
out
fcompp
in
iret
repnz
aam
clc
imul
cli
ljmp
hlt
icebp
mov
aad
cmc
clc
xlat
out
aas
iret
lret
aad
loopne
ret
call
call
lret
fsubr
xchg
xor
iret
sar
clc
in
aas
sar
test
aad
sub
call
in
das
fsub
sti
call
roll
ret
loopne
mov
jecxz
fiadds
out
xor
fcmove
xor
fbstp
fucomp
cmp
jecxz
sarb
repnz
sar
out
int3
jecxz
in
ljmp
cmp
cmp
fmulp
stc
aam
ret
lock
std
icebp
loope
jecxz
jecxz
loop
repnz
loopne
cmp
ds
div
jmp
in
xchg
out
dec
iret
lock
loop
jecxz
inc
sar
loopne
stc
out
mov
iret
orb
rcl
ret
ror
xlat
cmp
xlat
fsubp
rol
aas
movb
in
xchg
nop
sub
hlt
ss
cmc
leave
cld
fdivr
in
in
repz
out
in
mov
xor
inc
adc
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
adc
cmp
jle
sti
lret
leave
aam
rcr
ret
rcr
out
fcmovnu
test
lock
jecxz
cmp
cmp
fbstp
std
xchg
xchg
loop
aad
out
or
fucom
out
icebp
xor
hlt
hlt
jmp
fdecstp
cld
mov
xlat
clc
fprem
fsubp
out
mov
int3
int
xor
jecxz
stc
roll
fimuls
in
xchg
test
lret
into
icebp
sti
cmp
test
ror
stc
in
fildl
loope
xchg
out
sub
clc
repnz
aam
out
mul
into
in
loop
mov
xchg
loope
in
adc
leave
sti
neg
shl
in
mov
rol
fimuls
in
repnz
pause
iret
das
jmp
call
icebp
in
lock
xlat
loop
addb
popl
cmp
cld
cmc
in
fnstcw
fdivrl
into
cli
aad
adc
ret
in
loope
iret
out
mul
loope
in
not
cli
out
jmp
aam
mov
mov
or
enter
mov
xchg
int
in
divb
jecxz
in
std
hlt
ljmp
ret
out
test
icebp
mov
in
xchg
in
cmc
out
aam
fbstp
jmp
in
aas
cmc
roll
lret
fcmovu
out
fst
das
das
enter
lock
fld
cli
sarl
mov
enter
test
xchg
fisttpl
in
ret
cmp
aad
hlt
out
lock
sti
ret
std
frstpm(287
test
fmul
int
fdiv
rol
xor
in
fadd
xor
fucomp
test
ds
out
loop
jmp
test
icebp
into
clc
xor
int
leave
fiadds
fucomi
xlat
mov
mul
int
lock
xchg
xchg
out
aam
sarl
xor
icebp
xor
ret
ret
orl
call
shr
aaa
shll
cmp
cld
shl
cmp
fiaddl
xchg
fcmove
leave
stc
int
mov
sub
fs
add
push
add
add
aam
enter
fldl
push
xchg
xchg
mov
cmp
add
add
repnz
in
jmp
ds
rcr
push
xchg
in
call
cld
mov
int3
loop
repnz
repnz
shr
icebp
lds
hlt
leave
leave
lret
lea
enter
ror
int3
clc
out
into
out
cmc
and
shr
testb
rcl
loope
das
sub
icebp
iret
xor
stc
ljmp
xlat
std
test
jmp
out
loope
clc
int3
cli
lret
cmp
int
in
repz
ror
out
cli
xchg
cli
icebp
cld
xchg
loop
fsubr
jmp
fsub
int3
clc
ds
cld
loope
lock
orb
fstp
out
cli
addl
shlb
cmp
neg
repnz
not
enter
or
lret
fst
loopne
into
lock
rcr
int3
rcr
shl
test
stc
test
fst
nop
loopne
fdivrp
mov
aaa
sub
cmp
lock
xlat
dec
cmpb
rcl
mov
ds
lret
fildl
icebp
loopne
lret
xor
cmp
fsubp
fldl
loope
jecxz
xchg
out
ljmp
xlat
leave
ljmp
hlt
rol
sar
std
mov
mov
test
loopne
loop
ret
xor
rcl
out
cld
out
aaa
idivl
out
aaa
out
aam
fmul
std
stc
int3
decb
or
rol
iret
cmp
fistpll
sar
aam
cmp
idivl
loopne
call
loope
div
das
cld
cld
lret
fcmovne
fcomip
repz
xlat
cli
test
ffreep
out
sti
sti
cld
addb
out
aad
out
aad
into
sbb
ds
repz
loope
fstp
cli
loopne
repz
ror
sub
cs
cmp
fdivr
mov
out
nop
cmp
mov
in
ret
rcr
sar
call
sarb
and
jmp
repnz
fsubrp
in
xor
in
aam
enter
rcr
ret
lret
test
pop
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
mov
jo
negb
jle
sti
icebp
xchg
fiadds
aad
cmp
cmp
incl
aam
cmp
mov
xchg
ret
leave
fcom
idiv
int3
fildl
stc
xlat
mov
hlt
out
cld
in
ror
aaa
into
clc
stc
cmp
cmp
rcr
repnz
fsin
xchg
lock
in
aas
stc
xor
cmc
xor
cmp
cli
int
loop
test
cmp
fld
test
enter
call
xor
out
fdivr
fcmovne
in
test
xlat
jmp
mov
mov
jmp
jmp
aad
enter
into
ds
sti
out
rol
imul
loop
addl
xor
into
into
in
int3
cmp
incl
rol
ror
mov
out
aad
jmp
xor
bnd
call
rcr
repz
loope
and
in
out
xlat
loope
int
out
lret
stc
xlat
cmp
aaa
ret
fsub
xlat
jmp
icebp
loope
roll
fscale
out
cmp
jecxz
in
shl
aad
aad
leave
int
sti
in
fcomip
out
aam
enter
cmc
int3
cmc
cmp
fadds
ret
aad
xchg
mov
xchg
int
out
lock
jmp
not
cmp
lret
fdivrs
iret
cli
idiv
idivl
fcomp
in
enter
xchg
aad
in
jecxz
shr
shl
out
rcl
loop
test
orb
icebp
popl
repnz
cmp
fidivrs
xlat
stc
std
loop
repnz
rcr
mov
stc
in
shl
mov
repz
xlat
cmp
cmc
imul
aam
cli
idivb
cmp
leave
mov
mov
loopne
test
roll
rcl
fldcw
stc
ds
fdivrs
lock
in
cmp
cmp
clc
cld
loop
test
hlt
mov
aad
cmc
shr
clc
sti
cmp
fildl
ret
jmp
int
stc
fldl
xor
cmp
xor
iret
in
ljmp
mov
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
incb
rcr
faddl
fld
fcmovb
aam
test
rolb
rol
call
mov
out
fninit
ljmp
hlt
cmp
repz
addb
in
faddl
jmp
xchg
cs
repnz
lret
ror
call
stc
aaa
cmp
aam
cmp
jecxz
in
nop
pushl
int3
in
icebp
cld
cmp
aas
in
rcl
cmc
ds
stc
xlat
loop
sti
loopne
iret
cmp
rcl
fcom
jmp
xor
fcmovbe
std
filds
fcomp
nop
shr
in
in
lret
jecxz
leave
call
fnstcw
rolb
aas
fsub
aam
incb
aad
shll
hlt
out
cmc
lret
ss
fcmovnb
and
fsubrp
cmp
sub
mov
jmp
decb
fdivr
xlat
ss
aam
ror
loopne
test
fadds
test
call
lret
cmp
cmp
lock
idiv
ffreep
aad
mov
orl
lret
iret
leave
test
rcl
ret
decl
jmp
or
into
xor
call
push
rcl
icebp
fcmovnbe
xlat
aam
xchg
addl
enter
fxch
ds
xlat
jecxz
loop
sar
aam
lret
enter
cli
rcl
xchg
enter
in
out
ss
repnz
jecxz
adc
lret
add
loop
repnz
repz
shll
fptan
hlt
xlat
std
sar
hlt
shr
icebp
into
shr
cmc
leave
add
jmp
push
out
call
into
xor
cmp
repnz
call
fimull
mov
hlt
shl
into
shll
ss
cld
cmp
rolb
std
loop
loope
loop
mov
cmp
out
cli
loopne
cmp
repz
aas
adc
fdiv
neg
loopne
out
decl
aam
shr
cmp
aad
mov
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
inc
pop
repz
add
add
call
ffree
fucom
fsub
loop
out
in
fucomip
addl
cmc
xor
fdivrl
aam
sub
adc
adc
enter
xchg
leave
hlt
out
xor
rol
aaa
hlt
testl
int3
out
repnz
iret
mov
in
mul
sar
call
imul
lock
fsubp
ffree
fsubr
int3
std
mov
movl
out
cld
enter
stc
rcl
test
sti
out
in
loop
iret
icebp
repnz
in
cld
rcr
sarl
xor
jmp
in
in
fcmovnu
fsub
cli
stc
fucomi
icebp
fimuls
fcmovb
into
rcl
in
loopne
aas
into
adc
fiaddl
jmp
cli
in
fsubrp
shl
lock
xlat
jmp
stc
iret
in
call
out
out
mov
in
jmp
mul
out
shl
out
ret
aas
shl
rcr
and
lret
jmp
ffree
loopne
in
in
out
clc
lret
cmp
aas
neg
ljmp
fucomp
in
call
int3
addl
aam
out
sti
leave
cmp
iret
f2xm1
cmp
cli
cmc
fincstp
jmp
ljmp
xlat
iret
jmp
icebp
cli
loope
xchg
hlt
call
int
in
out
xor
stc
sti
xor
roll
and
sar
sbb
ffreep
xchg
icebp
xchg
mov
in
call
ror
hlt
loop
std
cmp
flds
lret
int3
aaa
call
xor
sar
cld
in
neg
enter
or
in
adc
clc
out
iret
rcr
cmp
cmp
ret
out
mov
xor
iret
int
into
xchg
aam
ret
cmp
shl
div
loop
aam
aam
cmc
test
out
fcmovnu
int
fldpi
orl
hlt
aam
fidivrl
cmp
into
fidivrs
stc
stc
cli
ds
hlt
in
hlt
fucomp
std
test
sti
loop
mov
lock
mov
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
fstpt
sar
in
shl
hlt
incb
icebp
fcmovne
out
in
repnz
loop
in
int
shl
ds
out
aas
repnz
sbb
test
fldl
aas
icebp
cmp
in
aas
aam
loope,pt
aad
mov
loope
ds
loop
loop
iret
or
xor
hlt
lock
cmp
aaa
ds
cli
movl
shl
sti
ror
fptan
shr
xor
movl
sti
jmp
das
shl
neg
xor
loopne
in
repz
jecxz
mov
out
mov
ljmp
jmp
idivl
in
aad
test
ror
int
in
fucomip
mov
jecxz
cld
out
cld
fstpt
cmp
repz
stc
xor
in
les
mov
mov
in
sub
cmpb
fadds
mov
fldl
out
loopne
xchg
enter
hlt
icebp
jmp
fxch
lock
loopne
out
fiaddl
out
aad
out
shl
ror
out
xor
ret
xchg
test
fimull
in
call
shr
ror
into
das
out
fst
lock
rcr
in
stc
in
fucom
xchg
rcl
icebp
out
xor
xor
xor
cmp
aad
cmp
xchg
jmp
shl
xchg
in
xchg
into
out
idivl
cs
aam
aas
fst
aam
clc
stc
loope
jmp
int
fcomi
popl
out
out
idivl
cmc
xlat
cld
rol
ret
test
lret
in
jmp
ljmp
call
stc
sarb
iret
in
addb
lret
xchg
fimuls
in
fdiv
cmp
fadds
and
clc
fmul
out
test
ljmp
cmp
ds
aas
out
fdiv
out
std
shl
enter
lock
add
movzbl
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
rclb
fisubs
add
add
enter
in
xor
jmp
stc
fldl
aam
iret
xchg
loopne
xchg
shr
in
sar
shl
cld
fdecstp
bnd
rorl
out
lret
rclb
loop
ljmp
out
cld
jecxz
and
fcmovnu
ret
ljmp
call
jmp
rolb
test
xchg
xlat
xlat
test
iret
xchg
mov
repnz
stc
jmp
stc
ds
ret
sarb
mov
incb
lret
shl
ror
xlat
lret
sti
ss
lret
ljmp
sti
in
decb
loopne
cmp
icebp
iret
in
ljmp
in
cmp
out
vpaddb
into
lret
sti
loopne
hlt
call
xor
ret
in
loopne
sti
cmp
ror
addl
clc
mov
adcb
sub
int
aam
shl
repnz
std
stc
fld
in
fstp
fucomip
fisttpll
icebp
shl
lock
cmp
sti
repz
fchs
sbb
in
testl
xor
aam
cmp
fsubrp
cmp
cld
iret
out
stc
fadd
sti
or
cli
out
cmp
ss
icebp
xor
fucomp
into
fnstcw
jecxz
into
lock
aam
hlt
leave
call
sti
lret
in
nop
mov
icebp
loop
ror
out
aaa
xor
lret
sarl
into
fdivr
enter
cmp
mov
test
cmp
ds
fst
ror
jecxz
out
ds
xlat
xchg
mov
xchg
lret
shl
cmp
xlat
xor
in
ds
fcmovnb
in
mov
xchg
repnz
idiv
dec
sarl
lret
fildl
in
loopne
cli
clc
std
int3
repz
lock
vpmaddwd
clc
fchs
cmp
hlt
aam
xchg
faddp
in
mov
repz
clc
aam
into
xor
fcomi
test
enter
jecxz
xchg
ret
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
adc
aas
jb
sub
jle
add
repz
mov
cld
sti
ljmp
repnz
incl
cld
mov
rcl
in
mov
icebp
ljmp
jecxz
fildl
mov
fucom
test
sti
fcmovu
jmp
cmp
icebp
div
in
cmc
cli
int3
sbb
aad
ds
aam
mov
into
jecxz
add
hlt
xor
enter
loop
in
aad
ret
in
mov
mov
jmp
call
les
jmp
fneni(8087
sti
cmc
cmc
fdivrl
ret
aam
roll
cli
call
shl
out
leave
cmp
aam
cmp
cld
fdivrp
addb
ffreep
xchg
hlt
in
cmp
into
out
in
fsub
idivb
inc
cmp
cmc
in
fld
mov
mov
icebp
rcl
ret
fdivl
rcr
aad
test
clc
cmp
inc
fucomip
fucom
lock
fdivrl
xor
into
cmp
out
cli
fucomip
leave
xchg
fcmovbe
xor
ljmp
in
call
aad
fildl
cmp
fisttps
xchg
in
leave
ss
ljmp
fsubp
iret
xchg
icebp
mov
fmull
call
out
jmp
enter
test
loopne
roll
lret
out
mov
xchg
in
xor
out
repnz
aam
fdivrp
xlat
leave
fildl
xchg
or
lock
hlt
les
fdiv
cli
loopne
aad
int
shr
fildl
mov
xchg
leave
test
ror
fcmove
aam
repz
enter
ret
aam
iret
cmp
fmul
lret
fistl
repnz
repnz
aad
sar
jmp
shl
int3
aam
hlt
mov
fndisi(8087
int3
aas
idiv
lret
mov
jmp
ret
repz
in
icebp
out
cmp
test
repnz
repnz
sub
fisttpl
xchg
xchg
rol
stc
xlat
xor
sti
ss
rcr
xor
xchg
mov
cld
mov
xor
add
jmp
rcl
int
ffree
fstpl
dec
xor
jle
add
in
mov
mov
xchg
in
ljmp
fdiv
in
rcr
out
test
stc
aam
int
ljmp
in
repz
xor
call
sbb
test
repz
leave
clc
call
into
lea
out
aad
iret
loopne
cmp
cli
hlt
fsubp
ljmp
out
lock
les
enter
fidivrl
lret
idiv
aad
aam
test
loop
in
xchg
out
lret
xchg
mov
aam
iret
div
out
ds
cmp
stc
jecxz
cmp
loope
xchg
clc
lock
rcll
lret
cmp
out
sarb
lret
int3
out
test
loop
enter
nop
nop
jmp
out
loop
ljmp
aam
addl
testb
jmp
xor
xor
cmp
cmp
fdiv
cmc
addb
xlat
fsubr
icebp
in
lret
in
lret
cld
cmp
cmp
fdiv
cmp
xchg
ret
ljmp
cld
xchg
lea
xor
enter
aas
aam
cmp
out
rcr
in
fmul
out
lock
icebp
lea
imull
out
repz
div
iret
fldl
jmp
fcomp
sti
leave
or
ror
ljmp
cmp
int3
test
clc
cmc
roll
stc
xchg
in
loope
repz
stc
into
call
aas
sar
clc
loope
testb
out
orb
ljmp
ds
aad
cmp
testl
test
iret
iret
jmp
lock
hlt
out
out
aam
loopne
or
shl
enter
xlat
loop
in
std
mov
faddp
lret
icebp
fdivr
cli
xor
int
add
cmp
lock
std
fcmovu
repz
in
shll
lret
shll
hlt
cmp
cld
into
shl
ret
fucomi
ljmp
jecxz
xlat
out
das
stc
cmp
cli
cmp
je
mov
mov
jmp
int3
aas
rol
fst
fadd
ljmp
repz
add
add
ds
out
jmp
test
out
in
out
xchg
out
int
sti
int
cld
cmp
clc
aam
lock
aad
in
clc
enter
fists
xor
iret
in
cli
icebp
aam
in
not
faddp
hlt
fmull
nop
into
mov
cli
std
cmp
and
fldl
mov
aad
test
cmp
in
in
stc
xor
xor
leave
cmp
sarl
ss
xlat
sti
fmul
lret
cli
add
out
in
xchg
call
lock
cmp
sar
out
rol
aad
in
adc
loope
iret
in
xchg
shl
aad
enter
out
mul
loop
cmpb
fadds
ds
enter
in
mov
aad
sarb
iret
icebp
out
std
in
icebp
fsubr
loop
mov
cmp
in
mov
out
hlt
in
aam
rcr
xor
rcr
icebp
int
neg
repnz
clc
lret
mov
jmp
in
cmp
int3
cmc
xor
test
lret
xchg
ljmp
xchg
lret
xor
cmp
in
in
lock
cld
ret
fsubp
fdiv
test
int
call
repnz
out
in
sub
stc
cmp
fucomp
repnz
in
mul
cmp
fstp
icebp
aam
imul
lret
xlat
call
cmp
icebp
ret
jmp
cli
out
fiadds
std
mov
ret
ss
cmp
jmp
jmp
loope
cld
addl
mov
test
jecxz
divl
lret
aaa
xor
aas
repnz
loope
aas
xchg
call
fmulp
fucomp
icebp
fidivs
int
fucomi
out
cmp
fucom
test
fadd
movb
sti
xchg
rolb
ljmp
fcmovu
out
cmp
fucomi
and
sti
xchg
in
in
icebp
repz
out
enter
int3
aam
loop
cmc
xchg
jecxz
fsubp
mov
mov
jecxz
iret
into
aad
in
cmp
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
jle
lahf
jb
das
add
add
cmp
fcmovnu
cli
shl
loop
std
sar
fucom
lret
fnclex
hlt
ljmp
call
shl
xor
rcr
idivb
mov
ljmp
in
int3
shl
loop
idiv
enter
fdivp
cmp
fprem
repnz
call
int3
out
stc
xor
xor
sarb
sar
ds
rcr
std
repnz
ljmp
and
jmp
cmc
lock
repnz
cmp
div
repz
cmp
aam
jecxz
mov
testl
xor
fucomp
lret
int
rol
cli
enter
lret
jecxz
in
into
xor
sub
call
test
loopne
call
into
into
out
in
jmp
fmul
fsubr
cmp
aad
out
sti
fisttps
jmp
iret
vaddsubps
int3
sarb
mul
lret
clc
lock
loope
ds
in
mov
mov
in
repnz
std
aaa
call
cmp
cmp
rcl
loope
out
aas
in
ret
mov
cmc
repz
fucompp
stc
cmp
lock
stc
std
or
enter
rorl
aaa
in
into
xor
stc
cmp
cmp
jecxz
fadds
fisttps
mov
lret
les
sti
cmp
ret
loop
aad
out
fidivrl
fsub
fldl
ljmp
xlat
ss
aas
clc
aaa
test
loop
loop
lret
call
ror
call
shr
jmp
ss
hlt
loop
fxch
jmp
into
iret
fsub
icebp
xor
xlat
out
sbb
fsub
call
cld
iret
fmuls
imulb
jmp
cmp
rcr
aam
xlat
in
mov
clc
lret
testl
call
xabort
ss
into
in
cmp
fsub
repz
xchg
into
mov
mov
mov
jmp
aas
xlat
xlat
rcl
ror
fld
cs
and
push
xorb
jle
add
sti
out
lret
shl
dec
stc
cli
hlt
jmp
addl
fdivr
fcmovnu
repnz
shr
fcmovnbe
lock
int3
in
fcmove
in
jecxz
test
xlat
mov
sti
fildl
jecxz
ror
xor
rcl
stc
shr
lret
test
rcl
leave
cmp
leave
in
repnz
xchg
fldz
inc
lret
stc
out
shl
cld
loopne
fmulp
cmp
movb
xor
iret
xor
cmp
xor
shl
mov
cli
loope
iret
aam
ret
repnz
shl
iret
fcmovu
jmp
cmc
out
loop
sti
ret
xlat
fisttps
nop
addl
cmp
sar
cmp
and
jecxz
fneni(8087
fmull
xor
int
fcom
ds
ss
repz
lret
loop
out
lock
int3
in
ret
into
cld
jmp
loopne
ror
aas
cmp
in
ret
mov
in
loop
nop
jmp
shl
leave
enter
loope,pt
loope
into
out
hlt
jecxz
test
lock
xor
out
shr
xor
sar
cld
iret
roll
in
ljmp
xor
jmp
lret
jmp
mul
out
rcl
les
out
adc
into
repnz
das
cmp
cmp
loopne
cmp
cmc
stc
call
in
mov
out
out
ror
repz
int
xlat
cmp
fcmovu
xlat
xlat
lret
clc
enter
fists
cmp
in
fistpll
in
xlat
mov
rol
jmp
cld
or
loopne
out
out
out
repz
lock
fdivrs
aad
rol
rol
cmc
cli
std
vcmpss
out
xchg
in
jmp
rcl
cmp
ljmp
clc
jecxz
std
mov
sti
lea
int3
out
ljmp
sti
hlt
idivl
hlt
repz
incb
enter
or
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
xchg
mov
add
repnz
cmp
into
ror
cld
icebp
div
clc
in
stc
aad
call
cmc
call
mov
xor
shr
rcl
hlt
rcl
sti
cli
in
rol
test
stc
fcomip
cld
and
test
lret
lock
div
fld
out
sar
test
hlt
loopne,pt
xchg
aam
aam
leave
into
out
into
adcb
aad
aam
cmp
jecxz
ds
repz
leave
incl
std
in
out
out
sti
sti
repnz
std
rcr
cmp
int
shl
enter
sti
adc
out
in
in
xchg
in
cli
xor
lock
div
not
clc
cmp
stc
cmp
ffree
jmp
std
cmpb
cmc
fxch
sti
clc
stc
into
xlat
cmp
shl
and
fsubp
in
movl
xor
call
fsubp
clc
cld
iret
cmp
ljmp
mov
mov
enter
shlb
stc
lock
cld
ljmp
fdivr
imul
int
jmp
xchg
fsub
into
test
cs
jmp
int3
cmp
cmp
cmp
in
out
cli
neg
fxch
mov
and
hlt
orb
fucompp
int3
in
repz
in
aad
mov
out
cld
fmul
enter
fucomip
xor
fld
fnstenv
ror
in
shl
std
repnz
sbb
ljmp
int
shr
clc
rcr
leave
cmp
stc
call
xlat
out
mov
jmp
cld
out
fbstp
jecxz
stc
cmp
into
xlat
adc
out
repz
clc
xlat
sar
sub
jmp
repnz
into
jecxz
call
cmp
fnsave
loop
clc
aad
in
mov
out
in
lock
out
aad
div
out
icebp
loope
roll
ret
jecxz
cli
test
jmp
lock
cmp
ss
aaa
iret
loopne
fdiv
out
icebp
ljmp
jmp
fimuls
aad
stc
cmp
leave
shll
out
loop
repnz
fcos
ret
clc
mov
push
pushl
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
ret
and
jle
add
fcomp
and
lret
jmp
fdivs
shl
out
shl
lock
ss
cmpb
lret
test
xchg
test
xor
clc
fcomi
cli
inc
shl
fnstsw
add
jecxz
cli
jmp
ljmp
jecxz
mov
cld
loope
xchg
fcomi
shl
loop
loop
cld
mov
loopne
jmp
in
int
lret
fadd
clc
test
in
fisttpll
lret
jmp
mov
aam
shl
cld
fdiv
aam
addb
loopne
sti
out
into
out
dec
ljmp
in
std
das
in
out
cld
loope
cli
fdivrs
cmp
cld
sub
in
or
test
jmp
ret
adc
xlat
hlt
enter
call
mov
shl
cmp
lock
loope
fdivp
ds
leave
enter
stc
fcmove
xchg
test
out
in
fnstcw
cmc
fidivrs
lock
fcmovbe
test
loope
xchg
out
loope
enter
xor
in
lret
fstp
fdivp
loop
ret
sub
xchg
xchg
in
xor
ljmp
adc
aad
ffreep
repnz
mov
clc
mov
in
cmc
shl
call
int
aaa
cmp
int3
cmp
into
ret
shr
stc
decb
loop
int
into
repz
rcr
into
sub
lret
leave
xlat
jmp
ret
repnz
xor
std
fimull
mov
xor
neg
into
shl
cmp
rcr
not
fsub
fsubp
test
in
out
jmp
in
in
icebp
enter
aam
int3
iret
ljmp
shl
xlat
lret
xchg
fdiv
mov
and
xor
in
sub
xlat
fchs
cmp
std
aas
xchg
sti
jecxz
jmp
in
test
lret
mov
iret
call
mul
iret
jmp
in
int
and
fsub
enter
cmp
sar
jecxz
in
test
imul
xor
rcl
cli
mov
jmp
vshufpd
ror
adc
push
cs
adc
cmp
jle
add
test
ret
mov
les
xchg
cmp
jmp
in
shr
cmp
cmp
lock
addb
fsubp
in
ret
jmp
adc
sarl
lret
in
sarb
iret
ljmp
out
cli
sub
xchg
ret
into
lret
les
into
iret
ror
cli
in
sar
cld
cli
shl
fdiv
std
lret
in
clc
in
icebp
std
mov
test
enter
repnz
ljmp
test
mov
test
ljmp
xchg
aad
xor
cmp
out
aam
jmp
loopne
cli
idiv
sti
jmp
int3
cli
out
cld
repnz
hlt
popl
cld
xor
shl
inc
cli
fcmovbe
fldl2t
cld
int3
call
iret
xacquire
cmp
clc
aam
xlat
lret
rcl
in
ret
repnz
not
fimull
faddl
enter
cld
leave
cld
lock
hlt
aad
aad
out
fildl
jecxz
in
fdivs
lret
ds
xlat
aam
clc
fsin
cmp
mov
les
mov
int
jmp
call
ljmp
jmp
fstp
mov
out
pushl
das
shl
fptan
lret
sarl
leave
cmp
sti
shl
aam
jmp
loope
loope
out
in
xchg
test
call
fdivrl
adc
cli
hlt
roll
stc
lret
in
mov
jmp
ror
jmp
jmp
std
repz
clc
ds
hlt
jmp
test
out
into
int
mov
aam
fdiv
jmp
idivl
test
mov
std
out
out
out
int
shl
in
clc
ror
cli
cmp
addl
ret
cmp
out
repnz
adc
cmpl
lock
loopne
aas
ret
shl
loope
testb
stc
in
fcmovne
out
into
test
jecxz
fisubrl
fcomi
iret
fnop
enter
mov
xchg
jecxz
cld
jmp
in
cld
xor
mov
xor
jmp
int3
aas
ret
sbb
roll
sub
cmp
jle
add
aas
idivb
rol
std
loop
loope
jmp
and
int
out
in
xlat
fsubr
shl
sarb
in
fcomi
clc
loop
xchg
fildl
int3
addb
sarb
in
out
cmp
xor
loopne
ljmp
ljmp
repz
clc
icebp
in
icebp
cmpb
orl
jecxz
xchg
mov
shlb
cli
fdivs
iret
test
out
incl
xchg
leave
in
rcll
aaa
xor
fidivrl
sar
cmc
loopne,pt
fcmovnb
ffreep
loop
not
fucomi
fsub
ljmp
xor
icebp
ljmp
ret
and
test
stc
ret
std
decb
in
xchg
lret
cs
in
imul
fdivr
std
ds
out
loopne
leave
xlat
in
int3
jmp
out
loopne
lock
shll
int
out
cmpb
cmp
cld
mul
roll
cmp
mov
in
ror
xor
icebp
leave
cmp
xor
ds
call
enter
std
mov
sti
mov
xor
aad
out
out
lock
stc
xchg
mov
incb
rolb
loope
fadd
in
cli
iret
lret
aaa
cmp
stc
cmp
aam
jecxz
lret
ret
mov
aaa
icebp
xor
in
cmp
int3
repz
hlt
ret
filds
ljmp
std
int3
call
cmp
leave
test
in
xchg
jmp
fxch
loop
into
rcl
jmp
cmc
in
sub
xor
fcomp
in
fistpll
mul
xor
addb
nop
ret
hlt
repz
in
div
shr
aad
in
divb
cld
fcomp
sar
shl
out
fmuls
test
fidivl
sub
icebp
rcr
shl
sar
ret
call
jmp
frstpm(287
iret
xchg
mov
enter
jmp
test
shl
incb
xlat
in
ljmp
test
rcl
in
lock
rolb
ret
cmp
jmp
rol
rcl
rol
aad
sahf
xor
mov
add
add
aad
cmp
cmp
and
mov
fadds
mov
nop
mov
in
in
test
stc
in
aad
cmp
les
mov
mov
lret
lea
aam
fldz
iret
repnz
shl
hlt
fldl
cmp
cli
and
loopne
cmp
fsubp
jmp
jmp
fsubr
cmc
cmp
std
aam
vpsubw
loope
mov
lret
in
xchg
sar
idiv
out
cmp
xor
int
repz
fdivr
test
iret
hlt
cmc
inc
call
faddl
in
aaa
sarb
fcomp
jmp
fdivrs
rcr
cld
test
in
neg
call
test
cmc
xchg
cmc
repnz
jmp
fmulp
lock
std
xchg
stc
aas
stc
mov
lret
in
lret
jmp
jmp
jmp
aad
leave
cmp
aad
fmulp
rcl
jmp
out
cmc
test
xor
iret
into
adc
jmp
ror
out
ss
lock
ret
fcmovnu
mov
sti
jmp
lock
xchg
xchg
jmp
int3
sub
into
cmp
repnz
repnz
cmp
cmp
out
or
fiaddl
xchg
out
cs
sarl
loopne
div
aam
in
repnz
in
cld
mov
shl
aad
ror
ret
out
aaa
int3
call
loop
xlat
vpsrlq
pop
ljmp
stc
xor
fdivrl
repz
cmp
cmp
out
in
lock
hlt
xor
cmp
icebp
shl
rcl
aad
cmp
call
mov
enter
ret
ljmp
int3
ret
xchg
in
ret
fmul
lea
shr
rcr
cmp
shl
jmp
cmp
aad
loopne
repnz
in
mov
out
and
repz
xor
call
cmp
repz
out
in
fucomip
orl
sti
fsubp
xchg
and
out
fistpll
loopne
sar
shl
cmc
aam
mov
iret
in
call
test
add
push
add
add
ret
mov
mov
pop
iret
fs
add
add
in
mov
shr
into
out
sar
out
rcr
mul
hlt
fst
xlat
aad
sti
ljmp
ljmp
cld
iret
cli
std
out
out
cmp
fld
div
decb
lret
loope
sar
shl
ljmp
ds
cmp
cld
xchg
in
xchg
in
out
ror
in
in
call
jmp
fnstcw
cmp
shl
call
mov
loopne
mov
shlb
shl
sarl
leave
rol
rol
test
out
idiv
fisttpll
icebp
test
xchg
out
aad
clc
xor
repnz
stc
ret
std
in
loop
enter
test
loope
ljmp
call
sarb
cld
fcomp
ffreep
repz
loop
cli
addl
ljmp
stc
aam
icebp
roll
vshufpd
sar
rcr
test
icebp
in
jecxz
xor
xor
out
clc
adc
cmc
cmc
cmp
aad
jmp
xchg
ffreep
fcoml
fdivp
out
shl
lret
out
cmp
ljmp
xor
lret
sbb
call
out
int
xor
cmp
xor
into
iret
fsub
fistpll
test
lock
jmp
xor
cli
repz
sti
sar
hlt
sti
ds
loop
mov
stc
lea
test
cmp
lock
ret
shl
aad
repz
addb
xchg
in
call
rcr
out
xor
aad
iret
xlat
ds
in
int3
fucomip
mov
fmul
in
enter
cld
out
sar
div
ss
shl
call
stc
mov
fisttpll
in
lock
lock
div
into
rcr
roll
mov
xchg
jmp
into
lret
leave
shl
rcl
loopne
cmp
rcr
fldl
loope
xchg
int
in
jmp
fyl2x
fcmovu
cmp
aad
jmp
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
push
inc
imul
cmp
jle
lret
out
aad
aam
cld
icebp
out
into
roll
flds
test
sti
test
in
icebp
xchg
fucomi
in
imul
cmp
cli
out
test
addl
filds
out
enter
aad
sar
int
test
stc
out
loop
cld
lea
lret
iret
fcmove
out
sti
sti
testl
in
sti
mov
mov
ljmp
icebp
cmp
fdiv
xor
int
jecxz
enter
test
test
out
shr
loope
in
enter
repz
aas
fldl
out
mov
in
out
xor
in
in
repz
cli
faddp
out
cmp
aas
mov
xchg
xlat
loop
jmp
icebp
mov
cli
fucomip
ss
repz
out
ds
repnz
in
mov
mov
subl
sarl
in
out
lret
cmp
out
adc
cmp
out
fimuls
hlt
jmp
hlt
ds
in
repnz
cmp
xchg
cli
cmc
xlat
call
out
fsub
aad
aaa
lret
icebp
leave
out
aaa
into
fsubrp
ds
sti
out
into
clc
lds
jmp
std
cld
sub
xlat
call
cmp
cmp
roll
rol
jmp
int
icebp
xchg
das
fnstcw
xor
xlat
jmp
sar
xlat
cli
in
aas
mov
out
ret
xchg
mov
aam
xor
enter
std
cmp
stc
ret
or
enter
jmp
enter
xor
cmp
shl
fstpt
cmp
cmp
cli
sti
sti
in
out
fsubr
lock
mov
jecxz
shr
out
xor
clc
jmp
cli
call
fcomp
int3
loope
repz
xchg
mov
cmp
ljmp
cmp
incb
ret
fisttps
std
bnd
icebp
lret
sti
call
xor
xchg
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
fs
add
add
cmc
shl
jmp
nop
in
mov
stc
repz
in
cli
aam
lret
out
cmp
loop
loopne
xchg
test
out
mov
loop
xor
imul
int3
ror
aad
loope
test
call
fadds
jecxz
loope
or
hlt
jmp
lret
repnz
idiv
fcmovne
int
les
jecxz
in
xchg
test
enter
jmp
loope
rcl
lret
repnz
in
fcomi
cmp
jecxz
cli
xlat
stc
mov
aam
jecxz
aaa
xlat
int3
sar
out
cmc
rcr
aad
cmp
cmp
test
or
std
in
icebp
rorb
enter
lock
call
repz
loop
in
fucomp
fsub
fcmovu
xchg
mov
shll
jmp
lock
cmp
fcmovnbe
aas
call
addb
loope
xor
into
call
hlt
xchg
fld1
loope
ret
xlat
into
xchg
mov
lock
sar
cmp
fld
in
jmp
mov
in
xor
shr
cmp
jmp
sar
xlat
sbb
jecxz
loop
shl
jmp
into
notb
xlat
aaa
call
ret
and
ljmp
call
ret
out
rcl
clc
in
ds
jecxz
ds
fldl2t
jmp
lret
cli
std
mov
aam
xlat
xor
lret
xlat
in
aaa
cmp
cmp
cmp
in
aad
roll
shl
xchg
in
shlb
in
cli
aad
lret
ds
ds
xchg
movl
out
orb
lret
leave
int3
sarl
ss
lds
xchg
cmp
icebp
fdiv
hlt
clc
fcomp
sarb
int
leave
cmp
loop
ds
lock
cmpl
test
jmp
cli
ror
cmc
iret
out
das
hlt
aad
fcomi
stc
ror
idiv
lock
sub
enter
into
ror
cld
cmc
in
aas
jmp
int
fcmove
cmp
jmp
aas
int3
mov
std
int
pushf
cmc
in
sub
cmp
jle
mul
loopne
fst
xchg
lret
test
jmp
dec
xchg
xchg
loope
repz
rcl
xor
ljmp
cmpl
mov
fcmovne
out
jmp
xor
repz
lret
sarl
shr
rcr
imul
mov
int
into
fildl
aam
cmp
jmp
loope
test
clc
test
loop
int3
in
jmp
rol
not
cmp
xor
out
cmp
ret
cmp
fdivr
nop
cld
jecxz
and
fprem
xlat
lret
cli
fdivp
xlat
fucomi
hlt
clc
loopne
lock
rorl
jmp
xor
iret
fsubr
xlat
fdivr
hlt
shr
xlat
xlat
xlat
fmull
lret
xchg
xchg
fisttpll
aaa
fmul
out
clc
rcl
icebp
shl
repnz
in
loopne
int3
xchg
mov
out
sub
shlb
repz
dec
sbb
stc
addb
repz
aad
idiv
xor
adc
incb
out
pause
mov
xlat
xor
hlt
out
lock
xor
fmulp
xlat
out
decl
xchg
aad
icebp
stc
xor
out
cmp
ljmp
test
int3
int
cld
call
repnz
leave
loopne
jmp
in
lock
ds
aam
fcmovne
sti
add
fcmovne
fdivr
xorl
shr
dec
and
mul
clc
ffreep
sbb
loop
orb
xchg
loop
in
call
out
icebp
mul
cmp
fmuls
call
fmulp
loop
ror
repnz
repz
aam
iret
rol
hlt
xchg
ljmp
repz
cmp
lret
imul
in
enter
cli
aad
cmp
or
fucomp
mov
out
adc
loopne
int3
fdivrs
ljmp
ds
rcl
loopne
repnz
fsubp
fucomp
call
out
out
ror
fcom
fcmovu
sub
xchg
dec
jmp
lret
int3
fcmovnu
mov
cmp
stos
cwtl
inc
movl
jle
lret
in
cmp
int3
out
sarb
sbb
fstl
xchg
in
xor
call
jmp
ss
sar
out
clc
loopne,pt
ljmp
jecxz
xchg
in
lret
in
xor
dec
clc
sbb
iret
rol
and
loopne
std
xchg
mov
out
shr
stc
hlt
rcr
aas
call
rolb
in
lret
out
out
call
incb
repnz
lock
cmc
loopne
aad
repnz
test
and
rolb
aam
fsubr
clc
xlat
lret
shl
ds
iret
lock
loope
jmp
mov
cld
leave
aad
xor
enter
leave
xlat
cmp
stc
lock
fldl
fnstsw
pop
in
aam
into
repz
out
aam
enter
cmp
movb
into
sti
ljmp
ror
rcl
fdiv
repz
cmp
fistpll
in
ret
cli
ret
fadd
int3
mov
iret
iret
out
cmp
repnz
sti
out
call
into
fdivr
call
cli
sbb
fdivrp
jmp
test
in
xor
adc
sub
rol
call
in
rcr
xchg
aad
int3
jecxz
iret
ljmp
cld
lock
jmp
cmc
in
out
movl
shl
dec
cmp
xchg
ret
fptan
in
xlat
in
in
ret
fsubr
jecxz
xor
call
icebp
ror
std
icebp
cmp
enter
test
fadd
out
test
std
shl
jecxz
loopne
in
ss
xor
rcr
call
fdiv
aam
fdiv
orb
not
out
jmp
iret
neg
sar
fdivrs
call
in
in
icebp
int
xchg
ss
leave
fadd
aad
jmp
int
in
shl
call
xchg
cmc
xchg
out
shl
leave
fdivs
fnsave
loop
xchg
push
mov
xchg
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
add
add
add
into
stc
icebp
int
into
cmp
int
faddp
sbb
fcmovb
lret
stc
mov
iret
ljmp
ds
icebp
ds
into
cld
cmc
loope
fisttps
in
cli
out
icebp
sar
leave
aad
xlat
out
out
xor
jmp
xchg
incb
aas
fcmovu
icebp
fisttps
repnz
les
mov
in
aam
xor
cmp
ret
loope
leave
clc
stc
mov
addl
lret
call
lret
stc
int
aad
clc
aad
in
fadds
repnz
out
out
rcr
int3
jecxz
out
aad
fcmovbe
std
fcomp
out
cld
loop
ror
jmp
fnsave
rcl
shr
lock
int3
aas
in
loop
fucomi
mov
or
out
loope
std
hlt
nop
icebp
loopne
shl
in
in
cmp
out
out
lret
into
clc
clc
hlt
loopne
aam
sub
mov
sti
lock
xchg
int3
loop
repz
icebp
aam
repz
cld
fiadds
cli
in
test
xchg
mov
in
in
out
icebp
cli
xor
test
rol
mov
faddl
add
leave
aaa
cmp
out
enter
cmc
loopne
idivl
cmp
loopne
cli
test
add
loopne
out
ror
cmp
repz
shll
out
test
incb
into
aam
hlt
int
aaa
stc
cmc
aaa
in
lret
cmp
cli
flds
mov
into
int3
loope
aam
leave
hlt
fdivs
mov
lret
fucomi
xor
in
loopne,pt
loop
ljmp
int
test
out
xor
or
rcr
rolb
fld
idiv
out
xchg
sarb
into
cli
std
stc
aas
cmp
push
cli
cli
or
test
lret
in
shl
in
repz
cld
call
repz
xchg
neg
loop
out
jmp
cld
std
test
xor
leave
rol
aam
lret
stc
fdiv
clc
into
cld
cmp
faddl
mov
jmp
aam
int
int
aam
xchg
inc
lret
fcompl
cmp
jle
lret
sar
std
iret
xor
shlb
int3
cmp
loop
ret
rolb
ljmp
fbstp
imul
leave
aam
jmp
clc
leave
int
cmp
loop
lret
xlat
loope
xchg
cmc
xor
xor
stc
stc
cmc
rol
shl
jecxz
std
mov
decl
cmc
aad
ror
xor
xor
sub
mov
enter
out
out
filds
shl
out
repz
hlt
aaa
lret
repz
fsubrp
fcmovu
jecxz
ret
xchg
orb
test
xor
aaa
xor
in
cmp
lret
hlt
shl
les
std
mul
stc
xchg
leave
xchg
into
mov
in
loope
cld
xor
fstp
xlat
jmp
int
stc
shl
fldl
mov
leave
into
lock
rcr
stc
in
repnz
int3
mul
fsin
cmp
in
in
mov
jmp
out
mov
test
cmc
aam
cmc
aas
cmp
cmp
loopne
jecxz
dec
rorb
iret
shr
ss
int
fld1
rolb
xlat
cli
rcr
std
mov
testl
shll
rcr
aaa
ss
icebp
cmp
fsub
std
loopne
cmc
mov
in
and
aas
aad
jmp
hlt
cmp
jmp
in
test
jecxz
rcr
test
xchg
mov
adcl
cmc
into
repnz
xlat
fimull
fcmovu
lock
out
shl
in
xor
cmp
fadd
aad
out
out
loope
les
jecxz
xor
ljmp
rol
cmp
vpsubsb
fmul
mov
int3
into
xor
loope
clc
imul
aad
fstp
cmp
sti
sti
repnz
clc
cmp
out
mov
aad
ret
fcmovnbe
cld
xor
hlt
out
int
hlt
rcl
std
fdivp
loopne
int3
sti
mov
int3
in
adc
aaa
jmp
cmc
loopne
cli
stc
xlat
fnclex
out
xor
mov
lea
jmp
rcr
int
stos
outsl
int3
nop
and
lock
cmp
jle
jmp
clc
stc
sbb
iret
fiadds
ret
enter
shl
loope,pt
into
hlt
lock
repz
fldln2
call
sbb
out
vpminub
iret
aam
std
clc
clc
out
lock
sarb
stc
stc
mov
lret
out
into
out
lret
stc
out
idiv
jmp
aas
std
lock
in
cld
sti
in
fisttpl
mov
test
shr
repnz
shr
fdivrs
idivl
loop
neg
cmp
loope
fisttpll
in
test
roll
out
cmp
repnz
xor
cmp
enter
xchg
lock
xchg
aad
sar
repnz
xlat
lret
lret
in
cli
sarb
aad
test
fcmove
out
loope
lret
aam
out
lret
std
sti
cmp
clc
repnz
shl
cld
push
faddl
std
mov
hlt
hlt
out
imul
ret
into
xlat
div
aaa
div
cmc
int3
icebp
shl
aas
jecxz
clc
lret
int
fucomip
dec
in
aad
fcmovnb
f2xm1
aam
rolb
hlt
clc
repz
neg
jmp
popl
call
cld
xlat
fcmove
ret
cld
ds
jecxz
xchg
fcom
into
shr
mov
lea
stc
xor
fdivp
cmp
notrack
cmp
iret
fadd
incb
sub
repnz
xchg
sub
cld
aam
int3
sti
aaa
idiv
sbb
std
clc
faddp
aam
stc
ljmp
rcl
in
fcmovu
cmp
sar
neg
sarb
rol
lock
aad
clc
jmp
lock
shlb
aam
aad
loop
fldl
adc
and
das
iret
iret
enter
int3
fdivl
cmp
lret
test
lock
aas
and
orb
xchg
aad
aad
test
aaa
aam
cmp
rol
lock
aad
fcoml
xchg
mov
enter
out
neg
and
cmp
aas
rolb
out
into
enter
xchg
repz
int
in
cmc
xlat
cmp
aad
fsubp
cmp
jmp
ret
xlat
fmul
fmul
rcr
test
push
popf
subb
jle
idiv
call
out
xchg
fildl
lret
jmp
leave
incl
xchg
fiadds
iret
xchg
repnz
sti
sti
xor
in
fcomp
fildl
in
and
out
repz
jmp
cmc
cld
aas
stc
in
in
sar
test
out
sub
hlt
in
fbstp
loop
jmp
std
repz
out
and
rol
call
lret
in
out
xchg
mov
sarl
cmp
iret
stc
fnstcw
jmp
out
cmp
rol
call
xlat
mov
in
mov
lret
int
ljmp
rcr
cmp
ret
int
in
mov
cli
hlt
test
test
int
xor
jmp
repnz
ror
ror
adc
testl
jmp
clc
xor
aas
shl
in
clc
jecxz
fisttps
lret
lret
loope
xchg
hlt
clc
clc
in
in
jmp
sar
out
hlt
aam
xor
rcr
out
testl
cs
xor
ss
stc
cmp
loope
loopne
ffree
in
mov
loopne
mov
out
xor
cli
cld
fcmovu
std
jmp
test
test
fsubp
xchg
mov
mov
xchg
into
cmc
rcr
out
f2xm1
cmp
out
in
cli
std
aam
clc
rol
repz
xlat
in
mov
out
jmp
xor
shl
out
int3
jmp
cmp
stc
int
sarb
sti
loopne
call
sti
fmulp
xchg
shr
out
cmp
neg
aas
std
rcl
cmpl
lret
int3
decb
into
mov
int3
int3
fstpt
in
cmp
idivb
sti
loopne
out
incl
int
aad
shr
in
out
iret
fprem
rcr
repz
loopne
clc
fsubp
out
xchg
call
ret
xor
repnz
ror
clc
dec
lret
out
fdiv
roll
xchg
or
mov
shl
lock
test
pop
add
mov
jmp
rcl
leave
int3
leave
fldt
xor
cmp
jle
cmp
cmp
ret
cld
test
xchg
loop
cld
ljmp
clc
loopne
out
in
cld
lock
inc
ret
aam
fsubp
and
sti
mov
dec
xchg
incl
out
clc
hlt
dec
cmp
stc
test
fpatan
movb
loopne
cs
clc
repz
ljmp
cmc
loop
out
cmp
mov
loop
call
leave
cmp
std
xor
std
iret
cmpl
xchg
fimull
test
sub
icebp
lret
jecxz
shl
shl
cld
mov
out
adcl
sub
lret
not
leave
in
cld
test
mov
mov
fmuls
jmp
cli
cmp
idiv
out
in
xor
cmp
mov
xchg
in
call
fucomip
mov
xor
hlt
iret
std
int3
out
loope
repnz
mul
out
ror
vpsubusw
stc
repnz
mov
out
repz
int3
hlt
shl
xor
loop
fsubrp
ret
out
fcmove
iret
out
into
fdivp
iret
rcr
int3
iret
sarb
loopne
fucom
loope
mov
xlat
fsubp
cmc
cmp
repnz
loopne
hlt
jmp
not
cmp
test
cmp
jmp
enter
mov
ljmp
int3
out
cmp
cmp
out
fucom
shl
xchg
aam
in
or
xchg
loope
mov
in
ror
fcmovnb
fadds
fmul
call
loop
jmp
rorl
aad
cmp
call
std
loop
idiv
cld
out
fdivr
clc
jecxz
fisttpll
sub
leave
enter
leave
ror
std
ds
enter
jecxz
call
inc
int3
cmc
ror
cmp
iret
out
cmp
out
test
call
enter
cli
mov
loop
xor
std
std
clc
lock
std
cli
fcmovnu
aas
rcr
mov
lret
or
addb
add
add
ror
fstp
ffree
pop
fiadds
jmp
aad
jle
add
jmp
aaa
ror
aam
shl
fdiv
fld1
in
in
xchg
cmc
icebp
xchg
xor
aad
out
aam
stc
cmp
iret
in
ret
sti
fmul
jmp
nop
shlb
hlt
cmc
xor
out
enter
sar
stc
rcr
repz
cld
test
xor
imul
jmp
test
ret
fcmovnu
out
out
int3
in
cmc
jmp
repnz
ljmp
out
sarl
sar
repz
sti
jmp
out
jecxz
loopne
call
lret
out
out
sar
cmc
icebp
and
xchg
test
faddl
jecxz
hlt
nop
test
icebp
hlt
lret
rcr
faddl
cmp
out
fsub
iret
cmc
xchg
out
stc
out
jmp
adc
vpmovmskb
in
mov
iret
fcomi
fucom
xchg
repnz
jmp
out
fcmove
das
leave
loop
cld
loopne
inc
aam
xchg
iret
ljmp
stc
iret
fmul
cmp
aaa
ror
add
std
ret
xchg
leave
iret
and
xor
fxch
lock
rcr
fdivrp
and
call
test
mov
xlat
ss
int3
cld
repz
cld
lret
ret
fcmovnbe
clc
xchg
aad
cli
xchg
jecxz
lock
cmp
lret
sarl
fst
xor
int
jecxz
in
fucomi
ret
mov
fdivr
rclb
sti
xor
int3
ljmp
test
in
mul
imul
ljmp
xchg
mov
ret
xor
xlat
int
aas
fcomp
std
test
in
cld
mov
mov
call
out
jmp
div
out
sub
shl
ds
cmc
fucom
sti
shl
ret
ljmp
test
mov
ret
test
xlat
int3
loop
cld
out
in
enter
int3
loopne
call
xor
shr
sarb
cmp
in
fcomip
out
cld
fcmovnu
fcmovnu
fadds
dec
or
jmp
enter
int3
aam
pop
adc
inc
das
js
fcmovbe
add
add
jmp
xchg
in
in
xor
lret
in
enter
fst
faddl
ret
jmp
stc
test
cli
cmp
into
aas
cmp
aad
sti
jecxz
ret
hlt
cli
lea
adc
aaa
fcmove
int
cmp
test
mov
icebp
int
lret
xor
lock
leave
jmp
mov
hlt
rorl
test
in
in
icebp
out
int
enter
jmp
rcr
rolb
loop
loop
div
aam
out
neg
cmp
repnz
lret
call
filds
fnstenv
cld
in
cmc
call
aam
cmp
rorb
call
fucomp
mov
cmc
in
in
icebp
lock
not
addb
fisttpll
mov
aam
lret
repz
ds
out
stc
repz
aad
test
ljmp
out
lret
rcl
in
aad
leave
int3
out
out
in
rol
loop
out
loop
lds
filds
jecxz
ljmp
out
aas
in
add
repz
fscale
loope
lret
jmp
jmp
in
xor
clc
out
repz
cmp
xlat
ret
aad
icebp
cmc
fdiv
addl
out
sar
xlat
cld
int3
hlt
icebp
rcl
cmc
adc
test
cli
in
test
xlat
fstp
lret
iret
call
repz
int
cmc
out
hlt
repnz
aas
loopne
clc
mov
ds
push
xchg
sub
shr
fcmovne
in
ljmp
rol
shr
loop
fadd
sti
call
repnz
rol
aam
clc
cmp
sti
iret
shr
jmp
loopne
addl
jmp
out
lock
enter
in
xor
fldl
cmp
int
cmp
repz
enter
mov
jmp
xlat
aas
cmp
test
ds
jmp
rol
enter
jp
fimuls
xchg
flds
jle
add
aad
mov
out
mov
call
int
fdivl
jmp
sti
sub
fdivrp
in
jmp
xlat
jecxz
fdivr
fiadds
xlat
fsub
cmp
cmp
jecxz
shr
ret
in
jmp
leave
mov
mov
in
ret
out
hlt
ss
ss
in
ror
loopne
rcr
movb
in
test
int3
lock
enter
icebp
jmp
loope
neg
sub
call
xchg
mov
lret
jmp
xor
lret
cmp
rcr
cmc
ds
aas
jmp
jmp
loop
test
xlat
xlat
lds
cmp
into
sar
fld
mov
incl
mov
lock
repnz
fdivl
cmp
cmp
cmc
add
fcmovbe
les
jmp
into
cld
adc
loop
lret
sti
clc
out
int
into
sar
fadd
cld
in
testl
aam
in
ret
sarl
shr
fidivrl
loopne
int
lds
xor
hlt
test
test
xchg
in
lret
repnz
ljmp
in
sti
fadd
addl
test
xchg
fmul
jecxz
divb
int
cmp
test
aam
jecxz
cmp
fmul
addl
fdiv
das
fdivp
idivl
repz
fxch
in
xchg
hlt
xor
cmp
icebp
cld
fidivl
addb
not
loope
and
xchg
mov
cmc
sub
into
jmp
cmp
stc
test
out
roll
mov
lret
cmc
jmp
das
stc
sti
fcomip
out
cmp
in
call
cli
enter
mov
fildl
cmp
cmp
xlat
fcomi
std
aaa
cmc
test
fistpll
fxch
stc
xlat
xlat
jecxz
lock
int
xchg
aad
ror
repz
cli
xor
in
and
ret
test
test
call
in
fimuls
out
ret
cmp
out
in
cmp
int3
clc
test
jecxz
stc
mov
add
jmp
aas
push
mov
adc
movsl
dec
fildl
jle
add
sbb
mov
out
out
into
ljmp
aam
stc
stc
lret
fdiv
cmp
hlt
cld
enter
jecxz
cli
lret
repnz
cmc
vpaddsw
int3
out
cmp
xlat
sbb
test
decl
jmp
sbb
ljmp
fst
cmp
xor
fcmovb
repnz
xlat
sbb
clc
or
loop
hlt
xchg
aam
das
fsubr
fcmovnu
lock
fstp
cmc
mov
loopne
fucom
adcb
xor
lret
int
neg
sti
out
addl
mov
mov
mov
test
in
call
aaa
ss
ret
shl
stc
ljmp
into
sub
ret
icebp
aam
stc
shr
fadd
flds
in
enter
int
rclb
jmp
icebp
out
out
lret
cmp
testb
rcr
or
mov
shr
clc
int
jmp
loope
in
iret
aam
xchg
icebp
sar
lret
out
out
fiaddl
out
jmp
cmp
int3
in
leave
imul
jmp
idivb
bnd
ljmp
shrl
lret
xor
ljmp
rcl
add
ljmp
leave
ret
out
iret
aam
hlt
div
into
xor
out
testl
out
xchg
nop
in
in
mov
loop
sub
call
fcmovnbe
int
int3
in
in
fcmovne
ret
cmc
xlat
jmp
in
leave
mov
dec
popl
cs
xor
and
sar
cld
loopne
mov
in
xor
lock
std
std
jecxz
fsincos
in
mov
fsubrp
xchg
cld
jmp
xor
ror
cmp
jmp
fldl
rol
mov
cld
cld
out
iret
out
cli
cmp
int
out
cli
aad
stc
hlt
lock
add
mov
sub
fsub
loopne
xlat
fdiv
cmp
cmp
leave
fdivrl
div
mov
jmp
enter
lret
jno
sbb
mov
add
add
iret
sbb
out
rcl
cmc
test
fucomp
std
mov
lock
int3
in
enter
enter
sbb
fstpt
roll
in
cli
jmp
fisttps
ljmp
aam
sar
stc
ds
loop
ljmp
lock
iret
repnz
lret
sar
out
cmp
shl
fimuls
call
xchg
lret
ss
xlat
in
adc
loope
cld
jecxz
icebp
enter
mul
in
or
aad
xor
in
leave
lret
cmp
leave
repnz
addb
neg
out
jmp
xchg
call
xor
stc
test
in
cmp
fstp
stc
ret
lea
icebp
int
xor
repnz
aam
testl
lock
xor
jecxz
xor
cli
icebp
xor
cmp
std
int
ds
sar
mov
loope
test
xchg
xchg
repnz
faddp
loopne
out
fdivrl
iret
div
cmp
fcmovb
hlt
clc
fmuls
iret
test
adc
lock
cmc
cmp
aad
cmp
fcomp
and
sti
add
fsub
xchg
lret
repz
out
cmc
jmp
fidivrs
rcl
in
test
rorl
lret
in
in
int3
loopne
xor
sar
aad
xlat
cmp
ret
ffree
rorl
in
fucom
or
divb
loop
ror
lock
ljmp
hlt
jmp
in
loopne
enter
call
jmp
rcl
cmp
incb
clc
cld
aam
mov
loopne
repz
lock
cmc
aaa
repnz
loop
hlt
aam
xlat
aam
fsubr
enter
mov
jmp
cmp
aad
loop
test
xlat
sti
aam
in
loope
nop
in
loop
lret
out
in
out
fucomp
cmc
loopne
fdivrp
in
cmp
sar
mov
adc
iret
xchg
jmp
xlat
leave
sub
shr
push
add
add
enter
fcmovu
fstps
outsl
inc
push
fisubrs
loopne
jle
add
jecxz
out
shl
cmp
cld
fdivr
int
fcmovbe
icebp
rorb
enter
iret
xor
cmp
xor
fdivrp
cmp
flds
or
jmp
repnz
loop
cmp
ss
cmp
clc
int
stc
roll
sti
les
test
out
ror
ljmp
test
fidivrl
orb
in
lock
orl
aad
int3
rcl
out
incl
rol
jmp
decb
mov
addl
xor
ljmp
repnz
xlat
fxch
decl
xchg
into
jmp
repnz
fiadds
enter
loop
iret
dec
fcoml
aaa
shr
cmp
out
aad
cmp
cmp
test
sti
fstl
shr
ljmp
sarl
out
aam
fisttpll
loope
test
nop
out
mov
iret
aaa
lock
xor
fsubr
ds
ret
std
enter
loop
fsub
xchg
jecxz
xchg
xor
loopne
shr
fdiv
loopne
ret
hlt
in
movl
lock
call
shl
clc
hlt
dec
stc
aam
in
loop
sbb
call
in
xor
ljmp
loop
fdivp
mov
sar
repz
neg
jmp
nop
mov
int
shr
rcl
ss
repnz
sbb
xor
xlat
jmp
fsubp
icebp
rcr
jmp
xor
cmp
loope
shl
call
out
out
adc
adc
in
jecxz
repz
rcr
out
hlt
std
faddl
fnstsw
xchg
ljmp
jmp
cmp
cmp
xor
hlt
repz
out
hlt
cmp
test
ljmp
fcoml
sub
icebp
xlat
cmc
fmul
fidivrs
out
int3
shl
loop
sti
idiv
fmul
icebp
in
in
mov
xor
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
lret
ret
rcl
fcmovbe
lret
shll
in
push
nop
xor
or
loop
jle
add
dec
into
lret
in
cmp
ss
in
cmp
faddp
repnz
stc
fisttps
loope
xchg
shl
hlt
jmp
fnstsw
aaa
rcr
xlat
in
adc
ret
aad
ffree
jecxz
clc
nop
shr
jmp
shr
cli
not
ss
cld
fcmovnbe
xlat
cmc
cmc
and
neg
vpslld
loop
sar
cmp
cmp
lret
cmp
lret
in
fucom
testb
in
fcoms
cmc
and
repnz
fdivr
testb
stc
cmc
mov
fsincos
fsincos
rclb
ss
cmp
xlat
lret
fcom
ljmp
aam
cmc
xchg
sti
orb
aam
xchg
shl
ss
hlt
out
fcom
leave
cmc
cmp
ret
loope
sub
orl
xor
cmp
cmp
imul
shl
fdivr
jmp
xchg
fucom
sub
xchg
in
lock
leave
clc
leave
fdivrp
xor
cli
sbb
hlt
fmull
mov
rolb
shl
cmp
idivl
sarb
xor
lds
ret
lret
addl
xlat
div
enter
cmp
sar
cmp
cli
fcmovu
mov
mov
xchg
repnz
fldpi
cmp
leave
aas
fdiv
aaa
out
xchg
mov
mov
mov
call
lock
into
cmp
roll
test
jecxz
fucomp
and
int
lds
lret
hlt
std
cmp
imul
shl
cmp
call
mov
in
in
not
xor
clc
cmp
shl
cmc
aas
icebp
loop
lret
out
fcmovb
loop
sbb
adc
lock
out
clc
cli
adc
ds
neg
enter
loopne
jmp
and
clc
jecxz
xlat
ljmp
icebp
loope
repnz
fcmovbe
mov
ror
idiv
int
int3
cmp
fxch
stc
int
aam
and
test
mov
mov
jmp
mov
aam
fstp
fcoml
adc
add
add
xor
repz
out
in
sti
icebp
cld
hlt
cmp
filds
fmull
fcmove
loop
xchg
iret
cmc
int
xor
imul
aad
sti
in
out
rcr
fdivr
sarl
jecxz
lock
out
fsubp
fiadds
call
into
lret
int
loop
stc
call
lock
jecxz
in
fstl
enter
in
hlt
shll
out
fdiv
call
call
test
out
aam
in
ror
cmp
stc
in
cmpl
div
aad
mov
clc
fistl
shr
jmp
cmp
test
rcr
test
mov
in
cmc
repz
xor
cmp
cld
into
shr
cld
aas
cmc
std
fsin
cli
mov
aad
lret
out
fisttpll
cmc
out
leave
fnsave
icebp
out
rcl
fdiv
jecxz
mul
neg
nop
call
mov
fdivrs
lret
fucomi
cs
cmp
jmp
lret
loope
idiv
jecxz
shl
movl
xlat
in
ret
xor
fucomi
stc
div
in
int
out
adc
incb
out
test
xchg
jmp
lret
xor
fstp
loope
loop
rorl
stc
in
xchg
xchg
xor
hlt
icebp
fstp
cmp
sarb
xor
in
inc
idiv
xchg
test
xor
jecxz
cmp
icebp
sarl
iret
testb
cli
loop
int3
mov
repnz
xor
enter
hlt
iret
stc
ret
leave
les
in
loopne
loopne
xor
xlat
shl
fmul
fmul
in
aad
rolb
ret
mov
fdivrp
addl
aam
cmp
fcomi
icebp
sti
cmp
jecxz
cmp
sti
leave
mov
dec
nop
sbb
cmc
xchg
xor
xor
stc
das
fdivp
cld
loope
addb
loope
cli
ljmp
xlat
cs
cld
icebp
aam
stc
fucomip
jecxz
adc
xor
add
jmp
ret
enter
int3
or
test
jo
add
add
in
std
mov
jmp
in
test
rcr
int
stc
ljmp
fsub
xchg
fcomip
cli
loopne
dec
lret
out
xchg
mov
cmp
in
rcl
cmp
in
fdivr
loop
jecxz
testb
mov
in
in
iret
sub
icebp
cmp
in
cmc
ror
aam
xlat
aad
addl
nop
iret
jmp
ss
sar
cmp
cmp
test
out
cmp
xor
addl
in
ds
fiaddl
sar
lds
jecxz
call
sub
sti
fcmovbe
stc
lret
adc
ret
neg
jmp
incl
in
repz
icebp
aad
cld
shrb
cld
std
aad
cmp
ds
mov
iret
sub
fdiv
fcmovbe
sar
ljmp
test
enter
xchg
test
mov
lret
icebp
out
fcomi
out
lret
ror
cmp
sub
fsubr
xchg
lea
jmp
int3
out
shll
dec
cmp
cmc
ret
mov
out
xchg
loop
idiv
cmp
cld
xorb
icebp
adc
fcmovb
mov
xlat
mov
lret
addb
fcomi
fincstp
call
aas
call
in
fadds
std
test
out
cmc
stc
repz
hlt
out
repz
cmp
fucom
xor
ljmp
idivb
in
sar
movl
lret
in
hlt
xchg
in
clc
leave
fdivs
ds
in
ror
xlat
loop
jecxz
out
xchg
mov
xchg
aam
lock
repnz
xor
f2xm1
cmp
test
std
addb
icebp
out
fucom
xor
cs
clc
enter
shl
xchg
enter
ret
xchg
into
xchg
out
loop
jmp
enter
lret
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
and
add
add
cmp
cld
fcmovne
not
lret
fmul
dec
flds
in
icebp
aam
xlat
repz
repnz
fmul
repnz
flds
call
mov
rol
aad
in
aam
cmp
out
adc
xlat
cmc
test
xchg
loope
rorb
lret
rcr
out
cmp
xlat
cmc
out
fcmovb
flds
out
fisttps
ret
xor
rcl
std
sub
filds
or
std
repz
loope
repz
int
cli
cli
repz
cmpb
stc
faddp
rcl
and
icebp
loope
rclb
not
jecxz
lds
aas
testb
vpsubsb
in
in
in
roll
fmul
hlt
cmp
ss
jmp
cmp
loop
lock
mov
jecxz
lret
fists
out
leave
ror
jmp
loop
aam
fadd
testb
jmp
in
enter
ljmp
sarl
cmp
cld
repnz
mov
int3
icebp
ror
int3
sub
xlat
lock
xor
loope
clc
loop
stc
ds
jmp
mov
shl
lock
cmp
sti
sti
repz
hlt
cmp
xor
lret
in
leave
std
enter
xchg
in
xor
int3
hlt
in
cmp
sti
fiaddl
movb
xchg
ret
faddl
xor
fdivl
enter
aas
cli
sti
shl
roll
out
jmp
xchg
loop
clc
leave
cld
stc
aad
int3
sbb
out
xlat
cld
cmp
ret
xchg
out
loopne
xchg
rclb
ss
shl
lock
jecxz
imul
fnstcw
loopne
shr
aad
clc
in
std
call
fmul
clc
fsubr
fcom
xor
int3
sbb
aaa
loopne
fprem
loopne
mov
imul
sti
mov
std
nop
xchg
mov
in
jmp
cmc
in
xor
idivb
idiv
hlt
ret
xchg
fiaddl
std
jmp
out
in
iret
ret
out
out
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
cmp
xor
shr
sar
into
fpatan
loopne
out
clc
lock
xchg
mov
shll
xlat
jmp
cli
cld
aad
xorb
xlat
and
std
aam
jmp
iret
iret
leave
into
out
stc
out
iret
cmc
cs
std
ds
ret
fdivp
xlat
std
fisttps
xchg
jmp
leave
cld
mov
cmc
iret
clc
fidivs
cld
cmp
sub
fmul
mov
fadd
jecxz
shr
aam
shll
idivl
in
fxtract
cmp
shl
aad
in
leave
jecxz
stc
flds
repz
repz
lret
rcl
out
test
ret
fstp
clc
rorl
repz
bnd
out
ds
fcmovnbe
les
sti
jecxz
test
jmp
leave
ljmp
fmul
ret
repnz
shl
aad
stc
jmp
rolb
sti
out
cmp
idivl
aas
loop
test
fcomi
aad
loopne
mov
call
iret
rcl
sarb
aam
loopne
icebp
clc
xchg
orl
cmp
jmp
in
stc
in
idiv
fdiv
lret
incl
clc
stc
in
sub
lret
fimuls
call
ret
ret
fmulp
loop
vpsubsb
xchg
lock
fucomip
shr
lret
into
xlat
clc
into
frstpm(287
cli
cmp
cmc
cld
in
int
loope
call
rcr
test
enter
int
ret
fldz
call
rorl
out
xchg
out
into
stc
ss
enter
iret
fst
cmp
test
addb
ljmp
shlb
jmp
cli
idiv
ljmp
cli
aad
fmul
addb
loope
int3
xor
std
hlt
cmp
into
sar
repnz
cmp
mov
out
out
aam
icebp
neg
ljmp
icebp
hlt
shl
xchg
xlat
lret
in
xchg
nop
repnz
fldl2t
push
add
add
aad
iret
aad
aad
pop
aaa
jp
xor
adc
add
imul
stc
cmp
repz
lret
out
test
rcr
cli
out
clc
imul
fmulp
out
hlt
in
jmp
ror
ljmp
cli
aad
cmp
leave
std
fsub
call
icebp
in
fimuls
fcmovne
xlat
xlat
fnop
out
cmp
icebp
test
cli
std
cld
fildl
loop
repz
sub
lret
fdivrs
xor
out
mov
mov
jecxz
orb
jecxz
clc
icebp
fsubr
cld
mov
xor
xlat
call
int3
out
in
mov
aad
sub
int3
fcomp
call
cld
cmp
cmc
in
aam
repz
nop
enter
orb
lock
ljmp
cmp
shr
in
loope
mov
fucomip
in
lret
and
loop
leave
fldz
jmp
in
ljmp
test
cld
movl
leave
fdivs
in
lock
sarb
int3
loope
stc
cld
cli
loopne
vpmulhuw
and
lds
shl
into
cmp
lret
into
ds
sarl
jmp
and
repnz
loopne
in
sub
out
enter
fcom
int
repz
shl
ljmp
repnz
loopne
ret
fdivr
int3
out
shlb
int
ret
xlat
fcos
aas
in
clc
int3
nop
rcl
nop
out
rcl
shl
into
out
in
jmp
aad
aam
test
out
lret
leave
into
fildl
ljmp
cmpb
les
out
ljmp
movl
into
out
aad
xlat
test
aad
enter
loopne
out
loop
test
aam
enter
fcmovb
div
aad
int
hlt
xlat
ds
idivb
fiaddl
faddl
das
stc
out
leave
ror
jmp
in
ret
mov
lret
orl
leave
xor
clc
div
ljmp
loopne
xlat
fmull
iret
out
xchg
dec
jmp
iret
rcl
fcomp
aad
mov
mov
jle
add
in
test
out
shr
ljmp
out
shl
fsub
out
xlat
fxch
aad
mov
test
in
divb
cmc
int3
aad
loopne
fstp
fyl2x
incb
in
and
int
out
aam
lret
loope
loop
shr
and
sub
aad
leave
or
fbstp
out
iret
repnz
hlt
neg
rcl
xchg
fsubr
ljmp
jmp
ss
into
into
iret
ror
cmp
loop
aam
test
cmp
fld
fmuls
lret
jecxz
hlt
aam
hlt
lret
aad
cmp
filds
fxch
jmp
shl
xchg
into
mov
xor
ror
imull
cli
call
ss
sub
in
call
out
cli
lret
test
loopne
ss
xor
xor
stc
out
loop
aad
fdivr
cld
call
faddp
orb
mov
xlat
enter
das
jmp
lock
cmp
xlat
rorb
lret
nop
xor
imul
aam
out
aaa
int3
cmp
rolb
sti
xchg
lret
in
mov
cmp
cmp
cmp
dec
repnz
icebp
fsub
fistpll
cli
out
jecxz
test
mov
aam
fyl2x
in
ror
repz
hlt
cmp
neg
in
fsubrp
test
ret
out
in
jmp
aam
ljmp
out
cmp
std
ds
jecxz
clc
into
hlt
rcl
ljmp
stc
std
jmp
repz
addb
std
out
lret
xchg
aad
repnz
sti
sar
cmp
loopne
xchg
std
out
mov
out
incb
repz
ss
xlat
xor
cmp
ret
ljmp
lea
xchg
hlt
jmp
das
cmp
lret
fucomip
test
and
mov
roll
shlb
out
xor
lret
hlt
cmc
fcmovu
xorl
cmc
mov
imul
add
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
neg
iret
lds
repnz
add
cmp
int
mov
call
ds
cli
shl
neg
push
loopne
in
leave
out
out
idiv
in
in
fdiv
fsubr
cmp
sbb
cld
stc
shl
out
int
in
lock
aam
shlb
ss
shl
loopne
push
fucom
out
icebp
clc
cld
xchg
mov
lret
int
shlb
cli
cmp
iret
clc
loope
cmp
cmp
jmp
jmp
std
mov
xor
hlt
iret
fidivl
fxch
cmp
sarb
clc
lock
ljmp
shl
rorb
stc
clc
cmc
int
into
shr
lock
test
movl
in
rorl
enter
idiv
cli
cmp
loope
sbb
ljmp
loope
out
jecxz
rcr
into
das
aaa
sbb
out
aad
loopne
or
in
fmuls
pop
xlat
div
fxtract
in
out
clc
cmp
loop
cmc
sarl
xchg
loop
test
ljmp
ror
lock
ljmp
std
into
hlt
sar
sti
mov
fcomip
hlt
movb
fnsetpm(287
xor
repz
rcr
xchg
sub
in
mov
lock
mov
lock
cmp
xor
adc
mov
aad
neg
fadd
in
out
jecxz
out
ror
cmp
cmp
cmp
incb
fcompp
icebp
jmp
mov
cld
enter
repnz
aas
ds
aad
in
call
lock
fprem
lret
enter
sarl
iret
add
add
stc
loopne
or
repz
stc
in
cmc
aaa
sti
addl
lret
ljmp
lock
lret
xlat
jecxz
cmp
int
out
aad
icebp
hlt
sar
out
mov
fiaddl
loop
adc
xor
in
sar
cmp
push
xor
mov
dec
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
std
xchg
add
hlt
add
add
in
sti
ljmp
ljmp
rol
in
xor
cmp
loope
hlt
xlat
out
out
ret
idiv
testb
or
in
orl
lret
loope
icebp
cmp
lock
xchg
cli
fld1
in
xchg
sti
in
mov
repz
rcr
sarl
ss
cmp
into
movb
mul
mov
out
lock
std
int3
into
ljmp
fistpll
int
fsubr
sar
xchg
call
loopne
into
lret
cmp
aam
xor
cli
call
jmp
out
fcomi
aam
ffreep
cmp
jecxz
lock
call
in
cld
iret
cmp
fnstcw
rcl
cmc
mov
cmc
loopne
fisttpl
int3
leave
out
cmp
in
lock
cmp
leave
rcr
faddl
lret
call
test
cmc
out
fnstsw
out
iret
xlat
into
in
ret
stc
test
jecxz
aad
mov
mov
mov
lret
sub
xor
hlt
jmp
fadd
jmp
loopne
imul
int3
dec
fcmovu
in
jmp
repnz
iret
aaa
xor
aaa
fcmove
lret
aas
fnstsw
inc
ret
cli
aad
xchg
clc
out
repnz
xchg
xor
ss
test
icebp
fidivrs
test
ret
lret
lock
div
icebp
int3
xor
ljmp
cmp
sti
clc
shr
loopne
loope
lret
fcomi
loopne
ljmp
cmp
call
cmpl
mov
loop
mov
xlat
leave
xor
int
xor
in
out
lret
fmulp
ss
ret
clc
jmp
les
xchg
nop
sub
das
out
cli
sar
lret
int
push
shl
xbegin
jmp
int3
in
cmp
fxam
aam
cmp
fdivr
cmc
rcl
les
testl
shl
shrb
cmp
sar
out
fdivl
cmp
shl
fstp
fdiv
rcr
test
or
jmp
loope
divb
cmp
jmp
aaa
out
xor
add
pop
mov
pop
pop
pop
leave
ret
