push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
cltd
or
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
push
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
scas
iret
push
or
cltd
ffree
ljmp
push
sahf
scas
icebp
cwtl
sbb
mov
xor
jo
out
push
int3
mov
dec
mov
jp
cld
xor
inc
xchg
fistpll
aas
or
dec
sub
cmpsb
ja
xor
scas
fucomp
mov
sbb
jae
or
aaa
jmp
lods
movsb
ss
in
dec
cs
into
push
mov
div
popf
xchg
lods
ss
and
sti
fisubrl
mov
testw
mov
sbb
aaa
mov
add
mov
xchg
push
out
aaa
loop
mov
jmp
xor
clc
inc
inc
daa
in
addl
incb
aad
dec
insb
test
mov
fcoml
shr
movsl
mov
and
scas
dec
push
insl
in
negl
push
shr
rcrl
cld
imul
lock
jmp
sti
mov
movsb
and
mov
inc
stos
mov
ficoms
and
filds
pop
insb
cltd
fstl
pop
lret
sbb
lds
jne
or
mov
addb
xor
jmp
inc
mov
jmp
clc
icebp
mov
icebp
ficompl
inc
jl
jle
jo
jle
jo
xor
push
outsl
leave
push
lahf
mov
sahf
push
xor
pop
pusha
hlt
int
in
aas
pop
insb
inc
jle
pop
mov
popa
gs
std
mov
mov
push
jmp
cmpsl
cmp
mov
das
repz
iret
rcll
jmp
sti
push
push
ret
xchg
and
dec
lcall
fisttps
inc
ret
cmp
cwtl
ljmp
pop
stos
jne
mov
jp
xchg
int
stos
fsubs
and
xchg
mov
xor
add
xor
inc
test
lea
or
aam
gs
fcmove
and
enter
jecxz
mov
cmp
push
aam
xor
loope
fwait
push
sti
fs
fwait
enter
and
das
xchg
xchg
cmpsb
mov
dec
les
mov
xor
ljmp
push
addr16
nop
mov
push
rclb
aad
or
cmp
xor
fucom
cli
pop
add
fidivrl
cmpl
sbb
sub
cmp
pop
mov
jp
fwait
or
and
xchg
adc
fmul
shrb
into
cmp
imul
fldenv
arpl
test
fisubrs
mov
fisubrl
dec
add
push
inc
jle
mov
std
and
loope
int
adc
movsl
xchg
sub
dec
jae
xchg
xor
jg
dec
and
jne
add
or
lret
js
inc
out
or
mov
lahf
jb
mov
jg
les
push
pop
mov
aad
es
insl
xchg
mov
or
aas
lcall
shl
pusha
aam
loope
repnz
mov
cmp
int3
cwtl
push
pop
mov
ds
inc
mov
push
loopne
mov
je
cmp
dec
fisttpl
in
les
inc
rorb
fmuls
call
add
lods
dec
lods
imul
lea
inc
jo
jo
jo
jo
pop
cwtl
xlat
cmp
xor
outsl
in
mov
pop
hlt
mov
jmp
dec
insb
mov
mov
test
idivb
lds
add
outsl
rol
xchg
cltd
add
push
add
sbb
scas
popa
dec
leave
int3
cmp
mov
test
hlt
imul
lret
sti
mov
sbb
mov
jns
or
mov
sbb
or
jge
inc
loop
sbb
push
inc
rol
in
cld
dec
call
mov
insl
jns,pt
cmp
cmp
outsl
out
sub
mov
push
adc
aad
ds
ds
jecxz
fildl
ljmp
pop
push
and
aaa
sbb
in
movsb
fldenv
cwtl
lods
mull
mov
clc
leave
daa
dec
js
xchg
mov
pop
xor
call
pusha
add
pop
jp
sbb
and
outsb
or
sbb
lret
sbbb
jmp
rorl
lods
mov
inc
subb
out
and
loope
or
bound
cmp
cmpsl
jae
fisttpll
push
out
out
jns
push
inc
int
les
enter
pop
in
jecxz
push
and
add
ljmp
cld
icebp
pop
mov
xorl
sub
lea
adc
idivb
xor
inc
xchg
loopne
leave
call
leave
or
or
and
jl
int3
pop
and
adc
ljmp
popa
fsubrl
shl
xlat
out
sbb
fisubl
mov
adcl
outsb
push
data16
lahf
fbstp
dec
xor
push
push
das
or
mov
lcall
xlat
stos
je
test
cwtl
inc
sbb
testl
lcall
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
jle
jns
jp
jo
jle
jo
xor
iret
mov
rol
cld
and
xor
cwtl
cmc
nop
adc
or
outsl
data16
mov
fadd
popa
mov
adcb
mov
cmp
xlat
fdivs
mov
ret
cmpsl
push
sbb
pop
js
mov
call
adc
mov
stos
mov
bound
pushf
rcrl
adc
pop
paddw
mov
ljmp
jge
mov
ret
jno
divb
sahf
lcall
loopne
xor
outsl
fiaddl
ss
push
ljmp
pop
sub
test
xor
mov
je
inc
ret
outsl
cmpb
or
push
inc
sub
aam
out
cmp
push
sti
pop
cmpsb
loop
je
mov
sarl
jecxz
jp
dec
stos
jl
cli
xchg
mov
sub
xchg
add
inc
push
xchg
adc
out
mov
adc
sub
mov
mov
inc
lods
test
mov
push
or
jl
inc
pop
pop
fisubrl
push
stc
stos
mov
mov
xchg
lret
jae
add
pop
cwtl
cmp
ss
pop
or
aad
repz
aam
fisubrs
lods
sub
mov
cld
mov
addr16
out
pop
xor
adc
test
add
sahf
in
dec
roll
push
adcb
push
dec
pusha
shlb
psraw
cld
clc
aam
cmp
inc
push
sbb
jmp
shl
and
sub
jo
mov
cmova
fucomp
rclb
mov
mov
cwtl
mov
outsb
add
ja
inc
mov
int
sbb
xchg
mov
cmp
add
int3
insl
pop
pusha
faddp
ja
cli
imul
sahf
or
dec
pop
testb
xchg
adc
in
adc
repz
jb
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
js
jo
jle
jo
push
jb
adc
mov
mov
into
jae
mov
push
lcall
push
addr16
std
pop
xor
jecxz
mov
dec
jge
enter
push
out
add
pop
ficompl
sbb
or
iret
xchg
test
sbb
outsb
je
xchg
pop
jae
sub
jnp
cmpsb
scas
sub
test
lret
fildll
dec
jns
xchg
outsl
jne
or
xor
mov
mov
sbb
lds
dec
add
fs
repz
xor
lahf
inc
mov
lock
xchg
enter
es
test
xor
lahf
into
pushf
dec
jp
in
jge
pop
lret
add
insl
shr
call
lods
mov
int
xchg
adc
fxch
shlb
ljmp
imul
lret
sahf
lcallw
ds
inc
mov
pop
insb
in
mov
jp
lcall
sub
xchg
adc
dec
jge
lahf
mov
jae
pop
aaa
mov
mov
mov
sbb
push
adc
dec
ljmp
jae
test
hlt
loopne
xchg
cmpsb
xchg
sbb
repz
addb
insb
add
sbb
daa
rcrb
push
inc
loope
bound
adc
ret
xchg
fmuls
dec
jecxz
mov
pop
jge
daa
inc
xchg
leave
cmpsl
xchg
xchg
ja
cli
sbb
loope
test
int
mov
xor
xchg
je
loop
stc
popa
in
ret
push
or
push
cmp
in
or
xchg
lds
roll
xchg
popa
rol
and
adc
stos
pop
mov
cltd
jo
pop
pop
stos
lret
sub
shlb
mov
dec
ljmp
and
pop
mov
arpl
push
mov
pusha
fldl
fistpl
cld
imul
cmp
in
das
popf
push
mov
jge
lret
test
add
add
cltd
sbb
add
sub
add
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
fcmovb
jo
jo
jo
jo
mov
loop
add
push
mov
jo
dec
xor
mov
pop
push
jle
rcll
std
push
test
dec
stos
mov
sbbl
hlt
lcall
or
loopne
add
fisubrl
pusha
lret
std
jge
adc
adcl
fildll
test
or
adc
lock
mov
sbb
jno
lea
xchg
lahf
popa
test
or
inc
adc
xlat
into
or
inc
xor
icebp
push
fbstp
sahf
lret
xchg
rorb
mov
hlt
out
dec
add
nop
cli
or
sbb
scas
push
and
rcrb
dec
xor
scas
cmp
cmp
or
cmp
or
inc
test
nop
shrl
fdivrl
jb
adc
lcall
or
call
in
loope
pop
xchg
mov
cmp
sti
add
push
daa
jl
mov
inc
cmp
and
inc
and
lea
ja
in
outsl
js
gs
jmp
hlt
cld
fcmovne
push
out
jecxz
add
mov
or
popa
adc
mov
stos
leave
scas
xlat
fisubrs
imul
bound
cmc
sbb
xchg
int3
ds
mov
scas
pop
or
out
xor
jne
arpl
fbstp
sbb
xchg
cmp
pop
pop
push
out
cli
scas
xchg
imul
xchg
lcall
ljmp
push
xor
mov
clc
mov
shll
jmp
push
cmp
inc
xorb
bound
xor
daa
daa
xchg
inc
push
xor
ret
or
or
jl
xchg
hlt
lahf
xor
sbb
scas
leave
sti
sub
rcl
pop
add
adc
cmp
jmp
ret
gs
cmpsl
insb
addb
cld
jo
jo
jo
jo
jg
push
fs
sub
aas
mov
mov
fwait
pusha
xor
xchg
insb
mov
xchg
mov
in
fwait
int
xchg
sub
enterw
jae
push
out
lods
pop
cmpb
cwtl
loop
dec
push
mov
jle
cmp
js
lea
push
adc
movsb
sbb
add
xor
cmpsl
jns
jne
cltd
or
les
imul
mov
pop
loop
push
repz
and
xor
loop
jo
rclb
inc
dec
dec
loop
orb
mov
mov
cmpsl
test
nop
in
das
push
fwait
jb
pop
jnp
xchg
or
insb
fldenv
push
aad
cmp
in
dec
dec
push
jno
loope
push
inc
inc
sub
mov
jne
xor
lock
aaa
or
jns
leave
mov
push
pusha
addb
cmp
jne
int
pop
pop
jle
pop
jns
sti
scas
push
push
lods
mov
mov
push
das
jg
xchg
nop
les
push
pop
movsl
out
sbb
js
sbb
mov
sbb
outsl
cmp
lods
mov
and
sbb
adc
cs
popa
xor
jno
push
fbstp
shlb
pop
mov
shlb
lcall
sub
lea
outsb
adc
mov
jp
jg
test
xchg
cmp
pop
mov
outsb
clc
ds
das
popa
inc
gs
add
in
jno
push
jmp
mov
mov
pop
pop
fwait
lcall
out
test
out
in
add
scas
cmp
inc
dec
loop
dec
xchg
cmpsl
adcl
test
push
cmp
cltd
lret
push
xchg
pop
push
rcrb
mov
add
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
decb
jo
jle
jo
and
inc
xlat
aam
addr16
xchg
mov
outsb
and
cmp
hlt
mov
xchg
mov
daa
xlat
ret
clc
dec
adc
xchg
lret
jl
xorb
daa
outsl
loopne
imul
int3
jnp
xchg
pop
cmovns
fs
sbb
stos
dec
mov
adc
mov
push
dec
addr16
lea
call
xor
cmp
pop
and
shrb
lret
scas
sub
mov
fidivs
lods
stos
pop
int
jnp
jg
loope
jmp
sub
jmp
cs
cmp
push
cmp
push
fdivrs
ret
and
out
int
rcll
push
mov
sub
add
fldz
inc
sarb
xchg
ret
dec
jns
in
mulb
cltd
push
in
or
gs
push
sbb
psubb
int3
pop
dec
mov
add
adc
popa
mov
ljmp
lods
fisubs
into
mov
sahf
mov
mull
sbb
jmp
adc
pop
cmp
mov
shll
mov
add
sub
pop
cmpsl
addr16
mov
xchg
lods
enter
xchg
bound
imul
cwtl
xor
xor
ds
iret
mov
xchg
rcrb
xchg
scas
mov
insb
lea
jae
or
ret
pop
sahf
and
push
cwtl
popa
mov
push
jl
jecxz
and
inc
shl
sbb
mov
xlat
insb
inc
das
scas
pop
sbb
leave
into
lods
xchg
sti
pop
pop
cmpb
adc
outsl
inc
lock
dec
push
jl
mov
mov
fstpt
rolb
dec
and
sub
xchg
add
inc
ljmp
out
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
mov
jo
jo
jo
andb
jg
stc
sub
sti
ret
push
psubsw
push
adc
les
ljmp
call
sub
xor
enter
cmp
lahf
xlat
hlt
test
cmp
ret
or
mov
ljmp
adc
add
and
imul
jl
in
push
and
pop
cmp
mov
movsl
in
xor
rorl
mov
std
inc
repz
stc
xor
add
push
push
repz
sub
lods
imull
loope
xor
xchg
push
es
push
jno
mov
sub
inc
or
mov
in
das
ret
outsl
pop
out
xchg
andb
mov
xor
sbb
sub
pop
or
addr16
xchg
dec
fcomps
lea
gs
push
mov
lahf
aad
push
jo
js
mov
movups
lock
jl
roll
loop
or
and
add
pop
push
imul
mov
jbe
scas
popf
ja
fsqrt
xchg
xor
jg
mov
nop
loopnew
mov
cwtl
inc
lahf
mov
or
lods
pushf
out
sahf
pushf
xchg
and
sub
imul
mov
fdivs
ret
hlt
ret
pop
adc
and
pop
mov
ret
jnp
orl
dec
cmp
sti
stos
xchg
sysexit
gs
hlt
cmp
sub
out
and
cmpsl
lods
xchg
and
xchg
lahf
cmp
test
xchg
imul
ret
outsl
lods
mov
cmp
lods
xchg
or
test
pop
sti
int
jnp
cmc
push
mov
inc
mov
xchg
jnp
les
xchg
shl
dec
lret
mov
xchg
arpl
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
add
in
or
push
movsl
fnstsw
out
aas
mov
shlb
and
sahf
dec
scas
jae
repnz
fwait
bound
mov
insb
and
dec
dec
pop
out
clc
je
js
cmp
fwait
push
add
lods
xchg
imul
jp
out
cltd
inc
scas
pop
test
vmwrite
fcomps
test
fdivrp
xchg
fbld
push
xor
push
ljmp
fmuls
outsl
cli
out
cmp
imulb
push
mov
dec
xchg
lret
sub
or
jle
push
repz
mov
ds
stos
nop
dec
push
out
jg
mov
aas
cltd
aad
sahf
dec
out
hlt
fldl
mov
xchg
push
movsl
pop
fwait
xchg
pop
sbb
popf
ja
sub
scas
inc
cmp
popf
and
stc
pop
mov
test
mov
mov
mov
adc
add
pop
push
dec
jp
scas
sub
int
iret
pop
mov
les
out
pop
movsl
mov
in
inc
mov
and
mov
jmp
mov
dec
les
fcomps
and
aas
xchg
testb
and
arpl
or
pop
stc
outsl
or
jmp
imul
sub
stos
mov
notb
mov
adc
dec
inc
sahf
rcrl
int
pop
cld
ss
mov
call
jp
pop
fadds
jp
and
push
shll
add
outsb
xlat
inc
mov
jns
insb
out
mov
stos
mov
and
mov
jle
inc
sbb
inc
lods
push
cli
lods
enter
adc
pop
test
loope
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
mov
mov
rcll
push
pusha
adc
sbb
mov
add
cmp
push
xor
das
icebp
stos
pop
movsb
aaa
stos
pop
mov
sbbl
xchg
xchg
mov
dec
or
aam
fsubrp
mov
lret
adc
out
data16
lods
insb
cmp
int3
shlb
mov
pshufw
and
sbb
jp
orl
jp
lahf
and
clc
test
or
aad
insl
sbb
jno
sarw
repz
std
shlb
dec
out
je
out
xchg
scas
leave
jge
addb
adc
rclb
test
enter
dec
sub
outsl
out
xchg
add
xchg
mov
adc
push
mov
inc
pusha
ja
mov
clc
push
or
jge
clc
push
cltd
and
outsb
add
mov
sub
repnz
push
mov
mov
ret
inc
inc
jbe
cmp
pop
add
scas
fxch
inc
dec
sub
loope
mov
fwait
jo
cmpl
xchg
adc
test
or
xor
out
push
loop
js
jns
sub
jbe
or
test
add
test
enter
jmp
jno
test
dec
cmp
xorb
or
aam
addl
aaa
js
aaa
xchg
movsl
mov
pop
test
inc
xlat
jbe
clc
in
add
dec
out
mov
pop
mov
add
sub
dec
mov
or
out
out
or
popa
hlt
jbe
loopne
dec
fmuls
shll
and
xchg
mov
adc
push
mov
mov
cmc
adc
jg
xchg
das
and
in
jae
das
adc
xor
filds
xlat
cmpsb
flds
in
mov
or
enter
sbb
sub
jo
cmp
lret
lahf
mov
out
sbb
jp
jge
xchg
xor
imul
imul
fstl
icebp
add
xchg
ret
lret
mov
iret
icebp
addl
out
push
clc
push
stos
out
in
xor
jbe
popa
mov
sub
mov
dec
pushf
push
mov
pop
cli
mov
fs
jl
fidivs
xchg
loope
xchg
scas
lods
xchg
call
in
jmp
and
int
or
imul
subb
and
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
cmp
jo
mov
jmp
dec
mov
es
cmpsb
lods
sbb
stos
in
or
mov
jns
aam
clc
jl
or
push
cli
loopne
fiaddl
into
and
pop
clc
lock
dec
mov
sub
ljmp
or
nop
jmp
sahf
aas
jne
fcompl
jp
rorb
mov
mov
mov
fists
mov
mov
xchg
and
xchg
fstps
cmp
cs
imul
mov
xorb
rol
std
mov
dec
mov
mov
rolb
mov
mov
outsb
jp
push
popa
inc
and
mov
idivb
sbb
xor
or
call
fldt
jnp
loope
addr16
mov
popf
aam
leave
push
dec
lcall
popa
das
or
mov
add
lcall
pop
les
dec
inc
adc
inc
fidivrs
xor
mov
adc
fisubs
mov
fnstcw
int3
mov
nop
push
lahf
push
in
xchg
mov
js
xchg
jl
mov
mov
stos
lahf
and
icebp
lods
push
inc
test
rcrl
pop
mov
mov
push
call
aas
movsb
xor
dec
sub
es
adcb
lea
aaa
push
out
test
add
and
jp
and
je
sub
sbb
mov
cmpsl
mov
inc
daa
ffree
repnz
dec
lock
push
xchg
ficoml
dec
and
jl
aas
bound
cmp
pop
xchg
stos
xchg
mov
mov
mov
add
adc
mov
xor
sbb
and
mov
push
mov
lock
in
addb
aaa
loope
fs
sub
cmp
push
jnp
pop
movsl
dec
xchg
xor
aam
cli
cli
jns
cmc
mov
adc
cltd
push
inc
cmp
ficoms
adc
shl
filds
test
xor
aad
and
icebp
out
dec
jae
xchg
adcb
add
icebp
jp
jns
push
and
push
push
andl
or
repnz
xchg
ffreep
add
jecxz
xchg
insb
add
pop
inc
jmp
mov
jnp
xchg
mov
les
push
mov
mov
inc
pop
lods
insb
xor
rolb
leave
mov
cmp
orb
arpl
dec
ror
sbb
mov
mov
xor
add
jmp
fistl
loope
lds
add
jne
stc
cld
pop
jo
mov
push
outsb
stos
fistps
stos
xor
and
xor
leave
in
insl
and
cs
push
inc
ds
lods
and
into
notb
add
enter
ja
pop
and
cmpb
int
arpl
pop
mov
cmp
sub
xchg
inc
into
jg
sahf
adc
cmpsl
popa
sbb
xchg
mov
push
imul
mov
cli
inc
or
xchg
push
scas
xor
stos
mov
sti
mov
cwtl
jmp
idivl
add
inc
push
mov
xchg
push
mov
cmp
mov
repz
cmp
or
mov
or
cmp
sbb
xor
jne
nop
sub
jo
repz
and
sbb
imulb
dec
ficomps
js
push
ljmp
jg
and
int
mov
push
pop
nop
adc
icebp
add
shll
pop
in
pop
test
cmp
cmpsb
aas
xor
mov
push
test
dec
add
fldl
jnp
sbb
and
iret
cld
fsubr
xor
fdivl
leave
or
jns
out
loopne
imul
shl
dec
cmp
xor
ss
adc
pop
pop
mov
les
xchg
lock
push
push
incb
les
daa
jmp
loope
xchg
mov
inc
bound
and
sbb
lods
or
pushf
in
insb
jb
decl
dec
mov
push
dec
jo
mov
lds
in
adc
bound
sbb
sub
add
inc
jno
cli
stc
scas
mov
sbb
cmpsl
push
inc
jp
testb
leave
pop
popf
push
movb
ret
push
movsl
das
push
pop
jbe
sub
gs
push
add
repnz
aaa
lea
fcompl
adc
mov
sub
shll
or
andl
imul
test
inc
pop
sti
pop
jmp
insb
test
mov
ja
add
jge
ja
dec
lock
add
dec
lahf
cld
popl
addr16
fistpl
leave
nop
sahf
cli
add
sub
movl
inc
cld
xchg
lods
out
adc
scas
cmp
rclb
pop
jecxz
push
push
clc
fsts
jecxz
push
out
jl
pusha
jbe
lock
popf
incl
mov
mov
dec
popl
cwtl
dec
mov
lcall
popf
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
loopne
loopne
adc
jo
jle
jo
leave
adc
add
insb
add
mov
aas
and
cmp
push
les
cld
data16
fs
arpl
fstps
xchg
sub
xchg
or
cmp
movsl
lods
adc
jnp
ss
push
mov
shl
sub
shll
or
pop
mull
mov
les
mov
sbb
xor
pop
sbb
fstps
xchg
lods
sbb
cmpb
repz
lahf
cmp
pop
pop
push
pop
gs
rclb
rcrl
shl
test
xchg
rclb
outsl
sbb
xchg
push
test
loopne
adc
fidivl
movsb
gs
outsl
xor
push
pop
pop
xor
aam
insl
pop
sahf
fsubs
in
dec
das
mov
pop
mov
in
test
xor
ficompl
cmp
ficoml
outsb
repz
fs
jns
mov
cli
add
pop
pop
jb
arpl
enter
dec
pop
fs
cmpsl
jno
or
and
sti
xchg
mov
xor
or
lods
jns
popf
adc
xchg
inc
orb
jecxz
sub
inc
dec
adc
add
jae
out
jp
xor
mov
int3
push
xchg
add
lea
sbb
mov
sbb
pushaw
fisubs
push
xlat
filds
inc
mov
adc
dec
fsubrp
fists
pavgw
test
push
sar
xlat
sbb
jg,pn
push
loopne
lahf
sub
sbb
mov
out
loopne
push
movsb
cmp
pop
sbb
mov
mov
push
sti
cltd
pop
outsb
xchg
cltd
xor
xchg
push
lods
and
fnstsw
pusha
cld
pop
stc
sbb
dec
cwtl
loop
push
in
pop
or
jge
jl
in
mov
xchg
insl
jmp
adc
sub
jge
add
sbb
jbe
dec
addr16
dec
jno
ss
and
add
testb
xor
mov
pop
cld
orl
pop
and
loopne
dec
sbb
or
cs
sub
fwait
dec
pop
xchg
xchg
sub
jl
arpl
add
cltd
inc
aam
sub
test
xor
call
repnz
stos
and
fadds
iret
pop
mov
in
lock
shlb
xchg
xchg
and
pop
xchg
add
sbb
loope
shlb
jb
mov
or
out
jae
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
xchg
js
jo
cmp
nop
lods
fidivrl
inc
add
xchg
mov
cmp
mov
or
dec
pop
aaa
rorb
cmp
repz
pop
fs
test
ret
aam
sub
outsb
in
xchg
cmp
cli
mov
cmp
mov
stos
or
xchg
ficoml
int3
stos
lahf
fnstenv
push
mov
push
nop
adc
ret
push
fcoml
cmpsb
bound
or
mov
leave
mov
cmp
xlat
stos
mov
inc
pop
and
cmp
ret
xchg
addr16
inc
and
sub
stos
pop
les
out
test
jle
sub
bound
jg
inc
jae
loopne
mov
sbb
aaa
inc
imul
int3
mulb
std
enter
lods
out
scas
cltd
lret
and
bound
xor
outsl
inc
das
out
mov
and
mov
xchg
push
dec
loop
and
andl
scas
dec
mov
das
in
mov
icebp
fbld
add
xchg
pop
repnz
mov
inc
imul
push
push
pop
and
inc
fcmovnb
xor
jnp
ss
adc
dec
scas
cmpsb
into
push
cmp
push
mov
push
add
mov
mov
mov
shrb
pop
sar
lret
sti
call
lea
in
push
fwait
lods
out
rcl
mov
jo
cs
mov
sub
xchg
idivl
jb
imul
sar
jne
mov
mov
cld
jge
mov
ljmp
sub
xor
cltd
xor
push
int
xor
dec
or
jp
test
xchg
js
push
cmp
testb
popf
xchg
mov
sbb
fildll
lahf
push
sbb
movsl
or
cmc
cmpsl
mov
mov
das
subb
mov
mov
cmpsl
fsubrl
jle
sbb
mov
daa
dec
stc
ss
pusha
sbb
mov
out
insb
mov
xchg
dec
sahf
aas
sbb
std
push
fldcw
push
pushf
mul
fisubrs
dec
fbstp
jge
sarb
sbb
sub
popf
add
jns
ret
not
jge
cmp
int
mov
jbe
ret
bound
pop
mov
sub
add
in
sub
aaa
push
push
ja
adc
ret
imul
push
adc
push
lcall
jns
push
push
fmuls
pop
cmp
and
mov
xor
setns
push
rcrb
mov
adc
mov
push
out
mov
xchg
hlt
push
xchg
lret
fdivrs
ret
cmp
inc
inc
das
shl
sub
pop
cli
xchg
mov
pop
sub
mov
and
push
jg
lea
fsubl
inc
jge
sarb
jle
jno
xor
imul
outsb
xchg
jecxz
mov
or
cwtl
lahf
imul
decl
mov
jmp
inc
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
mov
push
jo
cmp
fcomps
inc
cmp
fs
ret
das
fwait
cmpsl
pop
es
sub
icebp
sbb
out
jmp
and
sbb
jbe
jmp
test
lea
push
cwtl
bound
roll
lds
lret
andl
pushf
dec
insl
xchg
das
pop
jmp
test
jo
or
xchg
stos
push
push
add
imul
in
shrl
hlt
repnz
or
shlb
data16
mov
insl
cmpsl
push
jno
roll
rcr
out
fcoml
xor
int3
jns
ss
test
pop
sahf
and
xor
pop
les
fcmovnbe
mov
add
xor
mov
es
mul
add
xchg
testl
mov
sbb
daa
cs
mov
pop
test
inc
sub
leave
push
loop
fwait
dec
cwtl
test
inc
mov
les
adc
push
aad
xchg
lcall
or
dec
mov
sbb
or
and
in
mov
ss
fcompl
xchg
out
das
xor
fs
mov
ss
mov
mov
pushl
cwtl
xchg
rorl
fmul
popa
leave
push
jae
dec
push
pop
push
sbb
xchg
jmp
push
or
movsb
fildl
cli
mov
lods
mov
rcll
loope
out
jae
cmc
mov
push
sbb
leave
cmp
jle
out
enter
lea
das
ja
xchg
sti
add
rol
jg
in
dec
jge
and
jmp
in
fidivl
lar
popf
or
or
jnp
jle
daa
xlat
mov
bound
sbb
mov
cmpb
stc
xor
call
mov
in
imul
fwait
daa
push
pop
or
clc
aas
in
shl
popa
xchg
loope
or
mov
or
mov
inc
into
pop
stos
popf
mov
shll
dec
jns
insl
jo
sahf
mov
loop
cmp
pop
cmp
pop
rcll
sbb
movsl
js
or
and
adc
dec
aaa
imul
dec
loop
movsb
popf
dec
mov
cmp
and
mov
popf
js
xor
ljmp
decb
dec
xchg
ss
sahf
shrb
int3
pop
push
xlat
aad
or
mov
jb
or
push
cltd
into
and
outsl
js
push
inc
inc
idivl
cmp
dec
push
cwtl
insb
jl
cmpsb
sbb
jg
ljmp
push
adc
stc
and
rcll
push
int
lock
lahf
std
lods
invd
adc
fs
mov
divb
jg
mov
cmc
sub
lcall
jo
aaa
testb
dec
scas
lods
cmp
add
arpl
cmp
repz
adc
xor
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
sub
jo
jge
jo
imul
xor
inc
mov
fnstenv
pop
or
add
mov
test
inc
cmp
lahf
xchg
lahf
xchg
das
les
and
mov
dec
sbb
clc
sbb
in
cltd
jne
inc
std
jne
js
mov
out
scas
adc
jmp
push
scas
sub
test
pushf
xor
mov
adc
dec
sbbb
cld
subb
cmc
sbb
add
mov
fdivrl
sbb
lcall
fistpll
stos
dec
xor
xor
mov
push
jo
fsub
gs
mov
cli
xlat
repnz
lcall
ss
and
jp
mov
mov
xlat
sti
mov
sahf
pop
dec
xchg
filds
inc
out
cltd
mov
mov
jne
pop
test
mov
xlat
lcall
jbe
jns
or
das
loope
sbb
mov
push
aaa
xlat
push
push
es
and
pop
mov
sub
repz
add
xchg
cwtl
mov
and
mov
jmp
cli
push
loop
xor
lock
jp
push
jo
lea
ja
test
lods
rcl
mov
cli
pop
sbb
cmp
stc
scas
aas
sbb
sbb
pusha
outsb
imul
push
lea
or
fwait
in
pop
repnz
or
sbb
xor
aam
inc
dec
mov
or
addr16
pop
and
jle
iret
cmp
and
loopne
sbb
mov
adc
dec
mov
dec
xchg
das
and
jne
mov
aam
sbb
ret
ds
push
roll
push
mov
out
mov
add
das
inc
popa
cmpsl
jl
shl
inc
icebp
inc
mov
in
pop
and
data16
fwait
mov
sub
fimuls
aas
jns
fcmove
lret
push
dec
popa
sbb
std
cmc
not
cmp
mov
lds
fiadds
rcr
dec
xchg
inc
pop
mov
lods
add
and
lods
aam
sbb
xchg
mov
dec
cli
leave
rclb
xchg
sub
not
adc
enter
js
imul
xchg
mov
insb
cmpsb
jo
sub
xchg
xchg
stos
and
inc
fstps
xchg
dec
aaa
mov
xchg
sahf
fucomp
nop
js
adc
loope
je
sub
cmp
je
cmp
jne
out
rcrl
and
mov
and
and
or
divb
jg
cmp
imul
cmp
mov
ljmp
mov
adc
sahf
sub
push
xchg
movsb
push
rcrb
sub
jnp
ficoms
lock
xchg
mov
or
jmp
inc
mov
mov
pusha
scas
stos
cs
sti
aaa
cmpsb
cmpsl
sbb
movsb
adc
sub
aas
pop
pop
cli
cmp
xchg
mov
adc
push
push
and
mov
repnz
nop
popl
clc
inc
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
movaps
jo
cmp
fs
ret
and
sbb
push
div
push
add
adc
pop
mov
aam
cmp
lea
test
xchg
and
loop
dec
cmp
jp
std
cld
jo
dec
lret
out
idivb
jecxz
pop
loope
loopne
push
xchg
mov
sbb
ljmp
push
lods
xor
stc
outsl
fwait
pop
and
add
insb
std
into
push
dec
enter
pop
outsb
lahf
aas
mov
es
adc
jg
pop
gs
std
ss
insl
or
push
test
cwtl
adc
adc
pushf
sahf
jno
rolb
and
push
cmc
jae
je
inc
mov
cmp
jbe
mov
pop
inc
orb
push
cmp
and
les
clc
jl
sarl
in
aam
ret
pop
les
cmp
and
movsb
loop
xchg
lock
and
add
mov
es
rcrb
andb
adc
or
out
mov
dec
mov
cmp
add
lds
clc
mov
dec
dec
adc
mov
out
imul
aaa
mov
in
mov
shr
leave
test
fstl
jecxz
mov
cmp
xchg
mov
insl
xchg
pop
fimuls
add
dec
inc
adc
mov
loop
vmread
adc
push
xchg
mov
enter
stc
mov
mov
mov
and
cmp
aad
or
movsb
ds
push
fildll
jae
addr16
lret
add
or
inc
push
outsl
ljmp
call
cmp
xor
test
sbb
xorl
mov
cmp
aad
sbb
mov
fldcw
add
into
int
stc
pop
add
mov
ror
jns
xor
dec
mov
sti
iret
cmc
xchg
je
cmpsl
or
fdivrp
mov
mov
mov
mov
xchg
pop
pop
xchg
adc
mov
jbe
jno
movsl
mov
jl
out
push
push
inc
pop
sub
dec
loope
mov
cld
jmp
inc
push
jl
outsb
add
testl
in
adc
lcall
add
ret
in
int3
sub
pusha
or
dec
mov
and
lret
lods
inc
jne
or
scas
mov
mov
inc
movsl
ja
jle
cmp
cld
and
prefetch
shll
jg
jecxz
xchg
xor
call
inc
or
push
les
dec
or
sub
inc
xor
adc
mov
inc
inc
das
sti
sub
test
int
loop
cmpsl
andb
mov
dec
ret
imul
pop
xor
xor
mov
dec
push
int3
xor
rolb
and
sub
xchg
xor
xchg
inc
sbb
cs
call
adc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
cmp
and
jo
jge
jo
pop
mov
sub
ljmp
enter
pop
pop
pop
lcall
and
loop
pop
lcall
bound
gs
xor
pop
loop
jg
jnp
sti
jns
gs
stos
xchg
icebp
test
andl
jnp
and
mov
xchg
or
loop
xor
inc
bound
mov
mov
xor
gs
and
pop
cmpsl
sti
insl
lock
popf
mov
rorl
stos
add
jle
fistps
dec
movsl
mov
dec
ljmp
nop
sub
jbe
lret
push
hlt
bound
fdecstp
int
jb
add
and
ds
mov
test
mov
dec
cwtl
mov
sub
fdivrs
pop
xchg
test
add
js
add
jecxz
push
xor
flds
fimull
stos
scas
aad
pop
pop
xchg
sub
shlb
dec
push
sbb
sar
int
mov
jae
sub
in
out
and
loope
mov
xchg
mov
scas
push
xlat
jecxz
inc
push
int
pop
cmp
ljmp
movsb
pop
jae
mov
push
push
push
push
pop
out
popl
pop
jg
enter
aas
inc
or
or
adc
je
je
lods
xor
lret
int3
mov
mov
gs
aaa
out
adc
inc
in
loop
inc
faddl
pop
enter
dec
cld
dec
addb
lcall
imul
aam
jb
int
loop
push
adc
cmpsb
jg
push
or
out
lock
sahf
arpl
cltd
dec
in
daa
xor
and
outsl
xlat
insb
mov
sub
rcrl
push
rolb
jmp
push
leave
mov
mov
mov
xchg
cmp
fisubrs
aam
fiadds
lods
int
add
shll
pop
andl
jg
xchg
sbb
push
bound
ljmp
jecxz
dec
mov
test
sub
dec
lds
mov
inc
mov
aam
and
jno
subb
sub
int3
jns
sub
es
cli
or
mov
in
gs
jne
mov
mov
cmp
mov
jg
scas
pop
and
test
nop
sub
push
mov
jno
dec
mov
ja
cmpsl
movsb
cmp
iret
add
sub
push
popa
jb
pop
cli
jg
inc
rolb
scas
ret
gs
add
inc
push
push
into
rorb
dec
mov
mov
dec
dec
pop
add
sbb
stos
cltd
and
cmpsl
push
ja
mov
cmpsl
ljmp
xchg
cmp
movsl
push
aas
mov
or
jae
mov
cmp
xchg
das
xchg
out
or
inc
sub
movsl
push
imul
cmc
rcr
inc
inc
pusha
and
es
mov
cmpsl
imul
inc
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
mov
insb
mov
cmp
gs
push
mov
sbb
in
and
pop
or
xchg
or
fcomps
mov
mov
mov
xchg
dec
pushf
inc
sub
mov
dec
scas
xlat
push
mov
out
xchg
hlt
and
iret
jmp
scas
ret
jo
stos
lcall
mov
xchg
jecxz
push
out
mov
cwtl
adc
mov
lock
mov
icebp
jg
sub
scas
xchg
mov
push
inc
imul
cwtl
cmp
mov
mov
out
js
dec
mov
push
lcall
daa
cmpsb
lods
adcb
adc
in
jg
sbb
lcall
lahf
aaa
push
fldt
push
and
cmc
ds
loope
inc
aas
inc
loop
dec
and
xor
mov
xchg
push
sub
cmpsl
leave
jp
and
std
dec
icebp
or
mov
popa
or
jecxz
les
adc
dec
sub
into
mov
sbb
push
fildll
jne
pusha
cmc
jl
mov
xor
es
rcl
push
dec
mov
enter
or
inc
xchg
xor
mov
mov
test
stc
adc
jl
inc
push
jno
es
aam
cmp
insl
mov
loopne
jg
enter
test
ja
jmp
push
mov
dec
mov
or
lret
pop
mov
inc
xor
add
out
cltd
out
fnstcw
adc
das
stos
xchg
rol
push
ficoml
popl
insb
sbb
xchg
fisubl
cli
call
bnd
inc
or
in
shl
fdivs
xchg
push
mov
jns
jp
push
push
ds
sahf
dec
cmpsl
and
dec
adc
enter
in
addb
mov
xor
pop
and
enter
and
out
lds
sarb
xchg
sbb
mov
mov
dec
call
cmpl
xchg
or
pop
xchg
add
call
dec
mov
xchg
vmwrite
mov
inc
scas
aam
jbe
mov
fistpl
fsubs
sarl
stc
or
inc
or
loope
stos
mov
ljmp
sbb
jo
and
mov
out
dec
push
fbstp
sbb
movsl
out
enter
pop
fstpt
inc
ljmp
cmp
pop
pop
add
iret
mov
mov
icebp
icebp
filds
ljmp
mov
sub
fs
shlb
loop
jmp
jle
fldcw
and
cmp
push
add
or
sbb
pop
test
daa
push
jo
scas
fstpl
ss
loope
mov
cmp
dec
popa
sti
flds
cmp
ficompl
push
sub
jmp
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
in
xchg
xchg
jo,pn
cmp
cs
mov
ret
lret
adc
das
pop
orl
aad
popa
mov
xor
xlat
popw
shr
adc
das
lods
jg
out
out
in
mov
js
cmpsl
ftst
jns
fstl
movsb
leave
outsb
ljmp
and
mov
xchg
push
pusha
mov
js
cmp
ljmp
push
ja
std
sbb
stos
or
add
xor
jl
dec
xchg
imul
pop
push
dec
outsl
negl
xor
ret
insb
pop
cmp
pop
cli
jmp
jno
enter
mov
pop
addl
js
out
xor
mov
in
sbb
add
shlb
mov
into
testb
insb
inc
or
movups
gs
mov
jmp
pop
jae
cwtl
push
es
dec
add
cmc
test
cmpsl
inc
lret
lahf
mov
mov
sub
testl
repnz
popf
lahf
mov
mov
xchg
jae
push
xchg
and
push
cmp
jnp
cmc
in
push
lahf
xor
iret
push
aam
sahf
xchg
hlt
rcll
shrl
add
nop
test
in
and
and
and
lods
mov
xor
mov
xchg
push
mov
jge
inc
sbb
or
cmp
popa
xchg
ret
mov
and
xchg
jg
mov
sub
inc
cltd
jge
sub
into
inc
rcll
inc
leave
pop
int3
icebp
mov
cli
push
out
call
sbb
push
dec
xor
adcb
ss
cmp
sbb
in
test
fdivrp
cmp
subl
sub
push
sti
lret
lcall
pop
mov
pop
xchg
xor
stc
dec
outsb
pop
fs
mov
lds
ret
or
addr16
mov
add
ljmp
sub
xchg
pop
dec
into
iret
sbb
popf
jne
pop
or
aam
xlat
xchg
push
mov
popf
icebp
cli
sub
and
cmp
ret
add
mov
rol
js
adc
lods
icebp
jg
in
xchg
ss
mov
pop
movq
push
xchg
jp
lcall
xchg
lea
sbb
call
xchg
sub
sbb
pop
pop
out
and
inc
mov
insl
xchg
int3
xorl
imul
fs
shll
loop
in
dec
mov
mov
mov
add
ror
scas
sbb
jnp
repnz
pop
xor
mov
or
dec
or
fisubrl
aam
aaa
jbe
out
lds
fwait
xor
mov
insl
push
cmpsb
enter
fnstsw
aaa
mov
adc
fisttpll
sbb
mov
lret
vrsqrtps
xor
bound
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shl
jnp
push
sub
cmp
pop
push
ret
push
mov
pop
pusha
stos
mov
mov
mov
xchg
cmpsl
frstor
xor
aad
fisubl
xchg
mov
bound
pop
jb
dec
sbb
nop
sub
dec
inc
jo
je
iret
sbb
clc
mov
or
or
jns
andl
outsb
aas
outsl
push
aaa
scas
sbb
pop
insl
adc
out
test
roll
or
ja
and
mov
scas
loope
in
xor
inc
imul
lds
mov
mov
filds
sbb
int3
mov
test
leave
iret
int
ror
mov
leave
aad
push
fs
dec
es
jge
mov
pop
sub
dec
mov
testl
arpl
sub
jp
popf
mov
pop
mov
or
aad
pop
sub
mov
lock
xor
jbe
stos
out
jno
jg
cwtl
fdivl
aad
mov
sub
sbb
sbb
mov
pop
push
jbe
inc
seta
sbb
jnp
mov
sub
popa
mov
pop
loope
imul
sbb
xor
in
imull
mov
mov
cmpsb
out
or
jae
in
nop
sub
dec
mov
mov
movsl
inc
outsl
cmpsb
xchg
jno
pop
cld
outsb
mov
mov
rorb
cmp
or
jne
fwait
push
pop
cmp
xchg
inc
add
mov
or
lods
pop
adcl
subl
adcl
add
outsb
or
ret
mov
std
or
ret
add
testl
inc
pop
xor
test
mov
cmpb
lds
les
jae
mov
repnz
push
addl
push
out
fdivs
and
gs
pop
add
add
aad
pop
aad
jle
sub
mov
cs
mov
cmp
cmpsb
push
test
das
cmp
sub
loope
test
sarl
orb
or
jmp
in
insb
mov
arpl
sarb
or
sbb
int3
or
or
inc
dec
decl
pop
sbb
jl
pop
push
inc
sub
or
daa
in
cmp
pop
imul
mov
fistl
test
into
repnz
xor
push
add
insl
inc
and
hlt
lret
jmp
cld
push
mov
out
push
mov
into
xchg
rorb
aaa
call
cmp
and
cmp
pop
or
lea
mov
push
scas
in
pushf
out
xchg
js
in
fmull
jnp
outsb
jmp
adc
ljmp
adc
or
sbb
mov
mov
push
shll
cmp
jne
in
aad
out
incl
sbb
in
mov
daa
fwait
cwtl
cld
jg
mov
ljmp
jecxz
adc
add
shrb
test
add
in
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
jmp
aaa
jo
stos
jle
jo
jae
jbe
pop
adc
xlat
mov
sahf
andb
mov
push
mov
jo
pop
xchg
xor
loopne
jp
in
mov
sub
enter
loop
cltd
push
cmpsb
loope
cmp
jnp
lcall
xchg
lods
xor
add
arpl
xchg
push
stos
pop
push
ret
js
sahf
xchg
leave
push
push
pop
xchg
test
dec
fdiv
pop
cmp
arpl
and
cmp
aad
mov
mov
mov
pop
insb
xor
pushf
push
mov
stos
jb
in
pop
push
sbbl
data16
adc
pop
and
out
cltd
fwait
sub
push
int3
inc
push
data16
insb
cmp
imul
push
cmp
fnsave
mov
call
mov
sbb
xor
mov
push
ret
imul
int3
out
sar
jmp
aad
bound
xor
push
cmpl
sub
scas
adc
jne
mov
pop
clc
cmp
adc
jno
sub
lcall
or
jmp
sarb
mov
icebp
mov
inc
es
lds
scas
aad
daa
cmp
in
dec
cmpsl
pusha
test
xlat
and
push
jno
dec
xorb
inc
roll
lods
fwait
pop
dec
shl
mov
das
add
bound
cs
loopne
cld
xor
std
sbb
insl
ret
pop
popf
ja
mov
out
jg
insl
or
out
pop
mov
lods
pop
lds
dec
cmp
dec
outsb
mov
or
fcmovne
stc
pop
test
fisubs
lods
lret
pop
or
ret
outsb
sbb
leave
rorl
jns
test
jns
dec
clc
cltd
fucomp
sbb
test
test
scas
mov
cltd
xchg
xchg
incb
pop
jecxz,pn
jmp
add
mov
fbld
cld
fisttpll
addr16
loopne
push
sub
xor
shrl
adc
dec
cltd
inc
rorl
xchg
sub
lds
cmp
and
pushf
cmpsl
sahf
xchg
ja
shll
pop
push
push
ja
inc
lcall
bound
adc
rcrb
push
lcall
outsb
jb
adc
dec
shl
dec
fwait
mov
mov
imul
push
stos
and
out
push
movsb
repnz
xchg
xchg
push
das
pop
push
es
xor
iret
cmp
push
movzwl
and
mov
jmp
ja
and
dec
xchg
mov
jo
jle
jo
insb
stos
jge
pop
dec
pop
jbe
cli
mov
dec
fisubrs
nop
rolb
adc
popa
mov
jae
cmp
je
call
pushf
daa
xchg
push
cli
inc
mov
add
lcall
dec
imulb
test
ds
scas
inc
sub
xor
cmp
xchg
dec
inc
inc
fidivrl
roll
hlt
cmc
xchg
cmovns
sbb
or
icebp
imul
inc
in
shrb
lock
orb
jmp
aad
sub
or
imul
xor
aaa
dec
inc
inc
dec
dec
cmpsl
faddl
push
into
and
fs
rorl
mov
ficompl
sbb
dec
fs
jns
fldenv
pop
lds
xchg
pop
insl
sarb
movsl
adc
dec
sub
pop
rorl
clc
inc
bound
lock
cli
out
xor
scas
decl
insb
sub
xchg
cmp
xor
cmpsb
sub
add
cld
mov
loope
mov
fwait
push
pop
idiv
scas
pusha
iret
fwait
or
andb
and
jmp
pop
cwtl
mov
jno
jb
cld
shlb
pop
dec
fucom
stos
leave
inc
in
mov
decl
mov
xchg
dec
xchg
cmp
loop
mov
pop
sti
inc
clc
iret
and
lea
or
fiadds
cwtl
dec
mov
sub
idivb
xchg
into
iret
lcall
out
lret
aam
lret
xlat
aaa
repnz
jl
in
andb
mov
jl
repz
mov
mov
xor
aas
jo
dec
sti
and
inc
mov
inc
xor
sahf
jae
test
cli
mov
or
or
mov
lahf
mov
sar
pop
jbe
out
imul
push
pop
and
shll
gs
iret
shlb
test
sahf
push
mov
jg
lahf
roll
xor
mov
jg
loope
inc
loope
inc
add
jl
scas
fwait
xchg
inc
aas
dec
mov
in
lcall
sbb
xchg
sub
in
jp
jb
inc
insl
outsl
push
aas
fidivs
sbb
push
sub
pop
out
sbb
jmp
dec
or
sbb
cmpsb
jnp
jmp
xchg
movsl
into
mov
add
and
scas
jl
out
and
popa
getsec
inc
aam
xor
jle
fldcw
cmp
or
out
xor
and
andl
loopne
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
mov
test
jo
stos
jle
jo
repnz
and
outsb
add
adc
fcoms
mov
add
scas
lock
sbb
aad
pop
stc
or
sub
stos
jae
data16
ficompl
test
mov
insl
out
scas
scas
lea
dec
or
test
xor
shl
js
pop
test
cmp
xchg
dec
add
sbb
jb
jb
lds
fwait
inc
xor
jmp
or
mov
cltd
pop
mov
mov
sub
push
sbb
pop
inc
popf
sahf
push
test
cld
bound
repnz
or
mov
jmp
insl
outsb
sub
add
sbb
pushaw
sub
je
cmp
pop
out
ret
inc
outsb
jecxz
sbbb
das
push
fisttps
mov
jle
mov
movsl
jp
and
data16
adc
xor
push
outsb
pop
sahf
ja
sbbb
adc
add
fcmovb
mov
shlb
jmp
xchg
xchg
push
xchg
adc
loopne
cmpsl
das
xchg
xlat
lret
mov
and
mov
push
out
xchg
inc
lret
ret
push
dec
mov
jb
add
dec
unpcklps
cmpsl
xchg
out
rol
leave
push
push
fsubrl
cmc
pop
push
pusha
inc
xor
adc
adc
dec
adc
push
imul
cli
loop,pn
insl
and
cltd
sub
sarl
mov
dec
pop
nop
je
sbb
aas
mov
jp
lahf
jmp
push
add
mov
jecxz
popf
adc
mov
fcmovne
outsl
addl
cld
in
sub
dec
andb
xor
adc
jae
int3
xorl
call
cld
mov
decl
add
push
cmp
add
mov
sarl
sub
and
push
insb
cs
mov
mov
fisttpll
inc
adc
fimuls
lret
jmp
in
inc
or
gs
out
stc
test
aad
leave
xchg
popf
jge
dec
cmp
mulb
in
push
or
test
out
fists
mov
push
sbb
mov
jp
xlat
xchg
pop
mov
mov
jne
rclb
mov
inc
pop
pop
add
mov
and
push
sbb
jo
lahf
inc
adc
roll
bound
jne
jmp
jl
imul
sbb
inc
aas
xchg
sbb
jns
idivb
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
pop
and
jo
jg
jo
fmuls
arpl
mov
sahf
mov
pop
mov
bound
lahf
lret
xchg
sbb
cmp
stos
xchg
pop
int3
xor
mov
stc
mov
lret
adc
rcr
out
cmpsl
xor
push
sub
repnz
dec
ss
mov
shlb
sbb
lret
or
cli
stos
je
int
sub
lods
aad
fbld
andl
cmpsl
std
arpl
push
jp
inc
ret
push
dec
int3
and
outsl
cld
push
mov
jno
mov
lods
popf
mov
cmpsb
push
add
repz
jecxz
pop
adc
cmp
push
out
lret
das
lods
and
lahf
cmp
adc
jnp
cld
in
shl
inc
in
movsb
sub
push
cli
in
stc
pop
add
fldcw
stos
lret
insl
hlt
add
sbb
jle
outsb
shrb
pop
or
pusha
and
xor
fcmovnb
jo
pop
adc
push
lods
stos
lcall
adc
lock
test
popa
dec
xchg
inc
out
sbb
lods
mov
and
push
lds
xchg
xlat
je
pop
loop
out
mov
sbb
les
sbb
mov
divl
xor
mov
mov
movsb
push
dec
out
and
add
andl
aam
in
sub
gs
in
adc
xchg
pop
lea
fnstcw
pop
ds
lret
lret
outsb
cmpsb
push
outsb
xor
std
ret
pop
sbb
inc
in
adc
add
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
fs
cmpsl
jg
jo
ja
outsb
outsb
iret
sub
scas
leave
jecxz
aas
inc
or
inc
shlb
adc
hlt
addr16
xor
in
dec
fdivl
dec
not
mov
adc
inc
dec
outsb
icebp
call
and
aas
jg
lods
pusha
adc
ds
xchg
sbb
data16
aad
call
sub
push
rcll
push
jp
or
loop
mov
rcrb
pusha
sub
out
add
sbb
push
and
iret
push
test
in
push
jmp
shlb
cld
in
lahf
cmc
int3
pop
xchg
mov
sub
jmp
cmp
add
aam
imul
inc
mov
mov
dec
loopne
jge
jecxz
push
or
cmp
out
addl
cltd
push
sbb
push
jbe
das
inc
scas
and
lret
inc
incl
jp
push
pop
jne
std
push
dec
mov
mov
pop
adc
and
jl
loopne
pop
mov
pop
stos
ret
or
lock
jge
lods
sarb
pop
outsb
or
popl
sarl
cwtl
sbb
call
repz
inc
xchg
in
lods
mov
fdivs
sub
cmp
mov
cmp
add
lcall
dec
pop
sub
xchg
int3
aaa
sbb
adc
or
stos
ret
in
ds
repz
xchg
nop
orl
cmpsl
pop
cmp
sbb
mov
in
das
jge
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
test
cmp
jo
jg
jo
jle
sbbl
push
xchg
ret
pushw
lcall
jno
aam
scas
iret
mov
mov
xchg
push
pop
cmpsb
push
jecxz
in
mov
imull
in
cli
negb
hlt
mov
cmc
xchg
lret
aam
inc
nop
mov
and
adc
addr16
mov
leave
lea
hlt
popa
adc
fwait
xchg
fistpl
insl
sbb
aad
adc
insl
arpl
fdivl
pop
popa
test
and
push
cmp
mov
mov
in
into
jmp
sub
movsl
stos
or
cld
adc
orb
movsb
shrl
xor
ljmp
scas
inc
je
jp
push
cltd
or
lds
test
cli
inc
sti
jnp
cmc
push
pop
sub
shll
dec
inc
adc
inc
sub
fimull
ljmp
aam
bound
pop
clc
loopne
pop
jge
xchg
inc
mov
insb
pop
outsb
inc
push
jle
pop
xchg
pop
imul
pop
and
cmp
jl
pop
js
xlat
add
inc
imul
lret
sub
outsl
std
into
mov
push
fsts
outsb
inc
std
shlb
in
mov
mov
movsl
in
or
cld
movd
pop
mov
fwait
push
jle
inc
lahf
imul
mov
dec
imul
ret
movsb
mov
or
sub
pop
pop
xor
repnz
jne
or
sub
push
cmpb
mov
ljmp
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
jb
mov
jo
jle
jo
xchg
add
out
addl
and
rorb
lahf
stos
icebp
dec
and
mov
cmp
or
dec
icebp
daa
mov
popf
push
in
xchg
jmp
mov
aaa
push
in
mov
jb
mov
mov
scas
mov
sbb
popa
fwait
xor
mov
cmp
mov
aad
scas
sbb
leave
mov
or
ds
adc
std
clc
push
rep
out
cltd
xchg
push
mov
inc
loope
add
jnp
jne
stc
adc
lret
add
cmp
mov
and
and
lret
insl
and
mull
in
xor
pop
inc
mov
scas
push
popf
sub
lods
lods
test
xchg
add
gs
push
push
ret
lock
cmpsl
ret
and
ss
xchg
jmp
and
gs
adc
std
sbb
mov
add
movsb
push
in
aad
xchg
out
shrl
or
das
clc
gs
cmp
or
bound
mov
stos
fcompl
mov
loop
inc
adc
in
js
bound
lds
ds
daa
lea
jle
xchg
adc
push
or
nop
jmp
subl
pop
arpl
movsl
xor
and
or
push
popf
mov
movsb
jae
mov
and
fdivr
mov
icebp
add
inc
add
push
xchg
shlb
jns
pop
add
jb
mov
pop
out
rorb
xchg
xchg
dec
lret
push
ljmp
test
xchg
cmp
xor
and
or
cwtl
pop
mov
int
sahf
dec
loope
or
dec
popa
sahf
in
mov
xchg
je
loope
out
adc
xor
sbb
inc
mov
out
xor
pop
cmpb
lret
clc
mov
add
sub
shl
sbb
xor
pop
sbb
sub
jbe
sbb
push
scas
push
pop
and
adc
adc
dec
negl
inc
popa
pop
out
push
popf
add
mov
cmp
mov
push
dec
sub
jmp
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
sub
roll
loop
jo
adc
dec
imul
jnp
movsb
rclb
idivl
push
pop
aad
data16
das
or
movsb
in
gs
scas
mov
ljmp
add
pop
jb
jmp
cmp
and
movzbl
add
push
jge
aaa
ret
sarb
es
cmp
clc
and
add
mov
push
fimull
fsubrl
idivb
jo
fsubl
add
dec
inc
insl
ret
int3
add
push
dec
push
dec
inc
push
jmp
mov
cmc
fidivl
mov
mov
push
das
and
cmp
cwtl
add
insb
dec
cmp
ret
cmp
mov
adcl
ret
mov
es
sub
aad
call
pop
xchg
inc
aaa
inc
stc
pop
jle,pt
dec
inc
pop
and
lods
mov
mov
mov
adc
testb
cmp
xchg
ljmp
push
dec
adc
lods
and
fldcw
mov
nop
pusha
add
mov
inc
jb
aaa
out
movsb
sub
inc
mov
mov
ret
xchg
test
mov
sub
cmp
enter
mov
jne
movsl
and
pop
je
adc
addr16
clc
shrb
insb
les
xchg
repnz
sub
js
xchg
and
mov
push
pop
lods
xchg
push
jecxz
push
pusha
push
fbld
mov
pop
xchg
aaa
mov
loope
popf
sysenter
mov
clc
xchg
and
addr16
push
in
and
mov
mov
dec
cmpb
pop
adc
in
add
daa
xor
test
adc
ret
enter
jnp
scas
gs
adc
push
mov
out
adc
repnz
pop
jmp
push
ljmp
lahf
cwtl
jns
loope
and
dec
or
cmp
les
clc
dec
cmpsl
jmp
stos
cmp
roll
loop
sbbl
jg
push
ret
adc
idivb
icebp
int3
pop
imul
sub
test
push
outsl
push
out
das
icebp
jne
paddsb
loope
xchg
sbb
roll
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
sahf
push
pop
lds
and
jo
stc
pusha
jecxz
mov
or
cmpsb
cmpsl
push
rolb
sub
jg
scas
aam
testb
sbb
pop
insb
aaa
movsl
pop
fdivr
inc
aad
add
jecxz
push
fistpl
adc
jp
ret
push
xor
add
inc
ret
pop
rorb
outsl
cs
jl
bound
stos
cs
mov
inc
dec
mov
out
jb
adc
jne
push
add
mov
test
or
out
mov
or
jns
jle
xor
loop
xor
push
mov
lock
and
popf
xchg
or
das
clc
mov
mov
mov
insl
xchg
pushf
and
xchg
sarl
in
dec
or
imul
mov
packsswb
push
out
push
mov
les
test
ret
cmp
dec
gs
out
mov
cld
into
xchg
test
je
in
inc
daa
add
pop
test
subb
and
push
jbe
imul
push
js
sub
sar
rorl
mov
lds
jle
incl
pop
adc
xchg
ret
sub
jecxz
pusha
sub
push
ret
dec
mov
adc
aas
sti
add
inc
push
sbb
shrb
cltd
shrb
shr
ret
jnp
stos
inc
fiadds
into
dec
daa
les
push
push
sahf
icebp
lods
movsl
adc
test
pop
cs
in
shlb
loopne
or
inc
popa
fildll
mov
adc
add
mov
jne
notb
into
mov
jp
xchg
es
movsl
std
jle
xchg
inc
push
insl
adc
stos
repz
mov
bound
ss
scas
sbb
fisttpl
mov
ljmp
push
mov
int
sub
inc
rorb
adc
mov
xor
cltd
lret
push
arpl
imull
add
sbb
outsb
subb
outsb
scas
sbb
stos
mov
pop
xchg
cmp
mov
jp
or
out
stos
mov
jecxz
jmp
inc
pop
cmp
mov
adc
imul
loope
jne
out
xchg
loopne
xchg
insb
das
mov
ljmp
push
or
sub
jmp
faddl
roll
jecxz
jo
cli
mov
or
pushf
rcl
mov
scas
loopne
adc
xchg
push
adc
sub
mov
adc
xor
dec
pop
dec
rcl
add
lock
jno
xchg
mov
fwait
out
mov
rorb
icebp
dec
and
xchg
lods
gs
push
or
test
out
pushf
add
mov
mov
fwait
adc
xor
lea
inc
lret
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
mov
jo
and
movsl
adc
mov
cmpsl
jne
sbb
and
xchg
push
mov
test
nop
nop
mov
adc
insb
dec
in
jl
mov
lret
std
adc
bound
daa
inc
sbb
pcmpeqw
sbbl
and
xorl
cmc
jne
loop
pop
sub
pop
in
scas
popa
gs
inc
fcoms
jmp
stos
out
out
cld
sbb
fwait
lahf
dec
mov
cwtl
inc
cmp
dec
call
sbb
fnstcw
out
imul
mov
mov
test
imul
mov
jl
fcoml
push
je
jle
lods
add
imul
pop
jge
jb
lcall
lcall
inc
push
inc
lods
insl
xrelease
data16
mov
bound
cmp
cmp
sti
mov
add
in
and
cltd
fadds
addr16
int
cs
and
adc
aas
mov
inc
or
fsubl
cwtl
mov
mov
test
scas
mov
adc
int3
add
test
xchg
inc
adc
enter
push
les
cmp
jb
push
gs
jne
dec
fisubrs
or
pop
aam
pop
cmp
xchg
jno
jmp
xchg
and
repnz
ja
cmp
mov
into
cmpsl
adc
jno
or
iret
cli
hlt
or
das
sti
ds
xor
jle
inc
sbb
mov
inc
dec
push
push
std
pop
xor
cmp
loop
out
movsl
add
push
loop
icebp
pop
andb
jne
xchg
adc
outsb
sahf
or
mov
mov
subl
push
xchg
lods
bound
add
aas
test
nop
int
push
xlat
int3
lods
test
stc
xor
fsubs
mov
addb
cmp
insl
aaa
pop
dec
cli
mov
mov
lock
cmpb
aaa
ret
dec
je
fidivs
aas
nop
xor
sub
ds
fnstcw
adc
ljmp
mov
jbe
addl
add
ds
ja
adc
pop
sub
fwait
imul
jp
cmpsl
test
in
out
and
cmp
fsubl
pop
push
insl
sbbb
mov
jno
jle
lds
test
add
lea
push
xor
shlb
pushf
mov
xchg
aad
das
fadds
addr16
xchg
lret
cwtl
and
jecxz
jmp
pusha
gs
cmc
mov
clc
push
int
int
cmp
pop
and
pop
int
aad
lds
mov
js
nop
push
add
jae
into
push
sub
inc
hlt
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
nop
push
dec
pop
test
jo
scas
xchg
lret
add
sub
ljmp
sub
mov
leave
dec
dec
sbb
icebp
jnp
pop
dec
add
fiadds
les
pop
push
lods
or
sub
xor
push
lahf
and
popa
push
shrl
xchg
insb
imul
bound
js
insl
cmp
mov
insb
mov
dec
hlt
lretw
rorl
xchg
adc
outsb
jle
mov
cmp
clc
adc
aad
shl
xchg
add
sbbl
fidivrl
mov
push
pop
jp
testl
loop
dec
or
mov
sub
lds
movl
sbb
mov
jns
xchg
orb
mov
mov
icebp
push
xor
xchg
jge
fxch
pop
repz
sbb
out
arpl
fcoml
mov
cmp
pop
outsl
call
repz
jmp
lcall
cmp
lret
ljmp
dec
lods
insb
int3
sub
xchg
pop
icebp
sar
jne
jmp
clc
mov
mov
pop
mov
or
stos
movsl
repnz
mov
mov
cmpsb
xor
and
inc
fisttpl
inc
and
mov
adc
cmpsb
cmc
insl
adc
jl
mov
dec
push
aad
cli
les
arpl
les
or
add
sub
xchg
jb
ss
jmp
mov
lea
push
mov
arpl
inc
mov
push
out
sbb
sbbb
outsb
fsubr
test
and
jg
add
jp
adc
add
pushf
cmp
test
fcomp
dec
pop
daa
sbb
inc
out
mov
adc
xchg
pop
or
lock
popa
gs
jmp
adc
lret
push
and
nop
sarb
xchg
dec
out
cmp
aam
inc
arpl
stc
lcall
js
test
loop
rcrb
lcall
sub
mov
xor
lahf
es
pop
scas
call
stc
test
mov
out
or
cs
out
xor
jae
enter
cmpsb
mov
mov
shll
push
outsb
cmp
stos
pop
cmc
js,pn
mov
dec
pop
cmp
adc
repz
mov
loope
and
adc
fmuls
cltd
rorb
test
and
pop
mov
cltd
xor
sub
pushf
and
call
jnp
lcall
rcrl
cmp
or
test
andl
cltd
out
rorb
lret
adc
fcoms
xchg
lods
push
mulb
das
sbb
fadds
pop
pop
scas
xlat
dec
cmp
pop
test
mov
lahf
and
aad
nop
mov
pop
jl
ja,pt
rcrb
jno
dec
cmp
aaa
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
inc
cs
xor
and
jo
cmp
pop
test
dec
nop
cmc
adc
pop
sahf
cmc
cmp
movsl
sub
shrb
cmpsl
inc
dec
or
ds
sbb
sub
fbld
retw
push
mov
push
adc
pop
mov
pusha
mov
cmp
scas
xchg
sub
pop
jno
inc
sub
cmpsl
in
fs
xchg
mov
mov
rcl
add
lea
pop
lcall
adcb
sahf
add
je
push
pop
out
mov
ficompl
sbb
stc
das
lods
and
popf
xor
mov
dec
cmp
push
je
jae
and
in
stos
mov
iret
data16
ja
scas
hlt
movsb
cmp
data16
and
jmp
mov
cmp
xor
ljmp
stos
in
mov
out
je
dec
dec
adc
aad
xorl
adc
stc
mov
jnp
mov
fs
adc
jmp
stos
pushf
jmp
movq
inc
xor
out
jno
cmp
mov
mov
repz
cmpsb
jno
gs
in
or
mov
stos
js
ljmp
or
and
cmp
in
inc
lret
psllq
in
jge
iret
dec
jb
mov
iret
pop
das
inc
test
je
and
and
ss
xor
mov
cmp
lcall
sub
ds
js
je
outsb
mov
in
fcmovu
cmpsb
addb
daa
arpl
mov
and
sbb
xor
bound
sbb
xor
in
test
xchg
adcb
andl
in
lret
mov
popa
mov
jecxz
dec
adc
movl
stos
into
cmp
xor
pop
lods
mov
fldenv
cmc
enter
mov
sbb
cmpsb
pop
xor
or
enter
ficoml
cmpb
ljmp
rcll
jae
scas
fsubrl
adc
mov
fldt
pop
inc
jmp
inc
ficompl
cld
mov
insl
lahf
stos
ret
add
mov
xchg
leave
mov
out
cmp
push
mov
fstpt
aam
cmpsl
push
dec
jbe
jp
loope
sahf
in
rcrl
scas
inc
orl
sub
sbb
jle
xchg
mov
mov
out
lds
xchg
dec
xlat
dec
xor
lahf
xchg
shlb
inc
pop
fimull
cmpsl
cmp
pop
mov
imul
sbb
mov
in
pop
bound
mov
lcall
mov
mov
rcll
jae
ss
leave
cs
push
ss
and
sub
test
mov
push
subb
xchg
outsb
dec
outsl
xchg
mov
mov
or
dec
insl
int
pop
dec
roll
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
pop
and
jo
jge
jo
sbb
lock
fldenv
out
mov
xchg
inc
cmp
stos
sbb
test
pop
lret
sahf
mov
sbb
js
push
push
push
mov
in
add
rolb
ss
test
cmc
mov
mov
cmp
lret
xchg
fwait
sub
mov
sub
pop
test
outsb
jmp
sub
repnz
mov
aad
and
mov
mov
sbb
xchg
sub
dec
les
stos
ret
inc
cmc
nop
push
arpl
shlb
roll
jno
into
jns
inc
and
gs
mov
pop
jnp
or
in
sub
insl
repz
paddd
ds
mov
push
inc
out
stos
and
addr16
sub
in
out
jae
or
add
lret
insb
pop
je
xlat
or
add
xchg
jmp
add
pop
sahf
or
int3
dec
mov
je
popa
stos
mov
xor
in
or
xchg
aas
mov
xchg
and
dec
ds
push
pop
pop
test
xchg
mov
shll
mov
leave
in
hlt
mulb
sub
dec
add
mov
and
repz
roll
and
orl
mov
lock
dec
arpl
mov
leave
mov
repnz
lret
sahf
les
popl
mov
stos
outsl
push
and
in
leave
aas
in
loop
cmpsb
mov
sbb
mov
mov
fsubl
fistps
mov
jp
cmp
push
cmc
sub
and
push
sbb
sbb
add
mov
fldt
or
xor
loopne
mulb
inc
xchg
inc
sub
outsb
ja
mov
push
sbb
xchg
out
arpl
into
nop
cmp
mov
outsl
popa
adc
arpl
cltd
lahf
lea
cmpb
sbb
stc
rorl
xor
adc
js
mov
shll
cmp
sbb
jle
aam
adc
sub
repnz
sbb
jmp
out
jle
in
xchg
icebp
cmp
dec
push
xor
inc
cmpsl
mov
mov
test
sub
xchg
push
adc
js
lods
and
cmp
pop
jge
jecxz
jl
fcmovb
fsts
imul
outsl
or
ret
dec
inc
xchg
mov
xor
sbb
sbb
icebp
cmp
sub
xchg
in
sub
divb
mov
xor
mov
out
jo
test
in
stos
in
popf
mull
jae
imul
cwtl
cmc
movl
cmc
add
or
fisubs
loop
sub
mov
into
aaa
dec
sbb
dec
or
jecxz
jle
and
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
ror
out
sbb
aad
jo
jge
jo
repnz
sti
adc
pop
loope
fdivs
sbb
aas
and
jb
pop
and
dec
xchg
nop
mov
stc
jo
inc
push
imul
xlat
js
mov
push
pop
out
cmp
adc
adc
loop
scas
jno
jb
add
adc
adc
je
dec
sbb
std
mov
fxch
mov
pop
aas
add
push
push
jmp
les
jecxz
aad
movsl
nop
je
push
cwtl
shrb
sarb
out
mov
negl
push
aad
cwtl
orl
sti
add
scas
adc
or
outsl
mov
dec
or
xchg
sub
xor
add
xchg
dec
ja
adc
insb
or
sub
sarb
out
jmp
sbb
add
xor
mov
repnz
jmp
cmc
sbbb
cwtl
mov
inc
xchg
jns
fwait
mov
jmp
mov
imul
or
or
outsb
hlt
shlb
fwait
mov
pop
into
aas
pop
shll
or
in
insl
sbb
add
daa
jg
and
loope
jo
scas
sbb
add
sub
cmp
pop
test
movsl
push
xchg
dec
gs
mov
push
sbb
into
ljmp
xchg
bound
test
je
int3
or
cmpsl
xchg
pop
fwait
inc
jnp
repnz
push
jbe
jns
xorb
mov
sbb
pop
repnz
xor
mov
jo
mov
pop
in
dec
push
xchg
xor
sarl
imul
jns
mov
cltd
jae
arpl
jl
ljmp
mov
loop
pop
call
ljmp
jbe
add
test
mov
or
loope
and
sbb
adc
push
int3
gs
sub
xor
fldenv
mov
adc
adc
out
xor
fldl
das
scas
mov
xor
and
mov
icebp
loop
cmpsb
popa
jns
fsin
es
sbb
mov
push
push
inc
fmul
arpl
mov
fsubr
scas
stos
int
loope
add
sub
sub
push
mov
or
xchg
inc
inc
add
mov
and
fcmovbe
in
lods
bound
stos
subl
insl
pop
scas
shll
gs
jae
sub
mov
mov
cmpsl
cmp
cmp
pop
pop
cwtl
cmp
jns
pop
or
dec
in
push
dec
cmp
sub
inc
nop
aas
pop
or
mov
xchg
xor
cwtl
mov
adc
sahf
rclb
movsl
je
push
and
push
fwait
dec
cli
add
xor
arpl
fs
rorb
cmpsl
adc
adc
stc
dec
lcall
lret
daa
into
add
sub
mov
jnp
xor
mov
test
jo,pt
ja
cltd
insb
sub
mov
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
popa
mov
test
shlb
and
jo
cwtl
pop
idiv
jecxz
mov
fiadds
cmp
lods
movsl
clc
mov
cs
mov
xchg
xchg
xchg
loop
out
xchg
adc
xor
mov
xchg
adc
addb
movsl
and
mov
mov
stos
loop
imul
in
jb
scas
lods
xchg
jl
add
int3
cs
bound
cli
sub
adc
mov
decl
jne
std
cmp
xor
fs
inc
mov
or
adc
sub
pop
jnp
test
cmc
fs
inc
std
negw
pop
fs
pop
adc
jae
rcr
aas
lcall
jae
insl
outsb
mov
jmp
jne
mov
int
push
filds
mov
cmp
icebp
inc
loop
insl
sti
popa
push
lods
sub
insb
push
pop
jno
jl
incb
out
test
sbb
je
jp
jbe
push
rorl
test
loop
sub
push
jl
xor
stc
sub
mov
pop
fadd
leave
jo
dec
loope
lea
test
sbb
push
in
lahf
mov
hlt
cmp
mov
dec
inc
scas
pop
lcall
pushl
sbb
xchg
bound
jmp
or
cmp
mov
jbe
shrl
mov
fcoml
cmc
xor
mov
pop
or
imul
lcall
pusha
das
test
in
cmp
out
int3
pop
lods
ljmp
sbb
lds
jne
repz
jl
bound
test
pop
lea
pop
scas
int3
xor
inc
sub
movsb
icebp
movsb
and
xchg
je
cmp
mov
add
stos
fistpl
push
and
or
xor
mov
arpl
sbb
push
add
clc
ja
movsl
pop
nop
fsubrl
ljmp
jae
lret
cmp
xchg
cmp
addb
sub
repnz
pop
outsb
mov
ljmp
jg
cmpsb
push
cmp
repnz
or
and
aad
push
jns
sbb
adcl
sahf
iret
xor
in
cmc
in
bound
sbb
cmpsb
jp
xchg
insb
movsl
jmp
push
lret
and
hlt
cs
mov
push
lahf
lds
jge
lcall
jo
push
add
mov
loop
push
cmc
loope
in
mov
es
dec
mov
in
pop
jge
movsb
rdpmc
mov
cmp
pop
in
push
cs
stos
jne
sbb
adc
inc
cli
pusha
ja
pop
fistl
mov
cmpsb
or
xchg
and
cs
ljmp
xchg
xchg
mov
jns
push
lds
sahf
mov
int
gs
or
scas
sti
enter
or
mov
and
pusha
mov
mov
outsb
and
jle
bound
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
test
pop
stc
rorl
pushf
add
mov
add
inc
push
pop
movsb
jl
fidivl
lock
scas
jbe
scas
add
xlat
test
or
mov
xchg
inc
inc
push
push
push
dec
xchg
adc
ficoml
es
mov
pop
in
pop
cmpsl
imul
je
jecxz
call
push
test
scas
and
sbb
and
ljmp
imul
les
negb
pushf
sub
jg
add
and
xor
fstl
jg
xlat
movsb
push
imul
add
jmp
push
lods
je
mov
sbb
pop
ret
ret
sbb
mov
lea
jno
test
shlb
clc
sbb
jae
lret
jno
cmpxchg
shr
jb
push
pop
cmp
or
andl
ja
and
bound
push
icebp
pop
mov
add
cmc
dec
and
pusha
and
and
xchg
pop
mov
int
stos
adc
stc
andl
js,pn
mov
mov
dec
ljmp
scas
out
jb
std
jl
xchg
je
xchg
aam
pop
sbb
ss
sti
mov
stc
hlt
ret
outsb
movsb
pop
in
add
and
stc
pop
std
push
mov
roll
xchg
jle
ret
clc
js
mov
sbb
dec
mov
pop
fistps
adc
mov
mov
iret
pop
in
push
push
mov
cli
scas
and
pop
arpl
lret
test
cmp
inc
push
in
ds
jne
loopne
jle
insl
or
aad
pusha
ret
jo
test
pushf
push
imul
lret
popf
lods
ficoml
lea
xchg
les
cmpb
out
loopne
mov
dec
or
push
dec
int
icebp
rcrb
lcall
push
test
adc
fiaddl
adc
add
and
aam
mov
xchg
stc
shlb
or
dec
cli
adc
js
cmp
leave
popf
mov
mov
pop
dec
mov
add
sub
lahf
mov
mov
lret
scas
lret
pushf
repz
xchg
and
fbstp
loope
xchg
jb
sbb
push
imulb
rcl
jecxz
cmp
mov
mov
subb
xchg
in
adc
push
cmpsb
jl
add
inc
ljmp
lahf
stos
daa
xchg
and
jmp
inc
orl
pop
lods
daa
inc
add
ret
or
xchg
mov
sbb
fcmovu
mov
cmpsb
mov
mov
ds
cmp
cli
pushf
adc
pop
in
pop
adc
add
pop
lods
call
mov
fidivl
and
push
push
add
repz
loopne
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
out
test
fdivl
and
jo
out
push
pusha
fisubrl
push
push
push
sbb
sti
mov
jecxz
imul
xor
in
jo
nop
push
inc
mov
je
cmc
inc
out
push
iret
mov
or
cli
mov
xchg
add
mov
movsl
outsl
lahf
stc
dec
imul
aas
cwtl
jmp
push
stos
scas
in
imul
pop
lock
test
popa
xor
cld
mov
sub
mov
xor
sub
jns
adc
cmp
xchg
adc
and
mov
ret
xorb
stos
sbb
adc
out
ret
xor
lods
sbb
aad
push
push
rclb
lods
imul
push
ret
jg
scas
mov
or
shlb
imul
fistps
mov
lods
push
nop
sbb
jb
out
xor
inc
sbb
jecxz
sub
jo
push
fwait
inc
sub
jmp
fwait
inc
les
inc
imul
push
jbe
pushf
push
sub
gs
adc
jecxz
dec
fcompl
mov
fdivl
add
push
and
fldenv
dec
mov
in
or
sbb
pushf
out
cmp
sub
inc
icebp
shl
mov
xlat
out
pusha
mov
jnp
pushl
in
xor
xor
pop
fcmovu
or
aam
dec
leave
pop
mov
xor
dec
pop
filds
add
jg
int
mov
test
leave
adc
pop
xchg
jmp
xchg
addr16
and
pop
jle
cbtw
jp
or
mov
fistpll
inc
pop
xchg
cmpsl
pop
jmp
insb
test
std
in
mov
inc
pop
flds
mov
test
sbb
sbb
int3
cmp
lods
and
fwait
adc
setp
daa
mov
inc
int
mov
lahf
adcl
xor
push
iret
popf
arpl
sbb
sbb
in
adc
imul
and
push
insl
mov
inc
jo
mov
aaa
shll
aaa
add
fistpl
and
mov
push
cmp
pop
shlb
nop
icebp
pusha
inc
jl
jnp
cmp
adc
push
sub
in
xchg
cwtl
mov
sub
adc
pop
mov
inc
out
mov
aam
out
jmp
filds
cmpsb
repz
add
je
xchg
jecxz
or
test
addb
and
pushf
dec
sahf
push
aas
mov
cmc
xchg
in
sbb
int3
mov
pop
std
sahf
mov
dec
out
into
fnstsw
mov
mov
bound
mov
cmc
or
icebp
lods
sub
repnz
cmp
xor
push
test
mov
push
add
xor
insl
mov
cmc
imul
negl
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
mov
and
jo
test
adc
jp
dec
sbb
fsubp
movsl
pop
call
shlb
push
or
loop
xchg
movsl
ret
ret
xor
pop
sbb
fisubrl
jb
icebp
add
jecxz
mov
sarl
fmuls
idivl
data16
xlat
cmp
jnp
pop
fldt
call
lea
jmp
jmp
jbe
mov
leave
xor
cli
fiadds
mov
xor
and
iret
mov
outsl
jmp
fdivrs
and
sub
jae
push
adcb
es
shll
ss
xchg
sbb
mov
loope
cmc
lods
int3
sbb
dec
jg
lahf
or
jmp
push
pop
movsb
and
stos
loop
jns
pop
adc
push
cmpb
das
shlb
fs
leave
es
pop
outsb
xor
std
dec
or
push
add
adc
mov
ja
pmuludq
ljmp
cltd
add
push
imul
mov
jle
inc
fisttps
pop
fwait
std
mov
add
into
mov
stc
sbbb
mov
stos
shll
pop
int
out
pop
mov
scas
popf
or
shrl
or
dec
xlat
cwtl
lds
dec
ds
outsl
fstl
fstpl
fcomps
cltd
push
dec
jmp
mov
in
pop
and
out
mov
mov
leave
xor
jp
bound
loope
mov
loop
add
inc
adcb
clc
rol
leave
insl
cmp
fxtract
inc
xchg
xor
aam
cmc
mov
inc
cwtl
cmpsb
inc
push
sbb
xchg
sub
adc
cmp
cmpsb
mov
jne
adc
xor
nop
stc
fldcw
aaa
mov
and
xlat
adc
push
xor
xchg
mov
cwtl
stos
pusha
sub
mov
inc
adc
stos
addr16
lret
repz
sub
push
xchg
jae
icebp
sub
and
fs
push
sbb
into
out
lock
dec
lahf
leave
nop
cmpsb
push
sbb
xchg
inc
xchg
mov
mov
stos
dec
add
lods
aad
add
movsl
adc
sbb
sub
insb
pop
dec
mov
int3
push
jge
and
dec
lcall
jne
mov
inc
dec
or
mov
fadds
add
jg
push
inc
adc
je
pop
inc
imul
pusha
repz
test
xor
insb
xchg
inc
pop
mov
lret
shll
stos
sub
xor
movb
data16
xor
aas
mov
sub
add
push
pop
insb
jge
aaa
and
test
push
mov
mov
inc
inc
repnz
insb
xor
pop
test
dec
push
adc
add
mov
add
jmp
add
out
out
xor
call
jo
stc
ja
jo
and
jo
pop
and
out
cmp
pop
or
jg
push
push
aas
dec
jae
test
fdivrs
push
imul
inc
shlb
fadds
sti
into
mov
adc
pop
aas
mov
mov
ja
sub
adc
cmpsb
insl
mov
add
imul
pop
mov
lds
dec
pushf
cmp
and
sbb
mov
fnstcw
xchg
add
add
add
insb
test
fcmovnb
push
mov
lcall
ret
sbb
push
push
das
add
mov
dec
push
and
pop
unpcklps
xchg
mov
jae
pop
sbb
cmp
push
andb
sub
xlat
test
xchg
xchg
jge
rolb
mov
push
mov
fadds
inc
stc
and
mov
rcll
push
pop
js
test
es
lds
shll
pusha
stos
add
nop
imul
mov
mov
mov
and
fsubrl
div
icebp
jne
and
in
jge
mov
mov
pop
pop
aas
add
mov
jno
pop
sbb
add
sbb
jne
das
xchg
enter
aad
fldcw
xchg
sahf
sti
test
loope
test
inc
es
xchg
add
xchg
movsl
xchg
fcoms
mov
rolb
lods
outsl
loope
mov
fldl
mul
lds
mov
test
fsts
mov
dec
mov
xchg
inc
sub
mov
mov
push
inc
cmp
jmp
movsb
inc
mov
mov
adc
mov
sub
stos
pusha
sahf
sbb
sbb
sub
jg
jmp
jecxz
sub
push
add
std
cmpsl
mov
mov
inc
xor
sbb
inc
cmc
jne
cs
or
in
fisubrl
push
cmc
pop
cld
leave
jmp
xor
xor
ds
mov
dec
movsb
mov
dec
out
mov
inc
lods
and
mov
and
adc
inc
movsl
push
sub
insb
stc
stos
inc
xchg
decl
in
and
mov
xchg
mov
mov
or
cld
in
adc
mov
sub
mov
fidivrl
pushf
pop
fnsave
imul
inc
or
fdivrs
or
push
xchg
sbb
and
icebp
inc
mov
or
imul
pushf
out
cli
xor
stos
xchg
push
xchg
or
dec
adc
gs
push
mov
pop
ret
popl
popa
test
pop
scas
cmp
test
and
cltd
and
pop
add
fsubrs
pop
flds
mov
ret
fbld
sub
dec
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
add
pop
ds
loop
jo
jge
jo
pop
fsubrl
pop
out
movsb
aam
push
in
popa
sbb
inc
fisubrs
jmp
rclb
jbe
xchg
mov
inc
push
scas
mov
adc
adc
cli
cld
adc
dec
scas
out
mov
mov
jae
test
jg
mov
or
xor
pop
rol
jmp
and
and
sub
loop
sahf
fsubr
in
pushf
inc
inc
pop
das
cmc
mov
sbbl
in
pusha
sub
or
cmp
fbstp
jle
jge
clc
adc
insb
rcl
pop
and
int3
addr16
xor
and
xchg
rorl
subb
mov
sbb
push
je
out
out
add
cmpsl
cwtl
andl
iret
out
pop
jno
scas
mov
test
imul
add
ficoms
rcl
sar
cmp
jne
sti
out
roll
mov
mov
insl
jmp
mov
loopne
cmp
adc
cli
data16
iret
or
xchg
sub
dec
sti
pop
stos
sbb
fisubs
aad
mov
jl
in
cmp
adc
dec
dec
mov
repnz
sub
leave
jns
adc
je
sar
cmpl
jle
mov
aam
in
mov
add
jnp
pop
and
loop
xchg
ss
movl
and
cmp
push
sahf
jp
dec
mov
movl
xor
ljmp
je
jnp
add
add
test
cmpb
push
inc
les
add
ja
pop
loope
inc
cmp
out
mov
aad
stos
sbb
in
iret
dec
xchg
out
clc
jle
loopne
in
loopne
les
js,pn
cwtl
jmp
and
xorb
push
xor
fcmovb
sub
or
add
pushf
clc
jge
cmpsl
popf
sub
and
filds
out
popa
xor
das
push
ljmp
sub
das
out
add
inc
jl
jbe
cli
insb
sbb
jno
icebp
ds
push
add
jge
fs
and
add
sahf
lock
imul
daa
inc
jmp
ds
inc
mov
pop
stc
dec
mov
xchg
popa
outsl
push
add
jne
fbld
jbe
data16
push
or
xor
mov
fwait
xchg
cltd
jno
ja
inc
jne
ljmp
loopne
call
xchg
pop
inc
sbbb
adc
sub
adc
outsb
sti
xor
cmc
int3
sahf
outsb
and
cmp
mov
xor
loop
mov
sub
push
adc
sbb
or
mov
ljmp
or
mov
inc
je
out
jl
mov
jae
sub
push
cmp
cs
inc
jmp
mov
inc
loopne
or
jmp
out
mov
ja
add
xchg
out
jo
and
jo
cmp
hlt
jecxz
ja
popa
jg
test
pushf
clc
cs
push
jmp
mov
cld
sbb
dec
mov
jns
and
lea
xor
in
sbb
mov
lods
fimuls
jae
into
inc
xchg
jl
out
imul
adc
mov
sbb
es
sub
or
dec
xor
inc
daa
jns
mov
outsl
aas
pop
aas
push
push
hlt
insb
repnz
sbb
pop
xchg
loop
daa
pusha
ret
je
jge
add
xor
rolb
push
xchg
out
repz
dec
adcl
popf
sbbb
cmp
into
pop
jg
mov
sti
mov
enter
mov
dec
xor
icebp
aad
inc
add
push
adcb
jnp
and
arpl
aaa
pop
pop
dec
loope
stos
jnp
pop
jo
jp
cmp
cmc
aam
cmp
leave
sub
lret
stos
jl
inc
aaa
mov
fs
or
out
jae
xchg
rorb
adc
or
dec
ficompl
ljmp
mov
dec
xchg
pusha
fldt
addr16
cmp
jmp
sbb
push
sub
push
dec
ja
mov
out
mov
add
jbe
into
int
lock
fwait
imul
out
push
imul
xchg
mov
ljmp
nop
pop
pushf
es
into
add
pop
pop
ds
sbb
repz
mov
push
and
ret
bound
sbb
fistps
inc
pop
mov
lock
or
jae
rcrb
jg
and
pop
lar
outsb
mov
cmp
xchg
fiadds
jns
dec
sub
andb
mov
or
xor
inc
leave
mov
xchg
mov
jp
leave
mov
test
pop
sbb
pop
fwait
pop
iret
jle
shrl
std
sub
and
loopne
dec
movsl
pusha
dec
inc
jnp
fsub
push
inc
rolb
mov
mov
jo
mov
pop
pop
fiaddl
adc
dec
inc
or
or
mov
cmpl
mov
fcmove
call
pop
scas
js
clc
sub
inc
mov
sbb
out
mov
cmp
sbb
icebp
iret
sub
mov
repnz
outsl
jmp
xchg
jecxz
add
lods
arpl
push
cmp
pop
dec
sbb
pop
loop
mov
repz
add
test
cmpb
mov
adc
xchg
div
mov
sbb
mul
jle
data16
test
push
std
cmpsl
out
outsb
adc
fnstcw
mov
pop
ret
notb
push
and
rorb
mov
push
stc
add
pop
add
xor
imulb
aad
dec
sti
mov
push
nop
ds
jnp
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
idivl
lret
xchg
jo
lahf
jge
jo
mov
outsl
cmc
inc
lret
in
add
arpl
pop
data16
loop
push
push
xchg
mov
sub
push
cmp
mov
repz
leave
mov
fsub
imul
fidivrs
jns
xchg
aaa
leave
out
cmpsl
std
add
xchg
jg
faddl
scas
adc
push
xchg
in
sbb
jbe
adc
fs
mov
shr
iret
cmp
jecxz
insl
repnz
mov
dec
ja
sbb
shlb
add
pushf
fcoms
sbb
mov
dec
negl
ror
sar
jo
in
mov
stos
jg
inc
ja
inc
cmpsb
pop
mov
scas
test
je
and
or
cwtl
xchg
sbb
lahf
sbb
mov
std
mov
cli
popa
dec
loope
push
shll
xchg
pop
ljmp
mov
mov
jno
out
std
cmpsb
xchg
test
adc
and
adc
xor
jle
js
mov
cmp
into
fdiv
stos
jne
dec
jle
jo
lock
aaa
push
push
into
outsb
and
fidivrl
inc
fwait
rorl
pop
push
das
iret
stos
adc
sub
push
rcrl
inc
inc
inc
inc
iret
mov
mov
sbb
sbb
or
xchg
cmc
faddl
gs
jg
out
cmp
adc
scas
cli
jecxz
insb
leave
sub
add
scas
push
xor
inc
mov
dec
add
push
test
sbbl
mov
out
mov
inc
inc
sub
lods
mov
cmpsb
and
or
stc
mov
test
push
jne
xor
cmp
sub
fidivl
sti
je
sbb
xchg
dec
jb
push
push
fbstp
or
rcl
mov
lahf
leave
sar
mov
ds
scas
xchg
jns
data16
xchg
into
addr16
add
xor
daa
lock
jb
stos
insb
cmpsb
xchg
roll
pusha
push
and
push
jnp
xchg
xor
mov
lea
fmull
ret
movsl
mov
sub
aas
loope
mov
ja
and
push
sub
mov
fsub
dec
push
sahf
inc
sbb
push
sub
daa
pop
filds
pop
sbb
aad
ret
xchg
xchg
pop
je
testb
psubsb
inc
mov
stos
xor
das
fwait
sahf
jg
jge
fs
fldt
cltd
popa
xchg
sahf
cmp
or
fstpl
stos
roll
mov
push
jmp
and
push
mov
lea
lock
jecxz
jnp
add
sbb
into
or
shrl
ret
loopne
out
mov
xchg
pusha
inc
pushf
cs
jo
test
leave
insl
enter
scas
adc
sbbb
lods
mov
xchg
inc
fsubrs
mov
mul
mov
in
adc
cltd
cltd
lods
rolb
dec
add
shrl
ss
cmp
stos
mov
sbb
or
and
xchg
dec
stos
into
int
cltd
movsb
pop
pushf
adc
cmp
xor
stos
dec
imull
dec
lods
jno
mov
jae
mov
mov
add
and
inc
add
lahf
call
roll
cltd
push
aaa
xor
inc
jne
shll
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
adc
inc
mov
lahf
jge
jo
xor
add
data16
and
jmp
sbb
lret
es
ljmp
push
loopne
aam
jnp
xor
jecxz
cmp
lea
dec
sbb
mov
pop
sbb
orb
xor
push
mov
out
les
inc
pushf
movsb
inc
cmp
sub
cmp
add
pop
fisubl
rorb
mov
movb
es
xor
stc
adc
and
cmp
xchg
popf
aam
mov
pushf
pop
fcomps
xchg
repnz
movsb
roll
dec
clc
jg
xor
fs
pop
adc
mov
insl
push
add
in
and
into
dec
xchg
mov
add
test
push
push
push
fcompl
test
mov
mov
mov
xchg
out
rcr
mov
pop
fwait
leave
xchg
jbe
rolb
xchg
fiaddl
nop
lods
jno
mov
mov
clc
in
sbb
aas
lock
out
pop
pop
cwtl
and
lcall
add
adc
sti
aaa
pop
adc
sbb
and
roll
xchg
adc
sub
mov
cmpsb
stc
and
outsb
push
jbe
je
sbb
mov
repnz
pop
ret
pop
lret
mov
adc
push
aas
lret
scas
les
sbbl
insb
mov
ljmp
cmp
dec
push
enter
ja
xchg
aaa
sub
int
leave
cmpsl
pop
mov
std
xchg
push
cmovbe
and
aam
push
sahf
les
mov
xchg
mov
insb
cli
fsubl
sub
push
dec
dec
xor
jae
mov
pop
inc
mov
sub
jmp
add
pop
divb
or
imul
push
jb
cmp
shlb
call
mov
fistpll
aaa
pop
pop
push
jnp
arpl
cwtl
jl
popa
and
push
fucomi
mov
mov
inc
sub
aas
mov
addr16
mov
xchg
dec
jb
sbb
add
xchg
imul
xor
fisubrl
in
cld
push
mov
insb
push
fiaddl
xchg
call
adc
roll
mov
xchg
jmp
pop
test
xchg
inc
sbb
push
cwtl
cli
scas
sbb
jb
ljmp
outsl
cmpsb
ret
xchg
aas
icebp
push
adcb
push
test
cmc
flds
sbb
ljmp
xchg
out
cmpb
rcl
mov
into
rorb
repnz
sbb
mov
adc
lods
push
push
in
push
push
cmp
lea
aas
shrl
into
or
pop
rcll
pushf
outsl
cli
stc
mov
lea
or
popf
scas
sbb
cmp
cmpsb
sub
adc
xchg
lar
stos
pop
and
jl
loope
push
push
adc
sbb
enter
xchg
mov
xor
out
movsb
sbb
mov
mov
and
arpl
cmp
push
mov
mov
jmp
cmp
jecxz
adc
cmp
mov
mov
mov
out
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
test
jo
lahf
jge
jo
arpl
pop
dec
mov
add
push
int
cmp
or
and
sub
stos
shlb
xor
mov
fcmovnb
sbb
mov
mov
rcll
mov
jecxz
stos
dec
repz
ds
or
fldcw
out
scas
add
popa
mov
and
pop
iret
mov
lods
jne
add
jg
xchg
dec
fadds
or
inc
sub
mov
mov
pusha
loop
int3
mov
xchg
popa
adc
sbb
fsubrs
pushf
pop
xchg
push
add
das
mov
and
jge
ror
xlat
inc
cmp
enter
jb
cltd
cld
andl
mov
cmpsb
in
sbb
in
cmp
stos
popa
out
pop
mov
enter
mov
push
and
jnp
shlb
push
nop
inc
les
pop
pop
scas
loopne
lock
outsl
sbb
dec
cmc
adc
pop
decb
push
mov
mov
out
sub
das
or
mov
inc
in
jmp
xlat
fcompl
fucomip
imul
adcl
rorl
daa
cmc
inc
mov
imul
popf
in
mov
imul
jns
pop
pop
mov
inc
dec
les
cmp
and
mov
push
je
cmp
lahf
mov
jnp
repz
lret
iret
daa
push
cmpsb
mov
and
xchg
cmpsb
cs
xor
pop
inc
out
mov
shlb
int
mov
xor
je
xor
leave
mov
xor
sub
mov
mov
rolb
push
cs
aad
mov
imul
mov
push
push
jmp
in
arpl
add
push
hlt
sbb
xchg
mov
and
adcb
fwait
aad
push
jmp
or
out
mov
add
outsb
shll
sarb
js
pop
pushf
das
add
mov
not
lret
lcall
sbb
outsl
imull
push
and
mov
rcrl
fidivrl
sbb
xor
std
jbe
lret
out
arpl
jbe
inc
test
test
or
aaa
xchg
mov
inc
dec
mov
loopne
movsb
push
jg
insb
lods
push
rcr
push
insb
jle
mov
pop
ficoml
sti
lret
inc
xchg
lret
xor
mov
pop
push
gs
int
enter
popf
mov
aam
xor
aaa
or
pop
cmp
xchg
int
out
es
nop
push
stc
lcall
mov
xor
gs
pop
lahf
or
jae
xchg
es
movsb
test
int3
fimuls
xchg
imul
and
out
lret
pop
dec
pop
cwtl
popa
iret
sbb
in
mov
dec
sahf
imul
xchg
xchg
dec
and
pop
scas
lods
xor
jge
incb
cmp
mov
xor
cwtl
or
jae
lods
jl
hlt
unpcklps
mov
out
nop
mov
scas
mov
add
rcll
or
jb
jbe
xchg
mov
jnp
repz
cmp
push
mov
outsb
xchg
mov
ds
fdivrs
inc
arpl
jns
sbb
push
inc
aas
lahf
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
jle
cmp
in
jo
lahf
jge
jo
cmp
addl
pusha
cmc
imul
stc
mov
mov
sub
movsb
mov
or
adcb
add
pop
ret
jae
mov
mov
inc
jg
in
adc
and
ss
add
sub
mov
sub
adc
pop
addr16
jg
adc
cltd
or
sub
xor
push
daa
loop
add
jl
mov
test
lods
jne
shrb
and
cmp
out
inc
xchg
push
pop
mov
loopne
xor
imul
mull
cld
incb
jne
fsub
out
es
sub
stos
add
push
xchg
cmp
and
mov
scas
jl
pop
jle
and
and
push
sbb
sub
fadds
sbb
sti
mov
daa
outsb
inc
repnz
fisttps
jns
adc
stos
pop
iret
sbb
sub
adc
shll
cmp
pop
sub
inc
cmp
sbb
pop
hlt
cld
xor
xchg
mov
jle
xor
cmp
xchg
inc
fldt
loope
mov
cwtl
dec
shl
dec
adc
test
push
pop
pop
mov
jbe
gs
xchg
xor
and
cld
dec
cs
mov
or
pusha
pop
or
jae
arpl
pop
sbb
dec
mov
cmp
std
and
adc
daa
or
seto
rcll
int3
pop
mov
cwtl
les
in
divb
stos
shr
mov
hlt
xchg
sub
js
mov
fisttpl
inc
push
popf
pusha
lahf
cmp
mov
adcb
popf
popf
push
popa
dec
lcall
pop
cli
roll
scas
inc
mov
pop
aaa
cmp
xchg
aam
push
or
pop
cld
jae
and
out
lods
inc
lret
imul
adc
xchg
test
movq
out
jae
cmp
jbe
cs
scas
daa
test
push
pop
xorl
cmp
fnclex
push
dec
in
sub
add
scas
cmp
cs
xchg
je
pop
pause
shrl
movsl
sub
inc
ja
xchg
addb
jne
sbb
mov
jl
sub
js
inc
pop
cmp
jp
lods
imul
movsb
mov
push
cmp
or
pop
aas
scas
les
add
pop
ret
adc
decb
aas
testb
jle
rcll
cmc
popf
mov
test
adc
add
dec
cmp
push
and
int3
push
pushaw
ds
imul
andb
sbb
subl
nop
mov
in
mov
lock
scas
gs
dec
xchg
aaa
add
in
rclb
cmpsl
cmp
dec
pop
pop
lret
adc
bswap
inc
loopne
insl
mov
push
dec
iret
daa
shlb
iret
xor
xor
sarb
loope
jnp
push
and
cmp
mov
and
ds
imul
xor
dec
sub
out
inc
adc
push
clc
or
sub
xchg
jl
pop
jp
ret
jno
push
imul
daa
xchg
push
push
adc
xor
movntq
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
inc
inc
pop
add
jo
lahf
jge
jo
aaa
pusha
int
push
pmovmskb
add
sbb
fnstcw
in
sub
cltd
imul
xchg
adc
xlat
inc
mov
pop
jmp
or
ficomps
or
or
adc
ror
dec
pop
jmp
mov
cmp
jle
out
idivb
mov
dec
clc
loope
mov
js
das
fsubrs
push
adc
mov
les
clc
in
les
ret
pushf
popf
xchg
xchg
push
dec
mov
adc
cmc
cwtl
and
inc
int3
inc
ljmp
adc
dec
int
and
push
idivb
mov
jmp
xlat
jp
or
xchg
sub
ror
shrl
mov
sbb
in
outsb
in
pop
sahf
jmp
pop
sbb
cmp
pop
movsb
mov
fstpl
mov
mov
push
outsb
xorb
mov
out
mov
add
pushl
xchg
into
les
popa
insl
sbb
inc
sub
add
cmp
cs
andl
sbb
xchg
loop
sbb
std
scas
insb
jnp
pop
jecxz
decl
cmp
stos
push
and
in
push
ret
sbb
iret
imulb
push
jge
add
sti
xchg
repz
popf
call
xchg
int
sti
mov
mov
mov
mov
or
outsb
lods
mov
shlb
xorl
aam
ja
mov
lods
xchg
or
xor
cmpsl
subb
roll
roll
mov
inc
je
mov
fs
jg
shrb
jp
mov
push
and
movsl
sbb
pop
movsl
into
mov
add
mov
adc
or
sti
aas
mov
push
ret
cld
cmpsb
fimull
out
adc
xlat
dec
push
add
and
mov
int3
cltd
mov
pop
jle
into
test
adc
xchg
jnp
jb
cli
into
fxtract
sbb
or
sti
dec
rcrl
xor
test
add
or
das
aas
sub
aas
mov
int
int3
popa
mov
jno
cld
and
add
pop
xchg
out
sub
jbe
scas
pop
sahf
inc
lret
mov
push
dec
test
push
cmp
mov
ror
test
add
cmp
inc
aam
push
cmp
mov
dec
insb
fcmovb
sub
mov
jge
push
mov
mov
jp
push
xchg
ficoms
imul
adc
xchg
push
sbb
aam
test
lock
sub
or
cwtl
lds
jo
in
fisttps
imul
jb
ret
std
jmp
mov
cmp
sti
neg
repz
bound
mov
xchg
ret
leave
test
rorb
cmp
insb
add
mov
pop
daa
sbbl
adc
popf
jge
jle
sti
xchg
or
mov
xchg
xlat
movsb
rorb
movsb
fidivs
mov
cli
xchg
out
jne
pop
jns
pop
xchg
in
mov
xchg
jl
js
nop
int3
in
mov
ret
sbb
mov
sbb
hlt
add
in
adc
xchg
data16
or
inc
insb
cmp
xchg
push
xchg
pop
imul
cmpsb
daa
bound
mov
ss
rdmsr
mov
pushf
outsl
or
aam
xor
shr
mov
jne
sub
lret
cwtl
dec
sbb
jo
jge
jo
stos
lods
add
mov
xchg
movsb
dec
mov
jmp
cwtl
lcall
fistpll
mov
pop
push
imul
pop
inc
mov
pushl
stc
push
cld
movsb
sbb
mov
and
inc
jns
fsubrs
mov
iret
inc
call
popa
mov
dec
xchg
and
loopne
or
mov
mov
lea
xor
mov
pop
mov
test
xchg
sbb
into
test
mov
mov
push
pop
cmp
mov
or
adc
and
stos
pop
and
fwait
shll
push
cmp
mov
outsl
icebp
mov
pop
repnz
pop
dec
insb
sub
xchg
adc
push
add
daa
outsl
xlat
shlb
icebp
pop
lret
stos
in
pop
outsl
rolb
movsl
pop
inc
es
inc
das
push
in
xchg
dec
adc
or
inc
jb
mov
xchg
xor
fiadds
and
push
pop
test
dec
jle
and
push
fnstcw
dec
int3
outsl
or
xor
or
sbb
test
xor
sbb
sbb
inc
jo
lea
fidivl
adc
fwait
sub
mov
mov
insb
mov
call
push
sbbb
cmpsb
lock
popf
pushf
lock
cmp
jmp
xchg
mov
clc
mov
std
and
adc
add
jp
push
xchg
adc
addb
jbe
xchg
pop
and
xchg
mov
cmpsl
jl
jnp
add
stos
iret
call
and
lret
dec
adc
das
rorb
xor
push
jle
andl
mov
leave
addr16
xchg
andl
out
mov
int
test
les
sti
sbb
sub
dec
lahf
inc
lods
inc
out
inc
xchg
outsb
lret
jl
pushf
fs
pop
inc
and
pop
loop
mov
mov
out
sub
out
push
cmpb
in
lcall
aas
sahf
gs
xchg
sbb
cmp
movsb
cwtl
shrb
mov
stc
outsl
das
aad
mov
adc
or
dec
sub
movb
mov
push
test
fdivrs
pop
jbe
xor
dec
jb
inc
add
fs
decb
pushf
cmpsl
mov
xor
xchg
fistpll
bts
mov
pop
xor
aad
mov
roll
gs
sub
xor
rep
inc
ljmp
mov
fisttpl
loope
shlb
push
es
push
pop
or
mov
jo
lahf
pop
repz
testl
mov
hlt
iret
pop
inc
cmp
xchg
mov
mov
arpl
xchg
lret
fcomps
aad
inc
hlt
jle
dec
lret
pop
clc
insl
mov
sub
inc
or
inc
insb
push
lock
xchg
lods
or
stos
in
mov
rorb
divl
nop
push
movsl
push
es
fs
repnz
dec
cmp
xchg
mov
jno
cmp
add
and
or
sub
push
cltd
in
out
dec
cmp
mov
xor
shrl
ret
popf
push
xchg
nop
es
fists
sbb
sub
mov
dec
push
push
mov
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
mov
xchg
lahf
jge
jo
push
hlt
lock
out
mov
leave
ljmp
out
insl
loop
adc
push
xchg
jmp
loop
int3
ljmp
dec
pop
xlat
leave
fs
popf
fldcw
movsb
idivl
jb
mov
in
mov
pusha
loop
repz
mov
sub
and
test
out
addr16
loop
repnz
cld
test
push
inc
xor
and
inc
mov
mov
and
cmpsl
add
adc
add
fadd
or
ja
xchg
sahf
imul
lcall
xchg
movsb
inc
int3
int3
xchg
inc
jnp
pop
aas
outsl
jg
sub
sahf
sbb
lods
hlt
imul
sbb
divb
and
sti
das
xchg
cmp
xchg
mov
mov
arpl
cltd
sub
jp
lods
out
mov
call
icebp
push
xchg
cmp
fildll
cmp
call
adc
insl
pop
mov
dec
lds
movsb
in
ljmp
sbb
cld
cmpb
test
lds
loop
inc
sub
push
out
mov
mov
xor
out
lahf
xor
cmp
test
mov
dec
shr
jecxz
sub
ljmp
xorb
rorb
cmc
shl
mov
je
and
sbb
mov
xor
xchg
loopne
mov
gs
data16
sbb
inc
bound
or
mov
frstor
mov
in
mov
sbb
and
cmc
mov
js
or
daa
jecxz
out
cmpl
inc
lret
insb
mov
push
sar
test
mov
sahf
addb
and
adc
rclb
mov
dec
fisttpll
hlt
inc
test
jl
pusha
xlat
lock
aam
xchg
fildll
dec
clc
sti
and
cwtl
push
mov
add
mov
vcvtss2sd
repnz
mov
sub
mov
or
pop
mov
sub
xchg
jns
test
mov
xchg
outsl
stos
bnd
xchg
out
jg
pop
sbb
roll
mov
lock
lahf
loopne
adc
fnstcw
cli
pop
push
mov
push
fcmovnb
dec
test
xchg
mov
push
cmp
mov
insl
iret
and
pop
les
shrl
sub
jae
inc
dec
or
mov
pop
cmp
inc
sub
cmc
jo
arpl
adc
mov
ret
dec
movsb
sbb
adc
mov
addr16
addr16
and
fldt
mov
jnp
xchg
sbb
cmpsl
xor
push
cmc
ss
dec
dec
xchg
fpatan
addr16
sub
jbe
add
xchg
inc
pop
test
sbb
mov
imul
popf
xor
push
lcall
cmp
test
aas
push
xor
ret
mov
adc
pusha
pop
es
sbb
xor
mov
adc
pop
arpl
sub
in
mov
xor
outsl
cmp
movsl
jg
mov
je
add
data16
test
mov
stos
movl
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
pop
cmp
jo
lahf
jge
jo
fisttpll
sub
mov
jne
dec
xchg
mov
mov
push
repz
imul
adcl
test
fildll
fdivs
loope
cmc
insb
and
imul
dec
clc
sub
sbb
js
xchg
imul
xchg
jg
fcmovne
daa
ds
push
insb
push
lds
dec
adc
subb
jo
iret
add
push
popa
sub
pop
in
test
shr
fildll
mov
push
lret
aad
ret
jmp
xor
mov
pop
and
out
xor
mov
mov
movsb
cs
in
sbb
lahf
sbb
sub
mov
aaa
pushf
data16
inc
repz
mov
mov
mov
cmp
in
inc
out
into
push
mov
push
sbbl
dec
jp
jg
dec
stos
iret
xchg
xor
jmp
push
je
cmp
call
jg
xchg
aaa
je
push
mov
cmc
outsb
xchg
shr
sti
add
pop
imul
mov
push
inc
lds
and
dec
lods
icebp
push
popf
mov
daa
mov
or
jecxz
out
and
mov
sbb
nop
daa
push
xor
push
into
xchg
lods
lcall
mov
aad
dec
imul
xchg
ss
jecxz
in
sti
mov
push
xchg
imul
push
jnp
lret
cmp
cmp
lcall
repz
push
test
xor
cld
testb
pop
pop
sbb
js
and
adc
mov
adc
or
xchg
push
dec
xor
add
daa
xchg
hlt
xchg
pop
repnz
jg
aad
inc
es
call
jb
cmpsb
xor
cmp
shll
xor
xor
cltd
mov
add
jo
xchg
nop
rcl
lret
and
pop
push
pop
fimull
sub
and
xchg
loopne
rolb
cmp
fcomps
pop
mov
dec
sub
xor
add
mov
dec
inc
pusha
in
adc
adc
test
aaa
mov
rclb
or
test
sahf
pop
push
test
bndstx
mov
adc
sbb
fisubrs
lds
aaa
and
mov
out
lock
fwait
pop
scas
call
dec
push
into
stos
push
inc
mov
push
test
and
sbb
lock
je
or
test
stos
add
hlt
stos
das
cmp
mov
out
xchg
cmpsb
test
cmpsl
or
jg
fistps
mov
jo
bound
or
sarl
leave
loop
jle
xor
popf
out
cmp
or
insb
push
scas
les
je
sub
and
loop
loopne
or
aas
mov
push
imul
mov
call
fwait
xchg
lds
xchg
nop
sbbl
cmp
imul
push
iret
mov
icebp
scas
imul
push
xlat
mov
mov
or
outsl
jl
ljmp
imul
jg
xchg
jbe
negl
dec
push
pop
xchg
arpl
mov
shl
lea
mov
pop
xchg
int
mov
outsb
rorb
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
jo
lahf
jge
jo
mov
mov
insl
sbb
cmp
xor
js
add
imul
pushf
mov
fwait
jle
jb
adcb
mov
stos
call
test
fistl
mov
nop
loope
cltd
lahf
lcall
or
data16
mov
pop
hlt
pop
xchg
xchg
or
iret
push
inc
xchg
pop
fnsave
and
jnp
dec
jbe
mov
iret
daa
mov
int3
imul
fadd
loopne
ss
idiv
pop
cwtl
mov
inc
call
fistpll
addr16
lock
jns
cmp
cmp
pop
es
mov
xchg
jp
popf
shlb
jnp
mov
sarb
jo
dec
mov
sbb
and
push
mov
fstpl
lret
jbe
xor
sti
mov
adc
rcrl
mov
les
scas
sbb
mov
jmp
push
scas
movsl
cld
std
loope
movsb
flds
inc
lret
lret
dec
xor
push
in
mov
mov
pop
inc
push
and
repz
pop
mov
lahf
imul
lods
rorb
xchg
out
ja
lods
sbb
xor
subb
sbb
cmovl
cltd
fisubl
insb
mov
and
ret
sub
mov
pop
xor
dec
sbb
dec
enter
inc
and
lods
pop
jo
xchg
sub
call
jp
aam
cltd
lahf
xor
xchg
xchg
fcomps
test
jnp
push
fists
dec
cmpsl
and
cmpl
inc
fstpt
dec
add
insb
push
pop
xor
add
jo
pop
push
mov
aaa
mov
sti
mov
lret
sbb
push
pop
scas
pop
pop
shrb
pop
dec
enter
and
test
lea
cmp
les
pusha
stos
movsb
push
mov
and
fcomps
rolb
or
mov
push
mov
das
mov
std
popf
mov
shld
push
or
inc
cmp
insb
cmp
mov
xchg
iret
sub
xchg
out
jbe
dec
jbe
add
cmpsb
jle
cmp
outsl
in
add
push
xchg
and
mov
fstpl
dec
test
cmp
jp
xchg
mov
pop
jae
pop
call
fwait
popa
ucomiss
scas
ss
dec
pop
notb
lret
popa
mov
mov
icebp
aaa
inc
xchg
data16
or
mov
addr16
mov
jb
push
add
out
mov
sbb
sti
cltd
repz
test
jnp
add
jle
lcall
loopne
sub
jbe
movb
xorb
jge
hlt
xchg
fmull
cmpsl
inc
movsb
adc
insb
cmpsb
fldcw
ljmp
int3
jne
mov
vpsubusb
filds
push
in
sbb
inc
mov
sbb
es
div
jge
popf
out
sub
scas
sbb
pop
insl
push
lods
sub
push
jecxz
dec
jmp
xor
mov
add
orl
neg
icebp
lock
fistl
test
test
imul
ja
add
push
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
mov
lahf
jge
jo
shlb
insl
sub
pop
sbbl
rcr
inc
jmp
jae
int
pop
test
jecxz
ljmp
xchg
fs
push
dec
outsl
hlt
jae
je
stos
into
out
jne
into
addr16
push
push
mov
dec
in
popf
pop
push
push
aaa
out
or
xchg
and
xor
or
mov
and
shl
xor
push
mov
jns
data16
jo
inc
dec
pop
in
pop
nop
jecxz
jae
repnz
shll
jnp
inc
mov
and
insl
test
dec
aaa
dec
popf
jo
enter
popa
ljmp
fmull
pop
and
incb
push
movsb
mov
add
jne
into
push
adcb
scas
mov
cmp
arpl
xor
test
mov
dec
nop
lahf
ret
sub
pop
dec
xchg
inc
push
mov
fsubr
addr16
repz
push
mov
add
mov
and
aas
add
scas
test
sub
inc
push
cmp
xchg
movsb
fidivrl
out
inc
movsl
shr
adc
imul
sbb
ss
rorl
lea
mov
aad
mov
idivb
test
js
shl
scas
jb
mov
jbe
inc
xor
inc
or
sbb
insl
xor
push
movsb
scas
arpl
lds
push
bound
mov
dec
addl
pop
clc
loop
mov
outsl
test
jno
mov
mov
pop
aad
push
xchg
movsl
scas
dec
fiadds
add
mov
xchg
xchg
test
cli
pop
or
add
out
mov
je
sbb
fdivrs
push
fnstcw
jl
mov
negb
out
or
adc
or
xor
add
push
add
sbb
mov
sbb
mov
mov
add
lahf
out
adc
fimull
cmpsl
lahf
das
xchg
and
jge
jbe
shrb
leave
cmp
xchg
sti
stos
into
inc
int
std
xor
adc
cltd
ret
in
loopne
stos
ss
xchg
mov
int3
imull
dec
jp
dec
xchg
fsts
jae
mov
fidivs
add
jb
fdivl
xchg
jns
lods
add
fdivrs
lahf
sub
mov
cs
loope
and
dec
popf
mov
pop
int3
push
sbb
inc
cmp
xorb
inc
fists
cmp
push
xor
add
popf
loopne
jl
push
pop
out
test
test
or
jno
push
sbb
jo
daa
pop
inc
and
adc
imul
add
mov
repz
mov
lret
and
cmp
push
xchg
mov
sbb
xor
popa
mov
push
in
call
xchg
cmpsb
push
jno
fisubrs
arpl
inc
push
fwait
and
ja
xor
xchg
jge
pop
outsl
lcall
in
dec
push
sub
test
imul
and
insl
push
pop
xchg
jmp
mov
inc
mov
repnz
divl
hlt
fsubrp
notl
mov
les
inc
pop
fistps
pop
xchg
jnp
sbb
outsb
and
dec
sar
ret
lahf
clc
popf
mov
push
js
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
jo
nop
sbb
lahf
jge
jo
cltd
shll
mov
adc
fidivs
repz
outsb
testb
inc
lcall
jg
mov
xchg
add
sbb
dec
jne
xchg
shll
int3
cwtl
mov
pop
lods
push
scas
push
push
sbb
pop
jecxz
test
fistpl
adc
ss
xchg
jle
cmp
mov
mov
in
pop
and
outsb
dec
shll
sub
cmp
ja
push
sarl
push
mov
bound
int3
filds
in
mov
dec
mov
or
fstp
in
repz
aad
aas
lods
mov
popf
cltd
mov
add
ja
in
dec
or
adc
rcll
mov
shrb
in
fs
xor
add
pushf
in
sahf
ret
popl
add
repnz
and
push
sbb
je
xchg
lret
adc
dec
rcll
or
adc
or
daa
mov
es
sbb
mov
xchg
push
mov
cmp
clc
subl
pop
test
mov
and
idivb
push
repnz
xor
leave
sbb
jae
xchg
movsl
mov
and
sub
outsb
mov
test
jg
fsubr
and
shrb
or
js
lock
stc
xchg
xchg
dec
mov
jg
or
scas
xchg
adc
das
xor
push
shll
push
aaa
jecxz
es
mov
add
adc
ss
nop
mov
lds
xor
sbb
cld
mov
enter
jecxz
xchg
sbb
sbb
aam
pop
fstl
jnp
mov
mov
add
bound
hlt
jp
pop
jl
jns
jno
inc
sub
push
mov
loop
insl
repnz
xchg
jmp
ficompl
cs
push
xchg
inc
dec
mov
xor
movsl
adc
adc
fadds
cmpsb
jp
inc
pop
cmp
jmp
negl
mov
mov
xchg
xlat
cmp
lock
sbb
cmp
outsb
das
xchg
and
mul
mov
xorl
test
dec
and
jl
filds
add
ljmp
push
add
call
lds
sbb
gs
inc
mov
xchg
repnz
jo
es
shrl
inc
pop
xor
lock
push
cmp
xchg
decl
cld
mov
inc
xchg
inc
lods
das
cmp
jl
sub
repz
jle
mov
mov
pop
ljmp
adc
in
sub
sub
add
pop
sub
xchg
shrb
cmp
pop
xchg
or
out
jle
push
dec
xchg
js
fcmovu
mov
inc
sahf
cli
lea
mov
jns
mov
or
mov
sbb
insl
xchg
push
popf
cwtl
pop
mov
in
jecxz
cmc
loop
mov
jo
mov
jo
mov
repz
ficoml
xchg
adc
adc
dec
fwait
push
inc
pushf
xchg
jp
call
push
xchg
adc
sbb
sub
and
popa
add
subb
mov
ja
mov
stos
mov
mov
push
mov
jge
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
xor
jo
lahf
jge
jo
icebp
sub
lret
xor
mov
insb
mov
adc
fcoms
mov
out
scas
test
sbb
inc
push
xor
popf
sub
in
jne
cld
jle
xor
ficoms
shl
add
pop
mov
and
dec
gs
add
cmp
fwait
mov
fs
std
aam
add
repz
sbb
repz
mov
sti
movsl
test
add
jmp
jg
popf
js
sbb
ds
sub
mov
outsl
sub
adc
sbb
sbb
pop
jb
sub
testb
push
cmp
imul
or
leave
pop
in
pop
push
push
cli
add
scas
cmp
jns
and
cld
sbb
imul
les
into
test
xchg
ljmp
mov
adc
mov
and
outsb
pop
pusha
popf
sub
scas
daa
not
jp
outsb
jbe
xchg
ja
loop
inc
ds
and
jle
lods
xchg
and
nop
shlb
inc
je
test
and
imul
jb
cwtl
xor
stos
sub
push
dec
dec
jl
leave
xchg
xchg
sub
push
adc
xchg
mov
inc
rcrl
les
mov
rorl
sub
imul
mov
push
jns
les
xchg
push
sub
mov
xchg
pushw
mov
rcrb
pop
andb
arpl
stos
cli
jp
mov
pop
fmul
lret
ljmp
and
stc
inc
jne
pop
jmp
loop
popf
xchg
sub
inc
xchg
cmp
add
out
insb
xchg
xchg
push
jno
push
or
add
iret
add
add
mov
les
mov
mul
jle
mov
inc
inc
xlat
or
rorl
in
test
movsl
mov
inc
aas
je
sarl
jle
mov
cld
iret
and
jbe
mov
cmp
and
inc
leave
inc
push
test
stos
lret
int
addr16
imul
enter
mov
push
xchg
cmp
mov
loope
roll
jp
cmp
lsl
dec
xchg
sbb
pop
pop
addr16
hlt
xor
pop
test
xchg
das
dec
rorl
fcom
cmp
add
scas
movsb
inc
cld
inc
pushw
insb
aam
test
ljmp
dec
fcmovu
jg
std
add
clc
xchg
jp
cld
mov
fcompl
aaa
inc
xor
pop
ljmp
sub
jae
mov
sub
or
imull
xchg
mov
ficoml
xor
insb
sub
nop
stos
sbbl
lds
scas
dec
lea
mov
mov
mov
fbld
mov
cmpsb
out
xchg
jae
cs
add
roll
shrb
jl
movsl
pop
aad
pop
pop
xor
jg
outsb
cs
sub
sbb
cmp
inc
and
ja
and
cmp
shlb
jle
and
mov
pop
xchg
sahf
mov
dec
sbb
adc
mov
nop
aaa
pop
sub
and
adc
jns
icebp
cmp
jne
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
adcl
jo
lahf
jge
jo
xchg
test
and
cmpsl
xor
sbbb
pop
cltd
es
fistpl
sub
rorb
jns
repz
repz
les
ret
movsb
stos
xor
xchg
sub
lcall
adc
xchg
fbstp
jge
xchg
mov
fldt
test
push
pop
dec
pop
leave
out
or
cmp
test
test
sbb
push
push
pop
mov
pcmpeqd
insb
cwtl
jecxz
mov
sahf
sub
xor
bound
outsb
sbb
jmp
mov
addr16
lds
fdivr
mov
jmpw
jle
sbb
test
adc
mov
jle
mov
cmp
xchg
lock
cmp
pop
jo
xchg
and
aaa
xor
push
fcoml
fnstenv
add
nop
sbb
mov
cmp
ror
bnd
fs
mov
jge
loopne
test
jl
ss
adc
push
dec
lea
leave
int3
addr16
ds
jmp
ja
sub
ja
fcoml
jne
fldenv
mov
das
aam
mov
jge
xchg
dec
pop
fmuls
fsubrs
xchg
mov
pop
xor
mov
jp
inc
sbb
xchg
rcll
jge
popf
popa
nop
sbb
inc
lret
ret
adc
out
xchg
movsb
mov
pop
aaa
mov
cmpsb
std
xchg
test
popa
loope
mov
rclb
jecxz
shrb
sbb
and
aaa
out
pop
mov
shll
mov
into
test
jg
dec
xor
iret
bound
stos
sub
sti
or
insl
ja
int
in
dec
push
lods
loopne
stos
adc
cmp
lods
jle
movsb
out
pop
add
pop
ficompl
push
adc
ja
push
dec
xchg
insb
inc
sbb
jbe
add
cmp
push
arpl
xchg
pop
dec
les
pop
lods
inc
dec
outsb
pusha
sti
sbbb
mov
push
adc
call
scas
add
dec
les
add
inc
push
mov
xor
push
adc
dec
pop
sbb
mov
leave
sbb
dec
cmp
mov
shrl
sub
ss
out
jge
xor
cmc
in
mov
andb
rcrb
cmp
sbb
and
jnp
and
mov
sub
mov
in
add
mov
push
inc
dec
in
in
daa
add
outsb
xchg
mov
mov
cmp
lods
test
mov
jo
std
xchg
sub
lcall
xor
pop
sbb
stc
adc
xchg
rorb
push
sti
adc
loope
adcl
xor
jl
and
jecxz,pn
xchg
fsubl
bound
stc
and
or
out
pop
mov
mov
hlt
out
and
inc
xchg
out
inc
int
stc
pop
cmpb
lahf
mov
and
orl
stos
sub
notl
in
stos
jg,pt
fwait
shrb
decb
and
sarb
jp
jno
stos
push
mov
rorl
test
jge
call
test
imul
xlat
sbb
xchg
pop
xor
xchg
push
out
or
icebp
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
popf
jo
lahf
jge
jo
testb
xor
nop
test
or
sub
insl
in
addr16
jns
test
cmp
popa
adc
sbb
pop
cli
cmpsl
dec
ret
xchg
mul
jle
inc
rcll
and
xchg
xchg
sub
push
pop
jbe
mov
mov
ljmp
ds
xchg
das
clc
lods
xchg
lea
cmp
mov
inc
pop
xchg
jbe
pop
insl
xchg
xor
pop
inc
xor
jge
xor
fimull
dec
cli
pushl
ret
push
lret
sahf
adc
lret
xchg
mov
stos
add
inc
scas
sbb
sbb
pop
push
movsl
in
rclb
fst
sub
xchg
adcl
xchg
mov
aam
fwait
pop
divb
and
imul
xchg
fists
filds
sbbb
cmp
pop
jp
jbe
cmp
sub
ja
add
das
loope
pop
cli
dec
mov
sbb
test
mov
pop
hlt
jg
xchg
jl
mov
inc
xchg
dec
mov
add
out
mov
gs
xchg
jmp
loopne
in
popa
stc
sbbl
dec
pop
jecxz
dec
shl
and
adc
mov
lcall
scas
je
ljmp
mov
xor
stc
adc
imul
nop
dec
cmp
dec
es
add
pop
jmp
xor
or
push
sbb
jne
sahf
aad
loope
and
mov
or
inc
loop
jae
icebp
xchg
push
push
sub
insl
push
sbb
push
dec
jmp
sbb
adc
lods
aad
pop
adc
push
dec
pop
aam
jle
jl
mov
das
mov
fwait
mov
push
std
es
std
dec
cmc
cmpsl
mov
and
and
lahf
sbb
std
aam
ss
idivl
scas
stc
mov
cld
orl
fwait
cmp
adc
or
and
xchg
jmp
ret
aad
fs
inc
mov
sub
rcr
xor
lahf
adc
adc
addr16
and
cs
mov
fsubrl
dec
push
stos
dec
lds
loop
jae
push
mov
jnp
adc
test
add
xor
jo,pt
cs
inc
stos
stos
sbb
jg
push
lea
pusha
pop
cmp
rcll
stos
fiaddl
xor
jecxz
push
adc
insb
pop
lods
pop
lods
xchg
mov
adc
daa
lret
inc
jno
test
std
adc
dec
jbe
fwait
in
scas
add
xor
mov
xchg
test
repnz
mov
lods
fcmovnu
xchg
stos
xchg
xor
xor
xor
xchg
js
jecxz
sbb
mov
out
mov
cmp
mov
into
movsl
and
repz
push
movsb
and
bound
ficompl
push
stc
arpl
adcl
dec
jmp
test
cld
addl
inc
cmc
sbb
rcrl
xchg
fsubs
push
xor
aaa
mov
shlb
lea
mov
inc
or
xchg
mov
jle
jecxz
cmpsl
lret
cmp
sbb
fstpl
int
js
lock
es
mov
lock
scas
pop
sbb
and
and
dec
add
fbstp
pop
push
jp
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
sub
push
cltd
jo
lahf
jge
jo
xor
scas
aad
aad
jge
pusha
jns
push
roll
mov
and
mov
mov
jp
rcr
imul
sub
data16
loopnew
loope
mov
les
sahf
rorb
mov
sbb
jl
negb
faddl
sbb
or
aaa
jmp
xor
pop
fistps
jecxz
lahf
dec
fistpll
mov
nop
iret
inc
cmp
jmp
jae
lods
daa
ds
xor
mov
cs
mov
jae
and
mov
fdiv
repz
push
int
ljmp
int
and
aam
sub
pop
mov
inc
ret
leave
scas
faddl
xchg
std
adc
leave
inc
dec
cmp
pop
scas
test
jp
and
scas
andl
rolb
mov
jbe
repz
aad
rcll
ret
aas
movsl
adc
cmp
rcrb
test
insl
push
and
push
lret
jb
sbb
xor
sbbl
aas
not
adc
jge
pusha
mov
push
cmp
sbb
in
jg
jecxz
add
xchg
arpl
xor
add
int
cmp
dec
inc
mov
in
adc
and
or
mov
xchg
fmul
jmp
fcomps
test
es
jnp
and
mov
incb
out
popa
sahf
jns
stos
fwait
push
xchg
mov
out
cmp
std
inc
sub
adc
xor
sbb
xor
es
jg
loope
ficompl
adc
jmp
add
push
inc
js
mov
mov
jno
adc
mov
call
inc
xchg
push
movsl
push
pop
push
xchg
mov
sbb
inc
add
inc
inc
cmpsl
andb
ret
mov
mov
int
pushl
mov
or
nop
ss
jne
movsb
call
pop
dec
pushf
int3
pop
ret
roll
xchg
into
cmp
je
aam
leave
adc
jl
mov
sub
cmp
out
inc
fildl
pop
jbe
sti
push
adc
call
or
shrl
cld
mov
imul
cmp
lret
xor
dec
data16
jge
loope
data16
add
jecxz
pop
sahf
lods
push
sahf
adc
leave
cwtl
inc
xchg
jo
inc
cli
pop
fcomp
and
xor
xor
js
jge
stos
ret
dec
add
cmp
clc
mov
out
in
stc
pusha
push
or
daa
adc
xlat
fdivs
jge
dec
les
inc
roll
or
xor
adc
jle
xor
fdivl
iret
fcoml
nop
fisubrl
clc
rorb
movsl
or
cmpb
pop
testb
and
and
clc
loop
mov
pop
sbb
pop
cmpsl
jmp
scas
cmp
jge
cmp
stos
push
insb
dec
insl
int
dec
cmp
xchg
jnp
sub
sbb
adc
and
pop
adc
int3
insb
in
push
xor
dec
mov
daa
addr16
mov
jno
in
in
bound
clc
cmpsl
jo
jns
aam
sti
rolb
and
mov
shr
inc
push
and
mov
jge
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
in
push
push
jg
jo
add
not
vmwrite
movsl
pop
test
lretw
mov
or
stos
pusha
jb
pop
inc
inc
sarl
pushf
scas
testb
jl
mov
mov
movsl
shl
imul
incb
sub
out
dec
sbb
cmpsl
jo
adc
and
push
int3
inc
shrb
xor
jp
inc
sarb
sbb
sub
add
fsubl
arpl
mov
push
xchg
xchg
lods
dec
call
dec
arpl
ljmp
add
pop
sti
imul
daa
sub
jno
out
lea
xor
div
and
inc
cltd
mov
jl
jmp
push
dec
jns
mov
dec
in
idiv
nop
loop
add
aas
mov
jp
or
adc
cltd
mov
or
sbb
push
cmc
jbe
insb
mov
cmp
ss
aam
xchg
adc
cmp
add
cwtl
and
dec
icebp
mov
xor
lods
js
inc
inc
sahf
mov
insb
mov
cmc
xor
sarl
jb
pop
push
sub
mov
fdivrl
or
cld
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
jl
or
jo
jg
jo
xchg
movl
adc
sub
aaa
stc
subb
pop
mov
or
cwtl
mov
adc
push
xchg
repz
jl
add
popf
pop
push
xchg
mov
add
pop
mov
cmp
add
sub
out
enter
sbb
gs
popl
push
roll
clc
jbe
out
push
jns
sahf
test
jno
test
sub
outsb
jl
jg
in
mov
fstpt
out
fnsave
addr16
and
lret
lcall
xor
mov
fisttpl
pop
jae
dec
cmp
iret
mov
pop
and
and
lcall
dec
push
ja
fistps
orl
cmp
daa
add
sbb
jp
jnp
sbb
test
int
or
add
in
pop
iret
and
mov
pusha
inc
pop
lcall
test
rcr
dec
loop
iret
jmp
mov
movsb
jo
lea
mov
lods
pop
test
pop
xor
nop
arpl
sub
and
mov
icebp
pusha
xor
stos
movl
and
lea
mov
jmp
rorl
sbb
jle
mov
jo
negb
xchg
xchg
ja
rolb
mov
bound
add
popa
mov
clc
pop
jb
lret
hlt
rolb
sbbl
subl
nop
add
stc
jb
xchg
mov
sbb
loopne
sti
shrl
and
bound
cs
cli
cmc
jno
outsb
loop
inc
xor
cmpl
jg
loop
xchg
insl
and
loopne
push
imul
mov
mov
mov
cvtdq2ps
jmp
call
pop
fwait
lock
repnz
rorl
ss
mov
xor
fidivs
cmp
xor
repz
cmp
cmp
out
repz
in
out
xor
jns
xor
jne
insl
popf
fwait
popf
jbe
pop
fsubrl
cli
stos
xchg
pop
xor
sub
xchg
push
aad
icebp
xchg
fmulp
pop
push
std
push
push
jp
test
scas
rclb
pop
xor
xchg
pop
jg
sub
push
shll
pop
push
or
mov
cs
das
adc
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
xchg
push
mov
jo
ficoms
sub
cmp
je
test
adc
shlb
lret
xchg
fsts
xchg
sbb
div
clc
or
sub
push
cwtl
mov
mov
fwait
add
and
or
popf
adc
ror
inc
push
imul
jg
cmp
mov
mov
aaa
bound
inc
sbb
mov
sbb
sub
pushf
in
test
xchg
mov
cwtl
stos
std
ljmp
or
mov
push
mov
and
rcr
icebp
xor
inc
fwait
gs
and
popa
int
fiaddl
cmpsb
ja
sbb
pop
insb
out
inc
hlt
mov
in
sub
lahf
jo
mov
ja
xor
xorb
mov
dec
into
into
fnstsw
or
repnz
enter
adc
cmpb
std
dec
ljmp
push
daa
shll
les
and
cmp
xchg
jge
and
mov
xor
mov
lods
rolb
sub
adc
pop
arpl
inc
in
cmpsb
jle
inc
mov
js
lods
cwtl
mov
adc
roll
jge
loopne
lret
adc
je
fists
sbb
mov
jmp
push
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
mov
cmp
and
jo
ret
jg
jo
fucomp
stc
mov
test
test
adc
movhps
dec
dec
ret
push
inc
addb
xchg
movsb
in
sub
xor
leave
sbb
add
mov
paddd
jo
repnz
shll
negl
ja
std
cld
lea
jecxz
inc
xor
sub
jb
rclb
scas
or
subl
or
adc
or
mov
js
push
xchg
xchg
mov
sbb
jp
mov
scas
adc
cmc
jg
add
or
and
inc
cmp
pop
mul
xor
xlat
fisubl
jle
out
cmp
mov
mov
inc
ret
in
sub
dec
mov
test
test
lret
push
mov
js
adc
lahf
cmc
sahf
jnp
sbb
out
sahf
imull
shl
pop
dec
das
xchg
xchg
cmpsl
dec
cli
jge
sub
push
pop
adc
or
rorl
mov
mov
lods
packssdw
shll
std
inc
and
pusha
jl
test
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
mov
mov
scas
jo
ret
jg
jo
dec
jecxz
cmp
inc
lods
not
rorb
xor
fwait
sbb
or
pop
or
mov
or
sub
jle
clc
test
xchg
outsb
inc
outsb
xchg
lret
pushf
jae
ds
adc
addr16
sbb
dec
cs
jb
sub
data16
cmpsl
lds
pop
sub
jae
jb
xor
sbb
xchg
jbe
outsl
and
fimuls
fcmove
xchg
stc
inc
fcoms
xor
xor
sub
add
pop
sbb
bnd
sbb
stc
mulb
fsub
or
cmp
pushf
xchg
xchg
mov
jo
fildl
xchg
mov
lret
mov
inc
lds
xor
std
imul
add
out
in
pushf
xchg
jl
lcall
push
inc
push
jno
jns
fidivl
in
insb
les
push
inc
or
hlt
sahf
fistl
lods
push
inc
loopne
bound
add
imul
pop
idivl
cmpsl
pop
xchg
loopne
sub
shlb
mov
cmpsb
fnstcw
pop
adc
xlat
outsl
sub
faddl
arpl
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
lea
push
mov
jg
jo
pop
and
in
xlat
js
inc
jge
lea
cmp
iret
fwait
lock
xor
jno
mov
ret
in
aas
icebp
jnp
stos
into
or
arpl
inc
inc
mov
jg
cmpb
mov
fcoml
test
xchg
sub
shrb
out
sub
shr
jp
and
jmp
sbb
mov
xor
stos
xchg
dec
sub
adc
pop
push
lods
loope
movsb
mov
jo
cmpsb
arpl
cmp
mov
mov
adc
incl
or
cmp
data16
int
imul
adc
bound
xor
add
mov
xchg
fisubs
xchg
scas
lock
sar
cmpsl
sub
out
lcall
pop
ds
push
cmp
lret
xchg
jl
inc
sub
jecxz
add
js
sub
pop
out
inc
cli
push
outsl
xchg
jg
je
daa
xlat
lea
push
push
mov
in
cmp
sahf
dec
and
sbb
cmpsb
push
sbb
rcrl
add
or
addr16
fcoml
xor
lods
jns
bound
imul
add
pop
inc
mov
or
out
pop
push
enter
mov
or
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
jle
bound
jg
jo
loopne
xchg
ss
jge
mov
in
pushf
incb
add
and
inc
jl
cmp
mov
pushl
cli
shll
subb
scas
loope
lret
mov
mov
pop
mov
fldenv
stos
movsl
ficomps
sub
jle
scas
dec
shll
rclb
inc
fisubrs
xor
leave
jge
pop
or
dec
lods
mov
cmp
xor
push
pop
push
jne
cld
scas
mov
ljmp
add
nop
jb
mov
pop
inc
add
jl
add
pop
mov
dec
sbb
sti
in
fmuls
lock
lods
and
pop
dec
ljmp
roll
sahf
lea
lahf
repz
mov
and
xor
jns
dec
in
cwtl
out
pop
pusha
pop
mov
ret
cltd
mov
insb
repz
fldenv
jp
rorl
push
fistl
or
jecxz
add
xchg
fstp
shrb
es
jne
push
lret
xlat
xchg
mov
iret
test
frstor
ret
pop
insb
lock
add
xchg
pop
adc
cwtl
int3
js
add
cmpsl
cmc
or
shl
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
push
xchg
jp
shrb
jo
or
sti
iret
loopne
sbb
es
enter
pop
cmp
jo
or
xchg
lock
test
add
add
bound
mov
aad
sub
outsb
pop
mov
mov
push
xchg
scas
movsl
das
ss
pop
jp
lcall
arpl
push
pop
inc
cmovne
pop
sahf
or
cwtl
push
xchg
cmp
call
in
hlt
xor
add
push
inc
insb
sub
adc
mov
enter
dec
mov
adc
push
pusha
xchg
mov
pop
inc
xchg
mov
mov
sti
push
lds
mov
js
insl
in
jae
in
jle
push
lock
es
out
push
je
repnz
shlb
insb
pop
popf
fmulp
inc
popf
mov
mov
getsec
push
js
jp
jmp
aas
stos
cmp
insb
and
clc
inc
shlb
cmp
int3
fwait
lods
js
push
aam
adc
enter
cmpsl
pop
fistps
movsb
lcall
mov
cmpsl
std
in
or
xor
cmp
in
sbb
sahf
dec
leave
inc
mull
dec
adc
sbb
test
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
adc
jo
ret
jg
jo
int
mov
scas
loope
fnstsw
movsl
mov
icebp
sets
fcoms
lods
std
mov
mov
out
mov
loope
pop
xor
jmp
test
cwtl
les
add
cmp
sub
mov
mov
inc
out
cmc
sub
loopne
jmp
xchg
pop
lock
daa
xchg
loope
lret
fcmovu
cmc
sub
push
cld
and
shll
jne
cmp
fildll
das
ret
std
outsb
movsb
jge
or
xchg
testl
ret
repz
jmp
pop
lock
lret
add
out
je
pop
in
sbb
jno
sbb
jbe
sbb
movsl
je
mov
pop
pop
mov
out
stc
sahf
imul
mov
ret
insl
fcmovnb
adc
sbb
xchg
ljmp
cmp
je
and
movsl
insb
xchg
cltd
push
sub
xor
shrb
push
pop
pop
mov
and
sbb
cmp
gs
rorl
loopne
xchg
fidivrs
loop
nop
outsl
adc
hlt
mov
out
movsl
push
ret
mov
test
adc
jle
mov
xchg
push
scas
mov
shll
ret
pop
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
shrb
or
addr16
jo
ret
jg
jo
push
push
cltd
in
into
jp
or
outsl
cwtl
dec
aad
xchg
sub
fucomp
jg
add
ljmp
js
push
loop
mov
mov
jmp
jnp
mov
jbe
sub
dec
xor
xchg
inc
out
test
aaa
fwait
lret
fucomi
sbb
mov
shrd
dec
inc
sbb
jno
inc
lea
sar
lcall
mov
mov
scas
sarb
xchg
xor
xlat
fbld
out
lahf
adc
cmp
mov
daa
sub
jle
ret
inc
jg
pop
ffreep
ds
cmpsb
cmp
imul
movsb
cmp
inc
pop
test
jnp
mov
and
sbb
jle
dec
pop
jp
xchg
es
mov
lds
jb
or
push
mov
stos
xor
mov
int
cmpsl
inc
nop
jbe
dec
add
mov
adc
xchg
mov
mov
stos
in
mov
mov
xlat
cs
lods
jecxz
adc
jl
lds
test
mov
clc
jmp
inc
gs
icebp
imul
jae
lahf
int3
cmp
jo
sti
int
xor
jge
inc
movl
lods
mov
gs
lock
adc
icebp
adc
add
movsb
idivb
dec
fisttpl
push
lret
fisttpl
jo
sahf
insl
mov
adc
adc
daa
dec
shrl
pop
fstp
push
inc
jp
push
dec
rorb
xor
pop
jmp
xor
jae
push
fsubrs
rcl
xchg
mov
xlat
dec
cmp
cmpsl
xor
xchg
jl
fwait
xchg
pushf
xor
hlt
mov
push
pop
sbb
loope
dec
pop
daa
mov
inc
xchg
insb
xchg
push
lahf
rcrb
mov
xchg
popf
dec
addl
jo
in
jae
clc
mov
loope
movsb
inc
adc
into
ds
and
jbe
sahf
inc
push
cmpb
mov
sub
cmp
mov
cld
push
data16
in
stos
lcall
mov
xchg
mov
jb
mov
mov
sub
mov
je
loop
sub
xor
jp
mov
daa
rclb
in
sbb
pop
sti
jmp
pop
lret
xchg
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
cmp
in
mov
jo
lods
mov
sbb
popf
lea
cld
mov
mov
mov
lods
dec
sahf
es
push
or
jle
add
data16
cmp
stos
xor
test
lods
cmp
mov
test
add
int3
pand
lock
dec
sbb
add
call
xor
lcall
mov
clc
jno
incl
or
mov
negb
ja
mov
sub
add
in
loopne
stos
into
push
inc
push
jg
ss
in
add
movb
aas
jmp
das
add
lret
cld
jb
jl
andl
xchg
xchg
es
pop
cld
adc
sbb
adc
dec
out
clc
je
lret
lcall
pusha
leave
pushf
in
mov
jne
jmp
jge
pop
pop
scas
cmc
ja
mov
xchg
cmp
mov
fdivl
pop
sub
xchg
xor
inc
je
aam
mov
shlb
lds
sub
xor
sbb
repnz
mulb
or
xlat
sub
in
cs
sub
aad
adc
cli
mov
inc
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
or
mov
jo
jge
jo
lods
and
mov
fwait
lock
or
cmp
dec
add
sbbl
stc
out
rolb
iret
rol
int
ret
mov
clc
pop
adc
jmp
push
pop
addr16
es
mov
mov
insl
bound
pusha
dec
jnp
test
shrl
mov
into
and
add
inc
mov
jb
xchg
movsb
hlt
cs
pop
stos
in
rorb
mov
sahf
push
popa
testb
mov
jg
in
sti
dec
inc
mov
mov
fldenv
test
outsl
and
and
test
mov
xor
nop
dec
sbb
sub
xlat
popf
and
dec
movsl
xorb
sub
mov
fcomps
mov
lret
fistpll
movsb
jge
add
pop
hlt
cmp
xor
adc
sbb
xchg
xchg
shl
and
inc
cmp
mov
xlat
and
movsb
adc
mov
inc
stc
into
jge
int3
xchg
arpl
and
pop
jmp
cld
loopne
mulb
inc
leave
mov
dec
icebp
inc
lcall
and
jnp
cmpb
pop
insl
push
or
scas
cli
arpl
jbe
add
jp
or
mov
dec
call
cmp
mov
icebp
clc
mov
sbb
inc
and
nop
mov
popf
movsb
fsts
jl
jp
nop
aaa
out
andb
shr
xor
sbb
or
dec
xor
stc
pop
mov
push
mov
fsubs
inc
inc
dec
dec
arpl
shlb
adcl
hlt
pop
cwtl
xor
jbe
add
ljmpw
jg
mov
mov
cmp
add
fcoml
add
test
repnz
push
ret
pop
aad
jno
jl
pop
and
movsb
pop
push
insb
mov
mov
rorb
int3
jno
push
int
mov
rclb
add
pop
inc
mov
movsl
nop
je
sbbl
int3
sub
mov
xor
push
les
cltd
iret
mov
movsl
pop
push
cmp
rcrl
xchg
adc
pop
lds
mov
dec
inc
loop
test
jmp
fwait
clc
mov
mov
subl
xchg
push
pop
adc
in
add
ljmp
lds
jae
movb
int
mov
repnz
scas
pop
jmp
mov
xor
cmp
jae
ljmp
lret
scas
les
shrb
mov
mov
sub
add
mov
fadds
xchg
inc
fiaddl
sub
inc
and
sbb
mov
sbb
rolb
es
in
shr
adc
xor
inc
icebp
mov
cmpsl
popa
repz
push
pop
pushf
inc
arpl
fisttps
repnz
push
jns
leave
pop
int
in
mov
pop
xchg
test
in
fisubrl
fnsave
out
mov
pop
popf
nop
sbb
mov
mov
icebp
push
mov
pop
or
icebp
push
inc
mov
mov
pop
cmp
aas
stos
and
shll
push
mov
cli
test
pop
add
daa
sub
iret
jle
mov
frstor
cmc
adc
and
psllq
movq
sbb
jmp
mov
cli
xor
testb
scas
jp
xorb
jo
jge
daa
push
insl
fcomi
jbe
das
inc
push
call
iret
mov
pop
clc
jmp
push
xlat
fisubl
adc
jns
sar
scas
jp
addr16
repnz
push
addr16
sbb
aas
out
xor
inc
lods
pop
xor
cmpsb
std
and
and
cmc
test
sub
dec
cmp
lds
in
rcl
movl
roll
or
repz
pop
out
insl
in
out
push
movsl
and
orl
and
or
pop
jge
cmp
pop
or
ficoms
mov
xchg
sahf
xor
je
outsl
pmaddwd
loop
mov
add
call
dec
pushf
cli
loopne
mov
outsl
inc
and
shrl
jmp
je
xor
ja
xor
lods
stos
orl
adc
lds
addr16
sbb
xlat
insb
rolb
lods
push
dec
mov
pushf
push
repz
xor
jmp
sbb
mov
ljmp
cli
mov
mov
mov
mov
in
scas
jb
insb
adc
inc
push
ficompl
lock
cltd
aam
outsl
fdiv
jmp
insb
je
cmp
rorb
dec
fs
jbe
mov
setne
xchg
cmpsb
sbb
add
nop
push
aam
int
sahf
mov
into
insl
ret
mov
stos
daa
insb
jmp
ss
in
cld
sbb
ljmp
sarb
jns
or
jp
mov
lret
into
mov
rorb
xor
sahf
out
sbb
cmp
adc
popf
jns
lahf
jle
pop
cmp
or
loopne
inc
add
iret
in
or
pop
mov
adc
inc
mov
inc
fsubrs
and
jg
xchg
in
aas
inc
and
pusha
fistps
into
dec
std
cli
mov
jae
ja,pn
aaa
or
loopne
pop
lcall
dec
mov
mov
and
push
mov
push
xchg
mov
xor
mov
das
push
push
call
rcll
ja
hlt
movhps
inc
shlb
xchg
in
dec
sar
in
inc
mov
mov
iret
jecxz
cmc
or
mov
sarl
mov
mov
or
sub
lea
mov
aam
pop
pop
aas
out
push
pop
negb
sub
inc
jmp
mov
fisttpl
in
adc
aas
sub
movsb
mov
adc
lret
enter
push
outsl
adc
insb
xchg
ja
inc
add
repz
clc
mov
jne
fadd
mov
data16
xchg
mov
sub
ffree
adc
xchg
scas
fwait
inc
add
or
mov
push
add
jl
mov
pop
sub
fists
push
jae
cltd
in
or
inc
xor
pop
out
sti
cmp
mov
fisttpll
xchg
lret
fstl
fcmovnbe
cmp
jne
cs
sub
sub
xchg
mov
outsl
push
or
movsl
cs
xchg
mov
adc
or
add
push
push
mov
test
add
add
cmp
add
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
dec
pop
mov
xor
jge
jo
sbb
lods
mov
dec
inc
adc
xchg
test
xor
jne
and
hlt
lea
ret
iret
xchg
decl
add
jo
test
mov
adc
loop
jmp
bound
daa
xchg
int
inc
aam
mov
outsb
addr16
outsl
loopne
test
cmpsl
sbb
inc
sti
cmc
sbb
jns
stos
mov
xor
jp
cmc
jbe
lret
cltd
repz
sbb
insb
iret
jecxz
jo
add
out
sbb
push
es
jp
dec
movsb
ljmp
cmpsl
push
vcvttsd2si
jno
hlt
push
mov
rcrl
sub
or
push
add
dec
arpl
jmp
dec
pop
add
xor
add
or
pusha
jo
xor
lret
mov
clc
cmp
stos
ret
inc
outsl
cmp
and
pushf
dec
sub
roll
cli
mov
dec
orb
dec
lcall
inc
jp
pop
lret
lods
xor
and
xorb
inc
nop
ja
mov
sahf
fwait
movsb
xchg
orl
jge
aam
iret
scas
adc
out
ds
inc
cmpsb
arpl
cs
jns
mov
test
int3
jecxz
outsl
in
idiv
aas
mov
push
jg
sub
adc
dec
ja
mov
jns
mov
cmp
loopne
cmp
mov
xchg
cwtl
pop
hlt
or
add
fwait
cmp
inc
int
cmc
and
jno
mov
js
filds
push
fsubrl
out
leave
in
adc
mov
push
xchg
mov
int3
xor
rorb
xchg
inc
test
mov
pop
cmp
or
lret
inc
add
xchg
pop
scas
cs
aaa
xor
out
mov
xchg
mov
and
mov
imul
adc
rcrl
es
sub
pop
xor
hlt
xor
and
cmp
sbb
cld
insb
xchg
lret
jnp
sbb
jge
call
out
ja
fstl
mov
pop
jnp
adcl
inc
in
or
insb
pop
xor
xchg
out
pop
jmp
or
adc
mov
pop
inc
sbb
mov
dec
fs
je
icebp
lahf
arpl
mov
push
aas
adc
add
pop
inc
push
popf
jl
adc
push
inc
mov
test
cmp
pop
in
roll
or
cmp
jle
icebp
outsl
rolw
js
iret
out
jbe
push
inc
or
aad
push
addr16
sar
inc
cmpsl
mov
sbb
icebp
sbb
cmp
sub
cld
lock
pop
iret
cmp
push
popf
xchg
xchg
push
jne
movsb
pop
js
outsb
test
fdiv
sbb
js
stc
fcoms
inc
test
pushf
sbb
xchg
mov
dec
fwait
and
xchg
lock
shl
popa
insb
dec
adcl
inc
push
mov
out
fs
imul
pushf
in
or
xor
cmp
mov
push
addb
gs
push
je
push
sbb
clc
mov
xor
mov
loope
loop
push
sbb
xchg
jl
lods
pop
jae
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
pushf
frstor
jl
insb
jg
add
mov
sbb
push
sti
mov
adc
cmpl
adc
adc
xchg
pusha
or
mov
test
out
fistpll
fld
lahf
lock
outsl
fisttps
add
out
popf
insl
outsb
xchg
cs
inc
dec
sub
and
ja
and
movsl
xor
pop
testb
push
addr16
test
pushf
cmp
lret
gs
notb
sbb
pusha
jmp
dec
roll
lds
mov
mov
jno
orb
mov
mov
inc
xor
int
lcall
mov
jl
mov
mov
inc
xchg
sub
inc
cmp
pop
js
in
push
ret
aad
pop
sbb
sbb
xor
pop
push
jp
adc
jl
insb
cmp
loop
aaa
sbb
xor
sahf
aas
lods
sbb
pop
mov
lret
jb
dec
mov
or
cltd
jg
fucom
mov
hlt
jmp
mov
rorl
jmp
rcll
mov
cmp
lahf
mov
jbe
jp
in
xor
out
movsl
xorl
es
mov
xchg
push
ljmp
push
inc
lea
je
ds
sbb
xor
cmpsb
sbb
test
addr16
jl
push
call
popf
stos
mov
or
mov
iret
cli
vcvtsd2si
lret
jmp
sub
cmp
mov
inc
scas
std
and
jno
lret
inc
jne
jmp
xor
and
fbstp
sub
inc
push
pusha
mov
je
lret
in
jmp
pop
mov
leave
xlat
mov
and
or
je
imul
or
adc
data16
and
inc
jb
inc
xor
and
mov
and
inc
jmp
lret
push
push
lock
jg
inc
fcoms
fdivrp
xor
xor
xchg
mov
rol
ret
sub
inc
out
xchg
fwait
xor
sub
jne
push
sahf
outsl
mov
sbb
push
mov
sbb
adc
pop
xor
sbb
leave
xchg
mov
ficoms
dec
sbb
pop
inc
xchg
dec
or
aaa
mov
jle
mov
mov
xchg
cmp
xchg
adc
jge
aaa
and
and
add
sub
mov
mov
cmp
ret
rol
or
pop
bound
pop
jno
mov
xchg
lods
out
sti
pop
inc
arpl
xor
lret
cmp
xchg
js
subb
mov
or
xchg
out
dec
push
lods
fldcw
imul
and
in
xchg
outsb
dec
inc
cmpsb
sbb
pop
mov
test
push
inc
cld
xor
fidivrs
insl
ljmp
mov
mov
sti
mov
mov
das
jb
outsb
adc
fsubrl
cmp
daa
repz
in
cld
jns
mov
fisttps
fsubp
pop
jns
lret
mov
xor
ja
loopne
icebp
repnz
mov
cmpsl
adc
in
or
mov
mov
dec
cmp
jmp
xlat
test
xchg
das
jnp
mov
sbb
mov
add
jmp
outsl
mov
or
imul
xchg
mov
xchg
mov
jo
jge
jo
ljmp
cmp
mov
push
inc
mov
push
fists
mov
push
fwait
add
jmp
sub
addr16
and
ja
icebp
outsb
lods
jp
xor
jmp
cmpsb
push
fnstsw
push
push
in
cmp
dec
dec
out
push
push
enter
xor
pop
push
sarb
push
sub
xlat
sbb
dec
testl
in
mov
adc
and
pusha
push
int3
idivl
cmp
pop
add
sub
test
cmc
and
dec
sub
pop
mov
loop
mov
pop
jmp
clc
lds
popl
test
pop
xchg
orb
fstpt
cld
push
cmp
add
cmp
sbb
push
cmc
pop
xchg
pop
dec
arpl
mov
mov
lods
mov
cmpxchg
mov
xor
dec
add
push
push
shrl
test
jne
fwait
and
cltd
movsb
cmpsl
in
test
scas
sub
push
mov
xchg
adc
shlb
and
xchg
mov
and
cmpsb
dec
icebp
jae
adc
adc
mov
mov
dec
pop
inc
ss
int
jo
and
and
mov
enter
out
sti
pop
add
data16
jo
pushl
mov
jno
aaa
aas
lahf
rclb
or
jae
jp
mov
outsl
and
push
rcl
mov
xor
pop
mov
jo
sbb
xchg
adc
lods
adc
or
mov
or
mov
gs
int
stos
or
popf
fcmovnbe
add
pop
xchg
mov
aaa
call
pop
adc
mov
adc
cwtl
add
sub
dec
fsubl
test
pop
mov
dec
lea
testb
negl
pop
test
ljmp
xlat
imul
mov
js
jno
push
jge
jge
mov
fdivs
cltd
mov
jns
push
jle
sub
repz
ja
clc
mov
mov
mov
mov
mov
mov
pop
sbb
or
ss
dec
fisubs
lahf
fildl
mov
popf
xchg
mov
push
sub
mov
inc
sbb
adc
push
in
jle
sbb
jae
pushf
movsl
push
mov
xchg
push
aas
dec
pop
test
decb
and
push
in
adc
ja
and
sub
ljmp
mov
mov
aam
incb
test
push
pop
xor
lea
adc
outsb
out
jnp
fxtract
mov
push
aam
jl
cli
xor
ja
ss
decb
adcl
es
adc
outsl
xchg
lret
cmpsb
or
cwtl
push
or
sub
sbb
mov
and
xor
or
push
xlat
or
push
push
icebp
pop
and
sub
out
push
fistl
int
pusha
incb
nop
xor
call
lea
xchg
outsb
bound
mov
loopne
and
jmp
xchg
xchg
add
xchg
sarl
xor
in
stc
xchg
mov
add
enter
and
mov
inc
push
jge
lds
pop
dec
jns
inc
xchg
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
sti
xor
inc
jo
pop
jge
jo
out
push
ficoms
add
icebp
push
adc
fucomi
stos
add
gs
push
push
lods
dec
inc
pusha
sbb
mov
jns
lahf
lcall
sub
cmp
sub
jg
stos
clc
jbe
cltd
je
in
ror
jg
arpl
push
pushl
pop
mov
xchg
loopne
mov
jmp
aam
dec
xorl
into
jns
scas
jbe
rorb
adc
loopne
xor
fwait
xor
aad
mov
stos
test
cltd
cmc
cli
cwtl
xacquire
push
jp
sti
inc
xor
lods
test
xchg
sub
test
cmpsb
fimuls
std
jbe
lret
inc
in
ja
movsl
ja
xor
xor
loopne
cmpsb
adc
dec
ds
mov
ds
outsb
sub
lock
mov
mov
mov
scas
fidivrs
jns
ja
push
add
out
dec
dec
rorb
xor
aas
inc
divl
mov
mov
mov
cmpl
paddsb
pop
push
loop
adc
mov
inc
pop
std
jns
mov
mov
or
push
mov
mov
jge
cltd
adc
jg
cmp
out
lahf
push
push
mov
mov
push
outsb
out
cmp
popf
clc
jecxz
pop
lcall
shlb
idiv
pop
out
outsl
or
or
ffreep
stos
sub
cmp
je
push
cltd
inc
mov
mov
das
mov
test
lret
ja
xor
mov
dec
addl
es
pop
mov
adc
and
mov
xor
add
xchg
aas
sub
test
mov
sbb
cld
mov
cmp
js
push
clc
xchg
sbb
add
rcll
or
cmpb
cmpsl
jnp
in
dec
testl
adcl
fldl
js
movsb
push
dec
das
jnp
enter
pusha
cmp
mov
cmpsl
mov
jb
or
aaa
and
adc
imul
lar
shl
or
pop
fldl2e
cwtl
call
aad
test
and
jno
lock
aam
adc
insl
and
dec
jp
dec
pop
mov
dec
lods
mov
jmp
or
push
leave
fsub
pop
mov
push
mov
fsubr
popf
cmp
cltd
jp
fsubs
and
data16
add
add
pusha
int
inc
mov
ret
mov
mov
cmp
mov
ja
dec
dec
xchg
mov
mov
outsl
fisubrs
mov
loop
jle
jae
adc
xchg
repz
lea
sbb
and
iret
nop
cmp
ficoms
stos
cmp
jo
inc
mov
js
cmp
mull
rcr
push
fcoms
idivb
jbe
ficoms
cmp
jmp
ljmp
mov
les
cltd
clc
popf
icebp
rorb
sub
add
lods
stos
ret
mov
jg
mov
sbbb
movsl
popa
mov
and
movsl
pop
insb
mov
pop
jge
popa
jmp
test
xchg
xor
add
push
mov
jns
pop
fisubl
add
add
mov
xor
imul
push
jp
jp
imul
push
mov
mov
lar
repz
add
fimuls
push
dec
repnz
pop
into
push
mov
flds
arpl
in
or
enter
aam
sbb
faddl
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
mov
mov
fnstenv
and
lret
test
aam
cmpsl
xlat
mov
jp
lods
sti
leave
sbb
jge
xor
xor
lret
pop
stos
sti
jge
or
test
jmp
out
lahf
mov
xchg
fiadds
mov
dec
lcall
lods
push
sub
ds
mov
jmp
inc
adc
sbb
sarb
cwtl
push
push
lret
jns
cld
mov
loop
mov
mov
aaa
andl
push
lret
repz
loope
mov
into
arpl
int
lds
testl
fnstenv
push
out
xor
test
lods
hlt
pop
xchg
mov
pop
xor
les
pop
sbb
dec
popf
cmp
lcall
and
mov
xchg
sbb
dec
orl
lcall
pop
mov
sahf
out
push
insb
xor
or
inc
inc
jg
push
loop
imul
xchg
lcall
in
mov
fimull
push
jmp
xchg
pop
add
jecxz
inc
std
push
xchg
fwait
roll
jne
adc
push
dec
test
imul
push
movsl
lock
jecxz
cmp
and
fstl
nop
inc
push
hlt
test
shl
dec
jge
insb
jl
jns
movsb
dec
imul
jbe
adc
dec
ds
repnz
fwait
gs
and
push
dec
loop
insb
pop
andb
mov
dec
jecxz
test
cmp
enter
or
cltd
dec
xor
mov
in
pop
add
push
xchg
cmp
mov
lahf
stos
mov
js
test
jae
mov
dec
sahf
in
or
add
insb
pop
add
leave
or
push
in
sbb
addr16
in
mov
lds
movsb
xchg
aam
pop
into
daa
popa
sub
insb
xor
xchg
stos
fbstp
out
iret
pop
mov
and
in
adc
loopne
fildl
inc
mov
int
cmp
cwtl
inc
cmp
outsb
jp
push
aad
cmpl
sbb
mov
xor
nop
jbe
xchg
xchg
popf
and
push
in
push
pop
inc
inc
aad
sub
dec
push
in
mov
sbb
idivl
add
test
aam
xchg
inc
sarl
xchg
push
adc
adc
pop
mov
add
xchg
incb
adc
insb
stos
mov
fld
xchg
outsb
scas
sahf
test
mov
and
xchg
in
sahf
dec
xor
ljmp
cmpsb
pop
xchg
shll
rorl
popa
cmp
notl
push
jecxz
ret
dec
aas
xchg
and
pop
in
dec
cmp
js
jbe
ret
popf
cmc
nop
repz
pushf
jl
push
xchg
pop
cmpsl
adc
stos
mov
sbb
mov
adc
dec
mov
andl
bound
movsb
leave
test
ret
mov
in
cwtl
pop
pop
ret
adc
xchg
es
loopne
rolb
mov
lahf
mov
mov
xchg
adc
xor
xchg
pushf
nop
lahf
jb
cmp
mov
sbbl
xchg
insl
jnp
mulb
sti
mov
and
fstps
add
imul
jp
inc
pop
or
jle
mov
cmpl
clc
std
adcl
sbb
sub
jne
cmp
pusha
push
cmp
xchg
loope
sbb
xorl
out
cwtl
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
xor
jo
jge
jo
idivl
clc
sub
add
icebp
lcall
cmc
mov
les
push
ret
ja
stos
jecxz
pop
fsubs
jp
sti
ret
insb
cmpsl
in
jno
xor
popf
push
int
addr16
aaa
lock
cmpb
mov
lcall
push
loopne
mov
das
imul
ficoms
dec
inc
cwtl
jecxz
fisttps
and
cltd
dec
in
jp
jo
push
lea
out
js
add
sbb
loope
dec
dec
jmp
pop
fsubs
lcall
icebp
hlt
inc
xchg
dec
push
ret
push
mov
or
mov
cld
lock
lods
adc
sbb
push
imul
cmp
push
or
push
mov
jnp
and
js
adc
sub
fbstp
inc
pusha
xor
sarb
imul
xchg
cmp
mov
push
ss
jge
gs
dec
and
in
push
movsl
pop
daa
data16
loop
cmp
ljmp
adc
xchg
out
sub
pop
movsb
into
out
mov
nop
xor
mov
test
out
add
rorb
mov
sbb
mov
scas
out
and
clc
ficoms
jle
shlb
add
mov
mov
fcoml
out
sbb
xchg
xchg
bound
shlb
insl
add
jge
xchg
pop
ffreep
fidivl
add
je
rcr
insl
repnz
pop
in
mov
add
mov
sahf
daa
mov
mov
in
push
insb
outsl
int3
jbe
jge
push
pop
adc
pop
inc
mov
push
mov
sub
pop
sbb
dec
js
addb
out
dec
dec
mov
dec
jb
repz
rclb
mov
xchg
dec
fldt
lss
xchg
push
cmpsb
cs
mov
jp
mov
inc
dec
aam
fsubrl
sub
mov
aad
pop
push
xchg
lret
xor
xor
dec
xor
pop
xor
imul
gs
ljmp
cmp
pop
inc
test
xor
sbb
call
dec
inc
jle
cmp
xor
pop
arpl
dec
mov
jb
mov
adc
cmpsl
sti
xchg
add
decl
fsubl
jb
movsl
cmp
nop
pusha
inc
lods
dec
and
ret
inc
xor
dec
cwtl
inc
ret
pop
mov
mov
cmpsb
mov
cwtl
fsts
cmpsb
aas
pop
cmp
inc
je
add
and
cmpsb
jo
jbe
ja
inc
mov
mov
jae
pop
mov
or
stos
adc
out
adc
add
sub
and
fiaddl
repz
fadds
sub
or
and
mov
loope
fsubrl
in
jb
push
jge
clc
push
adc
aad
pop
mov
ljmp
add
mov
sbb
cmpsl
cmp
out
jl
and
dec
nop
aas
repnz
push
mov
and
inc
mov
sti
mov
frstpm(287
inc
mov
repz
add
ftst
pop
lcall
mov
cld
ljmp
out
jecxz
aad
and
das
ficoml
sub
shlb
aam
sbb
inc
popf
out
mov
jecxz
xlat
sbb
mov
xchg
jp
jg
pop
pop
push
addl
fwait
jbe
stc
push
add
loopne
pop
pop
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
ret
jo
pop
jge
jo
aam
dec
push
jo
push
test
push
sbb
mov
int
push
dec
mov
or
and
pop
data16
cmp
jmp
mov
enter
jge
shld
cld
out
jae
and
enter
adc
xor
sbb
xor
add
rorb
scas
rcrb
cmpsl
adc
push
lock
xchg
cmp
mov
ss
and
cmp
mov
adc
cmpsl
push
out
inc
test
cwtl
repnz
outsl
lea
dec
xor
mov
aad
add
dec
sub
std
loope
aas
xor
jecxz
imul
pop
std
mov
xor
fildll
rol
cmp
mov
cmp
cmp
decb
clc
mov
add
fisubrs
loop
mov
cltd
mov
mov
xchg
in
push
adc
push
mov
sbb
loope
adc
call
stos
das
rep
das
mov
and
lods
dec
fdiv
loopne
leave
lds
imul
clc
push
test
mov
jg
jmp
or
stc
xchg
xchg
or
and
insl
add
jo
sahf
test
push
pop
addr16
lods
pop
pop
hlt
push
rol
dec
div
jecxz
xchg
xor
stc
dec
lcall
in
in
fdivrl
insl
adc
xchg
xchg
je
cmp
fimuls
mov
jmp
pushf
cmp
aam
jp
sbb
xchg
insl
or
lea
repnz
lret
push
and
fiaddl
jg
cmp
cwtl
pop
mov
fcmovnbe
xchg
rcr
leave
nop
mov
shrb
jl
mov
or
jecxz
lock
arpl
not
ficomps
dec
insl
xor
cmpsl
pop
fwait
push
push
mov
int3
adc
pop
cmp
or
inc
jo
pop
cld
sbb
in
sbb
adc
jle
sbb
fidivrs
shlb
or
mov
mov
push
xchg
test
cld
pop
and
adc
imul
pop
aas
aaa
cli
xchg
cmp
stos
loopne
jns
std
cmp
cmpsl
das
jp
cmpsb
jmp
stos
jno
adc
dec
adc
stos
lahf
mov
mov
ss
loop
aaa
and
push
lret
not
cwtl
sbb
mov
inc
lahf
dec
adc
or
jb
inc
nop
mov
notb
cs
cmc
addl
orb
arpl
out
or
dec
inc
sbb
mov
inc
aam
daa
xchg
mov
inc
push
sbb
ljmp
mov
insl
add
xchg
fsubl
popa
hlt
mov
push
ret
jne
adc
dec
mov
cmc
in
xchg
lahf
or
add
mov
cmp
pop
push
sbb
fidivl
cmp
fdivrs
pop
adc
call
bound
inc
cmp
and
and
ljmp
xchg
adc
gs
and
gs
cs
fisttpl
jecxz
cmp
hlt
sbb
hlt
aas
mov
dec
dec
aaa
sti
sti
add
mov
sbb
mov
loope
outsb
out
add
sti
xorl
push
add
testl
test
bound
fstps
pop
mov
add
lret
xchg
test
ret
sub
loopne
fwait
rcrb
lcall
test
movsl
ret
mov
jge
mov
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
dec
pop
push
jo
pop
jge
jo
lods
or
mov
and
xor
pop
out
clc
pop
mov
sub
mov
aam
inc
jae
add
das
std
das
dec
decl
lock
test
ds
inc
and
or
test
jno
mov
push
push
insb
sub
pop
push
shll
cld
fsubr
aad
mov
cmpsl
out
pop
or
mov
popf
add
inc
sbb
jge
jmp
xchg
lcall
mov
cli
push
clc
addr16
pushf
pop
pusha
cmp
fwait
jnp
repz
push
pop
sbb
inc
inc
call
sub
popf
subb
mov
mov
cmpl
out
icebp
js
repnz
sbb
sarl
stc
mov
xor
inc
sbb
lcall
push
sti
adc
pop
sub
or
ret
pop
jns
pop
pop
repz
repnz
nop
jmp
jp
iret
sbb
stos
cld
xchg
mov
sub
pop
sahf
lock
int
popa
sub
push
mov
lret
mov
mov
pop
and
scas
mov
xor
cmc
or
ret
cmpsl
sub
loopne
testl
loop
mov
push
xchg
push
ds
jp
daa
mov
xorl
mov
cmp
shrl
dec
orl
repnz
push
bound
xchg
mov
clc
stc
mov
jp
enter
call
in
mov
push
dec
jp
repz
jo
dec
leave
ja
mov
and
outsl
mov
ss
je
dec
mov
cmp
addr16
fwait
das
jns
mov
and
cmp
punpcklwd
arpl
sub
dec
cmpsl
xchg
arpl
xor
add
out
clc
inc
push
and
mov
popa
mov
and
xlat
add
mov
and
jno
push
pop
add
lock
pop
xchg
push
icebp
adc
aaa
jg
loope
push
or
lret
sbb
or
cmp
xchg
xchg
inc
pop
iret
std
fucomi
fidivs
mov
orl
loopw
in
sbb
test
out
ljmp
aaa
std
outsl
mov
dec
adc
cmpsl
lods
lea
scas
nop
mov
jno
push
xchg
add
rcll
pop
push
inc
push
pmullw
mov
mov
push
mov
mov
dec
cmp
xor
popa
xor
lock
fninit
dec
pushf
outsl
inc
or
mov
pop
jp
pop
jb
daa
mov
jp
and
mov
xlat
pop
xchg
mov
add
xchg
pop
inc
mov
mov
sahf
jle
je
pop
ss
subl
xor
ss
scas
jecxz
cmp
shrl
cmc
test
imul
es
push
in
mov
out
inc
popf
mov
pop
test
iret
mov
dec
shr
int
sbb
sub
shll
sbb
mov
sub
stc
or
into
push
cs
scas
ss
out
daa
fs
mov
push
sbb
mov
mov
movsl
mov
and
movsl
and
data16
cmp
out
xor
sbb
add
pushf
mov
insl
push
adc
sub
mov
mov
mov
jne
sub
pop
add
and
push
jnp
popf
icebp
push
pop
adc
push
xor
cltd
dec
pop
test
mov
aam
leave
add
pop
addb
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
jmp
pop
jo
mov
pop
jmp
cmp
addb
inc
movsb
mov
rol
add
pop
mov
ja
and
push
cmpsb
adc
out
je
sti
cmp
mov
incb
ss
dec
lock
movsl
push
repz
testb
mov
idivb
xchg
insl
lret
lea
out
inc
outsb
fsubl
call
mov
xor
jle
iret
cltd
pushf
pop
mov
cmp
push
xor
mov
mov
jmp
push
filds
icebp
aas
jmp
jle
mov
fs
sahf
cmpl
mov
add
scas
sub
push
fs
lock
in
sahf
popf
fsub
lahf
push
das
shrb
test
xchg
or
pusha
add
test
pop
and
popf
dec
ljmp
xor
xchg
cmc
push
adc
mov
sub
imul
push
inc
lock
outsb
ljmp
out
je
imul
scas
stos
or
pushf
mov
mov
xchg
xor
iret
ret
cmp
scas
jbe
aas
repz
jo
fcmovne
and
movsl
sbb
mov
mov
pop
pop
cmp
sbb
in
add
xor
filds
lods
movsl
les
lret
dec
imul
xchg
aas
xchg
jecxz
cmp
js
cltd
mov
arpl
mov
xchg
inc
push
xor
mov
mov
and
dec
fsubrl
mov
pushf
aas
add
add
cmp
push
dec
mov
imul
pop
push
fwait
les
call
ja
dec
or
stos
mov
shrl
mov
stos
repz
scas
xchg
lahf
mov
xchg
stos
or
mov
xchg
dec
ret
inc
mov
icebp
cli
dec
push
loopne
xchg
js
xchg
mov
shl
pop
jle
faddp
inc
ret
mov
push
dec
neg
pop
test
dec
out
leave
scas
push
push
mov
cltd
and
pop
xor
mov
push
pop
cs
cmp
jne
cmp
mov
fcomi
scas
addr16
pop
rolb
inc
mov
iret
inc
sbb
lds
jp
inc
cli
sbb
xorl
loope
inc
sub
add
cmp
jns
xor
adc
sub
add
dec
push
into
repz
pop
les
sub
jns
shrb
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
pushf
xorl
mov
or
daa
in
int
add
push
or
insb
movsb
out
inc
test
test
cli
mov
push
sub
test
sbb
enter
dec
xor
rolb
cli
in
lods
adc
xor
jns
mov
and
inc
pop
xor
test
mov
mov
out
push
mov
mov
pop
jb
sub
jcxz
imul
jl
or
movsl
lock
sti
fildl
pop
jbe
adc
inc
push
pushf
or
imul
jns
jne
in
mov
cmpsb
xor
scas
sbb
cmp
lods
fs
in
mov
and
mov
mov
rclb
push
arpl
mov
sbb
ret
jecxz
jmp
insb
mov
in
ror
push
inc
sarl
ret
add
jg
addb
test
cltd
and
pushf
lcall
fmull
sub
bnd
sti
dec
or
shl
dec
inc
inc
or
mov
sbbb
testl
jae
lret
or
push
pop
mov
jl
loop
mov
pushf
pop
and
fisttpl
sbb
cltd
ret
popa
xchg
ret
push
xchg
dec
mov
jle
pusha
dec
xchg
cs
lret
xchg
out
xchg
pop
push
and
loopne
pop
pushf
pop
cmp
ja
pop
repz
repnz
sbb
cmp
mov
dec
mov
loopne
loopne
mov
and
shl
dec
inc
cmpsl
inc
and
sub
push
adc
mov
mov
into
into
xor
adc
loopne
in
lods
test
loop
mov
scas
ret
cwtl
das
xor
ljmp
fwait
dec
incb
inc
arpl
mov
dec
outsb
push
cld
lods
shlb
inc
pop
nop
inc
add
cmp
xor
mov
dec
jae
dec
inc
lret
and
xor
sub
xchg
adc
cld
mov
addr16
and
std
jo
ret
out
mov
sarl
push
mov
cmp
or
push
mov
mov
push
or
sbb
das
icebp
repnz
xchg
inc
mov
pop
mov
add
cmp
pop
cld
gs
mov
popl
shlb
xchg
in
pop
ljmp
bound
aas
push
push
fcomi
mov
in
xchg
pop
pop
adc
xchg
dec
lock
mov
sbb
pop
cmp
mov
test
les
add
and
test
jbe
inc
add
add
add
sldt
add
leave
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
enter
pop
jo
mov
cmpsb
or
or
adc
mov
add
ret
in
sbb
fcoml
cld
dec
mov
sbb
fsub
cld
push
hlt
jnp
lock
cmp
push
push
mull
dec
into
test
mov
pop
push
xor
es
mov
arpl
inc
lahf
jmp
inc
mov
nop
mov
clc
aaa
jl
dec
mov
inc
sbb
mov
sahf
mov
mov
xor
cmp
xchg
push
push
sub
cmp
shll
je
dec
cmpsb
and
and
pop
pusha
cmp
loopne
out
ds
xor
mov
add
lea
jae
jae
or
out
and
mov
pop
sub
or
xor
mov
and
int
mov
pop
xor
int
dec
mov
sub
xchg
jns
aad
inc
mov
fbld
js
push
sub
adc
sub
mov
dec
loopne
xchg
stos
iret
and
sub
popf
or
mov
test
sbb
fisttps
outsb
and
mov
jae
sub
pop
lret
cmc
andb
ja
pusha
mulb
mov
cltd
mov
repnz
xlat
add
xchg
rcrb
outsl
mov
daa
addb
sub
orb
cli
lret
imul
or
sub
into
enter
push
push
lods
mov
and
lahf
nop
lea
adc
arpl
push
arpl
cmp
mov
inc
arpl
inc
sub
outsl
xchg
stos
sub
xlat
mov
sbb
push
sbb
mov
push
mov
or
add
lds
sbb
xchg
xor
sbb
clc
out
fisubrs
iret
rcl
das
lock
push
iret
dec
scas
out
lret
hlt
mov
cwtl
inc
test
in
loope
inc
imul
sub
outsl
in
dec
adc
jne
je
xchg
test
cmp
fwait
mull
stc
idivl
test
fsubp
insb
fldt
sahf
or
push
push
adc
push
shll
dec
ja
inc
mov
push
out
mov
cwtl
push
xchg
and
sbb
stc
xlat
xchg
jg
xchg
out
aam
fwait
ss
mov
sbb
mov
rclb
inc
out
inc
inc
jmp
dec
idiv
cmpb
jae
mov
lahf
shlb
inc
fwait
mov
test
add
add
and
inc
add
dec
in
add
pop
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
fdivrs
jo
jle
jo
das
push
mov
pusha
arpl
inc
cmp
push
inc
icebp
dec
and
fs
push
add
lcall
xorl
repz
movsb
int3
mov
push
jne
sbb
push
cwtl
in
cmp
or
jle
adc
xor
inc
mov
sub
push
sbb
enter
mov
inc
nop
ret
push
mov
jg
into
cwtl
or
neg
mov
xchg
push
xchg
lret
in
mov
negb
and
pop
fcompl
cmp
or
and
push
dec
push
movsl
dec
cli
mov
mov
inc
pop
icebp
rcrl
js
inc
push
cltd
pop
mov
adc
out
lcall
fisttpll
push
or
dec
mov
ret
mov
sub
lock
adc
push
stos
jnp
imul
je
int3
stc
in
rcrl
mov
hlt
jge
or
lock
mov
push
push
lods
notl
ljmp
sub
inc
repnz
cmp
lahf
sub
sbb
xorl
push
mov
lods
cmp
adc
je
pushf
fincstp
bound
testb
mov
out
and
lea
jmp
inc
cli
jp
sbb
fistl
iret
sub
jp
sbb
or
jbe
adc
inc
cmp
jno
pop
xlat
js
and
mov
dec
jge
jno
push
mov
into
cmp
dec
mov
popa
stos
mov
pop
lds
filds
xor
sub
ds
rorl
nop
cmp
sbb
insl
dec
inc
fs
in
jo
and
iret
push
sbb
jle
mov
push
in
push
xchg
mov
testb
xchg
mov
xchg
pop
jp
dec
stc
dec
rclb
push
roll
cmp
sub
sbb
in
outsb
aas
cmp
jle
pushf
pusha
pop
stos
clc
push
pop
aad
push
xchg
cltd
test
xor
xchg
xor
xchg
std
cmpsb
push
popf
inc
pop
sub
mov
lahf
pop
in
mov
daa
add
mov
xchg
add
icebp
loop
mov
xor
mov
cmp
or
mov
sahf
dec
add
lock
lock
sarl
xor
sub
in
mov
gs
out
stos
in
xchg
mov
rorb
aad
sbb
fdivr
psrlq
repnz
dec
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
pop
je
fs
mov
cmp
js
decb
idiv
pushf
testb
jb
or
pushf
jb
ds
sub
push
cmp
ds
int
out
push
pmullw
adc
leave
arpl
inc
and
mov
mov
mov
xchg
iret
or
test
aas
push
stos
adcb
sbb
or
xchg
cmp
scas
pop
jle
cmp
adc
mulb
arpl
sbb
mov
nop
std
pop
push
cmpsl
or
and
sub
adc
call
leave
mov
mov
push
add
fistps
lods
cmp
pop
rcl
push
adc
pop
cmp
mov
add
xchg
dec
fdivrs
test
lcall
scas
mov
movsb
lahf
test
push
popa
dec
stos
js
pusha
aaa
ds
mov
or
test
cmpsb
fisubrs
lahf
jbe
add
lret
leave
pop
movl
movsb
mov
sub
mov
jne
cli
mov
jo
mov
sahf
add
es
sbb
push
and
fiaddl
mov
mov
incb
aas
cmp
stos
jl
hlt
inc
cld
rcrl
sub
or
sub
iret
pop
sub
insb
aas
cld
push
ret
jecxz
pop
or
sbb
divps
test
jecxz
nop
push
lea
jecxz
pusha
xchg
loopne
fisubs
and
rol
add
fwait
xchg
ljmp
push
add
aas
pushf
lods
push
sub
repz
pop
aaa
or
aas
lret
or
subb
loope
loop
lea
mov
fsubrl
in
jle
pop
clc
add
shrl
jne
mov
jle
xchg
cmpsb
arpl
pop
cwtl
movb
insl
xor
mov
adcb
sbb
daa
inc
xchg
cwtl
out
mov
cmp
mov
cmp
ljmp
xor
inc
xchg
adc
or
cli
sti
in
jns
pop
or
pop
jo
popf
les
mov
and
sub
into
pop
scas
rcll
lcall
mov
xchg
xchg
insb
pop
fs
stc
and
and
adc
xchg
and
out
pop
pop
xchg
cmp
mov
cmp
and
loope
movsb
aas
mov
add
repz
mov
mov
push
inc
or
mov
call
lret
cmp
push
mov
and
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
loopne
adc
mov
jle
jo
out
mov
lock
inc
add
pop
and
dec
dec
iret
jge
jmp
mov
jbe
addb
cmp
xchg
xrelease
mov
cmpsl
dec
popf
repnz
push
sahf
mov
mov
rcrl
adc
rol
icebp
mov
enter
jnp
sarb
jmp
clc
xchg
mov
dec
lods
sub
jp
mov
lret
test
push
testl
int3
aas
test
fld
mov
ss
push
inc
addl
pop
in
xor
pushf
addl
xchg
lret
jnp
jns
or
mov
ret
mov
movsl
popa
stos
jae
ljmp
je
ja
ljmp
pop
popf
loop
xorl
push
push
sub
mov
and
sub
test
mov
or
shl
stc
add
adc
cltd
cmp
and
mov
loop
insb
lahf
xchg
mov
add
in
je
je
and
nop
leave
mov
mov
into
mov
pop
inc
adc
dec
pushf
lret
enter
cmp
out
push
sbb
cmc
dec
popa
dec
fisttps
mov
std
cltd
inc
pop
and
stos
into
nop
and
push
ret
bound
arpl
rorb
loop
push
shll
dec
jne
or
xlat
inc
scas
mov
xor
adc
outsl
sahf
insb
js
pop
call
scas
and
out
mov
push
lret
jg
out
aas
ds
fcomi
notl
bound
adc
test
sub
mov
mov
aas
inc
mov
or
sub
loopne
lds
in
loop
cmc
sub
jne
out
adc
mov
add
or
adc
and
sahf
jp
sbb
imul
lods
icebp
ss
mov
sub
jo
and
or
std
je
cmp
pop
cli
cmp
jne
out
dec
sub
mov
or
outsb
fisubrl
adc
cmp
lods
lods
pop
fcmovbe
dec
pop
pop
lahf
inc
jge
scas
lods
push
xlat
inc
out
fs
rcrb
pop
mov
jle
jo
pop
mov
shl
pop
sbb
aam
cmp
cs
jmp
sti
adc
or
aas
ficompl
dec
xor
push
xor
or
jns
pushl
cmp
jns
insl
hlt
imul
mov
adc
cmp
insb
add
lret
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
pop
in
outsb
jo
mov
clc
movsb
pop
lahf
roll
scas
outsl
movsb
mov
jae
jmp
add
jle
xor
ret
jmp
imul
dec
cltd
jmp
mov
stos
enter
clc
xor
push
repz
xchg
xor
lock
lahf
cmp
pop
jle
jnp
push
loope
shrb
sbb
jp
aas
shlb
or
ljmp
scas
ret
repnz
cmpsl
fldt
lret
lea
dec
mov
pop
fsubl
cmp
rcr
loope
clc
stc
jg
jns
ficoms
int
push
outsl
cmp
push
pop
pop
push
xchg
sbb
out
adcl
dec
mov
rolb
mov
sub
cmp
adc
aam
pop
ljmp
dec
mov
aaa
inc
inc
test
mov
xor
mov
push
xor
sub
push
loop
mov
mov
lret
and
xchg
mov
jns
push
cli
mov
pop
lahf
adc
sub
test
jne
xor
push
push
cli
mov
mov
mov
jb
cltd
rcrb
cmp
popf
push
or
rorb
adc
outsl
stos
js
js
test
cmp
stos
adc
pop
inc
add
xor
jo
xlat
cmp
xchg
dec
xor
stos
lret
cld
sbb
jmp
cs
cwtl
mov
int
ret
pop
scas
dec
outsb
fbld
cmp
jge
mov
fstpl
in
pusha
test
xor
sbb
jno
dec
dec
inc
push
inc
aad
xchg
push
std
jae
xchg
fcompl
das
inc
fisttpll
mov
xorl
mov
lock
dec
scas
push
adc
xor
cli
jmp
or
stc
fisubl
pop
xchg
mov
sub
mov
pushf
lahf
jae
mov
dec
popf
inc
pusha
into
push
pop
out
lods
lret
pop
add
test
push
or
and
cmp
pop
ret
add
push
xor
mov
xchg
das
insb
xor
bound
test
out
xchg
dec
dec
mov
xchg
push
mov
mov
and
mov
pusha
jmp
filds
fsubp
pop
hlt
xchg
fimull
jb
mov
fidivs
mov
pushf
add
test
dec
push
scas
push
jnp
jnp
mov
das
out
and
out
out
cmp
cmp
jne
pushl
jmp
and
lods
shrb
in
push
stos
push
inc
xor
jle
jo
ds
dec
xchg
sub
bnd
add
js,pn
popa
push
int
sub
subb
pop
and
add
jne
inc
cmp
idiv
rcll
mov
push
ja
jmp
out
mov
jbe
adc
jmp
xchg
dec
movsl
push
xchg
xchg
xchg
rcr
mov
push
mov
shrl
clc
lods
or
nop
inc
and
fwait
adc
aas
loop
in
je
addr16
test
or
ljmp
or
or
cmpsl
inc
cmp
xlat
out
xor
xchg
in
and
jg
inc
and
xor
adc
aad
je
ret
sub
jo
push
cmpsb
cmp
andl
loopne
pop
fs
stos
push
cmp
repz
pop
pop
jge
fnstcw
jo
mov
mov
dec
pushf
popa
insl
adc
push
push
ljmp
lds
cmp
add
sub
mov
in
insl
xchg
shrb
sbb
jo
fdivp
rcll
mov
adc
sahf
sub
mov
cmp
xor
jbe
push
test
das
mov
jno
jno
mov
mov
mov
lock
notb
mov
cmp
or
lcall
mov
cltd
inc
adc
dec
es
xor
cmp
fadd
cld
mov
cmp
push
ss
cmpsb
add
jg
pop
mov
mov
out
daa
push
mov
xlat
mov
xchg
lret
aas
xor
lcall
dec
xor
inc
lahf
xor
xchg
push
cmc
xchg
clc
lods
test
mov
adc
aas
inc
pop
pop
rcrb
add
pop
fwait
xor
mov
jnp
push
push
mov
jo
dec
lods
push
push
lret
stos
sahf
pusha
aaa
sbb
xorl
cmpsb
aam
and
imul
xorb
sti
int3
shl
daa
incb
inc
mov
aaa
stos
push
loopne
inc
aam
lds
call
jo
mov
ds
mov
inc
add
fldcw
je
adc
mov
dec
push
out
lcall
fstl
test
jl
fcmovne
jbe
ss
cltd
mov
pop
sbb
arpl
mov
cmpsb
loop
add
mov
and
inc
pusha
inc
mov
mov
stc
and
mov
mov
std
ret
sub
sub
call
jmp
pop
insl
and
xor
insl
jp
or
sbb
jo
mov
out
xor
xchg
sti
cltd
loop
push
andl
cltd
push
fs
xor
pop
cld
stos
movsb
scas
mov
scas
dec
or
mov
mov
ss
call
insb
call
cmp
mulb
mov
and
add
les
outsb
pop
std
cmc
fidivs
xchg
mov
pushf
pop
sbb
xlat
cli
sub
and
subb
out
pushf
packssdw
je
stos
pop
inc
push
test
scas
pop
mov
mov
insl
push
popa
mov
and
jl
cmp
popf
push
repz
fisubs
mov
sub
lods
cmp
xchg
sub
mov
mov
fdivrs
test
sahf
jno
pop
jne
or
stos
sub
mov
sbb
jns
and
inc
lret
in
mov
or
xchg
cmp
xchg
cmp
clc
add
call
xor
ret
jbe
mov
push
ljmp
mov
pop
xorl
sub
call
pop
fcomps
sbb
enter
mov
rcl
shl
or
cmp
adc
ljmp
adc
call
sub
stos
sbb
popl
mov
push
jno
movsl
adc
push
mov
push
and
test
pop
push
test
xchg
cmp
outsb
sub
pop
test
xor
mov
mov
out
mov
mov
mov
mov
notl
jge
in
mov
ljmp
mov
jno
jmp
jmp
into
test
adcb
subl
or
out
push
xchg
xchg
sbb
loop
rcrl
mov
mov
sbb
enter
push
dec
mov
xchg
jns
js
pop
gs
jl
in
jp
and
lahf
xchg
cli
je
icebp
sahf
mov
sub
filds
xchg
cwtl
pop
adc
das
sub
cmp
cmp
jmp
test
cmpb
idivl
mov
mov
xor
dec
fldenv
jl
sub
cmp
push
in
cli
jge
pop
lret
inc
and
or
in
stos
bnd
shlb
pop
cmpsl
pop
insb
fiaddl
fcmove
sbb
out
das
mov
out
int
dec
adc
std
fnsave
jno
imul
aad
xor
dec
inc
dec
sub
popa
mov
pop
cmpsl
pushf
cltd
jp
sbb
lret
sbb
scas
fwait
inc
sbb
or
or
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
mov
jbe
jo
jle
jo
pop
dec
add
wbinvd
imul
into
ror
jle
cld
gs
mov
mov
sub
pusha
xchg
mov
cmpsb
daa
push
mov
mov
and
lds
sub
scas
jb
push
addr16
test
loope
lds
sbb
shll
push
jmp
mov
pop
push
jne
orb
xor
mov
decl
fld
add
lea
fwait
adc
out
rep
push
add
cmpsl
sub
pushf
fstpt
mov
clc
sbb
movb
andl
xchg
out
mov
lds
sub
dec
or
xor
cmp
clc
xchg
ret
data16
xchg
fidivl
jae
pop
adc
cmpsb
pusha
lcall
inc
fcomps
xor
lcall
push
ret
mov
inc
inc
push
dec
push
pusha
and
repz
sbb
test
popf
mov
mov
push
mov
shrl
add
neg
push
sbb
mov
in
jecxz
inc
icebp
jecxz
ljmp
ja
fsubrl
sub
jno
jns
add
push
sbb
pop
xor
push
jno
pop
xchg
pop
ret
fwait
dec
icebp
mov
and
push
add
in
out
mov
jae
iret
add
pop
dec
aam
jecxz
lds
pop
push
leave
xchg
test
leave
jno
or
or
int3
pop
jmp
jns
loop
addb
xor
xchg
cltd
nop
mov
sbb
add
cmp
jle
push
imul
shl
iret
rorl
mov
mov
pop
cmc
frstor
and
push
cmp
scas
addr16
test
out
test
pusha
add
iret
inc
sahf
push
or
notl
dec
dec
sub
mov
xlat
jmp
in
lret
shrl
dec
les
inc
loope
out
icebp
inc
mov
dec
sti
sbb
test
xor
adc
pop
xchg
xchg
pop
mul
nop
xchg
add
mov
mov
mov
push
push
test
bound
push
leave
inc
stos
pop
sub
xchg
dec
jo
cmp
test
data16
adc
ljmp
pop
ljmp
loop
push
mov
mov
aaa
jno
cmpsb
hlt
hlt
les
mov
rcrl
sbb
out
push
sbb
or
insl
icebp
jnp
mov
inc
pop
jecxz
insb
mov
in
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
jne
mov
jle
jo
testb
fcomi
mov
cli
add
imul
push
outsl
clc
xchg
loope
mov
out
outsb
dec
fnsave
xor
mov
inc
lods
pushw
shll
cmp
dec
or
add
loope
test
cmp
cmpb
sub
sti
sub
push
sub
imul
mov
inc
pop
cmp
movsl
cmp
push
dec
mov
rclb
and
fldt
aaa
rcl
push
ljmp
and
or
out
jns
sbb
pop
pop
ss
inc
adc
frstor
pop
das
add
mov
sub
pop
fidivs
xchg
std
inc
dec
pop
or
dec
mov
into
mov
dec
data16
lods
sti
xor
gs
jmp
and
mov
mov
push
loop
cmp
add
rcl
push
pop
cmpb
arpl
sub
das
xchg
call
or
pop
sbb
sbb
fbld
je,pt
inc
push
sbb
sbb
popa
loope
xor
push
pop
in
sub
xchg
in
adc
jnp
outsl
cmp
ljmp
pop
testb
xchg
in
popa
ss
aad
xchg
int3
dec
test
sub
fisubs
xor
fs
popf
pop
mov
add
pop
rorb
or
and
cmp
jnp
dec
cmpl
rcrl
stos
push
add
lahf
mov
mov
inc
cmc
xchg
sbb
call
sar
lea
pop
xor
in
shlb
xchg
outsl
cld
je
or
repz
sti
mov
mov
mov
mov
ficomps
cmp
shl
xchg
or
inc
or
or
ja
fwait
test
insl
adc
inc
push
mov
out
fiadds
mov
ret
mov
jne
and
mov
das
iret
cmpsb
mov
cltd
arpl
xor
aaa
cmpsl
cmp
lahf
fistps
scas
jg
xacquire
imul
adc
adc
repnz
jo
bound
cmp
dec
push
jno
xchg
cld
lret
fidivs
loopne
cmpsl
jbe
dec
scas
int
leave
cmp
xor
mov
mov
data16
subl
sbb
mov
jb
push
push
pushf
mov
jle
jl
lods
jae
scas
mov
jb
pop
popf
mov
into
xor
loopne
into
mov
push
push
adc
dec
insl
lods
pop
int
lods
in
add
push
sub
call
pop
out
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
negb
mov
jnp
int3
jmp
cmp
push
push
scas
adc
bswap
cmpsb
fstl
notb
jne
push
xchg
hlt
jp
and
push
push
jle
test
dec
adc
shl
adc
dec
push
insl
add
xchg
xor
test
ret
mov
subl
pusha
jns
mov
mov
xchg
mov
pusha
sarb
push
sahf
jl
pop
into
xor
sarb
mov
call
std
cmp
xchg
cmp
lea
imul
nop
mov
scas
ret
clc
outsl
rcl
push
mov
iret
outsb
mov
aas
loopne
xchg
and
lods
int3
imul
xchg
mov
cmpl
dec
mov
pop
sub
jnp
clc
pop
cli
xor
xchg
mov
cmpsb
mov
jb
xor
inc
inc
add
divb
loopne
push
aas
repnz
lahf
mov
add
cmpsb
lds
dec
mov
testl
hlt
xor
xchg
movl
jg
push
lea
push
adc
int
or
cmpsb
arpl
dec
sbb
push
dec
dec
push
jbe
aaa
mov
insb
pop
ret
mov
inc
mov
dec
jb
mov
sbbb
xchg
push
pop
test
pop
inc
mov
push
aam
mov
cs
and
cltd
sub
repnz
in
or
imul
and
icebp
lret
push
scas
popa
lret
sub
das
in
mov
pop
dec
or
js
lret
gs
add
xor
sub
fisubrl
xchg
lea
loopne
mov
mov
icebp
jnp
mov
mov
iret
ret
and
pop
negb
mov
dec
in
aaa
sub
sbb
ss
inc
arpl
dec
adc
pop
ljmp
add
mov
aas
call
sar
fwait
xchg
outsb
insb
outsb
and
xchg
push
xchg
lds
out
subl
mov
int3
push
inc
fisttps
imul
dec
push
test
mov
push
loop
push
cwtl
mov
repz
xchg
add
scas
repz
flds
mov
push
lock
insb
mov
xchg
orb
in
rcrb
mov
daa
push
jecxz
fimuls
pop
out
cmp
jle
jo
mov
push
mov
sbb
push
loopne
mov
loop
lahf
xchg
mov
pop
outsw
ret
pop
leave
xchg
add
mov
mov
xlat
cmp
mov
xor
jmp
add
mov
jb
jge
jge
lods
pop
xor
mov
imul
xchg
mov
inc
ds
jl
outsl
mov
or
rcll
rolb
adc
rol
or
xor
pop
mov
lret
jns,pn
add
jp
das
push
cmp
jae
add
repz
cmpsl
xor
jl
and
lea
test
mov
cmpsl
mov
mov
std
bnd
lret
xor
aad
dec
std
in
sub
inc
stos
xor
jns
cmc
test
xchg
scas
adc
je
pop
push
or
loop
loope
jae
pop
sub
cmc
adc
jb
sub
push
add
pop
jo
jp
pop
jo
pop
cmpsb
mov
add
outsl
inc
lock
xchg
push
sbb
inc
test
decb
push
mov
shlb
dec
push
sub
jnp
imul
pop
push
jmp
negl
mov
dec
dec
bound
mov
jg
add
mov
aas
call
mov
inc
sub
movsl
scas
xchg
push
shr
inc
popa
std
mov
stc
nop
inc
les
and
inc
push
imul
push
push
xor
sub
scas
push
sbb
xchg
mov
add
add
push
stc
lds
adc
adc
sbb
and
xchg
js
or
dec
mov
addl
mov
mov
movsl
fdivs
add
xor
aam
jmp
rcrl
mov
fstpl
sub
mov
pop
call
movsw
mov
or
inc
int
fcomp
pusha
dec
cmpsb
sub
cmc
push
and
mov
add
out
test
dec
mov
xchg
pop
aas
jo
outsb
dec
xchg
pushf
iret
cmpsb
cmp
fwait
stc
lds
push
inc
or
lahf
icebp
dec
mov
lea
mov
mov
cmp
push
pop
outsb
jo
hlt
dec
lea
decb
js
inc
add
imul
add
loop
mov
in
inc
xchg
mov
add
jp
xchg
insl
js
out
or
iret
lahf
in
cwtl
add
and
lret
xchg
sub
fildl
in
cld
repnz
dec
je
aam
mov
dec
mov
pop
adc
dec
xchg
outsl
sbb
jne
cli
scas
int3
jge
cmp
imulb
jo
cld
and
loopne
mov
xchg
sub
push
popf
xchg
jno
fucom
hlt
sbb
mov
sub
ljmp
mov
in
jl
jg
ret
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
les
mov
jnp
jo
jle
jo
fadds
pmuludq
jmp
test
inc
dec
xchg
sti
pusha
sub
or
shr
push
lock
add
jmp
pop
shlb
or
or
sar
pushf
test
call
sbb
shr
dec
inc
stc
js
shll
cmpsl
sbb
daa
mov
inc
pop
jnp
fmull
jl
mov
sbb
cld
adc
push
inc
lret
inc
cld
subb
push
sbb
push
mov
loope
cld
and
or
mov
push
icebp
filds
ret
mov
in
inc
scas
cmp
aad
add
repnz
and
jno
loop
bound
aas
mov
cmp
aam
decl
cmp
jg
and
lret
push
xchg
ret
lret
stc
and
cmpsl
imul
andl
lock
sbb
or
mov
popf
or
pop
jle
jne
adc
dec
pop
in
jbe
fcmovnb
and
push
aam
add
loopne
shrb
push
jbe
jle
call
dec
xchg
adc
inc
or
and
mov
test
xor
cmp
ret
xchg
pop
push
pop
sbbl
mov
ret
call
mov
adc
imul
inc
cmp
push
xor
mov
mov
imul
xchg
stos
incl
iret
and
or
or
jmp
jmp
or
popa
jl
repnz
push
aam
add
pop
mov
out
sub
into
push
adc
jne
cmpsl
int3
push
scas
jl
mov
pop
sub
mov
push
test
gs
sarl
lcall
inc
mov
pusha
mov
je
out
sahf
lea
lahf
and
movsl
mov
fistl
sub
or
hlt
mov
out
das
js
and
xchg
cli
and
jno
push
scas
shl
fdiv
or
xchg
dec
sub
jo
inc
in
mov
ret
adcb
loope
iret
push
add
add
iret
dec
inc
in
notb
and
lods
jecxz
mov
fisubrs
or
lahf
or
test
aaa
mov
scas
or
fildll
js
mov
adc
xor
cmp
fsubr
shll
add
mov
pop
sbb
nop
outsl
dec
repnz
add
xor
jmp
into
inc
pop
arpl
aad
adc
cmp
cmp
lods
js
fcoms
shr
fidivrl
push
sub
inc
push
inc
mov
je
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
adc
add
jo
mov
lcall
adc
jne
pop
sub
stos
incb
sahf
outsl
insb
ds
insb
sub
cmp
jae
sub
int
pop
nop
push
mov
xchg
mov
ja
push
sbb
and
mov
mov
cltd
fisttps
imul
subl
add
pop
ds
shlb
xchg
scas
pop
leave
dec
ret
jmp
mov
mov
or
jae
call
je
in
nop
mov
mov
mov
xor
push
cld
lea
imul
xor
outsb
out
xchg
xor
mov
js
xchg
loop
mov
mov
jp
inc
sbb
ja
cmp
and
not
jp
filds
xor
shrl
mov
push
or
sub
dec
aaa
call
repz
jns
mov
aam
seta
out
shr
push
jge
stc
cmpsb
and
fs
add
dec
divb
scas
out
xor
repz
dec
xor
mov
outsb
and
int
loopne
popf
dec
movsl
sbb
insb
inc
shll
out
push
test
repz
loopne
adc
xchg
sub
xor
stos
adc
movsl
pop
lock
enter
add
repz
fbld
xchg
xchg
inc
xor
pop
icebp
inc
fcoml
ret
jp
dec
aas
rcrl
test
decb
jg
jno
push
and
jl
sbb
mov
pop
pop
pop
and
sub
insl
in
daa
ret
cwtl
push
jecxz
jg
fdivrl
shlb
and
xchg
adc
jge
sbb
jge
and
xor
inc
test
dec
xchg
push
std
and
scas
xor
sti
push
and
movsl
mov
mov
aam
mov
cwtl
popa
jl
push
insl
push
ja
lcall
and
inc
jno
out
inc
mov
pop
pop
orl
addr16
scas
add
fwait
lods
xor
rolb
adc
pop
xchg
mov
jae
shll
pop
addr16
jo
aaa
cwtl
insl
mov
xchg
sbb
inc
pop
notl
xor
or
push
sbb
xchg
fsubs
inc
in
mov
shll
je
int
stos
inc
add
aam
lock
test
jb
fwait
insb
push
xchg
and
mov
dec
push
mov
jecxz
adcb
sub
sbbl
popa
outsb
into
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fsts
xor
jg
mov
mov
mov
adc
xor
xchg
in
push
aam
int
mov
fldenv
xchg
cli
sub
mov
sbb
jecxz
out
ja
clc
notl
mov
dec
sbb
je
fbstp
faddl
jbe
fildl
pop
scas
subb
jmp
iret
add
ds
out
ljmp
push
adc
movsb
and
xor
mov
lods
aam
pushf
dec
adc
mov
or
or
pushf
aas
popf
jg
mov
dec
outsb
addr16
hlt
inc
mov
mov
nop
pusha
push
push
jg
jge
dec
les
add
jnp
adc
cmpsl
xchg
pushf
xlat
mov
xor
js
imul
sub
sbb
dec
sub
in
adc
sbb
mov
les
sbb
mov
cmpsl
ret
push
mov
cltd
stos
dec
xchg
xor
iret
scas
sbb
mov
fcmovnu
int3
add
ds
test
call
xchg
mov
sbb
cmp
iret
adc
cltd
mov
dec
mov
scas
add
in
mov
sub
arpl
int
orb
popf
ds
pushf
push
shlb
sub
xchg
shl
xchg
push
add
jns
ficompl
imul
mov
pop
cmp
sbbl
pop
lcall
pop
and
jbe
push
mov
into
or
repnz
mov
and
or
lea
in
jmp
scas
xchg
mov
fcomps
mov
fwait
call
xchg
xchg
cs
pop
sbb
xor
jmp
or
dec
fildll
xchg
jb
xchg
fdivs
mov
inc
je
mov
push
es
mov
sbb
jle
xchg
aaa
jge
or
jmp
jg
lds
xor
ficompl
jg
mov
push
enter
sbb
imul
and
shll
test
sbb
cwtl
idivb
jb
push
pop
sbb
mov
or
or
out
orb
add
and
cmc
lods
popa
jo
mov
icebp
imul
lret
scas
xor
movsb
mov
and
and
scas
lret
iret
adc
mov
xor
repnz
dec
movsb
sub
pop
pop
mov
mov
push
fnstcw
outsl
mov
mov
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
jo
sub
add
mov
enter
popf
fistps
dec
pop
sub
aas
gs
cli
lahf
ds
out
bound
sbb
sti
movsl
adc
jmp
fistpll
clc
xor
mov
icebp
sbbb
xor
scas
js
out
imul
mov
push
mov
push
fadd
dec
into
push
movb
inc
aad
cltd
adc
sub
mov
scas
adc
add
mov
pop
dec
in
aaa
movsl
mov
jno
xabort
cli
add
test
mov
dec
popf
jno
mov
data16
cmpsb
jecxz
push
mov
cmp
pop
popl
lcall
mov
push
lahf
mov
cmc
fwait
xlat
or
je
in
mov
add
hlt
or
xchg
jl
mov
adc
adc
dec
mov
dec
dec
mov
adcl
or
lods
cmc
cmovge
cmp
mov
cmpsb
mov
repnz
fmuls
xchg
inc
pop
xchg
in
add
sub
jne
mov
mov
popa
dec
sbb
pop
addr16
stc
mov
sbb
cltd
outsb
sti
ret
stos
ficoms
stos
das
mov
jl
and
sti
fwait
or
and
mov
addr16
xor
mov
xlat
cmp
or
sahf
pop
shrl
push
std
xor
popf
jno
xor
or
pop
or
repnz
lods
mov
pop
cmp
jg
mov
cs
cwtl
xchg
and
pop
dec
out
xor
bound
int
cli
icebp
mov
mov
movsl
ss
adc
ret
lods
dec
mov
scas
xchg
xchg
add
out
pop
jae
test
dec
sbb
lahf
pop
pop
mov
xor
mov
mov
or
push
ljmp
jb
push
call
and
mov
divl
or
sbb
imulb
insl
insl
aam
push
je
cwtl
inc
scas
fistps
aam
jge
jbe
iret
push
inc
js
mov
cmpsl
sar
jb
push
cmp
push
cld
in
mov
adc
shrb
inc
xlat
xchg
xor
jo
movsl
cmp
pushf
xor
fldt
add
pushf
mov
testl
shlb
mov
inc
in
add
out
mov
or
mov
decl
sti
lods
setp
push
push
daa
hlt
jb
lea
push
sub
sbb
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
or
movq
jle
jo
pop
mov
int
add
loope
dec
in
mov
push
or
sub
inc
add
cmp
mov
outsb
cmc
shlb
push
stos
mov
je
aaa
test
sbb
xor
push
jecxz
push
xchg
gs
xchg
fcmove
aas
in
xorb
pop
mov
insl
or
cltd
mov
daa
stos
addb
xchg
fcomi
aad
or
outsl
push
int3
popa
push
push
mov
mov
or
fistpl
xchg
mov
and
out
inc
pop
aas
and
sub
pushf
mov
sub
adc
mov
arpl
jmp
sub
bound
dec
push
mov
adc
mov
add
orl
fisttpl
push
cmp
test
mov
rcll
push
push
mov
inc
out
push
or
dec
ret
dec
out
dec
xchg
or
sub
lds
flds
js
mov
loop
mov
aam
addr16
sub
mov
jl
jle
dec
pusha
pusha
negb
pop
ds
test
push
cs
add
imul
jmp
fisubs
pop
dec
xor
pop
push
sbb
jae
bound
push
call
stos
ret
test
stc
ror
int3
sub
adc
repz
push
mov
and
out
shll
inc
cmp
add
push
aas
scas
int
cmp
inc
jo
mov
fsubs
sbb
jg
stc
ficoml
cmovo
cmp
scas
xor
push
and
xchg
mov
push
push
cmp
dec
pop
insl
mov
jae
push
cmp
push
std
adc
fstpt
mov
hlt
dec
inc
addr16
out
mov
xorb
pusha
push
int3
stc
push
insb
movsl
jle
pop
sbb
mov
pop
stos
mov
pop
fstp
mov
test
arpl
or
xor
stos
mov
fwait
cmpsl
mov
call
stc
jmp
std
repz
in
nop
mov
fstpl
jmp
rorl
push
pushf
xchg
cmp
xchg
popa
stc
test
push
mov
popf
adc
subb
pop
xor
dec
adc
sub
mov
jne
xor
push
rorb
xchg
ficompl
xchg
insl
push
lret
pop
lea
sbb
sub
loop
je
cmpsl
js
pop
dec
sub
mov
call
out
xor
icebp
pop
ret
cltd
mov
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
rclb
mov
jle
jo
pop
mov
mov
jg
outsl
ljmp
jb
mov
lods
fidivrs
or
inc
jo
mov
add
lahf
popf
push
push
inc
cmp
repz
or
mov
lods
jl
inc
ss
cltd
or
js
aaa
xchg
sbb
ss
or
mov
int3
jne
xchg
push
sub
cld
push
cmp
aaa
push
lret
jmp
lcall
sahf
int3
sti
lahf
jne
lock
inc
stos
jp
cmp
outsl
fs
and
int
loop
jecxz
shll
jle
sbb
lods
jbe
xor
add
ljmp
xor
cmp
pop
jb
insl
aaa
or
mov
xor
inc
lret
std
in
aas
mov
rorb
rolb
xor
pop
jns
mov
jae
idivb
cs
mov
lods
clc
pop
push
push
xchg
js
aas
sub
cwtl
insl
xor
fidivrl
imul
popa
xchg
addl
and
mov
repnz
and
jge
or
xchg
fimuls
cmp
push
sub
arpl
es
icebp
iret
stc
sbb
fdiv
mov
cmpb
fildl
ja
outsb
jp
loopne
xor
sbb
add
iret
dec
sahf
fstpl
aam
mov
rcrb
jno
movsb
xchg
ja
add
cmpsb
les
aad
sar
mov
or
or
xchg
and
add
push
and
and
dec
push
push
pop
clc
hlt
cmp
jo
scas
jg
sbb
inc
jp
out
pop
clc
mov
sahf
out
cmpsb
jb
or
call
mov
xor
shrb
andb
inc
ror
adc
add
sbb
push
push
test
mov
mov
leave
popf
je
ljmp
clc
push
imul
or
push
aad
cmp
push
or
pusha
loopne
gs
mov
xchg
lods
lods
es
in
fsubr
icebp
divl
in
neg
and
jmp
cmp
mov
gs
rcl
dec
pop
pushf
cmp
repnz
pop
push
aas
enter
mov
and
or
xor
cmpsb
sti
test
int3
push
sub
aad
inc
mov
popf
pop
xchg
jne
cmp
mov
add
pop
cmpsb
or
in
pop
or
test
rcrb
cmpsb
or
shr
add
fld
cli
push
loopne
pushf
mov
xchg
pusha
xor
mov
sub
mov
push
xchg
stc
jbe
adc
inc
cmp
mov
scas
out
nop
sbb
xor
pop
testl
fildll
jge
mov
mov
jmp
dec
fistpll
arpl
pop
jp
mov
ss
orl
jo
pop
push
scas
or
andl
push
mov
call
lahf
pop
mov
and
mov
mov
cli
jne
adc
fidivrl
add
sahf
xor
and
or
cmpsl
into
inc
testb
ret
jne
ja
jno
jg
bound
aas
int
jno
popf
sbb
xchg
mov
jne
sub
lret
fstl
mov
push
xchg
dec
mov
arpl
adc
test
or
out
pop
push
sbb
mov
jnp
or
subb
shll
xorb
lds
or
pushl
push
popf
fcoml
add
ss
icebp
sub
stc
mov
jae
xchg
cmpsl
xchg
addr16
lods
nop
xchg
fwait
push
out
mov
faddl
pop
mov
sbb
or
mov
data16
and
notb
mov
in
jle
mov
mov
mov
push
inc
mov
sub
cmp
loope
pop
mov
js
cmpb
pop
cld
push
jb
test
test
aam
enter
shrl
mov
popa
addl
leave
cmp
add
cmp
dec
out
push
movsb
push
ss
xor
cld
jl
aaa
push
mov
mov
inc
pop
sub
nop
stc
inc
jbe
push
daa
clc
jno
mov
xchg
arpl
paddw
push
fs
dec
push
ljmp
loop
mov
lret
out
in
fcmovb
xor
jne
xor
fstps
push
jg
jmp
pusha
test
dec
inc
add
clc
shl
cmc
lahf
sbbl
addb
lret
pop
in
jne
xor
sahf
in
adc
fnsave
loope
sub
imulb
outsl
or
shl
repz
xor
dec
sbb
jge
ja
rorl
sbb
xor
popf
in
jp
xorb
jne
sub
sbb
inc
push
push
ss
mov
enter
push
push
cvtps2pd
loope
mov
xorl
lods
lods
adc
in
jmp
sub
jo
ffreep
and
adcl
mov
pushf
movsb
test
clc
adc
sub
aad
ret
pop
push
lcall
pop
push
push
and
fimuls
icebp
mov
shrb
out
dec
xchg
shrl
and
lahf
insl
push
xor
inc
rcrl
push
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
das
mov
jo
jle
jo
int
inc
test
add
mov
sub
dec
inc
lcall
pop
inc
xchg
dec
xchg
mov
mov
and
int
js
pop
sub
pop
xchg
jb
push
sbb
imul
sub
arpl
test
clc
mov
mov
popa
jecxz
mov
cmp
push
add
pop
fisubrs
sti
jb
test
adc
pop
outsb
data16
xlat
int
jnp
pop
int
inc
mulb
dec
mov
test
adc
negl
sub
xchg
fsubp
mov
push
test
int
movsl
mov
lds
push
repnz
lahf
mov
and
loop
xchg
das
popf
cmp
mov
xchg
pop
sub
adc
mov
shll
out
xor
stc
or
aam
into
sbb
xchg
lea
push
cmp
pop
push
hlt
loop
lods
push
cmc
xor
jnp
fnop
mov
push
mov
inc
imul
fcompl
mov
icebp
add
shrb
loopne
jp
out
xchg
mov
jno
in
sbb
pop
pop
xor
test
inc
sub
std
js
and
out
xchg
jge
or
xchg
pop
int3
aam
hlt
cwtl
fstl
loopne
jo
out
mov
ss
xchg
fstp
sbb
cli
ficompl
sub
push
mov
push
test
dec
inc
aad
or
xchg
imul
dec
or
inc
mov
std
sbb
loop
jle
lea
sub
xchg
pop
push
sbb
pop
stc
pusha
adc
lret
leave
scas
or
pop
outsb
call
andl
jmp
daa
jno
jmp
xchg
pop
test
cwtl
inc
sub
push
xchg
or
pop
push
xor
xlat
push
in
sarb
fstl
in
inc
data16
xor
pop
mov
test
loope
xchg
jecxz
pusha
adc
push
les
fisttpl
mov
jl
movsl
pusha
std
adc
fcompp
nop
sbb
jecxz
jae
in
inc
mov
pop
or
pop
mov
idivb
lock
sarb
loop
addl
aas
outsl
lea
aaa
aas
sbb
cmp
std
cmp
xor
fwait
xchg
outsb
test
pop
sbb
addr16
scas
addr16
scas
pop
xchg
data16
inc
pop
jns
push
inc
xchg
adc
mov
lock
dec
insb
lods
outsl
cli
jle
orb
pushf
jb
add
enter
icebp
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
sub
mov
jge
mov
sub
adc
out
mov
push
mov
lods
je
ljmp
aam
in
scas
push
mov
add
or
sub
nop
sub
xor
sbb
pop
stos
push
sub
inc
stc
stos
in
cltd
add
sub
cmp
lret
cli
das
rcrl
fidivl
mov
fwait
in
repz
lahf
push
out
test
imul
das
repz
movsl
imul
int3
shll
xchg
push
adc
add
pop
daa
out
adc
das
or
xor
and
push
bound
mov
mov
cmp
je
or
xor
mov
stos
inc
lods
pop
add
xorl
leave
xlat
lock
mov
lahf
pop
jae
and
add
pop
fisubs
cmp
add
or
mov
xchg
push
inc
fs
jmp
cmp
jne
loop
sbb
pop
imul
fmull
inc
inc
push
ljmp
ret
mov
and
push
or
add
add
or
jbe
jbe
mov
mov
hlt
sti
adc
cmpsb
test
lods
stos
in
es
pop
notl
mov
in
leave
rorl
mov
mov
mov
repnz
popf
sti
add
jno
sub
adc
mov
jb
adc
fisubrl
int3
push
cmc
iret
sbb
ds
jle
dec
xor
mov
lcall
arpl
jne
or
stc
imul
pop
addr16
jns
and
dec
and
lods
jne
decb
jo
and
lea
push
mov
dec
mov
push
push
fwait
das
test
jb
fisubrl
lcall
sbb
push
adc
jne
xor
imulb
repnz
mov
stc
ret
pop
in
jnp
cmpsl
push
xchg
nop
subb
jbe
nop
loopne
ss
stc
mov
fildl
xor
push
push
shll
xor
cli
scas
cltd
and
fdivs
sbbb
in
fisubl
mov
xchg
adc
dec
ret
mov
add
jne
adc
movsb
imul
repnz
push
fldl
xor
lahf
sbb
mov
dec
mov
sub
popa
xchg
decb
mov
stos
xor
and
mov
push
fsts
nop
dec
inc
and
pop
xchg
mov
pop
xlat
mov
add
sbb
mov
rcrl
and
mov
push
cmc
dec
nop
xlat
inc
out
mov
xor
push
pop
rolb
hlt
jge
mov
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
sahf
imul
adc
mov
mov
inc
mov
stos
sbbb
push
sbb
sbb
loop
cmc
sbb
xor
add
dec
cmpsl
cmpsb
fmull
les
sub
push
in
movsl
out
into
xchg
loop
sub
iret
jmp
cmp
fstl
mov
stos
call
xchg
xor
inc
mov
and
mov
mov
push
xchg
lahf
xlat
int
dec
cmp
push
and
cmp
in
or
sub
test
fsubl
or
pop
xor
fsubs
test
mov
lret
pop
adc
leave
dec
test
in
push
fsubrs
inc
lods
cmc
repnz
test
and
xor
andb
outsb
sbb
stos
cld
pop
mov
inc
test
mov
es
cmp
loop
cs
sbb
or
or
xchg
xor
mov
stc
adc
push
mov
je
shll
xchg
fdivs
add
or
ds
ja
dec
mov
ret
mov
addr16
outsb
jno
scas
mov
cld
or
inc
pop
and
out
dec
int3
mov
je
orb
xchg
add
pop
pop
pop
fiaddl
mov
add
lret
xor
xchg
stos
outsl
mov
loopne
fwait
xchg
mov
jle
sbb
xchg
push
addr16
or
lods
jb,pt
into
pop
faddl
fnstcw
imul
nop
outsb
and
sub
xor
pop
push
mov
ficoml
adc
cmpsb
lods
js
or
jbe
and
xor
sub
outsl
push
adc
scas
xor
std
pop
stos
inc
and
enter
imul
test
mov
int
rcll
out
nop
subl
repz
inc
vpavgw
add
mov
xlat
cli
mov
inc
ja
xchg
fidivrl
cmp
or
imul
mov
push
popf
lcall
dec
cmpsl
rcrb
adc
sub
out
ss
lcall
pop
jae
int
jecxz
lret
jae
adc
adc
xor
pusha
dec
enter
mov
aaa
cld
mov
addr16
popl
mov
adc
xchg
adc
les
sbb
sbb
and
jns
jnp
mov
inc
mov
dec
dec
hlt
and
xor
push
filds
add
cmc
std
fs
jno
mov
cwtl
repz
and
jle
jo
and
std
fwait
push
enter
push
mov
popf
ds
push
nop
inc
add
fcmovbe
bound
mov
jno
mov
add
into
and
jg
add
xchg
data16
jno
lods
mov
cmp
loop
jb
int
filds
in
jnp
cmp
lds
mov
pushf
scas
es
mov
addr16
out
icebp
mov
clc
fwait
xchg
adc
jnp
call
xchg
gs
jne
adc
jg
imulb
xchg
pop
in
pop
adc
loope
sbb
decl
addr16
loope
out
jno
fists
xor
mov
add
lahf
and
sub
decl
pop
lods
xchg
icebp
arpl
leave
aas
jnp
pop
xor
mov
lcall
sbb
ja
sub
adc
lods
xor
xor
jl
adc
mov
mov
mov
rorl
das
int3
cltd
insb
test
jns
dec
lods
lock
lahf
xor
dec
les
stos
sti
nop
cmc
mov
or
insb
jae
cmp
jae
jl
adc
pop
outsl
push
addr16
roll
cmp
pop
sub
inc
xchg
pop
cwtl
pusha
push
std
ss
xor
push
adc
sub
ja
test
scas
loope
dec
cld
or
cmpsw
pusha
test
push
adc
push
insb
sbb
std
push
mov
xchg
pop
lods
insb
sub
cld
pop
jnp
dec
jno
and
mov
into
inc
push
repnz
stos
xchg
subb
mov
push
fs
push
mov
jge
xchg
clc
cmp
fdivrp
xor
into
jb
sahf
sbb
hlt
mov
into
mov
ror
or
add
vhsubps
xor
add
ja
pop
pushf
mov
leave
in
stos
push
add
pusha
or
mov
mov
push
cmp
or
es
or
rcll
lds
and
fwait
dec
iret
jge
loopne
mov
js
inc
ds
movsb
test
add
sub
gs
pop
mov
rolb
popa
cmp
jno
ficoms
lea
insb
inc
loop
fwait
movsb
mov
test
std
adc
sbb
xor
and
xchg
sub
sahf
mov
loopne
sub
icebp
subb
in
push
and
mov
jb
mov
jp
lret
ss
jp
andb
gs
outsl
int
mov
and
jge
jb
cmp
ror
js
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
outsl
xor
out
sbb
jo
jle
jo
and
jp
or
cmc
fs
popa
aad
mov
ljmp
mov
cmp
inc
insl
pushf
jno
pusha
sub
sub
mov
mov
or
mov
les
or
in
pop
sub
nop
jmp
sbb
rcrl
jl
push
test
jp
xchg
mov
inc
sbb
popa
add
jge
stos
arpl
cli
push
jmp
fbstp
xor
jle
inc
and
daa
ja
sub
inc
shrb
sahf
adc
add
pop
sbb
mov
imul
sbb
add
xchg
or
dec
shrb
push
dec
bound
inc
pminsw
mov
xchg
mov
dec
sub
push
out
sbbl
mov
arpl
ljmp
jo
push
das
inc
loope
jnp
insl
adc
cmp
in
sarb
jmp
ss
mov
xor
xchg
cmpsl
in
out
push
pushf
xchg
jo
aam
mov
fdivp
ret
jne
hlt
sahf
movsl
pop
sbb
mov
xor
and
test
xchg
pop
jns
xor
pushl
outsl
lock
and
jmp
mov
scas
fwait
jg
ret
lret
cmp
cltd
leave
push
ja
mov
sub
iret
mov
lds
dec
jl
sub
mov
sub
push
loop
inc
hlt
movsb
int3
dec
pop
loope
icebp
jns
out
sar
cwtl
in
ret
sahf
imul
jae
jb
xor
aaa
mov
or
jmp
dec
sub
pop
das
enter
xlat
push
sbb
decb
loop
mov
push
mov
cmpsl
mov
aad
or
mov
dec
sub
mov
out
pop
inc
push
jb
sub
mov
add
xor
xchg
bound
sbb
dec
movsl
mov
or
lds
pop
and
fiadds
sub
mov
sti
dec
sbb
pop
or
mov
mov
rcll
mov
and
push
test
add
push
jecxz
inc
bound
idivb
aam
push
movsb
adc
dec
sahf
ss
or
fistpll
mov
data16
push
xor
inc
inc
stos
ss
inc
int3
addl
div
daa
pop
add
das
xchg
out
cld
lods
mov
or
dec
mov
jno
dec
outsb
jbe
sarb
push
or
mov
cli
xor
mov
fadds
push
scas
dec
fcomps
cmpsb
iret
mov
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
mov
sbb
mov
push
sub
xchg
ja
aaa
pop
sbb
mov
lea
pop
js
movsl
pop
mov
add
sub
or
push
pop
jp
outsb
lret
fdivp
pushf
addr16
pop
sbb
xor
push
adcl
add
add
je
pushw
outsl
xchg
call
jg
adc
xor
into
or
adc
mov
xchg
in
int3
push
pop
dec
sbb
mov
lret
inc
inc
xchg
popa
or
jecxz
jb
fldt
xchg
xchg
sbbl
clc
ja
add
xor
lahf
add
test
pop
orb
fs
jecxz
add
sub
pop
xchg
sti
iret
xchg
aas
icebp
shlb
in
mov
add
int3
into
sbb
lsl
addr16
add
or
movsl
es
out
jmp
out
add
in
mov
inc
adcl
clc
mov
cmpsl
es
leave
dec
fwait
sbb
test
sub
arpl
popa
dec
push
and
je
aad
ds
repnz
sbb
imul
xor
and
add
loopne
mov
xor
add
fcomip
das
nop
lods
cmpsb
jg
sbb
fdivr
mov
clc
xor
sub
test
test
or
call
mul
jns
xor
jo
cmp
loopne
les
fiaddl
test
mov
and
mov
sti
xor
shrl
cmp
or
repz
into
shrl
les
subl
ret
fs
daa
mov
mov
pop
fbld
xchg
jl
popa
into
not
push
adc
mov
jne
mov
sub
sbb
fs
test
dec
shlb
push
xor
gs
and
mov
xchg
add
or
adc
std
mov
into
jg
xor
sub
insl
repz
push
sbb
out
push
jno
push
and
or
movsl
pop
push
jmp
dec
push
and
mov
and
jo
hlt
pop
jnp
bound
outsl
and
add
test
sahf
mov
xchg
jns
pusha
cwtl
loope
push
adc
imul
mov
rolb
dec
sub
adc
xor
repz
xor
inc
jmp
aam
pop
clc
mov
cs
cmc
popf
andl
jecxz
dec
mov
rcrl
aaa
movsl
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
dec
pop
ret
les
jg
mov
jnp
and
push
aaa
adc
cmc
add
ss
mov
jo
jnp
adc
sbb
or
mov
jg
lahf
jle
roll
cltd
xchg
addl
mov
xchg
add
dec
cmp
sbb
mov
out
or
sbb
mov
mov
scas
orl
xor
mov
mov
test
inc
ror
imul
fnstenv
cld
adc
cwtl
mov
push
jo
cwtl
or
xchg
into
and
ja
jb
mov
pandn
push
inc
or
push
std
sbb
dec
incl
int
outsl
lea
sbb
xor
xchg
les
mov
ret
mov
scas
repz
outsb
std
aaa
cmp
lret
xor
ret
decb
out
adc
iret
lahf
daa
push
dec
xchg
in
jl
sbb
ljmp
mov
xchg
pop
ja
mov
imul
mov
test
imul
addr16
orl
mov
movsb
sarb
pop
inc
lds
cld
pop
dec
fadd
or
rorb
dec
push
pusha
ror
mov
aam
loope
and
mov
jbe
sub
push
dec
jmp
dec
xor
je
mov
sbb
dec
popf
pop
movsb
stos
daa
fisubrs
push
clc
push
jecxz
or
xchg
pop
nop
adc
nop
rcrl
mov
ljmp
sarb
mov
icebp
in
cwtl
hlt
push
lods
clc
adc
hlt
out
lret
sbb
jo
adc
les
xchg
xchg
sbb
sub
dec
lds
jecxz
fistps
mov
sbb
and
mov
mov
xchg
xchg
sbb
cli
jae
mov
stos
or
lods
negl
aas
jns
dec
leave
scas
movsb
ljmp
psubsw
adc
and
lea
adc
add
ret
mov
out
pop
inc
jmp
xchg
aas
out
jns
in
jne
mov
push
jecxz
push
inc
pop
mov
into
cwtl
aam
and
mov
vmread
ja
stos
mov
mov
dec
inc
leave
sbb
int3
sbb
into
mov
stc
mov
or
popf
icebp
stos
bound
std
push
push
icebp
cmpsb
xchg
add
subl
ror
popf
ret
pop
xchg
jns
mov
mov
ja
mov
rcrb
xchg
ljmp
in
cmp
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
jb
and
jo
jle
jo
inc
lods
sub
movsb
push
jl
dec
push
jp
push
mov
push
test
sarb
pop
cmp
addb
cmp
lods
mov
mov
pushf
sti
fstpt
jo
popa
test
dec
pushf
dec
in
sbb
cli
shrb
clc
movsl
sub
rol
cmp
mov
fstpl
pushf
in
insb
push
jo
jmp
push
mov
out
rorl
fcomi
rolb
icebp
outsl
aam
rcl
ret
stos
fiaddl
enter
add
ficomps
inc
xor
jns
and
jl
je
inc
outsl
and
ljmp
icebp
test
xor
loop
dec
push
lahf
arpl
jp
jno
and
sbb
test
cmp
or
gs
inc
dec
scas
pop
and
fs
and
roll
cmpb
shll
inc
mov
pop
mov
add
lds
popa
push
inc
dec
ss
addr16
xchg
lods
rcl
inc
jbe
stc
xlat
ja
lea
pushf
mov
add
jge
shll
xchg
ds
mov
push
shr
and
or
gs
fwait
test
lods
lods
mov
cmp
fwait
mov
xor
mov
movsw
inc
mov
not
lret
or
jb
or
lods
dec
ror
and
mov
mov
mov
cmp
and
or
xchg
mov
jmp
dec
xor
cmc
xor
int3
imul
dec
dec
lret
add
test
div
push
fidivl
popf
inc
dec
or
out
ds
xor
and
mov
lcall
lock
cmp
jmp
leave
rclb
int3
mov
and
xor
push
mov
pushf
in
push
lds
xor
pop
push
sub
pop
or
cmp
rol
pop
push
fsubr
addr16
leave
inc
bound
gs
mov
addr16
fsubl
cmp
and
testb
les
test
push
ss
inc
cmp
pop
mov
pop
jne
cmc
jp
add
fnsave
in
bound
stc
in
roll
clc
movsl
mov
inc
rol
movsl
dec
jbe
test
jecxz
jge
sub
add
pop
add
sbb
movsl
test
pop
mov
inc
jo
dec
mov
das
or
xchg
pop
test
xchg
jl
pop
dec
insl
and
adc
enter
hlt
push
pusha
sbb
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
