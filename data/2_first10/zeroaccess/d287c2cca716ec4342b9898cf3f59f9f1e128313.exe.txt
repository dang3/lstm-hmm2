push
mov
sub
mov
jmp
incl
shlb
fs
sarl
jle
jg
jle
xlat
cmp
ror
pop
add
or
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
sub
sub
stc
pop
stc
mov
mov
mov
jnp
jno
clc
ja
pop
into
mov
jp
jmp
mov
xor
daa
and
jecxz
adc
ss
mov
daa
fsts
cld
loop
lock
push
sub
mov
imul
add
adc
aad
or
jno
xor
sub
inc
push
jecxz
mov
pop
adc
cltd
push
mov
cmpsl
jp
movsl
push
push
mov
sub
xchg
enter
sub
mov
std
jecxz
lret
pop
rorl
adc
xor
icebp
jno
add
jae
mov
inc
xlat
add
fwait
iret
inc
xor
jecxz
sbb
xor
daa
push
cmp
scas
xchg
push
dec
popf
xchg
das
ret
fmul
mov
lret
sbb
lret
push
popa
jmp
rcl
loope
add
pop
cmpsl
ss
loope
mov
xchg
jle
inc
iret
in
inc
loopne
cmp
add
fadd
dec
add
cmp
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
out
sub
xor
imul
and
adc
cwtl
jg
jle
jg
jle
hlt
dec
mov
mov
hlt
mov
add
or
outsl
stos
add
cmp
pushf
xor
inc
jecxz
and
mov
test
or
fmulp
int3
test
pop
es
add
ret
dec
das
mov
push
es
dec
mov
cmp
mov
xabort
add
ds
je
pusha
gs
out
pop
lret
pop
sbb
ja
mov
xchg
xchg
pop
xor
and
ljmp
mov
add
int
lahf
pop
aas
xor
jnp
setae
scas
addr16
aad
mov
mov
pop
adc
mov
add
mov
dec
insl
pop
mov
xorb
mov
add
loopne
and
and
fidivl
aam
ds
and
shlb
loopne
and
in
mov
pop
dec
mov
ja
call
mov
pop
xor
pop
pop
xor
std
cmp
push
mov
mov
into
inc
popf
fstps
jg
addr16
adc
xor
xchg
jbe
inc
mov
loopne
mov
call
xchg
pop
pop
cld
mov
and
push
mov
pop
inc
xchg
aas
mov
jbe
dec
push
sti
add
dec
out
jmp
xchg
add
push
xchg
in
ss
sbb
arpl
popa
push
clc
cwtl
popa
fstl
jl
xorb
push
ja
mov
sub
dec
subb
add
add
xor
movzwl
or
mov
jmp
adc
insl
xchg
jo
or
adc
cwtl
jg
jle
inc
mov
push
push
jg
sbb
pop
insl
xor
out
aas
xchg
dec
test
js
jmp
mov
lcall
push
psubb
mov
clc
dec
inc
jl
daa
sub
cmp
fisttpl
mov
mov
mov
jns
fbstp
push
out
sub
pushf
out
pusha
in
mov
mov
xchg
dec
in
xchg
test
out
dec
pop
repz
pushf
inc
or
mov
dec
pop
scas
pop
insl
xchg
adc
stos
int
negb
cli
lret
arpl
mov
add
data16
mov
in
inc
xor
mov
jle
clc
or
cltd
xchg
std
inc
cmc
or
and
mov
or
xlat
inc
mov
sub
ret
jb
cmp
adc
inc
mov
std
fdivrs
pop
jge
pop
xor
clc
pop
into
push
int3
and
pop
dec
sbb
dec
fldt
icebp
jle
pop
test
xor
pop
jl
cmp
and
jp
mov
mov
mov
xchg
cli
sbb
xchg
stos
stos
mov
xchg
jno
xchg
movsl
mov
fcomi
add
pop
adc
insb
and
jge
sub
mov
xor
mov
loop
adc
mov
mov
sbb
xchg
repz
cli
call
dec
xor
mov
fmull
push
lock
in
gs
adc
or
dec
outsb
lcall
sbb
dec
push
test
stos
rcrb
lock
arpl
and
sbb
and
jmp
push
and
pop
xor
jno
cmpsl
cmp
push
imul
insb
jp
jle
jg
jle
adc
add
arpl
shlb
fcoml
push
pop
adc
jae
sbb
setg
add
mov
cwtl
rcrl
mov
scas
mov
in
xor
rcrl
add
pop
sbb
adc
outsl
sbb
daa
inc
cli
mov
aas
cld
jmp
or
xor
test
mov
les
pop
and
lds
cmp
outsb
mov
dec
int
das
inc
jb
inc
add
js
inc
jne
loop
test
add
adc
loop
mov
or
xor
rcr
sahf
loope
insb
sahf
adc
unpcklps
sub
jae
loope
and
or
inc
int
pop
mov
cmp
add
fstpl
jns
jmp
jge
dec
push
inc
fnstsw
cmc
outsb
scas
jnp
cmc
test
adc
testb
cmpsb
cmpsl
inc
aad
ljmp
imul
mov
int3
jle
xchg
mov
sub
lods
mov
or
js
aas
in
and
int3
clc
pop
or
dec
lods
mov
inc
push
std
loopne
inc
rorl
sbb
int3
cmp
test
lods
sub
enter
fistpll
pop
sub
sbbb
mov
push
or
dec
adc
popf
push
cmpsl
arpl
fdivrs
mov
out
add
sbb
jb
mov
mov
lret
pop
cmpsl
outsl
add
mov
push
pusha
mov
add
movl
movzwl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
sbb
not
and
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
sbb
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
mov
mov
movl
movl
mov
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
jmp
movl
popa
movsl
ja
and
xchg
js
jle
jg
jle
add
push
adc
inc
sub
loope
adc
hlt
jg
leave
xor
aas
adc
sub
inc
out
sbb
xchg
fdivrl
adc
lods
pop
mov
cmpb
int
cltd
jnp
jnp
sahf
cmpsl
ja
jo
or
into
push
push
insb
jg
ret
pop
outsl
out
xchg
and
es
xchg
addl
out
cmpsb
pop
dec
cli
andb
pop
fcomip
jmp
or
xchg
inc
pushf
xor
fs
or
movsl
stos
sahf
xor
ret
repz
or
mov
dec
and
in
cwtl
jns
filds
mov
aad
iret
mov
xchg
add
add
push
xor
mov
xchg
add
addr16
push
aam
add
popf
or
stc
scas
pushf
push
cmpl
rorl
pop
repz
fcompl
jle
icebp
inc
fists
out
ret
pop
or
push
cli
int3
mov
scas
xchg
mov
data16
lcall
sub
test
mov
shlb
mov
xchg
adc
stc
and
test
mov
ftst
imul
or
mov
inc
call
outsb
xor
or
inc
xor
dec
mov
lret
mov
inc
xor
int
out
into
sti
int
cmpb
jg
cmp
lods
dec
xchg
sti
push
or
and
and
mov
inc
hlt
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
das
adc
inc
icebp
inc
mov
test
and
fdivrs
adc
push
jle
cwtl
jg
jle
mov
cs
pushf
cmc
outsb
add
dec
mov
rorb
mov
or
xchg
mull
ja
adc
lcall
add
xor
add
mov
lock
add
in
jmp
add
sahf
push
shlb
xor
xchg
jecxz
fnstsw
push
ja
lods
nop
xor
repz
jnp
movsl
mov
push
jmp
mov
pushf
insl
daa
ds
movsb
lea
fwait
rcrl
and
pushw
sti
push
pop
cmp
ljmp
mov
decb
ficomps
mov
push
in
sub
or
inc
cmc
sarb
scas
add
push
ss
rorl
loop
sbb
ret
dec
aad
push
std
bound
fsubs
or
into
mov
cmc
les
bound
inc
dec
cs
sbb
adc
std
pop
hlt
pop
xchg
test
in
loop
das
loop
xchg
cmp
pop
pop
fs
mov
dec
mov
cmp
gs
in
pop
out
or
faddl
inc
lret
pushf
ds
js
gs
movsb
jl
adc
jg
out
push
test
divl
loope
xchg
out
mov
dec
das
mov
push
mov
push
sar
ss
xlat
sbb
pop
ret
cmp
sub
cld
xor
iret
add
cli
mov
jnp
in
jge
ljmp
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
jmp
mov
lcall
cli
pop
xor
cwtl
jg
jle
ja
dec
mov
pushl
clc
int
xor
mov
cmpsb
test
dec
test
mov
sbb
jmp
inc
pop
mov
cmp
lds
arpl
and
dec
cmpl
push
rsqrtps
test
jno
fnstcw
gs
ljmp
and
lret
mov
cmp
cmp
mov
inc
out
jae
cmc
fadds
xor
pop
pop
cltd
mov
filds
shll
sahf
jecxz
lret
lock
pop
dec
bswap
inc
fisttpll
cmp
xchg
xchg
mov
movsl
dec
lret
int
and
daa
out
int3
lret
xchg
adc
ss
fmuls
mov
inc
mov
in
leave
mov
test
int3
sub
rorl
icebp
add
push
lea
xor
fldl
push
and
fisttpll
jbe
xchg
mov
mov
jne
or
outsb
mov
add
sti
cmpsl
dec
mov
in
mov
mov
ret
mov
push
mov
addr16
pop
in
aad
fistl
pop
dec
push
js
or
inc
push
inc
mov
jl
pushf
rcrb
das
lret
add
stos
mov
dec
movsb
and
imul
jns
push
and
fwait
jnp
push
pop
adc
les
or
add
arpl
addl
data16
mov
hlt
out
mov
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
outsb
jecxz
mov
jne
add
movsb
sbb
ja
add
jle
cmc
insb
cli
test
xchg
jnp
mov
adc
jmp
fsts
ret
shll
and
int
adc
movsb
adc
cmp
sub
or
or
push
cmpsl
cmpsb
jle
and
iret
xchg
call
dec
test
cmc
stos
outsb
cli
mov
and
ds
les
add
push
gs
mov
daa
negl
cmc
loopne
push
mov
test
nop
adc
sbb
js
aad
outsl
add
xchg
ja
cwtl
push
mov
dec
add
inc
push
cmp
pushf
pop
adc
repz
stc
xchg
or
xor
or
rolb
popf
and
les
jno
stos
ficoms
nop
lahf
enter
adc
ret
add
sbb
dec
push
mov
push
cmp
add
or
pop
negb
mov
outsb
pop
cmp
push
mov
outsb
andb
lods
sahf
repnz
icebp
in
lods
mov
push
push
xchg
adc
or
rorl
xor
dec
or
scas
xchg
cmc
test
fs
mov
jne
pusha
pop
xchg
jmp
adc
aas
xor
push
cmpsb
push
int
mov
stc
and
fsub
fwait
jmp
pop
adc
pusha
dec
dec
scas
insb
pop
loop
es
mov
clc
movsb
inc
mov
mov
add
mov
je
iret
push
pop
mov
std
movsb
fmulp
dec
push
int3
push
adc
js
dec
jl
pop
or
imul
and
mov
dec
push
test
jmp
aas
push
lret
in
shl
repnz
repz
jb
mov
dec
pslld
jb
add
cld
xor
stos
add
outsl
in
inc
add
add
add
add
adc
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
adc
jmp
je,pt
cltd
mov
out
sub
mov
mov
add
push
jg
jle
fwait
repnz
sbb
lret
fisubl
ja
cmc
inc
aaa
outsl
outsb
mov
cmp
push
ds
orb
pop
outsb
pop
je
mov
rolb
outsl
daa
shr
sub
inc
adc
bound
xchg
mov
pop
and
inc
inc
mov
andb
pop
les
or
in
sarb
imul
xor
adc
xchg
mov
scas
mov
ljmp
mov
mov
mov
rorb
out
pop
popa
xchg
sbb
or
insb
jle
mov
pop
fnstenv
cmp
xchg
xor
jg
jl
sub
fsubs
xchg
jge
fbstp
add
inc
mov
xchg
jns
lea
mov
cld
or
and
jecxz
mov
scas
mov
movsb
lods
cli
in
jo
scas
add
xor
mov
aaa
test
mov
mov
xchg
push
jp
shrl
sub
dec
add
and
mov
inc
xchg
test
adc
mov
sub
xor
jnp
stc
push
leave
pop
xlat
in
or
int
mov
pop
das
mov
insb
scas
sarl
movsb
mov
pop
aas
mov
cmp
and
push
loop
rcll
push
add
sti
xchg
jge
sub
roll
xchg
enter
add
or
rolb
mov
sti
sub
inc
into
repz
sub
cmp
mov
popa
daa
and
adc
into
push
in
in
jl
es
insl
xchg
jns
inc
push
stc
fstpl
push
leave
sti
mov
adc
rorb
andl
mov
movzwl
xor
mov
mov
xor
movl
mov
addl
push
mov
xor
or
and
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
lock
xchg
aaa
insl
fs
rcll
add
push
jg
jle
mov
sbb
cli
dec
inc
jg
fcomps
cs
div
lock
cltd
or
fstp
push
xchg
push
inc
cmp
hlt
shll
test
dec
popa
xor
jmp
lahf
int
lahf
adc
mov
mov
iret
insl
movsl
mov
mov
into
addr16
test
cmp
push
ja
inc
lods
push
decl
out
sub
and
dec
ja
dec
pop
mov
mov
nop
insl
test
jmp
push
sub
out
aaa
sub
mov
and
ja
cs
in
outsl
fiaddl
sub
inc
test
sbb
adc
pop
xchg
roll
addb
popa
pop
or
add
es
jp
add
or
adc
loop
fcompl
jmp
push
pop
gs
push
mov
or
push
sbb
lock
insl
mull
cmp
out
add
xor
hlt
jecxz
dec
das
jb,pt
mov
xchg
cmpsl
outsl
cmp
test
stos
pop
xor
mov
xchg
sub
rolb
mov
pop
xchg
pop
idivb
xchg
mov
scas
lahf
pop
or
sbb
nop
xchg
xor
sti
pop
rclb
push
mov
mov
mov
out
cwtl
jl
inc
jge
and
rcrb
push
or
popa
out
xchg
mov
popa
outsb
mov
cmp
dec
stc
repz
dec
gs
repnz
filds
cmp
out
cmpsb
cmp
add
or
fcmovbe
dec
sub
popf
bound
cld
cs
jbe
flds
adc
popf
hlt
mov
dec
push
cmp
popf
test
and
push
add
push
cmc
fsubr
mull
pop
push
mov
add
cmp
je
mov
mov
xor
mov
sub
jmp
insb
cmp
arpl
push
xor
dec
es
jle
jg
jle
mov
mull
cmp
xchg
add
pop
in
int3
push
out
lret
daa
xor
rcll
or
fdivrl
lds
pop
sub
out
pop
jnp
setns
pop
pop
adc
sub
dec
mov
xchg
inc
dec
shrl
sbb
xor
lcall
dec
stc
test
stos
pop
push
clc
test
fmuls
or
daa
xor
xchg
int3
push
scas
outsb
jg
ja
push
lods
sbb
scas
adc
out
jge
and
popf
shr
jmp
sub
jno
fadd
outsb
pushf
and
xchg
jg
sbb
xor
pop
dec
mov
or
dec
sahf
data16
dec
cmp
or
xchg
movsb
stc
pop
adc
mov
cmpsb
fsubrs
movsb
imul
sbb
inc
sti
ss
lock
cmc
in
push
je
or
jle
fisubrl
push
int3
int3
rclb
xor
hlt
cmc
sub
pushw
aad
stc
ja
call
jge
mov
pop
push
rclb
rcrl
lahf
push
xadd
mov
mov
mov
aam
flds
fdivrl
int3
xchg
popa
fsts
add
lods
adc
adc
loop
sbb
addl
or
mov
and
mov
testl
mov
in
adc
dec
dec
das
cld
xchg
pop
pop
in
cmp
notb
lahf
jge
rorl
ror
shll
mov
mov
push
push
enter
ss
push
daa
scas
movsb
pop
adcb
cltd
das
or
ss
and
jo
cmp
jbe
je
addb
adc
roll
cmp
ja
push
jmp
mov
mov
mov
jmp
lock
xor
jo
repnz
pop
mov
mov
push
jg
jle
arpl
out
sarb
or
adc
xor
in
push
pop
or
lods
push
push
lahf
sahf
add
adc
pop
fiaddl
sbb
or
xchg
sahf
jns
mov
mov
xchg
add
mov
add
inc
imul
pop
push
das
lret
lret
jno
popa
add
das
adc
add
lods
jo
sbb
aam
pop
cmp
cmp
mov
pop
sbb
daa
fldl
lret
inc
or
mov
push
hlt
pop
xchg
mov
out
mov
jo
pop
lea
dec
inc
push
cmpsb
mov
fsubrs
mov
push
fs
insb
dec
icebp
mov
sbb
mov
shlb
pop
pop
test
jns
cltd
sub
cmpsb
pop
imul
adc
lods
inc
outsb
mov
ja
std
es
mov
scas
pop
jge
inc
push
adc
push
mov
inc
mov
outsb
xchg
aaa
mov
pop
icebp
xlat
int
sub
insb
repz
xchg
jl
mov
scas
call
xchg
adcl
lea
jle
jge
pop
lcall
popf
rcrb
mov
adc
cli
repnz
insb
jp
add
add
nop
rorb
cwtl
cmp
cbtw
fxch
aaa
cmp
ret
add
data16
dec
jg
add
adc
sub
sub
sub
pushf
sbb
fs
push
loopne
add
push
mov
enter
inc
cmp
cmp
push
xchg
flds
cmp
cli
sub
rclb
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
outsb
add
and
add
mov
mov
jle
jg
jle
jmp
in
daa
mov
lock
lret
icebp
pusha
push
test
imul
fisubrs
cmp
xchg
jnp
test
imul
sub
mov
push
sarl
xchg
add
or
stos
cli
and
sti
aaa
push
test
stc
ja
lds
jl
and
xorb
test
mov
sub
mov
and
sbb
lock
ficoml
scas
push
cmc
sbb
std
mov
or
enter
cmp
xor
pop
in
fwait
push
popf
mov
imul
shld
jg
inc
mov
ja
dec
mov
in
pop
hlt
inc
add
leave
filds
cmp
into
mov
inc
mov
and
mov
sub
xchg
or
pop
mov
test
in
push
int
inc
das
mov
jns
std
inc
std
insb
push
add
sub
add
cwtl
push
outsl
test
icebp
shl
lock
add
cmpl
ficoms
mov
jno
and
cmpsb
mov
mov
add
mov
ret
adc
or
cmpsl
leave
movsl
out
add
push
scas
jle
lds
out
lcall
pop
mov
or
in
sub
pop
sbb
jae
sahf
mov
sbbb
gs
push
pop
leave
add
iret
dec
and
imul
test
inc
das
cmp
mov
mov
mov
pop
pop
xor
xor
arpl
sub
out
xchg
ja
mov
jne
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
xor
mov
add
or
movzwl
mov
xor
mov
mov
movb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
mov
add
mov
movl
xor
sub
orl
mov
not
jmp
loop
fcoms
popf
mov
les
push
mov
jg
jle
xchg
mov
sti
cmc
sub
cld
ret
push
dec
dec
adc
cmp
cwtl
mov
pop
popf
arpl
in
fnstsw
and
mov
xchg
pop
js
dec
fneni(8087
ljmp
jmp
xchg
gs
shll
jb
cwtl
mov
mov
ret
fnstsw
faddp
sub
lret
and
add
sbb
mov
iret
rcr
adc
in
fsubr
add
mov
loopne
aas
pop
jecxz
fs
fisubrs
shlb
pushf
mov
loop
push
in
xor
in
lods
push
add
pop
pop
stc
mov
jge
push
mov
negl
loopne
hlt
shrb
cli
and
adc
push
add
cmpsb
frstor
cld
push
addr16
xor
test
cli
and
scas
addb
dec
adc
lods
popa
enter
loopne
in
int3
adc
popa
test
cmp
mov
mov
rorb
cmpsb
jl
aas
jp
jmp
mov
cmpsb
pop
inc
clc
imul
jb
je
sbb
push
icebp
mov
and
sbb
stos
pop
dec
jecxz
out
sub
add
cld
sbb
test
iret
pop
pop
hlt
sbb
and
add
fnstsw
xchg
sub
arpl
push
sbb
inc
inc
and
pushf
xor
outsl
cmp
and
and
sub
xchg
mov
jnp
sbb
nop
mov
pop
mov
movl
movl
or
mov
movzwl
adc
mov
subl
push
xor
andl
jmp
inc
jp
cs
mov
jno
pop
pop
dec
hlt
rclb
jle
scas
jg
jle
push
xchg
fs
sub
clc
jp
lock
pop
mov
insl
leave
pop
in
mov
mov
jecxz
call
ret
jge
rorl
jbe
mov
inc
pop
gs
mov
bound
iret
xchg
fwait
std
mov
ror
mov
mov
pop
repnz
push
xchg
mov
mov
clc
lahf
add
or
sahf
inc
mov
push
mov
nop
into
add
xor
mov
mov
aaa
lods
test
or
shr
xchg
jae
pop
arpl
das
dec
sub
push
or
pop
out
mov
sub
pop
rclb
aam
mov
mov
mov
enter
xor
push
shlb
fldt
and
jle
stc
mov
jmp
pop
inc
fdiv
addr16
xor
add
sbb
rol
test
push
cltd
jbe
in
or
stos
sbb
fisttpl
in
dec
sub
xlat
jle
dec
jae
or
icebp
outsb
mov
test
sbb
movsl
sbb
pop
ss
sahf
loop
adc
pop
mov
ljmp
or
push
push
mov
cli
cwtl
addr16
jl
divl
int
mov
es
loopne
push
sub
xchg
xorl
mov
push
adc
adc
xchg
cmp
jle
imul
cmp
mov
in
imul
cltd
repz
mov
imul
jb
add
sbb
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
mov
andl
and
loop
add
jle
jg
jle
cmpsl
push
stc
cs
push
mov
pop
and
dec
adc
in
mov
sbb
mov
dec
sub
xchg
dec
mov
dec
xor
and
and
cld
fwait
rclb
jno
out
pushf
adc
add
mov
sar
adc
and
and
jmp
pop
mov
imul
mov
fstps
xor
aas
and
jb
or
popa
inc
xor
hlt
mov
les
or
mov
sub
or
pop
xor
adc
xlat
push
movsb
jecxz
ret
lret
mov
arpl
insl
xor
in
sbb
imul
in
xor
imul
xlat
pushf
and
flds
dec
sbb
jns
repz
adc
repnz
and
pushw
and
sub
lea
ret
mov
fidivrl
add
rcll
sbb
aam
push
hlt
push
ljmp
push
jle
xchg
aad
and
xchg
out
aam
loope
jbe
cmc
pop
lcall
add
fnstsw
mov
std
xchg
dec
inc
mov
jb
cltd
into
scas
inc
sbb
jp
enter
cmp
mov
in
inc
push
les
test
nop
nop
mov
es
pop
int3
mov
loopne
jno
mov
mov
xchg
mov
and
ret
jbe
mov
dec
push
lahf
adc
out
pop
inc
mov
aaa
pop
push
fisubrl
mov
sbb
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
jmp
jo
add
mov
lods
or
jg
jle
push
add
jnp
sub
xchg
mov
push
test
fisttps
jns
xor
jmp
sub
dec
sub
sub
sarl
dec
stos
lcall
mov
ret
xor
pop
jne
or
xchg
xor
cli
cmp
and
sti
enter
or
push
xor
cmp
jae
rcr
les
xchg
sarl
jg
push
xor
lret
pop
daa
jae
mov
mov
popl
mov
out
incl
mov
rorb
stos
xor
cli
gs
or
add
gs
lods
loop
mov
sub
in
movsl
mov
loopne
repz
mov
push
arpl
mov
pop
xlat
jge
shll
call
or
test
cmpsb
iret
popf
sbb
xor
or
fstps
inc
or
push
mov
in
jbe
lret
xor
mov
ret
or
xor
iret
push
test
add
jnp
fcmovu
out
leave
lods
inc
inc
add
decb
lods
dec
ffree
fisttps
gs
or
push
cmp
push
cmp
xchg
mov
cmp
cmc
xor
out
cwtl
jg
jle
fdivl
lcall
or
fsub
push
mov
push
and
leave
add
inc
jnp
xchg
stos
cmc
mov
gs
clc
mov
sub
es
sbb
mov
xor
add
jmp
jl
mov
mov
jge
fldl
call
pop
loop
jle
scas
jg
jle
adc
pop
jle
lods
lds
mov
popa
mov
mov
sbb
sub
mov
loopne
icebp
sub
ret
lret
aaa
pop
loop
sti
movsb
cmpsb
lods
jne
jbe
jge
mov
adc
xorl
jle
mov
push
sub
adc
in
int3
inc
cmpsl
and
mov
data16
sbbb
enter
ret
repnz
mov
mov
xchg
dec
dec
ret
xor
jg
push
out
mov
daa
mov
loopne
pop
data16
ret
adc
sbb
subl
push
cmp
ja
or
sahf
inc
dec
out
lock
test
rcr
jae
xchg
ljmp
mov
jo
and
jo
mov
iret
sub
jle
jmp
cmc
cmpsl
ret
cmp
cwtl
sbb
push
jge
in
add
mov
aam
add
cmp
scas
push
outsb
pusha
repz
sbb
jge
xor
jb
pop
mov
add
ja
outsb
ret
movsb
fcompl
push
test
cmpb
mov
mov
lret
ja
pop
and
out
in
jle
jae
push
repz
push
push
dec
in
inc
add
sbb
dec
xor
lahf
outsl
int
popf
and
sub
outsl
cmp
xchg
xchg
jno
xchg
jnp
and
repz
jbe
or
sbb
adc
int3
popf
xchg
push
sub
pop
aaa
out
fstl
iret
lret
adc
cltd
shrb
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
lret
int3
push
push
mov
push
mov
adc
jle
scas
jg
jle
mov
sahf
dec
push
in
add
cmp
or
mov
adc
movsl
sti
inc
add
lahf
aas
sub
xlat
add
mov
add
popf
xor
pop
test
ret
and
cmp
push
loop
enter
push
dec
mov
stos
and
or
insb
inc
lock
sbb
shlb
xor
fs
mov
scas
adc
lret
sub
les
rcl
push
lods
addr16
mov
pop
rol
xor
icebp
mov
in
jecxz
jbe
mov
mov
push
xor
femms
adc
jb
xchg
ficoms
mov
fsubrs
in
mov
pushf
push
loope
das
fsubrp
sub
divl
adc
adc
popa
add
mov
outsl
int3
add
jecxz
pop
sbb
xchg
cwtl
sub
hlt
ret
cmp
add
aad
fnstenv
cmp
shl
int
jp
stos
sbb
inc
jb
test
jle
xor
xor
cltd
in
sti
sbb
das
stos
cmp
fldcw
cs
jecxz
enter
outsb
cmp
insb
std
mov
sbb
sbb
rorb
mov
mov
stos
neg
loop
mull
stos
push
mov
shlb
addr16
imul
mov
lret
sti
sarb
or
mov
xor
add
stos
sub
xor
mov
sahf
popf
mov
mov
loope
cmp
clc
jle
mov
test
inc
call
jmp
scas
or
xor
mov
xlat
add
inc
push
jle
scas
jg
jle
inc
sub
shlb
aas
pop
jl
cs
test
or
push
lds
ds
popl
addr16
scas
xor
push
push
nop
idivb
cli
leave
dec
out
push
lea
mov
jo
daa
scas
sub
xchg
enter
daa
mov
arpl
imul
jmp
mov
pop
iret
or
jmp
rcrl
jl
int3
in
push
push
outsl
sub
sbb
mov
mov
mov
lcall
sar
mov
stc
dec
scas
adc
inc
inc
shlb
xchg
cwtl
in
push
mov
xchg
mov
orb
sub
int
xchg
sub
ds
stos
ret
es
out
pop
test
sbb
jno
jbe
jp
fcomi
adcl
sbbl
test
jecxz
loop
js
push
decb
lods
idiv
fcomi
xlat
dec
pop
cmpsb
push
in
sbb
pop
movsb
sbb
pop
mov
sahf
pop
mov
cmpsl
mov
cld
add
add
sbb
inc
cli
sbb
js
jp
insb
pop
push
popf
mov
hlt
ljmp
xlat
arpl
cmpsl
xor
ja
jbe
jecxz
adc
push
inc
and
inc
stos
push
and
sub
dec
fstps
inc
nop
xchg
les
fistl
imul
arpl
ja
mov
loopne
mov
out
lea
mov
mov
addl
jmp
mov
inc
push
push
jb
andl
scas
jg
jle
out
add
pop
or
ss
int3
inc
lahf
mov
inc
adc
jecxz
aad
xchg
das
pop
push
enter
xor
xor
mov
or
mov
aaa
and
sub
loope
lock
add
sub
adc
fwait
push
lret
lods
cmp
inc
fdivs
mov
push
fiadds
adc
and
test
or
inc
outsb
jnp
sub
pop
arpl
add
es
out
fs
rcrl
xor
test
push
push
cs
lcall
cli
dec
hlt
imul
dec
inc
jae
lcall
popl
rorb
loop
dec
out
insb
push
shld
jae
push
xchg
es
fidivl
test
orl
push
pop
inc
out
xchg
aam
fstpl
out
mov
cs
jg
adc
mov
push
aad
dec
sub
outsl
adc
xchg
mov
sbb
pushf
test
or
les
jmp
stos
jecxz
mov
push
xor
out
jns
in
mov
test
roll
les
mov
pop
sbb
in
and
sub
adc
cltd
add
lock
jb
mov
jle
inc
roll
pop
lcall
loope
fstl
mov
sar
push
jno
inc
mov
pop
xchg
out
push
lds
mov
dec
xor
repz
sarb
inc
lock
xor
jmp
pop
sub
dec
insl
dec
imul
and
adcw
sbb
scas
jg
jle
insl
movsl
xchg
mov
mov
add
lds
popw
sti
inc
xor
out
inc
mov
lock
fiadds
es
mov
and
mov
jge
adc
dec
push
lods
cmp
roll
push
andl
mov
rcll
imul
sub
adc
rorl
mov
mov
fstl
or
pop
xlat
and
sbb
outsb
stos
jb
stc
mov
xchg
pop
add
sbb
shr
or
out
xchg
test
fdivrs
jo
pushf
cmp
jno
outsb
add
aad
dec
lods
lods
fidivl
outsb
icebp
jb
leave
std
into
jns
lcall
cltd
and
cmp
call
xchg
pop
dec
pop
pop
inc
outsl
dec
stos
dec
adc
dec
movsb
mov
out
sub
movsb
test
fnstsw
into
rcll
xchg
pop
outsl
pop
in
sbb
push
faddl
hlt
adc
inc
adc
je
mov
push
dec
gs
ja
fidivrl
jmp
idiv
pusha
sbb
fwait
push
jns
dec
dec
les
xchg
popa
mov
push
xor
inc
ljmp
cld
in
lods
repz
push
popl
test
cmpl
xor
inc
mov
inc
in
pop
cmpsb
and
mov
cmp
jg
jo
loop
aaa
xor
inc
stos
out
pushf
xchg
xor
pop
ja
aas
je
in
aaa
decb
pushf
push
mov
notl
ds
mov
pop
scas
jb
bound
pop
sub
cmp
adc
fwait
jb
add
or
arpl
decl
mov
add
mov
pop
leave
ret
push
mov
push
push
movl
jmp
lcall
mov
ja
pop
in
xchg
jle
jg
jle
or
xchg
push
repz
xor
xchg
fisubl
dec
lea
add
xor
addr16
cmpsb
movsb
jp
xchg
scas
xchg
ja
jmp
sbbl
mov
mov
push
je
in
dec
movl
mov
cli
setp
xor
dec
fdivrl
std
lret
pop
mov
cmp
movsl
rcll
out
xorb
mov
xor
and
and
adc
sbb
mov
xor
in
rcrl
pusha
pop
sub
fstps
cvtps2pd
mov
lea
or
test
or
jecxz
mov
xor
out
push
jb
mov
push
pop
in
imul
stos
push
pop
xor
adc
loope
repz
adc
into
hlt
mov
movsb
mov
in
in
mov
sub
loope
sub
adcb
xchg
dec
and
in
push
sbb
sbb
stc
xchg
sbb
or
mov
push
lcall
out
adc
mov
push
mov
movsl
mov
es
hlt
mov
dec
out
inc
fistl
jmp
jae
mov
cmpsl
inc
lret
add
cmpsl
neg
xorb
movsb
pop
or
outsb
adc
adc
push
jae
fs
xchg
aam
loop
mov
push
push
mov
stos
fdivr
jecxz
movl
mov
push
orl
mov
and
mov
orl
xor
addl
xor
mov
orl
add
add
subl
imul
mov
mov
cmp
jne
mov
mov
xorl
xor
andl
xor
xorl
jmp
jbe
cmpsl
adc
sahf
es
or
dec
sar
jle
cltd
jg
jle
loopne
rcrb
cmp
insl
inc
pop
lret
int
mov
inc
scas
in
jp
pop
inc
cmp
pop
inc
inc
andb
push
sbb
xor
dec
in
movsb
inc
mov
pop
and
insl
js
je
or
es
decl
repz
cmp
notl
cltd
and
sbb
imul
and
outsl
adc
lds
adc
push
cli
invd
movsb
sub
sbb
gs
insb
js
test
imul
cmp
int
xor
or
mov
mov
add
lahf
cmp
testb
inc
inc
add
jbe
arpl
mov
lret
pushf
aad
add
pushf
inc
and
mov
mov
fnsave
lds
mov
inc
lods
sbb
mov
lret
push
ficoms
ret
pop
pop
outsl
cmp
mov
mov
into
jl
xor
and
sub
insl
xchg
jb
mov
les
movsb
pop
or
sub
pop
fcompl
mov
movsb
push
sahf
dec
mov
xchg
push
ret
push
xor
xor
je
ret
pop
sarl
aad
xchg
testb
ret
cmp
mov
ljmp
mov
push
cmp
mov
or
add
add
imul
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
movl
mov
mov
mov
sbbl
xor
subl
add
jmp
fnstenv
loop
jb
jno
in
jne
sbb
mov
xchg
jl
jle
mov
scas
std
dec
xchg
jno
mov
hlt
mov
push
neg
mov
rol
mov
jecxz
into
psubsw
and
add
push
jae
adc
push
dec
jecxz
lods
push
and
shll
inc
jmp
cli
rcll
push
jge
fidivs
mov
jo
test
imul
lea
aaa
jne
rcrb
add
mov
inc
sbb
je
aas
adc
cmp
mov
clc
pop
jne,pn
and
pop
rorl
xor
push
and
adc
pop
repz
stos
sarb
dec
add
insb
es
fnsave
mov
lret
add
std
jmp
cmc
popa
or
mov
push
movsb
jnp
in
push
cltd
jle
cli
loop
mov
adc
xchg
mov
pusha
dec
xchg
or
jmp
jne
mov
pushf
lea
jecxz
setg
test
sub
add
mov
shll
jmp
loope
push
adc
xor
hlt
sub
jno
xlat
jb
pop
stos
inc
mov
inc
int3
xor
sbb
fwait
popf
xor
sub
fwait
sbb
rcrb
add
mov
lods
xchg
sbb
call
mov
aaa
call
xchg
jne
mov
out
sub
dec
xchg
ret
lods
push
lea
inc
jns
xchg
and
inc
pop
scas
or
fs
aad
jg
xchg
ficomps
int
push
rorb
cs
out
lock
int3
adc
out
or
push
call
add
stos
or
test
xchg
std
inc
adc
loope
pop
add
mov
sarb
jge
aad
jno
fcoms
iret
in
jns
mov
dec
stos
jns
mov
lahf
inc
xchg
int
inc
out
sub
fistpl
pslld
cmp
movlps
addr16
sbb
mov
inc
lret
add
addr16
je
es
inc
mov
mov
jb
pushf
mov
xor
jmp
divb
jecxz
scas
adc
push
fsincos
xchg
aaa
adcl
sbb
imul
je
sbb
xor
jae
jns
inc
mov
cmpsl
cltd
inc
jo
fs
jne
mov
xor
push
repz
jo
xor
add
add
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
xor
push
mov
addl
mov
sbbl
add
addl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
xor
loope
loope
icebp
pop
mov
pop
lea
inc
and
jle
cltd
out
cwtl
inc
or
repnz
xor
cwtl
inc
xor
xchg
cmc
cmpsb
test
scas
inc
popf
add
add
or
aam
xchg
xchg
sub
mov
or
in
in
outsl
out
or
xor
fwait
mov
add
test
mov
lods
test
and
and
adc
andl
sbb
insl
test
mov
cmp
repnz
fstps
rcl
stos
pop
mov
pop
xchg
xchg
ret
sub
mov
adc
cmpsb
sti
bound
insb
jbe
sbb
in
xchg
pop
mov
in
loope
pop
mov
lods
mov
sub
mov
imul
dec
ljmp
out
sbbb
mov
ss
or
xor
adc
fstpl
adc
cmpsl
cltd
scas
mov
cmp
cmp
fimull
dec
ret
jp
push
and
mov
sahf
mov
in
lods
mov
insb
push
lock
cwtl
cs
sub
ja
push
mov
push
mov
pop
jbe
icebp
lds
fistpl
movb
mov
lahf
push
ret
filds
dec
mov
fsubs
xlat
pop
popa
mov
sub
orb
rolb
mov
and
mov
jno
loop
lret
inc
push
cld
call
xchg
mov
xchg
mov
out
sbb
scas
cli
mov
jl
outsl
sbb
xor
lret
sub
iret
cwtl
int3
lds
fnsave
cmp
push
fwait
mov
pushf
lds
repz
jmp
push
out
jnp
nop
pop
add
jmp
sbb
push
dec
lcall
fisubrl
pushf
fsubr
mov
mov
das
sub
jnp
rorl
aam
jns
dec
repnz
sbb
ret
sub
lea
out
cmp
xchg
arpl
loopne
pop
mov
cmp
jl
sbb
push
mov
mov
imul
jl
inc
int
jno
add
fsubr
fdivrl
push
push
fbld
dec
mov
fcmove
mov
jnp
mov
xchg
xor
jno
mov
dec
adc
das
mov
imul
sahf
inc
roll
movsl
stc
arpl
lret
push
sbb
icebp
mov
and
or
mov
pop
ret
push
mov
jmp
pop
iret
xchg
cmp
jno
das
insb
xchg
mov
out
jle
outsb
jg
jle
adc
xchg
xor
add
push
lret
outsl
cmp
outsb
push
mov
adc
dec
xchg
or
lcall
fnstsw
dec
imul
dec
in
jno
lock
add
into
push
shl
jae
mov
sub
sub
xor
add
clc
sbb
stc
aaa
sbb
movsl
lds
ljmp
and
push
loope
pop
cmp
lea
bnd
ret
fsubrl
je
sub
rclb
push
mov
fnstsw
pop
mov
mov
in
xor
xchg
xor
jle
pop
cli
in
bound
pop
out
jo
ret
sub
mov
lret
jne
cmp
or
cli
lret
in
fisubs
std
cltd
dec
mov
push
cmpb
jnp
xchg
dec
imul
push
popf
enter
lret
sbb
fstpl
push
rolb
movsl
jecxz
adc
aad
neg
mov
test
mov
lock
add
out
shl
or
add
lret
in
popf
outsb
sub
std
sbb
and
push
dec
jmp
pop
or
mov
mov
lock
pop
and
mov
sbb
mov
pushf
sub
cmp
rcrb
pop
aad
lds
mov
push
dec
std
mov
int3
out
aaa
orl
ret
out
xchg
out
lcall
inc
es
in
stc
bound
ds
sub
jge
xchg
mov
repnz
adc
out
cmpsl
sbb
fidivrs
negb
jns
arpl
lret
mov
or
cs
lret
fisubl
or
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
mov
movl
mov
mov
sub
and
mov
movzwl
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
inc
jo
xor
jo
jo
shlb
outsb
pop
sub
jle
jg
jle
mov
adc
movsb
mov
popf
push
inc
enter
int
mov
ficomps
or
cmp
imul
adcb
sbb
lock
loop
inc
lret
push
in
imul
mov
imul
jg
cmpsb
sub
mov
orb
mov
push
icebp
jns
test
scas
nop
arpl
mov
and
mov
xchg
arpl
pop
adc
cmpsb
fimuls
jle
fidivrs
pop
xlat
cmp
ret
fwait
xrelease
mov
cmp
cld
ret
adc
adc
cmpsl
loope
or
xchg
xchg
sub
jns
dec
adc
inc
pusha
jge
inc
mov
call
push
mov
xchg
mov
aam
dec
sub
mov
inc
andb
fimull
mov
shrl
mov
fiadds
lods
or
stos
fwait
cwtl
call
addl
inc
add
push
jno
jle
in
and
insb
pop
push
fldenv
add
movsl
jns
add
negl
mov
xchg
or
inc
loope
out
leave
dec
fdivs
pop
push
dec
xlat
sub
cmp
dec
add
lods
mov
int
mov
jp
in
in
stos
adc
scas
lret
popa
cwtl
sub
push
aad
mov
and
mov
mov
shr
rcll
test
pop
lock
sub
and
iret
push
das
fildl
xor
sub
jle
orb
out
mov
insb
ja
bound
in
and
inc
ds
xor
lds
xor
sub
pop
das
iret
shrl
mov
out
sub
and
pop
xor
add
mov
mov
mov
mov
mov
mov
jmp
sarl
push
mov
icebp
mov
jb
sub
jle
jg
jle
fisubrl
mov
dec
jmp
cltd
push
adc
int
or
scas
stos
in
inc
test
push
jg
xor
add
scas
jae
and
cmpl
outsb
add
icebp
dec
ljmp
and
test
mov
and
jecxz
adc
jmp
pusha
out
in
jbe
dec
dec
test
cmp
call
orb
push
sbb
inc
mov
xor
fidivl
pop
add
stos
test
pop
mov
push
lds
scas
das
xchg
sbb
xchg
in
jbe
xor
mov
repnz
pop
jge
leave
fldln2
bound
jge
int
decb
xor
cmpsl
jg
ret
fldcw
mov
fwait
mov
xor
fists
test
fs
adc
adc
int3
or
enter
icebp
lret
or
jo
or
xor
mov
push
xchg
sbb
das
fidivs
jg
hlt
js
or
mov
fwait
mov
packuswb
test
lcall
cli
jb
pop
xchg
shl
adc
xor
dec
sub
xchg
push
sar
pop
push
mov
pop
sub
dec
push
es
jg
rorl
test
mov
lahf
inc
test
loop
or
add
stos
cmp
insl
lods
mov
inc
or
mov
lods
aaa
shrb
mov
hlt
jo
push
xchg
cmp
push
ljmp
xchg
or
int
xor
dec
adc
sub
sbb
data16
out
bound
mov
in
aad
sub
shlb
or
es
pushf
dec
cmp
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
sbb
mov
xorl
push
push
push
orl
mov
xor
mov
add
orl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
jmp
jl
inc
movsb
jecxz
popa
xor
inc
cltd
mov
push
jg
jle
cltd
rorl
push
push
mov
mov
xor
dec
and
scas
or
mov
in
scas
sub
enter
sbb
test
aas
int
sbb
pop
loope
or
xchg
addl
mov
xorl
sbb
push
push
or
arpl
sub
in
repnz
mov
pop
std
pop
mov
xor
push
xor
test
add
fs
shl
pop
gs
dec
leave
mov
es
mov
jb
push
sub
sub
dec
popf
dec
jecxz
shll
aas
sbbl
jo
dec
mov
mov
notb
or
es
stos
mov
jmp
test
jecxz
in
scas
rcr
adc
adc
sbb
lods
inc
add
test
repnz
xor
jecxz
in
stc
test
hlt
cmpsl
imul
xor
stc
fldcw
outsl
mov
movsb
push
pop
movsb
dec
ret
stc
sbb
decl
in
or
xchg
pushf
insl
mov
ret
pop
sti
bound
inc
push
nop
and
pop
inc
clc
test
mov
dec
insl
or
mov
or
xchg
sbb
or
pusha
std
push
icebp
or
sub
mov
mov
push
jne
jo
dec
push
mov
xor
shll
andb
sub
cs
push
push
xchg
push
mov
add
jb
and
cmc
jb
xor
mov
imul
mov
idiv
jo
sbb
scas
psrlw
lea
push
cltd
fs
lret
cltd
cmp
inc
int3
xor
pop
in
inc
add
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
movl
mov
or
movl
mov
andl
xor
add
mov
sbbl
movl
sub
movb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
mov
mov
sbbl
xor
sbbl
add
incl
push
xor
xor
xor
mov
subl
xor
orl
add
push
or
mov
orl
xor
notl
add
adcl
push
sbbl
lea
push
decl
pushl
subl
pushl
andl
call
test
je
lea
sbbl
push
movzbl
sbb
mov
jmp
xor
sbb
repnz
test
movsb
das
or
jg
jle
loope
popa
mov
test
cmpsb
es
ffreep
aad
call
insl
xchg
int3
and
ficoms
clc
mov
cli
cmp
push
jno
pusha
pop
dec
and
fdivp
lea
mov
add
enter
sub
sub
jns
mov
or
sti
dec
jmp
jmp
add
into
movsb
sub
adc
pop
adc
jno
in
jae
movsl
mov
xchg
insl
fcmovbe
popf
inc
inc
cmp
and
xchg
ret
sahf
add
insl
imull
dec
in
or
out
sub
nop
outsl
push
and
out
fnstsw
out
lea
fisubrl
orl
push
out
push
leave
lds
test
mov
mov
mov
addr16
cmp
loop
pushf
pop
sbbl
adc
push
push
sbb
pop
sarb
xor
mov
cmp
or
push
out
jae
lret
scas
in
pop
sbb
iret
mov
call
test
sub
test
inc
inc
das
js
int3
inc
dec
lret
mov
ficomps
adc
cmp
mov
addb
int3
inc
incl
out
dec
mov
and
addr16
enter
aaa
add
dec
dec
sub
sbbb
mov
sysenter
sbb
mov
pop
adc
shlb
stos
cmp
int3
pop
and
cltd
cmpl
xor
dec
cmc
aas
push
push
loope
mov
xchg
mov
xor
add
push
mov
add
push
jmp
jne
adc
flds
mov
jmp
jmp
jle
jg
jle
xchg
xchg
mov
lret
mov
jne
xchg
inc
cmp
mov
push
movsb
mov
daa
dec
or
sub
ret
push
mov
ljmp
mov
jge
adc
cmp
repz
nop
clc
add
fldcw
mov
arpl
es
xor
mov
out
mov
mov
cmp
push
jle
and
pop
mov
jecxz
test
aam
shll
insb
imul
ljmp
arpl
aad
mov
popf
pushf
jp
leave
cld
fldcw
mov
stc
or
mov
fcomi
cmp
cmp
jle
mov
enter
in
dec
lret
lret
cmp
xor
dec
jg
lret
stos
movsl
inc
mov
adc
add
inc
xchg
fucomip
jle
ret
lret
or
ljmp
sahf
repz
push
enter
dec
or
sbb
sbb
adc
fidivl
push
fldenv
sbb
cmc
arpl
adc
insb
pop
std
inc
mov
jb
cmpsl
inc
mov
outsb
xchg
clc
xchg
push
in
mov
xchg
int3
push
mov
jnp
jge
int3
pop
lcall
int3
daa
cwtl
xorps
imul
push
and
lret
mov
xchg
sub
mov
aas
xchg
std
adc
add
mov
xor
lret
pop
or
jecxz
cmpsl
in
leave
cltd
mov
std
xchg
shr
jl
xchg
stos
pop
sahf
test
int
dec
dec
mov
out
jle
cmp
sbb
stos
cmpsb
sbb
pop
fnstcw
cltd
pop
pushl
mov
imul
scas
mov
sbbb
call
mov
cmpl
lea
jmp
xchg
leave
rorl
mov
out
pushw
jle
push
jg
jle
xchg
jge
mov
inc
jno
lret
mov
dec
sahf
push
test
fnstcw
imul
scas
jb
inc
rcrl
mov
fcompl
aad
lret
iret
inc
mov
es
push
and
adc
cltd
adc
mov
leave
mov
mov
sub
dec
fdivs
xchg
aaa
inc
test
hlt
fisttpl
sti
arpl
pop
lock
bound
loop
or
stos
lret
cs
pop
dec
mov
mov
aam
mov
stc
sar
mov
sahf
mul
test
je
jns
mov
aam
cmp
loope
addr16
sahf
mov
xchg
cmc
mov
jle
mov
pop
stos
aas
sub
mov
mov
push
sub
cld
or
sub
loopne
roll
xchg
and
mov
push
rolb
mov
or
xor
cmp
dec
mov
aaa
add
push
mov
stc
in
mov
sub
repnz
jns
mov
push
orl
sbb
push
pop
push
mov
or
add
jno
cmp
imul
movsb
jno
scas
lret
mov
repnz
cli
fdivs
inc
scas
imul
inc
je
cmp
add
and
clc
mov
xor
inc
sbb
repnz
mov
mov
shll
mov
pop
insl
cmp
inc
lahf
mov
mov
dec
xor
loop
ret
ja
pop
sub
mov
notl
and
aam
push
inc
dec
lret
ds
icebp
dec
jnp
push
xchg
inc
xlat
daa
cmp
inc
loopne
test
repz
add
hlt
pushf
dec
mov
inc
and
jae
add
jg
jle
ds
push
cwtl
jecxz
sarl
clc
push
mov
cmp
or
mov
pop
stos
mulb
push
xchg
push
cmpsb
scas
inc
mov
out
int
and
xor
scas
adc
lahf
repz
mov
push
jo
mov
int
lods
jmp
mov
xor
fcoms
cwtl
sti
ror
xchg
add
push
test
and
popf
int
mov
mov
xchg
lods
test
in
out
add
loope
bswap
ds
ret
sub
stos
sub
cmp
fistpl
into
and
nop
loopne
dec
mov
clc
cli
jmp
popa
int3
imul
mov
adc
dec
lods
popaw
fstps
xlat
out
push
push
mov
cltd
adc
insb
sti
movsl
stc
roll
ss
mov
jmp
ss
sbb
popf
pusha
mov
dec
ds
fstp
inc
scas
push
sarb
inc
cmp
arpl
jbe
in
xor
sbb
jne
pusha
fistpll
sub
dec
adc
ljmp
sbb
addr16
ds
rclb
mov
dec
or
test
fwait
cmp
aas
shr
mov
ret
add
jl
popa
jmp
push
mov
jno
testl
push
jg
or
js
jg
aad
scas
xchg
lret
jbe
mov
lret
mov
xchg
cmpsb
mov
popa
cmp
and
addr16
and
cmc
and
xchg
sub
cltd
in
lods
xor
sti
push
mov
out
mov
dec
add
mov
pop
xor
push
pushf
mov
test
pop
xchg
mov
loopne
cli
in
sbbl
inc
sbb
mov
and
mov
test
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
cmp
loope
jno
dec
add
pop
pusha
xchg
add
xor
push
jg
jle
push
xchg
lock
call
xor
push
lret
fists
mov
sub
adc
notb
stos
stos
shr
dec
shll
sub
mov
cmp
test
jbe
jbe
and
pop
arpl
and
jbe
hlt
cli
std
loop
ljmp
dec
fwait
jmp
rol
sub
lret
daa
mov
xor
jbe
inc
xchg
dec
sahf
sub
cmp
iret
shlb
sub
pop
adc
hlt
rcll
dec
jo
fdivs
push
jns
fmull
xor
sbb
lods
mov
movsb
stc
mov
iret
popw
stc
int
sbb
jae
fcmovne
and
jg
enter
loope
cmc
push
cmp
pop
mov
outsl
movsl
rorb
jle
inc
in
pushf
mov
pop
dec
pushf
sub
mov
jp
int
xchg
add
push
push
jg
inc
mov
xchg
mov
push
aaa
cmp
fs
movsl
xlat
sbb
cld
mov
inc
jecxz
pop
int
or
xchg
push
movsb
cmpsl
and
out
cmp
cmp
sub
fsubrp
out
gs
xchg
cmp
fdivr
test
fwait
or
bswap
sbb
push
rcrb
je
out
xchg
call
std
cmp
dec
and
xor
insb
or
mov
push
mov
xchg
fcmovnu
xor
cwtl
out
loop
ror
add
andb
lea
cmpb
sarb
mov
adc
xor
dec
fisttpll
lcall
xchg
cwtl
aad
push
sbb
pushl
pushl
jmp
push
mov
dec
sub
enter
jbe
aam
jle
push
jg
jle
lahf
jmp
in
mov
arpl
subl
sahf
pop
add
pop
imul
popf
test
or
enter
cmp
ss
jnp
scas
or
mov
xor
fistpl
andw
nop
sahf
xchg
jne
leave
push
roll
rorb
dec
in
mov
mov
dec
inc
adc
dec
jg
jns
fs
mov
xchg
cmp
xor
aaa
fnstcw
dec
nop
xchg
ja,pt
push
cld
inc
dec
push
jae
xchg
mov
out
repz
inc
adc
jl
pusha
pop
cmp
test
xchg
in
stos
mov
add
loopne
pusha
cmc
dec
andb
inc
jbe
lods
repz
mov
jnp
jecxz
mov
stos
lret
test
xor
sbb
push
mov
xchg
sbb
push
sahf
push
andb
push
clc
aas
jnp
stc
mov
cltd
aam
and
mov
jge
mov
mov
xchg
push
aad
mov
sub
xchg
sbb
clc
push
or
jnp
adc
pop
enter
outsl
lock
xchg
inc
arpl
je
xor
jbe
mov
sub
xchg
inc
push
dec
push
lock
dec
int
and
jle
pop
push
xchg
sub
and
mov
das
loope
pop
subb
mov
lret
fmuls
pop
pop
pop
mov
mov
jle
cmp
cltd
inc
pop
std
enter
gs
movsb
pusha
movsl
cmpsl
jge
dec
xor
mov
and
repz
aaa
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
jmp
fwait
imul
shlb
jae
sbb
sub
jle
push
jg
jle
xchg
cmp
nop
aas
push
jg
lahf
out
mov
push
push
fabs
lea
cmpb
ret
ljmp
adc
mov
ficompl
adc
or
mov
or
mov
adc
xlat
test
pop
ljmp
lret
lea
pusha
cltd
daa
push
and
jg
mov
adc
iret
push
in
enter
xor
sub
scas
add
add
andb
repnz
dec
stc
xchg
nop
adc
fiaddl
out
mov
mov
icebp
sub
stc
sub
sti
cli
cs
xchg
jno
xchg
add
xor
stos
lods
lock
mov
enter
fcomps
fnstsw
dec
nop
pop
pop
mov
pop
add
jle
xchg
mov
adc
sub
pmuludq
nop
inc
add
mov
roll
and
cs
sub
aaa
dec
test
adc
insb
es
aam
jo
imul
or
stc
mov
insb
out
js
outsb
je
xor
rcl
mull
mov
and
cmp
push
lock
xor
or
andb
pop
scas
rclb
rol
xchg
jno
inc
into
cmp
add
js
idivb
fnsave
imul
push
jb
xorl
xchg
js
inc
shll
mov
pushf
shrl
roll
cli
aaa
sbb
in
cld
in
sbb
jb
push
or
xchg
lods
mov
pop
mov
push
cmp
cmpsb
sub
das
xchg
pop
fcomps
or
rcl
cmp
aam
stos
push
inc
out
pop
add
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
jmp
xchg
lods
sbb
mov
ljmp
push
cmp
jle
arpl
gs
ss
xor
or
pop
mov
fnstcw
xchg
add
test
add
insb
inc
xchg
enter
xchg
imul
fisttpl
xchg
jns
mov
and
rcll
sub
outsl
cmp
das
mov
inc
jge
loop
mov
clc
in
imul
out
mov
je
aam
add
xchg
cmp
cmp
inc
in
dec
xchg
shll
les
cli
inc
sbb
push
sahf
dec
in
gs
xor
cmp
and
addr16
xor
or
mov
movsl
imul
mov
rolb
ret
sub
stos
inc
das
ja
add
testl
outsl
int
ret
sub
nop
cmp
xchg
sub
cmc
jl
mov
cmpsl
js
hlt
in
hlt
or
loopne
mov
push
mov
js
stc
in
jbe
push
add
push
xlat
stos
lock
push
jmp
out
sub
pop
out
shrb
jp
or
jle
mov
fildll
roll
jo
xchg
push
xor
bound
sub
sub
xchg
test
mov
hlt
jo
call
cld
xchg
pop
jle
cli
cmp
sub
push
bound
aaa
imulb
push
scas
pushf
xlat
icebp
sahf
insl
xchg
aam
inc
lret
push
lret
arpl
jo
push
inc
cmp
or
mov
push
bound
cmp
xor
adc
and
jb
in
push
mov
and
push
dec
test
or
lea
das
arpl
adc
push
xchg
test
mov
add
sbb
rolb
pop
fistps
mov
sub
sbb
sbb
fcomps
into
bswap
pusha
loope
repnz
mov
add
xor
sbbl
add
and
inc
add
or
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movzbl
xor
mov
mov
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jb
or
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
sub
movl
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
push
call
jmp
xor
xor
xor
add
mov
movzwl
and
mov
jmp
cld
ss
je
inc
mov
mov
lods
fldenv
jle
mov
jle
stos
xchg
xor
fdivrs
lea
outsb
cmpsl
jp
mov
out
aaa
test
or
push
je
sub
sub
std
adc
mov
inc
ret
jno
daa
mov
mulb
je
jge
xchg
sbb
inc
or
adc
pop
insb
sub
jecxz
sbb
mov
pop
dec
and
mov
xor
lock
shlb
mov
sbb
mov
cwtl
or
sub
test
lods
dec
popl
mov
adc
das
cmp
sub
sub
or
dec
mov
mov
test
testl
push
les
sub
dec
pop
or
pop
mov
jg
fidivl
xor
pop
mov
out
je
sub
and
sub
leave
ja
push
dec
out
es
mov
iret
or
sar
add
mov
dec
and
lock
and
push
cmpsl
or
sub
dec
out
daa
sbbl
mov
adc
test
jecxz
int
jle
jno
lea
inc
sbb
xchg
in
xchg
sub
and
enter
into
xor
sti
lds
les
mov
xlat
xor
jae
pop
xor
int
mov
mov
fs
arpl
roll
add
add
add
add
cmp
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
jmp
xchg
sahf
icebp
jno
arpl
fbld
jle
jg
jle
or
jno
jae
push
out
jnp
jge
sbb
stos
or
mov
mov
sub
mov
xchg
dec
out
mov
sbb
dec
int
jge
and
jmp
mov
outsl
repnz
push
orl
push
push
mov
aaa
decl
inc
jb
push
jge
cmp
jmp
int
rcrb
aam
lods
or
sbb
xchg
mov
sub
sub
sub
inc
jmp
fsubl
mov
mov
xchg
ffree
mov
push
mov
pushl
xor
sahf
mov
jmp
xor
shlb
aam
lea
cs
std
jp
sub
test
adc
adc
pop
ja
pop
xchg
fsubs
inc
mov
fucomi
pop
sub
pop
push
outsl
fucom
lret
lds
popf
mov
push
rorl
scas
push
mov
mov
out
inc
cmpsl
pop
inc
adc
pop
repnz
mov
mov
push
fdivr
loope
aaa
and
repz
adc
add
lcall
mov
push
outsl
loopne
rcll
pop
sub
and
sub
mov
test
mov
jg
inc
add
push
sbb
js
jbe
hlt
push
mov
sub
fstl
icebp
pop
pop
cmpsl
sbb
and
and
sahf
outsb
popa
push
mov
fistpl
jmp
push
clc
mov
xor
xor
add
xor
jmp
sub
fnstsw
fucomp
sub
cmp
jns
or
jg
jle
test
test
cmp
push
enter
aaa
out
xlat
dec
sub
aas
jbe
inc
cltd
cmp
inc
gs
push
pusha
outsb
xor
cli
cmpsl
imul
daa
ds
js
sarl
sbb
dec
sub
xchg
xor
cmp
push
rep
inc
icebp
mov
aas
insb
xor
xchg
sti
lahf
pop
dec
xor
mov
lea
mov
cmp
jecxz
popa
adc
jge
fnsave
xchg
sub
sub
mov
cmpsb
vpcmpeqb
mov
push
jecxz
lea
out
ret
jno
test
sbb
and
inc
mov
in
fs
fbld
xor
pushf
mov
lea
orl
jle
mov
es
jae
stc
andl
inc
mov
inc
sbb
out
in
test
mov
scas
inc
mov
mov
das
sub
aad
ficomps
inc
cli
dec
and
pusha
dec
or
enter
leave
jle
sbb
mov
mov
jns
mov
mull
addr16
xor
popa
rcrb
icebp
out
in
lods
ljmp
scas
in
cmpxchg
enter
and
outsb
mov
aam
lcall
cmc
fdivrs
mov
iret
inc
mov
cld
inc
cmpsb
xchg
sahf
enter
cli
jp
xor
or
cli
xchg
scas
lret
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
movl
adc
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
push
pushl
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
movl
mov
xor
add
or
jmp
mov
icebp
inc
jno
mov
pop
push
cltd
jle
mov
jle
push
adc
sar
push
or
cmp
es
out
pop
pop
sbb
pop
loopne
lret
dec
lret
outsl
aaa
sub
mov
pop
sub
sub
adc
or
jl
dec
add
cmpsl
or
fwait
cmp
mov
mov
sbb
jle
mov
lods
fsub
add
into
jmp
mov
lds
sbb
pop
xor
cmp
lret
adc
adc
popf
mov
cmpsl
icebp
mov
mov
sbb
push
ss
mov
push
stos
lcall
lret
ljmp
cmp
mov
hlt
stos
mov
mov
adc
mov
and
cmpb
or
ljmp
cli
jb
mov
cmp
or
cmc
xchg
dec
cmp
mov
les
mov
notl
xchg
xor
or
mov
inc
mov
scas
mov
sbb
add
test
add
cmp
data16
out
lods
jmp
fwait
mov
cmp
and
push
es
pop
jno
mov
das
addb
pushf
pop
adc
sbb
mov
jmp
jne
aas
or
mov
movsb
std
pop
mov
js
mov
cld
enter
loop
stos
adc
movb
mov
push
clc
adc
mov
cmp
or
insl
inc
or
mov
jae
rorb
push
add
add
rol
add
dec
pop
add
cmp
movl
jmp
notl
push
jb
out
or
sbbb
lds
mov
jle
fs
push
sub
push
insl
out
int3
mov
lds
adc
dec
pop
rcr
push
ljmp
in
mov
add
push
sahf
mov
xchg
sti
jp
push
or
mov
sbb
mov
pop
add
pushf
stos
or
movsl
mov
aaa
xchg
inc
nop
hlt
nop
mov
dec
not
addr16
outsb
insl
jmp
lods
enter
mov
aad
push
and
cmp
leave
stos
out
leave
lret
inc
sub
es
popf
clc
mov
imul
sub
dec
mov
xchg
lods
ficomps
xor
test
notb
and
sub
pop
inc
push
cmc
or
outsb
or
loope
cmpsl
push
cmp
mov
pop
aaa
das
dec
ret
call
cld
out
cltd
mov
out
jbe
dec
pushf
push
inc
mov
lret
fwait
je
je
fadds
mov
sbb
test
rolb
mov
and
mov
adc
rorb
push
mov
enter
push
mov
stos
cmpsl
enter
fnstcw
out
mov
xchg
clc
xor
cmp
bound
push
lret
mov
mov
xor
fnsave
mov
lds
adc
mov
push
sub
xchg
je
or
push
hlt
push
adc
dec
leave
loop,pt
push
bound
jmp
add
push
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
jmp
or
icebp
jno
out
jns
mov
mov
mov
jle
mov
sbb
lds
imul
jl
into
cltd
shrb
sub
les
xor
push
lret
jg
adc
pushf
into
jne
jmp
dec
inc
sbb
js
push
inc
in
xchg
arpl
adc
lods
popa
dec
movsb
cmp
inc
mov
lcall
movntps
cmp
lcall
loopne
push
push
dec
arpl
or
xchg
fimull
dec
movsl
mov
jp
push
in
ret
dec
mov
mov
mov
or
in
jne
test
dec
dec
jb
sub
lods
test
ret
adc
lret
pop
cmpb
inc
decb
add
mov
jns
repz
dec
pop
mov
or
sbb
jbe
insb
data16
out
add
inc
pop
in
bound
movb
test
in
mov
xlat
int
sti
push
xchg
and
cmpb
enter
orl
pop
dec
mov
or
sbb
and
mov
sbbb
mov
xchg
repnz
mov
shr
push
out
lea
xchg
pop
repz
mov
mov
cmp
and
in
out
mov
jbe
xlat
mov
sub
outsb
push
fsub
bsr
mov
adcl
xor
add
cmp
movl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
inc
mov
mov
xor
xor
sub
add
add
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
imul
mov
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
ret
movsl
shll
dec
incl
sarb
jg
jle
mov
jge
push
and
xor
stc
sub
inc
jecxz
xchg
cmovp
negb
call
sub
das
push
cltd
push
adc
mov
insl
aad
xchg
ljmp
inc
rclb
or
shll
leave
in
pop
add
ja
in
idivb
imul
cmpsl
dec
dec
or
mov
push
xlat
mov
shl
mov
out
jle
pop
leave
jne
jae
xor
xchg
inc
fs
out
xchg
mov
dec
pop
mov
repz
pop
fcmovu
xchg
sub
add
clc
sub
and
lret
or
lods
cmp
mov
xor
hlt
jno
add
adc
or
pop
push
mov
and
push
mov
adc
mov
xchg
push
jne
lock
dec
cmp
fwait
out
push
or
cmp
daa
mov
or
jmp
xchg
xor
inc
xchg
mov
fcoms
sti
sub
int3
adc
in
inc
les
jns
fs
lahf
inc
loop
fcomps
adc
or
addb
or
movsb
shlb
lret
jns
mov
out
les
idivl
jl
mov
mov
xchg
sbb
mov
jns
sub
push
popf
fidivl
xchg
pop
movsb
js
fadd
and
push
test
sub
cmp
ja
mov
jmp
mov
mov
jmp
mov
dec
jno
les
popf
imul
jle
mov
sbb
sbbb
jo
nop
mov
sarl
addr16
or
and
jp
adcl
pop
push
xorl
xchg
stos
js
jne
jge
add
fidivs
cltd
lcall
jmp
sub
jns
pusha
hlt
je
sbb
xorb
push
xchg
pushf
mov
dec
push
or
int3
cmp
cmp
arpl
mov
pop
sub
add
inc
test
int
jns
popa
iret
ss
ds
rcpps
aas
mov
add
stos
adc
push
mov
push
cld
xlat
cmpsl
add
dec
mov
insb
stc
mov
in
insb
outsl
cmpsb
mov
add
mov
pop
xor
jnp
jg
sub
jge
xchg
in
out
sti
push
in
fldenv
daa
jmp
add
mov
out
and
adc
mov
cli
push
sbb
int
fsubrp
lods
int
jo
js
loope
mov
iret
jnp
in
adc
pop
xor
arpl
jecxz
mov
push
pop
xchg
mov
stos
hlt
or
sub
movsb
mov
xchg
scas
xor
xchg
mov
sbb
adc
incb
mov
sub
inc
ja
pextrw
xor
repz
jne
add
je
mov
lret
mov
mov
rcl
outsb
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
imul
mov
jno
loopne
cmp
test
jle
mov
jle
sbb
aad
sbb
out
mov
cmc
iret
outsl
xor
fstpl
testb
jne
cmp
fdivrl
mov
xchg
lods
int3
jmp
sahf
lret
subb
hlt
fisubs
jp
das
mov
ljmp
clc
cmp
insb
mov
add
add
xor
ror
mov
jnp,pt
inc
fdivp
dec
outsl
rcrl
inc
cltd
dec
jge
xchg
mov
lahf
fneni(8087
fwait
push
adc
fcmovnb
dec
add
add
test
sbb
pop
adc
inc
imul
inc
add
push
or
test
insl
sub
movsl
icebp
sub
fbstp
or
inc
or
mov
xor
into
repnz
cmp
inc
popa
dec
mov
das
mov
movsl
sbb
rcl
fmull
jo
insl
sub
test
divl
xor
imul
inc
flds
shll
jb
loop
and
add
push
enter
jmp
inc
leave
add
test
xchg
je
test
je
push
out
inc
stc
push
xchg
pop
or
cli
fidivrs
xchg
push
adc
test
push
or
cmpsb
cmpb
mov
adc
sbb
shl
mov
add
mov
sbb
lds
fists
or
ja
mov
jmp
mov
mov
xor
xor
jmp
in
test
call
and
int
jle
jg
jle
jo
in
mov
into
adc
cli
add
js
in
lods
mov
adc
push
xchg
lods
jge
lods
mov
mov
into
loop
sbb
cmp
repnz
dec
wrmsr
fimull
jmp
shll
in
insb
repz
les
fsubrs
jle
sbb
sbb
fisubrs
push
ljmp
shrb
pop
add
and
cmp
and
and
mov
push
push
pop
adc
jb
stc
cmpsl
jl
notb
cmp
shrb
xchg
pop
enter
sbb
js
and
lret
sti
or
or
pop
test
mov
push
inc
mov
xlat
pushf
addr16
int3
push
mov
sti
jne
xor
dec
inc
mov
insb
lds
sbbb
lret
xchg
dec
mov
adc
pushf
fwait
sti
insb
mov
inc
sub
mulb
in
mov
jno
sub
add
jl
push
jae
mov
out
sbb
cmp
sub
and
inc
rorl
shrb
dec
sbb
mov
bound
sarb
mov
xchg
inc
xchg
stos
sub
cmp
ss
sbb
insb
ljmp
or
push
imul
lret
lcall
xchg
inc
cmp
cmp
mov
xchg
cmc
in
pusha
cmpsb
dec
cmp
lock
ja
cmpl
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
jmp
push
mov
jmp
lret
mov
jle
jbe
int
fucomp
or
inc
cltd
jns
add
fsubrl
pusha
les
mov
cmovb
sbb
scas
nop
in
lret
xlat
and
stos
jno
and
int
adc
push
xor
test
mov
pop
int
icebp
sbb
dec
or
fiaddl
xchg
push
mov
mov
jle
xchg
mov
cli
daa
loope
in
push
mov
lret
jecxz
popf
adc
xchg
xchg
js
lcall
outsl
jecxz
add
imul
inc
stos
jb
push
adc
pop
mov
rcrl
aaa
les
popa
sbbl
mov
orb
mov
or
hlt
jae
out
cmp
dec
mov
sub
inc
lea
mov
mov
je
js
cmp
in
or
xor
fnstcw
lahf
fmull
or
insb
push
pop
mov
and
cmp
ret
lret
rclb
sbb
inc
mov
cmpb
xchg
mov
sarl
push
push
pop
jne
add
cmp
gs
push
lock
mov
dec
mov
and
mov
fists
xlat
iret
inc
aam
sbb
xor
dec
mov
test
insl
into
mov
sub
inc
mov
shlb
addl
jo
cs
xor
cmp
mov
mov
lods
add
add
add
push
push
jl
ljmp
enter
jg
jle
lcall
ljmp
mov
jno
rcrl
jae
lods
lock
mov
dec
fidivrs
insl
jmp
pushf
repz
pop
xor
mov
dec
xor
fldl2t
cmp
jns
orb
fiaddl
aam
pop
lret
cmp
dec
stos
jns
mov
out
lret
mov
jp
sti
shl
jne
add
mov
pop
pop
inc
cmpb
jmp
test
ja
mov
ret
cmp
xchg
jg
lea
addb
push
int
into
sub
xchg
jne
pop
push
cmp
sahf
mov
push
push
pop
ret
imul
test
sub
into
imul
or
xor
push
mov
xor
test
pop
xchg
xor
pop
jae
xchg
addb
iret
adc
pop
mov
pop
mov
jp
inc
rcrb
movsb
cmp
push
push
sti
add
mov
push
clc
fwait
sbb
fisttpll
movsl
jno
mov
outsl
mov
jno
insl
stos
loope
jnp
sub
sti
adc
std
test
loopne
iret
push
xor
add
repnz
push
loopne
out
add
pop
fnstenv
sti
pop
mov
adc
bsf
dec
cmp
cmc
daa
xchg
lcall
add
cmp
inc
xor
xor
lock
lds
icebp
pop
aad
cmp
mov
xlat
mov
mov
sub
jmp
and
xor
sub
sub
push
leave
jle
mov
jle
dec
int3
insl
repz
mov
jns
sbb
test
enter
cmp
mov
fmuls
sbb
push
adcl
lds
jbe
lahf
push
cmp
push
push
dec
mov
stos
inc
in
push
jge
or
xor
mov
xor
mov
mov
sarl
push
push
sbb
dec
bswap
sti
loope
fstpt
fidivrl
scas
imul
test
sub
dec
shll
fstpt
or
jnp
cmp
push
pop
push
sbb
mov
stos
stos
sahf
ss
imul
sahf
dec
movsb
hlt
mov
add
ss
dec
mov
ljmp
add
or
jno
movsl
mov
insb
pushf
push
ljmp
mov
push
push
mov
in
pusha
imul
pop
jne
push
dec
dec
push
mov
add
stos
mov
lock
sarl
inc
push
mov
ret
inc
mov
bound
dec
shll
cld
mov
mov
incl
mov
sbb
clc
dec
inc
push
xchg
dec
dec
or
popa
out
push
cmpsb
call
ret
pop
aaa
ds
dec
gs
arpl
add
dec
fwait
inc
fistps
sub
inc
jmp
sbb
shrb
push
adc
addb
pop
gs
inc
push
dec
pushf
aas
outsb
popa
mov
in
inc
pop
je
sub
repz
pop
mov
shrl
out
scas
cwtl
je
xchg
cld
dec
call
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
jmp
add
jne
mov
push
cmp
mov
jle
mov
ficoml
xor
mov
sbbl
scas
test
scas
jg
es
pusha
mov
imull
add
shll
push
cmp
or
clc
mov
push
gs
rolb
sub
pop
pop
inc
ss
cmp
dec
inc
cs
ja
push
cmp
sub
sub
push
sub
movsb
ljmp
xor
daa
int
fisubl
testb
cs
xchg
shll
inc
nop
lock
or
xor
in
sbb
mov
inc
or
imul
loopne
and
mov
xchg
sub
mov
pop
cmpsl
nop
cs
ret
call
add
mov
jp
call
fwait
mov
iret
loop
sub
lret
rolb
aam
adc
aas
pop
mov
adc
xorb
and
cmc
outsb
inc
outsb
mov
xchg
jmp
cmp
and
test
jno
mov
xor
push
cmpsl
fcmovnu
insl
mov
dec
lods
pop
je
jp
out
sbb
mov
xor
xchg
xchg
mov
lcall
push
cmp
mov
popa
out
insl
add
xchg
jge
mov
int3
jne
mov
adc
out
xor
cmp
inc
cmc
cld
adc
aam
dec
in
mov
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
mov
je
jmp
or
aad
jle
jg
jle
andl
mov
cli
insb
add
push
xor
out
rcll
lcall
mov
icebp
and
and
inc
aaa
add
dec
insl
xor
inc
lcall
adc
das
out
icebp
lea
fnstsw
mov
dec
jmp
dec
add
in
mov
out
ret
adc
push
fsubp
loop
mov
int
cmp
test
push
shlb
pop
xchg
jmp
adc
sarb
dec
daa
icebp
test
adc
int3
insb
scas
std
cmp
std
add
fnstenv
dec
sbb
dec
mov
lcall
idivl
test
xchg
mov
inc
repz
mov
mov
bnd
negb
xor
sub
dec
and
pop
leave
in
mov
aas
jle
ss
mov
mov
adc
mov
js
cmc
popf
jo
pop
push
mov
sbb
insb
mov
fbld
sbb
mov
loope
lea
subl
es
mov
pop
cltd
sahf
dec
stos
loop
iret
and
cwtl
cmpsl
adc
jno
push
lds
aaa
dec
scas
faddp
es
aaa
cmp
xchg
and
cmp
decb
mov
cmp
xchg
pop
push
xchg
dec
sbb
ret
mov
stc
imul
mov
xor
sub
jmp
decl
xor
xchg
lea
test
jle
mov
jle
rclb
stos
andl
jge
pop
stos
rorl
jmp
movsb
mov
pop
popa
fcoml
out
cs
pop
lahf
or
xchg
push
insl
push
adcb
loop
add
jge
mov
test
sti
adc
icebp
cmpsl
fcoml
dec
movw
movsb
pushf
arpl
xor
pop
movsl
jno
clc
addr16
je
arpl
mov
sub
stos
cmpsl
push
jne
add
adc
daa
aas
or
dec
in
sub
fldcw
pop
cmpsb
outsb
test
int
data16
iret
sbb
pop
push
popw
scas
pop
jp
push
out
xchg
lods
popl
pop
mov
sub
mov
pop
movsl
fildl
xchg
mov
data16
adc
cltd
outsl
int
add
orl
sbbl
push
in
fsubr
test
mov
mov
adc
push
ja
pop
and
inc
aam
and
out
mov
into
sbb
scas
push
pop
xchg
xchg
jg
push
cmpsl
sub
jo
popf
jecxz
cmp
sti
dec
loop
add
xchg
aas
in
add
mov
fcomps
pop
insb
aas
dec
push
bound
pop
ret
xor
lret
loop
stos
les
sbb
sbb
push
shrl
fmuls
stc
mov
pop
cmp
or
mov
push
or
jns
and
cmp
xor
hlt
mov
cs
or
lods
jo
mov
add
cli
jbe
mov
mov
xor
add
imul
mov
xor
jmp
and
inc
xor
ret
das
loop
notl
jg
jle
xchg
push
loope
rorb
mov
mov
and
ret
sbb
sub
mov
out
mov
bound
shll
je
push
push
xchg
mov
sbb
or
pop
stos
xchg
mov
dec
cmpsl
inc
insb
test
xrelease
scas
xor
daa
xor
mov
daa
and
mov
xorl
push
nopl
outsl
mov
cs
cmp
fwait
cmp
push
dec
lahf
loopne
pop
pop
mov
std
mov
icebp
push
mov
loope
mov
push
push
aaa
fwait
roll
insl
sub
adc
lds
add
and
jnp
xorb
mov
lret
andl
sbb
add
jge
popa
pop
loopne
testl
movsl
je
sbb
out
mov
stc
daa
mov
lds
mov
fwait
ja
int3
jp
mov
and
xchg
xchg
ljmp
js
je
push
adc
xor
leave
cmp
scas
scas
fiaddl
por
int
test
inc
jmp
adc
or
and
push
divb
jns
mov
pusha
xchg
xchg
xor
or
mov
out
inc
cmp
cld
pop
push
cld
push
test
jg
push
int
les
scas
xor
cli
sub
data16
scas
scas
push
cld
pop
leave
push
mov
xlat
mov
lea
mov
mov
xor
mov
sub
add
mov
jmp
adc
das
test
xor
mov
ret
cmpxchg
jle
mov
jle
pop
jmp
aas
or
sti
bound
jnp
mov
push
inc
inc
aad
jp
rep
dec
push
mov
std
cmp
int3
mov
push
jno
aam
je
mov
and
mov
xchg
sbbb
lcall
ret
out
rorb
jo
fldcw
loop
xchg
popa
push
nop
in
sbb
cmp
std
add
or
lods
cmp
ficompl
xchg
fistps
in
push
cmp
inc
mov
xor
ds
add
sbb
sti
add
or
jp
and
gs
xchg
jg
fadd
imul
xchg
pop
fldl
aaa
inc
xchg
inc
insl
jb
jl
mov
mov
pop
iret
ss
cmpsb
mov
dec
or
dec
cs
jl
out
or
push
inc
and
sub
mov
xchg
or
test
mov
scas
cmpsb
decl
lret
imul
cwtl
fst
push
cli
bound
imul
stc
repz
lods
cmpsb
xchg
dec
movsb
jl
jge
lock
inc
jns
inc
sbb
movsb
pop
adc
xchg
addl
shr
insb
pop
pushf
cmp
pusha
loopne
cli
lret
xlat
inc
inc
pop
push
add
jge
or
mov
mov
and
loope
push
push
bswap
and
push
and
sbb
sbbb
out
outsl
lds
jmp
or
addr16
jne
mov
mov
mov
fistpll
mov
jle
add
mov
icebp
xchg
lods
mov
pop
inc
mov
mov
out
mov
mov
loope
sbb
enter
cmp
bound
cmc
push
xor
xor
fwait
mov
js
mov
aad
adcb
les
std
shr
pop
movsb
and
mov
aad
inc
mov
in
sub
or
ja
push
cwtl
push
inc
pop
in
xchg
sub
pop
pushf
imul
inc
xor
xor
xor
jp
sti
xor
jg
mov
add
xchg
sbb
sbb
fsub
jns
and
test
lcall
test
add
xor
lods
mov
dec
xchg
add
sub
adc
shr
pusha
je
es
pop
js
mov
mov
outsl
xchg
add
xchg
inc
inc
mov
daa
inc
gs
loopne
or
jecxz
fldcw
and
aaa
dec
jl
and
pop
xor
data16
and
repz
push
push
mov
subl
fsubrp
aas
pop
shlb
xor
cmp
stc
out
jne
pop
inc
sarb
or
push
cwtl
iret
outsb
cmpl
xchg
mov
jb
shlb
stc
jae
inc
jg
cmp
sbbb
rol
fnstcw
xor
lods
push
xchg
sub
out
lods
enter
outsb
loop
xchg
clc
cmp
dec
mov
leave
jmp
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
movl
jne
cmp
movl
jne
push
call
sbbl
push
orl
call
adcl
test
je
movl
push
xorl
push
orl
call
push
mov
mov
and
mov
movl
adc
lea
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
subl
mov
lea
mov
mov
sbb
mov
mov
mov
mov
mov
and
mov
orl
push
add
mov
adcl
xor
orl
push
neg
mov
subl
add
movl
mov
mov
mov
cmp
mov
movl
je
and
mov
addl
xor
add
orl
imul
mov
jmp
push
call
adcl
test
je
xor
movl
jmp
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
add
mov
mov
adc
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
notl
mov
xor
add
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
xor
addl
add
movl
cmp
movl
jne
sbbl
pushl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
add
mov
mov
xorl
mov
sub
mov
mov
xor
mov
mov
add
mov
mov
mov
movl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
pushl
push
push
push
call
cmpl
jb
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xorl
push
push
mov
xor
xor
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
jmp
pop
push
lods
sahf
mov
push
push
dec
inc
mov
jle
jge
jle
pop
add
enter
stos
xchg
mov
adc
push
xchg
js
jl
xchg
xlat
nop
lcall
push
cmpsb
aam
sub
jb
mov
sbbl
imul
jp
adcl
cli
fldcw
daa
jae
ret
lret
arpl
sbb
xlat
popf
iret
and
sbb
in
std
xchg
sub
sub
imulb
mov
cwtl
popf
leave
cld
call
fists
loop
mov
popa
push
and
mov
push
xor
xchg
repnz
idiv
sbb
mov
cmc
sbb
pushl
mov
cmc
push
cltd
cmpsb
repz
and
jb
jl
rcrb
mov
imul
mov
xchg
pusha
cmp
cmp
cmp
movsl
mov
mov
pop
or
mov
arpl
inc
int
sbb
jecxz
cmc
outsl
cwtl
mov
stc
and
fsubrs
or
insb
dec
mov
xor
or
jo
mov
mov
jl
inc
adc
mov
jp
mov
loopne
push
es
and
gs
fisttpll
fcompl
les
and
cmpsb
cwtl
add
mov
ret
jge
push
int
xor
hlt
aas
pop
xchg
inc
mov
or
cmpsl
into
movsb
mov
flds
stc
stc
inc
jl
mov
adc
das
lret
sbb
jge
rcrl
xor
dec
lods
inc
mov
ljmp
add
mov
sbb
mov
fs
sti
out
sbb
fistpll
lock
repz
add
cld
hlt
arpl
or
out
xchg
add
sub
mov
lsl
cmpsl
pushf
push
push
jl
pop
or
jmp
sub
jp
sti
dec
shrl
bswap
push
mov
cmp
pusha
stos
mov
push
ret
mov
sarl
cmp
mov
insl
push
nop
rdpmc
movl
sbb
popf
xchg
imulb
outsb
pop
pop
or
jle
xchg
xchg
xor
hlt
iret
or
cs
cli
adc
cmpsb
mov
insl
fistps
iret
jnp
and
add
sbb
jb
loope
mov
pop
adc
stc
jle
out
fcoms
idivl
mov
pushf
inc
mov
out
add
jno
adc
clc
jbe
and
fdivr
mov
xlat
ret
aad
cs
addr16
sub
out
je
mov
aad
push
mov
jne
jae
insb
cmc
jo
in
mov
stos
xlat
mov
inc
stos
or
xchg
dec
addr16
xchg
in
mov
pop
or
cltd
leave
jl
add
sbb
xchg
push
xchg
jno
jg
mov
aam
aas
jl
jle
or
jnp
xchg
mov
dec
xchg
lret
add
dec
xchg
sbb
mov
fstl
cmp
or
lret
sahf
push
pop
unpckhps
out
xchg
or
mov
sbb
add
mov
add
mov
mov
addl
lea
sub
mov
movzwl
and
mov
addl
mov
jmp
scas
mov
push
jb
pop
xor
fdivrs
jge,pn
jle
aam
sub
push
test
push
jns
cs
repnz
fisubrs
mov
movsb
cmc
mov
mov
mov
adc
or
hlt
cmc
cmp
jne
dec
and
out
orb
cmp
call
in
or
test
mov
sahf
dec
jge
dec
cli
pop
popa
pop
push
push
adc
mov
cmp
cmp
pop
filds
es
je
cmovbe
and
loope
stc
add
jmp
add
sti
mov
pop
insb
sahf
mov
sub
popf
add
xor
test
fwait
ret
inc
scas
jns
adc
je
sbb
jns
sub
xchg
push
shrb
xor
lret
push
dec
repz
jp
out
xor
popa
add
xchg
xor
pop
pushf
jg
in
jp
nop
ficomps
jae
push
js
popf
out
test
xor
add
mov
stos
cltd
pushf
mov
into
dec
adc
mov
outsl
sub
mov
jns
enter
push
mov
pop
ljmp
sub
pop
jp
cmpsl
hlt
popa
and
fs
dec
adc
pop
in
in
mov
add
xor
xchg
stos
leave
sbb
shl
xor
cmp
movsb
xchg
nop
sbb
push
jecxz
mov
enter
imulb
mov
jl
sub
out
pop
adc
mov
in
test
popa
mov
fcmove
lds
lods
or
popf
cmp
lahf
push
and
stos
dec
push
jge
mov
and
fwait
sti
adc
hlt
adc
mov
push
sub
push
add
js
lret
mov
jo
sub
jmp
sbb
ljmp
int
and
pop
movsl
mov
mov
fwait
and
addr16
in
jecxz
sub
out
cmp
or
and
cmp
test
jle
pusha
mov
out
sbb
cmp
sti
jno
bound
rcl
mov
out
mov
add
sbb
out
clc
mov
lds
add
pushf
mov
xchg
cmpsb
addr16
leave
jmp
lock
jecxz
ljmp
push
std
roll
stos
xor
jns
push
in
sub
gs
loope
mov
bound
or
adc
ds
cli
push
std
aaa
outsl
sti
or
pop
clc
scas
mov
aam
mov
inc
add
fwait
pop
stc
and
notb
js
cmp
sbb
lds
mov
xor
push
xchg
ja
stos
adc
fbld
aas
push
jp
xor
or
push
pop
test
aad
push
cmp
in
aam
iret
adc
xchg
jge
cmc
lcall
mov
cmc
lods
mov
pop
stc
aaa
lods
inc
lock
aad
imul
jmp
push
or
int3
popa
hlt
jno
jae
and
mov
pushf
iret
cmp
jle
jge,pn
jle
mov
fs
hlt
lock
sub
push
hlt
add
push
lock
cltd
jnp
rclb
and
mov
pop
outsl
fs
cwtl
xlat
push
into
inc
dec
cmp
leave
fs
xchg
in
push
jp
mov
or
outsl
push
mov
notl
pop
imull
push
adc
loopne
imul
cli
mov
mov
push
inc
sbb
insb
or
fnstsw
xor
add
jp
shll
in
movsl
andl
xchg
pop
xchg
scas
daa
mov
sbb
popa
insb
cmp
cmp
lcall
ret
xor
ror
xor
lcall
sub
rorb
mov
daa
adc
imul
shlb
je
cmpsl
stos
xor
xchg
gs
xchg
adcl
popf
push
test
xchg
adc
scas
mov
hlt
scas
or
jmp
and
flds
add
insl
pop
xchg
lcall
sub
sub
mov
iret
mov
lret
cs
lret
sarb
or
mov
push
ret
xor
cmp
test
or
or
mov
movsl
xor
mov
push
push
in
xor
mov
not
outsl
mov
push
mov
outsl
out
adc
sar
shrl
pop
hlt
pushf
fidivs
mov
jmp
adc
xchg
call
pop
xchg
leave
in
aam
outsb
insl
test
mov
adc
mov
push
dec
sbb
in
jge
bound
jge
and
and
xor
jns
mov
outsb
adc
pusha
stos
jle
ret
cmpsl
clc
xor
sbb
jno
cmp
das
sti
bound
in
sub
stos
shlb
inc
jne
sub
mulb
cmpsl
ret
mov
scas
stc
incl
imul
sub
fdiv
mov
int
jb
mov
fnsave
lret
xor
shll
pop
adc
repnz
adc
xorl
xchg
mov
xor
mov
rcrl
int
cmpsl
pop
add
sti
fstpl
jge
mov
add
mov
std
ds
sub
movsb
sub
adc
loop
pop
cmpsl
test
ds
lret
xchg
fs
sbb
imul
adc
adc
mov
nop
lret
es
jl
dec
call
xchg
in
fstl
mov
fdivrs
insb
movsl
mov
int3
xor
ds
jmp
inc
subb
test
mov
jb
out
mov
mov
xchg
dec
out
pop
mov
inc
lea
xchg
das
insl
sub
dec
repz
mov
popw
cmp
inc
and
pop
je
jmp
and
adc
jecxz
add
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
sub
jmp
shrb
mov
xor
jne
ss
pop
jmp
jge
jle
xchg
sub
rorl
jnp
jbe
sub
loopne
pop
iret
imul
xchg
aaa
adc
shlb
mov
lret
adc
dec
mov
loopne
aam
mov
push
ficompl
inc
scas
adc
out
repz
dec
xchg
imul
les
ret
jg
nop
lock
sahf
xchg
or
daa
bound
sti
rcrb
arpl
pop
imul
rolb
cmp
lcall
push
ficoml
jnp
stc
inc
push
push
cs
pop
daa
push
inc
mov
insb
outsb
bound
loop
cli
or
xor
dec
ficoml
and
out
sub
out
hlt
mov
sarl
dec
or
scas
mov
cmp
in
popf
ret
xchg
inc
in
in
or
arpl
push
push
adc
dec
mov
pop
inc
rcl
les
cli
and
mov
bound
loopne
jecxz
push
scas
adc
in
adc
lods
outsl
sti
or
out
cmp
adc
cmp
dec
or
add
jg
cmp
push
dec
fwait
mov
into
push
sub
fstpl
je
loopne
sub
aas
sti
outsb
cmpsb
xchg
in
ret
dec
pop
cmp
mov
jbe
inc
lods
inc
pushf
fwait
movsl
adcb
clc
pop
pushl
cmpsb
jle
rol
pop
arpl
aas
call
mov
rol
outsl
decl
das
ret
adc
cli
jno
ret
inc
add
dec
xchg
dec
outsl
orl
cmpsb
mov
xchg
pop
dec
lahf
cmc
push
jge
jnp
adc
cmp
mov
push
pusha
movsl
push
mov
lcall
repz
pop
rcrl
ja
inc
sub
hlt
ret
cs
jmp
sub
jne
mov
pop
ret
push
movsb
mov
xor
lods
sub
cmpsb
loope
jp
push
rorl
js
inc
std
test
testb
cmp
std
push
or
and
mov
dec
xchg
jo
popa
push
mov
js
in
scas
xor
out
stos
lea
or
aaa
push
shrb
or
fst
jl
mov
push
repnz
mov
stos
stos
scas
fists
xchg
jnp
push
inc
ja
cmc
lock
out
sub
loopne
and
add
lock
xchg
lods
je
enter
push
sbb
mov
dec
xchg
adc
outsb
les
pusha
pop
data16
andl
xchg
jecxz
test
mov
iret
sbb
loop
sbb
mov
stc
or
push
imul
out
cmpsb
push
cmp
daa
push
jns
xor
mov
sub
inc
mov
in
sbb
or
arpl
mov
inc
add
jb
in
dec
aad
scas
in
or
dec
inc
mov
and
cmc
hlt
or
xchg
in
inc
dec
popf
ret
lea
mov
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
xor
addl
add
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
fsubrl
or
pop
or
mov
jge,pn
jle
xchg
int3
and
pop
in
dec
out
adc
add
fidivl
xchg
pop
dec
mov
shrl
in
mov
cmpsl
mov
xchg
push
cmp
sub
mov
jb
and
dec
mov
jge
repnz
fstpl
xchg
stos
jns
fdivrl
jmp
std
jb
movsb
xorl
iret
in
sub
cmpsl
test
xor
jge
leave
loope
mov
sbb
ljmp
cmp
xchg
filds
leave
repz
jmp
mov
stos
xor
fdivl
cwtl
mov
cmp
adc
xor
loopne
fwait
mov
sbb
or
loope
lret
push
test
out
mov
jo
mov
fs
push
or
push
pop
jg
test
adc
lock
aad
ljmp
or
cmp
push
mov
call
outsl
ret
push
push
push
stos
push
inc
sbb
add
adc
test
call
adc
mov
xchg
popf
arpl
repz
pop
cs
movsl
cmp
sti
hlt
sbb
fstl
lea
push
and
inc
fnstsw
icebp
in
cmp
out
in
sub
xor
xor
or
xor
mov
jbe
pop
cmp
lods
daa
cmp
movb
cmpsb
clc
mov
mov
test
fbstp
mov
fsubr
or
fdivl
or
mov
fs
or
xor
jb
or
dec
loope
xchg
or
insb
and
fildl
mov
jb
xchg
aam
aad
jp
int3
iret
stc
dec
adc
aad
pop
sbb
jo
or
idiv
mov
mov
xor
sbbl
sbb
push
in
cli
jecxz
into
mov
jl
stos
or
dec
xor
jnp
sub
sub
adc
jl
xchg
pop
std
push
fwait
jmp
mov
pop
jecxz
adc
pop
dec
aas
dec
cmp
cmp
jbe
loop
push
cmp
pop
arpl
lock
and
out
add
and
lcall
or
mov
lock
mov
cs
out
subb
icebp
dec
push
or
fs
arpl
mov
add
mov
fdivs
aam
addl
jle
and
adc
arpl
sbb
inc
adcb
rolb
nop
scas
fildl
mov
jg
in
inc
mov
dec
sbb
es
xchg
add
jnp
icebp
adcl
dec
xorl
xchg
xor
push
push
dec
adc
aas
leave
xor
xor
cmpsl
jle
mov
cmp
mov
stc
adc
addb
xor
leave
pop
cmpsb
sbb
push
je
sub
and
jl
inc
add
jmp
leave
inc
mov
inc
xor
icebp
pushf
cmp
jbe
dec
in
jle
jge,pn
jle
call
mov
push
add
jle
mov
mov
repz
inc
and
xor
packsswb
lods
ljmp
dec
adc
into
sahf
inc
sbb
lret
push
leave
xchg
xchg
inc
imul
clc
out
fcomps
mov
or
cmpsb
out
mov
xor
cmp
inc
mov
or
aaa
cmpsb
xor
stc
mov
hlt
test
aas
cmp
sbb
jle
cmp
dec
add
xchg
mov
repz
inc
popf
or
in
xor
in
outsb
out
sbb
push
dec
or
jl
jno
adc
movsl
jns
fstpl
push
or
filds
mov
insb
fwait
loop
push
cs
jb
adc
pop
in
test
xchg
pop
sbbb
and
sub
cmp
mov
out
imul
jmp
pop
xchg
sbb
adc
divb
xchg
test
adc
mov
rcll
out
jne
add
aad
adc
cld
aaa
jo
xchg
add
loope
decl
addb
ja
fmuls
adc
sub
sub
xor
push
daa
clc
aaa
fdivp
insb
cmc
mov
ss
fcomps
mov
xchg
cltd
sbbl
das
or
inc
insb
push
push
mov
stc
mov
insb
cmp
mov
jg
ss
inc
lret
pop
scas
sarl
stos
pop
jle
jne
inc
inc
leave
insl
ret
pop
test
adc
sub
mov
in
dec
inc
scas
call
test
imul
loope
ret
add
das
add
inc
cmp
and
mov
loope
loope
lock
imul
dec
dec
push
ret
pop
std
xor
xchg
fisubl
popf
mov
push
js
push
dec
iret
movsl
sub
dec
and
insb
pop
dec
xor
loope
xchg
incl
notb
sub
mov
and
adc
shll
leave
std
clc
je
ficomps
mov
pop
loop
lcall
mov
sbb
dec
stc
mov
fdiv
jg
and
movsb
lds
loope
das
test
lret
lret
aad
fs
insb
mov
divl
jnp
je
outsl
pusha
adc
test
sbb
mov
or
push
sub
aad
mov
test
cmpsl
enter
push
push
jmp
lods
inc
jno
adc
mov
ds
adc
jle
mov
xchg
sbb
mul
add
leave
mov
xchg
or
into
clc
lcall
pop
loope
add
cli
cli
dec
js
jbe
call
ficoml
test
adc
neg
scas
pop
repnz
pop
outsl
cwtl
insl
imul
dec
sbb
lock
adc
aam
subb
sbb
out
mov
mov
mov
movzwl
add
movl
mov
jmp
js
adc
jae
loopne
lfs
or
xor
loope
call
jle
test
daa
into
xchg
cmp
fstpl
jle
sbb
imul
stos
adc
inc
pop
into
and
jmp
pop
sahf
shlb
das
cltd
daa
rcll
sub
pushw
dec
shrb
xor
or
mov
inc
adc
jae
push
jg
push
cmp
shrl
mov
pop
pop
xor
cld
lock
loopne
out
inc
add
es
jecxz
fcomp
dec
out
fsts
jl
jp
xchg
pop
pop
xchg
cmp
push
test
std
sbb
push
nop
jle
pop
lahf
cmc
jg
pushf
loopne
mov
clc
scas
xor
inc
je
lods
mov
and
push
pop
das
mov
pop
and
test
mov
movsb
test
lods
xchg
cmpsb
incl
xchg
jg
cld
scas
repz
aad
mov
ljmp
and
xchg
adc
loope
mov
mov
dec
pop
adc
pop
sbb
popf
std
xchg
shll
cs
add
imul
pushf
inc
adc
push
mov
cmp
call
shrb
out
mov
fmuls
sbb
adc
scas
sahf
dec
rep
outsb
dec
idivb
inc
mov
sub
dec
mov
je
mov
adcb
cmp
testb
sbb
ficompl
mov
xchg
icebp
pusha
loop
mov
in
cmpl
roll
xchg
mov
add
imul
test
and
popa
fcos
push
nop
outsl
and
mov
fs
scas
lds
xor
inc
outsb
imul
mov
inc
and
fsubrs
xor
negb
mov
cld
test
sbb
mov
aaa
int
shrb
scas
out
pop
sbbb
je
xchg
repz
shll
dec
jo
out
push
sbb
inc
mov
pusha
and
ljmp
mov
repz
xchg
movsl
pop
lds
pushl
cmpl
cmp
cmp
pop
loope
pop
sbb
iret
dec
mov
mov
outsb
mov
mov
bound
fnstcw
das
xsaves
adc
mov
repnz
sub
shll
movsl
rorb
mov
push
mov
mov
pop
movsb
js
cmpsl
inc
fwait
cmp
jmp
iret
xor
cmp
pop
sbb
adc
sbb
imul
mov
imul
mov
xchg
sbb
pop
push
notb
cmp
adc
xor
neg
or
mov
mov
push
dec
add
adcb
out
sti
dec
test
push
stc
pop
shll
inc
adc
ret
mov
inc
imul
jge
lea
xchg
xchg
clc
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
jmp
cmp
pop
dec
push
aam
int3
aam
pop
int3
sub
jle
jge,pn
jle
push
mov
popa
outsb
sub
xlat
imull
mov
sbb
test
call
divl
and
mov
rcll
jmp
mov
push
mov
pop
and
je
outsb
jge
or
out
jnp
jmp
ret
js
vunpcklpd
xorb
dec
pop
sbb
add
into
daa
lahf
leave
lods
jbe
out
add
lods
pop
jg
ret
mov
push
ret
aad
daa
jge
cld
loopne
mov
lods
ret
sub
clc
push
movsb
lods
inc
dec
xor
pop
and
pusha
pushf
pop
in
jp
sub
dec
icebp
fldenv
sub
mov
push
add
mov
out
mov
add
jp
sbb
imull
or
repz
out
sub
pop
mov
fwait
cmp
fld
jnp
outsl
adc
jecxz
sbb
sahf
lods
xchg
lds
addr16
cs
adcb
jno
mov
js
and
out
out
pusha
movb
cltd
xor
pop
sbb
cmp
jp
sti
test
xor
shr
mov
xor
lods
hlt
scas
icebp
test
lahf
pop
ss
mov
pop
andb
outsb
lds
into
cmp
stc
sbb
scas
aam
pop
mov
jo
outsl
pop
in
pop
mov
xchg
aas
dec
xor
push
jno
aam
add
lock
push
sbb
push
mov
adc
cli
dec
insl
movsl
sub
jno
pop
out
test
rcll
popa
push
mov
jmp
sbb
movsl
sbb
stc
and
sbbl
jne
popf
lret
lods
sub
loope
inc
int3
and
mov
aaa
mov
pop
movl
jbe
jmp
in
pop
stos
fldcw
in
jbe
mov
mov
pop
into
mov
in
adc
sbbl
xchg
pop
insl
cwtl
pop
pop
push
lods
mov
lret
hlt
bound
pushf
adc
loope
daa
aam
and
inc
ja
idiv
and
frstor
xchg
lret
cmp
fbstp
pop
push
cmp
mov
xor
xor
xchg
sub
cld
andl
mov
sub
aaa
mov
aaa
cmp
push
cmp
ja
call
incl
xor
scas
mov
ljmp
mov
fwait
add
in
loope
push
cmp
push
inc
dec
fucomip
xchg
push
mov
dec
or
shlb
fdivl
pop
enter
add
call
cld
incb
movsb
xor
adc
in
mov
icebp
cld
shrb
cmpsb
push
ljmp
scas
insb
insb
mov
rep
and
imul
mov
pop
int3
fisubl
jecxz
aaa
rorb
out
sbb
movsl
cld
idivb
jge
out
out
add
xlat
dec
mov
lods
adc
jecxz
cwtl
mov
mov
xor
mov
sub
add
mov
mov
jmp
mov
jns
xchg
xor
mov
inc
jmp
fptan
jle
jge,pn
jle
jno
inc
out
mov
sbb
in
je
cmp
clc
fistpl
fdivrl
mov
lods
or
sub
shll
cld
or
imul
testb
sbb
sub
stos
cmp
arpl
dec
call
shll
push
cwtl
inc
dec
fdiv
nop
and
cmc
sub
and
sbb
mov
adc
dec
xlat
mov
add
clc
jno
das
out
inc
repnz
pop
sbb
mov
out
into
dec
stos
pop
rorb
mov
mov
scas
xchg
or
jmp
bound
mov
sahf
ret
sbb
pop
enter
pop
xchg
int3
pop
icebp
jnp
dec
cltd
cmp
jle
add
jo
lea
test
lret
ror
loopne
mov
jne
sbb
mov
in
js
sub
pushf
fwait
xchg
insb
shrb
sub
or
xor
sub
lret
sub
or
subb
xor
leave
loopne
push
adc
adc
into
test
inc
imul
push
mov
orl
sub
push
sbb
sahf
mov
jne
cmp
ds
jecxz
test
add
cmp
nop
push
inc
mov
movsb
addr16
jl
ss
mov
sbb
movsl
lcall
push
test
arpl
fldl
mov
fisubl
decb
div
inc
in
testl
and
dec
cmp
idivb
ss
xchg
xchg
xor
inc
mov
loop
mov
adc
or
push
lods
insl
test
lods
mov
jae
in
cmp
fneni(8087
dec
jmp
inc
jbe
inc
pop
xchg
and
add
das
jns
divl
and
insb
test
fadds
mov
movsl
mov
and
jo
xchg
pop
jo
je
leave
xchg
xlat
mov
lret
mov
dec
dec
scas
rcrl
test
push
jne
popf
xor
lock
int3
inc
sub
and
sub
sbb
cmp
add
mov
dec
fwait
insl
push
jge
addr16
cmpsb
stos
lret
das
mov
mov
add
cltd
jb
fneni(8087
mov
syscall
mov
inc
aam
sub
push
and
push
es
lods
les
mulb
inc
adc
leave
cmp
pop
sbb
pop
adcl
xchg
in
rorl
pushf
dec
imul
insb
adc
enter
push
hlt
push
pop
pop
add
inc
mov
frstor
sti
cmpsl
mov
repnz
mov
add
loopne
and
pop
orb
jecxz
into
sub
scas
into
pop
nop
cmc
cmp
inc
repz
int
int3
xor
andl
jmp
andl
cwtl
cmp
push
cmp
xor
data16
nop
ret
iret
out
call
cmpsb
mov
movzwl
add
mov
mov
jmp
jae
push
lahf
jae
jae
pop
dec
scas
in
dec
and
xor
jge
jle
imul
or
pop
sub
xchg
or
sarb
or
jge
mov
sbb
pop
clc
fsubrl
xchg
daa
push
xchg
imul
mov
xor
sbb
sbb
adcl
sti
int
into
xor
mov
imull
inc
xor
mov
out
push
adc
mov
sub
cmpsb
xchg
sbb
xor
push
jle
push
shl
dec
cmp
inc
cltd
dec
push
in
mov
std
sbb
mov
scas
add
inc
push
popf
addr16
test
aad
addr16
pop
ss
add
jp
push
mov
push
dec
imul
inc
in
xor
pop
xchg
lret
test
sbb
fucomip
sbb
int
cmpsb
add
dec
jb
xchg
lods
adc
inc
xchg
ss
sarl
mov
mov
dec
subb
fs
mov
jo
test
xchg
das
xor
or
jne
bound
sbb
sahf
cld
xor
bound
adcb
add
fs
cmp
inc
cmp
dec
jb
sbb
cwtl
xchg
mov
adc
mov
nop
cs
fistpl
jp
mov
sbb
icebp
ja
dec
sub
movsb
dec
fs
cmp
jno
pop
jle
mov
xchg
xchg
lds
ljmp
hlt
jne
in
or
subb
or
lahf
jle
shrd
mov
ja
ficoms
adc
jmp
fsub
std
imul
xor
cmp
and
push
in
cli
ret
shlb
sub
outsl
mov
mov
jns
mov
push
testl
lcall
jne
pop
iret
mov
mov
cltd
aad
xchg
mov
and
in
mov
sbb
inc
push
jbe
test
pop
xchg
fs
xchg
loop
jns
cli
fcoms
mov
add
pop
loope
stc
ljmp
mov
and
shrl
out
nop
mov
pop
pop
stc
mov
push
ret
dec
mov
pop
movsb
cmp
scas
push
mov
cwtl
or
aad
jnp
out
ljmp
mov
inc
dec
cmc
pop
fs
cmp
adc
in
movsb
mov
dec
adc
outsb
arpl
add
jns
movsl
out
iret
pop
sbbb
mov
clc
idivb
adc
clc
sub
icebp
cltd
mov
aad
mov
outsl
push
scas
mov
cmp
mov
clc
mov
inc
cli
mov
adc
push
ret
sarb
mov
fs
mov
ljmp
sbbb
out
hlt
cli
dec
dec
inc
loope
dec
subb
pushf
mov
xor
add
xor
jmp
pushl
outsl
jno
mov
repnz
cld
jle
jge,pn
jle
push
cmp
lods
stc
adc
adc
dec
push
mov
xlat
cmp
insb
jne
out
sbb
mov
lock
jecxz
pushf
cmp
arpl
push
adc
xorl
jl
sub
sub
aad
dec
xchg
enter
std
cmpb
push
sub
and
aam
repnz
pop
or
mov
jnp
fdivrs
xchg
out
or
and
jmp
sbbl
jmp
insb
imul
lret
sub
std
repnz
dec
xchg
and
pop
cmp
cmc
mov
out
push
mov
lea
push
ja
test
inc
mov
in
or
mov
add
jne
pop
mov
movsb
xor
das
shll
das
xchg
push
xor
bound
xlat
xor
popf
jb
add
cmc
mov
mov
pushf
outsb
aaa
push
mov
sub
dec
mov
test
ret
mov
push
in
les
jo
cmc
shll
mov
add
sar
add
mov
or
stos
and
aad
push
ds
or
sub
add
imul
mov
adc
jb
cld
jecxz
imul
daa
out
dec
clc
pop
sarb
gs
sbb
dec
or
aad
ret
mov
pop
loopne
incl
movhps
mov
rcll
jns
out
pop
jecxz
inc
dec
adc
and
mov
xorl
hlt
frstor
jmp
jne
fadd
sbb
push
loope
cwtl
lods
sub
jae
and
repz
mull
in
adc
pusha
xchg
and
lret
hlt
leave
pusha
pop
and
out
fs
out
adc
mov
sbb
cwtl
ds
int3
ret
or
lret
fnsave
test
push
ret
test
sbb
or
add
xchg
inc
jnp
or
xor
in
pop
xchg
fiadds
cs
mov
cli
cmp
xor
xchg
jns
ret
inc
ficomps
in
in
push
add
pop
dec
insb
xchg
std
mov
addl
adc
cs
and
out
push
push
mov
insl
jmp
xor
lods
jmp
dec
repnz
mov
mov
push
push
or
mov
xor
cmpsl
lcall
scas
mov
cmc
fidivs
xor
and
and
test
out
out
rcl
mov
and
aad
mov
test
sub
inc
shrb
cmp
stos
sub
jnp
xor
ds
aaa
pop
jno
cmp
das
xor
mov
sbb
push
lahf
cwtl
call
xchg
and
rclb
mov
aad
movsb
ret
int
xchg
xchg
jo
jp
mov
sbb
pop
sub
pusha
jae
mov
outsl
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
jmp
nop
push
in
shr
jno
push
mov
lcall
jle
jge,pn
jle
roll
inc
xor
pop
inc
pop
adcl
lods
sbb
outsl
cwtl
push
ja
es
or
cwtl
jl
lds
jg
mov
orl
jp
aaa
push
idivl
pop
and
inc
and
mov
cmp
jle
dec
push
add
lret
fimull
push
add
enter
or
loop
pop
addr16
fsubr
xor
cwtl
adc
jecxz
sbb
sbb
stos
mov
sbbb
or
call
test
pand
mov
insl
ds
jge
fists
into
pop
jg
es
out
ret
leave
xchg
mov
adc
jns
xchg
xor
pushf
fnsave
and
jecxz
add
mov
push
or
or
daa
dec
lods
fdivrs
pushf
or
scas
and
stos
push
or
notl
cmp
mov
push
bound
dec
or
cld
xchg
rclb
inc
pop
sarl
dec
fs
rorb
gs
shlb
mov
call
popf
mov
mov
xchg
bnd
inc
xchg
hlt
jnp
stos
ja
ja
mov
jns
and
cmp
mov
adc
nop
stos
or
cmpl
sbb
sub
cltd
iret
in
mov
and
inc
call
hlt
mov
mov
sub
pop
push
xchg
cwtl
xchg
sub
mov
jmp
in
jg
rolb
fdivrs
sarl
jbe
sbb
adc
shrl
jno
movsb
lock
and
xchg
leave
int3
out
into
addr16
or
pusha
xor
fistl
mov
sub
leave
test
push
outsl
and
clc
int3
push
xchg
push
jmp
cmp
ret
push
ret
cmp
js
xor
jno
in
push
sub
mov
out
jmp
xchg
aas
mov
sub
fsubs
xchg
out
clc
xchg
rorl
or
hlt
test
les
push
pushf
inc
cmp
xchg
lret
jmp
dec
mov
js
stos
lea
mov
decb
rcrb
jle
push
jne
inc
xchg
mov
pop
adc
vmovntdq
jl
mov
into
pop
adc
mov
call
ror
sbb
pop
ja
mov
and
pop
or
pop
mov
mov
inc
mov
repz
or
mov
shll
mov
scas
and
shll
jns
das
push
jmp
je
or
dec
jle
cs
movsl
push
clc
inc
sbb
mov
pop
adcl
push
sub
xchg
sti
dec
cmp
mov
sbb
out
popa
repnz
jg
outsb
mov
mov
clc
push
aam
cwtl
mov
and
fnsave
mov
add
sbb
xlat
xor
add
cmp
cmp
add
xor
add
test
test
fwait
jb
add
inc
cld
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
ffree
les
xchg
sub
add
jle
jge
jle
xchg
mov
cld
sub
js
push
rclb
mov
leave
adc
pushf
das
ljmp
jae
xchg
push
mov
mov
pop
mov
mov
xlat
out
jmp
cmc
fs
fisubs
push
cltd
in
dec
fs
jp
dec
push
jno
out
negb
fbstp
or
cmp
cmp
out
sub
ret
pushf
jp
mov
popf
cmpsl
out
inc
imul
inc
punpckhbw
stos
mov
dec
aas
pop
jae
dec
add
sbb
pop
or
lock
leave
or
fsubrl
call
icebp
mov
scas
lcall
arpl
xchg
push
filds
or
lods
mov
mul
ret
mov
and
movsl
dec
lcall
inc
xor
jae
lock
jno
cmp
cmpsb
popa
test
push
ja
lock
fistpl
push
mov
and
bound
push
mov
or
aaa
in
sarb
not
inc
push
xchg
ret
dec
push
jmp
movsb
mov
jl
imul
push
das
in
push
jge
xchg
dec
fsubrs
cmp
dec
in
stos
mov
adc
xchg
xor
xor
das
cmp
dec
push
or
pop
mov
or
in
push
aad
fnstcw
push
inc
hlt
lds
xor
jbe
js
xchg
xlat
mov
negb
cmp
mov
insb
sub
sub
cmp
lods
lret
sbb
lods
loope
test
inc
push
cmp
xorb
sar
lcall
xchg
cmp
repz
ret
stos
cmp
icebp
jb
xlat
dec
push
pop
xor
inc
cltd
dec
sub
int3
jo
sbb
fisubrs
add
mov
jne
rorl
push
repnz
push
push
or
aaa
sti
jge
popa
pop
jle
add
cld
pop
xchg
iret
xchg
adc
inc
inc
mov
pushaw
std
mov
add
xchg
es
push
mov
pushf
xor
and
sahf
rsm
mov
int
jns
mov
pop
ljmp
dec
clc
fwait
inc
test
push
pusha
cmpsb
adc
xchg
jge
leave
add
aas
test
shl
movsl
push
and
fisttpll
sarl
xor
call
imull
sahf
inc
or
je
adcl
pop
or
rorl
out
cmpsb
aad
movsl
bound
and
or
ret
repz
pop
out
es
adc
out
je
test
xchg
nop
mov
ret
shll
jo
mov
sub
fs
divl
xor
jmp
xchg
mov
lock
ja
iret
xor
xchg
pop
outsb
aam
push
push
push
push
jae
add
cmpsl
sbb
fldenv
xor
pop
cwtl
xchg
out
add
out
iret
mov
lret
out
daa
xor
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
mov
inc
inc
orb
data16
lahf
leave
cmpb
jge
jle
lods
sbb
call
dec
sub
mov
enter
aas
cld
mov
test
mov
cli
jmp
push
inc
xor
mulb
inc
cmovae
aaa
repz
ror
adcl
cli
mov
ljmp
fistpl
or
pop
push
push
cwtl
jnp
out
dec
sti
pop
data16
pusha
sbb
or
inc
mov
push
or
mov
popa
rol
stos
xchg
notb
mov
push
adc
std
stos
mov
xorb
mov
into
push
mov
inc
mov
aaa
pop
std
add
pop
pop
sarb
out
dec
xchg
in
in
cmp
shll
cmp
adc
aam
pop
mov
imul
xor
cltd
sbb
shrb
and
out
jns
or
jle
push
mov
fists
push
mov
xor
dec
lea
insb
outsb
pop
jo
adc
cmp
aad
lea
jne,pt
xor
aam
psrlq
pop
inc
pop
inc
xchg
pop
fs
call
repz
mov
inc
pop
call
add
cmp
lret
orb
movsl
ret
push
cmp
adc
dec
inc
sahf
xchg
add
jmp
push
jne
sbb
ret
std
pop
inc
inc
add
popf
push
sbbb
jl
push
stos
lcall
in
pop
rorb
es
push
sti
ja
aas
ds
ret
std
jecxz
ja
popf
fs
adc
neg
inc
iret
aam
mov
cmpb
push
test
or
cmp
je
lods
subb
pop
out
push
jb
adc
fdivrl
sub
xchg
call
or
addr16
pop
lret
fsubl
orb
clc
popa
pop
sbb
fimuls
lahf
pop
push
sub
lods
divl
jg
inc
sub
mov
and
xchg
jecxz
orb
pop
das
rcll
stos
push
test
bound
ret
out
lock
dec
sub
sub
mov
fs
mov
push
ret
add
sub
push
repz
push
rclb
daa
sbb
pop
int3
lret
repz
sahf
and
shl
push
add
out
clc
test
or
out
sbb
mov
rorb
lea
jns
popf
cli
mov
cmp
push
cld
adcb
cmp
pop
cmp
imul
sub
push
sub
fs
in
fwait
lock
dec
push
out
xchg
or
lcall
je
outsl
sub
push
fistpl
jmp
push
cmp
scas
shrb
xor
sub
and
lods
cmp
imul
jae
xchg
inc
jae
out
scas
sub
and
pop
mov
movsb
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
mov
sub
mov
push
inc
mov
orl
xor
cmp
movl
je
mov
mov
sub
imul
mov
and
mov
sub
sbbl
xor
movl
cmp
movl
jne
mov
xorl
add
movl
jmp
sbb
mov
adcl
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
sbb
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
adcl
movl
mov
subl
push
adc
mov
xor
add
mov
add
mov
and
mov
subl
push
push
test
movl
je
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
xorl
mov
movzbl
sbb
mov
imul
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
mov
sub
mov
xchg
mov
xor
sub
xor
movzwl
or
mov
or
mov
sbb
mov
or
mov
mov
xor
mov
xor
xorl
xor
movzbl
or
jmp
adc
addr16
clc
jno
inc
xor
xor
mov
and
jle
iret
out
xorl
push
int3
xor
and
mov
xor
cmp
cmp
pop
sti
mov
cmp
dec
push
add
imul
loop
ja
fldcw
and
daa
mov
xlat
add
mov
mov
mov
dec
scas
jmp
cli
subl
mov
xor
pop
mov
cmp
mov
add
sub
xchg
jl
scas
xchg
add
jg
mov
fisttpl
scas
xor
pop
xlat
shll
cmp
jecxz
inc
mov
jecxz
cmpsl
cld
sbb
cmp
test
cmpsb
and
addl
nop
in
scas
and
clc
mov
bound
movsl
sbb
and
sbb
dec
sbb
mov
cmpsb
pushf
fwait
pop
mov
test
loopw
jge
mov
mov
jle
pop
xor
pop
jno
xchg
fs
xchg
std
add
addr16
push
adc
inc
in
lcall
mov
jecxz
mov
lret
mov
mov
mov
je
mov
andl
xor
orl
add
movl
cmp
movl
jne
pushl
subl
call
mov
add
mov
add
mov
mov
mov
mov
and
mov
subl
xor
add
movl
cmp
movl
je
sbbl
pushl
pushl
movl
call
xorl
mov
orl
mov
adcl
mov
addl
xor
add
movl
cmp
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
jmp
add
in
jecxz
icebp
adc
push
xchg
xor
lods
mov
and
jle
adc
or
xchg
call
orl
pop
ds
ret
cs
mov
push
arpl
push
mov
mov
pop
hlt
rcrb
fsub
int3
sub
sub
sti
cmp
and
adc
leave
mov
loopne
mov
mov
movsl
icebp
test
xchg
xchg
xor
mov
mov
lret
test
pop
scas
dec
test
aad
push
pop
mov
pop
cwtl
cltd
decb
fisubl
out
nop
movsl
js
lcall
xchg
mov
cmp
xchg
decl
add
scas
out
push
fwait
jmp
mov
dec
dec
sub
fs
sbb
adc
adc
xlat
push
sarb
pop
es
xor
lret
xor
aas
sbb
add
lock
pushl
mov
push
arpl
cmp
add
rolb
in
mov
fnsave
dec
ss
jmp
jb
std
mov
jne
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
jmp
aad
fstps
push
fsin
mov
mov
push
jle
and
jle
loopne
push
pusha
adc
rcl
repnz
push
lds
sub
inc
and
pop
xor
add
mov
outsl
mov
out
xor
lcall
jns
lcall
je
ss
call
iret
xchg
sbb
push
test
rcrb
push
sub
test
cmp
mov
out
sbb
popf
into
aam
or
pop
ds
rcrb
or
inc
add
cmc
cmp
es
cltd
arpl
mov
ret
and
pushf
push
xlat
dec
adc
int3
xchg
sahf
or
sub
pop
daa
dec
hlt
loope
adc
dec
in
push
mov
test
push
push
ljmp
mov
push
pushf
int
and
dec
push
add
lock
aas
dec
aam
mov
shlb
outsl
out
pop
outsb
fdivl
leave
or
pop
fsubr
frstor
xchg
xchg
dec
push
mov
pushf
lea
xor
push
test
adc
arpl
or
jmp
mov
add
mov
mov
test
je
mov
push
jmp
dec
xchg
mov
jae
out
push
mov
lea
and
jle
mov
sbbl
mov
push
lahf
enter
ss
aad
inc
mov
xchg
sbb
adc
sbb
xor
push
add
clc
cmc
sub
push
scas
out
ror
sub
lret
or
out
je
popa
repnz
cmp
mulb
sti
push
icebp
mov
mov
iret
jl
dec
pop
mov
mov
pop
add
dec
jb
push
insb
loop
cmpb
and
sub
pusha
jecxz
insb
push
nop
imul
jge
je
adc
repz
inc
jae
std
cmp
sti
mov
pop
out
pop
movsb
sbb
cs
adcl
push
or
push
mov
xor
test
push
frstor
push
pop
adc
data16
test
pushf
adc
or
repnz
pop
sub
mov
les
jno
ljmp
and
std
mov
mov
movsb
and
sub
mov
sub
out
movsb
jp
sub
imul
ljmp
inc
mov
int
punpckldq
sub
cltd
xor
or
es
add
add
sub
jmp
adc
jae
jno
je
adc
xchg
icebp
sub
jle
jae
sti
pop
push
add
add
xchg
cmp
sarb
xor
jb
cmp
insb
xchg
fwait
push
scas
cmp
push
push
cmp
mov
dec
jo
mov
fdivrs
or
jae
add
dec
popa
sub
inc
sub
divb
ds
push
ja
loop
sub
clc
fs
adc
mov
push
jo
and
icebp
jl
adc
pop
push
or
sbb
fimuls
ss
out
dec
stos
stc
in
fisubrs
mov
ss
imul
bnd
or
push
orl
arpl
mov
xor
jno
std
je
fsubrs
push
fsub
rcrb
adc
sub
jbe
and
pop
insl
arpl
je
sbb
data16
adc
out
shll
lods
jmp
add
flds
sbb
push
notl
aas
int3
or
out
cmp
sub
mov
pushf
cmp
inc
les
xacquire
xchg
mov
outsb
xchg
iret
lock
jmp
mov
jo
mov
pop
xchg
xchg
scas
fisttpll
jle
cld
rclb
fisubl
js
lods
or
xor
lahf
push
mov
xor
add
xor
mov
jg
pop
cld
sub
jo
rcrl
pop
dec
mov
mov
xchg
jnp
jp
mov
test
inc
push
out
push
cmp
imul
stc
jp
sbb
mov
jg
out
dec
or
xchg
addr16
or
movsl
lret
gs
adc
ret
jge
inc
repz
mov
popa
in
push
dec
stc
mov
xchg
loopne
cmc
mov
sbb
push
jle
outsb
inc
mov
dec
ja
popa
and
shlb
pop
dec
scas
pop
pusha
orl
xchg
sbb
add
movsl
call
push
pop
clc
loopne
add
push
jg
jno
roll
mov
mov
pop
mov
movsb
aas
mov
or
leave
aam
and
insb
push
add
rclb
cli
push
leave
ss
mov
in
push
mov
jmp
push
clc
fwait
rorl
outsb
jno
sti
lahf
or
orb
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
fsubs
imul
movlps
orl
dec
inc
mov
pop
repz
mov
cltd
inc
sbb
xor
test
scas
pusha
jp
sub
fsubrl
mov
outsl
mov
push
xchg
lods
push
cmp
int3
pop
dec
cmp
movsb
inc
xchg
nop
xchg
mov
xchg
sahf
push
stos
xchg
rcrb
dec
or
inc
fldt
roll
adc
shrl
or
hlt
scas
lcall
repz
out
int3
pop
test
test
inc
pop
xchg
xor
sub
out
inc
iret
insb
stos
and
cld
arpl
scas
cltd
in
or
and
loopne
cmp
mov
and
daa
pop
hlt
repz
lahf
push
mov
xor
dec
jae
cld
cmp
sbb
dec
insb
inc
push
xchg
lea
jle
incb
sub
lret
mull
in
and
xchg
aam
add
lds
stos
add
inc
jns
mov
xchg
outsl
cmpb
sub
dec
cmp
pop
clc
mov
jmp
sbb
ret
adc
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
jmp
cmpsl
scas
and
stos
jp
mov
push
leave
in
mov
jle
and
jle
incl
mov
nop
push
xor
idivb
out
sub
cmp
lcall
and
push
lcall
xchg
mov
mov
daa
out
jecxz
cmp
and
pop
mov
loope
out
xor
fstps
pop
es
mov
cmp
lea
adc
aam
enter
and
hlt
cmp
scas
lcall
bound
mov
mov
pop
fwait
sbb
and
lods
and
out
adc
out
xchg
push
sub
shlb
inc
loop
mov
ljmp
insl
dec
jmp
cmp
xchg
popa
ret
repnz
mov
xor
rcl
mov
and
jg
adc
into
stc
cmpsb
fs
xchg
sbb
out
cmp
fdivp
loop
sti
push
push
insb
add
sahf
sub
sub
loop
push
hlt
aam
testb
and
mov
xor
cwtl
jp
jne
sahf
sbb
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
jmp
lcall
jno
insl
add
pop
xchg
jle
and
jle
or
inc
sbb
lock
or
cmp
stos
dec
test
dec
pushf
fldl
jns
add
mov
mov
movsl
xor
lea
int3
jbe
rclb
xorb
and
inc
test
aad
and
xor
shr
jnp
xor
dec
sbb
testl
mov
and
test
call
add
nop
sub
xchg
xor
stc
add
mov
pop
inc
ds
gs
fwait
sahf
out
filds
call
mov
imul
shl
xchg
or
xor
fcoms
call
ss
aas
jns
xchg
pusha
cwtl
cltd
mov
lret
xor
push
add
and
inc
lret
mov
cld
fldl
xlat
in
adc
leave
cmp
hlt
mov
out
rcrl
mov
xor
movsl
dec
movsl
sti
repz
subb
cmpsb
std
cmpsl
inc
sti
imul
stos
add
sbb
lea
std
xor
jp
rorl
fiadds
jae
cwtl
outsb
or
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
mov
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
sub
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
fwait
inc
xor
pop
inc
shl
inc
sub
inc
add
add
out
clc
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
enter
lea
mov
mov
in
cmovne
jmp
inc
mov
sbb
mov
add
in
add
sub
add
jle
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
int3
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
call
mov
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
cmp
pushf
pushl
mov
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
fwait
mov
jge
decl
