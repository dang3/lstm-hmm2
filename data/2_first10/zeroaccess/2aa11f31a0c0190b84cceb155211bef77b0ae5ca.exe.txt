push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
es
xchg
aas
ret
xchg
sti
cmp
rorl
mov
jmp
adc
push
pop
lea
push
loop
fwait
inc
dec
nop
adcb
and
int3
cmp
outsb
fldenv
push
mov
push
sub
push
xchg
lcall
loopne
mov
inc
adc
out
stos
in
pop
in
fs
lret
call
or
ljmp
repnz
adc
pop
add
sbb
je
int3
mov
sub
mov
outsb
push
movsb
aam
iret
sub
test
les
cltd
jno
test
imul
pop
je
dec
and
std
mov
cmp
xor
icebp
cmp
push
loop
gs
and
pop
fimuls
push
aaa
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
insb
xchg
fisttpll
jg
jle
jg
jle
mov
lahf
push
in
daa
imul
ljmp
fimull
fcmovne
movsl
sbb
push
in
aad
mov
in
xor
js
jle
dec
push
iret
ret
scas
inc
fldt
or
outsl
jno
sub
loope
leave
cwtl
sbb
add
pop
mov
shlb
xlat
shll
push
sub
jbe
outsl
mov
mov
fcmovnb
jp
subb
xor
and
sub
in
in
push
adc
das
and
stc
inc
fmull
sub
inc
mov
scas
push
or
repz
hlt
lcall
sub
lock
sti
stos
dec
dec
das
fidivl
inc
pop
repnz
hlt
sbb
push
adc
loopne
icebp
mov
mov
push
jp
xchg
into
jbe
loopne
aas
cmpl
jnp
cmp
sarl
popw
or
dec
xchg
adc
xchg
push
cmp
sub
jge
dec
lods
in
loope
xchg
das
mov
mov
xor
testb
jl
ds
cmp
fs
dec
jl
scas
aaa
xchg
in
mov
scas
inc
xchg
lods
jecxz
dec
gs
inc
mov
dec
push
out
iret
jne
pusha
lea
mov
out
adc
das
repnz
arpl
mov
xor
aaa
imul
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
and
jge
jle
jg
jle
jecxz
inc
jo
mov
lcall
jb
jp
xor
xor
enter
xchg
pop
add
pop
out
hlt
arpl
setge
imul
mov
pop
dec
sub
sbb
test
int3
outsl
loopne
pop
out
call
inc
insl
popa
repz
loope
nop
js
jge
jl
lcall
cli
inc
xor
push
adc
xchg
adc
or
adc
and
mov
mov
add
inc
xor
jns
dec
fwait
and
jp
sbb
lods
xchg
out
std
mov
xor
inc
adc
loopne
frstor
pop
mov
dec
xchg
jne
inc
mov
int3
or
fwait
dec
jne
ficoms
push
sbb
pop
subl
imul
mov
inc
xor
outsb
mov
mov
xor
inc
or
push
out
xchg
sbbb
add
push
repz
pop
inc
ljmp
dec
ja
sbb
jbe
jns
fcomi
sbb
test
jae
es
cli
dec
mov
inc
leave
cwtl
mov
sbb
adc
test
jo
imul
sbb
in
sbb
sub
push
mov
loope
xchg
cmp
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
fiadds
jg
jle
cli
andl
xor
pushl
repnz
sbb
inc
in
stc
shr
cmp
mov
mov
xor
popf
xor
mov
sub
ljmp
fnstcw
and
xchg
or
mov
and
es
adc
mov
push
inc
scas
lcall
aad
lahf
jae
mov
and
adc
sbb
aad
loope
inc
jecxz
stos
into
hlt
xchg
rcrb
jle
fsubrs
push
push
arpl
jmp
sub
add
out
jne
cmp
pop
mov
cld
pop
push
xchg
jne
jmp
xchg
mov
mov
int
inc
push
popa
loope
add
stc
pop
popf
cmpsl
ror
cmp
ja
xor
scas
fistpl
inc
dec
icebp
or
push
inc
cmp
gs
dec
pop
sbb
xchg
ljmp
pop
cmc
and
out
cmp
sub
jmp
sti
sub
pop
test
imul
mov
or
fdivl
dec
jp
aam
enter
repz
mov
pop
mov
push
xor
dec
ret
mov
into
pop
jle
fildll
mov
insb
roll
sarl
out
add
mov
jp
pushf
or
out
mov
orb
cmpsl
sti
sbb
xchg
mov
pushf
add
add
jmp
push
dec
mov
push
js
jle
jg
jle
scas
pop
jno
xor
into
lods
push
mov
xor
jmp
xlat
pop
sbb
loop
push
or
xchg
movsl
jecxz
shr
and
outsl
and
aas
push
mov
gs
mov
xchg
repnz
fldt
xor
lret
sbb
fidivl
or
inc
or
inc
add
or
mov
cs
cmp
inc
adc
in
ret
jge
out
sbb
lret
push
jbe
idiv
jp
add
cmp
dec
xchg
inc
cmp
ret
imull
jg
jle
pusha
mov
adc
subl
pushl
xchg
mov
arpl
xchg
mov
rclb
jnp
inc
enter
mov
mov
lcall
or
and
jecxz
jb
push
adc
rolb
mov
mov
add
out
and
xor
push
jmp
into
ds
jnp
add
lret
add
add
xor
mov
clc
xor
mov
cmp
test
das
stc
imul
testb
jmp
insb
push
mov
jl
push
popa
movsb
out
or
std
lcall
jmp
sub
push
cltd
int3
std
bound
add
push
mov
xor
mov
outsb
adc
inc
add
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
pop
stos
fnsave
jns
jle
jg
jle
adc
adcb
int3
fbstp
ffree
mov
sarl
sahf
sub
data16
xor
adc
lock
mov
push
sub
xor
loopne
test
xchg
std
xor
mov
outsl
repz
jne
push
fwait
push
xor
cltd
cwtl
and
mov
roll
push
imul
jno
imul
data16
push
shll
in
adc
add
xchg
rcrl
pushf
jg
or
in
push
jno
adc
mov
push
add
insl
jnp
add
push
adc
jl
arpl
inc
xchg
int3
int
jp
cld
js
inc
stc
push
pop
or
fwait
add
adc
jb
lock
imul
sbb
pop
iret
pop
sti
xlat
push
dec
ret
push
test
movsl
dec
fdivs
dec
push
rorw
adc
in
stos
out
pop
fmulp
js
mov
insl
fisttps
sub
and
pop
psubsb
dec
ret
sbb
out
dec
inc
pop
cmp
lods
dec
out
cmp
sub
mov
out
cmpsl
aad
pop
push
gs
test
and
cmp
cmp
addl
lret
addl
in
ret
cmp
push
push
push
push
sub
adc
inc
xchg
aas
cli
mov
xchg
mov
jnp
movsl
out
insb
and
das
fwait
jge
jle
adc
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
test
pop
jle
cli
jg
jle
fisubrs
xchg
clc
lods
call
insb
mov
or
and
rolb
jno
notb
mov
jmp
fstl
xor
xorl
jmp
not
negl
out
jecxz
xchg
in
sti
stos
dec
fnstenv
rcl
cmp
adc
test
add
cmp
jmp
scas
push
fimuls
xor
aas
push
push
out
jb
cmc
leave
jno
mov
xor
xchg
push
cmp
test
add
int
addr16
mov
mov
pop
stc
pop
in
sahf
cmp
repz
mov
lret
xor
inc
adc
faddl
inc
cmpsb
bnd
adcb
sbb
cmp
fcoms
popf
push
pop
jb
sub
mov
movsb
jmp
push
push
das
leave
mov
and
dec
dec
sti
adc
or
adc
aaa
mov
mov
stos
out
rcrb
lock
test
sub
pop
add
movsb
mov
sub
loopne
and
jne
std
adc
xlat
lds
mov
adc
add
pop
scas
cmp
push
mov
push
in
push
mov
mov
jno
addl
bound
xor
fidivs
xor
dec
cmp
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
pop
xchg
pop
add
lock
cmpsb
xchg
scas
mov
mov
push
xor
xor
cmpsb
ss
lcall
jecxz
in
test
shll
jmp
sbb
xor
jg
xchg
add
testl
movsb
push
addr16
pop
push
xchg
jg
lcall
loope
xchg
mov
ret
xchg
outsb
ds
push
cmc
lods
leave
xchg
jmp
jnp
push
call
in
cmp
mov
cmpsl
aaa
aam
lods
aas
inc
cli
fs
out
and
jmp
insb
rolb
arpl
xor
push
es
jg
rclb
push
xor
sub
outsb
cmc
stos
sub
push
mov
fbld
lods
pop
into
push
addr16
add
repnz
cmp
sbb
sbb
std
idivb
jnp
mov
mov
sbb
mul
mov
add
in
mov
shlb
lods
adc
je
sti
je
xlat
sarl
test
mov
pop
cmp
cmp
inc
mov
inc
insb
sbb
ss
or
insb
xchg
nop
orb
mov
in
mov
pop
sbb
shlb
fdivrp
iret
stc
stos
pop
push
dec
or
pop
xchg
fdivr
mov
fdivrl
movsl
xchg
push
fldl
into
in
adc
mov
xor
jns
adc
pop
pop
repnz
in
and
cmpsl
in
dec
lcall
add
add
pushf
add
add
dec
and
jno
push
mov
and
mov
jle
jg
jle
sbb
idivb
pop
lret
xor
icebp
test
aaa
jbe
push
inc
or
das
xor
int
jle
sbb
leave
sbb
lods
ljmp
addl
std
ds
fisubs
xchg
mov
mov
fldenv
inc
cmpsb
xchg
nop
dec
imul
sar
outsl
call
or
add
xchg
dec
and
loop
mov
mov
push
jg
loope
inc
aad
add
pop
clc
daa
adc
mov
push
add
sbb
pop
and
loope,pt
sbb
push
pop
repz
pusha
and
bound
sub
cmc
xor
xor
add
pop
cmpsb
ss
inc
hlt
nop
cmc
add
sbb
and
mov
ja
push
into
orb
scas
mov
pop
fs
pop
lret
xor
pop
aas
push
xor
loopne
insb
inc
pop
daa
xchg
enter
filds
subb
repz
push
in
mov
jbe
iret
push
stos
test
jbe
push
pop
jp
in
and
cli
or
sub
fiaddl
or
mov
jno
add
sbb
sbb
scas
mov
lret
sub
add
adc
inc
testb
ljmp
stos
insl
ljmp
adc
mov
inc
aad
dec
mov
ss
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
push
pop
outsl
ret
jle
cli
jg
jle
lock
push
fnstcw
jbe
addr16
fcoms
mov
inc
sbb
or
cld
bound
xchg
aad
and
ret
mov
xchg
add
test
dec
sbb
xchg
fidivs
mov
mov
gs
pushf
movsb
ss
adc
cmp
mov
ror
or
ret
vcvtsd2ss
lret
jg
xchg
out
lret
mov
fists
xchg
xchg
arpl
lret
sbb
mov
sub
test
rcrb
pop
adc
decb
jmp
stc
hlt
jmp
push
std
les
add
jge
add
loopne
ljmp
xchg
or
xchg
cmpsl
bound
jbe
in
cmp
fmuls
cwtl
divb
inc
mov
push
cli
jb
pop
adc
int
push
jae
xor
pop
dec
gs
jnp
xchg
ret
jle
repnz
inc
mov
fs
push
sub
das
sbb
add
mov
insb
dec
inc
cli
jbe
lds
push
add
mov
mov
gs
adc
imul
adc
dec
cltd
loope
movsb
movsl
jp
mov
pushf
mov
lret
in
or
imul
cltd
dec
ret
pop
push
inc
shlb
mov
js
mov
cmp
adc
test
outsl
and
xchg
and
jge
pusha
inc
and
inc
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
jp
jmp
jle
jg
jle
dec
cmpsl
arpl
xchg
icebp
jne
subl
jns
dec
outsl
in
mov
inc
add
lds
ja
idivb
and
jge
push
mov
cmp
inc
sbb
xchg
mov
out
push
and
jecxz
sahf
das
jmp
shrl
mov
xor
add
add
jb
bound
mov
fcomps
add
ret
shrl
sar
test
sub
xchg
xchg
xchg
mov
idiv
pop
test
xchg
sbb
cmpsb
pop
lods
mov
jmp
and
sbb
lods
mov
add
pop
outsl
or
push
push
je
aaa
ret
mov
add
pop
outsl
jl
jp
xchg
mov
push
xor
xor
shr
pop
push
pop
jl
es
scas
cmpsb
xchg
imul
fbstp
add
cmc
mov
insb
or
pop
and
fldcw
shl
or
inc
mov
pop
add
mov
insl
mov
jmp
jl
lcall
sub
sub
hlt
inc
adc
dec
shll
inc
jnp
push
popa
fstl
cmp
cmp
jno
mov
mov
fcmovbe
gs
iret
mov
mov
dec
cmp
pop
sti
stos
negl
jnp
xchg
or
je
and
iret
xor
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
sub
jmp
cli
jg
jle
outsl
pop
jb
sub
mov
sbb
shrb
pop
push
jbe
int3
scas
adc
movsl
test
stos
pushf
notb
mov
sub
int
cmpsl
add
icebp
scas
lds
insb
add
push
xchg
out
inc
bound
xchg
push
adc
movsb
es
and
fsubs
and
outsb
addr16
xor
aas
inc
mov
mov
push
repnz
inc
sub
jg
sets
lds
dec
inc
dec
movsb
xchg
mov
ss
xchg
inc
loop
inc
xchg
sbb
inc
cmp
stos
mov
dec
outsl
in
lods
fisubs
mov
cmpsb
daa
mov
mov
fyl2x
sbbb
xchg
pop
pop
push
mov
les
clc
add
sbb
xor
jge
jb
lock
push
jbe
sbb
je
fs
frstor
mov
push
ljmp
cmpb
imul
xor
jl
std
xchg
push
cmpsb
stc
mov
mov
in
in
into
sbb
and
inc
sub
jl
jns
sarb
lret
pop
inc
lds
test
lret
sub
nop
inc
cmpsb
xor
scas
mov
cmc
dec
pop
xor
loopne
pop
sub
in
inc
mov
and
push
adc
imul
lods
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
sbb
pop
fs
jle
jg
jle
push
in
lret
pop
jnp
push
push
jge
leave
rcrl
xor
fcoml
xchg
rcr
mov
popf
les
mov
in
xadd
cmc
sbb
adc
lret
ljmp
repnz
and
jne
scas
adc
movsl
scas
jl
mov
cmc
xchg
imul
hlt
std
les
xor
jge
fbld
into
ljmp
lods
inc
mov
adc
xor
inc
iret
jae
pop
test
mov
fldenv
xor
or
mov
fs
clc
iret
dec
stos
pop
les
lcall
inc
ret
insb
inc
dec
lcall
xor
inc
rolb
cmp
and
dec
pop
out
push
lcall
xor
adc
push
fstl
aam
push
xchg
not
dec
out
movsl
xor
cmpsl
leave
xchg
pop
xor
repz
cwtl
cmp
mov
lcall
mov
mov
sbb
lcall
or
arpl
xchg
cld
fistpl
in
sbb
adc
inc
aas
cmp
adc
mov
mov
gs
movsl
inc
or
sbbb
jmp
inc
pop
xor
dec
or
loopne
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
inc
leave
and
cli
jg
jle
xchg
pop
adc
cmp
cmpl
sub
cmp
adc
or
ds
les
sbb
push
mov
adc
jb
dec
out
xchg
sbb
sahf
lods
das
movsb
popa
cs
imul
movmskps
iret
jecxz
fs
or
in
xchg
pop
mov
adc
ret
mov
xor
xor
jp
sbb
sbb
mov
roll
cwtl
sti
lret
scas
inc
std
pop
rcll
xchg
and
imul
movsl
pop
outsl
jmp
cwtl
scas
inc
inc
add
sbb
fnop
dec
sbb
sbb
jg
cmp
faddl
pop
jbe
cmp
loopne
test
daa
sbbb
xor
xor
push
mov
out
xlat
mov
mov
push
testb
dec
xchg
stos
fimuls
dec
mov
testb
fs
adc
repnz
test
in
cmp
nop
add
sbb
sub
lods
mov
ja
mov
sar
jbe
inc
fsts
outsl
sbb
les
dec
daa
out
mov
push
mov
pop
pop
xorl
call
cmp
jmp
push
or
jb
inc
add
and
sbb
out
repnz
loope
hlt
out
adc
jecxz
lret
xlat
movsb
pusha
int3
jo
mov
bound
rclb
xchg
mulb
rorb
sub
add
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
cmpsl
lock
or
cli
jg
jle
push
ret
faddl
loop
dec
cmp
pop
jp
inc
jg
orl
xor
pop
mov
stos
jecxz
dec
test
addr16
sbb
jo
sbb
ficomps
aas
leave
xchg
pop
mov
push
adc
icebp
aad
mov
adc
std
stc
js
neg
cmp
stos
lods
dec
add
scas
andb
dec
or
or
mov
lea
popf
cmp
xchg
mov
jb
jns
pusha
adc
inc
nop
pop
mov
test
xchg
add
push
dec
jnp
int3
mov
orl
daa
shll
rorb
cli
dec
jnp
adc
xor
aaa
push
and
ds
inc
xor
push
out
push
mov
mov
je
or
and
cmp
xchg
jne
js
stos
inc
mov
flds
out
sub
dec
fsts
pmullw
scas
popa
out
xor
cmc
mov
push
and
push
add
imul
out
fildl
mov
imul
sub
mov
enter
pop
or
in
cmpsb
inc
push
iret
or
lds
cmp
addb
iret
jbe
popf
adc
lret
test
adc
pusha
adc
sbb
add
leave
mov
in
shlb
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
cli
add
jg
jle
cwtl
scas
mov
dec
xchg
incl
arpl
mull
push
or
sbb
incb
bound
loopne
mov
add
ja
mov
pushf
fcmovu
pop
dec
mov
mov
add
and
mov
out
push
inc
dec
and
decl
adc
test
mov
repz
xchg
push
std
inc
repnz
push
jmp
nop
ljmp
pop
leave
loopne
hlt
pop
mov
xchg
in
xor
es
mov
push
cmpl
movsl
jne
in
arpl
pop
fsubrl
lock
das
xchg
pop
xor
mulb
dec
mov
ucomiss
ss
inc
xor
jp
push
jne
loopne
dec
in
fcoms
pop
dec
ss
sub
push
and
mov
jmp
call
sbb
or
push
xor
fnstsw
or
fstpt
push
ret
stc
sbb
scas
fcomp
in
ss
jb
xor
ret
mov
loopne
mov
icebp
xchg
mov
pop
or
sti
or
movsl
xchg
add
jmp
pop
rolb
jne
or
pop
push
fcoms
xadd
add
push
add
std
movsb
les
xor
test
stc
fistl
push
pop
add
int3
or
and
lret
cmpb
xor
add
xor
add
xor
add
xor
add
xor
pop
jmp
cmc
mov
icebp
insl
sbb
hlt
test
cli
jg
jle
mov
leave
mov
mov
rcl
outsb
aaa
pop
fiadds
arpl
push
into
push
test
ret
aas
into
push
cli
leave
ljmp
dec
dec
adc
add
xchg
cmpl
xchg
in
movsl
inc
sarb
cltd
jmp
fcmovnbe
stos
fwait
push
lahf
outsl
pop
add
jbe,pt
push
push
cmpl
mov
or
mov
fdivl
and
jmp
in
rolb
xor
mov
push
xchg
outsl
ljmp
ret
xchg
sbb
fistpll
xor
inc
cmpsl
xchg
cmp
dec
jae
mov
jbe
inc
xchg
ss
sbb
pusha
adc
mov
and
push
pushf
sub
das
jns
lock
and
shll
cwtl
jl
jne
fwait
icebp
in
and
push
cmp
jmp
dec
inc
or
or
test
push
jb
xchg
pop
in
pop
stc
xor
jno
jg
mov
cli
jecxz
pusha
inc
movsl
pop
mov
xchg
sti
or
cwtl
or
push
neg
sub
in
and
jns
jmp
lret
fcomi
lahf
jmp
das
inc
insl
inc
dec
rol
popa
or
adc
sbb
mov
adc
jbe
xlat
cmpsl
xchg
mov
pop
push
sub
cmp
add
mov
xchg
orl
hlt
repnz
inc
xchg
cmpsl
xchg
negl
call
mov
mov
add
pop
jmp
add
mov
adcb
insb
mov
jg
jle
dec
xchg
pop
ss
jg
pop
and
xor
and
movsl
inc
push
xchg
int3
sbb
adc
jns
jg
jne
jp
roll
dec
jo
jb
adc
mov
xchg
loope
cmp
adc
xor
movsb
loop
out
jno
dec
cltd
or
xchg
dec
cmp
jmp
imul
sbb
sub
testl
inc
out
sbb
rcrb
cwtl
repnz
dec
push
jp
fnsave
test
sub
inc
mov
lods
jge
xchg
push
inc
mov
xor
adc
and
icebp
in
inc
pcmpgtd
movsl
jno
stos
in
push
aad
pop
xor
cmp
mov
hlt
ret
mov
aas
dec
push
mov
mov
adc
cmc
pop
push
test
inc
fwait
scas
jb
test
push
dec
xor
loope
pop
mov
pop
xor
xchg
fwait
push
sub
cmpsb
cltd
push
das
test
loope
sub
fcompl
ret
cmp
cmp
stc
ss
out
test
sbb
mov
ss
adc
lcall
insb
imul
sbb
jae
je
out
mov
pop
push
mov
mov
cli
in
gs
or
add
call
mov
mov
or
in
jecxz
add
sarl
xor
out
mov
xor
pusha
fwait
test
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
cmc
and
adc
jle
mov
inc
fs
or
xchg
outsl
fsubs
ret
std
repz
fdiv
mov
sbb
mov
lret
dec
ds
and
repz
jle
cmp
sbb
or
push
clc
fdivs
sub
cltd
pop
ja
mov
sub
lea
pushf
sbbb
push
add
push
add
outsb
xlat
mov
nop
jno
dec
jno
imul
xor
xor
cmp
sbbl
and
sbb
pushf
insb
jno
enter
int3
cmp
mov
das
sbb
and
dec
push
in
dec
xchg
mov
mov
jl
mov
iret
arpl
add
jnp
cld
mov
icebp
ja
lret
adc
push
sbb
ss
jmp
or
xor
sbb
fisubrl
xchg
test
loopne
or
lea
out
push
cmpsl
les
push
pop
mov
movsb
sti
pusha
in
sub
ror
jne
and
push
push
push
xor
lock
jl
xor
sarl
lret
cmp
sub
out
jae
xor
lods
test
jl
sahf
pop
and
outsl
pop
xchg
repnz
fimuls
dec
mov
dec
xchg
mov
lahf
addb
popf
addb
in
sub
mov
mov
flds
fcmovne
lahf
xchg
das
je
ret
enter
ficoms
cmp
fisubrs
enter
lds
add
ja
xor
jno
shl
scas
xor
xchg
or
pop
fcompp
testl
jb
stc
push
popa
xchg
cwtl
std
call
addr16
xor
ss
movsb
xor
mov
nop
fs
int
jp
sbb
sub
fwait
pusha
mov
jle
loopne
and
lret
xor
adc
push
push
mov
dec
shrl
xchg
push
and
sub
add
pusha
lea
lret
fldenv
loope
rorb
xor
icebp
rorb
xchg
cmp
inc
sub
jecxz
xor
fidivs
sbb
mov
mul
push
ja
mov
push
adc
nop
pusha
repz
scas
mov
cmp
mov
out
lds
out
and
push
fists
or
xchg
pop
cmpsl
negb
or
mov
stos
xchg
hlt
jmp
lods
sbb
in
repz
pop
or
xor
pop
imulb
jbe
dec
mov
fadd
bound
outsb
popf
bound
enter
sbb
xor
dec
mov
dec
enter
mov
dec
sbb
movsb
xor
inc
les
test
inc
add
stos
aaa
inc
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
in
adc
and
jle
pop
jl
jle
and
adc
xor
cmp
jmp
mov
cmpsl
push
and
mov
daa
xchg
js
mov
inc
lret
adc
mov
fwait
lods
push
xchg
lea
push
adc
lods
ja
daa
pushf
into
pop
mov
mov
stc
imul
popf
pushw
xchg
cmc
sar
fcmove
cmpsl
in
inc
scas
pop
push
addr16
stos
mov
loop
lret
outsl
mov
inc
sbb
sti
push
fcom
aad
xchg
push
sub
dec
ret
inc
and
mov
mov
xchg
in
xchg
imul
data16
pop
out
pushl
shll
pop
ja
daa
sbb
daa
mov
mov
orl
add
iret
or
cli
negl
jbe
jle
inc
cmp
xchg
dec
jl
adc
loope
cmp
insb
sub
imul
add
pop
mov
pusha
cltd
adc
cmp
cmp
mov
push
int3
and
hlt
arpl
sbb
inc
cmc
dec
imul
fwait
loopne
lret
into
push
pop
jmp
dec
ds
xchg
jl
and
adc
cwtl
push
ficoms
and
add
insl
mov
pop
cmp
movsb
xchg
xor
idivb
or
loopne
incl
lods
xor
gs
push
cmp
mov
sbb
xor
insl
jmp
xchg
mov
cli
sbb
pop
adc
inc
out
cmp
stc
xchg
mov
fcompl
lret
pop
xchg
sahf
dec
push
test
imulb
push
cmp
cmp
roll
ret
dec
jno
fnsave
dec
repz
popa
out
in
sbb
or
shlb
fildll
mov
int
arpl
mov
out
jns
pop
add
js
add
enter
inc
int3
jl,pt
aaa
or
mov
outsb
aad
dec
popa
out
mov
daa
shrl
negb
fwait
imul
test
pop
mov
pop
xchg
dec
jno
mov
and
pop
jno
mov
mov
push
lods
jae
jo
dec
dec
movsb
sub
test
aam
in
sub
push
aas
mov
rcl
outsl
cmp
xor
int
pop
outsl
adc
add
out
adc
xchg
push
push
test
mov
xchg
adc
mov
sub
cmpsb
sub
inc
dec
daa
testb
dec
and
cli
es
push
pop
and
sbb
xchg
cs
adc
push
inc
loop
movsb
adc
icebp
stos
mov
dec
cltd
push
mov
test
nop
aam
sub
push
mov
push
mov
in
imul
or
add
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
jno
or
jle
pop
jl
jle
and
sbb
fnstcw
ljmp
dec
xchg
and
jecxz
lea
test
punpckldq
loop
ret
sub
lret
out
add
in
orl
sbb
cmp
xor
fcompl
imul
cld
mov
mov
dec
notl
dec
mov
cmp
dec
sbb
and
or
adc
and
js
mov
repnz
cli
inc
xor
in
inc
lret
js
mov
xlat
emms
sub
insb
sub
cld
mov
dec
mov
into
xchg
pop
in
es
push
popf
popa
jbe
adc
cltd
and
popa
sub
lea
xchg
int
bnd
fadds
shl
xchg
out
sahf
shll
cmc
lret
and
add
cli
iret
xchg
adc
push
lret
lret
in
xor
adc
xor
xchg
add
jg
mov
insb
pop
pop
add
sub
dec
jecxz
enter
and
lret
add
add
sti
shlb
int
fcmovb
add
or
push
pop
pop
push
mov
imul
test
pop
mov
mul
jne
stos
daa
sbb
mov
je
pop
push
adc
sbbl
sbb
repnz
mov
cmp
pop
iret
imul
jne
xchg
jbe
xchg
or
or
push
cli
sbb
inc
pop
icebp
pop
push
jns
mov
fistl
xchg
mov
mov
adc
mov
movsb
jbe
and
cwtl
jge,pn
out
sahf
clc
lahf
mov
pop
mov
popa
int3
or
cli
mov
and
mov
sub
dec
shl
adc
adc
into
pop
call
addl
stos
pop
imul
notl
jne
notl
add
inc
pushf
mov
out
mov
int
out
imul
sbb
sbb
or
push
pop
in
pop
dec
sbbb
pusha
int3
cmp
sti
lahf
mull
lods
push
ja
pushf
inc
xchg
movsb
add
bound
sub
test
jne
and
out
xchg
mov
test
inc
xchg
adc
adc
aas
pop
xor
dec
mov
cli
jno
cli
xlat
add
mov
mov
inc
adc
sbb
pop
out
jns
mov
fdivs
cmp
imul
mov
test
cmp
dec
fisubrs
aam
insl
es
push
fs
xchg
xor
sbb
xor
popa
call
cld
inc
test
pop
cmp
cltd
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
adc
pop
jl
jle
xchg
out
rolb
outsb
jnp
xchg
jne
adc
push
xchg
xchg
das
out
in
fcmovne
addr16
xor
js
rolb
scas
popf
push
jae
xor
push
shll
push
pop
jle
cmp
jnp
incb
lds
xchg
add
and
inc
and
jb
xor
fisttpl
outsl
aad
scas
pop
out
jmp
cmp
mov
je
rcrl
cltd
fsubrs
mov
push
into
addl
push
adc
daa
fcom
sub
or
lods
and
and
mov
cmpsb
fmulp
dec
push
xchg
add
mov
push
cmc
inc
frstor
mov
loopne
pop
push
or
nop
add
xor
jle
push
add
inc
add
orb
out
movsl
out
std
dec
int
lret
mov
shlb
sub
dec
dec
mov
sbb
pop
sub
cmova
out
xor
xlat
ret
das
ja
pop
push
adc
movsl
nop
xchg
mov
in
jae
mov
mov
ds
adc
sbb
aam
push
rol
dec
pop
lods
pop
pop
lock
lds
int3
inc
iret
test
and
subl
pop
cmp
mov
in
jmp
sub
mov
cmc
inc
addr16
sub
cmc
mov
adc
jmp
imul
push
outsb
outsb
mov
or
mov
mov
sub
adc
cmpsl
or
xor
mov
jmp
push
push
pop
mov
pop
das
cld
cmp
mov
fstps
orl
mov
sarb
dec
or
push
imul
int
cs
ss
repz
mov
inc
inc
fwait
and
xor
sbb
adc
testb
dec
jge
mull
sub
idiv
out
mov
movsb
fidivs
movsl
cld
jns
pop
addr16
dec
jmp
sub
push
mov
gs
sbb
mov
repz
test
neg
js
mov
push
push
daa
sbb
adc
cmp
clc
dec
jecxz
mov
cmp
cmpsl
cltd
testb
test
loop
sbb
inc
into
addr16
sbb
cmp
cld
push
jle,pn
stos
xor
xor
or
int3
arpl
jo
pop
jl
add
data16
cs
out
int3
xchg
sub
jmp
cli
cmp
inc
pop
lcall
daa
xor
push
movsb
adc
sbb
clc
out
pop
mov
gs
push
std
xor
jb
pop
frstpm(287
gs
scas
clc
or
imul
dec
mov
xchg
fprem
sbb
push
sub
push
or
jmp
add
dec
popa
jno
jne
xor
jle
jle
ljmp
jle
shl
jp
jecxz
pop
or
andl
popl
dec
jl
loop
fsubr
cmpsb
sti
imul
test
in
mov
data16
lret
popa
adc
sti
lods
push
xchg
lret
pop
cmp
stos
fldcw
les
dec
cmpb
jmp
dec
int
and
xor
repz
jne
cwtl
xchg
call
sub
stos
sbb
in
cli
mov
scas
cmp
lods
jae
insl
pop
mov
mov
sub
dec
pop
mov
inc
jnp
adc
jns
mov
jecxz
rcl
addr16
jns
xchg
shll
or
inc
mov
mov
insl
mov
sbb
or
fmull
je
add
mov
pop
cmpsl
movsb
jb
cmpsb
pop
icebp
daa
push
jg
adc
lea
cmp
mov
data16
mov
jmp
xor
test
mov
mov
stc
jg
outsl
mov
mov
ja
repnz
lret
adcb
int3
mov
in
mov
stc
cmp
cmpsl
rcrl
dec
or
outsb
es
xchg
fstps
lcall
mov
ret
pop
sbbb
scas
das
mov
mov
fnstsw
jae
add
es
or
sbbl
cwtl
cld
xchg
jl
add
pushf
mov
push
pop
push
inc
sbb
mov
repz
mov
sub
lahf
loop
sub
shl
dec
sub
adc
lods
cs
sub
rorb
arpl
cmc
es
cmp
lods
in
adc
cltd
popf
lods
loopne
lock
and
jl
and
and
dec
or
nop
ja
adc
scas
cld
xchg
aas
and
jno
cmpsb
add
ficomps
sub
adc
lods
test
mov
lcall
out
iret
jno
adc
cmpsl
push
sub
ja
push
shlb
fiaddl
daa
or
insb
adc
cwtl
clc
xor
shlb
mov
mov
xchg
es
cs
xor
jmp
lock
pusha
cld
push
sbb
adc
and
jnp
int3
adc
sbb
lret
ret
sub
mov
pop
fs
cmp
pusha
cmc
addr16
ret
movsl
adc
ret
mov
add
into
jg
inc
or
cli
dec
add
xchg
push
adc
rcrb
jg
pop
insl
xlat
inc
or
mov
sub
adc
movsb
cmp
xchg
cmp
das
psubusw
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
jno
ret
daa
jle
pop
jl
jle
cmpsb
xlat
dec
popa
xchg
lock
lahf
add
ljmp
mov
push
xchg
add
pop
xchg
shll
sbb
mov
lods
fisubl
or
fs
push
popf
sub
hlt
add
fs
shll
testb
mov
ljmp
mov
cmp
mov
or
cwtl
les
andl
enter
pop
ret
mov
mov
and
dec
scas
mov
pushf
icebp
imulb
nop
and
test
push
test
sbb
xchg
mov
pop
lret
outsb
lods
or
popf
sar
notl
xchg
mov
out
mov
stos
and
and
in
mov
jns
push
jg
adc
aaa
mov
icebp
stos
mov
hlt
cmp
add
jmp
or
shlb
inc
test
mov
sbb
pusha
rorb
sub
push
and
sbb
fdivrl
jp
mov
arpl
push
inc
filds
jno
lods
mov
filds
jp
mov
loop
push
sbb
into
jne
cmp
sub
pop
loopne
in
int3
xor
and
dec
xchg
addr16
adc
neg
mov
std
in
test
cmp
push
and
jmp
xchg
or
xor
call
xor
or
jns
cmp
push
ret
ss
mov
rcrb
imul
push
or
in
leave
mov
in
cmp
dec
push
iret
js
dec
and
cmp
out
jmp
nop
mov
aaa
mov
bound
jne
out
add
repnz
sbb
in
les
add
pusha
test
xor
mov
jno
add
lods
and
add
add
movsb
jecxz
orl
fucomi
mov
dec
sub
inc
fidivs
rcll
call
loop
test
repnz
in
daa
push
lock
xchg
pushf
push
jle
sub
dec
insl
xchg
dec
jnp
sub
and
push
subl
hlt
rcrb
rcrb
clc
gs
test
pop
inc
add
movsl
xlat
sbb
mov
data16
lods
inc
jae
push
dec
sahf
pop
nop
ljmp
mov
push
mov
mov
cs
popf
fidivl
cltd
imul
ja
fwait
ljmp
shll
inc
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
cld
dec
pushf
mov
jl
jle
pop
jo
pop
movsb
mov
push
jge
popf
jl
jns
push
inc
aam
std
mov
clc
cmp
sub
daa
testl
aaa
add
sbb
daa
jno
push
xchg
jle
sub
int
jecxz
push
pop
pop
cmp
and
imul
push
mov
shl
aam
int
ffreep
sbb
xchg
jmp
adc
addb
jo
rcrb
roll
inc
jl
jmp
lret
imul
pushf
xor
push
add
push
pop
mov
add
cld
inc
mov
add
leave
mov
loope
cli
mov
in
push
sbbl
mov
mov
jl
adc
sub
mov
xchg
sub
cmpsb
lock
push
popa
daa
mov
adc
and
xor
xchg
stos
sbb
lock
jnp
inc
sub
insb
in
jae
fistpl
les
push
pushf
adc
in
dec
je
roll
xor
pop
mov
xchg
mov
and
jne
cltd
adc
add
bound
std
into
cmp
xor
nop
xchg
add
or
jno
add
sub
xor
or
test
add
rorl
push
xor
aam
xchg
enter
push
add
mov
cmp
lret
push
push
push
pop
sbb
cmpsb
adc
popf
test
lcall
pop
int3
loop
test
push
call
js
xor
push
push
movsl
shr
pop
imul
in
repnz
sbb
ljmp
or
and
pop
popl
in
shrl
lcall
jl
cmp
push
movsl
int3
subb
xor
mov
mov
cmp
sub
mov
adc
dec
and
and
jbe
inc
mov
hlt
xlat
lock
imul
cmp
pop
inc
push
imul
lds
ljmp
add
jge
cmp
stc
push
adc
inc
out
add
out
in
fs
and
mov
jg
lock
dec
lret
sbb
xor
sub
mov
push
out
cs
sub
xor
jl
aam
fimuls
xchg
icebp
mov
daa
jbe
hlt
popa
jbe
pushf
testb
or
fdivrs
pop
push
frstor
cmp
push
inc
xchg
daa
mov
fimull
js
sbb
mov
pop
popf
jp
outsb
std
loop
fisubrs
sub
cmp
shll
arpl
adc
stc
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
and
mov
jle
pop
jl
jle
das
pop
int3
jno
test
incl
and
aaa
jecxz
lahf
mov
movb
je
sub
es
push
scas
aaa
fwait
clc
lcall
jmp
push
push
int3
pop
cmp
xor
sti
mov
pop
outsl
inc
push
mov
jle
bound
adc
aaa
out
mov
xchg
aam
jmp
shll
scas
in
bound
or
ds
ljmp
pop
adc
inc
out
leave
dec
idivl
shl
dec
cmpsb
push
loop
cltd
mov
lahf
fdivl
jp
mov
shl
xchg
adc
pop
int
clc
out
inc
jns
mov
inc
insb
shrb
sbb
mov
ret
inc
imull
cmp
rorb
jns
push
stos
jle
inc
mov
cs
pop
sti
or
faddp
xor
cltd
cmp
out
in
test
xor
mov
std
and
add
hlt
dec
ljmp
mov
inc
mov
jo
mov
mov
shlb
leave
testb
push
std
aad
adc
mov
adc
xchg
xor
hlt
pop
loop
cmp
cmp
jmp
mov
mov
cmp
test
mov
xlat
fidivl
dec
and
daa
pop
mov
cmpl
insl
mov
pop
push
inc
pushw
das
in
into
in
jbe
loopne
mov
out
call
std
into
inc
xchg
xchg
adc
les
jns
cmpsb
pushf
mov
jb
xchg
scas
dec
mov
hlt
in
mov
or
xor
lahf
sbb
lret
je
adcb
mov
mov
mov
and
dec
sbb
mov
ja
push
leave
mov
call
fsubl
scas
or
or
push
mov
lcall
scas
fdiv
cs
mov
mov
dec
adc
shl
inc
ja
scas
lret
in
aam
andb
xor
adc
or
jg
add
dec
add
lods
push
add
inc
jle
sub
xchg
sub
and
lock
add
and
es
pop
lea
lret
or
mov
add
jno
and
push
in
sbb
lret
and
in
xor
or
testl
bound
xor
pop
or
sub
jbe
jp
nop
sub
pop
mov
scas
jbe
mov
mov
popl
test
xchg
stc
decb
fimuls
and
push
inc
mov
pop
test
pop
enter
loopne
mov
jge
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
stc
shrl
mov
sub
jle
jl
jle
lds
inc
mul
add
stos
dec
cli
negb
mov
aam
cmp
data16
into
pusha
jl
xchg
rcrb
dec
int3
inc
mul
inc
out
gs
xchg
add
dec
xchg
jno
cmpsl
jge
sbb
out
xor
cmp
sbb
adc
adcl
push
push
mov
in
jmp
mov
sub
dec
xchg
xor
insb
xlat
push
xlat
cmpsl
test
mov
and
jae
push
cmpsl
out
in
jmp
pop
notl
lods
imul
aam
imul
cli
stc
mov
outsb
sbb
xchg
xor
xchg
inc
lret
dec
bound
stc
loop
pusha
push
enterw
pushf
add
pop
and
adc
mov
jno
dec
pop
dec
into
fbld
mov
mov
mov
dec
xor
mov
call
sub
cmpsl
mov
xchg
addr16
negb
inc
mov
dec
mov
mov
test
fistl
push
aaa
out
into
cmp
jge
jge
outsl
cmpsb
je
stos
addr16
out
test
xchg
mov
scas
push
repz
pop
add
mov
sub
cmpsl
lods
xchg
lret
int
mov
mov
adc
das
xor
lods
push
cmp
jle
xchg
movsb
lret
scas
sub
mov
cmpb
jnp
xchg
movsl
mov
test
arpl
xor
cltd
mov
into
ret
les
cmc
in
mov
mov
popf
pusha
arpl
aas
hlt
bnd
lods
inc
jg
sub
mov
mov
mov
sub
add
insb
adc
pop
xchg
add
adc
mov
lods
aam
imul
insb
and
push
loope
cs
push
test
push
mov
push
mov
cld
adc
push
sbb
sbb
lods
test
sarb
or
pop
jae
push
aad
pop
lahf
xor
inc
push
test
xchg
daa
adc
xchg
pop
adc
adc
sar
das
test
imul
add
insl
ret
adc
test
cmc
repnz
sub
lea
pop
lods
cmp
jle
jnp
lret
std
mov
data16
adc
loop
mov
xor
loop
scas
sub
int
rorb
and
mov
cmp
enter
scas
jge
jo
nop
loopne
ficoml
gs
repnz
sub
repz
sti
xchg
jmp
cmp
xchg
decl
fsubr
incb
add
outsl
fisttpll
pop
fmull
inc
fst
sub
pop
jl
jle
aas
mov
test
les
jp
sahf
imul
popa
ret
ss
mov
les
icebp
xor
and
mov
push
pop
dec
mull
cmc
arpl
inc
sti
mov
xor
inc
outsb
nop
popa
xor
outsb
pop
xlat
add
dec
lds
jl
ret
jg
mov
rclb
mov
int
inc
pop
inc
sbb
pop
mov
sbb
mov
xor
or
mov
out
push
push
ret
mov
jae
mov
xor
sub
mov
cmpsl
cs
push
mov
jnp
inc
mov
sub
adc
or
pop
or
fisttpl
gs
jne
mov
enter
adc
jge
cs
mov
aam
mov
cltd
dec
cld
cltd
loop
data16
out
inc
dec
adc
push
push
sub
hlt
sub
cmp
add
lret
mov
shll
testl
and
ret
pop
jmp
btr
or
in
pop
pusha
repnz
movsb
or
mov
hlt
adc
sub
push
out
ffree
aaa
cmp
mov
add
add
sub
pop
call
testb
xchg
popf
cmp
insl
xchg
in
ljmp
stc
xchg
imul
test
in
sbb
pop
and
repz
not
fcomip
ret
mov
orl
push
imul
lock
ja
mov
test
fwait
mov
cmp
xchg
dec
cwtl
cli
dec
jge
fs
int
mov
mov
addl
in
jp
or
sti
popf
dec
xor
sbb
sbb
test
daa
mov
ja
sbb
movsl
cmpsb
xchg
dec
aaa
jmp
pop
lds
repz
test
jbe
sub
pop
or
sub
lea
push
loope
mov
sti
mov
xor
imul
jbe
fadds
rclb
dec
stc
mov
popf
sbb
mov
mov
loope
rol
jge
insl
fbld
pop
xor
sbb
or
bound
and
leave
or
mov
cmc
mov
dec
xchg
dec
jmp
inc
cmpsb
sbb
lock
pop
test
mov
xor
enter
nop
push
pop
ret
pop
in
ss
pop
adc
sbb
in
mov
aam
clc
inc
mov
dec
movsb
push
add
in
mov
popa
in
pop
xor
rcr
pop
les
mov
les
lods
repz
pop
push
cmpsb
addb
test
dec
cltd
mov
std
mov
leave
sarb
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
cmpl
ss
sub
jle
add
hlt
movsb
pushf
sub
xchg
mov
jns
in
pushf
sub
and
sub
push
jne
mov
or
in
int3
shll
pop
jno
xchg
sbb
stos
xchg
je
sub
leave
adc
cmpsl
jecxz
add
adc
iret
icebp
stos
scas
int3
stc
aas
add
inc
cwtl
xchg
dec
pop
dec
mov
inc
testl
xor
in
gs
mov
pop
je
popf
icebp
pop
xlat
movsb
push
test
scas
mov
push
and
nop
pusha
mov
aad
push
clc
aaa
lcall
cmp
mov
imul
lret
dec
outsb
jge
stc
icebp
int
dec
inc
and
cmpsb
xor
daa
test
mov
outsl
mov
outsl
rolb
add
pop
inc
nop
add
sbb
xchg
mov
lcall
out
in
sub
add
std
jmp
cltd
dec
or
imull
dec
loope
cmp
sbb
fs
adc
dec
xchg
repnz
into
jecxz
pop
jnp
rolb
sub
lret
mov
jge
addr16
movsb
je
aad
adc
cmpsl
fisubl
pop
dec
lods
mov
jns
and
adc
aad
sub
bound
test
mov
aaa
jle
mov
adc
add
andb
scas
mov
xchg
xchg
arpl
add
dec
stc
subl
rolb
cmp
add
jns
xchg
push
xchg
pop
push
sti
repnz
jbe
out
inc
lret
mov
fnsave
inc
dec
pop
and
nop
outsb
mov
clc
movsl
lock
imul
dec
dec
jne
push
cmpsl
xchg
inc
imul
cli
xchg
pop
adc
inc
fmul
pop
daa
lahf
mov
xlat
mov
pop
dec
jp
or
shlb
dec
jmp
call
sub
sub
insb
jl
dec
imul
jne
add
insl
xor
mov
xlat
shll
sbb
inc
xchg
mov
shrb
jge
das
sub
js
ss
sub
aad
sub
xor
adc
xchg
fwait
push
mov
je
sbb
repnz
mov
lahf
lret
clc
xchg
add
adc
mov
sub
jne
xchg
push
push
mov
mov
and
ds
mov
movsl
imul
xchg
dec
dec
cmp
js
arpl
add
mov
push
dec
in
inc
jnp
jge
cld
scas
data16
test
push
insl
neg
dec
hlt
sub
mov
dec
jno
inc
pop
lods
outsb
loop
sbb
and
inc
xor
jmp
adc
xlat
cmp
sub
sar
pop
mov
mov
lret
arpl
mov
test
cld
jae
repnz
mov
aam
mov
adcl
sarl
mov
cltd
icebp
mov
data16
subb
adc
les
dec
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
jp
cmc
inc
dec
fists
js
cli
daa
fstps
lods
lret
mov
in
je
push
or
jno
jle
aas
loope
andl
xchg
shll
pop
pop
popa
movsl
mov
push
sbb
es
fwait
addr16
fldcw
mov
fcompl
insl
into
inc
rolb
nop
push
imul
mov
sbb
jl
mov
orb
xor
jns
sbb
or
addl
lea
pop
or
leave
xchg
rcl
or
sarl
sbb
mov
push
pop
inc
jns
shll
or
insl
into
mov
push
sbb
cmpb
rol
shl
or
les
xor
imul
jl
call
and
mov
and
push
scas
popa
jp
push
cwtl
fsubrp
cmpsb
js
pop
push
sahf
stc
ret
out
sbb
mov
adc
inc
aad
jmp
lds
and
int3
add
adc
inc
mov
gs
repz
shl
xorl
jb
movsb
jmp
lods
push
push
push
test
mov
jmp
cmp
movb
sbb
lock
pop
mov
and
ret
test
or
sub
std
out
es
cmp
push
adc
mov
adc
pop
js
push
and
mov
adc
mov
lods
add
outsl
sti
jbe
lds
mov
out
mov
mov
fists
clc
incl
test
sbb
into
push
jecxz
jge
push
sti
idivb
cmp
sbb
mov
fdivrl
and
dec
adc
dec
add
inc
xor
xchg
cmp
dec
sub
lods
xor
outsb
jmp
clc
push
pop
inc
fildll
int3
pushf
inc
shl
mov
push
xchg
push
popf
sub
add
adc
out
lret
cmpb
leave
xlat
cmpsl
mov
inc
mov
mov
insl
pop
lds
pop
test
jmp
outsb
push
incl
mov
lcall
inc
in
xor
sbb
insl
scas
mov
push
lea
pop
cld
int
and
jnp
sbb
cmp
scas
push
mov
lret
push
in
stos
mov
add
mov
inc
push
dec
cld
lret
push
xor
out
out
inc
data16
mov
fnstcw
call
out
inc
inc
je
out
fs
and
sub
add
cmp
cs
filds
ss
adc
fldl
outsl
in
pop
jecxz
subl
repnz
iret
outsb
int
js
rcl
fcmovnbe
lret
push
and
sti
mov
or
mov
test
sbb
push
cmpb
cli
cmp
fidivs
nop
scas
hlt
lret
jb
dec
or
push
xor
neg
jmp
jne
sub
test
test
mov
mov
jle
sub
jle
xchg
push
xchg
mov
popf
orb
cmp
lcall
or
jg
inc
mov
cltd
push
jno
imul
testl
lock
jp
lcall
and
dec
inc
xor
dec
mov
mov
add
hlt
or
imul
enter
dec
shl
add
pop
popa
into
loop
push
mov
mov
jle
pop
adc
fs
inc
dec
push
cmc
push
jle
lods
pushf
push
mov
sbb
fs
or
sub
stos
cmp
mov
imul
repz
or
push
lahf
stos
cli
jp
shl
push
scas
or
mov
or
mov
mov
ret
test
loopne
push
aas
mov
sub
rcrb
adc
sahf
and
and
pop
add
cwtl
pop
int
jecxz
adc
into
sti
js
and
mov
scas
dec
mov
mov
lret
into
lcall
test
pop
ja
mov
or
int3
int3
sub
sub
inc
add
and
int
repnz
addr16
inc
jbe
inc
push
hlt
cmpsl
jge
lods
pop
push
fs
cmpsl
adcb
incb
in
mov
lds
fisttpl
push
aaa
or
sub
adc
gs
test
mov
stos
test
imul
mov
mov
fucomp
les
jbe,pn
push
es
push
sbb
shrb
push
or
inc
into
andl
add
ds
adc
out
lods
movsl
jns
xor
outsl
daa
fnstcw
enter
jo
dec
or
jne
dec
aas
shlb
sti
ja
mov
inc
mov
imul
mov
lret
cltd
out
jl
mov
repnz
lds
scas
rorb
test
lock
pop
ror
and
pop
aad
das
mov
clc
pusha
scas
mov
inc
stc
fucomi
sbb
mov
mov
lret
leave
popa
rcll
lret
pextrw
mov
mov
aaa
adc
jo
and
mov
push
mov
xor
sbb
dec
movsb
xchg
divb
mov
pusha
adc
scas
dec
xchg
adcb
fistpll
stos
mov
test
repnz
in
movsl
mov
aas
je
aam
nop
mov
mov
fmul
cwtl
loop
adc
mov
xor
jmp
daa
stos
jmp
mov
adc
xchg
jnp
push
pop
in
outsb
outsl
sarb
leave
shlb
fcomps
ret
repnz
mov
sub
cmc
xchg
mov
les
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
test
aas
jle
sub
jle
fsubs
int3
nop
je
push
jno
lock
pop
mov
nop
aas
lock
cmp
ljmp
or
add
adc
inc
stos
lahf
adc
sub
enter
rclb
in
mov
mov
scas
mov
xchg
adc
leave
cltd
push
mov
cmp
movsl
mov
cmp
sub
and
sub
mov
xchg
outsl
out
inc
fs
sbb
jns
stc
in
push
push
and
or
icebp
mov
dec
and
cmp
arpl
cltd
cmc
sbb
push
ret
mov
jl
jmp
mov
fiaddl
out
sti
popf
insl
xchg
pop
ret
jb
mov
push
bound
push
in
lds
mov
stos
lret
pop
insl
pop
das
stos
sbb
out
test
sbb
jo
into
jecxz
push
ljmp
push
addr16
and
or
enter
xchg
frstor
arpl
repz
fdivl
lods
pop
mov
push
xchg
adc
push
and
fxch
sbb
clc
xchg
mov
add
dec
jge
mov
adc
inc
fadd
pushf
inc
mov
push
dec
mov
sub
and
scas
in
mov
jp
cmpsb
and
dec
loop
scas
cmp
and
in
sbb
sub
sti
sub
insl
jno
dec
fldt
pusha
sub
mov
in
outsl
fnstsw
ljmp
xchg
sar
stos
sbb
fidivrl
aad
inc
aad
ss
xor
adc
mov
andnps
pop
mov
ss
dec
cmpb
xchg
lret
inc
sbb
inc
push
fwait
pop
jecxz
pop
icebp
int3
ds
mov
bswap
lock
stos
sub
jnp
add
insb
ret
sbb
fsubrs
arpl
mov
or
inc
fidivs
movsb
push
cwtl
lret
mov
fisttpl
push
sub
mov
les
in
cmp
push
enter
mov
pop
jnp
adc
push
cli
dec
loop
sbb
add
adc
pusha
push
ret
addr16
insl
adc
lret
mov
cmp
xchg
mov
orl
or
cmpsl
pop
sti
jge
pop
mov
push
cmp
jno
mov
xchg
call
xlat
fldenv
std
fstpt
sbb
in
push
xor
cmp
inc
insl
pop
pop
enter
mov
ret
cmpsb
lret
outsl
mov
push
aas
inc
lahf
or
adc
adc
sbb
lods
imul
scas
jbe
push
mov
test
adc
psllq
add
push
adc
dec
arpl
mov
push
insb
mov
das
jl
fildl
sti
leave
lcall
cmp
scas
dec
in
inc
mov
or
call
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
mov
cmp
mov
test
idivb
scas
js
loopne
or
lret
xor
popa
andb
xor
mov
inc
fisttpl
jns
push
imull
shrl
dec
cmp
inc
push
push
cmp
scas
mov
mov
into
subb
mov
pop
push
add
addr16
adc
jmp
dec
xor
lods
fldcw
aad
popa
cmpsl
lcall
leave
mov
mov
mov
xchg
sub
add
xor
fistpl
pop
sub
loope
sub
aas
stc
pop
add
outsb
cmp
cmpsl
repnz
pop
imul
mov
leave
stc
dec
pop
jb
int3
out
pop
pushl
popf
inc
add
mov
xchg
jbe
and
mov
arpl
adc
jecxz
and
lods
push
lea
pop
aad
jne
pop
push
dec
mov
jp
nop
or
orb
mov
mov
mov
es
ret
fdivr
cmp
cwtl
fdivl
imul
fs
lcall
mov
dec
rcrb
enter
shrl
lret
xor
out
dec
movsl
out
or
xor
pop
mov
inc
xor
scas
daa
push
icebp
insb
bound
mov
jg
xchg
mov
mov
push
pushf
test
push
stos
in
push
pop
xor
jne
push
cltd
xor
jbe
daa
das
jns
jns
pusha
fsubrl
xor
cmp
inc
mov
ret
sub
cmpsb
push
lods
into
push
scas
scas
inc
std
pusha
and
lret
lahf
jg
mov
js
or
aas
out
insl
sub
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
roll
inc
cmp
mov
stos
sbb
xor
dec
sub
outsb
or
lds
mov
addb
add
dec
jp
dec
pop
sub
xchg
int3
or
and
stos
ljmp
ficompl
pop
fucomi
push
bound
enter
pop
data16
inc
jp
adc
add
inc
cmp
lret
jnp
pop
inc
fisubl
push
fwait
adc
out
xor
mov
leave
dec
mov
mov
stos
out
ret
push
adc
sti
dec
outsl
mov
push
test
shlb
and
cmc
xchg
jg
scas
push
mov
mov
sbb
enter
test
pop
inc
test
cmp
cli
push
sti
pop
outsl
cmp
pusha
aas
cmp
push
pop
mov
std
push
mov
push
xor
xchg
dec
addr16
push
inc
mov
and
dec
xchg
pusha
cmpb
lock
xorl
stos
or
dec
xchg
pop
pop
inc
sahf
sub
xlat
cmp
rorb
outsl
stc
lds
or
push
push
mov
ror
pop
repz
sbb
dec
push
fnsave
push
bound
sub
inc
dec
int
scas
loopne
ljmp
mov
icebp
inc
je
test
repz
mov
sub
or
jnp
and
xchg
fimuls
int3
push
jo
jecxz
and
pop
loope
add
push
enter
cli
jl
je
pop
pop
repz
sub
popf
mov
push
mov
jae
or
popa
loop
loope
push
aas
sbb
icebp
and
rolb
add
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
aas
out
imul
mov
and
xchg
stos
jno
fidivs
xchg
adc
loopne
jbe
xor
push
insl
jae
or
or
in
mov
jne
addr16
clc
imul
xchg
fwait
sub
pop
sbb
add
dec
pusha
inc
out
inc
sbb
inc
cltd
inc
lock
xchg
and
mov
mov
je
rorl
mov
fstpt
or
in
dec
je
jo
fs
mov
or
out
test
add
inc
rol
and
xchg
mov
cmc
push
pop
xlat
ss
adc
ss
sub
mov
cwtl
jns
push
idivl
ficoml
pushf
fwait
imul
inc
sub
xchg
xor
and
lods
shll
cmp
pop
fsubs
mov
outsl
dec
sub
pop
repz
or
out
jno
sbb
insl
das
or
and
pop
aaa
loope
ret
ljmp
aas
pop
out
xor
or
pop
cmovg
add
mov
inc
filds
push
mov
aam
popa
orl
sub
fmuls
lods
cmpsb
mov
jo
add
test
aaa
push
sahf
mov
lods
sub
dec
pushf
ret
scas
push
movsb
adc
shlb
lahf
fmul
push
daa
mov
jge
jnp
mov
add
cmp
arpl
stos
fisubs
push
mov
rcrb
xchg
cmpl
jns
add
int
mov
cmp
arpl
pushl
call
test
jmp
and
in
popa
push
lret
xchg
adc
stos
loope
les
mov
loope
mov
in
cmp
bnd
mov
add
loop
dec
pop
fdivs
or
mov
orb
push
hlt
cmp
fnsave
nop
mov
in
xchg
clc
cmp
hlt
inc
je
mov
push
out
adc
data16
lcall
ret
xor
sbb
dec
icebp
cs
and
sub
and
adc
push
imul
bound
leave
pop
push
or
dec
sub
hlt
inc
clc
inc
clc
xor
jne
hlt
sbb
in
pop
ret
aaa
jbe
lahf
mov
xchg
test
stos
and
idivb
es
push
testl
mov
push
pop
fcoml
mov
xchg
les
add
mov
xchg
das
nop
sarl
cmp
outsl
push
sub
fidivrl
repnz
mov
cld
adc
fadds
xor
push
std
ja
hlt
ficompl
bound
mov
mov
push
mov
stos
mov
dec
xor
das
push
mov
push
imul
pop
inc
xor
adc
cmp
mov
add
lods
movsl
in
dec
jl
or
imul
rol
dec
add
jmp
dec
adc
mov
cmc
filds
jmp
out
rol
mov
scas
mov
or
andb
push
cs
xorb
into
lret
in
sbb
pop
jecxz
sub
addb
mov
sub
add
xchg
sbb
cmpsl
lock
bound
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
in
lods
or
jle
add
ja,pt
setb
dec
pop
insb
dec
pop
jns
movb
jne
and
scas
pop
daa
jno
mov
and
in
add
fsubs
fdivrl
sbb
xchg
int
daa
stos
pop
sub
sub
cld
xor
ret
mov
xchg
ret
sbbb
pusha
in
cmp
sbb
push
fisttpll
test
xor
inc
inc
pushf
mov
cmpsb
iret
push
sti
jns
outsb
push
and
mov
sub
mov
jecxz
loopne
mov
mov
pushf
lea
cmp
test
lea
insb
or
cmp
negl
repz
insb
pop
sub
shrl
mov
dec
ss
mov
adc
pop
cmp
out
jnp
insb
lret
and
leave
in
in
pop
rolb
iret
dec
mov
pop
jg
ljmp
dec
mov
adc
popa
mov
or
jge
push
loope
cmp
aam
cli
mov
mov
sarb
in
mov
cmc
push
mov
mov
xor
jae
dec
lods
insb
cmp
jmp
fmull
rcl
cmpb
sub
adc
mov
cmc
inc
out
jno
xchg
xor
xchg
popa
push
cwtl
rcll
push
inc
popa
roll
mov
pop
jo
fsubs
add
clc
in
xor
fimull
xor
mov
sub
enter
mov
loop
loopne
rcr
push
mov
mov
jne
shll
lsl
cmp
mov
dec
and
jbe
mov
mov
out
jl
and
movsl
push
push
stos
fistps
xchg
mov
mov
clc
or
shrl
repz
arpl
dec
cwtl
xor
xchg
add
outsl
add
subb
jne
das
cwtl
and
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
js
inc
adcl
jl
jle
scas
push
adc
cwtl
xchg
jp
jmp
lcall
pop
xor
repnz
jb
fidivs
dec
mov
popa
inc
push
xchg
lds
xchg
test
jmp
or
sbb
scas
in
xor
cmpsb
jp
jecxz
push
sub
js
dec
mov
test
pop
push
shr
hlt
and
ret
mov
je
push
mov
scas
es
xchg
push
stc
sub
data16
cwtl
dec
mov
dec
dec
stos
sbb
pop
das
cmpsb
mov
mov
push
ret
mov
sbb
xchg
push
sbb
cwtl
push
push
cmp
fbstp
or
sbb
mov
out
fbstp
leave
loope
fcmovbe
sbb
inc
jne
mov
jmp
mov
add
jnp
push
mov
stos
insb
xchg
xor
lret
movb
scas
scas
pop
and
rclb
rclb
std
mov
xor
andb
and
ljmp
mov
int3
adcb
stos
push
je
xor
pop
cltd
loop
pop
stos
lds
ds
pushf
xchg
push
addb
and
dec
cmp
mov
icebp
sbb
lret
dec
loope
jae
mov
hlt
mov
add
mov
mov
sbb
sub
lcall
shl
sub
mov
cwtl
push
popf
xorl
in
mov
sub
mov
mov
inc
gs
in
and
sub
jo
and
dec
ret
in
push
dec
pusha
add
cld
jbe
negb
mov
stos
cmp
inc
add
sub
adc
jo
push
sbb
dec
pusha
push
scas
fildll
mov
int3
add
daa
stos
and
push
sti
cmp
fld
sbb
mov
cmp
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
dec
aas
repz
jle
add
in
push
adc
adc
xor
lds
add
mov
out
int3
cmpb
in
pop
and
dec
inc
inc
inc
cltd
orl
or
in
push
sub
nop
in
mov
outsl
mov
sbbl
adc
in
jno
inc
repz
cs
adc
push
mov
cmp
aad
xor
andl
sahf
dec
sub
adc
pop
fnclex
sahf
push
mov
dec
lret
aam
jge
orb
mov
push
cmp
sub
fnstcw
jnp
fdivs
adc
out
bound
std
adc
enter
jmp
pushf
mov
sarb
sahf
mov
js
jle
push
mov
fs
and
push
call
pop
dec
cs
stos
sbbl
pop
ror
dec
out
aaa
adc
mov
pop
fcoms
push
fdiv
pop
push
popf
cltd
movsb
fisttps
adc
iret
push
dec
rcrb
sbb
rcrl
ffreep
popa
dec
push
cmpsb
js
stc
ja
iret
dec
nop
adc
into
clc
push
cmovl
inc
pushf
mov
cmpb
push
and
bound
push
insl
jo
xchg
push
mov
mov
jge
movsb
xchg
xorb
jns
ds
hlt
shll
dec
and
notb
test
cmp
shr
lcall
test
xchg
jo
mov
push
jecxz
mov
push
mov
push
or
sahf
sahf
rcr
nop
notl
add
stos
sub
cmp
sti
ljmp
in
jl
adc
loop
mov
xor
jp
sub
fstp
adc
divb
cmp
dec
clc
loope,pt
fwait
mov
add
mov
jbe
movsb
jb
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
fbld
sub
int3
jle
add
xlat
add
imul
call
das
cld
lds
daa
gs
push
mov
das
icebp
stc
mov
pop
mov
cmc
adc
cmp
test
rorl
xchg
ret
pop
jmp
xor
adc
push
mov
push
loopne
jb
fwait
xor
popf
fs
or
rcrb
or
insb
mov
repz
out
mov
add
push
fdivs
sbb
add
shll
shrb
push
push
lods
cmpsl
fcos
fcomp
jmp
popl
lods
mov
xchg
or
dec
or
or
ljmp
pop
mov
push
cltd
dec
stc
add
mov
test
popa
jo
sbb
cmpl
jmp
add
test
xchg
call
and
enter
in
sub
bound
push
sub
lret
xchg
jno
addb
pop
imulb
mov
shr
arpl
call
imul
mov
cmpsb
pop
push
out
or
sti
push
mov
in
xchg
add
out
dec
daa
or
pop
mov
push
cmpsl
mov
mov
out
fistpll
iret
roll
mov
push
popa
in
out
push
rolb
inc
push
sbbb
inc
sub
mov
subl
inc
mov
insl
hlt
add
mov
in
lcall
mov
into
arpl
stc
push
in
sub
jne
lret
mov
int
sbb
sbb
inc
insb
and
gs
dec
sahf
adc
add
inc
mov
repnz
and
pop
outsb
xchg
negl
xchg
adc
cltd
stos
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
cld
ds
and
jle
push
dec
es
sbbl
xchg
das
stos
jno
sbb
adc
dec
xor
daa
iret
outsb
add
dec
cmp
fs
xchg
xchg
lret
dec
and
xor
mov
pop
mov
icebp
mov
xchg
enter
icebp
cmp
in
lcall
push
mov
cmp
jns
mov
loope
fiaddl
pusha
xchg
aas
testb
add
pop
sub
sarb
pop
mov
ficoms
dec
leave
cltd
lcall
jg
in
jge
cmp
es
pop
sub
ss
or
jp
dec
bound
jne
mov
imul
pop
jecxz
fistps
push
jae
mov
pop
inc
out
inc
popa
adc
and
xchg
push
sbb
xor
and
and
repnz
cmp
sbb
divl
mov
push
adcb
push
fsubs
stos
xchg
mov
popf
dec
add
outsl
inc
gs
lret
fistpll
fiaddl
and
stos
loope
mov
inc
fdivl
pop
mov
aas
scas
xor
mov
pop
ret
cmpsl
jl
push
xor
cmp
add
sahf
sti
xor
call
sbb
push
mov
int3
adc
and
js
into
in
push
push
sub
dec
ret
call
cltd
dec
das
dec
and
popl
sub
insl
push
test
mov
decl
jo
aad
scas
pusha
mov
jnp
dec
test
mov
imul
mov
lock
cld
xor
testb
loope
add
or
push
enter
lret
popa
or
mov
jle
mov
fstl
jg
hlt
cmp
aaa
inc
and
dec
fst
ss
pop
cmc
mov
and
rorb
roll
sub
js
xor
hlt
test
or
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
stc
add
jle
and
jle
add
insl
dec
lods
sbb
insb
push
leavew
nop
sub
cmp
in
pop
mov
adc
fsubr
cmp
mov
cwtl
sub
jb
mov
rolb
out
icebp
mov
xchg
sub
icebp
jg
mov
jno
cmp
stc
jae
in
lea
addb
cmpsb
cli
je
popf
sub
gs
xchg
loope
sbb
jge
jecxz
mov
out
out
test
adc
sub
pop
lahf
int3
jl
test
pop
outsl
push
inc
int
inc
or
test
clc
mov
sbb
cs
xchg
sub
xchg
xor
cmp
add
cmp
xor
daa
divb
mov
jge
fs
aam
mov
hlt
popf
loopne
mov
mov
shrl
lret
mov
and
enter
sub
mov
lock
iret
pop
notb
sbb
push
add
repz
daa
inc
inc
in
je
outsl
movsb
lods
es
fdivr
jecxz
and
mov
aam
jne
sub
cmp
in
xor
adc
std
add
adc
stos
jo
jecxz
lods
xor
xor
cmpsl
push
test
xor
jae
ljmp
aaa
cmp
dec
in
push
idivl
pop
xchg
or
push
movsl
sub
cmpsb
fbstp
mov
call
pop
cmpsl
ret
je
cmpsl
mov
xor
mov
hlt
leave
add
sti
mov
insb
jb
clc
fisubrs
test
test
mov
adc
imul
arpl
mov
add
addr16
jnp
inc
sbb
cmpsb
out
adc
arpl
adc
int3
or
push
xor
pop
jns
mov
cmp
jecxz
or
inc
lods
xchg
mov
or
int
movsl
mov
inc
mov
pusha
inc
pop
imul
push
stos
cld
xchg
int3
rolb
packssdw
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
fmull
jl
jle
ja
call
pop
or
sub
inc
cmp
mov
pop
dec
adc
addr16
push
xchg
cmc
jmp
push
inc
mov
dec
cmp
xchg
fdiv
rorb
sub
mov
lret
adc
mov
rcrl
idivl
jge
jbe
or
pop
mov
inc
xchg
out
mov
loope
scas
sbb
mov
jg
pushf
push
orb
imulb
cwtl
int3
outsb
dec
cmp
call
ret
fnstsw
mov
mov
sbb
mov
ret
sbb
sbb
cmp
sbb
addr16
pop
mov
fwait
or
inc
jno
push
test
xor
and
sbb
pushf
pop
and
out
fdivs
hlt
or
adc
ret
mov
xor
jbe
das
inc
sti
in
mov
push
push
inc
cmp
icebp
mov
or
pushw
sub
mov
mov
loop
sahf
repnz
xor
jge
mov
mov
add
mov
cmp
repnz
insl
filds
call
add
aam
sti
enter
sub
and
jle
negl
mov
cmp
ljmp
or
push
loop
or
ds
mov
rcl
pop
das
in
adc
lods
push
jp
sub
frstor
adc
imul
pop
mov
jmp
cmp
lahf
jno
ror
gs
add
cmp
sbb
mov
adc
mov
stc
xor
ljmp
adc
enter
mov
xchg
lret
lret
push
sbbl
push
out
sub
repnz
sbb
pusha
xlat
pushf
fimuls
push
nop
push
cmpsl
mov
lds
push
je
es
fmull
sarb
repz
pop
out
pop
jnp
sbb
ja
popa
inc
es
pop
test
pop
test
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
insl
mov
jle
and
jle
inc
xchg
mov
shlb
outsl
sti
sbb
push
lods
mov
fidivs
int
push
dec
jno
int3
jp
push
mov
push
mov
inc
rcrl
orl
xchg
rcl
xchg
loop
sahf
add
gs
cltd
mov
push
aad
iret
mov
pusha
ret
ljmp
add
sbb
mov
mov
dec
fcmovb
fmuls
fnstcw
out
jo
mov
out
jl
dec
cltd
into
xchg
shlb
xchg
scas
frstor
into
push
test
or
in
xchg
ljmp
out
in
loop
mov
add
lret
das
mov
mov
sub
fs
adc
nop
movsl
jmp
cld
dec
pop
loopne
movsl
jae
push
inc
pop
sbb
popa
loope
cld
inc
push
icebp
dec
and
pop
das
lahf
std
mov
xchg
rcrl
pop
sarb
out
mov
je
mov
push
xchg
lock
cmp
scas
clc
sbb
or
mov
push
jnp
lret
movsl
xor
fs
pop
fsubs
lds
pushf
mov
mov
lahf
imull
out
repz
mov
push
jno
out
jo
xlat
sahf
and
and
add
add
mov
jo
mov
in
sbb
cmp
jp
inc
xchg
and
inc
or
inc
dec
and
add
insl
daa
push
cmp
movsb
xor
ficoms
cmpsl
or
test
mov
inc
int
inc
repnz
rorl
cwtl
sub
cmpsb
fxch
add
fidivl
and
mov
dec
dec
push
sub
sub
push
ljmp
enter
and
xchg
loopne
jne
lods
xor
mov
jp
lahf
jne
je
fsubs
xchg
mov
inc
je
cmp
adc
fbld
pop
rorl
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
mov
jle
and
jle
and
and
mov
or
in
fs
xor
fmul
mov
ret
sbb
add
shr
dec
data16
sbb
mov
popf
mov
aad
divb
pushf
cltd
ja
add
call
leave
mov
add
gs
inc
and
push
daa
fwait
cmpl
stos
movsl
pop
arpl
sbb
cmp
push
inc
mov
outsb
mov
jle
out
jnp
cwtl
pushf
sbb
lahf
incb
arpl
sub
inc
jp
call
push
and
push
repz
adc
ljmp
int
add
inc
push
js
les
sbb
or
add
and
test
pushf
fstl
test
sub
popf
pop
test
sub
sub
push
int
sbb
ret
das
lahf
mov
aaa
mov
xor
js
out
and
shll
sub
mov
insb
das
cwtl
mov
repz
int
jp
out
ret
mov
add
xchg
pop
out
jecxz
xchg
push
nop
xchg
mov
add
fucomi
pop
test
lods
cltd
mov
sbb
outsb
out
fcomi
cmp
nop
pop
fwait
arpl
shrl
mov
jno
mov
pop
xor
jge
pop
mov
sub
loopnew
cmp
sbb
xor
out
sub
inc
adc
sbb
pop
les
jg
shlb
fs
test
aaa
test
sub
popf
push
xor
ja
clc
mov
cmp
mov
test
fsubl
aaa
lods
dec
gs
cmp
mov
pop
iret
pop
pop
mov
dec
gs
fcomps
jo
les
fwait
push
scas
addr16
push
repnz
or
insb
mov
call
lods
js
push
or
cmpsl
jno
and
push
es
movsl
cmp
inc
test
inc
cmp
scas
inc
rorl
lret
sbb
or
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
repz
xor
cmpsl
pop
mov
dec
les
notl
xor
cmpb
sub
pop
push
fadd
pop
and
cwtl
ljmp
or
jo
loopne
or
sbb
add
repnz
or
subb
sbb
mov
stos
push
adc
xor
inc
fadd
enter
enter
lahf
dec
mov
cltd
mov
jge
xor
jne
fwait
call
lcall
jecxz
out
push
jb
xor
sub
jge
dec
repnz
pop
leave
xorl
inc
outsb
inc
xor
stc
push
xchg
mov
push
and
mov
mov
mov
leave
mov
mov
shl
arpl
dec
add
scas
sarl
jne
or
adc
push
pop
push
jl
ret
int3
imul
or
push
popf
xor
inc
je
fdivrs
adc
mov
dec
loopne
in
int
aam
mov
dec
pop
inc
mov
shl
scas
xchg
roll
add
popa
out
jmp
inc
mov
ret
stos
pop
add
cmp
int3
pusha
pushf
loop
inc
mov
add
lds
push
xchg
mov
lea
mov
jmp
jp
in
mov
sbb
scas
ret
and
mov
push
shlb
adc
test
adc
inc
cld
jns
outsb
mov
xchg
mov
mov
mov
lahf
mov
add
orl
sub
jmp
pop
pop
les
dec
jmp
fwait
xchg
sbb
and
cmpsl
jmp
movsb
lret
inc
mov
fs
jnp
pop
push
mov
in
add
xchg
hlt
repz
or
cmp
outsb
loop
mov
adc
jno
movsl
leave
dec
test
jecxz
loop
dec
sub
sub
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
cmp
jle
jl
jle
ficoml
imul
int
xchg
div
pop
mov
and
xor
incb
pushf
enter
aaa
sub
and
call
negl
ror
loopne
jecxz
fwait
lock
cmp
xchg
adc
mov
repz
pop
pop
orl
addl
out
cwtl
aam
inc
fistl
fsts
ret
adc
jle
add
and
ret
ret
lea
aas
insl
and
es
repnz
mov
scas
mov
jbe
test
out
jmp
sbbl
lock
xchg
mov
mov
leave
lret
mov
pop
cmp
inc
jno
push
gs
test
mov
stos
ud2
sub
xor
inc
add
adc
rcr
std
adc
jle
add
pop
add
ret
and
jge
sbb
das
push
adc
mov
mov
push
dec
data16
sbb
loop
jmp
xchg
imul
ljmp
and
add
out
sub
jns
mov
pop
and
and
add
stos
shrl
xchg
fnstcw
addl
xor
xor
mov
aam
jnp
imul
xchg
inc
mov
stos
repz
add
push
test
jno
cld
pop
es
insl
stos
ss
jge
cmpsl
adc
rorl
mov
push
cltd
push
or
cmpb
fnsave
arpl
add
roll
in
jno
shrl
xchg
test
mov
hlt
rol
outsl
adc
add
cltd
cmc
add
fisttpl
lea
sbb
add
sbb
pop
dec
cmpl
adc
cwtl
sbb
pusha
fadds
fcompl
or
xchg
out
lret
mov
pushf
mov
inc
daa
and
ffree
mov
jnp
sub
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
hlt
dec
mov
jle
jl
jle
jl
mov
xchg
push
fs
pusha
cmc
push
sub
cmpb
cmpsl
scas
test
mov
aaa
scas
inc
sarl
repz
scas
cli
xchg
push
ret
mov
mov
dec
cmp
hlt
stc
push
adc
xor
sub
das
mov
or
or
push
cli
jb
in
adc
jns
insb
fsts
call
add
xchg
lret
arpl
or
xchg
hlt
inc
push
adc
out
push
add
and
out
arpl
sbb
ret
loop
dec
scas
xor
mov
sub
rolb
std
push
dec
mov
shl
ja
cmp
sub
stos
test
xchg
jnp
lods
adc
mov
scas
mov
stc
sti
dec
push
adc
jecxz
into
push
cs
mov
cmc
mov
aas
cmp
push
fwait
repnz
clc
push
mov
rcl
enter
aad
ret
pop
push
pop
clc
call
add
jmp
shll
aaa
adcb
bt
out
insb
xchg
push
add
lea
lcall
or
or
test
movsb
xor
dec
pop
sub
jecxz
flds
pop
shrb
push
ljmp
in
push
mov
mov
aam
or
push
fwait
arpl
xor
leave
sub
mov
xor
pop
jb
pop
ljmp
cli
hlt
cwtl
das
lahf
mov
rcrb
data16
int
rorl
cltd
gs
and
divl
mov
jo
subl
mov
xchg
push
push
std
xchg
dec
xchg
jl
push
mov
cmp
xchg
aad
cld
mov
pop
cs
icebp
cmp
in
dec
add
push
push
mov
push
dec
mov
cmp
shlb
movsb
test
in
jbe
popa
iret
xrelease
and
repz
mov
fistps
mov
rcl
repnz
add
repnz
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
xchg
in
xchg
les
icebp
push
pop
call
inc
sbbl
sbb
pop
jle
mov
imulb
scas
and
or
ljmp
repnz
lds
mov
clc
pop
add
shl
or
and
sbb
jg
cmc
dec
out
dec
lcall
test
adc
shlb
or
adc
pusha
cltd
sub
in
cmc
add
imul
repz
mov
fmul
mov
mov
pusha
cmp
sbbb
xor
cmp
push
or
mov
adc
xor
movsl
in
arpl
jl
icebp
outsl
daa
sti
mov
mov
aad
loop
loop
mov
push
mov
cld
paddusb
jb
scas
pop
or
out
add
hlt
or
dec
pop
pop
repnz
lods
fstpl
cmp
sahf
push
pop
ja
mov
stos
es
repnz
jmp
je
sbb
jbe
mov
dec
sub
ds
clc
mov
out
mov
subl
jo
jb
pop
and
imul
cli
divb
ret
jb
scas
pop
sbb
and
jg
pop
inc
out
add
repz
sbb
mov
mov
dec
sti
in
inc
pop
cli
cmp
scas
xchg
stos
cli
lcall
subb
and
test
sub
mov
in
mov
or
stos
inc
insl
ret
ljmp
mov
lahf
clc
rcll
rorl
out
inc
repz
mov
out
sbbl
sarl
dec
fucomi
xor
inc
pop
cmp
dec
push
push
mov
daa
sub
cmc
mov
nop
jno
cld
xchg
or
push
or
je
lea
push
cs
and
out
cmp
pop
xchg
repnz
pop
xchg
pcmpgtb
in
leave
orb
inc
inc
mov
rol
movsb
inc
inc
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
dec
shlb
pushl
jle
cmp
sub
fcmovnb
int3
stos
paddq
inc
dec
dec
subl
popf
test
xor
add
scas
inc
notl
testl
ja
dec
nop
and
push
mov
lret
mov
hlt
scas
gs
call
mov
jg
ds
das
nop
sbb
in
xor
xchg
inc
in
in
icebp
je
xchg
mov
call
cs
push
xchg
pop
cmp
and
sub
mov
loopne
jae
cmp
jmp
and
cmpsl
mov
jnp
mov
bound
movsb
test
sub
adc
loopne
mov
mov
imul
shlb
xor
or
leave
or
sbbb
bound
sub
sbb
psignb
push
mov
loope
cmp
fisttps
xchg
xor
dec
lea
xchg
xor
push
xchg
jo
add
pop
nop
add
pop
out
sbb
xchg
and
xchg
sbb
repnz
popa
xor
adc
aad
xor
mov
cltd
lds
pushw
loop
mov
xlat
push
test
sbb
insl
out
test
pushf
dec
add
dec
jae
sub
fnstcw
inc
popf
call
shll
into
js
pop
add
arpl
bound
inc
and
mov
dec
cmp
rcr
inc
jnp
cmpsl
or
pop
jbe
aad
dec
sahf
ss
loopne
enter
hlt
lods
imul
int
add
push
enter
scas
arpl
cmpsb
mov
xor
inc
jns
loope
mov
ret
jbe
icebp
dec
sti
mov
imul
imul
pop
sub
lods
sbb
push
test
xor
dec
jnp
mov
scas
lods
in
ljmp
ja
lea
dec
xchg
push
add
jns
shr
arpl
or
pop
test
adc
push
push
push
sbbl
jmp
lds
popa
mov
fisttpll
sti
jle
jle
cmp
ds
scas
mull
pop
dec
push
inc
rsm
sbb
cltd
test
rcll
mulb
ficoms
inc
fcmovb
test
andl
jbe
mov
pusha
leave
fistps
xchg
cmpsl
ss
shl
sahf
test
sbb
mov
cmc
xor
adc
js
jmp
movsl
sbb
popf
dec
dec
dec
jg
and
fnstenv
cltd
stos
sub
shrl
xor
pop
arpl
cmp
sbb
or
inc
in
push
sub
add
mov
xchg
push
sub
mov
and
loopne
mov
cmp
in
xchg
add
lods
jnp
cld
pop
pop
out
add
or
shlb
xchg
cmpsb
dec
add
fs
pop
nop
mov
fstpl
or
ds
les
js
hlt
xchg
test
cmc
int3
dec
aas
frstor
cs
dec
lods
push
inc
xchg
jle
or
push
out
and
xchg
and
neg
hlt
jg
xor
aas
jl
out
xor
push
lcall
iret
sub
add
and
xor
inc
test
scas
push
pop
loopne
mov
daa
imul
out
or
mov
ds
out
lahf
lcall
push
sbb
stos
int3
fs
mov
outsb
cmc
cmp
loop
fistpl
mov
jecxz
maskmovq
divl
sbb
movsl
imul
test
inc
arpl
lret
mov
dec
loopne
inc
js
fisubl
and
int
out
adc
jne
mov
daa
in
pop
outsb
insb
jmp
ds
add
and
imul
mov
ficomps
pop
mov
pusha
push
call
pusha
sbbl
clc
mov
or
pop
ds
cmp
cmp
mov
xchg
inc
pop
pop
test
into
es
inc
push
call
xchg
push
and
dec
loope
sbb
pop
repz
outsl
xor
test
jge
xor
xor
fnstsw
lods
insl
mov
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
adc
and
cmp
jle
cmp
push
xlat
out
out
lods
stos
or
ss
pop
sbb
inc
faddl
lods
in
jno
in
test
addr16
sub
mov
and
xor
fwait
cmp
testb
in
subb
ja
insb
sti
lret
repnz
sbb
xor
xchg
push
xor
aaa
repnz
insb
cmp
inc
push
cwtl
mov
test
pop
add
xor
sbb
mov
int
or
or
mov
scas
scas
rol
dec
inc
stos
push
shrl
popf
push
popa
pop
jns
fisubl
insl
jge
jge
cwtl
ret
xchg
mov
in
fildl
and
ret
dec
stos
popf
inc
xchg
cmp
mov
jp
push
mov
cmp
or
sub
xor
stc
sbb
add
lahf
jbe
addr16
daa
cmp
lock
je
nop
mov
sub
dec
inc
mov
out
sub
popa
pop
stos
rcpps
or
sarl
xchg
jne
mov
jns
mov
sub
push
sti
or
js
xchg
fistpll
adc
pop
mov
es
movsl
jbe
xchg
loopew
or
xchg
and
jne
and
add
fsts
sub
outsl
lock
jb
lret
lds
and
pop
mov
loop
sbb
clc
sub
lock
add
loope
pop
push
repz
xchg
fmulp
sbb
pop
loopne
adc
mov
inc
and
adcb
cmp
sbb
adc
sbbl
and
jge
push
sub
daa
jno
popf
or
adc
ficoms
into
das
push
or
pop
inc
push
call
mov
cmc
sbb
rcrl
scas
arpl
jbe
mov
add
or
outsl
cmp
sbb
hlt
ljmp
sub
sub
pop
in
xorl
cmpsl
cmp
sbb
cwtl
and
pop
dec
lods
divl
into
fldl
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
popa
punpckldq
loopne
jle
jl
jle
lea
pushf
es
push
mov
test
std
mov
pop
mov
mov
ljmp
jno
je
sub
pop
add
mov
mov
adc
push
iret
daa
sub
jae
or
cmp
sub
or
sbb
les
jns
cld
ja
es
rcll
adcl
addr16
adc
add
cmp
cmp
lods
mov
mov
popf
mov
popf
das
das
adc
mov
bnd
add
adc
push
clc
cmp
inc
xlat
mov
mov
sub
xchg
test
jb
mov
jb
decl
mov
rorl
daa
push
cmc
outsb
xchg
fadds
push
out
jne
stos
pop
mov
je
jne
sbb
xchg
dec
aas
into
push
and
cld
adc
cld
addb
dec
inc
jb
cmp
mov
paddb
pop
or
cmp
push
mov
imul
test
dec
pushf
pop
mov
data16
push
testl
out
jns
mov
inc
and
xor
mov
adc
insb
xlat
ret
dec
pushf
mov
sti
pushf
dec
inc
mov
xchg
fldt
adc
in
mov
call
pushf
mov
out
mov
hlt
mov
pop
loope
lret
pop
pop
mov
jecxz
push
xlat
popl
pop
loopne
gs
push
lds
dec
les
push
and
cmp
ljmp
fcompl
xchg
sahf
scas
dec
dec
xchg
mov
repz
inc
xor
dec
divb
sbb
jns
sbb
dec
mov
pusha
sub
clc
push
cltd
cld
pusha
daa
bound
push
jecxz
push
cmc
mov
scas
add
sahf
mov
pop
and
lret
ret
ds
push
add
mov
enter
rcr
pop
pop
or
lock
pop
ret
or
or
fadds
fdivl
adc
jmp
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
mov
jle
out
jle
cmp
sarb
sub
enter
popl
addl
dec
push
pop
ss
arpl
mov
lcall
dec
push
dec
lret
insl
cmpsl
jb
ror
out
subl
cld
push
into
negb
flds
cltd
add
cmp
cmp
pop
test
jne
sahf
jns
add
cmp
stc
pop
out
lds
xor
pop
aas
push
hlt
in
enter
cld
push
test
das
andl
mov
jp
xchg
inc
adc
test
incl
nop
mov
pop
dec
pop
dec
out
scas
pop
sub
push
sbb
and
stos
stos
popa
lock
or
shrl
cmp
fcom
fwait
movsb
mov
rclb
arpl
lock
push
mov
in
shll
fstpt
inc
jecxz
sbb
das
insb
mov
pop
adc
mov
pop
pop
insl
mov
bound
mov
sbb
ficomps
cmp
push
and
cmp
adc
in
test
sub
in
cmp
popa
or
jmp
pop
mov
pop
jle
pop
scas
mov
jg
stos
mov
or
clc
push
and
jge
ss
push
mov
add
jbe
mov
js
sub
cwtl
lret
imul
sbbb
pusha
into
or
mov
cld
mov
xlat
mov
push
push
in
lock
mov
dec
into
xchg
mov
popa
les
call
rcrl
aam
xchg
lds
mov
insl
dec
lret
adc
mov
push
loopne
cmp
std
insb
add
clc
pop
mov
les
gs
and
push
cmp
addr16
lock
into
cltd
aaa
pop
and
cmpsb
pcmpeqw
add
xor
lahf
cs
inc
pusha
xchg
xchg
sbb
dec
and
add
xor
cs
rorl
cld
aad
ret
xor
test
ret
and
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
test
jle
jl
jle
adc
push
mov
fstl
movaps
sub
push
jle
fimuls
stc
pop
and
push
and
xchg
or
mov
sub
pop
and
es
aaa
and
mov
cli
mov
push
inc
imul
jb
scas
icebp
rcll
dec
popa
mov
leave
sbb
mov
scas
push
or
fdivs
pextrw
and
jmp
lods
push
sbb
jge
data16
add
ljmp
sbb
adcb
mov
rcll
and
outsl
inc
lret
adc
aad
or
ljmp
js
sbb
iret
popf
mov
fdivrs
inc
mov
movsb
jnp
out
pop
bound
inc
das
lret
jbe
inc
pop
jae
ror
mov
xchg
mov
cld
xor
fscale
pop
test
mov
pop
cmp
push
pop
sbb
mov
in
outsb
mov
mov
push
les
ds
xor
in
dec
sub
xchg
data16
jle
icebp
jmp
cmp
xor
add
fimuls
jae
inc
add
cmp
loop
lds
cmp
push
loopne
dec
push
pop
push
adc
pop
inc
outsl
mov
cs
imul
es
int
and
jmp
xchg
push
sahf
icebp
movb
sbb
leave
mov
adc
pop
lds
xchg
push
jecxz
mov
xchg
jmp
aas
nop
clc
sub
mov
adc
push
jecxz
jnp
mov
sti
das
push
or
adc
jmp
mov
rcrl
mov
xor
add
clc
mov
je
push
jmp
jge
arpl
add
add
cmpsl
bound
aad
scas
movsb
ss
mov
sub
sub
mov
pop
mov
or
xor
imul
mov
fsubl
jmp
and
negb
lods
mov
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
adc
out
sub
jmp
jle
jl
jle
xchg
les
fisubrl
xchg
int3
jo
push
outsb
xor
jo
adc
xchg
pop
mov
rcrl
gs
cs
mov
mov
orl
int
insb
cmpsl
dec
adc
xchg
mov
shrl
or
ret
pop
test
and
insl
sub
rclb
jecxz
xlat
or
pop
mov
movsb
adc
rorl
jmp
xor
and
mov
into
sub
pusha
icebp
out
pop
adc
lret
ja
jno
push
lret
add
jns
mov
sbb
or
sarb
popf
add
scas
mov
push
and
mov
fisubl
xchg
push
out
xor
mov
xchg
lods
in
sti
mov
leave
pop
lret
sub
push
or
jbe
shrl
add
adc
mov
mov
inc
scas
dec
ret
pusha
jp
xchg
jb
in
jg
cld
cmp
bound
xor
xlat
mov
dec
mov
dec
mov
fistl
jmp
loope
ljmp
mov
sub
mov
dec
mov
pop
cmp
sahf
xor
cmp
and
imul
lods
and
ret
inc
push
lods
adc
mov
stc
in
dec
jbe
xorl
and
lds
xor
xorb
sbb
cmp
ss
cmp
out
mov
mov
inc
adc
pusha
repnz
in
cld
outsl
sub
in
into
lods
out
fsts
jae
xchg
fidivrl
iret
popa
dec
fmull
push
jge
es
icebp
or
cmpsb
les
jno
loope
and
out
aad
dec
dec
ret
js
loope
hlt
popf
sub
inc
mov
popf
insl
hlt
decb
or
es
fistpll
xchg
arpl
jmp
jmp
adc
call
push
lret
and
jecxz
aas
fldt
mov
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
lods
sbb
mov
lret
addr16
xchg
adc
inc
dec
in
sub
loope
call
jno
cld
testl
push
out
mov
fs
sub
mov
jo
adc
or
out
js
stos
jge
inc
xchg
inc
pop
mov
pop
rolb
add
int3
rcll
out
push
pop
and
fsubrp
mov
lcall
or
outsb
pop
out
dec
ficoms
cwtl
test
push
mov
stos
cwtl
adc
mov
aaa
jne
clc
pushf
mov
dec
loope
ljmp
int3
test
rcr
icebp
push
fisttpl
mov
mov
mov
pop
cmc
or
cwtl
lret
push
insb
in
cmpsb
orl
jmp
mov
call
adc
sbb
and
or
add
jl
pop
jae
out
cmp
sbb
adc
add
or
nop
aam
sub
xor
les
or
pop
add
inc
cld
leave
mov
pop
imul
inc
mov
aas
pop
mov
push
mov
xor
aad
xchg
jmp
xchg
aas
jecxz
and
sub
ss
cmpsb
fstpl
xchg
mov
cmp
scas
clc
fstl
adc
mov
jge
adc
cmp
adc
aas
popa
sbb
xchg
dec
adc
daa
mov
dec
inc
jo
cmp
stos
and
dec
sub
mov
roll
mov
fstpt
mov
mov
jno
movsl
mulb
cmp
es
loope
mov
je
sahf
mov
xchg
or
cld
movsb
dec
xor
outsb
lea
stc
je
jbe
call
outsl
xlat
fisubrl
out
dec
dec
lret
jne
sbb
test
subb
bnd
jp
dec
add
push
adc
pop
adc
mov
and
pop
sbb
xchg
and
mov
cmc
lods
xchg
lahf
test
je
xor
sbb
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
or
shlb
jle
jl
jle
cmp
cmp
ljmp
pop
outsl
xchg
cmpsl
cmp
adc
mov
cld
out
inc
dec
and
movsb
stos
dec
dec
sbb
aas
jmp
push
mov
xor
pop
push
movsl
rolb
sbb
push
mov
inc
cld
or
mov
gs
pop
dec
scas
push
arpl
pop
xor
setne
nop
dec
shlb
xorl
divb
pop
fisubs
push
pop
push
mov
jbe
xchg
das
dec
fstps
pop
loope
pop
jp
aas
push
and
insb
ds
fwait
dec
dec
fdivrl
jo
inc
mov
jno
inc
mov
lods
idiv
les
or
xor
mov
scas
cwtl
and
subl
iret
or
js
pop
into
aad
in
popf
cmc
xchg
xchg
sbb
mov
lds
lods
mov
imul
or
ljmp
sti
stos
popa
loop
adc
cmpsb
pop
xchg
add
cmp
or
jo
xchg
aas
cwtl
loope
out
stos
js
insb
fcomps
jge
push
xchg
inc
push
outsl
sti
jbe
inc
jb
push
push
push
lock
lahf
loop
and
dec
ja
ljmp
dec
sub
std
je
cmp
inc
es
jae
ss
xor
inc
dec
aas
jbe
into
jp
stc
pop
or
cmpsb
inc
test
xor
leave
pop
mov
cmpsb
stos
outsl
movsb
mov
or
sbb
out
cmc
lock
pop
das
ss
adc
jae
push
add
fwait
dec
fcmovnbe
dec
mov
out
clc
lea
sub
cmp
or
sahf
and
and
mov
fwait
push
pop
jecxz
or
push
push
or
or
imul
jp
sahf
cmc
lods
in
push
mov
aad
ja
out
lahf
add
adc
sahf
pop
sub
xchg
fsubrs
fdivs
scas
out
fistl
lock
lea
dec
aaa
fistps
xchg
and
mov
xor
jecxz
dec
out
je
lret
push
xchg
insb
mov
repnz
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
iret
lds
jle
jl
jle
std
aaa
stc
push
loop
cwtl
fs
mov
jmp
pop
or
jmp
mov
es
out
mov
push
mov
mov
pop
add
or
insl
push
out
mov
mov
cld
mov
fcoms
cmpsb
xorl
ja
loopne
enter
testb
popf
aam
inc
test
stos
pop
ja
and
dec
or
push
mov
divl
jnp
cmc
jne
push
daa
out
sub
xchg
clc
cmc
dec
loope
xchg
into
std
pop
aam
pop
sbb
dec
sub
test
repz
clc
jp
xchg
push
not
dec
hlt
cli
in
cwtl
adc
inc
mov
xchg
fnstsw
xlat
mov
hlt
lcall
movsl
xchg
add
ret
xchg
fdivs
pop
mov
stos
sarl
xchg
dec
adc
rcll
lock
subb
aam
xchg
pop
jae
xchg
jecxz
mov
adc
nop
dec
cmpsl
mov
push
fisttpll
or
pop
mull
bound
inc
xor
popa
out
xor
xchg
sbb
mov
jg
movsb
jbe
xchg
and
xchg
mov
cmpsb
es
adc
sub
mov
arpl
mov
cmpsl
pop
push
out
jns
cmp
inc
push
sub
mov
out
mov
xchg
cmp
lret
jb
repnz
or
ss
sub
in
push
push
sub
xor
negl
popa
mov
adc
push
sbbb
mov
int
pushf
dec
pop
mov
repz
jnp
cwtl
cmp
add
loope
dec
pop
xchg
push
neg
mov
or
and
push
testb
sub
add
int3
lods
inc
daa
or
mov
gs
loopne
insb
dec
es
jnp
imul
mov
int3
in
adc
inc
cld
pop
ja
mov
jp
dec
sub
movsl
xor
insl
pop
or
sub
in
daa
push
je
in
jl
push
and
or
test
adc
int
sbb
mov
cmpsl
pusha
fisttpll
inc
int
push
mov
and
nop
pop
or
jge
mov
inc
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
test
lock
cmp
movsb
and
sahf
ss
jge
sub
xchg
mov
call
notl
mov
gs
ljmp
test
loop
rcl
mov
xor
std
and
mov
push
dec
or
fdivrs
and
fmull
stc
sub
test
dec
ror
fistpll
xor
loop
fstl
cltd
jl
xor
dec
mov
dec
in
pushf
push
sbb
sbb
movsb
and
loope
imul
jnp
enter
addr16
pop
mov
cmp
out
pop
xchg
push
dec
es
cmc
jecxz
jecxz
mov
call
int
divb
push
xor
dec
rcll
movl
leave
stos
add
cmpsl
dec
mov
xchg
or
stc
inc
mov
jp
and
xchg
mov
mov
pop
divb
add
inc
repnz
adc
fmulp
add
inc
ret
xor
aad
mov
jns
jbe
sbb
roll
pop
pop
and
pushf
inc
push
arpl
fsubp
and
xchg
push
aam
sub
mov
mov
mov
or
mov
int
xchg
aam
jbe
push
loope
adc
jge
loope
or
add
fst
mov
ljmp
nop
cmp
stos
dec
dec
inc
aam
out
dec
aad
inc
scas
inc
testb
and
dec
xor
loop
dec
stc
xor
rolb
aam
pop
lods
dec
mov
mov
dec
pop
inc
mov
das
in
popf
xchg
aam
or
aam
jp
xchg
xchg
mov
inc
xchg
test
xor
das
jecxz
jae
add
sub
das
mov
pop
jno
fnstsw
rclb
push
mov
add
or
mov
add
movsl
ss
add
add
loop
nop
push
sub
fs
and
lock
divb
inc
pop
jne
pushf
mov
lods
mov
jl
lods
fsubs
jno
xlat
roll
testl
mov
xlat
jnp
rcll
shrb
call
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
cwtl
es
mov
jle
cmp
cmp
mov
pop
mov
out
pop
jmp
scas
sbb
rol
jmp
int3
push
adc
jb
sub
ja
push
imul
inc
stc
notb
adc
inc
fdivr
mov
jmp
lcall
ljmp
pop
aad
fstps
mov
mov
int
mov
mov
inc
imul
push
cmc
fdivs
jl
mov
cmp
test
jl
aad
inc
stos
sub
xlat
mov
mov
jb
shl
lcall
adc
stos
fisubs
cli
jge
or
stos
xchg
sbb
arpl
les
imul
inc
push
xchg
adc
fstps
movsb
hlt
cmp
jbe
mov
xor
pop
cmp
xchg
lret
sbb
dec
repz
cmp
imul
shr
push
xchg
xchg
inc
subl
sbb
push
cltd
pusha
cmp
push
xor
jecxz
scas
dec
ret
in
outsb
bound
cld
jmp
xchg
add
pop
inc
into
xor
push
imul
imul
xor
cmp
subl
movsb
mov
add
add
jg
pop
cmp
pop
add
scas
aas
cmp
push
sarl
xor
ret
loopne
pop
adc
outsl
add
sub
and
or
inc
mov
push
lahf
or
mov
js
addb
lcall
into
aas
popf
popa
stos
mov
sahf
adc
mov
sti
push
jecxz
inc
add
add
pop
or
dec
adc
or
push
arpl
rolb
push
std
xchg
popf
jns
sub
push
leave
and
adc
shlb
mov
add
test
cmp
je
mov
mov
test
ja
test
insl
test
jg
out
push
ds
test
lret
fdivs
loop
test
aaa
push
cmc
lret
pop
xchg
sahf
das
jns
loope
or
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
test
jle
jl
jle
mov
jbe
pop
mov
push
adc
and
dec
or
mov
dec
cli
outsb
cmpsb
int3
adc
stos
leave
lahf
test
mov
mov
out
push
or
adc
ffreep
and
fistpll
addr16
daa
test
adc
and
repz
xchg
pop
ret
push
sub
push
ds
subb
mov
fucom
and
hlt
mov
xlat
pop
or
dec
test
fdivrs
fmuls
xchg
sbb
xchg
push
mov
and
fwait
jae
in
aam
je
xchg
decb
add
ret
fs
scas
das
popa
ljmp
mov
mov
push
ret
or
iret
adc
xchg
sti
or
es
or
stc
push
pop
and
inc
mov
dec
lcall
sbbb
and
push
stc
loope
pushl
in
sub
div
in
jp
divl
push
mov
vpor
sahf
and
scas
popa
add
dec
and
inc
outsl
sub
xchg
sub
shll
fdivrs
and
pop
dec
cmp
scas
loopne
mov
daa
push
daa
xor
xor
stos
fcoml
dec
loopne
push
mov
lret
mov
push
push
or
or
push
xchg
pop
fistpll
mov
xchg
add
dec
mov
jp
ficompl
xchg
cli
jl
mov
sti
call
pop
and
and
ficoms
xlat
lret
bound
mov
xchg
mov
test
imul
mov
sub
rorb
aam
sub
and
out
and
mov
pop
mov
clc
mov
leave
pop
or
add
hlt
push
add
mov
lock
pop
add
imul
repz
je
xor
pop
imul
pop
ds
rclb
add
dec
int
add
cmpsl
pop
sbb
jo
dec
xor
sbb
fsubrl
push
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
data16
jle
jl
jle
stos
xchg
push
imul
cmpsl
mov
adc
push
leave
sub
roll
lods
int3
and
mov
adc
out
mov
pop
inc
scas
or
stc
mov
mov
jae
cs
mov
push
ss
cmp
mov
push
inc
add
mov
push
call
mov
sbb
int3
xor
sar
jo
mov
pop
testb
ss
cmp
outsl
out
jbe
jbe
mov
xor
push
movsb
loope
or
inc
pop
adc
loopne
sub
jg
lcall
jbe
mov
mov
add
sbb
xchg
movsb
notb
xor
lock
data16
xchg
test
ret
shl
into
jno
mov
add
jns
and
cmp
adc
cs
push
cmpsb
cltd
pop
js
cmpl
lods
in
ljmp
mov
loop
jnp
popf
cmp
push
mov
xor
negb
mov
mov
dec
xchg
jp
out
push
arpl
pusha
push
jnp
jle
ss
out
push
hlt
mov
adc
ficoms
addr16
popa
or
push
adc
scas
mov
cwtl
add
rcll
ficompl
mov
int
movsb
into
mov
adc
push
ss
je
xchg
andb
movsl
xchg
aas
push
jg
jae
inc
push
lret
xchg
inc
xchg
out
add
ficompl
test
push
dec
fsub
scas
xchg
dec
sbb
cmp
loop
push
sub
pop
je
fnsave
cltd
pop
cmp
andb
stc
int3
mov
sbb
or
mov
fists
pop
fucomi
xchg
test
lcall
repnz
and
aam
or
inc
xchg
xor
cmp
hlt
or
loopne
add
xlat
jecxz
add
outsl
in
adc
xchg
aaa
and
sbb
push
stos
add
jg
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
outsb
cmp
jle
jl
jle
sbb
mov
jg
out
rcrb
shlb
jae
xor
jae
adcl
sbb
mov
adc
stc
sub
jns
in
adc
stos
cmp
outsb
dec
dec
and
inc
ret
push
aad
mov
jne
mull
or
in
xor
fisttpll
nop
pop
rorb
ds
fwait
or
xchg
lods
push
xchg
ret
outsb
push
push
shll
add
cmp
shr
hlt
sub
sbb
cmp
cmp
fisttpl
cmp
ljmp
push
lahf
xlat
adc
xlat
fwait
pop
je
fwait
mov
or
rcrl
adc
and
divb
in
dec
das
add
sbb
jmp
mov
aam
sahf
push
sbb
popa
stc
inc
stos
adc
mov
hlt
mov
cmp
pop
clc
xor
jns
add
in
pop
dec
or
int3
xchg
pop
push
mov
ljmp
pop
dec
push
sbb
lods
repz
movsl
adcb
push
pop
xchg
mov
dec
add
jbe
outsl
out
sub
rorb
jno
lods
repz
sbb
hlt
and
adc
sbb
or
je
jg
add
xor
out
jmp
mov
xchg
mov
jecxz
jns
arpl
jnp
adc
test
or
int3
lods
push
inc
dec
icebp
ds
mov
pop
sub
and
pop
inc
pop
add
stc
frstor
cmp
pop
mov
or
shrl
or
mov
dec
ljmp
loop
int
pop
xchg
lock
es
xchg
in
sbb
inc
cmp
dec
out
jb
leave
jne
mov
leave
mov
push
sbb
aaa
push
adc
icebp
inc
out
ret
rolb
add
les
mov
mov
fwait
outsl
divl
cltd
in
sbb
rolb
sahf
push
cli
jl
out
push
test
adc
adc
lods
in
faddl
jo
inc
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
je
rorl
jle
cmp
popa
add
imul
xchg
adc
dec
fstps
aam
xchg
rcll
out
sbb
push
int3
or
sub
stc
fidivrs
mov
dec
cmp
or
or
stc
lret
or
int3
mov
cmp
aaa
movsl
or
mov
sub
call
sahf
shl
add
lcall
imul
xchg
icebp
add
pop
xchg
mov
mov
lea
fucomip
push
inc
mov
mov
enter
repz
lret
lret
push
es
mov
lcall
inc
mov
jns
call
jns
xlat
and
adc
scas
das
loope
icebp
xchg
sbb
push
dec
cmp
jl
push
xor
mov
cld
jge
pop
pusha
mov
addr16
or
clc
pusha
ljmp
stos
sub
mov
and
rorb
add
ds
mov
pop
sbb
stos
fs
and
or
add
mov
lret
cltd
xchg
decl
push
idivl
sub
dec
movsb
mov
push
scas
repz
lahf
ror
call
push
scas
mov
mov
or
mov
adc
popf
cmc
xchg
cmp
sub
cmp
loop
xor
sub
sub
sbb
inc
mov
xchg
adc
rcll
and
mov
xchg
pop
fwait
mov
xchg
jp
pop
into
fistl
movsb
pop
mov
lods
inc
dec
test
loop
push
xchg
xchg
in
sub
adc
sub
or
pop
in
push
aas
mov
adc
sub
mov
call
repz
xchg
or
aas
bound
mov
cmpb
dec
xchg
jl
dec
out
xlat
hlt
lods
pop
pop
add
or
adc
jb
fnstenv
mov
sbb
cmp
pop
lret
aaa
mov
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shrl
cmpb
jl
jle
aas
jge
cmp
fmull
ss
inc
shrd
cmpsb
mov
scas
and
repnz
dec
mov
xor
test
xor
clc
push
sub
jne
icebp
mov
or
imulb
imull
or
cmpsl
or
jecxz
daa
lret
adc
jg
ret
cltd
push
pop
addps
ja
sbb
scas
or
clc
fistpl
call
mov
pop
or
lcall
cmc
xchg
insl
dec
pop
dec
data16
lret
lret
aas
push
fisubrs
rorb
cmp
push
fcompl
lds
fdivs
ret
out
jecxz
lea
popf
sti
ds
imull
das
in
nop
clc
repnz
rcr
mov
push
loope
or
aam
mov
pop
pop
cmp
mov
and
stos
pop
mov
fwait
popl
nop
add
bound
imulb
cmc
das
ja
xchg
sbb
stc
and
popl
mov
clc
pop
xchg
mov
cs
sbb
or
xchg
sbb
scas
push
fisubrl
sub
mov
repnz
cmp
test
cmp
int
sub
push
movsl
stc
jmp
test
push
adc
xorb
aas
sub
aad
popa
mov
addb
sub
cs
jbe
ficomps
pop
or
lds
out
in
lret
dec
push
aaa
fists
ja
pop
decl
mov
xor
in
test
jmp
mov
xor
push
sbb
pop
jae
jne
test
fwait
or
aam
or
push
jmp
xchg
aam
movsbl
sub
and
push
pushf
inc
fldenv
inc
jge
dec
enter
jmp
lret
stos
loope
sar
shl
jbe
inc
fildl
pushf
and
and
jae
add
imul
push
push
pop
push
ljmp
sbbb
out
mov
inc
add
mov
sub
mov
enter
dec
push
adc
in
and
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
out
fiadds
jle
je
fmull
rol
stos
xor
mov
jge
or
add
mov
lret
arpl
ss
pusha
cmp
hlt
sbb
cld
aad
add
adc
in
xchg
cmpsb
imull
gs
jge
js
aad
pop
mov
inc
inc
dec
hlt
and
push
push
xchg
jl
cmc
and
inc
push
mov
add
push
jle
add
cmpsb
inc
shl
js
dec
out
mov
mov
xlat
dec
out
xchg
push
nop
out
mov
fxch
push
test
mov
jecxz
mov
sbb
js
movsb
incb
icebp
or
mov
ljmp
sbbl
aaa
dec
imul
cmpsb
inc
sub
cld
pop
pop
push
adc
mov
xchg
mov
cmpsl
push
shlb
xchg
aad
dec
idivl
fwait
pop
rorl
add
fcmovbe
pop
data16
dec
xchg
testb
inc
mov
js
xor
pop
stos
add
jmp
fstpt
adc
rol
add
xor
xchg
adc
iret
test
bound
lret
adc
nop
cmpsb
iret
or
shlb
sub
mov
mov
pop
fcmovnb
leave
xchg
inc
xor
frstor
pop
jg
adc
xchg
and
cmp
jns
inc
cmp
add
cwtl
movsl
insl
mov
mov
push
xorb
cmp
stos
scas
and
push
push
lcall
and
loop
lret
cmpsb
jnp
fstpt
push
ret
aam
cmp
cmp
mov
fidivl
xchg
popl
or
jmp
pop
jecxz
sub
push
xor
iret
mov
fucom
inc
mov
cld
popf
mov
mov
and
nop
lret
iret
sub
push
sub
jle
pop
add
sbb
stos
mov
sbb
sub
push
mov
loope
jl
and
cmp
js
inc
fisttpl
imul
fists
jb
jno
push
adc
shr
add
add
mov
cwtl
mov
mov
cmp
mov
mov
cmp
sbb
sti
jl
push
pop
jge
popf
imul
xchg
imul
and
incl
xor
or
popa
jb
inc
nop
gs
inc
xchg
test
jp
scas
push
fmuls
pop
or
mov
sbb
mov
rcrl
popa
fstps
cmc
push
test
sub
subb
bound
jnp
jmp
ret
cmp
or
jne
lret
xchg
sbb
mov
es
xchg
jp
mov
and
mov
mov
pop
cmp
sub
push
subb
xor
das
leave
add
jbe
popf
xchg
push
sbb
out
test
mov
fnstenv
gs
insb
jae
sti
test
adc
sarb
cwtl
lahf
or
xor
out
jns
into
xchg
cmpsb
lret
inc
mov
mov
add
sahf
xor
mov
mov
xchg
or
aas
ds
out
iret
cli
or
daa
leave
inc
mov
dec
aas
cmc
mov
scas
push
push
mov
mov
pop
testb
mov
cli
pop
mov
pop
mov
cs
fadd
dec
and
pop
jo
aad
dec
outsb
in
js
rorb
inc
outsb
sbb
mov
popf
jecxz
mov
mov
xor
fidivrs
fcompl
call
sbb
das
test
ljmp
sbb
mov
and
mov
mov
ret
aam
pop
out
movsl
clc
imul
push
push
push
dec
push
mov
fcompl
mov
fimuls
in
notb
push
xor
pop
jg
aam
fists
pop
popf
pusha
sti
push
or
xchg
das
inc
aam
outsl
cmp
pop
and
icebp
jmp
mov
xor
cwtl
sbb
jg
xor
js
add
xchg
add
sub
jp
xor
dec
pop
std
lods
ja
ret
adc
cmpsb
pop
inc
fdivs
push
inc
inc
add
enter
add
rcrb
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
or
and
cmp
inc
push
stc
sti
and
dec
dec
pop
testl
les
sbb
mov
jne
inc
cmpsl
inc
jp
mov
dec
dec
mov
pop
movsb
mov
fiaddl
incb
std
scas
je
shl
inc
sub
push
icebp
or
cwtl
movsl
mov
push
jge
adc
mov
and
push
repz
ljmp
lret
jbe
push
dec
fcmove
jne
adc
repz
div
and
cltd
mov
cmp
stc
xchg
rol
lret
mov
jb
and
idivl
push
inc
fnstsw
insb
roll
cs
or
add
xchg
loop
in
in
adc
stos
push
lods
push
xchg
cmp
addr16
cmpsl
pop
mov
mov
ret
xchg
dec
mov
jle
add
xchg
das
sbb
fcmovnb
cmp
push
add
aaa
adc
or
xor
out
cli
adc
ret
in
out
ljmp
les
test
movsl
pop
mov
sub
loope
sub
pop
sub
enter
adc
mov
mov
test
sbb
stc
stos
andb
jno
cmp
push
sbb
xchg
inc
test
jae
test
mov
fidivs
push
inc
mov
jmp
fadd
pop
fisubrs
into
pop
xor
ret
push
in
cmp
and
xchg
jo
test
push
xchg
orb
iret
inc
push
xchg
jnp
addr16
and
xchg
lods
mov
test
push
popa
ss
scas
popf
shlb
adc
xchg
xchg
inc
aad
cmp
cltd
adc
xlat
pop
cmp
lcall
into
fsubs
popf
adc
xor
clc
out
nop
and
xchg
push
repz
dec
jg
test
dec
cwtl
call
jae
gs
das
or
inc
and
icebp
out
daa
inc
cltd
dec
pop
std
push
insb
cmpsb
xchg
cwtl
lods
push
stos
xor
dec
out
loop
fst
mov
ret
lods
out
mov
and
jne
xor
lds
or
sub
xchg
jmp
push
std
dec
sahf
push
push
add
dec
lds
jle
jl
jle
cmpsb
or
xchg
xor
adc
sti
dec
lcall
loopne
sti
into
sbb
in
jns
popf
xchg
sub
mov
dec
popa
fcomi
movsb
aad
fldcw
insb
dec
lock
insb
sahf
out
sbb
lock
or
mov
leave
nop
sub
mov
push
adc
mov
das
mov
ds
lret
mov
cmp
daa
popa
push
mov
out
movsb
nop
insb
ret
sahf
or
sahf
pop
loop
imul
outsb
enter
jmp
test
stos
pop
les
arpl
imul
sbb
pop
into
push
int
jbe
xor
testl
inc
lock
inc
xchg
inc
xor
inc
out
jmp
les
test
add
mov
scas
mov
enter
test
stc
int3
dec
aas
push
les
lods
icebp
aaa
leave
insb
mov
xchg
xchg
or
mov
std
cmp
stos
lods
movsb
mov
ss
jmp
rclb
and
and
jle
aad
icebp
call
jp
adc
or
mov
fwait
pop
push
adc
cmc
je
lahf
inc
fildl
int3
stos
sqrtps
cmc
hlt
jl
cmp
xchg
insb
jl
push
mov
cwtl
test
or
xlat
dec
mov
push
js
addr16
sub
push
movsl
out
roll
xchg
shll
push
lods
adc
sbb
or
mov
mov
loope
fimull
stc
lods
fnstsw
jg
outsl
pop
js
jecxz
jnp
mov
cmp
add
jae
xchg
addr16
xlat
sub
sbb
inc
and
repz
and
dec
lock
dec
xchg
and
inc
xor
cmp
mov
xchg
push
outsl
jne
jl
pop
inc
pop
xchg
xor
enter
lret
orb
mov
ds
in
jecxz
push
fstps
lock
popa
xchg
lods
rcll
mov
rcrb
inc
std
or
cmc
call
cmpsl
in
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
cmpsb
in
scas
testb
jle
or
lods
fwait
in
sarb
repnz
gs
testl
cltd
stos
push
mov
push
iret
test
lret
movsb
leave
adcl
aaa
inc
lock
shl
jo
cs
out
jge
insl
testb
mov
je
ljmp
or
gs
aad
or
shlb
or
dec
mov
push
dec
stos
cmp
push
sub
and
mov
bound
mov
sbb
je
popf
mov
gs
xor
lretw
pop
aas
jp
fucom
into
notl
sbb
shl
movsb
fldcw
mov
in
scas
push
xchg
xor
cs
cmp
or
or
jo
jg
cwtl
sub
inc
dec
frstor
mov
fs
mov
test
and
rolb
in
mov
pop
pop
jmp
stos
mov
fs
and
jmp
fcoml
or
pcmpeqd
jmp
mov
mov
mov
pop
add
test
int
push
mov
and
jl
ja
xchg
cwtl
mov
jecxz
jae
outsb
and
in
xchg
loopne
cmpsb
push
add
mov
xor
jmp
add
test
popf
neg
sub
xor
stc
mov
testb
sub
shlb
ss
pop
insl
adc
stc
mov
jle
int3
repnz
fldenv
lea
add
or
inc
push
loop
mov
sbb
movsl
rolb
dec
ljmp
lret
cld
dec
jge
push
sar
into
adc
ds
xor
mov
add
xchg
mov
push
out
and
sbbl
jle
cltd
xchg
adc
insb
lods
cmp
ds
cmpsl
out
neg
pop
xor
les
or
ja
fildll
test
insb
or
and
iret
mov
add
fisttpl
add
add
stos
mov
pop
ss
pop
popa
mov
jle
cmp
inc
fisubl
sub
pop
ret
push
cli
or
lahf
add
dec
pop
jg
or
ljmp
lcall
js
jg
dec
nop
out
iret
sbb
pop
xor
stos
out
cmpl
scas
movsb
std
pushf
leave
mov
insl
xchg
in
repnz
push
rcrl
lea
sub
cld
test
ss
cmp
xchg
mov
nop
xor
not
or
push
gs
sbb
fiadds
aaa
lods
jecxz
jb
out
dec
int
jbe
adc
rolb
dec
push
cmp
lcall
push
adc
mov
and
je
repnz
mov
lret
mov
or
xchg
pusha
sbb
dec
fmul
lods
jl
ficompl
movsb
fnstsw
movb
xchg
cwtl
xchg
decb
lock
fnstsw
or
jmp
arpl
das
sub
shrb
inc
lahf
push
add
lods
or
nop
scas
fildll
cmc
in
out
sti
mov
sbb
cli
push
dec
sti
and
sbb
push
lahf
mov
aas
pop
pop
mov
and
incb
test
cmpsl
cmpl
mov
adc
sbbb
pushf
arpl
lea
or
enter
call
fidivl
add
sbb
subl
gs
outsl
xor
push
sbb
hlt
lea
stos
bound
mov
push
test
bswap
xchg
push
add
dec
push
push
inc
or
hlt
ds
and
jmp
sbb
insb
dec
test
imul
xchg
jo
test
and
adcl
mov
xor
cmp
push
or
and
cvtps2pd
clc
iret
cmp
sub
repz
lret
or
mov
bound
addr16
or
push
outsb
sbb
loope
push
daa
push
pop
loopne
fiaddl
sbb
jne
sahf
xlat
push
stc
push
jge
fbld
test
in
pop
dec
inc
ret
xchg
repnz
inc
mov
pop
aam
test
pop
push
mov
lds
push
and
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
scas
cwtl
inc
jp
jle
jl,pt
jle
icebp
repz
jnp
scas
mov
fcmovb
pop
icebp
sub
push
dec
aad
repz
sbbl
hlt
and
push
dec
lds
es
mov
pop
inc
pop
adc
adc
xchg
dec
cmp
fldl
mov
fimuls
sub
stc
mov
adc
push
pop
mov
iret
popf
les
sbb
sbb
mov
fnstsw
inc
sbbl
jbe
inc
rcrb
cmc
jl
ret
xor
pop
sbb
mov
push
lahf
insb
rcll
jne
popf
sbb
js
push
aas
lods
into
jmp
pushf
mov
add
cli
mov
outsl
dec
jl
mov
aad
xor
add
cld
test
or
dec
iret
bound
loopne
outsl
gs
cld
mov
push
inc
data16
dec
ret
aad
repnz
inc
xchg
fxch
add
pop
sub
mov
dec
adc
movsl
hlt
and
push
xorb
lods
push
xor
adc
mov
test
push
xchg
inc
and
shrl
in
jl
cli
ja
out
sbb
cmp
jns
aam
inc
and
push
jbe
pop
or
jg
test
adc
sub
mov
fisubl
mov
add
movsl
adc
adc
jecxz
das
cmp
inc
mov
and
cmp
addb
jl
inc
xchg
dec
mov
cli
rorb
stc
sub
test
mov
jg
inc
fs
aaa
pop
loop
orb
ljmp
cmp
call
sub
out
xchg
leave
fisubs
fsubl
inc
push
aaa
push
push
cld
hlt
xor
mov
test
in
cs
movsb
adc
mov
ds
dec
fstl
arpl
add
lahf
push
sub
repnz
cmp
test
mov
jmp
xchg
into
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
jnp
mov
nop
jle
jl,pt
jle
test
lock
ja
insb
mov
addr16
test
pop
aam
cmp
hlt
cmp
and
in
cld
jp
shr
lods
mov
mov
ja
jmp
cmp
push
scas
mov
and
mov
jnp
data16
or
fldenv
js
popf
outsl
enter
movsl
jo
cli
sbb
lods
adc
ror
in
jae
dec
push
inc
lea
stos
push
ret
push
std
pushf
popa
jmp
shlb
cltd
imul
lret
dec
mov
popf
lea
mov
pandn
jecxz
xor
insl
ljmp
or
xchg
push
jno
xchg
jp
cwtl
sub
fcmovnu
popa
gs
mov
mov
stos
rdpmc
dec
lret
sbb
call
fidivl
lret
pop
fildll
insl
inc
push
faddl
and
cmp
and
xchg
cmp
ret
and
mov
xchg
jae
inc
jo
mov
shll
pop
pop
xor
movb
hlt
and
paddw
push
push
xor
hlt
in
vshufps
loope
jle
xor
movl
icebp
pop
xor
in
mov
call
lods
cli
imul
aad
xchg
cltd
and
leave
mov
inc
xchg
cmp
aaa
stos
inc
imul
jle
insb
push
and
stc
stos
pop
hlt
xchg
icebp
lahf
sub
mov
bound
insb
bound
jecxz
sub
xor
xchg
or
jo
sub
push
or
xor
ret
sub
sub
or
sahf
cli
push
mov
push
enter
das
fwait
mov
dec
pop
xrelease
lds
fwait
mov
mov
inc
push
push
jmp
test
lea
dec
lds
fyl2xp1
add
jne
ret
and
shlb
mov
cmp
cmp
sar
stos
dec
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
pop
out
add
fadd
or
xchg
jmp
ret
dec
xchg
cmp
pop
cmp
mov
hlt
rcll
cmp
and
ljmp
mov
test
inc
mov
clc
sub
cmpsb
popfw
mov
inc
push
and
and
inc
sbb
or
inc
lret
ds
cmp
fisubs
movsb
add
outsl
mov
cmpsb
ss
shrl
and
dec
fwait
cmp
in
jl
js
jmp
pop
movsl
jno
arpl
mov
pop
pop
ror
pmuludq
sub
mov
jnp
lcall
lods
or
in
dec
stos
and
pop
mov
loopne
pop
xor
lret
or
mov
xchg
call
jbe
xchg
subl
shll
sbb
clc
add
inc
movsl
ret
inc
and
in
mov
dec
push
xor
push
shll
add
out
int3
popf
cmpb
xor
push
movsl
rorl
outsb
andl
rcrl
push
lods
mov
lea
nop
cmc
cmp
mov
adc
mov
outsb
inc
fbstp
jl
adc
outsb
inc
jne
cli
rolb
sti
cmp
jo
push
add
icebp
ret
scas
xor
push
inc
hlt
inc
jns
jp
lock
sub
push
stc
addr16
addr16
stc
aas
movsl
mov
push
addr16
dec
mov
cmc
mov
rorb
outsb
aad
xor
cli
sub
daa
ds
sbb
push
sbb
sub
notb
leave
inc
outsl
test
pop
aad
adc
mov
jle
sbb
das
and
pop
loopne
rolb
in
xchg
jbe
in
pop
adc
pop
in
mov
push
push
fnstsw
xor
out
movsl
pop
xchg
sub
mov
mov
addr16
pop
fildll
daa
push
mov
mov
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
notl
pushf
jle
adc
jle
lahf
in
addl
sbbb
jmp
push
pop
js
xchg
out
fisubs
and
icebp
gs
mull
loope
adc
xlat
sub
pop
add
shlb
shll
push
jo
je
xor
adc
inc
ds
inc
lahf
xor
ret
movsb
jbe
stos
and
push
shrl
jge
and
jns
xchg
jl
mov
test
mov
es
sbb
dec
aas
loopne
adc
into
push
stos
insl
sar
stos
jno
mov
and
cld
jnp
int3
push
clc
adc
mov
notl
ret
call
lds
rcrb
dec
jmp
add
inc
enter
mov
in
push
xor
lods
popa
movsb
jne
loope
push
jecxz
out
inc
or
cli
rclb
sbb
popf
adc
push
and
arpl
cmpb
xor
inc
mov
pushf
out
repnz
pop
jns
and
pop
sbb
or
rcrl
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
leave
inc
out
pop
popf
jle
adc
jle
loope
pop
std
push
mov
int
and
cmp
les
add
in
mov
dec
rcll
mov
and
cmpsb
push
pop
mov
mov
pop
sbb
clc
ds
adc
fwait
aaa
xchg
and
xchg
faddl
loope
stos
in
xor
jno
es
cwtl
xor
in
pop
lret
pop
inc
jmp
testb
es
fwait
shrb
negl
and
or
fbstp
xchg
popf
jb
jp
mov
and
or
in
mov
gs
and
ds
pop
adc
imul
jg
movsb
and
leave
jb
enter
stos
jmp
mov
das
adc
shl
cwtl
sub
push
jle
sub
jbe
push
je
rorb
jae
fisttpl
sbb
pop
loope
dec
inc
xorl
movsb
ljmp
add
in
mov
add
pop
rcrb
ljmp
and
pop
jl
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
lcall
jle
jg
jle
xchg
pushf
data16
js
and
xchg
outsb
mov
inc
add
int3
mov
dec
movsb
lods
test
fmuls
dec
add
stos
mov
push
xchg
lret
or
mov
int
movsb
xor
loopne
adc
and
sbb
sub
xor
jmp
cmp
and
or
sbb
xchg
lods
sahf
cmp
out
fbstp
hlt
pop
mov
mov
rcl
mov
dec
sub
imul
jg
or
pop
call
pop
add
sbb
cmp
outsb
mov
jns
jge
mov
ljmp
pop
sbb
and
jp
sbb
sahf
jecxz
mov
or
and
dec
cwtl
mov
sub
sbb
in
cmc
dec
xor
sarb
scas
imul
mov
std
std
push
push
testl
outsb
js
lea
ja
stos
cmp
lea
inc
call
add
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
mov
cwtl
jle
adc
jle
jno
sbb
mov
test
lahf
jnp
dec
sub
lcall
jl
mov
leave
aas
cs
inc
jmp
or
adc
inc
push
mov
into
pop
mov
lods
or
mov
aas
xchg
mov
sti
push
cmc
repz
ljmp
jmp
into
add
dec
xchg
imul
in
lds
mov
scas
fnop
nop
or
mov
and
ret
mov
out
xor
bswap
imul
fsubrl
pop
push
stos
popf
mov
jne
mov
jb
or
xchg
inc
or
out
mov
mov
cmp
push
sub
pop
or
sub
dec
cmc
or
js
mov
flds
add
lret
lock
mov
push
ret
add
jns
je
inc
push
or
fcmovb
pushf
add
mov
xor
sbb
mov
push
cmp
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
daa
aas
mov
cltd
jle
adc
jle
std
inc
cs
xor
mov
pop
ss
dec
out
adc
cwtl
sbb
aam
dec
pop
adc
dec
jle
dec
jmp
mov
jae
aad
cmp
xlat
push
das
push
arpl
inc
out
aaa
iret
fnstcw
xchg
and
popa
jecxz
cmp
std
stos
jne
cs
out
test
outsb
jno
test
test
and
sbb
cmp
or
adc
dec
arpl
or
lret
pop
pop
push
and
and
xor
popf
pop
pop
cmpsl
insl
hlt
mulb
inc
mov
push
jge
inc
push
sub
push
in
xor
adc
sub
sbb
pop
inc
test
aas
fs
adc
daa
das
mov
and
jae
jecxz
cmpsl
xor
push
imul
adc
bound
pop
out
dec
cmp
jno
mov
sub
cltd
inc
loopne
stos
aam
mov
test
jne
shl
jae
stos
add
arpl
ds
in
jno
insb
outsb
lret
xor
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
cmp
in
sub
pop
mov
les
ret
lds
push
lcall
in
inc
xchg
insl
push
rcll
mov
loop
movsb
inc
add
ffreep
xor
filds
ja
mov
mov
out
sbbl
jmp
push
and
dec
adc
scas
mov
mov
mulb
mov
data16
cmpb
movsl
jo
dec
push
int
outsl
imul
dec
stos
mov
cmp
inc
clc
cwtl
xor
lret
jmp
adc
movsl
sub
mov
and
xchg
jge
jl
loop
xorl
and
cmp
out
roll
sub
xchg
mov
sub
push
xchg
cmp
lcall
sub
and
sbb
dec
jbe
and
aad
cs
jno
sub
cli
sub
jo
dec
add
pop
stos
mov
lds
jecxz
or
sbb
sbb
cmp
popf
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
dec
in
loop
jle
adc
jle
adc
xor
nop
jmp
das
in
pop
scas
shld
test
enter
hlt
inc
cmp
mov
cmp
fidivrl
loop
xor
cld
lds
jo
mov
cmp
sbb
ret
push
add
lds
add
mov
or
xchg
dec
adc
movsl
movsl
pushf
jne
fwait
mov
xchg
repnz
mov
lea
adc
daa
xchg
xlat
sub
stos
popf
pop
mov
inc
cmp
pop
aas
scas
das
popf
out
enter
xchg
mov
or
rolb
shlb
push
enter
cmp
test
rol
and
aaa
insb
and
movsb
fwait
stos
cmp
inc
mov
push
in
loope
add
add
cmpsb
sbbb
call
xor
pop
sub
push
ret
shlb
sbb
xlat
pop
leave
push
mov
rep
cmp
inc
frstor
into
loop
mov
std
mov
rep
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
sub
movsb
jle
adc
jle
pop
sub
lret
jne
mov
pushf
jb
push
cmc
sarb
decb
xor
jmp
jnp
in
sbb
fwait
out
adc
mov
add
imul
les
out
sub
mov
movsl
cs
jae
out
jp
or
jae
or
xor
in
rorl
int3
jne
lods
dec
xchg
imul
sti
adc
mov
test
pop
or
jb
shl
int
xchg
pop
adc
lds
mov
btr
in
out
sub
stos
jo
insb
xor
add
clc
sbb
jnp
dec
mov
sbb
dec
aad
fimull
cmp
jbe
or
jnp
inc
dec
pop
mov
cmp
movsb
sti
jg
andl
std
mov
nop
dec
das
movsb
push
and
adc
cmp
dec
sub
adc
stos
xchg
dec
shlb
sub
xor
and
mov
stos
jle
nop
sub
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
movsl
jle
push
jg
jle
jp
shll
ljmp
int3
lcall
jno
add
adc
lock
clc
and
mov
pop
inc
mov
es
mov
ds
sbb
mov
sahf
in
pop
mov
mov
mov
xchg
enter
stos
xchg
cwtl
add
push
sub
or
pop
cmp
sbb
loopne
repnz
mov
js
push
add
push
dec
cmc
cli
enter
cmpl
mov
mov
ja
mov
iret
pop
aam
jo
xorl
sbb
push
mov
ja
test
dec
push
loop
jge
jmp
aaa
sahf
sub
lahf
dec
inc
test
xchg
push
les
xor
dec
js
mov
lock
loopne
mov
out
sbb
dec
adc
mov
icebp
mov
sbb
sbb
xchg
adc
loopne
mov
push
scas
mov
xchg
int
lret
out
inc
scas
lea
and
cld
arpl
sti
sahf
lret
push
mov
push
push
jae
sbb
sub
adc
bound
push
daa
movsb
stos
xchg
dec
test
pop
push
repz
sbb
mov
aaa
or
push
sbb
sahf
int
lods
pushf
lret
add
mov
movsb
int3
add
push
fsubl
shll
xor
xor
arpl
mov
adc
pop
pop
mov
idiv
movsb
addr16
mov
pop
jg
int
outsb
mov
fisubl
push
popa
insb
sbb
lods
push
filds
inc
int3
add
push
ret
lcall
inc
das
mov
rclb
or
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
push
in
pop
adc
inc
jmp
repz
push
repz
sbb
dec
popf
aaa
mov
inc
add
in
jecxz
sub
ljmp
jo
ret
xor
adc
jmp
mov
sarb
enter
cld
mov
out
lods
xchg
stos
out
adc
imul
pop
or
xchg
insl
or
nop
arpl
iret
mov
mov
clc
repz
pop
adc
idivl
iret
mov
and
mov
pop
jl
cmp
cmp
mov
addb
dec
addb
jno
inc
sbb
and
pop
push
adc
sbb
xchg
fstps
stc
or
enter
ret
repnz
mov
xlat
mov
xor
insl
xor
and
jge
icebp
push
shlb
sbb
test
push
adc
cmp
idivl
rorl
insb
shll
dec
jbe,pt
add
fstpl
xchg
pushl
mull
mov
scas
sub
in
ror
mov
rcll
push
xor
and
push
test
iret
xor
fisttps
xor
loope
sbb
sbb
add
stc
sbb
fstcw
gs
mov
out
pop
outsl
fpatan
xor
hlt
push
mov
add
sub
mov
or
adc
icebp
mov
mov
add
fimull
movsl
lds
push
mov
push
negb
mov
lods
jge
or
ds
mov
loop
mov
jns
xor
or
insb
lret
adc
popf
pop
outsb
insb
cmp
jp
mov
pop
call
sub
add
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
add
mov
jle
inc
sub
das
daa
pop
mov
ss
data16
pop
clc
pop
add
loope
mov
call
int3
add
daa
into
push
push
xchg
in
lds
push
cld
gs
in
mov
aas
xor
mov
aas
and
test
and
xchg
pop
xchg
mov
in
out
push
xchg
leave
xor
aad
adc
lcall
and
push
sarb
dec
xchg
in
enter
mov
and
fdivp
popf
mov
push
js
mov
push
xor
or
cli
or
in
in
jl
xor
test
xor
adc
push
push
or
ss
daa
gs
mov
inc
dec
mov
loope
xchg
dec
ds
hlt
loop
sahf
imul
xchg
dec
inc
jo
push
lret
push
inc
lcall
push
fs
mov
aad
adc
xor
add
ss
and
pop
sarl
cmpsl
setle
jg
sbb
sbb
xchg
mov
mov
jg
or
lock
or
call
lods
jo
mov
cmp
xor
xor
sarb
mov
xor
in
fcompl
mov
arpl
test
sbb
jp
sub
mov
push
test
mov
daa
adc
add
and
dec
cld
fnstcw
filds
int
pop
aad
rcrb
or
cli
std
mov
add
scas
inc
pop
mov
sub
std
lods
fldl
pop
inc
and
scas
mov
fnstcw
pushf
or
test
push
pop
pop
mov
lods
adc
shll
mov
sbb
mov
push
fidivrl
jg
mov
pop
cltd
daa
sub
dec
ljmp
movsl
or
bound
inc
iret
jns
cmp
sahf
sbb
in
dec
in
and
aas
outsl
popf
sub
ret
mov
sub
mull
js
ror
lock
lock
jae
inc
or
xor
outsl
dec
sar
dec
xchg
roll
jae
hlt
in
jg
and
pusha
int3
inc
cmpsb
cmp
loop
popf
stc
add
clc
dec
aam
in
and
jnp
je
mov
inc
imul
adc
or
shlb
adc
mov
xor
mov
and
arpl
das
push
leave
jb
push
pop
adc
ret
and
push
orb
and
inc
inc
dec
fists
fnsave
or
out
addr16
mov
iret
jbe
mov
mov
jnp
out
fdiv
je
push
in
shrb
imulb
sub
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
addr16
jle
jl
jle
mul
sbb
mov
mov
pop
push
xchg
and
popl
push
loopne
sub
jge
mov
popf
sub
inc
sbb
daa
mov
cli
cmc
sarb
in
mov
cmp
push
stc
jns
push
xchg
rcll
in
fwait
das
rorb
xchg
mov
add
ljmp
ja
xor
sub
fcoms
jecxz
repnz
mov
push
fsubrs
mov
nop
loop
add
xor
mov
wbinvd
pop
mov
in
mov
or
call
scas
mov
sbb
aaa
lods
out
add
add
in
or
push
cld
push
pop
daa
xchg
xor
les
int
scas
mov
sub
arpl
pop
push
imul
sbbb
lahf
insl
ret
xor
or
mov
popf
vcmppd
sbb
out
jecxz
jae
out
outsb
push
lret
xchg
and
jmp
pop
cmc
out
push
pop
std
mov
or
cli
fcmovnu
imul
cmpsb
clc
mov
lods
into
cmp
cmp
mov
or
lods
sub
insb
ds
or
cmpsl
lret
sub
or
mov
enter
mov
add
xchg
sbb
cli
fists
mov
out
mov
in
mov
pop
jb
shr
int
subl
or
or
mov
das
inc
cli
and
fsubl
cmp
insb
jb
jle
out
jl
sbb
sbb
mov
fisubl
mov
lods
loopne
mov
push
fcmovnu
negl
scas
push
mov
sbb
mov
ds
mov
cmpsb
inc
fisttpll
mov
mov
outsl
dec
pushw
xchg
stos
mov
cwtl
in
xchg
ss
and
scas
or
and
js
lret
in
js
jp
ja
fisubrs
push
sbb
lds
ja
jge
pop
aad
mov
sbb
es
mov
into
mov
adc
pop
dec
push
sub
js
push
mov
roll
push
jno
fsubs
outsb
fstps
in
fbld
cwtl
jno
xlat
gs
shrb
daa
stc
sbb
push
xor
push
mov
jp
stc
xchg
mov
adc
cmpsl
adc
sbb
xchg
pop
int
and
repnz
sbb
inc
fistps
icebp
outsb
and
sbb
and
fstpl
fcmovnbe
push
pushf
les
lods
fs
test
mov
add
sti
add
push
inc
aaa
repz
daa
out
stos
pop
lret
shll
inc
insl
std
pop
jae
mov
xor
pop
in
or
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
insb
shrb
jle
roll
popf
into
add
ret
lea
jns
add
out
mov
cld
mov
mov
or
cmpsl
insl
pop
ljmp
push
xchg
out
cltd
sarb
xor
pop
arpl
iret
inc
xchg
pop
pop
mov
jmp
or
jbe
addb
cmp
jno
dec
cmp
jmp
adc
adc
ja
cmp
pop
mov
lahf
sbbl
xor
mov
or
inc
pusha
dec
sub
sbbl
sub
xchg
mov
xchg
cwtl
fdivrl
cmpl
fildl
out
pop
paddd
xchg
and
cli
fisttps
jae
inc
in
insl
adc
aam
jp
xor
sti
sbb
sub
mov
lea
outsl
mov
ja
cld
in
sub
push
int
out
or
fwait
mov
cmp
dec
data16
mov
push
in
cmp
inc
mov
xlat
add
pop
in
movsb
mov
int
sbbl
repnz
jns
xor
gs
mov
mov
sbb
cs
outsb
pop
cltd
push
or
loop
je
sbb
std
jo
stc
fsts
and
lret
xchg
mov
bound
nop
dec
enter
mov
mov
xchg
xor
mov
mov
sbb
mov
mov
push
sti
lret
mov
cmpsb
arpl
mov
adcl
push
test
rol
adc
outsb
sub
or
pop
push
mov
jge
pop
orb
clc
mov
mov
mov
jle
int
mov
in
sub
nop
cmp
cli
xlat
outsl
jb
mov
push
dec
or
movsl
xchg
jg
mov
xchg
and
pop
and
cmp
out
ds
es
adc
lret
aas
jl
push
sbb
das
sub
sbb
xchg
fisubrl
cmc
mov
adc
je
in
test
iret
push
stos
lret
pop
push
dec
movsl
push
addb
xchg
dec
mov
test
xchg
gs
sub
sub
mov
fcompl
cmp
fwait
mov
adc
push
mov
xchg
cmp
jbe
loope
jge
shll
push
lods
cmp
pop
jo
pushf
mov
lea
adc
popf
adc
xchg
arpl
sbb
addr16
pushf
mov
add
mov
pop
jnp
cltd
shl
mov
or
mov
mov
sbb
mov
and
push
pusha
jnp
gs
ret
into
cmp
push
nop
push
push
outsb
stc
pop
xchg
sub
movsl
cs
cmp
movsb
cmp
addr16
stos
sub
sbb
jns
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
pop
push
dec
shlb
jle
and
and
fdivr
sbb
and
jnp
imul
pop
sub
add
outsb
pop
pop
movsb
xor
icebp
cltd
inc
and
cmp
adc
je
lock
pop
or
lods
push
dec
add
sbb
cmc
mov
mov
ror
sub
cld
ret
and
shr
adc
adc
cltd
xchg
dec
add
xor
hlt
dec
div
dec
add
jns
cmc
cmpsl
xchg
lcall
pop
adcl
add
sbb
inc
aas
inc
lds
gs
or
negb
jmp
andnps
cmp
mov
inc
cmpsl
dec
and
or
divb
xchg
test
mov
enter
loope
or
cld
leave
cmp
data16
lret
lcall
lcall
lock
out
sarb
cld
mov
adc
mov
xor
addl
cmp
push
lret
jmp
sbb
ja
andb
iret
lcall
mov
push
cmc
icebp
iret
dec
push
sub
cmp
mov
mov
push
data16
sbb
test
dec
or
cli
mov
push
pop
in
pop
add
cmp
iret
mov
hlt
jnp
lock
int3
inc
push
sub
mov
out
push
aam
or
xor
shl
jns
lahf
xchg
inc
dec
fmull
mov
mov
scas
mov
test
scas
or
add
jb
mov
jl
in
outsb
fs
pop
push
andb
push
int
dec
das
sbb
dec
cmc
jg
in
adc
jecxz
ret
dec
ljmp
pop
xor
xchg
insb
mov
mov
adc
mov
lock
sub
fnstenv
nop
xchg
push
mov
adc
addb
inc
mov
divb
mov
repz
push
out
sub
test
in
popa
adc
push
fstl
dec
pop
sbb
gs
je
mov
and
cs
xchg
sub
out
or
mov
stos
mov
jno
jb
dec
mov
out
aad
push
cmpsb
or
dec
ds
xlat
inc
add
push
repnz
scas
out
call
or
pop
sti
xchg
jae
movsl
push
lret
sub
clc
sbb
sbb
sbb
push
cmp
add
in
icebp
sbb
and
add
mov
mov
fwait
neg
lret
xor
xor
push
ret
ret
roll
jno
mov
jb
pop
je
hlt
lock
jmp
or
sarb
jmp
or
pop
jno
xchg
add
arpl
mov
jle
jge
jle
cltd
adc
mov
mov
sub
jo
or
js
add
lea
es
and
lods
jno
mov
fsubp
pop
push
icebp
out
test
jbe
jl
pop
push
or
out
fldl
lods
and
and
daa
mov
les
sahf
sbb
xor
sar
cmp
xor
mov
int3
mov
jg
adc
xchg
cmp
sahf
mov
xchg
test
popa
jecxz
lcall
insl
and
mov
gs
cld
lods
rorb
and
jo
xchg
lock
cld
xchg
sub
mov
cltd
or
iret
inc
jmp
stos
sub
ret
stos
insb
rolb
cmp
addr16
call
mov
inc
mov
push
ja,pn
cmpsl
pop
iret
and
jmp
test
cmp
push
test
adc
ficomps
jg
jp
and
mov
lea
in
or
pusha
inc
inc
in
ficoml
and
mov
dec
jne
add
mov
mov
or
sbb
or
insl
pop
jno
adc
cmp
pop
loopne
leave
push
jbe
shlb
jno
cmp
push
push
sahf
out
rcrw
xor
push
sbb
jae
jl
sub
scas
mov
cmp
out
xor
out
repz
pop
pop
mov
jp
mov
imul
jo
insb
push
fldcw
sbb
ja
cmpsb
fimull
lret
adc
ja
aam
sub
cmpl
mov
add
enter
inc
xor
pop
push
push
data16
ljmp
mov
fcmovnb
ret
data16
inc
adc
adc
mov
mov
sub
les
adc
cli
cmpsb
hlt
stos
mov
enter
insb
sbbl
sub
adc
push
pop
cmpsl
inc
pop
cmpsb
aas
test
imul
idiv
xchg
pop
or
and
push
test
push
push
push
or
xlat
ret
popf
mov
imul
enter
scas
adc
sbb
mov
mov
jbe
jecxz
xor
fimuls
mov
ds
fistpll
pop
dec
sub
mov
mov
mov
iret
ss
jmp
imul
sub
jg
insl
pushf
cmp
push
loop
push
popf
cmpsb
in
ja
mov
or
mov
sub
cmc
test
iret
js
push
arpl
popf
iret
ljmp
in
push
in
push
or
leave
jne
movsl
jnp
inc
nop
js
aad
cwtl
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
cmp
add
scas
jl
jle
pop
mov
out
test
mov
fpatan
ss
in
cmp
mov
mov
pop
fcmovu
les
and
adc
pop
arpl
stos
dec
push
sbb
cmc
in
mov
push
cmpsb
movsb
push
push
push
icebp
sbb
xchg
pop
dec
outsl
mov
scas
xor
stos
jmp
dec
cli
push
ja
stos
pop
mov
jg
cmp
aam
mov
ret
adc
pop
enter
pushf
js
stc
jle
les
add
mov
aaa
xchg
sbb
push
push
mov
xchg
sar
xchg
addb
insl
sti
jmp
cld
daa
pop
jbe
fdivrl
mov
xor
repz
lcall
adc
lock
pop
pop
lds
xor
mov
sbb
mov
in
jp
loopne
adc
aas
mov
push
nop
imul
fstps
outsb
inc
int
or
adc
fistpll
test
cmp
add
xor
inc
xchg
mov
loopne
fildl
mov
sub
xchg
je
cmp
or
add
xchg
push
pop
jmp
pop
jne
loopne
mov
data16
ss
ljmp
and
repz
out
inc
dec
outsb
test
pop
andl
push
fisubrs
mov
sub
mov
or
out
xlat
and
jmp
hlt
fldt
sub
cmp
in
dec
adcl
iret
pushf
mov
dec
pop
pop
or
decl
sbb
jnp
rcll
push
cmp
fucomp
push
pop
sub
outsb
sar
xchg
out
stc
mov
mov
mov
xorb
insb
xor
ss
mov
stos
fwait
jns
into
mov
decl
add
cmp
test
or
xor
fucomi
add
and
fcomi
sbb
pop
gs
cltd
sbb
mov
pop
mov
mov
sub
or
mov
rcll
jo
xchg
and
pop
jmp
loope
dec
xchg
sub
call
inc
jns
adc
ret
rol
imul
mov
sbb
xor
lods
cmovbe
in
popa
sbb
cmpsb
and
jno
lret
sub
or
pop
sub
mov
push
jnp
dec
or
mov
leave
imul
jne
test
jnp
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
cld
aaa
add
shrl
test
mov
xchg
pop
xchg
fwait
cmp
insl
dec
in
iret
adc
ss
jns
out
daa
scas
subl
mov
push
dec
pop
or
loopne
ja
ljmp
daa
int3
call
aad
ficoms
xchg
xchg
push
cltd
int3
xchg
pop
mov
arpl
xor
mov
je
cmp
gs
jmp
mov
push
jle
fs
cmpsb
mov
and
lret
mov
fs
xchg
mov
jo
inc
loop
sbb
pop
movsl
les
ret
or
pop
in
or
lock
jnp
mov
clc
push
sub
inc
adc
mov
call
mov
and
mov
fmuls
cmpsb
out
mov
iret
popa
pop
cmp
popa
jg
sbbl
aam
cmp
xorl
mov
push
push
jb
cmpsl
mov
mov
roll
mov
xchg
imul
inc
aas
scas
cltd
sbb
mov
ret
inc
cmp
dec
pop
jno
xchg
or
xor
iret
mov
stos
loop
jecxz
mov
shlb
enter
xor
sbb
jmp
dec
jge
push
stc
sahf
cmp
lods
mov
and
icebp
jnp
pushf
adc
mov
push
insl
push
mov
sub
outsl
les
repz
jbe
les
loope
das
sub
cltd
pop
fbld
pop
mov
mov
jbe
jno
mov
addr16
sub
int3
inc
daa
jp
inc
cmp
les
jg
push
fsubl
decl
loope
adc
push
inc
adc
das
clc
bound
push
dec
jnp
repz
fwait
mov
pop
jno
int
mov
xchg
fsub
stos
pushf
sub
xor
adc
repz
subb
xor
inc
and
out
into
sbb
push
ret
xchg
fistpll
jns
test
cmp
xchg
into
and
mov
mov
mov
test
cli
push
test
pop
pushf
xor
cmpsl
cmp
fisttps
cmpsl
loopne
mov
xchg
cmp
push
sarl
ja
push
xor
scas
add
in
cmp
xlat
add
xchg
dec
cmpsl
ret
pop
out
es
sarb
push
imul
push
addb
push
jne
pop
js
xchg
dec
lock
add
jmp
add
fdivl
lock
xchg
pop
jno
pushf
pushf
mov
jl
jle
or
jg
push
ss
jge
js
cmc
mov
xchg
fsts
sbb
lahf
pop
cmp
mov
mov
cli
lock
int
pop
ss
out
mov
xchg
in
mov
xchg
xchg
and
or
mov
xchg
rolb
shlb
jp
jnp
imul
or
aaa
jl
ja
icebp
pop
outsl
in
pop
out
es
dec
push
std
daa
add
cli
sbb
fisttps
fs
iret
push
lods
or
push
imul
jmp
push
jecxz
inc
imul
add
mov
xchg
or
jg
adc
dec
faddl
push
sub
fsubs
mov
or
test
ds
imul
mov
popa
out
out
fisttpl
jne
inc
icebp
push
pop
loop
mov
sbb
aam
adc
sbb
push
push
cmp
cmp
push
movsl
mov
push
cli
and
xchg
call
mov
cmp
lock
imul
in
mov
roll
push
push
rcr
mov
pop
ret
imul
sub
jo
lea
call
out
push
nop
pushf
notl
outsl
push
mov
fidivs
test
xchg
aam
adc
cwtl
movsl
js
pushl
mov
in
jg
xor
sub
pop
push
sub
jo
sti
leave
add
push
data16
into
in
inc
dec
push
push
rorb
mov
mull
mov
mov
sbb
jg
dec
pushf
cmp
popf
test
iret
icebp
push
leave
mov
push
popf
jge
es
lcall
pushf
out
cld
movsw
sub
pop
sbb
lods
xor
adc
xor
stos
inc
insb
jns
sub
and
mov
cli
xchg
cwtl
test
and
lods
cs
loop
lea
cmc
data16
stc
push
shlb
sub
mov
xchg
xchg
mov
dec
xchg
mov
in
jo
jae
jle
adc
mov
jo
mov
xchg
and
inc
imul
leave
iret
xchg
lods
shlb
mov
int
inc
sub
inc
repz
push
cmp
push
push
and
cmpsb
and
cwtl
js
inc
push
pusha
ja
and
daa
and
add
add
add
push
push
lock
outsb
dec
mov
pop
jmp
jle
scas
jl
jle
inc
inc
mov
out
lods
jp
in
das
pop
lea
push
adc
mov
iret
cmpsl
jg
mov
sbb
sub
jo
in
cmpsl
inc
and
setns
or
push
stos
test
sbb
test
pop
lahf
ds
movsl
mov
rorl
mov
test
pminub
adc
sub
xlat
fstpt
loopne
push
daa
into
inc
aad
int
ss
cmp
mov
adc
push
jno
jbe
repnz
xor
sahf
or
mov
push
jo
aad
fs
adc
mov
std
loopne
cmp
test
nop
mov
jns
pop
dec
stos
shlb
into
out
and
hlt
xor
and
ja
push
mov
dec
mov
jne
adc
inc
out
xor
fucompp
adc
cwtl
fimuls
hlt
or
mov
mov
das
cmpsb
lahf
outsl
and
or
enter
stos
ljmp
xchg
xchg
test
fnstcw
in
sub
aaa
sub
lret
push
es
sbb
dec
addr16
mov
popa
pop
jae
inc
sub
subl
rcrl
jecxz
insl
pop
jecxz
or
mov
stos
sub
mov
mov
adc
repnz
adc
add
xlat
mov
xlat
dec
repnz
stos
push
xchg
mov
jo
jns
add
push
mov
or
inc
adc
or
or
std
int
aad
sub
shlb
jns
stos
push
outsb
adc
pop
mov
negb
or
sti
adc
dec
xor
push
jns
movsl
hlt
push
ljmp
imul
pop
pop
fistpl
arpl
pop
push
int3
arpl
insl
pop
lock
sbb
dec
inc
sbb
mov
lret
sbb
dec
or
test
faddl
inc
push
adc
iret
imul
inc
jge
fimuls
out
add
push
mov
enter
sub
cwtl
push
mov
mov
ret
incl
sbb
jbe
pop
adc
test
insl
popa
inc
into
hlt
data16
mov
pop
push
sub
adc
loopne
negl
xchg
and
and
sub
dec
out
aas
xor
xchg
xchg
mov
or
or
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
sub
jle
jl
jle
xchg
jp
loop
adc
xor
sub
fwait
push
icebp
faddl
pop
mov
push
rcl
mov
pop
stc
cld
cld
push
and
or
jno
push
mov
clc
fldcw
loope
ljmp
rcl
xchg
and
push
jmp
popf
mov
movsb
inc
mov
dec
jnp
mov
mov
das
mov
sbb
stos
fdivs
add
negl
add
aas
jno
test
fidivs
loope
inc
cmc
repz
add
pop
cmp
rclb
sub
pop
mov
mov
cmp
adc
ret
add
subl
clc
out
aaa
and
push
xchg
pop
test
mov
lods
pop
sub
adc
xchg
adc
movsb
insl
repz
sbb
jp
inc
imul
test
cmp
movsb
lds
test
stos
mov
das
out
negl
mov
cmp
xchg
psubw
lock
mov
int
sub
jbe
add
test
fdivr
mov
mov
out
andb
mov
and
push
inc
adc
add
jb
popf
shrd
add
dec
inc
mov
cmpsb
mov
pop
dec
shll
stos
mov
jbe
scas
arpl
or
push
in
imul
jp
stos
xchg
lods
into
fdivs
sti
call
in
or
mov
xchg
cmp
test
jge
inc
sub
cmpsb
sub
xor
mov
movsb
mov
rolb
cmpsb
mov
jle
stc
ret
ret
pop
inc
fidivs
test
out
hlt
inc
pushf
pop
in
or
add
inc
pop
rorl
jecxz
mov
mov
mov
sbb
sub
in
sub
enter
pop
in
and
cmp
lock
orl
aas
fnstenv
cmpsl
sub
insl
mov
into
push
sti
or
jecxz
rcrl
ja
movsl
stos
popa
dec
xor
out
aas
in
leave
sbbl
push
push
scas
cmp
popfw
jle
lods
dec
lods
out
mov
adc
xchg
lahf
cs
into
sbb
arpl
scas
int
fiadds
sahf
or
mov
sub
sub
xor
fwait
adc
mov
ret
stos
mov
jp
mov
add
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
adc
push
inc
jle
scas
jl
jle
push
adc
add
cltd
dec
jb
dec
or
inc
xor
loopne
int
sub
pop
adc
movsl
pop
push
filds
cs
jb
out
or
aad
movsb
bound
jle
aam
mov
push
mul
mov
lods
dec
sbb
sbb
dec
mov
jmp
push
hlt
addr16
ret
or
js
outsl
dec
jmp
cmp
js
add
dec
test
or
clc
mov
scas
jg
inc
dec
lea
es
inc
add
sub
mov
add
jge
icebp
aad
in
adc
rol
pop
in
sub
sbb
jmp
pop
popf
orl
mov
popa
add
int
mov
leave
sub
sbb
test
or
sub
or
loope
lea
loop
ret
jge
push
flds
jne
and
push
mov
fistpll
sub
fisttpll
test
outsl
into
test
out
int3
dec
pop
movsl
mov
inc
mov
std
repnz
rcr
repnz
mov
dec
testb
mov
or
and
adc
stos
lock
or
dec
loope
andb
and
or
pop
jnp
into
push
mov
hlt
inc
or
fs
cmc
and
mov
insl
sub
sbb
push
xor
ds
scas
rcl
sbb
in
aam
mov
jns
xchg
loopne
dec
xchg
jle
or
or
insl
testl
loope
je
jno
mov
call
or
mull
jbe
outsb
xor
or
dec
pop
mov
aam
jle
in
scas
inc
pop
imul
cli
leave
daa
inc
lcall
jns
cmp
sub
pop
repz
lods
sarl
call
xchg
or
jl
jne
mov
pop
cmp
popf
test
push
add
mov
rcrl
fldl
pop
add
cmp
jl
mov
mull
and
pusha
arpl
and
icebp
mov
mov
movsb
cli
inc
out
data16
xor
pop
in
or
add
inc
popf
out
outsl
in
and
xchg
orb
test
shll
mov
adc
cmp
xor
jp
arpl
mov
mov
add
je
shll
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
adc
pushf
mov
jg
jle
sub
cmpsb
std
in
mov
sarl
inc
xor
xchg
aas
lods
popf
bnd
mov
mov
add
scas
inc
insb
mov
aas
loope
out
mov
cmpsb
inc
sub
jle
pop
add
pop
imul
stos
dec
sub
cmp
pushf
fimull
cwtl
ret
sub
jb
jne
xor
ja
push
fcoml
adc
loopne
pop
sub
fisubl
dec
xchg
dec
fnstsw
jl
jb
mov
cmc
dec
incb
adc
decb
fcmovnbe
sub
iret
push
aad
jp
dec
jbe
sub
xchg
stc
push
dec
jmp
mov
out
jbe
mov
popf
xchg
adc
cs
sbb
out
add
mov
jns
sbb
test
fnstenv
sub
mov
inc
push
repz
jmp
push
ret
sbb
leave
jns
sbb
mov
push
add
mov
xchg
ret
lret
popa
adc
push
dec
js
insb
xchg
std
jns
mov
adc
aam
xor
insb
push
cmp
push
mov
and
rclb
mov
stos
mov
addl
aas
jo
push
ss
jae
mov
xor
aam
xor
sbb
jns
ret
fs
jge
fbstp
or
in
gs
scas
push
das
and
dec
stc
lcall
aad
jo
lahf
dec
xor
andl
and
daa
jmp
in
sbb
mov
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
sahf
faddp
ret
sub
jle
movsb
jg
jle
ja
int3
dec
mov
bound
add
sub
jno
and
outsl
adc
pop
stos
pop
push
add
pop
dec
pop
jnp
pop
fistl
or
sbb
mov
ljmp
or
in
dec
push
add
mov
sarl
dec
sbb
repnz
in
push
jecxz
fsubrs
movsb
add
js
out
les
mov
lret
push
cmp
fbstp
sahf
in
loopne
stos
sub
mov
jbe
sbb
xor
rcrl
aad
pop
cmpsb
xchg
imul
pcmpgtd
in
pop
fwait
pop
test
cmp
mov
dec
pop
jl
aaa
fdivl
test
daa
popa
mov
sub
and
mov
pop
mov
xchg
les
xor
lock
push
cld
xchg
inc
inc
cmp
push
mov
pop
jbe
jp
inc
sti
addr16
pusha
add
jo
adcl
gs
mov
dec
cmp
jecxz
jmp
adc
inc
fldcw
sub
push
and
iret
sbb
pop
push
insl
xchg
adcb
push
mov
sub
test
pushf
aaa
and
dec
cmp
lret
fwait
mov
aad
popf
aas
mov
ja
xchg
push
xor
imul
movsb
xchg
mov
push
mov
add
add
movsl
mov
dec
shlb
in
cmpsl
lcall
dec
sub
mov
mov
rorb
insb
ljmp
fmull
mov
lret
jb
sub
lcall
mov
cmp
ret
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
mov
roll
add
fwait
jo
fistl
dec
sti
xor
loop
imul
lds
int3
inc
jno
xor
jmp
repnz
in
sub
jl
xchg
in
cli
in
hlt
jno
insb
sub
xchg
xor
jmp
jns
out
push
pop
xor
jg
stos
sub
pop
aad
cmp
jne
xchg
sbb
or
aad
mov
inc
push
mov
pushf
js
test
mov
sub
cs
sub
mov
dec
pusha
int
push
sti
mov
leave
icebp
xchg
inc
dec
mov
into
sarl
ret
cmpsb
xor
jge
inc
inc
andl
inc
xchg
push
test
xchg
loope
aad
into
andb
loop
jmp
push
out
into
fnstsw
lret
or
cmp
push
fstps
mov
std
aad
cmpsb
push
ret
xchg
es
cmc
sbb
cmpsb
xor
jecxz
push
add
rcll
test
cmpsl
ss
jb
add
pop
ficoml
in
jle
lcall
sbb
rolb
add
stos
outsb
sub
xor
lea
mov
xchg
sub
ja
and
sbb
add
pop
push
enter
add
and
mov
dec
push
pop
or
add
add
add
cmpsl
nop
mov
je
inc
cmpsl
mov
iret
ret
or
mov
mov
repnz
pop
inc
pop
hlt
lahf
imulb
push
sbb
mov
mov
cmpb
fs
mov
aas
push
mov
dec
push
mov
pop
add
lcall
and
fbstp
xchg
loop
shr
mov
jns
push
and
dec
fdivs
addb
xor
push
add
adc
aad
xor
sahf
mov
inc
push
loop
repnz
mov
jno
mov
add
iret
add
cmpsl
into
sahf
in
cmpsl
in
mov
sahf
sbb
ljmp
sub
add
add
add
mov
push
repnz
roll
add
mov
mov
inc
sub
fmulp
and
cmp
xlat
add
jno
xor
jb
mov
mov
or
add
and
mov
mov
div
push
dec
or
outsb
arpl
test
ss
xchg
popf
mov
cli
sbb
jne
outsb
lret
test
jae
rdpmc
mov
or
xchg
add
add
stc
mov
xchg
jmp
adc
rol
pop
mov
inc
cwtl
inc
ljmp
adc
mov
adc
stos
jno
jecxz
mov
push
xchg
frstor
mov
push
lret
divl
add
push
cwtl
repnz
sub
fistpl
push
inc
lcall
fldt
out
mov
flds
ret
or
in
leave
push
in
fisttps
sbb
lods
bound
jp
mov
scas
add
add
subl
roll
ret
push
aam
add
pop
int
mov
stos
push
shrl
add
add
inc
xor
push
xchg
sub
sbb
or
xchg
lahf
push
push
jns,pt
mov
movsl
fucomp
add
test
jns
xor
orl
mov
fisttps
cmp
data16
jo
imul
mov
dec
add
into
cli
sti
pop
inc
xchg
xor
dec
xchg
dec
inc
insl
jnp
or
mov
shll
and
std
in
lcall
sub
mov
push
sbb
popa
jecxz
jmp
imul
les
cli
push
adc
sub
and
in
daa
sub
lahf
lods
aad
inc
cmpsb
dec
jno
xchg
ret
and
sub
adcb
and
cmpl
mov
test
jle
dec
mov
dec
sbb
pop
int3
xlat
rcl
push
sahf
ret
outsl
repz
push
or
add
pop
jae
or
pop
dec
or
and
add
stos
xlat
dec
idivl
fwait
sub
mov
aaa
sub
popf
fadd
mov
test
xchg
data16
fdivrs
cmp
add
sub
sub
clc
or
mov
test
repnz
insb
cmpsl
push
or
inc
dec
pop
roll
add
add
or
xchg
pop
mov
call
fnstenv
mov
dec
call
jo
shrl
test
mov
pop
mov
add
push
neg
bswap
call
imul
dec
sbb
push
fistl
pop
lret
stc
sbb
icebp
in
lock
xchg
sub
dec
rclb
lahf
mov
xor
mov
ret
sbb
jg
aas
cmp
dec
inc
ss
pop
out
mov
lock
adc
cltd
test
mov
fldcw
jo
jae
add
jg
cmc
insl
cmc
out
lcall
enter
mov
repnz
add
add
test
xchg
push
cmp
and
daa
xchg
pop
lret
in
cmp
fcmovnbe
out
push
jge
jbe
jns
add
xor
xchg
inc
jb
or
pusha
cmpsb
inc
dec
filds
inc
cwtl
dec
lds
mov
adc
adc
push
cmp
adc
pop
insl
sbb
cmp
sub
push
push
clc
pushf
mov
xor
rorl
ret
pop
add
adc
add
xchg
pop
add
movsl
dec
xor
cmpsb
mov
dec
mov
push
cwtl
icebp
mov
ss
aas
sbb
iret
arpl
and
in
jl
in
in
dec
add
cltd
inc
mov
or
sub
nop
sarb
stc
icebp
jnp
lcall
add
inc
inc
add
cmp
fstps
mov
mov
out
js
pop
fs
xchg
add
and
test
shll
repnz
mov
mov
int3
mov
add
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
jecxz
pop
dec
or
mov
xchg
scas
fiaddl
shlb
dec
xchg
lret
mov
pop
xchg
test
xlat
xor
jmp
adc
adc
xor
or
out
xlat
shrb
sbb
cmc
xor
xchg
dec
shr
dec
aaa
mulb
dec
or
xchg
and
data16
adc
dec
rcr
ljmp
data16
call
dec
mov
bound
mov
push
mov
imul
jno
jbe
mov
mov
icebp
mov
jno,pn
sbb
and
pop
xchg
xlat
jmp
xchg
xchg
push
cli
fmul
es
mov
or
mov
or
aam
xchg
scas
push
sub
inc
orl
push
xor
rcll
pop
ljmp
sbb
xchg
jne
outsb
in
xlat
push
call
aad
dec
dec
push
add
fwait
lods
sub
leave
add
add
jle
and
scas
sti
jle
pop
push
pop
movsb
inc
push
stos
fadds
add
jo
inc
cwtl
pop
dec
lcall
mov
mov
sbb
roll
stc
or
mov
jg
cltd
mov
mov
movsb
xor
xchg
ret
adc
mov
xchg
dec
cmp
dec
jnp
ret
pop
dec
pop
imul
jno
in
add
aaa
jb
cld
mov
push
push
push
stos
push
rclb
mov
dec
andl
popa
mov
clc
fnstsw
lcall
nop
xchg
dec
ret
in
or
jecxz
mov
outsb
xchg
insb
xor
and
sbb
inc
mov
insb
ja
adc
cmp
sbb
add
inc
adc
hlt
cmpsl
fsubl
adc
ja
mov
inc
cs
sbb
mov
in
js
pop
push
ja
mov
bound
or
push
ret
push
int3
cmp
or
lahf
fnstcw
ss
lahf
stc
bound
stos
into
add
add
add
fwait
jp
mov
sbbl
enter
test
lret
cmp
fmuls
xchg
dec
xchg
popf
jne
sbb
aam
in
dec
xchg
and
cmovb
mov
mov
adcb
add
adc
xor
mov
in
inc
test
pop
sbb
ja
cmp
mov
or
aam
dec
ss
or
pop
in
mov
add
pop
sbb
push
mov
daa
movsl
pop
fidivl
sbb
out
mov
jg
pop
cli
fcompl
mov
aam
gs
jecxz
push
insl
imul
sub
xchg
jno
outsb
mov
cwtl
inc
aas
shlb
data16
das
cltd
push
repz
dec
fmull
outsl
int3
mov
hlt
sbb
or
dec
jnp
arpl
mov
mov
pushf
or
test
subl
scas
pop
mov
enter
xchg
ret
in
enter
dec
dec
fiadds
add
xor
push
jl
jle
insb
out
cs
adc
fildl
add
jno
pusha
push
adc
gs
in
cmp
cld
mov
dec
and
jae
scas
or
icebp
and
mov
sbb
pop
repz
mov
xchg
adc
enter
xor
pop
xchg
insb
jle
cmpsb
add
test
fistpl
jecxz
xor
jns
push
lret
jb
dec
inc
or
cltd
or
movsb
fcmovne
and
inc
inc
xchg
jne
mov
out
sar
xor
in
jae
mov
add
xchg
xor
add
ja
mov
loopne
mov
push
mov
mov
cmp
jg
loopne
xchg
inc
shll
pusha
xchg
mov
push
and
adc
lret
cld
js
mov
shl
outsb
int
shl
mov
push
lea
pop
cmp
mov
jb
inc
shr
add
xchg
sbb
sti
and
mov
leave
imul
push
add
add
fwait
mov
in
xor
adc
push
faddl
add
mov
pop
adc
inc
pop
sbb
mov
ja
ucomiss
hlt
fs
xchg
xchg
idivl
xchg
lcall
xchg
adc
cld
mov
push
leave
aas
mov
cmpsb
into
mov
cmp
and
test
ficompl
sub
daa
adc
jp
cmpsb
mov
fldl
pop
mov
into
sahf
jns
mov
call
mov
pop
cmp
pop
pop
mov
cmp
add
cwtl
fistl
jb
and
pop
mov
outsb
scas
fnstsw
jmp
xor
hlt
loope
rcrb
insl
push
dec
ret
add
jl
sbb
xor
mov
sub
mov
jl
mov
test
mov
aam
cld
pop
add
clc
and
fadds
dec
dec
add
sbb
pop
ds
icebp
jnp
jae
test
fstpt
insl
inc
add
add
data16
jne
mov
lcall
add
add
pop
divl
cli
mov
add
and
inc
out
idiv
mov
mov
adc
sbb
xchg
cmp
rcl
fmull
xchg
incl
sbb
outsl
and
pop
iret
mov
jns
sub
and
mov
aas
push
mov
mov
pop
inc
orl
popf
mov
dec
xchg
jp
gs
lods
dec
into
mov
ja
inc
loop
xor
cmp
push
add
and
outsb
or
ret
or
push
in
insl
lret
pop
outsb
push
clc
bound
jo
mov
cs
cld
repz
mov
into
aas
pop
or
jno
shrb
lock
push
push
xor
pop
jns
add
sub
inc
mov
cmp
sbb
push
icebp
xchg
dec
cmc
popl
pop
mov
lcall
inc
insb
das
addl
lret
fisubrl
pusha
add
add
add
jnp
sti
xchg
lahf
mov
inc
loope
fiadds
add
out
fsubrl
int
or
lret
xchg
sub
imul
jo
iret
inc
inc
xlat
js
mov
sarl
test
mov
jns
rorl
xchg
sbb
jecxz
shrb
mov
or
aad
cmp
insl
pop
inc
in
aad
iret
popf
fs
sub
mov
nop
fwait
xchg
insl
ficoms
ja
repz
jno
das
std
and
push
bound
add
ja
out
imul
lods
cmp
insl
rcrb
mov
push
shlb
inc
sub
adc
in
adc
sub
roll
ficoml
hlt
fnstsw
adc
pusha
gs
es
adc
loope
or
int
adc
mov
mov
mov
inc
cmp
xor
inc
sub
les
jecxz
or
addb
add
pop
sarl
mov
pop
sbb
add
add
fs
test
xchg
aaa
mov
insl
mov
add
aas
pop
xchg
pop
jle
or
lds
lock
dec
inc
out
push
xlat
add
cmp
fdivl
ret
sbb
jecxz
lds
adcb
add
sbb
mov
out
int3
xchg
shll
adc
push
std
or
ss
or
sti
lods
and
xor
orb
sbb
fisubs
inc
mov
xchg
jp
cmpsl
push
or
ljmp
or
inc
mov
popa
ret
jno
sbb
cmpsl
pop
shll
ret
mov
adc
adc
xchg
xchg
arpl
outsl
les
xor
pop
lea
sbb
ja
cmp
pushf
cmp
inc
jl
pop
inc
jl
addr16
pop
leave
or
mov
pop
push
jns
sti
popa
push
call
lea
sbb
add
add
repz
std
repz
add
add
add
sub
pop
lret
addl
dec
lods
stos
jbe
outsl
repnz
sti
fwait
out
dec
inc
adc
sub
lcall
addb
dec
jecxz
in
scas
inc
mov
shll
sub
add
adc
or
xchg
in
rorb
out
push
daa
mov
imul
pop
mov
inc
cmp
ss
andb
outsl
pop
mov
test
ret
sub
fs
test
nop
xchg
push
mov
xor
mov
mov
jge
flds
in
mov
ja
call
push
and
mov
pop
outsl
cmpsb
pop
push
cmp
xchg
cmp
cmp
fistpll
mov
jns
ljmp
ss
sub
aad
cld
mov
xchg
jecxz
loopne
mov
sub
inc
enter
adc
xchg
add
add
lock
cmp
arpl
je
addr16
add
aaa
adc
adc
xor
add
fisubrl
sti
sub
adc
push
in
mov
shrl
cmpsl
jno
sub
mov
or
or
push
or
lock
rol
sar
dec
add
push
mov
fidivrs
mov
jno
scas
insb
jmp
movsl
hlt
pushw
sarb
xchg
and
adc
mov
inc
or
idivb
or
jb
lcall
outsl
dec
xor
dec
pusha
lea
pop
subl
dec
sbbl
popf
sbb
push
jp
mov
jo
pop
pop
shr
mov
out
lret
shl
lods
push
out
test
push
mov
sub
xchg
adc
mov
xor
push
in
aaa
mov
pusha
pop
scas
cmp
fwait
pop
mov
cmc
jmp
int3
sbb
sahf
test
push
int
int3
ret
insl
sub
add
add
mov
mov
adc
jne
loop
add
inc
pushf
lods
fwait
mov
fimull
xor
dec
cwtl
inc
es
push
jg
imul
bound
mov
push
rcll
mov
lret
pop
xor
dec
notl
jmp
sub
pop
movsbl
xchg
or
dec
mov
and
in
adc
imul
int
xor
fsubs
test
gs
push
rcrb
pop
into
jmp
cmp
cmp
cltd
xchg
adc
xlat
aam
lahf
mov
or
movsb
aas
insl
stos
push
ret
mov
pop
dec
dec
sbb
loope
mov
xor
js
sbb
jnp
mov
mov
fs
cmp
loopne
push
sbb
repz
and
std
cmp
xor
pop
dec
mov
xchg
int
jno
push
outsl
push
dec
inc
rorl
xchg
adc
mov
scas
ficoml
pop
cld
xchg
mov
and
fwait
add
add
add
xchg
in
mov
incl
shll
cmp
add
and
imul
push
int3
mov
add
mov
test
or
out
sarb
fists
mov
mov
ds
roll
js
mov
mov
push
cmp
stc
inc
push
in
insl
inc
xchg
adc
sahf
int3
ret
rclb
inc
xor
cmp
out
mov
lods
outsl
sbb
aas
into
loopne
adc
xchg
cmp
fadds
cwtl
add
push
int
addr16
inc
cmp
js
aas
or
push
ss
hlt
jmp
into
xchg
int3
in
mov
lret
and
adc
mov
mov
lret
dec
add
adc
dec
test
sahf
aam
mov
jg
adcl
xchg
add
or
push
roll
jo
imul
sub
jno
dec
add
cmc
push
int3
pop
jp
pusha
push
and
sub
sub
cmpsl
cld
and
push
add
sub
in
negl
sub
movsb
shlb
add
in
cmp
jmp
outsl
test
inc
sub
aam
and
inc
mov
xchg
ret
mov
fldcw
popf
mov
imul
hlt
std
and
scas
lret
or
ja
mov
outsb
hlt
pop
cltd
dec
mov
push
jae
adc
or
xchg
mov
in
gs
mov
xor
enter
decl
loop
data16
or
cli
cmpsb
sbb
jo
shr
lods
jmp
dec
inc
fisttpl
ds
daa
mov
cli
xchg
mov
mov
mov
cli
jb
sub
adc
je
hlt
or
je
mov
mov
loop
xchg
add
movsl
mov
pop
out
cmpsb
dec
mov
pop
loope
sbb
mov
rcl
add
and
les
adc
inc
and
xlat
jg
cmpsl
clc
repnz
inc
aaa
bound
inc
lock
add
mov
stc
dec
push
fmul
add
daa
cmp
add
add
pushf
ret
add
jae
dec
fs
arpl
loop
dec
shlb
sub
shll
jecxz
xchg
mov
iret
pop
out
or
push
push
sbb
mov
ret
mov
or
pop
mov
fdivl
sub
sub
out
cwtl
mov
mov
lahf
fsub
scas
pop
xchg
in
adc
adcb
inc
push
clc
insl
xchg
sub
pop
cvtdq2ps
push
jae
sbb
xor
cwtl
xchg
cwtl
mov
add
adc
mov
mov
mov
int3
push
xor
ss
repz
lds
lods
xchg
xchg
jns
pop
data16
cmpsl
lret
std
cmc
xchg
jl
dec
mov
or
cmp
loopne
jge
sub
adc
mov
jmp
lcall
cmp
js
cmp
pop
andb
jmp
addr16
push
mov
clc
js
pop
stc
or
mov
mov
fldl
add
cmp
mov
push
push
push
mov
aad
out
add
pusha
mov
xorl
dec
data16
inc
jne
sarb
pop
jae
bound
andl
aas
mov
xchg
jp
mov
pop
push
or
xchg
push
repnz
lret
dec
and
idivb
push
pop
push
shrb
add
lock
lds
inc
clc
dec
scas
push
adc
xor
mov
inc
cld
pop
lods
xor
fisubrl
pop
adc
pop
imul
jb
ds
cmp
xchg
pop
call
imulb
in
jge
add
jnp
incb
adc
mov
inc
negl
shrb
pop
sub
das
rolb
aad
das
dec
pop
and
mov
jmp
setbe
xor
test
je
rcrl
and
cwtl
rcrb
lock
jbe
ljmp
push
aad
push
cmp
fdivrs
sarl
repz
jl
pop
mov
cli
dec
add
add
repnz
add
pop
lcall
les
rorl
inc
out
add
lods
int
in
test
pop
fwait
aam
pop
and
mov
dec
mov
mov
lock
divb
add
aas
pop
xor
iret
inc
stc
subl
orl
sub
mov
fisttps
jp
arpl
arpl
or
push
adc
lret
stos
out
sbb
mov
push
mov
xchg
push
orl
dec
inc
inc
xchg
lds
aam
add
lea
push
mov
in
mov
scas
xor
sbb
add
jno
popa
and
xchg
pop
adc
fstps
and
int
out
jl
pop
xchg
fyl2x
les
fcompl
sub
inc
lods
mov
and
int3
aaa
loopne
ljmp
fs
fldt
popa
push
sub
add
xor
fstpt
inc
mov
sbb
divb
add
add
add
mov
push
decl
cmc
leave
push
dec
dec
call
add
int3
pop
jp
inc
xor
xchg
test
inc
adc
test
pop
sub
sub
pop
dec
popa
mov
data16
xor
imul
and
pop
adc
int
push
ror
popa
mov
andb
lea
test
adc
jbe
popa
leave
movb
fwait
das
sub
nop
dec
ret
mov
push
jmp
jns
mov
stos
lcall
out
and
pop
ds
dec
repz
test
iret
xchg
mov
mov
lcall
fwait
sbb
or
in
push
or
loopne
xor
cld
call
inc
sub
icebp
loope
daa
jp
js
cmp
and
lods
sbb
hlt
sub
je
adc
aad
int
xchg
mov
mov
test
rcr
mov
xchg
cmpsl
push
stc
out
in
jnp
fwait
lcall
add
jmp
in
push
sub
cld
dec
jmp
add
xor
arpl
cmp
popf
inc
inc
out
xchg
das
bound
iret
sbb
mov
das
add
mov
push
push
inc
add
xor
push
sti
xor
jne
idivb
jnp
cmp
mov
and
xchg
sub
and
addr16
cmpsl
push
pop
sub
fsts
mov
bound
sbb
cmp
rcll
jo
push
mov
movsb
mov
imul
sbb
jle
xchg
fisubrs
mov
pop
xorl
ljmp
cld
andb
aaa
cmp
xor
or
cli
pop
cmp
sub
iret
cmpsl
dec
insb
and
add
loope
jno
xchg
xchg
in
or
loopne
pop
sub
push
clc
xor
shll
and
sbb
adc
loopne
or
dec
mov
add
add
outsb
xor
mov
lcall
ljmp
push
test
or
aas
lods
xlat
stos
insb
jmp
mov
jecxz
cltd
inc
jns
xor
pop
inc
jne
or
fisttpl
leave
fcompl
fists
cmp
cmp
ja
mov
mov
jecxz
push
mov
lock
or
mov
into
fcoml
dec
adc
sbb
js
out
adc
outsb
cld
call
pop
out
sub
jnp
add
fistps
fwait
mov
les
mov
pop
cs
push
jne
loopne
and
cmp
pop
mov
add
cmpsb
lret
mov
sahf
pop
adc
imul
sub
lahf
xor
int3
mov
ret
pop
pop
data16
int3
out
dec
repnz
jne
xor
mov
sbb
mov
adc
lret
push
xchg
sub
mov
shr
or
pushf
add
add
add
inc
ror
lock
jnp
xor
xchg
xchg
add
add
cwtl
lods
sub
roll
sub
sarb
ror
sbb
cmpsl
add
clc
int3
sbbb
repnz
cmp
inc
cmp
inc
std
test
loop
jge
stos
push
icebp
dec
push
and
pop
test
lret
ss
stos
fldz
in
mov
movl
xor
push
cmp
mov
mov
arpl
les
shll
or
push
mov
xchg
sub
bound
arpl
test
shrb
fdivrs
cmc
les
push
jno
mul
mov
cmpsl
xor
inc
js
dec
fnstenv
jecxz
jmp
bound
nop
mov
mov
loopne
ss
shl
es
adc
das
add
popf
std
inc
xchg
stos
xor
adc
es
movsb
fisubl
daa
pop
movl
out
add
add
repz
fisubs
test
add
add
inc
pop
mov
pushf
push
dec
inc
stos
stos
cmp
jbe
enter
aad
aaa
adc
lock
adc
xor
adc
pushf
push
cmp
push
in
xlat
imul
dec
rol
sub
sbb
std
ds
jp
mov
icebp
pop
cmp
fildll
sarl
es
js
data16
xor
repnz
jns
mov
mov
shll
mov
push
dec
stc
xchg
pop
in
xchg
adc
adc
or
daa
push
lret
mov
xchg
ds
xchg
cmp
and
xlat
mov
loopne
mov
imulb
push
push
cwtl
mov
jb
in
push
xchg
mov
add
ret
fadds
outsb
enter
shrb
fimull
loop
xchg
push
and
stos
pop
add
jb
test
and
mov
jg
sti
xchg
pop
jmp
mov
add
add
out
sbb
mov
dec
arpl
add
add
cmp
popa
aad
jecxz
add
sub
adc
xchg
data16
ljmp
mov
stos
loopne
sbb
call
mov
or
cwtl
xchg
inc
cmp
and
push
aam
fwait
jl
inc
enter
mov
ror
aam
ds
and
es
mov
jns
rcr
aad
outsl
addb
loope
gs
vhaddpd
add
and
push
adc
lods
or
add
insl
into
pop
jge
dec
and
ffree
lea
mov
sbb
add
lods
dec
pushf
mov
push
das
push
jae
ss
lret
xchg
out
xchg
pop
out
or
ret
lret
dec
nop
lds
call
test
call
or
pop
and
mov
aas
add
sub
xchg
cmpsl
and
outsb
cld
jb
aas
sbb
pushf
add
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
push
and
jl,pn
ljmp
aad
sbb
or
or
int
imul
jne
inc
stos
sbb
int3
push
loope
lahf
dec
fwait
push
push
jecxz
pushf
dec
and
dec
xor
and
jmp
push
adc
sub
xor
add
mov
clc
jbe
xor
adc
out
lcall
in
adc
inc
fisttpll
gs
cmp
and
pop
pop
test
loope
decb
mov
mov
sub
jmp
mov
cmp
push
mov
subl
xor
jmp
cmpsl
and
cmp
test
stc
or
daa
pop
repz
inc
mov
cld
cmp
dec
sub
pop
add
sahf
cmpsb
sbb
fidivs
mov
cmp
cltd
add
xor
add
add
pusha
rorb
cmpsb
mov
cwtl
mov
add
mov
mov
inc
xchg
lcall
mov
mov
and
adc
scas
clc
cmp
inc
jns
testb
cli
pop
push
cltd
adc
lahf
js
fdivrp
push
mulb
movsl
ret
shrl
das
testl
adc
inc
push
dec
pop
aam
push
inc
and
inc
rorl
ljmp
mov
adc
ljmp
and
xchg
push
jle
out
movb
and
sbb
mov
pop
mov
dec
or
shl
xchg
mov
xchg
jo
mov
add
faddp
sbb
inc
inc
lods
inc
xor
ds
js
mov
sahf
out
push
sti
and
test
out
adc
or
push
imul
pushf
xchg
pop
dec
scas
mov
shlb
loop
fiadds
lea
aaa
xchg
add
add
gs
testl
outsb
mov
add
shlb
dec
inc
jp
fimuls
pop
les
mov
int
push
jmp
les
xor
subl
mov
or
xchg
mov
mov
jg
push
mov
pusha
mov
repnz
test
push
pusha
and
push
popa
push
and
xor
push
jae
push
lahf
das
dec
cltd
test
jecxz
xchg
push
lahf
jns
je
jge
sbb
bnd
push
arpl
pop
stos
inc
call
mov
aam
repz
dec
outsb
cmp
mov
sbb
xor
sub
push
add
and
sub
aam
out
adcl
aas
cmpsb
in
enter
add
or
mov
clc
lahf
movsb
and
icebp
loop
and
sbb
push
adc
mov
mov
jno
mov
sub
and
daa
lahf
mov
pop
das
dec
movsl
pop
push
icebp
add
add
push
jg
je
fldl
and
sub
xor
xchg
push
iret
xor
sub
or
sbb
imul
adc
gs
and
out
sbbl
mov
movsb
dec
dec
mov
je
fstps
into
test
dec
jb
push
adc
jp
jp
sub
sub
jle
mov
sti
sbbb
jb
mov
adc
sti
ret
cld
pop
movsb
sub
mov
in
adc
cld
and
mov
fcomps
out
mov
fisttps
push
ret
lret
adc
fildl
imul
loop
inc
bound
push
insb
iret
imul
pmaddwd
pop
add
mov
scas
repnz
adc
jne
cwtl
loop
sub
rclb
pop
inc
or
xchg
xor
orb
or
jae
xor
or
xor
fwait
adc
stc
fldl
jbe
add
add
fucomi
xor
int
jl
add
add
mov
cld
or
pop
or
adc
add
push
mov
pop
stc
fistpll
fsub
push
mov
fldcw
mov
es
retw
lahf
cmpsl
adc
add
adc
adc
sbb
dec
mov
lahf
lret
xor
pop
mov
sbb
mov
sbb
idivb
loop
mov
pop
cmp
jg
xchg
adc
sub
cmp
push
sub
sub
addb
jno
stc
aad
repz
mov
push
and
hlt
cmp
aad
push
std
in
cmc
and
sbb
lock
vminsd
scas
cmp
jo
aad
out
imul
imul
mov
mov
fcompl
loope
push
pop
mov
sti
call
fidivrl
jno
mov
addl
add
push
inc
pop
jns
aas
loopne
sub
sub
int
repz
add
mov
dec
xchg
repz
mov
pop
mov
sbb
clc
popa
mov
xchg
outsb
xlat
ja
pop
adc
push
cmp
jge
adc
mov
imul
imul
repz
out
repz
repz
orl
cwtl
pop
es
popf
pop
fnsave
xlat
and
pop
xchg
cmp
in
mov
pop
rcll
fs
push
inc
outsl
arpl
or
inc
lods
xor
and
or
repnz
insl
aas
push
ficoms
scas
rorl
mov
aad
sub
pop
xchg
sub
cmpsb
dec
mov
sbb
ficomps
jg
sub
xchg
insb
mov
mov
pop
cs
dec
repnz
jb
jo
lret
jmp
mov
ror
dec
mov
and
fcomps
outsb
mulb
les
lret
xchg
out
mov
add
cmpsb
sbb
jnp
mov
imul
add
xorb
push
sub
or
xchg
repz
mov
imul
sub
xchg
dec
cmp
xchg
add
and
ljmp
into
or
call
inc
in
bound
dec
lcall
jmp
shl
aaa
ficomps
pop
inc
jno
aaa
xchg
sbb
mov
ret
cmp
push
adc
mov
testb
cmc
test
mov
hlt
cltd
rcrl
jne
jmp
rcrl
sbb
mov
xchg
inc
and
mov
mov
ds
and
test
and
imul
rolb
jae
or
mov
ljmp
inc
mov
outsl
push
xor
or
sub
pop
cltd
xchg
mov
orb
jb
mov
adc
popa
xchg
mov
and
fwait
add
add
xlat
pop
xlat
jg
mov
cmp
add
add
in
repnz
subb
inc
push
repz
mov
movsl
xchg
or
dec
std
movsb
out
cwtl
lods
lahf
ljmp
cwtl
pop
lahf
cltd
stc
into
dec
out
xchg
je
scas
in
mov
sub
stos
sbb
pop
or
inc
repz
mov
fnstenv
adc
jno
movd
xchg
add
xchg
ljmp
jl
sbb
or
test
call
xor
sbb
fwait
xor
mov
insb
sti
or
xor
es
and
or
dec
add
push
xor
je
dec
movsb
loope
mov
push
jo
fcoml
fisttpl
push
test
sbb
loop
jmp
mov
xchg
mov
mov
lcall
and
ds
dec
lock
xchg
adc
add
add
fdiv
mov
test
mov
add
pop
dec
icebp
fwait
lock
scas
ljmp
xlat
jo
int
movsl
in
scas
or
pop
adc
sbb
rolb
stc
mov
add
movsl
and
outsb
inc
jne
jp
loope
cli
lods
dec
bound
cmpsb
fcmovb
jl
sbb
out
jb
fsubrp
or
add
push
xor
xor
test
popf
ret
mov
push
loop
negb
lahf
adc
fistps
jle
std
divb
loopne
pop
icebp
and
inc
cwtl
subl
or
jle
fisubs
mov
fisttpll
xchg
lock
add
in
sub
fimuls
sbb
in
or
jne
mov
add
push
add
andb
cltd
mov
ja
movsb
loope
idivl
jle
mov
ret
jae
push
push
xor
rcll
or
std
lcall
int3
adc
add
add
mov
fidivl
mov
add
add
add
inc
sbb
insb
je
push
jbe
daa
add
outsb
pop
inc
fstpl
stc
cmp
cmpsb
xchg
inc
pop
cmp
sahf
ds
or
sub
das
ret
mov
mov
ljmp
shlb
movq
leave
pop
aaa
and
xor
adc
push
int3
lcall
fimuls
cwtl
adc
jecxz
sarb
dec
pop
xchg
xlat
cmp
xchg
and
imull
imul
fstpt
dec
mov
add
into
mov
add
inc
xorb
pushf
testb
testl
cmp
mov
pop
add
stos
notl
mov
andl
or
loope
jmp
out
dec
mov
mov
data16
fwait
sbb
mov
daa
adc
pop
leave
xchg
mov
jbe
xor
sbb
sbb
dec
cmp
and
add
push
pop
push
jmp
sarb
clc
add
add
test
jne
stos
jne
rcll
mov
fscale
jmp
pushl
mov
lock
push
leave
xchg
sahf
cs
push
shll
add
add
pop
mov
jns
sub
adc
and
xchg
push
pusha
fldt
negl
sub
mov
sub
lods
fnstcw
fcmovbe
inc
jg
ja
shll
movsl
pop
addl
ja
mov
mov
je
adc
enter
out
movsl
xchg
cmp
sbb
adc
and
xorl
jb
mov
in
aas
jge
and
add
and
push
rolb
cmp
sti
stos
jmp
inc
addr16
xor
icebp
inc
sub
inc
ret
arpl
cmpsb
jl
jne
popa
jno
adc
mov
xchg
mov
out
mov
adc
aas
insb
dec
lea
stc
mov
lret
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
ds
push
aas
lahf
stc
add
add
fdivs
movsl
push
cltd
or
lret
jmp
pop
fbstp
mov
push
aad
jo
lea
movsb
xchg
sub
js
fcompl
dec
scas
sub
or
add
inc
stc
mov
imul
cmc
stos
sub
icebp
mov
repnz
popa
scas
insb
mov
js
cmpsb
adc
mov
push
adc
pop
add
pop
mov
mov
xchg
cmc
add
push
ss
les
lods
das
add
js
xor
clc
push
arpl
adc
jo
nop
sbb
lods
ljmp
mov
mov
fs
mov
push
fs
mov
iret
icebp
or
mov
cmp
mov
cmc
jae
jno
pop
out
test
and
mov
icebp
lcall
out
mov
lcall
scas
push
xor
push
push
cmp
xchg
cmpsl
sti
in
mov
add
fs
mov
sbb
dec
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
movsb
cwtl
jg
jbe
shl
testl
out
adc
lods
sub
out
jb
jge
and
push
xchg
inc
enter
sbb
push
aad
test
adc
lock
mov
test
rorb
sbb
mov
movsl
cmp
xchg
decb
and
das
in
sti
mov
into
sub
rcl
mov
add
ljmp
xor
or
shlb
jne
fwait
in
cmp
mov
add
inc
gs
jecxz
lcall
stc
push
hlt
sbb
mov
add
ljmp
rcr
pop
and
mov
xchg
or
clc
out
flds
add
or
cmp
or
mov
ds
ja
push
clc
pushf
adc
and
shlb
xchg
into
inc
and
in
add
add
aam
int
aaa
das
aam
mov
push
test
add
add
xchg
or
xlat
pop
add
xchg
ds
add
or
popf
test
andb
ss
sbb
ret
jnp
repz
mov
jne
jae
push
xchg
jmp
lea
pop
jl
and
aam
sbb
lea
cmp
pop
adc
pop
mov
xchg
mov
mov
or
cmp
shll
mov
in
dec
cmp
lret
nop
jg
cmpsb
pop
mov
fwait
or
mov
in
ljmp
push
cmp
add
testb
rcr
or
pmaxsw
jns
xchg
mov
pop
loop
cs
sub
xchg
inc
jbe
mov
cld
lahf
and
ss
and
loop
int
cs
subb
loopne
adc
leave
pop
in
sub
push
pop
shrl
xlat
mov
add
add
arpl
addr16
sub
push
sub
imulb
add
add
test
mov
sub
mov
popa
mov
stos
add
ljmp
iret
notl
adc
xchg
cmpsl
xchg
xchg
in
push
mov
jno
push
add
mov
mov
data16
lret
xchg
ss
inc
in
push
jp
pop
testb
push
cld
mov
push
movsb
xchg
mov
loope
enter
or
dec
mov
jmp
in
or
std
cmp
dec
pusha
push
mov
outsl
mov
cmp
arpl
imul
negl
lods
in
mov
popf
aad
xchg
jb
xor
loop
ss
outsl
pop
pop
inc
pop
jbe
cli
fdivrl
cmp
inc
add
outsl
nop
adc
ret
cli
dec
lret
call
inc
inc
mov
dec
xor
arpl
dec
and
add
out
cmp
cmp
pushl
xchg
xor
arpl
add
add
test
clc
mov
jle
adc
mov
push
dec
adc
popf
insb
ja
inc
shl
lea
xor
leave
mov
in
and
pop
inc
int3
sub
clc
mov
add
scas
ficoml
jge
mov
cmp
push
push
cmpsl
pushf
in
mov
jne
inc
iret
scas
push
adc
xchg
pop
shlb
cltd
push
mov
ret
ljmp
in
adc
push
mov
into
ja
dec
mov
dec
loope
cmpsb
ficomps
push
jne
xchg
and
cmpsl
lock
push
dec
xor
bound
icebp
push
int
fsubl
mov
pop
aas
in
sbb
mov
in
ret
mov
aad
and
arpl
xor
lcall
rcr
adc
std
clc
push
aam
jp
push
jmp
sahf
dec
mov
mov
or
add
out
jb
cmpb
fsubrp
add
add
push
scas
mov
inc
lds
add
fisubrs
dec
insl
jl
andb
mov
sub
lds
ljmp
dec
push
insb
adc
dec
inc
add
inc
mov
mov
ud2
inc
fcoml
fwait
add
cld
stc
or
cwtl
gs
cmp
hlt
sub
daa
jno
hlt
popa
pop
imul
clc
std
cmp
ljmp
loopne
ljmp
mov
sub
and
mov
in
and
call
sub
dec
dec
mov
dec
lock
nop
cld
sub
dec
mov
test
and
lahf
incb
ret
es
add
int
adc
inc
xchg
out
mov
cmp
and
fdivp
test
push
add
xchg
scas
push
mov
imul
dec
xchg
out
mov
out
das
popf
fistpll
add
mov
dec
add
ficoml
stos
or
stos
inc
mov
cmp
mov
pop
outsl
jne
jecxz
add
add
xchg
and
movsl
mov
mov
mov
lret
incl
add
sbb
xchg
jmp
loope
dec
int3
xor
add
sbb
mov
popa
imul
add
int3
not
sub
dec
lcall
pop
pop
mov
out
stos
pushf
jns
clc
loopne
out
imull
movsl
dec
sub
or
pushl
lcall
xchg
outsl
ficoms
jae
mov
or
rorb
pop
inc
popf
js
push
aad
dec
out
cwtl
icebp
negl
push
shrl
lcall
jb
and
insl
pop
stos
imul
rol
mov
add
pop
and
or
xchg
mov
lret
out
lcall
push
addl
jmp
cltd
sbb
mov
cld
notb
cmpsl
push
mov
cmp
sub
sbb
xor
adc
pop
jmp
frstor
add
add
mov
push
jg
mov
push
jne
mov
add
jg
mov
mov
iret
scas
pushf
dec
aad
std
and
mov
lahf
or
out
out
sbb
mov
mov
cmp
dec
mov
and
mov
ret
dec
aad
push
pop
lea
lock
xlat
es
insb
cwtl
cmp
fisttps
movsb
pop
and
cli
sbb
hlt
cmpsl
sbb
dec
lret
aas
jns
inc
rcll
sbb
ret
movsl
cmpb
lock
lea
jbe
mov
and
cs
or
aad
in
ja
mov
fsubr
cwtl
in
jge
xor
mov
js
stc
jno
push
push
jl
jbe
leave
push
jno
pop
xor
jge
cwtl
mov
xor
xor
nop
in
fcomi
xor
xor
rcll
jb
roll
push
or
fstpt
adc
inc
mov
mov
arpl
decl
mov
icebp
popf
pop
loope
or
mov
pop
rolb
add
mov
mov
lods
imul
js
xchg
outsb
movl
add
enter
mov
sahf
lds
adc
shl
ja
imul
daa
or
inc
lods
adc
xor
mov
xorb
xchg
test
fbld
mulb
repnz
movsl
mov
dec
out
jle
repz
stc
rorb
test
es
push
pop
outsl
test
fnstsw
jne
addr16
adc
push
aaa
ret
adc
rolb
ja
cli
xor
lahf
jmp
xchg
adc
mov
sahf
notb
adc
cmp
mov
out
test
addb
cli
jnp
push
idiv
std
lods
in
jmp
mov
lret
push
jecxz
dec
js
xchg
jg
call
inc
cld
xlat
xor
fnsave
in
ljmp
mov
std
jge
mov
mov
test
repnz
cwtl
pop
notb
sahf
ljmp
pop
test
add
mov
cmp
sahf
insl
sbb
add
addr16
data16
leave
bound
shlb
dec
cmp
mov
adc
inc
or
in
insl
jns
lahf
xchg
push
add
mov
or
mov
mov
loopne
push
es
push
in
les
xor
adc
ds
icebp
stc
lahf
lahf
lret
mov
adc
sahf
mov
inc
stc
call
das
inc
test
dec
inc
out
out
xorl
mov
stc
dec
xor
fldt
leave
std
mov
xchg
jne
jnp
jno
test
push
mov
and
rol
pushf
insl
or
outsl
lock
lcall
mov
sbb
jbe
test
dec
sarl
push
sbb
mov
in
xchg
mov
xor
jbe
lret
outsl
mov
pop
sub
mov
jbe
xchg
sub
xor
add
add
add
hlt
fbld
addb
add
add
lods
or
insb
mov
test
lret
and
paddusw
push
push
xchg
or
or
stos
les
pop
jmp
aas
sbb
or
jns
pop
jns
cltd
sarl
inc
inc
movb
jb
int3
lods
inc
fimuls
pop
repz
xchg
arpl
fs
sbb
adc
sbb
pop
push
adc
out
xchg
sub
fiadds
out
push
xchg
insl
dec
lret
pop
dec
dec
insb
pushf
cmp
arpl
daa
push
or
roll
test
jae
insw
adc
inc
imul
int3
in
ss
mov
in
clc
jo
dec
aaa
inc
outsl
lahf
mov
jg
jle
mov
jmp
pushl
fstl
leave
cltd
daa
pop
mov
push
insl
lahf
std
dec
out
sbb
stos
inc
push
or
xchg
mov
or
mov
jl
popa
int3
cmpsb
adc
push
rcll
add
add
add
into
fwait
add
mov
daa
add
add
das
dec
mov
test
xchg
xor
sub
das
wbinvd
out
icebp
adc
push
pushf
xorl
jns
movsl
lds
ret
in
push
out
or
xchg
adc
xchg
dec
psubsb
cmp
addr16
lock
xchg
sbb
ds
adc
sbb
clc
mov
popa
pushf
mov
fwait
leave
out
ds
inc
mov
or
in
leave
xchg
aam
sub
test
push
gs
popf
out
in
jae
cld
inc
jl
pop
sbb
adc
aam
out
repz
sub
cs
xchg
push
rorb
jne
jae
xchg
inc
fs
jbe
sbb
ljmp
pop
xor
ret
or
jbe
xor
xor
gs
cmp
mov
rcll
lods
add
fstl
or
stos
stos
or
or
arpl
xor
add
jl
test
out
mov
pop
sarb
in
fstps
add
inc
mov
movsb
lods
push
mulb
jmp
inc
xchg
pop
js
sub
cmp
aaa
add
jp
push
mov
andl
rorb
imul
adcl
mov
cli
pop
add
mov
lcall
insb
push
adc
jae
addb
inc
cltd
repz
push
imul
outsl
xchg
jb
mov
mov
cmp
popf
jmp
pop
and
jnp
sbb
dec
jmp
jnp
adc
jns
lds
pop
push
adc
add
or
push
repz
jbe
add
cmc
lea
aad
lret
test
or
cmpsl
std
test
insb
sub
dec
aas
out
jmp
add
inc
cwtl
sbb
cwtl
loop
mov
and
mov
js
int
lret
adc
sti
inc
out
aas
mov
rcrb
test
add
or
or
mov
mov
inc
mov
aad
movsl
add
mov
pushf
in
cmp
aaa
out
sub
sbb
dec
jo
mov
in
mov
push
test
pusha
testl
ds
cmpsl
mov
and
stos
pop
inc
shll
sbb
sbb
sub
loop
push
mov
out
out
push
call
adc
in
xchg
pop
mov
out
xchg
arpl
mov
fs
pop
repnz
xchg
add
cmpsb
push
xor
add
jno
add
int
jb
mov
mov
jmp
mov
xor
mov
test
arpl
mov
lock
adc
inc
mulb
cmp
das
cmpsl
push
and
mov
mov
inc
pop
nop
xchg
push
mov
lods
ret
es
add
push
bnd
dec
leave
and
popf
jg
in
add
add
xchg
inc
fiaddl
filds
aam
xchg
mov
sub
add
pop
out
ds
in
lods
test
mov
jne
mov
jae
sbb
xchg
into
pushf
sbb
sar
sahf
repnz
rorl
lcall
adc
and
mov
fsubl
sbb
xor
aas
pop
lods
inc
mov
mov
idivl
movsb
jae
add
test
punpckldq
popa
outsb
mov
sub
xchg
jb
xchg
inc
jle
int3
adc
dec
movsl
pop
xor
mov
outsl
in
inc
sbb
sbbl
sbb
sbb
bound
jno
out
xor
jns
dec
icebp
sbb
push
adc
sbbb
xchg
mov
lock
sub
jle
gs
fbstp
sbb
xor
ror
sahf
shlb
pop
inc
mov
lods
sbb
sbb
xchg
mov
cmp
mov
dec
jbe
add
sbb
in
out
ja
filds
pusha
roll
add
mov
dec
shll
pop
fsubrs
xlat
xchg
aad
mov
das
fnstcw
in
fistpll
test
scas
inc
cmp
in
adc
rcr
adc
cltd
xchg
lcall
aas
fdivl
pop
movl
inc
cli
mov
or
movsl
call
addl
ss
fcoml
mov
je
in
fdivrl
mov
inc
in
and
lods
adc
mov
pop
in
sarb
test
dec
test
xor
sub
in
add
xor
lea
push
adcb
push
insl
fwait
outsb
sbb
or
sub
push
xchg
xchg
pop
stos
pop
out
pop
mov
mov
sahf
mov
mov
add
pop
das
and
mov
int
cmp
add
mov
lods
xchg
loop
xchg
jb
add
add
scas
test
in
inc
push
or
pop
mov
add
sub
popf
mov
aas
inc
imul
pop
jne
and
mov
popa
enter
push
cs
mov
pop
pushl
test
mov
pop
ss
pop
xor
add
sub
lods
dec
mov
leave
mov
ds
cmp
in
fcmovb
mov
mov
shlb
mov
jns
sbb
lds
mov
out
pusha
arpl
test
icebp
sbb
fildll
iret
sahf
push
pop
decb
jo
imul
mov
adc
jg
fnsave
or
inc
aaa
fcmovu
cmp
imul
or
mov
jo
in
mov
mov
aam
adc
push
jmp
sbb
lea
dec
ljmp
adc
fcoml
enter
jbe
iret
lahf
repnz
jmp
lret
rcrb
mov
xchg
hlt
pop
jbe
jb
rolb
jg
jp
les
add
add
jg
neg
pop
daa
inc
cmpsb
jnp
shl
or
add
xor
push
xor
push
shll
mov
adcb
cmp
popf
int
add
dec
mov
push
cmc
das
xchg
addl
fisttps
push
orl
cltd
adc
mov
fsub
xchg
sub
ret
xlat
mov
test
mov
sahf
scas
scas
jle
sub
or
test
adc
and
scas
repz
jp
jnp
and
adc
mov
mov
sub
xchg
test
dec
loope
in
cmc
xor
mov
cs
mov
cld
dec
or
fwait
bound
lea
shrb
mov
xchg
xchg
insb
fldenv
fbstp
jb
rorb
adc
mov
jg
jns
sbb
push
push
test
xor
sbbl
cmp
sti
jg
cmp
je
pop
divl
stc
or
add
fsubrp
shl
adcl
xor
into
xchg
push
sbb
pop
popa
ret
inc
sub
pop
dec
mov
into
fmuls
fmuls
xor
das
pop
pop
popa
out
in
mov
or
sub
cs
popa
loop
mov
inc
popf
cld
xor
mov
xchg
daa
jno
and
cmp
int3
loop
out
loop
jbe
mov
ret
mov
push
stos
lods
adc
adc
add
fisubs
cmpb
mov
icebp
test
add
divl
cltd
clc
mov
mov
mov
xchg
fnstcw
pushf
inc
aaa
dec
cltd
dec
lcall
lret
xchg
pusha
or
push
xchg
adc
or
lock
cs
add
pop
lcall
fnstcw
aam
das
repz
jne
add
scas
aam
jnp
fstp
fcompl
xor
adc
or
add
xchg
push
lods
jnp
sbb
cs
jns
call
push
sar
push
pop
inc
adc
jp
insl
and
jge
insl
jo
sarb
cmp
popa
xor
test
jno
mov
adc
or
add
inc
sub
sub
push
bound
inc
mov
out
dec
sub
jae
xchg
inc
lea
or
mov
mov
das
push
hlt
fs
int
mov
mov
pop
ret
push
into
daa
mov
lods
outsl
push
fdivs
decl
sub
mov
insb
jno
lods
pop
mov
and
jl
imul
mov
push
loope
fwait
mov
fcmovnbe
dec
jne
fcoml
lahf
mul
and
pushf
sub
xchg
stc
cmc
cld
xchg
jp
dec
js
cs
ljmp
testl
rclb
es
jp
dec
cltd
add
popf
rcl
out
adc
mov
jno
std
outsl
mov
add
or
mov
push
add
add
aam
outsb
pop
imul
jae
xchg
rorl
cmc
inc
adc
jne
insl
stos
daa
jno
ss
and
ljmp
cmp
lea
mov
lods
fisttpl
push
lret
inc
test
js
pop
ljmp
pop
imul
dec
iret
jecxz
cli
adc
loop
adc
mov
adc
in
icebp
iret
lods
xor
movq
into
adc
adc
mov
cmp
mov
pop
dec
pop
xor
dec
xchg
imul
sub
or
ja
and
jmp
mov
xchg
es
inc
cmpsl
add
lods
cltd
mov
repz
or
test
push
jecxz
ja
ds
fildll
lods
dec
jmp
mov
inc
jno
or
pushf
jb
stc
adc
jb
movsl
xchg
mov
sldt
add
jmp
fldl
push
or
add
add
or
fbld
mov
mov
in
ljmp
mov
inc
jb
ret
mov
ret
in
inc
mov
xchg
imul
aaa
dec
fxch
pop
cmp
in
pop
adc
sbb
lret
in
loope
pop
or
test
mov
sub
jg
in
leave
xor
iret
arpl
ljmp
xor
add
dec
xchg
movsb
fsub
xchg
test
stos
mov
cmpsl
mov
jecxz
movsb
sub
lods
addr16
cmp
outsb
jg
ror
xchg
pusha
fwait
sub
out
cmp
mov
jns
dec
jbe
aas
mov
lret
cmpsb
or
pop
test
les
outsl
jns
mov
jae
inc
leave
adc
cwtl
cld
jbe
cmp
es
xlat
dec
fsubp
jae
and
sub
movsl
leave
fiadds
dec
xchg
js
std
pop
inc
inc
ret
xor
int
addl
inc
mov
std
loopne
mov
test
add
add
xor
test
push
fucomip
or
add
add
lods
sub
leave
sar
cmovge
fidivrs
and
jmp
in
pop
ja
xor
sbb
jecxz
or
jb
xchg
or
scas
add
jno
and
lret
xchg
or
outsl
pop
ljmp
or
popf
into
das
inc
jmp
gs
pusha
out
popa
sub
sbbb
nop
ret
jecxz
add
mov
dec
test
mov
out
add
shrb
loope
stos
mov
les
fidivs
call
pop
dec
pop
mov
popa
mov
or
add
cmp
inc
loop
xchg
or
fisubrl
sub
lods
hlt
mov
out
loop
outsl
push
jmp
jns
out
and
adc
xor
jmp
mov
push
aas
inc
xor
dec
sarl
mov
movsb
stos
in
in
jg
cltd
pusha
int
lock
lahf
in
das
ljmp
sub
mov
cli
lcall
add
add
cli
inc
jg
int
xchg
lods
or
test
sahf
adc
add
add
std
adc
loopne,pn
cwtl
pop
pop
cmp
hlt
jle
imul
inc
fnstenv
xchg
mov
mov
ret
push
pusha
push
and
and
movsb
out
or
lods
xor
mov
imul
jle
addl
fsts
xchg
pop
es
sub
cld
dec
mov
xchg
sub
aad
adc
cltd
popf
inc
push
sub
jb
add
loop
push
ret
lret
cmp
es
sti
ficoms
mov
jb
orl
sbb
jp
xchg
flds
aam
inc
adc
ljmp
or
pushf
out
or
out
lods
dec
scas
int3
xchg
test
dec
stos
or
mov
jo
sbb
es
repnz
out
stos
cltd
jo
in
push
xlat
es
movlps
std
ret
imul
ret
cmpsl
xchg
add
jns
jge
adc
inc
outsl
add
aad
add
lock
std
cmp
jle
fistpll
ficoml
adc
add
jl
sbbb
xchg
sbb
xor
jmp
cltd
inc
cmp
xchg
sub
in
fistpll
stos
mov
into
xchg
mov
int
outsb
mov
movl
dec
sbb
jg
in
lods
loopne
es
in
push
dec
lret
scas
in
xor
js
fmuls
stc
pop
inc
adc
int3
lret
lds
rcl
sahf
cmpsl
popa
mov
aaa
add
mov
mov
inc
rep
cwtl
pop
fadds
mov
pusha
jb
push
inc
repz
adc
sub
in
and
mov
addr16
mov
cmc
xor
or
mov
addb
repz
mov
jmp
int
add
ds
sbb
shll
sti
jl
scas
sbb
mov
pop
cmpsl
pop
pop
sub
icebp
push
repnz
loop
sbb
inc
mov
xchg
pop
lds
xlat
ficompl
inc
add
adc
add
pushf
jg
inc
push
repnz
push
cmpl
inc
pop
fidivs
mov
cmpsl
dec
xchg
add
push
movsl
bnd
jmp
dec
and
roll
fdivr
mov
mov
xor
addr16
fidivs
insb
enter
icebp
pop
pop
jns
js
push
sbb
ss
out
sub
lds
aas
test
repnz
mov
mov
outsb
iret
add
mov
cs
outsl
fstpl
shlb
fs
loop
stc
push
cli
add
xchg
pop
mull
xor
inc
mov
lcall
popf
std
mov
mov
cmp
or
and
cltd
push
test
pop
je
sbb
mov
or
sub
enter
fdivp
mov
inc
test
mov
or
incl
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
test
add
add
sub
int3
leave
dec
repnz
xor
ret
ds
mov
movsb
push
sarb
aam
mov
dec
jb
ret
jl
jmp
lcall
or
sahf
jns
pop
enter
jbe
push
ljmp
sbb
mov
movsb
jl
mov
xor
clc
sbb
jle
std
jae
inc
je
fmuls
dec
jle
aam
inc
daa
mov
cld
movsl
dec
imul
push
out
and
xchg
fs
scas
lret
xchg
jo
cmp
pop
sub
add
stc
hlt
pop
mov
call
repnz
sti
in
mov
sbb
mov
in
inc
daa
push
cli
pop
repz
adc
fisubrl
outsb
jnp
jg
mov
cltd
jg
inc
shrl
aaa
out
dec
or
or
out
adc
fmuls
out
add
mov
divps
pop
xor
add
sbb
std
sbb
stc
cld
or
inc
aas
pop
es
add
pop
and
js
mov
test
mov
pop
sub
push
int
add
loope
push
insb
push
test
push
xchg
callw
xor
mov
outsb
in
push
jmp
pop
dec
das
pop
pop
and
imul
xchg
cmp
lret
rolb
and
sahf
inc
add
sub
xchg
xor
cmpsb
xchg
lcall
rorb
push
stos
sti
loopne
bound
sti
std
push
or
push
aad
ret
and
cltd
or
movsb
rol
out
scas
adc
popf
mov
lods
jg
pop
pop
push
rcrl
lods
mov
or
add
inc
int3
imull
inc
push
leave
mov
jge
cli
popf
outsb
push
push
dec
popf
cmpsl
or
ret
insl
cmc
jno
out
cwtl
pop
mov
lahf
out
fs
xchg
jle
aam
inc
push
int3
xor
rcl
out
fistl
testl
add
negl
adc
pop
xchg
cmpsb
push
mov
add
add
incl
pop
or
mov
cwtl
inc
lea
mov
mov
mov
cmp
mov
in
pop
add
adc
fwait
loopne
in
hlt
hlt
add
mov
iret
jns
rclb
cltd
mov
jge
pop
mov
mov
xchg
xor
jmp
mull
mov
push
stc
out
mov
scas
out
or
popf
dec
pop
es
mov
aad
xor
imul
lds
aam
jle
sub
jge
mov
mov
out
es
mov
int
shr
pop
pop
pushf
inc
in
stos
test
aas
subl
mov
fisttpl
inc
inc
mov
or
lret
scas
cltd
jmp
and
cmp
insl
mov
repnz
or
in
pop
inc
movsb
lods
xchg
mov
mov
lret
in
push
dec
sub
push
lea
add
add
dec
pushl
adc
add
add
cmp
into
gs
nop
or
lods
not
adc
je
xor
and
mov
mov
dec
je
xor
cmp
outsb
xchg
repz
push
mov
fsub
movsl
mov
jne
loopne
scas
dec
dec
leave
jnp
cs
sbb
hlt
jmp
or
out
and
scas
add
je
inc
or
test
pop
inc
stc
iret
pop
mov
out
mov
cli
addr16
mov
stos
cmpl
ja
out
inc
test
push
mov
jae
fildll
jg
pop
lods
jl
or
mov
enter
mov
loop
shr
lds
mov
shll
pop
mov
sub
cmpsb
adc
sbb
mov
sub
cmp
ficoms
xlat
cmp
mov
jle
ret
sqrtps
adc
mov
add
in
jp
filds
add
mov
add
add
inc
ja
pop
aas
dec
push
xor
add
test
pop
cmp
jge
sbb
cmp
test
sub
mov
push
mov
dec
push
jecxz
test
push
or
pop
sub
push
mov
xor
and
loopne
pop
leave
inc
cmp
sbb
adc
popa
fwait
sub
ror
pop
lods
stc
xor
inc
push
mov
in
mov
mov
jns
aas
push
cld
pushf
jno
inc
outsl
add
shl
les
inc
fwait
mov
push
cmp
xor
jb
inc
testl
cs
call
enter
testb
push
nop
test
inc
stc
or
cmpsl
mov
iret
xor
in
cli
or
pop
sub
mov
jb
adc
out
add
seto
mov
xor
add
pop
adc
pop
inc
cmp
inc
data16
add
repz
jae
ja
div
mov
pop
cmp
cmp
add
add
leave
add
cmpsl
lock
cmp
test
xor
ret
iret
mov
sarl
nop
cwtl
lcall
push
mov
dec
inc
xor
inc
call
mov
pop
and
jl
sub
pop
pushf
push
or
or
cmpsb
and
test
cmp
and
lods
ljmp
ja
mov
jge
mov
test
cmpsb
adc
fneni(8087
fsubrp
loopne
bound
sarb
jae
das
ficomps
mov
adc
pop
dec
in
xchg
rclb
push
lcall
xchg
jecxz
push
xchg
inc
sbb
xor
clc
divl
xchg
mov
mov
push
daa
adc
pop
hlt
mov
inc
es
lret
divl
sub
mov
cs
mov
js
ja
pop
push
repz
dec
and
add
xor
cli
std
jg
push
pushf
dec
sbb
sbb
add
cwtl
push
dec
mov
or
outsb
jne
xchg
push
mov
pop
xor
popf
push
mov
push
scas
stos
dec
cmp
mov
add
inc
std
xorl
es
lret
dec
inc
arpl
mov
fmull
cmpb
stos
gs
insb
rcrl
sahf
mov
leave
jle
insb
jo
cmp
cmc
mov
pop
scas
popf
push
and
lret
jl
in
jne
add
sbb
sbb
sub
jne
mov
add
mov
xchg
and
push
mov
stos
into
add
cwtl
and
cmpsb
cmp
gs
mov
sbb
jl
mov
cmc
out
mov
scas
adc
push
push
cs
adc
lock
daa
or
fwait
cmpb
mov
lret
inc
add
pop
mov
push
outsl
xchg
jns
mov
xor
add
add
add
mov
std
incl
sbb
popf
xchg
add
lret
stos
ret
ds
and
fiaddl
in
mov
push
inc
je
sbb
sahf
jl
inc
lea
or
mov
pop
fmul
test
cli
imul
jecxz
mov
out
fstpt
inc
and
dec
sbb
sbbl
dec
iret
shlb
inc
popf
cmp
xchg
jo
mov
mov
mov
mov
xor
dec
movsb
inc
jmp
loopne
aas
ds
sbb
dec
movsw
dec
popf
ja
movsl
cwtl
lret
fldt
shl
sbb
popf
or
push
stos
pop
imul
or
mov
ret
inc
or
cltd
sbbb
push
mov
lret
mov
xchg
pminub
ljmp
mov
jb
lret
lock
fistl
push
addr16
push
pop
add
in
dec
xor
mov
dec
imul
movb
sbb
add
push
es
jg
pop
or
xor
mov
add
stos
push
mov
jecxz
lret
pop
setle
leave
lods
in
cs
jb
ljmp
repnz
xor
xchg
stc
jns
pop
leave
movsl
mov
sbb
push
jmp
mov
sub
je
hlt
in
push
xor
shrb
add
icebp
push
add
fwait
popa
mov
pop
js
adcl
arpl
mov
jle
mov
jns
mov
rdmsr
pop
mov
cmp
or
fs
adc
adc
mov
fistps
jno
jecxz
push
pop
dec
push
cld
fsubrs
cmpsb
mov
add
repnz
nop
inc
jmp
shrb
orl
sbb
sub
mov
js
sbb
jmp
inc
lods
xchg
fisubrl
fildll
add
add
or
dec
push
cmp
sbb
add
push
fwait
aaa
and
insl
push
xchg
in
jae
lcall
popa
sbb
mov
popf
mov
leave
mov
jle
pop
scas
dec
in
cmpsb
pop
and
xchg
js
xor
mov
mov
xchg
clc
adc
mov
adc
mov
scas
loope
xor
cwtl
cli
or
xchg
sbb
xchg
sbb
mov
mov
mov
movb
mov
mov
push
cmp
mov
rcrb
fistl
xchg
dec
mov
dec
movsl
push
add
cmp
fldenv
cs
repz
xchg
roll
pusha
in
inc
sti
test
adc
xchg
ss
dec
inc
stc
out
lcall
or
imul
xor
scas
jb
out
inc
sarb
scas
dec
arpl
inc
pop
ficompl
scas
mov
scas
sarb
add
pop
int3
cwtl
add
mov
sti
jnp
std
std
mov
add
stc
lods
xor
mov
push
dec
push
push
add
add
mov
jg
lret
jle
sub
xchg
and
pop
aad
mov
jns
inc
mov
and
pop
in
icebp
pop
cmp
fwait
ss
lods
ret
xchg
clc
mov
fisttps
jno
or
in
arpl
xor
or
inc
call
les
pusha
pop
mov
mov
ret
in
int3
push
pop
stos
dec
loope
daa
stos
mov
dec
iret
or
aam
leave
loop
out
sub
nop
xchg
xor
cmp
sbb
jecxz
imul
jecxz
roll
sarb
pop
pop
es
add
pop
xchg
sub
lods
push
lods
ret
out
repnz
out
outsl
lods
push
pusha
dec
jns
mov
and
outsb
mov
outsl
scas
xchg
std
sti
xchg
pop
add
mov
ror
push
pop
sub
fadd
cld
fdivs
jecxz
pop
shlb
imul
add
pop
xchg
adc
add
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
filds
xchg
or
dec
decl
pushw
ds
jg
jg
push
div
jl
pusha
sahf
jbe
lea
jecxz
icebp
icebp
jmp
jg
repnz
push
mov
pop
fs
mov
fwait
push
xchg
mov
cmc
test
dec
inc
js
loopne
cmp
jecxz
jnp
lock
out
or
test
mov
jns
push
leave
aam
lahf
dec
dec
inc
pushf
popf
lods
sahf
sti
cs
icebp
pop
leave
xor
dec
fcoml
inc
outsl
sub
or
adc
mov
add
ret
jb
or
inc
jno
repnz
inc
mov
aam
fcomi
pop
push
push
dec
mov
jns
cmp
xlat
imul
aas
xchg
mov
xor
mov
into
in
shlb
push
jmp
add
movzwl
xchg
arpl
popf
xor
fbld
or
add
add
in
out
stos
jge
or
nop
fistps
add
add
stos
test
insl
sub
sbb
add
repz
mov
xorb
orl
into
jle
icebp
js
xor
inc
in
xor
sbb
fmuls
cmp
and
xchg
dec
test
pop
aaa
or
test
call
aam
insb
adc
lret
jge
int
fcoms
xlat
mov
cmp
fs
push
sahf
and
adc
add
test
lcall
inc
xor
mov
gs
cltd
or
repz
iret
sbb
lds
imul
add
xor
js
imul
or
xor
js
sbb
orb
dec
jl
cmp
dec
enter
inc
mov
fidivl
jns
hlt
notl
or
sahf
mov
shlb
pop
lds
lock
popf
adc
mov
mov
add
sbb
out
xchg
iret
push
aas
testl
add
add
sbb
fimull
sbb
xor
inc
xchg
push
push
sbb
test
push
dec
daa
pop
imul
sub
push
shlb
out
or
pusha
mov
nop
mov
adc
inc
mov
mov
shl
mov
inc
out
xchg
dec
cmp
add
or
jle
out
jne
xor
mov
adc
clc
out
mov
sub
cmp
sbb
and
cld
push
icebp
aaa
lcall
jge
in
push
mov
dec
mov
test
ja,pn
lret
adc
mov
fs
je
sub
addb
clc
pop
sub
mov
push
stc
arpl
or
aas
clc
mov
insb
dec
mov
loop
cmp
aam
sub
sbb
out
loop
mov
ljmp
xor
pop
out
outsl
mov
jp
clc
adc
lock
add
in
add
cmp
out
loope
jns
pop
outsl
psrad
add
add
iret
pop
mov
sub
out
test
lret
jg
repnz
ljmp
dec
pop
pop
sbb
mov
dec
sub
jae
cmp
notl
and
ffreep
ret
gs
xchg
and
mov
mov
xchg
push
sti
ficoml
and
lock
push
cmp
lret
dec
out
push
das
mov
ja
popa
repnz
test
cmp
lea
dec
sub
mov
sbb
lcall
push
loopne
icebp
mov
xchg
popf
xor
ljmp
push
test
xchg
movl
jp
and
xor
mov
imul
dec
or
bound
or
cltd
das
cmp
jae
insb
test
add
imul
lods
fcompl
push
out
xorl
and
std
or
dec
cmpsb
hlt
pop
movsb
iret
or
add
lods
jg
push
mov
mov
and
add
push
loop
ja
and
fdivs
cli
push
add
imulb
mov
xor
jae
lods
imul
adc
test
mov
int3
xchg
dec
mov
push
pop
pop
sbbl
vunpckhpd
add
xchg
sbb
stc
dec
or
lods
cltd
repnz
stos
dec
inc
mov
imul
mov
ja
sbb
mov
pop
insl
cmp
jo
cwtl
out
mov
mov
ja
push
jae
sarb
mov
mov
mov
jg
test
aaa
add
push
dec
aam
add
ss
xor
xchg
mov
addb
sti
loope
into
xchg
in
and
sbb
loope
sub
mov
movsb
mov
or
mov
sti
hlt
cli
sahf
dec
imul
jge
push
out
mov
mov
add
add
jg
cld
ret
add
stos
mov
jno
add
add
dec
add
repz
jnp
int
lret
pop
mov
and
inc
or
andl
pop
stos
adc
mov
cmpsl
pop
lock
sbb
pushf
xor
inc
pop
pop
fstl
pop
dec
test
es
out
imul
icebp
mov
xchg
jns
sbb
inc
sub
mulb
loop
shlb
sbb
mov
mov
and
mov
in
sbb
sub
movsb
pop
push
fmull
bound
and
call
xchg
inc
cmc
fwait
mov
pop
or
sbb
dec
push
std
xchg
xor
push
push
mov
ja
fildl
jnp
fnsave
daa
pushf
xchg
std
mov
pop
pop
lods
add
inc
daa
int
shrl
in
int
call
js,pt
xchg
lahf
sti
jl
popf
cmp
cmpsl
mov
lahf
imul
xchg
aas
fdivl
add
ret
mov
iret
mov
add
fldl
add
and
ret
dec
leave
mov
in
in
push
cmpsl
xorb
sbb
pusha
nop
inc
cmp
jnp
in
int3
mov
xor
into
iret
adc
inc
aas
adc
aaa
push
jp
inc
or
test
popf
and
out
mov
xor
pop
jo
fcomp
lahf
and
pop
jl
cld
shrb
scas
fsts
cmp
mov
out
stos
scas
push
jp
add
cmpsb
push
pop
aaa
mov
mov
jno
movsb
out
jnp
inc
daa
and
sbb
repz
test
inc
cmpsb
sbb
icebp
hlt
push
cmpsb
out
das
repz
cld
lcall
aas
and
jecxz
dec
pop
push
out
insl
rcll
in
and
mov
sbb
call
jb
fwait
pusha
inc
test
xor
cld
adc
std
add
fnstsw
mov
mov
add
add
mov
jg
arpl
xor
fs
add
add
dec
mov
rcr
movsb
std
add
mov
filds
cmp
movsb
xor
out
inc
add
add
cmpl
jbe
test
xchg
das
mov
inc
jnp
in
insl
cmpsb
sti
mov
ret
lahf
push
sub
cs
das
mov
or
mov
ss
lret
push
xchg
dec
push
or
mov
sar
and
out
or
js
cmp
pop
push
test
cmpsb
xor
repz
add
test
xchg
movsb
xor
cld
xchg
lods
cld
test
inc
add
lock
mov
fstl
lcall
loop
push
ud1
cmp
in
add
mov
add
sbbb
aam
or
xor
lods
fisttpll
mov
out
popa
pop
cli
mov
imul
fistl
es
adc
js
loope
cmp
shlb
cli
clc
cli
clc
sarb
sti
mov
sbb
add
push
mov
cli
or
blcic
sub
imul
mov
repz
inc
nop
jns
push
subl
aaa
outsb
sbb
in
lods
inc
xor
mov
andb
popa
ds
cmp
xorl
aas
pop
test
aas
lock
push
lock
ja
mov
mov
leave
mov
fucom
fwait
lcall
outsl
ret
flds
sbb
cli
pop
xor
mov
bound
adc
mov
movsl
call
push
arpl
addb
sub
jg
hlt
hlt
adc
shll
lea
movsb
scas
lcall
fidivrs
inc
stos
pop
lea
cld
sahf
push
mov
rolb
cmp
xor
out
sbbb
xchg
lahf
jmp
sbb
loope
popa
jae
ljmp
cltd
imull
outsb
adc
add
test
imul
mov
mov
add
in
jne
call
cmp
sahf
out
and
jg
mov
iret
push
sti
xchg
out
cli
add
jge
movl
or
outsl
fnstsw
outsb
push
imul
jno
pop
mov
inc
cmp
adc
fmul
mov
jne
or
adc
outsb
and
push
in
test
adc
movsb
inc
push
lock
insl
lcall
fnstcw
movsl
mov
mov
aam
inc
push
inc
fs
xchg
popa
das
mov
les
mov
push
scas
insl
int
jbe
jg
jp
jne
or
inc
lahf
jo
sub
inc
addr16
loop
mov
std
cld
and
dec
mov
inc
stos
adc
push
faddp
scas
repnz
mov
ljmp
xor
or
push
push
pop
adc
jmp
adc
stos
dec
ret
cmc
nop
add
add
es
data16
insb
daa
mov
mov
testb
add
dec
dec
cs
sub
pusha
daa
rcrb
popf
xchg
ret
cmp
cwtl
xchg
mov
adc
adc
jge
jne
fmul
cmp
mov
xchg
pop
xchg
nop
dec
push
icebp
scas
outsb
xor
das
push
add
jo
or
mov
adc
push
scas
adc
jne
lds
lods
pushf
jne
jb
ret
mov
cmp
sahf
xchg
adc
cld
lds
rorl
inc
xchg
xchg
pop
push
es
push
lret
mov
adc
ds
and
out
xchg
mov
pushl
pop
xchg
cmp
gs
inc
sahf
jge
add
jge
mov
ss
es
and
sub
xchg
sub
pushf
fildll
and
jns
sbb
aam
push
ja
fiaddl
cmp
imul
test
cli
mov
cmc
xchg
mov
mov
daa
cltd
les
xor
scas
js
push
loopne
sahf
pop
sub
add
add
dec
mov
imul
and
sub
add
jbe
pop
mov
bound
pop
scas
out
arpl
xor
cmp
push
xchg
push
sarb
test
lds
mov
sub
inc
data16
jle
mov
jecxz
leave
sbb
outsl
pop
mov
inc
push
jb
fbstp
pop
pop
outsl
cwtl
gs
leave
loop
aaa
shrl
push
fisubrl
and
and
cltd
add
add
sbb
mov
cmp
pop
ja
dec
gs
or
sbb
jp
ja
inc
outsl
push
jecxz
xor
imul
sti
sbb
mov
dec
icebp
jl
mov
xchg
xchg
loopne
xchg
ds
mov
aad
inc
es
out
mov
repnz
mov
dec
cmp
fidivrs
movsl
scas
std
jmp
push
fwait
leave
shll
lods
nop
push
mov
adc
add
sub
pop
xchg
xchg
mov
xchg
push
add
add
and
push
sti
cmpsl
enter
sub
sub
add
mov
dec
pop
sarb
in
jle
jecxz
pop
enter
add
aaa
push
repz
dec
loop
xchg
lods
int3
sbbl
test
jmp
and
xchg
hlt
jp
dec
cmp
fistpl
pusha
insb
jno
sbb
or
cmp
or
outsl
repz
dec
mov
add
jl
cs
xchg
jbe
cmp
xchg
inc
inc
inc
inc
sbb
and
push
or
mov
push
mov
imul
xchg
leave
out
xor
stos
les
dec
mov
jns
in
jb
sub
movl
test
jp
xor
pop
xor
add
lea
stos
xlat
adc
cmp
jge
add
inc
aad
add
jl
clc
arpl
push
dec
inc
push
mov
or
mov
sub
cmc
xchg
movsl
les
adc
in
mov
fwait
add
cmp
add
push
and
std
mov
dec
push
stos
mov
add
add
pop
xor
add
imul
jb
mov
pop
mov
pop
push
mov
xchg
inc
sbb
je
les
pop
js
dec
cs
push
inc
cmp
nop
mov
push
xchg
jbe
ljmp
pusha
mov
xor
sbb
ficomps
mov
adcb
loop
pop
adc
mov
in
xchg
dec
cld
test
and
jge
xor
sub
in
jmp
add
push
jae
cmp
jecxz
cwtl
leave
das
mov
mov
daa
pop
dec
fisttpll
cmp
or
nop
ds
in
popf
sahf
mov
push
pop
push
mov
inc
lcall
bound
repz
inc
ja
dec
cmc
enter
mov
xlat
into
mov
mov
jnp
stos
dec
push
mov
cmp
lods
add
add
and
jecxz
and
lcall
add
add
pop
mov
and
pop
inc
lahf
mov
in
imul
pop
rep
leave
xchg
xchg
fcmovbe
lea
outsb
cli
pop
rcll
sbb
mov
imul
pop
fldcw
add
hlt
and
fnstcw
cmp
jmp
nop
jle
js
jle
scas
mov
fmull
pop
cwtl
mov
fwait
cld
mov
mov
jmp
xor
mov
jmp
ja
jno
pushl
xor
or
inc
cmp
adc
jp
xor
movsl
xor
push
xchg
xchg
adc
mov
subb
insb
lods
inc
push
mov
mov
xchg
adc
pusha
xor
xlat
or
call
es
int3
insb
movsb
adc
fwait
sub
subb
lret
jno
inc
inc
or
loopne
je
pop
popa
leave
pop
jbe
fcompl
add
fiaddl
ret
ficomps
cmp
lahf
inc
int3
lea
add
add
mov
push
jmp
test
or
fdivr
stc
lds
in
shll
xor
sub
adc
psllw
enter
lahf
cltd
mov
ss
ss
mov
mov
fistps
push
fidivs
mov
out
xor
mov
mov
popf
inc
das
cltd
sbb
sub
lods
dec
xlat
imul
outsb
popa
subb
insl
bnd
add
ss
inc
aas
mov
sbb
hlt
mov
mov
cs
fsubrs
and
fldcw
not
cmp
sbb
xchg
pop
icebp
das
lods
mov
lods
dec
cmp
lret
sti
jns
push
ret
loopne
or
nop
lea
hlt
roll
iret
stos
jge
sbb
xchg
jns
or
fcoml
stc
ss
inc
movsb
xchg
jle
cmp
fisubl
ret
mov
inc
jl
mov
lcall
add
add
lods
xor
mov
cmp
mov
add
test
add
add
mov
out
push
and
pop
popa
into
loop
stos
dec
mov
enter
add
add
lcall
sbb
push
inc
sti
or
fadds
mov
sbb
and
clc
lock
sub
fwait
outsb
in
rolb
dec
ljmp
nop
leave
std
into
sub
push
pop
int
xchg
test
cmp
add
inc
call
xor
jo
cmp
imul
push
jg
es
stc
int
arpl
movsl
into
cmp
cs
insb
sar
push
dec
bnd
lret
or
lods
in
icebp
ret
dec
and
add
push
xlat
and
pop
mov
inc
push
sub
xchg
push
loopne
popa
and
mov
movsb
or
mov
add
cmp
adc
push
push
inc
insb
pop
dec
adc
icebp
jmp
fdecstp
cmpsb
lret
mov
test
add
lock
mov
or
idiv
imul
add
addr16
xor
sub
ret
pushf
lea
scas
jl
arpl
addr16
mov
jae
pop
loopne
xchg
int
dec
push
out
jb
daa
stos
sbb
pop
movsl
xchg
adc
cmp
nop
stos
mov
dec
cmpsl
xchg
xchg
flds
shll
mov
and
xchg
faddl
cmp
mov
popf
sbb
dec
bound
mov
sahf
lret
adc
test
fucomip
mov
pop
jp
in
pop
popf
push
jns
rcrb
mov
jae
cmpsl
test
add
xchg
iret
aas
popa
sbb
jnp
mov
call
ficoms
jno
andl
mov
adc
pop
mov
sbb
sbb
pop
xchg
scas
into
loope,pt
jae
inc
and
add
das
pop
gs
sarb
scas
jle
pop
std
xchg
jns
popf
call
add
sub
sti
pop
jge
neg
hlt
add
pusha
mov
add
add
push
shl
aad
and
addr16
popa
xchg
hlt
jno
cmp
inc
mov
pop
or
movsb
data16
mov
dec
out
xor
das
das
pop
mov
xchg
mov
sbb
sti
scas
in
in
jmp
outsl
sbb
stc
push
push
mov
mov
jb
test
mov
stc
ja
mov
push
lcall
pop
lahf
pop
inc
in
es
data16
bound
or
fidivl
sbb
icebp
push
lds
xor
lods
xchg
add
sub
ss
adc
repnz
mov
mov
bound
js
mov
lret
es
cmp
dec
push
pop
jl
xor
jg
mov
pop
or
xchg
push
jno
sub
add
mov
es
mov
push
popa
jp
sbb
popf
pop
ficomps
icebp
cmp
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
loop
stc
call
add
aad
jbe
xchg
cmpsl
in
xchg
cmp
dec
adc
mov
fists
mov
push
lret
pop
outsl
fwait
xor
sub
ret
in
js
cli
adc
pop
lcall
xchg
ffreep
sub
out
stc
insl
pop
sub
mov
dec
sbb
and
enter
mov
mov
fstl
push
or
adc
push
neg
adc
xchg
shrl
pop
sbb
mov
jae
int3
add
mov
lahf
testb
cmpsl
divl
addr16
and
and
fbld
xor
iret
and
das
test
push
mov
iret
jae
push
pop
pop
mov
inc
mov
mov
dec
mov
sbb
nop
inc
mov
out
xchg
sar
jmp
sahf
test
sbb
jmp
jle
pop
mov
xchg
adc
jno
pop
or
aam
xor
push
or
jl
pop
outsb
fnsave
das
jecxz
ja
xchg
bound
jmp
add
add
jp
jnp
sti
xchg
jle
jp
lods
cmp
stc
mov
add
add
xchg
mov
clc
out
or
mov
lods
dec
outsb
inc
push
push
lock
clc
shl
cmpsl
mov
jnp
aad
push
addb
xchg
fiaddl
shrl
jecxz
rol
cmp
outsl
imul
sub
push
adc
xor
cmp
repnz
data16
push
xchg
ja
mov
push
xchg
jmp
xor
dec
sub
das
std
cmpb
push
rcll
cmp
pusha
dec
lock
pop
add
xlat
mov
push
mov
fisubrl
aaa
inc
pop
rclb
loopne
adc
mov
inc
movsl
data16
xchg
les
inc
mov
les
mov
outsl
adc
xor
xchg
sti
xor
cmp
push
sub
enter
pop
inc
movsb
sub
stos
and
aaa
daa
push
lock
mov
sti
addb
adc
mov
add
add
push
sti
decb
mov
ljmp
add
push
inc
sbb
jo
dec
xchg
cwtl
outsb
shrb
jne
sbb
sbb
adc
gs
xchg
or
push
roll
pop
inc
pop
cs
pusha
ds
adc
outsb
sahf
ret
cmpsl
ficoml
stos
ja
les
inc
adc
adc
cmp
outsb
mov
iret
jb
repz
jo
in
std
flds
add
andl
pusha
cmp
movsb
fcoml
xor
stos
lock
mull
hlt
lret
aaa
xor
aas
insl
mov
movq
dec
and
jb
mov
push
outsl
push
push
xchg
sbb
adc
scas
pop
add
adc
mov
cmp
cmp
aad
push
xchg
sbb
push
cmpsl
xor
insl
or
xchg
dec
rcrb
lock
push
sub
repz
out
mov
xchg
aaa
or
ljmp
add
cmp
xor
hlt
xchg
daa
inc
push
add
sbb
jne
mov
cmp
cmp
xchg
add
imul
popf
cmc
or
jae
cmpsb
lcall
aaa
leave
fsubl
cmp
movsb
nop
push
ljmp
mov
pop
mov
adc
and
fwait
mov
jecxz
mov
mov
lcall
xor
lret
stc
xchg
cmpsb
pop
rcr
fidivrl
lea
es
shlb
and
mov
jl
test
ret
inc
pop
je
and
int
mov
push
mov
push
pop
pop
fisubs
arpl
sub
xchg
mov
sbb
scas
in
subb
out
xlat
lret
lcall
mov
xchg
mov
push
cmc
sahf
fsts
xor
pushf
into
insl
test
div
mov
sub
insl
inc
xor
call
sahf
rcll
add
incb
ljmp
pop
rol
lret
add
add
mov
xchg
sahf
mov
mov
in
and
mov
nop
arpl
icebp
fldt
shlb
cmp
xchg
mov
push
xchg
xchg
mov
lods
jnp
push
popa
lods
cmc
or
je
cli
insl
push
ficomps
test
addr16
int
test
test
add
push
push
sub
jb
iret
je
or
xchg
fnstcw
repnz
push
jmp
mov
movsl
setb
insb
ljmp
mov
lret
mov
xchg
inc
outsl
cmovp
xchg
xor
pop
out
testb
pop
dec
shlb
test
cmp
cmpsl
mov
pop
mov
ljmp
mov
scas
mov
out
ficoml
movsb
andb
push
fwait
dec
mov
lret
mov
xchg
push
mov
dec
hlt
adc
enter
pop
add
add
rclb
nop
lcall
aaa
add
add
movsb
inc
rcl
push
xor
les
jmp
cmp
jae
xchg
jns
pop
aad
popa
mov
nop
or
push
pop
insl
frstor
std
push
imul
jno
addr16
or
out
add
int3
add
idivb
cmp
or
sbbl
lret
stos
ss
sub
mov
testl
push
fstps
push
pop
daa
add
xchg
sbb
dec
popa
cmp
adc
cmp
stos
xchg
cmp
bound
and
push
push
mov
aam
jmp
mov
in
add
call
call
fisttps
cmpsl
add
sahf
pop
mov
fdivr
xor
sub
and
repz
sti
xor
inc
push
xor
inc
push
aaa
sub
add
jns
roll
cltd
out
cmp
gs
and
sti
dec
pop
lds
psubw
add
add
jbe
idivl
or
fwait
imul
add
pop
ljmp
icebp
into
cmp
lods
inc
ret
lock
push
sub
cmpb
push
add
out
and
push
push
jge
xor
fs
mov
scas
mov
loop
fistpl
inc
fldcw
mov
andb
enter
fs
imul
ret
push
jae
mov
hlt
ret
mov
mov
add
push
pusha
and
sub
mov
mul
xor
dec
cmp
jne
or
sti
dec
push
les
pop
pusha
inc
push
sub
fwait
pop
mov
xchg
jp
mov
add
stos
outsl
push
sub
pushf
fbstp
andb
outsl
fisttps
mov
pop
cmp
je
pop
ret
mov
jp
adc
dec
fdecstp
in
jno
xchg
sbb
mov
cmp
dec
aam
hlt
icebp
jmp
lea
push
out
lcall
icebp
dec
add
add
outsb
sub
stos
fs
jmp
leave
aas
in
jae
fidivrl
add
add
mov
outsb
test
repz
adc
lods
sbb
fisubl
bound
je
sbb
mov
sub
fisubrl
push
movsb
mov
test
pushf
icebp
pop
in
jmp
pop
out
faddl
or
mov
mov
bound
int3
stc
sub
std
xchg
pop
aas
jp
mov
mov
mov
in
pop
pop
test
fwait
daa
adc
mov
and
test
pop
call
add
push
fucom
mov
cld
pop
sub
jmp
add
xlat
mov
adc
push
inc
jmp
and
inc
add
arpl
jmp
mov
push
mov
popf
xchg
jne,pt
ficoms
lcall
sub
push
arpl
xorb
xchg
mov
mov
push
sbb
enter
jo
xchg
repnz
pushf
icebp
mov
push
mov
cld
mov
add
outsl
movsb
pop
sub
add
les
scas
fistpll
outsl
negl
repnz
add
add
pop
es
in
idiv
out
nop
lret
jl
in
xchg
push
mov
imul
mov
dec
das
cmp
pause
into
mov
xchg
xor
jge
or
rcll
repz
clc
sub
add
mov
insb
clc
jl
ja
push
sub
and
insb
inc
jle
negl
jb
in
ret
jnp
jnp
mov
lret
sbb
inc
fnsave
dec
mov
dec
dec
fxch
push
shll
add
mov
xor
mov
into
jmp
in
mov
xchg
inc
lock
xchg
ret
mov
xchg
pop
fists
ljmp
icebp
sub
mov
mov
repnz
gs
adc
stos
mov
mov
add
mov
mov
cmp
pop
sub
in
mov
test
test
push
call
lea
add
sbb
jnp
jnp
cmp
movsb
push
sbb
xchg
lock
add
add
and
ljmp
push
pop
je
or
int3
inc
stos
mov
out
aad
ret
jb
xor
xchg
rorl
pop
push
mov
insl
sub
nop
daa
push
outsb
xchg
pop
mov
and
inc
cmp
popa
addr16
aam
outsl
push
shl
or
lret
pop
inc
das
xchg
inc
and
adc
mov
push
push
rclb
push
fmul
movsl
mov
imul
or
add
or
imul
rcl
mov
adc
lret
dec
imul
mov
pop
loop
dec
adc
and
mov
lret
xor
inc
pop
fldl
stos
lret
or
icebp
fst
int
sbb
pop
sbb
sub
mull
out
test
cmc
jp
and
cmc
push
sbb
push
shrb
ljmp
pop
lret
xchg
xchg
jmp
add
outsl
lret
mov
out
jmp
int
mov
cmp
add
cmp
sub
push
les
shrb
pop
rclb
imul
scas
push
lcall
sub
jb
dec
jns
sar
jne
xchg
and
fs
addr16
add
or
pushf
push
lret
nop
jg
adc
in
inc
or
out
mov
stc
pop
stc
icebp
adc
adc
loope
popf
outsl
fs
lahf
adc
repz
pusha
test
mov
jnp
test
xor
ret
jge
cmpsb
aad
adc
xchg
fimull
pop
add
shll
mov
sbb
add
cmp
mov
xchg
adc
pushf
and
jmp
xchg
jae
cmpl
mov
test
cmpsl
cmp
cmp
add
hlt
xor
jns
pusha
out
push
or
add
add
mov
jecxz
inc
ror
aaa
hlt
mov
ret
scas
filds
add
and
das
cmp
lods
repz
mov
mov
cmp
add
or
pop
scas
cmp
fs
pusha
stos
stos
gs
or
dec
sub
sub
out
mov
leave
scas
push
adc
lret
and
mov
loope
add
push
lret
pushf
cwtl
std
imul
pop
and
imul
sub
test
xor
sub
popf
sti
lahf
jmp
jno
mov
int3
jns
sarb
int
cmp
adc
outsb
pop
ljmp
in
dec
lods
in
xchg
pop
bound
jl
dec
xor
sub
ljmp
sub
inc
fldt
jmp
push
push
outsb
in
cmp
fisubrl
jecxz
loopne
push
in
iret
pusha
iret
nop
into
inc
sbb
lock
loopne
mov
inc
mov
ja
xor
mov
sar
cmp
lds
cltd
and
aad
push
addr16
movl
lock
cmp
lret
cld
mov
icebp
cwtl
mov
aas
daa
push
cld
push
std
jmp
dec
push
add
add
add
in
mov
ret
lret
push
mulb
or
out
repz
lret
pop
int
cmp
dec
inc
sbb
repnz
pop
dec
sti
dec
jae
push
inc
dec
mov
clc
das
aaa
cmc
push
movsb
pop
push
pushf
push
pushf
xchg
imul
cmp
loop
rclb
imul
repnz
imul
insb
cltd
outsb
xchg
inc
mov
sub
sbb
add
fisubl
push
and
mov
test
jns
in
push
int3
in
or
sti
add
jecxz
loopne
xor
popf
ja
test
pop
mov
sub
mov
dec
hlt
rorl
test
mov
pop
sub
clc
dec
adc
fcmovu
scas
mov
inc
xorl
fwait
int3
imul
je
push
out
cmp
dec
sti
js
mov
push
js
mov
mov
out
loop
push
test
jbe
stos
fidivs
or
jge
add
dec
push
add
sbb
dec
push
out
aad
test
pusha
clc
aas
add
add
mov
icebp
xchg
or
xor
jns
fdivrs
dec
rcrl
sub
lea
lahf
pop
test
mov
jne
stos
push
aas
in
jmp
dec
int
or
pop
hlt
jl
cmpsl
xchg
inc
mov
cmp
in
mov
xor
and
sub
cli
ds
push
mov
adc
mov
js
mov
jg
adc
loop
enter
out
insl
dec
repz
in
rorb
stos
dec
cmp
out
out
ja
pop
add
inc
aaa
sbb
sbb
xchg
or
mov
in
insb
mull
add
add
sbb
xchg
inc
stos
mov
daa
ret
inc
jo
jle
mov
sbb
out
cld
mov
stos
xchg
fstpt
xor
cli
jns
mov
jnp
pushf
adc
out
icebp
mov
and
jne
or
push
notl
lret
sub
add
idivl
or
or
cwtl
std
inc
add
add
popa
xchg
mov
imul
icebp
lret
dec
rclb
mov
or
out
mov
lods
inc
cmp
push
std
fistps
jl
jo
outsb
iret
add
sbb
test
xor
int
xor
sbb
or
inc
and
es
sub
or
lahf
mov
xchg
xchg
add
pop
jge
jns
repz
bound
out
and
mov
sahf
push
hlt
push
push
daa
inc
out
adc
cmp
testb
push
mov
aam
test
sub
cltd
xchg
cmp
add
mov
push
mov
mov
les
sahf
stos
sbb
mov
mov
or
fsubrl
jno
enter
andl
jge
pop
insb
add
clc
mov
jb
in
mov
xor
jne
dec
sbb
add
add
jg
xchg
orl
dec
add
add
aad
dec
dec
or
sti
jecxz
fimull
rclb
xor
push
aam
lret
or
ja
clc
dec
mov
inc
push
add
inc
xor
gs
ljmp
scas
and
nop
inc
mov
sarb
sub
add
or
inc
cmpsl
xchg
push
popa
sarl
out
mov
int3
fdivl
imul
mov
jne
or
jnp,pn
xor
scas
inc
fbstp
clc
inc
xor
add
cmp
fisttps
clc
out
andl
cmpsl
pop
out
arpl
test
outsl
mov
mov
pop
dec
xchg
fmuls
aad
xchg
fcompl
shll
bound
scas
xchg
jecxz
imul
les
stc
pop
mov
add
lcall
cwtl
fisttpll
fmuls
in
jl
aad
add
add
push
dec
lret
jmp
imul
aaa
je
sub
pop
inc
add
add
mov
movsl
mov
aas
jne
cld
add
sbb
and
sbb
cmp
push
jmp
jnp
arpl
shrb
inc
repnz
lods
xor
dec
cmpl
punpckldq
movsl
pop
inc
jo
add
cmp
push
mov
adc
push
pop
mov
in
in
dec
nop
dec
insl
lds
add
repz
push
inc
mov
clc
jl
mov
sbb
cltd
enter
add
call
push
xchg
or
push
in
pushf
adcl
fsubp
xchg
lret
cmp
xchg
jle
sub
pop
lcall
add
xlat
or
xor
mov
dec
jmp
cld
insl
pop
sub
ss
mov
in
call
test
push
jp
movsb
lret
push
neg
push
inc
test
jecxz
inc
sub
add
clc
ret
pop
push
insl
insb
mov
jl
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
inc
add
add
pop
lahf
jne
sbb
cmp
call
aad
jmp
jecxz
dec
mov
cmp
jmp
sbb
ss
bound
mov
mov
push
jno
mov
sbb
sahf
mov
inc
cmpsl
ja
jae
cmpsb
in
popf
push
mov
rcl
mov
cld
pop
xchg
lret
or
nop
stc
aas
enter
pusha
jge
popf
cs
mov
mov
insl
and
sbb
fs
lods
cmp
outsl
outsl
push
rcll
xchg
push
int
jbe
notb
mov
mov
mov
sahf
cmp
or
pop
cmp
cmp
int
popf
xchg
pop
xchg
sbb
adcl
lahf
aam
xchg
mov
int
or
inc
mov
std
popf
cmpsb
cmp
imul
sbb
aas
pushf
dec
js
cmp
out
ret
xchg
cmp
add
add
jns
xor
jg
inc
pop
repz
add
pop
lcall
minps
sbb
dec
xor
cmp
pop
pop
sub
test
pushf
test
rclb
sbb
movsl
les
pop
push
dec
jbe
mov
dec
xchg
sub
pop
scas
sbb
add
ss
mov
mov
push
inc
movsb
andb
jg
ficompl
cli
repz
bound
sahf
mov
sbb
cmpsl
adc
cli
lds
adcl
sbb
lea
aas
pop
mov
scas
dec
inc
and
jg
pop
outsl
add
sbb
std
mov
hlt
pop
test
shll
sbb
imul
pop
pushl
mov
pop
push
push
leave
mov
sub
add
mov
inc
inc
xchg
fstpl
hlt
repnz
int
call
pop
insl
out
nop
xchg
lret
ds
call
das
arpl
xor
push
pop
push
add
add
ret
jg
decl
rol
js
sti
adcl
add
add
fwait
pop
es
jb
loopne
int3
pop
movsl
jne
sahf
or
dec
rcll
loope
or
out
cmp
js
jge
jae
push
scas
lret
int3
shlb
lcall
adc
dec
sub
les
rclb
adc
mov
add
xchg
jle,pt
jg
xchg
mov
add
lea
arpl
dec
stos
dec
jl
bound
ret
cmp
cli
adc
jbe
pop
mov
dec
es
out
cmc
into
rcrl
out
inc
ret
or
pop
push
cmpb
aaa
mov
mov
insb
or
dec
roll
movsb
lret
pop
inc
lods
test
into
cld
dec
cmc
ljmp
mov
imul
pop
and
test
rcr
rcl
xor
popf
lahf
std
sahf
cmc
inc
cs
sub
jle
mov
fisttpll
sbb
cs
andl
add
add
das
mov
out
aad
pop
xor
sbb
add
imul
jle
fidivl
arpl
std
add
sbb
repz
adc
jbe
lods
xchg
sub
sub
hlt
mov
push
cld
lods
sbb
mov
sbb
divl
jecxz
hlt
mov
int3
and
pop
xchg
loope
clc
ror
or
mov
imul
mov
mov
lahf
les
popa
daa
getsec
dec
cli
pop
cmp
jge
pop
pop
xchg
std
std
int
mov
fcoms
lea
cmp
mov
xchg
mov
in
ja
pop
subb
or
repnz
mov
hlt
add
mov
in
outsl
or
cmpsb
jg
stos
in
imull
pushf
xchg
dec
bound
rcrl
out
inc
hlt
add
mov
pop
cmp
jmp
hlt
sbb
fcomps
stc
outsb
aaa
push
jl
arpl
add
add
hlt
gs
dec
adc
and
add
sub
lahf
push
cmpsl
cs
push
xchg
mov
jo
or
add
gs
sbb
mov
adc
or
mov
dec
push
shlb
lods
inc
mov
mov
out
xor
adc
lock
les
jle
sbb
push
loope
lcall
fnsave
popa
jmp
out
stc
or
mov
inc
and
clc
fisubl
xlat
test
fprem1
mov
xchg
xchg
imul
push
ficomps
sbb
ds
je
mov
ret
adc
mov
movsb
or
inc
xchg
cmc
outsl
dec
ficoml
mov
lret
pop
push
outsl
loope
enter
sbb
xchg
push
clc
and
add
push
shl
call
test
out
jo
inc
pop
mov
mov
sub
add
add
aas
gs
pop
repnz
dec
add
add
sub
lods
mov
std
lea
lods
sbbl
add
jns
fdivrs
add
lret
outsb
sub
bound
jae
insb
icebp
js
in
cmp
mov
insl
icebp
sub
rorb
mov
mull
sti
into
aad
in
cmp
mov
dec
and
push
stos
popa
outsl
loopne
adc
repz
iret
call
call
push
lret
adc
scas
mov
mov
lcall
clc
movb
push
movsl
in
jns
repnz
pop
sarl
lods
xchg
ds
mov
js
mov
sub
push
inc
sbb
loope
idiv
or
pop
ret
clc
loope
push
cmp
sub
push
xor
xchg
test
lods
mov
fwait
out
js
cs
adc
scas
adc
pop
adc
out
mov
ret
and
cmpsl
shl
add
add
out
fisttpll
lock
mov
dec
add
add
xor
sub
loopne
jne
loope
out
xchg
int
cmp
xor
xchg
mov
jo
xchg
xchg
int3
xor
std
cmpsb
loopne
jbe
mov
mov
jp
notl
push
fsubrs
and
xor
xor
lcall
dec
xor
or
addr16
movb
cs
pop
jo
test
cmp
jb
psllw
enter
adc
out
faddp
push
lock
movsl
and
call
enter
fisubl
clc
mov
sub
jnp
lock
mov
mov
inc
cwtl
xchg
mov
xchg
pusha
ds
pusha
mov
cmp
pop
ja
rcrl
hlt
inc
call
idiv
xchg
push
cmp
pop
push
push
int
adcb
cmp
loop
cmp
push
jmp
mov
sub
nop
inc
dec
inc
jge
xor
push
jo
fs
cmp
or
sbb
add
fildll
mov
ljmp
add
add
mov
push
add
aas
fists
inc
jge
cmp
cmp
out
adc
stos
mov
push
sub
jo
sbb
test
xchg
pop
mov
jge
cld
pushf
pushf
push
mov
mov
cmp
outsl
push
xchg
xor
rcl
jmp
sarb
add
sbb
mov
dec
jb
mov
scas
xchg
pop
sbb
jne
or
sbb
push
and
pusha
cmp
cmp
call
push
ja
cltd
or
dec
pmulhw
sub
arpl
shrl
in
xor
sbb
ret
pop
add
xchg
add
lret
mov
movsl
leave
lods
mov
lcall
push
ficoml
test
push
xchg
in
data16
enter
push
lea
mov
repz
pop
mov
add
jl
xchg
add
push
nop
popa
sbb
xor
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
in
jmp
add
push
fists
repnz
cmp
dec
pop
psllq
or
pop
mov
cmp
add
sub
pop
xchg
out
fdivl
rol
cli
dec
or
jge
aam
dec
je
nop
subb
push
cld
mov
aaa
xor
in
xor
ss
inc
mov
add
add
xor
ss
inc
ret
repz
pop
sbb
xchg
push
jle
xchg
leave
popf
or
and
out
movsl
mov
mov
popf
add
ljmp
mov
dec
add
pop
scas
sub
xchg
int
cmpsl
mov
addb
mov
sbb
mov
or
xchg
push
fcoms
fdivrl
add
adc
shl
mov
inc
dec
jle
cmp
mov
cmp
out
inc
out
lock
push
mov
mov
out
cmp
xchg
xor
rcrb
add
add
imul
out
mov
mov
pop
popf
lock
add
les
or
push
add
sbb
add
fwait
ss
and
push
subl
arpl
inc
aas
mov
add
scas
pop
inc
psllq
add
push
sti
xchg
ficoml
jbe
mov
sbbb
movb
adc
outsl
sub
fsubs
jno
sbb
ljmp
int3
add
mov
enter
adcl
addb
ret
call
mov
pushf
rcrb
addr16
mov
cmpsl
push
mov
lods
mov
or
push
mov
movsl
jmp
pusha
test
fsubs
add
mov
pop
cmpsl
daa
imul
cmc
pop
mov
shrl
ja
mov
add
push
test
cmp
and
sub
jno
orl
jne
jecxz
lods
add
add
add
add
dec
stc
mov
ljmp
ds
add
add
nop
pop
add
lds
or
es
xor
bound
dec
inc
jl
adc
xor
lcall
rcrl
rorb
out
cld
cmp
and
xchg
push
fists
jnp
add
in
notl
cmp
mov
cmpsl
cmp
cs
mov
pop
insb
das
dec
adc
pop
mov
pop
ss
sub
adc
push
dec
sub
cmpsl
xchg
dec
xchg
sbb
popa
stos
movsb
dec
and
and
push
add
jmp
cmp
jmp
orb
push
or
xor
fcomps
in
int
and
fdivrs
loope
sub
fwait
mov
jecxz
cmc
jbe
scas
mov
pop
xor
in
xchg
pushf
daa
add
ret
add
sub
nop
pop
loopne
add
cli
dec
add
add
mov
out
or
mov
add
add
jg
cld
lcall
loop
dec
add
add
mov
dec
sbb
sub
mov
pop
repnz
ljmp
lret
lret
dec
inc
hlt
mov
push
insl
or
imul
xchg
sub
stc
je
subl
jae
push
push
decb
into
jo
call
lret
stos
xchg
mov
sti
pusha
sbb
push
dec
inc
jno
and
shll
out
add
mov
jge
cld
mov
adc
cld
repnz
outsb
push
mov
nop
add
loope
push
popa
push
loop
fs
out
mov
addb
mov
jmp
jo
iret
dec
mov
dec
jae
lock
jle
or
mov
icebp
das
add
ja
cmpsl
jns
stos
or
stc
pop
jp
outsl
sub
ljmp
add
adc
and
push
imul
stc
cmp
jp
les
push
pop
adc
add
add
xchg
mov
pop
ds
fmull
add
add
xor
ficompl
jmp
aad
sub
sbb
sbb
scas
or
roll
inc
pop
sarl
repz
roll
mulb
daa
stos
mov
push
aam
push
out
add
fistps
adc
daa
xor
cltd
or
out
adc
shll
or
sub
sub
pushf
cmp
rolb
fsubrs
popa
inc
xchg
inc
dec
lcall
bound
stos
dec
xor
sbb
stos
pop
mov
jo
pop
dec
iret
out
mov
addr16
or
out
dec
sub
mov
pop
jmp
pop
cwtl
pop
inc
flds
cmp
imul
pop
leave
imul
insb
cld
jmp
adc
sub
inc
adc
fists
cmp
mov
icebp
lret
hlt
cmp
jbe
sbb
and
retw
push
in
ss
or
bound
mov
add
inc
mov
push
push
jmp
push
mov
ja
push
add
add
ljmp
push
sbb
xlat
movsb
loop
outsw
cltd
xchg
jg
adc
mov
popf
ljmp
stc
ret
lret
push
std
pusha
add
sub
push
js
mov
xor
addr16
cmpsb
xchg
aas
or
es
repnz
or
xchg
cmc
or
mov
dec
pop
xor
push
clc
pop
push
shl
adc
pop
dec
jo
dec
jl
inc
les
dec
subb
cs
or
cltd
jnp
outsl
out
jns
push
jnp
rcl
add
mov
pop
xor
es
popa
cmp
mov
subb
imul
dec
jo
lea
mov
xor
mov
in
mov
cltd
mov
pusha
dec
mov
shll
add
xchg
lret
xchg
inc
popa
js
sub
or
icebp
test
mov
cli
push
fnstenv
lret
lret
push
jg
add
fsubrl
mov
out
cmp
ret
or
and
repnz
push
push
add
add
push
fs
sub
adc
jnp
add
xchg
and
arpl
jns
inc
mov
fwait
loop
cmp
mov
jb
into
shll
or
sub
pop
into
mov
popf
adc
mov
mov
and
jp
imul
into
xchg
sarl
cmp
lret
stos
pop
pop
sbb
rolb
push
push
js
insl
mov
das
jle
int3
and
xchg
movb
mov
outsb
or
cmpsb
out
jns
int3
and
test
lahf
push
scas
sub
adc
test
mov
stos
xor
inc
stos
das
imul
jae
xor
repnz
es
push
and
xor
movsb
sub
fisttps
outsl
ret
dec
in
xchg
adc
xor
nop
sub
ror
in
bound
dec
hlt
mov
add
or
push
shll
out
pop
pop
pushf
push
xor
jl
push
push
add
add
fbld
add
int
lcall
cmp
push
sub
inc
pop
sbb
jge
sub
ds
inc
test
xor
and
movsl
hlt
fdivs
stc
mov
aas
push
pusha
enter
lret
mov
dec
inc
shll
push
std
xchg
or
into
sbb
jbe
jns
xchg
enter
cmp
push
enter
int3
or
mov
mov
mov
pop
add
dec
xor
add
dec
fnstenv
ds
mov
sbbb
cld
pop
mov
loop
adc
adcb
cld
xchg
ja
jle
leave
sahf
jge
gs
mov
jp
loop
mov
jle
pop
cmpsb
bound
and
pop
lahf
shlb
je
cmc
xor
mov
hlt
fwait
popa
fsts
inc
adc
lea
outsl
ret
or
add
stos
push
lcall
hlt
mov
pop
push
add
add
adc
sbb
cmp
push
cmp
adc
push
push
mov
scas
imul
xor
pop
jb
jae
jnp
mov
sbb
jg
or
mulb
dec
out
mov
sbb
mov
and
mov
les
push
sti
push
fstpt
mov
mov
add
dec
lahf
lock
jne
xchg
lret
movhlps
and
pop
ja
sbb
shll
jbe
js
mov
addr16
add
in
sbb
adc
jmp
or
pop
sub
cwtl
in
fimull
out
addr16
stos
xchg
push
rclb
dec
mov
fsubrl
push
dec
jns
int
aam
insl
enter
mov
out
bnd
xchg
jp
test
push
hlt
xchg
loope
mov
shrb
fistps
mov
addr16
lods
insl
pop
adc
add
add
jbe
idiv
imul
stos
xchg
fsubs
add
add
mov
repnz
xchg
sbb
xor
xor
pop
aas
mov
sahf
adc
lods
lea
outsb
inc
lret
push
jp
arpl
and
and
xchg
shrl
shll
roll
push
ficompl
inc
ds
js
dec
lcall
movsl
adc
or
fcompl
and
nop
repnz
repz
incb
dec
std
mov
enter
es
jnp
lock
jns
mov
sarb
sahf
add
sar
xlat
pop
mov
cmc
jg
pop
ret
xchg
sub
sub
mov
aas
lock
push
mov
adc
frstor
cs
pop
mov
ror
xor
or
ss
jnp
inc
icebp
inc
out
roll
pop
push
xor
repnz
push
arpl
fcomps
fs
inc
mov
movsl
cli
cli
add
sub
mov
aam
add
add
fwait
cmp
stos
sarb
push
add
add
push
and
jne
jle
xor
xchg
out
icebp
xor
xchg
test
outsl
pop
test
xchg
push
in
das
xchg
xchg
mov
and
mov
sub
cmpsb
mov
dec
inc
xchg
mov
cltd
cmp
out
adcb
and
cs
es
es
test
push
ljmp
sahf
sub
or
fmull
jb
jg
push
and
outsl
or
add
adcl
call
inc
add
dec
jae
mov
aaa
insb
push
rolb
dec
or
fistps
jo
icebp
insb
test
in
in
movsb
mov
pushf
inc
dec
jge
clc
mov
sti
mov
hlt
pop
imul
cmp
mov
inc
fisttpll
bound
adc
icebp
arpl
je
inc
mov
mov
xor
inc
mov
cwtl
out
xchg
push
xchg
and
or
sub
jae
add
add
clc
mov
and
hlt
xchg
dec
xor
add
add
add
lds
fucomp
into
pop
insl
rcrb
lcall
and
addr16
pop
xor
mov
push
mov
sub
push
xlat
mov
pop
fcmovnbe
es
fsubl
popa
mov
sub
sbb
hlt
addr16
cwtl
pusha
adc
mov
pop
in
cmp
pop
int3
inc
push
cmpsl
jge
lock
push
cld
cmp
fldl
jnp
lea
aad
test
mulb
sub
sbb
int3
insl
cli
jle
push
out
sub
rorl
jmp
shrl
mulb
xor
sub
out
mov
test
dec
orb
or
sub
shlb
pop
and
lock
ret
sahf
xchg
adcl
ret
jg
jmp
push
lods
jne
mov
add
add
shr
mov
xor
jmp
add
imul
mov
dec
cmpsl
fldt
push
xor
add
jnp
outsl
fldl
aaa
in
lcall
dec
jl
push
pop
mov
ja
lret
insb
inc
inc
dec
add
out
jno
mov
aaa
ss
jo
lret
div
cmp
andl
inc
lods
mov
loop
bound
outsb
fwait
push
pop
jecxz
pop
fstpt
dec
xchg
movsl
scas
add
decb
shll
mov
mov
dec
dec
jp
std
add
and
mov
lret
add
pop
inc
aad
dec
in
jmp
xor
data16
sbbl
call
sbb
ret
shrl
cmpsl
fs
add
rcr
or
push
das
aam
xor
mov
add
addr16
fisttpl
inc
test
cltd
sti
pop
sbb
rcrl
mov
jo
mov
fprem1
push
add
add
mov
lds
aad
mov
pop
add
add
loope
add
cmp
sub
jns
dec
cmc
iret
jnp
dec
enter
xchg
fistps
push
xor
sub
shlb
lcall
push
push
jb
stos
sbb
inc
pop
sbb
insl
sub
rcl
xor
xchg
jne
loope
int3
cmp
in
mov
sub
and
int3
cmp
xchg
cwtl
add
lcall
sahf
stc
sarb
subl
std
mov
mov
push
or
xchg
or
adc
js
add
push
out
in
lahf
pop
mov
mov
xlat
ljmp
ljmp
arpl
rcr
aaa
sarb
jmp
sti
aad
lcall
lahf
and
mov
push
int
imul
pop
cli
test
andnps
push
scas
push
test
or
aas
cmpsb
mov
mov
pop
in
xor
mov
mov
and
fsts
outsb
out
push
push
test
inc
lods
mov
add
mov
and
das
cmp
pusha
push
sbb
add
mov
push
out
sub
dec
add
xchg
or
loope
pop
fistps
xchg
ficomps
icebp
lret
test
and
xor
xchg
scas
movsb
jl
repz
pop
add
loop
jl
shl
and
lret
int3
jnp
std
fists
sub
push
int3
mov
xchg
jmp
cli
sti
xor
cwtl
jnp
mov
clc
mov
mov
sti
repnz
adc
addr16
jae
sub
sbb
stos
xor
and
or
mov
mov
data16
sub
push
test
outsl
scas
sbb
mov
push
ret
nop
and
es
sahf
jne
loopne
push
xchg
fildll
out
and
aam
sbbl
cmpsb
xchg
inc
in
stos
xor
xchg
enter
sahf
mov
mov
fistpl
pop
test
std
and
mov
add
add
movsb
jae
jnp
mov
ja
mov
lods
arpl
add
add
rcl
es
mov
sbb
xchg
cmpsb
mov
sub
jmp
sahf
js
jno
cmp
cmovb
lds
add
push
inc
mov
repnz
pusha
sbb
fsubrp
ret
clc
das
jns
dec
sbb
xor
popa
sahf
int3
inc
shl
in
clc
in
mov
mov
aad
cli
out
push
push
jecxz
jno
dec
and
pop
xor
mov
daa
sbb
fnsave
pop
push
imul
push
or
mov
movsl
shrb
cmpsl
xor
xchg
or
xchg
adc
mov
cmpsl
scas
add
lds
adc
shlb
sbb
cltd
jae
ja
out
cmp
dec
xchg
adc
jecxz
mov
xor
mov
sbb
mov
ljmp
add
fbstp
scas
adc
lahf
xlat
out
cld
mov
pop
add
add
enter
sub
dec
inc
aad
lods
xchg
inc
xchg
sbb
cmp
add
lahf
add
sub
shrl
out
mov
xchg
push
add
fs
jno
loope
push
arpl
daa
insb
loope
mov
mov
mov
es
loopne
inc
imul
mov
inc
iret
repnz
pop
and
adc
pop
pushf
rcr
mov
mov
add
xchg
mov
mov
jge
jmp
sbb
in
ret
or
clc
roll
sub
mov
out
sti
fidivrs
jg
fsubrl
pusha
push
add
xor
push
or
xor
adcb
icebp
cmp
pop
sub
mov
sub
xor
andb
out
mov
mov
add
mov
mov
in
adc
push
mov
add
test
inc
imul
rol
cld
xchg
addl
xlat
sbbl
sbb
ja
aad
ljmp
dec
lret
inc
jo
cli
lds
inc
popa
les
xor
jl
push
and
jle
jle
adc
test
daa
fs
lret
test
mov
mov
in
out
scas
std
mov
mov
fists
adc
add
adc
jbe
js
mov
adc
push
test
or
push
fs
xor
fcmovnu
les
push
movsb
popa
mov
sbb
jno
xchg
sub
jo
adc
addr16
xchg
pop
fsubrp
add
jns
or
fdivs
in
adc
push
sub
pop
xchg
xor
popl
mov
dec
fsubp
vmread
int3
aas
mov
inc
aam
and
aad
mov
in
mov
pusha
filds
add
out
into
push
push
inc
lahf
mov
mov
add
xchg
push
mov
adcl
dec
fstpl
inc
jmp
test
enter
cmc
cwtl
mov
fwait
push
sarb
das
push
push
lret
sbb
data16
dec
ja
mov
andl
jns
call
shl
jp
sbb
inc
imul
lret
push
jo
and
cmpsb
loop
imul
and
sub
cmpb
inc
push
mov
into
and
jl
push
inc
sub
push
loop
xchg
sub
xchg
inc
sbb
pop
dec
mov
mov
and
pop
fsubr
mov
mov
repnz
pop
repnz
bound
push
fisubl
xor
loop
mov
cmp
adc
xchg
mov
test
xor
xlat
cmp
push
xchg
jle
mov
pusha
cmp
jge
lcall
xchg
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
sarl
cld
add
mov
push
in
rcrl
mull
stos
xchg
aad
push
test
ljmp
aad
shll
pop
iret
sahf
rolb
dec
cmp
orb
lods
xchg
sbb
or
mov
cmp
lret
aam
cmp
sbb
ret
outsb
inc
ss
adc
or
mulb
jecxz
shrb
pop
push
cmp
ljmp
pop
push
pop
sub
sub
jnp
repz
xchg
test
xor
lret
mov
cmpsb
ficoms
int
push
mov
mov
inc
cmp
cli
hlt
cmpl
xor
cld
out
sbb
mov
lods
insl
je
and
movsl
cs
ficoms
mov
push
pop
push
das
add
fistl
movsl
lea
mov
add
add
lahf
pop
cmpsl
jne
mov
pusha
add
add
add
sbb
push
cmpsl
dec
pop
mov
lret
xchg
adc
addr16
cld
cmp
lret
push
and
cmc
insb
jg
imul
mov
cmc
lcall
xor
push
movb
cmp
xor
cld
mulb
sbb
cltd
push
push
mov
mov
mov
push
lods
xor
adc
jp
inc
mov
push
mov
pop
and
dec
xchg
lods
gs
fcmovb
div
test
sti
jmp
xchg
scas
push
loop
fistps
cmp
pop
jecxz
mov
sbb
mov
lret
nop
add
pop
push
ret
and
icebp
scas
mov
scas
out
pusha
jmp
mov
addr16
dec
xlat
cmpsb
or
bound
loopne
in
sti
addb
inc
lret
sbb
push
sbb
out
add
sahf
pop
testl
std
nop
inc
popf
popa
add
add
mov
jmp
insl
sbb
hlt
xor
fcomi
sub
sub
cmc
sub
je
fwait
jp
adc
push
test
cltd
jge
add
sahf
lods
scas
cmp
mov
fwait
negl
mov
call
xor
sbbl
pop
pop
test
test
decl
add
sti
sbb
cs
stos
pop
pop
xchg
ret
or
adcb
mov
ret
cmp
cmpsl
push
lods
cmp
enter
aas
pop
fcoml
jae
jl
dec
aaa
push
mov
clc
mov
sahf
dec
addb
pop
movsb
mov
pop
dec
xor
repnz
dec
cmp
xor
ss
aaa
icebp
insl
add
or
in
movsb
sub
mov
sbbl
push
shr
into
rolb
fwait
and
lock
pop
loopne
jb
mov
jo
pop
enter
mov
movsb
add
add
pop
mov
fstps
xchg
stc
mov
add
add
add
pop
fs
mov
arpl
dec
and
mov
lahf
push
ljmp
in
test
jnp
cmp
outsl
nop
pop
mov
leave
pop
sbb
scas
arpl
mov
mov
addb
add
sahf
mov
adc
stos
incl
cmp
repz
leave
dec
sbb
in
stc
mov
in
and
adc
std
and
sbb
xchg
dec
loop
mov
mov
add
fidivs
add
cmp
xchg
ret
test
push
inc
stos
ficoml
push
mov
sbb
inc
popf
xchg
std
inc
insl
test
add
mov
int3
popa
mov
aam
ret
movsb
push
and
movsb
sbb
pop
mov
shl
xchg
scas
xor
cmp
mov
lahf
movsl
es
dec
adc
lea
stc
push
cmc
lods
lahf
sbbb
push
in
add
add
repnz
movsb
jle
arpl
pop
cmp
add
add
test
mov
div
test
lahf
mov
cmpsl
insl
repnz
dec
sti
mov
xor
ljmp
mov
movsb
cmpsl
std
mov
sbb
cmc
lods
push
aaa
cmp
mov
dec
shr
mov
cmp
mov
gs
sbb
cltd
cmp
lods
lock
bound
mov
sahf
adc
xchg
fwait
test
shll
mov
cli
dec
inc
rclb
cmp
xchg
int3
ljmp
or
inc
popa
jge
enter
cmp
mov
jmp
lds
out
daa
add
push
popf
jmp
outsl
mov
push
mov
sub
out
cmp
not
dec
aas
pop
or
aas
sub
mov
pusha
xor
mov
aam
mov
cld
add
out
push
cmp
sti
lahf
in
xchg
sahf
xchg
jp
mov
stos
sub
stos
out
jmp
sub
dec
sub
jge
add
add
add
in
and
xor
cmc
pop
xlat
pushf
daa
addr16
and
mov
insb
jl
sub
ret
push
jno
mov
loope
push
cmc
aad
dec
xchg
pop
sti
aam
ja
cmp
shr
imul
aaa
add
xchg
mov
pop
add
jne
push
out
and
cltd
adc
mov
icebp
cs
out
incl
push
xchg
imul
dec
mov
add
inc
fcoms
inc
xor
rcrb
rolb
sbb
popf
jp
inc
cltd
and
adc
daa
xchg
inc
mov
js
push
xchg
pop
pop
sbb
pop
aam
add
outsl
outsl
pop
fimull
xchg
in
push
cmp
fildl
addr16
mov
stos
shll
lret
outsl
negl
dec
push
dec
ret
imul
inc
push
jo
rcl
add
add
mov
fnstenv
int3
push
mov
add
les
mov
push
push
lods
jg
sub
lcall
scas
mov
mov
jb
inc
xchg
movsl
lods
adc
mov
fidivrl
leave
addr16
pop
mov
dec
sbb
aas
shll
inc
cs
xchg
int3
imul
loop
rorl
out
stos
test
cmp
iret
es
or
inc
rcrl
stos
sbb
xor
pmaxub
add
popa
fbstp
rcrb
pop
jb
inc
sub
dec
enter
mov
add
mov
adcb
das
loop
sbb
pop
sub
mov
rcll
and
das
mov
cli
lock
out
lcall
pusha
mov
jne
es
mov
and
testb
mov
dec
inc
adc
lcall
add
repnz
cmpsl
push
data16
rol
pop
imul
add
cld
je
jbe
jns
sbb
fwait
dec
push
inc
mov
add
add
push
fcoml
cltd
xchg
mov
mov
fucom
popa
rcll
mov
clc
sub
cld
cwtl
fchs
inc
mov
mov
stc
or
xor
inc
jle
add
sbb
js
daa
sahf
out
jle
sbb
mov
pop
out
cld
and
imul
and
sbb
adc
mov
mov
push
xchg
test
out
movsb
jne
repz
xchg
fisubl
imul
or
mov
inc
into
rolb
jae
nop
icebp
lods
jae
mov
mov
sbb
fdivrs
ret
outsl
outsl
push
mov
sub
testb
xchg
or
jl
xchg
mov
inc
sbb
cmpsb
fisubrl
adc
mov
sbb
out
hlt
popf
inc
jge
imul
xchg
mov
movsl
movsl
test
jg
and
pcmpeqw
push
push
push
add
add
cltd
jmp
fildl
or
inc
adc
add
add
pop
arpl
lret
loope
stc
nop
popa
push
aam
push
cmpsb
dec
jl
test
adc
inc
stos
add
fistps
jbe
xchg
xchg
clc
in
mov
pusha
clc
mov
pop
pop
jl
pop
rolb
mov
mov
repz
clc
sti
outsl
ret
mov
pop
dec
or
fcmovnbe
arpl
xor
repz
push
mov
fdivl
pop
pusha
jns
jge
sbb
faddp
insb
push
cmp
insl
out
fistl
in
mov
imul
pop
sub
cmpsl
add
or
fsubrl
push
mov
push
icebp
adc
aad
push
inc
push
adc
loop
mov
inc
pop
xor
fdivrl
dec
in
and
cmpb
inc
jmp
sub
fstl
xlat
push
shrl
inc
aaa
int
mov
sub
int
add
add
push
jg
dec
xchg
dec
jge
xchg
icebp
shrb
add
mov
gs
les
andb
das
loope
cmc
pusha
repz
dec
lds
in
popa
pusha
bound
mov
mov
inc
xchg
orl
stos
test
or
jp
pop
mov
outsl
jl
inc
daa
repz
outsb
add
jecxz
ds
xor
jbe
xor
push
fwait
and
repnz
dec
or
sbb
ficoml
cmp
shll
into
adc
sub
sbb
lods
sub
lret
xor
and
nop
cmp
jns
xor
orl
adc
fildl
mov
and
or
sub
jle
jno
sbb
lret
cmc
in
test
lds
mov
psrlq
sub
or
lea
and
xor
jns
mov
adc
adc
insl
mov
iret
mov
fucomip
push
insb
xor
mov
imul
add
fadds
and
cltd
clc
push
sub
nop
cli
mov
pop
push
xchg
fildll
inc
fucomi
mov
mov
ljmp
cmp
adc
jecxz
dec
xor
movl
jns
xor
cmp
test
ja
pop
add
xchg
push
jne
sbb
xchg
repnz
dec
sbb
inc
adc
scas
and
sub
xor
ficoml
enter
fwait
call
fmuls
jmp
mov
or
shll
out
addl
pop
and
mov
xchg
mov
scas
fldt
push
xor
data16
xorl
sahf
hlt
mov
mov
mov
push
pop
lahf
cmp
nop
popa
ljmp
pop
test
or
in
push
add
sbb
xchg
jno
jecxz
stos
push
fstpt
sbb
lds
je
cmc
push
sub
mov
add
imul
dec
out
iret
jmp
aas
in
push
movsw
scas
dec
addr16
add
ss
movl
jo
mov
cli
xchg
fcmovu
lcall
xchg
cwtl
adc
cmp
jge
loopne
out
push
jmp
sbb
jnp
and
mov
sbb
jo
jg
lods
sti
rorl
ret
pop
xor
testl
push
test
add
js
jecxz
pop
bound
lcall
sbb
stos
stos
popl
or
mov
push
stos
xor
sbb
cmpsl
call
pop
adc
decb
ret
imul
fwait
adc
or
out
mov
pushf
cltd
jp
or
fstpl
cmp
bound
outsl
shll
cmp
aaa
push
pop
lret
bound
sbb
cltd
push
cmp
and
pop
hlt
pushf
pop
shl
pop
lcall
test
mov
lcall
xor
data16
add
std
cmpsb
pop
dec
sub
sub
imul
add
mov
pop
inc
mov
mov
push
jne
sbb
cmp
int3
pop
fisttpll
sub
xor
lret
imul
inc
mov
jns
add
pop
je
sbb
ja
daa
mov
sub
xorl
xor
inc
iret
enter
cmp
mov
inc
push
and
imul
cmp
ds
mov
jae
xchg
sti
and
inc
jo
fistpl
jae
dec
xor
adc
xchg
xchg
cltd
mov
pop
aas
push
pop
in
jo
xlat
cmpsl
pop
repz
sbb
cmp
pop
mov
cwtl
xor
xor
fisubrs
xor
add
test
xchg
xchg
mov
jmp
jg
jo
je
in
inc
sbb
jmp
jae
cltd
sti
mov
loop
int3
xchg
aam
rorl
in
lods
imul
neg
std
sub
dec
sbb
aam
add
add
or
sbb
loope
icebp
push
mov
movsl
nop
push
cltd
loopne
mov
or
xchg
test
lods
stos
arpl
mov
fnstenv
jne
mov
jecxz
dec
pop
addr16
movsl
sub
jae
repz
pusha
mov
bound
inc
js
push
jae
fdivrl
pop
mov
andl
das
data16
xchg
cwtl
mov
cwtl
insl
outsl
jne
pop
dec
into
cmpl
insb
xor
hlt
or
sbb
lret
andl
jl
mov
scas
test
xor
outsl
cmp
test
pop
insl
aas
mov
pop
pop
push
and
cli
inc
sub
ret
inc
xor
jmp
fisttps
cmp
xor
nop
xor
ljmp
rcl
cmp
in
int3
sbb
shrb
faddl
mov
addr16
into
xchg
shl
divl
rcll
pop
xchg
pop
jo
jmp
cwtl
add
add
cs
xor
cltd
movsl
push
cmovno
insl
add
add
dec
pop
in
sbb
andl
dec
push
scas
add
add
incb
pop
loope
mov
xor
xor
iret
sub
jmp
or
or
mov
push
sbb
stos
pusha
test
xor
enter
sub
push
push
push
je
inc
stc
sbb
sub
insb
pop
shl
popf
xor
loope
add
and
cli
sbb
mov
in
xchg
pop
and
and
cli
enter
and
mov
push
dec
clc
or
pop
stos
popa
lods
push
shll
pop
outsb
mov
data16
jbe
enter
push
repz
inc
cmc
fisubl
int
adc
test
icebp
xchg
nop
inc
add
sbb
loope
add
sub
cwtl
aad
outsb
add
dec
outsb
sub
dec
jae
fs
cmp
fisttpl
or
into
loop
cmp
add
ja
out
sbb
pop
push
fisubrs
add
das
add
movsl
xchg
mov
inc
insb
pop
sub
or
xchg
mov
jns
shl
ror
mov
or
lock
leave
or
jp
sti
icebp
in
push
fistl
leave
jne
inc
cltd
ret
lret
clc
or
and
and
push
or
xchg
push
jp
enter
push
and
jecxz
inc
cwtl
paddusb
add
shll
inc
into
rcrb
nop
int3
outsb
adc
pusha
fisubl
fisttpll
pop
leave
movd
pop
loop
movsb
push
popf
inc
sub
lods
sub
push
test
mov
outsb
in
loop
xchg
icebp
cmp
cmpsb
mov
sti
rcr
popf
test
jge
sub
enter
mov
and
repnz
xor
jle
fimuls
sub
aaa
lods
das
dec
les
mov
push
inc
xchg
jae
xor
ds
in
xor
shll
inc
fistl
lods
rcl
sub
adc
and
add
add
sub
ja
mov
dec
push
shl
add
add
push
mov
mov
repz
sbb
mov
lods
push
mov
mov
sbb
inc
jns
jle
mov
popl
push
mov
rolb
fidivrs
imul
add
mov
or
add
leave
int
push
xchg
push
aas
jecxz
mov
lods
stos
xchg
add
sub
dec
mov
jg
rorb
ret
sub
subl
jb
out
pop
mov
adc
cmc
testl
mov
jb
adc
cmp
ljmp
aam
sbb
rorb
cmp
lods
pop
jecxz
lods
pop
das
push
in
out
push
inc
dec
jp
adc
add
not
arpl
aas
adc
sub
mov
sub
mov
hlt
imul
xchg
cmc
jecxz
repnz
jl
dec
repnz
sbb
add
add
cmp
jnp
outsl
cmpsb
loopne
sub
psubsb
add
jge
sti
xchg
stos
in
pop
jmp
loop
fwait
ds
fcompl
mov
repnz
lcall
cmpb
ljmp
pusha
cmp
rol
test
insl
call
add
pushf
inc
push
pop
or
inc
fdivrl
cmp
sub
std
popa
pusha
push
int3
scas
popa
mov
xchg
mov
push
sbb
lock
in
sbb
add
data16
xchg
stos
push
dec
cwtl
cld
push
xchg
aam
repnz
xor
fwait
mov
fwait
xchg
sbb
xchg
les
add
mov
sbb
mov
ja
and
bound
add
push
shlb
rol
mov
daa
fsubl
add
dec
je
xchg
adc
or
mov
pusha
fimuls
fs
idivl
imul
fidivs
call
jp
cli
push
inc
adc
loop
je
orl
add
cli
xchg
jle
push
je
push
mov
add
add
pop
lods
int
xchg
cmpl
inc
xor
sbb
je
sub
fsubr
in
push
insb
je
sub
cmp
test
scas
pop
or
pop
inc
test
mov
mov
pusha
pusha
fisttps
add
sbb
cmp
inc
jecxz
pop
xchg
or
sbb
daa
pop
mov
mov
jb
mov
mov
jp
clc
rorl
mov
pop
addr16
add
sub
push
inc
inc
mov
filds
mov
std
ja
cmpsb
popa
jbe
adc
and
fisubs
adc
loopne
insb
lods
out
jecxz
incl
push
jnp
imul
xor
shlb
inc
sub
dec
ret
cs
sub
popf
jo
mov
in
jle
cmpsl
mov
jmp
add
sbb
jge
push
fdivl
popf
int3
adc
jge
push
cmpb
add
add
fwait
jnp
aad
sbb
int
bnd
add
data16
dec
loope
pop
cmp
adc
sub
lret
xorb
xchg
push
or
pop
fisubrl
outsb
xor
ret
in
loopne
mov
push
pop
in
repz
mov
out
push
sub
cmp
pop
cltd
adc
cmp
dec
dec
fsts
dec
pop
in
dec
sub
xchg
lock
mov
cmc
lods
pop
dec
mov
mov
cmp
pop
jp
shll
js
cwtl
mov
rcll
stos
mov
xor
ss
inc
mov
loop
cld
jne
adc
mov
cmp
mov
push
lods
or
sub
popa
push
xchg
nop
lret
int3
leave
xchg
xor
pop
cmp
icebp
sub
mov
inc
sbbl
pop
jne
pop
js
add
adc
jmp
add
xor
call
push
lret
dec
repnz
scas
mov
inc
fwait
insb
call
xchg
pusha
dec
fwait
sar
add
add
add
std
mov
sub
jae
add
mov
ljmp
push
insb
sub
stos
lahf
xor
cwtl
fcom
inc
out
arpl
fsubs
inc
into
aam
loope
sub
je
xorb
scas
jmp
dec
sub
jge
pop
pop
mov
pop
xor
lods
inc
pop
adc
fst
sahf
jle
or
mov
out
fcoml
inc
addr16
popf
mov
pop
int
sub
inc
mov
xchg
ds
adc
movl
jbe
popa
std
push
pop
push
aad
mov
xor
inc
in
inc
inc
mov
pop
xchg
fcompl
pop
xor
inc
mov
sbb
in
in
cmpsb
inc
add
sarb
and
adc
push
iret
xor
sub
and
iret
lret
lahf
int
add
xchg
cmp
aas
and
adc
xor
jnp
cs
loope
jno
test
add
fstl
lret
push
daa
cld
je
add
sbb
lcall
in
fstl
or
sub
scas
mov
push
mov
std
test
jb
and
add
pop
mov
add
mov
mov
scas
jne
sbb
pop
loope
call
push
jns
xchg
outsl
push
xchg
xchg
icebp
fmuls
jl
mov
adc
xorl
xor
js
aaa
and
bound
jge
jo
lahf
push
mov
or
jno
xchg
and
xor
inc
insl
adc
into
and
mov
adcb
cltd
push
jle
sub
ds
xchg
imul
adc
in
sub
pop
cmpsl
mov
sbb
mov
xchg
jno
fsubrl
subl
test
or
out
rorb
push
cmp
pop
outsl
mov
movsb
cmp
pop
addb
lock
gs
add
add
bound
sub
sbb
jbe
add
adc
test
dec
stos
push
sti
push
inc
arpl
mov
fwait
pop
je
mov
call
jns
ret
stc
mov
enter
fimull
out
adc
int
jno
jo
cmp
icebp
adc
xor
aas
ds
into
xchg
aam
mov
pop
ss
popl
fs
sub
xchg
xlat
jbe
clc
mov
imul
mov
les
push
inc
cmp
and
or
insl
push
movsl
inc
sub
push
push
sbb
incb
mov
or
ljmp
mov
int3
in
jae
fidivs
pusha
cwtl
push
push
push
inc
lods
ja
or
jg
dec
inc
push
jb
push
push
push
push
mov
push
sahf
outsl
mov
lahf
and
mov
scas
lock
inc
or
pop
int3
and
fs
stos
adc
lret
hlt
lock
test
add
add
divl
in
sub
push
ja
add
jl
cli
push
das
jo
mov
aad
hlt
push
push
mov
lcall
xchg
repz
inc
icebp
bound
out
cli
shlb
xor
mov
loop
aam
cltd
xor
adc
daa
mov
sti
test
sbb
pop
jl
std
or
jle
sub
mov
push
cmp
mov
cmp
pop
xchg
stc
push
dec
add
idivb
les
fwait
test
mov
sub
jb
sub
mov
mov
aad
sbb
pop
pop
inc
mov
or
int
adc
sbb
pop
sub
adc
fstpl
or
imul
pop
mov
pop
xorb
cmp
in
call
fs
sub
jl
test
mov
out
jnp
data16
cmpsb
push
xchg
sub
shufps
and
add
add
fisubs
mov
mov
ss
or
add
mov
in
aam
xor
popa
push
test
xchg
iret
enter
inc
xchg
fs
iret
enter
pop
adc
xchg
leave
mov
daa
sub
push
add
sar
xchg
dec
test
adc
or
fnsave
lahf
or
js
cmpsb
pushf
test
cmp
ljmp
call
rcr
fwait
cmp
mov
xchg
cmc
sbb
cmp
sbb
stos
and
jns
mov
test
mov
jle
in
aaa
ja
xor
sub
fstl
add
xlat
jmp
and
xlat
lahf
or
addr16
cltd
pusha
inc
daa
xor
das
lea
and
lahf
mov
xchg
imul
fwait
mov
push
and
jp
nop
outsb
mov
popf
xchg
jl
cmpsb
insb
adc
push
cwtl
cmc
or
dec
push
push
pop
xor
xchg
scas
fisttpll
xor
adc
add
add
shlb
mov
pop
jl
scas
adc
add
pop
rorl
jge
inc
arpl
cmc
iret
flds
xchg
mov
js
clc
sbb
inc
xor
inc
in
sarb
int
mov
lret
sti
jne
jmp
ret
in
mov
dec
inc
xchg
and
pop
dec
rorb
pusha
and
cwtl
mov
int3
mov
outsb
or
inc
pop
test
inc
iret
cmpb
aas
push
into
test
fmulp
add
test
mov
rorl
outsl
jecxz
xor
jl
pop
pop
or
mov
enter
cmp
cmp
test
leave
mov
pop
inc
dec
mov
loop
push
out
fisubs
incl
sbb
sbb
dec
pop
aas
pop
or
lret
test
aaa
pop
push
outsb
mov
sbb
div
adc
jne
mov
jbe
mov
stc
or
inc
out
roll
add
orb
ljmp
jl
aaa
call
add
push
xchg
iret
push
fstpl
out
in
dec
lods
movsb
dec
enter
iret
adc
fisubrs
out
in
repnz
insb
cmc
adc
test
inc
insb
inc
jmp
xor
push
inc
push
sbb
cmp
js
leave
and
sub
cli
mov
das
js
lret
mov
movsb
sbb
adc
sub
cld
dec
insl
lods
push
adcb
cwtl
lahf
sti
sarl
insb
xchg
stc
and
fistpll
push
xchg
lea
std
pop
ss
pop
cltd
cmpsl
jns
aaa
rcrb
pop
ds
mov
push
or
cmp
pushf
pop
fidivs
add
aas
imul
cs
into
mov
test
lahf
aaa
mov
xchg
lret
sbb
mov
rep
insl
int3
loop
or
push
dec
rep
mov
push
es
bound
mov
in
xor
jnp
jae
das
xchg
cmpsl
push
xor
pop
add
add
add
jo
ja
std
stos
sbb
ljmp
add
add
xor
shrb
xchg
cmc
imul
cld
cmc
ret
shll
repz
loope
sub
imul
pop
pop
xor
fstl
push
pop
fs
mov
clc
and
inc
or
adc
sub
out
fidivrs
fwait
gs
std
es
out
ret
mov
out
mov
sub
popa
out
movsb
out
jb
and
mov
cmp
test
mov
mov
out
or
mov
mul
scas
iret
fnstenv
enter
jo
sbb
sub
sub
mov
xor
lock
adc
sbb
outsl
pop
add
test
push
mov
push
mov
test
mov
mov
fs
sbb
shlb
fistps
fsts
dec
push
and
jns
push
data16
adc
repnz
addb
insl
inc
add
add
cmpsb
push
sbb
je
pop
jl
add
xor
push
push
xchg
push
jns
repnz
pop
pop
cmp
jl
cmp
cmp
and
mov
dec
mov
dec
mov
jno
and
jns
icebp
rcrl
add
mov
lret
dec
jecxz
mov
rcll
lret
or
rol
scas
jo
dec
mov
xchg
add
call
xchg
loop
mov
cmc
jl
cld
adc
ja
push
cmpsl
lret
sub
iret
push
cmp
pop
inc
and
ret
daa
jecxz
pop
in
mov
mov
add
pop
mov
movsl
dec
cmp
insb
mov
cmp
shlb
mov
sub
imul
mov
es
ljmp
pop
cld
jge
cmpsb
cmp
mov
call
mov
test
add
xor
cli
mov
xchg
xchg
sti
sbb
add
and
push
xchg
inc
add
hlt
sub
pushl
jl
sbb
pop
sahf
iret
rorb
dec
dec
clc
lock
jle
add
dec
loope
dec
fildll
dec
stos
push
mov
rcrb
test
add
sti
imul
mov
call
sub
sub
add
scas
xor
jecxz
adc
or
fldt
xchg
pop
lret
orb
sbb
or
mov
sub
call
jns
mov
adc
lret
xchg
fidivl
imul
xor
adc
fldcw
pop
fucomi
jns
mov
outsl
shl
call
bound
push
in
out
add
cmp
mov
lods
push
lea
inc
divb
lret
sub
ljmp
stos
fidivrl
jle
shlb
inc
add
loopne,pt
cmp
add
std
test
lcall
icebp
dec
sub
add
movhps
clc
pop
adc
test
fcomp
push
andb
xchg
mov
pop
mov
aaa
pusha
mov
pushf
les
mov
pop
mov
inc
nop
pop
dec
popf
insl
rcrb
stos
pop
faddl
and
xchg
inc
shll
push
nopl
iret
fists
insl
inc
test
shlb
cmpsl
test
ret
mov
repz
add
ficomps
cs
and
jl
repz
test
cmc
inc
sbb
das
ja
daa
push
jge
dec
sbb
je
mov
hlt
add
rcll
pop
push
mov
movsl
icebp
jne
add
xchg
in
sbb
jnp
mov
hlt
fwait
mov
movl
xorb
stos
dec
cmp
dec
pop
xchg
int
enter
sahf
fldt
fmuls
pop
sbb
movsb
cmp
ja
lds
jle
pop
mov
sub
aaa
add
add
xchg
xchg
jns
jmp
mov
pop
jg,pn
add
xor
inc
mov
and
pop
adc
push
enter
ret
mov
loope
call
iret
sbb
xor
fwait
arpl
ja
movsb
cli
add
sub
mov
mov
cmp
pop
aam
data16
mov
rcrl
mov
lret
sbb
dec
pusha
push
xchg
inc
ret
fcoms
or
arpl
pop
add
imull
out
jmp
int
inc
fdivl
and
mov
andb
or
aas
push
mov
mov
mov
pop
mov
into
rcr
sub
scas
mov
popf
gs
inc
ret
xchg
cmp
sarb
mov
addb
sahf
pop
les
dec
or
dec
xchg
sub
adc
mov
ljmp
jmp
ss
mov
sbb
fldl
icebp
bound
add
add
lcall
je
pop
lret
add
add
fmull
mov
dec
popf
xchg
test
pop
sbb
add
cmc
inc
or
xor
adc
mov
pop
xlat
xlat
adc
js
hlt
pushf
lods
sub
stos
jne
in
out
mov
xchg
aad
fidivrs
cmpsb
mov
rcrl
sbb
cltd
mov
ret
mov
push
dec
inc
pop
test
fisubl
jle
ss
sub
jbe
lret
rorb
or
mov
push
adc
push
clc
xchg
test
les
ss
mov
push
sbb
arpl
jo
sbb
jle
es
stmxcsr
cmp
das
xor
adc
xor
out
pop
jne
imul
lret
bound
enter
in
repnz
cltd
pop
andb
aam
fstl
test
gs
add
ss
xor
mov
xor
ret
lock
add
mov
idiv
jne
iret
or
aam
addl
add
push
sbb
xor
mov
shlb
imul
repz
jle
xchg
jno
adc
sar
mov
std
add
cmp
xorb
test
pop
mov
dec
dec
addr16
mov
test
mov
mov
out
sub
pop
aaa
mov
sub
push
cmpl
mov
and
leave
ret
clc
push
lea
dec
mov
sbb
mov
imul
fisubl
and
roll
and
xchg
leave
mov
in
cmp
hlt
push
sbb
mov
mov
fsubl
or
and
and
notb
andb
inc
bsf
jl
mov
xor
mov
mov
fsubp
adc
fsubs
mov
cwtl
add
loope
jmp
adc
add
xchg
pushl
sub
xchg
repz
cmp
add
add
sub
das
iret
lret
ds
mov
sbb
insl
ja
in
fstp
xor
cld
jle
sbb
dec
mov
mov
sbb
sbb
sbb
mov
out
shll
addr16
xor
stos
stos
cmp
cli
nop
in
xor
loope
add
stos
mov
jne
js,pn
sar
jp
sbb
cmpsb
push
mov
mov
jmp
rcrb
lahf
jp
or
push
xchg
test
add
push
or
jg
mov
sbb
xor
ljmp
xchg
je
or
xchg
loopne
data16
inc
inc
pushf
mov
stos
ss
gs
pop
jg
xchg
in
lods
mov
cmp
out
sub
xor
xlat
stc
ret
lahf
dec
int
or
dec
imul
test
loope
aaa
mov
stc
mov
popf
cli
outsl
pushf
subl
mov
cmpsl
cmp
or
pop
add
add
sti
iret
ss
push
jno
adc
inc
addl
add
mov
and
cmp
xchg
xchg
fstpt
aam
or
fs
loope
mov
add
inc
xchg
jmp
jle
out
ffreep
mov
std
sub
mov
outsb
xor
stc
cltd
xchg
mov
sub
fcmovbe
mov
push
repz
sub
clc
pop
icebp
jp
arpl
imul
mov
mov
and
jge
xlat
fldlg2
mov
mov
jle
push
mov
mov
inc
jmp
fistpll
int
ret
fists
sbb
clc
inc
xor
mov
jnp
loopne
jnp
out
and
int
sbb
adcl
fisubs
lret
cltd
sbb
out
push
add
andb
movsb
xor
dec
ret
mov
insb
ret
ljmp
xchg
mov
mov
mov
test
push
movsb
pop
int
xchg
jl,pn
fiaddl
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
inc
ret
add
add
inc
icebp
mov
mov
mov
lock
shl
and
loopne
mov
movsl
sbb
sarl
pop
inc
or
cwtl
roll
out
push
xchg
and
xchg
mov
stos
stc
add
imulb
jns
outsb
daa
mov
pop
test
mov
xchg
pop
test
xchg
or
cltd
xchg
cwtl
jecxz
aaa
jb
out
mov
daa
dec
arpl
scas
xor
loope
insl
fs
add
outsb
cmc
je
inc
sub
fwait
ds
test
or
fcmovbe
mov
test
iret
push
adc
and
test
leave
jne
mov
repz
jle
add
and
or
sarb
mov
xor
es
sbb
enter
dec
inc
std
das
pop
xor
mov
sub
cmp
arpl
call
sbb
das
sbb
xchg
rcr
sbb
ret
add
mov
mov
pushf
pusha
xor
test
add
fscale
ret
dec
imul
xor
jno
push
testb
or
data16
call
mov
cmp
es
lahf
jg
or
mov
inc
test
test
pop
xchg
and
arpl
mov
adc
or
cmpb
out
mov
jmp
in
inc
jp
mov
xchg
in
mov
mov
aad
movsb
pop
shlb
mov
mov
and
hlt
xorl
or
mov
test
jge
daa
push
cmc
loopne
lea
jae
jne
movsl
daa
push
pop
insl
cmp
das
inc
dec
add
stos
jecxz
imul
out
push
or
ja
adc
pop
and
outsl
test
inc
lcall
addr16
jne
dec
imul
into
es
pop
mov
ss
mov
idivl
adc
stos
adc
test
lock
jp
mov
add
add
pop
test
ljmp
lock
xchg
jns
scas
sbb
add
add
xor
fs
inc
xchg
in
push
bnd
pushf
jbe
into
inc
loopne
mov
dec
test
ljmp
add
addl
fisubrs
sbb
test
fnstenv
scas
mov
or
pop
lods
loopne
ret
fwait
repnz
lods
mov
push
enter
mov
mov
lahf
pop
jg
xchg
lods
and
cmp
ss
pop
test
adc
sub
push
fadd
mov
dec
or
outsb
flds
lahf
shll
or
mov
adc
dec
mov
xchg
pop
push
mov
sub
addr16
adc
movsl
xchg
aad
outsb
cld
sub
add
insl
mov
mov
in
roll
push
or
fisubrs
jo
test
bound
or
push
and
mov
add
imul
push
jnp
sbb
push
xor
dec
push
push
push
xchg
add
and
es
fdivl
mov
fdivr
ja
cmp
ja
lret
mov
mov
cli
jae
gs
or
repnz
mov
mov
pop
jae
dec
rorl
js
push
pusha
ss
dec
cltd
sti
dec
dec
bound
or
data16
lds
rcrb
xchg
mov
or
sbb
and
lahf
shll
push
loopne
enter
jg
jmp
inc
loopew
mov
jnp
jmp
add
andl
pop
cli
mov
cmp
std
test
test
repz
es
adc
push
and
mov
stos
pop
xor
mov
sarb
push
cs
vpunpckhwd
pushf
ficoms
ret
daa
repz
mulb
insl
xchg
pop
daa
lods
lret
xchg
adc
mov
lahf
fists
pop
in
dec
pop
or
add
push
aas
or
mov
shrb
fstps
add
add
mov
and
inc
outsl
add
outsb
je
loop
loope
adc
add
imul
xchg
mov
or
add
inc
inc
xchg
nop
in
dec
mov
cmpb
orl
mov
sub
push
xor
cld
or
inc
xor
lret
gs
dec
push
push
hlt
testb
cld
mov
sbb
xor
ss
addr16
out
scas
mov
mov
and
shll
cs
or
inc
xchg
mov
and
shlb
mov
add
and
and
sbb
sbbl
xchg
dec
rcl
repnz
dec
mov
xor
or
jbe
and
sub
loopne
mov
outsb
aad
adc
adc
cltd
add
xchg
jne
cmp
sbb
and
pusha
outsl
jb
in
cmp
cmp
lcall
add
push
outsb
fisubs
test
xchg
loop
mov
add
and
ret
in
bound
push
leave
lcall
out
lcall
inc
dec
test
xor
clc
cmp
push
jg
or
pop
loopne
add
rcr
add
pop
arpl
cmp
dec
outsb
sbb
sbb
pop
xchg
mov
call
push
sbb
pusha
mov
add
pushf
out
push
sub
or
adc
adc
in
jmp
popa
dec
fstl
js
and
rclb
hlt
sbb
xor
fwait
insl
out
push
jmp
mov
les
call
cs
mov
cs
inc
icebp
testb
mov
mov
sbb
push
mov
out
jb
push
or
insb
mov
hlt
enter
out
and
movsb
fldcw
xchg
enter
inc
stc
xchg
cmp
mov
and
aam
sub
int
jle
popa
lret
adc
popf
jmp
pop
movsb
add
add
mov
jns
idiv
mov
add
cmp
cmp
aaa
and
outsl
sbb
xchg
loop
mov
popa
stos
push
jns
lds
popa
sbb
mov
jns
loope
inc
daa
fs
popf
mov
mov
ret
pop
cs
pop
daa
inc
cmp
das
ret
ret
mov
repz
mov
test
loop
aam
xchg
cmp
fisttpl
addl
subl
xchg
mov
xchg
sub
xor
cltd
xlat
mov
test
fs
jl
fstpl
push
xor
push
or
mov
cmp
sahf
jle
push
insb
push
lret
dec
xchg
cmp
or
cmp
xchg
addr16
out
mov
mov
sti
data16
imul
and
scas
shr
adc
sub
out
and
out
cmp
push
lcall
shl
jne
push
icebp
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
cmp
cld
leave
push
add
add
pop
push
dec
mov
push
cli
lds
ret
mov
lea
dec
scas
mov
sub
mov
ret
movsl
xlat
mov
jo
push
mov
jle
bound
ja
or
push
clc
xchg
sbb
jle
imul
cmc
enter
xchg
or
xchg
js
ficoms
loopne
xchg
jecxz
and
inc
std
ret
rorb
push
sbb
pop
lret
xchg
mov
push
shrl
test
out
sti
aas
mov
pop
and
pop
aas
sbb
out
out
mov
ja
xor
ret
les
cmpsb
insl
roll
xchg
jl
rcl
cli
shrl
xchg
insb
cli
icebp
mov
cmpsl
data16
jl
shll
iret
nop
jmp
cld
cmp
stc
pop
mov
xchg
into
loope
divl
fmulp
or
sub
jb
mov
inc
add
add
adc
std
out
ljmp
outsl
mov
add
inc
mov
out
test
push
cmp
pop
daa
shlb
add
inc
out
push
iret
jbe
jne
adc
xor
xor
test
dec
inc
mov
sub
popf
jne
jmp
inc
loop
call
cli
add
mov
push
clc
and
sub
pop
jno
lar
fdivrl
jg
and
mov
xor
add
push
sbbl
popf
or
xchg
fiaddl
mov
inc
dec
in
fbld
mov
sbb
adc
lea
cld
call
pop
data16
pop
add
pop
out
push
ljmp
test
ret
inc
dec
dec
jl
jae
and
test
fidivl
pop
insb
xor
in
mov
and
nop
sub
push
lret
stos
mov
xorb
cmp
jo
out
dec
inc
xor
xor
dec
imul
ret
in
inc
xor
data16
jbe
push
cwtl
test
jae
add
add
mov
icebp
lret
bound
add
shlb
cmp
and
out
adc
pop
xor
xchg
in
fptan
sbb
call
jne
mov
out
clc
sbb
insl
inc
lcall
sbb
stc
push
and
popf
fidivrl
daa
mov
loopne
lahf
cmpsb
pop
in
xor
mov
xchg
jno
addr16
sub
sub
sub
sbb
cmp
jnp
mov
sbb
mov
xchg
pop
cmpsl
mov
cmp
je
jns
sbb
xchg
mov
jae
loopne
mov
popf
jb
jne
jns
xor
into
leave
xchg
cmp
push
jne
call
add
adc
cmpsl
les
sub
sbb
scas
mov
mov
mov
in
cmpsl
ret
gs
cltd
movsl
popa
push
frstor
add
push
cmpsb
xor
jp
sbb
aam
push
pop
jnp
xchg
cmp
xlat
sti
sti
dec
les
add
add
les
fcomps
add
xor
add
add
stc
lock
sub
arpl
xor
cltd
jns
xor
repz
mov
push
cmp
repnz
lcall
lods
push
jp
call
adc
data16
and
add
fwait
pop
push
nop
mov
out
outsb
cmp
xchg
outsl
repnz
push
jno
sbb
dec
xchg
aas
imul
push
sub
loopne
sbb
es
xchg
push
dec
mov
fstpl
and
outsl
jmp
jbe
and
push
dec
hlt
or
inc
repnz
dec
call
pop
fidivs
mov
call
repz
jecxz
xchg
and
adc
mov
out
cmp
mov
aad
xor
jge
lock
stc
jns
aam
clc
mov
arpl
ret
mov
frstor
vorps
loope
mov
pop
and
mov
xor
and
cmpsl
cmpsl
adc
add
add
ljmp
dec
mov
out
jle
add
add
addb
stos
mov
mov
dec
insl
rep
xor
es
sub
add
pop
xchg
pusha
mov
dec
out
es
jl
and
popa
rolb
push
and
sub
pop
adc
xchg
push
cmp
nop
aaa
mov
mov
insb
clc
push
dec
mov
jno
adc
push
daa
jge
or
scas
addr16
or
and
cltd
cmp
pop
les
shl
xchg
xor
shrb
ficompl
in
daa
push
xsha256
cmpsb
roll
mov
cmpsb
cmp
ja
negb
lcall
dec
inc
mov
es
jge
cwtl
adc
cmpsl
adc
lock
pushl
ljmp
cmp
pop
jo
mov
lcall
jl
frstor
aaa
sbb
fwait
cmp
jno
ja
dec
sbb
cmpl
add
aaa
shlb
cmc
div
testl
hlt
adcl
add
pop
mov
jmp
jg
mov
cmp
mov
cmc
jnp
sub
imul
mov
mov
or
loope
and
or
pop
das
outsb
jae
pop
movsb
addb
stos
notb
hlt
sbb
loop
cltd
add
cmp
jge
push
negl
jle
jp
shlb
mov
sub
cmp
aad
sahf
add
ret
inc
loope
lcall
stos
push
inc
jb
enter
or
negb
ds
dec
int
pop
or
shrl
test
xor
lret
push
push
addr16
into
mov
cmpsb
lret
cwtl
je
adc
outsl
hlt
or
lock
and
in
arpl
es
lds
imul
pushf
fnsave
inc
inc
push
sub
lods
mov
jp
or
adcb
jle
movsb
pushf
xchg
imul
mov
ja
lea
pusha
les
test
add
pop
push
nop
push
sahf
rcr
pop
adcb
sbb
les
add
add
jecxz
mov
mov
mov
cmp
mov
sbb
hlt
ja
fpatan
ret
jg
dec
push
add
push
or
mov
dec
xor
nop
push
fwait
adc
add
mov
xlat
and
shlb
push
xor
out
xchg
dec
test
sub
adcb
pop
lds
cld
xchg
arpl
xchg
ret
jecxz
dec
pop
lcall
cmp
cmp
inc
and
adc
inc
push
gs
xor
add
mov
xchg
pusha
cmpsb
mov
mov
sub
lea
adc
mov
test
adc
sarb
mov
fadd
mov
jnp
and
jge
arpl
dec
push
dec
test
lahf
ret
mov
xchg
out
adc
repz
in
out
in
cmp
add
xlat
in
and
cmp
adc
lret
add
add
arpl
cmpsb
jcxz
fimull
lea
add
pop
hlt
xchg
mov
rcrl
adc
jae
mov
mov
sub
push
int3
jge
stos
pop
popa
mov
out
inc
mov
push
add
inc
adc
das
jmp
adc
loop
cmp
push
imull
sbb
pusha
repnz
shrb
inc
adc
adc
testb
loopne
pop
inc
mov
cmp
pop
or
push
popf
jmp
mov
les
or
adc
subps
imul
sub
jbe
fcmove
cmp
movsb
lock
out
sti
ret
xchg
xor
and
mov
in
jno
cltd
in
sub
xor
mov
cmc
aaa
cmp
or
mov
std
lods
arpl
xor
dec
fmuls
cmp
shlb
out
sti
mul
sub
sti
lahf
add
xchg
pop
push
sbb
add
clc
jnp
jg
in
cli
enter
sbb
xchg
add
add
sbb
pop
xchg
pop
jnp
addl
jbe
fs
jne
push
pushf
movl
movsl
rorl
mov
sub
cmovge
or
fstl
aas
imul
fsubl
sahf
jbe
aad
jne
stos
faddl
cmpsb
pop
pop
cmc
mov
pop
mov
mov
mov
out
xor
lret
imul
add
inc
adc
jns
jbe
popa
cmp
out
mov
jp
xor
mov
addl
push
xor
ss
out
lcall
sarb
in
push
mov
dec
add
movsl
or
loope
pop
in
sti
popf
outsb
pop
xchg
rolb
sub
shl
dec
or
push
stos
ds
idivb
pop
stc
cmp
test
nop
stos
aad
test
inc
lds
leave
jae
shrb
pop
xor
fstl
add
ljmp
cld
gs
mov
xchg
xchg
add
add
inc
jl
pop
outsb
xchg
fnstcw
sahf
and
lock
xchg
popf
push
data16
and
or
sti
pop
pop
outsl
gs
add
jecxz
das
dec
pushl
cmp
test
pop
dec
mov
inc
lea
push
push
push
leave
mov
mov
imul
rcr
xor
les
xchg
adc
movb
and
jg
dec
and
push
ret
imul
sub
jge
call
xchg
clc
mov
lods
cmp
shll
gs
jge
mov
dec
arpl
xchg
and
insl
dec
into
mov
movsb
mov
mov
loopne
cs
sub
cmc
sbb
mov
in
jnp
imul
add
push
xchg
push
cmpsb
sub
mov
pop
xor
pop
call
mov
add
jl
sar
std
jle
pop
popf
scas
adc
xchg
add
add
dec
and
mov
add
sbbb
xor
xor
jmp
pusha
idiv
mov
pop
pop
fmull
mov
and
xchg
cmc
lods
cmp
int3
repnz
and
add
add
std
pop
inc
js
jns
rorb
add
add
sbb
js
mov
jge
iret
cld
sub
mov
jge
bound
leave
and
ret
inc
stos
xchg
mov
dec
cwtl
adc
adc
push
push
or
adc
mov
adc
int
cmpsl
mov
pop
adc
aad
dec
jg
stc
xchg
inc
sahf
scas
jae
sub
in
pop
lcall
fcoms
and
repz
inc
sti
std
loope
or
outsb
in
xchg
rolb
js
out
cmp
loope
lods
mov
dec
scas
lret
clc
sahf
dec
push
mov
and
imul
in
shlb
add
add
cwtl
or
stos
xchg
cmp
in
stos
mov
sub
add
add
mov
xlat
inc
xor
aad
push
cmpsl
sub
std
push
xor
lcall
cmp
repz
lret
mov
cmp
ret
icebp
negb
jle
add
xchg
xchg
jne
jns
or
push
shrb
add
fsubrl
dec
and
and
push
jbe
and
lea
stc
data16
cmp
cmp
mov
int3
cmp
and
arpl
mov
push
test
inc
pop
mov
xchg
dec
lods
insb
mov
mov
jge
add
in
jge
cmpsl
sub
push
fldenv
or
jo
sbb
ja
in
cmp
mov
pop
pop
incb
in
repz
lret
xchg
mov
sub
imul
mov
rorb
rorl
add
add
outsl
sti
mov
mov
mov
xchg
add
add
sub
adc
fdivrl
loop
jle
cmp
cmp
ss
and
ror
je
and
jne
push
xor
and
pusha
aam
fmull
xlat
clc
shlb
out
sub
popf
in
fs
lret
stos
sbb
push
xchg
scas
fimull
jno
fists
jae
xchg
mov
rcrl
es
addb
push
pop
mov
movsb
sbb
lods
sub
out
xor
std
pop
sub
pop
mov
fwait
je
add
mov
sbb
cmpsl
push
rol
das
call
dec
pop
xchg
push
ljmp
or
dec
adc
mov
and
and
and
sbb
mov
mov
and
mov
adcl
xchg
adc
mov
jp
ss
cli
repz
shlb
push
xchg
mov
add
dec
std
out
xlat
aas
dec
sbb
or
stos
cwtl
add
add
inc
enter
iret
and
and
notl
cmp
cld
sub
push
arpl
push
leave
lods
jl
ss
add
rcrl
dec
sub
arpl
dec
dec
sti
mov
andb
daa
xor
mov
test
inc
jae
pusha
and
enter
daa
mov
movsb
notl
jmp
out
fsubs
stos
push
and
into
inc
out
and
push
cmpsb
xlat
sbb
xor
pop
aas
adc
out
ret
sbb
pop
sbb
jne
loopne
mov
das
jbe
cmc
cltd
jnp
jmp
cmp
lea
jg
cmp
adc
mov
fstpt
lret
icebp
shll
and
js
cmp
in
movsb
aad
arpl
lock
jnp
addr16
pop
push
cs
sbb
cmpsl
mov
sub
arpl
inc
jne
cmp
leave
sub
inc
ret
adc
lahf
repz
mov
xchg
push
outsb
in
xor
lea
add
add
mov
mov
jmp
test
scas
mov
add
add
mov
leave
cmp
int
mov
loope
xchg
out
xor
jp
mov
xlat
test
cwtl
hlt
cmpsl
xor
lret
sub
inc
cs
js
pusha
shll
movsl
mov
iret
sub
lret
xchg
mov
std
rcrl
xlat
sub
jb
sub
mov
inc
in
and
adc
hlt
iret
lcall
adcb
mov
test
and
pop
addl
in
pushl
lret
mov
inc
cmp
xor
scas
sbb
mov
iret
and
stc
repnz
push
xor
clc
and
lds
or
mov
cli
outsl
dec
jge
cltd
mov
shl
sbb
iret
or
gs
stos
pop
cmp
pop
into
add
and
out
inc
ljmp
and
xor
xchg
push
js
jle
fwait
movsl
aas
inc
push
mov
nop
mov
testl
mov
add
lret
sbbl
popl
jmp
add
cmpsb
and
sbb
jmp
and
inc
std
pop
cltd
leave
sbb
cmpsb
inc
cmp
sub
mov
add
repnz
into
add
push
pushf
mov
adc
push
cmp
pop
mov
fbstp
cmp
cmp
push
xchg
and
mov
lea
xor
repnz
mov
test
imul
mov
aam
push
inc
jne
xor
out
xor
push
lcall
loop
cmp
in
mov
out
jmp
loope
xor
xor
dec
sub
xchg
push
mov
enter
sub
push
test
movsb
fdivs
outsl
lds
push
ja
adc
pop
push
aam
lahf
ss
adc
flds
inc
push
xor
xchg
repz
push
fbld
dec
std
enter
jne
sbb
mov
dec
imull
daa
push
addl
dec
push
add
add
imul
movsb
and
xchg
pop
sbb
mov
add
add
fadds
sub
mov
lcall
fimull
rcr
or
xchg
es
jae
inc
sti
lret
push
loop
es
ret
rcrl
adc
stos
mov
stc
inc
xor
xchg
mov
inc
sub
sub
clc
lea
mov
imul
mov
repnz
jmp
mov
lret
mov
int
mov
dec
hlt
push
lret
push
enter
mov
cmp
test
test
scas
cs
mov
fwait
mov
push
cmp
cmp
loopne
adc
xchg
lods
das
out
sub
sub
mov
inc
sbb
clc
sbb
inc
faddp
fsubrp
shrl
xchg
ret
js
call
jg
push
sarb
jb
push
sbb
pop
pop
lcall
imul
mov
mov
mov
push
add
add
mov
sub
lahf
mov
out
push
mov
add
add
cmp
mov
mov
in
fwait
sar
addr16
xchg
sub
rcll
nop
out
push
cmp
mov
adc
roll
imul
insb
adc
ret
sbb
icebp
pop
out
testb
and
ret
std
xlat
cwtl
arpl
ja
jno
mov
dec
sub
push
jle
mov
mov
inc
dec
cmc
add
in
push
in
int
iret
add
shrb
scas
fwait
push
and
imul
pop
mov
and
in
adc
bound
fnclex
neg
sub
cmc
jnp
arpl
aam
jg
ds
rolb
push
iret
movsb
jecxz
inc
sbb
xchg
ficoms
js
jbe
outsl
xor
loope
or
loopne
rorl
loope
pop
idiv
bsf
mov
and
out
xor
dec
push
ljmp
lock
push
adc
mov
add
add
ja
out
inc
sub
or
dec
in
or
popf
add
add
test
dec
pop
cmp
scas
dec
mov
in
pop
pop
mov
mov
and
aas
cmp
stos
icebp
aas
daa
stos
cmp
out
cmpsl
mov
cld
sbbl
mov
icebp
inc
insl
sub
icebp
add
std
xlat
or
call
in
into
adc
jnp
add
icebp
push
add
cld
xor
mov
and
int3
push
xor
push
push
adc
fwait
cmp
sbb
push
and
lret
mov
sbb
cmp
push
sahf
push
xlat
aam
cmp
in
pop
clc
fisubrl
sub
dec
je
sbb
dec
inc
add
mov
push
and
clc
insl
mov
out
imul
jmp
fwait
lcall
dec
adc
or
fdivrs
push
mov
stos
mov
add
loop
test
mov
cld
mov
leave
sahf
add
add
fidivrl
sbb
mov
lea
outsl
jae
fs
xchg
nop
mov
pusha
daa
ja
jle
pop
fucomp
mov
and
gs
jne
or
lock
xor
les
jle
cmovno
enter
and
addr16
push
in
stc
repnz
repnz
pop
in
jnp
fwait
inc
xchg
pusha
sbb
or
pop
or
xor
loop
mov
hlt
aad
fidivl
dec
bound
cmp
fstpt
pop
adc
dec
cwtl
xor
out
push
add
popl
call
push
sbb
push
xchg
pusha
xchg
daa
popf
adc
fisubs
inc
loopne
cmpsb
pop
cmc
add
inc
fs
inc
aad
out
pop
jg
std
out
inc
test
es
rcrl
lcall
sbb
lods
mov
pop
aad
dec
pushf
add
mov
arpl
leave
ljmp
outsb
fiadds
add
or
lcall
rcll
inc
into
lahf
add
add
push
je
enter
loop
inc
sbb
inc
outsl
lret
xor
jne
out
fisttps
sbb
add
in
adc
enter
aad
jnp
add
out
mov
outsb
into
repz
push
mov
roll
test
cmp
in
xor
pop
lods
add
or
push
add
sub
mov
pop
cs
loope
jp
ret
gs
addr16
pop
out
mov
and
and
jle
ret
sbb
dec
jb
cmpsl
dec
daa
lret
mov
or
add
push
or
mull
dec
icebp
add
cmp
dec
pusha
jne
xor
test
adc
add
and
inc
sub
idiv
lret
mov
jp
push
lds
faddl
and
xchg
lcall
cld
mov
shr
loop
add
add
mov
inc
inc
add
mov
add
shrb
push
aad
sub
lret
mov
add
out
cmpsl
sub
xor
pop
mov
mov
or
pop
dec
mov
adc
pushw
cwtl
fmull
jae
push
mov
ss
mov
int3
inc
add
insb
repnz
inc
inc
div
mov
int3
mov
cltd
cmp
je
adc
subl
sbb
cli
adc
inc
pop
add
sarb
or
jle
cmp
stos
enter
loope
and
out
test
pop
pusha
sub
sbb
push
jae
jnp
movups
mov
in
arpl
arpl
std
stc
stos
dec
sub
lods
jmp
jne
and
xchg
xchg
mov
mov
push
aas
sub
mov
inc
pop
sbb
repnz
cmp
adc
repz
xor
push
scas
push
cmp
aad
scas
inc
lea
mov
pop
mov
add
add
std
inc
mov
pop
dec
fsubs
add
add
dec
xchg
lcall
nop
ss
in
sub
inc
jg
adc
inc
pop
in
push
mov
inc
mov
test
and
jmp
mov
bound
daa
out
cmp
pop
cltd
mov
es
fwait
lcall
js
and
xorb
jle
add
mov
ret
inc
mull
and
sbb
insl
std
pusha
mov
enter
mov
xor
adc
movsl
mov
leave
xchg
pop
dec
push
or
jns
push
enter
mov
aas
add
mov
test
loopne
mov
pop
lea
imul
pushf
push
scas
mov
idivb
mov
mov
pop
xor
int
add
dec
sub
jb
inc
into
stos
sarl
sub
popa
fs
jmp
std
mov
ds
xor
mulb
fmull
jmp
add
add
add
inc
fdivl
push
dec
mov
frstor
add
or
clc
decb
xor
xchg
dec
cmp
icebp
rorl
test
inc
test
jle
mov
mov
add
mov
jnp
xor
out
sub
xchg
sub
mov
xor
bound
cmpsl
jbe
push
add
pop
popa
xchg
bound
xor
mov
jbe
sti
sbb
cli
add
les
out
fwait
ljmp
jp
jae
adc
mov
pop
inc
jns
jnp
fwait
scas
bsr
or
pop
xor
add
lods
fistps
pop
movsb
lods
call
mov
and
jns
cmp
cmp
add
pushf
cmpsl
lret
sarb
mov
popf
xor
fmuls
adc
sti
inc
ja
mov
repz
inc
bnd
lods
xchg
mov
mov
inc
dec
mov
push
push
jne
call
add
add
sbb
mov
sbb
sub
loop
add
add
aam
inc
pop
push
sbb
mov
mov
inc
sbb
jae
or
outsl
mov
jne
sbb
movsb
outsl
mov
out
jmp
mov
ss
sbb
inc
lret
sti
scas
es
daa
inc
je
add
inc
sub
cwtl
xor
and
mov
jno
cld
mov
sbb
cmpsl
jne
mov
push
test
inc
outsb
inc
adc
je
rep
in
mov
in
pop
fsubrp
mov
sub
dec
lahf
inc
enter
pop
outsl
pause
mov
cmpsb
shlb
or
rcll
das
jns
dec
insl
jns
push
iret
mov
sbb
mov
add
movsl
sub
les
mov
ljmp
loope
mov
inc
int
push
arpl
mov
test
push
and
int
jmp
fstl
in
incb
add
pop
test
stos
hlt
jmp
cmp
jbe
push
sbb
out
add
add
aam
pusha
dec
mov
imul
jnp
lret
and
in
movsb
cmpsb
dec
sub
pop
xchg
mov
mov
ja
mov
push
jae
addr16
loopne
shlb
or
adc
jge
movsb
pop
mov
arpl
rcrb
les
clc
fs
fcomps
inc
push
test
pop
adc
push
pop
in
into
ljmp
sbb
mov
jo
xchg
mov
cltd
lcall
stc
dec
stos
xchg
mov
jo
insb
mov
scas
or
sahf
cltd
fnstsw
dec
and
dec
arpl
lods
sarl
call
fisubl
test
scas
sub
out
icebp
cmp
mov
adc
ljmp
aam
xchg
and
decb
repz
leave
pop
cmpsb
cmp
lret
mov
push
daa
pop
mov
lds
loope
add
add
out
xlat
out
jg
in
xor
flds
daa
in
movsl
add
add
in
fisubl
popl
in
shrl
xlat
dec
aad
mov
xchg
mov
popl
jge
ja
sarb
mov
cmpl
mov
leave
popa
mov
es
das
or
dec
xchg
aaa
dec
fistpl
dec
cmc
pop
addl
push
inc
inc
pushl
fistpll
ret
and
inc
in
jae
insb
addr16
aas
xor
enter
xor
xchg
pop
xor
adc
sub
into
adc
jge
fstpt
and
mov
test
notb
and
out
or
div
xor
je
xor
dec
pop
mov
loope
into
jbe
push
xchg
into
je
sub
lods
addr16
test
xchg
add
mov
lds
cwtl
add
mov
add
sbb
pop
fbstp
fldl2e
cmp
aam
icebp
cmpsb
add
add
adc
mov
repz
dec
jmp
test
push
xor
adc
lds
fadds
clc
or
fmull
cltd
jle
push
cs
cs
sub
dec
xchg
cld
lds
loope
inc
jne
push
mov
rorl
sub
sbb
xor
cmp
cmp
jp
xchg
and
jmp
push
mov
mov
sub
insl
add
decl
leave
iret
fidivrl
inc
pop
xor
mov
xor
and
xor
or
fcompl
bound
add
out
pop
or
mov
mov
dec
test
aam
jno
adc
adc
pop
rol
dec
xchg
adc
adc
fsubr
pop
fcompl
cmp
loop
rcll
add
add
std
xchg
lock
add
add
mov
fadds
mulb
add
jnp
leave
out
iret
dec
ljmp
push
inc
test
pop
mov
es
jno
lock
mov
pop
push
xchg
je
stc
test
push
mov
or
mov
xor
mov
js
jns
mov
test
addr16
inc
lret
pop
clc
cmp
dec
add
cmc
mov
rorb
sub
enter
adc
xor
idivl
mov
xor
fs
mov
push
call
stos
sub
pop
mov
dec
out
out
into
int3
inc
insl
cmpsb
and
pushl
xchg
jno
add
aas
lcall
mov
mov
sub
test
mov
dec
rorb
jecxz
xchg
bt
xchg
or
xchg
push
aas
pop
data16
sarb
pop
dec
add
pusha
out
mov
mov
and
add
add
mov
push
sti
jmp
push
mov
divb
or
sti
test
add
xor
fstl
cli
xlat
test
dec
out
loop
add
adc
outsb
dec
rcll
pop
in
jge
scas
lahf
cmp
xchg
shlb
dec
pushf
jecxz
bound
insl
js
cmp
imul
mov
out
sbb
in
mov
mov
adc
mov
ss
outsl
pop
std
aam
test
mov
lods
hlt
fstpl
jae
fcmovnbe
sbb
test
shll
push
or
mov
xchg
pmulhw
cmp
jne
xor
mov
insb
cmp
xchg
addb
leave
xchg
insb
push
add
test
movsl
test
out
mov
dec
lret
movsb
push
sub
and
stos
std
jbe
xor
xchg
das
das
scas
xchg
mov
repz
mov
movsb
xor
dec
mov
iret
addr16
push
rorl
test
add
mov
jecxz
lock
ret
stos
add
add
mov
out
xchg
flds
in
les
jp
sbb
mov
nop
sbb
lret
dec
fildll
hlt
or
decl
push
loope
and
jmp
xchg
and
xor
dec
cmp
sub
stos
sahf
mov
mov
inc
adc
mov
sub
arpl
movsl
adc
and
andl
ficoml
dec
out
out
xor
jge,pn
outsl
sub
pop
popf
sbb
jge
out
cmpsb
inc
xchg
mov
lods
lcall
adc
daa
mov
jae
into
pop
cmp
jns
insb
pop
stos
xchg
rcl
testl
or
mov
jbe
arpl
stos
pop
push
js
movsl
sti
jp
pop
push
lds
and
cmc
or
lahf
cmp
push
pop
sub
icebp
jge
sbb
push
xchg
filds
add
mov
cld
mov
leave
push
stos
add
add
mov
adc
jo
or
xchg
dec
das
pop
xchg
lock
bound
pop
mov
ja
mov
out
xchg
xor
std
pop
mov
les
jo
cmpsb
add
inc
sub
in
jmp
sbb
jne
cmp
mov
mov
cmpsl
mov
push
sbb
dec
icebp
mov
sub
mov
mov
ss
cltd
jge
sub
pop
and
dec
cli
mov
pop
mov
mov
sub
and
scas
shlb
repnz
je
loope
cmp
jp
dec
and
mov
clc
xor
ds
lods
and
fs
fidivs
rol
mov
fbstp
pop
and
xor
jp
xchg
sbbl
and
enter
pop
pop
dec
mov
lds
pusha
xchg
jle
inc
insl
pop
mov
sbb
ret
mov
add
mov
dec
das
pop
out
cmc
mov
pop
inc
ds
add
int3
push
lret
icebp
dec
xchg
lahf
xor
scas
popf
stos
daa
pusha
add
and
loop
aas
lock
mov
or
pop
dec
popa
and
std
outsb
clc
mov
lcall
pop
ja
stos
arpl
or
movsb
lret
pop
cs
ds
ljmp
push
pushf
and
cli
sbb
xor
mov
out
stc
mov
sub
cmc
dec
ret
aad
andl
mov
cs
js
pop
cmc
xchg
sahf
cld
pop
in
jns
bound
mov
sub
xchg
dec
mov
iret
rcrl
movsl
ds
insb
mov
fcomps
insb
imul
cmpsl
clc
and
ret
jb
loop
test
add
clc
incb
test
mov
stos
in
cmpsb
or
cmc
jno
xor
xchg
xchg
addl
imul
sbb
into
push
sub
fsub
mov
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
lods
mov
push
shrd
add
or
mov
push
add
iret
or
mov
adc
jp
popf
sub
cli
scas
call
lea
in
adcl
mov
or
in
lods
xor
iret
sbb
cmp
xchg
sub
dec
adc
stos
pusha
mov
imul
movsl
jnp
xchg
or
jns
daa
sahf
push
pop
sub
dec
push
jno
xchg
push
adc
adc
imul
push
mov
cmpsl
pop
sbb
mov
jns
stos
mov
fistpll
or
and
inc
mov
pop
mov
ss
push
pop
xchg
jo
sub
and
inc
adc
dec
push
mov
shll
mov
xor
mulb
fldt
and
js
adc
rolb
xlat
jle
aas
cmpsb
pop
int
pop
add
add
fidivs
loop
ljmp
popf
push
add
add
lds
ja
fiaddl
pop
pop
jno
add
lods
or
dec
lods
mov
cli
cmpsb
lret
popf
mov
sahf
call
leave
fcoms
mov
mov
adc
add
xchg
data16
shl
shll
or
push
lcall
mov
inc
sbb
inc
add
stos
inc
dec
stc
js
xor
hlt
lods
add
and
jp
sbb
sti
lds
xor
mov
subl
mov
loopne
dec
xor
sbbl
cmp
lahf
push
jns
ljmp
das
mov
or
sbb
outsl
popf
icebp
sbb
stc
lods
icebp
sbb
adc
in
into
jo
clc
mov
push
xor
clc
shl
push
repz
xor
pop
aam
jp
push
mov
jecxz
xor
push
icebp
add
add
xchg
jg
jmp
std
mov
pusha
or
scas
add
add
icebp
adc
add
xor
mov
cwtl
jecxz
jo
xor
mov
fnsave
jns
insl
adcb
aaa
mov
test
sbb
dec
jecxz
pop
arpl
repnz
mov
sub
fstl
or
fisubl
std
sahf
mov
and
mov
inc
idivl
and
xchg
push
mov
test
sbb
pop
cmp
push
adc
push
loop
data16
imul
cwtl
out
mov
insb
imul
dec
mov
rcr
ret
inc
sub
push
popa
xchg
lahf
js
inc
or
popa
xor
repz
xor
pop
xchg
sbb
int3
or
addr16
jne
imul
pop
or
sti
mov
xor
pop
out
mov
repz
dec
dec
cmp
out
jge
test
mov
stos
jmp
or
and
add
push
divb
inc
mov
and
add
lcall
xlat
sbb
fwait
lock
push
jo
insl
out
inc
pop
jbe
je
push
arpl
push
mov
xchg
loope,pn
repz
mov
push
lret
xchg
jns
xchg
loope
fsubrs
aaa
xchg
pop
inc
fmuls
aad
add
inc
jb
les
addr16
jl
mov
popf
or
mov
pop
ret
cwtl
adc
fisttpll
out
lds
imul
adc
in
mov
dec
inc
in
cli
pop
pushf
aam
flds
mov
and
push
jo
cmp
out
sbb
popl
pop
sahf
mov
cmpsb
les
pop
adc
mov
add
fdivs
outsl
jbe
sarl
int
cs
adc
xchg
dec
mov
xlat
mov
shl
lods
or
outsb
mov
and
xchg
mov
je
loope
push
and
mov
out
js
test
mov
pusha
xor
add
add
xor
cmp
inc
call
mov
add
andl
mov
xchg
jl
sbb
pusha
mov
addr16
hlt
push
adc
adcb
pop
mov
push
xor
add
xorl
js
pop
out
mov
fcoms
mull
jns
lds
nop
mov
fdivrs
xchg
adc
or
cmp
xchg
xchg
push
sbb
pushf
mov
je
ljmp
in
jl
fnstenv
and
or
rorb
jmp
add
loop
xlat
arpl
inc
dec
mov
push
test
xchg
fwait
insl
mov
push
xor
sbb
jne
dec
and
out
in
sbb
test
sahf
push
mov
pop
scas
add
xor
call
inc
clc
hlt
jge
sti
popl
mov
lods
aad
xor
aam
testb
and
mov
pop
or
mov
ja
sbb
add
add
jp
les
mov
arpl
sub
add
pop
ja
and
push
ret
pop
add
jg
push
pop
jno
xchg
popa
mov
mov
bound
hlt
fwait
sti
xor
sbbb
popf
in
stc
inc
inc
mov
sbb
mov
push
xor
fdivr
push
jp
mov
rcll
popa
xchg
hlt
fs
daa
das
mov
iret
out
mov
pop
xchg
stc
in
xor
rcl
nop
mov
sbb
jae
enter
lods
les
push
mov
lds
dec
jmp
mov
gs
idivl
mov
push
daa
mov
lods
lcall
shrb
cmpsl
mov
stos
mov
lds
mov
xchg
enter
insl
jp
dec
xor
xor
aad
sbb
imul
popa
cmp
xchg
dec
pop
mov
push
cmp
mov
push
inc
xchg
or
lds
add
dec
or
pop
stc
out
push
pop
bound
xor
mov
add
decl
add
mov
add
test
cld
cs
jl
fildll
rcl
loope
pop
or
dec
ficompl
call
fidivrs
mov
sub
iret
jb
cmp
rcll
jbe
arpl
mov
mov
mov
xor
aas
es
repz
call
lret
push
mov
xchg
xlat
adc
mov
cmc
arpl
stos
ss
int3
xrelease
ss
out
das
jae
int
and
ja
aad
add
fistpl
sahf
int3
test
ficoml
mov
push
clc
icebp
cmp
cld
jl
sbbl
or
inc
push
scas
or
xchg
sbb
pushf
pop
inc
inc
mov
mov
push
aas
xlat
sub
cmc
stos
inc
les
idivl
js
sbb
xor
jae
aaa
sub
mov
sbb
incl
add
lds
cli
lcall
push
xor
add
imul
jle
jb
jl
mov
call
fisubrl
jle
je
cmp
or
sbb
enter
xchg
dec
inc
inc
mov
test
leave
sbb
jns
fstpt
es
in
out
sbb
cli
xchg
ljmp
test
nop
pusha
mov
mov
je
ja
mov
fwait
andl
popf
mov
xchg
jb
pusha
std
or
loope
mov
jecxz
xor
les
js
xchg
mov
rcrl
sbb
mov
call
adc
and
sub
add
cmp
lea
popf
mov
xchg
negl
adc
cmp
pop
inc
pop
les
mov
jns
add
arpl
lds
arpl
pop
mov
lahf
xchg
jle
fsin
mov
test
and
pop
adc
xchg
ret
add
mov
add
xorl
insb
lret
mov
aaa
mov
add
imul
mov
fsub
int
lret
sbb
insl
cmp
xlat
daa
iret
push
inc
fstpl
xchg
jg
dec
fidivrl
jp
sti
iret
call
imul
xchg
test
xor
cld
sbb
mov
dec
sbb
call
mov
test
inc
pushf
rolb
cmpsl
jnp
push
out
fistpll
mov
addl
arpl
jno
lock
clc
xchg
inc
xchg
repnz
ficompl
repnz
rcrb
xchg
mov
rol
push
loope
add
dec
xor
mov
sbb
popf
inc
jne
push
jge
jl
adc
jnp
mov
pop
jge
sbb
push
sbb
and
jmp
xchg
lret
add
mulb
mov
mov
cwtl
mov
and
inc
lcall
or
shrl
add
dec
pop
pop
sbbl
fstp
rorl
xor
cmp
add
add
js
stos
lods
mov
notb
out
add
imul
mov
xor
push
xchg
push
mov
mov
outsb
push
not
in
jmp
or
jb
sbb
xor
arpl
mov
xchg
into
add
adc
push
arpl
push
dec
sti
sub
out
jg
scas
lahf
pop
aam
fwait
dec
jmp
popf
std
cmpsb
jge
mov
mov
addr16
aam
ffree
adc
dec
mov
cmp
push
imul
test
xchg
aad
dec
add
xor
xchg
jns
adc
fsubr
cmp
popf
repnz
insb
incb
fdivrs
cli
cmp
xor
jns
push
les
fwait
movsl
add
xchg
inc
jnp
stos
push
inc
aaa
mov
inc
les
movsb
aam
cs
add
mov
mov
push
pop
pop
sbb
add
add
in
mov
jecxz
out
mov
mov
add
add
xchg
pushf
lea
ret
test
stos
fwait
xor
cs
xchg
jl
inc
pop
incl
ret
cmp
call
sub
push
pushf
mov
rorb
pushf
cld
aad
cmpsb
dec
mov
jne
das
cld
lret
sub
and
lods
lea
daa
dec
mov
sarl
jnp
gs
xor
pop
sti
adc
dec
pop
out
push
push
push
push
xchg
js
push
cltd
shlb
add
aad
test
add
sbb
gs
clc
mov
dec
and
add
inc
and
or
add
mov
mov
mov
loop
aaa
mov
arpl
adc
push
cmp
and
cld
cmp
push
sub
push
arpl
and
iret
adc
subl
scas
lea
mov
mov
lcall
cmpsb
inc
fwait
sbb
push
fwait
repz
add
std
test
jg
into
lret
orl
add
add
sahf
loope
fnstsw
jecxz
pop
sti
xlat
xor
adc
cs
cmpsb
pop
or
jb
cmp
out
add
dec
cmpb
sbb
test
push
fcmovu
test
call
das
sub
mov
adc
fldcw
mov
pop
dec
lcall
ljmp
fstpt
popa
xchg
xchg
xchg
adcl
loope
insb
fs
insb
lahf
mov
xor
lock
pushf
and
mov
fstp
push
inc
loopne
jns
sub
and
sub
dec
jne
pop
cmp
sub
addr16
and
or
mov
and
andb
fwait
int
bound
enter
mov
jne
lcall
xlat
xor
mov
push
and
fucom
nop
xchg
adc
adc
adc
add
out
mov
mov
scas
hlt
mov
add
add
adc
in
lcall
jae
dec
mov
loop
out
dec
mov
add
xor
xor
in
aas
imul
lahf
test
repnz
adc
pop
mov
ret
aam
lea
test
out
nop
shl
fstps
dec
dec
movsb
xor
imul
loope
test
lock
cmp
cwtl
dec
leave
daa
mov
cmpsl
in
push
cmpsl
daa
sahf
xor
pop
js
stc
ret
add
cmpsb
push
icebp
jns
loop
addr16
inc
scas
inc
add
push
pop
jno
loop
aad
and
jg
cmc
push
mov
push
jnp
mov
loope
repnz
or
jp
xchg
cltd
dec
adc
mov
gs
adc
push
ss
popa
xor
xchg
shlb
sar
add
jno
sbb
dec
add
je
jae
hlt
ret
lock
jg
adc
shlb
jne
xor
call
dec
or
jg
dec
arpl
pop
push
mov
add
cld
jnp
xchg
mov
les
addr16
pop
cld
mov
je
stos
ds
mov
or
mov
fs
cs
daa
pop
mov
pusha
xchg
or
or
mov
aad
xor
jb
jmp
or
js
or
mov
push
ja
sub
pop
sti
mov
jno
rcr
and
mov
mov
sarb
std
fadds
pop
or
mov
addr16
ret
je
imul
sub
ret
jae
scas
xor
push
mov
add
push
and
mov
ds
out
or
arpl
fcomip
push
sub
fidivrl
add
ljmp
inc
roll
mov
add
mov
cmp
and
jp
mov
jge
call
test
call
clc
push
xchg
xor
add
insl
sbb
outsl
mov
stos
sub
insb
push
mov
add
dec
fwait
inc
and
stos
repnz
out
in
mov
leave
imul
rorb
lds
xchg
stos
or
push
and
scas
popa
sub
xchg
inc
stc
sbb
and
ja
push
jo
xor
ds
aam
jne
stc
push
or
xchg
fs
in
mov
clc
idivl
lods
xchg
or
out
cld
mov
scas
sbb
test
jecxz
mov
mov
shl
stos
adc
movsl
hlt
xor
stos
mov
xor
fmull
pop
inc
jge
out
push
push
stos
xor
dec
sti
movsb
rorb
loop
lea
mov
arpl
sbbl
imul
stc
rolb
aad
fisttpll
outsl
inc
repnz
push
icebp
je
add
push
js
sub
dec
int
incl
das
nop
int3
xchg
cmp
xor
mov
pop
dec
xor
pop
mov
add
xchg
fwait
cmc
rep
ret
mov
ficompl
sub
outsl
ja
or
fists
lret
mov
dec
adc
js
cs
imul
inc
notl
pusha
cld
cmc
xchg
sub
push
lods
mov
lea
push
out
sbb
push
jecxz
xchg
inc
and
or
and
push
cmp
jmp
addb
push
scas
lods
sub
xor
adc
adc
ljmp
dec
js
data16
xor
lcall
xor
mov
xor
inc
mov
xchg
jp
add
test
push
fstpt
xchg
arpl
push
mov
sbb
mov
jo
aaa
mov
or
fisubrs
inc
jae
outsl
fwait
sti
clc
ds
nop
call
movsl
lds
adc
adc
pop
push
mov
cs
sub
add
add
fistpll
call
mov
arpl
mov
add
fisubs
push
mov
adc
lods
dec
or
push
popf
lret
cwtl
adc
mov
dec
add
jge
mov
mov
jbe
or
addr16
mov
jo
out
fisttpll
subb
jb
call
xor
pop
les
test
sarl
scas
jl
dec
mov
pop
dec
fildl
mov
sar
shll
mov
pop
out
xchg
cmp
repnz
aaa
xor
mov
sub
xor
test
and
pusha
push
xchg
jo
rorb
scas
in
mov
or
leave
push
lods
mov
add
mov
popf
mov
jmp
stc
fsub
in
adc
inc
insl
jp
xchg
sbb
in
push
imul
movsl
add
fistpl
mov
add
add
std
sti
leave
sti
iret
jmp
jbe
fbld
add
in
push
jp
cmpsb
lea
in
pop
cmp
sub
mov
push
fadd
stos
adc
fsubrs
mov
shrl
movsl
cmp
sbb
lcall
cmp
push
dec
iret
stos
mov
outsb
in
cmp
aad
idivl
or
push
inc
jecxz
pop
adc
mov
jge
repnz
ds
iret
cmpl
cs
sbb
sbb
mov
cmp
das
mov
outsl
cld
mov
add
lods
fdivr
xchg
or
add
jp
shll
adc
lret
inc
fcompl
adc
xor
pop
fadds
pop
pop
cmp
mov
lret
stos
push
mov
outsl
sbb
fisubl
out
mov
and
imul
xchg
add
dec
in
jns
pushf
aad
sub
sub
xchg
mov
add
add
mov
xor
inc
xor
imul
fildll
popf
xor
cmp
mov
leave
scas
stos
jnp
pushf
pusha
xchg
mov
sbb
xchg
dec
ds
push
pop
insb
test
inc
fwait
xor
or
subb
out
sub
dec
cwtl
mov
ss
aam
xchg
fildl
aam
sub
inc
push
and
nop
mov
jp
or
adc
popf
sub
push
cmp
iret
mov
mov
lcall
mov
fucomi
mov
sarb
inc
out
fmull
sub
scas
loopne
aas
shl
jmp
cmc
push
mov
jl
outsl
mov
or
mov
xchg
inc
xchg
push
fs
cmpsl
gs
sarl
lods
loopne
sbb
popa
rdpmc
and
arpl
add
mov
inc
sarb
cs
add
push
jne
or
xlat
sub
fcmovnbe
fimull
out
xor
punpckhwd
int
add
fwait
mov
or
jg
mov
sahf
loop
mov
rolb
add
adc
icebp
imul
sbb
xchg
mov
cmpsl
out
aas
inc
push
loop
insl
mov
jecxz
lods
dec
imull
lahf
inc
rolb
and
clc
sbb
dec
adc
push
cs
pop
mov
aad
outsb
or
xor
insb
cmp
lods
mov
cmc
mov
sbb
pushf
test
rolb
add
into
jmp
cs
jnp
mov
xchg
stc
mov
popf
daa
mov
mov
inc
aas
inc
cmp
sbb
scas
and
mov
and
movsl
insb
out
mov
sub
add
inc
es
pop
sub
insb
out
aaa
es
jnp
sub
xchg
incl
stc
dec
lods
ja
adc
int3
push
dec
pop
mov
pop
dec
mov
sarb
xchg
mov
mov
inc
cwtl
sub
lea
subb
and
cmp
add
add
inc
enter
pushl
cld
sbb
jae
add
add
loope
out
pop
dec
xor
xlat
lea
dec
pop
sbb
arpl
pop
jle
xor
cs
mov
imul
fisttps
push
flds
outsl
xchg
ret
stos
xchg
mov
pop
cmpsl
das
jl
sub
mov
lods
inc
ja
xchg
lds
jmp
fcompl
sti
add
lods
mov
xchg
leave
test
ljmp
pop
mov
mov
fidivrs
daa
std
xchg
ret
dec
arpl
pop
jno
pop
inc
pop
stos
mov
jl
lock
mov
mov
shrb
mov
mov
push
inc
xor
cmpsl
or
dec
sbbl
in
push
lahf
inc
dec
out
mov
xor
sahf
js
insb
loopne
loope
mov
push
mov
mov
fmuls
scas
jg
int3
add
jns
push
dec
push
sti
rclb
aad
jg
out
xchg
inc
mov
lods
add
add
pushf
shrb
lcall
push
push
mov
js
add
add
ljmp
push
scas
out
cmp
lret
sub
or
int
and
dec
rcr
pop
ljmp
outsl
push
pop
and
ret
xchg
scas
lahf
in
in
enter
inc
xchg
mov
shll
push
cwtl
xchg
repnz
icebp
ficoml
inc
loop
cmp
in
push
cmp
rol
into
mov
cmpsl
into
cmpsb
sbb
fistl
cwtl
jp
fadd
fsubrl
jns
or
loop
cmpsl
nop
mov
or
sbb
dec
out
ss
mov
pop
or
or
xchg
andb
roll
fsubrl
cli
pop
pop
loop
dec
push
jmp
xchg
les
outsb
inc
dec
push
add
loope
pop
add
dec
mov
mov
icebp
cmpsb
push
or
mov
jno
jae,pt
rcrl
arpl
sbb
push
xchg
iret
pop
mov
add
add
test
mov
aas
scas
std
loope
ret
add
add
stc
imul
sahf
in
pop
movsb
sub
nop
ds
mov
adc
mov
mov
orb
cmpsb
sbb
push
fs
pop
mov
mov
ret
and
insb
lret
lret
adc
mov
cmp
mov
and
inc
jp
adc
adc
shlb
jbe
fmull
pop
sub
sbb
fwait
add
out
xlat
jb
or
sahf
xlat
pop
rolb
out
ret
push
or
mov
lock
lods
loopne
and
adc
sahf
xchg
loopne
stos
js
orb
mov
lea
jb
mov
jmp
pushf
test
lahf
in
adc
cmp
test
mov
xor
mov
lods
inc
fs
xor
andl
pushl
iret
loop
xchg
adcl
push
dec
add
add
jg
jne
jne
jg
loop
mov
flds
add
add
or
push
icebp
pop
cmp
leave
mov
lock
arpl
xor
pushf
inc
dec
out
dec
cmp
cmc
jo
rcrb
xor
sub
jne
cmp
inc
rorb
daa
pop
or
mov
and
fnsave
cmpsl
xor
data16
rclb
stc
inc
xchg
jmp
sbb
xor
adc
idivl
sbb
push
fisubl
arpl
push
insb
or
dec
test
fisubrl
jge
or
inc
dec
adc
ja
imul
push
push
push
fwait
cmpb
gs
in
cld
repnz
jecxz
fsub
sbb
mov
inc
pop
nop
push
sarl
pusha
sbb
and
mov
fmull
cltd
xor
mov
pushf
mov
sbb
repz
mov
jae
nop
imul
lcall
xchg
push
dec
sbb
inc
addb
leave
add
add
dec
pop
mov
cmc
mov
repnz
add
add
test
mov
add
fcmovbe
movsb
pop
leave
fiaddl
fiadds
je
jnp
cmpsb
or
add
lret
and
jbe
dec
mov
addr16
pusha
pop
sar
stos
adc
ljmp
pop
push
fs
or
mov
lcall
xor
scas
pusha
pop
int
sbb
sahf
test
test
push
cs
repz
fbld
jle
inc
rorl
jbe
push
popf
push
mov
or
andb
push
bound
mov
test
sub
insl
sub
adc
jp
mov
dec
aad
shrl
adc
lock
add
xor
sbb
jbe
mov
inc
loopne
outsl
rolb
mov
cmpb
cmpb
pop
loop
jae
arpl
xor
lahf
dec
mov
clc
clc
jo
sbb
sbb
add
add
outsb
jle
lods
testl
movb
add
mov
dec
xlat
jo
sbb
xor
mov
fnsave
push
and
bound
dec
stc
mov
xchg
mov
push
scas
mov
pop
and
mov
clc
orb
xor
out
xor
loop
cmp
loop
adc
add
shrl
mov
jle
in
repz
popl
mov
fsubrl
das
xchg
mov
repnz
arpl
mov
jnp
pxor
dec
fmulp
cmp
std
scas
aaa
je
add
push
jmp
xchg
mov
dec
das
out
xchg
mov
and
xor
cld
je
cmpsl
aas
lea
push
lds
in
push
mov
adc
mov
dec
lea
inc
js
push
lret
adc
fdivl
dec
out
xchg
loope
push
cmp
jl
outsl
test
imul
mov
mov
add
dec
loop
movl
add
cmp
loopne
js
mov
leave
dec
lret
outsl
scas
sub
sub
icebp
aaa
in
je
and
sub
sbb
loope
or
or
cmpl
jbe
push
and
and
fs
push
jae
or
lods
dec
mov
mov
push
inc
cld
and
mov
xchg
insb
mov
sbb
std
cmc
and
add
push
pop
cmp
inc
fistps
ret
or
push
add
test
sbb
cmp
lahf
xor
dec
outsb
xchg
sahf
stos
fisubrs
sbb
cmpsb
call
outsb
and
sub
in
pop
pop
daa
push
mov
and
sub
fidivrl
cltd
shlb
lds
fs
cli
mov
mov
imul
mov
pop
movsb
mov
cmp
push
jg
shlb
mov
add
add
out
sti
xlat
in
aad
and
xchg
enter
add
add
jb
shrl
mov
ficomps
mov
rorl
cld
inc
mov
and
andl
cs
stos
sub
ret
jl
pop
test
or
dec
sub
push
dec
cwtl
lea
gs
push
fidivl
lret
pop
inc
outsb
pop
sub
mov
mov
inc
sub
push
repz
mov
ss
pop
pusha
cmc
dec
or
jle
xor
xchg
add
pop
and
test
xchg
sbb
jno
jmp
in
inc
addr16
das
mov
adc
cmp
loop
je
xchg
aaa
cwtl
into
cwtl
or
outsb
sub
xor
mov
and
mov
mov
lock
in
cmp
vcvtsd2si
lea
pop
pop
jle
scas
das
jmp
cmpsl
repz
int3
cmc
stc
inc
movsb
jno
test
add
add
push
sub
cmp
jg
and
mov
push
xor
mov
leave
add
add
lock
out
jnp
and
jg
or
add
or
repz
and
mov
pushf
mov
or
lahf
fsubp
outsb
jg
jmp
movb
in
je
inc
in
inc
adc
cmpsl
pop
ja
imul
and
and
cmpl
xchg
add
jl
pop
mov
jge
rorb
add
scas
xor
cmpsl
or
test
movsb
negl
or
fmul
addr16
inc
mov
jb
imul
repz
pop
mov
push
mov
add
jb
push
push
imul
loope
idiv
dec
jo
rclb
inc
or
pop
in
jle
push
adc
lret
mov
mov
loope
fstpl
insl
xor
mov
in
test
pop
jmp
scas
aas
cli
push
push
shlb
ljmp
sub
fistpl
imul
jmp
ds
repz
fcoms
or
jp
mov
add
add
mov
ficoml
shll
imul
jge
outsl
imull
mov
pop
inc
add
ja
leave
outsb
jb
lahf
lock
jmp
push
pushf
cmp
movsl
push
cmpsl
cmp
dec
cmpsl
mov
and
jg
xchg
out
insl
adc
push
scas
pop
scas
cli
popf
push
sub
call
int
mov
or
xchg
adcl
jg
pop
pushf
sbb
xchg
mov
jno
shlb
lods
jg
push
jl
js
jb
xchg
popf
adc
mov
stc
cmp
cmp
mov
xor
mov
je
es
mov
cmp
jl
mov
icebp
mov
pop
test
aas
or
xor
xor
push
mov
loopne
lods
push
cwtl
or
push
ss
add
add
mov
mov
ficomps
pop
movsl
lret
add
add
sti
sbb
int
jmp
cmp
insl
in
fwait
xchg
sub
or
adc
mov
les
jg
cwtl
outsb
testl
or
cmp
mov
sti
fstl
test
cmp
fists
lret
push
ss
ficoms
cmpsl
mov
addr16
mov
mov
sbb
inc
femms
inc
fwait
loopne
divb
sub
in
mov
je
insb
cmpsb
hlt
loope
ljmp
in
jns
add
adc
and
lahf
dec
adc
jo
cwtl
jbe
add
cmp
jae
adc
ficomps
mov
cmp
jae
xor
je
rcrb
inc
out
adc
sbb
inc
lcall
les
arpl
out
mov
aas
pop
push
cmp
clc
sarb
jb
mov
and
add
add
enter
in
sbb
push
inc
jb
jecxz
stos
int3
add
add
into
mov
cwtl
ljmp
shll
cmp
cmp
popa
imul
cli
insb
ljmp
jbe
data16
mov
fs
sub
ss
and
aam
mov
out
je
mov
push
and
js
psrld
jne
cmpsl
fidivl
je
push
xor
icebp
adc
test
std
pop
xchg
add
mov
stc
jmp
or
movsl
jecxz
xor
leave
mov
wbinvd
or
gs
into
lcall
cmpsl
cmp
xor
popf
enter
push
xchg
int
test
loopne
mov
and
aas
dec
xorl
mov
push
push
cmp
adc
mov
arpl
ds
imul
mov
cli
add
mov
mov
in
push
js
mov
add
add
imul
cmc
call
inc
push
popa
shl
aam
scas
int
add
mov
jecxz
pop
sbb
add
sbb
ljmp
mov
mov
pushf
xchg
imul
lods
cmc
in
cmp
jge
nop
mov
xchg
sti
inc
push
mov
mov
sahf
arpl
lds
pushf
or
loope
cmp
shl
cmp
loopne
xchg
mov
imul
add
push
sbb
orb
movzbl
cld
and
outsb
sub
pushf
jns
in
inc
in
mov
movsl
idivb
jno
daa
add
fs
fstps
movsb
cmp
shrb
sarl
or
fcompl
mov
xor
dec
cmp
fs
xor
fwait
cmp
sbb
fld
fimull
mov
xchg
lret
fwait
dec
pushw
test
aad
add
push
push
out
andb
test
xor
outsl
sbb
push
movsl
xchg
xchg
movsl
mov
iret
sub
pop
mov
mov
add
add
testl
fmul
adc
clc
je
lds
sbb
xor
xor
sub
pop
ret
xchg
xchg
xchg
repnz
or
in
inc
push
divl
mov
es
xchg
pop
sbb
push
sub
mov
xor
fadds
xchg
jge
jecxz
cwtl
je
fdivrs
mov
retw
mov
mov
int
xchg
add
cmp
jmp
in
fwait
not
aas
imul
xor
lret
repz
cltd
mov
pop
ss
inc
movsb
in
hlt
pop
in
fdiv
xchg
popa
inc
jecxz
aam
inc
test
or
xor
adc
mov
xchg
hlt
js
rcrl
ss
adc
xor
movsl
sbb
cmp
pushaw
scas
mov
push
test
mov
xor
jo
imul
or
push
push
test
xchg
sub
jge
stos
cmp
icebp
call
add
out
into
gs
cld
test
xchg
aad
mov
add
add
xor
xor
ret
xchg
repz
mov
pop
jae
inc
sbb
jl
jo
inc
popa
cmp
pop
fcmovbe
sti
loopne
subl
mov
inc
mov
push
pop
push
mov
mov
mov
xchg
dec
mov
lret
jo
dec
mov
rclb
leave
jl
popa
pop
xor
insl
pop
jmp
out
push
xchg
repz
push
cs
imul
jmp
cli
cs
mov
dec
or
jmp
xlat
mov
outsb
inc
lea
sbb
movsl
pusha
and
mov
insb
shlb
call
sub
cli
push
lret
ja
fcomp
cmp
out
sub
or
repnz
pop
test
add
rcrb
jne
jb
int3
xor
inc
xchg
out
test
imul
ret
aam
repz
stos
xlat
lret
jnp
enter
loopne
and
je
out
mov
adc
add
add
insb
xchg
lods
push
in
jmp
fnstenv
pop
xor
push
xor
mov
push
xchg
add
and
jecxz
fs
jae
mov
add
cmp
cmp
and
loop
cmpsb
dec
mov
mov
jae
sub
xchg
repz
daa
sbb
jg
cmpsl
hlt
cmp
mov
fs
and
cmc
pop
imulb
mov
mov
sbb
mov
xor
push
sti
in
sub
inc
rol
les
xchg
ficoms
inc
je
xor
jp
dec
ds
pushf
lret
lret
add
data16
scas
outsl
and
stos
stc
push
nop
outsb
mov
fstl
sbb
pop
mov
mov
push
lds
sub
mov
mov
push
loope
or
sbb
inc
pop
push
jecxz
clc
add
add
dec
daa
dec
das
outsb
imul
push
xchg
cmpsb
cmp
test
add
add
rcrb
fcmovbe
cmc
inc
into
mov
movsb
and
leave
mov
sub
test
sub
xchg
clc
cmc
cli
and
xchg
inc
pop
mov
outsl
jb
push
addr16
adc
xchg
inc
div
mov
jne
cwtl
xchg
stc
push
sbb
jbe
mov
mov
push
mov
scas
ret
addb
push
or
pop
fcomi
je
addr16
call
add
shl
rcll
imul
mov
add
shlb
stos
adc
pop
hlt
xchg
in
mov
loop
fs
in
jmp
xchg
unpcklps
push
push
test
repz
lods
xlat
sub
mov
sti
outsl
mov
jge
fidivrs
cli
xor
lods
std
pop
adc
int3
fisubrl
paddusw
push
mov
shl
mov
mov
popf
aaa
out
sub
jb
repz
lcall
add
add
popf
mov
lahf
ret
or
or
enter
add
and
cld
xchg
mov
jge
nop
les
jns
jne
pop
stos
cli
pop
push
stos
or
divb
int3
jl
loop
insl
push
movsl
lahf
inc
cltd
inc
fistpl
stos
test
xlat
add
dec
fisubrs
shr
jno
jns
je
adc
repnz
push
push
jle
es
clc
pop
clc
stc
mov
xor
pop
or
std
aad
je
xor
cmpsl
daa
fistl
jno
sbb
in
jno
mov
add
sbb
ss
repnz
mov
mov
mov
jno,pt
frstor
pop
jns
push
inc
push
inc
jmp
lods
dec
mov
sub
dec
jl
add
or
mov
add
jae
popa
test
fsubl
jo
rsqrtps
dec
push
std
adc
je
test
lret
out
cmp
pop
dec
push
xchg
jnp
adc
cmp
lret
mov
mov
add
neg
outsl
push
xchg
or
mov
jo
roll
add
lcall
push
push
pop
ffree
in
popa
fs
mov
or
fucomp
dec
in
ror
xchg
mov
cli
iret
jg
dec
in
mov
repnz
inc
sti
nop
pusha
adcb
jge
jge
flds
daa
popf
stos
push
addr16
aas
dec
add
sub
mov
cmpsl
push
ja
inc
shll
daa
and
push
loope
jne
pop
repz
jp
sub
cmpsb
or
or
mov
dec
mov
sbb
scas
ret
ja
jo
scas
mov
mov
dec
orb
imul
fnstsw
fcomps
cmp
out
mov
mov
inc
divb
xchg
push
fs
loope
loopne
ss
shl
stc
out
loope
incb
mov
xchg
add
out
or
in
cmpsb
mov
movb
lret
js
mov
xor
add
pop
xchg
mov
add
xor
add
sbb
sub
dec
loop
lea
add
mov
mov
cli
sub
repz
push
inc
xor
push
pop
fldcw
fs
pop
aam
int
loop
jae
iret
lret
mov
out
into
mov
loope
add
push
ret
hlt
rcl
xchg
or
xchg
xchg
lods
lret
lahf
cmp
test
test
sbb
shll
mov
cld
das
inc
clc
sti
mov
fwait
lods
inc
inc
inc
adc
mov
mov
cmpsb
cmp
jle
add
or
mov
mov
mov
jb
pop
imul
mov
pusha
mov
sbb
cs
rorb
jns
inc
rcpps
adcl
xchg
cli
cmp
sbb
inc
in
rorb
stos
movsw
out
sub
popf
pop
lods
out
adc
xchg
push
inc
inc
int
jne
ffree
mov
and
jns
pop
mov
adc
add
mov
pushf
adc
ds
jae
fisttpll
xlat
aad
add
cmpsl
lret
ljmp
fidivl
sbb
and
xchg
std
jbe
xchg
mov
jno
into
add
adc
lds
inc
xchg
into
ss
jecxz
xchg
sub
mov
jo
or
aad
push
sbb
movsb
add
pusha
sub
lahf
sbb
int
sbb
mov
xchg
or
sahf
sub
xorl
test
andl
cmp
push
push
xchg
aam
mov
imul
push
sub
jmp
ret
leave
fmuls
push
push
sahf
ret
mov
jno
decb
sbb
push
daa
gs
xchg
mov
loopne
add
jl
jne
hlt
fcmovnb
das
mov
shrb
or
in
adc
pop
loope
jne
clc
ja
lret
pop
jg
inc
jl
add
add
add
lcall
jnp
xchg
add
add
in
ficoms
rolb
ja
pushf
dec
outsb
cmp
mov
xchg
pop
mov
adc
cwtl
icebp
xchg
sub
popf
or
mov
jae
call
dec
lods
popa
lea
mov
xchg
xchg
or
pushf
stc
test
das
lret
les
xchg
stc
adc
in
cmpsb
fstpl
roll
pop
sub
mov
xor
scas
mov
shlb
int3
pop
jmp
sub
dec
cmc
cmp
test
pusha
jnp
cmp
mov
xor
cmp
scas
dec
xor
xchg
stos
add
ret
into
pusha
adc
push
ds
xchg
mov
scas
xchg
mov
and
sbb
and
add
nop
cmp
jno
scas
subb
sbb
lcall
shll
xor
mov
insl
push
xorb
je
add
cmp
jg
leave
or
mov
enter
add
add
aas
sbb
pop
inc
mov
sbb
xchg
pop
lret
pop
test
lods
dec
aad
pop
mov
xlat
lock
les
imul
test
dec
shl
inc
ret
xchg
xchg
sahf
iret
js
ret
iret
jae
mov
fwait
stos
in
test
addr16
xchg
int3
js
lcall
in
pop
mov
in
adc
push
in
fcmovnb
out
sub
popa
and
test
data16
test
push
xor
xlat
cmp
fdivs
inc
jns
sbb
mov
fisttps
xor
pop
cwtl
pop
dec
fwait
adc
sar
subb
mov
cmp
or
data16
dec
cmp
ret
mov
lcall
or
movsb
mov
sbb
int
repnz
cmc
or
stc
mov
mov
push
fwait
outsb
add
add
int
out
out
imul
nop
xchg
movsb
cmp
out
add
add
mov
das
lock
cmpsb
jg
rolb
add
loop
and
or
stos
test
inc
adc
push
cmp
pop
gs
imul
dec
and
jo
push
cwtl
mov
mov
out
int
jb
mov
add
scas
and
sti
test
jo
add
clc
lret
bound
mov
xchg
mov
or
mov
push
sub
jne
std
in
mov
push
xchg
aad
cmc
inc
leave
fisubrl
jbe
stos
stc
sbb
rorl
push
dec
std
or
ficomps
inc
fwait
lea
imul
jnp
push
push
in
or
cmp
sbb
xlat
ja
jl
adc
pop
mov
movb
jns
mov
lret
filds
dec
push
push
pop
stos
rcrb
cmp
mov
xchg
lcall
add
out
fldcw
push
in
sub
int3
jmp
add
add
xchg
fmulp
cmp
pop
lock
mov
mov
lds
inc
inc
mov
mov
fbstp
ret
lods
ja
push
iret
inc
fs
pop
or
xor
push
xor
sub
dec
addr16
mov
and
es
adc
xlat
rcll
sub
inc
hlt
cmpsl
jle
and
push
aam
mov
and
or
adc
mov
call
stos
rolb
icebp
push
cmc
dec
cmc
push
sub
dec
inc
pop
iret
jne
cli
stos
dec
jge
outsl
or
es
jae
sbb
xor
and
sbb
and
mov
ror
or
mov
push
sub
imul
mov
inc
lods
mov
stc
aaa
mov
sub
or
xor
push
enter
shl
cmp
jnp
lahf
mov
inc
cwtl
jnp
sub
xchg
and
mov
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
push
adc
fiaddl
add
cmpsl
cmc
xor
aad
fwait
push
and
loop
fists
adc
or
push
in
inc
mov
outsl
xchg
cmc
fstpt
sub
adc
cmpsl
or
scas
jbe
xchg
jge
rcrl
ret
cmp
aad
mov
mov
sbb
fs
aam
popa
enter
je
jl
mov
les
rcr
jnp
cs
mov
sub
pop
scas
adcb
into
stos
or
inc
loop
fsubl
test
fwait
das
int
or
cmp
fmull
xchg
leave
cmp
inc
xor
sbb
sbb
xor
jg
xor
cmp
ljmp
and
div
enter
push
icebp
add
movsb
roll
cmp
sub
lret
push
mov
inc
ja
cmp
sbb
ja
mov
imul
add
add
jle
jg
std
fstpt
xchg
les
add
xlat
mov
call
movsb
push
add
xchg
pusha
mov
lea
mov
fs
dec
mov
cmpsl
scas
stos
mov
fsubrl
or
dec
xchg
xor
xchg
int
add
ljmp
cld
cltd
jbe
mov
xor
jg
outsb
ret
pop
mov
stos
int3
xchg
in
dec
mov
in
in
inc
cmp
add
rclb
lock
inc
bound
daa
sub
out
out
pop
add
inc
ss
jge
fst
outsl
sub
int
xchg
and
mov
outsl
mov
push
and
mov
cmp
mov
sbb
inc
push
push
clc
in
aad
and
fcoms
sub
les
cmp
scas
mov
ds
pop
ret
lds
pushf
xor
mov
addr16
adc
sets
int
inc
in
popa
std
inc
mov
js
insl
test
add
mov
sti
idiv
lods
pop
sbb
lock
add
add
or
and
and
cmp
mov
aam
int
dec
xor
or
mov
notl
and
es
inc
loope
in
sub
mov
mov
mov
push
push
popa
les
subb
push
mov
push
shll
das
arpl
jecxz
scas
adc
icebp
std
and
mov
jae
and
addr16
inc
repz
pusha
insl
mov
jg
jge
test
mov
push
aaa
gs
xchg
xorb
sbb
mov
lret
add
and
lahf
cld
bound
orl
sbb
enter
mov
movsb
out
mov
ret
stc
dec
or
cmp
cmp
add
push
std
add
sbb
push
nop
mov
mov
cmp
and
insl
jle
inc
mov
push
sbb
les
xor
add
add
sbb
jmp
scas
inc
call
fldl
add
cmpsl
cld
stc
sbb
sub
and
and
xlat
loopne
pop
or
adc
dec
fnstenv
jg
inc
lods
dec
xchg
repz
dec
cltd
jo
sbb
push
cli
inc
arpl
xorl
sbb
sub
mov
cmc
int
add
ret
jns
mov
xor
inc
movsl
push
ds
pop
rolb
and
mov
add
out
pop
fs
lea
mov
sub
mov
dec
push
movsl
xorb
mov
mov
das
xchg
xor
imul
js
es
and
daa
cmpsl
mov
xor
adc
rorl
inc
iret
shrb
sbb
pop
addr16
push
xor
jb
lock
push
stc
mov
mov
xor
mov
jmp
add
add
fucom
mov
movsl
sti
or
cmpsl
fimull
faddl
hlt
faddl
add
add
fistps
aas
and
and
inc
repnz
flds
lahf
std
mov
addr16
cmp
std
and
in
or
lcall
xchg
imul
or
shl
push
xchg
and
push
test
outsb
pusha
xchg
adc
and
or
and
mov
and
jno
push
cs
pop
in
or
cvttps2pi
push
lea
cmp
xchg
push
fs
jnp
inc
das
in
and
or
aaa
dec
je
test
xor
inc
pop
fbstp
fisttpl
jb,pn
insl
aad
mov
sub
xchg
fbstp
sub
sbb
xchg
cmpsl
mov
dec
xchg
insl
hlt
push
pop
push
leave
sahf
inc
mov
cmc
inc
decb
daa
jo
pop
leave
pop
pushf
xlat
les
aam
aaa
cmp
and
outsl
dec
inc
mov
test
add
jg
mov
lcall
fisttps
or
or
add
add
cmp
inc
fmull
fistpl
and
lahf
aad
cmpsl
cmp
fistps
pop
adc
sahf
mov
in
pushf
cltd
add
ficoml
mov
fisubrl
loope
mov
mov
xchg
cwtl
mov
jbe
jg
cmp
ja
cmp
clc
mov
lahf
jb
test
mov
jle
bound
inc
sbb
fdivrl
add
icebp
cmp
pop
fwait
mov
ret
mov
outsl
or
out
ljmp
xchg
scas
pop
push
jg
sub
aas
inc
stos
push
lcall
notl
push
xchg
mov
hlt
mov
lock
jbe
int3
push
push
cmp
ret
or
sbb
cmpsl
sbb
adc
cmp
push
pushf
ljmp
sub
and
filds
das
movsl
push
test
cmc
mov
fld1
repnz
fisubrs
mov
lret
movsb
push
jns
cmp
add
mov
jns
xchg
xchg
mov
sub
add
add
mov
jle
or
sub
jae
and
stos
addr16
in
adc
and
movsl
mov
jl
in
or
popf
xor
cmp
outsb
aam
adc
cltd
repnz
mov
push
icebp
scas
cld
jge
fidivl
dec
push
mov
mov
cmp
sub
xor
and
mov
adc
rolb
stos
aaa
mov
mov
push
xchg
in
jge
or
dec
jg
test
jns
xchg
test
pop
nop
fs
inc
or
cmp
jge
jno
jnp
dec
push
stos
shrl
test
ljmp
mov
fdivr
jns
mov
out
test
add
das
pushf
in
mov
lods
dec
xchg
lea
je
iret
scas
in
mov
daa
push
cmp
jg
sbb
inc
ret
xor
or
ljmp
push
loopne,pt
sub
add
jae
fadd
fsubp
jnp
or
cld
les
mov
adc
add
add
cmovne
xor
adc
add
in
jnp
mov
inc
arpl
add
je
add
ffree
xchg
jno
pop
repnz
out
fiaddl
js
pop
or
cmpsl
and
fwait
dec
out
loopne
or
sub
dec
xorl
inc
mov
in
mov
mov
inc
inc
push
xlat
dec
in
pop
dec
repz
hlt
int3
sub
or
rorb
cwtl
mov
push
cmp
sbb
sbb
dec
push
xchg
sbb
test
add
mov
lret
in
add
adc
push
shll
imul
push
test
gs
adc
pop
aam
add
xor
inc
mov
mov
lock
jae
mov
jp
push
int3
call
shll
ja
add
popf
int
in
ds
aas
adc
pop
sub
xchg
or
ja
cli
add
add
add
sub
cld
cli
jle
dec
nop
xor
jecxz
add
stc
fldenv
mov
dec
std
pop
pop
xchg
pop
cmp
push
pop
icebp
sub
jbe
cmp
xor
xor
insb
jp
stc
pop
pop
cltd
add
shll
and
cltd
ret
xor
jb
test
and
sbb
and
xchg
rcrb
fldl
inc
mov
and
movsb
jecxz
xchg
mov
or
test
arpl
das
push
addps
out
les
and
dec
gs
jo
push
jp
cs
pop
cmpsb
fidivs
dec
mov
popa
inc
push
and
push
test
sub
mov
notb
xor
movsb
int3
jo
lds
pushf
cld
mov
push
aad
pop
and
or
ret
sub
lret
and
or
fsubrl
shll
cmp
sbbl
add
lea
pop
jbe
ja
sti
aaa
out
ja
test
fs
add
add
adc
ds
test
rolb
js
push
loopne
pop
ja
int
out
bound
lcall
in
lcall
push
mov
es
xor
fsubl
jecxz
out
or
jbe
fnsave
mov
cmp
jbe
cmp
adc
jg
cmp
cwtl
fwait
xchg
xor
sti
jp
repz
roll
test
out
pop
push
mov
sub
mov
lahf
jmp
mov
aam
scas
or
push
inc
addr16
mov
sbbl
jns
leave
dec
push
aad
hlt
pop
dec
jbe
inc
mov
jcxz
xchg
out
xor
sub
cmp
jg
dec
inc
mov
jle
idivb
push
and
ret
mov
mov
sahf
call
and
cmp
add
rolb
add
ror
cltd
outsl
mov
aaa
pushf
or
in
add
repz
xor
call
adc
and
sub
imul
xchg
ret
dec
xchg
inc
mov
xchg
mov
jne
mov
or
into
mov
push
out
or
les
mov
roll
cmpb
add
pop
hlt
sub
pop
ss
call
cmp
repnz
outsb
filds
mov
pop
movsb
sub
test
fiaddl
ret
lahf
pop
inc
cmp
jbe
scas
push
ffreep
out
mov
lahf
scas
mov
jg
pop
ret
sbb
cmp
test
jnp
mov
push
sbb
test
arpl
sub
mov
notl
addr16
mov
mov
sbb
adc
xchg
inc
inc
or
aaa
inc
xchg
and
test
inc
xchg
jg
not
aad
out
out
cltd
pop
or
jecxz
insb
imul
mov
sub
cmpsb
insb
bound
add
add
ja
lcall
mov
and
out
add
sub
mov
clc
enter
pushf
xlat
pop
test
movsw
aam
push
stos
cs
push
push
imul
loop
fistps
test
mov
inc
aam
mov
cmc
dec
into
add
inc
cmp
in
dec
sbb
push
mov
jne
lods
iret
lock
fadds
adc
sbb
fwait
add
imul
shrb
lahf
gs
cmpsb
fcomps
cmp
dec
mov
mov
xchg
gs
lcall
fistl
xlat
and
sub
addl
mov
ss
sub
xlat
shr
inc
mov
xchg
cmp
movsb
xor
jo
cmp
jno
insb
push
push
scas
cmpsb
repz
push
xlat
stos
out
lret
and
and
sub
xlat
stos
ficompl
aam
jmp
orl
popf
mov
ret
loop
iret
cmpb
add
add
add
lock
jg
in
and
fwait
enter
add
add
mov
ja
and
jge
jge
or
cltd
cld
adc
lods
xor
xor
enter
popf
out
aad
outsl
cmp
or
push
and
popf
enter
test
loope
sub
jge
adc
jae
stos
lcall
jmp
jl
lret
inc
xchg
pop
mov
mov
sub
mov
in
push
add
ja
xchg
sub
ss
mov
ret
jg
mov
scas
inc
scas
daa
pop
xor
popf
sbb
mov
push
dec
push
in
xor
or
fistpl
and
mov
lods
daa
push
cltd
clc
jb
xor
icebp
inc
push
mov
push
sbb
cli
and
outsb
adc
xor
pop
hlt
call
push
shll
sub
stos
and
add
lret
pop
sbb
repnz
lock
hlt
cmp
in
test
add
add
pop
xlat
fistpl
icebp
cltd
adc
add
dec
mov
movsl
and
or
add
mov
xchg
inc
imul
pushf
xor
jecxz
jns
rcrb
pop
aad
clc
push
cmp
into
clc
imul
repz
movb
mov
cmp
inc
ja
out
movsl
sub
push
aam
insl
push
loop
dec
dec
les
ret
inc
pusha
loopne
aaa
fbld
mov
mov
ficomps
xchg
or
fwait
cmpsb
adc
and
fs
xor
loopne
test
clc
repnz
sub
out
xor
jl
decl
cmp
dec
sub
in
push
bound
sub
push
fmuls
cmp
pop
push
mov
adc
cmpsl
aaa
test
inc
xor
in
jmp
sub
cld
ds
das
mov
shll
gs
jb
push
inc
std
lret
dec
xlat
xchg
in
and
aam
fnsave
mov
or
addr16
js
xchg
add
stc
mov
dec
js
stc
mov
dec
int
out
jmp
cltd
ss
add
out
sbb
inc
mov
add
mov
cmpsb
cmc
outsl
mov
mov
sub
xor
lret
leave
inc
cmp
xlat
idiv
mov
xchg
dec
nop
sar
repnz
dec
mov
in
push
or
mov
mov
xlat
pop
cwtl
xor
pop
add
adcb
pop
popf
mov
roll
mov
loope
popf
xor
leave
outsb
jnp
addr16
xor
cltd
shlb
cmp
hlt
mov
pop
mov
repnz
inc
dec
and
push
repnz
mov
dec
xchg
inc
adc
jo
std
push
adc
push
cmp
dec
jmp
ss
sahf
addl
fidivs
dec
imul
in
or
sti
iret
daa
lret
sub
dec
mov
or
cs
sub
sbb
ret
stos
ffreep
and
sbb
mov
xor
mov
outsb
jmp
jl
mulb
rcpps
pop
add
add
insl
repz
fwait
jns
jns
aam
jno
ljmp
dec
cld
repz
add
stos
cmp
push
loop
dec
and
hlt
push
aam
dec
into
pop
or
pop
mov
cmp
cmp
pop
jb
and
and
push
inc
fldt
outsl
lea
xor
push
xlat
popf
push
pop
adcl
xor
mov
and
jnp
fdiv
inc
mov
wrmsr
dec
sbb
iret
rorl
adc
jmp
fs
movsl
es
mov
mov
fadd
testl
les
sbb
shrb
in
stos
mov
xor
fstpt
mov
or
push
or
cmpsb
pop
jae
push
jns
enter
adc
jb
pop
sahf
push
mov
arpl
test
mov
hlt
test
jns
jns
push
jecxz
icebp
inc
aaa
mov
in
or
je
inc
shrb
loopne
cltd
clc
cld
mov
and
xchg
add
add
mov
pxor
jnp
adc
jne
cmp
jmp
add
movsb
stos
or
fwait
mov
arpl
decb
dec
add
and
pop
jmp
sub
scas
dec
mov
call
pop
fs
dec
sub
mov
shlb
shlb
repnz
pop
ficoml
push
xchg
gs
cmpsb
xchg
adc
movsl
mov
imul
shll
lahf
sub
cltd
sbb
pop
daa
push
push
dec
roll
jb
stos
insb
lret
jp
bound
push
xor
pusha
add
pop
mov
inc
insl
sub
call
add
popa
push
test
sub
cmp
lahf
xor
loopne
outsl
rcrb
hlt
inc
xchg
sub
lock
lcall
push
loope
testb
cli
flds
cmp
mov
sbb
cmp
cmc
add
add
out
lods
xor
aas
xlat
fistl
das
jecxz
cmp
inc
in
add
add
push
jb
mov
je
sbb
pop
jns
cmp
pusha
aam
cwtl
or
dec
sbb
push
push
das
aaa
push
pop
xor
sub
dec
in
and
pop
mov
mov
push
add
cmp
out
repz
testl
dec
mov
popa
inc
lret
push
adc
ds
nop
xchg
test
mov
mov
ret
inc
js
jg
mov
fmull
xchg
aam
in
leave
add
es
in
jns
cmpsl
std
jl
cmp
sub
and
push
sarl
out
and
cwtl
or
push
lret
sbb
flds
sbb
push
js
inc
shrb
ja
add
adc
jp
gs
in
and
mov
xor
movsb
scas
loope
stos
dec
sbb
and
inc
adc
popf
subb
scas
xor
addr16
inc
call
add
add
jb
scas
decb
fisttps
pop
movlps
add
add
pop
sbb
mov
jl
jmp
call
fdivrs
pop
jae
nop
fdivrl
lret
aad
mov
lds
std
push
and
fs
lods
lahf
pop
mov
imul
loop
inc
icebp
inc
or
xorl
out
out
or
jmp
jae
mov
jno
mov
faddl
pop
pushf
xchg
xorb
cli
xor
icebp
sbb
in
bound
cmpsb
mov
les
mov
inc
icebp
push
pushf
xor
inc
ret
ror
add
lret
loopne
mov
lcall
fisubrl
cmp
add
sbb
and
pop
push
push
push
out
add
mov
mov
sarb
test
gs
xor
pop
cltd
mov
and
mov
js
jecxz
pop
adc
add
mov
xlat
mov
xchg
sub
fidivrs
out
add
add
jno
fidivrl
sbb
push
in
dec
mov
xchg
or
adc
adc
cld
arpl
rcll
jmp
jnp
lret
sbb
push
mov
dec
dec
xchg
pop
jge
xchg
adc
inc
push
rcr
or
outsb
sbb
xor
call
cmc
jmp
inc
xchg
sbb
out
push
testl
stc
and
dec
mov
xorl
mov
nop
imul
stos
sbb
dec
mov
add
into
mov
add
out
jns
mov
nop
push
sahf
or
int3
movsb
aam
rcrl
xchg
out
pop
cmp
clc
lds
cld
fwait
rol
cmp
les
or
cmp
push
cld
or
mov
cs
pop
push
or
sbb
icebp
jne
int
xchg
or
inc
fwait
dec
andl
push
out
pop
repnz
dec
pusha
push
into
xchg
mov
out
xchg
mulb
add
lods
cmp
lods
aas
mov
xor
add
add
or
ret
popf
add
mov
sbb
mov
mov
pop
ret
lods
out
sahf
insb
or
out
xchg
iret
dec
jno
cmpsl
mov
push
lock
add
into
pop
test
or
rcrl
lcall
adc
mov
or
imul
aad
push
fisttpll
pop
jl
sub
imul
or
push
jbe
out
pop
xor
stos
mov
inc
ret
cmp
xchg
aam
push
movsb
jge
inc
inc
jg
leave
andl
cmp
jno
sub
xor
lea
or
loopne
flds
push
adc
jo
clc
scas
dec
cmpsb
das
mov
pop
jae
push
mov
pop
pop
iret
jo
std
movsb
xchg
filds
iret
hlt
adc
mov
jb
dec
push
mov
mov
iret
cmp
push
add
add
mov
sti
mov
ds
pop
lock
add
sti
cmp
bound
out
test
pop
std
mov
aad
test
enter
cwtl
out
add
in
xor
std
pop
gs
mov
push
add
lret
pop
mov
add
inc
push
xchg
sti
inc
sub
cmpsb
mov
dec
push
sbb
bound
loop
gs
or
addr16
ljmp
pop
push
mov
mov
insl
jae
jp
andl
jbe
and
aaa
ja
fistl
cld
sarl
cli
iret
stc
or
mov
lea
jge
xor
icebp
das
movsl
jo
mov
out
out
jge
adc
inc
xor
addr16
jecxz
repz
jp
mov
mov
mov
sub
pop
adc
xchg
cmp
sbb
mov
sub
vmaxpd
lcall
push
lods
ljmp
add
add
into
adc
neg
jge
xchg
jns
xchg
mov
add
add
mov
cmpl
shlb
mov
mov
jecxz
popa
cmp
test
arpl
and
inc
mov
fs
aad
lea
das
pop
xor
fs
mov
in
mov
lahf
mov
push
lcall
jmp
fcom
cmp
sub
xchg
sahf
pop
aam
js
jp
cmp
and
fisttps
jecxz
movsl
mov
mov
pop
out
fsubr
loopne
out
cld
jbe
adc
mov
dec
adc
repz
dec
loopne
xchg
add
addr16
sub
scas
sub
jecxz
fs
pop
and
stos
jg
movsl
pop
sbb
xchg
dec
out
rorl
fmul
dec
scas
xchg
sbb
dec
mov
aam
push
or
pop
lock
dec
cmpsb
js
pop
jle
and
add
fwait
mov
fldenv
mov
pop
aas
fistpll
imul
add
dec
sub
sub
fisubrl
outsl
push
push
arpl
add
add
push
std
rcrb
cmp
mov
push
mov
or
lds
int3
data16
pusha
stos
pop
sub
out
xchg
into
push
push
iret
xchg
loopne
push
cmp
das
cs
push
dec
sub
dec
push
sub
inc
cld
pusha
outsb
push
dec
repnz
jb
out
mulb
sar
push
cmpsb
xor
and
mov
loope
insb
ja
or
push
jecxz
int
ds
iret
scas
push
aaa
add
imul
jge
or
pop
xchg
insl
fcomi
out
mov
push
inc
sahf
outsb
mov
lds
jmp
cmp
pop
xchg
push
xchg
pop
or
push
cmp
jb
mov
mov
or
push
push
mov
push
and
popa
ds
add
ja
bsr
mov
ret
add
adc
out
in
lahf
bound
and
loope
sbb
add
ret
ja
and
aaa
divl
mov
add
add
fcoml
aaa
into
mov
ret
sti
push
dec
mov
jnp
es
pop
pop
outsb
sbb
mov
mov
sub
pop
sub
ret
in
pushf
inc
pop
fisttps
xor
into
sbb
sub
repnz
int3
cmp
imul
in
insl
push
les
fidivl
xor
cmp
cmc
cli
lods
cvtps2pi
sbb
pop
push
sub
jns
pop
push
dec
pusha
mov
test
aaa
and
test
aaa
inc
movsb
or
dec
jp
lahf
fucomi
mov
in
push
aad
mov
outsb
cmp
mov
jbe
mov
mov
lods
xchg
arpl
xchg
popf
shll
mov
jp
mov
ret
out
mov
pop
jge
lret
out
ret
loope
xchg
rcll
jno
dec
addr16
mov
cltd
fsubrp
add
lcall
mov
lds
inc
mov
xchg
add
add
mov
cmc
mov
jne
je
insl
hlt
add
add
push
sbb
push
mov
popf
xor
mull
test
clc
mov
daa
and
dec
push
and
push
xchg
dec
or
jae
lods
fdivrs
add
sbb
jno
adc
xchg
mov
ret
or
loope
inc
inc
and
mov
xor
ret
fmulp
inc
pop
fstl
pop
pop
test
inc
imul
dec
xchg
in
push
int
and
add
movsb
arpl
shlb
or
fadd
or
adc
pop
mov
pushf
into
repnz
repnz
aas
je
jmp
inc
aas
fildll
fwait
scas
popf
movsl
adc
jmp
ds
mov
inc
fldcw
fiaddl
sub
filds
ficomps
mov
repnz
and
jle
dec
insl
hlt
pusha
shll
lcall
add
jne
pusha
popf
pop
cmpl
add
faddl
adc
mov
or
inc
inc
loopne
inc
jno
cmp
xor
cmpsb
cli
sub
in
mov
je
fst
or
pop
pop
fdivr
xchg
int3
lods
sub
mov
loope
and
imul
mov
pop
mov
jne
jmp
and
stos
outsb
jle
mov
loop
jb
adc
jmp
sub
sbb
ljmp
in
jge
add
cmp
gs
sub
cmovns
mov
mov
mov
mov
xchg
or
xabort
xor
and
jae
pop
push
adc
aas
and
std
mov
push
test
adc
mov
adc
fnstenv
cmp
dec
iret
mov
inc
rcll
add
inc
adc
mov
out
mov
mov
cmp
sub
scas
fdivr
fnstcw
jecxz
test
ja
add
add
mov
dec
idivb
inc
cmp
test
fdivs
mov
xlat
and
clc
in
jnp
fucomip
out
mov
cwtl
mov
jnp
xchg
pop
pop
push
je
sbb
xchg
addb
xchg
subb
out
outsb
xchg
mov
jns
sahf
jecxz
das
mov
inc
mov
lahf
data16
dec
mov
cmpsb
mov
bound
fisubrl
adc
sahf
dec
aam
mov
js
sub
sbb
mov
fs
mov
cmp
notb
int
aam
pop
enter
inc
out
mov
loope
inc
xor
aad
cmc
sti
jmp
scas
jae
inc
stos
push
mov
sub
dec
fs
shll
paddsb
jnp
int
jo
cld
adc
push
cmp
jmp
sub
sub
cmpb
push
loop
add
or
lea
add
add
ret
add
xor
jb
jae
divb
add
lahf
xchg
jo
lcall
sub
mov
mov
push
cmpsl
xchg
arpl
mov
and
idivb
mov
movsl
mov
pop
ljmp
outsl
sahf
adc
sti
jns
xor
sahf
jl
sbbl
lods
pop
adc
ljmp
clc
cmpsl
test
pop
mov
fidivrl
stos
mov
push
sub
cmpsl
pop
lret
push
aam
dec
das
cmp
stos
test
and
mov
xchg
out
inc
sbb
int
add
sti
fwait
pop
pop
mov
jp
ljmp
sbb
data16
stc
cmp
sbb
and
lahf
add
cmpsl
cmpsb
lahf
add
jmp
or
loope
bound
int3
outsl
fwait
push
jno
xchg
xchg
xchg
daa
mov
test
pop
adc
sbbb
mov
add
add
ds
in
idivl
js
mov
idivl
mov
add
cmpsb
movsb
clc
daa
in
pop
pop
hlt
push
mov
cmp
and
sbb
add
or
add
call
pop
dec
ret
daa
hlt
add
mov
adc
pushf
arpl
pop
sub
lea
shll
lcall
push
fiaddl
jne
sbb
ja
dec
imulb
dec
pop
ret
es
mov
add
jnp
test
data16
adc
lock
sub
fistps
pop
call
pusha
test
cmp
inc
dec
fldl
notb
inc
es
ret
pop
test
and
xorl
cmp
pop
into
or
out
and
sarb
push
inc
outsl
cmp
stos
pop
in
cmpl
jp
addr16
xchg
negl
rorl
out
lods
dec
cmpsl
in
dec
mov
cmp
or
add
add
jecxz
inc
cli
aas
into
lret
rep
icebp
xchg
add
add
popf
dec
jmp
clc
push
lahf
in
dec
push
mov
mov
mov
ret
int
ds
push
mov
mov
fistpll
out
or
lret
sub
mov
sub
dec
ja
dec
cmpsl
jnp
sbb
lahf
std
lods
leave
test
xor
out
xchg
lods
pop
popl
push
sbb
outsl
or
pop
pop
mov
leave
mov
push
mov
pop
orb
fisubl
xor
and
xor
push
jae
cli
in
bound
ja
mov
mov
dec
call
adc
mov
and
or
in
insl
cmp
lods
pop
scas
sbb
outsl
mov
js
fildl
mov
xlat
xor
add
mov
adc
in
push
popa
ficoml
loop
mov
fcompl
xchg
dec
lods
lret
push
lret
mov
jnp
add
mov
lcall
mov
jecxz
mov
add
add
inc
jg
js
imul
mov
test
int
test
sub
cmp
adc
popf
cltd
ljmp
ljmp
call
rcrb
jmp
pop
ljmp
adc
mov
loop
xchg
imul
pop
cltd
dec
aaa
dec
push
push
mov
pushl
repnz
stos
out
inc
popa
pop
lock
imul
cmp
lock
jno
pop
mov
scas
insb
subb
lds
mov
test
xlat
cmp
rcl
cmp
movsl
rcl
sbb
call
hlt
icebp
mov
dec
test
mov
dec
jle
inc
outsb
lcall
inc
cmp
lds
and
jmp
sti
jmp
push
shlb
xor
mov
xlat
dec
push
inc
les
fsubrs
test
add
add
jae
cltd
dec
mov
jno
popf
loop
das
nop
sti
add
add
test
loopne
vmovaps
out
movsl
aad
pop
sub
std
aaa
ja
dec
push
pop
lods
push
adc
xor
xor
xchg
and
sbb
fldt
sbb
dec
adc
xor
lret
inc
jne
outsb
or
loope
lcall
jo
inc
fdivp
push
popf
adc
rcr
pop
xor
outsl
fmuls
dec
loope
aam
sub
adc
sbb
outsl
xchg
adc
cmp
call
rcrb
and
test
out
scas
dec
notl
imul
mov
adc
call
fcoms
test
dec
xchg
iret
jno
cs
es
jne
idivb
aas
dec
add
mov
pop
adcl
fwait
clc
jge
in
in
lds
repz
adc
cmpsb
fidivrl
cli
popa
cmp
xchg
add
xchg
mov
scas
adc
imul
add
push
into
nop
out
cwtl
jle
push
sub
dec
mov
xchg
add
add
out
iret
fs
adc
sahf
loopne
test
mov
adc
fadd
or
sbb
sbb
loop
std
mov
hlt
or
xchg
add
popa
jne
inc
das
pop
sahf
xchg
popa
cmc
mov
push
enter
mov
mov
xchg
lret
xlat
sub
out
shl
in
mov
push
das
add
jecxz
pop
sbb
xchg
cld
insb
jae
xchg
xor
and
push
ret
sub
mov
stc
cmp
lret
and
shll
hlt
and
scas
inc
lods
jp
adc
test
mov
outsl
sti
xchg
adc
or
out
dec
les
daa
or
nop
cmp
lahf
in
lock
mov
shlb
xor
idiv
xchg
xorl
inc
cmc
cmpsl
cmp
leave
push
push
movsl
or
push
lods
sbb
idivl
int
dec
add
add
test
jg
push
pop
push
mov
lcall
add
aad
sub
or
push
inc
jne
jb
testb
sbb
dec
or
mov
mov
push
pusha
jne
adcb
xor
or
fiadds
popf
bound
or
cmp
repnz
decb
cmp
mov
dec
fsubrs
out
pop
pop
sahf
sti
jecxz
testl
and
inc
mov
bnd
mov
mov
fists
ret
cmp
jb
pop
mov
add
leave
popl
ss
fcmovne
pop
icebp
xorl
sub
out
and
sub
add
lret
cwtl
dec
xor
sbb
xchg
mov
mov
movl
cmpsb
inc
adc
cmpsl
icebp
fwait
jo
mov
adc
xor
add
add
movsb
push
in
cmc
jne
sbb
js
out
push
inc
lahf
incb
add
into
out
cmp
sub
lods
xorl
mov
push
and
xchg
push
xor
imul
cmp
xchg
xchg
jg
loopne
push
pop
push
sub
push
lods
adc
in
dec
dec
dec
fs
outsl
cwtl
sbb
mov
in
ds
cmp
push
or
subb
adc
adc
call
aad
pop
push
in
shlb
mov
test
lahf
mov
xor
ffree
pop
insb
mov
incb
lret
pop
sbb
cltd
loope
out
and
add
cmpsb
cmpsl
pop
pop
xor
push
or
inc
mov
fidivrl
mov
or
mov
imul
aad
mov
mov
scas
pop
in
mov
movsl
orl
jge
mov
cmp
jecxz
sub
dec
aaa
and
lods
js
fdiv
popa
inc
pop
add
add
sbb
shlb
aas
out
int3
mov
cmp
jg
movsb
incl
add
lock
cmpsl
xor
xchg
fimuls
cmpsb
cmpsl
push
add
iret
add
cli
jo
mov
lods
xor
out
icebp
sub
sub
push
enter
jne
pop
ja
stos
nop
inc
inc
fmuls
stos
in
sahf
dec
fbstp
pop
mov
mov
push
in
mov
xchg
jmp
sbb
in
pop
mov
sub
sbb
push
jmp
fidivl
mov
scas
insb
push
cltd
add
pop
pushf
cmc
adc
clc
imul
inc
sub
adc
push
sbb
pop
das
jg
adc
cmc
mulb
inc
mov
test
inc
mov
ficomps
cmp
shlb
xor
mov
lods
pop
sub
dec
push
jecxz
loop
sbb
sbb
cli
outsl
cmc
mov
and
jmp
mov
cld
add
sub
lret
nop
lods
in
inc
call
das
cmpsl
loope
add
or
mov
and
jo
das
test
add
add
mov
mov
inc
add
into
adcl
xor
sbb
and
in
bound
push
sahf
jle
movsb
out
aaa
mov
mov
addr16
adc
mov
aad
add
aad
enter
or
dec
popa
mov
pop
cmp
pop
scas
jae
mov
sub
lds
push
lcall
mov
mov
sbb
iret
leave
leave
push
mov
and
sub
sbb
addr16
das
les
sarb
push
in
shl
aaa
stos
outsb
arpl
repz
jnp
mov
in
adc
loop
push
xchg
add
imul
bound
aas
jle
pop
stos
xlat
rcr
ficomps
and
pop
nop
insl
sahf
and
xchg
fimuls
lcall
or
add
es
adc
inc
stos
xor
iret
ds
lahf
xor
inc
adc
loopne
xor
jns
leave
add
add
dec
rol
lret
clc
cmc
inc
stos
repz
leave
mov
add
scas
movsb
ret
cmp
or
push
sbbl
fst
sub
mov
inc
mov
inc
pop
or
mov
imul
mov
bound
ja
pop
mov
sbb
mov
adc
dec
jmp
push
lea
jne
and
inc
lret
std
xchg
in
mov
and
shlb
mov
add
leave
jmp
sub
mov
mov
cltd
sub
xchg
loopne
xor
insb
xchg
or
nop
jmp
sti
out
push
mov
mov
pop
jge
and
fwait
out
mov
fildl
xor
cmp
int3
jge
popf
mov
or
push
push
lods
dec
les
xchg
out
push
fcoms
jae
outsl
jp
pop
popf
add
stos
movsb
lods
notl
movsb
enter
sbb
pop
mov
mov
mov
mov
add
add
std
aaa
mov
shll
call
add
add
sub
push
mov
xor
lret
shrb
pop
cmp
mov
fists
and
dec
push
cld
rolb
xchg
push
jge
shr
inc
mov
pusha
mov
sbb
cmp
ret
out
sbb
adc
fs
pslld
cmp
mov
pushf
add
add
push
mov
push
cmpb
repnz
xchg
arpl
out
scas
jnp
xchg
mov
inc
je
dec
xor
int
pop
push
movq
push
loop
jno
mov
outsl
pop
lea
out
mov
aas
lds
push
push
imul
sub
ret
cmp
loop
add
mov
movsb
add
mov
sti
in
pop
icebp
dec
push
test
jo
int
xchg
outsb
pusha
mov
inc
sbb
ficoms
popf
adc
rorb
cli
insl
out
fsub
mov
cmp
push
je
and
xchg
incb
add
insl
aam
mov
scas
add
imul
mov
add
add
fdivr
jne
cmp
divl
and
sbb
mov
adc
fldcw
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
les
scas
xor
xchg
dec
rol
out
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
