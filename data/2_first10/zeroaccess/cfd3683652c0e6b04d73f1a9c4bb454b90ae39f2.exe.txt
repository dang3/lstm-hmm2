push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
aad
jle
jle
add
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
into
leave
ss
int3
clc
std
frndint
mov
imul
out
int
rcll
out
leave
ljmp
std
sti
stc
shl
aad
fsub
loope
lret
jmp
orb
out
shr
cmp
hlt
cmp
loop
sar
cmc
clc
sti
mov
clc
or
test
xorb
int
ror
iret
sarl
in
cmp
fdivrp
test
iret
mov
out
ljmp
cmc
div
repz
shr
ret
and
addl
fmul
loope
in
shl
aam
leave
out
loopne
fdivp
jecxz
mov
loop
out
fucom
into
out
xchg
in
jmp
ret
aaa
divl
cmp
cmp
cli
std
fiaddl
jmp
out
lret
into
test
mov
fcmove
jmp
lret
neg
idivl
ret
mov
cmp
idiv
fninit
fcmovnu
repnz
aam
mov
call
std
cmc
shl
jmp
jmp
in
fucomp
cmc
aas
out
repz
lret
int
fsubr
sar
stc
rcl
push
xor
jmp
rol
ror
rcr
fcmovnu
mov
stos
xchg
aaa
or
jle
or
jle
aad
jecxz
not
fadds
mov
aas
jecxz
int
out
ljmp
fiadds
leave
in
decb
cmc
and
shr
fcmovbe
call
cmp
cmc
ror
sar
leave
shl
jmp
lret
xlat
mov
jmp
vpor
in
std
out
cld
dec
stc
cmc
into
cmp
sar
int3
std
int
sub
xchg
icebp
divl
out
cli
out
hlt
aaa
cmp
fldl
sti
jecxz
test
in
cmpl
aad
xor
not
ret
filds
testb
mov
mov
xor
lret
loopne
ret
loop
cli
call
sti
leave
std
cli
std
sti
lock
loope
xchg
xlat
in
aad
sti
leave
xor
loope
aad
sbb
enter
idiv
out
in
sub
icebp
hlt
cmp
aam
cmp
fdivrs
mov
fcmovbe
loopne
fdivp
xchg
ljmp
xlat
lret
fdivrl
repz
xlat
test
fcmovu
xlat
jmp
out
fucomp
incb
lret
repz
fcmove
cli
rcl
into
ret
shlb
repz
hlt
loop
in
loop
mov
shl
sar
out
lret
hlt
lret
cmc
filds
cmp
xchg
lret
roll
fidivl
iret
cmp
testb
hlt
fxam
fimuls
hlt
rcl
and
cmp
fcmovnb
icebp
xor
ret
jecxz
xlat
mov
loope
jmp
out
xchg
ror
aad
stc
iret
int3
aaa
into
faddl
rcr
test
adc
in
jecxz
out
fucomi
in
mov
cmp
shl
ror
fidivrl
out
aas
xlat
in
hlt
repnz
mov
test
jmp
iret
nop
xchg
rcl
rol
shl
test
lret
sar
rcr
rorb
cmc
int
fadd
nop
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
faddl
jle
add
xchg
test
xchg
aam
sub
int3
cmp
leave
shl
aas
int
rcl
rol
in
fsubrp
jecxz
out
sti
out
xchg
xlat
jmp
xor
xlat
in
aad
xlat
cmpl
sti
lea
xchg
hlt
sub
in
out
std
aaa
fdivrs
fcmovbe
icebp
icebp
stc
roll
enter
rorb
xor
ljmp
icebp
into
stc
hlt
fmull
xchg
loope
jmp
into
ljmp
fpatan
cli
std
sti
jecxz
and
sti
fsubr
lret
lret
mov
mov
loopne
ss
jecxz
loopne
fprem1
iret
ret
xchg
flds
shl
and
out
ljmp
in
rcr
fnstcw
fimull
lret
adcl
cli
idivl
roll
fistpll
or
enter
fisttpll
in
int
cmp
ss
xor
fstp
addb
in
stc
fldl
mov
ljmp
fcomip
into
fcmovnu
fst
mov
in
call
sub
in
iret
xlat
rol
ljmp
icebp
adc
fcomp
jmp
int3
in
xlat
cli
xchg
out
hlt
out
call
lret
std
stc
inc
sbb
out
repz
jecxz
sti
testb
mov
xor
out
lock
and
jecxz
rolb
stc
lds
mov
loope
stc
aad
aam
xor
rcl
mul
cmc
stc
std
enter
mov
loop
rolb
int3
fmul
aaa
std
clc
shr
sbb
shl
mov
test
out
jmp
loopne
xchg
fdivrl
shl
int
repnz
sti
out
jmp
test
test
in
ror
clc
idiv
fisubrl
jmp
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
fildl
sar
sub
jle
add
cli
cmp
cli
jmp
jecxz
mov
xchg
mov
xor
aam
xor
fmulp
jmp
in
xchg
and
out
stc
int3
in
lret
in
rcl
out
xlat
shr
lock
xor
xor
xor
addb
ljmp
int3
sub
loope
xor
shll
rcr
cmp
in
out
ffreep
ret
fadd
mov
lret
in
mov
mov
clc
cmp
aad
in
loope
shl
fdivrl
incb
mov
out
mov
enter
shr
iret
fcmovnbe
stc
idiv
int3
out
sti
div
flds
fildl
xchg
into
lock
xor
ds
cmp
cmc
dec
xchg
fmull
int3
xchg
faddp
loop
ss
icebp
fdivrp
fidivrs
cmc
int
fnclex
loopne
xor
imul
jmp
int3
shl
rclb
in
test
test
aad
out
rcr
mov
lds
testb
cmp
lock
cmp
repnz
mul
loopne
imul
loope
into
lea
in
rol
int3
xor
lret
jmp
cli
cmp
ret
test
clc
fsub
out
in
lock
iret
call
cmpl
fsubp
hlt
loopne
ret
jmp
or
lret
in
xlat
repz
cmp
aad
out
fincstp
shl
jmp
icebp
in
loopne
in
xchg
out
rcl
iret
in
cmc
cmp
stc
xlat
iret
jecxz
mov
ret
jecxz
in
mov
test
loop
iret
jecxz
int3
lret
out
shr
loope
cmp
aad
jmp
out
call
in
in
into
icebp
cld
xlat
lret
fsub
cmp
out
in
xchg
int3
enter
addl
aad
fdivp
clc
repz
fadd
aad
sub
in
inc
cld
sbb
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
call
push
jle
or
jle
mov
out
das
xor
in
cs
aad
fdiv
cmp
loopne
out
cli
add
out
sti
sti
jmp
mov
jmp
in
stc
lock
cmp
loopne
cld
mov
jecxz
fldl
lret
call
divl
fistpll
fldz
stc
shr
test
fdivr
imul
std
out
filds
out
lock
aaa
cmc
in
cli
xor
sti
cmpl
aas
jmp
out
sti
in
xchg
aad
lret
xor
cmp
jecxz
out
repz
clc
xlat
lret
int3
nop
xchg
shl
rol
out
out
lret
icebp
ret
loop
xchg
mov
xchg
mov
xchg
in
xor
xor
iret
and
in
lock
cld
xchg
out
testl
ret
std
fcomp
fnstenv
icebp
out
loope
out
in
out
int3
fsubrp
jmp
nop
iret
jmp
cmp
fucomi
fcom
repnz
jecxz
call
fisttpl
aas
hlt
jmp
in
divb
xlat
xor
shl
fcomip
shl
jmp
test
faddp
jmp
sub
std
xor
repnz
sti
ret
addb
lds
mov
in
shrl
cmp
fcmovbe
in
out
add
fcmove
xor
in
lret
xor
xor
fdivr
rcl
int
out
faddp
test
xchg
jmp
out
xchg
xor
out
cmc
fdivs
in
jmp
int
stc
testb
roll
hlt
int
shl
sub
addl
in
mov
int
out
in
lea
out
cmp
int3
repz
out
hlt
flds
out
icebp
test
out
aas
das
cmc
test
mov
and
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
or
jle
or
jle
xor
clc
out
cmc
icebp
lock
repnz
in
jmp
jmp
sub
sti
neg
xorb
loopne
filds
lret
mov
fcmove
out
mov
aam
xor
jmp
repz
call
in
jmp
xlat
lock
loop
addb
loopne
ss
in
aad
frndint
xor
fadds
in
stc
lret
test
iret
nop
mov
out
xor
xor
into
ror
cmc
aaa
clc
test
leave
lret
xchg
ljmp
icebp
fdivrl
jmp
aaa
addb
fldl
decl
ss
ss
int3
idiv
neg
mul
call
or
call
call
aam
ror
cmp
hlt
adc
clc
test
xlat
out
fsubr
in
jecxz
sub
lock
divb
rcl
cmpb
cmc
lock
aam
clc
in
test
fdivrp
call
jmp
xor
in
cmp
std
ret
fsubrp
out
test
in
cli
call
xchg
cmp
repnz
cmp
hlt
aad
testl
ret
xchg
jecxz
out
xor
loop
ljmp
sti
aam
jecxz
repnz
out
vpsadbw
into
leave
in
in
sub
ss
xlat
adc
sar
and
jecxz
adc
enter
lret
loop
clc
xor
out
fcom
idivb
int3
into
aad
and
cmp
std
cmc
rcr
call
out
icebp
out
stc
lock
jmp
jecxz
sbb
rol
jmp
test
test
fsubrp
fimuls
int
ljmp
frstpm(287
aam
jecxz
fmulp
int3
loop
cld
int
int3
iret
sub
enter
cld
not
test
fstpt
out
add
or
mov
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
add
push
rorb
jle
or
jle
fdiv
fucomi
orl
jmp
iret
jmp
out
loopne
and
iret
test
cmp
call
jecxz
ss
aad
std
cld
clc
in
cmp
aad
xlat
fidivrl
fcomp
cli
fdiv
in
aas
incl
sar
xchg
out
stc
lret
fcmovu
cmp
lock
fnsetpm(287
flds
fcmovnu
out
and
int
into
loop
sub
cli
xor
clc
out
fst
cmp
ror
cmp
ret
xlat
addl
out
out
adc
int3
int3
xor
xor
rcr
out
aas
testl
mov
mov
jmp
icebp
jmp
cmp
loopne
out
rcl
fdivp
addl
hlt
out
out
enter
fcomi
lret
stc
clc
neg
std
stc
sbb
sti
clc
jmp
mov
addb
hlt
sarl
ds
div
loopne
cmp
hlt
lret
mov
cli
orb
leave
sar
aaa
cld
fadd
rol
hlt
cmp
neg
sti
mov
ljmp
out
xor
call
call
ret
into
ds
fiadds
lock
mov
fimuls
fcom
call
and
test
in
out
cld
out
rol
and
shlb
jmp
repnz
loopne
iret
loope
shl
hlt
enter
mov
loop
std
loop
aam
xor
ljmp
shl
jecxz
ret
cld
mov
leave
xchg
xchg
aas
in
in
cmp
jmp
sarb
rcr
faddp
addb
enter
ret
mov
fsubp
fcomip
xor
in
lock
aad
repz
sar
aas
stc
fcomip
jmp
int3
fcmovu
fst
xor
xor
in
jmp
loopne
repnz
and
loopne
sub
cli
out
leave
cli
adcl
cmp
jmp
fstp
je
xchg
or
loopne
jle
or
jle
xor
sarl
sarb
out
clc
stc
fdiv
idiv
filds
xchg
rorl
sar
cli
cmp
cmp
iret
sarb
rcl
fcomp
test
shr
jecxz
out
shl
in
shlb
aam
roll
idiv
xor
fiadds
cld
int3
out
xchg
loope
out
xor
int3
out
out
out
int
cmc
hlt
fistpll
hlt
hlt
sti
xchg
mov
mov
iret
in
cmp
rcr
cmc
out
rolb
cmc
test
cld
int
xchg
xchg
mov
rcr
jmp
out
in
out
lret
xor
ret
std
sbb
clc
test
faddl
rcr
fcomp
cld
in
shr
ds
shl
in
bnd
out
xlat
fmulp
loope
shl
in
into
shl
call
repnz
test
in
fxtract
xchg
lret
neg
jmp
xchg
repz
out
out
in
lock
cmp
clc
repz
stc
leave
std
xchg
int3
repnz
fincstp
xor
aaa
cmp
loope
mul
fucom
mov
mov
xchg
aam
out
clc
sar
iret
jmp
sti
fidivl
int
repnz
movb
fldl
mov
rol
aaa
repnz
aad
out
lret
cmc
lock
fsub
not
mov
cld
std
out
xchg
rolb
cmp
out
out
cli
or
loop
in
hlt
rol
in
out
decb
in
xor
xor
in
jmp
xor
xchg
mov
out
lock
xchg
iret
in
les
in
ss
hlt
div
fiaddl
in
ljmp
mov
rcl
das
out
sarl
aad
ret
lock
test
in
mov
in
in
mov
mul
xor
jmp
iret
jmp
cld
test
jne
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
xchg
out
push
jle
or
jle
enter
fildl
repz
std
shl
cmp
xor
icebp
rcl
idiv
loop
hlt
xlat
rol
fmul
addb
xchg
mov
cmc
cmp
lock
cmp
loope
into
loop
jecxz
inc
decl
in
leave
icebp
shrb
ret
jmp
cmp
lret
int
ret
mov
fnstsw
stc
mov
mov
lret
out
loopne
aam
lret
repnz
test
cmp
repz
aam
into
jecxz
into
pause
rolb
shl
fdivrs
xlat
ror
ds
aam
std
enter
orl
out
repz
out
stc
lock
out
jmp
cmc
jmp
xor
faddp
in
loopne
lret
in
ljmp
cmc
in
xor
in
fdiv
ljmp
add
cli
lret
vpaddsw
int3
icebp
repz
xor
clc
aaa
enter
int
std
jecxz
out
test
loopne
ret
leave
nop
fxch
mov
mov
adc
aaa
aad
clc
cmp
xor
mul
fdivp
sar
hlt
sti
fcmove
fucomip
loope
call
call
stc
sub
in
test
aas
out
aam
fsubrp
test
cmc
test
cmp
icebp
ljmp
xchg
fneni(8087
in
mov
out
into
adc
mov
iret
cs
fmulp
aaa
lret
cmc
icebp
out
loop
cli
test
jmp
leave
out
repz
fnstcw
iret
hlt
out
mov
repnz
mov
loop
jecxz
nop
xor
iret
out
lret
jecxz
lock
test
cmp
loopne
fdivr
roll
out
loopne
loope
ror
ljmp
incl
or
mov
lret
popl
xchg
xor
out
ljmp
ret
shr
decl
lret
iret
xchg
xor
add
mov
mov
mov
jmp
leave
ret
int
int
mov
or
repz
adc
or
jle
call
sar
fstp
enter
fdivrl
clc
rcl
hlt
mul
in
into
movl
ss
sti
out
aaa
cmp
cli
incb
fdivrs
cmc
rol
ret
orl
aad
int
test
out
aaa
div
in
stc
aas
cmp
sbb
out
mov
out
repz
aaa
enter
fabs
xor
shl
addb
stc
mov
fucomip
mov
in
aaa
out
shlb
iret
xor
idiv
cld
mov
fucomp
orb
xor
int
repz
aam
xchg
test
fisttpll
decl
int3
out
fdiv
test
cli
test
std
out
aad
sub
out
xor
cld
cmpb
in
icebp
cld
sti
ret
xchg
fmull
mov
shl
repz
cmp
jmp
into
fmul
lock
enter
repnz
test
xchg
xor
hlt
sub
cmc
cmp
int3
ss
out
add
out
out
loope
test
into
out
repz
xlat
aad
call
rcr
xor
cmc
imul
hlt
ret
cli
shl
xchg
ror
out
out
int
int
aad
cmp
fidivrs
rcr
idivl
and
in
fucomp
out
ret
aam
cli
hlt
cmp
cmp
ret
not
lock
lret
jmp
iret
xor
cmc
xor
xor
aaa
sbb
cmp
shl
fdivr
test
lret
out
in
jmp
in
out
cmc
loopne
jmp
hlt
out
repnz
xor
stc
aad
fcmovne
ljmp
ljmp
sarb
in
int
call
sar
decl
mov
in
ret
iret
enter
in
repz
fbstp
into
jmp
aam
mov
cmpl
or
jle
fcmovbe
std
sti
lock
shl
testl
aad
in
fsubr
cmp
repnz
out
hlt
cmp
in
loop
addb
repnz
neg
cmp
jmp
stc
int3
cld
sar
jecxz
loope
ljmp
shl
call
lret
lret
iret
rcr
xor
in
cmp
and
iret
mov
lock
cmp
cmp
repz
in
out
fcomip
loopne
add
ret
sti
add
decb
jmp
repz
repnz
out
lret
cmp
aas
std
mov
lds
iret
out
mov
sub
rcr
stc
clc
cli
ss
adc
jecxz
xchg
fsincos
enter
fcomip
std
in
fdivr
fxch
sub
shlb
sti
sar
lock
fstp
jmp
loop
in
fucomip
lret
cli
out
std
aaa
cmp
repz
ret
jecxz
rcl
out
jmp
cs
icebp
lret
out
repz
into
fmul
int
jecxz
loope
mov
jmp
xchg
ljmp
xlat
stc
ror
int3
iret
aam
out
xchg
sti
mov
lret
repnz
into
mov
in
int
idivb
cld
repz
in
std
in
cld
jecxz
ret
mov
leave
out
rcl
div
in
enter
sti
idivb
cmc
fcmovu
loop
out
shl
stc
sub
mov
jmp
mov
int
cli
rcl
iret
cmp
cli
cli
lret
repnz
ret
fiadds
loopne
iret
cld
nop
call
sub
cmc
enter
in
cmp
shl
test
sar
ret
cli
test
xchg
in
fdivp
out
out
fnsave
int
shl
ljmp
in
mov
fmulp
ret
aaa
aam
shrb
int
xor
or
xchg
loop
jecxz
cld
out
iret
fidivrl
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
je
in
mov
or
jle
icebp
cli
jecxz
adc
icebp
repz
cmp
int3
cld
cmp
addl
mov
iret
ret
addb
shr
fdivrp
lock
int
cmp
cli
repnz
out
hlt
or
ljmp
ret
fidivrl
les
cld
cmc
sar
fabs
fcmovnbe
clc
orl
cmp
int
rcr
rcr
out
sti
aam
out
aas
shr
jecxz
icebp
rolb
stc
in
out
rcll
sti
lret
cmp
hlt
loope
div
sar
in
cld
shr
out
decb
aam
clc
repz
xor
cmp
aad
rcl
aad
fcmovb
lret
call
cmp
jmp
cld
ds
cld
not
int3
icebp
cmc
ds
loope
addb
jmp
repnz
fxch
cmp
xlat
out
out
enter
loop
jmp
fsubrp
ljmp
mov
xor
cmp
int3
fsubp
fldln2
sti
xor
ds
addb
call
ljmp
leave
call
cmp
fiaddl
int3
fucomip
decb
out
repz
lret
fidivl
std
in
stc
rol
cli
aam
faddl
out
out
out
xchg
loope
loopne
out
repz
call
cmc
cmp
ret
cmc
div
fucom
loopne
in
clc
faddl
fcomip
loop
stc
test
int3
shl
fcmovbe
cli
cld
icebp
lds
in
xlat
loopne
std
fiaddl
jmp
out
int3
xor
xor
aas
int
fidivrl
cli
repz
fucomip
cli
loope
cli
std
rcr
shl
xchg
xchg
loopne
loop
fcmovu
std
lret
fdiv
cmp
rcr
div
cld
ret
fcomi
shl
shr
out
jecxz
aaa
das
jmp
imul
rol
xlat
iret
cmp
idiv
sar
out
fcmovu
nop
pop
shl
out
jecxz
int
sti
shlb
dec
cld
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
into
cmp
idivb
ret
ljmp
in
icebp
int
aad
int3
xor
lock
iret
repnz
test
in
fmul
mov
out
fdivrs
ret
clc
in
ss
xor
int
aam
iret
fisttpl
call
xchg
in
leave
repnz
ljmp
loope
cmp
rcl
adc
sti
ljmp
loop
ret
cli
cld
sti
aaa
cmc
repnz
out
shl
clc
ftst
ret
enter
out
icebp
ret
jmp
int3
loope
jecxz
ret
cmp
xor
sar
ljmp
ds
in
enter
lret
fdivp
leave
cmp
in
das
cld
fucomip
sbb
in
jmp
iret
lret
test
vshufpd
aad
in
fcomp
lret
hlt
cli
cld
mov
fmul
cld
out
in
iret
sti
hlt
lock
int
call
lock
aam
cli
int
faddp
fdivr
aad
orb
jmp
dec
rol
out
in
clc
fxch
xlat
in
out
ffree
cmc
clc
enter
movl
xor
xlat
int
cmp
hlt
cmp
rol
fsubp
orb
int
lock
ljmp
cmp
iret
ret
out
repnz
rorb
out
ret
aam
xlat
aaa
iret
loopne
cmp
in
fdiv
in
ljmp
in
mov
out
in
int3
clc
ror
cmp
ret
sar
fdivr
std
in
ljmp
loopne
das
test
icebp
into
aad
jmp
loop
sti
cli
in
test
mov
stc
out
sar
aam
fdivrl
repz
clc
out
loope
mov
nop
push
int3
aas
lret
into
fadd
rcr
shr
sarl
inc
shr
fcmovne
mov
mov
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
jle
or
jle
leave
int
mov
in
fmul
repnz
cld
cmp
out
loope
shr
fcomip
fcmovu
stc
fcmovb
cld
cli
movl
jecxz
int3
cmp
int
aaa
fucomp
xor
fcomip
add
out
sti
in
lret
xchg
xchg
ss
xor
fmulp
loop
fdivrs
cli
xlat
call
out
clc
imul
cld
into
fisttpl
sub
leave
fld
rcr
fcmove
ror
loop
clc
loope
hlt
enter
clc
iret
loop
filds
ret
sarb
fldl
icebp
out
out
movl
loopne
sarl
clc
out
aam
ror
in
into
aad
fcmovnb
rorb
cmp
xor
xor
repz
lret
repz
cmp
cmc
imul
into
nop
enter
jmp
not
lock
lock
iret
loope
out
icebp
test
add
mov
cli
xchg
inc
aaa
sar
cli
cmp
ss
into
aad
sar
clc
hlt
faddl
test
addb
idiv
stc
out
in
icebp
aas
sarl
iret
cmc
fst
repnz
xor
loopne
in
xor
sub
ror
roll
ret
xchg
loopne
leave
mov
call
shr
cs
shlb
fcmovnu
out
shlb
testl
aam
fiadds
in
cmc
in
in
int
jmp
xlat
repz
xlat
incl
mov
xchg
nop
iret
xor
in
cmp
fdivr
jmp
jmp
loopne
rcl
mov
jmp
out
xchg
lret
shl
xchg
out
xor
out
fcmovu
loop
ffree
xchg
ds
fmull
test
cmc
shl
ror
call
into
in
cmpb
aas
repz
sbb
cld
mov
into
fcomip
jmp
inc
or
dec
or
movb
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
sahf
mov
or
jle
xor
aad
xor
rolb
rol
cld
mov
cli
popl
clc
vpmovmskb
fdivrs
sar
repz
xchg
neg
ret
test
mov
jecxz
int
xchg
in
mul
repnz
iret
int3
lret
fdivp
or
idiv
out
test
mov
repz
jmp
idiv
lock
div
rcr
fiaddl
int
stc
cli
mov
test
leave
xor
repz
aas
fcmovb
xor
jecxz
test
hlt
in
test
nop
sbb
lock
out
int
repz
aam
rcl
jmp
mov
in
ljmp
call
leave
leave
jmp
leave
hlt
cmp
fucomip
lock
loopne
in
in
out
cli
xchg
out
and
leave
repz
in
int3
out
cmp
sar
ds
test
add
xchg
cld
mov
std
in
test
jmp
call
xor
aad
adc
xchg
stc
cld
mov
incb
out
hlt
ret
fidivl
iret
not
out
aas
in
ljmp
xchg
fdecstp
cmp
aad
aas
sti
hlt
loope
clc
repz
stc
in
jmp
fstp
jecxz
std
call
iret
ret
repnz
xor
aas
roll
xor
in
cld
test
ret
out
fucomi
aas
std
rol
incl
mov
in
xchg
out
rol
iret
xor
lret
clc
repz
fsub
out
out
mov
lret
repnz
out
fdivs
hlt
ss
mul
call
in
loope
in
mov
cli
loopne
shl
in
mov
xchg
fdivr
lret
aam
cmp
test
cmp
iret
aam
lock
stc
ret
xor
shr
fmulp
loopne
ljmp
jmp
ret
addl
mov
jmp
int3
enter
lret
int
stos
test
es
or
or
jle
out
clc
mov
adc
repz
in
ror
ljmp
cmpl
fyl2xp1
in
sbb
loope
into
int
aas
xor
fldpi
fcmovne
aad
cld
ds
neg
loope
repz
cld
imul
xchg
call
hlt
fmul
fmul
ljmp
ret
inc
rcr
clc
out
jmp
iret
mov
std
loop
lret
cld
in
clc
fdivp
in
into
out
std
ror
mov
and
repnz
leave
vpaddusw
ss
fcmovbe
aam
xchg
lret
leave
out
mov
shl
hlt
cli
cmp
cmp
clc
ret
xchg
and
out
fcomi
leave
rcll
aad
cmp
lock
lock
aas
mul
push
les
out
std
lret
xchg
enter
aad
fcomi
in
xor
in
into
rol
cld
shl
cli
ror
int
cld
cld
fucomp
int3
iret
xchg
iret
out
hlt
into
in
fchs
fdivl
adc
repnz
cmc
ret
test
aad
fmul
std
xchg
into
mov
xchg
in
aaa
sub
shr
cmp
ss
sar
std
or
orl
jecxz
out
cmc
in
aam
std
cld
loope
fld
into
cmp
rol
repz
loope
out
fsubr
iret
sar
mov
in
xchg
loope
das
jmp
cmp
fcos
vpmovmskb
mov
jecxz
shl
loop
in
call
jmp
aam
repnz
aad
cmp
xchg
out
test
loope
loope
jmp
jmp
fdivp
fldln2
fmulp
lock
rolb
out
stc
test
xchg
out
repnz
cmp
div
addl
out
out
icebp
loop
in
hlt
xor
ss
jmp
fcom
ds
cmp
in
jmp
nop
xchg
loopne
xchg
mov
sub
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
out
ror
fmul
cld
cmp
cli
aas
sbb
xchg
call
in
test
or
imul
in
xor
fdivr
cmp
fcmovnu
adc
rcr
stc
cmc
test
fsubr
cld
xor
in
std
lea
out
sar
cmc
inc
or
fnstcw
fcmovnb
fucom
mov
test
jmp
jmp
loopne
mul
xlat
mov
mov
fcomip
aam
lock
fdivs
cmp
rcr
stc
in
shr
loope
fmull
sti
loop
lock
out
fsubr
loopne
lret
stc
fcmovbe
xchg
test
into
lret
in
mov
in
rol
cmc
repz
neg
ret
shl
clc
cli
stc
fsubr
decl
in
lea
out
cmc
aad
jmp
in
loop
call
out
xchg
std
xorb
xor
test
ss
sti
repnz
mov
div
fsubp
call
ror
xchg
sar
jecxz
out
enter
int
cmc
fdecstp
into
shl
mov
test
cli
mov
test
loop
ss
std
aad
xor
sti
cmp
std
fsub
fsub
into
mov
in
int3
ret
int3
leave
xor
push
sarb
ret
jmp
idiv
fsubr
leave
into
lock
aam
out
xor
leave
cmp
shlb
std
and
stc
iret
aas
xlat
std
or
lock
ror
icebp
mov
rcr
xor
enter
neg
cmpl
test
in
in
cld
or
jmp
test
iret
out
std
into
cmp
loope
aad
fildl
out
xchg
nop
int3
ret
in
in
fidivrl
jmp
hlt
xlat
ror
repz
cld
out
fdivr
fisttps
iret
ljmp
xor
repnz
enter
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
lret
test
or
jle
ret
jecxz
idiv
jmp
push
lock
shl
out
xor
xor
hlt
aad
in
in
in
loop
adc
fmul
in
int
fiaddl
not
iret
xlat
int
ds
std
ror
icebp
rcr
add
rcl
aas
sar
orb
lock
xor
in
rcr
fst
fidivrl
jecxz
jecxz
in
aad
sti
cld
loopne
in
ljmp
cli
std
in
shll
icebp
std
ffreep
cmp
ret
in
cmp
clc
xchg
cli
int3
lret
shrb
int3
fld
into
fst
cmp
repnz
shl
shl
shl
out
fiaddl
rcll
ret
clc
out
fucomip
jmp
std
cmp
sti
out
std
out
fisttpll
ljmp
out
cmp
loopne
fucom
sbb
test
out
lret
fimuls
int
in
out
repz
leave
in
std
aad
loope
inc
cmpl
neg
icebp
shl
xchg
mov
call
fucomi
cmc
repnz
int3
jecxz
addb
addl
lret
xchg
lock
fxam
into
xlat
call
ds
rol
rol
cli
div
ficoml
in
fiadds
xor
cmp
call
roll
leave
aam
leave
addb
adc
xor
in
clc
aad
sti
call
cmc
aas
hlt
jmp
ret
out
std
jecxz
int3
lret
adcl
lret
xlat
loopne
cli
mov
cld
cmp
out
in
sti
fmul
in
xchg
rcr
enter
lret
out
repz
fcom
loope
lret
fincstp
fldl
mov
test
loop
shlb
cmp
aad
icebp
fcmovnu
in
iret
test
loope
cli
call
in
jmp
mov
int
xor
ljmp
int3
cld
iret
stc
cmp
fxch
mov
leave
mov
ret
orl
add
inc
cld
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
jo
and
or
jle
out
mov
out
int3
fmul
repz
repz
into
cmp
jecxz
loope
cld
ljmp
test
in
les
sti
hlt
stc
cmp
cli
lock
sbb
fsub
ds
mov
loop
nop
mov
test
in
loopne
ret
cmp
lock
leave
ror
xlat
aad
test
xchg
roll
lret
xor
cmp
cmp
loopne
int
shl
ret
out
loop
out
out
stc
addb
xor
ljmp
icebp
cli
lds
fcmove
out
rcl
int3
sar
jecxz
iret
sub
leave
aam
sar
mul
xchg
cld
jmp
mov
sub
out
xor
sar
sarl
out
cld
fisttpl
out
stc
lock
lret
idivb
repnz
lret
aam
shl
ds
fdiv
ds
loop
mov
xchg
sar
fmul
out
int3
out
stc
jmp
loop,pt
iret
iret
add
fcmovnbe
std
test
xchg
out
shll
out
in
xor
ss
cmp
ljmp
leave
xchg
xor
icebp
aad
neg
cld
aaa
shr
out
stc
ret
cld
shl
rcl
test
lret
rorb
aam
int3
cmp
stc
in
int3
in
int3
shr
stc
xchg
cmp
xchg
stc
xor
iret
iret
aaa
clc
aas
in
aam
call
fisttpl
out
iret
in
int3
loopne
out
repnz
in
shl
aad
fucomp
test
addb
xchg
in
jmp
std
iret
int
aas
xor
in
lock
aad
fcom
fadds
cmp
cmp
test
fmul
icebp
lret
xor
out
cmc
jmp
cli
fadd
ds
clc
std
cld
in
lea
hlt
aas
in
jmp
ror
cmp
je
jmp
aam
int
aad
fldt
sbb
or
jle
cmc
cld
in
flds
cli
lret
mov
aaa
out
lret
icebp
cmp
fdivr
loope
sbb
aad
fimull
in
lock
rol
icebp
rolb
aas
aam
loopne
mov
into
in
loope
in
nop
sub
loop
ss
cld
out
fdivrp
fcom
fsubr
stc
mov
faddl
mov
jmp
leave
rcl
cmp
ret
iret
in
flds
in
into
sar
jmp
out
xlat
stc
sub
aad
clc
xor
fdivr
cmp
sbb
call
nop
xchg
xchg
xor
in
iret
ljmp
xlat
iret
cld
sarl
fisttpl
testl
aad
jmp
lret
aas
sti
lret
aas
not
vpaddd
jmp
xor
shl
xchg
jecxz
int
jmp
in
hlt
cmp
std
stc
loope
aam
fdivrp
xlat
fadds
lret
loopne
loope
xor
xor
fcmovnu
sti
cmp
fstp
mov
lret
addb
in
pushl
hlt
in
xlat
out
int3
repz
fadds
dec
faddl
mov
fnstenv
out
xor
in
testl
sub
or
repz
xor
lret
ss
stc
out
idivb
lock
aas
fdivr
enter
fimuls
ret
out
jmp
loope
rcr
loopne
shl
inc
test
jecxz
jmp
nop
loop
out
jmp
xchg
repz
out
sti
xlat
jmp
ds
fsubr
jecxz
fdiv
call
int3
hlt
rolb
fcmovbe
fcmovbe
out
not
clc
shl
cmp
loopne
test
int3
or
jmp
cmp
in
rcl
aam
out
clc
shl
sti
fld
cli
xor
clc
mov
mov
jmp
aam
iret
int3
fst
outsl
fmull
add
jle
or
jle
in
in
xchg
jmp
enter
rolb
cmp
out
loope
fisttps
test
loopne
enter
cmp
xlat
shr
cmp
repz
out
ffree
mov
cmp
repnz
call
cs
rcl
std
fcom
out
std
inc
leave
ljmp
cmc
mov
das
fdiv
ret
lret
cli
lret
stc
test
sub
test
lea
cmc
xor
hlt
fdiv
repnz
fucompp
loope
in
xchg
xchg
test
jmp
out
cmc
cmp
out
ss
in
fcmovu
ret
mov
test
xchg
lret
lock
enter
fcompp
fyl2xp1
clc
cmp
shl
rorb
mov
in
mov
fucomp
iret
lret
out
icebp
enter
fnstcw
into
into
repz
clc
fcomp
mov
fcmovb
lret
xchg
jmp
cld
sti
cld
xchg
mov
jecxz
repz
call
clc
out
fcompp
aad
cmp
xlat
out
lea
icebp
fsub
ffreep
out
sub
leave
hlt
icebp
ss
out
ret
fildl
fmul
mov
into
sti
fcoml
cmp
out
out
out
int
xlat
hlt
hlt
sti
loope
sti
loope
loopne
xchg
jmp
jmp
xor
aam
stc
sti
jmp
fiadds
loop
cmp
call
into
cmp
jmp
xor
rcr
add
xlat
fninit
repz
les
out
jmp
fnstenv
xlat
rolb
out
test
fdivrp
in
rcr
decb
lret
rol
out
and
lret
cld
out
call
clc
in
out
sub
mov
lock
lock
cmc
shr
lret
aam
fsubp
ret
ret
in
lock
fsubr
sar
fisttpll
jmp
ret
xlat
int
fstp
cltd
sbb
sub
or
jle
in
int
fcmovnu
fcmovnb
rol
fcomp
aas
loope
testb
xchg
in
into
cs
aam
cmp
not
std
ss
aam
rol
mov
jecxz
jmp
xchg
loop
ret
out
xlat
clc
cmp
fdivrp
int3
cmp
xlat
repnz
in
cli
sub
cmc
in
clc
int
jecxz
cmp
dec
ror
cmp
loopne
aas
les
fmuls
xor
ror
cmp
lock
sub
cmp
enter
nop
faddl
in
xor
lret
ljmp
lds
cmc
addl
xchg
les
int3
lret
call
test
icebp
aad
incb
ljmp
repz
xor
xor
add
stc
shl
call
fxch
mul
dec
hlt
test
into
jmp
cld
cmp
lock
fcom
fst
call
loop
loopne
sti
or
hlt
cmp
aaa
lret
iret
out
int3
rcl
rcl
sti
hlt
xlat
neg
loope
push
fisttpll
dec
into
out
repz
out
ljmp
ret
mov
decb
hlt
lret
int3
shl
repz
div
int
cli
lret
out
add
aad
loop
jmp
notb
in
cmp
iret
xor
repnz
mov
repnz
or
cmc
in
lock
fldl2t
test
in
int
xchg
sti
mov
and
nop
xor
imul
idivl
fdivrs
int
sarl
out
stc
ret
cld
fld
fmull
jecxz
subl
xor
fucomip
neg
repz
sar
in
ds
ljmp
icebp
test
out
repnz
clc
in
cmp
cmc
xchg
add
add
rorl
add
jmp
rol
xlat
int
arpl
mov
xchg
outsl
fcoms
sub
or
jle
jmp
and
jmp
lret
iret
hlt
out
xchg
xor
xor
jecxz
stc
iret
stc
aad
ret
loope
icebp
sti
sti
xor
test
jmp
xchg
in
push
sub
sar
xor
repz
loope
aad
rcl
aad
loopne
test
leave
fsubp
xchg
test
xor
cmp
fcmovu
ss
sar
shl
ret
xchg
mov
fmulp
mov
fsubp
xchg
adc
lock
repz
clc
fidivs
adc
aad
cmp
fdivr
fsub
xchg
icebp
sub
int
int
into
clc
stc
jecxz
stc
int
jecxz
div
out
fdivrp
jmp
xor
xlat
aam
fistpll
rcr
sar
cmp
call
loopne
clc
clc
fdivrp
decb
not
xor
cmp
cli
lret
out
ret
shl
test
test
ret
mov
lret
out
call
xor
ljmp
or
int3
fsubrp
xlat
jecxz
cld
rorb
aaa
in
sub
dec
fadds
hlt
leave
aad
idiv
iret
shr
xchg
out
aas
fld
repnz
out
std
clc
cmp
rolb
neg
fsub
xlat
sub
mov
sub
repnz
test
cmp
aad
fadd
cld
xlat
test
out
out
leave
loop
fidivrl
hlt
fiadds
rcr
out
hlt
testb
faddl
rcl
clc
out
xor
shl
into
not
cmp
xlat
iret
fsub
fsub
out
dec
into
sti
call
jecxz
xor
lock
xor
in
cmp
out
int
repnz
std
fmuls
enter
orb
cli
ljmp
jecxz
cli
test
hlt
cmp
icebp
icebp
out
int3
idiv
lret
icebp
in
int3
hlt
sbb
repnz
mov
test
int
fnclex
ljmp
inc
in
add
add
enter
ret
xorb
std
shrb
jle
aaa
cmp
lret
repz
stc
sti
mov
mov
xchg
jmp
imul
jmp
call
ret
adc
fadd
loope
mov
jecxz
call
clc
bnd
out
add
into
lock
in
ret
test
nop
mov
in
repz
lock
cmp
fcomip
leave
lret
cmp
clc
out
div
incl
popl
icebp
ljmp
clc
ds
cmp
stc
rcr
in
cmp
clc
mov
in
in
iret
xchg
jmp
std
cmp
loopne
into
test
dec
enter
enter
les
fmul
xor
fcom
fidivrs
divl
in
shl
xchg
adc
xchg
lock
int
xchg
jecxz
fcmove
fstp
cmp
aam
sti
aad
aam
ljmp
in
roll
int
clc
hlt
cmc
jmp
xlat
xchg
stc
std
xchg
mov
jmp
shl
rol
fxtract
xlat
icebp
rcr
hlt
int3
ds
repz
sti
repnz
jmp
int3
int3
iret
cli
xor
ss
sti
cmp
hlt
faddp
aad
neg
mov
ljmp
out
vpsllq
out
fcomp
fdiv
iret
clc
idiv
aad
repz
fstp
div
mov
in
int
in
testb
iret
out
fnstenv
aaa
testb
mov
incl
ljmp
ljmp
cmp
into
dec
loop
mov
out
sar
fists
xor
int3
sti
out
hlt
stc
ret
fcmovnb
loop
mov
les
stc
les
fsubr
lret
repnz
iret
into
cld
shl
rcl
rcl
and
fucomp
aad
out
int3
xor
imulb
aam
in
repnz
hlt
hlt
into
mov
xor
jmp
leave
xchg
aaa
cmp
fwait
into
das
jle
or
jle
loopne
in
orb
shl
cmc
loop
imul
cmp
lret
repz
fsin
into
ret
mov
int
xchg
rol
mov
xor
shr
iret
cld
loope
out
fmul
repnz
rcr
neg
fstp
in
jmp
jecxz
iret
in
enter
in
hlt
cmp
repz
aas
sti
xlat
out
fcomp
mov
cli
xchg
call
hlt
nop
ror
aad
aad
xor
lret
cld
jecxz
loopne
rolb
in
loopne
orb
lds
cli
leave
fdivp
repz
test
fsubp
mov
xlat
std
testl
neg
lret
fmul
lock
xlat
aas
ljmp
shr
mov
cli
fmul
xchg
xrelease
shl
ror
ljmp
out
shr
sti
test
xchg
out
in
decl
ljmp
lret
fldl
hlt
addl
xchg
sarl
out
in
std
jmp
cmp
cmp
fldl
lea
cli
lret
dec
mov
repz
xor
std
rcr
shlb
ror
loopne
xlat
fadds
sub
mov
lret
lret
out
stc
icebp
cmp
aad
cmp
loopne
addb
ljmp
cmc
xchg
ret
cmp
xor
repz
in
cmp
mov
call
int
loopne
icebp
mov
rcl
out
imul
fcmovu
fst
loope
hlt
iret
fucom
call
ret
aas
in
testl
fsubr
sti
shr
out
hlt
cmp
aad
stc
clc
fsubr
jecxz
xchg
sti
repnz
rcl
xchg
xor
lret
xor
int3
in
int3
stc
jmp
in
test
fiadds
sti
fldl2t
fcmovu
sub
out
lret
jmp
ss
out
fdiv
int
sti
cmp
sti
rcl
ret
ret
cli
loope
addl
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
rcll
in
into
rcl
stc
dec
aad
repnz
loope
addl
test
jecxz
in
stc
xor
cmp
idivb
iret
repz
lock
fmull
ror
jmp
xlat
cmp
jecxz
sti
cmc
aam
fyl2x
repz
repz
aaa
int
call
sarl
mov
incb
in
ret
enter
das
into
cmp
aam
out
call
add
repnz
lea
xlat
hlt
in
cmp
out
int3
xlat
cmp
loopne
filds
mov
sbb
int3
jecxz
in
xor
out
clc
int
int
ret
and
aad
ret
out
xchg
ljmp
fsubr
cmp
in
cld
fdivr
in
cmp
sar
test
mov
loope
lret
std
nop
adc
ss
stc
ss
repz
jmp
aas
cmpb
or
loop
mov
jmp
shr
iret
enter
das
div
std
int
adc
clc
lret
jmp
rolb
cmp
call
fcmove
fcmovnu
rol
fmull
mov
mov
enter
repnz
lret
jmp
jmp
loope
enter
loope
in
cmp
stc
fcmovu
xor
sti
icebp
std
xor
mov
mov
enter
fmul
sub
int3
in
loop
call
cmp
aam
cmc
shr
ret
out
call
out
sti
repz
out
in
sarb
leave
cmp
sarb
fdivr
out
loopne
in
loop
fists
xchg
hlt
xor
fsin
ljmp
cmp
jecxz
xchg
test
mov
lock
fprem
aaa
std
out
repnz
clc
in
mov
mov
add
jmp
ret
enter
int
aas
icebp
jg
xor
jle
add
out
div
loope,pt
in
testb
hlt
lock
icebp
xor
cmc
ret
fsubr
cmp
cmp
hlt
adc
clc
ffreep
mov
xchg
into
std
test
aaa
ljmp
out
cli
iret
not
std
in
in
int
loope
das
into
int
icebp
xor
fxch
fsubr
stc
icebp
fsub
out
enter
test
in
loopne
sub
cld
shl
shr
leave
fstp
loop
loopne
hlt
shl
in
loopne
cld
loop
mov
cmp
jmp
int3
int
fildl
xlat
filds
decl
lock
sarb
cmc
fmulp
cmc
cmc
fiadds
mov
sti
int
mov
div
icebp
xor
xorl
cmp
shr
fcmovbe
xchg
clc
xlat
in
cld
nop
repz
out
int3
in
fidivl
hlt
hlt
sbb
sbb
clc
in
mov
lret
in
loope
call
aam
cmp
cmp
fucomi
out
test
mov
call
jmp
fadd
fildl
leave
xlat
adc
or
mov
stc
out
in
aad
cmp
sti
and
in
decl
xchg
xor
das
fmul
cmp
aad
int
repz
fsub
lret
call
add
icebp
out
xor
loope
sarl
loop
jecxz
out
mov
into
lret
jecxz
mov
out
das
in
fcmovnb
ljmp
into
loop,pt
fcmove
incb
and
adcb
in
in
cmp
in
ds
fucom
ffree
call
cli
ret
jmp
decb
cs
xor
xor
shl
cmp
int
ret
ret
cmc
fldl
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
mov
xor
jle
sub
inc
shll
lret
ljmp
leave
repnz
frndint
and
cmc
aad
cld
int3
fdivrp
shr
cmc
out
lock
aad
into
shr
out
cld
stc
fdiv
fdiv
loopne
out
add
mov
lock
fcmove
cmc
jmp
in
fadd
cmp
sti
and
loop
mov
std
jmp
mov
jmp
test
loopne
lds
cmp
clc
cmp
jmp
in
fxch
in
out
int
loope
iret
xor
fucomi
fptan
int3
loopne
cmp
loope
testb
fcoms
out
rol
aam
fsubr
enter
aas
lock
not
xlat
flds
jmp
xchg
call
sarb
rcl
hlt
aaa
shl
faddp
rcr
orl
adc
ss
call
fcomi
shl
sti
hlt
repz
jecxz
in
in
xchg
leave
leave
mov
ror
iret
int3
xor
repz
aaa
aas
in
aas
sti
cli
fcmovu
rcr
loopne
mov
mov
mov
loop
sti
out
out
lret
int
stc
aad
neg
mov
rorl
sti
fiaddl
out
ret
cs
cld
loope
repnz
fdivrp
fdivr
cmc
fldl
ljmp
shlb
in
sarl
cmp
fstp
aad
repnz
aas
aam
sti
fadd
mov
lret
in
shrb
ret
clc
cmp
in
icebp
xor
int3
out
xor
std
cmp
fstpt
sti
fsts
cmc
in
sub
leave
out
flds
ret
mov
imul
fisttpl
aam
shl
loope
cmp
into
jmp
fsubr
out
cmp
test
loop
ffreep
hlt
sbb
mov
hlt
test
sarb
cmp
ror
iret
repnz
out
cli
jmp
mov
enter
mov
repz
in
mov
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
hlt
cmc
icebp
cmc
cmp
in
jecxz
repz
aam
leave
lock
jmp
ror
leave
fadd
rcl
cmp
jecxz
iret
out
cmpb
loopne
mov
mov
cmp
cli
jmp
cld
sar
out
jmp
fsubp
in
xchg
addb
ret
aad
xor
shl
shll
hlt
ret
icebp
faddp
jmp
fcomp
leave
enter
std
in
xchg
lret
aam
xor
into
fmul
into
neg
clc
loopne
out
sti
rol
movl
xor
imul
fdecstp
out
fmul
idiv
xlat
sti
loopne
sar
fadds
int3
mov
xor
fldlg2
cmp
ret
cmp
aam
aad
clc
loope
jmp
aad
cmc
cmp
std
cli
cld
fistpll
rolb
xlat
mov
lret
jecxz
jmp
cmp
iret
xor
ljmp
xchg
rcr
cld
shl
mov
test
xlat
hlt
divl
std
shl
cli
test
xor
fucomp
incb
xor
in
leave
in
cmp
hlt
div
fnstcw
iret
add
enter
sbb
rcl
out
lret
loope
sar
sti
in
cmp
rcr
in
xchg
out
aam
test
lea
call
ljmp
shl
rcl
aad
mov
out
out
repz
ss
out
out
fstp
aaa
cmc
stc
iret
out
test
loopne
shl
jmp
mov
sti
leave
out
enter
out
cmp
cmp
out
cld
hlt
cmp
leave
cld
cmp
in
xchg
ret
int3
lret
cli
xlat
cmp
ljmp
sti
jecxz
aam
mov
addl
decb
aam
leave
stc
sti
cmp
shll
ret
out
ret
cmpb
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
repz
mov
cmp
jle
ljmp
int
in
cli
call
sti
out
clc
cmp
addl
or
ljmp
icebp
jmp
fdivr
cmp
fistpll
test
loop
in
call
into
or
in
aam
out
adc
cmp
icebp
cld
sti
test
sbb
in
xchg
filds
repnz
cmc
out
xor
cmp
not
aas
ljmp
lret
loope
ror
addb
sti
fst
jmp
cmc
les
cli
xor
in
lock
mov
jecxz
shr
repz
cmp
jecxz
push
div
repnz
leave
fsin
shl
shl
in
test
loop
out
ret
leave
repnz
fincstp
sti
in
ds
lock
cld
cld
aad
int3
int3
mov
xor
enter
cmp
adc
jmp
incl
test
fmulp
nop
repz
divb
stc
cmp
int3
jmp
lock
hlt
ljmp
fxch
int3
repz
rorb
jmp
out
aaa
aad
sti
ret
sti
loope
test
call
clc
stc
mov
cld
loop
enter
iret
aaa
aaa
sarb
out
loopne
jecxz
rcr
sti
loope
aam
les
out
lock
not
cmp
clc
cmp
lock
test
aaa
xor
mul
fsts
fnstsw
out
jecxz
jmp
aas
shll
testb
aad
mov
ret
in
jecxz
leave
std
xchg
int
in
lret
xor
call
xor
ljmp
fcmovu
mov
lret
jecxz
icebp
xchg
rclb
aam
aad
std
ljmp
cld
fdiv
mov
jmp
fists
in
jmp
rcr
fadd
shl
faddl
mov
ljmp
aam
int
shr
fsubr
fdivr
fdivr
cmp
cmp
hlt
rcr
in
cmp
repz
xchg
mov
repz
cmp
stc
fidivl
sar
clc
ret
mov
sub
mov
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
mov
push
cmp
cmp
jle
fdiv
in
sbb
ret
sar
fucomp
into
xor
xlat
into
cli
in
enter
div
ss
loop
shl
lret
clc
mov
repnz
test
mov
out
cmp
loopne
clc
clc
loope
aas
and
lret
lret
mov
std
loop
rcr
out
icebp
lret
in
out
leave
loopne
in
fnsave
call
out
loopne
icebp
in
rclb
icebp
xor
out
sar
lret
xor
lock
xlat
rcl
sbb
loopne
sub
shr
in
shl
into
out
std
sti
aas
xor
xlat
roll
enter
fmulp
call
ret
aam
cmp
leave
sub
testb
mul
mov
loopne
in
icebp
loop
leave
enter
xor
out
jecxz
shr
ret
clc
in
into
test
lock
shrb
out
clc
xor
out
fdivrs
clc
sti
cmp
std
call
mov
cmp
int3
fincstp
in
sbb
imul
in
cmp
cmp
addl
in
jmp
sub
fdivr
out
cmc
incb
fsubr
loope
mov
jmp
xchg
in
repz
imul
out
lock
adc
fnstsw
ret
fucom
int3
cld
mov
mov
xor
out
hlt
ss
cmp
loop
loop
std
repz
mov
stc
enter
shl
in
xchg
cmp
jmp
ror
leave
into
xor
sti
lock
addl
lock
orl
mov
in
cmp
fcomip
aad
rcl
shl
ds
ljmp
iret
xchg
in
out
into
xor
shl
fdiv
int
loop
rcr
roll
or
fisttpll
xor
idivl
cmp
leave
in
ds
sar
addl
xchg
xchg
xchg
ret
ljmp
cmp
stc
iret
cmc
aas
hlt
aad
test
out
xchg
fmull
int3
xor
cmp
icebp
iret
rcl
movl
jne
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
sub
mov
cmp
jle
fadd
test
mov
rcll
cmp
enter
roll
aas
xlat
icebp
xlat
out
ret
in
std
out
std
fdivrp
rol
clc
call
rcl
ljmp
loopne
fcomp
xchg
out
fmull
enter
xor
loop
inc
out
push
neg
out
mov
lret
in
clc
clc
aam
call
lret
lock
jmp
ljmp
cmc
rol
in
sti
stc
fcompp
stc
ljmp
ret
xlat
leave
fucomip
stc
jmp
out
ror
fdiv
repz
out
cmpb
stc
shl
loop
aam
mov
jecxz
orl
cmp
cmp
xlat
cmp
ret
div
fsub
rcr
out
leave
or
out
lret
rcr
xor
sti
icebp
ret
jmp
jmp
std
in
std
into
xchg
out
xor
xor
fcomi
std
lret
repz
cmp
cmp
in
ret
jecxz
int
addb
int3
lret
sti
repnz
in
cmp
iret
shl
xchg
jecxz
loope
in
mov
in
ljmp
lret
xor
fdivp
fadd
aam
call
in
mov
out
div
into
aaa
out
lock
out
lret
cmp
stc
fdivrp
out
cmc
fucomp
test
xchg
into
xchg
mov
enter
out
jmp
cmp
sti
loop,pt
cli
leave
loopne
jecxz
clc
mov
int
into
xorb
fcom
call
enter
lock
cmp
aas
call
shr
out
nop
ret
shl
xor
cmp
cmp
rcr
in
sar
loop
mov
fisttpl
mov
sarl
lock
out
in
mul
repz
lret
cld
loop
iret
rcl
call
jmp
lock
loope
xlat
fcomi
repz
in
addb
iret
out
xor
sub
stc
cld
rol
cli
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
lret
sbb
sarb
add
fldl
out
test
mov
fistl
rcl
jmp
cmc
xor
repnz
sti
repnz
push
shl
in
out
out
xchg
xchg
loop
ret
shl
out
icebp
lock
xor
aam
loope
shl
addb
fadd
call
sbb
xor
jmp
lock
fstp
std
cld
test
rolb
in
lret
ret
icebp
mov
loop
xlat
out
out
xor
aam
cli
cmp
in
cli
out
lret
out
mov
out
fimuls
repnz
aam
repz
faddl
shl
xchg
out
addl
aaa
cmc
xor
fld
test
out
sti
mul
fcmovnb
int
test
xor
ror
ret
jmp
lret
addb
xchg
jmp
into
ror
xchg
loope
stc
int
cmp
iret
ror
shr
into
repz
cmp
mov
loop
stc
xchg
jmp
xor
xor
sarb
stc
ret
enter
clc
lret
fsubr
loop
in
int3
out
xor
clc
hlt
cmp
cli
cmp
sti
in
in
shl
ret
rcr
loopne
ret
in
cld
ret
fdivp
rcl
shl
icebp
in
xor
jmp
cmp
rcl
ret
cli
out
std
out
decb
idivl
hlt
iret
lret
std
sub
idiv
loop
mov
and
or
lret
ljmp
loop
cmp
cmp
aad
std
into
lock
hlt
jmp
sti
test
lea
shlb
aam
shl
fmul
xlat
in
jmp
sti
aas
fdivr
rorl
int3
loop
sti
std
addb
out
not
repnz
cmp
stc
cmp
not
enter
xlat
out
enter
repz
xchg
int
xor
aad
fdivs
jmp
cmp
call
jmp
out
ljmp
in
into
shl
fmul
lret
repz
cli
out
xchg
rorl
lret
incl
leave
out
cld
shlb
filds
ret
cld
inc
add
push
add
add
leave
lret
aad
flds
ja
rorl
jle
fdivrp
stc
mov
mov
xchg
in
xchg
loop
in
jecxz
shlb
rol
fcomp
xor
icebp
sti
in
jecxz
hlt
repz
mov
jmp
shl
enter
idiv
sar
in
fcmovb
cld
les
loopne
iret
xchg
ljmp
out
xlat
cmp
aad
sbb
ret
mov
imul
fsubr
leave
mov
lock
repz
xor
int
jmp
ss
cmp
neg
stc
sub
adcb
in
ss
cld
aam
cli
icebp
cmp
aas
out
loop
fucom
lret
loopne
mov
in
xor
xor
std
das
std
cmp
rcr
loope
testl
fcmovu
lret
fcomip
shll
lret
sti
in
aaa
icebp
sarb
roll
in
addl
xlat
lret
enter
xor
hlt
iret
aas
aad
sti
fld
mov
aad
cmp
loop
ljmp
xor
mov
clc
idiv
rolb
int
std
xchg
fnstenv
xor
xor
lret
cmp
int
cmc
cmp
cmp
add
fdivr
iret
loopne
lret
div
aaa
xor
in
cmp
int3
cli
into
loope
sarl
std
sti
addb
add
xchg
repnz
repz
loopne
leave
cmp
out
rolb
ffreep
cli
out
repnz
out
imull
xor
cmp
cmc
int3
cmp
out
out
into
xlat
lret
test
leave
fdivp
xchg
aad
sti
out
fld1
lret
fucomp
cmp
icebp
xlat
xor
enter
ret
in
xlat
lds
mul
iret
jecxz
stc
ss
iret
div
rcr
repnz
shl
out
fsubrp
loop
lret
in
sar
aaa
cld
vpand
fadd
sar
cmc
addb
mov
out
xchg
xchg
lret
xor
fsubr
repz
loop
into
aad
xchg
fstp
ret
sbb
rolb
int
repz
clc
shl
or
push
add
add
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
test
clc
mov
or
mov
shl
imul
aam
fucomi
cli
jmp
fcom
neg
incl
in
loopne
std
ljmp
cld
aad
sbb
ret
jecxz
leave
test
xlat
std
mov
aam
sub
repz
aad
fcmovu
out
out
add
jmp
sbb
ror
cmc
in
ss
into
loopne
fcmovnbe
test
fadd
sar
lret
fisttps
xchg
aad
enter
aam
ss
xor
int3
xorb
aas
iret
out
loopne
loope
xchg
popl
not
cli
jecxz
stc
shr
in
sti
icebp
cld
hlt
rcl
out
xlat
incb
lret
loopne
dec
out
out
sub
xor
cmp
cmp
out
xor
fsub
addb
in
loopne
into
xchg
loop
call
aam
lock
sar
out
fcmovnb
test
fsub
loop
fmul
int3
leave
shl
jecxz
xchg
test
rol
ss
cmp
sar
jmp
cmp
ret
hlt
fsub
sti
fldl
call
xor
fnsetpm(287
lret
cmc
rcl
cmc
cli
hlt
loopne
clc
aam
xchg
fcmovnu
xchg
orl
in
in
xlat
aam
aaa
sti
xor
jmp
int
fst
add
loope
and
xchg
in
lret
in
int
fmulp
shr
fcomp
clc
repnz
neg
mov
lret
call
out
mov
loope
icebp
fsubr
cld
int
int3
shr
rcr
aam
jmp
repnz
xchg
adc
xlat
loop
call
aam
fstp
adc
std
clc
fstp
hlt
xchg
fcomip
orl
ljmp
out
test
in
fdivr
jmp
fdivr
xchg
xchg
loopne
rcr
repz
into
xor
stc
aaa
icebp
iret
lock
std
test
out
lds
lret
call
icebp
cmp
cmp
lret
test
rol
fnstcw
clc
mov
add
int3
sub
fxch
xor
in
fcmovnu
fidivl
roll
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
fiadds
jle
cmp
jle
xlat
aad
rcl
flds
fmull
lret
test
fdiv
xor
call
adc
icebp
shl
enter
ret
fdivr
in
mov
int3
std
lret
ret
out
int3
cmp
jmp
fdiv
loope
lock
fsubr
leave
loopne
stc
test
icebp
hlt
int3
xlat
loope
cmp
int3
ljmp
in
out
cld
sub
out
fiaddl
test
in
rol
lret
in
fdiv
ds
ror
loope
iret
ret
clc
lds
loop
xchg
xchg
xor
int3
ret
cmp
lock
aaa
adc
loop
in
cmp
shl
fcmovnbe
fprem1
clc
clc
mov
std
repz
xchg
loopne
leave
out
repnz
lock
loopne
mov
fstp
hlt
loope
jecxz
ss
call
fldz
aas
icebp
sti
fcom
ret
adc
test
ljmp
sarb
sarl
out
fdivrp
aad
sar
shl
sub
loop
std
fiadds
test
ret
repz
cmp
fnstsw
aas
int
loop
aam
adc
decl
jmp
out
out
in
xor
aam
and
cli
clc
sar
in
fiaddl
xchg
incb
in
cmp
int3
int3
loopne
aas
cmp
fiaddl
ret
fmul
jmp
test
loope
hlt
in
aam
lock
fdivr
repz
ds
out
icebp
icebp
hlt
sbb
lea
lret
xchg
ljmp
in
ljmp
stc
fdiv
xor
test
in
repnz
shll
rcr
leave
cmp
xlat
test
leave
cmp
fcos
std
faddl
imul
fnstcw
cmp
int3
idivl
lret
test
loop
fsub
cli
aad
cld
rcll
cli
out
rcl
cld
lret
ds
cmp
shl
imul
in
fmulp
lret
out
lret
hlt
mov
into
lret
aad
cmp
idivb
aad
cld
cmp
fldl
decb
rcr
in
cmp
int3
fcmovbe
into
mov
mov
jmp
enter
fcmovnbe
fcomp
insb
jae
ficomps
mov
jle
add
sti
fdivr
cmp
std
cld
fiadds
clc
jmp
mov
jmp
cmp
fcmovnbe
xor
cmp
xor
in
test
inc
loop
cld
out
filds
out
and
in
repnz
sti
cmp
fidivrl
sti
int
neg
aas
test
sti
test
std
hlt
sub
out
xbegin
clc
add
rol
in
int
orl
fbstp
in
xor
in
xor
xlat
jecxz
aam
mov
call
fimuls
in
jmp
leave
idiv
ss
leave
fdiv
hlt
repz
xchg
loopne
loop
lret
out
std
out
in
cmc
jmp
fidivl
in
clc
cli
repnz
iret
loop
filds
fnstsw
rcr
jmp
imul
in
repnz
cld
shr
shl
cmp
fcmovb
addl
sti
clc
rolb
lret
fcom
enter
cmpl
ret
cmp
mov
fdivr
aad
jecxz
xchg
fcomip
jmp
repnz
les
int3
imul
out
lret
cmp
std
jecxz
sar
enter
fcmovnu
mov
cmc
xchg
repz
sti
fcmove
repnz
stc
cmp
jmp
out
shl
rcr
cld
loop
loopne
fdiv
shl
aam
jecxz
xor
call
fdiv
cld
jecxz
and
in
jmp
lret
iret
ret
jmp
xlat
loope
hlt
in
aam
cmp
lock
stc
loope
in
xchg
orb
int
into
out
cmp
out
loop
cmpl
cli
lea
shr
leave
out
cli
call
aam
idiv
fldpi
out
lret
fmul
in
ffree
xchg
icebp
xchg
loope
iret
shr
icebp
int3
cmp
clc
fsubr
aas
ret
out
mov
mov
les
jmp
test
out
int3
icebp
sarb
ss
iret
loope
xlat
sti
icebp
rolb
leave
fmulp
fmulp
rcl
int
iret
sub
cmp
fmulp
aaa
shl
repnz
repz
jmp
ljmp
xor
in
ljmp
add
or
push
add
add
lret
ror
lahf
jmp
testl
cmp
jle
hlt
in
clc
fsub
jmp
ffree
rcl
shl
test
testb
leave
lret
aam
shl
icebp
cmp
iret
ljmp
loopne
std
rcr
mov
bnd
xor
in
loopne
cmp
test
decb
mul
iret
ret
mov
xchg
aad
xor
lret
shlb
cmp
fsincos
icebp
fiadds
loopne
mov
vprotd
xor
cmp
fidivs
shr
sti
std
clc
stc
cmp
or
test
sti
test
test
not
divb
cmp
sarl
loop
sti
lret
ffree
mov
iret
enter
xchg
aaa
xor
enter
repz
ret
ds
sarb
sbb
mov
mul
hlt
iret
test
leave
ds
std
test
sti
lds
lock
in
loope
iret
leave
fadd
in
lret
loop
clc
lock
cld
rolb
roll
enter
hlt
fst
sarb
repnz
xchg
out
ljmp
out
out
test
sar
shlb
int
xor
jmp
ret
icebp
sbb
sti
mov
addl
leave
cmp
in
in
test
neg
imul
dec
sbb
out
adc
jecxz
cmp
lret
jmp
sti
aam
test
cmp
sub
repnz
das
das
shll
shlb
icebp
in
in
orl
in
fneni(8087
xchg
out
ret
clc
clc
aam
test
icebp
roll
call
enter
repz
aam
sti
leave
xor
aad
in
out
loopne
sarl
aas
test
loopne
das
jmp
loop
jmp
aad
fcmovnu
aas
cli
xchg
ffree
loopne
test
enter
hlt
out
out
aaa
lock
jmp
loope
sbb
cmp
cmp
enter
xchg
pop
ret
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
aad
ljmp
repnz
std
cli
jecxz
out
test
xchg
fimuls
loope
enter
leave
cmp
loopne
fadds
shr
int3
aad
ljmp
loope
enter
fsubr
icebp
cmp
out
cli
test
cli
jmp
out
into
in
fcomip
ret
test
cmp
test
and
les
in
sti
xchg
iret
xchg
rcl
fstpt
ds
in
iret
fucompp
fxtract
fsub
jmp
in
in
xchg
lret
in
rcl
in
hlt
cli
loopne
shll
call
fucomip
int
int
cld
xchg
jmp
enter
ror
hlt
sti
repz
repz
ljmp
xchg
xchg
in
test
xor
icebp
rcr
cmp
int3
ret
jecxz
ret
fsubp
and
lds
xchg
into
test
xor
enter
fmulp
fcompp
out
shl
aas
leave
fdiv
xchg
call
xor
xlat
aaa
hlt
in
xor
xlat
shr
shl
repnz
sar
test
in
lret
ficoms
lock
test
into
hlt
lock
ret
fcomp
ret
out
incb
cld
call
icebp
div
in
aad
addb
fmulp
aad
addb
mov
jmp
cli
sar
iret
lret
ds
fcomip
cmc
test
out
mov
popl
sub
sub
aam
aaa
int
repnz
cmp
aam
repnz
jecxz
fcmovu
xchg
cli
lret
or
shl
call
fcomi
clc
call
repz
mov
out
xlat
jecxz
call
rorb
ss
fmul
cmp
xlat
ffreep
xlat
fildl
fst
test
lock
sti
in
push
shr
leave
lock
call
cmc
loopne
ds
call
inc
iret
orb
int
repz
int3
sar
mul
add
cmp
ret
in
out
mov
call
ss
icebp
mov
and
or
jmp
ret
ret
rcl
aad
sbb
insl
add
jle
cmp
jle
repnz
enter
iret
clc
divb
icebp
rcr
test
call
enter
lret
xor
out
test
leave
fsubp
stc
in
faddl
call
jecxz
not
sti
call
jecxz
fcmovb
out
fsubrp
ljmp
lret
fcmovu
fxch
ror
test
xlat
icebp
in
testb
faddl
int3
icebp
loope
lret
jecxz
iret
ret
not
icebp
ds
stc
test
cld
xchg
ljmp
mov
cmc
aad
int
out
xor
repz
rol
aas
fcmovnb
loope
addb
shlb
aad
hlt
xor
out
cmc
lock
roll
enter
cli
test
orl
ret
repnz
clc
xor
cmp
and
iret
aas
aas
loopne
ljmp
lret
fucomip
lock
rol
cmp
aad
cmp
rol
cmp
cld
xlat
nop
fstp
hlt
mov
ror
idiv
repnz
xor
loopne
lock
hlt
mov
fcomi
std
hlt
loop
in
hlt
leave
out
aad
lock
sbb
int
rcl
ret
sti
lret
fiadds
test
loop
ret
sub
int
aaa
int
rol
test
stc
ffree
jmp
jmp
into
sub
into
fcmove
ds
out
sti
int3
out
cmp
aam
fisttpll
xchg
out
neg
loopne
fucomi
sti
ret
and
jmp
out
mov
xchg
std
in
xchg
icebp
jecxz
repnz
xor
lret
sti
icebp
cmp
fdivrl
cld
clc
cld
cli
cmp
fxch
loopne
into
jmp
xchg
shr
jecxz
fxch
cmc
ds
in
in
cmp
ret
fcmovb
cmp
mov
int3
and
jmp
nop
call
cli
jmp
addl
fcmovb
jecxz
in
xchg
jmp
int3
call
out
iret
loopne
repnz
neg
sbb
fstp
fcmovu
lock
add
in
jmp
lret
aad
int
ss
rcrl
sarb
adc
jle
sub
hlt
hlt
in
cmpb
cmp
cmp
ror
mov
hlt
lret
mov
lret
xchg
sti
repnz
shll
idiv
in
aad
add
test
testl
shr
enter
stc
fdiv
aam
shl
in
clc
loopne
fdivrs
fcomp
cli
idivb
out
fucomp
int3
leave
xchg
out
adcb
cs
shr
shl
rcl
out
ds
div
jmp
in
lret
ficoms
aaa
aad
shlb
in
cmp
cmp
jmp
mov
fmul
cld
out
jmp
lds
jmp
int
out
int3
fcmovbe
jecxz
incl
xchg
testb
mov
aam
jmp
int
aaa
xlat
lret
into
rol
test
enter
out
cld
mov
out
cld
in
xchg
repz
jmp
repnz
xor
in
ret
cmc
fld
lret
loop
filds
loop
ret
leave
jmp
iret
fst
stc
int
repnz
test
cli
ljmp
rorl
out
shr
cmp
cmp
aaa
xlat
ds
sar
out
enter
out
xlat
leave
in
out
xor
out
ljmp
ret
aad
xlat
movl
jmp
mov
ljmp
into
jmp
lock
aas
test
out
test
int
xchg
or
xor
repz
fnstenv
cmp
lock
cld
cmp
sarl
ret
jmp
sub
shl
in
clc
aam
test
lock
fcos
jecxz
iret
fxam
out
xchg
loop
lret
xor
cmp
iret
ljmp
vpmullw
cmp
cmc
cmc
int
rcl
lret
sti
fdivp
jmp
lock
inc
leave
orb
std
mov
test
shr
xor
aad
clc
fldl
std
xchg
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
sti
test
mov
loop
call
ljmp
out
rcl
std
into
idiv
ret
out
rol
fcmove
and
and
fisttps
in
div
aaa
fldl2t
cmp
stc
rcl
rcl
mov
in
test
incb
in
ret
in
aaa
idivl
cmp
neg
shl
clc
loopne
in
jmp
jmp
mov
mov
shl
iret
loope
lock
icebp
enter
sar
xlat
test
fsubr
std
fsub
mov
std
mov
call
in
rcr
aas
call
ds
fucomip
dec
out
out
shll
fcmove
cld
sti
in
int
into
aad
cmp
aad
ret
fcmove
jmp
out
enter
lea
ss
rcl
into
repnz
into
fchs
cmp
hlt
addl
out
repz
imull
aad
jmp
sub
std
in
repz
cmp
call
icebp
int
iret
in
int
ljmp
int3
cmp
loope
std
fldl
incb
xchg
mov
xor
cmp
div
cmp
ret
fcmovu
test
lret
mov
loop
in
in
aad
int
enter
cmp
xchg
loope
in
std
in
repz
das
ljmp
ror
cmp
testb
testl
idivl
xor
cmp
cmp
aas
out
sti
out
sti
xor
clc
std
jmp
call
loope
jmp
xchg
hlt
enter
iret
xlat
cmc
fdivp
fsubp
and
inc
aam
xlat
cld
out
test
test
ret
repz
call
ret
icebp
aad
mov
adc
out
in
out
fmulp
test
in
jmp
icebp
stc
hlt
adc
idiv
fcomip
ds
test
cld
out
mov
loope
rclb
sti
fdiv
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
shl
lock
in
jle
adc
jle
div
shll
fld
fsub
in
rorb
fucom
leave
pop
lock
leave
sar
call
cmc
cmc
cmc
xlat
into
clc
in
lret
sub
not
loop
test
std
out
lret
xchg
in
aam
in
fsincos
jmp
iret
repz
jecxz
fxam
enter
orl
aaa
rcr
call
jecxz
repz
out
dec
mov
out
fldl
aam
loopne
enter
xor
cmp
loop
out
shl
mul
test
mov
pause
xor
cmp
ss
loop
cmp
fadd
roll
out
in
and
xchg
ret
xor
int3
cmp
xor
out
xor
cmp
aas
cmp
fisttpll
fdivr
fsubrp
test
shr
xor
sti
sti
ds
aad
rcr
and
aam
int
imul
ljmp
das
in
jmp
repz
cmp
iret
incl
call
lea
shrb
repz
cmp
xor
fucom
iret
ret
ffreep
jecxz
loopne
cmp
mov
out
repz
cmp
cmpl
loop
std
sarb
and
in
leave
in
leave
test
xchg
mov
ljmp
repz
sar
xor
in
cmp
out
fadd
mov
fsub
sbb
icebp
int3
in
lock
out
cmp
xor
cmc
vpandn
rorb
out
sub
cld
ror
repnz
call
lret
lret
hlt
testb
test
out
cmp
lret
cmc
shll
xlat
in
fsubr
leave
aaa
shl
sti
jmp
test
cmc
shl
xlat
leave
iret
nop
lret
lea
lret
xor
ljmp
flds
out
ffreep
test
in
test
test
rcl
sub
les
lock
fdiv
lock
loope
adc
out
in
movzwl
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
mov
mov
adc
jle
cld
hlt
out
leave
int3
jmp
clc
leave
fcmovb
leave
shl
repnz
out
shl
out
filds
ljmp
das
xor
ror
stc
imul
sti
stc
fcmovnu
repnz
repz
stc
test
fsubr
fisttps
jmp
ret
stc
in
in
cmc
clc
enter
sarl
xlat
hlt
jecxz
sbb
enter
jmp
in
ljmp
lret
hlt
jmp
test
lock
mov
jmp
mov
jecxz
hlt
out
cmc
xor
ror
iret
std
cmp
sti
xacquire
test
loope
out
out
in
test
aaa
xlat
icebp
jmp
fidivrs
icebp
stc
std
mov
enter
fisttpl
into
imul
out
fcmovb
enter
fidivrl
fdivr
repz
movl
repnz
sti
xlat
cmp
stc
out
sub
hlt
shl
repz
repz
int3
cs
shrl
repz
sar
lock
mov
stc
ljmp
loope
in
lret
in
in
enter
ror
sti
repz
cld
xchg
in
fadds
mov
shll
iret
sti
aad
cli
aas
add
hlt
dec
loop
mov
mov
nop
aam
in
in
shl
xor
hlt
out
cmc
fucomip
ss
ret
cmc
not
les
fimull
loop
enter
clc
cmp
out
fidivrs
ret
out
push
repnz
sti
iret
jmp
xchg
loopne
vpslld
cmp
shr
out
cmp
loopne
cmp
enter
fnclex
out
lock
hlt
xor
into
cmp
stc
faddp
aas
mov
rorl
std
bnd
aad
lret
rol
cmp
cld
std
faddp
cmp
rol
testl
xchg
xchg
xor
int
in
out
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
push
neg
test
add
sarb
jmp
ret
xlat
clc
out
cli
les
int3
out
icebp
in
in
test
aad
aaa
testb
fdivrp
ffreep
in
cli
movl
int3
sar
xor
cmp
fcmove
ret
sarl
int3
cli
jmp
lock
call
rcr
out
fucomi
xor
ret
cmp
cmp
xchg
out
clc
out
xlat
jmp
clc
lret
jecxz
repnz
fst
rorl
into
fsubrp
decl
into
lock
sub
sbb
fchs
fmull
lret
cld
lret
shl
shl
loopne
in
xor
std
call
clc
cmc
cli
jecxz
fcmovnb
aas
enter
mov
mov
xorb
out
in
rcr
in
fcomp
jecxz
int3
repnz
jmp
in
sti
enter
in
mov
ret
ss
icebp
div
out
aas
aas
clc
sar
sar
aad
xlat
xchg
enter
ljmp
aaa
call
fdiv
stc
sarb
addb
loopne
int3
lret
leave
mov
in
in
xlat
cmp
out
in
cli
out
in
out
out
adc
sar
fdivr
stc
cld
jmp
repz
int3
ret
leave
ss
and
cmc
cmp
mov
mov
mov
icebp
fld
in
cld
xor
icebp
fnstsw
cli
fildl
test
std
call
icebp
cmp
lret
iret
fmulp
ret
ds
sarl
inc
add
int
xchg
mov
lret
repz
rol
cmp
fst
jmp
stc
repz
add
hlt
lea
xchg
in
test
jmp
lock
cli
cmp
idivl
sarl
xlat
test
mov
ret
cli
out
cmp
int
loop
nop
xchg
xor
iret
stc
ss
iret
in
jecxz
ret
clc
cld
in
leave
in
mov
int
in
loopne
xor
decl
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
sub
jle
adc
jle
xchg
aaa
icebp
aaa
aam
clc
fidivrl
lret
sar
rcr
div
clc
repnz
repz
int
mov
lds
out
ret
fsub
in
or
lret
jecxz
jecxz
lock
incl
std
ret
loop
xlat
jmp
sti
ljmp
roll
and
repnz
repz
ss
cmp
aad
fdivp
loope
icebp
sti
aad
test
sub
enter
in
icebp
cli
out
cmp
fcomi
lret
cmp
mov
jecxz
loop
out
jmp
sbb
lret
fcmovu
repz
in
clc
int3
cmp
ffreep
std
shl
cmp
jecxz
lret
sti
lret
in
in
xchg
les
repz
shll
out
fdiv
mul
call
mov
test
roll
lret
sarb
jmp
ret
rcl
in
cli
call
rolb
in
shr
icebp
fxch
stc
jmp
enter
hlt
clc
out
addl
mov
jmp
iret
jmp
ss
fdivr
std
fcomip
call
ret
mov
in
mov
loop
in
repz
out
divl
fdiv
out
hlt
stc
fstp
std
xlat
cld
ret
sar
loopne
in
fcmove
cld
fucom
rcl
lock
ds
test
sarb
xchg
loope
enter
in
int3
adc
rcr
test
std
and
out
out
incb
incl
call
int3
rcl
sti
call
jmp
hlt
loope
in
xchg
hlt
idiv
clc
in
lret
xchg
sub
aad
call
cmc
cmp
shr
cmp
cmc
cmc
addl
adcl
shr
std
xor
sarb
loop
rol
fdivrp
ret
xlat
mov
int
lret
icebp
fucom
repz
enter
in
shl
sti
ss
fadds
les
add
imul
jb
dec
jmp
aam
fadd
fstp
pusha
shl
jecxz
mov
jle
add
rol
jmp
out
sar
out
mov
ss
out
aas
loope
ds
bnd
loop
neg
out
hlt
xchg
xchg
mov
int
clc
repz
sbb
xlat
icebp
cmp
mov
mov
ljmp
jmp
fcmovnbe
cld
out
rcr
clc
lock
loop
incl
lret
out
ret
lock
ror
xlat
int
int3
repz
in
icebp
lock
leave
stc
fsub
jecxz
repnz
mov
ror
leave
fdiv
idiv
std
in
rcl
roll
in
mov
std
icebp
out
loop
in
xchg
aaa
loope
xor
cmp
clc
fucom
rolb
loope
lret
in
in
loop
mov
lret
fcmove
ljmp
fcmovb
cld
ds
cli
loope
faddl
lock
fxch
lret
cmp
jmp
div
repz
testb
lret
xchg
out
ret
icebp
out
icebp
cmc
jecxz,pt
cld
shl
fsub
add
repnz
clc
cmp
fst
out
fcom
and
loopne
ret
test
rcl
ffree
fcmovu
movb
iret
repz
icebp
shl
xor
loopne
out
loope
fcmovnbe
jmp
sub
loop
mov
cmp
ftst
cli
cmp
lret
lock
xlat
cmc
incb
out
in
in
int3
fbstp
cli
iret
out
int3
iret
rcr
adc
cmc
dec
mov
out
test
jmp
rol
int3
repz
ret
xor
roll
mov
orl
cmp
test
in
jmp
fimuls
loope
das
cli
call
xor
rcr
in
cli
ffreep
fsubr
fdiv
test
loopne
loop
stc
shl
hlt
mov
sbbl
mov
addl
jmp
fcomp
fistps
je
sub
jle
adc
jle
div
div
shl
xor
fucom
out
enter
loopne
jmp
roll
jmp
out
sti
cmp
repnz
sti
stc
xor
enter
test
in
rcr
iret
jmp
aam
aas
test
clc
iret
stc
fmuls
into
mov
xchg
mov
xchg
cmp
stc
int
lret
rol
faddp
enter
loopne
loope
fsubrp
out
loope
aas
aam
test
ror
ror
loope
in
test
rolb
lds
test
adc
jecxz
cmp
out
cmc
or
int
idivl
jmp
testb
mov
clc
clc
cld
rolb
cli
ror
lret
call
xchg
aam
fcmovne
sti
iret
fadds
test
stc
cmc
fstp
clc
and
sti
in
loopne
loopne
xchg
ljmp
lret
fnstcw
cld
xlat
aas
idiv
rcr
lret
cld
out
mov
fildl
repnz
in
cmp
in
xor
cmpl
rcr
out
xchg
lret
in
ror
aaa
stc
aas
inc
rol
loope
ret
out
ret
ljmp
aam
out
aam
lret
in
out
sti
cmp
out
jecxz
std
cld
loop
aad
ret
xor
cmc
test
xbegin
fadd
loopne
hlt
mov
fmul
int3
fcomi
out
out
jecxz
ss
hlt
fdivrs
int3
icebp
jmp
repz
xlat
xchg
fimull
stc
in
in
aam
in
repz
leave
out
xor
clc
aas
cmp
iret
sbb
ds
cld
sbb
aad
out
xor
std
shlb
xor
std
loopne
loop
in
cmp
sar
fld
decb
test
lock
aad
cmp
call
icebp
fnstcw
jecxz
fcomip
cli
xlat
jecxz
xor
add
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
orl
jle
adc
jle
loopne
into
rcll
enter
fyl2xp1
repnz
lock
cmc
lock
lock
xchg
loop
mov
xor
out
shll
out
call
repz
rorl
and
in
xchg
mov
into
sti
lret
cli
fyl2xp1
fdivp
fcos
fldl
int3
std
loopne
leave
in
mov
fld1
ss
sti
loope
call
leave
jecxz
mov
aam
aam
aad
aaa
int3
cmp
out
jecxz
rol
aas
cmc
enter
lret
flds
mov
mov
xor
in
sarb
cmp
rcl
clc
cmp
out
sti
xchg
out
loop
jmp
aam
fsubr
sti
lret
in
cmp
std
cmc
rcr
call
jecxz
sti
enter
xchg
orl
jecxz
aaa
xor
std
cmp
fildl
aad
jecxz
ljmp
stc
shl
shr
out
in
call
jecxz
test
in
iret
sbb
loopne
call
in
cmp
aas
rcl
in
rcr
mov
loopne
std
out
add
aad
out
aaa
mul
jmp
aad
idiv
add
loopne
xchg
mov
jmp
call
repnz
ss
fsubr
fnstsw
fcmovne
shr
lds
in
mov
sti
out
ffreep
repnz
call
out
sar
jmp
fcmovu
test
enter
leave
popl
xchg
ret
out
cld
in
ss
ret
aam
call
fcmovu
mov
stc
addl
jmp
fstp
call
in
clc
int3
xchg
sub
xor
icebp
xor
fcom
fdiv
aaa
aad
fsubr
aad
rolb
mov
test
ljmp
cmp
je
adc
jmp
int3
rol
aad
pop
pop
movsb
or
in
jle
add
cli
into
cmc
in
sar
enter
std
loopne
mov
lret
rol
rcl
ss
fildl
push
loopne
hlt
jmp
mov
mov
in
shl
cmp
int
out
cmp
iret
fadds
or
in
jmp
out
shl
fisttpll
clc
incb
fsubp
cmc
div
repnz
xchg
in
sub
in
loope
lock
stc
out
xor
enter
rol
cmpb
idiv
out
and
fimuls
xor
shr
int
mul
inc
sti
icebp
loop
cli
faddl
fcmovnu
rorb
les
lock
in
sti
xor
hlt
shl
sbb
out
in
std
test
lret
xor
shl
int3
lret
into
fldlg2
shl
loop
vshufps
lret
jecxz
xchg
loope
ljmp
loopne
ror
fdivrl
int
cli
shl
idiv
hlt
ret
lds
test
clc
in
enter
ret
fdivp
add
out
mov
iret
mov
test
fsubr
cmp
hlt
stc
cmp
test
iret
flds
fucomip
icebp
int3
addl
shl
sarl
cld
into
cli
out
fbstp
clc
cmc
sti
lret
lret
flds
sub
jmp
cmp
aad
jecxz
cmp
hlt
hlt
adc
lret
call
in
ljmp
call
cmp
ds
sar
test
mov
enter
xchg
xchg
clc
into
fadd
xor
int3
in
cmp
ss
movb
mov
xchg
cli
mov
mov
xor
sti
div
shlb
stc
div
cli
loope
loopne
mov
int
xchg
and
in
sar
stc
out
int3
jmp
cmc
fstpt
ret
in
loop
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
sarl
jle
add
jmp
xlat
ret
fscale
repz
divl
cmc
aas
sarb
vpmulhw
enter
fsubrp
out
out
fsubp
out
xor
xor
aam
cld
fcomi
out
fcom
hlt
sbb
xlat
cmp
jmp
addl
cmp
xlat
xor
xlat
out
fcmovu
jecxz
out
fcmovnb
leave
cli
in
mov
xchg
xchg
mov
cmp
repz
cmp
lret
fiaddl
mov
loop
iret
faddl
leave
das
in
stc
ss
fiaddl
lock
sti
xlat
loope
mov
fsubp
std
mov
lret
xor
cmc
cmp
test
xor
std
test
mov
xchg
cmc
loop
ret
ljmp
idivl
or
testl
addb
iret
shr
fdivs
ror
xor
cmp
fsub
cmc
iret
cmp
in
fxam
xchg
in
ljmp
int
icebp
cmp
in
out
fsub
ljmp
call
das
repz
hlt
icebp
fdivr
in
cmc
test
in
icebp
and
test
mov
jecxz
icebp
div
out
ror
shl
ljmp
cmp
fdivrp
lds
xchg
in
out
rcr
ror
enter
xor
cmp
or
lret
clc
leave
lret
mov
call
neg
in
cmp
stc
xor
cli
hlt
xlat
ljmp
test
rclb
into
neg
rcl
sarb
lret
not
rolb
int
iret
icebp
into
sub
in
shr
xor
cmp
iret
sti
fstp
sar
idiv
cld
clc
clc
std
mov
or
sub
jmp
stc
xlat
cs
leave
lret
rcl
fxtract
movb
jmp
cld
shl
enter
fdecstp
std
cld
into
lock
ror
cli
cli
cld
xor
mov
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
push
mov
daa
psubsw
adc
jle
idiv
enter
cld
nop
cli
test
adcl
out
into
out
loopne
lret
neg
rcr
rcl
aam
mov
mov
lock
sub
icebp
cmc
iret
leave
rol
fcmove
std
fsub
fldl
in
lret
int3
ret
ret
sub
cmp
iret
hlt
shl
xlat
fcompp
loope
mov
flds
in
in
xor
call
cmp
ret
clc
std
addl
fcmove
xchg
rorb
iret
cmp
lret
lret
cld
cld
loope,pt
out
aad
hlt
fucomip
lock
sub
repnz
ret
cmp
aaa
lret
repz
stc
not
call
xlat
int
sti
xchg
nop
lret
fldl
shl
iret
fdivr
fiaddl
mul
ret
loope
orl
xor
cmp
xor
into
iret
roll
fnclex
int3
ljmp
cmc
loope
ret
jecxz
lret
into
jmp
test
cmp
dec
jmp
sar
repnz
mov
cmc
xor
repnz
hlt
cmp
out
aas
into
hlt
fldl2e
cli
xchg
in
jmp
repnz
fbstp
loop
repnz
aad
out
loop
rcr
sti
cmpl
xlat
cmc
test
int
ret
loope
xchg
call
repnz
xor
loopne
loopne
cld
loopne
aas
or
test
in
icebp
mov
test
addl
out
shl
shll
fadd
shl
aad
neg
loop
test
lret
shl
jmp
icebp
rcr
aas
loopne
fcmovne
fnstsw
sub
lock
sbb
xchg
out
in
cmp
int3
xor
sti
std
sti
into
shr
idivb
aam
fcompp
clc
mov
fmul
iret
in
std
cld
fdiv
mov
cmc
xor
out
sbb
and
aas
filds
sti
clc
std
out
fucomp
xchg
cmc
push
call
inc
or
mov
nop
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
stos
mov
jle
adc
jle
rcl
cmp
ljmp
shl
fcmovnbe
neg
ret
fcmovnu
enter
loop
in
rcl
leave
aaa
jmp
iret
rcl
fdivp
cmp
mov
cmc
aas
fstp
int
xchg
aad
repz
aam
cs
sar
ss
and
stc
ds
mov
ljmp
xchg
in
divb
loop
std
rcl
xor
sbb
std
int
iret
loop
roll
nop
in
jecxz
ljmp
test
adc
ror
clc
test
leave
in
loope
mov
int3
mov
ret
xlat
call
in
cmp
rcr
lret
lret
mov
test
shrb
leave
cmp
cmp
rcr
loope
call
leave
out
into
nop
jmp
xlat
in
loop
lock
repz
repnz
fsqrt
iret
in
mov
ljmp
test
loope
stc
in
aaa
enter
rcl
out
loop
cli
std
ljmp
lret
xchg
div
int
mul
shr
xor
in
cmp
sti
lock
clc
in
nop
jmp
cmc
test
out
fxch
ss
ss
cmc
div
shl
fcmovu
lds
call
jmp
hlt
aad
cmp
into
cmp
lock
std
fsubr
fcompp
ret
in
jmp
iret
sti
fstl
fsub
hlt
fdivr
shl
int
adc
xchg
fadd
ret
push
clc
mov
test
mov
dec
out
int3
lret
cmp
hlt
cli
out
lret
cli
cld
aam
loopne
sti
xchg
lret
call
iret
cmp
aaa
fnstcw
std
ss
iret
sarb
adc
rorb
mov
icebp
int
test
loope
hlt
hlt
sar
xlat
out
cmp
out
cmpb
cld
loop
in
cld
loope
xchg
in
repnz
enter
cld
cmp
lock
icebp
vpsubd
clc
loopne
les
cmp
add
aam
aad
fstp
movsb
ficomps
adc
add
int
test
rorb
out
out
ss
int
cli
sti
xorb
loopne
les
cld
lea
xchg
in
ss
cmp
int
icebp
std
rcr
and
incb
lock
loopne
ljmp
aaa
lock
loopne,pt
in
aas
icebp
aad
in
out
stc
mov
repz
repnz
rcl
ljmp
neg
aam
fldl
iret
in
mov
neg
jmp
addb
cmp
stc
fucomp
int3
loopne
leave
into
shl
repnz
xor
aam
lret
fcmove
xlat
cmp
stc
xlat
test
mov
jmp
out
ljmp
out
ror
fsubr
cmp
in
jmp
rcr
add
mov
leave
add
jecxz
enter
cs
out
idivl
loopne
in
jecxz
sti
test
out
lret
mov
test
cli
into
cli
cld
or
hlt
fsubrp
not
ret
clc
std
out
fdivr
sub
in
shl
int
cmc
out
aad
loop
cmp
jecxz
sar
test
imul
and
jecxz
out
lret
in
shr
leave
hlt
filds
loopne
clc
mov
aad
in
ljmp
idivb
cmp
testl
enter
roll
div
leave
ljmp
fadds
out
into
rorb
shl
out
out
fmul
out
lret
shl
fnstsw
sbb
loope
jmp
loop
in
xchg
shl
in
int3
icebp
rcl
cmp
cli
jmp
shl
clc
jecxz
mov
in
mov
fucomp
xchg
xor
aad
repnz
icebp
repz
cmc
out
lock
ret
std
int3
mov
test
out
cmc
leave
shl
aam
inc
hlt
jmp
ret
lret
enter
int
cltd
movsb
imul
ljmp
jle
add
lock
out
rolb
ds
mov
filds
in
ljmp
inc
rol
fadd
clc
repz
cld
test
adcl
jmp
fnstcw
into
idivl
idivl
rcr
xlat
fisttpll
mov
xor
ret
fmul
fsubr
xor
int
lock
fmull
int3
pop
into
in
out
xchg
xchg
into
xor
ljmp
fsubr
ror
loopne
aam
mov
orb
call
xchg
out
iret
ret
cmp
xor
shr
aam
cmp
cli
in
cmp
lock
orl
clc
mov
sti
repz
cli
cmp
testb
shr
repz
sti
in
shl
rolb
call
clc
fdiv
out
in
ljmp
int3
in
lret
ds
fdivr
jecxz
lock
shl
call
adc
in
in
fdivp
loopne
lock
sti
into
fincstp
fcom
filds
mov
fxch
fsub
test
loope
shll
jmp
xlat
into
aaa
loopne
into
cmp
repnz
in
fcmovbe
xchg
nop
out
in
in
ret
sar
out
int3
lret
neg
cmpb
clc
lock
cmc
in
in
icebp
in
xchg
in
out
ret
into
aam
repnz
fsub
idiv
test
cmp
aad
ljmp
xchg
orb
cmc
out
stc
stc
fld
ss
repz
in
in
vpsubd
in
xchg
xor
fdivs
icebp
lret
fdivrp
aad
hlt
aaa
sar
shl
aam
fcmovnbe
loopne
loope
mul
icebp
sti
lret
call
int
xlat
rcr
cmc
ror
cli
fstp
xchg
adcb
out
xor
stc
jmp
jmp
cmp
loopne
test
in
leave
call
add
add
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
test
into
lret
vpsrad
xor
lret
in
sbb
repnz
jmp
loop
in
rcr
rol
jmp
out
in
lret
jmp
jecxz
repz
in
loope
mov
out
in
lret
test
xlat
fcmovbe
clc
loopne
ret
aas
ret
cmc
rcl
shr
cmc
addb
mov
xlat
shrb
lret
cld
test
std
cli
aad
in
leave
mov
std
test
fcmovbe
jmp
cmp
repnz
fcmovnb
out
nop
stc
mov
fst
mov
aam
les
ss
push
rcr
shl
cmp
int3
test
sti
or
jmp
fsubr
out
xlat
loopne,pt
aad
in
inc
cmp
lds
in
xchg
out
leave
das
aaa
aaa
jmp
out
ljmp
xchg
aam
mov
jecxz
mov
int3
in
jmp
rcr
in
fcomi
cmc
neg
cld
mov
int
fnstsw
mov
xor
aad
in
fdivp
imul
cmp
aam
repnz
fsub
cmp
aam
int3
jmp
leave
mov
xchg
aam
shl
out
cld
idiv
fpatan
fcmovu
jmp
aas
into
cli
fyl2x
aad
add
filds
repz
loope
test
into
in
cmp
test
jecxz
addb
enter
out
aad
aam
aad
lock
cmp
int3
in
std
cmc
xlat
fucomp
out
clc
loopne
and
jmp
iret
fmul
ljmp
sbb
mul
loop
mov
int3
xchg
lret
loopne
iret
cmp
xor
sar
and
shl
ret
jecxz
xchg
idiv
mov
mov
sar
jecxz
iret
test
shll
repz
enter
aas
repnz
ror
xchg
roll
sub
divb
xlat
fsub
ljmp
rorb
test
sub
add
int3
into
fmul
fsubrl
in
jecxz
adc
fists
repz
adc
jle
addb
jmp
in
xchg
out
shl
ljmp
fnop
loope
test
or
iret
in
xor
clc
fsub
xor
cmc
xor
xlat
stc
jecxz
cli
fld
faddl
in
fucomi
shr
int
aam
in
cli
cmp
fidivrs
into
xlat
sarl
leave
testl
ror
shl
ret
jmp
rcr
jmp
add
aam
xchg
jmp
mov
fcom
neg
fucomi
icebp
std
cmp
cmp
fcomi
sti
movl
jecxz
out
out
ror
in
xor
xlat
sarl
out
repz
rolb
mov
leave
into
mov
aam
cmc
test
int
xor
into
sarl
cld
rcr
cmp
ljmp
out
hlt
xchg
mov
int
cmc
jecxz
call
xor
std
rcl
sub
fsub
mov
out
cli
into
ficoms
xor
jecxz
sti
cmp
jmp
into
ret
cmp
jmp
jmp
aam
icebp
xor
fsubr
enter
cmc
neg
std
xchg
loopne
xchg
mov
int3
lock
cmp
fdivr
cmp
int3
cmp
icebp
call
in
out
xchg
lret
out
out
ffreep
int3
iret
out
in
aam
fcomi
rcr
and
and
in
ret
int
out
cli
icebp
lret
xchg
ror
ljmp
xlat
out
sti
loopne
les
cmpl
into
les
cs
aaa
stc
cmp
fidivrl
call
cmp
xlat
in
add
int3
fld1
ljmp
xlat
ror
fcmove
out
call
add
xchg
fucom
out
vpsllw
mov
out
cmp
xor
into
cmp
xlat
cmp
fninit
mov
leave
mov
pop
jmp
ret
ror
aam
mov
xchg
adc
cmc
jle
adc
jle
fcmovnbe
xor
xlat
repz
aad
shl
ffreep
cli
test
mov
into
shlb
sti
fsub
icebp
ret
jecxz
ror
mov
cli
cli
test
out
std
jmp
cmc
in
std
std
ds
jmp
std
cmp
aas
in
flds
lock
sar
int
jecxz
shr
fcmovbe
ss
xlat
addb
stc
cmp
xchg
out
int
xor
cmc
rol
call
ffree
rcr
rcr
mov
xchg
xchg
stc
leave
iret
jmp
lret
hlt
jmp
cmp
sub
shr
mov
out
lock
leave
test
iret
aad
fsubrp
dec
sarb
loop
loop
fsubp
incl
in
lret
iret
cmc
iret
xor
cmp
hlt
test
icebp
into
ffree
test
into
loope
repnz
shl
nop
lock
aam
enter
cmp
out
clc
cmp
cli
ffreep
cli
fcmovbe
in
and
xor
cli
cmp
icebp
fchs
loop
cmp
lock
out
mov
sar
xor
mov
repnz
mov
ljmp
imul
xor
fcomi
roll
loopne
out
loopne
out
orb
aad
fnstcw
in
lock
fcmovu
ret
ret
test
call
in
fdivp
xchg
lock
aaa
xlat
in
lock
int
cmc
repz
aaa
rcl
loopne
fchs
mov
jmp
icebp
adcl
out
shrl
cmp
repz
cmp
loop
rcr
les
enter
fucomip
xchg
mul
in
stc
int3
call
cmp
int
flds
ret
leave
in
mov
mov
fdivrp
out
test
in
shr
leave
cmp
in
vpsadbw
fdivp
xchg
orb
cmc
cmp
xor
sti
ret
sar
aas
cli
roll
push
adc
sub
add
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
jmp
jmp
in
aad
leave
in
hlt
xor
jmp
hlt
fadds
in
add
lock
mov
mov
ret
sti
std
fdiv
cmp
fiaddl
xchg
fnsetpm(287
xchg
mov
aam
xor
repz
fcmovne
fstpt
cld
shl
ret
loope
jmp
into
in
mov
lock
loop
idiv
shl
cld
icebp
lock
aad
hlt
fstp
ds
cli
hlt
mov
and
test
jmp
shl
cld
loop
std
cmp
in
stc
jmp
out
xor
xor
cmc
int3
div
cli
aaa
cmp
fsubrp
repnz
fucomp
lret
into
lock
or
lret
fidivrl
xor
cli
fsubr
out
xor
cmp
out
cld
or
mov
mov
div
lock
xlat
cmpb
cmp
aad
fldl
in
mov
jmp
stc
int
ljmp
rolb
call
nop
shr
xchg
loop
xor
in
ljmp
out
in
clc
out
hlt
loope
cmc
cmc
cld
mov
ljmp
in
xor
xlat
lret
repnz
icebp
std
shl
sbb
int
iret
cli
in
fmull
jmp
jmp
repz
cmp
rcr
cmp
hlt
test
repz
xchg
lret
repz
mov
int3
cld
stc
ror
test
loopne
fcomip
cli
adc
xlat
in
leave
enter
int
lret
sar
xor
xor
in
fidivl
rcl
pushl
out
test
rolb
test
xchg
repnz
mov
iret
cmp
in
lret
in
lock
ljmp
in
in
neg
nop
loopne
xchg
aaa
leave
out
shlb
cmp
jmp
flds
flds
out
shl
fstp
shl
cli
xor
int
xor
add
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
stc
cmpsl
stc
jle
adc
jle
fcomi
fcom
fsub
rcr
jmp
lret
lock
in
in
loopne
sub
stc
leave
cmp
cmc
cmc
sarl
repz
cmp
test
ret
testl
std
in
sub
leave
int3
iret
out
repnz
aam
roll
loop
movb
xor
xlat
lret
in
repnz
fsubr
out
stc
testb
cld
leave
ljmp
lret
sub
ret
ljmp
std
into
lds
ret
rolb
mov
divb
cmp
iret
rolb
ds
into
sar
test
in
addb
ror
cmc
xor
xor
stc
aas
cmp
test
shl
sti
xchg
lea
in
jmp
xor
ljmp
icebp
in
std
aad
aas
faddl
call
loop
mov
iret
shr
not
fstp
cld
icebp
or
shl
ret
mov
loope
xchg
lret
in
hlt
out
out
lock
fucomp
repnz
out
icebp
cmp
xchg
roll
out
out
mov
ljmp
cmp
xor
ret
loop
out
xlat
in
mov
mov
cld
test
rol
stc
out
int3
ljmp
in
xchg
idiv
int
out
xchg
shr
xor
out
out
div
cld
hlt
aad
mov
test
sti
jmp
mov
xor
out
rcl
ror
icebp
push
fdivr
lock
out
cli
call
mov
out
orl
aam
out
call
fucomi
loop
div
enter
mov
and
lock
in
leave
clc
repnz
enter
rcl
shl
test
cld
shl
mov
in
testb
iret
out
dec
lock
out
idivb
aas
rcr
loope
decb
int
inc
or
add
add
iret
enter
int
xchg
cmpsb
push
ja
int3
mov
add
icebp
mov
sub
int3
int
in
shl
icebp
fdivr
testl
xchg
div
icebp
int3
iret
call
ds
rcr
test
in
xchg
xchg
int
loop
in
stc
lret
fnstsw
cmp
hlt
jecxz
loop
in
rcl
neg
test
xchg
mov
int
rolb
xor
fdivp
cmp
leave
cmpb
std
addb
lea
lret
ret
lret
stc
aad
out
sar
jmp
into
cmc
out
std
cli
cmp
cld
mov
and
and
mov
out
lret
ljmp
aad
cli
or
stc
ljmp
xchg
xor
out
xor
cmp
in
ss
adc
in
rcl
sar
ljmp
jecxz
mov
in
icebp
imul
aas
cmp
loope
ret
mov
enter
leave
jmp
xor
fcmovnb
pushl
neg
stc
rcr
rolb
cmc
fdivr
cli
xchg
xchg
lock
stc
idiv
cmp
icebp
cli
cli
idivb
icebp
test
add
fildl
repnz
out
xor
ret
xor
fdiv
sti
cld
repz
xlat
cld
shl
aam
out
stc
mov
enter
hlt
shll
out
loop
hlt
repnz
cmp
in
loopne
fdecstp
rol
xchg
mov
cmp
out
cmc
xchg
aad
out
out
test
sti
cmp
and
add
test
rcr
mov
leave
cmp
in
aaa
enter
fdivr
repnz
cmp
vpsubsw
jmp
out
jmp
hlt
enter
xor
int
shl
in
mov
fsubp
mov
mov
bnd
fsub
repnz
cmp
repnz
loopne
fildl
mov
int3
xchg
repnz
out
xor
aas
jmp
fisttps
push
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
out
xor
test
jmp
mov
call
idiv
stc
repz
sar
hlt
jmp
in
enter
in
out
xor
hlt
int3
lret
rol
enter
ret
icebp
jecxz
fnop
leave
add
int
out
in
cmc
ret
clc
ror
hlt
cli
stc
sarl
sbb
shl
ljmp
fcomp
mov
in
in
icebp
jecxz
out
leave
xor
fdivr
out
loop
loope
inc
not
in
xchg
lret
cli
sbb
xor
aam
in
loopne
int
icebp
cmp
aam
repnz
jmp
mov
loopne
shl
rcr
aad
fcomi
rcl
adc
aas
in
hlt
lret
fsub
cmp
out
iret
ss
xor
xor
out
loopne
out
sti
loop
cmp
mov
loop
loopne
nop
int
jmp
iret
rcl
aad
cmp
clc
shl
clc
cli
cli
mov
out
repnz
int3
fcmovnbe
cmp
call
ret
in
mul
in
cli
test
and
out
roll
cmc
xor
xor
cmp
div
icebp
testl
enter
call
test
clc
lds
into
stc
not
icebp
lret
aaa
ret
ret
mov
inc
lret
fstl
loop
aam
lock
out
faddl
loope
icebp
sbb
lea
out
cmc
mov
out
out
xor
std
in
neg
sub
icebp
loope
testl
sub
xor
les
cmp
stc
rcl
cmp
hlt
rcl
cld
cli
mov
mov
call
ds
xorb
test
fdivrp
out
xlat
in
ret
mov
mov
mov
into
rolb
hlt
in
icebp
hlt
ret
vcmpss
adcl
add
add
jmp
xlat
into
rcl
aad
fadd
mov
adc
fxch
pusha
jle
adc
jle
jecxz
cmc
iret
shll
xlat
loope
cmp
and
mov
adcb
in
aam
lret
cmp
fadds
std
sti
loopne
jecxz
fdivr
test
stc
lock
mov
clc
xlat
cmc
cmp
cmp
xor
rcl
fcmovnu
icebp
test
test
fmul
repz
xchg
fdiv
stc
aaa
jmp
out
not
cli
roll
mov
lret
repnz
rcl
xlat
lret
ss
fidivrs
aas
fcmovnu
faddl
jmp
test
das
aad
aaa
aaa
xor
repz
sub
repnz
loop
test
ljmp
cmp
aaa
jmp
int3
into
cmp
lock
sti
aas
fadd
in
mov
in
int3
sti
int
into
leave
fadd
out
xlat
cmp
fnstsw
cmc
idivb
fdivrp
test
loopne
icebp
xchg
call
in
stc
jmp
out
fucomip
sar
xor
out
add
out
shr
call
ret
rol
aaa
in
clc
ljmp
aas
cmc
xchg
icebp
cmp
std
fidivs
icebp
fnstenv
fdivrp
fcmovbe
loopne
iret
xchg
ret
cli
cmp
fimull
in
mov
enter
lds
in
cld
leave
repnz
adc
ffreep
call
in
rol
cmc
call
xor
cmp
loopne
and
testl
jmp
xor
rcr
leave
int
lret
cmp
fcmovnu
ffree
and
in
stc
sbb
in
out
sbb
xor
clc
leave
int3
ror
ret
xabort
incl
cli
adc
icebp
enter
cmp
fmul
loopne
cmp
fcmovbe
fiaddl
mov
stc
icebp
cli
filds
loop
fsqrt
aam
icebp
cmp
fildl
fdivrs
add
sub
add
ror
enter
lret
add
add
adc
jle
fdivrs
call
std
out
test
sar
in
test
xor
aad
mov
in
loope
jecxz
jmp
jmp
ss
out
ljmp
repnz
fsub
loope
lret
loopne
lret
adc
loopne
aam
aaa
xor
aam
imul
xlat
and
mov
aas
idiv
mov
iret
sti
int
jmp
lret
cmp
lret
loop
aas
test
test
in
mov
in
clc
out
cli
icebp
repz
into
xor
icebp
lret
lret
jmp
int
ds
aam
sar
mov
cld
call
nop
xchg
jecxz
mov
enter
leave
sti
fdivs
ss
sub
adc
mov
mul
mov
fsubrp
test
repnz
aaa
cmp
shl
rcl
fdivp
loope
cld
xchg
fimuls
xchg
test
xor
loope
shl
call
xorb
xchg
repz
decl
out
jmp
in
ss
lret
cmp
lret
incb
test
nop
in
mov
shl
out
ss
out
int3
repnz
filds
fisttpll
mov
loopne
sub
int
out
shl
cmc
sbb
icebp
stc
call
out
adcb
xor
shr
cli
aaa
repnz
neg
sti
test
out
icebp
fadd
fprem
in
test
out
or
xor
not
rcl
ror
leave
cli
aas
clc
clc
hlt
shl
incb
int3
into
jmp
out
rorb
aaa
xor
stc
in
clc
sar
sub
inc
iret
fsubp
jmp
sti
jecxz
rcll
sub
ss
push
in
fadd
fstp
lret
fisttpl
lock
repnz
jmp
lret
fnstcw
sar
test
lds
int
enter
shl
out
jmp
ljmp
add
mov
mov
movsbl
xor
add
jmp
int3
enter
into
push
mov
iret
mov
jle
adc
jle
call
hlt
fcomip
shl
cli
aam
int
stc
ljmp
sub
ss
rcl
in
xor
repz
xchg
fabs
lret
cmp
fcomip
shl
xor
das
loop
in
ss
loope
out
loopne
call
neg
ljmp
in
hlt
cs
leave
fdiv
aad
jecxz
out
cld
repnz
faddl
test
out
add
das
cmp
xabort
aaa
loope
fdivrl
cmc
cmp
test
in
and
test
out
clc
loopne
idivl
std
jmp
out
cmc
jecxz
ret
shl
xchg
fucom
out
int3
xchg
fsub
in
loope
mov
aaa
cmp
repz
fsubp
sar
shr
xchg
in
and
jecxz
in
out
cmc
call
shr
rcl
shl
icebp
xchg
clc
ret
int3
loopne
loopne
repnz
iret
cmp
shl
in
vpslld
idiv
sti
hlt
fld
test
fadd
fnop
mov
xlat
shr
in
cmp
idivl
fdivrp
fdiv
fcomp
cld
addl
xchg
push
loopne
xlat
into
repnz
fucomi
idivl
in
cld
in
aam
shl
shl
add
jmp
jecxz
std
out
mov
xchg
in
xor
clc
in
cli
sti
sar
aam
idiv
hlt
lock
fcmovbe
fcos
testl
sub
into
cmp
hlt
lret
repnz
shl
fucomp
ret
mov
testb
in
out
cmp
fmul
sar
cmc
ret
rcr
jmp
lret
mov
repnz
in
lock
fsubr
out
ss
fdivp
hlt
cli
xchg
call
mov
in
xchg
test
xchg
aaa
leave
int
aam
loopne
fstpt
and
or
mov
xchg
add
int3
shr
fcomp
ljmp
sar
in
xlat
stc
cld
adc
incb
test
push
add
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
in
mov
ljmp
cmp
xor
int
iret
loop
icebp
testb
rorb
icebp
shl
fsub
stc
ss
ds
sar
icebp
xchg
cli
mov
int3
repnz
xlat
out
or
jmp
xlat
cli
fdivrl
xchg
cli
test
mov
int3
loop
fdivr
jmp
in
fincstp
into
in
into
shr
sti
sar
cmp
cmp
xchg
in
loopne
fimuls
mov
call
ljmp
stc
sbb
xlat
cld
sub
out
fcmovnu
xchg
leave
jecxz
in
fnstcw
lock
sbb
in
in
out
enter
repz
xchg
cmc
icebp
in
in
jmp
fdivrs
loopne
clc
ds
fcmovnb
call
shl
ljmp
xor
int
cmp
lock
roll
test
mov
repnz
call
out
cmp
fildl
in
mov
out
decl
leave
jmp
div
out
ss
jmp
loope
aas
mul
jmp
ljmp
loopne
xlat
xor
shl
cmp
ljmp
repnz
mov
push
in
in
orb
leave
fucomi
into
repnz
xlat
stc
repz
sti
mov
mov
xchg
repz
int3
shl
jecxz
std
cli
loope
int3
and
inc
mov
sbb
in
iret
xchg
in
out
xor
jmp
push
fiadds
loope
mov
div
aam
in
int3
ds
fdiv
out
ret
icebp
adc
cli
lret
leave
mov
mov
sub
fsubr
iret
cli
leave
cli
out
jecxz
loope
hlt
mov
or
cmc
mov
imul
xor
ss
in
icebp
icebp
fnsetpm(287
testl
cli
add
add
int
fcmove
fstp
adc
js
bound
jl
mov
adc
jle
aam
fdivr
fdiv
cmc
mov
stc
cld
xchg
out
decl
iret
ss
xlat
jmp
xlat
in
cli
testl
int3
fdivr
xor
cmp
repnz
jmp
cmp
mov
fisttps
in
nop
divb
jmp
fsubrp
in
lret
hlt
in
enter
icebp
jecxz
mov
std
out
ljmp
xor
cmp
sti
rcr
cmc
ret
lret
mov
enter
sarb
cmp
icebp
icebp
rcr
cld
cmc
loopne
in
out
ffreep
std
cmp
xchg
fcmove
shr
call
repnz
fcmovbe
sarl
fmul
lret
mov
test
shl
icebp
lret
enter
out
fdivrp
cli
into
repz
in
in
repz
test
out
fucomp
in
mov
into
xlat
xlat
fcmovb
cli
clc
into
jmp
div
ds
out
test
testl
in
repnz
in
in
leave
fstpt
enter
cld
fmulp
xlat
aas
lock
les
mov
out
lock
in
repnz
out
shr
mul
iret
and
cmc
dec
iret
mov
out
out
jecxz
leave
out
out
ss
into
neg
cmp
cmp
xchg
aas
enter
lock
orl
xor
rcl
lock
cmc
call
cld
in
lock
rcr
shl
into
out
sarl
aas
incb
jmp
test
jmp
jmp
div
not
stc
fdiv
and
mov
fadd
aad
and
roll
fadd
cmp
sti
out
test
faddl
clc
mov
in
decb
cs
out
int
cmp
in
cmp
rcl
shl
mov
mov
lret
fucomip
mov
mov
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
sub
out
aas
mov
adc
jle
stc
repnz
enter
loopne
icebp
aam
aad
xchg
fcmovbe
bnd
enter
filds
xor
clc
ljmp
fildl
jecxz
idiv
in
lock
in
in
in
in
in
into
mov
sti
repnz
clc
aam
cmp
add
call
ror
out
xor
cmp
shr
ljmp
sti
std
rorl
call
fmull
ror
ss
cmp
lret
hlt
sub
cmp
mov
cmc
fsubp
lret
out
aam
xchg
out
out
enter
repz
out
out
jmp
aad
sti
aad
aad
mov
lret
in
int
nop
into
int
cs
fsubr
shr
loopne
ret
div
div
ret
mov
lret
enter
int
ljmp
cmp
fsubr
fcmovbe
rolb
out
jecxz
nop
int3
in
leave
in
cmp
leave
out
ljmp
loope
repnz
jmp
out
xchg
out
mov
incl
into
neg
lock
div
in
cmp
in
leave
ret
xlat
enter
roll
repz
call
out
cmp
repnz
fadds
jmp
lret
lret
loope
out
lret
divb
xor
aam
iret
int
loop
cld
stc
enter
enter
fld
jmp
fiadds
rol
lock
cmpl
div
sar
sbb
fxam
int
mov
mov
ret
ret
div
xor
lds
loop
xlat
loopne
nop
hlt
adc
cmc
xlat
aaa
repnz
std
fcmovnb
xlat
cld
stc
fnstsw
clc
mov
fucom
mov
in
xchg
shrl
out
shl
fnstsw
out
cmp
dec
rcr
in
hlt
rol
jmp
aad
in
jecxz
sub
int
cmp
out
ss
enter
loopne
sarb
fisttpll
or
pop
out
decl
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
xor
iret
rorb
jle
fucomip
movl
sti
iret
jmp
shl
addb
int3
out
into
ficoms
cmp
aaa
out
call
cli
sbb
mov
fsub
fmull
rcr
shl
in
xor
roll
clc
loope
jecxz
stc
loopne
mov
lock
jmp
jmp
add
aas
out
repz
lock
call
clc
cli
cld
ljmp
jecxz
in
addb
in
xchg
ret
rolb
ret
stc
aam
shr
ljmp
filds
xlat
out
in
rorb
in
shr
in
aaa
aad
lock
cmp
add
mov
xchg
xchg
nop
ljmp
out
clc
int
enter
rol
ret
clc
fprem
mov
int
or
xchg
jecxz
clc
xor
mov
int3
icebp
shr
hlt
ds
enter
cld
cmp
int3
int
xlat
aaa
in
cld
call
jmp
ret
xlat
test
fstp
mov
or
lock
jmp
leave
idiv
int
in
hlt
std
cmp
ljmp
into
xor
hlt
sti
repz
jmp
cmp
xlat
clc
ljmp
lret
out
aad
icebp
divb
out
ror
int3
ds
test
rcl
loopne
mov
fimuls
xor
in
out
jmp
ret
xlat
xchg
ljmp
test
bnd
out
jmp
std
xlat
jmp
std
in
incl
in
in
mov
int3
shr
shll
loop
sub
inc
iret
stc
clc
cmc
xchg
sti
cmp
out
xchg
ficoml
cli
in
xor
divb
sti
fcom
rcr
fcomi
rol
sti
leave
sar
in
fcmovnu
repz
ret
repz
sti
aaa
xor
cmp
ror
fdivrp
cmp
cmp
sar
jmp
jecxz
into
in
in
xor
clc
aam
call
and
xlat
cmc
aas
stc
mov
loop
fdivp
mul
lret
fdivr
fcmove
repnz
dec
aam
xor
in
ljmp
ljmp
ljmp
int
aas
cmpb
ljmp
out
xchg
loopne
xchg
cmc
loope
neg
cmp
fnclex
in
adc
inc
clc
and
mov
add
add
add
fadd
fcom
fld
pop
into
shll
adc
jle
mov
fst
fld
orb
cli
repnz
lret
loopne
int
repnz
adc
incl
sti
out
in
das
repz
lret
ror
xlat
rcl
into
fmul
hlt
fdiv
aas
ret
in
mov
cli
out
nop
test
test
clc
cmp
icebp
repnz
ljmp
div
and
test
lret
xchg
rcl
hlt
xchg
mov
lret
ljmp
loopne
hlt
sarl
fdivrp
flds
out
out
loopne
out
out
cld
fidivl
cmp
xor
into
cli
shl
hlt
fucomi
xchg
jecxz
std
test
fcoml
xor
fcmovnb
idivl
fcmovnb
loop
loope
incl
cld
mov
jmp
hlt
in
lock
in
fldl
xlat
fldpi
in
stc
call
xchg
xchg
lret
aad
in
repnz
lock
cmc
repnz
roll
clc
fmul
lret
rcll
icebp
in
cmp
aam
sti
cmp
repz
xchg
fsubp
idiv
nop
mov
enter
xor
xor
int3
repz
sti
cmc
rolb
loope
out
ljmp
out
iret
std
fmul
fcmovne
lret
fdivp
repz
mov
into
out
out
out
out
jmp
imulb
fdivrp
stc
repz
sar
clc
out
xlat
clc
loopne
int3
int
loope
xchg
in
xchg
cs
clc
aad
int3
fdivrs
fstpt
cmp
cmp
in
mov
xchg
jmp
stc
xchg
lret
jmp
in
aam
xor
iret
out
test
xor
sti
sti
rcl
in
lret
or
lock
out
into
cmp
enter
repnz
fadds
out
jecxz
jmp
decl
loopne
iret
shl
ljmp
ds
fsub
cld
fld
cmc
idiv
in
rcll
icebp
jecxz
loope
iret
in
aad
ljmp
filds
fmuls
mov
out
clc
cld
call
shl
roll
out
in
lea
in
xor
xor
in
leave
xor
rcl
ds
sarl
aad
sti
loopne
jmp
cmp
xchg
in
clc
call
hlt
ror
repnz
jmp
jmp
nop
lret
icebp
xchg
rcl
repz
lret
xor
ljmp
fcmovbe
aam
call
mov
xor
in
cmp
test
lret
lret
fsub
rol
inc
cld
daa
test
inc
add
add
add
rolb
and
add
and
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
push
vxorps
jle
mov
fildl
fcmovnu
adc
loopne
jecxz
not
in
jecxz
lret
cmp
fcmovu
cmc
lock
mov
filds
mov
mov
in
in
enter
int3
cmp
lock
loope,pt
jmp
jecxz
jmp
jmp
ror
sub
ss
iret
hlt
fsubr
std
sti
into
stc
call
out
enter
in
rcll
in
enter
sti
lret
int3
cld
sar
out
out
leave
in
leave
addl
xchg
fisubrs
idiv
aaa
cmp
jmp
fisttpll
repnz
fdivs
cmp
fdivr
testb
shl
ljmp
shl
in
mov
xlat
cmp
cmp
icebp
xor
sti
les
in
jmp
out
test
jmp
xchg
xlat
out
icebp
clc
xor
int
aad
ret
div
aas
ret
cld
cld
sub
ljmp
xor
rcl
into
divl
cmp
out
in
aaa
loope
ds
loopne
call
fninit
loope
test
lret
xchg
out
in
in
lret
iret
aam
jecxz
repz
fmul
rolb
jecxz
int
in
xchg
lock
shr
fcmovnb
std
rcr
stc
fprem1
add
enter
into
rclb
in
shl
iret
call
aam
clc
int
cmp
mov
lret
enter
cli
xchg
call
clc
xor
cld
rcr
ror
stc
sar
movl
jmp
mov
loopne
call
cli
cmp
cmc
cmc
icebp
loope
cli
xchg
stc
xchg
icebp
int
fsubp
in
xor
in
cld
in
xlat
stc
cli
rcr
addl
in
rol
ret
cmc
into
jmp
sarl
shl
bnd
test
incb
test
xor
cmp
shl
fbstp
fcmove
repnz
sar
xchg
test
in
adcb
xor
call
stc
xor
addb
fsubp
mul
loopne
xchg
fsub
aam
lret
shl
cli
shl
clc
out
cld
fidivrs
xchg
clc
clc
loop
int3
fsub
ret
ljmp
icebp
jmp
out
ret
flds
fucomi
iret
int
out
std
jmp
xor
jmp
out
jmp
rol
cmc
fst
xchg
in
nop
ffreep
adcl
leave
std
leave
in
shl
mov
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
iret
rcl
int3
test
testl
fcomi
hlt
stc
cmp
stc
lret
repz
jmp
in
add
xchg
xchg
fisttpll
lock
call
int
cmp
cmc
aad
ret
test
call
jmp
rcr
loop
xchg
aam
lock
ss
mul
in
ret
std
in
clc
test
loop
fldl
icebp
xchg
xor
lret
iret
xor
cmp
adc
shll
sti
addl
sti
icebp
lret
repz
in
cmp
sbb
rol
stc
fisttpl
rolb
jmp
leave
call
stc
sar
cmc
stc
lds
into
rorb
fdivp
ljmp
fcomi
cmp
cli
fstp
ljmp
jmp
out
nop
fsubp
repz
aad
out
hlt
cmp
test
in
test
loopne
testl
not
xor
in
sar
cmp
into
in
loope
into
les
ftst
repz
mov
cmp
xor
ret
fcomp
iret
rolb
call
in
mov
in
aad
fadd
clc
repz
out
hlt
cmc
aam
rcr
repnz
int3
mov
cli
fmulp
in
call
stc
leave
repnz
rcl
in
cmp
cmp
loopne
and
mov
out
loop
into
mov
in
cmp
iret
aam
fucom
repz
lret
faddl
test
jmp
jmp
loope
sub
xor
out
xlat
repz
cmp
roll
loop
out
fdiv
int3
xchg
clc
ljmp
jmp
stc
loope
sti
out
ljmp
mov
jmp
lret
repz
aam
cmp
sarb
out
mov
mov
xchg
lret
cld
test
loope
shrl
fdivp
shl
not
fadds
mov
testl
repz
enter
fistpll
adc
call
enter
jmp
nop
in
xor
out
xor
clc
shr
xor
cli
loopne
lret
out
test
loope
in
mov
rcl
clc
dec
loopne
rcl
cmp
fiaddl
mov
fnstsw
lret
lock
iret
mov
loope
sub
jmp
fldpi
in
sti
repnz
repnz
fdivr
jecxz
fadds
out
shr
fxch
out
jmp
std
cmpb
mov
jmp
rcl
aad
aad
shll
or
jle
mov
shr
out
jmp
adc
in
int
mov
rol
repnz
lret
rcr
repnz
std
fsubr
fcomi
mov
fucomp
adcb
jmp
out
int
out
cli
cmp
cmp
not
jecxz
enter
in
out
fimuls
div
cmp
ror
repz
sar
sar
hlt
rcr
mov
out
xchg
std
loop
test
xchg
into
shl
ljmp
aaa
leave
lock
lock
into
xchg
aad
imul
cli
out
call
out
sub
das
sub
cmc
cmp
sti
cmp
loope
enter
fucom
in
out
out
cmc
in
clc
out
out
out
xor
ljmp
xrelease
mov
mov
out
xor
out
in
in
out
jmp
aas
rcr
test
rcl
fsubr
mov
test
fucom
out
hlt
in
xlat
repnz
in
cmc
out
cli
fchs
out
fcompp
clc
test
stc
lds
iret
rcl
lret
mul
cmp
enter
int
and
xlat
dec
out
in
fists
lock
loope
sti
leave
fincstp
aad
leave
in
test
mov
stc
loopne
jecxz
leave
fucomip
fsubrp
xchg
out
test
in
enter
cmpl
fadds
call
fsubrp
mov
ret
aad
repnz
cmp
in
dec
cli
fsincos
rol
out
xchg
loop
out
and
enter
leave
fdiv
repz
fcmovu
sti
ret
addb
lock
mov
xchg
jecxz
cmp
out
iret
fdivs
hlt
loopne
jmp
out
movl
call
ljmp
in
cmp
aas
sbb
ret
ret
fxch
mov
xchg
jmp
aam
leave
xor
ss
out
cmp
icebp
fsub
aas
addl
jecxz
xchg
xchg
fcomp
cmp
ror
fucomip
int
adc
repnz
neg
ret
testl
das
ror
in
cmp
mov
out
sti
test
rcl
mov
mov
out
fptan
xor
fst
cld
out
loope
cmp
fcomi
shl
in
lea
cld
xchg
loop
repz
int
fdiv
std
into
orl
xchg
nop
out
iret
adc
xlat
sarl
leave
clc
cmp
xlat
add
sti
cmp
addl
clc
call
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
dec
sbb
jle
add
ror
icebp
sbb
and
mov
in
iret
fisttpll
call
out
sar
stc
xlat
icebp
in
rol
rcl
enter
in
in
cli
ficoms
ljmp
leave
cmp
repnz
aam
shl
sti
cli
fxch
orb
fisttps
into
cmp
xor
cmp
hlt
cld
aas
cli
cmp
cmp
mov
cmp
aam
ss
std
sarl
out
loopne
fisttpl
adc
xor
leave
les
lock
aaa
stc
sar
in
fildl
int
jmp
loope
hlt
aam
aas
iret
lret
out
cmp
cld
rcr
int
cmc
in
orb
lds
out
in
xor
div
clc
cmp
jmp
ret
test
clc
loopne
in
out
jecxz
rcr
cli
sub
cmp
icebp
xlat
test
repnz
cli
xchg
in
rcl
cli
xor
std
cli
aaa
sar
std
clc
mov
ljmp
in
ljmp
testb
cmp
lret
xlat
stc
in
fsubr
fcmovnu
nop
loope
enter
jmp
leave
fdivp
not
in
loope
fidivrl
out
leave
sti
xlat
lret
repnz
iret
xchg
ss
int3
fprem1
lret
lock
std
xchg
aas
add
dec
test
jmp
iret
fdivs
in
lock
out
fst
xlat
ret
ret
not
leave
fsubrp
lock
nop
int3
bnd
ss
lret
lret
lret
int3
into
fiaddl
call
ljmp
repnz
jmp
xor
rol
shr
stc
cmp
lret
shr
test
inc
fdivrp
in
fucomip
lret
test
xor
out
out
cli
cmp
xlat
ffree
fsincos
fildl
mov
int
lock
aad
sar
sub
out
aaa
cmp
xlat
rcr
shl
xchg
add
in
enter
repnz
fildll
jmp
hlt
lock
std
cld
repnz
fndisi(8087
fmul
aam
rolb
lret
rorb
xor
aad
jmp
fsubrp
cmp
repnz
lock
lret
clc
fisttpll
sarb
cs
ljmp
out
ret
out
loop
aam
shr
int3
xchg
xchg
into
xchg
int3
not
out
fidivl
shl
sarl
mov
jmp
mov
xor
in
cmp
test
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
cmp
pop
inc
pushf
jle
mov
shlb
hlt
out
cmp
and
rol
out
loopne
sti
ror
lea
hlt
ss
neg
out
fildl
aad
aam
lret
xbegin
in
call
sti
out
int3
ror
out
cmp
out
clc
loope
and
out
fldl
out
iret
aad
hlt
loopne
cmp
sarb
inc
loopne
or
jecxz
xchg
fldln2
ljmp
test
fadd
loop
fmuls
iret
rcl
loopne
rcl
out
aaa
into
aaa
leave
jmp
ds
adc
jmp
nop
int3
out
out
mov
into
iret
int
out
lret
cmp
enter
cld
xorb
aad
cmp
clc
stc
fsub
shr
loopne
in
lock
ror
call
jmp
std
sti
fadds
cli
in
mul
int3
test
int3
das
call
cmp
enter
aas
ret
cli
fdivr
fdiv
sar
fiaddl
out
mov
mov
iret
neg
sti
lret
repnz
cmp
std
in
clc
std
icebp
cld
leave
loope
test
mov
sub
sti
in
jmp
out
jmp
sti
roll
out
out
xchg
ror
fmul
out
jmp
ret
ss
idiv
ljmp
fadds
xchg
test
fsub
cli
ret
cld
sti
cmp
rcl
xor
std
mov
leave
std
and
loope
loopne
lret
neg
div
std
clc
cmp
sti
sti
in
jmp
out
xchg
cmc
xchg
divb
xor
ror
lock
ret
ret
ret
jecxz
aad
fcoms
xchg
repnz
imul
aam
enter
aas
repnz
fcmovu
aam
sbb
loop
in
std
orb
ljmp
iret
jmp
clc
faddp
loop
sti
cli
neg
aad
ret
jmp
repz
rcl
test
xor
out
aas
cmp
iret
cld
sar
ret
fsub
jmp
out
cmp
orb
xlat
cmp
enter
iret
rol
adc
out
mov
leave
and
repnz
repz
out
hlt
cmp
aas
fstpt
cmpb
cmpb
lret
mov
sti
jecxz
out
mov
xor
in
ss
cmp
fadd
sbb
xlat
test
xlat
cmp
mov
sub
out
lret
fdivrl
jmp
aas
neg
in
loope
rorb
icebp
xchg
hlt
ret
cmp
inc
cld
mov
jmp
rcl
rcr
fstp
aam
cmp
lods
addl
test
jle
in
iret
jmp
cmp
sti
std
out
aad
fsub
in
out
into
jmp
int
ret
cmp
das
test
iret
rol
addl
in
xor
icebp
cld
xchg
icebp
in
clc
enter
repz
std
aas
mov
incl
fmull
call
lret
ljmp
rcl
xchg
hlt
sti
cmp
roll
xor
fxtract
cld
in
icebp
test
ret
aas
loop
cmc
cli
loopne
rorl
lret
shrl
call
rcr
clc
ret
test
ret
fiadds
shr
repnz
ficoms
int
cmp
rcr
sar
out
repnz
xlat
orl
xor
in
cmp
stc
fucomp
aas
loope
in
test
and
in
std
icebp
lret
mov
rcl
mul
in
sarb
lock
clc
les
lea
out
out
ror
fnstcw
std
int3
icebp
cmc
std
into
aas
rcr
std
mov
in
ljmp
enter
cld
xor
cmp
jecxz
aam
loop
hlt
ret
lret
out
in
aam
xchg
enter
hlt
cmp
aad
stc
repnz
fcom
xlat
loop
enter
xchg
test
in
fisttps
cmp
aad
sti
xor
stc
cld
lret
fisttpl
xchg
call
stc
xlat
cld
fstp
hlt
loope
int
xlat
loop
xlat
adc
ljmp
lret
repnz
int
repz
ljmp
ret
xchg
std
stc
in
loopne
out
in
loope
and
repz
test
std
fstpt
cmp
iret
shl
cmc
xchg
fmuls
xchg
iret
repz
testb
sar
aam
fmul
into
stc
hlt
repz
cmp
mov
aad
lret
cld
loopne
loope
not
imul
idiv
cmp
cmp
iret
cmp
fsubp
shl
xchg
rcl
int
incb
xor
enter
imul
ds
shll
std
in
test
aas
sbb
lret
fmull
in
loope
int
ljmp
call
repnz
sti
cli
loop
and
mov
fucomp
fst
icebp
jmp
fldz
not
shl
shll
test
xlat
stc
shl
leave
mov
cmc
test
xchg
xchg
out
call
ror
xor
ljmp
loope
iret
jecxz
adc
mov
orb
aam
ret
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
cmp
cmpsb
rol
mov
jle
fsub
xor
ror
into
ljmp
fdiv
mov
fistl
hlt
ror
mul
cmp
fucomi
sub
sar
icebp
cmp
fiaddl
in
ret
in
cmc
aad
leave
leave
xor
xlat
mul
push
loope
fldl
rorl
out
jecxz
test
xor
xor
call
fcomp
in
fcmovb
mov
xchg
out
aad
lret
repnz
aad
shl
out
loopne
int
ffreep
iret
xchg
aad
xlat
aad
cmp
hlt
dec
cld
cmp
into
testb
ljmp
ficoms
stc
fdivs
in
fmul
inc
in
ds
lret
mov
std
sub
incb
jmp
aaa
std
fsubr
loopne
cmp
add
clc
idiv
mov
out
loope
ret
in
out
cmc
stc
icebp
sti
repz
iret
loope
cld
mul
xlat
call
mov
into
sti
lock
jecxz
out
ret
repnz
mul
lret
clc
filds
test
out
leave
fstl
repz
clc
jmp
lock
xlat
ds
out
icebp
into
lock
clc
std
fdivr
mov
leave
std
int3
cld
repnz
in
shlb
cmc
ss
leave
enter
std
roll
testl
movl
icebp
ljmp
fcomip
cld
testl
shl
jecxz
leave
xor
leave
in
int3
out
lock
fcmovb
fabs
mul
out
int
cld
xchg
loop
repnz
repnz
and
faddp
int3
ret
in
cli
in
jmp
lret
call
xor
icebp
das
sar
in
sar
cmp
vpsubusw
mov
jmp
enter
int3
sub
fcmove
clc
cmp
stc
cmp
cmc
aad
cmc
in
cli
rcl
cmc
mov
xor
xor
int3
idiv
fistpll
jmp
clc
xchg
out
aad
int
cmc
xlat
xor
out
addl
testl
jecxz
sub
clc
in
int
ljmp
fcomi
std
repz
aas
test
fisttpll
rcl
stc
in
cmc
jmp
into
shl
addl
jmp
int
hlt
aas
ret
lret
icebp
stc
cmp
cmp
roll
roll
test
mov
xchg
xchg
test
testb
add
add
into
aad
aad
aad
rcrl
add
add
jle
shr
fcmovbe
shl
cmp
in
repz
repnz
imul
sti
in
mov
fcomip
ror
sar
clc
jmp
sti
jecxz
aas
cli
aad
test
aam
jmp
mov
test
in
shl
ss
std
cli
ds
xor
clc
test
sarb
sti
jmp
cld
mov
int
xchg
jecxz
lret
xor
xlat
cld
lret
idivb
int
add
bnd
bnd
out
fsubp
lret
xchg
xchg
xchg
cmp
das
lret
fdivrl
aam
testl
imul
sbb
addb
hlt
ss
sti
cmp
in
clc
cli
out
fdivr
stc
std
test
in
cli
mov
faddp
repz
in
lock
in
sti
ljmp
fistpll
jecxz
loopne
stc
fstp
nop
xchg
xchg
test
rol
fcom
enter
stc
cmp
fsubrp
ds
shl
and
fmull
mov
mov
jmp
repz
test
fsub
cmp
sti
cmp
ljmp
test
loopne
xlat
divl
stc
hlt
aaa
lock
fst
cmc
aas
test
div
in
mov
fmulp
into
jmp
stc
sub
cmp
xor
sti
add
loope
mov
out
std
int
jecxz
shl
frndint
fnstcw
sti
rcl
testb
mov
jecxz
and
rol
sar
cli
ds
sbb
not
call
sar
sub
icebp
jecxz
xor
fidivrl
repz
mov
inc
std
lret
ljmp
aaa
lret
out
cmp
int
loope
in
ror
ret
fld
jmp
out
xchg
test
out
xchg
in
jmp
jecxz
int3
out
jmp
in
rcr
rcr
inc
mov
out
icebp
loopne
xor
in
in
xor
in
rolb
loopne
fimuls
stc
test
loopne
in
leave
aaa
cmp
cmc
fsubr
aaa
shl
loopne
fdivrp
ret
fdivrp
rcr
ret
enter
test
ljmp
int3
aad
roll
out
xor
fcmove
in
jecxz
leave
out
ljmp
icebp
out
xor
hlt
in
fsubr
rorl
mov
xor
fcmovnbe
divb
into
cld
jecxz
std
fstpt
cmc
enter
out
rolb
int
enter
cmp
xlat
std
ror
repnz
stc
fsincos
mov
cli
leave
enter
ljmp
pop
hlt
pushl
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
inc
add
jle
add
aad
iret
shll
ror
cmp
rol
mov
ret
mov
sbb
sti
in
xchg
cs
icebp
ret
rcr
out
aas
aas
shl
div
aad
ds
call
aam
fidivs
cmc
int
into
cmp
rcr
sub
lock
test
cmc
std
cmp
test
xchg
jecxz
loopne
loop
rcl
repnz
cmpb
sarl
rol
roll
orb
aam
xor
into
cmp
repz
cli
fnstcw
aam
rcr
out
std
stc
int3
jecxz
ljmp
lock
cmc
lret
shl
rcr
ljmp
std
test
out
fcom
xor
repnz
out
cli
into
mul
adc
mov
vfrczss
addl
aam
hlt
hlt
loope
in
jecxz
test
loop
test
in
and
in
ret
cmp
lret
fadd
cli
fucom
sarb
fsubr
loopne
aad
out
or
leave
shr
div
xor
idiv
cmp
cmp
iret
addl
jmp
shl
out
xchg
xor
ss
fsin
lret
xlat
in
incl
in
out
fadd
in
nop
hlt
xchg
std
repz
iret
cli
loopne
std
shl
sarb
lds
into
lock
out
fisttps
xor
out
sar
repnz
stc
lret
xor
cmc
jecxz
rorl
sti
mov
stc
cmp
jmp
fsub
shl
shl
stc
fiaddl
jmp
in
jecxz,pn
out
cld
aad
lret
cmp
imul
cli
xchg
loopne
leave
mul
incb
in
cld
repz
jecxz
xlat
rcl
ljmp
sti
out
cmp
xchg
fadd
roll
xchg
xor
xlat
icebp
int3
ror
std
xor
fdivr
aad
aam
iret
cmp
fildl
jecxz
mov
xchg
mov
movl
movl
cmp
movl
jmp
mov
fstp
enter
imul
addb
jle
sbb
jle
std
mov
clc
stc
cmp
neg
jmp
incl
fcmovnu
xchg
mov
int
ljmp
sarl
icebp
in
ds
not
fmul
in
out
xchg
out
das
out
aam
enter
fdiv
test
aam
cmpl
call
orb
lock
leave
cli
fidivrs
std
cld
cmc
repz
in
out
shl
in
aaa
rol
out
bnd
xlat
cmpb
out
xchg
lock
ret
mov
int
adc
xchg
xchg
ret
fld
xor
ffree
out
cld
fcom
loopne
ffreep
stc
mov
in
call
loopne
xchg
sar
repnz
cmp
iret
clc
lret
push
std
sar
test
mov
and
mov
xlat
cmp
out
stc
ror
shl
iret
idivl
repz
out
out
loop
std
mov
int
ror
fnstcw
aam
fnstcw
cmp
clc
and
clc
fstp
mov
out
jecxz
icebp
fnop
xlat
rcr
fcmovnbe
repnz
lock
sbb
in
faddl
test
ror
ljmp
out
loop
fsubr
enter
jmp
in
xchg
icebp
mov
lock
shlb
lock
repnz
fnstcw
out
fdivr
mov
push
popl
out
jmp
loopne
hlt
cmc
fcmovnbe
xchg
xchg
test
cmc
lock
ffreep
shl
in
cmp
call
div
aam
fdivp
fiaddl
in
in
nop
mov
jecxz
mul
xor
idiv
shl
sti
out
lock
test
orb
std
hlt
ffreep
lret
in
xor
aaa
cmp
aaa
icebp
cmpb
in
mov
into
xchg
and
in
xchg
out
divl
cmp
cmp
sbb
fucomip
call
movb
add
andl
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
orl
enter
cli
in
xlat
fsubp
addb
fsincos
int
out
xchg
mov
repz
xlat
cmp
ljmp
test
loopne
xchg
xchg
aaa
shr
cmc
out
cmp
cmpl
icebp
addl
mov
into
lret
in
lret
hlt
sti
hlt
lret
hlt
addl
mov
enter
mov
nop
iret
mov
loopne
rol
clc
out
fdivrl
icebp
out
lock
ljmp
and
xchg
mov
repz
loop
out
cli
ret
fadd
adc
out
lret
mov
repz
rcr
out
sbb
int3
into
loop
repz
flds
out
jmp
std
repnz
xchg
int3
xor
ljmp
repz
in
stc
cmc
loope
int3
mov
addl
cmc
stc
shll
lock
xlat
aam
rcr
out
mov
cld
in
in
mov
loop
adcb
enter
xor
inc
loope
icebp
clc
ret
call
mov
loop
mov
idivb
fptan
cld
int3
cld
out
stc
rolb
out
sti
pop
mov
int
in
xlat
idiv
fld
iret
fdiv
shl
movb
in
xchg
neg
div
ljmp
and
aam
fcmove
fmul
mov
lret
test
repnz
xor
lret
cmp
fnop
xlat
not
out
iret
ds
or
sti
fcmove
int3
out
adc
xor
cmp
lock
fmulp
lret
ljmp
sbb
hlt
shr
call
shlb
int
roll
fisttps
in
into
repnz
cmc
in
in
repnz
repz
fnstsw
loope
xchg
mov
clc
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
push
loop
sbb
jle
int
addb
fcmovne
stc
repz
jmp
jecxz
call
not
mov
decb
lret
ljmp
cmc
lret
jecxz
into
loop
fidivrl
ds
mov
lret
int
into
cs
into
stc
fstp
xor
hlt
cmp
stc
cmc
fcmove
dec
in
int
lret
jmp
out
xlat
sti
ds
cmp
sti
xlat
ljmp
lret
out
into
mov
out
cmp
into
stc
out
enter
mov
mov
lock
lret
shrb
int
ljmp
aam
ffree
aas
roll
mov
loopne
icebp
into
stc
fcmove
jmp
in
int3
cli
ss
loope
iret
ret
out
loope
and
decb
fisttpll
xor
fldln2
iret
fucomi
fsubr
sub
repz
icebp
ffree
loopne
dec
flds
in
into
hlt
shll
in
xor
fidivrl
faddl
in
xchg
jmp
divb
out
leave
enter
iret
neg
lret
into
and
cld
xchg
fadds
lock
mov
xor
jmp
fdivrs
lret
icebp
cmp
cmc
in
repz
incl
repnz
xchg
int
aad
call
in
repz
loopne
xchg
loop
fdivr
vphsubdq
idiv
sti
lret
cmc
sbb
stc
loop
cmp
mov
flds
cld
xchg
sub
sarl
xlat
cmp
xlat
out
repz
xabort
leave
aad
mov
push
lock
xchg
cs
cmp
in
cli
fucomip
rcr
cmp
loopne
lock
mov
mov
out
cld
out
lock
cmp
cld
div
jmp
into
xor
sub
mov
loop
nop
mov
call
in
ljmp
clc
ror
aad
ds
cmp
mov
xor
mov
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
leave
xchg
push
out
ss
jle
add
fmul
bnd
repnz
cmp
aaa
into
lret
aad
xchg
loop
cmp
test
iret
xchg
loop
cmc
out
in
hlt
cmp
sarb
cmpb
ret
idiv
out
mov
fucomip
xchg
cmc
cli
in
fucomi
out
int
xor
loopne
into
xor
cmc
testl
call
repz
fstp
fldz
addb
call
aam
mov
ljmp
int3
clc
idiv
shl
shl
mul
loopne
mov
mov
lret
loop
out
ljmp
ds
mov
mov
out
jmp
loope
jmp
les
loop
aaa
std
shr
lret
leave
xlat
push
clc
fdivp
aam
les
mov
hlt
lret
in
ror
out
imul
cmp
fcmovb
xchg
cmc
mov
orl
xchg
aas
fdiv
ror
lret
shl
xlat
cmc
repz
ret
enter
int3
in
xchg
xchg
int3
aad
in
cmc
ljmp
loopne
ret
out
lret
loope
into
test
shll
in
fmul
cmp
jmp
ret
ror
fdiv
or
fisttps
loope
xchg
mov
rcl
int
xor
cmp
std
in
cmc
mov
loopne
rcr
hlt
in
lock
leave
repnz
fcmovnbe
ror
or
fimuls
xchg
out
mov
cs
aaa
call
cld
fsub
fistpll
fdiv
vpinsrw
mov
lea
jmp
cmp
cld
std
icebp
xor
cmp
mov
std
std
loop
test
fsubr
mov
shl
out
repz
in
addl
sbb
mov
repz
in
out
fildl
fcmove
in
not
and
jmp
aam
enter
aad
cmp
and
addr16
mov
jle
add
sti
filds
cs
in
out
out
sti
loopne
fcomip
jmp
rcr
mov
call
cmp
enter
ror
fsubr
sti
loopne
test
test
in
in
mov
test
jmp
leave
aaa
idivb
fsubrp
sti
jecxz
addb
leave
out
in
jmp
loope
iret
out
xor
sti
jmp
xlat
ds
xchg
fprem1
loopne
int3
ljmp
ss
int3
into
clc
iret
cmp
clc
repz
fcmovbe
ret
in
and
in
aam
in
int3
fdivrp
lock
shl
loopne
in
leave
out
cmp
rcr
in
jecxz
rol
cmp
cld
fucomi
xchg
out
in
xor
hlt
icebp
jmp
enter
shl
fcmovnbe
iret
roll
vpsubw
enter
cmc
in
icebp
ds
std
call
in
cmc
roll
iret
adc
loope
int
hlt
fcomp
stc
enter
ret
test
ds
repz
in
lret
fmulp
ss
imul
leave
fst
fcom
std
faddl
fdivr
out
imul
rcr
repz
xorl
iret
cmc
fnstenv
leave
into
aaa
ds
fst
cmc
idivl
rol
in
int3
mov
iret
fiadds
aad
fldl2t
cli
int3
lret
aas
loope
rolb
fucomi
fmull
in
shl
in
out
in
xor
not
rcl
roll
cmc
fucomp
call
cli
out
test
lret
repnz
iret
lret
sti
out
cmp
ljmp
mov
mov
loopne
ljmp
out
mov
lret
cmp
fistpll
stc
cmp
sar
cli
lock
xchg
jmp
repz
ljmp
cmp
repnz
leave
cld
div
aad
in
lret
shl
jmp
ss
imul
fucomp
xor
xor
dec
or
add
xorl
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
fsub
int
loopne
loope
mov
out
out
ss
les
cmp
xor
cmp
sti
sti
cmc
xchg
test
fcmove
sti
fdivr
out
test
in
div
jecxz
fcmovnu
leave
out
ljmp
mov
cmpl
mov
ljmp
std
aam
idiv
loope
stc
out
fucomi
mov
filds
mov
aam
aam
xor
test
in
aas
repz
testb
xchg
int
xor
repnz
xor
test
cmp
cmp
lret
lret
nop
lret
mov
in
cmp
leave
call
cli
cli
cmp
ret
out
cli
loope
out
iret
call
jmp
xor
cmc
std
cmp
test
xlat
ret
jmp
ret
sti
sti
clc
mov
xchg
divb
ljmp
clc
jmp
cmp
in
ljmp
out
loopne
mov
ror
loopne
xlat
icebp
repz
aaa
cmp
cld
loop
rolb
loopne
leave
iret
rolb
mov
imul
in
lock
loope
rcl
jecxz
std
fcmovnu
in
out
xlat
enter
lea
shl
lock
cli
shl
xor
adc
stc
test
clc
int3
fldl
out
xchg
out
int3
jmp
out
rcl
ror
repz
std
cld
out
cmp
nop
out
stc
lret
shl
xor
fnstcw
into
xor
sarl
lock
test
into
lds
lock
leave
cmp
jmp
fdivp
sti
lock
aas
mov
jecxz
in
jecxz
icebp
fst
aad
out
idiv
cmp
std
sti
fcmovnu
loop
stc
jecxz
mov
aam
test
xchg
xchg
rol
icebp
hlt
clc
cmp
stc
in
rcl
add
test
aam
mov
leave
sub
xchg
call
in
shr
ljmp
fadds
or
or
add
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
mov
std
into
nop
mov
jle
add
ret
sbb
in
leave
mov
call
jmp
cmp
iret
sarb
sub
stc
les
loop
fcomp
mov
aaa
out
fnstenv
cmp
cld
int3
sarb
fcom
sar
jmp
fldl
xchg
jmp
shl
cli
aaa
cmp
aaa
cmp
in
cmp
aam
cli
hlt
jmp
lea
enter
lret
out
call
aas
rolb
stc
hlt
test
xlat
cld
xchg
lock
call
iret
xor
fsubrp
std
fiaddl
shr
in
int
call
loop
jecxz
ror
iret
mul
cmp
repz
cmc
shl
cmc
decl
repz
in
shr
fadd
xor
aas
enter
lock
fld
loopne
std
out
call
lock
xchg
xchg
jmp
leave
div
cmp
and
xlat
in
ljmp
out
hlt
xchg
repnz
clc
rcl
iret
aad
out
rcl
stc
xor
cmc
loop
shr
orl
jmp
out
enter
rcr
fidivrl
ffreep
cmp
cmpl
repnz
test
enter
rorl
xor
ljmp
int3
jmp
aaa
flds
mov
ljmp
loopne
in
in
aaa
jmp
leave
fdivrl
in
cmp
test
mov
incl
dec
jecxz
adcb
lret
cmp
ds
xchg
repz
addl
std
loopne
jecxz
cli
rol
call
fistpll
cmc
out
adc
in
into
iret
nop
xchg
xchg
xor
cmp
aas
hlt
std
rcr
out
ret
sarl
out
int3
cli
loop
xchg
xchg
rcr
into
out
cmp
stc
cmpb
fdiv
ret
rcr
jmp
in
call
into
mov
xor
lret
cmp
flds
mov
rcll
ss
stc
xor
rcl
jmp
ror
flds
in
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
inc
mov
jle
ret
jle
int
xchg
out
cmc
in
lret
repz
iret
cmp
aad
jmp
cld
iret
ds
loopne
add
lock
jmp
mov
mov
stc
shlb
fsubrp
cmp
fadds
add
call
out
xchg
loop
rcl
hlt
out
cli
lret
repnz
xchg
out
clc
aam
mov
clc
test
xchg
xchg
int3
jmp
lock
sub
ret
fsub
fadd
xor
fnstenv
vpavgb
out
out
mov
fldl
lock
clc
aam
enter
cmp
xor
fmul
movb
rolb
mov
repz
cmc
rcr
cmp
call
out
shl
ror
fld1
lret
out
out
loopne
leave
fmulp
cmc
xor
icebp
lock
fcmovu
xor
out
call
cmc
adc
loope
out
into
repnz
faddp
loope
shl
cmc
leave
aad
int
xlat
cmp
ret
sti
shl
rolb
lret
cld
mov
xor
int
repz
call
rol
ret
in
mov
fisttpll
hlt
xor
aaa
shlb
out
jmp
flds
cli
fiaddl
out
out
nop
nop
out
div
xor
out
xor
loop
rcr
ret
cli
mov
call
test
lock
cmp
idiv
in
rcl
ret
std
sti
faddp
lret
fcmovu
jmp
sub
xor
aam
ror
leave
cmp
sar
xlat
cmp
aad
fmuls
lock
cld
mov
aaa
enter
repnz
out
jmp
lock
fcmovb
addl
in
loop
cmp
fcom
cmp
fnstcw
iret
int3
lock
cli
lret
mov
mov
enter
rcll
lret
out
ror
iret
aas
cmp
fcom
out
out
cld
int3
icebp
in
iret
jmp
int
ret
sti
clc
xor
cmp
aam
out
test
testb
jecxz
int3
jmp
mov
xchg
xchg
in
sub
lock
shl
fdiv
sar
sbb
fildl
leave
mov
mov
mov
push
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
fiadds
call
iret
rol
int3
cmc
in
xor
fadds
rcll
imul
lock
out
out
clc
fmulp
fadds
lock
fmulp
int
call
lock
aam
cmp
divl
cmp
std
out
hlt
std
stc
in
cli
test
nop
lock
std
xchg
out
mov
xor
cs
aam
div
into
in
repnz
fsub
jmp
cli
add
mov
roll
xor
jmp
xlat
fmulp
cmp
shl
aad
xlat
in
mov
fmulp
aad
rol
aad
mov
ss
jecxz
cmp
mov
int
xlat
ret
rorl
sub
in
hlt
fmul
cli
loopne
shl
fcomip
add
testl
xchg
xchg
ror
shll
idivb
cmc
faddl
test
lock
jmp
cmp
repz
xlat
clc
sbb
add
int3
leave
out
leave
mov
lret
xchg
xor
int
div
hlt
std
repnz
in
loopne
in
hlt
hlt
clc
loope
stc
lock
in
mov
sti
cmp
push
xor
lock
ror
cmp
leave
loop
jecxz
enter
out
sub
in
in
jmp
sar
fcmovnu
in
mov
filds
out
sti
incl
xor
fstpt
fcmovu
ffree
faddl
jmp
mov
rol
fcmovnbe
fadd
in
cmc
div
sti
aam
out
lret
clc
jmp
lock
nop
loopne
repnz
xlat
xlat
aaa
hlt
loopne
ror
fldl
cld
aam
mov
lock
enter
nop
int3
ss
sar
std
aad
cmp
ds
into
xchg
shl
testb
fcmovnu
xchg
out
clc
in
ds
jmp
sarl
fdivrp
ffree
loopne
cli
test
leave
nop
mov
icebp
xchg
sar
jmp
cmp
cmp
rcr
orb
jecxz
iret
rcl
xchg
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
std
jnp
loope
mov
jle
mov
loope
ret
leave
jmp
into
int3
loopne
lret
ljmp
sti
lret
sti
in
mov
sub
repnz
hlt
xor
cmp
loopne
sarl
stc
out
mov
std
decl
lret
lock
shlb
cli
jmp
std
in
cmpl
in
test
fisttpl
mov
rcl
lock
rcl
fcmovb
out
fsubr
test
clc
shl
xchg
jecxz
sar
cmp
xlat
fcmovu
xlat
cmp
lret
into
fsubrp
cmc
fildl
into
jmp
testb
out
lock
aam
lock
shl
div
fisttps
mov
lret
out
cmc
test
test
sti
in
fdivp
lock
stc
sti
cli
movl
xchg
cmp
xor
stc
hlt
std
in
loop
in
fildl
mov
shl
loop
fsubrp
out
repnz
xor
cli
fcmovne
fucomip
cld
jecxz
testl
dec
out
in
loop
ret
vpmuludq
not
cld
jmp
repnz
sti
fadd
enter
adcl
in
lock
sti
fcmovnbe
ss
ror
or
fdiv
cld
aad
jecxz
mov
loopne
xchg
cld
mov
out
out
xor
dec
cld
aad
aad
xchg
fdivr
lret
addb
lret
hlt
xor
sti
ss
cld
fst
sub
ror
test
mov
loop
in
out
test
hlt
fcomp
dec
inc
sti
clc
repz
ret
repz
lock
lock
jmp
jecxz
int3
fyl2xp1
f2xm1
aas
addl
xlat
lock
out
test
mov
into
cmp
xor
out
loop
out
sarl
cmp
enter
sbb
fimull
in
repnz
xor
aam
ret
fcmovbe
mov
out
aam
hlt
ss
aad
leave
jmp
adc
jecxz
fsin
int3
xchg
nop
mov
fucomp
xchg
loop
xor
mov
adcl
xor
adcl
xor
adcl
add
add
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
aas
in
mov
add
out
jmp
stc
adc
in
cld
cli
aad
mov
test
xlat
shr
out
out
out
iret
leave
lret
cmp
xlat
loop
fiaddl
xchg
int3
std
loope
repnz
lret
int
lock
shl
movb
mul
mov
icebp
xchg
aam
test
repz
lret
rcr
cmc
filds
out
leave
leave
les
fucom
in
and
fcmovnbe
fcmove
sti
fucomp
repnz
fadd
lock
leave
mov
loope
loopne
aam
fcmovb
int
fdivr
xor
repz
jmp
in
xlat
ljmp
rol
idiv
in
leave
aam
clc
idiv
rcl
out
ret
in
addl
loop
shl
shr
out
repz
jmp
cmp
aad
fmuls
sti
xchg
repnz
iret
xor
cmp
iret
in
int
xlat
into
cmp
clc
xchg
xlat
jmp
cli
mov
loop
add
aam
in
repz
shl
cld
xor
xlat
movl
mov
jmp
int3
call
cmp
xlat
in
aad
cld
out
lea
hlt
xor
ss
ljmp
repz
faddl
sar
lret
div
xor
cmp
clc
loope
cmc
icebp
fxtract
shl
repz
jecxz
leave
ret
lea
das
enter
xlat
repz
hlt
cli
icebp
rcl
add
lock
icebp
xor
aam
fldcw
shr
sti
fsubrp
fmul
in
orl
fmul
loopne
rcr
xchg
mov
xor
cmp
cli
in
in
into
repnz
jmp
imul
clc
jmp
test
mov
call
std
into
fcmovnu
rcl
cmp
sar
shl
clc
xlat
xchg
xchg
rcr
out
leave
xor
xor
aas
ljmp
ds
cmp
mov
mov
lret
in
test
into
xor
out
sar
aad
test
add
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
add
repz
jle
ret
jle
lret
stc
cmp
jecxz
out
faddl
leave
sub
iret
sti
loopne
mov
jmp
lret
and
into
icebp
in
enter
mov
orl
xor
into
rcl
loope
cmp
leave
loope
aas
mov
sbb
call
into
aad
ds
cli
lret
aas
icebp
incl
sub
fcomp
mov
in
aad
leave
fdivl
std
cmp
in
sti
lock
ds
mov
sub
lret
call
aad
fldlg2
cmp
sar
ljmp
incb
int3
int3
in
out
orl
sti
xor
rcl
sti
cli
cmp
test
loop
loopne
loopne
in
out
shl
ret
aaa
ljmp
fidivrl
jmp
in
loop
sar
xor
iret
call
xor
sar
lret
fdivrl
out
out
aas
jmp
sub
in
mov
loope
clc
in
cmp
xlat
cmp
test
aad
mov
loop
addb
enter
fdivl
fcmovu
rol
cld
lock
call
repnz
xchg
xchg
shr
ret
xor
ljmp
clc
fstp
out
int3
clc
mov
shr
xor
aaa
icebp
xlat
ljmp
cmp
icebp
cmc
rolb
sti
fsubrp
xchg
xchg
sub
out
jmp
loope
in
loope
in
clc
in
leave
sbb
fisttpll
cmp
jecxz
cmp
in
loope
and
jmp
nop
in
in
std
lret
loop
out
div
divl
cmp
xor
aam
aas
not
in
cmp
loop
sti
fucomip
in
sub
lock
iret
out
incl
sti
cld
loope
in
add
mov
loop,pn
icebp
enter
loopne
sbb
rcr
cmp
rcl
aad
lret
out
int
out
out
xor
repz
lret
imul
testl
pop
add
add
int
lret
in
aad
stc
test
jle
add
neg
cmc
in
cld
loopne
fstp
cmc
call
shl
xchg
loop
fucomip
fsubr
les
cld
fsubrp
out
aad
loope
out
mov
repnz
aam
xlat
in
jecxz
call
cmp
loope
fiaddl
mov
test
out
mov
shr
in
cs
cmp
std
cmp
ret
sti
xor
clc
ljmp
nop
mov
nop
out
ret
jmp
cmp
fsubrp
leave
aas
aad
fcomp
aas
aam
jecxz
jmp
or
sti
jmp
iret
in
in
xor
ljmp
inc
in
fistpll
test
and
xchg
rorl
xlat
sarb
cmp
cmp
rcl
fcmovu
stc
cli
roll
jmp
fcmovne
in
loop
not
fcmovnb
fnsave
jmp
test
lret
loop
incl
nop
aam
mul
rcl
call
cmp
cmc
aam
repnz
jmp
clc
ret
in
fmull
int
fcomi
hlt
repz
test
cld
fcmovnb
in
incb
out
lret
cli
rol
out
stc
addl
in
test
xchg
test
aas
ds
imul
vcvtdq2pd
std
cli
mov
lea
xor
lret
rcl
call
loop
addb
in
fiaddl
hlt
sar
rol
cmp
fucomi
lret
incl
aas
in
cld
rol
stc
lock
xlat
in
repnz
cld
lock
repnz
repnz
shl
sub
loop
fbstp
imul
xlat
iret
out
clc
xor
leave
ljmp
mov
clc
into
leave
and
hlt
aam
loope
shl
repz
aad
lock
aad
in
cli
adc
int
xchg
fldl
jmp
xor
fcomp
hlt
sar
xchg
sti
clc
ljmp
jmp
cmc
xor
enter
aam
fldt
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
in
xchg
xchg
leave
sti
out
out
fsubp
fucomi
in
int3
jmp
lret
jmp
out
jecxz
rcl
icebp
in
out
rolb
iret
test
jecxz
not
xor
sti
int3
sar
stc
cli
lock
sti
mov
sti
test
mov
in
ss
fldl2t
int3
sti
cmp
cmp
cmp
aam
loop
repz
ljmp
out
leave
xor
xor
cmp
rcr
out
sbb
mov
out
into
test
loop
lret
das
enter
lret
inc
cmp
ret
out
into
jecxz
test
repz
out
int3
div
cmp
lret
loopne
cli
out
cmc
ret
mov
lret
fcomp
and
iret
out
sub
fsubrs
in
cmp
fabs
in
shl
cmc
std
fdecstp
cld
addl
repz
ror
repz
repnz
cmc
jecxz
cmp
mov
and
test
repnz
dec
incl
fdivr
test
fsubr
shr
loop
ljmp
out
aam
in
shr
icebp
loope
aam
cmp
mov
hlt
aad
stc
addl
cmp
cmp
xor
int
fidivrl
iret
jecxz
aas
fsub
ret
out
fsub
out
mov
ror
repz
shr
shl
fiaddl
jmp
clc
into
orb
cmc
int
lret
sar
leave
jmp
cld
addl
mov
adc
int
clc
in
into
xor
cmp
xor
loope
jecxz
cmp
sti
rcr
icebp
cmc
repz
les
std
loop
cs
stc
call
fbstp
rol
test
stc
hlt
add
mov
loope
out
call
shlb
in
fcmovbe
cmp
cmp
idiv
sar
leave
call
mov
jmp
xchg
int
lock
not
int3
stc
into
aad
cmp
shl
in
out
fsubr
enter
and
shl
jecxz
in
aad
out
cmp
jmp
cli
fldz
shl
orb
sbb
pusha
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
fildl
add
mov
jle
ret
jle
filds
lock
int3
loope
aad
clc
xor
fucomp
loopne
int3
imul
test
faddl
cld
stc
movl
aaa
cmp
in
into
ror
neg
xor
mul
les
cld
in
fcomip
ljmp
out
sarb
jmp
cld
clc
fcmovne
div
fadd
repz
xlat
cld
lret
leave
loopne
out
nop
xchg
ss
xor
xor
cmp
sub
out
mov
fisttpl
lret
xor
xor
ljmp
jmp
cmc
rol
shr
ljmp
orl
fnstcw
rcl
fldl2t
shll
fdiv
fdivrs
testb
call
cs
aad
aam
ss
aas
shr
sar
xchg
cmp
cld
loope
out
in
lock
lret
lock
cmc
sub
repnz
stc
ss
rcr
idiv
les
cmp
aad
clc
sti
cmp
test
ror
iret
int
jmp
fdivr
xchg
fadds
aas
stc
lret
xchg
shr
xchg
idivl
xor
repnz
rol
xchg
fiadds
in
dec
std
rcl
iret
int
cmp
repnz
aam
fcmovu
in
aam
std
stc
aam
flds
lret
int3
call
xor
clc
cmp
cmp
adc
ret
stc
lock
in
jmp
xchg
test
out
cmp
into
hlt
sub
lret
lret
test
mov
sub
fdivr
cmp
sti
cli
idivl
cld
xchg
lret
test
icebp
shl
out
ljmp
shl
neg
shl
ffreep
iret
fld1
fcmovnb
sbb
mov
fsubr
lock
out
fsubr
out
cli
xor
in
fneni(8087
xor
in
clc
out
not
rcr
out
in
enter
call
std
xchg
call
cld
in
jmp
leave
cmp
fsub
hlt
xor
neg
lret
enter
faddl
fcmovnu
std
lret
idivl
lock
shl
out
enter
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
lods
push
call
jle
add
jmp
shl
icebp
int
into
rol
enter
sar
out
rcr
repz
sti
fcmovnbe
fildl
shr
int
jmp
hlt
ss
jmp
out
int3
cmc
out
into
cmp
sar
rol
repnz
mov
lock
loopne
test
iret
xchg
repnz
idiv
cmp
fucomip
jmp
neg
enter
out
fiadds
in
fmul
cmc
xor
repz
repnz
ds
loope
repz
leave
lret
addl
xor
xor
out
repnz
std
cmp
cmp
rcl
lock
std
fsubp
mov
std
fcmovu
int3
into
xchg
int3
lret
fdivrs
cli
cmc
loop
cmp
call
nop
loop
ror
decl
aad
stc
sar
repnz
cmp
aas
cli
call
lret
stc
std
loope
lock
jmp
lret
fucomi
cmp
in
xlat
faddp
sti
leave
jmp
stc
loopne
out
repnz
loope
out
out
sar
push
cmp
cmc
out
shl
ret
xchg
xchg
loopne
repnz
repnz
hlt
stc
aad
xor
ljmp
addl
jecxz
leave
jmp
loop
xchg
lock
out
cmp
cmp
loopne
xlat
rol
loope
leave
cld
mov
int3
xchg
vshufps
lret
sti
std
lock
rolb
ljmp
decl
out
stc
stc
leave
jmp
sti
ds
cli
cmp
sti
loopne
in
lret
in
xchg
lock
xchg
sub
std
out
fxch
aam
in
jmp
sbb
ljmp
mov
mov
nop
test
out
jmp
sarb
lock
clc
int3
inc
test
ljmp
mov
xchg
out
loope
cs
div
cmp
fcmovbe
iret
fadds
sti
repz
test
shl
int
jmp
enter
out
xor
fnstsw
fdiv
jmp
out
iret
or
rol
icebp
cmp
iret
out
cmp
rcl
test
cli
ror
in
in
aas
jmp
rol
rcr
and
mov
cmp
jle
add
jecxz
jmp
hlt
enter
cs
jmp
xlat
in
xchg
out
faddl
jecxz
jmp
aaa
aam
int3
sti
enter
iret
cmp
cmp
aam
in
testl
loop
sub
jmp
fidivrl
aas
aam
in
cli
loopne
shl
loop
lret
cld
icebp
fiadds
ss
out
lock
std
ret
loopne
mov
test
lret
xchg
hlt
jmp
shll
sub
clc
roll
out
fcmovu
out
cld
cli
loope
xchg
iret
icebp
in
xor
aad
lock
int3
cmp
in
aad
repz
mov
in
stc
sbb
icebp
xchg
ljmp
lret
into
icebp
ffree
xor
hlt
fsubp
fdivrs
faddl
incl
ljmp
fcmovb
loope
loop
loope
test
int
mov
call
repnz
lock
fcmovnb
cmp
iret
lock
out
mov
lret
rolb
repz
lret
lock
in
in
call
sti
enter
in
xchg
in
cli
call
cmp
ret
jecxz
aad
jmp
adc
jmp
jecxz
xchg
out
xchg
sub
in
xor
int3
loopne
int3
in
shl
in
inc
fadd
cmc
aas
mov
sti
fcmovne
or
in
xor
sti
xor
repnz
ret
fsubr
mov
loopne
loopne
fucomp
xchg
lock
in
jmp
idivl
shlb
out
loopne
sarb
repnz
fnstcw
aam
mov
lock
iret
out
fdivr
hlt
fcmovne
clc
aam
fdecstp
xor
xchg
fmull
aas
hlt
lret
fld
std
stc
fidivrs
cld
clc
cmp
loop
aas
cli
test
inc
fdivr
les
xchg
jecxz
mov
ljmp
not
out
rolb
and
out
mov
out
xor
cli
xor
repnz
cli
rcl
int
test
ror
filds
mov
mov
add
jmp
fadd
lret
fstp
aad
mov
cmp
cmp
ret
jle
ljmp
stc
cmp
out
loopne
cmc
xchg
shl
in
stc
std
jmp
test
pop
mov
aam
repz
adc
sarb
flds
out
xchg
repnz
fists
jmp
in
ror
fdivrl
cmp
sar
idiv
cmp
mov
mov
ljmp
int3
out
out
out
cmp
shl
int
xlat
shl
lret
stc
mov
loopne
xchg
xor
aaa
ljmp
cmp
and
loopne
stc
fnclex
in
jmp
aam
jmp
loopne
out
cld
lock
std
fldz
stc
aad
repnz
fiaddl
jmp
not
out
iret
clc
imul
int3
aaa
cmp
cli
sub
icebp
xchg
xchg
rcl
xor
cmp
std
hlt
clc
int3
in
movb
aas
mov
out
leave
mov
aam
shr
aaa
hlt
out
sar
idiv
out
shl
fadds
in
out
stc
and
repnz
xor
xlat
fcmovbe
ljmp
jmp
in
sar
leave
mov
icebp
shl
leave
jmp
aad
out
hlt
cld
rcr
out
loope
mov
xlat
leave
xchg
shl
repnz
in
ror
shl
cmp
cmp
fcomi
mov
out
out
shr
out
xor
jmp
ljmp
rol
loope
std
fimuls
out
les
loope
cmp
aaa
lock
repnz
sti
addl
fcmovne
xchg
repz
xor
ss
enter
repnz
into
cld
ret
shl
cli
std
jmp
xchg
in
out
lret
out
call
idivl
cld
iret
rcr
rol
cmp
lret
fscale
out
out
in
xchg
repnz
not
aaa
cmc
in
fsub
icebp
cmp
repnz
hlt
fidivrl
fincstp
in
lret
into
xchg
loope
out
in
cmc
repz
repnz
cmp
shl
flds
mul
addl
repnz
stc
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
xor
ret
jle
jecxz
cmp
xor
cli
fistpll
fcomp
xchg
aad
addb
out
enter
cld
icebp
iret
icebp
clc
repnz
in
cmp
cld
rcl
fldl
out
incb
test
fcomp
jmp
aad
or
mov
out
ret
test
out
call
lret
sub
repz
out
aas
test
loope
fadd
sti
sar
jmp
std
test
cmc
shr
shl
fdivl
rol
into
aaa
sti
shl
in
shl
test
cld
in
mov
les
xacquire
leave
enter
repz
incb
ror
mov
mov
xchg
into
int
into
repnz
div
sbb
aad
ljmp
stc
lret
lock
aas
in
cmc
out
cmc
cli
leave
aam
in
cmp
sar
jecxz
testb
xchg
lret
into
xor
out
sar
call
lret
sti
hlt
xlat
rolb
out
xlat
call
call
clc
ljmp
xlat
flds
test
call
std
rcl
icebp
jmp
int3
out
cld
rcl
fidivl
test
fcmovnu
xchg
in
lret
jmp
rorb
fdivl
and
cmp
iret
out
xlat
testl
into
xchg
jecxz
xor
fdiv
sti
hlt
cld
imul
cmp
fdivr
cmp
jecxz
jmp
lret
in
enter
aad
lret
int
ror
cmp
call
in
jecxz
iret
in
sub
aaa
ret
cmp
out
pushl
test
adc
test
mov
cld
mov
mov
loope
xor
aam
out
ror
cmp
icebp
cli
cmp
add
jmp
fadds
leave
repnz
repz
loop
jmp
cld
addb
shl
cli
fadd
std
call
repnz
hlt
jmp
in
aam
cmc
int
std
aad
test
icebp
lock
xchg
stc
xchg
filds
xor
hlt
int3
add
jmp
xlat
into
ror
fxch
flds
jp
pop
cmc
inc
pop
into
add
jle
ret
jle
ss
out
into
aad
cmp
int3
fucom
mov
xchg
mov
xlat
in
loopne
jmp
out
out
fsubp
int3
ljmp
test
out
iret
lret
fincstp
ljmp
clc
mov
clc
dec
jmp
fisttps
lret
stc
cmp
repz
shl
out
xlat
out
filds
fcmovnu
mov
mov
xchg
out
test
lock
xor
cld
lret
aas
ds
shl
stc
enter
mov
stc
out
adcl
cmp
lock
idiv
sarl
loope
fdivp
aam
add
lret
mov
cli
clc
xchg
decb
sar
icebp
xor
int3
enter
in
icebp
into
iret
xchg
ret
aam
xchg
cld
mov
in
xchg
into
xchg
xchg
out
out
cs
jmp
sti
aam
cli
repnz
call
mov
int
in
into
in
inc
out
xlat
in
ror
aaa
cmp
enter
div
sar
shl
repnz
icebp
shr
loop
or
out
in
cmp
shll
jmp
rol
clc
cld
cli
out
jecxz
fmulp
mov
cmp
cld
rol
repz
xor
xchg
call
ljmp
clc
xor
int
in
in
clc
call
neg
test
test
fmul
xlat
loope
jmp
xrelease
out
enter
std
into
clc
faddp
fdivrp
loopne
loopne
shl
cmp
loope
fimuls
jmp
fsub
fdivrs
int3
icebp
cmp
add
flds
aad
cld
sti
icebp
or
xlat
repz
fxch
xor
aas
fsubr
fdivrp
jecxz
idiv
ret
jmp
in
cld
mov
xrelease
icebp
stc
repz
cmp
cld
fcmovne
rcr
sti
and
cld
jecxz
xchg
nop
call
cs
fnsetpm(287
cmp
aam
neg
int
aad
cmp
cld
xabort
out
ret
lret
xchg
out
fldln2
rcl
cmp
lock
xlat
xor
cmp
enter
jmp
sub
xchg
xchg
hlt
ljmp
clc
orl
leave
int3
aam
aad
fnstcw
ficompl
decl
inc
lock
ret
jle
aam
std
cmp
rcr
fmul
incl
loop
xchg
in
out
int3
in
cmp
in
out
clc
fucomi
repz
fnstcw
fadd
ret
in
cmp
test
ljmp
clc
cmpb
loop
testb
lds
fstl
clc
sar
xor
cmp
icebp
ret
repz
jmp
loopne
xchg
in
nop
test
repz
repnz
aam
out
fcmove
shl
idiv
repz
fcomi
std
out
shl
int3
shl
xor
lret
cmp
adc
clc
xlat
rcr
idiv
out
mov
out
lret
hlt
fmul
ljmp
rcl
cld
rcl
repz
aam
cli
cld
inc
cmp
into
ljmp
aad
repz
fdiv
cmp
iret
add
fldl
sbb
in
into
repnz
icebp
ss
leave
fcmove
cmc
sti
into
std
test
loopne
fdivr
enter
ljmp
aam
cmp
aad
cmc
fcmovu
repnz
sar
cmp
sti
mov
cmc
mov
enter
lock
fdivr
ds
repnz
std
rcr
mov
mov
mov
xchg
aam
xlat
ljmp
out
loope
clc
cmp
fstpt
roll
xchg
int
test
aam
sti
aam
sarl
faddp
in
sti
ret
fadd
jmp
out
jmp
xchg
loopne
ss
lret
jmp
sar
lret
cli
faddp
and
aad
xlat
lret
in
sti
orb
loop
hlt
out
lret
repz
push
ss
fadds
cld
les
xchg
repnz
in
xor
out
out
cmp
not
ffree
cmp
inc
xchg
decb
incb
cmp
xor
icebp
lock
repz
aam
roll
in
iret
int
rolb
xor
adc
hlt
in
ss
fucompp
mov
in
inc
lret
sti
loop
loopne
iret
rorl
div
not
in
cld
into
aas
mov
jmp
rol
int3
fmul
aad
mov
leave
or
jle
add
into
sar
rcr
fcmovu
call
int
enter
cmc
repz
ss
out
aas
int3
adc
jecxz
repz
ljmp
fmulp
mov
xchg
or
aam
fld
stc
repz
iret
shl
jecxz
lret
out
fadd
out
fucom
nop
enter
ss
cmp
addb
cmc
loopne
jecxz
lret
std
test
repz
lret
enter
in
vpmulhuw
lds
iret
xchg
into
icebp
mov
mov
fld
aam
test
in
in
enter
out
hlt
out
iret
xchg
xor
div
std
lret
faddl
mov
out
xchg
lea
cmp
repnz
rcr
fdivp
ds
iret
add
mov
repz
out
fcmovb
hlt
sti
int
aad
idivb
jecxz
inc
and
cld
fisttpl
loop
enter
in
int
jmp
cld
cmp
out
sti
iret
rcl
call
loop
lret
xchg
iret
mov
shr
xor
cmp
cmp
cmc
loope
inc
call
mov
xchg
out
dec
in
icebp
in
in
cs
fdiv
enter
dec
sarl
repnz
aad
rcl
neg
fptan
icebp
sti
fucomp
hlt
repnz
out
fucomi
leave
hlt
faddp
fabs
cmpb
fcmovnu
in
movb
loopne
in
lock
into
xor
shr
shl
lret
clc
shl
addl
out
xchg
std
out
ljmp
cli
leave
cli
fucomip
sar
jmp
in
rcl
stc
fsqrt
stc
leave
jmp
orb
shr
fidivl
int3
ljmp
fxam
idiv
ffreep
jecxz
in
call
lret
repnz
fadd
repnz
cli
shl
in
or
jecxz
stc
mov
dec
enter
int
out
xchg
jecxz
jmp
into
fnop
aad
in
cmp
aad
clc
out
stc
int
or
in
aaa
xor
cmp
out
rcr
test
iret
xlat
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
stos
aaa
mov
ret
jle
cmpl
into
addl
cmp
jmp
adc
stc
mov
fadd
jmp
div
lret
jmp
fcmovnu
in
ror
xor
std
cmp
shl
fcmovu
test
out
int
out
in
mov
call
fxch
out
cmp
fdiv
cli
fcmovne
test
loopne
sbb
addl
ret
jecxz
call
sarb
xor
aam
jmp
shr
jmp
aam
rcl
fptan
shl
sti
faddl
clc
test
fsubp
jmp
xor
aad
out
jmp
idiv
fistpll
fst
into
out
xbegin
fdivr
into
in
mov
jmp
aaa
sti
cmp
das
cmp
div
cmp
loopne
aad
cld
xchg
out
call
in
aad
ds
ds
xlat
div
adc
jmp
fadd
test
xchg
aam
das
fdivrs
clc
out
call
cmp
hlt
shl
add
lret
test
out
call
sub
enter
aam
hlt
jecxz
int
call
repz
std
test
jmp
xor
hlt
stc
call
rcl
clc
filds
testb
mov
lea
into
out
cld
enter
aas
int
cld
shl
rcl
cli
int
cld
xchg
out
repnz
in
out
repnz
cli
repz
repz
out
nop
rclb
loop
xor
fcomp
shr
cld
cmp
fcomi
hlt
hlt
aam
cmp
fidivrl
fxch
out
test
fptan
leave
cmp
shl
rol
hlt
aad
jecxz
roll
jecxz
mov
jecxz
int
fcmovbe
xor
in
or
ds
clc
ret
loop
or
test
xor
in
sti
lds
aad
cmp
iret
testb
int3
out
xor
lock
jmp
xor
out
fcomi
cmp
fdiv
aaa
cli
xlat
sti
roll
lea
fsubr
pop
add
add
aad
vpaddusw
aad
js
jg
or
jle
add
or
out
into
xchg
int
in
shrl
sti
xor
sti
sarb
cld
cmpl
and
nop
jmp
int3
aaa
clc
out
sarb
aad
cmp
fdivr
loopne
fiaddl
fsubp
xchg
iret
into
clc
int3
iret
call
iret
repz
sub
cld
call
sbb
hlt
call
repnz
shl
std
div
cmp
xor
cld
into
in
mov
aam
shrb
leave
in
aad
cld
aad
xlat
fcmovbe
fcomp
aas
sub
repz
stc
fucomi
out
mov
cmc
ljmp
std
out
lret
xor
rcr
stc
hlt
out
mov
fucomip
lock
xor
neg
cmp
out
iret
out
cld
loop
jmp
loope
mov
out
shr
idiv
jmp
cli
in
sar
aam
call
lret
ror
and
int
loop
xor
lret
hlt
loope
ds
bnd
mul
sti
out
rorb
out
cs
xor
fcomi
jmp
neg
cmp
clc
std
fdiv
sbb
into
out
mov
icebp
iret
idiv
aad
cmc
roll
ret
fimull
test
xchg
iret
call
int3
in
in
in
fcmovne
rcl
cmp
loopne
clc
cmp
incl
into
sub
in
incb
imul
in
in
cld
out
cli
loopne
loopne
cli
add
fmulp
lret
jmp
xchg
loop
ss
clc
ror
sti
lret
loopne
loop
addb
cmp
xchg
int3
ljmp
xor
xor
shr
repz
sti
jecxz
in
loope
int3
fiaddl
xor
leave
stc
hlt
fucomp
repz
ror
cmp
aam
cmc
shl
jmp
mov
test
loopne
xor
cmp
cmp
cmp
repz
addb
mov
fmulp
into
neg
int3
lret
into
clc
ss
fcomp
cmp
sar
clc
cmc
mov
lret
roll
imul
sub
jmp
aad
int3
fmul
fnstsw
cmp
jecxz
pop
jle
ret
jle
mov
cmp
repz
test
in
jmp
out
lock
stc
mov
fmull
icebp
icebp
loope
lret
fcmovnu
xor
ljmp
cli
sti
cmc
fadds
out
out
int3
xchg
divb
xor
ror
aas
aas
rcr
fadd
iret
fucom
dec
in
ljmp
xor
enter
clc
lret
lret
in
adc
fstp
fcmovbe
repz
ljmp
xchg
in
aaa
divl
cmp
cmp
ds
rolb
sti
loope
stc
into
xchg
out
aas
in
call
iret
fucomi
shr
std
hlt
hlt
rcr
out
orb
fdivp
cmp
xor
enter
jmp
int3
rol
not
sar
and
ret
and
addl
stc
fcomi
sar
loop
out
lds
clc
enter
fcmovu
cmp
xchg
repz
in
out
frndint
xor
cld
xlat
loope
rcr
test
stc
push
jmp
test
xor
into
cli
xor
jmp
xor
test
ror
loopne
cli
rcll
xchg
vpsubsb
cmc
sti
cmp
fidivrl
cmp
hlt
adc
aad
leave
in
rolb
xor
in
cmp
sar
ss
xor
cmpb
cld
cmp
roll
repz
loop
call
out
in
xor
icebp
out
cmp
ror
shr
fmul
fucomp
mov
iret
out
shr
xlat
fldcw
int3
leave
fmul
cmp
sar
ret
call
test
lret
into
orb
xlat
cmp
not
into
icebp
in
rcl
lock
sti
mul
ret
vmovq
xor
ljmp
lret
ror
in
aad
aas
mov
ret
in
add
mov
div
cmp
xor
addb
fildl
jmp
clc
in
in
out
ljmp
aam
fcom
fdivrp
mov
ljmp
inc
in
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
inc
dec
inc
pushf
popa
jle
ret
jle
test
in
xor
cmp
out
fucomip
div
aad
in
into
jecxz
cmp
loopne
cmp
lret
in
aam
lret
lret
fsubr
in
cmp
loope
frstpm(287
xchg
in
out
in
jecxz
std
mov
shr
leave
xor
leave
in
xor
into
jmp
aas
into
rol
stc
call
rcl
cld
call
in
out
aam
xor
shl
ret
sti
icebp
testl
mov
std
mov
lret
call
loopne
clc
cld
repnz
ds
cmc
sbb
pop
fchs
jmp
loop
xchg
lret
shl
leave
cld
div
icebp
repz
fstpt
adc
cmp
lret
in
lret
fsub
out
fcmovbe
ljmp
repz
cmp
loopne
fucomi
fidivrl
in
jmp
jmp
test
mov
out
call
out
int3
cmp
test
shl
call
xchg
out
jecxz
in
shlb
jecxz
ret
sti
loope
loope
fsqrt
in
fsubr
rorl
div
into
f2xm1
call
cmp
fcmovu
rol
fsubr
testb
in
int
idivl
shl
iret
jecxz
ffree
mov
mov
jmp
out
xor
rcr
cmp
xlat
shr
rcl
xchg
stc
shl
test
mov
lock
xchg
rcr
xchg
xchg
cmc
iret
not
int3
into
stc
fsub
xor
out
out
testl
icebp
icebp
shll
xlat
lret
idiv
hlt
fdivrp
cmp
icebp
sar
leave
ret
out
jmp
mov
shlb
xlat
hlt
icebp
cmp
fiadds
std
icebp
lret
rolb
rcl
int3
iret
cmp
icebp
std
addl
clc
ffree
cld
into
in
out
sti
and
loopne
sub
lret
xor
enter
ljmp
out
add
stc
stc
fldpi
xchg
mov
xchg
jmp
cmc
std
jmp
lret
ds
ss
sti
rcr
cld
ffreep
in
fsub
xchg
out
mov
ret
fstpt
sti
jmp
int
int3
int
cmc
inc
cwtl
mov
arpl
ret
jle
sti
in
int3
xor
xor
into
icebp
adc
sar
cld
ljmp
fildl
clc
in
fcmovbe
xor
lock
shr
icebp
addb
jecxz
repz
mov
rol
in
cmp
iret
cmp
cmp
lock
out
sti
stc
sub
cld
int3
ret
xchg
in
xchg
out
xor
icebp
cmp
lock
fmul
fsubp
rorl
out
and
rcll
in
in
in
rcl
clc
cmp
sti
test
sti
movl
popl
xor
stc
cmp
clc
call
rcr
in
std
test
stc
and
mov
ljmp
fstpt
jmp
fdiv
hlt
testl
test
mov
into
jecxz
cli
icebp
in
icebp
clc
sti
cmp
fcomp
mov
repz
int3
fdivr
lea
jmp
repz
out
xor
cmp
cmpb
out
stc
loope
fldl
in
ror
loop
lret
fcmovnbe
fdivl
std
jmp
test
repz
repz
loopne
fcmovne
loopne
in
out
rorl
xlat
call
out
fsubrp
cmp
ret
call
int3
clc
cli
iret
out
xchg
hlt
iret
enter
fcmovbe
repz
aam
ror
out
hlt
xchg
enter
fmul
lret
in
cld
faddl
xor
jmp
cmp
fildl
cli
idiv
mov
xchg
out
int
xchg
in
iret
hlt
aaa
les
hlt
cli
icebp
repnz
std
jecxz
cli
std
rcl
test
fildl
rorb
xor
les
xor
sbb
sti
hlt
ffreep
frndint
sti
inc
in
test
lret
repnz
out
ret
aaa
aaa
aaa
repz
aad
std
ljmp
test
jmp
jmp
jmp
fdivp
in
xor
fnsave
fdiv
xchg
sti
xchg
loope
loop
aad
cli
cmp
int
aaa
cmp
cld
icebp
xor
rol
clc
xchg
in
nop
fcmovu
leave
mov
das
xor
test
decl
add
add
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
cmp
lret
aad
test
xchg
ljmp
into
jmp
lock
fmul
cli
leave
xlat
int3
xlat
out
test
hlt
testl
in
int3
mov
enter
lret
ljmp
test
jmp
addl
icebp
clc
enter
cmp
cmp
lret
adc
and
jecxz
jecxz
leave
movb
in
repz
sti
iret
xlat
int
test
enter
int
fdiv
test
xchg
aam
in
jmp
in
fdiv
in
hlt
std
hlt
ds
lret
ljmp
xchg
nop
cmc
shr
xor
xlat
cmc
in
cmp
ds
ret
std
fcmovnbe
aad
xor
xchg
or
iret
xor
fdivrs
int
out
lret
out
cld
cmp
repz
hlt
out
incb
test
aad
enter
lock
cmp
cmp
stc
addl
clc
int
test
int3
enter
cmp
out
fprem
xor
rcr
cmp
dec
jmp
xchg
out
xor
clc
stc
shll
das
ds
xor
into
ret
stc
inc
test
and
mov
fists
xor
repz
cmp
lds
lock
jecxz
out
sub
lret
cli
repz
leave
xor
cmp
faddl
test
roll
jecxz
xchg
xchg
xchg
jmp
fdivr
aad
mov
fadds
clc
fisttps
fadds
das
iret
int
clc
xor
fucomp
std
ljmp
rcl
out
out
stc
in
in
in
mov
rcr
into
cmp
ror
cmc
aad
aas
shr
out
ret
ret
loopne
ffree
xchg
leave
mov
xchg
xchg
aam
ss
aad
hlt
lret
std
fdiv
int
incb
lds
lret
rolb
stc
call
xor
fidivrl
std
loopne
fsubp
in
int3
out
std
test
div
fld
cmp
out
call
xor
decl
add
add
rol
int
fstl
mov
push
xchg
call
add
sarb
repnz
ds
sbb
out
out
and
loopne
xor
aam
hlt
in
cmc
lock
cmp
cmp
stc
lock
xlat
leave
fmulp
std
xchg
int
xchg
or
xor
cmc
hlt
jmp
rol
stc
ret
cli
out
sub
xchg
lock
ss
push
sarl
cmp
loope
leave
lret
out
in
out
lret
test
into
cmc
int
jmp
idivl
cmp
clc
in
fcomp
fdivrp
rcll
sarl
rcl
cmp
iret
xor
aas
std
leave
mov
in
mov
lret
sti
into
fdivrp
iret
ljmp
ret
test
test
enter
loop
test
in
in
stc
shrl
icebp
cmp
into
jmp
clc
aas
into
addl
test
ror
xor
std
lock
add
test
out
mov
rol
repz
repz
std
aad
fdiv
int
shl
aam
loope
fsubrp
cmc
sbb
mov
xchg
mov
shll
int
rcl
aad
in
stc
cmp
ffreep
fldl
mov
sti
in
out
jmp
lret
into
cmp
cmc
cld
in
rcl
in
rorl
xchg
in
test
sub
in
hlt
in
ds
aas
xor
out
repnz
testl
rol
out
out
out
leave
enter
int
stc
rol
std
enter
lret
call
in
shr
in
jmp
repnz
aam
out
ds
loope
out
roll
out
out
loop
in
xchg
repz
cmp
call
incb
bnd
call
nop
f2xm1
jmp
in
nop
div
call
fnstenv
loopne
ret
loopne
leave
in
out
int
jecxz
mov
lret
aad
leave
cmp
lock
mov
repnz
ret
loope
stc
aam
cmp
loop
cmp
je
jmp
int3
ret
int
mov
pusha
das
mov
push
jle
add
clc
jecxz
repnz
loope
jecxz
in
fmul
out
mov
fcomip
xor
jecxz
lret
ljmp
jecxz
cmp
hlt
loope
cmp
xchg
and
in
in
fldlg2
out
cld
fcomi
fcom
sar
in
in
clc
lret
iret
into
jecxz
xchg
enter
ljmp
cld
fsubr
shl
cli
ffreep
cmp
add
mov
out
aas
in
int
in
rcl
int
rolb
shl
jmp
test
mov
icebp
repnz
icebp
out
int
ss
or
out
stc
cli
jmp
cmp
lock
xor
sarb
loopne
rcr
shl
xchg
fiaddl
lock
jecxz
sub
shr
sti
rcl
cld
aas
cli
cli
cmp
ret
repz
fcmovnu
int3
mov
jmp
fucomp
cs
lret
repnz
into
shl
inc
in
cld
decb
int3
xchg
jmp
out
fcom
fsub
in
cmp
imul
icebp
rcr
lock
test
xchg
jecxz
out
ljmp
shl
xor
into
rcr
out
jmp
mov
xchg
mov
das
rol
int3
jmp
call
loopne
fcmovnu
icebp
fldl
fdivr
in
loop
lret
fsubp
xor
hlt
cmp
leave
into
ds
ror
cmp
icebp
loopne
test
xchg
icebp
in
hlt
rol
in
lret
jmp
int3
cmp
rol
faddp
rorl
mov
cli
clc
fucomi
mov
loope
not
out
fcomip
cmc
aam
int3
fcmovnbe
cmp
movb
fsubp
loopne
popl
in
leave
cmp
fistpll
shl
fnstsw
fsub
and
test
mov
lock
leave
cmp
fucomi
iret
in
fcomi
incl
clc
cmc
in
test
fdiv
aam
int3
aaa
repnz
iret
lock
test
out
in
xlat
shl
test
leave
xchg
loop
repz
xor
ror
clc
fidivrl
repz
mov
jmp
push
mov
jmp
aad
iret
aas
rol
aad
push
inc
push
or
sarb
jle
test
jle
cmp
push
mov
in
stc
mov
in
rclb
clc
enter
test
loop
jmp
aad
into
out
sub
test
aam
repz
xor
rcl
in
std
loopne
rcr
fcom
repz
idiv
dec
cld
ror
fisttpll
stc
ljmp
ror
test
testl
sti
out
rolb
int3
int3
fidivs
in
repz
fcomi
mov
jmp
xlat
test
icebp
xchg
loopne
aaa
out
ret
clc
icebp
imul
ss
cmp
in
shl
out
jmp
sti
jmp
in
sbb
in
out
cmp
leave
aam
loopne
ss
decb
lea
xor
das
cli
in
xor
cmp
repz
stc
shl
sti
out
jecxz
testb
enter
aam
xor
cmp
fcmove
rcr
repz
xor
xchg
clc
movl
shrl
cli
int3
shlb
int3
loope
rcr
xlat
or
mov
sti
repnz
out
out
mov
xlat
xor
out
jmp
xor
shlb
aad
shr
into
xlat
aam
in
testl
icebp
aad
int3
in
ljmp
fdivr
test
ret
leave
imul
ljmp
iret
sub
enter
rcr
f2xm1
cmp
repnz
div
aad
loope
clc
mov
xchg
xchg
xchg
in
int
enter
cmc
out
fidivrl
int
hlt
rcr
fcmovne
fiadds
decl
in
in
loopne
ss
int
int
aas
ss
lock
cli
in
out
repnz
lret
cli
out
mov
filds
xor
loopne
jmp
stc
clc
flds
fcmove
test
test
fisttps
aaa
call
iret
addl
std
decl
roll
icebp
ss
cli
int
cmp
iret
xchg
cmp
mov
lret
out
xchg
loope
shl
in
aaa
lock
std
out
lret
sti
in
rcr
repnz
cli
ffreep
fcmovnb
ljmp
test
ret
test
xor
repz
lret
fmull
lret
repnz
aam
div
lret
int3
aad
xlat
cld
cli
filds
aam
fimuls
in
adcb
clc
xlat
div
sar
lock
in
and
test
lret
into
fsub
int
in
pusha
jmp
aas
into
lret
leave
aam
dec
jo
loope
les
test
jle
in
rorb
aam
fcom
idivl
out
int3
in
rcl
sar
hlt
fsub
test
ficoms
lret
fdivl
jmp
ret
repz
loopne
jmp
out
jmp
lret
xchg
sub
stc
not
in
out
int3
lock
jmp
aam
out
or
repz
sbb
xor
xor
fsubr
xlat
ljmp
out
repnz
cmp
call
icebp
in
out
enter
xor
int
out
loope
aad
ror
cmc
ror
out
xor
jecxz
xor
int3
sub
into
out
stc
jmp
fsqrt
idiv
ret
neg
out
xchg
jmp
mov
sub
ret
neg
ror
lret
sar
jecxz
loope
incl
mov
fdivrp
mov
fsubr
mov
in
int3
xor
imul
std
inc
mul
xchg
out
lret
icebp
lret
jmp
ror
loope
aam
rcl
hlt
inc
fcmovbe
loopne
fsubp
repnz
xlat
in
xchg
leave
out
testb
int
xlat
fcmovu
filds
out
sbb
in
loope
iret
enter
repz
jmp
rcl
loopne
clc
out
test
stc
aam
cmp
loop
xchg
repz
ret
cmp
leave
repnz
jmp
cmp
ret
stc
xlat
incl
call
in
stc
sti
cmp
cmp
loop
rcr
aas
xlat
ret
lret
jmp
in
in
rcl
xor
xlat
repz
int3
icebp
xor
cmp
fcomip
test
and
fcomip
lret
loope
aam
in
aam
cli
xor
jmp
hlt
addl
clc
mov
lds
ss
cli
int
cld
idiv
cmc
sub
leave
fadd
mov
test
mov
and
shl
cmc
enter
clc
sub
shl
cmc
filds
int3
xchg
in
aad
ds
cmp
vpaddusw
lret
mov
out
ss
jecxz
ss
imul
loope
ror
addb
loope
mov
mov
and
aam
int3
cmp
aad
call
int
jecxz
repnz
jmp
fildl
jmp
cmp
cmp
xchg
in
in
orb
into
lock
xchg
aam
in
cmp
mov
push
dec
push
jmp
int3
ret
int3
int3
sahf
pushf
pcmpeqb
jle
test
jle
ljmp
rcr
addl
aad
mov
mov
shl
lret
fdiv
out
clc
cld
in
test
addb
loop
testl
in
xor
in
lock
sarl
shl
rorl
loopne
cli
fucom
xchg
xchg
nop
xchg
icebp
lret
lret
iret
cmp
rcr
into
loop
sarb
fildl
xchg
mov
loope
cmp
in
in
cmp
aam
rcl
mul
mov
idiv
orb
fstl
in
xor
clc
filds
iret
in
mov
ret
into
fcmovne
int
fsubr
sub
xor
lret
in
repz
not
loopne
aad
cmp
addl
call
in
in
cmp
std
out
fucomp
out
cmp
sar
bnd
mov
mov
fucom
xor
jmp
iret
in
repnz
cmp
int
out
fisttpl
loop
call
xchg
hlt
int3
into
xor
shl
clc
icebp
xor
int
sar
enter
mul
int3
icebp
test
test
ret
xor
call
cmp
loopne
out
sub
idiv
jmp
call
shr
xor
xor
cli
in
xlat
loope
out
mov
xlat
out
lret
shl
test
ljmp
shl
shl
in
out
fdivr
test
fstp
jmp
in
ss
iret
repz
enter
ljmp
xchg
leave
leave
jmp
mov
int3
cmp
test
in
cmc
out
out
jmp
cli
std
loop
in
sbb
mov
ficoms
icebp
in
shr
not
lret
sarb
ljmp
in
leave
xchg
roll
shlb
cli
rcr
flds
cmpl
loop
std
mov
decl
and
xor
int
xor
shr
add
ljmp
repnz
sarl
icebp
idiv
imul
int
int3
in
cld
adc
filds
loop
test
jmp
xor
repnz
cmp
ljmp
aam
sar
int3
int3
in
or
icebp
fimuls
xlat
cmc
cmp
flds
orl
fsubrp
in
xchg
xor
ss
out
iret
cmp
int3
loopne
sarb
pop
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
adc
jle
test
jle
xchg
enter
out
shr
hlt
jecxz
xor
repz
in
enter
std
ds
xlat
ret
enter
ret
enter
dec
shr
rcl
in
enter
cmp
lret
fsubp
shl
jmp
mov
jmp
call
out
cld
enter
lock
out
cmc
fsqrt
fldlg2
mov
loope
shl
shll
cmp
lret
cld
aas
sti
rcr
fucomi
fstp
fcmovnu
ljmp
out
ss
out
aaa
dec
neg
aad
in
fcmovbe
loope
ljmp
xlat
xor
repnz
mul
shl
repnz
rcr
testl
jmp
shl
iret
icebp
cs
out
fistpll
out
test
out
lock
loop
mov
xor
fstp
int
add
ret
leave
test
ljmp
not
cli
stc
enter
aas
std
jecxz
cmp
out
fucomip
loop
fnstsw
in
loope
int
in
sub
repz
ljmp
call
sarb
loop
std
jmp
in
loope
xchg
xchg
in
hlt
mov
test
aaa
xlat
aam
cmp
fistpll
cmp
xlat
sti
xchg
ljmp
fcom
in
xor
rcr
fmul
rcl
sti
enter
leave
orl
movb
rcl
sarl
call
int3
sbb
test
lea
addl
mov
cmp
cmp
ror
fnstsw
xchg
mov
lock
into
xchg
in
xor
xor
fst
clc
cld
neg
test
iret
shl
std
cli
jmp
in
fneni(8087
shl
rcl
in
cmp
lock
hlt
cld
aam
int
xchg
xrelease
out
jmp
out
out
call
call
and
add
add
enter
shr
subl
repnz
cmc
push
sti
loopne
xchg
stc
in
nop
xchg
icebp
icebp
int
jmp
iret
out
xor
lret
fld
ret
shl
cld
ljmp
cli
shl
adc
xor
in
div
cmp
lret
cmp
xor
repnz
mov
loope
int3
fsub
fstp
call
xor
sti
shl
stc
aad
jmp
fucom
sti
test
ffree
jmp
sti
mov
xor
jmp
int
iret
rcl
aad
inc
xor
lods
sbb
xchg
cwtl
ja
jle
add
xchg
fsub
out
cmc
int
ret
aam
pushl
cmp
add
icebp
cli
out
in
into
int
int3
xchg
out
jmp
sub
jecxz
aam
aam
cmp
iret
rcr
or
iret
std
test
lret
cmc
loop
idiv
in
xor
enter
aas
sti
shl
loop
roll
and
cld
nop
shl
ret
fdivp
into
in
rol
cmp
into
xchg
incl
test
repnz
repz
not
sarb
fst
ljmp
loope
ffreep
or
enter
xchg
jecxz
out
out
jecxz
sar
repnz
cmp
iret
ds
stc
mov
ret
mov
cld
in
in
loope
in
rol
into
out
cmp
rolb
out
in
sub
fmulp
in
out
enter
int3
lret
fdivs
ror
sar
stc
test
fcmovbe
shl
jmp
ret
mov
out
fucomi
aaa
in
shl
iret
aad
sti
roll
std
xchg
out
in
std
mov
lock
cld
cmp
xor
hlt
repnz
fcmovbe
clc
ret
faddp
mul
nop
xchg
enter
xchg
clc
fcom
cmp
cli
leave
cli
clc
in
repnz
in
jmp
cmc
lret
call
ljmp
ss
sar
not
out
cmp
icebp
stc
mov
jmp
lret
into
lret
mov
xor
int3
cli
aaa
cli
rcr
ljmp
in
ljmp
std
repz
jmp
jmp
ljmp
xor
stc
roll
ret
lret
xchg
mov
in
mov
in
vpsubsw
out
aaa
cmp
cmp
hlt
out
sbb
clc
sbb
mov
loop
in
xlat
in
ret
cmp
repnz
cli
aas
ffreep
aas
and
or
out
xchg
int
ljmp
stc
in
into
cmp
fdivrp
incl
icebp
fiaddl
sar
in
leave
xor
rcr
ret
cli
test
in
in
rcr
fucomip
jmp
ret
iret
vpmuludq
repnz
cmp
into
ret
xchg
cld
xchg
enter
loopne
lret
xchg
rcl
rcl
fnop
out
out
fucomi
sub
in
fstpt
fistpll
repnz
fdivr
mov
fxch
out
in
repz
rcl
cmp
ljmp
mul
mov
in
cld
lock
int3
orl
sti
mov
adcl
add
jmp
mov
fcmovnu
or
sub
mov
and
jp
jle
add
in
cmc
cli
out
adc
fdivp
fdivr
std
stc
fsubr
cld
out
fucom
test
icebp
iret
xor
xor
cmp
sar
jmp
cli
faddp
xchg
out
ret
testb
nop
jmp
cmp
int
fidivrl
cli
stc
xlat
sbb
lock
jmp
sub
lret
in
xor
into
jmp
loopne
out
fucomip
jmp
int
mov
lea
cld
xor
aad
cld
cli
in
ret
sbb
cmpl
in
mov
lea
out
cmc
sub
jmp
ror
in
ret
loop
cli
jmp
mov
cld
int3
divl
into
hlt
xor
out
cmp
loopne
fdivp
out
shl
loopne
jecxz
movl
icebp
xor
stc
icebp
clc
dec
cmc
stc
iret
or
enter
faddl
jmp
aaa
xlat
jmp
clc
fdivp
icebp
fsincos
testb
xchg
or
xor
xor
repz
cmp
loop
out
ds
call
cmp
jmp
loopne
mov
int3
aaa
ret
xor
fsubr
fmul
leave
sti
cmpb
cli
ds
rorb
mov
jmp
lret
in
in
xlat
sarl
sti
shl
lock
shl
rcl
loop
aas
mov
fldl
xchg
das
shll
xor
out
fdivrl
xlat
loope
cmp
fcom
out
faddp
ret
loop
int
loopne
xchg
hlt
out
hlt
test
lock
aad
ljmp
decb
int
or
mov
int
rol
in
xor
call
fcomi
ret
loop
std
enter
jmp
into
rolb
in
jmp
aam
fdivrs
hlt
out
incl
clc
clc
xchg
fsubr
cmp
shr
test
out
out
in
fucompp
clc
repz
idiv
into
out
fst
xchg
aad
jmp
nop
sbb
mov
rol
stc
fucomi
enter
jmp
not
mov
incl
in
in
test
fcomip
xor
fdivrl
loopne
idivb
loopne
movb
repz
jmp
xor
xor
ror
cmp
fst
aam
testl
icebp
lret
nop
jecxz
jmp
int
fcmove
repnz
repnz
xlat
stc
ds
out
fcmove
mov
mov
nop
xchg
ljmp
rcl
cmp
not
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
and
scas
insb
jl
jle
add
xchg
fcmovne
mov
cmc
icebp
aad
out
std
xor
cmp
ret
hlt
hlt
sti
std
xlat
in
out
lret
incb
fxch
fdivrp
neg
rcl
aam
repz
mov
ret
out
ljmp
sbb
shl
icebp
out
in
fdivs
fmulp
addl
cld
testl
xor
fdiv
cmp
idivl
aas
jecxz
xlat
loope
call
in
stc
in
test
jecxz
imul
out
cmp
rcl
cld
shl
xor
rol
incb
xlat
enter
sub
xchg
iret
sub
shr
leave
cmp
mul
fadds
adc
loope
iret
loop
ret
cs
leave
cmp
or
cmpl
in
shl
out
jmp
mov
into
xlat
in
leave
repnz
into
out
rcr
lock
std
fcomip
jmp
std
or
fiaddl
test
xor
jmp
in
rcr
fdivr
lock
fucomi
out
enter
mov
xor
cmc
enter
loopne
int
test
adc
leave
clc
cmp
cld
cmp
sub
iret
stc
in
shl
fnstcw
aad
idiv
aam
sti
cli
loope
fcmovne
stc
lret
mov
ror
iret
xlat
jmp
lret
fidivrl
test
stc
loop
repz
icebp
sar
and
imul
repnz
repz
int
cmp
push
fstp
rcr
cli
mov
push
mov
mov
jecxz
cmp
fcomi
xor
out
aam
cmp
jecxz
into
ret
loop
fcmovnu
sar
xchg
loopne
rcl
shr
into
ljmp
clc
testb
jecxz
xchg
int
fsubp
mov
in
xor
int3
cs
out
iret
iret
shl
xchg
hlt
neg
jmp
cld
xchg
leave
fcmovnu
test
xchg
call
int
leave
rcr
cmp
jmp
shl
rol
aam
fcmovu
mov
sar
mov
in
rcl
xor
iret
shll
ret
out
icebp
add
inc
lret
xchg
loopne
jmp
rolb
lock
stc
cmp
nop
loope
out
loope
mov
stc
cmp
cmp
jmp
fcom
aam
aas
fcmovbe
cli
mov
std
in
xchg
test
rorl
icebp
int3
out
lock
mul
stc
idivb
cmp
orb
inc
lock
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
out
mov
xchg
jg
jle
add
fisttps
hlt
xlat
test
aam
fdiv
clc
cmp
aad
loopne
hlt
ljmp
stc
loope
in
mov
mov
xor
div
jmp
test
in
vpsrlw
ljmp
ror
mov
into
out
int3
cmp
std
loopne
loope
test
fildl
test
mov
mov
std
loop
int3
ret
loopne
ljmp
repz
std
sbb
test
jmp
out
ftst
in
sti
nop
rolb
jmp
shr
shr
repnz
cmp
lret
lret
int
lret
shll
sarl
leave
ss
cmc
int
sarb
fsub
clc
ffreep
in
lret
xchg
jmp
out
test
clc
into
cmp
in
dec
cmp
clc
cmp
rcr
aam
test
les
cld
xchg
nop
repz
xor
aad
fcmovbe
aam
mul
cld
faddl
enter
xchg
aas
out
xlat
div
cmp
clc
stc
icebp
in
repz
sbb
xor
in
dec
jmp
leave
adc
iret
fcomp
hlt
cmp
lret
in
fnop
cmp
loope
cli
sti
cli
enter
adcb
shl
lret
enter
fcomip
stc
sti
cli
out
rcl
xbegin
out
xchg
xor
in
repnz
cli
sarb
testb
in
sti
out
mov
call
ror
sub
stc
out
xlat
int3
cli
not
adc
cli
shl
movb
enter
xchg
out
out
clc
sar
int3
aam
cmp
ror
loope
inc
mov
jecxz
fsubp
imul
ret
leave
mov
fmulp
stc
out
xlat
aam
xor
call
xchg
hlt
std
neg
cli
mov
fildl
int
iret
les
shl
cmp
fdecstp
sbb
sub
lret
stc
cli
enter
test
leave
iret
hlt
aam
cmp
iret
ror
not
repnz
in
jmp
loope
int3
mov
aad
jecxz
xor
iret
aam
fucomp
lret
rol
xlat
rolb
loopne
orl
neg
test
ret
in
out
loope
mov
lret
call
loopne
cmp
stc
ss
stc
xlat
cmp
std
lock
hlt
hlt
loope
xchg
add
dec
out
jecxz
in
sub
ljmp
fnstsw
cmp
fst
icebp
lock
loop
into
sti
cld
xchg
call
aas
jne
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
jmp
jg
test
jle
jmp
cmp
xor
repz
repz
addl
xor
iret
aaa
cmc
lret
hlt
call
fmul
sbb
loop
in
jmp
fdivrp
or
repz
in
in
ss
cld
cli
loopne
in
aad
stc
xchg
loope
in
xchg
test
xchg
xchg
xor
dec
xor
fdivr
fdivrl
or
lock
xor
adcl
repnz
in
repnz
in
ds
stc
shl
mov
in
lret
orl
idiv
cmp
leave
cli
rcr
addb
loop
testl
in
cmc
xlat
out
fucom
out
cmp
shl
rcr
in
aad
int
xchg
fistl
loopne
cmc
out
shr
rcr
lret
cmc
fmul
fdiv
repz
inc
testl
xor
shl
in
fucomi
into
iret
fdivr
sar
sti
rolb
lret
cli
lret
test
sub
aad
stc
stc
cmpl
shl
std
jecxz
in
nop
lret
leave
fsub
in
xor
out
repz
shl
lret
clc
iret
sti
leave
incb
rcl
hlt
ret
leave
clc
fidivrs
cmp
int3
out
iret
shl
in
hlt
in
fldl2e
cli
out
cli
out
test
test
xor
out
repnz
iret
hlt
ror
vpavgb
jmp
in
int
fcmovnu
xchg
repnz
cmc
aam
mul
out
jecxz
addb
movl
icebp
xor
xor
stc
aam
stc
and
leave
mov
or
jmp
jmp
xor
icebp
enter
in
loope
in
fcmovbe
fcmovnu
loopne
lret
icebp
nop
lret
jecxz
loop
aam
out
in
cmp
ret
in
xchg
cmp
clc
int
in
cmc
in
loopne
cmp
fsubr
cli
in
ljmp
in
loop
mov
cld
ffreep
fucomi
call
repz
cs
cmc
jmp
ror
ds
cli
loop
test
test
xlat
iret
lret
jecxz
fdivr
test
xor
loop
xor
xor
neg
clc
shl
in
fdivr
mov
fsubr
int3
mov
xchg
idiv
vcvtpd2dq
repnz
aas
in
xlat
aas
fildl
cld
loop
orb
ljmp
cmp
mov
jmp
cmp
jmp
into
int
xlat
xor
xchg
push
jg
test
jle
loop
shl
xlat
clc
test
ffree
repz
in
mov
out
in
int3
in
ljmp
clc
out
loopne
repnz
hlt
in
fmull
xchg
xchg
mov
xor
int
jmp
loopne
jmp
clc
test
jecxz,pt
repz
loope
mov
int3
test
ss
lock
ljmp
fdivr
ret
jecxz
leave
iret
loope
in
out
enter
sti
icebp
loop
fdivr
int
loop
aas
fucom
mov
in
shl
xchg
rcr
in
loop
xor
cli
rcr
mov
movb
nop
rolb
leave
cmp
fdivr
idivb
repz
fsubp
rcr
sub
out
test
cld
into
cmc
iret
stc
ss
leave
aad
cld
loopne
fsubr
test
xchg
shl
xchg
sti
sti
in
enter
clc
ret
in
cmp
in
mov
in
rcr
int
xlat
shr
xor
fucomp
cmp
std
cmp
rcr
sti
ret
cmp
fdiv
leave
loopne
in
out
enter
jecxz
out
das
not
lret
repz
shl
in
iret
faddp
testb
clc
in
lock
inc
int
sarl
ss
std
jmp
cmp
stc
and
in
cli
ror
call
shll
cmp
icebp
cli
cmc
leave
out
fdivp
fmulp
cmp
ret
cmc
xchg
rorl
leave
clc
lock
cmp
int3
ret
ret
sar
out
or
loope
test
loope
aas
cmp
divb
fstp
call
aad
cli
loop
loopne
fxam
or
orb
leave
test
call
fcmovu
std
out
cmp
ret
mov
in
in
loopne
loop
call
leave
fucomip
fucomi
cld
cld
aad
sar
in
and
mov
mov
repnz
rcr
repnz
jmp
inc
test
fdivr
loope
jmp
jecxz
mov
lret
loop
out
cli
jmp
loopne
test
cmp
xchg
lret
fldl
int3
jmp
ljmp
ss
shl
xlat
rcr
xlat
fildl
out
out
cld
mov
aad
imull
cs
out
ljmp
hlt
call
aas
out
mov
call
xor
fidivrs
out
lret
cmp
in
mov
jne
sbb
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
ljmp
filds
ret
fprem1
mul
sub
filds
fsubp
out
fcmovnu
enter
in
ljmp
rcr
ds
fsubp
into
rcr
rcl
jmp
stc
jecxz
xchg
into
lock
add
in
cmp
call
aad
loop
aas
xlat
clc
jmp
cli
in
in
filds
icebp
out
cmp
lret
xlat
aaa
ret
fsub
aam
incl
xchg
leave
fcoml
ret
out
aad
repz
aaa
loopne
sbb
les
lret
cmp
xchg
int
loope
cli
int
repnz
shl
lret
hlt
loopne
hlt
loopne
shl
fnstsw
fldz
in
test
cld
decl
lret
iret
icebp
int
icebp
xor
loop
fstp
sarb
mov
lret
aas
addb
mov
xlat
vpminub
aas
in
cmc
cmp
loopne
xlat
fdiv
incb
stc
in
out
fsubr
xchg
jecxz
out
call
icebp
out
aam
std
icebp
in
fisttps
mov
enter
xchg
sar
lock
in
rcr
int3
out
jmp
testb
in
leave
jecxz
fdivrp
fldl
iret
in
sti
in
sar
sarb
fcmove
lock
cli
mov
call
lock
jmp
xor
aaa
cmp
icebp
in
cli
fcmove
fcomip
in
fldl
fdivrp
mov
repnz
rolb
rol
std
clc
xlat
aad
cmp
loop
loope
cli
shl
sti
incb
sti
xchg
repnz
out
aam
sub
aas
test
cmp
xchg
test
enter
mov
xchg
lock
call
xor
jecxz
ret
sbb
loopne
test
std
lock
ljmp
sarb
addb
mov
clc
call
out
ljmp
out
xlat
icebp
cld
ds
add
shl
ljmp
rolb
loop
out
div
xor
leave
fsubr
icebp
inc
test
rcr
fildl
mov
fcomip
jmp
xor
ss
out
xlat
sar
loop
enter
mov
rorl
jmp
stc
out
cmp
cmp
out
fstp
aas
cld
testb
std
mov
in
lret
aam
jecxz
shll
div
cmpl
shl
call
push
xchg
xchg
std
rorl
xorb
mov
add
inc
or
or
pushf
ja
add
ret
add
int3
ror
fcomp
aam
aas
idivb
dec
or
test
jle
ss
in
sti
cmc
lret
in
test
rolb
jmp
loopne
loope
xchg
in
out
xor
shl
repnz
icebp
cld
cmp
into
idiv
push
test
out
loop
sti
int3
nop
in
std
out
addl
fst
cmp
ds
repnz
call
int3
out
icebp
int
xchg
xor
fdivrs
jecxz
aad
cmp
loope
ret
xchg
call
enter
mov
iret
xchg
aad
int
loop
cmp
hlt
cmp
cmp
loop
out
sti
sub
xchg
out
lret
lret
cld
cmp
repnz
mov
addb
fcmove
sti
in
cmp
add
out
int3
add
mov
std
xchg
in
ret
cmc
out
int3
enter
lock
rolb
xlat
loopne
aam
lds
int3
jmp
int3
clc
test
out
cmp
test
test
call
xchg
in
jmp
lock
fnop
das
repnz
fldln2
cld
in
test
std
cli
leave
loopne
fiaddl
pushl
lret
ss
rcl
fcmovnbe
in
iret
jecxz
ret
cld
fcomi
loope
incl
out
xchg
out
shl
fsub
hlt
hlt
fmul
clc
aad
fsubp
sti
xor
aam
sar
test
test
jmp
rcl
out
sti
xor
xlat
aas
into
cld
aas
repnz
test
flds
nop
mov
icebp
xlat
clc
lock
std
int
cmpl
fisttps
call
enter
call
sub
aam
fdivp
iret
iret
aas
sti
jecxz
out
mov
cli
in
mov
xchg
in
iret
rcl
cmp
lock
shr
cmpb
hlt
stc
ljmp
mov
xchg
into
in
shr
rolb
repnz
xchg
loopne
stc
std
jmp
lea
enter
sti
int3
xlat
stc
cmp
stc
hlt
in
int3
std
fisttps
mov
repnz
cmp
icebp
rcr
cmc
ret
fcom
loop
mov
mov
mov
in
hlt
jmp
ret
iret
jmp
hlt
cmc
cmp
shl
xchg
in
fcomp
enter
icebp
repnz
cmp
shl
in
aad
xchg
sbb
loop
fcmovu
call
ror
repz
ss
inc
cld
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
jle
pop
push
add
addb
neg
mov
std
test
in
xchg
in
xchg
divl
ret
sti
not
idiv
fcmovbe
int
fucom
stc
fidivrs
xchg
ljmp
fsincos
xor
ror
fnstsw
aad
fcmovnbe
div
rcl
in
fiadds
orl
lock
loopne
ror
out
cmc
jmp
xorl
mov
lret
test
fdivr
jecxz
iret
jmp
out
ret
shl
out
inc
sti
int3
std
loope
cli
jmp
repz
jmp
ror
mov
xor
sti
into
fucomi
sarb
loopne
fsub
test
xlat
ljmp
iret
repz
call
cmp
fucom
into
aas
iret
xlat
xchg
int3
in
std
out
lret
xchg
xchg
test
in
stc
cli
in
call
cmpl
sbb
in
xchg
iret
int
loope
imul
clc
cmp
sar
adc
repz
frndint
aad
fadd
fadds
cmc
fsubrp
lret
divl
icebp
stc
xorl
test
ds
jmp
and
int
aaa
ljmp
jmp
in
jecxz
out
repnz
std
call
loopne
loop
aaa
in
repnz
lock
loope
loope
fidivrs
out
xchg
in
mov
std
lock
aaa
xor
test
ror
cmp
call
in
in
fabs
rorb
in
icebp
lret
aam
rcl
sti
in
fnstsw
out
not
stc
cmp
les
loop
loop
into
xor
into
stc
fstp
lret
cmp
enter
std
out
in
ljmp
lock
cld
sti
sarl
lret
fdivrl
cmp
in
loopne
jmp
out
in
xchg
lret
aam
in
xlat
fcmovne
cli
repnz
jmp
jecxz
std
aas
addb
into
in
rcll
xor
aaa
fucomi
xor
cmp
jecxz
loop
fdivr
or
xchg
sti
jmp
into
cmc
stc
cmc
div
fsub
ror
int3
cmp
ds
not
test
out
fucom
out
repz
into
sub
cli
xlat
stc
aas
sarb
fdecstp
iret
aam
clc
enter
fldl
mov
jmp
int
fyl2xp1
cli
clc
fyl2x
stc
int3
out
fiadds
test
xchg
iret
in
xchg
test
enter
xor
fdivrl
in
cmp
int3
idivl
rcl
aad
jge
push
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
push
lret
push
dec
xchg
movq
add
hlt
lret
in
mov
in
not
out
imul
lret
test
fdivp
lock
shl
lret
or
loope
out
fucomip
enter
lock
aaa
aas
ds
loopne
repz
fcmovbe
decb
vpmulhw
out
cmp
fucomi
test
std
fsubr
lret
cli
mov
aad
stc
vpsubsb
std
xor
aas
ret
mov
add
iret
dec
hlt
loope
out
sub
repnz
iret
out
repnz
jmp
clc
cmp
imul
push
std
jmp
mov
out
fucomi
mov
enter
xor
cmp
cmp
cmp
or
add
jecxz
lock
jmp
xchg
aad
int
jecxz
jmp
xlat
sarb
iret
repz
shl
icebp
testl
xchg
icebp
loop
in
hlt
xor
leave
xor
loopne
call
fcmove
int3
jmp
into
shl
aam
div
cmp
fidivrs
xlat
iret
cmp
fmuls
out
mov
mov
sarb
out
clc
cmp
cmpb
xlat
jmp
out
faddl
ljmp
xor
fucomi
shl
test
xlat
cld
stc
int3
test
jmp
loope
jmp
int3
hlt
rcr
aas
shl
loope
aam
loopne
mov
mov
hlt
call
in
xlat
ds
in
and
std
ds
lret
jecxz
nop
call
cmc
idivb
out
lret
and
aam
xchg
in
mov
out
testb
clc
sti
leave
aam
cmp
imul
clc
rcl
in
std
fcmovnb
out
test
mov
xchg
int3
out
lock
fnstcw
stc
xor
in
lock
roll
roll
std
leave
repz
mov
int
ljmp
stc
sar
repnz
icebp
xlat
bnd
in
out
iret
int3
mov
out
rcr
ret
out
aam
cmp
clc
repz
rorb
frndint
orb
loope
jmp
aad
cmp
fxch
lret
loopne
xor
repz
loop
repnz
icebp
iret
repnz
out
into
cmp
xlat
in
call
cmc
shl
xlat
fadds
test
xchg
cmp
aad
cli
shl
fucomi
cmc
icebp
loope
ret
ret
lret
mov
xor
add
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
adc
jo
adc
test
jle
xchg
mov
out
fcmovnu
iret
ljmp
shl
aad
xchg
mov
in
repnz
out
out
out
cmp
shl
stc
mov
repnz
hlt
repz
lock
out
std
icebp
aam
aam
test
rorb
das
lret
repz
int3
sti
ret
aad
ret
mov
lret
aas
orb
xchg
out
test
int3
cmp
out
cld
loopne
lret
mov
cmc
loop
leave
xor
call
ds
rcl
cmp
ret
loop
faddp
sti
loope
lock
xor
out
hlt
iret
sar
xor
xlat
into
jecxz
cmc
in
lret
std
out
test
xchg
mov
loop
mul
int3
lret
stc
cmc
into
ds
aad
xchg
cmc
xchg
loope
fiadds
shr
in
lret
clc
jmp
out
repz
sbb
xor
lret
jmp
fcmovne
test
mov
cmc
enter
xlat
out
lret
cmp
aad
call
in
and
xor
decb
cmc
nop
clc
ss
dec
aas
out
fsqrt
rcl
cmc
out
xchg
in
lret
ret
bnd
xor
iret
cmp
roll
in
enter
lret
int
fxam
fmul
cmp
fcom
loop
hlt
rcr
repz
ljmp
in
repz
cmp
int3
stc
push
cli
hlt
cmp
into
icebp
in
test
sub
xchg
xchg
ss
test
fdivrs
not
icebp
out
idiv
cmp
aam
in
enter
out
icebp
loop
int3
idivb
aam
cmp
out
cmp
in
aas
in
mov
enter
adc
incl
lock
call
sti
int3
sbb
mov
in
in
int3
stc
jmp
lret
in
fsub
aad
aaa
fnstenv
fildl
lds
xor
enter
fmul
das
clc
fcomi
addb
add
out
xlat
xchg
sub
sub
hlt
clc
xor
sub
aad
call
loopne
fdiv
test
lret
in
clc
fstl
into
aad
xor
sub
cmp
fstp
fnstsw
into
fnstsw
out
frndint
imul
loopne
out
nop
jmp
hlt
call
mov
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
mov
subb
adc
jle
add
icebp
cmp
loopne
cld
fldl
mov
clc
out
ror
into
cmc
aam
lock
sti
fstpt
loopne
lret
in
ffreep
test
mov
jmp
test
int
fldpi
leave
clc
ljmp
fsqrt
roll
fsubr
shr
and
bnd
cmp
cmp
cmp
roll
lret
fsubrp
rcl
rolb
xor
sub
rcl
repz
aam
aam
mov
in
out
ror
hlt
in
shr
in
aam
fmulp
cmp
cmp
aam
test
ret
testl
mov
int
int
hlt
in
cli
lock
repz
frstpm(287
cmc
cld
sub
flds
xrelease
xlat
ljmp
out
lret
cmp
repz
call
loopne
cli
out
ret
mov
lock
out
jmp
aaa
int3
fdivr
iret
xchg
enter
orb
out
div
icebp
in
cmp
hlt
aad
neg
test
rorl
sti
ljmp
in
xor
shl
cmp
xor
cmp
loopne
aam
jecxz
in
jmp
loop
shl
loope
in
xor
stc
cmp
cmp
test
sti
add
sar
and
in
iret
loopne
mov
in
in
jmp
out
lret
sti
aaa
cli
cmc
cmp
and
ret
mov
mov
sti
int
jmp
jmp
cmp
int3
shr
cli
idiv
iret
xor
mov
jmp
out
lock
or
jmp
cld
cli
rcr
xlat
add
test
ds
in
nop
fsub
xchg
nop
jmp
aad
jmp
xlat
adc
fidivrs
std
sti
cmp
lock
loope
ret
aad
iret
out
rcr
fnstcw
add
ret
test
in
enter
in
aam
lret
lret
idiv
in
sar
sti
cmc
int
in
cmp
sarl
jmp
xchg
shr
aad
shl
cmp
into
loope
fdiv
rcl
mov
jecxz
jmp
in
test
out
mov
ljmp
in
int
cmp
cld
jmp
cmpb
and
xchg
std
xacquire
lret
call
lret
stc
out
ds
test
into
lock
add
loopne
rcr
in
cmp
out
xor
faddp
sbb
mov
ret
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
ss
jle
add
rolb
cli
iret
xchg
out
mov
clc
stc
ror
test
into
out
hlt
cmp
cmp
aam
cld
flds
xor
out
mov
xor
shr
lock
fucomi
xlat
xor
repnz
cmp
rcr
xlat
addl
xchg
aad
clc
lret
xlat
out
cmc
enter
clc
ror
ret
xlat
cmp
into
fldl2t
out
aam
cs
das
int
aad
aad
loope
ffree
in
ret
in
loop
loop
dec
sbb
ljmp
xor
mov
stc
sar
cmp
aad
sar
in
jecxz
out
fdivrp
mov
in
div
shrl
cmp
cld
out
out
sarl
rcr
fidivrl
roll
mov
cli
mov
in
out
into
out
shr
call
leave
cld
stc
aad
std
stc
movl
mov
out
iret
xor
out
out
add
xchg
mov
fsubp
mov
repz
in
lock
fdiv
repz
std
out
xor
leave
in
test
xchg
or
lock
ss
aaa
jmp
aas
cmp
fildl
or
rolb
aaa
lock
cmp
fnstenv
lock
test
jmp
lret
in
repnz
hlt
call
aaa
in
sarb
not
inc
cmp
faddl
std
jmp
fstl
std
out
ffreep
lret
ljmp
loopne
shr
mov
xchg
cli
in
jmp
out
mov
lds
int3
clc
xlat
aad
cmp
test
in
fimuls
ror
orb
stc
jecxz
out
cmc
xor
ror
test
cmc
add
cmp
cli
out
rolb
cli
ret
xor
stc
cli
icebp
repz
ljmp
out
shl
test
enter
div
xor
cmp
ljmp
enter
fisttps
xchg
out
xchg
and
fdivs
in
rcl
aas
xlat
div
in
int
out
cld
fstp
fucomip
cld
mov
in
int3
cld
loopne
aaa
aad
aaa
jmp
cmp
loopne
repnz
vpmovmskb
fiadds
loopne
lea
into
enter
cli
aaa
fst
icebp
inc
clc
out
lock
out
enter
out
aas
idiv
out
out
enter
repz
test
sarb
not
cmc
int3
xlat
mov
lret
add
sti
inc
add
xor
call
fcoml
add
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
jns
mov
test
jle
repnz
mov
jmp
call
and
ret
mov
in
enter
out
fsub
cmp
cmp
leave
repz
cmp
icebp
std
ret
in
sti
out
out
leave
bnd
adc
cmp
xor
repz
jecxz,pt
ret
sarb
test
sti
test
mov
fcomp
loop
sti
int
into
fbstp
ret
test
iret
sarl
int
fcmovnu
rol
cld
int3
and
cld
lret
xchg
ret
aad
cmp
cli
lock
test
aam
enter
ljmp
clc
loop
ret
ss
cmp
sar
sarb
sti
fucom
or
out
or
test
mov
ljmp
hlt
sar
in
fcmovb
lock
xchg
fcmovu
out
sbb
lea
in
xor
xlat
fpatan
fildl
fdivr
jmp
decb
mov
das
hlt
repnz
iret
fdivp
out
roll
loope
fidivrs
sar
into
cmp
icebp
enter
lret
out
in
sti
loopne
lret
add
call
or
std
sti
pop
call
xor
hlt
out
fnsave
int
lock
not
fldl
in
test
std
loop
jecxz
in
das
call
leave
out
lret
and
out
faddp
ljmp
cld
call
das
sarl
fnstcw
jmp
mul
stc
test
aas
fisttpll
rorb
sti
fistpll
fstp
repz
vpaddw
enter
jmp
in
enter
xor
vpslld
lret
lret
ds
rcl
aam
testb
out
xchg
xchg
out
enter
aam
ror
iret
icebp
ds
ret
fisttpl
ljmp
rcl
lret
lock
out
roll
loope
loop
xchg
clc
loope
call
into
fdiv
loop
shl
sub
into
in
out
int3
cmp
cmp
cmp
test
out
lea
test
mov
rcl
lret
cmp
sar
cmc
int
cmp
repz
hlt
cld
out
in
sbb
ljmp
in
xor
sti
xlat
aas
test
fdecstp
jmp
fildl
loope
aad
into
lock
ds
sti
clc
faddp
ds
mov
cmp
fcomip
jecxz
jmp
cmc
fcmovnbe
xor
cmp
add
jne
jmp
enter
rcr
adc
lock
sbb
jle
add
aam
std
xlat
cmp
icebp
idiv
enter
loop
sub
loope
fcomi
cmp
sti
sarl
cmc
imul
into
ret
cmc
cmp
mov
sti
mov
xchg
out
xor
aam
out
cmp
loope
cmp
fdiv
cmp
loope
stc
in
fsubr
out
in
aam
shlb
enter
cmp
ret
test
orb
orl
rol
sub
cmc
hlt
in
repnz
and
cmp
out
icebp
push
in
into
xor
fadd
ss
cmp
xlat
mov
cli
ljmp
sti
sub
clc
aam
call
lock
cli
in
les
int3
ljmp
mov
aam
jmp
aad
icebp
into
fucomi
cmp
icebp
hlt
loopne
fyl2xp1
jmp
rorb
cmp
repnz
icebp
repz
repnz
test
aad
out
jmp
lock
shll
into
aas
lock
cli
cmp
roll
fmul
enter
adcb
ret
sarb
aas
cmp
out
stc
div
into
rcr
fabs
mov
int3
fdivr
jmp
xchg
out
enter
repnz
repnz
ljmp
mov
in
imul
sub
cmp
cmp
fadd
fiaddl
iret
loopne
sti
hlt
jecxz
xor
xor
cmp
fdiv
int3
out
in
ffreep
mov
into
div
icebp
out
xor
fdivr
cmp
leave
cmp
enter
in
ret
mov
orl
cmp
xchg
jecxz
fcmovb
fcmovbe
fmul
lock
xchg
sar
jmp
lret
imul
fcmovu
sar
repz
mov
aad
lock
xchg
ret
out
enter
int
aas
loopne
test
clc
test
jmp
mov
xor
fld
divl
int
xor
incl
adc
loop
cmc
aad
shrb
sti
hlt
cmp
stc
rcr
int
jecxz
neg
addl
mov
loop
clc
clc
rcl
repz
cld
fld
test
ret
orb
mov
into
enter
ljmp
leave
aam
cld
call
mov
xor
add
jmp
rcl
rcl
aad
mov
fcmove
fwait
cmp
test
jle
out
aas
leave
cld
jecxz
addb
out
out
cs
jecxz
out
clc
lock
fdiv
cli
sub
mov
shr
loop
loopne
jecxz
xor
in
repz
lret
div
std
lock
add
mov
loopne
out
mov
rcl
cld
neg
fucomip
std
xlat
in
roll
jmp
leave
call
jmp
icebp
sub
xor
cmp
stc
cli
fdiv
iret
jecxz
jecxz
lret
cld
test
mov
not
int
rcr
jmp
loopne
clc
rcr
bnd
cmp
call
enter
fiadds
cs
das
loop
hlt
sarb
fpatan
loopne
cmp
cmp
hlt
incb
fsub
xchg
aam
in
cld
cli
cmp
cmp
loop
lret
test
loopne
fdivrp
jmp
fisttpll
repnz
in
ror
clc
into
int3
faddp
ret
test
fimuls
ljmp
jmp
in
not
into
into
sar
hlt
fadds
xlat
faddp
fcoms
int3
call
enter
out
into
hlt
fadd
cmp
loope
out
test
loope
lock
call
sub
xor
jmp
icebp
cmp
movl
push
in
sub
aaa
stc
xor
aas
dec
sti
ret
iret
rolb
std
enter
fdiv
rcl
in
sub
f2xm1
shr
cmp
cmp
test
loope
jmp
flds
jecxz
cli
ljmp
roll
incb
mov
call
loope
repnz
ror
hlt
cmp
shl
repnz
cmc
test
leave
out
adcb
xchg
xor
cmp
xor
aaa
cmp
aam
aas
in
cmp
out
xchg
div
enter
loopne
sarb
jmp
enter
repnz
rcr
std
shl
shl
call
cmp
xchg
leave
xor
rcl
clc
out
rcr
sti
cmp
repnz
and
fldpi
icebp
in
sub
lock
neg
out
fdivs
cmp
xchg
mul
mov
fcmovne
rorl
shr
aaa
stc
stc
neg
cmp
aam
cld
cli
sti
hlt
aas
out
loop
in
out
lret
sti
loopne
cmp
aam
hlt
leave
jmp
int
cmp
rcr
fnstcw
fstp
jecxz
test
mov
jmp
rcl
lret
rcr
ficoms
cmp
jg
test
jle
call
shl
iret
xchg
repnz
xor
xor
in
ds
rol
cmc
sub
xlat
rol
fimuls
shl
fisttpll
repnz
loop
cli
ss
out
out
mov
decb
xor
add
out
fxch
sti
icebp
lret
cmp
aad
and
faddl
lock
fmul
leave
ljmp
xor
aad
xor
in
stc
fucomp
fucom
shl
xchg
enter
lret
divb
cmp
repz
loop
jecxz
fcomp
in
fdivrp
mov
xchg
and
shl
call
ljmp
xchg
std
mov
rcr
out
lret
jmp
loop
test
aad
clc
ljmp
cmpb
std
test
rcr
add
std
jmp
mov
hlt
mov
mov
into
into
int3
fdivrp
hlt
cmc
shl
shl
orl
lret
orl
stc
fcomip
iret
flds
out
test
mov
or
xchg
sbb
aam
in
std
out
clc
fcmovnbe
shl
xor
imul
mov
out
nop
aas
ret
loop
in
fdivrp
in
cli
rcr
aam
fcomi
aad
loopne
ljmp
lret
out
in
shlb
ljmp
int
rcl
in
aas
add
loopne
ret
mov
stc
out
iret
nop
int3
iret
orb
xor
cmc
aaa
loopne
fdivrs
cmp
hlt
fdivp
incl
orl
shl
repz
cmp
shl
aad
loopne
lret
mov
fxch
in
test
mov
xor
out
cmp
cmp
jmp
lock
out
fnclex
in
sub
fcoml
jmp
sub
cs
loope
ret
test
aas
jmp
fsubp
int3
enter
mov
clc
les
repnz
int
int
lock
lds
jmp
loope
out
call
in
div
jecxz
int
enter
hlt
repnz
fildl
add
fists
mul
rcr
sti
cmp
jmp
sub
aad
fucom
rolb
out
hlt
adc
shl
cmc
int
aaa
fucomi
fidivs
f2xm1
rcl
fadd
fdivp
fldl
sbb
iret
lret
ror
ret
xor
lret
out
hlt
jmp
vpavgb
fcmovnu
sbb
out
mov
lock
hlt
rcl
mov
mov
mov
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
push
mov
nop
bound
jle
add
in
shlb
cmp
jmp
xchg
in
leave
mov
incl
in
call
int3
iret
ds
fucomi
or
aad
xor
test
or
lea
sar
enter
cmp
out
cmc
in
shl
rolb
ret
mov
loopne
orb
test
lock
lret
in
hlt
repz
repnz
out
cmp
movl
xor
jmp
xor
cmp
jecxz
std
cli
addb
out
icebp
rcr
ljmp
xor
iret
loopne
lret
icebp
into
sti
xor
clc
fxtract
test
into
test
xchg
fsub
ret
out
sub
fcomi
stc
shl
loope
ror
xchg
cmp
int
into
nop
mov
rcr
in
icebp
shlb
stc
lock
test
clc
out
fmuls
into
jmp
xor
cmp
das
out
lret
aam
cli
stc
cld
cmc
hlt
out
hlt
addl
das
out
jmp
fcmovu
aad
sti
aas
cmc
cmp
in
hlt
sub
out
sbb
leave
call
cmp
cmp
cld
repnz
fmull
sti
int3
icebp
xchg
lock
cmc
idivl
out
fcomi
hlt
sti
cld
aam
cli
out
hlt
icebp
xchg
stc
in
decb
xor
ror
out
cld
jmp
iret
repnz
in
icebp
cmc
repz
out
fimuls
mov
lret
ret
sub
fcom
aad
aad
jecxz
cmp
jecxz
flds
out
xchg
out
int
iret
out
repz
aad
in
ds
ret
fcmovb
mov
jmp
clc
fdivr
std
mov
mov
rol
fstpt
hlt
xor
shr
sti
cld
loop
cmc
loope
cmc
loop
stc
sbb
ficoms
out
cmp
aad
cmc
mul
repnz
shl
ljmp
enter
nop
ljmp
enter
cld
repz
cmp
cmc
fdiv
loope
xlat
mul
clc
in
mov
jmp
fucomp
shl
cmp
test
mov
int
xchg
not
cmc
fidivrs
rcr
sarl
sti
ret
mov
std
stc
loop
in
in
cli
in
ljmp
repz
les
sti
fld
int3
ljmp
push
out
xor
cmp
out
ror
ror
stc
pop
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
rorl
daa
jg
test
jle
cmp
aad
loop
cmpl
xchg
xchg
lret
xchg
shr
rol
cmp
ss
out
lock
fsubr
hlt
loop
rol
leave
fadd
enter
loop
out
icebp
lea
ret
sarl
in
cmp
fiadds
call
ret
vcvttpd2dq
fcmovnbe
nop
in
lock
xchg
xchg
sub
in
out
clc
aas
aam
jecxz
aaa
fcomip
aam
add
lret
out
incb
clc
cli
ljmp
loopne
rcl
mov
dec
xchg
xchg
lret
jmp
out
lock
lret
cmp
stc
cmp
out
mov
out
decl
loop
iret
fsubrs
xor
xor
sti
cmp
cmp
stc
hlt
xlat
aam
xchg
cmp
cmc
fsub
faddl
orl
in
out
sarb
xor
rol
cmp
in
ret
fsub
test
out
xor
in
ljmp
fld
hlt
cmp
idivb
mov
xchg
lock
lock
out
ret
fdiv
hlt
call
or
out
sti
fucom
loopne
fucomi
test
ss
fnstsw
cmp
cmp
in
loope
fsubr
stc
stc
aam
and
sti
jmp
adcl
repnz
cli
fcomp
cli
fcomp
ret
in
aam
ret
in
loopne
lock
into
in
aad
int3
rcl
sarl
stc
mul
cli
xchg
test
loop
mov
xchg
out
loopne
loop
out
cmp
cmp
repnz
xlat
sti
hlt
icebp
rorl
mov
lea
les
leave
les
cmp
xlat
testl
ret
adc
in
or
loopne
jmp
xlat
lret
xor
lock
fmul
fcmovbe
fcmovnbe
hlt
enter
aas
jmp
ljmp
iret
out
cmp
ror
int3
cmpb
xlat
fadds
xlat
mov
cmc
lret
repz
fdivrl
test
fcmovnu
cmc
ret
fmul
xchg
jmp
in
in
jmp
rcl
lret
repnz
rcl
repnz
fld
aas
fadds
jecxz
fdivrp
rclb
repnz
shr
rcr
cli
in
aad
rol
loope
sti
cld
mov
lret
out
out
in
xlat
cmp
call
cmp
in
in
cmpb
aam
mov
mov
loop
mov
mov
call
in
lret
sbb
icebp
xlat
mov
cld
fcmovnbe
sub
add
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
sub
pusha
sub
test
jle
jmp
lock
rcl
pushl
out
enter
ds
jmp
cmp
in
cmc
in
jecxz
addl
loop
cmp
fidivrs
fcmovbe
loopne
ret
std
mov
xchg
loope
test
test
sub
aam
enter
std
stc
fcmovbe
idivl
hlt
loopne
fdivr
loope
cld
nop
not
out
sar
jmp
cli
sarl
ds
cmp
ror
cmc
sarl
xchg
stc
xchg
out
enter
loop
ret
neg
aaa
hlt
and
ds
xlat
cmp
hlt
ret
repz
std
jecxz
loopne
out
sarl
ss
lock
repnz
rcl
in
test
fsubr
fsub
add
xchg
fucomip
ljmp
jmp
addb
and
xlat
incl
cmc
loopne
call
clc
fsubr
cli
cmp
shr
cli
ret
stc
aam
inc
xlat
lock
xchg
test
int3
fidivl
jecxz
cmp
leave
fnstcw
cmp
fstpt
testl
in
imul
out
fnstenv
fcomp
into
xlat
ret
hlt
rol
addb
lret
ret
ljmp
das
aad
into
cli
repz
xor
fcmovne
aas
cli
repz
out
mov
shl
test
out
rcl
lock
fcmovnbe
sbb
in
cli
fst
out
loop
test
loope
in
in
not
xor
out
aaa
repnz
cld
in
sar
ds
loopne
aam
out
test
fucomi
fldl
int3
xor
int3
bnd
ret
idiv
icebp
ror
vpaddsb
int3
mov
xlat
in
shr
xor
ljmp
aam
and
ret
in
incb
jmp
stc
enter
into
xor
int3
ds
addl
mov
aam
out
not
xor
cmp
cmp
clc
hlt
fdiv
fcom
shl
test
div
stc
imul
in
jecxz
std
rorb
cmp
fnstenv
testb
fptan
sti
loope
xchg
xchg
into
lret
xchg
xchg
aad
leave
in
idivb
icebp
shl
shl
cmc
mul
jmp
test
loop
xchg
lret
shr
cli
xor
dec
or
stc
out
ret
lret
mov
test
rcr
into
xchg
in
hlt
clc
leave
cmp
sarb
int
fcmove
idivb
rol
leave
in
cld
out
ret
xchg
call
jmp
cmp
jne
mov
pop
jmp
ror
ret
int
movsb
inc
push
in
pop
mov
test
jle
loop
aad
leave
out
aam
out
int
icebp
jmp
out
test
mov
ret
loop
cld
cli
cmp
shl
test
neg
test
test
xchg
movb
int3
test
lret
ror
inc
sarb
fsub
fcmove
cld
aad
out
mov
mov
jmp
cmp
frstpm(287
shr
ror
loop
out
aas
cmp
mov
test
int3
sti
mov
out
out
into
rol
leave
xor
fmul
loope
repnz
aam
out
not
loop
stc
fisttpl
lea
xor
xor
stc
fidivrs
cmp
clc
ds
ffreep
mov
add
xchg
aad
jmp
xlat
icebp
xlat
fsubr
shr
xor
fldl2e
clc
repz
lret
test
iret
iret
cmc
ret
fdiv
cmp
jmp
adc
call
jmp
ror
loopne
icebp
test
stc
fdivr
stc
out
sbb
cmp
out
aad
cli
ljmp
test
mov
jecxz
aaa
hlt
fdivs
cmc
cld
clc
inc
jmp
out
jecxz
jmp
nop
xor
cmp
shr
repz
std
test
in
in
jmp
nop
lock
sub
aad
in
aaa
ror
int3
stc
cmc
adc
in
repz
jmp
test
sub
cli
vpaddsw
int3
icebp
fdivp
add
loop
sti
stc
test
in
leave
cmc
sti
jmp
jmp
aam
repnz
fdivrl
std
xor
std
jmp
aad
repz
adc
mov
xchg
hlt
int
stc
jecxz
cld
xor
cmp
aad
rcl
fsub
cmc
out
enter
repz
test
cmp
lret
enter
fcmovbe
lock
icebp
xchg
add
add
xacquire
aam
cmc
cmp
aaa
jmp
loop
cmp
shr
test
ljmp
shr
ss
sti
fdivp
int
ret
loopne
aas
leave
leave
xchg
jecxz
mov
cld
in
mov
lock
div
out
ret
ljmp
cmp
int
lock
test
rorl
test
jecxz
lock
out
std
into
clc
rcl
jmp
sarb
adc
jmp
jmp
mov
ss
into
out
clc
jmp
clc
fadd
loop
stc
rol
enter
incl
in
ret
out
leave
repnz
loopne
shlb
jmp
ret
int3
rcl
ret
fldl
mov
jle
add
fistpll
rcr
enter
ret
mov
mov
cmc
int
repnz
aad
cmp
fsubr
clc
fsubp
in
cli
jmp
int3
int3
in
out
xor
sti
shr
loopne
cmp
repnz
aad
jecxz
xchg
in
loop
xor
aad
dec
std
shr
cmp
cmc
mul
cmp
faddp
test
jmp
ljmp
idivb
out
repz
lret
mov
xchg
ljmp
test
in
int3
out
fcmove
stc
testb
cld
mov
loope
incb
int
iret
sti
shr
cmp
sti
xorl
rcl
xchg
fsub
xchg
in
ljmp
stc
f2xm1
inc
test
shl
sti
in
aam
lret
out
fucomip
iret
dec
std
xor
call
shr
rcr
not
adc
add
cli
leave
in
ffreep
lret
fsubrp
shl
out
xor
jmp
cmp
ret
hlt
ret
sti
loope
jecxz
loope
int
aad
repnz
hlt
int
stc
ds
clc
cmpl
mov
sti
jmp
cld
fmulp
test
in
ffree
xchg
mov
fucomip
xlat
rcl
int
fnsetpm(287
xlat
xchg
in
loopne
jmp
in
repnz
std
aam
leave
repz
fsubr
cli
adc
cli
xlat
stc
sti
call
fninit
call
xor
jmp
fcmovbe
out
aam
ffree
dec
cld
jecxz
xchg
xchg
jmp
xor
aad
jmp
std
sbb
ret
enter
adc
xchg
orl
fucom
stc
lret
repnz
ror
cld
into
hlt
ret
out
xor
enter
jmp
jmp
test
cmp
cmp
cmp
cmp
cld
jmp
std
xchg
orb
lret
xor
cld
enter
lock
loope
cli
cmp
and
mov
jmp
xchg
jmp
loope
out
cs
rcl
sar
aam
rcl
ds
cmp
xlat
fildl
mov
sbb
xor
xor
sar
ss
lock
sti
test
cld
loop
loope
loope
into
xchg
xchg
repnz
ret
in
cld
xlat
out
fcmove
xlat
repz
test
fcom
sub
in
out
or
call
int3
lock
shr
fdivs
out
clc
cmp
aas
test
rorb
ret
add
fadd
aam
fst
fcoms
sbb
jg
repz
jg
test
jle
addb
mov
stc
enter
shl
jmp
sti
fdivr
ret
stc
imul
iret
in
xchg
xchg
test
int
repnz
xor
aas
fadd
fst
aad
in
test
fdivr
int
icebp
lret
orl
cmp
rcl
in
out
faddp
fmul
ret
lret
jmp
int3
ret
xor
in
std
imul
adc
into
hlt
out
xchg
and
test
mov
mov
enter
int
sarl
loope
out
loope
icebp
fcmovu
fcomp
sti
jmp
in
mov
mov
jecxz
shr
fcom
cld
test
into
rcr
fdivr
loopne
aam
jmp
xlat
fcmove
repnz
int
jecxz
into
ror
cmp
out
cmc
cld
cmp
std
sar
fnstsw
aad
imul
fmulp
lret
out
mov
xchg
repnz
aad
into
das
xlat
lret
fld
leave
fcmove
cmp
loopne
test
div
incl
xchg
clc
loopne
stc
icebp
fnstcw
aaa
aaa
stc
cli
cmp
clc
stc
sar
fcomp
call
cld
out
out
loopne
mov
loop
sti
out
vmovq
cli
fnstcw
hlt
aam
std
mov
decb
hlt
xchg
jecxz
shr
ss
in
hlt
iret
aad
xor
aad
ror
lret
lret
leave
test
les
xor
in
into
loopne
jmp
flds
cmp
sti
xchg
lock
repz
nop
aam
xlat
not
ss
iret
lock
cld
add
fdivp
div
xchg
in
icebp
sub
nop
loope
shr
jecxz
fdivl
aad
aad
jmp
test
repnz
cs
call
leave
fcmovnbe
cmp
test
loopne
hlt
cld
lret
roll
cmc
jmp
lock
aad
lret
clc
repnz
fcom
call
int3
out
out
mov
jecxz
xor
shr
rcr
into
int
int3
int3
in
in
xrelease
loope
loopne
loop
repnz
aad
jmp
aas
std
rcr
cmpb
xlat
hlt
cmp
xchg
repz
incl
call
aas
ljmp
aas
jmp
orb
rol
enter
leave
repz
out
stc
cmp
ret
addb
loope
xchg
call
lret
iret
out
jmp
ror
cmp
stc
fcomi
jmp
in
int3
enter
int3
xchg
negb
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
jl
cmp
fiaddl
jle
xlat
out
mov
cmp
in
loopne
ret
jecxz
cmp
mov
lret
fmul
iret
sti
lret
in
xor
ljmp
ret
fcmovb
idiv
sub
stc
or
int3
fiadds
jecxz
cmp
jmp
loope
shl
loopne
std
iret
fsubp
enter
mov
cmp
idivl
in
cmc
iret
cli
fmul
jmp
loope
not
in
mov
in
mov
lock
ljmp
cmp
repnz
sarb
int
and
fstpt
in
cli
jmp
faddl
in
lock
in
cmc
xlat
cmp
fcmovnb
adc
call
leave
cli
call
int3
out
sub
loope
cld
shll
icebp
loopne
xor
loopne
xlat
rcr
xchg
xchg
fisttpl
cmc
fsubrp
out
aaa
jecxz
jmp
hlt
in
flds
fadds
test
mov
lret
add
das
out
enter
ss
fmul
ss
fmuls
xchg
nop
out
test
out
ss
clc
std
aam
cmp
mov
cmp
jmp
fiaddl
fnstcw
aaa
ljmp
loope
cld
cmp
xlat
aad
inc
mov
in
out
xchg
call
rol
aam
into
aad
aaa
into
cli
rcl
ret
fadd
shl
rol
jmp
out
mov
mov
lret
cmc
loopne
iret
cmc
out
jmp
into
stc
repz
idiv
cmp
call
ret
rolb
repz
shl
cmp
cmc
cmp
cmc
repz
fdivr
iret
xchg
xor
into
sti
cs
fucomip
shl
fsubp
int
ffree
lock
mov
ljmp
hlt
in
in
in
ror
xor
sar
shl
aad
ds
test
mov
jecxz
icebp
in
addl
ret
in
cmp
ds
fdiv
fcmovnb
in
clc
out
test
xchg
std
test
aaa
aam
cmp
aad
call
xlat
sti
sub
xchg
stc
decl
rclb
idivl
test
shl
test
fdivr
int
lret
push
or
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
hlt
sbb
adc
aaa
jg
fiaddl
jle
orb
aad
test
sbb
int
aam
fadd
aad
fcmovnb
out
out
int3
ljmp
into
fidivs
cmp
aad
fsubp
addl
into
xchg
test
mov
cs
repz
cmp
loope
inc
neg
shr
xlat
sti
std
fistl
out
in
ret
clc
int
ror
sti
lret
aad
cmp
test
int3
decb
shrl
leave
fmul
ljmp
int
xchg
sti
aas
out
lret
loopne
nop
loop
out
mov
xlat
xlat
sar
ror
fnstcw
cmp
rcl
loop
call
in
fucom
mov
das
sarl
aad
int3
iret
hlt
divb
cmc
ret
cld
into
xlat
xor
fucompp
enter
xchg
xor
xor
imul
ror
shl
fadd
ret
jecxz
ret
and
repnz
jmp
jmp
inc
clc
fld
div
in
aam
stc
flds
rol
cmc
xor
leave
aad
sti
aaa
cmp
addl
out
std
xchg
lret
enter
aaa
std
neg
into
stc
std
xlat
cli
testb
icebp
iret
xchg
out
call
std
repz
aam
out
ret
fmull
out
mov
movl
out
int3
cmp
xor
iret
loop
test
in
test
flds
nop
in
fiadds
out
shr
lock
cmpb
cmp
hlt
out
xor
sti
mov
decl
icebp
test
xor
cli
in
xlat
fdivp
fprem1
aad
cld
loope
cmc
out
into
out
xchg
sar
rcl
int3
jmp
ss
xor
std
stc
rol
fstp
xchg
lret
xchg
ljmp
hlt
cmc
test
cld
int3
in
stc
mov
int
jmp
cmp
iret
ljmp
fcmovne
ret
test
imul
aad
and
adcb
out
xor
lret
xor
loop
imul
rolb
in
int
movl
movl
mov
mov
sub
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
fucomp
jle
cmp
fiaddl
jle
nop
loop
loopne
rclb
leave
sti
cmp
std
out
aad
ret
and
fcmovnb
aam
loope
test
fucomp
iret
out
xchg
loopne
in
xor
rcl
out
fcmovbe
cmp
int3
stc
cmp
in
repz
out
lret
in
lock
jmp
test
loopne
call
rcl
rol
fdivrp
test
cmp
in
in
out
lret
lock
out
jmp
fdivrl
roll
fcmovnu
sbb
nop
out
nop
jmp
out
das
xor
in
sti
bnd
in
cld
iret
iret
test
loopne
call
loop
ljmp
cmp
std
aam
fptan
lock
repnz
stc
stc
lret
mov
loopne
test
lock
out
stc
cmc
into
ljmp
call
mov
in
test
icebp
shr
fmul
call
rcl
test
aas
enter
out
fsub
into
xchg
cmc
hlt
leave
sub
div
out
aad
out
cmp
aas
flds
clc
mov
leave
lret
ljmp
xor
cmp
jecxz
fsub
faddl
in
testl
ljmp
hlt
sub
aam
adc
fucomp
jmp
xchg
iret
sub
ljmp
out
lret
mul
icebp
sti
in
xchg
and
in
aad
shl
xchg
xchg
xchg
lock
shl
clc
lret
in
cmp
fst
xor
in
cmp
cli
xchg
shl
test
shrb
out
shl
sarb
div
inc
ret
cmpl
xchg
jecxz
decl
in
jmp
int3
sub
cmp
fdivrp
faddp
loopne
addl
call
fnstenv
test
cmp
int
ds
ds
int3
fdivrp
xchg
in
out
or
enter
xor
hlt
in
cmp
cld
in
aaa
cmp
out
jmp
sbb
xor
out
hlt
clc
cmp
fcmovu
out
loopne
rcr
cmc
hlt
repz
mov
xchg
in
ljmp
rol
jmp
or
out
std
mov
movzwl
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
mulb
jg
fiaddl
jle
fneni(8087
jmp
std
in
xchg
nop
out
jmp
aam
shl
fdivrl
out
sti
shl
std
hlt
cmc
jecxz
xchg
fucom
sbb
out
mov
fstp
in
fcom
xor
cmp
xor
hlt
fxch
std
fcomp
iret
jecxz
xchg
ret
fimuls
roll
out
xor
cmp
repz
fcmovnbe
roll
add
stc
cli
call
in
cmc
xor
out
into
lock
sti
int
clc
rcl
fxam
fst
xlat
ret
or
leave
hlt
in
shrb
out
fldl2e
fdiv
shl
cmp
cmp
lock
shl
aam
cmc
xchg
test
int
cmc
subb
cli
sub
xor
hlt
int3
fmul
mul
loopne
fisttps
test
xlat
rolb
mov
cli
fidivrl
cmp
xlat
or
sbb
xchg
in
in
rorl
ljmp
xlat
fst
into
test
neg
mov
test
adc
fdivs
push
aad
aam
not
xchg
fmull
fstp
loopne
xacquire
fnstenv
jmp
cmp
shl
call
fisttpl
shl
xchg
mov
in
cmp
std
fistpll
out
fstpt
clc
incb
mov
out
in
fld1
mov
test
jmp
test
int
cmp
xor
loop
out
sti
cld
fcmove
xor
into
xchg
xchg
out
jmp
xor
int3
cmp
call
aad
stc
test
clc
fcmovne
and
loop
jmp
xor
ror
call
int
icebp
sar
cld
cmc
vpaddw
xchg
shl
cmc
shr
cmc
fxch
rcl
aaa
loope
cli
shl
fimull
fcmovu
mov
test
lret
fcmovnbe
jmp
rcr
xor
in
rol
test
fmuls
in
call
lret
fidivrs
cld
loope
xchg
loop
test
leave
in
lret
repnz
ljmp
in
cmp
stc
cmp
repnz
sar
testb
lock
shl
aas
into
xor
shl
fucomi
ss
repz
fcmovnb
inc
cld
rolb
cmp
sub
jmp
ror
rcr
ror
js
cmp
and
into
jg,pt
fiaddl
jle
out
jmp
sub
in
test
cmp
out
out
sar
fstpt
cmp
ffreep
sbb
std
xchg
adcb
fsub
cmc
int3
loopne
shl
aas
iret
rol
clc
cld
rorb
fildl
in
out
jmp
fpatan
push
jmp
fcmovbe
imul
and
lret
fcomi
xchg
out
in
rol
loop
repz
cmp
sti
fstp
idiv
in
neg
lret
neg
std
test
test
leave
lret
int3
divl
in
int
rolb
jmp
out
iret
loop
std
movb
ror
out
in
cmp
repnz
sarl
int3
out
fmulp
loopne
jmp
loop
xchg
ret
int
stc
xlat
repz
lret
addl
mov
std
xchg
call
leave
stc
test
ljmp
div
enter
mov
iret
stc
into
icebp
mov
ret
xor
repz
clc
repnz
hlt
incl
enter
cld
loopne
sub
cmp
cld
int3
cmp
ds
lock
addb
std
loopne
fneni(8087
lock
xor
idiv
xlat
cli
xor
ss
rol
out
out
or
lret
in
les
repnz
cmp
cmp
aam
xlat
inc
ret
in
and
testl
aad
into
xor
into
cmc
aam
cli
add
repnz
sti
neg
mov
std
icebp
mov
lret
fcmovu
cmpb
out
fcomp
cli
rol
enter
int
sti
iret
mov
call
into
hlt
clc
xlat
xor
shr
repnz
mov
in
nop
jecxz
rcr
cmp
sbb
repnz
cmp
call
int3
jmp
jmp
xor
fstpt
enter
cmpl
loope
or
jmp
out
in
int
divl
xor
rcr
cmp
call
fcmovnu
loopne,pt
cmp
mov
int3
in
ret
xor
cld
clc
cld
idivb
ret
fsubs
test
add
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
push
sub
sarb
add
ds
neg
in
test
faddp
mov
enter
icebp
in
jmp
lock
call
loope
repz
cmp
loop
leave
hlt
loop
fsub
int
icebp
out
xchg
xor
fst
in
cmp
fsubrp
loopne
out
icebp
loopne
cli
sti
loope
cld
xchg
mov
mov
int3
enter
sarl
shl
in
in
fildl
test
mov
lret
shll
fnstcw
ss
clc
std
shll
fdivp
in
cld
loop
movl
cld
shr
mov
stc
hlt
cld
ljmp
fstp
aad
loop
repz
test
fsubp
lock
test
jecxz
aad
ror
clc
cmp
addl
out
mov
incl
in
lret
jmp
rcl
repnz
test
faddl
or
rorl
out
cmp
jmp
not
out
xor
test
testb
mov
xchg
enter
ret
xor
fxch
stc
jmp
out
loopne
xlat
mov
aam
jmp
in
sub
xchg
out
fucom
xchg
shll
out
fld1
xor
out
fsubrp
incb
cmp
std
stc
fdivr
std
mov
out
xchg
hlt
xor
int3
cmp
ss
shl
lret
lret
int3
cmc
fidivrs
fcmovnu
mov
std
xchg
mov
rcl
ss
repnz
iret
clc
stc
fdiv
test
rcl
mov
mov
mov
jecxz
xchg
addl
cli
into
xlat
cld
xor
clc
int3
stc
jecxz
rcl
mov
lret
leave
mov
mov
lret
icebp
aad
enter
ljmp
addl
movl
iret
out
fsubr
cmp
idiv
in
aam
ds
loopne
in
out
mov
xor
cld
loope
lret
in
fdivp
repz
fsin
xchg
in
out
test
mov
aam
lock
cmp
xor
in
testb
xchg
out
sub
ss
cmp
cmc
shll
fcomip
notrack
sbb
rorb
fucomp
out
out
repnz
xor
rol
add
push
sbb
add
cli
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
mov
ret
jg
fiaddl
jle
sti
rol
aam
icebp
rcr
rol
sti
xchg
iret
out
fsub
jmp
jmp
fdiv
in
hlt
lret
ss
call
loop
fucomp
loope
repz
jmp
cmc
out
xlat
fcom
loope
icebp
shl
clc
std
xlat
cmc
testl
in
xlat
repz
aam
std
cmp
lret
fcom
hlt
stc
addl
mov
rol
xor
cmc
jmp
fxch
inc
rcl
shl
adc
in
out
jecxz
cld
enter
xchg
in
ror
fsubr
ss
into
call
cli
stc
adc
shl
std
in
into
std
out
call
out
leave
cmp
clc
imul
faddp
hlt
jmp
lret
icebp
mov
xchg
test
xchg
xor
std
repz
out
incb
out
test
int
rcll
out
shr
div
ror
out
adc
leave
div
fucomi
loop
iret
lock
out
int3
repnz
cli
out
cmp
shl
vpsubd
mov
int3
enter
hlt
lock
fildll
cmc
out
lret
shl
sar
cmp
rcr
ret
lret
addb
int3
xchg
lock
enter
cmp
clc
hlt
cmc
cmp
sti
leave
call
int
lret
lock
into
sub
ret
fcmovne
idivl
lock
fst
inc
aam
aad
out
fsubrp
loopne
mov
shl
xor
ljmp
jecxz
testb
out
lock
jmp
loopne
rol
sub
in
ror
cmp
cmpl
in
out
xlat
xlat
enter
xchg
int
cmp
xor
lret
int3
in
sti
rolb
mov
xchg
and
int
xchg
aad
fisubrl
fdivl
idiv
out
jmp
int
jmp
out
rol
in
ss
ljmp
out
sar
orl
sub
cmc
xlat
cli
fxch
xlat
jmp
cld
test
repz
stc
and
rorb
xlat
aad
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
hlt
imul
into
aam
xlat
cmp
ljmp
not
jmp
decl
test
mov
out
icebp
lock
repnz
hlt
out
fldlg2
out
fcom
loopne
in
hlt
out
out
loope
orl
shr
aad
cmp
sbb
shl
shl
neg
test
loop
xchg
in
stc
xor
aas
loop
into
xor
loope
xchg
in
int
adc
in
fcmovnu
fcmovnu
shr
cli
repz
out
rcr
xlat
sti
call
rcr
aam
ss
jecxz
aad
out
xor
into
cmp
sti
in
mov
in
ljmp
xchg
or
ret
sti
ljmp
repz
ds
jecxz
lret
iret
jmp
mov
iret
ljmp
aad
fld
cmp
cmp
test
fprem
loop
sub
mov
adcb
cmp
in
fcomi
jmp
fnstcw
shl
repz
mov
lret
iret
cmp
call
xor
cmp
lret
fmul
in
icebp
leave
fadds
mov
loope
out
repz
xor
sub
clc
cmc
in
jmp
repnz
roll
xlat
std
cli
or
mov
cmc
adc
aaa
xor
dec
cmp
ret
clc
fstpt
out
aam
or
fiadds
xor
icebp
clc
xor
clc
fstp
ffree
aas
test
sbb
test
out
xchg
orb
jmp
lret
aad
adc
aad
cmp
in
std
loopne
std
in
lret
hlt
xor
call
cmp
incl
or
filds
aam
icebp
xor
call
int
enter
xor
rol
call
into
loope
rorl
xor
ret
in
jmp
int3
test
loope
orl
ficoml
ret
out
jmp
cmp
loopne
cmp
out
lock
not
in
loope
xchg
stc
cli
icebp
call
out
int
fdivl
cli
cli
jmp
sarl
aaa
adc
icebp
jmp
inc
mov
fcmovu
in
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
vpcmpeqd
mov
add
in
xor
xor
aad
lret
loopne
incl
xlat
ret
cli
mov
shr
xorl
aam
into
loope
cmp
into
fnstcw
ret
mov
mov
int3
imul
flds
in
int3
xor
ljmp
in
fucom
ret
xlat
mov
fdivrp
sti
fiadds
out
lock
vpsadbw
jmp
in
clc
in
ljmp
shl
aad
stc
call
iret
cmp
int3
icebp
test
out
test
mov
xlat
cld
lret
icebp
test
aam
sub
hlt
in
aam
xor
cmp
aad
rcr
test
leave
mov
imul
xor
sar
lret
leave
leave
loope
cmp
stc
loopne
test
fsub
or
aam
repz
xlat
in
enter
lret
fsubr
faddl
cli
mov
dec
rol
xor
fcmovne
out
out
cmc
xlat
ret
lock
incb
leave
out
lret
fucom
mov
stc
jmp
in
repz
out
std
stc
aad
cmp
fxch
mov
repz
enter
neg
fcmovb
cmp
fidivrl
loop
out
xlat
orb
fsubr
jmp
roll
lock
in
enter
xlat
lock
aam
rol
aad
lret
mov
out
loopne
repnz
test
jmp
fucomp
test
orl
sti
nop
mov
leave
shll
hlt
ljmp
aas
loopne
repz
repnz
xlat
fisttpl
test
stc
call
repz
fnstsw
addl
enter
xchg
icebp
cli
xchg
mov
jmp
ss
out
repnz
icebp
into
repz
fdivr
test
sub
sub
xlat
lret
ljmp
test
clc
mov
adc
sar
mov
cmc
out
into
int3
enter
aam
dec
fndisi(8087
hlt
clc
in
fadds
out
into
decl
int
cld
xor
shl
cmp
loopne
repnz
decl
fdivl
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
sub
loopne
sbb
jg
fiaddl
jle
mov
xor
icebp
jmp
jmp
idivl
int
cmp
fcmovnbe
lock
in
out
test
mov
loop
clc
jmp
xlat
xor
std
add
out
test
nop
nop
repz
out
aad
ret
stc
xor
ss
cmp
ds
cmp
rol
cli
testl
iret
ss
lret
aad
rolb
rcl
inc
add
lret
iret
loope
ljmp
jmp
cmp
xor
lock
out
jmp
lret
aas
loopne
loop
aad
cmp
std
test
ffreep
in
rcl
faddl
test
out
orb
xor
call
int
aas
rcr
test
mov
xchg
shl
rol
xor
repnz
repnz
jmp
lock
lret
iret
mov
hlt
lock
fsub
cmp
call
ljmp
in
repnz
fimull
int3
mov
in
out
cmp
filds
out
hlt
fiadds
test
test
test
iret
xor
stc
in
out
into
ds
sti
testb
ljmp
leave
sub
rcl
stc
int
out
cmp
iret
int
fistpll
shl
rcr
in
fmull
out
ror
lock
fstp
iret
out
lret
in
sti
out
push
xlat
xlat
lret
jmp
int
icebp
bnd
lret
cmc
iret
int3
repnz
std
stc
test
std
loop
mov
rorb
jmp
stc
shl
aam
hlt
lock
mov
fildl
mov
lock
cmp
enter
lock
cli
mov
shl
ret
out
cld
ret
shl
lock
hlt
std
fcomp
and
xlat
neg
call
jmp
xchg
fcoml
rcr
int3
cli
idivb
cmp
repz
test
aad
mov
addl
cmp
sti
fadd
lret
repz
aad
jecxz
neg
call
fcmovb
add
sub
je
add
rcl
ret
fucomp
insb
fstps
add
sbb
jle
add
fsub
adc
sub
repnz
xlat
lret
cmp
clc
cli
fcmovu
loopne
enter
mov
shr
cs
xor
das
fucomi
repz
aam
test
xchg
add
int3
loop
fucomp
faddl
mov
fucomp
enter
faddp
in
fcom
fdivp
call
nop
call
lock
ror
fcmove
call
clc
out
sti
std
enter
in
testl
jecxz
icebp
cmp
rcl
aad
aas
not
aas
cli
fldl
popl
icebp
stc
xor
cmp
lock
fidivrl
loop
roll
int
loopne
ljmp
out
sar
rcl
in
out
adc
xor
repnz
leave
test
cmc
mov
xchg
std
adcb
rcl
stc
jmp
int3
lret
jmp
aas
ret
stc
fsubr
hlt
aam
mov
int3
std
hlt
into
loop
ret
in
out
call
in
ror
hlt
shl
repz
lret
loope
ret
ljmp
clc
ror
call
int3
cld
iret
into
loop
repnz
aaa
iret
clc
hlt
out
out
cmc
cmp
shl
int
sti
les
orb
fnstenv
cmc
sarl
cli
fcmovnbe
stc
xchg
in
cmc
rol
clc
les
fmul
loope
div
xor
hlt
fdivr
aad
aas
cmp
aad
in
popl
repnz
ljmp
leave
not
int3
icebp
jecxz
clc
ror
mov
std
fcomi
loop
int
mov
ret
jmp
loopne
hlt
fidivrs
std
inc
stc
orb
mov
mov
out
in
neg
lock
xor
sarb
pushl
xor
fsub
cmp
orb
nop
loopne
adc
fnstenv
aad
iret
leave
lock
imul
std
loopne
clc
iret
sbb
aad
in
enter
in
test
in
das
hlt
jmp
cmp
in
fadds
sar
xchg
repz
loope
in
cmp
jecxz
les
aam
mov
test
xchg
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
orl
int3
ret
into
ss
lret
out
int3
out
sti
hlt
fcmovnb
ds
fdivr
mov
loop
xchg
into
iret
rcll
in
in
jmp
out
aad
aas
out
call
fmul
std
push
xchg
xchg
fsubr
ss
lock
cmp
cmp
loop
rcr
aas
test
xchg
loopne
int
jmp
shlb
rcl
fcom
int3
xor
cmp
cld
cld
aas
mov
mov
test
repnz
aad
repz
leave
jmp
cld
fcos
fadd
std
hlt
cld
neg
int
mov
cld
lret
xchg
loope
xor
fcomi
into
repnz
lock
in
in
cld
std
enter
fisttps
ret
ljmp
xlat
incl
repz
in
fcmove
jecxz
mov
xchg
cmp
jmp
fdivrl
loope
cmp
incb
lret
int
test
jmp
leave
fcom
cmp
cmp
aam
icebp
clc
hlt
xchg
loop
xlat
lret
call
out
aad
divb
div
hlt
xor
push
out
jmp
xchg
fcomi
call
loope
shl
cmp
lret
fnstsw
loopne
cmp
lock
loope
or
xchg
mov
xor
jmp
lret
ror
stc
rcl
iret
hlt
xlat
mov
int
cli
cld
out
faddl
out
ljmp
lret
shl
call
cli
fcmovne
in
jmp
loop
rorl
sti
frndint
xor
cmp
cmpb
orl
lret
not
xlat
iret
aam
sar
loopne
std
repnz
rcl
lret
lret
fsub
lock
mov
int
cmp
int
xlat
hlt
rcr
out
aad
mov
std
mov
icebp
xchg
dec
in
loop
cli
fadd
lock
repz
cmp
fsubp
loope
testb
ljmp
int3
hlt
in
icebp
les
ljmp
repnz
movl
out
xchg
in
lock
call
hlt
lret
cli
fnstcw
mov
add
jmp
rcl
aad
loop
pop
sbb
xor
lcall
jle
cli
xor
clc
test
shl
xchg
adcl
iret
jmp
out
sti
fdiv
xchg
filds
in
mov
mov
int3
adcb
clc
sar
aas
lret
leave
aam
repz
aad
fadd
enter
loope
enter
xor
aaa
ljmp
clc
loopne
rolb
leave
into
sbb
xchg
ss
cmp
sti
out
fdivr
jmp
in
icebp
shl
ret
xchg
mov
int3
aad
std
repnz
lock
jecxz
repz
div
repnz
mov
test
cld
jmp
mov
aad
xor
ds
sar
in
cmp
hlt
add
test
lea
fucomp
addb
sti
rcr
sub
cmp
cld
addb
in
test
hlt
repz
aaa
clc
out
int
fptan
loope
aaa
test
call
sar
leave
int
int
hlt
aam
cld
cmp
ds
cmp
sub
lock
ret
mov
cld
mov
call
mov
xor
shr
sbb
stc
f2xm1
repz
aam
fucomi
neg
shl
fsubr
repnz
xchg
in
xor
lock
shl
call
shl
repz
call
in
test
addl
jmp
cld
ss
out
shr
xlat
xlat
fdiv
ret
fxch
leave
std
into
in
mov
xchg
in
test
out
in
aad
out
aaa
ljmp
cmp
fcmovnbe
mov
fsubrp
in
jmp
in
xor
cld
das
leave
cmp
fadd
out
cmpl
mov
div
mul
xchg
leave
in
repz
jmp
rcl
lock
ljmp
out
cld
mov
lret
into
rcr
sar
shr
out
int3
enter
cmp
fcmovne
fscale
loopne
div
shl
in
fldl2e
in
jecxz
cs
out
std
repz
cmp
shr
sbb
push
lds
mov
out
int3
icebp
shr
test
xor
rol
into
lret
aad
fstpt
cmc
xlat
ds
cld
ftst
fucomip
std
test
test
aam
xor
aam
in
hlt
stc
stc
ljmp
fdivs
add
je
add
enter
fstp
int
inc
dec
add
sarl
mov
jg
fiaddl
jle
sar
loope
shr
cmc
fdivrp
mov
stc
shr
fmulp
cld
out
lock
repnz
int
std
jmp
mul
out
test
div
mov
lret
xchg
aad
fcmovne
out
cmp
rol
ror
idivl
xor
loop
cli
nop
in
out
mov
cmp
xor
cmc
out
into
out
aas
out
call
fiaddl
xchg
out
mov
mov
call
cli
lret
xlat
rcl
test
out
aad
out
mov
loopne
dec
xchg
xor
rcl
fucom
cmp
fcom
test
test
fiaddl
xchg
xor
shl
aaa
clc
lret
add
div
faddl
leave
incl
rolb
cli
cmp
jmp
faddp
out
ret
mov
fsubr
in
cli
and
roll
jecxz
jecxz
fmul
cmp
rcr
rol
icebp
loope
ljmp
test
repnz
loope
out
out
repnz
cld
lock
hlt
clc
ffreep
mov
jmp
loopne
iret
jecxz
out
fnstenv
cmp
fdiv
in
iret
loopne
roll
jmp
ljmp
shlb
xor
sarb
cmc
rcl
icebp
lret
shl
lds
test
cld
call
das
call
in
enter
in
testb
std
mov
testb
std
not
icebp
call
cmp
cmp
cmp
loope
shl
neg
call
cld
call
shl
in
call
cli
jecxz
out
xchg
jmp
out
out
jmp
addl
rcr
sbb
in
fcmovnbe
std
aas
aam
test
cld
movl
mul
fcmovnbe
aam
cmc
std
test
fadd
mov
lret
int3
fdivr
loopne
aaa
ror
fidivrs
jmp
cmp
test
fsubp
fsubrp
fadds
xchg
iret
jecxz
in
call
stc
adc
in
jmp
shl
mov
mov
sti
fcmovbe
xor
fcmovb
add
sti
jbe
add
xchg
add
add
add
sahf
add
fsubr
rcrl
add
add
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
pusha
and
aad
jle
add
ds
rcr
cmp
add
cld
in
clc
in
popl
mul
rol
xor
shlb
ror
sar
ret
ds
test
mov
lea
mov
out
out
fadds
fmulp
cld
cli
jecxz
addb
xchg
mov
fdiv
cmp
fdivrp
aam
repz
inc
stc
in
mov
fadd
mov
xor
jmp
xlat
aam
cld
roll
repz
loopne
frndint
out
into
fiaddl
out
out
in
out
xlat
aaa
fnsave
fnstcw
iret
cli
and
lds
loope
mov
int
int3
call
not
sub
loope
in
imul
loop
hlt
decl
fimuls
icebp
stc
xor
repnz
sar
shl
roll
fsubp
cld
xlat
loopne
jecxz
faddl
mov
in
fcmovbe
std
enter
filds
cld
not
mov
in
ror
test
aam
leave
jmp
cmp
out
loop
into
out
fmuls
xchg
popl
xchg
icebp
int
sti
sti
xor
out
shl
shl
out
aaa
fnclex
out
out
neg
addl
aaa
lds
jmp
xor
ss
xchg
cli
clc
stc
loop
out
ljmp
loopne
ret
jmp
int3
lock
testl
dec
mov
mov
in
loope
mov
test
hlt
lock
fidivrs
jmp
mov
fsubp
in
xchg
fsubr
in
jmp
fnstcw
fdivp
fldln2
cld
stc
in
fcomp
mov
mov
jecxz
mov
shlb
cli
int3
ds
into
test
ret
fxch
ljmp
in
fisttps
cmp
xlat
call
cmp
xchg
test
xchg
lea
lret
aam
in
call
icebp
cmp
fcomi
sbb
loope
faddl
xchg
icebp
cld
clc
aaa
cmp
loop
adc
ffree
loop
out
addl
ljmp
ja
add
and
add
clc
jmp
aam
mov
int
rol
repnz
stc
imul
ret
jle
add
repz
int
ds
fadd
rcr
bnd
rolb
fmul
into
test
shl
clc
enter
sar
addb
std
mov
in
jmp
jmp
loop
cmp
in
clc
ds
ror
fdiv
std
not
hlt
xchg
incl
test
ror
cld
out
lock
lret
std
ds
ds
repnz
mov
aam
enter
xchg
jmp
int
xor
lret
xor
iret
int3
int
faddl
out
out
xlat
lret
call
sub
cmp
call
sti
int3
fucom
fildl
cli
orl
shl
fcomp
cmp
fincstp
ds
rcr
out
loopne
fst
orl
loope
lret
ljmp
shl
les
fcomip
test
xlat
jmp
ljmp
xchg
xorb
xor
aam
xor
cmp
int
fcmovb
sti
movb
and
clc
cmc
das
xlat
cmp
leave
jmp
int3
in
ret
shl
les
neg
icebp
in
lock
out
out
aad
aaa
in
lret
cmp
rolb
in
fiaddl
lock
cmp
xlat
fsubrp
std
ljmp
cld
mov
cli
xchg
out
mov
sub
fisttpll
imul
cs
int
cmp
cli
ds
out
test
fsubp
lret
ret
loopne
loope
mov
clc
int3
xor
fmulp
leave
int3
adc
cmc
icebp
cmp
out
loopne
test
xchg
cld
repz
xor
loope
rcr
lret
clc
out
fcomp
xchg
xlat
in
adcb
in
sub
aaa
in
sti
ss
aam
lock
in
aam
mov
addb
mov
into
int
xor
imul
out
aam
cmp
lds
flds
jecxz
loopne
mov
lock
idivb
repz
fxtract
int
mul
xlat
jecxz
out
mov
out
jmp
mov
out
jmp
xor
stc
stc
fucomi
ljmp
rcl
lock
out
ljmp
int
nop
add
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
cli
jo
ljmp
jle
clc
ljmp
loopne
cmp
in
shl
div
enter
fcmove
lret
cld
ljmp
jmp
out
int
int3
cmp
test
fcmovnbe
repnz
filds
jmp
mov
shr
sar
out
ss
adc
std
cmp
loope
fisttpl
int3
lock
cmp
int
hlt
clc
xlat
rcr
aas
roll
xchg
cmp
enter
fimuls
shr
ljmp
xor
rcl
mov
rolb
int3
int3
out
repz
aam
sar
aaa
sarl
iret
in
not
ret
std
stc
repnz
mov
loope
ljmp
cmp
fcmovnu
hlt
roll
xlat
sub
xchg
fstl
xor
out
in
int3
fucomp
in
out
cmc
faddl
test
into
in
inc
lret
xchg
mul
stc
in
dec
std
loope
lds
aam
movl
call
cld
rcr
int
lock
int
mov
fisttpll
shr
jmp
call
ret
out
cmp
roll
in
mov
fucomip
icebp
or
enter
stc
out
ljmp
cmc
sti
ret
lret
nop
pop
jmp
jmp
hlt
cmp
xlat
cli
cmp
fcmovu
repz
rol
xchg
hlt
test
out
xchg
lea
into
cmc
out
aad
out
aaa
hlt
loop
loop
testl
int
mov
out
lret
out
jmp
aas
imul
stc
cmp
repnz
call
out
lret
cli
in
in
shl
xor
aaa
cmp
jmp
fsubr
aas
rcl
not
xor
rcl
stc
mov
shl
int
or
in
repz
repz
int3
ds
repnz
ret
cld
icebp
loope
ret
out
fucomp
or
ljmp
out
ret
icebp
cmp
repz
test
xchg
xlat
aad
flds
addb
das
ret
cmc
jmp
cmp
ret
cld
loop
xchg
mov
mov
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
pop
cltd
xor
jg
fiaddl
jle
dec
ret
ss
xor
clc
out
cmc
cmp
loop
fmul
aam
test
stc
nop
xchg
out
loopne
ret
xor
sti
aaa
fadd
stc
cmp
cmp
test
cli
test
fucomip
adcl
icebp
loop
jecxz
enter
jmp
loop
cmp
sarl
test
fucomp
lock
in
ljmp
fcomp
adc
loopne
repz
test
int3
mov
fimull
in
ljmp
lret
fucomi
roll
stc
roll
call
shl
xor
call
lret
int3
jecxz
cli
add
leave
in
hlt
mov
out
int
int
adcb
repnz
clc
cmc
fmulp
dec
cmp
xchg
jmp
mov
in
jmp
xchg
and
hlt
xor
cmp
cmp
int3
ljmp
aas
icebp
test
lret
fucomp
out
xchg
test
into
out
fxch
std
out
repz
add
test
enter
lds
hlt
rorb
cmc
cmc
fucomi
enter
sbb
idiv
in
shr
xchg
call
lock
in
xor
ds
fdiv
cmp
repz
fisttps
loope
enter
or
ss
ljmp
loope
ret
out
ljmp
loopne
mov
cmp
ffree
div
cli
fucomi
testb
xchg
in
xlat
mov
std
enter
xlat
out
icebp
aaa
ljmp
xlat
adc
addl
lock
repz
faddp
fnstsw
sar
fdivr
lock
in
leave
fcmovnu
adcl
aad
int3
cmp
fcomp
repnz
xor
std
fildl
call
addb
int
in
loopne
stc
cmp
add
mov
lret
test
jmp
xlat
leave
ror
ljmp
hlt
in
fsubp
loope
out
xchg
out
not
divb
repz
int
into
stc
cmp
loopne
std
cmp
mov
in
jmp
adc
add
jmp
aad
ret
int
fistpl
lret
fistpll
fiaddl
jle
shl
loope
mov
cld
cmp
xor
stc
in
rol
jmp
cld
loop
loope
xchg
xchg
into
nop
out
xlat
loope
cmp
std
shl
cmp
hlt
shr
aam
icebp
rcr
sti
loop
mov
iret
xorb
jmp
in
hlt
xlat
ror
loope
out
loop
leave
mov
out
out
int
lea
lret
jecxz
fcom
sti
aaa
aas
clc
repnz
stc
adc
out
lock
test
jmp
sarl
fnstcw
out
fdivp
iret
cld
repnz
test
repnz
loop
shl
stc
int
out
jmp
xlat
loop
idiv
fdivr
stc
idiv
fmull
shl
and
clc
loop
dec
sarb
aad
clc
in
out
sub
xlat
ret
cli
clc
fcmovb
out
xchg
loope
enter
cmp
divl
stc
inc
fsubp
sbb
fcmovnb
sar
addb
mov
out
loop
cmp
out
fidivrl
int
out
loopne
repz
rcl
fstp
sti
loop,pt
in
fsub
xchg
leave
xchg
aaa
xor
int3
sti
out
into
cmp
fnsave
sar
cmp
fldl
icebp
mov
cmp
xor
lret
cld
stc
sti
hlt
ds
aad
testb
adcl
out
not
hlt
std
fsub
cli
hlt
leave
ffreep
int3
mov
int
and
loop
cs
stc
clc
lock
cmp
adc
sub
cli
lret
mov
mov
stc
cmp
cmp
jecxz
testb
lret
loopne
clc
in
lret
mov
repz
ss
aaa
ljmp
in
loop
cmc
jmp
sti
jmp
mov
out
sti
stc
fdivr
aaa
in
jmp
fucomip
cmp
vmovntdq
lret
decl
fsubr
sub
shll
cli
xor
jecxz
in
idiv
jmp
testb
std
fucom
clc
xor
out
out
iret
icebp
ds
ror
out
clc
loope
enter
shr
fisttpll
int3
shl
xor
ss
rcl
ret
xchg
fisttps
scas
xlat
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
ret
lds
add
lret
out
orl
in
xor
cmp
in
out
xchg
adc
sti
enter
mov
xlat
out
cmp
loopne
stc
rcl
jecxz
in
ret
roll
lock
and
jmp
aad
out
fstp
fdivp
aam
int
cli
in
mov
cld
fcmove
iret
xchg
int3
test
loop
aad
aad
cmc
fucomip
cmp
out
vpor
fsub
in
and
in
int3
in
call
fucomi
int
in
cmp
call
lret
in
lret
fmulp
mov
into
rorl
fcomp
cmp
aad
sti
loop
out
cmp
test
int3
addb
fsub
int
fdivrp
aam
fdivr
dec
ret
cli
cli
xchg
dec
addl
cmp
fdivr
loop
sbb
loope
mov
inc
incb
adc
ror
leave
ror
shr
cmp
xchg
sbb
jmp
fnstsw
fadd
xchg
mov
lret
lock
jmp
std
aad
incb
cmc
aam
int3
jmp
test
enter
cld
out
clc
lret
loope
cmp
cld
ds
in
ret
in
nop
sar
xchg
into
repz
repz
aam
into
loop
cld
sar
lds
orb
imull
int3
xor
clc
ljmp
aad
fcmovnu
out
ret
test
int3
mov
and
shl
in
jmp
cli
sbb
out
sti
incb
sti
call
ss
aad
repz
cmp
cmp
lret
ret
clc
in
cld
ret
cli
xchg
enter
xchg
stc
out
sti
cmp
fldl
lret
into
leave
jmp
xchg
call
in
fprem1
rol
ret
fdivr
xchg
fcmovu
test
sub
in
addb
aaa
fmul
cld
cmp
shl
loopne
out
sar
ljmp
mov
enter
idivl
fmul
aad
iret
lock
mov
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
cld
sbb
out
aad
cld
jecxz
loopne
xchg
hlt
loope
lock
icebp
loopne
ror
fistpll
rorl
lret
out
in
xor
lret
aad
xlat
cmp
fdiv
in
cli
jmp
addl
repz
xor
in
xlat
leave
out
cmp
lret
hlt
rcr
fst
fst
stc
mov
lret
mov
xchg
lea
aaa
repz
std
std
call
cmp
into
stc
and
out
stc
fxam
out
xchg
cmc
repnz
sub
test
in
cmp
jecxz
loop
mov
test
in
fnsave
in
aad
cmpb
roll
sti
cli
cli
leave
fmul
test
cld
hlt
repz
rcl
aaa
fcmovbe
in
cmp
fdivr
sti
jecxz
cld
xlat
out
lret
out
fcmove
repz
iret
rol
aam
in
out
cmp
icebp
cld
cld
shl
lock
ret
jmp
repz
aam
out
icebp
repz
fst
cmp
out
test
cmp
xor
lret
iret
jmp
ret
fstpt
icebp
rcl
aam
std
mul
fld1
cli
rol
mov
test
out
hlt
in
shl
in
xlat
repnz
test
fadd
jmp
out
jmp
jmp
loopne
xor
repz
lock
test
leave
out
sti
cli
jecxz
in
loop
xchg
out
ret
jmp
int3
repz
rol
loopne
xchg
xchg
stc
int3
sbb
shl
in
into
ljmp
out
out
sub
loope
fsqrt
repnz
xchg
std
in
xchg
iret
out
in
mov
rcr
into
lret
iret
sti
xor
and
ljmp
repz
aaa
out
jmp
clc
out
pushl
rcr
out
aas
cld
call
ljmp
test
cli
lret
enter
fcmovu
mul
loop
fsubp
ret
fcomip
sti
nop
test
xchg
cmp
xlat
divl
cli
cmp
xor
idiv
in
stc
clc
in
mul
in
mov
fsubrp
lea
out
call
std
cli
ret
or
add
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
xchg
in
out
jle
add
loopne
fldl
ret
loop
dec
cld
decb
out
int3
dec
out
dec
cmp
test
in
ror
mov
das
ret
jmp
fincstp
cmp
repz
repz
neg
test
call
fst
loopne
repz
ret
icebp
int
out
ffreep
out
repnz
xor
jmp
ret
lret
test
lret
mov
in
ljmp
cli
jmp
adc
rol
loopne
xchg
fsubrp
in
int3
mov
or
leave
cmp
clc
jmp
fldl
inc
fdiv
loop
test
std
loop
out
and
jmp
lret
loopne
or
aad
adc
cld
test
lret
cld
mov
push
ret
jmp
sar
cmp
aas
ds
roll
int3
fld
enter
in
ret
ljmp
lock
ret
adc
sti
leave
out
test
xor
aaa
loope
xor
stc
aad
iret
ss
xlat
ret
fstp
out
leave
enter
shl
les
out
cmp
in
cmp
cmp
aam
aam
movb
test
int
fucomip
jmp
cmp
sarb
cli
fcmovb
and
rcr
incl
iret
iret
incb
lock
ss
lret
cmp
aaa
fdivr
iret
cli
rcl
hlt
jecxz
enter
sar
jmp
xor
iret
shl
fcmovne
cmc
jmp
cli
cmc
and
ret
fxch
in
cmc
loopne
lret
lret
in
xchg
out
lret
enter
shl
std
ffree
in
mov
loop
cli
aad
incb
into
loope
lock
call
xor
test
clc
cmp
in
cmc
mov
out
fsubp
mov
cmc
repz
fcmovne
lret
jmp
cmp
orb
fsts
out
rol
out
xor
int
ror
in
aad
cmc
incl
aad
mov
mov
xchg
mov
orl
aaa
enter
test
icebp
cli
ffreep
mov
movl
out
div
aam
shlb
clc
add
jmp
int3
int
loope
sub
jp
out
inc
call
jle
in
jecxz
jmp
in
fst
in
cld
fcmove
out
in
std
leave
roll
lret
repnz
int3
sar
int
rol
test
out
repnz
sti
rclb
loope
sub
iret
lret
sar
enter
cmc
cmpl
lds
into
iret
cld
in
fdivr
sar
into
jecxz
fcmovb
repnz
aad
aam
hlt
stc
xchg
xlat
xchg
aam
sub
out
mov
icebp
in
xchg
clc
int3
in
in
enter
iret
cmp
jecxz
ffree
cmp
cmp
jmp
in
in
xchg
xorb
cmp
shl
xlat
lock
fsub
in
test
lea
xchg
mov
into
jmp
in
loope
aam
loop
cmp
call
fucomp
test
fimuls
lret
int3
sar
fldl
fsubrp
fdiv
in
cli
ljmp
ljmp
repz
xor
iret
ret
sar
std
jmp
in
test
lea
out
aam
leave
aas
in
cmc
aas
repnz
inc
aas
mov
addb
ror
iret
cmc
int3
icebp
in
shl
sub
out
cmc
out
test
rol
clc
lret
cli
sub
xchg
in
ljmp
fmulp
int
into
out
rol
adc
imul
lret
mov
mov
out
test
in
sti
vpsubd
leave
fsubp
iret
clc
icebp
jecxz
fld
and
clc
fcomip
sub
divl
clc
rol
leave
xlat
icebp
mul
cli
fsub
xlat
shr
stc
enter
and
jmp
rcl
div
fdivp
ret
xchg
stc
repnz
ljmp
orl
fidivrl
fnstcw
aad
mul
imul
call
fsub
rcr
xchg
mov
jecxz
aam
int3
sar
cmp
cmp
fdiv
ds
std
fcmovnb
rorl
lret
xchg
incb
call
out
ljmp
cld
mov
in
enter
lret
mov
fadd
shl
hlt
lret
std
cmp
into
xlat
in
vshufps
in
mov
shl
aam
in
in
movl
add
enter
fstp
int3
shl
scas
imul
pusha
jns
and
jg
fiaddl
jle
rcr
leave
div
cmp
out
test
ret
cli
cmp
jmp
mov
xor
fcmovnbe
aaa
call
roll
loopne
xchg
xchg
shl
ret
jmp
ljmp
cli
testb
mov
icebp
int
xor
stc
ljmp
not
fnstsw
shl
incl
out
std
cli
or
in
leave
in
jmp
into
clc
xor
flds
shl
xchg
or
lret
rorb
enter
cmc
icebp
fdivr
fmul
shl
cmp
stc
aam
stc
jmp
mov
int3
int3
xchg
xor
enter
ljmp
ret
out
in
xlat
mov
int3
into
in
divl
out
shl
cld
fcmovne
fdiv
adc
repz
loopne
addl
aad
sti
ds
out
faddp
out
fcom
icebp
call
in
fimuls
xchg
icebp
aam
loop
out
iret
jmp
jecxz
shl
dec
dec
in
incl
int
xor
aam
int
fucomp
std
cld
cld
out
test
lret
mov
call
test
in
cmp
fdecstp
repz
fucomip
repnz
adc
hlt
enter
std
fsub
out
jmp
xor
idiv
fscale
fdivs
lock
loopne
mul
hlt
test
out
nop
int3
in
repnz
xor
cmp
in
aaa
xor
ret
ffree
rol
aad
lret
int
lret
fsubp
xchg
jecxz
iret
repz
fstpt
shll
mul
aad
sti
sar
stc
loop
mov
shr
mov
clc
iret
sarb
icebp
aam
out
faddl
test
mov
loope
loope
repz
xchg
mov
iret
aad
lret
fcmovne
cmc
out
fcmovnbe
rcr
cmp
sarl
enter
ret
out
test
leave
jmp
cmp
les
call
iret
or
test
leave
xlat
rcr
jmp
roll
lret
in
xor
xchg
in
imul
jmp
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
hlt
out
not
in
lock
add
bnd
mov
xlat
ffree
mov
jmp
out
rcl
call
cmp
xlat
cli
sarl
fcompp
xchg
loop
jecxz
sti
xchg
in
iret
aad
div
shlb
iret
cld
repnz
repnz
repnz
cld
stc
testb
cld
xchg
hlt
in
aam
repz
lds
cli
aaa
aam
sti
roll
xchg
out
int
fmulp
xchg
lea
aaa
test
aad
cmpl
fcomip
stc
fildl
loopne
mov
shl
enter
lock
lret
neg
shl
clc
in
aas
out
out
loopne
fdivp
cs
shr
xlat
fmul
cmc
ds
icebp
test
enter
int3
xchg
mov
xor
imul
cmp
loop
out
and
clc
clc
in
xchg
xchg
enter
jmp
int
xor
enter
cmc
or
loop
rcr
leave
loop
out
vfrczpd
fsubp
ss
jmp
sarl
cld
fstpt
rolb
shl
sti
int3
flds
xchg
xor
idivb
out
sti
loop
stc
in
loop
enter
leave
fadd
lea
filds
stc
cmc
icebp
aad
in
test
rcr
xchg
in
lret
mov
xchg
repnz
lock
fcomp
lret
shl
std
repnz
cmp
les
loop
in
mov
shll
fmul
call
fcom
sarl
ret
cli
test
mov
sub
shr
cmc
shll
divb
xor
sar
cld
aam
idiv
sub
mov
in
mov
in
icebp
test
lret
cmp
clc
ss
ss
shl
in
sbb
loop
mov
loop
ror
into
mov
int
fcmovbe
cmp
in
into
cmp
aam
aam
inc
mov
ljmp
xchg
shl
fxch
leave
cmp
ds
ds
shl
mov
ffree
into
std
test
xchg
ss
out
ss
xor
cld
sbb
stc
loop
testl
pop
lock
cmp
mov
jbe
jmp
lret
ret
in
call
rclb
fiaddl
jle
jmp
out
jecxz
hlt
repnz
xor
shl
cli
clc
call
jecxz
loope
mov
out
out
call
out
fcomi
not
int
out
cld
mov
call
out
out
test
clc
cmp
enter
cli
fmulp
cmpl
roll
inc
cli
xlat
lea
hlt
out
rcl
xor
cmp
sti
lds
xchg
fucom
jmp
xchg
sar
out
aad
loopne
icebp
lret
in
cmp
cmp
orb
test
repnz
aam
sub
aad
int3
sbb
xlat
rol
shl
cmc
orb
xchg
rol
xor
repnz
enter
into
cmp
clc
cmp
rol
in
addb
in
xor
cmp
vpxor
ror
iret
in
aas
imul
aad
ret
xlat
in
xchg
rcl
ret
out
out
in
neg
aas
hlt
in
fcmovnu
loopne
fdiv
out
out
clc
fmuls
ror
imul
icebp
leave
xor
jmp
cmc
fistpll
cmp
vpmullw
lret
cmc
loope
aaa
in
cli
into
stc
lock
in
fidivrs
cmp
int
std
repz
stc
roll
ljmp
cmp
xor
icebp
int3
in
repnz
std
rcl
clc
bnd
mov
xlat
out
lret
int
test
out
nop
xlat
in
aad
clc
aam
in
cmp
int3
loope
out
test
addl
iret
leave
shlb
lret
out
repnz
aad
sti
jecxz
repnz
fsubr
fmul
loopne
ljmp
int3
fld
fmul
aam
out
mul
xchg
shl
aad
test
sti
mov
ljmp
xor
aaa
fadd
in
sarb
ret
rcr
in
icebp
sti
lret
call
xlat
cmc
xlat
cmp
std
fucom
iret
neg
test
fiadds
std
in
cs
call
aaa
imul
sarb
shr
and
mov
in
loopne
repz
fmul
out
sti
flds
cmp
loope
call
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
test
or
bnd
fiaddl
jle
xlat
dec
into
out
jmp
cli
fcomp
aas
loopne
jecxz
cmp
div
in
test
repz
test
rcl
int
out
cli
fcmovnbe
cmp
clc
fst
ret
lds
ret
fldl
xchg
jmp
iret
lret
aas
lock
ret
out
rol
xlat
ffreep
call
icebp
out
jecxz
fcmovnbe
cmp
fxch
shl
iret
adc
iret
out
loop
ret
out
into
std
lret
fst
mov
sar
out
in
jmp
in
out
loope
loope
div
out
mov
xchg
xchg
cs
shrb
xor
std
cli
cmc
ror
test
shl
rol
fsub
loope
sbb
lret
in
shr
loopne
jmp
fsub
out
and
xor
in
aam
fisttps
addb
aaa
cli
xor
cli
in
int
repz
test
cld
jecxz
nop
aam
xchg
icebp
icebp
sti
not
lret
cli
leave
aas
aaa
aam
into
adc
aad
neg
fmul
out
xchg
in
nop
hlt
sub
call
iret
hlt
cld
loop,pt
std
out
rcr
out
stc
loope
fsqrt
lock
int
ljmp
cmp
repz
rcr
cmp
out
fsubr
xchg
lret
xchg
ror
shr
shr
xor
out
das
leave
fmulp
in
repnz
ret
fstp
xlat
ljmp
shl
icebp
ljmp
out
aam
cmp
sti
aas
ret
sti
test
sar
fcmovb
lret
xchg
out
jmp
jmp
enter
xor
fidivrs
sar
in
rcl
stc
repz
xchg
jmp
xor
iret
sti
cmp
cmp
in
ds
call
orl
div
cmc
repz
rcl
aad
cld
icebp
cli
xor
stc
sub
movb
repz
jmp
out
ror
movb
cli
cmp
xchg
loopne
out
test
mov
ljmp
aaa
out
icebp
sarl
fdivr
shl
repnz
dec
in
mov
in
movl
clc
rolb
cmp
mov
jmp
fcom
mov
rcr
xlat
sub
inc
mov
add
jmp
sti
mov
loope
xchg
mov
stc
sub
vpmulhw
cmp
leave
shl
aad
cmc
call
lret
fsubp
out
in
fbstp
rol
lock
hlt
int3
sti
fistpll
std
cmp
div
fisttpl
test
lret
icebp
hlt
call
out
cli
cmc
int3
lret
cmp
sti
fnstcw
clc
fcmovnu
lret
into
test
shl
into
iret
repz
fdiv
out
xlat
in
rol
mov
xchg
in
mov
aam
xchg
ret
enter
aaa
shl
aaa
repnz
fcmovbe
loopne
sub
lock
out
xchg
icebp
in
das
cmc
cli
aaa
aad
xlat
xor
cmp
loop
jecxz
jmp
enter
dec
icebp
popl
out
cli
xor
fcomi
rcr
fnstcw
loop
enter
iret
loopne
xchg
adc
shl
leave
lret
sar
faddp
out
mov
in
loop
lret
loope
lock
mov
aas
repz
cmp
ds
cmp
out
test
shl
fmulp
out
das
int
ss
fmul
ret
out
neg
rol
faddl
dec
mov
in
cmp
xor
shl
cmp
rcl
xchg
aad
jmp
int
adc
aad
repz
hlt
std
fcmovnu
out
fcomi
clc
sar
loope
in
leave
out
std
mov
rolb
neg
out
sti
ljmp
fprem
icebp
out
neg
testl
in
mul
in
xor
cmp
imul
fmul
out
out
in
roll
out
icebp
call
jecxz
int
fcmovne
std
ret
fcompp
repnz
fdivp
fsub
or
out
ljmp
icebp
into
rcr
call
cmp
ret
fadd
idiv
ret
or
shl
enter
hlt
into
iret
idivb
fcmovnbe
aas
cmp
out
cld
fsub
cmp
xchg
out
loope
cmc
xor
shl
cmc
cmp
aam
in
out
mov
shl
into
xchg
in
imul
xor
leave
cmc
std
lret
enter
cmp
clc
fdivl
shr
je
add
lret
xlat
aas
rcr
int
in
push
notb
aaa
outsb
idivb
fiaddl
jle
fcmovbe
out
sar
mov
sub
mov
cli
ret
call
xor
jecxz
aas
fdivrp
lret
test
ror
das
aam
cmp
shl
cmp
sar
cmp
sar
loope
hlt
aad
out
sti
xchg
xchg
div
repnz
int3
rcr
fdivrp
fcos
divl
adc
mov
jmp
mov
adc
out
hlt
in
cmp
cmp
lock
ffree
sar
call
fiaddl
mov
out
fdivr
lret
cld
cld
aaa
sar
ljmp
cmp
fsubp
ret
out
cmp
loope
in
out
iret
jmp
iret
ss
cmpb
icebp
out
ffree
aad
push
mov
lret
jecxz
cmc
aam
aam
leave
ljmp
ror
in
ret
fcmovbe
mov
enter
int3
jmp
lock
fidivrs
jmp
shl
fsubr
hlt
cmp
std
fcmovnb
call
jecxz
in
int3
loope
xor
divb
fcomi
iret
ljmp
hlt
rcr
clc
xlat
loop
in
std
mov
mov
out
repnz
stc
out
cmp
xlat
dec
shl
xor
repz
ljmp
in
leave
cmp
out
repz
hlt
in
in
shr
mov
test
repz
cmc
sub
cmp
cli
aaa
repnz
fucom
lock
and
in
mov
xlat
loop
in
out
into
ljmp
out
repnz
cmp
in
test
lret
mov
test
xor
in
int3
in
into
fdiv
cmp
ror
mov
fsubrp
incb
lock
aam
ret
out
rcl
ljmp
div
test
xchg
cli
mov
in
xor
out
out
cmp
in
out
sar
mov
in
int
loope
lock
vcvttsd2si
fnstcw
rcr
fsub
in
in
mov
mov
fdivr
cld
mov
sar
mov
xor
lret
jmp
jmp
xor
xor
xchg
loop
ret
xlat
mov
jmp
sub
xor
out
and
shr
test
je
add
lret
fst
mov
addr16
or
stc
jg
fiaddl
jle
test
cmp
ret
enter
test
loopne
jmp
in
lret
xlat
xor
repz
xor
int
sbb
sti
ds
into
fucomip
mov
test
hlt
stc
stc
ss
cld
fdivrl
test
cmpl
fabs
fucom
lock
out
in
enter
ds
imul
fsubr
aam
ffreep
std
rcl
neg
lret
into
nop
shr
xchg
hlt
out
xor
out
int3
icebp
enter
in
idivl
xchg
fimull
or
out
iret
repz
xchg
mov
sar
in
idivb
aad
aaa
sarl
sti
out
cmp
out
jecxz
in
or
cld
into
fdivp
xor
iret
ret
cli
out
ljmp
repz
cmc
fmuls
in
aad
xor
repnz
cmp
iret
cli
ret
test
out
lret
add
aam
shlb
lock
int
sti
cmc
in
aam
in
out
test
enter
add
lret
or
jecxz
lret
in
cmp
shl
jecxz
rcr
jmp
out
loope
fdivp
test
out
test
shlb
clc
out
std
xor
int3
cld
lock
cmpl
fdivrp
mov
cld
sub
nop
xchg
out
aad
call
aam
lret
fdivr
xbegin
test
fldl
in
hlt
shrl
out
mul
std
cmp
sbb
loope
test
xlat
cli
idiv
aad
loope
out
leave
xchg
ljmp
xor
aaa
shr
not
fnstsw
xlat
fiadds
loope
rorb
jmp
cmp
in
in
sarb
flds
mov
aad
and
fisttpl
shl
in
out
repnz
into
xor
fidivrl
adc
loopne
fsub
out
fisttpl
cmc
out
clc
cmp
out
cld
ss
out
lock
push
movb
loop
ret
out
lret
xor
call
hlt
test
mov
mov
in
xchg
lret
xor
cmp
cld
leave
jmp
cmc
in
roll
mov
nop
decb
lock
icebp
repz
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
negb
cmpsb
sti
jg
fiaddl
jle
xor
hlt
int3
repz
fsincos
aam
fsubr
sbb
xchg
ret
xor
in
ror
xlat
fucomip
cli
repnz
incb
in
cld
iret
in
loop
nop
in
fsubrp
clc
fcmovb
imul
fdivr
xor
fucom
in
xchg
sar
aad
fcmovu
into
fsubr
loopne
and
xchg
clc
xor
xlat
cmp
cmp
loope
rcr
xor
jmp
loope
ljmp
div
clc
in
xor
lret
imul
aaa
repz
fstpt
addl
out
lea
ret
cmp
lock
fmul
sti
iret
loopne
out
out
jecxz
cmp
xor
sti
out
jmp
aaa
repz
call
aam
cmp
icebp
hlt
cmp
in
aam
fisttps
mov
cli
lret
ror
in
int
aas
in
leave
xchg
clc
orb
repz
ret
cmp
in
in
clc
xor
shl
fcomi
aam
mov
cld
mov
rcll
sub
cmp
loop
cmp
fildl
xlat
out
orb
cmp
lret
cld
in
iret
aas
cmp
lock
or
rol
fucomp
into
sti
mov
lea
xor
aad
cmc
cmc
repnz
hlt
into
fildl
mov
ret
fstl
ss
xor
stc
icebp
cmp
ror
test
loope,pt
incb
loopne
in
rcl
xchg
cmc
xchg
xlat
in
aad
jmp
fcmove
repnz
fcmovne
std
sti
aas
xlat
add
mov
mov
in
out
in
rorb
in
fmul
aaa
out
sti
out
sarb
out
ret
aad
jmp
call
into
shlb
cmp
cmp
jmp
std
stc
call
aam
xchg
leave
in
sub
shlb
repz
cmp
std
xor
jmp
out
out
lock
lock
in
mul
repz
iret
ds
loop
repz
clc
adc
leave
xchg
mov
test
xchg
loop
xchg
aad
ret
xlat
repz
test
into
testb
clc
incl
adcb
mov
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
dec
mov
lret
jg
fiaddl
jle
clc
clc
lds
call
int
jecxz
int3
adc
loope
out
jecxz
loope
hlt
fdiv
xor
ror
bnd
aas
test
mov
jecxz
out
cld
clc
lret
repnz
in
icebp
in
xor
ret
aaa
sti
int3
ds
cmp
shl
in
stc
jmp
mov
xchg
mov
loop
cmc
out
xor
lds
clc
aam
repz
loopne
fadds
fdivr
jmp
ljmp
shl
in
ljmp
cmp
cmp
xchg
dec
mov
sub
xor
jmp
addb
loop
or
orl
into
xor
out
stc
loope
iret
jmp
sti
fdivr
loop
fmull
iret
cli
repnz
fists
iret
enter
leave
loop
in
inc
cmp
sti
inc
stc
xlat
lret
in
out
in
test
sar
in
out
loope
lret
in
repnz
fiaddl
xchg
leave
lret
shl
xor
int3
ljmp
neg
ds
aad
aad
decb
out
xchg
ror
xor
out
cmp
fsub
ljmp
sarb
fsubr
jmp
icebp
addl
out
shr
aad
ffree
hlt
fadds
dec
loopne
enter
xchg
loopne
decb
jmp
jmp
loopne
out
hlt
cli
cmp
fcmovbe
fsubr
xchg
loop
ror
fucomi
in
adcb
out
stc
xlat
enter
jecxz
fsubp
sti
shl
ret
lret
jmp
lock
xchg
in
rcr
sti
xor
hlt
cmp
cld
xor
mov
rorl
jmp
out
nop
adcl
repz
std
jmp
out
out
cmp
xchg
hlt
enter
nop
mov
xor
repnz
aam
call
xlat
add
loopne
call
int
into
fsts
cmc
enter
fscale
xor
sti
ret
aam
mov
repz
fiaddl
loope
lock
icebp
xlat
out
cli
hlt
repz
cmp
xlat
ret
sti
mov
testb
jecxz
mov
hlt
jmp
leave
aas
ret
vpcmpeqw
adc
out
iret
fiadds
jle
in
out
ror
leave
cmp
sti
loope
out
jmp
nop
xchg
icebp
std
loopne
into
test
loope
hlt
icebp
hlt
cmp
cmp
lds
test
xchg
test
icebp
lret
int3
xor
aad
shl
dec
aam
cli
repz
loop
leave
fmulp
in
call
mov
cmp
cmp
repnz
imul
stc
out
std
cmp
in
ror
loope
int3
loop
lret
xchg
enter
mov
idiv
repz
cmp
rcr
call
xchg
rorl
clc
rcl
cmp
in
cli
shl
roll
lret
fldln2
loop
mov
shlb
aam
icebp
cmp
aaa
cmp
not
fprem1
enter
in
leave
and
adc
in
in
lret
fdiv
ds
aad
fadds
sbb
test
jmp
repz
out
leave
clc
out
lock
into
xorb
xchg
mov
mov
sbb
shlb
aad
fst
fidivrl
incb
ds
clc
out
std
lret
loop
sti
fdivrp
jmp
xchg
ljmp
rcr
fdivrp
jecxz
fdivrl
fdivr
jmp
xlat
lock
loopne
repnz
out
sub
cli
xor
repnz
not
jecxz
test
shl
test
ret
loop
out
iret
hlt
xchg
ljmp
in
out
jecxz
cmp
aam
out
loopne
xor
jecxz
out
xchg
test
roll
ljmp
dec
fsub
in
out
rcl
xchg
fcmovne
sbb
in
lock
call
cmc
cmc
rcr
repnz
cmp
jecxz
loop
out
cld
fisttpl
cmc
jmp
clc
jecxz
out
out
repnz
filds
xchg
imul
hlt
ret
out
loop
in
loopne
mov
divb
stc
sti
leave
iret
sar
sar
xor
ret
test
xchg
shr
hlt
stc
sbb
fsubrp
lret
nop
xchg
in
sub
sarb
shl
fdiv
fidivrs
cmp
loope
xchg
jmp
jmp
into
test
xchg
lret
ret
xor
lret
fucomi
fsub
out
cld
lret
loop
xchg
xor
jmp
int3
ret
lret
ret
int
int3
int
adc
xor
cmpb
add
fistl
sub
rcl
fsubrp
std
cmp
ret
xchg
call
stc
repnz
repz
loop
jmp
lret
aaa
idivb
int
xor
into
loopne
div
cmc
hlt
mov
fmul
decl
iret
xchg
xor
out
cld
xor
out
lret
imul
icebp
cmp
rolb
in
cli
shr
xchg
hlt
cs
enter
fdiv
cmp
rcl
out
loopne
cmp
cmc
decb
cld
bnd
out
hlt
xor
in
cld
and
leave
add
out
shl
cmc
jmp
repz
test
cmp
aam
shl
ret
cli
out
loop
ficoms
not
out
xor
xor
cmp
int3
loope
iret
loop
loope
out
cli
out
jmp
xchg
int
icebp
int
das
fmul
cmp
icebp
notrack
shl
ffree
icebp
addb
fneni(8087
sar
fsub
mov
sub
into
stc
hlt
fcmovb
fdivs
in
shl
cli
mov
jmp
in
test
sbb
xchg
jmp
stc
vpmovmskb
testl
fcomip
ljmp
enter
int3
sti
cmp
aam
loopne
not
and
ret
mov
mov
mov
ljmp
das
ror
xor
cmp
lock
loopne
sbb
mov
mov
xor
cmc
lock
int
hlt
iret
aas
loopne
aad
into
out
xchg
mov
out
jmp
enter
stc
cld
clc
sti
idiv
cmp
cld
loop
repnz
aam
fadds
xchg
jmp
xor
cmp
cmc
out
leave
lock
rol
cmp
cmpl
mov
testb
icebp
test
jmp
lret
rol
loope
ds
fsubr
in
clc
cmc
mov
jecxz
sub
repnz
stc
das
cmc
call
div
int3
cld
ret
ret
test
out
cmp
mov
in
lret
sti
shl
xlat
cmp
ds
stc
in
aad
clc
addb
xchg
fsubrp
out
das
in
aaa
cmp
iret
aad
cld
test
rcl
jecxz
jmp
in
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
nop
fisttpl
ljmp
shr
shl
rcr
cmp
repz
fcmovnb
in
mov
fmulp
jecxz
int3
rolb
xor
lret
hlt
jmp
out
loope
cmp
sti
cmp
cld
ror
in
rolb
jecxz
aad
int
in
lret
out
cld
cmp
clc
xchg
mov
mov
ret
call
ljmp
stc
cmp
repnz
cmp
clc
out
std
ljmp
ljmp
clc
cmp
cmpl
aas
adc
cld
lret
and
out
icebp
addb
icebp
in
rcr
out
xor
aas
in
jecxz
ret
mov
in
fxch
mov
in
shl
cmp
cli
out
ljmp
lock
sti
cmp
xchg
xor
aam
shr
fcom
ljmp
aad
shl
sar
incb
fucomp
loope
sti
sar
rcl
lret
cmp
fidivrl
in
jmp
out
rcr
test
in
dec
incl
fimuls
xor
fmulp
fucom
cld
loope
iret
cmp
fcmovu
fsubr
out
lret
cld
out
out
xchg
clc
cmp
lret
ds
fdivp
fmul
mov
mov
div
lds
aam
xor
repz
enter
out
in
lock
stc
icebp
cli
orl
lret
lock
loop
ret
in
repnz
fucomi
ljmp
enter
inc
xor
cmc
mul
fiadds
stc
iret
rorl
in
ffreep
mov
addb
in
fcmovu
jmp
cmpb
test
xchg
test
std
nop
fmull
xchg
cmc
cli
rcr
in
out
lock
lret
incb
ljmp
loope
call
out
sub
loopne
xor
add
loop
out
in
iret
lret
repz
xchg
loop
into
rcr
aam
repnz
aad
fsubp
out
ds
lds
in
adcb
aad
jecxz
clc
not
clc
fninit
fdivr
neg
cmp
xchg
pop
xchg
jb
add
call
add
into
aam
fmul
dec
cmp
mov
xchg
fiaddl
jle
repz
mov
int3
in
int3
xchg
out
xchg
div
cmp
fcom
clc
iret
clc
fdivl
sti
shl
loopne
iret
rcr
loope
filds
xor
aaa
aad
leave
into
call
sti
out
cmp
aas
cmp
fucomip
clc
imul
fsts
out
cmp
sar
xlat
into
ljmp
shl
sar
loope
mov
in
cli
call
into
jmp
cmp
sarl
fcmovnu
cli
std
movl
jmp
cmp
sar
in
int
std
sub
cmc
rol
loope
mov
fninit
lock
out
idiv
cmc
lret
out
out
ss
loope
fcomip
cld
xchg
call
xchg
div
rol
aam
fadd
int
fdivp
incb
les
in
xchg
xchg
mov
mul
loopne
test
repnz
ret
in
fiadds
inc
jmp
rcll
cli
aad
std
cmc
addl
sti
test
rcr
sub
in
hlt
into
iret
clc
out
int
out
cmp
repz
mov
iret
roll
clc
fstpt
test
loope
sarl
test
incb
or
ss
stc
out
jmp
int3
int3
pushl
rcr
cmc
cmc
lret
lret
mov
into
jecxz
cmp
aad
iret
rcr
std
cmp
mov
mov
jmp
adc
cli
in
stc
into
icebp
add
fcmovbe
fcmovu
decb
test
out
repz
lret
in
iret
stc
sti
cmp
imul
adc
fcomi
cmp
in
ret
in
adcb
in
xlat
aam
icebp
in
sbb
loop
into
xlat
xor
stc
mov
cli
xchg
mov
jmp
repnz
fcmovne
cmp
fcmovnu
cld
add
xchg
xchg
xchg
sub
mov
in
mov
cmp
cld
fsub
out
cmp
cld
in
cli
ffree
rcr
call
aaa
loope
jmp
fdiv
stc
std
out
loopne
clc
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
dec
mov
fiaddl
jle
repz
hlt
in
xchg
leave
ret
repnz
loop
xlat
xlat
xlat
fcmovb
aaa
icebp
leave
aam
aad
in
stc
aad
loopne
dec
sti
fcmovb
mov
enter
into
loope
shr
leave
jmp
out
aaa
cmp
repz
addl
loop
loope
xchg
cmc
enter
lret
out
leave
into
ds
in
shr
ds
test
ret
fisttpl
iret
out
xchg
loop
xor
into
lret
lock
into
xor
xlat
in
out
not
mov
out
jecxz
jmp
mov
loope
call
repnz
lock
mul
test
fistpll
mov
hlt
fxch
lret
fsubp
nop
rorb
xor
ljmp
loop
cmp
aad
mov
loope
xchg
fisttpl
repz
cmp
enter
push
lock
std
std
xlat
les
lret
test
out
lret
stc
clc
add
push
sar
fucom
lds
fcmovnu
in
std
repz
xlat
fdivs
stc
fsub
jmp
fdiv
shl
cli
fcmovnu
mov
in
shl
in
jmp
cld
cmp
hlt
idiv
fadd
repnz
test
lret
ljmp
ror
sarb
xor
enter
rcr
filds
sti
in
enter
shl
jmp
int3
call
leave
repnz
rcr
shl
std
fiaddl
fdiv
pushl
cmc
in
sti
das
fdivr
xlat
sar
lock
rcl
ljmp
jmp
ljmp
hlt
sti
std
xor
std
aad
aam
shl
leave
clc
std
out
test
loopne
out
fsubrp
fmul
cmp
enter
lret
hlt
imul
aad
out
out
in
addb
repnz
call
ljmp
in
fsubp
ret
roll
clc
test
adcl
das
rol
sti
cmp
hlt
in
in
xchg
xchg
in
std
in
mov
xor
jmp
sti
leave
lret
in
ds
ds
sti
sti
sti
aad
std
in
adcl
lret
sar
rcr
hlt
not
cmp
add
jmp
ror
rcl
stos
sub
insl
dec
cli
loop
sub
jle
sti
fcmovnu
iret
enter
fdivr
in
in
int3
mov
xchg
shl
in
cmp
aaa
in
loopne
aad
cmp
into
fdivrs
mov
out
sub
in
jecxz
xchg
lock
enter
aaa
in
iret
cmp
fcmovnbe
out
in
xlat
out
xlat
cmp
in
clc
stc
sti
xchg
lock
iret
out
divl
int3
xbegin
cmp
sarb
cmp
aam
mov
shr
leave
out
xchg
sbb
in
cli
fidivl
lret
rcl
jmp
vpaddd
cli
mov
int3
lock
shll
shr
enter
xor
iret
fxch
ds
in
jecxz
fadd
xchg
loope
fucomip
leave
in
in
aam
in
ss
in
cmp
lret
cmp
xlat
loope,pt
aam
out
cli
fsubp
addb
sti
cmp
lret
int
out
rcr
loopne
in
loopne
xlat
jmp
lock
xchg
xchg
cs
sti
in
cmc
cmp
cmc
repnz
aaa
add
mov
sti
loope
int
out
hlt
rcl
xor
ror
fdivrl
neg
xor
in
call
mov
fsubrp
sub
cmp
aam
fidivrl
ljmp
ret
jecxz
cld
lret
and
fdivp
into
jmp
jmp
repz
xor
loopne
fstp
ret
xlat
xlat
lds
sti
rcr
in
aad
fxch
call
xlat
cmpb
shl
filds
xlat
ljmp
loopne
jmp
out
shl
xor
rcl
repz
ds
lret
out
lret
call
fcmovbe
cld
cmc
sarb
ret
flds
out
xchg
out
mov
ljmp
fcomip
fidivrs
repz
cmc
jmp
xchg
jecxz
xchg
loop
out
rcl
xor
ljmp
cmp
test
test
jmp
fsts
rcl
cmc
lock
cmc
cmc
sti
cli
cmc
fiaddl
enter
mov
aam
rcl
ss
xor
loop
repz
ljmp
xchg
repz
mov
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
out
in
stc
shl
mov
sti
jmp
loopne
test
int3
shl
das
loop
cmc
hlt
out
jmp
cmp
in
cmp
cmp
out
dec
leave
fmull
in
cmp
xor
idiv
cmp
hlt
fsub
cmp
fdivrp
in
mov
out
addl
enter
int3
iret
std
aas
idiv
sbb
out
mov
or
lea
aad
sti
sti
int
out
xor
vshufps
jmp
int
xchg
out
fdiv
in
ljmp
xor
cmp
hlt
rol
fcomip
in
lds
flds
or
stc
int3
div
lret
leave
cmp
lock
shl
loopne
test
test
fldl
ret
aaa
xor
icebp
sti
int
xor
mov
lret
loopne
fstl
out
stc
ljmp
shl
ret
test
fdivrp
int
lock
testb
out
xor
fneni(8087
icebp
loopne
in
test
call
addl
fcomi
out
into
ror
shl
out
fneni(8087
hlt
testb
fisttpll
aaa
sti
out
call
out
cmp
mov
fdivr
out
cmp
jecxz
lret
aam
in
in
cmc
lret
fst
rcl
test
mov
mov
jmp
idiv
enter
cmp
call
idivb
aam
ret
flds
in
aam
nop
ss
leave
ror
iret
xor
stc
call
repnz
aam
cld
hlt
addl
cmpl
loope
jecxz
xor
ds
xor
aas
fdivr
cli
cli
filds
lock
loop
roll
hlt
fstpt
int3
sbb
aad
aas
ret
jecxz
loopne
xchg
lret
jecxz
lret
lret
xor
idivl
aam
lret
test
jecxz
fyl2x
fldlg2
aad
int3
rcr
orb
fidivrl
aad
fcmovu
lret
int3
loope
iret
fstp
enter
in
std
out
mov
ror
imul
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
mov
sbb
nop
jg
fiaddl
jle
test
aaa
ljmp
fnstsw
std
in
mov
iret
out
nop
shl
loope
stc
cmp
cmp
ror
in
iret
cli
fcmovb
mov
xchg
ret
test
rcl
not
fdivs
ss
fdiv
xor
loope
xchg
fsubr
mov
mov
adc
int
ljmp
aas
sbb
shl
addb
sti
fldl
cmc
xor
cmc
stc
repnz
stc
fxch
fdivr
rol
cld
into
ret
out
loope
fiaddl
nop
cmc
shlb
fiaddl
div
cli
cmc
enter
int3
xchg
in
fsubrp
repz
in
in
out
fcmove
repz
test
lds
test
decb
xor
cli
repz
cli
aas
incb
cmp
lret
out
call
into
jmp
int
aaa
xor
aad
cmp
fsubrp
jmp
loop
fsin
int3
fimuls
loopne
xchg
out
xor
in
in
cmc
int3
jmp
fdivs
cld
lock
loopne
sub
mov
xchg
xchg
jecxz
hlt
fsub
int3
ss
xor
hlt
stc
sti
repnz
fiadds
fucomp
filds
xor
ror
lret
enter
into
int
rolb
loopne
jmp
iret
sti
call
xor
out
not
jmp
sarl
out
std
clc
mul
fsubp
loopne
in
and
ret
cs
jmp
aaa
ds
std
int
xchg
out
in
fadd
faddp
mov
mov
cmc
icebp
ret
idiv
aam
cli
lock
rolb
test
shl
aad
ret
jmp
aam
iret
in
ret
ret
testb
lret
enter
aam
cmp
hlt
cld
cmp
icebp
sbb
les
in
leave
into
mov
jmp
xchg
out
aad
repz
out
cli
fdiv
div
in
xlat
aad
rolb
mov
std
in
xchg
enter
enter
out
ss
fstp
incl
movl
xor
jmp
enter
fcmovne
fst
or
pop
and
lock
jg
fiaddl
jle
das
les
cli
lock
fidivl
loopne
aam
aad
lds
ljmp
mov
idiv
ret
hlt
ret
in
fstp
loop
loopne
jmp
xchg
in
out
xor
lock
out
out
std
leave
cmp
std
addl
sti
loopne
cli
xchg
xchg
out
cmp
lret
stc
sti
fdivrs
in
push
in
in
loopne
std
jmp
in
loop
hlt
icebp
test
lock
xor
hlt
in
cmp
loopne
mov
fcmovu
cli
out
out
decl
hlt
aad
repz
aad
ret
fidivrs
in
orb
test
jmp
lret
in
sti
sbb
fcomp
in
rorl
lea
shr
int3
out
ljmp
cmp
ret
fptan
repnz
div
cmp
mov
out
iret
xor
rcr
std
aad
clc
adc
cmp
fisttpll
lret
mov
lock
in
out
call
ds
hlt
test
stc
fstp
leave
cmpb
jmp
ljmp
leave
iret
cmp
aam
aas
fcmovbe
fdivr
out
lret
in
iret
cmp
jmp
ss
fsubr
in
fnsave
clc
filds
jecxz
loope
test
jmp
lret
mov
rcl
in
iret
fucomi
cmp
xlat
int3
in
sar
rcr
lds
mov
into
int
out
rcll
shr
lret
cmp
cld
lock
in
icebp
ret
cld
shl
xchg
fcomp
xchg
stc
xchg
orl
aad
xor
into
xor
int3
fstp
test
fildl
loopne
xchg
icebp
loopne
das
in
ror
lock
xlat
out
fcmovb
cmp
rol
fucom
decl
in
loope
ror
std
cmp
clc
fdiv
aas
cmc
shr
jmp
mov
mov
loope
loopne
rolb
fcom
cli
cli
iret
cmp
xor
hlt
fiaddl
addl
repnz
fstl
cmp
out
into
aaa
sti
clc
jmp
mul
int
iret
rcl
xchg
mul
clc
cli
enter
stc
imul
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
ss
jle
fisttps
out
cli
xlat
fnstcw
stc
rcl
cmp
int
repz
mov
xchg
in
rol
cmc
ljmp
into
stc
loope
cmc
repnz
xchg
nop
in
adcl
loopne
cmp
rcr
cmp
mov
in
call
xor
sarl
xor
cmp
rcr
fdivrp
repz
aad
in
loope
clc
mov
repnz
rcl
cmp
in
cmp
rcr
ror
les
cmc
xchg
fiaddl
mov
fimuls
jmp
shl
repz
rcr
rolb
out
dec
mov
ljmp
repnz
clc
ss
lret
cmp
cli
out
std
cmc
ret
ljmp
ret
xor
aad
icebp
cli
add
in
mov
int3
fcomp
iret
out
mov
sub
fsubr
int3
cmp
repz
shl
loope
repnz
aad
jecxz
mov
ret
in
loopne
xor
jmp
int3
divl
cmp
in
cmp
cmp
add
sti
ret
loopne
fcomi
enter
in
in
out
cmp
into
sti
xor
fpatan
fcomip
cld
shl
out
enter
jmp
loop
in
das
aaa
out
fcmovbe
clc
aas
repnz
fdiv
loopne
mov
xchg
loopne
lret
into
xchg
in
xlat
shl
int3
enter
aaa
aas
fucomp
sti
shl
addb
lea
xor
movl
xlat
aad
fscale
out
int
out
mov
adc
out
ret
out
fnstenv
call
ss
xchg
sbb
in
add
std
popl
ljmp
fmul
lock
div
loopne
ds
or
lea
in
in
repnz
call
ret
fnstsw
aad
std
clc
lret
and
ljmp
xor
cmp
cmp
aas
cmp
out
loope
out
and
test
iret
fst
aad
cmc
cmc
repz
ds
out
xchg
enter
mov
add
cli
jbe
mov
mov
jmp
rcl
into
test
mov
push
lret
pop
sub
jg
fiaddl
jle
mov
out
lret
fmulp
orb
cmp
call
lock
rcl
fcom
xchg
out
in
cld
mov
adcb
xor
cmc
cmp
loop
test
in
cmc
fadds
out
iret
repnz
mov
aam
xor
sti
out
xor
dec
neg
jecxz
out
sti
fsubp
jmp
mul
mov
repz
loope
out
in
leave
clc
lret
out
inc
cmp
repz
cli
test
xchg
shl
out
sub
jmp
shr
std
cmp
clc
fdivrp
xlat
mov
in
mov
xacquire
divl
rcr
aaa
jmp
imul
aas
ret
in
inc
fucomip
mov
in
test
in
xor
out
shl
shr
std
cmp
out
cmp
clc
jmp
std
push
mov
lds
sub
icebp
mov
cmp
lret
ret
imul
ds
icebp
aam
repz
ret
cli
ljmp
jecxz
into
in
fcmovbe
repnz
sbb
hlt
call
xchg
in
decl
in
in
in
in
out
stc
lret
in
int3
stc
rol
lock
loop
xchg
xchg
repz
mov
aaa
xlat
cli
xor
hlt
icebp
shl
cmp
addl
flds
hlt
xchg
xchg
loopne
aad
fst
int3
fucom
shl
icebp
les
fcmovnb
jmp
shl
in
and
rcl
xlat
xor
xlat
xor
leave
sar
shl
add
mov
xchg
fsubp
mov
mov
into
cmp
shlb
shr
fcmovnu
fadd
clc
cmp
into
fdivp
ret
fildl
in
mov
lret
test
cmp
cmp
aaa
lock
loope
cli
std
ss
fdivr
stc
in
fcmovu
fsubp
out
out
test
jmp
call
aad
rol
stc
sub
xchg
cli
fimuls
lock
out
shl
enter
cmp
icebp
les
lret
fucomip
xchg
out
out
cmc
ror
enter
fmulp
rcl
ror
flds
ret
in
std
test
ljmp
hlt
in
xor
aaa
aas
cli
int3
jecxz
add
xor
add
imul
mov
xor
jmp
rcl
leave
int
aad
or
out
sub
jg
fiaddl
jle
jecxz
mov
lret
iret
xor
in
lret
xchg
lock
xor
cmp
cli
rcr
loopne
rcr
fmul
out
enter
repnz
in
rol
shl
cmc
repnz
cmp
fdiv
aam
or
mov
dec
rorb
in
cmp
stc
ljmp
loopne
sar
xchg
cld
dec
ror
xlat
clc
icebp
icebp
aam
fdiv
cmp
ret
fadd
enter
fcmovbe
mov
stc
loop
lock
cmp
xor
int3
int3
rcr
cld
faddl
in
fimull
int3
out
jmp
aad
fmulp
int3
fdivr
lock
ret
std
out
ljmp
test
mov
lret
xor
repnz
neg
aad
std
xlat
shl
roll
xlat
mov
iret
out
shl
fisubrl
fidivrl
clc
loope
roll
neg
int
nop
fucomip
loop
mov
stc
ret
fucomi
int3
cmc
idivb
sar
jecxz
loope
jmp
in
mov
jmp
sar
cld
enter
shl
repnz
out
cmp
loopne
into
mov
mov
loope
mov
shl
sar
shlb
int
ljmp
ffree
addl
in
mov
ffreep
in
cli
div
std
jmp
aaa
fcmovnbe
cmp
stc
rorl
test
addb
xlat
in
aaa
shr
jmp
ds
leave
cmp
sbb
aam
addl
out
rorb
in
in
cmp
cmp
clc
clc
aaa
xlat
roll
aad
in
in
addb
xchg
repz
jmp
repz
filds
xlat
xrelease
loopne
xchg
fdivrs
sar
ss
repz
stc
fisttpl
test
icebp
ljmp
aam
int
hlt
out
lret
ds
int
out
repz
mov
mov
orl
icebp
clc
jecxz
xor
jmp
rcl
shl
stc
hlt
fucomip
int
fcos
dec
jecxz
fsub
jmp
int3
lock
cmp
fcomi
addb
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
or
sub
fiaddl
jle
repnz
cli
fiaddl
xchg
xchg
cmc
xchg
xor
jmp
fdivs
leave
dec
cmp
cld
ret
out
out
stc
repnz
ret
sub
xchg
nop
xchg
in
in
cli
enter
out
lret
cld
out
loopne
cli
test
mov
iret
mov
std
test
aad
fsub
aad
jmp
test
loopne
addb
out
xor
divl
xor
repz
shl
lret
fstp
cmp
mov
call
mov
fsubr
roll
stc
cs
shl
lret
iret
and
testb
loope
ljmp
cmp
ss
lock
lret
rcl
in
xchg
jmp
fsub
ljmp
xchg
xor
jmp
enter
int
jecxz
sub
fcomp
out
mov
sub
call
int3
lret
hlt
ret
idiv
aam
loopne
ljmp
hlt
mov
enter
cmp
fcom
out
sti
iret
neg
out
aas
add
call
roll
mul
repnz
cli
cli
test
cmp
loop
jecxz
ret
and
xchg
aad
out
clc
sti
aaa
loopne,pt
lock
out
test
div
ret
out
into
in
cli
test
enter
aaa
xor
adc
aad
cmp
lret
shr
in
in
adcb
jmp
neg
ss
shl
clc
fiaddl
fucomp
jmp
fildl
test
xor
in
ret
out
aad
mov
xchg
test
divb
xor
enter
aas
cmp
cmp
sar
xchg
loope
and
nop
lret
leave
mov
into
icebp
out
cmp
fdiv
in
cmp
into
test
aad
loop
xchg
fsubrp
xor
out
jecxz
cli
xor
xlat
cmp
ljmp
call
test
icebp
in
mov
mov
clc
neg
fstp
sar
idivl
cld
ret
cld
call
in
xchg
iret
loope
mov
jmp
xor
shr
je
add
iret
ret
rcr
fxch
in
incl
adc
jle
add
int3
idivl
loope
cmp
idiv
xchg
fcomip
xchg
std
jecxz
loop
jecxz
enter
aam
rol
out
fucomp
xlat
repnz
les
loope
out
ljmp
lret
les
leave
clc
in
out
ds
rcr
aad
in
cmp
xchg
xchg
shrl
shl
enter
cmp
fsub
cmp
dec
enter
out
and
aam
das
fadd
cli
out
out
ror
shr
aaa
fld
cli
cmp
cli
mov
in
cld
into
adc
xor
cli
iret
fildl
rcl
sar
fcmovb
test
ljmp
jecxz
call
int3
xor
push
sar
aas
ds
shl
mov
adc
jmp
out
icebp
hlt
lock
xor
shl
out
aam
in
cmp
cmpb
xchg
rorb
into
mov
enter
xor
cmp
cmp
cmp
loope
cli
not
aas
fisttps
ljmp
or
aad
rcl
jmp
jecxz
out
clc
std
in
loope
mov
loop
in
lock
in
imul
cld
cld
in
jecxz
int
in
mov
clc
out
fisttpll
hlt
incl
enter
fdivl
stc
loopne
cli
test
xchg
and
in
stc
aad
fidivl
leave
stc
repnz
clc
idivl
sar
test
sub
lock
mov
jecxz
sti
enter
out
cmp
xor
sbb
ret
out
cld
mov
int
xchg
filds
cli
fsubr
into
aaa
fdivrl
sub
aas
loop
mov
inc
xchg
mov
jmp
out
cmp
idivl
std
fcomip
loope
out
fucomip
cmp
mov
mov
in
ss
icebp
out
cmp
repnz
fsub
icebp
stc
les
int
adc
ljmp
icebp
lock
add
fsub
fcmovnu
std
call
fldz
fdivr
fucom
iret
out
out
ret
leave
jmp
in
int3
lret
ret
ret
cmp
fisttpll
enter
out
in
div
in
out
mov
jmp
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
ljmp
lds
sbb
loopne
jecxz
in
xor
hlt
cmp
repz
xor
aas
cli
out
fnstsw
cmc
cli
sub
out
out
mov
std
repnz
xchg
ret
aam
cmp
call
hlt
repz
out
rcl
xlat
ret
sti
out
lock
xchg
out
not
fcom
lock
cmp
cmp
rcr
repz
loop
out
cmc
hlt
not
call
cmp
repnz
in
xchg
movl
call
jmp
in
std
sti
cmp
out
inc
lock
test
mov
out
xchg
mov
shl
out
cmc
leave
out
repz
fcomi
in
std
orb
test
in
div
jmp
das
cmp
xlat
repnz
cmp
ret
call
stc
fisttps
xchg
or
ljmp
fdivrl
mul
iret
into
loope
leave
aad
mov
leave
mov
in
icebp
fstl
icebp
leave
xor
ds
not
sti
in
jecxz
in
int3
in
int3
or
xor
cld
out
cmp
sti
leave
cli
hlt
jecxz
out
shl
in
cli
addl
shl
xor
out
fiadds
sti
stc
test
std
xchg
ret
loope
std
out
shl
rcr
xor
xor
cld
clc
hlt
std
aad
aam
inc
fucom
out
fdivrp
fucompp
fcmove
addb
xor
lret
fcomip
std
fldl
aas
sbb
int
xchg
shll
aam
xor
out
int3
leave
in
int3
jecxz
iret
iret
icebp
in
shr
add
iret
jmp
xchg
ror
stc
fcmovnb
stc
cmp
divl
cmp
adc
in
incb
repz
call
fcomp
cmp
call
repnz
std
not
out
cli
cmp
enter
in
xlat
enter
iret
repz
repz
int3
cmc
rol
vpsraw
sar
cmc
std
mov
out
xor
ss
cli
aad
cmp
fidivrl
jecxz
call
mov
mov
in
xchg
push
loopne
lret
cli
jmp
leave
rcr
fcomp
cmc
pop
fildl
mov
jg
fiaddl
jle
imul
idivb
cmp
cmp
call
rcl
repnz
leave
fcmovu
leave
enter
loop
sar
clc
leave
fisttpll
mov
nop
out
in
not
out
fld
aam
rcl
ret
iret
vshufps
fchs
loopne
loop
sbb
ret
ljmp
repnz
cmc
shl
cmp
idiv
neg
mov
xchg
out
ljmp
in
icebp
cmp
clc
fucomi
test
ffreep
stc
aad
fiaddl
jmp
cmc
aam
int
jecxz
shll
shl
ljmp
call
in
mov
xchg
hlt
fcom
enter
out
icebp
cmp
rcl
sar
aad
in
cld
ret
xlat
addl
ffreep
iret
fsubr
aaa
mul
jmp
fmul
lret
loopne
cld
rol
ffree
jecxz
xchg
fimull
nop
icebp
cmp
lock
xor
cli
out
aad
faddp
in
cmc
leave
xlat
xchg
fsub
std
int
ljmp
out
divl
xor
sbb
cmp
add
rcr
xchg
sub
sbb
repz
cs
ljmp
ffree
fdivr
out
xchg
in
loop
xchg
out
xor
xor
cmp
xor
cmp
not
fucom
mov
clc
ljmp
icebp
icebp
clc
shl
not
fst
cmp
bnd
cmc
adc
loopne
repz
fsubr
jecxz
fldl
test
stc
cmp
stc
stc
loop
mov
fdivp
mov
loop
adcl
shl
cmp
sbb
mul
cmc
clc
cli
sar
xchg
div
das
das
rcl
fcomp
jmp
cld
loope
neg
test
loope
out
jecxz
fmulp
out
mov
fld
rcl
iret
leave
int
in
rcl
hlt
in
cld
fucomp
xlat
fucom
aad
loop
in
mov
cld
adcb
aad
test
int
mul
addb
xlat
sub
out
int3
xchg
ret
out
int
out
loope
shl
cli
cli
out
aam
addl
lock
add
jmp
rcl
iret
aam
aad
sarl
cmp
mov
cmpsb
jg
fiaddl
jle
lret
ljmp
clc
aam
div
repnz
repz
shl
imul
nop
sti
call
in
jmp
fcmovnu
fistpll
cld
ret
in
xchg
jmp
addl
int
jmp
fcmovne
icebp
dec
sarb
jmp
out
rol
mov
mov
loope
out
lret
int
into
fucomp
divb
out
hlt
xlat
std
lock
xlat
cmp
cmp
incb
hlt
rol
fdivr
mov
xchg
mov
xchg
rol
ror
cmp
lret
aad
aam
fst
rcl
cld
mov
lret
out
out
mov
jmp
sti
cmp
shlb
fmulp
rcr
cli
into
xlat
cli
aam
in
xchg
cmc
ljmp
in
in
aam
icebp
out
int3
ret
test
mul
xlat
sub
fists
jmp
out
fsubr
cmp
fdiv
sar
call
icebp
mov
xchg
ror
cmc
int3
shl
loope
loop
int
std
cmp
or
mov
fsubrp
vpaddq
sarl
xlat
incl
rol
shl
jecxz
test
test
clc
xor
out
xor
into
loopne
fsubr
sbb
clc
fst
fcomp
out
into
iret
xchg
rorb
cmc
cmc
std
fdivr
in
jmp
loop
in
cmc
cld
rcl
loop
int3
fsub
in
jecxz
icebp
jmp
xor
cmp
cmp
aaa
dec
cmp
cmp
test
fisttps
enter
xchg
jmp
cld
sar
std
std
add
out
std
aam
loope
loop
jmp
xchg
hlt
shl
lock
cs
ds
shl
xor
shl
out
mov
mov
out
test
xchg
aad
lret
hlt
enter
sarb
out
int
cmp
sbb
test
cli
loop
leave
repnz
ror
cmc
in
fcmove
lret
push
and
xchg
inc
mov
nop
call
xor
fdiv
fidivrl
in
ret
cli
incl
mov
rcr
test
jecxz
loopne
out
ret
cmp
std
ljmp
test
mov
ret
mov
xchg
jmp
push
loopne
pop
clc
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
push
shlb
jle
add
rclb
sti
xor
loopne
dec
cmc
fcmovu
adc
xlat
jmp
jmp
mov
call
fidivs
hlt
aam
sti
lock
fcmovnbe
ret
loop
aam
test
cmc
aam
divb
xor
in
sti
enter
shr
loope
xor
call
clc
ret
rclb
in
aam
cmp
dec
jmp
div
std
jecxz
fsubrp
loopne
loope
sti
int
xchg
clc
ss
lock
cld
mul
std
int3
neg
loop,pt
out
mov
jmp
jmp
cli
enter
incl
test
mov
in
xchg
fmull
mul
xor
aas
aaa
cmp
cmp
adc
xlat
rolb
lea
icebp
out
ror
out
ljmp
test
faddl
out
test
test
repz
xor
cli
stc
in
loope,pt
cmp
aam
test
mov
loop
rcr
enter
rcr
fsubr
sti
ss
out
sub
iret
add
incl
lret
loopne
xor
call
fstpt
fadds
jecxz
in
lock
lret
out
cmc
out
int
std
ss
fcmovb
cmp
test
flds
lea
hlt
xchg
leave
hlt
fldlg2
in
fnstcw
ss
cmp
shl
repnz
jmp
call
out
mov
jmp
shr
iret
lret
cmp
or
ret
loop
mov
shl
lret
or
shl
into
lock
ds
loopne
loopne
repz
rolb
orl
rcl
lret
cmp
repz
fmul
loop
adc
loopne
out
cli
loopne
lret
imulb
repz
in
cmp
out
fabs
hlt
cmp
shl
mul
fst
xchg
mov
orl
int
div
in
rcl
cli
aam
cli
loopne
out
mov
in
xor
xchg
iret
in
ror
out
out
out
cmp
ffree
int
aad
mov
imul
jmp
rol
lret
ror
int
aam
mov
pop
pop
push
stos
jg
fiaddl
jle
std
out
out
call
shl
cmp
lret
int
out
jmp
std
in
xchg
out
in
test
hlt
loopne
sub
leave
fdivl
cmp
sarl
repnz
loope
jmp
iret
jmp
xor
cmp
lret
xlat
loop
cmc
fsubp
aam
stc
aam
or
fcomp
leave
jecxz
int3
into
aam
jecxz
xor
ljmp
sarl
test
mov
xchg
add
xor
sti
cmc
aad
icebp
loope
int3
in
shl
flds
mov
in
shr
call
faddp
das
enter
int
iret
icebp
hlt
shl
sti
cmp
cld
shl
sbb
std
into
in
xchg
fisttpll
stc
xlat
call
adc
fnop
aas
sarl
in
fmul
rcl
leave
xlat
xor
sar
iret
std
fcomip
and
ret
aad
hlt
aad
test
xchg
cld
sub
test
xor
fcmovbe
out
cli
xlat
repnz
and
adc
cli
test
mov
popl
out
xlat
in
icebp
cmp
fdecstp
xlat
test
jmp
xlat
enter
incl
out
out
div
aaa
clc
xor
cmp
int
sarl
aam
aad
mov
out
fucom
incb
cmp
out
lret
fidivrl
cmc
lock
add
cmc
rol
fcmovb
ljmp
sub
cmp
sarl
clc
repz
mul
cmp
ljmp
fsubrp
iret
in
shl
xor
xor
rcl
std
hlt
sbb
repnz
fsub
div
test
leave
mov
into
rol
out
fcmovbe
cmc
cmp
stc
fldl
clc
testl
int
xor
cmp
aaa
cmp
int
fnclex
in
cld
fabs
ret
loop
ds
movb
shl
ret
fmul
lret
sar
hlt
loopne
cmp
sarb
shl
mov
repnz
fdiv
repz
cmp
ret
ret
loop
ljmp
out
icebp
lock
jmp
fdivr
repnz
sbb
fadd
call
jbe
jmp
int
lret
lret
int
mov
xchg
xor
jle
cli
stc
cmc
mov
decb
clc
into
fsub
aam
ror
int3
ds
out
out
std
addl
ffreep
loope
lret
repz
fcom
std
ljmp
add
jmp
jmp
mov
xchg
in
shr
loopne
stc
leave
in
aaa
aad
cmp
xchg
leave
div
fucomi
fadds
xchg
aaa
int
iret
iret
fildl
rcr
add
add
sti
jecxz
xchg
clc
aad
ss
cmp
ljmp
aam
leave
ror
xlat
int
jmp
mov
in
in
enter
iret
lock
cmp
lock
aam
fneni(8087
or
xchg
xchg
enter
out
in
rolb
ds
mov
loop
or
rcl
jmp
mov
aaa
repz
aaa
rolb
sbb
lret
out
mov
clc
nop
mov
sub
aad
iret
div
lock
ds
cmp
and
ret
loop
ljmp
aam
jmp
xor
aas
icebp
jmp
lds
mov
int3
repz
icebp
test
ret
into
out
cmp
cli
and
shl
addb
xchg
loope
int3
fisubrs
in
xor
int3
xor
rol
out
mul
ret
test
out
jecxz
xchg
fdivr
repz
in
lock
std
shl
cmp
cmp
out
dec
fadds
test
in
jmp
aas
flds
repnz
rolb
jmp
out
int3
cmc
icebp
int3
in
loope
shr
stc
aam
incb
idiv
mov
in
mov
xor
out
fcmovbe
sar
aas
hlt
fdivr
neg
xchg
call
ret
xchg
mov
xlat
div
icebp
jmp
lret
addb
lret
ret
fcmovu
int3
int
nop
in
out
int3
repz
les
div
in
rcr
add
hlt
ret
lret
mov
addl
aaa
repz
stc
fdivrp
not
fdiv
fsubr
rcr
pop
jmp
ror
ror
aad
inc
push
cli
mov
jle
in
loop
in
int3
fdivr
lret
out
jmp
loop
imul
shl
lock
into
repz
cmp
out
test
sti
sub
shr
xor
into
into
lret
adc
in
ret
jmp
fstp
int3
in
in
jecxz
repz
xor
repnz
lock
fiaddl
in
test
ljmp
sti
xchg
ret
ss
out
cmc
loop
cmp
repz
mov
sti
std
in
sub
aad
fcmovbe
shr
sarl
sarb
shl
fcom
ret
fcomp
test
stc
xchg
int
mov
nop
test
xor
aaa
cld
ss
repz
fcmovu
fucom
xchg
xlat
clc
loope
int3
leave
shr
lock
ret
icebp
into
out
cld
fiaddl
loop
fucomi
sar
xlat
test
test
lock
std
iret
cmp
ret
lock
mov
hlt
loope
mov
into
loopne
rclb
jmp
aas
clc
cmp
icebp
jecxz,pt
out
loopne
fdivr
sti
cld
lret
call
jecxz
leave
stc
cmp
in
lock
test
mov
out
mov
out
jecxz
repz
in
lock
cld
fucomp
shr
xchg
cld
in
call
adcb
out
icebp
cmp
cmp
iret
in
loopne
loopne
test
xchg
sti
ljmp
in
xchg
xor
in
mul
shr
out
lret
rcl
out
jmp
mov
cld
xlat
jecxz
sub
mov
jecxz
test
cmp
hlt
fcmove
lret
fprem1
adc
out
adc
mov
shl
and
ror
test
aas
lret
sti
ror
test
xor
std
jmp
repnz
int3
clc
clc
xor
jmp
fmul
cmp
stc
rcl
ret
xchg
in
leave
loope
lock
xchg
out
repz
aaa
aam
adc
ret
call
mov
ret
enter
hlt
leave
int
hlt
loop
fcmove
test
call
int
jecxz
lock
nop
hlt
divb
clc
rcr
idiv
pop
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
or
mov
jle
add
ds
loopne
call
in
xchg
out
ror
in
fidivrs
sbb
lock
idiv
icebp
aad
out
add
in
out
xchg
sub
icebp
xor
lock
cmc
ds
clc
ret
leave
out
lock
lret
mov
aad
xor
out
out
out
out
jmp
sbb
cmp
mov
sti
iret
lret
jecxz
sti
rolb
leave
xor
rcr
mul
aad
ds
mov
call
cld
repz
shl
das
aam
int
sti
call
lret
fcmovnbe
out
lock
std
fiadds
shl
nop
xchg
out
rol
xor
in
jmp
rolb
fcmovnu
addb
out
in
ret
cmp
cs
iret
cli
int
fcom
icebp
loope
aam
fsub
test
loopne
orb
out
rcl
hlt
stc
leave
xor
fnstcw
aas
fcomp
mov
xchg
out
into
shl
shll
shlb
in
out
fcmove
aaa
ds
ds
add
xlat
cmc
aad
fsincos
ljmp
xlat
in
rcl
out
sti
shll
hlt
idiv
sar
div
roll
jecxz
fmull
out
mov
hlt
idivb
out
lret
fdivr
neg
sar
shl
out
lret
lret
into
lea
repz
fcmovu
sarb
fdivrl
fsubr
in
aad
mov
test
xchg
xor
cli
sub
rcr
fcomp
fucom
cld
lock
cli
loope
loopne
rcl
xrelease
xor
xor
fcmovu
lret
into
div
lret
aad
cmpb
aad
mov
lret
mov
leave
mul
aaa
idivb
rcl
loopne
fdivr
fadds
int3
aad
fstp
rcr
lret
shl
repnz
cmc
out
das
ljmp
or
cli
test
cmc
call
mov
mov
lock
out
out
rcl
call
std
xor
icebp
sti
lock
inc
ret
in
mov
xchg
jmp
call
sti
fcomi
shl
lret
fstl
div
in
clc
xlat
rcl
aas
shl
int3
out
ret
cli
frndint
stc
std
les
and
cmc
xor
repnz
std
fucomi
incb
fcmovbe
call
loop
xchg
ficoml
lock
fadd
stc
lock
iret
in
test
shr
loopne
jmp
lret
add
test
roll
shll
aas
aas
jecxz
rcl
out
mov
loopne
faddl
repnz
out
enter
push
push
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
leave
or
pop
add
ss
aad
loop
rcr
repnz
lea
shr
repnz
jecxz
iret
fcomp
repnz
into
fdivrl
cmp
ret
inc
ret
testl
mov
rol
stc
aam
out
int3
fst
test
hlt
in
in
call
fimull
mov
shr
ret
test
fxch
stc
sar
fcomip
call
repz
sub
test
jmp
out
xor
hlt
cmp
and
ror
ljmp
leave
xchg
in
fcomip
hlt
leave
stc
repz
out
cmp
cmc
std
stc
cmc
stc
ffree
iret
in
vpsubb
xchg
shl
mov
jecxz
out
xor
lock
clc
jmp
icebp
xor
rol
hlt
cli
and
in
xchg
not
cmp
test
aaa
in
rcr
hlt
ror
repnz
out
sbb
xchg
sub
in
jecxz
ss
iret
fcmovne
aas
fnstsw
aas
repnz
test
into
ret
fdivl
aam
iret
cmp
ret
cmp
call
out
mov
rcl
hlt
xor
aad
cmp
ljmp
test
addl
nop
rcll
ret
in
fcmovne
stc
out
sar
adc
fld
ret
ljmp
loopne
loopne
int3
test
ss
xor
leave
aam
in
out
jecxz
ret
sti
call
out
jmp
in
iret
loopne
jecxz
out
sti
int3
in
sarl
fdiv
jmp
sarb
ffree
or
mov
mov
ror
sarb
xor
int
aam
xor
mul
shl
rcr
repz
fucompp
shl
fsubrp
das
xor
aaa
cmp
neg
int
cmp
out
leave
xchg
mov
ljmp
shll
out
lret
in
fistpll
fidivrs
cli
out
sti
roll
fcmovnu
ljmp
xor
stc
fdivrs
fmulp
aad
fpatan
cmp
std
ljmp
in
xchg
into
lock
cmp
cmp
cmp
mov
mov
jecxz
out
enter
std
mov
xlat
iret
fidivrs
sub
out
xchg
addl
shl
repz
xor
xor
clc
iret
aas
std
test
cmp
cli
test
loop
ljmp
xor
icebp
stc
sbb
fcmovb
xchg
mov
idiv
mov
jmp
mov
xchg
ror
cmp
cmp
out
icebp
cmp
stc
out
out
fstp
stc
fcmovbe
xlat
int
cli
enter
in
aaa
imul
rcl
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
lahf
nop
test
movsb
mov
jle
add
std
aaa
enter
aas
fnclex
mul
loopne
sti
xchg
call
mov
das
ror
out
rcr
repz
lret
cmp
cmp
loopne
rcr
mov
xlat
mov
out
call
loope
aam
sar
aad
fdivrs
cli
std
lret
aaa
ret
flds
in
fimuls
int3
jmp
shr
cmp
aaa
iret
cmp
neg
int
fldl
fstp
in
stc
icebp
int
into
out
int
xor
in
fcom
out
sar
incb
cmc
fcmovnbe
fdivr
orl
mov
loopne
stc
xor
lret
cmp
cli
fcmovnu
les
loop
xor
cmp
loopne
incl
out
loop
faddp
lock
cld
out
repnz
in
stc
ret
lock
fadd
test
out
and
xor
aad
test
idiv
aam
fdivr
imul
decl
cld
out
rcl
shl
out
imul
loope
fstpt
mov
idiv
testb
mov
xchg
xor
aad
aam
and
div
shl
jecxz
mov
in
int
loop
in
jmp
out
jmp
jmp
div
out
repnz
fcmovnbe
cld
cld
mov
aad
cmp
out
idivb
repnz
dec
cmp
sti
mov
in
in
into
stc
fadd
rorl
in
int3
into
cmp
repnz
repnz
std
idivl
stc
repz
lret
in
fisttpll
call
in
int
int
cmp
xlat
loop
sarb
in
aad
cli
mov
mov
cli
lea
jmp
in
out
cli
call
out
clc
fcmovnu
out
fucomp
test
fsubr
addl
ss
fdiv
idiv
out
loop
sti
loope
nop
mov
shlb
loopne
xor
int
sub
adc
out
in
jecxz
ljmp
xor
int3
xlat
jmp
out
lret
out
shl
roll
mov
enter
jmp
loopne
out
in
xlat
in
ffreep
aam
stc
in
test
hlt
call
out
std
shr
cli
sub
ret
out
clc
in
mov
xchg
iret
test
cld
rol
fcom
jmp
std
int3
fdiv
test
testb
flds
ljmp
leave
call
sar
loopne
rol
loop
mov
into
loope
loopne
xchg
jmp
or
jmp
ret
ror
aad
and
cltd
mov
cmpl
call
fld
ds
sarl
cmp
cli
aas
loope
mov
std
jecxz
out
test
sti
fcomip
ror
icebp
lock
testl
shl
mov
leave
shl
into
idiv
hlt
cmp
movl
sti
xchg
mov
lock
int3
cmp
cmp
cmp
in
xlat
cmp
mov
out
test
shl
in
iret
ljmp
cli
shl
xchg
in
enter
cmp
in
mov
ret
cmc
xor
into
into
cmc
lock
fsubrp
in
test
fadd
aad
cli
lret
loope
mov
icebp
out
in
repz
loop
fadd
icebp
aas
loop
fcmove
in
int
leave
loopne
out
jmp
lret
cmp
jmp
fcmovne
fdivp
fld
clc
lock
enter
in
repnz
mov
lret
aaa
cmp
call
sti
inc
out
neg
ffreep
cli
fdivr
xlat
out
filds
cmc
aaa
lret
cmp
call
loop
cmp
cli
jecxz
addl
in
rorl
int
leave
fmul
into
ds
aaa
stc
clc
loop
out
test
xlat
in
test
int3
jmp
repnz
xor
into
xlat
lret
cmpb
shll
and
loope
fsincos
ret
test
lock
in
xor
shr
xor
aaa
fdivrl
mov
shl
leave
in
shr
clc
icebp
xlat
cmp
xor
sti
aam
cmp
jmp
leave
loop
addb
in
enter
aaa
fmulp
aaa
std
addl
in
ljmp
loop
ljmp
out
stc
xor
shl
std
out
inc
xchg
out
xlat
fimull
mov
iret
shll
ss
cmp
aam
cmp
mov
loopne
cld
int
fcomip
vpshld
lock
aad
loopne
cli
cmp
aad
fcmovnu
fucomip
stc
fdivr
into
mov
shr
out
aad
into
out
lret
std
xor
cmc
into
cli
rcl
fstp
add
lret
fcmovnu
out
in
in
addl
enter
cli
sar
shl
xlat
shl
roll
in
enter
into
in
int
aaa
lock
jmp
xor
fadds
les
cli
ljmp
rcr
shl
out
leave
fnsave
fcom
xlat
out
or
lret
in
out
repz
call
hlt
shl
cmp
cli
mov
test
rorb
sarb
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
xor
out
fidivrs
jle
jmp
into
in
idiv
sti
iret
lret
test
stc
cmc
cmc
aad
in
jmp
mov
icebp
xor
fsubrs
jmp
cli
sar
or
mov
xchg
xchg
jmp
cs
ret
aad
cmp
cmp
shl
test
cld
jmp
jmp
loope
fists
lock
hlt
in
int
rcl
fnstcw
sti
cmpb
mul
aas
fisttpll
in
out
and
fsubr
into
out
jmp
das
fcmovnbe
int
roll
test
div
fucomi
cmp
sar
lret
shr
fucomi
xor
cmp
out
orl
into
jmp
aam
stc
aam
out
std
imul
sbb
decb
addb
jmp
sarb
shl
jmp
jecxz
rol
fisttpl
in
sti
nop
in
mov
out
lock
ss
aam
cld
sti
repz
mov
enter
repnz
out
ret
cmp
cmp
out
call
aas
shl
fdivrp
leave
test
mov
shl
in
and
clc
das
ljmp
fiaddl
ljmp
loop
xchg
cmc
cmc
sar
hlt
repnz
lret
int
cmp
aam
ret
rcr
call
out
cmp
in
xchg
int
loope
not
fdivrl
jmp
cmc
shl
in
int3
test
out
call
ffreep
loopne
jecxz
jmp
cmc
sarb
das
aad
sarb
repnz
shl
rcl
rol
in
fsubp
lret
fcomip
adc
fnstenv
cmp
jmp
stc
loope,pt
icebp
in
std
ds
cli
fchs
xchg
icebp
lock
iret
xor
ror
leave
cmp
aad
shl
aas
in
fninit
and
out
aam
out
hlt
jmp
sub
int3
cmp
sti
repnz
test
out
cld
int3
int3
sub
test
xor
out
int
icebp
repnz
repnz
icebp
cmp
in
call
jmp
jmp
call
rcr
aad
aam
enter
clc
loop
lock
loopne
cmp
movl
jmp
shll
aad
incl
add
cmp
lret
mov
in
xchg
xchg
icebp
ret
out
fsubr
fptan
xor
into
aam
hlt
jmp
loop
lret
rcr
std
shr
fdivs
aam
cld
lock
aas
shr
cmp
lea
jmp
in
repnz
out
aad
hlt
out
lret
cmp
cld
aad
cmp
test
dec
fistpll
enter
jbe
add
cmc
add
add
aam
aas
aad
iret
aam
adc
mov
arpl
cmp
jle
add
repz
fnstcw
cmp
jmp
addl
cmc
decb
fists
aad
jmp
cmc
rcr
aam
cmp
fcmovb
sub
repz
test
in
sar
les
out
sti
xor
jmp
sar
xchg
fcmovnu
std
fxch
jecxz
sti
std
cmc
mov
aam
sar
repz
repz
stc
fucomi
cmp
sti
repnz
fcom
int3
clc
rolb
xor
test
xor
ret
aas
neg
ret
faddl
or
lret
mov
addb
out
aam
std
fidivrs
fstp
addb
clc
mov
xor
lret
xchg
out
xor
fcomp
out
ds
not
in
out
icebp
cmc
cli
jecxz
in
leave
into
xchg
sbb
int3
call
f2xm1
out
stc
into
ffreep
mov
rcl
stc
cmc
loope
mov
loop
in
ljmp
out
loope
stc
in
xchg
cmp
cld
aad
inc
cli
in
lret
out
int3
int
out
out
rol
sar
lret
stc
clc
not
aad
ret
repz
enter
and
loopne
cmp
out
int
hlt
in
shr
rol
xchg
fmul
in
cmp
mov
shr
out
in
xlat
jmp
cmp
ret
fsub
out
repz
clc
lret
jecxz
xchg
lret
cli
ret
cmp
loop
test
xchg
ret
roll
rolb
ss
sarl
fcmovbe
rcl
rcr
jmp
into
out
rorl
mov
enter
mov
iret
xor
repnz
sarb
in
repz
hlt
ds
clc
fsubr
fdivr
cld
in
cmp
mov
in
cmp
rcl
cmp
aad
shl
fdiv
clc
rolb
lret
jmp
mov
fldl2e
cmp
fidivrl
aaa
stc
repnz
cmp
hlt
test
test
das
call
cmp
fadd
ror
stc
incl
testb
mov
in
aad
fdivr
sti
xor
loopne
rol
icebp
in
orl
fmull
cli
fcmovbe
repz
cld
cmp
sarl
ret
cli
icebp
loopne
int3
ret
sbb
fmulp
decl
aaa
xor
lds
cld
sarb
in
in
mov
jmp
nop
xchg
xchg
mov
icebp
xchg
ret
ret
fcmovnbe
not
shl
faddl
shr
cli
loopne
loope
std
mov
leave
xchg
loop
jmp
fcmovnu
xor
jmp
sarl
fcmovb
fdiv
in
out
fmuls
test
inc
cld
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
out
nop
fcoml
ret
enter
jmp
loope
in
rol
test
mov
dec
cld
into
out
ror
int3
xor
in
fidivl
ljmp
xchg
stc
mov
iret
in
and
mov
iret
int3
fnstenv
sti
aaa
fidivrs
in
testl
mov
int
fisttps
stc
in
jmp
aam
testl
flds
in
test
cld
cmp
iret
loope
ljmp
fucomi
ffreep
cmp
jmp
faddl
cmp
xor
cmp
sarb
into
aas
ror
test
cmp
fsubrp
leave
iret
cld
repnz
jecxz
sar
repnz
fcmovbe
cld
sarl
xlat
mov
fstl
stc
jmp
out
cmp
lock
ss
loope
out
clc
out
mov
fmul
fsubp
nop
lock
xor
in
int
cld
into
shr
fsub
aam
in
aad
cld
lds
hlt
loopne
fsubp
in
into
test
out
cli
int3
in
into
ret
fucom
fdiv
aam
mov
iret
test
jecxz
xchg
out
enter
stc
cld
hlt
xchg
lret
cld
cli
mov
ljmp
shl
sub
lret
stc
xor
rcl
stc
iret
xlat
xchg
addb
loope
in
int3
mov
cmc
cld
xor
xlat
addl
clc
aad
loope
fnsetpm(287
mov
dec
xor
divb
cmp
jmp
sbb
rcr
not
out
mov
test
ljmp
cs
cli
repz
ss
lock
aaa
xchg
sar
fadds
into
in
out
imul
out
cmp
int3
repz
ss
cmp
repz
enter
filds
cld
shl
out
adc
aaa
int3
in
out
clc
leave
cmc
cld
cmc
hlt
cmp
mov
clc
jmp
lret
xchg
mov
out
repz
lock
sarl
loopne
fsqrt
in
xlat
cld
fcmovnu
addl
rcl
icebp
int
cli
xor
aas
std
fdivp
loope
test
ret
leave
mov
into
xchg
fcmovb
leave
cld
cmp
fsubrp
jmp
lret
cmp
cmp
loopne
xchg
ljmp
rclb
ret
leave
cld
icebp
fcomp
cmp
into
in
jecxz
fcmovu
test
fucomi
xchg
icebp
iret
repz
lock
shr
fsincos
fadds
out
sar
orl
repz
shll
in
xlat
lock
out
jmp
out
cmp
out
in
cli
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
mov
loope
jmp
ror
in
leave
in
fidivs
in
iret
aam
fdiv
fxch
ljmp
ljmp
aaa
ljmp
ljmp
aam
xchg
int3
and
in
out
icebp
xor
jecxz
fsubr
repz
std
sti
cmp
aam
rcr
test
mov
loop
xchg
rorl
out
xor
rcr
fucomp
into
sbb
ds
jmp
ljmp
std
xlat
xor
int
int3
call
fstp
sti
loop
std
test
mov
jmp
xchg
in
in
int
shl
iret
stc
repnz
call
cli
cmp
incl
fcmovnu
incb
int3
call
stc
shr
jmp
clc
int
fscale
cmp
ffree
flds
in
icebp
std
mov
lret
ss
into
xor
ds
fbstp
fucom
cmc
fld
adc
std
jmp
in
dec
enter
in
aad
fdivrl
fcomip
aas
sarb
loope
les
f2xm1
loopne
out
cmp
ss
cmp
iret
hlt
clc
cmp
repz
mov
clc
in
loopne
enter
mov
jmp
rcr
hlt
fucompp
aad
in
ret
shl
rcr
int
in
mov
mov
xrelease
xlat
int3
cmp
leave
fxtract
sbb
ffreep
test
mov
loop
loop
aam
hlt
fnstenv
sti
fdivrl
into
loopne
test
jmp
leave
in
rorb
out
xor
cmc
xor
cmp
aam
roll
cmp
out
xchg
out
pushl
int3
idivl
lret
fsubr
ss
aam
icebp
lret
xlat
mov
xchg
int
aam
xor
int
xor
repz
fcomp
sar
cmc
cld
out
cmp
mov
jmp
ror
xchg
xor
aaa
repnz
lock
enter
aam
or
leave
jmp
loopne
ret
hlt
into
cld
rcl
repz
incb
enter
nop
loopne
in
into
repz
shr
out
sti
aam
aad
into
icebp
into
cmp
out
not
aam
std
jecxz
ffreep
mov
loop
std
lret
mov
ss
cmp
hlt
idiv
lret
ss
fcomi
test
cmp
out
call
out
in
std
xorl
out
icebp
icebp
cmp
cmp
fnstsw
iret
faddl
xchg
mov
ljmp
cmp
cmc
cld
fsubr
icebp
rorl
in
call
xchg
icebp
ffreep
cli
jmp
out
cmp
shl
iret
cli
loop
jne
pushl
mov
jmp
rcl
int3
lret
fst
fstl
xchg
push
dec
jg
pop
add
in
out
loope
fucomip
enter
ljmp
sti
fdivs
cmp
rcr
xlat
xchg
shr
or
out
std
out
int3
fdivp
jecxz
ror
aaa
test
out
aas
in
test
aam
jecxz
addb
call
das
repz
aam
neg
cmc
fldln2
sub
fcomp
in
fimuls
mov
jecxz
jmp
repz
xlat
leave
in
sub
ret
stc
aas
mov
ljmp
sub
int
xor
not
call
cli
loopne
shl
fadd
cld
int
stc
lock
mov
and
shr
xor
rcl
clc
into
lret
ds
cmp
incb
fsubp
mov
lret
not
cmc
cmp
fdivr
lret
int
fstp
repnz
loop
rol
aam
cld
in
loop
mov
repnz
sub
fdiv
ss
repz
sarl
inc
adc
ljmp
call
lret
incl
sub
fucomip
ljmp
adcb
hlt
into
ret
aad
repz
fdivrl
adc
aas
stc
cmc
repz
cmc
std
test
enter
nop
into
xor
int3
int3
out
aam
lret
sarl
in
in
cmp
out
loop
sti
lock
loop
cs
fcmove
jmp
in
mov
fucompp
leave
cld
sti
lock
rorl
idiv
aam
cmp
call
cmp
cli
out
std
sti
test
fimull
rcll
cmc
ss
fcom
std
fst
ds
cmp
dec
xchg
mov
shr
icebp
loopne
icebp
icebp
xor
cmc
sti
cld
xlat
call
icebp
rol
out
fmuls
cmp
dec
repnz
jecxz
jmp
repnz
iret
divl
fldl
addl
fmul
lret
xchg
in
iret
out
sub
xor
stc
shl
fxch
icebp
repnz
out
decl
test
out
repz
stc
jecxz
sub
xlat
fiaddl
call
in
fisttpl
shr
xchg
hlt
lret
rcr
sarl
cmp
idivl
sarb
loop
loop
call
les
int
rorb
enter
loopne
loope
into
std
cmpl
flds
testl
xor
int3
lock
repz
movl
mov
aam
leave
idivb
sti
aaa
cmp
cmp
loopne
test
fadds
loopne
stc
in
std
nop
test
xor
sar
fcmovne
out
lret
test
ds
jmp
aad
fnstsw
repz
cli
mov
jle
add
aas
cli
sti
std
fsubr
test
cld
fisttpll
leave
into
ror
cmp
in
cmp
out
fsub
fcmovnbe
aam
orb
shr
lret
rol
leave
ret
in
int
repnz
jmp
out
aad
in
in
fcmovnb
test
xchg
std
jmp
cmp
idivb
cmp
ret
aad
in
mov
xor
out
ljmp
rcl
icebp
loopne
jmp
xlat
clc
sar
lret
in
out
popl
xor
fcmovnu
xor
cmp
fxch
fcmovbe
cli
xchg
repz
loope
into
cmp
loop
xchg
out
das
ret
aam
in
xabort
adc
roll
call
fadd
iret
icebp
shl
int3
ret
icebp
ror
std
jmp
loopne
leave
mov
orb
rolb
fdivrl
out
shr
repnz
rcr
stc
neg
and
int
xchg
test
aaa
shr
clc
out
jmp
repnz
loope
cmp
xbegin
test
shll
into
xor
xlat
cmc
jmp
cmp
sti
fdivr
loop
in
xchg
loope
test
mov
mov
jmp
iret
sti
out
testb
sub
mov
aad
ror
leave
out
sti
out
fsubr
xlat
out
sti
aad
vpaddd
in
mov
xor
sarb
repnz
lret
push
ror
aam
out
xrelease
fcmove
fimull
ret
ret
sarb
cmp
cli
hlt
std
jmp
fsqrt
out
ret
mov
ret
mov
sbb
loopne
rorb
shl
ss
aaa
iret
out
out
call
aad
rol
fnsetpm(287
shr
loope
repz
cmp
fnstcw
hlt
icebp
std
ret
out
test
mov
stc
stc
fldpi
lds
hlt
fxtract
out
jmp
iret
xchg
call
in
mov
xchg
xchg
fsub
mov
repnz
rcl
loope
shl
test
lock
mov
mov
jecxz
mov
out
fadd
call
aaa
repz
cmp
out
mov
std
xchg
in
jmp
lret
test
das
divb
repz
int3
stc
xor
cmp
ret
out
fucomi
std
aam
test
xlat
fiadds
out
jmp
sar
icebp
stc
sti
cli
loopne
clc
aaa
rol
neg
std
xlat
mov
out
clc
ror
fcmovnbe
test
xlat
mov
in
xchg
into
loop
in
in
out
sub
sarb
leave
aaa
loopne
fldpi
mov
jmp
iret
aam
aas
aad
iret
aam
ljmp
mov
or
mov
jle
add
in
stc
fcomi
in
hlt
lret
faddl
mov
shll
in
neg
aad
jmp
loop
incb
fdivr
clc
ret
xchg
sub
in
int
fidivrl
jmp
dec
sti
std
in
cmp
cmc
enter
leave
int
test
into
mov
fcmovb
repnz
icebp
ror
int3
sti
int
clc
mov
loopne
aad
incb
iret
lock
into
divb
fidivrl
fnclex
fdivr
fdivrl
clc
xor
loope
call
push
ror
xchg
leave
fdecstp
jecxz
fadd
in
iret
aam
ret
int3
std
sbb
shl
mul
sub
into
orl
xor
sti
into
loopne
fstpt
cmp
xlat
fadd
cld
repnz
sbb
mov
ljmp
lret
cld
xor
cli
fdivp
int3
out
fpatan
lock
out
decl
into
lret
jecxz
not
sub
stc
xlat
lret
lret
fdivr
xor
std
std
fcmovnu
xchg
xchg
loop
fsubp
push
enter
int3
fsubr
repnz
sarb
fxch
shr
cli
mov
fcmovne
fldl
icebp
lret
int3
rolb
cmp
jmp
aam
into
iret
sarl
out
jmp
loop
idiv
fildl
xorb
xor
int3
out
out
lock
fstp
aas
cli
loope
leave
div
stc
in
cld
xchg
xchg
loop
ret
std
repz
aas
loopne
adc
flds
lret
and
xchg
loope
cld
lock
fucom
loopne
aaa
jecxz
jmp
sbb
xchg
jmp
in
xchg
in
xor
cli
xor
in
into
lock
faddp
rcl
addb
loop
enter
mov
repz
cmc
rol
icebp
iret
rcr
out
fnsave
jecxz
sarl
mov
mov
shl
out
shl
ret
cli
test
fcmovu
cmc
stc
into
rolb
jecxz
in
ljmp
fmul
cmp
jmp
rcl
ljmp
xchg
sbb
jecxz
jecxz
div
out
cli
stc
das
repz
xor
add
cld
test
addl
xor
out
cmp
filds
out
and
fcmovnb
jmp
cld
mov
aam
aad
jmp
fdiv
repnz
std
fnstcw
xlat
repnz
repz
jecxz
fcos
and
cmp
das
fdivs
jmp
call
lock
cmp
flds
xchg
fcmove
test
sarl
repnz
int
fcmovnu
in
repnz
mov
ljmp
mov
fmulp
in
cmp
aad
idivl
ljmp
add
mov
mov
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
xlat
sub
jmp
add
out
cmpb
orb
jmp
std
loope
ljmp
cmp
int
ljmp
test
lret
out
orl
shr
shlb
cmc
cmp
test
sti
test
leave
lock
test
loop
nop
iret
out
cs
iret
cli
in
rcr
cmp
xlat
aad
repnz
test
lret
jmp
xchg
jecxz
loopne
shr
leave
out
jmp
fcomi
aaa
in
inc
testb
xchg
std
std
loop
jmp
in
fstp
fnstcw
sarl
cmp
shl
ret
std
jecxz
out
lea
mov
jmp
stc
xlat
aaa
loopne
loopne
div
aam
icebp
in
xlat
div
clc
and
bnd
idiv
lock
mul
fstpt
fadd
ljmp
ret
mov
lret
sub
int
cmc
cmp
clc
fiadds
fdiv
cli
div
cli
orb
lret
cmp
xlat
cmpb
idiv
neg
shl
sti
lret
fstp
xchg
lret
adc
cmc
fdivrl
sti
sbb
ret
and
hlt
neg
call
loope
sar
xor
fdivs
repz
cmp
sar
call
sub
repz
enter
lret
out
aaa
lock
loope
in
add
test
out
xchg
bnd
stc
aad
shll
fdivs
aaa
stc
testl
and
into
fucom
in
xor
cli
out
cmp
sti
fcmovne
repnz
clc
ret
sti
xchg
sarb
repz
into
ffreep
xchg
ret
std
cmp
into
loope
cmp
ret
out
icebp
xlat
ret
lds
shl
mov
icebp
clc
xor
jmp
cmp
rcl
fiaddl
leave
call
test
out
cmp
ljmp
loopne
fstp
fmuls
out
fldl
in
sti
in
iret
fdivrp
clc
fidivrl
in
xchg
in
loop
fucom
loopne
xchg
mov
out
cmc
in
in
clc
aad
cld
aad
idivb
aas
ret
in
out
filds
dec
into
shr
out
cs
stc
loop
cmp
xchg
sub
add
imul
enter
out
lock
in
cmp
xor
fcom
int
loopne
loop
cmp
sar
out
stc
sti
iret
iret
fcmovu
iret
lret
hlt
ret
ret
xor
sarl
in
ds
repz
add
loope
in
movl
out
out
mov
jmp
int3
ror
fst
mov
daa
sub
push
jg
pop
add
fdivl
ljmp
aam
cli
fdivr
in
mov
out
xchg
or
xor
cli
into
cmp
test
mov
neg
nop
in
aam
div
iret
icebp
stc
repnz
fcmovnbe
cmp
and
push
repnz
mov
nop
or
xchg
cmc
nop
lret
ror
fcom
int
lock
cmp
idivb
loop
std
jmp
cmp
roll
jecxz
int
xor
xor
sti
in
fmulp
fcmovu
test
in
mov
out
ret
lret
fstp
fsubr
out
sar
fildl
fcmove
int
repz
xchg
jmp
int3
aam
xbegin
cld
cmc
test
ret
in
xchg
cmp
sub
cmpl
mov
imul
out
lret
mov
out
aam
loop
clc
jmp
aas
addb
lret
fildl
addl
ret
icebp
xor
out
cli
repz
in
call
mov
jmp
or
fisubrs
xor
iret
fnstenv
ss
loope
test
mov
loope
fdivrp
ljmp
into
shlb
jmp
icebp
in
enter
out
jmp
test
fisttps
in
sti
clc
cld
cmp
ljmp
fcmovb
xchg
out
icebp
ror
cld
test
cmc
sar
fidivl
icebp
cli
fstp
icebp
addb
fdivp
fxch
addl
mov
subb
stc
ror
loope
cld
iret
ds
mov
fsub
stc
mov
aad
sub
xor
cmp
lret
int
lret
icebp
aas
xchg
xbegin
in
call
fisttps
lret
aaa
fsubrp
leave
cmp
in
in
lock
cli
out
ljmp
xchg
repz
ss
fmul
in
loop
xlat
stc
push
jecxz
fmull
mov
orl
fstp
xor
fmul
sar
clc
jecxz
loopne
ljmp
loopne
in
xor
hlt
fdivr
cli
fmul
cmp
and
icebp
fisttpll
out
int3
loope
int
ss
rcr
xlat
enter
cmc
test
cmp
dec
fsubp
ror
repz
aad
into
stc
int3
int
cmp
iret
stc
repz
lret
mov
leave
ljmp
xor
leave
das
cmp
lret
cmp
neg
idiv
rcl
fstp
sbb
out
bnd
leave
not
divb
movl
test
or
add
cmc
add
add
aad
aad
int
jge
in
and
mov
pop
add
fdivrl
cmc
cmp
fadd
aam
repnz
out
mov
test
hlt
lret
vpmuludq
fdivrs
sti
xchg
faddp
addb
orl
test
int3
aas
clc
xlat
out
out
out
addb
popl
mov
aaa
leave
int
shl
std
sbb
jecxz
mov
cmc
add
in
cld
lock
call
in
repnz
aam
sbb
call
cli
loope
mov
sti
sub
hlt
imul
ret
in
fdivs
enter
repnz
cld
call
jmp
xchg
fucomp
mov
hlt
cmp
cmp
lock
shl
test
out
sbb
mov
cmp
loop
loop
jecxz
xor
fucomi
cld
fidivrs
sar
fcmovnb
fcompp
out
xlat
cmc
int
out
addl
sub
in
shr
icebp
repz
ds
lret
aad
jmp
mov
lret
into
out
cld
icebp
aam
jmp
aas
cmp
and
cmp
test
xchg
xchg
jmp
in
cmp
rolb
hlt
ljmp
xchg
faddl
lret
lock
cmp
repz
in
out
test
loopne
shl
addl
lock
cmp
lock
fsub
fmul
icebp
into
cld
push
test
ljmp
fsubr
std
out
out
incl
stc
ljmp
loope
xchg
in
out
loope
jecxz
vpmullw
loop
or
out
ffreep
icebp
stc
decl
in
xchg
cmc
repz
ljmp
cmp
ret
cmp
cmp
out
test
in
repz
int3
rol
fnstenv
cmp
not
addb
test
lret
mov
lret
aad
xor
in
rcl
std
aas
cli
cmpb
rolb
cmp
xchg
test
aam
into
shl
les
ljmp
fcmovnb
loop
in
roll
call
fiadds
cmp
call
repz
aam
xchg
xlat
fnstsw
loope
mov
repnz
lret
not
lret
leave
aam
xorb
loopne
loopne
fdivp
testb
int3
int
leave
out
xchg
ror
jmp
rcl
fcmovnbe
repz
and
lock
cmp
rcl
out
rol
cli
xor
cmc
frndint
orl
jecxz
rcl
mov
inc
lds
jmp
ret
les
je
push
xchg
repz
jle
add
shll
cmp
shr
cmp
cld
test
out
in
int3
and
leave
in
lock
xlat
fdivr
xlat
fiadds
incl
out
mov
leave
rcll
enter
in
test
fadd
std
incl
addb
xchg
icebp
jmp
out
in
icebp
ss
fdivp
cli
fptan
rol
fidivrs
fadds
in
repz
repz
lock
repnz
lock
into
out
ret
cld
into
loope
ret
shll
int3
lret
lret
aam
repnz
in
in
ljmp
inc
loope
xor
ret
iret
enter
sti
out
fchs
shl
sar
rcl
fildl
in
xchg
aaa
xor
fsub
cmp
sar
in
xor
cmc
roll
mov
fadd
lock
loop
out
loop
sub
lock
rcl
std
rcr
test
rcl
cld
fcmovnbe
fiaddl
pop
xchg
lock
xor
xor
xor
fcmovnb
div
jecxz
lret
xlat
nop
jecxz
leave
lret
out
loop
aam
fxam
stc
xor
into
int
iret
cmp
out
shr
fdivp
jmp
in
out
movl
xor
icebp
lret
sar
rcl
out
movl
rol
loop
shl
shlb
fdivr
repnz
testl
test
loopne
out
call
cmp
stc
sbb
and
int3
sti
nop
icebp
and
imul
ss
cmc
sarl
hlt
xlat
cmp
loopne
icebp
fsub
fimuls
stc
call
repz
shl
xor
lret
xbegin
test
cmp
aad
lds
aam
xor
mul
sar
shr
shl
cmp
ffreep
fucom
fdiv
mul
loope
jmp
adc
adc
shl
std
hlt
sar
into
int3
in
in
shl
mov
neg
lret
in
nop
mov
xor
loope
cmc
call
in
mov
stc
and
or
iret
iret
xor
fmul
idivl
shr
cmp
sti
rcl
loop
repnz
in
jmp
xor
fidivl
in
cmp
jmp
aaa
cmp
test
mov
into
out
call
xchg
lret
cmp
int
enter
lock
stc
aad
fiaddl
in
fucomi
icebp
test
xorb
out
clc
ljmp
cmp
aaa
jecxz
cmp
roll
cld
mov
cld
inc
add
add
add
rcl
rcl
aad
add
lret
pop
iret
pop
pop
jg
pop
add
shlb
loop
repz
jmp
fidivs
cmp
repz
into
and
filds
xchg
lret
cmc
mov
cmc
out
mul
sti
out
cmp
clc
cmp
cmp
test
mov
jecxz
rcr
shl
loopne
xchg
call
cmp
shr
cld
out
sarb
cmp
rcr
fildl
leave
sbb
jmp
out
loop
xor
jmp
loopne
fnstsw
out
cmpl
cli
loope
loope
ret
out
enter
loop
into
fildll
aaa
fcmove
jmp
std
sarl
std
jecxz
xchg
jmp
lret
sbb
cmp
int
cmc
call
mov
in
sti
cmc
imul
nop
out
in
call
xor
ljmp
loop
int3
fmul
cmp
call
popl
int
int
xor
xor
aaa
fnstsw
or
out
std
loop
les
test
mov
repz
out
lret
int3
out
cmc
rcl
ret
ret
lock
fadd
mov
std
lock
out
into
xlat
cmp
out
out
ror
fnstcw
ret
in
int
xchg
repnz
mov
jmp
fcmovnu
in
iret
enter
aas
fildl
cld
xchg
sti
into
stc
fimuls
clc
in
jecxz
cmp
cmp
int3
lret
jmp
stc
fcmovu
sar
in
into
fimuls
xchg
call
enter
cmp
std
sub
xor
cli
test
in
out
repz
std
jmp
sti
stc
xor
aaa
sarl
fscale
test
ljmp
out
fsubp
ret
into
xor
iret
std
cli
stc
cld
adc
xlat
mov
mov
jmp
test
lock
out
repnz
xor
fsubrp
out
loope
cmp
aad
std
icebp
sub
test
xchg
add
xchg
mul
aaa
jecxz
out
in
out
int3
cmp
stc
repnz
sbb
sti
fadds
mov
hlt
cmp
xor
cmp
cmc
stc
int
icebp
out
ret
out
or
jecxz
or
shr
in
aam
std
hlt
fst
ss
cmc
loopne
lock
rcr
sti
lret
fmulp
out
jecxz
lret
lret
xchg
sub
repz
fsubr
lock
fnstsw
repnz
into
nop
repnz
stc
out
stc
call
lock
loop
orb
out
ret
mov
test
out
lock
fcomip
int3
cmc
aad
repnz
roll
fcmovnu
mov
in
out
sar
loop
aam
lock
neg
lock
cmp
fidivrl
xchg
loopne
test
lret
loope
shlb
movl
inc
add
jne
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
shlb
mov
pop
add
xchg
out
nop
xchg
xor
xlat
xlat
filds
clc
in
mov
ljmp
cli
idiv
leave
fdivr
out
mul
fsub
xlat
out
rol
fdiv
incb
xchg
xchg
xchg
xor
cli
fmul
fcmovnbe
jecxz
loop
xchg
icebp
ljmp
xchg
loope
in
in
repnz
icebp
in
in
cmp
rolb
mov
fldl
int
xchg
std
jmp
aaa
idivb
xor
fcomi
cli
jmp
cmp
repnz
lret
fdivrp
xchg
in
fucomip
lds
mul
int
int
icebp
cld
int3
iret
in
in
shl
rcl
fiaddl
mov
out
out
repnz
das
lret
out
ror
into
fcomi
xor
cmp
in
aas
clc
leave
jecxz
in
xlat
jmp
and
out
lock
stc
out
shll
stc
ds
aad
mul
incb
imul
out
out
fsubr
cmp
fdivl
shl
ds
mov
test
out
jecxz
sti
jmp
into
clc
lret
cmp
cmc
divl
repz
loop
jecxz
test
fildl
in
test
xor
std
repz
cld
repnz
repnz
rorb
enter
out
into
not
iret
shlb
in
cli
rcr
iret
iret
std
loop
fdivrp
cld
loopne
ret
iret
adc
ss
jecxz
out
leave
into
out
cld
neg
sti
out
fsubr
lret
loope
leave
repnz
xchg
icebp
out
cmc
xor
lret
neg
loope
std
fyl2x
icebp
xor
fisttps
cld
shl
cmp
iret
stc
call
repnz
enter
fucomi
out
fmuls
xchg
not
ret
aaa
repnz
int
hlt
xor
fcmovnu
in
fmulp
enter
mov
lret
cli
lock
ss
fdivp
ret
fdivp
cld
decb
mov
shl
leave
aam
lret
neg
loopne
rcl
sar
dec
in
mov
in
clc
jmp
in
out
idivb
imul
hlt
loope
in
cmp
movb
aas
cmp
cld
lret
fadd
rcl
iret
repz
ret
aam
out
lret
xchg
int3
hlt
loop
mov
lret
cld
aad
aam
enter
xor
cmp
aad
jmp
leave
iret
lret
mov
fcmove
cld
aad
loop
loop
out
into
and
mov
lret
roll
xchg
iret
jecxz
jmp
cmp
lock
jmp
out
call
add
add
ror
fld
and
test
in
outsw
loopne
bound
pop
add
out
fdivp
mov
leave
call
ds
rorb
in
mov
repnz
out
fnop
cs
call
test
in
out
int3
call
icebp
lea
ljmp
aas
in
hlt
sar
loop
neg
stc
loop
mov
xor
lret
fdivrs
sti
cmp
lret
rcr
test
jecxz
aas
xchg
call
int3
lret
rclb
shl
jmp
shr
test
aas
mov
std
jmp
iret
sti
out
xchg
cmp
ds
int
add
test
mov
mov
mov
out
jmp
fsubr
out
loope
cld
cmc
fiadds
mov
ds
jmp
out
call
ss
shll
iret
cs
fdiv
fdivrl
fsubrp
loopne
out
in
orb
in
into
out
int3
in
aam
cmp
ds
cmp
loop
in
loop
shl
xchg
jmp
lock
out
test
lret
lret
cmc
loopne
testb
icebp
loop
mov
jmp
enter
in
jmp
aad
jecxz
aam
fisttpl
loopne
out
xor
out
fsubr
aaa
stc
jmp
imul
loopne
in
loope
ljmp
std
int3
loopne
ror
cmc
iret
repz
ljmp
test
cld
idiv
cmc
stc
idiv
test
xchg
or
test
fsubr
out
fdivr
div
rcl
fdivr
rcl
fcomp
ret
in
orb
enter
hlt
fstpt
xor
sbb
aam
fcomp
testl
mov
aam
in
loopne
aaa
test
xlat
cmc
cmc
loope
fucom
loopne
ret
loop
int
nop
loopne
xchg
mov
cmc
into
lret
icebp
lret
iret
fcompp
sbb
out
xlat
out
lret
stc
fcomp
nop
mov
sar
xor
xor
repnz
shl
loope
shr
flds
test
fcmovbe
std
out
in
shr
cmp
cmp
ret
sti
shr
shr
neg
sub
sti
jecxz
loopne
roll
int
out
repz
lock
in
dec
call
std
icebp
in
shll
leave
call
hlt
add
in
fisttpll
xchg
rcll
ljmp
shr
rol
sti
mov
xchg
lret
jmp
sti
mov
rcl
out
jmp
fmul
in
iret
cmp
loope,pt
fdiv
loope
incb
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
jge
jb
gs
pop
add
sti
loop
lret
enter
loop
jecxz
aaa
cmp
ds
cmp
repz
mov
in
rolb
repnz
stc
sbb
fcomip
repnz
in
int
in
mov
iret
in
call
aaa
sar
xor
lock
in
in
loop
cmc
flds
sti
loopne
out
xor
xor
jecxz
cmp
loop
in
test
jmp
lret
loop
iret
hlt
call
cmp
cmp
lret
repnz
adc
cli
ret
mov
decl
nop
inc
aad
xor
leave
int3
hlt
and
hlt
mov
mov
xchg
jecxz
leave
xor
fcomi
std
aas
sti
rol
addb
sti
mov
rorl
in
xor
enter
call
fnstsw
aad
jecxz
enter
sbb
in
mov
mov
lock
xor
enter
out
iret
test
mov
lock
out
in
shrb
ret
xor
aam
into
cmp
stc
in
rol
aad
fsubr
lret
test
sbb
in
jmp
cli
fcomi
out
leave
cmc
lock
iret
cld
loopne
cmc
loope
clc
lret
fmul
ljmp
in
cmp
xor
xlat
loopne
aam
neg
aam
int
call
repz
aam
in
enter
xor
cmp
in
cmp
in
leave
aad
aad
jmp
in
jmp
int
icebp
std
cmp
into
sbb
idivl
jecxz
mov
int
icebp
int3
out
in
int3
xchg
jmp
jmp
std
hlt
shl
repz
icebp
fmuls
mov
out
out
repnz
loope
into
fdiv
into
out
icebp
call
icebp
loop
xchg
loopne
sti
fidivrl
enter
and
hlt
jmp
not
int3
xor
clc
sti
jecxz
cmp
div
les
mov
in
xor
clc
aaa
lock
repnz
idivb
fiadds
mov
iret
mov
stc
jmp
in
icebp
sti
fdivr
jmp
iret
cli
sbb
jecxz
lret
loopne
in
lret
xchg
test
out
xlat
fld
cmp
loop
sar
in
out
test
frndint
test
test
fsubr
jecxz
ljmp
fidivrs
cmc
rol
test
test
cld
out
stc
out
leave
icebp
fcmovne
xchg
ljmp
ljmp
fsubr
sbb
std
sub
xor
ret
lds
rcl
cmp
int3
int3
jecxz
in
in
ficompl
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
loop
add
push
jle
dec
jmp
out
in
xchg
in
jecxz
cmp
xlat
hlt
enter
loopne
ret
cmc
out
enter
jmp
out
xchg
cli
repnz
lret
das
cmp
clc
ffreep
cmp
cli
fcmovnb
cmp
sti
lret
out
faddl
icebp
das
jmp
cmc
call
adc
loopne
icebp
sti
clc
xchg
loop
mov
out
inc
jecxz
lret
repz
cmp
std
int
fstpt
fsubr
clc
add
aad
int
std
std
addb
enter
lret
ljmp
sar
leave
call
fucomi
nop
enter
repz
shr
f2xm1
cmp
jmp
loope
and
fcmovnb
aam
mov
in
xchg
mov
xor
out
cmp
jmp
cmp
aam
loop
xlat
rolb
mov
mov
out
mov
repz
cmp
out
fxch
iret
hlt
int3
cli
in
aas
clc
cmc
in
in
fsubr
out
ror
hlt
mov
sub
out
ffreep
fsubr
cmp
std
shl
idiv
lret
leave
stc
in
repnz
in
lock
aam
shr
sarb
in
out
cmc
out
out
loop
in
shl
fcmovu
idiv
out
cld
xchg
orb
xor
idivb
fdivs
jmp
sarb
std
test
call
aad
ds
sbb
clc
enter
fcmove
lock
std
xchg
fdivr
fdiv
aas
nop
loope
fucom
in
int
lret
cmp
loope
xlat
into
rol
fdivrp
cmp
loop
fildl
std
mov
shr
out
in
ljmp
out
out
xlat
flds
nop
lock
in
ss
div
cld
jecxz
or
loop
ljmp
iret
loopne
call
fninit
cmp
std
ss
out
loop
cmp
in
lret
xchg
or
sub
cmp
idiv
jmp
adc
cmp
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
jnp
in
push
jle
add
into
fsub
out
xchg
ret
xchg
out
jmp
shlb
cmc
shl
rol
cmp
out
faddp
rcr
cli
out
or
int
mov
ret
ljmp
std
repz
fnclex
int
xlat
dec
enter
into
lret
hlt
jmp
xlat
xor
call
adc
xlat
cli
aas
sar
jecxz
out
faddl
orl
cmp
iret
xor
incb
testb
stc
leave
orb
lret
lret
jmp
out
repnz
out
fadds
icebp
fsubrp
xchg
loope
fldcw
xor
into
ljmp
xchg
fistpll
ds
ljmp
aam
hlt
enter
cmp
out
div
ljmp
xlat
fcmovb
faddl
sub
lret
out
fsubr
hlt
in
imul
testb
fst
cmc
aam
sar
out
stc
jmp
dec
xchg
in
ror
stc
enter
ret
std
loopne
les
and
loope
test
divb
das
out
enter
cmp
repz
hlt
aas
rcr
out
std
mov
call
aam
aad
call
icebp
rcr
test
shr
repz
in
mov
lret
into
mov
nop
mov
icebp
iret
lock
fsubrp
sarl
rol
out
hlt
fxtract
xlat
jmp
jecxz
mov
leave
repnz
call
lret
jmp
loop
incl
aam
xor
in
fistl
ror
lock
repz
cmp
loope
into
rolb
aad
lea
nop
out
xchg
xor
call
out
loop
xlat
clc
std
std
icebp
test
mov
xlat
mul
mov
mov
shr
in
cmp
in
loop
in
in
out
out
std
in
in
xlat
xor
aam
rcr
std
sti
fisttps
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
outsl
mov
sbb
jle
repz
std
clc
in
ret
stc
loopne
les
div
call
ror
aas
clc
fucomip
clc
test
out
mul
loope
std
ljmp
aaa
shl
fsqrt
repnz
stc
loop
xor
lret
shl
leave
repnz
xlat
in
out
sti
into
leave
call
filds
fdivr
enter
enter
aad
int3
in
fnstenv
stc
into
out
leave
fdivr
hlt
icebp
cmp
sbb
lock
fcmovb
leave
out
in
clc
loop
in
out
in
addb
std
in
mov
std
mov
lret
std
enter
fsubp
mov
jmp
xor
shl
vpaddw
leave
out
mov
orb
hlt
in
idivb
int
xlat
call
sti
fdivrs
rol
mov
mov
ret
into
out
loopne
test
in
neg
aam
cld
int3
addl
fildl
icebp
rorl
in
ss
xlat
hlt
fdiv
lock
cld
int
stc
repnz
loopne
jmp
xchg
fiadds
ljmp
int3
jecxz
sarb
loope
cli
lret
out
out
in
std
in
jmp
stc
mul
call
clc
stc
in
repz
aad
cli
ljmp
test
cs
xor
cli
aaa
cmc
repnz
cmp
ljmp
sti
sub
ret
cmc
int
cld
ss
loop
cmp
in
cmc
in
iret
out
out
repz
jmp
hlt
cmc
test
loopne
sbb
incb
lock
cmp
adc
ror
xlat
test
mov
decl
test
std
repnz
xlat
cmc
in
repz
out
out
ret
int3
xchg
in
lret
std
shl
jmp
iret
out
int3
mov
jmp
ror
aas
int
int
jbe
repnz
jg
sbb
jle
fsub
cmp
std
cmp
in
rorb
std
cld
or
call
rcl
xor
call
in
ret
rcr
loopne
out
std
loopne
mov
jecxz
xchg
or
repnz
in
ljmp
out
shl
fmuls
out
orl
sti
out
aam
fucomi
clc
test
fneni(8087
testl
out
rcll
icebp
fidivrl
jmp
clc
cmp
rcr
test
cmp
ljmp
fdivrp
mov
bnd
sti
sarl
int
aam
rcr
loope
mov
loop
jmp
xchg
enter
sub
loope
jecxz
shl
jmp
imul
cmp
repz
cli
mov
in
mul
lock
icebp
enter
cmp
idivb
cli
mov
in
in
lret
enter
xor
std
sarl
div
icebp
jecxz
test
jmp
nop
call
rcll
jmp
cmp
leave
jmp
jecxz,pt
xlat
rcr
inc
repz
lea
xlat
xor
out
shl
ljmp
fcomp
fldl
int
cld
shr
test
cmc
aaa
int3
aad
into
shlb
sub
ds
aad
repnz
sti
std
std
test
ror
loopne
xchg
test
loop
shll
cli
out
xlat
fcmovbe
loop
lock
test
xlat
and
int3
in
fnclex
call
xor
fdivrs
stc
cmp
test
cmc
test
fld
lret
lret
mov
xchg
int
sarb
hlt
clc
out
fnstcw
fdivr
cmc
xchg
idiv
lret
iret
in
mov
repnz
rol
in
xor
rcr
repz
fcmovu
hlt
test
out
sti
mov
test
ror
out
mov
int3
cmp
aaa
fmul
int3
in
stc
aas
shl
in
in
loope
cld
loop
enter
loop
jmp
add
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
cmp
rcr
fdivr
aam
out
cmp
std
cmc
aad
shr
and
in
test
jecxz
fxch
lret
std
jmp
rol
std
roll
idiv
out
clc
fldl
in
aaa
out
test
faddl
cmp
clc
cld
lock
out
mov
fstl
int
xor
xor
aaa
sti
clc
fadd
in
loop
sti
mul
in
loop
out
adcl
sub
lret
int3
loop
iret
loop
cld
fucom
fisttps
ror
lret
in
cmc
loope
int
std
pushl
fidivs
iret
out
loop
loopne
mov
in
jmp
rcl
lret
in
cld
into
repz
hlt
loopne
sti
cmp
mov
xchg
into
in
xor
in
call
aam
idiv
fsub
cld
aam
xchg
cld
mov
test
out
leave
iret
out
enter
fldl
adc
rcr
lret
fsub
mov
dec
loop
inc
enter
clc
fidivrs
addl
mov
iret
incl
xchg
leave
mul
out
aam
lret
xorl
aas
test
sti
xor
int
fsub
hlt
iret
out
hlt
sub
stc
ss
fdiv
cld
roll
xlat
mov
out
mov
filds
jecxz
std
rcl
cmc
sub
sbb
mov
xchg
xchg
ret
repnz
lret
in
out
aam
in
into
cmp
xchg
shr
xchg
out
sub
ljmp
in
out
fdivr
fcom
ror
aad
jmp
loop
xchg
dec
xchg
shl
leave
shrl
fucomi
in
repnz
sbb
cld
ret
out
in
nop
sti
test
divb
sub
cmp
lret
fsubp
icebp
into
aad
loop
leave
cld
cld
mov
xchg
adc
xor
sti
idiv
repnz
cmp
test
rolb
sti
in
nop
mov
iret
int
xor
cmp
in
ss
fldl
int3
xchg
test
std
mov
shl
in
ljmp
cmp
ret
roll
lret
cld
out
and
aad
aam
rol
addb
fcmovbe
mov
lret
sar
mov
call
out
xor
sar
in
jmp
fcmovnu
test
or
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
dec
mov
jle
add
rcr
cmp
lock
xchg
out
lret
jmp
int
loop
sarl
fiadds
sti
loope
fimull
rcl
out
aam
ret
clc
into
bnd
cmc
aam
fdivr
out
les
cld
lret
hlt
aam
xor
enter
xor
in
sti
idiv
ret
test
cmp
sti
mov
xchg
xchg
ror
xor
ret
das
std
repz
sarl
stc
rol
ljmp
fdivr
pop
out
fmulp
sub
aaa
xor
into
divb
lock
lret
rcl
std
loopne
decb
leave
shl
mov
call
aad
jmp
incb
xlat
faddl
out
int
rcl
shl
out
int3
repz
cmp
sti
out
repnz
test
jmp
loope
out
lret
shrl
aam
aad
aad
cmp
out
cmc
cli
testl
in
cmp
mul
cmp
ds
repnz
int
stc
aad
jecxz
dec
test
decl
xchg
xor
repz
idiv
in
lret
cmp
cmp
div
fdivrl
test
stc
out
int
lret
shl
fmulp
into
sti
into
lret
cmp
cmp
fdivr
xchg
cld
out
in
icebp
shl
out
bnd
cmp
in
cmp
sti
fidivrl
fdiv
aad
fcmovu
fabs
idiv
xchg
xchg
repnz
out
call
hlt
int3
xor
ret
loopne
fldl
aam
into
mov
xchg
adc
jmp
not
clc
xlat
inc
iret
icebp
shl
loop
lret
orl
ljmp
fstpt
repnz
xlat
fdivrl
cmc
ffree
addl
faddl
in
xor
sti
ds
cld
cmpl
xlat
out
test
std
cli
enter
xchg
int
xchg
call
aaa
cmp
out
xor
leave
fsubrp
jmp
in
sti
out
aam
ret
notb
out
call
repz
cmp
cmp
in
fcom
cli
aam
mov
int
in
cli
loopne
fiadds
rcr
leave
fmul
inc
cmp
clc
fdivp
push
mov
fisttps
out
in
iret
loop
repz
cld
cmp
icebp
sarb
in
cmp
aad
stc
lret
test
ljmp
rol
sar
jmp
in
loopne
iret
out
test
jecxz
mov
clc
mov
in
je
or
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
into
dec
loop
pop
jbe
jle
add
das
repz
xlat
clc
fstpt
push
roll
aad
out
mov
and
xor
divb
fidivrs
fiaddl
cmp
fucompp
or
in
fcmovnu
loopne
call
int
xor
sarb
lock
in
cmp
shl
fiaddl
mov
sub
adcl
shl
int
jmp
cmp
xor
cmc
iret
loope
repnz
fsub
jecxz
in
aam
cs
lret
cld
fnstcw
idivb
loope
std
xchg
lock
mov
fdiv
in
cli
leave
neg
ds
stc
ror
aas
cld
loope
roll
into
out
xchg
in
nop
lock
ss
clc
icebp
cmpb
test
icebp
aas
rcl
aad
out
loopne
fcmovne
adcb
cmp
test
cmp
test
movb
test
fisttpll
xor
cmp
repnz
fdivr
repnz
fcomp
decb
fsubp
cmp
aam
lret
shl
shl
xchg
rolb
mov
fcmovnu
cmp
xchg
icebp
shrb
ret
into
out
iret
hlt
loope
in
aas
in
loop
fucomp
test
mov
mov
cmc
xor
xlat
repnz
lret
adc
aad
test
rcr
jecxz
cmp
shl
out
nop
leave
aaa
fsubr
lret
repnz
fiadds
rol
int3
test
sub
in
xchg
cmc
int
fidivrl
cmp
dec
cmp
into
sti
aam
out
test
in
and
mov
lret
test
ljmp
das
aaa
ds
cmc
cmc
roll
mov
ljmp
into
out
ljmp
rcl
imul
in
cmp
repnz
aad
in
int3
in
out
loope
loope
shl
cmp
int
icebp
pushl
icebp
lret
into
cmp
clc
loope
sub
loop
jecxz
lock
int3
cmc
aam
cmp
clc
jmp
iret
fcmovbe
cmp
rcl
cmc
loope
mov
in
cmp
icebp
loopne
jmp
les
lock
aaa
not
cmp
aam
jmp
leave
dec
addb
rcl
xor
aam
into
hlt
fcos
cmp
mov
out
cli
clc
out
cli
cld
mov
xor
aad
cmp
in
call
aad
clc
loop
out
in
jecxz
adc
icebp
lret
xor
aaa
out
and
jmp
lret
aam
aam
test
jg
lods
add
cmc
jecxz
leave
fimull
addb
int3
ljmp
call
std
ffree
icebp
movb
movl
iret
imul
sub
roll
test
in
fdivrp
fmul
rolb
in
xor
jmp
hlt
in
in
ret
xlat
repz
xlat
repz
iret
lea
out
xor
fsubr
xor
cmp
ds
rcr
ds
call
sti
in
mov
jmp
ret
clc
out
aaa
ror
lret
cmp
cmp
aad
repnz
sar
lea
call
lock
stc
jmp
fincstp
into
fdivp
aad
cmp
cld
stc
jmp
out
mov
cli
lock
cmp
int
cmp
ffree
mul
vpaddsb
out
loopne
xchg
lret
ret
les
xor
jmp
stc
xor
roll
incb
out
xchg
out
loop
loopne
out
repz
rcr
shl
neg
clc
aam
icebp
jecxz
lds
roll
lds
loope
fcomi
test
xor
repnz
and
or
jmp
rcl
ljmp
into
cld
cmp
cmp
cmc
decl
int
into
mov
int
repnz
lock
jmp
fcom
xlat
fcmove
aam
cmp
loope
fcomip
std
fcomp
icebp
rcl
xchg
cmp
cmp
in
xlat
cmp
repnz
in
rol
fucomp
addl
xchg
cmp
in
in
repnz
test
icebp
shl
cld
les
jmp
aad
int3
hlt
int
icebp
in
into
xor
into
hlt
out
xchg
fiadds
out
sub
out
in
lret
in
repz
ds
lock
into
aam
mov
enter
out
xchg
loope
sti
cli
repz
in
lret
rolb
in
mov
dec
lret
mov
lock
out
cmp
neg
leave
int3
leave
not
in
cli
ret
ret
xlat
mov
mov
repz
out
xor
out
icebp
fsub
ret
rol
fsub
clc
or
mov
dec
int
aas
hlt
fcom
aaa
cs
jmp
std
hlt
faddp
mov
out
fxch
xchg
test
loopne
repz
fpatan
jmp
fadds
shl
xchg
fsubrp
orb
add
add
add
add
movl
enter
int
lds
mov
jle
add
add
xor
sarb
aaa
idivl
sar
ror
aas
repz
xlat
fsubrp
cmp
jecxz
leave
ret
leave
jmp
in
in
fmulp
loope
cmp
and
mul
jecxz
in
jecxz
cmc
in
shr
repz
stc
cmp
xor
cli
out
stc
jmp
cmp
mov
cld
mov
loop
ror
in
xlat
cli
aaa
lret
cmp
cmp
mov
jmp
mov
mov
in
divb
hlt
cli
xor
cld
in
std
hlt
fmulp
loope
fcmovnu
in
loop
and
sub
sarl
ror
repz
clc
aad
addb
mov
out
aaa
in
ljmp
in
hlt
loop
fsubr
fadds
out
nop
into
das
fdivs
fsubr
fmul
clc
lock
aad
faddp
loopne
mov
addl
ret
iret
cmp
cli
leave
aas
ds
adc
mul
fld
lret
in
loope
mov
xchg
in
lret
das
ret
xor
jmp
leave
cld
iret
shl
ret
fdivr
fnclex
cmp
stc
int
icebp
int
ljmp
repnz
shl
fcmovnu
rcl
leave
addb
rclb
in
ss
stc
stc
into
or
div
xlat
jecxz
fincstp
in
fcomip
fsubrp
in
ljmp
lret
out
fnstsw
repz
loop
cmc
div
call
std
xchg
repz
fcmovbe
neg
leave
fmul
int3
shl
fildl
fcom
fcmovb
cld
testl
das
loop
out
sar
dec
in
stc
div
fld
test
lret
loopne
divb
in
cmp
shl
lock
cmpl
mov
lock
sti
out
mov
clc
xor
cmp
xor
and
in
xchg
movl
repz
xor
enter
shll
shr
into
repz
fsubr
mov
xlat
jmp
iret
xchg
lret
clc
ror
in
cld
into
aaa
int3
ret
stc
test
in
fcmovne
lret
jmp
shl
int3
xlat
out
fcmovnu
repnz
loope
ret
cmp
cmp
loop
loopne
leave
xchg
mov
into
into
test
stc
call
cmp
fucomp
cmp
cmc
ret
mov
jmp
lret
jmp
rcl
xor
into
hlt
cmp
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
mov
fs
sub
add
add
cli
vshufps
mov
ret
testb
mul
bnd
fsub
xor
hlt
hlt
loope
sbb
loop
cli
fsubrp
fucom
mov
out
aam
loope
aaa
cmc
cld
out
enter
loopne
filds
mov
test
loopne
nop
call
ror
xor
cld
testl
and
cld
cli
ljmp
out
xor
ss
cmp
aaa
cmp
jmp
shl
faddl
enter
in
int
lock
div
leave
fcmovne
std
xor
jecxz
repz
ljmp
addb
sarl
repnz
fidivl
hlt
xor
in
ret
shl
shr
mov
leave
fxch
sti
loop
mov
ret
in
das
cmp
rcl
add
movl
xchg
nop
loop
mul
mov
repz
fcom
cmp
loopne
repnz
fsubr
cmp
jmp
loop
ror
jmp
hlt
repnz
hlt
in
int
aad
or
clc
in
jecxz
enter
xchg
jecxz
xor
fdiv
clc
in
ljmp
loopne
rol
jmp
loope
out
xchg
loop
into
stc
sar
out
xor
test
fdivp
les
mov
fimuls
loope
ror
xor
leave
lock
in
aad
jecxz
in
sti
jecxz
jecxz
xchg
out
xchg
in
hlt
shll
imul
hlt
cmp
into
lret
in
loopne
fsubr
fmulp
neg
mov
stc
in
mov
repnz
xlat
not
jmp
ffree
dec
cmpb
sti
faddp
fdivr
out
int3
in
xchg
hlt
fmulp
hlt
int
ss
in
int3
stc
std
cmp
lock
iret
shl
adc
ljmp
aam
xor
cmc
stc
iret
fcmove
cmp
xor
ds
aad
jecxz
test
int
in
lea
int
xlat
in
aam
fcmovnb
lds
xor
mov
enter
ss
lret
cmp
ds
loop
out
lret
ret
out
mov
jmp
jecxz
in
repnz
cld
cmp
cmc
cmc
cmp
shl
out
shl
test
test
out
xchg
mov
out
xor
leave
xor
call
fcmovbe
ret
cmp
jecxz
mov
cmc
hlt
out
div
in
fnstcw
icebp
cld
ss
in
ffreep
loope
loope
xchg
call
xor
jmp
aad
lret
enter
fcmovnu
push
icebp
ret
in
sbbl
jle
add
mov
shl
out
cmc
leave
cmp
rcl
aad
fadd
ret
mov
fsubrp
test
xchg
aad
leave
das
int
out
cmp
div
ror
not
aas
sar
sub
mov
xchg
loop
neg
sti
rcl
ds
out
inc
loope
sti
std
fadd
jecxz
loopne
fcmovu
addl
into
aaa
into
loopne
out
cld
lock
repz
jmp
in
lea
cmc
xor
repz
out
aas
testb
jecxz
and
addl
ret
xor
fcmovne
rcl
cli
shl
repnz
hlt
fsub
jmp
out
loop
or
mov
sarl
test
ljmp
into
test
in
std
jmp
mov
int
xchg
jecxz
in
repnz
stc
addl
out
rolb
leave
int3
ror
and
clc
neg
test
jecxz
fdivr
call
test
sub
fnstcw
fidivrs
shl
sti
hlt
xlat
xlat
in
mov
mov
test
out
cmp
rcr
fdivr
shl
repnz
cli
sbb
loop
mov
aaa
out
ret
shr
in
int
sti
fildl
cli
ffreep
sub
xlat
fmul
lret
lock
xchg
nop
clc
xor
out
fcmovne
cli
cmp
repz
int3
cmp
out
loop
repz
ret
in
xlat
std
stc
lret
sar
jmp
lock
fnstsw
lock
lock
test
xchg
jmp
repnz
call
iret
lret
into
xlat
int
in
into
clc
std
fcmovnbe
movb
jecxz
shl
aam
jmp
in
in
in
cmp
repz
and
fsub
in
jmp
xchg
mov
int
clc
xor
fucomip
push
incl
fimull
lds
call
xor
shlb
clc
cmp
xchg
cmc
orb
testb
cmp
xor
fidivrl
fadd
in
flds
cmp
leave
cld
out
aam
repnz
in
lret
icebp
out
xlat
cmp
cmc
iret
icebp
xchg
lret
lock
xchg
xchg
std
xchg
shll
rcl
jmp
cmp
fmul
int
loopne
jmp
ret
out
lret
in
repnz
xor
lret
cmc
out
lret
add
mov
mov
xor
jmp
enter
int
enter
push
add
add
jle
add
fsub
fcmovnb
call
enter
cli
out
nop
icebp
xchg
jmp
call
call
lock
sub
cld
test
out
mov
mov
fisttpl
out
jmp
rcl
ljmp
cli
loopne
loope
fsub
out
mov
mov
adc
in
fcom
aam
fstp
sti
int
cld
cli
sbb
in
fsub
xchg
lret
int3
aam
shr
out
lock
xor
shr
ds
sti
incb
loope
test
icebp
loope
in
xchg
xor
hlt
cmp
xlat
jmp
repnz
sti
aad
rol
fucomip
aas
test
in
cli
mov
loope
jecxz
in
hlt
clc
sti
std
aad
fdivrl
jecxz
out
and
mul
call
rorb
cmp
xor
lret
fst
xor
loope
mov
mov
aaa
sti
into
icebp
cmp
cld
cmp
loop
shl
xor
xchg
int
std
enter
out
cs
out
lock
out
ljmp
test
mov
cli
xchg
in
in
repnz
xor
cmp
xor
clc
out
cmp
loopne
fsub
cld
fadd
jmp
std
sti
or
out
fprem
aam
fsin
cli
int
rcl
in
stc
inc
loop
or
out
fiadds
shl
vshufpd
fcmovnbe
shlb
cmc
jmp
neg
fnop
xchg
ljmp
xchg
xchg
into
xor
xlat
rol
cmp
cmp
repnz
icebp
fsubr
out
nop
mov
enter
fsubrp
push
cld
in
cld
cld
in
ffreep
test
cmp
in
out
repnz
sub
aaa
repz
clc
call
xor
int
shl
mov
xor
aad
cld
cld
out
mov
xchg
mov
test
imul
cmp
lret
jecxz
sar
out
aam
fcmovu
jmp
in
sub
repnz
rcl
leave
cmp
loope
in
iret
xor
in
stc
mov
mov
lock
sbb
xchg
jmp
out
fcmovnu
test
fdivrl
call
mov
out
loopne
ljmp
hlt
rcl
lret
stc
loopne
out
cmp
in
in
fsub
enter
cld
aad
aad
jmp
out
aad
repz
int
clc
icebp
cld
cmc
call
sbb
jmp
enter
clc
aad
iret
rol
int3
aam
cmp
clc
call
aam
jmp
lret
mov
xor
jmp
aas
lret
fcmovnu
xlat
aad
jno
in
lods
cmp
add
add
in
test
xor
fcmove
fdivrs
int
clc
fdivr
shl
test
ret
addl
ret
xor
xor
ljmp
mov
out
std
loop
mov
loop
ror
aam
fcom
fcmovnu
rcl
sarb
aaa
out
ffreep
jecxz
out
fdivr
xlat
iret
cld
test
cld
fucom
jecxz
in
jecxz
lret
cli
leave
aad
test
jmp
clc
enter
xchg
in
jmp
out
clc
xor
fnstsw
loopne
aas
fnop
test
xchg
fxch
lret
mov
rcl
neg
jmp
not
repnz
sti
loope
stc
ret
aad
lds
leave
faddp
enter
clc
ret
sti
out
sti
lret
loop
aas
fabs
fadd
std
leave
loope
cli
call
ret
int3
fsub
sar
lret
cmp
aam
ret
fmul
aam
aam
out
jmp
mov
sti
int
cli
fsubr
fldln2
int3
shr
in
sbb
fildl
incl
cmp
out
jmp
std
lock
jmp
cld
enter
adc
fisttps
clc
xor
cmp
jmp
cld
iret
aam
test
sar
dec
mov
in
int3
int
in
std
out
xor
ret
sar
out
cmp
iret
icebp
cmp
into
std
out
rol
fiaddl
lock
xchg
loopne
mov
leave
sub
enter
out
std
cld
cmp
imul
aad
filds
std
call
shl
lock
fnsave
fsubr
aas
jmp
into
in
fdivr
lret
in
icebp
mov
int
jmp
stc
out
idiv
cmp
jmp
idiv
cmp
int3
fsubr
int
jmp
rcr
xor
enter
cmp
fmulp
idivl
out
cmp
enter
leave
mov
adcb
xor
add
rolb
ljmp
loop
int3
jmp
in
xor
jmp
stc
lock
cld
loopne
rcl
in
fcom
loop
rcr
mov
and
loopne
call
int
call
jmp
fcmovb
cmp
aam
loope
jecxz
out
aam
shl
aaa
icebp
cmp
cmp
ror
cmp
loop
test
clc
shl
repnz
test
mov
fnop
incb
das
repnz
vpsubw
aas
cli
out
std
in
cli
jecxz
enter
out
and
iret
out
cmc
aam
in
out
idivb
ljmp
mov
jmp
into
enter
int3
fwait
outsb
mov
pop
cwtl
add
push
add
repz
loop
stc
fcmovbe
xacquire
call
cmc
std
xchg
leave
lret
into
out
ds
std
lock
cmp
call
std
xor
ret
in
fnstenv
enter
std
cld
ffreep
fdivr
sti
jmp
mov
shl
out
int
aaa
xor
in
lret
xlat
repz
stc
fdivp
repnz
ror
fsubr
out
leave
int3
lret
xchg
lret
in
repz
std
sbb
ffree
mov
lret
sub
loop
in
ljmp
call
iret
aas
xchg
xchg
fadds
mov
into
bnd
int
into
fildl
sarb
loopne
cmp
xlat
cli
jmp
xchg
loope
vpaddb
flds
iret
sti
sti
test
fstpt
mov
rol
loop
lock
cmc
in
int
jmp
iret
ret
xor
call
repz
shl
leave
xor
aad
shl
into
in
flds
into
icebp
std
jmp
in
lock
repz
xor
stc
fnstcw
aaa
add
test
mov
mov
xor
in
icebp
fcmove
repz
hlt
fdivr
jecxz
shl
leave
fcmove
sbb
test
fxch
fisttps
bnd
cmp
repz
rol
repnz
sub
xchg
int3
xor
cmp
shl
loopne
clc
ds
xchg
loope
cmp
in
mov
lock
ror
out
loopne
xor
sarb
stc
shl
hlt
addl
in
rolb
cli
fidivrl
cmp
into
into
cmc
xlat
shl
xlat
in
lret
mov
call
lret
fidivrs
cmp
hlt
cmp
clc
std
loopne
vpcomud
shr
jmp
repz
ss
out
shr
cmp
lock
out
ds
jecxz
enter
fst
in
repz
xor
shr
icebp
jmp
xlat
iret
fdivp
jmp
test
mov
cmp
aam
dec
in
stc
fcomi
incb
inc
fxch
iret
orb
imul
into
in
cmc
jmp
rol
ret
fdiv
repz
out
lret
faddl
xor
sub
xlat
cmp
adc
fdiv
fsubp
loope
mov
jmp
leave
iret
int3
into
fstp
pushf
mov
jmp
jle
add
xchg
leave
icebp
decb
fidivl
aad
fstp
in
fdivrs
ds
idiv
cmp
iret
jecxz
std
sbb
aam
xor
fsubr
cli
stc
leave
incl
sarb
rol
mov
enter
loop
repnz
xor
repz
cld
in
divb
repnz
ror
orb
nop
ljmp
out
cli
cmp
ror
div
fiaddl
sar
neg
sti
lock
xlat
enter
repnz
clc
out
fcomip
fucom
fsub
fcmovb
out
jmp
shr
call
jecxz
cmp
in
cmp
ds
jmp
repnz
fucomi
in
enter
in
ljmp
fcmovnbe
std
cli
cmp
int
into
hlt
cld
into
loope
vpsubq
sti
lret
repz
loopne
ljmp
aam
jmp
cli
fcmovb
ret
xchg
shr
lock
mov
out
ds
ss
cmc
mov
leave
clc
mov
test
int3
in
xacquire
repnz
in
idiv
int3
jecxz
std
into
mov
repz
hlt
cld
sub
ficoms
test
leave
cmc
rcr
hlt
stc
cmc
fcmovbe
rcl
and
lret
sti
ljmp
out
in
in
shl
xor
rcl
aam
stc
in
shl
lock
ds
jecxz
std
xchg
loop
into
cs
into
std
hlt
out
aam
cli
into
clc
into
xlat
call
int
enter
shr
aad
in
aam
cld
xor
in
iret
out
jmp
loopne
aas
call
lret
out
std
xchg
lret
xor
das
sarl
neg
fst
repz
repz
in
leave
out
xchg
jmp
cmp
shll
in
dec
in
out
lock
lock
loop
jecxz
loopne
leave
fimuls
in
out
aaa
rol
shll
cli
incb
jmp
fmulp
out
dec
lret
jecxz
cmp
xor
sbb
stc
shl
out
aas
fdivr
in
jmp
in
jmp
cld
mov
enter
fcmovne
xor
leave
jmp
sti
imul
jmp
out
into
stc
sbb
out
repz
int
neg
call
stc
cmc
cmp
cld
mov
jmp
out
fadds
rorb
test
leave
icebp
repz
iret
out
xchg
loopne
xchg
mov
ret
out
leave
cmp
mov
add
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
imul
sbb
roll
aas
fsub
in
int3
loopne
add
in
int
stc
lret
cmp
idiv
rol
test
cmc
mov
fucom
loop
jmp
leave
frstpm(287
in
ror
fsub
xlat
loopne
clc
fdivr
fisttps
nop
enter
out
int3
out
int
clc
jecxz
bnd
stc
cmp
int3
repz
fsub
roll
out
int3
out
loope
aaa
out
loop
sar
cmp
repz
repnz
clc
fincstp
test
in
mov
ror
out
rcl
loop
xor
cmp
cmp
stc
jmp
adc
mov
leave
ljmp
rcl
aad
icebp
sti
shrb
in
jmp
cmp
test
addl
enter
fdivrp
std
or
int
cmp
sti
repnz
xor
addb
leave
jmp
call
test
ret
out
icebp
stc
sti
int
not
sbb
loope
in
stc
lds
jecxz
repnz
enter
cmp
fsubr
xor
fdivrs
fsub
xchg
loopne
out
sub
clc
ret
sarl
leave
in
repz
jmp
loopne
hlt
fimull
decl
rorb
stc
cs
sarb
jecxz
cmp
inc
mov
into
loope
in
xchg
loope
loop
in
clc
rcr
int
cmc
fcomp
call
loopne
loop
ljmp
fld
mov
sub
repz
xor
shr
sti
fnstcw
test
mov
test
hlt
xchg
xchg
xor
into
ss
out
repz
out
shl
addl
mov
repz
into
fst
aaa
iret
ljmp
cli
mul
aad
aad
lock
clc
decb
rcll
iret
lret
stc
xlat
iret
cmp
jecxz
xchg
mov
enter
int
out
in
iret
repnz
xor
out
rol
lret
out
repz
not
enter
movl
cs
xor
sti
fidivrs
rcr
jmp
int3
cmp
test
jecxz
call
xchg
cmp
aad
cmp
fsub
ds
aad
aad
idiv
decb
fldl2t
iret
rcl
in
in
in
in
xor
out
cmp
fxam
faddl
fcomi
std
out
in
jmp
in
in
out
fcmovbe
repnz
loop
ret
in
mov
xchg
add
add
lret
iret
into
aad
leave
fnsave
cmp
mov
adc
jle
add
in
icebp
xchg
jecxz
enter
out
xor
out
repz
and
fcmovne
orb
xchg
icebp
xor
fcmovbe
int3
std
aam
divb
ljmp
push
in
sub
jecxz
cmp
shll
jmp
call
loopne
xor
add
loop
in
int3
fdiv
ljmp
cli
into
jmp
out
int3
std
iret
cmp
loop
addb
test
std
call
jmp
clc
fdivrs
xlat
int
loop
cli
fcmovnu
mov
int3
fucomip
call
clc
into
fucomi
enter
cmp
cmp
rolb
cld
fsub
out
jmp
test
ljmp
std
cmc
lret
cmp
inc
std
sub
sub
lret
out
aam
shll
ror
enter
out
fcom
ds
mov
out
fildl
lret
xchg
out
into
aaa
jecxz
fcmove
out
cmp
out
xlat
loopne
ret
fucomp
in
lret
loopne
in
rorl
cli
aad
xlat
fsubr
sti
sar
int
fiadds
loopne
out
sub
xchg
mov
rcl
jecxz
neg
enter
sub
aas
vpsubb
rorb
in
addb
les
xor
clc
roll
hlt
fcmove
mov
into
loope
fsubr
out
jecxz
out
out
iret
xlat
ljmp
add
clc
out
ljmp
loopne
xor
call
ljmp
in
mov
lret
dec
xchg
jmp
test
in
out
icebp
shr
shl
idivb
dec
lret
loope
repnz
jmp
cli
fucomi
lock
in
xchg
cs
cmc
icebp
fdivrs
lret
sbb
add
rol
mov
shr
call
loopne
cmc
ror
repz
int
shl
add
in
inc
sti
fcomi
fldz
in
out
or
and
iret
hlt
ss
hlt
ds
rcr
stc
hlt
cld
ljmp
int3
test
mov
cmc
test
shr
sti
cmp
jmp
sbb
rol
cmc
test
cli
ljmp
int
in
xor
into
rcl
sar
addl
ljmp
xchg
fstl
into
in
in
into
shl
sarb
inc
fld
lock
fcmovnu
mov
mov
out
das
lock
pop
test
je
jmp
mov
int
sub
movsb
adc
jle
add
cmp
stc
lret
add
out
cmc
call
jecxz
sub
enter
imul
test
shl
in
xchg
orl
in
loop
xchg
aas
enter
into
out
clc
ds
out
bnd
shr
mov
jmp
fnclex
mov
out
mov
out
in
hlt
repnz
aam
fdivr
repz
cmp
fcomip
icebp
mov
leave
loope
sti
idiv
flds
aad
int
in
xor
ljmp
xlat
loopne
enter
loopne
out
jmp
sbb
lock
out
not
call
into
stc
sar
addl
xchg
out
fisttpll
shr
std
jmp
repz
aam
shr
fsubp
mov
out
int3
out
mov
loop
out
cmp
xbegin
fdecstp
loop
fdivr
mov
ret
in
test
mov
xor
int
repnz
xlat
aas
and
rcl
loop
loopne
mov
fxch
iret
lret
ljmp
shr
cld
in
aad
cmp
in
fcomip
fst
fildl
cld
xchg
icebp
fisttpll
fcmovbe
rcl
push
hlt
in
sti
cli
idiv
cli
xchg
jmp
loop
fmuls
mov
out
leave
cmc
sub
ds
dec
cmp
ljmp
cli
sub
mov
aas
hlt
loop
cmp
cmp
jmp
sar
out
hlt
std
cli
clc
fcmovnbe
cld
fadds
int
std
in
loop
ljmp
addb
icebp
hlt
fcmove
in
cld
fstl
out
lds
imul
out
sar
int
fxch
lock
rcl
fmull
loopne
dec
fsubrp
divb
clc
int
cld
out
aam
ljmp
enter
ret
in
and
sub
repz
jmp
aaa
icebp
ret
into
xlat
in
fadds
add
or
out
call
out
aaa
jecxz
loope
jmp
testl
in
lock
lret
aam
xor
std
fildl
aad
les
fcmovu
test
jecxz
out
mov
icebp
xchg
leave
test
in
aam
shl
adc
mov
mov
xchg
repnz
aaa
repnz
aaa
aam
ds
in
sti
cli
cli
cld
sbb
jmp
into
ret
in
jmp
xorl
in
fcmovnb
call
cmp
repnz
shl
fsub
in
pushl
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
adc
xlat
rcll
add
add
int3
add
in
fxch
call
shr
std
shl
stc
lock
leave
std
in
xchg
aam
shl
clc
hlt
rol
fmulp
in
into
lock
vpmaxub
vpsubusw
xchg
int
out
mov
shrl
cmc
ror
fdivs
stc
jmp
into
out
rolb
rcr
lret
stc
jmp
mov
and
lret
repnz
int3
mul
addb
mov
out
mov
xchg
lret
and
fld
jecxz
repnz
fcompp
fxch
repnz
cld
std
repz
xlat
lret
jmp
iret
leave
fstpt
fucomp
cmp
jecxz
fadds
xor
jecxz
test
mov
mov
out
sub
aam
in
sarb
out
incb
adc
jmp
loopne
mov
xor
leave
fstp
cmp
sar
mov
lret
decb
int3
jecxz
lret
aaa
repz
cld
into
cmp
addl
fmul
incl
notb
in
repz
cli
repnz
repnz
fldl
stc
cli
filds
rorl
xor
sti
out
clc
jmp
fdivr
int
into
ret
repnz
in
fmull
test
xor
faddl
test
ret
leave
lds
lret
icebp
nop
fsub
xor
cli
sar
std
in
cmp
out
in
lret
lret
xchg
hlt
in
mov
int3
hlt
fmul
out
addl
out
les
shr
in
cs
repz
xor
std
cmp
mul
in
fsub
stc
cld
div
leave
xchg
leave
xchg
adcb
call
cmp
cmp
ds
rcl
clc
stc
lret
mov
mov
stc
mov
div
shr
cmc
in
rcl
jmp
neg
std
test
fdivr
sti
rcr
test
mov
lds
fsub
lret
out
call
cmp
xchg
enter
rcr
test
cmc
xor
std
shl
in
lock
hlt
iret
loop
jecxz
jmp
in
repz
out
out
ljmp
jecxz
rcl
test
xlat
xlat
or
sti
mov
jecxz
decb
rcl
call
sti
fiaddl
test
cli
mov
lret
mov
repnz
mov
leave
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
add
add
repz
into
std
aad
ret
mov
das
lret
xor
loope
rcr
xchg
cmc
mov
mov
ficoms
loop
cs
cmp
sar
loopne
fstp
shl
fldl2t
fadd
out
fcom
fucom
orl
int
jmp
ror
lock
loop
cmpb
fucompp
rorl
loop
jmp
shr
xlat
int
iret
iret
lret
cmp
fdivrp
not
fdivp
aas
mul
loop
in
fxch
loopne
jmp
jecxz
into
repnz
cmp
xor
lock
cmp
xor
loope
fiaddl
clc
in
fucomip
xchg
fdiv
out
aam
shl
xor
fcmove
cmp
repnz
rol
in
out
cmp
xchg
jmp
cli
fmulp
stc
mov
test
adcb
lret
fidivrl
ljmp
loop
clc
ret
mov
jecxz
clc
jmp
rcl
cmc
int
out
aaa
xor
lock
cmp
loopne
mov
dec
xchg
in
loopne
jmp
stc
fucomi
fcom
aam
clc
iret
loopne
fld
testl
neg
ljmp
int3
std
cmc
loopne
fcmovb
loop
mov
lret
jecxz
mov
in
in
loope
fidivl
enter
stc
call
ljmp
in
lret
xchg
leave
in
clc
ljmp
rcr
loop
cmp
lret
leave
ffree
sbb
dec
sbb
loope
leave
icebp
neg
iret
ljmp
loop
test
ljmp
out
or
fcomp
fcmovnu
icebp
sti
fnstsw
iret
cmp
jecxz
out
aam
cld
fsubp
fcmovu
int
enter
xor
test
fstpt
fsub
cld
mov
xchg
jmp
xlat
cmp
leave
aad
loope
lret
cmp
out
aad
lret
leave
lock
jmp
iret
std
fists
out
int
cmp
hlt
adc
cli
mov
test
leave
jmp
push
subl
jmp
rcl
enter
fldl
push
xchg
mov
sbb
jle
add
loop
int3
int3
repz
xlat
cmp
ror
hlt
shl
imul
xchg
in
mov
mov
cmp
aaa
iret
clc
xor
repnz
in
loope
fld1
mov
in
in
mov
ror
xor
imul
fld
not
std
int
push
hlt
aam
aam
ljmp
sub
lret
ret
imul
ffree
cmp
xlat
cmp
testl
out
xchg
add
test
fsubr
cmp
lret
cmp
fildl
ljmp
icebp
xor
lret
in
cmp
std
rcr
out
repz
shl
out
test
fisttps
ljmp
cmp
ljmp
xor
sti
fiaddl
in
loope
ss
icebp
push
sarb
lock
aas
faddp
leave
in
xchg
mov
sub
int
in
repnz
fnclex
in
out
out
mov
idiv
mov
shlb
loopne
cmp
movb
int3
enter
nop
incb
fcmovu
into
cmp
xlat
cli
test
loope
out
jecxz
cmp
in
mov
mov
stc
shll
enter
cmc
rcl
sbb
stc
ffree
faddp
test
mov
loopne
out
stc
lock
enter
icebp
fiadds
rcr
fcomip
in
fstp
sbb
mov
xchg
icebp
test
stc
pushl
out
in
fcmovb
std
rol
cmc
rol
cli
ret
in
mov
test
repnz
loope
xor
lret
into
aas
in
lret
shr
jecxz
cmp
test
clc
cli
jmp
xor
into
cmp
in
in
fld
clc
cmp
out
mov
int3
call
xchg
loope
int
leave
cmp
fmul
lret
xor
aad
cmp
in
xlat
jmp
in
inc
jmp
xchg
shl
fsubr
ret
das
ljmp
xor
fcmovnb
mov
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
mov
mov
cmp
jle
loope
cli
test
aam
cmp
test
fdecstp
cmp
repz
ffreep
xchg
inc
ljmp
hlt
repz
clc
cmp
jmp
cmp
xchg
loopne
pause
out
xchg
rol
enter
jmp
icebp
dec
repz
fcmovbe
mov
clc
rclb
loope
fistpll
int
cli
cmp
fcmovu
cmp
sbb
lock
cmc
cli
dec
in
faddp
cld
ljmp
xor
cmc
fdiv
lret
fdivr
cmp
stc
in
aad
les
out
loopne
jmp
cli
lret
jmp
mov
repz
fdivrl
fcmovu
loopne
loopne
cmp
test
int3
loopne
mov
icebp
in
fsubrp
das
jmp
aaa
ss
aad
loopne
mov
icebp
mov
loope
repz
leave
cmp
hlt
sti
add
into
cmc
in
xor
hlt
test
in
in
xchg
incb
call
icebp
icebp
fidivrs
shl
push
loope
rorl
cld
hlt
lret
int
lret
xlat
cmp
int
aas
cmp
cld
testl
fucom
or
repnz
loop
nop
xor
lds
in
lock
cmp
mov
in
cmp
in
fcom
cmp
out
cli
cmp
fdivrl
call
ret
fsubr
icebp
out
lret
xchg
shl
shl
fxch
fdivrs
cmp
loopne
ds
test
addb
or
out
xor
iret
fsubr
in
out
lock
aam
fdivp
shl
fiaddl
ret
xchg
addl
xor
cli
call
loopne
jecxz
test
aam
sub
leave
xchg
loope
mov
fmul
cld
shlb
ror
cld
in
cmc
roll
frndint
mov
ljmp
aas
lret
cmc
aaa
out
repnz
xlat
adc
aas
not
out
cmp
in
mov
loope
cld
icebp
fldl
cmp
shl
adc
loopne
sti
fcmovnbe
cmp
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
leave
aas
sti
mov
int3
jmp
iret
xchg
int
shlb
in
enter
neg
in
rcr
shr
xchg
cli
int
loopne
out
repz
xchg
faddp
fmul
shll
shl
cmp
cli
loope
fcmovnb
xchg
in
mov
mov
fcmove
loop
nop
mul
ror
xor
icebp
in
repnz
repz
rcr
mov
lret
testl
aaa
xlat
xlat
enter
cmp
jecxz
fcomp
addl
out
jecxz
xchg
out
xor
rcl
cmp
iret
lock
xor
xlat
testl
cli
in
repz
stc
lock
repz
cmp
xor
loop
hlt
clc
xlat
into
test
test
call
sub
mov
std
cmp
shl
cli
repz
in
mov
mov
repnz
xlat
repnz
fldlg2
aad
sub
mov
loope
in
mov
lock
ljmp
cmp
into
aam
rcr
cmp
fsub
fiadds
xor
in
cmp
cmc
ret
call
fcomi
mov
loopne
jmp
sti
cmp
lret
cmp
aam
sti
call
loope
out
in
ror
fdiv
in
aam
leave
cmp
cmp
lret
cmp
filds
fmuls
xchg
stc
ljmp
cmp
orl
out
mov
out
int3
aad
in
aaa
in
call
in
fmul
ds
loope
ffreep
out
out
loop
hlt
rolb
out
sarl
repnz
sti
std
fcmovbe
xchg
testb
leave
fiadds
out
stc
stc
cmp
cmp
loope
hlt
flds
leave
out
loopne
xchg
rorb
in
out
ss
fcomip
idivb
xchg
leave
in
in
out
test
fmul
clc
int
cmp
cmp
ss
mov
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
mov
and
jle
add
jecxz
neg
fiaddl
xlat
mov
mov
mov
hlt
shr
sub
into
cmp
stc
ret
loopne
xchg
xchg
repnz
jmp
sti
out
cmp
xchg
out
shl
test
mov
out
fdivs
xor
into
out
cmp
jmp
fadd
ret
cmpl
jmp
test
sar
iret
xlat
cmp
int
fsubr
loope
fst
ror
in
and
int3
int3
xor
std
sar
in
inc
in
test
out
ds
into
rcl
jecxz
stc
ret
out
ror
cmp
aad
iret
or
icebp
stc
repnz
fimuls
stc
incl
call
out
fmulp
leave
sar
sarl
std
incl
dec
filds
iret
out
cld
aad
cmp
rol
icebp
fdiv
faddp
in
inc
icebp
lock
jmp
in
xor
jmp
stc
xor
stc
fcmovnbe
cmp
fiadds
mov
mov
in
out
in
cli
in
fst
in
cmp
lret
ror
aas
fcomip
aas
fcom
shl
icebp
out
aam
test
mov
icebp
call
mul
xor
inc
cmp
jmp
jecxz
loope
out
aam
mov
in
call
lret
out
xor
out
iret
int3
imul
xlat
cmc
stc
hlt
xor
icebp
test
loopne
fcmovu
xchg
cmc
aam
sarl
in
ds
rcl
idiv
aas
fadd
int
stc
mov
int3
int
xchg
in
in
enter
cmp
cmc
fcos
ds
clc
in
fnstsw
mov
aad
cld
xchg
into
into
xchg
int3
and
int3
xor
fmul
in
ljmp
iret
ret
out
testl
out
fsubr
lock
les
cli
stc
fdivr
cmp
fld
cmp
sub
in
out
out
mov
xor
aam
lret
loope
fsub
ds
test
mov
in
leave
aam
cli
sub
add
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
std
fstp
out
aaa
fucomip
fninit
call
lea
incl
xor
cmp
lock
loopne
test
std
ljmp
mov
in
cmc
in
in
clc
div
lock
out
loop
fldl
in
xchg
jmp
das
lock
xlat
aaa
loope
int3
out
shl
out
cli
fucom
std
enter
sbb
lds
ss
leave
cmc
cmp
iret
ret
stc
out
fsubp
ret
xchg
xchg
mov
shr
aam
repz
iret
lret
fdivr
jecxz
test
inc
in
xlat
mov
lock
test
cmp
jecxz
fdivr
aam
mov
mov
xlat
ljmp
fdivs
jmp
out
fmul
in
clc
lret
out
ret
xabort
fsubp
loopne
call
cmc
xor
aam
cmp
icebp
jmp
cli
fcom
fiaddl
fcomp
in
lock
xchg
out
aam
fldl2e
loop
in
idiv
loope
icebp
rcl
ret
in
jmp
loope
fpatan
xchg
out
int
repz
xor
fdivrl
xor
neg
cli
xlat
into
fdivr
jmp
mov
lret
hlt
lret
ss
shr
aam
into
hlt
aad
in
cmpb
enter
orl
test
ror
int
out
jecxz
vpaddq
jmp
mov
test
icebp
mov
call
fnstenv
into
lock
aam
sarb
fcmovu
loop
out
in
fsubr
loope
out
out
int
clc
lds
ret
cmp
iret
testb
xchg
in
cmp
div
jmp
xor
xlat
into
sti
lret
aad
rcl
xlat
fstpt
hlt
jecxz
fcmovnbe
addb
xchg
hlt
cmc
xchg
divb
clc
leave
fdivrl
in
stc
xor
out
ds
mov
shl
clc
lea
xchg
call
in
icebp
sti
ss
cmp
shl
fcmovnu
in
mov
jmp
out
aad
add
movzbl
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
jg
lret
add
add
out
aam
iret
cmp
ljmp
in
cmp
xchg
cli
loope
jecxz
out
adc
ret
repnz
cmp
cmp
in
xchg
out
in
roll
out
out
cmp
icebp
xor
repz
loope
roll
loopne
xchg
lea
int
aaa
out
lret
stc
stc
shl
xlat
hlt
out
sti
test
mov
out
mov
cmp
and
loope
int
jmp
out
out
cmp
aas
sti
sti
into
std
jecxz
cmp
in
cli
mov
cli
xchg
lret
int3
mov
shll
enter
call
cmp
cld
call
xchg
in
jmp
aam
cmp
out
lret
enter
cmp
loope
icebp
fucom
fildl
in
xchg
mov
cmp
imul
xlat
cmp
cli
sar
cli
adc
std
push
loopne
aad
mov
test
sub
int
icebp
out
sarb
loop
repnz
in
in
in
mov
xchg
test
idiv
divl
lock
aam
fmul
ret
jmp
mov
test
int
jmp
xchg
out
shll
stc
lret
in
ljmp
shl
aad
jecxz
idiv
testb
repz
xchg
xlat
shl
call
icebp
mul
cmp
faddp
idiv
cmc
in
std
xchg
incl
loop
cmp
fdivl
loopne
std
loope
clc
sbb
ljmp
fbstp
int
in
fcmovnbe
out
fstpt
cmp
cmp
aam
ret
jmp
or
jmp
ss
leave
shl
divb
fucom
stc
ret
in
sub
fiaddl
int3
loopne
out
loop
xor
repz
iret
aad
cmp
fldl
jecxz
cmp
sar
aam
mov
ss
fcomi
lret
leave
jecxz
addb
enter
jecxz
fsubrp
incl
icebp
lock
stc
ljmp
icebp
call
loope
ret
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
add
mov
cwtl
sub
jle
add
in
fisttps
fdivrs
iret
int
into
enter
cmp
std
neg
mul
aam
jecxz
fsubr
in
xchg
loopne
lret
in
fbstp
in
cmp
call
cmp
add
jmp
cmc
into
cli
in
jmp
in
jmp
in
ljmp
rcl
fadd
fdiv
shl
xchg
add
int3
loopne
jecxz
hlt
leave
das
xor
fcomi
ds
aad
in
out
fldl
fcmovne
mov
rcl
fdivs
cmp
hlt
das
rcl
fsubr
repz
addb
fsubp
loopne
nop
loope
mov
call
repz
loopne
cli
fidivrs
hlt
std
int3
mov
mov
int
loopne
das
test
lock
repz
cmpl
lds
iret
in
into
lret
inc
xor
enter
jmp
cmp
cmp
hlt
stc
jecxz
enter
out
out
xor
cmc
out
cmp
clc
cmp
in
ds
cmp
ret
out
mov
repz
fmulp
loopne
mov
out
mov
shl
xor
ror
hlt
cmp
ds
shl
ret
fcmove
mov
call
faddp
rclb
xlat
xor
fdivrs
iret
ss
cli
cli
rcl
call
in
in
shr
out
jmp
shl
xor
cmc
stc
in
out
clc
in
cmp
ljmp
out
or
xor
aam
testb
call
lret
fsub
into
shl
in
out
jmp
cmp
cld
leave
icebp
idivl
test
fcomip
fisttps
roll
sub
lock
das
xor
aad
lock
shl
xlat
test
cli
call
ljmp
rcl
int
fdiv
cmp
cmp
fsubr
aad
shr
call
xor
clc
lret
shr
std
clc
fmul
cmc
stc
xchg
idiv
loop
in
popl
shl
xor
jmp
shl
fcmovnb
fadds
ret
inc
in
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
iret
push
push
sub
jle
add
xchg
loopne
loope
int
lock
ret
sub
rcr
cmp
aas
cli
out
loop
std
mov
xchg
ror
cmc
adc
jmp
fmul
ds
cld
faddl
test
int
sbb
into
rclb
div
sti
fxch
lret
testb
ret
in
fsubr
fisttpl
xchg
xor
hlt
aaa
in
fdivp
fidivs
aam
out
rorb
fmul
ljmp
xchg
leave
ss
aaa
aaa
iret
fsubr
cld
loope
out
aas
lock
fdiv
std
ffree
ljmp
mov
out
fdiv
cmp
cmp
sar
cmp
mov
in
jecxz
in
in
fstl
das
das
jecxz
jmp
cmc
jmp
ljmp
fdivp
fadds
inc
orl
out
fcomi
cli
cld
cld
sar
mul
ret
filds
out
loopne
jecxz
mov
xlat
xor
idivl
out
testl
loopne
mov
xchg
into
faddl
xor
ljmp
clc
rcl
icebp
sbb
std
flds
fldl
loope
out
out
repz
call
rcl
in
cmc
in
sar
xchg
int3
mov
test
xor
repnz
cmc
fucomi
out
shlb
lret
sar
orl
test
test
xchg
ljmp
ds
cmp
ret
out
vpsubsb
mov
ret
mov
xchg
mov
out
ror
repnz
aas
cmp
rolb
out
dec
test
jmp
lock
in
leave
xor
out
leave
cmc
fcomp
icebp
ror
loopne
aad
leave
in
test
fcmovu
fsubp
xchg
addb
stc
enter
out
stc
shr
sti
repnz
aam
sar
ret
lea
cld
icebp
in
icebp
ljmp
enter
cmp
iret
fcmovbe
aas
aad
in
out
lret
mov
fcmovbe
xchg
shl
cs
jecxz
out
clc
fxtract
cmc
rcl
cmp
je
mov
mov
jmp
int3
aas
rol
fst
fadd
ljmp
inc
or
add
add
test
in
adc
xchg
out
loope
jmp
shr
out
out
cmp
ss
adc
fmull
mov
lret
out
xor
idiv
jmp
in
in
ds
rcr
fidivrs
fcmovu
loopne
lret
fucomp
fucomp
loop
fmulp
std
nop
out
cmc
ret
lret
rcr
repz
rcr
xlat
in
out
xchg
incb
cli
loope
call
xor
cmc
les
leave
jmp
aas
in
fcomp
enter
rcr
rolb
leave
cmc
jmp
repnz
sti
cmp
not
sti
in
add
sar
in
xchg
fdiv
in
jmp
hlt
fucomp
in
aam
test
repz
fcmovnb
movl
in
out
shl
out
rcr
fnsave
iret
fstpt
addl
test
mov
test
fucomi
out
out
ss
jmp
loop
fstpt
xor
add
out
jecxz
out
lock
out
icebp
xor
in
sbb
repz
mov
repz
xchg
mov
xor
xor
int3
cmp
leave
jmp
cmp
cld
lret
out
rcr
xchg
loopne
mov
lock
cmp
repz
aad
loop
loopne
test
iret
xchg
sbb
xchg
stc
out
sbb
loopne
shl
cmp
leave
shr
loopne
loop
aas
ret
ret
neg
fstp
loop
sub
lret
jmp
cmp
hlt
loopne
roll
ljmp
loop
iret
into
stc
aaa
aaa
xor
xor
cld
fsub
jecxz
rol
fiaddl
std
jecxz
nop
fdiv
loopne
xor
sarb
sub
lret
ds
std
icebp
cmp
aam
out
cmc
lret
fldln2
jecxz
mov
int
out
ljmp
loop,pt
ret
out
iret
call
leave
xchg
loop
xchg
xor
shl
icebp
in
call
cmpb
sti
ds
fdivrl
enter
xchg
test
mov
hlt
shl
leave
xor
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
das
cmp
jle
add
ljmp
aad
jecxz
idiv
ds
inc
clc
mov
sarb
cmp
test
enter
cmp
repnz
in
leave
into
loope
enter
loop
out
lock
divb
fdivr
test
aam
shl
test
into
in
xchg
xchg
lock
in
into
int
in
cmp
fnstsw
hlt
ret
jmp
leave
out
sub
ljmp
ror
cli
out
jmp
jmp
rcl
out
repz
out
jmp
jmp
xchg
ror
leave
imull
cmc
cld
inc
test
fld
cmp
in
in
stc
out
mov
jecxz
shl
jecxz
xor
xor
shr
aam
fcmove
int3
add
call
mov
iret
leave
ror
into
ror
int3
out
ffree
stc
int
and
jecxz
aam
fcomi
xlat
mov
lret
xchg
mov
loopne
icebp
xor
in
cmp
loope
faddl
call
cld
cld
mov
loope
stc
fnclex
int
adcl
aaa
in
bnd
iret
loopne
lock
rcr
enter
addl
loopne
jmp
repz
lock
cmp
fdivr
cmp
fdiv
test
test
loopne
mov
into
xchg
sub
lret
int3
std
stc
ss
iret
aas
hlt
test
jecxz
in
ficoml
icebp
mov
clc
jmp
cmp
jecxz
test
xchg
ljmp
lret
enter
sti
ljmp
addl
xchg
rorl
mul
out
into
sti
sub
lret
jecxz
repnz
stc
lea
mov
cmc
fidivl
repz
fcmovnu
not
cmp
iret
test
faddl
test
call
int3
fsubrp
xor
xlat
repnz
std
out
cmp
lock
aaa
out
inc
fcmovnu
int
int3
mov
call
out
cli
ss
cmp
imul
hlt
int
iret
aas
sbb
test
sar
lret
into
lock
repnz
mov
mov
jmp
aas
xlat
xlat
rcl
ror
fld
cs
and
mov
add
add
cmp
into
icebp
divl
clc
rcr
lret
test
repnz
leave
orb
lret
lret
xchg
lret
ljmp
leave
sti
ror
iret
repnz
shr
shl
xchg
jecxz
in
int
in
test
rcl
in
into
clc
lret
cmp
cmp
ret
and
pop
loope
adc
or
int3
rcr
clc
repnz
cmp
sar
fcmovnb
xchg
rcr
enter
cli
int3
mov
out
cmp
out
out
aam
cld
fcomp
cli
mul
stc
fcmovnu
jmp
jmp
icebp
mov
in
ret
out
jmp
mul
sbb
icebp
rol
fxch
in
or
loopne
jmp
cld
cs
fucomi
cmp
fcomp
aad
imul
add
int3
nop
filds
sar
out
int3
int
cli
stc
cmp
in
cld
cld
lret
orb
xor
mul
rol
fidivrl
stc
iret
icebp
fdiv
aam
in
in
in
jmp
mov
cld
or
cmc
fdivs
cld
cld
fcmovnb
repz
fsub
in
adc
call
sti
out
lret
lea
das
out
iret
stc
iret
xlat
ffreep
into
cmp
cmp
fcmovnu
sti
fldl
faddl
aaa
xlat
xor
sti
aam
loopne
rolb
cmp
mov
mov
xchg
out
xchg
out
enter
jmp
cli
lret
ds
stc
std
ffree
ds
jmp
incl
in
jmp
jmp
repnz
in
stc
ret
fsubp
in
xchg
or
cld
in
or
call
lret
cmc
cli
aam
not
roll
jecxz
std
leave
out
fsubr
jecxz
out
ret
lret
sti
cmp
xor
out
into
sarb
aas
rol
cld
xlat
cmc
test
lret
sar
mov
xchg
int
icebp
aaa
cmp
hlt
test
aad
loop
fadds
sbb
leave
fsubr
lret
mov
cli
lret
fdivrl
aas
push
rcl
aas
iret
iret
fcomp
inc
sti
out
out
out
add
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
gs
add
and
mov
xlat
xor
cmp
shr
clc
repz
inc
jmp
addb
loopne
lret
out
aam
icebp
loopne
jmp
cmp
idiv
out
fcmovne
orl
out
mov
ret
repz
cmp
icebp
cmp
div
loope
cmc
fdivrp
jmp
out
lret
fcmovbe
repz
std
mov
xor
in
cmc
sarl
rcr
sar
lret
fcmovnu
sti
icebp
fisttpll
lret
in
iret
std
hlt
sar
ljmp
fprem1
repnz
ret
lret
enter
mov
fucomip
in
fcmovu
fidivl
rcl
aam
fdivrp
sti
iret
loope
xlat
aam
ret
in
in
in
leave
rclb
xchg
ss
iret
fst
sti
neg
roll
aam
test
out
test
mov
in
in
ljmp
out
ror
rcr
test
fiaddl
inc
jmp
rorb
not
enter
fdivl
fmul
in
std
cmc
stc
idiv
loopne
in
fchs
jmp
lea
int
fnstenv
call
iret
ret
sar
repz
ljmp
fpatan
cmp
xor
fxch
rcr
rcr
neg
loop
les
out
mov
ljmp
repz
cmc
xlat
sti
roll
sar
clc
xlat
out
mov
loope
sub
repz
sub
call
int
in
icebp
ds
inc
in
int3
int
and
lock
cmc
enter
xlat
repz
fdiv
xlat
ds
iret
into
in
std
jecxz
and
icebp
test
xor
ljmp
idivb
adc
xlat
mov
fadd
icebp
repnz
hlt
sub
loope
cmp
cmp
not
jmp
in
rcl
fadd
jmp
fisttpl
out
loope
in
not
out
fdivl
lret
leave
ljmp
test
loopne
stc
out
loope
out
out
incl
xor
enter
aam
std
roll
cld
jmp
lea
mov
push
pushl
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
push
add
add
flds
hlt
rolb
in
lret
idiv
clc
cmp
shl
ds
faddp
mov
iret
xchg
loope
repz
int3
xlat
cmp
test
call
ret
in
stc
iret
sub
into
repz
int3
stc
in
sar
sti
xlat
testl
enter
mov
rcr
loopne
int3
xor
out
lret
repnz
rcl
int3
lret
clc
cmp
faddp
rol
jmp
icebp
sbb
ret
lret
jmp
aad
cmp
out
out
aad
call
icebp
rolb
jmp
aaa
xor
test
out
shl
lret
incb
roll
enter
int3
cmp
clc
idivb
neg
std
repz
fcmovnb
xchg
mov
mov
jecxz
out
repnz
das
fstp
out
loope
ret
sar
not
loope
out
test
loopne
int
xor
aaa
call
shl
out
adc
repz
ds
jmp
fcmove
lea
clc
icebp
icebp
ljmp
out
icebp
lock
lds
in
or
ljmp
divb
ljmp
jmp
repnz
hlt
stc
leave
and
mov
jecxz
xchg
mov
div
test
rcl
dec
cmc
loope
xchg
sti
xchg
loope
lock
xchg
test
out
out
shlb
idivl
neg
aad
jmp
dec
addb
xchg
lret
test
hlt
cmc
jmp
neg
aad
jmp
out
xchg
std
rcl
loop
enter
enter
fstpt
aas
lret
sar
shl
ds
repz
mov
loope
out
lret
sub
in
out
aad
std
cmp
xor
iret
cmp
mov
in
mov
xchg
into
aam
out
rcl
aam
ljmp
ret
idivl
ret
mov
cli
jecxz
loop
in
test
mov
add
cmp
xor
int
out
cmp
sbb
push
add
add
leave
mov
ror
adc
push
es
jne
cmp
jle
add
rorb
int
fcmove
cld
sti
loopne
xchg
clc
shl
cli
shlb
fcomp
jmp
fst
mov
addl
decl
repz
xlat
out
in
in
xchg
and
aad
xchg
iret
out
jmp
mov
cmc
int
call
jecxz
filds
test
incb
orl
fcmovnbe
repnz
cmp
cmp
cmp
call
in
fucomip
or
sub
lock
call
rcl
cmp
shl
and
cmc
fmul
xchg
in
hlt
out
ret
aam
repz
int3
std
fdivp
shl
and
aas
fsubp
fdivr
int3
jmp
jecxz
loop
lret
out
cmc
fstpt
jmp
clc
loopne
fdivrl
ffreep
aas
sar
aad
out
loope
in
int
aam
loopne
xor
out
fchs
cmc
cmp
lock
loopne
loop
cli
fsubrp
test
jmp
iret
fucomi
ss
iret
lret
loop
loope,pt
fimuls
clc
xchg
dec
repz
leave
ss
cmp
loopne
and
cmp
ljmp
xchg
mov
ret
hlt
shr
fdivl
cmp
cmp
fcomp
rcr
jecxz
fcoml
out
int
jecxz
das
repz
cmp
xlat
ljmp
popl
shrl
sub
cmp
clc
in
sti
ror
roll
testl
in
xchg
aas
imul
cmp
into
out
int
aaa
rcl
in
inc
xchg
xchg
lret
cmc
loopne
iret
jmp
fcomip
out
mov
into
not
in
aam
lret
in
rol
ret
addl
hlt
and
xor
cmp
test
jmp
repz
out
xchg
lret
into
das
rol
in
out
out
lock
stc
loope
not
ret
loope
mov
decl
loop
in
fcomi
lock
mov
xor
jmp
int3
aas
ret
sbb
roll
push
jl
cmp
jle
add
out
in
cmp
ret
cmc
loopne
cli
loop
std
orb
in
into
sti
out
aaa
rcr
fdivr
cmc
jecxz
test
rorb
test
xchg
or
jmp
jecxz
in
fstpt
fucomip
into
icebp
loope
cli
incl
mov
xchg
test
fsub
cmp
in
out
cmc
shl
jecxz
out
ret
ret
aas
mov
ljmp
icebp
xchg
aaa
in
cmp
cmp
loope
in
jmp
out
mov
out
mov
leave
into
ss
in
out
into
lock
icebp
hlt
xchg
cmp
jmp
into
mov
into
fdiv
sar
int3
dec
sti
cmp
test
mov
test
in
mov
xchg
xor
idivl
cmp
incb
mov
ljmp
iret
ror
aam
out
rcr
lret
out
out
std
jecxz
les
mov
lret
in
mov
mov
enter
xlat
lret
out
xor
lock
aad
call
ds
mov
enter
and
xchg
cs
stc
xor
cmp
out
std
fdiv
leave
cmc
neg
out
mov
xchg
std
iret
out
icebp
leave
xor
repz
lock
ljmp
roll
out
nop
repnz
xchg
jmp
leave
hlt
repz
cmc
jmp
out
shr
cmp
ret
lret
xchg
stc
loopne
in
std
mov
fld
repz
cld
into
in
into
jmp
rol
loopne
cli
aam
ljmp
sub
loopne
int3
ss
clc
clc
xor
ss
cmp
test
stc
les
orb
xchg
jmp
out
ss
rcr
lock
sub
shr
sti
mov
iret
out
call
jmp
shr
lret
xor
cld
out
lret
rol
loop
lret
repnz
into
sarl
fcmovu
shl
xor
loope
lret
enter
orl
ret
cmp
jmp
rol
rcl
rol
aad
sahf
xor
das
bound
jle
add
ss
shl
sar
out
cmp
ret
hlt
fildl
into
out
xchg
adc
xor
out
ds
fstp
jecxz
cli
sti
fiadds
xchg
out
std
loopne
jmp
leave
lret
clc
in
int3
in
jmp
fcomp
cmc
clc
loopne
cld
rol
int
stc
test
icebp
jmp
leave
repz
ss
fdiv
repz
hlt
cmc
rol
hlt
vpmulhw
nop
in
stc
xor
iret
enter
ljmp
cli
fcomi
out
aad
xlat
fmulp
loop
out
jmp
in
xor
in
cmp
cmp
shl
stc
fiadds
mov
ficoms
in
xlat
cmp
xlat
out
fsubr
fsub
fidivrl
flds
mov
mov
nop
leave
or
fbstp
jmp
in
xor
cmp
loopne
inc
xchg
or
lock
in
call
cmp
cmc
sti
shr
in
iret
ret
fdecstp
clc
stc
repnz
decb
std
nop
add
fdivrs
stc
rcr
int3
sarb
test
cmp
repnz
cli
jecxz
in
lret
jmp
cmp
in
ss
std
repz
into
sbb
ret
out
xchg
leave
mov
int3
sub
cli
stc
into
ss
cmp
iret
cmp
shl
cli
fmull
mov
mov
xchg
aas
int
shlb
stc
fcmovnb
rol
neg
ret
stc
int
nop
int
test
xlat
idiv
into
xlat
int
cmp
rcl
cmc
mov
cld
leave
jmp
jmp
clc
jecxz
repz
cli
fcmove
repnz
imul
out
cld
lret
mov
mov
ror
std
jmp
lock
call
xor
loopne
fucompp
ret
orb
ljmp
aam
fstpt
cmp
ffreep
testb
enter
jecxz
fsubr
fbstp
xlat
iret
cmc
fdecstp
ret
lret
mov
call
fmull
test
add
push
add
add
ret
mov
mov
push
hlt
inc
pop
add
add
jmp
icebp
lret
jmp
int
rcl
loop
fdivp
cmp
repz
testb
in
std
rcll
fidivrl
out
cmp
fcomip
fsubr
test
test
cmp
hlt
in
xor
mov
in
nop
repnz
fdivs
in
std
fldln2
fcmovne
cmp
std
aaa
ds
clc
roll
leave
jecxz
xchg
jmp
xor
int3
cmp
fcom
loop
movb
cli
and
shl
in
aam
lret
hlt
fcmovbe
cmp
in
cmp
in
shr
jmp
test
enter
in
repnz
loopne
aam
loopne,pt
incl
lret
in
lock
int3
repnz
test
lds
in
into
hlt
fxch
int
shl
sar
in
sti
idiv
incb
lret
in
sub
not
out
cmc
ss
lret
cmp
int
icebp
flds
sbb
fisttps
loopne
clc
xor
in
xor
cmp
hlt
in
stc
out
fcmovb
push
ljmp
xchg
shl
call
aam
iret
clc
rcl
into
lock
clc
sti
call
cld
decb
xlat
aad
fld1
cmp
stc
int3
ljmp
fsub
ljmp
sti
lret
shr
jmp
jecxz
enter
int
fcmovbe
cmp
test
rcr
call
fstp
test
int
into
cs
icebp
fcmovu
cmp
in
icebp
cli
ds
clc
les
incl
iret
aad
ljmp
loope
xlat
cmp
rcr
ret
neg
sti
mov
fsubp
fneni(8087
loopne
out
xor
divb
stc
repnz
std
cmc
jmp
test
rcr
mov
ffreep
out
xlat
loopne
test
int3
rorl
cmp
cmp
aad
rcl
adc
roll
mov
int3
loope
rcll
into
out
cmp
sti
xlat
std
fdivrp
xlat
fcmovnb
fcmovnu
ret
adc
addl
sub
in
jmp
xlat
out
loop
std
out
sarb
fadd
hlt
xchg
xchg
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
sub
push
roll
cmp
jle
int
loop
test
lret
cmp
cmp
clc
test
cmp
stc
fdivr
orb
lock
hlt
in
xor
cmp
fcomp
aas
in
lock
aas
lock
sbb
int
incb
sub
ljmp
out
ds
xor
loope
loope
xlat
mov
or
out
ror
fidivl
aam
idiv
not
aas
in
hlt
xchg
call
or
adcl
out
cmp
cmp
out
int
fdivrp
lock
fyl2xp1
ljmp
nop
int
xchg
sarl
ret
out
in
jmp
aaa
incb
aad
fxam
loopne
mov
dec
std
sti
test
xchg
loop
out
lret
fdivrs
lret
out
hlt
rolb
mov
rorb
vpand
aam
out
stc
sti
rcr
int
in
cld
jecxz
lret
mov
in
std
and
dec
fbstp
aaa
in
aad
cmp
loopne
cmc
aam
test
sarl
out
mov
mov
dec
out
mov
rcr
into
cmc
out
in
aas
call
fsubp
out
cmp
out
lock
xchg
xchg
ljmp
out
ss
iret
shl
repnz
loope
aas
mov
repz
int3
movb
mov
ret
xor
shl
std
cmpb
not
iret
orb
enter
orl
int
lock
xor
out
dec
sti
lock
adc
lret
lret
in
out
jecxz
icebp
in
xor
int
into
out
in
clc
fld
rol
test
in
clc
addb
div
lret
xor
enter
fucomi
clc
shl
stc
incl
fildl
xchg
mov
divb
rcr
enter
push
cmp
fcomi
ret
shl
fsubr
out
fiaddl
out
in
shl
jmp
int3
in
fdivs
fadd
rcr
test
fisttpll
mov
std
sar
das
in
xor
aaa
das
in
out
cmp
fdivrl
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
out
aaa
rol
add
add
ret
fldl
fcmovne
lret
loope
lret
in
cmc
sarb
icebp
aam
testb
mov
out
shl
int
loope
loop
cmp
ss
iret
ror
hlt
shl
out
std
int3
lret
mov
int3
leave
out
loopne
out
leave
clc
ror
cli
cmc
into
in
cmp
out
cmp
bnd
repnz
loopne
in
std
mov
hlt
neg
iret
jecxz
shll
cmp
jmp
shl
in
and
fadd
loop
addb
out
iret
cmp
lret
leave
sar
aas
int
mov
aas
shl
aad
jecxz
lock
sti
out
popl
rol
in
shr
xlat
loopne
iret
fcmovu
fcmovb
xchg
ljmp
hlt
jecxz
sti
xor
repz
out
sar
test
cmc
loopne
in
mov
jmp
call
ljmp
cmp
cld
loop
test
out
or
icebp
neg
shr
cmp
shr
lock
test
test
loop
std
fmul
in
xchg
std
in
shl
sti
aad
idiv
aad
int3
int3
into
cmc
ds
test
addl
incl
lret
in
out
int3
bnd
rolb
ret
in
xlat
sub
in
lret
in
loop
fists
xlat
clc
out
jmp
stc
test
shl
sti
cmp
clc
jecxz
mov
call
icebp
xor
iret
sti
cld
int3
loop
filds
lret
or
sar
call
vpsubq
into
lret
ljmp
fdiv
in
xlat
int
cld
fimuls
out
neg
out
xor
xor
fnstsw
out
iret
test
test
jmp
int
repnz
ss
int3
in
xor
in
ret
icebp
aad
testl
jecxz
out
xor
cmp
stc
clc
cmp
in
in
mov
cmp
jmp
out
ret
cld
or
jmp
fstp
lret
pop
xchg
jmp
aas
int3
mov
std
int
pushf
sbb
dec
mov
cmp
jle
aam
neg
loope
flds
cld
lret
hlt
xor
ror
call
cmc
lret
cmp
call
clc
fldl
in
mov
iret
shl
fcmovnbe
loopne
sub
int
out
xor
cmp
ljmp
rcr
roll
in
adcb
enter
cmp
aaa
inc
shr
fdivr
add
test
addl
shl
fnstcw
ds
clc
lock
cli
clc
out
aam
sti
clc
in
sbb
mov
int
test
aad
clc
neg
ss
iret
lret
std
fdivrp
in
cmp
rcl
loop
int3
mov
in
in
out
xchg
jmp
out
fdiv
rol
hlt
fsin
shl
in
mul
aam
cmp
fdivp
jmp
clc
cmc
lock
aaa
dec
cmp
ret
lock
mov
mov
ljmp
cmc
fcmovu
xor
leave
filds
shl
cmp
call
mov
addl
xor
cmp
out
cmp
jmp
repz
mov
mov
sti
repnz
int
in
iret
xor
into
idivl
in
jmp
out
test
loope
xchg
aas
in
xchg
xchg
xchg
in
aaa
in
repnz
stc
cmp
int
fsincos
loopne
aam
roll
xlat
jecxz
loop
lock
xor
in
repnz
out
test
call
stc
out
dec
ljmp
jecxz
iret
call
cmp
not
xlat
std
fstpt
imul
loop
orl
int3
ss
aam
sarl
cmp
icebp
fildl
addb
xlat
stc
into
ljmp
shl
int
icebp
jmp
inc
aam
incb
out
in
test
mov
iret
ror
aam
hlt
out
aaa
rcl
xor
cli
in
shl
idiv
ret
loope
enter
std
and
out
repz
std
cmp
test
fdivr
hlt
xchg
in
loopne
in
iret
rcr
in
orl
clc
sub
xchg
dec
jmp
lret
int3
fcmovnu
mov
pop
or
into
inc
movl
jle
fcmovu
idivb
ror
std
hlt
hlt
ret
xchg
enter
lret
xchg
xchg
jecxz
leave
xlat
lret
icebp
into
hlt
std
sbb
rol
repnz
mov
mov
test
shr
stc
aam
fcmovu
loopne
into
in
test
test
out
mov
out
xchg
mov
nop
idiv
jmp
repnz
fdivrs
ds
rol
aad
aam
testl
nop
out
in
hlt
in
fdivp
out
ds
cmp
ds
xchg
fisttpl
repz
in
repz
enter
in
loopne
or
stc
fisttps
xchg
repz
rcl
fmulp
repz
lret
clc
loop
test
enter
out
cld
adc
out
out
divb
test
loop
aad
clc
leave
lea
repz
xchg
das
ss
fsubr
jmp
cmp
stc
sar
icebp
stc
cld
addb
loop
xchg
sar
xchg
enter
cmc
fdiv
stc
xlat
loopne
into
xlat
repnz
rcr
ret
aad
fdiv
cmc
call
call
clc
cli
sub
shlb
out
shr
aas
loope
addl
enter
loopne
call
leave
iret
in
ljmp
jecxz
test
repnz
xchg
in
out
dec
test
icebp
neg
aaa
out
cmp
neg
stc
shl
loopne
fstpt
test
test
das
rcl
shr
in
sti
roll
std
call
mov
out
fdivr
test
in
xchg
shl
leave
xlat
jmp
in
imul
rolb
in
mov
test
mov
or
xor
lret
int
std
loop
cmp
fiadds
std
stc
mov
mov
enter
stc
xor
fsubr
shr
aas
sarl
loopne
out
ret
clc
fucom
int3
mov
int3
mov
xor
shl
enter
cmp
faddp
fucomip
filds
clc
in
lret
jmp
fsub
loopne
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
sub
lret
cmp
jle
rol
aad
xlat
ss
sar
repz
fstp
cmc
call
shl
lret
shl
ret
jmp
cmp
int3
int3
std
neg
fst
fcomip
jecxz
flds
in
out
jecxz
aaa
out
xor
les
xlat
cmp
loope
test
hlt
xchg
sti
in
jmp
rcl
aad
hlt
cmc
in
int3
iret
cmp
incl
sti
out
fmulp
test
hlt
jmp
loope
xlat
sti
cmp
idiv
fdivrp
mov
lret
lret
in
push
in
out
enter
std
aad
fadd
cmp
in
ret
cmp
sti
jmp
mov
shl
cmc
hlt
lret
hlt
out
aaa
cmp
icebp
incl
addb
rol
ret
jmp
out
lds
cld
iret
out
vmaskmovdqu
lret
int
fildl
loope
div
mul
sti
cmp
repz
cmc
faddp
fmull
stc
fucomip
xchg
jmp
lock
std
in
jmp
fld
icebp
enter
mov
in
iret
icebp
xchg
xor
jecxz
ds
cmp
fsubr
aaa
out
loop
fdiv
and
xor
rcl
shl
in
fxch
enter
rcl
dec
sub
xlat
cmc
jecxz
faddl
mov
mov
in
mov
xlat
out
sub
int
hlt
cmp
movb
mov
xchg
iret
not
cmc
rol
out
xlat
int
in
faddp
cmp
aam
clc
hlt
cld
sti
ret
leave
mov
xchg
xchg
xchg
enter
ret
cmp
fcmove
cmp
loope
sar
out
int3
int
out
xchg
out
hlt
ret
xor
lret
icebp
iret
cmp
stc
rol
fdiv
cmc
aad
lret
out
orb
imulb
call
in
fcmovbe
testb
std
ret
xchg
loope
in
cmc
in
into
cmp
cmp
loop
sarb
test
xlat
hlt
test
or
imul
mov
jmp
aam
int
int
aam
xchg
inc
lret
mov
jle
add
mov
jmp
out
out
hlt
cmp
repnz
loope
cmpb
fcomp
hlt
addl
leave
mov
addl
in
int
icebp
rcr
sar
idiv
cmp
ret
rol
lea
fdivrp
mov
iret
clc
into
in
dec
iret
cmp
test
loope
in
xchg
fcomi
lock
jecxz
out
xlat
fcomp
out
stc
cmp
fst
in
loopne
call
xchg
in
int3
add
xor
in
cli
cmc
int3
xor
cld
loop
test
test
lret
lock
sarl
stc
xor
loopne
xlat
aas
aad
xlat
stc
fadd
loopne
sti
xchg
icebp
int3
out
repz
sarb
cmp
rcr
xlat
repnz
fsincos
in
out
cmp
iret
ret
in
ljmp
fstpt
shl
test
jmp
out
testl
stc
lret
cmp
loopne
loop
in
stc
sti
loopne
test
fisttpll
not
ret
xor
cmp
stc
shl
lock
jmp
in
int3
leave
fucomi
call
out
hlt
shl
repz
repnz
cmp
test
rcl
not
int
into
call
ret
call
in
aam
adc
int
movl
xchg
in
jmp
enter
jmp
fcmovnbe
repnz
lret
mov
mov
call
ss
xor
aas
call
std
repz
stc
sbb
lret
xchg
rorl
shr
xor
aad
fcmovnu
std
fdiv
loope
jmp
loopne
mov
loope
fidivs
call
int
not
fmulp
idivb
idiv
fildl
lock
call
loope
ljmp
cmc
out
and
repz
fdivr
mov
mov
aas
jmp
cli
idiv
leave
lret
clc
int3
shl
cmc
aam
hlt
xor
mov
lea
jmp
rcr
int
stos
outsl
int3
nop
int3
and
repnz
add
add
loop
jmp
clc
iret
iret
incl
aam
repnz
xor
lret
cmc
aas
ret
fdivr
jmp
vpavgb
or
loope
jmp
in
fcom
jmp
fucomi
aas
mov
in
cli
stc
fucom
fdivp
shl
decb
aad
rcr
cmp
stc
loopne
loope
repnz
and
in
repnz
lock
sti
icebp
hlt
ret
rcr
aam
neg
test
loopne
xchg
out
clc
rol
leave
repz
cmp
cmp
clc
out
clc
addl
lea
ret
in
int3
int
fpatan
shl
repnz
fdiv
loop
fisttpl
mov
sar
in
jmp
in
lret
in
xlat
ror
cmc
roll
lret
sub
jmp
orb
hlt
lret
shl
sti
loop
fdivr
xchg
in
repz
xchg
in
call
int3
hlt
repz
test
out
cmc
repnz
rcr
fisttpl
lret
mov
lea
hlt
clc
fcmovnu
neg
fdivp
int3
out
call
call
std
cmc
int
xor
xor
lock
int3
neg
jmp
enter
mov
repnz
mov
cmp
lret
fcmovnbe
int3
std
loope
std
add
dec
in
fneni(8087
in
into
filds
lock
ljmp
cmp
fst
fsin
leave
stc
stc
leave
loop
jecxz
xchg
nop
call
repnz
cmp
cld
fmulp
hlt
in
rcr
enter
mov
icebp
fildl
jmp
enter
shr
cmp
rcr
cmp
cld
hlt
and
idiv
fld1
int3
lret
int3
int3
xchg
hlt
test
shl
ss
rcl
not
cmp
into
shr
cmp
sar
loope
ret
out
in
ljmp
xor
repz
sarl
in
repz
cmp
idiv
fst
ret
sbb
nop
jmp
in
leave
cmp
into
les
enter
add
ret
xlat
fmul
fmul
rcr
test
notl
popf
lods
rolb
jle
add
rolb
mov
add
stc
test
icebp
out
icebp
sarb
aaa
jmp
fcmovnb
sbb
xchg
fsubrp
enter
repnz
aaa
cld
div
std
rol
rcr
mov
addl
xor
cli
leave
cld
jmp
lock
cmp
cli
repnz
lock
loop
mov
xchg
mov
mov
lock
int
out
in
push
out
aam
fldl
adc
shr
out
repnz
jecxz
int
int3
cmc
aaa
aad
hlt
incl
test
les
xchg
adc
into
repnz
hlt
neg
aad
rcr
cmp
fmul
test
sti
in
leave
faddl
jmp
test
aad
cld
fucom
rol
repz
jmp
mov
in
ror
mov
fcmovbe
leave
fsin
sbb
aad
xlat
out
fucomip
cmp
call
jmp
xor
in
push
test
rcr
dec
out
call
mov
ljmp
imull
stc
fucomi
aam
into
in
aad
loopne
aam
rcr
cld
enter
int3
lea
cmp
cmp
int3
jecxz
repz
cmc
mov
fsubp
les
in
out
nop
lret
lock
not
std
cmp
test
addl
push
cmc
repnz
mul
aaa
in
cmp
int
lret
flds
roll
xlat
test
lock
in
decl
aam
cli
aam
rcl
aam
out
mov
mov
dec
int3
in
ficoms
out
aam
repnz
iret
out
iret
ss
icebp
aas
enter
jmp
call
lret
xchg
bnd
fdivrs
cmp
in
fcmovbe
aad
xchg
rolb
nop
jmp
icebp
fnstsw
xor
aad
in
cmp
ret
out
int3
shr
iret
mov
repz
jecxz
xor
iret
fucomi
cmp
test
pop
add
mov
jmp
rcl
leave
int3
leave
fldt
mov
das
data16
jle
add
jmp
in
cmp
int3
frstpm(287
hlt
fcmovne
cmp
enter
jmp
ljmp
hlt
xor
cmp
std
rcr
sti
repnz
addl
shl
int3
ret
ljmp
leave
sub
sti
in
std
loopne
in
xchg
loope
in
xchg
push
xor
ret
cmp
cli
out
fdivr
sti
fldl
std
fiaddl
fsub
fcomip
jmp
jecxz
in
icebp
aas
cmc
int
xor
cmc
out
addb
repz
cmc
xor
leave
cld
aaa
sti
cmp
sti
sti
shr
sti
idiv
cmp
mov
lock
in
int3
ret
stc
fidivl
cmp
shl
sub
mov
int
adcl
repz
call
repz
cli
test
xlat
jecxz
jmp
orl
ret
int3
fucompp
jmp
int
out
cmp
mov
out
lret
fcom
aaa
jmp
xor
jmp
test
out
jmp
mov
call
fsubrp
rcl
cmp
aaa
int3
in
xor
fucomi
fadd
xor
mov
lret
aad
out
leave
mov
in
xlat
cmp
ljmp
ror
not
shl
xlat
xchg
enter
lret
in
out
sub
shlb
hlt
lock
aad
aas
ret
hlt
neg
jmp
addb
repnz
cmp
into
repz
fcomi
out
fsubr
icebp
repz
cld
mov
test
jecxz
iret
addb
ret
int3
cmp
icebp
rcr
mov
xchg
mov
mov
jecxz
out
rcl
shlb
idivb
cmp
cmp
out
fdivrl
sti
fstp
mov
fmul
fchs
loope
xchg
in
out
test
or
in
ffree
rcl
sbb
out
sti
in
xchg
in
out
ss
jmp
ds
fadds
hlt
in
out
aad
fsub
lds
ror
call
mov
mov
jmp
lret
ror
fstp
ffree
pop
fiadds
lods
and
add
add
ljmp
imul
faddl
lock
loopne
stc
leave
call
jecxz
shl
cmc
cmp
stc
cli
in
out
and
repnz
mov
xor
xor
out
cld
idivb
icebp
cld
mov
xchg
int
ret
xor
cmp
ds
loope
int
cmp
out
std
ljmp
sbb
test
shl
lret
neg
cmp
fcomip
cmc
aam
dec
ret
fcmovnb
call
filds
shr
mov
ss
xor
fcomi
std
fcmovne
loopne
loope
shl
fcmovnu
sti
mov
rorb
rcr
jecxz
out
cmp
std
repz
loope
fcmovb
loop
loope
add
icebp
leave
int
xlat
hlt
sub
repnz
int3
sti
fcmovnu
cmp
mov
aad
fmul
faddl
cs
idivl
loope
in
fadd
out
rol
decl
fldl
xor
shl
leave
sar
sarl
icebp
idiv
shl
iret
aam
neg
cli
in
xlat
sti
out
fsub
cli
faddl
in
lret
cmc
jmp
rcl
repz
and
int
incl
xor
aaa
call
out
fneni(8087
sub
clc
int
repz
lock
repz
std
out
enter
lock
cli
iret
in
repnz
clc
test
lret
out
out
cli
hlt
shl
cmp
fsubp
icebp
flds
cld
fistpll
enter
out
sbb
rcll
aaa
cmp
fidivl
idivb
jmp
loope
loopne
in
hlt
test
fucom
cmp
lock
fucomip
int
stc
jmp
lret
aam
leave
aad
loope
loopne
lret
xchg
out
repz
loop
int
aam
hlt
repz
icebp
sti
cmp
lds
mov
jecxz
cld
into
stc
sti
int
cmp
ret
sti
aad
fsub
loope
enter
xchg
mov
jmp
enter
int3
aam
pop
adc
loopne
mov
fcmovbe
add
add
repz
loop
shl
out
vpmaxsw
fdiv
cli
cmp
fildl
cli
test
call
in
rorb
jmp
int3
sti
stc
in
into
cmp
vpsrlq
not
mov
hlt
ror
shl
xor
cmp
into
aaa
fnstsw
ds
cmp
loopne
fcomi
std
xlat
loope
stc
test
iret
mov
cmc
aam
std
cmp
lret
iret
fnstcw
out
cld
cmp
aad
sti
iret
loope
lret
shr
in
loope
fmul
rcr
ljmp
rolb
mov
mov
in
enter
xlat
fcmovnbe
aaa
std
cmc
jmp
cmc
hlt
ret
fdivrl
ret
mov
out
iret
xchg
out
lock
leave
shr
aaa
cmc
xlat
xor
iret
fcmovnu
fcomip
cli
in
fimuls
xchg
xchg
rcll
hlt
in
int3
xlat
xlat
icebp
aaa
hlt
aad
fildl
loope
movl
xlat
fxtract
cmp
call
cmp
rol
mov
mov
xchg
fldl
std
xchg
test
sar
xor
out
lret
xlat
push
in
out
out
iret
cld
ret
ljmp
bnd
aam
das
das
ror
lret
shl
sti
ljmp
mov
aad
ljmp
rcl
mov
test
mul
enter
repz
cmp
sar
in
addb
in
mov
aad
into
in
sti
stc
fdivrp
out
rcr
cmpl
rolb
enter
iret
xor
icebp
repz
int3
roll
clc
sbb
out
sbb
into
icebp
rcr
in
xor
in
ror
out
hlt
lret
in
aam
inc
test
neg
aad
xchg
out
incb
iret
cmc
xor
loop
idiv
repz
std
enter
sar
mov
out
xor
sti
int3
out
cmp
repnz
shr
neg
rcl
ret
test
vpand
incl
das
sub
jmp
cmc
fcomip
shl
clc
cmp
loope
faddl
shr
push
add
add
lret
int
jp
fimuls
xchg
flds
jle
add
loopne
out
in
xchg
mov
int
in
out
iret
out
cmp
roll
or
mov
jecxz
mov
vpcomq
xlat
icebp
jecxz
cld
cmc
cmp
into
xlat
jecxz
into
in
rolb
std
xchg
jmp
out
idiv
out
stc
div
call
fcom
roll
call
loope
std
in
xchg
out
ffreep
stc
fdiv
enter
cmc
cmp
mov
mov
sub
repnz
mov
idivb
lret
rcr
int
out
clc
shr
jmp
jmp
lret
std
loope
imulb
xlat
cmp
cli
aam
aam
hlt
rcr
loopne
addb
leave
mov
repnz
xlat
cmp
in
std
in
xlat
sti
clc
adc
cli
mov
int3
call
in
call
int
xor
in
xlat
int3
repnz
clc
rcr
call
mov
shl
call
das
shr
fucomi
out
cmp
icebp
std
lock
cmp
rcr
mov
fnclex
lret
fists
in
in
mov
ftst
aad
sar
test
int
mov
shl
cmc
lret
idiv
hlt
xor
cmp
push
aas
cmc
jecxz
xor
hlt
xchg
enter
test
xlat
fcmovnbe
cmp
hlt
fcmovu
std
adc
loopne
rorb
iret
mov
shlb
xlat
out
ror
cli
rolb
idiv
rol
shl
enter
in
dec
lret
aam
pushl
xor
xor
repz
shr
rcl
cmc
jecxz
fcmovbe
fdiv
fmulp
sti
std
loop
into
rcl
jmp
lock
loopne
sub
loope
cmp
loopne
orb
rcl
mov
cmp
ds
loopne
loopne
stc
sti
fmulp
ljmp
lock
out
icebp
out
cld
int3
lock
in
std
ret
in
jmp
leave
fucomp
dec
rcl
xor
xor
fcmove
fscale
idiv
ror
faddl
xchg
jb
add
jmp
aas
push
mov
adc
test
add
add
add
movb
jecxz
in
rorb
xor
jmp
in
cmp
fcmovbe
les
ret
enter
icebp
in
mov
cmp
call
sti
fidivrs
loope
rol
clc
in
mov
out
enter
loopne
loopne,pn
xor
aad
jmp
ret
loopne
aam
adc
out
ljmp
lret
loope
xbegin
sti
ljmp
fildl
ljmp
hlt
jmp
in
out
fdiv
loope
cmp
ret
aad
loopne
leave
loope
into
cld
shr
out
hlt
xchg
xlat
sub
repz
cld
in
idivb
shl
fsubrp
fsubr
fprem1
cld
xlat
roll
shl
clc
ljmp
ljmp
std
loope
leave
loop
cld
leave
in
mov
cmp
out
aam
cli
lret
hlt
iret
in
xlat
shl
xlat
mov
test
mov
roll
iret
lock
fucom
sti
loop
fstp
out
ret
xchg
loopne
in
fsubr
jmp
rcl
sub
lret
enter
rcr
fsubp
in
rcr
xchg
fsubrp
xchg
lock
out
aad
shl
in
lret
enter
sbb
out
cli
stc
shr
out
ret
loope
enter
into
int
out
loope
xor
jmp
cmp
in
loope
fadd
in
xchg
mov
out
fisttpll
ss
fcmovnu
lret
cmp
hlt
std
and
fadds
int3
repnz
out
clc
loopne
xor
ljmp
jecxz
fst
ffree
cli
out
cli
int
lock
lock
xor
lock
rcr
sar
fdivr
jecxz
ret
in
xlat
xlat
cmp
int
repnz
xchg
adc
cli
int3
xor
cmp
loope
clc
in
iret
hlt
cld
mov
or
lret
lret
in
test
xor
fcmovnu
roll
testl
cld
call
div
ret
enter
cmc
div
mov
jmp
enter
lret
jno
sbb
push
mov
or
add
add
loop
cmp
int
out
ror
leave
xor
sar
repz
in
out
ss
in
out
cmp
test
cmp
ljmp
xchg
aam
jecxz
xor
enter
cmp
int3
ljmp
clc
aas
jmp
out
ret
std
hlt
int
xchg
div
cli
leave
aam
stc
loop
ret
fucom
fildl
xchg
jmp
call
fmul
shr
out
icebp
std
hlt
aad
test
loop
fcmovu
enter
loop
xor
jmp
fdiv
testl
loopne
fprem
leave
test
hlt
shr
rol
les
xlat
aad
shr
cld
hlt
jmp
std
jmp
cmc
aas
dec
out
fistl
out
hlt
cmp
rcl
cmp
fcomip
ds
testl
lret
and
nop
cmc
not
xor
cmp
ss
test
cld
out
int3
in
leave
faddl
stc
repz
ljmp
cmp
fdivr
fdivrl
sbb
neg
fcmove
fcmovnu
mov
ljmp
hlt
fcmovbe
in
or
test
repnz
sti
inc
test
aam
loope
cli
fldl2e
out
in
out
sti
adc
shl
hlt
ret
fcmovnu
into
iret
cmc
enter
in
call
hlt
fsubr
repnz
std
jecxz
lret
sub
cld
icebp
xor
xlat
jmp
repz
xor
icebp
idivb
call
jecxz
rorb
xchg
shlb
jmp
out
cmp
jecxz
repz
icebp
fdivp
clc
vpsrad
iret
test
not
into
xlat
iret
sarb
fld
fcmovne
lock
movb
mov
int3
lret
xchg
aam
aad
hlt
out
repnz
std
idivl
aad
inc
cld
decb
enter
xor
in
idiv
shl
in
fcmovnu
shl
hlt
hlt
incb
int3
orl
loope
lock
shr
push
add
add
enter
fcmovu
fstps
outsl
inc
jns
fyl2xp1
ret
jle
add
ror
repz
clc
fidivs
xchg
lret
xchg
in
stc
ror
ljmp
int3
in
aam
fidivl
lock
shr
icebp
out
test
jmp
sbb
int3
xchg
hlt
xlat
in
ror
out
cmp
enter
xor
div
fcmovnb
int
xchg
fildl
rcl
jmp
xor
lock
std
fdivr
icebp
repnz
testl
icebp
loope
into
cmp
into
faddl
lock
out
loop
out
into
aam
in
xor
jmp
aas
in
icebp
fdivr
in
mov
loopne
testb
rcll
ret
xor
bnd
sti
fcmovne
roll
mov
fsub
add
out
call
out
hlt
out
xor
hlt
clc
into
out
filds
or
xchg
icebp
fiadds
lock
in
lret
call
cmp
loopne
repz
xlat
fadds
lret
lea
xor
repnz
int
in
addl
testb
repz
int
xlat
leave
into
out
cld
jmp
div
fcom
mov
mov
jecxz
out
mov
xchg
xor
rcl
out
and
fucom
rcl
ret
fdiv
cld
out
dec
fistl
xlat
out
cli
xor
ljmp
cmp
cmp
cld
fmulp
mul
cld
out
mov
mov
repnz
cld
xor
xor
cmp
cld
cmp
mov
stc
add
in
mov
int3
rcr
xor
fdivrl
fninit
and
addb
mov
ljmp
in
fstpt
ss
loop
loopne
out
lret
cli
xchg
aaa
aad
cmp
jmp
xlat
lret
cmp
in
loopne
sar
or
xor
jmp
leave
into
fcom
aas
mul
icebp
add
mov
inc
fcmovu
icebp
call
add
push
or
xchg
mov
mov
xor
lea
mov
mov
jmp
lret
ret
rcl
fcmovbe
lret
shll
in
push
xchg
or
jle
add
adcl
xor
lock
fst
in
faddl
leave
std
stc
jmp
sar
mov
leave
xlat
cmp
icebp
aaa
aaa
out
shr
fcompp
and
hlt
ffreep
loopne
stc
in
fcomi
fisttps
lock
cmc
clc
out
out
fmulp
rcl
rcl
fcmovbe
mov
call
mov
xchg
mov
hlt
jmp
call
ret
fdivp
mov
incb
nop
call
xchg
sub
neg
fdecstp
aad
fadds
xchg
cli
mov
ret
in
stc
cmp
xor
cmc
cmp
sar
ret
test
loopne
lds
mov
cmp
iret
lret
xor
std
out
sar
sti
sbb
xlat
test
lret
xchg
out
loop
aam
out
lds
int3
cmc
cmp
call
in
test
mov
fsubrp
mov
jecxz
loop
xor
xor
enter
sti
loope
out
fdivr
in
testb
and
ljmp
xor
rol
jmp
lock
and
fcmovne
shr
icebp
out
loopne
std
loope
rol
rcr
repnz
iret
repz
aam
repz
in
in
add
call
loop
in
int3
cmp
enter
loope
in
out
loopne
out
call
jmp
lret
int
out
clc
aam
int3
ror
cli
loop
call
orb
out
shr
shrb
iret
cmp
in
in
or
iret
lock
in
add
fcmovb
jmp
xchg
jmp
cmc
fucom
lret
int
cmp
clc
sbb
ret
xlat
into
mov
out
out
xor
in
repz
rcr
xchg
test
test
aad
xlat
leave
loop
leave
jmp
fsubr
icebp
fcmovnu
out
fcomip
sub
aas
incb
cmc
out
lret
ljmp
xor
cmp
rcl
lret
sti
fcmovnbe
into
shl
loope
cli
leave
rcr
sti
test
add
add
mov
ret
fstp
fcoml
sub
jle
add
fcmove
ljmp
xor
rcl
lret
cli
clc
in
ret
int
inc
loope
push
jmp
loop
aaa
ss
divb
rcl
jmp
iret
shl
faddl
cld
enter
lock
sarl
neg
sarl
ds
iret
xlat
clc
repz
int3
loop
mov
lock
loop
in
xchg
xlat
ljmp
xor
xor
lds
push
loope
cmc
jecxz
lret
out
fdivl
fcmovne
mov
out
inc
lock
loopne
enter
cld
aad
fdiv
lret
loop
aaa
repz
int3
fidivrl
test
jmp
fsqrt
cmp
test
xlat
fmul
sub
xchg
mov
out
fnstenv
xor
cmp
shl
in
addl
test
mov
mov
int3
test
cmp
lret
int3
int
in
aam
stc
aas
shl
aas
jmp
mov
jmp
in
sbb
ss
fucomp
dec
lock
shl
rcr
faddl
iret
ljmp
ret
out
les
lret
enter
cli
ret
jecxz
aad
stc
cmp
clc
repnz
xchg
icebp
out
xor
call
ror
xor
addl
test
xchg
test
out
lret
ss
clc
aaa
out
out
cmp
xchg
out
fisttps
adcl
lock
iret
lret
jmp
in
into
xchg
shl
xrelease
mov
fcmovne
in
shl
icebp
loop
iret
into
iret
out
fadd
out
int3
rcl
incl
ljmp
filds
cmc
repnz
cld
frndint
shr
cmp
cmp
in
std
stc
icebp
test
hlt
into
loope
test
cld
enter
out
cmp
std
inc
jecxz
loope
call
lea
int3
loop
xor
cmp
xlat
ds
add
adc
lret
xchg
into
jmp
loope
clc
lds
fdivp
cmp
clc
icebp
test
jmp
jmp
ret
enter
int3
or
test
jo
add
add
ret
cmp
xchg
xchg
std
repz
xor
out
lret
loopne
repz
sti
cmp
lock
mov
xchg
in
xchg
xchg
mov
leave
xor
sti
cmp
std
out
cmc
out
cli
repnz
repnz
repz
ljmp
mov
out
out
in
xor
ljmp
jecxz
fmulp
sub
lret
xchg
out
not
xor
sti
les
filds
rorb
fcmove
mov
out
ljmp
clc
jmp
test
jmp
ret
mov
jmp
test
fistl
lret
fidivrl
repz
out
int3
inc
testl
out
out
loopne
loope
mov
jmp
div
cmp
lret
lret
fcmovne
out
xchg
cmpl
loopne
fcmovbe
lock
lret
rcl
cs
leave
iret
jmp
out
fildl
loop
out
cmp
sbb
ficoms
hlt
aaa
out
cmp
lock
clc
test
ljmp
jmp
in
repnz
in
xor
cmp
fucomip
fchs
roll
test
testb
jmp
jmp
in
int3
hlt
fdiv
xor
fdivrl
cmp
cmc
clc
out
cli
repz
cmc
xor
lds
test
jecxz
xor
xor
fnstenv
cli
int
xor
testl
ficoml
xor
out
add
lock
stc
loopne
loopne
cld
in
sub
into
orb
rcl
leave
shr
cmp
sarl
icebp
aam
and
test
or
xchg
cmp
jmp
aam
lret
out
in
in
loop
xor
out
fiaddl
enter
xor
fstp
sarb
std
out
jmp
mov
shl
lock
out
in
xor
cmp
xor
fmul
sti
std
cmp
jmp
into
adcb
out
shl
cmp
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
in
dec
sub
add
add
xlat
cmp
addl
sbb
ljmp
repz
in
aam
lret
ret
out
ret
mov
ret
nop
xchg
repnz
call
into
das
lret
sti
cmp
test
call
loope
in
loope
nop
in
rol
out
xor
jmp
neg
sti
test
cmp
out
fmull
enter
in
roll
sar
fiaddl
fiadds
mov
xor
enter
int
hlt
xlat
loop
mov
out
in
shr
icebp
enter
call
fdivr
fsubp
fcmovnbe
aam
repnz
out
in
cld
fldl
loopne
icebp
cmp
adc
ret
test
test
fmull
addl
cmp
cmc
fdiv
add
flds
jmp
lock
cld
shr
fdivrp
int
xor
and
lock
loopne
fdivrp
addb
in
call
ret
in
fcom
rcl
flds
cli
out
mov
sti
enter
in
xchg
xor
repz
icebp
aaa
jmp
ds
loopne
fildl
repnz
lock
repnz
adc
mov
test
das
div
fdivs
in
xor
rcr
testl
ljmp
xchg
aaa
cmc
cmp
idivl
sti
fstp
out
rcl
loope
test
in
xchg
jecxz
iret
sub
fcom
int
leave
rcr
clc
fucom
rol
rcl
call
int3
shl
test
loop
loope
repnz
ljmp
sbb
clc
and
idivl
int3
fmul
lock
leave
shr
aas
das
ljmp
jmp
aas
lds
stc
or
rorl
testb
inc
lock
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
stc
cmp
cmc
jmp
ret
call
orb
mov
leave
out
call
out
rcr
icebp
cmp
call
int3
loopne
out
iret
mov
shr
int
stc
lds
lock
cmc
in
shl
cmpl
rcr
lds
call
shl
lea
ss
int
sti
clc
neg
rcr
call
int
out
lret
jmp
out
out
in
idivl
lret
cmp
aas
ds
aas
cli
clc
stc
mov
aad
popl
call
in
cmp
cld
enter
sti
addb
jmp
enter
iret
rolb
int3
cmp
iret
ss
lock
test
mov
jmp
out
loop
ret
out
int
out
aam
cmp
adc
ret
fsubrp
fiaddl
cli
int3
out
lock
cmp
out
faddl
clc
aas
sarl
leave
add
mov
test
ror
hlt
xchg
iret
loope
shr
in
in
in
std
fsubrp
xor
fcmovne
out
mov
mov
in
cmc
jecxz
jmp
out
into
aaa
clc
fsubrp
loopne
fdivrl
aam
mov
ret
or
into
xor
lret
iret
out
aam
fucomp
sar
mov
rolb
repnz
enter
clc
into
iret
ret
in
ds
shl
out
mov
out
loopne
and
ljmp
std
rcl
in
xor
in
int
fdivp
int3
shr
adc
aaa
jecxz
sar
mul
aam
neg
cli
sarb
out
test
fldl
mov
xchg
in
out
xor
in
xor
idiv
jmp
xor
clc
loop
cld
vpsrad
cld
sbb
lret
call
enter
cld
lret
leave
cmc
int
repz
fisttps
incl
out
shl
ret
jmp
stc
xor
cmp
ds
test
ret
inc
leave
ljmp
pop
inc
xchg
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
repnz
jle
add
iret
stc
loope
hlt
into
aad
enter
aam
out
testl
frndint
icebp
mov
int
int
ss
cmp
icebp
ret
icebp
xlat
ret
cmp
sub
adc
iret
sti
int
test
out
lret
cli
jmp
shl
icebp
clc
cmp
xlat
out
fsub
fsubp
xchg
xchg
call
sub
fdivrs
mul
cmc
loope
loope
loope
std
xchg
jmp
jmp
aad
cld
cli
fsub
cld
int
cli
loopne
sbb
call
xchg
nop
clc
fdivr
addl
fdivr
sarb
loop
rol
sar
std
in
loop
loop
enter
enter
loop
aam
sti
adc
aad
iret
aad
jecxz
cmc
xlat
hlt
xchg
and
sub
into
push
int
das
out
xor
cmp
cmp
rcl
stc
jmp
clc
int3
mov
int3
cs
cmp
xlat
sub
lds
testl
aam
lret
fxch
leave
shr
imul
cmpl
in
vpmovmskb
out
loop
sti
sti
orb
ljmp
cmp
cmp
ss
aad
fadd
rcr
ljmp
nop
mov
lret
cmp
in
ffreep
cli
icebp
aad
test
mov
aad
mov
leave
mov
shll
cmp
fistpll
ljmp
repnz
in
clc
ret
xchg
leave
int
mov
aad
ror
fstpt
into
xor
cmc
loopne
in
fiaddl
sti
and
mov
enter
lret
aam
cmp
into
aas
sar
cmp
jmp
ret
out
xor
xor
std
int
sar
out
xor
in
fmull
shl
fucomip
xchg
out
jmp
shrb
fcmovu
ror
repnz
loop
roll
xchg
loop
xchg
xchg
leave
shr
aam
sti
shlb
int
rcl
ret
out
icebp
cli
aas
mov
loope
mov
fimull
push
add
add
rcl
fcomp
aad
mov
mov
jle
add
xchg
icebp
lret
mov
mul
xor
cli
lret
lock
rcr
icebp
rol
xchg
fadd
aad
out
loope
out
shr
sub
clc
xor
hlt
in
shr
out
ret
loop
aam
ljmp
ret
loop
std
rcl
lock
aad
clc
cli
div
ret
xchg
cmc
lret
in
xchg
out
enter
fcmovne
ffree
test
cmp
cmc
ljmp
loop
aam
ljmp
lret
fsubr
sarl
cmp
rolb
test
int3
incl
xor
xor
aaa
cmp
aas
iret
repz
ftst
fcmovnu
orb
mov
lock
xor
repnz
iret
int3
lret
aad
xor
test
fld
cli
xchg
jmp
xor
call
sti
neg
std
cmp
hlt
std
out
int3
out
cli
call
mov
out
icebp
ret
call
int
cmc
into
testb
ljmp
int
xchg
xor
repz
std
out
out
int3
loopne
ret
hlt
clc
xchg
xchg
frstpm(287
cli
call
rcl
lds
iret
cmp
fmul
clc
addl
sarb
out
sti
cmp
ds
fmul
out
fistpll
ds
clc
cmp
mov
out
ror
shl
out
icebp
aad
cld
ror
stc
sti
loope
neg
out
clc
cmp
xchg
fldl
out
cmp
aaa
fst
ds
cli
icebp
rol
mul
les
std
xor
jmp
int
xor
clc
aas
stc
out
xchg
cli
and
mul
iret
xchg
out
mov
jmp
cmp
ljmp
out
adc
in
cld
test
vpmulhuw
xchg
fucom
xchg
shlb
xor
aas
cmp
int3
rcl
icebp
and
faddl
xchg
shlb
cmp
clc
out
int
ror
cmp
aad
xor
mov
imul
add
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
clc
dec
mov
jle
add
ret
out
out
int
flds
rol
not
xor
idivb
in
jmp
incb
testb
repz
jecxz
out
fdivrs
jecxz
shl
out
loopne
lret
out
cmp
clc
cmp
in
clc
xchg
ljmp
ss
ljmp
ret
into
aam
shr
ret
stc
rolb
jmp
repnz
shr
aad
iret
cld
in
and
in
mov
loope
and
int3
xor
aam
div
shlb
stc
sar
sti
test
enter
fdivr
std
int3
std
std
shl
int
leave
in
xor
cmp
in
cli
std
jecxz
in
fcmovnu
out
call
in
call
repnz
ljmp
lock
rol
mov
loope
mov
in
jmp
xchg
xchg
loop
int3
cmc
stc
icebp
int
div
cmp
test
xlat
loope
test
in
enter
cmp
xlat
lret
ljmp
out
fsubrp
int
mov
lret
mov
shr
mov
sar
in
sti
out
ret
in
test
test
into
xchg
mov
cmp
fnstcw
cld
test
enter
fisttps
in
jmp
enter
int3
jmp
loope
icebp
aam
fimuls
sti
icebp
mov
call
cmp
shl
loope
aad
rcl
std
mov
cli
fdivr
int
rorl
out
xlat
xlat
int3
xor
xlat
aam
cmp
fdiv
aad
std
mov
out
fsubp
jecxz
aam
aam
cmp
fsubrp
fcomip
aas
loopne
aas
iret
cmc
rcr
add
imul
int3
mov
decb
aaa
into
int3
cmp
ds
cmp
repnz
leave
fmul
cmc
mov
jmp
loope
xlat
aad
hlt
aaa
rcl
fucom
sti
add
add
jmp
addb
shl
aaa
shl
sti
fstpt
lock
hlt
neg
fcoms
fisttpl
sbb
dec
jmp
int
ret
lret
aad
int
jmp
cs
nop
int3
hlt
add
add
repnz
fcmovnb
adc
addl
loop
xchg
xor
in
icebp
lock
cmp
stc
rcl
adc
loop
fiadds
xchg
sub
lock
rol
ss
std
in
fdivrp
aam
jecxz
leave
xchg
out
xchg
xchg
fucomi
out
xlat
in
cli
fldl
out
ret
adc
xor
repz
int
sti
lret
aaa
sbb
decl
lret
out
and
xor
lret
iret
repnz
out
or
aad
roll
hlt
fcmovne
lds
into
dec
les
out
int3
in
ss
sarl
rcr
out
test
xlat
cmp
loopne
jecxz
rclb
lret
into
repz
cli
lock
repnz
xlat
out
testl
in
cmc
ss
in
int
xor
aad
xchg
loop
jmp
in
jmp
int3
out
xor
leave
sti
rcl
lret
aaa
in
repz
fnstsw
std
hlt
loopne
mov
rcr
test
test
xchg
aaa
int
ljmp
rol
fdivp
fcomp
in
leave
cmp
lock
shl
orl
lret
in
test
add
addb
mov
loopne
shl
shl
imul
ss
sar
aas
cld
aam
fstpt
ds
in
loop
lret
lock
fildl
aad
out
xor
fdivs
cmp
int3
into
fsubrp
in
fdivrp
xlat
mov
int
out
in
mov
shl
ljmp
cmp
lret
rolb
fadd
cmp
jmp
sub
call
fdivr
repnz
aad
jecxz
sar
stc
icebp
repnz
xchg
lock
repnz
hlt
enter
out
icebp
enter
loopne
xlat
aad
loopne
out
in
ror
nop
loope
lret
loop
xor
int
jmp
addl
sbb
enter
xchg
fsubrp
xchg
hlt
in
clc
xor
aam
xor
add
pop
mov
pop
pop
pop
leave
ret
