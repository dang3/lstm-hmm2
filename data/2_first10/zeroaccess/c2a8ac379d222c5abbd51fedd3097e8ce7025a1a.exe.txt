push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
repz
addr16
jl
xlat
cmp
ffree
pop
push
add
cmpps
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
xor
inc
add
aas
sub
sbb
cmp
dec
addb
repz
mov
xor
jne
aaa
inc
sbb
sbb
ja
movsl
lods
clc
lahf
aas
aad
std
in
mov
xchg
mov
call
adc
lea
movsl
xchg
mov
pop
sbb
stos
lea
or
jno
cmp
sub
scas
inc
aas
push
sub
leave
and
mov
in
or
das
push
sti
repz
xor
dec
enter
out
dec
je
sub
or
cmp
mov
sub
or
scas
sbb
into
dec
lret
jp
xor
xchg
push
inc
sbb
and
mov
xchg
cwtl
lcall
arpl
xor
lahf
dec
hlt
daa
call
out
cwtl
dec
push
pop
sub
xor
jb
loopne
icebp
fstpl
adc
dec
push
orb
movsl
data16
out
test
dec
jae
lds
push
inc
mov
into
sbbl
pop
mov
shll
mov
hlt
jns
sbb
cmpsl
xlat
sbb
ljmp
movl
stos
ljmp
cltd
add
in
daa
inc
cli
icebp
xor
out
loopne
fnsave
adc
sbb
xor
jno
popa
mov
jae
pop
imul
and
cwtl
imul
sbb
lods
in
ret
iret
inc
jp
inc
lds
fidivl
js
inc
lcall
lret
sbb
pop
xchg
aam
nop
push
cld
sarb
popa
fistpll
push
jns
fcomi
mov
iret
bound
sub
mov
adc
xor
loop
sub
adc
xor
enter
xchg
jp
stos
bound
iret
call
inc
adc
lahf
ss
xchg
jg
sahf
inc
mov
jns
fdivp
in
sub
mov
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
adc
jle
jl
jle
jl
xchg
roll
mov
rcr
inc
jno
pop
sbb
rcrb
inc
mov
and
xchg
inc
push
ja
clc
scas
mov
bound
xorl
and
mov
leave
cmpl
call
sbb
push
pslld
cmc
out
inc
mov
add
arpl
les
adc
lea
fdivp
imul
cmp
stc
cmc
outsb
cwtl
sub
rol
out
xchg
aas
cmpsl
pop
lret
xchg
in
pop
mov
mov
repz
leave
mov
push
mov
add
and
ficoml
lea
jb
clc
es
xchg
movb
sbb
pop
xchg
daa
movsl
or
into
icebp
adc
sbb
and
je
in
mov
mov
ljmp
outsb
push
jle
mov
loope
and
or
inc
fxch
aas
dec
rsm
sbb
test
lcall
mov
adc
mov
or
xchg
cmp
push
sarl
inc
call
sub
mov
push
push
movsb
push
or
pop
cmpsb
and
push
cmc
nop
sti
js
adcl
ret
jp
jg
roll
push
int3
or
mov
dec
incl
and
push
xchg
lea
add
inc
enter
adc
int3
int
lea
outsl
or
sub
hlt
int3
addr16
cmp
mov
mov
adc
sub
cmpb
idiv
mov
mov
sub
sub
or
sbb
or
nop
int
sub
out
cmpsl
cmp
sub
adc
pushl
aaa
xchg
xor
das
cmc
mov
jae
lds
cmpsl
es
mov
daa
sub
push
inc
cwtl
rolb
sub
adc
push
cmpsb
sub
xsha1
cmpsb
dec
pop
push
mov
adc
insb
jmp
sti
testl
pop
fdivrl
imul
imul
fldenv
out
lds
add
es
cmp
outsl
lock
xor
lret
fisubl
jns
or
push
ja
sbbl
ds
add
and
mov
comiss
lea
xor
dec
addr16
loope
leave
mov
cmp
gs
cli
lods
inc
test
icebp
jge
jle
enter
mov
movsl
push
adc
xor
sbb
mov
mov
add
cmp
sbb
add
mov
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
mov
jl
addr16
jl
jns
test
insb
sub
enter
bound
inc
adc
inc
adc
lahf
movsl
and
dec
dec
iret
fs
outsl
or
dec
fsubrl
jae
clc
pop
sub
idivb
ljmp
mov
mov
insb
mov
sub
inc
mov
js
sbb
xor
test
mov
in
lcall
inc
arpl
sbb
jg
shl
movb
mov
push
pop
fnstcw
pop
xchg
push
jae
dec
idivl
in
daa
dec
cmp
out
xchg
pushf
aad
jecxz
fcoml
and
add
scas
movsb
nop
sbb
fdivl
lock
je
icebp
and
lods
lods
cmpsb
fwait
into
les
push
push
push
mov
xchg
jecxz
push
jl
inc
xor
mov
mov
repz
adc
xor
fsubrl
jg
mov
popa
mov
xor
xchg
sti
rorb
push
arpl
add
jnp
aaa
mov
add
jecxz
cs
jp
jbe
in
and
in
cld
nop
adc
scas
and
jno
or
sti
pop
dec
pop
lahf
mov
adc
cmpsb
loopne
push
sbb
or
jns
movsl
cli
addl
bound
sub
pop
pop
aaa
fsubl
xchg
cmp
out
sub
ljmp
jae
pop
aaa
js
rorb
stc
mov
dec
aaa
push
hlt
stos
mov
rclb
or
lods
mov
lcall
adc
pop
repnz
mov
leave
leave
gs
aaa
jl
push
mov
inc
rol
xchg
jae
mov
cmc
xchg
scas
lods
sbb
ret
xchg
cwtd
orl
popf
mov
ljmp
cmc
xchg
ja
imul
stc
faddp
rcll
nop
loope
or
hlt
shlb
push
cmp
movsb
pushf
in
ret
jl
push
xlat
fcoms
push
jge
dec
push
outsl
lahf
scas
mov
mov
jnp
out
sahf
test
and
xchg
dec
mov
ss
mov
xchg
rcrb
rolb
arpl
inc
inc
sub
xor
jp
mov
dec
notb
movsb
test
ficomps
sarb
repz
stc
je
jns
push
incb
jecxz
cmp
sahf
xchg
mov
fimuls
xchg
stc
rol
aas
mov
sub
xor
xchg
mov
ret
sti
xor
or
mov
mov
loop
addr16
bound
loop
mov
icebp
sbbl
leave
lret
pop
rcrl
xor
test
aaa
pop
fcmovb
mov
int
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
stos
dec
int3
fmul
outsl
mov
flds
ds
adc
jge
mov
xor
lds
insb
popa
popa
je
push
xor
sbb
push
sbb
test
out
clc
pop
jae
pop
inc
mov
mov
and
ret
xor
jbe
test
inc
sbb
mov
lods
mov
jl
xchg
mov
arpl
adc
or
mov
sbb
xchg
push
fisttps
push
push
ret
xlat
push
and
sbb
and
pusha
push
cmp
repnz
imul
sub
xchg
cwtl
pop
xchg
mov
sub
pusha
jo
test
adc
add
mov
xchg
daa
aad
mov
push
mov
dec
mov
fmul
jno
lock
sbb
aad
fiadds
xchg
xor
adc
dec
xlat
xchg
jmp
pop
je
push
clc
pop
in
xchg
inc
movsl
add
inc
and
cbtw
enter
sub
imul
rcrb
ds
push
push
loope
sub
dec
test
dec
lods
xchg
or
jg
ret
sbb
xor
int
mov
jbe
lret
inc
rorb
jb
jb
mov
jne
mulb
mov
inc
fists
repz
stos
call
sahf
aad
or
mov
out
les
sarb
stos
divb
fsub
dec
dec
cmp
xlat
sub
mov
push
cmp
dec
xor
jg
repz
xor
jge
outsl
lea
dec
inc
fisubl
aad
sub
aad
mov
xlat
cmp
sbbl
shlb
adc
jmp
cltd
pop
adc
insl
aam
lahf
mov
jg
cmpsb
sub
ret
push
fcoml
cmc
dec
mov
xchg
sbb
sbb
cmp
jg
les
mov
orb
push
mov
lds
pop
sub
mov
popf
sbb
mov
push
bnd
rcrl
iret
sahf
mov
push
or
sub
pop
cmp
imul
mov
lods
popf
add
xchg
mov
fstpl
test
aas
cli
popa
cmp
addr16
out
and
adc
cmpl
pushf
adc
adc
mov
push
out
data16
xor
pop
arpl
in
loope
mov
call
xchg
pop
into
lahf
addr16
sti
lcall
rorb
jo
and
outsl
jmp
mov
xor
dec
icebp
or
xchg
xchg
mov
orl
xor
or
call
loope
clc
loope
dec
push
hlt
xchg
testl
flds
cmpsl
mov
mov
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
xor
add
jle
jl
push
jp
sbb
insl
mov
sub
jae
jp
push
push
ss
push
pop
rorb
cmp
pushf
jo
mov
mov
lods
ret
xor
push
cltd
mov
mov
mov
add
test
add
adc
mov
jecxz
xchg
in
stc
iret
or
adc
sub
int
loop
jne
test
aam
xchg
aad
shlb
mov
push
in
and
movl
imul
dec
rcll
mov
push
add
push
cmp
jns
pop
lcall
pop
xchg
in
lahf
lret
js
call
jmp
jbe
adc
mov
inc
xlat
pop
in
and
dec
mov
imulb
mov
fsubr
ficoml
mov
xor
xchg
in
mov
mov
push
outsl
pop
jg
lcall
inc
js
jecxz
push
or
rolb
mov
pushf
mov
sub
ds
arpl
setae
cmp
inc
dec
loope
rorl
xchg
xchg
out
lret
jp
sbb
out
push
add
sar
dec
sarl
aas
mov
inc
daa
lock
faddl
and
ljmp
inc
mov
aad
mov
mov
jl
in
aam
jle
sub
mov
flds
push
sub
push
shll
daa
mov
cmp
in
out
pusha
leave
data16
inc
adc
adc
sub
loop
xlat
jge
mov
cmp
ss
loop
inc
arpl
pop
imul
inc
popa
jge
addr16
fiadds
sahf
sub
cmp
mov
repz
bound
rolb
mov
xor
lods
or
call
pop
out
dec
and
dec
sub
dec
pop
ss
inc
dec
loope
mov
inc
push
xchg
dec
addr16
enter
mov
shrb
mov
adc
push
into
dec
pop
subb
fs
test
xor
xor
xchg
rorl
dec
movsb
mov
test
ret
dec
repz
mov
sbb
pushf
mov
jno
mov
add
jge
es
subb
add
cmp
inc
mov
les
scas
adc
xchg
sub
out
ret
mov
sub
clc
int3
pop
pop
testl
sub
push
mov
and
mov
cmp
and
loopne
jne
mov
dec
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
jp
dec
cmpsb
sbb
mov
jmp
pop
xor
pushf
pop
mov
in
push
out
out
popa
arpl
cmp
into
pop
lods
rcr
xchg
test
mov
xchg
xchg
fcomp
adc
insl
imul
mov
and
pop
jno
popf
xchg
psubw
mov
std
push
inc
popa
xlat
pop
hlt
hlt
push
outsl
pop
loopne
cmpsb
mov
dec
sbb
roll
lods
loopne
popf
mov
cmp
cmpsb
js
mov
push
adc
lcall
out
pop
insl
inc
out
cltd
pushf
and
addl
int
insl
adc
jbe
out
mov
popa
addr16
dec
insb
call
imul
cmp
inc
loope
aaa
jo
cmp
mov
jg
and
into
mov
bound
ss
mov
mov
mov
shrb
adc
push
sub
cmp
jl
pop
ljmp
outsl
shlb
cmp
idivb
mov
pop
hlt
push
and
repnz
dec
cmp
test
into
jne
adc
insl
push
sarb
adc
cmp
and
mov
jle
lcall
and
mov
fstp
mov
out
cmp
and
rcrb
push
push
and
rcl
adc
bswap
dec
jno
adc
xchg
in
mov
jle
clc
inc
les
inc
sub
push
pop
fwait
aaa
in
xchg
cmpl
fistpl
and
xchg
or
sbb
ljmp
notl
dec
ret
pop
push
or
into
push
insl
mov
sub
and
into
ja
lods
xchg
aaa
xorb
mov
in
and
push
int3
aaa
testb
push
sbb
faddl
ja
aad
mull
adc
cli
es
mov
lods
push
in
inc
or
and
out
in
fisubrl
push
sbb
ja
mov
mov
imul
xchg
jno
jle
arpl
jg
repz
and
jns
test
ret
pop
les
fisubl
jle
xchg
mov
add
in
jno
mov
fsub
xchg
icebp
jecxz
test
ret
dec
insb
out
mov
jge
sbb
loope
shrl
and
cmp
jecxz
pop
pop
push
add
pop
or
push
sbb
rcl
and
das
dec
pushf
mov
cmpsl
add
pop
lds
push
xor
mov
movsl
lcall
repz
fs
mov
sub
lretw
or
mov
insb
inc
xor
lea
mov
mov
cmp
jmp
mov
jne
adcb
jecxz
jecxz
ljmp
jl
jle
js
cwtl
cmpsl
jle
sets
dec
incl
movsb
pop
orb
rcll
xor
jp
repz
add
mov
jo
test
add
xchg
rorl
leave
leave
add
test
or
rcrl
push
jg
rcrb
int
sub
push
mov
ret
jns
int
push
ljmp
sahf
test
add
test
pusha
pop
scas
dec
dec
xchg
cmpsl
in
mov
mov
mov
int
fsubrl
xor
or
data16
pop
fistl
sbb
adc
adc
jo
cwtl
hlt
xor
aas
sbb
stos
pop
mov
cmp
jns
test
stos
adc
fst
sbb
mov
outsb
lahf
fidivs
and
outsb
test
imul
xchg
lret
inc
sbb
cmpsl
push
xlat
mov
mov
test
pop
sbb
icebp
adc
push
outsl
adc
sub
mov
imul
xchg
out
sub
out
and
roll
mov
inc
xor
lock
cmp
mov
mov
dec
mov
gs
out
in
jg
into
addb
inc
pop
xor
shr
shr
and
cld
fsub
dec
stc
jo
in
or
inc
mul
mov
outsl
xchg
xlat
cli
out
xchg
or
addr16
sub
stos
leave
sbb
dec
inc
outsb
stos
push
fwait
std
outsb
jmp
dec
in
push
sub
cmpsl
jb
sbb
out
jp
pop
mov
fstpl
xchg
pop
dec
ret
xchg
shrb
pusha
adc
loop
cltd
mov
mov
push
in
add
test
lods
repz
cmp
adc
mov
fldt
loopne
jnp
mov
mov
insl
or
jb
outsl
insl
add
aam
xchg
xchg
je
cmp
mov
mov
cmp
inc
int3
dec
dec
cmp
jne
pop
out
xchg
rcl
out
insl
sbb
jge
fdivr
xchg
loope
aaa
imul
mov
rcll
call
and
adc
jl
loop
out
xlat
xchg
notb
cmp
in
mov
cmc
repz
ret
mov
push
adc
pop
or
jge
mov
jp
xor
ss
mov
int
cld
mov
mov
bound
lea
dec
add
aam
xor
push
int
jge
mov
cli
push
imul
mov
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
add
jl
addr16
jl
xor
sub
or
cld
or
shlb
and
or
xlat
es
shrb
push
outsl
jge
and
xchg
xchg
pop
inc
pusha
jae
stc
lods
pushf
pop
das
int3
ret
mov
jne,pn
cmpsl
insb
test
out
jp
les
dec
mov
fisubs
imul
mov
add
adc
icebp
fcoms
pop
stos
int
sub
inc
out
xchg
pop
lea
das
cmpb
sarl
mov
pop
pop
mov
jl
cmp
and
xchg
inc
ret
push
adc
adc
out
sti
xor
rcrb
jmp
fsubl
push
fistl
ja
or
scas
jecxz
and
push
rcrb
jo
mov
mov
pop
into
call
inc
add
out
call
scas
and
mov
scas
inc
dec
test
jp
in
push
test
and
mov
inc
dec
insb
and
test
out
inc
mov
inc
pop
add
adc
rclb
lods
add
jecxz
iret
mov
addl
outsb
inc
in
mov
push
mov
cwtl
dec
sbbl
mov
mov
push
cmc
inc
into
lret
fdivs
mov
mov
push
xchg
push
movsl
fwait
inc
mov
addr16
std
in
sbb
sti
pop
test
loope
add
sbb
xchg
addr16
push
adc
dec
arpl
outsl
mov
adc
xlat
xchg
mov
dec
and
lret
scas
into
fwait
inc
sarl
cmp
addl
mov
fldt
pop
cmpsb
mov
int
add
mov
int
gs
xlat
mov
pushf
scas
inc
pop
andl
div
pmullw
lock
aam
mov
and
pop
push
dec
xchg
aaa
and
sub
bswap
js
aas
sbb
dec
ret
icebp
add
push
or
test
fbstp
loop
adc
inc
push
cmp
mov
loope
mov
outsb
or
fwait
mov
jne
sub
inc
cmp
sarl
jecxz
and
mov
dec
fimuls
cmp
gs
sub
mov
inc
adc
int
bound
pop
stos
lcall
pusha
pop
in
push
sbb
pop
sub
rolb
lahf
jae
xor
outsb
lahf
shll
pushl
mull
lret
das
int
loopne
rcll
sbb
mov
push
int
popa
pop
cld
and
cmp
pop
push
outsb
and
push
aaa
sub
add
inc
cmp
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
dec
mov
xchg
les
jl
mov
mul
sbb
sub
xchg
jne
sbb
data16
test
outsl
xchg
scas
hlt
adc
xchg
mov
or
inc
shlb
mov
imul
xor
sahf
aas
popl
xchg
mov
inc
xor
mov
adc
aad
jmp
xor
adc
fidivl
shll
mov
nop
push
jbe
push
dec
and
fistpll
sub
cmp
stc
inc
sub
scas
push
cmp
and
sub
mov
shll
cld
nop
ja
add
jecxz
adc
add
je
loopne
add
fnsave
sub
sub
jecxz
daa
stos
xchg
or
mov
add
data16
or
sub
mov
dec
ret
shr
dec
repnz
mov
push
pop
in
or
sarl
mov
mov
test
push
sub
das
pop
lods
lret
dec
push
mov
call
mov
mov
xlat
or
jo
add
movsb
mov
orb
sti
sbb
xchg
sbb
popl
or
xchg
xchg
sbb
mov
in
daa
aad
pusha
loopne
cs
enter
cmpsl
mov
and
dec
sbb
sub
es
and
bound
cli
lock
pop
mov
cltd
dec
fnstenv
ret
loop
dec
and
sub
outsb
cltd
xchg
ja
xor
mov
inc
cmc
cwtl
mov
xchg
inc
pop
or
into
jne
xchg
jp
jp
jecxz
scas
mov
aas
lret
nop
xchg
sbb
mov
and
inc
scas
mov
sbb
lock
ljmp
mov
lds
sbb
subl
sub
repnz
adc
call
int3
xchg
dec
cltd
mov
push
sbb
test
push
push
insl
fistl
dec
add
pusha
mov
mov
scas
xchg
ud1
xor
push
loopne
xchg
inc
and
push
sbb
mov
fwait
scas
xchg
inc
repz
push
xchg
mov
xchg
adcb
or
xor
movl
push
shlb
xchg
neg
and
cwtl
scas
mov
cmp
jecxz
inc
dec
push
movsl
cs
push
xchg
loopne
clc
cmp
sub
xor
int
sbb
lods
fsubl
jnp
pop
inc
push
addr16
sarl
sahf
out
cwtl
lock
add
lods
stc
cld
inc
cmp
mov
add
ds
ds
sub
xor
inc
mov
push
mov
inc
pop
scas
mov
mov
adc
stos
fnstenv
xor
pushl
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
dec
inc
das
push
jl
addr16
jl
mov
mov
push
jnp
outsl
lock
mov
lods
adc
incl
and
stos
hlt
xchg
jl
or
shll
add
push
scas
mov
hlt
jecxz
js
mov
call
adc
scas
add
or
jae
mov
push
mov
inc
cmp
xor
jb
aas
push
mov
adc
not
mov
add
jnp
mull
mov
pop
test
pop
les
jb
adc
cli
sbb
mov
bound
jecxz
loopne
jmp
push
cmp
sbbl
nop
mov
add
mov
or
movsl
mov
push
mov
stos
mov
pop
rclb
or
movsb
cwtl
in
in
add
orl
aas
fsubrs
mov
cmp
pop
xorl
xchg
aam
mov
inc
test
cmp
push
xchg
pusha
pop
in
imul
inc
mov
test
push
mov
xor
out
push
outsl
popf
cmc
out
adc
mov
bound
mov
insb
lret
pop
sbb
shlb
xor
cmp
aad
jmp
mov
imul
stc
mov
movsl
jns
ds
scas
ds
mov
mov
repnz
fwait
or
push
pop
cmp
xor
sahf
aam
mov
jns
loopne
cmp
sub
sub
lods
mov
js
fcmove
jmp
mov
cld
iret
push
test
inc
and
push
xchg
pop
das
or
data16
pop
cmp
fcoml
xchg
jmp
inc
clc
repnz
out
fwait
mov
inc
ds
and
test
push
dec
sbb
scas
mov
int
pop
xor
stos
pop
popa
int3
cmp
out
fwait
mov
and
ljmp
push
mov
std
cmpsl
xor
push
xor
adcb
popa
push
out
push
mov
outsl
jmp
js
inc
lret
push
adc
fnstcw
aas
sbb
outsl
adc
lahf
clc
pushf
sub
dec
mov
repnz
pop
arpl
in
insb
out
stos
or
push
sbb
lret
add
push
out
push
fnstcw
or
stos
sub
mov
mov
add
mov
jns
sbb
jns
bound
hlt
sahf
pop
inc
or
andl
es
sbb
test
adc
cmp
faddl
xchg
outsl
lret
cld
mul
push
pop
fcomps
add
ja
push
mov
dec
xor
loop
nop
pop
or
arpl
out
repz
mov
pop
jge
sbb
dec
xor
scas
aaa
adc
mov
ret
jmp
jnp
repnz
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
pop
dec
pop
jmp
adc
jg
jl
ret
add
push
mov
pop
jmp
fstpl
leave
shrb
mov
vsubss
iret
idivl
mov
xor
inc
push
adc
push
add
fsubr
lahf
fwait
lahf
ficoml
adc
mov
leave
shlb
cmp
inc
inc
xor
sarl
pop
and
in
and
inc
dec
scas
out
push
or
mov
jae
dec
aam
repz
add
bound
call
scas
shrb
shl
fldlg2
push
cmp
lea
stos
inc
ret
lea
sbbl
or
jo
jae
push
pop
pop
loopne
jp
and
pop
or
int
int
fisubl
xchg
loopne
lahf
imul
sbb
cwtl
pop
add
mov
repnz
mov
mov
pop
mov
inc
pop
add
push
sub
cmpsl
push
cwtl
das
mov
and
jb
movsb
imulb
dec
stc
xlat
shrb
nop
pop
sbb
mov
movsl
cmp
and
jne
mov
xor
mov
and
inc
in
adc
sub
xchg
aad
and
stos
or
inc
and
xor
pop
adc
lret
inc
js
dec
xor
jmp
out
out
int3
add
add
arpl
xor
add
or
push
push
lea
test
std
test
cmp
les
jl
mov
int3
mov
sbbb
fs
ret
sub
iret
cmpsl
insl
sbb
xchg
sbb
fsubrs
dec
inc
inc
cli
loop,pt
into
sbb
add
pop
addl
mov
aas
ja
adc
movsl
sbb
and
shlb
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
pop
pop
sbb
jl
xchg
push
pop
loopne
mov
push
xlat
jbe
rclb
add
push
cwtl
addr16
xchg
jne
stos
push
jecxz
sub
push
push
mov
xchg
fstpl
inc
jbe
jl
stos
pop
or
pop
lds
push
and
adc
inc
sub
cmpsb
ds
mov
cmp
xchg
adc
mov
insl
jmp
sbbb
scas
xchg
mov
rorb
sbb
ret
das
sbb
xchg
mov
push
push
int3
lock
cltd
in
lods
pop
mov
shrl
cld
dec
pop
mov
pop
rcrb
ds
ljmp
mov
mov
cmpsl
adc
xchg
jecxz
outsb
addr16
inc
or
mov
nop
lret
fs
rcll
cwtl
and
popf
out
popf
mov
dec
in
int3
fldl
insl
mov
mov
rcrb
ljmp
xor
dec
push
sbb
lret
pop
xchg
ja
dec
shll
pop
aaa
mov
cmp
mov
out
lahf
add
mov
cmpsl
in
imul
loop
mov
sub
inc
pushf
fidivrl
shrb
xchg
cli
pop
insl
popf
repz
jno
inc
into
sub
cmp
loopne
shrl
lret
dec
xor
mov
mov
dec
loope
or
push
jo
shrb
mov
sub
pop
mov
push
add
push
leave
call
lock
ds
jecxz
push
xchg
jns
into
movsl
or
inc
pop
sbb
hlt
sub
xor
jno
int
mov
clc
loopne
pusha
lret
dec
dec
push
inc
fistpl
sub
orl
jp
ror
test
shll
mov
aam
ficompl
inc
sbb
call
clc
jmp
sarb
sarl
outsb
mov
jl
insl
jg
jl
leave
movsl
fisttpl
mov
push
sbb
xor
lds
cmp
jmp
jno
and
fdivrp
fnstenv
int
and
adc
sub
mov
mov
imul
mov
insb
push
pushf
insl
shrl
push
movsl
mov
stos
jge
divl
icebp
sub
mov
pop
xchg
jae
data16
xor
loopne
push
stc
test
test
cs
test
shlb
cmp
and
dec
sub
out
pop
sbb
jg
xchg
inc
mov
push
and
inc
xor
jnp
xchg
sub
or
cmp
outsl
je
or
aas
inc
lock
dec
in
sbb
xor
push
xchg
in
sbb
sbb
dec
push
rolb
in
fsubl
sti
cmc
lret
xchg
test
xor
xor
out
mov
aam
jae
jg
sub
sub
mov
push
adc
aaa
add
hlt
mov
inc
push
mov
xchg
fadds
cmp
pop
mov
push
jecxz
leave
push
jo
repnz
xchg
popa
das
jmp
push
or
into
mov
xchg
fisttpll
xchg
push
adc
dec
pop
and
jmp
fs
and
push
sub
xchg
idivb
iret
dec
stos
mov
mov
mull
addb
lahf
xchg
out
lahf
add
lcall
shll
pop
inc
loopne
mov
mov
unpcklps
daa
ss
lods
repz
or
mov
mov
test
pop
xchg
data16
xchg
push
xchg
popf
and
jbe
pop
mov
jmp
addr16
or
arpl
aas
cwtl
pop
aam
imul
jl
insl
jg
jl
push
sub
jge
popa
loope
in
enter
hlt
sub
pusha
imul
inc
cld
inc
cmc
jp
ljmp
mov
jo
pop
xor
fadd
pop
adc
insl
enter
leave
jns
add
add
add
mov
xchg
in
xor
das
cmp
add
jno
mov
or
ror
or
test
jns
ja
fisttpll
lods
pushf
xlat
lcall
mov
sub
mov
mov
push
cmp
inc
clc
cld
mov
std
xchg
out
adc
jmp
jmp
rcr
enter
mov
in
add
sbb
jecxz
shrb
mov
and
iret
testb
fwait
jmp
add
xchg
shlb
and
sarl
xor
mov
lds
dec
ror
xchg
and
idiv
push
xor
and
jmp
sbb
adc
imul
mov
jns
pop
jp
out
mov
lret
ret
and
cwtl
sub
inc
or
jno
mov
nop
sbb
sti
mov
call
test
test
aam
adc
xchg
mov
dec
dec
jmp
push
and
sahf
and
push
cmp
dec
pop
stc
or
adc
fsubrl
or
sbb
cs
jg
jnp
cmp
rcrb
cmp
jle
aaa
jge
clc
xchg
xor
push
es
adc
lds
les
xchg
pushf
aaa
jl
jnp
scas
pop
mov
push
ret
or
push
push
adc
add
loopne
push
std
dec
xchg
inc
sbb
pop
insb
mov
call
outsl
jbe
add
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
sbb
insl
jg
jl
mov
add
xor
jno
xchg
cmpsb
repnz
inc
lock
pop
movsb
or
aas
test
add
push
cmp
testl
xchg
jg
andb
or
jnp
mov
or
fisttpll
push
pop
or
xor
fisubs
sbb
or
out
and
daa
les
pop
mov
xchg
jp
icebp
loope
test
out
xor
cmpsl
pop
xor
cmp
xor
stc
add
ljmp
test
sub
sti
and
sbb
in
mov
mov
or
add
xor
add
dec
xlat
iret
adc
jmp
fstpt
fs
hlt
inc
jmp
repz
add
mov
mov
fwait
scas
stos
inc
jno
outsl
dec
or
ja
stos
cmp
or
shlb
in
icebp
dec
mov
mov
pop
dec
stos
xchg
dec
lea
push
idivb
mov
fsubp
fisubrl
mov
jae
outsl
pop
testl
ljmp
push
sub
or
push
das
sbb
mov
pop
js
mov
pop
jae
jge
cli
into
popa
fs
push
pushf
cmp
test
jg
test
into
daa
dec
pusha
xchg
mov
cli
iret
insl
xor
iret
aad
pop
bnd
int3
lahf
mov
xor
test
gs
in
xchg
xchg
mov
addl
mov
xor
out
jge
sub
js
stos
mov
mov
push
xor
movsl
imul
movsb
in
int3
sub
mov
aaa
cwtl
scas
stos
xlat
test
cmpsb
cmp
jb
inc
jb
lock
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
or
ljmp
cmpsl
aam
mov
mov
or
mul
mov
sub
dec
jb
xchg
inc
popa
xlat
pop
sub
push
test
shlb
in
call
cmp
lds
dec
pop
addb
inc
aas
mov
cmp
xchg
mov
ljmp
jp
jbe
gs
imul
insb
push
out
adc
addr16
mov
mov
mov
ja
cli
les
push
leave
jne
lods
cmpsb
into
xchg
stc
and
jbe
ret
and
add
ss
lods
xor
ss
mov
pushf
push
fwait
mov
push
and
in
cmpsb
inc
out
push
add
sbb
mov
mov
sti
in
rolb
nop
or
fisubrs
push
cmc
sbbl
in
cwtl
jl
rcl
aas
push
sub
ljmp
imul
icebp
or
inc
incl
and
in
sbb
dec
or
push
add
int
cmp
push
push
mov
mov
aam
out
in
rcrb
xchg
mov
jle
or
inc
pop
or
fs
dec
xor
lea
fwait
dec
jmp
inc
sbbb
and
enter
insl
xchg
nop
mov
sbb
push
mov
pop
pop
dec
or
mov
cwtl
fbstp
ret
push
mov
dec
stos
mov
outsb
jl
nop
inc
test
outsb
test
rolb
or
lret
rclb
std
pop
fstpl
mov
pop
jbe
aas
clc
jns
sti
sub
sbbl
jecxz
leave
sbb
pop
ret
push
mov
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
push
dec
cmp
stos
jg
jl
jbe
mov
or
dec
lea
ret
sbb
popa
sub
leave
cmpsl
lea
pop
mov
dec
hlt
push
pop
movsb
xchg
int
rcrb
mov
pop
adc
mov
jecxz
les
rcrl
rolb
fldenv
call
in
sbb
stos
mov
fs
lcall
arpl
xlat
rorb
lea
adc
outsb
adc
es
lcall
xor
mov
dec
dec
mov
jae
call
xchg
cli
subl
stos
mov
lods
sbb
movsb
pop
or
pop
sarl
nop
add
jns
sar
dec
rcrb
rcl
icebp
aas
fiadds
xor
or
sti
cmpsb
lcall
incb
push
in
enter
arpl
cmp
lret
lods
int3
jecxz
jns
and
push
test
repz
lds
fldl
shll
lods
dec
jge
les
sbbb
bound
lea
loope,pt
jmp
call
pop
ds
sub
scas
rcrb
in
xchg
frstor
add
xchg
mov
mov
aad
mov
xor
jae
clc
imul
cmpsb
xchg
mov
xchg
dec
mov
mov
les
movsl
inc
fxch
pop
mov
clc
xor
rcll
and
jbe
daa
fisubs
scas
sbb
or
lea
inc
cmpb
adc
sub
lcall
or
inc
inc
add
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
or
es
jl
stos
jg
jl
mov
fwait
fs
jg
mov
pop
hlt
inc
lret
cs
lea
scas
ficoml
jns
aas
pop
sarb
jge
imull
mov
mov
clc
adcl
mov
cli
pop
subl
sbb
push
loopne
sbb
pusha
mov
movsb
push
add
pusha
mov
fimuls
rcll
adc
xor
mov
pusha
adc
inc
psadbw
xor
int3
sbb
xor
repz
mov
push
shr
xor
xchg
inc
aaa
cmp
dec
test
aas
les
addl
andb
sbbl
movsl
outsb
mov
xor
sahf
lock
add
sbb
shll
pop
js
cmpsb
scas
icebp
sahf
or
push
push
sbb
sub
dec
fucomi
popa
jbe
pop
mov
xchg
jne
in
and
test
das
or
das
pop
dec
aaa
enter
xchg
test
mov
pusha
sub
xor
sub
push
pop
bound
scas
xorb
inc
pop
sbb
sbb
rcl
lret
mov
mov
mov
mov
cmp
push
xchg
push
cwtl
fs
sub
cld
icebp
inc
adc
or
jb
add
jg
pop
pusha
cmp
test
and
mov
adc
mov
jne
addb
mov
loop
loopne
bound
add
sub
dec
inc
stos
pop
add
jmp
movl
mov
movl
jmp
roll
push
aad
ror
mov
cmp
jl
jg
jl
mov
out
inc
dec
outsl
fdivrl
addr16
int
push
loope
out
imul
in
insb
imul
fidivrl
lods
mov
pop
cli
push
roll
mov
pop
push
pop
or
push
pushf
int
cmp
pushl
repz
hlt
jb
loopne
push
fidivs
xor
aaa
insb
ficoml
adc
shll
push
nop
in
sub
jecxz
mov
js
pop
lock
cmpsb
aad
test
dec
shll
idivl
repnz
popa
addl
ljmp
mov
inc
pop
loope
lods
push
pop
subb
das
pop
sub
in
data16
dec
mov
mov
fwait
int3
sub
cwtl
sahf
in
push
xor
movsl
push
pop
sbb
out
imul
enter
jle
cmp
dec
das
pop
ss
and
pushf
jg
clc
pop
insl
inc
pop
and
sti
test
add
mov
mov
ret
or
inc
and
xor
aaa
into
das
in
inc
sub
cmp
aam
xchg
mov
push
add
or
jne
or
out
aad
mov
int
push
pushf
lea
lea
mov
push
divl
jb
sub
jmp
xchg
or
add
sub
int
mov
mov
mov
xor
inc
and
mov
test
jge
shrb
pop
lret
adc
pop
ss
mov
pop
fs
mov
jbe
xor
dec
ffree
sbb
faddl
rcr
mov
inc
movl
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
dec
dec
test
jl
stos
jg
jl
lds
enter
mov
mov
nop
inc
add
es
aam
iret
mov
ret
insb
jnp,pn
xchg
xchg
test
ljmp
sti
ds
dec
lret
inc
jle
jmp
lea
rcl
sub
aad
cld
mov
fwait
pushf
stos
push
fimuls
mov
movsb
xchg
cmp
lock
or
jecxz
sbb
sbb
mov
push
xchg
fldt
xchg
iret
inc
ljmp
dec
not
aad
jg
ja
xchg
fidivs
sahf
gs
sub
add
xchg
cmpsl
jnp
lahf
jmp
daa
mov
scas
lock
pop
fdivrl
xchg
sub
xor
scas
jmp
cmpsl
into
inc
lcall
mov
cmp
out
aaa
fists
push
cmpsb
rcrb
fucom
or
test
repnz
negl
jno
int3
roll
pop
jns
cmp
nop
sub
xchg
out
lret
and
inc
add
fstps
and
scas
cltd
cmp
sub
sbb
les
repz
call
lods
xor
push
dec
cmp
jne
xchg
mov
cmp
in
jle
arpl
in
scas
movb
cmp
dec
sbb
idivl
ficomps
shlb
iret
push
xorb
sub
dec
cli
xchg
aas
or
cmp
hlt
cmp
daa
imul
int
mov
cmp
sub
and
mov
es
push
push
mov
push
bound
inc
pop
push
mov
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
pushf
push
roll
jl
push
pushl
jg
pop
dec
out
jp
mov
imul
cs
arpl
imull
and
aad
dec
mov
mov
maskmovq
imull
mov
sub
push
dec
cmp
je
in
xor
ja
pop
ja
outsl
test
and
mov
xchg
add
dec
and
add
ss
imul
xchg
pop
xor
jbe
adc
aaa
mov
push
jge
aaa
mov
rorb
xorl
popf
sub
pop
add
sub
sub
mov
xchg
adc
hlt
mov
ljmp
sbb
jnp
out
stos
call
fyl2xp1
sarl
jb,pn
sub
fldcw
fildll
mov
cld
mov
outsb
or
inc
mov
sti
addr16
aas
and
inc
imul
iret
shrb
ljmp
mov
lcall
fisubl
das
add
mov
loope
std
mov
xor
rorl
jns
pop
inc
mov
stc
push
cmpb
cltd
adc
aam
xchg
push
add
cmp
les
cld
hlt
int
adc
adc
out
cmp
inc
ss
add
ja
int3
sbb
xor
xchg
scas
negb
cld
sbb
xor
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
int3
jnp
pop
xor
jl
stos
jg
jl
sub
cmpsl
adc
dec
pusha
xor
mov
rol
cmpsb
add
jns
into
dec
sti
es
hlt
out
sub
sub
popa
push
lretw
adc
daa
insl
cmp
push
mov
out
js
inc
faddl
xabort
ret
lahf
push
mov
test
out
cmpsl
es
sbb
call
xchg
and
fwait
jns
sbb
mov
xchg
mov
adc
fld
inc
add
and
shl
out
lock
dec
add
sbb
sbb
mov
daa
mov
fcmove
or
jne
xchg
add
jae
mov
lods
addr16
inc
scas
bound
addr16
push
loope
popf
dec
test
sbb
nop
add
jle
or
fsubr
mov
mov
popa
sub
sbb
mov
jge
fwait
lahf
jb
adc
pop
les
cmpsw
cmpsb
aam
flds
xchg
push
ret
jge
jne
push
jb
iret
push
cld
js
dec
or
sub
add
push
aad
fcompl
xchg
int3
loopne
pop
jae
pop
imul
push
mov
mov
test
push
inc
aam
idivb
test
mov
mov
shr
push
jno
or
in
sub
cmp
or
sub
pushf
pop
popa
into
out
das
adc
add
daa
pushf
and
shlb
jmp
mov
xchg
cmp
pop
arpl
add
inc
int
jle
xchg
test
mov
cmp
jne
mov
mov
movsbl
xor
jmp
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
les
rorb
sub
fndisi(8087
xlat
mov
rcrb
call
ljmp
mov
pop
mov
jmp
push
in
xchg
adc
ret
dec
das
jl
movsb
int
cmpsl
cmp
lods
push
push
shrl
stos
pop
arpl
xchg
sub
clc
sbb
adc
lret
jo
test
mov
insb
or
leave
divb
sbb
stc
dec
xchg
movl
and
mov
jb
lcall
dec
lock
cld
call
mov
stos
in
sbb
sbb
add
ret
scas
push
je
xor
inc
mov
test
adcb
je
pusha
adc
mov
cmp
mov
notl
inc
outsl
adc
out
dec
sbb
sti
or
jno
add
xlat
push
jg
daa
fmuls
xchg
cmpsl
jp
xchg
insl
and
scas
dec
stos
and
and
inc
fisttps
xchg
aam
dec
jnp
add
es
adc
and
stc
aas
movsl
push
in
add
push
push
jp
out
decl
xchg
fcomp
and
lods
inc
xchg
push
cmc
dec
mov
add
dec
push
loopne
ret
int3
or
add
fdivs
out
mov
jns
aas
mov
adc
xchg
rolb
int3
and
sub
lods
jb
sub
add
and
sar
call
mov
cwtl
flds
mov
mov
and
sub
cmpsl
and
mov
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
push
stos
add
movsl
sub
jg
jl
inc
addl
jns
cmpsl
mov
sbb
out
loop
jg
movsb
mov
test
js
pop
cmp
mov
mov
pop
xchg
outsb
mov
xchg
mov
xor
fisubl
dec
mov
lods
push
dec
lods
jne
mov
loop
push
ret
xor
scas
loop
add
enter
xchg
jnp
jnp
outsl
mov
mov
or
lds
iret
jo
mov
jmp
cld
add
cmc
dec
pop
rorb
popf
cmp
push
loopne
jp
outsb
sbb
mov
xor
clc
mov
mov
jno
dec
in
lcall
push
dec
stc
lret
dec
pop
xlat
mov
outsb
adc
cld
arpl
cs
sbbl
sti
jg
pushf
push
mov
dec
popf
push
js
adc
repnz
lcall
mov
mov
stos
pop
dec
sahf
push
jl
add
clc
call
lcall
cld
mov
clc
fisubrs
aam
push
inc
test
test
iret
jle
xchg
push
lds
xor
fists
add
insb
jno
ficompl
aad
pusha
in
dec
lock
xchg
jl
xor
xor
in
test
cmp
add
cmp
ja
loop
lock
and
cmp
in
divb
inc
mov
fistps
push
rclb
lock
sbb
cs
pop
inc
mov
insb
test
inc
push
xor
jle
add
lock
jo
fildl
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
dec
aad
adc
sub
jns
jl
dec
rorb
out
lods
pop
mov
mov
dec
test
pop
add
pop
inc
cmp
mov
and
mov
out
xor
cmp
inc
lods
xchg
or
daa
jne
jmp
loop
mov
sbb
stos
mov
add
sbb
mov
cs
pop
mov
cmp
inc
xchg
adc
iret
pop
push
mov
dec
mov
lock
mov
xchg
dec
aad
lea
inc
sub
push
in
arpl
jle
push
adc
rol
sub
sbb
je
into
xor
ret
loop
lock
test
fildl
pop
and
rolb
clc
xchg
mov
test
in
adc
roll
jbe
lcallw
pop
fnsave
pop
bound
sti
pop
inc
pop
mov
add
fs
int
aaa
leave
xor
jb
stos
pop
dec
xor
test
test
aaa
outsl
std
inc
xor
mov
lds
ss
sti
sub
stos
jnp
xchg
in
dec
add
jne
arpl
cs
mov
movsb
jecxz
sub
jmp
cmp
ja
pusha
push
dec
jge
pop
pushf
lock
jg
inc
sub
rorl
les
jl
adc
dec
cmp
jmp
sub
adc
lret
dec
dec
ficomps
sub
decl
arpl
cmpsl
enter
adc
mov
inc
add
inc
mov
or
mov
rcl
inc
ret
cmp
clc
movsl
mov
test
movsb
ret
add
xor
xor
mov
dec
dec
sbb
mov
mov
scas
daa
mov
cmpl
fadd
xor
stos
fs
and
incl
sbb
inc
jp
mov
imul
pop
cmp
cmpsb
rclb
or
inc
fucom
mov
jnp
inc
mov
add
loope
aad
push
stos
popl
in
jno
cmp
cmpsl
in
lret
push
cltd
sarl
dec
jmp
push
jp
ja
or
dec
out
xchg
fisttps
push
push
jbe
cmpsb
repnz
ljmp
xor
adcb
je
into
sbb
dec
pop
sub
ficoms
pop
mov
bound
nop
pop
jnp
les
stos
les
cmovb
or
mov
cmpsl
ret
sub
repz
fldl
or
into
xor
sbb
mov
sbb
mov
js
ds
in
les
push
or
es
and
outsb
mov
sbb
or
mov
popf
mov
or
cmp
pop
add
scas
int3
inc
loop
mov
fsubs
sbb
sahf
aaa
popf
addr16
xor
je
sub
jae
es
mov
xchg
daa
sbb
xor
sub
fsts
std
jecxz
and
dec
mov
cli
repnz
lock
adc
ss
xor
jle
mov
sbb
outsl
adcb
xchg
int3
movsl
dec
sub
movsb
mov
xor
arpl
in
mov
clc
mov
sub
into
shl
jae
cltd
pop
movsl
mov
cmp
rcrl
in
add
inc
jmp
test
dec
sbb
and
cmp
insb
push
out
out
fadds
arpl
inc
add
add
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
pusha
mov
jl
mov
jl
arpl
ficoms
mov
cli
call
or
pop
aam
pop
cmp
pop
and
pop
int3
aad
dec
scas
lcall
dec
dec
pop
mov
cmp
es
lea
mov
or
mov
gs
divl
sbb
xchg
xchg
fdivrl
ret
xchg
or
pop
push
cmp
out
pop
scas
lock
mov
pop
jne
dec
cmp
sub
mov
in
mov
out
and
lret
mov
inc
stc
sbb
pop
add
fistpll
je
push
cmpsl
loopne
mov
pop
pop
pop
stc
cmp
push
jno
and
sub
add
fdivl
outsl
sti
mov
jecxz
mov
fistl
cmp
and
js
out
xor
leave
vpmaddwd
int3
jno
outsl
bnd
testl
ret
or
and
daa
jle
inc
iret
add
jne
xor
mov
mov
sub
fmulp
pusha
mov
outsl
iret
aam
pushf
cmpsl
jns
sarl
jl
das
and
fstps
incl
pop
xchg
sub
mov
mov
incl
lahf
inc
repnz
je
mov
ja
popf
sbb
cmp
or
lock
push
ret
and
fstps
das
outsl
mov
movb
clc
int
pop
aam
test
cmp
into
int
mov
pop
loope
leave
add
adc
lea
rorb
mov
mov
jnp
sub
jb
or
hlt
in
out
adc
out
rorb
mov
repz
push
leave
jns
push
adc
lret
das
pop
sbb
xlat
ljmp
xor
mov
jae
aas
call
out
sbb
mov
ret
add
inc
test
test
sti
push
cmpsb
jg
mov
jmp
pop
scas
cmc
sbb
repz
xor
lahf
dec
hlt
mov
pop
test
sub
cmpsl
call
jnp
enter
movsb
js
idivl
pop
lret
fimull
test
mov
lock
cmc
dec
xchg
idivb
loope
sahf
aaa
push
leave
pop
pusha
xchg
in
add
push
addr16
mov
adc
rcrb
cld
inc
sub
cmp
inc
shrl
sahf
fstpt
imul
nop
dec
mov
push
aad
cltd
xor
push
xchg
into
out
xchg
mov
and
aad
cmc
xchg
testb
std
jg
mov
xor
or
cmp
test
or
movnti
xchg
stos
mov
dec
loope
mov
dec
sti
std
pushl
sbb
mov
fcomi
repz
inc
enter
cmp
sub
and
add
in
dec
inc
aam
lock
push
mov
mov
test
addl
iret
xchg
or
fimull
push
xlat
xor
stos
jle
enter
rcrl
out
jl
aas
push
mov
adc
push
ret
dec
imul
cmp
push
je
push
jns
mov
rolb
pop
adc
pop
dec
mov
nop
or
andl
jle
mov
aad
iret
lret
out
jge
mov
testl
iret
out
inc
cld
xor
pushf
clc
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
scas
push
cmp
insb
push
or
dec
push
je
or
test
daa
jo
and
xor
insl
in
or
out
aaa
outsb
xchg
movsl
sbb
inc
loop
mov
clc
sub
dec
cltd
vfrczsd
cmc
lea
mov
rcl
xchg
test
sti
xchg
add
sbb
dec
and
jne
ja
mov
push
subb
adc
inc
push
mov
imul
aaa
jns
sub
xchg
inc
push
mov
pop
xor
lahf
push
mov
and
mov
repz
mov
mov
push
leave
inc
inc
je
or
cmc
addr16
ret
add
push
pop
mov
cld
ss
pop
mov
jge
push
aaa
fldl
sbb
and
sub
cmp
jg
sub
mov
cmp
mov
dec
in
test
sbb
aas
sti
loope
pmulhuw
jg,pn
ss
popa
inc
test
ss
movsl
xlat
mov
dec
cwtl
loopne
mov
nop
out
mov
push
lret
jg
adc
cmc
stc
ljmp
dec
nop
sti
mov
jg
addr16
mov
lock
jge
jmp
cli
or
cmp
popa
lahf
mov
pop
mov
inc
inc
mov
fxam
and
rorb
test
fsub
sub
push
mov
xor
lcall
jo
dec
and
mov
cs
mov
jae
jnp
outsl
lods
fistpl
jae
sarb
mov
mov
ret
rclb
hlt
ss
clc
push
jle
rcll
jecxz
loop
mov
clc
lock
xchg
xchg
and
jae
dec
dec
adc
out
and
sbb
push
jns
xor
sbb
xorb
je
lcall
cmpsl
pop
inc
pop
pop
lods
cmc
mov
sbb
data16
and
jno
pop
icebp
push
aad
mov
bound
xor
rolb
xor
jl
cltd
enter
push
sub
imul
push
popf
mov
xchg
repnz
out
stc
ficoml
or
std
bound
notl
popf
push
push
outsl
push
xchg
divl
and
dec
push
sbb
fistps
xchg
subb
xchg
add
test
sub
ret
ret
add
cld
fsubs
rol
dec
pusha
notl
or
sbb
pop
dec
aad
jno
pop
inc
inc
inc
call
bnd
xlat
pop
arpl
arpl
mov
push
mov
ljmp
xlat
out
mov
movsl
daa
push
pop
adc
push
dec
out
fcmove
mov
push
lds
test
pushf
insb
aas
arpl
sbb
push
mov
daa
ds
jnp
xchg
sub
cmp
out
inc
pop
fisttps
push
adc
and
fisubl
scas
add
das
add
jp
pop
loope
repnz
adc
sub
jae
aaa
imulb
bsr
inc
mov
ds
lret
mov
inc
cmp
and
push
rcrb
lds
dec
ror
sbb
test
xchg
mov
insl
cmp
js
pop
mov
stos
stos
cs
aas
jle
ss
js
pop
and
lock
adc
test
mov
dec
jmp
mov
jb
sub
notb
ds
adc
jno
out
rorl
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
dec
add
cltd
jecxz
imul
and
ss
dec
mov
dec
test
mov
dec
sahf
mov
adc
repnz
pop
mov
mov
mov
std
cwtl
sti
xor
push
or
testb
scas
incb
addr16
shll
adc
insb
ret
pop
jg
xchg
xchg
dec
push
stc
and
out
pop
sbb
adcl
adc
adc
insl
jmp
mov
pop
lock
stc
popfw
test
sbb
addb
add
scas
xchg
jno
or
pop
hlt
cmp
lock
rcl
mov
rolb
ret
rolb
movzbl
int3
std
mov
out
add
sti
lods
jno
pushf
test
mov
sbb
adc
das
jnp
test
mov
inc
iret
rclb
cmp
and
js,pt
jb
inc
and
sub
push
enter
push
adc
sarb
in
hlt
repz
xchg
mov
into
imul
sbbl
adc
push
mov
dec
in
add
hlt
adc
or
jno
xor
scas
dec
sub
dec
call
push
pushf
lea
push
shl
pop
mov
repnz
jno
jecxz
shl
and
sub
popf
bound
ret
dec
cltd
cmp
fs
lret
loope
adc
or
clc
cld
fnsave
push
pop
aas
lret
mov
adc
jl
pushf
mov
je
jl
sahf
mov
sbb
jmp
or
call
jnp
inc
cmp
lods
and
jo
setne
jg
call
mov
jl
cli
leave
sub
jno
mov
and
int
cld
leave
mov
shlb
pushf
jns
insl
ret
push
shll
int
fisubrl
out
sub
inc
mov
ret
fwait
sbb
xor
mov
xor
jge
andb
add
jne
fwait
loopne
das
dec
lret
cmpsb
dec
inc
push
orb
push
pop
xor
pop
gs
pop
bound
scas
in
out
ds
aad
repnz
mov
aaa
jb
jno
out
add
cs
fldcw
inc
xor
stos
pop
fsts
pop
xchg
out
outsl
shrl
ret
add
xchg
jmp
aad
adc
mov
mov
lahf
mov
icebp
jno
sti
inc
dec
leave
andb
into
imulb
imul
xchg
pop
loope
out
pop
fnstenv
jmp
mov
dec
pop
stos
inc
pop
sub
fwait
shll
insb
lock
pop
mov
arpl
sub
push
stos
aaa
repz
jnp
adc
jnp
xchg
das
mov
add
push
adc
cmp
ds
xlat
dec
ja
orl
jge
add
arpl
fcmovne
scas
xor
sub
jbe
xchg
lret
repnz
iret
xchg
cmp
adc
xor
and
push
xlat
lea
data16
cmpsb
pop
loop
cmp
outsl
fwait
jmp
push
push
loop
or
mov
adc
movsb
add
je
sub
dec
dec
popf
mov
mov
cmpsl
cmp
sbb
push
leave
xor
xor
mov
jge
or
or
and
shll
stc
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
repz
scas
in
cmp
jle
jl
ret
or
daa
shll
mov
enter
dec
imul
movsb
jmp
mov
lret
jns
aad
popf
popf
std
fnstcw
and
mov
mov
mov
xchg
test
xchg
pop
xchg
inc
shlb
xorl
inc
testb
mov
fcmovnu
test
ret
inc
pop
mov
ret
shl
mov
inc
pop
shrl
push
pop
inc
pop
xlat
dec
rorl
mov
or
popa
push
pop
mov
movsl
dec
adc
xchg
xor
inc
out
and
loope
push
in
cld
mov
push
out
roll
sub
sub
cwtl
jmp
xchg
jge
or
out
mov
je
mov
xor
mov
divl
mov
cmpsl
pop
xor
aaa
fbstp
dec
and
pop
push
addr16
loop
notb
jbe
mov
in
aad
mov
js
imul
and
push
movsb
xchg
test
dec
test
dec
je
jns
aad
pop
lret
and
inc
pop
pop
aaa
mov
mov
js
lcall
push
das
xchg
mov
cld
outsb
adc
movsl
push
imul
cli
in
movb
push
cld
dec
lahf
push
jl
fisubrl
sub
mov
outsb
and
repnz
adc
inc
int
js
and
cwtl
out
mov
test
mov
pop
mov
aas
add
cmp
xor
push
pop
lock
or
xor
js
lahf
std
mov
push
rcr
pop
lds
lret
orl
or
andl
mov
dec
lock
lahf
ljmp
call
mov
repz
xor
sti
mov
sub
sub
lret
inc
test
jge
repz
xor
mov
jnp,pt
push
push
mov
mov
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
gs
pop
call
jle
jl
int
int
mov
popa
inc
adc
nop
mov
cmc
cmp
loope
mov
arpl
scas
push
out
jecxz
or
push
aaa
cmp
mov
mov
stos
enter
pop
ret
ss
xor
lods
push
dec
push
and
iret
arpl
js
xor
add
imul
jle
and
aam
cmp
adc
cli
popl
jb
aaa
jmp
aad
fcmovbe
adc
pusha
or
or
push
mov
mov
adc
push
sarl
lahf
cmp
movsb
push
fiadds
jecxz
mov
pop
pop
pushf
dec
mov
js
popa
jg
pushf
aaa
in
and
xor
mov
int3
mov
std
push
mov
push
idivl
dec
icebp
fs
cmp
or
or
jno
ljmp
xchg
dec
pop
sti
shll
test
subb
stc
sbb
push
jge
pusha
xor
pop
sub
ds
xchg
add
jl
test
aad
jae
mov
xchg
in
outsl
enter
xor
aam
imul
cmp
sub
xor
add
out
insb
mov
pop
inc
dec
or
aas
outsl
cmp
mov
pop
insb
jae
add
lcall
xchg
and
cmpsl
xor
adc
minps
jmp
adc
push
cmp
lret
sbb
jl
mov
push
movsb
out
aam
adc
or
test
xor
cmp
xchg
cmpsb
movsb
push
scas
add
fidivrl
iret
mov
cmp
mov
roll
mov
adc
xor
push
repnz
push
hlt
adc
push
imul
xchg
out
inc
jecxz
fisubrs
cli
or
adc
js
sub
adc
bound
push
lcall
mov
sbb
push
pop
mov
in
lret
jns
pop
mov
adc
ret
cmp
add
add
int3
mov
jo
xchg
jmp
push
test
dec
lods
jl
xor
jl
bound
jne
popf
jecxz
jb
fcomp
xchg
lret
mov
mov
jecxz
xlat
push
mov
testb
sbb
call
adc
aam
mov
dec
in
mov
mov
insb
mov
fildll
sub
imul
loopne
rsm
mov
outsl
aaa
xor
pop
cmc
push
shl
neg
xchg
in
clc
out
daa
scas
es
fimull
cmp
mov
push
repz
lods
add
cwtl
jae
iret
add
test
repz
mov
in
mov
in
jo
adc
xchg
es
cmpsb
inc
fs
mov
cmc
int
es
mov
mov
cld
mov
out
ret
repnz
inc
stos
ds
pop
sub
lea
jbe
cmp
pop
mov
je
out
and
aaa
xchg
fstpt
inc
sarl
pusha
sub
inc
dec
pop
imul
stc
arpl
mov
mov
aam
jb
movsl
mov
fidivl
jns
sbb
mov
cmpsl
loope
int
sub
dec
jns
mov
jb
cmp
inc
test
adc
aas
popf
adc
xor
cld
int
cmp
sub
pop
sbb
mov
fwait
lods
cltd
test
mov
fiaddl
shr
fs
add
mov
jno
jecxz
xlat
push
fisubs
dec
push
xlat
in
push
jo
xchg
add
test
sub
dec
lahf
outsl
inc
inc
imul
icebp
test
mov
mov
push
das
add
adc
or
das
repnz
mov
sub
cmc
dec
insl
ficomps
scas
jae
rcll
bound
xchg
fmuls
outsl
les
loope
add
ljmp
scas
ljmp
insb
cmp
inc
mov
push
out
imul
inc
xor
aaa
call
js
sti
jp
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
xor
xor
jl
into
mulb
xchg
and
adc
fbld
iret
adc
enter
sbb
xor
mov
xchg
or
in
pop
shll
mov
subl
xlat
jcxz
mov
mov
mov
or
test
or
aas
sbb
pop
inc
sub
xchg
dec
out
out
arpl
lds
cmp
in
ficoms
and
cmpl
sbb
cwtl
sbb
dec
insb
in
add
out
repz
dec
dec
je
out
aam
xor
adc
xor
imul
inc
ret
lahf
and
or
sub
adc
jnp
pop
iret
pop
sbb
add
adc
dec
call
sbb
fucom
inc
rcr
imul
xlat
lods
sub
jecxz
int
and
das
pop
stos
pop
add
cltd
sbb
sbb
mov
sub
fiadds
rcll
mov
cmp
mov
sbb
or
or
mov
lods
pop
paddusb
mov
sub
popf
xor
aaa
mov
aad
cltd
fs
mov
lcall
lock
push
inc
mov
hlt
xor
xor
fstpt
jb
pop
nop
sarl
xor
mov
jecxz
sub
sahf
stos
sub
xor
adc
or
xchg
sub
repz
sbb
cmc
leave
ja
in
int
js
sahf
pop
dec
rclb
int
xchg
js
iret
push
iret
mov
sbb
js
and
xor
sbb
sbb
bnd
std
fbstp
push
std
stos
xchg
daa
jge
js
adc
dec
mov
xlat
shll
pop
fucomip
scas
gs
ss
jns
xor
daa
setp
sahf
stos
test
imul
xchg
aad
push
out
popa
fisubs
inc
clc
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
ss
fists
jl
jns
jl
add
sbb
out
mov
cmp
cmc
jno
gs
mov
in
fsqrt
adc
xchg
jp
push
jne
int
jo
pushf
mov
outsl
rorb
xor
push
outsb
or
push
imul
insl
stos
das
bnd
add
dec
sub
ficoml
lods
jp
ja
or
leave
mov
popf
dec
and
xchg
or
mov
xor
add
in
out
lcall
mov
xor
cmp
and
jmp
popa
sub
push
lods
mov
jecxz
dec
bound
dec
mov
add
lock
stos
clc
setns
or
pop
push
jns
mov
in
xchg
sub
sbb
push
adcl
mov
mov
fcoms
sahf
dec
rcll
push
filds
add
dec
test
add
pop
cld
push
nop
daa
mov
cmp
stos
out
adc
stos
xchg
xorl
sbb
or
lock
shrb
mov
mov
and
pop
je
inc
loope
hlt
shlb
ret
dec
mov
add
out
adc
pop
pop
test
repnz
lcall
xlat
scas
xor
ret
mov
fs
fwait
dec
cmp
jl
jp
push
rcrb
popa
stos
and
sbb
out
jne
fcompl
mov
adc
rcrl
pop
mov
shlb
mov
push
hlt
fldenv
push
inc
idiv
into
test
push
ret
movzbl
jmp
xchg
fwait
jne
sub
scas
inc
push
inc
pop
inc
clc
mov
sub
test
lret
sbb
repnz
pushf
test
jne
sar
out
icebp
jmp
push
xchg
ja
pop
sbb
jp
test
jo
movsb
lock
js
push
mov
adc
ljmp
xchg
push
cld
push
aas
subl
mov
xor
icebp
testl
xor
daa
adc
pop
fdivr
push
sbb
add
sbb
mov
lea
xor
nop
sti
jo
xchg
pop
in
pop
mov
iret
lods
fadd
mov
dec
imul
xchg
mov
aam
fimuls
incb
outsl
mov
pop
mov
arpl
leave
mov
pop
stc
mov
fnstsw
ret
sbb
xchg
cmp
int3
xchg
xchg
cld
lods
insl
orb
adc
pop
and
cmp
leave
cli
jmp
mov
rol
xor
pop
addr16
mov
mov
aad
repz
jb
aam
iret
cwtl
popa
out
or
and
int3
mov
sbb
dec
xchg
mov
int3
out
or
jb
adc
aas
in
cmp
int
movsl
mov
pop
cli
sbb
inc
popf
outsb
mov
cltd
test
test
adc
pusha
inc
negb
fisttpl
dec
ss
add
add
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
ds
jl
xlat
jns
jl
iret
es
xchg
mov
into
and
or
mov
sub
outsb
lahf
cmp
mov
xlat
sti
jbe
rorb
sbb
gs
xor
popa
cld
xor
sub
jo
mov
mov
jno
divb
xchg
adc
inc
loop
lock
jmp
mov
mov
mov
or
fs
jo
push
pop
jo
mov
adc
pushf
shl
shrb
mov
jl
jns
nop
mov
adc
add
push
test
mov
pop
xchg
lea
or
adcl
loopne
inc
popf
sbb
dec
add
add
pop
sub
cmp
inc
sub
and
lods
aaa
push
dec
inc
inc
sbb
cmp
bound
ficoml
insl
add
sbb
insb
cmp
test
dec
fldcw
push
cmp
mov
jle
jle
into
ss
loopne
pop
mov
das
jmp
iret
call
inc
mov
lods
out
orl
and
jge
mov
repz
xchg
push
xor
daa
adc
das
int3
repz
inc
test
inc
insb
in
repz
jns
jo
ljmp
sub
stc
inc
ss
jnp
jp
and
loopne
add
inc
inc
insl
inc
cwtl
mov
lea
push
loop
lret
fistpll
into
pushf
pushf
adc
repz
xchg
sbb
sub
cmp
in
push
mov
pop
pop
or
xor
or
and
sbb
shrb
cmpsb
lcall
cmp
mov
pop
sub
mov
adc
xchg
jbe
ret
mov
dec
push
xlat
dec
xor
jno
lods
xor
inc
scas
leave
lods
rcl
mov
es
mov
pop
cmp
jp
clc
push
das
ds
push
push
lea
mov
mov
cmp
push
mov
ljmp
sbb
fcmovb
inc
mov
ret
fcompl
lret
sbb
js
scas
adc
lret
mov
data16
and
lcall
mov
xlat
mov
xchg
leave
mov
xchg
mov
mov
lods
push
inc
stos
subb
mov
push
pop
jmp
clc
call
push
ljmp
and
jle
and
out
scas
imulb
aaa
pop
jp
in
call
jnp
in
lahf
mov
inc
lods
scas
insb
xlat
imul
data16
mov
lods
insb
test
sub
hlt
push
decb
xchg
push
inc
jne,pt
or
in
mov
mov
jae
mov
sbb
or
mulb
fs
pop
sbb
sarb
mov
cld
mov
fiadds
stc
dec
cmp
sub
xchg
movsl
lods
stc
fs
stos
test
xor
push
cmp
inc
push
pusha
xchg
fistpl
jmp
out
lods
loopne
or
xchg
or
mov
add
pop
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
into
jne
outsl
push
enter
jns
jl
jg
xor
and
push
pusha
out
push
faddp
lods
rcrl
pop
gs
sub
movsb
adc
cmp
js
add
orb
add
push
movsb
jb
iret
cmp
mov
jp
cmp
pop
into
push
push
sub
jp
pop
mov
adcb
mov
outsb
sbb
and
push
fisubl
xor
pop
mov
dec
ret
sub
rorb
lcall
sub
mov
jo
mov
daa
jnp
push
xchg
xchg
inc
jbe
das
fcom
ds
mov
jmp
adc
sarl
enter
mov
push
xchg
mov
xor
test
ja
pushf
mov
mov
xorl
mov
int3
lods
loope
ror
sub
je
sahf
mov
xor
aaa
and
xor
dec
popa
jp
or
pop
fisttpll
mov
daa
call
mov
lds
push
sbb
std
mov
inc
push
je
pop
push
xchg
ret
fiadds
pop
mov
or
not
dec
cld
lret
test
dec
adc
cli
fdecstp
xor
in
push
xchg
jmp
sub
cmp
jge
lods
pop
in
mov
sbb
adc
enter
xor
xlat
aaa
ret
dec
in
icebp
lea
jb
sub
addb
xor
pop
lret
mov
jne
out
wbinvd
jne
imul
pop
out
mov
mov
cmc
pop
hlt
jl,pn
mov
out
testl
stos
jp
add
ja
ffree
sbb
cmpsl
and
dec
vaddsubpd
into
jle
stos
jmp
jg
pop
outsb
push
jmp
clc
fwait
pop
mov
pop
fists
mov
aad
imul
xlat
repz
add
push
std
dec
jmp
mov
push
cmpb
gs
daa
jae
loopne
jb
cmpsb
add
pop
addb
xchg
xchg
mov
popf
ljmp
xor
fbstp
sub
aam
and
mov
dec
jns
and
pop
sub
sahf
lret
lahf
jmp
push
dec
inc
lds
iret
scas
icebp
jb
rcrb
cli
mov
xchg
cmp
mov
sti
movsb
jl
mov
cwtl
sub
pushf
xor
out
stc
sub
loope
or
push
pop
ss
ret
add
and
fcomps
out
xlat
cmp
cmp
and
cmp
xlat
cmpsb
mov
jb
adc
jmp
mov
lret
sub
mov
aad
rolb
jecxz
gs
jae
push
mov
push
mov
std
push
das
cs
ss
ljmp
les
loop
dec
add
or
pusha
or
rcll
mov
stos
cmpsl
jmp
ret
out
sbb
and
in
imul
mov
inc
in
and
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
aam
jl
jns
jl
jns
and
mov
xor
mov
fs
test
mov
sub
cmp
stc
loope
cmpsb
jle
subl
push
mov
outsl
dec
movsb
mov
movsb
std
mov
pop
push
inc
cmpsb
pop
pop
out
xchg
inc
push
sbb
push
rcrb
add
pop
mov
mov
xchg
and
cmp
insl
rorb
lds
in
inc
fcmovu
sahf
hlt
jno
push
adc
cltd
pop
mov
mov
fildll
mull
in
into
mov
adc
dec
loop
out
repz
lret
or
stc
les
inc
popa
rcr
outsw
xchg
daa
ficompl
andl
fisttpll
push
fldenv
outsl
push
xor
dec
pop
pop
dec
jmp
ret
and
jmp
iret
ds
into
xlat
je
subl
sbbl
rorb
mov
mov
cmpb
mov
and
cmp
jmp
repnz
test
fisubl
cvtps2pi
inc
jbe
gs
sbb
cmc
push
movsb
push
sub
cmp
cli
test
push
mov
xor
adc
cmp
cltd
cs
inc
dec
int3
inc
inc
out
fisttpl
icebp
sarl
dec
inc
inc
pusha
mov
pushf
jo
sbb
lret
call
sub
insl
and
pop
dec
pop
dec
mov
int3
dec
xchg
std
xchg
and
fmull
cmpsl
jmp
outsb
jae
add
enter
dec
jo
lcall
leave
push
test
mov
cli
pop
es
fidivrs
pop
jecxz
xlat
inc
sbb
inc
pop
inc
mov
push
xchg
mov
cwtl
int3
scas
add
and
xchg
jecxz
bound
cmp
jbe
cmp
popf
mov
mov
inc
add
sub
sbb
sbb
roll
fisttpl
aaa
repz
adc
cld
cmpsb
xchg
repnz
data16
jg
std
jle
loop
jbe
jbe
pushf
inc
xchg
sub
push
hlt
or
push
lea
or
mov
pmullw
int
inc
data16
aad
daa
insb
pop
mov
in
test
pop
data16
inc
movsb
cmp
dec
xchg
dec
sub
dec
mov
out
popa
lret
add
add
add
aam
aas
test
scas
negb
stos
das
dec
addr16
mov
mov
outsl
int3
xchg
mov
xchg
les
lock
out
mov
shlb
push
mov
pop
fnsave
outsl
stc
test
cmp
mov
nop
adc
int3
leave
fisubrl
loop
fwait
sub
js
popf
clc
xchg
xor
push
jo
cmp
or
js
sbb
jge
xlat
ss
xlat
bound
adcb
scas
mov
xchg
scas
lret
pop
repz
in
dec
xchg
cmp
xchg
xchg
jl
adc
sub
insb
daa
jle
or
cs
xor
sbbb
lcall
xchg
jg
fwait
and
adc
jg
mov
shr
test
mov
cmp
jmp
cwtl
mov
mov
or
into
pop
pop
adc
jl
jns
jl
dec
mov
gs
shrl
js
and
movsl
add
gs
mov
cmp
aaa
daa
outsb
cmpsl
sbb
add
sub
xchg
out
in
or
pop
loope
pop
mov
fsubrs
cltd
inc
inc
mov
subb
lret
mov
mov
fisttpl
sub
lods
punpckldq
cmp
or
idivb
imul
mov
xor
scas
mov
pop
std
jge
setb
and
pop
mov
rclb
inc
mov
divl
rorb
stos
int3
push
xchg
lock
adc
adc
imul
stos
movsb
bound
xchg
sar
cmp
cmp
out
adc
in
shr
inc
xchg
addr16
xchg
mov
jmp
mov
push
push
lods
sbb
push
out
imul
push
js
lods
mov
sbb
mov
mov
movsb
pop
popa
fcmovu
push
or
int3
xchg
push
push
rol
adc
inc
iret
pop
sbbl
add
push
fprem
xchg
cli
pop
sub
xor
jmp
stos
mov
lahf
hlt
jle
sub
call
sbb
clc
test
out
lea
dec
inc
xchg
lods
jg
aam
popa
pop
ja
sbb
enter
pop
and
mov
int
je
sub
jns
das
movb
adc
int
pusha
pop
addr16
rorb
push
movsb
imulb
xchg
test
in
add
xchg
rclb
call
inc
dec
inc
and
inc
daa
enter
clc
out
jnp
aas
ds
pop
pop
jge
add
int3
mov
lods
push
push
jb
push
xchg
xor
fnsave
divl
movsb
push
or
stos
cmp
into
cmp
xor
rcll
das
sbb
mov
xor
sbb
inc
sbb
subl
repnz
sbb
and
or
pop
cmpsb
push
jo
dec
or
xlat
push
call
bound
mov
sbb
lcall
pop
adc
add
data16
jle
cmc
incb
mov
push
xchg
lods
cmp
fldt
mov
mov
mov
cmp
push
push
and
lcall
mov
xlat
ljmp
lock
or
jne
hlt
into
scas
out
jns
xor
mov
adc
lahf
addr16
dec
mov
xchg
cwtl
shrb
dec
out
aaa
sbbb
icebp
test
and
adc
icebp
pop
mov
fs
test
add
jmp
add
dec
mov
popa
cmpb
cmc
addr16
sbb
and
xor
int3
mov
daa
movb
mov
loope
cmpsl
sub
arpl
lea
aas
subl
xchg
addl
push
and
cmpl
add
adc
mov
lods
shll
mov
ret
fs
mov
orl
jmp
pop
jns
fs
add
push
sbb
pop
xchg
jl
xlat
jns
jl
mov
mov
daa
int
loop
inc
icebp
subl
fnsave
cmpsb
lds
js
rclb
mov
rclb
out
hlt
out
sbb
sbb
fsubl
outsb
nop
jmp
xchg
pop
insl
nop
push
jns
or
divb
rclb
fwait
mov
inc
push
or
push
inc
mov
xchg
in
adc
call
pop
lret
jle
pop
test
or
sbb
dec
dec
test
jmp
add
mov
hlt
ja
cwtl
aam
test
jg
pop
call
inc
repnz
das
push
mov
pop
mov
pusha
and
cmp
xchg
test
mov
push
jg
enter
loopne
jp
and
jbe
dec
lret
ret
adc
mov
out
mov
scas
add
xlat
enter
leave
push
adc
arpl
pop
bound
pop
sbb
stos
xchg
and
or
jbe
sub
ret
aas
roll
fsubr
or
sbbb
in
stos
mov
jo
pop
inc
dec
dec
xchg
call
je
push
push
push
sub
and
pushf
fisubl
cmp
dec
test
jmp
mov
cs
xor
or
in
fwait
jmp
xor
sub
xchg
jb
jb
mov
sbb
sbb
jl
cmp
pusha
sarl
push
fisttpl
outsb
jp
test
shll
andb
xchg
push
mov
pop
shl
inc
shll
jae
in
mov
xchg
rcrl
mov
pop
xchg
dec
jge
sbbl
int
jno
xor
and
jo
cmp
xor
insl
in
and
out
add
into
dec
pop
sbb
or
fldt
sahf
fcoml
pop
clc
sub
cmp
ret
leave
dec
cli
dec
rolb
inc
clc
jnp
xchg
stos
jne
rcrb
jecxz
pop
ljmp
sub
fmuls
dec
inc
cmp
mov
push
xor
or
cmpsl
in
xchg
mov
or
mov
inc
stc
scas
jl
or
cmp
sbb
bound
or
out
rcrl
cmp
or
aaa
xchg
mov
pop
outsb
lcall
bound
push
mov
fwait
sbb
mov
push
mov
mov
dec
lret
cmp
push
xor
aam
sbb
in
sbb
arpl
gs
adc
stos
sbb
jg
int3
iret
mov
sbb
cwtl
aad
dec
xchg
fwait
mov
test
sub
push
mov
cmp
cmc
mov
cmp
and
aad
sub
adc
movsl
add
cltd
sbbl
dec
addr16
jnp
mov
ss
add
sbb
sub
nop
fsubrl
cld
cmp
add
cwtl
testl
adc
ljmp
loope
cltd
cmp
leave
mov
jle
and
mov
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
outsb
pop
xchg
jle
fidivrs
jns
jl
setae
cwtl
dec
nop
aas
xchg
sub
and
sub
lcall
mov
or
inc
inc
add
add
mov
inc
dec
cmp
sub
aas
pop
sahf
pop
divl
or
sahf
aad
pop
adc
and
mov
mov
outsl
mov
rorl
sarl
sbb
movsb
imul
lods
ljmp
adc
push
push
in
cmp
xor
and
xlat
out
mov
sub
adc
add
inc
and
in
ds
adc
ljmp
xor
jmp
mov
das
popl
push
mov
push
loopne
pop
cmpsl
shll
ss
std
test
mov
sub
push
mov
and
pop
das
jl
outsb
lret
jp
gs
mov
pusha
jmp
jns
fmuls
aaa
and
data16
mov
or
mov
adc
jp
inc
repnz
scas
dec
fcmovbe
xchg
push
imul
fcompl
pop
cmp
mulb
mov
cwtl
mov
ss
push
test
scas
jecxz
adcb
lods
inc
out
repnz
and
dec
popa
and
repnz
inc
lret
jl
mov
or
cmp
adc
xchg
addr16
pop
stos
jmp
lea
inc
js
jne
mov
dec
icebp
add
adc
lahf
cmp
pop
cmc
ds
test
out
xlat
pop
rcl
repnz
add
add
cmpsb
inc
mov
xlat
insl
mov
mull
mov
shld
pop
push
dec
pop
xor
adc
test
push
mov
aas
repnz
pop
jnp
jb
movsb
out
stos
clc
clc
or
xor
add
or
pop
in
je
insl
lcall
inc
sahf
icebp
sarb
jp
ss
fsubl
dec
adc
mov
nop
jp
xor
and
cmp
movsb
cmpsl
add
mov
mov
jo
sub
mov
xlat
pop
mov
jge
ds
test
sbb
pop
popf
adc
mov
inc
movsl
push
lret
shl
sbb
xchg
or
stc
aad
in
dec
pop
lods
ret
clc
push
jb
ds
jae
xchg
xchg
pop
flds
ljmp
fwait
dec
xorb
cmc
fstpl
insl
repz
outsl
test
test
les
aaa
ret
lret
insl
dec
push
pop
xor
imul
neg
jl
dec
xchg
mov
fldl
xlat
sub
orl
stos
adc
incb
sub
das
stc
orb
pop
ds
mov
mov
out
fsubs
lahf
pop
in
in
int3
mov
sub
push
vpmacssww
sub
sbb
inc
sbb
dec
divb
pop
je
gs
test
sub
jo
jp
or
mull
shl
mov
data16
push
call
lds
cmpb
cli
push
es
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
rcll
fstpt
jns
jl
imul
add
push
mov
loop
mov
dec
xor
xchg
adc
mov
pop
jge
rcll
add
adc
jle
sub
xchg
mov
iret
push
aas
mov
scas
xchg
loope
sahf
ret
ss
in
jb
shll
movsb
inc
xchg
bound
fmull
in
xor
xchg
dec
xchg
jnp
cltd
cmp
mov
adc
push
xchg
roll
ja
and
xchg
out
pop
les
or
lret
add
int
repz
jp
xchg
dec
imul
imul
add
sub
xchg
cld
cmpsb
inc
outsl
incb
aad
shlb
fisttpll
out
pop
cmp
test
xor
repnz
in
pop
nop
xchg
push
ljmp
push
aaa
jp
mov
jp
fcoml
cld
add
daa
je
adc
repz
jbe
out
into
ffreep
leave
push
fcoml
popa
push
orb
adc
test
ja
mov
mov
cmpsb
sbb
lea
sub
ds
outsb
sbb
fdivrl
fcompl
pop
xchg
insb
iret
or
push
out
pop
and
mov
push
xlat
inc
sbb
sbb
mov
inc
mov
pop
mov
add
aas
mov
xor
pop
outsl
sub
outsl
test
sub
aam
dec
lock
jns
ret
jecxz
lcall
adc
fnstcw
fcoml
and
jbe
bound
push
pop
add
inc
cwtl
pushl
xchg
xchg
jno
inc
jno
adcl
stos
pop
and
rcll
sub
or
pop
insl
fnstenv
scas
sub
mov
adc
jge
hlt
add
icebp
aas
cltd
in
dec
fsubl
fdivrp
outsb
scas
je
rorl
xchg
cmp
mov
sbb
jmp
or
pmulhw
xlat
pop
enter
jmp
mov
lret
in
aaa
xchg
mov
daa
jnp
cmp
int
lret
iret
lea
cmp
out
lods
add
mov
lods
push
or
mov
or
insb
lds
lods
add
mov
daa
dec
fildll
mov
pop
out
xchg
xchg
imul
mull
movb
jae
or
adc
fistps
loopne
int
out
pushf
loop
inc
out
xor
divl
into
cmp
sbb
inc
pusha
insl
sub
add
nop
jae
xor
xchg
lcall
mov
adcl
pop
mov
test
add
jo
sti
cmp
ret
adc
shlb
jne
mov
sub
xchg
leave
or
popa
sub
push
mov
inc
and
mov
pop
inc
push
mov
test
push
cs
add
lea
clc
mov
xor
jmp
inc
pusha
sub
sub
xor
jl
xlat
jns
jl
std
ret
outsb
mov
outsl
cmp
ss
cld
pop
movsl
and
in
ljmp
mov
mov
imul
in
in
cmp
cltd
push
xchg
inc
fdivrs
iret
rolb
sahf
je
jmp
mov
xchg
push
inc
jae
inc
sbb
adc
sub
push
daa
bound
clc
mov
jge
adc
mov
int3
jl
inc
int
lds
dec
mov
push
jo
add
mov
call
adc
pop
pushf
xchg
outsl
repnz
or
xchg
xor
aad
adc
adc
mov
mov
in
out
cmp
cmp
addr16
sbbl
addr16
test
push
cmc
xchg
enter
fcmovbe
xor
movsl
and
lret
sahf
sbb
loope
decl
ret
xchg
jg
call
arpl
out
cmpsb
in
or
repnz
and
xor
sub
sub
stc
lcall
add
roll
jb
mov
loope
xchg
test
xchg
sub
jl
inc
cmp
fwait
mov
xchg
pop
inc
out
lods
aas
shlb
nop
add
sarl
out
ret
js
push
cmp
push
cmpsb
cmc
mov
sub
adc
inc
aaa
enter
lock
xor
fldt
pushf
lods
xor
in
push
pop
dec
out
push
jmp
call
cmp
jns
pop
insl
cs
fisubrs
xchg
cwtl
pop
jl
sbb
std
pusha
lds
cwtl
lcall
mov
or
pop
xor
xorb
and
mov
mov
sbb
mul
jl
mov
jg
cmp
xchg
test
lock
add
imul
sbb
je
push
fwait
ret
js
addr16
push
sub
sbb
jl
cmp
xlat
pop
das
lock
mov
mov
mov
test
ds
dec
mov
xchg
outsl
mov
rclb
mov
add
fwait
pusha
adc
mul
aaa
sub
or
cmp
dec
sub
pop
movsb
cmpl
shlb
lahf
adc
das
cmp
pop
orl
in
out
pop
lds
loop
fistl
test
shr
ljmp
inc
mov
call
cmpsb
jb
leave
aam
leave
ret
and
jae
popa
nop
ljmp
dec
sub
fcmovbe
ret
pop
cmp
adc
dec
iret
dec
ret
test
jne
xorb
pop
loope
ljmp
fcoml
mov
adc
jno
daa
fistl
dec
xchg
xor
fldt
inc
lcall
aas
enter
bnd
jae
andb
lods
or
fadd
mov
mov
pop
roll
stos
mov
sub
mov
sub
dec
xor
cmp
xchg
xchg
dec
insb
shlb
xchg
and
imul
sub
jmp
or
jb
mov
push
sbb
adc
loopne
jl
jns
jl
cmp
test
push
notl
xor
enter
ja
mov
daa
gs
add
imul
mov
stc
dec
push
sbb
mov
sbb
fimuls
dec
test
lods
push
out
add
cltd
lahf
lds
push
stc
cmp
sti
cld
lock
in
outsb
mov
sub
outsl
stc
xor
sub
jnp
aam
jmp
and
cmp
sbbl
inc
pusha
mov
mov
mov
cmp
or
shlb
jns
xor
lods
dec
pop
mov
scas
pushf
mov
mov
push
shl
lahf
cmp
pop
sbb
pop
lret
pop
pop
push
mov
xor
sti
movsb
rorl
shrl
pop
rcrl
mov
clc
andb
std
xchg
lods
push
xchg
xchg
loop
or
test
enter
or
adc
cmp
add
pop
movsl
scas
mov
daa
jae
aaa
ja
xor
adc
push
and
fcmovne
rclb
sbb
pusha
xchg
jecxz
sbb
mov
pop
test
fidivl
testb
push
jp
es
sahf
xlat
stos
stos
cmp
imul
lea
aam
shll
or
xchg
sahf
inc
mov
sub
test
add
enter
rcrb
je
movsl
lahf
test
pop
rcrb
xor
dec
jbe
push
jecxz
shll
in
into
inc
stc
stos
es
mov
inc
push
adc
fisubl
repz
lock
or
cmc
inc
movsl
stos
andl
jl
xchg
sbb
dec
mov
add
test
ret
subl
add
or
andb
jge
fistpl
scas
aad
adc
ficoml
ss
add
out
push
cmpsl
jo
sbb
mov
xor
push
test
jecxz
mov
adc
mov
outsb
xchg
imul
das
jl
stos
xor
test
fwait
push
push
push
bound
out
out
ud1
push
sub
shrl
aad
xorl
push
pusha
fldpi
add
and
xchg
in
sub
repz
fisttpll
push
pop
mov
jns
or
sahf
jg
addb
test
mov
lahf
sub
push
cmpsb
lret
aad
mov
push
or
out
hlt
sbb
in
imul
mov
pop
insb
dec
sbb
xchg
mov
xlat
popf
je
fcomi
lret
inc
mov
js
pop
fstp
mov
adc
cmc
loopne
cwtl
push
push
sahf
xor
adc
mov
pop
cmp
jbe
sbb
adc
fidivrl
xor
jmp
sbb
stos
fcmovne
lock
and
jp
fs
lcall
mov
mov
sbb
xor
je
and
fs
arpl
lods
ss
test
frstor
and
lock
adc
loope
js
shr
stos
push
pop
fmull
icebp
decl
call
sbb
pop
icebp
decl
add
icebp
decl
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
les
inc
add
sahf
in
jl
adc
iret
push
repnz
dec
pop
add
out
inc
lea
mov
mov
jecxz
mov
fsubs
jmp
push
outsl
scas
mov
and
je
mov
ret
add
stos
out
pop
lods
cld
fsubr
push
sarl
fcomps
inc
aad
jne
addb
mov
roll
enter
push
sbb
adc
jge
xchg
push
mov
jge
or
sbb
in
imul
inc
jns
adc
stos
loopne
mov
ficomps
std
lea
daa
ss
ss
mov
jbe
add
fmuls
ret
push
imul
pop
test
gs
sub
adc
mov
mull
scas
lcall
inc
cmc
daa
ja
cmpsb
ficomps
or
jns
xchg
sbb
xor
rolb
out
xchg
inc
sub
out
mov
ss
sbb
xchg
mov
inc
or
add
or
add
adc
inc
popa
add
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
fldl
or
jg
jl
mov
fisttps
mov
aas
sti
adc
dec
mov
in
rorl
mov
rcrb
data16
jns
pop
ljmp
dec
xor
mov
testb
sub
push
cmp
mov
pop
pop
test
stos
dec
xchg
in
int3
cmpsl
cmp
popa
mov
mov
movsb
ret
clc
out
popl
xor
pop
std
bound
fildl
js
mov
xchg
fdivl
mov
adc
data16
push
pop
stos
aad
shrl
fcomip
test
sbb
shlb
dec
push
lret
dec
push
stos
mov
cwtl
xchg
adc
push
cmp
push
jb
push
xor
pop
ljmp
les
fildll
cmp
insl
pop
lods
cmp
out
sub
pop
stc
dec
push
adc
in
loopne
jne
jge
int3
out
lcall
insl
cmp
int
ss
mov
xor
cmp
pop
pop
cmp
fstpl
fildl
add
add
xchg
add
add
test
add
inc
clc
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
jecxz
sbb
jl
jg
jl
fmul
lock
mov
push
fs
bound
sub
jmp
cltd
lahf
lahf
push
sub
mov
push
cmp
andl
dec
xchg
sbb
lock
jne
ficomps
push
jmp
pop
sbb
mov
fistpl
adc
or
in
notb
or
test
inc
xchg
inc
adc
dec
xor
popf
sub
jmp
imul
and
lret
sbb
popa
push
rol
pop
sub
daa
jo
pop
xor
sahf
es
imulb
jbe
sbb
insl
out
test
mov
pop
xchg
cld
into
and
test
mov
sar
lret
lret
test
mov
pop
and
add
mov
lahf
andl
jbe
fdivr
daa
aas
mov
leave
outsl
adc
enter
inc
inc
sub
test
dec
std
daa
pop
cltd
dec
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
out
jl
lret
jl
jo
cltd
adc
adc
push
cmp
addr16
xor
pop
ror
bound
mov
ss
pop
test
push
xchg
shrl
mov
jl
outsb
inc
mov
push
rcrb
fnsave
push
pop
ficomps
add
es
dec
enter
lret
mov
rorb
leave
rcrb
jno
dec
addr16
dec
movsl
or
inc
vmovlpd
xor
push
xchg
mov
jae
stos
dec
in
jg
int3
in
xchg
bound
out
sub
jb
and
jp
sbb
cltd
pcmpeqb
mov
jo
jg
mov
mov
andl
and
sbb
cmpsl
daa
fisttps
jecxz
insl
cld
fwait
sbb
lods
sahf
jae
fstps
sub
scas
push
mov
aam
or
mov
out
in
testb
fs
call
cmp
outsl
jae
ss
pop
mov
xor
push
int3
adc
ss
mov
dec
je
sub
cmp
lods
divl
test
inc
sbb
inc
test
daa
xchg
pop
idivl
jecxz
xchg
dec
xchg
cmp
xchg
je
xchg
icebp
or
mov
lahf
js
jg
inc
je
adc
dec
dec
xchg
adc
fwait
addl
cmp
push
jge
mov
mov
repnz
mov
je
mov
lret
ret
ret
repnz
mov
movsb
mov
fcmovbe
insb
test
icebp
mov
mov
bound
fwait
popa
push
cmc
dec
sbb
rcrb
call
or
jmp
pop
adc
mov
adc
dec
xchg
mov
xor
xchg
mov
int
clc
cs
push
jl
sub
inc
pusha
mov
mov
lahf
jge
movsl
aas
mov
cmpsb
aaa
xchg
loope
lods
std
mov
mov
pop
dec
insb
xor
mov
insl
push
jno
mov
lcall
movsl
jnp
cmc
arpl
test
test
cmp
arpl
dec
imul
sub
rcrb
push
incl
insl
inc
aad
enter
enter
repz
pop
stos
out
mov
add
mov
push
mov
int
mov
aad
push
data16
sub
add
adc
test
std
mov
movsb
cwtl
adc
lods
push
xchg
ficomps
push
cmpsb
xchg
mov
push
jle
and
xchg
mov
push
dec
adc
test
ss
or
dec
mov
xchg
arpl
dec
aad
cmp
aaa
dec
pushf
mov
xchg
repnz
pop
cs
xor
mov
push
add
repz
ds
nop
outsl
fisttps
or
jg
and
jbe
mov
mov
ja
nop
or
push
jne
loope
pop
mov
nop
jb
xor
inc
mov
mov
lret
stos
stos
lods
pop
fs
mov
repz
ret
add
sub
mov
mov
ljmp
or
cmc
mov
inc
int3
cmp
and
inc
add
add
add
or
adc
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
jg
es
jl
lret
jl
pop
sbb
faddp
dec
popa
fcos
dec
cmp
lds
test
adcl
jge
xor
mov
xor
cltd
test
ja
mov
lret
pop
rclb
adc
xor
gs
int
icebp
stos
add
jg
xor
test
pop
jl
loope
mov
lea
movsb
mov
arpl
add
lock
xchg
add
insl
cld
xorl
pop
adc
rcll
cwtl
push
hlt
sbb
xchg
cmp
filds
sahf
in
sti
or
jl
dec
sbb
cmp
mov
insb
ja
stos
push
adc
mov
pop
aas
ljmp
push
add
xchg
sub
xor
mov
nop
inc
aas
ret
cmpsl
xchg
pop
add
cmp
xor
int3
scas
push
pop
shrl
fimuls
push
push
adc
cmpsb
insl
imul
mov
inc
ror
sbb
jb
inc
mov
mov
in
sub
mov
sbb
les
arpl
stc
lahf
test
imul
out
out
mov
dec
arpl
fwait
rolb
or
jg
call
add
dec
in
aad
and
es
xchg
add
dec
mov
in
dec
lahf
fldcw
xor
test
sbb
incb
lea
mov
mov
call
je
testl
mov
es
mov
fbstp
mov
sbb
pop
sbb
out
and
jnp
sbb
cltd
jo
inc
inc
cmp
adc
mov
pop
stc
shlb
and
or
jg
push
add
std
mov
ja
mov
ds
cwtl
int3
aas
bnd
mov
or
popf
xor
loopne
aaa
adc
lahf
xchg
lret
xchg
ljmp
cmpxchg
in
push
jmp
cli
xor
mov
popa
inc
mov
mov
std
loope
rorl
insl
jae
fwait
cmc
nop
cwtl
jbe
fnstcw
lcall
push
cld
xor
xor
mov
mov
xchg
lahf
adc
out
dec
push
mov
pushf
mov
test
ret
nop
loopne
inc
rcrb
arpl
aad
xchg
sahf
mov
add
jge
rcrb
mov
jns
aad
pop
loope
dec
pop
adc
popa
mov
loop
sbb
mov
and
insl
cs
aas
mov
jg
and
out
loop
aad
pushl
pop
xor
pop
ror
or
add
inc
dec
out
js
dec
adc
jmp
fiaddl
nop
jae
jecxz
mov
lahf
and
repnz
mov
outsl
jecxz
cmp
repz
fbld
gs
mov
fldt
popf
mov
xor
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
mov
mov
jl
lret
jl
mov
mov
js
mov
adc
sti
jne
popa
mov
add
std
xchg
lret
stc
rolb
out
cmc
and
pusha
cmp
scas
ret
push
pop
inc
push
fwait
test
or
hlt
movsb
int
jp
pop
mov
push
sbb
mov
jne
insb
scas
sub
movsl
push
push
das
sti
adc
imul
lret
xor
arpl
sub
mov
lea
push
adc
dec
stc
mull
inc
cmp
or
dec
sbbb
jl
fmulp
mov
punpckhwd
sbb
frstor
cli
clc
fisubrl
loope
daa
lods
insb
jg
cmp
mov
push
dec
mov
cmp
sahf
sbb
lds
andb
in
xor
out
fmull
sub
mov
xchg
lcall
mov
in
aam
ds
xor
aas
or
shll
cs
add
mov
neg
dec
andb
and
inc
js
fwait
mov
or
xor
inc
adc
push
fcoms
mulb
mov
xchg
jl
popa
sbb
xor
not
fdivp
cwtl
cmp
in
outsb
loope
lods
aaa
and
aaa
fnsave
popf
sbb
xchg
pop
xor
and
sub
insl
das
repz
fdivs
adc
sbb
pop
jns
and
mov
outsl
lds
fneni(8087
xchg
repz
mov
pop
in
push
shll
sbb
adc
js
andb
fimuls
lret
outsl
in
repnz
addl
popa
sub
mov
jle
push
rcll
ja
sub
push
add
cltd
frstor
cmp
jge
cmp
shr
sar
icebp
outsl
pop
sbb
push
fnstcw
dec
rcll
addr16
les
adc
sub
xor
inc
adc
jl
repnz
inc
imul
xchg
loopne
adc
or
jge
int
and
or
lds
pop
divl
repnz
cmpsl
inc
incb
sbb
ror
and
add
imul
sbb
add
sti
xor
popa
jbe
mov
push
or
inc
add
pusha
loop
ljmp
add
scas
gs
push
dec
xchg
imul
inc
inc
das
loop
invd
lods
jp
xchg
je
pop
daa
shlb
inc
addr16
jge
mov
cmp
inc
test
xchg
dec
clc
stos
js
sbb
mov
int
mov
pop
ret
mov
and
jp
xor
filds
jae
push
jmp
add
adc
mov
mov
inc
addr16
push
rcrl
sbb
repz
int3
pop
push
add
sub
pop
loope
pop
jle
push
mov
inc
push
lods
scas
mov
inc
into
or
sub
adc
fcomp
or
lods
stc
lcall
fstpl
bound
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
stos
ret
cmpsb
addr16
lret
jl
cmp
sbb
push
sbb
shll
inc
jg
mov
dec
out
lock
cmp
mov
or
jp
adc
push
xor
sub
jo
or
dec
add
sbb
xor
movsb
insb
sbb
out
xor
imul
sub
mov
mov
mov
dec
push
sbb
fldl
push
iret
dec
jae
dec
int3
sar
mov
lcall
xchg
pop
add
sub
sbb
cmpsl
mov
push
fnstcw
call
movsb
xor
mov
mov
loope
sbb
test
mov
xor
dec
mov
sub
adc
jp
aaa
dec
mov
sub
inc
mov
sub
sbb
loopne
popa
sar
stos
pop
fucomi
lret
jl
jbe
pop
jb
hlt
xor
ljmp
mov
pop
test
mov
mov
rclb
sub
aas
push
outsl
sarl
gs
mov
ljmp
jns
in
mov
xchg
pop
subl
sahf
or
adc
inc
dec
arpl
mov
std
add
dec
inc
pop
adc
and
call
jbe
adc
mov
test
jb
rcll
lock
addl
dec
cltd
subb
movsl
fnsave
loope
sub
pop
or
imul
xchg
and
imul
push
push
lret
jo
pushf
lret
popa
inc
dec
jns
and
sub
xor
mov
and
or
sahf
xchg
aaa
or
cmp
push
repnz
scas
mov
push
adc
fs
in
mov
movsb
stos
mov
adc
lods
and
pop
add
lret
in
dec
mov
add
xchg
std
fisubrs
cmp
jg
xor
xchg
fisubl
leave
push
movsl
data16
fwait
adc
pop
adc
aas
leave
jmp
xor
scas
lds
flds
jnp
push
roll
pop
ja
sub
js
inc
movsl
shlb
inc
inc
mov
cmp
test
loope
fildl
je
fists
or
cmp
or
rclb
pushf
dec
fwait
push
loop
jmp
sub
cwtl
xlat
push
add
dec
dec
mov
sahf
iret
xlat
pop
repz
inc
lods
subb
sbb
push
add
out
lret
cmp
mov
daa
rolb
cmpb
push
add
jg
or
aam
sub
movsl
ds
dec
shrb
fstpl
icebp
add
inc
lods
sbb
fs
add
cld
pop
mov
or
les
add
pop
inc
test
or
jecxz
pop
cmp
roll
fnstsw
add
inc
and
xchg
mov
roll
mov
mov
adc
mov
sub
sub
cld
add
inc
adc
adc
clc
and
push
or
in
mov
sbb
stc
add
imul
mov
jmp
icebp
cs
ja
jno
mov
push
and
jns
jl
mov
pop
sbb
adc
sahf
pop
sarl
mov
cmp
jmp
es
mov
fldcw
mov
jo
cld
iret
sahf
lcall
inc
mov
mov
jg
mov
fbstp
insl
notl
jmp
js
push
and
and
jb
loope
inc
pushf
cs
xchg
cmpsb
xchg
xchg
popa
ljmp
nop
in
ret
in
xlat
mov
lret
sub
jne
and
add
cmp
jp
xlat
cmpsl
inc
test
jns
pop
add
jbe
negl
or
aam
jg
mov
dec
and
pop
rol
inc
std
xchg
shlb
xchg
test
fadds
adc
adc
jno
clc
jmp
jnp
int
push
scas
jp
dec
and
mov
adc
jmp
ds
outsb
data16
ss
ljmp
push
outsl
test
add
pop
subl
jge
sbbl
in
xchg
scas
fdivs
sub
mov
mov
adc
mov
push
pushf
clc
jbe
sbb
std
in
jno
sub
or
mov
shll
or
adc
ljmp
insl
jecxz
pop
dec
in
loope
sub
fsubs
push
iret
add
push
out
mov
mov
test
push
push
inc
inc
mov
addr16
push
sbb
mov
insl
cs
int3
adc
cmp
out
push
mov
outsl
jle
mov
pop
lods
test
test
mov
fimuls
jmp
fisttpll
lret
out
xchg
sbb
xchg
inc
fisubrl
adc
sbb
ds
int
jnp
jmp
popa
or
ret
adc
mov
imul
lock
xor
sub
fstpt
pop
sub
ljmp
ja
test
push
and
add
inc
pop
cmpsl
push
adc
mov
jno
xchg
mov
popf
pop
ds
dec
fistpl
lods
insb
cltd
rcr
mov
push
cli
loope
loop
and
mov
negl
popa
sbb
adc
repz
mov
addr16
mov
loop
scas
rorb
cmc
out
push
or
push
or
push
xchg
mov
pushf
fadd
pop
pushf
into
sbb
or
arpl
test
jmp
loop
mov
sbb
fiadds
call
xchg
ret
jbe
pusha
pop
adc
mov
inc
arpl
fmul
xor
into
and
adc
hlt
adc
nop
imul
aas
jecxz
addr16
xor
cmp
push
insl
hlt
pop
mov
cmp
popa
icebp
call
sbb
push
lcall
cmpl
iret
movsl
pop
test
lahf
sbbb
shll
loope
inc
xor
mov
or
or
std
xor
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fcomp
adcb
lret
jl
push
cmp
mov
loop
xchg
adc
lds
aaa
and
xchg
or
aam
jecxz
addr16
push
ret
adc
icebp
or
xchg
jg
sub
dec
xchg
fists
rcrb
mov
lret
adc
sbb
insl
fidivrs
ret
push
imul
arpl
xor
push
test
das
xor
pop
dec
outsl
pop
push
repnz
pop
pop
roll
sub
cmp
sar
lock
xchg
jns
mull
std
mov
dec
jmp
xor
lods
aad
xchg
and
sbb
out
jae
arpl
xchg
lret
pop
test
cmpsb
push
mov
jnp
mov
xlat
sub
repnz
add
sbb
jnp
mov
or
sahf
nop
jns
aaa
movsb
pop
movl
sbb
cmp
cmp
sub
test
and
mov
orl
mov
and
add
adc
jg
jo
inc
gs
adc
std
xchg
mov
in
pop
pop
add
loope
push
or
jg
adc
pop
ljmp
ljmp
sbb
in
cmp
es
bound
push
jne
sub
sbb
xchg
jecxz
sti
ret
push
xor
push
push
lods
xchg
push
fsubrs
xlat
ror
push
nop
xor
sahf
pop
sub
andb
loop
cmovns
dec
jecxz
mov
add
into
jb
mov
inc
stos
je
in
lret
addr16
pop
outsb
pop
jp
dec
pusha
call
stos
and
jns
pop
push
test
cmp
sahf
xor
addb
fisubrs
inc
loopne
cmp
ds
fistps
nop
add
jge
dec
out
stos
and
pop
adc
xchg
shr
sahf
inc
push
mov
xor
in
inc
mov
fwait
cltd
stc
sbb
jnp
push
sbb
in
push
test
pop
ss
bound
ja
mov
jmp
dec
je
sub
ja
ficompl
mov
xchg
enter
jge
mov
sahf
ja
fisttps
repz
jo
aad
mov
enter
pop
popl
ds
icebp
shll
pop
mov
push
sbb
iret
repnz
sub
ret
inc
adc
fnstcw
push
dec
mov
sbb
sbbl
es
insl
xor
mov
rclb
jns
out
out
fisubrs
sahf
aas
dec
test
jle
out
mov
jle
in
lods
cld
pushf
mov
enter
scas
aam
movsl
mov
in
mov
adc
mov
js
movsl
imul
inc
xor
arpl
dec
aam
push
cmpsl
push
inc
xchg
insb
hlt
arpl
dec
push
ret
inc
cs
lock
lods
push
nop
push
cmp
mov
push
mov
nop
jne
sbb
cmp
jl
sbb
jnp
call
xorb
add
inc
mov
sarb
repz
stos
pop
add
pop
cmp
pop
lock
jg
mov
inc
sbb
adc
into
les
cmpsb
punpckhwd
fimull
xchg
add
add
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
ret
mov
jl
lret
jl
push
push
inc
inc
cmpsl
adc
stos
pop
incl
mov
sbb
cltd
lock
xor
je
insb
adc
adc
mov
scas
in
ljmp
inc
xchg
shl
add
mov
adc
stos
mov
mov
dec
imul
call
shld
daa
mov
std
into
jp
dec
dec
ror
dec
mov
sub
stos
or
dec
push
sub
or
cmp
out
xlat
jmp
or
xchg
aam
sbb
cmpsl
cmp
or
xor
xor
sbb
pop
in
cld
mov
mov
xor
sub
fbld
sbb
call
mov
repnz
sbb
pop
adc
mov
insb
xor
rol
pop
out
ljmp
jmp
in
xchg
leave
sbb
shrl
lods
test
mov
pop
and
mov
jmp
aas
push
dec
aam
cmp
movsb
mov
pusha
mov
in
lods
ljmp
cmp
mov
cmpsb
rol
add
add
inc
mov
aam
sbb
ss
xchg
jge
push
xor
inc
shrb
adc
hlt
inc
fldl
xchg
jnp
adc
out
cmpsl
frstor
jnp
fstpl
jg
in
pop
jl
xlat
add
push
std
xor
daa
scas
les
mov
lods
cmpb
fucomi
inc
pop
xor
pop
sbb
test
fstps
sub
stos
cmp
loop
aam
push
std
dec
push
shlb
sub
lods
xor
icebp
dec
lret
cmpsl
xor
mov
ret
and
mov
mov
jae
pop
das
jecxz
push
adc
mov
leave
xchg
mov
jne
cwtl
neg
ret
jg
xchg
nop
jb
jnp
sbb
dec
adc
dec
std
mov
movsb
cmp
mov
jno
js
movsb
xor
jp
enter
pop
leave
push
dec
getsec
inc
dec
outsb
jge
test
outsl
mov
enter
scas
imul
in
push
fnsave
test
out
sub
daa
adc
or
adc
cld
fisubs
jg
mov
or
add
adc
and
cs
repz
add
jb
jecxz
or
clc
ret
cmp
out
sub
insl
mov
es
push
cmp
inc
jmp
mov
sub
mov
loopne
xchg
scas
js
adc
xchg
jnp
xchg
out
push
dec
pop
jp
aas
mov
testb
test
jnp
fwait
jl
or
push
add
stos
and
add
test
std
jno
pop
lods
cmc
stc
leave
lcall
popa
push
and
mov
and
mulb
fsubs
jo
frstor
xor
sarl
inc
rcl
pop
pop
daa
in
loope
add
adc
dec
mov
ja
mov
jg
xchg
repz
push
in
daa
jne
pop
callw
out
pop
inc
pop
jbe
or
mov
cmp
and
inc
dec
imul
jmp
sub
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
pop
int
aas
xchg
jns
jl
lods
cmpsl
push
sub
adc
fcomps
test
push
push
dec
xchg
mov
movsb
pop
movl
lahf
fwait
imul
push
inc
fwait
mov
ss
pop
xor
data16
push
popf
push
je
inc
mov
or
jno
push
dec
inc
cs
stos
adc
out
out
hlt
mov
mov
push
decl
sub
cmpsl
mov
xchg
jbe
adc
cwtl
jge
and
inc
mov
ficoms
std
pushf
push
imul
repz
mov
xchg
add
or
hlt
jl
and
lcall
mov
fisubl
incb
pop
jo
push
fwait
into
and
xchg
jo
insb
jle
jns
adc
xor
xor
lods
sahf
dec
fbld
outsb
imul
mov
mov
adc
fnsave
lds
lods
inc
dec
mov
push
pop
sarb
cltd
mov
sar
sbb
push
mov
sub
mov
mov
pop
out
xchg
ja
jecxz
pop
roll
rorl
sub
popf
and
imul
stc
pop
mov
sub
test
rcll
les
testl
mov
and
inc
pop
sbb
test
jne
ret
jle
lcall
mov
xor
lcall
lret
mov
aas
mov
and
popa
adc
mov
icebp
pop
fldenv
adcb
stos
mov
sub
ret
into
xchg
pop
fisubl
pop
or
mov
xor
test
adc
daa
mov
loop
sub
fdivrl
add
loopne
ja
xchg
or
fisubs
fistps
jg
in
or
jns
sbb
xchg
cmpsb
loope
adc
ss
pop
cmpl
inc
mov
mov
cmpsl
add
cltd
adc
add
jno
mov
dec
pop
pushf
jecxz
mov
add
jno
push
and
adc
push
pop
iret
inc
xor
sbb
mov
cld
int
and
movsb
mov
cmpsb
and
sbb
jmp
jne
and
sbb
fldenv
or
scas
xchg
dec
fwait
xchg
cmp
mov
xchg
test
pop
ja
pop
and
stc
cld
test
dec
lahf
dec
les
test
addr16
out
jbe
sbb
push
mov
ret
push
negl
jle
jo
inc
popf
cltd
add
mov
mov
les
push
and
xor
outsb
dec
lcall
fs
jl
cltd
mov
add
mov
cli
mov
fwait
adc
mov
or
out
xchg
dec
pop
xor
loope
sub
adc
add
addr16
add
jmp
movsb
lcall
mov
popf
mov
aad
stc
push
mov
sbb
sub
push
das
or
in
in
or
push
sahf
adc
mov
xor
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
push
in
cmp
lret
jl
adc
cli
cmc
dec
arpl
mov
xchg
iret
mov
mov
jmp
cltd
neg
jno
cmp
lea
push
dec
dec
subb
lret
jg
or
inc
sbb
fstpt
insb
fucomip
jl
inc
sub
xchg
jns
fcoml
inc
inc
ret
test
dec
jnp
enter
aas
int3
lods
outsl
mov
cmp
pop
ret
or
jbe
sbb
push
out
test
jle
repnz
or
push
push
and
mov
shl
sbb
mov
xchg
rcr
push
mov
mov
or
aam
mov
outsb
fnstcw
rorl
dec
sub
adc
rcl
add
push
test
jg
lret
mov
stc
mov
push
xchg
jae
into
fwait
mov
rclb
inc
lods
shr
iret
dec
scas
into
in
sarb
shll
insb
mov
inc
jecxz
lret
cli
pop
daa
inc
in
ss
jp
cli
jae
jne
cmpsb
fiadds
mov
or
adc
dec
fstps
sub
ss
xchg
negb
add
sub
xor
dec
fs
popf
pop
ds
pushf
sub
cs
mov
cli
cmpsl
in
mov
lods
lods
dec
hlt
idivl
jbe
inc
xchg
cmc
ret
jns
in
loope
fiadds
or
out
into
loope
prefetch
push
call
scas
cmp
xor
out
and
gs
aaa
xor
cmp
lret
out
test
addb
notl
inc
in
jmp
add
cs
ljmp
jmp
div
ret
xchg
mov
lcall
mov
mov
addr16
or
pop
gs
or
sub
mov
push
and
sbb
push
add
popa
sub
iret
add
inc
or
push
mov
in
dec
jmp
xchg
pop
and
mov
push
xlat
add
pusha
dec
rcrl
cmp
or
and
hlt
inc
rorl
insb
add
inc
add
ret
vpaddd
inc
popa
arpl
mov
ror
and
ss
clc
in
rcl
ret
sbb
cmp
repz
cld
jnp
push
and
sub
imul
int
shl
outsb
daa
cld
jo
push
mov
test
popf
cmpsb
and
xor
or
or
xchg
cmpsl
jecxz
sub
or
add
cmp
sub
push
lret
add
push
imul
loope
add
pop
dec
in
popa
dec
pop
mov
leave
cmpsb
or
jmp
rorb
inc
shll
xor
loopne
nop
mov
daa
jecxz
scas
jecxz
inc
push
xchg
jo
js
cmp
mov
jb
cwtl
ret
outsl
cmp
out
pop
sub
jge
push
inc
rcll
aam
lret
jo
loop
lods
in
adc
or
add
cmp
mov
adcl
mov
add
movl
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
loop
dec
arpl
jl
mov
divl
popf
mov
add
and
inc
divb
rorl
imulb
cmc
sbb
dec
jge
gs
pop
jb
daa
mov
push
int3
xor
xor
push
out
loope
or
sub
mov
pop
pusha
pop
out
sar
sti
out
mov
sbb
out
sahf
test
outsl
ljmp
xchg
adc
outsl
jns
lret
test
cli
and
loopne
cmpb
add
out
mov
adc
in
mov
pop
xor
loop
dec
jo
pop
sti
xor
fisubrl
aam
dec
or
add
add
or
sti
mov
adc
adc
int3
pop
xchg
mov
or
sub
fstp
sbb
xchg
lret
cmp
mov
xor
and
xor
outsb
lods
xchg
in
stos
inc
sbb
rcr
aam
ret
cmp
mov
push
jb
pop
es
ret
mov
movsl
fwait
shr
outsb
sbb
add
inc
jg
cmp
into
les
es
loop
pushf
fucomi
cld
cmc
mov
inc
nop
iret
jae
leave
out
lock
ror
insb
jmp
insb
mov
in
jmp
fldenv
and
dec
add
lods
iret
dec
jmp
in
push
inc
minps
mov
push
mov
iret
in
add
pop
lret
add
lcall
add
stos
jp
push
ss
sub
push
call
xchg
pushf
imul
mov
or
sbb
cmp
outsl
gs
sub
fists
iret
jp
js
test
pop
jle
imul
push
dec
and
push
sbb
sub
fwait
jo
int
leave
fmull
movups
out
sarb
cmpsl
sbb
shrl
sub
xor
out
pop
mov
std
scas
dec
js
pop
push
cmp
das
sbb
pop
sub
sub
xchg
push
packuswb
je
push
cmp
xchg
sahf
sbb
gs
jae
imul
push
and
mov
cwtl
xchg
mov
sbb
pop
inc
fisubs
adc
push
and
aas
cmp
sbb
test
aas
push
outsl
int
push
frstor
cwtl
inc
pop
fstpt
lods
pop
insb
cmp
xchg
arpl
sub
sub
fwait
addl
fsubrs
subb
hlt
jne
sbb
mov
lods
aaa
cltd
fisttps
sub
into
or
mov
bound
lock
adc
rcrl
cmp
xchg
mov
jo
idivb
daa
dec
sbb
loop
xchg
pop
adc
push
adc
fsubrl
inc
sub
lret
aam
push
insl
repnz
clc
inc
sub
call
lret
adc
jae
mov
cmpsb
inc
cmpsb
xchg
mov
rcrb
or
push
add
jmp
jmp
push
daa
inc
imul
xchg
popf
repz
xor
mov
jns
jl
or
inc
mov
sub
decl
inc
mov
icebp
mov
cs
dec
gs
cwtl
push
mov
lds
sarl
ja
cmp
mov
fwait
sbb
mov
pop
cmc
outsl
mov
and
in
fisubs
fiaddl
sbb
xchg
stos
test
jle
loopne
xchg
loopne
fimuls
andl
loope
cmp
sub
imul
xor
int3
mov
jne
fadd
xchg
dec
imul
in
mov
sub
aaa
pop
and
aad
repnz
fwait
add
pop
icebp
inc
mov
inc
adc
icebp
ss
popa
ss
lods
xchg
jns
pop
dec
cmp
inc
push
cmpb
or
pop
sbb
sbb
jo
jne
mov
arpl
std
aam
loopne
call
ljmp
add
cmp
cmc
or
int
sbbb
mov
cmp
mov
stos
test
xor
lret
call
adc
cld
pop
pop
or
shrb
in
or
jl
mov
fisttpl
and
mov
mov
mov
clc
jnp
xchg
push
aam
sbb
dec
test
xor
je
and
into
sub
stos
jge
mov
xchg
xchg
adc
call
cmp
aam
lock
fistl
aaa
iret
mov
movsl
movsb
pop
xorl
adc
inc
out
lret
add
outsl
movsb
leave
mov
stc
jecxz
dec
xchg
pop
push
repz
mov
push
mov
shll
out
out
push
cmpsl
fcmovnbe
sti
sub
into
jns
repz
int3
sahf
sbb
jle
xchg
push
leave
sbb
outsb
fidivl
lock
jp
dec
out
xor
dec
fstpt
sub
fsts
lret
jmp
add
dec
jg
lret
sub
fnstsw
rorl
iret
pop
dec
xchg
adc
jmp
lods
shlb
dec
jnp
subl
movsb
mov
loope
ret
push
xor
test
popa
leave
mov
test
xchg
xor
or
sbb
mov
adc
pop
xlat
es
pop
or
inc
jp,pt
jnp
addr16
into
and
inc
push
push
xchg
test
dec
mov
shrb
scas
sub
mov
fists
sub
cmc
mov
movq
mov
dec
or
push
push
dec
ffree
jle
or
ds
and
test
cmp
popf
jle
movsl
push
movsb
cmp
push
add
cltd
mov
cmc
lea
mov
in
shll
fldt
jb
and
mov
jae
loope
inc
sbbb
xchg
rorl
roll
push
mov
push
test
push
push
popf
ja
icebp
sbb
out
sub
push
sbb
push
dec
push
inc
cltd
push
in
jl
push
mov
push
call
in
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
gs
xchg
xchg
jl
lret
jl
jbe
imul
out
adc
push
out
pop
pop
in
or
mov
gs
icebp
jae
xor
lods
rolb
fidivrs
cmp
ret
adc
mov
dec
call
push
fcomi
test
jecxz
push
pop
add
leave
mov
sti
out
pop
leave
or
repz
cmp
gs
into
out
out
pop
mov
movsl
cmp
inc
mov
mov
test
insb
scas
and
outsb
jg
jnp
dec
je
mov
lret
or
fcoml
mov
dec
lds
rcl
mov
inc
enter
lcall
in
jae
jnp
xchg
aaa
outsb
jb
and
and
add
pop
loop
pop
testl
bound
and
inc
test
adc
lods
lods
xchg
push
fnstsw
loope
outsl
dec
mov
pop
xchg
inc
mov
push
and
pushf
iret
sbb
cmp
dec
loopne
popf
sub
dec
into
shl
aas
pop
push
jg
push
mov
sbb
mov
incb
mov
and
insl
stc
aaa
sbb
jne
add
mov
mov
dec
xchg
pop
mov
pushf
leave
ficoms
iret
add
adc
inc
fs
in
sbb
pop
scas
loopne
jb
sub
out
adc
mov
ret
fnsave
ljmp
push
jecxz
dec
jns
pop
into
sub
push
pop
and
out
pop
or
ret
lds
jle
dec
femms
aad
dec
jecxz
push
inc
fadd
cli
cmp
dec
repnz
in
mov
mov
subb
addl
out
ljmp
rcrl
adc
pop
push
push
mov
or
out
jg
xor
sub
dec
mov
mov
xchg
fs
inc
mov
je
addr16
dec
xchg
nop
cmp
mov
daa
inc
pop
inc
stos
sub
subb
leave
sahf
inc
and
dec
outsl
out
loope
repz
aam
fldt
mov
popf
rorl
xor
mov
sbb
xor
sub
xchg
jge
cmp
cli
lods
jg
movsb
xchg
and
xchg
das
adc
dec
inc
fwait
ljmp
xor
ljmp
lahf
pusha
xor
adc
sbb
aam
scas
cmp
mov
xchg
ficomps
loopne
js
jmp
sub
mov
cmp
scas
mov
cmc
add
dec
ret
pop
mov
orb
testl
aad
xchg
lahf
pop
orl
mov
shll
ds
decb
movsl
hlt
sub
dec
int3
gs
jge
ret
and
mov
jp
jg
add
das
subb
std
jp
outsl
imul
push
bound
push
aam
repz
cwtl
cmpsb
cmp
mov
dec
mov
inc
fsubs
jg
lods
daa
xor
pop
pop
sbb
mov
jb
add
hlt
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
popa
out
add
lret
jl
nop
popf
jnp
xchg
mov
pop
xor
in
dec
push
pop
jl
sub
inc
lahf
ds
fistl
lcall
je
movb
clc
mov
icebp
inc
mov
cmp
push
cld
aas
inc
cli
stos
sbb
rcll
aam
pop
and
lock
scas
dec
mov
mov
xchg
sbb
fadds
or
jmp
fildl
faddl
scas
jmp
aaa
outsb
cmp
stos
jns
and
jae
clc
popa
movsl
add
sub
dec
lods
jns
syscall
or
inc
adcl
adc
lock
push
lods
leave
outsb
jb
leave
outsb
pop
sbb
sti
mov
xor
dec
mov
sub
popa
add
xor
push
sub
aam
movsl
mov
aam
mov
add
call
pop
dec
push
adc
mov
dec
pop
dec
dec
divl
dec
test
mov
xor
add
insb
and
xor
mov
push
call
fwait
push
push
movsb
lcall
stc
pop
fwait
push
loop
mov
int
popa
daa
adc
test
rcl
sub
icebp
bound
ja
inc
testb
or
inc
popf
dec
aad
arpl
in
pop
push
sbbl
in
pushf
inc
jnp
sub
xchg
xor
push
push
scas
pop
and
and
push
imul
adc
lods
xorl
and
neg
stc
in
jb
sbb
cld
fistpll
mov
push
pop
sbb
cli
xor
xor
movsb
pop
fwait
xor
aas
daa
push
dec
repz
jae
add
push
in
and
sahf
inc
sar
dec
push
ss
mov
sti
sbbl
mov
dec
push
add
sub
subl
test
aaa
mov
lcall
subl
ret
addr16
repz
add
loop
sub
in
std
shlb
jns
mov
and
andb
pop
xchg
mov
adc
gs
push
loop
add
mov
and
sub
sub
shl
enter
std
repnz
mov
mov
jae
mov
jl
faddl
pushf
mov
pop
int3
mov
stos
inc
mov
and
mov
cltd
in
push
mov
push
loope
icebp
pop
add
cmp
mov
xorb
mov
add
inc
cmpsl
scas
xchg
dec
movsl
out
xchg
and
ljmp
sub
movsl
ret
pop
jb
stc
fstpl
loope
jns
outsb
adc
out
in
sub
push
sub
ret
jae
mov
xor
mov
add
sbb
outsl
cld
popa
xor
xor
jge
mov
cmp
enter
sub
repz
xor
int3
dec
int
pop
sbb
cmp
push
nop
shrb
stc
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
imul
cmp
jl
fdivrs
push
sbb
ja
xchg
mov
xor
filds
ss
dec
mov
daa
pop
sbb
loopne
mov
notl
mov
sbb
pop
ds
cmpsl
push
pop
addr16
in
and
loope
or
adc
loopne
push
pop
cmp
imul
xchg
movsb
mov
xor
sbb
sahf
repz
stos
pop
add
es
jbe
lahf
sbbl
mov
sub
dec
cmc
jl
push
pop
push
add
push
push
add
adc
push
lahf
sub
sbb
sbb
cmp
add
imul
cld
xor
mov
test
out
and
mov
push
int
lea
insb
xor
mov
gs
and
outsl
jmp
fmuls
and
ret
mov
hlt
loope
pusha
ja
push
add
call
into
cli
xchg
insl
xor
and
inc
mov
mov
pusha
sahf
int3
sahf
shlb
aam
pop
inc
jmp
add
pop
pop
jb
test
cld
call
inc
xchg
mov
push
jmp
cmp
jl
in
shrb
sbb
insl
imul
pop
adc
push
pop
icebp
xor
les
inc
mov
scas
xor
sbb
test
mov
jge
insl
pop
dec
add
push
in
popf
iret
sub
inc
es
fwait
pop
xchg
mov
pop
movsb
testb
lods
xchg
mov
and
mov
mov
xchg
ds
cmp
xor
cmp
push
rorl
call
ss
xchg
dec
nop
inc
flds
lock
ss
xchg
jnp
xchg
xchg
stos
filds
or
popa
sub
jns
cmp
sub
push
push
mov
aaa
roll
mov
jp
adc
sahf
imul
sub
sub
mov
xchg
sbb
subb
enter
sub
xor
mov
mov
test
iret
call
pop
or
fidivrs
lock
lret
ficoms
outsb
and
jne
fiadds
inc
dec
shlb
roll
xchg
sbb
pop
ljmp
jl
call
or
enter
cmp
push
or
insl
jne
adc
jmp
add
mov
stc
into
jbe
mov
scas
jecxz
movl
cltd
aas
xchg
mov
mov
xchg
xchg
into
push
xchg
sub
jne
or
test
xchg
cmpsb
fiadds
je
popf
adc
scas
inc
out
adc
or
loop
stc
sub
pop
mov
jmp
jge
notb
test
xorl
imul
or
jno
ret
stc
xlat
cwtl
sbb
dec
push
xor
add
popf
ficoms
inc
push
sbb
sbb
inc
inc
adc
dec
push
cmp
adc
subl
rorl
scas
xlat
jmp
lret
jo
or
jmp
sahf
xor
insb
mov
lahf
jl
lret
jl
mov
add
popa
cmp
push
enter
pop
movsb
fcoml
xor
je
daa
mov
popa
xor
pushf
js
fnstenv
ficompl
fidivs
xchg
imul
jecxz
dec
mov
out
jb
mov
push
mov
mov
cmp
xchg
out
gs
shll
cld
inc
in
cmp
adc
mov
sub
sbb
jmp
xor
mov
sbb
dec
xchg
push
push
lret
nop
aad
adc
push
mov
inc
into
adc
jmp
xlat
sub
dec
mov
pop
adc
jae
dec
push
idivb
jno
dec
jmp
mov
adc
rol
xchg
push
out
out
sbb
sbb
xlat
jbe
mov
jno
pushl
iret
stc
mov
ret
cmpsb
mov
out
ficoms
lods
mov
cs
xor
mov
hlt
mov
sarb
push
mov
das
push
ja
into
inc
nop
jle
enter
jle
test
fs
add
mov
or
fstps
inc
xchg
push
adc
push
ljmp
test
fldl
mov
aad
iret
adc
js
ficompl
mov
push
push
xor
out
ret
stos
push
pop
loope
cli
push
inc
aaa
lret
xor
push
data16
cmp
ljmp
sahf
fst
aas
inc
repnz
les
xor
or
mov
mov
mov
mov
popf
fstsw
leave
ret
enter
sbb
adc
loop
xchg
push
data16
or
gs
enter
mov
push
fistl
pushw
es
sub
xchg
adc
mov
xor
cmp
cs
imull
into
xor
push
add
out
mov
and
lret
sbb
mov
push
popf
bnd
xor
nop
sbb
push
or
and
shlb
push
add
testl
mov
dec
pusha
push
pushf
test
xor
or
xchg
add
jae
out
pop
jns
rorl
and
mov
mov
and
mov
adc
sbb
adc
ljmp
stos
or
mov
scas
cltd
sbb
mov
pop
sub
lock
clc
cmp
pop
and
cltd
aad
out
mov
fidivl
mov
das
stc
fcoms
xchg
xchg
mov
fdivrl
cmp
aad
int
add
adc
jne
dec
cs
test
dec
mov
cltd
stc
add
lods
sahf
popa
clc
fsubs
cmp
or
inc
push
shll
jl
sbbb
push
cmp
sub
cmp
xor
jbe
adc
movsb
hlt
push
dec
popa
inc
insl
push
in
mov
lret
bound
xchg
and
lahf
mov
add
or
dec
push
xor
je
jge
sbb
std
int
test
rclb
hlt
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
dec
popa
std
pop
outsl
cwtl
jl
lret
jl
enter
adc
std
inc
mov
dec
insb
pop
data16
rorl
mov
jmp
mov
test
xchg
inc
jo
fildl
xchg
gs
dec
aam
out
out
aaa
lret
insb
add
inc
xchg
out
or
pusha
cmpsl
repz
pusha
daa
pop
xchg
add
rol
ret
sti
repz
out
sub
jbe
fdivs
lcall
data16
je
loope
jae
lret
and
iret
into
sbb
sti
lcall
mov
sbb
xchg
mov
js
inc
xchg
xor
jae
sbb
cmpsb
jp
jnp
jne
testl
mov
lahf
lods
rolb
dec
int
inc
cs
imul
mov
lods
and
test
mov
and
adc
in
sahf
dec
xchg
dec
repz
xchg
add
sbb
cwtl
mov
add
sub
movsl
adc
cmpsl
inc
aam
sbb
movsb
imul
sub
xor
sysret
jp
mov
imul
ljmp
sub
ret
add
ss
inc
pop
add
ds
xor
mov
mov
sub
in
pushf
push
cs
das
test
and
fs
in
movsl
adc
xchg
dec
subb
push
bnd
sub
fsubs
pop
xor
fiadds
xor
cmp
xor
test
sub
jge
adc
or
cmp
jns
or
pusha
and
pop
xchg
pop
or
data16
aas
out
pop
sub
jle
xchg
in
fidivrl
pop
mov
jle
roll
sub
mov
and
mov
arpl
push
mov
dec
jl
dec
dec
popf
sbb
sarl
mov
ljmp
rcl
in
int
push
xchg
adc
pop
inc
jno
lahf
push
stos
mov
sbb
in
movl
jmp
pop
loopne
sub
lahf
cmp
outsb
push
data16
pop
inc
mov
cmpl
lods
push
and
in
pop
fs
lahf
push
sbb
nop
gs
ljmp
xchg
arpl
aad
jl
xchg
add
xchg
aaa
lock
lret
xor
mov
mov
fbld
mov
mov
or
fistpll
dec
in
pop
adc
mov
es
pop
ja
xlat
inc
pop
sbb
loope
imul
outsl
add
out
and
xor
dec
orl
mov
lods
mov
mov
pop
mov
in
insb
cmc
lcall
push
and
addr16
add
out
test
call
ss
adc
or
scas
divl
inc
cmpsl
adc
add
add
or
out
mov
jnp
xor
push
out
xlat
add
jnp
pop
out
mov
aad
call
test
jg
cli
call
outsb
and
jns
jmp
lock
pop
or
out
mov
lods
push
test
mov
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
cwtl
imul
lds
jl
xor
cmpsl
jne
cmpsl
jg
push
out
jle
daa
cli
je
cmp
jp
sub
inc
xchg
fstpl
or
mov
ja
dec
aaa
daa
fdivrp
or
push
scas
inc
imull
or
add
and
int3
mov
mov
fcompl
test
popa
cmpsb
outsb
lods
popa
aas
arpl
push
ljmp
push
scas
and
or
or
pusha
movsb
repz
shlb
fnsave
mov
pushf
dec
push
and
cmp
xor
add
pop
cs
rclb
call
movsl
xor
in
mull
inc
sti
cmp
divl
aam
mov
fstpt
pop
arpl
jmp
test
pop
icebp
out
and
pop
lret
jg
clc
push
iret
add
mov
lret
inc
sbb
mov
in
push
pop
dec
cmp
test
scas
sub
clc
pushf
mov
insl
push
cs
sub
test
mov
dec
sbb
adc
rcr
xchg
cld
mov
cmp
pop
push
mov
in
andl
jns
xchg
cld
xchg
or
sbb
add
dec
xor
loope
sbb
insb
fisttpl
ret
adc
cli
jb
arpl
mov
xchg
inc
daa
sahf
addb
scas
adc
mov
pop
les
or
mov
movsl
xor
cmp
inc
sub
lods
add
cmp
fisttpll
addb
or
rcr
jno
dec
mov
out
dec
cmp
jle
mov
jns
flds
pop
push
mov
sti
fucomp
fcomps
imul
cmp
mov
shl
into
ret
or
sbb
out
movups
stc
inc
xchg
divb
movsb
lods
movsl
xchg
dec
lock
add
out
roll
out
add
cmp
bound
aam
rorb
int3
mov
es
adc
cmp
push
int3
inc
xor
shlb
xchg
cmp
adc
push
and
dec
mov
push
loope
maxps
or
mov
dec
cmp
fdivl
in
pop
insl
adcl
outsb
jae
mov
in
aaa
out
and
dec
pop
cmp
xor
cmp
cs
push
add
add
cmc
push
cld
lret
push
push
in
or
xlat
adc
insw
xchg
jle
adc
dec
aad
fwait
test
mov
sbb
xchg
std
or
sahf
iret
fadd
fwait
outsl
mov
mov
hlt
inc
mov
cmp
lds
mov
jl
arpl
pop
lods
cmp
cmovge
xlat
test
push
jecxz
or
insb
insl
inc
lods
adc
mov
mov
xchg
mov
and
adc
fcmovnu
icebp
mov
xor
pushf
imull
mov
inc
loopne
mov
push
out
iret
decb
add
sbb
out
sub
mov
in
filds
out
xor
inc
imul
xchg
scas
repnz
clc
pop
scas
mov
push
dec
ja
fs
inc
lret
or
stos
fwait
lcall
stos
pop
adc
mov
push
pushf
andl
add
add
push
aam
jns
shr
mov
jl
jns
jl
stc
es
xchg
pop
push
mov
inc
shll
add
jo
enter
stos
add
jp
aad
cmp
ja
cltd
push
lcall
dec
xorb
push
js
hlt
stc
and
or
call
pop
rolb
xor
cmp
ret
jl
mov
mov
call
inc
xchg
inc
mov
jb
add
repz
fs
sub
xchg
inc
fisttps
les
shl
filds
mov
sub
lea
jo
loopne
popa
sub
mov
jne
or
jne
popa
repz
pop
xchg
jg
and
imul
loope
jmp
xor
mov
popa
psubsb
jp
xchg
jle
mov
decl
xchg
push
mov
xor
negl
test
leave
inc
aas
mov
pusha
mov
stc
mov
push
or
pop
arpl
jne
and
mov
iret
imul
inc
hlt
mov
dec
scas
dec
push
push
sub
insl
mov
cmpsb
enter
dec
add
jns
movb
push
stos
fs
test
movsb
ror
and
dec
sbb
xchg
movsl
pop
adc
loop
fnstcw
xchg
arpl
mov
in
jecxz
or
add
xchg
addr16
loop
lock
orl
cwtl
das
scas
fs
mov
cmpsb
xor
xchg
add
scas
mov
outsb
adc
incl
adc
mov
orb
sbb
aam
cmpsb
dec
int
test
or
lcall
lods
and
jl
mov
mov
sbb
call
dec
rcll
je
mov
clc
roll
movsl
aad
add
test
fsubrp
fimuls
cmp
stc
xchg
test
movsb
and
cmc
aas
inc
test
xchg
push
stc
decl
scas
std
sbb
call
lea
enter
xchg
cmc
loop
inc
outsb
push
cmpsb
jb
adc
jg
sti
xor
xor
stos
fs
mov
movsb
xor
test
inc
mov
sbb
mov
popf
mov
mov
dec
inc
jl
flds
jp
dec
dec
arpl
cmpsl
push
pop
mov
or
cld
mov
nop
inc
inc
bound
mov
adc
push
dec
mov
pushf
aas
dec
sbb
je
in
cld
pop
mov
inc
dec
adc
in
test
pop
loopne
jmp
or
lret
pushf
cld
xchg
xchg
sbb
fcompl
jecxz
or
sub
scas
nop
mov
add
aas
ljmp
push
icebp
pop
sbb
pop
jae
sub
jmp
push
and
pop
cmp
popa
pop
mov
xor
and
pop
pop
cmp
dec
in
lds
jns
mov
xor
sub
pop
fadds
or
call
jo
mov
sub
push
mov
sub
xchg
fidivl
xchg
popa
pop
out
cmpsl
mov
cmp
push
and
cltd
add
imul
insl
mov
xor
mov
sbb
in
movsb
xchg
mov
pop
loopne
les
dec
push
jo
xor
xchg
out
lret
insl
sbb
sbb
or
cmp
stos
and
push
sub
clc
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
loop
insb
xchg
lods
jl
cmpsl
jns
jl
mov
dec
insl
mov
je
xor
mov
adc
adcb
dec
ficompl
in
lret
lea
add
out
test
dec
jge
jecxz
rclb
rcr
fistl
inc
into
mov
jmp
bound
das
lock
pop
sub
pop
int
enter
push
and
cmp
pop
push
and
sti
enter
and
sti
test
xlat
pop
mov
rcr
xchg
int3
mov
shll
push
sarb
sbb
inc
fisubl
inc
movl
xchg
xor
dec
xchg
ret
mov
out
sbb
insl
or
mov
in
xchg
sbb
std
rclb
jbe
dec
mov
insl
rcrb
cmp
sbb
inc
arpl
or
push
aas
cmp
or
push
push
mov
cmp
std
sahf
movsl
lahf
int
dec
xor
cmp
cld
jg
push
and
mov
sbb
pop
mov
movsl
popf
out
leave
and
mov
loope
jmp
mov
xchg
mov
jnp
cwtl
sub
aad
int3
cmpsl
sub
loop
xor
xor
lods
imull
mov
jp
xchg
and
mov
idivl
stos
out
test
jg
clc
fldcw
jnp
stos
faddl
fcomps
mov
imul
cmp
and
jne
sbb
push
and
fldcw
pusha
adc
sti
fucom
fwait
movsb
and
and
or
push
repz
mov
enter
xchg
inc
push
mov
jmp
mov
in
mov
sbb
push
pop
stos
mov
jno
jecxz
cmp
rclb
push
and
push
stos
sarb
mov
lods
daa
mov
jbe
je
sub
sets
jno
push
shlb
mov
fildll
cwtl
cs
push
cltd
xlat
xchg
lds
or
lock
leave
daa
xor
ja
dec
push
push
in
jle
mov
lret
xor
sahf
xor
xor
popf
out
mov
dec
outsl
mov
popf
inc
push
ja
shlb
xor
lret
mov
pop
in
jmp
lret
mov
jl
mov
and
dec
pop
clc
lret
rorl
sub
dec
dec
dec
jle
test
or
test
jecxz
ljmp
inc
push
cmc
je
call
mov
push
push
adc
sub
cmp
insl
jle
mov
scas
jl
jge
mov
out
int
or
add
mov
fiaddl
xchg
aas
pop
fldenv
into
out
stc
add
insb
push
cmp
outsb
addr16
data16
inc
pop
cmpsl
lds
mov
adc
dec
push
mov
sbb
jmp
dec
mov
insl
dec
xchg
sub
fdivr
or
and
inc
push
icebp
mov
cmc
inc
aaa
inc
jnp
mov
push
lcall
lahf
rclb
dec
mov
shll
jl
movsl
in
add
mov
adc
push
mov
imul
pop
push
xor
data16
cli
inc
inc
jge
lret
mov
add
mov
mov
xor
add
mov
jmp
push
mov
test
jnp
jmp
jl
jns
jl
std
lods
out
mov
xor
out
fdivp
push
push
sti
in
popa
daa
inc
outsl
lcall
xor
insl
add
mov
mov
mov
sbb
sahf
sbb
leave
out
lret
movsl
cmp
jbe
int
dec
pop
leave
push
xchg
repz
xchg
mov
cmp
dec
test
mov
insb
dec
bound
cli
fisttpll
xor
mov
scas
daa
dec
js
pop
ss
lcall
add
stos
fs
pop
mov
test
xor
push
popf
scas
mov
dec
mov
xor
out
test
push
jmp
das
dec
push
mov
mov
je
fiadds
mov
cmpsb
in
pop
out
aad
test
addr16
fwait
sahf
ficoms
jle
add
loope
mov
or
push
jb
push
decb
xchg
out
inc
sarb
outsb
inc
loopne
popf
popa
addr16
push
adc
cmpsl
add
dec
jecxz
arpl
push
lods
lcall
or
dec
mov
mov
pop
movb
hlt
dec
popf
xchg
rolb
pop
cwtl
in
mov
sub
ret
xchg
dec
jmp
sbb
fdivs
leave
ficomps
aas
cmp
xlat
pop
push
std
dec
nop
sub
mov
int3
lret
and
loopne
fnstcw
inc
lcall
inc
inc
fnsave
fistpl
fldenv
xor
mov
dec
cli
adc
pushf
push
sub
daa
mov
jmp
xor
push
mov
jbe
fcomip
or
and
xchg
jae
mov
imul
and
inc
icebp
inc
mov
test
imul
jbe
and
lds
in
jne
dec
sub
cmpsb
push
sar
sarb
or
popa
rep
fwait
sub
shll
imul
ficoms
stos
mov
ds
leave
loope
ljmp
adc
pushf
clc
mov
out
sub
lds
scas
add
push
mov
repz
lret
jns
xchg
rcl
jae
push
xchg
sub
mov
cmp
imul
scas
xor
jo
pop
mov
inc
jns
shl
stos
xchg
xor
dec
xchg
out
sbbl
pop
cld
int
mov
push
hlt
mov
mov
mov
sub
ret
test
jmp
std
add
orl
iret
mov
jecxz
idivl
out
daa
sbb
mov
add
mov
inc
jg
mov
test
pop
pop
iret
int
aad
mov
ljmp
arpl
pushf
pushf
add
jno
testb
roll
mov
mov
add
or
cld
sbb
out
rcrl
jbe
mov
sbb
pop
test
or
repnz
fcoml
jle
jb
mov
adc
imul
jns
out
sbb
add
stc
out
jnp
scas
cli
push
scas
xchg
ss
sub
imul
sti
daa
fistl
mov
repnz
fwait
mov
sbb
push
movsb
push
xor
xchg
xchg
inc
pop
mov
mov
shlb
cmp
divl
mov
cvtps2pd
push
cmp
sub
cmp
iret
movl
push
fdivrl
fcos
jne
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
cli
popa
stos
jl
cmpsl
jns
jl
in
int3
adc
test
fidivrs
ret
mov
outsl
lcall
mov
xor
shlb
cmpsb
pop
cmpl
leave
pop
inc
dec
push
inc
add
js
ss
xor
and
mov
mov
push
call
xchg
shl
outsb
xlat
outsl
inc
pushf
aas
loopne
pushl
jb
mov
mov
cs
sarb
push
xchg
fdivr
fsubs
sbb
mov
pop
xchg
xchg
es
ljmp
xchg
jmp
ret
xchg
dec
mov
mov
rorb
xlat
mov
out
add
lods
mov
pop
out
pop
xor
insl
cmp
roll
mov
jb
stc
inc
mov
aam
or
pop
sahf
pop
mov
lsl
xchg
out
or
xchg
cwtl
addr16
mov
repz
gs
add
or
dec
cmp
adc
es
ljmp
rol
xchg
jmp
stos
xchg
dec
inc
cmp
push
xchg
out
fdivs
jg
mov
mov
imulb
xor
rolb
out
idivl
mov
daa
ljmp
aaa
sar
sbb
mov
add
pop
nop
or
repz
jb
in
mov
enter
jbe
jmp
sub
inc
xchg
mov
sub
daa
sub
xor
test
pop
loop
sbb
push
adc
jle
inc
fistl
cltd
adc
loopne
or
int3
shlb
mov
negl
hlt
jecxz
rcr
test
les
xor
cld
cs
cs
sub
sbb
mov
dec
je,pt
fdivrl
mov
movsb
ljmp
popa
loopne
push
adc
pushl
mov
cli
std
arpl
xchg
out
cld
inc
jne
lea
lock
jmp
mov
test
xchg
dec
in
lret
cmp
xlat
loop
fimull
xor
xchg
out
jo
jne
and
mov
movsb
fidivrs
pop
sbb
push
inc
xchg
adc
imul
add
fbstp
add
addb
jge
movsb
mov
mov
decl
mov
sbb
sbb
arpl
lds
pop
pop
push
addr16
pop
mov
cltd
and
or
out
dec
pop
dec
jbe
jl
in
push
cmp
cwtl
push
sbb
sbb
push
mov
ret
lods
pop
cmpsb
in
mov
lock
pusha
jge
fxtract
sub
dec
mov
jmp
xor
push
adc
mov
fcmovnbe
adc
cli
shll
jae
int
leave
inc
xchg
hlt
out
sbb
push
outsl
out
dec
jmp
insb
in
mov
add
mov
jno
nop
add
out
cwtl
push
pop
mov
int
adcl
dec
inc
subl
mov
sbbl
inc
scas
dec
lcall
jmp
mov
push
xchg
insb
imul
jge
jae
jb
rorb
fldt
jns
xchg
les
leave
ret
push
mov
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
mov
and
adc
lahf
pop
sbb
pop
cmp
lock
xchg
bndldx
mov
adc
into
aas
das
out
enter
xor
xchg
out
jnp
ret
fldcw
cmp
mov
jo
test
adc
dec
mov
add
mov
gs
insb
rorl
sub
cmp
pop
data16
imul
iret
cmovp
pop
aam
outsl
sub
jbe
push
jp
cmc
jno
xor
dec
aad
stos
lahf
jl
push
stos
mov
negb
shrl
shll
pop
lret
inc
jno
pusha
daa
sub
pop
xchg
dec
add
dec
cmpsl
cmp
xchg
or
mov
jb
scas
mov
insb
stos
bound
pushl
lds
jmp
ja
mov
lcall
sbb
loope
stos
push
jecxz
add
mov
sahf
mov
notb
in
adc
dec
xor
dec
push
xchg
xchg
jae
push
inc
in
cli
insl
lock
jmp
sbb
in
test
fs
cli
out
ds
push
int
jp
insl
pop
xlat
lea
mov
aas
into
dec
cltd
clc
scas
push
push
dec
or
adc
aam
mov
jno
imul
aad
popa
ljmp
aad
insb
addr16
ret
test
inc
cmpsb
in
test
sbb
lods
push
inc
leave
sub
fldl
xchg
sbb
push
movsb
cltd
scas
jp
jge
jge
fdivl
outsb
icebp
push
scas
loopne
cltd
mov
or
xchg
das
push
inc
ss
call
xchg
add
aad
ljmp
std
es
cld
test
jno
rcl
leave
fimull
ror
dec
mov
gs
cmp
imul
sub
cmp
fimull
mov
cld
aaa
adc
out
xor
cmp
adc
roll
call
insl
in
jmp
sbb
xorl
mov
test
push
push
lahf
xchg
sti
out
sbb
sbb
pusha
dec
outsb
dec
sub
lcall
xchg
or
call
mov
pushf
ret
ret
cli
loopne
sub
mov
aaa
jmp
hlt
cmp
mov
ret
loope
pop
mov
sbb
stos
mov
mov
adc
xchg
nop
add
andl
xor
cmp
jne
adc
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
xchg
or
sub
scas
jle
jl
ss
ljmp
out
ret
xchg
and
pop
jmp
mov
arpl
push
push
jnp
mov
inc
mov
test
repnz
sub
les
sub
sarl
lods
movsl
cmp
popa
popf
dec
in
aaa
add
movb
dec
jl
rclb
push
cmp
pop
gs
and
adc
faddl
mov
pop
dec
mov
inc
shlb
inc
mov
aaa
jbe
jp
loop
sahf
scas
mov
sub
das
leave
or
adcl
test
int3
fdivrl
sbb
test
xor
stc
movsb
stos
lret
push
xchg
jbe
and
xchg
movsl
lret
call
mov
sbb
sti
aaa
ljmp
xchg
shl
test
mov
lock
cs
mov
jbe
fstpl
cmp
pusha
in
push
enter
mov
mov
js
mov
loopne
std
sub
mov
dec
adc
stc
mov
call
lods
test
idiv
sbb
dec
faddl
mov
adc
adc
out
adc
arpl
inc
js
mov
repz
inc
pop
mov
mov
sbb
mov
ljmp
in
stos
mov
pop
add
or
std
imul
sbb
and
sub
adc
les
jge
gs
outsl
mov
mov
fisubl
push
or
jle
pop
cs
sub
sbb
push
repnz
or
fdivrs
out
neg
mov
pop
jp
pop
icebp
cmc
xchg
pop
adc
insl
push
adc
adc
cmp
pop
inc
inc
lcall
pop
push
pop
push
out
mov
push
fbstp
or
xor
lods
adcb
dec
rclb
arpl
test
sub
push
mov
sbb
sub
cs
mov
cmpsl
mov
xchg
xchg
fs
add
pop
adc
push
rcl
mov
xchg
sahf
test
jns
and
mov
out
pop
sub
cmp
mov
adc
lods
ljmp
ja
aaa
push
mov
adc
mov
mov
add
mov
mov
jmp
in
jae
jge
bound
dec
xor
mov
jl
scas
jle
jl
push
mov
sbb
mov
popf
test
xchg
jge
pop
dec
je
dec
das
rorb
jno
jmp
inc
shlb
xchg
push
dec
or
jne
mov
sbb
int3
push
xor
dec
pusha
xchg
push
dec
mov
scas
pop
pop
xchg
push
leave
xchg
in
inc
je
fucomi
jo
cmp
xchg
xor
pop
jb
test
dec
jecxz
mov
xor
js
mov
in
pop
dec
mov
clc
insb
sbb
in
jae
xchg
stos
fimull
sbb
and
rorb
aam
xchg
cmc
std
lea
daa
jp
lret
int3
enter
loop
fnstsw
jae
shrl
leave
test
xchg
shll
or
repz
arpl
pop
and
mov
mov
mov
xchg
jmp
xor
test
enter
clc
mov
int3
cli
xchg
fstpt
and
mov
lret
repz
mov
mov
dec
push
xor
cmp
mov
xor
aad
cmove
filds
adc
popa
add
outsl
in
andb
sahf
int
or
addr16
lds
ret
jmp
lret
xchg
and
nop
push
nop
sbb
subl
out
xor
jl
or
frstor
loop
sbb
cmc
out
nop
mov
dec
lods
inc
sbb
data16
ret
pop
pop
pop
cmpsl
jne
js
cmc
or
xor
or
rcrb
push
push
movsl
push
fidivrs
dec
or
dec
or
fdivs
pop
mov
ds
xchg
ljmp
jae
mov
xor
push
lcall
mov
cmp
sub
fisubrl
and
and
mov
aaa
mov
stc
call
icebp
inc
test
pop
aas
pop
pop
outsl
cmp
aaa
mov
mov
dec
shl
jne
fsubl
sbb
dec
sub
push
mov
or
insb
jne
push
inc
xchg
dec
sbb
outsl
cwtl
cmp
mov
lahf
jae
insl
adc
inc
idivb
and
mov
xchg
mov
scas
fnsave
inc
pop
inc
stos
fnsave
xchg
repnz
stc
dec
and
mov
roll
push
jne
dec
rcrb
addr16
pop
test
mov
movsb
push
mov
or
jl
lahf
inc
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
test
mov
jl
jmp
adc
xchg
aaa
pop
mov
orb
int
adc
test
bound
pop
xchg
cmp
in
and
jle
dec
inc
cmp
inc
adc
push
dec
sahf
in
outsl
orl
pop
sub
inc
pop
mov
sub
movsb
lahf
movsb
out
cli
pop
xchg
inc
in
mov
lea
mov
aas
add
inc
and
inc
cwtl
mov
dec
movsl
dec
inc
sub
iret
pop
or
fldcw
adc
in
stos
mov
inc
cs
or
or
pop
dec
push
test
movsl
sbb
jb,pt
add
test
adc
in
cli
push
push
pushl
sbb
popa
out
xor
enter
out
stos
sbb
mov
cmpsl
movb
inc
sbb
adc
dec
lds
lock
lock
dec
or
aaa
add
xor
cmp
ret
icebp
mov
inc
cld
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
aas
stc
movswl
jl
mov
insb
or
clc
add
adc
pop
push
dec
add
cmp
imul
pop
jmp
mov
lret
icebp
sbb
loope
xor
push
std
pop
ret
sbb
xchg
cltd
mov
movsl
inc
push
shrl
lods
or
add
outsb
dec
insl
adc
xchg
aam
pop
sub
pushf
mov
pop
lds
or
cmpl
pop
adc
test
and
leavew
mov
hlt
hlt
outsl
dec
mov
add
add
loopne
sbb
add
cmp
cmp
rcll
frstor
xor
dec
nop
mov
cmp
movsl
clc
jle
bound
mov
rcl
pop
loopne
dec
out
push
mov
and
nop
fisttps
fistpl
sbb
mov
bound
cmp
lods
dec
shll
pop
push
out
ret
mov
xchg
daa
test
gs
jl
insl
hlt
mov
pop
and
loope
dec
in
addl
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
fnstsw
jg
jl
ja
push
and
shr
adc
jns
mov
ret
gs
or
pop
push
decb
sbb
lea
push
fxch
pop
sub
imul
sbb
ret
call
push
xchg
jns
mov
les
jno
ret
xor
ds
stos
out
ljmp
jl
push
test
mov
cmp
das
mov
stc
push
inc
ds
in
inc
fildll
adc
arpl
xchg
sbb
push
daa
and
gs
fcos
xchg
lret
lds
cmp
scas
xor
in
xor
loop
aam
sbbl
sbb
sub
cli
popf
scas
xchg
fsubrs
pop
enter
mov
pushf
xchg
std
mov
xor
stos
jns
and
cmp
daa
fwait
in
jns
popf
dec
roll
ljmp
add
xor
lock
xorb
fdivs
jp
xchg
xor
mov
or
or
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
mov
jl
mov
fcompl
lahf
enter
clc
sub
daa
pushf
pusha
lahf
sub
adc
add
lods
ds
mov
pop
fcmovne
outsb
les
and
call
fcom
mov
mov
xchg
test
dec
cli
mov
je
stc
dec
xchg
mov
out
sbbb
insl
jo
imul
in
xchg
adc
gs
movsl
cltd
xor
adc
adc
aam
fildll
ss
sub
adc
adc
mov
scas
sbb
es
lret
mov
lds
adc
mov
nop
andl
out
mov
mov
hlt
inc
jae
fidivrl
imul
pusha
lret
and
stos
and
imul
aas
mov
xor
jge
or
inc
cmp
jl
cmp
pop
mov
pop
cs
ja
mov
js
je
pop
mov
lods
inc
loope
xchg
add
cmp
mov
popa
stos
js
scas
push
mov
cmp
add
mov
mov
test
je
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
fdiv
xchg
fsts
inc
jl
adc
jl
movsb
mov
add
add
ss
pop
imul
mov
movsl
ficompl
mov
xchg
popf
adc
fs
in
hlt
add
jp
loop
mov
jg
mov
pushf
jbe
dec
mov
leave
xchg
add
pop
xchg
dec
push
xchg
and
jnp
sbb
inc
xchg
cltd
cmp
xchg
jmp
bound
add
mov
sbb
jecxz
sub
xchg
and
je
sub
insl
jge
pop
test
inc
or
mov
fs
insb
or
mov
xchg
cmp
jp
sub
pop
nop
negl
mov
xchg
mov
das
lahf
jbe
test
sub
sti
rcr
imul
xor
test
and
lea
imul
mov
sbb
lods
into
test
iret
mov
mov
xor
loop
adc
fisttps
cmpsl
sub
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
adc
cltd
dec
aaa
inc
jl
adc
jl
push
cld
ss
outsl
call
leave
pushf
movsb
data16
pop
inc
js
bound
popa
pushf
dec
fwait
rcr
xor
cld
sbb
mov
idivb
outsb
mov
loopne
andl
insl
xor
jae
test
stc
push
out
stos
insb
call
pop
test
addb
ja
rclb
push
sub
jge
sti
and
mov
addl
or
xor
ja
rcl
xor
arpl
adc
and
stc
push
fidivl
jne
das
fldl
fcmove
mov
daa
inc
jo
fdiv
cmp
xchg
sbb
shrl
aad
mov
int3
ss
mov
pop
xor
lea
int
inc
cli
dec
sti
fisubrs
jb
lcall
mov
aad
pop
inc
pop
add
pop
std
jp
lods
repnz
push
data16
je
addl
aam
js
xchg
popa
into
fsubl
gs
dec
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
dec
aad
jl
adc
jl
xor
stos
jp
or
sub
xchg
jl
leave
lret
addr16
mov
rcl
sub
mov
cmc
popl
fxch
xor
sbb
jns
mov
out
or
popa
insb
lds
pop
add
xlat
fdivrl
xchg
sub
jmp
js
loope
aad
mov
outsb
lahf
rclb
gs
rcrb
into
shlb
fstpt
push
stos
mov
movsb
test
fs
xchg
xchg
insb
fwait
pop
ret
lcall
test
adc
and
stc
pushf
mov
xor
add
pushf
jp
push
je
xchg
push
aas
aad
adc
or
push
pop
xchg
cmpsb
and
mov
rdrand
xor
jo
mov
ret
aas
loope
int3
pop
ficoml
pop
repnz
push
cmp
mov
xchg
fucomp
sub
mov
mov
fwait
adc
out
icebp
shlb
add
gs
push
dec
cld
sbb
popf
add
imul
mov
xor
mov
jmp
pop
shlb
mov
cmp
jle
mov
jmp
jl
adc
jl
in
xchg
and
push
in
or
in
and
xor
inc
xor
mov
movsl
mov
inc
inc
das
and
mov
mov
shl
xor
and
push
pop
loope
lcall
mov
fldcw
jae
sub
pop
jg
jne
repz
pusha
push
pusha
adc
cmpsb
xor
out
xchg
out
pop
ja
push
or
popa
sub
pushf
clc
push
cmc
xchg
inc
or
and
mov
dec
cmp
jae
inc
xchg
stc
xor
stos
jg
lea
inc
jmp
aam
mov
bound
and
pop
outsl
fsubrl
rolb
mov
popa
inc
pop
cmc
push
pop
out
jb
and
pop
xchg
jo
int3
imul
inc
adc
sub
and
sbb
mov
or
xchg
mov
pop
push
jno
cld
imul
xchg
mov
xchg
sub
cmpl
push
jp
jge
mov
out
test
jnp
mov
lcall
test
sti
decl
add
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
imul
jl
jg
jl
mov
fwait
and
scas
std
decl
mov
sbb
stos
stos
sub
das
incb
sub
sbb
movsb
add
fsubrl
mov
mov
ret
mov
fsubl
imul
mov
test
andb
mov
or
mov
int3
mov
mov
push
mov
cltd
pop
les
jge
xor
jae
sub
cli
pop
repz
sbb
sub
stc
jne
sub
add
int3
dec
jmp
sbb
adc
push
or
push
scas
jne
movsb
jle
sbb
lret
repnz
icebp
xchg
sbb
cmp
mov
push
repnz
test
mov
rolb
ljmp
pop
loope
xor
shlb
add
stos
addr16
xchg
xor
lahf
adc
aad
push
rcrl
push
pop
xlat
mov
push
in
movsb
or
push
outsb
pop
test
push
addr16
xchg
add
call
xor
inc
cmp
je
xchg
jmp
push
fsubr
imul
enter
push
into
scas
inc
jl
adc
jl
aam
lods
addl
pop
andb
xor
lret
mov
sbb
rorb
cmp
push
sub
aad
add
in
adc
pushf
outsb
cli
mov
notl
sbb
pop
cmp
cmc
or
push
xchg
mov
popw
jb
and
idivb
sub
fadds
scas
sbb
nop
sub
jo
xchg
adc
push
add
sub
dec
mov
mov
lcall
imul
xchg
pushf
sub
lods
mov
mov
pushl
insb
push
stos
sti
xlat
sub
hlt
cwtl
cld
lret
pop
sarb
lea
xlat
xchg
pop
push
add
jge
loope
or
jmp
testl
ror
lods
dec
out
mov
bnd
clc
xchg
scas
cmp
lods
stos
cwtl
int3
sub
idivb
test
or
addr16
mov
fistpl
test
and
pop
ja
sub
inc
jbe
sbb
sbb
jg
mov
or
add
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
mov
jl
adc
jl
jp
imul
hlt
pop
into
ja
and
jb
in
mov
xor
xor
xlat
movsw
push
dec
push
addr16
aad
push
and
testl
push
pop
push
push
jno
jge
in
mov
pop
push
pushf
lret
push
adc
mov
push
or
mul
insl
test
xchg
imul
sub
enter
jbe
ljmp
pop
shlb
jp
in
mov
mov
test
dec
dec
cmpsl
inc
loop
xlat
rcrl
fimull
std
pop
imul
xchg
pop
fists
cs
xchg
int
subl
test
outsl
jno
push
jg
cltd
mov
cmp
mov
cmpsl
add
add
or
popa
add
sbb
xchg
test
fnstenv
fs
cmpsl
mov
popf
adc
xchg
out
jno
jae
pop
sahf
sahf
push
bound
lods
repnz
shl
lods
dec
int3
lods
pop
scas
lock
jg
fisubl
sbb
mov
cmp
mov
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
cmp
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
push
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
cmp
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
int
in
into
add
pop
add
add
push
icebp
fsubrl
dec
push
dec
ret
xlat
sti
in
test
movsb
pop
ja
xchg
insl
orl
cmp
dec
cs
jecxz
cmp
fidivrs
xchg
into
adc
push
pop
xchg
fimull
fdivrs
xchg
sbb
push
ffreep
stc
jo
mov
fistl
sub
fisubrl
imul
insl
pop
andb
ss
mov
cmp
cld
or
and
and
mov
jg
add
pop
sub
rcll
lahf
dec
jae
sub
aas
aam
sub
sub
ret
add
and
adc
pusha
rclb
sahf
push
sarb
mov
pop
or
mov
jecxz
jnp
icebp
pop
movsl
xor
out
gs
mov
popa
in
imul
pop
lea
loope
inc
rclb
mov
mov
mov
nop
xor
movsl
mov
push
negl
inc
xchg
rcll
xchg
ljmp
add
add
push
pusha
in
jle
mov
cmp
hlt
iret
add
pop
add
add
pop
dec
mov
and
idiv
ret
push
aas
mov
or
push
out
imul
push
dec
jo
popa
xlat
mov
sbb
mov
cmp
sub
sub
outsb
out
insl
push
int3
dec
sbb
mov
inc
stos
out
pusha
inc
pop
inc
dec
shrl
jg
orl
repnz
clc
adc
jbe
into
in
iret
call
lds
shr
pop
jns
mov
inc
ret
sar
test
adc
fs
jnp
ret
jmp
gs
adc
popf
push
dec
adc
stc
add
cwtl
xor
insl
cmp
inc
jbe
rol
cmpsb
arpl
in
lods
pop
hlt
clc
cwtl
inc
pushf
add
dec
inc
in
cli
adc
les
push
xchg
mov
dec
mov
cmp
fstps
pop
bound
leave
aaa
add
pop
notl
dec
and
pop
insl
fsubr
inc
push
daa
call
add
add
push
add
rolb
add
add
add
mov
pop
cwtl
xor
xlat
jae
mov
in
xorb
mov
fisttpll
cmp
loopne
arpl
or
sarb
xor
movsl
xchg
decb
cmp
cltd
std
rorl
mov
push
js
in
fcomp
imul
and
xbegin
inc
push
lods
aaa
sbb
mov
xchg
jecxz
cmp
and
fsubrl
fmulp
adc
sahf
inc
sbb
cld
jecxz
inc
lahf
xlat
jno
add
push
cli
jns
jno
cmpsl
ds
jno
xchg
adc
mov
add
jo
push
mov
inc
stos
cmp
std
sub
cmpsb
adc
jg
movsb
pop
in
aaa
inc
pop
xor
lea
loop
call
inc
and
das
pusha
fisubrl
push
sub
stos
rcl
shrb
in
xlat
fistl
push
pop
rcrb
mov
out
aas
inc
pop
ret
inc
add
subl
idivb
mov
add
add
pop
add
add
jge
cmp
pop
or
sub
adc
jbe
xchg
scas
mov
outsb
ret
aam
mov
jg
and
push
decl
jecxz
push
jae
pop
insb
test
mov
das
fstpl
rcl
xchg
icebp
cmp
stc
dec
sbbb
mov
dec
sbb
sbb
push
push
int3
popf
cmp
aad
cmc
popa
adc
jl
pushl
pop
sub
mov
outsb
sub
xor
lock
cmc
pop
cmp
fwait
icebp
jmp
mov
xlat
jnp
xor
or
cli
or
imul
aaa
in
cmp
test
scas
fisttpll
repnz
out
in
int3
movsb
and
fs
pop
adc
call
aam
lcall
sbb
cmp
push
mov
dec
ljmp
inc
gs
lret
inc
add
jnp
mov
loope
aaa
pop
xor
loope
sbb
add
add
inc
or
ss
pop
xchg
jns
and
roll
add
add
add
repnz
mov
mov
lret
mov
push
and
or
fistl
arpl
mov
js
and
scas
push
xor
lcall
loopne
loop
loope
cmp
mul
cmc
test
ret
lret
push
push
xor
jl
mul
adc
insb
mov
jge
inc
mov
add
sub
inc
lahf
pop
sahf
fists
stos
pushf
andb
cmp
sub
add
adc
lds
push
loop
lcall
add
inc
xchg
add
shlb
scas
add
out
dec
dec
jns
adc
add
mov
jb
aaa
loop
fs
popf
sub
lea
jg
lret
filds
in
es
ljmp
and
pop
and
movsl
imul
sub
mov
mov
lods
rcll
loop
mov
in
xor
popf
enter
xor
clc
and
jg
cmc
insl
cmc
out
lcall
mov
pop
mov
pop
add
add
lea
lret
xchg
pushf
mov
adc
scas
ljmp
mov
imul
inc
pop
push
jecxz
cmpsl
push
mov
jl
inc
mov
outsl
out
cmp
ja
aam
js
insl
pcmpgtw
sub
xchg
test
repz
adc
xchg
hlt
iret
xchg
adc
je
fcmove
iret
lcall
aam
pop
inc
scas
push
mov
insl
jbe
adc
xor
jns
push
inc
pop
xor
aaa
push
rcrl
push
outsl
push
popa
xchg
popa
mov
je
mov
pop
mov
cmp
jecxz
fwait
lds
xchg
pop
enter
pop
fcmovnb
mul
repnz
add
adc
movsb
or
stc
ror
fistpll
mov
rorl
incb
mov
mov
or
sub
mov
scas
negl
jbe
add
add
outsl
jle
aam
aam
out
cmp
mov
pop
add
add
sub
das
xchg
and
repnz
pop
mov
lds
cmpsl
mov
loop
in
jg
popf
subb
ja
cltd
lods
or
pop
lock
mov
and
dec
outsb
xor
pop
cmp
shrb
sbb
clc
xor
cld
in
sbb
test
inc
jp
mov
xchg
leave
in
xor
enter
mov
xchg
fwait
mov
sbb
mov
inc
sbb
clc
das
cmp
pop
adc
fcmovnbe
pusha
sub
pop
cmpl
lods
pushf
lret
jle
push
adc
mov
imul
xor
xchg
push
fidivl
xor
mov
dec
ss
insl
movl
adc
add
mov
fwait
xor
xlat
jmp
andb
dec
loope
scas
cld
adc
xor
lea
cwtl
xchg
mov
mov
xchg
xchg
mov
mov
add
jle
and
scas
sti
jle
sbb
push
jae
add
pop
add
add
repnz
mov
xchg
fistpll
scas
mov
aad
outsb
lret
pop
pushf
push
add
mov
mov
inc
stos
jno
lahf
xor
pop
cs
repnz
notl
push
sbb
jg
and
insb
cld
mov
cmp
stos
or
sar
push
or
int
xchg
fwait
or
cmp
lahf
jae
mov
imul
mov
das
loope
sbb
cmpsl
inc
aad
and
inc
cltd
mov
divb
jge
inc
shl
call
fidivl
repz
inc
mov
cwtl
mov
call
ljmp
xchg
sbb
clc
insb
xchg
mov
imul
mov
call
dec
sti
jp
sahf
pop
aas
outsb
fs
js
lcall
xchg
dec
add
mov
sbb
lret
push
xchg
int
dec
jae
jmp
outsl
in
xor
lahf
fnstcw
ss
lahf
stc
and
mov
test
add
pop
add
add
and
repnz
sub
pop
pop
dec
push
mov
ja
les
lea
push
sub
pop
imul
xor
and
repnz
in
and
push
in
push
int3
lock
pop
and
mov
add
xor
sar
mov
jmp
insb
movsl
xor
jns
call
mov
nop
push
add
mov
jmp
test
dec
ss
lahf
jne
rcrb
inc
stc
mov
subl
sub
in
push
jle
ret
and
popf
pop
xor
imul
incl
stc
out
sti
cmp
dec
mov
jnp
adc
sbb
ss
ficompl
sub
out
adc
imul
xchg
pop
or
xchg
jl
sbb
jle
push
loopne
divl
mov
sub
inc
jne
inc
sbb
imul
loopne
cmpsl
bound
clc
adc
xor
xor
push
jl
jle
insb
inc
xor
push
std
cs
sub
add
pop
add
add
rorl
xor
adc
pop
mov
cmpsb
outsl
sbb
jae
inc
inc
and
push
lds
mov
loopne
sbb
push
shl
inc
dec
push
push
sahf
lret
pop
sbbb
psadbw
stos
arpl
fiaddl
fidivrl
xchg
jo
pop
jnp
dec
int
xchg
test
int
icebp
in
out
cmpsl
insb
pushl
add
cld
xchg
xchg
imul
loopne
cwtl
es
cwtl
dec
aad
jo
fwait
cld
xchg
fwait
sbb
pop
sbb
push
lret
lcall
rcrl
jne
filds
addr16
jmp
aas
xor
arpl
lock
mov
inc
mov
loop
mov
adc
outsb
insb
inc
mov
ret
iret
pusha
mov
fsubrs
test
orl
push
xchg
push
das
dec
pop
dec
adc
cwtl
cmpsl
xchg
cmp
fmuls
std
inc
cmpsl
rcrb
ret
out
jg
add
fwait
mov
sbb
pop
stos
xor
add
pop
add
add
pushf
out
sub
lds
sub
aas
mov
lcall
into
sub
jl
rorb
jne
cld
pop
mov
mov
in
std
sub
or
sbb
lea
clc
out
aas
insb
ss
adc
jg
inc
or
movsl
cmpsl
cmp
imul
inc
and
push
mov
mov
xor
fmul
mov
sub
jbe
out
mov
in
stos
adc
into
pop
bswap
imul
mov
xchg
shll
outsl
dec
pop
inc
push
adc
jno
inc
roll
call
mov
lods
stos
xor
lret
push
xchg
push
add
aaa
dec
sub
movb
inc
cwtl
adc
icebp
mov
dec
popa
stos
dec
cs
cmp
jge
mov
mov
ret
call
sarb
xchg
aaa
data16
jne
mov
xchg
mov
fiaddl
add
add
add
hlt
lock
shlb
addb
xlat
jno
xchg
popf
add
add
rol
xchg
pop
cmp
test
int3
jns
cs
movsl
subb
int
jae
jecxz
stc
sub
xchg
pop
ja
inc
dec
aad
mov
lods
sahf
jmp
xor
jp
les
sbb
cmpsl
int3
ret
cltd
mov
sub
fdivrl
mov
imul
cmp
cltd
jbe
mov
or
dec
inc
icebp
sub
js
pusha
subl
sbbl
outsl
push
incl
popa
in
inc
fnstsw
aaa
xlat
mov
xchg
fwait
das
imul
inc
jmp
lret
or
cmpsb
gs
daa
testl
imul
movsb
push
imul
add
cmc
and
lock
push
scas
or
add
add
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
or
xor
fs
sti
jl
shlb
pop
xor
pop
outsl
mov
gs
cwtl
mov
xlat
les
test
xlat
je
xchg
lahf
or
adc
aam
lds
push
or
or
push
scas
dec
movsb
scas
and
jb
in
lock
push
cmc
pop
mov
and
popf
add
loopne
and
rcl
push
jle
ljmp
mov
outsl
jg
stc
xchg
lea
lret
divb
fistpl
scas
push
mov
dec
jecxz
or
cmp
and
mov
mov
jb
js
shlb
les
inc
jecxz
pop
or
daa
test
ss
stos
inc
pop
sbb
adc
test
test
fdivl
rorb
icebp
adc
and
xor
add
adc
out
xchg
pop
out
mov
push
daa
cmpsb
lahf
int
xchg
mov
add
add
pop
sarl
lods
std
mov
xor
add
pop
add
add
ja
cmp
loop
mov
test
xor
sbb
enter
inc
repnz
xchg
mov
jmp
xchg
insb
mov
aam
pop
lods
cmc
pushf
addl
daa
pop
pop
sub
adc
mov
aaa
mov
repz
mov
mov
add
in
jmp
mov
movsb
sub
and
ret
imul
jmp
aad
xchg
add
cmpsb
mov
mov
xchg
movsl
aad
pop
lock
test
push
jle
adc
push
ljmp
in
cmp
pcmpeqd
mov
inc
lds
mov
fisubrl
stc
out
push
mov
loop
adc
test
jno
jno
sbb
icebp
xchg
nop
ret
in
xor
mov
dec
mov
lret
iret
sbb
adc
sub
dec
add
aaa
sbb
in
jg
xchg
addb
add
add
repz
std
repz
pop
push
and
add
pop
add
add
sbb
aam
pop
and
fcmovne
fld
insl
fdivrs
rcrb
in
aam
setg
add
jnp
loopne
out
sbb
lahf
repnz
adc
je
jge
sub
sub
mov
pusha
stos
adc
mov
xchg
mov
lds
es
ret
test
jnp
dec
movsl
es
scas
jne
fs
int3
xor
mov
stc
jo
jae
jl
or
inc
jle
xchg
jge
lcall
int
andl
sar
xchg
scas
iret
test
mov
dec
xchg
sub
cmp
jmp
adcl
enter
jnp
xor
call
in
add
mov
clc
dec
push
out
ljmp
scas
inc
out
pop
pop
outsb
mov
jp
jbe
test
jmp
jae
jae
mov
das
push
push
popa
dec
and
add
add
lock
cmp
cmp
pop
in
stos
movsb
push
fiadds
add
add
add
xchg
mov
push
enter
mov
shr
and
pop
rcr
hlt
vphsubwd
xchg
pop
ret
mov
xchg
mov
ljmp
imul
loop
outsb
cmp
xchg
test
adc
xchg
idivl
inc
add
or
add
push
sub
test
pop
xchg
inc
pop
sbb
push
mov
outsl
leave
inc
cmpsb
adc
icebp
dec
clc
dec
cmp
sub
xor
shl
sbb
sbb
out
out
pop
dec
stos
cmp
in
xchg
ja
jb
data16
xor
shrl
repnz
nop
negb
push
mov
adc
mov
mov
mov
ret
and
or
dec
dec
into
xlat
cmpsl
dec
clc
push
sbb
inc
adc
scas
mov
lahf
aad
gs
sub
dec
in
aas
aaa
add
mov
mov
pusha
leave
xor
add
add
add
pusha
subb
outsb
mov
je
or
movsb
jb
jb
fs
xchg
rcr
notb
pop
stos
scas
and
mov
push
mov
sub
jbe
mov
js
adc
xchg
hlt
sbb
push
fimuls
pop
jbe
inc
scas
into
inc
or
jnp
sbb
scas
inc
mov
mov
addr16
int
dec
inc
out
xchg
enter
mov
es
hlt
adc
rcrb
push
hlt
popf
xlat
mov
ror
out
xor
mov
inc
flds
rcl
mov
sbb
jge
ljmp
mov
pop
movsb
mov
pop
mov
aam
mov
xchg
pop
int
push
pop
xchg
rolb
std
jge
xlat
sbb
and
sub
push
xor
cli
fwait
ret
movsl
sti
int3
popf
mov
xchg
cmpsl
pushf
sbb
out
aad
test
jl
jbe
jmp
mov
fistpl
add
add
xchg
in
mov
incl
jl
outsb
fs
add
add
add
pop
inc
push
mov
jns
insl
xor
mov
push
sub
lcall
stc
jmp
push
xor
mov
insl
cli
pop
test
loope
repz
nop
dec
addr16
dec
outsl
das
js
aam
xor
shrb
dec
pop
fidivrl
jge
and
add
mov
jno
jae
leave
mov
int
shrb
or
cmp
adc
jbe
rcrl
adc
xchg
lcall
nop
jl
cs
popf
and
rcrl
gs
lea
dec
inc
xor
mull
stos
add
add
jb
pop
imul
out
xchg
dec
ret
or
js
or
cmp
fistl
ret
add
mov
je
pop
lock
xchg
jecxz
test
test
movsl
adcl
test
loope
mov
fs
mov
filds
inc
mov
in
negl
es
int
pop
stos
hlt
imul
add
add
add
xchg
mov
filds
into
push
or
inc
addb
xor
enter
mov
jae
fistpl
or
les
mul
lock
cmp
mov
mov
out
mov
leave
jb
push
inc
shl
cld
cmc
and
jle
sub
cltd
push
test
data16
inc
sub
mov
push
sbb
mov
outsb
xchg
mov
mov
push
rclb
inc
pop
pop
jnp
fnsave
sbb
pop
xchg
jecxz
call
cmp
fists
cmc
sbb
int3
xor
out
sbb
pop
push
imul
xchg
push
dec
add
push
adc
in
mov
call
fsts
in
sbb
mov
adc
loope
out
popf
or
adc
movsl
ror
bound
xor
jg
cli
fwait
or
jmp
mov
fistpll
jge
nop
mov
jb
add
pop
add
add
lods
ja
lret
pop
sbb
xchg
xor
dec
out
cli
lret
cmp
shll
rcrl
fimuls
mov
jnp
jo
mov
push
jo
jne
xchg
xchg
add
pushf
xchg
out
gs
shrb
out
sub
test
xor
shll
pop
xor
or
sbb
lds
xor
xchg
imul
dec
xchg
dec
in
cmp
mov
adc
lods
jmp
out
or
add
negl
pusha
fsubrs
or
ss
testb
ss
fsubl
fldenv
mov
cmpsb
stos
sub
or
repnz
cmp
xchg
pop
xchg
jne
shlb
mov
dec
xorb
hlt
xor
popa
inc
add
leave
arpl
hlt
data16
imul
fsubs
jg
insb
mov
pop
ret
in
add
adc
push
jno
mov
inc
jns
add
pop
add
add
xchg
mov
xchg
icebp
cmp
sub
jbe
jo
cld
cli
lock
out
inc
jmp
sbb
std
jns
mov
and
push
das
pop
iret
jge
out
jae
and
dec
pusha
xor
jp
mov
cmpsl
and
mov
adc
jl
sub
or
in
testb
int3
iret
push
fwait
inc
mov
dec
mov
xor
jmp
or
adc
add
roll
pusha
xchg
mov
cmpsb
pop
leave
sub
fdivl
push
test
xchg
xlat
cmp
pop
add
popf
mov
mov
cmp
stos
adc
xor
mov
adc
mov
cmpsb
push
sbb
lahf
mov
mov
push
sbb
imul
in
je
mov
js
pop
xor
daa
pop
mov
push
sar
xchg
add
iret
mov
add
out
repnz
add
pop
call
mov
xchg
in
add
add
add
pop
xchg
pop
outsl
out
cwtl
enter
je
shrl
xor
mov
lret
lcall
mov
xchg
xorb
push
bound
pushf
sub
and
insl
mov
lret
cmp
ret
dec
add
push
jge
popa
test
andl
xchg
sbb
dec
jge
test
jle
jmp
sbb
push
addr16
aaa
loopne
push
setnp
mov
shl
mov
xchg
jg
xor
and
outsl
jbe
jp
lahf
add
mov
gs
int
xchg
test
stos
mull
insl
inc
orb
les
lea
dec
shrl
lock
aam
sub
inc
stos
mov
leave
dec
loop
cs
push
mov
inc
sub
mov
add
add
sub
fbld
mov
sbb
shr
push
mov
cwtl
outsb
or
pop
mov
push
decl
sbb
mov
pop
add
add
xchg
pop
mov
adc
jl
daa
sbb
fdivr
jnp
out
dec
out
sbb
cmp
fwait
arpl
pop
stos
inc
cmpsb
cmp
iret
inc
sbb
pop
mov
shll
cmp
mov
int3
pop
mov
js
mov
inc
sbb
repnz
xor
jmp
ret
sbb
xor
xor
mov
dec
dec
mov
in
mov
jns
xchg
push
pop
jbe
push
push
adc
ficomps
pop
add
cmc
iret
rol
and
jns
inc
push
add
push
mov
jl
dec
push
cmp
das
inc
icebp
int
loop
mov
mov
pop
popa
cmp
adc
add
cmp
xor
adc
in
mov
aaa
adc
sub
jns
cmp
xchg
pop
mov
add
sti
aad
xor
cmp
shl
and
push
sbb
jmp
and
cmp
sti
fsubp
jmp
fwait
xchg
test
out
add
add
add
xor
ja
inc
inc
lock
adc
sbb
das
xchg
popf
mov
mov
out
or
and
xor
jge
imul
lock
das
jmp
mov
xchg
sbb
sbb
mov
in
imul
and
pop
mov
push
pop
bound
fisubs
push
lods
push
jno
stos
sbb
shl
pop
bsr
cmpsb
je
cwtl
in
push
or
and
in
inc
sti
in
push
mov
loope
data16
lret
cld
sbb
dec
or
jae
inc
add
lea
or
rcrl
int3
scas
sub
sub
mov
fistpll
pusha
jmp
xchg
outsl
outsl
cmpsl
sbb
imul
std
icebp
cmp
cmp
inc
and
loop
cmp
lea
fs
dec
mov
dec
xor
rolb
aas
mov
inc
mov
in
mov
add
add
outsb
xor
test
jo
xchg
out
add
add
add
mov
inc
and
pop
pop
repnz
lds
insl
mov
push
or
imul
pusha
bound
dec
in
in
mov
push
pusha
sbb
lret
cwtl
push
js
repnz
lock
and
shlb
xchg
cwtl
jbe
sbb
int
mov
push
repz
push
lods
dec
inc
jmp
inc
ss
mov
cmp
jae
mov
jl
test
jmp
int3
cmp
or
ret
push
lcall
push
in
xor
bound
aad
sbb
mov
cmpsb
insl
add
mov
testb
or
sbb
scas
decl
stc
jb
adc
hlt
imul
cmp
cmp
jbe
cltd
pop
pop
jae
data16
cwtl
mov
xor
and
inc
add
ja
mov
divl
jecxz
cmp
roll
jge
and
stc
loope
jne
mov
dec
mov
sbb
jnp
repz
ror
lock
jnp
xchg
cmp
pushf
call
add
cmp
rorl
aam
xor
inc
cld
subl
lcall
ss
dec
mov
jnp
inc
das
inc
das
cmp
xchg
cld
arpl
outsb
ret
xchg
cmc
mov
push
xor
subl
xchg
mov
push
adc
dec
cmp
cmpsl
or
inc
scas
mov
testl
lds
push
pop
add
mul
or
add
and
nop
inc
test
push
cltd
scas
shlb
dec
loope
push
jne
mov
scas
cltd
movsb
stos
push
xchg
add
inc
cltd
or
add
js
stos
mov
pop
imul
pop
pusha
das
out
push
lea
mov
test
xchg
add
pop
andl
push
mov
dec
sbb
into
cmp
out
in
xchg
ret
dec
sarb
mov
push
cmp
sub
add
repz
fisubrs
jno
or
add
pop
add
add
mov
mov
mov
nop
leave
xchg
inc
popf
jo
adc
jle
ds
orl
mov
rolb
add
xchg
pusha
xchg
mov
xchg
inc
xchg
mov
inc
inc
adc
mov
pusha
sbb
scas
fsubs
je
add
int
sarl
inc
pop
imul
sub
pop
insb
push
fdivrs
or
dec
negl
lcall
ja
cmp
push
js
cwtl
std
lret
jmp
out
jmp
rorl
sbb
sahf
add
popf
lods
out
rcr
icebp
sbb
add
sub
cltd
mov
outsb
sbb
fldl
loopne
or
cmp
and
push
loopne
outsb
add
sbb
scas
cmpsb
mov
aad
and
dec
loopne
pop
mov
dec
mov
js
and
xor
pusha
aad
mov
sarb
add
out
mov
mov
pusha
stos
repnz
add
add
sub
xchg
out
mov
jno
or
aas
inc
in
xchg
popa
push
push
mov
fcomi
fdivl
push
inc
adc
cmp
mov
inc
addl
inc
xchg
cmp
jae
mulb
or
inc
push
shl
pop
xor
lahf
or
in
xlat
push
pop
shlb
icebp
popf
pusha
and
and
orl
hlt
push
ljmp
mov
ror
pop
xor
mov
mov
or
xchg
pop
add
cmp
cmp
test
mov
stos
scas
insb
out
sti
push
jecxz
inc
inc
inc
pop
lods
rcrb
stc
cmc
lcall
rclb
fbld
push
enter
inc
cmpsb
pop
or
adc
test
daa
add
inc
xchg
sbb
pop
pop
cmp
or
aam
add
dec
add
scas
push
repz
cmc
scas
cwtl
sub
repnz
add
pop
add
add
sub
xor
bound
mov
mov
imul
stos
stos
inc
shll
aam
out
cltd
sub
adc
xchg
aam
sub
mov
lcall
in
xchg
cwtl
test
push
shr
movsl
sub
ss
xchg
dec
xor
jae
adc
cld
adc
jl
stc
andl
jmp
dec
stc
mov
pop
popf
loopne
xchg
sub
test
jmp
inc
xchg
outsl
int3
cmc
aad
push
xor
sbbb
test
aam
aad
pusha
ljmp
mov
xor
loop
pop
cmp
or
mov
std
adc
or
rclb
fnstsw
addr16
cli
xor
sbb
sahf
sub
push
jl
sahf
int3
xlat
outsb
mov
xor
push
fsqrt
sbb
ds
aad
xchg
std
cmp
xchg
inc
add
dec
mov
test
mov
add
pusha
rorb
enter
inc
cmovp
pop
add
add
loopne
in
xlat
mov
out
scas
mov
pop
adc
stos
inc
scas
jae
sbb
aas
test
stc
test
add
pusha
adc
in
sbb
in
out
roll
fnstcw
sbb
cmpsb
mov
sub
int3
adc
cmp
pop
popl
add
icebp
mov
jmp
popa
or
mov
pop
mov
jno
clc
xchg
pop
or
loopne
aam
dec
xorb
jmp
xor
std
orb
outsb
xchg
mov
sbb
push
jge
leave
dec
mov
adc
and
mov
outsl
mov
jl
mulb
xchg
mov
outsl
xor
jecxz
mov
fstpl
imulb
xchg
inc
inc
or
iret
imul
lods
sub
jl
add
insl
call
gs
scas
popf
push
imul
clc
aam
jecxz
push
testl
pop
pop
sbb
in
add
pop
add
add
ljmp
xchg
mov
out
and
cli
cmp
cld
test
pop
hlt
int
jg
pop
enter
sarl
je
pop
lahf
cmp
fs
mov
call
inc
push
into
mov
inc
sbb
mov
dec
xor
mov
movsl
testl
lods
sub
scas
call
mov
dec
mov
insb
and
stc
in
push
pop
loope
cmpsl
and
fsubr
int
scas
stc
rolb
mov
jecxz
int
xchg
mov
push
outsl
pushl
lods
ja
pop
cld
je
call
stos
jbe
push
loop
pop
iret
fistpll
sbb
cmpsb
xchg
push
xchg
cmp
js
adc
mov
inc
sbb
call
aas
xlat
mov
pop
imull
mov
lret
bt
jp
mov
lds
outsl
cmpsl
faddl
jle
out
adc
add
add
xchg
mov
or
cmp
pop
add
add
push
xchg
lds
pop
pop
cld
call
imul
jl
cltd
sub
arpl
lods
push
ja
fistpl
stos
jg
push
cmp
cwtl
mov
fwait
mov
sarb
cmpsl
stos
push
cmp
lea
or
dec
in
aaa
add
clc
mov
pop
outsb
test
xchg
mov
adc
arpl
add
nop
jge
aaa
inc
inc
nop
test
pop
or
pushl
xor
adc
lcall
push
push
add
cli
ds
push
fbld
adc
xor
mov
data16
outsb
sbb
sbb
mov
mov
mov
pop
xor
repnz
dec
mov
faddl
dec
sbb
jae
daa
in
mov
sahf
inc
imul
mov
push
lea
cmp
scas
push
xchg
mov
inc
repnz
sbb
addr16
push
insl
jne
lret
ficoml
cli
mov
xchg
test
mov
fstpl
int
add
pop
add
add
movsb
rclb
sbb
and
insl
daa
mov
xchg
jb
mov
mov
ljmp
inc
aas
aas
xor
lret
inc
sbb
popa
adc
call
pushf
leave
jp
hlt
push
shll
bsr
pop
cmpsb
ds
dec
ss
cmpsl
test
in
and
in
ret
push
push
push
and
dec
test
sub
cmp
xor
roll
sub
pusha
cmpsb
inc
sub
xor
or
mov
dec
inc
testl
repnz
xor
add
mov
mov
shr
dec
xor
pop
mov
add
cmc
fcos
aam
lret
int
pusha
rcrl
loop
dec
je
loope
sub
sbb
sub
ficompl
repnz
int
rolb
push
insl
pop
add
ficomps
shl
data16
js
lods
push
out
cmovbe
dec
shlb
xor
je
inc
xchg
jbe
push
inc
pop
jns
aas
lods
fmull
xchg
inc
stc
aam
add
pop
add
add
cld
xchg
sarl
pop
lea
mov
lds
insb
enter
push
movsl
pop
fdiv
inc
or
scas
jo
adc
ss
inc
into
ja
or
and
push
aad
or
cmc
out
push
sub
push
push
xorb
hlt
cmp
in
adc
aam
dec
not
dec
pop
mov
shr
fdivrs
imul
insl
arpl
scas
cli
in
sub
sbb
fisttps
dec
shlb
jmp
mov
int3
inc
push
sarl
rcll
mov
xchg
faddl
jbe
setne
and
out
push
arpl
dec
cmc
jnp
inc
cmp
mov
jmp
dec
xsha256
cmpsb
xchg
pop
cmpsb
jnp
arpl
mov
ja
xchg
push
std
divl
mov
lret
loopne
int3
sahf
adc
movsl
ret
lods
cmp
pop
rcrb
lods
mov
add
cmpsb
sbb
jnp
mov
cmp
icebp
add
pop
add
add
xchg
rcll
ror
jne
xchg
lods
loope
sbb
les
add
dec
rcll
call
add
xor
adc
fcmovu
or
xor
add
lea
or
inc
dec
xchg
addl
push
jns
pushf
mov
mov
inc
pushf
push
lahf
sbb
in
loopne
xchg
and
sti
dec
outsb
ficoms
mov
add
dec
mov
mov
fstl
je
scas
cmp
xor
sbb
jge
nop
sbb
xchg
xchg
sub
scas
fdivs
dec
es
or
es
jle
dec
cmp
xchg
mov
stos
in
xlat
lea
mov
sub
mov
adc
and
adc
jno
das
push
fcmovnbe
and
sub
sahf
mov
adc
fisubrs
repz
dec
sbb
adc
jle
repnz
add
xlat
pop
xlat
jg
mov
pop
pop
adc
loop
add
pop
add
add
inc
push
sub
subl
cmp
pushf
mov
jnp
push
add
mov
nop
mov
mov
dec
movsl
mov
or
stos
xchg
aaa
push
push
fnstenv
adc
mov
out
hlt
cld
xchg
mov
adc
mov
loope
jl
into
xchg
bound
cwtl
scas
lea
pop
and
repnz
js
les
test
jmp
xlat
shll
or
xchg
add
les
adc
mov
mov
pop
mov
aas
gs
insl
inc
lods
mov
xor
mov
ja
jo
push
push
aad
xchg
mov
adc
push
ja
mov
jae
push
std
mov
sti
mov
jnp
imul
pop
pop
inc
inc
stos
or
pusha
fwait
mov
out
cmp
ficoms
and
icebp
ja
jns
nop
ret
bound
ja
jg
push
push
hlt
insl
mov
pushf
push
add
fdiv
mov
movsb
out
or
jmp
add
add
xchg
mov
mov
xorl
pop
sbb
out
rcrl
xchg
xor
pushf
cmc
stc
xchg
xchg
cmp
les
gs
dec
into
adc
daa
aas
and
adc
fldcw
stos
xchg
jecxz
cmpsl
sarb
sbb
es
push
inc
insl
aam
sub
mov
mov
mov
setnp
inc
iret
test
xchg
mov
scas
xchg
jbe
cmp
ljmp
mov
ss
adc
ret
pop
in
push
mov
aam
adc
outsl
pop
push
nop
adc
dec
hlt
dec
test
push
pushl
push
sub
sub
push
push
mov
test
out
cli
les
iret
mov
mov
xor
or
add
pop
sub
dec
jae
dec
rorb
sahf
push
fdivl
dec
jmp
mov
test
mov
fmul
daa
fcompl
hlt
add
pop
add
add
outsb
cmpsl
and
and
sbb
pop
mov
xor
mov
into
bound
inc
and
divl
addr16
xor
pop
push
scas
mov
dec
pop
cmp
int3
pop
repz
shll
loope
mov
lcall
and
pusha
test
mov
mov
xor
dec
movsl
mov
cmp
push
pop
ret
aad
nop
or
stos
jno
sbb
or
loopne
inc
mov
cmp
aad
daa
or
repz
xchg
cli
icebp
or
out
fdivl
icebp
jle
mov
sub
mov
orb
mov
and
fwait
inc
outsl
movsb
add
inc
adc
or
mov
movsb
mov
aad
push
adc
jge
mov
push
rolb
dec
aam
jns
mov
inc
stc
adc
scas
inc
push
fucom
mov
sub
pop
and
add
push
pop
push
jmp
sbb
ret
or
cmc
add
pop
add
add
mov
es
mov
gs
repnz
scas
push
lds
test
xchg
mov
js
fnsave
push
imulb
sub
sub
aad
mov
es
mov
dec
cli
cs
mov
xor
lahf
add
xor
fidivrs
scas
push
int3
add
mov
xchg
mov
je
add
out
leave
je
movsl
mov
ret
sbb
xor
outsb
add
into
lds
fs
cmp
push
mov
inc
or
loop
mov
ret
mov
aas
cmp
xorl
in
js
xlat
jbe
movsl
daa
and
mov
js
iret
pop
xorb
mov
mov
adc
push
and
repnz
enter
es
mov
sbb
test
add
lcall
inc
out
dec
jb
sbb
pop
inc
pop
lods
pop
cli
cmc
mov
adc
mov
pop
add
add
add
push
mov
xor
jnp
or
rcll
push
cmpsb
xchg
xchg
cmp
leave
sub
sbb
lods
mov
mov
jnp
fimuls
out
jg
pushf
dec
lods
jo
and
cmc
ljmp
imull
fldl
mov
pusha
ljmp
sub
popf
je
repnz
inc
adc
mov
add
inc
mov
incl
test
fnsave
pop
dec
cwtl
jnp
adc
xor
dec
sub
xchg
push
xor
mov
in
xchg
xchg
dec
cmpsb
adc
lock
js
mov
inc
push
cmp
mov
stos
mov
and
cmpsl
loop
into
sbb
and
inc
mov
mov
mov
mov
enter
xor
cltd
inc
test
xchg
xlat
jae
ljmp
das
stos
cltd
inc
popf
jae
out
pop
dec
add
in
int
add
add
add
sbb
in
into
arpl
dec
mov
lods
loopne
jns
rorl
cmc
addr16
jp
loop
sti
sub
rolb
popa
push
out
push
es
sbb
inc
scas
ljmp
pop
stos
outsl
stos
cmc
sbb
shrb
fs
and
fmull
imul
adc
jb
jle
jns
test
cmc
add
orb
add
inc
sub
and
pop
das
inc
sub
pusha
in
pop
es
jle
and
out
cmc
aas
outsb
sahf
xor
mov
xchg
inc
pop
pushf
ds
sahf
cmp
mov
pop
sbb
inc
cmp
push
lock
jle
int3
push
lcall
mov
mov
xchg
ret
pop
cwtl
pop
dec
in
add
ds
or
stc
movsb
push
imul
jno
jge
jb
std
mov
or
cmp
es
aaa
and
cmpsl
stc
out
mov
add
aam
int
mov
mov
or
das
or
add
pop
add
add
popf
ljmp
add
lock
cmpl
add
in
and
lahf
mov
or
lret
lret
mov
sbb
sahf
cmp
dec
sti
scas
jne
cmp
mov
xor
or
aad
sub
or
shrb
inc
inc
inc
jmp
stos
out
xchg
mov
lcall
inc
loope
mov
jbe
push
jb,pn
mov
sub
lock
iret
or
les
pop
cmpb
je
and
orl
repnz
jns
lods
and
pop
xchg
sbb
call
push
inc
xlat
jp
jge
lea
pop
push
lea
lods
or
ret
inc
leave
out
inc
jns
mov
inc
rolb
cmc
outsb
push
sbb
dec
jbe
stos
mov
nop
xchg
fstps
and
shl
adc
jg
inc
push
jge
pop
or
dec
add
arpl
addr16
add
mov
mov
add
pop
add
add
sbb
test
aam
jg
aaa
jg
inc
scas
nop
jae
test
aad
xorl
mov
mov
subl
movsl
jo
mov
jo
xlat
sbb
inc
jnp
add
insl
lret
cli
pop
cmp
cmpl
add
fnstcw
ljmp
sub
fnsave
int
adc
xchg
jne
orb
jp
inc
sbb
lcall
shlb
je
mov
and
xchg
pop
std
jb
jne
push
sbb
jecxz
cmp
js
jecxz
push
clc
aad
push
pop
aad
ljmp
mov
push
xchg
aad
aad
or
adc
mov
mov
dec
mov
lods
test
mov
pusha
leave
dec
adc
jae
mov
stos
aad
lcall
sahf
out
cmp
in
sarb
xor
test
add
out
out
pushl
ja
notb
mov
sbb
add
pop
add
add
or
ficoml
and
sub
mov
inc
pop
dec
add
cmpsb
mov
pop
ds
cmp
gs
xchg
adc
cs
loopne
dec
fildll
sbb
int
mov
mov
mov
pop
lods
xchg
hlt
pop
mov
pushf
pop
xor
inc
pop
jle
jmp
mov
jl
in
xchg
push
in
es
lea
inc
pop
es
rcrl
mov
daa
sub
cwtl
or
ljmp
scas
sub
inc
lock
push
sub
jp
ljmp
adc
dec
fisubs
mov
nop
jle
jns
pop
and
pop
pushf
or
xchg
nop
movb
sbb
mov
icebp
negl
sbb
mov
loop
mov
lcall
inc
pushf
fsubrs
mov
sub
lock
or
push
cs
movsb
je
scas
insb
adc
stos
outsb
lret
sarl
pop
add
push
scas
decb
xchg
sub
cld
add
pop
add
add
add
ret
sub
je
fistl
push
scas
inc
aaa
pop
inc
mov
sub
adc
ljmp
mov
ret
sarl
push
sbb
jl
jns
popa
fnstenv
adc
clc
ljmp
loopne
and
cmp
jns
add
in
hlt
dec
fs
pop
loopne
shr
pop
lret
les
push
enter
ds
ljmp
clc
repz
js
xchg
adc
adc
cmp
stos
add
jns
adc
xchg
lret
fidivs
add
xchg
outsl
mov
xchg
xchg
dec
cltd
imul
ret
xor
das
cmp
mov
xor
push
and
add
je
or
clc
pop
dec
out
and
add
iret
repz
iret
jmp
fcompl
push
xchg
subl
add
add
xchg
and
movsl
mov
mov
mov
xchg
ja
aam
std
add
pop
add
add
adc
jae
out
std
or
cwtl
add
fucomi
xor
sub
insl
je
mov
ror
push
shll
popa
jp
dec
ja
mov
jno
rclb
or
ss
popf
add
outsl
sub
scas
lock
jge
xlat
push
test
ret
jmp
push
fxch
mov
fucomp
dec
popa
mov
test
std
test
out
dec
push
addr16
dec
ja
and
xor
add
iret
jb
call
mov
cmc
push
xchg
and
fstps
mov
das
mov
int
mull
pop
jmp
aaa
pop
adc
std
repnz
sbb
scas
mov
mov
iretw
imul
lcall
pusha
sub
std
jnp
cli
or
mov
mov
push
dec
pop
out
imul
fsubrp
ds
xor
ret
lret
leave
mov
add
add
mov
push
jg
mov
rorl
jns
incb
add
add
add
jl
pop
xor
call
aam
aas
ret
inc
sti
addr16
jno
loopne
inc
int
add
fisttpll
add
lret
cltd
cmp
mov
lahf
fidivrs
add
push
into
fadd
add
cmc
lcall
ljmp
jb
ja
leave
nop
mov
mov
divl
das
jb
cs
lds
add
aam
mov
inc
sub
xchg
mov
outsl
movsl
push
push
pop
inc
sbb
jge
pop
leave
jecxz
out
outsb
mov
pop
sti
jno
sbb
push
cmp
pop
cmp
mov
leave
shlb
dec
cmp
push
inc
fnstenv
xchg
mov
arpl
fst
add
clc
loope
cwtl
out
leave
pop
movsb
test
or
bound
ljmp
shrb
repnz
xchg
in
into
jmp
push
inc
xchg
pop
push
outsb
movsl
jnp
jecxz
xchg
insl
les
add
mov
mov
xchg
mov
incl
add
add
add
jo
sbb
sub
data16
dec
xchg
dec
mov
push
jmp
ss
cli
outsb
xlat
aas
cmp
push
mov
ficomps
mov
out
sub
pop
jle
cmp
push
jnp
mov
jae
testl
insb
xchg
cmp
test
cld
mulb
clc
dec
imul
lock
mov
jg
mov
pop
mov
xor
cs
push
shl
repnz
sbb
fistl
lock
jnp
push
popa
adc
stos
or
insb
leave
sub
les
ror
xor
pop
imul
or
add
sti
in
sahf
pop
test
pop
mov
dec
enter
push
cmp
mov
scas
ret
sbb
add
mov
mov
dec
dec
ret
jmp
leave
adc
pop
add
mov
adc
in
sbb
shll
dec
fcom
add
loope
int3
rcrl
add
add
mov
xor
cmp
add
add
dec
pusha
jl
push
shlb
lahf
sbb
test
gs
lcall
mov
js
popa
adc
setp
outsb
call
dec
xchg
push
jmp
adc
out
push
das
idiv
dec
add
xchg
mov
nop
and
mov
xor
testl
aaa
cld
xor
cs
shll
insl
inc
push
fsubr
push
sbb
and
cwtl
push
loop
jnp
inc
sub
lahf
sub
cmp
pusha
loope
mov
dec
lods
aam
pop
lcall
loop
sub
sbb
adc
sub
icebp
in
xchg
pop
test
jge
loop
es
lds
stos
sbb
push
or
repnz
xor
xchg
jb
sub
in
cmp
add
sbb
cmp
sub
outsb
cld
stos
xchg
push
mov
leave
ljmp
add
or
call
add
hlt
fisttps
test
mov
add
add
add
fmull
dec
js
ss
push
stos
mov
cld
jbe
xor
dec
shlb
in
mov
aas
sbb
push
jle
adc
je
push
adc
subl
pop
loop
sahf
sub
inc
mov
adc
sahf
stc
dec
mov
pop
scas
sbb
sbb
pop
add
ror
movsl
inc
inc
lods
bound
dec
call
stos
mov
adc
fsubrl
mov
out
xchg
cld
movsb
std
aaa
push
cmc
jnp
or
cmp
mov
mov
dec
ja
inc
sub
sub
adc
call
xor
mov
mov
xor
sub
pop
mov
movsl
jle
push
or
lods
cmpsb
int
push
pop
data16
je
cmp
pop
push
pop
mov
cmp
in
jo
mov
xchg
xor
das
push
inc
notl
mov
fistl
and
addb
add
add
into
fwait
cmc
pop
sub
dec
add
add
add
add
ds
arpl
jle
cmpb
jno
insb
arpl
cmpsb
dec
das
insb
fbld
mov
and
fcmovnbe
inc
aaa
rcrl
and
iret
test
cltd
imul
enter
xchg
scas
mov
xchg
imul
cmpsl
sub
outsl
cld
sbb
sbb
cmp
lods
scas
push
fldl
mov
mov
inc
hlt
inc
sbb
push
mov
jecxz
mov
nop
and
movsb
vaddpd
inc
test
or
xor
rorl
popa
cmp
jns
ficomps
loope
sti
das
add
adc
fwait
mov
in
rcrb
jb
inc
xor
shlb
aas
adc
in
jae
sub
push
out
outsl
pop
out
arpl
adc
jnp
mov
loop
push
testl
pop
dec
js
nop
shlb
shrb
jl
test
out
mov
pop
mov
adc
add
add
add
xor
cs
add
sbb
fbstp
cmp
xchg
in
test
push
sub
subb
inc
subl
adc
movsl
cs
pop
or
inc
bound
adc
push
sbb
or
push
int
mov
inc
mov
pop
subb
add
adc
push
lea
pusha
stc
add
cltd
pusha
mov
inc
das
push
and
les
xchg
mov
call
dec
fidivl
inc
popf
js
in
and
jmp
mov
push
push
jo
fwait
mov
inc
inc
test
cwtl
adc
cmp
mov
xchg
hlt
jae
mov
gs
push
and
add
sub
xchg
mov
jmp
fwait
push
jp
lret
and
jl
popf
stos
pop
dec
call
dec
xchg
mov
add
add
inc
out
aas
mov
scas
adc
add
add
add
add
pop
lcall
sbb
jo
int3
imulb
clc
jmp
or
jo
insb
jbe
mov
push
lahf
out
out
lods
cmp
rcr
loope
cmp
scas
iret
sbb
shr
cmp
movsb
or
and
dec
frstor
leave
or
jmp
fstpt
shrb
insl
stc
pop
test
xchg
repnz
cmp
and
gs
sub
xchg
out
lods
jecxz
shlb
enter
cmpsl
decl
push
push
loopne
adc
js
add
mov
insl
mov
ds
push
pop
out
xor
push
mov
pop
cmc
rcrb
mov
das
lods
inc
cmpsl
sbb
bound
mov
pop
dec
bound
mov
pop
fwait
adcb
sbb
and
gs
pop
lret
dec
loop
fs
test
xchg
hlt
popa
enter
add
push
bnd
jl
movsb
mov
pusha
add
add
pop
ret
inc
adc
mov
cmpsb
lock
add
test
pop
pop
popa
cltd
call
popa
cltd
cwtl
testl
jg
mov
pusha
mov
mov
nop
dec
pop
repnz
stos
and
xchg
dec
fs
fxch
in
int
arpl
addr16
in
pop
cmp
sar
jnp
test
inc
mov
dec
lods
mov
mov
add
js
ficoml
leave
in
rolb
aaa
pop
cld
out
int
add
mov
mov
xor
fiaddl
dec
out
sub
lret
fwait
mov
lock
call
aaa
dec
sub
xchg
outsl
push
jae
insl
push
xchg
mov
cmp
sub
arpl
mov
sarb
aad
adcl
dec
dec
mov
add
adc
pop
xchg
jae
pop
push
inc
lds
jl
push
jmp
xlat
adc
sbb
ret
decl
pop
mov
cmp
into
out
fistl
mov
add
in
out
ja
fists
fadd
add
pop
add
add
push
aam
push
sbb
xchg
jne
outsb
mov
push
outsb
push
push
cmp
inc
sub
mov
out
push
aas
dec
jg
push
cmp
pusha
mov
popf
mov
jb
mov
ljmp
or
mov
push
popa
dec
repz
push
call
call
leave
inc
add
inc
pop
jge
cmp
movsl
xor
ret
dec
out
ret
add
xchg
inc
mov
rcrl
sub
in
pop
mov
mov
lods
sbb
xchg
or
mov
xchg
in
testb
xor
imul
into
sbb
call
repnz
adc
pop
push
xchg
jle
add
adc
xchg
sarb
mov
mov
and
sub
cmc
jo
xchg
movsl
outsb
mov
jge
out
insb
xchg
call
jge
repnz
fimull
add
pop
in
daa
jle
add
pushf
aam
outsb
pop
add
pop
add
add
inc
shll
mov
stos
pushf
sub
lock
mov
cmp
imul
inc
and
xchg
inc
es
cmpsb
lcall
jp
bound
inc
adc
movsb
xchg
dec
aad
push
and
or
fwait
cmc
loop
xor
xchg
inc
xor
clc
mov
push
inc
jp
push
adc
inc
ljmp
lret
and
je
sbb
inc
xchg
lcall
std
lods
lds
enter
add
ljmp
mov
shlb
push
adc
mov
jge
mov
xor
in
mov
dec
or
jmp
inc
mov
fstpl
xchg
mov
adc
lea
dec
mov
pop
addr16
shlb
les
in
push
cld
push
mov
clc
in
jp
sahf
mov
and
subl
popa
iret
add
outsl
outsl
cmp
sub
xor
add
jg
idivl
mov
pushf
jne
add
pop
add
add
jno
imul
jge
mov
push
xchg
adcl
or
dec
arpl
and
fnstsw
push
xchg
xchg
add
repz
inc
jp
and
cli
xlat
cmp
out
mov
outsb
and
cmpsb
clc
inc
mov
lods
shll
sub
mov
ret
adc
push
jmp
in
stos
xor
xchg
or
sbbl
or
fucom
cld
mov
out
pop
cmc
js
mov
dec
out
pop
fs
cmc
pop
repnz
insl
into
pop
cmc
ds
data16
rcll
mov
popf
adc
cmpsl
mov
or
lods
aaa
js
adc
mov
mov
pop
insl
jmp
leave
in
xor
movsb
cmpl
testl
mov
sbb
xor
mov
add
lods
adc
lret
mov
xor
sar
rcll
mov
sub
hlt
leave
add
add
add
sti
jg
les
push
jl
add
pop
add
add
or
gs
cmc
inc
or
aam
xlat
xor
pop
std
enter
adc
xlat
or
rcrb
fs
xchg
adc
ljmp
stos
std
jo
test
push
pusha
and
lea
adc
inc
dec
xchg
dec
pop
jmp
loop
mov
mov
aaa
sbb
xlat
push
dec
lcall
sahf
add
hlt
and
dec
filds
in
dec
sub
and
pop
mov
shlb
add
lea
or
pop
loope
pop
ret
aad
and
sbb
mov
shll
jp
adc
movsl
out
jge
lahf
xor
out
cs
ror
mov
aaa
push
jle
in
mov
test
sbb
push
mov
test
mov
pop
push
insb
inc
adcl
test
dec
or
mov
add
scas
aam
jnp
fnsave
xchg
testb
imul
mov
adc
jmp
pop
inc
dec
bound
call
add
in
push
adc
gs
daa
push
lds
sub
xor
jle
sbb
push
in
mov
ror
cmp
push
xchg
adc
pop
loopne
dec
jle
sub
aaa
ret
adc
xchg
dec
out
jmp
push
push
loopne
cmp
loop
xlat
js
idivl
ds
daa
add
rcl
add
dec
das
cmp
outsb
daa
inc
inc
out
mov
cmc
mov
mov
push
insl
stos
mov
push
and
push
ror
sbb
or
int3
push
xchg
or
enter
sbb
fldt
int3
fisubrs
sub
mov
mov
outsl
andl
xor
aam
pop
mov
adc
js
inc
call
insb
fcoms
ja
int3
jp
fadds
mov
jno
std
outsl
mov
inc
loop
dec
nop
xor
data16
add
pop
add
add
sub
or
add
imul
mov
mov
cmp
cld
mov
dec
ja
ja
movl
cmp
into
andl
arpl
jno
leave
iret
sbb
in
cltd
cld
mov
jmp
dec
das
inc
sbb
movsb
lods
dec
fldl
out
cmc
mov
call
insl
cli
sub
lret
leave
xor
adc
cli
push
ror
add
movsb
push
popf
arpl
cmp
ds
push
or
mov
pop
or
iret
push
fldcw
mov
xor
add
xchg
adc
es
outsb
push
popf
jo
mov
adc
aad
mov
shrb
fsubrs
and
loop
mov
test
lret
aaa
xor
or
xchg
cltd
addr16
mov
push
mov
mov
mov
fs
mov
mov
push
add
add
jmp
ficompl
shrl
leave
xchg
or
add
add
add
fsubrl
pop
popl
dec
jp
xchg
mov
or
push
cmp
cmp
push
out
mov
cwtl
movsl
dec
jae
cli
xchg
push
lcall
mov
xchg
inc
cmp
std
dec
push
dec
cltd
loop
dec
es
dec
loopne
les
sbb
mov
lea
adc
sub
outsl
repz
fildl
add
mov
pop
stos
nop
loop
xchg
aam
ficompl
in
aas
inc
mov
iret
loopne
lret
repnz
xor
stos
inc
jle
roll
daa
subb
mov
lds
sbb
test
in
push
jle
cmpsl
lahf
xor
inc
xor
int3
push
test
scas
lcall
rcr
sbbb
push
dec
cld
xchg
xchg
xchg
test
pusha
mov
call
pop
jmp
sub
outsl
inc
scas
fs
inc
add
xor
negl
mov
cwtl
or
add
sbb
iret
inc
call
fldt
int3
xor
jo
inc
aam
adc
jo
xor
jge
cmp
lea
stc
pop
adc
stc
cmp
xchg
es
loope
mov
pop
cmc
fdivs
dec
adc
mov
addr16
cmp
ljmp
jne
fsub
add
aad
popf
pop
inc
loopne
cs
sbb
mov
sbb
std
dec
xchg
pop
mov
add
dec
sub
add
mov
cmc
sbb
sbb
or
iret
jae
xchg
xor
addb
xchg
test
mov
push
fdivs
push
sbb
insl
mov
sbb
stos
lret
jbe
cltd
out
mov
imul
sarb
outsb
and
mov
inc
fldln2
insl
push
xchg
xchg
jmp
inc
and
and
mov
cmpb
push
mov
dec
push
add
cli
inc
jg
int
cs
cwtl
insb
mov
add
add
add
ljmp
mov
fistpl
dec
lretw
pop
dec
ror
ljmp
fcomi
pop
mov
adc
cmp
popf
jg
ficompl
arpl
push
mov
ret
fcmovbe
pop
bnd
pop
loope
and
sub
jl
dec
addr16
inc
mov
cwtl
into
in
inc
lcall
scas
jge
dec
cld
mov
test
sbb
orb
adc
sub
and
xchg
mov
adc
les
or
or
lahf
bound
xchg
add
or
adc
mov
scas
push
shlb
adc
inc
icebp
adc
inc
jle
cs
pop
add
push
jbe,pn
popf
or
jbe
ja
push
lods
test
cmp
mov
lods
push
popa
push
mov
mov
xor
nop
add
push
in
cmpsb
bound
sub
adc
sbb
lock
std
cmp
jle
fistps
push
xor
sgdtl
pop
add
add
mov
cli
jne
dec
test
adc
inc
sub
mov
imul
aad
idivb
xchg
lods
inc
push
lcall
push
mov
xor
enter
xchg
popa
cli
cld
shll
jmp
jae
adc
cli
add
loop
xchg
dec
fwait
daa
mov
mov
or
jb
pop
cli
rclb
mov
aad
sahf
repz
cli
outsl
ret
cld
jl
cmp
les
and
imul
insb
push
dec
cmp
cmp
lret
inc
ret
adc
push
inc
xor
mov
dec
pop
mov
test
mov
mov
lret
jl
push
dec
int
pop
jle
pop
mulb
push
jo
push
push
outsb
pop
xchg
lret
icebp
or
mov
or
mov
enter
into
rcrb
mov
loope
sub
inc
lret
ljmp
mov
add
xchg
pop
lds
xlat
fimull
push
mov
add
add
add
jl
push
mov
mov
pop
aad
lds
mov
jmp
imul
push
dec
push
movsl
divl
add
push
ret
pavgw
shrl
movsl
pop
stos
and
stc
mov
push
lret
pop
cmpsl
fwait
lods
jae
sahf
das
mov
mov
inc
lahf
and
mov
cmc
in
xor
pushl
jmp
or
xor
sub
inc
test
and
sbb
cmp
mov
cmc
sbb
xchg
cmpsb
cmp
or
mov
xchg
cmpsb
jmp
mov
push
clc
js
mov
jns
inc
inc
push
leave
sub
pop
dec
rolb
adc
int3
aas
clc
imul
sqrtps
or
mov
cmp
jo
push
arpl
sbb
pop
daa
scas
add
aad
pop
aad
cmp
rol
inc
nop
insb
cwtl
pop
out
movl
dec
jmp
dec
scas
iret
outsb
jmp
in
pop
outsl
fadd
xchg
mov
pop
add
add
push
hlt
inc
adc
push
and
in
mov
xchg
lods
mov
out
cmpsl
sub
dec
movsb
arpl
lea
hlt
pop
pop
mov
lods
int
or
sbb
sub
mov
push
sub
adc
cs
jp
rcr
cli
add
fiadds
ret
int3
xchg
xor
mov
out
dec
cmp
sbb
adc
mov
adc
cmpsl
test
out
push
lret
lret
popf
mov
popa
aaa
jp
imul
fs
adc
cmp
out
push
inc
movsl
xorb
clc
ljmp
ja
daa
push
jb
add
and
sbb
repz
cltd
adc
mov
fyl2xp1
out
dec
jge
data16
and
movsb
xlat
sub
cmc
rolb
fisubs
pop
sbb
repz
orl
and
cmc
aam
add
std
sbb
stc
cld
or
data16
mov
pop
add
add
ficoml
xchg
mov
cltd
bound
rcl
jecxz
cmp
out
jb
insl
xchg
fdivl
sbb
push
nop
mov
cmp
mov
jb
jno
cltd
outsb
mov
xlat
jge
aam
out
leave
jecxz
jns
jnp
shll
test
fildl
cmp
repz
adc
push
pop
addr16
jl
sbb
push
mov
push
rorb
cli
sub
fadds
adc
and
mov
roll
mov
rcrl
or
jg
xchg
iret
lret
sar
out
mov
fnstenv
adc
fistps
cli
mov
stc
jp
cmp
adc
divb
es
je
stos
lods
lock
jecxz
xor
jae
add
pop
test
ret
test
roll
adc
cmp
add
out
cmp
les
into
fwait
sbb
dec
mov
cmc
arpl
xchg
es
addb
add
add
pop
test
scas
repz
cld
arpl
shll
adc
add
add
add
aas
jae
adc
addr16
sub
and
loopne
jb
sbb
jb
loopne
test
punpckhbw
cwtl
jecxz
test
daa
rorl
lock
sahf
pop
sub
lock
hlt
mov
dec
mov
insl
jne
mov
ds
subl
lea
out
jbe
or
cltd
fdivrs
popa
xchg
adc
pop
cwtl
cmpsl
mov
clc
mov
push
aas
ret
or
loope
popa
ja
lods
xlat
jmp
scas
xlat
icebp
sbb
lods
cmc
push
test
pop
mov
dec
mov
andl
mov
rorb
dec
test
add
movsb
inc
call
mov
in
jae
and
filds
cmp
inc
data16
sbb
inc
or
xor
data16
aaa
cmp
sahf
test
sti
mov
fs
add
dec
pushl
xor
shrb
add
add
add
push
and
pop
arpl
sahf
jo
popa
dec
addl
loopne
jne
adc
push
adc
xchg
mov
in
mov
ja
xchg
popa
adc
pop
testl
sti
test
and
arpl
js
repz
push
mov
xchg
xor
in
xchg
or
jae
inc
lahf
mov
outsl
scas
jo
mov
pusha
mov
xchg
lea
sti
divl
aas
adc
add
dec
repnz
xchg
mov
mov
push
sub
mov
outsb
sbb
aas
push
fdivrl
add
scas
fldt
dec
out
stc
mov
pushl
inc
les
testb
insl
jnp
adc
cmc
push
adc
ret
or
mov
sbb
add
les
push
pop
adc
ds
cwtl
xchg
lcall
mov
lods
outsl
ja
pop
sub
inc
ja
pop
aas
pop
jmp
mov
rclb
add
or
mov
loope
rolb
mov
lock
xor
dec
out
sub
data16
inc
push
inc
pop
movsb
cmp
lahf
mov
push
ja
arpl
stos
dec
lock
push
insb
fsubr
loopne
rcrl
ret
fadd
inc
xchg
jb
pushl
xchg
mov
dec
in
arpl
push
and
pushf
mov
xlat
add
jmp
loope
mov
mov
frstor
mov
cmp
mov
xchg
lock
cli
xor
imul
and
lret
imul
ja
push
sbb
ss
call
jmp
lds
icebp
out
sbb
jbe
into
icebp
lock
cwtl
mov
mov
xchg
and
test
stos
xchg
mov
push
jecxz
test
or
mov
xchg
push
or
inc
mov
cmpsb
cwtl
mov
stc
mov
xor
cmp
orb
repz
jae
ja
div
fisttpll
xchg
scas
xlat
push
add
pop
add
add
int3
xor
mov
nop
mov
lds
movsb
ret
push
add
int3
xchg
inc
jns
mov
outsl
enter
cmp
in
and
test
push
xchg
jo
add
dec
sub
in
pop
stc
adc
dec
xor
test
push
loop
jecxz
fdiv
sbb
insl
pop
jl
cmp
xor
cmp
mov
mov
xorl
jecxz
sbb
pop
outsb
leave
ret
iret
outsl
rolb
popf
mov
outsl
fisubl
faddl
pushf
icebp
in
je
pop
out
jne
stos
sub
inc
imul
mov
inc
daa
jo
mov
xchg
mov
xor
std
and
push
push
xchg
pop
xchg
mov
outsl
mov
jbe
mov
fimull
and
push
cli
mov
or
pop
pop
add
movsl
ds
cmpb
lods
cmpsb
xchg
mov
add
cli
std
jg
mov
ret
pop
add
pop
add
add
xorb
mov
and
daa
inc
pop
out
push
add
pop
imul
mov
add
push
add
test
add
mov
adc
inc
dec
shrb
add
mov
xor
sbb
push
out
cld
dec
and
mov
dec
adc
jo
popa
aaa
aad
mov
cli
aaa
mov
int3
ja
arpl
xor
je
lds
ds
in
outsl
stos
cmp
test
xor
lret
pushf
dec
clc
mov
mov
enter
in
call
mov
mov
mov
jns
sbb
repz
sbbb
inc
dec
aam
dec
adc
loope
pop
mov
mov
adc
cwtl
orl
or
stos
mov
adc
fistpll
mov
push
push
stos
scas
fcompl
cwtl
pop
add
add
mov
std
incl
mov
add
in
add
pop
add
add
stc
loop
pop
dec
pushf
inc
ss
iret
stc
sub
add
aad
bound
push
ds
mov
sbb
xor
or
jmp
push
mov
movlps
sahf
xchg
mov
hlt
pushf
and
jns
add
sbb
mov
inc
imulb
mov
push
xchg
adc
inc
fmul
sub
jne
pop
out
mov
jge
sub
das
dec
xor
sbb
or
dec
ja
cli
pusha
fsubl
sbb
mov
mov
mov
movsl
pop
mov
outsl
aad
add
mov
xchg
lret
aad
mov
cmc
cmp
and
push
test
inc
mov
xchg
out
sbb
mov
dec
push
test
popa
pop
mov
sub
gs
xchg
pop
fs
repnz
fisubl
into
shrb
aad
rorb
mov
add
es
jg
pop
pop
mov
pop
stos
in
sbb
add
add
add
cltd
sbb
inc
loop
mov
imul
xor
fdiv
pop
call
outsb
outsl
jge
shr
rorb
cmp
mov
add
xor
mov
adc
dec
mov
addr16
repnz
and
mov
mov
ds
add
shlb
jb
xchg
jg
stos
iret
push
xchg
xchg
sti
jl
mov
jle
sbb
leave
or
out
jle
push
mov
stc
xchg
inc
or
and
mov
xchg
lahf
jbe
movsb
pusha
sbb
loope
and
adc
adc
out
xchg
adc
push
dec
aam
loop
pushf
les
out
cld
inc
es
sbb
lahf
mov
das
js
leave
lret
scas
hlt
pop
je
cmpsl
xor
mov
outsb
movsl
add
xchg
ljmp
fcmovnb
jg
add
inc
pop
xchg
daa
inc
cmp
push
clc
or
mov
add
aas
repz
add
add
add
push
scas
lret
xor
fucomip
fmulp
faddl
mov
inc
mov
sbb
mov
test
inc
ds
cli
mov
xchg
mov
test
lea
mov
int
xchg
pop
adc
inc
lods
lods
ja
xchg
sub
or
push
stos
mov
fimull
xchg
or
in
jmp
adc
mov
jle
pop
testl
in
mov
lds
and
xchg
dec
ja
scas
dec
adc
sub
adc
mov
xor
mov
mov
mov
test
shll
mov
orl
mov
add
and
dec
sbb
leave
mov
aas
mov
sub
cld
loop
jecxz
push
lret
lahf
fnstenv
sub
adc
dec
js
aas
dec
ja
roll
xlat
out
pushf
xchg
cvttps2pi
mov
sub
cmp
add
stc
lods
xor
xor
loop
or
add
add
add
out
mov
fmull
lock
pop
pop
out
call
mov
test
test
shr
repz
mov
sbb
out
aas
add
inc
pop
xor
mov
rcr
jg
cltd
inc
mov
pop
dec
push
mov
in
in
push
mov
iret
pop
mov
mov
rcll
repnz
stos
lcall
inc
loopne
subl
push
popf
stc
cmp
leave
mov
loop
cmp
cmp
lods
call
mov
jb
xchg
out
and
cltd
push
dec
jg
std
addl
stos
jecxz
cmpsb
mov
ss
andb
jne
mov
xchg
or
pushf
pop
xchg
sub
pop
rcrl
dec
cmc
cmpb
mov
popa
dec
fidivrs
inc
gs
or
cld
into
fwait
xor
outsb
popf
movl
mov
outsl
add
fnsave
sbb
add
ficoms
stos
sbb
jmp
ljmp
out
sbb
add
divb
iret
lods
sti
ja
lret
cmc
das
dec
jmp
push
jnp
ds
dec
push
imul
divb
xorl
stc
lcall
cmc
int3
mov
inc
mov
mov
cmpsb
xchg
loopne
jg
cwtl
pop
mov
mov
sub
push
arpl
pop
mov
fstps
jecxz
lock
in
inc
std
test
aam
insl
cmp
jne
mov
sub
pop
stc
fsubr
jno
push
nop
test
adc
outsl
iret
xor
mov
mov
shrl
and
aad
adc
shl
and
jnp
dec
mov
cmpsb
call
test
inc
orl
dec
in
inc
adc
pop
and
xor
arpl
jecxz
scas
andl
aaa
fdiv
out
push
mov
aam
pop
int
leave
and
pusha
fidivs
mov
xchg
mov
add
in
out
arpl
aas
or
in
out
or
add
pop
add
add
loop
aaa
imul
pop
jbe
jo
lds
lods
lret
push
mov
fs
stc
rcr
push
cmpsb
mov
lock
adcl
adc
in
cmp
add
and
jne
or
jns
inc
pop
cmp
mov
xor
inc
pop
cltd
out
cmpsb
es
or
pop
mov
sub
out
pop
jb
jmp
clc
inc
jecxz
pop
dec
stc
in
add
mov
adc
int
mov
mov
xor
adc
pop
adc
mov
test
and
js
cmp
dec
push
repz
sarb
in
push
lahf
xor
stos
dec
fcom
andb
or
mov
frndint
mov
add
test
std
xchg
fs
pop
and
mov
adc
sub
pop
test
pop
push
in
nop
js
add
mov
add
add
sbb
out
cld
mov
sarl
dec
nopl
add
add
add
lcall
and
sub
mov
shl
sub
ret
xor
mov
loope
or
xchg
inc
into
rcrb
sub
mov
iret
inc
test
enter
andb
xchg
jo
cmp
das
jns
xchg
pop
sahf
pop
mov
add
pop
andb
inc
sahf
ja,pt
push
in
sbb
cmpsl
dec
or
std
cmpsl
xchg
mov
arpl
shl
fsubrl
lcall
sub
mov
jge
sahf
sbb
sti
push
sbb
xor
sub
or
std
xchg
cs
rcrl
aam
mov
add
cmp
cmp
sbb
sub
mov
adc
inc
out
sub
pop
or
push
sbb
inc
out
pop
in
xor
popa
les
popa
add
in
add
cmp
out
lock
cwtl
dec
in
push
push
and
add
add
add
lcall
push
je
mov
xor
push
mov
inc
sub
call
rclb
jnp
jl
imul
pop
mov
test
adc
scas
and
jl
mul
aaa
mov
ror
pop
jmp
call
push
int
fwait
xlat
sahf
rcrl
xchg
mov
and
sub
pop
dec
sub
divb
cmpsl
dec
enter
dec
setns
loop
jp
seta
loopne
xor
and
jecxz
repz
or
jo
or
or
popa
popf
jmp
push
int
imul
inc
mov
pop
xorl
sti
sahf
xchg
push
imul
jo
push
sbb
addb
inc
test
jl
in
imul
sbb
sub
jp
mov
lret
and
notl
fstpt
mov
dec
add
lods
jg
sub
add
pop
les
add
add
outsb
xchg
movsb
mov
int3
lret
or
lods
scas
add
xchg
xchg
dec
xor
daa
ja
adc
push
aam
push
cld
inc
ret
mov
das
aad
dec
push
adc
fs
ret
jmp
mov
xchg
shlb
inc
fistpl
mov
dec
dec
xchg
es
adc
les
sub
and
nop
iret
arpl
jecxz
push
pushf
pop
mov
cmc
jmp
inc
enter
int
fs
mov
xlat
dec
xchg
jb
hlt
clc
push
inc
in
xlat
popa
add
outsl
lcall
lods
pop
sarl
mov
ficomps
fst
mov
mov
daa
leave
int3
int3
cmc
inc
mov
in
push
add
subl
xchg
adc
repnz
inc
cmpsl
jmp
into
push
dec
clc
pop
mov
out
xchg
inc
jne
dec
fiadds
leave
jbe
pop
imul
imul
add
mov
dec
idivl
cld
fcmovbe
out
xchg
push
add
add
add
in
testb
xlat
inc
pop
popa
cmp
fistps
das
xor
stos
shlb
pop
in
gs
dec
mov
xchg
pop
jnp
cmp
js
mov
jmp
out
cmp
ljmp
out
lret
ds
mov
popa
jp
insb
adc
xchg
jns
pop
cmp
hlt
or
inc
cmp
push
mov
xchg
aad
adcb
push
mov
pop
out
loop
and
push
inc
add
in
lds
rclb
xor
jns
add
outsb
test
lea
xlat
push
inc
ret
movsl
out
dec
loop
test
les
xchg
jl
jno
mov
or
negb
loop
out
sarb
cmc
or
lahf
test
outsb
fcoms
add
mov
cltd
je
sub
jae
pusha
les
jns
jae
loop
insb
pop
sub
iret
ficompl
sub
add
mov
iret
mov
hlt
repnz
and
add
add
add
in
adc
ss
scas
nop
stos
mov
sti
not
pusha
add
stc
ror
sub
fs
in
sbb
cmc
jecxz
xchg
xor
mov
push
sbb
mov
xor
fwait
shl
jb
cmp
stc
mov
sbb
xor
sar
mov
xor
lods
xor
jno
mov
push
jecxz
mov
add
into
out
imul
adc
jg
cltd
cmp
popaw
cmp
xor
push
pop
ja
ljmp
mov
stos
pop
outsb
or
dec
cld
jle
and
sahf
mov
adcl
loopne
sbb
jmp
scas
mov
inc
scas
sub
jno
icebp
bnd
xchg
cmpsl
add
fs
push
nop
pop
ret
cmpsl
pop
mov
pop
lret
and
out
sbb
inc
arpl
iret
lds
fidivl
out
xorl
add
mov
lahf
and
cld
mov
loop
and
add
add
add
xor
xlat
xchg
outsb
loop
repnz
add
push
sarl
repz
jg
pop
xor
fidivl
mov
sub
mov
fwait
mov
sbbb
testb
outsl
dec
and
mov
mov
mov
pop
jecxz
out
ss
cmp
jge
push
and
jb
push
sub
adc
sarb
adc
sbb
test
jmp
pusha
rcll
nop
scas
mov
cwtl
lods
inc
lods
loope
pop
lahf
xor
jp
imul
or
push
rorl
aas
mov
test
das
mov
push
in
push
adc
std
pop
imul
lahf
jecxz
pop
or
and
dec
mov
mov
lds
outsl
fmuls
daa
addr16
outsb
repnz
rcll
add
xor
clc
cli
clc
sarb
js
das
aam
and
add
pop
or
cmpb
sub
pop
mov
aaa
repz
shll
push
loope
and
int
fadds
and
test
movsb
popf
mov
push
dec
push
adc
int3
test
clc
cmp
out
or
xchg
popf
daa
or
dec
xor
imul
pusha
push
test
sbb
cmp
pop
jmp
lock
jne
addr16
mov
frstor
dec
outsb
enter
push
repnz
clc
roll
mov
lcall
sbb
cs
ss
or
out
and
test
jb
movsl
subb
add
xor
decl
jmp
mov
insb
xchg
leave
dec
dec
leave
leave
xchg
sar
sub
push
and
rorl
fbld
xlat
adc
mov
push
shr
sub
popa
movsb
xchg
insb
jne
scas
dec
pop
scas
lret
test
pop
out
mov
loopne
jge
jge
stc
push
mov
add
jnp
out
add
push
outsb
das
lds
add
pop
add
add
negl
xchg
xor
movsb
cmp
stc
nop
mov
cmp
aad
notl
xchg
es
in
mov
pop
dec
fsubrl
and
out
push
mov
lock
pop
inc
add
jle
dec
daa
fisubrs
lcall
dec
jne
push
fwait
lcall
fstpl
mov
cmp
aas
xchg
aam
mov
push
repz
adc
cltd
pop
fbld
hlt
movsb
insb
aam
jp
out
icebp
mov
lcall
stc
mov
mov
add
or
mov
sti
leave
sbb
mov
dec
mov
cld
outsl
imul
stc
ss
mov
pushf
sbb
test
shl
lret
push
pop
lcall
xchg
lods
sbb
insl
and
frstor
cli
and
mov
ja
test
movsl
jns
jne
adc
cmp
cmp
pop
test
mov
pop
std
xchg
jbe
push
inc
mov
arpl
or
fs
es
data16
pop
sub
daa
movsb
imul
add
add
add
cmp
sub
lock
jp
push
dec
pop
sub
sub
mov
push
sub
sbbb
out
xor
lds
xorb
cmp
movsl
lods
fcmove
les
mov
fdivrs
cmp
lds
add
push
jns
addr16
mov
decb
xor
imul
adc
insl
leave
push
mov
push
sub
call
inc
mov
push
cwtl
pop
inc
cmp
dec
repnz
mov
mov
mov
pushf
jle
or
fwait
lahf
shll
mov
in
push
mov
dec
fdivs
cld
mov
xor
inc
frstor
jge
dec
mov
sub
adc
jmp
sbb
outsl
add
xor
push
mov
int3
adc
mov
adc
movb
xchg
xor
outsb
and
push
inc
fs
and
clc
mov
fldcw
xlat
mov
test
pop
add
add
jae
add
sub
repnz
jge
loopne
iret
ljmp
push
push
push
cld
mov
test
aas
int
sub
rorb
repz
xor
and
dec
sahf
cmp
or
dec
cmp
jbe
add
jbe
push
loope
xchg
pop
scas
out
pop
cmp
xchg
je
fistps
add
jae
xor
imul
inc
sbb
or
mov
jmp
repnz
jb
or
push
adc
sbb
and
daa
ret
ja
addr16
dec
test
add
and
fnsave
push
pop
leave
bound
lret
loope
sub
dec
arpl
in
stos
fistps
sbb
mov
lds
pop
inc
add
cmp
loope
aas
dec
xchg
out
ret
mov
cmp
mov
xor
pop
or
xchg
jo
lock
push
jno
xchg
jp
jmp
jnp
xorl
add
and
push
sti
cmpsl
push
mov
xor
add
pop
add
add
cmp
xor
enter
cmpsb
test
and
pop
inc
test
scas
gs
add
rcrb
adc
lds
cwtl
adc
repz
mov
xor
sbb
add
and
cmp
mov
lea
bnd
add
and
jo
sti
iret
adc
adc
sub
scas
sbb
add
mov
sub
push
pop
xorb
in
daa
pop
aad
mov
mov
cld
push
mov
mov
daa
ja
loop
jge
fistpl
add
stos
test
push
dec
movsb
pop
imul
jecxz
mov
sbb
int
dec
das
mov
sub
push
sbb
mov
std
add
daa
in
nop
xor
add
cld
cwtl
ror
jl
ret
xchg
insb
ret
aam
in
mov
or
mov
mov
pop
add
mov
std
mov
ljmp
pop
push
pop
sub
add
add
add
or
bound
push
fimuls
or
je
or
int
push
sub
push
push
mov
jecxz
loope
or
xor
mov
add
mov
push
inc
iret
aas
xchg
lcall
arpl
jo
decl
fcoms
in
outsl
int3
sbb
inc
loop
pop
ds
xor
orb
popf
lret
sbbl
ret
and
outsb
push
dec
sub
cmc
aam
dec
add
das
mov
stc
xor
mov
shrb
sahf
fmull
mov
test
mov
sub
xor
addr16
push
push
dec
movb
aaa
mov
cli
test
repnz
sahf
fstpl
push
dec
jb
xchg
clc
in
in
movl
roll
pop
cmp
push
pop
inc
dec
out
fbstp
push
icebp
add
and
jecxz
push
stc
push
push
pop
arpl
add
pop
add
add
or
cmpsb
popa
out
mov
inc
cli
jg
mov
or
cmpsl
add
and
repz
iret
sahf
cmc
or
dec
dec
hlt
test
mov
inc
in
sbb
sti
xchg
inc
mov
cmp
aam
cmp
mov
push
orb
add
mov
and
or
shrb
outsb
cmp
mov
mov
mov
test
cmpsb
mov
imul
cmp
jle
push
or
jne
jbe
lcall
add
cmpsl
mov
jnp
push
fidivl
jae
ds
out
mov
pop
pusha
out
xchg
xchg
cltd
dec
cmp
jmp
xor
loop
xorl
insl
call
ret
in
out
clc
cltd
cmp
lahf
les
int3
scas
in
pop
scas
insb
ret
jnp
sbb
dec
xor
imul
inc
loope
arpl
fstps
cld
iret
adc
pushf
add
add
xchg
ficomps
cmp
inc
js
stc
push
add
pop
add
add
push
les
xchg
testl
lods
mov
and
sbb
cld
mov
idivb
out
mov
insb
lock
insl
mov
bound
inc
mov
mov
dec
jecxz
idivl
enter
add
inc
les
mov
mov
out
sbb
sub
mov
pop
jno
rorl
jo
gs
ficompl
and
rcl
mov
bound
es
and
insl
or
fimuls
out
sub
loopne
pop
fwait
sub
imul
orb
cmp
mov
hlt
hlt
cs
js
mov
jle
sub
sub
movsb
fwait
pop
rcrb
add
jo
sbb
dec
cmp
push
ja
mov
ljmp
sub
test
xchg
add
scas
sub
dec
scas
and
pop
dec
mov
iret
dec
push
jne
xlat
mov
xor
cmpsb
stos
outsb
mov
mov
pop
test
arpl
ja
js,pn
and
lcall
add
mov
mov
xor
xchg
mov
cmp
xor
sbb
leave
xor
inc
sub
pop
shlb
dec
ret
scas
enter
rclb
jo
mov
jecxz
or
out
ror
movsl
inc
out
mov
fucomip
jmp
adc
arpl
ljmp
fldenv
jne
pop
rcrb
int
mov
and
xlat
lods
adc
xor
and
shll
in
daa
fdivr
cmpsb
fldl
orl
xor
rclb
cli
jge
mov
mov
mov
ret
ficoms
pushf
aaa
xchg
mov
add
add
pop
adc
inc
push
sub
jae
lret
cwtl
jg
rclb
scas
out
mov
mov
std
dec
push
cmpsl
ja
push
fiadds
mov
mov
out
sbb
pop
outsb
bound
push
sub
ss
outsb
sbb
lock
mov
sub
test
js
add
pop
add
add
mov
mov
push
insb
jmp
xlat
iret
out
push
scas
pop
pop
fbstp
xchg
cld
fdivl
pop
mov
fs
jecxz
pop
addr16
leave
mov
andb
repnz
add
test
and
mov
jno
xor
or
cmpsl
mov
loope
and
mov
imul
setg
xchg
fs
xor
sarb
pop
clc
mov
shlb
add
into
cltd
loop
fisubs
cmp
test
jge
arpl
xlat
insb
sbb
stos
fadds
jnp
aad
mov
aaa
ja,pt
mov
lds
mov
inc
inc
mov
ret
in
or
jbe
arpl
cmp
imul
nop
repz
loope
fldenv
push
mov
punpckhbw
cmc
mov
test
xchg
in
outsb
xchg
inc
sbb
mov
push
cmp
sub
sti
pop
jge
divb
mov
pop
jg
add
pop
add
add
sub
xchg
ret
sbb
mov
rorb
pop
pushf
mov
mov
loopne
in
scas
sahf
or
or
arpl
mov
mov
xchg
inc
mov
jns
adc
xchg
pop
dec
and
xor
int
outsl
xor
cmp
jno
popa
stos
xchg
out
imul
sbb
sbb
pop
iret
add
inc
cmp
cmp
pop
ret
inc
xchg
adc
iret
mov
shlb
push
mov
clc
jp
loope
mov
push
test
and
fsts
xor
outsb
mov
cmp
adc
dec
mov
test
stos
insb
xor
sbbl
xchg
aad
outsl
jns
jge
sbb
jns
rorl
js
mov
add
push
rclw
daa
ficomps
hlt
dec
scas
lahf
adc
inc
icebp
aas
cmp
sbb
mov
pusha
cltd
fsub
std
in
popf
dec
int
hlt
idiv
je
xchg
add
pop
add
add
sti
or
sbb
jge
xchg
mov
add
daa
cltd
imul
or
in
jno
or
or
sub
cld
adcl
sbb
inc
mov
loope
add
adc
jle
int
add
imul
and
popf
push
das
cs
mov
add
or
rclb
js
add
loop
jle
jnp
pop
pop
mov
sub
push
insb
dec
adc
lock
int
repz
cmpsl
pop
sbbb
push
mov
daa
insl
inc
dec
sarl
jo
dec
lahf
lcall
aaa
fmuls
rcll
xchg
insb
mov
in
in
rcll
jle
scas
out
push
lods
jl
add
shll
loope
sti
adc
sub
bound
int
push
les
fs
movups
lods
out
popa
add
nop
jge
xor
fwait
inc
aaa
add
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
insb
js
leave
inc
mov
loopew
out
repnz
imul
dec
and
adc
or
pop
in
mov
add
push
push
cmp
sub
dec
popf
ljmp
add
gs
push
outsl
xor
and
test
stc
push
loop
fst
outsb
les
ret
outsb
adc
sbb
js
in
fcmovnb
jnp
and
decl
lods
inc
mov
pushf
aam
addr16
les
shrb
cwtl
idivl
lods
fs
int3
xchg
jmp
in
dec
push
pushf
and
inc
jo
pusha
add
negb
in
dec
xor
xchg
or
daa
xchg
pop
push
jle
xchg
xor
xor
and
jecxz
pop
in
cmpsb
mov
test
xchg
mov
shrl
cs
or
xchg
sub
jecxz
mov
subb
add
push
sti
das
ret
lods
daa
mov
xor
add
add
add
into
sbb
xor
pop
or
js
js
cmp
pop
insl
aam
es
xchg
out
leave
imul
mov
xchg
mov
mov
or
push
lods
mov
outsb
inc
push
cwtl
xchg
call
add
insl
mov
sbb
mov
inc
addb
mov
fs
or
stc
sub
sti
xchg
and
imul
add
pop
sub
stos
xor
inc
ret
inc
xor
imul
pop
fwait
xor
mov
xchg
lods
cmpsb
push
push
dec
add
jge
in
les
fsubp
dec
jnp
insb
in
push
sti
into
mov
iret
popf
cld
lcall
in
aad
cwtl
adc
movsb
push
mov
mov
mov
call
repnz
sbb
push
jne
push
add
push
rclb
sbb
jp
roll
add
push
ret
cmp
sti
aad
loopne
cmp
add
add
add
test
pop
adc
push
movb
adc
in
mov
xor
sub
ja
sbb
cwtl
cmp
xor
add
push
cmp
cmp
dec
call
test
ljmp
aas
pextrw
cwtl
ljmp
add
loop
jnp
sbb
cs
xor
call
iret
test
inc
pop
repz
xchg
test
jnp
sbbb
push
cmp
adc
or
xorl
sbb
xlat
dec
or
in
les
out
cld
pop
adcb
hlt
and
cmp
fisttpl
sub
dec
iret
mov
jae
add
fsubrs
pop
clc
repz
adc
and
shrb
xor
sub
iret
std
jl
test
xor
mov
push
shll
iret
xchg
mov
add
cmp
jge
stos
sbb
add
pop
add
add
decb
sbb
xchg
std
idiv
jbe
jns
aaa
jmp
addb
ret
mov
mov
inc
jle
push
mov
jge
dec
inc
mov
lcall
nop
mov
mov
push
sbb
test
mov
jg
dec
adc
stc
jnp
xor
enter
repnz
jo
add
mov
pop
leave
loop
dec
mov
jbe
push
dec
push
negl
or
xchg
adc
jge
mov
add
out
mov
sbb
int
adc
push
pop
add
pop
sub
imul
punpckldq
pop
in
sub
stc
in
icebp
cld
test
fwait
sbbl
xchg
adc
push
ret
and
push
inc
fs
lret
call
and
sub
xchg
dec
shrl
mov
loop
mov
add
rclb
fwait
aad
das
jmp
add
add
add
cli
mov
leave
inc
filds
ja
outsb
pop
add
jg
xchg
or
and
clc
out
jne
push
jl
cmp
sub
mov
jmp
lods
cmpsl
xchg
push
loopne
repz
addr16
mov
or
loop
loope
setl
jp
sbb
cmp
mov
jmp
pusha
cmp
fnstsw
and
shll
jbe
shrl
mov
popa
mov
jno
inc
test
mov
mov
jo
out
rorb
jbe
jb
ds
xchg
or
and
xor
call
mov
xor
mov
fstl
cmp
fnsave
icebp
rol
push
push
adc
xor
jno
test
xlat
insl
mov
ret
mov
decl
or
push
out
sbb
test
aad
push
push
jp
jbe
lcall
pop
mov
sbb
lea
xchg
lcall
cli
enter
jl
dec
jbe
idivl
mov
andl
add
and
fstps
xchg
jp
and
lods
sbb
push
sub
and
dec
xchg
addr16
jp
or
or
sub
lds
lret
xor
scas
cmpsl
bound
insl
imul
lret
out
and
in
adc
addl
add
push
stos
ds
xchg
in
adc
sbb
int3
fidivrs
sub
push
cmp
sbb
sub
enter
ljmp
bound
fldcw
xor
cmpsl
sbb
inc
add
sub
and
lds
adc
std
std
xor
je
and
mov
pop
xchg
loop
pop
or
cmp
stos
inc
jecxz
add
mov
mov
lcall
sub
sub
jp
pushf
mov
push
xlat
roll
mov
jmp
push
push
xor
cmpsb
inc
xchg
je
out
inc
imul
shlb
push
add
outsb
sub
stos
fs
push
pop
or
shll
add
pop
add
add
dec
test
mov
bound
jb
ja
shlb
mov
inc
vpmovsxwq
shrb
and
nop
xchg
scas
adc
sub
test
adc
xchg
pmulhw
mov
dec
iret
mov
sbb
scas
pop
mov
pop
inc
and
jl
pop
pop
popf
fwait
and
jns
jne
sub
mov
fisubs
call
or
pcmpeqd
aas
mov
push
es
jg
push
and
fistpl
mov
inc
jne
mov
xor
packssdw
cmp
add
cmp
je
cmp
rcrb
adc
jle
ss
loopne
push
loopne
or
rcrl
adc
scas
shll
cmp
xchg
adc
pop
lds
cmp
pop
in
mov
mov
aam
pop
into
mov
stos
mulb
add
repnz
mov
add
insb
pop
pushf
scas
fistpll
inc
ljmp
add
pop
add
add
cmpsb
add
sbb
add
lods
jno
and
mov
sub
mov
into
stc
adc
iret
inc
js
movsb
mov
inc
sti
int
scas
es
dec
push
in
js
push
insb
dec
out
sbbl
loope
movsl
ucomiss
or
sbb
leave
xchg
jl
jno
roll
lahf
pop
mov
and
ljmp
iret
adc
mov
and
test
lods
cmp
pmulhw
xchg
cmp
push
cmp
or
in
mov
xor
jns
xchg
fcmovu
push
xchg
push
in
mov
mov
mov
sbb
lcall
pop
into
pop
mov
push
dec
add
xor
mov
shlb
pop
in
mov
adc
fistpl
jns
lea
aaa
xor
inc
and
bound
push
jge
sbb
jnp
jnp
cmp
out
lahf
push
pop
mov
add
pop
add
add
jbe
jbe
cwtl
mov
aaa
jae
cmp
shll
in
scas
mov
negb
stos
frstor
pusha
push
mov
add
mov
or
mov
jo
rorl
mov
or
stos
into
test
and
cmp
ret
insl
movsl
sbb
mov
cli
mov
mov
sbb
fnstcw
mov
push
xchg
or
pop
mov
out
mov
aam
mov
or
stos
xchg
push
mov
mov
mov
jo
iret
mov
jmp
mov
ss
inc
jg
push
inc
xchg
aaa
outsb
and
aas
jmp
add
loope
pop
adc
cmp
cmp
ja
pop
pop
jl
push
sbb
inc
sub
std
xor
outsb
dec
xlat
das
and
push
mov
sub
leave
pop
inc
sbb
cli
cs
mov
sarb
jp
jb
popf
cmpsb
push
outsl
lret
mov
out
dec
ja
aas
adc
aam
cmp
add
add
add
or
arpl
aaa
and
cmp
lret
outsb
or
xchg
add
adc
rolb
pop
orl
loopne
lea
sbb
sbb
sbb
out
jle
test
out
sti
xor
xchg
pusha
int3
insb
mov
fucom
pop
sbb
or
add
adc
and
adc
sub
lret
mov
push
mov
in
mov
stos
xchg
inc
cs
je
sbb
or
xlat
add
pop
outsb
add
adc
int3
xor
mov
in
cltd
addr16
sub
out
sahf
in
mov
fdivs
sahf
push
mov
and
mov
aad
lods
adc
dec
repz
jmp
push
or
mov
push
out
mov
stc
ror
lods
cltd
addr16
sbb
push
idivb
or
cmp
xchg
mov
in
leave
pop
les
add
add
repz
cmp
lods
repz
sub
sub
cmp
add
add
add
adc
push
jge
stos
fdivrp
test
push
inc
jge
jmp
xchg
inc
pop
pop
jne
loopne
mov
xchg
pop
mov
jl
pop
mov
outsl
xchg
rolb
outsl
ds
mov
sub
mov
mov
cltd
in
adc
xor
adc
dec
sbb
mov
cwtl
xor
mov
mov
jle
sub
in
inc
push
stc
push
insl
jno
movsb
stos
adc
fwait
stos
lret
mov
jae
dec
sub
and
jb
and
into
ret
and
in
push
mov
jo
pop
mov
push
out
je
ficompl
pop
or
std
aaa
out
cmpsl
mov
dec
lea
adc
addl
insb
adc
icebp
xor
bnd
pop
mov
aad
addr16
push
inc
jne
lods
pushf
es
in
and
lret
hlt
sub
das
dec
dec
shr
js
xor
xor
scas
xor
lods
jno
and
fistpl
mov
add
daa
push
cld
push
std
jmp
pop
adc
jbe
fidivrl
add
add
add
adc
cmc
mov
scas
adc
dec
sub
jp
mov
xlat
movsl
movsb
dec
fsubl
sbb
test
adc
sub
and
adc
test
mov
repz
jg
pop
fs
lret
mov
xchg
mov
inc
xor
shrb
int
inc
jmp
repz
testl
jae
mov
mov
jbe
jg
jns
jno
mov
or
xchg
xchg
dec
push
adc
shrl
jecxz
lret
add
rcrb
xchg
pop
in
jo
add
push
mov
jecxz
inc
jae
mov
inc
data16
jno
pop
subb
push
dec
inc
fsubl
jne
clc
out
jbe
pop
in
insl
test
lds
repz
and
xchg
rolb
insl
mov
push
ss
dec
jl
inc
xor
sub
mov
add
add
sbb
dec
push
out
jge
xchg
mov
add
add
add
les
or
and
jo
jbe
sbb
adc
cmp
mov
inc
into
icebp
mov
incb
push
psubusb
jbe
sub
test
rorb
ret
imul
orl
jle
js
xor
mov
or
mov
jmp
loope
fldt
xchg
dec
shlb
mov
or
jno
inc
leave
inc
and
sbb
aam
sub
fisubrl
xchg
xchg
in
test
fnstcw
ret
fiaddl
mov
out
cmp
nop
scas
bswap
mov
add
out
fistps
aas
xor
nop
imul
push
or
mov
test
loop
cwtl
xchg
jmp
mov
loope
in
pop
pop
sbb
pop
dec
test
mov
aas
ret
arpl
pop
mov
mov
or
stos
add
push
mov
mov
mov
in
call
add
add
pop
and
daa
sbb
unpcklps
dec
pop
pop
push
mov
jle
nop
mov
xor
sbb
out
push
xchg
add
xchg
jmp
int3
and
inc
sub
jb
mov
test
mov
pop
inc
lods
insb
mov
leave
adc
ja
mov
push
iret
leave
shl
jno
inc
xor
mov
ret
fnstcw
sbb
pop
cltd
sbb
lret
mov
shl
fimuls
addr16
popf
jmp
into
adc
sub
xor
mov
call
add
lock
mov
aaa
push
mov
jmp
mov
adc
mov
push
ret
mov
jl
hlt
cmp
shll
enter
xchg
je
and
dec
adc
popf
in
fs
lret
mov
call
ljmp
push
dec
xchg
inc
jl
mov
sbb
mov
ja
jg
xchg
cmp
sub
sbb
pop
add
add
sbb
or
or
add
jp
loope
dec
mov
push
add
or
cmp
in
icebp
rorl
jmp
and
in
xlat
inc
push
inc
leave
fildll
pushf
mov
adc
iret
push
mov
jecxz
sub
add
in
pop
test
cltd
mov
mov
mov
inc
repnz
rsqrtss
adc
cmp
cmp
imul
rcrb
push
les
gs
push
and
out
jo
sbb
jae
push
jecxz
mov
mov
roll
insl
jecxz
cld
fldcw
test
rorb
sub
mov
mov
mov
in
mov
lret
outsl
jecxz
pop
dec
inc
sbb
jge
and
mov
jae
repz
and
cmp
sbb
mov
bound
notl
lea
jecxz
add
push
dec
lret
jmp
imul
push
cmp
shrb
inc
add
pop
add
add
out
nop
and
cli
mov
fists
dec
in
cmp
push
dec
pop
stc
lock
divb
mov
pop
out
lahf
stc
mov
push
adc
mov
dec
dec
inc
jo
dec
stc
cli
ror
pop
jle
ret
repz
test
dec
cli
inc
subl
add
lret
icebp
push
out
mov
shll
jle
jmp
cmc
xor
sbb
mov
ljmp
pusha
sbb
cmc
pop
flds
push
dec
pop
adc
out
or
push
enter
mov
in
enter
xchg
movsl
divl
push
and
mov
pushf
xchg
pushf
sahf
inc
pop
stc
aad
int
out
add
pop
leave
loope
mov
aas
xchg
frstor
dec
pop
xchg
int
inc
add
or
addr16
sub
stos
in
fistpll
xchg
xchg
insl
xchg
add
cwtl
loope
std
jge
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
jle
arpl
pop
push
inc
xlat
stos
push
xorl
cs
out
orb
in
jle
xchg
inc
mov
stos
ficoms
fimull
inc
xchg
sbb
jbe
inc
xchg
in
into
pop
add
shlb
add
hlt
mov
xchg
dec
insb
push
pop
popf
hlt
test
lret
sbb
adc
aam
leave
adc
fnstenv
xor
mov
stos
push
xchg
or
push
fsubs
lahf
jae
sub
adc
pushf
clc
cmp
icebp
out
ficompl
push
das
mov
lahf
add
lds
xor
icebp
fs
fcomps
imul
mov
stos
inc
lret
or
add
test
sub
inc
cmpsl
lods
test
mov
push
fmul
icebp
les
jmp
cmp
mov
adc
sbb
movsb
popf
push
and
xor
add
jns
imul
lods
shl
add
add
pop
add
add
add
movsb
test
jns
adc
iret
pushf
test
mov
mov
xchg
rorl
mov
adcb
push
std
out
mov
insl
js
lock
out
int3
loop
into
xchg
ljmp
pop
mov
or
stos
gs
xor
adc
sub
std
mov
and
and
rol
repz
lock
cli
sbb
push
adc
sub
mov
push
clc
inc
jmp
fs
xor
loope
or
std
test
pushf
xor
mov
fiadds
pop
gs
add
in
adc
cmp
pop
xchg
add
or
or
insb
mov
mov
cmpsb
or
jmp
popf
test
pop
cltd
or
push
aaa
stc
les
jb
and
dec
or
in
fimull
int3
add
ret
jg
jmp
repnz
loope
jl
or
pop
add
add
fildll
out
mov
mov
dec
and
fsubs
cld
test
add
pop
fincstp
dec
fsubrs
movsl
inc
out
pop
push
pop
arpl
sub
or
shrb
gs
cmpsl
jg
mov
adc
int3
lahf
cmp
sbb
add
jnp
add
mov
mov
test
or
jg
xor
lods
popa
jmp
dec
ljmp
sbb
mov
fistl
inc
leave
jl
pusha
gs
cmp
enter
out
mov
dec
inc
dec
iret
cmp
repz
add
insb
repz
shr
and
inc
sarb
cmpsl
jb
push
cmc
push
in
into
xor
and
and
fsin
sahf
hlt
pop
stos
pop
mov
rcr
leave
imul
jmp
in
pop
pop
fiaddl
popa
repnz
push
and
jae
xor
sub
push
mov
add
das
mov
and
mov
add
add
add
dec
mov
nop
pop
faddp
sub
mov
or
out
lcall
es
incl
mov
mov
sbb
add
cwtl
insb
adc
mov
insb
fimuls
adc
sbb
repz
cmp
cmp
in
push
pop
aaa
dec
or
ljmp
fimuls
mov
cmp
pop
cmpsl
pop
cmpl
pop
loopne
dec
inc
mov
and
nop
add
cltd
dec
negl
sub
push
aas
rep
sbb
jae
mov
mov
mov
mov
cmp
fcoml
push
cmp
mov
sbb
bound
push
stos
mov
push
imul
xlat
sahf
clc
cmp
iret
pop
sbb
xchg
mov
aam
sbb
sti
dec
rcll
testb
mov
in
push
cmp
mov
mov
jmp
shll
jns
dec
add
cli
mov
in
inc
icebp
hlt
gs
adc
ficoms
jns
ret
ja
inc
add
pop
add
add
mov
push
das
adcb
scas
and
sarl
jecxz
sti
je
test
cmp
jmp
insb
mov
or
sub
jle
pop
inc
dec
pop
dec
lcall
fs
pop
inc
aad
xchg
stos
mov
mov
jb
rorb
lods
push
cmp
xchg
imul
or
push
fstps
sub
pop
sbb
adc
loop
push
inc
mov
mov
add
ja
mov
loope
je
add
repnz
repnz
mov
stos
mov
or
test
gs
lret
mov
std
jmp
mov
repz
xchg
fcmovu
xchg
mov
bswap
dec
xchg
mov
pop
adc
add
fidivrs
mov
mul
mov
adc
int3
cmp
and
call
pushl
data16
add
aas
gs
mov
xor
pop
and
add
add
add
lods
loop
or
xchg
adc
loopne
test
mov
out
fldl
mov
and
call
jne
fcompl
out
dec
jg
dec
stos
repnz
xchg
inc
or
movsb
insb
cld
jno
fdivr
nop
add
cmp
sub
cmp
in
dec
push
popf
cltd
push
arpl
int
lock
pop
mov
insb
jg
cmpl
es
ja
pop
stos
mov
mov
or
add
ss
mov
dec
push
jle
jo
sub
adc
stc
mov
push
mov
mov
jo
lock
out
int
repz
aad
cmpsb
lds
in
cmp
mov
sbb
jl
jmp
mov
add
jle
aas
dec
pop
mov
mov
nop
push
insb
add
mov
das
cltd
push
orb
jo
mov
mov
sub
addl
jae
xor
insl
cmp
or
imul
add
add
out
fnstsw
add
add
pop
add
add
test
test
mov
or
lahf
int
mov
add
cmp
outsb
mov
push
mov
mov
popf
xchg
or
push
push
cli
xchg
fldl
push
andb
xor
dec
inc
out
dec
jno
rcll
repz
inc
mov
adc
or
xor
aad
jns
add
je
popf
sbb
outsb
outsb
imul
fwait
iret
adc
pop
std
mov
add
popf
mov
mov
dec
inc
daa
sub
addr16
jmp
adc
orb
mov
ret
adc
bound
addl
nop
test
jmp
sbb
jb
int3
jne
ljmp
and
push
mov
lods
xorl
pop
mov
cmc
and
xor
out
mov
aas
mov
pop
or
cwtl
jno,pt
out
fcmovnu
xor
rclb
pop
mov
inc
mov
add
add
mov
sub
cs
add
pop
add
add
loope
and
sahf
jg
push
inc
cwtl
push
lret
cmp
push
cwtl
ror
sub
adc
leave
pop
cmp
leave
mov
int3
inc
jg
adc
jbe
aad
and
mov
shlb
das
addr16
int3
jmp
and
pop
pop
stc
fwait
sub
cmp
inc
mov
push
xchg
cmc
lret
leave
fisubl
xchg
rorb
pop
dec
cmpsb
mov
mov
inc
mov
lret
jae
mov
dec
dec
push
sub
stc
or
data16
jnp
dec
push
shl
stc
sahf
mov
dec
leave
int
pop
arpl
adc
pop
insl
js
jae,pt
xchg
jae
flds
dec
push
xchg
into
lret
cmpsb
push
loopne
pop
push
pushf
cmp
dec
fisubs
repz
add
cmpsb
adcl
jg
pusha
outsl
xchg
sbb
out
mov
pop
jmp
ror
push
sbb
push
rcrb
and
das
test
or
sub
add
add
jmp
out
aas
push
xor
out
add
pop
add
add
cmp
pushw
ds
xor
dec
cwtl
mov
xor
lea
mov
add
mov
dec
test
movsb
rcll
das
int
mov
push
mov
mov
fsub
mov
ds
sahf
and
push
inc
inc
rcrl
cltd
add
add
std
inc
inc
mov
mov
js
ds
cmp
pop
loopne
aad
test
dec
add
fs
xlat
adc
sub
ss
jns
cs
adc
jb
mov
xor
sbb
xor
xlat
and
or
mov
out
stos
dec
jne
rorb
sbb
enter
cmp
loope
int
dec
in
sub
scas
test
mov
inc
inc
lods
xchg
mov
add
insl
dec
push
add
sbb
lock
xchg
inc
mov
cmp
sbb
push
jl
push
fidivrs
cmpb
add
cmp
imul
out
mov
xchg
stos
cmp
add
pop
add
add
leave
cwtl
movsb
push
push
add
movsl
xor
jge
sbb
jp
sbb
mov
jmp
cwtl
mov
inc
pop
adc
stc
pop
jbe
adc
in
xchg
rcrl
lock
mov
sbbb
xor
cmpsb
inc
inc
add
sbb
inc
out
inc
or
adc
pop
incl
clc
rorb
mov
test
loopne
mov
out
popa
fldl
std
jbe
enter
pushf
fcmovb
mov
dec
dec
pop
inc
jnp
aam
add
and
jl
stos
mov
adc
scas
push
pusha
ficompl
lcall
push
aaa
scas
cwtl
inc
rclb
mov
or
iret
arpl
fwait
scas
add
les
dec
cmp
add
jbe
js
ficomps
pop
and
pop
push
push
mov
out
rorb
dec
dec
add
add
dec
stc
mov
pop
sub
pop
inc
xor
inc
dec
add
pop
add
add
jns
xorb
outsl
jl
and
mov
loop
lds
aad
cld
sub
popa
jecxz
xchg
in
lret
lods
mov
inc
ds
adc
out
ljmp
mov
popf
in
push
cli
out
add
pop
scas
rclb
inc
mov
stos
dec
std
jl
imul
lods
imul
and
mov
xor
pop
stos
lds
lds
mull
pop
or
xor
inc
stos
push
jmp
jp
xchg
pop
cmpsl
jns
out
inc
fimuls
cmp
xor
test
movsb
adc
push
sub
shl
xchg
clc
movsl
and
mov
mov
imul
cs
lea
jbe
add
lds
insl
pop
in
and
fdivrp
sbb
cmpsb
clc
mov
lds
popf
rcrb
sub
pop
sarl
ret
push
pop
bound
push
pop
sbb
xchg
cmp
jle
jg
cld
dec
loope
sbb
dec
add
pop
add
add
les
call
les
and
js,pn
cmp
loope
nop
and
pop
popa
inc
xchg
and
add
scas
jnp
mov
jmp
jbe
dec
insl
jp
mov
rolb
push
pop
stc
sahf
sub
mov
jne
adc
arpl
cwtl
xchg
aam
xor
rorb
xchg
stc
push
pop
pop
cmc
in
inc
out
xchg
shlb
add
inc
mov
sub
test
into
add
adc
mov
mov
sbb
push
orb
outsl
lods
or
cld
pop
into
insb
aad
lods
adc
jo
out
mov
lret
iret
mov
sbb
rcrb
incb
and
mov
imul
fldlg2
mov
push
or
repz
jbe
dec
subl
pusha
lods
add
xchg
mov
mov
cmp
add
add
add
push
loop
sub
jg
jmp
in
xchg
sbb
jb
into
ljmp
rcl
add
fiaddl
and
loop
jp
repz
sub
pop
ds
pusha
repnz
popa
addr16
stc
fisttpll
addr16
dec
add
aad
xchg
push
mov
int
ret
scas
xchg
sub
xchg
add
loop
mov
mov
mov
pop
lock
jp
and
shl
adc
popf
scas
gs
mov
push
adc
xchg
fstps
rorl
dec
ljmp
adc
add
mov
or
cmp
mov
rcr
cmpsb
sbb
add
jne
mov
aad
pop
pop
dec
in
inc
in
mov
outsb
adcb
idivl
push
pop
sar
sbb
sbb
and
clc
out
xor
or
mov
fwait
mov
jbe
pop
dec
add
pop
add
add
fdivrl
mov
pop
jnp
sbb
and
insb
push
std
insl
gs
push
xor
test
mov
push
sub
cmp
sub
xor
pop
jg
insb
rcll
call
scas
add
mov
sbb
mov
and
pop
fwait
clc
jb
xchg
jp
sbb
xchg
adc
dec
or
and
push
fwait
sbb
insl
fdiv
out
decl
mov
jae
fidivrl
and
xchg
daa
sbb
aas
mov
dec
outsb
jno
stc
sub
xor
adc
in
test
push
out
gs
jae
shl
add
adc
dec
and
std
idivb
pop
push
push
mov
sub
lods
pop
xor
outsl
pop
xor
in
sbb
dec
and
sbb
loop
fwait
in
add
sub
cmp
cmc
push
adc
loopne
rcrl
add
pop
add
add
adc
adc
enter
add
push
stos
mov
mov
ja
mov
in
cs
scas
pop
or
arpl
int
add
jle
out
roll
sbb
lock
or
pop
or
fists
push
pop
push
mov
leave
jb
xchg
in
lods
sbb
xor
sbb
mov
call
negl
add
mov
and
sub
pop
and
pop
fwait
lret
sbb
cltd
inc
pop
fs
mov
adc
mov
hlt
icebp
stc
inc
pop
cmpsl
loopne
rcl
sti
es
arpl
std
mov
sbb
or
add
mov
cmpsl
cmc
stc
call
mov
pop
rcrb
int3
stos
mov
loop
mov
insb
inc
in
xchg
or
aas
loop
xor
pop
jp
inc
push
add
lcall
add
add
push
shll
out
je
pop
inc
aaa
fcoml
add
add
add
mov
inc
shlb
pop
pushf
inc
cld
cmp
mov
repz
sbb
lret
daa
out
or
andl
mov
cmpsb
leave
cltd
mov
jl
jecxz
pusha
les
jg
add
jmp
bound
aas
mov
aam
ret
pop
pop
adc
pop
nop
and
ss
sbb
cmp
or
jecxz
jne
jmp
std
xchg
ror
test
inc
or
adc
mov
xchg
outsb
adc
jmp
js
repnz
pusha
dec
inc
push
dec
mov
ret
sti
lods
bnd
add
add
jmp
xchg
sub
dec
cli
aam
aam
lahf
sbb
jecxz
inc
aam
cli
push
mov
ljmp
mov
test
repnz
mov
call
inc
stos
ljmp
push
repnz
lret
pop
inc
je
sti
cltd
andb
adc
stos
push
lcall
lock
jmp
insl
push
add
pop
add
add
cwtl
and
pop
out
test
adc
mov
enter
pop
add
cwtl
jle
cmc
lods
mov
loope
imull
adc
pop
mov
inc
dec
fdiv
dec
sbb
cmp
pop
cmpsl
mov
push
shlb
lods
cmp
out
adc
cwtl
inc
dec
leave
xchg
xor
jl
fstl
xor
inc
and
ficomps
imul
outsl
xchg
ffree
out
adc
pop
jae
add
push
inc
adc
test
pop
mov
jne
sbb
into
loopne
push
jne
dec
mov
mov
test
sbb
jne
xlat
jg
or
enter
inc
push
shl
outsb
in
mov
lahf
cmp
test
pop
ficompl
sbbl
or
clc
pop
into
testl
mov
add
add
jbe
idiv
imul
lods
mov
add
add
add
in
enter
sbb
pushf
pushf
pop
xor
push
rcll
jne
aas
add
and
scas
mov
jg
stos
insb
push
jno
insl
push
in
cltd
or
sbb
outsb
mov
mov
push
jae
fmull
mov
ds
cli
shrl
je
adc
push
sbb
pushf
jle
mov
lock
dec
add
cmp
outsl
dec
mov
stos
in
leave
rol
out
lcall
ds
loopne
pop
out
sbb
cmp
loopne
addr16
jns
aam
les
mov
stos
ljmp
js
shlb
sub
out
adc
icebp
leave
stos
xorl
and
or
dec
mov
inc
adc
fidivrl
add
mov
or
aam
ficoms
stc
bound
inc
add
fwait
cmp
xchg
xchg
dec
cmp
add
pop
add
add
loopne
or
inc
sarl
push
int
dec
pop
dec
sub
fsts
aaa
push
mov
fbstp
mov
dec
ds
hlt
dec
sbb
push
in
jmp
lods
xchg
enter
nop
add
cli
std
subl
xchg
and
and
jbe
sub
icebp
dec
adc
out
rclb
nop
in
fisubrl
rolb
cmp
mov
xor
and
aad
leave
or
fld
mov
mov
dec
lahf
or
test
push
xor
cs
pop
xchg
in
ss
sub
adc
inc
inc
xor
movsl
aad
outsl
sahf
lahf
inc
push
push
adcl
or
out
xor
imul
cmpsl
pop
cli
pop
sbb
ret
roll
dec
call
mov
in
cmpsl
loopne
dec
lods
xor
jnp
rcrl
add
add
clc
mov
mov
pop
fistpll
lea
push
add
pop
add
add
add
inc
or
or
ret
push
sub
out
dec
jno
cmp
and
ret
jns
aaa
int
lods
in
and
aas
mov
repnz
jp
loopne
or
dec
aad
test
push
imul
mov
mov
out
jb
data16
xor
or
adc
sysenter
mov
sub
mov
mov
jle
push
hlt
mov
fadds
jae
lds
movsl
sti
movsl
aas
repz
movsb
or
cmp
adc
lods
in
cli
leave
push
pop
adc
gs
out
dec
jp
cwtl
add
cmc
hlt
leave
cmp
sbb
jae
fstpl
push
movsl
notb
pop
je
or
add
inc
pop
xchg
jp
gs
adc
sti
addl
cli
iret
adc
popf
ret
inc
popa
aas
je
xor
in
xor
sbb
mov
add
shr
mov
imul
add
pop
add
add
cli
push
adc
jno
sub
imul
mov
je
repz
adc
cmpsl
sbb
xchg
in
adc
push
popa
cwtl
mulb
push
pop
mov
sub
mov
pop
xchg
cmovle
add
mov
dec
in
sti
fldt
aad
cmpsl
int3
out
xor
jno
sahf
imul
movsl
sbbb
inc
adc
clc
cmp
loopne
lods
push
push
mov
add
jmp
lcall
pop
push
bound
push
and
je
lods
sub
movsb
imul
jle
xor
xchg
and
scas
idiv
out
arpl
xchg
out
movsl
mov
sbb
mov
cmp
or
push
es
xchg
xlat
add
jge
out
dec
bnd
sbb
mov
hlt
cmpsb
mov
pop
mov
mov
xchg
pop
sti
pop
add
add
add
mov
btc
mov
nop
push
add
pop
add
add
jb
push
loope
testb
jns
sbb
dec
pop
mov
xor
mov
mov
inc
lahf
fildll
rorl
and
ret
xchg
mov
sahf
and
mov
es
fistl
daa
jae
jmp
add
dec
loopne
addr16
popf
test
pop
dec
rclb
cmpsb
push
pop
push
popf
push
fdivs
dec
repz
addr16
or
sbb
cltd
mov
push
stc
aaa
add
shrl
loop
and
adc
cmp
sbb
dec
enter
repz
cmp
and
into
xor
repnz
aam
mov
loopne
mov
sbb
fldpi
pop
inc
jmp
jge
dec
nop
xchg
ret
jae
iret
ljmp
xchg
leave
mov
sti
and
adc
inc
push
cmp
sti
fidivs
cltd
pop
fiadds
mov
and
das
jmp
std
cmp
add
add
add
sbb
jmp
sub
or
adc
cmp
addb
fs
fsts
jecxz
fstps
cli
pop
jns
mov
pusha
pop
adc
into
cltd
cmpsb
js
outsl
pushf
das
xchg
hlt
push
das
xchg
pop
fwait
call
mov
or
mov
rolb
push
push
scas
cmp
loope
lods
out
and
mov
addr16
js
mov
dec
mov
or
mov
add
fldl
sub
imul
int
xchg
pusha
dec
test
fidivs
test
push
ds
jge
jns
or
repz
out
in
and
mov
push
inc
jecxz
lcall
bound
inc
push
int3
sbb
push
cld
inc
cmpsb
sbb
add
sbb
arpl
adc
adc
mov
loopne
mov
aaa
in
lods
cmp
clc
or
jg
mov
fsubl
mov
jne
ret
adc
sahf
pop
add
pop
add
add
adcb
push
xlat
frndint
adc
rcrl
and
fdivs
jmp
xor
mov
pop
cmp
repnz
mov
mov
cmpsl
pusha
inc
push
imul
fmuls
pop
mov
insb
push
xchg
inc
mov
int3
mov
jg
jle
push
je
jmp
in
sar
jnp
push
mov
mov
imul
bound
sbb
push
pushf
or
jae
fdivrp
cmpsl
push
or
and
cld
decl
test
outsb
add
adc
insl
leave
cmc
iret
dec
rcrb
add
cwtl
sub
dec
pushf
decl
mov
mov
jnp
idivl
jo
dec
fistpll
jg
add
and
pop
aaa
sub
cmpsb
cmp
adc
pop
lds
in
push
movsb
xchg
aas
xchg
xchg
movsl
arpl
mov
outsb
es
sbb
repnz
add
fbstp
scas
adc
lahf
std
test
pop
add
pop
add
add
jo
pushf
sub
xchg
ret
addb
cwtl
rorb
inc
push
adcl
test
xchg
movsl
mov
mov
fsubr
sub
lock
jnp
nop
xor
cmpsb
xor
or
je
out
cmp
sub
in
gs
mov
mov
xor
xchg
xchg
push
xchg
xor
inc
stos
pop
dec
call
pop
and
push
jno
cmp
sbb
jp
not
add
push
and
mov
sbb
jmp
pop
fimuls
je
pop
subb
mov
fmuls
jne
cmpsb
push
xor
divb
nop
bound
push
js
ljmp
scas
jo
stos
fimull
cmp
loop
lods
aam
int
es
or
add
ret
pop
inc
mov
insl
add
mov
pop
stc
dec
mov
add
add
add
test
data16
sahf
sub
int
enter
sbb
cmpsb
xchg
jns
lods
pushf
and
pop
popf
sbb
test
xor
xchg
mov
add
jns
or
stos
cltd
cli
inc
adc
repz
or
pop
fmull
cmp
jl
aas
imul
xchg
or
insl
jle
lahf
jle
cwtl
ljmp
sbb
inc
gs
bsf
push
stos
int3
inc
fdivrl
or
pop
lods
lock
sbb
mov
mov
scas
xorl
push
test
pop
mov
or
push
pop
mov
push
loope
imul
dec
push
mov
fdiv
jmp
or
jbe
mov
jge
cmp
cs
or
movsb
mov
add
and
jnp
jae
jo
cmc
jno
out
into
push
mov
and
pop
mov
add
pop
add
add
xchg
cld
imul
push
xchg
jl
jge
xchg
adc
rcl
scas
popf
inc
imul
addr16
jb
ss
dec
or
fs
lock
sbb
scas
push
or
mov
js
dec
add
ja
sub
push
ret
out
into
rdtsc
push
and
sub
leave
cmc
pop
iret
jle
pop
pop
adc
cmc
sbb
ss
sub
jnp
pop
xlat
insl
xchg
inc
sbb
test
shll
rcll
cli
dec
icebp
push
ficompl
mov
push
inc
add
push
and
daa
mov
or
jnp
adc
sub
scas
and
add
clc
add
add
in
repnz
repnz
or
mov
sbb
fsub
addr16
popf
push
mov
or
sbb
mov
fwait
push
ds
aad
or
lea
adc
jl
and
mov
sub
jnp,pt
sub
mov
add
add
enter
xor
pop
iret
movsl
stc
sbb
jnp
xor
out
jmp
jne
mov
cmp
and
popf
xor
shl
imul
mov
ljmp
pop
push
and
or
sbb
and
mov
test
pop
lret
outsl
mov
test
loopne
shl
jg
sub
cs
out
into
lods
pusha
rdpmc
je
lcall
jmp
arpl
inc
and
and
aad
mov
stc
and
jl
loop
sbb
push
cmp
repnz
aaa
xchg
mov
sbb
decb
ss
mov
daa
mov
scas
ljmp
ror
push
gs
ja
jl
leave
jmp
xchg
addb
add
add
lahf
pop
lret
inc
and
cld
rcrl
pop
add
add
cmpsb
pop
int3
inc
fdivr
mov
out
xor
cmp
aad
sbbb
jecxz
push
xor
mov
in
jmp
cld
push
rorb
popa
ss
cltd
test
ja
loop
jle
pop
mov
push
jecxz
add
fs
movzwl
or
ljmp
in
push
lock
mov
cmp
out
mov
mov
add
enter
push
mov
xchg
cmp
shl
jecxz
push
cmpsb
subl
cmpsl
stc
mov
sahf
aam
mov
insl
fisttpll
ja
mov
xor
jb
xor
fwait
xchg
jns
shrb
insb
ds
pop
fwait
xchg
jl
stos
push
cmp
rolb
xor
mov
jb
es
lret
jmp
paddd
dec
loopne
shr
lret
dec
clc
into
hlt
ja
outsl
in
arpl
cmp
fwait
andb
fwait
jmp
frstor
mov
mov
pusha
outsb
daa
jb
dec
nop
add
idiv
jg
pop
and
lret
enter
pop
add
add
mov
cmpsb
jns
mov
dec
sahf
mov
shr
mov
sub
imul
cli
jmp
daa
and
jno
push
scas
jg
push
cwtl
sti
aaa
pusha
repz
push
cltd
es
adc
andb
jp
xchg
in
test
in
fs
push
push
inc
rcrl
in
arpl
push
push
sub
arpl
jo
adc
xchg
cmpb
sbb
and
lret
mov
pop
mov
shll
sti
xchg
sarl
add
scas
faddp
andb
mov
sub
arpl
xlat
leave
sub
and
out
jle
scas
daa
roll
and
das
push
in
mov
aaa
ret
aam
xor
add
jnp
sbb
cli
adc
imul
fimuls
dec
pop
mov
or
ftst
in
lret
iret
xorb
xor
lods
add
add
pop
mov
mov
fists
test
pusha
add
pop
add
add
dec
pop
les
sbb
mov
push
mov
aad
stos
lds
mov
sbb
cld
jge
xor
ss
pop
adc
outsb
shlb
out
rclb
addr16
inc
jne
xor
mov
fldl
inc
add
push
and
jmp
in
pop
repz
repz
insl
adc
and
adc
cmp
dec
xor
pop
adc
inc
inc
mov
xchg
loopne
lods
into
sahf
pop
and
jbe
mov
shrb
push
jecxz
sub
mov
mov
jbe
dec
ficoml
jmp
mov
pop
fs
loop
adc
rcrb
repz
arpl
adc
cmp
lret
sahf
add
test
jg
rorb
das
lods
test
add
jmp
in
dec
icebp
test
popf
mov
adc
repnz
movsb
jle
stc
test
popa
nop
push
daa
xchg
popa
add
pop
add
add
cmp
xor
mov
stos
sbb
fiadds
cmp
mov
lds
popf
fsubl
mov
repnz
aaa
lret
ret
out
jl
xchg
sbb
je
xchg
mov
inc
dec
addr16
ljmp
cmp
ja
mov
in
inc
fst
jmp
sahf
jge
mov
mov
ds
inc
xor
add
repnz
pop
xchg
mov
cltd
scas
jb
lea
xlat
outsb
mov
cld
sbb
outsl
icebp
frstor
ds
xor
daa
dec
or
setp
xchg
mov
sub
mov
scas
clc
push
scas
in
fldl
flds
mov
and
jl
mov
sbb
pop
dec
dec
or
or
insb
inc
adc
jne
sbb
push
stos
pushf
orb
push
imul
js
pop
dec
xor
test
mov
jbe
dec
mov
stos
sub
stos
out
jmp
sub
je
and
pop
add
add
jp
dec
lret
push
sbb
mov
cmp
into
mov
pop
mov
mov
pop
or
ja
inc
mov
mov
out
mov
movsb
jnp
je
cwtl
dec
push
push
jmp
mov
push
add
push
lock
mov
fbld
loopne
fs
and
test
inc
sub
jbe
lock
jmp
sbbb
jno
bound
sub
jge
and
cs
popf
jmp
ja
inc
leave
mov
subl
cmp
jae
jb
rcrb
mov
loopne
out
sarb
das
adc
sbb
and
or
xor
scas
lret
lret
cmp
pusha
out
pop
in
mov
imul
ret
popa
push
xor
pop
in
push
lret
xchg
inc
fdivrl
jb
orl
mov
xor
shlb
and
shll
fnstenv
mov
arpl
add
add
add
imul
pop
data16
dec
inc
or
mov
ds
jp
push
negb
jp
imul
iret
mov
adc
outsl
inc
pop
mov
adc
movsl
pop
mov
subb
push
mov
repz
js
cwtl
xor
cmp
lods
and
stos
mov
out
dec
push
xchg
ret
pop
jbe
add
jae
jns
inc
jns
lods
push
push
xlat
xchg
sub
mov
dec
repnz
insb
dec
cmpsl
adc
sar
inc
jns
dec
fisubrs
dec
aaa
sbb
push
movsl
xchg
outsl
xor
sub
or
leave
lcall
cltd
test
xor
ja
or
cmp
jmp
jbe
cmp
mov
in
lock
mov
inc
sti
dec
scas
fisttpll
mov
pop
sbb
jle
push
pop
pop
mov
xorl
scas
sarb
jg
je
cld
je
jbe
decl
rcll
add
pop
add
add
pop
dec
dec
ret
stos
enter
add
dec
ljmp
js
pushl
jbe
sbb
cmp
xchg
adc
pop
add
sub
dec
loopne
lahf
insl
mov
push
pushf
jns
sar
out
pop
adc
scas
mov
mov
orb
call
stc
je
popa
jg
stos
jno
test
mov
push
pop
mov
pop
int
jo
es
sub
pop
test
iret
or
mov
outsb
aad
xor
aad
mov
js
lahf
fimull
insl
repnz
scas
pop
mov
pop
or
inc
aaa
mov
dec
test
lret
or
insl
mov
xchg
in
ja
mov
loopne
lcall
fs
or
sbb
mov
xor
push
sbb
js
jno
mov
sub
push
add
mov
shl
or
push
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
add
add
jns
arpl
mov
sbb
in
dec
adc
inc
ja
out
xchg
pop
andl
ss
pop
mov
mov
shrl
sbb
in
mov
sub
sbb
or
ja
xchg
mov
push
xchg
cmp
test
xor
nop
and
test
daa
mov
jge,pt
in
and
mov
popa
lret
in
jae
pop
push
roll
inc
jo
repnz
jno
outsb
fimuls
das
ds
inc
addb
pushf
je
lods
leave
and
add
cltd
je
xor
fildl
ret
pop
loop
movb
adc
scas
test
cmp
into
lock
aad
xor
cmpsb
into
dec
xchg
or
pop
les
xor
pop
mov
jno
into
mov
movl
push
mov
cmp
movsl
push
imul
mov
inc
pop
push
cmp
mov
mov
push
jg
shll
stc
add
pop
add
add
adc
mov
add
pop
arpl
lds
adc
fmul
aaa
jns
jl
rcr
pop
repz
or
lock
movl
iret
stos
mov
sbb
add
xlat
push
cmpsl
das
stos
daa
sub
loopne
mov
mov
pop
sbb
cmp
cld
mov
cmp
enter
sbb
ficoml
gs
ljmp
ss
fmuls
pop
out
insl
mov
adc
in
adc
sbb
mov
cmp
loope
ss
push
shrb
lds
mov
lea
or
and
idiv
sub
jae
jmp
push
cld
cmp
out
or
repnz
add
sbb
mov
or
aam
loope
andl
aad
rorb
xchg
mov
pop
sbb
xor
add
mov
fucomip
lock
cmp
int3
cmp
push
add
call
fists
or
outsl
lahf
mov
hlt
dec
adc
fwait
add
mov
pusha
fdivs
xchg
mov
pushf
dec
pop
aam
xor
int
stos
stos
fisubrs
fbld
bound
sbb
popf
cli
into
cld
inc
sldt
scas
push
xchg
jg
test
and
in
inc
aaa
fs
insl
mov
cmpsb
lods
jnp
fimuls
movsl
add
in
inc
fstpt
sub
test
fs
ret
shlb
lods
inc
dec
jle
jecxz
fsubs
mov
int
in
andl
int
fwait
inc
mov
or
sbb
jno
or
in
pop
lods
inc
call
inc
ret
sbb
push
xchg
mov
push
fadd
rclb
insl
mov
push
pop
pop
mov
loope
mov
mov
ret
leave
mov
lea
imul
dec
out
iret
jmp
das
mov
data16
imul
add
xchg
push
insb
mov
call
adc
sbb
insl
shrl
and
dec
das
pop
loopne
rcr
neg
push
xchg
iret
leave
daa
push
js
inc
dec
jle
add
adc
mov
je
rorl
pop
insl
sbb
and
push
jae
or
mov
flds
cmp
jecxz
out
pop
scas
mov
xchg
insl
dec
dec
and
ja
lods
sar
fistps
lret
or
pop
into
and
push
sbb
andl
call
xchg
mov
or
jle
in
in
fwait
hlt
clc
jmp
cs
push
jecxz
cmp
jnp
cli
loopne
stos
lret
cld
orl
andb
mov
daa
dec
sub
mov
jno
icebp
repz
cmc
mov
and
and
repnz
sbb
dec
sbb
out
bound
rcll
mov
mov
pop
in
pop
jmp
gs
cmpsb
push
jnp
std
cmpsb
pop
or
lret
adc
add
add
add
xchg
pop
imul
cmp
xor
mov
inc
cmp
sub
push
lahf
adc
js
cltd
push
or
fwait
or
jl
inc
lret
in
mov
jmp
shrl
jp
stc
xchg
pop
fnsave
jp
jbe
fldcw
dec
sbb
jmp
hlt
xchg
loopne
mov
call
scas
movsl
jne
ret
mov
and
push
mov
je
out
jae
insb
xor
sahf
cld
rclb
cltd
int3
cmp
jle
push
cli
jae
sbb
nop
jno
xchg
xchg
and
push
mov
dec
int3
sarb
fwait
add
or
xor
cmp
enter
push
add
pop
lret
mov
dec
mov
push
enter
in
and
cmpb
adc
imul
lret
push
cmp
dec
xor
pushf
sbb
cwtl
push
test
daa
add
neg
std
fsubrs
adc
imul
pop
add
add
inc
mov
in
jl
fldt
add
xchg
rcll
pop
imul
or
lods
cld
fstpt
hlt
mov
mov
sub
psadbw
push
cli
faddl
adc
and
cmc
pusha
shll
lods
shlb
mov
cmpl
jmp
adc
loope
jns
cmp
jl
mov
jl
mov
lea
mov
push
insb
jns
fisubl
dec
lea
mov
cmpsb
int
lea
or
push
testb
add
mov
nop
jno
rorb
and
adc
aaa
iret
xchg
insl
mov
shlb
arpl
stos
and
shrl
add
adcb
outsb
daa
idivb
inc
pushf
rcl
jns
ret
cld
sahf
lcall
adc
jo
jno
in
ljmp
mov
outsl
xor
add
stc
mov
dec
icebp
mov
add
cs
adc
orl
add
add
mov
xchg
cltd
sub
dec
sbb
mov
cmp
js
push
xchg
xor
mov
scas
fs
sub
cmpsb
lret
popf
insb
mov
rolb
mov
pop
jns
fistl
aas
jge
jne
enter
push
rcrl
in
xchg
movsb
es
sbb
or
adc
xchg
shr
cmp
test
mov
fxtract
dec
xchg
scas
fwait
mov
stc
ljmp
fisubs
sbb
enter
movsl
nop
and
scas
cmp
movsl
mov
shlb
ret
mov
mov
push
adc
dec
or
push
adc
leave
cwtl
push
mov
not
cwtl
test
and
inc
cmp
clc
repz
push
fnstenv
insl
hlt
mov
cld
add
scas
imul
xchg
movsb
add
nop
mov
inc
inc
int3
pop
mov
popf
lock
lock
pop
popf
sti
add
ja
out
and
outsl
fcoms
insl
add
pop
add
add
pop
push
and
in
test
inc
jae
in
sub
mov
pusha
sub
in
xor
mov
insl
xor
popa
mov
cmp
je
lods
test
repz
push
xchg
dec
rclb
test
lret
andl
mov
shlb
jno
mov
test
ljmp
popa
mov
in
sub
jle
xchg
es
mov
cwtl
scas
lods
sub
jb
pop
sbb
fiadds
out
shlb
xor
adcl
push
mov
les
or
mov
pop
aas
mov
fstl
cmp
movsl
jle
cmp
movsl
push
in
cmc
fucomip
xchg
lods
sub
sbb
pushf
out
mov
push
add
adc
sbb
inc
cmp
jbe
jmp
sbb
jecxz
push
cmp
js
add
sub
ja
aad
add
in
test
mov
pop
add
add
cltd
lcall
mov
xchg
cmp
shr
es
mov
lret
pop
xchg
lahf
into
sti
imul
pcmpeqw
xchg
adc
add
xor
pop
sbb
dec
cmp
mov
leave
dec
hlt
lahf
pop
pop
mov
repz
jnp
mov
divl
pop
lret
stos
pushf
icebp
push
lods
xchg
adc
cld
loopne
mov
dec
bsr
cli
or
negb
inc
insl
sahf
insl
push
inc
push
adc
sbb
jb
clc
lods
sub
push
adc
pop
cmp
xchg
push
into
cmpsl
xchg
imul
in
mov
ds
or
fwait
push
arpl
mov
fistl
fwait
scas
incb
stos
lods
loop
sbb
pop
test
cmpl
jg
jns
xchg
jns
mov
lahf
lcall
sbb
xor
add
cmp
jnp
inc
cmp
ja
push
xor
add
add
add
lods
test
jo
or
ja
imul
rol
cmpsl
lods
inc
xor
in
mov
xor
jbe
out
or
cmp
xchg
xchg
mov
imul
cs
pop
mov
mov
fisttps
sub
sbb
jmp
cmp
push
sub
mov
mov
xchg
and
rcrb
push
mov
cmp
mov
in
js
scas
cli
mov
xorb
cmp
jecxz
mov
dec
xchg
inc
xor
fwait
xor
xchg
adc
adcb
stos
cmp
stos
mov
push
mov
cmp
mov
push
push
jp
dec
or
daa
sbb
pusha
outsl
dec
or
cmp
mov
dec
pushf
lds
insl
jne
stc
test
orb
nop
add
aad
pop
es
pop
frstor
push
pop
add
ds
add
cli
xchg
jle
rol
call
cmp
add
add
add
repnz
add
fidivl
xchg
pop
and
jne
mov
and
jo
jae
es
movsb
or
mov
jo
mov
push
pop
test
mov
mulb
cwtl
int
sub
xlat
filds
mov
mov
imul
xor
sarb
in
test
fiaddl
lods
jmp
xor
out
xchg
cmp
sub
adc
cwtl
stos
bound
and
sub
bound
sti
cmp
sti
out
pop
imul
pushf
stos
loope
add
sub
enter
adcb
pushf
dec
dec
imul
mov
or
mulb
aaa
jne
or
xchg
dec
lret
fdivrp
in
push
sub
push
test
dec
push
rclb
movsl
aad
repz
in
es
out
lods
push
lret
outsw
cmp
shrl
xchg
inc
aaa
dec
fwait
jnp
aad
push
adc
inc
aas
jno
add
add
add
in
jecxz
sbb
js
nop
dec
fs
pop
sar
xor
xchg
out
ss
movsb
or
or
adc
adcb
cmp
adc
mov
dec
push
pop
fwait
out
mov
movsl
fucom
xchg
test
cmpsb
imul
mov
rcrl
sub
jmp
sub
pop
dec
in
adc
addr16
mov
andb
xchg
cld
leave
mov
out
ss
cmp
fwait
xor
aas
xlat
iret
mov
mov
adc
int
inc
push
mov
cwtl
cmp
je
movsb
push
mov
fisubl
sarb
mov
or
mov
cmpb
sbb
daa
sahf
mov
or
pop
xchg
test
push
sbb
dec
dec
push
outsl
out
cmp
pop
inc
sbb
fnstsw
cmp
dec
iret
push
psubw
scas
add
mov
std
mov
fistpll
outsb
mov
pop
add
add
mov
mov
pop
add
mov
mov
pop
push
sub
fisubrs
mov
jo
push
cmpsb
push
mov
fidivs
fldenv
fdivrl
sar
sub
stos
fldl
fsubr
gs
inc
mov
imul
outsb
jg
subl
xchg
testl
gs
pushf
shl
and
mov
mov
mov
orb
leave
fwait
pop
mov
cmp
xchg
dec
mov
pop
decl
stc
je
in
addl
std
gs
cmp
adc
pop
mov
inc
shll
mov
jg
imul
das
cmpsl
std
das
mov
add
pop
jo
scas
cmp
cli
xchg
dec
scas
push
lods
outsb
pushl
loope
inc
and
ret
pop
pushf
loope
xor
mov
je
imul
hlt
mov
fsubs
repnz
inc
cmp
add
fstl
mov
dec
jae
add
add
add
add
fists
cmp
lcall
pop
cmp
jb
push
les
add
cwtl
call
mov
cwtl
mov
repnz
test
mov
icebp
pop
cmp
iret
sub
test
pusha
stc
ror
sbb
lret
dec
stc
subl
out
stos
dec
sbb
pop
cmp
adc
xchg
inc
or
mov
pop
dec
bound
ljmp
int3
jne
test
mov
lds
sub
ljmp
adc
jbe
cmpsl
xchg
aam
mov
inc
cmc
stos
cmp
mov
dec
in
ret
fwait
out
mov
gs
sub
lods
stos
sub
add
test
or
pusha
sub
adc
push
clc
inc
lods
into
add
pop
pop
mov
out
push
loop
mov
inc
in
mov
mov
out
lahf
aaa
inc
or
mov
push
je
add
add
add
add
mov
data16
add
adc
cmpsl
dec
fiadds
in
jl
scas
clc
loope
ret
sbb
cmpsb
hlt
mov
xor
and
pop
mov
inc
inc
cld
shlb
jbe
mov
mov
cmc
sub
dec
mov
int
xor
jmp
lahf
jno
stc
mov
lock
adc
fnstenv
xor
dec
inc
xchg
cld
hlt
mov
loop
xor
cmp
xor
test
in
dec
push
jle
push
xchg
clc
adc
loop
test
shr
or
jmp
aad
int3
xorl
aad
fldenv
jle
jne
cwtl
icebp
repnz
das
clc
fsubs
inc
scas
cmc
jmp
scas
push
fidivl
mov
jo
repnz
or
out
ljmp
loope
sub
aam
jmp
and
push
xor
jbe
sub
out
ss
out
jne
mov
ficoms
sbb
shr
xchg
cltd
jo
jl
test
add
divl
dec
jno
andb
adc
pop
add
add
push
fucomp
xchg
pop
push
mov
pushf
xchg
adc
cmp
adc
cli
or
mov
and
scas
pop
xor
pop
lea
pop
or
push
lds
cmpsl
das
sub
push
pop
insb
addr16
xlat
push
shlb
pop
out
out
sub
neg
ficoms
data16
into
pop
mov
test
push
inc
mov
sub
mov
incl
stos
pop
mov
inc
push
cmp
inc
cmp
icebp
fs
push
mov
sahf
dec
in
push
pop
mov
scas
mov
adcb
in
or
xor
movsl
lods
adc
push
adc
inc
subb
inc
hlt
mov
lods
fimull
ret
cld
or
iret
mov
add
repz
xchg
mov
or
loop
ret
add
sti
pop
adc
outsb
jecxz
dec
ds
les
xchg
xor
jp
icebp
imul
sub
lods
mov
add
fisubs
mov
xchg
inc
lock
and
xchg
bound
add
add
add
popa
imull
loopne
mov
mov
mov
std
leave
movsl
or
loope
and
mov
mov
ds
cltd
stos
pop
and
insl
clc
and
pusha
mov
inc
mov
mov
xorb
push
lods
sub
or
and
mov
gs
les
in
xor
cmpsl
dec
adc
mov
dec
stos
ds
xor
add
dec
ficoml
mov
jns
or
and
mov
sbb
sti
scas
lea
adc
cli
hlt
add
in
xor
add
scas
fiadds
lret
lds
adc
addr16
xor
dec
mov
jno
and
out
in
xlat
out
lahf
adc
inc
inc
cld
dec
pop
fimuls
fwait
pop
mov
inc
pop
jl
cmc
xorl
add
shlb
mov
or
imul
add
andb
add
pop
mov
add
xlat
jo
and
add
cmp
or
jg
jge
jnp
les
shrb
mov
mov
out
mov
fdivrp
in
shlb
int3
adc
dec
lret
cs
mov
arpl
dec
cltd
adc
push
cmc
and
test
add
jmp
adc
fdiv
push
addr16
nop
out
pop
jg
imul
aaa
sub
xor
adc
sbb
lea
gs
cmpsb
inc
sub
insb
dec
cld
imul
add
pop
pop
mov
xor
pop
popf
push
loop
mov
inc
mov
dec
mov
ror
fucom
pop
bound
enter
and
sbb
fstpl
sub
mov
imul
mov
push
dec
and
add
testl
imul
add
add
add
jbe
and
rclb
ret
cltd
dec
movsl
or
jle
das
test
xchg
movsb
fdivs
push
mov
mov
test
sbb
stc
cwtl
mov
inc
mov
ret
xchg
mov
stos
jns
int3
and
lret
mov
or
ret
mov
pusha
cmpsb
arpl
std
out
pop
loopne
or
xor
or
add
lods
out
ljmp
daa
fildll
js
sti
fdivrl
fstl
pusha
pop
scas
dec
mov
ret
test
inc
mov
mov
insl
pop
push
in
jp
sbb
ficoml
into
mov
inc
stc
pushf
fisttpll
fstl
xor
inc
outsb
out
test
jbe
adc
imul
lret
xor
stos
loop
jle
lods
pop
mov
mov
mov
cmp
jbe
lods
cmp
jbe
xor
cld
out
add
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
push
adc
push
fdivrs
mov
imul
scas
sbb
dec
sub
test
dec
mov
inc
call
iret
sub
gs
add
sti
aas
sub
nop
jb
inc
cs
lock
or
sbb
cmpsl
and
mov
cmp
leave
std
out
pusha
sub
mov
mov
mov
xchg
insb
or
push
pop
inc
push
jae
aam
shrl
stos
adc
sbb
xor
fdivrs
pop
sahf
lock
sub
xchg
and
mov
pop
and
jmp
and
shll
sub
arpl
aas
dec
mov
pop
add
or
stc
mov
mov
sub
int
jnp
repz
cmp
daa
inc
and
jge
push
ja
jle
add
addb
push
jae
fnstenv
lods
push
testl
mov
cmpsb
lods
rcrb
cmp
popa
or
jle
add
pop
add
add
shlb
dec
mov
cmp
sbb
test
sbb
sbb
mov
sub
es
out
push
adc
shlb
mov
pop
clc
lock
sbb
pop
mov
fneni(8087
hlt
mov
shlb
adc
xor
sbb
loop
hlt
les
mov
mov
aaa
loop
movsb
pop
mov
ret
xor
push
ret
dec
push
add
dec
popf
pop
pusha
adc
xor
jo
mov
ret
mov
in
push
fdivr
test
loop
add
stos
mov
or
xchg
jns
mov
and
and
in
popf
shrl
out
cltd
xchg
es
pop
mov
push
int
pop
int3
and
pusha
lods
cltd
lcall
sub
outsb
std
bound
push
dec
invd
jmp
push
mov
xchg
jns
lcall
fidivrs
push
xchg
cmp
add
cmp
cli
mov
mov
das
filds
add
add
mov
lret
jmp
sbb
jecxz
lock
in
sub
pop
push
lock
jae
cmp
mov
xchg
sbb
imul
sarl
outsb
add
imul
arpl
sub
dec
ljmp
stc
xchg
cld
imul
xchg
mov
mov
es
mov
test
xchg
movsb
mov
insb
add
divb
xorb
or
mov
test
int3
cli
int3
js
hlt
dec
adc
arpl
aad
adc
and
imulb
lcall
xor
jns
icebp
sti
mov
adc
jp
pop
sub
push
das
in
pop
sbb
mov
pop
mov
cmp
inc
cmpb
aaa
cmp
in
push
mov
jno
sti
lods
outsl
enter
push
sbb
inc
pop
ret
jbe
scas
insb
xchg
jo
mov
jmp
mov
add
add
add
test
inc
jbe
stc
aaa
aaa
sub
mov
pop
add
add
data16
adc
ljmp
call
mov
or
sbb
jae
mov
jmp
pop
inc
xchg
xchg
cmp
pop
leave
xlat
or
inc
xchg
pop
mov
or
out
push
hlt
mov
cld
fwait
or
cli
arpl
and
pop
repz
inc
mov
in
sbbb
lea
sub
mov
dec
lea
jmp
data16
adc
arpl
clc
cmp
shll
lock
divl
jp
pop
mov
das
lcall
test
xor
mul
push
or
push
lds
cli
stos
mov
xchg
lret
mov
mov
jge
and
movsl
imul
cmpsb
sub
cwtl
dec
ljmp
inc
ja
pop
fwait
push
and
mov
hlt
push
and
add
xchg
xchg
jns
dec
out
movsb
cmpsl
imull
add
add
add
jb
push
in
inc
pop
loop
inc
ljmp
pop
and
mov
int
je
push
jg
ss
mov
aaa
in
mov
push
inc
jns
sub
shlb
shlb
pusha
inc
xchg
xor
test
xor
adc
aam
mov
rorb
pop
scas
imul
pop
pop
xor
test
lahf
mov
pop
pop
cmpsb
mov
pop
sbb
das
cltd
dec
mov
mov
pop
add
pop
inc
push
comiss
sub
inc
loopne
je
lret
jp
call
icebp
add
push
adc
bound
push
test
stos
xchg
xor
fmul
xor
fadds
jle
mov
dec
mov
mov
xor
syscall
leave
popf
scas
pop
int3
and
lret
push
jp
add
mov
out
dec
fcoms
lret
push
jo
out
jae
add
lcall
fbstp
lcall
add
adc
pmaddwd
xchg
or
sub
enter
mov
test
push
cmp
vaddss
ficoms
cmp
outsb
imul
push
mul
imul
jae
push
inc
js
cli
sbb
push
sub
mov
gs
fmuls
mov
int
imul
aad
mov
adcb
repnz
push
inc
pop
shr
lds
push
push
xchg
dec
inc
stos
stos
xchg
out
jae
mov
inc
int3
pushf
lock
lcall
aaa
fldt
rcll
std
pop
sub
jp
loope
jle
les
pop
sbb
stos
aam
mov
sub
icebp
movsb
test
repz
mov
stos
adc
jbe
les
test
shll
pop
sbb
fwait
dec
pop
nop
mov
adc
aas
cltd
pop
sbb
sbb
xchg
loop
paddsw
add
mov
pop
ljmp
xchg
dec
mov
add
jl
cs
idiv
fnsave
lock
add
pop
add
add
inc
cli
cs
xchg
sub
dec
in
ss
adc
xchg
cmp
adc
fucomip
mov
int3
or
shrl
inc
cli
xlat
add
cmp
aas
and
aad
push
cmp
or
pop
mov
dec
sbb
lods
mov
imul
sti
ficompl
imull
adc
push
and
xor
test
dec
cmp
xor
int
xchg
xchg
add
jmp
jo
and
pop
cmp
add
scas
sub
lods
jmp
or
and
int
int
repz
mov
inc
xor
aas
nop
pusha
jb
mov
xor
popa
add
out
jnp
inc
imul
and
into
mov
and
xchg
sahf
push
sub
insl
mov
fimull
cmp
cmpsb
mov
arpl
mov
xlat
sbb
xlat
in
xchg
mov
vpsllq
xor
jns
inc
adc
xchg
jg
xchg
call
pop
cwtl
in
addb
pop
add
add
sub
cmpl
mov
pop
push
or
fldcw
and
fldt
xor
mov
jge
dec
les
scas
fwait
out
fdivs
in
and
jae
popf
aaa
fnstcw
cmpsl
pop
js
mov
and
int3
push
fwait
lret
sbb
lahf
out
mov
out
mov
jo
inc
cmp
push
sbb
push
outsb
push
movsb
je
fidivrl
mov
lret
adc
jge
and
or
jb
or
pop
pop
enter
in
mov
imul
aad
lret
cmpsb
sbb
icebp
mov
enter
icebp
outsl
cmp
addr16
ja
mov
clc
rcr
cmp
add
shrl
mov
imul
push
cmp
push
mov
outsb
and
jne
and
lret
pop
fcom
aad
pop
jge
mov
fstps
mov
or
aas
add
sti
iret
test
sub
sahf
arpl
scas
addl
add
pop
sbb
arpl
xchg
aaa
loope
test
daa
push
gs
xchg
pop
xchg
xor
jle
int
and
cmpsb
cmp
movsb
mov
adc
into
lds
mov
movsl
xor
rorl
movsl
cmpsl
lcall
pop
dec
popf
mov
xchg
xchg
addps
mov
nop
jg
push
lret
inc
xor
aam
shrl
sbb
xchg
pop
lods
xor
pop
aad
fcom
dec
ss
bswap
pop
sbb
pop
cltd
add
and
insl
lahf
outsl
jle
mov
jmp
insl
les
pusha
xor
adc
es
fistpl
aam
arpl
cld
arpl
or
xchg
or
pop
fimull
rcl
addr16
idiv
into
movsl
leave
mov
clc
add
cs
push
add
xor
ja
pop
jmp
push
jb
add
outsl
xchg
inc
lahf
sti
hlt
out
mov
cmc
mov
add
add
add
lahf
cltd
insb
jge
mov
jo
data16
test
aas
mov
push
idivb
pop
or
mov
dec
fdivrl
pop
pop
iret
jo
inc
fnstenv
test
test
jecxz
mov
add
les
cmp
mov
outsl
lock
ss
int3
adc
aas
adc
dec
or
xor
push
sub
lods
scas
gs
mov
lret
pop
scas
pop
rcrb
and
into
or
ret
xor
jmp
mov
insb
into
xor
lret
mov
or
push
cmc
fs
xacquire
out
aam
pop
jge
psraw
lret
insl
in
pop
jecxz
movsl
inc
xchg
in
sub
jmp
pop
outsl
fcmovu
scas
pop
mov
cmp
push
cmpl
xor
push
sbb
pushf
pop
pop
xchg
fwait
jge
sbb
pop
out
popa
lods
xor
and
mov
xor
mov
mov
cmp
addl
pop
add
add
xchg
and
std
test
aad
rcr
xor
cmpsb
cmp
test
test
mov
mov
getsec
adc
push
or
pop
in
call
push
fdivs
es
push
pop
mov
dec
rcll
jae
adc
mov
inc
xchg
pushf
mov
mov
push
push
mov
mov
test
cmp
dec
and
ljmp
or
in
xlat
sbb
mov
pop
mov
dec
ds
test
fbld
add
mov
mov
pop
lea
loop
push
loopne
ja
insb
je
inc
xlat
xor
cmp
lret
push
dec
dec
mull
add
cmc
icebp
rcrb
cmc
scas
outsl
mov
sub
addb
jl
add
shrl
xor
clc
test
add
pop
test
ljmp
roll
mov
test
add
add
add
or
adc
dec
rolb
lods
leave
cmp
daa
jo
jle
dec
pop
test
fdivrs
ffreep
lods
test
push
sub
cmpsl
movsb
mov
daa
adc
pusha
test
adc
cmp
dec
mov
xchg
push
jl
push
shlb
ja
popa
notl
mov
adc
stos
push
inc
aam
jl
or
or
mov
das
fists
mov
popa
xor
lahf
dec
in
data16
jb
pop
sbb
mov
or
mov
mov
xchg
ret
push
push
out
mov
popf
out
js
dec
mov
push
xchg
cmp
adc
lahf
or
add
mov
ljmp
aas
or
aad
stc
stos
cmp
push
cmpsb
xor
mov
adc
cs
or
addb
out
xchg
fdiv
mov
cmp
cwtl
and
add
add
add
arpl
jnp
sbb
adc
jae
test
add
add
add
push
fwait
dec
std
push
dec
notl
or
insl
mov
xchg
sbb
aas
dec
jle
ficompl
mov
fstl
fsts
push
cmp
loop
jle
repnz
xor
mov
dec
mov
mov
loop
enter
sbb
aad
outsl
sarb
in
jne
out
fisubrs
dec
and
dec
push
wrmsr
mov
adc
ja
scas
mov
pusha
mov
add
lahf
cmp
test
and
sub
nop
push
cli
xchg
popf
leave
sub
push
push
sti
test
out
leave
cmc
insb
cmp
cmp
xchg
jecxz
or
mov
mov
adc
jmp
mov
out
or
movsl
jne
jno
clc
mov
sub
jecxz
addl
mov
mov
mov
xchg
pop
cmpsl
test
dec
pop
push
push
in
roll
ss
decb
add
aas
or
mov
sub
nop
pusha
rolb
add
sti
xchg
jge
cmpsb
iret
dec
mov
mov
inc
imul
mov
cmc
xchg
dec
xchg
mov
or
pushl
aad
sbb
ror
jae
adc
pop
mov
or
scas
aam
add
or
fstps
hlt
popf
std
inc
pop
das
stos
rcrb
jle
inc
mov
mov
cmp
sub
sti
mov
push
xchg
mov
dec
jp
xor
and
repnz
imul
lods
or
pop
ljmp
xchg
cmpsb
arpl
int3
add
inc
and
repz
js
inc
out
inc
je
out
xchg
dec
and
sbb
xor
pop
push
or
jne
shll
adc
in
call
pushf
sub
movsb
jns
rolb
loop
sub
adc
ret
jnp,pt
cmc
andl
and
mov
add
add
push
outsb
fisubrs
fmuls
pop
add
add
pop
or
or
or
hlt
adcb
loop
ds
ret
lahf
push
fyl2xp1
dec
and
rorb
inc
jno
jae
gs
lock
mov
xchg
jae
xchg
adc
or
fadds
leave
out
gs
fbstp
lea
int
rorb
cwtl
hlt
mov
out
icebp
jl
outsl
push
ret
xor
xchg
xchg
lcall
sub
mov
push
sbbl
and
sub
mov
jp
mov
lret
clc
loopne
mov
mov
mov
adc
and
mov
shll
and
xor
push
nop
aas
xchg
xchg
jbe
out
push
stos
lds
push
mov
shlb
clc
dec
mov
data16
add
mov
xchg
sub
loopne
add
pop
add
add
push
adc
mov
push
xlat
shrb
jmp
lods
xchg
lret
mov
ss
mov
popf
lret
rcrb
cmpsl
enter
xor
inc
aas
mov
push
inc
and
push
cmp
fstpl
data16
int3
das
pop
cld
xchg
sub
push
aam
xchg
lock
dec
and
out
cmp
insl
or
jl
arpl
pop
insb
inc
icebp
movsb
lahf
ss
push
cmp
in
out
mov
dec
mov
jo
inc
xchg
stc
gs
adc
in
cmpsl
ret
pop
aad
ret
sub
mov
jl
cmp
dec
xchg
pop
scas
test
push
les
pop
in
out
shll
loopne
lcall
xchg
aam
orb
pushf
fmul
bound
es
stos
inc
jno
xor
push
lds
call
mov
call
daa
pop
add
add
add
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
in
out
in
cmpl
gs
sub
adc
lcall
mov
lret
cmpb
add
or
lret
inc
jb
push
push
ljmp
and
gs
push
stc
lods
pop
and
sub
add
pop
dec
xchg
xchg
mov
or
or
xor
xchg
or
xorb
hlt
pusha
jecxz
mov
xor
push
and
mov
lret
into
addl
or
dec
or
aad
jne
ds
push
jle
xchg
inc
repnz
js
mov
mov
loope
mov
push
aad
pop
inc
adc
dec
sbb
jg
inc
pop
inc
adc
inc
in
pop
out
mov
xchg
loop
jae
xor
sbb
dec
dec
jle
cmp
lret
pop
jmp
adc
jnp
lds
add
adc
std
and
xchg
rol
mov
out
mov
add
add
add
lock
out
lahf
adc
addr16
and
jne
enter
mov
cmp
in
push
icebp
fcomp
sub
imul
arpl
lea
aam
dec
lret
movsb
popf
lcall
sbb
pop
or
leave
adc
js
test
int
ret
cmpsl
sbb
aad
jge
xor
das
mov
adc
add
jb
into
call
mov
adc
push
mov
icebp
inc
jne
mov
dec
pop
mov
mov
into
repnz
pop
mov
and
mov
mov
fnsave
ds
sub
test
fisttpll
xchg
push
and
push
mov
dec
xchg
mov
xchg
xor
adc
lret
sti
sbb
mov
sub
les
mov
cs
add
lods
les
jnp
mov
add
cmc
mov
add
add
add
dec
test
imul
je
push
xchg
pusha
cmp
adc
in
movups
test
lahf
data16
repz
lds
lahf
cmp
xor
or
insl
psubd
and
xor
xchg
adc
xor
inc
mov
sub
xlat
mov
lods
aas
pop
mov
xorb
jo
repnz
arpl
inc
jbe
mov
xchg
stos
xor
dec
push
dec
adc
add
ret
inc
pop
je
inc
pop
clc
pop
cmp
jb
sbb
into
cld
inc
push
inc
cli
insl
and
jae
dec
pop
mov
or
pop
sarb
mov
test
sub
fcmovne
imul
adc
int
pusha
push
call
test
fs
lock
adc
in
jge
lds
lcall
inc
or
test
out
xchg
fistpl
add
cld
mov
add
add
add
xor
insl
jl
scas
insb
fisttpll
mov
aaa
and
ret
mov
in
out
addr16
push
ret
sbb
dec
mov
and
cltd
push
rol
cmp
stos
xor
dec
arpl
xchg
inc
push
dec
sub
mov
fadds
mov
mov
mov
pusha
mov
hlt
or
xchg
fbstp
out
mov
sub
xor
jp
mov
mov
mov
adc
sub
sub
ss
pop
jmp
mov
lcall
push
mov
jle
xchg
push
cwtl
cmpsb
push
push
adc
nop
pop
sbb
xor
pop
mov
outsb
jne
mov
xchg
xorb
push
js
mull
loopne
push
in
sbb
adc
mov
xchg
mov
in
mov
jg
imul
and
dec
gs
cmp
ljmp
dec
push
ret
adc
add
add
jne
inc
iret
cmc
sub
push
xchg
shll
into
movsb
xchg
sub
fidivrl
popa
jle
incl
orl
pop
mov
sbb
jmp
rcll
insl
fidivs
xor
sbb
add
pop
aas
and
push
jo
popa
lea
jmp
fists
test
pop
dec
mov
jb
subb
xor
clc
sarb
stc
mull
add
rcl
lret
mov
cltd
cmc
jo
loopne
xchg
jmp
iret
test
mov
jb
fwait
insl
mov
les
xor
ljmp
inc
jnp
rcrb
mov
push
xor
fistpll
insl
call
loopne
mov
dec
hlt
mov
int3
mov
adcb
ret
push
out
scas
cmpsb
mov
xchg
lds
cmp
push
push
in
negb
pop
jo
push
push
adc
inc
popa
push
mov
push
xor
test
pop
sub
daa
adc
aaa
shlb
cmc
div
mov
shrl
or
add
xor
lock
in
mov
ret
fiadds
add
and
in
fildll
pusha
xchg
jns
adc
jmp
loopne
add
scas
fwait
popf
xchg
addr16
dec
not
mov
jbe
dec
outsl
xchg
cmpsl
cmpsb
inc
int3
add
in
pop
retw
dec
sub
xchg
and
mov
loope
pop
ret
pop
lods
stos
mov
dec
addr16
sbb
xor
pop
xchg
fdivrl
xchg
xor
fcmovnb
fbstp
or
push
fisttpl
decb
jae
cli
stos
inc
lea
mov
xchg
cmp
inc
lahf
les
mov
loope
adc
insl
cmpsl
into
pop
cmp
sbbb
pop
mov
cld
cmp
out
imul
xor
jns
ret
mov
push
pop
repnz
into
sub
add
add
inc
mov
adc
outsb
addl
in
pop
push
nop
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
loopne
mov
test
addb
movsb
leave
and
xchg
in
jbe
jmp
popa
jecxz
nop
sub
rol
loop
adc
mov
and
cld
mov
popf
cmp
stc
add
movsb
cmp
xchg
mov
lods
test
xchg
pop
jl
push
jg
popf
jecxz
int
ja
adc
inc
dec
adc
lods
int
mov
outsl
cmc
jmp
in
sbb
add
mov
xchg
push
repz
dec
ds
mov
fs
push
sub
pusha
mov
jno
inc
imul
roll
add
inc
adc
sbb
out
fbstp
xor
inc
lret
pushf
pop
xchg
lcall
in
sub
mov
sub
repnz
bound
inc
rol
xchg
or
cmp
inc
fstpt
addl
and
shll
dec
cmp
shll
cmpsb
jcxz
mov
sbb
pop
add
add
sub
jns
sbb
dec
mov
mov
stos
fxch
inc
das
cld
sahf
jmp
jne
cmc
movsl
cmp
push
das
xor
or
mov
add
xor
imul
xlat
or
and
push
fstl
pop
adc
inc
jae
sbb
pop
cltd
xor
neg
bound
jbe
push
ficoml
dec
cltd
pop
in
cmp
in
inc
ljmp
inc
push
jb
insl
and
mov
sbb
sbb
fcoml
jmp
jnp
mov
add
push
push
mov
int
jns
arpl
jp
and
dec
mov
cmpsb
repnz
mov
adc
and
jecxz
shl
push
outsb
stos
mov
pop
adc
cmp
in
sub
cwtl
imul
and
pop
pushf
mov
xchg
ret
jne
pop
and
add
clc
jnp
jg
in
cli
push
push
mov
xchg
add
pop
add
add
outsl
mov
pop
ljmp
scas
inc
or
add
loop
mov
adc
dec
xor
jg
dec
jae
xor
insl
xor
sahf
into
mov
push
sbb
xor
mov
mov
loopne
shlb
dec
fistps
in
stos
jne
pop
add
add
cmpl
adc
cmpsb
xchg
sub
subl
mov
adc
imul
sbb
mov
sahf
xchg
hlt
in
pop
repnz
add
in
dec
sbb
xchg
fnstcw
rcll
aas
mov
mov
mov
jg
jl
out
jae
filds
fisubl
lret
sbb
and
dec
adc
scas
jle
mov
movsb
stos
xor
addr16
dec
or
pop
cli
cli
inc
xchg
mov
push
fdivr
dec
add
lods
faddl
fbstp
cld
fidivl
in
cwtl
scas
aad
xchg
add
pop
add
add
orl
cmpsb
rcr
aad
xor
sbb
xchg
insb
add
aad
std
lret
fcmovne
lahf
dec
lret
jmp
stos
push
dec
pop
jmp
in
imul
add
ficomps
mov
lret
mov
je
inc
and
push
jbe
add
ljmp
cmp
sbb
cld
loope
pop
mov
inc
sub
imul
push
lret
dec
lret
jmp
jl
loopne
xor
push
cmpsl
clc
cwtl
xor
pop
inc
xor
jg
icebp
out
sub
adc
leave
add
jne
xchg
les
mov
ljmp
arpl
repz
ljmp
xchg
jno
std
sub
mov
ja
es
xchg
mov
cmp
cmp
add
cmp
test
fdivrl
mov
lea
inc
inc
out
imul
cmp
cli
sub
loop
push
aaa
cmpsl
rol
jl
sar
std
jle
testb
daa
inc
dec
add
add
add
mov
std
pusha
jne
ficomps
pop
push
lock
inc
cmp
cmc
lock
sbb
mov
inc
cmp
lcall
cmpsb
daa
les
test
mov
rclb
fists
and
sbb
mov
push
adc
cmpsb
movb
daa
mov
in
inc
aas
pop
pop
adc
mulb
and
icebp
pop
dec
clc
orl
and
scas
sahf
push
lahf
mov
fs
das
xchg
cli
mov
gs
xchg
and
lock
mov
roll
xor
aaa
imul
and
mov
cltd
pop
xchg
jnp
cmp
sub
sahf
adc
add
shll
scas
mov
push
cli
mov
mov
rolb
mov
mov
sbb
dec
shll
inc
bound
repz
out
pushf
notb
dec
jmp
cmp
cmp
mov
xor
add
pop
add
add
test
lret
fsubrl
add
sub
inc
jg
pop
push
fistpl
imul
call
dec
int3
and
adc
xchg
adc
test
push
in
notl
pop
outsb
jb
xor
subl
mov
push
inc
pop
in
xchg
loope
add
bound
dec
xchg
cmp
stos
xor
rol
xchg
jmpw
add
pop
cli
call
dec
int
add
rorl
xor
cmp
or
push
mov
cli
cs
or
pop
stc
clc
pushf
in
lea
into
fldt
mov
dec
mov
inc
jl
lahf
and
or
push
cmp
adc
inc
lret
xchg
jle
arpl
sbb
or
lods
dec
icebp
stos
stos
inc
test
and
jmp
imul
dec
mov
loopne
lods
not
adc
lds
fwait
and
popa
mov
sub
mov
pop
add
add
jg
fmulp
inc
jle
mov
js
add
aad
shr
ficoml
fidivl
xor
jl
sub
icebp
cmp
push
dec
push
pusha
fsubrs
dec
data16
cmp
popf
lret
je
and
xor
push
mov
out
xlat
ss
jb
jmp
push
push
xchg
cmpsl
and
adc
mov
repz
lea
jo
jne
lret
mov
fisttps
imul
pop
int
shlb
xchg
test
lahf
or
stc
sbb
lock
ja
push
pop
jle
sbb
jle
outsb
jno
cmp
cmp
gs
sti
mov
add
mov
xor
push
rcrl
jl
cmpsb
enter
stc
add
push
lds
mov
or
orl
jo
xchg
dec
addb
add
push
and
xlat
aas
insb
lods
ret
pop
inc
pusha
inc
xchg
add
pop
add
add
cmp
idivb
pop
adc
in
xchg
cmp
aaa
inc
push
jg
xor
pop
hlt
icebp
jns
jg
adc
sti
dec
jg
test
sbb
fwait
mov
dec
fisttpl
mov
sub
add
dec
add
push
jb
in
pop
leave
aas
or
xor
mul
push
int
and
mov
jb
rolb
test
push
push
fdivr
inc
cld
cmc
dec
mov
das
mov
out
jbe
inc
sbb
mov
xor
out
sub
mov
jg
imul
xor
and
dec
cmc
cmpsb
mov
cmp
inc
insb
cmpsl
dec
sbb
sub
inc
jbe
pop
test
push
int
xchg
or
rorb
je
rcrl
push
jne
xchg
ljmp
lret
or
pop
out
mov
imul
outsl
fistpll
pushf
jb
in
dec
cwtl
add
pop
add
add
mov
scas
adcb
popf
or
out
jnp
sbb
pop
cld
inc
pop
lods
jne
mov
loop
shlb
mov
dec
push
push
repz
insb
or
rorl
movsl
addr16
dec
mov
add
or
mov
pop
pop
lock
pop
or
in
jnp
pop
adc
repnz
stc
push
add
arpl
mov
cmp
jecxz
movsl
mov
test
pop
jae
inc
repnz
jno
leave
mov
popf
xchg
cmp
scas
insl
les
out
dec
cltd
es
rorl
gs
mov
mov
mov
je
and
outsl
das
lret
xchg
mov
into
inc
push
xchg
rorl
fcmovbe
dec
mov
xchg
lret
add
inc
daa
bound
jl
mov
inc
cmc
jne
adc
js
cs
xor
ret
inc
inc
xor
pop
fiaddl
jae
mov
in
adc
sbbl
xorl
mov
test
push
cltd
add
pop
add
add
mov
test
shlb
push
rorl
lahf
and
arpl
sahf
fsub
int
dec
aas
clc
sub
jo
push
je
push
lods
cltd
xor
and
or
mov
es
stos
dec
jl
jg
or
popa
cmp
xchg
outsl
rol
cs
addb
xor
push
rorl
or
imul
xchg
mov
jns
jp
jne
enter
sbb
sbb
push
call
insb
stos
add
lds
je
adc
nop
xlat
push
test
inc
sbb
int
xchg
in
sbb
xchg
mov
sub
adc
popl
iret
ss
dec
mov
lock
and
xor
call
jnp
clc
cld
pop
js,pt
and
insb
fimull
sub
pop
pop
fiaddl
inc
and
mov
jecxz
divl
jno
jecxz
inc
cli
int
add
imul
sbb
leave
dec
inc
and
bound
add
pop
add
add
add
or
mov
sbb
div
cmpsl
inc
push
add
and
mov
shr
sub
stc
or
inc
jo
aas
sbb
pop
stc
pop
dec
xchg
loope
icebp
je
dec
popa
fnsave
xchg
sbb
sub
pop
xor
inc
add
xchg
sbb
dec
lahf
shl
mov
pop
adc
andl
cli
in
fistps
scas
push
jmp
test
adc
xchg
fisttpll
scas
stos
imul
inc
jo
add
stos
hlt
push
push
sti
push
movsb
jmp
imul
lcall
pop
pusha
lock
gs
xor
mov
fsubrl
inc
pop
push
fcompp
lret
mov
mov
lock
cli
and
iret
je
jne
in
roll
push
pop
sub
jle
es
pop
push
xchg
stos
stc
xchg
out
sbb
in
lea
into
push
sbb
mov
enter
or
inc
das
cmc
and
mov
jge
jg
ljmp
out
stos
cmpsb
or
pop
fwait
add
pop
add
add
jecxz
push
ja
mov
jmp
push
mov
shl
mov
push
adcl
aad
push
mov
fs
adc
jo
ret
and
loope
jno
cwtl
lods
mov
xchg
add
divb
jne
jno
mov
inc
ret
adc
test
in
jno
ja
loopne
mov
dec
inc
and
cmp
aaa
cld
dec
mov
les
mov
dec
filds
lock
adc
rcll
inc
push
mov
pop
pop
push
dec
mov
sub
jo
iret
xchg
add
mov
jb
sub
sub
cltd
pop
mov
aad
adc
sub
cmp
in
adc
lds
push
mov
mov
sub
cwtl
xor
or
and
out
addr16
cmp
out
or
cmc
cmpsl
cmpsb
cld
and
push
shlb
pop
std
loope
mov
add
cltd
sub
out
xor
cld
sti
outsl
icebp
jge
pushf
add
pop
add
add
aas
mov
push
fnstenv
mov
jmp
xor
movsl
inc
jbe
push
sbb
lods
mov
jl
dec
jb
stos
packsswb
jb
sub
pop
sbb
dec
inc
sti
xor
add
xchg
popa
xor
popa
std
std
mov
test
cld
or
pop
xor
mov
mov
iret
out
shl
mov
mov
cmp
lds
pop
insb
adc
sub
push
jo
jnp
movsb
mov
or
rolb
add
dec
sub
inc
dec
jecxz
iret
mov
fcompl
jnp
pop
add
mov
mov
and
cmpsb
fidivrl
fst
and
dec
ret
fs
lret
xchg
cwtl
dec
sbb
pushf
and
sub
cld
shl
wrmsr
add
pop
adcl
cwtl
push
cmpsl
or
in
dec
pop
dec
fisttps
xlat
add
dec
fcompl
shlb
lahf
and
add
pusha
test
je
push
test
pop
enter
add
add
add
push
pop
add
cmc
pop
cmp
cmp
das
mov
scas
mov
xchg
ret
jge
arpl
leave
jg
in
push
mov
aam
mov
enter
and
push
test
push
or
push
push
or
inc
mov
mov
pop
fdivl
or
movsl
ret
cmp
iret
sahf
adc
jo
and
out
fmulp
fdivs
push
decb
inc
jl
mov
cmp
cmp
jge
stos
push
cmc
dec
ja
sub
mov
aam
mov
call
xchg
sub
arpl
cs
movsb
mov
jl
cmp
inc
mov
xchg
mov
push
jmp
les
xchg
mov
xor
and
mov
scas
int
dec
add
and
cmp
xchg
adcb
push
add
mov
repz
repz
and
inc
jae
add
pop
add
add
jne
imul
xchg
das
pop
xchg
dec
jbe
push
push
mov
and
cmp
mov
and
add
adc
sarl
add
push
insb
js
xrelease
add
cld
popw
pop
xor
sub
xchg
hlt
fadds
mov
sub
xchg
hlt
aad
shlb
xorb
pop
jg
and
pop
and
add
jmp
fdivr
aad
xor
pop
das
jae
inc
pop
sbb
pop
cmp
mov
pop
idivl
pop
test
andb
ljmp
sarb
xchg
shlb
inc
enter
fsubr
adc
mov
inc
cmp
push
outsb
dec
arpl
dec
shlb
hlt
testb
fldt
pop
ja
xchg
add
mov
sbb
lret
cltd
jl,pt
ja
cli
sub
pop
inc
fiadds
movsb
mov
mov
pop
or
jne
lahf
add
pop
add
add
xchg
adc
mov
mov
push
push
je
loopne
es
sbb
mov
lahf
cld
inc
xchg
mov
xchg
popf
fs
rcrb
mov
out
cmpsl
test
arpl
xchg
push
js
mov
sahf
cmp
mull
gs
cwtl
dec
in
clc
or
mov
shlb
mov
out
test
pop
jecxz
mov
test
ds
lods
out
mov
cmp
sub
jp
loope
jo
lods
out
inc
shlb
jle
pop
ss
mov
les
adcb
sbb
imul
ljmp
push
loopne
outsb
divl
mov
mov
push
int3
dec
imul
cmc
pushf
or
inc
xchg
mov
sbb
lea
adc
cmc
or
inc
pop
cwtl
push
xor
add
pop
imul
subb
adc
or
adc
das
bound
cmp
add
add
add
std
stos
sbb
dec
andl
in
aas
mov
push
daa
add
lods
aaa
or
nop
jbe
in
icebp
and
mov
shll
dec
mov
movsl
push
cmpsl
dec
jmp
add
mov
fists
and
and
es
in
addr16
in
inc
popf
lret
outsl
xchg
in
lds
cltd
or
ret
pop
cmc
push
push
add
mov
test
xor
jle
aam
cs
scas
push
ret
adcl
jno
fimull
ficoml
dec
or
sbb
dec
ja
stos
xchg
mov
hlt
mov
mov
jmp
test
rorl
mov
and
lahf
pop
xor
clc
mov
aaa
std
jmp
addb
das
dec
movsl
icebp
fbstp
out
mov
lret
cltd
inc
adc
mov
lds
cmpsb
lods
fistps
dec
fs
mov
lcall
add
inc
fdivl
push
cmpsl
dec
mov
add
aam
jns
int3
sub
paddusb
cli
pop
nop
jo
daa
sbb
adc
jnp
fwait
ds
ljmp
mov
aaa
push
inc
inc
hlt
sbb
mov
jbe
stos
xor
cmp
fimuls
cmpsb
dec
shlb
jmp
call
shlb
in
int3
jo
pop
and
mov
dec
jb
dec
sbb
arpl
push
out
xor
js
daa
je
sub
daa
xlat
cld
jo
push
add
mov
negl
mov
jne
add
xchg
pop
cld
gs
mov
xor
cmp
sub
divb
ljmp
fidivrl
push
fucomi
sub
movsb
push
fstps
sub
faddl
mov
cmp
xchg
shlb
jo
mov
xor
and
mov
cli
lds
popa
cmp
xchg
pop
in
repz
add
sbb
mov
push
loop
pop
daa
mov
add
sub
add
jl
push
into
jnp
mov
jmp
in
cmp
fstps
jb
loope
push
dec
call
adc
in
andb
jmp
outsl
or
test
mov
adc
into
xlat
movsl
mov
fwait
dec
xchg
and
arpl
fidivs
inc
bound
and
mov
ret
push
jl
push
int3
cmp
outsb
sbb
sbb
inc
add
jmp
mov
mov
add
aam
lret
push
rcll
shr
stc
xor
pop
push
arpl
xchg
js
and
mov
pop
xchg
cwtl
shrb
cli
and
in
das
les
jne
sbb
test
ret
lcall
xor
out
pop
fidivrl
dec
sbb
push
sbb
jmp
aaa
lret
out
or
or
bnd
add
jp
pop
or
aaa
xor
fiaddl
pop
test
stos
hlt
jmp
jmp
pop
negb
add
pop
add
add
pop
xorb
or
xchg
mov
in
scas
push
jo
andb
jns
rcll
lock
jnp
icebp
mov
sbb
and
dec
shll
aam
fwait
xchg
test
es
rcll
fcmovnbe
sub
mov
in
mov
mov
push
pop
fwait
stos
jge
sbb
enter
inc
ljmp
jb
jne
in
cmp
cmpsl
jecxz
sub
mov
lahf
mov
pop
dec
jne
daa
pop
mov
add
lret
jp
dec
movsb
mov
lret
pusha
lods
imul
mov
mov
stos
mov
enter
int
add
sbb
cmp
in
aas
ljmp
jb
dec
xor
jmp
adcb
cmp
push
into
scas
ret
mov
push
jbe
testl
sub
xchg
push
lods
dec
idivl
add
push
nop
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
fnsave
jnp
sub
outsl
push
mov
cmp
mov
cmp
push
push
inc
enter
lahf
rcrl
sbb
inc
cmpl
dec
xorl
mov
shrl
fcomps
dec
mov
mov
shrb
sub
mov
cmp
popfw
in
stos
data16
or
outsb
jg
pop
ss
loope
fcomps
mov
inc
pop
das
lods
roll
lahf
cmc
jecxz
loopne
hlt
lock
cs
dec
fs
aas
out
das
dec
jb
jne
shlb
lret
or
divb
hlt
and
scas
inc
ja
or
mov
out
or
xchg
or
sahf
push
pop
mov
push
push
pop
cs
xor
cmp
cmp
pop
pop
xchg
mov
ja
adc
push
jo
xchg
in
sub
add
mov
inc
fwait
lds
push
sarl
pop
mov
add
pop
add
add
add
inc
data16
push
adc
xor
sti
in
data16
popa
gs
xor
std
inc
into
stc
inc
hlt
imul
popf
xchg
xchg
pop
push
sub
stc
mov
sbb
iret
adc
mov
mov
dec
outsb
sahf
jno
negb
mov
add
xchg
add
dec
das
lret
xchg
push
push
rolb
and
leave
add
imul
leave
fadds
stos
cwtl
sub
xchg
pusha
cmp
call
fucomi
mov
gs
rcll
jle
and
cld
ss
data16
inc
mov
xlat
or
xlat
mov
ret
subb
push
xor
sbb
push
push
sub
lods
jle
push
mov
xchg
cmp
inc
xor
or
call
sub
dec
fwait
repnz
aaa
jp
lret
ret
pop
ficomps
arpl
jb
mov
or
jae
leave
pop
and
add
mov
mov
clc
stos
cmpsb
add
pop
add
add
pop
push
fldcw
or
adc
out
ljmp
or
jmp
sub
add
xor
repz
cmp
in
fwait
xlat
loopne
push
pop
pop
or
pop
lods
sahf
xchg
xchg
mov
cmp
cmp
or
mov
pop
daa
pop
in
jmp
inc
pop
cmpsl
push
aaa
mov
cmp
mov
ds
xrelease
or
out
adc
aam
mov
enter
in
in
push
push
cs
mov
ret
cmpsb
push
dec
jae
loop
or
sarb
or
push
cmp
mov
inc
cmc
sbb
pop
adc
and
adc
pop
lds
mov
mov
xor
mov
inc
xlat
jmp
movsb
cmp
mov
cwtl
inc
std
jbe
fcoms
dec
add
scas
cmpsb
sti
jbe
pop
mov
inc
xor
lret
jnp
sti
jmp
pop
dec
pop
movsb
rcll
add
pop
add
add
jp
mov
ja
lea
inc
ljmp
fwait
testb
sbb
gs
push
mov
and
fucom
sbb
aad
mov
lahf
outsb
shrl
shll
js
push
add
mov
mov
hlt
testl
std
or
arpl
push
mov
dec
pop
pusha
mov
or
movsb
jge
fcomi
cmp
pop
dec
roll
xor
test
jo
mov
sub
loopne
in
inc
fidivs
fabs
xor
mov
daa
mov
cmpsb
fsubrl
push
jnp
and
icebp
jb
push
dec
lcall
arpl
js
xchg
mov
mov
jl
je
cld
out
xor
add
jg
fnstenv
es
xor
mov
push
pop
loopne
fists
adc
adc
mov
inc
dec
mov
and
out
cmpsl
or
mov
jecxz
lock
fmuls
fdivrl
add
add
jns
stc
and
dec
cmpsb
jecxz
lea
adc
mov
movsl
mov
pusha
push
add
std
fisubl
sub
sbb
fsubl
fcoml
fwait
jmp
out
addl
xor
inc
ret
xchg
xor
inc
decl
mov
mov
pop
xchg
jle
mov
inc
in
cmp
xchg
sahf
mov
xor
add
xchg
cld
ljmp
and
and
fs
enter
mul
mov
or
jmp
sbb
aas
pop
inc
adc
mov
sbb
dec
jecxz
xor
cmpsl
inc
xchg
add
sbb
lcall
aam
cli
xchg
jle
test
pop
adc
aaa
call
pop
or
shll
pop
or
frstor
cltd
cmp
push
add
sti
dec
bound
sub
rorl
add
cld
mov
add
movsb
into
int
test
add
movsb
push
dec
xchg
mov
xor
es
rolb
pop
cmpsb
mov
data16
lea
jns
mov
jo
loopne
and
sarl
aaa
jle
movsl
push
mov
nop
les
mov
add
daa
cmpsl
dec
adc
push
sbb
hlt
mov
loop
js
push
dec
jle
inc
daa
jmp
ret
leave
ja
lods
cmc
xor
sub
push
mov
rclb
xchg
shrb
sub
push
imul
mov
nop
in
adc
sub
jg
sub
outsb
mov
sbb
rcll
hlt
movsb
xor
test
add
push
adc
adc
lods
inc
inc
cmp
shlb
mov
xchg
lock
xor
pop
cli
or
movsb
stc
push
dec
shll
fistpl
loopne
xchg
xor
cmp
and
xor
add
out
cmc
mov
xor
adc
stos
add
pop
add
add
and
xor
pop
aam
notb
dec
iret
sub
int3
je
mov
or
fistl
cmpsb
xor
and
cmp
sbb
push
add
fistl
flds
lss
jbe
mov
aaa
popf
ds
xchg
xlat
int3
or
push
andb
lcall
xchg
adc
or
mov
ljmp
lock
ljmp
pop
add
sarl
lods
ret
ret
int
iret
and
adc
adcl
xor
mov
rol
jae
adcl
add
mov
ds
xor
stos
nop
rorl
adc
fcompl
sub
push
and
jne
loopne
dec
dec
negl
xor
rcrb
dec
test
mov
adc
push
pop
adc
fs
arpl
jge
adcb
cmp
add
out
std
dec
std
pop
cmp
cmp
mov
stos
add
pop
add
add
mov
out
sub
cli
imul
fnstcw
jge
cmp
popa
clc
into
or
mov
jmp
int
jne
imul
dec
scas
dec
aad
push
cmp
stos
sbb
xlat
and
dec
fists
cmp
ret
ret
insl
jo,pn
imul
clc
outsl
call
loop
xlat
rcrb
dec
fcmove
sbb
sahf
jecxz
pop
cmp
pop
pop
cwtl
call
insl
dec
call
pop
jae
mov
aad
bnd
push
pusha
aaa
enter
shlb
loop
xor
lods
cld
outsb
popa
and
addb
pop
popa
repz
and
push
pop
fdivs
xor
or
inc
cmp
jp
pop
xor
cmp
je
mov
mov
add
add
xchg
pop
out
fnsave
inc
stc
and
mov
add
fidivs
loop
ljmp
hlt
sub
lock
add
pop
add
add
add
lods
xchg
out
out
push
pop
aaa
nop
cld
jmp
cmc
cmp
cmp
jnp
movsb
jae
movsl
repnz
mov
clc
and
push
nop
adc
je
xor
dec
sbb
lea
push
sub
out
and
jbe
insb
ud1
mov
mov
cwtl
test
int3
fcmove
jge
adc
popf
daa
stc
jae
dec
jae
mov
clc
out
jo
sbbl
in
dec
jp
pop
pop
sahf
bound
dec
das
sbb
xor
popf
sbb
aam
es
mov
inc
mov
outsb
xor
lahf
pushf
cmp
sbb
add
mov
adc
into
xor
sti
test
and
aas
in
fldt
xor
movsb
test
fisubrs
jae
mov
fdiv
adc
les
jg
xchg
mov
rolb
cmpsl
pusha
cmp
mov
insb
pop
mov
hlt
hlt
loopne
push
xchg
jg
jmp
std
push
int
clc
mov
add
pop
add
add
mov
dec
out
call
movaps
jne
addr16
jp
out
jmp
xlat
cmpb
adc
mov
orl
insb
lret
in
sbb
add
scas
jo
ss
scas
push
adc
stc
mov
decl
add
stos
sub
cmp
imul
mov
sbb
addl
push
lea
lcall
adc
test
rolb
dec
fcmovu
sbb
jge
ret
inc
jb
cmpsb
adc
stos
aas
inc
mov
call
cmpsb
popa
sbb
push
cmp
int3
push
dec
dec
add
cs
icebp
xchg
xchg
jg
cli
push
dec
rorb
push
insl
dec
fs
cld
cmp
xor
cmp
mov
mov
lock
arpl
mov
aam
das
or
jg
sti
and
push
clc
divb
repnz
add
xor
dec
sarb
lea
sahf
jecxz
add
pop
add
add
add
cmc
xor
aas
push
and
jno
cmp
cltd
clc
push
push
fidivl
lods
push
jo
push
push
adc
sub
jns
sti
adc
fcmovb
popa
or
iret
mov
fistpl
or
cli
add
jbe
dec
cmpsb
push
xor
movsb
lret
sbb
jbe
outsb
xchg
out
insb
sahf
adc
arpl
clc
push
addr16
loope
lods
fs
cmp
jne
pop
aas
mov
dec
xchg
mov
fnstcw
sti
and
cmp
out
add
and
inc
cmp
or
fbstp
or
pushf
inc
divps
mov
inc
mov
lods
in
mov
push
cmpsl
sbb
mov
sub
sti
shrb
lret
mov
xchg
or
adc
stos
aam
push
xor
push
push
mov
into
add
xor
cmp
or
ljmp
add
fsub
push
push
push
test
and
loop
nop
jo
xchg
xchg
push
std
push
popa
mov
stos
stc
loope
shl
inc
push
movsl
adc
jle
dec
sbb
dec
or
pop
dec
repnz
add
insb
pusha
cmp
sub
inc
adc
rcrb
loopne
lcall
arpl
lods
test
ds
sbb
lds
sub
mov
mov
lods
mov
and
push
call
cwtl
jns
dec
xorb
loopne
dec
pop
int
mov
mov
ds
mov
dec
mov
loop
pusha
ja
jns
popa
movb
out
popa
fimuls
lret
dec
push
rcll
test
daa
int3
sub
aad
testb
pop
jp
hlt
pop
outsb
pop
add
icebp
mov
sbb
movlps
loop
iret
dec
cld
clc
daa
loop
mov
push
add
pop
fnstcw
and
add
jp
les
mov
ret
ja
test
mov
add
add
add
cmp
jb
jg
into
out
pop
faddl
or
ficomps
pop
cltd
mov
or
mov
repnz
dec
fs
stos
sbb
push
test
add
push
jg
mov
dec
idivb
hlt
dec
js
pop
xchg
jg
mov
mov
int
stos
aas
jge
vmovapd
movsb
pop
adc
xchg
stos
push
rorb
jns
mov
imul
sahf
popf
sub
xchg
mov
lret
pop
jp
mov
icebp
xchg
push
dec
ljmp
fldt
enter
jns
xchg
mov
aaa
push
call
sub
cltd
push
push
jl
jns
shll
jns
stos
das
addr16
jns
jge
leave
lahf
test
and
sub
push
cmp
loope
es
jns
dec
ljmp
cmpb
gs
dec
lcall
add
out
add
clc
pop
stc
out
push
push
xchg
data16
mov
popa
dec
clc
mov
add
add
add
cmp
add
and
add
fmul
ds
pop
subl
inc
xchg
in
or
scas
cld
and
or
ljmp
sbb
popa
mov
or
orl
movl
cmpsb
int
repz
mov
out
flds
push
scas
fwait
xchg
jnp
fs
out
adc
push
enter
jp
outsl
je
stos
jb
mov
push
mov
push
out
add
sarb
dec
popf
fstl
lahf
mov
cmpsb
lods
in
shrl
add
jb
lret
imul
mov
dec
pop
daa
cmp
repz
adc
inc
jbe
and
cmpsl
xlat
adc
push
lock
ja
clc
mov
sar
sub
out
test
jg
add
mov
and
mov
hlt
adc
ficomps
add
push
mov
lcall
test
pushl
add
out
into
push
pop
inc
fs
xor
out
inc
jg
sbb
push
leave
fstl
loopne
inc
mov
ja
adc
xor
push
clc
adc
inc
push
decl
cmpl
dec
and
mov
popa
mov
je
add
insl
in
rorb
xlat
or
or
mov
lahf
in
mov
popf
dec
or
fwait
adc
ljmp
cmpsb
shlb
popa
xor
and
test
mov
hlt
loopne
jge
jno
adc
and
xor
pop
xor
and
inc
add
lcall
test
mov
lods
push
push
out
mov
scas
inc
adc
lods
cmp
fisttpll
sub
or
push
cmp
scas
jo
cmc
lahf
jb
mov
cld
pop
rol
mov
cwtl
fistps
orb
xchg
dec
daa
cwtl
roll
ret
xorl
movsl
jns
push
or
push
mov
add
add
add
and
fldcw
pop
repnz
mov
iret
test
fildll
mov
aam
je
std
jge
fs
int
push
not
sub
pushf
dec
xchg
shrb
lret
iret
lock
mov
dec
xchg
inc
mov
mov
cmp
mov
dec
popf
popa
pusha
mov
out
notb
dec
push
mov
push
sub
scas
nop
hlt
scas
test
xor
call
mov
ret
scas
out
inc
push
pop
loope
adc
lds
test
sub
push
xorl
mov
cli
enter
lahf
mov
sbb
pop
movsb
mov
mov
xchg
sarb
mov
addb
cwtl
or
jno
pop
movsl
fisubrl
insb
fwait
jns
push
ret
pop
lods
mov
inc
xchg
dec
test
inc
aaa
lcall
aad
add
cmp
sub
pop
inc
add
pop
sbbl
cli
test
shll
add
pop
add
add
outsb
mov
add
xor
push
mov
push
lahf
mov
mov
mov
sbb
xchg
mov
fldl
jne
pop
push
mov
stc
inc
sub
pop
scas
mov
addb
xchg
fnstsw
cli
orl
sbb
jge
sbb
jg
cmc
imul
inc
mov
and
int
fisubl
in
mov
lret
and
pmaddwd
mov
inc
jecxz
sbb
pop
cli
ljmp
mov
jp
or
in
mov
pop
fwait
je
rol
stos
into
insb
mov
out
sahf
mov
jo
push
dec
mov
xor
and
cli
mov
jnp
add
jb
fsubp
enter
aam
jge
imul
jg
mov
int
loop
push
and
sbb
rcr
jmp
fildll
rolb
add
loop
das
hlt
scas
lcall
stos
push
adc
add
push
add
in
mov
jecxz
out
arpl
sbb
mov
pop
add
add
scas
lods
cmpsb
movsl
bound
jge
xchg
xchg
mov
aaa
jne,pn
pop
bound
fisttps
add
pushf
lret
mov
rcl
xor
out
sbb
pop
jae
xlat
mov
pop
xchg
xor
int3
adc
add
adc
or
loope
pushf
mov
mov
stos
add
adc
pushf
bound
movsl
cmp
xchg
or
ror
repnz
jle
cmp
sub
xor
mov
xchg
cltd
mov
ds
je
js
lret
rcrl
pop
sub
dec
push
andl
xor
sbb
insb
pop
xchg
out
push
hlt
xlat
rclb
lret
push
push
jp
fists
mov
inc
into
lret
mov
cwtl
shr
ljmp
mov
sbb
nop
clc
sti
enter
mov
data16
imul
push
jp
dec
shrl
cmp
lahf
and
int3
sub
push
xchg
test
jg
xor
stos
adc
lock
mov
add
add
add
hlt
mov
pop
sub
xor
out
lret
jae
loop
add
cld
and
in
popa
and
xchg
loope
mov
sahf
or
aam
repz
scas
push
aas
jo
stos
sbb
lods
or
dec
cmp
xrelease
cmpb
sbb
mov
xchg
fs
xchg
fildl
fiaddl
imul
test
sub
inc
leave
mov
mov
sub
sub
sub
ljmp
pop
mov
xor
xor
mov
rcll
xlat
sub
sbb
repnz
adc
mov
movsb
push
addb
movups
xor
cmp
dec
aad
lahf
jns
ds
mov
cmp
mov
out
xchg
fidivrl
mov
fs
cs
js
repz
fidivrs
test
push
xor
inc
hlt
lret
mov
jmp
insl
out
push
loopne
xchg
popa
pop
mov
lock
in
lcall
xor
fs
mov
add
push
andl
stc
cltd
outsb
roll
addr16
pop
mov
xchg
fbstp
ret
xor
xchg
pop
or
ret
push
push
lock
rclb
or
and
jmp
jae
mov
and
xor
push
xlat
adc
fsubrs
jae
pop
js
push
dec
cmp
decl
push
jne
es
sbb
mov
pop
int
mov
data16
out
inc
xor
jp
dec
sti
mov
push
jns
dec
ds
lcall
inc
cmp
popf
icebp
arpl
fnstenv
loopne
sti
test
arpl
aam
outsl
mov
shll
lea
loope
into
leave
rcr
sub
mov
shl
cmc
lea
test
jecxz
lret
push
out
ljmp
mov
add
xor
xlat
sub
dec
jb
imul
dec
arpl
sbb
dec
or
jg
adc
outsl
xlat
sub
sub
add
or
push
das
sbb
xor
jecxz
cwtl
cs
outsb
int
mov
add
int3
lret
nop
loope
imul
std
push
stos
arpl
xchg
in
cltd
cmpsb
pushaw
push
pop
test
cmc
fs
enter
icebp
test
add
lcall
push
sbb
popf
sub
inc
or
or
inc
adc
iret
cltd
mov
jecxz
sub
jge
stos
cwtl
jl
sub
inc
mov
jg
imul
mov
flds
loop
jmp
cmp
adc
xchg
fadds
sub
inc
sub
scas
push
das
inc
leave
mov
popf
shll
hlt
pop
shr
cmpsl
popf
shrb
lods
jns
push
cmc
lret
test
test
jg
mov
shrb
xchg
adc
roll
in
and
fisubl
mov
jge
aam
inc
fs
scas
mov
call
cli
int3
pop
loop
bound
pop
in
faddl
insl
sbb
outsl
mov
xchg
mov
dec
xor
add
add
pop
je
daa
js
mov
push
xor
xlat
cmp
push
loopne
or
sub
mov
icebp
pop
ds
or
xor
in
mov
or
es
jmp
rcll
pop
dec
out
lret
sbb
pop
inc
aam
out
add
mov
mov
insb
adcl
cli
pop
inc
test
mov
lcall
jmp
mov
fisttps
test
jp
pushf
es
xor
xchg
mov
aam
aam
push
cli
sub
add
daa
das
mov
and
push
sub
in
mov
or
insl
into
xor
inc
lods
cmpsb
add
jno
nop
and
lods
nop
pop
lods
push
add
movsl
mov
sbb
add
lea
add
lds
or
xchg
lods
or
dec
movsb
in
jnp
inc
shl
loop
push
in
xor
mov
bswap
jno
add
mov
add
rorl
cmp
loop
mov
sbb
stc
mov
repnz
and
das
popa
lea
addr16
mov
mov
subl
jg
or
daa
out
cmc
add
and
dec
pop
daa
popa
lods
repz
xor
mov
push
les
mov
push
sar
sbb
in
mov
jmp
or
outsl
movsb
cmpsb
data16
cmp
xchg
push
mov
adc
and
je
les
scas
inc
or
es
jge
adc
std
ja
mov
iret
je
aad
roll
aad
inc
out
out
cmp
or
sbb
add
and
movsb
cmpsb
mov
xlat
shl
mov
stos
nop
xchg
sahf
xchg
addr16
cli
fcmovnbe
and
test
int
sar
jp
enter
and
jl
pop
sub
dec
lock
add
add
fistpll
call
repz
add
pop
add
add
xchg
bound
mov
bsf
leave
in
repnz
mov
mov
jl
pop
jge
aam
test
sahf
inc
push
loop
jp
dec
orl
or
jecxz
outsl
push
inc
pusha
dec
or
push
mov
or
push
jle
and
aam
mov
cmc
pop
scas
iret
lret
and
push
adc
push
lret
push
or
negb
lods
dec
and
lahf
add
or
sahf
pop
cltd
ret
mov
mov
add
jg
lds
in
in
and
pop
xor
jbe
mov
hlt
mov
fwait
adc
pushf
lods
mov
pusha
mov
sub
xchg
std
jp
mov
in
dec
ljmp
pop
pop
rolb
mov
pop
lods
mov
call
scas
shll
addb
cmp
cltd
es
pop
js
fstps
add
adc
aad
stos
loop
jns
push
add
std
sti
leave
sti
iret
jmp
dec
mov
adc
add
pop
add
add
pop
pop
push
mov
push
xor
jnp
repnz
mov
call
loop
shlb
mov
lret
aaa
mov
lea
nop
push
dec
mov
pop
inc
jmp
add
jp
inc
je
mov
enter
notb
push
push
mov
les
dec
dec
push
mov
enter
cmp
cmp
sahf
insb
push
cwtl
movsb
insb
imul
sub
in
mov
mov
push
pop
lds
out
popf
ret
notb
add
lret
push
lcall
out
jb
mov
xor
js
xchg
std
int3
adc
push
or
scas
in
xchg
subb
data16
push
and
fisubl
adc
dec
lock
pop
xor
fcom
insb
fistpll
jg
insl
sub
ret
testb
fnstenv
add
mov
xchg
pop
ds
shll
mov
add
or
jb
push
pop
enter
divl
daa
inc
aam
out
or
xchg
testb
cltd
mov
and
mov
std
jne
lret
scas
jp
sub
lods
sbb
cmpsl
push
sbb
fldcw
sub
mov
mov
cmc
fstl
push
pusha
mov
push
push
in
hlt
ret
add
or
data16
lock
aam
pusha
dec
insb
mov
les
and
jo
jge
es
xchg
imul
adc
cmc
jp
ffree
mov
jo
sbb
xor
sub
insb
xor
xchg
and
and
insb
daa
mov
subl
mov
jecxz
pusha
lret
gs
jno
xchg
cmc
push
ja
mov
lods
or
or
data16
sbb
adc
sub
hlt
scas
ljmp
std
cmp
shll
movsl
stc
movsl
lods
jle
xchg
js
in
lret
jl
sarl
fwait
mov
or
jg
mov
xor
sub
push
mov
add
test
jl
pop
and
jno
pop
aas
adcb
lods
mov
jmp
lock
ds
dec
jmp
lret
dec
lcall
mov
sti
push
ds
jae
and
xor
fsubs
lret
cs
popf
adc
push
call
shll
push
mov
cvtps2pd
push
in
int3
int3
shrl
gs
and
jbe
fs
jnp
and
mov
add
into
stc
xchg
xor
ss
mov
pop
fildll
repnz
cmp
ja
shrb
xchg
add
inc
divb
call
setno
adc
adc
stos
cli
dec
ds
xchg
pop
push
aas
sbb
outsb
xor
xchg
sbb
lea
push
sub
and
pop
in
mov
movsl
jge
push
add
push
movsl
aas
cmp
sbb
sub
xor
push
cld
pushl
into
fnstcw
pop
rolb
pop
add
add
movsl
lock
xchg
ret
mov
add
jmp
mov
cmp
cmp
cwtl
pop
pushf
mov
add
call
xchg
in
pop
sub
xchg
dec
imul
add
ss
mov
popf
jnp
insl
loopne
jecxz
fcmovnbe
xlat
loop
adc
jge
pop
test
mov
mov
push
mov
mov
les
adc
clc
ret
xchg
movsb
push
repz
adc
enter
mov
ss
fs
iret
ds
cwtl
imul
xor
dec
aam
cli
add
sbb
push
ss
outsl
and
sub
pusha
dec
dec
add
fcoms
fucomp
add
jp
call
aad
call
pop
pop
nop
adc
fs
mov
xor
inc
imul
jg
jmp
or
outsb
sbb
lahf
dec
sbb
xlat
pushf
shrb
xchg
mov
lods
popa
roll
pop
add
add
sbb
pop
test
mov
leave
xchg
or
int3
and
mov
pushf
or
imul
test
scas
rorl
movsb
ljmp
gs
mov
mov
jno
dec
pop
xchg
imul
xor
dec
sub
es
fnstcw
hlt
mov
jns
sub
adc
dec
mov
adc
out
fldt
jg
shlb
outsb
pop
mov
cmp
pop
jns
in
mov
int3
ds
sti
and
jb
jo
mov
pop
jp
jb
jge
shll
cmp
xchg
pop
xchg
dec
jbe
bound
push
mov
mov
test
jnp
nop
jle
imul
or
cltd
mov
lods
enter
pop
mov
lahf
push
pop
or
or
and
adc
stc
test
fistl
pop
pop
add
test
mov
fucomip
imul
ret
pop
add
add
pop
cltd
ja
xlat
xchg
stos
xchg
inc
sub
inc
inc
sbb
lods
jbe
adc
xchg
inc
cmpsl
ja
xor
mov
push
add
dec
sub
rol
imul
or
stos
dec
in
movsb
lods
orb
clc
push
lret
int3
push
add
push
push
ret
addl
pop
nop
or
adc
or
mov
negl
and
in
inc
jp
imul
or
jp
sbb
adc
enter
pop
fcompl
mov
js
movl
aaa
dec
and
inc
andb
mov
ljmp
inc
rclb
stos
leave
inc
or
xchg
sarl
xor
jns
ret
mov
pmullw
sbb
lea
sbb
lods
jecxz
test
inc
or
cmpsb
mov
xchg
cwtl
adc
jo
inc
sbb
addb
add
add
jne
jne
jg
loop,pt
lret
test
outsl
ret
add
pop
add
add
xchg
dec
push
jecxz
inc
mov
lods
icebp
bound
sub
cmp
mov
push
imul
orb
xlat
pop
mov
sbb
aaa
push
inc
and
in
nop
sbb
mov
test
adc
rcrl
cmp
jecxz
fcmovbe
mov
xor
fildl
mov
push
sbb
stos
dec
mov
shlb
negb
fbld
push
lahf
push
and
pop
ret
les
xor
ds
popf
lods
add
and
mov
or
lcall
add
sbb
leave
loopne
scas
or
js
xchg
add
dec
inc
mov
and
mov
int3
sbb
nop
aam
xchg
mov
jnp
xor
mov
mov
fs
sub
and
lret
in
push
jae
adc
push
test
sti
mov
mov
push
push
and
pop
mov
cwtl
sahf
jo
and
xchg
je
add
dec
pop
mov
mov
dec
add
mov
xlat
jbe
add
pop
add
add
test
clc
sbb
sbb
ljmp
or
adc
xchg
inc
push
inc
adc
dec
mov
aam
test
ficomps
lock
arpl
xchg
pop
fucomp
mov
adc
mov
dec
jle
jge
jns
fmull
xchg
faddl
lret
and
pusha
outsl
jge
pop
daa
jae
iret
pop
out
xor
cld
es
xchg
bnd
adc
outsb
add
movsb
jle
out
inc
xchg
xor
outsl
dec
jns
stos
test
out
mov
mov
movb
jl
lods
imul
aam
jmp
ret
imul
mov
sub
xor
dec
aaa
mov
inc
into
jae
dec
lret
inc
out
sahf
in
idiv
push
adc
loop
lret
lods
dec
repnz
pop
shll
addr16
fs
sub
data16
adc
mov
add
outsb
jle
lods
testl
sub
fs
add
pop
add
add
lds
xor
rep
jbe
movb
or
or
cwtl
into
jecxz
add
and
mov
mov
xor
lock
and
icebp
ficoms
mov
lock
mov
inc
adc
push
into
loopne
sahf
inc
xchg
adc
add
add
fstl
fdivl
push
pop
dec
lods
xlat
jns
add
popa
or
xchg
adc
fnstenv
pop
je
mov
out
pusha
pop
and
xor
push
rclb
xchg
xor
jns
das
mov
aad
fdivrs
jle
xchg
mov
dec
add
dec
stos
out
enter
sbb
pop
fisubs
and
adc
add
test
imul
inc
ret
sbb
jp
pop
mov
lods
inc
fsubrs
int3
xlat
pop
stc
sti
mov
lds
fsubrs
cmp
enter
sub
add
mov
arpl
mov
movb
pop
add
add
add
push
jb
cwtl
add
mov
mov
inc
inc
pusha
lcall
icebp
mov
and
push
jo
scas
mov
xchg
cmpsl
shll
ljmp
mov
cmp
jp
jge
movsb
xchg
push
mov
repz
loop
jge
negl
incl
cltd
push
xchg
icebp
cs
imul
jno
mov
dec
arpl
ja
stos
aas
mov
scas
dec
adc
aam
int
les
adc
bound
fadd
xor
adc
mov
mulb
pushf
ja
and
stos
jmp
in
cli
lea
cwtl
sbb
cli
xor
fs
lock
outsb
test
mov
push
sarl
mov
ffreep
sub
rorb
add
xor
in
inc
fadd
popa
data16
mov
push
and
add
out
sti
xlat
push
aam
or
add
pop
add
add
fucompp
lcall
insl
divl
imul
mov
icebp
aam
push
and
call
jae
fcmovb
adc
dec
out
sbb
mov
cmp
in
add
cmp
aaa
xlat
add
aas
pop
mov
dec
pushf
inc
and
imul
fs
inc
sarb
sub
inc
cmp
out
mov
ss
mov
jmp
jecxz
dec
loopne
iret
test
dec
popa
mov
push
test
je
xchg
sub
fsts
push
cmpsb
dec
loope
pop
dec
or
sti
lret
aam
inc
cmpsl
sbb
inc
shl
cwtd
clc
sub
out
stc
mov
sub
dec
js,pn
imul
push
add
xor
call
mov
and
mov
fsubs
jbe
imul
nop
and
sub
cmp
in
add
push
sub
cmp
jg
dec
das
pop
mov
mov
pop
add
add
jnp
sahf
dec
in
push
lods
int3
and
leave
stos
cs
mov
fbstp
xchg
inc
cli
or
lea
out
dec
jecxz
lock
enter
sbb
dec
gs
lods
notl
mov
cwtl
lcall
insb
pop
lret
mov
and
out
in
sub
clc
out
in
dec
xor
push
fsubrp
cmpsb
xor
adc
mov
dec
cmp
adc
dec
add
cmp
mov
mov
xor
pop
aas
sub
cmp
mov
mov
mov
cmc
bound
add
insl
orb
andl
mov
push
sub
inc
imul
or
aas
stos
and
pushf
dec
adc
pushl
or
xchg
inc
jmp
and
sub
std
dec
adc
mov
daa
aas
push
iret
and
lods
movsl
dec
rcrb
add
add
add
xor
fistpll
out
repz
push
aaa
cltd
leave
add
pop
add
add
jl
neg
mov
sub
sub
push
mov
add
idivb
sub
pop
out
mov
adc
xchg
mov
jnp
add
mov
popf
jnp
jmp
cmp
stos
lock
ror
jns
add
push
fadds
shl
xor
sbb
or
movsl
aad
pop
popa
loop
add
dec
aad
cmp
dec
sub
jg
pop
push
std
lods
ds
add
cmp
sbb
mov
int3
push
out
hlt
fs
sahf
sti
or
inc
jle
scas
dec
mov
clc
mov
mov
jg
fistpll
jge
or
lea
xchg
aam
cli
ss
iret
fisubrs
loope
out
test
inc
jnp
movsl
jecxz
inc
push
mov
push
aas
pop
mov
push
jecxz
or
flds
mov
roll
jecxz
xchg
js
loopne
mov
mov
and
lret
pop
add
add
scas
outsl
push
fucom
mov
leave
pop
push
fisttpll
shl
insb
je
pop
sub
pop
lods
imul
mov
gs
pop
xchg
mov
fbstp
sbb
push
add
ret
fwait
aad
mov
xchg
mov
stos
xor
nop
add
pop
subl
dec
or
mov
cwtl
and
mov
push
je
inc
mov
cld
mov
data16
outsb
enter
int
repnz
push
xchg
pop
sub
add
rcll
pop
mov
jmp
enter
add
cs
pushf
pop
pop
push
inc
adc
lahf
mov
push
add
data16
push
inc
pop
add
inc
fistpll
sbb
pop
lods
int
jmp
sbb
jne
aas
adc
fcomps
lret
sub
cmp
xor
cmc
mov
or
add
enter
in
adcl
cmpsl
lret
add
pop
add
add
sbb
dec
pop
sub
jnp
mov
dec
cmpsl
pop
dec
jbe
push
loop
sbb
push
or
xor
mov
adc
pop
lock
or
mov
xchg
idivl
push
xor
lds
or
jecxz
push
xor
and
out
les
jmp
add
or
icebp
pushl
add
jecxz
clc
add
sbb
fisttpl
xchg
and
add
xchg
pop
mov
sbb
jp
pop
adc
add
daa
xchg
lret
add
mov
das
xchg
xchg
scas
cmp
arpl
frstor
iret
or
das
rcl
xchg
and
dec
push
shll
pop
clc
adc
push
xchg
arpl
mov
pop
scas
adc
sbb
test
add
xchg
hlt
clc
aam
int
jge
shlb
and
sbb
rcll
add
imul
cmc
decl
adc
scas
int3
add
pop
add
add
adc
shl
and
pushf
arpl
sbb
imul
repz
xor
adc
mov
adcb
pop
xor
jecxz
lret
adc
mov
mov
pop
gs
push
sbb
stc
sbb
mov
or
or
adc
test
lods
aad
pop
xchg
shll
pop
cltd
dec
mov
nop
push
cmpsl
fisttpll
sub
xchg
sar
xor
mov
dec
sbb
xor
mov
pop
mov
push
fstl
mov
pop
fcmovne
enter
imul
leave
cli
jmp
push
dec
mov
popa
mov
jne
cs
in
mov
fstps
imul
xor
pop
movsb
push
add
dec
adc
sub
jnp
xchg
jo
ret
jecxz
filds
repz
std
shll
testb
mov
es
fdivrs
add
ja
iret
arpl
or
out
ljmp
add
scas
imul
adc
loopne
cltd
hlt
dec
orb
lds
inc
call
ljmp
in
pop
lods
xchg
mov
xchg
jp
test
jge,pn
mov
cmp
int3
xchg
test
fistps
ds
jg
push
push
dec
adc
dec
push
out
cmc
mov
arpl
and
dec
mov
mov
clc
xor
hlt
jbe
sub
clc
jl
aas
repnz
pop
mov
adc
rcll
gs
hlt
add
cmp
mov
mov
fs
pop
test
sbb
nop
push
insl
shll
pop
mov
xor
cmp
push
gs
and
andl
and
jge
push
dec
mov
sbb
inc
xchg
push
cmp
inc
gs
js
adc
sub
pop
dec
cmp
mov
cmpsl
jno
dec
mov
mov
xchg
add
out
into
shlb
aas
cmp
mov
add
add
clc
dec
dec
adc
rorb
mov
push
pop
cmp
pop
subps
mov
je
adc
aas
mov
inc
lret
mulb
xor
sahf
dec
mov
rcl
and
stos
out
dec
mov
cmp
xchg
pop
fcoms
cmp
mov
inc
xchg
sbb
jecxz
shrb
adc
cld
jmp
cmp
xchg
ret
or
lds
out
or
repnz
cli
js
faddl
inc
ror
xor
dec
push
xor
cmpsl
pop
xorl
dec
cmpb
xchg
xchg
push
ficompl
sarl
cltd
shll
pop
pop
shr
pop
popa
lret
pop
test
je
mov
ret
lret
mov
shlb
into
sub
push
call
cmp
bswap
lock
adc
ret
push
xorl
in
xor
add
loopne
and
je
out
mov
inc
pop
sbb
iret
add
pop
add
add
fsubs
and
in
cmpl
cmp
mov
dec
sbb
dec
and
add
inc
cld
add
jg
adc
cmp
or
mov
add
adc
mov
lahf
jae
add
push
push
out
daa
sub
or
inc
jne
xor
push
jnp
fistpl
or
shlb
adc
jmp
roll
mov
sbb
aad
add
jne
js
fisubl
stos
sbb
call
and
ss
mov
pop
loop
aad
nop
sub
lret
dec
add
pop
lea
aaa
and
add
data16
xchg
xor
iret
jecxz
test
in
cmp
in
insb
push
sbb
iret
fildl
or
dec
and
inc
addr16
inc
dec
add
jmp
pushf
enter
aam
rolb
ret
add
dec
daa
dec
das
outsb
imul
sub
fnstenv
add
add
add
jmp
inc
mov
mov
add
vmread
ficomps
lahf
and
or
mov
dec
mov
fldl
fwait
notl
notb
in
sahf
lea
lcall
fidivl
enter
in
adc
into
cwtl
sbb
int3
gs
ljmp
into
xchg
add
daa
test
data16
cmp
cltd
ficoms
testl
repz
arpl
call
xchg
les
in
mov
roll
lds
nop
pop
sbb
imul
xlat
nop
iret
xor
sub
pop
fisttpll
push
jle
jns
dec
jge
push
inc
test
incb
mov
and
stos
mov
dec
in
mov
add
sub
mov
mov
xchg
jle
and
cwtl
std
lret
pop
mov
pop
xlat
rorb
dec
jnp
adc
sarb
add
add
popf
mov
lahf
xor
add
rcl
add
pop
add
add
cmpsl
dec
mov
movsl
or
push
adc
jl
sbb
sbb
mov
jl
mov
push
icebp
xchg
mov
and
repnz
xchg
rcrb
mov
dec
jbe
inc
shl
inc
cld
ja
dec
xor
pusha
ret
pusha
and
addr16
sub
divb
cmc
mov
mov
stos
movl
rcl
iret
adc
mov
inc
jl
stc
out
pop
fbld
push
dec
in
xlat
pushl
rcl
push
enter
add
sti
test
mov
sub
stos
add
es
jg
movd
shlb
int3
xor
rol
or
pop
and
jo
std
fmuls
mov
cltd
lods
mov
scas
xor
inc
aas
dec
ror
js
test
popa
ret
mov
cwtl
shlb
cmc
int3
dec
or
inc
call
aas
and
mov
dec
mov
out
aas
cmp
and
scas
add
neg
outsl
xor
dec
ret
rcr
rolb
add
add
add
or
dec
or
cmp
mov
sbb
dec
jnp
lret
and
push
inc
inc
sub
xor
loop
push
jb
sar
add
scas
mov
xchg
das
dec
adc
outsb
jle
test
in
lock
mov
imulb
enter
ret
pop
mov
push
jns
xchg
pushf
cmp
jp
mov
sbb
testl
adc
cld
lret
jge
lcall
cmpsl
cmc
adc
xchg
mov
iret
adcl
xchg
xchg
test
mov
adc
nop
add
push
push
fcmovnbe
pop
out
fnop
in
sbb
sbb
lcall
test
faddl
sub
in
lea
xchg
push
cmp
inc
mov
iret
pop
lock
inc
repnz
mov
push
jg
sub
dec
loope
call
dec
dec
pop
cs
add
add
add
sbb
in
and
roll
add
add
add
repnz
pop
xlat
mov
lcall
mul
enter
pop
sbb
dec
cmc
imul
mov
clc
out
cmpsb
pushf
sbb
mov
mov
or
aaa
pop
sbb
push
jb
inc
addr16
dec
pusha
or
mov
pop
push
pop
pop
out
fs
repz
xor
movsl
xor
mov
jb
inc
cli
lahf
into
dec
rolb
jp
mov
outsl
aad
or
out
pop
hlt
scas
enter
data16
inc
add
test
dec
popa
pusha
into
push
mov
inc
scas
add
mov
jne
int
xor
mov
decl
mov
mov
add
test
pop
repnz
xor
mov
dec
adc
cmpsb
push
mov
rorl
mov
cmp
or
jle
xor
in
cmp
pop
cmpsb
and
icebp
pop
adc
repnz
mov
add
mov
pushf
adc
ds
stc
aad
rcrb
aam
add
add
add
ja,pt
push
mov
add
mov
mov
daa
lret
dec
push
loope
pusha
test
mov
aaa
jp
js
mov
nop
out
sub
leave
or
sbbl
test
enter
mov
loop
mov
and
inc
in
jb
daa
push
pop
sbb
jbe
mov
jbe
std
inc
dec
jp
mov
jbe
sar
pop
jp
sarl
rol
inc
or
xor
dec
in
fcmovnb
cld
popa
mov
adc
js
pop
shll
rorl
lcall
das
and
repz
mov
push
arpl
sbb
add
push
sbb
xor
dec
int
ret
in
or
cwtl
imul
aad
jmp
xlat
mov
xor
jp
jbe
das
cltd
mov
jp
and
mov
add
lcall
fucom
pop
js
in
aad
add
add
add
es
cmp
in
xor
fldt
roll
xor
mov
iret
movsl
sub
divb
xor
add
dec
cmpsl
ljmp
outsb
sub
pop
push
adc
ret
pop
jne
xor
sub
cltd
stos
jle
jmp
cmp
dec
test
shll
test
cmp
pop
das
inc
repnz
mov
cmp
jecxz
push
cs
scas
and
xchg
mov
xchg
js
xchg
adcl
add
sub
cmpsl
and
int3
fsubs
push
dec
or
mov
jge
mov
repnz
int3
sbb
lds
iret
push
jae
dec
pop
aad
jae
outsl
arpl
js
and
pop
cmp
js
jae
cli
mov
jne
fwait
addl
sbb
pop
test
lds
cmp
jg
xchg
mov
sub
hlt
add
pop
add
add
insb
sti
popf
xchg
pop
dec
push
mov
inc
or
flds
sbb
in
lret
ret
pop
fwait
rcrl
jb
xchg
stos
xchg
push
jle
xchg
xchg
fildll
cwtl
jl
idiv
xchg
fstpl
fistpll
pop
and
dec
xchg
sbb
mov
cld
lret
sbb
mov
js
jae
in
jnp
and
rcll
xor
xchg
cmp
sbb
add
test
xor
dec
sahf
daa
sti
sbb
mov
add
sbb
cld
aaa
sub
movsb
pop
lock
ja
sbb
push
and
mov
add
in
int
addr16
add
scas
insl
jns
or
mov
push
pushf
sbb
bound
cmp
or
int
imul
cmp
scas
add
xor
flds
dec
pop
mov
lret
push
sbb
mov
mov
addr16
mov
imul
cld
push
repz
sbb
add
pop
add
add
xchg
xchg
subl
mov
adc
pushf
lret
adc
xchg
out
lods
scas
xlat
mov
mov
dec
inc
pop
or
inc
imulb
jle
or
cmp
loope
jns
out
and
and
push
lea
fisubrl
fisubl
lods
fcmovb
jo
faddl
or
xor
repz
mov
mov
jl
mov
lahf
push
push
lret
dec
mov
loop
or
ja
mov
pop
out
test
or
or
arpl
jb
push
std
xor
adc
pop
mov
mov
sbb
xchg
std
xchg
outsb
cmp
je
int3
adc
cltd
xchg
xchg
add
aad
stos
add
push
fnstenv
mov
pop
pop
gs
sub
dec
shl
ret
insb
sub
or
iret
fcomps
rcl
cltd
fisttpl
mov
and
or
dec
in
jo
push
or
add
psubusw
push
adc
xchg
sbb
add
pop
add
add
insb
inc
mov
add
popa
aad
hlt
xchg
xchg
cs
loope
iret
sub
ror
pop
push
mov
xor
sub
stc
cmp
sub
outsb
xchg
dec
insb
mov
in
push
std
or
pop
arpl
ds
psubsw
push
sbb
sbbb
mov
push
test
ret
in
lock
nop
call
mov
dec
divl
mov
cmp
push
int
xchg
jnp
push
push
rolb
shlb
repz
xchg
lods
inc
push
xchg
adc
or
icebp
pushf
inc
xchg
jmp
rorl
imul
jg
mov
mov
cmpb
xorb
shlb
insb
add
test
and
cmp
mov
lea
add
xorb
jo
outsl
mov
mov
mov
mov
add
in
sbb
sahf
cmc
fsubrp
jnp
push
xor
fiaddl
add
add
add
xor
jecxz
pop
fldt
add
sti
mov
ja
flds
fwait
out
sahf
add
mov
fists
addb
into
pop
jbe
subl
in
sbb
jnp
andl
es
and
jmp
fsubl
imul
adc
mov
adc
idiv
xchg
out
jns
dec
ja
mov
jp
adc
cwtl
pusha
inc
xor
mov
sbb
cmpsb
xchg
insl
sbb
gs
scas
inc
mov
inc
mov
jge
dec
and
dec
aam
sarb
xor
jecxz
dec
pusha
mov
ficomps
int3
jl
iret
xor
push
repnz
shlb
cld
icebp
mov
jns
gs
les
or
mov
sbb
icebp
je
lret
mov
jl
mov
aaa
out
inc
into
pop
xlat
and
push
cld
cltd
inc
push
loopne
push
xor
fisubrl
push
add
add
jle
jg
std
fisttpl
inc
push
loop
push
out
fildl
add
add
add
pusha
jns
cmpsb
adc
out
lea
sbb
adc
xor
mov
jo
mov
pop
cmp
jo
xchg
jecxz
rorb
push
sub
hlt
fnstenv
sub
das
pop
xchg
xchg
add
int3
pop
jb
xchg
inc
stc
and
dec
mov
jb
mov
js
lret
sbb
xor
aas
pop
imul
loop
xchg
add
jg
adc
mov
mov
repnz
dec
push
scas
loop
adc
in
mov
adc
xor
cltd
call
rcr
push
insl
rol
scas
mov
aaa
icebp
aad
movsb
mov
test
mov
xchg
sub
sarl
mov
outsb
arpl
adc
cltd
test
rcll
outsl
cmp
pushf
addr16
mov
cmp
mov
bound
add
xchg
jb
adc
add
add
mov
sti
idiv
lods
push
mov
pop
dec
pop
faddl
add
add
add
lret
cmp
dec
test
loop
cmp
mov
jmp
aam
aas
or
push
sub
test
imul
push
cmpsl
inc
loop
inc
jmp
mov
pop
test
pop
fcmovnbe
inc
and
das
imul
xor
xchg
adc
addr16
mull
out
int
call
std
ljmp
add
dec
dec
jns
test
mov
lret
jl
jno
mov
fistpl
hlt
aad
pop
in
fninit
and
aad
fstps
outsl
xchg
ret
stos
data16
inc
rcl
push
or
sbb
add
xor
pop
fisttpll
icebp
inc
pusha
jns
xor
push
mov
mov
jno
dec
shl
nop
pushf
add
xchg
push
mov
mov
ss
nop
and
cmc
mov
jbe
sti
push
and
addr16
adc
pusha
jle
ret
lock
adc
leave
jmp
addr16
xchg
jg
xor
fldl
add
add
add
xor
inc
out
mov
pop
shll
ficomps
mov
ret
push
popf
sbb
rcr
xor
lods
test
adc
scas
cmp
sbb
sub
pop
loopne
adc
sbb
out
xchg
lret
dec
mov
xchg
adc
mov
repz
clc
nop
orb
aad
loope
inc
and
and
push
jp
stos
stos
mov
rcll
push
push
inc
test
sub
imul
push
push
shlb
jge
xchg
or
add
jns
xchg
sahf
and
add
aaa
clc
notl
mov
add
loopne
pop
and
sub
cmpsl
enter
jle
or
xchg
adc
rcrb
lret
insb
inc
imul
movsl
int
sarb
add
in
sub
adc
add
add
push
out
jb
shrl
and
add
add
adc
pusha
inc
mov
push
or
fldt
gs
inc
jnp
imul
lcall
cltd
hlt
push
xlat
cmpsl
cmp
mov
mov
xchg
pop
dec
stos
popa
fdivrl
mov
ffreep
xchg
sub
jg
jo
sub
xor
cs
shlb
stc
or
fisttps
ret
ret
pand
jp
out
pop
movsb
cmp
jb
and
lods
gs
fbld
clc
incb
jb
or
jnp
xchg
mov
lret
pop
loop
mov
aad
dec
negl
dec
sub
mov
mov
mov
pop
enter
sub
rcrl
test
aad
outsb
xchg
jb
ja
xor
js
jns
xor
cmc
movsl
movsb
pop
aam
outsb
xchg
lret
imul
leave
enter
in
iret
shrb
mov
out
jge
divb
arpl
int3
out
xchg
adc
fisubl
loopne
jns
pop
mov
jb
jg
mov
lcall
iret
mov
stc
jle
fistl
filds
add
add
add
repz
jmp
js
or
mov
sub
lock
push
adc
jmp
setb
jl
dec
loopne
sub
push
cmc
mov
mov
or
dec
cld
mov
cmpsl
xchg
loopne
mov
sbb
mov
cmp
cmpb
ss
push
push
js
dec
add
repnz
adc
insb
jp
fidivl
jbe
aas
mov
cld
test
lahf
ljmp
loop
or
in
push
ds
mov
pop
and
or
xlat
cmp
sarb
cmp
add
pusha
pop
mov
jmp
sub
mov
addr16
inc
lret
xchg
sbb
pop
fidivrs
and
enter
jae
mov
xchg
out
int
mov
js
mov
subb
insl
xor
xchg
mov
adc
aam
cmp
in
fcmovb
add
mov
jns
in
popf
out
adc
loopne
add
add
add
or
mov
mov
jbe
jp
or
dec
push
mov
lahf
inc
in
pop
js
adc
fiadds
push
out
lret
insb
aas
push
xorb
fsub
mov
sbb
mov
shll
cmpsb
or
sub
cltd
push
in
mov
cltd
inc
in
xlat
arpl
repz
cmp
leave
in
addr16
dec
sarl
mov
mov
cmp
xchg
fwait
cmc
mulb
pop
mulb
mov
xor
out
cmp
shlb
js
test
movsl
psubw
inc
mov
jno
mov
outsl
push
mov
clc
shrl
xchg
jae
jo
flds
aam
push
jg
inc
test
adc
test
setne
ficompl
xor
insb
ret
pop
call
js
sub
and
or
outsb
imul
lock
mov
shll
and
arpl
inc
pop
mov
scas
in
add
add
add
fadd
fsubp
jnp
mov
dec
idivb
loope
add
add
add
es
cmp
mov
xchg
xor
cld
push
xor
dec
bound
and
xchg
mov
and
ret
in
pop
xor
cmp
xor
inc
inc
cmp
dec
push
pop
pusha
sbb
lds
or
pusha
adc
fwait
xchg
xchg
dec
leave
into
mov
into
pop
cwtl
push
mov
loop
sti
add
jnp
outsb
jecxz
jmp
adc
popf
shr
add
dec
push
adc
rorb
pop
sub
std
mov
lods
ja
or
mov
cwtl
lea
mov
or
or
sbb
pop
into
xchg
inc
inc
jg
addr16
sub
rorl
pop
out
cmp
sbb
mov
sub
imul
mov
adc
gs
int3
rol
inc
xchg
decl
mov
sub
jp
inc
fcompl
add
sub
cld
cli
jle
fmuls
pop
pop
sbb
inc
loop
add
add
add
popa
mov
mov
ffreep
xchg
pop
add
jmp
cmpsb
pop
mov
std
mov
shl
pop
cld
mov
les
fucomp
cmp
mov
add
cmc
dec
mov
enter
cmpsl
out
cmc
sub
insb
movsl
fdivrl
adcl
daa
cmp
fisubrs
movsl
jmp
movsl
in
inc
or
test
stos
ds
loopne
mov
addr16
mov
aas
shll
sbb
pop
adc
dec
rol
sub
dec
dec
pusha
fnstsw
xor
inc
fisubs
adc
xor
sbb
in
movsl
xor
into
lahf
push
adc
and
in
xor
aas
jecxz
out
dec
je
adc
pop
fs
jmp
out
clc
cltd
std
les
rorl
addr16
lods
mov
rclb
jle
dec
mov
add
ja
sti
ret
or
pop
sub
mov
dec
jecxz
add
add
add
scas
aaa
inc
mov
dec
dec
mov
xchg
cmp
scas
mov
mov
fists
inc
data16
fcoms
nop
xor
jae
mov
jge
movsb
dec
inc
loopne
add
or
sub
int
push
bound
and
out
in
lret
add
out
push
push
popa
push
xlat
cwtl
lock
mov
popf
mov
and
pop
inc
stos
iret
push
ret
mov
mov
sbb
adcb
in
addr16
rclb
adc
jne
xor
mov
or
out
jb
addr16
dec
arpl
std
aam
dec
stc
mov
movsl
iret
pop
test
aam
add
bound
adc
test
jecxz
mov
in
xchg
sbb
js
stos
fsubrl
cltd
inc
call
sub
ljmp
mov
test
mov
mov
add
lea
ror
cltd
outsl
mov
int3
pop
or
in
add
add
add
fucomp
jae
out
sahf
xchg
jne
sbb
popf
ja
cmp
xchg
pop
addr16
jmp
or
loop
out
aad
addb
insl
loope
pop
out
popa
adc
push
sub
add
cli
daa
imul
jns
fwait
aad
test
jp
xchg
mov
cmp
jge
push
cwtl
xlat
andl
xchg
repnz
pop
pop
popa
adc
daa
mov
xor
sub
in
lods
sbb
jmp
mov
call
movsl
testb
cmp
sbb
jg
icebp
lods
xchg
dec
adc
push
xor
mov
loop
cmpsl
cli
inc
xchg
pop
inc
stos
sbb
add
push
repz
cmp
leave
insl
rorb
push
mov
adc
out
adc
mov
insb
pop
notl
mov
popf
loope
push
loope
gs
and
mov
xchg
popa
dec
sahf
add
jmp
cltd
cmc
adcb
fcos
add
nop
repz
push
in
add
add
add
mov
sub
jno
xchg
adc
sbb
lret
or
ret
xchg
int3
sbb
cld
pop
sti
sub
jl
or
sub
mov
sahf
cs
push
stc
dec
in
lea
test
clc
jo
adcb
or
out
fcompl
xchg
xchg
je
mov
out
and
shll
cmc
sarl
jl
roll
dec
shlb
mov
sbb
push
inc
jle
mov
adc
pop
in
out
insb
movsb
jbe
pusha
jns
jo
arpl
orl
nop
adc
jle
pop
sahf
stos
arpl
xchg
dec
test
addr16
jmp
repz
mov
ljmp
adc
push
fwait
and
cli
mov
push
ja
in
stos
xchg
ret
pop
sub
pop
xor
loope
xchg
scas
jge
mov
clc
stos
aam
nop
movsl
sbb
or
add
add
lock
jg
mov
test
pop
out
add
add
add
fcmovu
adc
or
sub
mov
mov
sbb
dec
adc
xor
add
sub
xchg
cmpsl
xchg
mov
inc
cmp
ds
add
push
xchg
mov
out
jmp
vcvtpd2dq
pusha
pop
sbb
push
jnp
jb
clc
out
inc
xchg
into
insl
xor
test
das
xor
inc
shll
adc
dec
call
mov
jae
push
cmp
and
arpl
ja
xchg
imul
dec
mov
jae
push
lds
insb
inc
call
add
rcrl
or
inc
aas
fisttpl
loope
sbb
or
xchg
fimull
mov
loope
cmp
add
jo
mov
inc
les
jne
mov
mov
fsubr
fsts
jae
out
sbb
mov
sub
lea
add
outsb
sbb
push
add
pop
xlat
fldt
push
cwtl
fs
add
add
add
repz
cwtl
sbb
test
mov
into
xchg
xor
cwtl
shll
xor
jbe
push
mov
mov
xchg
hlt
and
or
push
lcall
push
inc
mov
movsb
cmp
rolb
int3
or
jle
push
mov
loopne
in
jns
or
into
fsubs
in
aaa
cmp
pop
repz
and
fsub
pop
sahf
xchg
or
jl
out
sahf
popa
repnz
sbb
xor
sub
daa
cmp
je
push
mov
hlt
pop
xchg
adc
popa
xor
xor
lods
inc
pop
mov
out
inc
pop
push
pop
jb
movsb
push
jnp
jecxz
mov
sub
inc
sbb
or
cmpsl
test
pop
jp
xchg
das
jmp
movsb
in
mov
or
test
addl
adc
imul
movsb
loope
push
das
popf
add
mov
dec
js
stc
mov
mov
ljmp
add
int3
jmp
lds
ret
nop
mov
adcl
xchg
dec
mov
mov
cmpsb
pusha
jae
and
pop
mov
xor
mov
int
repnz
mov
nop
rorb
lock
sarb
fdiv
testl
sbb
stos
cld
xor
push
repnz
je
ss
mov
repnz
add
jne
ret
push
push
jnp
jbe
lock
cmp
xor
xor
or
push
xchg
enter
inc
and
jae
cmp
dec
adc
aad
fldl
gs
xchg
ja
sbb
sbb
loope
push
fldcw
addr16
pop
ljmp
loopne
test
cmpsl
dec
and
mov
test
jmp
int3
xor
ret
hlt
sub
mov
cmpsl
inc
cwtl
lds
sbb
add
add
insl
repz
jae
jg
mov
add
pop
add
add
jmp
aam
enter
pop
sbb
mov
jl
mov
jne
mov
and
hlt
sbb
addr16
adc
rcrl
mov
fs
lods
fmull
push
jbe
jecxz
mov
mov
leave
mov
pop
sti
and
mov
jne
fstpl
xlat
rol
or
pop
pop
ret
push
cld
lret
lods
xor
sub
addb
add
xchg
pop
pop
sbb
inc
dec
ffree
adc
ja
xor
and
inc
outsb
and
shrl
leave
nop
and
and
mov
scas
lret
sub
fidivl
outsb
rclb
out
mov
aas
sarb
mov
repnz
into
lea
jno
or
jp
call
rolb
adc
icebp
mov
sbb
data16
inc
movaps
fisttpll
sbb
push
add
mov
pxor
jnp
es
sub
add
pop
add
add
out
or
sub
aam
lds
mov
jmp
insl
sbb
inc
xchg
sub
adc
loopne
jo
cmp
les
jle
sub
in
outsb
push
imul
xor
xchg
or
sbb
inc
pop
ret
pusha
adc
pushf
test
out
addr16
push
into
jne
and
ljmp
dec
into
aaa
dec
push
hlt
test
xchg
testb
and
mov
shr
repnz
adc
and
or
popf
fs
add
fs
mov
rcrb
pop
movsl
push
mov
sbb
fstl
outsl
ror
cmp
out
mov
cli
call
xorb
inc
add
adc
mov
loopne
push
lea
sahf
xlat
xchg
or
cmp
pop
pop
fmull
out
lods
xor
aas
xlat
jns
mov
jb
jmp
add
add
add
push
andb
mov
mov
cmp
adc
cs
lcall
test
or
sbb
fsubs
pop
cmp
and
movsl
pop
loopne
movsl
mov
ja
in
jnp
in
in
mov
nop
ret
xor
lahf
lret
aas
adc
fdivrs
rcrl
scas
les
xchg
dec
ja
lods
xor
enter
inc
dec
lock
out
add
int
lock
dec
je
pop
ret
push
dec
mov
xorl
cmp
sbb
dec
pop
inc
cmpsl
push
and
shlb
inc
sub
ret
int3
push
jg
out
ljmp
neg
fnsave
mov
loope
imul
popf
mov
iret
mov
pop
adc
or
and
mov
xor
sub
lods
aam
test
addb
inc
mov
in
add
inc
into
hlt
mov
and
out
out
bound
add
jb
scas
incb
out
dec
out
and
cmp
add
add
pop
sahf
or
or
add
mov
add
shll
and
lds
add
std
and
out
jmp
fsubl
loope
rcr
sbb
cmp
cmp
pop
movsl
jmp
fs
scas
or
sahf
sarl
lock
pop
mov
sbb
mov
fs
xorl
fs
cld
push
jb
mov
dec
andb
xchg
out
testb
xor
popa
stos
inc
int
push
dec
sub
sti
cmp
sub
xor
sub
mov
inc
and
adc
test
popa
xor
loopne
jge
adc
fmuls
xor
adc
and
lds
shrb
call
test
fldcw
adc
dec
xor
cld
adcl
mov
push
add
xlat
mov
and
ret
add
pop
add
add
dec
or
xor
test
iret
sub
push
inc
jmp
loopne
mov
or
ja
push
sbb
jb
cmp
push
sub
xchg
or
pop
sahf
cmp
pop
test
daa
insl
mov
insb
sub
sbb
jg
test
mov
cltd
cmp
mov
loope
xchg
lock
jge
pop
push
test
ja
js
mov
adc
loope
ljmp
in
pusha
and
lock
sbb
rcr
ds
loopne
cmc
adc
sti
jmp
add
mov
mov
xor
inc
sub
movsl
inc
das
test
ljmp
in
jp
mov
cmpsb
push
fimuls
js
lock
lret
cmp
scas
js
lahf
gs
xchg
mov
jno,pt
dec
mov
mov
cmp
subb
xor
add
mov
aas
mov
mov
lret
add
pop
add
add
inc
push
lods
push
and
inc
jl
iret
fadd
xor
jecxz
add
test
popf
movsb
mov
lahf
jl
cli
cmp
fcomps
cmp
cmp
jne
mov
xor
ret
add
notb
rorb
sub
test
pop
sub
xchg
xor
sub
fistps
push
mov
mov
fists
mov
flds
jp
cli
cmp
push
in
cltd
into
andb
jl
dec
ja
inc
loope
leave
dec
nop
adc
or
push
or
mov
jl
mov
jns
movsb
call
jae
lret
and
jmp
in
jecxz
stos
add
out
out
push
xor
dec
leave
cmp
mov
push
lods
mov
or
inc
or
jb
xchg
pop
cmc
and
call
out
mov
push
sbb
cmc
rcrb
pop
push
pop
xchg
cmpsb
data16
test
std
add
mov
sti
mov
add
stos
pushf
out
add
pop
add
add
push
ret
testb
mov
xchg
mov
std
jo
fnstenv
test
mov
nop
test
push
or
imul
jge
and
es
mov
popf
pop
lods
fsts
jb
into
fnstcw
mov
imul
mov
mov
adc
fisubs
jge
inc
nop
mov
pop
or
xor
inc
push
mov
les
mov
int3
adc
jbe
or
pop
cmp
inc
pop
lret
push
divb
out
jg
aas
mov
inc
xchg
loop
movsl
or
xchg
inc
mov
push
mov
ds
mov
sbb
jae
push
outsl
xchg
ds
lret
sahf
jnp
cmp
jecxz
aad
push
pop
push
cmpsl
xor
das
add
push
sarl
and
mov
clc
and
imul
add
into
adc
neg
jge
mov
stc
shlb
add
pop
add
add
add
mov
out
arpl
or
adc
bound
movsb
in
mov
dec
sbb
nop
add
repnz
pop
push
pop
cwtl
outsl
xor
adc
mov
mov
jg
and
cmp
adc
xchg
popf
pop
pop
xchg
push
inc
adc
cmp
mov
xor
cmp
and
or
stc
pop
test
insl
xchg
mov
jecxz
mov
adc
sbb
repz
gs
clc
pushf
pop
cmp
adc
lahf
mov
mov
popf
cmp
loopne
jae
inc
lods
mov
mov
popf
rorl
add
sub
jle
or
mov
call
das
jb
movsl
sbb
adc
xchg
pop
adc
repnz
lea
aaa
adcl
xor
notb
lods
fdiv
negl
add
dec
sub
scas
xor
mov
icebp
add
pop
add
add
sbb
ds
sub
test
push
mov
lcall
cli
loopne
and
cld
pop
ja
cmp
pop
imul
mov
jae
adc
clc
outsb
xchg
pushf
outsl
or
dec
arpl
out
xchg
sbb
xchg
aad
fwait
arpl
mov
or
cmc
dec
dec
pop
dec
pop
ret
push
and
jo
scas
xor
daa
push
mov
mov
movsb
insl
dec
es
inc
ds
js
fsubs
clc
mov
sub
imul
mov
cmp
cltd
sub
ss
sbb
pop
je
add
test
add
js
lock
or
or
jg
inc
sahf
push
inc
adc
xor
mov
jns
daa
mov
or
hlt
pop
es
mov
stos
inc
xor
popf
int
repz
mov
mov
jg
or
cld
insl
loop
add
ja
and
aaa
divl
sub
add
add
add
jmp
jle
cmp
pop
outsb
cmp
push
jne
add
adcl
hlt
fisttps
gs
and
out
mov
push
dec
or
xchg
in
lret
in
clc
mov
cvtps2pd
lret
sub
push
or
sbb
cmp
fdivs
push
cmc
test
call
or
hlt
mov
enter
xor
cmpsb
pcmpgtd
mov
dec
cmp
pushf
cmpsb
notl
cmpsb
sbb
int
imul
scas
cmp
cwtl
lcall
push
add
push
cmc
jb
mov
cltd
pop
inc
jns
loope
add
cld
or
cmp
aas
dec
cmp
jae
add
mov
popf
call
dec
ds
pop
dec
les
inc
and
loop
cmp
push
jecxz
mov
pop
xor
sbb
pop
xor
jl
sbb
add
add
mov
cmc
mov
cmp
mov
repz
pop
add
add
adc
dec
test
xchg
dec
mov
mov
sbb
mov
jge
push
sbb
push
jne
subl
push
xor
data16
pop
mov
add
pop
jmp
leave
loopne
inc
push
mov
xchg
loopne
xchg
das
sbb
ds
inc
push
lods
mov
data16
add
jo
pushf
mov
mov
test
jbe
mov
and
je
push
imul
jb
xor
lcall
jg
mov
lret
push
mov
out
pop
roll
jo
or
movsl
fmuls
dec
push
pop
out
es
mov
sbb
inc
push
mov
int
inc
mov
and
repnz
cltd
out
lods
data16
mov
pop
dec
fstpt
pop
in
mov
pop
inc
sub
jne
dec
repz
imulb
push
in
adc
mov
rolb
add
jne
add
insb
inc
mov
add
add
pop
jg
pop
dec
sbb
dec
cmp
lock
push
jae
jmp
dec
cmp
sub
sub
je
or
sub
xchg
jmp
push
mov
add
das
pop
lods
aaa
imul
xchg
add
jl
imul
add
add
xchg
pusha
ret
fistpl
int
js
cmp
push
xchg
sub
in
sub
mov
jbe
jle
pop
xlat
cmp
shlb
orb
sub
mov
enter
pop
push
push
sbb
pop
daa
cld
inc
and
int
scas
hlt
fdivrl
add
jne
incb
mov
jecxz
add
cltd
call
mov
fs
jecxz
test
inc
subl
in
pop
je
inc
fisubrs
int
adc
div
lea
sub
nop
test
mov
fstpl
aad
test
add
imulb
idivb
sbb
mov
pop
add
add
pusha
pop
int
xchg
clc
ret
mov
es
xlat
jbe
fwait
jbe
not
mov
loope
pop
in
xor
cmp
scas
in
cmpsb
cwtl
jmp
sub
in
in
jg
inc
pop
jle
jge
mov
insl
xchg
pop
loop
shll
xor
inc
cmp
jo
cltd
loop
jge
sub
adcb
bound
and
mov
lds
mov
mov
mov
call
aas
push
xchg
xchg
ds
call
sarb
mov
lods
js
gs
jns
mov
mov
cmpsb
int3
push
jmp
cmp
cmp
xchg
int
mov
jne
aaa
cld
pop
mov
in
lods
and
inc
pop
cld
dec
adc
aaa
pop
bound
mov
testl
xor
adc
and
add
fisttpll
cmpl
add
add
xor
sub
inc
int3
int
add
pop
add
add
repz
or
pop
cmp
ja
mov
popf
je
test
daa
inc
lods
imul
adc
scas
jmp
add
jb
dec
pandn
pushf
es
cld
jge
push
fldcw
mov
cld
adc
sahf
imul
out
and
jns
xorl
sahf
xchg
push
xchg
repnz
xchg
into
cmp
xchg
mov
bound
xor
jbe
mov
sub
sbb
outsb
add
push
add
adc
sub
cmp
out
jne
sbb
in
test
dec
xchg
test
xchg
rorb
pop
repz
repnz
sub
movsl
out
jae
xchg
mov
icebp
icebp
add
hlt
fucom
cmp
pop
filds
dec
mov
int
and
inc
adc
mov
iret
dec
adc
sub
adc
int
in
idivl
call
sbb
sub
testl
add
jl
xchg
dec
sbbl
jo
sub
xor
sub
fsts
in
out
sub
cli
cmpb
jle
inc
jge
inc
in
popf
fisttpll
sub
pop
pop
dec
enter
and
adcb
sub
sub
jecxz
jp
inc
cmp
pop
cmp
dec
sub
addr16
stos
mov
sub
lahf
xor
inc
push
es
or
icebp
sti
sbb
les
sub
popa
adc
ljmp
inc
int3
mov
dec
xor
cmp
test
call
add
pop
xchg
lods
sar
and
imul
out
sbb
adc
jns
push
xchg
or
scas
xchg
rcr
leave
push
pop
cld
xor
xchg
sub
fs
sbb
pop
adc
mov
hlt
adc
es
cmp
jecxz
in
jg
xchg
push
and
sti
and
mov
lock
add
jecxz
inc
cli
aas
clc
fdiv
jne
dec
xchg
add
pop
add
add
pop
cmp
sbb
inc
bnd
lock
xchg
mov
ja
fisubs
inc
imul
inc
xor
and
xchg
ret
pop
test
lds
push
or
mov
cli
dec
sub
add
pop
and
and
lods
xor
pop
sub
pop
sbb
loopne
adc
cmp
rolb
mov
jns
adc
stos
sub
xor
ret
and
inc
std
mov
push
insb
sbb
push
fs
int
sbbl
es
loopne
sarb
adc
mov
and
sti
call
inc
ljmp
add
cs
or
sub
jge
mov
add
cwtl
jbe
cmp
sub
hlt
fs
mov
dec
lret
cld
test
stos
mov
mov
xchg
es
pop
jge
popf
jnp
mov
mov
lcall
dec
mov
cmp
stc
add
pop
add
add
imul
xchg
fsubl
cmp
sbb
addr16
jne
push
or
test
xchg
clc
and
jl
sahf
pushf
inc
sbb
push
shlb
mov
rcrl
rclb
mov
test
orb
add
andb
mov
fnsave
outsb
imul
in
xor
clc
add
cmp
dec
in
mov
inc
inc
pop
jmp
stos
push
dec
aad
xchg
gs
pop
lret
addl
sub
mov
vcvtss2usi
adc
add
cmpsb
or
call
add
mov
dec
imul
call
stos
sbb
jmp
lods
lret
dec
jle
shll
and
inc
pusha
test
idiv
loopne
mov
sub
cmp
xchg
int
adc
lods
repnz
mov
ror
push
lcall
shlb
push
mov
sti
loopne
lea
push
iret
xor
add
jae
cltd
dec
mov
jge
aam
hlt
pop
jmp
add
add
mov
jmp
mov
aam
orl
push
sub
andb
xor
sbb
lcall
push
into
iret
lock
stos
adc
test
popl
scas
insl
push
cmp
nop
mov
xor
adc
cltd
adc
mov
adc
in
inc
and
sbb
lret
pop
sub
dec
out
add
add
xchg
fucom
cmc
inc
dec
stos
popa
popl
mov
shr
adcb
lods
mov
dec
fstps
jae
fmull
sbb
inc
add
xchg
je
xchg
mov
xor
into
push
push
fcoms
xchg
leave
add
or
test
add
out
sbb
sub
mov
jae
push
mov
mov
mov
push
and
and
dec
cltd
or
dec
mov
inc
insl
and
sahf
mov
mov
dec
add
cmp
add
push
into
nop
out
cwtl
jle
pop
or
sub
lock
add
pop
add
add
scas
lret
push
les
mov
in
addl
add
fmul
xchg
and
xchg
fcmove
in
mov
pop
cld
add
push
lods
sbb
fidivs
adc
pushf
cmc
inc
and
roll
xchg
mov
push
mov
adc
imul
pop
mov
and
sub
lret
xor
lcall
fldt
push
out
sahf
mov
sbb
daa
pop
mov
jp
sbb
sub
aas
std
fcmovnu
dec
fdivl
iret
rol
sbbb
jg
std
jb
and
mov
pop
test
add
dec
inc
xchg
add
sbb
cs
sub
jge
mov
mov
mov
dec
pop
stc
inc
cltd
cmp
or
sub
lcall
aad
and
xor
cmp
mov
into
sub
xchg
test
lret
sti
out
and
add
test
jg
in
jmp
xchg
mov
add
pop
add
add
pop
mov
jmp
sub
dec
mov
jmp
pop
lock
push
scas
jne
pushf
xchg
repnz
mov
mov
pop
sti
scas
pop
imul
xchg
mov
leave
lret
add
daa
jb
and
test
inc
call
push
mov
fcmovbe
mov
rcrl
sbb
test
xchg
pop
mov
sbb
xchg
and
mov
xchg
fmulp
jnp
xchg
pop
push
lds
loop
inc
sbb
flds
test
cmp
mov
dec
clc
dec
mov
test
jno
dec
js
les
ds
pop
insb
movsl
js
mov
aam
in
scas
push
lret
and
sbb
add
jp
dec
adc
call
dec
inc
jecxz
ss
fidivrl
in
pop
mov
inc
xchg
cld
call
pop
inc
enter
lea
jl
push
dec
pop
xchg
xor
cld
push
inc
aam
pop
mov
add
adc
movsb
push
in
cmc
jne
rorl
mov
std
add
pop
add
add
xor
pop
jne
add
jl
popf
pop
ss
pop
and
ljmp
out
jo
sbb
cli
mov
mov
mov
sbb
loopne
or
cmpsl
push
xor
int3
mov
xor
inc
sbb
daa
ds
adc
add
pop
dec
mov
lcall
or
dec
shrb
scas
mov
ds
xor
jnp
lret
rorb
cmp
repnz
adc
enter
cmp
and
mov
lea
cs
xchg
pop
fs
fistpl
stc
sub
inc
fnstsw
out
jbe
inc
inc
sbb
ret
sub
or
fwait
or
cmpsl
fnsave
repz
repnz
icebp
dec
icebp
mov
int
ss
push
xor
int3
outsb
add
out
shlb
aas
out
sbb
ds
pop
add
add
jp
mov
pop
add
ss
and
rorb
js
in
loop
pop
std
sbb
test
sbb
sub
inc
pop
dec
ss
jle
adc
mov
mov
jne
lods
adc
and
dec
aam
nop
outsl
lods
mov
rcll
shrb
daa
imul
mov
mov
adc
push
lret
adc
gs
xchg
cmp
xchg
mov
push
out
arpl
mov
and
sbb
scas
jb
lods
push
add
cmp
mov
add
pop
ja
cmp
push
push
in
test
cmp
cmp
add
enter
idivl
hlt
sub
mull
into
mov
push
or
inc
cmp
or
jp
sub
ret
dec
sub
or
jle
jno
fisubrl
or
dec
cmp
add
mov
lcall
gs
or
add
pop
add
add
dec
mov
movsb
arpl
xchg
add
add
stos
das
push
es
add
and
cmp
loope
pop
push
and
dec
add
in
mov
dec
mov
aaa
xchg
fldt
lcall
mov
cli
add
mov
gs
jg
cmpl
adc
pop
or
dec
mov
popa
push
and
mov
cmp
into
in
sbb
lock
lahf
cmc
inc
mov
adc
int3
jne
bound
jg
test
xor
loop
enter
sbb
arpl
aam
push
add
xor
mov
xchg
lret
int3
push
cli
push
dec
faddl
lcall
repz
mov
xchg
inc
mov
fnsave
bound
loop
push
adc
sbb
xor
cmc
sub
add
daa
jmp
mov
jl
out
xchg
inc
mov
bound
mov
stos
test
jecxz
cld
add
ret
bnd
int3
jae
adc
adc
adc
add
pop
add
add
loope
daa
scas
cmp
sbb
pop
adc
pusha
js
jo
jno
lock
push
in
pop
enter
xchg
mov
jno
dec
push
push
int3
and
dec
jne
daa
jnp
prefetch
xor
inc
iret
inc
sbb
push
ret
clc
orb
or
mov
mov
loope
jmp
jo
jne
mov
xor
cmp
add
cmp
pop
xor
sbb
xchg
rolb
rcll
imul
loopne
xchg
ret
insb
scas
and
add
xor
jp
or
push
out
sub
push
sub
adc
push
push
or
and
and
xlat
fisubrl
pop
adc
fnstcw
fs
movsb
test
jae
aaa
lcall
subb
jns
cs
cmp
out
sub
lods
rcll
and
pop
lahf
cltd
mov
es
xlat
inc
mov
add
add
add
add
std
aaa
mov
mov
leave
jbe
les
add
add
add
add
aas
jo
adc
xor
pop
pop
xor
mov
lea
mov
pop
jg
inc
popf
push
pop
sub
addr16
test
and
mov
aas
bnd
dec
shl
or
dec
mov
adc
stc
std
lret
push
mov
xchg
mov
mov
aam
cltd
ljmp
stc
cmp
sbb
in
inc
push
leavew
xlat
xchg
in
sahf
or
add
fcoms
in
pop
pop
or
add
imull
sbb
fadds
lret
daa
inc
push
add
decl
sub
add
test
ljmp
dec
pushf
les
mov
mov
sub
cmp
loope
adc
leave
jmp
jbe
mov
push
or
ret
add
mov
cmpsb
mov
mov
repnz
insl
aam
mov
mov
adc
adc
and
add
xlat
sbb
lret
in
out
mov
xchg
adc
cmpsb
push
filds
in
inc
movb
mov
or
jae
add
add
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
ss
add
ss
add
ss
add
ss
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
xlat
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
ljmp
dec
mov
cmp
imul
jno
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
