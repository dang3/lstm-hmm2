push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
outsl
loop
push
push
push
push
sub
push
push
sarb
adc
test
cmp
sbb
push
popf
inc
mov
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
add
push
jecxz
push
ds
test
mov
cmp
push
outsb
pop
cmpb
pop
jno
push
xor
jmp
inc
jo
push
movsl
cmp
mov
test
mov
orb
cld
fists
sub
sbb
jl
xchg
ficoml
mov
scas
lret
adc
rol
pusha
addl
sarl
sub
xor
sbbb
or
mov
jbe
fsubr
sbb
xorb
inc
pop
push
addr16
pop
inc
and
or
add
je
mov
mov
mov
mov
cmp
out
ljmp
imulb
hlt
mov
ds
aad
push
adc
shrl
iret
repnz
in
icebp
xchg
jnp
insl
fcomp
into
push
pop
mov
lods
cli
adc
and
shrl
dec
lock
andl
mov
inc
inc
sub
int
decb
adc
ss
test
scas
in
cmp
push
lock
popf
jae
scas
push
les
stos
mov
push
xor
aas
fistps
loope
mov
or
xchg
xor
in
sbbl
test
or
fidivrs
or
loop
stos
cmpsl
dec
mov
cmp
adc
sub
movsl
mov
gs
hlt
pushf
sbb
outsb
and
aad
inc
xchg
jbe
movsb
add
int
aam
bound
pop
jge
dec
cmpsl
and
lds
sahf
adc
jo
push
push
fldl
enter
add
cltd
arpl
xor
inc
sbb
add
or
loope
push
inc
xor
lea
pop
hlt
mov
mov
test
sarb
rcrl
nop
and
pop
push
or
dec
ret
cmp
call
cld
jbe
jmp
mov
mov
ret
sub
in
je
mov
hlt
orb
push
rclb
daa
sub
or
subl
in
in
dec
test
jp
xchg
cs
push
das
pop
adc
fistpll
std
popaw
lea
das
aam
das
scas
adc
mov
pop
adc
or
push
or
jg
subb
frstor
mul
nop
add
fmul
rclb
xchg
sub
orl
fs
xor
pop
jbe
std
cmc
inc
data16
xchg
jbe
bswap
cmp
out
in
daa
fcmovu
aad
clc
mov
out
insl
xchg
sub
push
jg
adc
pop
mov
shl
test
nop
rcll
cmp
out
xchg
push
mov
dec
sub
loope
dec
pushw
loopne
jne
repnz
sti
lods
je
arpl
mov
lods
inc
mov
or
dec
xchg
fidivl
leave
mov
aam
data16
dec
jmp
fnstenv
jmp
frstor
cmp
mov
insl
push
lods
lods
subb
add
or
mov
fwait
call
in
loopne
outsl
inc
cmp
addr16
in
inc
cli
shll
push
aam
cmp
scas
repnz
clc
int3
adc
scas
jle
andl
push
pop
sub
push
enter
imul
pop
ds
mov
cld
aas
mul
or
lret
xor
inc
pop
movsl
adc
mov
jg
cmpsl
mov
and
nop
test
cwtl
adc
sahf
jae
hlt
mov
sub
dec
mov
cmp
adc
sahf
sti
movsb
or
cmp
add
adc
lahf
adc
push
rclb
cld
aam
aam
jg
loopne
lods
aad
shl
push
stc
loopne
js
mov
aas
dec
daa
and
fld
inc
sbb
jmp
int3
jno
lret
pusha
pop
inc
jno
and
or
add
inc
orl
daa
mov
in
mov
sbb
dec
adc
mov
push
xor
test
pop
decl
xchg
flds
xor
fdivrl
clc
xor
leave
test
xor
stc
aaa
pop
mulb
idivb
add
test
and
inc
xchg
popf
call
std
pusha
xchg
push
test
bound
push
xor
xor
rcrb
jle
test
popa
jecxz
ljmp
sub
sub
mov
and
popa
enter
xor
call
xor
adc
mov
rolb
xlat
cwtl
sbb
sub
jnp
out
in
cmp
jp
adc
push
into
push
inc
add
sbb
out
mov
outsl
call
imul
fsubs
mov
push
fwait
insl
push
cmp
in
jnp
add
cld
dec
popf
clc
mov
insb
scas
test
push
fwait
out
std
punpckhbw
or
fmull
inc
mov
out
aaa
ss
push
jecxz
pop
fdivrl
push
out
lret
mov
fwait
add
pop
out
jp
pop
mov
cltd
and
outsl
or
mov
mov
incb
cwtl
xor
mov
pop
lods
and
gs
push
push
mov
push
das
mov
fwait
pushf
adc
cs
ss
and
mov
out
push
sbb
mov
nop
loope
mov
addr16
sub
sbb
mov
test
adc
ss
cmpsb
loopne
shlb
out
push
lea
in
andl
add
cmp
cmpsb
dec
jno
movsb
or
mov
push
daa
lock
inc
dec
aaa
jne
test
cmpsl
lock
loope
pop
fisttpll
push
inc
jp
jnp
xchg
popf
cmpl
test
inc
pop
popf
xor
int3
fimuls
cmpl
xchg
pop
pushf
mov
mov
jns
mov
inc
mov
fcomi
jmp
pop
sub
and
outsl
pop
sbb
mov
lahf
dec
icebp
test
lret
and
adc
mov
inc
test
pop
jecxz
addl
lods
jns
pop
fldl
adc
test
jno
fiaddl
testl
push
cmp
movsb
and
xchg
lret
push
mov
insb
cld
or
daa
pop
jno
mov
ret
push
les
fbld
mov
insl
mov
sub
jle
fcompl
daa
out
out
ud2
sbb
imul
lea
imul
xchg
or
popf
jno
enter
shll
push
mov
sbb
movsl
add
dec
or
add
mov
or
mov
or
dec
jg
jecxz
test
push
and
loopne
cmp
lret
sub
cli
push
iret
mov
nop
push
cs
cmpsb
or
or
insb
fldt
adc
mov
and
add
call
and
hlt
adcl
jb
dec
stos
fs
jbe
mov
jmp
sub
sbb
arpl
leave
imul
inc
adc
fsubrl
cld
mov
es
xor
out
mov
jg
rcl
in
ljmp
mov
ja
int3
clc
negb
sbb
cmp
sbb
cmp
movsb
jmp
movd
sub
add
repnz
les
out
enter
mov
data16
out
lea
cmp
andl
lock
sub
loope
xchg
add
dec
add
sahf
mov
repz
sbb
icebp
lds
mov
dec
jne
dec
mov
xor
loopne
idivb
leave
pop
mov
mov
push
and
popf
fidivrl
cmp
lret
jbe
sub
or
xchg
sti
ss
add
add
pop
addr16
stos
mov
mov
scas
mov
mov
mov
ret
jbe
scas
ret
in
adc
and
idivb
leave
sbbl
jmp
out
add
fistps
jns
test
xlat
inc
push
loopne
jo
mov
push
xchg
dec
in
fisubs
rolb
les
fadds
dec
in
testl
cmpsb
adc
das
pop
sub
push
sbb
or
xor
dec
sbb
or
ja
dec
icebp
jb
cwtl
xor
push
add
or
sub
fcoms
jmp
inc
in
mov
mov
in
nop
lret
push
daa
test
movsl
fadds
in
adcl
in
mov
sub
pop
or
test
ljmp
cmp
lock
daa
pop
xor
in
sbb
mov
and
xchg
hlt
nop
ret
ret
imul
jmp
xor
add
lock
mov
mov
sbb
sub
xor
push
cmp
push
pop
cmp
xchg
cmpsb
jno
enter
imul
xor
cmc
or
fcoml
popa
leave
fsub
rcrl
mov
enter
daa
cmp
leave
or
lea
fs
push
sbb
scas
loope
jecxz
sbb
les
jl
xchg
sub
sbb
cld
mov
ficoml
pusha
insb
xchg
imull
icebp
sarl
test
fs
out
adc
xor
jnp
mov
adc
in
jb
pushf
pusha
mov
movsl
or
mov
or
mov
sbb
fidivs
xchg
pop
sub
flds
ja
pop
fidivs
pop
imulb
rcrb
add
mov
sbb
cmpl
dec
add
cmp
cld
popa
jecxz
lock
adc
inc
inc
push
jbe
xlat
stos
negl
dec
aam
jns
repz
pop
jmp
mov
out
sub
es
xchg
mov
jg
dec
jle
mov
mov
push
jno
xor
lea
enter
adcb
dec
ja
mov
add
mov
fmull
std
imul
clc
fdivr
bound
lret
cmp
lret
mov
in
int
je
aad
pop
imul
jg
jl
cmp
sub
dec
stc
prefetch
jl
shl
jg
sub
inc
imul
add
fiaddl
mov
jno
jge
ret
cmp
jmp
mull
xorb
and
push
fildl
mov
pop
fmul
insl
jae
fs
dec
gs
and
or
call
orb
pop
rcrb
mov
cld
jbe
jnp
pop
ss
jecxz
dec
pop
xchg
mov
pop
dec
push
xchg
push
repnz
jno
aam
add
dec
into
jl
xchg
push
mov
mov
or
pusha
sub
mov
pop
jmp
in
stos
xchg
cltd
xor
xchg
jecxz
pop
cld
push
fsubr
push
mov
push
sbb
inc
fldcw
push
inc
ret
adc
adc
test
mov
nop
adcb
pop
mov
pop
ja
imul
ret
mov
loope
push
cli
scas
movsl
mov
adcl
out
jae
mov
movsb
stos
adc
rcll
push
dec
mov
movsl
std
mov
test
lret
and
fcmovnb
repnz
xchg
movsb
idivl
mov
fildll
aam
push
fldenv
xlat
stos
jnp
and
xor
mov
scas
out
cmpb
fdivrs
push
mov
je
push
in
cmpsb
outsl
inc
mov
outsb
mov
lods
xchg
sbb
int
xor
in
sbb
push
dec
lods
cmp
and
jno
adc
add
inc
loop
mov
xchg
shll
push
addr16
mov
aas
jae
xor
mov
inc
into
push
jmp
enter
movsb
dec
sub
add
movsb
push
push
fmuls
pop
push
xchg
pusha
xor
jmp
lret
pop
xor
jae
push
popa
mov
cmpsl
add
add
stos
fiadds
popf
rorl
sbbb
mov
xchg
jbe
icebp
mov
adc
int3
pusha
cs
inc
mov
aas
mov
scas
fisttps
xor
divl
xlat
out
xchg
and
shll
add
mov
xor
das
in
lds
dec
add
outsb
cmp
add
xor
push
jnp
dec
mov
xchg
mov
dec
cmp
sbb
call
leave
cwtl
jo
int
sub
loopne
stos
or
fidivrl
mov
jnp
push
pop
not
add
mov
inc
cs
jmp
or
popf
jne
cmp
ds
lret
jns
cmp
hlt
ja
mov
sbb
jo
stos
lods
rolb
add
adc
rcrb
inc
add
mov
mov
or
pushl
insl
ljmp
rclb
out
adc
push
sahf
int3
mov
pop
mov
push
loop
and
sub
jl
in
cmp
test
xchg
outsl
cmpsl
add
cwtl
add
andb
jmp
data16
or
fs
push
adc
add
andl
iret
mov
and
sub
push
sbb
out
push
bound
xor
dec
adc
lea
cs
das
jmp
scas
mov
adc
sub
das
and
scas
ljmp
sbb
push
jb
hlt
rcrl
add
pop
mov
std
bound
mov
inc
add
mov
mov
imul
pop
aad
add
sbb
sub
lea
ret
lea
das
cmp
xor
and
pop
arpl
push
and
sub
sub
sbb
or
shll
inc
pop
and
xchg
jg
mov
stos
jne
mov
fsts
in
xchg
call
dec
dec
sub
fisttps
pop
jmp
sub
mov
jp
adc
mov
lods
sub
jb
pop
outsb
cmp
push
and
iret
add
inc
adc
out
mov
test
and
inc
loopne
cs
mov
mov
xor
xor
pop
xchg
xchg
fisubrs
jmp
adc
and
rcll
mov
fmull
shlb
nop
aas
mov
jge
sub
cmp
fdivl
out
out
and
mov
push
xor
push
push
fbld
in
les
out
add
repnz
aam
xor
pop
cmc
popa
dec
cmp
xchg
outsl
nop
or
pop
dec
data16
add
int
push
rcl
dec
push
sbb
sarb
pop
or
and
pop
xchg
jbe
xchg
shrb
sub
sub
xor
int
mov
subl
add
pop
cmp
fcoml
adc
idivl
sbb
push
pop
leave
imul
iret
or
push
xlat
fwait
sbb
test
mov
add
subl
jp
cs
gs
bound
lods
add
pushf
clc
cld
push
push
out
cmp
hlt
bnd
addr16
pop
lods
stos
pop
xor
shr
push
dec
xchg
outsl
iret
dec
fadds
fimuls
cmp
call
pop
mov
int3
test
lods
les
add
insb
pop
sbb
inc
ljmp
mov
test
pop
jg
dec
ja
jl
pop
pop
xchg
mov
add
xchg
add
jo
sbb
sbb
dec
mov
dec
mov
cwtl
rclb
int3
cli
mov
pop
sti
orl
cmc
mov
or
mov
inc
xchg
shll
in
xchg
sbb
xor
add
mov
pop
jmp
outsb
and
js
pop
stos
repnz
lret
jb
or
insl
mov
inc
dec
fs
push
or
jmp
push
sbb
std
test
adc
pushf
mov
jg
test
push
ficoml
dec
out
lods
arpl
movsb
stos
push
fadd
bound
or
cmc
ds
adc
fdivrl
sarl
cli
and
jp
push
popa
mov
pop
jne
in
test
data16
sub
sbb
daa
pop
pop
jl
cmpsl
xor
outsl
call
sarl
add
add
jbe
jbe
sub
fcoms
loope
lock
dec
cmpl
push
sub
shrl
cmp
shr
in
xchg
in
adc
decl
jmp
mov
sub
sbb
and
xchg
dec
bound
push
aas
pop
push
jl
cmp
cmp
cltd
frstor
mov
cwtl
xor
int3
push
fcmovnbe
movsb
jecxz
dec
iret
pop
daa
xchg
jg
fdivrl
jmp
std
pop
dec
dec
jnp
jp
fisttpl
or
ret
xchg
xchg
icebp
cmc
out
pop
stos
cwtl
xchg
add
dec
loope
rcrb
mov
xchg
xchg
mov
sub
nop
xchg
test
les
in
xchg
inc
ljmp
sbb
fnsave
or
pop
push
lcall
ja
push
mov
imul
cmpsb
xchg
mov
sub
push
adcb
push
xchg
push
mov
adc
shll
inc
mov
or
lcall
cmpl
add
outsl
add
lds
xor
lock
adc
mov
fst
ljmp
sarb
jnp
in
mov
or
fdivl
or
mov
jae
je
cmp
push
shll
jmp
arpl
sub
jp
inc
xchg
jnp
add
stos
dec
cmc
cmc
pop
or
test
lods
xor
xor
gs
cmpb
pushf
stos
sub
test
outsl
rorb
stc
dec
lahf
dec
push
dec
mov
push
lds
jnp
loopne
push
jbe
fisubrl
loop
jg
push
push
mov
push
fs
cmc
daa
outsb
xchg
test
mov
or
lock
jecxz
insl
cmp
cmc
repnz
into
mov
mov
decl
dec
pop
mov
je
lcall
mov
lods
out
inc
dec
sbb
das
push
aad
jo
push
stc
mov
add
xchg
cmp
jp
jg
mov
int3
lods
sub
xor
fmul
sub
adc
fadd
ret
and
xor
and
mov
and
push
mov
push
scas
push
fsubl
inc
iret
sbb
inc
stos
std
mov
push
test
xlat
outsb
popf
inc
addl
pusha
gs
insb
mov
into
pop
outsl
pop
imull
push
mov
xchg
je
push
cmp
mov
in
and
es
sub
std
inc
cli
dec
pop
ja
stc
loopne
pop
ss
loope
inc
scas
pop
pop
xor
xor
inc
push
clc
xchg
repz
gs
cli
lods
add
out
repnz
popf
mov
lods
dec
in
insl
and
mov
sub
cmp
dec
mov
push
mov
push
movsb
cmpb
xchg
ds
xor
mulb
lock
sub
and
adc
hlt
dec
or
or
jg
pop
add
xor
jne
push
packsswb
lods
cmp
testl
sbb
dec
mov
sbb
sub
sub
gs
jl
pop
cmp
sbb
xchg
jbe
adc
les
aam
js
jmp
xorl
add
push
xor
push
and
xchg
out
add
das
and
push
fisttpl
dec
call
lods
sahf
push
in
movsb
jno
test
jbe
jmp
pop
fistpl
jae
add
and
inc
mov
scas
lret
cmpsl
mov
lods
hlt
fucomip
xor
stc
add
push
fwait
je
jp
scas
jl
cmp
call
and
jp
imul
mov
movnti
nop
int3
xor
cmpsl
daa
insb
push
ret
jge
push
pop
pop
lret
or
jmp
fwait
mov
mov
fiadds
leave
test
mov
mov
mov
push
insl
jmp
insl
mov
xor
imul
add
xchg
std
ljmp
xchg
mov
mov
int3
mov
mov
shll
sarl
loopne
lahf
insl
and
ss
cltd
cmp
ja
nop
cmp
and
sbb
dec
ret
mov
rclb
push
test
cmc
lret
mov
fcmove
push
pop
mov
mov
lret
les
repnz
dec
sub
js
mov
xor
loop
sub
call
repnz
enter
jg
rorb
mov
outsb
and
sbb
adcl
imul
loop
or
jp
test
xchg
das
mov
mov
subb
ret
into
imul
mov
cmp
sub
xchg
and
je
loopne
cmp
push
mov
popf
jecxz
cmp
out
or
icebp
cwtl
or
or
cmpsb
aaa
sub
xchg
insl
mov
jecxz
sub
cmp
adc
repz
xchg
dec
xchg
insl
push
adc
mov
mov
imul
dec
mull
or
inc
sbb
js
aad
jno
pop
inc
or
sub
aaa
pop
sbb
mov
lret
das
add
push
js
mov
lods
or
loope
mov
pop
nop
and
cmpsb
aas
aas
sbb
cmpsl
and
pop
fildl
cmpsb
push
es
fldcw
and
sti
js
sahf
inc
xchg
loop
imul
mov
aaa
in
mov
inc
inc
out
out
mov
pop
inc
outsb
mov
mov
stc
xchg
mov
repnz
jo
mov
cmpsb
mov
mov
mov
ret
std
lods
pusha
xchg
ds
imul
add
pushf
xchg
mov
mov
test
cmpsl
out
aas
scas
cmpsl
jo
xchg
std
mov
hlt
xor
lds
sahf
fcomp
sarl
adc
je
adc
mov
ljmp
lret
dec
or
mov
das
jbe
pop
pop
cmp
addr16
in
adc
pop
mov
rorb
adc
jnp
in
popa
fucom
rcrl
and
repz
popf
jae
pop
inc
cmp
movsl
jo
sbb
rclb
lea
loope
push
mov
pusha
mov
sti
dec
fnstcw
in
imul
cltd
inc
xchg
pop
xchg
xchg
bound
icebp
dec
mov
adc
xchg
movsb
mov
ffreep
xchg
or
testb
adc
mov
inc
cmpsb
lahf
sbb
insl
test
mov
aad
pop
call
jno
push
xor
and
dec
mov
add
bound
mov
loope
push
fs
xchg
in
push
xchg
inc
int3
loop
ljmp
and
mov
orl
fdivs
mov
fmuls
fmull
mov
sarb
cli
pop
jb
and
xchg
jo
into
ret
clc
outsl
push
push
jbe
into
aad
fs
out
mov
jle
cwtl
jge
lods
jmp
out
xchg
je
mov
mov
mov
adc
mov
sub
mov
fwait
cld
push
insb
mov
and
js
mov
sub
shr
aas
push
inc
xchg
jmp
xlat
xor
jno
pop
aaa
cmpsl
mov
es
mov
les
aaa
xor
jl
popa
hlt
pop
stos
jae
ja
es
jb
cltd
jmp
aam
mov
loopne
pop
cmpb
cmp
addr16
mov
or
arpl
dec
cli
mov
pop
vpcmpeqd
stc
xchg
test
mov
or
pushf
mov
repz
xor
mov
test
push
sbb
fs
dec
push
xchg
sbb
dec
outsb
aaa
leave
sub
enter
es
neg
sub
adc
xchg
jmp
jns
scas
adc
int3
fwait
dec
orl
fidivrs
adc
std
jae
dec
ds
aas
or
mov
sbb
push
pop
sti
push
fnstenv
pop
in
aad
mov
add
sar
adc
push
ret
jb
inc
adc
dec
push
fists
stos
lock
push
inc
mov
leave
or
int
out
scas
negl
mov
ja
fstpl
pop
mov
sub
hlt
cmpsb
loope
andl
or
in
sub
sahf
mov
hlt
push
or
jb
push
or
mov
mov
je
jp
aad
inc
hlt
loope
je
push
xor
ret
pop
dec
aaa
jne
out
mov
leave
pop
movsb
imul
mov
in
fiadds
outsb
insb
push
jbe
cmp
mov
jle
xchg
test
ret
fcmovu
adc
jl
pop
shll
sub
fisubrl
sahf
pop
addr16
and
dec
pop
mov
mov
ljmp
je
je
sbb
lods
mov
fs
mov
jbe
push
out
adc
jle
stos
dec
mov
repz
and
test
xchg
mov
pop
inc
jl
mov
or
fdivrp
jge
xchg
andl
mov
imul
into
shl
and
cld
lock
cmpsl
xor
jle
outsb
ror
jmp
ljmp
jb
dec
std
leave
fstps
cmpsb
pop
ja
lock
push
dec
jg
sar
cli
mov
gs
fistl
in
ficompl
mov
or
inc
cmpsl
mov
lret
sahf
int3
out
dec
out
mov
into
xor
xchg
mov
mov
push
cld
push
add
cmp
pop
sbb
xchg
push
push
jg
xchg
cmp
aad
xlat
fildl
aam
fstps
test
pop
frstor
sub
clc
add
hlt
mov
sub
xlat
adc
jae
pop
test
sbb
mov
les
es
mov
jbe
outsb
xchg
cmp
jae
sub
out
das
mov
push
inc
inc
pusha
adc
cmp
cmp
cmp
jbe
jge
ljmp
xchg
clc
dec
mov
jno
dec
cmp
lods
js
inc
push
mov
lcall
and
inc
xor
cmpsb
ret
mov
les
mov
insl
rcr
cmp
inc
mov
or
fisubrs
cmp
mov
imul
fcomip
jbe
testb
pusha
lret
lcall
jge
fildll
push
or
rclb
mov
outsb
and
and
xchg
or
daa
xchg
pusha
in
mov
sbb
cmp
push
push
nop
jg
pop
pop
loop
out
int
arpl
inc
fmulp
out
cmpl
ficoml
mov
mov
and
lcall
das
lock
push
test
adc
xlat
scas
jmp
orl
pop
test
jmp
icebp
pop
dec
fcomi
fwait
sub
sbb
sbb
fimuls
lea
xlat
dec
add
sbb
jnp
sub
cmp
into
push
mov
ja
push
fiadds
mov
movsb
pop
dec
into
rdpmc
or
fwait
lahf
sbb
cmp
lock
ret
pop
les
jmp
xchg
inc
jno
jae
inc
jle
subb
lds
inc
arpl
notl
iret
push
inc
dec
movsb
pop
orb
jnp
in
into
push
out
inc
jo
adc
in
cmp
mov
scas
shl
aaa
mov
fistl
nop
adc
push
iret
pop
dec
pop
pop
mov
xor
jno
iret
inc
add
push
jnp
into
bound
loop
fmuls
ret
xorb
roll
pop
mov
mov
xorl
add
das
inc
pushf
sub
pop
jmp
mull
popf
cli
mov
inc
xor
dec
or
jp
leave
and
mov
push
lods
mov
les
insl
and
jg
cmpb
push
loope
inc
cwtl
loope
pop
insl
mov
push
cmpsb
jle
lret
xchg
aam
test
push
sbb
in
dec
dec
mov
testb
pop
testl
sub
mov
in
and
fildl
dec
xchg
cmpsb
cmp
in
mov
xchg
test
shl
dec
xor
arpl
out
add
lock
cld
adc
scas
add
nop
and
mov
add
shll
je
aad
addr16
sbb
rolb
add
xchg
out
dec
hlt
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
mov
push
sub
push
push
pop
popa
lahf
fdivrl
js
or
or
lcall
aam
imul
popf
jne
outsl
or
shlb
fnstcw
sub
rcll
ss
add
add
and
xchg
jmp
pop
leave
add
mov
jno
ljmp
sub
pop
ljmp
xchg
and
adc
enter
adc
icebp
pop
xor
push
add
mov
mov
mov
xchg
in
imulb
inc
or
sbb
mov
cs
clc
cmp
add
cwtl
and
mov
data16
push
ret
mov
dec
inc
icebp
jns
adcb
xchg
addr16
mov
shl
xchg
in
jo
ds
and
sub
bound
cli
dec
repnz
andl
aaa
dec
adc
lods
in
push
jle
inc
andl
dec
rclb
imull
pusha
pop
cs
mov
lahf
mov
dec
xchg
add
inc
fnstsw
adc
sbb
rorb
out
out
xchg
xor
jp
fdivrl
repz
jbe
xchg
ror
lret
shll
adc
enter
push
js
mov
inc
data16
or
sub
jns
int
mov
pop
mov
addr16
jl
out
sbb
xorb
fs
shrb
xor
scas
les
push
xor
dec
fdivs
nop
cmp
cmp
lds
lods
add
mov
cmp
and
lret
int
lret
loopne
aaa
mov
in
mov
sub
movnti
in
mov
lods
adc
xor
mov
dec
popa
and
inc
outsl
jl
jne
xchg
inc
or
cltd
and
sahf
adc
mov
mov
stos
add
jbe
pmulhuw
aaa
fdivl
push
test
jae
inc
les
repnz
mov
pop
jecxz
inc
dec
sub
add
sub
cmc
ja
pusha
cmp
jno
jns
and
fisttps
xchg
test
mov
push
pop
js
fwait
jbe
cmpsb
adc
or
dec
aad
push
mov
xchg
xor
in
adc
mulb
clc
dec
add
sub
call
pushf
sub
imul
shll
aas
pop
push
dec
add
pop
xchg
imul
call
add
jnp
stos
cmc
lret
and
ja
dec
gs
ljmp
lock
in
pop
mov
es
ljmp
mov
cmp
andl
xchg
enter
movsb
arpl
imul
orl
jl
xchg
inc
test
sub
xchg
push
or
pop
or
pusha
test
pop
jp
fwait
inc
roll
dec
jae
pop
aad
into
add
pop
inc
mov
mov
jne
cmp
mov
arpl
mov
mov
pusha
in
mov
sbb
push
and
rcrl
dec
fucom
fisubs
add
popf
cmpsl
pop
shrl
xchg
xchg
fwait
stos
lret
and
clc
inc
sub
cmc
mov
mov
cmc
push
jg
push
jmp
cmpl
out
outsb
and
stos
push
into
lods
jmp
outsb
cld
xchg
mul
subl
sub
lcall
pusha
ret
icebp
mov
jge
shll
mov
in
pop
sub
xor
push
aam
pop
and
movsl
sub
adc
jmp
imul
hlt
xchg
xchg
mov
shrl
jge
iret
add
ds
mov
lcall
pop
lahf
jg
sub
or
aam
xlat
jno
push
stos
orl
push
mov
sbb
jmp
add
in
mov
popf
rcrl
inc
arpl
jmp
cltd
test
pop
jl
cmp
cmp
adc
xor
orb
xchg
das
cmc
xor
lock
jo
jno
jmp
cmp
push
jae
or
dec
push
or
movsl
scas
mulb
sbb
stos
fstpt
jecxz
push
sbb
jp
mov
pop
cmp
imul
and
xchg
int
arpl
mov
out
cmp
test
pop
and
and
mov
jne
push
push
pop
sahf
mov
movsl
fdivl
nop
jb
clc
int3
cmp
pop
adc
push
pop
mov
and
out
push
add
lahf
jecxz
outsl
mov
nop
sbbb
inc
movsb
mov
pop
pop
in
daa
xor
lcall
insb
mov
iret
ret
mov
imul
add
xor
mov
xchg
adc
sti
js
xor
jge
mov
lods
imul
mov
inc
dec
ds
icebp
mov
push
xor
jns
xchg
pop
bswap
lret
pop
mov
mov
inc
in
inc
fistps
and
aad
adc
mov
sbbl
lea
std
iret
adc
in
pop
arpl
mov
inc
test
xor
pushf
gs
xchg
lock
xchg
shrl
hlt
push
out
lcall
fwait
ret
andl
sbb
fistps
icebp
insb
fs
mov
and
cmp
adc
mov
rcll
lahf
sub
add
push
add
aaa
out
pusha
sub
cmpsb
ror
jmp
xor
shlb
xchg
sti
mov
cmp
stos
ljmp
ret
orb
mov
out
je
dec
add
into
mov
jns
jp
mov
fldcw
das
rcll
push
mov
add
ds
or
push
sub
negl
es
xor
aad
mov
pushf
inc
adc
pushl
daa
and
mov
neg
and
mov
out
mov
mov
fsubl
cmpl
gs
and
loopne
mov
stos
xor
lcall
shrb
pop
pop
sbb
sub
inc
sysenter
lret
mov
add
cmpb
fwait
add
fldl
xchg
cwtl
xchg
aam
mov
repnz
mov
xor
pop
outsl
fadds
mov
aam
mov
and
cwtl
inc
xor
cld
xor
ss
xchg
fimuls
in
cmp
test
xchg
adc
lahf
adc
out
sub
xchg
sbb
fs
cwtl
jns
cmp
and
jge
fcompl
xchg
xchg
out
mov
int3
xchg
int3
ret
addl
or
lret
dec
sbb
and
mov
pop
pop
pop
mov
test
fldcw
jne
dec
or
rcl
pop
mov
dec
add
or
mov
arpl
nop
mov
imul
test
in
leave
and
outsl
mov
sbb
adc
and
add
ss
mov
sbb
or
pop
orb
lcall
mull
adc
adcb
lock
pop
dec
fbstp
mov
call
and
jp
pop
adc
sub
enter
or
xor
xchg
dec
sbb
insb
inc
call
add
jecxz
xchg
ret
insl
and
jb
mov
movsl
lcall
sbb
xchg
cmc
dec
or
mov
scas
add
fcoml
cmp
xchg
mov
daa
ret
test
out
andb
xchg
push
mov
mov
add
jmp
mov
push
gs
xor
mov
js
xor
push
jecxz
out
aad
add
dec
xlat
fcompl
pop
dec
repnz
pop
mov
or
popf
mov
dec
mov
push
xchg
push
std
xchg
mov
inc
push
push
jo
pop
scas
push
ss
mov
decl
mov
xchg
data16
and
leave
outsb
shll
cmp
xchg
and
mov
mov
jnp
adc
pop
dec
inc
fbstp
icebp
inc
push
dec
jnp
les
lods
mov
pop
jnp
aam
adc
out
pusha
ja
enter
testl
sti
ljmp
insb
das
add
sub
or
movsl
insl
and
pop
xchg
push
outsl
lret
imul
sbb
int
inc
and
in
ljmp
mov
dec
xor
push
call
dec
and
xor
lahf
adc
inc
int3
xor
xor
stc
fsubl
in
pop
stc
pusha
dec
jns
pop
pushf
push
jne
and
loope
sbb
add
aad
int
cmp
inc
daa
cwtl
mov
sarl
daa
std
int
ret
cltd
xor
xchg
sub
dec
daa
inc
mov
jmp
push
push
rcll
ljmp
and
jae
in
adc
jbe
fistl
pop
pop
leave
fs
sub
cltd
inc
ss
add
shlb
call
aas
ja
cmp
sbb
iret
fwait
icebp
and
in
jae
ljmp
jb
inc
out
and
cmp
push
sub
pop
inc
mov
add
xchg
inc
icebp
stos
pop
and
lods
mov
getsec
fs
inc
push
aam
inc
push
maskmovq
mull
movsl
mov
fdivrp
dec
jnp
pop
inc
shlb
jmp
mov
iret
lock
ja
mov
int3
push
inc
dec
and
nop
xor
shlb
xchg
aad
push
icebp
bound
pop
cmp
jbe
add
loope
pop
jge
jae
ss
out
jp
sub
or
repz
mov
jno
inc
pusha
adc
outsl
test
or
ds
dec
rolb
xchg
shrl
stos
sahf
lcall
push
push
fisubs
mov
sahf
jp
inc
pop
orb
jp
lcall
into
fldenv
xchg
jns
iret
sbb
pop
push
adc
sub
rolb
or
lcall
insb
loopne
pop
cmpsb
es
pop
stos
pushf
lock
xor
xor
sti
out
fwait
mov
pushl
mov
sbb
enter
adc
dec
test
push
jg
movsl
mov
xchg
loopne
jne
popf
jg
call
cmp
jno
lahf
pop
mov
sub
nop
cmpsb
and
clc
mov
int3
inc
pushf
pop
and
cltd
or
cmp
fldenv
gs
xor
dec
aad
mov
mov
clc
inc
sahf
cmp
movsl
push
stos
fwait
dec
sbb
pop
lods
pop
pusha
xchg
ljmp
cmpsl
fwait
test
add
outsl
dec
test
pusha
push
leave
movsb
dec
sub
lret
sbb
xchg
pop
pop
sbb
icebp
mulb
out
mov
xchg
scas
mov
xchg
rcl
sahf
fucomip
fs
xchg
sbb
sbb
incl
add
insb
inc
clc
adc
mov
outsb
repnz
dec
enter
and
popf
les
cld
xchg
xchg
sub
jns
out
in
mov
mov
lret
mov
adc
and
scas
add
mov
lret
cs
push
repz
arpl
mov
shll
jae
into
mov
subb
inc
in
adc
test
shlb
imul
mov
pushf
or
out
lock
fdivs
sti
cmc
mov
out
idivl
dec
shll
ss
pop
push
je
loope
leave
adc
xorl
cmp
jbe
add
jo
push
inc
fstpl
cmpb
or
inc
push
xorb
rcrb
lods
in
movsl
or
insl
bound
adc
mov
sbb
jle
ja
sbb
popf
or
in
outsl
ds
in
sbb
jle
es
inc
mov
fisttpl
push
jle
scas
int3
add
push
pop
xchg
mov
imul
push
fbld
sub
dec
push
pop
es
mov
inc
add
shll
dec
or
je
pop
fnsave
ja
lcall
out
enter
lcall
icebp
add
sub
jecxz
js
and
sbb
daa
aaa
jno
cld
adc
mov
jb
aam
or
cld
stos
je
xor
adc
mov
inc
idivl
mov
test
outsl
out
mov
and
inc
xor
loope
xchg
cld
in
js
out
jp
mov
or
xchg
popf
adc
xor
bound
adc
popf
mov
add
hlt
adc
add
mul
push
dec
arpl
sti
mov
bound
cli
add
cmp
cmp
push
add
jp
shl
subl
gs
jne
sahf
call
mov
xor
fwait
and
pop
mov
int3
fiaddl
jb
dec
cmp
dec
add
lds
movsl
repnz
mov
sub
push
fstps
mov
leave
push
fwait
js
stos
push
in
sub
adc
adc
inc
aaa
push
sub
mov
fiaddl
mov
cli
out
inc
jge
sahf
repz
enter
pop
adc
bound
xor
xor
fisubs
jne
xchg
in
cli
fbstp
das
movsl
lret
or
sub
pop
add
push
ret
mov
mov
shll
push
jg
filds
into
cmpsb
je
das
xor
sahf
test
mov
loopne,pn
pop
ds
cs
xchg
dec
xorl
ljmp
iret
pushf
fs
and
negb
mov
adcl
stc
jbe
es
push
sti
cmp
setle
test
pusha
jp
je
testl
rcll
ret
movsb
jl
jmp
mov
jo
and
or
out
fwait
or
sub
sub
mov
push
loope
lret
jae
adc
add
jmp
xchg
sbb
cmpsb
loope
or
lods
mov
jae
xlat
test
jo
scas
jp
cld
aaa
sarb
jnp
xor
loop
sub
ja
mov
xchg
dec
mov
scas
or
cmpsl
sbb
bound
in
push
inc
insl
lcall
ficomps
mov
or
in
jp
and
dec
mov
pop
lods
add
mov
push
mov
mov
pop
mov
jp
sub
and
lret
inc
push
sarb
sub
sbb
cli
or
out
mov
out
sti
sbb
inc
adc
test
fsubrs
push
mov
addr16
loopne
scas
cmp
xchg
push
and
xor
mov
jmp
pop
test
out
push
sub
pop
in
repz
mov
and
lcall
cmpb
outsl
not
mov
jecxz
mov
mov
pop
push
inc
mov
fwait
xchg
add
clc
cmc
push
push
pop
cmpsb
mov
fidivrl
jns
call
dec
mov
addr16
and
cmpsb
jne
js
pop
test
jns
inc
ja
sbb
mov
and
mov
aam
repnz
test
add
call
enter
xor
inc
fbstp
adc
in
jb
shrb
and
mov
mov
jnp
shrl
and
dec
jge
mov
adc
inc
shlb
adc
xchg
push
cwtl
push
cmp
idivl
insl
loop
push
mov
js
dec
pop
arpl
test
push
jge
cmp
mov
mov
mov
loope
fdivrs
sub
dec
das
insl
push
push
xorb
lea
mov
xor
cmp
pop
jle
push
in
mov
scas
mov
cld
inc
loop
les
bound
push
outsb
jmp
and
pop
mull
dec
jg
pop
and
pusha
mov
jp
cmp
pop
scas
mov
dec
stc
jp
mov
mov
clc
mov
inc
add
rcll
pushf
sbb
or
sub
push
hlt
cltd
jae
and
jg
mov
ljmp
fisubs
mov
pshufw
xor
nop
jnp
ret
add
bound
cs
cmpsb
sub
outsl
jmp
adc
inc
cs
jp
cmc
pop
pop
push
in
dec
scas
loope
xchg
and
sub
jno
dec
sbb
lods
inc
cmp
test
out
mov
sbb
push
push
mov
adc
jmp
aad
repz
mov
shll
jno
bound
cmpsl
add
or
lods
neg
pop
lock
stc
lret
inc
test
or
mov
push
imul
sbb
adcl
test
mov
mov
push
cs
ds
sbb
or
fsubrl
adc
movsl
icebp
jp
neg
cmc
pop
aaa
sbb
fs
iret
outsb
stos
cmp
jo
push
xchg
push
lret
jne
shll
test
jne
andl
add
scas
aas
jb
test
aad
shrl
pop
rclb
jl
jmp
mov
repz
sub
add
inc
js
movsw
xchg
and
ret
imul
or
xor
scas
xor
mov
in
mov
mov
clc
xchg
out
cs
cwtl
imul
outsl
pusha
xchg
nop
mov
fwait
mov
imul
movsl
pushf
jmp
dec
adc
int3
jnp
mov
test
push
adcb
je
out
mov
dec
push
jg
mov
push
and
imul
mov
test
test
sbbl
test
sbb
in
in
lods
ja
jbe
out
lods
mov
movsb
or
mov
hlt
sbb
jne
xlat
or
xchg
or
and
gs
mov
insl
jne
movsb
jnp
mov
pop
lods
out
add
lds
jle
int
int3
xor
scas
rcrb
int
fisttpll
add
push
imul
fists
aaa
insl
test
fs
mov
fildl
ret
ljmp
sahf
sbb
or
aas
add
arpl
sub
out
jmp
push
cmpsb
sbb
stc
jb
cmp
dec
sub
pop
cmpsb
addl
mov
lock
cmpsl
movsl
mov
sbb
setb
dec
xor
push
push
sbb
push
pop
or
cmp
mov
push
adc
data16
xchg
lret
mov
cmp
movsb
repnz
arpl
push
sbb
jecxz
shll
push
pop
pop
pusha
jg
xchg
das
cmp
mov
cli
outsl
xlat
pop
pop
fisubl
and
add
mov
add
mov
adc
push
dec
pop
mov
fisttps
pop
imul
or
ja
and
mov
cmp
xchg
es
jecxz
notb
das
scas
pop
pop
into
dec
cli
ret
mov
gs
and
cmp
xor
pop
push
int
cmpsl
adc
and
inc
aam
xchg
nop
inc
negl
clc
rorl
fldcw
dec
dec
nop
push
jbe
dec
in
cmpl
aas
outsl
add
aam
mov
sti
mov
and
push
das
rclb
inc
out
jp
movsl
popf
jle
xchg
inc
repnz
cld
andl
adc
jle
push
or
xchg
or
mov
xor
lret
push
jae
or
test
cmp
hlt
jno
lret
adc
mov
int3
mov
sahf
ret
lods
insl
test
imul
lods
loopne
mov
cmc
pushl
jbe
lcall
mov
loopne
push
mov
dec
sbb
mov
jmp
aas
popf
cmp
add
rcl
sub
out
push
mov
mov
xchg
xor
insb
push
dec
jl
sub
mov
xchg
sbb
arpl
dec
push
cli
and
les
es
and
loopne
pop
rclb
test
add
insb
fcmovnu
in
push
jge
dec
and
jg
mov
pop
ljmp
sub
lcall
andl
push
cmpsl
cltd
rorb
mov
popf
fsubs
adc
push
add
ss
push
jnp
jg
daa
add
add
lock
mov
xchg
leave
xchg
fistpl
incb
cmp
movsl
pop
aas
mov
pop
in
push
sub
or
lcall
lret
mov
cli
scas
in
adc
jb
push
xchg
shlb
mov
inc
mov
xchg
cmpsl
fbstp
sub
and
xchg
mov
push
cmp
xchg
sub
sti
cmpsl
dec
push
sti
repnz
pop
push
pop
cltd
out
test
dec
rolb
xchg
das
cs
mov
dec
cmp
mov
mov
pushf
pusha
incb
xor
lods
out
stos
clc
add
shlb
adc
xor
cmpsl
xor
insb
jnp
in
push
nop
dec
setb
aad
vdivss
in
clc
xlat
inc
sahf
bound
jge
cs
test
hlt
cmpsb
adc
out
sbb
mov
imul
lods
sbb
in
pop
mov
xor
push
inc
sbb
pop
mov
mov
popf
inc
enter
xor
sbb
movl
ss
aad
loopne
and
loopne
jbe
xor
dec
lahf
jo
add
nop
outsb
or
mov
fimuls
pop
mov
ret
xlat
decl
pop
pop
pushf
sub
mov
inc
pop
popf
xchg
lahf
and
ja
mov
cmc
sbb
inc
mov
aam
or
add
dec
cmpb
sub
dec
push
cmp
xchg
adc
mov
mov
insl
mov
cmc
jno
aad
cmp
inc
movsl
add
fcmovnb
add
shlb
jno
and
push
subl
int
cmp
and
sub
sbb
mov
and
loopne
xor
push
lock
mov
adc
int3
sub
mov
adc
dec
shl
push
in
iret
push
ror
in
call
pushf
push
dec
stos
inc
sub
js
stos
addr16
xor
or
mov
les
js
fs
ljmp
dec
mov
inc
ljmp
ffreep
push
scas
sub
sbb
mov
rcr
out
and
push
or
data16
lods
lea
aas
andb
xchg
sbb
jb
orb
out
cmpsl
lret
add
pusha
xor
mov
mov
sbb
mov
mov
and
stos
lods
and
repnz
inc
or
mov
test
je
lods
lret
pop
lret
sahf
dec
adc
mov
mov
sub
pop
pushf
dec
scas
pop
cmp
inc
cld
xchg
sti
dec
dec
popf
jmp
mov
dec
fnclex
dec
sub
or
test
adc
in
sub
inc
pop
cs
mov
push
cltd
sub
mov
xchg
hlt
and
push
cmc
fbld
jecxz
pop
ljmp
dec
lods
mov
push
daa
scas
lods
or
and
test
adc
push
jl
test
rclb
adc
imul
dec
loope
mov
sbbb
aam
sbb
xor
popa
outsb
rcrb
cltd
mov
cs
sbb
es
imul
dec
cltd
jb
push
xor
orb
push
xor
push
mov
jnp
mov
repz
test
and
mov
loop
in
dec
ljmp
loope
push
pusha
cmp
bound
sub
pop
xchg
pop
in
mov
mov
mov
xchg
mov
sub
addr16
test
mov
pmaxub
subl
lds
xchg
jbe
mov
lds
sahf
in
or
sub
test
daa
sbb
or
pop
out
loop
mov
mov
in
cltd
cmpsl
aad
test
fucom
rcl
outsl
cltd
fiadds
divb
psubd
xor
push
pushf
ret
jmp
mov
and
iret
out
mov
push
fadd
dec
loopw
cli
push
or
test
clc
sar
stos
shrb
int
jecxz
add
cmp
rcr
xchg
fstpl
adc
adc
popf
mov
aaa
fdivrs
jb
mov
test
cmp
dec
mov
fidivl
xor
dec
pop
pusha
mov
adc
dec
fildll
cmp
hlt
fildl
lea
jno
sub
addl
pusha
iret
sbb
popa
rolb
mov
movsl
lcall
mov
scas
adc
popa
inc
mov
fisttpll
and
pop
jno,pn
mov
rolb
sub
inc
dec
cs
adc
pop
pop
add
icebp
cmc
mov
fstps
and
xchg
test
xchg
mov
addl
adc
xchg
dec
xchg
rolb
jns
mov
out
jno
and
popa
cwtl
pop
test
or
cli
fadds
and
sarb
xor
add
dec
mov
aas
fcom
mov
push
and
enter
add
jle
inc
lcall
pop
or
sti
sarl
xchg
push
ds
adc
je
fwait
mov
ficoml
addb
fnstsw
mov
pop
mov
jb
dec
mov
pusha
xor
addl
mov
add
inc
ja
fwait
push
add
push
sub
jb
adc
jle
pop
jl
insb
xor
or
mov
hlt
sub
jecxz
push
das
cld
cli
or
xchg
subl
or
jne
fnstenv
jno
sub
mov
xlat
mov
mov
adc
ss
xchg
mov
mov
test
jmp
mov
jmp
out
test
cmp
cli
dec
jb
pushf
scas
mov
test
jmp
daa
pop
lret
outsl
fsubl
mov
lods
test
pushf
and
inc
push
xchg
addr16
cmp
pop
adc
sbb
aas
mov
mov
add
popa
loop
lods
stos
push
cmp
cmpsb
xor
push
mov
fisubrs
ret
mov
dec
mov
in
shlb
mov
test
lahf
in
dec
rcl
sbb
sti
loope
add
sub
pushf
loopne
jle
shlb
mov
add
sub
dec
pop
and
cmp
push
and
inc
in
add
xchg
stos
addr16
xor
sbb
test
imul
dec
adc
add
lock
repnz
lahf
or
aaa
mov
mov
scas
repz
movsb
xchg
or
aad
pop
cltd
das
inc
fs
xchg
xlat
rorl
bound
xchg
lock
lret
pop
jo
jge
push
mov
shlb
leave
loopne
aaa
inc
testl
cmp
pop
fwait
lock
sub
stos
jl
and
push
outsb
scas
and
adc
in
jnp
inc
and
cmpsb
dec
mov
push
jmp
gs
xchg
out
mov
sbb
pop
mov
dec
in
add
ljmp
js
push
pop
jnp
mov
fnsetpm(287
inc
sti
popf
and
ds
inc
xchg
jecxz
mov
mov
loope
iret
mov
addb
pop
or
jns
addr16
mov
mov
lret
inc
inc
and
jecxz
mov
mulb
xchg
pusha
je
subl
insb
push
out
mov
movsb
sbb
dec
outsl
loope
xor
xchg
adc
fistl
sbb
js
sub
ljmp
into
rcl
jmp
repnz
add
int3
call
mov
movsb
sbb
and
dec
pop
enter
es
add
ret
add
cld
mov
cmpsb
clc
test
in
movsl
inc
movsb
cmp
add
icebp
jnp
dec
insb
pcmpgtw
sub
hlt
les
mov
cmpsb
rorl
jmp
xchg
mov
add
mov
mov
xor
push
inc
movsb
push
jle
mov
inc
in
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
xor
push
fnstenv
inc
mov
or
test
jae
push
test
or
mov
push
cmp
jg
push
sbb
adc
stc
jecxz
push
jne
icebp
sarl
data16
and
xchg
xchg
out
sahf
mov
mov
lcall
pop
bound
inc
jb
mov
pop
sub
add
jno
push
test
cmp
addr16
shlb
inc
dec
lcall
es
fidivrs
push
mov
add
fs
xchg
jl
leave
aam
call
mov
out
jmp
das
mov
and
or
hlt
test
movsb
xor
adc
xor
nop
ret
sar
test
dec
fs
pop
pusha
inc
mov
in
and
sbb
pop
jmp
fnstenv
cltd
cmp
pop
sbb
je
cmp
pusha
stos
notl
daa
xor
xor
push
cmp
testb
js
jne
scas
push
andb
jo
aaa
add
pushl
scas
jb
mov
in
mov
cs
scas
mov
xor
adc
filds
mov
iret
ror
mov
fs
jg
addr16
sbb
xchg
xchg
cmp
adc
aam
jb
xor
inc
adc
inc
icebp
jecxz
xchg
dec
stc
push
sbb
sbb
ss
or
cmp
stos
mov
dec
cmovl
aas
mov
dec
popa
ret
lret
pop
mov
push
sbbl
aad
ret
mov
sub
shrl
and
test
popl
ljmp
mov
in
push
xchg
and
xchg
add
in
push
xchg
push
scas
mov
das
push
in
pop
lock
push
enter
add
xor
inc
mov
sbb
pop
lods
xchg
repnz
pop
out
in
pushf
mov
push
test
and
ljmp
pop
adc
imul
in
scas
movsb
pop
lds
mov
jo
jmp
push
xor
pop
xchg
adc
adc
xchg
jmp
cltd
hlt
fstl
xor
dec
fsubrp
out
inc
cmp
jo
cld
or
insl
dec
loopne
iret
aas
adc
mov
push
sbb
cwtl
mov
xor
pop
fisubrl
mov
dec
cmp
or
movsb
and
push
pusha
xchg
xor
and
sbb
daa
outsl
sub
loope
mov
xlat
and
push
in
aas
jmp
adc
pop
xchg
dec
push
in
or
pop
das
jle
dec
lret
push
mov
bound
aaa
ja
mov
hlt
or
lahf
jns
add
test
sub
adc
mov
dec
je
dec
lcall
push
and
adc
fsubl
shl
repz
jbe
pop
xchg
in
jp
fdivrs
enter
call
jl
cmpsl
inc
push
leave
movl
call
je
dec
xchg
test
imul
mov
xor
mov
adc
rcrl
and
inc
fidivrl
lds
rcll
pop
mov
and
dec
push
ret
and
cmp
ret
push
lock
mov
sub
out
dec
xor
ret
aam
cmp
es
mov
lods
fucomip
scas
pop
test
xchg
lods
xor
and
mov
aaa
sti
sahf
mov
test
fcompl
xor
mov
pop
push
dec
scas
rolb
pop
mul
or
mov
aaa
pop
xor
dec
movb
dec
pusha
dec
sub
jp
clc
cmp
or
test
mov
movsl
pop
mov
sub
jo
test
rcl
push
push
add
pop
insl
pop
stos
stos
jmp
imul
xor
shlb
pop
push
xchg
aam
cmpsb
xchg
pushf
adc
xor
js
daa
lret
jl
pushf
out
mov
outsl
push
push
xor
int
push
ret
ds
insl
lods
rorb
dec
imull
jecxz
and
pushf
cmpsl
push
inc
hlt
out
mov
add
gs
addr16
or
push
push
call
in
punpcklwd
mov
inc
gs
aaa
repnz
and
insl
lret
adcb
and
les
nop
ja
add
mov
movsb
sub
lock
push
cmp
popf
mov
add
int3
inc
mov
frstor
mov
cli
pusha
mov
and
testl
stc
jo
pop
fldt
pop
call
xchg
xchg
jmp
in
int3
adc
push
repz
push
repnz
and
pusha
cmp
jae
xor
push
aas
movsl
mov
ret
je
inc
xchg
inc
fstl
int
pop
jmp
call
aam
fldt
std
imul
lds
dec
dec
mov
inc
add
inc
fchs
pushf
mov
lahf
adcb
sub
ljmp
shrl
jb
adc
push
dec
jge
or
lcall
aaa
inc
mov
xchg
push
das
and
mov
aaa
enter
xor
enter
inc
movsb
leave
push
mov
pop
cli
subb
test
nop
add
jle
cmp
xchg
pusha
sbb
jo
imul
xor
sbb
inc
xor
add
sub
cmpsl
jg
cmp
scas
out
or
push
jg
lock
mov
dec
icebp
imul
ds
cmp
daa
push
or
mov
pop
lcall
ror
stos
jbe
jb
xchg
std
or
imul
sbb
lea
cmp
cwtl
in
fbstp
push
js
mov
mov
addr16
icebp
cmp
sub
inc
xchg
stc
inc
test
pusha
jae
xchg
inc
jnp
sub
inc
xor
and
dec
mov
sbb
jae
and
push
shl
insb
adc
shrl
add
push
mov
mov
dec
jo
inc
sbb
adc
int3
repnz
out
adc
cltd
sub
xchg
cmp
iret
pop
std
xchg
and
cmp
add
imul
inc
cli
adc
imul
xor
mov
or
test
push
cmpsl
testl
pop
scas
adc
loopne
jl
cmp
repz
test
ja
or
loope
adc
cmp
mov
outsb
icebp
out
lock
mov
mov
out
imul
push
jae
adcl
xchg
pop
xor
xchg
in
test
shrb
or
sub
fwait
mov
and
shrb
jae
or
into
fcoms
addb
fwait
sahf
add
jbe
xor
inc
insl
xor
cli
aad
loop
pop
fsts
out
jae
cmp
pop
rcll
dec
fildl
push
out
pop
inc
mov
out
and
xchg
rol
sbb
notl
push
mov
pop
pop
and
mov
mov
fiadds
mov
les
push
dec
add
mov
cmpsl
push
cwtl
int3
cmpsb
cld
xor
lea
or
fldcw
sub
adc
stos
cli
dec
sahf
movsl
mov
mov
mov
int
icebp
pop
test
shrl
jb
repz
mov
movsb
daa
insb
call
add
xchg
daa
mov
fcmovnu
jo
sub
pusha
xchg
mov
dec
dec
cld
pushf
mov
cld
inc
mov
dec
mov
push
nop
dec
push
mov
outsb
mov
call
repnz
and
pop
and
sub
test
mov
dec
adc
cs
out
jbe
out
iret
jecxz
inc
dec
pop
sbb
adc
rorl
outsl
fildl
les
loope
add
fdivl
push
mov
cmpsl
test
mov
cwtl
cltd
sub
mov
sbb
xchg
add
lcall
mov
xchg
xor
xchg
mov
test
cs
sbb
aas
rclb
lods
adc
in
and
dec
lods
and
fimuls
and
popa
fisubrs
sub
rol
push
sahf
imul
and
jp
sbb
outsl
int
cmp
sbb
divb
lret
jl
mov
nop
cmp
push
adc
xchg
movsl
test
jae
sbb
cmp
fdivl
pop
out
lret
pop
fsubrs
popf
xchg
in
daa
fcmovbe
test
add
mov
aaa
rcr
out
ret
dec
jmp
adc
popf
movsb
xchg
mov
lret
or
adc
jl
push
fwait
int
dec
push
cwtl
loopne
insb
inc
and
test
xor
dec
popa
pop
lea
sbbl
adc
pop
push
pop
lods
addb
push
push
dec
dec
mov
iret
cltd
push
stc
add
repnz
pop
hlt
sub
cld
xchg
sub
mov
sbb
aad
or
popa
lds
repz
aam
out
sbb
sahf
xor
out
mov
hlt
mov
and
mov
or
cmp
xchg
push
leave
daa
leave
es
add
fadd
pop
and
popa
ja
pop
inc
or
add
dec
adc
cwtl
xor
and
idivb
adc
and
aam
dec
filds
push
inc
icebp
dec
dec
test
lds
lds
push
jae
xchg
push
out
pop
jl
and
cmp
jl
add
in
cmp
mov
adc
sub
hlt
sahf
xchg
gs
mov
or
jle
sub
insb
call
stc
in
arpl
fcmovu
or
decl
test
in
adc
sub
subb
mov
and
ficoml
ret
je
jl
mov
push
push
mov
out
pop
ja
movsl
movsb
mov
js
adc
jg
sbb
test
add
fcom
cmc
aaa
clc
or
fisubrs
xor
xchg
out
test
jecxz
push
out
or
into
adc
cmp
ljmp
lahf
pop
jge
dec
inc
and
jno
scas
shll
push
jbe
fists
cmp
push
orb
rclb
jle
jae
scas
xchg
ja
adc
or
lods
out
rcrb
push
pop
jp
xor
sbb
pop
and
add
pop
xor
jb
ret
push
insl
or
inc
jp
sahf
arpl
jae
insb
movsl
in
popf
mov
cltd
hlt
pop
dec
mov
nop
popf
xchg
loop
je
loope
stos
les
stc
dec
adc
ror
dec
cmp
addb
clc
xchg
int3
incb
cmp
push
insl
or
sub
int
stos
push
push
cmp
pop
aad
out
stos
stos
cmc
scas
mov
xor
in
psubusw
lea
imul
loopne
and
jmp
pushf
fwait
mov
aas
sub
repz
mov
fsubrs
lcall
push
ss
push
lret
loop
and
iret
es
mov
fidivrs
aas
call
lcall
insb
lahf
cmp
xor
movsl
jge
push
adc
pop
push
fcmovu
hlt
cmp
adc
xor
fs
hlt
cmp
insl
scas
sbb
mov
lahf
pop
xor
insb
xchg
jecxz
mov
repnz
cld
cwtl
stos
cltd
fsubrs
xor
aad
mov
pop
adc
dec
fdivp
aas
sbb
or
out
jge
lahf
cmp
push
xchg
pusha
movsb
ret
mov
jne
and
xchg
sbb
rolb
or
mov
je
pop
dec
in
and
or
mov
leave
cmc
cmp
sbb
sti
mov
adc
sub
out
mov
dec
jns
pop
xor
ljmp
shll
cmp
dec
jg
std
inc
pop
mov
incb
or
imul
shlb
mov
xlat
mov
dec
cmp
cmp
pop
aaa
faddl
jnp
les
out
andb
cltd
mov
gs
mov
lods
and
inc
mov
sbb
add
lods
pop
lea
jne
fmull
pop
in
into
dec
lcall
mov
clc
sub
pop
xor
push
and
push
and
mov
mov
je
adc
inc
xor
and
pop
jle
push
push
mulb
repnz
push
mov
add
mov
int3
rcll
adc
mov
or
sahf
packsswb
mov
arpl
mov
jecxz
push
sbb
mov
xor
fsubl
and
sbb
mov
mov
sbb
cmc
mov
cmp
data16
and
mov
loop
adc
iret
add
mov
mov
add
mov
in
mov
js
mov
cmp
or
sarb
adc
test
pop
pop
lds
push
inc
inc
fisubl
jb
fdivs
ljmp
mov
and
push
lods
aam
mov
leave
inc
sbb
lahf
pop
push
add
cmpsl
and
xchg
sahf
int
pop
ficompl
outsb
jl
insb
dec
xor
sub
pushl
and
mov
sbb
decl
dec
pop
lods
lea
call
test
mov
jb
mov
pop
pop
lcall
mov
adc
or
jle
insb
xorl
push
dec
mov
mov
mov
pop
mov
sub
lahf
jnp
dec
fstl
adc
fdivs
ficompl
dec
ret
push
call
cltd
jns
sub
push
js
imul
lods
ror
shlb
push
pop
outsl
cwtl
enter
mov
jmp
cmc
mov
scas
mov
aaa
in
sub
sbb
test
outsl
fisttpl
es
inc
sub
sbb
mov
push
pop
adc
gs
sub
dec
mov
mov
scas
inc
sbb
push
dec
mov
pop
sbb
shll
mov
sub
loop
xchg
enter
aam
rol
adc
inc
movsb
jbe
ret
sub
add
pop
or
sarb
add
ss
xchg
push
add
jge
fildl
adc
adc
les
sti
mov
cmpsl
dec
mov
outsl
mov
xchg
cmp
aad
ret
fs
fucomp
sbb
adc
sub
lret
lods
adc
pop
in
cmp
stos
shl
sarb
sub
xor
jbe
int3
aas
mov
adc
fidivrs
jp
cmp
rol
inc
sbbl
test
jb
je
outsl
cmp
mov
fsubs
pop
or
mov
cmp
dec
jecxz
pop
clc
mov
mov
xchg
fdivrs
sti
mov
int3
lcall
mov
mov
aam
pop
xchg
and
pop
ja
lds
push
data16
or
jbe
ds
push
cwtl
cld
or
or
fbld
lret
loopne
aam
or
lcall
je
stos
out
mov
mov
nop
mov
out
sbb
xchg
testb
int3
jg
mov
roll
lret
or
aas
testl
scas
push
psubusb
sub
xchg
aas
fldt
and
js
jmp
rcrl
mov
jg
mov
push
lret
aam
popa
stc
iret
sti
pop
fisttpl
jp
ficoml
cmpl
hlt
rcr
clc
cli
movsb
imulb
cmp
jae
repz
test
stos
jns
les
addr16
lcall
pop
lcall
xchg
xchg
adc
jecxz
out
and
inc
mov
jo
loopne
idivl
inc
roll
adc
pop
push
notb
imul
enter
xchg
dec
jle
mov
test
mov
inc
les
jae
loopne
sbbb
das
mov
pop
addr16
lds
popf
pop
jmp
loop
sub
repnz
sar
push
stos
xchg
xchg
in
in
mov
lods
lret
inc
out
xchg
jge
push
outsl
mov
push
sbb
mov
addl
xchg
sub
cmp
pop
outsb
adc
loopne
lcall
outsb
push
xor
inc
in
stc
leave
mov
ret
and
sbb
les
xchg
cltd
cmp
sbb
and
test
mov
jp
jle
cwtl
push
cmp
mov
ret
cmp
jae
ss
push
in
sbb
into
mov
movl
push
push
jle
aad
sbb
jg,pn
pushf
push
xor
test
popf
jnp
btr
pop
popf
sbb
lods
and
pop
popf
adc
pop
leave
jge
push
mov
push
pop
fidivrs
filds
mov
pusha
shl
pop
test
fisttpll
loop
mov
inc
fs
lret
dec
cmpsb
shlb
pop
mov
rorl
cld
dec
popf
cmp
inc
xchg
inc
pop
or
std
ret
mov
push
rclb
lods
aaa
sbbl
aam
cld
outsb
xor
stos
cmp
jle
lock
pop
stc
or
pop
push
sbb
mov
or
add
xchg
loop
inc
mov
loopne
or
jecxz
dec
popa
rcrb
cld
jno
lds
add
xor
adc
cltd
cs
inc
xchg
in
repz
fisubrl
int3
es
mov
out
or
push
jno
dec
lock
mov
pop
mov
cmpsb
filds
mov
inc
dec
popl
inc
xchg
mov
fdiv
ret
outsl
ja
enter
adc
xchg
dec
mov
lahf
testb
xor
xlat
push
xor
mov
roll
cwtl
xchg
inc
insl
cltd
dec
repnz
in
add
xchg
and
or
mov
and
addr16
push
test
pop
fistpll
mov
mov
push
xchg
push
sahf
ja
push
data16
lret
popa
dec
into
mov
je
adc
inc
fstl
scas
out
jae
mov
pop
ss
push
jmp
repnz
mov
xor
arpl
loop
fwait
mov
sti
push
test
inc
pop
add
sarb
dec
ret
pop
repnz
testl
movb
into
jge
jp
adc
inc
cmpsl
xor
dec
push
sub
inc
int3
lret
mov
jns
sbb
cwtl
jmp
jns
sub
mov
cmp
insl
lret
stos
push
sub
hlt
cmp
sbb
and
outsl
arpl
data16
ljmp
adc
and
jg
movsl
jecxz
cmpsl
fldl
popf
push
lds
arpl
cmp
push
fmull
xchg
sub
add
and
inc
dec
inc
sbb
xor
cmp
xchg
and
scas
jp
stos
test
pop
sbb
popf
or
push
mov
fstps
movsb
push
add
stc
rclb
dec
popf
test
inc
movsl
inc
imul
data16
fildl
add
test
jne
out
cmp
ret
xchg
out
test
roll
dec
cmp
ljmp
sub
je
mov
pop
sbb
xchg
cld
imul
and
lret
push
jo
shll
xchg
mov
jp
hlt
pop
xchg
xchg
mov
xor
aam
xor
gs
xchg
mov
pusha
mov
jmp
leave
inc
add
repz
cmp
dec
cmp
mov
outsb
jo
fs
jo
dec
xlat
js
mov
aaa
mov
xchg
xchg
js
sub
popf
or
ljmp
pusha
in
fisttpll
neg
or
mov
mov
dec
nopl
dec
mov
ret
sbb
shr
loopne
push
mov
in
dec
fidivrl
imul
rorb
fwait
inc
sub
dec
sbb
repnz
mov
dec
hlt
cmp
pop
mov
enter
out
jge
or
daa
push
movsl
xchg
xchg
inc
sbb
xor
inc
outsl
into
pop
dec
sahf
lret
add
sbb
icebp
aad
xchg
in
cmp
add
sbb
sub
mov
push
sbb
sub
adc
push
mov
aam
lcall
pop
ja
sbb
adc
fwait
sub
outsl
inc
sub
movsb
insl
mov
mov
xchg
dec
lret
imul
sarl
adcb
rcrb
dec
jae
mov
arpl
daa
jne
mov
mov
cli
insb
cli
cld
mov
in
adcl
mov
cmpsb
and
pop
andb
dec
stc
push
insb
or
int3
jnp
fldenv
sub
loopne
fidivrs
add
shlb
add
mov
pop
stos
repz
outsl
test
testb
roll
mov
sub
pop
out
xchg
sarb
push
sbbb
lahf
stc
push
jl
aas
mov
sti
sub
pop
sbb
or
inc
cmp
ret
cmpl
sbb
push
out
mov
fs
and
es
lods
push
add
or
sub
adcb
fldenv
pop
cmpl
lret
leave
cld
out
jge
sahf
inc
lcall
inc
jne
mov
pop
out
cltd
mov
dec
fnstcw
jo
add
loope
xchg
sub
push
jnp
rcr
into
mov
xor
imul
xchg
bound
insw
daa
les
loope
rol
lret
test
mov
jecxz
cmpb
jg
movl
xchg
adc
fs
imul
lock
imul
fabs
mov
cmp
jae
cmp
movsl
inc
xchg
cmpsl
outsl
push
cmp
mov
mov
xor
test
les
sub
dec
cmp
inc
jle
sub
xchg
xchg
mov
and
rcll
cwtl
or
dec
repz
cmpsl
icebp
mov
and
popf
inc
pop
sub
lret
addl
int3
xchg
jecxz
daa
lcall
ror
xor
fadd
sbb
mov
or
pusha
lret
fmuls
aad
mov
imull
imul
push
insb
cmpsl
mov
mov
test
jecxz
adc
adc
mov
adc
push
push
in
stc
jge
jae
xchg
orb
pop
or
ss
jbe
xor
mov
xchg
inc
jb
iret
pop
fdivr
mov
gs
jecxz
sub
jae
push
push
mov
sbb
dec
xor
jmp
dec
or
daa
push
jecxz
or
push
sbb
push
dec
in
jge
add
hlt
test
mov
push
cmp
jne
test
inc
pushf
or
inc
mov
in
cs
sbb
jbe
mov
out
cmc
xchg
gs
outsb
jnp
loopne
sub
sbb
rcl
fwait
adc
out
jl
repz
xor
into
imul
std
inc
xor
inc
push
xchg
add
or
dec
movsl
mov
dec
dec
jb
xor
xor
lods
into
mov
addr16
lods
xor
cltd
neg
cmp
cld
test
xchg
inc
adc
sub
insl
dec
inc
add
adc
pop
xor
add
push
cs
cmp
in
popf
fmul
scas
cmc
inc
mov
gs
ljmp
sbb
scas
mov
xor
pop
popa
fildl
ja
pop
cld
push
sub
pusha
ror
fwait
mov
clc
jo
ror
mov
push
lock
pop
mov
jmp
mov
push
aam
ret
aas
movsb
shll
adc
hlt
or
test
prefetch
or
out
and
popa
or
clc
pop
stos
nop
inc
xchg
xor
push
push
inc
sbb
mov
mov
xchg
in
push
pop
xchg
repnz
xlat
inc
xchg
lods
xor
outsb
or
push
mov
pop
xlat
sti
inc
repnz
jg
into
fistl
xchg
cld
filds
inc
dec
arpl
mov
ja
pop
mov
mov
push
xor
xlat
pop
ficomps
push
push
xchg
out
add
cltd
pop
cld
rorl
xchg
mov
lods
icebp
xchg
adc
jle
jbe
call
not
push
xor
clc
int
cwtl
pop
shrb
into
mov
sbb
jnp
sbb
mov
lahf
cli
add
cmpb
jge
fsubrs
dec
mov
jno
xor
shll
dec
fcoms
or
and
pop
test
xor
dec
std
pop
es
mov
or
lahf
test
mov
inc
sub
movsl
mov
stc
int
cmp
mov
push
push
jns
loop
enter
push
lods
add
pop
sbb
in
cmp
gs
xor
pop
sarl
and
add
dec
xor
xchg
adc
out
loope
daa
cltd
dec
adc
push
push
and
mov
insl
xchg
mov
jl
mov
dec
push
mov
mov
jp,pt
hlt
lret
int3
popa
push
cmp
movsl
jno
rclb
jo
lods
adc
xchg
jmp
insb
les
sbb
flds
pcmpgtw
jmp
je
dec
push
cld
cmpb
aam
pushf
stos
mov
ret
subb
ljmp
lods
xor
push
mov
es
jmp
mov
jbe
addr16
lret
cltd
scas
leave
lea
test
rcll
out
sbb
dec
jno
fistpl
or
fsts
popa
mov
xchg
push
and
cmp
lock
aam
adcb
xchg
cmp
sub
insb
or
and
popf
and
daa
mov
mov
dec
or
pop
insl
mov
push
dec
mov
fildl
addb
js
lds
adc
out
outsb
out
ja
clc
in
out
fs
jecxz
pop
into
or
sbb
cmp
adc
rolb
aaa
loop
paddw
push
ds
cs
ret
cmpsl
test
test
lret
adc
add
ja
mov
aam
add
int3
fs
inc
bound
ds
fprem1
adc
push
fdivl
test
jb
rorl
push
les
xorb
fs
cmc
adc
push
hlt
jne
inc
ret
mov
loop
cli
pop
mov
cmp
jge
sub
out
xlat
mov
xchg
jno
leave
jae
je
loop
mov
cltd
add
mov
incl
sub
test
or
sbb
sbb
mov
stos
mov
mov
sub
lret
cltd
loope
push
sub
push
call
popa
jge
mov
lods
mov
sub
jecxz
rolb
not
mov
or
ss
or
add
stos
repnz
mov
mov
fwait
add
mov
mov
sub
or
sub
movsl
enter
ljmpw
cmp
push
mov
add
push
testb
aaa
fs
jns
add
inc
cli
scas
push
mov
xchg
rolb
popf
jg
inc
add
rol
test
enter
movsl
bswap
add
icebp
movsl
stos
js
jne
mov
adc
push
ret
or
lahf
les
mov
jb
adc
cmp
inc
fnstenv
adc
neg
loope
xchg
jb
imul
xlat
nop
lods
insl
xchg
mov
stos
push
xor
loop
and
jae
mov
push
scas
clc
add
push
jne
sbb
lret
sub
cmp
xorl
call
loope
mov
mov
lds
inc
or
and
aas
mov
mov
fs
add
pop
dec
push
sub
sub
aas
jp
inc
add
jl
es
add
in
loope
cmc
adc
in
push
scas
inc
add
scas
clc
cld
loop
xchg
mov
lret
cs
ret
imul
lock
lea
ret
xor
mov
je
insb
xlat
or
and
imul
inc
iret
or
xchg
sbbl
loopne
mov
pop
lds
icebp
fstl
fstl
inc
pop
cli
bound
call
mov
pop
dec
fmuls
xlat
ljmp
cmpb
push
xchg
push
cmc
xchg
cmp
and
cltd
gs
out
dec
xor
lea
sbb
add
push
or
add
stos
and
sbb
xor
mov
mov
pop
and
mov
jecxz
out
popl
shlb
push
inc
add
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
scas
sbb
push
push
sub
push
push
loop
out
imul
xchg
lret
mov
mov
mov
push
aad
shlb
in
mov
dec
push
inc
and
cwtl
push
std
dec
fsubr
pushf
in
loop
pusha
mov
popa
mov
loope
inc
cmpsb
rep
xor
inc
icebp
out
fcoml
mov
add
cmp
jo
or
imul
sub
xor
bswap
jns
test
cmc
sbb
push
mov
sbb
pop
xchg
and
outsl
fs
pop
or
cwtl
loop
fsubl
sbb
enter
movsb
adc
add
les
scas
sbb
sub
cwtl
sub
ljmp
outsl
scas
mov
inc
shll
cltd
cwtl
sbb
inc
cmpsl
or
roll
pop
mov
inc
mov
insb
pop
mov
pushf
push
sbb
shlb
mov
mov
add
and
sbb
mov
and
push
inc
add
das
lret
cmp
mov
dec
push
jge
fidivs
jmp
and
adc
shrb
push
xchg
pop
inc
xchg
lret
adc
mov
mov
sbb
push
test
mov
add
ret
mov
adcb
sbb
ja
mov
add
pop
xchg
adc
sub
pusha
mov
mov
mov
mov
dec
iret
leave
stos
in
das
push
inc
int
int
ss
nop
xlat
cmp
jae
cmp
jnp
scas
and
leave
sarb
movsb
inc
jae
pop
mov
repz
fs
and
mov
out
das
out
mov
outsl
dec
add
imul
jp
aaa
xor
push
sub
sbb
lds
loop
adc
adc
cmp
aad
cmp
push
pcmpgtw
sti
rcrb
cwtl
ret
in
cmpsl
repz
lods
test
pop
lret
roll
push
in
cmp
and
inc
push
rorl
and
cmpsl
sbb
sub
lcall
xchg
pop
jp
or
lret
loop
fistl
or
sbb
in
xchg
pop
add
jmp
divl
movsl
das
les
test
cmp
pusha
push
sbb
push
loopne
jb
pop
repz
inc
cmp
push
in
loope
cmpsl
in
mov
sub
leave
ljmp
push
add
or
pop
fimull
sti
sbbl
fwait
cli
and
cld
sbb
xor
movq
movsb
dec
fstl
arpl
xlat
or
testl
pop
or
sub
imul
mov
sbb
dec
fbstp
out
shl
pop
push
push
adc
adc
add
shlb
faddl
adc
sbb
imul
dec
dec
std
add
cmp
insl
xor
jge
shl
imul
out
in
scas
adc
cmp
sub
call
cmp
dec
ror
inc
mov
jecxz
ret
aas
pop
scas
push
inc
push
imul
inc
xor
mov
mov
pop
cmp
mov
xor
mov
mov
dec
lahf
push
mov
movsl
sub
mov
cmp
push
inc
add
sub
mov
in
movb
pop
inc
shl
out
fdivp
out
into
adc
es
lcall
pop
mov
out
xor
push
dec
inc
mov
push
inc
cmc
pop
movsl
xchg
cmpsb
bound
addr16
sub
mov
lret
dec
mov
inc
cmpsb
jl
mov
mov
cmp
repz
push
mov
cmp
scas
or
clc
pop
pop
xor
shll
jnp
aam
add
mov
xlat
shll
sub
push
mov
loop
mov
cld
roll
or
mov
incl
add
int
fidivs
jae
mov
jno
aad
es
popf
pushf
fwait
jno
sbb
cli
aad
xchg
add
inc
mov
jne
leave
mov
ds
sti
xchg
sarl
ficompl
sbb
lcall
and
lret
repnz
mov
aad
add
test
add
enter
aas
hlt
jl
bound
mov
inc
add
xlat
cmc
in
rcll
lock
pop
ljmp
pusha
mov
mov
mov
sub
ljmp
pusha
push
mov
adc
mov
add
cmpsl
sub
test
mov
lds
addr16
or
aas
inc
adc
call
jns
fcomip
xor
nop
fnstenv
push
adc
xor
cld
lods
cs
std
and
inc
xor
sbb
leave
mov
mov
sub
fwait
jge,pt
jp
xchg
jne
mov
js
sti
ret
neg
mov
sti
and
pop
rcl
add
and
sub
add
mov
pop
je
jns
ljmp
aaa
sarl
js
shlb
push
mov
mov
xchg
les
fisubrl
jnp
xchg
pop
notl
movsb
icebp
out
adc
xor
push
out
xchg
test
in
inc
pop
lcall
adc
inc
outsb
or
movsb
sub
ja
xorl
adc
xchg
cmp
popl
push
sub
fisubs
pop
sar
das
dec
sub
scas
and
outsl
insl
loop
adc
mov
sahf
lret
lret
out
jl
rorb
cli
adcl
icebp
outsl
mov
lcall
jae
adc
fdivp
jl
mov
push
dec
add
adc
mov
pop
mov
adc
fisubs
mov
clc
push
daa
mov
inc
ja
add
jge
fidivrl
iret
and
push
sub
xchg
and
adc
mov
xor
int3
jle
pop
stc
pushf
add
add
movsl
push
fsubrs
push
orb
lahf
cmp
push
imul
mov
idiv
add
scas
lret
inc
fistpll
and
mov
sbb
jnp
pop
add
sub
jns
bound
mov
scas
mov
call
mov
inc
movsb
sbb
loop
inc
mov
mov
pop
lods
push
imulb
add
out
bound
lahf
aad
repnz
stc
popf
cli
push
lock
jo
dec
sbb
lds
in
mov
je
das
fcoms
aas
dec
fdivl
add
xchg
pop
mov
aaa
jp
mov
lods
test
mov
push
ljmp
dec
lss
sub
mov
jno
xchg
insb
xor
sub
add
jns
sbb
cmc
push
push
sub
mov
pushf
adc
bound
xor
mov
cmpsl
sub
sub
addr16
xchg
lcall
sub
cmp
and
mov
push
sub
call
and
inc
test
popf
stos
out
xchg
dec
push
cmp
lret
jmp
aas
fwait
fwait
inc
mov
xchg
inc
push
sar
mov
sub
sbb
shrb
cld
mov
movsl
test
loope
shlb
sbb
xor
iret
movsl
jg
ss
movsb
add
out
pop
xor
cmp
aas
mov
dec
loop
mov
push
loope
dec
xchg
sub
dec
les
sub
xor
lahf
shll
in
or
push
in
fwait
gs
jnp
jne
pop
sub
in
mov
mov
shl
add
insl
gs
dec
sbb
mov
lcall
mov
stc
add
test
in
data16
dec
fbld
add
cmpsb
sub
cmp
pop
pop
xchg
mov
or
stc
pop
ror
cltd
adc
sahf
push
xchg
lret
push
loope
add
test
sbb
sub
test
fsubs
daa
cmp
sbb
cli
test
mov
xlat
fidivrl
loopne
incb
sub
adc
insb
mov
scas
scas
outsl
aad
notb
sbb
xchg
fdivrs
xchg
add
add
mov
inc
mov
lret
lcall
fiaddl
in
ret
das
cmp
aad
or
pop
sub
ficoms
jns
dec
xchg
xchg
test
pop
mov
or
or
outsb
push
clc
mov
inc
dec
inc
stos
add
inc
in
call
adc
inc
lods
pop
shr
leave
repnz
and
jae
mov
fcmovnu
dec
out
or
xchg
dec
repnz
xor
insl
sbb
ljmp
pop
in
dec
inc
or
inc
pop
fdivrs
inc
or
adc
jle
inc
cltd
xchg
cmp
cmc
pop
into
pop
sub
push
lods
inc
jae
mov
ja
or
lods
clc
adc
cld
xorb
and
push
repz
xchg
xchg
xorb
sub
insb
mov
inc
ret
or
cmp
dec
xor
loop
xor
enter
push
add
add
je
inc
add
inc
clc
push
fdivrs
fistl
and
add
xor
inc
cs
mov
push
loope
cmp
dec
int
sbbb
xchg
pushf
cmp
leave
aas
mov
fwait
popa
push
ficoms
mov
pop
jnp
dec
shll
jnp
leave
and
mov
xchg
xchg
and
es
mov
cmpsl
inc
inc
loop
negl
call
cmpsl
and
and
ljmp
icebp
add
xchg
sbb
sbb
mov
cmpsw
pop
orl
mov
xor
push
or
bound
and
or
fldl
and
lock
jne
mov
sbb
jmp
fsts
pop
add
fmull
call
xchg
jae
in
loopne
jb
xor
jecxz
stos
loope
rorb
cmpsb
add
add
mov
and
enter
ret
inc
sub
adc
dec
out
cmp
inc
cld
in
ljmp
xor
jbe
test
jl
dec
add
icebp
or
stos
push
or
jbe
negl
decl
movl
add
loopne
je
into
imul
in
adc
xor
sub
sti
dec
bound
push
adc
xchg
in
add
fs
pop
test
and
frstor
jns
adc
pop
sbb
sub
and
popf
push
sti
loope
sbb
cmpsl
pop
insb
cmpsl
gs
and
dec
cmpsl
xchg
sbbb
dec
or
mov
bnd
xorl
push
imul
or
negb
int
nop
pusha
sub
loope
ds
adc
loopne
add
sbb
les
addr16
sti
iret
add
aam
lds
lret
cmpsl
add
mov
popf
pop
ss
push
pushf
sbb
pop
push
aas
and
push
xchg
test
and
cmpsl
lret
es
adc
jg
dec
psllq
jae
sbb
pop
stc
negb
out
jo
mov
into
fisttpl
mov
enter
push
sbb
inc
sbb
adc
jae
vaddsubps
jae
imul
fadds
jg
pop
iret
mov
cld
mov
movsl
fstpl
test
cmp
sbb
cmpsl
mov
stos
aaa
in
int
std
lahf
ja
xchg
mov
xchg
jl
dec
incl
sbbl
push
repz
test
fwait
mov
and
push
rolb
fcoms
shlb
scas
or
lock
and
stos
dec
add
lea
inc
mov
cmp
pop
call
sbb
xor
adc
xor
jb
idivb
rorl
pusha
jb
dec
jo
inc
and
add
addr16
jnp
ficoml
mov
jno
scas
cmp
js
mov
repnz
jp
leave
ret
clc
es
fucomip
pop
call
mov
cld
mov
test
ret
jnp
mov
push
sbb
inc
cmpsl
out
lahf
call
nop
pop
std
mov
lret
sub
dec
fs
inc
fcompl
ljmp
pop
push
pop
or
sbb
adc
push
push
out
cltd
rorl
imul
add
imul
loope,pt
dec
dec
or
or
mov
add
fistps
cmpsb
inc
mov
pop
dec
mulb
sbb
and
dec
adc
imul
iret
inc
cld
adc
into
jl
or
data16
jmp
loop
fdivrl
inc
sub
arpl
aas
sti
sbb
stos
xchg
sub
mov
adc
repnz
cmp
scas
cmpsb
add
sub
mov
dec
pop
jo
std
in
das
movsl
mov
xor
lret
add
adc
test
shll
dec
mov
sarb
cmpsl
and
sub
cli
and
xorl
pop
lcall
push
cli
mov
and
lods
xlat
adc
sub
negb
scas
and
mov
xchg
dec
xor
test
loopne
sahf
dec
xor
mov
stos
sbb
out
add
or
mov
inc
mov
or
fcom
xchg
and
out
inc
lcall
sub
cmp
inc
mov
hlt
inc
cmp
in
mov
or
push
mov
aad
imul
iret
add
sbbb
cmpsl
outsb
int3
push
lret
dec
jmp
aaa
add
fiaddl
rol
sbb
cltd
xor
mov
sub
fwait
dec
test
mov
mov
arpl
push
jbe
cmpl
cmp
sbb
push
sbb
add
push
daa
stc
and
stos
insl
clc
dec
cli
das
adc
in
daa
imul
pop
stc
fnstcw
inc
ljmp
loopne
enter
jge
call
sti
icebp
rcr
stos
sahf
sarb
lods
push
fsubrl
xor
jg
mov
ds
xor
nop
pop
jo
cmp
jbe
mov
mov
xchg
sbb
add
mov
inc
lods
js
pushf
sbb
mov
add
xchg
and
enter
fs
add
and
inc
mov
sbb
mov
cmc
cs
jl
fsubl
inc
push
sub
arpl
jge
jp
xlat
gs
nop
nop
pop
mov
shrl
sub
cld
dec
ss
xorl
mov
mov
enter
int3
sub
dec
or
jmp
mov
mov
out
xchg
mov
daa
add
jle
jg
sub
push
jno
rcr
fidivl
cmp
lods
insl
dec
sbb
xchg
xchg
sbb
into
shr
dec
cwtl
fsubs
jl
movsl
push
pop
bound
cmc
lahf
push
stc
ss
xchg
out
ds
add
rcrb
and
inc
cmpsl
push
adc
adc
in
aaa
clc
jb
adc
icebp
lret
test
mov
mov
ror
test
into
mov
aaa
in
daa
test
loope
add
and
jns
ss
loop
mov
xchg
loopne
cmpl
pop
lcall
jl
addr16
stc
sbb
sub
cmp
outsl
int3
sub
sub
push
xor
popfw
xchg
jne
mov
pop
adc
in
or
fdivl
out
mov
dec
scas
int3
dec
lock
inc
test
loop
adc
mov
xor
xchg
movsl
mov
sub
xchg
push
xchg
inc
push
lds
mov
push
bound
and
cwtl
das
inc
and
repz
mov
dec
mov
jbe
mov
xchg
fwait
jmp
adc
sbb
mov
pop
das
lods
or
scas
bound
sub
loopne
inc
loopne
hlt
loop
notb
xchg
mov
jge
push
dec
or
mov
xchg
add
outsl
jle
out
mov
xor
or
add
scas
pop
clc
cwtl
repnz
mov
jle
imul
sbbl
or
add
test
inc
out
fistps
cmc
call
dec
mov
out
std
fucom
push
push
scas
ss
mov
cmpsb
loope
in
or
insb
adc
ljmp
jp
jo
cmp
fnsave
adc
imulb
add
mov
addr16
loope
push
inc
dec
dec
pop
xor
or
es
pop
sbb
test
adcl
nop
push
test
mov
mov
gs
sbb
jecxz
cmpsb
xorb
pop
int
mov
lds
cmpsb
cmp
loope
mov
out
hlt
pop
cwtl
stos
cltd
mov
pop
sub
dec
shrb
outsl
jbe
test
mov
xor
out
in
cmp
xor
loop
xor
gs
sub
aas
xchg
mov
insb
inc
sbb
and
push
ljmp
arpl
or
xchg
insb
pop
cmp
popa
xor
adc
or
stos
cltd
inc
mov
clc
push
add
sub
insb
mov
popf
push
xor
cmp
jecxz
xor
push
jl
das
inc
pop
jle
dec
movsl
int3
gs
pop
push
int3
mov
ret
sbb
and
in
xorb
adc
and
add
neg
mov
sub
dec
ret
inc
jp
imull
sub
sbb
cmp
fnstsw
xor
das
enter
pop
push
mov
push
mov
pop
xor
fimuls
hlt
cmp
cltd
mov
dec
mov
es
loope
push
shrl
xor
pop
pop
lock
xchg
decb
gs
mov
pusha
in
adc
rcl
imul
mov
or
jo
xchg
lods
cmp
mov
xor
pop
js
cwtl
xchg
loop
jl
or
sbb
das
into
aas
and
imul
jne
push
and
jle
add
jp
add
lods
adc
pop
movsb
or
mov
jmp
push
mov
dec
fsubs
add
push
inc
push
lret
push
and
inc
loop
rcr
sub
gs
cmpsb
mov
shll
push
push
stos
mov
push
pop
cmpsb
mov
xchg
cmp
data16
push
dec
and
lds
sub
adc
mov
jle
pop
pop
test
fwait
shll
std
in
mov
cmpl
and
mov
in
lea
mov
daa
mov
xor
divl
jg
lret
in
push
mov
fcoml
ret
shrb
mov
in
mov
aas
daa
pop
fs
dec
test
imul
and
adc
pop
outsb
push
aad
push
orl
lahf
pop
outsl
inc
mov
inc
mov
pop
ret
pop
in
es
xor
lods
sbb
mov
xlat
dec
mov
pushf
sub
fisttpl
sub
adc
mov
dec
sub
hlt
ficoml
mov
out
out
push
push
lret
xchg
pop
add
addr16
pop
mov
ja
xchg
cmpsb
out
xor
fmull
imul
jae
pop
mov
leave
xor
mov
bound
cmpsb
cmpsb
push
sub
ret
icebp
out
and
stos
add
xchg
repnz
jns
dec
jo
jb
mov
ss
push
sysexit
jae
inc
mov
or
jno
jo
enter
xor
jecxz
add
lret
or
cwtl
push
xchg
inc
sub
fisubs
inc
dec
xchg
jl
cmp
scas
in
in
std
xor
xor
and
nop
ljmp
lcall
dec
ja
mov
fsub
cwtl
cld
fisubs
mov
sbb
enter
pop
aas
fdivl
sbb
sbb
imul
add
push
lret
lcall
and
jecxz
cmp
cmc
ja
dec
pop
fimull
push
xchg
push
jge
xor
in
ds
arpl
xchg
sub
mov
push
repz
cmp
sbb
and
mov
sbb
cmpsl
test
fldt
fcomp
cmp
xor
cmp
pop
js
xor
cmp
jne
jno
xchg
mov
dec
fisubl
cmp
xor
aaa
ja
or
aad
xlat
push
scas
pop
or
jmp
pop
push
in
cmpsl
dec
cwtl
in
subb
arpl
lock
xchg
bound
mov
aas
jno
sub
lret
dec
mov
push
fs
sub
test
mov
jo
sbb
rorb
push
das
das
sub
mov
orb
jl
xor
js
addr16
jbe
dec
movsb
push
xchg
and
cmp
aas
hlt
mov
push
in
xor
sbbl
cmp
aas
pop
xchg
push
mov
je
stc
rcll
push
add
stos
mov
test
mov
mov
fnstenv
mov
hlt
xchg
daa
fucompp
data16
outsb
mov
and
ljmp
sbb
movsb
in
adc
je
std
mov
bound
adc
jge
inc
xchg
imul
sti
mov
pop
or
push
stos
inc
xor
add
sub
lods
ds
xchg
add
adc
negb
out
push
and
or
leave
or
popf
and
out
decb
gs
pop
stos
arpl
and
xor
jns
sub
add
lcall
mov
iret
adc
mov
je
sarb
sub
popl
and
jmp
shll
pop
in
xchg
dec
cld
sar
jg
std
add
pop
fadds
push
mov
es
mov
xchg
mov
and
pop
mov
daa
pop
test
aaa
and
mov
xor
cli
sub
pop
inc
sti
shlb
jg
data16
adc
std
shrl
cmp
sbb
pop
iret
outsl
jb
and
and
fstl
lds
es
inc
sub
xchg
inc
fbld
mov
cmp
mov
lret
pop
je
stos
adc
addr16
lcall
dec
stc
push
insb
and
pop
mov
cmp
lods
lock
rcr
push
jmp
test
xor
cli
mov
ds
add
rorb
or
push
jns
daa
cmpsb
ficompl
jo
out
adc
xchg
loop
xor
lds
fmuls
cmp
and
pop
cltd
shll
xchg
bound
or
cltd
cli
push
xlat
outsb
stos
call
xor
hlt
pop
inc
pusha
xor
mov
pop
xchg
and
sbb
sub
imul
inc
jg
inc
ljmp
fcoml
clc
pop
pop
pusha
xlat
mov
and
pop
cmp
mov
fldl
inc
mov
ret
xchg
loopne
jl
stos
daa
fbstp
dec
and
insb
mov
fisubs
aam
xchg
inc
scas
in
inc
orl
addr16
js
sbb
push
pop
std
xchg
cmpl
jl
sbb
inc
sbb
loope
mov
xchg
pop
mov
add
sbb
xchg
push
scas
sub
xchg
dec
xor
repnz
ja
push
push
fstpt
xchg
or
roll
lods
fnsave
mov
frstor
insb
mov
iret
push
dec
shrb
jnp
xor
jo
inc
out
mull
mov
mov
jo
mov
ds
add
fs
sti
pusha
mov
add
lods
lahf
rclb
pop
mov
loopne
out
inc
cmp
filds
push
stos
ljmp
lret
in
lods
mov
sbb
mov
or
dec
push
popf
jle
push
push
sbb
lods
loope
popa
push
and
and
shl
mov
push
daa
and
cmp
lods
loope
dec
insl
cltd
inc
mov
push
xchg
and
push
lret
lret
fbstp
mov
test
mov
cwtl
fdivrs
mov
ret
inc
insb
fbld
movsb
and
lods
jo
fistpl
cmpsl
stc
jbe
inc
inc
jp
cli
jg
pop
insb
push
mov
lret
pop
push
int3
aam
sub
jo
xchg
xor
loopne
bnd
pop
cmc
es
xor
loop
lret
in
inc
xor
mov
ucomiss
adc
test
es
jmp
xchg
jae
mov
notb
pushf
ljmp
inc
insl
sub
and
shlb
loope
repnz
in
das
cwtl
aas
sbb
pop
pop
int
adcl
repnz
rcr
and
shlb
testb
mov
addr16
sub
xlat
outsl
loopne
mov
inc
lahf
std
xchg
sbb
das
mov
jp
icebp
enter
cmp
es
pushf
aas
lret
neg
xlat
dec
jno
rorb
dec
fildl
fwait
pop
sbb
mov
push
dec
jge
mov
xchg
mov
fisubrs
pop
mov
fmull
mov
loop
xlat
into
jle
xor
ficoms
stc
rcrl
ret
and
sbbl
cmc
ss
or
rclb
and
jns
xor
sbb
fwait
cli
js
data16
imul
or
out
or
loopne,pn
cmp
xchg
xchg
adc
or
stos
push
or
test
push
sarl
xchg
xchg
mov
mov
pop
and
cmp
rolb
sub
lret
adc
outsl
outsl
dec
clc
mov
dec
cltd
test
xchg
adc
push
in
test
jmp
aad
xor
add
movsb
mov
addb
sub
mov
mov
call
mov
ljmp
lods
push
and
cmp
inc
ret
push
push
out
sti
lods
lods
xchg
fldt
jg
test
testl
ret
mov
and
and
sti
popf
and
mov
or
push
or
adc
pop
lea
xchg
inc
xchg
fcmovnb
jbe
enter
mov
add
cmpsl
sbb
stc
jns
insl
push
aad
push
xchg
or
inc
icebp
and
jmp
pop
xlat
rol
popa
pop
inc
jmp
cmp
lds
sub
mov
outsl
pop
push
push
push
testl
sti
xchg
pusha
pop
stos
insb
subb
pop
push
add
repz
cltd
sub
lds
adc
mov
and
push
mov
fisttpl
xchg
xchg
das
xchg
mov
nop
xchg
sub
push
or
dec
lods
xchg
icebp
push
cli
fwait
orb
push
xor
test
outsb
xchg
pop
or
stos
lods
push
xchg
aaa
xchg
mov
scas
les
arpl
pop
je
addl
mov
stc
sbb
mov
xchg
mov
add
enter
jp
pop
arpl
imul
mov
ljmp
pop
dec
shlb
out
add
sub
ret
jmp
sub
imul
sbb
mov
pop
sarl
dec
cmp
pop
in
addr16
and
xlat
pop
or
movsb
lret
and
call
dec
out
or
mov
pop
or
lcall
insb
add
jne
mov
xor
mov
sbb
cmp
pop
mov
fdiv
dec
inc
lea
gs
sub
mov
lods
adc
jo
jle
incb
xor
sbb
dec
mov
push
icebp
testb
arpl
adc
insb
scas
lret
jne
push
dec
jle
mov
jl
outsl
ret
push
and
iret
nop
mov
int3
dec
cmp
mov
stos
adc
lock
jnp
dec
inc
add
scas
pop
repnz
sahf
jle
lock
inc
sub
xchg
mov
in
fldenv
pop
jno
and
mov
push
lock
test
lahf
xor
lret
sbb
push
decl
lret
bound
xor
ficompl
dec
add
lds
cs
jae
vpunpcklbw
rcr
mov
shlb
and
pusha
mov
mull
stos
cmp
testb
inc
icebp
out
cmpb
mov
cld
or
sbb
inc
add
or
inc
add
cmovae
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
insb
js
pop
or
push
push
sti
pusha
pop
out
push
stos
mov
divl
adc
pusha
pusha
adc
int
sbb
xor
push
pop
mov
stc
lret
decb
jecxz
inc
sbb
and
sbb
das
sbb
mov
stos
xchg
sahf
movsb
xchg
pushf
sub
scas
aas
test
idivl
iret
xchg
jbe
jge
nop
ret
aad
out
fiaddl
les
shll
xor
sub
add
and
dec
call
sub
dec
push
jae
mov
sbb
add
jb
cld
icebp
lods
out
cli
inc
xchg
push
mov
popf
lea
cld
iret
mov
fwait
iret
mov
sti
fidivs
add
xchg
cltd
push
sub
xchg
xlat
xor
test
pop
cld
adc
xlat
or
fsubrs
sub
in
orb
out
mov
push
inc
mov
sub
mov
inc
je
ja
sbb
in
dec
cmp
or
das
int3
into
lcall
aas
dec
jg,pt
cld
rol
sbb
cwtl
mov
mov
scas
add
sar
into
pop
xor
scas
jecxz
fucomp
pop
ficomps
dec
mov
adc
movnti
loopne
daa
hlt
mov
xor
mov
std
iret
pop
sbb
popa
hlt
subb
add
sbb
mov
mov
cmp
inc
pop
lret
stos
mov
pop
pusha
shr
pusha
mov
lret
adc
jle
mov
mov
cli
xchg
mov
aam
repnz
cmp
ret
std
cmc
fwait
pop
shlb
add
insb
int
xor
movsl
call
pop
outsb
jno
mov
sub
fs
out
fs
inc
or
dec
mov
adc
fisttpl
mov
or
mov
inc
rolb
mov
xor
sahf
mov
scas
stos
jne
std
aad
adc
sar
jns
pusha
xchg
pop
or
push
pusha
pusha
cltd
int
mov
stc
cmp
mov
or
shl
and
gs
test
pusha
sti
imul
in
lar
fidivrl
out
mulb
jmp
call
pop
sub
loop
les
jle
popa
xlat
lret
and
pop
fsubs
fcoms
clc
lds
xchg
and
mov
pop
dec
mov
aaa
push
add
xchg
jg
loopne
arpl
cmpsb
sar
sub
push
or
sahf
push
mov
or
ljmp
leave
pop
lret
or
jae
push
xor
pop
lods
imul
mov
aam
adc
adc
cmp
push
add
dec
cmpsb
mov
jge
imul
inc
loope
pop
insl
fadds
mov
test
add
das
pop
aam
and
mov
or
jno
in
enter
data16
mov
cli
mov
negl
pop
inc
insl
push
nop
sub
xchg
push
jne
int
iret
fstps
mov
out
out
pushf
sbb
imul
jp
and
into
and
mov
mov
outsb
cmp
inc
xchg
ds
jg
add
test
fiaddl
mov
cltd
xor
cmp
insl
in
rorb
sbb
sub
lcall
and
leave
aad
xchg
xor
arpl
lea
pop
and
out
insb
sub
test
loopne
mov
and
out
test
adc
sti
fcompl
stos
jae
loopne
xchg
loopne
and
mov
jno
pop
add
gs
bound
insb
jo
icebp
inc
sbbl
or
cli
xor
sahf
push
push
iret
lret
loope
push
add
dec
jae
xor
fs
and
std
icebp
and
and
stos
mov
adc
js
shll
and
cli
xor
imulb
jg
fwait
arpl
mov
shll
popf
jns
mov
loop
pop
clc
add
mov
sub
lahf
cs
dec
pop
imul
xor
pop
or
inc
movsl
mov
sbb
mov
rol
loopne
add
mov
xlat
cs
inc
jo
aad
mov
out
call
test
jne
sub
pop
fucompp
call
js
push
mov
and
scas
test
inc
and
mov
addl
out
testb
shr
lods
sub
cmp
sub
sbb
mov
mov
jnp
adc
aas
mov
outsb
lods
leave
mov
add
and
push
mov
adc
mov
mov
into
sbb
adc
sbb
push
xchg
lret
aad
out
dec
xor
loopne
pop
std
mov
int
xchg
in
out
lcall
loopne
push
andb
adc
fwait
adc
repnz
inc
cmp
mov
inc
fwait
push
in
mov
xchg
cmpsb
mov
fstl
mov
pusha
nop
inc
popa
push
insl
mov
addr16
mov
inc
mov
sarb
cld
jl
ss
xor
loopne
push
dec
iret
push
or
jl
lods
jmp
test
cmp
cmp
xchg
xor
in
jbe
push
fs
and
push
and
fisttpl
les
cmp
cmp
mov
dec
pop
nop
mov
es
sub
add
dec
ja
ret
call
pop
jmp
or
out
sub
jge
es
mulb
scas
push
insb
imul
lds
sbb
mov
mov
pop
aas
imul
add
inc
add
ljmp
insl
clc
jmp
fcoms
pop
enter
jnp
inc
xchg
out
aam
mov
jo
icebp
mov
mov
insl
andb
push
lea
aaa
jbe
nop
push
pop
fdivrl
sahf
js
mov
cld
fwait
push
lods
imul
cld
xchg
rolb
or
or
lock
sub
sbb
adc
cmpsl
inc
inc
enter
pop
xchg
mov
sub
xchg
cmp
movsb
cmpsb
dec
bound
mov
mov
and
xchg
jns
push
out
fisubl
adc
and
cmp
insl
lret
adc
pop
sbb
arpl
stos
loope
sbb
add
push
call
in
dec
fs
or
pop
mov
inc
pop
mov
push
test
dec
sub
sbb
mov
repnz
fnstcw
lret
into
or
jg
iret
sbb
mov
dec
popa
pop
inc
in
inc
sbb
jmp
sub
add
cltd
loop
data16
push
cld
mov
js
push
sahf
nop
mov
addl
int
pop
ret
cmpsl
sbb
cwtl
loop
cld
imul
jp
xchg
imul
enter
test
xor
xor
mov
stos
fmull
fadd
sbbl
cmp
inc
and
push
lds
lret
adc
and
aas
mov
jno
cmpsb
xor
lret
xchg
push
test
or
lcall
scas
lds
xchg
std
push
idivl
mov
inc
cmp
mov
sub
adc
shrb
fcoms
add
inc
pushf
add
cmp
int3
aas
xor
mov
lcall
push
pop
loope
sub
xor
xchg
fstps
clc
push
out
mov
lds
or
jg
or
jle
dec
mov
lahf
push
inc
loopne
imul
aad
stos
fildl
adc
xchg
adc
gs
daa
cmp
xlat
sti
bound
fists
push
subb
mov
dec
frstor
mov
popa
popa
xchg
in
pop
mov
fwait
test
dec
push
or
xor
add
loope
mov
fucomi
or
fsubl
sub
xor
mov
in
pusha
push
inc
push
fcoms
popa
push
pushf
insb
int
loop
push
jae
jo
push
xor
call
sbb
rclb
fs
push
arpl
or
aam
hlt
out
test
xchg
lcall
mov
std
mov
push
int3
les
ljmp
inc
cmc
pop
jge
enter
cmp
insl
dec
sbb
in
call
pop
imul
cmp
pop
dec
and
mov
test
pop
push
ss
mov
call
out
ret
pop
cwtl
lods
push
jne
call
xchg
sub
and
arpl
lock
jne
sub
and
jmp
add
sbb
repz
stc
rolb
jmp
lcall
sub
test
clc
pop
aaa
orb
aas
pop
sbb
push
fsubrp
into
mov
xchg
popa
in
clc
mov
pushl
es
or
mov
out
mov
or
test
mov
pop
jmp
pop
pop
lock
dec
stos
pop
rcl
lock
pop
out
sahf
pop
addl
ljmp
lods
fwait
jns
xchg
cmpsl
sub
and
lds
in
cmp
outsl
cmp
jo
and
jbe
or
js
push
test
cmp
mov
jge
or
push
ret
std
xchg
imul
adc
dec
add
jne
aam
push
xchg
int3
test
and
cmpsl
iret
pop
je
mov
xchg
xchg
adc
loop
jl
lret
xor
jp
call
cmpsl
pop
xor
mov
hlt
fwait
sahf
out
fmul
inc
mov
popf
and
inc
xchg
add
out
cmc
adc
or
mov
mov
lock
int
cmp
pop
int3
jge
ss
adc
inc
pop
add
inc
fbstp
xor
iret
sahf
mov
add
sub
add
mov
repnz
js
or
jae
push
popa
imul
test
adc
xchg
sti
sbb
adc
mov
xorl
das
dec
ret
xor
ss
jecxz
and
ror
fcoml
xchg
pop
jle
jb
test
lcall
inc
ficompl
pop
imul
mov
dec
dec
sbb
pop
sub
jg
ror
pop
out
jno
dec
out
ja
add
xor
andl
mov
sub
arpl
aaa
test
movsb
push
xorl
lea
push
popa
sbb
out
mov
xchg
leave
mov
cmpsl
or
jg
mov
iret
jl
mov
xlat
mov
jae
into
jmp
cmp
in
add
inc
in
xor
mov
mov
adc
fdivl
inc
aam
pusha
dec
xor
add
xchg
ret
or
subb
aam
sbb
daa
xor
mov
aas
xchg
push
pop
dec
lret
jae
pop
sahf
mov
pop
repz
ret
arpl
in
je
sbb
push
mov
addr16
in
push
dec
popl
mov
inc
subl
mov
movsl
inc
hlt
das
jecxz
inc
scas
sub
outsb
mov
aas
push
or
movsb
or
jbe
ds
pop
mov
out
scas
iret
daa
fyl2x
hlt
out
setb
repz
arpl
mov
inc
xor
sub
push
jp
shll
xlat
pop
mov
xadd
scas
inc
and
cmovns
xor
cmp
xchg
insb
std
in
fs
mov
aas
inc
popf
push
add
imul
cwtl
movl
adc
sahf
xlat
nop
loop
inc
ja
sub
jmp
mov
icebp
pop
cli
test
jbe
adcb
in
das
into
xchg
lea
ss
jmp
pop
dec
dec
jg
dec
out
or
fs
push
cltd
je
shlb
xor
jecxz
inc
loopne
std
adc
fistpll
cli
rclb
rorl
or
test
mov
jne
or
push
lods
fs
int3
xchg
xchg
sbb
mov
lret
inc
fidivrs
mov
bnd
xor
adc
divl
out
push
push
pop
add
nop
das
scas
xor
cmp
mov
mov
pop
xchg
or
push
inc
idivb
test
or
push
push
dec
mov
xchg
or
cmp
mov
xor
orl
cld
xchg
ja
clc
cld
jg
out
push
aaa
jne
imul
das
iret
outsl
dec
push
pop
pop
inc
out
jge
adc
mov
mov
aam
fsubr
int
cmp
lret
das
adc
mov
dec
das
cwtl
pop
in
sub
or
xor
sbb
cld
sbb
das
stc
sub
mov
pop
xchg
inc
pop
sahf
hlt
adc
lcall
mov
fdivrp
push
mov
inc
dec
mov
mov
movsl
and
jo
jb
or
andb
dec
stc
imul
out
insb
mov
jge
sub
bound
pop
iret
movsl
call
cli
iret
cmp
xor
stos
dec
imul
inc
inc
adc
lds
loopne
jp
fistps
push
pop
push
jecxz
mov
daa
addr16
cltd
repz
fimull
rcll
sub
cld
mov
jle
cmp
and
lahf
xchg
push
jae
out
shl
arpl
sbb
aad
dec
dec
std
movsb
jl,pt
insb
idiv
jbe
push
jl
add
fnstsw
movsl
cmp
icebp
hlt
push
jbe
mov
pop
lret
jnp
adc
add
pop
push
ret
mov
aas
dec
sbb
stos
push
test
xlat
xchg
add
mov
sbb
sub
insl
icebp
hlt
pop
sbbl
lock
call
cld
aam
mov
and
add
cmp
add
dec
das
push
sarl
xor
cmp
xchg
cmp
jno
inc
call
push
call
ret
fldl
jp
addr16
aas
sbb
inc
push
aaa
pop
cmp
orb
sbb
outsb
add
adc
and
shll
mov
push
aaa
mov
ja
or
push
sbb
daa
pop
arpl
std
into
sub
scas
mov
aam
xor
mov
mov
inc
push
xor
test
or
xor
push
movsl
insl
out
pop
ficompl
lret
push
sub
data16
pop
in
daa
push
cmc
das
in
rcrl
lods
mov
mov
ds
cmpsb
dec
stc
push
std
add
test
in
jl
aam
das
or
and
iret
pop
dec
in
push
repnz
pop
xlat
mov
cmp
add
rcl
or
sahf
pusha
sbb
out
xchg
cmpsl
and
jo
out
in
push
and
push
lahf
sub
enter
sub
pop
jo
cs
dec
cmpsl
jecxz
mov
stc
pop
mov
pop
jne
push
jnp
sahf
adc
shlb
inc
xchg
xchg
dec
movsl
clc
jmp
shrb
sub
sub
inc
xor
xor
shr
in
mov
lcall
popf
in
pop
inc
dec
add
cmp
in
iret
sub
rorl
sub
or
cmc
out
inc
push
jae
and
xchg
and
lret
inc
mov
arpl
push
sti
inc
push
gs
pop
testb
pop
dec
leave
jl
insl
fisubrl
jg
adc
mov
dec
cld
cmp
pop
mov
outsb
lret
jns
icebp
adc
and
add
push
push
mov
stos
adc
mov
mov
test
js
inc
mov
insb
xchg
push
mov
mov
orb
or
xchg
ja
sar
out
movb
fildll
push
out
outsl
and
mov
cmpsb
movsl
xchg
dec
scas
inc
xor
and
and
push
jnp
xchg
shl
lock
sub
add
ret
inc
inc
out
add
das
cmpsb
adc
add
popf
mov
stos
ds
lahf
inc
repnz
xchg
pop
aas
mov
push
repz
adc
jnp
adc
cmp
xor
notl
out
push
das
aam
pop
jns
mov
mov
ljmp
push
inc
xor
xchg
mov
ljmp
sub
rcr
jecxz
and
outsl
cmp
lahf
cld
adc
inc
fcompl
fwait
call
xchg
jmp
mov
push
dec
adc
mov
push
mov
or
xchg
sub
cmp
dec
inc
fcomps
sub
push
incb
or
xlat
pusha
out
xor
jmp
cmp
and
mov
sbb
dec
add
out
mov
cmpsb
out
push
repz
xchg
adc
out
add
fucomi
push
cmp
sub
xchg
mov
loop
notl
mov
dec
pushw
loop
xchg
sub
mov
inc
jl
sbb
xchg
pop
sbb
scas
dec
and
mov
jnp
mov
setle
mov
sub
push
cmp
xchg
cli
xchg
in
mov
and
stos
pop
aas
imul
pop
push
pop
orb
xchg
adc
add
ffree
sub
inc
cld
addr16
je
dec
stos
sti
xlat
fsubr
repnz
hlt
mov
hlt
sub
pop
out
mov
adc
and
pop
sbbb
idivb
fcmove
push
rorb
aas
lahf
pop
gs
pop
or
leave
leave
or
in
ss
add
jb
adc
popa
jmp
loope
mov
xchg
mov
push
adc
test
in
sti
mov
out
dec
jecxz
mov
mov
ljmp
pusha
jl
and
pusha
inc
cmp
jl
test
adc
adc
cmpsl
je
cmpsb
or
dec
xchg
cld
pop
jg
dec
fucomi
or
push
pop
ljmp
dec
in
sub
into
faddl
ljmp
cmp
dec
scas
dec
xor
fs
jae
mov
adc
out
jp
push
notb
call
test
jae
sub
fldl
decl
cltd
cs
cmpsl
push
push
les
in
fiaddl
inc
xchg
cmp
adc
inc
cs
ds
push
and
sti
imul
mov
and
arpl
push
cs
mov
lret
jbe
lods
shlb
or
jmp
mov
and
mov
push
mov
jb
cs
in
pop
lock
and
dec
mov
xchg
test
lods
cli
lret
je
xor
dec
inc
cmp
push
repnz
clc
mov
pop
xchg
imul
aad
xor
fisubrs
lret
fiaddl
xchg
pop
popa
inc
mov
adc
dec
jle
dec
cmp
pushf
fwait
shrb
jp
inc
jmp
jo
push
imul
cld
push
inc
roll
lock
mov
enter
lods
es
nop
inc
xchg
daa
leave
xchg
lds
cltd
mov
les
iret
sbb
xor
or
je
pop
in
mov
lcall
nop
fdivs
xor
jmp
test
mov
jbe
ljmp
dec
stc
xchg
dec
pop
jo
into
mov
mov
rolb
sbb
add
cld
fwait
mov
dec
test
dec
clc
mov
and
stos
insl
scas
adc
or
movsb
add
push
sub
sahf
inc
idivb
jp
mov
sbb
mov
cmp
mov
rorl
cmp
push
sbbb
imul
xchg
lret
sbb
shlb
add
fsubrl
sub
adc
mov
fldt
mov
dec
sub
imul
sub
test
xchg
mov
repz
rorb
insb
lods
in
mov
cmpsl
cmp
cmp
cmc
iret
sbb
dec
into
aas
cld
inc
adc
push
lcall
adc
adc
pop
push
not
jp
cmpsl
mov
aaa
stc
shrb
xchg
lret
jl
adc
jnp
jge
mov
loop
fdivs
aam
inc
jnp
pusha
outsb
sub
mov
das
dec
mov
call
mov
mov
shrb
imul
std
ljmp
movsl
test
cmovae
jne
cmc
leave
pushf
xchg
sti
mov
test
in
filds
je
adc
xchg
pop
nop
jge
xchg
adc
push
movsl
hlt
or
clc
call
push
fldt
ljmp
jl
cmpsb
frstor
lea
xor
pop
push
fisttpll
pop
or
test
cs
cltd
cmp
pop
jnp
inc
fs
xchg
sbb
shlb
data16
call
out
mov
adc
jle
rorb
cli
xchg
push
xchg
sub
lret
or
into
jnp
mov
mov
popf
pop
xor
pop
in
lods
jecxz
lret
iret
into
clc
xor
jae
mov
or
loop
out
mov
xchg
lcall
push
adc
add
xor
addl
sub
sbb
stos
adc
mov
mov
cs
mulb
mov
into
rcll
in
mov
push
adc
xchg
enter
dec
xchg
roll
int3
out
lds
xchg
jg
push
pop
and
sbb
inc
jecxz
adc
inc
bound
jmp
jle
lock
or
xor
mov
insb
addl
push
mov
shll
rcrb
sub
bound
xchg
cmp
or
or
or
xor
stc
mov
cltd
ja
rclb
xor
sbb
mov
fwait
cmc
popf
insl
movb
movsb
jmp
push
adc
jae
xlat
es
fldl
enter
cmpl
sub
les
out
xchg
adc
enter
cmp
pop
push
inc
lcall
imul
adc
movsb
mov
lds
xchg
inc
out
pop
call
and
push
es
or
cwtl
popf
add
and
out
aas
mov
mov
or
lods
daa
fs
xor
clc
adc
xchg
jb
loopne
jae
jge
mov
imul
push
mov
xlat
xchg
repnz
xchg
aad
pop
negl
mov
inc
adc
repz
xor
in
mov
clc
pop
jg
mov
fimuls
jmp
sbb
push
mov
xchg
sub
pop
movsl
or
dec
pop
sbb
in
cmp
js
dec
insl
jae
cltd
ja
xor
fmull
jecxz
cltd
adc
cli
bound
imul
loop
pushf
sahf
push
jge
pop
add
shll
aad
pop
jp
mov
dec
mov
js
push
stc
and
pop
and
cs
cmp
push
ja
mov
outsl
jno
pop
inc
dec
mov
das
mov
inc
adc
mov
dec
dec
daa
dec
inc
jb
aad
ja
adc
inc
in
testl
add
ds
mov
adc
mov
sbb
pusha
ret
fcompl
fwait
inc
add
in
and
cmp
stc
dec
sbb
fcoml
cmpsl
popa
mov
xchg
divl
mov
xlat
xor
jg
mov
mov
xchg
pop
and
or
fwait
push
xor
push
push
aas
or
fadds
leave
test
arpl
dec
int
je
test
mov
sub
push
xor
ret
push
adc
pop
push
adc
pop
cmp
fiadds
jmp
inc
mov
sahf
sbb
inc
addl
mov
cmp
mov
or
mov
call
sbbl
mov
loop
iret
cmp
test
imul
int3
daa
out
jns
in
pop
fwait
ret
mov
jp
cmp
cmp
jle
nop
lock
test
cld
push
cwtl
pop
daa
sbb
mov
or
xor
cmc
mov
shrb
adc
adc
xlat
sub
dec
test
mov
add
not
jae
mov
lds
push
sti
ljmp
int
je
js
push
inc
aam
cmp
mov
sub
xchg
mov
jmp
lcall
mov
jge
iret
jne
jnp
nop
icebp
mulb
cli
push
add
ljmp
lea
daa
testb
mov
int
dec
mov
shrl
push
notl
movaps
scas
fs
fisubs
sub
and
out
aad
fwait
xor
xor
clc
or
inc
or
and
add
mov
or
out
mov
test
push
sub
aam
sbb
out
and
dec
addr16
xchg
nop
jmp
hlt
xchg
mov
pusha
sarl
stc
scas
sbb
stc
loopne
popf
in
cmp
aam
sahf
mov
sbb
mov
cmp
cmp
out
iret
inc
push
pop
jns
adc
pop
mov
adc
movsl
cmpsb
xchg
add
sahf
inc
push
mov
sar
jecxz
aas
jg
add
loope
jecxz
es
push
cltd
cli
and
mov
inc
ja
cltd
inc
mov
lcall
cmp
cmc
mov
ss
imul
pusha
divb
and
aaa
lock
pop
sub
ficompl
push
inc
repnz
sub
roll
loop
lahf
mov
data16
mulb
pop
jo
cmp
popf
jo
sbb
sub
sbb
and
adc
iret
fistpl
add
andb
das
and
jecxz
xchg
mov
sahf
push
push
call
xor
adc
or
xchg
notb
ds
int
cmc
ja
ret
sub
jae
add
jle
dec
sbb
clc
fsub
insb
leave
and
adc
dec
cmc
pop
mov
jns
js
addr16
clc
into
pop
mov
inc
and
mov
mov
pop
mov
push
inc
adc
in
fcompl
mov
jle
xchg
and
scas
stos
pop
cwtl
mov
xlat
cwtl
pop
leave
ds
cmc
mov
cs
fmull
or
stos
sub
or
jb
data16
sub
xor
dec
jns
jnp
push
rorl
fsub
push
jno
gs
cli
xchg
aaa
repnz
adc
stos
xchg
jns
dec
push
mov
ljmp
mov
lods
das
push
out
xlat
data16
mov
push
stos
mov
xchg
lods
loope
jl
test
pop
out
je
aad
popf
dec
add
gs
jecxz
inc
fildll
cltd
out
int
mov
sbb
pop
pop
sub
leave
or
dec
int
and
or
out
cmp
push
test
bound
lret
jne
popf
mov
mov
lea
loope
imul
mov
push
fistps
jbe
xbegin
iret
or
mov
cmpsb
iret
das
out
pop
or
cmp
mov
and
mov
push
cmp
rorb
js
add
lret
xor
xor
mov
repnz
sub
jbe
daa
iret
testl
dec
add
inc
aad
subb
dec
rolb
movsl
and
jecxz
or
dec
fimuls
mov
pop
xchg
inc
push
xlat
xchg
iret
pusha
addr16
push
add
push
ss
push
mov
mov
inc
sar
inc
mov
cmp
mov
inc
dec
mov
add
sub
cltd
popa
mov
movsb
imull
mov
stc
add
add
sbb
and
dec
jne
jmp
retw
ret
push
enter
pushf
int3
in
call
mov
cmp
mov
popa
je
gs
popf
push
xor
frstor
mov
daa
push
mov
es
pop
test
mov
shlb
add
adc
shrl
out
push
jp
xor
in
xchg
jp
xor
mov
out
inc
enter
add
lods
sub
mov
out
xor
popa
loopne
jae
xlat
add
loope
xchg
cld
push
cmpsl
xchg
mov
sbb
fadds
imul
cmp
pusha
or
cmp
sbb
jb
inc
jmp
popl
outsb
cmp
xchg
cmp
xchg
adcl
mov
xor
outsl
jmp
dec
mov
jne
xchg
enter
pop
jg
or
inc
leave
pop
push
mov
dec
cmp
xor
push
push
xor
les
xor
lods
cmp
mov
je
lods
cmp
inc
stc
cmpsb
test
push
mov
adc
add
dec
cmpsb
mov
cmp
aaa
rcrb
stc
sarb
movsl
ja
cwtl
jge
loope
incl
push
dec
cld
dec
jb
mov
push
fdivrp
pop
inc
mov
mov
pusha
mov
lock
and
stc
clc
shll
or
pop
out
dec
test
arpl
mov
repz
cmp
pop
push
dec
or
xor
popa
ds
push
test
test
sub
mov
or
bnd
test
movsb
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
pusha
imul
jno
push
push
sub
push
push
sub
mov
aas
pop
inc
add
xor
cmc
mov
jmp
in
in
cmp
dec
mov
cmp
dec
xchg
pop
push
dec
scas
pop
sbb
cmpsb
repz
je
sub
mov
xor
orl
imul
xchg
xchg
imul
pop
repnz
fxch
sti
xor
arpl
js
xchg
sbb
xor
int3
fiadds
insl
push
cmp
stos
push
je
adc
ljmp
mov
fwait
or
xor
ret
addr16
mov
push
sti
jl
enter
adc
fistps
xor
mov
mov
add
jbe
sub
je
pop
les
test
testl
sbb
inc
and
pop
inc
lret
ljmp
xor
scas
sti
push
ret
cmpsl
add
sub
push
mov
xor
pop
jecxz
mov
mov
and
xchg
clc
dec
loope
sbb
dec
cld
jecxz
push
push
imul
dec
dec
inc
cmpsl
xor
push
cmp
daa
loopew
dec
cwtl
jne
cli
lds
or
mov
call
in
fs
xor
mov
shlb
les
adc
insb
shlb
mov
and
inc
add
std
mov
pop
ljmp
dec
pop
xchg
dec
xor
or
add
call
sub
and
add
call
dec
iret
mov
xchg
nop
pop
ljmp
mov
and
or
jecxz
roll
aam
jecxz
xchg
popf
push
rcrl
mov
test
mov
inc
cmpsl
insb
inc
or
rcll
jmp
add
or
xchg
in
sbbl
outsb
pop
cwtl
pop
mov
das
ss
mov
mov
out
xchg
xor
push
rcrl
dec
mov
lds
mov
sub
xchg
mov
xchg
mov
sub
jl
int
mov
fimull
stos
mov
les
inc
lods
adcb
mov
fisttps
rcr
test
insb
jo
xor
faddp
cmc
shlb
push
in
xchg
sahf
jae
xchg
pusha
roll
push
adc
ja
xchg
in
and
or
fistpll
icebp
scas
xor
jb
testb
cmpsb
aad
dec
fstpl
jp
insl
sub
test
lods
dec
fnstenv
addr16
inc
add
rcr
stos
or
inc
sbb
xlat
cmpsl
jle
movsl
xchg
push
cmpsb
inc
xor
mov
sub
cmc
aad
lods
mov
lods
dec
xlat
xchg
lret
sbb
cmp
insb
xor
and
dec
or
pop
or
add
daa
test
jge
xchg
jecxz
xchg
add
bound
lret
rolb
pop
jp
in
rcr
inc
or
mov
mov
jecxz
bound
xchg
ja
xlat
int3
dec
xchg
xor
dec
xchg
cmpsb
push
cmpsl
xchg
sbb
popf
subb
xor
push
inc
sbb
mov
rorl
sub
dec
cmpsb
pop
cmp
jne
test
in
sub
mov
xchg
ds
iret
sub
enter
fldt
pop
out
sbb
mov
jnp
jl
add
and
mov
ret
inc
cmpsl
shll
push
pop
mov
dec
and
stos
aaa
hlt
jno
pop
ss
sar
push
cmp
fidivrs
call
sub
int
cmpsb
pop
int3
jg,pn
out
lock
stc
pop
and
sub
call
outsl
dec
lret
sbb
outsb
sub
or
filds
aaa
insb
loope
inc
movsb
xchg
dec
nop
pop
cltd
sbb
imul
icebp
repnz
xchg
jmp
and
out
xchg
cmp
mov
pusha
call
cmp
int
movsl
inc
mov
pop
in
das
fstpl
jmp
xchg
inc
dec
out
movsl
push
push
in
pop
mov
fwait
pop
adc
or
xchg
out
movsb
sbb
push
insl
mov
push
sti
inc
lea
je
add
das
loopne
sub
cmp
cwtl
out
mov
adc
out
sub
xor
lods
or
imul
js
push
jp
xchg
test
aad
je
mov
insl
jecxz
push
repz
and
ret
and
arpl
inc
into
stos
add
xchg
xchg
ds
pusha
and
adc
bound
ret
stos
nop
popa
jp
mov
out
mov
sbb
aas
jo
or
aam
dec
add
das
inc
daa
and
mov
push
or
movsl
ljmp
jle
push
jg
jg
fcoms
das
or
insb
js
movsb
or
mov
or
pop
jo
pop
sti
push
sub
mov
pushf
sub
mov
int
sbb
ds
jne
mov
test
in
jmp
shll
loop
dec
mov
mov
jle
lret
je
ret
push
in
loopne
mov
xlat
shl
in
adc
repnz
push
mov
jb
ret
adc
aad
pop
sub
push
adc
lret
sbb
xor
test
push
jmp
mull
push
push
addr16
clc
in
out
imul
mov
mov
adc
test
in
dec
pavgb
out
push
add
push
loope
cli
mov
sbb
xchg
sar
jp
mov
sub
jb
int
jae
lret
test
xchg
rol
sahf
xor
mov
out
and
ret
sub
cmpsl
xchg
jne
jmp
mov
stc
adc
adc
pop
sahf
outsl
aas
dec
adc
xor
lock
dec
jge
es
mov
pop
xchg
inc
dec
test
mov
je
dec
inc
out
movsb
dec
cmp
add
lods
push
push
cwtl
push
dec
mov
lods
mov
jae
out
notb
leave
nop
add
add
mov
pop
mov
adc
andl
adc
out
mov
jbe
int
inc
mov
enter
cmp
jae
and
mov
push
icebp
dec
sub
mov
mov
or
std
fstp
jae
loopne
mov
test
jae
ja
xor
push
push
xor
xchg
stos
sub
push
jecxz
popa
add
dec
sarl
mov
sbb
fcmovnu
xchg
int
xchg
mov
xchg
push
mov
and
cmp
inc
add
out
dec
push
pop
pop
xchg
leave
add
xor
js
out
pusha
xor
mov
aad
test
inc
mov
mov
mov
loope
stos
push
mov
cmp
dec
loopnew
lods
test
test
pushl
xchg
lret
adc
imul
mov
repnz
mov
or
mov
mov
pop
push
mov
mov
cmpsl
jl
orl
movsb
sahf
aam
xor
insb
mov
out
and
push
mov
ret
sbb
std
and
jg
stc
insl
frndint
cmpsb
out
jb
sti
mov
pop
dec
popf
lock
sbb
add
dec
xlat
mov
xor
adc
lock
nopl
in
icebp
fildl
jb
lcall
xchg
inc
mov
pop
sbb
xchg
cmp
lods
sbb
ljmp
sbb
pop
xor
xlat
sbb
mov
lret
or
lds
mov
mov
sbb
jns
js
sbb
mov
push
popf
scas
lock
sbb
clc
xchg
mov
ret
xor
stos
push
lcall
or
sarb
data16
jecxz
or
mov
fwait
enter
roll
mov
xor
sbb
mov
or
xchg
imul
jnp
xor
popa
rolb
stc
jbe
ja
add
adc
and
andb
xor
mov
loope,pn
call
add
aas
adc
inc
dec
rcrb
divb
clc
add
xchg
cwtl
xchg
lcall
pop
popa
add
inc
aaa
push
and
sub
jno
add
cs
mov
push
ja
mov
mov
inc
mov
inc
push
gs
inc
push
fwait
xor
out
leave
pop
sbb
mov
jae
inc
out
pop
imul
push
in
dec
push
cmp
push
jne
testl
jg
add
push
sub
or
add
jno
cwtl
movb
daa
push
stc
movsl
std
push
sarb
test
lcall
sub
out
push
push
dec
dec
cld
dec
or
push
cwtl
js
dec
add
xor
cmpsb
mov
pushf
clc
jge
push
aaa
pop
pop
push
mov
mov
add
dec
fwait
repnz
mov
lods
xor
push
sarl
int
and
arpl
mov
jne
sub
aam
sarl
mov
mov
pop
test
dec
mov
xor
add
mov
adc
pop
ficoml
test
dec
or
dec
lock
jae
lock
xchg
test
sahf
shl
in
dec
addr16
jge
lods
or
mov
incl
insl
movsb
mov
jecxz
mov
jo
repnz
mov
mov
in
lret
cwtl
mov
outsl
mov
and
add
out
jb
jl
mov
iret
xchg
or
mov
push
push
jae
out
std
mov
lock
adc
insb
mov
shr
xor
das
scas
push
imul
enter
aam
pushf
mov
fcompl
pop
xor
loope
movsb
int3
push
movsl
sub
mov
mov
into
push
pop
xchg
ret
dec
mov
push
mov
inc
add
mov
push
dec
inc
inc
mov
outsl
mov
jns
inc
mov
sbbl
test
lea
dec
dec
xrelease
or
adc
in
mov
mov
insb
mov
or
loop
cmp
lods
decl
mov
out
dec
test
fistl
test
hlt
push
push
hlt
push
jl
mov
mov
or
cmp
pop
repnz
in
push
mov
push
mov
gs
mov
andl
xchg
rcrl
dec
jns
dec
enter
test
movsl
xor
jae
mov
into
cmp
cmp
cmp
les
inc
push
dec
dec
dec
stos
mov
mov
insl
add
push
add
cmp
pop
mov
pop
leave
rcl
outsb
or
inc
dec
imul
push
insb
cmp
sub
cmp
lds
or
lret
or
fidivrl
add
jb
fistl
scas
daa
dec
mov
jg
stos
and
lea
mov
and
mov
lods
int
cmp
inc
in
jne
dec
sbbb
cmp
jl
cmp
filds
sub
sub
jnp
lods
dec
sub
leave
add
sbb
cmp
mov
test
pop
lods
cmp
or
pop
mov
push
dec
outsl
xchg
and
movsb
xchg
int3
mov
mov
sbb
je
dec
dec
push
ss
push
subb
and
xchg
addr16
popf
fisttpl
inc
lret
movsb
or
aad
and
mov
lahf
or
mov
add
push
jae
in
push
lock
mov
push
pop
cli
push
xor
imul
mov
adcb
js
data16
je
mov
pop
jbe
outsb
jp
movsl
mov
jb
inc
aaa
and
jge
mov
roll
push
or
jns
xchg
repnz
and
hlt
add
insl
mov
pushf
daa
daa
xchg
add
mov
mov
mov
dec
out
mov
mov
outsl
stc
adc
inc
loop
in
sub
adc
xchg
jg
ja
push
ss
inc
ret
addl
mov
mov
movsb
pop
push
sub
or
xchg
cmp
sub
xor
adc
int3
decb
sbb
or
xchg
xchg
pop
mov
outsb
es
jle
insb
cmp
repnz
inc
adc
adc
pop
mov
xchg
sbb
mov
and
clc
cmp
fnsave
mov
push
jg
lcall
aas
adc
aas
and
sbb
xchg
sahf
inc
adc
jge
push
mov
adcb
scas
pop
mov
hlt
mov
adc
fmul
in
in
cmp
mov
mov
popa
fdivrs
adc
andb
popf
xlat
sbb
xchg
outsl
jo
ficompl
sarl
dec
out
mov
mov
out
stos
mov
fistpl
loopne
lret
sbb
push
dec
lds
sbbb
cs
pop
lret
ljmp
push
int
mov
in
inc
pop
repz
sub
ja
int
lds
cld
popf
sbb
jb
imul
cmp
push
add
xchg
shll
xchg
decb
cmp
lldt
insb
jne
cmp
outsl
sahf
or
lock
mov
push
mov
cmpsb
sub
leave
pop
mov
std
mov
ret
mov
test
sahf
or
sbb
dec
and
outsb
daa
and
add
popf
int
insl
ja
iret
das
inc
mov
lods
mov
add
jg
dec
leave
jbe
sub
ret
lahf
xlat
xor
pop
ret
mov
cs
in
cmp
repnz
shlb
jle
out
imul
cmp
sub
dec
xlat
xchg
getsec
xor
ret
stc
inc
rolb
push
insb
out
push
pop
cld
adc
sub
shrl
push
jbe
jecxz
rorl
scas
cmp
mov
rorl
hlt
dec
sub
aad
pop
pop
test
std
pop
dec
dec
push
decl
xchg
jle
pop
push
js
sub
in
pop
data16
push
inc
pop
sarl
mov
scas
fidivs
lret
add
stos
xchg
in
out
enter
jmp
xor
mov
and
leave
push
scas
movsl
jo
popf
mov
cmp
add
mov
js
xlat
fs
jno
pop
cmp
ret
mov
mov
mov
dec
pusha
leave
fistpl
inc
mov
leave
icebp
dec
dec
cwtl
repnz
ja
add
dec
jg
int3
movsl
push
push
jmp
mov
and
adc
test
call
push
and
arpl
pusha
fdivs
cs
loop
jb
cmc
test
mov
mov
into
add
repz
mov
or
filds
jo
es
ja
xchg
adc
int3
inc
sahf
cltd
mov
sub
sbb
imul
fadds
jo
and
cltd
inc
pop
ret
fsubs
stos
fsubs
add
dec
mov
das
or
repz
icebp
sub
and
adc
sahf
mov
es
dec
mov
and
mov
aaa
add
sub
sub
imul
push
mov
jecxz
xor
and
movsl
ret
or
mov
push
dec
testl
or
pop
out
and
pop
icebp
popf
ja
rol
lods
fbstp
inc
dec
add
je
call
sbb
js
sbb
loope
adc
imul
xor
jbe
mov
mov
xor
or
nop
xchg
push
pop
repnz
jns
pop
jns
mov
push
stos
mov
sub
xchg
jnp
outsb
paddsb
sub
cli
or
popf
mov
xor
std
notl
add
mov
ficomps
fnsetpm(287
lock
sbb
leave
int3
mov
xor
cwtl
aaa
fbld
dec
sahf
je
loop
int3
adc
mov
addr16
loopne
pop
cwtl
sbb
sub
aad
jle
mov
jle
mov
push
out
out
sahf
lock
cld
push
test
ret
pop
out
push
fadd
xor
addr16
cld
adc
cmpsb
adc
out
pop
jg
or
aad
cli
push
sbb
sbb
in
inc
es
sub
aam
and
inc
test
xor
out
out
add
cmp
cwtl
push
xor
nop
cmp
jbe
les
pop
and
dec
jbe
sbb
xchg
push
adc
outsb
lea
pop
enter
xchg
stos
jmp
mov
fadds
test
icebp
ss
mov
add
gs
cli
popf
dec
aaa
lret
lret
sub
in
shlb
pusha
inc
push
jmp
xchg
jae
cmp
xlat
cmp
or
cmp
pop
add
aad
mov
lock
lods
inc
sub
fdivl
push
movsb
or
into
jo
and
out
sub
dec
jmp
bound
adc
xor
in
push
jmp
dec
jnp
loope
fistpl
outsb
xorps
shll
mov
out
cld
fcoml
jp
mov
cmpsb
fcoms
popa
sbb
rol
jnp
loop,pn
pminsw
sub
fnstenv
pop
cmc
adc
in
adc
or
push
cmc
dec
daa
imul
jae
in
sar
mov
mov
movsb
fistl
sub
xchg
push
mov
lods
dec
pop
loopne
sbb
pop
or
add
test
testb
mov
xchg
frstor
outsb
leave
jnp
xchg
xor
pusha
hlt
dec
negl
rcrl
fst
pop
aam
push
xor
movsl
xchg
orb
push
popf
aad
xor
fwait
add
in
adc
dec
cmp
push
adcb
mov
dec
fwait
or
jnp
stc
xor
and
fs
inc
xchg
lcall
fdivs
mov
dec
insb
sub
mov
xchg
jg
lock
push
mov
sbb
cli
insl
ficoms
ja
mov
ret
push
jmp
pop
sbb
mov
in
pop
cmp
xchg
aaa
shl
imul
inc
dec
cmp
dec
jmp
inc
adc
xchg
add
arpl
shll
flds
jecxz
mov
enter
cld
lcall
repnz
insl
cmpsl
sub
stc
mov
and
aas
aam
xchg
jbe
and
add
cmp
adc
fwait
sbb
faddl
cmp
fnstsw
xor
mov
push
enter
jo
pop
pop
push
and
jg
jmp
and
into
mov
mov
pushf
add
repnz
inc
adc
movsl
lock
dec
les
out
aas
aaa
popf
jg
fnstcw
pop
test
aas
enter
pusha
test
cmp
lods
fs
aam
mov
sub
lret
and
out
jl
lock
mov
xlat
insb
xor
add
xchg
lds
gs
cmp
clc
add
mov
inc
loope
pop
out
push
out
or
pop
insl
mov
xor
add
push
shrl
mov
setp
icebp
cmc
cmp
lds
adcb
ret
inc
mov
dec
dec
fldenv
loop
leave
scas
mov
xor
jmp
mov
jmp
aaa
insl
popf
xor
xchg
jge
pushf
mov
enter
jae
rorl
lods
jp
fbstp
loopne
cmc
sub
hlt
outsb
pop
lahf
hlt
mov
fldl
inc
and
jle
ret
pop
and
inc
mov
push
jne
cmc
movsl
icebp
inc
movsl
loop
xor
push
lahf
jmp
and
mov
adcl
or
mov
jb
sbb
in
movsl
clc
sti
pop
shrb
ss
inc
nop
filds
jmp
fcmovne
push
jns
inc
dec
or
dec
pop
adc
clc
sbb
test
add
out
jne
pop
sti
fdivs
and
jo
dec
xchg
sub
aas
jo
xchg
or
adc
push
aam
xor
push
cmpl
mov
mov
out
loopne
pop
adc
pop
jb
leave
loopne
cmp
aam
nop
outsl
les
clc
loopne
jmp
xchg
jae
cmc
sbb
int
cmp
gs
sbb
fistps
cmpsb
dec
ffreep
sti
xor
popa
fcompl
ss
or
jl
or
adc
cmpsb
sbb
movl
es
xor
into
mov
pop
cli
cmpb
xchg
lock
inc
push
cmpsb
gs
jl
push
outsb
loope
aad
sbb
imul
dec
test
pop
mov
sub
lea
mov
mov
fwait
mov
in
mov
shlb
lock
mov
push
jnp
lds
cld
in
loopne
push
lods
sub
push
pop
call
lea
jmp
xor
leave
into
jne
xor
pop
repnz
loopne
movsl
repnz
sub
aad
mov
pop
sbb
ret
push
sub
xchg
jb
jl
rcrb
xorb
das
adcl
fldl
mov
push
loop
mov
cmp
jge
adc
cmpsl
rclb
decl
push
cmpsb
lret
lcall
jno
cmpsl
cltd
mov
or
xchg
sub
inc
add
jne
ljmp
ud0
push
xorb
loopne
nop
or
push
sti
sub
pop
mov
shlb
or
daa
sub
xorl
mov
push
mov
shr
pop
and
rcll
or
xchg
insb
cmp
or
mov
sbb
outsl
jmp
sbb
addb
imul
lret
jle
dec
lret
or
cmc
pop
mov
fdivl
sbb
shr
jg
notl
pop
gs
out
xor
popa
pop
mov
aam
mov
inc
cmp
xor
es
cli
js
ds
add
mov
das
push
aam
clc
sbb
pop
stos
pop
adc
or
mov
outsb
mov
ds
iret
and
xchg
fiaddl
or
mov
les
out
fstpl
pushf
fcmove
mov
lcall
dec
dec
jmp
lods
pop
scas
xchg
insb
jno
lods
adc
pop
dec
aam
jns
xchg
fdivrs
loopne
cli
mov
dec
push
or
pop
lods
sbb
sub
out
loop
loopne
cmpsl
jno
test
mov
add
dec
add
icebp
aad
insl
adc
xchg
shrb
cmp
mov
pusha
cld
xor
cmp
xor
jne
dec
fildl
cld
sbbl
movb
and
mov
mov
inc
stos
icebp
adc
or
dec
cli
sub
pop
shlb
mov
imulb
mov
pop
in
sbb
ds
xchg
inc
xchg
push
add
icebp
xchg
addr16
mov
dec
out
iret
lcall
gs
jle
movsb
sahf
sbb
jnp
xchg
in
ret
jo
or
mov
daa
adc
in
sub
out
sbb
jns
insb
lods
aam
mov
ja
and
sbb
or
clc
sti
icebp
xchg
aam
add
sub
mov
pop
lds
jns,pn
mov
aaa
sbb
and
imulb
test
pop
ljmp
mov
xor
and
and
jae
jp
movsl
inc
adc
lods
adc
sbb
jne
addl
sub
mov
lret
cmp
enter
shll
scas
inc
mov
jecxz
push
lahf
cmpsb
sub
mov
mov
inc
data16
out
xchg
pop
ja
sub
pop
dec
fidivrs
cmpsb
inc
cmp
cmpsl
int3
sbb
clc
jo
dec
pop
fstps
das
mov
pop
ffree
pop
adc
push
aam
mov
orb
mov
jb
rep
mov
js
adc
adc
mov
jo
stos
ror
lret
rcl
sub
push
ds
sbb
jbe
ret
mov
and
loope
mov
push
pop
cltd
not
jl
push
add
dec
int3
test
cltd
jo
inc
cmp
int3
ret
sarl
dec
les
xchg
jbe
add
je
je
or
xchg
dec
fwait
js
mov
ja
pop
mov
dec
test
outsl
lret
sbb
arpl
pusha
jbe
jae
mov
sbb
mov
xor
mov
sahf
push
dec
ret
pop
mov
lret
pmuludq
stos
outsl
out
push
cmc
pop
nop
pop
out
fdivr
outsb
jmp
sbb
popf
loope
xlat
add
test
jle
inc
mov
xor
sub
jbe
adc
add
push
lods
mov
daa
enter
arpl
ja
pop
enter
cmpsl
cmp
jecxz
sub
icebp
xchg
frstor
and
or
arpl
mov
fbstp
les
add
nop
add
imul
mov
jecxz
ret
mov
dec
inc
mov
popf
out
das
and
jle
push
sbb
cmp
and
push
lock
jle
mov
ja
jmp
stc
mov
inc
jl
popa
lcall
into
repnz
sbb
imul
or
cmp
ja
cmp
shll
lds
gs
cmp
push
add
fisubrs
sbb
mov
dec
fwait
mov
sbb
fs
dec
mov
test
add
adc
insl
inc
mov
mov
lods
movsl
inc
subl
gs
addr16
pop
cmpsl
roll
or
dec
jb
sbb
jg
fcom
xor
inc
loope
mov
jmp
lret
fstpt
pop
mov
mov
ds
in
fwait
jns
sbb
jae
lcall
shll
mov
insb
add
data16
add
mov
scas
test
add
add
clc
jae
inc
lea
iret
mov
adc
imul
nop
lret
lcall
rcl
mov
outsl
push
mov
push
jbe
jp
jg
pop
pop
mov
popf
mov
pop
adc
das
sbb
cmpsl
imul
pop
ljmp
inc
call
push
popa
mov
cmpsl
cld
push
sub
lock
mov
out
pop
mov
jno,pn
mov
jg
rolb
out
movsl
out
pushf
outsl
fimuls
test
push
jns
dec
subb
or
std
inc
dec
fwait
add
jge,pt
bound
int3
lea
pop
jns
sbb
and
adc
sub
movsb
mov
outsl
mov
pop
push
mov
pop
mov
or
gs
mov
repz
mov
loope
and
ret
pop
es
movsb
or
mov
xchg
or
ror
cmp
xlat
jmp
inc
sbb
xchg
out
lods
loopne
push
adcb
inc
lret
cmp
je
lcall
cmc
or
mov
mov
pop
pop
and
jmp
ja
mov
push
leave
push
cmp
sub
loopne
out
mov
mov
sbb
xchg
inc
dec
subl
inc
cmp
dec
inc
int
pushf
mov
mov
cmpsb
jns
outsl
jno
xlat
rorl
or
dec
cld
repnz
mov
push
movsl
jne
aas
mov
and
push
xchg
push
in
ficomps
bound
inc
xchg
stc
imul
pop
pop
jne
jne
dec
int
aad
mov
dec
mov
xor
or
and
imul
jmp
andl
jo
push
sti
xor
shrb
ss
scas
ret
cmc
js
xor
xchg
imul
btc
jb
pop
jbe
xchg
mov
xchg
sbb
inc
nop
pop
mov
xor
pop
call
fs
and
sub
mov
imul
pop
lods
adc
add
sub
xchg
mov
lds
cmp
nop
lahf
mov
repnz
mov
mov
imul
enter
push
xor
cmp
push
test
ret
stos
es
mov
orb
daa
cmpsb
and
mov
lcall
test
cmp
mov
pop
pop
mov
jl
xor
insl
fiadds
stc
outsb
push
pop
enter
scas
add
shll
or
popa
add
dec
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
popa
pop
outsb
jp
push
push
sub
push
push
sub
inc
sub
loope
adc
loopne
fprem
jb
popa
push
inc
sub
mov
xchg
sbb
lods
in
pop
add
or
addb
inc
pop
sub
xchg
es
icebp
aaa
mov
dec
sahf
inc
fs
inc
lods
fdivrl
and
mov
sti
cmp
cmp
in
xchg
jbe
aas
jae
cmp
lahf
add
les
mov
jae
xchg
jb
ret
add
aad
es
into
cmp
mov
nop
mov
outsl
gs
cmp
mov
loope
dec
les
shll
push
outsb
sbb
inc
dec
fs
out
sbb
jnp
xchg
lods
pop
fwait
lcall
clc
mov
pop
fnstenv
lret
xchg
xor
outsb
add
or
mov
jne
notb
add
add
fidivs
jmp
cltd
cmp
popf
jno
clc
jp
pop
fs
xchg
nop
mov
or
dec
pushf
aas
int3
lock
add
mov
aam
adc
xor
xchg
xchg
out
xlat
aaa
mov
or
aad
lds
bound
aas
mov
lea
sarb
in
cmp
adc
out
pop
and
xor
cmp
or
das
out
sti
inc
bound
js
pusha
inc
mov
adc
pop
lahf
fdivs
std
dec
xchg
pop
xor
push
xchg
push
scas
mov
xor
adc
dec
dec
xchg
cmpsl
stos
and
mov
xchg
mov
je
cmpsb
inc
jle
jecxz
pop
lock
das
addr16
cmpsb
xor
mov
insl
sahf
xchg
xchg
popa
cld
sbb
fs
fwait
addr16
push
mov
mov
add
dec
arpl
jp
in
loopne
cmp
pop
push
sub
clc
cmp
and
in
sub
frstor
dec
pop
adc
push
dec
mov
faddl
in
cmp
adc
cmp
push
cld
and
or
shrl
leave
or
aam
mov
cmpsb
ljmp
jle
bound
popf
jmp
imull
cld
adc
sub
mov
repz
out
test
jb
in
faddl
jecxz
jge
sub
sbb
inc
pop
xchg
xchg
cmpsb
cld
adc
and
out
push
push
xchg
xchg
imull
sub
ljmp
inc
adc
sub
inc
je,pn
gs
or
insb
mov
inc
and
mov
mov
push
sbb
out
fdivrl
mov
xor
mov
push
jl
popa
aas
bound
imul
sbbb
push
jl
mov
inc
inc
push
mov
arpl
ss
and
xchg
mov
subb
dec
inc
mov
xor
sub
fdivrs
mov
mov
mov
arpl
les
les
outsl
fld1
enter
inc
mov
xchg
popa
ds
pushf
je
je
sub
pop
jo
clc
mov
addr16
sti
and
enter
mov
loope
or
mov
pop
jnp
sbb
sbb
std
test
movsb
in
dec
ljmp
sbb
adc
andl
cld
push
cmp
mov
adc
and
stos
ljmp
les
and
jg
movsb
adc
cwtl
pop
js
nop
out
xchg
js
jae
add
push
xchg
mov
push
mov
inc
ds
shlb
inc
scas
test
cwtl
movsl
in
xchg
mov
adc
mov
cli
xor
in
pop
out
mov
insb
lea
add
scas
sub
cmc
pop
out
fs
rcrb
cmp
addb
xor
or
mov
int3
xlat
inc
sub
xor
daa
ret
mov
cmp
fs
pop
sub
je
in
fwait
or
pop
dec
loop
push
ret
es
push
add
push
addl
sbb
mov
roll
int3
cmc
out
add
ffree
xchg
shlb
bound
and
dec
pusha
fbld
cltd
push
test
push
data16
lods
daa
in
jmp
mov
inc
stc
out
jns
xchg
xor
push
dec
fistps
hlt
ret
mov
insb
es
pop
add
mov
dec
mov
xchg
mov
jo
sub
loopne
fwait
out
rclb
dec
mov
and
insl
inc
imulb
aaa
mov
pop
sbb
cmp
out
mov
sub
nop
arpl
fdecstp
inc
les
and
or
xor
leave
mov
cwtl
mov
hlt
fs
push
notl
iret
push
xorl
stc
jmp
call
icebp
into
stos
or
in
jl
test
dec
pop
xchg
divb
cld
mov
jo
addr16
mov
dec
sbb
mov
scas
lods
mov
in
loop
pop
xor
add
jmp
and
clc
out
or
mov
js
or
mov
push
gs
ja
push
rcrl
fs
jp
cmp
mov
sub
bound
jb
outsb
cmpsb
testb
add
xor
inc
add
cmp
xchg
pop
movsl
dec
adc
sbb
cmp
or
push
mov
mov
push
hlt
mov
sbb
insl
jnp
jge
inc
push
out
push
xor
je
sarb
loop
mov
daa
ljmp
scas
push
jb
arpl
aas
movsl
or
pop
subl
inc
push
rep
jnp
scas
push
stc
movsl
jae
inc
dec
ja
push
out
dec
cmp
nop
cmp
jle
sbb
add
xchg
push
or
sbb
mov
pop
xchg
add
out
sub
sub
int3
jge
dec
push
es
aas
push
mov
jno
mov
fiadds
out
sub
mov
jns
shlb
xchg
lahf
jp
dec
pop
pusha
les
xor
mov
push
pusha
daa
aaa
mov
push
adc
add
jle
divl
adc
pop
mov
mov
dec
arpl
inc
mov
xchg
or
xchg
mov
arpl
dec
mov
lcall
int3
movsb
notb
pop
sub
fsubs
in
push
ljmp
cld
ljmp
cmc
xchg
repz
and
test
call
inc
out
mov
shlb
mov
mov
pop
mov
les
lods
jns
inc
addr16
mov
aam
inc
imul
inc
cmpsl
and
mov
push
sub
jbe
xchg
fs
mov
cmp
push
xchg
pop
out
xchg
scas
fcompl
mov
bound
insl
out
in
insb
aad
jmp
addr16
out
jle
mov
lods
xlat
add
mov
pop
inc
xchg
jmp
dec
adc
sub
scas
add
xchg
std
mov
cmp
std
test
stos
dec
xlat
jne
pop
pop
stc
xorl
jp
xor
sub
fists
ret
arpl
xchg
test
ret
push
add
lahf
sbb
ret
rcr
cmp
bound
sub
call
insb
push
add
cmp
mov
loop
add
movsb
faddl
mov
ds
insb
add
rclb
sub
movsl
fldenv
sub
pusha
in
mov
pop
or
cmc
xchg
pop
loop
jno
inc
push
lea
pushf
aad
dec
stc
ja
dec
in
rorb
pusha
mov
lea
dec
mov
icebp
xor
cwtl
add
cmp
sarb
lock
xor
xchg
push
and
xchg
mov
inc
adc
mov
and
xchg
mov
jle
les
cmp
in
lahf
push
sub
jbe
repz
xor
les
jmp
incb
test
loopne
add
cs
dec
inc
pop
mov
ss
cmc
sbb
popa
lcall
mov
jae
cmpl
out
int
dec
fcoml
jnp
push
push
dec
cmc
jno
pop
jg
imul
stos
outsb
adc
popa
testb
int3
out
xor
lods
jg
in
sbb
xchg
gs
call
cmp
mov
pop
hlt
loop
add
pop
insb
jns
in
test
sbb
pop
xchg
pop
pop
popf
cltd
add
loopne
xchg
enter
mov
fisttpll
stos
popf
mov
sbb
mov
jp
das
sub
sbb
lahf
inc
sahf
ja
das
ret
pop
xor
mov
ror
imul
push
mov
push
mov
jecxz
dec
jnp
stos
adcl
push
out
push
mov
add
sub
and
inc
sarb
xor
inc
xchg
sbb
cmp
push
pop
jl
dec
pop
jecxz
dec
sbb
scas
fs
and
and
icebp
xchg
cmp
add
inc
in
repz
iret
mov
jp
test
fs
mov
repz
mov
gs
xor
int
shlb
std
aas
pop
movlps
push
push
xor
jnp
cmpsl
in
rolb
push
pop
fimuls
stos
lods
add
cmp
repz
pusha
cmc
fdivl
aam
loopne
pop
test
sbb
pop
test
repz
movsb
sbb
sbb
daa
cs
out
sub
adc
or
out
fmul
cmpsl
mov
xlat
shlw
aad
sarb
mov
cs
jb
xchg
sub
or
lret
inc
daa
mov
incl
add
and
fcmovb
dec
or
inc
stos
mov
add
add
fs
rorl
inc
cmp
add
inc
daa
in
leave
pop
out
jno
sarl
sti
xor
and
mov
pushf
dec
ja
data16
repnz
scas
or
hlt
shr
mov
sub
push
or
xor
jge
stos
arpl
outsb
stos
fsubrs
sbb
cmp
lret
cltd
nop
stos
pushf
mov
popf
lcall
mov
sarl
loop
loopne
dec
lds
daa
sarl
leave
sub
mov
lds
sar
mov
outsl
insl
jb
pushf
stc
jb
test
jno
dec
push
jl
movsb
adc
xchg
jnp
fisttpll
sbbl
ret
add
inc
out
into
lea
dec
lods
pushf
inc
cmpsl
add
xchg
cmpsl
es
stos
pop
call
test
fimuls
sub
int3
jp
ss
dec
or
rorl
test
aaa
arpl
mov
inc
into
stos
sub
inc
xchg
mov
jns
loopne
pushf
and
movsb
mov
dec
add
out
loopne
adc
cltd
add
fwait
jmp
inc
mov
adc
cwtl
adcb
outsb
cld
je
sub
xchg
add
cs
mov
negb
or
mov
das
sbb
fcomps
dec
daa
movsb
out
cld
mov
cs
adc
mov
imul
loop
js
pop
ret
mov
mov
xor
js
test
lock
push
mov
sub
push
mov
popa
aas
lahf
mov
pop
mov
pop
adc
sbb
push
ret
and
int3
sub
lcall
inc
mov
add
mov
div
mov
in
mov
add
cli
dec
sub
icebp
lds
nop
out
mov
pop
mov
push
push
insb
mov
loop
mulb
xor
rol
mov
or
lret
lret
push
rcl
int3
jnp
addr16
out
adc
call
cmp
push
lods
jmp
cmp
add
inc
in
lea
scas
js
mov
or
orb
mov
mov
imul
int
add
out
push
ret
in
adc
lcall
repz
xchg
or
mov
sub
fbstp
jecxz
repnz
lea
movsb
out
adc
clc
mov
test
lcall
and
and
or
pop
jge
lods
adc
outsl
and
fstpt
cmp
inc
dec
shlb
xchg
movsl
stos
call
xchg
push
push
mov
mov
cmp
aas
and
pop
add
or
inc
push
push
or
fs
jne
dec
test
sbb
je
mov
aam
mov
add
sub
outsl
xchg
loope
inc
scas
ret
ror
mov
mov
scas
pop
pop
lcall
xchg
or
adc
in
mov
pop
sbb
pop
mov
inc
rcrb
pop
sarl
aam
nop
jge
xor
mov
ret
rcl
inc
mul
add
jae
scas
test
and
pop
adcb
adc
xchg
xchg
popf
sub
stos
mov
and
push
jnp
fwait
stc
vpaddd
iret
popa
movsl
mov
imul
fldcw
mov
push
push
clc
fsub
inc
xchg
mov
out
push
fcoml
fwait
loope
cli
adc
out
repz
mov
testl
pop
add
fidivl
inc
xor
mov
out
incl
outsb
ss
std
jmp
jg
or
inc
fildl
jecxz
xor
push
xchg
lahf
mov
push
push
push
add
push
add
xchg
sbb
std
rclb
jge
push
push
mov
add
and
or
adc
adc
cmpsb
pop
negb
shll
cltd
cmpl
divb
xor
cmpsb
sub
and
stc
xchg
push
sub
sub
pop
out
mov
sbb
mov
jle
mov
push
pop
mov
mov
or
and
cmpb
push
push
addl
cmp
out
xchg
sub
add
arpl
test
cli
pop
inc
fwait
dec
iret
dec
stos
das
shl
idiv
inc
cli
clc
in
cmpsb
jmp
sub
pop
imul
cmpsb
into
sbb
add
sbb
xor
gs
inc
mov
xor
mov
mov
mov
push
stos
loopne
or
nop
test
inc
imul
scas
pushf
aaa
enter
xchg
cltd
mov
cwtl
push
shrb
sbb
into
and
cmp
out
clc
xchg
cmp
repz
mov
jnp
xchg
mov
ljmp
mov
js
sbb
xchg
fwait
lcall
jp
out
sub
dec
orb
sahf
out
stc
push
pop
push
or
pop
loope
imul
mov
dec
jno
inc
popa
push
cli
push
lds
sbb
push
cmpsb
and
in
push
sahf
pushf
or
add
out
hlt
ds
jmp
outsl
xchg
lock
add
cmc
scas
lea
mov
pop
jmp
sub
scas
movsb
jns
fisubrs
sarb
cwtl
inc
lret
xor
js
or
ds
fs
jp
shll
adc
std
iret
sub
mov
dec
inc
daa
dec
or
mov
push
lods
dec
jmp
seta
or
adc
mov
xchg
hlt
cmp
lcall
popl
stos
jecxz
adc
call
movl
std
mov
test
lret
dec
mov
aaa
dec
in
xchg
decb
adc
and
cmp
movb
xor
add
in
call
aad
movsb
in
dec
jae
xchg
es
pusha
sbb
sub
sbb
addr16
jo
movsb
fdivl
mov
test
frstor
dec
addl
mov
imul
sti
mov
loopne
subl
fwait
xchg
rclb
xlat
decb
lret
mov
push
icebp
mov
lea
xor
sub
scas
xchg
pop
sti
mov
int3
xor
loop
testb
cs
adc
insl
xor
cmp
das
jo
sub
dec
sbb
stos
pop
mov
inc
and
ret
or
lds
clc
mov
fdivr
fs
loop
xlat
mov
push
xor
icebp
loop
sbb
inc
sbb
ja
and
imul
xchg
jle
inc
mov
dec
adc
dec
mov
in
das
pop
rcr
sahf
jne
push
out
lock
jb
loopne
push
pop
push
pop
push
and
jmp
push
and
fstpl
pop
mov
outsl
push
jl
nop
lahf
pop
xor
lea
xor
cld
rolb
sbb
mov
popf
loope
jle
lcall
and
les
cmp
mov
jbe
movsl
into
dec
adc
cmp
stos
sbb
lret
mov
or
jg
sbbl
jbe
clc
lahf
or
leave
xor
xor
and
pop
out
stc
int3
xchg
fcoms
imul
out
mov
sarb
and
mov
testb
in
outsb
or
sbb
dec
cmp
inc
mov
imul
fcmovu
jbe
xchg
insl
jb
push
insb
dec
cmpsb
mov
or
add
cmpb
xchg
jmp
jge
out
xchg
pop
and
adc
and
push
inc
and
mov
std
sti
jbe
sbb
stos
and
movsb
aam
insb
add
movsb
call
clc
add
or
outsl
mov
fisubs
jne
hlt
sbb
out
gs
popf
shlb
cmp
aas
cmc
inc
lret
dec
lds
cli
out
xor
iret
movsb
pop
pop
or
enter
das
push
leave
mov
xor
push
scas
jecxz
jbe
sbb
mov
cli
push
pop
les
push
pop
mov
aaa
stos
dec
xchg
push
pop
push
in
lea
mov
icebp
aam
ret
adcl
jno
push
lock
push
and
aaa
lcall
dec
jg
out
mull
sub
xchg
jo
pop
lret
sbb
sti
pusha
shl
clc
jb
insl
pop
and
aam
jmp
shrl
cli
scas
inc
icebp
adc
add
dec
mov
sub
adc
and
inc
pop
aas
or
push
adc
out
mov
and
or
cmp
cmp
jmp
xor
xchg
xchg
xchg
ljmp
cmp
xor
aad
aas
or
push
fdivrl
rcrb
das
sbb
fidivs
addr16
mov
pop
imul
jmp
pop
jmp
js
dec
mov
inc
nop
iret
xchg
jne
imul
out
or
gs
je
jle
adc
adc
das
sbb
stos
test
cwtl
call
scas
mov
sar
ror
or
jb
leave
cmp
xorl
inc
call
insb
das
sbb
call
or
adc
cmp
test
lods
sbb
cmc
push
stc
testb
fwait
cmp
sub
test
test
sub
iret
ss
shlb
rolb
jg
cmpl
test
daa
and
lret
jmp
and
fsubr
mov
jge
aad
push
push
in
insb
push
sbb
insb
imul
add
push
xchg
repz
mov
and
fadds
imul
or
jnp
mov
aas
int3
fdiv
fdivs
enter
lcall
stos
dec
pop
stos
ljmp
enter
outsb
mov
push
aad
ds
mov
sub
mov
push
add
xor
test
add
out
sub
pop
push
sbb
or
and
cmp
sub
das
stos
pop
xchg
lret
lea
jb
mov
sub
jp
rorb
into
xor
insb
push
out
repnz
xor
jb
aas
push
pop
lret
xchg
test
sub
sub
test
push
jecxz
in
sbb
test
inc
push
in
jge
repnz
icebp
pop
testb
fstps
fsts
or
jae
ret
lds
sbbl
aaa
cmpsl
push
sbb
push
inc
andb
jmp
mov
out
dec
jns
cli
enter
adc
arpl
dec
jno
push
fdivr
jnp
dec
adc
mov
lcall
add
jmp
scas
adc
sbb
rolb
pushf
cwtl
jg
adc
inc
add
xor
sub
arpl
iret
les
dec
mov
loopne
jo
shll
mov
push
mov
ret
icebp
mov
inc
loope
jns
xchg
adc
loope
imul
or
xlat
xrelease
aaa
inc
adc
xchg
test
dec
xor
cmpsb
hlt
ret
lret
pop
shrb
mov
cmp
or
pop
fdiv
mov
push
adc
adc
ret
int3
push
call
dec
dec
and
lock
gs
mov
xchg
push
jle
or
aaa
pop
dec
in
xlat
aas
inc
xorb
fcomps
mov
loop
mov
int
test
sbb
movsb
std
fidivl
lods
or
movsl
pop
mov
xorl
mov
and
push
sbb
mov
jnp
pop
jbe
xor
and
rcr
push
js
outsl
cli
out
mov
xchg
jmp
cmp
push
in
jmp
ja
mov
testb
mov
or
add
dec
ret
dec
fsts
sbb
inc
xor
push
arpl
cmp
movsb
dec
mov
std
jg
inc
in
bound
je
or
repnz
xchg
dec
lock
push
mov
pop
lock
add
cmp
push
ja
cmpsl
xchg
addr16
movsl
jbe
push
or
push
sbb
or
shlb
jmp
call
sbb
inc
xchg
push
mov
loopne
push
mov
cmpsb
lret
push
xlat
movsl
jae
shrb
cmp
loopne
iret
xchg
inc
mov
fwait
jecxz
out
cmp
scas
pusha
adc
fsubrs
push
mov
lret
push
bound
call
fistps
lar
mov
cli
ljmp
mov
std
jl
pushf
mov
push
xchg
dec
test
jne
sub
and
cmpsb
inc
sbb
xor
cmpsb
cmp
fcoml
inc
jne
and
ret
lret
mov
jp
std
lahf
lret
scas
lret
mov
sub
repnz
in
std
dec
lret
aad
pop
rorb
jo
cs
adc
mov
mov
sub
cli
push
pop
adc
lret
movb
sub
ja
jp
test
sbbl
loopne
enter
cmpsl
inc
and
int3
das
cmp
cmp
aaa
dec
or
pop
push
lods
sbb
into
sbb
inc
inc
in
lcall
sbb
arpl
test
mov
rcll
mov
mov
xchg
jne
fs
pop
sbb
xor
aaa
sub
aad
cmpsl
xchg
fildl
mov
sbb
sbb
pop
lret
pusha
sub
mov
jg
out
mov
ljmp
push
mov
mov
pop
in
data16
xchg
inc
mov
inc
int
pushf
mov
mov
stc
dec
outsl
adcb
push
movsl
adcl
xor
mov
iret
cli
icebp
test
jecxz
xchg
xor
movsb
push
pushl
aam
lret
mov
dec
adc
es
aad
mov
ret
pop
testl
cmpsb
jl
xor
xorl
insb
sbb
test
pop
push
sub
dec
out
sbb
shll
gs
insl
cli
push
jno
pop
jg
xchg
xchg
pop
lods
ljmp
jbe
mov
jmp
adc
push
lahf
jns
sbb
and
and
inc
add
adc
push
scas
inc
sub
mov
xor
leave
push
mov
push
sbb
mov
frstor
aam
pop
insl
add
addr16
xchg
out
mov
lds
push
loop
dec
mov
nop
xor
clc
popa
push
repz
push
and
inc
or
pusha
imul
fwait
and
jmp
test
call
lcall
xchg
push
mov
insb
lea
call
sbb
fsubrl
in
daa
movsb
cmp
fsubs
movsb
out
pop
in
fidivrl
adc
fdivrs
inc
pop
jo
xor
adc
pusha
cmp
add
and
pop
push
jmp
int
fwait
xchg
inc
outsb
sbb
fwait
test
push
cmp
push
fwait
mov
push
scas
mov
push
add
bound
cmp
in
push
dec
push
movl
int
sub
push
in
orl
fldenv
mov
push
xorl
out
jae
pop
iret
aaa
cmp
jne
sahf
push
sub
int
add
daa
push
add
sub
and
pop
movsb
aaa
dec
ljmp
sbb
loope
sarb
jae
pop
incl
mov
jmpw
ss
and
sub
pop
cltd
pushf
sub
dec
inc
pop
cmovle
movsb
jnp
jne
xchg
es
scas
or
inc
leave
lods
movsl
out
mov
pop
pop
rcrb
push
lods
jbe
repz
jge
and
lahf
push
repz
cmp
lds
repnz
jbe
stos
adcl
shll
mov
dec
sub
xchg
dec
add
adc
pushf
lock
cwtl
add
gs
fwait
jno
mov
push
fisttpl
mov
imul
out
repz
test
jbe
cmpsl
push
push
push
ljmp
pop
mov
dec
sub
mov
in
inc
sub
mov
call
adc
dec
arpl
adc
push
inc
add
repz
jne
out
mov
loopne
jno
jmp
pop
cmp
mov
cwtl
mov
lcall
adc
lock
nop
cld
jmp
stos
in
xlat
push
into
scas
xor
and
stos
inc
sub
out
loop
xchg
push
add
scas
sub
dec
cs
dec
movsb
es
test
clc
dec
cld
arpl
or
mov
enter
test
push
dec
movsl
in
pop
in
push
sub
gs
inc
cs
insl
mov
inc
fsts
gs
sub
out
in
insl
mov
cmp
arpl
les
xchg
mov
in
mov
ljmp
and
lret
or
pop
aaa
jae
js
je
and
mov
mov
arpl
in
xchg
mov
push
xchg
outsb
cltd
mov
push
xchg
and
xchg
jecxz
dec
test
mov
push
adcl
addb
subb
sub
stos
xchg
outsb
push
scas
into
cli
add
xchg
sub
jae
lock
out
adcl
adc
mov
pop
xor
imul
xlat
nop
cltd
mov
dec
push
cmc
pop
cltd
mov
or
lods
xor
movsb
scas
out
stos
push
sub
ljmp
mov
popf
lret
rorb
cmpsl
pop
call
test
frstor
adc
push
adc
lds
pop
xchg
and
stc
and
out
cmp
pop
adc
mov
add
popf
mov
mov
pushf
dec
lahf
shll
sub
push
insb
js
jb
es
sub
inc
ret
and
inc
pushf
stos
jle
push
cmp
push
adcw
cmp
jns
cmp
xor
gs
xchg
dec
loope
xchg
mov
inc
dec
xorb
fildl
and
ret
mov
test
roll
cld
sbbb
mov
jae
jp
mov
add
push
pusha
jl
popl
push
outsb
xor
add
aas
jnp
mov
jo
dec
mov
repz
fstpt
lahf
sub
pop
inc
mov
fidivl
addr16
mov
jge
or
out
jns
sbb
popa
shl
aam
cs
out
inc
mov
mov
cmp
jg
in
enter
mov
jno
loopne
sarl
loop
sub
stc
xor
or
lods
jg
ret
adc
inc
xor
test
mov
xor
popf
mov
xlat
push
orl
jp
js
mov
xchg
popf
push
cmp
arpl
es
adc
cmpl
data16
inc
sub
iret
lret
int3
pop
out
or
and
jno
gs
mov
ljmp
push
jno
ja
cmp
sbb
push
out
inc
or
rcll
jmp
mov
or
jmp
pop
insl
sub
cmp
icebp
or
test
push
push
push
sub
push
push
and
adc
or
or
js
push
pop
ficoms
sbb
repz
xchg
push
sub
jne
mov
push
in
dec
mulb
mov
mov
sub
cld
std
lods
mov
push
push
cmp
cmp
das
xchg
mov
into
in
push
loop
jae
and
test
adc
and
sahf
inc
and
rclb
dec
mov
or
stos
xchg
repz
xor
and
xchg
inc
pop
insl
push
mov
sub
icebp
inc
sbb
cmp
shl
and
push
mov
sbb
xlat
add
arpl
jp
loop
cltd
jp
mov
in
pop
push
clc
ror
aam
aad
and
inc
rolb
fcompl
adc
mov
sarl
adc
in
xor
in
pushf
lds
and
jp
adc
push
fs
mov
rolb
sahf
cmp
cmp
cmpl
cmp
and
push
xchg
jp
cmc
inc
mov
mov
popf
xor
cld
mov
cmp
xchg
loop
xor
test
les
fisubrs
pop
iret
mov
ljmp
outsb
test
and
nop
jb
cmp
arpl
addr16
xor
pop
jge
mov
mov
sarb
movsb
dec
nop
stc
push
in
lea
subb
ss
fstpt
fisubl
mov
fs
lock
jmp
lea
mov
les
add
jbe
xor
pop
outsb
pop
fldenv
adc
ret
ret
jle
scas
dec
jno
sub
frstor
fwait
jb
sub
push
xor
sub
xchg
pop
roll
imul
mov
cmp
sbb
xor
int3
clc
rol
pushf
repz
out
jl
out
shll
sub
add
in
mov
out
xor
fucom
pop
or
mov
jle
test
pop
lret
xor
mov
cmpsl
push
mov
cmpsb
bound
or
popa
ss
xor
pop
lods
cmpsb
lret
push
arpl
imul
clc
out
dec
inc
rorl
ljmp
xchg
jp
sub
xchg
xor
ret
fnstcw
ret
dec
pop
adc
dec
rolb
mov
gs
into
lcall
pop
cmpsl
dec
loopne
and
jbe
jno
add
ljmp
mov
mov
pushf
mov
mov
sub
int3
and
fsubrl
mov
scas
mov
sbb
xlat
pusha
sbb
xchg
mov
jge
add
fldl
in
or
pop
xor
stos
add
jb
and
and
pop
mov
iret
or
adc
mov
loope
push
sbb
cmp
mov
jge
pop
es
mov
rcrl
js
xor
das
and
outsb
mov
inc
mov
cmp
add
sbb
sub
lret
push
loopne
xor
test
or
mov
ds
pop
xor
mov
sbb
rolb
mov
push
jns
mov
mov
or
addb
jb
mov
adc
push
or
test
dec
cmp
cmp
mov
cmp
cmp
imul
ret
fs
nop
rcll
aas
push
out
icebp
cmp
call
cmp
inc
mov
pushf
xchg
fcom
shr
push
in
outsb
mov
fiadds
call
cmc
shll
test
mov
pop
xor
psubw
push
jge
outsl
or
mov
jmp
dec
repnz
and
das
push
xchg
sub
lds
jge
ret
out
and
and
cld
pop
fdivs
lahf
in
mov
setns
lret
mov
cmc
mov
cwtl
ljmp
not
rolb
push
pop
mov
mov
cmpsb
jg
push
sbb
xor
and
enter
jnp
cld
mov
outsl
mov
push
xchg
dec
xor
add
lret
add
lds
addr16
sub
orb
pop
cld
add
add
mov
dec
enter
sbb
out
pop
mov
xor
jae
ret
popa
dec
int3
adc
pushf
pop
int
stos
push
les
push
ss
adcl
pop
pop
js
sti
lahf
mov
jo
ds
ret
sbbb
sub
xchg
inc
mov
aad
stc
aas
pusha
mov
dec
cltd
jbe
hlt
in
xor
or
cltd
loop
inc
ljmp
and
shr
mov
xchg
shll
and
test
dec
sub
pop
jae
and
adc
push
shrb
push
sbb
je
push
pop
mov
lret
jnp
outsb
mov
daa
jl
repz
pop
fs
lcall
cmp
dec
shll
dec
fwait
sub
mov
jmp
jle
xchg
lcall
adc
idiv
mov
inc
push
ret
iret
mov
sub
adc
pop
mov
in
int
mov
adc
shl
push
rcl
cmpsb
pop
leave
push
lcall
cmp
add
adc
and
jns
mov
cli
mov
mov
push
sbb
rcll
and
xor
call
lret
inc
in
mov
stos
pop
push
loopne
cmc
stos
jg
aam
jne,pn
sbb
or
push
push
ljmp
adc
sbb
pushf
pushf
xor
jle
mov
popa
sub
cmp
mov
add
dec
lret
shll
and
inc
iret
pop
hlt
inc
xchg
or
repz
sti
loope
jbe
sub
push
gs
in
jmp
iret
sub
cltd
jae
mov
ficomps
mov
movsb
scas
or
in
sbb
notb
inc
call
or
into
cmp
ficoms
imul
mov
jno
divl
xor
andb
aaa
mov
inc
mov
into
sbb
scas
cmp
xor
mov
fildll
mov
aas
sar
fstpl
jno
mov
adc
xor
add
jecxz
xchg
xor
out
push
mov
icebp
xchg
add
mov
pop
sbb
sbb
mov
in
cmp
ja
pushf
inc
test
xor
mov
jmp
cmp
mov
aaa
mov
fdivrs
shrb
pop
adc
std
movsl
cmp
sub
sub
lahf
test
test
xchg
test
std
inc
cmp
dec
in
aaa
je
or
cltd
mov
xor
or
orl
cmpl
scas
ja
cmc
loope
sti
or
out
fwait
dec
mov
jg
lock
push
push
not
outsb
lcall
lock
mov
sbbl
ffree
sub
scas
adc
push
icebp
cmpsb
adc
lahf
inc
fxch
jnp
cmp
mov
push
jl
test
out
pop
sub
ret
rcrb
adcl
insb
mov
inc
ja
and
push
cmp
in
in
fwait
add
push
jecxz
and
or
daa
fs
jge
rclb
outsb
mov
xor
xor
sahf
pop
inc
arpl
sarl
std
pop
adc
mov
ficoms
push
jecxz
xor
sbb
add
imul
sbb
mov
imul
xor
cmp
mov
aam
xchg
lods
pop
jl
js
lods
in
lock
sar
cld
je
shl
mov
and
jp
loopne
sub
xchg
arpl
pop
inc
jp
or
rcrl
mov
and
int
xchg
push
add
mov
push
adc
ficomps
mov
sarl
mov
dec
insb
pop
sbb
in
mov
fisttpll
add
shrl
in
xor
inc
xor
mov
outsb
or
scas
data16
addl
ret
adc
ss
pop
mov
jp
mov
mov
inc
dec
out
xchg
or
lods
mov
les
push
fucomp
inc
or
pop
lahf
pop
mov
jecxz
mov
dec
out
cmp
sbb
jl
and
fistpl
jns
out
jmp
push
and
mov
adc
arpl
add
fildll
xchg
inc
mov
outsl
stos
xchg
shl
mov
add
xchg
andb
dec
ret
pop
sahf
mov
movsb
sub
xlat
rolb
push
mov
or
incb
dec
cld
xor
lcall
scas
push
jg
pop
mov
jle
movhps
lahf
sbb
add
or
loopne
xchg
add
imul
rcl
cmc
rol
or
mov
inc
inc
push
cmp
jle
jae
mov
pop
mov
or
or
stc
icebp
fistpll
xlat
fildl
lcall
cwtl
lcall
adc
fildl
xchg
dec
call
test
mov
cmpsb
jne
cli
sbbb
sub
frstor
cmpsl
call
xor
mov
jae
sbb
xchg
mov
mov
mov
inc
aas
faddl
jge
push
in
mov
movsl
push
movsb
movl
loope
je
sbbl
or
leave
dec
lds
rcll
mov
cmp
jo
or
es
fiaddl
shrl
dec
fistl
dec
and
fiadds
xchg
dec
xor
inc
movsl
xchg
jae
into
mov
stc
icebp
sub
ret
or
sbb
or
sub
in
popf
cltd
xchg
mov
sub
jmp
fs
movsl
add
xchg
or
push
fs
std
stos
jnp
sbb
jnp
imul
cmp
and
inc
jne
clc
cli
addr16
stc
mov
and
lods
orl
ja
inc
pushf
and
mov
das
mov
shll
lods
cmp
pushf
jae
fisttpll
xchg
lret
sbb
aam
mov
ljmp
mov
pushf
pop
repz
call
push
scas
jmp
hlt
mov
test
add
imul
imul
mov
inc
fstpl
stc
stc
subb
xchg
sub
js
leave
flds
ljmp
mov
mov
xor
push
mov
xlat
pop
bound
lds
dec
fbstp
mov
cmp
daa
jle
out
mov
adc
push
lea
inc
leave
call
lret
pop
lcall
dec
dec
mov
pop
add
and
jl
shll
mov
std
aas
jmp
fwait
mov
sub
repnz
loop
js
stos
cs
jp
stos
fadds
stos
jle
lret
mov
cmp
xor
inc
xor
out
sbb
mov
std
cmp
addl
hlt
imulb
xchg
adc
mov
dec
pop
sbb
cmp
inc
jl
repnz
aas
call
sbb
std
ficoms
int
dec
imul
add
xlat
jb
clc
pop
ret
sarl
aad
jnp
test
sti
cmp
sub
jbe
sub
mov
aaa
mov
clc
dec
push
fdivrl
int3
jg
dec
mov
xchg
frstor
fmul
pushf
out
sbb
popf
xor
inc
cmp
cmpsb
cwtl
fcomi
mov
push
int
std
pop
setl
or
loopne
ret
aas
enter
mov
sub
fistl
inc
inc
mov
test
adc
inc
xor
js
pop
ja
push
mov
leave
dec
sub
add
ret
lock
shlb
dec
cmp
push
notl
sub
cmpsb
in
sbb
faddp
sbb
adc
lret
push
push
pusha
xchg
out
adc
loop
out
mov
fisubrl
lahf
dec
outsb
xchg
cli
addr16
push
jl
std
cld
insl
lock
mov
sbb
les
sub
inc
ret
jecxz
dec
fbld
mov
push
arpl
lds
loope
xor
mov
shrl
insl
test
sub
cmp
dec
sub
fstl
lahf
mul
jle
iret
pop
lods
jb
cmp
xchg
inc
and
add
xchg
or
inc
jns
sub
dec
xchg
jge
adc
pop
xchg
in
lret
pop
xchg
cmp
push
mov
mov
flds
jecxz
or
sub
fs
into
cmp
jae
push
xor
lods
mov
sub
insb
outsl
jl
pop
push
icebp
cli
xchg
out
mov
std
mov
cld
addr16
fmulp
mov
ficoml
je
pop
sub
adc
es
xor
nop
inc
enter
push
scas
movsb
mov
paddw
add
ret
push
inc
pusha
fs
mulb
into
pushf
push
into
xor
add
mov
scas
dec
fadd
mov
test
sarl
add
hlt
fs
into
xchg
idivl
sub
push
xor
inc
mov
dec
loop
cmp
and
xor
stos
ss
sarb
int3
push
in
add
ds
jmp
divl
cmp
stc
push
cmpsb
int
dec
jg
mov
cli
push
add
jo
xor
into
iret
pusha
es
addl
js
adc
mov
inc
stos
dec
mov
sbb
mov
js
inc
lods
xchg
scas
cmpsl
sbb
mov
das
dec
mov
ror
iret
xchg
ss
das
xor
outsl
call
sbb
cmp
inc
jne
xor
dec
fisttpl
inc
mov
scas
sub
shll
mov
and
cmpsl
inc
test
cmpsb
adc
enter
mov
add
imulb
rcrl
aaa
ljmp
aaa
stos
sbb
cwtl
lret
mov
inc
adc
clc
inc
sub
sarb
outsl
mov
cs
lret
or
sub
stc
xchg
out
cld
mov
pop
mov
jno
add
repz
xchg
jl
in
mov
and
add
xchg
inc
mov
add
aaa
adc
loop
aad
inc
add
push
lret
cs
fsub
movb
rcrl
sti
sbb
pop
andl
stos
pop
pop
aam
sahf
je
lds
in
add
dec
push
add
adc
mov
jle
je
add
add
cmpb
std
push
mov
fs
pushl
loope
test
push
mov
mov
mov
or
mov
xchg
cmp
push
lcall
cmp
pop
pop
push
add
sub
xor
dec
cmp
pop
ficomps
aam
mov
or
in
psubusb
out
cmp
fcoms
call
das
ret
dec
lret
out
sbb
dec
push
xchg
in
jp
sbb
faddl
popf
test
mov
mov
js
ss
loop
fldt
inc
jl
int
jbe
in
lods
cmp
or
sbb
out
inc
mov
adc
cltd
xchg
cmp
or
inc
inc
in
mov
into
add
sub
mov
in
imul
push
imul
mov
dec
pop
jl
call
movsl
and
iret
mov
scas
scas
sbb
sahf
pop
test
das
cmpsb
pop
inc
inc
adc
mov
push
pop
bswap
push
ficoms
stc
lahf
dec
or
mov
xchg
orl
popa
test
xchg
ret
fdivrs
icebp
sub
lcall
jae
cmp
add
lahf
std
or
mov
pop
stos
cmp
lret
iret
lret
enter
sbb
bound
outsl
mov
add
je
mov
aad
test
scas
ljmp
orl
sub
pop
push
ret
add
scas
and
jg
movsb
or
fcompl
fprem1
add
jnp
outsl
add
test
adc
fwait
mov
mov
pop
fimull
sub
mov
xchg
push
adc
jmp
dec
scas
mov
mov
or
jne
jl
dec
pop
mov
mov
pop
push
xlat
sub
repnz
and
cmpsb
mov
mov
sbb
and
dec
test
inc
fdivrl
adc
enter
inc
push
nop
mov
arpl
lcall
pop
pop
mov
jmp
loop
mov
pop
hlt
rcrb
inc
or
push
jae
cltd
movsl
sub
push
test
add
insb
mov
dec
test
imul
sub
cmp
xor
mov
mov
repnz
imulb
js
icebp
inc
bound
ds
mov
sbb
out
mov
pop
pop
push
test
cltd
pop
sbb
cli
dec
cmc
mov
rclb
jge
std
cwtl
sbb
xchg
adc
imul
repnz
push
lcall
pop
js
adc
mov
xchg
push
sbb
iret
inc
iret
sbb
jbe
add
sub
pop
jnp
je
out
cmpl
mov
enter
cmp
pop
jne
stc
pop
jmp
push
clc
or
aas
push
sbb
out
enter
dec
icebp
inc
xchg
cs
clc
js
lods
shlb
inc
pop
push
cmp
or
cmp
adc
dec
std
mov
inc
push
loope
outsl
and
subl
xor
mov
fidivl
sub
cmpsl
stos
stc
dec
sbb
add
sub
pop
adc
jbe
push
xchg
xor
sub
into
pop
neg
adc
ds
jge
movsl
add
repnz
add
add
daa
hlt
lret
jge
and
in
ds
aas
test
adc
pop
sahf
or
xchg
or
fucomip
push
add
int3
ret
xchg
jbe
xchg
cltd
xor
xor
mov
das
xor
mov
adcl
loop
pop
pop
mov
call
sub
sub
loopne
xchg
jp
or
pusha
adc
in
sbb
add
xor
add
aam
or
push
jo
pop
dec
daa
mov
lock
call
mov
lea
jb
sbbb
ror
push
xchg
nop
add
jo
stos
negl
pop
jmp
sub
adcl
mov
movsb
fiaddl
dec
mov
sub
push
jo
rcr
and
cmpsb
cmp
div
jae
and
out
mov
inc
sti
cltd
xchg
cs
out
ror
movsb
or
or
push
push
mov
push
rcrl
xorb
in
sbbb
dec
out
das
cmovae
sti
and
mov
pop
imul
jecxz
gs
pop
adc
sub
out
or
dec
sbb
test
aaa
int3
out
push
xchg
add
push
sub
lahf
cmc
movb
aad
int
aam
ss
and
mov
sarb
addr16
push
out
mov
outsl
lods
daa
in
xor
roll
jecxz
jo
mov
pop
stos
cli
push
rclb
mov
test
mov
cmpsb
sub
sbb
inc
pop
inc
push
dec
mov
fbstp
sub
stc
pop
ljmp
add
jge
cwtl
faddl
jne
inc
int
mov
sub
jg
pop
jg
js
icebp
mov
mov
iret
and
adc
pop
push
nop
cmpsl
jecxz
xchg
fisttpll
and
fucom
pop
movsl
dec
jne
cmp
repnz
cmc
neg
sbb
cmpb
pushf
mov
cmp
and
pop
or
mov
movsb
ret
iret
mov
out
adc
xchg
push
xor
adc
xchg
jbe
mov
xor
mov
inc
sbb
test
aas
jns
mov
int3
sub
adc
inc
pushl
lods
pop
dec
mov
adc
cmp
sub
test
dec
push
xor
clc
adc
push
lods
and
jle
sarb
xchg
daa
jns
adc
ljmp
scas
js
pop
movsl
dec
add
into
dec
inc
sub
test
shll
or
xchg
push
shl
adc
jmp
cwtl
sub
dec
rorb
xor
int3
imul
jno
push
xor
in
popf
mov
clc
xchg
cmc
dec
add
xchg
push
aad
xchg
out
pop
fisubl
xchg
xchg
xchg
or
rorb
int3
sub
adc
xor
add
aad
ljmp
movsb
loopne
jl
scas
addr16
add
data16
jge
sbb
lea
push
dec
iret
dec
mov
inc
mov
lods
imul
out
das
mov
aad
or
mov
adcb
ret
imul
jnp
aad
dec
rcll
hlt
dec
ljmp
ja
mov
sub
mov
xor
arpl
cs
test
mov
hlt
scas
sahf
imul
pushf
push
mov
rcrl
mov
cld
outsl
imul
mov
mov
lods
mov
lock
mov
out
cmpsb
dec
scas
pop
add
push
nop
or
xor
scas
sbb
dec
mov
mov
lahf
lahf
jge
pop
push
mov
push
pop
dec
cmp
dec
outsl
insb
jg
ja
ds
pusha
mov
add
cs
pop
imul
nop
sahf
sub
adc
xor
push
dec
push
jne
iret
lock
inc
sub
bound
call
scas
xor
fdivp
add
push
or
xor
and
sbbl
test
push
xchg
stos
cmp
std
insl
xorb
adc
mov
daa
push
jmp
sbb
imull
pop
dec
xchg
cmp
ret
dec
push
rorb
lods
xor
mov
or
sbb
xchg
int3
sub
sbb
xor
mov
leave
repz
xchg
loop,pn
int3
shl
out
sbb
js
aaa
stos
mov
jne
std
mov
pop
insl
shrb
or
lock
in
jbe
ror
sub
ret
in
and
and
xor
pop
inc
jmp
outsl
cmp
mov
or
inc
imul
pop
imul
pop
mov
sub
arpl
test
push
add
cwtl
fnsave
stc
sub
inc
mov
aad
into
jbe
fbstp
mov
mov
sbb
pop
movsb
mov
ficomps
enter
and
sbbl
cmpb
mov
pop
shll
inc
jge
mov
push
cmp
loope
pop
xchg
jmp
dec
sub
push
push
jae
mov
test
adc
popa
mov
sub
sbb
rcrb
out
dec
cltd
test
fucomp
mov
add
loope
add
jns
in
or
mov
test
int
mov
mov
icebp
outsb
and
mov
cmp
dec
xor
fsts
add
mov
movsl
ror
cwtl
shll
jg
or
sub
and
int3
mov
leave
loope
adc
movsl
jne
push
outsl
dec
int
je
push
stos
pop
mov
xor
jp
fmul
lock
in
or
into
cld
and
jns
mov
cmp
dec
xor
and
push
xchg
cltd
jbe
dec
sub
repnz
xchg
mov
cmp
aaa
jmp
or
sbb
outsb
test
push
int
sub
in
rorl
mov
loop
dec
jmp
add
xchg
xor
mov
dec
or
movsb
in
sbb
lret
fucomip
cs
stos
mov
pop
mov
test
imul
adc
mov
mov
dec
add
dec
or
scas
fidivrl
push
iret
mov
push
cmp
frstor
jl
repnz
es
add
xchg
aad
nop
jl
and
jno
mov
jo
scas
leave
insb
test
shl
stc
pop
xchg
dec
sti
cs
and
and
stos
test
sbb
repnz
push
fs
jmp
pop
movsb
cltd
fiaddl
add
mov
adc
sti
aad
insl
stc
call
jge
inc
test
scas
imul
mov
cmc
or
xchg
cmc
cld
fs
cmp
mov
sahf
test
push
add
push
inc
repz
test
iret
fimuls
xorl
sarb
jns
lret
mov
jno
jg
stos
je
pop
mov
enter
or
inc
out
ret
mov
insl
and
ljmp
in
push
dec
cmc
dec
mov
push
lods
cmpsl
stos
lds
imul
push
fmul
or
test
adc
cltd
sbb
rcll
popf
adcb
rolb
cmpsb
jno
neg
jecxz
xchg
add
jmp
ds
jle
call
xchg
and
arpl
mov
imul
sti
rcl
stos
stc
stos
or
add
dec
lret
dec
mov
add
test
push
addb
inc
dec
dec
pop
push
roll
lock
jge
mov
loope
jno
gs
lods
pop
xchg
add
mov
movb
ja
js
loope
enter
and
or
dec
aad
or
lock
and
icebp
pop
aaa
cmc
cmpsl
push
ds
push
push
cwtl
sub
sbb
imul
xchg
cmpb
pop
add
in
cs
mov
or
xchg
icebp
push
xchg
sahf
decb
push
divl
in
rcll
scas
sahf
sbb
mov
or
sbb
fsubrl
loop
cwtd
pushf
jnp
xchg
xor
sub
int
push
jbe
pop
and
fisttpll
aaa
mov
add
mov
push
inc
js
movsl
test
das
push
testb
clc
ret
xor
adc
repz
xchg
push
addr16
sbb
inc
sub
shll
inc
pop
push
push
mov
jl
xor
push
mov
inc
rcll
fwait
xor
push
insl
lret
push
jb
rcrb
jb
mov
cmp
shlb
sbb
pop
inc
lret
ret
jno
fwait
jno
daa
pop
mov
stos
and
or
jb
xor
xchg
outsb
fildl
push
pop
enter
push
mov
lret
out
inc
or
int
pop
jae
adc
scas
jg
rclb
cmp
dec
scas
add
sub
rorb
test
inc
lret
sub
sbb
sub
push
dec
movsb
or
imul
fimuls
xor
shlb
iret
xchg
pop
ds
mov
iret
pop
sub
lahf
sbb
loopne
cmp
scas
sbb
clc
push
std
movsl
scas
pop
int3
mov
xchg
mov
out
and
push
rorl
lret
outsl
push
in
sub
sub
shr
mov
mov
jg
push
pushf
inc
jecxz
bound
mov
loop
mov
popa
int3
arpl
mov
subb
mov
popa
ret
fisubrl
xchg
test
push
notl
inc
xor
out
popa
ja
cmp
and
repnz
iret
pushf
test
xchg
sub
mov
lret
push
add
mov
repnz
mov
push
jne
nop
aaa
xor
xchg
adc
add
ljmp
pop
pop
cld
jl
xchg
cs
stos
roll
cld
and
push
dec
or
sbb
stos
nop
call
out
add
add
imull
xchg
xor
fstpt
cmpsl
push
mov
daa
fistl
aam
gs
and
mov
xchg
inc
test
add
dec
push
in
imul
dec
mov
fwait
lret
lcall
mov
call
push
sub
pop
repnz
or
xchg
mov
xor
std
xor
xlat
push
push
cmpsb
adc
cmpsb
ret
inc
jae
aad
repz
dec
mov
sbbb
mov
cmp
and
push
test
mov
sbb
sub
pop
mov
xor
lcall
push
push
lea
sbbl
scas
mov
insl
test
inc
or
dec
int
jbe
mov
lock
adc
sbb
mov
push
cwtl
ds
or
aas
mov
pop
cmp
push
sub
das
nop
xchg
xlat
or
mov
xlat
sub
xchg
inc
test
jbe
sbb
mov
push
pop
pop
xchg
pop
addr16
hlt
mov
sub
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
or
cmpsb
adc
sub
push
push
inc
or
scas
xor
add
ret
movsl
adc
sbb
ret
fbld
xchg
cs
add
cmpsl
mov
lea
sub
adc
movntps
imull
enter
pop
cmp
outsb
icebp
dec
cmpb
jns
xor
sbb
pop
mov
lret
jp
gs
jle
jge
shlb
cwtl
fiaddl
sub
inc
cmpl
jecxz
cltd
dec
push
inc
leave
iret
sub
lret
fiadds
mov
sahf
test
rcl
and
xchg
pop
fstps
pop
lcall
aad
lahf
or
inc
xchg
jbe
loopne
jno
in
call
jo
mov
loop
pop
rcr
addps
jnp
mov
jmp
aaa
insl
mov
cmp
icebp
fadds
pusha
xor
aaa
mov
rcll
adc
add
test
lret
mov
mov
lds
in
orb
subb
mov
sbb
lcall
in
sub
cmp
inc
rcrb
jb
in
jno
adcb
or
mov
inc
mov
pusha
inc
int
mov
push
test
faddl
fbld
je
bound
outsb
mov
leave
sub
arpl
inc
stc
test
dec
and
sti
insb
mov
outsl
movsl
ljmp
push
mull
jle
dec
out
popa
sarb
push
rol
loop
add
dec
jmp
fnstenv
imul
pusha
arpl
popa
insl
adc
mov
fwait
jo
mov
inc
inc
arpl
mov
pushf
lret
add
pop
xchg
add
divb
lods
cs
mov
js
call
push
add
ret
inc
rclb
sbb
out
cli
sbb
mov
mov
jge
add
sub
jno
cmp
push
in
xchg
ds
sub
sbb
xchg
mov
int3
daa
mov
mov
sbb
or
add
dec
push
hlt
push
pop
mov
mov
mov
adc
cld
dec
adc
repz
push
out
out
inc
mov
and
dec
adc
or
movsb
or
inc
inc
lret
mov
fcomps
xchg
jae
xor
fistps
jno
cmp
adcl
jne
js
pop
push
out
cld
cld
decb
fnstcw
sub
cmp
adc
repz
ret
push
outsl
loopne
xchg
sahf
add
jl
mov
ds
out
std
xchg
iret
jbe
dec
sbbl
fdivl
in
hlt
xchg
xchg
shrl
ret
dec
push
ja
jl
dec
ja
outsb
sub
add
dec
add
adc
imul
dec
lds
sahf
dec
in
mov
frstor
mov
lock
sbb
mov
mov
ret
lods
imul
aas
cmpsl
and
loop
bound
push
or
es
dec
loop
fistl
daa
aad
cmpsl
imul
xchg
fwait
je
and
jns
cltd
inc
add
sti
mov
cmc
jmp
je
addr16
gs
dec
fistps
or
xchg
js
das
gs
cmpsb
enter
out
movsb
push
xlat
mov
or
cmpb
adc
hlt
lock
dec
sti
push
mov
roll
test
out
bnd
pop
mov
mov
mov
inc
iret
jno
outsb
or
xchg
pop
jns
rclb
sub
hlt
ss
test
cwtl
push
ret
sbb
xor
cwtl
inc
add
cmpb
lahf
arpl
fs
les
dec
sub
ficoml
mov
mov
pop
cmp
bndldx
fnop
jmp
adcl
lahf
cli
lods
loopne
jg
scas
adc
push
mov
iret
jbe
mov
or
sub
sbb
imul
mov
mov
xchg
pusha
hlt
add
mov
into
cmp
xlat
shl
insb
mov
dec
or
rcrb
jl
bound
lret
sarb
hlt
mov
or
inc
adc
sub
roll
adc
dec
xlat
nop
outsl
jae
jle
or
dec
iret
popa
je
ret
or
call
mov
cmovae
les
sub
rcll
lock
fistpl
addr16
rclb
mov
sbb
adc
ror
sub
cmp
jl
jne
in
fists
ret
loopne
idiv
and
adc
pop
cli
loop
mov
push
sahf
jmp
lahf
scas
loopne
inc
fs
xor
aad
pop
mov
add
or
jge
cli
dec
imul
aas
jnp
sub
adc
arpl
mov
inc
pop
lahf
or
pop
inc
jnp
mov
pop
repz
mov
lret
sub
shrb
movsb
in
pop
push
test
das
test
inc
daa
cs
arpl
mov
lods
outsb
jnp
cmpsl
loopne
and
dec
push
mov
out
cmc
xchg
pop
aad
mov
in
scas
aam
popa
mov
imul
inc
cli
jbe
fwait
pusha
mov
loope
lret
ds
lods
lods
jg
dec
push
push
and
inc
lcall
out
in
scas
push
out
mov
fidivl
pop
cmp
jae
dec
das
dec
lahf
out
mov
push
bound
and
fnstcw
lds
jns
repz
arpl
sub
mov
push
mov
push
stos
cmpb
and
in
cwtl
push
dec
mov
loop
xchg
and
jecxz
cmp
pop
mov
cmp
cmpb
adc
cmp
fistl
insb
and
push
xor
testb
jae
es
mov
or
dec
outsb
cmp
xor
movsl
add
mov
and
addr16
test
sub
mov
insl
pop
mov
inc
cltd
pop
out
or
ret
dec
sbb
xor
mov
xchg
or
mulb
sub
inc
dec
movsl
jg
js
fwait
cmp
and
mov
es
mov
dec
xchg
cmp
add
xor
cld
pushf
xor
icebp
flds
xor
and
int3
testl
sti
shll
vpmacsww
je
lock
pop
dec
dec
jg
push
or
mov
push
aaa
inc
les
pop
nop
jle
inc
repnz
test
sub
ret
ljmp
and
ja
dec
xchg
cltd
ljmp
or
lret
sub
sbb
mov
xchg
mov
subb
in
push
enter
mov
sbb
mov
dec
rorb
adc
mov
bound
shrl
jns
cld
insl
mov
mov
dec
push
std
xor
mov
mulb
inc
jno
rcrb
inc
and
and
mov
mov
scas
pmulhw
pop
repnz
cmp
lock
cltd
aas
movsl
and
add
or
inc
es
xor
test
push
push
sahf
outsb
data16
sbb
fnstsw
or
scas
dec
in
popf
push
hlt
pop
movd
or
inc
push
cld
xor
push
sbb
or
xor
jg
jbe
push
int3
sbb
push
fisttpl
int3
outsl
add
adc
jne
xchg
cmp
cwtl
test
jl
jmp
push
cltd
sti
mov
push
sub
popa
lret
push
fistpl
or
stos
adc
test
mov
mov
les
movsl
add
mov
repz
add
sbb
fcomip
mov
mov
xor
mov
sbb
cltd
mov
or
shl
xchg
out
loopne
flds
mov
iret
out
shll
jge
outsb
add
out
out
out
sub
sahf
rol
fs
add
icebp
dec
pop
pop
in
shll
sti
insb
into
lods
cmpsl
mov
inc
jnp
pop
js
mov
aam
scas
jle
dec
leave
adc
cmp
xchg
sbb
cmpsl
insb
mov
xchg
sarb
mov
push
dec
mov
mov
dec
sbb
sbb
or
jp
sbb
lds
inc
pushf
das
test
add
lods
sbb
out
jmp
jae
push
lret
out
in
dec
sub
cltd
or
insl
sti
push
repnz
aad
add
jnp
mov
jne
test
jns
inc
insl
add
cwtl
inc
rolb
cmp
add
movsl
sub
ss
stos
js
icebp
mov
xchg
push
rcrb
pop
lcall
mov
frstor
movsb
mov
mov
cmpsb
insb
xchg
aaa
dec
popa
imul
cmpsl
sub
clc
or
cmp
stos
mov
push
ret
dec
fiadds
cmp
and
xchg
pop
xchg
in
aam
stc
jno
mov
ja
dec
and
fdivl
je
repnz
pop
mov
sbb
xor
stos
movsb
add
roll
inc
and
push
and
fidivl
test
add
adc
out
push
mov
cmp
and
int
sub
sar
scas
cmp
inc
bound
adcl
mov
inc
inc
fstl
cmc
shlb
setne
or
jne
inc
out
mov
test
cli
inc
xlat
aam
adc
mov
pop
nop
push
loop
and
fcmovbe
xor
test
popf
addl
into
sbb
stc
in
inc
lret
test
pop
sub
rol
jge
and
imulb
mov
sbb
adc
nop
int3
sbb
mov
popf
cmovns
js
pop
int
decl
push
test
push
incb
sub
add
add
push
and
dec
cli
jb
xchg
nop
cwtl
sbb
mov
scas
cli
adc
xchg
loope
ror
test
jecxz
repz
xchg
lods
xchg
rcl
aaa
jecxz
add
bnd
je
dec
add
pop
fnstcw
ret
pop
xor
hlt
inc
das
xchg
mov
xor
shll
nop
inc
ss
push
dec
mov
and
test
fbstp
sub
xor
jb
dec
cli
mov
into
imul
sbb
outsl
cli
iret
pop
dec
subb
fcmovbe
push
and
das
xchg
dec
dec
faddl
mov
cmp
cltd
inc
mov
pmaxub
xchg
add
mov
int
imul
mov
mov
in
mov
mov
in
mov
jl
jge
xchg
sbb
mov
arpl
sbb
ror
loopne
js
fisubs
adc
into
xchg
inc
mov
aam
lcall
mov
dec
mov
sub
lea
clc
mov
fcomip
dec
mov
jge
inc
pop
sbb
movsb
mov
pusha
pop
mov
push
inc
ljmp
push
add
pop
cmp
dec
ljmp
mov
cld
mov
call
scas
ret
jo
in
mov
pop
push
adc
cld
cmpsl
int3
xchg
movsl
jecxz
xlat
and
mov
sbb
add
push
pop
out
int3
aam
out
lcall
xor
je
add
insl
pop
pop
enter
call
pop
pusha
outsl
fists
lock
mov
pop
mov
xchg
pop
jns
jg
cltd
dec
push
adc
and
sub
mov
cli
jmp
mov
les
push
pop
in
inc
mov
mov
int3
dec
daa
cmpb
mov
test
mov
movsl
inc
fcoms
mov
dec
aam
and
mov
inc
test
pop
testb
xchg
xor
das
insl
lahf
pop
pop
mov
addr16
push
fdivs
jle
inc
inc
mov
dec
cmp
add
or
in
push
inc
push
insb
movsl
or
add
or
push
dec
dec
inc
inc
aaa
leave
mov
stos
fistps
std
pop
sub
xchg
loop
dec
aad
ds
in
jle
outsl
repnz
vpcmpgtb
pop
mov
push
jl
mov
nop
push
ret
and
push
inc
push
test
jo
sti
mov
mov
test
adc
adc
pop
inc
sbb
lret
and
lods
dec
push
addl
xchg
leave
cmp
jno
into
pop
and
add
cmp
test
push
icebp
lret
faddl
pop
dec
push
pop
pop
sub
xchg
push
xor
push
fisttpl
subb
leave
jg
jmp
sub
mov
arpl
pushf
push
push
cltd
pusha
iret
scas
or
roll
unpcklps
nop
xor
or
mov
rorb
dec
cltd
xchg
dec
repnz
ret
sbb
push
mov
jp,pt
jmp
xor
mov
aad
out
or
lret
aas
or
jae
lret
aas
add
pop
pop
push
and
shlb
je
sub
add
imul
repz
mov
adc
and
fwait
push
pop
sbb
inc
mov
jg
push
fadds
mov
out
cs
inc
sub
ffree
lret
out
sub
inc
adc
pop
push
mov
adc
dec
mov
cmp
push
out
mov
repnz
shr
aas
or
inc
daa
inc
jns
sub
pushf
aaa
mov
or
mov
pop
jb
out
mov
dec
or
push
aam
sub
shrb
or
into
mov
cmp
inc
outsl
sbb
adc
pop
add
scas
or
stc
mov
mov
sbb
jne
dec
movsb
pop
adc
test
outsb
mov
addr16
rolb
andb
std
imul
movsl
jns
xor
fiaddl
insb
ret
sub
xchg
std
out
sub
outsl
mov
inc
and
pop
and
jge
mov
mov
movsl
arpl
xchg
jg
xchg
icebp
and
jge
sub
pop
lock
aad
pop
loop
sti
popf
jae
rclb
into
rol
and
cwtl
pop
icebp
lock
xchg
mov
sub
shr
cs
add
mov
arpl
sub
pusha
mov
out
nop
stc
addr16
cmp
sbb
iret
test
pop
dec
adc
fwait
mov
stc
jae
pop
push
jl
sub
inc
mov
ret
repz
push
sbb
xor
cmp
and
xor
outsb
stos
inc
pop
in
fwait
jne
neg
inc
pop
xchg
xchg
ljmp
xor
les
mov
sahf
stc
inc
out
inc
push
push
pop
fldt
ror
shlb
les
pop
lods
push
movsb
lahf
setns
stos
cmp
and
pop
cld
mov
cwtl
dec
pop
int3
std
sub
xchg
and
loopne
movsb
aad
movsb
cmc
pop
cmp
mov
nop
fsub
ficoms
lock
mov
mov
lahf
inc
cmp
push
sbb
adc
jo
das
push
sbb
insb
cmp
dec
mov
loop
das
stos
inc
mov
ljmp
rcll
loop
movsb
xchg
jecxz
insl
mov
xchg
enter
fmull
je
xchg
loope
scas
pop
lret
arpl
aas
out
popw
jmp
and
inc
imul
js
xchg
stc
das
adcb
cmp
out
faddl
leave
aam
push
test
cli
cmp
jo
fldl
jno
and
insl
fadd
stc
xchg
test
hlt
lods
sbb
push
les
mov
sbbb
xor
cs
push
mov
lcall
test
or
movl
xor
push
inc
xchg
cmp
pop
xchg
pop
pop
ds
sbb
es
out
pusha
xor
test
mov
int3
data16
mov
leave
and
cmp
mov
mov
lret
mov
xchg
lret
push
jne
aaa
adc
jle
mov
add
adc
pop
xchg
aam
and
push
movsl
shrb
mov
inc
pusha
xor
push
cs
jns
xchg
adc
stc
cwtl
repz
adc
or
jae
movsl
insl
fs
rclb
and
jp
mov
lret
jl
adc
fistps
enter
and
mov
insb
push
jb
mov
ja
ret
gs
xchg
pop
es
jbe
outsl
or
jno
pop
sbb
testb
sti
xor
out
fcomp
std
dec
pop
outsb
cmp
jecxz
or
adc
iret
scas
imul
dec
test
mov
pusha
sbbb
xchg
mov
mov
bound
sahf
pop
enter
dec
jmp
and
mov
sub
push
xor
jns
in
in
mov
pop
pop
lods
lods
sar
std
push
xor
xchg
or
rcrb
xchg
pop
mov
int
call
negb
leave
mov
pusha
data16
repz
dec
add
jge
mov
das
jl
rcr
nop
int
imul
cmp
inc
rorl
lods
jns
out
mov
push
cmp
or
push
mov
and
sarl
add
xchg
xchg
call
add
push
cmp
xlat
sbb
jno
rcl
push
cwtl
leave
hlt
out
inc
lahf
jge
aaa
jns
test
cld
int
das
adc
test
jbe
xchg
popa
fwait
ret
into
in
fisubl
sbb
mov
invd
test
imul
xor
dec
inc
scas
push
sbb
sbb
sub
add
inc
fisubrs
xchg
jl
dec
std
cmpb
inc
pop
sbb
pop
sub
loopne
outsb
add
add
movsb
xor
lret
pop
rcr
fimull
loope
adc
inc
clc
pop
das
imul
sub
lock
xor
inc
push
cmp
mov
sbb
dec
and
fmull
mov
rcll
data16
scas
in
andb
pop
jmp
scas
adc
push
aas
test
dec
jmp
rclb
add
mov
adc
leave
stos
xor
xor
cmpsl
movsb
popa
test
sahf
addr16
das
ja
and
cwtl
mov
jno
leave
sub
das
pusha
adc
mov
sbb
dec
fcompl
push
movsb
js
mov
popf
xchg
pop
call
sbb
int3
rcrb
push
in
mov
stos
cmp
xchg
or
pop
sahf
pop
jo
cmpsl
adc
jmp
outsl
aad
xlat
pop
dec
lods
mov
pop
pop
pop
movsl
cwtl
xchg
cmc
cmp
test
mov
bound
mov
mov
es
bound
std
stc
les
arpl
jbe
and
lret
mov
pop
test
cmp
cmp
fistps
push
test
mov
or
inc
xchg
pop
stc
lods
cld
pop
imul
inc
test
shll
push
aad
mov
fnclex
cmpsb
inc
dec
mov
int3
ljmp
scas
scas
test
imul
test
xchg
xchg
call
mov
jnp
xor
movsl
ja
and
js
mov
xchg
sbb
in
popa
out
xchg
jb
or
popf
mov
pop
ljmp
gs
mov
cmc
dec
pushf
dec
divl
dec
xchg
or
shll
int3
sbb
adc
cld
pop
cmp
das
xchg
push
or
mov
sbb
mov
mov
cs
xchg
sub
mov
mov
loop
mov
out
mov
xchg
outsb
scas
loopne
sahf
jne
sti
in
cld
mov
js
fisubl
mov
stos
pop
push
mov
cmp
mov
push
xor
cmp
lret
cs
loope
shl
movsl
mov
inc
pop
test
jne
xchg
and
hlt
rcrb
mov
xor
ja
ror
cld
xor
scas
xlat
jb
call
ret
and
xchg
fimuls
xor
jne
pop
inc
mov
out
and
jo
and
jo
jecxz
lds
and
adc
dec
popa
xchg
inc
dec
lock
sbb
pusha
pop
gs
ja
inc
pop
cli
xchg
add
fidivs
test
xchg
out
xchg
inc
inc
out
xchg
push
decb
rorl
pusha
lret
scas
in
jge
mov
ror
push
ja
pop
sub
rorl
into
mov
cmp
mov
pop
ret
jb
mov
push
add
jl
mov
popf
scas
mov
leave
pop
cltd
pop
andb
dec
out
inc
push
mov
pop
inc
test
in
movl
add
mov
int3
push
sub
xchg
xor
outsl
mov
xchg
cmc
jge
mov
and
xchg
mov
cmc
enter
popa
rcl
sub
pop
xor
push
clc
adc
cltd
jmp
inc
jb
jge
fs
and
idivb
dec
jo
push
xor
cwtl
mov
std
fcompl
mov
push
stos
push
and
mov
daa
addr16
and
pushf
adc
enter
lods
push
out
sub
and
sub
rcll
dec
leave
jmp
and
cmpl
rolb
pop
mov
in
sarb
add
push
inc
push
mov
jae
ja
lea
xchg
aas
jg
mov
inc
sbb
and
jge
ret
enter
ja
loope,pt
xor
insl
mov
adc
jb
test
test
dec
in
mov
dec
jb
movsb
inc
sbbb
in
inc
dec
outsb
push
push
sahf
int3
and
sub
movsb
es
lcall
mov
cmp
ds
imul
insl
mov
xchg
jle
lods
pop
jnp
std
jge
enter
in
pusha
xor
jmp
jg
push
pop
push
push
cmp
sub
fdivrl
adc
nop
fs
adc
ja
repz
mov
push
push
jb
mov
push
iret
inc
stc
mov
or
inc
popa
test
xchg
cmp
scas
test
jl
mov
jle
clc
mov
cmp
inc
test
mov
cwtl
and
data16
push
mov
lahf
lcall
in
add
addr16
pushf
std
pop
lret
into
loope
test
xchg
sbb
and
push
mov
jmp
sub
cmc
fildll
jp
sbb
fnstenv
mov
mov
in
fstpl
cmpsl
je
lock
mov
movsl
bnd
in
adc
pop
adc
add
sub
xor
std
ret
lea
mov
xchg
ret
pop
in
int
cmp
jo
sahf
adc
in
xchg
lret
test
inc
sbb
sub
jmp
or
insl
ljmp
dec
js
sub
and
psubsb
fwait
mov
out
popf
mov
sub
xor
dec
cwtl
ret
mov
push
inc
mov
outsl
jmp
or
cli
ret
aam
jmp
inc
adc
mov
mov
jno
out
push
add
fs
mov
or
outsl
mov
inc
fstps
pop
jne
enter
pop
fidivrl
xchg
jecxz
mov
decl
rorl
std
jb
mov
xor
dec
imul
jg
and
stos
mov
cmp
ja
loop
ss
and
je
aas
pop
mov
scas
sub
push
call
or
pop
imul
mov
hlt
dec
add
repz
add
xchg
push
adc
pextrw
popf
das
fisubl
dec
clc
jno
cmp
or
mov
clc
add
mov
lcall
jbe
insl
pop
sbb
std
les
pop
in
pop
scas
xor
add
pop
xchg
icebp
addb
mov
jno
lcall
in
cmpsl
fsubrl
in
cmp
and
jle
push
cwtl
scas
cmpsb
insb
add
fwait
pusha
int3
fldlg2
add
cmp
lock
bound
mov
inc
add
xor
mov
popa
pop
sub
push
test
jecxz
sub
lret
ret
mov
jg
hlt
out
pop
fstl
xchg
test
insb
pop
add
sbb
mov
imul
mov
mov
psubsw
ja
sbb
xchg
in
xchg
scas
pushf
dec
popf
adc
xchg
cltd
movsl
loop
ljmp
icebp
jno
das
pop
pop
sub
mov
jns
pop
jo
aaa
inc
fisubrs
push
inc
data16
jne
pop
ror
pop
jmp
and
dec
mov
decl
mov
aaa
or
paddq
cmc
in
or
cmp
pop
sbb
cs
fidivs
push
inc
movsl
mov
and
jo
mov
jmp
les
arpl
js
jl
add
adc
test
push
popf
clc
int
pop
cld
cmp
jo
jle
mov
jbe
lods
xor
or
xchg
ljmp
xchg
xchg
and
ret
mov
adc
cli
enter
negb
push
icebp
xchg
add
mov
adc
push
lds
fnstcw
les
insb
mov
rcr
push
jb
mov
adc
inc
pop
fldenv
inc
jg
js
cmpsl
jo
lock
aam
xchg
sbb
fs
pop
jno
push
pop
pushl
popf
sub
pop
pop
rorl
pop
mov
add
scas
insb
inc
sahf
jbe
test
addl
adc
mov
inc
lods
rcl
mov
out
sbb
dec
stc
jo
adc
lahf
adc
xchg
arpl
outsb
dec
dec
add
aam
inc
in
dec
loope
mov
push
jb
lds
fiadds
shll
iret
inc
or
mov
lret
daa
test
or
xor
insl
mov
mov
push
xchg
insl
movsl
in
pop
mov
push
push
xchg
sbb
cmp
xor
mov
icebp
call
mov
arpl
insl
aas
dec
mov
scas
or
dec
cmpsl
xchg
push
idivb
jae
call
outsb
xor
into
and
aaa
cmp
mov
orl
je
lret
fidivs
jbe
xchg
outsl
cmpsl
repnz
mov
xchg
out
mov
jnp
inc
lods
stos
ss
jns
addr16
cwtl
movsb
push
xor
push
mov
out
push
repnz
loop
cmp
ja
je
pusha
fiaddl
sub
das
mov
mov
sbb
iret
out
iret
es
aaa
or
and
aad
call
mov
insb
mov
ret
dec
add
scas
lods
sti
call
jbe
or
push
mov
iret
movsb
out
popa
xchg
mov
ds
dec
scas
push
ret
dec
mov
or
mov
lods
loopne
or
xor
lret
pop
lahf
xor
jo
jmp
add
sbb
je
rcll
ret
in
cs
mov
sub
lods
dec
push
jmp
popf
in
pop
mov
das
adc
in
out
in
sbb
xchg
cmp
xchg
pop
jecxz
xchg
in
mov
enter
adc
sbb
xor
or
repnz
add
adc
mov
push
xorl
mov
cli
add
shrb
arpl
pop
mov
lcall
sahf
mov
insb
imul
mov
inc
arpl
sub
xor
sarb
out
dec
jmp
jns
gs
sub
pop
sbb
cwtl
mov
out
mov
sti
popa
inc
or
xlat
jmp
push
inc
mov
jnp
push
push
xlat
sbb
icebp
push
adc
pop
ss
in
dec
loope
ss
pop
cmpsb
call
sbb
pop
outsb
mov
lret
jecxz
in
mov
xchg
adc
and
bound
cltd
bound
test
mov
or
mov
pusha
or
mov
pop
dec
mov
or
fldenv
jo
fs
movsb
imul
inc
fiaddl
leave
pop
pop
cmp
or
add
cmp
mov
sub
or
mov
sarl
gs
hlt
pop
ret
cmp
dec
inc
sbb
test
push
jns
pushf
lods
lds
in
xchg
loope
cmpsb
mov
sub
test
inc
insl
push
int
adc
adc
jle
insl
in
mov
out
cmp
ss
adc
mov
push
and
scas
rorb
mov
inc
sbb
roll
and
xor
jo
pop
arpl
sbb
lea
dec
dec
sub
sbb
mov
xchg
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
js
loope
rcl
enter
hlt
test
adc
sub
je
xchg
lods
dec
lret
inc
add
sub
loope
or
pop
sub
shl
mov
andl
push
xchg
loopne
xchg
fcmovne
std
pop
scas
mov
insl
fs
mov
push
lret
pusha
nop
jbe
repz
or
mov
scas
addl
mov
xorl
cltd
push
out
inc
bswap
adc
cmc
jo
xchg
aaa
pusha
lock
jp
in
adc
dec
test
dec
sbb
sub
ret
sbb
and
pop
popf
dec
jo
adcb
or
call
pushf
xchg
movsb
stos
or
xor
sub
xor
add
xchg
imul
push
push
mov
std
xchg
xor
dec
rcll
outsb
stos
dec
xchg
popa
pop
sub
lcall
inc
xchg
icebp
push
sub
fcompl
dec
clc
dec
cli
sbb
pop
or
outsb
cmp
mov
adc
push
pop
mov
xchg
shrb
ret
test
rorl
mov
imul
icebp
pop
push
mov
and
jl
aas
inc
add
out
es
insb
xchg
aaa
xchg
cmp
inc
addr16
cwtl
add
cwtl
inc
xor
lods
or
xchg
mov
and
pop
in
push
push
dec
inc
int3
inc
xchg
jle
xchg
lret
int3
fidivrs
sbb
and
aam
jno
les
mov
sbb
dec
into
mov
aad
arpl
test
xchg
dec
pop
mov
xchg
dec
stc
mov
mov
sbbb
lea
jg
psrlw
fimuls
adc
in
shlb
fsubrs
pop
xor
lcall
xchg
jb
out
cmp
mov
mov
jnp
rorl
mov
mov
sub
stos
mov
cmp
pop
mov
cmp
xchg
mov
fimuls
xor
jmp
clc
jno
push
add
cli
push
mov
lea
push
adc
mov
dec
jae
in
push
mov
pop
sbb
jecxz
cwtl
push
fwait
jns
pop
sahf
inc
int3
cmp
push
jae
negl
and
test
push
sub
lock
andb
xchg
lahf
add
out
and
mov
ret
in
test
movsb
xor
cmpsl
scas
push
in
lret
in
lcall
test
sub
lds
nop
xchg
push
jns
pop
cmp
or
adc
sub
sub
sub
add
imul
pop
inc
icebp
and
movsbl
mov
imull
xorb
sti
mov
orb
das
adc
int3
data16
clc
mov
nop
mov
cmp
subl
mov
push
pop
mov
or
and
fcmove
enter
xchg
jno
push
test
lock
in
dec
xor
push
bound
je
mov
xor
call
xor
mov
push
push
push
mov
stc
or
xor
cmp
sbb
mov
bt
dec
subl
cmp
mov
sub
push
sub
jbe
movsl
cmp
in
xchg
mov
cltd
xor
or
push
jle
jecxz
add
ja
sbb
adc
sub
enter
test
push
out
int
jle
fiaddl
rorb
js
data16
icebp
lret
setae
push
cmp
popf
insb
dec
fwait
dec
mov
repnz
push
adc
fisubrl
sahf
add
shl
xchg
cmpsl
dec
je
insl
in
movsl
ljmp
mov
mov
dec
roll
nop
and
pop
dec
aas
lret
xor
inc
je
adc
mov
cltd
in
subb
lods
push
xor
sbb
inc
into
dec
shll
jp
sbb
dec
je
aaa
test
adc
aad
add
pop
out
jp
jmp
inc
xchg
psubusw
mov
cs
or
mov
std
mov
xchg
ror
loop
dec
mov
cmp
cs
jbe
jnp
xor
or
popf
inc
xlat
popf
int3
out
int
xchg
push
in
stos
imul
xchg
sbb
addr16
jmp
dec
icebp
lahf
loop
jle
sti
arpl
mov
pop
pushf
jge
mov
add
movsl
fidivl
test
dec
lea
adc
scas
mov
sbb
cli
jno
add
data16
rcr
fistl
mov
shl
arpl
push
iret
mov
sbb
mov
pop
add
push
or
mov
xchg
or
push
rcll
cld
sarb
push
into
and
rolw
int
hlt
inc
test
cmp
loopne
es
mov
pop
aad
sbb
ds
inc
js
sbb
int3
dec
loop,pn
loope
cmp
aam
cmc
push
in
cld
adc
shll
lods
push
js
subb
pop
cmc
in
sarl
cmp
pop
rclb
push
rclb
insb
orb
dec
in
ret
dec
mov
inc
adc
add
fisttps
add
fistps
dec
add
jl
or
inc
es
cltd
mov
or
jmp
cmp
gs
mov
sbb
add
or
xchg
repz
mov
fs
das
adc
mov
cmp
loop
aas
and
je
sbb
lea
sbb
adc
int3
sahf
test
jge
subl
ret
sub
ds
daa
dec
nop
pop
lcall
sbb
add
mov
cmpsl
call
mov
or
sub
mov
sbb
pop
pop
rorb
sbb
mov
cltd
mov
js
lods
adc
das
bound
daa
pop
js
sbb
ljmp
adc
ss
xchg
mov
bound
pop
out
gs
js
push
adc
and
push
aas
inc
mov
and
movsl
xor
jle
lret
fs
push
mov
cwtl
sbb
insl
add
cmp
adc
popa
mov
and
add
daa
sbb
or
or
hlt
cmc
incb
cwtl
movsb
push
inc
push
inc
xchg
int3
pushf
adc
jns
mov
mov
lds
or
je
cmp
dec
xchg
push
clc
xor
pop
popf
lret
mov
xor
sub
xor
bound
andb
stc
xchg
and
pop
les
jbe
dec
mov
addr16
cli
loopne
pop
dec
out
mov
sbb
mov
adc
aaa
pop
dec
pusha
lea
push
add
cli
jl
je
lcall
out
rcll
lret
or
sub
and
test
xchg
fisubrs
jp
daa
sub
lea
aaa
mov
in
dec
ret
jge
enter
ret
xorb
mov
pop
stc
ficomps
stos
sub
adc
adcl
lea
test
lahf
adc
mov
sbb
aas
outsb
pop
pop
sub
imull
cmp
loopne
pop
cmp
mov
test
cmc
mov
add
das
jg
roll
mov
out
mov
fxch
imul
call
ljmp
mov
loop
jecxz
lahf
in
test
cltd
out
xchg
dec
xor
mov
out
out
loop
ret
ss
xor
dec
add
sbb
cli
and
add
xlat
cli
stc
or
subb
push
pop
lods
sub
loopne
dec
fwait
mov
call
lock
push
lods
jp
cmpsb
sbb
add
in
sbb
or
fildll
push
shlb
js
out
push
xchg
add
mov
adc
xor
add
adc
mov
pop
sbb
mov
je
sbb
les
les
outsb
test
or
adc
xchg
xchg
xor
js
jl
dec
jns
xor
jecxz
xchg
lods
sub
das
xorl
inc
inc
pop
mov
dec
push
add
stos
pop
lret
ficoml
xor
out
adc
adc
es
mov
imul
js
dec
pop
xor
mov
das
popa
rol
cltd
fidivrs
lods
adc
scas
xchg
cli
js
jl
test
out
aad
push
fimuls
aas
or
dec
pop
dec
jge
scas
sbb
mov
js
pop
stos
xchg
movsb
aas
test
int3
xor
mov
out
xor
cmp
mov
pop
pop
xchg
jb
int
lods
jmp
mov
add
mov
push
lea
jl
jl
lock
and
movsb
sub
test
mov
dec
cmp
ljmp
cmp
mov
or
mov
mov
out
mov
bound
test
cmp
adc
inc
mov
loop
lcall
mov
repnz
shrb
or
pop
dec
pop
add
pop
jns
mov
jno
and
cmp
gs
inc
pusha
mov
lahf
inc
push
or
scas
and
cltd
or
mov
dec
mov
insl
jl
mov
inc
xchg
repnz
cmp
mov
pusha
loope
loope
aam
add
repnz
adc
dec
fcomps
fldcw
jb
add
mov
dec
cld
adc
pushf
jle
addb
stos
int
enter
pop
dec
pop
jbe
repz
mov
or
cmp
lret
push
nop
loop
jo
cmp
push
lret
sub
fiadds
add
rcll
icebp
stc
cli
aaa
fnsave
dec
cld
pushl
ss
divl
cmpsb
ret
out
cmp
and
adc
lcall
adc
mov
xor
jle
call
sbb
jbe
lea
dec
insb
jmp
fnstenv
lea
adc
andl
mov
aad
push
clc
mov
scas
sbb
fidivl
lods
mov
dec
jge
or
out
dec
std
sub
lea
mov
lea
cli
cli
adc
ja
outsb
sbbb
gs
ds
aad
fists
int3
push
hlt
xchg
mov
leave
jmp
mov
lret
loope
cmc
outsb
fstl
dec
mov
sub
sub
jge
or
jae
inc
push
ja
xchg
mov
nop
loopne
js
test
lahf
imul
arpl
xor
fldcw
inc
mov
fdivl
cmpsb
lds
mov
push
lret
add
mov
dec
bound
xchg
sbb
mov
imul
adc
mov
int3
lea
mov
int
adc
lods
out
push
dec
mov
lds
inc
clc
sbb
lds
jne
sub
and
push
add
xlat
mov
pusha
movsl
dec
push
daa
push
testl
adc
fcoms
mov
adc
mov
rcll
sub
aaa
dec
sub
repz
lahf
pop
mov
push
lahf
fmuls
and
jnp
insb
lds
xchg
hlt
mov
mov
push
cmp
jns
addr16
inc
pop
dec
adc
lret
popa
dec
stc
sub
divl
xchg
insb
sub
popa
fcomp
xor
inc
jo
movsl
ret
fcmovnb
fdiv
fmuls
lods
stc
cli
sti
loop
data16
and
adc
jb
pop
dec
ljmp
inc
insb
fimull
jmp
repz
jg
je
mov
notl
xor
dec
xor
xlat
cmp
push
shl
jle
adc
cmpsb
add
dec
push
or
insb
insl
and
ret
mov
add
adc
pop
lahf
addr16
dec
popa
mov
ret
adcb
push
sbb
mov
or
pop
push
dec
xor
shl
jbe
lcallw
xor
lods
jecxz
inc
aas
pushf
add
sbb
mov
xlat
repnz
aas
sahf
call
dec
or
jo
rcll
sub
iret
fucomp
inc
test
stos
cmc
jae
add
and
inc
ret
notl
pop
rclb
loop
pushf
pop
fisttpl
cmp
mov
les
mov
ds
stos
xchg
jge
mov
push
movsl
dec
cmp
push
outsb
xrelease
lds
cmp
mov
pop
orb
add
mov
std
lret
or
shrd
in
jbe
mov
sbb
sti
je
lret
stos
ja
sbb
pop
mov
in
jno
adc
and
inc
or
out
pop
jo
adc
mov
andl
loopne
adc
fwait
dec
cvtpi2ps
dec
dec
lock
dec
or
das
xchg
sbb
scas
jne
insl
and
adc
arpl
fs
jg
add
xor
insl
push
test
or
inc
and
ss
mov
sub
scas
scas
int3
loopne
push
adc
pusha
mov
mov
sbb
or
stos
xor
push
int3
adc
outsb
nop
push
adc
out
popf
inc
pushf
lock
cmp
add
ror
mov
fwait
cmp
cmp
lcall
dec
rcr
cwtl
add
jne
mov
xor
jae
cmp
adc
and
sbb
in
mov
push
imul
pop
dec
loopne
inc
mov
mov
cltd
decl
jbe
out
ret
lods
inc
into
sbb
jge
lods
mov
lret
jno
test
int
mov
mov
cmc
push
dec
aad
cs
mov
xchg
add
ret
arpl
mov
enter
lcall
push
das
cmp
push
jbe
pusha
les
inc
hlt
insb
daa
loope
js
mov
sub
and
je
mov
add
mov
xor
ds
sbb
stc
pop
insb
shlb
adc
mov
fdivr
lcall
push
lret
outsb
scas
mov
stos
data16
dec
push
test
sbb
outsl
imulb
mov
test
cmc
loope
jne
std
lcall
add
sbb
das
ss
loop
fdiv
test
out
cmp
movsb
rolb
scas
inc
adc
daa
mov
and
xchg
lret
jbe
xchg
out
adc
ja
outsl
xchg
es
xor
stos
stos
jle
pusha
pop
jb
jl
xchg
das
out
mov
xchg
inc
hlt
adc
mov
cld
push
dec
mov
cmpsb
mov
test
push
mov
or
or
dec
xor
mov
lahf
nop
movsl
jae
add
in
out
mov
filds
imul
pop
mov
dec
xchg
push
add
jge
sar
push
insb
cld
jmp
jl
ljmp
ja
mov
aad
aaa
mov
sub
div
xor
call
nop
dec
sub
jb
lods
testl
call
or
push
mov
je
inc
dec
and
add
out
in
xor
ret
mov
leave
pcmpeqb
fsubl
sbb
ja
sar
arpl
es
xor
lods
ss
jne
fs
bound
mov
test
cmp
sub
pop
sbb
cltd
adc
adc
inc
mov
jae
out
and
pop
xor
jbe
and
out
rcrl
test
ljmp
loope
and
adc
mov
push
jmp
jno
mov
mov
outsb
sbb
mov
repnz
push
push
test
jle
xor
je
mov
sarl
mov
mov
fildl
frstor
mov
fwait
dec
lock
cmp
fimull
pop
mov
cmpsb
int3
mov
mov
add
push
test
or
jle
outsl
aad
in
jmp
nop
jl
cs
call
mov
push
xchg
fildl
jg
out
mov
push
aaa
jns
sbb
outsl
dec
and
and
lock
jns
repz
sub
push
mov
addr16
fcmovnu
cs
mov
cmpsl
adc
cmpb
adc
ret
lcall
adc
int
push
in
and
or
cmc
int
es
jmp
addr16
jmp
shll
pop
pop
jle
lds
ss
or
into
mov
negb
push
dec
mov
sarb
mov
out
jns
and
popf
aam
sbb
imul
or
sbb
add
pop
in
lret
xor
sbb
daa
adc
pop
loop
push
push
ror
mov
xchg
js
in
ret
daa
jmp
hlt
sub
aaa
addr16
cmpsb
mov
clc
mov
daa
add
mov
jb
jmp
addb
stc
cmp
fucomp
inc
fisubl
sbb
mov
rcrb
dec
aas
pusha
rcrl
icebp
loopne
jno
repz
xlat
dec
sub
sbb
dec
or
jbe
ds
mov
jb
lahf
loope
mov
push
pop
pop
and
and
pop
pop
enter
jb
sbb
xor
cli
mov
stos
mov
out
add
neg
dec
test
dec
leave
adc
mov
cmc
ds
push
sbb
inc
mov
cmpsb
popa
sbb
imul
adc
aaa
mov
enter
sahf
and
xchg
js
ret
or
dec
jbe
adc
scas
push
data16
inc
and
jbe
cld
fmull
jmp
mov
sarl
andb
pop
repnz
test
fcoms
push
hlt
mov
popf
add
popf
sub
gs
mov
pop
std
or
xchg
push
mov
iret
cmp
jno
fbstp
adc
inc
xchg
iret
jmp
je
dec
test
push
push
pop
insl
inc
test
test
ds
push
movsl
push
sar
dec
adc
mov
mov
sbb
pusha
mov
mov
mov
mov
loope
xchg
sub
mov
pop
and
ss
fs
scas
xor
lods
add
xor
pop
mov
dec
fwait
or
pop
loopne
insl
in
into
jle
out
frstor
pop
in
nop
insl
stos
pop
fwait
push
xchg
dec
inc
adc
cmpsl
pop
out
cmp
or
int
xor
scas
aam
out
add
mov
xchg
test
arpl
jl
add
xchg
sbb
ja
jmp
icebp
xchg
shlb
in
lahf
cli
xchg
push
lcall
mov
add
xor
cli
fildl
stos
fcmovnb
std
es
push
insb
cmp
add
test
sub
xchg
adc
or
sbb
clc
dec
outsl
jp
cmp
out
cmpsl
cmp
dec
iret
push
inc
inc
cmp
iret
icebp
pop
and
enter
test
sub
mov
push
out
xor
mov
mov
sbb
test
cmp
mov
mov
pop
jmp
mov
push
cmpsb
pop
sub
lret
das
sub
mul
pusha
and
insb
sub
push
test
sbb
in
fnstenv
test
lock
inc
cmp
paddb
imul
fisubs
dec
add
jle
test
mov
or
mov
xchg
clc
push
xchg
jo
adc
cld
sub
cltd
std
mov
and
scas
cmp
push
xor
inc
in
cmpsl
mov
lock
cmp
jbe
push
sub
adc
std
stos
dec
pop
cltd
push
cmp
mov
pop
aam
loope
scas
clc
insl
shrb
fadd
xchg
mov
push
xchg
mov
enter
xchg
push
sbb
pop
push
sbb
jno
addb
dec
sbb
mov
leave
clc
mov
je
inc
cld
inc
ret
dec
enterw
push
outsl
js
fistl
mov
mov
shlb
gs
test
jg
push
cmp
sbb
cmp
scas
fs
xchg
mov
shl
out
lock
fs
enter
pop
xor
sbb
push
pop
iret
int3
lahf
popf
fs
insl
call
dec
pop
sbb
mov
mov
in
and
out
sub
mov
mov
mov
pop
or
ficoms
cmpsb
inc
add
dec
into
pop
hlt
inc
and
jne
ja
pop
ret
lahf
jge
cmpl
jno
mov
pop
popf
dec
inc
inc
aam
sbbl
orl
loopne
mov
xchg
in
xchg
fnsave
push
xchg
pop
inc
or
dec
nop
arpl
ja
in
insl
push
jnp
test
dec
and
popf
lahf
jecxz
insl
mov
cmp
stos
rep
iret
test
jns
inc
cmp
in
or
mov
sub
inc
mov
sub
iret
jnp
or
sub
sbb
cli
mov
popf
adcl
mov
jo
ljmp
nop
ds
mov
lds
mov
jecxz
js
je
leave
popf
bt
daa
lods
std
lahf
pop
ret
inc
or
shl
test
xor
pop
mov
cmp
pop
shlb
sahf
xor
mov
xchg
push
nop
cmp
jb
fcoml
shll
and
inc
xchg
gs
xor
inc
rclb
out
cmp
addr16
mov
cmp
sbb
lods
es
inc
pusha
roll
rolb
mov
fwait
mov
sbb
fcoms
xchg
mov
imull
sub
sbb
sub
sbbb
jl
adc
rolb
mov
adc
adc
mov
in
push
jg
mov
xchg
xor
push
pop
xlat
mov
adc
int
mov
aad
mov
xchg
sbb
out
out
xchg
and
cmp
inc
sub
push
inc
jnp
jne
adc
jns
dec
fistl
push
out
sbb
popa
inc
popf
mov
idivl
mov
orl
cmp
int3
adc
adcl
lret
fwait
or
in
inc
arpl
mov
fwait
mov
adc
jne
xorb
sbb
sbb
jo
into
push
cltd
js
outsb
push
test
xor
inc
jge
jle
dec
lret
nop
popa
xchg
int3
enter
in
leave
cmp
xor
scas
sub
pop
lret
xchg
dec
les
nop
mov
mov
xor
lock
jg
arpl
jmp
pusha
adc
mov
loope
xchg
pop
out
add
popf
rcrb
fs
ret
jae
cmp
adc
add
mov
cmc
ret
or
push
mov
pop
xchg
pop
add
jo
jecxz
imul
cmpsl
or
cltd
std
push
je
movsl
or
leave
aad
das
and
dec
insl
mov
dec
aad
lods
je
sub
out
pop
sub
repnz
cmp
int3
cmp
lds
pop
vpunpcklqdq
jb
mov
nop
ljmp
mov
and
sbb
loop
mov
popf
xlat
movsb
push
push
or
test
dec
jp
and
adc
cmc
push
decl
xchg
push
mov
fcmovb
test
fs
mov
lock
cmpsl
sub
push
or
jae
fsubs
outsb
or
popa
mov
scas
mov
jle
sub
xor
pushl
pushf
les
ret
push
or
scas
movlps
ss
add
repnz
xlat
adc
cmp
sub
out
mov
mov
cwtl
fs
sbb
and
cmpsb
jno
pop
mov
movsl
stc
js
mov
call
push
jne
mov
rorl
clc
fsubp
std
nop
add
dec
or
lock
or
loopne
iret
fisttps
push
push
dec
xor
outsl
inc
xchg
xor
sbb
pop
ss
xorl
dec
nop
push
xchg
jge
sub
stos
imul
repnz
mov
in
and
cmp
aas
lcall
push
jp
cmc
sbb
sahf
dec
jnp
xor
lret
and
je
test
daa
push
mov
int
pop
pop
jp
push
jl
sub
add
movsb
frstor
mov
loop
enter
mov
mov
adc
fisttpll
inc
cs
and
icebp
addr16
and
or
or
shll
rorl
lock
scas
sbb
mov
out
pop
mov
xor
cwtl
and
mov
or
pop
inc
leave
mov
xchg
add
mov
or
in
mov
outsb
ret
sbb
in
mov
aad
arpl
popa
or
sub
dec
dec
jge
outsb
shrl
mov
jp
movsb
insl
pop
lods
add
sub
pop
js
test
pop
stc
push
xchg
shl
add
bound
out
cld
mov
out
inc
loop
mov
mov
cmp
int
dec
sti
add
jnp
inc
dec
adc
adc
push
push
jle
pop
mov
pop
inc
xchg
mov
add
mov
pop
xchg
mov
xor
pushf
lods
push
fisubl
or
into
popf
ja
xchg
leave
mov
cmpsb
xchg
add
insl
xchg
je
mov
ret
subb
xor
incb
shr
jg
scas
inc
cmpsl
mov
imul
icebp
mov
and
sbb
pop
add
mov
dec
pusha
lret
mov
repz
movsl
aaa
test
push
fadds
push
mov
ljmp
and
sbb
pop
xor
xor
clc
push
bound
mov
shlb
mov
sbb
cwtl
fcmovnbe
mov
xchg
scas
jle
lahf
cmpsb
pop
xchg
mov
cmpsl
xor
adc
std
push
outsl
repz
out
dec
test
jae
lret
inc
mov
cmpsb
mov
cmp
sbb
add
xor
cmp
ljmp
mov
push
scas
sbb
int
mov
fists
ja
imul
test
fcmovne
mov
mov
sub
mov
jp
xchg
xchg
mov
pusha
and
jnp
push
mov
repz
adc
aaa
sbb
adc
xchg
xor
mov
or
mov
sbb
movsl
jbe
ret
sbb
push
inc
mov
mov
mov
aaa
subb
std
mov
test
bound
inc
sub
cmp
xchg
adc
in
jecxz
imul
pop
dec
xor
jne
mov
jae
pushf
mov
daa
pop
ja
call
lret
push
outsb
cmp
or
mov
add
xchg
jl
inc
addb
jns
xor
xor
fbld
fstl
jo
lahf
xchg
mov
cmc
hlt
jo
sub
push
and
sub
stos
xor
mov
loop
xchg
sbb
dec
in
cmp
add
jg
rorb
cmc
and
pop
mov
fadd
push
jle
pop
cmp
stc
jne
and
enter
loope
in
jle
mov
cmp
shlb
push
ja
lret
hlt
lock
xlat
iret
fdivs
cmp
outsb
sbbb
insb
push
cmp
fsts
loopne
pop
cltd
out
adc
fcomps
mov
leave
call
out
mov
jl
repz
idivl
repnz
imul
cmpl
outsl
test
or
into
cli
inc
fcomip
cmc
cltd
lcall
mov
mov
mov
ljmp
xchg
adc
jo
mov
cmp
inc
adc
into
sbb
aaa
in
sbb
insl
mov
mov
sbb
sbb
shrb
lock
mov
lods
mov
mov
sbb
mov
movsl
push
cmp
cmc
inc
enter
adc
xor
mov
xabort
mov
dec
fldcw
and
sti
or
cltd
add
jle
lret
enter
sbb
xor
mov
mov
repnz
test
rolb
push
mov
or
imul
cmp
and
out
stos
xchg
jae
dec
inc
xor
cmpsb
and
xchg
aad
and
fnsave
push
fiaddl
adc
mov
jne
sarb
sbb
or
pusha
cs
popa
adc
xchg
hlt
aam
fldt
iret
pop
jecxz
adc
inc
sahf
inc
lea
add
dec
dec
xchg
repz
push
mov
into
test
add
movsl
lahf
push
mov
rclb
dec
dec
or
call
adc
jmp
mov
pop
cmp
adcb
ficomps
or
mov
or
pop
or
popa
inc
enter
movsb
ret
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
je
mov
or
sub
push
push
xor
pmaxsw
xor
lods
and
mov
jle
stos
inc
fwait
out
int3
leave
insb
push
in
addr16
ret
imul
mov
jl
cmc
jp
sbb
movsb
push
dec
or
pop
mov
mov
mov
popf
mov
js
push
inc
enter
xchg
add
imul
int3
test
test
fwait
lock
popa
mov
fidivs
sub
push
xchg
repnz
jle
xor
jecxz
hlt
ja
xor
add
add
lea
lock
cmp
clc
add
dec
test
mov
sbb
std
addl
test
push
int
mov
pop
stos
aam
out
adc
pusha
enter
aaa
lds
mov
mov
pop
fnstenv
mov
pop
xor
cmp
imul
inc
mov
cli
adc
cmpsb
das
or
jl
movsl
add
pop
mov
cmp
pop
jnp
inc
cli
pop
inc
jecxz
lock
mov
rcrl
mov
jp
cmc
clc
mov
sub
mov
mov
lahf
mov
lret
sub
cmp
push
iret
cmp
xorl
mov
mov
dec
loop
pop
push
std
or
sub
ds
mov
cmpsl
cmpsb
rcrb
shl
int
and
dec
jb
adc
add
mov
call
rclb
lret
mov
dec
incl
rorb
fnstenv
fcmovu
or
add
push
leave
les
cmp
popa
and
iret
aam
arpl
and
fcoml
or
mov
and
mov
dec
js
or
cmp
pop
sbbb
in
pop
inc
dec
push
xchg
sub
pushf
mov
push
mov
testw
mov
push
jbe
icebp
push
mov
jnp
adc
jmp
dec
in
out
ds
push
pop
and
dec
out
std
jb
mov
ret
push
mov
notb
cmc
cltd
xchg
and
ss
leave
xchg
gs
mov
rcll
adc
dec
adc
ds
stc
mov
ljmp
push
je
aaa
int
mov
dec
popf
mov
in
cli
ret
stos
jg
sub
lds
sbb
mov
lcall
shlb
dec
test
xchg
adc
int
imul
ja
mov
push
mov
adc
or
xchg
stos
mov
xchg
in
subb
icebp
mov
enter
scas
mov
cmp
dec
fisttps
push
xor
xchg
outsb
jns
mov
push
lods
dec
sar
push
mov
jecxz
loop
mov
adc
dec
sub
cwtl
mov
adc
mov
pusha
xchg
cmp
lock
movsb
adc
daa
cs
int
mulb
scas
mov
dec
ret
sahf
sbb
arpl
insl
leave
push
jo
lods
cmp
and
scas
ret
testl
lods
fwait
pop
fadds
mov
into
dec
xchg
jae
sbb
lcall
mov
mov
cmpsb
shr
adc
sar
dec
xchg
pusha
jbe,pt
test
addr16
mov
dec
lret
pop
mov
pop
push
aaa
sub
lcall
pop
int3
xor
cld
mov
insl
pusha
movsb
pop
mov
std
xor
jnp
jl
add
lds
xchg
cmp
imul
mov
xchg
cmpsl
jp
jne
insb
pop
loope
sub
cld
outsb
xlat
and
xchg
and
adc
mov
aam
and
out
adc
add
jp
or
sar
movl
daa
push
popa
mov
scas
jl
shlb
cmp
inc
or
push
xor
xchg
std
add
cwtl
loop
mov
cmp
inc
in
imulb
pop
in
cmp
pop
xor
add
aam
jnp
popa
jne
jecxz
sarb
in
lret
addr16
maxps
adc
jge
sbb
xchg
popf
shll
adc
cld
fidivrl
popa
int
mov
inc
test
jnp
lds
inc
adc
nop
and
sub
xchg
fisttpl
jp
dec
fldt
sti
icebp
dec
sbbl
mov
sub
jmp
xchg
or
cltd
rcl
jge
sbb
push
dec
pop
inc
sbb
jns
add
test
add
dec
xchg
sbb
cvttps2pi
lods
adc
cmp
nop
sarb
enter
pop
pop
sbb
pop
mov
add
sub
and
iret
mov
popa
out
pop
inc
pop
add
daa
xor
out
cmp
mov
ljmp
cmp
or
jecxz
out
inc
adc
pop
popf
lea
jge
roll
aam
pop
dec
subb
mov
test
stos
jmp
dec
sbb
pop
xchg
pusha
das
lock
pop
in
dec
mov
jnp
jp
sbb
jg
scas
stos
lea
xchg
inc
pop
add
icebp
enter
xchg
sarb
dec
lret
and
add
cmp
cld
or
xchg
inc
out
jge
sbb
or
cwtl
pmulhw
aam
into
loope
bound
mov
popa
gs
cmpl
sbb
das
jmp
adc
outsb
std
movsb
lret
dec
aam
mov
lcall
sub
dec
mov
jno
adc
xchg
xlat
shll
mov
pop
leave
xlat
loopne
xlat
into
xor
mov
pop
mov
adc
call
mov
lds
out
cmpb
outsl
or
dec
adc
sub
test
push
cmp
inc
ds
fwait
and
mov
int3
in
pop
jge
pop
mov
jbe
jmp
les
jne
xor
lahf
mulb
mov
sarb
or
xor
repnz
cli
rol
mov
movsl
mov
movsl
loop
cwtl
cmp
stos
sti
movsb
cmp
jb
ds
fs
stos
stos
xor
jae
cmc
add
jecxz
stos
movsb
adc
hlt
fcmovne
call
lea
int3
jae
jo
add
push
ret
mov
dec
pop
pop
mov
inc
bound
adc
inc
dec
aad
push
into
push
fdivrs
add
pop
xchg
pop
sub
push
cmp
mov
int3
mov
xchg
lret
and
xor
test
add
popa
sub
mov
push
pop
jns
stos
repz
in
mov
jno
popf
jno
inc
out
add
aad
in
mov
icebp
adc
popa
nop
xlat
testl
mov
das
jb
and
roll
or
jmp
int
fs
pop
jl
insb
jb
inc
xchg
inc
mov
daa
jnp
pushf
ljmp
or
outsb
push
nop
insl
pop
jecxz
fwait
push
sbb
hlt
fimuls
mov
mov
ds
rclb
leave
jmp
mov
in
mov
inc
add
repnz
mov
pop
jns
inc
frndint
xor
imul
mov
shlb
push
cmpsl
mov
xchg
je
fstps
push
add
cmp
pop
push
imul
xor
and
std
lahf
push
jp
std
jnp
dec
dec
mov
fbstp
sbb
mov
je,pn
fisubs
or
iret
inc
mov
call
xchg
and
xor
or
jo
or
enter
xor
daa
and
mov
sub
add
mov
js
push
jb
sub
sbb
sbbl
mov
jae
imul
jmp
orl
stos
mov
es
out
stc
cwtl
cwtl
loope
dec
in
stos
pusha
daa
xor
js
scas
testl
pop
je
pusha
lret
add
aam
sbb
jo
inc
mov
dec
loop
enter
add
adc
cli
sar
pop
or
pop
es
push
aam
mov
repz
jle
mov
adc
mov
je
or
lcall
into
lret
movsb
aaa
std
test
dec
popf
std
pop
xchg
test
frstor
inc
mov
idivl
mov
mov
fstpl
jnp
mov
push
shlb
sbb
ret
dec
jno
jl
mov
aas
lcall
lret
push
outsl
sub
lock
xorb
cmp
mov
inc
int3
mov
or
insl
in
std
xlat
cmp
mov
push
push
lods
push
inc
add
xchg
fsubrp
lods
stc
dec
mov
mov
sub
sti
cmpsb
sub
mov
dec
pop
push
fstpl
jo
sbb
adc
cmovl
add
push
or
adcl
inc
int3
jae
call
mov
adc
mov
lock
cmc
xlat
inc
cld
dec
test
jl
inc
sub
mov
shr
lock
stc
and
popa
repnz
mov
rcr
stc
add
shlb
dec
dec
arpl
sbb
mov
jp
jns
cmp
js
jae,pt
int
add
lret
push
je
aad
adc
and
push
inc
mov
in
and
inc
sbb
xchg
push
mov
fcmovnu
scas
pop
xor
das
jmp
xchg
ret
cwtl
pop
pushf
les
data16
popa
cmp
dec
sbb
inc
or
or
out
nop
into
testb
sarl
pop
xchg
sub
lods
fmull
pop
loop
cmp
rcrl
or
push
fs
jno
add
mov
je
rolb
push
cmpsl
jb
xchg
sahf
inc
rolb
js
enter
cmpb
mov
mov
js
inc
mov
xor
std
in
arpl
mov
shll
rcrb
sbb
out
or
inc
push
daa
insl
clc
hlt
pop
int
mov
jecxz
or
push
inc
arpl
je
lret
mov
jp
add
test
lret
out
iret
int
lcall
sbb
fsubrs
inc
loopne
shrb
xchg
movsl
loop
inc
aad
inc
scas
sbb
loopw
mov
mov
xor
aaa
bound
mov
cs
pop
inc
and
xchg
adc
lahf
arpl
sub
sub
in
adc
xchg
pop
sbb
or
add
les
mov
add
ja
pop
sbb
leave
jno
ret
js
scas
mov
lods
and
adc
pop
pusha
sbb
aad
aad
mov
ret
mov
push
inc
repnz
cmp
jnp
ja
in
dec
icebp
out
sbb
mov
mov
xchg
int
and
pop
cmp
inc
jbe
dec
cmpb
mov
xlat
aad
out
or
xchg
xor
lock
scas
shlb
mov
and
mov
lock
test
add
fs
add
test
out
lret
or
repz
jle
or
mov
jge
push
xchg
rclb
arpl
pushw
inc
loop
sub
push
cmp
imul
sub
mull
daa
mov
push
sbb
fdivl
pusha
jmp
inc
outsb
sbb
in
daa
mov
lcall
pop
insb
bnd
inc
sahf
lcall
stos
jl,pt
or
push
mov
xchg
cmp
popa
push
dec
mov
sbb
std
test
inc
adc
ss
add
sbbl
fldt
pop
or
ficoml
xchg
push
inc
pop
cltd
sahf
div
xchg
mov
faddl
ret
mov
ljmp
mov
fld
sahf
in
jns
out
in
cmp
cmp
xchg
daa
push
xchg
inc
shl
pushf
sahf
lds
adc
mov
es
cltd
sti
push
loop
inc
dec
mov
adc
fs
js
inc
sti
fmul
fs
es
scas
adc
repnz
sbb
outsb
lcall
add
push
lds
jae
adc
xrelease
clc
nop
movsb
dec
push
rorl
int3
test
rolb
dec
jnp
xlat
aaa
jle
or
das
or
push
xlat
fcmove
xor
dec
pop
sarl
add
fdivr
xchg
adcl
mov
clc
je
xor
pop
cmpsb
fbstp
das
orb
inc
stos
adc
js
or
enter
sbb
mov
push
dec
sbb
loop
sarb
fdivp
out
out
sahf
out
xchg
repnz
inc
xor
insb
push
xchg
mov
iret
mov
inc
push
ud2
jae
xchg
sbb
inc
test
pop
arpl
jb
test
test
and
xor
inc
scas
jbe
mov
mov
sbb
je
shl
and
shr
std
je
pop
push
and
sahf
cmp
dec
pushf
mov
or
cmp
stc
sub
add
adc
sub
xchg
jle
sub
icebp
xchg
rclb
mov
xor
mov
dec
and
push
data16
test
repz
aaa
jecxz
out
cld
int
push
ds
inc
adcl
or
fdivr
pop
pcmpeqw
xchg
loop
adc
jecxz
pop
roll
push
out
xor
ret
aam
sbb
add
pop
orl
xchg
scas
mov
xchg
add
je
adcl
xor
es
inc
test
repnz
adc
lods
and
mov
std
jae
sbb
inc
push
lds
add
leave
inc
aas
push
insb
fldt
push
aad
fiaddl
cmp
frstor
sbbl
mov
pop
imul
mov
movl
daa
or
xor
sar
dec
imul
push
jmp
ret
add
stos
ljmp
jl
outsl
movsb
inc
mov
in
mov
decl
push
fsubrp
xchg
or
mov
rorl
xorb
cmp
sarl
xchg
aad
xor
stc
xor
lock
jge
sbb
push
push
jns
jmp
rcr
ss
into
in
or
fwait
lds
imul
icebp
andps
pusha
jg
flds
add
test
pushf
or
cwtl
lret
xchg
and
or
fadds
xchg
fdivrp
push
int
out
cltd
imul
fwait
jne
scas
std
xor
sub
popf
sahf
insl
into
adc
pop
push
inc
test
push
aas
lods
in
cmovs
or
xor
push
aam
mov
ds
fstpl
or
xchg
jmp
jge
or
and
add
adc
outsb
mov
adc
mov
push
cs
repnz
lea
sub
testl
inc
movsb
push
mov
pop
push
mov
mov
les
lahf
xchg
xchg
push
clc
sub
inc
insb
hlt
mov
leave
push
mov
loope
call
ret
xchg
sahf
sbb
adc
or
and
cmp
das
sub
ret
sarb
xchg
push
xor
xchg
cmp
loope
mov
outsb
pop
dec
inc
fdivrl
lds
xchg
xchg
push
and
daa
test
cmp
dec
dec
test
shr
mov
pop
cltd
push
enter
int
mov
shl
jne
pop
or
inc
out
sub
iret
jle
into
fwait
push
mov
jno
mov
pop
pop
and
popf
ss
add
adc
fisttpl
push
fldenv
sub
shrl
pop
push
push
mov
mov
add
das
inc
dec
mov
push
jnp
dec
fbstp
jge
sbb
and
mov
pop
adc
xorl
sbb
xor
pop
add
clc
rolb
pop
xor
mov
sub
loop
mov
sti
sti
xchg
pop
pusha
mov
out
fists
scas
mov
dec
pop
aad
dec
icebp
or
push
add
mov
add
sbb
jle
and
test
call
or
inc
xchg
add
push
mov
sti
lea
and
sbb
sbb
jne
shrl
ljmp
cmp
lahf
scas
aad
xor
lret
fcom
cmc
fsubrs
add
adc
loopne
or
mov
sub
hlt
loop
rcrb
pushl
push
dec
insl
add
jno
lock
pop
stc
rcrl
movsl
lock
push
pop
pop
int
xor
mov
imul
mov
mov
cmpsb
or
or
repz
in
add
sarb
addl
push
adc
mov
push
ret
adc
lods
daa
test
out
loopne
xor
dec
xchg
aaa
inc
daa
inc
mov
adc
in
jae
js
adc
mov
pop
enter
sub
cltd
inc
shlb
daa
clc
push
push
cmp
and
loope
cmpsl
or
leave
cmp
popa
sahf
fildll
jne
es
pop
jnp
ljmp
lcall
add
push
repnz
aaa
stos
sub
sub
ficompl
sub
adc
in
push
rcrb
call
mov
sub
sub
orb
or
mov
rorl
mov
adc
in
flds
and
xor
lcall
leave
loop
aas
jmp
fisttps
call
dec
inc
sub
pop
in
jge
jl
movsb
xchg
or
sbb
push
adc
lret
pop
inc
inc
cwtl
dec
sub
or
inc
icebp
pop
pop
add
sub
jge
aas
mov
andl
add
mov
inc
int
cmp
addb
jle
stos
add
pop
lcall
xchg
mov
lret
ret
mov
pop
cmpsb
and
add
pop
and
rolb
lods
jmp
outsb
in
xor
inc
cli
jns
ja
jb
insb
sbb
and
mov
or
mov
mov
gs
dec
cwtl
lahf
leave
ret
add
rcr
mov
fdivrs
inc
cmpl
mov
sub
insl
fimuls
out
adc
inc
or
add
inc
movsb
cltd
pop
dec
inc
loopne
sub
fcmovb
mov
push
int
jno
pop
out
add
push
cmp
jp
xchg
fs
mov
sub
jge
pop
sbb
mov
sbb
push
jmp
loopne
dec
sbb
sub
and
sub
iret
cmp
aam
mov
stos
lods
mov
pop
mov
loope
mov
mov
insb
lods
movsl
sub
mov
push
cmpsl
jg
rolb
push
jle
dec
stc
jle
popf
adc
pop
fucomi
jnp
inc
lods
mov
mov
xchg
xlat
out
orl
and
fiadds
rcr
sub
mov
xchg
push
movsb
lods
push
shll
or
in
in
je
in
and
adc
fisubl
call
mov
jecxz
and
fsubs
movsb
cs
imull
xchg
scas
jge
push
xchg
in
jns
push
mov
sbb
pop
les
adc
dec
stos
loope
nop
sub
cmc
cwtl
rorb
sub
arpl
adc
repz
cld
push
or
pop
dec
fs
jecxz
xor
int3
xor
daa
jge
sub
mov
cmpsb
popa
bound
out
sub
push
mov
add
test
out
xor
rclb
and
pop
jp
divb
shl
jns
cmp
dec
xchg
pop
iret
cmpb
es
xor
cmp
pop
xor
je
sub
sub
mov
fmuls
sbb
lea
mov
sbb
xchg
in
addb
test
call
insb
pop
hlt
mov
scas
mov
sbbb
jno
add
xchg
pushf
iret
xor
mov
adc
mov
push
push
stc
mov
mov
xor
lret
sbb
jnp
insb
fistps
lock
rcl
movsl
pop
mov
addr16
in
mov
jae
or
loope
popf
pop
mov
ja
test
sub
sub
xchg
pop
ret
or
mov
aaa
pop
daa
mov
call
out
es
add
fidivrl
mov
stos
mov
adc
faddp
jns
out
stc
sbbb
mov
pop
mov
es
lahf
inc
or
inc
add
ss
out
cwtl
adc
dec
sbb
mov
xorb
in
adc
adc
pop
xchg
inc
inc
mov
jmp
mov
mov
sub
loope
leave
sub
push
xlat
pop
xchg
or
mov
and
cmp
js
jp
dec
jecxz
inc
fs
sti
mov
sbb
sbb
xchg
push
jae
leave
jl
test
scas
push
jmp
hlt
and
inc
lret
setnp
dec
jnp
sbb
push
outsl
pop
adc
mov
add
insb
sub
xor
jl
out
mov
push
bnd
mov
lea
mov
in
int
es
sbb
cmc
push
cmp
push
iret
insl
ja
mov
iret
loopne
pop
push
mov
or
sahf
push
scas
push
les
push
pushf
jp
push
lock
sbb
jg
adc
xor
fnstcw
movsl
lds
fxch
jnp
xchg
andl
add
adc
popf
vcvttps2dq
jae
repnz
popf
jl
insl
mov
ficompl
dec
lret
inc
xor
mov
jmp
repz
jae
xchg
dec
or
mov
btc
pop
lods
call
inc
pop
pusha
daa
adc
rcrb
mov
inc
pop
mov
stos
cmp
aas
xchg
decl
mov
cmc
int3
push
pop
push
mov
mov
adc
test
xchg
loop
mov
or
shrb
and
sti
lds
fucomip
out
adc
push
xchg
push
pop
test
fs
aaa
xchg
pop
notb
inc
movsb
lods
popf
xor
jnp
mov
loopne
out
and
adc
xlat
repnz
mov
xchg
xor
adc
jecxz
adc
push
jne
adc
cmp
adc
adcb
out
out
jns
pop
xor
in
jnp
xchg
stos
jb
sar
fdivrl
outsl
or
mov
sub
aad
pusha
sbb
fldt
cwtl
mov
sub
out
pushf
xchg
inc
lea
pop
ficomps
or
sbb
xchg
fsubrs
aam
movsl
dec
mov
das
cmp
data16
or
pop
fsubrl
inc
cmp
cwtl
mov
mov
push
lock
jg
push
lock
push
pop
or
cli
jge
and
sbb
jmp
das
sahf
setbe
or
inc
ss
mov
jo
cwtl
jmp
lret
cmp
data16
imulb
mov
fs
add
cmpl
lret
ja
inc
sub
jecxz
rol
and
icebp
xchg
sarl
js
pop
add
rcl
std
mov
lods
call
mov
mov
adc
inc
cwtl
xchg
jecxz
ss
xchg
fstps
push
repz
fmull
repnz
fistpll
ret
rcrb
fidivrs
ljmp
lcall
mov
mov
jle
xchg
cmpsb
mov
and
enter
ds
popa
cmp
sbb
mov
negb
xchg
icebp
sub
les
dec
int
cmp
sub
sbbl
les
inc
push
or
add
ljmp
adc
sarl
cltd
cmc
mov
dec
dec
call
ret
mov
fistps
das
stc
xor
xor
insb
cli
stos
or
in
adc
xor
jbe
lcall
jns
rcll
push
les
cmp
mov
fimuls
xor
out
pop
aaa
movsl
out
and
sub
fildll
xchg
push
inc
xor
pop
movsl
insb
pop
and
hlt
dec
ret
aam
js
les
cld
mov
fsub
repnz
js
js
xchg
pop
add
and
push
or
pop
sbb
fwait
pop
jo
fmull
scas
sbb
in
sbb
inc
movsl
dec
ficoms
rorl
or
mov
into
repz
iret
dec
jbe
mov
fsub
dec
notb
xchg
ret
or
dec
shr
pop
mov
mov
popl
mov
pusha
sub
add
pop
sarl
sbb
and
test
mov
fwait
fbld
ret
in
mov
shll
pop
arpl
cs
mov
imul
pushf
andl
stos
mov
idivb
fcmovnbe
or
scas
movsl
push
jg
push
mov
sahf
shrb
popa
iret
loop
aam
cld
xchg
xchg
and
pusha
mov
push
clc
or
jbe
dec
sub
jg
mov
push
adc
imul
xor
shrb
mov
das
cmpl
jo
xchg
dec
mov
jns,pn
stos
idivb
jp
sbb
mov
ret
mov
add
mov
sbb
loope
cmp
lds
and
ja
in
outsb
out
lahf
shll
xchg
or
das
out
push
lock
xorb
adc
add
orl
sub
adc
dec
sub
popf
or
cmp
xor
push
addr16
faddl
ret
adc
push
rcr
mov
movsl
call
hlt
ss
inc
sbb
clc
bound
sub
jle
in
imul
ljmp
adc
lcall
mov
sub
pop
jne
xor
loope
leave
test
mov
lock
dec
cmp
sub
in
push
sub
cmp
mov
in
or
stc
add
mov
mov
mov
aad
fs
fstps
imul
jge
mov
adc
in
sbb
imul
ja
mov
dec
cmpsl
in
aam
pop
cmc
add
lret
push
inc
faddl
dec
xchg
cs
std
sti
aaa
push
add
aad
loop
xor
sub
dec
or
mov
ljmp
ljmp
repz
xchg
jmp
cltd
nop
nop
fdivl
xor
dec
aam
mov
push
mov
aam
lea
dec
lahf
fnclex
sub
xchg
repz
fistpll
inc
movsb
outsl
cmp
push
cmpsl
and
jecxz
pushf
dec
das
movsl
xchg
add
shlb
mov
ret
ss
jb
or
fistl
mov
mov
ret
repz
dec
xor
shll
sub
repz
jmp
xchg
mulb
jl
arpl
dec
in
adc
fimull
cli
inc
fcmovbe
lret
add
pop
aam
lret
dec
mov
aam
sbb
push
or
jnp
sbb
xlat
push
inc
ljmp
push
or
and
dec
sbb
pop
dec
pop
in
mov
jbe
in
sbb
clc
pop
xchg
imul
dec
jle
lods
fldl
push
sbb
sbb
mov
std
enter
xchg
jb
and
xchg
mov
mov
pop
mov
imul
sbb
jl
jae
inc
pop
icebp
out
adc
jno
sbb
les
sbb
mov
xchg
jl
gs
lds
push
lcall
xor
icebp
mov
aad
xchg
idivl
xchg
cmp
in
mov
lods
cmp
inc
lock
dec
or
mov
cltd
enter
test
pop
and
pop
jecxz
imul
stos
outsl
and
jcxz
cs
mov
gs
pop
lret
ja
xlat
cmp
cmpsl
jl
inc
fcoml
loop
cltd
repz
mov
pop
loopne
push
negb
mov
sub
ja
fisubrs
popa
or
ret
loop
adc
jp
cmp
jae
pop
popa
add
dec
cmc
adc
adcl
jmp
popa
mov
pop
pop
push
stos
mov
sti
dec
pop
pop
mov
and
dec
or
mov
pop
fdiv
fsubl
mov
daa
push
mov
xlat
push
xor
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
jb
inc
or
xchg
int
push
push
push
outsl
faddl
cld
cmp
in
repz
xchg
and
stc
lahf
cld
bound
mov
add
mov
jg
nop
insl
sub
pop
lret
xor
sub
cmp
xchg
mov
jo
outsb
lcall
add
pop
dec
mov
out
inc
mov
aam
js
or
in
jbe
sub
mov
scas
jns
xor
fdivrp
jb
cmpsl
icebp
and
pop
outsl
adc
imul
sub
xorl
fsubrl
xchg
dec
mov
movsl
cmpsl
ja
lret
xor
pop
fstpt
cmp
nop
sub
lret
and
add
es
xchg
push
xor
jnp
mov
cmp
dec
subb
ds
fwait
jnp
push
sub
imul
es
lcall
adcb
sub
fcomps
pushf
popa
mov
repz
nop
cmpsb
shr
mov
dec
jge
add
shll
out
out
push
cs
sub
in
imul
push
stc
pop
sbb
xor
jle
xchg
and
mov
dec
popa
jecxz
loope
adc
and
jnp
outsl
inc
inc
mov
addr16
lahf
sbb
pop
repz
xchg
adc
pop
cmp
in
xor
insl
jnp
jg
and
push
push
lods
out
push
lods
das
dec
and
call
add
mov
add
jge
pop
popf
push
xor
outsb
add
out
cmp
arpl
roll
mov
push
add
fcmovnu
mov
xor
jb
or
dec
inc
xchg
in
xchg
pop
out
sub
xchg
loopne
shl
in
insb
loop
enter
xchg
rolb
fs
or
ss
jl
push
movsb
mov
cmp
cld
data16
idivl
ret
fisubl
xchg
cwtl
addr16
cli
or
pop
jo
sub
cwtl
xor
bound
xor
fwait
jb
sti
sbb
xchg
fdivrl
popa
add
pop
pop
mov
andl
ja
push
sub
test
sub
faddl
jge
mov
adcl
adc
push
fcomp
pop
testl
mov
jns
jmp
rclb
loop
pop
push
cmpl
leave
jne
sub
xchg
es
jnp
imul
mov
or
inc
icebp
jns
pushf
add
sbbb
popf
mov
icebp
imul
and
pop
jl
fcmovu
mov
leave
adc
icebp
sub
mov
imul
loope
dec
push
pop
cmp
push
xchg
fwait
int
repz
ja
ret
jne
jbe
fdivs
dec
stos
jno
inc
pop
mov
test
lahf
adc
push
popf
cld
sub
lods
jmp
jno
mov
and
sub
xchg
push
adc
test
lock
push
arpl
fistl
fldcw
int3
cli
ljmp
sbb
outsb
sub
mov
jnp
pop
hlt
mov
jae
imulb
pushf
ss
pop
mov
insl
adc
lods
fistl
js
fldenv
push
push
xor
cmp
jbe
jns
cmp
cmp
in
mov
stos
repz
cld
int3
mov
lret
push
mov
icebp
lret
or
or
mov
pushf
test
xchg
pusha
xor
sub
push
cmp
cmp
mov
fs
addb
xchg
jno
rcll
inc
pushf
xor
dec
imul
mov
sbb
push
repnz
sub
sti
fwait
aad
das
mov
jb
mov
ret
lds
je
cmc
shlb
cmp
dec
popa
jnp
dec
call
lods
push
cwtl
hlt
loop
adc
mov
pushf
push
out
ljmp
int
loop
pop
mov
jb
mov
gs
sbb
xorb
dec
inc
addr16
mov
stos
mov
push
shrl
flds
addb
xor
and
xor
jmp
sbb
fidivrs
cmp
pop
sahf
insb
push
cmc
arpl
inc
mov
mov
push
jg
mov
and
out
pop
in
or
mov
and
sbb
insb
mov
gs
push
lds
roll
dec
int3
in
adc
in
jne
mov
int3
mov
jno
mov
mov
push
scas
sbb
cmpsl
hlt
lods
daa
aam
inc
fstpt
or
cmp
jnp
xor
fisubs
cmp
sahf
or
lahf
test
aad
pusha
xor
mov
push
lret
sarl
insl
jp
addr16
or
sub
addr16
clc
testb
out
and
bound
dec
and
mov
xorb
mov
push
fidivrl
sbb
push
adc
ret
imul
out
stos
mov
pop
sub
jns
repnz
pop
ret
sti
sub
in
stc
enter
xor
and
int
mov
pop
jge
mov
dec
shl
sub
stos
lea
div
stos
add
fstps
dec
inc
xchg
ja
dec
fstl
jnp
xlat
mov
xor
xchg
inc
adc
push
mov
fs
lods
stc
cmp
loopne
or
scas
push
lret
pop
repz
lahf
and
mov
cmp
push
mov
dec
or
jne
sub
add
xor
xchg
fldlg2
fs
jge
mov
xor
sarb
mov
push
push
repnz
mov
ds
cmp
aas
push
fsubp
jo
push
ficoml
mov
fs
cmp
cmpsl
pop
pusha
push
inc
cld
mov
pop
adc
add
push
sbb
jmp
and
fildl
xor
clc
scas
mov
xchg
mov
shll
mov
sbb
fisubrs
mov
dec
jmp
xlat
mov
cmpsb
mov
cmc
inc
std
push
xor
lods
addr16
incl
or
pop
mov
and
inc
hlt
mov
loop
lock
lahf
pushf
jne
or
call
aaa
sti
push
or
push
mov
push
rcl
rcrb
adc
and
ss
bound
int
out
xor
add
jb
mov
mov
xor
mov
fisttpll
sub
bound
call
xchg
adc
xchg
or
push
pop
dec
pop
jge
dec
pop
ds
push
int
lock
notb
or
mov
lods
arpl
fsubr
test
mov
xor
jle
daa
in
xchg
sub
adc
cwtl
aas
fsubrs
xchg
sub
xor
push
scas
add
icebp
pop
add
gs
clc
jb
xor
mov
enter
dec
sbb
inc
dec
mov
cmp
cmp
dec
test
aas
and
or
or
push
ror
cmp
addr16
xor
insl
sbb
xor
lcall
and
int
push
push
cmp
xor
stos
popf
and
xchg
dec
jge
icebp
or
aam
mov
xchg
outsl
nop
scas
std
orl
cmpsl
int3
test
jne
add
cltd
imul
mov
xchg
mov
sbb
add
jmp
or
pop
mov
jge
mov
std
imul
mov
mov
aad
xchg
fisubrs
sbb
andl
icebp
adc
or
sub
repnz
ficomps
push
cwtl
add
mov
inc
inc
ljmpw
jnp
sar
or
xor
mov
ret
mov
cmp
stos
fyl2xp1
xchg
or
jbe
dec
cmc
stos
mov
xor
jg
dec
movl
idiv
test
jns
xor
inc
iret
push
and
test
cmp
ror
mov
inc
in
inc
xor
inc
std
in
add
or
cmp
mov
les
scas
dec
and
int
jb
inc
push
mov
andb
sub
hlt
test
ret
into
into
and
mov
cli
xchg
enter
cmp
pop
mov
mov
icebp
rolb
sub
inc
sub
in
sbb
mov
adc
push
outsw
dec
xchg
mov
rcr
cmpsb
push
mov
add
mov
pop
jle
lret
fiaddl
mov
sub
gs
sub
lret
retw
test
mov
in
cmp
inc
stos
mov
insl
out
out
rorl
cmc
adc
ficoms
das
and
and
icebp
xchg
mov
call
push
sbb
ret
dec
jg
pop
push
xchg
ret
in
push
pop
das
pop
les
xchg
stc
sbb
cmp
cmc
out
movsl
xor
fdivl
push
or
iret
push
or
cmpsb
ja
push
mov
cli
shr
out
xchg
test
cmp
jne
jp
and
push
cmpl
jl
test
in
dec
mov
lods
shll
shll
testb
or
insl
push
pop
movsb
sahf
std
or
jae
mov
and
mov
jne
inc
inc
leave
lret
iret
les
push
and
pop
sub
dec
cmp
cmp
pop
adc
icebp
mov
pusha
sahf
or
mov
pop
mov
add
jne
sub
jle
les
cli
push
lock
inc
sbb
or
test
cs
and
inc
loope
sbb
aas
adc
cmp
pusha
es
jge
pushf
and
jbe
loopne
sbb
rclb
dec
cmp
gs
pop
shll
rorl
jno
mov
jle
sbb
in
lds
clc
pop
loope
adc
sbb
lcall
jmp
jb
leave
adc
test
mov
dec
mov
xchg
loop
jo
pop
mov
stos
fistpll
lods
push
out
sbb
or
xor
pop
jmp
adc
aad
xchg
es
mov
xor
pop
xchg
pop
fwait
or
ljmp
xorb
jle
inc
mov
icebp
mov
into
or
xor
add
insl
mov
jmp
fchs
outsb
jne
xlat
into
add
lds
dec
mov
in
dec
jns
push
jp
sub
jnp
dec
cmc
sub
pop
scas
lret
and
dec
cmpsb
and
dec
notb
shlb
ret
jbe
aaa
lahf
out
testl
jns
jne
ss
sbb
jne
decl
and
stc
sbb
dec
test
jecxz
lods
push
rorb
dec
dec
shl
push
mov
push
dec
jns
inc
pushl
adc
jae
addr16
arpl
xchg
jo
add
or
loopne
mov
fldt
sbb
ds
xchg
cmp
in
and
punpckhwd
mov
and
mov
dec
add
outsl
pop
aad
dec
dec
push
icebp
dec
loopne
orl
xchg
mov
pop
adc
clc
imul
mov
xchg
out
dec
dec
test
add
jge
ret
cld
in
aad
add
adc
lret
pop
cld
ja
and
in
and
fcoml
mov
into
shlb
mov
cmpsb
push
fs
xchg
jno
inc
into
cltd
mov
in
fimull
jle
cld
pop
mov
jle
sti
cmp
idivb
xor
imul
cli
lock
pop
sbbb
negl
addr16
cltd
xchg
repnz
cmp
and
xor
or
mov
xor
jne
mov
pop
test
mov
cmpsb
mov
gs
push
adc
jnp
cmc
push
nop
xchg
sub
push
popl
js
and
fists
mov
cmc
scas
push
jg
push
fiadds
fmuls
and
and
mov
call
jecxz
ds
cli
dec
xlat
mov
aas
lcall
inc
cs
enter
daa
cmp
movl
cmc
and
dec
cli
jns
jmp
ljmp
aaa
and
shll
repz
test
aad
cmp
fstps
pop
cltd
cld
dec
nop
lods
mov
xchg
push
dec
and
loope
cmp
jb
jle
add
sbb
ficoml
js
outsl
call
mov
enter
cmc
cmp
xor
and
stos
cmpsb
push
sbb
push
xchg
stc
iret
adc
outsl
xor
movmskps
test
add
fbstp
push
pop
shl
push
test
test
das
adc
mov
push
jb
test
stc
jmp
ds
add
xchg
jno
xchg
inc
call
and
or
jge
jmp
sbb
int
test
sub
sbb
nop
jmp
inc
inc
xchg
mov
xchg
loope
xchg
shl
loopne
lahf
addr16
mov
stos
fwait
jno
cmp
lea
mov
shll
add
stc
mov
push
stos
repz
pop
sbb
jnp
ds
or
out
xchg
jae
stos
test
dec
jl
push
dec
mov
fdiv
les
cli
pop
sahf
adc
ja
outsl
icebp
or
and
xor
movsb
out
je
imul
inc
mov
psrlw
and
jp
inc
popf
and
xchg
in
repz
pop
xor
mov
inc
or
inc
mov
or
pop
or
loopne
jb
add
mov
idiv
inc
aad
pop
xlat
sbb
lcall
inc
push
mov
inc
sbb
fwait
mov
cmpsl
or
push
pop
or
test
mov
loopne
je
fnstcw
gs
inc
cmp
in
jecxz
jbe
int
mov
mov
test
loopne
call
mov
pop
sbb
sub
lods
cmpsl
xor
xchg
add
cmp
adc
inc
in
cmpsl
inc
iret
fwait
imul
mov
lcall
loopne
sbb
ljmp
mov
pop
imul
pop
dec
and
jns
roll
sub
les
shlb
sahf
aam
test
jb
lds
sbb
cmc
cmp
mov
out
shr
mov
int
loop
add
in
push
add
mov
cwtl
ds
mov
das
addb
xchg
iret
dec
inc
sbb
xrelease
pop
xor
xchg
adc
icebp
lock
pop
lret
inc
ret
cmpsl
cltd
out
andl
iret
aas
mov
lock
jp
bound
dec
mov
inc
nop
sbb
test
adc
sahf
dec
loopne
xlat
sar
lcall
xchg
ds
push
arpl
mov
in
and
ds
push
addr16
pop
xor
mov
pop
in
push
cmp
adc
rorb
dec
es
sbb
jne
out
xor
mov
push
pop
adc
sbb
movsb
nop
test
dec
jecxz
cwtl
mov
adc
pop
xchg
mov
fsts
ljmp
lds
sbb
dec
imul
xchg
sub
fwait
ja
or
xchg
pushl
pop
rcr
sub
js
les
rcrb
push
xlat
mov
popf
sub
or
imul
pop
and
mov
jb
dec
sub
jmp
mov
call
scas
cmp
mov
and
cmp
fs
xchg
push
popf
mov
fsubrs
push
push
fstpt
rorl
incl
jae
lods
sub
cltd
inc
orl
je
mov
iret
insb
pop
pop
inc
clc
mov
cmpsb
shl
push
jae,pt
call
push
loopne
push
jne
add
pop
xchg
ss
xor
gs
or
jo
dec
mov
mov
mov
js
out
test
mov
stos
dec
jns
cmpsl
and
movsl
inc
shrl
jl
mov
hlt
mov
dec
lds
mov
cmp
sub
call
andl
cmp
rcrb
push
lcall
gs
xchg
push
jno
mov
or
insb
outsb
xchg
popf
push
xor
cmp
cmpsb
push
and
arpl
das
lret
rcrb
fldcw
fisubl
iret
sti
xor
test
leave
mov
add
shlb
repz
and
cmp
xchg
and
int3
cmp
mov
sub
push
mov
jno
mov
adc
movsb
addr16
sahf
out
xor
xor
mov
or
and
inc
push
or
repnz
pop
inc
add
or
scas
push
in
daa
add
hlt
mov
or
clc
aaa
pop
mov
and
mov
pop
jle
inc
xchg
ja
fsubs
rorb
jp
jno
and
cmpb
stc
xor
test
mov
into
push
add
scas
cmp
cltd
mov
or
pop
iret
xor
jle
addr16
inc
push
pop
inc
mov
mov
ljmp
stos
xor
mulb
push
dec
jo
or
gs
or
adc
mov
ljmp
xchg
lahf
mov
pop
lock
cmp
lds
lock
lret
cmpsb
and
imul
mov
in
shl
mov
stos
nop
aaa
lods
loop
orl
mov
daa
call
imul
sub
hlt
push
adc
xor
xchg
popf
jp
and
lds
xor
into
aas
xchg
out
fsubs
cltd
mov
mov
cmp
jae
ret
mov
and
loope
cmp
sub
mov
loope
push
jecxz
lahf
dec
add
das
pushf
or
lea
inc
jecxz
test
dec
je
lds
and
xchg
cld
loope
aaa
or
adc
ja
pop
xor
mov
mov
test
lcall
pop
mov
mov
ret
or
icebp
adc
mov
js
lret
inc
xlat
clc
les
lods
cwtl
gs
repz
xchg
imul
push
pop
into
call
mov
mov
and
jecxz
push
and
arpl
je
addl
mov
or
mov
ret
int3
xlat
mov
xorb
lods
mov
repz
push
xchg
cli
leave
xor
jl
xchg
mov
loopne
adc
push
mov
into
xchg
cwtl
cmp
ret
mov
xchg
fadds
incb
jge
jmp
sub
pop
sar
leave
mov
sbb
adc
jmp
and
cli
mov
pop
xor
repz
repz
idivl
in
add
xchg
and
repz
fisubrl
xor
sbb
cli
sti
add
loope
sbb
jns
push
cmp
arpl
jae
ss
test
xor
hlt
xor
cltd
jp
pop
xchg
adc
cli
or
stos
fmuls
loope
iret
jae
movsb
mov
cltd
icebp
stos
jae
fstps
popa
subl
inc
fsubrl
sub
lock
out
addr16
mov
mov
mov
test
pop
jle
push
stc
push
in
hlt
add
ret
or
andb
and
dec
lret
loope
mov
data16
test
pop
pop
adc
loopne
fcoml
or
loop
add
xchg
lock
shl
in
cmp
inc
xchg
repz
inc
scas
xor
push
mov
fs
and
mov
jnp
cwtl
jns
inc
mov
dec
push
rcll
lds
out
sbb
pop
pop
mov
test
inc
or
je
jbe
inc
xchg
lods
cli
lret
lcall
shl
int3
and
fistpl
icebp
push
idiv
xchg
insl
addr16
push
lret
pop
xchg
adcl
pop
push
in
aam
adc
out
stc
jno
lock
in
or
xor
rclb
cld
mov
lahf
sbbb
lahf
dec
fisubl
popa
pop
push
ja
das
inc
es
pushf
inc
jl
adc
pop
xchg
cmp
or
xchg
mov
fcompl
mov
dec
test
insl
mov
movsl
movsb
pop
xchg
xor
pusha
adc
aas
or
fcompl
sbb
out
cmpsl
inc
cmp
pop
dec
ss
nop
loop
mov
adc
jnp
inc
arpl
inc
iret
popa
lea
mov
fildll
inc
imul
sbb
mov
cmp
inc
ret
xor
pop
in
outsb
sbbb
clc
loopne
shlb
xchg
xchg
pop
xchg
cmp
adc
xchg
call
xor
mov
js
pcmpeqd
pusha
pop
push
jns
push
dec
test
pop
sub
in
in
jbe
fdivp
sbb
aaa
xchg
jecxz
movsl
mov
dec
scas
int
hlt
xor
mov
xor
movsl
inc
mov
fdivr
jb
xchg
jns
pop
fcomps
adc
ds
pop
xlat
mov
lea
xchg
jl
inc
rorb
dec
jae
pop
dec
mov
js
in
push
aas
xor
daa
ss
aaa
xor
cmpsb
xchg
dec
jmp
popa
mov
mov
setne
and
jbe
aam
imul
mov
add
shlb
dec
or
std
out
rcrl
mov
xlat
add
add
xchg
rclb
push
jle
mulb
addr16
shl
adc
js
mov
push
xlat
adc
test
out
push
inc
push
push
mov
jbe
lds
ja
ss
out
std
xchg
push
push
iret
push
leave
or
imul
sub
or
addr16
frstor
mov
iretw
into
test
maxps
arpl
cwtl
jmp
out
out
jae
lods
mov
sahf
pop
lock
pop
enter
aas
movsb
daa
mov
sub
div
pop
xchg
data16
push
push
call
imul
jno
movsb
stos
fisttpl
xor
sahf
insl
sub
push
mov
sbb
call
dec
xchg
adc
rcrl
lods
test
sub
jl
ljmp
jge
jp
sbb
push
cmp
fstl
test
or
jle
mov
scas
lret
int
gs
cmp
es
in
dec
movsb
adc
mov
fimuls
shll
es
je
cmp
fdivs
addb
cmp
pop
dec
in
cmpsl
pop
jae
dec
and
inc
inc
test
jmp
dec
adc
inc
cmpsl
jne
and
inc
aaa
jns,pt
outsl
mov
add
mov
push
sbb
cmp
test
mov
fucomip
mov
and
add
std
push
cwtl
add
adc
sbb
and
enter
sbb
jb
call
addr16
mov
pop
cmc
test
mov
add
sub
shlb
popf
jb
and
daa
femms
js
mov
lahf
or
aaa
lods
addr16
dec
sahf
leave
jg
add
dec
cmpsl
into
sti
push
cltd
dec
lock
pop
dec
in
push
cmpsb
and
xchg
fstpl
jmp
xchg
leave
inc
xchg
ret
outsb
dec
jmp
mov
in
and
cld
lods
sarb
jb
xchg
sub
jge
scas
jge
sub
imul
mov
mov
mov
dec
aam
push
daa
inc
std
test
daa
idivl
jbe
in
and
loope
xlat
bound
lret
jbe
adc
cld
xchg
jl
push
lcall
bound
cmp
sub
push
lahf
cmp
xor
push
inc
xchg
sub
push
mov
mov
dec
adc
sbb
ja
mov
mov
jns
test
pop
iret
inc
mov
mov
xor
cmc
aad
xchg
int
and
popf
orb
jp
jb
and
fimull
stc
in
push
fwait
pop
xchg
and
mov
lods
inc
sbb
mov
test
cld
jmp
push
insb
test
fwait
xchg
dec
cwtl
repnz
call
pop
mov
cld
fistps
mov
cmp
mov
or
push
fisubl
leave
test
push
cmc
sti
out
xor
or
push
sbb
cmpsl
mov
pop
adc
inc
int
out
mov
jns
loopne
repnz
fists
xchg
enter
cmp
mov
inc
sub
test
das
add
pop
lret
push
jmp
imul
sub
nop
sub
pop
jbe
cmp
or
je
mov
stos
test
cmp
inc
bts
rcll
mov
daa
mov
mov
xchg
mov
dec
xchg
mov
push
cmp
jae
fwait
push
pop
sbb
movsl
out
fwait
les
in
sbb
fstps
jp
sbb
gs
adc
fstpl
decl
rolb
rcrb
sti
andb
xchg
fs
jl
sub
jle
shll
fisttpll
mov
js
into
or
add
dec
in
in
sbb
das
xchg
cmp
dec
pop
push
das
inc
mov
pop
xor
pop
pop
mov
mov
imul
aad
jb
fs
pop
add
jb
iret
mov
mov
jb
in
lret
or
jl
xchg
lods
jp
cmp
push
jb
jle
iret
or
pop
fwait
add
push
movl
cld
ror
jno
int3
cmp
pushf
in
inc
inc
gs
cli
cmp
adc
add
add
aaa
notl
cmp
nop
pop
lcall
cltd
lret
hlt
jbe
rolb
add
ret
es
mov
mov
or
scas
stc
xchg
scas
dec
push
cld
mov
xor
shr
mov
pop
adc
xchg
jo
mov
jns
mov
mov
push
and
stos
add
xlat
push
pop
subl
shl
addr16
pop
clc
out
xchg
pop
inc
out
sti
push
sub
push
stc
dec
or
dec
loope
pop
xlat
adc
jle
adc
fdivr
imul
add
out
mov
jno
movsl
xchg
iret
adc
popa
dec
fscale
pop
call
sub
inc
loop
push
dec
mov
shlb
or
les
dec
test
mov
shll
inc
fwait
pop
mov
loop
push
int
and
cmp
repnz
pop
movsb
mov
popf
dec
push
je
xchg
push
pop
mov
data16
stos
in
cmp
mov
test
sub
shlb
pushf
lods
add
cwtl
mov
mov
call
inc
dec
pop
idiv
mov
mov
js
je
and
jns
in
out
jl
sahf
mov
std
inc
mov
ljmp
or
xchg
push
lcall
cmpsl
or
pop
arpl
pop
dec
inc
imul
cld
stc
seto
mov
push
pop
push
and
pushf
lcall
sub
outsl
or
xchg
leave
aad
hlt
cmp
sbb
jb
add
ss
sub
into
xlat
jecxz
add
imul
fisttpll
inc
aam
mov
daa
incb
sub
jecxz
aam
xlat
mov
mov
js
es
stos
mov
mov
movsl
sub
jl
jnp
xchg
push
jo
cltd
aam
push
in
mov
popf
hlt
add
xlat
out
pop
int
push
enter
fildll
pop
inc
xchg
and
out
roll
repz
xlat
popa
mov
pop
cmp
stc
movsl
mov
jo
or
ret
add
mov
and
sub
push
or
lcall
cs
cld
mov
mov
sub
cs
stos
jnp
insl
xchg
inc
fiadds
push
jmp
jae
xor
lods
sarb
gs
jnp
hlt
push
xchg
outsb
out
inc
sahf
and
sub
sbb
loopne
popa
jae
iret
xor
or
insb
clc
fistpl
sbb
ja
in
ss
or
cli
jge
mov
push
sti
jle
and
scas
call
inc
inc
xor
xchg
pop
insb
js
jge
push
stos
sub
outsb
lea
dec
frstor
dec
push
xchg
and
lret
roll
pop
test
and
jne
int3
cmpsl
inc
add
add
aam
popf
or
mov
pusha
jno
insl
mov
hlt
subl
mov
loope
loopw
jbe
pop
mov
subl
ret
mov
jo
rol
in
cmp
out
in
pop
mov
mov
cs
in
loopne
fsubrs
or
into
aas
jg
sub
cwtl
push
mov
pop
faddl
mov
dec
pinsrw
js
add
pop
bound
shl
das
sbb
push
repnz
adc
ss
andl
test
jns
push
aas
inc
out
insb
ret
rorl
sub
out
popf
sbbb
enter
addr16
stos
cmp
jmp
ss
lock
outsl
mov
stc
movsl
push
xorb
sbb
out
xor
push
xlat
xor
sub
cmpsl
sbb
dec
lcall
xor
and
mov
mov
fstpl
aam
imul
hlt
aam
sbb
dec
mov
fistps
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
fwait
ret
add
repnz
push
test
sbb
hlt
mov
sub
popa
std
pop
fimull
push
xorb
in
insb
inc
pop
adc
gs
or
sbb
int3
iret
jle,pt
mull
push
mov
scas
pop
shrb
mov
push
fistl
sub
or
and
mov
fcoms
cmp
pop
aad
loop,pn
mov
dec
mov
cmp
ja
std
pop
xor
rcrl
or
stos
cld
movsl
aad
mov
sub
iret
mov
stc
into
repz
adc
sbb
jno
jmp
adc
jl
cli
dec
in
xchg
adc
adc
mov
sbb
inc
xchg
dec
data16
dec
imul
xchg
inc
int
xor
int
lret
jne
jns
out
test
xlat
outsl
push
jp
add
xor
lcall
and
ljmp
jbe
call
cs
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
