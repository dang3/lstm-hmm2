push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
push
call
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
add
mov
mov
mov
jmp
int
xlat
int
rcrl
mov
jle
add
into
xlat
cmp
fxch
pop
add
adc
bswap
and
sbb
inc
pusha
or
jecxz
or
dec
adc
data16
outsl
adc
pushf
add
dec
mov
sub
xchg
add
mov
fisttpl
repz
dec
call
mov
sub
add
lret
lcall
inc
clc
repnz
int
loope
pop
cmpsb
xor
adc
fisttpll
ds
adc
mov
arpl
adc
pop
loope
jns
inc
push
aaa
adc
fstpt
dec
lock
fcmovnb
outsl
mov
shl
nop
dec
mov
pop
les
nop
dec
mov
xor
cmp
dec
int3
xchg
pop
push
nop
sahf
std
lock
in
and
cmpsb
mulb
xchg
repnz
push
mov
leave
sahf
dec
and
cmp
cmp
mov
inc
lods
jl
in
inc
out
stc
sbb
movsl
imul
in
dec
fidivs
loopne
andps
mov
push
jp
scas
outsl
je
js
sub
mov
pop
fnstsw
adcb
pop
adc
call
xchg
or
arpl
xchg
jns
cmp
test
push
mov
adcl
mov
add
cmp
pushf
jl
sub
push
cltd
shrl
add
push
in
mov
outsb
xor
sub
fwait
dec
test
or
int
cli
ret
push
rol
icebp
push
add
cmpsl
lods
sbb
ss
or
aam
add
je
out
out
push
fisttps
jb
repnz
pop
push
and
xchg
xor
sub
jl
test
pushf
lahf
arpl
mov
repnz
loopne
aad
movsl
xor
lock
cwtl
std
push
inc
cmp
fs
out
icebp
dec
fistpl
add
fisttpll
inc
clc
jmp
xchg
sbb
cmp
sbb
dec
call
in
fiadds
leave
mov
push
int
outsl
or
insl
push
xlat
sub
cmp
sub
sub
mov
pop
shrb
outsl
out
cmp
cmpsl
xchg
lret
ss
sub
adc
lret
popf
out
in
rcll
lcall
push
jl
jge
cmp
lahf
sbb
jb
iret
jp
addr16
mov
fucom
lcall
es
roll
stc
push
sahf
cmp
stc
xchg
insl
orl
cmp
cmp
mov
lcall
out
nop
pop
jmp
mov
xchg
ja
dec
insb
fcom
pop
sbb
pop
lahf
mov
dec
arpl
xor
stos
lds
jmp
sti
aam
fnstsw
mov
in
les
shrb
push
roll
jno
leave
and
add
clc
inc
ret
xchg
stc
roll
jmp
cmp
and
out
test
push
cmpsl
fwait
xor
outsb
xchg
out
jg
cmp
sti
hlt
fcmove
push
pushf
int3
fsubp
sbb
push
ds
outsl
jne
insl
test
mov
mov
loopne
data16
push
ljmp
daa
or
mov
out
cmp
pop
pop
jno
pop
push
divb
xor
sub
push
cmp
mov
adc
mov
inc
xchg
jae
test
sub
and
xchg
incb
test
jg
pop
mov
add
push
add
icebp
stos
sub
sti
repz
xlat
add
push
popf
add
ds
jmp
out
test
cwtl
test
test
mov
daa
xchg
test
rolb
cs
mov
fstpl
mov
pop
push
push
fwait
sbb
xor
mov
or
or
dec
xorl
out
or
add
pop
mov
mov
sbb
inc
lock
test
add
sarb
shll
lea
enter
enter
fs
sub
fsubs
test
inc
sub
add
jne
sub
inc
push
sahf
mov
lods
cs
js
arpl
dec
cmp
sub
mov
sbb
and
dec
cld
mov
adc
mov
dec
fildl
adc
in
add
fsubrl
lds
jl
ja
adc
push
xchg
mov
push
pushf
xor
stos
jnp
mov
out
out
mov
repz
jmp
repnz
fistl
xor
imul
cltd
cld
jnp
cmp
push
inc
test
cwtl
bswap
mov
add
jo
mov
in
dec
mov
in
int
pop
jle
push
rclb
xchg
jecxz
arpl
adc
stos
sbb
ds
pop
pop
add
push
ds
jp
sub
inc
out
inc
sub
cmp
fwait
jge
jb
sub
and
loopne
pop
icebp
int3
icebp
ljmp
icebp
loop
mov
dec
int3
push
jle
leave
jnp
lods
jo
movsl
shlb
mov
inc
inc
jo
std
xchg
out
nop
cltd
ja
inc
imul
xchg
or
xchg
rolb
repnz
add
jg
std
mov
pop
jns
add
fmull
int3
cmp
andb
cld
push
jg
fisttps
inc
mov
push
in
roll
sbb
sub
or
adc
ja
adc
stc
inc
or
fs
mov
movsl
test
rclb
lea
lds
lret
icebp
jbe
cmp
inc
and
shl
into
insb
xchg
cmp
insb
sbb
xor
hlt
out
ret
sbb
jb
xorl
clc
sub
adc
fsts
add
cmp
pop
outsl
stos
adc
mov
push
or
data16
cmp
imul
jo
call
icebp
cmp
ljmp
rorl
ret
adc
out
add
xlat
int
insb
push
jnp
pop
rol
arpl
fwait
mov
and
mov
and
aam
push
enter
scas
sub
push
scas
ja
cmp
sub
mov
or
adc
mov
mov
mov
testl
dec
adc
ret
mov
push
fcomp
outsl
mov
xchg
pop
test
ret
gs
fdivrl
pop
movsl
and
les
fxch
pop
dec
adc
and
call
push
int
sbb
rcl
data16
cmp
and
inc
pop
inc
pop
adc
arpl
lret
repnz
std
adc
aad
dec
adc
mov
stos
xchg
jle
hlt
fisttps
xchg
fscale
cmp
clc
or
rorl
fsubrl
in
sbbl
cltd
stos
sbb
cmp
shrb
sarl
xor
stos
loop
movsl
hlt
lret
sbb
adc
cli
fisttpll
mov
andb
fisubs
call
cwtl
addr16
addb
or
divb
jae
stos
push
popa
idivl
mov
mov
in
mov
bound
stos
xchg
add
lods
aam
push
fmuls
addr16
push
andl
xchg
pop
and
daa
xchg
inc
xchg
in
adc
ljmp
dec
dec
aaa
insb
pop
mov
cmpsb
xchg
xchg
cmc
add
adc
or
jle
rcll
pop
sahf
or
aam
aaa
movsb
xchg
pop
mov
dec
jmp
jmp
test
popa
repz
test
clc
popf
push
jge
xor
rcrl
fs
add
mov
pop
scas
daa
cmpsl
std
popf
dec
fcmovnu
dec
pop
and
test
in
or
jo
sti
sbb
add
add
and
dec
movl
add
jmp
into
lret
fcomp
int3
fidivl
fistps
cmc
stos
lcall
jle
sbb
fildl
dec
mov
fucomp
sub
out
sahf
pop
ljmp
mov
xchg
inc
add
push
and
inc
sarb
inc
mov
clc
mov
inc
push
pop
into
cs
repnz
sub
out
xorl
jne
fmuls
loop
or
shl
push
addl
inc
fists
stos
jne
testb
fs
jge
test
int
lea
push
call
xchg
lea
stos
movl
insl
sub
test
push
push
or
sbb
push
mov
rclb
lret
jno
lds
int3
add
mov
nop
lock
sbb
ds
adc
add
out
sbb
ficompl
hlt
outsl
jb
bound
push
and
push
push
in
jg
rol
lcall
loopne
sub
je
fistl
pop
mov
jg
outsl
ljmp
ds
push
mov
jle
fmull
pop
pop
adc
icebp
cld
cmp
int3
xor
jp
ja
shll
mov
push
mov
xchg
test
cld
xchg
add
mov
outsl
inc
fdivrs
push
in
pop
out
sbb
xor
xor
xor
dec
jmp
jnp
mov
dec
lock
stc
fwait
xchg
sbb
ss
test
and
fmull
xchg
xchg
jecxz
repz
push
dec
push
or
push
sarl
push
fwait
adcl
pop
xor
out
aam
jnp
call
sub
nop
test
pop
push
or
mov
add
jne
into
aas
xor
jge
cmpsb
cmp
pop
loop
pop
xchg
add
setno
test
push
xor
mov
and
movl
lret
cmp
xor
jg
push
data16
loope
jg
jl
sbb
imul
cmc
mov
or
test
sahf
sbb
and
stos
xlat
lahf
test
adc
imul
pop
jmp
loop
cmc
cltd
or
lea
fidivrl
lcall
push
add
add
inc
mov
xorl
push
sbb
push
pop
add
jmp
mov
jno
popf
pmaddwd
movsb
mov
inc
mov
jbe
lods
ja
mov
js
jg
push
sub
bound
push
inc
orl
outsb
jecxz
cmpsl
aaa
xchg
jecxz
fldl
xchg
pop
jg
out
andl
push
test
mov
cmp
js
cmp
das
xlat
xchg
lods
adc
jg
mov
dec
imul
pushf
mov
xor
cmpl
pop
in
sub
adc
movsl
push
mov
mov
je
xor
xlat
adc
sbb
xchg
out
push
sbb
or
scas
jmp
inc
sub
mov
push
and
adc
pop
sub
inc
or
mov
jmp
adc
xchg
or
and
lods
inc
fstl
rcr
js
xchg
inc
mov
mov
push
test
popa
sub
imul
mov
iret
mov
lods
in
dec
lock
imul
test
int3
icebp
pop
inc
cmp
mul
sbb
pop
jae
mov
loope
mov
cmc
fdiv
pop
mov
in
jne
sbbl
add
cmc
push
jnp
mov
out
rcll
pusha
shll
gs
les
idiv
pushf
iret
rorb
jg
xor
out
xor
jnp
push
sbb
push
pop
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
jmp
lret
int
rcr
fldenv
jbe
dec
mov
movsb
or
enter
rolb
out
addl
jno
cmc
push
pop
jecxz
out
rcl
sub
mov
dec
inc
leave
pusha
lea
push
inc
jg
scas
inc
push
imul
jmp
sbb
stos
or
xor
adc
cld
and
imul
adc
fsts
push
lods
add
mov
stos
mov
jecxz
nop
mov
es
test
adc
sbb
ljmp
gs
push
or
test
mov
aam
dec
cs
ljmp
jns
test
inc
fsubr
je
adc
sub
push
mov
shld
insb
mov
jo
clc
es
mov
mov
idivl
xor
or
mov
inc
fchs
adc
and
inc
cmp
mov
push
jl
leave
in
pusha
data16
mov
xor
xor
and
daa
test
inc
pop
lret
sbb
or
jl
test
fists
movsb
addl
xor
cmp
and
mov
or
push
cwtl
lods
cmc
out
out
inc
and
std
sbbl
lret
cmpsl
dec
xchg
ja
mov
pop
stc
mov
jns
popa
pusha
inc
jae
xor
call
add
aad
xchg
xchg
in
out
cmp
mov
and
push
mov
push
push
in
or
mov
lret
fcmovnu
push
and
aas
xchg
add
lock
mov
lea
xchg
cmpsl
push
xchg
inc
mov
shlb
xchg
push
inc
shll
add
fidivl
icebp
sub
pusha
mov
and
jl
add
mov
adc
lock
xor
setl
pop
iret
outsl
push
jge
ljmp
pop
scas
pop
mov
repz
jecxz
movsl
das
jmp
std
xchg
xchg
into
aam
inc
adc
or
adc
push
stos
add
cmp
imulb
pusha
jle
sbb
jbe
scas
push
push
movsl
xchg
sub
jmp
lea
add
dec
and
popa
movsl
pop
into
mov
jl
fidivrl
ficomps
ret
mov
ljmp
lahf
ss
cmp
sbb
data16
xor
in
mov
sub
dec
xor
sti
xor
gs
sub
jbe
pop
xor
popf
movsb
in
pop
stos
std
cmp
xchg
xchg
and
fwait
call
mov
call
ja
push
fsts
lret
pop
repnz
lds
pop
fstpl
sub
loope
adc
xchg
data16
orb
lahf
sbb
scas
xchg
rorb
add
push
lock
getsec
test
fsubp
bound
mov
insb
sahf
mov
adc
roll
jg
cwtl
jb
and
movsb
and
call
test
jb
les
add
repz
nop
pop
xor
xchg
xor
fmuls
xchg
jne
cmp
sbb
mov
cmp
add
hlt
orb
adc
lahf
or
and
fdivrl
call
sahf
popf
sbb
mov
cmpb
push
jns
xor
dec
xor
fbld
add
lods
inc
xlat
mov
lods
or
in
jno
or
xchg
ficoml
xchg
mov
jecxz
xor
mov
push
adc
add
cmpb
inc
inc
xor
shl
lret
scas
lds
sar
sbb
mov
mov
lods
and
ret
dec
aas
jae
lea
ucomiss
jmp
jae
mov
fwait
lock
xor
ret
push
movsl
dec
data16
cld
test
push
dec
mov
dec
insl
xor
das
xchg
das
mov
adc
out
fcmovne
mov
lret
push
jmp
rcl
lret
rcr
das
inc
push
xor
test
movd
add
pop
dec
adc
cmp
in
xchg
pop
test
jmp
clc
stos
pop
or
les
ret
lret
and
fs
fldl
cs
xchg
xor
sarl
dec
dec
cmpsb
in
lret
inc
mov
dec
xor
mov
push
clc
jp
test
divb
sub
movsb
pop
mov
fcoml
int
cmp
jo
shll
gs
cld
inc
or
jbe
pop
nop
out
mov
pop
je
loop
inc
jmp
sti
pop
roll
enter
pusha
cmp
int
push
mov
cmp
or
jbe
cmp
mov
mov
aad
clc
outsl
xor
stos
int
insl
fistpl
jns
inc
dec
rcll
xor
jmp
shrb
mov
pop
ficoms
in
and
mov
adc
imul
outsb
dec
xchg
fidivs
mov
sti
in
out
cld
mov
fcomps
rcl
inc
ss
cs
or
subb
ret
int
sarl
repnz
cmp
mov
rclb
pop
xchg
mov
pop
pop
and
mov
xor
gs
into
es
mov
pop
idivl
mull
jecxz
enter
pop
add
shlb
sub
or
add
pushf
iret
aaa
xchg
xchg
sbb
fdivs
int
xor
mov
mov
dec
xchg
mov
imul
mov
insb
ss
xchg
pop
add
jl
mov
mov
pop
push
out
jge
push
adc
push
xchg
les
dec
or
jmp
icebp
xorl
ficompl
testb
aam
in
push
jbe
repz
sbb
mov
push
push
add
rolb
cwtl
scas
popf
sub
mov
stos
or
aad
inc
or
andb
lock
xchg
shlb
cwtl
and
jns
add
mov
cmp
dec
std
ds
push
inc
je
add
mov
adc
out
in
orl
push
sbb
xor
xorb
shlb
aam
jnp
sarl
pop
xchg
cmpsl
sub
mov
clc
movsl
pop
xor
call
mov
xor
and
pop
adc
mov
adc
test
xchg
stos
pop
and
pop
sub
insl
xorl
push
out
lahf
pop
mov
daa
xchg
dec
inc
lcall
sbb
mov
jmp
out
cmpl
movsl
dec
and
cld
jne
fs
sub
loope
push
ds
xchg
daa
sbb
xor
inc
add
xor
jp
out
shlb
sub
add
and
fsubr
mov
add
sbb
jg
dec
insb
rcrl
mov
gs
adc
ret
adc
ljmp
cltd
and
int
mov
add
mov
hlt
xlat
jnp
scas
iret
lahf
stos
and
insb
sarb
int
fimuls
or
sub
push
adc
cs
inc
out
pusha
cli
mov
or
mov
and
mov
mov
enter
arpl
mov
ljmp
cmp
xor
xchg
mov
pop
mov
mov
add
mov
enter
jae
or
loopne
pop
lock
icebp
in
sbb
in
adc
dec
fs
fcoms
cmp
dec
or
scas
push
es
lahf
push
dec
xchg
push
and
cwtl
dec
or
jo
mov
fwait
inc
sbb
push
jg
fs
mov
sarb
daa
cmp
xlat
insb
lea
out
cmp
cmp
adc
jbe
loopne
test
stos
mov
dec
or
adc
xor
xor
push
sub
mov
movl
jmp
rcl
xchg
adcb
jle
add
mov
in
sbb
cmp
js
sbb
push
out
xor
cmp
mov
xor
sbb
xor
ja
fmul
xor
das
pop
adc
scas
adc
mov
andb
std
in
imul
outsb
or
es
mov
dec
xchg
enter
xlat
fnsave
fs
or
jae
mov
fnstcw
idivl
push
inc
cwtl
sub
test
add
movsl
mov
out
ljmp
adc
push
mov
fcomip
adc
push
ror
call
push
or
jge
cmp
int
mov
roll
std
call
lods
mov
scas
fstps
movsb
loop
xlat
scas
jl
dec
imul
into
ss
mov
xchg
cmc
sub
ficompl
xchg
mov
lret
loopne
pop
mov
cmpsb
cmpsl
jmp
pop
pop
fs
jg
test
mov
fbstp
xlat
and
jno
push
inc
fdivl
repnz
popf
mov
mov
cmp
add
jg
ja
mov
xchg
cmp
xchg
lret
shlb
push
faddl
dec
sahf
jne
xlat
xchg
adc
xchg
lods
add
inc
adc
testl
push
sahf
inc
sbb
mov
icebp
or
cli
and
cltd
pushf
cli
add
outsl
mov
cltd
int3
jmp
mov
popa
mov
adc
mov
mov
stos
lea
mov
fsts
pop
sbb
add
clc
add
shrb
hlt
xchg
jge
add
xor
pushf
lcall
and
cltd
and
pop
lds
xchg
movl
cmp
lahf
shrb
leave
das
mov
jp
gs
xchg
pop
xchg
jmp
or
rorl
push
mov
sbb
in
ret
fwait
cs
int
pop
mov
or
clc
mov
into
mov
lea
xlat
jle
dec
fisubl
xor
push
test
cmpsl
dec
inc
dec
aam
sbb
stc
sahf
push
dec
lock
mov
in
or
cs
popa
pop
imul
pop
notl
push
sub
xor
mov
movsb
jne
and
mov
inc
les
mov
or
aam
sahf
mov
aam
xor
push
mov
add
mov
xlat
sub
mul
fisttps
lret
rcrl
sahf
dec
rcll
mov
mov
insl
inc
ljmp
scas
sub
je
xchg
xor
xchg
adc
addl
lahf
sub
cltd
mov
in
xchg
ds
sbb
sbb
mov
stos
xchg
les
and
cmpsl
jmp
pushf
int
jbe
mov
das
ret
push
pop
sub
cmpsl
or
insl
sub
lods
dec
sbb
jnp
or
and
mov
sub
pusha
loop
out
lcall
jg
push
xchg
add
push
mov
cmc
or
cmp
int
push
xor
sbb
fxch
enter
mov
call
pusha
adc
ficoml
cmpsl
mov
lock
and
fs
dec
fidivl
in
pop
imul
inc
pop
mov
and
jae
mov
sarb
ret
out
xor
in
dec
js
cmc
jbe
push
add
jle
out
cld
sbb
pop
aam
popa
xor
loop
cltd
or
cmpsl
push
pop
adc
pop
leave
mov
sub
fisttpll
mov
shrl
xor
add
aad
out
test
out
test
and
in
ds
sub
sbb
sti
cmp
enter
jb
mov
and
add
notl
jmp
iret
rol
iret
enter
and
cmp
outsl
push
pop
jle
enter
ret
stc
test
inc
lock
lcall
dec
shlb
shr
jae
xor
mov
arpl
xchg
xor
mov
bound
jle
lret
or
test
test
out
outsl
jbe
dec
mov
aas
out
or
inc
add
sub
fdivr
inc
mov
test
movsl
adc
fmul
ja
lret
mov
push
pop
pop
aaa
cmp
les
jae
outsl
shrb
fldt
arpl
cwtl
sbb
dec
xchg
mov
dec
arpl
push
ss
xchg
aad
cmp
fsubrl
sbb
or
dec
mov
push
pop
sti
xchg
adc
mov
mov
scas
lock
mov
mov
or
dec
jecxz
mov
ss
testb
push
push
dec
jle
mov
or
jecxz
mov
pop
mov
daa
cmpsb
stos
jle
push
out
enter
inc
loope
cmp
hlt
scas
sti
jae
inc
lret
cmp
xchg
xlat
adc
push
mov
sbb
or
lret
jle
jnp
loope
pop
sbbb
ret
sbb
rorb
dec
add
lods
aas
leave
sub
mov
das
fistps
add
inc
or
xchg
lret
inc
or
add
aad
test
ds
sbb
mov
sub
add
adc
sbb
mov
pusha
push
sub
mov
lahf
dec
test
dec
fadds
in
mov
cmp
or
popa
rcl
adc
cs
stos
mov
popa
cmc
out
sti
mov
adc
into
or
cltd
cmp
jnp
in
sti
outsb
std
stc
mov
dec
or
je
enter
cmpl
in
rol
cwtl
pop
sub
loop
lock
enter
movsl
call
mov
clc
xor
xchg
or
cmpb
jno
cmpl
out
sarb
mov
xchg
jecxz
lods
mov
mov
mov
rclb
cmp
jnp
xchg
xchg
cltd
adc
in
push
mov
mov
xor
dec
popa
cs
out
in
dec
in
mov
mov
fs
mov
into
shlb
cli
pop
lret
xor
lods
scas
cmp
popa
adc
pop
mov
xchg
mov
dec
mov
in
adc
push
xchg
cmpl
jmp
jns
xlat
adc
fs
push
inc
imul
mov
xor
aam
push
cmp
mov
cmp
inc
push
test
ja
scas
mov
mov
jge
jne
out
pop
pop
ds
insb
xor
inc
add
and
add
call
les
out
xchg
rcll
imul
sub
adc
daa
xor
dec
inc
and
jnp
inc
and
add
ja
inc
sti
xor
xchg
repz
inc
sbbb
jmp
ja
mov
ds
add
or
mov
roll
fwait
daa
in
push
rcrb
cli
add
xchg
jb
incl
jmp
xor
mov
loope
mov
jo
aaa
or
adc
pop
or
js
clc
cmpb
test
push
xchg
das
sub
mov
push
or
jl
loope
lahf
dec
gs
popf
hlt
add
pop
adc
or
jo
in
add
pop
jnp
mov
ljmp
repz
fadds
ss
popa
mov
sbb
out
bound
adcb
pop
jo
mov
xchg
cmp
ljmp
cmp
lods
mov
sub
jmp
mov
fucomi
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
movl
not
movl
movl
jmp
lret
sarl
rcl
rcr
fcomi
pop
xchg
sub
push
or
enter
lret
iret
add
out
loop
sub
sub
cli
push
mov
and
loopne
lret
iret
xlat
jns
inc
fisubs
mov
cmp
je
scas
sti
mov
add
test
sarl
js
fstps
jecxz
in
lods
add
sti
stos
ficomps
fwait
jae
add
aad
xchg
mov
mov
shlb
add
dec
jno
hlt
sbb
pushl
popf
inc
xor
pop
xchg
xchg
test
imul
cmp
enter
outsl
movsb
xor
add
ds
push
mov
xchg
xlat
mov
cli
push
testl
inc
inc
daa
jns
adc
inc
repz
jno
popfw
sbb
mov
cmp
lea
mov
cmc
jnp
mov
daa
cmpsl
adc
add
sub
mov
xchg
push
sbb
imul
mov
les
imulb
subl
jno
insb
outsl
shll
jns
or
pop
pop
int
mov
xchg
mov
sbb
mov
icebp
scas
push
jb
adc
cld
fcompl
cmc
mov
xor
or
cli
out
movsl
add
arpl
inc
mov
jb
outsl
xchg
mov
addl
mov
cmpsb
aaa
pusha
jecxz
or
adc
test
pop
cmpsl
in
sahf
jg
push
xlat
ljmp
or
pop
dec
push
pop
jmp
call
call
push
inc
psraw
loopne
pushf
cmp
ja
mov
dec
sbbl
jmp
ret
stos
xor
dec
clc
out
jl
mov
std
pop
and
xor
mov
push
out
fisubl
popa
adc
imul
dec
adcb
inc
jl
add
pop
in
movsb
mov
test
call
fwait
inc
jle
cwtl
adc
pop
movups
js
adc
stos
push
jmp
iret
xchg
loope
mov
push
xor
sub
mov
pop
loope
inc
popf
jbe
stc
cld
xchg
mov
adc
imul
push
mov
inc
mov
es
push
addl
sub
mov
fdivrs
aam
addl
call
cmp
mov
cmp
bound
aad
lcall
sbb
fdivs
idivl
mov
inc
faddp
test
ja
daa
cli
pushf
cwtl
jg
pop
das
sub
fwait
popa
ss
mov
mov
jne
rolb
in
and
inc
aaa
jne
xor
jne,pn
jbe
hlt
lock
bound
xchg
loop
test
xchg
push
xchg
dec
lret
inc
sub
clc
pop
andb
push
jo
jno
dec
mov
push
and
sbb
xor
xchg
mov
add
jecxz
leave
sub
iret
jno
sbb
shlb
sahf
fdivr
mov
jo
insb
jmp
repnz
mov
cmpsl
scas
iret
xchg
imulb
mov
popa
jno
dec
rorl
mov
lret
test
inc
inc
push
sti
pop
nop
test
ret
aad
vmwrite
cmc
cwtl
xchg
pop
mov
movsb
push
mov
push
fisttps
xchg
ret
pusha
addr16
jbe
xchg
push
bound
insl
push
in
fists
add
fisttpl
cmp
insb
lods
jge
and
test
dec
mov
pop
clc
lret
or
clc
mov
adc
int
inc
aam
cltd
movsl
int
push
movsl
mov
dec
dec
lods
mov
fstpt
and
cmp
adc
imul
sbb
mov
cmpsb
fs
test
ds
cwtl
adc
mov
das
in
jo
pop
addl
stos
ja,pt
fsubr
inc
and
stos
and
inc
xchg
add
jno
add
xchg
or
cmc
aad
push
sbb
ror
addr16
xchg
dec
test
push
or
pop
imul
js
xchg
jg
mov
xor
test
lea
push
insl
pusha
mov
lock
sarb
adc
in
push
pop
movl
sbb
jmp
int
lret
leave
aad
jp
iret
xor
cmc
test
enter
aad
sub
pop
pop
xchg
mov
xchg
scas
lods
movsl
test
fmul
jnp
int
cmp
pusha
fwait
mov
mov
mov
xchg
pop
test
cwtl
in
xor
jp
sahf
sbb
adc
mov
cmp
jnp
arpl
push
mov
cli
dec
cmp
xor
out
aam
lret
xchg
adc
hlt
sub
inc
dec
mov
dec
loop
push
scas
scas
sub
inc
es
push
add
aas
cmp
sbb
rcr
xlat
cli
prefetch
fistl
pop
pop
mov
mov
pop
push
out
ljmp
sub
imul
mov
mov
das
popa
or
adcb
mov
sahf
movsb
sub
push
xchg
jns
out
test
rorb
int3
mov
mov
stos
sbb
or
dec
push
lret
icebp
push
imul
icebp
cmpsb
in
xor
cmpb
pop
in
push
pop
lods
dec
insb
push
mov
push
icebp
sbb
stos
dec
in
jb
fwait
ret
pop
adc
pop
imul
sahf
addr16
mov
shl
or
or
dec
push
xchg
adc
xchg
jecxz
inc
xchg
cmp
and
sub
sub
sub
shlb
and
sbb
pop
add
enter
out
cmp
or
or
inc
push
lret
jb
and
es
and
sub
cmc
mov
jno
sbb
push
inc
or
aas
dec
out
insb
cmpb
bound
inc
cmpsb
mov
into
cs
jnp
adc
nop
mov
sbb
mov
lock
xchg
data16
push
stc
aad
jecxz
pop
shrl
mov
mov
mov
je
mov
aam
cli
xor
or
in
mov
jge
mov
iret
xlat
outsb
and
mov
mov
loop
int
jl
cmp
mov
mov
aad
xor
lock
xor
shr
cmp
push
pop
mov
mov
sarb
icebp
xor
int3
mov
orl
inc
or
in
sbb
and
sub
movsl
out
fcomp
add
jge
fidivrl
fcmove
lahf
loopne
mov
jae
mov
cli
icebp
jns
cmp
std
xor
sbb
jp
in
push
movsl
pop
testl
jae
clc
stc
leave
out
addr16
pop
test
sub
and
inc
mov
lds
imull
std
sub
pop
sti
fcmovnbe
jg
dec
fisttpll
ds
imul
out
and
in
movsb
mov
cmp
push
sub
int
rclb
mov
mov
inc
add
inc
add
cltd
mov
mov
mov
sub
add
adc
test
mov
shrl
fidivs
fstpt
dec
aas
pop
jge
je
mov
push
cmp
mov
xchg
mov
sub
ret
or
or
or
push
in
shrl
fcompl
push
je
cli
shlb
icebp
movb
xchg
cld
int
inc
mov
and
push
inc
xchg
gs
sub
cmpsb
pop
mov
iret
mov
pop
cmc
mov
int
cmp
jae
pushf
popa
pop
mov
popf
mov
xor
xchg
ds
xchg
xchg
cmp
test
fldl
dec
push
xchg
and
fs
jne
js
or
leave
xor
sbb
hlt
imul
call
xchg
jo
adc
in
adc
jbe
scas
xchg
pop
adc
sub
and
mov
divb
scas
imul
add
popa
pop
mov
dec
outsb
outsl
cmp
push
movl
mov
xor
mov
sub
xor
sub
jmp
ret
aam
lret
leave
aam
xchg
cli
push
rorb
dec
jecxz
and
enter
out
add
clc
pop
mov
xor
pop
cld
lock
sub
repnz
popf
insb
adc
pop
dec
or
stc
out
adc
and
mov
mov
pop
repz
push
jecxz
aaa
adc
xchg
sub
pop
pop
loope
mov
add
or
mov
cwtl
sub
clc
or
sub
jnp
xchg
jnp
imul
gs
push
inc
imul
or
out
jo
mov
mov
mov
dec
xchg
insl
jb
leave
les
rclb
loopne
shrb
sbb
mov
mov
adc
add
sbb
cwtl
xlat
pop
dec
inc
xchg
dec
loope
xchg
push
pop
pushf
pop
push
mov
add
xchg
dec
aas
and
in
add
nop
mov
test
gs
dec
mov
mov
mov
lock
adc
inc
repnz
push
and
out
ret
ss
mov
jecxz
xchg
push
mov
jp
stos
loopne
xor
sub
notl
sub
mov
popf
sbb
pushf
pop
fcomps
jp
lret
push
out
or
mov
movsb
sbb
out
cmc
and
in
xor
imul
mov
cli
and
sti
iret
in
cmc
add
inc
test
lret
xor
push
jb
dec
popa
jae
push
mov
mov
push
popa
and
pop
lret
das
aad
cmp
mov
xchg
mov
lock
iret
push
sub
fldl
mov
movsl
movsb
dec
cmp
out
fimuls
adc
notb
xchg
or
hlt
hlt
xchg
sahf
icebp
pop
mov
mov
fbld
and
ficoms
stos
idivb
jp
jno
jl
popl
jae
jg
pop
mov
lcall
in
xor
mov
repnz
aam
dec
pushf
jae
lret
push
cmp
push
sub
repz
fnsave
mov
and
sbb
xchg
mov
ror
ret
mov
jne
into
dec
and
out
aad
pushf
pusha
adc
jl
mov
pop
js
or
sbb
repz
or
lods
outsl
inc
out
jmp
or
loopne
mov
ret
push
imul
sub
dec
out
jl
sub
out
shrl
mov
je
inc
repz
ret
ljmp
push
loop
aas
jae
push
decl
push
sbbl
sti
cwtl
cmpsl
test
xchg
fisttps
lahf
shr
orb
pop
xor
cltd
adc
mov
cmc
add
ljmp
sar
repnz
loop
dec
inc
jne
loope
mov
mov
pop
scas
or
push
shll
and
adc
pusha
lret
enter
mov
mov
jle
es
adc
dec
and
mov
std
mov
xor
sub
add
xchg
mov
jnp
repnz
leave
mov
inc
in
sti
xor
mov
lahf
xor
lret
subb
inc
ret
mov
or
pop
or
mov
xor
mov
lcall
mov
inc
ror
das
jnp
mov
iret
mov
mov
add
add
loop
pop
add
mov
fidivrs
push
mov
inc
inc
fisttpl
push
adc
das
adc
sbb
cmp
ss
arpl
jl
push
arpl
aaa
sbbb
sbb
cmp
rorl
test
in
fdivrl
jmp
hlt
dec
repnz
jo
dec
bound
xchg
mov
loope
movb
push
pop
loopne
sahf
orb
xor
fcompl
inc
in
pop
hlt
fmuls
jg
icebp
call
mov
pop
or
test
cmpsl
addl
jae
fdivrl
dec
sahf
push
and
divl
sbb
movl
sub
movb
xorl
mov
mov
mov
or
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
add
xor
or
mov
sub
imul
jmp
rcl
aas
into
aas
rcl
rorl
xchg
cmp
or
jle
cmpsb
mov
mov
addr16
lods
push
push
sbb
cltd
mov
pushf
lret
mov
push
inc
popa
lds
hlt
out
movsl
pop
and
and
scas
fldt
xor
test
pop
or
xchg
in
xchg
orl
jne
div
or
push
jnp
sbb
pop
out
mov
ret
push
subl
movsl
sti
mov
xchg
push
add
push
mov
or
push
in
xchg
imulb
add
repnz
xor
insl
mov
insb
pop
lret
push
push
sbb
stc
pop
loopne
xchg
mov
mov
adc
mov
dec
in
lds
arpl
adc
jae
push
aas
xchg
inc
add
int3
sbb
cli
xchg
inc
pop
imul
push
mov
cmp
xor
shr
fs
test
fildll
mov
scas
outsl
sub
lods
inc
sbb
push
aas
pop
sub
fs
jmp
bound
rclb
mov
mov
and
ljmp
out
adc
jbe
adc
addr16
fadds
bound
sti
adc
mov
or
xchg
cld
xor
aam
fidivl
dec
das
insl
test
dec
loopne
dec
scas
lahf
fmuls
push
cli
addr16
xchg
cmc
xchg
xchg
mov
fwait
dec
test
fbld
inc
stos
aad
jmp
cld
mov
fistpll
repnz
adcl
mov
sarb
or
sbb
mov
outsb
fmulp
into
sti
cmpb
sub
jle
sub
gs
cli
adc
test
jns
sbb
mov
push
stc
aaa
adc
mov
or
fistpl
inc
clc
jmp
xlat
stc
xor
pop
xlat
dec
adc
movsl
mov
jl
es
out
insl
adc
decl
push
cmp
lahf
hlt
int3
stc
cld
pop
iret
cwtl
sub
xchg
dec
repnz
lods
mov
and
xchg
sub
shll
sub
dec
sub
inc
mov
sub
dec
jb
push
dec
into
mov
adc
jle
cmc
mov
pushf
pop
pop
push
jge
stos
inc
shlb
insl
mov
shr
dec
rcrl
pop
loopne
fisttpll
imul
outsl
sar
in
lret
fs
addr16
andl
jp
sub
xchg
int
or
push
sbb
inc
add
or
into
inc
jp,pn
push
mov
gs
imul
rclb
jp
iret
paddusw
fnsave
outsl
cmp
cltd
inc
popf
sarb
and
or
rcll
push
pop
ss
xor
in
loop
popf
mov
push
or
mov
push
out
js
lods
pop
xor
loopne
sarl
mov
lock
dec
imul
js
xchg
jecxz
push
out
in
pop
sarl
adc
pop
ss
int
into
pop
fstps
mov
lods
inc
lds
cmp
sub
xor
popa
pop
mov
fsub
push
mov
outsl
mov
cmp
xchg
jno
mov
and
int
mov
jl
mov
lds
pop
ss
imul
jnp,pn
stos
xor
js
enter
ffree
jg
mov
cmc
test
rorb
jecxz
test
mov
pop
inc
push
inc
outsb
imul
out
sbb
jns
test
pop
xor
pop
jmp
orl
cmp
rol
add
jbe
testb
mov
lea
lock
mov
jmp
pop
std
data16
xchg
and
es
mov
je
push
xchg
or
sbb
fimuls
loopne
cmp
jnp
push
inc
cmp
adc
add
mov
jl
mov
jns
sub
popa
sbb
or
sub
fistps
arpl
hlt
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
adc
xor
mov
mov
sub
or
jmp
into
rcl
fcomp
fcmovbe
clc
mov
rol
aam
jle
enter
dec
lret
xchg
xchg
sbb
int
push
and
sbb
enter
pop
ds
outsb
sub
fsubl
out
sub
addb
inc
roll
jae
adc
sahf
in
enter
dec
loope
orl
sbb
push
jmp
jmp
repz
sahf
sti
mov
call
das
push
push
scas
push
push
mov
xor
jl
mov
cld
mov
sbb
out
jns
jne
sbb
cmp
pop
mov
or
inc
pop
daa
xchg
cld
push
stos
cmp
shrl
dec
jl
and
testl
or
int
andl
inc
pop
jns
cs
sahf
insl
sub
pop
lret
lods
pop
dec
jnp
inc
ret
jmp
adc
aam
aam
std
cli
push
sub
dec
mov
or
ds
add
pop
sbb
xchg
and
je
mov
mov
and
jae
mov
mov
jb
adc
mov
sbb
mov
outsl
xor
add
xchg
andb
jp
jecxz
int3
js
shrb
mov
stc
sub
sbb
inc
or
imul
inc
outsb
jnp
pop
add
dec
lds
aas
enter
sbb
xor
hlt
ficompl
xchg
pop
sub
lea
push
sahf
mov
es
psubb
inc
adc
icebp
cmp
jb
jns
and
jnp
inc
inc
sbb
lret
add
adc
dec
add
nop
data16
pop
cli
pop
in
js
loope
cmp
push
mov
add
jecxz
lahf
stos
mov
pop
jp
adc
shrb
sub
mov
ret
sbbl
jmp
scas
dec
mov
negb
in
icebp
cmovae
xlat
into
out
stc
mov
or
xchg
cmp
js
jp
mov
dec
movsb
or
ljmp
scas
leave
inc
mov
jl
cmp
ds
mov
icebp
pop
jnp
mov
push
rorl
div
scas
xchg
xchg
mov
cli
or
jmp
paddusw
sbb
push
frstor
lcall
mov
lock
add
stos
ret
pop
lock
test
or
or
ret
or
leave
jg
or
inc
sbb
pop
push
fidivrs
jo
adc
movsl
mov
sub
or
xchg
lret
sbb
pushf
push
cld
and
call
ljmp
mov
fstpt
jecxz
xorb
sti
xchg
mov
push
cmp
and
idivb
aad
test
and
dec
xor
scas
out
insb
loop
dec
adc
data16
push
ret
fcompl
xchg
addr16
xor
stos
add
inc
dec
daa
decl
mov
repz
and
imul
inc
jbe
xchg
push
mov
ret
psrlw
sub
ss
inc
mov
repz
lds
scas
sbb
inc
xchg
lods
cmp
out
stos
cmp
sbb
xor
xchg
aaa
push
mov
and
lret
jmp
fcompl
mov
sub
ret
inc
shrl
in
adc
adc
in
shl
clc
push
and
ja
rcrl
or
into
dec
inc
roll
mov
inc
std
data16
xlat
loopne
push
cltd
popf
cwtl
xchg
adc
push
stos
pop
pop
shrb
add
icebp
inc
aaa
sbb
enter
pusha
scas
mov
sbbl
sbb
push
fadd
xchg
iret
andb
lea
out
push
mov
es
mov
mov
mov
add
mov
push
pop
sub
and
shrl
mov
arpl
add
iret
xor
jno
mov
mov
ja
test
lods
inc
mov
in
mov
jmp
int3
aam
ret
rcr
flds
push
mov
jle
add
or
or
push
icebp
mov
ljmp
fbstp
iret
fisubrs
or
xchg
sbbb
loope
fdivrl
mov
adc
pop
or
adc
test
sub
add
add
outsb
xchg
adc
mov
loop
inc
mov
dec
ja
xchg
sub
inc
adc
jno
gs
movsb
push
inc
stos
lret
push
inc
pop
and
jbe
into
movb
xor
xor
add
sarb
outsl
xchg
mov
pop
sahf
pop
adc
xchg
sbb
push
xchg
add
mov
xchg
sub
dec
jno
push
ss
daa
add
outsl
out
sub
mov
xor
bswap
dec
imul
rolb
inc
jo
fxam
pop
xor
xor
sbb
adc
lods
shlb
jnp
lret
in
push
nop
and
xor
dec
fdivl
icebp
imul
pusha
fnsave
add
add
in
mov
sbb
icebp
fwait
jbe
push
cmp
or
push
addr16
movd
mov
and
xchg
mov
fstpl
scas
add
mov
es
adc
inc
mov
test
dec
sub
add
xor
int
lret
jne
ror
sahf
dec
in
fsubs
add
jns
imul
mov
jo
cmpl
push
dec
mov
cmp
sarb
xchg
cmpsl
in
adc
cmp
mov
mov
out
jle
pushf
aas
cmpsb
jne
push
cmp
out
and
lock
imul
sahf
mov
jo
add
sbb
loop
ficomps
enter
mov
cltd
dec
repnz
shlb
ja
push
cmp
or
push
mov
test
jmp
in
je
cmpsl
lock
add
mov
ret
jle
cmp
inc
les
adc
test
insb
xor
push
xchg
xor
test
aaa
push
int3
or
xor
sub
xchg
mov
sub
push
xchg
jo
push
ljmp
outsl
gs
dec
loopne
push
push
andb
jnp
int3
mov
outsb
and
shll
loope
mov
and
rolb
int
cwtl
sub
stos
sub
cmpsb
pusha
jbe
push
rcll
jecxz
dec
mov
mov
test
lcall
rorl
mov
pop
lds
mov
mov
mov
stos
in
inc
testb
and
mov
loop
push
hlt
loopne
ret
ja
dec
shll
push
test
push
xor
int
ja
sbb
data16
push
mov
imull
xor
nop
shrl
fcompl
xor
mov
adc
fdivrl
jg
fidivs
jb
pop
in
xchg
and
mov
sbb
sbb
push
and
les
sti
or
mov
in
lahf
or
inc
inc
lods
xchg
xor
scas
pop
js
gs
insb
movsl
xchg
add
cli
mov
add
mov
and
mov
push
xchg
in
pop
rcl
flds
jp
mov
dec
repnz
mov
add
scas
or
lods
cmp
aad
pop
lods
cli
lods
aad
fildl
scas
adc
and
arpl
cld
in
test
cmp
in
lea
sbb
testb
push
push
inc
or
lret
mov
outsl
mov
int
lret
mov
les
lods
sbb
mov
adc
mov
lret
pop
cli
imul
pop
sbb
ss
pushf
and
pop
pop
stos
xlat
xor
insb
sahf
dec
fbstp
sbb
and
jl
sti
add
mov
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
jmp
into
aad
aad
into
push
imul
inc
out
aaa
jo
jle
enter
movsb
cmp
push
decb
and
mov
mov
test
jb
arpl
cmp
shlb
push
arpl
pop
push
add
leave
sub
push
push
movsl
xchg
jae
nop
mov
mov
xor
sub
inc
std
aas
data16
sbb
shll
push
in
pop
icebp
sbbb
mov
insl
xchg
test
sahf
sub
ljmp
lock
cli
jl
lret
cmpsl
cmpsb
subb
jg
mov
push
int
dec
lods
or
add
dec
mov
mov
rcr
loopne
xor
mov
stos
ljmp
shll
adc
jb
in
or
mov
xchg
js
jnp
das
inc
pushf
pop
jb
and
in
jno
xor
pusha
push
sbb
mov
hlt
or
mov
iret
aam
xchg
fwait
pop
jge
push
idivl
jl
insl
loop
inc
adc
mov
lea
mov
push
adc
mov
push
add
sub
lret
inc
in
mov
lods
pop
jp
cli
gs
jae
sub
jg
mov
jle
mov
repz
jb
ss
mov
stc
inc
out
cmp
push
fiadds
sub
cmpsb
flds
ljmp
pushf
dec
sub
repz
jmp
scas
push
fimull
sbb
jle
std
inc
sub
adc
add
pop
xchg
mov
sub
adc
push
push
adc
orb
lods
lmsw
inc
mov
cmp
jecxz
mov
lret
add
in
cmp
xor
xor
add
jbe
movsl
inc
xlat
inc
xchg
add
mov
sbb
test
loop
mov
icebp
mov
adc
int
add
imul
cmp
arpl
pop
adc
mov
ret
sahf
jbe
mov
add
in
push
lcall
cmp
idivl
cmp
pop
cmpsl
bound
dec
jmp
dec
outsl
adc
cmp
inc
mov
cli
adc
cmpsl
sahf
mov
int
ds
sbb
dec
and
scas
mov
lcall
inc
pop
test
lods
jle
xor
pop
pop
outsb
xchg
ret
dec
fimuls
int
jle
add
lcall
imul
outsl
aam
mov
or
inc
mov
fnsave
jb
pop
repnz
test
push
adcl
push
imul
aaa
adc
sub
sub
pushl
loope
test
jmp
push
adc
adc
jle
test
mov
add
fbstp
sbb
jb
inc
mov
ss
imul
sub
pusha
sarl
lock
adc
jp
std
mov
xor
mov
movsb
pop
popf
mov
inc
cmp
and
dec
inc
data16
out
subb
outsl
add
jne
mov
push
cmpb
inc
gs
ss
or
orb
sarb
or
xchg
pop
call
xchg
fstl
push
lret
mov
lods
ret
sbb
jno
pusha
aaa
mov
cmpsl
mov
push
add
ljmp
enter
clc
shrl
fidivl
shr
pop
aam
dec
mov
sbb
int
dec
cmc
inc
ret
mov
xor
push
fistps
jne
cmp
out
insb
fmuls
push
lea
push
lcall
pop
mov
inc
mov
lcall
fs
icebp
mov
lret
or
int3
jne
popf
xchg
mov
insl
sbb
adc
or
add
rol
push
aam
inc
out
jns
ja
fnstsw
dec
and
jg
pop
in
or
xchg
mov
imul
xchg
xor
fnsetpm(287
enter
lret
lock
inc
mov
aaa
jl
sub
add
fcoms
testb
jmp
cmp
pop
fwait
dec
inc
int3
fidivrl
jmp
ss
inc
dec
std
cltd
xor
xchg
mov
jmp
cmp
sarl
xchg
pop
add
cmp
enter
lods
mov
shll
ror
mov
xor
cltd
cmpsl
jecxz
jl
lods
stos
push
sbb
fstps
sub
inc
test
mov
clc
lock
in
xchg
pop
inc
test
ret
sub
dec
ret
fisubrl
add
sbb
inc
inc
add
inc
sbb
imul
cmp
insl
lahf
push
in
mov
repnz
mov
mulb
and
leave
lcall
fstpt
sub
dec
jge
push
stc
xor
sbb
adc
lea
arpl
stc
mov
xor
lcall
pop
jp
sbb
popf
enter
pop
xchg
push
cmp
jnp
jns
or
in
sub
cmp
dec
arpl
aaa
jbe
daa
dec
jnp
sbb
jae
pop
sahf
sbb
push
push
rorl
int
jo
xchg
aaa
das
shl
cld
lock
mov
mov
push
imulb
rcrl
pop
in
xchg
pusha
mov
add
fadds
cwtl
in
push
adc
into
push
xor
or
stc
out
fs
xor
cltd
xchg
cmovo
rolb
dec
popa
pop
adc
mov
fs
negb
imul
inc
cmp
add
mov
or
and
push
push
mov
jg
mov
and
mov
dec
sub
daa
inc
and
inc
sbb
mov
jo
movsl
add
arpl
es
out
bound
mov
pop
fldt
xchg
jmp
mov
icebp
adc
mov
jne
inc
aaa
dec
fs
rol
sti
jb
xchg
xchg
cmp
mov
out
cmp
or
aam
les
dec
nop
push
and
sbb
mov
aas
sbb
out
cmpsb
ds
sub
inc
mov
xchg
inc
pop
rclb
or
mov
popa
int
gs
popa
push
lock
scas
inc
icebp
jmp
xor
jno
lret
sub
mov
jg
sbb
jmp
data16
loope
jmp
pop
imul
movsb
xchg
rcrb
ljmp
or
pop
jne
cli
std
lret
lret
in
dec
cmc
mov
clc
inc
jmp
cmc
adc
int
mov
aad
in
ja
and
es
dec
loop
pop
push
xchg
mov
out
call
cmpsb
repz
fidivrl
lods
and
sbb
lahf
adcl
pop
mov
bound
pusha
sarl
sub
push
imul
jecxz
push
hlt
mov
addb
lods
dec
sbb
dec
ret
cmp
sub
mov
stos
insl
out
or
mov
pop
mov
or
xchg
mov
jl
ss
mov
xor
mov
push
in
dec
or
js
adc
lock
bound
pop
fucomp
jno
xchg
das
aaa
mov
leave
repnz
adc
jl
or
jmp
ja
sub
inc
data16
xor
test
out
or
push
adc
cmp
std
test
ds
outsl
add
popf
enter
aam
add
scas
push
xchg
fs
sbb
jns
adc
lea
mov
jl
and
sub
add
mov
inc
inc
aas
mov
xor
xchg
imul
cmp
xor
xchg
push
mov
and
jo
push
or
es
dec
lea
cmpl
add
shrl
push
dec
iret
das
into
and
jns
pop
mov
ss
sub
dec
bound
xor
add
jmp
rol
rcr
rcr
lds
lahf
cmpsl
mov
pop
mov
enter
add
das
mov
in
pop
and
mov
add
push
aaa
ror
hlt
shl
fidivrl
ss
out
adc
bound
enter
jmp
and
ds
aas
jmp
and
push
push
pop
cltd
add
rcrl
movsb
fs
or
ja
adc
mov
push
loop
es
fildll
lods
cmp
and
scas
call
jbe
or
xchg
out
in
jge
in
enter
pop
loope
imul
addb
mov
jge
mov
jmp
add
stos
dec
shlb
stos
pop
mov
xchg
sbb
cmp
add
bound
push
lods
test
hlt
adc
xor
out
or
repnz
xchg
shll
push
dec
pop
pop
sub
push
jne
dec
dec
ret
pushf
adc
pop
inc
add
mov
iret
xchg
test
sub
lahf
jl
push
mov
ja
jle
fnsave
sub
lea
xor
cwtl
mov
xor
lods
mov
pop
dec
dec
js
sbb
jp
mov
mov
mov
xchg
or
popw
fiadds
adc
mov
aaa
mov
push
adc
cs
xor
xchg
shrb
loop
sbb
inc
pop
ficoms
cmpb
fsts
lea
roll
push
xor
cld
dec
xchg
mov
cld
fsubr
sub
test
repz
add
pusha
cwtl
dec
pop
insl
roll
and
push
jp
ret
or
pop
dec
jl
cmp
jmp
ljmp
sti
nop
pop
pop
jnp
mov
mov
pushf
stos
push
inc
test
mov
cltd
mov
je
je
ja
into
hlt
dec
insb
fstpt
mov
sub
int3
js
pop
rclb
cmpsb
xor
xor
outsb
in
cwtl
inc
fidivs
mov
or
pop
fisubs
cld
nop
push
cwtl
movsb
lds
pop
dec
mov
xchg
das
mov
mov
adc
icebp
adc
and
adc
fnstsw
sbb
push
push
pop
sub
jl
aam
out
loope
aas
add
add
into
jecxz
push
xor
mov
in
jg
in
dec
out
push
push
cmp
pop
and
xchg
push
jns
stos
ret
cmc
es
pusha
sti
jge
xchg
push
lahf
shll
popf
movd
inc
adc
push
mov
shlb
dec
mov
mov
xchg
add
pop
nop
and
test
sahf
and
jge
dec
das
push
jns
adc
sub
jg
testb
lods
fwait
xorl
jp
add
inc
inc
mov
sub
sbb
into
mov
mov
icebp
xchg
pop
jmp
das
into
hlt
pop
adc
aam
movsl
inc
pop
jo
lret
cmp
xchg
out
in
scas
xor
cmc
push
lcall
xor
or
ss
or
lock
mov
mov
bound
pop
fcomip
dec
add
xchg
mov
add
loop
daa
xor
jg
aaa
out
mov
arpl
ds
sbb
inc
sti
mov
call
pop
aad
inc
sbb
outsl
incb
out
sti
dec
sub
mov
cmpl
adc
daa
hlt
movsb
mov
fidivrs
xchg
cli
fwait
adc
inc
decl
rcll
decl
fdivrs
push
dec
dec
mov
mov
ds
inc
xor
lea
pop
pop
aaa
push
dec
dec
mov
and
lret
nop
add
cmpsl
cmp
and
scas
lcall
adcl
sbb
xor
sbb
orb
loope
scas
daa
sub
pop
jb
outsl
test
cmpsb
dec
jno
popl
rclb
outsb
adc
xchg
mov
lea
jmp
int
int
shrl
mov
ret
enter
into
data16
test
pop
loope
push
sub
dec
pop
xchg
in
jle
jb
test
fbstp
mov
cli
and
pop
ss
sub
ds
inc
pop
cmpb
pop
add
pop
outsl
cmpsb
jo
add
daa
hlt
push
push
dec
loop
pop
movsl
sub
ror
mov
lahf
sub
jmp
scas
and
jg
mov
xchg
nop
pop
sahf
xor
mov
divb
nop
mov
and
push
bound
xchg
push
fdivrs
fiaddl
or
mov
xchg
ss
adc
mov
cmpl
xor
cmpsb
rorb
lret
add
push
sahf
enter
cmp
ret
clc
in
ds
ret
insl
xchg
and
sbb
fnstsw
sbb
pop
hlt
pop
pop
xchg
hlt
sbb
inc
push
inc
cltd
adc
in
jb
sbbb
leave
pop
and
mov
lcall
mov
mov
xor
cmpsb
xchg
cltd
or
arpl
push
sahf
in
loop
insb
mov
pop
cwtl
inc
js
dec
repz
ret
fwait
movsl
cwtl
insb
fnstsw
sub
and
es
or
dec
test
jbe
and
ja
and
add
mov
push
jae
jmp
add
xchg
les
jge
xchg
cmpsb
jnp
rolb
in
jne
adc
enter
adc
adc
push
fdivrs
call
in
enter
inc
cmp
mov
loopne
loope
mov
dec
pcmpeqb
lods
and
fnstenv
decb
popf
fisttps
xchg
xchg
nop
jge
adc
push
test
aaa
xchg
fbstp
ss
and
ret
pop
sar
sbb
hlt
inc
xlat
lds
in
jle
shlb
jb
lret
es
push
xchg
mov
dec
add
and
fs
jae
test
insl
mov
pop
push
ret
add
aas
mov
push
push
mov
pop
fsubl
pop
daa
std
pop
cmpsl
loopne
jns
sub
mov
cmpsl
mov
adc
imul
scas
ljmp
inc
popf
inc
mov
push
and
and
jge
inc
pop
pop
clc
lcall
and
mov
adc
jbe
and
jp
stc
pushf
std
add
dec
out
lds
jne
dec
pop
xor
rolb
xor
jnp
std
clc
ficomps
loopne
cmp
std
xor
mov
or
dec
xor
lods
inc
and
push
xchg
cltd
enter
push
sbb
sbb
jb
inc
or
mov
outsb
mov
into
arpl
jle
push
dec
dec
lret
shr
sub
lods
lds
sti
movsl
mov
out
sarl
mov
or
mov
dec
inc
shl
push
dec
lahf
inc
push
mov
popa
test
mov
repnz
sub
pusha
mov
lock
jne
jo
scas
js
scas
bnd
test
cs
mov
shrl
fcmove
test
sub
stos
mov
ss
or
mov
dec
aam
jecxz
add
jle
xchg
sbb
sub
xchg
pushf
and
and
mov
in
jnp
into
and
lods
idivl
inc
testl
mov
mov
shlb
mov
jmp
lret
out
loope
sbb
sbb
mov
fndisi(8087
cwtl
cmc
adc
push
mov
mov
lds
pop
xchg
in
pop
iret
les
insb
mov
ficoml
ret
fistl
mov
mov
mov
orb
sarb
pop
jp
std
push
sbb
lock
lret
mov
lret
cmp
cmp
rcl
inc
jl
jle
enter
mov
cld
xor
mov
test
repnz
jmp
insb
push
push
lahf
in
call
ret
xchg
sbbb
pop
shrl
sub
jmp
mov
mov
and
adc
adc
add
aad
mov
jp
iret
jmp
add
into
outsl
int3
int3
jge
xlat
out
mov
imul
dec
lret
test
mov
dec
push
jmp
addr16
mov
xchg
insl
push
jge
mov
push
insl
outsl
mov
inc
dec
sbb
loopne
popf
jns
std
and
loop
test
sub
out
cwtl
fnstenv
sbb
mov
aam
bound
mov
dec
fs
outsl
add
adc
or
ret
iret
std
xor
adc
dec
scas
xchg
cmp
cli
mov
sar
aaa
popf
insl
dec
cmp
mov
rol
in
aaa
sbb
dec
xor
gs
aad
or
mov
inc
hlt
int
and
mov
je
dec
movsl
out
ja
negl
cmp
int3
mov
movsb
stos
mov
orl
xlat
mov
lock
cs
adc
xor
enter
popa
aam
sub
cltd
push
xor
hlt
pusha
outsb
sbb
icebp
out
cmp
ss
xor
jo
mov
inc
add
mov
or
xchg
mov
push
outsl
aad
int3
aas
sub
in
adc
mov
inc
fs
cmp
and
or
and
jbe
call
icebp
fcoml
sub
nop
cwtl
xchg
daa
mov
outsb
ds
sbb
xor
imul
sbb
mov
jecxz
sbb
and
pop
rorw
mov
in
mov
iret
pop
or
pop
outsl
dec
adc
loopne
xchg
fwait
jo
data16
jge
add
dec
ss
cwtl
xchg
icebp
push
inc
std
push
xor
cmp
test
inc
lcall
jecxz
xchg
add
add
shlb
hlt
pop
leave
sbb
jno
mov
cltd
stos
leave
jl
out
dec
push
jnp
xorb
mov
or
pop
and
rol
mov
sbb
push
cmp
or
inc
push
xchg
cmpsb
daa
inc
and
adc
imull
jecxz
lds
clc
xchg
shll
pop
jg
mov
push
mov
sub
mov
mov
sbb
aas
into
cs
lods
nop
mov
xchg
mov
sub
les
dec
xchg
hlt
stc
scas
orps
out
nop
out
cmp
cmp
aas
bound
mov
mov
adc
jecxz
mov
cmp
divl
inc
sbb
loope
push
xor
jo
push
loope
mov
bnd
sar
sub
adc
xchg
pop
mov
ficoms
push
ficompl
and
push
xorb
stc
scas
iret
fwait
bnd
ret
shrb
mov
lcall
sub
and
imull
add
mov
std
cmp
fists
rcrl
cltd
dec
sub
add
mov
lret
pop
repnz
inc
mov
adc
cld
xor
ret
sub
lods
pop
push
inc
scas
mov
mov
mov
mov
cld
xchg
pop
xor
push
jbe
mov
lahf
outsl
dec
mov
ret
sub
dec
dec
xor
mov
cmc
pop
adc
sub
jge
je
adc
mov
sub
adc
gs
inc
push
cmp
xor
xchg
mov
xor
mov
inc
insb
shl
pop
xor
mov
scas
fsts
repz
xor
jmp
mov
fs
es
std
jmp
ss
dec
sti
adc
mov
loop
fcomi
paddd
popa
out
mov
cmp
cltd
in
jle
push
pop
mov
data16
add
aam
ret
leave
hlt
lcall
lret
jle
enter
aaa
add
sub
sub
pop
sub
gs
js
test
push
mov
das
push
dec
push
push
fs
sbb
mov
xlat
lcall
test
lret
inc
add
mov
pusha
push
loope
jmp
mov
out
adc
pop
ror
sbb
lret
or
xorb
adc
out
or
mov
push
movsb
mov
sub
loop
push
fsubrp
movl
in
push
lds
mov
add
sub
mov
movsb
mov
pop
add
push
adc
rorl
sbb
subb
addb
jmp
mov
jo
out
sbb
mov
dec
roll
inc
jo
xchg
cmp
xchg
out
fwait
outsl
and
test
pop
lods
int3
cwtl
out
ljmpw
stos
clc
xchg
fists
push
xor
xchg
lock
dec
loop
loop
mov
inc
outsl
or
scas
sub
fcomip
mov
push
mov
popf
mov
scas
inc
jns
aam
inc
in
enter
jnp
arpl
lret
gs
cmp
mov
cwtl
cmp
outsl
push
sub
dec
mov
adc
inc
pusha
add
insb
pop
mov
lcallw
xor
jmp
stos
pusha
mov
mov
mov
lret
and
cs
and
xchg
cbtw
xchg
nop
sbb
or
mov
add
stos
pop
and
pop
mov
sbb
pop
shr
sub
lcall
dec
je
sar
pop
mov
sbb
in
icebp
jecxz
mov
push
lock
sbb
mov
cwtl
or
cmp
sti
nop
jl
xchg
mov
imul
dec
cmpsl
jp
mulb
inc
test
mov
cmp
adc
outsl
shrb
psubusb
jp
pop
scas
jno
push
mov
test
mov
adc
addr16
into
lods
fwait
out
sub
popf
icebp
push
addr16
out
test
cli
cmp
adc
ret
xor
lods
or
xor
add
and
test
push
cmpl
sti
pop
xor
lods
push
pusha
js
fcompl
dec
loope
aam
and
mov
xchg
aas
lcall
call
dec
xchg
xchg
dec
std
ror
loopne
aaa
in
cs
adc
adcl
fimuls
fcmovbe
jb
scas
mov
mov
push
xchg
pop
inc
inc
andnps
das
out
stos
mov
ja
sub
xor
inc
movsl
and
mov
test
inc
cmpsl
lods
loope
sub
xchg
push
lcall
movsb
sti
and
addr16
xorb
jge
lds
mov
decb
ror
or
xlat
sub
int3
cmp
jecxz
es
push
mov
sub
jmp
inc
mov
sub
ja
pushf
mov
fisubs
pop
popa
repnz
push
adc
rorl
dec
popf
loopne
mov
or
rcrl
outsb
pop
sbb
or
das
cmpsl
and
std
push
cld
out
adc
mov
fsts
dec
cmp
in
aaa
in
fwait
inc
pop
call
or
shlb
jg
ror
gs
scas
scas
add
in
dec
adc
jbe
les
push
lods
push
out
fstpt
shrb
lahf
xchg
and
testb
dec
jne
dec
inc
mov
xor
sbb
pop
inc
jbe
add
jnp
sbb
icebp
data16
lea
movsl
outsl
mov
inc
pop
aad
lcall
insb
cs
mov
sti
into
cli
andb
leave
fwait
sbb
jmp
ja
and
mov
xor
inc
mov
inc
jmp
xchg
cmpsb
imul
sub
xor
xchg
and
scas
aad
je
mov
jno
mov
mov
mov
jmp
ror
les
sub
stos
dec
and
jle
add
adcb
jmp
push
mov
movsb
cmpb
push
jae
mov
in
xchg
mov
lea
xor
sub
fldcw
sbb
adc
scas
xchg
sub
mov
push
mov
mov
hlt
jnp
cmpsl
ret
xchg
ljmp
pushf
test
fwait
xor
and
imul
test
inc
inc
jge
pop
jae
gs
shlb
mov
mov
shlb
cs
mov
sbb
sub
mov
mov
fsubrs
lcall
insb
lods
aas
addr16
add
dec
test
pop
fwait
mov
ret
ds
es
or
into
les
lods
dec
pusha
cmc
adc
inc
or
inc
adc
out
in
or
cmp
rcrb
add
outsb
shrl
sub
jp
fistl
mov
xchg
fnstenv
jae
stos
jns
fxch
sbb
jae
push
movsb
adcl
push
mov
push
call
dec
add
pop
jo
push
mov
out
aad
or
fnstsw
aam
inc
mov
mov
xor
jbe
fistps
or
call
xor
fsubl
in
sahf
cli
fwait
push
mov
pop
sbb
fstpl
cmp
je
enter
mov
inc
inc
cltd
adc
sub
int3
int3
adc
fcom
cmp
mov
int3
psubsw
xor
and
mov
pop
sub
dec
fiadds
jae
or
jl
mov
mov
or
fimuls
mov
in
test
icebp
test
dec
mov
and
insl
xchg
dec
repnz
fstpl
xchg
push
sub
iret
out
test
jge
imul
iret
pop
aas
in
mov
jl
xor
and
xor
pop
jle
cs
test
lahf
jnp
daa
push
cmpsl
aas
fsts
imul
in
cmp
aam
fidivl
mov
loop
inc
ss
fmulp
lcall
mov
testl
mov
dec
add
xchg
pop
int3
inc
sub
rolb
push
lods
jecxz
sub
jb
popf
and
cltd
andb
and
mov
pop
and
jle
mov
or
lcall
inc
addl
repz
dec
jmp
ja
mov
sarb
loop
cmc
aam
clc
and
aad
das
push
out
popf
push
shlb
mov
les
mov
pop
loop
cld
imul
xchg
mov
adc
mov
xchg
jae
addb
sbb
fisttpll
loopne
mov
dec
rol
mov
mov
les
or
pop
pop
das
dec
jb
lods
cmpsb
clc
loopne
cs
push
lods
push
outsl
xlat
cmp
sti
dec
cmc
or
and
push
mov
mov
jnp
movsl
in
jae
hlt
aam
mov
cmp
add
movsb
jge
mov
mov
testb
iret
inc
cltd
or
sub
test
or
mov
and
lock
jmp
or
sbb
sbb
test
nop
jg
xchg
subb
sbb
jns
sub
loop
call
fsubrl
arpl
imul
daa
push
movsl
adc
test
dec
dec
adc
add
xor
mov
or
cmp
popf
add
xor
cmp
ss
bound
xchg
dec
sub
outsb
add
sbb
add
stc
dec
sub
pop
shlb
stos
int3
jmp
rcll
scas
sbb
es
push
mov
test
dec
outsb
ss
lea
cld
call
inc
repz
fdivrs
add
sbb
iret
es
sbb
inc
mov
dec
clc
xor
add
mov
jmp
aas
int
cmp
lea
dec
divb
push
sarb
enter
fistpll
popf
das
fwait
sub
push
fwait
xchg
in
std
sbbl
push
inc
fidivrs
test
sbb
popa
inc
cmp
out
mov
roll
imul
neg
mov
jge
mov
dec
adc
stos
cltd
push
arpl
push
inc
sbbb
adc
lock
mull
sbbb
fwait
lods
lret
mov
sub
xlat
jp
pop
fs
je
out
addr16
pop
mov
enter
fwait
dec
mov
mov
push
mov
adc
ss
mov
jae
ret
push
sub
mov
shl
aad
push
and
jg
gs
fiadds
dec
movsw
fstl
mov
mov
xor
pusha
push
and
cmp
push
notb
pop
cmc
mov
ljmp
adc
cmpsb
fsub
xchg
cmp
mov
lods
pop
frstor
popa
pop
inc
jne
inc
je
in
dec
cmp
ds
push
movsl
mov
mov
negl
xchg
imul
int3
push
stc
add
jle
jbe
xchg
cmpsb
xchg
idivl
stos
sbb
sbb
jnp
clc
or
inc
test
les
adc
dec
mov
and
jmp
mov
lcall
sbb
inc
lock
and
adc
fwait
mov
fwait
xchg
outsl
mov
jl
mov
xor
test
imul
sbb
xor
mov
mov
test
stos
adc
sbb
sahf
and
dec
push
lcall
pop
outsb
pop
inc
fsubrl
mov
dec
lds
or
std
dec
push
js
aad
push
dec
pop
iret
xor
test
mov
dec
push
std
mov
sbb
xchg
mov
pop
push
loopne
cmp
push
jo
gs
mov
jp
icebp
mov
aaa
sahf
lds
mov
daa
test
es
cmp
loop
push
jb
cli
insl
pop
out
dec
ds
mov
inc
arpl
int
jae
mov
inc
dec
in
mov
loopne,pt
pop
mov
xchg
int3
aas
scas
mov
fdivrl
add
mov
xlat
ret
xchg
jecxz
sbb
adc
mov
sbb
imul
sub
mov
fcomps
or
shrl
add
inc
push
sub
push
insl
or
xor
negl
mov
sub
adc
out
or
lea
sbb
add
fiadds
dec
jno
int3
and
movsl
mov
fcomp
test
in
outsl
dec
mov
insb
pop
pop
inc
jo
add
pop
lods
cli
push
repnz
pop
loop
cld
mov
dec
loope
test
push
aam
rcrb
inc
and
rorb
jns
or
clc
int3
inc
mov
mov
push
mov
fisubs
jnp
jge
push
and
notb
dec
or
adc
ficompl
addr16
push
jns
shlb
xchg
push
add
sbb
mov
dec
inc
fisubrl
pop
and
jecxz
jnp
cli
inc
xlat
sahf
dec
xchg
jge
mov
inc
call
sub
int3
sub
mov
aad
xchg
je
mov
dec
pop
stc
data16
inc
movsl
sub
out
push
pop
push
nop
insb
bound
insl
cld
daa
sbb
test
rorb
nop
iret
aad
insb
int
or
hlt
jne
add
insl
adc
add
aaa
lods
mov
ss
cmp
push
mov
mov
jo
jnp
fcomip
outsb
jl
sub
fdivl
and
add
inc
ja
int
adc
mov
push
dec
fldcw
in
pop
filds
inc
fmull
add
mov
jmp
lret
rcl
fcmovne
aad
dec
dec
mov
inc
cmpb
add
sbb
in
lods
adcl
dec
lds
mov
cli
mov
iret
int3
push
popf
scas
fistpll
sub
incl
cmp
in
xor
xor
inc
pop
mov
add
fs
push
pop
mov
dec
push
push
notl
push
enter
xchg
in
or
or
std
mov
jmp
mov
mov
inc
sub
or
sub
xor
mov
loopne
jecxz
jl
and
aam
dec
push
add
dec
pop
scas
lods
dec
jno
out
test
shl
cmp
std
gs
nop
jg
jno
je
push
notl
sbb
cmpsb
adc
je
rorl
inc
fiaddl
shr
and
sbb
sbb
hlt
adcl
syscall
shr
xchg
cld
pop
mov
sub
neg
dec
lods
xor
xchg
mov
mov
popl
filds
jmp
outsl
arpl
fmull
pop
rcrl
in
shl
pop
fsubrl
bound
shlb
mov
xor
popa
mov
jg
adc
adc
in
jnp
and
xchg
sbb
xor
lcall
cmp
idiv
mov
shlb
add
inc
test
cmp
dec
ja
ret
jne
aaa
or
fiaddl
leave
jbe
jno
mov
inc
or
lret
ret
push
jge
and
jmp
jo
pop
xor
mov
lea
repz
notb
adc
fiadds
push
sti
pop
ss
xchg
xchg
mov
jo
fsubl
push
hlt
xchg
int3
cmp
inc
daa
addb
sub
jb
pop
pop
mov
jge
xor
lcall
lret
bound
xor
sbb
lret
mov
and
inc
fildl
dec
cli
jmp
es
dec
ficoms
lods
lret
repnz
mov
enter
pop
sub
int
mov
pushf
and
xor
sub
sub
sbb
push
stc
pop
jbe
inc
negl
mov
push
pushf
push
mov
push
add
pusha
outsb
insb
aad
in
adc
pop
aaa
fistpll
cli
sub
popf
push
imul
jbe
mov
or
xchg
cmp
sub
loopne
daa
sub
jmp
popa
shl
in
pop
out
int3
jb
fwait
or
jb
stos
pop
xor
xor
js
jnp
movsl
test
testb
jle
dec
sub
xor
lcall
movsb
repz
pop
add
xor
jecxz
clc
push
aas
int
xor
cld
and
sarl
lods
sub
std
outsl
sbb
mov
push
jg
xchg
xor
jno
push
and
ret
xor
in
xchg
out
fdivrs
inc
sub
cwtl
jle
imulb
std
sbb
push
aad
cmp
pushf
repnz
popa
push
xchg
popa
pop
push
mov
cmp
call
ja
pop
test
and
adc
lods
in
lods
inc
push
cs
not
xchg
aas
mov
fdivrl
push
adc
jecxz
das
in
xchg
mov
and
clc
iret
mov
jo
cld
pop
movsb
and
lds
lret
adc
jecxz
cmp
pop
add
in
adc
xor
pop
fs
mov
lcall
add
jmp
test
imul
cltd
add
dec
adc
loope
popf
jbe,pt
ss
in
sub
pusha
jno
sub
mov
test
stc
inc
mov
hlt
adc
jb,pt
pop
xchg
mov
rorl
into
sub
mov
mov
call
stos
inc
mov
sbb
sub
repz
jnp
movl
and
push
mov
or
mov
das
push
xor
push
icebp
lret
push
mov
stos
nop
cmpsl
das
mov
test
cmpsl
repz
sar
sub
add
pop
pop
sbbl
es
jmp
lret
aas
enter
cmp
popf
cmp
jle
enter
loopne
xchg
fwait
jmp
adc
out
dec
ret
push
add
sbb
adc
xchg
rcrb
add
mov
sarb
cmpsl
xor
int3
js
mov
loopne
sub
imul
aas
mov
sbbb
push
scas
mov
ret
inc
js
mov
pop
push
mov
xchg
lret
pop
push
hlt
test
rorb
inc
fucomip
xchg
movsl
mov
adc
pusha
mov
clc
xor
in
push
xchg
imul
jno
aaa
jbe
mov
mov
xor
inc
lret
push
pop
add
add
mov
lock
adc
xor
xchg
cltd
in
jg
inc
out
pop
fcomps
mov
filds
inc
ds
or
lret
jns
inc
sbbb
sbb
bnd
or
xchg
mov
push
movsl
rclb
mov
mov
into
cmpsl
pop
pop
iret
and
sahf
stos
inc
push
pop
cs
ja
fwait
lea
cwtl
lret
shll
adc
sub
addl
mulb
cmpsb
adc
xchg
pushf
and
xor
sti
mov
aaa
fstps
xlat
mov
mov
or
jecxz
movsb
push
mov
cs
sbb
out
jmp
iret
ljmp
cmc
cmpsb
xor
mov
pop
mov
inc
jg
dec
dec
inc
or
mov
push
loope
icebp
cs
xchg
dec
dec
mov
lock
and
sarl
pushf
aad
sbb
stos
cmp
and
in
jp
xchg
lret
cwtl
or
cmpsb
hlt
repnz
es
in
aad
dec
inc
mov
lock
jecxz
popa
push
loop
or
es
ja
stos
clc
xchg
mov
dec
stos
les
pusha
jge
dec
mov
outsb
divps
cltd
mov
pop
inc
dec
xor
mov
mov
xchg
xor
lcall
jp
cli
ljmp
ret
subb
in
sub
add
int3
call
mov
xchg
fildl
sbbb
push
inc
sbb
mov
inc
add
in
pop
adc
dec
cld
outsb
adc
sub
scas
or
mov
inc
push
mov
lea
mov
or
jp
stos
dec
xor
mov
stos
inc
fidivrl
sti
adc
gs
loopne
fnstcw
ljmp
push
call
sarl
inc
test
sbb
dec
ss
testb
aam
pusha
jne
outsl
xchg
cmp
jp
pop
fisubs
pop
lcall
pop
clc
jp
mov
dec
push
ljmp
or
add
add
jle
in
jg
mov
inc
adc
fcomps
add
push
jg
xor
mov
fwait
sahf
out
dec
nop
mov
sbb
mov
stc
es
inc
lret
jmp
lcall
push
and
inc
xor
into
push
jecxz
in
cmc
pop
lods
or
pop
pop
int3
sahf
ret
fwait
hlt
out
xor
sbb
in
push
xchg
iret
mov
insl
movsl
pop
adc
outsb
imul
and
shlb
sub
in
ret
mov
les
ja
or
cmpsb
inc
frstor
push
fistpll
xchg
out
inc
xchg
push
sub
leave
xor
jmp
cltd
add
sub
mov
mov
pop
int
xchg
fidivs
sti
xchg
or
adc
jbe
cwtl
rcr
dec
movsl
jbe
xor
loope
lcall
into
cmp
mov
adc
jns
inc
lcall
and
out
icebp
lea
lret
cmp
sbb
inc
out
xor
lahf
dec
popa
push
mov
loopne
loopne
rcrb
outsb
xchg
push
adc
scas
aad
mov
jmp
into
ret
fmul
loop
shl
sbb
dec
push
jl
jle
enter
xor
cmp
cmp
lahf
mov
lret
cmpsl
push
inc
push
les
fnstenv
or
mov
pop
mov
or
ds
jge
leave
mov
inc
in
jg
adc
sub
sti
pop
sub
data16
add
adc
xchg
inc
inc
stc
dec
cld
faddl
dec
test
xchg
jno
inc
test
in
std
mov
push
in
push
sbb
cltd
add
sub
lret
add
je
or
or
ret
mov
and
popa
sub
addr16
addl
and
call
popf
inc
les
mov
test
sub
js
push
jo
push
rcr
push
stos
lahf
movl
mov
mov
jb
jae
rol
stc
pop
dec
frstpm(287
push
sbb
push
subb
jnp
fldcw
pop
pop
adc
int
sub
mov
fistpl
xchg
pop
mov
popf
int3
ss
jnp
push
rolb
xchg
xchg
fistpl
xor
jno
paddusw
cld
jbe
mov
popa
and
push
aam
repz
shll
call
int3
xchg
loopne
cli
inc
mov
pop
xor
sti
aad
inc
sub
pop
cmp
inc
repnz
pop
stos
lret
jle
add
push
or
imul
lods
xchg
rcr
mov
int3
and
js
mov
rcr
je
sbb
dec
adc
pop
push
ret
dec
add
mov
jmp
mov
pop
sub
pushf
pushf
sub
xchg
por
das
lret
mov
int
jns
jg
das
xchg
cltd
popf
pop
mov
push
add
aas
arpl
push
mov
jge
addr16
mov
mov
in
subl
sub
lock
bound
push
pop
push
mov
and
cmp
jmp
lcall
jbe
das
call
movsb
ret
sub
inc
std
adc
outsb
jne
cmp
mov
mov
das
add
jnp
inc
add
lods
add
out
jns
push
cmp
dec
jg
vaddsubps
jmp
insl
sbb
pop
aam
sub
push
xor
sbb
sbb
aad
dec
adc
rorl
mov
lcall
or
cmpsl
mov
push
mov
movsb
lea
mov
rcrb
push
xor
jnp
xor
mov
test
pop
push
movsb
mov
ja
adc
inc
dec
ret
clc
mov
jmp
mov
and
or
jl
test
ljmp
imul
or
jmp
jo
stos
pop
aas
jg
sbb
add
ljmp
popa
js
dec
mov
push
in
push
dec
mov
fsubrp
xchg
jmp
repnz
aam
das
sub
in
xor
hlt
dec
jg
out
andps
adc
inc
jb
push
dec
add
gs
movsl
lods
out
jge
push
arpl
cli
dec
fcomp
adc
bnd
btr
mov
mov
cltd
pop
mov
lock
int3
push
fsts
das
mov
repz
pop
out
je
test
pop
and
out
jno
sub
mov
imul
fbstp
xchg
int
test
mov
and
jo
sbb
cmpsl
dec
pushf
or
xor
movsl
gs
enter
xor
and
push
lds
or
mov
sbb
jnp
sub
pop
pop
aad
fstpt
pusha
xchg
adc
xor
lahf
or
xor
dec
mov
insb
ftst
imull
cmp
pop
int3
dec
iret
movsl
push
ds
lret
mov
adc
mov
jmp
cmp
ret
cmp
sub
cmc
sahf
into
loope
jle
add
dec
nop
pop
push
jnp
lahf
repnz
xor
cmp
jae,pt
mov
nop
push
jnp
jb
out
push
ss
sub
pop
mov
cmp
sbb
icebp
xlat
add
fcmovnbe
shlb
pop
jne
lret
pop
shr
and
mov
test
xchg
mov
lods
lea
loopne
jmp
imul
movsl
movl
shrl
insl
addr16
js
movsl
imul
fstpt
les
lods
jp
inc
lods
std
insl
adc
lahf
outsl
lock
cmp
and
cmpsb
xchg
and
mov
das
hlt
fdivrs
xor
aas
xor
or
dec
xchg
inc
cltd
ja
dec
aaa
pop
ja
mulb
mov
stos
daa
jge
sti
sub
popa
popf
sbb
enter
pop
add
test
xchg
ret
sahf
mov
jb
push
mov
or
popf
mov
jge
xchg
xchg
or
mov
dec
lahf
imul
sbb
stos
pop
pop
cld
dec
pop
and
inc
add
repnz
daa
and
dec
xchg
mov
enter
lret
icebp
hlt
xchg
fstpl
sahf
loope
pushf
sarl
roll
sub
cmp
cld
mov
lahf
inc
and
sbb
sbbl
popf
cmp
pop
cmp
in
xor
pop
xchg
inc
or
and
xchg
add
push
int3
or
sbb
adc
pop
es
test
rcrb
xchg
int3
cmp
and
xor
or
ja
cmc
fcompl
push
mov
pop
jge
mov
xchg
fcom
and
jns
cmp
int
mov
xor
lods
sbb
outsb
fwait
out
pop
icebp
lcall
mov
sub
ret
push
or
mov
into
jno
jecxz,pt
sub
cli
fs
xchg
and
test
dec
je
xchg
push
mov
push
js
mov
mov
mov
sub
fwait
movsb
sub
or
gs
fimuls
mov
cmpsl
data16
mov
pop
je
push
cmp
adc
jecxz
daa
adc
cli
out
mov
std
aas
jecxz
testb
les
icebp
cmp
jns
push
xorb
stos
add
push
and
out
stc
insb
adc
stos
std
cltd
imul
repz
test
lahf
mov
lcall
ffreep
test
or
out
mov
and
iret
enter
into
cmp
xchg
jp
fsts
jge
cmp
movb
jecxz
clc
rorl
int3
adc
repz
pop
mov
xchg
pusha
inc
movsl
stos
xor
mov
cmp
push
and
inc
adc
inc
jmp
ja
pushf
icebp
pop
push
push
in
xor
sbb
fwait
sbb
jb
outsl
adcb
pop
lea
mov
std
mov
mov
bound
sti
push
loop
jl
addr16
mov
hlt
xchg
fisubs
pop
push
push
pop
or
xor
sar
inc
in
or
fdivs
pop
adc
fmulp
or
dec
dec
imul
pop
rcr
mov
sahf
movsl
outsl
mov
lret
adc
sbb
mul
mov
xchg
popf
adc
lock
adc
mov
mov
das
cmp
in
loop
pop
mov
sub
mov
cmp
jns
mov
and
lods
outsb
ja
cmp
mov
pop
pop
add
lret
sbb
cmp
daa
ror
push
sub
xchg
mov
jle
mov
mov
cld
je
ror
mov
mov
movnti
mov
aad
aas
lea
xor
cmp
lret
insl
insb
shrb
cmp
scas
mov
mov
jmp
aas
mov
lds
cmp
in
jle
add
hlt
hlt
ret
inc
inc
iret
sbb
ds
push
clc
aam
into
icebp
sub
adc
adc
dec
movsb
mov
in
mov
and
and
ror
or
hlt
fcmovu
jno
fstpl
mov
cmp
and
es
loopne
pop
or
nop
sub
inc
testl
ljmp
outsl
int3
dec
pop
lahf
sar
iret
in
popa
lcall
sub
pop
in
xchg
lods
fcomps
fdivl
mov
xchg
lret
loope
fists
lea
movsb
mov
cmpb
and
mov
jp
test
inc
pushf
sbb
shr
aad
loopne
push
shlb
roll
fisubl
and
add
pop
adc
jle
pop
mov
push
mov
jnp
scas
xchg
mov
cmc
pop
cmp
scas
add
xchg
jb
lret
mov
in
out
scas
xchg
add
or
pop
add
jae
sbb
outsb
int3
xor
xchg
and
add
cmp
movsb
sbb
rorb
cmc
jno
nop
out
into
pop
int3
rclb
icebp
adc
std
cmp
mov
jmp
add
dec
xchg
push
in
test
lahf
push
mov
std
pop
cwtl
xchg
cmp
cmp
cmp
filds
in
iret
lahf
and
push
cmpsb
pop
lahf
mov
je
inc
xlat
jle
sbb
dec
xor
inc
sti
xchg
xor
fstl
int3
and
insb
in
scas
lods
jae
vpaddusw
fdivrl
cli
cltd
mov
mov
lods
pop
push
or
loopne
mov
adc
pcmpeqb
incb
push
xor
and
mov
jecxz
dec
cmp
push
shr
pop
cli
xor
push
xchg
repnz
xor
fsubrs
xlat
mov
jmp
pop
popf
shrl
testl
sub
clc
scas
inc
lahf
fildl
add
mov
pop
and
push
mov
sbb
or
cmp
push
mov
adc
sub
fmul
cmp
add
and
inc
adc
scas
mov
jmp
mov
jp
pop
pop
icebp
outsl
mov
push
pusha
pushf
jb
inc
lahf
in
pop
push
das
push
out
or
stos
jne
mov
xchg
aad
push
jle
xchg
adc
or
push
mov
fcmovb
pushl
cmp
ret
leave
cmp
imul
jnp
mov
lds
inc
fadd
add
sahf
in
roll
lods
test
test
imul
jmp
sarb
or
cltd
jb
jmp
testl
sub
inc
clc
cvtps2pd
cld
jle
add
or
xchg
xor
out
into
mov
xor
xchg
in
stos
fistps
mov
or
repz
push
nop
popa
les
cmp
jne
sub
mov
mov
and
xchg
sti
paddusb
mov
rcl
xor
cmp
dec
bound
rorl
pop
lret
outsl
in
ret
mov
outsl
adc
lcall
aaa
mov
lret
icebp
dec
dec
dec
in
mov
test
dec
je
js
lods
imul
mov
das
pop
cli
mov
lahf
pop
loopne
push
out
out
or
adc
pop
inc
in
sub
lods
jno
cltd
std
pop
push
jns
xor
xchg
sub
das
stc
pop
xor
mov
aaa
mov
scas
jle
movsb
inc
leave
and
pop
mov
xchg
pusha
inc
sub
jnp
mov
idiv
rcll
ds
pop
nop
mov
and
test
ss
pop
iret
cs
stos
xchg
mov
mov
fmull
arpl
pop
jae
lods
dec
cmp
inc
mov
int3
jmp
rcl
iret
loope
jnp
ret
mov
enter
mov
pop
cmp
jmp
push
mov
cli
into
jl
pop
test
cmpsb
and
mov
cltd
mull
jmp
inc
sub
dec
movsb
xor
lds
out
jp
jmp
sub
aaa
xor
iret
ljmp
stos
or
lea
mov
xchg
pop
sub
aaa
mov
imul
jne
mov
inc
jns
push
scas
inc
idiv
mov
mov
daa
xchg
loope
loop
jge
inc
or
cmp
loopne
xor
xchg
sbb
mov
push
lock
int
jns
mov
in
dec
mov
push
xchg
sub
add
orb
cmpl
cmpsb
lock
ja
and
and
ja
loopne
mov
lcall
sti
push
inc
lret
enter
in
adc
sti
ja
pop
xor
mov
insb
add
cwtl
cltd
stos
cmp
lock
dec
bound
aam
sbb
popf
test
xchg
lods
dec
fdivrs
pop
test
andl
imul
inc
pop
bound
in
lcall
dec
lret
arpl
aam
aam
out
sub
inc
lahf
jae
in
pop
bound
cmc
push
dec
mov
xchg
jb
adc
jg
jmp
stos
push
lods
aad
xchg
rorb
mov
or
shlb
dec
push
cs
xor
notl
mov
aad
pop
fcomi
addl
sub
mov
inc
rorb
addr16
insl
aas
out
je
or
mov
dec
in
dec
fdivp
pop
test
pop
jo
inc
shll
dec
sbb
lahf
mov
ljmp
aas
adc
fwait
les
jle
ret
lcall
push
pop
xor
inc
test
xor
mov
loopne
and
jno
out
rcrl
mov
mov
mov
fcomps
in
mov
jmp
dec
rcll
mov
pop
and
popa
test
test
xor
inc
pop
test
inc
loop
int
jecxz
mov
int
mov
icebp
jns
add
mov
fldl
xor
lds
cld
pop
movsb
lcall
cs
daa
xchg
stc
xchg
rol
inc
pop
jge
push
push
mov
pushw
pop
fwait
jp
xlat
cli
fwait
jp
jecxz
call
dec
mov
imul
bound
sbb
push
mov
push
loopne
adc
dec
es
and
pop
sbb
popf
or
mov
mov
aad
push
icebp
ret
mov
mov
fstpt
add
fsubrl
out
test
jbe
cmpsl
hlt
dec
stos
je
sub
cmp
lea
out
mov
pop
loop
sahf
fiadds
jge
outsl
xor
add
dec
jge
add
mov
pop
aam
mov
or
xchg
pop
push
mov
xchg
cmc
popf
xor
frstor
and
rcll
popf
jnp
adc
dec
dec
inc
mov
adc
lods
pop
cmc
dec
dec
push
sub
imul
lcall
mov
std
mov
dec
push
ret
fidivl
cmp
cs
scas
xor
mov
addl
jmp
or
jne
outsl
cmpsl
pop
arpl
mov
inc
ret
lods
divl
pop
xor
sarl
push
idiv
pop
dec
das
mov
add
mov
aas
jb
sub
out
push
cwtl
aam
fimuls
pop
in
dec
testb
cmp
cmpsl
lods
sbb
add
out
andb
jg
jl
cwtl
movsl
jae
in
fisttps
cld
repz
sahf
mov
push
xchg
mov
mov
add
add
iret
xlat
aad
add
mov
add
enter
pop
test
sub
cwtl
adc
pop
cltd
cmpsb
jae
push
nop
lahf
mov
ret
outsb
out
call
jnp
xrelease
movsl
inc
test
sub
mov
or
in
push
testl
sbb
dec
test
inc
jg
cmp
cmpsb
dec
pop
lret
dec
inc
xchg
leave
push
mov
xorl
test
push
or
push
push
imulb
testb
jp
mov
mov
rcl
mov
and
mov
xchg
js
sbb
add
outsl
popa
jl
cmp
sar
popa
mov
lret
mov
nop
mov
inc
rcr
sbb
test
jo
xor
repnz
pusha
inc
pop
mov
add
out
xchg
dec
test
xchg
das
push
add
addl
mov
xor
jbe
imul
or
xchg
lahf
dec
cwtl
loope
adcb
lock
sub
stos
icebp
jmp
fidivrs
leave
iret
sbbl
mov
ja
clc
jb
jne
movsw
orb
mov
ret
rcl
aam
inc
cmp
push
inc
mov
jbe
and
ja
icebp
sub
or
pop
insb
or
dec
jmp
jg
clc
cmc
shrl
clc
loopne
jno
push
nop
rol
ret
sahf
icebp
les
add
es
xchg
xchg
ret
add
or
mov
push
das
mov
aas
hlt
push
or
int3
es
inc
and
lods
test
push
push
fs
imul
sub
into
sbb
adc
je
es
jo
sbb
in
das
and
rcl
jp
jp
outsl
or
lret
in
mov
test
mov
fidivrs
mov
mov
nop
into
fnstsw
push
cmp
jg
jb
add
fildl
mov
dec
fsubl
sbb
movsl
hlt
daa
push
cmpsl
imul
xchg
cwtl
mov
lods
dec
cld
and
xor
inc
ds
sub
hlt
icebp
ss
inc
xor
rol
sub
push
cmp
xchg
sub
xchg
push
lods
loope
js
lock
xor
sub
jo
push
sub
orb
ficoms
loopne
pop
dec
lahf
xor
push
int
lds
and
cmp
xchg
inc
lds
mov
mov
in
sbb
mov
fcmovnu
dec
stos
mov
xchg
add
mov
jmp
sbb
out
pop
jge
jge
dec
out
test
push
pop
push
mov
mov
push
test
cmp
int3
inc
add
fdivrl
mov
cmp
cwtl
jns
aaa
sub
sub
pusha
lcall
insb
inc
pop
cmc
jae
sub
imul
cmc
fadd
jecxz
out
or
mov
xchg
push
cmp
adc
cld
dec
inc
pop
lods
cmc
jecxz
lret
mov
cmp
divb
mov
inc
lahf
cwtl
xor
aas
push
lea
mov
ja
sbb
and
lea
scas
in
pop
mov
dec
pusha
enter
push
xor
out
pop
clc
jb
push
leave
jo
and
dec
xchg
insl
adc
dec
icebp
mov
xor
fldenv
sbb
mov
jg
jno
push
sbb
mov
movsb
cwtl
pop
fsubs
or
outsb
push
out
lret
test
pop
movsl
adc
gs
adc
push
test
ss
mov
enter
int3
xor
cli
lcall
pop
outsl
xchg
clc
pop
lea
push
add
test
and
in
insb
mov
xor
call
pop
sub
cmp
shlb
push
inc
mov
ljmp
mov
jg
in
mov
call
rclb
lret
mov
addb
lahf
rcll
sub
subl
or
shrl
push
lahf
sub
fisubl
scas
jns
jo
div
fnstsw
xchg
sti
xchg
test
rorb
je
lea
push
mov
xor
add
jmp
rol
into
ror
rcl
roll
lcall
add
and
sub
mov
decb
loopne
and
mov
cli
xor
cmpsb
jnp
vunpckhps
lahf
outsl
add
mov
imul
jno
popa
std
mov
movsb
push
jle
aaa
push
hlt
into
psrld
xlat
cbtw
add
ljmp
mov
adc
ja
sbb
push
inc
adc
mov
inc
mov
ss
lods
lcall
cmp
add
clc
pusha
incl
movsb
mov
inc
xchg
rorb
push
in
sub
imul
mov
cmp
imul
notl
mov
push
jnp
aam
scas
dec
adc
std
scas
jne
rclb
jmp
ds
fcoml
jg
outsb
xchg
xor
push
es
lret
jae
xor
bound
outsl
and
stos
inc
out
test
cmp
cmp
mov
adcb
rolb
push
call
jo
cli
repnz
mov
jb
enter
ficomps
mov
adc
cwtl
iret
sbb
and
dec
outsb
mov
xor
loop
mov
inc
jae
xchg
mov
mov
xchg
xor
test
in
imul
dec
in
dec
call
pushf
jg
sbb
sbb
sub
data16
insl
movsb
adc
lods
adc
push
adc
call
dec
cmp
and
gs
inc
xchg
xchg
popf
and
add
in
in
xchg
ja
sbb
mov
dec
enter
mov
daa
lcall
int
fsqrt
sbb
jl
xor
inc
das
jp
inc
nop
adc
and
dec
jp
fmul
cld
mov
andl
adc
xchg
lcall
rolb
cmp
out
das
call
sub
jg
xor
in
adcl
into
loopne
std
aad
sbb
fwait
bound
js
movsb
dec
and
fidivrl
shrl
jns
sub
das
mov
cmp
sub
sbbl
cmp
cmc
test
cmp
aam
loopne
inc
jae
cli
mov
loop
das
daa
out
cwtl
arpl
inc
push
mov
orl
adc
jecxz
xchg
jns
insb
add
jle
iret
jb
sub
scas
sub
sub
push
ret
cltd
push
push
pop
jne
fistpll
icebp
jecxz
jnp
cmp
loope
mov
pusha
add
inc
icebp
cld
inc
mov
mov
inc
dec
pop
cmpl
mov
mov
das
cmp
xor
test
push
mov
mov
shl
jb
mov
ret
pop
lock
shrb
clc
sbb
jae
fstpl
icebp
sti
mov
clc
push
pop
push
mov
lret
inc
cmpsl
xor
je
testl
cld
inc
mov
mov
mov
jb
lock
aam
cmp
ret
outsl
adc
xchg
daa
cmp
insb
mov
cmp
mov
dec
xor
in
lods
cmp
dec
rclb
jg,pt
pusha
pop
adcl
pop
push
xor
rolb
pusha
xchg
pop
shll
aam
popfw
lcall
arpl
add
fisubrl
insb
fwait
int
add
incb
add
xor
iret
fdivs
test
cli
push
loope
or
out
inc
cmp
loope
aad
and
filds
jmp
out
pushf
in
outsb
nop
push
pop
mov
ret
push
push
sub
cmpl
icebp
ror
adc
push
mov
dec
jns
dec
inc
bound
fs
jne
pusha
aad
add
lods
cld
ds
cmp
in
fstpl
cwtl
sub
imul
faddl
stc
pop
pop
push
repz
clc
mov
or
stc
xchg
ret
daa
nop
mov
pop
add
xor
or
mov
jmp
cmp
fcmovnu
shr
addl
jle
add
sbb
dec
out
adc
and
and
dec
test
bound
ljmp
cmp
mov
dec
es
inc
adc
xchg
loop
adc
test
frstor
inc
gs
out
jmp
lahf
xchg
mov
sbb
arpl
test
jae
sub
and
out
jg,pt
pusha
pop
jae
cmpsb
stos
in
ds
jmp
add
pop
or
outsl
push
les
cli
mov
sahf
xchg
cmp
push
les
push
fiaddl
xchg
test
jns
push
mov
push
pop
popf
pop
mov
scas
dec
lea
mov
adc
enter
int
pop
sub
jle
mov
mov
test
aam
cld
xchg
rcl
stos
sahf
jp
pusha
jecxz
jns
in
mov
xor
pushf
xchg
cmp
pop
sti
push
daa
or
lret
mov
mov
cltd
inc
mov
jb
xchg
pushf
enter
push
aam
rclb
pop
adc
jo
adc
in
nop
cld
add
sarb
stc
aas
ret
mov
push
jle
adc
jmp
int3
push
loope
movsl
adc
mov
jecxz
inc
in
fnstenv
popa
inc
and
rcr
pop
add
add
loop
adc
cmp
lret
adcb
and
fistpl
lods
insl
call
pop
roll
cmp
ljmp
leave
and
pushf
mov
mov
cld
push
mov
and
sbb
out
xchg
cs
jecxz
xchg
in
or
clc
mov
cmp
dec
enter
cmpsb
adc
stos
mov
or
sti
test
pop
or
lcall
sahf
out
fcmovne
hlt
inc
mov
sbb
dec
nop
xchg
xchg
xlat
jno
stos
jae
andb
outsl
xor
adc
lock
lahf
adc
sub
dec
rorb
xchg
lret
inc
js
dec
pop
movsl
jecxz
cltd
xchg
adcb
std
fisttpll
xchg
pop
adc
xlat
jl
xor
imul
ret
pop
rorl
mov
pop
cmp
push
jne
sbb
cmpsl
pop
iret
push
dec
jmp
popf
iret
leave
pop
push
adc
inc
mov
sub
daa
pop
adc
pop
fldenv
push
jne
pop
daa
jae
and
fdivl
sti
aaa
int3
xor
pop
xor
add
add
sbb
sub
leave
or
fmuls
jge
cs
cs
mov
cltd
out
xchg
in
xor
cmp
sbb
inc
lods
enter
adc
xor
outsb
pushl
xchg
ret
and
ljmp
in
mov
sbb
xchg
mov
in
aaa
icebp
mov
and
aas
mov
xchg
push
sub
fsubrs
call
jae
cmpsl
loopne
test
add
je
jnp
sub
dec
lds
in
into
arpl
adc
nop
shll
pop
mov
pop
jecxz
jg
jmp
push
and
decl
adc
cli
loopne
pop
stos
or
add
sti
and
mulb
lret
fcompl
jo
rcrl
and
repz
push
clc
cmp
push
add
jb
hlt
cmp
imul
out
xchg
shl
nop
lock
fwait
and
addr16
aam
mov
xor
sbb
pop
adc
push
out
pop
cmp
into
add
and
xorb
adc
mov
lcall
test
mov
jmp
nop
mov
mov
adc
xchg
clc
int3
xlat
cmp
ljmp
pop
xchg
ja
or
mov
pop
call
les
scas
sub
inc
sub
xorl
mov
and
lret
fwait
push
cmp
push
cmp
mov
out
or
jmp
rcl
rcr
aad
fwait
das
add
and
jle
enter
lock
mov
add
pop
sbb
inc
xchg
sbb
aas
lods
jge
sub
jne
mov
out
cmp
fldcw
xchg
inc
sbb
cmp
outsl
nop
test
adc
shll
add
ja
mov
inc
mov
xchg
cld
loopne
xchg
dec
xchg
push
stos
aas
sub
adc
sbbb
jecxz
rcl
ret
inc
push
push
dec
movsl
xlat
notb
inc
inc
out
xchg
dec
xchg
xor
mov
xchg
pop
add
xlat
pop
pushf
insb
shrl
jb
out
and
std
or
adc
in
cld
cmp
add
push
mulb
ret
sub
sbb
out
adcl
stc
inc
add
stos
jae
subb
icebp
loop
dec
push
mov
dec
cmp
icebp
inc
dec
mov
push
mov
je
mov
scas
or
stos
add
loop
enter
mov
icebp
in
push
arpl
push
mov
inc
lods
lds
add
mov
movswl
aad
insl
dec
mov
push
hlt
clc
lea
aad
mov
in
shll
js
stos
loop
xor
mov
sub
inc
aad
adc
sbb
sbb
dec
insl
lahf
xor
sahf
mov
jbe
mov
mov
scas
call
adc
cmp
cmpl
les
jbe
mov
cmp
lock
jp
cmp
aaa
push
sbb
int3
testl
push
cmpsl
pop
cwtl
dec
dec
out
xchg
sbb
mov
push
sub
pop
mov
mov
sti
cmp
das
icebp
jnp
mov
inc
sub
int
pop
shlb
inc
cmp
addr16
nop
jo
nop
jl
pop
shlb
mov
and
lods
sbb
rcr
xchg
sarb
push
xor
aaa
fisubs
mov
fisubrl
inc
xor
ret
arpl
xchg
jge
std
stc
js
cmp
or
ljmp
push
pop
shl
and
aad
push
jnp
pusha
add
cmpsb
popaw
jno
je
nop
jecxz
cmp
jg
fwait
hlt
outsb
cwtl
jg
mov
dec
shll
adc
cld
popf
jge
es
hlt
lcall
loop
dec
pop
ret
sbb
pop
iret
adc
imul
into
pmaddwd
xchg
ljmp
out
adc
repz
imul
icebp
adc
test
leave
repnz
popa
daa
and
imul
mov
mov
aam
mov
adc
in
inc
add
cmc
or
inc
mov
jl
pop
push
push
mov
lahf
or
cmp
jmp
push
negb
cmp
dec
sub
out
rclb
rcll
lds
cmp
pop
push
rcrb
decb
call
jns
xchg
inc
push
cwtl
push
push
ficoml
loope
cmpsb
lods
pop
addr16
shlb
xchg
fidivrs
push
sahf
mov
push
shr
inc
pushf
inc
adc
outsl
or
cmp
xchg
sbb
rorl
sub
pop
fs
push
fwait
push
in
aaa
movsb
insl
les
outsl
fisttps
pop
cmp
je
in
pop
pop
fiadds
cmp
sbb
add
mov
nop
pop
cmc
lcall
mulb
ror
loope
lret
jno
jge
dec
lcall
xchg
push
jo
adc
das
mov
cmc
faddl
mov
lcall
and
pop
rcrb
bound
mov
loop
xchg
push
sub
fdiv
das
out
jge
imul
out
leave
push
add
push
pop
mov
dec
dec
lock
add
add
ror
ret
aad
fcomp
sbb
jbe
or
jle
enter
push
sbb
mov
les
mov
in
ret
les
push
push
mov
sti
mov
jge
dec
enter
icebp
or
push
loopne
sub
or
adc
add
enter
inc
push
ficoml
mov
mov
jb
or
push
or
in
adc
inc
sbb
mov
cmp
mov
mov
pusha
ficoms
xor
or
sub
addr16
arpl
jge
mov
cmc
cmp
das
inc
out
mov
in
in
inc
push
push
xchg
adc
xchg
in
inc
and
inc
scas
jecxz
cmpl
mov
dec
xchg
pop
xorl
mov
imul
sbb
pop
mov
dec
mov
repz
fstl
push
xor
lret
push
std
mov
inc
aas
sahf
mov
xorl
xor
push
enter
daa
loope
mov
bound
xchg
sub
xor
mov
cmp
out
outsb
xlat
lods
dec
clc
adc
das
adc
push
mov
sti
xchg
xor
mov
xor
jecxz
in
sub
and
fwait
jb
das
lret
and
xor
pusha
lahf
scas
or
add
cs
add
mov
jmp
rcr
mov
jno
xchg
popf
adcl
pop
mov
inc
xor
addr16
and
lret
pop
aaa
stos
mov
push
mov
stc
sub
xor
test
and
repnz
fs
mov
sub
xchg
outsl
mov
xor
mov
cmp
cli
or
movsb
sub
aad
sbb
xchg
adc
imulb
lret
and
mov
dec
gs
ret
xchg
shll
jge
and
insl
and
add
in
shr
flds
arpl
mov
scas
int3
xor
xchg
icebp
push
add
orl
outsb
mov
push
jg
cmpsl
sub
pop
and
mov
int
jne
ret
pusha
in
mov
test
stc
repnz
loop
pop
pop
mov
mov
shll
or
out
stos
add
pop
cmp
int
out
mov
lcall
cmp
mov
mov
testb
xor
decl
add
mov
xchg
xchg
in
lret
jno
cmp
enter
xchg
and
sti
mov
ljmp
mov
addl
mov
into
xorl
adc
push
lret
push
or
and
lahf
mov
or
outsl
mov
sbbb
xchg
mov
sub
pop
cmp
jmp
mov
ret
in
xchg
sti
push
lret
lcall
cmp
or
mov
xor
fs
jno
sub
mov
sbb
sbb
out
clc
or
push
dec
and
icebp
shl
push
add
xchg
cmp
add
mov
dec
sbb
sahf
cmp
mov
fwait
addr16
add
pop
add
pop
mov
jmp
iret
out
jl
push
mov
adc
mov
pusha
cmp
es
adc
repnz
orb
dec
mov
popa
and
jl
mov
sbb
mov
mov
je
and
mov
push
adc
and
xor
pushf
enter
lret
lods
lock
je
lock
push
dec
addr16
loope
inc
lret
jo
movsl
cmp
imul
dec
mov
stos
pop
mov
and
or
adc
call
or
fdivl
push
out
aam
jo
in
fmuls
add
add
sarb
shll
mov
inc
aaa
insw
mov
add
mov
shll
xchg
mov
mov
jge
hlt
pop
ret
or
nop
pop
push
jbe
cmp
cmpsl
scas
insl
je
addr16
mov
fs
sub
sub
jle
sbb
cmp
push
dec
mov
in
sbb
std
jp
leave
sub
mov
xchg
jnp
dec
and
mov
inc
jg
enter
xchg
and
inc
mov
cmp
in
cmpsb
and
into
test
sbb
add
stos
mov
pop
mov
dec
xchg
pop
ret
ret
fadds
ja
aam
mov
cmpsl
call
in
out
xchg
sub
xor
mov
js
and
or
mov
fs
mov
out
xchg
jne
lods
push
push
sbb
cmc
retw
aam
movsl
dec
adc
insb
mov
mov
les
cld
push
adc
cs
jo
clc
mov
test
push
daa
insl
lods
inc
xchg
pop
leave
xorl
fxch
add
popf
dec
cld
test
cmp
and
mov
dec
push
jb
mov
mov
push
ljmp
and
cwtl
movsb
cmp
sbb
jecxz
sub
jae
lcall
cmpsb
ja
push
xchg
jb
xchg
sub
jge
push
xor
add
subl
jge
xor
sbb
fldt
or
cmp
fidivs
bound
fisubs
and
stos
adc
mull
xchg
sub
or
push
loop
in
push
hlt
jnp
dec
xchg
sub
xchg
cltd
sarb
push
aam
pop
mov
insb
call
jl
xchg
xchg
ret
test
inc
lock
lods
gs
test
inc
cltd
pop
outsl
cmp
fcoml
add
fistps
xchg
int
mov
mov
dec
lret
jne
call
dec
dec
sbb
rcl
sbb
int3
scas
jae
dec
ret
gs
pop
adc
and
mov
fstl
hlt
mov
add
sub
and
inc
movsl
mov
icebp
int3
push
xlat
jne
aad
cmp
mul
or
lcall
or
sbb
mov
ror
mov
int3
jo
lcall
mov
pop
inc
sub
cwtl
mov
push
cld
dec
mov
cmpsb
xchg
outsb
mov
inc
and
pop
add
scas
aaa
scas
gs
push
nop
inc
xchg
and
adc
lret
cmpsb
outsb
adc
ljmp
xchg
xchg
dec
cmpsb
pushf
sti
lds
movsb
mov
sub
push
mov
and
xchg
lret
xor
test
into
mov
cmc
test
mov
dec
push
hlt
jb
pop
loope
cld
je
add
jno
jmp
sbb
pop
inc
push
imul
or
lock
push
add
and
in
scas
aaa
std
popf
cs
les
xor
sub
loop
outsl
int3
adc
adc
fcoms
sub
push
rcrl
push
lcall
gs
fcmove
enter
cmp
push
test
push
or
daa
push
push
mov
and
lock
mov
shrl
rol
and
cs
pop
pop
cwtl
cmp
pop
xlat
loopne
punpcklbw
sbb
mov
test
xor
into
and
loope
adc
sbb
divb
pop
jo
popf
pop
inc
mov
inc
iret
notl
hlt
push
mov
xchg
daa
push
int3
repnz
sub
lret
xchg
xor
sbbb
mov
aam
mov
mov
adc
and
enter
jnp
xor
lods
cmp
les
mov
aas
mov
jno
adc
xchg
dec
mov
stos
inc
mov
add
pushl
jmp
rcl
ret
fcomp
int3
pop
cli
stc
stc
mov
enter
in
outsl
ja
movsb
jbe
lahf
dec
std
lmsw
stos
je
inc
enter
sbb
fcoml
and
ficomps
scas
push
pop
mov
mov
cmp
sbb
into
test
push
imul
inc
sub
movsl
push
gs
sbb
xor
jl
test
stos
fs
pusha
sbb
inc
mov
addb
aas
mov
les
jb
cmc
sbb
les
cmp
fsubrl
cmpsl
cmp
imul
sub
or
fcompl
es
push
lea
adc
sahf
mov
xchg
in
or
call
pop
add
aaa
int
pop
imul
xchg
add
sub
imul
clc
or
aam
cmpsl
add
ja
enter
jae
xlat
lods
or
bound
push
mov
mov
xor
mov
cmp
mov
add
imul
das
and
mov
in
jne
lret
lods
pop
inc
subb
cld
pop
outsl
cltd
fmul
xchg
icebp
movsb
pop
in
int3
dec
ljmp
adcl
push
sbb
int
add
cmpsl
mov
xchg
inc
push
lods
in
pop
insl
push
lret
jae
cmpsl
in
jb
mov
cmp
jae
sbb
or
inc
pop
rorb
adc
mov
jge
jnp
scas
jnp
sub
std
bound
movsl
pop
pusha
lcall
fimull
mov
or
in
cli
xor
mov
stos
jo,pt
movsb
mov
das
int
push
cmp
aas
pop
gs
xchg
lock
int3
mov
insb
imul
movsl
into
cmp
mov
int3
adc
add
xchg
lods
mov
ss
push
pop
std
push
add
mov
lcall
inc
out
movsb
sbbb
pop
iret
or
in
pop
mulb
xadd
fisubrs
push
xlat
cmpsl
fstpt
xor
add
lds
jmp
test
sbb
repz
call
ret
push
or
push
cmpsb
pop
mov
inc
and
jns
adc
jp
dec
shl
xor
test
imul
sbb
data16
cli
sarl
sbb
pop
das
subl
dec
test
shlb
pop
aaa
pop
jp
inc
cmp
mov
dec
movb
sub
insb
cmp
shlb
adc
test
fsubrp
sub
push
in
push
mov
pop
sub
aam
popf
lcall
mov
fmull
cld
jg
and
jo
or
in
cmp
jl
adcb
jecxz
cmc
push
fstpl
das
mov
rclb
inc
mov
fisubrs
pop
std
mov
imul
xor
sbb
daa
inc
icebp
lret
in
movsl
mov
adc
ds
lods
movb
adc
mov
fstpt
stos
mov
fwait
push
hlt
hlt
insl
std
out
or
in
xor
push
fistpll
fnstenv
popa
cmpsl
push
xor
jge
scas
aas
ljmp
and
sbb
rep
cmc
add
arpl
addr16
test
fldt
or
in
leave
inc
clc
inc
pushf
lds
xchg
aam
jnp
test
clc
xor
xlat
loope
scas
add
mov
dec
xchg
sbb
adc
nop
hlt
xor
xchg
cs
mov
push
mov
cli
jle
or
in
mov
in
mov
and
arpl
adc
cmpsl
pop
jl
mov
cmpsb
lcall
insb
jbe
inc
dec
enter
adc
negl
cmp
pop
pusha
xchg
adc
in
test
mov
subb
fnstenv
pop
aas
or
mov
dec
pop
fs
fmul
in
sub
pop
in
adcl
sbb
add
enter
push
adc
int3
cwtl
add
mov
jmp
iret
cmp
aad
rorb
fimull
jle
hlt
pop
inc
jae
les
dec
lods
inc
lods
jae
fisubl
xchg
arpl
test
jp
insb
push
lock
das
xor
adc
push
daa
xor
outsl
fbstp
and
mov
pop
lcall
cmp
jp,pn
cld
fldenv
mov
pop
inc
push
push
jg
data16
sbb
inc
sub
lods
jnp
ljmp
xor
inc
mov
jl
pop
adc
mov
cli
pop
inc
adc
jno
sbb
insl
stos
inc
fwait
sub
inc
cmp
push
inc
outsb
test
mov
sbb
xlat
mov
cmp
loopne
repnz
divl
sarb
shrb
shlb
repnz
clc
mov
push
lds
push
jnp
sbb
and
or
cld
adc
cmp
xchg
adc
js
push
sub
xchg
popa
ljmp
fsincos
call
fs
rcll
adc
xchg
in
push
xor
jge
adc
mov
dec
mov
out
insb
outsl
push
add
jmp
and
sub
pushf
dec
es
lds
pop
popl
movsl
jbe
aaa
leave
pop
or
push
add
shll
sub
pop
pop
dec
shrl
movl
mov
jmp
imul
stc
xchg
push
or
rorl
cmp
pop
xchg
mov
inc
or
sub
test
aas
testb
push
test
and
pop
loopne
pop
mov
xor
es
pop
sub
cmp
loop
mov
adc
push
lret
xchg
iret
hlt
xchg
pop
dec
int
hlt
daa
push
sub
mov
mov
bound
insl
fldenv
or
fcomip
popf
mov
xchg
test
jb
jbe
pop
pop
push
ret
adc
sub
fisubs
pop
jne
mov
lock
ficomps
inc
push
adc
xchg
int3
mov
mov
add
cld
or
cmp
add
es
inc
loopne
mov
adc
pop
cwtl
stos
mov
clc
neg
cmp
imul
es
js
imul
xchg
jmp
add
mov
mov
insb
aaa
mov
repnz
pusha
pop
lock
add
outsb
dec
add
jle
aas
adc
mov
push
ljmp
mov
push
push
test
movsl
pushf
pop
nop
ja
icebp
dec
jge
test
aas
fsubp
sbb
gs
iret
shlb
cltd
pusha
sub
lahf
inc
cli
ds
sahf
fcompl
cmp
sbb
fdivl
cwtl
pop
jecxz
sub
sub
inc
xchg
rolb
dec
ljmp
lods
xchg
popa
sbbb
pop
mov
sbb
adc
stos
shll
fsubl
xchg
inc
jae
pop
int
xchg
es
les
and
pop
mov
pop
pop
cli
test
mov
pop
lret
xor
pop
and
dec
out
xorb
mov
out
lret
lock
mov
inc
int
icebp
xchg
in
mov
cmp
or
inc
mov
pop
out
and
fs
shll
int
xchg
imul
jo
loopne
or
adc
xor
xor
das
icebp
leave
test
mov
out
adc
imul
addr16
push
xchg
add
jno
push
mov
insb
or
stos
add
lds
aas
pushf
cmpsl
mov
loopne
adc
mov
fs
popa
xor
mov
mov
xchg
xor
outsl
adc
stos
and
fs
ss
xchg
aam
mov
lahf
xor
out
mov
orl
pop
mov
dec
popa
xchg
fisubrs
outsb
jmp
stos
dec
xchg
adc
test
testl
sub
sub
jge
add
enter
lods
add
lea
mov
mov
jmp
lret
ror
lret
leave
adc
and
movsb
nop
jle
enter
xchg
fiadds
pop
daa
or
mov
outsl
negl
sbb
cwtl
cmp
aam
call
std
fadds
lahf
ficoml
mov
push
xchg
mul
icebp
aaa
push
push
inc
sub
and
rolb
ffreep
fsubs
jb
out
lock
and
xlat
shrl
andb
adc
adc
mov
mov
cmp
inc
popf
mov
gs
mov
lret
sbb
inc
out
push
clc
xchg
out
dec
pop
popa
jle
imul
adc
in
and
pop
jne
inc
jne
aas
movsb
insb
movsl
cmp
movsb
cs
jnp
pusha
mov
loopne
push
xchg
dec
mov
add
das
adc
ljmp
pop
aad
xlat
and
cmpsl
mov
mov
aam
or
pop
hlt
lods
data16
jns
jns
jns
test
push
mov
repz
add
ss
rolb
xchg
push
aam
jg
jmp
push
popa
or
fsubs
mov
push
mov
cmp
fdiv
jecxz
or
push
movsl
push
lret
fnstsw
dec
xlat
jnp
pop
popa
into
pushf
sub
icebp
xchg
xchg
lods
nop
mov
loope
dec
xchg
notl
in
lods
popf
jns
sahf
add
ljmp
sub
in
add
lods
iret
pop
jb
lret
inc
cmpsl
sub
sbb
xor
inc
sarb
sbbl
lret
and
and
jmp
push
xlat
mov
cmc
cmp
insl
sub
jo
push
xchg
pop
imul
jae
xor
mov
roll
das
dec
rcrb
enter
andb
and
jne
rclb
movsb
pop
sbb
push
add
ja
mov
mov
mov
es
push
mov
icebp
add
cli
test
cmpb
repz
sbb
jle
jecxz
hlt
outsl
and
mov
mov
psubusb
leave
test
jmp
sarb
std
push
data16
and
xchg
ja
dec
pop
mov
andb
daa
mov
ljmp
mov
ror
insb
cmp
sbbb
adc
shll
cs
ljmp
outsl
rolb
nop
shlb
mov
sub
ficomps
xchg
shl
push
push
jno
in
inc
mov
jae
sub
mov
adc
push
bound
stos
add
jbe
hlt
inc
fwait
aad
inc
cs
xchg
pop
pop
aam
repnz
xchg
jle
mov
clc
sbb
loop
out
dec
sarb
xchg
pop
orl
mov
fdivr
enter
dec
mov
lahf
in
fldl
aad
cs
popf
ss
sbb
xor
pop
outsl
pop
cld
xor
adc
adc
sbb
add
mov
xchg
movl
pop
inc
cld
int3
aad
fadds
push
js
lock
mov
push
lds
xlat
or
adc
sub
mov
mov
jmp
mov
pop
sub
xchg
xchg
adc
andb
lcall
js
shrl
mov
outsl
test
adc
repnz
adc
jp
mov
or
mov
es
adc
cs
and
ret
std
lods
adc
nop
push
cmp
into
test
dec
cltd
popa
mov
mov
mov
pop
stos
cmpsb
jns
mov
adc
sti
inc
idivl
addb
xor
add
lret
pop
and
xor
out
xor
test
pop
pop
cmp
cmpsl
clc
sbb
in
lret
jb
add
outsl
push
inc
jmp
insl
fistl
out
loopne
mov
into
jno
jae
sbb
inc
jae
xor
loopne
out
stos
gs
test
jmp
sbb
inc
iret
stos
xchg
mov
dec
cmpsb
sub
out
leave
mov
movb
mov
jmp
lret
ror
rcr
fldcw
sub
add
enter
sub
sub
inc
push
add
or
push
fldl
push
add
cmpsb
inc
sub
or
lahf
xor
pusha
xchg
xchg
aas
daa
inc
push
inc
ljmp
mov
adc
enter
adc
sbb
cmpsb
push
sub
rcrl
jmp
pop
arpl
push
ret
push
mov
cmp
cmp
jmp
xchg
inc
xor
imul
jge
and
mov
xchg
xchg
mov
sub
mov
cmc
loop
aas
aas
inc
pop
addr16
jae
dec
mov
xchg
and
sbb
je
push
adc
sub
lea
cmp
aaa
test
iret
mov
pop
jge
xchg
pop
or
pop
jge
leave
jno
ficomps
sbb
dec
imul
push
pop
fistl
mov
adc
inc
xlat
jnp
or
lret
jge
mov
jnp
mov
xor
cmp
in
pminsw
xchg
dec
xchg
mov
cli
mov
fldenv
adc
adc
inc
mov
pop
int
fbstp
mov
idivl
sbbl
sbb
icebp
enter
fcoml
test
loope
iret
iret
fildl
loopne
pop
test
mov
xor
or
or
pop
mov
jns
mov
movsl
pusha
int
pop
pop
push
icebp
push
or
jno
pushf
push
imulb
mov
movb
cmc
pop
dec
test
sahf
dec
leave
in
sub
jb
dec
and
lock
push
lcall
add
xchg
clc
ss
mov
or
test
sbb
pop
and
leave
lds
sahf
dec
gs
clc
inc
mov
lods
jge
sbb
and
int
or
cmp
gs
ss
mov
mov
mov
mov
imul
mov
push
mov
fisubrs
or
clc
sahf
adc
daa
dec
jecxz
shrb
add
sub
js
xchg
inc
cmp
dec
je
mov
or
imul
inc
mov
int3
push
jns
jg
cmpsb
jns
jns
cltd
sbb
daa
dec
std
and
adc
lcall
ret
scas
push
push
mov
cld
jns
mov
or
shr
dec
sbb
ljmp
inc
iret
repz
add
jne
pushf
pop
out
xorl
cmp
push
movlps
shl
cmp
mov
and
adc
movsl
leave
adc
fwait
sub
jns
push
cmp
sub
mov
aaa
mov
mov
push
inc
imul
add
jne
mov
lds
add
cli
mov
xor
jne
outsb
push
push
insb
mov
fldenv
mov
jg
xlat
popa
decb
jne
loope
push
test
xabort
xlat
ret
gs
jbe
sub
popa
jbe
mov
push
int
and
adc
adc
jno
dec
dec
leave
rcll
add
repnz
out
stos
sbb
jle
ja
cwtl
or
or
fidivrl
pop
jno
loop
icebp
xchg
and
pop
sbb
pop
mov
out
sbb
push
sbb
adc
sub
adc
mov
loope
lret
xor
out
aaa
push
mov
xor
jae
xor
orl
dec
sbb
mov
lods
loopne
cmp
sub
cmp
fcomi
or
test
dec
jns
mov
subb
dec
lds
in
insb
adc
mov
sub
jns
shlb
pushf
sub
lods
push
mov
ret
mov
pushf
call
xchg
int
pop
dec
dec
mov
xchg
sahf
outsb
lds
mov
int3
into
insb
scas
jecxz
xlat
imul
add
out
clc
addr16
xlat
xchg
cwtl
movb
xchg
mov
jmp
rol
aas
aas
fld
rcr
push
pop
adc
cmp
pop
rcrb
jle
adc
jne
fildll
clc
imul
pop
es
arpl
xor
ljmp
jge
push
fwait
data16
pop
lods
jbe
lret
cmp
test
in
mov
cmp
rolb
cmp
add
shrl
fisttpll
data16
xchg
add
xchg
mov
jmp
xchg
pop
jbe
push
insl
das
arpl
and
int
daa
sbb
rorb
fistpl
sub
sub
jno
hlt
mov
add
mov
out
push
call
and
sahf
sub
push
mov
clc
or
inc
adc
adc
jae
push
inc
push
sbbb
mov
ss
int
test
or
rorb
test
xor
pop
rcrb
aam
fwait
sbb
sar
cmp
xchg
sbb
mov
adc
xchg
mov
fbld
repnz
insl
iret
fadd
arpl
cmp
insl
push
clc
scas
adc
outsb
aad
cmp
jle
inc
or
int
xor
or
cli
or
sahf
sbb
xchg
cmc
repnz
lock
shl
scas
adcl
out
daa
mov
sub
inc
sub
jp
call
xchg
divl
out
clc
enter
xor
or
mov
jle
xor
cmp
jne
mov
xor
inc
push
pop
popf
cmp
mov
insl
leave
lret
xor
inc
into
pushf
xlat
imul
gs
jno
popl
lods
xor
ss
hlt
pusha
imul
mov
aas
dec
stc
pop
in
pop
xor
fwait
aam
rorb
shlb
test
xlat
faddl
cmp
dec
push
adc
cs
mov
emms
stos
pop
ret
sti
push
sahf
dec
lods
icebp
adc
out
cmp
js
or
notl
stos
popf
movsl
jg
out
js
mov
daa
sbb
in
test
movsb
or
test
inc
stos
dec
mov
jns
jo
push
push
and
mov
gs
lea
loope
pop
push
mov
dec
lds
bound
mov
jns
aad
push
outsb
fmuls
and
scas
iret
mov
syscall
jns
movsl
xor
or
jbe
les
shrl
add
sub
out
sub
test
call
push
cli
pop
daa
lea
push
sar
xor
adc
push
aam
cmpsl
mov
pusha
or
adc
push
fwait
add
cmpsb
push
stos
or
push
ret
mov
in
fidivrs
std
lods
mov
inc
mov
sbb
int3
xchg
icebp
add
push
out
or
nop
cmp
lock
fidivs
mov
jp
and
push
add
jb
mov
xor
shll
mov
mov
inc
adc
out
lock
jmp
cmp
sbb
xor
movsl
shrl
cmp
xchg
cmp
loop
xor
sub
aaa
jae
insb
dec
push
mov
cwtl
pusha
hlt
cmp
jge
cmpsb
xchg
xchg
sbb
dec
jae
pmulhw
and
repz
xor
jecxz
adc
repz
mov
dec
lock
call
cltd
insl
mov
adc
aas
pop
aas
icebp
push
lods
call
add
outsl
aas
adc
dec
jb
mov
lods
xchg
or
shlb
popf
cmpsb
push
subl
mulb
cld
and
xor
lea
addb
adc
mov
inc
cltd
sub
add
xchg
lahf
or
push
outsb
inc
inc
xor
sti
bound
popa
pop
cmpsl
imull
outsb
sub
cltd
lret
inc
fisubs
popl
xchg
pminub
orl
cltd
fnsave
movb
jmp
int
rcl
rcl
int
cltd
push
inc
dec
pop
inc
adc
add
xor
lcall
call
lods
pop
das
sub
cmpsb
cmp
adc
xor
push
cmc
ficoms
loopne
mov
sub
push
mov
fwait
in
loop
xor
aas
inc
data16
cmp
inc
jno
add
push
popl
pop
jl
adc
loopne
aaa
push
lods
mov
in
imull
pop
lret
ss
mov
add
iret
test
mov
cmc
xor
jne
cmp
ret
aas
xchg
or
mov
into
shlb
and
push
adc
xchg
movsl
xchg
out
and
jbe
sbb
lret
sbb
mov
jmp
aad
hlt
stos
loop
mov
lock
mov
add
insl
jbe
and
jbe
mov
dec
push
xor
mov
inc
or
xor
lret
sbb
in
loop
imul
mov
lea
adcb
mov
cmp
shlb
lret
cmpsl
dec
cmpsb
shlb
cli
dec
sahf
icebp
lret
in
paddb
gs
ret
cmc
sbb
cmp
fdivl
inc
mov
scas
fwait
imul
aad
stos
cmp
dec
xor
xchg
cmp
inc
add
cmp
fiaddl
and
fstl
sbb
cld
lods
cmp
cltd
and
cmp
inc
adc
addr16
test
in
or
xor
sbb
test
inc
mov
cmp
or
mov
scas
mov
inc
and
faddl
jg
add
dec
sbb
scas
pop
shll
mov
jg
rcr
loopne
je
jnp
es
sub
jne
jnp
test
sbbb
jge
mov
lods
pop
test
cld
jno
push
cmpsl
adc
and
pop
rclb
frstor
lret
pop
lods
jbe
pop
movsl
sti
push
add
loope
xchg
test
inc
sti
lret
mov
inc
and
pop
xchg
mov
es
or
xchg
push
mov
psubw
mov
jns
and
std
jp
pop
stos
dec
scas
movsb
inc
arpl
xor
add
mov
int3
sbb
mov
pop
je
mov
scas
das
pusha
dec
xchg
or
jp
mov
data16
in
fcmovnbe
rcrb
into
cmp
call
movb
sbb
xchg
adcb
xchg
sti
mov
sub
cmpsl
fisubs
inc
das
or
mov
and
sbb
push
xor
add
push
cwtl
sbb
jae
pop
pop
push
xor
or
jno
sahf
pop
xchg
dec
aas
bnd
pop
mov
pushf
daa
mov
dec
xlat
jmp
mov
add
or
fistpl
dec
cmpsb
jp
cmp
push
popf
popf
add
jne
push
inc
mov
dec
jp
insb
mov
roll
das
dec
outsl
incl
popa
cmp
fwait
aas
sub
lahf
xor
push
jnp
mov
dec
fstpl
repnz
mov
shl
jns
insl
inc
push
ja
aam
fdivs
mov
push
jl
lods
es
mov
sub
inc
mov
loopne
movsb
push
imul
cmp
sub
pop
mov
mov
adc
les
adc
push
xchg
dec
js
jmp
orb
ja
notl
mov
ss
iret
sbb
lret
test
mov
sbb
pop
ret
popa
jo
popa
iret
stos
xor
mov
lea
cmpsl
dec
mov
out
add
jmp
icebp
cmp
push
dec
mov
xchg
ret
mov
xchg
xor
add
inc
pop
adc
mull
add
mov
movsb
cmpsl
orl
in
xchg
out
das
mov
out
icebp
push
mov
lea
pop
or
aad
loop
pop
xchg
push
sub
or
inc
loopne
inc
cld
mov
lea
mov
mov
jmp
rol
xlat
rcr
cmpsl
movb
inc
xchg
ret
jle
enter
or
imul
arpl
adc
or
cli
or
sub
je
mov
jge
lock
insl
xlat
inc
loope
pusha
inc
shl
movsb
incb
xlat
repnz
dec
insb
or
cmp
push
cld
orl
or
call
xlat
movsb
pop
or
cmpsl
dec
pop
hlt
jne
push
in
dec
lret
and
js
hlt
cmpsl
loope
jno
adc
jecxz
sbbl
add
sarb
jge
in
in
clc
scas
xor
inc
xchg
repnz
sub
sub
mov
add
sub
cltd
nop
xchg
cltd
mov
xor
cmp
pop
inc
push
jmp
pushf
and
lret
adcb
loope
fnstcw
imul
add
push
popa
cmpsb
out
pop
fs
add
repz
pop
dec
dec
push
mov
push
jmp
ficompl
les
loopne
iret
lcall
hlt
fadds
dec
ret
xchg
mov
bound
mov
cli
je
mov
std
push
faddl
xor
jl
mov
mov
and
sbb
mov
fs
aaa
cmpb
and
push
adc
in
or
push
push
push
popf
int3
dec
and
popf
mov
cld
pop
mov
daa
fisubrl
push
pop
push
jg
outsl
pop
test
lret
mov
or
pop
out
xchg
sarl
ljmp
push
loop
loope
sub
pop
jge
scas
popf
inc
jb
xor
pop
jl
mov
imull
rcl
mov
int
addr16
pop
adc
decl
mov
repnz
das
adc
test
lds
add
mov
mov
mov
xor
cmp
paddq
in
mov
mov
iret
mov
adc
data16
xchg
mov
call
inc
mov
cli
rcrl
js
and
fcmovnu
lock
jne
pop
ret
call
xchg
sub
cmpsl
cmp
lret
adc
add
inc
sub
aas
into
add
je
pop
lea
pop
or
xchg
in
cmp
push
lret
sbb
jnp
jp
pushf
pop
movsl
mov
dec
out
jp
mov
and
int3
bound
or
mov
outsl
jbe
jg
mov
ret
imul
inc
dec
orl
sub
mov
mov
repz
in
lret
mov
sbb
daa
repz
mov
rorl
lret
ja
out
push
int3
mov
lret
enter
jl
mov
js
inc
jbe
loop
stos
or
jne
aad
pop
aad
lret
mov
inc
in
adc
add
sbb
pop
enter
inc
loop
cwtl
mov
push
xor
mov
movsl
test
pop
stos
or
dec
mov
lods
mov
sub
insb
adc
pusha
dec
push
lock
pop
in
insl
lret
leave
pop
movsl
repz
or
lods
lahf
rcr
push
imul
adc
rolb
sub
loop
push
ljmp
mov
negb
test
repnz
mov
mov
jns
adc
sbb
and
ficoms
or
mov
ljmp
sbb
xchg
mov
popf
arpl
leave
ret
xchg
dec
jp
sub
repz
call
inc
and
test
pop
iret
cltd
push
imul
and
mov
add
ret
call
out
test
sti
mov
cmp
pop
adc
add
jmp
mov
ja
rcrl
xchg
int
ror
sbb
add
shlb
xor
fndisi(8087
mov
inc
lock
mov
jmp
ror
rol
rcr
movsb
inc
or
inc
popf
leave
cs
jle
enter
gs
es
cmpsl
jne
lahf
test
push
mov
pop
mov
pop
fldl
add
lods
xor
adc
push
divl
mov
ret
push
xchg
daa
inc
push
mov
js
mov
jmp
adc
pusha
mov
pop
sahf
and
sar
push
loope
adc
shlb
repz
lea
rorl
addr16
sbb
or
lret
jb
int3
std
imul
repnz
or
or
inc
add
add
cmp
add
cwtl
fisttpl
inc
fsubs
jb
scas
movsb
cmp
or
lock
and
sbb
hlt
mov
pop
add
popf
sub
loopne
lods
mov
out
jmp
das
jno
cmpsb
lods
popa
in
je
xchg
jge
clc
adc
scas
xor
xor
cmc
lods
aad
pop
out
int
inc
or
mov
fdivl
std
jbe
mov
dec
pop
bound
mov
xchg
repz
adc
jecxz
cmpsl
in
imul
xor
xorl
cmp
xor
mov
in
call
leave
lods
pushf
cmp
lea
fwait
xchg
mov
loop
sbb
adc
and
mov
mov
pop
dec
dec
ret
test
iret
pop
int
adc
ds
mov
into
sahf
cmpsb
lods
mov
sti
pushf
faddl
add
mov
xor
jb
push
lret
mov
mov
insl
or
cs
stos
das
mov
adc
test
jle
outsb
push
pushf
cmp
mov
bound
mov
cmpsl
push
lea
and
push
lcall
popl
fsubs
outsb
cmp
fldz
inc
movsl
add
inc
insl
imul
loop
xor
and
stos
dec
ret
test
test
adc
mov
int
icebp
lcall
push
cmp
sub
jb
adc
sahf
lret
dec
xchg
add
mov
psrlw
in
lahf
fstps
mov
xchg
out
dec
xchg
xchg
test
sub
sub
mov
xor
cwtl
dec
push
das
cmp
enter
xchg
cmpl
scas
push
pop
pextrw
xor
mov
sbb
pop
pop
ljmp
xchg
and
ficoms
push
adc
lods
mov
pushf
repz
fcoml
mov
sub
ret
imul
pusha
sub
daa
in
cltd
xor
lds
repz
xchg
aas
mov
leave
movl
mov
cmpsl
cli
scas
shll
pop
mov
dec
jne
test
enter
stos
cmp
lcall
das
adc
sbb
push
adc
iret
or
sub
inc
cmp
adc
dec
icebp
stc
and
mov
cmp
in
ss
fdivrs
push
das
xor
xchg
pop
inc
sbbb
je
sbb
popf
xchg
jnp
xchg
and
mov
aam
push
scas
add
lahf
mov
fists
sahf
sbb
or
nop
test
daa
mov
push
add
mov
push
dec
add
das
sbb
repz
mov
pop
xor
jmp
and
mov
xchg
stc
jne
cs
cld
leave
pop
cmpsl
adc
divl
jnp
xchg
addb
xor
xchg
sti
seto
popf
jae
xor
in
mov
fistps
out
ljmp
xchg
push
jo
stc
popf
out
fisttpll
push
test
xchg
push
into
sub
jecxz
mov
mov
pop
pop
mov
and
and
sub
not
xchg
in
pop
mov
fsubs
addr16
mov
loopne
mov
mov
lods
or
leave
sti
or
es
iret
mov
sub
movsb
mov
mov
mov
jmp
cmp
int
aad
fxch
pop
pop
lock
cld
adc
jle
add
in
mov
jo
mov
das
xor
scas
mov
jge
xchg
repnz
and
in
inc
ficoms
sbb
pop
mov
jb
pop
push
mov
adc
or
bound
cmpsb
cmpsb
sbb
sub
xchg
jmp
push
ret
mov
popf
xchg
imul
jo
pushf
jo
cmpsl
push
mov
mov
push
pop
js
hlt
ret
popa
cmp
rolb
inc
and
inc
xlat
sti
adc
shr
jmp
cmp
jge
sub
ljmpw
jmp
add
sahf
in
pusha
int
pop
out
in
jecxz
das
js
movsb
repz
cmp
adc
nop
cmp
inc
js
sbb
jns
mov
mov
pop
jecxz
bound
fisubl
shlb
sbb
jb
inc
loope
dec
outsl
ret
xor
std
jb
push
xchg
outsb
rcr
or
adc
arpl
add
mov
xchg
mov
insl
xor
je,pt
aam
negb
sbbl
fs
or
add
adc
adc
jp
sbb
aad
jle
xchg
adc
xor
adc
stc
and
aam
pop
outsl
push
pop
into
cmp
dec
scas
addr16
mov
mov
stos
xchg
add
lods
add
cltd
inc
or
fisttpl
sub
popa
adc
cmp
jnp
lret
fidivrl
sub
iret
mov
stc
repnz
pusha
subl
adc
or
or
mov
mov
add
pop
inc
mov
push
lcall
push
mov
cmp
fchs
xchg
and
repz
mov
and
outsl
jbe
mov
push
cmp
aaa
add
mov
mov
jle
cld
cmp
mulb
inc
xchg
xor
leave
fildl
sub
popa
xchg
andb
es
fisubrl
add
test
or
arpl
pop
pop
lock
sub
mov
jg
add
cmpsb
ret
lcall
xchg
aam
imul
jecxz
xor
rcll
pop
out
dec
testl
loope
dec
sub
mov
push
xchg
push
sbb
jp
adc
mov
pop
pop
loop
jno
cmpsb
outsb
pushf
ret
fisubs
push
xlat
xchg
cmc
push
push
enter
add
hlt
inc
lods
pop
test
pop
xchg
sahf
dec
mov
pushf
push
mov
jo
jns
lock
dec
xor
push
ja
cmp
jmp
call
xchg
movsb
jecxz
lret
test
jae
mov
mov
mov
or
pop
call
cwtl
jo
shrl
mov
xor
or
imul
xlat
inc
mov
add
sahf
jbe
mov
mov
lods
call
pop
pushf
mov
insl
or
push
daa
mov
mov
daa
ss
sti
adc
test
out
jg
jbe
adc
sub
xchg
mov
jno
pop
xchg
add
leave
mov
push
push
in
cmp
pusha
ret
inc
mov
mov
into
jne
mov
stos
inc
pop
xorb
xchg
add
icebp
xchg
or
sbb
insl
sbb
mov
push
loope
movq
jo
xchg
add
fsubl
ret
add
enter
ret
repnz
add
fcoml
shl
fimuls
push
jg
mov
notl
push
add
jbe,pt
xchg
js
push
enter
scas
dec
daa
outsl
push
popa
mov
lock
mov
cmp
or
insb
insb
mov
xchg
xor
fsub
add
movsl
je
xchg
mov
test
sbb
fs
and
xor
adc
xor
mov
cs
adc
cmp
xchg
mov
movb
add
clc
jmp
aas
into
cmp
aam
int
ss
xchg
sbb
jle
enter
hlt
dec
stos
dec
cwtl
bound
roll
divl
aad
rcrl
lds
or
in
shlb
pop
fs
push
mov
fildll
movsl
inc
ja
fcoml
repnz
sub
push
fwait
dec
pop
iret
add
and
jmp
adc
scas
mov
je
addl
jmp
pop
out
jl
jns
imul
cld
adc
mov
xchg
xchg
aaa
mov
cmp
imul
xor
lods
ficoms
cmp
mov
lds
adc
dec
jg
faddl
jo
xlat
add
call
mov
push
dec
scas
sub
addr16
je
js
pop
mov
filds
test
repz
and
in
adc
xor
lock
and
ret
test
loop
cmpsb
jg
cs
and
pop
arpl
pushf
inc
test
mov
enter
sub
lret
inc
jbe
rorb
lahf
mov
cltd
dec
pop
stc
out
out
mov
jecxz
inc
or
dec
mov
out
dec
xchg
push
fidivs
sbb
nop
jb
cld
shrb
mov
test
inc
sub
sbb
mov
adc
jp
mov
mov
test
insb
xor
mov
mov
xchg
popa
dec
insb
hlt
mov
mov
cmp
jmp
hlt
jp
mov
mov
lea
adc
icebp
adc
fcmovne
xlat
xchg
pop
sti
and
cld
and
ja
xlat
and
je
aad
sub
and
cli
pop
outsb
fcmovne
inc
roll
test
mov
lock
mov
cwtl
hlt
inc
inc
insl
outsb
pop
std
push
sarl
jo
push
leave
in
addr16
iret
or
pusha
sbb
inc
lret
add
das
daa
sub
mov
fidivrs
jae
fcompl
pop
adc
andb
inc
cwtl
cli
and
jno
dec
shrl
loope
mov
pop
sbb
jmp
mov
jns
cli
sub
xor
dec
ret
inc
popf
pop
fucomp
outsl
inc
shlb
inc
enter
out
sub
shrb
mov
cmp
lock
aaa
pop
dec
mov
and
mov
out
scas
cli
xchg
or
rclb
popf
int3
sub
pop
cmp
xchg
test
push
dec
movsb
inc
bound
mov
xor
or
inc
sbb
dec
xor
sbb
int3
jp
adc
jmp
jne
adc
add
in
clc
mov
dec
arpl
lock
mov
or
inc
mov
loope
repnz
cltd
shr
lds
js
enter
or
pop
je
push
shl
pop
rclb
push
sbb
stos
lods
loop
popf
or
add
fimull
pop
jmp
arpl
es
jl
xor
push
xchg
daa
das
fs
add
test
xor
out
rol
mov
push
push
mov
push
stos
lea
sbb
sub
rcrl
xor
and
xor
or
sub
cmp
popf
lds
nop
inc
or
lea
push
add
push
dec
jg
outsl
jns
aaa
jle
jecxz
push
cmc
push
pavgb
mov
mov
push
add
sbb
jb
iret
mov
data16
sti
popf
pop
faddp
repnz
mov
mov
jge
jl
ja
mov
xor
shl
jno
cli
aam
xchg
mov
aaa
cld
ds
ds
stc
or
sbb
sbb
dec
data16
in
loop
aad
int
xor
xor
daa
jmp
nop
xor
dec
adc
pop
jl
mov
mov
xchg
push
fsts
xchg
in
popa
loop
jne
iret
push
in
and
and
leave
ja
or
jns
jo
rorl
sub
lcall
inc
loopne
dec
clc
jmp
enter
fcmovnb
fcomp
inc
pusha
jp
rcl
icebp
adc
jle
enter
mov
nop
dec
jge
push
cld
or
stc
push
and
cmp
push
je
aas
cmp
mov
add
xor
loop
into
jmp
sbb
mov
movsb
sbb
or
xlat
orb
pop
cmc
insl
mov
jp
add
pushf
fnstenv
push
push
xor
push
cs
out
data16
pop
mov
leave
in
pop
mov
lea
lods
jb
pop
cld
stos
adc
add
mov
push
fmull
pop
pop
push
addr16
sub
inc
add
cli
xor
mov
ret
dec
lods
loop
mov
insl
in
loop
mov
pop
mov
sahf
ja
pop
sar
lea
jl
addr16
mov
clc
xchg
pop
sub
aaa
mov
dec
push
push
xchg
xchg
mov
mov
cmp
lods
cmp
push
ss
movsl
out
outsl
push
pop
jne
xchg
jl
pop
scas
nop
pusha
mov
and
orb
andl
xchg
jg
xchg
and
mov
cltd
call
mov
jnp
das
pop
cmp
jb
jne
and
sbb
pop
stos
lods
test
dec
push
xor
fsubs
cli
neg
stc
loop
mov
mov
add
or
xor
mov
lret
lahf
outsb
push
cmc
push
sahf
pop
out
out
pop
sub
fwait
mov
dec
adc
sub
sub
test
lret
cmc
ljmp
test
cli
pop
cmpsl
add
outsl
or
mov
addb
test
push
add
fmuls
dec
jg
fwait
add
inc
jp
sub
pop
mov
aad
push
pop
mov
add
sbb
mov
js
or
mov
fiaddl
jne
inc
pop
shrl
popf
or
sub
xor
pop
into
mov
cltd
int
jge
push
push
scas
xor
jnp
sbb
subb
pusha
add
mov
cmp
stos
or
mov
xchg
and
sub
aad
push
mov
or
test
sbb
clc
sub
jp
aas
cmp
popl
cmp
and
test
movsl
jae
in
jns
cmp
add
cmpsl
xchg
js
xchg
pop
mov
jne
loopne
sub
xor
cs
cmp
mov
jp
mov
jnp
shrb
dec
mov
jo
out
shll
mov
mov
jno
adc
push
imul
imul
adc
andl
leave
fs
call
stos
rcl
movsb
jno
xchg
pop
shll
xor
das
test
pop
jg
xchg
jl
push
arpl
mov
addr16
add
ror
mov
clc
sbb
add
lods
mov
push
cltd
test
enter
lcall
imul
aas
xor
fisubs
js
cmpb
xor
xchg
test
mov
testl
xor
shll
adcl
cmp
add
fdivr
sub
adc
mov
scas
dec
lock
dec
sbb
push
mov
call
dec
addr16
fs
ss
hlt
sub
fldl
push
push
lods
insb
push
addr16
test
and
cwtl
jae
jbe
pop
jecxz
push
cmp
adc
push
mov
cltd
jo,pn
inc
lods
xchg
sub
aam
cmpsl
mov
test
xchg
inc
pop
lds
jmp
or
movsb
push
ret
adc
fistps
rclb
xor
xlat
loop
cmp
bound
stos
clc
fsub
notl
loope
test
add
pop
push
cmp
adc
insb
sbb
pop
jle
aad
and
push
loop
enter
inc
js
push
jmp
inc
mov
cld
mov
xor
test
dec
dec
aad
mov
push
sub
mov
pop
dec
cmp
fidivs
ljmp
jmp
int3
int3
cmp
cmp
aad
lret
cli
cmp
int3
out
jle
enter
jno
int3
fdivr
dec
push
arpl
addr16
jo
jg
pop
inc
fstpt
loop
outsb
dec
and
inc
out
cmpsb
cs
lcall
and
mov
rorl
cmpsb
jl
scas
push
repnz
out
push
sbb
stc
fimuls
adc
push
fwait
dec
xchg
xorl
leave
ja
or
add
popa
lea
out
add
arpl
test
push
les
or
or
or
cmp
inc
in
int3
sub
mov
in
bound
mov
sub
pop
xchg
das
cmc
mov
inc
mov
test
sarb
xor
jo
sub
inc
iret
testl
xchg
push
imul
out
test
dec
add
push
divb
or
pop
mov
add
jmp
mov
aas
cld
dec
iret
mov
dec
xchg
push
jl
scas
pop
jp
sub
sti
sub
push
hlt
cli
std
xor
lcall
jns
pop
xlat
adc
cmc
jecxz
cmp
adc
push
sbb
fbld
mov
or
std
in
sub
pop
orl
out
shl
std
orl
shrl
sub
xor
sbb
lret
pop
jno
icebp
push
mov
mov
adc
adc
push
mov
sbb
xchg
std
xchg
in
add
push
loop
and
stc
int3
jp
in
ds
xor
lahf
xchg
and
dec
je
xor
pop
xchg
adc
cltd
int
jo
cld
jg
xchg
shlb
or
in
push
mov
mov
fnstenv
call
mov
cmp
loopne
mov
repnz
adc
cmp
jne
xchg
inc
fidivrs
dec
dec
loope
scas
cmp
add
jmp
pop
jbe
sbb
jle,pn
jmp
pop
test
cmpsl
aad
jb
mov
test
test
leave
cs
ss
ja
sub
ljmp
es
add
xchg
lods
lods
sub
lods
jae
or
cmp
test
sti
pop
into
mov
mov
mov
arpl
mov
mov
sub
stc
xlat
sahf
inc
adc
push
mov
sti
test
or
xlat
add
inc
popa
cmpl
in
stos
push
adc
dec
sbb
pushf
or
fistps
cmp
cmp
fucomi
sub
ljmp
je
jns
or
mov
mov
jge
jmp
add
mov
fs
faddl
adc
or
lahf
pop
ret
stos
push
add
pop
push
or
push
stos
adc
cmp
pop
jg
outsl
add
dec
cli
inc
ja
cmp
inc
sahf
dec
pop
enter
push
inc
in
or
jb
xor
adc
jle
xchg
and
jns
dec
mov
scas
xchg
pop
loope
adc
mov
aad
mov
sub
sbb
mov
jmp
mov
lahf
ds
or
fildll
mov
aam
test
push
outsl
jb
shlb
mov
xchg
push
repnz
jae
jmp
cld
imul
sbbb
fsubr
and
push
xor
aad
fs
out
cmp
or
mov
adc
shlb
icebp
jnp
pushf
fadds
js
test
or
jne
xlat
jl
clc
imul
pusha
lds
in
lret
insb
push
and
mov
push
ficompl
pop
mov
mov
mov
popf
push
xor
pop
xchg
add
jns
jmp
test
fwait
andl
nop
cmp
jmp
fmull
xor
jge
and
test
sbb
add
add
ror
ror
fcmovnu
shlb
shll
add
daa
push
mov
mov
jle
rorb
mov
or
mov
add
push
sbb
fmuls
repz
popa
aaa
movsb
jbe
cli
pand
jmp
insb
sarl
repnz
or
dec
cmp
roll
sub
mov
sub
push
xchg
xor
mov
xchg
jno
int3
pushf
mov
call
cwtl
ljmp
pop
insl
sbb
xchg
test
add
arpl
sbb
jmp
out
mov
pushf
dec
add
and
dec
jge
sarl
aam
adc
push
sti
pop
dec
into
cwtl
push
pop
xchg
iret
inc
push
cmp
jbe
push
fwait
push
and
mov
std
jo
loopne
add
pop
insb
into
out
push
hlt
lahf
fstpt
add
gs
pop
jnp
icebp
and
sbb
fists
fbld
xchg
jnp
push
jle
add
xchg
add
cwtl
out
in
push
xor
push
arpl
inc
add
mov
cmpsb
pop
mov
adc
imul
lea
adc
jae
sbb
push
and
xor
int
xchg
lea
fs
mov
out
adc
mov
int
test
repnz
adc
jno
pop
pushf
jecxz
lods
push
mov
je
test
mov
cmp
xor
mov
rcll
imul
jb
push
mov
inc
add
into
movsl
mov
subl
adc
and
mov
aam
mov
mul
lahf
jae
adc
sarb
lods
mov
movb
or
adc
adc
pop
fldl
shlb
and
adc
mov
mov
repnz
lret
arpl
push
and
enter
sub
adc
in
or
fsubs
test
adcl
leave
aas
popf
bound
pusha
cs
adc
jl
jnp
aaa
add
or
add
out
lahf
push
and
lds
jecxz
shll
pushf
roll
and
xor
xchg
ret
mov
sbb
push
roll
sahf
sub
dec
shlb
xchg
pop
sub
lret
sub
sub
fldcw
subps
movsb
ret
add
push
stos
mov
jns
add
pop
xchg
cmpsb
jge
sbb
dec
int
xor
jl
test
andl
das
jae
xorb
and
cltd
movb
sbb
push
mov
mov
pop
dec
mov
fimull
leave
adc
dec
xchg
lods
mov
test
bound
idiv
jg
rcrl
cmp
xchg
push
jbe
xchg
jne
int3
cmp
testl
fnstenv
subb
and
inc
and
adc
push
inc
lea
adc
enter
negl
mov
rcrb
lock
test
push
movsl
cmpsb
les
mov
adc
inc
call
inc
lds
fistpll
pop
addl
lahf
rclb
les
pushf
mov
in
push
fwait
pusha
call
xchg
mov
dec
mov
test
mov
mov
ljmp
dec
jecxz
call
icebp
xor
push
sti
lock
inc
jg
xor
jmp
fsubrl
cmc
cmp
and
mov
xor
add
test
add
ud2
add
push
jno
lret
les
movsb
add
sbb
test
cmpsb
stc
xchg
adc
jns
mov
or
adc
mov
adc
push
mov
sbb
outsb
mov
es
cmpb
push
push
xchg
js
mov
jmp
cmp
aad
sbb
pusha
or
inc
jle
enter
push
adc
sub
push
and
scas
int
int3
and
sub
shll
push
loopne
add
xor
jcxz
or
in
fidivrs
mov
cmc
cld
sub
cmp
or
cmp
xchg
daa
or
enter
fcmovnu
das
je
aam
loope
decb
push
js
adc
add
cmc
push
leave
stos
loop
imul
pop
pop
xchg
imul
or
scas
jl
lods
out
lahf
add
or
pop
bswap
loope
mov
mov
jecxz
xchg
insl
add
in
js
icebp
iret
nop
scas
loopne
in
jo
xor
cmp
pop
aaa
out
sub
push
mov
das
sahf
jge
je
xchg
test
jne
ret
mov
mov
lds
pop
sub
mov
and
lret
jl
adc
sub
fsub
and
mov
imul
mov
scas
or
sbb
data16
cwtl
arpl
out
xor
std
ucomiss
jle
in
dec
jno
lcall
mov
sahf
movb
stos
pusha
jb
push
adc
test
into
fldl
aad
rolb
jno
loop
in
out
sub
add
add
stos
fdivrs
pop
leavew
bound
and
mov
add
push
movsb
out
xchg
test
sbb
cmc
add
xchg
mov
jecxz
push
adc
lea
lcall
fistl
or
scas
adc
push
pop
call
fisttps
xorb
mulps
mov
jmp
rcrl
lcall
stos
cmp
divb
jmp
mov
or
xchg
mov
js
lds
pop
cmp
ucomiss
mov
mov
sub
lahf
mov
in
vunpckhps
pop
dec
sbb
cmp
lea
sbbb
testl
sbb
jecxz
stos
in
mov
bound
imul
aas
out
pop
push
arpl
outsb
rcr
fistpll
gs
data16
xor
cmp
mov
xchg
js
push
mov
aad
adc
loopne
test
out
xor
mov
adcl
xchg
and
roll
inc
pop
sub
addb
jnp
jg
mov
dec
adc
dec
hlt
xor
pop
sub
mov
add
xlat
ja
fnstcw
adc
mov
dec
mov
mov
dec
xor
pushf
push
pop
out
and
out
fcmovu
xor
sbb
lock
sbb
jo
roll
iret
testl
cmp
sti
bound
xlat
test
dec
les
mov
pop
mov
ds
pop
add
adc
mov
or
sub
lcall
mov
lods
std
sar
ds
mov
xchg
rcl
jno
lods
mov
jmp
cmpb
and
addl
or
mov
daa
pusha
std
and
inc
cmp
test
dec
pop
cmp
movsb
aam
jmp
pop
fnsave
inc
loopne
push
outsb
ret
adc
imull
xor
jbe
push
out
scas
dec
sub
cs
je
insl
movl
fcomps
sarb
out
leave
dec
mov
xor
and
mov
ljmp
jbe
and
sbb
inc
pop
inc
imul
sbb
xor
aad
mov
mov
mov
jns
push
aaa
xor
mov
sahf
sti
inc
mov
fsubp
fiadds
aam
popa
mov
lock
add
out
imull
sub
stos
sbb
pop
aam
xchg
push
test
or
loop
push
test
lea
data16
add
rcl
aam
testl
jle
enter
rcl
pop
dec
rcrb
daa
cld
test
push
push
insl
addr16
cld
das
jp
xchg
xchg
pusha
inc
xor
mov
jns
jb
sbbl
aad
sub
mov
loope
jne
and
addl
jo
inc
pusha
dec
sub
and
sbbb
cwtl
fwait
push
imul
sbb
xchg
mov
stos
neg
cli
int
dec
mov
mov
repnz
test
cs
add
sub
push
and
enter
push
fisttps
inc
inc
push
repz
add
outsb
icebp
mov
cmp
aad
inc
popa
jae
cmpsl
mov
bnd
int
inc
cmp
nop
xor
xchg
stos
lea
mov
sarb
and
push
add
stos
fldenv
mov
imulb
cmc
enter
jecxz
mov
in
loop
jnp
adc
adcb
cmp
iret
adc
xor
or
shrl
repnz
into
je
fmuls
int3
idivb
dec
negl
std
xchg
int3
xchg
xor
xor
loop
sbb
mov
stc
sub
rcrl
clc
iret
stos
std
mov
sbb
xchg
and
jg
pop
cmp
call
out
lods
aaa
jecxz
scas
cmp
adc
inc
xor
mov
add
push
mov
dec
mov
cmp
les
adc
test
ss
inc
lods
lea
push
les
inc
lods
ja
dec
es
ja
addl
and
es
push
jne
cmpsl
test
mov
jb
test
or
loope
iret
adc
out
mov
ret
mov
pop
gs
pop
pop
and
mov
push
in
pusha
movsb
fs
les
sbb
outsl
pop
fsubrs
mov
fimuls
mov
xor
push
cmpsl
fdivrs
iretw
lret
or
push
mov
pop
iret
outsl
daa
rcrb
pop
cmp
fs
fdivs
pusha
clc
push
das
shlb
jnp
cld
push
jnp
push
dec
out
sbb
mov
push
stos
cmpsb
push
jae
and
negb
mov
and
clc
add
das
add
test
fmull
pop
pop
dec
xor
out
mov
dec
mov
mov
inc
jbe
into
leave
outsb
les
mov
subb
out
jns
addb
push
lahf
inc
fs
mov
inc
or
mov
mov
pop
mov
iret
pop
push
pop
loop
andb
cld
mov
adc
cli
enter
push
jmp
push
imull
xchg
inc
pusha
in
int
lods
lcall
fiadds
imul
push
rclb
in
cmpsb
push
mov
cmpl
scas
xor
mov
daa
jg
cmp
sub
test
inc
inc
imull
in
in
sar
mov
cmp
out
adc
fs
xchg
insl
pop
aas
jp
jbe
and
xor
aaa
dec
mov
iret
scas
push
insl
push
hlt
adc
dec
loop
iret
push
xchg
push
or
lods
loopne
lcall
pop
les
xor
out
mov
mov
das
pop
cmp
arpl
jmp
inc
pop
lcall
loopne
adc
mov
push
dec
push
pop
lea
push
ret
adc
decb
in
lret
cwtl
xor
or
mov
std
out
inc
mov
jg
sub
push
adc
stos
mov
ljmp
stos
lret
sbb
mov
pop
sbb
jge
cmp
and
jno
push
xor
push
push
jns
adc
lret
faddl
jge
cli
mov
mov
jmp
aam
int
rcr
fcomp
dec
js
inc
addb
jle
add
cli
enter
sbb
and
mov
xor
in
sub
dec
clc
push
inc
pushf
add
vandnps
cmp
push
sub
je
out
outsl
arpl
movsl
pusha
out
push
push
jmp
jbe
jbe
ret
in
mov
fcoml
sbb
stc
add
push
or
fidivrs
js
addr16
and
mov
mov
jmp
xlat
repz
out
dec
xchg
lods
or
mov
and
call
aam
lcall
sub
dec
stc
lods
xchg
stos
pop
je
data16
sub
push
data16
and
sbb
sub
pop
jg
mov
mov
pushf
push
mov
stos
add
dec
lock
xchg
cmp
or
sbb
cmpsl
movsb
lods
dec
lret
mov
fnstcw
jp
nop
xchg
outsl
negb
pusha
int3
pop
adcb
or
mov
xchg
cs
jnp
jo
adcb
xchg
mov
into
fs
mov
rol
mov
outsb
sti
inc
outsl
sub
iret
sub
mov
rclb
sar
and
dec
and
int3
xchg
jge
popa
arpl
fimuls
add
pop
cltd
adc
leave
push
loop
adc
pop
fwait
ss
jg
add
xchg
sbbb
xor
iret
int
jbe
add
in
int3
stc
ljmp
rcll
in
pushf
aas
std
scas
cmp
xor
jge
sbb
adc
pop
adc
add
mov
jmp
and
addb
push
jp
add
decb
insl
pop
or
jge
push
inc
mov
and
push
pop
dec
xchg
mov
aam
andl
les
mov
out
repz
inc
and
lcall
sub
mov
sbb
and
movsb
cltd
push
out
xchg
mov
insb
test
outsb
adc
jl
mov
call
sub
lahf
stos
lods
and
in
imul
jl
imul
insb
orb
jne
jno
repnz
sbb
inc
pop
or
and
push
fs
jmp
and
xchg
push
push
ret
adc
and
xchg
xor
lcall
mov
jmp
mov
icebp
fmull
into
popf
cmp
xchg
pop
stc
and
xchg
pusha
xor
cld
mov
inc
cmc
mov
or
pop
push
out
ss
mov
repz
push
cld
mov
outsb
xchg
jne
hlt
arpl
cli
push
xor
adc
inc
xor
pop
mov
mov
jo
dec
jno
push
dec
cli
test
push
mulb
cli
incl
add
mov
pop
mov
xchg
xor
pop
mov
inc
imul
insl
sbb
jecxz
or
xchg
stos
mov
pop
dec
xor
mov
sbb
arpl
mov
jl
add
subb
push
shl
fmulp
lea
clc
leave
fnstsw
push
add
cmpsl
aad
cmpb
decl
mov
aam
xlat
cli
jg
fidivrl
xor
dec
movhps
xchg
mov
loop
nop
addr16
fsubr
test
and
lret
aas
pop
xlat
cs
lea
cmp
jmp
nop
cmp
lods
popa
pushf
call
push
pushf
sub
test
loopne
sbb
clc
test
mov
scas
subl
popf
mov
xor
inc
and
mov
pop
iret
imul
les
mov
int3
aaa
mov
dec
rol
dec
xorl
mov
sub
frstor
push
push
out
dec
aam
fstps
in
add
jmp
into
xlat
xlat
iret
jge
mov
push
ja
push
add
aam
cmp
mov
sub
pushf
sbb
xor
sub
movsb
in
ficompl
lods
lock
pop
das
mov
sbb
data16
subl
pop
pop
imul
shlb
out
push
aaa
mov
push
add
pop
scas
into
loope
lea
rol
push
inc
movsl
adc
adc
dec
or
int3
xor
push
cmc
push
pop
sti
jne
inc
xchg
scas
sbb
cli
pop
imul
xchg
cld
xor
jl
xchg
or
mov
int
cmpsb
mov
cmp
add
cmpb
sub
xor
xor
imul
dec
stos
les
or
sub
aas
sub
int3
push
in
push
jmp
sbb
gs
sbb
shrl
addb
mov
or
or
sub
fsub
xchg
nop
xor
clc
cmp
icebp
push
out
push
aas
xchg
fstpt
addr16
mov
inc
cmc
xlat
pop
jbe
ss
ss
in
fdivp
repz
sbb
lcall
cmpsb
mov
ss
loope
mov
pop
movsb
arpl
jbe
push
xchg
iret
in
mov
xor
jmp
movsl
mov
lea
push
imul
adc
in
jmp
inc
cmp
fwait
push
adc
orl
mov
sbb
mov
leave
out
mov
xor
daa
adc
lea
test
movsb
enter
add
sub
adc
add
fadd
sub
test
lahf
mov
dec
gs
movsl
inc
push
cs
insb
adc
mov
popf
mov
push
mov
and
dec
icebp
sarb
mov
xchg
loop
push
sub
lock
jge
sbb
xorl
or
mulps
outsb
testb
fs
jp
and
push
dec
inc
mov
dec
shlb
fsub
dec
inc
cli
pop
movsl
repz
push
xchg
add
stos
repnz
xor
jns
xor
sub
sbb
sahf
dec
addr16
inc
mov
xor
sti
pop
push
int3
or
inc
ja
add
cmp
das
movsl
mov
or
out
inc
or
mov
gs
sbb
sbb
repnz
xchg
xchg
jp
cwtl
adc
and
mov
dec
aad
enter
fucomp
aam
xchg
and
lock
pop
scas
rolb
mov
add
add
jbe
adc
divb
pushf
xchg
mov
mov
xor
lret
add
mov
pushf
and
mov
out
add
mov
iret
jne
sub
inc
stos
inc
pop
add
insl
popa
test
lock
xchg
ljmp
sbb
mov
cmp
mov
pusha
adc
mov
or
shl
adc
dec
jge
jl
push
cmp
jg
xorb
mov
fcoms
dec
mov
dec
pop
outsb
xchg
shlb
and
and
add
mov
ret
outsl
imul
enter
sbb
ror
jmp
dec
mov
jno
sub
xor
lret
or
es
insb
mov
mov
hlt
sbb
rcrb
dec
mov
lds
stc
rcrb
dec
testb
stos
inc
in
jne
mov
js
push
mov
sub
mov
lret
lcall
mov
leave
std
or
imul
mov
lods
adc
mov
mov
ret
or
add
andl
sbb
xchg
pop
inc
mov
out
jp
push
and
push
sub
dec
cmpb
sub
pop
add
subb
pop
cmc
or
mov
cmp
mov
adc
xlat
cmp
push
sbb
inc
add
fs
cmp
mov
mov
jmp
aas
aam
aad
xlat
cmp
xor
mov
push
jle
enter
xchg
inc
inc
call
cmp
and
ss
mov
scas
xor
into
push
xchg
push
daa
and
inc
dec
ds
inc
dec
sub
andl
xor
lock
pop
fs
arpl
mov
into
sub
cld
sbb
es
iret
pop
mov
jmp
mov
pop
xchg
pop
test
cmc
bound
inc
push
push
cld
xor
popa
mov
and
mov
jae
out
cmp
xchg
pop
jg
pop
inc
in
xor
jmp
out
cli
xor
addr16
int
mov
in
jp
xorl
movsl
mov
jne
iret
movsl
adc
xchg
movsb
adc
pop
test
mov
jns
fdivl
clc
mov
push
mov
faddl
dec
mov
lea
mov
pop
or
or
xchg
mov
push
jge
dec
mov
mov
mov
push
dec
dec
pop
xchg
popf
dec
int3
es
mov
push
mov
es
cmp
mov
jnp
rorb
jge
xchg
mov
mov
rorb
adcl
in
cmpsl
sti
movsl
pop
xchg
xchg
mov
mov
movsb
out
or
aam
leave
jl
pop
aas
rcll
or
cmp
rorl
rcrb
dec
mov
stos
sarb
xchg
mov
xchg
push
dec
pop
pop
jnp
xchg
inc
cwtl
xor
inc
cli
scas
cli
inc
clc
xor
jp
fbld
and
and
mov
mov
out
popf
push
test
shrb
fwait
inc
sbb
push
pop
dec
stos
add
mov
imul
and
fcomi
mov
push
mov
out
and
sub
imulb
mov
icebp
cli
std
scas
xchg
jnp
aam
scas
int
xor
ss
mov
jbe
das
inc
pushf
sbb
imul
pop
mov
data16
add
jg
imul
js
mov
dec
cli
xchg
pop
pop
imul
out
push
lods
jb
sbb
push
addr16
sub
rcll
cli
jecxz
fwait
push
stos
adc
push
push
ja
test
jecxz
jecxz
popa
cmp
jle
shl
add
in
sbb
imul
ja
loop
mov
dec
pop
dec
dec
std
pusha
lret
outsb
imul
mov
mov
rcrl
push
and
jle
jmp
fmul
je
mov
sub
ds
xor
scas
xor
dec
inc
leave
sarb
adc
xchg
jmp
rclb
out
xchg
xchg
les
aas
repz
shll
outsb
decl
mov
xchg
outsb
test
lahf
adc
hlt
fildll
ja
dec
mov
lahf
dec
and
push
rorl
fimull
pop
std
pop
insl
lods
and
jl
gs
push
adc
seta
mov
push
mov
call
xchg
adc
out
mov
ja
xor
ja
arpl
popf
adc
adc
insl
adc
xor
loop
movsb
jmp
mul
dec
mov
popf
mov
jnp
add
mov
outsb
stos
cmp
and
fs
into
vpshufd
xor
pusha
cmp
mov
dec
mov
mov
fsub
xchg
push
mov
pop
dec
add
fildll
subb
fidivl
call
sbb
out
mov
cmp
call
xlat
test
lea
je
push
mov
movsb
xor
add
shrb
push
xchg
pop
int3
mov
rclb
lock
push
fwait
add
js
jmp
dec
cmp
mov
dec
pushl
and
scas
dec
scas
repnz
push
jns
js
js
test
imul
or
jns
je
mov
mov
cs
jae
adc
test
stos
xchg
xrelease
jb
pop
cmpsl
push
adc
add
sarb
rcl
jg
repz
jns
cmp
jle
mov
sbb
add
lahf
int
hlt
jb
scas
dec
cs
xorb
inc
call
das
pop
aam
mov
cmpsl
adcl
xchg
sti
cvtps2pd
lret
jnp
fbstp
sub
out
push
sbb
mov
lahf
cmpsb
xchg
in
inc
and
mov
out
mov
sbb
mov
mov
fs
fists
sbb
sub
cmp
cltd
lret
inc
in
cmpsl
mov
in
xchg
sub
call
into
loop
jmp
jbe
mov
pop
dec
mov
cs
dec
mov
hlt
int
out
addr16
rorl
lahf
pop
sbb
ljmp
hlt
pop
and
aaa
add
dec
push
aaa
xor
xchg
loopne
loope
cmp
mov
pop
fisubrl
pop
outsl
mov
or
cmp
add
rep
sub
push
mov
out
pop
loop
fwait
xor
aas
mov
push
popa
jge
arpl
jg
negb
repnz
in
xor
pop
pop
std
xor
sbb
cmp
xchg
xor
inc
pusha
sub
mov
sbb
or
and
sbb
cmp
add
dec
outsb
jne
popf
add
enter
adc
pop
sub
pop
cs
inc
push
into
fstpt
ja
enter
pusha
pop
inc
ret
dec
jb
xchg
aam
pop
clc
pop
jl
cmp
jl
dec
js
pop
les
icebp
in
add
mov
repnz
xchg
or
mov
lcall
pop
or
push
adcb
lret
insb
xor
insl
hlt
in
inc
add
lds
jge
pushf
outsl
dec
lret
xchg
shll
aam
mov
xor
fnsave
fsubrs
sbbb
dec
push
or
rol
add
mov
inc
aam
imul
sub
sbb
out
fmuls
aaa
jne
jno
push
insb
bound
shll
xlat
shl
push
jnp
xor
mov
fs
stos
mov
xor
mov
add
addl
dec
or
mov
sbb
rcrl
into
sbb
lods
xchg
cwtl
ss
pop
mov
xchg
icebp
ds
test
cli
cwtl
jmp
dec
mov
pop
outsb
fildll
or
in
js
push
sti
std
out
stos
in
jg
pop
repz
dec
push
fwait
in
sbb
ja
inc
jl
punpckhwd
addr16
or
ljmp
mulb
test
adc
mov
stos
sub
insl
orb
adc
mov
and
jge
lahf
mov
out
shrb
jl
jge
push
pusha
rcr
or
in
xchg
stos
sbbl
repnz
add
dec
lret
xor
jp
pop
sbb
or
nopl
cmp
add
cmp
inc
push
dec
pop
sarl
rclb
cmp
hlt
cmp
inc
lods
addr16
insl
inc
push
xor
mov
and
movsl
sub
test
inc
data16
les
std
or
fistps
test
outsl
hlt
pop
cmp
jp
jae
out
adc
mov
cmpsl
hlt
mov
andl
add
pop
mov
inc
leave
int
cli
iret
dec
push
das
push
dec
stc
jmp
cld
out
sub
xchg
movsb
xchg
xor
cmp
dec
fmul
adc
mov
inc
int3
outsl
adc
adc
in
cmp
fimull
and
sahf
sub
pop
loopne
jns,pt
pusha
imul
test
add
test
fildl
push
outsl
ret
mov
cmpsb
insl
incl
inc
pop
jmp
mov
jne
mov
jmp
into
rol
fcmovnbe
push
mov
rclb
jle
enter
addr16
lret
in
stos
outsb
fiadds
je
sbb
das
jl
imul
pop
pop
out
jecxz
jl
push
ds
fistpl
cmp
lock
and
loopnew
cld
out
test
dec
loop
mov
sbb
movsb
pop
and
mov
movsb
test
inc
jne
roll
adc
cmp
cmpb
nop
in
mov
or
cmc
pop
rcr
ror
lods
fcomi
mov
sub
sub
mov
ret
je
push
bound
fmulp
es
mov
test
jle
push
add
sub
adc
fwait
pushf
inc
leave
pop
jl
pop
sbb
mov
push
imul
and
xchg
adc
add
jae
sub
xchg
imul
mov
and
jp
ds
adc
jmp
push
xchg
cmp
scas
xor
sarb
pop
add
rep
mov
in
repnz
stc
pop
loopne
cmp
cmp
mov
daa
iret
loopne
pop
repnz
outsb
sub
add
and
pop
mov
cmpsl
unpcklps
ret
mov
push
dec
mov
mull
xchg
sbb
inc
xchg
fwait
mov
or
xchg
add
pushf
mov
mov
jg
pop
dec
lret
ja
cwtl
mov
repnz
out
mov
push
scas
rorb
jle
mov
jne
cmc
pop
stos
mov
jb
mov
test
add
push
jb
jmp
jl
xchg
cli
rolb
sub
testl
and
loop
fisubl
mov
or
xor
ret
fisttpl
jmp
xor
negl
stc
in
pop
mov
sub
and
add
mov
sbb
inc
cli
xor
arpl
aaa
insl
and
mov
nop
mov
popf
pop
je
leave
or
aas
adc
xchg
xor
sahf
pusha
aas
adc
clc
pop
loopne
cmp
imul
fwait
and
fdivrs
andb
mov
aam
mov
pop
add
idivl
sbb
sarb
in
lret
jecxz
fildll
ret
mov
mov
adc
ljmp
pop
fstpt
add
mov
syscall
adc
jg
inc
adc
mov
push
fildl
add
aam
test
movsb
jle
push
leave
ja
or
bound
or
mull
sar
mov
insb
add
jns
fidivl
mov
stos
fadds
outsl
mov
ret
imulb
add
push
movsb
loop
pop
push
inc
nop
adc
push
int3
adc
sub
or
mov
cmp
scas
lea
lret
push
outsl
and
div
mov
fwait
cld
push
xchg
sbb
and
sub
sahf
jp
das
mov
mov
cltd
pop
filds
mov
pop
outsl
dec
dec
push
pusha
jmp
fdivp
mov
xchg
lds
lret
out
loopne
mov
pop
dec
jae
push
into
std
imul
movsl
ds
adc
outsb
pop
pop
cmpsl
pop
data16
loopne
lret
dec
shrl
sbb
dec
movsl
hlt
push
aam
or
icebp
push
scas
or
pop
sar
stc
stos
sub
dec
scas
dec
aad
mov
push
jge
cvtps2pi
mov
xor
mov
shlb
jno
mov
enter
gs
cmp
scas
mov
cwtl
je
or
stos
sbb
push
dec
adc
outsl
popf
mov
push
lcall
dec
iret
and
divb
insb
adc
sbb
fwait
xchg
jne
pop
jmp
test
and
movsb
mov
daa
int
iret
mov
mov
jns
js
jmp
iret
ret
rol
int
push
jg
push
dec
dec
mov
and
jle
add
sbb
mov
and
xor
dec
sbb
pop
add
movsb
add
test
in
mov
scas
cmp
push
cmpsl
xchg
or
xor
mov
pop
rorb
push
fdivp
xchg
lahf
mov
out
dec
pushf
mov
and
lock
arpl
jae
cmp
cs
xor
ss
lds
inc
insl
scas
add
mov
jne
and
and
and
mov
jbe
jo
test
imul
cltd
add
iret
sub
jmp
loopne
bound
jge
sub
and
add
adc
cltd
pop
push
jnp
jp
cmpsl
loopne
adc
pop
inc
out
out
push
jbe
xor
popf
cmp
test
ret
fcoms
das
fstpl
and
test
mov
inc
lods
test
data16
lahf
sub
in
xchg
aas
mov
shr
sbb
sub
out
lcall
jmp
cmp
push
add
lahf
push
inc
test
lock
ret
jmp
fninit
fcmovnb
xchg
dec
out
cmp
jmp
lods
mov
in
movsb
xchg
xchg
add
mov
push
inc
cltd
js
xchg
inc
mov
lods
rcll
adc
test
jle
lods
adc
je
xchg
adc
fld
sti
cmc
mov
jmp
pop
sbb
fisttpll
in
iret
push
icebp
shrl
mov
popl
cld
inc
mov
cmpsl
mov
out
mov
jb
nop
daa
ss
pop
dec
fs
insl
add
test
lods
sahf
rorb
out
sub
inc
out
and
js
aad
cmp
push
repz
lods
inc
add
popf
cmpb
and
inc
mull
and
dec
sbb
aaa
bound
ret
lret
xbegin
pop
aad
xchg
sub
push
lock
pop
xor
xor
out
mov
adc
inc
mov
adc
or
loope
push
outsl
scas
mov
loope
clc
jl
pop
int3
aas
pop
lods
push
clc
and
xlat
pop
mov
dec
ret
repnz
pop
cmpb
dec
lock
rol
cld
or
push
xor
dec
mov
aam
pop
test
pop
sbb
fidivl
out
pop
dec
push
jbe
popa
xlat
mov
push
and
sbb
or
ljmp
inc
add
fimuls
xchg
pop
cmp
or
je
or
mov
add
dec
mov
sbb
stc
mov
jno
push
mov
fidivs
out
mov
mov
sub
repz
out
aas
inc
aas
jns
xlat
fdivrs
push
jecxz
sub
add
out
int
iret
dec
mov
shlb
scas
repnz
sahf
sub
mov
into
cwtl
rolb
jg
add
inc
sub
pop
or
int3
add
add
push
adc
negl
xchg
ja
cmp
subl
cli
lods
fnstsw
pop
xorl
cmp
adc
shrb
cmp
xchg
ss
xchg
push
aaa
xchg
push
adc
inc
lret
out
insl
xchg
out
and
les
popa
xor
outsl
mov
or
ret
cli
add
lcall
fldenv
jne
jno
pop
mov
rolb
and
mov
inc
or
xor
mov
cld
out
pusha
xchg
add
jae
movsl
and
jg
loopne
addl
aas
mov
cmc
out
pop
push
repnz
out
pop
nop
jns
lods
mov
push
xchg
xchg
mov
aam
test
sti
jmp
ret
mov
paddusb
xor
jmp
jae
inc
or
je
aad
clc
aam
or
xchg
jne
and
jmp
out
sbb
sub
je
jmp
iret
ror
ret
aad
fimull
aad
insb
scas
jmp
data16
enter
jno
cmp
mov
jns
inc
lcall
cmp
sub
dec
dec
icebp
jp
jl
adcl
in
pop
enter
push
sbb
cld
mulb
das
sahf
pop
into
repz
or
add
fucom
loopne
inc
sub
pop
negb
cmc
sub
shlb
sarl
insl
les
push
outsl
rcr
shr
pop
dec
mov
xchg
mov
adc
loope
incb
inc
push
int3
xchg
gs
fildll
imul
push
pop
sarb
adc
mov
sub
push
cld
out
jae
cmp
inc
sti
xor
js
cltd
mov
push
adc
pushf
cli
mov
sbb
xlat
jecxz
aas
dec
push
pop
jmp
pop
scas
imul
and
les
pop
push
jb
nop
rorb
leave
jg
pusha
jmp
iret
adc
pop
push
dec
mov
or
pop
iret
ret
push
inc
xor
in
stos
movsb
cmp
cmp
add
sub
call
sub
jne
cwtl
das
cmpsl
cmp
add
mov
cmpsb
mov
icebp
sub
clc
mov
clc
dec
scas
sbb
dec
xchg
mov
mov
ss
ljmp
icebp
jp
push
mov
outsl
pop
out
fwait
arpl
stos
mov
iret
out
movsl
shrw
out
cmc
mov
popf
jg
jns
xchg
push
pusha
ljmp
pushl
ljmp
nop
rcrb
mov
mov
sub
icebp
js
adcl
mov
fsubs
sbbb
test
cmp
jmp
sbb
das
cmp
pop
add
adc
jo
xchg
and
scas
jmp
dec
loop
fisttpll
mul
dec
xchg
fdivrs
mov
adc
stos
lahf
xchg
sar
daa
lret
xor
jno
pop
xchg
adc
mov
test
inc
lods
pop
mov
mov
cs
xchg
jg
popa
push
jg
inc
in
fcomi
dec
in
idivl
mov
dec
dec
adc
shl
xor
fcmovnb
ljmp
pop
mov
pop
cmp
mov
mov
adc
push
mull
push
jae
dec
pusha
ficoml
push
xor
ds
sbb
scas
mov
iret
mov
lret
ret
pop
outsl
adc
out
shll
lods
and
test
and
hlt
jnp
popa
lods
imul
fimuls
shll
pop
lods
mov
push
fnstcw
shrl
popa
mov
imul
and
pop
loopne
inc
pop
call
rclb
sar
pop
movsb
daa
add
gs
pop
test
int
repnz
adcb
mov
pop
mov
mov
in
pop
loope
sbb
ja
sub
jp
mov
adc
xor
sti
pop
out
xchg
push
ljmp
inc
loope
in
mov
push
jecxz
lods
data16
and
jo
ud1
cmp
and
cmpsb
adc
call
lods
je
add
pop
inc
rolb
ja
cmpb
sbb
jne
pop
mov
sub
stos
fwait
xchg
jo
mov
int
inc
push
leave
push
adc
jmp
and
outsb
dec
mov
xchg
lcall
retw
cmpsl
icebp
leave
insl
push
push
bound
sub
popl
adc
inc
mov
and
ds
mov
ljmp
jecxz
pushf
pop
xorl
fmull
inc
cmc
sahf
insb
jae
xor
popf
xlat
cmp
cltd
mov
add
fwait
and
sti
cld
mov
aam
stc
loop
das
aaa
ficomps
fisubs
inc
shll
jmp
nop
mov
cmp
cli
mov
inc
mov
das
push
lea
push
jmp
cmp
fld
icebp
xorl
fidivrl
jle
and
cmp
mov
inc
in
push
mov
pushf
int3
add
lret
jbe
fcmovnu
adc
in
hlt
lods
daa
push
ja
mov
add
mov
popa
xor
and
rorb
add
in
fstpl
adc
pop
test
pop
xor
leave
mov
push
dec
pop
xor
and
fildl
push
sbb
in
pop
leave
repnz
mov
outsb
shr
cmp
arpl
add
xor
fcmovnu
xchg
and
fstpl
mov
popa
insb
les
mov
cwtl
lds
add
int3
lock
inc
fs
in
sbb
ljmp
push
mov
pop
data16
jno
lock
orps
jns
lahf
and
movb
push
fwait
test
jnp
das
xor
insb
cld
add
pop
lret
mov
jmp
pop
mov
ss
inc
xchg
std
call
and
movsb
and
lods
xor
ret
adc
xchg
sub
insb
gs
or
rclb
xchg
add
enter
out
push
inc
in
inc
inc
cmp
pop
xor
and
mov
es
mov
lcall
xor
addl
sahf
jb
ds
mov
sub
dec
mov
gs
bound
sub
insb
mov
iret
in
fistpll
push
sub
in
out
lods
pop
and
mov
sbb
xchg
insb
imul
loope
push
inc
xor
fisubs
in
dec
movsb
outsb
loop
lretw
xor
inc
mov
push
pop
dec
cli
mov
pushf
xlat
fsts
fdivl
adcl
sbb
cmc
jecxz
add
cmp
xor
rcrb
pop
sub
lret
cmc
jne
or
rclb
or
sbb
fisubl
repnz
data16
aaa
rorl
in
xchg
enter
cmpsb
jg
mov
mov
test
shlb
sahf
mov
mov
sub
inc
adc
stc
mov
cs
out
arpl
cmc
or
push
mov
add
dec
and
lcall
cmp
out
jp
sbb
mov
popf
in
je
test
mov
loope
int
repnz
stc
pusha
cmp
lcall
jb
pop
cmp
test
std
movsl
add
sub
lret
das
mov
ficoml
cmp
xor
and
xor
xor
or
cmp
dec
mov
dec
stos
sbb
loop
jl
add
imul
cmc
sbb
jbe
mov
push
xchg
test
inc
or
jecxz
add
jge
cmpl
xchg
push
mov
fisubrl
jl
and
inc
xchg
xor
lret
adc
adc
icebp
or
or
ds
pop
popa
cmpsb
sub
adc
xchg
or
add
add
sbb
jae
sub
xor
lock
and
lcall
aad
movl
and
jmp
jno
lret
int
or
mov
mov
in
xchg
xor
inc
push
int3
loope
jmp
js
mov
repz
inc
hlt
subb
scas
or
lahf
or
rcrl
fbld
in
sbb
adc
pushf
pop
addr16
lds
xchg
add
sti
shlb
sbb
xor
inc
cld
lcall
fidivs
fcom
mov
shlb
cwtl
clc
pop
jmp
adc
pcmpgtd
hlt
push
ud2
aam
decb
push
fmulp
pop
sbb
and
dec
les
lods
add
and
xor
int3
jae
fidivs
xor
push
in
sub
push
mov
xor
jmp
leave
cmp
rcr
fnstenv
pop
or
push
outsl
jle
enter
sbb
mov
mov
imul
push
lds
sbb
or
mov
mov
scas
push
outsl
cs
cltd
ds
aam
mov
loopne
mov
cmp
pop
rcrl
fs
jmp
lods
add
cmpsb
cmp
xchg
push
addr16
pop
insb
arpl
lea
sub
and
push
repnz
dec
mov
xor
pop
popa
fs
jmp
sub
jo
xor
cmpsb
pushf
je
outsb
jbe
arpl
int3
sbb
je
int
test
xchg
out
xchg
lock
push
pop
pop
into
cmp
xchg
sbb
cmp
jmp
loopw
mov
inc
mov
addb
adc
sahf
add
je
jb
lahf
xchg
xchg
mov
out
lds
pop
or
jmp
cmp
fwait
mov
dec
jnp,pt
out
scas
xor
jo
pop
int3
icebp
ds
cld
ss
sub
push
cld
cs
and
outsb
mov
mov
jp
imul
aas
test
or
jns
jge
xchg
fldz
jae
aad
lahf
and
push
inc
pop
out
push
iret
aas
ficomps
aas
sub
ds
mov
mov
insb
dec
imul
cmp
dec
loop
or
enter
xor
pop
dec
or
mov
mov
lods
movsl
and
add
or
jl
jo
cmpsb
inc
cmp
add
mov
out
jbe
in
mov
pushf
test
jg
mov
inc
adc
outsb
inc
add
push
cmp
addr16
popa
adc
lods
outsl
dec
jl
xchg
mov
xchg
sub
dec
inc
xor
mov
xorb
pop
inc
loop
loop
shrb
pop
test
inc
in
xchg
and
lret
sbb
fnstenv
cmp
mov
or
mov
rep
inc
dec
outsl
push
nop
sahf
mov
pusha
pop
repz
and
pop
lods
bnd
test
or
jns
cltd
jmp
pop
stos
outsl
nop
inc
or
jmp
loop
movsl
push
jl
ja
dec
sarl
jecxz
sub
test
mov
fnsave
loope
outsl
hlt
inc
xchg
test
mul
movsb
sbb
sbb
ffree
popa
movsb
shlb
pop
push
pop
inc
pop
push
jne
push
xor
inc
sub
cmp
lcall
les
in
test
shl
pop
test
push
adc
cwtl
mov
movzwl
ja,pt
fnsave
std
adc
pop
cltd
cltd
or
or
jg
iret
mov
rorl
scas
stos
dec
sbb
mov
mov
cli
jo
imul
int3
stc
popa
ds
and
int
jb
pushl
fsub
lret
cli
xor
sbb
add
xchg
pslld
mov
xchg
adc
jmp
push
mov
adc
mov
cld
inc
int3
sbb
mov
cmc
cmpsb
aaa
bound
cmpsb
orb
lret
fisttpll
push
mov
xchg
push
addl
push
adc
dec
adc
or
xchg
xorb
cmp
xor
cmp
bound
pop
push
std
lods
mov
insl
cmp
lds
cltd
pushf
sub
or
and
cld
sbb
enter
loop
or
call
sbbl
dec
fisubrs
cmp
xchg
dec
je
jnp
loopne
aad
push
inc
jo
movsl
mov
daa
dec
mov
iret
les
xchg
mov
cwtl
or
jge
push
adc
je
fsubrl
jmp
aaa
jne
mov
arpl
in
xchg
push
or
aad
out
pusha
andb
mov
ja
cmp
mov
stc
cmp
sbbb
cli
inc
icebp
ret
or
pop
ljmp
add
ror
lret
leave
fcmovnbe
aad
sub
popf
enter
fdivs
jle
add
mov
outsl
jns
mov
nop
in
jle
cmpl
imul
sahf
test
pop
into
or
lods
dec
xor
out
lock
xor
mov
fdivrl
js
mov
sub
xchg
fistpl
mov
scas
rcl
rorb
dec
mov
cld
adc
adc
xchg
cwtl
clc
mov
in
add
stos
mov
push
fisttpll
pop
ficoms
mov
mov
fnsave
sbb
mov
jo
sub
jle
testb
sub
dec
mov
pop
push
push
int3
addr16
popf
mov
xor
dec
pop
mov
stos
dec
inc
mov
mov
fs
sbb
push
jb
inc
iret
psrld
fmuls
mov
insb
xchg
jbe
jle
mov
inc
pushf
nop
inc
jg
cmp
mov
or
enter
or
inc
dec
ljmp
ljmp
nop
jmp
pusha
xlat
jmp
outsb
or
cwtl
stos
cmp
push
or
rorl
hlt
fadd
xchg
ffree
cwtl
in
adc
jae
loop
into
jo
out
pop
jnp
inc
push
test
jle
mov
int3
cmp
outsl
cmp
fs
or
fs
test
lods
dec
adcl
and
add
or
sarl
gs
std
mov
clc
jb
cmp
or
cs
jns
and
aam
mov
sbbl
lret
cmp
xchg
add
jnp
xchg
and
stos
jb
popa
imul
sub
nop
mov
jno
aas
xlat
xchg
sahf
sub
out
pop
xchg
ret
mov
aad
push
cmp
and
jge
repnz
stos
outsl
jp
imul
popf
aam
lds
xorl
popa
lahf
add
sub
stos
in
mov
fdivrl
mov
fwait
shrb
inc
or
movsl
push
mov
nop
in
adc
lea
fbld
repnz
pop
pop
or
jmp
xlat
xor
ds
mov
movsb
push
add
adcl
sub
xchg
jno
inc
add
std
cmp
shlb
mov
sahf
movsb
push
and
sti
push
push
mov
out
ficompl
hlt
mov
ret
add
insb
pop
mov
dec
popf
mov
adc
in
jbe
hlt
xor
adc
aaa
mov
cmc
mov
add
xchg
sub
in
in
stc
xor
dec
adc
andb
test
jp
gs
in
mov
jnp
inc
pop
rolb
mov
mov
loop
xchg
shrb
lcall
cwtl
and
mov
scas
mov
xchg
jmp
outsb
mov
test
mov
push
push
add
dec
jl
rcrl
negb
jnp
inc
shlb
es
add
bound
les
dec
movsl
dec
in
mov
imul
in
js
ret
xor
aam
sahf
hlt
cmp
xor
frstor
out
xchg
mov
adc
or
pop
enter
fdivl
test
pop
call
je
xchg
push
xor
mov
daa
leave
lahf
lods
mov
jge
mov
push
std
adc
pop
jbe
shlb
sub
negb
dec
xor
ja
sti
mov
gs
and
pusha
inc
out
mov
sub
dec
repz
into
inc
sbb
mov
stc
cmp
clc
lahf
add
fldenv
push
adc
dec
sbb
inc
popf
push
jae
gs
push
cmp
repz
mov
xchg
xchg
mov
cmpsb
pop
mov
mov
lods
push
inc
inc
pusha
and
sub
push
testl
data16
add
int3
xlat
xlat
push
mov
xor
jbe
stos
ja
jle
add
xor
xchg
mov
mov
scas
int
inc
sarl
and
mov
push
push
push
std
pop
arpl
xchg
jno
xorl
int3
test
cmp
call
xchg
outsb
repz
lds
add
push
cwtl
inc
push
push
and
cmpl
jbe
push
push
fmull
movsb
sar
mov
test
mov
int3
and
and
cld
or
fnop
mov
sbb
cwtl
jne
dec
int
mov
jnp
mov
jae
mov
gs
lret
dec
shrb
mov
xchg
lret
dec
cmp
fidivs
jmp
mov
fidivrs
jne
mov
mov
push
insl
test
ljmp
lret
mov
dec
sub
adc
pop
jle
lret
mov
call
cwtl
dec
pop
cli
xchg
or
std
push
cwtl
xchg
mov
fnstsw
xor
mov
add
out
popf
lcall
mov
push
or
and
jl
addb
xor
addr16
insl
test
and
mov
or
pushf
dec
and
scas
jg
int
mov
adc
push
xchg
sbb
jnp
data16
out
push
inc
stc
and
cs
pop
imulb
jl
inc
ss
push
movsb
in
xchg
hlt
add
test
leave
enter
mov
mov
fisubl
stos
mov
xor
push
sahf
loop
inc
out
cld
push
ja
or
cli
xchg
mov
xlat
mov
and
nop
int
mov
jle
movsl
leave
xchg
cmp
rcr
or
imul
js
and
movsb
inc
loop
inc
pop
sti
pop
dec
lahf
ja
es
loope
call
cmp
jns
sbb
mov
fstps
push
inc
out
sub
cmc
sarl
mov
mov
pop
jns
pop
lcall
pop
rep
sti
push
inc
add
fs
into
fidivs
sarl
xlat
or
cmp
bnd
movsl
lods
add
pop
pop
shrb
push
psubd
shll
fs
jne
popf
fnsave
or
inc
gs
mov
jns
mov
cvtdq2ps
pop
mov
fiadds
add
push
std
xchg
movsb
mov
mov
mov
jb
sbb
jne
mov
popf
int3
sub
std
jecxz
or
int
test
xor
in
cmc
add
inc
mov
fcoms
insl
hlt
or
lock
fildll
adc
mov
repz
xchg
inc
xlat
fs
push
jae
adc
ja
repz
fidivs
and
add
pop
jl
in
add
xchg
std
lods
adcl
loop
movsl
or
push
xor
xchg
mov
sub
sbb
ds
mov
sti
lret
add
mov
push
push
or
adc
jb
xor
dec
xor
fstl
cli
mov
jmp
mov
aaa
out
aaa
xchg
lea
cmp
push
in
and
sbb
add
dec
xchg
mov
mov
mov
ror
aam
jecxz
xchg
hlt
add
mov
sub
push
int
icebp
xlat
push
pop
out
prefetch
or
lods
inc
push
or
pop
cli
push
add
xchg
arpl
scas
fs
ret
xchg
fcoml
pushf
pusha
popf
adc
psraw
push
in
mov
rolb
and
arpl
xchg
mov
movsb
out
push
addb
leave
icebp
jl
hlt
push
pop
push
push
in
xor
dec
xchg
or
aas
inc
into
or
test
call
cmp
jb
into
and
mov
push
and
inc
lods
inc
hlt
jno
in
addr16
lahf
or
mov
add
cmp
jmp
ret
or
icebp
mov
enter
jo
shrb
inc
xchg
cltd
shrl
lret
int3
call
dec
scas
addr16
pop
dec
pop
sub
js
push
adc
cmc
out
pop
sarb
movsb
lods
push
cmp
ja
jae
add
and
or
mov
and
imul
dec
sub
jmp
fldl
mov
jl
cs
xor
in
ja
mov
lds
push
mov
xchg
aaa
mov
scas
inc
mov
dec
in
aaa
cmp
out
leave
sub
jne
push
scas
pop
push
imul
sbb
inc
movsl
pop
or
pop
sub
out
pusha
xchg
mull
into
imul
xchg
ret
dec
lock
test
test
daa
mov
jns
dec
fwait
or
in
jl
aas
xlat
insb
frstpm(287
icebp
daa
imul
in
rorb
xor
inc
xor
jb
arpl
shr
test
shl
mov
dec
movsb
push
and
dec
dec
xchg
mov
ficoml
xor
dec
jne
jle
hlt
clc
adcb
mov
push
into
mov
add
sbb
es
mov
in
push
mov
leave
js
mov
arpl
add
fcmovb
mov
leave
cmp
cmp
data16
and
lea
sub
cmp
fists
pusha
ds
cltd
stc
fnsave
jbe
xor
xchg
call
and
lahf
imul
mov
dec
dec
outsb
xchg
je
mov
int
aad
cmp
jl
test
into
cs
lret
pop
ret
ja
or
jmp
mov
cmc
cwtl
sub
fildl
out
loopne
jbe
push
loop
adc
int3
mov
adc
fnstenv
push
xor
clc
arpl
or
mov
out
xlat
lahf
adc
push
pop
fiadds
sbb
outsl
aas
jmp
test
and
nop
add
in
xchg
jecxz
lcall
dec
rol
test
outsb
mov
jp
ficompl
and
pusha
pop
js
pop
push
fcmovbe
arpl
fidivrs
mov
or
and
imul
pop
mov
insb
sub
lret
fldcw
lock
xchg
ffree
adc
cwtl
arpl
and
hlt
sub
mov
pop
and
orl
sti
js
cmp
leave
xchg
and
iret
ljmp
scas
jb
inc
imul
push
cmp
hlt
xchg
out
cltd
inc
inc
ret
add
xchg
sar
mov
fnstenv
jb
jecxz
js
cmp
inc
cs
mov
out
and
pop
adc
cmp
pop
outsb
mov
adc
mul
jnp
ss
jnp
jp,pn
fwait
fimuls
push
xor
nop
xchg
sbb
scas
mov
repnz
sub
cmp
add
std
aad
jle
loope
xchg
cmp
fisttpll
push
lods
pop
xor
dec
and
jne
pop
mov
dec
inc
arpl
cwtl
mov
push
inc
imull
into
inc
mov
dec
and
stc
pushf
icebp
testl
push
pop
pop
lock
in
add
je
roll
mov
add
rolb
mov
dec
pop
sbb
inc
jmp
mov
icebp
nop
pop
sub
es
test
lods
pop
movsb
adc
sbb
ret
sti
xchg
xchg
inc
lods
imul
jge
or
das
faddl
movsl
out
adc
mov
mov
mov
or
rcrb
jle
jb
mov
outsb
jecxz
sbb
inc
cmpl
or
xor
aas
inc
daa
mov
lea
push
inc
pop
add
jns
ljmp
clc
mov
lods
sbb
cmp
jecxz
shll
mov
rcll
sbb
and
mov
in
dec
mov
pop
add
rcrl
xor
mov
dec
popa
push
mov
push
popa
adc
inc
call
add
jmp
ror
fmuls
rcl
sbb
jl
jle
add
mov
pop
fldenv
push
sti
lods
jmp
stos
mov
enter
jle
push
imul
data16
pop
sbb
mov
cld
ja
add
sub
fcomps
mov
jg
and
dec
dec
cwtl
push
icebp
push
and
loopne
mov
sub
jno
and
popa
std
les
dec
mov
int
push
icebp
and
lret
pop
push
ficoms
pushw
fstps
adc
pop
cmpsl
xor
or
pop
ret
out
out
and
test
aad
rolb
jecxz
pop
dec
xor
ror
add
mov
into
jmp
mov
xchg
int3
cwtl
or
out
mov
cmp
xchg
fs
xor
adc
daa
das
negl
loopne
cmpsb
aam
dec
xchg
shlb
shlb
gs
in
xchg
pop
pop
jge
xchg
gs
pop
movsb
mov
mov
mov
xchg
mov
or
lcall
cld
ss
ss
jp
jmp
add
jl
repz
dec
cltd
cmpsl
add
xorl
dec
jmp
mov
dec
or
sub
lods
pop
lea
test
shlb
or
rol
movsb
test
test
testl
dec
cli
xchg
movsb
test
cmp
fstpt
sub
cmp
add
aas
or
hlt
loopne
jecxz
and
sbb
int
adc
push
fsubl
sub
sbb
mov
jns
iret
into
aad
fdivs
and
shrb
fstl
mov
push
sbb
fwait
in
insl
insl
repnz
add
or
lret
and
fs
mov
pop
push
mov
lds
lret
xor
pop
push
inc
mov
sahf
insb
std
push
jmp
push
test
hlt
push
cmpsb
sub
add
push
mov
mov
fsubr
mov
pop
std
das
js
aam
sbb
or
ret
adc
in
and
jae
mov
push
rorl
sahf
cltd
leave
and
adc
lret
jae
test
inc
xchg
jo
inc
mov
inc
jne
fwait
jno
push
adcl
inc
xchg
cmp
pusha
pop
mov
or
fisubrl
fsubl
pop
xor
dec
xor
in
cltd
mov
and
jnp
pop
repnz
into
mov
loope
call
push
pop
xchg
or
mov
filds
sub
dec
and
lock
xor
ja
sbb
mov
int
sub
test
adc
lret
imul
cltd
mov
inc
popf
mov
mov
xchg
mov
add
pusha
xchg
das
pop
inc
in
sti
scas
xor
ss
ja
mov
lcall
dec
pop
imul
adc
ljmp
es
push
xchg
addr16
push
push
call
mov
mov
notb
push
sbb
mov
popf
enter
arpl
mov
outsl
sub
inc
adc
je
insl
outsb
filds
add
xchg
repz
pop
xchg
pop
add
loop
mov
sti
cmpsl
xor
sub
mov
sbb
push
out
mov
inc
dec
addr16
mov
leave
cmp
cmc
ret
xchg
push
arpl
ret
sbb
and
adc
pop
inc
mov
sbb
lock
jo
into
int3
push
push
mov
popl
sub
or
push
add
or
adc
pop
dec
mov
sbb
adc
dec
cwtl
push
sub
inc
mov
outsb
inc
clc
sbb
cli
faddp
ret
fcoms
push
aam
pusha
cmpsl
test
shl
int
xor
data16
add
ret
aad
fadd
pushf
or
fisttps
push
adc
enter
sbbb
xor
xchg
sub
loope
xchg
xor
cs
pop
or
xor
movsl
sbb
pop
mov
adc
popf
lods
jnp
andl
fdivl
mov
fwait
outsb
xchg
sahf
xor
jb,pn
jg
or
xchg
inc
pop
mov
inc
popf
dec
sbb
mov
pop
daa
jmp
js
pushf
out
jl
insb
mov
or
bound
mov
insl
fwait
loopne
stc
iret
inc
jg
sub
cmp
aaa
mov
fbstp
addl
repnz
fnsave
sub
pop
insb
ret
or
bnd
lret
fs
add
push
push
lret
adc
shrl
sti
out
cmpsl
add
fs
mov
or
mov
push
in
ljmp
jb
or
insb
hlt
xchg
adc
repnz
xlat
pop
dec
inc
xchg
ret
pop
and
and
pop
aas
adc
sbb
inc
xchg
subb
in
cltd
push
sahf
xchg
adc
outsb
jae
add
fistl
enter
or
ljmp
pushf
leave
fstpt
xchg
push
xchg
cmp
dec
mov
and
icebp
sti
lcall
cmpsb
adc
cli
inc
or
bound
push
shrl
dec
cmp
xchg
nop
je
sbb
dec
sbb
or
jge
mov
or
loopne
push
lods
mov
and
enter
sbb
push
lahf
xchg
dec
rcl
jb
test
pop
loopne
or
loope
dec
rcpps
dec
mov
std
inc
clc
ss
test
repnz
out
sub
push
nop
lods
fcmovbe
es
std
arpl
sti
stc
inc
aaa
iret
in
push
lods
sahf
mov
mov
test
mov
mov
loope
iret
rep
jno
inc
addb
add
imul
adc
dec
cmp
sub
sahf
sbb
and
xor
mov
hlt
ljmp
mov
out
adc
fs
test
enter
arpl
sarb
cli
and
pop
mov
mov
repz
inc
int
mov
sub
into
push
add
jp
lods
sbb
popa
les
jbe
xor
into
mov
ja
cmp
xor
mov
enter
dec
aam
push
xchg
es
lds
inc
sarb
cmpsl
cltd
loope
lock
mov
add
cmp
mov
movsl
dec
inc
jae
mov
pop
cs
in
sbb
scas
data16
and
cmp
add
inc
adc
fcmovnbe
pop
sti
hlt
push
sub
mov
pop
into
sub
lcall
in
add
inc
pushf
pusha
jmp
scas
dec
sahf
sbb
xor
adc
stc
mov
mov
mov
jne
pop
lods
aaa
insl
cmpsb
fstp
arpl
push
xchg
pop
inc
lods
adcl
adc
jle
les
lcall
shlb
push
out
xor
inc
nop
arpl
push
mov
in
std
hlt
jbe
mov
jp
mov
xchg
fcomp
repz
test
push
fistpll
jg
or
repz
dec
movsl
shll
cmp
pop
outsb
mov
stos
push
cmp
jmp
cmp
fs
in
in
push
cli
adc
add
outsb
loop
ja
cmp
pop
xchg
cmpsb
out
dec
xchg
hlt
dec
loope
sub
stos
loope
dec
in
jmp
adc
push
inc
sbb
add
movl
jbe
fidivrl
daa
movsb
and
int3
xchg
in
mov
sub
inc
das
pop
fdiv
std
add
stos
jle
hlt
jnp
cmp
cmp
je
dec
adc
popa
mov
jb
lcall
sbbl
push
ficoml
test
pop
xchg
jp
insb
outsb
sbbl
ss
call
mov
xor
jmp
xlat
ror
aad
mov
out
jg
push
iret
bound
jle
add
adc
dec
jg
mov
or
xor
decb
xor
xchg
cs
adc
and
data16
mov
arpl
pop
jbe
fisttpl
test
lock
mov
movsl
add
mov
xor
fists
sub
or
mov
lcall
rcrb
inc
push
cmp
push
ret
or
ja
push
fwait
imulb
push
and
aaa
jb
pop
sub
out
lea
and
rolb
rorl
fsub
loope
mov
cld
xchg
nop
xor
add
mov
dec
xchg
inc
pop
adc
mov
xchg
ljmp
popf
fnstenv
js
pop
lahf
mov
sarb
mov
ret
dec
mov
xor
cmpsl
outsb
loopne
pusha
dec
pop
jmp
pop
adc
in
xor
rclb
cs
dec
pop
cwtl
pop
pop
bound
jb
add
push
and
lods
mov
xor
and
cmp
and
push
inc
rorl
cwtl
aad
fcoms
adc
dec
sub
pushf
or
cmpsb
push
outsb
leave
mov
jmp
fs
jae
out
sbb
cmp
inc
rorb
xor
and
jg
or
in
mov
ficoms
xchg
cltd
jle
imul
pusha
pop
lods
add
or
mov
jle
ljmp
sub
xchg
mov
adc
loopne,pn
mov
iret
jbe
pop
dec
fmull
cmp
in
dec
push
xchg
fs
and
fdivs
repnz
pop
aad
sahf
bound
pop
fistps
sti
cltd
enter
pop
adc
fimull
xchg
dec
jbe
cmp
push
lret
jle
jno
mov
jb
ficoms
xor
push
xchg
cwtl
bound
sahf
mov
cld
vmovss
std
pop
jle
xor
inc
shll
mov
js
cmp
xor
lea
int3
test
sub
scas
adc
test
bound
insb
jb
aam
mov
mov
outsb
out
cmovbe
sub
or
cli
fstps
std
ss
popa
sub
int
and
xor
adc
dec
fistps
mull
add
lods
add
add
insb
pop
bound
sub
xchg
mov
stc
mov
inc
push
dec
and
push
push
push
lret
icebp
hlt
adc
add
mov
fldt
add
push
es
xchg
cld
jnp
xor
arpl
add
add
mov
cmp
lahf
sbb
cmp
jge
xor
aad
seta
push
fsubrp
cmp
sub
pop
mov
cmp
cmp
cmp
ficoms
push
inc
add
loopne
scas
loope
out
hlt
sub
insb
lahf
jne
lock
test
scas
aaa
add
sub
jno
mov
jmp
ja
js
dec
mov
jae
dec
inc
notw
push
push
stos
mov
outsl
bound
mov
jnp
aas
xor
mov
xchg
add
das
movsl
outsl
sbb
or
popa
andl
enter
adc
mov
cmp
push
mov
push
adc
dec
je
mov
aad
stc
mov
rcrb
mov
xchg
mulb
sbb
jno
and
out
xchg
or
or
out
and
aad
clc
jne
out
xchg
sbb
inc
sbb
mov
or
jg
jl
push
dec
test
mov
ss
sub
inc
fimull
lahf
fs
or
aaa
shl
pushf
jb
addr16
mov
sub
in
jmp
dec
push
test
imul
cmp
xorl
shlb
and
out
add
mov
jmp
int
mov
leave
inc
adc
aad
push
sahf
stc
sub
jg
enter
jl
or
test
pop
loop
mov
daa
lcall
icebp
dec
cmp
aad
neg
jne
jmp
xlat
or
ljmp
sub
rclb
or
ror
enter
insb
jnp
out
lock
xlat
fwait
and
inc
addb
je
push
push
mov
dec
lret
enter
or
sbb
cs
inc
rclb
add
push
int
mov
das
clc
repnz
jecxz
xchg
cmpsl
pusha
or
jo
sbb
push
mov
cwtl
lds
xchg
fs
inc
pop
push
js
aaa
mov
add
add
fs
jge
sti
mov
xor
ljmp
ret
add
movsl
in
cmp
rolb
xor
das
outsb
mov
push
cmp
jmp
jbe
incl
mov
daa
push
fs
iret
xor
xchg
jl
jg
adc
push
fiadds
jbe
mov
push
ret
xor
dec
je
xchg
mov
xchg
adc
mov
in
scas
adc
cmp
inc
mov
jo
mov
or
in
adc
push
jmp
or
bound
fdivrs
cmpb
mov
jmp
push
cmpsl
rcl
inc
testl
and
cmp
dec
cmp
lods
add
mov
arpl
aas
jns
adc
subb
jno
xchg
sti
loop
ret
fists
dec
jbe
or
out
xchg
inc
mov
dec
out
hlt
enter
mov
push
mov
sub
out
adc
push
mov
inc
int3
lods
jno
clc
mov
ficoml
dec
sbb
in
icebp
or
xor
es
dec
std
cli
mov
xchg
fwait
and
mov
mov
adc
sub
test
repnz
movsl
lahf
je
mov
jmp
mov
push
or
fbld
sub
jp
icebp
mov
shrl
sbb
out
jmp
icebp
dec
insl
and
scas
xor
adc
fsub
rcrb
icebp
cmc
cmp
ja
fadd
xor
jmp
loope
inc
cmp
xchg
jbe
imul
mov
xor
clc
cmp
add
xchg
and
shll
and
mov
ficoml
pop
andl
xchg
push
xchg
stos
cwtl
mov
jmp
iret
pop
and
fisttpl
sbb
cmp
idivl
cli
xchg
inc
pop
std
movsb
imul
in
iret
jmp
pop
pop
jecxz
xchg
bound
or
repz
lods
rorb
push
rolb
xor
jp
data16
mov
pop
push
xlat
mov
cs
jmp
cmp
adc
lcall
lds
push
and
pop
adc
sbbb
cmp
lcall
mov
fdivl
sti
movsl
scas
add
outsb
in
testb
out
test
sub
sub
out
jmp
f2xm1
cld
mov
popf
rcl
push
add
pushf
fst
test
push
out
dec
sbb
sbb
sbb
fstps
push
add
add
call
lods
andl
mov
inc
mov
push
cmp
sbb
sbb
repz
mov
xlat
enter
or
sub
lock
xchg
pop
idivb
jmp
jno
test
repnz
mov
hlt
int
push
push
mov
push
add
sbb
mov
dec
pop
popf
lret
nop
arpl
mov
sbb
sub
jae
dec
jp
or
push
push
push
pop
sub
xor
mov
mov
or
sti
or
mov
or
xchg
pushf
or
inc
sbb
jns
lea
scas
ret
ds
sub
jmp
ror
int3
lret
fcomp
mov
fistpl
lds
jle
decb
jle
add
dec
jae
mov
mov
add
ret
out
movsl
xchg
sbb
and
cli
push
aas
cmpsb
out
add
dec
clc
lock
enter
subl
out
xor
out
sub
adc
negb
insb
cmpsb
or
mov
mov
adc
out
adc
mov
in
mov
call
enter
add
jecxz
push
inc
push
mov
push
cmp
gs
push
push
ss
jno
cmpsl
mulb
ds
inc
xor
mov
aad
inc
sarl
add
adc
pop
add
mov
mov
sbb
data16
fldenv
sub
pushf
mov
xchg
call
push
mov
addr16
scas
pushf
notl
pop
lahf
call
lods
and
push
loope
sub
pop
mov
arpl
and
inc
lods
xchg
jg
cs
cltd
push
dec
xor
pop
dec
push
inc
in
mov
dec
cmp
shl
ret
mov
rclb
and
mov
jae
sbb
je
in
inc
add
int3
ljmp
or
ret
mov
cmp
xchg
sarl
sub
pop
orb
lcall
in
negl
cmpsb
xor
xchg
lock
mov
xchg
and
xor
push
ss
push
push
sti
mov
inc
jnp
mov
dec
cwtl
in
or
adc
cltd
adc
mov
push
and
mov
push
add
es
gs
sub
gs
jecxz
mov
mov
xchg
cmpl
xchg
lret
adc
sub
mov
imul
or
ret
mov
notl
or
out
push
pop
and
cs
push
push
mov
arpl
cmp
mov
lods
push
cld
nop
dec
adc
pop
cmp
into
inc
or
mov
ja
inc
in
stc
mov
out
xchg
and
loopne
inc
scas
mov
pop
dec
in
test
inc
pop
rorb
mov
std
mov
sbb
jp
mov
repnz
stc
int
pop
iret
and
cld
js
adc
int
cmpsb
lods
repz
mov
mov
cmpsl
cmp
sbb
xchg
xor
inc
adcb
call
lret
out
insl
fcomi
ret
inc
cmc
mov
mov
enter
mov
xchg
xor
jg
push
sbb
dec
outsb
sbb
inc
les
dec
and
or
mov
dec
fimull
sbb
popa
cld
lods
mov
jbe,pt
jmp
fnstenv
shrl
addb
in
scas
and
es
sbb
es
repz
scas
jle
mulb
out
ja
dec
imul
cmp
mov
mov
cmp
stc
popfw
inc
call
adc
idivb
jnp
push
adc
in
adc
fcoms
pop
hlt
idivb
out
imul
stc
xlat
ljmp
mov
mov
leave
mov
scas
iret
fldt
xchg
inc
je
enter
scas
dec
xchg
mov
enter
cmc
cli
cmp
xchg
fistps
lds
ss
mov
rorb
cwtl
add
adc
xor
jle
sahf
push
fcoms
mov
dec
pushf
out
push
shrl
xor
shl
hlt
push
sbb
mov
mov
pop
pushf
ds
cmp
xor
mov
sub
adc
fisubrs
arpl
sub
pop
jno
cmp
mov
loop
or
dec
adc
jno
pop
inc
pop
scas
addr16
push
sbbb
adc
xor
and
push
bound
inc
mov
add
jmp
cmp
int3
rcr
je
roll
jg
enter
add
or
add
pop
lds
pop
sti
sub
arpl
cmp
mov
lret
dec
mov
stos
pushf
xor
mov
xchg
addr16
mov
xchg
hlt
bound
sbb
into
and
ljmp
xchg
push
mov
outsb
lods
sbb
fildl
arpl
or
mov
ljmp
cmp
scas
pop
pop
pop
sbb
push
adc
xchg
movsb
fwait
hlt
je
inc
mov
add
les
out
lock
adc
xchg
out
cltd
jne
adc
leave
fs
js
scas
push
dec
popf
xchg
push
push
xchg
test
repz
mov
mov
fsubrs
test
rolb
add
aad
shl
xor
jmp
push
lea
jns
call
pop
aas
fildll
out
dec
shl
pop
push
shlb
sbb
xchg
out
std
pop
mov
test
or
iret
dec
in
mov
mov
adc
dec
mull
xchg
gs
aaa
repz
mov
iret
les
mov
ds
repz
and
add
bound
or
xchg
xchg
in
mov
xchg
push
mov
in
leave
xchg
push
movsl
lods
stos
inc
fsubrs
dec
mov
sahf
sbbl
out
orb
inc
inc
out
and
push
test
xchg
sub
test
scas
scas
xor
push
jl
sbb
testb
out
xchg
push
dec
lea
out
adc
imul
sbb
test
lret
fwait
pusha
mov
dec
gs
or
cltd
adc
xchg
out
popf
or
adc
shr
std
cmp
cli
push
xor
pusha
adc
xor
xchg
push
mov
sub
insl
loop
pop
int
add
es
mul
jae
jp
push
lret
cltd
iret
xorb
js
xchg
sbb
aas
fs
cmp
jo
cli
cli
sbb
inc
xchg
or
lahf
rclb
lahf
addr16
inc
daa
jmp
mov
mov
pop
jo
jle
push
inc
adc
fldenv
xchg
sub
or
mov
insl
mov
inc
mov
adc
sarl
dec
jmp
shrl
ret
ds
sub
mov
cmpsb
push
ret
jno
dec
fimuls
push
sahf
repnz
shl
aas
adc
outsl
cltd
adc
fmul
or
cli
cld
scas
stc
daa
sbb
pop
sub
adc
shlb
stos
sub
lods
adc
movb
ret
mov
xlat
jecxz
ret
popa
movsb
cld
mov
and
test
inc
movsb
sbb
push
repnz
subb
insb
add
push
cmpsb
jle
add
sbb
mov
imul
mov
xchg
clc
clc
pop
jmp
inc
sub
or
dec
mov
and
add
lret
subb
xor
inc
push
add
addb
les
mov
pushf
and
pop
fwait
dec
fst
inc
gs
std
lods
mov
lods
mov
fsubrl
shlb
ja
insl
jg
sarb
mov
pop
mov
das
push
jl
icebp
fxch
js
ficoml
mov
es
ljmp
xor
xchg
fimuls
test
cmpsl
dec
xor
and
rolb
aad
inc
or
out
cmp
or
pusha
mov
ret
jmp
mov
icebp
xor
push
repnz
ret
push
outsl
add
xor
push
dec
je
push
out
pop
pop
dec
dec
arpl
sti
sti
mov
int3
or
dec
add
ss
icebp
pop
lret
cli
pop
sarb
mov
psubd
mov
dec
mov
dec
add
cld
jmp
xlat
rcl
rcr
fcmovnb
mov
repz
sbb
enter
or
ja
dec
sbb
xor
xor
mov
mov
outsl
jecxz
mov
xchg
mov
pop
out
sbb
or
mov
inc
sbb
mov
cld
shll
mov
mov
out
add
insb
dec
add
xlat
fisubrl
push
inc
push
add
pop
lret
inc
inc
inc
ficomps
negb
mov
inc
pop
aad
inc
inc
sub
insb
push
dec
in
lods
and
xchg
pushf
or
lcall
push
xchg
in
add
mov
js
insl
fcoml
push
fincstp
dec
mov
popf
lods
jmp
add
pushf
and
add
pop
loopne
dec
adcb
mov
and
aam
pop
jp
and
sbb
out
mov
mov
mov
out
dec
mov
pop
arpl
in
inc
pushf
lods
pop
jns
sbb
push
mov
push
aas
mov
fcoms
pop
xor
inc
push
inc
mov
mov
mov
push
sbb
enter
and
cltd
and
push
cltd
mov
jbe
pop
or
imul
dec
cmp
repnz
lcall
push
in
loop
roll
inc
nop
push
xchg
add
xchg
pop
enter
xor
dec
sti
sbb
movsb
in
and
and
or
aas
out
mov
ljmp
fmuls
mov
sbb
cld
fstpt
addr16
or
loopne
sbb
push
pushf
shlb
mov
fwait
es
mov
mov
push
push
mov
cmc
and
mov
xor
mov
xchg
pop
mov
das
cs
ds
or
jmp
clc
inc
add
push
xor
cs
mov
cmc
popf
sub
pop
repnz
and
cwtl
call
lret
add
test
gs
fistpll
les
cmp
or
adc
jp
aam
pusha
jns
cmp
leave
mov
mov
pop
filds
out
mov
add
std
add
mov
add
jae
outsl
xchg
mov
mov
sub
pop
inc
pop
insl
dec
jbe
push
aas
inc
stos
in
pop
jae
xchg
mov
cltd
mov
inc
gs
daa
fcomps
ds
and
fcompl
gs
mov
mov
push
stc
leave
mov
xor
jmp
sub
shrb
cmp
repz
and
lods
push
out
outsb
sub
dec
push
push
out
subl
js
or
in
dec
inc
sub
addb
or
cmp
jnp
adc
lahf
pushf
or
inc
and
lods
adc
shlb
cmp
out
pop
dec
sub
aaa
mov
cltd
xlat
sbb
or
pushf
fdiv
mov
dec
enter
adc
scas
fcompl
cmp
outsl
sbb
test
es
push
jmp
pop
outsb
test
inc
pop
push
rclb
xor
cltd
loopne
test
xchg
lcall
in
or
rcr
xor
xor
cmp
call
out
or
aad
mov
pop
add
shll
push
jp
or
jmp
cmp
xchg
cmpsl
test
aam
mov
bound
xchg
test
cwtl
lods
cli
je
xchg
adcb
mov
enter
mov
loopne
insl
dec
pop
repz
flds
les
imul
add
mov
jmp
mov
test
fwait
and
cmp
mov
stos
inc
stc
mov
orl
adc
adc
mov
int
cmp
sub
mov
lea
jmp
ror
enter
rcr
in
bnd
pop
test
jle
add
pop
rcrl
pop
pop
cmp
mov
inc
mov
ret
addr16
neg
sub
cmpsb
pusha
xchg
or
nop
outsb
push
or
cmc
bound
xchg
ljmp
rclb
dec
fld
or
loop
or
mov
push
stc
outsl
cmp
mov
adc
push
inc
add
cmp
adc
xchg
outsb
mov
aaa
loop
test
push
dec
and
test
adc
cmpsl
call
pop
sbb
add
dec
and
or
push
jmp
push
mov
shll
xor
add
cld
inc
mov
dec
cmc
clc
rcrl
mov
and
cmpsb
cmc
dec
and
mov
mov
jge
mov
je
in
mov
sub
mov
push
idivl
jmp
add
int
cmpsl
shrb
int
and
jbe
xchg
jnp
icebp
jb
add
inc
mov
sti
loopne
scas
pop
rorb
leave
call
jg
mov
sbb
push
xor
call
mov
inc
push
enter
sbb
fisubl
daa
test
fwait
shrb
fisubs
sarb
fldl
mov
mov
rorb
mov
cmp
xor
jne
out
jp
dec
sti
dec
push
add
in
filds
dec
ja
inc
iret
cmovne
ja
fidivrl
fstpt
jae
bound
add
mov
jg
pusha
dec
loopne
out
loope
out
mov
ja
xchg
or
out
sbb
sbb
mov
dec
push
lock
mov
enter
in
mov
js
mov
mov
push
insl
cmp
scas
clc
nop
add
adc
mov
test
xchg
push
xor
cs
mov
push
jl
pop
push
mov
and
inc
sbb
add
dec
push
stos
mov
xor
lret
dec
dec
out
jnp
jecxz
inc
ret
jmp
pop
lret
inc
les
addr16
adc
push
pop
mov
adc
sahf
mov
int
aas
aam
movsb
and
hlt
mov
and
ss
mov
jbe
shll
mov
shl
push
push
imul
in
push
fdiv
inc
and
ret
clc
fisttps
aas
add
jae
ja
imul
xchg
mov
sub
lea
in
jp
jecxz
in
mov
repz
xlat
dec
xor
fsubs
in
or
es
lea
cmpl
cs
mov
pop
fists
mov
sbb
push
mov
lret
or
enter
jge
sub
adc
roll
xor
mov
jo
jns
ds
mov
push
inc
add
sub
sbb
fcmovu
mov
mov
push
movsl
push
cmpsb
cmc
push
jle
idivb
lds
sbb
cmc
jmp
in
stc
aas
mov
clc
push
lock
push
pushf
ret
imul
imul
mov
xor
stc
jb
or
xor
xchg
add
push
sti
enter
int
pop
pushf
call
int
sbb
insl
push
adc
cltd
xchg
popf
fildl
xchg
xchg
mov
or
aad
fwait
sub
test
jno
pop
add
cmp
xor
pop
rcrl
lock
pop
dec
mov
adc
aad
sub
xchg
test
inc
jmp
mov
push
push
cmpsl
cmp
ja
lds
jle
scas
call
mov
xor
mov
call
stos
jecxz
inc
cld
cmp
sbb
test
mov
jg
sti
mov
xchg
rcl
stos
mov
ja
icebp
fwait
ljmp
add
pop
dec
xchg
decb
pushl
mov
jmp
aas
aad
mov
push
cmp
and
enter
mov
sbbl
xlat
test
loopne
xor
add
mov
ljmp
imul
adc
and
sub
push
jae
rclb
jae
shr
icebp
ret
lret
ss
shlb
fisubs
mov
xlat
lods
jecxz
push
mov
lea
sub
mov
rclb
inc
jmp
adcl
mov
pop
cmp
lea
inc
test
cmp
cmpsb
stos
sub
adc
cmp
push
test
enter
cmp
cld
mov
je
mov
mov
jmp
mov
push
ffreep
mov
test
in
rolb
mov
ljmp
icebp
hlt
push
xchg
or
and
push
push
and
out
push
add
aaa
ljmp
mov
stos
and
movsb
dec
pop
fimuls
lock
sbb
sbb
pop
loope
inc
pop
loope
push
pop
dec
movsb
xchg
into
xor
cmp
les
pop
cwtl
jno
pop
mov
xor
ljmp
cmpsb
gs
flds
xor
mov
iret
push
fisubl
inc
push
xor
or
aam
jge
push
push
sbb
mov
push
pop
xchg
inc
in
cli
bound
ret
dec
lods
in
les
and
ljmp
lods
aas
les
push
add
fnstenv
adcb
cltd
out
lret
fcompl
mov
mov
sbb
jge
jbe
clc
jl
sbb
jge
inc
sbb
xchg
movsl
aad
andl
push
lcall
imulb
pop
xor
ljmp
cmp
push
sub
cmp
pusha
in
jp
repz
lahf
dec
imul
adc
hlt
lock
pop
and
mov
imul
xor
add
adc
gs
addl
int
icebp
inc
cmpsl
xor
jmp
lret
adc
popf
ljmp
jne
dec
adc
and
dec
push
xchg
pop
aas
or
int3
gs
aas
icebp
inc
sbb
push
dec
and
push
mov
aam
cli
insl
roll
test
out
movsb
push
add
lret
push
shlb
adc
pop
int3
mov
div
dec
int3
xor
add
out
out
push
add
jns
and
leave
fdivrl
jmp
js
push
sbbl
ss
fisubrs
adc
mov
add
pop
jg
sbbb
add
adc
test
pop
pop
js
mov
movsl
pop
adc
lods
adc
cmpsb
add
lret
imul
pop
popa
cld
or
xor
loop
fsubrp
push
sarb
je
cltd
test
sarl
div
lods
xchg
jae
out
iret
lahf
je
movsb
aas
cmp
pusha
mov
adcb
loop
lea
jno
pop
idivl
nop
jnp
cmpsl
ss
cli
cmp
jle
jae
lcall
adc
xor
pop
fiadds
out
mov
jecxz
sub
aas
cs
clc
mov
in
cwtl
daa
outsb
or
mov
cmc
testl
dec
sar
mov
sub
mov
mov
cmpsb
and
add
stos
mov
nop
sar
add
inc
push
and
xchg
das
mov
std
push
imul
mov
jl
inc
scas
pop
xchg
stos
mov
xchg
and
inc
mov
scas
or
jmp
mov
imul
ficoml
xor
sub
std
pop
ss
and
xchg
js
push
sub
inc
mov
dec
pop
fistpl
in
fsubrl
cli
push
xlat
dec
nop
sbb
inc
mov
call
hlt
dec
sub
jge
lods
dec
rorb
push
cmp
push
add
jge
sbb
inc
pop
or
add
xor
data16
add
lret
ret
test
les
enter
arpl
out
sar
out
jbe
ss
xchg
lahf
test
or
insb
xchg
loopne
pop
xchg
sbb
cwtl
cmp
inc
xchg
jg
and
or
leave
xchg
es
mov
out
out
pop
or
and
enter
mov
adc
xchg
jmp
xchg
je
mov
es
mov
ret
dec
mov
jl
ljmp
sbb
into
jecxz
ret
push
cmpsl
xor
mov
lret
mov
sub
cmc
pushf
lock
or
scas
movsb
ficoml
push
dec
loopne
cmc
xor
fwait
mov
pusha
cmp
negb
out
lret
sbb
ficomps
das
mov
ds
nop
ds
in
mov
sbb
mov
shlb
fisubrl
sub
inc
xlat
push
outsb
dec
clc
pop
push
push
and
sub
adcb
ljmp
leave
leave
mov
cwtl
iret
call
cmp
insl
push
or
fwait
push
cmpsb
sti
enter
jp
add
imul
adc
pop
push
inc
pushf
lods
push
loopne
sbbb
cld
movsl
add
inc
ret
aam
add
sub
cs
cmp
lock
xchg
fs
lcall
xchg
shlb
adc
and
jnp
pusha
xor
add
dec
jmp
jo
push
pop
out
rolb
adc
dec
int
mov
cmp
push
fisttpll
pop
and
test
aas
xor
imul
push
sbb
gs
pop
fisttps
ja
dec
jbe
test
ss
mov
in
pop
popa
inc
fwait
sub
sbb
lea
push
fnstsw
call
adc
in
cmp
and
jle
call
movl
push
inc
shll
jbe
or
cmp
xor
scas
fcomps
gs
out
fsts
inc
xchg
xor
sub
sbb
cltd
push
icebp
xchg
in
loopne
or
loope
or
out
daa
stos
outsl
pop
push
cmp
pop
mov
sbb
pop
dec
mov
mov
fs
pop
mov
cmp
and
pop
push
cmp
jae
das
add
pop
sahf
inc
fs
mov
sti
idiv
mov
cltd
jecxz
imull
ficoml
pop
xchg
push
sbb
leave
outsl
test
and
ret
ds
shrb
les
stc
mov
lods
inc
popf
daa
xor
push
loop
sbb
jno
les
mov
sub
clc
loop
fldcw
in
shr
sbb
rcrb
inc
out
sarl
push
outsl
test
aam
out
lock
or
jle
mov
lret
stos
popa
out
mov
push
loop
cmp
orb
in
lea
js
cmp
jno
jmp
add
mov
xor
push
arpl
out
sub
in
dec
mov
inc
mov
pop
ljmp
xchg
xchg
aam
sbb
rorb
adc
bound
dec
lock
into
clc
in
icebp
shlb
jge
lahf
loop
push
pusha
inc
pop
cmpsb
icebp
shrb
clc
mov
xchg
rorl
pop
jo
cmpsl
xchg
std
iret
pop
xchg
or
mov
pop
adc
cmc
push
push
sbb
and
mov
mov
or
cmp
in
outsb
daa
or
fiadds
inc
push
sbbb
or
repz
cmp
aad
sub
stc
fwait
shrl
pusha
adc
pop
faddl
push
push
and
jne
mov
xor
mov
std
add
ret
mov
xor
je
sub
add
inc
xlat
cmpsl
xchg
ljmp
mov
fisubs
sbb
cmp
inc
in
in
inc
jp
repnz
or
rcr
push
pop
and
clc
mov
add
add
data16
add
aas
rcl
rcl
ror
aas
icebp
xchg
xor
enter
jae
dec
pop
mov
push
inc
inc
bound
and
push
add
lods
aam
xorl
cltd
addr16
mov
aad
and
loope
fistps
outsl
out
sbb
shrl
stc
dec
push
adc
inc
movsl
mov
bound
int
ljmp
pop
negb
rorl
cwtl
lahf
mov
lret
mov
sbb
sahf
in
pop
ret
insb
rol
xor
inc
push
fcomps
insb
les
ficoms
jge
bnd
out
pusha
sarb
inc
adc
push
sbb
jns
xchg
scas
into
je
push
mov
inc
jnp
addr16
or
lea
fsts
push
loope
imul
out
notb
cld
aam
or
push
jne
popa
push
dec
sub
push
lods
aas
mov
popa
fs
stc
ljmp
jo
cli
fiadds
xchg
cwtl
cmp
mov
pop
fldenv
or
repz
in
inc
repnz
or
pop
pop
dec
dec
adc
jmp
mov
mov
inc
mov
test
add
stos
test
lcall
jmp
arpl
repz
test
pop
xchg
sub
mov
lods
jmp
push
adc
lret
xchg
mov
adc
sbb
pushf
loop
push
cmp
dec
cmp
data16
xor
mov
movsl
mulb
sahf
aad
sub
cmc
lahf
xor
xchg
sbb
mov
push
shrl
sahf
es
pop
adc
repz
test
pop
stos
stc
lds
cmp
cmp
in
mov
orb
aas
lods
dec
mul
mov
lret
and
sbb
sub
clc
icebp
fistl
pop
int
add
aad
dec
inc
mov
in
fdivr
lcall
jno
lock
imul
xchg
push
mov
ficompl
dec
fidivrl
iret
std
add
faddl
lahf
sbb
fiaddl
cmp
and
rorb
or
fnsave
xlat
popa
push
pop
and
stos
dec
mov
mov
data16
sahf
lcall
cld
push
jg
mov
sbb
jbe
movsl
or
mov
mov
rcr
orb
aad
lret
cltd
lock
jno
sbb
mov
test
mov
push
xor
pop
int3
lods
lds
scas
pop
fwait
mov
inc
mov
movsb
nop
xor
or
iret
jmp
nop
jne
xchg
mov
fsubrl
ljmp
lds
cmp
push
mov
cmpsl
inc
mov
cmp
int
dec
pusha
sahf
xor
sarl
adcl
test
loopne
out
lock
and
and
lahf
xchg
push
test
sbb
lret
shrb
jg
and
and
repz
out
stos
imul
ficompl
iret
mov
cmpsb
dec
shr
add
leave
dec
xor
rol
cli
push
fnsave
pop
add
call
arpl
and
imul
clc
std
out
sbb
pop
test
out
mov
sbb
and
test
cmp
and
add
sub
cmp
jmp
mov
js
fists
rol
enter
or
xchg
jecxz
insb
sarb
mov
lods
shlb
pop
ret
mov
adc
mov
or
push
fidivrs
push
cmpsl
mov
inc
mov
mov
arpl
xchg
cmc
mov
iret
stos
push
clc
inc
lock
xchg
lcall
scas
outsl
movsb
push
test
push
mov
sub
out
imul
sub
test
gs
out
jns
xchg
mov
fbld
jb
test
xor
jne
ljmp
pusha
lods
mov
dec
pop
pop
inc
push
adc
cmpsb
add
cmp
lea
pushl
lea
jmp
xlat
enter
jge
mov
pushf
das
jg
enter
int3
bnd
negl
daa
call
ficoml
cmpsl
lahf
mov
aas
ret
outsl
inc
movsb
add
imul
aam
cmp
pop
scas
clc
rcr
ret
ljmp
mov
hlt
mov
jae
mov
ja
pop
es
popa
in
std
lcall
xor
sbb
leave
pop
test
lret
pop
shlb
pop
gs
sub
insb
data16
mov
mov
stc
aam
mov
arpl
adc
or
mov
cs
sub
cs
fiadds
mov
push
dec
add
xchg
testl
cli
mov
jb
jb
out
out
pop
mov
push
adc
scas
in
adc
movsl
dec
inc
fsubl
inc
pop
or
and
fistl
mov
mov
sbb
mov
aam
cmc
lock
scas
mov
sbb
js
lods
and
ja
jp
in
adc
add
xchg
in
cmp
ds
mov
push
add
mov
adc
xchg
test
nop
negb
push
jle
fwait
xor
or
add
mov
adc
js
xchg
jns
adc
fs
faddl
out
lahf
add
add
test
je
mov
cwtl
jecxz
dec
sbb
xchg
push
js
scas
aam
jns
test
and
cmp
jno
xchg
addr16
fdivs
idiv
jbe
sarl
ficoml
sub
mov
lret
not
mov
adc
popf
mov
cli
mov
inc
adc
sbb
jmp
scas
arpl
mov
fsubrl
add
xor
enter
mov
xlat
jmp
fidivrs
pop
imul
stc
jo
sbb
icebp
test
insb
ja
sub
aad
rcl
mov
cmc
add
clc
out
imul
cli
xchg
xchg
mov
mov
fidivl
clc
ret
jo
pop
mov
flds
lahf
clc
enter
mov
cmpsb
insl
and
lea
pushl
std
inc
push
in
mov
inc
jge
inc
pop
pop
outsl
mov
mov
xchg
lcall
ljmp
ss
popa
mov
aas
ret
or
push
gs
jae
lcall
pop
scas
mov
loope
sub
pop
int
sbb
pop
rcrb
or
cli
lds
outsb
stc
adc
and
mov
dec
xchg
in
iret
inc
and
addb
push
insl
movsl
imulb
notl
hlt
or
rorl
sbb
call
mov
or
dec
iret
push
cmovns
xor
pop
jl
jb
int
jae
enter
les
cwtl
and
lcall
and
bound
loopne
mov
xlat
in
les
popf
ss
jb
mov
and
lods
inc
movsl
push
jecxz
push
push
nop
sub
adc
adc
pop
orb
nop
add
lods
inc
sbbb
mov
sahf
mov
shr
dec
fimull
push
adc
jg
pop
arpl
mov
mov
xor
in
cltd
lea
add
mov
jnp
adc
rcrb
mull
rep
sub
cmp
int
enter
pop
mov
jo
or
mov
jno
mov
fnstcw
lds
xlat
pop
xchg
push
mov
insb
daa
out
aas
xchg
xor
fcompl
es
sub
cwtl
negb
inc
hlt
mov
sahf
nop
in
in
push
push
movsb
sti
in
jmp
sub
les
dec
hlt
int3
loop
inc
add
or
icebp
push
push
mov
stc
or
sahf
add
ret
add
xor
add
xor
data16
add
leave
ret
stos
lock
or
xor
enter
icebp
sbb
jne
repnz
sub
mov
push
cmpl
inc
xor
adc
and
inc
test
pop
sbb
aas
in
or
ret
mov
push
cmp
add
push
lret
out
push
pop
mov
lcall
dec
dec
mov
adc
push
xor
loop
push
mov
mov
pop
or
jecxz,pn
adc
jp
sub
mov
sub
lret
adc
shlb
inc
int3
jl
sbb
adc
shr
cmp
iret
jbe
sbb
fisubrs
add
push
push
pop
add
scas
xor
or
inc
in
insl
mov
jmp
cwtl
jp
mov
int
cltd
enter
aaa
jl
lahf
stos
out
dec
iret
xchg
loop
addr16
push
out
andl
mov
cmc
mov
lods
add
mov
cmc
movsb
adc
insl
negb
pop
pop
pop
scas
jp
lret
ljmp
push
test
sbb
xor
ret
sti
adc
cs
inc
cmpl
cmp
test
push
inc
cmp
or
sub
andl
sbb
sti
sbbl
rcll
jne
outsb
jns
pop
sbb
jl
cs
mov
xchg
add
push
adc
xchg
push
pusha
jno
enter
mov
icebp
mov
mov
jbe
pop
test
dec
jl
jbe
jbe
das
sbb
add
xor
stc
ds
pushf
and
xchg
dec
aad
xlat
xchg
test
inc
sbb
xor
test
mov
test
in
lods
fisubs
sbb
stos
std
xchg
mov
sahf
loopne
popf
mov
mov
out
jno
and
push
test
mov
in
inc
cmp
xchg
jmp
mov
or
lds
or
xchg
dec
cmp
aaa
arpl
fiadds
fdivrs
push
in
stos
jg
jae
inc
fisubs
test
mov
mov
jmp
in
adc
jns
cmp
mov
xchg
loopne
cmp
sub
movsl
and
push
adc
jns
in
cli
xor
loopne
push
push
fistl
out
xchg
pusha
outsl
fwait
clc
pop
cmp
push
aam
sub
lret
sub
pop
sbb
jmp
adc
outsb
adc
mov
div
dec
mov
add
out
aad
inc
xchg
popa
sarb
push
adc
shrb
shrl
mov
das
mov
pushl
lret
mov
xchg
inc
ja
xor
stos
mov
out
je
sub
nop
lods
dec
loopne
jo
shrl
xchg
jmp
jae
add
fs
insl
mov
mov
push
gs
mov
out
jg
xor
test
mov
loopne
push
cmc
dec
cmpsl
sti
negl
mov
jmp
jmp
aas
stos
fcmove
hlt
inc
push
push
pop
frstors
mov
mov
pop
jo
cmpsb
out
pop
shrb
bound
cltd
push
scas
jmp
mov
pop
cmp
cmc
mov
push
mov
mov
mov
gs
scas
push
repz
xchg
or
cwtl
xor
mov
add
sbb
or
icebp
cmp
rol
inc
mov
cmpsb
and
sub
ja
ja
adc
arpl
cmpb
repnz
cmpsb
sub
in
mov
test
ret
stos
push
pop
or
test
fdiv
cmc
sahf
int3
sbb
jno
movsb
jl
in
data16
jo
cmp
mov
cmp
mov
or
ret
sbb
fildll
int
mov
mov
or
insb
push
mov
mov
add
jae
test
sub
and
aas
lcall
outsb
rcrl
add
add
iret
lret
fadd
or
ja
fwait
xchg
cmp
jle
add
aam
or
cmp
lcall
fwait
js
cwtl
aam
sub
sarl
ret
mov
mov
sub
ljmp
adc
in
sbb
pop
jg
inc
pop
add
xor
mov
or
and
outsb
xor
xor
lahf
bound
insl
xor
mov
xchg
or
js
iret
repnz
xor
sarb
ficoml
push
or
jmp
cmp
test
cld
in
stos
pushf
sub
movsb
mov
frstpm(287
inc
movsb
jnp
cmp
jbe
leave
xor
das
and
sbb
inc
push
stos
pop
cld
es
push
std
ret
mov
out
out
rcll
pop
ret
lret
movsl
daa
mov
outsb
pop
ss
sub
fistpll
jle
sbb
roll
pusha
pop
inc
xchg
and
push
inc
ja
mov
lods
shl
mov
mov
cmpsl
inc
adc
std
sub
jle
jnp
xor
fsts
inc
pushf
into
add
test
fidivl
inc
test
add
sbb
cmp
push
enter
jb
es
inc
in
insl
jb
scas
push
aaa
dec
into
inc
or
mov
pop
in
in
fnstcw
int3
data16
sahf
mulb
test
xchg
cmc
dec
rcrb
dec
or
popa
dec
into
sbb
mov
xor
pop
int3
xor
fsub
pusha
fs
cs
stos
sub
dec
fwait
push
lods
inc
jge
push
or
mov
push
mov
or
jge
fbld
jnp
add
andb
lea
jge
lods
cmp
xchg
push
repnz
push
push
adc
xor
pop
int3
test
dec
test
stos
daa
inc
pop
inc
bound
dec
xchg
xchg
and
out
jmp
mov
pop
dec
sub
out
addr16
sub
mov
cmp
and
adc
outsb
and
pusha
sub
test
jecxz
arpl
cmpsb
les
lods
jge
pop
decl
clc
iret
jle
dec
jmp
int3
cmpsb
ss
sbb
sti
jo
or
imul
stos
dec
in
cmpsb
nop
imul
add
sbb
inc
clc
int3
jl
jbe
jmp
in
mov
je
shlb
andb
fdivrl
ljmp
sub
cwtl
fst
subl
cmpsb
pop
lret
adc
pop
sbb
scas
les
xchg
xchg
mov
and
shll
mov
dec
out
mov
lret
jge
rclb
xchg
int3
into
dec
pop
stc
lds
enter
mov
cltd
push
push
jb
cmc
add
mov
xor
movsb
cli
ja
sub
pushf
ljmp
lcall
andb
cli
stos
lahf
or
cmp
fcoms
jne
add
test
test
lods
pusha
call
mov
sar
adcl
push
adc
ret
or
adc
add
cs
cmp
subb
lods
sbb
mov
sahf
add
cmp
add
jno
clc
fidivrl
dec
fcmovbe
or
test
jo
and
out
push
xor
xor
and
push
mov
lret
and
jle
aam
arpl
adc
jne
or
shrb
lcall
in
int
jmp
push
xabort
and
dec
fs
cmp
test
jae
push
jmp
mov
dec
out
faddl
scas
int
loopne
mov
scas
push
popa
mov
idiv
or
dec
cli
out
push
cmpb
or
pop
sub
les
ja
pusha
filds
stos
mov
adc
xchg
addr16
mov
test
lock
fisubrs
adc
js
dec
mov
cmp
sub
xchg
test
shrl
enter
jl
add
or
data16
add
iret
ret
sarl
pop
outsl
adc
jle
add
cmp
loop
ret
test
push
push
stos
or
jl
xchg
push
sub
or
in
add
outsb
fwait
inc
rcrl
xchg
lret
adc
jl
xchg
aas
sahf
ljmp
aas
sub
jne
xchg
es
dec
bswap
xchg
cmp
lds
xor
mov
pop
mov
or
int
cmc
dec
subl
stos
out
int
incl
xchg
jns
add
and
xchg
mov
jge
shll
xchg
push
outsb
push
repnz
enter
in
push
mov
mov
xor
outsb
enter
repnz
pop
imul
mov
mov
adc
aad
in
in
add
xor
dec
int3
aaa
stos
aad
imul
xor
inc
lret
push
decl
stc
nop
ror
xchg
inc
push
in
imulb
push
sub
iret
or
inc
hlt
cwtl
test
pop
sti
insl
pop
jne
cmpsl
mov
cmp
add
push
xor
pop
sbb
decb
scas
xchg
shll
add
mov
xchg
mov
inc
adcb
and
sub
jae
loop
pop
gs
cld
ud2
or
incl
mov
adc
adc
jno
in
iret
mov
sbb
mov
jno
dec
outsb
xor
cmp
mov
sahf
inc
push
sbb
loop
inc
loop
jp
mov
and
inc
divl
cmp
stos
jne
mov
jnp
push
sti
inc
xlat
out
pop
xchg
sbb
test
xor
mov
or
cli
lret
sbb
mov
pop
ljmp
lds
add
mov
out
ja
sti
mov
or
xchg
lcall
inc
ss
jne
or
int
clc
pop
cld
xchg
fbld
ss
mov
xor
inc
faddp
xchg
mov
jb
jmp
mov
jbe
loope
lods
xchg
das
sub
mov
xor
clc
or
mov
push
iret
outsl
xchg
ljmp
and
imul
cmp
outsb
shr
jg
dec
mov
mov
stos
sbb
cmpsl
lahf
adc
out
cmp
insl
cmp
sbb
ss
aas
inc
rol
add
sbb
roll
adc
outsl
ret
xor
in
and
out
daa
add
es
pop
mov
movsl
cmp
or
push
outsb
inc
mov
jp
jl
xor
or
daa
gs
pop
std
stc
movsb
fs
das
jle
push
or
sbb
mov
das
mov
aas
pop
xor
jns
push
insb
mov
mov
fidivl
push
in
mov
fsub
xchg
in
sbb
lret
dec
lds
ljmp
and
cltd
and
mov
lods
dec
cmc
mov
xor
fisttps
sbb
aam
mov
repz
dec
pop
pop
lods
les
push
les
ret
or
push
fcompl
xor
icebp
add
and
idivb
jp
push
shl
mov
push
es
fnstsw
les
out
mov
loop
cwtl
pxor
jnp
lahf
sub
repnz
es
inc
mov
sub
and
or
es
push
insl
rclb
mov
dec
imul
mov
lods
jmp
out
mov
movsb
pop
enter
scas
cmp
pusha
out
cmp
mov
push
add
sub
call
xor
sti
pushf
cltd
lds
rcrl
mov
mov
call
popf
jp
add
shrl
pop
stos
dec
lods
aam
scas
push
imul
enter
lock
test
mov
cmp
jp
push
jle
int3
outsl
mov
inc
test
out
jle,pn
push
xchg
pop
jmp
cmp
into
rcl
rol
rol
mov
loopne
popa
test
jle
add
fdivl
fstpt
test
xchg
dec
sahf
out
dec
xor
inc
mov
inc
pop
ficoms
pop
sahf
xor
and
ljmp
or
inc
call
mov
icebp
and
fneni(8087
in
fwait
and
mov
in
jo
mov
cmc
xor
mov
int
movsl
jo
or
inc
clc
jae
sarb
xor
pop
push
insl
cmp
cmp
pushf
inc
pop
mov
pop
pop
gs
fsubp
pop
jge
fistps
pop
push
sbb
mov
test
dec
inc
js
jle
imul
out
dec
xor
xor
jns
add
mov
lahf
push
mov
jle
lahf
xchg
mov
mov
popf
nop
pop
mov
daa
stc
incb
rcll
ja
or
jmp
pop
push
dec
pop
fisubrl
fidivl
jp
pop
jge
jle
jmp
popf
scas
int
mov
dec
stos
je
nop
icebp
aam
shll
inc
pop
loopne
leave
dec
inc
jno
mov
mov
aad
cmp
ja
pop
scas
dec
subb
stos
lock
mov
rcrl
out
xchg
sub
mov
dec
cmp
inc
dec
mov
popf
stos
je
cmp
in
sti
std
popf
jae
cwtl
repz
scas
add
pop
xchg
lods
scas
jge
sub
add
mov
and
cltd
pop
stos
clc
and
out
iret
jmp
test
popf
cmp
sub
rorl
cwtl
xchg
fcoms
mov
or
scas
or
xchg
xchg
mul
nop
out
sub
push
mov
scas
sarb
loop
std
arpl
mov
xchg
ficomps
sub
lcall
stos
xor
adc
sub
mov
in
cmpsb
xor
aaa
mov
push
push
mov
xchg
jnp
inc
cmp
imul
ljmp
imulb
popa
pop
icebp
pop
jne
xchg
mov
popf
mov
rclb
xlat
mov
fisubrs
xlat
xchg
mov
mov
mov
pop
ss
mov
add
dec
xchg
jnp
popf
add
jae
fsubrl
lret
mov
inc
pop
sub
andb
adc
rcrb
out
or
xor
add
insb
test
or
inc
rcrb
mov
out
mov
push
je
cltd
or
push
bound
shll
fcomip
xchg
shrl
jp
int3
call
icebp
gs
rclb
sbb
jne
fadd
push
popa
lret
inc
pop
dec
test
mov
mov
aas
and
mov
int
fucomp
lods
in
lea
fwait
stos
xchg
stos
lods
xchg
in
or
jbe
mov
fdivrp
cmpsb
cmp
mov
fiaddl
cmp
and
dec
jecxz
mov
aas
std
mov
enter
xchg
jo
xor
out
and
mov
or
imul
and
mov
or
aam
loop
in
dec
jno
and
push
sbb
inc
orb
sarl
lds
test
sub
ret
out
push
addl
aad
inc
sub
mov
rolb
or
clc
pop
fwait
dec
insb
xlat
jp
xor
repz
jl
jmp
leave
cltd
inc
rorb
aaa
xchg
sub
movsl
mov
daa
jb
es
dec
aam
or
xchg
push
mov
push
inc
pusha
mov
aad
fisttps
decb
jno,pn
enter
dec
inc
aad
lods
xchg
push
pop
sub
mov
push
or
jo
sub
cmp
dec
cld
mov
ss
shlb
adcl
sub
orl
inc
int
cmp
jmp
sbb
mov
pop
std
push
mov
fcoms
loop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
andl
jmp
sarb
lret
rcr
fcoms
and
mov
testb
jle
or
call
and
inc
icebp
inc
ja
lea
punpcklbw
fisubl
in
push
mov
jb
mov
mov
jo
repnz
repz
aas
mov
jae
les
dec
push
mov
addr16
xchg
cld
aad
std
out
mov
fwait
and
jmp
sub
cli
jge
add
xchg
mov
adc
mov
je
sbb
mov
dec
inc
mov
fisubrs
ljmp
or
sbb
ja
adc
jnp
test
es
js
dec
jmp
pop
enter
cwtl
movsl
cmp
es
cwtl
enter
dec
lret
int
dec
inc
popa
or
sub
jmp
movsl
sbb
movsl
adc
pusha
xchg
jge
pop
scas
mov
pop
int3
dec
js
or
dec
xchg
je
test
mov
push
adcb
mov
lock
mov
repz
jo
pop
hlt
lds
push
inc
aaa
xor
stos
mov
add
push
mov
lock
out
fimuls
js
movsl
test
cmc
adc
cmp
adc
mov
scas
xchg
outsb
mov
dec
in
or
hlt
mov
addr16
aas
shrl
popf
add
in
stos
cwtl
pop
shl
pop
cmpsl
push
push
scas
jle
mov
push
loope
cs
adc
enter
jmp
sub
push
lods
mov
in
jno
push
fsubrp
mov
ja
adc
mov
xor
xorl
outsl
mov
or
sti
xor
popa
or
adc
dec
or
mov
hlt
cmc
out
add
call
mov
lds
fcmovnb
adc
sbb
daa
shrb
enter
xchg
xchg
inc
push
sahf
daa
xor
jae
sbb
or
outsb
ficompl
outsb
xchg
mov
lahf
bound
test
sub
jo
fldlg2
scas
and
jl
int3
shl
and
xchg
out
push
adc
jns
mov
lret
cli
lret
mov
in
mov
daa
scas
mov
dec
jne
icebp
outsb
cs
imul
out
xchg
test
xlat
sbb
pop
xor
enter
sbb
sbb
push
inc
in
hlt
nop
fcomps
stc
pop
nop
in
jge
mov
fst
inc
mov
xchg
dec
int3
and
adcb
out
out
sbb
or
rolb
add
or
sbb
ds
movsl
stos
fs
mov
pop
imul
stos
aad
daa
aaa
jns
lods
call
sbb
lock
lds
je
sbb
mov
imul
pop
mov
fcmovnb
adc
in
adc
jb
shlb
mov
mov
mov
or
jae
mov
data16
mov
push
jbe
or
je
lahf
imul
pusha
sbb
cmpsl
lods
stc
out
adcb
int
jmp
scas
mov
fbld
int3
inc
jecxz
je
jb
leave
jns
inc
xlat
aaa
inc
test
stos
push
cmp
mov
mov
fs
dec
mov
fdivrl
adc
bound
push
cs
insb
push
subl
stc
scas
sahf
pop
xlat
incl
add
loop
data16
stc
and
mov
loopne
movsb
xchg
mov
dec
xchg
xchg
movsb
inc
mov
out
xlat
fcomp
mov
and
movsb
sub
out
arpl
je
adc
pushf
shlb
cmp
and
mov
jmp
imul
add
add
pop
cmp
fs
pop
not
xchg
or
in
stc
jbe
sti
mov
mov
mov
insb
mov
xchg
fdivrs
pop
ljmp
adc
pop
pop
fmuls
and
sbb
popa
jl
jns
pop
pop
cs
movsb
jns
jmp
or
cmp
insl
jnp
fwait
pushf
out
das
pop
sbb
repz
cmc
test
mov
sahf
lock
aas
out
sbb
mov
out
adcl
pop
fadds
adcb
repz
add
add
add
add
adc
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
ror
enter
lret
pop
push
jns
mov
sahf
lds
testb
jle
pop
mov
cli
mov
mov
or
lcall
mov
rclb
or
int3
jle
lret
push
sbb
jge
mov
inc
sub
popa
xchg
cmp
mov
push
mov
lea
in
movsb
inc
cs
mov
aam
jno
fwait
or
xor
pop
insl
xchg
loopne
xacquire
adc
pop
imul
lds
adc
stos
dec
test
sahf
xchg
xchg
js
repnz
jg
loope
xor
mov
jge
add
das
flds
loopne
push
divb
mov
shrl
lock
clc
push
enter
int
fsts
mov
shlb
daa
mov
cmpsl
xchg
cmpb
adc
xchg
je
sub
and
mov
and
in
xor
sbb
mov
mov
pop
pop
ret
ret
jbe
dec
add
push
pop
push
mov
ljmp
in
cwtl
dec
mov
mov
adc
in
jecxz
ds
ds
or
adc
scas
mov
lret
dec
mov
jp
adc
pushf
daa
cmp
adc
mov
roll
stos
test
inc
xchg
mov
and
cltd
fucom
xor
mov
xlat
push
pop
test
lods
xor
aad
pop
clc
insl
stos
mov
and
xchg
add
sub
mov
fsubrl
lret
dec
and
sub
rdmsr
call
xchg
xchg
sbb
sub
jbe
les
fildl
inc
cmpsb
dec
cltd
test
inc
add
or
dec
sbb
sub
adc
nop
nop
insl
outsl
xchg
or
lcall
add
add
cmp
mov
data16
adc
stos
js
mov
dec
mov
jge
enter
in
xor
inc
jne
int3
jg
pushf
std
jp
lea
push
xchg
adc
dec
aam
cmp
push
adc
rolb
adc
add
mov
loope
in
test
adc
pop
xor
testl
bnd
jne
mov
xchg
mov
mov
dec
inc
pop
adc
or
ret
mov
dec
inc
mov
ds
push
pop
and
dec
lock
and
mov
push
orl
xchg
std
into
cmpb
loop
cwtl
mov
lods
cmp
clc
inc
das
jecxz
aam
jo
out
fs
aam
sbb
mov
cwtl
flds
nop
stc
adc
movsb
ss
incl
fwait
aad
xlat
add
push
cwtl
xlat
adc
in
rorl
dec
int3
fwait
inc
in
icebp
xchg
push
dec
test
ds
mov
jle
and
rolb
or
xor
xchg
pop
daa
xchg
dec
jmp
inc
cmp
jne
sahf
nop
mov
pusha
outsb
dec
dec
xchg
scas
inc
lea
cmpsb
lea
insl
loopne
movsb
mov
sbb
frstor
mov
jp
or
or
lret
pop
sub
xchg
jae
in
and
imull
cli
cs
jo
xchg
xchg
call
es
hlt
mov
outsb
adc
icebp
imul
mov
iret
inc
adc
enter
pop
lret
jmp
push
inc
xchg
mov
adc
xor
rol
xchg
out
jmp
mov
mov
mov
adc
cmp
dec
inc
aaa
js
or
mov
scas
mov
or
push
dec
lcall
stos
xchg
pusha
adc
into
xor
mov
xchg
arpl
mov
mov
mov
push
aas
add
inc
and
out
aam
subb
mov
add
stc
xchg
in
pop
scas
fdivrp
push
mov
repz
jne
mov
clc
out
or
mov
imul
cmpsl
mul
stc
inc
add
andl
sub
cmp
test
inc
or
adc
push
add
mov
mov
sub
movl
jmp
mov
lret
rcr
aam
sbb
ja
or
arpl
push
into
jg
testb
jle
imul
neg
mov
fwait
mov
hlt
lahf
gs
imul
push
mov
mov
outsb
fcomps
out
pop
add
inc
ljmp
data16
fisubrs
test
mov
adc
gs
sbbb
dec
or
pop
xor
mov
pop
js
jno
cmp
movsl
je
test
fistps
loope
dec
loopne
rolb
jbe
dec
jae
jle
lret
dec
cmpb
xorl
pop
scas
pop
daa
push
imul
pop
ret
cld
or
pop
enter
inc
cs
inc
push
aaa
imulb
roll
jl
add
adc
enter
jno
sbb
dec
mov
sahf
sbb
jl
cld
loope
sub
xor
cwtl
loope
mov
out
in
push
adc
inc
add
je
inc
inc
loopne
lds
pop
dec
clc
pushf
int
mov
cmp
mov
inc
xchg
adc
icebp
fistpl
sub
xor
stos
jp
adc
arpl
fisubrs
inc
ja
xchg
push
xchg
call
jo
sti
movsb
mov
scas
enter
enter
shrl
adc
fcmove
cld
dec
addr16
pop
and
mov
out
pop
pop
cmp
add
mov
push
xchg
and
out
push
test
dec
or
or
xchg
xor
out
arpl
in
push
outsl
push
add
shll
ret
mov
xchg
ljmp
les
dec
push
sbb
rolb
mov
cmpsb
hlt
xchg
fisttps
loop
movsb
sub
rcrb
pop
push
leave
arpl
rcl
mov
fisubrl
add
ret
and
mov
clc
js
mov
movsl
mull
hlt
out
icebp
ret
js
mov
lcall
lods
add
cli
mov
test
mov
fldl
test
dec
notl
xchg
xchg
sub
popf
push
outsb
xchg
test
aaa
ss
aam
es
add
inc
mov
or
addl
andb
aas
mov
pop
ret
shll
cs
xor
xor
jb
flds
mov
cmp
sub
sbbb
push
lcall
mov
xchg
jo
cmp
mov
repz
cmp
adc
mov
fwait
dec
pop
fldt
adc
mov
cmc
lea
ljmp
cmpsl
test
xchg
cwtl
loopne
adc
pop
daa
jae
dec
pop
imul
std
xor
test
xor
in
in
cld
sbb
cmpl
clc
mov
or
add
cmc
cs
sbb
or
pop
test
adc
pop
outsb
sub
data16
fldt
shlb
int3
loopne
xorb
or
mov
pop
scas
jmp
push
mov
cmp
sub
xchg
mov
or
sub
jmp
push
push
push
movsb
jne
lds
ret
mov
xchg
mov
rcl
pop
pop
or
rcrl
jmp
jl
mov
xchg
jb
pop
sahf
xchg
dec
mov
adc
cmc
and
jecxz
pushf
aas
pop
push
xor
out
cmpsb
addr16
mov
in
mov
mov
dec
out
mov
cwtl
mov
repnz
cmp
and
dec
jecxz
or
adc
sbb
xchg
push
mov
jb
mov
pop
inc
inc
movsl
cmp
test
jbe
sub
inc
outsb
lret
lods
jl
rcl
lods
xchg
jns
mov
gs
shlb
jne
xchg
xchg
lods
push
sarl
fldenv
jne
lret
xor
add
shll
arpl
jmp
stos
dec
bound
jae
jnp
fnsave
or
adc
xor
mov
inc
push
cmp
es
jns
xchg
xchg
lcall
fwait
dec
fcmovnb
movsl
clc
jne
jne
movl
mov
dec
mov
adc
mov
xor
sub
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
jmp
into
rol
vpmullw
fstps
and
js
mov
mov
jg
testb
jle
mov
add
ret
out
jg
cmp
push
sub
cmp
or
add
mov
imul
add
mov
sti
cmpsl
cld
cmp
adc
add
fwait
imul
push
mov
pop
fwait
mov
and
aad
dec
lods
repz
adc
and
push
dec
jnp
mov
orb
das
xlat
fstpl
jo
mov
outsl
aas
mov
cltd
cs
insl
imul
push
xchg
xor
mov
cmpsl
imul
fdivl
dec
or
data16
mov
movsb
cmp
lock
sub
movsb
mov
scas
lahf
data16
out
rclb
cwtl
pop
das
or
or
jge,pt
popf
inc
outsl
and
int
lods
pminub
in
xchg
or
dec
repnz
sub
sub
cld
xor
in
popf
dec
cmp
add
xor
lret
inc
add
lods
mov
xor
or
mov
and
scas
push
sub
test
in
mov
adc
fadds
mov
cmp
pusha
cmpsb
jge
dec
cli
jge
mov
dec
cmpl
or
clc
clc
dec
jmp
push
insl
pusha
stos
sbb
insl
cmp
int
sub
mov
push
push
or
fdivl
out
jecxz
jmp
imulb
sbb
pop
xchg
bound
out
loop
jb
hlt
cltd
movsb
enter
sub
dec
xchg
pop
out
jle
mov
lods
mov
dec
in
fmul
jecxz
in
adc
mov
in
add
movsb
sahf
pop
ja
test
lds
mov
xor
fwait
inc
push
lret
int
jecxz
sbb
js
xchg
shlb
ret
popa
les
mov
push
stos
cmpb
pop
test
sub
addr16
scas
xchg
xorl
mov
rclb
push
inc
sub
in
xchg
pop
fcompl
jne
push
dec
insb
push
jmp
cmp
ret
in
cli
imul
scas
es
xor
xor
mov
inc
mov
sbb
and
loopne
in
dec
inc
pop
aas
lock
mov
mov
xorl
push
jl
sub
fistpl
mov
fildll
or
test
or
adc
pop
mov
fs
sub
lods
sbb
push
dec
xchg
lds
xchg
adc
repnz
or
data16
dec
xchg
mov
fsubs
xchg
insb
lahf
mov
mov
dec
xor
push
jmp
popf
sub
push
les
mov
jl
shlb
in
aaa
push
pusha
in
mov
aad
jl
out
shll
pusha
enter
add
in
xchg
out
and
enter
fistpl
add
sbb
jae
mov
lea
xor
inc
out
testb
loope
outsl
je
mov
test
cmp
pop
pop
cmp
loop
test
xchg
mov
in
xchg
and
jle
dec
push
les
lahf
ljmp
pop
cmp
lods
dec
push
test
clc
add
xor
clc
adc
push
pop
ret
es
pop
mov
adc
les
imul
push
mov
xchg
ficoms
stos
xchg
and
dec
adc
jae
mov
xchg
fdiv
cltd
xchg
lcall
pop
pop
xor
aas
shll
in
scas
mov
icebp
dec
sbb
mov
and
and
into
push
arpl
repnz
popf
aam
dec
inc
cmp
std
iret
inc
fisttpll
fwait
and
push
and
pop
jnp
add
jp
in
pop
pop
fbstp
dec
adc
xor
sub
or
xchg
xchg
cmp
add
cmpsb
mov
stos
repz
aaa
or
cmp
jge
lret
add
rorb
aad
fstl
je
add
clc
cmpsl
fcomps
shrl
pop
ss
orl
imul
jecxz
scas
adc
fdivr
jmp
inc
in
mov
enter
push
lods
int3
pop
push
inc
add
xorl
mov
jmp
ret
aas
fcmovnbe
ror
mov
stos
dec
push
adc
mov
xlat
jg
testb
jle
rorb
push
push
iret
push
mov
aas
stos
push
push
push
cmpsb
scas
sub
dec
fldl
add
dec
ljmp
add
les
xchg
adc
hlt
fmuls
mov
sbbb
js
loope
push
test
repz
cmp
roll
and
adc
ljmp
push
cmp
loop
jbe
push
icebp
dec
cli
popf
aad
cmp
dec
adc
loope
add
pop
sbb
or
push
bnd
mov
out
int3
mov
out
js
adc
push
es
je
pop
mov
mov
jle
jmp
jmp
cwtl
jmp
push
xorl
xlat
nop
lea
ds
outsb
mov
xor
inc
xor
lods
je
and
lds
fldt
ds
daa
jecxz
pop
dec
add
nop
ficompl
and
sbb
out
mov
pop
lret
iret
fs
cmpsl
inc
aad
out
adc
or
jbe
jge
sbb
mov
adc
cmp
push
xchg
adc
out
lret
mov
mov
scas
sbb
xchg
test
sahf
dec
lahf
aad
stos
mov
sub
sbb
xchg
daa
loope
scas
xor
scas
pop
mov
dec
jno
or
outsb
inc
inc
in
ret
xor
cli
adc
dec
sbb
mov
xor
or
pop
movsb
add
outsb
iret
jnp
xchg
hlt
mov
mov
dec
cmp
cltd
mov
cld
subb
or
jg
adc
mov
mov
js
and
out
cmc
pop
aas
imul
add
shlb
aam
inc
mov
xchg
ret
push
jmp
dec
out
cmpb
mov
ret
mov
enter
add
push
nop
xchg
cmp
fdivr
sbb
pop
xchg
push
test
dec
call
aam
data16
mov
insl
int
jg
in
out
fidivrs
rclb
cmpsb
pop
cs
xor
int3
cmp
or
ret
add
pushl
int
aam
push
jle
dec
lods
sbb
hlt
pop
insl
xchg
or
dec
scas
pop
cwtl
movsl
aad
jp
jl
outsl
out
adc
xchg
dec
shlb
popf
jbe
sub
in
cwtl
jo
out
mov
cmp
xchg
add
mov
pop
xchg
mov
xorb
adc
jo
dec
push
sub
xchg
cmp
fwait
dec
cmp
jo
out
aas
push
cmp
adc
push
add
sbb
dec
loope
xor
mov
lret
mov
in
arpl
jl
mov
mov
ficoml
loopne
out
aaa
paddusw
data16
mov
addb
mov
mov
shrl
xchg
mov
jno
mov
mov
xlat
sub
mov
push
mov
pop
cld
shr
xchg
xchg
lock
jp
fiadds
sub
push
adc
push
jg
test
jge
ss
fistpll
ret
and
adc
dec
jle
push
mov
into
test
in
or
mov
loopne
mov
xchg
sarb
test
pop
aad
ss
xchg
js
pop
cld
push
pop
jg
out
mov
call
fstpt
jne
dec
push
out
or
inc
cmp
stos
xchg
loope
insb
dec
mov
shlb
jne
lcall
in
jle
ror
jno
sub
mov
ret
cmpsl
pop
sub
mov
fs
adc
and
addb
sti
lods
addr16
popa
xor
testl
pop
loope
iret
rcr
imul
jbe
cmp
cli
jge
push
add
xorl
fistpl
mov
sbb
jmp
inc
fistps
xor
loop
das
test
enter
xchg
movsb
mov
add
movsw
cmc
iret
or
out
leave
push
cmpb
scas
es
inc
loop
or
fadds
mov
mov
sar
inc
out
mov
add
push
jl
mov
xor
movzwl
and
add
xor
or
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adcl
movl
add
movl
movl
movl
xor
xor
and
movl
add
movl
jmp
rcl
lret
rcr
aad
in
out
inc
push
sub
fstpt
testb
jle
mov
fidivs
fistpll
jl
mov
mov
inc
lret
inc
arpl
lret
jmp
or
xlat
arpl
inc
pusha
mov
mov
clc
mov
lods
pop
add
cld
outsl
stos
xchg
shrl
fnsave
in
insb
fs
mov
rorl
jp
cmp
push
inc
pop
cmc
das
insb
push
aas
cli
aas
imul
scas
mov
jb
inc
mov
inc
push
push
jle
xchg
out
xor
sbb
xor
test
jb
ja
popa
int3
dec
or
add
iret
cmp
notl
or
cmpsl
stc
mov
inc
fs
mov
cwtl
sub
rol
jge
mov
cmc
push
popf
mov
push
movsb
hlt
das
xor
xchg
pop
push
mov
add
dec
fsubs
adc
inc
inc
je
cmp
pop
outsl
fs
inc
or
mov
lock
or
and
jg
or
push
sbb
push
movsl
and
imul
call
pop
popa
pop
adc
xor
movsl
leave
cld
into
cmp
call
fsubrp
je
cmp
jg
push
xchg
mov
addb
aaa
cmpsb
sbb
insl
add
call
cmp
pop
pop
xor
and
loope
hlt
lods
pop
cmp
cltd
and
enter
lcall
mov
sti
lods
aad
cmpb
sahf
dec
mov
mov
mov
pop
add
mov
stos
mov
xchg
jl
and
sub
sub
aad
and
repz
repz
add
dec
in
sbb
adc
enter
bound
mov
xchg
or
inc
cmp
in
mov
and
leave
out
pop
push
cli
jmp
sbb
nop
cli
jge
leave
arpl
fdivrs
pusha
sub
add
mov
mov
xchg
enter
addr16
add
mov
mov
sahf
hlt
out
das
jg
xor
movsb
pushl
pop
sbbl
jle
repnz
xor
xorl
xor
jge
and
rolb
popf
enter
push
rcrb
jns
pop
inc
into
add
dec
decl
cltd
hlt
xor
adc
rdmsr
mov
and
imul
add
jne
iret
mov
jle
int3
sbb
test
push
pop
cmp
jecxz
les
push
out
scas
fcompl
loope
jnp
jge
stos
notl
test
in
jge
mov
in
js
fisubl
cmp
or
stc
movsb
mov
xor
int
jbe
shlb
cmp
rclb
popa
stos
subb
rclb
idiv
stos
ret
add
pushf
push
inc
out
add
das
mov
shrl
and
in
sbb
or
mov
sbb
add
sbb
int
jns
aas
insb
sub
mov
aad
and
daa
add
loopne
sahf
or
adc
aam
lret
ficoml
or
filds
or
mov
movsb
jo
out
push
xor
int
inc
cs
int
mov
xchg
xchg
sbb
jp
jge
cmp
scas
inc
dec
lock
mov
std
pusha
mov
inc
and
push
sbb
cmp
pusha
fwait
das
or
fldcw
outsl
lret
push
loope
clc
mov
cmpsl
repz
repz
in
pop
jae
push
pop
lret
cmp
inc
jae
decl
mov
ljmp
sti
or
in
sbb
clc
fwait
addr16
pop
scas
loop
mov
out
jecxz
and
xor
push
xchg
and
or
inc
test
add
cmp
push
jo
addb
adc
jnp
rcrl
movsl
fcmovnbe
mov
pop
sub
cmc
shl
movb
push
pop
gs
cs
pop
ds
mov
mov
jl
push
mov
mov
inc
movl
xor
xor
or
mov
mov
xor
xor
sbb
jmp
int3
ror
cmp
mov
dec
in
aaa
jbe
jg
testb
jle
dec
pop
inc
jp
sub
jno
ret
test
in
fdivl
ss
mov
ficoml
icebp
and
loope
mov
dec
mov
cmp
outsl
ljmp
int3
shlb
sbb
mov
dec
dec
mov
dec
push
dec
loop
and
imul
inc
fiaddl
inc
cwtl
jae
mov
fsts
es
lods
jle
pop
mov
mov
addr16
shrl
push
adcb
mov
insb
pop
mov
add
movsb
cmp
xorl
push
inc
cmp
mov
stc
dec
cmp
mov
sbb
pmaddwd
dec
ds
inc
push
jns
inc
dec
dec
in
inc
test
xchg
enter
cmp
mov
adc
mov
scas
lret
ja
mov
jno
mov
dec
pop
pop
shlb
bnd
jno
sbb
ss
stc
test
nop
dec
dec
dec
int3
je
bnd
rol
pop
lcall
aad
cmp
test
mov
jns
xchg
inc
icebp
xchg
mov
pop
test
cmpsl
repz
ljmp
aam
loope
ret
mov
mov
inc
cmpsb
pop
loopne
lret
les
or
add
leave
aad
jo
xchg
out
mov
mov
mov
jbe
pop
imul
lock
das
inc
scas
in
xor
jb
pop
jp
pushf
inc
cmpsb
mov
mov
icebp
cmpsb
jg
shll
lock
es
imul
xchg
sub
je
pusha
xor
inc
cmp
sti
cmpsl
arpl
mov
jg
sbb
xchg
insb
push
xlat
testb
fldl
cmp
mov
cmp
and
cwtl
push
xchg
popf
loop
cmpsb
pusha
xor
das
pushf
mov
mov
std
xchg
push
dec
pop
decl
push
and
jo
cmp
cmp
lock
add
mov
sbb
pop
negb
test
pushf
bound
pop
mov
mov
xchg
loopne
test
lods
mov
mov
push
jae
loope
sbb
xchg
scas
pop
lock
mov
or
dec
jbe
std
dec
out
adc
jle
xor
xchg
insl
cmp
xchg
xor
or
dec
incb
sbb
push
mov
push
mov
cmp
das
lcall
xchg
push
dec
mov
mov
sub
xor
pushf
addr16
mov
insl
and
xor
popa
jbe
inc
sub
repnz
lea
cmp
call
sub
xor
ret
addr16
repz
pop
pusha
add
scas
bound
cmc
iret
inc
inc
cwtl
push
push
shll
push
mov
sbb
push
sbb
and
mov
adc
mov
push
movsb
inc
out
out
jns
cmc
push
out
mov
sti
mov
mov
sub
push
xchg
pop
fs
shll
push
leave
outsl
sub
call
pop
adc
lahf
pop
cmp
cltd
push
mov
jmp
mov
mov
push
ss
in
sbb
pop
clc
fmull
ds
das
cmp
pushf
fldl
and
sbb
cltd
add
xorl
mov
cltd
into
imulb
loopne
cmp
idivl
push
jo
xor
sub
in
mov
inc
lahf
imul
push
inc
xchg
jmp
xor
mov
or
out
mov
fisttpl
es
aas
pop
addr16
cwtl
cmpsb
subl
in
and
cmp
movsb
push
dec
mov
cmp
rcrb
push
push
stc
jb
or
dec
cmp
inc
adc
inc
push
push
dec
jl
jo
push
mov
ja
sbb
mov
mov
push
jo
and
lods
rcr
mov
mov
pop
test
mov
sahf
fstl
and
fidivs
bound
jmp
aas
ret
aam
fcomp
fcmovnb
and
sbb
out
loopne
jle
add
insl
mov
inc
test
js
jle
dec
jae
cmp
clc
push
ljmp
and
insl
mov
cs
ss
cmp
pusha
sbb
sbb
sbb
jo
xchg
jmp
iret
push
sub
movsl
and
ficompl
dec
es
push
xchg
mov
cltd
fildll
into
pop
push
push
inc
orl
out
fmuls
call
cld
movb
xor
fiadds
repnz
pushl
gs
pushw
lret
jnp
cltd
inc
aaa
xor
pusha
adc
in
cmp
fldt
shll
mov
in
cmc
cli
or
push
jo
add
pusha
fwait
cmp
ss
push
adc
leave
loop
cs
test
jo
or
ja
test
or
negb
adc
test
int
xor
pop
xor
cli
int
xchg
outsb
add
inc
es
inc
xchg
push
or
cwtl
ljmp
xor
sub
ja
nop
ret
int
mov
hlt
jecxz
add
in
lahf
mov
xlat
xor
sub
fidivrs
sbb
mov
popa
adc
cmp
adc
or
mov
cld
mov
popf
mov
xchg
xchg
mov
movsl
mov
dec
and
icebp
shlb
ja
inc
and
in
push
or
aaa
lds
out
xorl
push
or
ret
lcall
adc
fwait
sbb
cmp
out
gs
int
pusha
push
sbb
push
and
lahf
adc
dec
jl
adc
cmpl
cmp
or
xchg
xchg
cmpsl
mov
pop
mov
lds
mov
pop
int
repz
jl
in
testl
jne
sbb
xor
aas
addr16
pusha
mov
push
int
cmpsl
imul
push
aad
testl
loop
pop
in
or
mov
popa
mov
rolb
aas
dec
enter
jns
insl
dec
pop
jmp
jecxz
stc
jmp
scas
inc
stos
sahf
repz
lcall
mov
fnstsw
cmp
mov
outsl
std
cmc
jbe
call
xor
jg
repz
pushf
insl
aad
imul
cmc
mov
inc
fxch
movsb
je
cmp
jle
mov
jle
rcrb
nop
roll
repnz
cmp
aam
lock
lock
loope
loope
and
lcall
imul
pop
adc
dec
mov
movsl
insb
stos
leave
or
push
sub
in
in
cld
iret
ror
mov
jmp
testl
out
jecxz
mov
mov
cmp
ljmp
xor
stos
jns
mov
push
jp
and
cmp
xchg
ja
pop
in
mov
pop
pop
jae
dec
sahf
hlt
and
push
adc
pop
mov
les
inc
fisubs
push
std
inc
cmp
dec
stos
xchg
mov
fistpll
divb
dec
jnp
mov
mov
mov
outsl
shl
dec
push
stos
mov
inc
aam
lods
loop
lcall
pop
bound
pop
dec
and
push
inc
mov
dec
dec
cltd
test
push
mov
sub
mov
pop
add
jo
push
dec
and
out
jp
jp
aam
dec
leave
movsl
hlt
gs
jl
call
add
mov
and
andb
rol
shl
pushf
outsl
sbb
jns
aas
push
inc
gs
and
pop
cmp
loopne
xor
mov
adc
lcall
cltd
pushf
pop
lahf
out
out
ljmp
daa
push
lahf
adc
xchg
shrl
mov
mov
xchg
xor
add
lock
addr16
mulb
pop
pushf
shll
ja
lods
cld
pushf
mov
pushw
cli
movl
jmp
int3
cmp
iret
aad
adc
aad
data16
jle
add
adc
or
and
xor
jae
add
pop
or
fs
sbb
xchg
lea
pop
or
jnp
loope
adc
push
xlat
fsts
lods
pop
int
rorb
js
femms
mov
inc
clc
mov
imull
aaa
test
fbstp
repz
aad
in
mov
out
sub
test
xlat
xchg
int3
dec
pop
cli
mov
movsb
adc
addr16
lods
or
ljmp
lds
popa
into
add
int
sub
insb
and
xchg
and
xchg
push
inc
arpl
scas
or
mov
xchg
sbbl
or
or
in
es
cld
lahf
fwait
js
mov
cmpsw
mov
je
lods
ds
imul
lcall
leave
push
ret
push
lret
xor
ret
adc
mov
outsl
shrb
mov
fs
shlb
or
outsl
mov
push
out
pop
push
loope
lahf
outsb
gs
leave
and
cmp
enter
ret
sbb
pop
out
cmc
sbb
inc
sub
insl
icebp
sub
xchg
dec
mov
mov
mov
inc
js
or
mov
and
jnp
scas
insl
in
insl
testl
cmc
xchg
cld
and
mov
adc
push
mov
fisubs
ror
rcrl
dec
cmp
std
ljmp
add
loope
push
lret
imul
pushf
mov
out
call
cmova
push
cwtl
jno
sbb
cld
cli
add
inc
outsb
loope
aas
adc
sbb
push
mov
pop
push
stos
inc
mov
pop
outsb
inc
sahf
xor
push
xchg
cmp
int
mov
je
sbb
push
adc
shll
inc
lods
pop
sub
aas
inc
or
movsb
fs
mov
or
cltd
or
loopne
jg
mov
addb
les
ljmp
mov
and
or
push
leave
in
pop
adc
stc
jl
inc
scas
push
into
push
std
sbb
les
lods
loopne
stc
mov
xor
mov
dec
loop
and
fistpl
push
xchg
mov
jecxz
pushf
aad
xchg
pushf
repz
xchg
or
cmp
leave
or
dec
adcb
xchg
repz
cltd
popf
inc
adc
jmp
sub
cs
pusha
iret
movsb
jl
mov
cmpl
mov
test
fs
push
cmp
adc
fnstenv
and
jae
xor
test
shlb
lods
addr16
adc
rorl
mov
data16
enter
jbe
jmp
fdivl
xchg
int
sub
xchg
incl
mov
sbb
mov
sbb
sti
lcall
pop
sub
push
jnp
int
test
add
sub
repz
jmp
lret
pop
fisubs
pop
jp
pop
push
ret
in
mov
inc
sub
mov
mov
sbb
dec
imul
not
lods
sub
into
pop
xchg
rcll
push
dec
and
mov
inc
cld
push
ficoml
push
loopne
add
adc
scas
mov
pop
test
and
dec
fsubs
jno
dec
stos
les
stos
testl
mov
push
addb
sbb
add
xchg
orl
out
and
pop
pmullw
push
add
xchg
test
loope
scas
jmp
in
leave
popf
mov
mov
push
stc
in
insb
jbe
pop
pop
mov
ljmp
cs
imul
mov
jl
jmp
adc
lahf
and
sbbb
adc
xchg
jb
fisubrl
out
cmp
aad
jb
push
rorb
cmpsl
fmul
sbb
jl
addr16
sub
je
mov
cwtl
and
pop
lds
fdivrl
movsb
ja
pop
inc
jae
jo
jle
mov
add
movl
push
movl
jmp
xor
xor
or
mov
subl
jmp
iret
ret
rol
rcl
pop
dec
adc
fsubrp
jg
testb
jle
sbb
pop
cmpsl
lcall
cli
inc
mov
call
test
in
jp
inc
loop
mov
loopne
pop
scas
pusha
add
movsb
inc
push
lods
push
lods
stc
popa
mov
cmp
push
xor
sub
mov
inc
inc
mov
rol
dec
and
ret
into
int3
mov
ret
mov
cmc
push
mov
jne
push
mov
adc
mov
icebp
sbbl
push
gs
daa
cmp
xchg
add
xchg
loope
js
sub
jo
movsb
jmp
dec
inc
in
xlat
arpl
test
cmpsb
mov
pop
jmp
test
mov
or
dec
das
js
je
mov
dec
sbb
mov
pusha
dec
out
movl
xchg
fidivrs
jo
test
adc
mov
mov
mov
xchg
inc
out
jecxz
out
push
add
lret
dec
ja
lock
push
mov
inc
pop
xchg
xchg
sahf
lea
jne
fidivs
jle
add
in
ss
aas
jb
fistps
mov
jb
lds
lods
stc
pusha
or
cltd
pop
cwtl
inc
into
mov
pop
jmp
popf
bnd
pop
jecxz
imul
add
sarb
hlt
mov
cmp
mulb
xlat
lock
je
fisubrl
xor
insl
push
mov
pop
lock
bound
in
rcrl
xor
mov
mov
mov
lods
push
jecxz
mov
dec
call
gs
push
out
jmp
mov
or
inc
int3
or
sub
sub
mov
xchg
daa
sbb
popa
push
add
mov
mov
inc
dec
sahf
jge
add
ror
outsl
dec
fisttps
mov
sub
cmp
xor
pop
sarb
jno
jle
fdivl
std
jle
sub
mov
imul
mov
push
mov
and
sahf
sbb
mov
shlb
dec
mov
cli
cwtl
adc
shl
ret
aaa
xchg
loope
mull
inc
js
cwtl
mov
pop
fistpll
sbb
js
ret
sbb
hlt
movl
inc
add
test
xchg
inc
xor
inc
rorl
jae
sar
aad
jb
out
mulb
cld
out
mov
xor
xchg
jnp
test
fidivs
push
mov
jecxz
shlb
imul
sub
icebp
push
xchg
mov
adc
imul
jns
or
enter
subl
sub
sub
jle
cmc
xorl
inc
pop
mov
mov
mov
cli
outsb
popa
or
dec
push
mov
jle
jns
nop
pusha
call
sbb
jg
mov
sub
adc
cmp
sbb
inc
stc
bound
arpl
jge
mov
adc
mul
mov
mov
leave
addr16
inc
inc
pop
pop
out
movl
loop
cli
jle
or
mov
lret
cmp
pop
call
mov
stc
cmp
pop
or
ror
pushl
mov
cld
sahf
imul
and
sbb
inc
inc
dec
lds
jne
je
fdivrp
jno
in
jne
mov
fstsw
or
push
cmpsb
mov
inc
je
stos
cmp
jle
cmc
dec
lcall
sbb
lock
shlb
sbb
aad
hlt
out
test
scas
int
and
mov
ja,pt
aad
cwtl
add
sbb
mov
out
ror
cmpsl
pusha
push
or
jp
loop
cwtl
fwait
jb
mov
in
roll
clc
jo
clc
pop
inc
or
push
insl
cltd
enter
pop
insl
enter
jle
and
jg
call
pop
test
lcall
pop
mov
cmc
clc
dec
and
push
cmp
mov
pop
arpl
fwait
jo
negl
mov
into
jg
in
cmc
mov
jbe
mov
andl
jmp
cmp
rcl
testb
mov
in
jg
testb
jle
xor
cwtl
pop
out
mov
test
inc
jae
fisttpll
sbb
dec
repnz
xor
rcr
lds
movsl
fadd
cltd
dec
jle
dec
push
js
xlat
sub
out
daa
loope
jge
ds
dec
ret
leave
ffreep
or
pop
and
mov
jle
sbb
add
sub
pop
cmp
cwtl
mov
xor
add
cmp
push
cli
push
fcoml
sbb
ss
push
mov
xchg
dec
out
lods
sub
mov
dec
add
loopne
jno
push
inc
add
jb
leave
or
fisubl
std
arpl
mov
xor
mov
repnz
imul
and
mov
xor
pusha
lahf
call
sub
mov
cltd
insb
in
mov
fs
scas
adc
pop
push
sub
adc
jb
mov
loop
notb
das
pop
aad
lahf
sub
test
xchg
mov
mov
inc
pusha
clc
js
pop
nop
xchg
popf
push
lcall
inc
lret
dec
xlat
test
adc
iret
add
jle
roll
mov
pop
adc
ljmp
fldcw
scas
mov
adc
cs
fidivrl
push
inc
mov
negb
xchg
xchg
pop
fildl
inc
test
daa
mov
jl
out
aam
fists
sbb
adc
push
fldl
add
push
scas
icebp
fsubp
sbb
mov
cwtl
dec
in
es
fstps
push
adc
fs
jg
jl
fildll
jne
jns
dec
fidivs
cmc
jbe
in
outsb
or
fdiv
mov
ja
sub
xchg
inc
dec
movsl
xchg
push
mov
pop
pop
fstl
adc
jecxz
add
xchg
popa
fs
or
jo
mov
xchg
cmpl
lcall
or
adc
lds
inc
lods
push
insl
cld
imul
out
pop
pop
int
xchg
ljmp
fwait
aaa
bt
cmp
push
sbb
dec
stos
inc
stos
or
insb
push
insb
shll
lock
add
sub
inc
in
xchg
rcrl
out
cmpsb
push
mov
push
enter
int3
mov
push
popf
jno
and
jmp
pop
cmp
dec
mov
ss
mov
push
pushf
pop
dec
in
push
inc
popf
or
movsl
sbb
jns
cmp
int3
mov
jge
aas
jge
rep
clc
mov
add
push
fwait
cmp
mov
add
shll
arpl
jb
and
hlt
lahf
mov
arpl
rclb
lret
push
sahf
adc
aam
ja
scas
push
xchg
shlb
or
enter
movsl
repz
xchg
cmp
push
data16
in
xchg
push
dec
lea
and
dec
iret
cmpl
jb
sahf
cs
ja
jns
mov
xchg
add
mov
sub
dec
dec
push
out
out
mov
sub
into
mov
loop
in
push
adc
scas
mov
sub
cmp
ja
or
pop
xor
pusha
stos
pop
les
subb
push
adc
push
gs
shl
fists
jle
out
or
mov
fs
movsl
cli
add
jge
adcb
sub
pop
mov
xorl
aas
das
orb
repnz
shlb
imull
sub
xor
nop
icebp
jne
in
add
or
jns
mov
sahf
jge
aam
sti
pushf
pusha
rclb
push
sub
pop
int3
add
xchg
jg,pn
pop
outsl
outsl
mov
adc
jae
ss
mov
int
iret
mov
xchg
xor
fwait
shll
cmp
cwtl
adc
or
fdivrl
mov
clc
push
mov
mov
insl
cmp
adc
test
xchg
lahf
cmp
ljmp
lret
adc
pop
sub
push
cwtl
xchg
and
leave
aaa
xchg
mov
imul
xchg
gs
jmp
lret
lret
xlat
enter
leave
push
clc
cmc
das
stos
mov
jg
testb
jle
sti
fisubrl
ret
xor
or
fwait
push
sbb
lret
push
data16
xor
lret
stos
fisttpll
dec
push
mov
and
inc
mov
pop
cmc
push
fnsave
cmp
mov
idivl
mov
xor
mov
xchg
repz
in
movsl
and
sbb
test
adc
int
aaa
add
jns
or
xor
jge
push
inc
jle
ljmp
sub
cld
mov
mov
cwtl
movl
or
cwtl
dec
int3
and
or
mov
and
out
mov
iret
inc
flds
push
mov
lcall
data16
fs
adc
xchg
xor
adc
push
lods
lahf
jmp
sbb
fldcw
mov
hlt
mov
sbb
pop
pop
jne
shr
aad
xchg
pop
test
push
fldl
xor
or
add
add
xchg
or
addr16
push
add
cmpb
xchg
jno
icebp
daa
movl
jo
pusha
std
sbb
adc
jg
pop
mov
in
jne
or
jno
push
sbbl
pop
rcr
inc
icebp
aaa
mov
lds
push
imul
popf
jecxz
sub
imul
lods
outsl
jne
mov
mov
or
shll
pop
test
sbbl
fdivrl
insl
sahf
inc
fisttpll
jbe
frstor
lods
gs
mov
sub
and
in
cmc
ljmp
insb
daa
push
cmp
test
dec
loopne
dec
fadds
xchg
pushf
dec
fwait
pusha
push
jl
loop
pusha
sbbl
cli
mov
gs
in
xor
arpl
push
xchg
mov
inc
repnz
dec
add
fisubrs
gs
testb
and
rcrl
repnz
fldl
jo
xchg
pop
add
clc
mov
sbb
add
xchg
sbb
jno
stos
repz
out
gs
pop
mov
push
mov
adc
iret
push
add
jecxz
or
sub
sbb
lcall
adc
push
insb
fcmovb
xorb
loop
cmp
into
adc
gs
aam
cmp
mov
push
or
test
adc
xchg
aaa
dec
insl
sub
sub
es
jl
adc
push
cmp
inc
insl
inc
es
out
xchg
xor
xchg
mov
inc
add
jmp
adc
addl
jbe
sub
adc
pop
mov
cmp
in
cmp
dec
std
pop
or
xchg
sub
imul
inc
xchg
addl
sub
lock
lds
sbb
mov
sub
fbstp
pop
mov
sub
jp
test
gs
lea
sar
fnsave
loope
aas
push
pop
cmp
cmc
jae
jnp
cmp
pushf
rorb
xchg
or
fcmove
mov
pop
mov
push
movsl
ja
dec
lcall
outsb
stos
faddl
mov
jo
sahf
and
shlb
adc
js
sbb
mov
fs
add
imul
lcall
int3
push
xorb
lods
jbe
or
stc
cmp
cmp
sub
push
mov
hlt
in
roll
stos
jecxz
cmc
push
fnstsw
lcall
bound
sbb
test
cmp
lret
inc
movsl
mov
add
aad
icebp
adc
dec
stos
jo
fidivrs
shl
outsl
and
call
pop
ds
cmp
xchg
push
jmp
cmpb
cld
mov
into
popf
shl
enter
push
mov
call
mov
add
dec
push
fs
lods
out
fldenv
arpl
jl
push
cld
jmp
rol
aam
fcom
shrl
xchg
psllq
aas
inc
cli
jg
testb
jle
sub
int
jno
mov
sub
orl
adcb
movsl
push
jg
test
ljmp
and
das
adc
jmp
stos
cs
insb
clc
lahf
pop
insl
xchg
ret
ljmp
mov
cmp
mov
xchg
test
ds
jl
dec
xchg
cltd
insl
shll
pop
nop
or
adc
nop
mov
adc
adc
outsl
push
bound
dec
pop
cli
push
wbinvd
inc
sub
mov
sub
mov
leave
mov
adc
aaa
or
jno
test
pop
dec
mov
push
adc
cmpsl
and
or
imul
xor
sub
fwait
add
pop
cltd
xor
enter
mov
imul
xchg
cltd
xor
inc
or
dec
dec
and
jecxz
popf
add
inc
lret
jmp
stos
in
popa
push
jo
mov
sub
mov
int3
inc
mov
mov
mov
fwait
scas
mov
or
jae
mov
and
mov
mov
jecxz
inc
mov
push
push
out
inc
aam
dec
ret
jno
mov
adc
fisubrl
xchg
sbb
cmc
insl
xchg
add
outsl
std
vpaddsb
push
cmp
out
and
lods
mov
dec
pop
mov
adc
iret
push
not
pop
jle
jl
dec
add
push
lods
shlb
or
push
cmp
je
jge
and
cmp
pop
inc
int
cmp
pavgw
movl
or
dec
fimull
movsl
scas
push
push
dec
dec
dec
xchg
pop
xchg
lods
int3
dec
mov
ss
ffreep
xchg
sbb
mov
xor
and
cmp
jmp
mov
mov
rcpps
test
or
cmp
rorb
pop
lcall
mov
clc
repnz
jmp
push
jo
xchg
mov
int3
pop
add
mov
fisubl
andl
dec
test
outsb
cmp
mov
and
gs
scas
mov
arpl
cmp
or
rcrb
shl
imul
stos
xor
popa
push
test
addl
sub
add
add
movl
push
pop
aam
inc
test
ja
divl
or
jne
fld
std
test
dec
mov
in
cmc
cmp
push
cmp
ds
loope
divl
xchg
cwtl
lret
das
bound
sbb
or
stc
shl
lahf
fldcw
int
es
and
push
loope
jnp
fmull
cld
xlat
movsl
mov
call
cmp
arpl
inc
add
xor
stos
fldt
frstor
mov
mov
cmp
inc
and
xchg
aas
popl
xor
cmp
mov
nop
or
das
cli
jg
shrb
jl
cltd
jbe
add
jmp
rcrb
sbb
push
jge
add
push
aad
test
and
cmp
or
fisubrl
pop
push
xor
mulb
rcll
aam
rcrb
sbb
and
adc
enter
push
pop
and
inc
andb
out
into
jg
ficoms
add
add
addr16
sub
add
and
sbb
sbb
in
mov
xchg
sti
xchg
mov
mov
fdivl
or
and
dec
movsb
jnp
mov
xchg
or
popf
xchg
ret
add
dec
mov
imul
add
in
cmp
cmpsl
jp
mov
mov
shll
ljmp
inc
push
test
jmp
xchg
pop
jl
mov
bound
pusha
dec
inc
test
mov
add
cmp
mov
cltd
mov
add
pop
enter
sub
jb
fisubl
mov
gs
nop
and
outsb
sbb
xchg
stos
cld
lret
test
xchg
push
pop
negb
out
popa
push
pushf
in
jle
jle
xor
jmp
iret
rol
fcmovb
xlat
fisttpl
ss
and
jg
testb
jle
lcall
les
xchg
pop
mov
das
and
add
pop
loop
cmc
insb
sub
push
fsubs
xchg
mov
faddp
xor
sbb
sub
inc
cmp
int
cli
ljmp
ret
loope
sub
pop
sub
cli
or
imul
sub
lods
push
inc
sbb
fisubl
push
mov
stc
xchg
push
xchg
jle
sbb
xor
inc
mov
xchg
ljmp
inc
int3
and
inc
push
call
data16
push
mov
cmp
cmp
cwtl
push
jg
cmp
es
mov
sbb
push
test
cmc
pop
fcmovnbe
inc
dec
mov
sbb
inc
dec
dec
das
pop
cmpb
cmp
cmp
int3
mov
cmp
add
sub
adc
loop
bound
paddw
mov
repnz
addr16
outsl
out
pop
xchg
push
cld
xor
repnz
push
outsb
dec
pop
mov
fwait
adc
xor
jmp
lods
mov
xchg
inc
lds
mov
lods
pop
lods
repnz
dec
push
data16
xor
push
cmpsb
test
dec
stos
imul
aas
mov
cli
cli
inc
add
fistpll
std
and
sbb
push
push
pop
and
add
loope
xchg
loopne
fwait
jno
mov
mov
sub
scas
jg
xchg
pop
sub
stos
movsb
cmp
jmp
mov
sbb
sbbl
cmpb
ds
mov
int3
ja
ss
dec
mov
adc
and
fsubr
jecxz
lahf
rorl
cmpsl
cmp
cmp
inc
and
push
pop
repnz
and
pop
mov
daa
push
mov
imul
adc
add
data16
jmp
ds
push
adcb
pop
adc
loop
mov
xor
mov
fiadds
sub
aaa
mov
push
cmpsl
add
sahf
pop
out
jp
jmp
fcmovnu
cmpsb
std
stos
ja
fistps
cwtl
mov
pusha
and
test
sub
push
cmp
decb
push
aam
dec
dec
pushf
mov
pop
xor
rclb
sbb
insl
cmc
push
decb
jae
inc
lahf
mov
dec
addr16
jg
stc
xor
leave
mov
push
and
push
xor
sar
inc
pop
xchg
mov
add
jmp
lret
mov
scas
jge
push
mov
jmp
xlat
xor
inc
adc
inc
outsl
dec
icebp
jmp
inc
inc
inc
out
pop
test
xchg
test
loope
movsl
jae
and
gs
and
mov
jl
dec
test
aaa
out
inc
mov
sbb
jno
dec
mov
jnp
inc
jns
popa
ja
dec
dec
imul
movsl
pop
sub
cmp
add
dec
push
jmp
loope
aam
insl
es
mov
in
mov
cmp
and
adc
imul
ret
jbe
cmp
sbb
xor
jo
repz
fs
nop
inc
jg
jo
leave
faddl
push
enter
sub
mov
xchg
out
popa
imul
lcall
add
inc
jecxz
or
and
sbb
sub
aas
pop
sub
cld
outsl
xchg
cwtl
inc
mov
fsubr
and
lret
inc
pop
mov
xorb
inc
adc
fnstsw
vfmsubadd132ps
out
add
adc
push
mov
outsl
pop
sub
mov
rolb
dec
mov
mov
pop
mov
xchg
push
mov
out
jnp
insb
test
cmp
xchg
sub
mov
adc
out
push
in
push
dec
es
insl
xor
mov
mov
lods
xchg
cmp
insb
test
movsl
jle
shll
addr16
add
movsb
mov
mov
nop
stos
or
xchg
ljmp
mov
add
sub
push
lret
rol
add
in
add
cmp
movl
jb
jmp
ror
cmp
aad
inc
std
or
jg
testb
jle
dec
sub
sub
test
in
inc
lahf
mov
and
out
jo
sub
pop
mov
aad
pop
shll
jecxz
in
push
xchg
jnp
in
sti
jge
pop
jo
mov
pop
js
xchg
arpl
mov
dec
mov
xchg
es
xchg
add
and
adc
sbb
cmp
enter
sub
push
sub
pop
jno
lods
xchg
mov
dec
movsl
adc
scas
popa
fldenv
sub
adc
jl
jns
cmp
outsl
sahf
cmpl
stc
mov
inc
or
into
cmp
xchg
pop
mov
jns
sub
je
mov
jle
negl
cwtl
fisubrl
dec
xchg
adc
xor
rcr
test
push
cmp
inc
push
cmpsb
mov
lods
inc
repz
jl
fldt
stos
ret
movsl
push
sbb
cld
push
cmp
adc
loope
dec
sub
out
push
xor
and
pop
aaa
cmpsb
xor
ljmp
xchg
pusha
or
lock
inc
push
mov
or
mov
mov
xchg
or
mov
cmp
in
fld
mov
sbb
mov
jbe
inc
fdivs
jp
lds
sahf
outsl
pop
dec
add
cli
jbe
jns
imul
aad
idivl
lods
insl
add
mov
nop
daa
mov
ja
test
jne
sub
mov
push
jns
jnp
push
xor
ljmp
pop
scas
in
or
cwtl
xor
aad
sub
sahf
test
repnz
mov
mov
cwtl
aad
das
sbb
pop
inc
or
mov
inc
nop
imul
xor
or
pop
lds
xor
sbb
sbbl
movsb
ds
mov
mov
dec
adc
movsb
dec
adc
scas
xchg
xchg
dec
scas
push
inc
adc
or
pop
call
mov
jne
sbbb
aaa
push
sub
insl
js
jge
scas
jl
test
mov
dec
cmp
adc
mov
in
mov
jp
mov
jbe
pop
sbb
fdivp
push
inc
cs
lock
insb
xorb
fisubrs
sbb
adc
shlb
outsl
nop
xchg
sbb
push
xchg
mov
dec
nop
adc
daa
xorl
hlt
in
cs
pop
jge
cmp
out
iret
mov
repz
cmp
mov
adc
sub
daa
dec
cmpb
and
dec
pop
out
test
sub
ss
xor
imul
sub
sahf
jne
rcrb
mov
out
fadd
add
je
aas
and
rolb
and
ret
cltd
scas
and
dec
xor
dec
movsb
pop
popa
sti
sbb
out
sti
inc
xchg
addr16
fadds
sub
sub
pop
pop
xchg
scas
les
mov
xchg
ja
neg
imull
jns
jb
fcmovnu
jb
push
arpl
jp
out
push
clc
pop
mov
ds
ss
sbb
xchg
ret
dec
jo
add
imul
add
addl
and
rcrl
jbe
out
mov
stos
jmp
call
lods
sub
repz
xor
xchg
sbb
out
cs
mov
pushf
pop
daa
pop
jmp
in
orl
xor
sub
sub
pusha
jecxz
fcoml
jmp
sbb
mov
push
test
jb
popa
cs
subl
negb
xor
loop
push
cmc
inc
in
lods
test
dec
inc
icebp
scas
rol
scas
movsl
adc
push
or
mov
mov
shl
lods
icebp
push
js
mov
ja
jmp
in
push
sti
push
add
cmp
jne
lods
adc
mov
add
push
std
mov
imul
or
mov
jmp
enter
xlat
fcomp
fldenv
push
dec
mov
int
test
testb
jle
mov
pop
mov
sbb
lods
adc
xlat
in
clc
test
jecxz
stos
dec
repnz
in
shll
out
shrl
push
sbb
inc
mov
xor
in
mov
in
movsb
jo
imul
adc
je
fimuls
push
sbb
leave
aad
sbb
cld
sbb
pusha
mov
pop
jae
xchg
mov
pop
jl
sarb
sub
mov
dec
mov
jge
push
mov
test
daa
xor
push
dec
insb
gs
repz
lds
inc
lods
inc
testl
popa
imul
imul
ds
push
pusha
jmp
sbb
enter
das
mov
cmp
xor
cwtl
adc
gs
adc
mov
add
shlb
sahf
xchg
and
inc
fcoml
sbb
stos
mov
push
scas
or
add
ja
mov
adc
adcl
adc
aaa
in
dec
mov
sbb
out
insl
in
lock
mov
sarl
or
mov
call
inc
xchg
ljmp
data16
and
fcoms
fiaddl
outsl
ror
lret
mov
iret
cmp
int3
stos
aam
jmp
inc
push
les
pusha
in
ret
call
lds
sahf
pop
aas
pushf
decl
data16
imul
loop
js
test
out
lret
push
push
fiaddl
in
push
mov
dec
sti
test
push
mov
mov
jl
fwait
push
inc
daa
or
scas
pushf
mov
dec
inc
or
in
outsl
xchg
in
sub
cld
push
rorl
or
call
js
mov
movsb
aam
negl
addr16
icebp
push
cmp
xchg
loopne
mov
jne
fiaddl
ficoms
mov
pop
push
daa
add
mov
push
testb
cmpb
lock
inc
dec
xorb
sbb
out
cmp
sub
sarb
ficompl
adc
jg
jmp
les
aas
ds
xor
into
or
or
xor
jns
mov
lcall
dec
sbb
push
insl
cmp
cmp
and
adc
xor
and
adc
data16
and
fstl
mov
fadds
and
jo
or
adc
cmp
add
adc
test
adc
icebp
inc
push
add
lock
ret
js
aas
lahf
stos
loopne
unpcklps
sbbl
out
mov
push
in
stos
sbb
xchg
fsubrl
out
subl
aaa
out
stos
enter
xlat
jl
mov
std
xchg
xchg
arpl
mov
fcmovb
sub
or
sub
scas
fdivp
cmp
and
nop
dec
data16
mov
lret
test
imul
cli
sahf
movsb
stos
mov
call
repnz
movsb
sarl
pop
inc
out
or
jmp
xchg
xor
lods
xchg
cmpsl
xor
shl
cmc
inc
rcl
punpckhwd
popf
sbb
add
sbb
mov
push
cmpsb
xor
out
jle
das
lcall
or
and
shll
stos
mov
test
jbe
mov
out
rorl
je
xchg
sbb
jo
inc
jp
in
popa
decb
push
arpl
sbb
cltd
mov
sbb
inc
mov
fadds
rcll
jbe
xchg
stc
hlt
push
imul
das
jmp
mov
call
adc
dec
repz
sbb
mov
call
jecxz
xchg
pop
aad
arpl
bound
and
mulb
shll
jae
xchg
mov
lock
stc
cmc
fwait
jns
dec
repnz
sbb
sbb
adc
mov
scas
cmpsb
mov
loop
pop
pop
mov
ficomps
outsb
data16
dec
pop
and
cld
jmp
ret
ror
ret
shll
xlat
icebp
or
cmpsb
mov
testb
jle
sub
sbbl
push
add
dec
cltd
and
outsl
and
xlat
into
pop
faddl
inc
push
mov
call
dec
sub
ja
mov
out
out
scas
pop
fidivrl
or
and
inc
and
adc
sti
mov
fisubrl
fstpl
add
push
push
push
pop
cmp
mov
xchg
cld
sbb
pop
mov
out
into
or
and
call
push
mov
xor
pop
in
sub
xor
sahf
mov
insb
shrb
pop
add
add
shl
mov
adc
mov
jle
jg
or
sahf
push
mov
cmp
cmp
ja
push
add
call
mov
or
or
mov
sbb
push
test
mov
mov
cltd
repz
mov
xchg
outsl
cmc
inc
stos
mov
mov
and
xor
xor
mov
fstl
sub
dec
insl
addr16
pop
scas
imul
pop
fcomip
sbb
out
outsb
fldl
ret
pop
rol
outsb
sbb
push
cwtl
xorl
mov
jb
mov
fcmovnb
insb
fdivrs
sahf
pop
mov
and
mov
and
sub
sbb
xchg
fimuls
xor
iret
test
and
or
xor
and
call
ja
xchg
popf
cmp
fnstcw
setge
fldt
jnp
fnstsw
daa
jmp
push
and
sub
sub
out
xchg
loopne
shr
and
roll
ljmp
or
dec
cmp
inc
fidivrl
es
int3
enter
pushf
sub
or
cmpsl
pop
popa
jl
lcall
and
cmp
pusha
fldt
mov
movsl
movb
divl
mov
popa
pop
fsub
insl
mov
out
popa
jae
sarl
dec
xor
test
xchg
push
cmp
push
mov
mov
imulb
sub
lcall
or
mov
in
repnz
dec
js
lods
jl
js
mov
add
into
push
ljmp
xchg
into
sbb
and
xor
jp
inc
sbb
cmp
or
stos
test
xchg
ret
jge
sub
adc
add
fbstp
jle
pop
inc
or
or
lret
cmpsl
call
adc
ljmp
mov
out
inc
and
cld
iret
js
dec
and
popl
mov
shl
push
lds
mov
orb
inc
push
add
in
fsubrp
jg
lcall
fadds
mov
setne
add
inc
sub
or
orb
rcrb
fs
mov
pop
mov
push
adc
shlb
mov
and
insb
dec
xchg
dec
xchg
jl
sbb
cmp
movsl
ja
or
xor
je
jge
in
mov
inc
push
inc
mov
cmp
add
dec
pusha
push
aas
out
sbb
call
pop
pop
clc
shll
ljmp
addr16
mov
cli
nop
cld
dec
cmpsb
mov
pop
mov
mov
mov
sbb
pop
push
cmpsb
addr16
stos
xlat
xchg
lea
xchg
fisttpll
cmpsb
xor
jl
mov
ss
or
sub
sub
das
lods
daa
lret
xchg
mov
rcrl
or
iret
jmp
mov
cmp
ja
jbe
aas
ja
adc
pop
xlat
inc
mov
adc
lods
pusha
repz
fscale
imul
xlat
and
stos
sub
stos
push
aad
mov
ret
or
mov
into
inc
test
mov
insb
mov
and
stos
mov
or
in
push
das
scas
xor
push
or
cs
dec
cmovae
fidivs
test
arpl
pop
dec
add
rolb
add
clc
addl
add
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
addl
jmp
iret
iret
into
aam
aad
aad
push
ljmp
testb
jle
cmp
sub
imul
addr16
test
sahf
loope,pn
xchg
xor
shrb
cmp
jne
xchg
add
fsts
push
lods
push
in
jg
jle
icebp
pop
cmc
and
lods
add
iret
arpl
or
xchg
leave
inc
lret
ss
fisubrs
bound
out
xchg
xor
inc
inc
dec
pop
insl
ljmp
fs
int3
pusha
shrb
stos
mov
cli
bound
ret
push
jmp
xchg
add
sbb
push
loope
arpl
repnz
popa
mov
aam
pop
out
sbb
repz
jmp
mov
imul
pop
lock
sub
jno
in
lret
fstps
stos
adc
adc
lods
jnp
mov
jl
in
xlat
pop
std
mov
add
dec
mov
and
jns
pop
mov
xchg
clc
pop
or
shrb
negb
pop
push
popf
jmp
mov
popa
clc
pop
imul
jne
lret
fadds
mov
sub
lahf
outsl
xchg
stc
sti
pop
jne
lret
sbb
mov
jg
test
cmp
lods
mov
dec
mov
push
in
mov
aam
jecxz
idivl
xor
cmp
clc
insl
push
sub
cld
call
fiaddl
xlat
cmp
imul
mov
inc
dec
out
in
outsb
push
cmpsb
ret
dec
in
das
gs
stc
adc
loop
repnz
push
aad
sbb
jnp
cltd
sub
icebp
add
fwait
jmp
or
or
stos
or
loope
inc
adc
inc
jnp
lods
cmp
cltd
sub
addr16
mov
adc
pop
push
lea
scas
loope
jg
jbe
xlat
push
jbe
dec
lret
gs
mov
in
sarb
push
cmp
jmp
stc
dec
xor
test
add
insl
xchg
mov
jnp
popa
mov
jl
popa
sub
and
shll
or
int
test
cwtl
imul
mov
dec
frstor
fldt
add
out
xchg
rcl
fisttpl
xor
cmp
subl
jecxz
mov
movsb
push
out
outsb
jb
push
jp
xor
jno
insb
mov
xchg
mov
test
adc
xor
inc
xchg
sti
das
sbb
or
lock
adc
lea
shrb
shrl
in
lods
push
inc
fistpll
sbb
insl
shr
mov
inc
inc
jno
outsb
sbb
cmp
pushf
das
jae
jae
inc
out
jne
iret
gs
mov
sub
mov
frstor
mov
cltd
xchg
jge
scas
sbb
dec
sbb
into
and
and
push
sahf
mov
in
jle
popf
sar
rol
stos
add
dec
stos
gs
mov
cmp
mov
dec
jmp
repnz
mov
dec
imul
push
mov
and
mov
fs
data16
xlat
jle
jnp
dec
push
push
mov
pop
xor
fucom
mov
jmp
mov
or
lea
and
inc
mov
out
lods
fsubrl
ret
das
test
sbb
cwtl
lods
mov
mov
lret
iret
scas
jns
and
add
or
jo
mov
orl
mov
test
xchg
bound
test
sub
scas
pop
inc
mov
cmp
mov
andb
jge
movsb
xlat
js
loop
pop
adc
rcr
ljmp
or
outsl
dec
aad
imul
mov
adc
addb
stos
imul
mov
sbb
gs
mov
pop
push
dec
jge
stos
roll
sub
sahf
xchg
sar
fwait
std
out
jl
jl
cmpsl
inc
pop
test
popf
push
push
aaa
push
ss
jl
fcoms
and
mov
shrl
xor
stos
imul
mov
mov
addl
sub
cmp
ja
mov
jmp
cmp
xlat
aad
lds
out
xchg
xchg
jg
testb
jle
mov
pop
aam
dec
in
jno
call
dec
cltd
xchg
sub
cs
cmpsb
rep
aam
fmuls
dec
xchg
sahf
outsl
or
adc
push
push
mov
inc
repz
aaa
out
pop
cmp
fimuls
pop
add
test
imul
lock
inc
lock
ss
shl
loopne
out
je
movsb
add
cld
push
stos
push
jge
lcall
pop
cmp
cmp
int
inc
popa
inc
dec
sub
pop
test
mov
int3
mov
insb
xchg
sbb
icebp
sbb
sbb
mov
cld
cld
mov
clc
add
jmp
or
adc
insb
xor
mov
xchg
lds
rcrb
jae
shlb
loop
push
inc
push
adc
mov
ljmp
stos
xchg
xchg
faddl
shll
cmpb
xor
out
lahf
pushf
repnz
dec
inc
mov
movsl
fucom
rol
sub
push
movsb
sbb
dec
das
andb
imul
push
das
push
les
leave
adc
add
xor
pop
jbe
insb
or
nop
add
roll
fidivl
pop
loopne
subl
xor
push
jmp
jb
iret
mov
ret
inc
xchg
push
repz
into
inc
idivb
mov
ret
xchg
pushf
arpl
mov
jp
dec
mov
xor
mov
dec
loope
sub
mov
mov
jns
xor
xchg
jb
adc
pop
jecxz
mov
jg
sbb
pop
es
fldt
cmpsl
int
cs
mov
jp
xchg
fidivrs
test
xchg
sbb
movsl
pop
pushf
or
nop
ss
push
data16
jge
xlat
lods
sbb
rorb
es
jns
call
lock
inc
sahf
xchg
rcl
js
dec
outsb
fwait
dec
shll
mov
loop
and
mov
push
rclb
addr16
sbb
mov
pop
xchg
sti
cmc
sbb
xlat
sbb
pop
mov
je
xorl
sub
push
sub
sarb
pop
lds
dec
test
dec
xor
iret
xchg
loop
sub
inc
mov
imul
pop
jb
jmp
push
mov
or
or
lds
stos
mov
mov
sahf
push
arpl
or
xchg
imul
inc
jmp
pop
cmpsb
cmp
jecxz
mov
lods
cmp
ret
sbb
dec
mov
mov
enter
adc
inc
mul
loopne
int
sbb
mov
shll
jl
sar
fists
mov
outsb
cltd
aad
push
in
scas
int
stos
mov
push
test
adc
stos
jne
popf
dec
push
cmp
and
sub
data16
mov
push
add
push
add
cwtl
jecxz
sbb
dec
movsb
jp
push
dec
cmp
stc
in
dec
jb
je
or
mov
jb
push
dec
outsl
or
dec
lock
mov
cmp
ficoml
stos
push
shrl
call
add
xor
je
jae
and
push
pop
cmp
adc
adc
rclb
adc
pusha
adc
popf
inc
xor
negb
mov
and
mov
xchg
test
nop
loop
add
loop
int3
adc
cld
pop
push
push
mov
mov
or
and
ljmp
dec
jnp
lods
cmpsl
std
sti
push
xor
mov
dec
jb
cmp
aam
je
mov
push
lds
repnz
jo
in
push
pop
lret
jg
add
cli
mov
imul
loop
lea
movsl
add
or
mov
cvtps2pi
mov
sub
adc
lods
inc
inc
cmp
out
call
rorl
sti
push
sbb
xor
cld
inc
mov
scas
add
daa
sahf
sar
lds
push
int
nop
xor
add
jmp
mov
mov
xor
xor
add
jmp
lret
ret
rol
fcom
fcmovnb
mov
rcrl
jle
add
fnstenv
cltd
lahf
add
pushf
insl
in
lea
adc
sbbb
cmp
clc
sub
mov
dec
push
push
dec
mov
sub
cmp
adc
mov
or
loope
hlt
mov
cs
jb
and
test
daa
loop
sbb
mov
aaa
cmpsb
adc
in
lock
cmp
ljmp
andl
fsubs
pushf
mov
sub
sub
add
aam
pop
lcall
sti
shld
pop
sahf
pop
fcoms
ja
inc
or
in
mov
adc
insl
mov
test
sti
mov
cmp
or
mov
dec
pop
sub
lcall
mov
pop
les
mov
decl
push
lcall
mov
xchg
mov
clc
stos
xchg
into
jbe
sbb
pop
in
xor
nop
pop
imul
fistps
insb
dec
ror
push
movsl
push
push
inc
and
outsb
test
stc
outsl
in
cmpsb
mov
gs
adc
clc
push
sub
push
lret
push
dec
mov
cmp
sbb
jl
xchg
inc
and
popa
fcomp
arpl
push
pop
leave
jo
mov
bound
jmp
push
cmpl
jl
daa
je
pop
ret
sub
dec
fistpl
les
insl
in
sbb
pop
mov
mov
ds
fcomps
ffreep
daa
cmp
in
stos
insl
fs
mov
movl
iret
test
and
mov
fadds
jge
inc
mov
xchg
lds
aaa
test
push
mov
mov
insb
pop
or
js
aam
fistpll
cld
mov
and
imul
push
mov
adc
addr16
pop
lret
jle
mull
testb
inc
push
xchg
sub
jb
xor
xchg
aad
xchg
sbb
push
popf
inc
jb
sbb
xor
jnp
mov
or
or
imul
in
std
jle
sbb
mov
test
pop
adc
sub
pop
shll
insb
dec
aam
ds
movsb
pop
inc
pusha
fs
sub
sbb
jne
adc
call
data16
adc
jb
adc
lcall
jae
je
pop
pop
into
sarb
xchg
adc
mov
imul
pop
cli
mov
subl
fwait
mov
outsb
pushf
or
stos
out
jne
mov
arpl
sub
pop
xor
fcmovne
loopne
mov
and
push
pop
lret
das
inc
sub
adc
xor
dec
pop
lods
mov
mov
inc
lret
mov
int3
arpl
mov
add
xor
movsb
lcall
dec
enter
cmpsl
fsubrl
sti
mov
xchg
xor
loop
in
push
cs
fcomps
mov
jnp
jne
or
xor
daa
and
cltd
mov
push
icebp
xor
cmc
mov
cwtl
mov
mov
xor
adcl
mov
popa
aaa
negb
mov
fildl
mov
mov
sub
cmp
imul
sbb
pop
jp
xchg
push
mov
pop
mov
lea
add
stc
rclb
dec
dec
sarl
pop
pop
in
sub
loope
jbe
fildl
aaa
arpl
pop
imulb
stc
jo
jg
rorl
mov
shll
jp
outsb
push
push
adc
mov
inc
mov
aas
filds
pushf
add
test
outsb
mov
add
and
adc
bound
ret
dec
xchg
pop
fnstenv
fwait
shrb
daa
sub
and
loop
mov
xlat
jg
pop
out
push
jmp
ljmp
or
int
cmp
jmp
jbe
mov
movsb
mov
out
dec
xchg
xchg
pop
adc
xorb
or
adc
push
dec
dec
pop
rcl
pop
mov
and
add
imul
jmp
int3
enter
fcmovnu
fxch
outsb
clc
mov
xchg
jle
add
adcl
inc
jge
mov
rorl
dec
dec
movswl
add
andb
pop
and
in
or
mov
xchg
adc
fnstsw
push
cmp
test
push
add
xchg
test
into
or
inc
pop
movl
mov
or
mov
pop
mov
fcmovnu
popf
mov
loopne
mov
inc
lods
ljmp
into
addr16
outsb
pop
inc
ret
sub
sbb
cli
push
ret
rcl
adc
sub
jge
daa
in
add
push
mov
fucomi
ss
sub
shr
cmp
mov
jecxz
mov
sub
jg
jne
jecxz
inc
push
in
push
jl
outsl
mov
jo
fidivrl
add
adc
and
sub
ljmp
jmp
or
jne
std
mov
jne
movsl
push
vxorps
push
lcall
push
lahf
movsl
sbb
cmp
or
push
aad
inc
aas
shr
imul
sub
cli
xor
xor
das
repnz
aad
push
xor
sub
dec
sahf
aam
ljmp
mov
in
push
sbb
gs
and
loopne
mov
loopne
xor
jne
popa
and
jo
pop
mov
inc
pop
imul
ja
add
loop
dec
or
pop
mov
pop
mov
jmp
cltd
mov
lds
cmp
xor
imul
xor
sbb
adc
pop
push
test
push
inc
mov
dec
dec
out
dec
xchg
int3
ds
icebp
push
pop
pop
sbb
or
adc
xor
mov
and
xor
test
or
sbb
imul
fninit
adc
daa
adc
cltd
out
mov
decl
subl
jnp
lock
push
sbb
jae
in
and
fldenv
aaa
push
push
bound
aas
add
movsl
dec
sub
inc
fdivrs
or
push
jne
or
inc
ss
dec
add
pop
aad
aad
cmpsb
sbb
and
lret
inc
inc
outsl
xchg
int3
iret
jnp
xor
cmp
and
pop
imulb
jb
ljmp
xchg
stos
aaa
cwtl
lods
movsb
push
inc
outsl
add
push
and
loop
fs
cmp
push
pop
xor
cs
out
xchg
popa
popa
mov
mov
fs
dec
jns
cld
cld
lods
shl
cmp
scas
adc
mov
adc
mov
inc
sarb
bound
mov
in
jns
test
push
mov
jmp
mov
ljmp
add
jle
dec
mov
popf
mov
mov
daa
sbbl
pop
lret
inc
imul
xchg
movsb
dec
call
dec
inc
ljmp
push
sub
arpl
and
xchg
sub
inc
cmp
sbb
dec
adc
cld
pushf
cmp
sub
inc
pop
xchg
outsl
mov
mov
jle
outsb
cld
mov
mov
cltd
xor
std
and
add
add
push
js
int3
dec
cld
mov
pop
aad
fldcw
xchg
fiaddl
mov
jns
in
inc
shlb
jbe
dec
sub
cld
scas
push
fidivl
mov
push
dec
push
sub
adc
ds
cmpsl
leave
loope
pop
fmull
xchg
inc
mov
mov
in
cmpsb
test
notb
or
ret
push
inc
mov
pop
loopne
cmp
ret
xchg
call
mov
xor
aas
call
jge
das
loope
js
test
mov
std
sti
mov
enter
sub
pop
imul
add
mov
out
dec
inc
nop
maskmovq
notl
outsl
push
mov
mov
fmuls
fmull
in
fmull
jmp
daa
ret
push
pop
mov
fistpll
push
sbb
mov
pushf
out
les
sarb
mov
mov
jmp
into
sarb
lret
rcr
fldcw
lret
mov
lods
cld
mov
jle
add
fsubrl
mov
adc
dec
icebp
cmp
test
jns
call
lea
call
call
push
push
jne
cli
imul
xor
or
ficoms
mov
scas
addr16
push
mov
mov
add
rorl
pop
fstl
cli
ds
daa
aas
loopne
fcmovu
push
cwtl
test
mov
jb
xchg
xlat
cmp
std
push
dec
jge
fs
fwait
je
pusha
icebp
jp
jns
push
sbb
into
push
dec
imul
pop
or
divb
push
fidivs
imul
mov
mov
sub
clc
sub
ret
pop
pop
mov
mov
cmp
std
lahf
lock
push
aad
mov
xchg
cmp
inc
test
jae
lea
xchg
push
jno
adc
das
pushf
xor
fwait
bound
imul
mov
pop
mov
push
adc
fldcw
sahf
mov
sahf
jno
mov
inc
or
les
loop
cmc
roll
push
sbb
push
or
cmpsb
movsl
mov
lcall
inc
icebp
pop
pop
inc
out
scas
insb
add
xor
xor
ds
jns
andb
or
popf
dec
dec
and
pop
lock
insl
adc
iret
mov
stc
and
loopne
pop
call
mov
fcmovnbe
pop
cld
das
mov
mov
cs
jno
les
cwtl
adc
sbb
sub
dec
repz
icebp
add
pop
data16
mov
stc
push
pop
aam
out
mov
int
fisttps
dec
xor
mov
mov
xor
sub
xor
mov
sbb
pop
cmp
xchg
mov
pop
adc
inc
inc
fisubrl
ss
or
pop
mov
add
inc
pop
push
icebp
adc
jg
inc
ja
xlat
and
inc
mov
out
mov
nop
and
adc
or
aam
shrl
int
int
aaa
xchg
xor
jge
xchg
scas
mov
cmpsb
sbb
bound
pop
inc
test
test
lahf
into
clc
movsl
dec
aam
sarb
dec
mov
dec
inc
push
mov
sbb
jle
xchg
clc
rol
jecxz
cmp
xchg
cwtl
sub
out
shrl
mov
pusha
mov
icebp
lock
pop
jo
pop
and
sbb
gs
sbb
mov
ror
xchg
lret
daa
lods
mov
test
repz
dec
xor
dec
xchg
mov
cmp
inc
bnd
jg
repnz
popf
mov
add
popa
addr16
mov
dec
adc
mov
ja
mov
and
dec
std
out
jl
xchg
xchg
lret
cld
cmp
mov
push
mov
jns
test
sar
jg
push
call
pop
xchg
pusha
and
dec
fildl
addr16
xchg
cld
or
sub
inc
push
out
roll
jg
push
pop
inc
mov
dec
ds
or
jbe
or
shll
popa
xchg
fidivl
adc
shrl
and
loope
aad
cmova
add
cmp
push
ret
adc
inc
out
into
rcrl
scas
in
pushf
push
jb
out
jle
popa
clc
out
sub
ljmp
in
push
addl
adc
push
loope
sahf
fsubs
clc
mov
inc
cltd
sbb
add
or
xchg
out
add
into
movl
xor
xchg
aas
aad
rorl
xchg
fistpll
jo
cwtl
mov
add
sub
jo
jb
dec
inc
cmp
aas
sub
das
mov
push
mov
jg
mov
and
fmul
push
les
jae
cmp
cmp
xchg
nop
inc
test
mov
pop
lret
push
movsb
cmp
mov
sbb
xchg
lahf
arpl
loopnew
clc
test
sbb
or
test
dec
jg
mov
cmpsb
push
pop
stos
mov
cmc
lock
popa
addl
sub
jmp
int
ret
mov
push
ljmp
add
mov
cwtl
jae
cwtl
mov
adc
sbb
hlt
gs
cmp
aad
loop
pop
roll
pop
push
mov
mov
rcll
inc
and
mov
pop
sub
cmp
jmp
jnp
movsl
mov
pushl
sahf
dec
pop
cmp
jb
mov
addl
inc
jbe
dec
cld
mov
ret
xor
roll
push
arpl
xor
hlt
sub
fsts
adc
sbb
je
inc
mov
push
xor
or
out
or
data16
lcall
stc
sbb
mov
in
int
jecxz
mov
cmpsl
sbb
mov
mov
jae
mov
dec
les
mov
out
adc
stos
clc
into
push
push
dec
mov
data16
sub
fs
inc
mov
ss
mov
out
push
repnz
sarl
imul
pop
mov
sub
push
jbe
in
xlat
fnstenv
ja
xor
sahf
push
icebp
pop
sbb
es
leave
add
xor
test
das
adcl
mov
sub
mov
int
or
mov
mov
sbb
push
sub
cmpsb
sbb
push
cmove
pop
inc
mov
lcallw
leave
inc
aas
jne
xor
in
mov
loope
ret
sbb
jp
scas
pushf
cmp
leave
push
sub
clc
iret
ljmp
mov
cli
dec
sbb
jp
idivb
lods
dec
cmc
adc
repz
ds
and
and
repnz
fwait
test
ret
pop
adc
fs
in
iret
decl
and
mov
addr16
cmpb
movsl
xchg
test
xor
cmpb
jnp
adc
insb
pop
or
int3
jge
jae
sbb
ss
or
or
push
shr
adc
mov
xor
jno
xlat
jl
jmp
sbb
jae
aaa
adc
push
loope
inc
push
add
mov
out
subl
inc
shll
inc
aam
or
or
xor
aaa
insb
cmc
xchg
dec
pop
or
shll
mov
jnp
inc
insb
xchg
adc
cmc
jmp
imul
out
insl
fidivs
dec
loop
pop
mov
in
fisubrl
or
mov
data16
scas
arpl
dec
out
loopne
ss
jg
sti
stos
insb
xchg
je
rorl
lcall
push
in
gs
cmp
jbe
push
inc
sub
je
icebp
imul
lods
fbstp
ret
jbe
sub
fs
int3
jo
dec
ja
or
mov
popf
cmp
outsb
clc
mov
sub
adc
cmp
mov
sub
inc
mov
vpmacssww
lods
out
mov
mov
test
pop
dec
mov
mov
and
xchg
test
enter
inc
stc
stc
sub
push
push
xchg
pop
cmp
adc
sti
xor
lds
adc
fs
aaa
xor
sub
repz
or
outsb
roll
dec
or
mov
fldt
push
repnz
xor
jo
test
movsb
loopne
and
ljmp
pop
imul
mov
imul
adc
daa
xchg
dec
in
call
fwait
mov
push
inc
jp
push
xchg
mov
sbb
ss
and
repz
cmp
sub
mov
sub
enter
imul
xor
aam
sahf
push
test
std
jno
sbb
jne
jp
scas
inc
data16
mov
sub
movb
lods
pop
in
jmp
pop
cs
je
es
sbb
push
cmp
daa
and
jl
dec
sbb
mov
rcll
enter
sub
popa
add
add
inc
das
out
add
aad
jns
adc
fimull
xchg
push
fsubr
sbb
add
jmp
ror
cmp
movsb
dec
xchg
add
movsb
cmc
adc
jg
testb
jle
cwtl
dec
rol
pop
testb
je
mov
mov
in
icebp
daa
data16
or
into
imul
inc
mov
mov
pop
dec
sbbl
adc
fmul
leave
mov
or
imul
enter
ret
dec
icebp
insb
leave
adc
stos
pop
insl
cmp
mov
imul
pop
mov
ret
xor
xor
add
out
mov
push
push
out
dec
jne
cld
daa
lretw
pop
mov
mov
push
lcall
cmp
es
and
pop
popa
or
xor
mov
mov
xor
add
clc
inc
es
rclb
lods
outsl
fidivrs
pop
mov
xchg
add
adc
jo
movsl
xchg
add
sub
jno
mov
xor
and
add
inc
out
int3
mov
sub
in
repz
cmc
mov
lds
sub
xor
mov
and
push
xlat
add
sbb
test
pop
mov
mov
imul
lahf
xchg
adc
mov
inc
cmp
xchg
mov
pop
stos
ret
push
dec
pusha
or
mov
mov
movsl
inc
inc
ret
dec
movsb
mov
push
cwtl
movsl
mov
scas
std
scas
mov
dec
movsl
clc
repz
push
mov
jecxz
in
xor
lret
pop
xor
lods
add
push
cs
in
cmp
scas
and
loop
leave
sub
push
xor
inc
mov
push
push
out
cltd
lcall
fdivs
movsl
subl
loope
jo
call
flds
rclb
loope
stc
jns
test
es
and
inc
and
or
jbe
inc
lcall
dec
dec
loopne
fldl
or
xor
mov
push
add
adc
aad
shrl
out
cli
sbb
mov
push
pop
sbb
dec
ja
push
mov
sbb
pop
loope
dec
fstpl
imul
xor
repz
lds
out
jb
movsb
lods
mov
arpl
dec
in
cmp
lret
dec
push
leave
mov
leave
pop
cld
jl
in
repz
push
mov
mov
push
dec
add
push
adc
pop
jmp
lret
addb
xor
pop
inc
pop
sub
dec
aaa
pop
je
inc
cltd
mov
fldl
mov
testb
notl
mov
pop
cmp
daa
stos
stos
xchg
cs
cmp
or
pop
add
popf
xor
inc
jmp
dec
gs
dec
outsl
test
in
out
xor
push
mov
sbb
je
loope
cmp
ret
into
mov
movsl
or
loop
xlat
pop
repz
or
nop
xchg
js
roll
mov
push
cmpsl
or
out
mov
and
pushf
lea
push
inc
test
jne
inc
push
mov
xor
xor
out
and
inc
outsb
adc
test
gs
dec
imul
pop
ljmp
push
mov
in
shll
mov
push
addr16
cmp
inc
xchg
mov
test
push
or
cmpsl
outsb
lods
lret
out
mov
jg
sub
dec
xchg
int3
clc
in
jp
cli
popa
mov
cmpsb
pop
or
mov
lahf
add
push
sub
rolb
adc
mov
xchg
fstps
inc
test
add
out
call
jbe
stos
aad
adc
or
hlt
sub
add
and
or
flds
add
into
push
inc
pop
outsb
cmpsb
or
stc
scas
call
dec
rcrl
nop
in
scas
dec
and
mov
inc
call
bound
jecxz
repnz
mov
enter
fwait
notl
pop
int
push
add
xor
xor
clc
hlt
shll
cmc
push
inc
mov
outsb
lcall
mov
fidivl
inc
mov
push
shr
nop
add
add
mov
enter
lret
out
push
sbb
jg
testb
jle
mov
adc
xchg
dec
adc
int3
outsl
sub
mov
shl
out
cmpsb
stos
mov
loopne
inc
xorb
xor
rcrl
mov
lret
fs
xchg
subl
sbb
adc
inc
mov
nop
inc
xor
imul
in
and
shlb
outsl
cmpsb
mov
test
lds
mov
ja
mov
adc
xchg
xor
or
inc
out
sbb
add
std
pop
test
cmp
jb
aas
and
and
lock
mov
in
or
sub
inc
sbb
ficoms
js
insl
pushf
ret
inc
lea
lods
and
inc
add
sub
jg
or
sbb
icebp
je
popa
in
loop
inc
fdivl
jge
mov
add
pop
push
sbb
add
mov
scas
jp
inc
sbb
imul
and
inc
mov
hlt
fisubrl
sub
cmp
mov
loopne
fcomi
inc
rcr
sahf
jge
outsl
mov
sbb
call
fsubl
pop
int
push
lea
jg
jno
mov
xchg
ljmp
pop
cli
ds
scas
mov
cltd
cli
lea
test
in
pop
mov
sub
xor
push
call
xorps
mov
scas
or
dec
fisubrs
jae
aad
mov
daa
jo
popf
jmp
mov
aaa
dec
push
out
or
pop
dec
push
pop
daa
lods
enter
out
mulps
rclb
jno
mov
ret
mov
and
hlt
xor
jp
jmp
mov
lahf
sub
es
mov
loop
lret
adc
pop
aad
dec
and
in
es
or
pop
xor
mov
imul
pop
jmp
or
push
fidivrs
or
push
mov
and
icebp
in
mov
jp
xchg
adc
scas
pop
cli
add
mov
stos
xchg
mov
stos
cmp
rclb
cmpsb
adc
xchg
push
scas
cmp
ss
sub
ljmp
in
dec
xchg
mov
pop
push
into
add
add
loope
inc
pop
pop
out
fwait
sub
pop
xchg
xorb
addr16
clc
les
std
sub
add
test
jb
lods
ss
je
sahf
cmp
ss
add
cmpb
int
cli
push
sub
dec
sub
push
cwtl
adc
cld
jp
iret
int
pop
ret
scas
pop
jns
push
pop
imul
sbbl
push
mov
out
sub
dec
mov
fldenv
lods
inc
mov
in
xchg
icebp
xchg
adc
cmp
out
xchg
and
in
pop
bnd
cltd
jb
inc
sbb
hlt
xchg
xorl
sbb
fistl
push
in
sbb
aam
call
mov
jne
jl,pt
call
add
ds
pop
and
std
and
jl
rclb
sub
mov
lock
popf
fistps
sbb
loopne
lock
enter
test
arpl
daa
lahf
sti
sahf
fs
inc
js
adc
call
in
adc
sub
and
cmp
mov
in
stc
mov
inc
shrb
pop
out
sbb
fwait
sub
jae
sub
test
nop
inc
in
xor
push
xchg
shlb
aad
push
sub
sbb
ficompl
dec
iret
inc
test
sub
int3
ss
test
adc
or
push
lret
rcr
push
in
xorl
cmpsl
test
cmp
jp
jo
push
and
push
push
adc
mov
mov
mov
cwtl
aas
leave
je
sahf
movl
xor
dec
dec
test
add
lret
cmpsb
xchg
mov
pop
mov
mov
xor
xor
jmp
enter
rcl
leave
fdecstp
ret
shrb
mov
jle
add
lock
fwait
jecxz
mov
add
pushl
or
cmp
mov
and
jmp
xchg
rcrw
or
and
mov
lret
stc
stc
sub
jp
push
push
repz
xchg
and
jmp
outsl
sbb
insb
je
dec
jge
push
outsb
and
mov
jmp
push
out
cmp
mov
sub
push
es
scas
xchg
inc
pop
fwait
pop
jo
mov
add
mov
mov
adc
and
cmpsl
adc
shl
adc
fwait
jb
inc
jecxz
stos
sarl
cmp
lret
push
sbbb
add
and
inc
out
mov
mov
das
jmp
mov
scas
fldl
cmp
xchg
jb
pop
jl
push
sbb
fiadds
les
xchg
cmpsb
pop
mov
mov
dec
pop
inc
stc
mov
jg
cmpl
or
lahf
roll
jmp
sbb
adcl
adc
jmp
aam
fs
pop
mov
pop
inc
and
and
sub
sbb
dec
or
and
test
pop
fcomp
and
dec
mov
push
push
push
lret
push
cwtl
dec
inc
pop
fs
sbb
sub
sbb
push
or
ret
lret
shll
mov
loope
push
or
pop
adc
sti
inc
lods
jne
lods
call
enter
xchg
mov
stos
add
shlb
sbb
insl
push
test
lahf
nop
mov
push
into
mov
sub
lahf
lea
cmp
pusha
sub
test
fwait
enter
and
push
xchg
repz
sub
add
mov
add
mov
jp
jle
jmp
outsl
outsl
mov
inc
mov
push
insl
mov
dec
es
aas
nop
fcmove
or
push
jae
mov
nop
in
arpl
sti
lahf
ret
sbb
sub
sbb
rcrw
xor
mov
sbb
lahf
mov
xchg
fwait
push
in
xchg
das
pop
aad
into
xor
popf
inc
popa
adcb
shl
sbb
sarl
push
out
cmpsb
xchg
js
and
cmpxchg
mov
cmp
inc
xchg
dec
daa
sub
fiaddl
insl
enter
cmp
dec
inc
pop
pop
xor
mov
sub
jge
jle
or
xchg
sub
or
mov
arpl
xor
ja
mov
clc
lret
inc
cmp
sahf
pop
push
adc
out
or
cmpsl
inc
hlt
leave
jecxz
sub
outsb
push
dec
pop
lcall
in
jmp
mov
jl
pop
into
sbb
sbb
or
and
aad
cli
mov
in
mov
insb
mov
cmp
pop
mov
xor
stos
or
cwtl
inc
insb
sub
in
xor
lods
cmp
adc
das
mov
jne
jae
cmp
pop
int3
or
sub
fcmovbe
out
adc
sbb
cmp
lds
mov
stos
xor
mov
aaa
leave
adc
imul
cmp
mov
dec
dec
popa
mov
mov
inc
sub
mull
out
cltd
pushf
ds
jmp
pop
stos
ja
pop
sub
shrb
xchg
cmpb
pop
xor
dec
jp
push
in
inc
ffree
pop
sbb
inc
sbb
lcall
std
les
push
cld
test
and
or
jg
mov
das
loopne
dec
es
jo,pn
cmp
sar
outsl
repz
cmp
jo
inc
cwtl
add
xor
xchg
xchg
movsb
movsl
jae
movsb
dec
jmp
xor
cmp
ja
sub
leave
fnstsw
lds
push
imul
jo
mov
cltd
add
add
mov
sub
mov
dec
dec
cmp
mov
jg
adc
push
mov
and
loope
popa
leave
je
push
fcomi
pop
cmp
or
push
xchg
push
adc
bnd
outsl
js
jle
hlt
test
insl
or
or
push
mov
sbb
stc
add
imul
mov
mov
sub
jmp
aam
aam
fcom
fxch
repz
lds
adc
mov
jle
add
add
mov
jo
inc
test
mov
and
or
mov
insl
mov
insl
mov
test
stc
jnp
sbbl
xchg
stos
cmpsb
or
mov
mov
int3
loop
outsb
pop
scas
xchg
jmp
xchg
adc
stc
lds
or
jo
aam
fcmovb
adc
shll
repz
faddl
mov
add
mov
bound
out
cmpsb
mov
sub
inc
inc
cmp
sbb
inc
popa
pusha
add
pop
mov
add
adc
outsb
addr16
lret
xor
dec
dec
clc
push
pop
fnsave
hlt
into
inc
mov
je
lock
pop
jnp
lea
fcmovu
mov
mov
mov
mov
aad
outsb
lods
ficoml
daa
and
add
out
pop
enter
pop
ret
xchg
sub
dec
mov
and
insb
lds
mov
mov
ljmp
push
push
outsb
or
andb
push
outsb
sahf
push
inc
mov
mov
out
fsubl
jne
mov
pop
jbe
mov
cmp
ds
pop
icebp
sbb
lds
cmp
mov
adc
sub
bound
push
jge
insb
into
and
dec
mov
lock
inc
jg
jp
lahf
mov
xchg
in
fbstp
xchg
lret
adc
rcrl
jmp
xchg
jb
popf
dec
adc
lods
loope
loopne,pn
daa
aad
pop
jb
mov
popf
popf
repnz
xor
or
push
mov
xlat
xchg
jmp
lcall
mov
out
sbb
cmc
or
in
mov
xchg
fldlg2
rcrb
je
inc
cmp
shrb
sub
iret
daa
mov
sbb
push
flds
adc
cmp
push
xlat
adc
mov
fdivrp
js
xchg
leave
and
out
imul
add
pop
movsb
ret
mov
pop
jne
push
cld
push
sub
popa
testb
sahf
inc
js
xorl
pop
push
mov
fnstcw
rcl
pop
xchg
mov
addl
aad
push
ja
inc
mov
sahf
jp
inc
or
mov
push
in
push
outsl
jns
mov
and
xor
outsl
popa
negb
adc
jnp
and
pop
push
adc
les
rcll
mov
decb
popa
insl
hlt
cmc
mov
mov
stos
movsl
xlat
or
add
lcall
inc
jno
repnz
jb
pusha
in
and
dec
and
mov
out
enter
pop
mov
scas
in
add
cld
leave
roll
xchg
imull
lcall
mov
fwait
inc
inc
lret
fstl
and
stos
data16
out
xor
push
xlat
dec
fnstenv
mov
ret
das
test
test
inc
xchg
pop
mov
pop
test
arpl
lods
int3
lahf
or
leave
sub
inc
out
pop
jae
fmuls
mov
jecxz
in
dec
or
sub
loope
mov
dec
dec
stc
ds
xor
dec
scas
ds
xchg
leave
mov
mov
sub
and
or
xchg
adc
mov
push
inc
push
dec
or
lods
and
ds
xor
xor
outsl
xor
dec
orl
rcrb
je
out
shrl
jae
loope
mov
pop
inc
icebp
add
push
sbb
loop
sbb
shll
inc
sbb
nop
add
jmp
or
in
imul
mov
pop
repnz
cs
pop
push
sub
or
push
subb
rolb
mov
test
inc
push
sbb
push
sbb
pop
jge
sbb
shl
loope
and
xor
inc
jno
dec
outsl
adc
dec
xor
cmp
jmp
into
enter
aad
leave
push
ficompl
inc
mov
jg
testb
jle
jno
dec
fcoms
testb
mov
in
jge
xchg
dec
das
and
fbstp
stc
loopne
sbb
pop
sub
jle
adc
mov
xchg
mov
mov
mov
jb
pop
dec
dec
cld
sbb
inc
push
add
dec
cmp
xchg
and
xchg
xchg
dec
cmpsl
mov
pop
movsl
xlat
dec
jbe
outsl
nop
cld
jecxz
dec
nop
lahf
notl
enter
rorb
mov
cld
call
xchg
xchg
ret
sarl
xor
lret
cmc
xchg
sbbl
push
cmpsl
push
xchg
xchg
adc
hlt
rcrb
in
jo
cmp
or
cwtl
xor
stos
addr16
cmp
fisttpl
xchg
mov
les
jo
addr16
dec
xor
mov
inc
and
dec
addr16
loop
jecxz
dec
or
out
xchg
adc
arpl
inc
mov
or
mov
cli
jnp
inc
mov
insb
out
cmp
addr16
mov
xchg
adcl
sbb
pop
push
or
push
jge
push
cmp
sub
andl
add
jecxz
iret
testl
xor
mov
push
lcall
les
dec
xchg
add
jl
mov
loop
mov
sahf
sub
fs
cli
popa
xor
lea
stc
loope
scas
call
loopne
js
cmp
add
and
cmpsb
jle
cmp
sbb
pop
xchg
sub
adc
mov
mov
jl
mov
jg
jmp
or
daa
lcall
stos
push
lret
or
call
xor
loope
or
adc
jns
cmp
dec
sahf
sbb
movsl
test
test
mov
call
in
popa
popa
jge
fildll
test
inc
sti
pop
fnsaves
and
ja
cs
and
jo
out
adc
notl
repnz
loopne
aam
xlat
jle
ja
cmp
aad
sub
pop
add
ds
idivl
pop
ficomps
aad
sub
popa
arpl
ret
movsb
push
push
cmp
push
lret
lahf
ret
loope
sahf
jg
mov
add
inc
mov
and
rol
xor
lahf
sub
mov
rolb
mov
mov
or
daa
xchg
call
push
push
jno
add
outsl
test
push
lods
pop
mov
jb
lret
adc
ljmp
negb
sbb
pop
andl
scas
xchg
popa
adcb
push
outsl
dec
mov
pop
addr16
cmp
stos
outsb
dec
push
xchg
push
or
adc
sub
out
or
add
cmp
loop
in
aam
cmc
dec
or
push
scas
imul
jmp
pop
and
mov
xchg
ffreep
shll
ljmp
adc
jg
dec
jnp
ja
pop
jle
jb
add
in
lods
lcall
and
fwait
jle
sar
dec
sbb
sub
cmp
shrb
push
lcall
or
jno
mov
lock
xor
mov
xchg
fldt
push
cmp
adc
inc
jmp
or
cmpsb
mov
lock
dec
sub
mov
add
pop
cs
and
test
rorl
cwtl
decl
dec
lahf
shrl
addr16
ret
add
mov
push
pop
cmp
cs
cmp
mov
or
je
cmp
pop
inc
movsl
mov
in
mov
mov
popf
pop
pop
xchg
aad
inc
cmp
jge
sbb
mov
cli
or
cltd
rorl
push
add
sarb
in
rolb
lds
rcrb
imul
or
movsl
push
xor
jne
jmp
je
ja
jmp
lret
rcl
ror
fsubs
aam
insl
pop
enter
inc
jg
testb
jle
jmp
ljmp
sbb
lret
lods
mov
inc
xchg
sbb
mov
inc
sbb
imul
hlt
xor
stos
jmp
mov
aad
arpl
sahf
es
jmp
push
xchg
jne
cmp
push
scas
inc
rcl
and
adc
mov
int
or
lret
rorb
xchg
inc
es
cmp
fimull
or
shlb
ficoml
test
imul
les
pop
jp
mov
and
imul
cmp
std
adc
add
inc
insl
stc
movsb
lret
cmpsl
sbb
insb
xchg
mov
je
repz
fs
mov
xchg
push
addr16
jne
pop
or
in
fisttpll
into
shrl
cmp
xchg
xchg
in
mov
jecxz
mov
xor
or
mov
shll
cmp
pop
lcall
xchg
popa
mov
dec
pop
clc
shlb
sbb
push
cmp
aad
fdivrl
into
aaa
or
insb
test
xlat
sbb
mov
xlat
jns
in
add
ret
push
jl
jmp
rcr
and
ret
pop
sub
xchg
xor
xchg
jns
jae
push
lcall
sahf
cli
sbb
popf
mov
and
or
push
incl
decb
jmp
xchg
dec
lret
imul
push
jae
cmp
push
push
arpl
leave
inc
test
adc
and
popf
outsl
and
jmp
outsb
push
sub
mov
clc
jecxz
clc
aad
js
push
frstor
mov
adc
or
fisttpll
fmul
insb
xor
arpl
movsb
dec
scas
sbb
fistpll
stc
cmp
test
add
push
add
das
pop
fcomip
cmc
xchg
dec
jp
sarb
pop
movsl
jecxz
pop
clc
aas
xchg
mov
mov
inc
test
fiadds
xchg
repnz
movsb
out
dec
inc
xor
mov
test
insl
lret
sub
mov
movsl
ret
ja
mov
push
iret
xchg
inc
mov
or
js
dec
push
push
sub
mov
sbb
cld
adc
fdivs
cmpsb
and
jae
mov
cmpsl
xor
cmp
movsb
jge
roll
or
outsl
into
xchg
pop
adc
pop
daa
push
jno
lods
mov
pop
shlb
fldz
imul
dec
pop
jb
xchg
cmc
loope
fmuls
xchg
fsubs
hlt
adc
mov
inc
adc
in
pusha
int3
inc
push
jle
xor
jno
lret
push
sbbb
test
stos
loop
inc
jle
cltd
fisubs
jl
int3
xchg
in
mov
mov
or
rcrb
sub
sbb
and
scas
fsubr
mov
inc
pause
jne
lcall
rorb
pushf
jge
jge
popf
push
cmpsb
pop
fldl
xchg
push
scas
test
pop
adc
inc
std
xor
lea
ja
mov
sub
mov
cmp
aad
dec
and
loope
andl
jmp
jmp
pop
push
ret
cltd
lock
pop
fldl
outsb
sbbl
sbbb
and
add
pop
mov
add
sub
aam
popl
cmp
push
in
push
negl
mov
jne
pop
in
sbb
ljmp
sub
ficoms
and
mov
sbb
add
xchg
call
push
mov
leave
int
cld
loopne
movsl
xchg
stos
mov
loopne
lret
dec
xchg
push
fdivp
out
fstps
and
arpl
push
sahf
cmp
push
jmp
xor
jge
jno
orl
arpl
cmpsb
sbb
aad
loope
mov
nop
jecxz
mov
mov
sar
imul
adc
sub
aaa
add
mov
jmp
lret
xlat
sarl
enter
xchg
fmul
ds
mulb
inc
jg
testb
jle
cmpsl
pop
mov
push
add
xchg
int3
popf
xor
adc
push
jbe
cmp
gs
mov
sti
xchg
lret
imul
bound
test
imul
push
jbe
jb
std
jno
adc
or
cs
mov
mov
sbb
rcr
cmp
dec
push
push
cwtd
aas
push
arpl
mov
mov
jnp
and
jge
leave
inc
insl
outsb
sub
cld
outsb
dec
fbld
icebp
xor
outsb
jl
jbe
push
push
jecxz
push
out
lret
inc
pop
ret
js
test
andl
outsb
pop
shll
hlt
test
fsubs
mov
mov
push
test
sub
imul
mov
cs
rorl
and
repnz
push
movb
les
cmp
pop
repz
popl
push
inc
mov
push
dec
clc
add
in
stos
and
nop
xchg
dec
js
add
repnz
mov
dec
lods
jnp
repnz
in
pusha
int3
mov
divb
movsl
int
imul
rcr
jp
mov
ljmp
ret
outsb
rcrl
fimull
push
insb
into
xchg
stc
sub
stos
jmp
pop
jnp
or
dec
push
xor
shll
cmpsl
xchg
cmp
mov
dec
mov
dec
scas
aam
test
or
cs
inc
test
popa
rorb
xchg
pop
repnz
mov
test
push
add
sub
shl
cltd
mov
rorl
push
vpcomuw
pushf
cmpsb
mov
ja
pop
push
repnz
aam
jns
bound
inc
xlat
loopne
into
add
dec
aad
xor
dec
push
xchg
mov
in
mov
push
inc
pop
lods
pop
xchg
stc
test
cld
push
outsl
mov
xchg
pop
push
std
inc
cmc
movsb
mov
shr
lcall
adc
xor
and
jbe
or
clc
cmp
jno
or
ror
mov
sub
lcall
lahf
jg
xor
dec
dec
mov
cmp
adc
sbb
insl
leave
xorl
xor
std
shr
fsubl
sub
adc
roll
mov
ret
cld
pop
bound
lea
or
shll
addl
loope
pop
mov
hlt
cltd
pushf
test
sbb
lock
lods
or
pop
mov
shlb
fcmovnu
shl
inc
jbe
sub
cmpl
inc
push
mov
lret
pop
mov
mov
cmpsl
mov
mov
and
fsts
mov
aam
xchg
insb
test
movsl
adc
cmp
shl
jmp
ja
or
cmp
repz
les
in
cmp
ds
add
in
enter
xor
ja
ficomps
sti
push
out
jns
inc
out
inc
cmpsb
mov
xor
mov
gs
adc
les
gs
cltd
jmp
repz
jmp
xor
ret
les
gs
ljmp
leave
fidivl
push
push
and
insl
movsb
mov
scas
into
mov
dec
mov
mov
ljmp
ja
sbb
sub
inc
and
push
movb
imul
lods
shrb
loop
fs
loop
les
xlat
xor
add
ss
outsl
xor
add
out
sar
in
hlt
mul
repz
inc
rcl
rorl
fdivrs
add
jle
mov
xchg
add
dec
adc
cld
mov
xor
pushf
movsb
push
inc
decl
cmp
fsubrs
loope
or
icebp
das
stos
push
add
push
loope
lcall
gs
lods
lret
or
xchg
push
adc
mov
stc
mov
testb
cld
jmp
ror
int3
fcom
rcr
fisubrl
jg
dec
jg
testb
jle
mov
pop
ret
xor
sbb
or
ljmp
iret
cmp
and
and
mov
repnz
pop
xchg
dec
or
les
lahf
addb
popa
pop
push
ficompl
lods
ljmp
adc
sub
cmp
push
xlat
and
sub
or
pop
sub
subl
xlat
pop
sbb
mov
into
lahf
pop
out
fadd
mov
or
xor
jb
and
das
pop
insb
movsb
sub
loopne
push
inc
mov
fidivl
decb
jo
sub
lret
xor
pushf
pop
int
sub
jecxz
out
jmp
inc
sbb
cmp
jbe
push
jns
jnp
jmp
sbb
lods
jle
mov
rcr
push
pop
add
lea
stos
lea
dec
out
mov
xchg
jmp
lods
dec
inc
aaa
shl
add
lock
inc
xor
bound
cwtl
lods
push
fwait
jle
rorl
mov
push
lods
push
movsl
cltd
daa
repz
mov
inc
jp
test
push
mov
enter
cmp
lea
int
dec
dec
jo
shll
in
sarb
cld
int3
mov
inc
cmovb
or
inc
dec
jecxz
adc
cmp
aas
jl
and
xchg
mov
or
nop
fstps
xchg
out
sbb
cltd
xchg
pop
and
adc
mov
cmp
dec
pop
addr16
xchg
cltd
dec
test
addl
fisubs
icebp
add
or
inc
mov
roll
movsl
loope
cld
jae
mov
call
test
adc
inc
aad
popa
push
mov
dec
mov
mov
gs
fbld
movsb
scas
xchg
and
xchg
add
mov
sbb
jns
ljmp
into
sbb
mov
test
test
adc
cld
add
cld
add
pusha
or
mov
cmpsb
and
mov
adc
enter
cmp
aad
fstpl
mov
rcl
rorl
in
out
repz
aam
subb
in
repz
cmp
lods
rcrl
sbb
mov
xor
add
lcall
les
mov
dec
repz
fld
mov
stos
or
push
xor
cmc
cmp
pop
les
cmc
push
leave
test
sub
push
mov
cmp
ficompl
mov
adc
push
hlt
sub
fstl
dec
push
aam
jmp
pop
cmp
and
dec
pushf
jns
lods
adc
std
lahf
jmp
mov
ja
rcpps
push
iret
mov
fmull
push
mov
test
inc
sub
outsb
pop
cld
jbe
out
push
call
stc
adc
imul
sbb
pop
stos
inc
in
imull
mov
push
cmpl
mov
and
push
hlt
dec
je
ret
sbb
cmc
adcl
or
push
out
dec
js
jp
jmp
orl
pop
out
pop
mov
or
mov
pop
in
std
test
mov
in
pop
jno
aad
lea
sahf
scas
fldt
pushf
inc
and
roll
or
add
dec
and
daa
jmp
push
xchg
aad
dec
mov
push
or
lock
dec
sbb
cmpsb
xchg
cmp
stc
pop
mov
sbbb
adc
push
mov
dec
jecxz
jbe
enter
lods
sahf
mov
scas
push
ret
scas
popf
jecxz
scas
sub
push
and
cmp
aas
xor
ret
jle
or
out
ret
cli
fcmovnb
sbb
pop
iret
jb
out
inc
pop
out
inc
incb
add
inc
pop
or
cmpb
daa
mov
xchg
lock
mov
mov
iret
sbb
outsb
xor
xor
add
add
imul
jmp
int3
enter
fmul
enter
repnz
jle
cmp
add
jmp
cs
ret
testl
mov
inc
mov
movsb
scas
mov
test
testb
cltd
push
xlat
repnz
insb
movsb
push
rorl
push
scas
xor
pop
out
inc
sti
je
mov
mov
aas
pop
or
pop
dec
scas
cmpsb
cmp
mov
push
andl
aam
jae
lret
push
pop
ja
loopne
stc
adc
push
push
adc
sahf
and
sbb
stc
dec
pop
mov
push
addr16
mov
out
test
mov
hlt
jl
xor
inc
inc
clc
into
bound
cmp
push
adc
repnz
push
out
cmp
cmc
push
imul
adc
in
aam
aam
lds
lods
jae
lods
imul
xor
inc
or
shlb
cmpsb
aaa
mov
push
orb
rolb
cmp
mov
lock
outsl
mov
push
cmp
mov
shll
add
xchg
addr16
hlt
movsb
imul
sbb
sbb
xchg
test
xlat
je
sub
movsl
jno
repz
pop
dec
fwait
pop
sbb
testb
xor
pop
lahf
or
cmc
inc
pop
shll
lock
outsb
fs
mov
pusha
mov
outsl
xlat
rclb
int3
ss
or
or
jbe
lcall
add
subb
outsb
ret
cwtl
pop
fsubr
dec
inc
inc
cmp
xchg
jle
dec
jge
lds
sub
inc
mov
mov
add
fstl
das
jmp
hlt
adc
lret
das
and
push
fldcw
hlt
rcr
ljmp
mov
pushf
insb
fucomip
xor
sbb
in
xchg
outsb
push
es
das
lret
data16
adc
mov
lcall
dec
hlt
mov
mov
jno
jp
movsl
dec
pop
movl
sub
mov
jb
xor
or
sarb
lahf
nop
jb
inc
sub
pop
data16
dec
test
pop
adc
mov
cmpsl
loope
fwait
cmp
mov
pop
mov
ljmp
mov
mov
inc
adc
xor
cmp
mov
push
stos
rcrb
push
stc
adcb
sbb
mov
loopne
push
js
mov
push
je
lds
loope
push
and
mov
push
sbb
add
cmpsb
ljmp
sub
cmp
or
out
pop
std
add
bound
call
shll
inc
xchg
ss
lods
mov
adc
mov
jg
pop
lock
xor
std
mov
push
xor
mov
push
sub
jecxz
enter
jge
inc
cmp
test
nop
jo
cmp
out
fsubl
movsb
das
sbb
fiaddl
push
push
sbb
fistps
adc
pop
bound
cmp
cmp
aas
subl
jne
mov
pop
pushf
mov
shll
pop
xchg
cld
mov
mov
mov
out
cs
jnp
xchg
popa
test
jns
aad
adc
inc
add
aas
aas
push
sbbl
inc
pop
pop
add
cltd
pop
mov
imul
jbe
pushf
cwtl
mov
pop
jbe
cmp
cmp
outsl
cwtl
push
fsubrs
test
fidivl
scas
rolb
mov
push
push
pop
mov
mov
shr
pop
loope
or
frstor
paddq
push
inc
xchg
jne
xchg
clc
fimull
mov
pop
mov
jl
cli
sbb
sub
rclb
and
jbe
xchg
clc
addr16
add
addb
cmp
fnsave
test
loop
mov
nop
fs
lods
mov
sbb
cmp
insl
aaa
xor
ret
sbbb
loop
shl
rcrb
and
mov
je
mov
mov
lcall
mov
cmp
lahf
mov
push
push
std
jnp
leave
rorl
push
xchg
sarl
mov
jmp
ror
int3
int3
aad
ror
leave
dec
mov
pop
es
jg
testb
jle
repz
push
lcall
out
fnsave
in
xor
add
cmp
mov
pop
or
sub
mov
push
push
lods
dec
xchg
andb
add
and
xchg
cmp
mov
insl
das
xor
and
jb
test
xchg
push
push
sti
or
out
aam
out
fsubrs
xchg
push
mov
ds
mov
jecxz
test
or
out
dec
mov
aad
jnp
insb
push
inc
clc
imul
add
scas
pop
xor
inc
jae
jecxz
cmp
in
ja
bound
sbbb
in
sub
sbb
push
adc
test
cmp
lea
aam
add
jbe
test
loope
aas
adc
pop
jg
out
mov
rcll
pop
sbb
or
push
js
cmp
mov
and
dec
movsb
xchg
push
cmp
mov
setno
and
and
sbb
and
adc
icebp
sbb
push
test
pop
shll
xlat
jno
loop
repz
xor
shlb
std
or
imul
mov
mov
or
out
xchg
insl
add
pop
jp
pop
mov
loope
push
rorl
dec
das
cmp
iret
bound
xchg
test
adc
push
sub
idivb
mov
mov
int3
fwait
sti
das
rorl
test
test
mov
cwtl
jae
jle
cmpsb
mov
push
clc
mov
add
mov
and
cmc
jne
dec
mov
mov
jge
and
scas
mov
mov
notb
out
mov
cmp
mov
jle
push
pop
xchg
pop
sbb
or
adc
lcall
repnz
jne
or
popa
in
pop
js
testb
mov
pop
mov
hlt
mul
lret
adc
bound
fstl
or
scas
sbb
mov
enter
mov
sbb
add
mull
in
cmp
outsl
mov
mov
adc
ss
pushf
in
xchg
jp
jp
std
dec
out
adc
in
insb
rorb
cmp
mov
xchg
cmp
sarb
arpl
dec
jb
jl
aaa
loop
aaa
sub
mov
sub
stc
adc
inc
dec
jo
cli
adc
lret
mov
dec
out
mov
jecxz
lods
repnz
sbb
into
cwtl
adc
jo
pusha
cmpsb
cld
mov
adc
pop
pusha
int
int3
xor
icebp
jbe
pop
pop
inc
pop
in
mov
sub
jae
pop
mov
hlt
dec
mov
jno
cs
loope
scas
aas
sbb
js
or
xchg
cltd
and
scas
jb
mov
dec
sub
cmc
daa
and
pop
inc
mov
pop
jl
dec
and
pop
repnz
xchg
loope
insb
and
enter
adc
std
pushf
jns
lahf
loop
jmp
sbb
mov
xor
outsl
xchg
insl
fadds
hlt
xor
lcall
ja
xchg
hlt
push
ds
mov
push
cs
popl
andb
xor
popf
xor
icebp
jns
mov
bound
add
sbb
rcrl
outsl
dec
rcr
pop
nop
outsl
lock
jmp
dec
mov
cmpsb
loopne
pushf
mov
push
ss
cmp
rcll
dec
cltd
add
pop
and
decb
sub
inc
and
xor
insb
xchg
test
adc
incl
in
cmp
mov
adc
fstpt
sub
xchg
scas
das
mov
test
mov
outsl
cltd
iret
mov
pop
dec
dec
mov
bound
les
xchg
in
movsb
fs
jns
xchg
sti
sub
dec
je
cwtl
dec
push
push
sbb
subb
mov
mov
out
iret
sarl
pop
stos
insb
pop
out
in
roll
cmovns
mov
cmpsl
popf
add
mov
fimull
xchg
nop
add
add
cmp
enter
xor
je
dec
inc
sahf
push
jg
testb
jle
pop
mov
jp
inc
cs
sbb
push
lods
jo
jl
xor
push
mov
pushf
aam
and
sub
int3
das
dec
push
sub
lods
mov
mov
xor
dec
imul
push
xor
sub
xorb
xchg
fidivrl
aad
push
jns
mov
xchg
mov
mov
shrb
jo
and
in
jo
sub
scas
add
mov
push
lock
out
sub
stos
xor
jns
inc
js
mov
out
mov
das
mov
testb
gs
fidivrl
movsb
popf
int
lea
mov
inc
push
ja
jb
test
push
cmpsl
cmp
je
test
fnstenv
into
je
mov
xor
push
cs
mov
je
lcall
aaa
fstl
in
sub
or
stc
push
cmp
andl
insl
xor
scas
push
adc
pushf
mov
in
dec
shll
sbb
leave
rcll
sub
xchg
inc
lret
icebp
or
hlt
jg
pop
pop
sar
ja
mov
mov
pop
or
inc
and
sub
dec
into
lret
addr16
add
and
jno
push
loope
mov
xchg
lock
jae
out
xchg
pushf
xchg
std
sarl
pop
mov
lods
inc
outsb
push
pushf
cmp
mov
enter
hlt
xchg
xor
popa
mov
gs
test
sbb
push
xchg
pusha
cmpsl
adc
out
aas
jo
ds
in
outsb
mov
inc
roll
test
adc
rcll
jle
mov
jno
dec
xor
fistpl
sbb
je
pop
or
sti
pop
and
inc
sub
cmp
cld
add
cmc
mov
mov
in
into
jbe
dec
out
or
pop
sbb
hlt
or
into
add
in
mov
or
or
negl
jp
imul
push
int
jns
pop
inc
repnz
jle
sub
push
inc
jbe
aam
rcrb
stc
pop
mov
pop
xchg
inc
and
xchg
imul
xchg
sub
scas
jg
popf
jmp
pop
and
mov
add
pop
inc
insb
mov
pop
daa
in
fcomps
or
xchg
mov
call
xor
cmpsb
and
mov
and
pop
pop
push
mov
lods
mov
add
mov
mov
loopne
stos
je
cli
test
insl
add
cmp
imul
mov
cs
xor
and
fistl
mov
in
std
adc
std
or
jmpw
les
test
adc
adc
jg
dec
cmpb
mov
rcrl
inc
decl
in
cmp
xchg
data16
inc
daa
jne
xlat
int
add
cmpsl
mov
fsub
dec
xchg
jmp
mov
sbb
and
sub
loope
and
imul
push
sbbb
fs
push
fistl
jl
pop
popf
pop
push
push
xlat
shlb
mov
jae
aam
or
add
insl
mov
pop
pop
cmp
dec
into
icebp
sar
cmc
aaa
push
mov
addl
icebp
sbb
stc
mov
out
repnz
xchg
test
push
in
xchg
divb
and
and
jne
ds
mov
mov
push
add
in
push
sahf
mov
jle
dec
test
or
inc
scas
dec
fdivrs
iret
sbb
cmpsl
xchg
and
cmp
sub
push
imul
test
out
xchg
aas
sbb
int
mov
mov
aas
addr16
in
xchg
cmp
push
cmc
stos
out
stc
add
cmpsb
aam
lock
js
mov
mov
test
dec
ss
jns
jno
out
in
mov
jmp
mov
mov
jmp
lret
ret
leave
loopne
sahf
sub
mov
jle
add
push
lret
xor
xchg
enter
xor
leave
jno
std
jb
cmp
lock
cmpsl
mov
and
mov
or
es
fimuls
pop
adc
stos
pop
sub
jne
cli
jbe
rolb
iret
inc
adc
jle
mov
into
push
cmp
ror
push
arpl
lea
xchg
sub
adc
xchg
sahf
dec
rol
xorl
jge
or
jae
dec
es
in
jne
xor
cltd
sbb
fldl
xor
mov
aas
adc
mov
mov
xor
mov
pop
xchg
jp
cs
mov
push
mov
xlat
imul
push
inc
jle
aaa
push
push
and
pslld
inc
outsb
push
add
sbb
ret
sbb
add
mov
pop
je
mov
pop
aam
aad
add
ds
sub
jl
cmp
pop
inc
mov
lods
sbb
test
loop
xchg
add
and
mov
jno
stc
or
lcall
jmp
push
nop
lea
lods
sub
incl
pop
jl
xchg
xchg
sub
sub
mov
pop
add
movsb
rol
out
aad
xorl
hlt
adc
ss
clc
stos
mov
jge
int3
sub
mov
out
or
mov
push
inc
ss
fisubrl
jp
lds
add
orl
inc
dec
call
pop
mov
jg
ret
aaa
in
xor
mov
stos
fs
adc
jns
test
sbb
stc
out
jge
push
subb
stos
sbb
imul
push
insb
popa
dec
sub
xchg
mov
xor
fnstenv
fists
mov
pop
cmp
data16
test
cmpsl
in
scas
mov
test
shl
ret
jl
jae
xchg
jno
jl
cwtl
test
add
xchg
inc
cli
scas
pusha
jle
pop
push
cmp
jo
push
push
push
rcll
out
add
xchg
pop
movsl
xchg
push
shlb
stos
scas
jbe
inc
ja
fwait
dec
pop
inc
pop
xchg
push
lret
js
call
dec
lret
push
nop
shrb
inc
jnp
and
jg
jns
fwait
cld
lcall
dec
or
add
inc
mov
pop
mov
ja
lcall
jge
cmpsl
loop
sub
push
ret
sub
mov
pop
xchg
cmp
leave
insl
stos
shlb
sbb
add
pop
jno
lods
loope
pop
adc
in
lret
jbe
mov
cltd
fs
dec
jmp
mov
insb
js
sub
loop
xor
stos
push
ja
push
or
cld
push
cmc
mov
aaa
test
stos
rorb
out
adc
mov
lahf
fdiv
sub
sbb
sub
mov
inc
aas
popa
inc
xor
push
sbb
add
mov
nop
test
mov
pushf
insb
push
sub
xlat
push
fs
fiaddl
outsb
dec
pushf
cmp
imul
cmp
insl
aas
call
jno
setg
cmp
fidivrl
mov
mov
pop
or
dec
and
test
pop
and
adc
fmul
mov
lahf
iret
adc
sbb
adc
arpl
dec
xor
mov
and
or
lock
subb
push
mov
test
lock
cs
cltd
or
or
aas
xchg
mov
cld
popa
in
jne
sub
pop
les
repnz
xor
clc
inc
jbe
inc
punpckhbw
push
pop
lea
push
cmpb
fwait
mov
pop
xor
sub
sub
pushf
cs
push
shl
subl
stos
or
mov
mov
or
fcomps
push
push
rcrl
jle
add
push
lds
cltd
rclb
insl
or
cs
xor
xor
jmp
enter
rcr
enter
pop
mov
mov
jle
add
jecxz
mov
dec
fcoms
sbb
in
sub
pusha
jne
div
rcll
push
sub
xor
jecxz
ret
clc
enter
and
imul
mov
sbb
ljmp
push
adc
subl
or
add
pop
adc
mov
xchg
push
fwait
ret
jl
mov
sbb
icebp
aas
push
pop
nop
and
inc
add
loop
adc
sub
add
dec
adc
pop
mov
cmpsl
mov
lods
lcall
or
lcall
sbb
jno
loop
cld
add
cmp
cld
push
pushf
aad
push
fadds
ficoml
cmp
or
out
cmp
insl
out
sarl
inc
jp
sbb
adc
popa
mov
add
sub
ret
js
je
add
inc
fmul
jb
ret
cld
stos
xchg
fs
jbe
in
test
sbb
inc
push
rcrb
cmp
jno
adc
add
sarl
enter
push
mov
mov
xchg
sarb
fmul
xor
movsb
mov
hlt
repz
lea
outsb
dec
inc
xor
daa
inc
and
adc
jne
insb
adc
mov
xchg
jl
jae
mov
push
push
test
lret
les
imul
pop
rcl
adc
sub
leave
mov
rorb
sbb
stos
inc
jl
pop
mov
xchg
sbb
fcomps
mov
xor
pop
bound
aad
arpl
fwait
je
lret
lcall
add
or
sti
daa
into
jns
test
shll
pop
cmp
int
jbe
jmp
push
xchg
sbb
pop
fcompl
popl
cmpsl
fdivrp
jge
cmp
sub
mov
cmp
divl
movsl
ret
pusha
icebp
and
xchg
fs
addb
shr
jmp
lods
pop
lcall
adc
mov
xchg
js
cld
insl
adc
fsubrl
idivb
or
add
jae
fisubrl
gs
xor
and
sbb
pop
movsl
cltd
lds
jb
dec
ljmp
jae
lret
adc
loop
adc
pop
push
push
dec
test
fidivs
gs
out
dec
sbb
sbb
mov
lods
arpl
mov
jne
pop
leave
repz
cmp
int
aaa
add
xchg
aas
sahf
push
es
stos
data16
inc
jo
and
hlt
pusha
rcll
les
movl
jg
and
mov
xchg
scas
cs
stc
mov
mov
mov
dec
aaa
int
inc
test
xchg
ljmp
add
jmp
mov
iret
aaa
lock
icebp
mov
pop
sub
cmp
imul
or
inc
jecxz
mov
add
nop
mov
inc
pop
in
cmp
cmpsb
mov
andb
pushf
inc
cmp
mov
jle
repz
push
in
jbe
xchg
scas
mov
pushl
jbe
mov
popf
jbe
jae
sub
dec
xchg
pop
lcall
adc
mov
or
cld
mov
dec
mov
lods
add
in
mov
dec
fs
adc
mov
scas
fcompl
orb
inc
xchg
and
cmpsb
cwtl
movsb
pusha
sub
test
mov
push
or
mov
rcrl
cmp
addb
rolb
stos
mov
movsb
fstps
jae
scas
in
push
cmp
xchg
mov
out
jge
jae
sbb
insb
pushf
sub
and
shll
test
pop
popa
adc
repz
xchg
push
fxch
jnp
dec
cltd
sub
mov
fistpll
fistps
clc
hlt
dec
adc
mov
push
aas
adc
dec
push
jge
or
loope
stc
add
jmp
rol
rcr
fcomp
flds
lret
mov
sahf
adc
data16
testb
jle
out
mov
dec
rcrb
dec
out
xchg
popf
loop
test
pop
roll
sub
adc
fdivs
xchg
sti
push
mov
fisubs
iret
fcoms
add
cmp
lea
fmuls
out
pop
cmpsb
jb
xor
inc
jno
inc
popf
icebp
pop
mov
xorb
lret
shll
sub
and
inc
mov
mov
inc
dec
aas
cmp
dec
arpl
pop
inc
shrl
mov
mov
push
pop
lret
lcall
cmp
sub
ss
mov
and
xchg
push
jl
mov
fiaddl
dec
fmull
cli
ja
aaa
pop
cmp
decb
sbb
loopne
push
loopne
fisubrs
int
xlat
mov
repnz
mov
push
outsb
int3
js
scas
out
ss
mov
mov
mov
jae
push
lds
mov
mov
lret
into
out
inc
out
pop
xor
movsb
mov
aas
jg
test
test
mov
aam
cmp
jns
add
cmp
inc
add
xchg
repz
mov
loop
gs
cmc
push
movsb
insb
jnp
in
test
push
jmp
dec
mov
jg
loopne
push
jp
dec
fabs
notl
sbb
das
push
js
mov
dec
fildl
push
pusha
je
ja
dec
push
in
in
aad
imul
cmpsl
inc
lahf
gs
aam
or
std
adc
jle
jle
push
mov
cltd
push
cli
bound
jmp
imul
jmp
sub
into
mov
pusha
jg
mov
lcall
sub
xor
int3
pop
add
ficomps
ss
or
movsl
loop
testl
xchg
stc
push
ss
mov
sub
divl
test
popf
popf
pop
jmp
sub
mov
xor
pop
push
cli
out
add
dec
pushf
sub
arpl
fiadds
xchg
and
aaa
popf
cltd
and
xchg
pop
js
dec
sub
scas
mov
jns
stos
scas
push
pushf
scas
lahf
push
push
shlb
sbb
aaa
mov
mov
int3
lock
insl
xchg
into
outsl
mov
ret
jb
push
mov
lcall
dec
jmp
mov
pushf
xchg
fs
jg
jo
add
shlb
xchg
out
sbb
adc
test
mov
loop
push
mov
mov
xor
call
adc
loope
stos
push
sbb
negl
mov
sti
repnz
inc
int
test
loope
nop
pop
and
stos
jno
inc
lahf
mov
imul
adc
mov
negb
sbb
lret
jae
pushf
jo
dec
dec
ffree
mov
pop
jno
push
and
dec
xlat
adc
mov
pop
hlt
rcll
js
xchg
out
cmp
push
sub
pop
pushf
fadd
rcrl
rcll
sahf
in
std
aas
sub
or
and
jo
sbb
mov
mov
mov
jb
push
jne
adc
inc
dec
dec
add
cmp
addr16
push
cmp
add
pop
lea
jbe
aam
mov
sbb
cmc
sbbb
data16
or
int3
leave
mov
int3
pop
ret
shl
lret
mov
inc
xlat
test
xchg
imul
push
lods
push
inc
pop
loope
mov
loope
jmp
sbb
pop
mov
je
shrb
inc
lods
repz
xchg
movsb
stc
xor
arpl
les
loope
pop
rcrb
ja
les
or
pop
jae
rcrb
fldt
cmpsl
in
inc
fdivrs
mov
js
xchg
add
popa
ljmp
jecxz
repz
pushf
inc
pop
mov
popa
hlt
enter
add
cmp
xor
sub
xlat
dec
movsb
addb
or
add
pop
fstpt
loope
fsubrl
fcmovnb
lea
mov
scas
xlat
mov
mov
sub
jmp
int3
int
into
int
int3
int
mov
sbb
push
jle
add
frstor
pop
and
push
jb
xchg
mov
shr
shrl
imul
lret
lods
push
mov
jae
pop
inc
push
orb
jmp
sub
lods
jnp
dec
imull
or
fimuls
jnp
ficoms
mov
fdivrl
mov
dec
fs
loopne
adc
repz
pop
or
stos
cld
fimuls
mov
jae
out
in
mov
movsl
mov
sahf
mov
sbb
ss
mov
fwait
test
loope
bound
lds
test
sti
jo
mov
add
mov
mov
pop
mov
int3
shl
jno
push
pop
gs
push
inc
sub
scas
fdivrl
out
fwait
cli
xchg
mov
dec
and
ret
and
xor
cmp
xchg
lret
cmp
leave
cs
fs
or
jnp
loopne,pt
xchg
loop
jnp
xor
push
addb
movb
lods
sub
dec
sar
ds
or
mov
jmp
sbb
cmp
imul
addr16
or
std
int3
mov
pop
mov
scas
cmp
and
xchg
inc
fstpl
jnp
and
xchg
mov
lds
pusha
hlt
jo
leave
and
add
push
and
add
aam
lahf
out
push
dec
insl
pop
jb
inc
mov
es
test
fs
inc
mov
sahf
fstpt
xchg
push
clc
adc
popf
stc
cmp
mov
inc
jg
pushf
xchg
mov
mov
inc
mov
mov
jae
adc
shlb
sub
push
pop
lahf
pop
ss
cmpsb
lret
pop
cwtl
lret
push
mov
push
repnz
js
mov
int
push
mov
mov
scas
and
hlt
imul
fisubrs
insl
fwait
mov
mov
jle
cltd
sub
aas
mov
mov
jmp
xchg
xor
inc
adc
jne
mov
or
ffree
pop
iret
into
or
pop
dec
and
pop
ret
gs
jl
inc
int
xor
pop
jle
lret
push
sti
stos
jbe
std
or
sbbl
sbb
cmpsl
pop
xchg
mov
nop
sbb
pop
mov
fisubl
xor
xor
jmp
mov
jge
or
or
sbbl
inc
loope
pop
adc
cmc
dec
stos
jl
mov
pop
inc
test
add
loope
xchg
fs
fistps
mov
mov
push
xchg
and
lock
sub
repz
inc
rcl
cmp
cmp
and
les
xchg
jae
xchg
mov
pop
sbb
mov
xor
pop
scas
sub
in
mov
jns
add
pop
jae
mul
and
jae
jle
inc
std
imul
fwait
aad
shlb
lcall
test
ret
jg
xor
iret
adc
push
out
jbe
xorb
imulb
sbb
pop
testl
pop
or
jae
imul
clc
sarl
scas
aas
jecxz
and
cmp
mov
xor
and
or
or
loope
movsb
cs
lcall
push
mov
enter
dec
js
daa
xor
cmp
sub
push
mov
cli
test
push
mov
pinsrw
mov
push
adc
sbb
outsl
scas
shrb
sahf
push
clc
dec
sub
js
aaa
adc
lods
aam
outsw
cmp
jno
fucomip
into
popf
incb
mov
pop
or
push
mov
add
movhps
stos
or
nop
pushf
sahf
push
xchg
fmul
mov
xchg
add
add
or
les
jmp
rcl
lret
fcomp
rcr
add
mov
outsb
jg
testb
jle
mov
out
mov
cmp
or
repz
ja
sub
insb
nop
or
sub
pop
mov
loopne
les
pop
cli
lods
addr16
or
xchg
mov
inc
xchg
inc
rcrb
aas
jns
mov
scas
xchg
int3
hlt
pop
pop
aad
ret
add
dec
adc
mov
arpl
repz
sub
into
sti
add
jno
pop
aad
scas
addl
xor
cmp
ret
aad
push
xchg
mov
pusha
enter
addr16
aas
and
adc
shr
adc
or
out
jmp
fiadds
jb
mov
call
in
fistpl
insb
movsw
gs
jb
mov
adc
pushf
adc
push
inc
lods
ss
lret
push
fisttpl
xchg
lret
repz
cmp
adc
ljmp
lret
test
sub
or
test
fbld
lock
fisttps
sub
popf
pop
jb
dec
ss
inc
inc
jae
pushl
jl
sub
xchg
aam
dec
jnp
or
sti
pusha
mov
cs
sub
lods
push
movsl
dec
fistl
jae
mov
jg
jno
jecxz
pop
cwtl
fistps
mov
fldcw
xor
sub
sbb
fiaddl
fistl
push
pop
pop
out
mov
out
dec
xlat
lahf
rol
dec
or
out
push
repnz
mov
pop
jb
cwtl
stc
push
xchg
cmp
test
movsb
das
xchg
jne
push
fistpll
push
inc
fmulp
sbbb
mov
test
jl
sbb
aam
add
add
xor
lods
je
dec
nop
and
pop
mov
mov
mov
loop
clc
outsl
rcll
pop
push
jnp
data16
negb
bound
sbb
dec
pop
sahf
lods
push
aad
cltd
xchg
or
cmp
jae
push
inc
mov
or
das
cwtl
cmp
xchg
push
mov
push
jb
mov
pop
inc
imul
mov
in
fdivrs
push
xchg
jns
and
jae
call
pop
data16
out
in
xchg
mov
push
pop
inc
loopne
addr16
dec
fwait
and
jo
scas
pop
push
jnp
fdivl
movsl
enter
insb
jp
scas
ret
iret
mov
bound
rorb
ds
cwtl
unpcklps
jle
mov
xchg
cmpl
repnz
xchg
push
mov
or
sarb
xor
daa
inc
jns
xor
pop
lret
or
cmpb
out
lock
mov
dec
jge
test
in
mov
add
xor
mov
subl
xchg
xor
sub
lds
inc
mov
scas
sub
mov
fiaddl
sub
inc
sbb
mov
scas
outsb
mov
sub
lahf
or
pop
rorb
dec
push
cmp
fdivrs
adc
pop
stos
push
xor
sub
mov
pop
sbb
xchg
mov
or
mov
pop
and
mov
inc
cmc
psubb
inc
push
fistps
cmp
rcrl
add
cmpsb
push
jmp
imul
in
inc
in
stos
pop
movsl
icebp
loope
cmpsl
stos
icebp
or
push
mov
or
dec
pop
mov
mov
out
into
adc
push
add
lods
xor
lds
leave
mov
dec
and
mov
fdivrl
stos
lret
scas
sub
xchg
jbe
neg
xor
cmp
jge
cmp
mov
sub
jg
inc
call
test
and
in
aad
cmpl
mov
push
out
dec
cmp
dec
push
int3
inc
orl
out
sbb
movsb
or
pop
hlt
push
dec
dec
scas
sti
pop
int3
adc
xor
fisubrl
push
dec
sub
mov
in
push
ret
pop
sub
loope
ljmp
repnz
int
pop
pop
test
fs
pop
xlat
adc
int
jg
xor
add
add
imul
mov
mov
sub
cmp
jmp
iret
aas
aam
aam
aad
inc
cli
cmc
outsl
mov
push
testb
jle
add
mov
in
xor
mov
imul
jne
adc
in
pop
mov
jo
pop
or
cmpsb
jb
iret
push
cmp
jne
cmpsl
mov
out
inc
sbb
bound
fs
les
pop
repnz
dec
mov
inc
bound
outsb
push
int
push
mov
scas
sub
inc
in
mov
xchg
push
and
cmp
rclb
ss
jo
fsubrs
in
xor
add
addb
lock
xchg
or
sub
mov
mov
lock
ljmp
add
mov
pop
test
int
lret
mov
std
adc
repz
sti
jb
push
ficoml
xchg
mov
lods
sub
pop
dec
sub
mov
pop
lea
lods
aad
mov
pop
imulb
mov
adc
imul
sbb
cld
dec
stc
sub
sbb
and
rclb
rorb
cmpsl
xor
repz
lahf
and
gs
jp
shlb
dec
iret
push
std
loop
pop
fadds
jo
repnz
neg
shl
xor
mov
cmp
js
inc
push
mov
pop
xor
inc
gs
pop
scas
pusha
xor
sub
sbb
mov
xor
sub
int
iret
ret
or
mov
repz
mov
les
movsb
sbb
inc
xorb
sub
movsl
adc
pusha
push
sbb
xor
mov
sbb
incl
out
in
pop
jp
sahf
xchg
adc
add
bound
dec
sbb
push
jns
jmp
lahf
or
pusha
movsl
pop
push
aas
dec
mov
add
popf
cltd
push
ss
ja
sub
js
xor
mov
jnp
out
fsubl
js
adc
pop
mov
stos
pusha
add
cmpsb
pop
or
decb
les
movsb
sbb
sub
fwait
jnp
out
aas
jl
or
xchg
fisubs
je
jnp
pop
stos
sbb
dec
in
mov
rcrb
andl
xchg
sbb
loope
andl
mov
idivb
push
inc
daa
push
out
call
test
inc
insb
sub
or
cltd
or
inc
push
lods
xor
pop
movsb
addr16
add
dec
aam
xchg
xchg
mov
push
cmp
push
lahf
outsb
sub
push
jns
popf
cmp
mov
inc
pmulhw
jmp
lcall
cmp
cmp
cmp
ret
je
movsb
jns
xchg
fisttpll
lods
les
daa
xchg
scas
jns
and
loop
dec
sub
jecxz
xchg
arpl
adc
cmp
in
orb
addr16
aad
add
fdivrl
xor
jb
cmp
jl
xor
mov
jecxz
fistps
pop
scas
mov
fsubrl
mov
pushf
arpl
movsl
pop
xchg
mov
pop
cs
addr16
mov
roll
inc
pop
xchg
push
outsb
in
and
imul
pop
scas
or
cmp
outsb
cmp
addl
out
pop
or
pop
ss
in
into
add
or
pushf
ss
ds
adc
inc
fldl
sub
cwtl
cmp
xchg
and
lods
jmp
outsl
push
aad
rclb
in
pop
dec
ret
pop
xchg
fisttps
fstl
add
bound
or
xchg
mov
jns
cmp
pop
bswap
mov
cmc
lea
jbe
push
mov
pop
or
in
xchg
jns
lahf
ss
rcrb
mov
mov
jmp
cld
pop
inc
mov
xlat
test
cwtl
pop
xchg
push
push
loope
fmull
jmp
dec
adc
xlat
lods
inc
jnp
cwtl
mov
jmp
cmp
xlat
hlt
cmp
mov
ja
jle
add
out
xchg
inc
lds
xor
mov
inc
mov
and
mov
adc
insl
movsb
xor
icebp
xchg
aam
dec
mov
lahf
jmp
mov
mov
xor
rclb
pop
pop
mov
mov
jae
mov
xlat
dec
aam
push
mov
jge
rcll
pushf
cmc
jno
pop
push
xchg
pop
inc
in
scas
popf
dec
pop
cmp
nop
mov
bound
jg
fs
test
sub
sarb
or
out
jle
cmp
xor
fsubr
ss
xchg
sub
test
stos
xor
clc
pop
icebp
outsb
imul
or
jecxz
lahf
cmovl
scas
test
sub
jae
xor
call
adc
jle
dec
cmp
scas
addr16
testb
lret
outsl
inc
inc
fldl
xor
ret
shrb
bound
xchg
ficoml
push
iret
lret
mov
lods
jge
add
pop
mov
sbb
dec
mov
cmpsl
or
cmpsb
or
pop
in
adc
rol
arpl
stos
xchg
cmp
pop
int3
sub
sbb
mov
fabs
outsl
and
inc
xlat
leave
andl
rclb
inc
pop
test
xchg
cmp
mov
pop
mov
push
stos
loopne
aad
cmpsl
add
cwtl
mov
pushf
mov
adc
dec
fldl
cld
in
cmp
in
or
inc
or
movsl
inc
test
push
cmp
mov
mov
xor
hlt
xor
xorb
push
fbstp
push
lock
stos
push
mov
fidivl
aas
imul
inc
sti
push
push
loope
leave
pop
std
cmpsl
or
lds
jl
stos
les
push
popa
jbe
inc
jmp
in
in
mov
popa
inc
rcrl
lds
in
rolb
js
movsb
mov
push
mov
inc
mov
xor
xchg
xor
addb
cmp
xchg
or
movsl
sbb
jne
push
fldt
pop
add
out
mov
push
jmp
daa
add
sbb
mov
push
adc
fdivrs
push
xlat
mov
push
sti
lret
outsl
rclb
push
data16
cmp
pusha
jnp
lods
int3
dec
aaa
mov
cli
lds
movsb
cli
adc
fistl
pop
aam
ficompl
cmp
pop
les
jo
mov
jbe
push
cmpsb
sbb
mov
dec
xchg
mov
ret
outsl
rorl
mov
ds
dec
aad
test
pusha
xor
insb
imul
es
negb
pop
out
pop
push
mov
rclb
out
sbb
adc
mov
lcall
bound
fisubl
mov
push
mov
pop
std
cmpsb
add
daa
adcb
push
mov
cmp
or
adc
mov
daa
jmp
lods
pop
or
ror
and
out
push
add
jmp
xchg
push
out
cmpsb
mov
pop
fists
adc
aam
cltd
insl
pushf
or
scas
mov
adc
test
fsubr
inc
dec
addr16
cwtl
mov
sub
test
and
lods
test
push
andb
sbb
int3
insl
fcoms
ds
or
mov
add
jge
daa
xchg
jae
inc
sbb
sbb
pop
lods
fdiv
adc
iret
adc
jns
cmpsb
pop
movsb
out
icebp
out
out
cmpsl
xor
pop
mov
and
cmc
jno
inc
mov
jl
mov
or
fistps
and
fistpl
fadds
mov
imul
xchg
adc
int
fmuls
jmp
fnsave
daa
jae
imul
mov
adc
test
jmp
jbe
xor
sbb
add
xchg
push
mov
sub
adc
mov
aaa
shrl
xor
mov
or
test
xchg
jmp
xor
push
xor
inc
subl
xchg
add
add
cld
jmp
ret
iret
into
fcmovnbe
xlat
lret
and
pop
dec
stos
or
js
jle
add
lea
xchg
fwait
das
outsb
mov
repz
outsb
iret
cmp
cmc
mov
loope
icebp
sub
mov
int
lock
fmull
mov
sub
int3
repz
imul
fstpt
pop
rclb
push
sub
fildll
xchg
aas
lock
cwtl
test
cmp
in
jnp
into
bound
pop
push
fiadds
addr16
push
push
pusha
ljmp
rcr
push
xor
mov
add
dec
jb
xor
lds
add
xor
pop
sbb
fisttpll
or
insb
mov
adc
clc
psubd
and
insb
imul
scas
fcmovb
mov
fwait
mov
das
std
and
push
test
mov
movsl
xlat
mov
xor
inc
pusha
mov
pop
mov
mov
ljmp
jno
je
mov
jno
push
push
adc
or
mov
mov
jno
cmp
sub
and
xor
xor
sbb
ss
test
add
xchg
ret
adc
cmpsl
lret
fsubrp
loopne
sbb
adc
push
inc
ds
insl
icebp
ss
sub
cmpsl
ss
mov
cmp
inc
jns
dec
mov
sbb
pop
ret
push
loop
sub
jae
inc
dec
lret
or
lretw
mov
inc
popf
cs
push
mov
sti
cmp
ss
dec
adc
xchg
inc
inc
mov
ljmp
add
jnp
mov
mov
icebp
pop
aad
cmp
cli
ret
or
dec
andb
and
test
mov
out
sub
je
call
aad
test
mov
aam
leave
ret
sub
jge
mov
inc
xor
pop
aad
fcom
lods
mov
cld
mov
xor
mov
or
xchg
test
jmp
and
mov
movsl
jae
adc
stos
xlat
es
out
js
lahf
sbb
shll
dec
xchg
ds
jl
push
xchg
cmp
outsl
enter
rolb
call
mov
mov
ljmp
and
fstps
lea
loopew
pop
mov
pushf
mov
and
das
push
xor
dec
mov
aam
dec
cmpsb
out
mov
outsl
or
push
icebp
pop
cmp
subb
cmp
stos
cwtl
ret
xchg
ds
scas
dec
into
sub
or
and
fs
sbb
imul
aam
push
outsb
mov
pop
rclb
mov
outsl
in
lods
loopne
push
addr16
xor
dec
sahf
dec
and
in
cmp
cmpsl
adc
pusha
test
mov
scas
and
gs
add
cmpb
je
add
aas
rcll
sbb
pop
push
fs
pop
cmp
and
mov
add
iret
cmpsl
jo
sahf
push
cmp
jb
pop
jo
popf
adc
in
pop
adc
je
in
jno
push
jo
jl
int3
mov
sbb
or
push
idivl
xchg
mov
add
lea
icebp
cltd
iret
pusha
xor
neg
test
ficompl
cmpsl
cmp
add
scas
shl
cmp
pop
ljmp
mov
jae
inc
ss
mov
fmul
xor
cmp
xor
pop
mov
lds
out
ljmp
pop
fwait
jg
out
add
push
or
bound
sbb
idivb
aas
test
mov
xchg
addb
pop
daa
out
cmp
out
xchg
leave
dec
or
pop
out
inc
test
and
arpl
xor
movsl
inc
mov
icebp
jne
faddl
insb
pop
pop
ss
xor
into
mov
xchg
imul
cmp
xor
jmp
xlat
sarb
aad
ds
sbb
sbb
jl
jle
add
mov
push
xor
popa
loope
or
mov
adc
inc
pop
dec
dec
cld
lds
insb
or
cmp
inc
mov
popf
dec
fimull
lcall
das
mov
vsubps
insl
lahf
mov
and
jecxz
subl
dec
fsubl
mov
popf
test
add
out
sub
outsl
divl
cld
fwait
xchg
pop
jge
inc
rcrb
inc
jb
sahf
es
mov
add
cmc
push
jmp
adc
js
fwait
xchg
lcall
mov
and
test
dec
mov
sbb
call
mov
adc
cmp
test
push
es
lret
fadds
ret
ret
inc
jne
test
in
jmp
add
pop
cld
lods
sub
xor
xor
xchg
jnp
je
bound
cmpsl
in
mov
ja
mov
fidivrl
das
jp
xor
ficomps
movsb
in
popa
test
cmp
arpl
fbld
or
dec
mov
in
adc
ret
daa
pushf
test
jmp
pop
ss
pop
popa
out
jge
xor
pop
sti
pushw
test
sub
lret
imul
adc
inc
mov
jge
mov
insl
cmp
aad
xchg
sbb
jp
sbb
jl
push
cmp
out
jbe
jecxz
mov
insl
dec
adc
sub
test
cmp
mov
xchg
in
mov
mov
cmp
inc
mov
sti
dec
in
pop
scas
xlat
adc
mov
pusha
negl
mov
stos
push
jno
pusha
jne
imul
mov
loop
ja
pop
pusha
std
cmc
ret
movsl
dec
adc
and
repz
lock
and
push
inc
fistpl
cmpsl
fsqrt
xor
sub
add
add
cmpsb
cmp
adc
imul
cs
sbb
out
mov
leave
iret
loope
or
xchg
mov
bnd
lea
lea
cmp
pop
loop
xchg
mov
jl
cmpsb
dec
adc
arpl
int
into
shr
cmp
nop
lea
outsb
mov
adc
pushf
cld
or
pop
mov
idivl
in
cltd
xchg
mov
xor
incb
dec
ret
hlt
add
and
lea
cwtl
inc
cmc
cmp
mov
or
push
leave
push
mov
dec
out
sbb
jo
adc
clc
cmp
mov
dec
fwait
jecxz
dec
xor
movsl
cmp
lcall
sbb
xchg
pop
pusha
out
js
sbb
mov
outsl
dec
xchg
cmp
pop
flds
xchg
inc
jae
dec
repz
fwait
aaa
or
clc
adc
dec
int
test
pop
dec
inc
scas
daa
adc
fstpl
fidivs
scas
adc
mov
sub
jecxz
adc
xchg
bound
sub
test
mov
pop
lret
ja
xchg
scas
sbb
cmc
xor
mov
ret
jne
xchg
punpckldq
shrb
inc
lea
lods
jne
stos
fisubs
mov
sub
jle
rep
mov
cmpsl
stos
lret
sub
adc
sbbl
dec
std
jg
sbbl
cmp
xchg
cli
adc
sti
cltd
pop
dec
aas
ds
push
push
cmp
sub
into
sahf
cmp
and
rolb
lock
cld
bound
mov
pop
sub
mov
lret
push
sub
jbe
sbbb
andb
mov
notl
or
loop
fstpl
or
sarl
cld
insb
ss
sahf
or
ja
fsubl
mov
aas
or
call
xchg
jg
addr16
aam
ret
inc
jno
push
sub
les
lock
idivb
jae
mov
aad
mov
jg
xor
add
add
imul
mov
jmp
mov
adc
das
in
add
jg
jle
push
and
in
adc
sbb
lock
xchg
push
and
shrb
in
add
jns
popa
repnz
add
pop
xor
and
sahf
shrl
ljmp
cmpsl
ja
fisttpll
icebp
movsl
xor
out
jns
and
stos
pusha
repnz
xchg
scas
imull
jp
and
push
in
dec
dec
pop
out
cmc
lods
cmp
fidivrs
out
popf
cltd
imul
mov
inc
shll
andb
clc
in
mov
push
jb
mov
out
test
dec
inc
inc
in
cmp
out
push
adc
mov
fnstenv
inc
int
sub
xchg
pop
xor
pop
add
or
sub
add
xor
out
add
pop
mov
test
aad
icebp
add
or
leave
dec
push
stos
loope
adcl
jp
out
sbb
add
hlt
ja,pt
add
mov
jne
adc
dec
lahf
movsl
push
imul
movsb
sub
lods
cmp
xchg
cmp
ficoml
and
add
jb
pop
lods
push
in
mov
sarl
mov
and
cmp
add
loope
mov
mov
dec
jg
sbb
addl
fmulp
lds
into
fwait
popf
jle
sbb
pop
andb
test
in
call
stos
mov
push
cmp
and
pop
mov
push
or
push
fmull
rol
call
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
and
mov
subl
xor
sbbl
add
movl
mov
movl
movl
mov
movl
push
movl
mov
mov
cmp
movl
je
or
mov
xor
sbbl
xor
subl
lea
subl
xor
cmp
jne
movl
jmp
sub
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
jmp
andl
push
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
call
mov
dec
mov
jmp
adc
lea
push
add
pushl
sub
push
add
lea
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
inc
mov
mov
sbb
inc
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
push
xor
pop
xor
orl
call
or
movl
mov
or
movl
or
lea
or
mov
lea
mov
xorl
mov
xor
or
adc
mov
mov
and
mov
sbb
mov
mov
and
xor
mov
adc
add
mov
mov
mov
movl
cmp
not
mov
mov
je
and
mov
xor
andl
add
adcl
imul
mov
jmp
mov
and
xor
adcl
add
sub
mov
sub
mov
or
xor
and
add
sub
mov
sbbl
mov
mov
addl
xor
addl
add
cmp
jne
push
pushl
pushl
andl
call
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
pushl
call
cmpl
jb
sbbl
mov
mov
xorl
mov
mov
mov
and
mov
inc
mov
xorl
movl
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
and
movl
mov
sbbl
xor
add
jmp
mov
xor
lea
mov
mov
xor
lea
mov
mov
mov
movl
mov
movl
mov
mov
xor
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
jmp
mov
xor
add
jne
push
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
movl
mov
mov
mov
movl
cmp
movl
jne
mov
add
mov
xorl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
negl
movl
mov
mov
sub
sub
movl
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
xor
lea
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
mov
notl
mov
push
sub
lea
mov
xor
or
add
mov
mov
adc
push
neg
push
sub
mov
andl
mov
adc
mov
sbb
mov
and
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
subl
mov
xor
addl
xor
add
andl
add
div
movl
mov
movl
movl
cmp
movl
je
movl
sbbl
lea
adc
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
mov
mov
mov
xor
mov
mov
xorl
push
adc
push
xorl
mov
xor
xor
or
sub
push
adc
mov
add
mov
add
mov
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
sbb
mov
addl
xor
sbbl
add
mov
add
mov
mov
movl
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sbb
mov
mov
adc
mov
mov
xor
or
adc
xor
add
mov
mov
incl
mov
mov
mov
subl
mov
sbbl
movzwl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
jmp
mov
sub
mov
mov
mov
adcl
xor
addl
add
cmp
jne
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
movl
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
sub
movl
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
xor
add
dec
mov
jmp
push
mov
sbb
xor
xorl
mov
add
mov
movl
mov
addl
push
orl
push
sbbl
test
je
movl
mov
xor
mov
mov
imul
mov
andl
add
mov
incl
mov
xchg
adcl
sub
sbbl
xor
mov
mov
add
mov
xorl
mov
adcl
mov
xor
xor
xor
sbb
mov
xor
xor
add
mov
mov
mov
je
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
pushl
call
mov
sub
mov
mov
sbb
mov
sbb
mov
xor
mov
xor
addl
add
cmp
movl
je
adcl
pushl
pushl
addl
call
mov
mov
mov
sbbl
xor
incl
add
movl
cmp
je
xorl
mov
sub
mov
mov
mov
mov
orl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
call
cmpl
jb
mov
mov
and
mov
add
mov
mov
or
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
mov
movl
push
mov
mov
mov
push
movl
mov
movl
mov
cmp
movl
je
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
mov
addl
xor
adcl
add
cmp
movl
je
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
mov
andl
push
sub
push
mov
or
mov
add
xor
movzwl
add
mov
sbbl
add
sbbl
push
and
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
movl
notl
movl
subl
add
movl
jmp
cmp
movl
jne
mov
movl
mov
movl
mov
mov
movl
mov
mov
jmp
movl
cmp
jne
andl
mov
sub
push
mov
adc
mov
add
push
call
movl
incl
cmpl
movl
jb
jmp
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
xor
dec
mov
jmp
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
push
movl
movl
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
mov
adc
mov
add
sub
and
mov
sbbl
push
mov
xor
movl
cmp
je
mov
mov
sub
movl
xor
cmp
jne
neg
mov
add
movl
jmp
mov
xorl
xor
add
xorl
mov
xor
add
sub
mov
xor
add
movl
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
dec
mov
or
mov
orl
xor
addl
mov
add
and
movzwl
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
movb
xor
xor
sub
lea
mov
movzwl
or
mov
mov
and
mov
xorl
xor
andl
sub
andl
mov
movl
sbbl
movl
adc
mov
add
mov
push
xor
adc
mov
addl
add
movl
jmp
mov
movl
mov
inc
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
mov
mov
sub
mov
mov
xorl
xor
add
movl
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
andl
movl
and
mov
andl
mov
add
xor
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
