push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
mov
mov
fstpl
bound
sub
pop
add
pop
jne
mov
daa
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
add
loop
jmp
cltd
aam
daa
pop
in
idivb
orl
inc
lcall
les
cs
mov
push
add
and
push
dec
xchg
mov
jmp
mov
dec
mov
push
repz
in
pop
xchg
push
mov
mov
aaa
int
push
insl
sbb
inc
mov
movsb
in
push
and
ror
and
rorl
jp
cmp
push
jno
arpl
popa
ja
sar
inc
inc
and
mov
inc
pushf
adc
aaa
sti
jne
push
aas
cwtl
clc
adc
dec
ret
jp
aas
pop
js
dec
enter
clc
jae
xchg
dec
cmpsl
mov
lods
jbe
adc
push
mov
ds
cmp
gs
adc
das
ret
sub
fyl2xp1
aad
add
jns
imul
mov
mov
lods
push
push
and
adcb
and
fisttpll
adc
test
imul
pop
jne
xchg
jmp
xchg
fmulp
or
mov
sar
loop
jmp
xchg
push
jno
je
push
movsb
mov
cmp
sbb
imul
xor
cmp
orb
push
mov
push
in
lds
lahf
fiaddl
sub
push
test
mov
das
or
pusha
shl
add
outsl
inc
outsb
mov
xlat
sbb
add
jno
int3
ret
inc
test
out
int
daa
sar
test
or
pop
imul
lods
xlat
ja
xchg
mov
mov
enter
sahf
nop
push
outsb
pop
icebp
jp
inc
and
push
add
or
mov
mov
inc
loop
fwait
or
insb
add
jle
js
and
sub
mov
inc
dec
pop
mov
jo
dec
pop
jo
cs
out
inc
pop
jg
stc
push
in
adc
jp
scas
fisttpl
xchg
testb
pusha
cltd
push
adc
fnstenv
mov
cmpsb
stos
sbbl
lods
xchg
push
pushf
test
leave
pop
cli
insl
icebp
sbb
jns
mov
pop
mov
lcall
dec
dec
pop
cld
in
dec
pop
gs
jl
in
sub
shrb
and
mov
dec
fildll
loopne
add
fs
mov
xor
inc
push
std
mov
aam
inc
and
pop
sbb
sbb
mov
lahf
mov
jne
pushf
and
mov
pop
xchg
push
cmp
push
movsl
scas
and
push
stos
and
jge
les
pop
ret
jns
jne
adc
into
pop
xchg
repz
lahf
ja
or
fs
dec
push
arpl
jle
test
dec
jne
pop
lock
add
sahf
xor
jb
xchg
adcl
aas
out
or
scas
test
sbb
add
cwtl
mov
stos
mov
lock
push
mov
adcl
dec
mov
push
mov
scas
mov
dec
loope
fmuls
jnp
sub
cmp
insb
popf
cmp
in
add
xchg
xchg
lock
jae
gs
repz
pop
jno
pop
or
pop
add
mov
mov
inc
dec
fcoms
movsb
jp
push
sbb
iret
or
mov
cmp
movsb
dec
aam
fbstp
ds
xor
and
add
and
fimuls
insl
jmp
xchg
inc
rorl
jl
mov
cmpsl
aam
data16
add
mov
rcr
add
inc
mov
dec
adc
fldcw
jne
push
addl
inc
mov
ljmp
cmp
inc
mov
jno
adc
sub
cmp
jmp
or
jns
push
jg
lahf
jno
mov
pop
into
ffree
clc
stos
shl
cld
leave
jmp
out
mov
inc
les
adc
aad
enter
sbb
repnz
xor
jne
cltd
or
push
xor
push
and
adc
pop
js
dec
imul
fdivl
xchg
sarl
xchg
dec
daa
mov
adc
iret
lds
mov
pop
out
in
dec
pop
clc
idivb
push
ljmp
stos
repz
push
lock
rcll
xchg
daa
out
pusha
push
cmp
pop
out
xor
adc
add
dec
xchg
popf
popl
sbb
fistps
hlt
es
jl
jge
data16
mov
sbb
mov
push
clc
push
jbe
jmp
mov
into
pop
jp
ss
sub
aam
idivb
aaa
xchg
imul
repnz
sar
cmp
repz
jle
lret
and
xor
fwait
inc
cmpsb
addr16
lock
jge
pop
addr16
and
dec
push
fbstp
jnp
divb
out
push
sbb
imul
push
adc
test
xchg
icebp
lds
js
xor
add
aad
decb
dec
fwait
mov
std
inc
push
addr16
movb
push
popf
xchg
push
mov
sub
mov
rcll
iret
inc
mov
xchg
sbb
cmpsb
xlat
adc
fmuls
js
cmpsl
jge
cmp
pop
out
sbb
ret
cmp
jmp
add
lds
sub
mov
decl
hlt
push
mov
push
mov
imul
push
adc
jecxz
and
xchg
sbb
xchg
scas
repz
enter
lcall
push
pop
outsb
sti
xor
mov
pop
sbb
nop
ds
shll
fbstp
inc
inc
mov
into
xchg
sbb
mov
or
and
mov
idivl
movsl
fnsave
jno
add
repz
outsb
lret
push
or
ljmp
dec
loop
aad
daa
jl
and
lea
inc
movsb
mulb
mov
aad
pop
push
or
and
push
inc
dec
mov
test
mov
pusha
lcall
pushf
cmpsb
cwtl
or
std
ret
cmpsl
xchg
mov
lds
les
dec
mov
adc
dec
cli
xchg
into
lods
outsl
xchg
jns
push
test
aam
sub
fwait
xor
movsl
adc
neg
clc
popa
aam
inc
or
mov
pop
pop
test
cmp
stos
cltd
mov
cmpl
push
cmp
xor
sbb
leave
shrb
push
xchg
inc
inc
dec
jne
lahf
js
mov
sarl
pusha
insl
push
fs
ds
imul
lods
sbb
pop
pop
test
rcrl
stc
xchg
pop
mov
push
mov
ja
xor
and
subl
popf
mov
sbb
stos
lock
movsb
pusha
sarl
dec
sub
dec
lds
aam
cmc
add
sub
out
dec
xor
mov
inc
sbb
jle
fistpl
pop
std
mov
std
insl
test
lcall
pop
in
mov
xor
push
ret
addr16
jp
bound
in
mov
jecxz
push
in
fildll
fidivrl
add
inc
popa
imul
pop
scas
in
out
and
lcall
push
sub
mov
flds
icebp
lret
div
loopne
xor
push
cmc
cs
mov
subb
mov
mov
arpl
inc
xor
xor
jno
test
in
lret
mov
jne
aad
jbe
addr16
mov
test
mov
ja
add
xchg
popa
fiaddl
mov
mov
lods
dec
adc
add
cmp
fnstsw
jmp
ss
jb
call
sbb
popa
ja
aaa
push
push
leave
std
ss
jae
push
aam
sti
push
ret
mov
sahf
outsb
out
inc
push
push
jno
sbb
push
mov
addr16
lcall
and
push
xor
data16
std
adc
inc
mov
rorl
or
dec
test
arpl
lret
cmpsl
mov
aaa
popf
cmp
inc
aam
bound
out
mov
lds
aaa
dec
pop
mov
mov
mov
dec
push
shlb
mov
movsb
les
inc
sar
cmpl
fdivl
mov
and
repnz
sbb
xor
sub
rolb
xchg
mov
fcoml
pushf
xor
mov
jp
push
sub
cmp
call
ds
push
and
dec
cmp
xor
ljmp
fcmovne
scas
jmp
out
mov
mov
cmp
mov
push
fstpl
inc
xchg
mov
push
outsb
andb
add
das
sbb
and
push
js
pop
cwtl
sub
lds
in
mov
in
mov
xor
jmp
ret
push
dec
out
add
xor
ret
mov
push
add
inc
jae
test
les
sahf
pop
jge
xchg
and
stos
aad
pop
jb
popa
popa
jbe
pop
sbb
and
push
repz
pop
mov
inc
jge
cmpsl
mov
xor
add
loope
push
push
popf
pop
out
push
scas
cs
jg
test
ss
jb
roll
jnp
gs
adc
dec
shl
jns
aas
pop
ja
push
es
xor
movb
sbb
fidivs
out
jbe
dec
repnz
jne
dec
push
adc
jecxz
cmpsl
pop
jae
cmp
mov
add
push
inc
sbbl
cmp
sar
mov
push
insl
sbb
fs
test
lret
test
cltd
sbb
mov
cmp
add
or
xchg
mov
scas
das
idiv
cmc
pop
jl
jle
fiaddl
shlb
cld
xor
push
push
icebp
cmc
sub
bound
xor
aaa
shl
sub
adc
cmp
sub
sti
scas
enter
cmc
sub
xor
sub
mov
push
xchg
jns
xlat
xchg
jl
inc
insb
cmp
ror
rclb
clc
jnp
and
xor
or
aam
mov
imul
les
bound
cmp
xchg
lcall
out
or
push
testl
mov
lods
adc
mov
mov
sub
test
aam
mov
outsl
jb
testb
pop
rcrl
jno
sbb
ret
orb
dec
sub
mov
lods
test
add
arpl
mov
inc
cmc
push
xor
inc
scas
cmc
mov
ret
or
cmp
divb
cmp
jmp
push
sbb
leave
inc
dec
ljmp
ret
in
int
dec
mov
jae
repz
aas
xchg
icebp
in
dec
or
jnp
movsl
adc
stc
or
or
mov
fwait
std
and
push
inc
mov
mov
ljmp
and
push
cmp
fsts
fbld
or
ja
sbb
aam
and
adc
xchg
int3
xchg
call
fisubrs
je
test
sub
int3
sub
inc
movsl
out
add
jl
or
lods
xor
imul
das
leave
les
scas
gs
xchg
jg
push
gs
dec
sbb
mov
call
jo
jmp
pushf
jp
mov
xchg
adc
nop
mov
sbb
xorl
mov
xchg
xor
fimull
dec
hlt
int3
xchg
push
jmp
jo
adc
sbb
inc
or
fwait
pop
dec
xchg
push
cmc
outsb
push
add
ss
dec
lcall
add
repz
lds
mov
xor
mov
cmova
cld
and
push
dec
adc
scas
pusha
fmull
push
jle
and
test
or
bnd
cmpb
cmp
enter
rorb
xor
sbb
aad
mov
dec
pushfw
das
rcrl
ffreep
add
lret
lahf
lods
inc
aas
sbb
repz
mov
roll
mov
int
dec
aad
mov
ja
call
in
in
pusha
out
and
jo
and
call
jp
popf
dec
mov
ret
lods
add
mov
xchg
in
sahf
mov
pusha
cmp
and
mov
leave
outsl
push
imul
loope
jnp
idivl
inc
movsb
and
rcr
arpl
xchg
sub
cmp
jae
push
xchg
popa
incl
int3
dec
lea
sbb
inc
push
or
push
in
cli
fisttpl
ds
mov
pop
aaa
inc
jecxz
adc
lea
pusha
std
test
outsb
or
mov
sahf
sbb
in
movsl
push
push
int3
jmp
aaa
incb
cmpsb
test
dec
push
subb
daa
cmc
outsl
dec
cmp
mov
push
dec
jo
pop
in
jp
daa
inc
cmpb
pop
fistl
pushf
shlb
cltd
pusha
adcb
jae
and
pop
and
jecxz
xor
das
test
aas
xchg
int3
cli
fcmovu
inc
mov
es
add
out
sub
aas
mov
xchg
adc
jbe
negl
shll
psllw
mov
or
mov
jne
rcrb
adcl
dec
xchg
sbb
jo,pn
mov
je
jae
pop
ror
test
pop
out
outsl
shl
adc
aas
jnp
es
iret
mov
cmp
adc
xchg
inc
dec
or
mov
insb
lods
aaa
fisttpl
mov
in
jge
hlt
mov
je
dec
push
mov
div
push
sbb
mov
movsb
cmp
xor
in
xchg
xchg
ret
mov
xchg
dec
shlb
fwait
xchg
cmp
fdiv
and
sarb
call
mov
or
aad
flds
pop
mov
dec
inc
pop
mov
push
xor
lcall
insb
inc
in
jnp
mov
movsl
cmpsb
cmp
in
jg
xchg
sub
hlt
pop
push
sbb
std
stos
dec
arpl
loop
xchg
and
ds
xchg
psubd
and
mov
pop
sahf
out
push
aam
imul
mov
adc
mov
outsb
addr16
lcall
test
iret
test
xchg
int3
mov
jb
push
lods
xorl
arpl
mov
mov
xor
div
in
dec
jo
dec
mov
bound
les
inc
or
movsb
sbb
fisubs
imull
movsb
ret
jge
mov
cmpl
sub
mov
inc
test
test
and
and
lret
scas
test
stc
mov
xchg
faddl
test
and
mov
enter
rolb
pop
jno
jp
inc
mov
inc
jge
mov
movsb
fsubrs
mov
and
das
sbb
cltd
and
repnz
fdivrl
mov
mov
arpl
sub
pop
out
dec
and
fdivrs
push
sub
cmp
dec
inc
jbe
xor
jmp
mov
inc
mov
in
ja
or
cwtl
aad
cmpsl
dec
mov
jb
sub
loop
int3
mov
xchg
sbbb
lds
dec
js
test
inc
inc
jle
orb
jp
jecxz
push
pop
pushf
push
fs
test
inc
sub
pop
push
xor
aad
cmp
cmp
inc
insl
aam
xchg
in
or
mov
sub
jl
shll
push
cmp
mov
add
pop
jge
pushl
dec
pop
push
mov
addb
lcall
xchg
insb
call
lds
cmpsb
scas
fcmovnu
jnp
dec
repz
or
jmp
and
jl,pt
mov
pushf
mov
lcall
ret
push
dec
fwait
inc
and
popa
sarl
test
addr16
outsl
jns
dec
inc
adc
xor
mov
pop
jle
mov
fcoms
in
stc
adc
mov
daa
ds
and
test
adc
icebp
xchg
insl
push
fs
inc
rcrb
jne
xchg
outsl
xor
and
push
mov
inc
ljmp
mov
sub
aam
sbb
jb
insb
sub
sbb
in
sbb
xor
push
stos
mov
mov
fadds
in
mov
fs
scas
minps
push
mov
jne
jl
cmp
mov
pop
and
push
push
push
jg
sbb
jbe
dec
mov
test
mov
fsubrl
enter
push
sub
xor
lret
sahf
daa
lcall
decl
cmp
and
lock
push
push
imul
sub
xchg
lcall
xchg
hlt
ljmp
dec
lods
into
shll
stos
jno
add
inc
flds
inc
push
push
test
push
sti
clc
sbb
ficompl
xchg
push
cmpsb
sbb
lock
lea
mov
cli
int
adc
sbb
sub
in
xor
in
xor
fadd
cli
in
movsl
jbe
negb
push
fisubrl
push
pop
loopne
insb
in
sub
cltd
mov
sub
sbb
in
dec
lahf
sbb
mov
mov
cmpsb
pop
pop
sti
push
and
sti
daa
mov
pop
movsb
xchg
mov
pop
mov
andb
mov
pop
dec
push
aam
dec
stc
fisttps
xchg
imul
testl
push
sbb
jbe
pop
clc
xchg
cmpsb
inc
mov
in
pop
mov
out
mov
or
arpl
test
call
pushf
std
dec
lea
mov
pop
sbb
mov
int
mov
sti
inc
mov
pop
xchg
es
ja
cmp
cmp
aam
rcrl
daa
xor
jl
cmp
ds
dec
inc
js
fstp
aad
pop
and
add
mov
mov
sbb
mov
add
mov
pop
mov
jecxz
jno
and
pusha
push
xchg
insl
pop
jecxz
sbb
pop
fildll
hlt
aad
mov
or
lock
add
lcall
icebp
dec
xchg
cmp
pop
cmp
dec
inc
fsubl
add
mov
or
pop
iret
rorl
lock
fildll
mov
loope
mov
in
cwtl
lret
popa
stos
sbb
xchg
fcoms
ja
inc
les
xchg
or
xchg
and
xorl
paddd
pop
std
paddw
jns
stc
add
cld
fnstenv
lock
cmp
pop
leave
fcomps
pusha
mov
inc
dec
xor
pop
cmc
cmp
xchg
leave
aas
cmp
sub
xchg
repnz
nop
daa
mov
call
mov
call
in
cli
repnz
mov
mov
std
dec
or
outsb
mov
loopnew
push
cmp
adc
inc
adc
mov
and
hlt
xor
cmp
fsubrs
das
clc
mov
filds
jbe
sbb
dec
cwtl
aaa
stos
jl
in
push
push
dec
adc
push
inc
mov
ret
popf
and
jo
repz
cld
xchg
jg
mov
insb
sub
inc
es
inc
push
and
aas
ds
jb
lods
cmc
add
int
mov
divl
mov
insb
lods
jge
aas
jbe
ret
pop
mov
cli
jp
xor
sbb
imul
cmp
lods
add
sub
mov
jmp
jge
lock
mov
fldl
fwait
test
movsb
rol
mov
xor
mov
add
dec
jae
dec
push
fidivrl
mov
and
and
xor
pop
int3
ja
movsl
cli
xlat
clc
inc
out
dec
test
fsts
call
out
mov
lds
adc
xor
push
imul
and
leave
sub
imul
adc
dec
dec
mov
xor
icebp
sub
addr16
or
mov
fiaddl
cmp
filds
fs
xchg
sti
push
xor
int
lret
push
dec
jae
and
sbb
jnp
inc
aad
test
fnsetpm(287
mov
pop
mov
mov
jae
int3
push
pop
test
mov
adc
pop
test
xlat
sbb
add
hlt
imul
dec
mov
mov
and
aaa
pop
out
xor
cmp
roll
and
outsb
bound
lods
js
push
insb
mov
push
orl
cmp
inc
add
adc
add
cmp
sbb
xor
push
lret
je
xor
out
add
cmp
inc
xor
inc
les
andb
faddl
adc
adc
mov
xor
sahf
shlb
cli
lahf
dec
repnz
std
js
or
fdivs
cs
adc
mov
sub
xchg
push
xchg
cmpsl
add
in
jecxz
xchg
pusha
cld
cmp
sbb
xorl
push
jne
ret
je
mov
lock
fwait
arpl
test
imul
xor
cmc
test
in
mov
les
mov
add
dec
jle
imul
std
push
jo
pop
aas
neg
inc
inc
in
adc
fbld
add
cmp
dec
sarl
add
jne
sbb
mov
call
pusha
lds
ficoml
test
in
inc
xchg
jp
pop
cmp
push
cmp
aaa
push
subl
fcmovnb
mov
sbb
mov
adc
or
jne
xor
outsl
sub
mov
testb
jno
loopne
int
inc
adc
mov
dec
icebp
mov
notl
dec
mulb
xchg
lock
jo
loop
sub
cmp
in
pop
hlt
sub
ljmp
mov
fxch
inc
jg
jb
popl
ror
hlt
push
jp
xor
shl
mov
push
sbb
pop
xor
push
inc
and
push
icebp
or
pop
cmpsb
ret
inc
mov
sbb
cmp
imul
daa
push
push
std
push
out
daa
cs
insl
jl
repz
inc
jp
mov
sbb
das
pop
outsl
js
mov
cmpsl
and
sbb
sbb
cmp
xchg
adc
outsl
dec
jnp
dec
and
into
jg
mov
adc
push
pop
jp
lea
addr16
fistpll
xchg
test
mov
mov
inc
in
nop
sahf
pusha
aas
add
pop
push
pushf
aad
dec
sub
inc
xchg
roll
andb
movsb
pop
lods
cmp
test
aaa
stos
rorb
cmpsb
sub
cmc
cltd
sub
push
and
jg
out
scas
xlat
push
repz
mov
insl
push
jo
or
outsb
ret
mov
sub
leave
ds
cli
push
sub
or
push
mov
mov
lret
ret
cli
lods
push
lods
jo
cwtl
das
dec
hlt
mov
mov
cmp
jmp
mov
imul
cmpsb
sub
outsb
xchg
sub
mov
cmpsb
sbb
pusha
sbb
push
cmp
lcall
adc
mov
add
mov
mov
jns
mov
inc
sti
imul
pushl
xchg
push
stc
pop
add
sbb
cmp
pushf
aas
push
mov
add
inc
in
lds
sbb
outsl
sti
pop
cmp
inc
loope
in
inc
xchg
stc
aad
push
addb
sbb
mov
pushf
adcb
jg
ret
jbe
pop
xor
jae
movsb
dec
ficompl
arpl
aaa
cmp
test
scas
cmp
call
adc
lock
aam
and
pop
ljmp
sbb
jae
add
and
fwait
cmp
es
lret
outsl
jmp
cs
shll
mov
mov
lcall
repnz
jne
fistl
out
jo
xchg
jnp
loop
xor
aad
in
leave
xchg
call
sti
add
push
push
out
mov
cld
sub
mov
in
cmp
popf
lcall
pop
pop
enter
or
clc
cmp
jg
mov
mov
test
pop
xchg
sub
mov
xor
mov
jl
es
jae
or
adc
aam
cmp
dec
gs
repz
ljmp
pop
mov
push
mov
jg
push
fwait
popa
pop
and
mov
dec
insb
out
sarl
fiadds
das
cmpb
daa
xor
push
xchg
call
add
push
add
mov
idivb
mov
sub
pop
js
sbb
add
push
push
mov
stos
ja
outsb
lcall
lret
push
bound
loopnew
mov
ret
cmp
mov
mov
repz
popf
sar
xchg
std
outsb
imul
xor
hlt
imull
push
test
or
fsubrl
cmp
mov
mov
movsl
inc
movsb
mov
xor
push
mov
jb
add
outsl
push
cld
mov
mov
xchg
mov
and
pop
andb
mov
jg
popa
and
sbb
add
movsl
enter
cmp
mov
int3
stos
sub
mov
in
mov
call
lock
fstl
sti
cltd
jge
movsb
jp
pop
push
mov
outsl
xchg
std
mov
int
out
aam
data16
or
cmp
repz
xor
rcrb
js
jecxz
xchg
pop
or
clc
sub
adc
mov
xor
sub
pop
xor
sbb
jmp
dec
xchg
mov
mov
dec
add
mov
in
lcall
adc
ljmp
les
loopne
dec
mov
das
xchg
and
aas
xchg
cld
lds
inc
pop
lcall
cli
xchg
adc
push
imul
ds
and
sub
jmp
es
ljmp
adc
popa
add
fcmovu
cmpsl
fcomps
cmc
test
aad
mov
mov
std
mov
test
mov
outsb
nop
xor
pop
call
mov
or
fmuls
xchg
push
and
sub
popf
push
jg
addr16
out
imul
jae
xor
lea
sub
mov
xchg
ds
or
xor
push
fadd
sub
and
sub
and
sbb
sub
adc
pop
aam
sbb
jbe
mov
cmpsl
or
mov
jmp
hlt
and
cmp
inc
out
movsl
popa
xchg
mov
mov
es
test
push
cli
lock
push
cmc
fisttpll
sub
push
into
lret
loopne
and
cld
shl
out
inc
adc
dec
jmp
xor
pop
cmc
sbb
pop
std
pop
adc
xor
cwtl
or
dec
jecxz
sbb
fmull
and
jns
sub
sub
add
xchg
fwait
sbb
xor
mov
push
jns
lds
test
xor
out
insb
ja
push
sbb
bnd
mov
sbb
shlb
xchg
in
cs
sbb
int
inc
mov
cld
lret
and
or
movsl
adc
and
rclb
aas
fs
outsb
jl
addl
add
dec
fwait
mov
outsb
xchg
fdiv
outsb
dec
xchg
mov
fmulp
push
icebp
xor
xchg
xchg
mov
xor
jp
sbbb
lods
xorb
or
mov
push
cmp
es
jne
jmp
stos
push
adc
adcb
insl
xor
xor
xchg
cmpsb
mov
pop
dec
test
sbb
sub
xor
adc
js
arpl
mov
or
movsl
in
mov
push
push
cmc
and
adc
xchg
or
data16
xor
xor
lret
das
iret
dec
nop
popa
test
fwait
aas
xchg
in
jnp
mov
jmp
or
sub
cmp
dec
push
xchg
adcl
push
sub
and
int3
sbb
xor
sub
lods
xor
mov
jo
lahf
insl
jl
pop
xchg
les
mov
or
sbb
test
outsl
inc
inc
test
pop
inc
js
fildll
in
mov
or
and
lret
inc
imul
insl
cmp
jnp
imul
sub
push
movsl
in
mov
jno
push
lcall
stos
dec
out
and
shl
ficoml
gs
mov
cmp
rorb
es
stc
icebp
outsl
cmc
inc
jmp
pusha
repz
daa
fs
nop
pop
loop
push
imul
xor
mov
insl
adc
adc
shl
lock
ss
rolb
aam
scas
mov
shrb
adc
jne
dec
dec
scas
mov
movsb
mov
mov
dec
xor
jns
push
shrb
and
adc
movsb
lock
lret
pop
pop
adc
jne
pop
add
and
les
sub
and
stos
mov
shll
int3
test
xor
inc
adc
aaa
fwait
sub
xor
jns
in
mov
in
dec
rcll
insl
xchg
xchg
cmpsl
insb
jnp
jg
push
stos
mov
push
jno
out
into
scas
out
mov
fnstsw
add
xchg
shl
js
mov
jg
cwtl
xor
xor
add
notl
mov
cmpsb
cltd
imul
out
jle
or
xor
xchg
loopw
xchg
arpl
enter
xchg
or
xor
in
jns
imul
xlat
pop
mov
push
xchg
aas
adc
xor
jne
push
cmpsl
mov
mov
push
jbe
lds
sub
test
sbb
push
sbbb
push
or
call
push
jns
cli
fcoms
data16
lret
dec
xchg
or
sbb
arpl
push
mov
sub
out
mov
cwtl
stos
pop
jno
pop
leave
mov
movsb
inc
push
test
imul
jb
lods
add
fwait
and
out
in
shlb
out
lock
test
jmp
out
das
mov
daa
push
insl
popf
inc
adc
test
sub
rcr
in
push
gs
xchg
xchg
jl
sub
je
mov
lcall
insl
pop
fsts
lods
adc
je
xor
movsb
inc
jns
in
sub
fnstenv
mov
repz
dec
lock
add
arpl
inc
fmulp
or
mov
push
shlb
add
mov
sub
jbe
add
add
add
call
inc
shlb
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
faddl
jbe
lock
fstpl
bound
fsubr
lea
sub
lock
es
fsts
sub
xchg
imul
stos
sub
scas
and
in
pop
aas
xchg
push
jmp
fsubrl
ljmp
es
and
into
pop
test
insb
jns
in
cmp
outsl
sub
xor
movsl
aaa
outsl
xchg
inc
and
mov
sbb
sbb
inc
and
mov
adc
fdivrl
andb
je
rorl
insb
pop
add
popf
push
repnz
pop
or
push
inc
adc
enter
in
xor
ret
mov
push
sub
or
incb
ljmp
mov
push
fnstenv
aad
cwtl
inc
xchg
mov
rclb
js
imul
sbb
in
mov
add
dec
ja
insb
leave
test
stc
jl
inc
fidivl
mov
fcoml
inc
mov
jecxz
pop
js
outsl
sbb
aas
sub
addl
cld
clc
test
mov
jne
inc
imul
adcl
fidivs
xchg
pop
jno
shlb
fs
xchg
ret
xlat
jne
loopne
shl
imul
and
imul
or
pop
xchg
test
jg
jns
xchg
insb
adc
cmp
sti
int
cmp
popf
ss
mov
sbb
daa
jmp
jmp
fisubl
and
pop
xchg
inc
cwtl
push
test
add
jnp
or
inc
xlat
into
jp
push
dec
ss
dec
aam
mov
pop
jo
out
sarb
lret
dec
mov
xchg
out
cli
cmp
inc
std
adc
nop
mov
call
add
clc
inc
inc
jnp
add
fnstsw
cmp
enter
cmp
xorb
push
lods
pop
shl
push
adcb
scas
or
imul
jle
xchg
mov
adc
rcl
sbb
in
pop
fdivr
outsl
pop
mov
mov
in
mov
dec
js
jl
inc
imul
or
sbb
sub
lods
out
adc
test
jl
mov
jl
divl
pmuludq
mov
test
xchg
pop
add
in
nop
push
addr16
dec
push
pop
and
mov
scas
inc
dec
jns
mov
int
subl
pop
mov
push
jge
loope
stc
fisttps
nop
enter
fmuls
sub
inc
lcall
or
jmp
loopne
nop
in
push
lea
inc
mov
jg
js
scas
xchg
out
jbe
stos
shll
push
es
sub
mov
insl
mov
pop
and
fcomps
int3
sbb
jmp
xchg
ss
jecxz
mov
inc
push
test
sbb
cltd
ret
in
xchg
es
pop
sbb
paddq
mov
fdivrs
jmp
out
daa
and
in
pop
mov
cmpsb
jno
mov
pop
cmp
and
arpl
hlt
jae
lods
or
es
jmp
popa
adc
lahf
mov
dec
xchg
dec
insb
jnp
loop
inc
pop
sub
mov
mov
xor
cmp
jno
cwtl
lods
mov
sub
ds
cmp
xchg
fisttps
jecxz
push
fcomps
dec
in
jl
in
jge
imul
inc
in
fnstsw
push
outsb
mov
pop
fbld
out
jp
faddl
lcall
fidivrs
push
cmp
push
fisttpl
jecxz
lahf
test
gs
and
lcall
inc
mov
in
movsb
mov
lret
jle
pushf
inc
imul
mov
mov
lods
jg
movsl
jne
jmp
dec
loopne
mov
add
imulb
cmp
push
xchg
jne
fwait
adc
fistps
adc
sbb
pop
inc
mov
pop
xchg
fmulp
pop
pop
mov
inc
dec
cmp
mov
jnp
cs
ja
fistl
fstl
mov
add
mov
into
andl
xor
es
or
sbb
mov
lods
pop
out
adc
stc
loope
cmp
test
ficoml
or
cmp
movsl
adcl
mov
sbb
fisubrs
pusha
aam
sub
jb
lea
mov
mov
sbb
and
ja
imul
addb
stos
push
or
xor
push
maxps
inc
and
bound
adc
jmp
pop
ljmp
addr16
adc
and
aad
mov
sub
stc
movsb
popf
mov
mov
or
sahf
das
out
adc
sbb
cmp
cmc
mov
push
test
mov
push
ffreep
mov
cmpsl
fisttps
call
xchg
xchg
cmp
sbb
js
out
daa
dec
xchg
loopne
adc
pop
ja
aam
adc
popf
test
mov
je
dec
stos
loop
jb
xor
in
imul
sub
add
arpl
test
arpl
jle
adc
shr
outsb
fmuls
sbb
or
push
scas
xchg
and
out
xchg
dec
push
movsb
iret
mov
pushf
dec
pusha
aad
shr
push
loope
std
adc
stos
fidivl
mov
xchg
insb
loope
test
aaa
sub
mov
sbb
js
cmp
shll
add
repz
lods
fnstenv
jae
mov
imul
xor
adc
ljmp
jg
add
pusha
fmulp
add
pushl
jp
jl
ds
jo
test
movsl
cli
leave
inc
inc
cmpsb
mov
cmp
sub
cli
xchg
and
cmp
pop
in
insl
lahf
repnz
js
mov
in
mov
push
insl
aam
outsb
cmc
mov
shrl
scas
test
mov
data16
lret
outsl
pop
out
jg
sahf
dec
mov
std
fwait
cmc
cli
mov
bound
fld
int
jge
jp,pn
sti
icebp
out
sbb
mov
cmp
and
popa
inc
fildll
movsb
xor
fwait
cld
jnp
icebp
outsl
js
movl
fisttpll
xchg
inc
loopne
mov
ja
ret
leave
test
out
inc
mov
std
sub
add
mulb
adc
inc
add
rolb
rcrl
push
sbb
out
sub
gs
cmp
push
dec
scas
push
push
push
mov
and
fadds
inc
cmp
push
int3
sbb
push
movsl
push
xchg
adc
lcall
xor
imul
out
imul
ret
ja
cld
mov
pusha
int3
lcall
mov
xchg
pop
and
mov
scas
mull
xor
lahf
inc
sbb
xchg
out
dec
js
rclb
sbb
pop
sbb
inc
dec
divl
xchg
inc
jmp
mov
ja
jg
xchg
push
stos
sbb
xor
iret
pushf
push
mov
mov
inc
int3
mov
mov
out
test
stos
shl
out
mov
xlat
push
mov
or
lock
and
jmp
and
mov
cmp
xor
jne
adc
mov
mov
mov
inc
fcomi
lret
adc
pop
fwait
or
lods
dec
aas
fsubrs
cli
sbb
add
hlt
inc
inc
pushf
test
pop
fbld
push
jl
imul
out
ljmp
sbb
xchg
push
sahf
pop
clc
pushf
orb
outsl
or
mov
enter
sub
jno
push
les
iret
mov
mov
xchg
dec
mov
mov
arpl
lea
outsb
push
jbe
subl
jmp
mov
mov
es
cmovne
sub
jbe
filds
je
push
movsl
xchg
ljmp
insl
pop
dec
jecxz
movsl
xchg
or
sbb
xchg
or
xchg
popa
bound
call
sub
outsb
mov
or
cmp
data16
fldl
inc
fwait
mov
adc
dec
mov
lods
cmp
out
xchg
icebp
rcrl
mov
dec
cld
in
lock
pop
mov
lds
jecxz
loopne
jl
or
xor
inc
add
in
fs
cmp
mov
popa
neg
sub
inc
es
out
sahf
mov
mulb
push
fwait
pop
js
fsubr
jb
pushf
xchg
xchg
and
push
xor
outsb
push
xor
xor
xor
pop
push
call
insb
cmp
jmp
cmpsl
xchg
sarl
mov
ds
test
pop
lods
les
movsb
scas
mov
icebp
shr
lods
cmc
imulb
cmp
data16
sarl
xchg
sbb
mov
inc
jmp
jp
mov
cmp
fadd
into
outsl
push
pop
pop
jae
js
mov
push
lock
fwait
out
jnp
sarb
jmp
movsb
jmp
enter
add
push
std
shll
mov
out
icebp
in
dec
mov
les
mov
cmp
std
add
add
cs
cmc
cli
dec
mulb
stos
out
in
push
jg
arpl
pop
push
jl
and
push
xchg
sub
inc
dec
adc
and
movb
clc
push
push
test
xchg
sub
inc
clc
cmp
loope
jnp
fs
adc
xchg
sub
imul
mov
xchg
pusha
lahf
int3
int
mov
das
sub
test
test
jge
xor
push
in
jae
mov
xchg
pop
inc
inc
push
inc
jns
je
jns
adc
jo
sub
ja
cmp
mov
and
and
enter
mov
lahf
jb
rol
pop
iret
mov
xlat
jns
mov
ja
nop
cmp
xor
js
loope
hlt
adc
dec
fdivrs
into
out
mov
mov
xor
xchg
les
cwtl
stos
bound
hlt
aad
pop
adc
fwait
adc
mov
in
dec
aaa
sti
in
movsl
mov
xchg
and
jo
cmp
pop
sub
int
jl
neg
test
pop
or
and
mov
out
fwait
sub
mov
xchg
mov
mov
cmp
es
pop
adc
mov
sahf
or
imul
aas
movsb
or
xor
out
cld
dec
push
in
pusha
outsb
add
mov
or
push
jbe
push
dec
xchg
inc
rorb
push
inc
in
push
push
jbe
and
lcall
inc
mov
cmpps
popf
mov
orb
jae
pop
mov
pop
jne
pop
insl
inc
mov
gs
or
je
or
inc
dec
repz
mov
rol
jae
adc
popf
xchg
je
jbe
mov
movsl
push
aad
or
dec
cmp
imul
test
mov
repz
loop
adc
in
dec
popf
xchg
dec
dec
inc
lock
xchg
mov
out
fcoms
or
push
lret
lods
dec
je
push
jb
jp
or
jp
outsl
aaa
js
xchg
or
andb
cmpsl
in
and
vcvtps2pd
xchg
outsl
lods
out
push
aaa
jnp
lret
lret
popa
push
ss
xor
pop
cs
jmp
xlat
cmp
fwait
xor
cmp
mov
cmp
jns
pop
mull
push
out
movsl
enter
outsl
push
mov
fbstp
in
mov
insb
jg
daa
and
adc
in
aad
add
mov
fidivrs
dec
shrl
movsl
popa
dec
adc
inc
sub
pusha
dec
dec
stos
ljmp
stos
ret
dec
bnd
out
mov
push
add
jae
mov
je
cmpsl
jge
in
cwtl
in
mov
lds
lahf
ss
mul
out
sbb
push
xor
pushf
pop
test
sarb
in
negl
test
in
lds
in
push
jmp
mov
scas
add
popl
sarl
popa
add
dec
push
inc
or
lods
es
andl
bound
mov
sub
jbe
add
js
iret
scas
xchg
gs
add
push
movsl
addr16
loop
pop
adc
xchg
scas
lcall
cs
data16
shrl
idivb
mov
stos
fdivrl
adc
jne
pop
add
jle
imul
or
sbb
cmp
jns
pop
dec
sbb
cs
test
enter
fs
lahf
sub
leave
push
xchg
mov
mov
lret
xlat
loop
andb
ret
insb
je
dec
xchg
pop
mov
push
imul
cmp
push
ret
ja
sti
fidivrs
sarb
jns
sub
pop
rorb
sub
movsb
pop
cltd
add
jo
mov
addr16
stos
leave
aas
adc
mov
jmp
sbb
cmp
pop
push
jle
cmp
lahf
cwtl
ret
inc
mov
lods
stc
add
sarb
push
push
scas
andl
mov
push
lcall
out
js
cmc
jae
adc
mov
mov
scas
out
inc
add
jp
ror
push
pop
ficompl
dec
add
xchg
sbb
out
jnp
dec
sbb
add
ficompl
fldenv
data16
mov
mov
daa
insb
cmp
and
dec
aad
xor
js
movsb
xchg
adc
add
mov
inc
pop
loop
sbb
sbb
pmaddwd
pop
cmp
clc
and
test
out
sbb
adc
mov
gs
dec
out
inc
popf
jne
dec
pop
ret
sti
mov
and
lea
popa
in
mov
add
out
ret
mov
in
pop
outsb
or
rcr
cmp
mov
and
lret
call
fbstp
out
mov
dec
out
sahf
imul
xchg
into
jbe
movsl
adc
in
not
rcrb
enter
test
and
arpl
orb
stc
jecxz
adc
cmp
push
pop
testb
shrl
fwait
push
cmp
daa
iret
push
fstl
lods
xchg
out
dec
mov
std
push
jbe
fs
scas
das
xor
mov
rep
pop
push
repz
jno
push
inc
mov
sub
daa
and
std
daa
add
add
pushf
xchg
mov
loopne
pop
pushf
jmp
sbb
xchg
mov
iret
jb
imul
mov
jbe
jb
mov
js
ds
jl
adc
pop
xorb
rcrb
mov
in
into
xor
or
xor
inc
and
repz
out
push
push
sub
stos
cmp
jnp
push
call
xlat
jg
dec
xchg
out
push
mov
movsb
cmp
push
sbb
ljmp
ret
lret
mov
pop
and
mov
int3
pop
jo
xor
jecxz
int
enter
push
push
mov
mov
fwait
jo
jno
sub
fcoms
sahf
pop
cmpsb
lahf
repnz
or
sbb
mov
jg
push
push
int3
stc
xor
stos
jge
fimuls
cld
in
inc
cltd
push
jne
add
inc
adc
jp
mov
add
int
mov
add
adc
fnstcw
sbb
imull
adc
push
sub
xor
ret
call
mov
pop
pop
subb
mov
mov
mov
push
pushf
or
push
int3
and
les
fwait
sub
and
and
lods
lea
sub
lcall
andl
hlt
push
push
dec
or
pushf
pushf
cltd
push
loope
loopne
test
jp
ss
mov
pop
xlat
arpl
adc
idiv
pop
add
jg
or
arpl
imul
cmp
cmp
dec
push
in
mov
ljmp
or
enter
dec
movsb
hlt
xchg
ljmp
xor
or
bound
ss
scas
iret
adc
add
or
sub
sub
mov
xchg
jmp
add
ror
or
pushf
and
or
in
or
notb
push
mov
add
loope
stc
inc
loopne
adcb
and
inc
push
mov
sahf
push
xchg
lea
testl
arpl
mov
or
lds
stos
nop
cmpsb
jae
stos
sub
repz
mov
pop
loopne
mov
repz
cmp
sbb
lock
xchg
insb
add
movsl
push
mov
jns
inc
mov
mov
xlat
lret
js
mov
lcall
mov
sbb
mov
add
mov
push
dec
push
lret
xchg
push
inc
mov
push
nop
xchg
pop
push
call
mov
or
imul
xchg
test
xchg
xchg
add
jbe
mov
lret
int
jbe
lea
icebp
ds
pushl
aam
enter
cmpsl
or
pop
pop
fwait
add
mov
aad
test
fbstp
mull
xlat
adc
push
xchg
and
int3
mov
cmp
in
mov
pop
sub
add
and
loop
push
aas
testb
push
stos
jl
inc
insb
jae
pushf
xchg
in
add
xchg
nop
cmp
in
out
or
xchg
je
push
sarb
mov
inc
cmp
fstpt
insb
repz
xchg
jb
rol
pop
jge
sub
les
mov
and
lods
movsb
mov
enter
dec
pop
jg
hlt
pop
add
lds
cli
inc
mov
into
pop
mov
movsb
imul
loop
dec
mov
sbb
roll
mov
jmp
movsb
xchg
sahf
xor
std
int
mov
mov
xor
push
repnz
jbe
pop
jmp
ss
xor
push
pushf
in
fs
pusha
pop
xor
and
les
aaa
fs
mov
cli
shrd
mov
cmp
stos
push
stos
pusha
push
push
cmp
je
jle
inc
mov
dec
or
cs
inc
xor
lea
inc
dec
jmp
push
mov
pop
loope
mov
xchg
stos
pop
in
sub
push
arpl
movsl
out
mov
add
stos
das
xchg
dec
pop
std
jo
insl
mov
add
adc
loopne
fcom
insb
or
xor
clc
in
subl
inc
dec
pop
and
push
xlat
or
les
inc
and
lods
stos
bnd
sub
shrb
outsl
lock
adc
sbb
scas
push
xchg
imul
sub
cltd
loop
pause
push
add
pop
stos
jge
pop
xorb
test
mov
jnp
bound
sarb
sub
or
or
in
dec
mov
lods
xor
xchg
js
inc
adc
test
orl
stc
ss
ret
or
pusha
xchg
mov
inc
shlb
mov
pop
gs
stos
loop
pop
xchg
mov
fs
js
out
daa
sbb
inc
xor
lock
xlat
outsb
test
sub
in
aaa
jo
loope
dec
in
sbb
dec
add
jecxz
loop
xchg
jne
cld
jne
sbb
sarb
jb
jne
ss
sbb
shrb
cmpsb
gs
mov
cs
or
cmpsl
cli
lds
repnz
push
movsl
push
fidivs
in
add
mov
push
call
xchg
out
adc
outsl
insl
leave
jp
in
shrl
inc
add
ret
mov
mov
xor
jmp
movsb
push
andb
dec
or
mov
jbe
cmp
push
daa
mov
lds
pop
pop
clc
mov
imul
shl
jo
dec
xchg
gs
addl
pop
test
dec
adc
cmpsl
ja
push
xor
loopne
les
lret
add
fadd
ret
dec
inc
stos
fisttpl
cli
push
or
add
sbb
imul
popa
xchg
pusha
int
mull
push
ret
or
or
imull
push
imul
dec
xor
les
sbbb
int3
xchg
fs
decb
or
pop
xchg
dec
jb
addr16
push
push
jb
arpl
jmp
sub
popf
loopne
add
fdivrs
xchg
push
mov
jg
xchg
jo
jecxz
add
orb
cmp
mov
iret
inc
or
movsl
stos
or
nop
ja
jo
subb
cmpl
and
int3
cld
ds
dec
push
sbb
jg
inc
je
pop
loopne
xchg
idivb
movsb
shlb
scas
int
test
repnz
int3
fdivp
lahf
sbb
add
sti
lock
dec
outsl
xor
dec
inc
insb
mov
lods
ficompl
leave
cmp
sahf
out
leave
fadds
nop
jecxz
popf
sbb
fisubrs
out
and
fisttpll
iret
mov
jo
mov
mov
fs
stos
lret
dec
or
or
xchg
rcrl
push
pushf
scas
inc
xor
int
inc
inc
rorb
in
ret
pop
movsb
or
push
addr16
stos
leave
outsl
pop
pop
adc
push
test
fs
adc
insl
fistpll
adc
shll
rcl
or
loop
lods
or
daa
push
sbb
xchg
push
mov
int3
stc
push
mov
pmaxsw
xchg
xchg
sbb
mov
repnz
xchg
dec
fcoms
inc
cs
cmp
les
std
into
sub
mov
mov
jnp
push
aam
cld
add
push
int3
add
mov
stc
jae
test
data16
cmpsb
xchg
add
dec
push
xor
push
jmp
xor
xlat
push
mov
das
mov
loop
cmc
bound
sub
inc
mov
lret
popf
add
adc
adc
lods
xchg
jo
repz
mulb
cmpsl
mov
cmpsb
mov
stos
hlt
push
push
cmp
xchg
dec
es
push
cmp
and
arpl
xor
je
jle
aad
sti
in
nop
ljmp
lea
ljmp
add
std
jno
ficompl
xchg
insl
or
imul
jmp
push
or
sub
loop
int3
push
or
inc
jle
dec
pop
mov
dec
mov
outsl
xchg
pop
push
mov
imul
ss
lcall
pop
push
jge
push
pop
out
mov
push
lea
inc
or
mov
xchg
xchg
inc
cwtl
sbb
lcall
jo
dec
pushf
addr16
mov
cltd
inc
push
into
lock
xchg
movl
inc
orl
sbb
sub
ja
dec
fiadds
push
repz
pop
jo
sahf
fisubs
lcall
xchg
sbb
xor
adc
insb
push
push
xor
das
add
inc
cmp
pop
enter
or
sub
shrl
push
dec
inc
jle
push
mov
jbe
mov
pop
jle
jge
loopne
out
mov
and
lret
addr16
cmpb
push
setg
dec
mov
cld
xchg
aas
pusha
jecxz
fs
loopne
xchg
scas
mov
xor
clc
data16
dec
adc
lret
out
into
ljmp
xchg
popf
pusha
rcrb
data16
cs
mov
or
xor
push
ljmp
push
popa
xlat
sbb
and
fwait
xor
mov
or
sbb
movsl
add
shlb
inc
and
push
out
sub
mov
cmp
inc
adc
out
push
dec
es
mov
jae
cmp
data16
dec
adc
dec
das
xor
push
roll
adc
jno
jecxz
jnp
mov
rolb
lea
pop
xchg
nop
xor
fadd
enter
in
pop
pop
add
mov
movd
subb
flds
test
test
bound
std
cmpsl
rclb
lahf
xor
mov
cwtl
push
cmp
std
dec
mov
sar
decl
outsb
sbb
xchg
inc
and
cltd
cmc
xor
pop
in
xor
mov
push
adc
loopne
pop
cli
dec
dec
pop
xlat
cs
loop
shll
cmpsl
dec
aad
mov
mov
dec
sub
stos
jb
xchg
jmp
std
sub
insl
scas
mov
pop
sbb
enter
xchg
mov
cmpsl
mov
je
fnstcw
xor
inc
ror
fwait
mov
mov
loope
hlt
fimuls
push
test
arpl
notb
in
cmp
rcr
divl
lods
lahf
lods
jp
adc
in
mov
xchg
test
ds
mov
repz
nop
shlb
addr16
outsl
mov
push
notl
icebp
jnp
mov
mov
outsl
jmp
lea
aas
js
ret
mov
ljmp
dec
orl
mov
push
mov
pusha
icebp
mov
add
pushf
mov
or
adc
xor
enter
xor
dec
addr16
xchg
mov
jno
adc
lock
insl
inc
sub
stos
int
xchg
adc
push
js
stc
push
adc
jns
xchg
xor
or
sub
or
lods
test
xchg
cmpsb
jno
mov
fstps
inc
mov
aam
add
lds
inc
repnz
les
mov
ja
jp
sub
sbb
mov
adcl
test
dec
dec
xor
cmp
xor
xor
sbb
sbb
hlt
xor
mov
and
sbb
adc
je
imul
jno
fildll
mov
cs
shl
cmp
mull
stos
or
cmp
xchg
push
das
es
dec
in
das
push
pop
xor
daa
and
push
subb
push
js
push
lret
push
inc
dec
stos
scas
cmp
dec
faddl
jb
mov
icebp
aad
out
xchg
lahf
xor
lods
add
jmp
popf
sti
in
jecxz
dec
ds
loop
je
pop
scas
dec
mov
fnstenv
jge
ret
insb
popl
test
pop
adc
or
icebp
cmc
inc
cmpsl
leave
sbb
out
pop
int3
fsubrs
push
cmp
xchg
iret
xchg
js
inc
stos
xor
mov
das
dec
jecxz
das
jl
pop
xor
pop
andb
adc
dec
repz
out
sbb
in
imul
sub
sbb
aam
dec
loop
jns
insb
enter
xchg
ds
cmp
imul
pop
nop
xor
movsb
scas
fs
adc
cmc
jns
movb
jl
sbb
jp
push
push
push
pmulhuw
xor
dec
sysexit
jns
aam
jnp
mov
add
jbe
adc
xchg
mov
std
xchg
insb
lcall
jge
xchg
mov
fidivrl
adcb
xor
bound
mov
clc
mov
imul
mov
pop
test
aas
iret
fistps
popa
sbb
jb
or
movsl
test
add
hlt
repz
adc
ficomps
fnstsw
or
fistpl
out
sbb
mov
or
cltd
imul
or
lret
fisubl
cli
out
pushf
jnp
push
int
insl
adc
jb
pop
and
pusha
aas
dec
movsl
jne
jns
lods
pop
sub
mov
adc
inc
jns
or
mov
data16
cmc
out
flds
jge
add
dec
adc
adc
flds
test
and
mov
mov
mov
pusha
xor
and
adcl
fs
fldt
sbb
mov
pop
xor
jecxz
cltd
jno
add
jns
cltd
mov
adc
in
jae
fistpl
jl
push
popf
cmc
jns
lahf
dec
outsb
aam
test
pusha
shl
in
cmpsb
xchg
or
fcmovnbe
mov
inc
fiadds
daa
leave
icebp
mov
xor
movsl
scas
or
xor
sbb
aam
and
shrb
stos
push
movsl
cmpsl
pop
mov
sub
pop
fstpl
cmc
dec
lods
pop
mov
jle
ret
ja
sub
sbb
mov
or
push
scas
sbb
cmpsl
orb
loop
leave
sbb
sbb
out
xchg
subl
adc
mov
fsubp
or
out
cmp
adc
mov
xchg
outsl
cmp
insl
fistpl
dec
mov
jae
imul
js
cmp
mov
mov
ds
xor
mov
adc
mov
repnz
mov
pop
pop
mov
or
cli
jnp
icebp
in
pushf
jno
xor
shlb
jno
in
mov
lahf
push
and
mov
mov
push
inc
fwait
rclb
pop
mov
pop
out
in
xor
or
add
movsb
cld
jle
pop
cmp
mov
hlt
cwtl
not
and
gs
adc
test
ljmp
sub
mov
pusha
xchg
mov
sbb
movsl
add
xor
push
scas
mov
mov
adc
fst
push
mov
inc
out
mov
xchg
add
scas
stos
jnp
js
stos
sbb
pusha
into
dec
sbbb
mov
jge
jle
sahf
bound
sbb
mov
ja
pop
fdivr
mov
lcall
jne
mov
push
mov
fidivl
ret
out
les
icebp
lods
out
fisubrl
repnz
add
push
xor
sbb
sbb
outsl
pop
fsubrp
xor
add
pop
dec
and
inc
nop
lea
inc
dec
cmp
pushf
sti
push
push
mov
lahf
popf
insl
push
push
dec
pop
ret
mov
in
out
pop
adcb
mov
mov
pop
pop
lea
bound
adc
sub
push
insb
xor
fstps
ds
jecxz
addr16
adc
mov
pop
sarl
cmp
out
mov
fs
movl
shrb
or
inc
filds
push
cmp
stos
test
inc
push
enter
in
jmp
js
sarb
mov
mov
pushf
jns
aad
xchg
pop
loop
gs
jno
adc
lret
es
aaa
sub
push
sbb
or
aaa
lds
and
lods
mov
lods
mov
push
es
mov
test
fs
loopne
testb
lods
test
cmp
mov
iret
add
out
imul
push
inc
inc
and
ds
test
popw
cmp
push
inc
test
pusha
push
and
stos
jmp
cmp
dec
mov
jl
or
push
nop
xchg
or
cmp
testl
inc
xchg
stc
or
test
in
xchg
push
mov
mov
adc
outsl
add
mov
outsb
inc
lret
outsl
rclb
ss
xchg
xchg
mov
popf
pop
sbb
pop
xor
xor
lods
inc
aas
pop
inc
cmpl
xchg
add
dec
mov
mov
aam
add
push
cmp
push
cwtl
aaa
push
test
adc
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
and
cmp
adc
bound
xchg
jns
push
add
faddl
mov
bound
fwait
add
sbb
hlt
out
popf
and
cmp
pop
in
mov
mov
add
ds
push
add
cmpsb
mov
fcomp
cmc
sub
mul
in
loopne
lcall
outsl
into
scas
stos
mov
push
ds
mov
loope
aad
inc
and
pop
sub
ret
in
std
imul
add
jecxz
sub
cwtl
imul
mov
sti
or
lods
mov
lea
mov
xchg
sub
femms
fdivl
in
test
xor
rorb
mov
sub
rolb
fnstenv
aad
fldenv
imul
inc
adc
jb
jle
ficomps
idivl
lahf
and
repz
push
jnp
sti
sub
iret
mov
popa
int3
lods
imul
test
sub
out
xchg
adc
clc
rolb
xor
mov
insb
cmpsl
pop
lahf
mov
mov
or
add
xorl
popa
jns
outsb
ss
add
push
cmp
clc
dec
addr16
mov
jl
popf
push
hlt
enter
pop
cltd
add
pop
cmp
or
cmp
sti
popa
xor
shl
inc
or
or
mov
pop
cld
ds
ficoml
mov
mov
ds
pop
mov
cvtps2pd
adc
in
sti
xchg
and
std
shll
push
mov
rcrb
movsl
fnstenv
outsl
mulb
push
and
push
in
mov
sbb
jecxz
sub
cmp
fldenv
iret
sub
popa
out
mov
fildll
sub
cmpsl
movsb
ret
jne
push
inc
mov
mov
mov
decl
lods
clc
push
mov
jmp
in
pop
stos
sub
out
mov
arpl
sub
xor
clc
and
adc
icebp
sbb
mov
and
lods
das
or
dec
cli
adcl
cmp
jbe
shlb
iret
mov
test
roll
and
xor
bound
pop
jne
in
sahf
lret
dec
cltd
jo
addr16
hlt
popf
shll
out
cmp
xlat
ljmp
and
push
es
in
fildll
imul
add
mov
js
jno
cmp
inc
pop
pop
sbb
rcrl
shl
test
xor
cld
jns
in
push
into
sub
mov
mov
or
and
mov
mov
cs
dec
pop
outsb
dec
push
pop
loope
xor
jp
or
scas
pop
add
test
sub
adc
pushf
gs
repnz
in
scas
lock
cmpsb
sarb
fsubl
test
mov
test
inc
aad
mov
shrb
fwait
push
pop
std
inc
es
xchg
pusha
xchg
ja
out
daa
pop
aas
mov
lret
in
sahf
or
xchg
pop
cltd
incl
and
mov
lods
sbb
out
mov
imul
mov
xor
jp
cmp
jge
sub
cmp
out
pop
imul
stos
mov
inc
inc
int
pop
insl
test
push
loop
lock
fs
xchg
mov
pop
mov
push
insl
clc
sub
xchg
adc
push
jb
mov
pop
iret
mov
sbb
ret
and
arpl
jbe
cmpsb
jl
adc
dec
lods
xlat
pop
push
dec
insl
mov
cmp
loope
pop
repnz
andb
cmc
and
icebp
cwtl
cmp
xor
xor
or
jge
or
out
rcrl
mov
mov
stc
sbb
rolb
pop
hlt
ljmp
pop
add
cmc
jmp
scas
cmpsl
loopne
cmp
mov
adc
into
shll
sahf
xlat
sub
daa
mov
cld
cmp
shrb
mov
xchg
pop
pop
sub
fldlg2
push
sarl
push
and
sbb
mov
mov
je
xchg
inc
sbb
jns
dec
pop
inc
daa
sub
popf
mov
pop
inc
cs
cld
or
sub
dec
push
xlat
js
inc
test
cmp
inc
fdivrs
mov
adc
dec
ret
jnp
daa
inc
xor
pop
mov
inc
out
ret
inc
gs
inc
jl
and
scas
nop
cld
jl
lods
adc
scas
iret
rep
stc
jmp
sbb
cmp
sbb
scas
push
cltd
outsl
mov
int
jp
adc
push
inc
ret
mov
test
mov
xchg
inc
jae
lds
or
inc
or
aam
mov
pop
popf
ss
mov
mov
mov
mov
int
adc
or
push
les
cmpsl
inc
jecxz
sub
sub
rol
hlt
add
inc
cld
inc
mov
mov
adc
xor
fisttps
and
lret
sahf
fwait
and
inc
clc
adc
fwait
mov
pop
mov
add
aas
jp
lea
and
jne
inc
mov
pop
pusha
add
jmp
mov
stos
or
dec
mov
lock
rorb
into
rcl
jecxz
push
ss
daa
cmc
cmpsl
ja
ret
call
xlat
rorl
pushf
in
and
cmpsl
jb
fcmovbe
or
fbstp
iret
rcl
fistpll
or
es
jae
fldenv
jmp
mov
cmp
insb
cmp
jp
dec
mov
fisubrs
in
mov
mov
add
bound
addl
push
sarl
rol
dec
repz
push
idiv
into
andl
add
xor
cmpsl
movsb
mov
sub
adc
push
xchg
push
pop
sbb
mov
jmp
adc
pop
inc
inc
sbb
repz
jo
jns
add
andl
xor
test
out
cli
movsl
adc
test
pop
lret
faddp
repnz
mov
adc
lea
add
incl
dec
jae
mov
dec
or
mov
adc
adc
adc
mov
mov
inc
push
xchg
stos
mov
je
setno
mov
lahf
mov
pop
xchg
mov
mov
mov
dec
inc
xchg
neg
insb
fwait
gs
mov
and
sahf
mov
jae
inc
jbe
cmp
jne
mov
out
icebp
jo
out
mov
shl
lds
adc
dec
mov
sbb
in
aam
inc
mov
sub
stos
mov
pop
cld
fisttpll
mov
pop
in
or
loop
xlat
fldcw
movsl
push
fwait
cmp
adc
jb
cli
jmp
jge
loopne
sub
cmp
push
sti
add
xor
lret
xchg
rorb
outsb
adc
push
adc
fnstcw
and
clc
xor
xor
inc
push
jecxz
out
shlb
jb
sti
cmpsl
mov
xchg
cmc
lods
iret
push
dec
sbbb
add
inc
lock
insl
mov
inc
scas
pushw
cmc
add
stc
std
cmp
and
cmp
mov
cld
adc
adc
cmp
mov
test
xor
dec
adc
jl
insl
and
sahf
gs
test
nop
movsb
addr16
jp
lods
sarb
out
lea
outsb
lret
adc
inc
daa
push
dec
repnz
divl
nop
sbb
sub
outsl
mov
ja
scas
push
and
push
addr16
push
push
jb,pn
imul
cld
pushf
xchg
xchg
loop
mov
test
rolb
iret
outsb
mov
add
dec
xchg
jnp
outsl
sub
jge
aam
scas
jne
inc
imul
jne
fldl
pop
xchg
sarl
add
mov
xchg
lods
ret
jle
cwtl
ljmp
call
cmp
jmp
dec
lods
pop
or
sbb
rcr
sbb
data16
mov
push
xor
dec
pop
or
dec
dec
sti
jecxz
mov
or
xor
repz
mov
outsb
and
adc
out
sub
push
inc
xor
je
adc
xor
subl
xlat
negl
bound
ljmp
mov
leave
stc
scas
pusha
sub
adc
mov
xchg
cwtl
pop
out
push
dec
mov
stc
sub
mov
mov
std
pop
sbbb
mov
xchg
es
jg
decl
faddp
mov
aad
add
xchg
cmp
call
push
cmp
outsl
mov
aaa
inc
sub
sub
push
mov
or
fnstsw
and
push
or
pop
outsl
js
lret
aam
cmp
lock
push
in
mov
int3
sti
rolb
push
pop
ror
inc
hlt
stc
adc
and
push
out
jge
movsb
inc
lcall
xor
pushf
neg
lcall
inc
pop
cmp
xor
mov
testl
insb
movsb
shrb
notl
lock
leave
push
test
mov
rcrl
adc
test
jl
xor
push
cmp
mov
adc
inc
xchg
xor
xchg
decb
js
shl
insb
in
push
cltd
cmc
out
dec
cmpsb
mov
imul
mov
mov
jmp
xor
cltd
clc
test
sbb
fistl
test
popf
out
sub
mov
sub
push
cmpsl
jnp
arpl
ret
push
popf
shrl
insb
mov
xor
jno
in
stos
icebp
mov
stc
mov
rcrl
cmpsb
sbb
cmp
aas
mov
ret
and
push
js
js
jp
out
mov
cmp
pop
popf
push
gs
sbb
push
fwait
leave
jnp
jmp
daa
es
into
xor
add
les
mov
add
pop
cwtl
stos
popa
cmp
movsb
aas
mov
aas
xchg
lcall
ss
loop
cmp
sbb
mov
and
inc
pushf
sub
dec
pop
stos
out
in
cmp
xchg
out
dec
orb
push
pop
pop
dec
sbb
fisubs
jecxz
out
cmp
add
xchg
ret
daa
out
and
inc
and
and
ja
lock
das
and
iret
pusha
pop
adc
nop
shll
mov
in
or
xchg
leave
xor
mov
scas
test
jge
xchg
cltd
pop
jge
rcl
cltd
mov
cmp
jo
push
and
fs
push
aas
lods
mov
mov
pop
lea
leave
jle
mov
insl
cmp
jmp
dec
cmp
lahf
dec
testl
sbb
dec
cmp
pop
neg
lret
jae,pn
lret
sbb
fistps
out
js
test
ficoms
bound
popl
mov
inc
or
push
sbb
xchg
xchg
iret
js
push
cwtl
cmpsl
xchg
out
js
add
mov
pop
pop
cld
mov
stc
add
xor
dec
lea
and
jns
pushf
pop
xor
mov
sub
fwait
jnp
icebp
arpl
sti
out
pop
pop
jp
fldl
cmp
fwait
ret
movsl
in
lds
mov
add
jl
mov
ljmp
add
dec
inc
in
xchg
xchg
add
adc
dec
or
xchg
pop
xchg
pop
fcompl
std
inc
out
cmpsb
ret
xlat
xchg
inc
dec
insb
adc
mov
add
test
outsb
pop
and
jne
cld
mov
in
sbb
pop
fwait
push
xlat
dec
fnstsw
loopne
mov
leave
cwtl
jg
lods
push
daa
cmc
pop
loop
sbb
jns
incb
mov
shrb
fisubrl
icebp
sbb
cltd
add
sub
jb
jae
or
mov
icebp
mov
int
out
xor
aaa
pusha
push
xor
repnz
mov
adc
das
das
mov
cmp
cmp
sub
dec
cmp
mov
outsb
sbb
xchg
sbb
ds
xchg
icebp
xchg
int3
push
fs
add
add
dec
or
repnz
mov
sub
sbb
fisttpll
sbb
pop
mov
rcr
jge
scas
hlt
xor
jg
jg
das
arpl
add
xchg
testl
pop
mov
leave
or
mov
in
inc
add
jns
mov
cmp
mov
or
cld
stos
int3
sbb
push
sub
fisubrs
dec
add
xchg
jmp
pop
xor
fstp
xchg
xor
popa
xor
fucomip
gs
das
lea
mov
xor
rolb
dec
cmp
add
add
repnz
inc
xchg
fwait
icebp
movsb
jl
insl
scas
jbe
cli
inc
dec
lahf
mov
lret
scas
inc
add
outsb
xor
mov
jnp
out
push
and
insb
test
shlb
dec
in
gs
xchg
loop
test
dec
pop
bound
mov
out
int
test
les
dec
jbe
and
cli
std
jg
mov
cmp
pop
cmp
popa
sub
jnp
adc
xchg
and
sbb
enter
mov
rcrl
jno
xchg
lods
mov
dec
xchg
ficompl
pop
sub
in
test
fisubrs
cld
sbb
fisubrs
imul
cs
xor
pop
sbb
lcall
movsb
out
fmull
test
xchg
ss
clc
in
hlt
mov
push
dec
sbb
xor
jne
ret
mov
cmp
leave
xor
cmp
xchg
inc
lods
and
xor
cltd
loope
jnp
in
xchg
and
mov
clc
ficoml
and
jge
sbb
test
xor
xchg
or
mov
or
aas
xchg
mov
imul
addl
cs
cmpsl
mov
mov
xlat
cmpsb
movsb
fisubs
xchg
lods
cmp
and
ljmp
push
arpl
vpcmpeqd
xor
or
sti
push
mov
pop
jo
sti
in
xor
jmp
dec
add
clc
mov
dec
sub
ret
outsl
push
sub
out
sbb
movsb
fs
lds
xor
add
imul
pop
or
fisttpl
inc
shrl
in
add
and
jmp
xor
add
je
mov
sarb
enter
addr16
scas
insl
test
jg
and
add
aad
push
loope
xor
sahf
jne
cmp
sub
mov
lea
clc
xchg
cmp
mov
int
pop
gs
andb
cmp
sub
leave
jne
jmp
les
dec
icebp
dec
sbb
mov
jg
sub
push
dec
dec
fwait
ss
push
add
mov
or
xor
into
ficoms
je
pop
push
cmp
lahf
outsb
out
mov
lret
add
clc
cltd
mov
leave
lds
imull
xor
mov
cli
xchg
aaa
mov
repnz
dec
lret
int
xor
idivb
ret
cmp
mov
addr16
dec
xor
std
pop
mov
fcmovnu
push
shll
jp
push
rcrb
pop
lods
mov
sbb
ficomps
mov
or
adc
ret
repz
jp
or
outsl
std
and
xchg
hlt
enter
push
or
cmp
das
xor
cmc
add
dec
ljmp
mov
pop
bound
icebp
inc
inc
pop
movsl
aad
xor
cmp
mov
inc
cmpsb
adc
xchg
jb
fisubrl
mov
lahf
outsb
fisttpl
add
sti
push
aaa
or
sbb
and
ret
stos
clc
int3
sbb
add
fcompl
and
insb
jae
lods
dec
popf
mov
scas
mov
outsb
sbb
xchg
cmp
mov
and
mov
jl
nop
in
popl
push
mov
cld
add
pop
lds
popa
pop
adc
cs
daa
pusha
cmp
dec
push
jecxz
imul
insb
movq
dec
int3
jmp
inc
mov
lods
pusha
sbb
xor
mov
sbb
fisttps
inc
sub
ret
inc
push
push
or
into
out
or
xor
and
in
xchg
sub
xchg
sbb
cmp
ret
stos
ja
and
jb
adc
sbb
or
outsl
cltd
cltd
add
xlat
jo
add
push
xchg
mov
push
je
addl
inc
jmp
jno
in
xchg
xor
mov
mov
xor
jmp
inc
mov
push
fcomps
adc
ret
xor
sar
sahf
sub
mov
ljmp
ljmp
testb
call
dec
in
mov
adc
mov
cmpsl
mov
cmpsb
push
test
aam
sub
add
jmp
pop
int
mov
jg
sub
xor
out
out
push
loop
fs
pop
mov
dec
mov
ds
je
cmp
pushf
push
enter
jbe
jl
add
or
lret
test
out
shrl
rcll
cmp
and
jno
add
int
imul
cli
jns
lds
lds
adc
bnd
enter
xor
pop
sbb
lcall
sti
ret
xor
adc
mov
loope
jecxz
scas
adc
add
rep
jg
mov
mov
xchg
fxch
fucomip
dec
add
nop
cmp
pop
xor
cmp
enter
pop
mov
adc
dec
push
mov
adc
xchg
xor
test
push
xor
and
sbb
inc
xchg
in
repz
pop
int3
and
js
movsl
mov
dec
jb,pt
js
add
sbb
or
mov
mov
xchg
lcall
out
cmp
lds
test
daa
dec
mov
pop
and
loope
out
loope
mov
shll
aaa
sbbl
repz
xchg
xor
and
lret
push
call
iret
mov
cmpsl
cmp
out
push
or
ja
cmp
ret
or
add
and
sub
jbe
adc
xchg
out
test
xchg
add
pop
cmp
jnp
outsl
jp
std
stos
leave
jmp
ja
sar
xchg
ds
pop
mov
leave
mov
rorl
lret
aam
push
adc
fistps
daa
mov
movzwl
lods
cltd
int3
mov
inc
jbe
sub
imul
scas
or
inc
scas
push
mov
std
mov
sub
cmp
mov
arpl
cli
in
outsb
stos
xchg
sub
imul
sbb
add
pop
cmp
jo
inc
js
aas
mov
imul
sub
inc
pop
popa
cmp
sbb
testb
nop
jmp
push
push
dec
and
das
cwtl
shll
mov
mov
cmpsl
or
cmpsb
or
lods
icebp
ja
incl
jmp
aaa
stc
jnp
ljmp
jg
pop
mov
lock
pop
jp
in
add
test
xchg
and
gs
fistpl
lret
mov
iret
cld
pop
jp
movl
loop
mov
xchg
dec
aad
mov
fisubrl
lds
dec
mov
lcall
mov
sti
pop
sahf
orl
pop
add
in
mov
or
popa
and
stc
pop
popf
je
sahf
cmp
push
pop
iret
outsb
xchg
or
stos
mov
mov
xor
sbb
popa
lret
push
inc
jge
add
jle
daa
cmp
add
call
cwtl
sub
pop
call
xchg
daa
sub
fildll
repz
and
mov
and
mov
xlat
adcl
scas
out
inc
and
jns
push
sub
orl
mov
add
and
add
lcall
push
sub
pop
inc
push
scas
dec
inc
and
outsl
out
pop
sub
js
lahf
icebp
fcoms
es
dec
test
xor
or
push
lods
mov
shrl
cli
aam
xchg
fdiv
in
std
pop
aas
nop
sbb
ja
in
and
cmp
mov
jle
cmp
xor
push
xchg
in
dec
add
cwtl
insb
int
pop
sub
in
lret
dec
xlat
sbb
dec
movsb
inc
xchg
jle
into
mov
dec
out
dec
pop
bsf
push
jne
or
push
add
push
lods
das
sbb
test
sbb
adc
cld
xchg
lret
fsts
enter
sub
testb
out
jae
sbb
daa
aad
add
and
push
in
into
adc
call
and
sub
arpl
test
pushf
lds
push
cmpsb
nop
jle
out
lcall
addr16
pusha
adc
cmp
icebp
imul
leave
mov
loopne
or
cmp
sahf
int3
sbb
mov
sti
xor
movsl
inc
jmp
pop
jb
fwait
push
lret
mov
pop
mov
ds
rol
adc
stc
mov
xor
repnz
fcomps
imul
inc
fdivrs
pop
xor
flds
hlt
daa
aad
cmp
test
inc
lock
add
pop
imul
test
xlat
pop
adcl
sbb
insb
pop
dec
outsb
dec
aas
sbbl
call
cmp
push
imul
jecxz
jle
push
mov
mov
sti
push
dec
push
mov
push
mov
mov
sub
out
sahf
dec
xor
lret
jmp
xor
pusha
mov
mov
ficomps
cmp
faddl
cmp
add
inc
push
iret
or
stos
mov
cmp
cmp
xchg
pusha
icebp
push
push
pop
and
mov
xchg
mov
push
xor
loope
jmp
adc
cmpsl
in
rcr
sub
inc
negb
xchg
dec
js
repz
std
outsb
push
mov
out
ss
inc
xchg
or
lcall
dec
dec
popl
pop
insl
test
ret
movsl
mov
das
lods
aam
jne
fstl
gs
jne
in
inc
out
inc
or
loope
test
imul
mov
jbe
push
dec
or
or
or
dec
in
outsl
and
mov
dec
sbb
cmpsl
aad
pop
iret
rcrb
dec
push
mov
adc
cmp
cmp
cmp
pop
mov
dec
addr16
cmpsb
push
fiaddl
jle
push
sbb
sub
xchg
pop
lret
adc
xor
push
add
mov
dec
scas
loopne
adc
popa
js
xchg
add
push
sub
mov
arpl
pop
subl
ss
cmp
int
xor
jb
lahf
mov
jnp
fcmovnb
ss
push
fs
out
push
push
div
fldcw
mov
xchg
push
dec
and
mov
mov
sbb
or
arpl
jns
rdtsc
loop
outsb
sub
out
mov
cli
stos
movsb
push
out
mov
mov
in
mov
lock
fs
push
scas
aas
dec
or
adc
lods
scas
iret
addr16
aas
enter
sub
jmp
into
je
adc
dec
ja
sub
pop
cltd
mov
pop
shll
lods
dec
repnz
sar
xchg
xor
cltd
rcrl
sbb
and
sbb
and
sub
rorl
sbb
fstpl
pop
mov
xchg
sub
idiv
sbb
je
adc
in
cmp
push
dec
iret
ja
xchg
mov
call
mov
rcl
clc
je
sti
sub
mov
mov
pop
sub
fwait
hlt
lds
mov
std
jns
aam
lock
jb
idivl
lds
cmpsb
inc
ds
lods
lea
imul
pop
xchg
les
jl
out
xchg
push
into
push
std
xchg
loop
dec
mov
in
sub
cld
xchg
mov
xchg
dec
ret
pop
loop
push
loope
inc
int
pop
push
popf
test
cmp
iret
inc
inc
jae
mov
loop
call
sti
mov
add
adc
jmp
jbe
pusha
cmp
fistl
in
popf
out
sbb
insb
inc
movsb
shl
mov
mov
push
add
call
cs
mov
xor
outsl
movsl
push
dec
or
jle
ret
xor
decl
ja
test
sub
lea
lret
xor
loopne
add
and
jg
cs
sub
rcrb
adc
scas
mov
in
add
sub
cmp
push
notl
push
mov
or
mov
lcall
test
decb
stos
outsl
jp
test
mov
adc
stc
fincstp
mov
inc
and
jge
lret
idiv
outsl
and
sbb
pop
movsl
mov
jp
mov
mov
pop
add
dec
adc
jp
add
dec
or
fcomi
xor
pop
lods
lea
in
inc
ljmp
es
lock
mov
aad
popf
notb
ja
stos
into
or
pop
mov
rcrb
lds
nop
test
mov
iret
repz
push
shld
jl
cmp
cs
out
jns
push
pop
jns
les
sti
adc
dec
mov
mov
std
aas
ret
std
sub
xor
and
or
add
popf
je
cmpl
jne
pop
clc
js
add
xor
dec
adc
dec
daa
xor
sbb
cli
or
inc
in
cmp
mov
stc
xchg
stos
outsb
jecxz
inc
out
sahf
jmp
xor
mov
insb
sbb
pushf
aaa
jmp
call
test
push
popl
loope
push
dec
fildll
mov
sub
sub
fnstsw
sub
mov
in
vpcmpgtd
shl
and
into
mov
dec
sbb
cmpsl
xchg
loop
jnp
lock
jb
sub
push
cmp
cmp
xor
shll
fcomps
pop
sub
mov
xchg
xlat
mov
jnp
daa
fisubrs
rcl
pop
icebp
add
shlb
stos
dec
mov
jo
mov
dec
pop
lock
xor
in
leave
adc
jne
push
jno
xchg
imul
lret
mov
dec
frstor
add
cmp
sarb
lea
dec
cs
add
add
mov
les
sbb
outsl
xchg
xor
fdivrl
pop
pop
xchg
cli
fbld
xchg
push
inc
lds
xor
adc
sub
sub
dec
mov
push
sbb
dec
test
iret
pop
dec
fnstcw
lcall
dec
adc
orl
cmpsl
inc
fidivl
mov
adc
dec
mov
in
push
sbb
adc
push
jg
das
sbb
addl
adc
or
push
dec
pop
or
das
mov
repnz
bound
push
xor
push
aas
or
xor
sbb
push
sbbl
jmp
roll
int
in
inc
xor
add
into
sub
jmp
insb
sarl
cmp
fildl
mov
cmp
adc
lods
sub
sbb
insl
in
and
mov
sub
aam
cmp
cs
clc
jne
inc
adc
dec
cmp
scas
jge
pop
mov
mov
pop
sahf
jne
mov
push
sbb
ljmp
dec
daa
add
into
mov
jns
xchg
mov
stos
and
aad
pop
scas
mov
test
into
xlat
int
insb
jbe
idivl
cmp
push
mov
iret
sub
cmp
ficoms
data16
mov
mov
dec
in
add
inc
popf
jns
jg
imul
negb
jb
sbb
jle
in
pop
test
cmc
lret
push
cmc
adc
insb
jb
jno
sbbl
push
icebp
jl
dec
inc
lods
movsl
scas
cwtl
clc
dec
in
iret
mov
out
fs
cltd
jne
imul
mov
xchg
mov
jle
jb
aad
out
cmp
add
pop
and
adc
adc
push
dec
fstpt
mov
loope
das
or
mov
inc
lock
shlb
mov
out
fwait
nop
pop
cmp
mov
inc
mov
insl
insb
sub
mov
mov
cmp
xchg
xchg
xchg
cmpsb
fnstcw
stos
pushf
cmc
outsb
jecxz
fcoml
loopne
add
push
xor
jge
loop
dec
cltd
mov
lds
fdivp
mov
mov
leave
iret
cmp
sub
xor
xchg
in
sbb
movsb
test
sbb
add
fldenv
pop
ret
adc
pusha
cmp
test
or
add
in
mov
add
adc
adc
jle
rcrb
add
test
in
sub
outsb
adc
cmc
xchg
scas
ucomiss
fistpl
scas
int3
xor
ljmp
repnz
insl
fwait
xchg
out
repnz
xchg
leave
ret
std
inc
lea
sbb
xor
ljmp
adc
jmp
sbb
rcrl
mov
movsl
fwait
in
movsl
sub
push
jnp
mov
cmp
outsl
inc
sbb
cld
pop
divl
mov
cmp
outsl
test
imul
or
out
cld
popf
sti
pop
mov
cmp
lods
jecxz
jb
or
pop
fmuls
stos
dec
mov
sbb
push
mov
inc
mov
lret
mov
cs
fmull
frstor
das
jnp
add
adc
aas
pusha
scas
push
aam
aam
rorb
pop
frstor
mov
pop
mov
cmp
jp
xchg
ret
adc
out
xor
inc
movsb
xchg
cmp
cmp
lret
cmp
les
push
loope
or
xchg
pop
mov
jg
push
adc
mov
mov
push
in
lahf
arpl
add
fnsave
xchg
gs
rep
ja
adc
cmp
jp
inc
std
push
cli
sbb
insl
mov
jl
cs
pop
jne
push
mov
and
in
rclb
pop
enter
iret
add
std
adc
shrb
dec
dec
push
push
adc
mov
push
test
jmp
lock
iret
mov
cmp
incb
arpl
jbe
xorl
out
push
push
cmc
xchg
adc
pop
pop
hlt
push
jbe
dec
xchg
loopne
enter
in
sbb
in
lret
in
and
pop
js
mov
xorb
loopne
dec
xor
adc
outsl
pop
outsb
and
loop
adc
pushf
mul
cli
jecxz
add
push
and
sbb
test
xchg
xor
pop
ss
lods
int
push
sbb
sarl
cltd
loop
inc
jmp
xchg
inc
subl
sbb
add
imul
mov
mov
aam
pop
testb
and
push
or
sbb
jg
les
in
orb
xlat
inc
fisttpl
cmp
aas
adc
ret
sbb
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
sbb
aaa
insb
pushf
mov
notl
sub
inc
jnp
xchg
mov
fcmove
cmp
jl
clc
lea
stc
movsl
stos
rcrl
cmpsb
fdivrp
adc
add
dec
popf
std
ret
cmp
notl
or
xor
mov
icebp
scas
mov
jns
mov
and
dec
adc
xchg
and
inc
ds
ss
push
fisubs
rcrl
testb
bound
xor
cmc
out
push
adc
push
cmpsb
dec
cld
cld
cli
mov
xor
cmc
cmp
cmp
inc
stos
mov
sbbb
lret
imul
add
adc
in
cmp
fs
icebp
andb
mov
mov
jnp
mov
pushf
jae
adc
inc
scas
enter
dec
pop
lret
into
mov
adc
add
push
mov
shll
sbb
out
push
adc
sti
cwtl
sub
add
aaa
jbe
adc
daa
fsts
sub
out
sbb
fmull
pop
mov
fiaddl
pusha
fdiv
fidivrl
cli
out
insb
fwait
imul
push
out
and
cmp
or
cmpb
cmp
popf
pushf
mov
or
repnz
insl
out
adcl
mov
ret
inc
pop
xor
dec
pop
push
jp
jmp
jg
aam
ja
ds
ds
lret
mov
scas
lock
in
js
mov
gs
inc
jg
cmpsl
cmp
sbb
lcall
push
adc
xchg
repz
fdivp
frstor
cmpsl
push
adc
dec
inc
and
ret
sub
sub
cs
lock
mov
push
addl
dec
dec
mov
sub
ss
cmpsl
repz
out
mov
push
dec
aam
out
icebp
push
int3
enter
lret
xchg
mov
cmp
cmp
enter
and
lret
shr
outsb
mov
mov
int3
js
es
rcll
mov
int3
xchg
mov
jo
cli
repz
into
mov
leave
clc
aaa
mov
cmp
in
nop
mov
mov
fcompl
push
xor
pusha
jne
cmp
shrb
jae
cmpsl
popa
dec
or
subl
sbb
jg
cmp
aam
lcall
imul
cmpsb
int
mov
cmp
imul
addr16
push
sub
adc
add
cmc
mov
mov
cmc
in
inc
loope
or
aad
mov
mull
push
cs
mov
sbbl
xchg
add
jecxz
stos
nop
loopne
jg
dec
movsb
jno
mov
popa
int
jae
pop
fs
cs
fstps
aad
jl
call
mov
and
jecxz
daa
into
mov
icebp
cmpsl
or
and
loope
mov
xchg
test
call
jg
fs
out
jnp
push
lcall
rorb
mov
jg
popf
jge
loopne
and
adc
adcb
adc
jne
mov
cmpb
cs
das
or
aaa
push
fs
sbb
cmp
jmp
mov
cld
jecxz
jp
cmp
aas
cmpsb
or
jno
je
cmp
sub
xchg
roll
sub
mov
addr16
dec
popl
adc
xor
mov
cmpsl
xor
sarb
js
cmp
incb
sub
stos
pop
bound
or
shrl
xor
lds
cmpb
jl
and
mov
or
divl
mov
rolb
mov
dec
sub
dec
sbb
lretw
int3
lcall
inc
xchg
shr
aad
shrb
out
cmc
hlt
add
cmp
xchg
jns
scas
jmp
mov
xor
mov
scas
sbb
jp
cmc
jo
push
inc
adc
mov
ds
push
xchg
jne
subb
jg
imul
leave
sti
mov
inc
imul
sub
add
dec
xchg
mov
ss
xor
dec
inc
scas
mov
bound
dec
lahf
xchg
xchg
mov
pusha
and
out
icebp
jo
int
xchg
xchg
lods
mov
aaa
movsb
sub
add
lahf
std
sub
add
icebp
add
imul
push
mov
inc
das
or
pop
or
mov
xor
scas
hlt
aaa
clc
xchg
xchg
push
dec
comiss
fcmovu
shrd
push
xchg
mov
insb
add
jo
xor
sbbb
mov
add
push
inc
lods
jle
and
sub
sub
cmpsb
out
into
mov
movsl
fnstsw
pop
imul
xor
inc
add
inc
daa
and
push
mov
or
or
imul
or
pop
pop
jne
cli
mov
andb
das
pusha
jg
adc
mov
inc
jne
fucom
and
imul
jmp
das
pop
dec
sbb
fsts
hlt
jge
push
mov
sub
jae
imul
std
jecxz
push
cmp
mov
stos
mov
mov
inc
aas
cmp
mov
pusha
add
addr16
call
out
cmp
pop
jmp
sbb
addr16
loope
sbb
orl
or
add
rolb
push
pop
cs
stos
jge
daa
pop
push
cmp
lahf
add
mov
mov
or
xlat
add
imul
and
sti
je
add
mov
xorb
dec
push
imul
mov
sbb
pop
xchg
push
test
and
dec
ja
movl
daa
scas
aam
add
dec
sub
in
stos
nop
inc
loopne
hlt
or
stc
je
lods
inc
cmpsl
icebp
or
subb
rcrl
jg
push
pop
jge
outsl
xchg
sub
das
mov
lahf
jge
pop
mov
in
leave
std
aad
sub
dec
xor
fsubs
push
stos
sbb
jnp
push
or
mov
mov
push
sub
andl
push
xchg
pop
mov
push
and
cmpsl
fistl
mov
inc
mov
out
inc
cmpsl
je
in
daa
insl
es
js
mov
adc
aad
mov
in
add
fcompl
cmp
in
test
mull
lcall
mov
shll
out
paddusw
cwtl
std
jg
sbb
in
lea
or
out
xchg
push
out
pop
das
sbb
frstor
in
push
cmc
mov
fbld
jnp
and
sub
mov
leave
mov
les
pusha
push
sbb
sahf
xchg
xor
loope
or
cmp
inc
insl
add
outsb
adc
pushf
mov
mov
leave
inc
sub
sbb
fisubrl
xchg
sahf
jno
lcall
xor
adc
and
mov
pop
aam
jno
cli
add
mov
cmp
fs
sbb
add
dec
cmpsl
push
jns
inc
add
dec
fisttpll
jae
orl
adc
dec
mov
js
mov
repnz
jecxz
add
outsl
xor
inc
call
cltd
test
cmp
cmp
jae
fnsave
outsb
stc
or
pop
inc
sbb
adc
push
push
movsb
in
pop
pop
in
cwtl
mov
sub
ja
test
and
lret
fldcw
cmp
pop
out
mov
or
mov
or
push
xlat
cld
cmp
lea
outsl
in
adc
movsl
push
aas
adc
in
mov
xchg
into
scas
cmp
popa
adc
arpl
add
mov
imull
cmp
std
roll
cli
push
mov
shrl
cmp
fists
jnp
xor
mov
sub
cltd
cmp
mov
mov
adc
jno
lea
mov
inc
mov
adc
mov
je
cmpsb
pop
rclb
or
loop
xchg
orb
shll
lds
aaa
jo
pop
enter
fadd
xor
outsl
sbbb
aam
mov
mov
fildll
pusha
push
stos
mov
or
pop
mul
mov
jo
mov
fs
jmp
shl
ficoms
mov
cwtl
cmpsb
rorb
xchg
das
enter
sbb
pushf
jle
adc
sarl
movsb
and
dec
jno
mov
lahf
sti
pop
xchg
int3
bound
add
js
push
cwtl
ja
mov
dec
insb
mov
sbb
lahf
stos
test
mov
xor
data16
mov
pushf
mov
xor
or
pop
mov
cltd
lea
lcall
push
lds
mov
mov
cli
and
ds
pop
das
push
repz
lret
mov
or
cli
xor
ljmp
aad
push
roll
subb
push
cmp
push
negb
xadd
push
push
or
add
scas
mov
mov
or
adc
and
decl
arpl
xor
adc
mov
daa
push
loopne
scas
push
into
cmp
imul
testb
xchg
lds
mov
clc
or
sbb
mov
xor
enter
insl
add
mov
es
adc
je
in
frstpm(287
fwait
aad
jecxz
jno
rcrb
fdivl
sbb
add
scas
test
movsb
mov
push
fsubr
das
mov
mov
jno
mov
in
cmp
lea
push
out
adc
ret
inc
arpl
lock
stc
jae
jecxz
push
shl
ss
inc
loopne
inc
adc
jecxz
cmp
xor
xchg
mov
mov
mov
repz
sbb
dec
adc
lods
xchg
int3
mov
inc
shrl
xor
lods
in
add
jae
xchg
into
mov
dec
jbe
inc
sub
mov
cltd
jb
sub
mov
imul
repnz
clc
push
mov
cwtl
nop
hlt
mov
push
inc
cltd
push
mov
lock
add
push
js
sub
cmp
stos
lds
mov
rcr
jnp
inc
loop
lahf
sbb
adc
fmuls
pop
push
jns
push
cmp
mov
jle
into
mov
data16
clc
xchg
push
ljmp
nop
cmp
repnz
adcb
cmp
das
frstor
loope
xor
push
test
or
nop
dec
mov
sbb
aaa
mov
xchg
hlt
enter
repz
xor
mov
insl
insl
out
mov
mov
inc
cltd
push
pushf
dec
idivl
sub
push
jl
stos
pusha
test
xor
aaa
dec
bound
push
sub
mov
std
xchg
loopne
inc
mov
inc
mov
mov
push
sbb
nop
xor
inc
jns
mov
lea
push
xchg
inc
xorl
mov
fnstcw
or
fcoms
fidivl
lret
cs
je
cli
jno
adc
adc
xchg
sub
xchg
dec
ror
stc
lds
repnz
ficompl
test
xchg
sbb
cltd
jg
inc
sub
shll
jne
cwtl
cmp
xchg
mov
adc
xchg
xchg
test
mov
pop
xor
cld
cli
add
sub
xchg
and
popf
mov
cmp
or
xchg
mov
leave
jnp
mov
leave
rorb
icebp
fdivl
icebp
repz
jle
sbb
add
mov
jo
out
inc
cli
test
loop
xor
mov
int3
cld
adc
xor
push
adc
jns
pop
fistpll
lods
jl
cmp
mov
and
sub
jo
xchg
dec
mov
std
sub
inc
shlb
mov
sbb
dec
xor
or
rorl
scas
mov
outsb
add
add
cmp
gs
pusha
out
dec
jo
pop
loope
imulb
xlat
mov
inc
sbb
xchg
or
sarb
lods
add
xchg
stos
stos
push
movsb
mov
bswap
leave
mov
mov
mov
sub
adc
imul
rcrb
sahf
aam
mov
aaa
test
jg
fnstcw
xchg
call
data16
stc
lret
pop
hlt
pop
mov
movsl
inc
or
dec
jle
xchg
je
mov
fs
cld
sub
dec
push
push
xchg
in
idivb
jbe
jae
out
adc
mov
subl
inc
stc
daa
test
sub
pop
or
leave
add
cmp
xchg
push
jge
xor
or
cltd
cmp
jl
cmpsl
sbbb
pop
or
and
or
and
jle
int
lret
imul
dec
jl
push
mov
or
pop
bound
sbb
jge
fmuls
add
lret
movsl
enter
mov
mov
test
jno
sarl
mov
xchg
xchg
outsl
shl
or
call
mov
subb
push
mov
stos
jne
ja
lods
mov
pop
inc
xchg
sbb
in
psrld
cld
insb
jmp
inc
adc
iret
and
mov
mov
mov
pop
outsb
mov
ds
fidivl
cmpsb
cmp
cmp
sbb
insl
push
lods
and
push
fsub
dec
stc
mov
or
jbe
cs
inc
fsubr
fbstp
adc
or
jecxz
mov
mov
jno
call
inc
dec
xor
mov
sub
sub
dec
jns
into
mov
js
fs
inc
out
sub
cmp
dec
popf
loopne
mov
repnz
ficoml
cld
leave
inc
loope
and
cmc
movsb
test
xchg
jnp
in
and
imul
fwait
lods
mov
sahf
inc
pop
and
lcall
insb
xor
andl
fwait
mov
add
push
adc
jbe
outsb
push
subl
loop
jae
popa
mov
or
or
mov
ret
mov
aam
movsb
aas
xchg
pop
xor
das
mov
add
sbb
xchg
pop
xor
rcrb
test
jb
xor
mov
loope
lret
in
mov
cmp
mov
sub
mov
mov
aas
lock
and
rcrb
dec
sti
mov
aad
adc
rolb
inc
xorl
imulb
mov
aam
push
pusha
xchg
cmpsl
in
mov
xchg
jo
push
push
sub
in
push
enter
enter
xor
add
aam
inc
pop
cmpsl
xchg
out
add
imul
mov
add
aad
cmp
outsb
lret
xchg
mov
mov
in
pop
pop
icebp
movsb
lea
fs
loop
subl
fnsave
cmp
mov
add
outsl
add
mov
add
lea
jmp
mov
bound
pop
push
cmp
mov
dec
jns
aad
mov
inc
mov
test
cmp
jmp
int3
mov
pop
sbb
jne
add
iret
insl
push
mov
out
arpl
and
fcmovnu
pop
lret
mov
push
xchg
fcompl
add
and
mov
pop
fnstenv
pop
mov
dec
add
das
sub
mov
test
rcr
adc
fcompl
xchg
call
ljmp
es
es
ret
ss
call
nop
sub
outsl
movsb
ret
lods
insl
hlt
call
imul
retw
fst
jmp
cmp
push
lods
fnstsw
xchg
mov
sbb
push
xor
fs
sbbb
fdivl
cmpsl
les
ret
sub
out
add
mov
dec
icebp
xchg
scas
bound
fiadds
push
out
std
scas
mov
sbb
int
es
jle
sysret
mov
pop
in
and
cmp
xchg
subb
inc
add
mov
sti
nop
mov
or
xor
pop
push
decb
fisubrs
add
dec
loop
test
xchg
mov
jae
sbb
or
test
pop
out
or
or
out
insl
pop
imul
addr16
mov
insl
push
mov
loopne
mov
and
movsb
push
repz
clc
loop
enter
sarb
outsb
dec
lret
and
push
sub
mov
inc
xchg
pushf
add
lret
inc
out
shrb
push
test
pop
ljmp
lds
lcall
jmp
jbe
inc
in
and
and
push
or
ffreep
pop
mov
out
mov
ficompl
inc
pop
lods
xchg
call
clc
fmull
repz
pop
aas
not
xchg
add
sub
mov
imul
jb
js
adc
and
jecxz
ja
sbb
stos
aaa
mov
stos
loop
fwait
insb
outsl
pop
les
push
inc
sub
or
sub
inc
cwtl
stos
mov
aaa
loope
pop
inc
sti
mov
je
flds
lret
adc
popa
mov
push
roll
cltd
adc
imul
clc
hlt
push
iret
stc
adc
inc
hlt
loope
mov
lret
dec
and
imul
push
push
frstor
cmp
fxam
ret
xchg
rcll
neg
lods
push
popf
test
les
xlat
adc
or
test
and
cmp
sahf
andl
mov
test
hlt
insl
and
sub
lea
jmp
dec
mov
pop
add
dec
ret
les
jg
jae
inc
leave
and
icebp
popf
loopne
cmpsl
inc
ljmp
inc
mov
addr16
test
sub
dec
xchg
sbb
jbe
cmp
pusha
dec
outsb
mov
lock
enter
enter
mov
xor
sbb
adc
ss
dec
shr
gs
inc
sarl
jae
js
repnz
xchg
cmp
gs
pop
cmp
lahf
or
jle
outsb
in
cmp
test
pop
xchg
pop
jne
push
xchg
push
adc
jno
je
dec
in
push
fbstp
and
pop
in
pop
push
repz
mov
std
xor
and
sbb
aam
repnz
mov
cmpb
xor
pop
aam
das
int3
mov
outsl
lahf
xor
lret
ljmp
sbb
push
shll
shlb
push
stos
insb
cmp
or
cmp
push
mov
ss
jbe
lgs
cmp
out
pop
stos
out
scas
daa
mov
test
pop
mov
cld
insb
je
sbb
lahf
mov
imul
and
push
adcl
rolb
inc
inc
push
add
out
in
or
enter
and
jne
jl
orl
outsl
cs
push
lods
std
or
xchg
add
sub
push
sti
push
ret
insl
int3
fidivrs
mov
add
sub
cli
mov
push
fmuls
in
pop
dec
push
fiadds
mov
xor
push
pushf
add
xchg
jae
outsl
push
gs
mov
ret
test
bound
jnp
xchg
cmp
test
inc
dec
dec
cmp
imull
negl
jge
insl
inc
mov
adc
sbb
jbe
add
jp
xor
cmp
mov
scas
xchg
sbb
xor
add
lcall
inc
gs
jne
scas
mov
pop
xlat
jne
or
push
scas
jb
sar
lock
fadds
orb
mov
adc
cwtl
inc
xchg
mov
or
push
shrl
xor
popl
int
jbe
std
cmp
cli
sbb
popa
pop
pop
fidivrs
add
bound
out
jecxz
int3
in
adc
pop
xchg
sti
push
sti
jl
repnz
jbe
pop
outsb
xor
lret
test
jle
sub
or
add
daa
jns
shl
imul
in
sbb
xchg
mov
adc
nop
cmpsb
cmpsb
loop
lret
and
cmovle
push
sbb
and
pop
das
mov
movsl
dec
sub
lret
pop
pop
xor
mov
jbe
inc
aad
push
jle
xchg
shlb
andl
and
shrl
push
xchg
popa
hlt
mov
jle
push
or
xchg
mov
xchg
cmp
xlat
test
pop
dec
xor
mull
mov
or
add
loope
inc
int3
and
std
jnp
adc
aam
data16
push
jle
ljmp
add
dec
cmc
addb
repz
xchg
inc
sub
lds
push
ss
inc
iret
lods
pop
mov
dec
adc
lods
aad
inc
mov
mov
std
lods
jle
lock
mov
jno
cltd
or
sub
sbb
ds
leave
inc
or
insb
xor
out
push
xchg
xor
out
or
adc
or
add
call
in
fdivrs
sub
mov
mov
daa
fs
sub
push
pop
js
rorl
mov
dec
xor
test
dec
dec
xor
push
xor
vpslld
insl
or
lds
add
sub
out
add
xchg
sbb
pop
stos
stc
or
lret
lds
push
xor
cmc
or
sbb
enter
stos
adc
add
les
lods
lret
adcl
mov
outsb
orb
push
cld
and
dec
cmp
mov
jno
cmc
popf
outsb
fs
std
out
aaa
mov
das
test
into
jno
sarb
adc
rcll
xor
ret
imul
sub
mov
cmpl
add
cmp
shl
loope
js
jmp
adc
mov
or
mov
lock
pop
fisubrl
in
pop
outsb
rcrb
push
and
imul
push
pusha
inc
push
cwtl
aaa
imul
repz
ficoml
or
vmwrite
call
sub
stos
int
sbbb
add
mov
pop
and
fldt
or
fisubl
test
xor
or
test
fwait
roll
cmp
and
mov
cmpsl
xor
pop
push
repnz
hlt
mov
dec
or
mov
mov
xchg
mov
jg
out
mov
enter
fstpl
adcb
mov
or
and
adc
fs
loop
jae
in
outsb
test
jnp
repnz
sub
icebp
out
adc
daa
and
imul
gs
aas
or
xchg
mov
gs
dec
push
and
cwtl
xor
inc
and
adc
pop
ret
scas
rorb
test
dec
incl
lock
enter
call
sbb
shl
clc
mov
int
scas
mov
fisttps
xor
rcll
xor
xchg
mov
arpl
adc
fadds
dec
or
dec
sub
pop
clc
dec
and
test
sbb
ret
loopne
sub
sbb
in
push
mov
push
lock
in
jp
jl
push
addr16
out
sbb
test
cmpsl
pop
repz
lods
jle
sarl
sbb
outsb
fdivrl
rclb
cli
repnz
add
sbb
jl
hlt
xchg
cld
and
insb
aad
pop
roll
xchg
mov
pop
push
dec
test
addr16
movsl
ljmp
adc
jae
pop
sbb
xor
icebp
lods
ja
inc
xor
ljmp
jmp
cmp
bound
out
dec
sub
dec
aad
cli
in
filds
lods
lock
xchg
xchg
pop
xorb
in
or
daa
inc
jae
popa
shlb
fwait
data16
in
sub
xor
adc
ljmp
ss
subb
push
xor
lods
leave
xchg
jle
sti
addr16
push
fsubs
fwait
mov
and
mov
adc
pop
jle
or
jl
repz
sub
aas
fs
pop
cmp
add
popf
inc
movsl
and
icebp
and
and
mov
jae
les
push
test
mov
sti
sbb
mov
data16
xor
jns
pusha
push
xchg
in
sub
add
ret
cmp
aad
adc
add
pop
cli
js
cmpsl
xlat
in
jl
dec
push
ja
shl
dec
ljmp
xor
xchg
movsb
sbb
fistps
movsl
test
jecxz
iret
adc
push
in
xor
out
xchg
cmpsb
mov
jnp
xor
cmp
lock
mov
pop
adc
sahf
imul
or
inc
pop
xchg
and
in
sbb
lcall
push
sub
fs
cmp
mov
movsb
cvtpi2ps
cld
test
mov
pop
notl
mov
lea
sbb
push
pop
das
pop
ss
xor
sub
sub
xor
push
xor
pop
enter
adc
dec
xchg
xchg
lcall
fsubs
push
jbe
push
lret
fdivl
scas
fdivl
cmp
xchg
ss
xor
cwtl
inc
shlb
add
push
ds
push
lods
fisttpl
sbb
pop
cld
mov
shll
push
test
scas
test
ja
es
mov
inc
aas
or
jle
add
mov
mov
fisttps
sbb
mov
sbb
and
incl
test
jb
xchg
adc
ljmp
adc
sti
fcoml
aas
xchg
mov
ret
lahf
fldl
test
inc
das
mov
popf
adc
sbb
pop
imul
sub
adc
lock
pop
lret
push
lret
mov
add
test
or
sbb
xor
xchg
movq
sarl
xor
ljmp
out
push
mov
jmp
dec
mov
or
jl
sbb
jp
ret
adc
mov
loopw
adc
fcmovu
cmpsb
push
mov
imul
xor
divb
jle
lea
popa
and
jmp
shl
test
cwtl
cmp
ret
mov
dec
jno
stos
pushf
aas
lods
push
sub
mov
jbe
fidivrl
push
ljmp
fisttpl
cmpsb
adc
loopne
jmp
jmp
test
xlat
pushf
push
inc
movsl
push
jg
jbe
inc
in
push
adc
iret
xchg
push
imul
icebp
mov
push
cld
in
add
data16
and
mov
cmp
cmc
scas
push
adc
aas
pop
stos
sar
xchg
push
into
mov
inc
popf
mov
ss
cmpsb
jl
mov
or
add
fcomps
je
jmp
into
sbb
dec
fsubl
push
shll
mov
fists
inc
stos
loopne
dec
adc
xchg
jecxz
jle
mov
fmull
mov
sub
arpl
inc
inc
xor
ret
in
in
xor
ret
sub
lret
icebp
popa
mov
and
or
mov
fs
mov
adc
push
push
pop
inc
inc
dec
shll
push
pop
sub
aad
out
mov
test
jmp
sbb
xor
fimull
cs
mov
test
sub
cwtl
je
jmp
sub
les
jg
pushl
test
mov
insl
inc
lret
orl
repz
push
repnz
ret
jns
mov
scas
jge
gs
out
int3
jg
mov
fdivl
jle
push
sub
dec
movsb
xlat
shrl
shr
inc
inc
out
cmpsb
jmp
sub
xchg
xor
test
shrb
andl
sub
cs
pop
inc
mov
lock
lock
or
cmp
fldenv
push
mov
add
fdivr
je
or
jge
mov
jge
add
and
and
mov
lock
inc
dec
sbb
sbb
daa
inc
jmp
es
mov
es
xor
lret
iret
rorl
out
xchg
mov
xor
mov
or
or
and
jb
fisubrl
jo
test
push
mov
mov
icebp
pusha
cwtl
test
push
mov
pop
push
dec
xor
insb
mov
scas
mov
lret
adc
mov
inc
adc
cmp
add
enter
rcl
pushf
fsts
inc
les
fidivrl
iret
movsl
sub
or
lahf
xchg
shrb
aaa
inc
fildl
dec
push
fists
and
xchg
shll
addr16
aas
iret
push
or
sti
dec
jne
fwait
neg
mov
fsubp
int3
xchg
enter
xchg
test
add
ds
sti
mov
xlat
or
popa
add
dec
and
inc
int3
popa
fdivl
inc
dec
or
mov
mov
aas
mov
cmpsl
or
lret
lret
call
add
sahf
pusha
jns
inc
mov
jnp
stos
mov
or
sbb
jo
sub
cmc
les
inc
aad
fisttpll
lods
sub
pop
sbb
pop
loope
and
xor
pop
test
clc
imul
popa
sbb
shll
in
push
push
mov
dec
inc
jge
pop
cmpsb
xchg
jg
sbbb
push
jb
lods
call
inc
lahf
daa
push
cmpsb
sbb
inc
imul
popf
jmp
out
les
inc
cmp
leave
insb
pop
sub
adc
or
mov
and
shlb
repnz
lahf
and
aaa
push
xor
lret
daa
out
imul
fnstcw
inc
mov
mov
pop
dec
scas
or
daa
shl
xor
cwtl
bound
mov
mov
jo
sub
mov
imul
sub
jno
push
out
pop
sub
cld
imul
jmp
mov
and
lods
push
mov
stc
add
aaa
jno
outsl
mov
cs
dec
cmp
enter
sub
aas
iret
jecxz
jno
xchg
jo
ljmp
add
cmpsl
out
arpl
sbb
fidivl
pop
mov
nop
mov
jg
inc
pusha
adc
loopne
add
lods
jecxz
bound
mov
cmpsb
mov
cs
pop
and
lea
cwtl
shll
cltd
sbb
xor
scas
lcall
inc
jbe
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
dec
push
hlt
bound
pop
bound
int
xchg
pusha
xor
stos
xchg
ljmp
stos
sub
daa
inc
dec
mov
je
loop
push
inc
in
cmp
push
mov
dec
sub
mov
adcl
push
dec
lahf
adc
pop
xchg
adc
xor
popa
jns
jns
mov
ss
dec
dec
sbbb
aad
dec
push
and
gs
mov
in
cmp
adc
pop
push
cmc
mov
stos
test
push
mov
test
fisttpl
inc
sub
movsb
xchg
mov
push
into
pop
cmp
or
test
es
fstps
mov
sub
repnz
ja
jge
fisttpll
loop
sbb
or
mov
jmp
movsl
xchg
and
adc
mov
push
xor
outsl
mov
lcall
push
movsl
xor
mov
fisttps
clc
insb
icebp
sub
incb
adc
xchg
fildll
ja
iret
mov
inc
and
les
cltd
mov
xor
insl
and
cwtl
idivl
lds
mov
xchg
add
cmp
xchg
mov
out
cli
inc
mov
mov
aas
mov
mov
jo
or
cmp
add
sub
add
sahf
cs
pop
dec
mov
sub
jp
mov
xchg
sahf
enter
xchg
packssdw
jmp
lods
aaa
or
ljmp
push
rcll
xor
mov
and
imul
iret
in
andl
mov
cli
sbb
jmp
outsb
and
inc
insl
nopl
adc
sub
inc
lahf
outsb
cld
cmp
lret
adc
dec
ds
push
rcr
sub
jg
mov
pushf
mov
ja
in
dec
lahf
ficompl
addr16
jb
int
xor
inc
sub
lret
sbb
and
test
push
add
hlt
mull
into
cmp
mov
xchg
push
aas
or
fdivr
sub
scas
add
mov
sahf
scas
insb
mov
jne
push
ficoms
enter
inc
jle
mov
testb
orl
and
dec
cmpsb
mov
dec
push
mov
lock
add
xchg
fistl
fadd
lahf
jnp
mull
mov
or
add
int
lahf
addr16
cmc
push
jno
sub
or
mov
adc
xor
cld
mov
int3
bound
stos
inc
loope
jmp
push
test
js
dec
push
mov
dec
sarl
sbb
je
jl
add
and
sbb
dec
or
fsub
mov
cmp
jle
mov
and
lcall
and
repz
pusha
out
cmp
adc
push
xor
addr16
dec
cltd
aaa
mov
pop
dec
sub
fcmovb
enter
xor
test
jb
jae
sub
leave
jb
int
mov
or
mov
gs
pop
cli
adc
sbbl
xlat
add
or
xchg
fwait
cmp
aas
pushf
popa
scas
into
dec
mov
xchg
leave
out
dec
and
sbb
in
xor
shr
inc
push
rorb
sarb
pop
jecxz
sbb
idivl
pusha
cli
std
out
faddp
fimull
xchg
sub
lods
mov
jp
sub
addr16
xchg
mov
fmul
scas
stc
mov
mov
hlt
fwait
test
mov
sti
stos
mov
mov
adc
arpl
xchg
mov
inc
pusha
lods
je
popa
pop
adc
movsl
dec
cmp
clc
add
stc
out
push
pusha
xor
lods
stc
addr16
fists
mov
fwait
aas
xorb
mov
jg
ficoms
jnp
lods
cmp
mov
jo
ret
mov
dec
aas
mov
dec
adc
arpl
out
ds
sbb
or
cmpsl
push
pop
shll
les
mov
inc
jg
add
jmp
popf
sbb
sub
xchg
out
js
daa
orb
mov
ss
repz
pop
push
pusha
jle
popa
pushf
repnz
lods
inc
fmul
bound
mov
dec
dec
pop
ret
ds
sub
add
dec
sub
adc
scas
nop
or
scas
push
fwait
xchg
dec
mov
out
aam
aam
lds
fildll
add
sbb
std
adc
lods
mov
shl
mov
aam
xchg
test
addb
fimuls
push
mov
and
js
test
pop
dec
cmp
rcr
pop
imul
mov
notb
pusha
mov
stc
inc
xchg
jmp
ret
push
adcl
fs
aaa
push
push
fimull
cmc
in
add
push
mov
and
sahf
daa
and
xchg
xchg
pusha
sti
out
xor
cmp
fcomp
mov
mov
dec
rclb
xor
pushf
push
jmp
jp
fimuls
mov
ja
sarb
sub
add
insl
je
jb
fmull
jae
ds
sbb
mov
push
mull
jg
dec
adc
dec
pushf
ficoms
jae
jle
mov
sub
and
mov
or
jl
and
dec
mov
loopne
mov
xchg
sub
or
pop
xchg
mov
mov
iret
jle
mov
cmp
pop
cmpsb
or
xor
cmpsl
jo
ret
into
jae
aam
sti
jns
imul
push
mov
and
sarb
cmovnp
pop
shl
rorb
or
adc
or
mov
jmp
int3
pop
imul
dec
dec
xchg
and
pusha
icebp
pushf
inc
out
mov
jp
scas
mov
xor
mov
push
inc
aaa
inc
jmp
loopne
lret
cmp
add
mov
jo
inc
xor
jb
and
mov
jae
ss
dec
loop
add
jge
adc
addb
and
mov
or
lock
call
inc
adc
inc
imull
or
cmp
adc
loope
pop
mov
daa
inc
mov
sub
pop
sub
add
int3
je
jmp
call
or
mov
je
sub
mov
jns
mov
mov
into
lahf
int3
scas
imul
jmp
scas
fcomip
aad
out
cli
lea
mov
lahf
sbb
nop
sub
nop
push
sbbl
xchg
outsl
inc
mov
cmp
sub
inc
es
adc
push
in
push
in
jp
rclb
jne
sub
add
pop
std
mov
nop
sbb
jecxz
add
fldt
in
cmp
js
int
sbb
cli
loop
adc
inc
loopne
cmp
push
in
jmp
xor
jge
xor
mov
in
mov
inc
mov
push
in
frstor
cmpsb
fwait
sahf
dec
dec
cmp
cmpb
push
or
and
test
test
test
aam
lods
in
lret
sbb
inc
adc
scas
push
mov
int
mov
das
inc
aam
xor
mov
xchg
mov
pop
leave
lock
jne
lcall
push
and
test
fs
rcl
jmp
xchg
or
jl
lods
stc
ss
push
lretw
out
mov
cmp
scas
add
test
jnp
sub
xor
jl
inc
aam
addl
adc
or
inc
cltd
xor
mov
lahf
es
rorb
sbb
mov
mov
mov
cmc
push
xchg
cld
cmc
notb
in
dec
mov
mov
ljmp
nop
xor
popa
not
dec
mov
xchg
int
cmpsl
or
mov
js
iret
mov
cs
xor
mov
push
je
lret
xor
xor
adc
xor
repnz
and
in
mov
fwait
js
jo
jbe
inc
sbb
lods
aaa
xchg
xchg
gs
loopne
adc
stc
mov
adc
mov
xchg
clc
call
inc
push
adc
scas
sahf
jnp
pop
xor
ljmp
test
push
inc
sub
push
addr16
push
mov
add
pop
push
lcall
cmp
btr
sbb
mov
movsl
inc
add
jecxz
nop
dec
and
mov
outsl
jmp
xor
arpl
inc
rcll
mov
jns
or
roll
icebp
xor
push
mov
cmpb
push
ds
mov
mov
mov
add
aam
adc
loopne
in
out
jp
push
aam
sub
outsb
cli
sbb
dec
and
repz
addr16
ds
movsl
jmp
rcr
sbb
lret
data16
jle
testl
sbb
jecxz
mov
dec
jecxz
loop
mov
add
mov
adc
shrl
add
mov
push
mov
sbb
sbb
push
inc
ret
out
imulb
pop
or
cli
pushf
xor
pushf
sbb
sbb
mov
iret
sti
and
addr16
sahf
xlat
jg
adc
jae
fmull
jge
mov
sbb
loope
inc
push
inc
jbe
insb
jl
aam
aam
add
sti
cmp
pop
cltd
mov
mov
pop
add
xchg
daa
cmp
pop
je
mov
inc
pop
xchg
push
je
ja
outsb
test
jbe
dec
pop
not
ss
push
push
push
nop
xor
outsl
sub
movsb
jb
ret
icebp
pop
jg
stc
mov
rcl
int
sarb
addr16
out
clc
inc
cwtl
dec
je
push
push
jp
test
pop
orl
inc
pop
push
mov
aaa
hlt
and
push
and
and
mov
pusha
or
clc
adc
sub
inc
enter
stc
mov
add
inc
lahf
js
sbb
fbld
pop
loopne
pop
mov
xchg
xchg
jns
cmp
ljmp
jmp
std
adc
adc
bound
inc
jge
sti
dec
cwtl
dec
dec
and
jle
dec
push
cmp
pusha
push
inc
cltd
jns
or
repnz
je
and
and
pop
jnp
int3
inc
lock
pop
pop
jo
test
add
jb
cltd
pop
or
mov
jl
mov
gs
fstl
fbstp
icebp
dec
into
repnz
and
jne
roll
jmp
fbld
pusha
pop
push
push
loopne
test
mov
pop
adc
push
sbb
shl
sub
flds
jmp
xor
cmp
xor
mov
mov
aam
and
lock
add
stc
ret
adc
add
inc
test
add
fsubrs
test
sbb
mov
cmpsb
jmp
xchg
aam
lahf
or
ljmp
rcll
in
rorb
and
addb
push
mov
cmp
and
outsb
mov
outsb
and
in
imul
ds
mov
fadd
mov
lds
or
inc
xlat
jle
push
ds
cmc
scas
pop
xchg
jge
cs
aad
sti
push
xor
add
add
data16
int
xlat
dec
mov
and
jl
mov
or
sbb
cmpsb
push
adc
insb
shl
inc
rcr
lahf
sub
add
add
xchg
add
cmp
cwtl
bound
testb
scas
adc
push
arpl
fiaddl
or
sub
in
lods
xor
sti
dec
mov
inc
fdivs
inc
js
mov
mov
dec
int
mov
inc
xchg
movsl
push
pop
inc
and
push
and
push
outsb
fwait
and
cmp
les
dec
xlat
out
sti
sub
and
fnstenv
mov
mov
testl
movsb
in
xor
in
xchg
std
jno
cmc
dec
gs
mov
movsl
cmp
inc
or
inc
jae
sub
push
nop
mov
mov
pop
mov
addr16
stos
mov
sbb
push
int
scas
lods
xchg
das
test
add
dec
rcr
add
sub
rcrb
iret
sti
in
std
mov
testl
push
aas
jmp
test
cli
mov
pop
dec
push
inc
shll
icebp
lcall
test
arpl
mov
fisttps
add
daa
and
pop
jne
jns
cmp
mov
les
mov
cmpsl
sub
scas
add
clc
shrl
dec
pop
inc
scas
cs
push
jg
arpl
add
sbb
cld
jo
fwait
adc
mov
std
adc
jno
inc
pop
cmp
outsb
mov
xchg
aam
insl
mov
xor
lea
fimull
int
jo
mov
fldl2e
in
leave
mov
lea
ja
jecxz
pusha
or
lahf
xor
dec
sub
xchg
movsl
arpl
enter
mov
test
rcrb
xchg
imul
cmp
lock
out
stc
dec
inc
insb
xchg
fldl
outsl
pop
sbb
sahf
lcall
orb
mov
cmpb
movsb
roll
jne
or
ret
ja
push
dec
xchg
loope
rcrl
ret
mov
ja
js
test
push
jns
xchg
fwait
stc
call
jmp
jp
mov
or
adc
gs
sbb
or
js
mov
xor
insl
inc
je
push
cmp
call
iret
cltd
lock
mull
leave
loopne
stos
loope
sbb
das
jne
inc
mov
or
sbb
in
cmp
xchg
xchg
mov
lock
in
push
lret
mov
les
fldt
sub
out
sbb
inc
mov
mov
mulb
or
mov
inc
enter
xor
in
cmp
jb
push
ja
dec
cmp
add
outsl
jno
lret
cmc
mov
clc
enterw
inc
neg
jecxz
popa
or
add
dec
push
jb
pop
adc
dec
stc
add
fists
and
cmp
pop
jbe
mov
push
out
jb
dec
xchg
pop
and
sub
jecxz
mov
cmc
daa
add
sqrtps
mov
sahf
mov
scas
cmp
add
pushf
in
cmpsb
mov
leave
push
mov
subb
loop
in
in
pop
or
pop
xor
sub
pop
fstpl
addl
out
xor
inc
adc
mov
sahf
ds
xor
jl,pt
pop
into
pop
mov
inc
sti
sbb
cmpsl
cmp
cmp
mov
inc
jg
out
inc
pop
push
mov
fldt
cmc
jle
cmpsb
mov
shlb
inc
std
jp
jnp
aad
adc
call
and
mov
xlat
inc
cld
test
xor
sbb
add
mov
pop
jnp
push
adc
mov
pop
sub
ljmp
test
inc
or
mov
jp
xor
insb
fisttpll
nop
scas
or
cmp
or
jle
nop
sub
xchg
rcl
push
inc
js
push
ret
leave
dec
fcmove
aas
pushf
push
bound
ds
dec
popa
pop
sbb
adc
push
jae
sarb
xchg
iret
sbbb
dec
mov
mov
or
cs
xor
xchg
sahf
sbb
movsl
sbb
push
repnz
push
int3
daa
dec
enter
je
outsl
lds
mov
gs
sub
loopne
ljmp
popf
push
xor
and
xor
xor
in
stc
test
jae
dec
inc
and
pop
cltd
loopne
out
xor
iret
int
mov
inc
fcmove
scas
cltd
int
aaa
mull
ss
data16
jmp
test
lcall
xor
fisttpll
add
mov
xchg
mov
and
cmp
lret
cmpsb
addb
jmp
mov
je
pop
inc
test
lret
sub
fsubrl
xchg
sub
add
scas
shr
mov
and
sub
es
mov
add
jns,pt
js
mov
mov
cmp
lret
popa
jnp
fisubl
sbb
aad
and
and
es
xchg
cmpsb
lods
mov
xor
jmp
hlt
xlat
lods
xchg
cmc
movsl
mov
es
sti
icebp
dec
pop
sub
in
jmp
lret
cld
fcoml
loop
icebp
inc
jbe
and
leave
fistpll
dec
test
jne
xlat
pop
aad
xchg
jle
ds
jb
aad
cmpsl
cmp
cli
lds
inc
pop
sahf
into
push
push
pop
dec
fldcw
mov
adc
mov
idivb
popf
outsb
xorl
sbb
out
dec
xchg
cmp
mov
ja
in
cmpsb
sub
pop
cli
mov
mov
lahf
stos
clc
xor
loop
xchg
call
ret
aas
mov
pop
int
movsb
or
loop
and
and
leave
fisubs
mov
or
jmp
mov
adc
dec
fisubs
fistpl
shll
pusha
or
dec
adc
mov
sub
adc
add
cmp
cmp
in
or
subb
test
rol
inc
mov
loopne
and
mov
clc
mov
sbb
rcrb
sub
push
mov
inc
jge
push
sub
jmp
sub
pop
jmp
inc
pop
or
lcall
pop
add
mov
adc
movsl
stc
ja
inc
jb
das
roll
and
shrb
out
xchg
cmc
push
inc
loop
cmp
cltd
xor
jp
mov
fimull
jne
sbb
aam
dec
outsl
mov
adc
iret
mov
jne
not
fcoml
inc
or
mov
cmp
mov
or
mov
push
test
int
jmp
sub
sub
cmpl
inc
orl
mov
sub
aad
test
xchg
jg
mov
call
rcr
adc
cli
aas
aas
out
adc
ret
push
ja
fwait
pop
int3
cmp
dec
repz
iret
jg
pop
and
divl
call
sbb
push
std
mov
rorl
test
mov
orl
lods
mov
mov
jo
and
mov
xchg
inc
xchg
pusha
fsubrp
pop
pop
xchg
aas
mov
int
shlb
sub
fcomp
fiadds
cmp
lret
mov
push
or
adc
push
sbb
cli
and
push
xor
push
js
push
push
and
xchg
mov
icebp
stos
cmp
in
adc
sub
sub
or
xchg
jae
rcll
popa
out
jge
lock
pop
sub
pop
inc
add
and
rolb
or
mov
lods
out
fwait
movsb
test
aaa
orb
call
cmp
push
insb
sub
inc
fdivr
in
pusha
cmp
pop
xor
scas
popa
es
inc
imul
jno
push
daa
testl
pop
clc
pop
stc
mov
out
sub
mov
aam
jae
inc
mov
data16
adc
cmp
adc
daa
lahf
mov
aaa
mov
psubb
add
xchg
les
out
pop
out
adc
or
and
ficoms
icebp
mov
mov
inc
sub
shll
shrb
pop
inc
mov
aaa
adc
movsb
jmp
int
aad
fidivrl
pushf
jae
dec
arpl
jl
repz
repnz
ss
enter
inc
pop
adc
pushf
leave
popf
aaa
jno
sub
inc
mov
loope
pop
pop
sbb
inc
faddl
jbe
dec
loopne
xchg
sti
mov
add
or
jge
adc
int3
shlb
or
inc
sub
xchg
cmp
jns
data16
shr
iret
jns
dec
lret
add
xchg
hlt
shl
xor
sbb
mov
fildl
subb
mov
rorb
or
fisubrl
xchg
inc
jle
jmp
lahf
push
mov
repz
and
mov
ljmp
into
fwait
inc
sub
pop
dec
inc
ret
sub
sub
insb
push
int
sbb
lcall
lret
lret
adc
lods
pusha
jne
adc
pop
jecxz
stos
mov
xchg
xorl
add
inc
add
lret
inc
or
and
push
ret
jae
xchg
sub
push
mov
hlt
or
loope
subl
lret
push
dec
jns
negb
or
aam
lock
or
cmpsl
cmp
sbb
das
outsl
out
add
stos
cmp
or
pop
scas
nop
sub
call
sub
and
in
je
jmp
enter
out
xlat
imul
popa
sub
and
jnp
push
mov
cli
cmp
out
mov
lcall
jecxz
mov
xchg
mov
mov
call
aad
xor
sub
inc
aad
push
inc
test
sarl
movsl
pop
inc
loopne
jmp
mov
inc
or
lcall
into
daa
cs
roll
sub
fs
pop
sub
sub
imul
push
idiv
imul
inc
jae
lret
mov
aas
mov
scas
mov
mov
or
popa
pop
ja
ja
push
imul
push
stos
mov
jo
push
ud0
ficoml
test
xor
sub
mov
or
fidivrs
cwtl
jmp
and
loopne
es
dec
sbb
or
xchg
lret
jns
adc
xor
cmc
sti
push
not
out
mov
cmp
push
cs
add
cmpsb
inc
lret
out
int
mov
jmp
das
stos
cmp
cmp
sbb
imul
mov
stos
add
sahf
scas
push
mov
pop
pop
and
or
addr16
cmp
fsubrs
lods
mov
loopne
nop
fmull
add
mov
sbb
clc
pop
mov
jns
pop
lret
arpl
cmp
lcall
jo
outsl
jns
lods
push
sbb
push
orl
mov
mov
fnsave
cltd
shrb
pop
and
sbb
movsb
mov
sub
push
pop
loopne
icebp
ret
add
movl
mov
cltd
adc
push
xchg
xchg
jnp
rcr
mov
dec
addb
jmp
or
mov
shr
mov
and
xchg
shlb
ja
cmp
mov
inc
fdivrl
cltd
adc
inc
pop
push
cmp
xchg
add
repnz
xchg
cltd
shll
leave
xchg
xchg
movsl
or
fbstp
leave
mov
cmp
mov
cmp
inc
mov
inc
outsl
mov
fs
adc
sbb
adc
inc
and
cs
push
dec
sbb
aad
push
dec
test
imul
dec
cmp
xor
pop
inc
pop
xchg
jge
inc
jbe
cld
jecxz
pop
push
icebp
int
pop
ret
pushf
mov
out
mov
or
jbe
fsubl
push
test
or
push
cmp
lcall
mov
fwait
test
dec
icebp
ljmp
xor
ret
jmp
mov
cld
jnp
mov
cmp
xor
pop
pop
insl
pusha
sbb
push
test
sub
xchg
sbbb
pop
push
jle
mov
pop
cwtl
dec
and
fbld
rorl
cmpsl
fstpl
xor
aad
pop
mov
popa
rolb
xor
inc
imul
cvtdq2ps
sahf
lods
xchg
aam
pushf
fdivl
jl
jnp
jp
fbstp
mov
jg
xor
xchg
xchg
outsl
enter
mov
push
imul
popa
xchg
cs
repz
lahf
add
incl
dec
sarl
pop
adc
aad
mov
fnstenv
mov
orb
int
int
sbb
dec
mov
stos
push
dec
mov
repnz
pop
sbb
jl
inc
es
jge
and
pop
and
cmp
call
mov
test
jno
sbb
shll
icebp
add
test
jecxz
ja
mov
lods
mov
push
and
test
test
out
cmp
push
jo
lret
jmp
cmp
adc
inc
mov
push
cmp
xor
mov
pusha
movsl
inc
lret
or
cmpsb
mov
movsl
and
and
mov
stc
xchg
or
popf
xchg
int3
dec
add
divl
jns
popf
arpl
push
add
lock
fs
inc
xlat
hlt
ficompl
sbb
outsb
and
out
or
mov
push
leave
mov
lea
jo
fucomp
cmpsb
mov
xchg
insl
jno
adc
xchg
xchg
cmp
push
sub
mov
stos
scas
jg
in
pop
cld
jge
adc
or
mov
stos
inc
xchg
push
in
mov
cmc
dec
out
lahf
mov
imul
or
daa
and
cmp
inc
dec
test
mov
pusha
lret
jb
pop
mov
mov
scas
inc
test
xchg
pusha
insl
xor
sub
mov
clc
jns
add
pushf
and
dec
mov
movsl
mov
dec
in
cmp
mov
cmp
jl
xchg
jge
add
dec
aas
pusha
push
cmp
stos
jle
test
and
inc
es
pop
test
aad
push
icebp
imul
xchg
add
mov
imul
xor
jo
inc
outsl
test
push
or
jle,pn
stc
out
ja
enter
or
les
cli
adc
test
inc
pop
cmpsl
fmuls
push
or
dec
jno
decl
add
xlat
sti
icebp
inc
dec
daa
jle
scas
push
xlat
lock
lcall
cld
cmp
mov
sahf
push
mov
cmpsb
iret
das
fstps
add
jo
and
pusha
push
sbb
add
xchg
js
jbe
xchg
outsl
int3
aas
jp
dec
pusha
lea
pop
mov
mov
lcall
les
xlat
sub
sbb
dec
lcall
cmc
imul
dec
mov
mov
dec
fucomip
data16
lods
cmp
add
aad
mov
inc
xlat
sahf
ja
aas
xchg
cmp
inc
dec
sbb
mov
mov
add
mov
pop
aad
push
aad
xorl
jae
mov
xchg
inc
cmp
adc
jne
pop
int3
js
and
mov
inc
leave
xchg
test
movsb
dec
fwait
dec
pop
imul
popa
dec
enter
mov
xchg
fcomps
inc
lds
pop
and
in
fdivs
push
xor
ret
lds
jl
mov
xor
push
shll
imul
insb
std
or
sbb
mov
cli
mov
dec
bnd
lret
xor
push
mov
inc
sbbb
mov
push
jbe
test
lods
push
jne
mov
jno
adcb
push
and
in
loop
jle
inc
repz
pop
xchg
xchg
cmp
inc
test
scas
fdivrs
adc
pop
pop
fucomip
and
jle
test
push
imul
mov
dec
repz
jb
sub
mov
call
adc
out
sbb
adc
imul
popf
js
in
mov
jae
pushf
cmp
out
stc
es
mov
pop
fldenv
push
fildll
std
mov
pop
xchg
xlat
pop
rcrl
imul
xor
mov
push
pop
je
ret
popa
mov
imul
pop
arpl
mov
mov
fwait
test
sar
sbb
pusha
jno
scas
out
fldenv
stc
lea
pop
out
inc
pop
cmp
sbb
mov
dec
dec
adc
testb
cmp
insl
ss
adc
xor
dec
inc
ljmp
push
jl
add
or
pop
inc
adc
push
ret
mov
xchg
pop
adc
lcall
dec
fnstenv
int3
inc
add
or
pop
pop
xchg
lret
popa
out
xchg
pushf
mull
fiadds
add
pop
imul
sub
fstpt
mov
arpl
imul
das
push
mov
enter
nop
or
xchg
rcll
fidivrs
pop
std
in
ljmp
adc
push
test
xchg
popf
mov
pop
push
scas
lods
cwtl
mov
not
out
sahf
arpl
loopne
and
jp
xor
mov
sbb
iretw
jge
push
sbb
xchg
jnp
enter
dec
cmp
sbb
push
pusha
mov
sbb
dec
rcrl
mov
pop
jecxz
dec
add
mov
xchg
ret
xchg
sti
push
lds
cmp
pusha
sbb
adc
adc
cmp
movsb
mov
lahf
push
jmp
iret
jge
dec
fwait
inc
insl
movsl
and
jecxz
sbbl
jnp
dec
cmc
mov
mov
xchg
cwtl
xor
sub
adcb
out
push
je
scas
pop
fs
cld
icebp
cs
sbb
stc
pusha
leave
stc
fidivs
or
pusha
shrl
and
ret
jne
daa
std
cld
pop
inc
mov
mov
mov
jp
fstl
pop
and
enter
sbb
into
rorb
fildll
push
je
aaa
in
jbe
das
sbb
sub
popa
fxch
jecxz
push
push
int
inc
add
shr
jno
loope
inc
outsl
adc
jecxz
enter
arpl
cmp
test
mov
push
int3
or
dec
xor
loop
cmp
push
adc
test
add
jno
or
push
imul
jno
pop
adc
mov
movsl
xchg
or
cli
fstpt
pushf
push
jmp
cmc
stc
rclb
xlat
aaa
mov
mov
pop
mov
rcll
inc
fwait
rcl
nop
push
test
xchg
push
sub
xchg
lock
mov
dec
lods
fmul
xor
into
xor
filds
sbb
out
xchg
sbb
mov
ret
dec
jp
in
pop
jnp
lret
dec
fbstp
cmpsb
in
and
sub
dec
cwtl
aas
jne
idivl
pop
sti
addr16
sub
add
and
pop
push
or
data16
xchg
int3
pop
sbbb
push
push
mov
push
jmp
pushf
pop
or
sbb
rolw
stos
xor
sahf
insb
fistpll
add
loop
pop
xchg
inc
jg
in
cltd
ret
cmc
jl
out
enter
add
add
or
addb
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
push
nop
add
bound
pop
bound
insl
push
ljmp
je
mull
or
mov
mov
sub
jmp
xor
xor
arpl
movsb
out
sub
scas
lahf
inc
sub
xor
ds
jno
pop
inc
gs
pop
loop
push
xchg
cld
jl
push
jmp
pop
mov
mov
cmp
fs
fisttpll
jo
and
xchg
int
mov
and
sbb
mov
dec
lahf
cmp
fwait
js
aad
jmp
dec
call
cmp
inc
cmpsl
aad
inc
cmp
adc
mov
pop
lods
dec
cmpb
push
leave
pop
xchg
lock
lret
or
movsb
cli
sub
cmp
adc
mov
stc
rorl
in
das
clc
jb
gs
popa
add
push
popa
cltd
out
add
inc
lcall
inc
loop
sti
outsb
enter
adc
jg
mov
insl
inc
and
jl
imul
add
sub
and
adc
repnz
jp
stos
inc
and
int3
jecxz
add
fistpl
pop
insb
ds
adc
xchg
sbb
pop
inc
and
lods
cli
xor
icebp
js
bnd
xorl
inc
movsl
dec
cmp
add
jns
xchg
mov
mov
mov
xor
mov
out
jge
in
xorb
fidivl
popf
push
gs
mov
jns
out
addr16
inc
inc
pop
xchg
movaps
push
or
fimull
mov
xchg
cli
sbb
inc
js
shlb
repnz
int
xor
sbb
pop
xchg
iret
sbb
fiaddl
jb
std
jbe
push
mov
shlb
repnz
xchg
dec
push
es
dec
stos
pop
push
repz
fistpl
jl
je
mov
push
or
ficompl
sbb
lea
fcoms
insl
ds
push
cmp
into
ror
and
xor
cld
jg
jb
xchg
xlat
inc
add
mov
xchg
cmpsl
cmpsl
pushf
ljmp
in
sbb
mov
jnp
addb
in
cmp
adc
dec
pop
push
adc
xor
icebp
and
ret
pusha
inc
cmp
rcll
mov
mov
mov
pop
mov
cmp
adc
sbb
pmulhuw
inc
dec
test
sub
imul
outsb
fdivr
imul
mov
int
sti
in
push
bound
daa
fwait
and
mov
mov
sub
loope
mov
das
pusha
mov
mov
xlat
mov
push
ret
mov
jbe
cli
jne
jp
push
inc
push
les
or
lret
mov
repz
lret
inc
in
repnz
xchg
aaa
xlat
fistpl
sbb
sub
adc
xor
or
push
std
dec
mov
daa
movsl
cmp
xchg
bound
sar
test
inc
dec
mov
je
sahf
aaa
pop
mov
and
popa
divl
fsubrl
xor
cmp
aas
insb
xchg
mov
xor
push
xchg
cli
aas
divl
inc
and
and
dec
adc
adc
imul
mov
and
xchg
xorb
dec
jg
or
inc
mov
cmp
mov
add
mov
or
test
pop
jo
jmp
pop
out
cs
or
hlt
jo
ja
iret
jecxz
lock
jno
mov
add
push
jle
fwait
nop
mov
or
sub
out
test
insb
stos
push
mov
jg
aad
inc
inc
cmpsb
push
inc
jecxz
jl
rcl
add
xor
nop
add
mov
hlt
mov
xor
xorl
jp
sahf
stc
test
jge
push
cmp
lock
mov
jns
les
call
shl
fildl
mov
dec
enter
mov
adc
incl
inc
gs
inc
jl
ds
cmp
outsl
sahf
scas
int
shrb
sbb
pop
cmp
add
inc
mov
or
push
mov
mov
and
inc
movsb
enter
idivb
dec
enter
dec
mov
arpl
jbe
push
cmc
inc
ds
or
cmp
push
xchg
mov
xchg
mov
je
out
mov
ficoms
cld
jp
test
sbb
addr16
inc
iret
int3
cmp
sbb
mov
jmp
mov
cld
or
sahf
push
int
mov
xchg
inc
mov
push
xchg
and
mov
push
xchg
xor
mov
mov
mov
test
xchg
push
lods
lea
or
or
pop
out
in
dec
int
xlat
mov
and
jns
enter
xchg
addl
rclb
mov
jo
pop
inc
mov
sub
das
shlb
pop
sbb
call
cmpsl
or
cmpsl
sub
ds
xchg
jge
hlt
sub
or
repz
mov
inc
fadds
mov
test
sbb
pusha
mov
mov
push
xchg
pushf
xor
cmc
jae
into
cli
in
sub
push
lds
dec
inc
movsb
and
in
push
dec
sbb
mov
sbb
pop
mov
addr16
aaa
roll
std
mov
imull
jne
adc
loop
movsl
push
cmp
add
stos
and
shll
orl
mov
lret
sub
fldenv
out
int
sti
sbb
addb
negl
outsb
mov
push
std
test
inc
das
addr16
adc
cmp
in
push
pop
xor
imul
out
mov
jns
scas
fdivs
gs
cli
popf
sbb
dec
or
mov
inc
xor
xchg
movsb
sarb
push
imul
fiadds
mov
sbb
loope
gs
xlat
pop
jns
cli
mov
mov
imul
or
fwait
or
push
cmp
adc
jp
xchg
cmp
xlat
jge
mov
imull
popf
xchg
cmc
add
insb
mov
popa
stos
jbe
xchg
xor
inc
cmp
cwtl
xor
sbbl
insl
aam
sub
insb
or
or
scas
add
icebp
js
adc
outsl
fidivs
push
or
sub
and
mov
xchg
ja
dec
dec
push
shr
mov
or
mov
ret
xor
int
and
mov
xchg
outsb
outsb
dec
test
mov
inc
movsl
rcr
push
lock
cmp
shll
lcall
mov
in
mov
or
sbb
adc
sub
ror
push
or
cmp
xor
shrb
rcrl
mov
mov
mov
rcrb
outsl
inc
push
mov
mov
or
push
or
push
nop
repnz
frstor
mov
loopne
add
sahf
daa
push
insl
arpl
cmp
jo
cmp
xchg
xchg
jmp
mov
dec
jmpw
lods
adc
add
sub
adc
sti
add
jne
mov
pushf
adc
push
mov
jp
cmp
out
xchg
idivb
jp
rcll
adc
hlt
inc
jmp
push
aas
addl
cmp
xor
loope
in
rcrb
test
jns
inc
subl
and
inc
sbb
mov
fisttpl
lds
es
stos
sbb
cmp
sti
jno
pop
pop
cs
xchg
add
adc
gs
test
adc
pushf
out
in
scas
fmuls
dec
rcll
lds
insb
jp
stos
mov
jnp
mov
cmpsb
inc
insl
and
fwait
mov
mov
jbe
inc
fldcw
loop
inc
imul
pop
add
loopne
test
pop
imulb
jae
leave
data16
fs
out
and
enter
stos
lods
popf
lcall
mov
jnp
popf
add
adc
insb
imul
outsl
cmp
dec
and
mov
pop
mov
add
and
mov
outsl
cmpsl
push
lret
shll
xchg
in
xor
lcall
test
xchg
loope
push
or
out
daa
pop
test
test
clc
popf
push
fdivl
lcall
xor
aaa
or
inc
adc
lret
push
and
shll
dec
in
and
cmpsl
cmpsb
xchg
js
dec
mov
fucomp
mov
aaa
jns
repnz
jnp
jno
pop
mov
inc
mov
cmpsl
mov
out
call
test
aad
dec
insb
pop
jb
into
out
insl
out
mov
jge
fcompl
cmp
shl
fidivs
decl
shlb
outsb
xchg
or
add
cli
into
cmc
ret
and
ffree
sbb
int
enter
cmp
clc
enter
bnd
inc
mov
or
lea
push
test
mov
mov
imul
inc
rol
cmp
dec
cmp
inc
sbb
add
push
mov
adc
add
lea
movsl
out
test
and
data16
cmc
inc
iret
adc
dec
xchg
test
mov
add
inc
pop
mov
ret
inc
outsb
in
lcall
addr16
jo
push
and
cli
std
ljmp
inc
adc
hlt
scas
inc
rolb
cmp
cld
push
push
mov
inc
sub
jl
jbe
mov
push
cmp
dec
inc
dec
ljmp
lcall
loope
push
cmpsl
push
gs
xchg
in
sar
push
sbb
lock
out
mov
lea
test
fucomp
loope
and
hlt
in
aaa
jno
lea
and
ficompl
pop
or
stc
jg
mov
jne
movsb
jmp
insb
push
in
movsl
insb
mov
sbb
xchg
mov
inc
fcompl
leave
imul
aas
ret
push
mov
dec
xchg
mov
mov
int
pop
mov
lods
dec
out
out
je
test
mov
xchg
jnp
sbb
into
mov
lahf
int3
inc
dec
push
das
push
and
xor
ja
out
and
std
in
mov
movsl
xorl
test
pop
xor
and
push
imul
in
aaa
subl
sbb
xor
stc
pop
call
nop
mov
xchg
mov
out
insb
xchg
cltd
xchg
push
mov
lea
sub
xchg
jmp
lods
imul
ds
xor
filds
push
in
adc
jle
cli
jl
adc
sbb
pop
mov
mov
jno
mov
xchg
jae
repz
je
ret
jl
inc
or
pop
mov
sub
mov
ret
daa
fwait
lods
sbb
xchg
adc
or
inc
aas
std
xchg
mov
jno
inc
data16
leave
xchg
add
int
push
add
arpl
jno
mov
xchg
lea
repnz
inc
mov
aaa
cld
mov
add
sbb
xchg
adc
sub
sbb
and
icebp
addr16
push
leave
cmc
cmp
jb
sbb
cmp
pusha
mov
repz
rorl
sarl
xchg
inc
dec
pushf
test
out
enter
xor
push
pop
aad
adc
and
ss
dec
imul
cmc
push
imul
sar
push
xchg
imul
inc
or
cmp
jmp
inc
jne
add
mov
mov
add
loop
jl
inc
fcmovu
dec
icebp
mov
enter
rcll
mov
dec
pop
fistl
xor
out
mov
cmp
lret
out
imul
das
lock
ss
neg
in
int3
lock
jp
xchg
inc
and
mov
outsl
div
decl
pop
xchg
pop
sub
pop
ljmp
push
mov
imul
mov
pop
xchg
mov
dec
data16
add
add
gs
mov
test
lret
nop
and
jg
cs
pop
lea
imulb
es
xchg
addb
leave
les
sbb
aaa
movsl
or
sbb
sbb
outsl
faddl
jle
add
mov
lds
ja
inc
mov
sub
sbb
pushf
and
jbe
data16
xchg
mov
notl
xchg
mov
int3
jl
jae
fistps
sub
stos
aas
mov
lds
push
jo
or
add
mov
into
mov
sub
inc
inc
inc
push
std
cmp
or
hlt
inc
leave
shrl
sti
jno
pop
pop
stos
filds
outsb
mov
sub
in
fsubrs
sub
dec
cmp
inc
xor
testl
sbb
adc
outsl
xchg
loop
pop
and
jae
ret
pusha
push
cmp
lock
mov
push
dec
into
jmp
stc
lock
lret
sub
dec
xor
incl
jb
push
pop
jmp
lods
push
xchg
ror
mov
fisttpl
push
cwtl
daa
sbb
jo
insl
test
movsb
nop
push
push
in
js
call
push
sbb
xchg
or
adc
fisttpl
xor
mov
xor
xor
xchg
pop
les
sahf
scas
fistps
push
test
jo
clc
cmp
push
jne
scas
sbb
xchg
test
daa
jns
divb
and
outsl
out
ljmp
xchg
les
and
pushl
inc
xchg
push
arpl
xchg
cmp
jmp
scas
aas
lock
mov
mov
cmpsb
in
lods
les
repz
pop
pop
ret
pushl
mov
dec
aas
into
push
cs
cs
insb
rorl
push
adc
dec
std
jecxz
and
inc
cmc
loop
leave
add
dec
fs
fsts
roll
sarb
or
shll
cmp
mov
repz
push
push
jge
push
mov
lods
jae
ffree
adc
xor
in
sahf
pop
pop
jnp
imul
aad
mov
mov
sahf
mov
jo
bound
pop
sub
cltd
inc
xor
mov
pop
pusha
jecxz
sbb
mov
std
lods
sub
push
mov
fnstsw
rcrb
mov
idivl
xchg
decb
int
sbb
fidivrs
add
lods
daa
mov
test
mov
ret
dec
sbb
jae
pushf
cs
and
sub
test
or
ja
sbb
push
pushf
mov
mov
inc
lea
adc
inc
popa
mov
ret
mov
xchg
cmp
ja
hlt
ljmp
mov
lret
fwait
sbb
pop
insl
inc
inc
inc
xchg
push
faddl
push
je
sub
sbb
ds
cmp
xlat
adc
adc
rclb
in
xor
inc
and
fistpl
je
movsb
mov
ret
or
jecxz
push
adc
ja
mov
jg
repz
in
xorl
and
and
push
sarb
xchg
stos
cs
jnp
cld
add
add
pop
fcmovnbe
pop
in
mov
aad
fisttpl
push
jecxz
xor
aam
in
and
cmp
int3
jp
xchg
fldl
cld
sbb
dec
and
int3
xchg
push
les
jmp
xor
xchg
rcll
loope
cmc
in
out
into
jle
inc
mov
mov
outsl
sbb
jne
outsl
sbb
scas
jge
aas
mov
jb
sub
stos
mov
je
mov
shrl
push
scas
test
ror
pop
push
or
divb
mov
repz
mov
push
sub
popf
lods
mov
add
push
mov
fs
fisubrs
and
test
lods
jecxz
jmp
pop
jbe
loop
cli
loop
push
mov
and
in
sub
nop
outsb
xchg
push
xor
cmpsb
pushf
movsl
scas
ret
jne
xchg
mov
sub
lods
data16
loope
push
loopne
mov
push
adc
lahf
lcall
shl
mov
aas
cmp
xor
in
das
mov
inc
mov
adc
pop
movsb
xchg
mov
test
pop
lahf
into
xchg
push
jmp
add
insl
push
jbe
or
std
js
cmp
test
or
popf
insb
into
mov
mov
cmp
adc
push
sbbb
add
inc
inc
enter
jo
xchg
lret
out
add
adc
cmc
adc
jnp
jle
test
sbb
popf
es
mov
ds
sti
out
pop
scas
adc
jecxz
pop
mov
and
lret
add
je
fistpl
mov
cli
xchg
call
and
jae
sbb
push
cmpsl
ss
dec
dec
bound
lock
int
aas
mov
into
sbb
pop
push
push
add
out
xchg
mov
outsb
xor
mov
scas
adc
aad
jg
xor
xor
pop
scas
push
inc
pavgw
mov
decb
inc
les
inc
or
mov
les
divb
xchg
pop
xchg
int3
aad
dec
pop
pop
testl
mov
jbe
dec
add
insb
pop
stc
stos
rcrb
jne
hlt
outsl
mov
popf
jp
cmp
adc
sbb
cmp
xchg
testb
lds
add
and
pusha
jbe
cmpsl
inc
adc
push
cmp
adc
shrb
cli
cld
lcall
xchg
das
cwtl
call
enter
ljmp
mov
jae
add
xchg
pop
loop
repz
mov
mov
cmpsl
xor
or
sbbl
mov
jnp
sub
lahf
mov
je
push
int3
dec
test
shrb
pop
sbb
push
add
adc
dec
fdivl
shlb
lret
adc
push
adcl
cmpsl
test
or
out
or
or
movsb
or
pop
jb
pop
ja
cmpl
movsl
add
add
std
mov
xor
xor
pop
mov
jg
lahf
cld
sub
aad
imul
xor
sti
jmp
push
and
das
stc
or
fwait
sbb
mov
mov
lds
movsl
in
jne
lahf
ja
adc
cmp
jnp
mov
fsubrl
cmc
popf
cwtl
xlat
hlt
xor
dec
mov
rcr
adc
and
pushf
and
pop
sub
push
cmp
inc
pop
add
scas
adc
cmp
add
mov
lds
ss
mov
jge
mov
insl
cmpsl
adc
mov
das
pushf
xor
dec
push
xlat
sub
out
adc
nop
fildl
dec
xchg
ss
xchg
jns
aas
xchg
sub
sahf
pop
icebp
jmp
and
or
test
xlat
dec
lods
and
push
pop
adc
pusha
add
mov
mov
add
lret
push
mov
test
pop
mov
xchg
dec
fwait
rep
into
fucom
cwtl
stc
cmp
inc
pop
imul
int
cs
out
dec
adc
pop
adc
pop
ss
vpunpckldq
cmp
cmpsb
mov
mov
mov
and
jno
push
xchg
xchg
pop
sbb
popa
test
inc
scas
mov
aas
das
xlat
je
out
xchg
add
inc
test
xchg
add
scas
add
push
push
sbb
loope
test
pop
out
sbb
mov
leave
data16
cmpb
sbb
psadbw
popf
test
jno
sahf
in
sbb
pop
xchg
pop
enter
xor
push
iret
push
jb
dec
mov
adc
jle
test
inc
out
cmp
ljmp
mov
in
and
popf
iret
pop
pop
push
addl
leave
shlb
jne
aaa
fiaddl
decb
add
enter
sarl
daa
mov
insb
frstor
add
popa
cwtl
ds
clc
sarb
sahf
push
iret
xlat
test
mov
je
lret
pop
rorb
ss
sbb
repnz
ret
data16
into
inc
fcmovne
mov
divl
add
aaa
sarb
xor
arpl
adc
push
xchg
adc
test
ljmp
jnp
mov
or
adc
frstor
jle
mov
pop
int3
lcall
bound
mov
ss
sub
enter
hlt
test
leave
pop
mov
test
inc
jb
jno
fadds
add
shll
cwtl
rcr
mov
stos
cmpsl
xchg
and
push
mov
int
mov
add
add
test
pop
inc
add
cli
inc
adc
push
je
or
popf
cmp
jne
insb
negl
mov
inc
outsl
ja
cmp
jnp
aaa
cmp
sub
add
sbb
mov
mov
mov
lds
fisttpll
mov
sti
aaa
roll
cwtl
jo
xchg
xchg
cs
es
mov
shrb
test
cmp
cltd
xchg
ja
sar
ljmp
xchg
mov
les
scas
cmp
push
leave
cmp
aaa
mov
stos
jmp
and
add
stos
pop
inc
jg
mov
aas
lret
lods
inc
adc
ds
sbb
pop
jnp
sahf
int3
xor
or
ret
jbe
sub
in
xlat
aas
in
faddp
stos
fwait
sub
adc
and
push
ja
jo
xor
inc
sub
push
cmp
sub
cmp
imul
insl
cmp
shlb
dec
lret
stos
or
lahf
inc
xchg
sub
cld
xchg
out
roll
sub
inc
mov
or
ljmp
imul
les
xor
adc
pop
fdivs
cmp
xchg
jmp
xchg
popf
fsubrp
dec
je
and
enter
daa
jp
xchg
lods
into
cld
and
dec
out
sbb
push
push
push
lahf
pop
pushf
stos
add
cmp
xor
sub
jge
xchg
fidivl
adc
xor
sbbl
xchg
icebp
fstps
cs
pop
aas
xchg
je
push
sbbb
jo
xchg
xlat
fsubs
xor
loop
and
and
xor
les
lret
cltd
or
loop
scas
mov
push
xchg
mov
sbb
or
es
mov
and
mov
lcall
mov
sbb
jecxz
ret
popa
sbb
insb
stc
incb
dec
xchg
outsb
outsl
mov
sbb
stc
inc
push
sbb
out
les
lea
mov
pushf
pop
repnz
mov
lahf
pop
xlat
jmp
push
fsubrl
iret
movsl
or
adc
pop
mov
lcall
mov
popa
xor
ret
add
pop
and
mov
jb
int
xorl
xchg
addr16
jmp
movsl
xor
pop
cwtl
mov
mov
pop
push
xor
scas
pop
popf
pop
mov
das
jbe
aad
outsb
pop
jno
stos
fmuls
icebp
das
shr
call
or
mov
dec
sbb
dec
out
jmp
adc
loopne
repz
xor
xchg
and
ret
imul
adc
das
cwtl
xchg
inc
leave
hlt
fs
mov
sbb
fidivl
xchg
fidivrl
cwtl
adc
xchg
inc
add
shll
lret
js
loope
mov
xor
cmpsb
mov
scas
mov
adc
jl
aaa
std
mov
mov
mov
in
das
mov
pop
mov
idivb
cld
or
add
or
dec
pop
fists
cmpsl
orb
jne
stc
push
add
inc
cmc
int
int
sub
pop
pop
aam
and
mov
daa
cmpb
outsw
fs
xor
int
cltd
cli
movsl
pop
dec
mov
cmpsb
mov
add
mov
gs
ror
jb
fistpl
ljmp
mov
jmp
add
ja
ss
nop
aam
xchg
cmp
sbb
adc
jb
rorb
mov
movsb
loop
in
mov
daa
mov
mov
cs
pop
xchg
in
pop
sub
cmpsl
xchg
aaa
or
test
jb
cld
xlat
cmc
lret
ror
push
inc
and
jle
push
test
lret
push
add
jbe
insl
push
out
aaa
adc
mov
mov
jns
pop
int
xor
lods
outsl
cmp
cld
loop
dec
mov
popa
insl
inc
pushf
cmp
xchg
repnz
mov
push
loop
sbb
adc
or
dec
in
jbe
and
mov
dec
out
mov
cltd
jmp
insl
cmp
dec
ss
xchg
adc
in
sbbb
cld
jmp
mov
and
sub
stos
sub
mov
mov
push
scas
and
xchg
mov
mov
add
add
dec
scas
mov
repz
popa
scas
jnp
stc
ret
or
or
data16
subb
sti
sti
sbb
push
jns
shl
sbb
xchg
inc
inc
in
pop
mov
push
call
pop
or
xchg
scas
test
dec
cmp
jecxz
adc
push
mov
sti
xlat
cwtl
lret
les
das
icebp
mov
xchg
xchg
lock
jge
out
cmp
add
cmc
ss
mov
mov
stos
dec
adc
push
in
outsb
adc
dec
addr16
es
fwait
iret
je
sbb
adc
lods
or
jl
and
cltd
pop
ret
and
push
xchg
iret
cmpsb
scas
pushaw
sub
fwait
mov
jmp
out
mov
mov
pop
clc
dec
insb
mov
mov
jne
outsb
jne
clc
insl
iret
out
and
jno
jno
addl
xlat
das
or
inc
jmp
push
sub
xorb
fisubrl
sti
out
push
push
jmp
add
mov
pushf
les
dec
shrl
fucom
push
out
sbb
inc
or
pop
popa
adc
mov
out
pushf
xor
xchg
ja
and
shrb
out
inc
push
aad
xchg
jl
or
jecxz
mov
jns
xor
lret
jmp
mov
sub
pop
xchg
insl
jno
cmp
mov
xor
and
and
dec
lds
push
inc
repz
and
sub
cmp
addb
push
shlb
push
lcall
cltd
jbe
jmp
dec
dec
inc
repnz
pop
adc
enter
es
add
sbb
sub
xchg
lds
lods
cmpsb
mov
pop
sbb
and
xor
adcb
dec
add
cmpsb
mov
mov
aad
out
fists
cs
pop
xchg
xor
aas
mov
fimuls
cwtl
and
or
mov
jle
fwait
cld
and
mov
mul
int3
add
les
sbb
and
hlt
xlat
idivb
mov
les
ja
push
sar
dec
hlt
mov
mov
xchg
jne
mov
ret
in
push
jmp
mov
jp
int3
cltd
or
aam
gs
mov
andl
xor
sub
call
test
push
adc
aam
and
or
jb
jno
sbb
fnsetpm(287
stc
sub
xchg
mov
in
cld
mov
mov
push
xor
mov
das
in
out
nop
loope
fisubrl
push
inc
xchg
push
sub
jge
dec
xchg
jno
mov
mov
push
xor
sub
jecxz
mov
shr
adc
and
sarl
lret
mov
and
nop
mov
fldenv
shufps
nop
lea
jb
jno
jg
stc
pop
sub
lea
aad
es
je
lahf
fwait
imul
sbb
mov
push
add
jg
pushf
adc
gs
dec
jnp
inc
cmp
mov
pop
scas
ljmp
push
ficoml
mov
xchg
out
xor
fsqrt
imul
dec
cmp
lret
xorb
stos
in
popf
cmp
jb
cs
arpl
fdivrl
pusha
xor
js
pop
jo
fldl
out
scas
pop
es
mov
jg
mov
ja
or
sbb
mov
mov
out
in
in
push
mov
sub
jle
cld
aam
arpl
xchg
mov
arpl
xor
mov
pop
imul
lods
mov
fistl
call
add
adc
lock
xchg
insl
lret
jnp
mov
push
enter
sub
loop
das
xor
mov
cld
and
mov
les
dec
aaa
and
lea
jns
fdivr
cmpsb
xlat
aad
mov
inc
pop
data16
mov
add
push
lods
pop
mov
shr
add
mov
add
adc
ds
sub
add
inc
jbe
sub
ds
add
push
add
movsl
aaa
enter
ja
sub
push
in
fst
xchg
jge
jno
mov
enter
test
mov
mov
in
rcll
daa
data16
ret
sub
xlat
in
jno
cmp
xor
data16
mov
cmp
fildll
inc
sub
fists
dec
inc
inc
mov
mov
ret
inc
sahf
or
inc
lret
mov
aaa
repz
stc
sub
insb
jae
inc
mov
mov
loop
fcoms
sbb
lods
out
push
jp
xchg
pop
mov
popa
mov
jg
push
adc
jmp
add
pop
fldl
cmp
pop
outsl
mov
sbb
call
ret
push
movsb
notb
push
mov
jge
or
sahf
mov
push
cmp
cmpsb
adc
push
bound
hlt
addb
mov
mov
cmp
pop
test
into
mov
xor
or
mov
cmpsb
scas
xor
pop
sarb
enter
fnstsw
add
je
sub
inc
ljmp
outsl
cmc
insl
jo
pop
add
xor
mov
ror
mov
push
jle
jnp
pushf
jp
fs
fs
adc
inc
dec
xchg
cmpsb
ret
xor
das
mov
mov
das
or
push
es
orb
ret
loop
mov
xor
adc
pop
mov
inc
and
leave
or
imul
test
les
rcrl
fcoms
push
nop
gs
jle
add
mov
pusha
inc
repnz
in
jno
hlt
ja
lods
jl
ja
popf
lods
into
jp
cld
scas
jb
cmp
or
xor
mov
inc
mov
fcomps
stos
fdivs
mov
push
cs
or
dec
xor
scas
lock
popf
add
xor
cli
outsl
dec
cmp
and
lods
dec
xor
ret
outsl
shrl
dec
xlat
xor
shrl
in
subl
in
mov
mov
xchg
push
ss
jecxz
push
mov
shlb
inc
clc
test
jae
cmc
pop
sub
dec
cwtl
negl
test
shll
outsb
jbe
push
xchg
adc
out
aas
sub
stc
aad
mov
icebp
jl
sbb
jl
aaa
jg
xor
test
sbb
dec
push
add
mov
xor
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
or
fidivl
dec
lea
jmp
bound
ljmp
mov
aad
rcrl
loop
mov
insl
adc
fidivrl
fstps
mov
pop
out
shl
xchg
pop
dec
mov
mov
pushf
jl
and
push
fwait
xchg
inc
andb
mov
or
pop
lods
mov
out
xchg
inc
imul
lcall
cmp
mov
sub
push
lret
int
subl
push
aas
je
add
pop
lahf
dec
xchg
repnz
insb
dec
jnp
add
or
mov
je
in
add
into
add
std
jb
dec
test
ja
mov
arpl
daa
xor
push
lods
mov
xchg
bound
cmp
insl
mov
mov
and
out
in
mov
popf
mov
imul
and
data16
fwait
adc
jmp
das
mov
inc
outsl
jmp
or
lods
dec
xchg
dec
stc
fsubrs
fsubrl
mov
pop
cltd
fstpl
ret
and
mov
fs
mov
push
pop
incl
ss
test
stc
push
fimull
xchg
adc
inc
mov
lea
and
out
ret
dec
push
test
cs
xor
loope
and
mov
dec
in
scas
sub
ss
lock
test
fs
ret
shll
scas
pop
ret
push
pop
insl
and
jecxz
movsl
aaa
test
das
adc
popf
out
arpl
pop
dec
or
out
jl
mov
out
adc
subl
jecxz
std
pop
out
cmp
xor
gs
out
rclb
xor
aam
das
pop
popa
push
jno
inc
pop
int3
mov
mov
jne
fs
repnz
jmp
ss
bound
test
enter
sarl
adc
pop
sub
outsb
call
mov
insb
mov
inc
divb
loopne
lock
mov
fdivl
push
cmp
arpl
clc
sbb
mov
pusha
and
movsb
cli
dec
fmul
push
lcall
and
lods
cltd
ss
cltd
mov
jnp
popf
mov
aaa
sbb
sbb
pop
loop
sbb
lahf
lret
pop
movsb
in
sbb
jg
and
push
sbb
adc
cmp
and
push
push
jbe
loope
xor
loop
mov
popf
mov
and
dec
inc
rorb
and
cs
js
orl
add
cld
jmp
aad
adc
outsb
mov
jo
inc
stc
mov
es
rcll
mov
dec
adc
xchg
push
roll
mov
lret
popf
imul
dec
int3
xchg
sub
scas
push
inc
cwtl
ret
cmp
jg
rolb
mov
add
das
mov
jns
cmpl
call
and
cmc
imulb
and
stc
push
daa
pop
in
orl
int3
scas
fcomi
rcrl
mov
inc
jns
inc
outsl
cmp
pop
cmpsb
cmpl
test
inc
les
out
pop
push
dec
sbb
mov
push
adc
mov
cmpsb
stc
inc
sbb
rcll
mov
test
xchg
sbb
insb
mov
mov
or
mov
add
add
std
and
mov
adc
xchg
jns
dec
cmp
mov
jl
enter
mov
push
leave
add
mov
lret
xor
jae
xchg
mov
push
sub
and
mov
inc
add
push
ss
push
inc
mov
xor
and
sbb
and
movsl
cmpl
in
sub
mov
adc
xor
sbb
je
leave
icebp
sbb
mov
and
xchg
xor
push
mov
sbb
lea
or
inc
imulb
iret
mov
in
xor
cmp
mov
outsb
pop
add
push
insl
fbstp
leave
lea
pushf
enter
xchg
cmc
inc
js
ja
fistpll
push
mov
mov
sahf
dec
fstl
xchg
notl
adc
mov
or
mov
push
iret
popf
jecxz
sbb
hlt
ja
cmp
jp
ljmp
movl
push
push
push
jns
xor
xor
add
jo
mov
fisttps
sub
enter
xchg
iret
mov
pop
sar
test
fidivrs
mov
mov
lret
mov
subb
idiv
sbb
mov
adc
out
repnz
scas
loopne
mov
cmp
test
lahf
jl
inc
adc
xor
das
imul
fdivs
daa
push
adc
adc
into
cmp
pusha
xor
out
dec
std
xchg
popa
movsb
mov
push
sub
push
fidivrl
jbe
sbbl
mov
add
jp
mov
test
adcl
mov
jecxz
fiaddl
inc
addr16
and
push
xor
sbb
mov
jo
daa
call
scas
push
neg
push
or
cltd
repnz
sbb
and
fsubrp
sbb
fisubl
push
mov
push
pop
and
push
ss
sahf
popf
fidivl
mov
mov
inc
adc
ja
stos
mov
dec
xor
jecxz
jmp
adc
dec
push
mov
mov
outsl
shl
pop
and
jne
pop
or
outsb
cmp
call
scas
jnp
pop
mov
cld
shlb
inc
sbb
mov
mov
aam
mov
loop
jns
sahf
add
shlb
idivb
mov
and
outsb
loop
rcll
xor
dec
in
push
add
lods
mov
and
fnstcw
in
cmp
fisttpl
mov
js
push
adc
xchg
cmp
mov
outsl
jp
ds
xor
daa
sub
jb
cmp
ret
pushf
inc
out
mov
nop
scas
mov
mov
cli
nop
andb
mov
lods
repz
inc
in
inc
xor
das
mov
pop
jmp
fcom
fwait
and
insb
mov
jmp
xor
push
xchg
aas
mov
xchg
xchg
dec
xchg
or
and
sbb
add
or
loop
lret
dec
dec
or
ds
pop
xchg
in
cmc
dec
out
nop
mov
jecxz
nop
and
les
insb
rclb
dec
popf
jo
push
enter
pop
jge
mov
aam
push
add
mov
inc
xchg
popf
dec
xchg
rol
jge
cmpsb
mov
dec
and
mov
lret
fwait
xor
je
mov
loope
inc
or
fucom
xlat
hlt
xchg
jl
sbb
pop
or
jle
add
xchg
pusha
aaa
push
mov
lods
inc
fwait
ds
jbe
xchg
pop
mov
xchg
lcall
xchg
orl
into
adc
sbb
testb
stc
imul
jns
mov
aas
test
push
and
xchg
and
xor
sar
sub
xor
xlat
xor
mov
pop
mov
jecxz
jne
jb
add
repz
pop
aaa
out
imul
push
and
aas
pop
mov
stos
xor
ret
cmpsb
out
add
lods
cmp
nop
dec
pop
cmp
movsl
dec
test
mov
inc
std
xor
out
or
aam
dec
adc
or
jne
pop
iret
cwtl
mov
lds
pop
stos
test
aad
shrb
js
push
lret
mov
fsts
or
sti
jp
mov
call
xor
out
xchg
and
or
ret
cld
pushf
mov
lods
fists
pop
jge
in
repnz
mov
xlat
out
into
pop
inc
fdivrs
mov
xchg
cmp
pop
rol
or
jno
fmulp
lock
cltd
ret
dec
jl
imul
dec
ret
dec
pusha
jg
xchg
push
push
fstp
pushf
jnp
fisubrs
dec
repnz
or
int3
leave
lods
shll
jle
ss
daa
adc
xchg
xchg
inc
out
ljmp
mov
cmp
test
ret
adc
push
mov
jmp
jne
imul
pop
incb
inc
push
xchg
sub
pushf
sub
lods
lret
jmp
loop
int
xlat
sbb
jno
ret
xor
decl
inc
adc
jle
dec
sbb
je
push
gs
mov
out
push
jge
icebp
push
std
lea
faddl
in
and
or
fisubs
jg
fildl
push
jno
in
cli
jnp
les
addr16
mov
pushf
test
call
clc
jle
cld
add
aam
and
dec
imul
add
shlb
jb
jge
fisttps
cmp
xchg
cmp
leave
jnp
ljmp
pop
loopne
ljmp
or
dec
jmp
aas
mov
push
aaa
fbld
mov
imul
add
or
mov
insb
cmp
adc
fmull
pop
ret
sbb
mov
aad
loopne
aas
or
jle
mov
push
in
adc
mov
aaa
or
out
pop
mov
popf
sbb
enter
push
push
int
sbb
loop
out
ljmp
jp
push
insl
or
jb
mov
stos
push
xor
rolb
inc
mov
loopne
lds
jp
ss
add
push
add
rorl
out
insl
icebp
ret
jb
sbb
dec
xchg
mov
push
sbb
sub
test
jl
out
xorl
dec
in
das
loopne
adc
inc
insb
mov
xchg
mov
insb
pop
imul
mov
mov
push
adc
cmpsb
dec
xor
sbbb
pop
jle
mov
mov
movl
inc
dec
lods
fsubrl
jnp
and
mov
addr16
mov
shlb
jmp
jl
stc
mov
sub
push
xor
pop
and
inc
pop
je
dec
mov
add
shrl
mov
fdivrl
push
inc
aaa
lea
pop
adc
jbe
sub
xchg
adc
mov
cmp
mov
xor
es
subb
xchg
sub
test
cmp
andl
ret
loope
mov
xchg
pusha
sbb
out
lds
add
xor
mov
pop
ja
into
in
sub
lods
movb
lods
clc
sub
mov
rcll
ret
fsubrs
imul
mov
push
xor
mov
push
push
iret
cli
xchg
ds
jecxz
scas
mov
push
or
je
dec
rol
adc
mov
adc
and
jp
add
aaa
out
insl
cmpsl
in
xor
lea
mov
mov
mov
sbbb
outsl
lods
hlt
out
aad
fsubrs
pop
ficomps
out
rolb
adc
adc
jle
cmp
sbb
push
pop
jp
arpl
pop
jno
cmpsb
test
or
dec
pop
mov
jns
xchg
dec
sbb
fsubs
ja
adc
loope
cld
jp
mov
mov
pop
sub
ss
push
dec
sub
and
aaa
lret
mov
pop
sub
or
mov
aam
std
xchg
xor
add
stos
and
fxtract
int
aas
stos
adc
jns
xchg
cmp
push
scas
mov
nop
ret
sub
sbb
pop
sbb
sbb
sarb
dec
movsl
cli
loop
pop
cmpsb
mov
movb
xchg
pusha
aam
mov
into
xchg
frstor
clc
pop
ljmp
cltd
in
ljmp
test
cmp
and
mov
out
mul
cmp
xor
xchg
mov
add
xchg
lahf
inc
xchg
clc
pop
mov
or
and
scas
adc
cli
cltd
lods
or
scas
or
out
dec
mov
lds
xor
test
fsubrl
loop
and
lods
loopne
pushf
clc
mov
dec
ss
xchg
insl
mov
pop
aad
fsub
cmp
fldenv
xor
fwait
outsl
inc
push
divl
int
rcrb
pop
xor
lret
fwait
les
mov
dec
insb
cmpsl
gs
mov
and
xchg
and
daa
inc
and
mov
inc
mov
es
mov
and
ret
mull
out
mov
lods
pop
call
dec
cmp
inc
mull
out
push
into
xor
cmp
into
imul
orl
sbb
out
mov
or
mov
sbb
jg
sbb
and
sbb
lea
pop
inc
dec
sbb
imul
and
jp
out
mov
adc
push
das
lock
push
sti
std
sbbl
in
loop
inc
or
xor
cmp
in
dec
and
popf
inc
out
xlat
push
enter
in
inc
dec
mov
sbb
int
dec
out
dec
pop
dec
add
subl
bound
bound
mov
dec
adc
and
cmp
loope,pt
repz
mov
ficompl
fsub
and
jno
popf
test
and
mov
int3
mov
pop
cs
sbb
std
popf
mov
xlat
insb
jnp
adc
pop
andb
movsb
ret
mov
xor
add
imul
leave
inc
sbb
mov
fsubrl
cmp
lcall
out
xchg
leave
ja
cmp
ficomps
nop
and
call
pop
fs
sub
or
add
or
mov
std
cwtl
in
cmp
push
out
mov
call
divl
outsb
push
pop
lods
add
mov
mov
leave
insb
aaa
jno
xchg
xchg
xor
mov
mov
jns
xor
xor
and
sahf
je
dec
mov
cmp
mov
xchg
push
inc
xchg
lea
and
push
mov
test
sbb
adc
jno
and
inc
push
fmull
addr16
jo
pushf
mov
fstpl
pop
pop
mov
les
mov
push
mov
shll
xchg
outsb
out
lret
add
pop
cmpsl
jae
cmp
pusha
lret
xchg
daa
xchg
lds
xchg
rcrl
lret
jo
pop
outsb
xchg
adc
addb
xchg
aas
imul
dec
push
add
inc
out
and
mov
dec
jl
ret
adc
mov
inc
cwtl
bound
addr16
mov
in
cmp
dec
mov
js
stos
iret
ret
jecxz
js
pop
xchg
lret
je
mov
ret
add
adc
test
decb
xchg
bound
mov
push
jge
in
idiv
in
in
in
pop
loop
cmp
mov
or
lahf
xchg
popa
cmp
pusha
scas
or
mov
dec
mov
sub
nop
mov
dec
cs
dec
cmp
fwait
sbb
fdivs
mull
xor
dec
push
lods
shrb
jne
cmp
insb
push
or
push
xchg
imul
jmp
insb
jp
inc
mov
addl
dec
scas
pop
mov
je
fwait
andl
adc
lcall
cmp
mov
int
testl
insb
sbb
movsb
cmp
jg
lgs
out
fistpll
sbbl
sub
fbstp
jbe
add
push
mov
cmpsb
cmp
dec
or
jbe
mov
fistpl
idivl
rcll
add
mov
popa
sub
jle
rclb
mov
pop
mov
jno
jl
mov
mov
push
outsl
aaa
lods
fidivrs
cmp
and
inc
push
lcall
dec
mov
dec
dec
cs
dec
adc
dec
mov
push
aad
fdivrl
stc
repnz
inc
insb
in
ljmp
cwtl
adcl
sbb
push
lret
lods
pop
loopne
stc
jp
fwait
nop
mov
mov
jl
loope
adcl
xlat
mov
push
jno
xchg
les
aas
cwtl
xchg
cs
cmp
cmp
cmp
shrl
adc
js
stos
je
mov
adc
sbb
inc
in
push
lods
jb
mov
je
fnstsw
addr16
push
movsb
lret
pop
int
lods
mov
push
push
mov
xor
ljmp
dec
and
jg
mov
add
sub
pop
adc
xchg
arpl
ds
pushf
mov
lret
arpl
std
lock
pop
outsl
dec
push
out
pop
xor
fwait
pop
inc
fidivrs
out
es
fwait
imul
dec
pop
push
jle
jb
xor
push
leave
loope
ficompl
mov
jle
cli
aas
mov
outsl
pop
ja
jno
pop
dec
inc
add
push
sbb
test
daa
pop
xchg
add
cmp
sbb
std
jge
sbb
into
cmp
cmp
js
stos
incb
jae
xor
in
mov
inc
add
mov
out
jno
outsb
dec
mov
ficoms
fwait
xor
mov
loope
mov
roll
mov
inc
das
xchg
int3
pushf
push
adc
int
mov
adc
cmp
xlat
or
std
out
push
xchg
cmp
shrb
inc
pop
xchg
sub
pushf
lret
jmp
jb
jmp
or
mov
jne
int3
push
xchg
dec
adc
xchg
or
xlat
sbb
loop
hlt
leave
pop
xlat
jo
add
jae
pusha
sar
js
pushf
xchg
mov
clc
sahf
push
push
fstp
fstl
sbb
pop
add
mov
jae
add
xor
jle,pt
xor
mov
adc
lock
repz
and
pop
inc
popf
test
lahf
pop
adc
sub
mov
cmpsl
or
push
cmp
leave
or
add
push
mov
lds
mov
ljmp
jnp
add
xchg
sbb
subb
cld
mov
inc
xchg
negl
movsl
aam
stos
sbb
push
mov
and
and
imulb
or
push
pushf
sbb
mov
repnz
sub
inc
ljmp
leave
and
add
lods
jecxz
inc
push
fidivrs
push
mov
dec
mov
mov
cltd
pop
pop
in
push
and
jle
xchg
cmp
rcrl
pop
adcl
cmpsb
mov
addr16
push
test
imul
clc
js
push
cmp
cmp
leave
popf
data16
jbe
call
lcall
sub
jl
cmpsl
cmp
xor
push
jno
add
and
scas
vpsubb
or
mov
daa
in
jns
sub
rorb
sub
mov
jmp
cmp
dec
or
mov
shrb
or
push
pop
adc
mov
int3
bound
add
dec
mov
add
sub
mov
lea
stos
inc
fists
sbb
push
push
pop
lcall
adc
add
push
repnz
stos
jp
dec
sub
sbb
fistpll
in
inc
in
mov
adcl
ja
sbb
outsl
adc
mov
js
cwtl
popf
cld
lret
cmpl
mov
cmp
rcll
jns
xor
lcall
adc
mov
cmp
cmpsb
js
icebp
jnp
push
mov
xor
cli
loop
das
pusha
xor
inc
xchg
add
pop
fnstsw
iret
outsl
mov
xchg
pop
inc
mov
sub
stc
in
fucom
ss
sbb
adc
test
xchg
daa
ficoml
xchg
cmp
add
imul
sbb
ljmp
scas
xchg
fsubrp
daa
lahf
and
test
rcrl
mov
iret
push
outsl
cmp
sub
inc
inc
mov
jecxz
and
and
xor
sarl
push
out
sub
jg
jp
xchg
mov
aaa
mov
pop
push
dec
ja
sub
cmpsb
jbe
pop
pop
ljmp
ficompl
mov
mov
adc
test
inc
push
jge
and
repnz
xchg
inc
cmp
inc
stos
mov
nop
adc
pop
adc
or
sbbb
and
outsb
jns
data16
xchg
ret
nop
cmp
mov
pop
mov
sub
mov
in
cmp
push
mov
js
int
stos
pop
or
fisttpl
movsb
dec
out
in
fisttps
adc
jns
inc
imul
sbb
push
aad
push
out
negb
jmp
sub
outsl
dec
jle
jnp
mov
dec
mov
lcall
push
orb
sub
in
xor
adcl
sti
cmp
jns
test
sub
jg
bound
adc
loope
mov
pop
frstor
pop
cmp
mov
mov
test
aas
or
inc
cmp
jge
xchg
xor
das
out
nop
jae
repnz
pop
cmp
or
sub
xor
mov
cmpsl
lods
test
push
scas
jmp
hlt
arpl
fwait
adc
push
mov
repnz
mov
mov
in
jne
in
aaa
jo
lret
push
enter
std
repnz
rcrl
lods
mov
add
ss
jmp
mulb
std
inc
pop
gs
sub
ja
sbb
mov
fdivs
roll
pop
xorl
mov
sub
cmp
mov
cmp
mov
fists
xchg
fs
imul
lea
xchg
and
int3
push
enter
inc
cmp
pop
out
adc
shr
adc
out
cmpsb
bound
mov
rclb
inc
xchg
adc
sub
add
nop
lret
dec
out
nop
xchg
push
mov
idivl
jmp
or
mov
mov
sub
jbe
adc
pop
out
repnz
mov
add
out
scas
add
sub
loope
pop
mov
xor
mov
add
sarl
in
test
popa
dec
sahf
mov
or
mov
mov
push
mov
ret
inc
add
out
xor
push
lret
lea
lret
daa
frstor
push
cltd
outsl
pop
notb
or
jp
mov
shlb
test
int
repnz
mov
cmp
mov
shll
pop
sub
jl
jmp
dec
lret
jp
dec
dec
shlb
push
insb
lds
mov
and
outsb
adc
mov
aad
repz
arpl
imul
call
inc
adc
nop
out
cwtl
das
fstpt
sbb
int3
push
mov
mov
lret
pop
mov
outsb
adc
lods
mov
sbb
shrl
rolb
outsl
inc
flds
mov
fidivl
jo
dec
fs
lcall
sub
sbb
and
jbe
cmp
pop
pop
incb
and
aas
dec
jle
popf
pop
add
sbb
add
pop
dec
sbb
sti
cmp
push
mov
in
lcall
test
mov
jbe
incb
in
sub
popf
pop
and
inc
inc
push
and
dec
sbb
scas
outsl
loope
loope
repz
lods
add
xchg
shll
je
adc
mov
cmp
mov
dec
mov
cmp
and
fldcw
insl
lea
inc
mull
add
cmpsb
sbb
push
jb
sbb
adc
and
icebp
xchg
jg
and
repnz
mov
push
adc
fsub
pop
cmc
jmp
sbb
mov
mov
add
adc
sbb
cmp
imul
leave
orl
cmpsb
push
cmp
cmpsl
xorb
xor
sbb
mov
mov
fadds
ja
inc
mov
add
repz
or
pop
pop
adc
inc
adc
inc
hlt
push
outsb
in
add
inc
in
out
mov
test
mov
or
cli
aas
cmc
fidivrl
jbe
sbb
divb
sub
pushf
hlt
push
lret
daa
sub
fdivs
xor
daa
and
stos
push
mov
sbb
cmpsl
or
sbb
shlb
xor
xor
jns
sub
mov
mov
push
or
lock
call
xchg
aam
mov
xor
mov
aas
push
mov
inc
test
push
dec
mov
cmp
pop
js
test
movsl
or
push
cs
xchg
mov
shl
arpl
inc
clc
shl
arpl
outsl
push
adc
sbbb
movb
adc
aaa
jae
idivl
adc
pop
lret
jg
mov
hlt
pop
mov
xchg
xchg
lds
push
push
add
xor
mov
loop
sub
mov
xchg
fsubl
lods
cmp
push
das
aas
test
lods
orl
hlt
ror
push
mov
jge
scas
fwait
mov
pop
adc
or
jae
xor
xchg
aam
mov
adc
cwtl
std
ret
dec
mov
out
fdivs
dec
mov
cli
ret
stos
pop
xor
stos
or
fsubl
cmp
loop
adc
and
repz
ret
bound
outsl
xchg
int
add
nop
stos
dec
aam
jae
lcall
int3
and
mov
add
xchg
ret
dec
stc
sub
mov
or
iret
jmp
xchg
sbb
and
je
pop
js
inc
cmp
call
scas
cmp
lods
mov
imul
bound
dec
stos
aaa
xor
stc
pop
popf
xchg
popa
mov
mov
das
test
pop
pop
dec
sbb
add
aaa
test
call
pop
loope
enter
rol
adc
pop
mov
icebp
out
push
shlb
inc
outsb
aad
int
fsubs
ffree
je
cltd
insl
xchg
shrb
or
cmp
outsl
mov
push
mov
test
scas
into
mov
fmulp
aam
push
dec
cmp
pop
roll
push
push
adcl
dec
jne
push
mov
xor
insb
push
pop
lcall
lcall
adc
shll
mov
cmp
mov
js
mov
lcall
call
or
inc
xchg
insl
mov
mov
lock
and
pusha
sbb
inc
inc
andl
push
dec
enter
pop
mov
testl
mov
leave
stos
cld
jno
xchg
inc
dec
xchg
mov
cmp
mov
jle
enter
fs
ss
jp
mov
sub
dec
nop
das
sbb
inc
xchg
cwtl
inc
sub
in
inc
push
xchg
dec
cmp
mov
add
fmulp
dec
push
jne
dec
adc
jecxz
test
scas
add
lret
dec
insb
adcl
scas
jns
in
in
push
aaa
cmpsb
insb
in
test
jmp
aaa
inc
pop
aaa
movsb
movsb
mov
fidivl
add
sub
mov
ljmp
out
pop
and
or
push
or
and
aas
add
dec
lods
push
mov
push
adc
and
or
fnsave
pop
sub
adc
ret
jmp
shrl
ficoms
or
std
rcll
cmp
sbb
in
notl
ljmp
cmp
sbb
add
das
xor
jne
cmp
addr16
addl
mov
cmpsb
jmp
je
xor
lret
pushf
sti
sub
stos
and
lret
xor
cmpsl
sbb
inc
cmp
test
jle
mov
push
pop
mov
fadd
inc
mov
mov
or
iret
into
addb
nop
mov
incb
xchg
lea
pop
loop
rcr
jmp
sarl
fsubl
out
lock
aad
std
popa
ss
es
push
adc
lret
les
xchg
daa
adc
add
cmp
movl
and
cld
jno
inc
adc
sbb
xchg
xlat
push
add
jne
push
dec
or
jmp
ljmp
and
xor
xor
mov
adc
or
insl
sahf
push
push
shlb
xchg
lret
lods
add
xor
ljmp
icebp
popf
daa
xor
outsb
addr16
fnstcw
mov
mov
xchg
jnp
das
test
repnz
sahf
mov
imul
mov
mov
cmp
xchg
push
or
sbbl
fsubl
gs
int
daa
pop
lods
enter
xchg
aam
mov
lret
mov
jo
stc
insl
dec
or
rorb
aam
push
push
ja
mov
or
test
push
into
repnz
int
inc
xor
dec
pop
dec
cmpsl
jg
mov
and
adcl
fisubl
mov
xor
popa
pusha
mov
stos
es
das
and
into
inc
aas
inc
mov
jbe
das
adc
xchg
gs
imul
jl
aam
dec
or
cmpsb
clc
sbb
xor
js
rolb
inc
jnp
xchg
mov
xchg
mov
in
pop
aad
in
dec
repnz
jo
and
add
pop
fwait
out
push
mov
fsubp
xor
lret
cwtl
mov
hlt
addr16
dec
xlat
stos
cwtl
insl
push
dec
outsl
mov
and
cmpsl
adc
inc
mov
fadds
outsb
inc
sub
add
cmp
lcall
out
push
add
pop
movsl
xor
les
fwait
adcl
sub
add
inc
pop
lods
inc
lcall
push
rcr
repnz
insl
adc
lret
call
cmp
jmp
mov
xchg
popa
adc
scas
aas
adc
iret
les
push
mulb
pop
cmp
mov
xor
sub
inc
xor
stos
sub
andb
pop
adc
gs
push
daa
notl
push
test
jmp
push
jge
in
mov
cs
xchg
idivl
xor
aaa
jmp
setns
sbb
pop
nop
mov
cmp
or
adc
inc
sbb
push
lret
xor
stos
addb
sbbl
pop
add
mov
sub
rcrb
add
xor
jno
jmp
fstpl
jle
mov
lods
xchg
xor
pop
add
fisttps
aas
ljmp
add
popa
sub
sbbb
lds
jp
mov
aad
add
add
sbb
xor
sbb
ret
int3
enter
push
insl
lahf
sbb
mov
xor
bound
dec
enter
sbb
fs
ja
xor
jnp
sbb
cmp
gs
roll
xchg
sbb
sbb
std
jae
sbb
adc
aam
ret
jecxz
or
jge
mov
push
dec
jno
mov
adc
movsb
enter
adc
xor
fildl
icebp
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
int3
test
push
jmp
bound
mov
filds
pop
push
push
jb
or
and
rclb
clc
sahf
or
pop
into
icebp
daa
inc
mov
dec
cmp
cmpl
stos
xor
cmpsl
jle
mov
jns
stos
sub
cmp
adc
leave
idivl
pop
jae
xchg
test
cld
fs
cmpb
cmp
jb
sarb
mov
imul
leave
lcall
sar
jl
mov
mov
adc
xchg
dec
mov
outsl
or
in
sub
push
jecxz
fisubrl
add
xchg
inc
out
cmpb
mov
pop
jbe
ret
scas
push
scas
fwait
cmp
inc
mov
sub
test
dec
out
xor
das
or
jecxz
sub
ret
and
out
pop
mov
or
pop
or
and
scas
mov
ss
es
inc
xor
pop
dec
shlb
adc
mov
sbb
ret
mov
cwtl
sub
stc
cmpsl
scas
sub
inc
push
and
adc
xchg
shll
push
mov
leave
jns
stos
roll
shll
rdtsc
bound
cli
mov
sbb
movb
mov
or
in
xor
lret
dec
dec
mov
xor
data16
mov
jbe
ss
imul
mov
push
xchg
outsb
mov
inc
loopne
aad
push
jg
test
fwait
mov
out
add
cmp
testl
mov
add
scas
xchg
pop
add
int
sub
sbb
rclb
iret
add
push
or
jecxz
subb
or
ret
push
cmp
jg
cli
popa
mov
mov
ret
jb
test
arpl
loope
cmpsb
and
cmp
clc
mov
mov
pop
jae
xor
jbe
mov
mov
fldenv
addr16
popf
adc
lahf
mov
or
inc
data16
pop
rclb
push
mov
push
bt
out
push
cmpsb
hlt
mov
and
dec
mov
sub
addr16
loope
shll
arpl
cmp
sub
add
jg
mov
dec
pop
js
mov
enter
pop
imul
push
xchg
mov
ljmp
in
imul
scas
cmpb
cmp
jne
push
sub
sub
loop
cli
ljmp
aam
fcoms
dec
lods
jnp
in
add
leave
cmp
mov
xchg
pop
push
in
mov
stos
add
or
xchg
imul
mov
or
int3
popa
pop
mov
cmpsl
adc
sbb
int
loopne
cmpsl
pop
push
xchg
in
ss
cmp
popf
inc
ss
mov
dec
stc
in
lds
xorl
sub
in
gs
pop
psubusb
ja
ret
push
clc
daa
loopne
jno
fiadds
mov
clc
and
divl
xchg
mov
adc
sahf
add
jp
adc
aad
repz
xchg
pop
ss
into
out
xchg
js
leave
jp
jo
pop
inc
adc
jmp
push
xchg
pop
lods
lret
shll
sbb
inc
popa
arpl
adc
ficoms
mov
fildll
fidivrl
jmp
test
ss
xor
imul
dec
out
mov
ljmp
test
es
or
stos
push
sub
addr16
sub
or
mov
mov
xchg
and
ds
cmc
jo
shlb
inc
add
mov
adc
jmp
imul
sahf
mov
cs
mov
daa
cs
xchg
jge
pusha
jecxz
aaa
int
mov
adc
adc
mov
mov
incb
data16
hlt
add
gs
mov
into
inc
xor
aad
dec
jb
aaa
fs
xchg
cmp
ljmp
push
rcrb
cmpsl
cmp
mov
jns
cwtl
fxch
pop
das
jecxz
adc
xchg
or
dec
dec
pop
cmp
cwtl
es
rcrb
adc
push
cli
sub
push
out
xchg
fmull
add
sbb
jl
or
or
stos
push
push
ds
addb
mov
xchg
push
jbe
sub
bound
xchg
popa
mov
rcrb
xchg
mov
xchg
inc
add
and
add
cmpsl
jae
lea
jg
jp
adc
test
sub
inc
mov
rcll
cmp
movsb
inc
cld
dec
stc
mov
repz
jle
pop
popa
push
int
push
testb
jp
push
xor
cld
sbb
mov
xor
xor
loope
clc
outsb
in
js
call
mov
jbe
lds
mov
jb
or
push
xor
div
sahf
inc
mov
add
out
xchg
mov
xor
stc
test
mov
and
sbb
ja
cmp
xor
sbb
jg
push
gs
lods
notb
xchg
shl
jl
fmulp
inc
xchg
loopne
sub
cmp
push
rcl
push
xchg
xor
jecxz
lcall
jbe
shl
inc
push
fwait
mov
mov
mov
idivb
cltd
fs
xchg
cmpsb
jmp
sub
pop
fsubrp
fimull
push
inc
dec
jge
outsl
fnstsw
add
pusha
aam
cmpsb
ljmp
in
sub
test
repnz
or
sub
push
loope
xchg
xchg
xor
sub
adc
les
incb
daa
lahf
je
lea
adc
lods
outsb
fdivrl
cld
dec
int3
xlat
cmc
das
push
stc
cmp
fcomip
fldpi
jae
xchg
stos
cmc
mov
shrb
mov
cmpsl
jle
push
or
loop
js
xchg
mov
stos
out
xchg
dec
dec
aaa
in
and
mov
cmpsb
out
pop
mov
fs
pop
mov
dec
icebp
mov
js
shr
sbb
repnz
xchg
stos
fidivl
pop
pop
jl
dec
mov
mov
mov
dec
sbb
dec
xchg
je
test
mov
aas
lret
mov
jecxz
sub
ret
ds
cmp
sub
adc
pop
scas
jle
loopne
mov
psubd
and
cmp
dec
jbe
push
push
lret
in
sahf
bound
add
pop
mov
cltd
ret
aaa
jl
jge
jl
dec
add
int
iret
adc
cmp
push
push
lods
aaa
mov
jnp
out
add
jge
xchg
sub
repnz
cmpsl
imul
sub
rdmsr
adc
mov
adc
les
mov
insb
mov
jecxz
jg
jo
iret
pop
bound
cltd
jne
sub
lock
pop
rcll
adc
jle
mov
add
call
dec
loope
xor
jne
in
mov
jp
mov
cmc
pop
cwtl
mov
mov
push
repz
jle
mov
es
mov
mov
enter
cli
neg
loope
xchg
lcall
add
push
pop
pusha
into
sub
sbbl
ror
xchg
mov
jmp
and
pop
js
scas
adc
push
cmp
loope
mov
out
inc
cltd
or
nop
inc
inc
test
xchg
repnz
pop
ljmp
jecxz
std
ret
std
xor
faddp
mov
gs
call
inc
sbb
js
pop
xlat
ret
lret
mov
ret
cmpsb
sahf
sub
push
xchg
andb
mov
or
mov
shlb
aam
arpl
movsl
out
xor
xor
push
call
jle
into
mov
fsubrp
inc
adc
jnp
or
inc
loope
popa
dec
cmp
xchg
or
mov
fcmovb
mov
outsb
mov
push
ret
cmpb
pop
ficoms
pop
or
daa
aad
cmp
mov
out
or
adc
and
repnz
inc
xchg
jmp
sbb
out
repz
bound
pop
out
arpl
call
in
je
mov
loopne
hlt
daa
inc
pop
rcrb
cld
ljmp
and
aad
rorb
loope
push
jne
lcall
lods
push
jo
push
or
in
mov
sbb
jns
inc
mov
mov
jg
cli
push
adc
jno
inc
rol
dec
xchg
cmc
inc
sarb
cli
popf
ja
and
jno
lods
push
and
jbe
or
test
incl
cmp
push
loopne
push
nop
mov
scas
insb
lods
pop
cltd
pop
test
lods
mov
add
rol
js
bnd
xchg
sbb
fwait
push
xor
cmp
mov
aaa
xlat
inc
sub
in
jo
or
sti
jl
sahf
mov
mov
in
cwtl
mov
pushf
pop
pushf
push
sbb
sbb
cmpsl
sub
int
pop
hlt
lock
enterw
cli
mov
adc
jne
or
push
ss
scas
and
xchg
icebp
subl
adcl
addb
xchg
xor
cmpsl
add
insb
fs
ret
push
mov
adc
sbb
ss
adc
lret
pushf
sub
mov
iret
cmp
scas
lea
xchg
jno
jle
mov
sbb
loope
cmp
mov
data16
loop
sub
inc
add
mov
mov
faddp
jge
addb
bound
test
in
movsl
mov
xor
add
repnz
stc
repz
cli
addb
jecxz
add
sbb
cmpsb
inc
add
clc
mov
and
sbb
pop
jmp
mov
aas
jp
push
cmp
xchg
and
xor
mov
rcrb
repnz
ret
dec
jg
pop
jb
imul
popf
push
pusha
inc
loope
push
mov
dec
aas
sbb
out
and
push
push
dec
pop
rorl
pop
xor
repz
mov
lea
add
sub
hlt
mov
mov
cmp
push
pop
movsb
insb
adc
or
cs
cmp
scas
cmp
fmuls
jns
sub
adc
lea
cli
jnp
cwtl
aam
pop
jae
jae
and
mov
push
sub
shl
or
push
adc
dec
inc
popf
mov
inc
fcom
shl
rcrb
bound
mov
fldl
icebp
test
repnz
jge
push
mov
fldl
js
sub
sbb
inc
xchg
and
mov
mov
cwtl
sub
mov
jmp
fistpll
gs
or
jl
subl
aas
flds
inc
mov
adc
cs
arpl
pushf
imul
dec
mov
push
cli
pop
sbb
cmp
xor
gs
pusha
mov
inc
mov
sub
addb
int3
call
jmp
xchg
xlat
sti
xor
hlt
ds
popf
jmp
mov
gs
cmp
inc
cmpsl
add
fists
mov
dec
sbb
fcoml
shl
xor
nop
sbb
lcall
jle
sub
inc
cmpsb
pop
pop
jmp
jne
xor
aam
dec
adc
xchg
lcall
jae
out
inc
loope
cmpsb
sti
fcmovne
in
lcall
mov
xchg
lea
ljmp
stc
push
stc
mov
push
jle
xchg
push
sbb
pop
in
mov
inc
mov
pop
movsl
cmp
jbe
sbb
mov
int
add
mov
adc
sub
sbb
ljmp
pop
dec
cmpsb
ret
mov
mov
sub
mov
dec
fidivrl
rcl
out
and
adc
jp
push
in
xor
jecxz
xor
aas
jno
sbb
sub
ds
shlb
aas
outsl
add
loop
sbb
pop
mov
jb
cs
push
sbb
lret
pop
xor
shll
jbe,pt
rcrl
not
push
fldl
roll
add
cli
movsb
push
out
jge
mov
push
jle
sub
jg
xlat
shlb
pop
jnp
inc
lea
fildl
jg
sbb
jle
out
dec
addr16
push
test
fnsave
mov
adc
addb
sub
stc
pop
pop
test
pop
inc
jg
mov
aas
movb
in
add
addr16
cltd
cmp
jmp
pushf
jecxz
add
jne
rcrb
test
sub
inc
insl
std
jnp
je
imul
in
and
sub
adc
loope
aam
sbb
inc
or
mov
jle
cmpl
mov
jg
push
or
ret
jnp
adc
push
lret
and
sub
cmp
and
dec
aam
lcall
jg
xchg
pop
leave
adc
push
push
xor
outsl
je
mov
push
mov
stos
or
add
pop
leave
outsb
imul
lods
scas
add
hlt
pop
pusha
mov
leave
inc
sub
imul
sbb
push
inc
int
cmp
repnz
daa
mov
out
std
cmp
push
imull
pushf
sbb
sarl
adc
adc
adc
popa
aas
xor
dec
or
push
sub
and
cmpsb
xor
movsl
imul
std
push
mov
pop
les
mov
popf
xchg
rclb
and
out
loop
xchg
inc
fcoml
dec
in
in
cmovg
mov
sub
jo
mov
ds
lcall
xchg
pop
arpl
or
lea
jmp
pop
imul
lret
sub
ret
or
dec
jmp
popf
scas
adc
je
lea
push
add
je
push
jbe
inc
out
movsb
mov
sub
adc
jp
and
or
or
stc
jl
scas
and
push
fiadds
call
je
inc
jno
testb
lahf
dec
add
sbb
or
and
xor
and
aad
cmpsb
push
inc
xchg
inc
cmpsb
addl
jp
push
stos
xchg
jmp
add
dec
bnd
call
mov
dec
push
lock
or
mov
test
cmpsl
out
adcl
adc
lock
int3
inc
or
test
and
add
out
jle
decb
test
inc
mov
insl
jns
mov
sti
push
add
scas
cltd
popf
pop
test
bound
fwait
jnp
leave
or
cli
dec
out
adcl
mov
hlt
lea
push
ljmp
pop
jb
xor
and
adc
jge
inc
xor
decb
push
arpl
push
negl
ja
outsl
into
inc
pop
xchg
js
cwtl
and
lcall
loope
xor
das
jnp
or
pop
out
cmpb
sti
and
mov
pop
jno
jno
pop
xor
pop
bnd
mov
pop
sub
xchg
pop
das
jle
imul
jg
dec
jne
leave
movsb
stc
xlat
data16
mov
jnp
xchg
jl
and
lea
push
push
test
xchg
pop
lret
imul
stos
fidivs
ret
hlt
data16
or
in
call
into
ds
dec
les
fistpll
adc
mov
jg
movsl
insb
sti
pop
xchg
pop
push
xor
les
mov
lods
jl
jae
lahf
mov
and
mov
cmc
rol
push
icebp
fwait
iret
scas
cmp
icebp
xor
or
ficoms
test
mov
xchg
movsl
sub
fucom
loop
pusha
das
test
inc
les
lock
imul
clc
push
scas
jg
pop
jnp
jo
mov
stc
mov
adc
bswap
cmc
and
jb
mov
push
xchg
repz
in
jp
or
sbb
gs
pop
daa
xor
loope
test
adc
push
sbb
inc
or
scas
pop
das
dec
shl
xor
jp
pop
add
push
xchg
roll
aas
dec
sbb
sub
push
scas
mov
jge
insl
loop
sbb
or
xchg
sub
jecxz
stos
je
out
push
mov
shlb
sahf
push
ret
int
sbb
mov
or
aas
hlt
ret
jg
add
and
sahf
and
inc
xor
clc
mov
jne
or
cli
adc
test
sbb
cmp
push
xchg
and
aam
add
ss
push
adc
ret
sbb
sub
pop
mov
lahf
in
out
loop
inc
pop
mov
adc
std
jno
mov
fidivs
sahf
push
adcl
adc
mov
call
cmpsl
and
fnstcw
rcll
jp
xor
jnp
test
insl
in
jg
fimuls
mov
lret
test
adc
roll
aam
sti
rclb
sbb
xor
dec
popf
push
lret
out
test
pusha
sbb
dec
fst
ljmp
sub
add
cli
jg
cmp
lock
sarl
shrb
stos
outsl
xchg
xor
cmp
std
mov
jns
xor
loopne
add
mov
loopne
or
outsl
xchg
sbb
or
mov
sub
sub
outsl
cld
push
push
jle
push
jnp
jp
orl
sub
and
inc
xchg
cwtl
and
adc
sub
xor
sbbb
in
test
fwait
mov
pop
xchg
test
mov
cmp
movsl
ret
pop
aam
push
lods
add
push
and
jp
fsubl
push
jnp
sub
xchg
aaa
fwait
dec
mov
movsb
xchg
mov
jl
leave
push
arpl
push
adc
scas
push
mov
aam
mov
jae
and
lods
jecxz
inc
inc
mov
and
f2xm1
mov
or
imul
dec
leave
inc
sbb
add
pop
cld
repz
jge
jl
fiadds
xor
sahf
movsl
and
mov
sbb
stos
shll
movsb
mov
push
mov
imul
les
xlat
pop
sti
adc
iret
mov
enter
push
push
dec
push
das
adc
hlt
dec
xor
and
mov
scas
test
ds
sbb
nop
xor
std
jmp
cmpsb
loope
push
inc
sub
mov
stc
stos
inc
clc
and
xchg
jecxz
loope
mov
lock
int3
ret
sub
sub
je
test
xor
sbb
dec
aas
pop
ret
dec
mov
test
push
sub
push
aaa
pop
cmpsl
js
sahf
mov
inc
and
mov
jmp
popf
xor
lahf
xor
push
or
jle
or
xor
cmpb
jge
lock
mov
xor
adc
outsl
dec
mov
fucom
je
xor
btc
clc
jae
mov
and
movsl
xchg
mov
mov
xor
aaa
lcall
in
adc
or
push
dec
aad
mov
in
cs
or
pop
sar
xchg
lret
sub
pushf
out
mov
xchg
or
pop
js
inc
push
cmpl
pop
add
and
outsb
mov
fwait
push
inc
jmp
das
imull
cs
jne
push
add
stc
imul
pusha
incb
jle
fisubs
pop
pop
fcompl
fidivrl
mov
mov
pop
fs
cs
iret
fwait
cmpsb
aad
pop
fildll
jne
mov
stos
shl
fadds
jle
je
inc
call
xchg
jns
mov
in
outsb
sub
xchg
mov
mov
subb
push
push
loop
lcall
xchg
mov
cwtl
ret
insb
pop
jle
cmp
pop
stos
inc
aaa
cmovg
sub
push
and
data16
mov
dec
fs
icebp
int3
push
ljmp
frstor
or
xchg
ficomps
mov
inc
jge
in
jg
pop
mov
or
add
inc
fidivs
pop
push
stos
add
testb
cmp
xor
loope
sbb
mov
stos
pop
mov
push
xchg
cltd
xchg
push
je
rcrl
pop
clc
pop
test
mov
add
xchg
jl
ret
inc
imul
push
rorl
daa
sbb
jno
inc
mov
fldenv
xor
push
cld
fistl
in
sub
add
fwait
movsb
mov
inc
mov
adc
hlt
mov
add
mov
js
mov
jg
nop
sub
mov
lods
fimuls
fs
sub
add
jmp
sub
bound
fldt
cmc
dec
jbe
aad
das
push
test
lods
pop
rclb
shll
sbb
or
add
es
mov
pop
sub
out
xor
sub
xchg
jnp
add
mov
nop
insl
mov
cltd
push
jp
and
lea
cmp
lods
add
push
mov
test
jnp
dec
rcr
and
add
xlat
sub
cs
mov
adc
cmc
notl
popl
xor
push
mov
cmpsl
cld
pop
negl
jge
sub
mov
loopne
out
fimull
rcrl
push
cmpsl
cmc
xchg
adc
cmp
mov
out
mov
test
jmp
inc
mov
sbb
and
outsl
int3
mov
xchg
jmp
push
xor
test
inc
add
mov
mov
xchg
inc
cld
inc
cmpsb
mov
shll
insl
add
lea
fwait
pop
ljmp
dec
mov
rcr
gs
js
or
mov
sbb
out
mov
xchg
popa
sbb
lret
or
adc
aas
std
call
notb
jmp
shl
adc
pop
jl
pop
mov
mov
leave
daa
cmp
adc
mov
sbb
sub
cmp
push
fwait
aam
cld
outsl
inc
outsb
dec
test
jae
mov
dec
lods
xor
mov
pop
xchg
stc
xor
pop
jbe
aas
cmpl
aas
into
pop
dec
add
pop
pop
loopne
or
jo
es
jg
scas
mov
out
loop
lods
xor
je
jl
jp
into
cmp
mov
fwait
popa
out
sarl
sbb
mov
hlt
out
daa
inc
pop
arpl
enter
clc
add
fstl
mov
push
xlat
andl
hlt
inc
popf
adc
pop
shl
push
dec
aas
stos
movsb
xchg
or
xchg
dec
inc
or
test
push
sub
push
daa
mov
int
xor
cmpb
pop
and
scas
adc
xchg
fidivl
dec
and
sahf
loope
cmpb
bound
jne
sbb
cmp
mov
push
inc
fcoml
mov
stos
jb
out
test
imul
insb
bound
mov
push
inc
jbe
cli
cwtl
lret
sub
int3
mov
cld
sub
ds
mov
xor
xchg
pop
ljmp
mov
out
out
mov
jo
out
add
inc
mov
mov
mov
jge
fdivr
cmp
call
inc
push
ret
pop
das
dec
cltd
jp
pop
cwtl
ret
mov
or
incl
mov
hlt
daa
jo
push
shlb
rcll
pop
pop
and
pop
cmc
and
push
jecxz,pn
inc
pop
adc
mov
ror
leave
fisubrs
jle
insl
mov
out
or
lds
jl
out
mov
mov
lcall
jne
jl
stc
lods
pop
xlat
iret
cmp
int
xor
sub
mull
pusha
mov
fidivrl
stc
jecxz
mov
in
xor
orl
lea
xlat
mov
dec
cs
andl
out
mov
movsl
mov
sub
out
fisttpl
sbb
fs
in
lds
jns
repnz
dec
xchg
xor
fcompl
sbb
call
std
mov
mov
sti
and
out
scas
nop
js
sbb
dec
jb
sarl
jmp
pop
mov
outsl
xor
mov
popa
testl
lock
jne
test
pop
push
loopne
idivl
incl
fidivl
push
push
test
adc
add
lret
inc
in
mov
daa
hlt
push
jbe
mov
in
lret
test
xchg
jmp
test
rolb
push
mov
mov
push
shrb
cmp
mov
mov
pop
int
jmp
ljmp
xchg
sbb
out
stos
out
iret
or
xchg
or
lea
test
pop
aam
imulb
pop
fdivl
gs
pop
cmp
xlat
and
dec
clc
pop
cwtl
mov
inc
xor
nop
lods
mov
or
push
jmp
dec
neg
scas
or
pop
dec
ficomps
ret
sub
push
cwtl
aas
push
cmp
or
sbb
mov
xor
loope
sub
out
aas
push
pop
cmp
cmp
and
mov
mov
test
mov
sub
sbb
stos
or
push
mov
aaa
and
mov
test
fwait
dec
fwait
inc
roll
jl
mov
and
lcall
adc
inc
dec
sbb
cmp
mov
insb
xchg
sub
sahf
xchg
fdivl
jbe
into
dec
mov
sbb
mov
cld
fs
icebp
mov
arpl
mov
out
jbe
pop
loopne
lods
push
sarl
sbb
cmp
push
pop
addr16
call
movsl
cmc
pusha
pop
pop
add
cs
adc
jno
call
jb
in
in
push
arpl
inc
inc
dec
mov
lret
mov
test
inc
repz
dec
into
xchg
stos
aam
imul
icebp
pusha
mov
fdivrs
cltd
mov
mov
or
outsl
stc
in
in
pop
test
stos
and
jmp
pop
testl
and
adc
jbe
fsubrl
and
pop
push
js
cld
jle
mov
adc
out
mov
sub
sub
cmp
add
pop
hlt
lret
inc
das
push
sbb
pop
test
les
mov
dec
sbb
push
xor
jl
add
test
jne
xchg
mov
mov
mov
loop
cmp
xor
popf
in
lret
jnp
mov
in
adc
mov
aas
jecxz
mov
cmp
mov
xchg
bound
iret
and
out
dec
pop
jnp
mov
ja
inc
xchg
iret
std
stos
add
dec
nop
mov
mov
cmp
adc
xor
jnp
pushl
mov
add
push
mov
lds
fldl
sarb
mov
fdivrs
xchg
cwtl
or
ret
in
aaa
xor
int3
xchg
pop
nop
pop
xchg
sbb
jo
mov
stc
dec
adc
jno
and
dec
dec
jg
incb
fsubs
push
jg
and
test
lret
cli
cli
sbb
clc
or
push
cmp
bound
out
cmpsb
or
aam
int
jne
adc
adc
sbb
xchg
inc
inc
dec
xchg
fwait
push
mov
loop
sub
pop
sub
adc
cmp
or
push
jg
inc
mov
xor
lret
inc
pop
sbb
jp
mov
ss
cmp
insl
out
jns
xchg
push
cli
inc
movsl
jmp
push
sbbl
sahf
xchg
rcrb
cmp
jmp
sub
push
xchg
xor
add
mov
add
jbe
daa
mov
dec
inc
shr
fiadds
lods
mov
jb
pop
mov
scas
fadds
in
pop
shlb
lea
mov
mov
lock
sti
push
dec
cmp
cmpsl
push
rcll
push
push
pop
sbb
jnp
mov
jb
add
mov
cwtl
divl
call
xchg
movsl
xor
pop
cmp
push
shll
es
adc
aad
adc
iret
mov
cmp
das
movl
jge
ja
push
mov
fdivl
mov
push
es
jbe
xchg
sub
test
clc
out
mov
movsl
cmp
add
xor
or
or
or
mov
jl
cli
mov
jg
mov
cmp
in
out
cmp
pop
mov
jne,pt
int
adc
loope
pop
in
add
sbb
push
or
test
inc
int3
repnz
jp
mov
and
cmpsl
sbb
in
ret
jbe
lock
test
aas
adc
xchg
mov
fucomip
dec
sbb
loope
pushf
sub
dec
cmp
mov
xchg
jge
cmpsb
loope
fmul
sub
ljmp
cmp
andb
dec
sbb
cmp
dec
inc
cmp
sarb
notb
iret
fsubr
or
test
fdivs
lods
lods
hlt
mov
xlat
and
and
leave
push
mov
sbb
pop
dec
cs
sbb
mov
add
ret
cwtl
insl
arpl
jns
scas
and
dec
inc
outsb
addr16
cmpsb
adc
ljmp
and
stos
jno
mov
mov
movsl
scas
xchg
jecxz
imul
cmp
push
iret
hlt
lea
mov
insb
mov
cltd
cmp
cltd
dec
mov
or
aam
cwtl
jno
mov
mov
leave
jne
fsubrl
movsb
xor
lea
stc
out
je
inc
pop
inc
push
aad
mov
leave
rolb
mov
and
pop
idivl
jg,pn
sbb
sbb
lcall
mov
loopne
jl
sbb
rcrb
divl
insb
xchg
jns
arpl
xlat
je
repnz
sbb
mov
pusha
sbb
jae
shlb
xchg
repz
loop
sub
ljmp
ret
sub
cs
scas
les
mov
adc
sbb
sbb
dec
hlt
mov
xchg
and
mov
leave
in
aas
sbb
mov
sbb
ret
ss
xchg
or
mov
idivl
cmp
pushf
pop
adc
mov
add
movsl
xchg
hlt
push
ror
sub
std
dec
or
push
popf
jg,pn
test
add
scas
je
push
mov
sarb
adc
repnz
sbb
sub
push
xlat
pusha
mov
dec
xchg
jecxz
mov
rcrl
arpl
cs
pop
cmc
inc
jb
jb
call
mov
dec
lea
dec
mov
pop
enter
loope
jg
mov
imul
sub
pushf
xor
push
push
mov
in
sub
and
pop
sbb
or
ja
bound
pop
fsubrl
cmpl
in
rorl
lds
outsl
push
lahf
fdiv
xchg
ret
lea
mov
in
mov
fdivp
cmp
inc
dec
xor
fdivl
pop
lret
loop
insl
inc
jns
jl
arpl
mov
out
dec
out
xchg
roll
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
push
nop
push
jecxz
inc
popa
rcrb
xor
je
push
shlb
lret
push
movsl
dec
xchg
adc
imull
and
jne
inc
fcoml
cmp
ds
cmp
das
shlb
push
insb
push
call
iret
mov
mov
dec
jmp
sbb
jge
and
adc
add
xchg
mov
cmpsl
insb
push
enter
xor
pop
push
xchg
jae
ja
cmpb
mov
repz
xlat
inc
inc
fsubr
je
cmp
movsb
push
dec
jecxz
mov
or
les
or
lods
push
mov
hlt
inc
xchg
cmpsl
sahf
or
jo
inc
ffreep
mov
in
mov
mov
add
mov
jg
mov
sub
jecxz
xchg
xor
and
movsl
mov
add
sbb
jo
sub
jg
ljmp
pop
xor
adc
aas
push
mov
shll
pop
int3
mov
subb
mov
fists
inc
mov
fadd
jp
imull
adc
into
lea
leave
jbe
daa
addr16
out
and
jae
add
cld
movsb
xor
cmp
int3
pushf
cmp
mov
mov
cmp
add
xor
cmc
js
addl
test
mov
sub
jl
pop
loop,pn
adc
pop
rol
sbb
push
cli
sbb
loopne
push
mov
xchg
in
inc
mov
mov
cli
jecxz
mov
mov
ret
mov
inc
scas
xor
in
arpl
scas
jno
push
repnz
bound
fnstenv
cwtl
popa
adc
in
lret
inc
movl
jbe
sar
pushf
inc
push
push
xchg
aad
inc
icebp
sti
mov
stc
dec
xchg
xchg
xchg
jnp
xchg
test
sbbl
mov
das
dec
int
inc
hlt
mov
dec
sub
repz
out
popf
mov
mov
mov
mov
jp
mov
push
jge
jle
gs
jl
testb
xor
push
adc
repnz
pop
xlat
or
mov
mov
sbb
ret
mov
cmp
stos
mov
dec
mov
lcall
push
push
mov
fcom
jbe
enterw
idivb
lock
mov
push
jo
and
int
loop
fsubr
sbb
mov
out
sbb
subb
mov
test
out
mov
dec
lret
mov
pop
cmc
lods
mov
inc
jl
mov
arpl
cmp
sbb
enter
add
stos
jae
orl
aam
sbbl
lret
inc
insb
fwait
adc
sti
sbb
stc
push
pop
xorl
mov
or
in
and
jne
aas
jge
pop
inc
sub
cltd
sbb
insl
adc
add
xchg
lods
mov
inc
mov
cmp
stos
mov
cwtl
mov
fs
jns
push
cmpsb
iret
xchg
sbb
add
insl
es
jl
sbb
xchg
sub
in
pop
int
sbb
sti
add
std
sysenter
pop
jno
push
sarb
and
daa
adc
lahf
push
sbb
sub
arpl
je
in
lods
sbbl
iret
and
stos
push
xor
loope
int
cmp
test
mov
dec
xchg
push
inc
mov
push
clc
adc
stos
sbb
jecxz
cmp
mov
sub
cwtl
mov
push
imul
fimuls
pop
in
pop
arpl
jmp
xchg
les
xchg
xchg
sub
rcrb
cmp
out
mov
jae
dec
nop
mov
mov
fs
aaa
rol
xchg
mov
popf
imul
aas
mov
mov
pop
push
lods
popa
push
dec
out
dec
mov
lret
fimull
orb
cld
pop
dec
or
sub
push
mov
lcall
mov
pop
aaa
xor
pop
dec
mov
dec
push
sahf
mov
out
jno
mov
dec
call
jl
push
shlb
mov
fwait
imul
cmp
arpl
out
or
lret
rcrl
fadds
imul
mov
hlt
xchg
sub
adc
dec
dec
push
popa
add
repz
xor
jl
jb
xchg
or
adc
rcll
adc
ret
and
out
sbb
shll
push
shrl
inc
mov
push
adc
aad
add
ret
and
sub
inc
repnz
and
cmp
fiadds
outsb
test
rorl
test
mov
add
jecxz
mov
jns
adc
rcrl
jle
test
sbb
sub
push
push
inc
divb
lret
jg
lds
test
cs
jbe
add
jmp
adc
movsb
aaa
popf
sbb
lret
jno
mov
sub
leave
aad
pop
movsb
adc
sub
mov
arpl
rcrl
test
pop
xor
sub
cmp
and
push
jp
loopne
dec
cmp
push
fmuls
or
xlat
mov
push
adc
jno
lea
ss
add
aaa
movsl
call
cmp
shlb
cli
popl
cmp
aad
mov
fildll
push
and
adc
adc
xor
xchg
popa
andl
and
rcrl
push
adc
inc
call
jl
jbe
add
mov
push
or
les
insb
jl
jae
mov
mov
cmpsl
andl
cltd
pop
into
xchg
clc
js
inc
add
fimuls
lock
cs
fildll
push
out
dec
dec
lea
imul
inc
fdivrl
mov
mov
in
addr16
popf
lahf
fsubs
mov
pop
jnp
leave
or
int
add
shr
add
leave
out
mov
cmp
popf
add
xor
xchg
inc
icebp
push
imul
scas
push
xchg
out
popf
xchg
fs
ljmp
adc
cli
rcrl
sub
sub
adc
fdivrp
inc
mov
leave
push
lods
mov
and
lret
jbe
cli
je
jmp
mov
nop
pop
xorb
fistl
push
js
js
xchg
xlat
dec
mulps
pusha
pop
pop
movsl
inc
lods
cmpsb
push
adc
loop
bound
xchg
repz
xchg
lds
mov
mov
inc
jmp
sbb
xor
inc
sbb
push
xor
add
xor
sub
xor
jle
sub
xchg
in
fsts
shlb
rorl
rcrb
xchg
dec
mov
int
xchg
or
mov
aam
pop
mov
adc
sbb
lret
pop
loope
pop
fwait
xadd
mov
push
cmp
cmp
dec
lret
mov
dec
sbb
pop
roll
in
jg
mov
xchg
std
sub
pop
pushf
mov
cld
jge
cmp
and
cwtl
and
pop
xlat
ds
pop
and
xor
mov
imul
dec
arpl
mov
mov
fcompp
push
mov
pusha
insl
push
ret
mov
pusha
mov
inc
scas
sub
mov
mov
bound
movsl
pusha
scas
test
das
sbb
push
jno
insb
mov
shlb
int
dec
popf
sbb
outsl
xlat
xor
sbb
outsb
icebp
pushf
into
inc
fstps
in
or
rcrl
fistpll
cmp
into
mov
xor
pop
out
out
out
fstpl
pop
push
clc
mov
push
pop
inc
push
xchg
out
call
xchg
daa
fnstsw
shll
jmp
xor
mov
jne
or
adc
pop
in
packssdw
jb
cmc
sbb
jl
fistps
jp
push
cli
inc
mov
daa
ss
mov
pop
fdivrs
mov
sub
aad
cmp
push
loopne
or
mov
ret
rolb
dec
jbe
arpl
pop
mov
jo
adc
push
adc
pop
testl
jno
ss
pop
jge
or
adc
xor
add
jle
push
and
hlt
dec
or
xchg
push
mov
sub
pop
jbe
das
mov
in
cli
cli
pop
sub
fsubrs
inc
ljmp
xor
jmp
xor
mov
fisubl
sbbl
xlat
inc
imul
mov
scas
adc
mov
lods
jg
adc
fimull
mov
xor
jl
sbb
loope
lret
aam
rolb
mov
cwtl
inc
mov
gs
push
push
enter
shlb
loop
sbb
mov
stos
sub
stc
cmp
push
cmp
inc
pop
xchg
add
mov
inc
adc
addb
nop
lods
mov
fadds
and
add
scas
mov
out
enter
shr
ss
pop
jge
adc
sbb
aam
sbb
es
clc
nop
inc
sbb
ds
fs
cs
jg
or
jle
xchg
jle
and
jmp
pop
xlat
cli
fnstsw
sti
push
jl
popa
insl
scas
test
sbb
cmp
and
cwtl
aam
mov
and
in
lods
adc
xor
test
mov
lcall
out
mov
loopne
cmc
std
scas
pop
aad
push
in
repnz
push
stc
enter
sub
mov
or
xchg
jmp
shlb
mov
inc
rcrb
adcl
jbe
push
jae
push
jno
mov
mov
xor
out
push
jae
lea
dec
xchg
and
sub
in
dec
push
mov
shlb
dec
jmp
leave
repz
aam
aaa
stos
sti
push
pop
fildl
neg
add
xor
push
and
jmp
xchg
jno
xlat
jae
lea
les
mov
jecxz
sbb
or
jnp
stos
mov
push
pop
jmp
dec
push
idivb
in
fbld
mov
adc
xchg
out
sub
adc
cmp
adcl
push
stos
in
jecxz
imull
pop
push
cmp
push
test
pop
push
add
scas
lds
add
sbb
movsl
and
fs
inc
sub
xchg
xor
imul
fadds
and
xor
pop
in
pop
ss
push
insl
movsl
jo
nop
sti
push
shlb
fwait
mov
or
divl
mov
sti
popf
sub
push
call
cmp
js
sub
jmp
mov
push
out
dec
pavgb
aam
ljmp
mov
rol
lds
lds
xor
ja
inc
cmc
push
adc
lret
push
repz
mov
arpl
xchg
mov
stos
popa
mov
sub
lock
push
xor
inc
cmc
outsb
adc
aas
add
xchg
xchg
aam
xchg
adc
std
pushf
into
push
adc
add
dec
lds
data16
cs
ret
xor
jb
loop
testl
xchg
lods
push
pop
jo
fldt
xchg
or
hlt
ret
add
pop
js
pop
addr16
testb
lret
mov
pop
cmp
lods
inc
or
aad
push
sarb
xchg
les
incb
ja
addr16
loop
bound
add
loop
mov
jge
je
mov
inc
fisubs
dec
mov
mov
fdivr
loop
insl
cld
vsqrtss
xchg
cli
je
push
dec
std
scas
fs
call
mov
loop
jbe,pt
or
clc
into
mov
sti
loopne
xchg
xchg
push
inc
jp
cmc
aaa
jecxz
mov
jo
mov
or
pop
test
pushf
push
xchg
lahf
mov
jnp
imul
pop
lock
cs
js
mov
or
shrb
cmp
mov
xor
test
lods
cltd
jmp
or
ds
repnz
jno
rol
adc
int
cs
jmp
push
bound
or
mov
cmp
mov
scas
repz
test
and
loopne
sub
push
adc
icebp
out
xchg
cmp
movsb
popf
fmull
ret
cwtl
and
push
xchg
lods
sub
cltd
jge
xchg
int3
inc
pop
lahf
xchg
push
dec
popf
loopne
xchg
pop
in
out
jecxz
xor
sbb
ds
and
and
addl
inc
aad
icebp
sub
loop
adc
or
js
adc
negl
cmp
xor
sub
inc
mov
mov
les
ret
and
movsb
cld
sahf
cmp
enter
push
sahf
or
fidivl
imul
mov
xor
pop
out
leave
inc
pop
movsb
cmpsb
outsl
out
popa
mov
jns
adc
adc
nop
xlat
jne
scas
movsl
inc
dec
or
adc
sahf
aad
dec
jno
lods
sub
out
sbbl
cld
mov
fbstp
cmp
pusha
mov
iret
cmp
jg
jne
sbb
pop
inc
mov
rcrl
cmp
cmp
push
pop
jl
pop
es
add
dec
push
setne
lcall
dec
dec
cmp
repnz
xchg
test
out
clc
sbb
mov
xchg
gs
mov
cmp
jb
xor
repnz
dec
dec
bound
in
cmp
cwtl
mov
cmp
xor
xchg
and
jle
insl
xchg
pop
out
fmull
mov
or
add
repnz
sbb
into
mov
dec
popa
inc
insl
push
mov
popa
sbbb
movsb
push
sbb
adc
lods
out
mov
int3
or
pop
jnp
mov
push
mov
bound
jne
stos
das
push
sub
or
xchg
dec
aam
jmp
je
std
rclb
arpl
sbb
jmp
movsl
fbstp
inc
fwait
mov
xor
and
lcall
in
or
xchg
out
stos
test
xchg
scas
call
jae
or
jno
cmc
jp
gs
popa
pop
pop
or
fidivrl
mov
gs
add
cmovp
dec
pop
iret
cs
sub
hlt
pop
rorl
sahf
fs
repnz
inc
sahf
into
xor
fs
loop
pusha
stos
jl
outsb
push
and
addl
mov
mov
pop
mov
test
adc
mov
dec
shl
test
jae
mov
test
xor
gs
cmp
xor
insl
imul
scas
add
jno
faddl
sub
mov
mov
scas
push
ljmp
outsl
cs
pop
outsb
clc
push
scas
jge
imul
iret
lods
test
insb
pusha
mov
mov
sbb
rclb
push
mov
cmp
pushf
cltd
stos
mov
lods
sti
xor
aam
adc
cmpsb
add
rorb
mov
or
sbb
push
sub
cmp
scas
inc
pop
movsb
negb
dec
nop
aas
fistpll
xor
orb
je
scas
or
lods
std
bound
and
xchg
pop
cltd
xorb
add
adc
cmpsl
cmc
mov
out
rorb
or
pop
inc
push
and
cs
rcrb
adc
push
rolb
push
aaa
andl
rcll
fsts
jns
sarl
mov
mov
jnp
xchg
jb
xchg
add
mov
dec
loopne
xchg
or
sbb
lock
jg
pop
dec
out
push
xor
orb
mov
out
loop
xchg
lret
and
inc
scas
and
mov
inc
cmpsl
fsts
inc
rol
push
jnp
jmp
jns
pop
mov
xor
movsb
xchg
gs
push
mov
fmul
and
mov
fsub
movsl
leave
repnz
adc
scas
mov
je
and
aas
pop
loopne
repnz
add
daa
and
aam
gs
mov
push
das
push
insb
fucomp
cmp
jae
xchg
add
lds
mov
or
dec
sbb
test
inc
aad
cmc
xchg
loop
mov
stc
movsb
or
mov
out
sbb
mov
dec
cld
xchg
pushf
inc
scas
xorb
cmp
dec
xchg
fisubs
or
push
or
xchg
and
cmp
aam
mov
loopne
push
mov
cmp
jno
xchg
jg
pop
sub
add
xchg
jle
mov
mov
icebp
out
in
push
or
ds
or
mov
pop
shrb
mov
ds
mov
loope
test
sub
xchg
add
arpl
jge
pop
sub
pop
test
bound
lret
cmp
or
call
pop
in
imul
aad
pop
mov
mov
loope
test
and
xchg
jno
sti
mov
shrb
inc
pop
cmp
jecxz
mov
lahf
jecxz
lea
mov
and
je
dec
adc
ljmp
iret
xor
mov
ljmp
cmp
pop
repnz
ss
or
popa
cmp
adc
faddp
pop
pusha
sub
pop
fnsave
stc
loope
aad
inc
loope
stos
call
fucomi
nop
loope
mov
ja
adc
pusha
subl
lret
xorl
lret
daa
out
mov
adc
data16
popa
cmp
mov
jb
mov
test
mov
mov
mov
ss
daa
mov
in
lock
in
jl
lcall
fildl
dec
decb
int
into
mov
fld
sbb
cmpsl
jge
insb
loope
lds
andb
imul
xchg
xor
lret
xor
loop
clc
sub
mov
mov
sbb
push
xchg
rorl
leave
add
mov
and
add
je
mov
loopne
add
inc
lcall
clc
lea
lahf
jecxz
lds
pop
pop
int3
mov
jmp
push
ds
gs
and
ljmp
mov
add
pushl
xchg
fsubrs
lods
test
movl
pop
rcll
xchg
sbb
push
mov
mov
rcrl
cmc
rclb
ror
and
and
leave
mov
fwait
sbb
jnp
mov
cmp
jb
mov
sbb
jecxz
bound
fsubrl
mov
add
sbb
outsb
xchg
mov
cmp
shlb
enter
pop
xorb
cmp
pushf
xor
cmp
fprem1
mov
push
mov
int3
mov
sub
cld
fwait
dec
ja
in
mov
inc
out
leave
clc
pop
mov
jb
dec
in
pop
out
inc
or
add
and
pop
in
sbb
enter
gs
imul
fwait
cmp
insl
dec
add
jnp
mov
xchg
repz
inc
push
pop
sbb
xchg
je
pop
mov
stos
repz
ss
int3
dec
ret
dec
fmull
jecxz
mov
sub
jp
sahf
in
lds
dec
sbb
aas
daa
int
jnp
mov
sbb
jmp
adc
pop
push
xor
mov
lds
xchg
dec
and
jg
dec
mov
test
test
mov
repnz
mov
test
ljmp
gs
mov
cld
and
bound
or
mov
imul
rorb
lahf
sbb
pop
imul
fs
loop
xchg
lcall
in
jge
mov
fnsetpm(287
enter
es
scas
jle
inc
push
rorl
add
arpl
mov
bound
ss
inc
jp
xchg
and
xor
outsl
dec
cmp
cmp
out
cwtl
ljmp
xorl
pop
stos
cmp
das
movsb
loopne
imul
mov
mov
and
sub
inc
and
das
mov
push
decb
mov
out
orl
lret
repnz
cli
int3
mov
les
jne
cs
into
pop
adc
jp
pop
stos
fwait
aad
mov
push
dec
mov
rcrb
lret
adc
xor
mov
and
push
push
sub
movsl
add
xchg
or
add
test
xor
adc
jp
in
aas
leave
and
dec
subb
nop
jecxz
packuswb
mov
shrl
jne
jo
or
add
js
cmp
push
cmpl
pop
cld
inc
loope
out
in
jmp
in
into
loop
sbb
push
mov
inc
popa
or
inc
mov
pop
dec
inc
or
jbe
or
or
mov
jg
sub
or
or
sti
call
mov
push
repnz
pushf
std
dec
xor
cmc
popl
lahf
decl
jbe
leave
mov
inc
dec
xor
cmp
jg
lret
sub
ja
inc
jecxz
cltd
and
fs
into
xorb
mov
or
stos
sbb
movsl
jecxz
lahf
or
xchg
lcall
sub
pop
mov
imul
or
push
jo
mov
dec
aad
outsb
faddl
sbb
inc
pop
je
mov
in
icebp
mov
fimuls
mov
cmpsl
sub
mov
cmp
pusha
in
int
jle
pop
cmc
sub
loopne
jp
xor
fstps
jle
adc
xchg
loop
sub
cmpl
or
sbb
mov
cmp
mov
iret
cmpsl
xlat
clc
xlat
lcall
nop
or
fstl
pusha
daa
outsb
mov
lret
pop
xor
pop
dec
mov
sbb
jnp
mov
loop
add
lds
pop
fsub
mov
ss
sub
cli
in
aaa
cltd
sub
xchg
pop
dec
inc
or
xchg
scas
cmp
frstor
jb
mov
fisubrs
fs
jmp
push
out
xor
mov
int3
fldt
sub
ljmp
push
add
xchg
sub
mov
push
cld
insl
lods
add
jmp
call
push
mov
push
jae
adc
xchg
outsl
je
push
cs
or
inc
das
ret
cmp
rcrl
jmp
dec
pop
lods
xchg
mov
test
mov
sbb
movsb
mov
movsl
and
imul
btc
add
addb
aas
xchg
jae
adc
into
or
fistpl
jns
in
adc
pusha
cmp
rcrb
xchg
cmp
test
cld
punpckldq
arpl
adc
hlt
jbe
mov
lods
push
push
pop
mov
ret
mov
mov
pop
sbb
sub
negb
or
sbb
insl
push
fimuls
jne
inc
popa
jge
inc
cmp
dec
into
stc
dec
stos
loopne
out
in
push
mov
hlt
xchg
dec
mov
pusha
and
jmp
jbe
and
push
push
sbb
inc
scas
cmp
cmp
jg
ret
notl
call
ret
mov
adc
mov
lock
cltd
clc
stc
mov
add
push
fs
xchg
cmp
push
sub
mov
aad
jae
xor
jmp
repz
in
out
das
push
fs
xchg
cmc
xchg
or
mov
cwtl
out
sbb
lds
ret
mov
cltd
push
cli
pusha
sbb
sti
jo
cmp
cmp
xchg
test
mov
xlat
mov
inc
fstps
jmp
jns
adc
adc
cmpsl
cmp
push
push
hlt
sub
inc
les
push
inc
lcall
dec
clc
xorb
adc
fistl
aaa
jno
xor
loop
xor
lea
fiaddl
popf
movsl
cli
fucom
cs
sbb
out
in
sub
push
dec
add
adc
flds
fwait
fmul
push
cmc
cmpsl
mov
xchg
cmc
and
std
push
call
xor
push
popl
or
rorl
leave
sub
popf
lcall
test
cld
mov
out
call
sub
loope
cmpsl
xchg
sbb
out
push
lock
mov
push
xchg
clc
pop
jp
pushf
fwait
das
xor
idiv
pop
adc
inc
rcr
xchg
cli
repz
fisttpl
inc
xchg
mov
je
int3
xchg
cli
inc
scas
outsb
mov
daa
gs
lret
fsts
adc
test
movsl
stos
pushf
outsl
jmp
xor
or
aas
xor
adc
pop
sub
lods
cmp
inc
test
aad
popw
lods
imul
adc
call
inc
cli
dec
repnz
dec
cmc
pusha
mov
jge
add
add
aam
ficoms
inc
cli
into
lea
and
cmpb
fisubrs
rcl
pop
jle
addr16
mov
int3
inc
dec
dec
sbb
test
adc
pop
sub
das
shrb
mov
ret
imul
or
imul
stos
insb
aaa
or
aas
stc
gs
or
fldl
jns
sub
aas
pusha
pop
mov
mov
sbb
cmp
mov
inc
add
aad
lcall
and
jmp
popa
ss
xor
fwait
inc
loope
push
cmp
add
repnz
sub
or
lahf
das
icebp
or
xor
xchg
add
xchg
lods
pop
shll
push
mov
add
jp
std
sub
les
icebp
dec
lods
out
xchg
jns
out
cmp
shrb
inc
call
mov
mov
xor
or
mov
inc
call
push
xchg
aam
dec
loop
jp
mov
mov
or
push
out
adcl
mov
mov
movsl
fsub
jg
sbb
jne
loopne
pop
out
les
cmpsl
out
arpl
adc
mov
sub
gs
jb
and
mov
loopne
adc
fadd
mov
outsl
mov
imul
jge
in
les
ret
fcmovne
sub
scas
mov
xlat
xor
jg
test
add
and
bound
gs
xor
sbb
mov
sti
push
popa
jecxz
adc
stos
int3
ret
mov
orb
sbbl
adc
inc
and
cmpl
sub
pop
pushf
push
mov
mov
call
jecxz
ret
test
xchg
add
inc
mov
cmp
jo
pop
sbb
ja
push
fucom
xchg
int
inc
sbb
movsb
js
mov
xchg
sub
sub
mov
push
and
cmc
sbb
push
shll
adc
dec
jbe
bound
jge
push
xchg
out
dec
or
jmp
movsl
outsl
test
repnz
iret
add
daa
fdivs
mov
mov
add
cmp
pushf
movsb
inc
add
notb
insl
push
cmpsb
call
imul
mov
inc
popa
outsl
dec
repnz
int3
mov
mov
sub
sbb
call
mov
jb
movsb
orl
lods
clc
test
xor
adcl
adc
sbb
mov
jbe
mov
inc
cld
mov
push
xor
jl
int3
cmpsb
lret
push
lds
shrb
or
mov
addb
ss
out
sbb
and
test
popa
fwait
subb
sub
cld
adc
jp
mov
push
sti
jp
sub
mov
jne
push
faddl
add
loopne
sbb
push
orl
repnz
push
and
mov
dec
inc
in
int
andb
jecxz
popf
inc
stos
or
cmc
jnp
push
out
data16
cwtl
out
bound
loopne
ret
nop
and
loop
cli
subb
adc
lea
pop
js
xchg
jge
add
into
xor
rolb
add
sbb
cmp
int
and
jbe
loopne
mov
scas
sbb
lods
pop
xor
out
xor
addr16
mov
subl
lahf
daa
xor
data16
rolb
jle
dec
popa
xor
in
xlat
nop
xlat
jno
jno
xchg
sbb
cmp
cs
dec
push
xor
nop
mov
mov
cld
dec
sahf
mov
ja
cmc
and
pop
xchg
cmp
mov
sbb
ljmp
mov
push
call
sti
arpl
push
adc
xchg
aam
inc
sub
and
mov
int3
into
out
cld
cli
gs
mov
cwtl
push
fwait
and
aam
in
push
fwait
pop
pusha
mov
pushf
jne
mov
fwait
inc
jns
adc
jns
fsubp
orb
and
cld
xchg
mov
add
xchg
shlb
out
mov
rclb
test
sub
mov
xchg
xchg
dec
lods
and
inc
pushf
ja
scas
jnp
mov
std
pushf
xlat
adc
sbb
sahf
repnz
dec
sub
xlat
push
xchg
enter
push
push
mov
fyl2x
fstps
mov
sti
dec
push
push
xchg
stc
and
add
push
loop
jle
das
fdivs
inc
cwtl
rorl
ror
pop
and
das
enter
xor
fnsave
lea
cmp
stos
inc
aad
xchg
into
sbb
inc
mov
loopne
jg
mov
and
or
data16
enter
ret
daa
add
cltd
sbb
push
dec
cwtl
aas
mov
and
push
in
mov
addr16
jecxz
push
iret
fidivs
add
pop
in
int3
pop
xlat
sbb
insb
sub
out
cmpsl
fcomps
stc
mov
mov
stos
pop
ret
sbb
adc
mov
push
xor
lret
add
xchg
ja
mov
jg
scas
lds
adc
mov
dec
mov
xlat
cmp
xchg
jno
mov
lret
aas
jne
loope
mov
or
cs
call
loop
sub
lds
jmp
cli
test
xor
inc
or
rclb
cmpsb
cmp
or
cltd
sbb
cmp
lret
inc
add
leave
xor
cmp
jno
test
daa
mov
pusha
jge
jge
jns
push
push
pop
pop
mov
das
call
andb
aad
pop
cmc
sub
lea
cmp
clc
inc
ret
sahf
ss
push
mov
cmp
sub
leave
push
fimuls
test
ss
sbb
stos
mov
andb
jo
push
dec
das
sub
jns
jns
push
aaa
dec
sti
dec
xchg
lcall
xor
in
dec
mov
sub
cli
stos
push
jno
xchg
fisttpll
jecxz
or
fstpl
adc
cmc
test
std
push
movsb
sub
mov
add
jl
xor
dec
mov
je
pusha
loopne
or
mov
cld
vpunpcklwd
imul
cltd
push
in
adc
sbb
sahf
add
test
and
cltd
mov
imul
loop
mov
push
inc
push
test
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
rcrb
daa
cmp
out
lahf
stos
in
incb
sub
nop
popf
movsb
flds
in
and
inc
int3
mov
xchg
pop
das
mov
mov
dec
test
jecxz
ret
loop
in
push
mov
xor
loop
insb
pop
mov
adcb
in
testl
fdivrs
ret
popa
pop
xor
pop
jg
add
int
push
test
insb
ror
in
insb
add
add
mov
add
push
les
sbb
outsb
push
mov
mov
fwait
imul
jl
lea
xlat
outsl
fisttpl
mov
and
and
dec
sub
inc
dec
aam
or
fwait
bound
in
sbb
leave
fistpll
cmpsb
mov
in
and
lret
stos
and
fs
ret
testl
add
loopne
movsl
pop
jle
add
stos
xor
or
pop
push
xchg
jl
leave
mov
lahf
stos
mov
imul
inc
and
sub
movsb
mov
adc
push
out
mov
aam
sbb
sahf
sub
inc
push
clc
repz
repz
push
add
xor
fnclex
ja
jns
iret
cmpsb
xorb
mov
jge
mov
daa
sbb
cmp
push
pop
mov
mov
push
popf
jle
sbb
jb
push
xchg
xchg
xor
jbe
in
dec
lret
clc
inc
imul
sbb
cmp
lods
cmp
xlat
cmc
mov
and
jno
pop
jle
ficomps
add
hlt
pop
lea
inc
roll
mov
xchg
int
xor
test
mov
or
push
rorl
bound
add
popf
cmpsl
xchg
testb
out
sub
push
push
scas
aad
out
js
push
insb
xchg
jne
dec
dec
cmp
aad
std
mov
pop
das
jne
dec
sub
adc
cmpsl
dec
les
fs
adc
daa
sub
inc
xlat
ficoml
stc
cmp
ret
ja
push
sbb
add
mov
psubq
and
or
outsl
mov
lret
das
sub
inc
xchg
rcrl
push
aam
out
pop
xchg
cmp
inc
add
std
cmp
fists
test
ss
dec
fsubs
test
cmp
hlt
jae
or
adc
sbb
test
sbb
stos
jge
cmp
shlb
push
mov
mov
sub
movsl
mov
sbb
cwtl
dec
mov
lock
loop
shl
cmp
stos
movsb
fidivrl
sti
push
lock
cmp
out
and
mov
push
mov
or
xor
dec
cld
mov
xor
pop
push
dec
push
cs
sbb
push
jns
fistpll
ljmp
or
repz
xor
aas
cltd
ja
pop
dec
cs
mov
sub
jmp
push
push
daa
xlat
gs
xor
mov
xor
jbe
repz
push
lods
sbb
mov
inc
mov
mov
xchg
inc
movsl
push
sub
push
jg
nop
and
ret
jb
pop
xor
test
sbb
sub
mov
xchg
bound
mov
mov
icebp
jo
or
mov
cmpsl
shll
arpl
lret
loope
imul
sbb
iret
mov
jb
js
pop
xchg
dec
bound
push
out
pop
sbb
arpl
ret
xor
xchg
cmp
es
ss
imul
add
mov
fwait
jne
cmp
jle
ss
sbb
mov
cmp
ss
pop
jmp
lods
cmp
inc
iret
rcrl
arpl
jnp
push
popa
cmp
dec
inc
cli
aas
ret
pop
xchg
int3
imul
jl
mov
lret
stos
fstpt
pop
orb
pop
sar
inc
cs
xchg
icebp
push
orl
adc
push
test
int3
cmp
scas
sbb
jno
pushf
shl
xchg
adc
dec
jb
mov
pop
scas
jae
mov
lcall
mov
push
adc
push
pushf
outsb
movsl
pop
mov
pop
cwtl
movsb
cmp
and
int3
inc
lret
mov
xchg
lea
dec
in
pop
aaa
push
cltd
cmp
and
cmp
push
test
dec
mov
lods
and
mov
jb
mov
dec
mov
sub
mov
xlat
icebp
repnz
xchg
xor
dec
stos
cltd
repz
adc
mov
jmp
sub
pop
dec
cli
lock
sub
mov
and
sub
jg
mov
adc
and
inc
sarl
sbb
sub
dec
xor
fidivl
hlt
inc
push
inc
notb
loope
xchg
lods
and
pop
enter
into
inc
push
sbb
mov
push
fildl
cltd
fucom
test
xchg
mulb
xchg
pop
popa
dec
cltd
adc
or
push
or
cmp
and
jbe
lcall
mov
dec
or
pop
pop
pusha
lock
fisttps
aad
dec
xchg
daa
pop
sub
and
cmpb
pop
inc
enter
ljmp
xor
sbb
sar
call
sbb
sahf
pop
out
xor
inc
mov
jbe
sub
adc
and
movb
popa
xchg
cmp
arpl
cmp
xchg
xchg
repz
push
js
pusha
and
cli
lahf
out
pop
push
int
push
repnz
pushf
ja
dec
test
dec
test
jle
pop
ret
sti
xchg
xchg
and
add
iret
cld
test
sbb
adc
inc
lcall
nop
rclb
in
lds
mov
pop
add
scas
fs
faddl
jo
push
xchg
sub
jnp
adc
push
add
stos
cli
mov
clc
cmpsb
subb
push
pop
and
les
hlt
into
hlt
lock
nop
adc
scas
pop
lcall
int3
dec
mov
xor
rolb
rcl
enter
or
and
push
into
sti
jmp
jne
xor
push
les
jl
enter
dec
jne
xchg
dec
mov
test
nop
push
dec
lock
push
aam
push
xorl
dec
xor
adc
push
push
add
push
into
jne
mov
ret
push
push
cmp
push
adc
xlat
enter
test
fimuls
in
jp
add
lea
pop
int3
pop
jo
mov
imul
mov
cmp
loope
fnstsw
adc
mov
or
clc
mov
xlat
pop
fstl
or
jno
loopne
mov
in
fadds
pop
xor
sbb
mov
xchg
sub
cld
xchg
cmpsb
sarl
adc
xor
cmp
jle
xchg
int3
arpl
and
and
add
ret
adc
rorl
pusha
or
into
xlat
popa
mov
push
mov
mov
adc
push
or
pop
gs
inc
add
int3
cmp
cmpsb
rorl
push
loopne
mov
js
mov
pop
fidivrs
clc
xor
enter
not
popf
sbb
sbb
mov
jbe
pop
mov
sbb
repnz
push
add
pop
jne
cmp
mov
pop
xchg
enter
mov
jo
shrb
je
insl
xor
popl
cmpsl
cwtl
ds
loopne
insb
mov
jle
cmp
fimuls
sbbb
mov
cmp
out
movsl
push
scas
orl
adc
mov
repz
adc
push
pop
xor
push
inc
and
and
jno
jb
cmp
shrb
lahf
xchg
fadd
cmpsb
mov
sub
inc
add
cltd
enter
push
leave
sbb
xchg
inc
jg
dec
inc
pop
xchg
rol
adc
call
mov
xchg
test
adc
lret
clc
xor
sub
in
repnz
shll
xorb
mov
jo
xorl
fmulp
jbe
fstpl
ds
xor
je
xorb
inc
add
pop
outsl
addr16
dec
lods
pusha
xchg
popf
push
aam
or
das
xor
int
xchg
aaa
aad
push
pop
cld
dec
sbb
adc
adc
mov
cmp
jno
test
dec
repnz
stos
ret
cmp
sbb
lods
loope
fisttps
mov
push
xor
inc
pusha
inc
pushf
int
dec
popf
pop
pop
pop
mov
in
xchg
aaa
pop
cmc
cmc
xchg
lods
subl
xchg
cli
and
jge
cmp
cld
test
cltd
inc
imul
mov
or
mov
push
jle
fprem
push
pop
and
popa
std
sbb
xor
sub
inc
out
testl
pop
pop
mov
gs
pop
mov
cld
dec
jae
jge
les
std
xorl
jne
outsb
sbb
lods
jno
sub
jecxz
xchg
insl
cwtl
xchg
jp
cmp
bound
mov
inc
mov
mov
mov
rclb
hlt
leave
cli
cmp
add
push
adc
push
add
dec
fwait
cs
icebp
rorl
sahf
repnz
ja
jecxz
jno
stos
add
sub
xchg
or
repz
push
stos
lods
mov
cltd
xor
dec
cltd
jecxz
cltd
mov
inc
cmp
fcomps
fnstsw
scas
fisubs
scas
hlt
pop
icebp
and
shrl
bound
out
sbb
cmp
mov
or
scas
cli
jns
jl
das
jg
shll
daa
and
gs
cwtl
dec
stc
je
out
punpckldq
mov
lea
inc
jp
and
icebp
xor
mov
imul
adc
mov
jmp
aaa
xor
inc
adc
in
or
pop
mov
mov
sub
inc
xchg
jb
jne,pn
fucomip
xor
jnp
andl
cli
call
jge
cmp
imul
jle
mov
sahf
into
mov
gs
dec
or
jg
push
out
cmpsl
fsubrs
rol
jno
mov
sbb
adc
lret
and
pop
out
sbb
rcrb
xor
bound
ja
movsl
div
jb
inc
mov
mov
std
nop
or
adc
mov
movsl
pop
in
mov
lods
dec
mov
out
push
arpl
ljmp
jb
adc
add
shr
pop
mov
sub
imul
xchg
fnstenv
mov
xchg
and
or
sbb
out
ret
cs
cmp
dec
jnp
pop
xchg
lea
xchg
test
out
cmp
and
fbstp
cwtl
xchg
xchg
pop
adc
in
mov
push
sub
cmpb
in
mov
jmp
shrb
dec
inc
loop
adc
sub
ljmp
mov
dec
shrb
mov
pop
enter
ret
inc
push
shll
mov
ss
popf
adc
test
xchg
pop
in
shrl
fwait
out
and
add
add
outsb
cwtl
mov
leave
jecxz
mov
push
dec
int3
xchg
and
xchg
pop
cmpsl
ds
loope
pop
les
pop
push
fidivrl
clc
mov
pop
jb
enter
outsb
cwtl
data16
outsl
movsb
mov
ja
stos
cmovbe
outsb
cltd
xchg
mov
lahf
mov
test
andl
mov
adc
pop
sub
ljmp
aad
mov
shlb
ja
and
sub
outsl
in
xchg
nop
cmpsl
sbb
mov
call
mov
and
roll
stos
xchg
nop
lods
ror
jmp
mov
es
push
lret
xlat
or
mov
les
and
in
inc
xor
sbb
lea
xchg
pushf
or
lret
inc
repz
imul
outsl
divb
cli
jl
das
add
test
repz
xchg
das
pop
mov
hlt
cmpl
pop
shrl
mov
movsb
dec
sahf
mov
xor
push
jbe
mov
repz
jg
add
pop
push
imul
xchg
and
test
pop
pop
fidivrs
jne
or
mov
out
and
das
into
jge
push
es
pop
and
fidivrs
add
loopne
clc
movsl
mov
pop
call
call
dec
cld
inc
inc
cmp
arpl
lock
loope
jnp
sti
out
call
xor
xchg
mov
fdivl
sbb
int
adc
xor
pop
bnd
push
pop
push
add
insb
jnp
dec
ljmp
and
mov
inc
js
into
insl
adc
xor
cld
pop
sub
mov
sub
nop
xchg
pop
pushf
mov
dec
ret
mov
or
add
pop
inc
repz
or
sub
into
test
aad
outsl
add
adc
sub
scas
add
mov
xorb
lods
mov
scas
bsr
loop
cld
js
sbb
pop
xchg
mov
jge
nop
movsl
jmp
jnp
add
imul
flds
test
movsl
enter
push
hlt
or
stos
shrl
xlat
jae
or
pop
adc
shll
cld
or
aaa
inc
roll
push
imul
xchg
insb
hlt
mov
pop
sti
and
adc
sbb
std
xor
in
outsb
dec
cli
inc
iret
mov
inc
cld
jmp
cmp
xchg
mov
sarl
or
loopne
mov
xchg
mov
xor
sahf
push
dec
add
fldenv
les
sbb
and
ja
xor
ja
shrl
push
or
or
outsl
sub
push
jo
jbe
sahf
ret
aam
mov
dec
cltd
std
mov
push
out
mov
aaa
mov
xor
mov
push
or
mov
and
fsubr
mov
cli
xchg
adc
sbb
mov
rolb
mov
jbe
inc
mov
lods
aas
stos
test
and
mov
pop
pop
pop
addr16
push
mov
daa
xchg
add
test
vmwrite
je
hlt
xchg
jle
clc
loope
dec
loopne
leave
sbb
push
je
clc
xor
cltd
cmp
fcmove
mov
add
and
fisttpl
arpl
fdivrl
hlt
lock
sti
lock
test
negb
sarb
cmp
sub
cmp
lcall
adc
xor
fwait
ja
mov
sub
inc
cwtl
sti
adc
out
fistl
pop
jmp
lcall
add
push
pop
dec
ja
or
nop
cmc
lahf
in
mov
fistl
xchg
push
xchg
jne
push
movsl
scas
loope
xor
lret
insl
or
les
and
dec
shl
ja
mov
xchg
stos
mov
or
inc
pop
inc
fstps
add
xchg
adc
push
ss
adc
fs
xchg
sbb
int3
or
jecxz
dec
add
mov
orl
out
adc
push
lret
jg
mov
aas
aam
inc
xchg
fstpl
xor
enter
mov
sub
lea
dec
je
add
push
out
loopne
in
inc
call
xlat
fdivrs
movsb
test
je
sbb
shrb
and
test
shrb
dec
push
push
loop
jecxz
mov
cld
xchg
jo
ja
dec
xor
fsubrs
jne
roll
pop
adc
lds
xor
adc
add
icebp
add
test
gs
out
imul
inc
jo
cld
fsubrl
into
mov
int
inc
lock
pop
mov
cli
adc
mov
adcl
hlt
pop
loop
mov
add
ljmp
loopne
push
jl
cmp
and
scas
out
lret
movsb
iret
adc
sti
popa
push
aam
stos
sub
pop
cmp
mov
into
xor
cmp
push
xchg
sub
repnz
jp
in
ja
test
pushf
cwtl
xor
testb
aaa
lods
jb
cld
ja
dec
ja
out
cmp
lret
mov
addr16
popa
loope
jmp
xchg
and
jecxz
pop
jae
inc
cmpsb
fists
pop
mov
add
stos
sarb
xor
push
adc
dec
lds
and
aaa
and
sub
insb
test
lcall
pop
stos
adc
nop
ds
bound
mov
inc
and
xchg
fadds
xchg
cmp
jge
addl
dec
push
mov
stos
aam
push
xor
cs
cwtl
xchg
lds
dec
pop
dec
cld
pop
and
and
add
cmpsb
push
mov
call
jg
mov
xchg
mov
cmp
push
push
movsb
mov
cwtl
and
test
test
or
call
xor
movsl
jne
pushf
sub
lret
out
push
mov
sbb
cmp
dec
shl
push
sbb
sub
adc
fdiv
int
cmp
movsl
sub
mov
push
mov
stos
and
fisubrl
clc
pusha
repnz
xchg
mov
inc
xor
mov
mov
mov
test
or
and
mov
add
push
push
es
loop
out
adc
cmpsl
jp
push
inc
inc
fwait
and
push
mov
cmpl
pop
aaa
das
inc
gs
sub
adc
add
out
data16
inc
xchg
loop
mov
mov
popa
pop
cmp
aaa
dec
xchg
cmp
cmp
popf
outsl
push
mov
jnp
pop
pop
xor
test
mov
or
jns
outsb
xor
hlt
add
call
lea
mov
mul
rolb
decb
gs
repnz
or
mov
add
aas
jecxz
lock
ja
nop
int3
xor
mov
outsl
sub
arpl
xchg
push
adc
cltd
pop
imulb
xchg
fdivp
pop
aad
pop
xchg
adc
push
xor
test
pushf
dec
iret
iret
pop
push
mov
test
movsb
mov
or
sub
icebp
inc
add
inc
mov
jns
mov
or
sbb
cli
out
shl
cmp
test
lret
stos
movsl
push
out
xchg
bound
sbb
and
int3
rcl
adc
push
or
mov
outsl
pop
xchg
icebp
cmpb
pop
jle
out
outsl
inc
aam
adc
pop
mov
sti
pop
movsl
bound
mov
cmp
daa
xchg
notl
insb
insl
imul
ljmp
inc
sti
push
adc
or
xor
decl
dec
icebp
xchg
enter
arpl
add
xor
dec
addl
test
sbb
adc
or
xor
adc
push
sub
jb
int
and
xchg
mov
pop
dec
loope
daa
push
lcall
xchg
inc
aam
and
xchg
loop
jnp
out
repnz
fdiv
cmp
cmp
mov
lret
inc
xor
popf
mov
iret
js
addb
add
sbb
inc
pop
stos
pop
or
dec
out
inc
arpl
nop
sti
dec
pop
fs
xchg
dec
arpl
je
jo
rolb
faddl
lahf
add
fmull
jp
aas
in
movsb
lods
in
pop
sbb
sbbb
test
inc
or
rolb
sub
inc
mov
adc
adc
imul
daa
enter
cmp
loopne
push
jo
adc
add
sub
popa
aam
xchg
sub
rcl
in
mov
addb
push
aaa
test
mov
dec
mov
cmpl
mov
mov
mov
xchg
jg
push
idivb
pop
fisttpl
test
xchg
jg
pop
out
sti
inc
subl
xchg
in
pusha
mov
sbb
push
ljmp
lods
mov
andl
mov
out
cmp
cs
cmp
imul
std
std
mov
sub
push
inc
xlat
lods
pop
subb
lcall
icebp
sbb
adc
sub
sub
imul
out
sub
aad
stos
pop
aam
lds
imulb
mov
mov
nop
test
inc
ljmp
jl
loope
bound
mov
int3
fisttpll
pushf
sub
cli
addb
cltd
sub
outsb
aaa
sbb
out
iret
xor
inc
pop
icebp
mov
adc
push
pusha
adc
cmpsb
iret
int3
mov
adcb
pusha
outsb
fildll
movsb
inc
leave
insb
push
dec
fdivrs
dec
ror
lds
push
js
mov
js
mov
sbb
test
xor
cmp
add
les
xor
mov
push
aam
and
xor
sub
ja
cld
js
fldcw
aam
pop
rolb
cmc
leave
or
popa
fwait
dec
push
lods
les
xchg
mov
les
push
aad
lea
aas
inc
lcall
lock
mov
sbb
jle
imul
push
add
push
test
movsb
jmp
popa
mov
imul
pop
push
mov
jle
add
movsb
jmp
xchg
xchg
mov
pop
movsb
mov
fwait
call
out
fistl
ja
into
mov
lret
js
daa
pusha
sbbb
fcoml
scas
mov
pusha
cltd
add
pop
and
mov
in
jl
shlb
push
mov
es
movsb
imul
adc
je
jg
pop
leave
and
jp
jl
enter
cli
pop
pusha
push
mov
mov
and
bound
pop
aas
or
in
call
aam
pop
inc
mov
push
push
ss
mov
push
pop
add
jno
xor
out
and
loopne
cld
cwtl
aam
mov
mov
sub
cmp
cli
xchg
sub
out
popa
dec
ret
jno
lcall
aam
mov
subl
or
push
addr16
outsl
fnstenv
add
inc
je
push
shl
adc
inc
cmpsb
arpl
cmp
fwait
popa
mov
out
imul
mov
mov
cmpb
sub
and
mov
jnp
jno
inc
in
gs
mov
adc
xor
add
bound
or
loope
dec
mov
push
jns
jns
mov
fptan
outsb
xor
sbb
push
mov
dec
in
add
sub
cmp
dec
out
ret
les
test
sbb
mov
adc
pop
int3
lret
fcmovb
dec
sub
icebp
adc
push
insl
or
insb
shr
jmp
ret
std
addl
dec
mov
dec
out
sub
loope
repnz
add
cld
xor
xor
in
lods
dec
jecxz
bound
testl
jnp
jae
cmpsb
stos
loop
scas
mov
daa
mov
sbb
loopne
in
mov
pop
lahf
aad
aas
jo
adc
mov
or
xchg
out
mov
ret
add
insl
push
fstps
dec
mov
and
rorb
scas
lret
repz
jno
lret
in
adc
stos
clc
cltd
jge
jmp
dec
push
mov
xchg
pop
dec
xchg
mov
shll
xchg
cltd
jge
push
adc
decb
mov
mov
sub
sbb
jo
pop
int3
loope
rcrb
mov
mov
je
sub
inc
out
aas
jg
in
test
xor
popw
add
cmc
xor
inc
cltd
sti
int3
mov
inc
mov
add
loope
push
push
sub
pop
push
push
dec
jae
push
mov
pop
js
cmpsl
jns
sahf
idivl
cwtl
adc
pop
pop
std
add
lret
push
add
pop
xorb
dec
add
fldpi
pop
ret
or
dec
and
mov
and
mov
test
in
push
cmp
pop
or
testb
or
movsl
sbbb
pop
add
fisubrl
repz
aas
xchg
movsl
stc
xor
stos
ret
fcmovb
out
popf
sub
mov
ds
pop
pop
outsl
scas
inc
add
in
stc
fisubrs
in
jns
loop
dec
mov
loopne
lock
adc
add
cmpsl
push
cltd
sar
xchg
sbb
in
cmc
mov
push
xchg
pop
push
imul
fmuls
mov
and
mov
sub
lock
mov
adc
enter
cmp
out
mov
add
ret
addr16
ret
jmp
cmp
in
adc
ljmp
mov
sbbl
sarb
imul
cmp
test
lock
in
outsl
push
push
in
xchg
je
add
out
mov
cmpl
nop
sub
lea
lods
stos
sbb
in
dec
pop
arpl
add
ljmp
cli
fsubl
rcl
leave
aam
sbb
filds
pushf
ds
and
call
and
xor
adc
insl
loope
rep
es
pop
gs
cld
cmp
or
mov
sar
out
andb
pop
add
lea
xor
ljmp
shll
test
mov
into
push
cld
cwtl
arpl
ja
test
jnp
mov
add
cltd
pop
cltd
add
aaa
jg
and
mov
push
xlat
cmp
pop
jg
cs
aam
bound
ret
xchg
mov
pop
sbb
mov
std
scas
xchg
pop
xor
call
out
movsl
arpl
fcoms
sbb
sub
lret
cmp
lods
int
ret
std
rcr
loope
or
mov
jns
loop
dec
loop
in
jmp
xor
xchg
lds
jecxz
in
xor
jl
inc
mov
push
sub
adc
jbe
mov
cltd
fnsetpm(287
mov
push
pop
xchg
cmpsl
andb
jmp
or
jl
adc
jmp
popf
jle
stos
xorb
leave
cs
sub
add
cmp
fsubp
mov
cmp
ja
lods
jge
dec
inc
jae
add
shl
pop
pop
dec
mov
pop
sbb
sti
push
cmc
es
xor
push
out
cmpsl
popf
out
mov
sub
pushf
pop
fmuls
popa
push
add
pop
mov
outsl
xchg
fsub
daa
hlt
sbb
xchg
jmp
mov
pop
sbb
not
movsb
psubb
sub
mov
shlb
mov
cmp
out
and
cld
rcrl
sub
mov
inc
fsubrp
jl
mov
int3
sbb
pop
mov
mov
lods
pushl
xor
popa
sub
jnp
das
mov
jb
fcoms
inc
fs
pop
fstl
faddp
lret
cli
pop
and
xor
lods
add
inc
bound
fs
sub
mov
and
mov
sbb
mov
mov
fdivrl
out
lods
pop
scas
jae
mov
insb
int3
adc
adc
pop
inc
xor
pop
jmp
imul
lock
sahf
dec
xlat
inc
pop
flds
dec
or
shlb
fcmovne
int
cmp
mov
xor
add
jmp
sub
fsts
gs
es
or
mov
inc
scas
xor
call
dec
pop
outsl
cs
add
lret
push
mulb
dec
or
negl
push
mov
and
pop
orl
adc
lods
rcrl
jle
call
cmp
sbb
pop
nop
jp
dec
mov
in
fucomi
paddq
test
cmova
sub
xchg
cs
movsl
stc
jg
mov
nop
sbb
test
loop
in
cmovo
mov
ss
and
dec
sbb
dec
or
pop
and
cli
cmp
lea
inc
imul
sub
jo
inc
push
in
in
pop
inc
cmpsb
xchg
out
arpl
out
pop
test
scas
cmp
mov
fxch
xchg
sti
jns
xor
pop
xchg
add
mov
mov
sub
es
call
in
je
loopne
xor
int3
notb
repnz
stc
in
enter
pop
adc
and
sbb
cmpsl
jle
leave
sahf
nop
cltd
int3
sbbb
loopne
test
xor
jnp
push
lods
push
hlt
cli
sub
and
sub
jbe
jg
into
mov
scas
loopne
and
movl
aad
xchg
push
mov
imull
pop
enter
test
rcrb
ljmp
jnp
xor
push
dec
orl
mov
out
or
fidivrl
movups
sahf
cmp
daa
jno
outsb
leave
adc
hlt
pushf
xchg
add
int
pusha
jae
and
add
xor
cs
add
lret
mov
mov
je
sbb
iret
cli
pusha
push
cmpb
roll
inc
movsl
mov
filds
xlat
pop
jp
push
lahf
lods
test
mov
fildll
xchg
faddl
dec
fidivrs
ffreep
and
out
ret
add
daa
mov
clc
mov
push
sub
add
stos
xchg
inc
mov
cmpsl
cmp
xlat
cwtd
scas
dec
mov
les
xor
mov
jge
mov
mov
jp
ror
mov
scas
pop
dec
ja
jo
jg
es
stos
lock
push
push
sbbb
and
sbb
cmpsb
ret
jg
stc
and
jecxz
push
cmp
cmp
push
sub
les
pop
sub
jecxz
jg
in
ret
aam
test
scas
sbb
jle
mov
pop
xor
inc
sbb
std
scas
sbb
icebp
cmp
adc
shll
and
push
dec
in
ss
lret
lahf
mov
or
enter
call
xchg
push
sub
push
in
sbb
das
xlat
push
xchg
inc
stos
pusha
lods
cli
or
push
enter
jno
mov
fcom
add
mov
inc
nop
cmp
dec
frstor
imul
pop
xchg
xchg
pop
xor
inc
xor
jnp
cmc
pop
jge
or
or
sbb
sbb
jo
mov
and
push
test
xor
mov
jle
mov
ret
icebp
gs
scas
clc
clc
aaa
cmc
imul
xchg
xchg
and
inc
test
lahf
add
cld
cmpl
dec
push
ret
fs
cltd
pop
je
scas
aad
lods
sbb
xor
arpl
enter
shr
mov
pusha
xchg
ret
adc
adcb
icebp
cmp
push
pop
jmp
and
aam
inc
xor
aad
fnsave
ret
fadd
inc
enter
or
jg
xchg
pop
push
ret
cmpsl
xor
nop
das
xchg
xchg
and
dec
lods
push
cmp
xchg
ret
sub
ficoml
jle
push
pusha
mov
stc
mov
lock
push
or
xor
fdivrl
and
or
mov
inc
or
xchg
jnp
mov
add
imul
jmp
clc
loope
mov
test
mov
xor
out
cmp
popa
rcrb
sarb
ret
inc
jl
movsl
push
cli
jle
in
jl
xchg
jge
or
pop
shll
adcb
ret
push
inc
push
imul
sub
pop
arpl
hlt
dec
popf
inc
adc
push
push
aas
or
aaa
hlt
inc
mov
movsb
xchg
push
sub
adc
adc
orl
jg
out
das
adc
xor
scas
imul
push
in
sub
xor
push
add
and
adc
jecxz
inc
movsl
xchg
int3
jecxz
cmp
test
in
or
xchg
ret
addr16
out
adc
in
out
std
lret
push
xchg
mov
inc
int
test
sbb
mov
push
mov
xchg
cmp
mov
mov
repz
idivb
xor
enter
pop
out
jp
push
ficoms
xchg
in
cltd
fwait
mov
shll
sbb
sbb
jmp
hlt
sbb
sub
loope
adc
mov
jbe
dec
pop
pusha
sub
aam
ret
orb
pop
outsb
jnp
xchg
inc
push
std
cld
adc
add
xchg
jnp
sub
insb
mov
call
mov
sbb
mov
push
fs
mov
int3
dec
addl
sbb
xor
lcall
icebp
add
out
daa
xchg
jbe
imul
test
js
ret
add
sahf
xchg
je
dec
aad
inc
dec
mov
xlat
in
icebp
int3
mov
cmc
mov
or
aas
shll
cltd
or
jbe
pop
fcompl
add
icebp
scas
stc
dec
pop
gs
outsl
fidivs
loop
jno
mov
popa
cmp
das
mov
dec
pop
ljmp
mov
into
enter
dec
push
add
add
mov
jecxz
jl
lea
sti
mov
mov
loopne
jp
jmp
or
ret
xchg
out
loopne
or
inc
pop
fdivs
icebp
jae
arpl
cli
std
adc
jns
icebp
and
sub
cmp
insl
sbb
cmp
sbb
icebp
xor
adc
ficomps
int3
notb
cwtl
in
stos
jnp
mov
inc
fsubl
mov
lds
and
push
or
xchg
idivb
cmp
lods
ret
std
push
cmp
loop
fs
leave
es
into
stc
jge
inc
mov
test
xor
imul
fwait
test
push
cli
lret
and
push
outsl
push
mov
call
into
test
cmp
add
loope
and
gs
pop
fimuls
or
sub
sbb
sub
call
idivb
xor
dec
jle
fstpl
or
sbb
or
out
push
adc
test
inc
sub
cltd
fcomip
ret
sahf
and
div
inc
mov
mov
icebp
inc
adc
xchg
imul
ficoml
lock
inc
adc
daa
adc
cmp
jbe
xchg
out
test
stc
push
sar
jo
add
es
jb
sbb
popf
pop
sahf
scas
lret
pop
stos
loop
aad
add
xchg
cmp
loope
insb
insb
jl
pop
pushf
pop
mov
fcmovb
test
pop
pop
rorl
jl
or
pusha
sub
mov
mov
dec
adc
int
lock
bound
and
mov
ja
mov
mov
movsb
imull
outsb
mov
push
cmp
sahf
in
stos
ret
pop
xchg
aam
lods
popa
cmpsb
repz
aad
inc
xlat
pop
push
xchg
aad
or
add
jbe
jb
xchg
mov
data16
add
mov
insl
mov
adc
mov
sahf
test
mov
std
mov
adc
aad
xchg
lock
xor
subb
xchg
mov
aam
or
push
nop
popf
adc
push
xchg
mov
frstor
add
and
mov
inc
rcrb
jo
ss
jmp
cmp
and
int3
jne
mov
div
lock
mulb
cmp
repnz
add
pop
mov
jmp
mov
repz
iret
call
repnz
and
cmp
divl
es
and
mov
mov
add
mov
pop
lock
push
data16
push
inc
outsl
mov
cwtl
and
bswap
mov
lds
mov
int
out
add
aam
and
pop
pop
pop
and
cwtl
jno
bound
cmpl
out
clc
xchg
ljmp
outsb
aas
sub
outsl
lds
mov
mov
movsb
pop
outsb
push
or
jne
cmp
fstpt
je
mov
rclb
and
cmp
mov
cmp
stos
cmp
and
add
ret
lods
xchg
xor
arpl
mov
dec
imul
sbb
fsubrs
mov
addl
loop
sti
fwait
jae
jo
shrl
jl
mov
loope
inc
dec
aas
fnstsw
push
repz
adc
cmp
imul
pushf
or
push
jb
adc
mov
call
lcall
cmpsl
and
nop
je
cltd
std
aam
xchg
adc
repnz
sbbb
jo
fwait
jno
pusha
xorl
mov
bound
mov
fstl
mov
fimull
xchg
and
lock
test
add
and
enter
je
sti
sub
pop
jecxz
sub
xchg
jmp
jns
leave
scas
ds
mov
sub
cltd
inc
fwait
mov
movsb
or
fwait
ret
push
mov
ud1
add
loopne
jg
rcrl
sub
daa
inc
mov
xchg
pop
pusha
adc
pop
jp
xchg
inc
int
mov
jno
xor
or
fisubs
jbe
fmulp
mov
xor
loope
cmp
cld
or
jb
add
mov
daa
repnz
jbe
adc
mov
xchg
mov
mov
sub
cmp
in
add
insb
dec
adc
ss
inc
popf
push
decb
sbb
cmp
int
addl
push
sub
xchg
mov
jl
div
fs
loopne
jo
andl
mov
cmp
nop
iret
inc
loop
std
push
cmp
mov
sbb
add
ss
mov
pop
jb
ror
lock
adc
or
cltd
mov
sub
push
aad
mov
insl
mov
mov
std
sbb
dec
sub
fisubl
or
dec
xlat
mov
push
xchg
mov
outsl
push
data16
cmc
pop
je
js
adc
aad
mov
lret
dec
mov
mov
rcrb
push
popf
pop
ret
test
push
cmp
mov
mov
add
aam
stc
push
lret
lret
imul
sahf
out
mov
dec
cmp
cwtl
outsb
xchg
add
repnz
daa
xchg
mov
fidivrs
sbb
push
jp
imul
dec
push
mov
mov
xor
cmp
or
lods
xor
stos
test
mov
test
mov
xor
test
pop
fidivl
jecxz
dec
jg
sub
mov
dec
push
mov
roll
mov
mov
jbe
dec
imul
add
jmp
ja
test
mov
mov
pop
sbb
in
adc
movsb
fldcw
call
mov
mov
mov
sub
xor
jnp
fwait
aas
and
cltd
lds
xchg
xor
xor
scas
es
jno
scas
fbld
lods
js
jo
mov
mov
call
lods
sub
icebp
mov
pop
nop
fcmovu
test
cmovp
mov
adc
xchg
popa
inc
pop
paddsb
mov
ret
cmp
and
jg
xchg
adc
add
pop
mov
fistpll
sbb
stos
loop
nop
jb
xor
test
stos
or
inc
xor
mov
pop
test
fists
cmp
ljmp
inc
out
pop
out
inc
xchg
sub
cs
adc
jp
shlb
lods
inc
and
xor
aaa
test
imul
cmpsl
test
xchg
ds
lret
lea
leave
pop
mov
out
add
imull
xchg
adc
cltd
std
mov
pop
aad
jmp
push
bnd
jb
mov
xchg
push
inc
nop
xchg
pop
lock
or
in
pop
mov
test
clc
leave
jmp
pop
lods
das
sbb
lock
fwait
stos
fcoms
inc
shr
outsb
push
xchg
addl
pop
js
cmp
xorb
andb
xor
pop
pop
addr16
jecxz
aas
stos
add
and
lahf
out
jmp
dec
lcall
dec
out
add
pop
incb
and
divl
xor
inc
stc
mov
sub
sbb
sub
loope
jle
cmpsb
jno
or
sbb
mov
cmpsl
stc
jno
test
out
ss
sbb
adc
hlt
mov
mov
sub
pop
cltd
mov
add
xlat
dec
js
fs
fwait
jbe
sbb
lods
push
and
push
pop
sub
movsl
cmpsl
inc
lret
repnz
nop
push
xor
icebp
cmpsb
or
dec
daa
mov
js
fmuls
add
pop
movb
push
outsb
push
call
je
in
loop
mov
lret
or
sbb
mov
rorb
adc
or
cmpsb
ss
shl
mov
cmp
pop
mov
jl
lahf
adc
in
insl
repz
or
in
sbb
add
pop
loopne
inc
pop
test
add
repnz
push
and
ja
lods
outsl
cmp
ljmp
clc
sarb
sub
fildll
lcall
pop
test
mov
leave
or
clts
loop
jg
popf
add
jp
xor
shlb
xor
rcrl
jbe
into
or
xor
imul
push
sbb
mulb
imul
adc
dec
mov
out
dec
xor
aaa
dec
adc
mov
loop
xor
aam
leave
and
pop
stos
xchg
arpl
cmpsb
ljmp
out
adc
pop
mov
dec
adc
into
sub
sahf
mov
sub
adc
in
and
pop
add
add
jae
icebp
jge
fsubs
dec
push
sbb
sti
insl
aaa
pop
fdiv
adc
push
out
imul
scas
shr
mov
insb
ret
rcrb
and
loopne
icebp
mov
test
cltd
cmp
daa
subb
adc
mov
movsb
pop
sbb
sti
jg,pn
add
and
fwait
xchg
cwtl
cli
sbb
leave
and
cltd
mov
vpsubw
ljmp
data16
sbb
adc
cmp
dec
aam
clc
jae
js
out
fwait
or
push
icebp
sub
add
inc
mov
lea
mov
jecxz
sbb
adc
push
adc
outsb
pop
push
leave
mov
fs
jge
mov
ss
sub
mov
int3
std
dec
sbb
pop
pop
xchg
and
push
inc
mov
mov
add
insb
mov
and
icebp
push
repnz
mov
subb
int
or
add
pop
rol
enter
sahf
mov
lea
cltd
sub
push
aam
xchg
imul
std
push
sbb
aas
lcall
sahf
push
push
mov
icebp
rcll
shl
addr16
pop
mov
and
xor
enter
hlt
mov
mov
pop
sub
call
movsb
cwtl
cmp
dec
inc
sbb
xchg
xor
jns
aad
dec
sub
jns
cmp
subl
imul
lea
loopne
sbb
adc
push
sub
jecxz
push
mov
mov
inc
mov
xchg
aaa
insb
mov
push
insl
mov
int
lahf
mov
push
neg
movsb
pop
decl
adc
jmp
outsl
jecxz
scas
push
inc
sbb
xchg
jle
or
cmp
sarl
pop
rol
fstps
inc
ret
mov
lods
cld
push
inc
sub
aad
inc
adc
pop
jne
or
mov
mov
mov
inc
test
pop
pop
mov
hlt
jle
inc
aas
repz
xchg
push
xchg
add
inc
mov
and
push
ret
dec
sti
or
sub
jbe
add
outsl
mov
or
shrl
in
stc
jae
inc
pop
adc
in
add
icebp
sub
hlt
or
push
cmpsb
xchg
fwait
es
mov
les
mov
lret
mov
repnz
ret
add
mov
fwait
gs
dec
nop
pop
lahf
jecxz
lock
mov
xchg
cld
mov
or
adc
out
and
out
stos
stos
inc
pop
or
ret
push
and
push
dec
int
lea
lods
scas
test
and
das
lds
or
cli
lret
outsl
aam
push
add
xor
xor
ja
mov
sbb
mov
xchg
aad
sarb
add
mov
xchg
mov
les
cmp
xchg
in
fsubrs
rorb
add
cmp
inc
mov
adc
shrb
mov
push
xor
jl
repz
pushf
xchg
fnstenv
jne
cmp
mov
pop
mov
test
fwait
addr16
sub
fdivrl
int
hlt
mov
test
xor
sti
cmpsb
and
jbe
enclu
leave
jl
inc
imulb
pushf
add
jnp
or
popa
cwtl
out
mov
and
test
lods
xchg
dec
mov
push
loop
push
pushl
outsl
iret
std
mov
ds
dec
pop
insb
jae
cmp
mov
lds
ss
shlb
cwtl
bound
pop
pop
jae
mov
movsb
insb
test
addr16
scas
lahf
sahf
mov
push
dec
pop
mov
jmp
jge
and
aas
test
mov
mov
mov
ja
mov
mov
push
loop
dec
push
pop
cmpsl
ja
aam
cltd
roll
sub
add
scas
and
out
decb
mov
mov
adcl
fsubrs
ja
inc
out
inc
shl
jl
fdivl
pop
pop
dec
push
aad
sub
jmp
push
xchg
pop
inc
shlb
ds
std
inc
jmp
add
mov
push
add
jp
push
xor
daa
dec
cmp
shl
outsl
add
adc
popa
inc
jecxz
sub
cmpsl
jnp
iret
mov
push
fxtract
movsb
lret
inc
push
or
iret
cmp
add
insb
popf
adc
int
mov
pop
and
add
lods
pushf
xor
and
icebp
loope
sub
sbb
sbb
in
mov
or
adc
ret
adcl
popf
cwtl
bnd
cld
mov
sbb
sub
lods
xor
mov
sub
jne
std
out
std
xor
mov
movsl
mov
jnp
push
jo
inc
adc
ss
and
push
inc
popf
push
scas
test
cld
add
fwait
sbb
daa
cltd
mov
iret
pop
mov
inc
stos
jge
inc
xor
xor
adc
cmp
out
push
js
adc
push
jg
retw
popa
and
int
pop
add
mov
mov
sub
out
pop
add
dec
sub
jnp
rcrb
aad
dec
out
sub
fmul
js
int
cmp
lcall
lea
icebp
mov
mov
inc
cmpsl
adc
jae
pop
lea
cmpsb
icebp
fildl
xor
xchg
ja
loopne
xlat
fisubl
jbe
ja
push
mov
mov
add
fcmovu
sahf
repnz
xchg
enter
add
xchg
xchg
sti
addb
popf
jo
sub
jne
js
xor
cmp
out
sar
xchg
icebp
filds
mov
test
subb
out
lret
push
stc
int
cmpsl
rclb
ljmp
rcl
pop
nop
xor
iret
mov
out
outsb
sub
cmp
sbb
push
repz
movsb
lods
loope
fadds
psrlq
inc
mov
mov
push
rolb
lret
lahf
nop
adc
jnp
in
sbb
fidivl
les
mov
adc
test
adc
les
out
js
or
mov
cmp
int3
mov
imulb
sahf
inc
inc
add
ret
push
mov
or
loop
dec
roll
mov
lcall
inc
push
stos
mov
xchg
jmp
outsb
xchg
cwtl
push
scas
das
fistpl
push
out
xor
xor
imul
or
sbbl
in
or
cmp
xor
pop
std
cs
pusha
inc
inc
mov
adc
fs
mov
lahf
cmpsb
cmp
lods
adc
sbbb
mov
cmp
ficoml
sbb
cmp
ljmp
cli
int
ja
insl
mov
and
cmpsl
movsb
pushf
mov
fildl
cmp
and
sub
outsl
mov
lahf
lahf
mov
mov
cli
ja
sbb
xor
in
mov
inc
fistl
inc
sub
roll
and
fimuls
xchg
dec
insl
jno
inc
xchg
cltd
jg
and
cmp
mov
xlat
in
xchg
xchg
or
xchg
sub
xchg
jp
pop
adc
xor
stc
cmp
inc
adc
shl
sahf
decb
adc
loopne
dec
scas
rcl
cmp
das
sti
cmc
xor
std
scas
or
xchg
mov
jmp
and
test
cmc
stc
stos
lock
pushf
and
jecxz
inc
fs
jg
pop
cs
and
mov
jae
lods
hlt
popa
lea
or
and
push
inc
mov
xchg
dec
add
jae
incb
lods
cmovae
lret
std
arpl
mov
outsb
add
add
xchg
rcrb
cmp
test
inc
cmp
jae
xchg
loope
push
xchg
inc
mov
gs
cmp
mov
ret
sub
sahf
xorl
dec
pop
pushf
dec
cmpsl
xchg
div
sbb
js
cs
cmpsl
cltd
mov
xchg
mov
dec
push
rcrb
xor
pop
daa
arpl
xor
hlt
push
adc
pop
movl
stc
scas
jmp
arpl
loop
popa
mov
mov
adc
push
pushf
xchg
xchg
jnp
scas
mov
cmp
leave
xor
out
sbb
xchg
call
xchg
adc
mov
dec
mov
add
jno
ss
pop
pop
pop
lods
sub
cwtl
cmp
inc
mov
out
sti
xor
aad
inc
mov
sbb
pop
inc
dec
leave
addr16
dec
xchg
xor
clc
ss
and
sub
enter
lahf
loop
fsubrp
in
adc
pushf
mov
and
cs
scas
pop
or
ffree
xchg
fisubs
mov
jbe
test
push
stos
test
jmp
jle
dec
push
scas
xor
out
push
sub
pop
mov
cmpsl
jbe
sbb
push
inc
xchg
stos
jae
dec
jg
cmp
gs
or
sbb
xchg
sub
dec
loope
dec
je
mov
add
cli
jmp
sbb
pop
cmp
xchg
jp
imul
ret
and
push
xchg
stos
inc
arpl
std
loope
pop
out
pop
popa
loope
insb
jne
insb
jb
aad
pop
ljmp
or
push
dec
mov
mov
pop
lods
and
frstor
jg
push
andb
pop
arpl
movsl
hlt
mov
movsl
mov
imul
mov
ret
xchg
rcrl
or
and
cltd
xor
mov
addb
cltd
lret
xor
mov
jmp
outsl
outsb
sbb
xor
jp
pop
xchg
pop
lock
iret
and
pop
in
push
cmp
fldenv
repz
adc
cmpsb
mov
mov
xor
push
lcall
test
lods
sub
sarl
sbb
filds
stos
sub
mov
push
mov
inc
add
ljmp
pop
out
lea
ljmp
daa
sub
inc
push
lods
cmp
pop
bound
sbb
sbb
xor
or
pop
lods
pushf
xchg
int3
cmp
out
inc
lods
inc
sub
or
mov
test
movsl
mul
sub
push
adc
lds
insl
arpl
mov
scas
lock
sbb
cmp
dec
jg
add
xchg
sub
mov
js
xchg
adc
sub
into
mov
divb
std
sub
icebp
cmp
inc
popf
cli
popf
arpl
fimull
gs
idivl
jmp
mov
sub
or
pop
jns
dec
lahf
out
es
imul
fmull
sarb
mov
out
fwait
mov
pop
cmpsl
push
mov
dec
scas
imul
mov
scas
movsl
movsb
scas
cwtl
iret
andb
fcmovb
hlt
lock
cmpsl
inc
loop
mov
js
mov
adcl
dec
std
cmpsl
cmp
mov
out
mov
pop
mov
jmp
mov
lds
scas
xchg
mov
xor
cli
pop
popa
addr16
rorl
pop
lock
fists
fidivl
pop
inc
xor
arpl
jnp
out
mov
dec
int3
ja
push
jno
and
jo
jbe
lcall
or
xor
pop
int
fsubr
dec
mov
xlat
adc
jge
scas
jp
in
inc
int
subb
test
push
dec
pop
pop
movsl
call
fmul
clc
cmp
out
int3
movsb
sub
mov
mov
jp
inc
call
cmp
inc
mov
fnsave
bound
push
clc
mov
inc
aaa
inc
mov
cltd
icebp
fcomi
push
sti
rclb
jnp
mov
sbb
push
test
dec
mov
loopne
dec
adc
cld
push
jp
aad
mov
sbb
lock
lea
imul
test
xor
xchg
sub
flds
ja
inc
ss
jbe
xor
jl
jno
fdivrs
cmp
std
lret
test
pop
insb
adc
and
adc
mov
xor
fnsave
push
mov
mov
and
test
mov
fldcw
rorl
ret
sti
sbb
inc
arpl
lret
scas
das
aam
mov
or
sub
in
shrb
mov
adc
lret
movsl
pop
ljmp
and
cli
jo
divl
pop
add
repz
jl
inc
pop
jno
mov
arpl
mov
sahf
adc
pusha
mov
mov
xchg
int3
cmp
xchg
pop
test
inc
jnp
mov
mov
sbbb
mov
adc
pop
xlat
int
das
jmp
mov
push
sbb
into
sarl
inc
inc
mov
outsb
sub
movsl
mov
jae
xchg
pop
sub
jnp
push
movsl
sub
loope
xchg
movsl
mov
popa
or
xchg
pop
jns
push
jmp
push
push
cmp
pop
cmp
jns
and
mov
jge
dec
sub
sub
push
push
lret
add
adc
arpl
jae
and
sub
arpl
mov
mov
sub
mov
push
mov
ja
xor
enter
adc
mov
sbb
ja
fisttpl
pop
pop
outsl
dec
leave
shrl
insl
fwait
inc
jl
loopne
in
xor
mov
mov
sarl
dec
sahf
dec
movsl
test
jno
sbb
aam
mov
xor
push
xchg
adc
inc
sbb
cmp
push
add
push
js
jo
sub
jecxz
rorl
push
aas
jnp
push
dec
and
cli
shll
push
fwait
dec
jne
addb
std
ret
xchg
cmp
mov
dec
push
out
jg
and
std
jl
mov
push
lea
add
dec
test
insl
jge
inc
aaa
push
out
and
int3
dec
cs
sub
xlat
sub
subl
ficomps
lods
ja
outsl
inc
movsl
lds
dec
mov
and
mov
ja
pop
in
mov
popa
test
mov
xor
in
pop
and
inc
shll
std
cmp
int3
xor
dec
insb
mov
cmc
in
sub
xchg
rcl
mov
inc
sbb
adc
dec
scas
loopne
add
mov
jnp
xor
add
jmp
aaa
in
mov
jg
nop
shll
cltd
es
int3
fs
movsb
shr
push
pop
cmp
hlt
repnz
jo
dec
stc
and
add
sub
scas
sub
mov
push
cmc
push
int
loopne
mov
shrb
cli
pop
hlt
jno
dec
push
sub
jns
adc
sbb
in
addr16
cli
mov
out
adc
test
cmc
pop
lret
pushf
stos
push
mov
cli
test
das
loopne
call
ret
out
xchg
cmpsl
insl
inc
pop
lods
xchg
jge
movsl
aad
imul
dec
cmp
mov
pop
push
testb
repnz
cmp
push
dec
repz
jns
stos
sub
arpl
movsb
mov
and
xchg
cli
test
loop
out
push
jmp
sub
and
xchg
fistpl
adc
mov
and
pop
mov
cs
imul
clc
dec
stos
push
lock
xor
test
ss
mov
gs
imul
arpl
popa
xchg
mov
or
xchg
call
push
add
loope
jnp
es
nop
xchg
stos
mov
sbb
imul
ret
inc
pop
ret
into
mov
stos
xchg
xchg
push
ret
xchg
push
aaa
mov
or
and
xor
rorl
xchg
jnp
leave
inc
add
testb
xchg
inc
push
js
out
inc
out
mov
dec
mov
mov
dec
lcall
or
mov
xchg
pop
mov
movb
push
sub
dec
shll
aas
cmpsb
lret
cli
lock
lock
sbb
and
jnp
lock
mov
cmp
mov
inc
ds
cld
and
roll
stc
push
push
cmp
or
insb
loopne
mov
mov
je
cwtl
popf
cmp
jecxz
pop
push
lret
mov
pop
mov
shll
sahf
das
jbe
aad
inc
push
pop
out
xchg
imul
sub
or
cli
cmpsl
or
cltd
jmp
int
xor
jne
inc
mov
test
out
sbb
fidivrs
hlt
enter
fdivr
push
cmpsb
jmp
mov
sbbb
cmp
stc
cmp
pop
out
dec
ja
push
leave
jne
js
test
pop
iret
in
sti
mov
aas
adc
sbb
push
and
xor
movsl
xchg
int3
mov
idivl
sar
push
jl
push
jge
jo
incl
or
jbe
push
xor
out
or
adc
dec
call
popf
dec
push
fidivrs
repz
push
mov
pop
jmp
mov
clc
jle
bswap
xchg
xorb
dec
and
and
push
jecxz
je
fidivrs
call
ja
cmpsb
push
lock
movsl
and
pusha
jne
in
stc
add
daa
pop
sbb
inc
imull
lcall
xchg
ljmp
andl
add
ret
mov
adc
movsb
stos
mov
aam
mov
cltd
push
and
imul
mov
jno
xor
cmc
rcr
add
popf
add
cwtl
pushf
lods
std
jbe
xchg
xor
add
add
jbe
fstpl
dec
js
dec
andb
xor
mov
or
mov
leave
mov
lock
push
stc
jl
lret
pop
and
cld
mov
lahf
out
je
shlb
jecxz
lds
cmc
sbb
jo
push
pushf
mov
mov
fidivrs
jl
and
fwait
mov
ret
mov
insl
fsubr
out
lods
sub
push
shrb
push
mov
xchg
jecxz
decb
and
cmp
pop
popf
orb
repnz
inc
pop
hlt
insb
add
movsb
mov
aad
dec
lea
movsb
and
aas
lret
repnz
mov
pop
js
and
je
mov
lock
pop
hlt
fwait
or
push
mov
mov
in
mov
negb
dec
adc
setnp
loop
add
inc
out
xchg
cmc
cmp
xlat
je
lock
xor
mov
pop
lcall
or
inc
cmp
xchg
sbbl
stos
cs
addr16
and
xor
add
xchg
lcall
cwtl
mov
jle
stc
mov
lods
imul
aaa
xlat
xor
ja
mov
jae
lahf
incl
adc
loop
sub
outsl
movsb
inc
aas
cmpsb
sbb
mov
add
pushf
and
or
fdivp
into
jne
mov
fs
gs
add
cmp
and
rorl
jbe
stos
scas
jbe
inc
imul
xor
add
mov
sbb
cltd
push
adc
pop
cmp
pop
hlt
popa
mov
adc
xchg
jle
xorl
mov
gs
rorl
and
rcrl
shrb
sub
scas
mov
add
mov
gs
xchg
fwait
daa
jle
pop
es
xchg
ficoms
js
scas
test
imulb
or
test
cmc
jecxz
dec
dec
mov
fs
mov
sbb
pop
ficoml
out
enter
mov
lret
int3
sub
jb
test
fxch
push
test
rorb
add
dec
pop
ret
dec
jmp
aad
adc
cmpsb
and
mov
aas
dec
ret
sbb
mov
or
push
xchg
shlb
sub
decl
mov
sahf
aad
dec
xor
mov
daa
push
jecxz
mov
into
and
sti
xchg
addr16
dec
insl
popa
mov
xchg
lret
std
mov
movsl
sbb
sub
popf
lods
push
xlat
movsb
fnstenv
sbb
push
dec
gs
push
xor
dec
insb
pop
pop
jg
xchg
aad
pushf
sbb
sbb
iret
dec
stos
decl
iret
aad
mov
dec
jne
lods
sub
mov
mov
push
xorps
mov
test
cs
adc
xor
loop
pop
ret
dec
repz
mov
mov
sbb
sub
mov
or
or
call
mov
xchg
pop
test
ljmp
ja
fs
sarb
ficomps
add
ficomps
roll
aas
dec
dec
pop
fucomp
inc
scas
mov
lcall
js
roll
rclb
arpl
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
mov
lea
pop
bound
push
add
sbbl
pop
xor
pop
into
push
cs
sbb
jle
mov
xor
sbbb
into
sub
cld
fdivl
fcmovu
xchg
ljmp
sahf
enter
sub
xor
fnstcw
dec
adc
stos
mov
sub
bound
nop
ja
dec
ret
clc
inc
push
mov
cmpsl
cmp
testb
rcrl
mov
out
test
pop
imul
orb
jbe
adc
xor
add
push
test
fcmovne
lods
sbb
or
rcll
rcrl
xor
cmp
mov
hlt
jne
jecxz
mov
inc
xlat
pop
cs
jg
push
and
repnz
cmp
cwtl
cmp
movsb
sbb
jae
mov
adc
enter
sub
xor
xor
adc
jno
cmp
movsb
xchg
push
out
push
fldcw
scas
or
add
push
lret
inc
out
jo
add
roll
adc
in
xor
loop
or
insb
jmp
adc
xchg
pop
mov
xchg
subb
cltd
repnz
push
inc
mov
add
inc
dec
jge
fwait
sbb
loopne
rorb
scas
jae
insl
imul
mov
push
sbb
add
nop
clc
aam
repnz
out
sti
cmp
xchg
insl
scas
or
cmp
mov
adc
inc
inc
rcrb
fistpl
fidivl
xchg
or
mov
clc
sbb
test
nop
push
mov
lahf
add
pop
aas
idivl
fwait
sub
inc
cmpsl
sub
and
sub
dec
mov
in
mov
cli
outsb
lea
pop
test
sbb
stc
fsubrl
cwtl
pop
sbb
rcrb
push
cmovo
inc
inc
scas
pusha
nop
jne
ds
shl
fdivl
mov
push
pop
scas
cmp
push
movsl
pop
ret
or
dec
pop
mov
mov
dec
add
mov
sbbb
mov
push
or
or
and
mov
test
mov
es
sbbl
repnz
pop
xlat
xlat
ds
jns
fstpl
add
cmp
jl
or
repz
sbb
pop
dec
sahf
out
cmp
mov
leave
mov
out
jno
jmp
and
scas
pop
jmp
or
cmp
mov
lcall
xor
fisubs
imul
ljmp
arpl
and
inc
insl
nop
adc
xchg
stos
cltd
cmp
dec
dec
lahf
test
cmpsl
movsl
mov
mov
and
enter
cld
addb
in
xchg
loope
addr16
or
cmp
sbb
cmp
cmp
xor
xchg
and
push
push
rcrb
cmpsb
je
lds
xchg
cmc
push
or
sub
mov
andb
xlat
fldcw
push
test
in
cmp
imul
aad
sbb
fwait
enter
fs
mov
mov
imul
mov
in
jns
pop
inc
mov
add
mov
dec
ja
imul
sbb
sbb
ret
roll
fwait
repz
pushf
je
add
xchg
pop
jg
add
pop
lods
incl
push
mov
push
lods
je
sbb
mov
inc
or
sahf
leave
xor
popf
mov
fucomp
fildl
in
sub
mov
cwtl
jb
jl
repnz
xchg
ror
pop
pop
aas
jnp
lods
mov
cmp
lret
jmp
aas
repz
push
in
stos
dec
lock
ljmp
repnz
int
push
jnp
mov
notb
inc
fstl
test
mov
ret
in
or
cmp
xchg
add
add
jp
dec
mov
mov
call
pop
pushf
xchg
frstor
lds
mov
js
lcall
mov
mov
pop
xchg
mov
not
imull
lods
jge
movsl
mov
in
jne
mov
adc
sbb
mov
pop
ret
sbbb
dec
imul
bnd
xorb
mov
jp
or
pop
movsl
cli
movsb
pusha
cmpsb
pop
xor
into
imul
sahf
jae
mov
or
mov
jbe
and
xchg
mov
ss
loope
jmp
mov
xlat
in
das
loope
mov
cmp
jo
push
mov
cmp
mov
in
adc
int3
shrl
inc
jecxz
loopne
pop
test
mov
sbb
sbb
nop
mov
mov
mov
jle
mov
mov
adcb
inc
or
fimuls
cmc
subb
out
loopne
lds
addr16
cmp
sbb
fdivp
fs
dec
mov
xchg
cwtl
xchg
sarl
dec
mov
scas
push
enter
fimull
xor
adc
push
faddl
sub
repz
lahf
and
xchg
ds
push
inc
jo
fnsave
fcomip
repz
mov
mov
out
dec
out
lds
push
es
lods
push
mov
sarl
mov
mov
sbb
call
xchg
sbb
shrl
inc
mov
or
leave
imul
xor
shll
clc
mov
mov
test
dec
mov
cli
imul
aam
je
xchg
jle
or
stos
mov
jg
push
add
out
sub
dec
push
xchg
ss
xor
mov
add
fadds
leave
mov
testl
xchg
mov
inc
pop
sbb
push
orb
dec
incl
sahf
mov
test
add
or
ret
adcl
scas
dec
repz
xchg
scas
test
push
aam
ds
subb
test
dec
lock
std
cs
and
call
push
or
ds
mov
cmpsl
in
sbb
jbe
fsubl
out
mov
push
pop
pop
or
mov
js
fs
fsubs
xchg
insl
push
fs
xlat
push
subl
sbb
sbb
cmp
push
jg
mov
jge
insl
ds
fiadds
dec
or
sub
pop
cmp
fistpl
jge
cs
jmp
aad
lret
and
add
and
or
lcall
fcmove
add
frstpm(287
cmp
and
lock
and
mov
mov
shlb
and
popf
sub
cmp
push
movsb
les
out
mov
inc
push
cmc
jae
mov
mov
cmovg
push
mov
and
shr
xchg
mov
int3
int3
test
dec
aad
xor
sub
jecxz
jl
mov
test
xor
and
loop
push
xchg
sti
mov
jnp
ljmp
scas
mov
sbb
outsb
or
jo
movsb
add
jnp
inc
test
add
add
xor
test
xchg
out
cmpsl
or
pushf
jp
adc
and
mov
leave
cmp
fldenv
add
add
cli
push
scas
arpl
bound
pop
mov
xor
cmp
aam
push
adc
fldl
leave
loop
inc
lock
mov
arpl
jecxz
shlb
mov
in
mov
loope
aaa
or
loope
rcll
pusha
xor
or
mov
push
push
getsec
xor
mov
adc
jecxz
loopne
push
test
jno
push
add
ss
dec
lods
jl
cmc
pop
jne
mov
mov
imul
mov
icebp
pop
data16
or
pushf
aam
mov
pop
popa
andl
fiadds
outsb
and
or
adc
cmp
jge
sahf
cmp
xchg
pusha
push
mov
sbb
mov
or
mov
movsl
jno
iret
xor
repnz
xlat
or
or
add
je
sbb
imul
cwtl
cltd
punpckhwd
cld
daa
inc
dec
add
cmp
xor
sub
repz
out
gs
cmp
xchg
xchg
mov
not
pop
cmp
push
sub
gs
int3
icebp
bt
sti
int3
cmp
xchg
xchg
imul
in
fldenv
sbb
out
inc
cmp
fucomi
adc
loope
sahf
push
xorl
test
ja
cmpsb
jno
jmp
mov
fwait
or
repz
fisubrl
pop
dec
pop
xor
aad
mov
icebp
and
cmp
ficoml
jecxz
sbb
stos
dec
mov
pop
stc
adc
dec
dec
cmp
mov
cld
into
movsl
ss
daa
insb
loope
inc
jae
push
subl
jg
into
lea
jnp
sub
dec
adc
es
or
shl
lret
mov
mov
push
xor
mov
and
inc
push
aam
enter
cmp
outsl
sub
jmp
add
xchg
mov
scas
jo
mov
enter
dec
push
mov
andb
mov
xchg
sbb
enter
roll
cld
sbb
push
imul
mov
leave
adc
nop
ss
in
cmp
add
pop
mov
xor
push
jne
xchg
xor
cli
cmc
stos
nop
or
push
les
stos
popf
and
push
sbb
add
scas
int3
inc
mov
fldcw
int3
or
add
push
push
jns
push
inc
mov
push
outsl
aad
dec
into
sbbl
xchg
xchg
in
adc
adc
icebp
and
out
ss
inc
cmpb
shll
shr
xchg
scas
cmp
or
cmp
xor
loope
pop
mov
push
fcmovb
or
imul
mov
rcl
inc
shl
adc
dec
rorb
push
loop
lret
push
mov
mov
cltd
inc
dec
mov
es
rcrb
stc
cmp
ljmp
dec
or
ficomps
xor
test
ficomps
jle
mov
add
daa
add
jne
xchg
js
iret
jmp
cltd
xor
insl
or
mov
xchg
ret
sub
ret
insl
add
push
cltd
add
js
aad
mov
push
rcl
jnp
cli
inc
in
pop
push
add
fxch
mov
adc
test
popf
out
dec
leave
jle
sahf
lahf
ret
repnz
mov
outsb
or
xchg
imul
gs
lds
mov
adc
aas
out
ljmp
pop
xchg
insb
mov
imul
out
call
rcll
sub
xchg
subb
data16
mov
adc
jae
mov
js
xchg
jecxz
adc
push
test
dec
int3
cmpl
inc
jg
imul
aas
js
push
pop
mov
ja
push
adc
fstpt
cli
gs
aas
sbb
inc
lret
jg
xchg
jle
sub
stc
sar
dec
add
dec
sbb
sbb
pushf
jne
lret
xchg
fs
js
outsb
fldt
lds
and
das
mov
ss
aam
scas
push
mov
push
mov
jge
sub
dec
test
loopne
lret
sbb
push
inc
orw
adc
or
leave
sbb
adc
pushf
int3
inc
lock
cmp
push
cmp
addb
xlat
inc
ljmp
sbb
and
adc
daa
lods
adc
pop
sub
push
cmc
mul
xor
cmp
pop
test
xor
daa
lcall
test
or
sub
cmp
mov
int3
in
iret
fwait
pop
cmp
scas
dec
subl
pop
hlt
pop
idivl
clc
addr16
and
sbbl
xchg
scas
imul
inc
mov
xlat
or
int
xlat
mov
mov
mov
pushf
fs
and
sbb
jno
daa
shlb
jno
cltd
fwait
imul
lret
repz
dec
sbb
test
gs
jl
fiaddl
push
cltd
stos
or
pop
das
jecxz,pn
orl
pop
je
es
pusha
inc
add
inc
incl
adc
mov
ss
popf
mov
dec
push
iret
pop
je
dec
cmpsl
sbb
add
stos
ret
ret
pop
mov
push
imul
jb
mov
xor
xor
movsb
bound
mov
cmp
cwtl
iret
cmp
ljmp
xor
lds
or
dec
adcl
xchg
mov
inc
pop
mov
or
aas
sahf
roll
inc
ja
pop
xchg
push
mov
push
pop
adc
outsb
sub
int
mov
imull
aam
test
fnstcw
add
outsl
sbb
cld
add
add
adc
icebp
pop
lret
add
xchg
adc
pop
cmp
jnp
das
mov
cmp
fmul
mov
push
add
dec
mov
and
out
mov
bound
out
push
lods
scas
loope
icebp
mov
mov
iret
pop
mov
les
mov
in
jg
jo
add
lods
das
dec
sti
xor
aam
sbb
out
mov
iret
insb
cmc
dec
repnz
push
test
mov
lods
daa
and
inc
sahf
or
jnp
xchg
arpl
jbe
inc
fcoml
jmp
pop
mov
sarb
rorl
inc
mov
loop
mov
inc
adc
mov
mov
xchg
rcrb
or
inc
or
shrb
cltd
jmp
mov
adc
adc
pop
xchg
das
xchg
mov
out
insb
test
fiaddl
aam
lret
add
push
fsubrl
outsb
sub
inc
add
and
adc
adc
or
jg
xor
divl
xor
mov
xchg
and
push
cli
xorb
push
inc
ds
sbb
aas
xor
imul
and
inc
adc
dec
jno
mov
and
cld
lods
dec
in
andb
divb
into
scas
pop
daa
inc
popa
adc
clc
shlb
inc
dec
stos
mov
xor
cmp
pop
loop
mov
insb
push
or
mov
je
cmpsl
cmp
sti
xor
ret
and
pusha
fcoms
nop
out
ja
movsl
push
xchg
popf
push
sti
or
pop
add
in
jno
iret
test
jbe
cmp
push
pop
inc
xchg
add
xchg
hlt
xor
cs
push
adc
movsl
ret
dec
out
cmpsb
jae
jl
out
imul
adc
jg
cmp
jo
test
test
xorl
push
movsb
js
dec
dec
notb
and
inc
stos
adc
xchg
or
jmp
xchg
xchg
int
mov
adc
push
fistpl
mov
rolb
sbb
out
cld
repz
pop
xchg
xchg
jne
push
ficomps
xchg
mov
insl
popa
orb
fmul
aad
in
ja
test
mulb
jne
dec
mov
insl
popa
add
dec
imul
or
arpl
mov
mov
sub
sub
adc
insl
cmc
push
xchg
cmc
inc
push
lcall
mov
cmp
addl
mov
xchg
mov
ljmp
ret
ret
jle
adcl
fsts
sbb
cmpsb
out
or
dec
hlt
xchg
mov
aaa
dec
cmp
push
scas
std
in
push
ret
stc
test
shl
gs
fisttps
shrb
test
sub
aad
mov
xchg
divb
stc
loopne
and
and
pop
pop
or
sbb
xchg
cmp
pop
aaa
repnz
mov
push
mov
and
sti
ljmp
lahf
mov
pusha
or
fwait
pop
xchg
mov
addr16
inc
adc
push
add
ds
pushf
dec
imul
jns
cs
push
inc
xchg
lret
fdivl
arpl
test
testb
jg
pop
outsl
jg
pop
jne
sbb
mov
cmp
aam
cmp
shll
dec
clc
mov
aas
lock
inc
andl
ds
out
xor
ja
push
loope
jl
fldenv
test
add
pop
mov
mov
push
pushf
sub
test
mov
jl
adc
out
test
ljmp
cmpsb
nop
test
mov
mov
nop
imul
cltd
je
es
pusha
and
mov
push
push
repz
and
icebp
jb
dec
add
cmp
stos
ret
popl
cmp
xlat
mov
pop
mov
inc
and
stos
xchg
mov
shr
mov
xchg
adc
sub
imul
jecxz
xlat
pop
and
push
mov
xor
and
lcall
pushf
ss
cli
loope
inc
cmp
pop
mov
mov
mov
rolb
adc
imulb
cmp
loopne
shlb
pop
loopne
xor
dec
xor
enter
pop
pop
mov
sti
in
add
jbe
lret
jmp
sbb
into
mov
sub
xor
cmp
in
sarb
mov
sbb
sub
dec
cmc
repz
aas
dec
popa
clc
pusha
outsl
bound
or
pop
hlt
mov
jne
int
xor
cltd
mov
and
xor
daa
orb
loop
add
xorb
icebp
xor
sbb
xchg
push
push
sub
lea
mov
mov
dec
cmp
mov
dec
adc
movsb
mov
movsb
push
addl
xchg
in
or
push
xchg
sub
shrb
shll
lcall
call
sbb
adc
scas
scas
xor
or
pop
mov
imul
adc
xor
jb
lret
faddl
pop
test
fisttps
inc
imul
inc
int3
adc
cld
xor
in
fnstcw
push
repz
push
jbe
mov
loopne
cltd
hlt
jl
push
and
add
mov
push
out
xchg
lcall
jmp
xor
mov
add
test
clc
pop
dec
mov
in
mov
loope
and
and
mov
pop
jl
or
out
and
pushf
dec
dec
sti
fwait
xorb
xor
mov
or
sub
lcall
xor
cmp
inc
std
outsl
fdivl
mov
daa
ljmp
out
push
adc
push
call
or
test
aaa
icebp
push
clc
xor
mov
mov
push
inc
push
ds
jecxz
push
inc
out
lods
fs
mov
aam
adc
push
idiv
scas
clc
addr16
adc
addb
lret
cmc
adc
pop
push
stos
sahf
inc
sub
ss
adc
sbb
mov
jnp
lods
mov
or
test
popa
mov
cmpsl
outsb
adc
add
rol
mov
sti
addr16
or
pop
xchg
stos
aad
jp
push
fistpl
adc
aam
jne
or
push
mov
enter
mov
pushf
mov
push
mov
or
cwtl
cmpsb
adc
or
lock
or
dec
iret
push
jns
xor
add
jge
jbe
sub
sub
stos
das
and
xlat
lods
add
stc
jae
add
enter
sti
sbb
inc
pop
repz
loope
mov
dec
rcl
dec
stos
aaa
jno
pop
push
mov
adc
je
lea
arpl
xchg
add
out
add
daa
faddp
add
push
frstor
sbb
fwait
xorl
cmp
sub
lock
divl
push
inc
jecxz
cwtl
adc
gs
xchg
cmpsb
pop
push
lods
pop
xchg
aaa
mov
cs
jge
sub
mov
ljmp
or
inc
add
scas
jmp
mov
jo
jge
pop
inc
in
lock
gs
xchg
mov
dec
cmp
insb
xor
hlt
mov
xchg
push
fmuls
and
mov
sarb
mov
adc
add
xorl
mov
jmp
test
arpl
js
mov
inc
loope
pushf
cmp
push
sbb
mov
add
jnp
mov
insb
ljmp
ja
xor
lods
clc
sahf
rcr
mov
adc
jne
fisubrl
loop
loope
out
int
push
xchg
jae
int
cmp
cmp
xor
insb
dec
adc
stc
fs
jmp
pop
jp
rolb
js
jae
sbb
rorb
jbe
xor
stos
mov
xchg
sub
sub
leave
std
adc
inc
fld
shlb
mov
sbb
shll
mov
clc
or
leave
dec
jmp
sbb
lea
ret
xchg
xlat
leave
into
sub
sub
pop
rcrl
mov
or
popa
loop
popf
fcomps
jp
mov
jecxz
push
adc
jns
xchg
lahf
xchg
in
fdivrs
int
pop
aas
jbe
cmp
xchg
mov
stos
shll
arpl
rcll
dec
clc
pop
shll
insb
loope
in
cmpsl
lcall
inc
shll
or
dec
xchg
adc
shl
mov
mov
hlt
and
shrl
adc
clc
mov
or
jno
pop
sbb
xchg
sub
xchg
leave
mov
scas
xchg
jmp
and
test
outsl
notb
jne
or
jecxz
out
mov
pop
insb
jae
stos
adc
sarl
cmp
push
mov
cmpl
popf
ljmp
jmp
dec
jb
cmp
pop
inc
cmp
cli
rcrl
sbbl
mov
mov
test
jnp
out
loop
push
gs
je
fldenv
cmp
scas
repnz
xchg
xorb
add
or
mov
pop
inc
cmpsb
int3
cwtl
mov
mov
jae
loope
xlat
fisubrs
mov
repz
add
pop
sbb
call
mov
dec
xor
add
in
or
mov
xchg
jl
mov
mull
out
inc
pop
add
sub
mov
addr16
push
dec
pop
andb
paddusb
iret
das
adc
pop
dec
in
test
xchg
and
hlt
push
cmp
mov
pop
stos
repnz
cmp
lds
pop
out
add
xor
mov
sub
hlt
inc
cmpsl
inc
xor
jnp
movb
cmpsb
mov
cmp
lret
push
xor
mov
jmp
lahf
inc
movsb
and
and
sbb
xor
out
push
lcall
push
push
arpl
lea
clc
xor
pop
xor
repnz
dec
loope
dec
cmpsb
fidivrl
pushf
sbb
jecxz
jge
out
xchg
in
mov
test
insl
jbe
loop
es
mov
cmpsl
xchg
sahf
into
add
je
mov
out
or
cmp
push
in
lods
xchg
push
sub
adc
lods
cmp
or
clc
add
lds
pushf
pop
fildll
cmpsl
lds
cmc
mov
imul
fsubrp
sti
jle
add
xchg
in
push
fs
pop
je
mov
std
shl
dec
mov
xchg
repnz
cld
adcl
jo
add
jo
jnp
je
sbb
jmp
aaa
sbb
mov
jg
lret
insl
xchg
fldl
mov
lea
addr16
test
cld
push
repz
cmp
into
inc
inc
sbb
insl
add
fs
push
adc
push
pop
sbb
les
loop
mov
cmp
sbb
js
jg
add
sub
pop
das
mov
stos
stos
xor
adc
loope
or
repnz
arpl
add
adc
jle
sarb
mov
push
cmp
xor
mov
das
or
sub
stc
shll
and
stos
xchg
jno
vunpckhps
cltd
dec
dec
mov
or
andl
int3
cmp
pop
shl
cmc
les
push
mov
fimull
jno
adc
mov
movsb
stc
jl
jnp
in
addr16
inc
fcomp
ds
cmc
fisubrs
fwait
dec
in
push
mov
aaa
jle
ljmp
lods
test
or
fistps
xlat
pop
pop
mov
jae
scas
rcrl
out
ds
dec
dec
mov
push
sbb
or
aam
push
ret
arpl
enter
or
movsb
into
and
mov
stc
push
mov
sub
mov
or
insl
and
adc
jmp
ficompl
and
push
mov
jg
dec
ds
inc
mov
push
nop
ret
add
jns
or
push
jo
sbb
and
dec
push
xchg
test
jno
jno
pop
mov
ret
leave
or
jo
ds
mov
ja
aaa
test
int3
xor
dec
dec
mov
jle
gs
fnclex
and
mov
lcall
sbb
test
inc
jl
decl
mov
fdivrs
lds
sub
dec
dec
sbb
std
sahf
adc
cmp
nop
xchg
fbstp
push
adcl
pop
xchg
mov
in
jnp
inc
es
and
xchg
pop
xchg
cs
int
inc
cmp
lea
or
pop
mov
push
sar
ret
scas
mov
leave
in
jns
add
cmp
push
cmpsb
sub
cli
shl
jmp
jge
mov
decb
mov
dec
mov
push
jae
scas
cmp
push
xor
jmp
sbb
std
sbb
adc
jbe
xlat
ds
jmp
mov
dec
xchg
lock
mov
movsww
out
aaa
out
dec
cmpsl
xchg
and
mov
out
mov
cltd
decb
lods
and
cmp
scas
ss
xchg
iret
divl
xchg
lret
inc
mov
xchg
ss
dec
mov
sti
cmc
inc
xchg
push
xor
and
fs
test
les
cmp
mov
inc
xor
mov
lods
and
mov
iret
sub
cmp
jl
mov
mov
dec
enter
add
lret
xor
loope,pt
ret
mov
adcl
in
iret
dec
sahf
loop
mov
push
push
repnz
dec
stc
das
sub
cvtdq2ps
test
out
lret
ds
jle
pop
mov
push
rol
loopne
inc
ja
fmul
js
adc
cmp
mov
or
inc
xor
sbb
mov
loopne
jp
mov
out
aaa
push
xchg
mov
push
xchg
in
dec
leave
dec
xchg
stos
cld
sub
loop
jge
dec
pop
push
sarb
jecxz
dec
cs
daa
mov
ljmp
adcl
jmp
ret
and
lods
adc
mov
repnz
sarl
mov
out
push
les
arpl
pop
mov
inc
mov
adc
sahf
ds
shll
sbb
dec
cltd
mull
lds
sahf
fisttpl
xor
xchg
lods
cmp
inc
imul
sbb
dec
leave
jo
fsincos
clc
push
jae
adc
aaa
mov
inc
dec
pushf
mov
cmp
les
cmp
sbb
test
inc
xlat
rclb
stos
imul
add
or
add
ja
shrl
imull
pop
leave
out
sbb
imul
sbb
orl
cwtl
pop
or
inc
xor
jmp
xchg
cs
sbbl
icebp
test
sbb
mov
pop
mov
sbb
je
pop
xor
or
push
xchg
adc
es
int
in
pop
outsl
daa
vphaddwq
xlat
and
popf
js
and
out
nop
jp
inc
sub
mov
daa
jmp
pushf
xor
shlb
dec
mov
ds
fistl
fcmovne
pop
pop
jae
arpl
xor
adc
insl
rclb
addr16
imul
test
int3
mov
sub
push
stos
sbb
mov
sub
or
fwait
inc
push
fbld
es
in
mov
dec
insl
lock
testb
pop
adc
sub
dec
rcrl
mov
rol
jo
daa
idiv
add
add
pop
xchg
movsb
dec
push
mov
outsb
and
add
into
int3
mov
mov
or
lds
jnp
push
cltd
jns
orb
add
aad
dec
or
repz
popa
add
stc
enter
pop
hlt
jecxz
cmp
out
xchg
and
sbb
jmp
ret
mov
pop
fwait
mov
push
pop
inc
imul
bswap
std
pop
pop
mov
and
dec
mov
sbbl
xchg
int3
stos
out
add
cmpsl
loope
into
aas
repz
jno
mov
jle
dec
enter
sbb
or
cld
xchg
rcl
mov
inc
aaa
hlt
iret
cmp
dec
cmpsb
int
push
mov
in
insl
sbb
cwtl
inc
jecxz
dec
cltd
and
fwait
daa
in
ficompl
cmp
hlt
loope
xor
lahf
js
in
mov
fcompl
mov
je
mov
push
outsl
ljmp
ret
and
movsl
jp
scas
hlt
out
push
out
mov
repz
or
insl
test
aas
mov
aaa
xor
flds
pop
movsb
and
icebp
xchg
js
adc
scas
outsl
adc
clc
jnp
mov
je
pop
addl
sti
or
add
dec
scas
outsb
outsl
js
and
add
adc
cmp
out
insb
loopne
pop
and
lahf
aaa
pop
scas
outsb
push
jge
sub
in
out
arpl
mov
jle
inc
pop
push
mov
imul
dec
insb
jae
pop
jecxz
inc
jae
mov
ss
mov
and
pop
sbb
lea
fistpll
mov
jne
mov
ds
es
repz
mov
xlat
sub
push
fnstenv
fs
dec
xchg
pop
test
add
jl
negb
mov
jnp
jns
xchg
pusha
cli
jns
stc
bound
mov
dec
scas
lods
dec
test
sbb
or
jecxz
xchg
xchg
mov
cld
mov
out
sub
test
enter
jnp
jno
mov
push
mov
jnp
loope
mov
loopne
mov
inc
xor
mov
repz
out
adc
insl
lea
pop
jmp
mov
ret
jns
mov
fldl
jmp
push
inc
sub
enter
test
decl
or
sub
dec
or
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
dec
sbb
fsubs
cmp
bound
fs
lods
mov
push
push
push
ljmp
mov
add
in
repz
orl
jmp
xor
dec
xchg
fs
enter
mov
inc
adc
pop
push
xor
jmp
xchg
sbb
scas
push
mov
aad
mov
cmc
movsl
inc
mov
es
arpl
xor
xchg
movaps
inc
push
jle
frstor
test
sti
dec
jl
inc
sbb
cmc
mov
push
xchg
inc
mov
jb
mov
dec
arpl
in
adc
ret
movsb
cmp
jle
shl
adc
inc
dec
and
adc
xor
out
sub
adc
aas
insl
cmp
inc
call
push
sbb
repz
jmp
mov
arpl
repnz
jl
out
and
int
cmpsb
pop
mov
bound
jae
loop
les
adc
lret
arpl
iret
negl
jo
pop
leave
add
inc
stos
xor
mov
mov
loopne
cwtl
in
lock
cli
xchg
or
xchg
sbb
sbbb
push
lcall
mov
lahf
sarb
jle
mov
pop
push
pop
pop
mov
in
fsubrp
ja
sbb
push
jnp
int
or
fnstsw
xlat
pop
int
aad
lds
les
mov
pop
fidivs
fidivrl
popf
or
or
loop
arpl
adc
mov
lods
mov
ret
push
jo
push
cli
jne
add
pop
ficoms
mov
dec
inc
or
or
xchg
mov
cmp
cmp
push
stos
push
mov
pop
push
push
jbe
mov
sub
out
cs
dec
mov
mov
bound
cmp
adc
xor
clc
je
rol
mov
push
nop
dec
aas
mov
sbb
mov
dec
outsb
cmpsl
loope
inc
js
or
out
hlt
outsb
sbbl
scas
je
mov
daa
push
aam
sbb
in
call
pop
inc
sub
cmpsl
or
les
mov
sbb
sbb
xchg
push
pop
addr16
aas
and
jg
popa
lods
leave
imul
push
xchg
mov
lds
xorl
fisubl
mov
jo
int
andl
mov
sub
inc
sahf
outsl
sub
loope
adcl
dec
sbb
iret
jne
into
jae
loop
mov
out
nop
push
ret
jo
cwtl
out
movsb
push
imulb
sarb
adc
push
pop
arpl
mov
sub
imul
adc
mov
sbb
cmpsb
fisubrs
mov
dec
sub
mov
or
test
fldt
fs
dec
mov
xor
mov
je
jns
imul
cmp
pop
cmc
scas
inc
mov
xor
ja
pusha
test
cmp
add
xchg
push
popa
xor
aas
shl
push
push
idiv
js
adc
dec
mov
dec
xor
addr16
sub
adc
push
aas
push
adc
push
ret
jmp
pop
hlt
es
insb
sub
hlt
jmp
jl
arpl
lahf
mov
sbb
push
imul
pop
xchg
fwait
imul
mov
loop
insb
call
movsb
scas
lods
shrb
iret
cld
or
mov
dec
fldt
pushf
fs
dec
repnz
push
pop
sbb
test
insl
pop
pop
xlat
mov
sbb
fsubs
push
add
dec
add
ljmp
and
out
mov
mov
cltd
lods
dec
push
or
movsb
pop
xchg
pop
jg
ljmp
jbe
inc
lea
mov
ds
pop
cmp
fstpl
js
jecxz
clc
xor
arpl
rol
stc
cli
sub
jnp
js
inc
mov
adc
pop
and
icebp
cmp
push
jp
or
aaa
dec
sub
fsubrl
xchg
and
mov
sbb
xchg
sahf
inc
inc
pop
stos
fcoms
pop
or
fs
flds
push
mov
std
or
inc
and
ds
and
out
pop
imul
pop
rcl
stos
test
inc
adc
push
enter
mov
out
push
test
mov
stos
in
icebp
and
fs
lea
push
jl
jle
cmp
xor
add
dec
mov
xchg
icebp
adc
loop
or
repz
xchg
inc
push
popa
es
imul
outsl
mov
stc
iret
fcomp
mov
mov
mov
in
fs
es
lods
xor
xor
mov
bound
jge
adc
fcoml
and
mov
mov
pop
aam
adc
adc
fldenv
or
ss
mov
int3
and
std
inc
push
in
inc
inc
push
icebp
jo
cwtl
outsb
lock
jge
xor
ss
sbb
gs
pop
pop
mov
mov
dec
fstl
xchg
push
lods
je
ficompl
adc
pop
insb
ret
mov
mov
sbb
fs
dec
sbb
dec
incl
lods
cmp
jns
xor
add
xchg
arpl
popa
sub
fisubrs
lods
dec
pop
xchg
mov
gs
cld
or
popa
sbb
cmp
xchg
rcl
sub
mov
inc
fcmovb
xchg
fisubl
jb
lcall
mov
push
push
decb
sarb
adc
insb
cmp
xchg
outsl
fistps
dec
mov
fsubs
rcrb
fcmovbe
js
rorl
jmp
rclb
out
lahf
xor
add
scas
adc
inc
or
and
push
outsl
loopne
mov
lret
in
xchg
mov
xchg
jg
sbb
mov
ds
cmp
sub
fldl
pop
cmp
test
test
pushf
ja
rcrb
add
xorb
orl
pushf
hlt
popf
push
adc
clc
jl
pop
inc
and
sub
inc
movsl
pusha
jne
inc
test
push
mov
test
std
sbb
fstl
adcb
xchg
jecxz
aaa
in
shll
fisubrs
xchg
cld
mov
out
jnp
shr
dec
jae
push
lcall
jne
dec
daa
stos
inc
mov
jo
data16
or
cmp
pop
mov
sbb
mov
in
test
or
call
adc
lea
les
cltd
push
dec
inc
add
js
dec
clc
push
push
dec
and
sub
sbb
mov
lea
adc
mov
xor
cmpb
mov
es
dec
push
pop
test
mov
rclb
int
cmp
xor
sbb
in
lock
lods
mov
repz
jns
jns
jmp
mov
fbstp
loop
xor
jae
cltd
adc
cs
shl
shl
xchg
and
ret
jns
iret
clc
lret
push
xor
lods
xchg
jns
sbb
outsb
ror
lcall
mov
cmpsb
ficoms
sub
xorb
jmp
pop
fcmovnb
stc
ja
sub
daa
in
fsubp
add
cld
inc
jle
test
cmp
sub
out
insb
in
xor
mov
lahf
cmpl
or
mov
sbb
jp
cmp
ljmp
cmp
mov
loopne
in
mov
mov
push
mov
lcall
pop
push
dec
xchg
lea
mov
jl
adc
leave
ret
or
pop
cld
sahf
jl
hlt
fidivrs
lods
inc
sub
xor
fcompl
inc
mov
adc
in
or
insl
rolb
and
pop
sub
push
test
sub
loopne
incl
push
cmp
imul
in
lret
int3
mov
repz
lahf
or
test
cwtl
ss
lods
xchg
and
jne
ffreep
xchg
jg
cmp
loop
pop
out
movsl
cmp
int
and
stos
test
nop
pop
in
push
out
cmp
test
pop
sub
adc
push
es
je
mov
mov
xchg
dec
repz
adc
mov
mov
push
sbb
jl
enter
bound
int
pop
sub
push
jmp
and
jns
imul
enter
cmpsl
jle
or
cwtl
arpl
lcall
mov
jne
push
sbb
inc
addb
jo
test
jb
cmp
dec
nop
add
cwtl
or
outsl
and
lret
lock
jmp
inc
insb
fcmovb
das
pop
inc
jbe
mov
ficoms
arpl
xor
fsts
xchg
es
pop
bound
imul
sbb
mov
or
fwait
test
dec
jecxz
sbb
dec
xor
sub
cmp
out
xlat
sub
fcomps
data16
loopne
adc
in
jp
xchg
jl
loopne
pop
icebp
test
inc
push
pop
xchg
cmp
jp
in
jo
aad
andl
in
mov
mov
jns
sub
roll
xchg
mov
fistl
push
xlat
repz
enter
mov
add
and
dec
fbstp
mov
or
cmp
sub
repz
cltd
insb
mov
std
fcmovbe
repnz
cmpsb
mov
cmp
and
ret
push
imul
jl
cmpb
cltd
mov
add
cmp
mov
aas
xacquire
jae
xorl
mov
add
xchg
fwait
jecxz
cmpsb
push
mov
into
aad
test
xchg
fwait
test
int
into
fisubs
adc
aas
adc
test
pop
jecxz
orb
frstor
or
test
mov
sbb
push
hlt
lahf
xchg
lret
or
pop
jl
and
add
xor
out
jmp
inc
adc
scas
sti
loopne
stc
sahf
add
jecxz
repnz
ret
xrelease
aad
jp
mov
add
loop
mov
push
cltd
sub
xchg
inc
in
xchg
sti
out
xchg
dec
insl
inc
pop
jmp
loope
jae
fnclex
mov
jne
gs
test
add
and
dec
sbb
minps
sub
imul
push
xchg
rcl
cmp
jo
xlat
mov
pop
mov
cltd
stos
inc
jmp
fwait
jp
lahf
pop
ficompl
add
call
les
xchg
pop
add
and
popa
cli
repz
aam
mov
xchg
ds
add
pop
nop
jbe
mov
mov
sti
lahf
int
jg
cwtl
jae
pushf
push
flds
insb
shr
test
cmp
xchg
movsb
and
sbb
mov
loope
testl
movsl
lods
inc
push
pusha
in
pop
inc
subb
incl
ljmp
jmp
inc
int3
data16
mov
or
fildl
add
shr
hlt
push
inc
aad
das
push
inc
jbe
pop
dec
xchg
inc
add
hlt
mov
in
jno
mov
inc
adc
xchg
aam
and
mov
mov
mov
inc
lods
mov
lods
shr
cmp
inc
faddp
and
mov
xchg
fsub
sbbb
xor
mov
push
push
mov
popa
push
mov
cmp
jmp
add
sub
xorb
cld
cmp
cli
pushf
jl
or
sarl
les
mov
mov
sbb
dec
test
xchg
jge
push
sbb
push
ss
mov
mov
stos
xchg
or
loopne
xor
adc
cltd
cwtl
mov
or
ret
sub
inc
push
push
sbb
aaa
mov
xchg
and
push
leave
xchg
cltd
xchg
insb
fistps
in
mov
jle
add
je
leave
movsb
iret
ss
nop
jne
mov
repnz
mov
mov
xorl
loope
bound
sub
sub
mov
adc
inc
imul
in
jmp
scas
aas
popl
loope
inc
pop
pusha
and
pusha
addr16
int3
add
cmc
sbb
sub
cmp
imul
loope
outsb
pop
pop
mov
int
and
imul
push
mov
xlat
mov
dec
mov
in
or
pop
pop
mov
jnp
shrb
push
dec
nop
je
dec
gs
push
in
cmp
hlt
int3
stos
bswap
push
dec
pushf
int
cmp
arpl
dec
mov
repnz
pop
popf
mov
push
movb
mov
rorl
call
outsl
push
gs
fistps
or
adc
jle
cmp
shl
inc
fsubrl
mov
and
in
js
pop
out
fcmovu
mov
sub
xchg
pop
sbb
mov
xor
cmpsb
test
icebp
shrb
and
jae
or
aas
fst
add
dec
mov
insb
mov
fldenv
xchg
inc
repz
pop
movsl
fisubl
xor
lods
pop
enter
inc
fildl
js
hlt
xor
adc
inc
cmp
jo
leave
inc
ret
sub
mov
loop
je
ss
dec
xchg
adc
movsl
pop
lods
mov
and
adc
adc
or
add
or
pop
inc
vunpcklps
xchg
js
adc
inc
sub
add
xchg
or
es
push
aad
push
push
pop
sti
dec
sub
popf
hlt
or
jmp
cmpsl
and
inc
push
push
sbb
daa
test
jecxz
es
push
imul
mov
jae
pop
loop
clc
ficoms
inc
rorb
sub
inc
sbb
daa
inc
es
pop
adc
sub
mov
xchg
jg
cmc
test
int
and
jae
lret
jno
xor
scas
mov
mov
in
fwait
jl
nop
inc
lds
aam
lret
and
dec
mov
insb
cmc
lahf
loopne
push
xor
push
inc
dec
mov
aad
adc
and
out
inc
testl
mov
cmp
mov
jns
repz
mov
add
fwait
in
fisubrs
inc
xchg
fstps
pop
ja
xchg
fs
insb
sbb
or
jbe
ljmp
scas
enter
aas
mov
jo
cmp
sbb
sub
arpl
mov
push
fcmovnbe
add
stos
jecxz
ret
and
sahf
mov
in
cs
mov
inc
mov
movsl
push
add
mov
testl
mov
add
ljmp
fisttpll
xlat
jecxz
sub
and
and
sbb
movsb
xchg
jp
cmpsl
std
pop
mov
mov
mov
push
add
xorl
mov
cmpsl
cltd
mov
ljmp
aas
dec
add
pop
or
adc
pop
mov
sarl
mov
push
or
mov
sub
add
or
xchg
push
arpl
push
xor
or
sub
pop
sub
clc
mov
xchg
pop
sti
sbb
ffreep
jae
pop
fcmove
and
bound
movsb
subb
adc
and
shlb
xchg
sub
sahf
popf
pop
rolb
icebp
adc
loop
or
jo
icebp
jns
mov
cld
or
dec
pop
xchg
jnp
inc
jl
leave
fmull
negb
jnp
pop
mov
push
enter
lret
jns
lods
mov
ds
and
rcrb
mov
sub
add
cs
cmp
push
test
inc
dec
scas
sub
test
into
gs
mov
call
xor
mov
mov
out
push
fsubrs
scas
scas
xchg
or
cmp
orl
aad
push
push
xchg
mov
cmp
xchg
dec
add
inc
inc
xor
push
movsb
int3
leave
insl
jo
ljmp
add
int
flds
shrl
sbb
push
adc
sub
mov
gs
cli
pop
jp
add
cmp
ss
and
xor
rcrb
and
and
test
cli
ja
mov
jns
cld
cmpsb
pop
mov
mov
lret
aas
cmp
pop
jle
mov
add
jge
movsl
push
subl
xor
push
jae
popf
fcmovne
mov
sbb
push
fisttpl
pop
pop
and
cmp
inc
in
int3
sbb
lods
dec
popf
es
sub
shrl
aaa
sub
sarb
sub
ret
xor
bound
sbb
shlb
shlb
ljmp
jnp
addr16
testl
iret
loope
adc
add
xchg
movl
pop
inc
lods
sub
cmp
leave
addr16
pop
dec
ja
fimull
mov
je
add
jbe
mov
lods
sbb
stos
mov
and
rorb
mulps
mov
pop
mov
js
pop
mov
mov
ljmp
ds
xchg
dec
jmp
loopew
or
hlt
test
repz
fsubs
cld
add
test
fiaddl
cmp
insl
sub
pusha
add
or
sbb
rol
add
mov
lods
sub
xchg
icebp
iret
xchg
std
or
clc
mov
jl
xlat
cmp
sub
fldenv
iret
jle
adc
mov
clc
or
add
push
call
xchg
lea
push
aaa
cmp
stos
cmc
xchg
adc
jae
mov
fcomps
into
scas
cld
and
or
mov
add
jne
outsb
cmp
mov
sub
dec
inc
sbb
sbb
stos
sub
arpl
call
mov
in
ficoml
push
bound
imul
inc
jne
lds
rcl
cmc
stos
mov
add
ret
scas
les
and
or
sbb
xchg
mov
or
xor
push
js
xchg
xlat
test
hlt
cmpsb
hlt
fs
aaa
pop
ja
xlat
call
sbb
jl
jmp
sub
int3
adcl
aas
add
pop
repnz
push
adc
mov
in
ret
add
fidivl
adc
mov
fwait
movsb
push
pop
je
outsl
cltd
stc
inc
push
jmp
jo
push
adc
xor
pop
mov
cld
sub
js
pop
sbb
out
pop
mov
clc
sbb
and
cmp
pop
inc
mov
das
stos
push
js
pop
sbb
leave
sbb
dec
cmp
jle
loop
nop
pop
lea
lds
or
insb
out
mov
std
sbbb
fcomps
test
mov
mov
icebp
mov
call
xchg
mov
adcl
inc
pop
ljmp
and
ds
or
and
fwait
dec
mov
mov
xor
outsb
and
std
sbb
rclb
or
loope
mov
testl
lret
cmp
pushf
inc
lock
xorb
jmp
dec
xchg
dec
add
mov
mov
jno
xchg
outsl
mov
les
mov
test
xlat
std
stos
adc
adc
pop
testl
das
cs
add
jno
mov
push
mov
popa
mov
int3
std
fcoml
mul
mov
pusha
loopne
adc
xchg
outsb
hlt
out
mov
cld
in
xchg
dec
jp
loope
test
or
aam
adc
add
movsl
cmp
dec
test
inc
fwait
cwtl
adc
movsb
xchg
fiadds
mov
cmp
je,pn
cs
jle
sub
push
cmp
and
inc
fbstp
out
fisubl
push
scas
rclb
adc
xor
lea
jae
es
adc
imul
adc
jno
push
aam
dec
data16
hlt
sbb
mov
push
push
push
addb
pop
sbb
xor
inc
sbb
mov
scas
ds
and
insl
rorb
push
pop
mov
bound
sbb
add
lods
xor
call
mov
int3
fwait
mov
xor
out
push
add
sub
std
cltd
push
or
mov
fistps
push
popa
rcr
stos
push
inc
mov
adc
jbe
inc
push
mov
shlb
ror
add
int
aas
dec
lret
fsubrs
nop
push
in
pop
and
xor
jmp
imul
test
mov
push
aaa
jl
mov
pop
mov
or
popf
add
pop
lahf
jbe
jg
imul
pop
insb
out
leave
xor
test
pop
jmp
lods
dec
ljmp
sbb
push
jbe
mov
popf
mov
or
xchg
stc
jle
cwtl
mov
repz
pop
and
sahf
pop
in
int
les
cmp
enter
out
mov
inc
in
sbb
pop
out
xor
stos
dec
les
pop
lret
jb
push
into
andl
xor
inc
decb
adc
cmp
nop
leave
or
or
int
outsl
shll
dec
fisttpll
push
dec
test
shl
jnp
or
lods
orb
pop
lcall
inc
lock
cld
daa
push
pop
and
pop
mov
push
mov
push
leave
xor
fdecstp
cmp
push
sub
jcxz
out
ss
movsl
int
mov
hlt
lret
xchg
cltd
movsbl
imul
xor
mov
cmp
cmp
cmpsl
mov
push
loope
sub
inc
or
rcrl
mov
jmp
outsb
adcb
xchg
add
les
push
xchg
xchg
enter
ret
cld
push
pop
cmp
jno
inc
nopl
push
adc
or
std
js
cmpsl
pop
fcompl
xor
xchg
call
sti
ss
sarl
jne
push
aad
lods
in
adc
pop
sarl
add
mov
stc
inc
fisttps
adc
addl
jmp
icebp
xlat
mov
xor
pusha
mov
lcall
mov
xor
pop
cmp
or
loopne
inc
push
scas
andb
push
addr16
sbb
shrl
inc
roll
into
push
lds
scas
fs
push
or
push
loopne
push
xchg
pop
rorb
into
add
adc
or
or
ficompl
cmp
add
popl
sbb
jnp
ja
inc
popf
jmp
and
icebp
daa
dec
push
mov
sub
ret
mov
out
adc
clc
jno
jno
bound
push
enter
cli
jnp
push
cmp
out
push
or
lret
fimuls
ds
push
or
call
mov
push
in
jb
loop
jle
jg
or
push
jb
jl
cmp
jne
mov
ljmp
movsl
iret
mov
dec
jo
pop
fmuls
testb
call
lods
lcall
int
fnstsw
pop
xchg
push
mov
outsl
ficoml
loopne
nop
push
fcoml
xchg
shrl
xchg
mov
aaa
shrl
aam
mov
mov
inc
push
cwtl
or
adc
jo
sbb
popa
aam
inc
out
cli
mov
or
stos
jns
jmp
clc
add
pop
test
sub
push
test
pop
mov
pop
inc
cwtl
test
xchg
loop
pusha
loope
cmpsl
ljmp
mov
in
imulb
jp
loope
mov
lahf
clc
xor
xor
pop
and
popa
sbb
adc
mov
inc
andb
std
clc
hlt
rcll
clc
jnp
cmp
jle
add
ret
xor
add
out
xor
mov
cli
mov
or
dec
fistl
fucom
mov
pop
inc
dec
ret
fcomp
xor
push
pop
inc
jae
lret
cmp
clc
das
test
bound
bound
pop
push
mov
es
shr
pop
push
inc
lret
or
notb
mov
es
pop
clc
movsb
or
out
inc
insl
dec
bound
xor
pop
pop
sub
mov
std
xor
sbb
mov
fldt
sbb
icebp
call
imul
fucom
outsb
ss
in
push
idivl
cmp
and
cmpsb
pop
push
pop
or
push
lods
leave
sahf
fdivl
add
add
das
clc
mov
std
add
in
fsubrs
iret
xchg
fsts
sahf
sub
movsb
or
cmp
sub
aam
imul
sbb
adcl
nop
in
xor
jle
cmp
xchg
cmp
lods
inc
mov
ja
mov
mov
jg
test
in
add
xor
push
mov
out
mov
sbb
into
cld
test
in
pop
inc
dec
push
xor
int3
in
jmp
jns
pop
lods
mov
cmp
mov
mov
adc
dec
leave
mov
test
int3
cmp
icebp
fmuls
hlt
lret
dec
jns
sbb
mov
testl
mov
rol
push
je
movsb
mov
add
cmp
xchg
xor
shlb
xchg
add
shlb
mov
push
xchg
push
jo
pop
imul
shrl
add
inc
xchg
adc
xchg
inc
pop
stos
cmpsl
mov
es
movsl
mov
xor
sbb
es
adc
adcl
inc
xor
stos
sbb
aaa
mov
pop
cwtd
push
call
repnz
push
arpl
push
adc
out
cs
xor
push
sahf
mov
pop
mov
cmp
insl
sbb
sbb
sbb
in
push
mov
mov
pop
jge
movb
mov
gs
mov
jge
shll
jb
mov
mov
lods
mov
xchg
test
daa
mov
clc
out
inc
icebp
dec
dec
inc
aad
clc
and
int
divl
inc
cmc
dec
cmpsl
sub
jnp
hlt
loope
inc
dec
inc
pop
push
outsb
cmp
insb
das
aaa
leave
ja
inc
cld
cmp
lds
and
loop
jb
xchg
xor
dec
jmp
es
stos
imul
scas
pushf
loop
pop
pop
cmpsb
mov
jbe
rcrb
stc
sub
xlat
or
and
push
xor
testl
dec
push
test
mov
sub
and
sub
inc
out
mov
fldenv
or
das
mov
jecxz
xchg
mov
xchg
fidivs
aas
out
ret
cmpsl
addl
addr16
cli
jmp
js
repz
outsl
mov
int
xorl
mov
pop
mov
push
fs
sarb
push
lods
dec
sub
sub
es
gs
std
xchg
in
stc
dec
jo
push
lahf
rolb
jnp
mov
fdivl
iret
jmp
fmulp
pop
lahf
inc
xchg
cs
sahf
push
stc
sahf
adc
aad
repz
adc
inc
mov
adc
aam
jb
add
cli
imul
pop
imul
aad
xchg
in
divl
sub
mov
jne
shlb
ds
leave
add
jle
and
xchg
sub
mov
push
loopne
lahf
int3
xchg
push
int
in
sahf
mov
inc
mov
js
push
xchg
xchg
movl
test
mov
cmp
add
adc
jmp
sbb
repnz
lret
loop
add
das
mov
push
lret
adc
jecxz
xor
ret
roll
aas
push
adc
mov
gs
sub
add
movsl
mov
insb
in
sub
cmp
cmp
mov
xchg
jp
dec
push
arpl
lret
mov
icebp
xchg
push
push
or
push
clc
xchg
xchg
ljmp
faddl
rcll
xor
cmpb
xor
fstl
loope
cmp
scas
ss
adcl
xchg
lret
std
dec
mov
call
lea
in
test
push
stos
adc
cmpsl
xchg
das
outsb
rcrb
out
repz
xchg
mov
enter
lret
sti
cmp
mov
ret
das
and
sbb
mov
filds
cmpsl
lock
mov
dec
adc
movsl
push
push
push
mov
sub
js
stos
and
push
mov
dec
or
pop
pushf
enter
dec
add
push
shlb
out
cmp
mov
movsl
sbb
lret
jae
loop
sti
lock
jbe
hlt
lods
sub
gs
sbb
rclb
inc
pop
into
ret
mov
cmp
cmp
stos
psrad
pinsrw
loope
add
mulb
xor
xor
push
cli
inc
pop
inc
inc
mov
rclb
dec
or
add
in
xchg
sahf
adc
dec
mov
lods
jns
std
aaa
inc
cmp
fldenv
and
cltd
xchg
jp
movl
insb
sub
aas
push
xchg
out
imul
and
stos
fwait
xchg
das
sbb
mov
in
addr16
fucomp
aad
mov
scas
push
inc
pop
jae
xchg
aas
enter
sbb
dec
mov
push
jle
cmp
push
push
pop
das
jb
fdivr
xor
frstor
jb
inc
cmp
xchg
shll
or
cmp
fucomip
or
mov
add
inc
pop
into
mov
js
imul
lock
fidivs
popf
push
mov
mov
out
insl
jb
fwait
insl
cmp
sbb
xchg
push
aaa
movsl
imul
push
movsl
jae
pop
insl
dec
in
aas
and
test
xor
out
rolb
cmp
hlt
push
jle
rcll
movsb
popf
fldenv
in
and
insl
mov
mov
je
xor
or
fiadds
and
out
inc
add
and
inc
jge
pop
mov
push
icebp
add
arpl
mov
aas
mov
push
jns
add
push
add
shlb
mov
ss
lods
dec
sub
sbb
and
gs
mov
pusha
xchg
scas
insb
jg
or
mov
lcall
imul
enter
jecxz
cmp
jmp
shrb
jle
or
dec
orb
jo
mov
add
lea
loop
out
add
loope
push
xorl
inc
fdivrs
xchg
movsl
xchg
data16
xor
shlb
xchg
or
mov
xor
cmp
jns
stos
lret
inc
in
cld
adc
xchg
cld
xchg
sub
sbb
inc
jge
cli
jne
je
or
jns
or
lcall
pop
dec
mov
mov
add
ret
push
mov
inc
dec
dec
fisubrs
jge
inc
mov
xlat
push
push
sbb
pop
cmp
cmp
pop
mov
pop
push
rcrl
test
fsubrs
aam
pmuludq
cmpsl
out
mov
push
sub
or
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
dec
xlat
ja
add
pop
add
add
movsl
js
inc
adc
insl
bound
push
imul
or
mov
cmp
je
mov
and
dec
and
mov
ljmp
outsl
outsb
mov
dec
lret
dec
xchg
mov
push
push
cmp
push
add
lret
dec
pushf
divl
shrl
adc
cmp
out
pop
xchg
push
ror
add
pop
add
add
bound
add
stos
inc
in
popa
lods
inc
push
adc
in
ljmp
jmp
and
sbb
lods
icebp
sub
dec
inc
mov
mov
mov
push
jecxz
jb
out
lds
jle
mov
test
jae
push
xor
arpl
lret
add
sub
sub
addb
into
add
pop
add
add
mov
lea
lds
mov
repnz
aad
dec
jp
pop
fstpt
and
sbb
xchg
cmc
cmp
popf
leave
sbb
loopne
push
mov
push
sti
sbb
pop
int
dec
sub
inc
dec
mov
mov
push
inc
fistpl
lock
loopne
pop
call
add
and
aam
aam
ljmp
je
dec
sub
mov
pop
add
add
fucomp
inc
mov
push
and
test
subl
mov
int
lcall
aaa
and
and
xchg
pop
mov
aas
in
xor
add
jl
and
cld
push
fwait
and
mov
vcvtss2sd
xrelease
add
add
mov
sti
cmpsl
mov
dec
mov
jecxz
add
pop
add
add
or
adc
js
hlt
mov
jle
jbe
inc
rclb
das
sub
jp
arpl
pop
or
mov
push
xor
inc
push
sbb
push
sub
and
add
scas
xchg
mov
push
pop
std
dec
sbb
and
shll
js
add
out
lods
cmp
stc
stc
xchg
fdivs
iret
add
pop
add
add
je
into
dec
jno
arpl
inc
or
loop
clc
aam
data16
int3
lds
aad
inc
test
sahf
ljmp
jo
test
fsubl
insb
mov
pop
fistl
mov
fisttps
es
push
jp
add
inc
gs
aaa
push
xchg
mov
add
add
popf
lcall
jmp
icebp
xor
jo
mov
add
test
daa
push
repnz
stos
add
imul
fnstcw
lcall
and
push
popa
lahf
xor
xlat
pop
bound
xchg
push
sbb
mov
mov
push
cmp
adc
push
adc
cwtl
out
xor
xchg
aas
add
add
pop
add
add
or
xor
jmp
and
sub
mov
outsb
movl
dec
or
mov
not
les
ss
mov
scas
push
pop
into
pushf
test
cmp
mov
std
add
in
sub
adc
das
in
sbb
ljmp
xor
dec
inc
sub
das
jle
jg
imul
mov
loope
add
add
sub
insb
pop
and
mov
aas
fdivrl
shll
pop
cltd
jecxz
dec
cmp
fdivl
sbb
xor
push
xchg
push
pop
inc
std
lret
dec
test
lds
mov
jmp
add
xor
dec
pusha
cmp
pop
mov
adc
mov
add
add
and
mov
mov
mov
add
add
mov
xchg
mov
adc
xchg
scas
mov
fsts
call
shrl
test
aaa
add
nop
jge
jb
pop
mov
imul
shlb
aam
not
pop
cld
aad
jno
and
jno
popa
gs
mov
push
adc
ret
test
cmc
aam
ret
or
ret
lods
sub
mov
cwtl
adc
add
add
dec
xchg
inc
sbb
cli
cltd
xchg
push
hlt
add
or
mov
jnp
ss
push
aaa
adc
aam
mov
ret
and
adc
mov
pushf
push
fildl
jmp
pop
mov
out
mov
add
add
ret
pop
iret
fst
enter
jae
pop
out
loop
add
add
call
mov
push
fistpll
loope
fsub
pushf
mov
ds
ljmp
dec
xor
sub
mov
scas
imul
loop
pusha
xchg
pusha
pop
jp
data16
pop
psubd
and
xchg
dec
subl
clc
push
hlt
push
xchg
fwait
aas
sbb
dec
adc
mov
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
out
sbb
loop
inc
add
sbb
add
sbb
inc
add
sbb
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
ds
inc
add
test
repnz
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
ficomps
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
rcrb
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
popa
xlat
sahf
lods
pop
add
pop
add
add
jge
dec
pop
fistps
adcb
std
fldcw
mov
pop
stc
test
mov
cwtl
inc
push
mov
add
cmp
scas
icebp
pop
cmp
outsb
in
mov
push
inc
mov
jecxz
ret
frstor
inc
push
mov
cmp
add
mov
push
mov
xlat
push
arpl
cld
pushf
mov
add
pop
add
add
mov
dec
lods
ljmp
outsb
out
fstpl
jge
pop
hlt
xor
sbb
leave
test
xchg
mov
add
pop
jae
xchg
mov
fiaddl
fadds
fadds
je
dec
in
xchg
lea
clc
cs
sub
movsl
roll
adc
mov
mov
jg
ljmp
push
add
xlat
add
pop
add
add
xorb
aam
pop
sarb
pop
sub
xor
mov
icebp
push
sub
daa
gs
loopne
je
jo
out
movsb
sahf
adcl
std
shll
movsb
inc
ds
push
lret
iret
decl
xor
and
or
xor
pop
or
int
test
dec
div
add
cmp
in
fimuls
cmp
pop
imul
add
add
mov
faddp
mov
mov
mov
xchg
std
inc
iret
jae
inc
sub
mov
mov
or
and
mov
pop
pop
outsb
add
cmp
notb
adc
popf
popf
ds
cmp
pinsrw
insl
jnp
mov
in
iret
jle
adc
add
mov
sbb
std
negb
sub
jle
sub
xlat
add
pop
add
add
jge
dec
sub
sub
inc
push
mov
mov
filds
shld
fcomps
mov
mov
sub
test
and
pop
sahf
mov
cmpsl
rcrl
subl
cmpl
outsl
mull
xor
add
xor
jb
inc
mov
cmpsb
and
add
pop
add
add
es
dec
jp
rolb
fmuls
xchg
ja
popf
cltd
pop
mov
subb
xchg
jne
inc
jecxz
dec
imul
test
cmp
adc
push
sub
inc
inc
ljmp
and
mov
pop
inc
das
insl
test
mov
jp
add
add
pop
sub
pop
jl
add
pop
add
add
lock
jle
ds
sbb
fiadds
movsb
push
jle
ja
sub
mov
pop
cwtl
adc
sbb
out
jge
push
out
out
push
inc
outsb
inc
or
popf
mov
std
adc
dec
mov
and
stc
pushf
dec
cmp
nop
add
mov
aam
xor
and
xlat
fadds
add
add
cli
ret
decl
movsb
and
sbb
fildll
jnp
add
sub
sub
lret
jbe
jns
cmc
int
into
inc
out
xchg
pusha
popa
pop
mov
mov
movb
add
movsl
dec
jne
cmp
dec
cltd
fistps
mov
jbe
mov
mov
add
add
push
add
mov
out
adc
flds
add
add
push
dec
insb
mov
test
fwait
stc
popa
fs
nop
xorb
dec
test
pop
fcoml
mov
xchg
jge
and
push
es
pop
mov
mov
popa
sbb
outsb
out
hlt
mov
inc
pop
imul
jmp
loopne
out
hlt
dec
push
pop
dec
cld
push
sbb
cmc
lock
add
mov
jmp
fimull
or
mov
add
add
ror
add
js
or
jnp
jecxz
mov
sbb
loope
xchg
les
push
shrb
sti
movsb
outsl
jb
inc
mov
dec
pop
sub
cmp
in
cmp
mov
xlat
stos
sbb
mov
scas
js
xor
lret
lret
add
or
add
pop
iret
pop
aad
ss
dec
in
pop
sub
flds
add
add
mov
sub
sub
mov
sbb
into
mov
aas
inc
test
loopne
and
adc
xor
mov
mov
stc
dec
popa
push
pusha
imul
jns
mov
and
xchg
pop
adc
add
add
cld
push
xchg
fisubl
pop
add
add
pop
aam
mov
outsl
cmp
das
push
shl
shlb
das
ds
cld
inc
jp
sub
mov
dec
dec
sbb
pop
scas
rcr
mov
cltd
inc
or
cmp
mov
ljmp
hlt
xchg
and
test
xchg
cmp
lea
outsb
jae
lret
jle
repz
ror
sahf
fiaddl
add
add
push
mov
in
outsl
jno
lods
xor
jns
arpl
sahf
jae
pop
pop
jno
lret
push
mov
pop
scas
dec
jecxz
jbe
push
mov
icebp
test
ret
sub
jae
shll
inc
or
jg
es
hlt
and
xor
test
inc
pop
pusha
pop
push
add
adc
adc
mov
lds
stc
fiaddl
add
add
int
mov
dec
xor
fcomp
fnstenv
dec
inc
hlt
movsl
rolb
cmp
xchg
mov
fidivs
inc
lock
fcompl
lcall
cmp
push
xor
imul
xchg
mov
xor
add
imul
add
add
add
add
mov
lock
mov
sarb
add
add
mov
fdiv
stos
mov
xchg
pop
mov
inc
jae
mov
cwtl
adc
push
pop
inc
lret
pop
pushf
imul
jne
push
aad
or
out
push
add
dec
pop
in
pop
pusha
mov
in
push
outsl
scas
jl
xor
addl
cmpsb
dec
js
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
addr16
jo
scas
fildl
add
add
and
mov
xorb
arpl
dec
fcoms
dec
xor
stc
shlb
sti
fldl
and
inc
mov
pop
xchg
push
cli
xor
aam
roll
stos
mov
sub
jge
cmp
xchg
mov
repz
sbbl
push
xchg
cmp
aad
add
sub
fildll
or
cmp
or
add
pop
add
add
pushf
std
lds
pop
rolb
cmp
pop
xlat
push
outsl
js
jno
icebp
mov
lret
call
xor
sarb
pushf
pop
test
and
sbb
add
inc
push
sub
xchg
add
sub
push
or
push
mov
cwtl
adc
inc
jmp
add
add
fs
testl
xchg
shlb
add
pop
add
add
lods
test
xchg
aad
test
adc
divb
pop
lds
arpl
hlt
test
jmp
push
or
xchg
xor
dec
or
inc
or
jbe
test
adc
aas
pusha
hlt
les
cltd
aas
jl
pop
lret
mov
xorb
ja
daa
jg
cli
data16
incl
add
add
add
add
jne
jg
clc
cs
push
hlt
iret
add
pop
add
add
jle
mov
pop
in
orl
mov
fdivr
imul
js
inc
sbb
xchg
int3
sub
rcr
repz
mov
cs
stc
xor
push
jns
fwait
loopne
xchg
or
cmp
orb
test
push
mov
add
das
aaa
mov
add
mov
cmp
sti
dec
mov
je
lcall
add
pop
add
add
mov
pop
dec
xor
mov
push
inc
insb
imul
into
dec
push
sub
in
icebp
mov
pop
and
jl
outsb
sub
lahf
mov
test
jno
ljmp
fcom
push
xor
mov
negl
cmp
jae
xor
scas
iret
mov
xor
push
mov
fists
dec
mov
xchg
adc
loopne
lret
add
pop
add
add
sub
int
and
pop
mov
data16
in
rclb
xlat
lret
mov
pop
pop
imul
mov
xchg
addr16
ficompl
insl
inc
test
bound
xchg
inc
popf
std
ffree
sub
push
movb
pop
xor
cli
add
fisttps
push
gs
rolb
add
add
push
es
inc
inc
and
cwtl
fcomp
push
pop
sahf
std
data16
scas
pop
mov
adc
jg
enter
scas
jns
enter
jge
loopne
pop
fsubrs
push
in
add
dec
jp
mov
mov
pop
lcall
pop
pop
cmp
and
mov
int
add
jle
out
sbb
mov
roll
add
add
jg
jo
andl
mov
push
out
jmp
out
imul
inc
fimull
xchg
mov
pusha
xor
add
jmp
xchg
jns
and
imul
push
repnz
mov
es
imul
out
repnz
xor
jo
and
cmp
into
push
adc
add
add
pop
outsw
mov
scas
mov
bound
inc
insl
pop
inc
imul
sub
push
xchg
dec
mov
pop
and
cwtl
je
add
jmp
pop
adc
add
lcall
add
xchg
shl
adcb
dec
pop
subb
mov
pop
mov
add
popf
aam
cs
push
rolb
add
add
push
stos
mov
cmp
xchg
adc
push
in
dec
push
or
and
cmc
movmskps
xchg
push
push
imul
cwtl
cmp
ss
mov
dec
in
data16
xorb
cmp
clc
adc
pop
dec
incl
xlat
out
out
dec
xor
xchg
fisttpl
add
mov
jbe
hlt
mov
and
cmpsb
cli
int
in
jno
add
pop
add
add
sub
or
pop
stc
pop
pop
mov
imulb
outsl
es
bound
xor
ret
pop
test
call
cwtl
sbb
gs
adc
sbb
pushf
or
mov
ds
ja
hlt
mov
add
lret
int
sbb
div
mov
add
ror
mov
sub
out
push
mov
add
add
fucomp
fsubrl
jno
fs
lahf
pop
sahf
push
test
mov
mov
or
lds
mov
lahf
mov
es
xor
adc
xchg
je
inc
mov
dec
pop
xorb
addr16
inc
cmp
push
inc
cltd
and
test
add
add
in
outsb
and
pop
mov
daa
roll
add
add
clc
pop
mov
fisubrl
das
sub
sub
xchg
push
xlat
mov
dec
in
pop
sti
pop
jns
lahf
test
aam
in
sbb
fs
pop
cmpb
xchg
sti
cli
fcmovu
pop
iret
push
mov
jge
clc
outsl
push
pop
fimuls
sub
push
fnstcw
inc
xor
mov
add
add
mov
and
ja
roll
add
add
mov
inc
cmp
dec
mov
std
mov
pop
testb
mov
and
loope
movsb
sub
jge
roll
jns
aad
add
or
dec
cmp
dec
sahf
and
adc
jg
jo
sub
ja
aas
faddl
mov
and
jg
call
into
inc
mov
jg
aam
roll
add
add
aad
lods
incb
shrb
pushf
out
cmp
mov
fsubrl
add
pushf
out
leave
xchg
mov
sub
aaa
bound
xor
add
adc
push
jmp
pushf
out
int
in
int
addr16
test
lret
mov
push
add
sub
sub
adc
push
add
add
fidivrs
sub
pushf
sahf
xor
loop
add
jo
in
js
mov
pop
mov
insb
cmp
push
loop
adc
in
jg
mov
fs
jge
cli
lods
xor
cmc
cs
cmpsl
minps
lahf
sbb
rep
outsb
gs
iret
push
adc
sub
xchg
mov
dec
aas
int3
sbb
out
loopne
lods
fstpt
ja
aam
add
add
xorl
mov
sbb
ret
mov
mov
cmpsl
push
add
add
ljmp
mov
nop
pop
in
xor
xchg
sub
cmpsl
mov
mov
andl
adc
add
inc
mov
mov
nop
je
lock
push
test
fildll
hlt
sbb
or
aam
add
add
lods
push
js
pop
mov
mov
out
popa
or
loope
pop
lcall
scas
xor
testl
inc
xor
cmp
mov
pop
sbb
adc
xor
outsb
sbb
or
pusha
cmp
sbb
ret
sbb
sbb
cmp
into
aaa
push
in
inc
add
lods
fcomi
sarb
add
push
lock
add
pop
add
add
fs
pop
aam
lea
sbbb
scas
sub
jle
dec
jo
push
pop
jb
xchg
or
mov
fisubs
stos
cli
and
ja
mov
pop
or
dec
adcb
jmp
and
mov
push
add
divl
dec
cmp
dec
repnz
add
add
adc
and
out
dec
gs
cmc
data16
jp
stos
push
pop
cwtl
fscale
cwtl
cs
push
inc
das
xchg
push
aam
sbb
subl
mov
imul
jae
mov
xchg
insl
arpl
cltd
in
mov
pusha
add
nop
insl
andl
mov
add
arpl
jge
mov
daa
sbb
mov
pop
add
add
push
stc
cmc
and
sub
sbb
pop
jnp
cmc
movsl
imul
and
pop
mov
jge
ret
scas
movsb
push
xchg
lods
jg
sahf
aam
inc
push
push
inc
mov
jns
arpl
mov
pop
mov
inc
inc
out
xor
aas
mov
jns
fildl
daa
push
imul
pop
stos
jno
rcr
add
add
hlt
mov
sbb
inc
pop
scas
push
cmc
mov
out
ds
mov
adc
sbb
dec
ret
mov
lds
test
push
cmp
pop
or
jne
and
jo
cmpl
xor
sti
nop
jno
or
je
les
lds
or
add
ss
xor
and
pusha
iret
sbb
add
pop
add
add
xlat
rolb
fwait
sarb
xor
sub
xlat
sbb
mov
shl
rorb
xor
xor
xor
cmc
cmpsb
test
adc
into
mov
in
cld
jmp
push
jno
inc
mov
cmpl
mul
iret
arpl
mov
sbb
mov
add
out
mul
aaa
cmc
xchg
lcall
jbe
add
pop
add
add
xor
pop
movsl
pop
and
push
xchg
adc
adc
iret
inc
sub
pusha
orl
or
dec
out
cli
xchg
xchg
xchg
mov
scas
enter
lcall
loope
fsubrl
test
lods
shrb
cmpsb
lret
scas
movsl
gs
add
aad
out
fucomip
ss
cmp
cmp
fldl
add
add
push
add
out
jno
les
lods
cmp
lods
add
mov
insb
mov
push
cmp
xchg
cmp
cwtl
xchg
sub
sub
iret
mov
rcl
mov
les
adc
cmp
rorl
adc
lret
jnp
int
outsb
jbe
lret
outsb
negb
xchg
xchg
sub
add
pop
add
add
adc
cmp
in
mov
mov
inc
je
lahf
and
add
mov
mov
and
inc
push
sti
fiaddl
shrl
mov
fdivrl
mov
xchg
cmc
push
dec
mov
shl
je
xchg
cmp
pop
inc
xor
adc
je
and
cmp
paddsb
nop
ror
inc
add
xchg
add
pop
add
add
and
push
and
adc
xchg
or
pop
out
ret
loope
int
pop
jo
cmc
iret
dec
ss
or
adc
xor
push
and
inc
mov
jmp
mov
sbb
ss
ret
mov
fldl
in
xor
nop
jnp
jle
aad
add
jle
call
cli
lcall
add
pop
add
add
jle
popa
pop
jns
test
aam
cmp
or
add
mov
stos
xor
jb
push
sub
rcl
into
xchg
out
mov
loopne
dec
les
jb
pushf
sar
fcomi
lock
lret
in
sahf
mov
mov
xor
cmc
test
add
add
fincstp
shl
frstor
pop
dec
jg
inc
popa
cmp
add
add
int3
adc
sub
inc
enter
or
or
daa
fwait
sub
and
pop
sbb
rclb
out
adc
fs
dec
jge
cmp
test
test
clc
lahf
push
xor
add
mov
ret
ljmp
fistpll
jp
sub
adc
mov
add
aam
fnstsw
out
fcmovu
in
add
mov
add
add
mov
popf
fwait
aam
jmp
mov
jbe
cmp
test
pop
movsb
jp
filds
cltd
mov
mov
loopne
inc
add
and
ror
negl
pop
movsl
mov
aas
shrl
mov
jne
cli
stos
jns
jne
stc
sbb
inc
jecxz
mov
xchg
jne
enter
add
add
les
xor
popf
xor
les
mov
sub
lea
mov
cwtl
dec
add
sbb
jno,pt
or
nop
iret
clc
mov
addr16
stos
in
mov
and
fdivrl
mov
or
cmp
sbb
mov
popa
jb,pt
mov
mov
icebp
and
cwtl
mov
pop
add
add
insl
pop
pusha
xchg
xlat
lret
add
sbb
xchg
movsl
cs
sub
jno
sub
insb
cmp
mov
subb
mov
test
mov
aad
xor
and
fs
pop
xchg
inc
ret
rcl
sbb
out
push
lret
or
cmp
sub
add
xlat
repz
das
cli
fists
dec
es
mov
loopne
add
add
sub
mov
mov
test
fisubs
int3
movsb
push
repz
hlt
sbb
xor
gs
test
out
cmp
loop
jne
je
or
mov
pushf
dec
ret
xchg
dec
pop
mov
loopne
pminsw
mov
incb
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
adc
add
inc
iret
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
