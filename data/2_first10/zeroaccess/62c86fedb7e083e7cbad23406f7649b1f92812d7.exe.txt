push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
mov
jle
jle
jg
jle
xlat
cmp
pop
add
movzwl
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
enter
insb
lret
cli
insb
insl
jl
pop
loopne
pop
sbb
es
mov
cmpsb
xchg
cmpsb
mov
add
aas
xor
ljmp
fwait
xchg
daa
and
aad
push
inc
jp
or
cmpsb
pop
inc
leave
test
dec
mov
std
imul
test
sbb
cmp
lret
test
notb
cmc
or
call
es
add
xlat
pop
in
add
xor
and
int3
cmp
sahf
loope
push
xchg
test
mov
imul
call
pop
imul
jbe
cli
mov
jmp
sub
fcomi
orl
aad
leave
mov
out
mov
call
jbe
mov
fcoml
cmp
cltd
in
aad
xor
dec
or
divb
stos
mov
jle
inc
aas
std
xchg
xchg
ljmp
imul
mov
mov
adc
lea
xorl
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
imul
jle
jg
jle
pop
push
pusha
aas
push
pop
leave
adc
push
fldl
je
push
popa
jne
sbb
push
or
dec
pop
aas
daa
adc
push
or
pop
push
pop
or
sub
adc
mov
divl
sti
cmp
and
xor
lahf
imul
add
arpl
loop
push
cld
insb
or
fbld
mov
push
fadd
sbb
ret
mov
call
jp
mov
pushf
inc
pusha
aad
ja
lret
lea
xor
iret
lods
mov
mov
in
push
or
out
dec
das
iret
sahf
pushf
cmpsl
jno
pop
lahf
addr16
lret
jmp
dec
xchg
mov
pop
push
fs
jbe
cmp
mov
mov
mov
clc
sbb
ds
inc
stc
jb
test
inc
mov
shl
add
test
or
dec
inc
nop
addl
adc
js
pop
loop
data16
pop
rcr
shrl
in
jns
push
cmpsl
iret
loopne
add
jae
lcall
roll
in
loope
push
dec
sub
sti
jmp
jns
popf
fidivrl
addr16
jle
jns
hlt
push
sbb
stc
cmc
sub
mov
enter
repz
dec
jp
jbe
aam
sub
cli
dec
aas
insl
cld
test
adc
mov
dec
aad
sbbl
inc
adc
fsubrl
test
mov
mov
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
inc
xchg
sbb
in
jns
jle
jg
jle
push
insb
push
out
jecxz
cmpb
push
mov
int
shlb
adc
das
ljmp
inc
dec
dec
adcl
lcall
outsb
es
sbb
int3
dec
shll
loopne
cmp
sub
leave
jl
insl
mov
adc
sub
lods
inc
jbe
icebp
lods
test
mov
loop
mov
lret
aas
dec
clc
loope
sbb
dec
outsl
xor
lods
imul
sarl
or
mov
or
fsubrp
mov
mov
ljmp
adc
mov
and
icebp
fstpl
pop
and
inc
iret
and
dec
movsl
arpl
clc
and
mov
add
int
out
dec
stos
leave
xor
lret
scas
filds
loopne
test
cmpsl
test
pop
jae
lahf
movsb
mov
mov
jecxz
jp
mov
or
push
mov
fisttps
mov
bound
add
jnp
dec
jnp
xor
mov
sbb
push
nop
in
xor
mov
jmp
out
mov
or
shll
mull
jo
scas
or
test
clc
push
insl
sbb
sbb
cwtl
out
arpl
stc
push
in
mov
or
roll
mov
and
lea
std
dec
xchg
sbb
bound
in
pop
sbb
into
addr16
adc
xlat
mov
jg
or
inc
mov
cmp
jb
decb
and
sub
inc
les
or
push
sti
test
test
add
add
add
or
jmp
or
popa
sbb
push
roll
jle
mov
jle
sbb
dec
add
in
pop
fwait
push
mov
add
pop
add
js
jmp
push
pop
fidivs
jg
pop
sbb
mov
shll
imul
jl
xor
stc
and
outsb
jb
cs
sbb
dec
xor
pop
fadd
movsb
mov
and
arpl
mov
jge
idivb
xlat
fnstenv
sbb
ret
inc
inc
jecxz
cs
gs
mov
je
stos
push
in
pop
add
pop
dec
add
imul
out
mov
adc
or
hlt
and
push
es
sbb
out
jp
in
fsubrs
fwait
sbb
adcb
push
pusha
add
pop
dec
mov
xchg
pop
or
push
call
jbe
mov
inc
inc
mov
pusha
pushf
jne,pt
jo
imul
fisttps
std
lcall
aas
add
loop
cmp
xchg
pop
stc
and
mov
dec
pop
lods
mov
sbb
test
ss
xchg
cli
scas
enter
sbb
adc
and
popf
mov
cltd
mov
dec
test
adc
jo
mov
fiadds
adc
mov
cmp
cmpsl
jnp
mov
and
stc
dec
sub
xor
pop
mov
stos
mov
jmp
scas
cltd
loope
cwtl
mov
mov
push
adc
test
or
lcall
cmpsl
lods
cmp
jbe
mov
lret
mov
sub
jge
xlat
jbe
sub
dec
xor
push
mov
and
add
add
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
push
and
mov
jle
mov
mov
into
mov
sarb
inc
incl
fcomps
mov
pop
xorb
push
push
and
mov
lea
adc
fcmove
xor
fdivp
mov
jl
fcoml
popf
aam
add
inc
pop
addr16
insl
lret
inc
cwtl
in
push
mov
cltd
push
mul
je
pop
sbb
lret
sbb
add
subb
pop
dec
popa
adc
test
imul
shrb
xor
pop
pop
lret
cmpsl
or
dec
add
movsb
xor
xchg
push
cmp
pop
int
and
out
add
adc
in
sbb
div
or
sbb
mov
pop
mov
outsl
push
cmp
cmp
les
mov
mov
inc
imulb
and
mov
cmp
pop
mov
and
xchg
gs
push
xchg
loope
sub
pop
dec
pushf
addr16
sbb
icebp
les
jp
setp
mov
sbb
xor
lret
sahf
jp
jp
push
sbb
notl
fisubl
filds
addr16
fucomp
enter
cltd
scas
subb
arpl
sbb
mov
es
push
xchg
adc
ds
in
sbb
vandps
push
mov
dec
sub
or
cmc
mov
mov
aaa
dec
je
nop
adc
and
jns
and
cmp
imul
adc
ret
xchg
lahf
roll
push
pop
idiv
in
or
xchg
pop
cmp
pop
jle
in
mov
lea
mov
mov
movzwl
add
jmp
push
mov
test
fsubr
aam
mov
jle
mov
jle
fld
jle
pop
cmp
lock
in
pushf
cmp
bound
adc
scas
add
push
push
sahf
mov
mov
and
arpl
stc
in
adc
imul
inc
rcrl
inc
repz
and
pop
pop
cmp
test
jne
inc
mov
mov
pusha
mov
sbb
or
jo
adc
xchg
jo
adc
jbe
lahf
xor
ret
popa
xor
sub
mov
jp
hlt
test
mov
sub
mov
repnz
outsl
push
lret
testb
lock
xchg
and
inc
sub
into
mov
iret
sahf
add
jecxz
popf
jge
cli
and
movsl
lods
test
pop
push
popf
lock
jno
sbb
imul
pop
pushf
cmpsl
push
and
bnd
stos
xchg
xor
add
adc
lea
pusha
jo
or
jb
xor
out
xchg
sub
icebp
ret
add
insl
mov
pop
sti
sub
sub
fisubl
bound
adc
dec
in
or
in
cltd
xor
enter
sahf
push
and
xchg
in
or
jo
sub
xor
xchg
aam
jecxz
cmp
push
popa
stc
pop
mov
insl
sbb
lcall
inc
pop
xchg
mov
mov
or
out
pop
lock
jl
sub
data16
xor
sbb
test
aad
adc
std
icebp
jnp
mov
mov
mov
xor
add
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
xor
pop
pop
rolb
jle
jg
jle
jae
inc
jmp
mov
push
dec
out
push
xor
sbb
mov
dec
orl
mov
imul
in
sbb
dec
xor
xchg
mov
ffreep
iret
mov
push
xchg
mov
mov
lods
ret
test
xlat
sbbl
inc
sbb
xchg
or
fldl
mov
stos
and
mov
add
mov
repnz
sub
sbbl
sti
loopne
int
popa
adc
das
lcall
test
or
push
and
out
inc
xor
adc
cmpsl
lods
push
insb
mov
mov
jnp
ret
cwtl
mov
lock
inc
dec
adc
bound
jp
xchg
cmp
or
les
pop
push
cltd
rorb
jne
push
je
arpl
out
add
fs
dec
xchg
scas
pmulhw
or
mov
sub
rcrl
mov
je
mov
jmp
pop
imulb
addr16
sbb
gs
mov
mov
dec
push
lods
push
rclb
out
cmp
fildll
lock
lea
cmpb
push
aam
ja
mov
sbb
lods
lea
jnp
pop
mov
aas
mov
pop
mov
fcoml
ja
sbb
and
nop
jmp
lret
sub
movsb
cmp
movsb
sub
mov
in
mov
rcrl
push
push
sbb
inc
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
add
mov
jle
jecxz
out
pop
dec
je
rcrb
rorl
lea
cmp
divb
fdivs
add
mov
jne
dec
aas
add
outsb
sub
bound
sbb
into
lock
inc
and
sbb
sbb
outsl
je
xchg
push
stc
cmpsb
loop
mov
mov
push
mov
cmp
rcll
pop
inc
cmp
dec
fidivrl
lret
movsb
xchg
sbb
mov
data16
fs
pop
sub
icebp
fistpll
dec
lret
aam
add
xchg
dec
jnp
sbb
adc
mov
add
mov
xchg
or
fisubrs
lahf
xlat
cli
outsb
stos
xor
xor
adc
add
es
test
and
js
push
jnp
fimull
or
dec
loopne
int3
inc
test
int3
aas
mov
inc
xor
or
pop
imul
pop
jg
int
inc
sti
pop
push
mov
fcoms
inc
in
add
add
popf
add
out
mov
inc
mov
mov
adc
lods
std
push
lret
mov
xchg
xchg
subb
ficompl
mov
lock
rorl
pop
lret
adc
dec
js
xchg
ss
jl
fs
xchg
xchg
lods
addr16
lahf
xchg
jg
cmpsl
mov
xchg
push
push
push
insb
xor
mov
and
loop
mov
aam
dec
jb
loop
xchg
jno
pop
shr
fwait
rcl
icebp
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
pand
mov
jle
mov
jle
and
jle
push
cmp
gs
jne
jge
in
jno
sbb
xchg
push
xchg
mov
out
xchg
inc
dec
js
lods
pop
cmp
sub
imul
lahf
push
stos
lret
xor
push
mov
loope
push
sti
and
fnstcw
mov
addr16
out
addb
sbb
cmp
sub
jne
sahf
push
ja
sub
insb
cltd
dec
in
cmp
mov
loop
xchg
jnp
mov
jg
pop
sub
jecxz
cmpsl
push
mov
movsl
maskmovq
mull
jmp
in
sti
popa
rcrb
adc
jne
popa
add
lock
xchg
cs
repnz
cs
repnz
add
inc
xchg
loope
pop
out
repnz
inc
int
push
ljmp
stc
hlt
dec
out
sub
push
push
fstpt
hlt
mov
sarl
dec
jae
inc
ret
xor
sbb
scas
inc
les
arpl
fdivrl
test
orl
test
mov
cld
jnp
test
jo
sub
inc
loopne
push
dec
clc
pop
mov
insb
insb
and
in
pop
ds
aam
sbb
movsl
push
and
pop
and
jge
inc
dec
add
mov
and
adc
push
jb
clc
scas
lcall
mov
sbb
adc
push
out
negl
and
sarb
test
shlb
aas
cmp
or
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
xchg
add
cmp
xchg
add
nop
mov
xchg
mov
xchg
push
mov
jg
jmp
sti
push
jnp
test
mov
test
or
add
xchg
push
cmp
sbb
int
xchg
pop
pop
in
sbbb
dec
push
mov
xchg
sub
cmp
sbbl
mov
sub
lea
jae
fisubrl
mov
test
movsl
mov
hlt
js
sub
adc
pushf
pop
pop
or
adc
inc
cld
jl,pt
inc
in
test
cltd
xchg
incl
and
ret
daa
insl
jge
outsb
loopne,pn
push
jae
mov
nop
adc
mov
jne
inc
arpl
add
cld
outsb
add
lds
lods
push
mov
fistpll
xor
inc
cmp
xor
call
pop
xor
inc
fsubs
push
aaa
or
xchg
mov
addb
iret
in
mov
sbb
mov
lcall
iret
mov
sahf
lret
xchg
cld
cwtl
mov
idivb
sarb
les
jns
push
mov
or
ret
jg
addr16
jge
fidivs
aaa
loope
sub
pushf
fs
sub
adc
rcll
test
ret
push
test
push
push
js
adc
movsb
ljmp
aas
mov
sbb
aas
lcall
addr16
dec
pusha
nop
pop
pop
mov
mov
into
fnsave
lahf
adc
push
push
push
mov
pop
mov
loopne
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
push
xor
mov
jle
pop
mov
imul
dec
sub
and
jecxz
fistpll
mov
add
std
xor
add
jns
pushf
les
in
sahf
mov
inc
xor
mov
xor
lret
imul
imul
inc
mov
fisttps
enter
push
fbstp
and
xchg
xchg
jecxz
xchg
push
ret
pop
add
push
inc
push
pop
jbe
loopne
pop
dec
jbe
hlt
scas
das
leave
fcoms
imul
jne
ljmp
cmp
ret
push
dec
cltd
jno
shll
mov
mov
xchg
cmpsl
imul
mov
loopne
xor
filds
gs
adc
mov
ja
jns
and
adc
dec
les
sub
cmpsb
imul
inc
insb
lea
add
mov
out
insb
test
aas
xlat
mov
lret
mov
lret
loopne
xor
mov
mov
inc
jnp
fbld
ss
xlat
scas
sbb
xchg
mov
jecxz
inc
jb
int3
cs
loop
mov
mov
adc
test
dec
out
pop
mov
lret
popl
pop
test
adc
test
xor
wrmsr
and
stos
aam
dec
push
je
xor
repnz
cwtl
adc
fnstsw
adc
out
xchg
and
and
cld
cmp
xchg
pop
pop
shrb
testb
sub
stc
daa
movsb
or
jmp
and
add
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
test
push
or
push
jg
jle
inc
int
ret
je
mov
or
outsb
xlat
xchg
add
rol
dec
cs
cmp
adc
fwait
or
fstpt
push
and
inc
iret
test
jmp
aad
repnz
or
test
insb
dec
outsl
or
inc
xor
mov
cld
jno
dec
cmp
sti
xchg
and
dec
addb
mov
in
leave
mov
jbe
idivl
mov
or
movsb
add
imull
xchg
or
xor
pop
test
movb
push
test
jno
push
pop
xchg
push
mov
imul
es
pop
js
ret
sub
mov
mov
bnd
jns
inc
or
pop
sbb
std
std
cs
data16
push
lahf
mov
xor
bound
test
insl
fcompl
push
add
mov
jge
mov
rolb
xchg
mov
outsb
lcall
sub
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
cmp
das
js
or
push
jg
jle
and
inc
negb
andl
pushf
push
jo
and
pop
sbb
dec
aaa
repz
xchg
push
mov
pop
aad
test
sub
ss
and
jmp
add
cltd
call
sub
jmp
and
pop
repnz
in
loopne
data16
fiadds
adc
pushl
imul
rclb
popf
fs
pop
sti
mov
add
xchg
dec
or
xlat
int
mov
divb
sbb
aad
and
gs
adc
pop
jecxz
jecxz
leave
dec
mov
jl
gs
or
int3
push
and
and
out
mov
lcall
sub
sahf
push
je
andb
mov
add
pop
fistpl
cmp
push
mov
cmpl
stos
dec
ds
shll
xlat
and
mov
ljmp
imul
mov
mov
lsl
cmp
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
xchg
mov
mov
or
push
jg
jle
adc
popl
sti
or
imulb
adc
test
imul
in
jg
inc
or
stos
hlt
sbbl
loop
mov
sub
jo
loope
fisttpll
jbe
pop
inc
mov
je
mov
fsubrs
lret
subl
jg
cwtl
fcmovnb
movsl
push
push
pop
shlb
mov
repz
xchg
xchg
sbb
mov
or
lods
pop
sub
or
jle
inc
sub
cmp
jp
or
scas
mov
cmp
cmpsb
subl
mov
cmp
rolb
dec
sub
rcrb
rcll
fnstcw
sub
push
inc
test
mov
inc
loopne
sbb
sub
cld
in
mov
dec
or
movzbl
shlb
cli
imul
dec
adc
dec
mov
jl
cmpb
add
mov
or
push
dec
dec
fcompl
push
cs
cmpsb
popf
addl
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
adc
jle
jns
jle
pop
push
jns
and
sub
mov
incb
mov
cmp
cli
stc
mov
sahf
in
mov
imul
push
xor
and
js
subb
outsl
js
inc
sub
repnz
mov
notl
bound
stc
mov
push
and
mov
pop
or
inc
aam
sub
add
push
xor
call
mov
sbb
sbb
adc
out
inc
hlt
cmp
test
cmp
fisubrs
xchg
cli
dec
and
xor
jo
fcmovnu
ss
sbb
outsl
test
pop
pop
call
iret
fnstenv
jl
mov
ficomps
xchg
gs
pop
mov
mov
insb
outsb
cmp
sub
xchg
xor
or
pop
cwtd
cltd
ljmp
iret
mov
fnstsw
dec
dec
mov
xchg
lods
push
jnp
jno
outsl
jp
faddp
inc
pop
mov
mov
inc
push
and
xchg
dec
enter
dec
movsl
lret
aas
or
dec
push
mov
mov
aam
sbb
aas
dec
repz
sbb
mov
punpcklwd
test
subl
jb
jnp
and
sti
stos
mov
imul
xchg
movsl
mov
xor
test
loope
lock
stc
inc
pop
dec
jbe
mov
scas
inc
clc
popf
test
push
std
xchg
lret
mov
xor
inc
mov
jb
xor
enter
jb
ds
inc
sbb
push
es
pop
lock
push
mov
hlt
xchg
lea
out
xchg
lock
rolb
std
cmc
out
test
ljmp
dec
pop
lds
pop
js
call
je
mov
scas
ret
out
mov
add
movsl
jae
pop
cwtl
pop
and
add
mov
out
mov
mov
jg
movsb
and
rclb
sar
inc
mov
test
rorl
mov
cmpl
push
ds
sarb
loop
out
mov
mov
test
int3
jb
fists
jmp
pushf
mov
cmp
stos
pop
lds
fidivrs
jno
xor
dec
movsb
dec
imulb
cli
xlat
iret
stos
cmp
orl
fiaddl
rcrb
mov
test
push
push
mov
jb
dec
and
fdivp
push
add
pop
mov
sbb
xchg
shrb
divb
cmp
test
jle
xchg
xchg
lret
push
pop
lods
pop
loop
and
pop
fimull
aaa
sbb
test
pop
cmp
mov
out
adc
vxorpd
xchg
sbb
and
jge
jae
adc
in
lods
fadd
popf
jo
pop
mov
mov
out
in
mov
mov
pop
shll
in
sub
xchg
mov
mov
inc
movsb
jo
daa
testl
mov
sbb
enter
push
fisubs
mov
lret
fcompl
dec
jl
aam
pop
cmp
pop
incb
jg
outsb
mov
testl
mov
sahf
scas
ljmp
loopne
repnz
aad
sti
and
lret
xor
cli
outsl
xchg
or
jg
fsubrp
pop
or
aad
pop
out
test
adc
fimull
push
clc
pop
popf
cmpsl
push
ljmp
cmp
inc
and
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
adc
push
jns
jle
jg
arpl
dec
fcos
inc
inc
popa
ljmp
push
out
out
inc
ror
xchg
imul
dec
aaa
mov
lea
xchg
cmp
sbb
inc
pop
mov
inc
add
out
jne
dec
add
push
popa
pop
in
pop
mov
pop
test
mov
out
sahf
pop
jg
cmp
dec
scas
mov
xor
imul
movsb
jne
pop
loope
ds
cmc
mov
fmuls
movsl
push
adc
and
ljmp
mov
pop
jmp
pop
outsl
fsubp
fstps
push
clc
add
pop
mov
cld
cmp
jne
mov
jnp
lahf
sbb
mov
or
js
cld
sbb
or
mov
aam
mov
and
push
pop
das
mov
jge
stc
pop
mov
or
push
lea
icebp
inc
icebp
or
out
subb
insl
popf
fdivl
andl
and
cmp
adc
cmpsl
cmc
add
inc
push
out
jns
cmp
dec
sub
mov
andl
and
mov
ss
hlt
dec
pop
out
mov
subl
ret
rclb
fnstcw
repz
sub
cmp
mov
lret
mov
test
sahf
and
mov
test
or
inc
xchg
adcb
jbe
xor
mov
cmp
mov
fldenv
xchg
xor
insb
cld
xor
mov
mov
lods
jo
mov
inc
jno
in
js
cmc
pop
stc
ja
xchg
stos
xor
daa
mov
dec
mov
mov
pushf
inc
mov
cwtl
cmpsl
scas
ljmp
fidivrl
jmp
jo
mov
sub
push
out
mov
jo
pop
in
sbb
and
inc
lret
scas
ss
sub
pushl
fistl
scas
xchg
jp
popa
dec
xor
rolb
mov
xchg
les
cmpsl
mov
stos
mov
fimull
mov
fwait
mov
mov
push
or
data16
inc
in
xor
mov
fmull
std
cltd
push
and
jge
scas
pop
out
xchg
pop
addr16
nop
or
lret
icebp
test
xor
push
or
ss
jb
addr16
push
cmpsb
dec
and
mov
out
pop
mov
add
outsl
bound
xchg
ret
iret
call
addr16
ss
mov
dec
int3
imul
inc
cmp
sub
lcall
mov
xchg
and
fs
int
addr16
ja
jle
cltd
fstpl
mov
in
test
out
sbb
sbb
js
mov
out
mov
stc
sbb
push
lret
mov
or
daa
andb
jae
insb
in
xor
xchg
xor
pop
mov
pop
popl
add
sbbb
jp
dec
mov
mov
fcompl
ss
das
ds
leave
adc
pushf
or
rorb
jl
xor
mov
push
lods
and
add
fcoml
and
int
clc
cmpb
pop
or
mov
xchg
pop
and
les
lock
or
sarb
mov
cli
mov
jmp
jl
int3
xor
xchg
aad
rcrl
pop
ljmp
sbb
and
icebp
or
aad
jne
loop
xchg
mov
and
decl
add
or
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
cmp
mov
arpl
jle
push
jns
jle
rol
xlat
ret
aaa
sbb
test
or
loop
testb
fbld
call
aad
mov
cmp
nop
dec
test
scas
out
jbe
adc
cwtl
or
hlt
mov
mov
cs
hlt
fldenv
sbb
mov
add
sub
int3
mov
dec
arpl
out
fwait
lret
cltd
repz
or
leave
sub
jle
adc
pusha
push
push
ret
fnstenv
push
out
test
fldt
scas
xor
inc
jo
loope
sbb
jae
dec
lcall
cmpsb
adc
out
int
lea
les
xchg
int3
jno
push
or
cmc
jno
add
addw
lock
cmp
lea
add
stos
jge
mov
pop
repz
or
loope
add
test
xchg
andb
stc
mov
sbb
inc
adc
ficoms
daa
mov
jle
loop
push
fiaddl
fsubrs
sub
cmpsl
dec
add
pushf
jmp
sub
ret
lahf
cmp
call
jnp
inc
add
jo
mov
inc
add
cltd
ss
xor
mov
jecxz
mov
loope
fimull
jno
pop
add
lea
iret
daa
in
es
cmpsb
rcr
sahf
push
sti
or
pop
icebp
cwtl
mov
fldenv
xlat
xor
ja
mov
mov
int3
dec
int
push
fidivrs
sub
jae
movsl
xchg
dec
scas
jb
popf
bound
pop
mov
sbb
aaa
mov
jae
mov
inc
ss
xchg
dec
sub
mov
cltd
push
bound
clc
mov
sub
mov
jecxz
mov
jns,pn
pop
dec
pop
mov
fdivrp
pop
dec
mov
sbbl
fcompl
push
sub
nop
les
cmp
jae
rorb
jl
lahf
mov
cmpsl
xchg
movsl
pop
cmc
pop
add
out
push
pop
in
or
push
cs
mov
dec
lcall
int
and
or
sub
push
movl
or
movsl
cwtl
or
and
leave
fcompl
hlt
inc
sbb
inc
jo
popl
mov
dec
mov
push
cmc
cltd
push
pusha
xchg
push
pop
sub
inc
jecxz
inc
inc
xor
sysexit
in
pop
mov
test
xchg
push
idiv
lret
and
test
leave
push
cmp
mov
xchg
fbld
xor
mov
mov
fwait
out
sbb
enter
clc
pop
jp
dec
jp
pushf
scas
xchg
pop
jae
add
push
std
outsl
jae
je
sub
dec
inc
cmp
mov
arpl
jecxz
pusha
cmpsb
js
push
sub
or
dec
andb
enter
int
add
stos
ds
scas
lret
cmp
sub
imul
in
mov
ja
lds
daa
pop
int3
hlt
push
cmp
cli
xchg
xchg
ljmp
jp
loop
cmp
sub
pop
pop
stos
fmulp
sub
and
adc
repz
gs
jecxz
push
cli
jne
icebp
hlt
mov
out
mov
aas
push
ret
push
xlat
popa
rclb
hlt
xchg
adc
orl
clc
ss
iret
imul
clc
sub
pop
mov
test
outsl
inc
shrl
inc
mov
imul
aaa
xchg
xor
jo
dec
mov
pop
cmp
mov
cltd
jo
repnz
dec
sub
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
rorb
aaa
movsl
mov
out
push
std
lods
push
outsb
stc
sub
out
stos
insl
ficoms
xchg
fidivrl
jecxz
enter
outsl
mov
xchg
jo
cli
syscall
or
rolb
in
xor
jmp
cmp
in
ret
std
sbb
movsl
cmp
add
pop
cs
in
cmp
outsl
push
sub
clc
clc
hlt
mov
rol
or
es
cs
out
inc
mov
daa
jmp
lret
xor
xchg
les
push
cmc
lea
xchg
mov
sub
inc
mov
sarb
xor
inc
int3
out
rcrl
insl
inc
mov
sbb
in
add
icebp
push
roll
sbb
rol
mov
bound
xchg
pop
xchg
je
jcxz
scas
adc
les
test
ret
jmp
cmp
loope
dec
mov
xchg
xorb
mov
imul
test
xchg
shll
imul
mov
out
push
rcll
sbb
pop
jnp
cmp
mov
mov
dec
push
sub
mov
subb
sbb
mov
sub
inc
stc
mov
out
iret
jmp
add
mov
lret
cmp
mov
pusha
push
sar
dec
cmp
out
mov
xor
sbb
sbb
mov
mov
push
xchg
push
hlt
push
jecxz
inc
xchg
iret
jmp
add
outsl
aas
mov
xchg
mov
int3
aad
dec
mov
mov
cmp
test
jecxz
mov
jns
sti
lret
inc
test
xchg
mov
pop
pop
mov
out
out
xchg
sub
repz
mov
arpl
call
mov
mov
inc
cmp
std
jb
movsl
gs
inc
inc
mov
inc
adcb
jp
sub
dec
sbb
push
or
cld
pop
popa
and
add
nop
rclb
aas
test
fisubrl
outsl
shlb
arpl
fcomps
mov
loop
test
out
sti
xor
popa
adc
xchg
mov
inc
mov
repz
fcoml
and
test
add
cmc
aad
pop
rcrb
adc
dec
sub
in
mov
ss
in
add
subl
cmc
push
add
imul
fstl
push
pop
sub
or
cmp
and
ret
fmull
outsl
push
les
out
scas
xchg
or
mov
sti
aad
out
mov
inc
pop
out
sub
inc
add
lods
add
xor
out
xor
inc
sub
mov
and
xchg
jae
fidivrs
inc
mov
jl
in
sub
or
xchg
push
and
add
dec
pop
gs
ja
push
aas
nop
fwait
push
aas
sub
xchg
sub
icebp
and
pop
sub
int
lds
mov
dec
mov
mov
mov
mov
sub
xor
mov
sbb
sub
cmp
jb
dec
arpl
ljmp
jne
test
jle
in
dec
add
test
subb
addl
mov
push
cmp
test
jl
repz
mov
jle
inc
push
lret
add
jno
aas
xchg
js
pop
scas
and
jge
or
sub
inc
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
mov
jns
jle
and
test
faddl
xor
shlb
add
or
js
push
cmc
lea
ret
test
js
jge
push
cli
adc
pop
pop
mov
fs
and
fistpll
adc
or
mov
mov
or
cmp
mov
pushf
mov
fnstenv
push
andb
nop
pop
fimull
dec
addl
pushw
mov
int3
ret
cmp
jp
rorb
mov
das
push
or
imul
cmp
cmc
int
int
push
cmp
cmp
or
xchg
jmp
xchg
fcmovbe
orb
add
fiadds
dec
adc
or
jae
xchg
shlb
mov
dec
stos
xor
inc
add
sub
jg
adc
nop
movsb
popa
xor
cmp
subb
xchg
adc
pop
mov
inc
push
imul
mov
ds
outsb
fcmovnbe
int3
jo
sub
testb
cs
lret
xor
mov
sbb
push
icebp
addb
ljmp
push
stc
mov
add
xchg
push
pop
and
cmpsb
mov
in
jmp
repnz
push
arpl
fs
mov
bound
inc
cmp
cmp
out
shlb
mov
movsl
test
inc
xchg
mov
insl
inc
shll
inc
pop
push
inc
inc
lods
rcll
jg
or
fisttps
fildll
mov
in
in
arpl
repz
adc
xor
cmp
cmp
mov
mov
mov
lret
inc
je
sbb
mov
adc
jp
cmp
push
xchg
in
aam
add
jmp
xchg
jp
mov
mov
push
mov
cmp
mov
cmp
adc
adc
dec
sahf
fsts
fstpl
sub
and
aam
in
xchg
dec
xchg
cmp
push
cmp
popa
push
sub
pushf
mov
xor
idivb
out
pop
lcall
inc
or
mov
ljmp
sbb
mov
aad
add
xchg
or
test
adc
xor
cmpsl
outsb
je
icebp
arpl
mov
ss
std
xchg
and
popf
jae
cmp
aad
xor
inc
push
arpl
dec
ret
inc
mov
stos
push
dec
rcll
sub
lods
sbb
dec
fidivrl
sbb
mov
sub
jmp
xchg
pop
pusha
cmp
or
std
sbb
pop
mov
inc
mov
sbb
push
push
push
mov
rclb
pop
dec
sbb
dec
stos
adc
inc
aam
std
sub
xor
repz
xchg
mov
dec
and
jno
pusha
sbb
jge
aas
sbb
mov
fistl
xor
sub
fistpll
cwtl
ret
lock
loop
aaa
imul
add
pop
mov
push
cltd
js
fdivl
push
sti
mov
cmpsb
out
fbld
mov
push
in
stos
inc
inc
mov
jecxz
lods
ficoml
ret
test
loope
push
add
push
jae
data16
xor
adc
bound
icebp
fwait
scas
lds
pop
cli
fsubs
sahf
ja
fnsave
stos
adc
sub
rcl
leave
pop
jno
mov
das
push
mov
add
push
daa
inc
fisttps
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
sbb
jle
push
jns
jle
mov
into
pop
push
cmpsl
fwait
and
or
inc
mov
aam
dec
jno
inc
int
xchg
jl
push
cmpsl
outsl
sarb
add
xchg
and
xchg
sub
push
insb
in
popf
in
movlps
cmp
add
leave
data16
aas
dec
sar
push
xor
jmp
ficoml
push
lret
or
pop
jle
arpl
cwtl
push
int3
push
push
mov
inc
int3
sti
xchg
xchg
shlb
mov
sub
add
sub
jg
mov
xor
int3
pop
cltd
mull
sub
adc
xchg
or
ljmp
sbb
mov
and
lret
fnstsw
into
jle
jno
jno
imul
arpl
sbb
stc
xor
xchg
stc
xlat
or
aam
push
pusha
test
fstps
sahf
ss
xor
xorl
arpl
pop
jl
mov
mov
mov
les
mov
mov
inc
adc
popa
jmp
sarl
ljmp
mov
cmp
js
sti
orb
push
mov
mov
out
loope
dec
mov
push
mov
mov
or
sbb
and
jge
push
sub
nop
testb
or
fnstenv
or
lods
and
add
pop
cmp
mov
fidivl
ja
mov
xchg
sahf
test
pop
xlat
xchg
stc
lahf
dec
mov
sbb
pusha
call
mov
cmp
pop
or
or
mov
push
ja
mov
sbb
dec
js
lret
test
jne
das
xchg
push
pop
ljmp
adc
sti
mov
or
xor
dec
out
jle
in
or
push
test
dec
sahf
pushf
inc
insl
orl
decb
jno
jle
rclb
xor
repz
insl
mov
mov
sub
cmp
jl
adc
vpackssdw
repnz
or
jo
cld
loope
mov
mov
test
mov
mov
push
dec
ret
or
xorb
adc
lds
mov
pop
sub
push
mov
fistpl
inc
lods
fstl
ss
sbb
insb
imul
in
jb
outsb
sbb
mov
ljmp
mov
cmc
mov
sub
dec
es
push
pop
adc
adc
std
adc
les
jns
out
sbb
test
bound
add
leave
xchg
cmp
sub
scas
mov
mov
cmc
cld
int
xchg
cld
mov
dec
sbb
xor
mov
sub
daa
outsl
lcall
mov
test
pop
pop
sbb
repz
lds
mov
add
mov
push
repnz
outsl
mov
sbb
xor
leave
push
test
fnstsw
pop
add
sbb
repnz
cmp
loopne
je
push
aad
sti
push
sub
push
jns
and
mov
mov
idivl
cld
mov
mov
adc
push
les
jb
pushf
hlt
sub
lods
in
aam
mov
push
inc
loop
pop
or
lods
in
pop
adc
sbb
cltd
enter
pop
cmp
or
mov
jl
lcall
pop
fsub
inc
xor
add
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
out
stos
nop
lcall
jle
push
mov
decb
out
sarb
mov
adc
lcall
pop
inc
push
hlt
nop
xor
jge
mov
jle
outsb
fistps
sub
ret
sar
inc
test
pushf
inc
pop
mov
sub
jae
dec
nopl
mov
jno
int
adc
jmp
out
or
lcall
data16
add
and
ret
fnsave
pop
jmp
jmp
push
je
clc
pmaxsw
enter
sub
ret
and
xchg
rorl
cmpsl
insl
call
jl
inc
sub
mov
fstl
and
cmp
jg
arpl
and
cmp
data16
orl
or
mov
out
sub
inc
jae
notb
mov
xor
add
and
repz
fimull
je
das
lods
orb
add
xor
or
sub
jae
imul
mov
or
cli
pusha
std
mov
sbb
loopne
aaa
imul
pop
test
out
adc
pop
rcrl
mov
push
icebp
cmp
cmp
lods
in
mov
pop
jns
or
dec
pop
test
push
jbe
sub
loope
push
cmp
fbld
xor
push
mov
adc
mov
xor
repz
mov
sub
loopne
jae
push
leave
lods
mov
fldcw
stos
imul
push
je
in
mov
in
jp
xchg
add
cs
add
jno
scas
loope
stos
ret
push
ds
inc
pop
jne
lock
and
xchg
push
ljmp
scas
out
sbb
jge
lahf
mov
push
loope
or
xchg
test
xchg
aam
sahf
cmp
imul
dec
mov
and
fldl
in
adc
jle
sahf
fwait
lods
cmp
adc
cmp
xchg
pop
push
call
pop
repnz
sub
cmpsl
sub
dec
xor
fistps
movsl
shl
nop
pusha
dec
pop
and
jae
cmp
inc
mov
jmp
js
das
sub
jge
pop
std
jmp
push
inc
popf
dec
icebp
pop
ljmp
or
cmp
in
and
scas
sbb
loopne
out
lret
leave
addr16
cli
ds
dec
pop
out
pop
loope
gs
inc
mov
sub
das
iret
sti
jne
pop
mov
fwait
jle
and
sbb
push
mov
xor
jnp
cmp
mov
dec
xlat
push
dec
jns
stos
movsb
pop
xchg
icebp
pop
fildll
fisttps
out
pop
push
je
addl
arpl
cmp
cmp
fwait
jl
pusha
in
pop
jmp
mov
sbb
test
dec
lea
pushl
lret
mov
test
je
and
push
scas
jb
mov
gs
xchg
clc
movsl
mov
out
scas
mov
pop
cltd
out
push
out
adc
outsb
sbb
xchg
pop
or
addb
dec
xor
les
inc
xor
call
jne
inc
jge
stos
jge
pusha
adc
dec
inc
xchg
ret
xlat
mov
outsl
fcmovbe
clc
sbb
mov
or
dec
sub
sahf
adc
sub
cli
sbb
adc
lahf
jbe
sarl
hlt
enter
js
fs
xor
in
dec
js
dec
pushf
add
adc
dec
xchg
inc
out
inc
mov
daa
cmpsl
in
jnp
jnp
js
fucom
or
mov
cmpsb
hlt
xlat
xor
xchg
je
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
and
inc
sbb
jle
pop
jg
jle
into
sarl
lods
push
cmpsb
sub
mov
mov
jg
out
gs
repnz
push
jne
push
decl
dec
push
nop
into
add
xor
mov
cmp
cs
mov
mov
xchg
repz
aam
mov
or
add
ljmp
movsl
int
aas
cmp
ds
lods
push
ret
outsl
fnsave
inc
xchg
pop
jae
sub
lret
mov
pop
add
inc
fistl
sub
scas
mov
sub
test
push
in
ds
add
ret
sti
stos
stos
loopne
xchg
mov
mov
cmc
fstl
xchg
dec
sbb
popf
aam
fistpll
push
std
aaa
push
sarl
daa
push
out
pop
rolb
sbb
pop
push
ret
mov
loope
mov
xor
pop
dec
xchg
xchg
pushf
fists
jb
adc
jno
decl
pop
pop
lea
or
inc
pop
fcomip
mov
mov
cmpsl
pop
mov
inc
data16
loope
aad
mov
call
push
popa
sbb
jne
lock
cltd
xchg
ret
ljmp
pop
mov
std
std
fildll
or
fcoml
and
xor
test
hlt
mov
adc
outsl
movsl
xchg
mov
push
push
fisttpll
mov
xchg
adc
scas
xchg
sub
test
mov
add
aad
std
fwait
push
aaa
add
inc
decl
data16
adc
icebp
mov
popf
add
xlat
gs
test
enter
jp
xor
mov
negb
cld
les
rcrl
mov
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
dec
aaa
push
std
jnp
jle
pop
jg
jle
push
test
out
loope
pop
mov
outsb
jnp
cmp
push
jne
sub
jae
inc
cmpsb
sbb
out
mov
push
cmp
jle
lods
xchg
mov
fisttpl
test
jbe
add
push
rep
mov
pop
xchg
sti
mov
orb
xchg
cs
iret
inc
xchg
mov
arpl
inc
jae
fst
leave
dec
xchg
fstl
or
cmp
xor
int3
pop
xor
loop
inc
ja
ljmp
dec
mov
sbb
sub
gs
xchg
add
jl
mov
sub
movsb
dec
das
cmp
push
imul
scas
sbb
ds
or
aad
dec
or
imulb
push
adc
jb
loop
das
je
push
test
dec
jg
rcll
mov
repnz
repnz
jmp
hlt
mov
fisttps
push
inc
clc
jnp
jl
adcb
test
leave
je
sbb
xor
mov
sub
push
dec
int3
push
lock
sbb
push
lahf
push
aam
adc
lea
addr16
pop
movsb
mov
sbb
mov
mov
jae
insl
jnp
ja
mov
scas
pop
inc
fiaddl
call
or
cli
test
sub
out
orb
lret
ret
loopne
jmp
jb
out
addb
imull
es
jecxz
lods
movsl
mov
les
jecxz
subl
push
adc
ja
and
ret
mov
mov
jnp
rcrl
mov
xchg
mov
push
add
lret
jmp
xchg
jmp
or
mov
lea
hlt
inc
xor
and
pop
cwtl
or
pushf
xorb
inc
or
inc
cld
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
loop
sub
les
jle
loop
dec
cld
sahf
jns
mov
lret
cli
jbe
movsb
cmpsb
xlat
dec
outsb
clc
xor
jbe
out
cld
mov
sub
jge
xchg
xlat
add
inc
inc
push
and
push
cmp
add
push
jo
mov
cmc
xchg
cmp
mov
mov
inc
popf
scas
out
aad
out
pop
out
sbb
xchg
mov
inc
or
movsb
add
lret
mov
outsl
mov
lods
xchg
movsl
rcr
fldl
cmp
push
dec
out
test
jo
daa
cld
xchg
jb
pop
xchg
pop
mov
cmpsl
jmp
icebp
sub
jno
mov
cmpl
scas
push
pop
nop
mov
jle
mov
push
sbb
icebp
xor
mov
lds
fldt
stc
jb
or
inc
out
or
xor
jnp
xlat
adc
inc
shl
std
dec
dec
sub
std
je
rcrl
lods
xchg
rcr
sub
pop
cmpsb
cmp
jb
push
mov
repz
and
xor
and
pop
and
add
dec
icebp
cwtl
pop
and
mov
xchg
xlat
pop
outsl
daa
addb
dec
mov
testb
int3
shlb
push
mov
test
lahf
into
mov
mov
pop
pop
cmp
dec
jge
fwait
int
out
push
and
mov
lcall
js
jl
xchg
mov
mov
push
popa
test
push
je
out
mov
mov
subl
jae
adcb
cwtl
pop
sbbl
and
xchg
aam
or
mov
out
sub
ljmp
mov
push
adc
std
mov
cmp
pop
lods
push
nop
fisttpll
ss
outsl
scas
addb
negl
jecxz,pt
out
mov
repnz
and
push
pop
negl
aad
data16
out
push
jns
or
jae
jnp
cmp
call
in
jg
push
mov
add
ja
push
mov
pusha
dec
ja
out
mov
xor
aad
add
movzwl
mov
test
scas
adc
bswap
jp
mov
call
in
fwait
push
xchg
inc
mov
call
inc
push
aaa
in
leave
pusha
mov
cli
cmpsb
pop
xchg
insb
inc
mov
dec
scas
push
js
jb
mov
ret
and
xchg
das
xchg
popl
lahf
lcall
stc
and
cmp
mov
cs
icebp
fmull
mov
stc
fsubl
sub
data16
mov
push
cmc
les
mov
push
or
sahf
and
mov
mov
mov
nop
push
mov
dec
or
movsb
xchg
sbb
ljmp
loope
sar
sub
jne
push
push
push
aam
xor
mov
sbb
lahf
cld
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
rcrb
jns
jle
jge
fs
test
test
aam
popf
sub
mov
mov
jmp
div
les
push
sub
xchg
add
rcr
mov
scas
testl
out
jb
xor
ja
pop
push
rcrb
cmp
popa
pop
fcoms
cwtl
fcompl
cld
xchg
test
sbb
test
fwait
and
into
sbb
shlb
dec
insb
mov
push
jmp
scas
movsl
aaa
push
pushf
sub
out
xor
mov
test
repz
jnp
andb
inc
sub
xchg
pushf
scas
push
hlt
into
sbb
imul
sti
cmp
xor
repz
jno
ja
fs
sub
lods
pop
or
lahf
push
iret
clc
lods
stos
out
ficomps
test
dec
lret
xchg
mov
or
pop
xchg
jg
jecxz
test
mov
add
imul
arpl
test
cmp
sbb
sub
fwait
out
pop
rorl
repz
jp
jb
mov
or
pop
cli
jp
vpsrlw
testb
inc
scas
rcrb
or
clc
adc
jge
aas
aad
cmp
pop
das
fsubrl
inc
xor
lret
jl
test
inc
das
in
fisttps
inc
pushl
xlat
aaa
daa
lock
test
or
ja
jb
dec
push
cwtl
cmpsb
jmp
or
ret
frstor
adc
popf
scas
pop
xchg
aam
add
mov
cmp
loope
adc
fdivl
dec
adc
xorb
loope
nop
in
imul
or
mov
xchg
loope
lock
out
mov
xlat
mov
mov
cld
sarl
pop
mov
jle
push
cmovg
xlat
ds
jge
fisubs
mov
sahf
sub
mov
cmp
jp
fs
shl
aad
aaa
jmp
fwait
inc
fbstp
js
xchg
nop
inc
in
ds
jne
mov
fisubl
hlt
push
adc
push
into
inc
in
cltd
sub
mov
lret
jbe
cmp
mov
les
repz
push
shll
mov
outsl
dec
nop
mov
mov
rclb
loop
pop
out
lcall
mov
pop
pop
lods
xor
pop
loopne
shrd
bound
push
fidivrl
leave
inc
inc
mov
repnz
xchg
into
mov
xor
inc
and
insb
aaa
inc
flds
rcl
mov
jbe
pinsrw
iret
mov
aaa
or
ret
clc
loop
pop
movsl
insl
push
cmp
pop
cmpsb
lea
push
inc
imul
cs
test
loope
stc
mov
and
mov
cmc
js
inc
pusha
ss
js
stos
cmc
test
insb
sbb
int3
inc
sub
mov
mov
jmp
add
mov
and
fldt
pusha
scas
add
inc
clc
cmp
add
add
dec
and
add
pop
add
add
pop
arpl
xchg
jle
les
jle
imul
out
popf
in
fs
xchg
ret
sbb
mov
mov
cld
int3
in
cli
enter
cwtl
cmp
xchg
push
loope
outsb
mov
lret
cwtl
aaa
jne
cmp
mov
xchg
in
ljmp
jo
jl
sub
repz
fs
adc
sub
shll
fadd
dec
jecxz
push
mov
das
jg
mov
mov
es
je,pn
test
cs
xor
mov
movsb
imulb
gs
stc
mov
test
dec
and
outsl
sar
adc
sub
aam
sub
cmpsl
shr
jg
and
push
and
icebp
mov
push
call
mov
adc
loopne
dec
jno
lcall
in
xor
or
mov
or
sbb
out
cmp
ljmp
pop
xor
repz
mov
nop
fimuls
cmp
lds
loope
dec
scas
xlat
and
cmpsl
cwtl
mov
rcll
mov
or
iret
scas
lahf
mov
pop
aas
cmpsl
dec
xchg
and
push
stos
xor
clc
push
outsb
jg
and
jge
arpl
push
inc
or
cmc
jne
cmpl
inc
or
sbb
ljmp
jns
jg
rol
add
jnp
sti
mov
push
out
icebp
rcll
pushl
inc
inc
lea
or
cli
inc
int3
adc
mov
sub
push
in
push
cmp
test
mov
sub
dec
sbb
shlb
mov
xor
mov
test
mov
movsb
mov
lret
push
jle
inc
adc
mov
ret
cltd
and
test
push
cmp
mov
mov
xchg
push
adc
mov
xlat
jle
dec
mov
insb
loope
cltd
int
movsb
pop
push
cmp
loope
rclb
addr16
icebp
jnp
movsb
and
mov
and
or
adc
push
or
and
push
enter
addl
pop
cmp
repz
dec
es
test
dec
hlt
jl
jle
in
jnp
jp
mov
insl
shll
xchg
scas
test
sbb
push
jge
aas
aad
sbb
pop
sbb
enter
out
sbb
dec
add
jecxz
push
cmp
push
sbb
imul
jne
outsl
test
or
xchg
decb
sbb
fmuls
mov
sbb
decb
push
mov
mov
sbb
lock
push
into
jnp
outsb
mov
cmpl
hlt
iret
movsb
test
xchg
or
xchg
incb
out
stc
push
adc
mulb
cmpsb
inc
test
fsubs
ficomps
mov
sbb
adcl
adc
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
hlt
ja
cmp
jle
jns
jle
loopne
shl
das
mov
shll
pop
aas
dec
cmp
mov
cli
cmc
stos
pop
xor
andl
cld
jmp
pop
outsl
lods
lods
scas
pop
pop
inc
sub
shrl
jle
jge
sahf
outsl
xchg
jns
mov
jecxz
xchg
js
cltd
sti
rcr
or
popa
mov
stos
or
leave
subb
push
mov
enter
jb
sbb
das
adc
inc
mov
dec
mov
and
and
leave
inc
mov
imull
ss
test
push
push
stc
insl
push
idiv
dec
jl
xchg
outsl
mov
gs
mov
mov
js
add
mov
pop
loopne
std
out
and
sarl
inc
test
call
mov
rclb
add
fnstenv
mov
or
adcl
xor
arpl
fwait
scas
mov
fcom
jmp
ret
xor
adc
dec
jns
test
mov
orb
lahf
andl
loopne
hlt
xor
mov
loope
fdivrs
adc
hlt
into
in
sub
enter
pop
and
ljmp
test
test
add
mov
sbb
xor
dec
int3
cmpsl
loope
jl
call
push
mov
and
xchg
mov
outsl
dec
add
xchg
push
jae
dec
stos
mov
repz
rcrl
xchg
cmp
ret
cmp
mov
mov
mov
cmp
mov
xchg
mov
mov
rcrl
movb
push
sbb
call
mov
test
nop
xor
arpl
iret
cmpsl
pop
or
sbb
loop
je
aad
mov
sub
stos
cmp
mov
jge
dec
inc
popf
sub
pushf
push
test
push
bound
jb
cli
dec
xor
in
push
movsb
lcall
mov
movsl
mov
cmp
cltd
or
fnstenv
out
popa
inc
pushf
dec
adc
sahf
arpl
add
sub
sbb
jmp
jge
jl
dec
je
clc
inc
lcall
andb
push
sub
dec
mov
mov
fstps
fcoml
bound
mov
rorb
rorb
fsub
aad
stos
rolb
out
fisttps
ds
xor
loop
jnp
ss
lock
sti
movsb
aam
in
mov
stos
lea
or
inc
and
mov
fcmovnb
call
inc
pushf
icebp
xor
and
sbb
loop
repnz
or
cmpsb
clc
xchg
cltd
test
push
cs
pop
popf
add
pop
mov
movsb
aaa
mov
inc
push
or
cmp
je
leave
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
or
aas
jle
dec
jns
jle
add
inc
loop
dec
cmp
xor
test
leave
mov
sub
inc
mov
fnstcw
or
dec
inc
jmp
push
mov
stos
xchg
cli
xchg
adc
int3
mov
das
loop
mov
pop
hlt
jmp
mov
add
mov
iret
sbb
inc
inc
lods
jecxz
cltd
insb
inc
mov
inc
in
notl
ror
mov
movsl
push
mov
loopne
xchg
rol
popa
sti
sub
iret
inc
mov
xchg
int
pop
scas
cmp
test
sti
in
jae
sub
mov
insb
sub
imul
pop
iret
les
hlt
jecxz
lock
mov
or
es
jle
dec
mov
mov
sub
push
push
movsb
int3
inc
aas
inc
lret
pop
enter
es
ret
add
and
push
movsl
dec
cli
int3
and
lret
outsl
sbb
call
sbb
sub
imul
sahf
dec
roll
bnd
add
lret
clc
mov
test
mov
adc
ret
pop
in
pop
cmp
cs
pop
xchg
mov
add
and
inc
test
sbb
dec
dec
pop
lcall
in
iret
pop
pop
es
lcall
or
lret
inc
outsb
and
jge
pop
jmp
add
inc
dec
adc
xor
mov
inc
and
add
daa
loopne
push
call
sbbl
outsb
orl
add
dec
inc
addr16
ret
pop
addr16
mov
mov
push
sbb
adc
mov
fcoml
fldt
test
mov
test
rcrb
loop
test
cmp
push
mov
sub
out
test
gs
pop
add
push
xor
ret
cs
xor
aad
loope
daa
push
dec
stc
pop
lret
sub
fisttps
pop
in
mov
repz
adc
pop
loop
add
inc
fdivr
std
cmpsb
push
jg
and
lahf
adc
dec
fnstsw
jb
rcrl
aad
stc
inc
mov
loop
ds
imul
push
dec
stc
shrl
jmp
test
xor
addr16
mov
sub
mov
popa
inc
test
cmpsl
mov
lret
mov
jmp
or
inc
repz
inc
inc
sub
mov
into
mul
add
jg
jmp
iret
jmp
lods
fwait
out
push
clc
vmovd
sub
mov
iret
insl
add
cli
out
lret
mov
out
cmc
pop
push
mov
popf
and
sar
mov
stos
push
repz
cmp
sti
mov
fwait
stc
clc
arpl
add
imul
es
out
or
out
xchg
mov
cmp
loope
outsl
pop
ffreep
aad
xor
xor
mov
stos
add
sbb
cmp
sbbl
and
insb
add
in
bound
jecxz
stos
in
fsubs
xchg
sti
in
pop
push
jnp
dec
push
js
js
int
int3
shrl
lret
jg
pop
xchg
inc
das
ljmp
ljmp
or
scas
push
or
jo
out
or
lea
movzwl
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
mov
jle
jns
jle
dec
push
push
xchg
imul
mov
jge
inc
xor
adc
lds
stc
xchg
mov
push
jo
js
mov
push
adc
arpl
and
aad
imul
xchg
jns
mov
repnz
sub
mov
jg
push
into
insl
clc
sbb
jne
jbe
or
mov
mov
test
aas
icebp
daa
iret
cs
pop
mov
sbb
jmp
add
ret
mov
sub
or
push
pop
cli
inc
jp
test
jl
enter
out
mov
adc
and
inc
dec
mov
push
mov
js
push
sbb
fisttps
mov
push
mov
or
mov
movsl
sbb
shlb
mov
shrl
inc
adc
in
dec
cmp
inc
push
and
add
inc
and
cmpb
test
leave
stos
out
pop
mov
sbb
push
test
adc
jae
adcl
xor
cltd
insb
adc
cmp
dec
sti
out
lahf
pusha
jae
xchg
ja
mov
or
adc
fstpl
lret
pop
les
xchg
mov
mov
lret
fwait
cmp
bnd
jns
subb
xchg
hlt
and
push
mov
aam
mov
lods
data16
ficomps
pop
jmp
jecxz
fsub
xchg
insb
jnp
mov
dec
int
or
push
xchg
push
adc
xor
push
lcall
or
lods
shl
push
cld
outsl
push
int3
shl
jbe
div
loop
repnz
jo
mov
test
mov
cld
push
fcomp
jb
mov
add
fwait
outsb
sarb
sbb
xchg
add
ret
addl
cmp
push
mov
and
imul
dec
inc
mov
pushl
mov
popa
rolb
rorl
js
push
jmp
imul
int3
cmp
cmp
call
jle
arpl
cmpb
loopne
mov
mov
fwait
cs
pop
test
nop
mov
jnp
enter
add
sbb
scas
daa
jmp
ret
and
adcb
arpl
lcall
scas
shlb
sbb
xor
cmp
pop
pusha
jb
mov
dec
psraw
pop
jp
push
dec
mov
mov
mov
jle
pushf
jecxz
mul
push
out
adc
jge
rorb
inc
push
cmp
mov
fbstp
lods
into
iret
int3
mov
mov
out
xor
jmp
div
xor
mov
sti
mov
sbb
cmc
lock
lcall
cmp
sub
leave
inc
or
inc
mov
cmp
insb
push
mov
mov
loopne
lods
es
add
mov
mov
xor
movl
sbb
mov
pop
mov
xchg
and
mov
lret
xchg
aaa
mov
sarb
outsl
ja
not
push
jle
das
outsb
in
hlt
push
shll
push
faddp
pop
mov
xchg
xchg
repnz
pop
jno
pop
or
mov
push
adc
jle
jle
je
insl
arpl
sbb
sarb
mov
sbb
iret
stc
fcomip
enter
shl
aaa
jne
mov
ret
js
out
push
or
push
test
lret
lcall
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
mov
jns
jle
fnstenv
push
lret
aaa
cld
pop
push
and
jg
jns
mov
outsl
lock
imul
and
sub
int3
mov
or
iret
sub
daa
xor
pop
out
and
imulb
jae
jbe
add
mov
ret
in
or
jl
loope
das
lock
imul
orl
cli
jno
dec
inc
and
and
add
aam
das
xor
inc
push
les
jp
mov
dec
es
sahf
push
lahf
leave
mov
daa
cmpb
push
pop
shrl
rcll
iret
lret
scas
pop
loopne
call
or
nop
adc
xchg
dec
notl
push
fiadds
xchg
xchg
pushf
jp
ror
sub
jecxz
cwtl
xchg
dec
add
xor
int3
and
mov
mov
pushf
dec
repnz
cmc
pop
push
inc
sbb
pop
and
aad
test
mov
xchg
scas
dec
xor
dec
popf
push
loope
dec
arpl
test
xchg
rorb
aaa
scas
cld
notl
adc
inc
mov
orb
mov
cmp
dec
or
xor
push
jg
xor
inc
dec
jp
test
test
mov
jbe
dec
xchg
insl
xchg
push
inc
loopne
mov
jne
mov
pop
imul
mov
clc
jl
inc
dec
mov
push
add
pop
cmp
pop
enter
adc
cmp
lods
sbb
push
movsb
sub
fwait
jp
popf
mov
mov
dec
int3
jp
out
js
and
pop
loop
sub
icebp
mov
icebp
jmp
lcall
and
push
xor
fmull
stc
je
xor
mov
roll
dec
and
mov
repz
mov
xchg
dec
or
adc
popa
aam
aas
xor
push
in
jns
xchg
pop
ss
lods
cmp
mov
xlat
mov
adc
jae
jecxz
daa
lret
fisttps
or
cli
xor
cmp
xchg
pusha
ret
hlt
pop
enter
push
sub
outsb
lock
push
sbb
sub
adcl
and
loope
movsl
mov
insl
lret
mov
lahf
sbb
adc
ds
mov
ljmp
add
cmp
subb
ret
loopne
icebp
iret
jp
loope
add
adc
lret
imul
add
bound
mov
cmp
movsb
mov
pop
adc
mov
jge
adc
mov
pop
inc
outsb
out
add
inc
jle
mov
lds
add
outsb
inc
in
push
or
mov
xorb
inc
in
aad
and
notl
aaa
popl
dec
mov
pusha
je
insb
loop
rcr
call
adc
or
push
fs
lea
ret
fisubrl
xchg
daa
sub
sub
in
inc
pop
lcall
add
daa
test
fnsave
jbe
loopne
mov
sub
sbb
xor
jae
enter
lret
addl
mov
bound
nop
mov
xchg
mov
mov
lahf
push
repnz
repz
mov
test
pop
inc
arpl
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
dec
jge
and
mov
jg
pushf
mov
jle
ds
sub
and
pop
out
movsb
fldcw
and
iret
inc
mov
sub
int3
ljmp
pop
cltd
scas
adcb
or
fidivrl
mov
call
cmp
stos
fwait
push
aad
sbb
inc
dec
jae
push
clc
mov
out
sbb
lods
dec
pop
push
es
jae
cmp
vmwrite
dec
ficomps
mov
scas
sbbl
in
ja
and
ja
cld
lret
sti
scas
xor
ds
sbb
sbb
mov
fsubl
loop
add
push
lahf
lea
repnz
call
add
out
repz
mov
lret
shrd
push
or
iret
push
mov
or
jno
mov
popa
in
ficoms
loope
subl
push
in
cli
icebp
mov
pusha
sbb
mov
add
mov
imul
addr16
xor
les
jp
pushf
mov
cltd
inc
stc
sbb
add
test
mov
pop
push
insb
test
mov
ljmp
mov
int3
xchg
sbb
dec
cmp
outsl
sbb
jno
cld
les
in
jg
xor
loopne
repz
lahf
cmc
int
jl
lods
shr
mov
mov
out
jnp
fsubr
mov
fisubl
mov
gs
mov
dec
or
push
imul
pop
arpl
loop
cmpsb
xchg
cld
repnz
out
mov
push
mov
test
in
lret
adc
xchg
lea
inc
push
pop
jne
fidivs
insb
out
mov
clc
ss
pop
loop
cltd
push
rcrl
add
sbb
scas
insl
lret
mov
ja
lods
add
into
xor
daa
push
adc
sbb
mov
popa
cmpsb
sub
add
push
cmc
xor
outsl
jbe
imul
outsl
cmp
call
fidivrs
push
add
mov
shlb
sbb
aas
inc
bound
rclb
push
adc
or
cltd
sbb
mov
scas
xchg
push
jg
pop
and
aaa
jae
cli
data16
sub
mov
outsb
fidivl
aaa
add
inc
lret
lods
jae
pop
jmp
cmp
shll
shrl
adc
rcr
lock
ljmp
and
push
int3
into
jbe
jecxz
hlt
cmpsb
lret
int
daa
or
or
jnp
mov
xchg
mov
push
push
decb
inc
lahf
ret
jmp
jecxz
outsb
shlb
mov
popf
or
ja
mov
dec
cmp
popa
add
out
jecxz
loope
dec
mov
xor
xlat
and
rcll
inc
adc
lods
pushf
call
xchg
or
mov
mov
sbb
jl
scas
rcrl
mov
sub
inc
mov
push
inc
adc
and
mov
daa
or
mov
mov
loop
push
mov
push
sub
test
mov
mov
sub
jns
mov
inc
inc
stos
sbb
nop
clc
jns
enter
daa
lcall
mov
cmp
cmc
ret
rcll
jnp
imul
mov
dec
add
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
scas
in
pop
aas
iret
jle
dec
jns
jle
push
arpl
imul
mov
clc
push
pusha
stc
pop
addr16
out
out
xchg
popf
jb
push
ror
imul
shll
subl
xchg
mov
inc
lods
orl
push
nop
ljmp
testl
mov
ret
lock
aas
add
mov
inc
lock
mov
pop
stos
divb
and
je
mov
sahf
or
add
scas
push
aas
dec
dec
xchg
ljmp
xor
and
loop
shlb
pop
shrl
shlb
mov
push
mov
dec
dec
popf
or
pop
pop
adc
jmp
push
fmuls
pop
shl
pop
sub
jb
loope
ljmp
fs
cmpsb
mov
dec
xchg
enterw
icebp
cmpsb
sbb
jmp
fcmovbe
sbb
inc
loope
pslld
jle
mov
jae
and
jbe
inc
int3
and
aam
mov
push
js
in
add
mov
dec
push
insl
mov
push
xor
shrl
sbb
enter
pop
subb
cmp
sbb
outsb
in
sub
mov
mov
arpl
mov
mov
in
call
dec
cmc
roll
ror
xchg
pop
das
xchg
lods
add
dec
add
jp
bnd
mov
icebp
push
mov
stc
sarb
pop
bound
mov
push
push
xchg
test
add
cmp
sub
dec
negl
xchg
aas
pusha
ret
inc
and
jecxz
aas
mov
cmp
lcall
cli
loop
test
insl
fcmovb
ret
insb
or
xor
pop
repz
jl
cld
shl
ret
mov
in
xchg
inc
aaa
aam
sub
fmuls
test
pushf
xor
pop
dec
dec
enter
jl
xchg
inc
sub
mov
jle
xor
inc
pop
les
add
sbb
push
mov
pop
rcrl
dec
jb
sbb
pop
stc
mov
leave
fldcw
icebp
sahf
les
inc
pop
xchg
mov
mov
fistl
cmp
pop
inc
push
ds
arpl
pop
xor
leave
negl
mov
jmp
sbb
test
mov
lods
shl
ror
test
das
leave
inc
add
jb
jmp
mov
add
and
adc
push
jl
jmp
ret
js
cwtl
stc
add
lea
je
mov
jmp
jb
sub
or
int3
and
cltd
into
jnp
aam
jo
notb
dec
or
push
cmpsb
ret
jle
lret
inc
jns
or
fmuls
dec
mov
jg
call
dec
jne
insb
pop
fldl
adc
sub
push
dec
pop
aad
sti
jb
lds
das
fwait
cld
inc
int
mov
sub
mov
into
das
pop
aas
sub
movsl
xchg
bound
mov
subl
mov
pushf
gs
jno
gs
jne
or
jg
adc
stc
rclw
shlb
in
jecxz
cmp
add
addb
aas
lock
lcall
jge
pop
sti
test
pushw
jb
outsb
mov
bound
dec
pop
mov
lret
js
out
bound
sti
xchg
push
jo
xchg
jb
jp
dec
dec
sub
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
cmp
push
stc
mov
pop
hlt
jl
das
mov
add
dec
pop
scas
and
pushf
mov
loop
lods
loope
mov
loop
gs
icebp
in
cmp
or
xchg
inc
or
mov
or
inc
and
jp
inc
loope
mov
andl
call
addr16
repnz
rclb
clc
shlb
sbb
imul
and
addr16
test
imul
xchg
and
xor
cmp
fwait
xchg
ljmp
sub
lret
push
je
jmp
lret
lahf
and
ja
sub
ds
pop
inc
and
mov
cltd
jge
and
push
sub
mulb
mov
dec
mov
cmp
sarb
ret
pop
jbe
add
nop
stc
jmp
cmp
aas
ret
cmp
push
dec
sub
dec
push
icebp
cmpsb
arpl
push
lods
adcl
adc
out
loopne,pt
ret
stos
movsl
and
fistl
enter
sub
dec
dec
inc
sub
sub
aaa
in
pop
mov
ljmp
cmpsb
clc
pop
push
popf
nop
out
out
scas
push
insl
insb
sub
fidivl
sub
xor
mov
vsqrtpd
pop
mov
cmp
addl
loope
aas
xor
js
and
adc
mov
xchg
outsl
xor
shrl
ret
pop
adc
xor
roll
test
dec
and
data16
int
scas
cmp
movsl
scas
ss
adc
or
iret
jno
int
add
inc
hlt
adc
cmpsl
cmp
shrb
lods
daa
lock
stos
rcr
imul
popa
dec
jmp
mov
sub
aam
and
call
outsb
sub
jmp
lcall
xorl
scas
mov
cmpsb
xlat
or
lcall
arpl
lods
jno
lds
ret
jg
push
aaa
pop
sbb
mov
dec
mov
pop
xchg
decb
pusha
fildll
int3
jp
push
xor
push
pop
jl
add
in
push
xorl
shlb
aad
addl
or
fists
sub
mov
push
cmc
in
push
sahf
inc
mov
cmp
in
pusha
jmp
sub
std
xchg
int3
xor
fnstenv
cs
xchg
ja
lock
push
cmp
dec
aad
mov
mov
mov
pop
mov
filds
cli
fistl
mov
jecxz
imul
testb
xor
dec
addr16
sbb
pop
sbb
je
xchg
mov
loope
add
cli
insl
pop
xor
cmpsl
dec
xchg
add
and
clc
aad
int
xor
test
into
icebp
nop
mov
popa
mov
fcompl
in
hlt
in
lods
out
lret
cld
out
or
inc
mov
int3
out
scas
sub
adc
loope
pusha
lock
outsl
cmc
or
xchg
aas
sub
je
add
ja
add
out
mov
xchg
adc
mov
int3
mov
inc
add
adc
imul
or
or
sbb
xchg
xor
sti
jbe
insl
dec
jl
gs
adc
lcall
imul
and
inc
pop
xor
or
xorb
addb
push
pop
mov
jmp
mov
push
pop
mov
cwtl
jno
fidivl
push
stc
inc
dec
pop
mov
xor
sub
out
scas
xor
mov
loope
gs
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
inc
rolb
pop
jle
dec
jns
jle
lods
pop
dec
cmp
icebp
test
cs
pop
xchg
or
mov
dec
jge
sbb
mov
mov
test
add
lods
fwait
pop
cmp
fcomp
cltd
cmpb
mov
xchg
fwait
int
mov
jo
mov
pushf
cmp
test
test
inc
fldt
adc
stos
add
rcl
or
fisubs
sbb
stos
dec
ss
push
jmp
sahf
inc
inc
mov
xchg
jg
shrb
add
jno
dec
pop
je
mov
std
gs
inc
pop
sub
sbb
out
or
sub
repnz
into
popa
jbe
mov
ljmp
sbb
insl
mov
jmp
loop
mov
in
jae
dec
jmp
push
adc
pusha
cmpb
mov
mov
scas
lods
loop
and
jbe
lret
sub
cmp
bound
push
stos
xchg
mov
inc
es
rcr
ljmp
sbb
mov
inc
add
lock
mov
leave
jne
ret
aam
popa
out
cmp
pop
jno
mov
inc
push
fsub
pop
fisttps
mov
bound
int3
sbb
jb
sub
sbb
inc
mov
call
sbb
mov
lods
rorb
and
mov
daa
mov
fisubrs
je
xlat
and
test
sbbb
cs
fwait
xchg
xchg
mov
inc
in
mov
cld
ret
push
mov
js
mov
add
cmp
lds
rorl
shlb
les
dec
xchg
stc
sub
ljmp
cli
outsb
lret
aas
out
adc
dec
add
lods
pop
rcr
sbb
inc
fldt
pop
pop
and
gs
push
dec
inc
jmp
out
cmp
in
push
xor
cli
arpl
push
fdivrs
xchg
mov
imul
xor
mov
inc
add
fisubrl
ss
imul
and
or
in
sti
mov
jno
push
xor
arpl
pushf
aas
adc
leave
mov
pop
addl
mov
jl
loop
aad
push
jmp
and
in
pop
jl
inc
sub
popa
pop
cmpsl
lahf
xchg
cwtl
mov
lods
fsubrs
pushf
jae
push
not
in
shll
cwtl
xchg
jmp
repnz
movsb
mov
scas
pop
loop
mov
jae
lods
pop
loopne
sarb
xor
addl
mov
or
fcompl
inc
pop
arpl
and
test
xlat
push
fisubrs
inc
fcoms
call
fdiv
aam
test
push
lods
xchg
xchg
or
inc
mov
xchg
fisubrl
insb
jno
and
xchg
jge
pop
cltd
xchg
ja
lea
dec
add
movsl
ret
mov
jae
arpl
xchg
push
pop
xor
jg
xchg
shrb
test
jl
aad
ds
fsubrl
scas
shr
loope
in
add
mov
lods
mov
mov
and
xchg
popl
test
jl
dec
stc
mov
push
shlb
mov
jne
lock
or
lcall
cmp
mov
inc
outsl
xchg
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
fwait
or
sarb
dec
jns
jle
mov
repz
and
cmp
push
std
sub
pushw
sahf
cld
or
mov
push
xor
cmp
repnz
ljmp
jmp
cmpl
fldl
fsubl
mov
adc
jl
rcrb
loop
adc
and
sbb
cmp
xor
ret
jmp
bound
in
daa
in
dec
lcall
lds
hlt
out
cmpsl
in
pop
test
mov
sbb
outsl
mov
stos
outsb
pop
ljmp
xchg
xchg
push
scas
add
sbb
xchg
cmp
dec
in
mov
or
pop
rcr
int
xor
in
fdivrl
adc
loope
mov
jo
fs
lret
sub
in
cmp
sbb
aad
sub
inc
and
scas
pop
cmp
sbb
and
jle
ljmp
jo
out
sbb
fsts
scas
les
mov
pop
pop
sbb
movsl
jae
xor
test
mov
push
je
mov
mov
cld
cmp
test
in
mov
push
or
inc
por
iret
pop
addr16
xlat
scas
push
lahf
sub
adc
fsubl
into
cmpsb
jno
add
loop
and
dec
std
in
jo
cltd
xchg
xlat
add
or
imul
adc
into
loopne
mov
hlt
or
lret
inc
adc
ja
arpl
add
lods
fildl
mov
pop
and
iret
pushf
xor
cwtl
sub
pop
mov
inc
stc
jne
xchg
gs
or
pop
pusha
cmp
fisubs
stc
or
add
fsubrl
or
sti
bound
repnz
pop
mov
jmp
aaa
add
adc
aas
lea
hlt
xchg
ret
es
fs
adc
mov
lods
dec
rclb
sahf
enter
inc
push
or
and
mov
je
es
mov
jno
rorb
test
dec
aas
inc
popa
mov
inc
xor
jbe
mov
scas
pop
fldt
incl
mov
aaa
push
inc
jne
push
mov
jg
push
pusha
fldenv
arpl
xchg
pop
sub
hlt
xchg
ja
test
xor
dec
push
jp
mov
xor
mov
scas
cmp
enter
fs
icebp
lods
scas
push
daa
fs
lock
mov
int3
cmp
test
movsb
cld
addr16
push
pop
dec
sahf
xchg
jne
adc
int
shrb
push
lret
in
cmp
lret
dec
in
aam
jge
pop
test
into
pop
dec
shll
add
inc
ss
flds
icebp
shl
test
xchg
jns
aaa
sbb
add
lea
aad
and
imul
adcl
xlat
out
subb
push
jecxz
pop
sbb
movsb
loopne
or
out
bound
mov
mov
lcall
les
lods
and
jmp
fstpt
fwait
bound
xchg
cwtl
aam
cld
jb
push
pop
sti
scas
cmp
fwait
stc
jne,pt
adc
movl
pop
xchg
mov
popf
sbb
ss
adc
adc
icebp
inc
imul
push
nop
push
popf
jns
daa
pop
sahf
add
out
insb
out
xor
pop
mov
adc
lods
mov
jecxz
adc
and
mov
pop
and
fmuls
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
dec
xchg
lahf
or
fidivrs
loope
jle
sti
sti
out
dec
ret
hlt
dec
dec
cmp
cltd
sub
add
aad
and
and
fstpt
dec
push
dec
add
jl
popf
sub
insl
cmp
sub
jge
or
enter
mov
out
sbb
rcrb
xchg
stos
xchg
pop
cmc
jno
enter
xor
in
mov
mov
sbb
in
jge
leave
aaa
or
ret
repnz
xchg
mov
aas
or
ljmp
mov
jecxz
je
and
mov
int
arpl
cmpsb
push
fsts
xor
mov
int3
mov
lret
and
out
int3
mov
call
aad
push
cli
pop
adc
push
mov
subl
mov
clc
or
xchg
pop
mov
loopne
rclb
fsubr
imul
and
popa
rcrb
call
and
lcall
sub
pusha
and
out
add
int
pop
mov
pop
pop
jo
xlat
mov
lods
xchg
fsubp
ret
test
cmp
test
sbb
and
ds
jecxz
pusha
mov
pop
sub
js
ret
cmp
popf
xchg
cmp
xlat
mov
scas
icebp
sub
inc
jl
mov
pop
std
push
inc
cmp
jns
add
in
jmp
scas
jge
cmpsl
push
or
popa
push
adc
daa
add
cmp
push
clc
jne
lret
call
test
jp
lret
cmp
xor
fnstsw
adc
aam
in
data16
fistpl
outsb
xchg
lea
je
and
mov
push
outsb
in
ljmp
mov
lea
insb
cmp
gs
dec
out
dec
mov
push
imul
mov
in
mov
inc
mov
dec
movsb
sub
scas
inc
ss
adc
lock
fsubr
in
add
push
mov
push
test
aad
push
rcrb
mov
xchg
jle
mov
dec
add
scas
in
mov
jmp
test
pop
xor
xchg
fwait
inc
ret
push
lods
jmp
xlat
pop
imul
lods
jae
xchg
jecxz
push
or
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
mov
outsb
fdivrs
loope
jle
push
jnp
add
loopne
sub
push
daa
xchg
sub
pusha
ret
mov
push
gs
arpl
cmpsl
xchg
mov
fnstcw
xchg
jle
out
sbb
push
inc
jg
adc
dec
sub
or
mov
jo
jg
push
std
mov
bound
pop
pop
scas
mov
out
loope
jbe
xchg
sahf
dec
stc
stos
movsl
adc
shr
sbb
shl
jle
pop
mov
cmp
pop
dec
cmc
jmp
loope
std
lods
xor
cmpsb
lock
or
xor
sub
xchg
fisubs
pop
mov
cmpsb
lret
mov
stc
inc
xchg
xchg
mov
xor
and
mov
fadds
jo
pop
fwait
sub
or
mov
sbb
xor
inc
outsl
xor
clc
pop
pop
je
hlt
mov
sub
jo
insl
xor
mov
pushf
out
scas
lret
push
rol
jmp
aaa
shr
cwtl
pushf
jbe
sub
mov
mov
call
mov
mov
aad
pop
insl
loope
addl
std
push
cmc
movsl
mov
movsl
and
sbb
cmpsb
stos
dec
arpl
out
bound
cmp
test
pop
cmp
push
dec
xor
mov
pop
and
xor
mov
test
push
adc
xchg
sub
adc
sbbb
mov
cmp
iret
inc
mov
cmc
fadds
sub
ficoml
mulb
cltd
xchg
gs
addr16
sahf
dec
cmc
mov
lock
in
sub
lret
mov
mov
mov
clc
sub
sub
sbb
cmp
mov
xchg
sbb
push
sbb
xchg
shlb
stos
sub
in
lock
mov
xchg
shll
ja
fstpt
pushf
cmpsb
cmc
lea
test
movsb
mov
cmp
mov
ja
fdivr
lods
mov
and
pop
out
push
fldenv
inc
push
mov
pop
adc
insl
push
movlps
adc
ret
dec
dec
pop
mov
adc
aaa
sub
adc
mov
jge
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
mov
fstpt
loope
jle
stc
sti
sbb
mov
xor
jg
cwtl
jecxz
and
roll
rclb
xor
lea
jecxz
dec
inc
aam
mov
cmpsl
dec
out
add
pmulhuw
xchg
jns
pop
movsl
and
lret
add
jge
xchg
xor
cwtl
adc
inc
lods
add
mov
adc
mov
jge
mov
testl
xchg
ss
bound
mov
jecxz
pop
push
neg
cli
fstpt
cmp
ljmp
and
aaa
push
sub
add
jg
test
shll
int3
jns
ror
dec
or
inc
push
sub
sbb
std
bound
das
mov
push
jecxz
movl
sub
dec
popf
inc
add
in
movsl
mov
stc
repnz
mov
popa
push
sbb
sbb
es
mov
ljmp
addl
mov
into
dec
sbb
out
in
or
adc
push
scas
mov
stos
cwtl
or
and
sbb
and
push
jg
imul
xchg
jbe
mov
fcmovnu
je
shrb
mov
jns
sbb
mov
rcrb
push
fadd
inc
test
push
rcll
xchg
xchg
xlat
lods
mov
test
test
mov
xchg
stos
repnz
movsl
pop
movsl
fmuls
or
lea
cmp
ret
repz
adc
xor
inc
xchg
dec
cli
add
jg
fmull
shrb
cmp
xchg
mov
scas
shlb
fistpll
push
dec
push
or
mov
test
aad
scas
in
test
inc
pop
inc
dec
jmp
sbb
cmp
inc
sbb
dec
mov
jbe
lods
jns
imul
dec
or
mov
les
std
mov
cmp
aad
das
adc
pop
pusha
stos
mov
dec
std
or
fstpt
jle
out
mov
in
rcrb
mov
mov
arpl
sbb
aas
repz
hlt
push
mov
sbb
rclb
or
imul
push
and
jne
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
adc
jle
loope
jle
andb
nop
adc
ljmp
sub
popf
pop
insl
mov
lods
cwtl
add
xor
sbb
adc
push
cmp
mov
cmpsb
mov
dec
cltd
xor
aas
data16
xor
xor
push
js
ret
mov
add
sbb
aam
mov
ffreep
inc
pop
inc
sbb
xchg
push
jl
shll
jmp
jecxz
repz
lret
sbb
or
mov
cli
lahf
fsubl
cmpsb
mov
cwtl
xor
js
or
fs
lahf
xchg
sub
outsb
add
jo
stos
int3
hlt
adc
mov
add
jge
call
push
cmpsb
and
dec
sahf
sbb
gs
pop
ret
divb
popf
loop
or
stc
popa
mov
int3
and
or
or
mov
xchg
dec
inc
cmp
cmp
cmpsl
data16
stos
or
cmp
in
fbld
ja
sub
jecxz
imul
lret
jnp
sbb
cwtl
out
xor
push
xchg
scas
sub
mov
mov
inc
repnz
jl
inc
popf
or
cmp
test
push
adc
xlat
les
lret
dec
pop
mov
adc
jbe
pop
mov
jg
js
icebp
dec
outsl
mov
je
fcoml
cmp
xchg
loope
jo
pop
lods
xchg
cmpsb
jae
cmc
outsb
icebp
pmaxsw
cli
and
or
pop
add
out
mov
cmp
adc
fisttps
push
imul
xorl
sub
data16
fsubrs
cmp
fistpll
aad
repz
call
pop
xchg
mov
lods
inc
cmp
jbe
xchg
movsb
scas
mov
add
ficoms
enter
aam
push
dec
adc
ficomps
das
sbb
pusha
mov
cmc
ret
add
xor
add
fsubl
movb
imul
inc
inc
mov
ss
push
repnz
loop
xchg
fldenv
dec
aas
mov
mov
jno
mov
add
xchg
data16
sbb
lds
push
fidivrs
mov
mov
sbb
mov
mov
mov
ret
or
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
cmp
adc
faddl
push
mov
jbe
lock
cmpsl
xor
push
daa
icebp
inc
jb
into
mov
sbb
cmp
inc
sub
mov
popf
cmpsl
push
xchg
mov
jb
pop
fcmovnu
and
pop
fbstp
stc
rcl
gs
mov
xchg
jb
lret
iret
jnp
add
lret
and
or
or
popf
ljmp
int
icebp
gs
aad
sub
xor
and
subl
xchg
scas
cld
jb
and
fistpl
add
lea
shl
mov
mov
je
sub
es
imul
sbb
in
test
arpl
cmp
and
sub
inc
xor
cmc
sbb
mov
adc
cmp
cmp
xlat
dec
movsb
mov
xchg
gs
jne
int3
call
mov
in
jno
mov
lcall
adc
or
push
out
or
shlb
aas
push
lods
mov
or
rcll
insl
cmp
xchg
pop
inc
mov
push
std
out
pop
cmpsl
aaa
fcompl
push
in
mov
jns
ss
sub
or
pop
lret
inc
lea
xor
jb
inc
mov
shll
adc
in
lock
filds
andb
aam
icebp
add
outsl
sbb
sub
mov
aad
pop
xor
fistpll
call
lret
jp
xchg
lret
jno
push
cmp
push
daa
enter
pop
fnsave
mov
push
scas
cmp
cs
jae
and
lea
mov
insb
rcr
mov
fstpt
and
outsb
iret
push
mov
add
popf
jmp
std
jbe
push
cmpsb
sbb
mov
and
xchg
add
pushf
adc
mov
push
icebp
cmp
inc
mov
mov
int
aaa
or
sub
roll
jmp
outsb
cmp
lret
fbld
xchg
test
addl
int
addr16
push
fistpl
fsubrp
lds
or
movsb
insl
outsl
or
in
test
mov
neg
pop
pop
js
cli
shrb
test
push
push
std
lods
repnz
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
push
pop
xchg
loop
jle
jns
jle
ss
lods
cvtpi2ps
cmp
dec
cwtl
es
movsb
pop
dec
xchg
lahf
dec
mov
rcrb
sbb
fisubs
and
cmp
sub
ret
pop
mov
jg
mov
xchg
ret
xchg
fnstcw
add
int
sbb
fstps
inc
in
mov
testl
icebp
xchg
or
mov
or
xchg
rolb
inc
lock
rcll
adc
ficomps
mov
lods
in
mov
into
inc
movsl
test
pusha
sbb
push
rolb
mov
fadd
sub
pop
das
into
add
jmp
pop
push
ss
add
mov
mov
mov
pand
fiaddl
mov
inc
lods
rcrl
pop
mov
pushf
idivb
push
sar
fdivs
dec
and
cs
xor
xlat
int
outsb
xor
test
mov
daa
mov
ret
shrl
xor
or
jl
or
loop
xor
adc
int3
ds
int
jg
aaa
mov
cs
icebp
cmp
mov
mov
xor
sub
and
testb
cld
dec
cmpsb
jne
stos
ss
ror
lret
fstps
mov
lods
popa
jge
add
roll
fdivrl
mov
sub
ret
frstor
inc
clc
sbb
mov
es
pop
or
push
mov
aas
xchg
mov
add
or
adc
jo
int3
ja
aaa
push
pop
add
data16
push
or
cmc
push
lahf
cwtl
mov
repz
insl
mov
xorb
xor
or
sahf
mov
mov
jb
out
popf
cmc
jl
mov
cmp
cmp
dec
fildl
rol
push
sub
sub
push
in
lret
push
aad
jb
mov
dec
mov
mov
adc
xor
or
roll
jmp
xchg
call
repz
dec
mov
in
mov
iret
lahf
xchg
and
push
test
fidivrs
add
xor
push
pop
xor
inc
fucomp
mov
ja
sub
cmp
cmp
cmp
lcall
or
or
aad
fsubrs
out
cs
rorb
lds
sbb
inc
fdivp
xor
outsb
pusha
in
test
jl
cli
sbb
xor
stos
iret
and
loop
and
push
adc
jl
sbb
jl
dec
stc
rcrb
jbe
jp
or
sahf
popf
data16
adc
add
imul
push
mov
jnp
loopne
jae
ljmp
mov
sbb
jo
fsubs
sahf
push
cmp
lret
test
popa
jl
stc
push
insl
mov
clc
sub
ss
fdivrs
lcall
in
sbb
repz
data16
mov
sbb
add
fisubs
xchg
xor
mov
or
shll
stos
mov
push
test
pop
nop
sub
mov
divl
aam
out
cmp
icebp
add
dec
adc
jno
repnz
add
subb
stos
xor
xor
sbb
xchg
neg
and
jecxz
or
lret
sbb
loop
es
jle
and
dec
jno
mov
adc
xchg
int3
inc
hlt
loop
mov
xchg
mov
jp
call
push
addl
fidivs
and
stos
js
cltd
scas
sbb
out
adc
iret
adc
cmp
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
loop
mov
jle
jns
jle
pop
push
jmp
and
xchg
pop
ljmp
add
scas
out
and
icebp
in
push
xchg
sbb
es
lods
jle
jb
xor
dec
lea
iret
insb
jns
lcall
mov
pushf
pusha
arpl
cltd
inc
jecxz
dec
repz
dec
jae
sbb
inc
hlt
sbb
or
je
xchg
loop
inc
fwait
addr16
iret
insb
add
ja
xchg
or
xor
mov
lret
mov
push
cmpsl
sbb
jne
aad
cmp
sbb
push
jnp
mov
mov
or
xchg
js
sub
jnp
push
or
addr16
cmp
lahf
pop
xchg
mov
movsl
mulb
addl
sub
pusha
jne
mov
push
cmp
pushl
add
ret
or
or
or
mov
inc
loop
xchg
hlt
int3
add
pop
sub
clc
pop
ja
push
fwait
xor
jnp
out
bound
out
lods
mov
mov
adc
int
lret
daa
pop
cltd
mov
mov
add
mov
sub
cmp
lahf
stc
lods
sbb
lret
jg
lock
or
adc
pop
ret
idivb
and
cli
push
cmp
shrb
andb
fistps
xchg
add
xor
pop
or
mov
sub
ret
or
inc
pop
test
enter
mov
add
lret
mov
pop
cmove
or
sbb
xchg
and
gs
cmc
shlb
pop
pop
jge
dec
cmpsb
test
and
pop
mov
mov
jg
cs
xor
and
sub
mov
push
xchg
dec
and
aad
or
repz
or
out
or
mov
push
push
adc
inc
adc
lods
mov
in
and
enter
cs
dec
inc
vcvtsi2ss
adc
push
mov
mov
es
imul
scas
cwtl
mov
pushf
std
fnstenv
and
mov
cmpl
xor
je
idivl
mov
loope
repz
xchg
or
sbb
pop
outsb
dec
pop
mov
loopne
mov
loope
mov
roll
inc
jmp
lods
xchg
sahf
aam
mov
mov
ss
xchg
shlb
es
xor
mov
dec
sbb
subl
cmp
or
mov
mov
je
lcall
adc
push
lea
pusha
mov
ficompl
push
pushf
rolb
call
aas
sbb
mul
fxch
sahf
mov
cmp
pop
xchg
xor
lods
leave
cmp
dec
xor
jne
js
sub
filds
sub
stc
sbb
sbbb
testb
xchg
cmp
sbb
fildll
mov
in
jne
cltd
cmp
ja
scas
add
jg
push
push
pop
and
sar
scas
loopne
popf
gs
add
jl
sbb
dec
mov
sub
es
pop
sbb
dec
dec
xchg
or
cmp
mov
rcrl
fists
das
add
add
cmp
and
push
mov
ror
or
push
pop
jnp
aaa
and
fisubrs
neg
xor
inc
aas
push
and
cli
mov
mov
jp
or
ret
fists
mov
pushf
push
inc
sub
xor
arpl
adc
mov
ljmp
ret
shrb
addl
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
inc
jl
ljmp
lods
scas
fwait
test
push
jmp
sub
add
fldl
mov
loopne
das
popf
jns
sbb
popa
add
ret
inc
daa
repnz
ljmp
pop
xor
mov
jg
pop
pop
inc
inc
cs
pop
sti
cltd
xor
stos
xor
dec
fimuls
enter
pop
add
iret
icebp
sub
xor
or
mov
pop
fiaddl
push
lds
mov
mov
imul
lock
inc
adc
rcrb
mov
aaa
arpl
xchg
fldenv
push
aam
repz
mov
iret
shll
pop
add
pop
xor
mov
jnp
or
xor
xor
outsl
inc
aad
pop
xchg
cmpsb
arpl
cmp
sub
notl
xchg
mov
jg
mov
pushl
and
xchg
add
les
fcom
sub
or
jmp
lea
sbb
pop
adc
xchg
or
aas
clc
xor
and
lods
inc
and
jne
outsb
xchg
ficompl
or
test
add
clc
das
push
loop
arpl
loope
icebp
ja
push
loop
cwtl
stos
mov
ror
push
sti
shr
mov
jo
add
daa
cmp
and
mov
iret
xchg
test
fildl
movsb
int3
pop
cmp
fistps
inc
into
cmp
pop
add
inc
lea
or
sub
testl
jns
dec
sbb
in
fdivr
sbb
jle
nop
pop
popa
inc
iret
lods
jp
cmp
pushf
lahf
add
jle
outsb
scas
stc
mov
xlat
mov
inc
ffree
fimuls
aaa
xlat
fidivs
mov
cmp
xchg
and
push
scas
add
cmp
icebp
dec
ret
lret
out
and
xchg
les
and
pop
aad
idivl
dec
mov
push
add
pop
fdivl
ljmp
scas
xchg
fisubl
cltd
repz
mov
int3
xor
jp
jmp
or
shll
sahf
negb
stos
test
in
leave
dec
jp
iret
pop
rol
jp
pop
sbb
cli
lcall
negb
mov
pop
mov
dec
lgs
cs
adc
mov
pop
xchg
sbb
mov
push
in
push
insl
dec
test
imul
icebp
cmp
into
pop
roll
repnz
adc
sbb
cli
push
je
pop
outsb
mov
ja
xchg
sub
add
std
ficoms
cmp
xchg
inc
jg
into
ret
add
ja
and
jp
sbb
mov
mov
jne
into
pop
push
xor
cmp
fdivr
xchg
mov
add
pusha
dec
xor
push
or
push
and
cmp
jmp
mov
xchg
fmuls
stos
in
cmpsb
loope,pt
popa
xor
mov
adc
scas
mov
or
mov
into
cs
cli
das
loopne
pop
inc
xchg
dec
les
jno
mov
in
jp
inc
sbb
xor
aad
bound
mov
pushl
xor
push
pushf
mov
adc
and
jb
adc
cmpl
adc
lods
jne
gs
xor
es
jae
push
es
iret
out
pop
sub
push
xor
mov
mov
pop
sbb
inc
stos
cmp
popf
fists
mov
mov
test
test
aad
icebp
inc
mov
jecxz
xchg
bound
rolb
inc
movl
and
jmp
popa
imul
cld
popf
popa
imul
push
fldcw
or
les
jns
jle
xor
sub
jmp
loopne
xchg
add
mov
inc
mov
adc
jbe
add
or
and
pop
cmc
push
out
lods
or
into
testl
ror
and
sub
lcall
xor
inc
imul
popa
push
xchg
hlt
test
outsb
out
mov
jg
sbb
mov
sahf
jp
mov
nop
loop
fbld
add
cmp
xchg
mov
push
cmpsb
pop
jns
jnp
movb
test
adcl
dec
add
jo
in
ror
ficompl
add
fistpl
pop
sub
jge
mov
mov
mov
adc
adc
xor
into
in
mov
mov
subl
out
mov
mov
mov
jle
insl
jno
sbb
loop
arpl
lods
fistl
push
xchg
ss
mov
icebp
das
test
dec
jo
cmpl
push
mov
push
jle
pop
or
maskmovq
mull
adcl
push
cmp
sbb
insl
mov
in
ljmp
outsl
push
stos
ret
add
into
shrb
dec
add
mov
mov
push
movsb
mov
es
pop
loop
xorl
add
mov
adc
jl
xchg
jmp
adc
int3
loopne
imul
pop
out
jg
mov
cld
enter
pop
push
add
add
in
jle
into
lds
outsl
ss
scas
stos
aam
aas
sbb
mov
inc
ss
add
dec
shrb
in
mov
or
mov
imul
jns
jae
int3
sub
iret
push
and
fsts
jmp
test
xchg
mov
mov
xor
pusha
mov
add
in
jle
pop
roll
addr16
loope
les
js
add
xor
pop
pusha
loopne
fisubrs
cltd
mov
adc
cmpsb
or
mov
in
xchg
sub
int3
inc
xlat
sub
ds
pop
sti
mov
sti
ret
fcomps
lret
xchg
or
ss
push
jbe
gs
mov
movsl
add
fldcw
lahf
mov
fwait
xor
sub
xchg
rcll
fwait
bswap
jl
cld
adc
sbb
inc
mov
data16
jg
adc
idivb
mov
sub
add
mov
rolb
jmp
mov
mov
pop
adc
or
add
mov
aaa
jno
mov
or
adcb
addr16
scas
bound
test
mov
and
dec
lret
addl
inc
sahf
pop
mov
xchg
adc
lods
stos
ficomps
pop
ds
shrb
cmp
add
push
ret
inc
push
ja
rclb
add
sub
popf
mov
xchg
cmp
movsb
xchg
push
or
lods
clc
mov
mov
ss
pusha
xor
leave
mov
sub
pop
push
adc
roll
cltd
sbb
jmp
in
mov
insl
mov
fdivrs
sub
int3
dec
and
scas
outsb
xorb
in
fldz
loope
pop
cmp
popa
sub
mov
fldl
rorl
lds
jle
outsl
adc
mov
push
xchg
xchg
push
push
jmp
rcl
and
nop
sub
mov
aas
push
pop
pop
mov
les
and
orb
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
push
jg
pushf
cli
bnd
jo
jle
cltd
xchg
mov
insb
lahf
push
cmp
fstl
jns
jo
dec
test
cmpl
iret
and
in
sbb
jmp
inc
addl
faddl
pop
sbb
cmpsl
mov
xchg
ds
xor
sbb
inc
imulb
notl
dec
mov
jb
insl
xchg
icebp
shll
test
push
jbe
jbe
cwtl
enter
pop
mov
mov
pop
into
repnz
es
insl
imul
push
push
roll
inc
test
std
push
add
add
adcb
leave
js
stos
sbb
dec
dec
hlt
inc
loopne
lahf
xlat
xlat
adc
insb
cmpsl
mov
pop
inc
push
std
shlb
dec
or
add
mov
or
mov
add
fwait
iret
rolb
aaa
fbstp
jp
movsb
sub
inc
outsb
mov
xchg
xchg
push
xchg
ljmp
sbb
scas
xchg
cwtl
jo
or
enter
and
les
bound
and
pop
ret
mov
rolb
xor
outsl
add
aas
das
jle
mov
ret
mov
pop
scas
mov
std
or
fldenv
or
in
imul
ret
sti
in
int3
lods
stos
int3
stos
sub
mov
out
mov
mov
popa
cmp
sub
add
gs
and
pop
cmpsb
repz
test
mov
add
out
mov
dec
imul
ud1
jns
out
sub
xor
rol
loop
dec
adc
cmpsl
cmp
into
mov
pusha
sahf
jb
cmp
pop
dec
jge
pop
test
mov
xchg
mov
inc
xchg
mov
xchg
loop
or
push
movsb
jg
push
lcall
add
push
cmpsb
out
scas
lea
mov
xchg
push
sub
icebp
mov
inc
push
and
push
idivb
cmp
cmp
cmpsl
out
imul
xchg
sarl
inc
sahf
mov
fadd
mov
std
add
or
sbb
xor
push
mov
outsl
adcb
and
and
push
rcrb
insl
je
dec
xor
adc
adc
xor
dec
data16
xchg
jbe
jne
xchg
fcmovne
mov
sbb
xchg
pusha
repz
push
add
imul
cltd
pushl
sahf
add
pop
int
add
in
jno
dec
jecxz
cmp
mov
insl
jbe
mov
gs
xchg
or
pop
sbb
ss
loop
lods
dec
and
je
jno
ret
ljmp
xor
jmp
push
je
cld
jmp
pusha
fcoms
inc
pop
pop
aad
dec
mov
les
leave
loopne
gs
sti
movsb
insb
xor
add
pop
push
push
mov
mov
pop
jge
fsubrl
pusha
dec
mov
pop
jno
sbb
cmp
pop
xor
jg
adc
mov
stos
subl
int
scas
inc
leave
test
lahf
sti
xchg
fs
cmp
fdiv
outsb
shlb
inc
hlt
dec
mov
jo
aam
ja
cmp
mov
dec
cld
movsb
sbb
adc
jge
sbb
aam
mov
sub
mov
cmp
je
xor
and
mov
xor
adcl
add
jmp
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
insl
test
sub
jo
jle
mov
sub
addl
orl
sahf
xchg
and
and
dec
sub
icebp
or
jae
shll
fnstenv
lret
pop
mov
and
pop
adc
popa
incl
xor
xor
stos
jecxz
mov
and
leave
pop
ficoml
leave
pop
sbb
mov
cmpsl
pop
mov
les
dec
mov
stc
jo
xchg
adc
jmp
gs
outsl
sub
leave
lahf
das
lock
dec
loopne
and
add
inc
xchg
call
mov
iret
xchg
test
pop
or
pop
ss
cmp
adc
gs
out
sub
xchg
mov
imul
pop
lods
jne
or
mov
sub
aas
jge
and
fstpt
enter
pusha
fists
mov
lcall
pop
repz
insl
jns
pop
mov
fsubl
xor
push
nop
icebp
mov
xchg
sbb
add
les
xchg
cmp
or
repnz
push
sub
jecxz
out
xor
dec
xor
daa
inc
xlat
and
lods
or
lahf
aam
test
fucomip
stos
sub
xchg
xchg
mov
scas
or
lret
xorb
dec
lea
xchg
test
into
inc
dec
lea
dec
dec
stos
xchg
pop
std
mov
incb
pop
cs
push
mov
arpl
pushf
sub
push
or
xor
mov
pop
test
inc
inc
mov
push
xor
into
xchg
rcl
sbb
cli
imul
ja
std
test
cmc
jne
xor
add
mov
cli
add
cmp
dec
xchg
aaa
insl
loope
outsb
cwtl
sub
ds
adc
mov
cmp
orb
orl
push
stos
xor
mov
cmpsb
mov
push
add
or
xchg
rep
and
shl
pop
arpl
fs
stc
mov
fldt
inc
add
js
pop
je
mov
mov
xor
test
ss
rcl
xor
inc
sti
out
push
dec
shl
lods
jae
push
aaa
cmpb
adc
inc
and
adc
pop
sti
loopne
cmc
pop
in
adc
clc
clc
add
xor
mov
mov
xchg
int3
adc
dec
adc
or
mov
fldl
jne
mov
xlat
inc
into
sub
pop
xchg
jmp
cwtl
stos
outsl
ljmp
mov
jnp
push
jnp
or
hlt
mov
sti
sbb
cmp
aam
in
cmp
push
leave
sub
stos
scas
cmp
or
fs
adc
dec
push
mov
mov
cmp
dec
push
into
jecxz
xor
mov
lods
mov
mov
or
jnp
mov
mov
pop
pop
dec
pop
outsl
out
sub
cmp
push
dec
jbe
push
cmc
mov
sub
mov
xchg
xor
push
mov
inc
inc
and
xor
jl
fs
push
fidivrs
mov
pop
pop
pop
outsb
in
xchg
fwait
pop
add
add
mov
imul
xor
pusha
aas
sahf
mov
xchg
fiaddl
dec
lock
inc
je
loop
int3
dec
fcoms
lret
aad
iret
inc
mov
and
lods
ret
outsl
mov
push
cltd
clc
xchg
or
repz
stc
sbb
fcompl
cmpsb
mov
mov
cmp
cmp
adc
mov
mov
jo
je
sub
inc
int3
lret
push
mov
mov
or
mov
movhps
cwtl
or
or
int
or
sub
fisttpl
add
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
cs
cmp
idiv
jle
jo
jle
pop
dec
cmp
clc
pop
push
ret
add
mov
cmpsb
push
jbe
pop
test
lret
lods
stc
insl
fs
sub
test
push
loop
int
dec
jns
loopne
cmp
xor
sub
insl
mov
clc
out
push
xor
adc
push
subb
mov
bound
xor
cmpsl
stc
fadd
xchg
xchg
cld
lds
push
aas
jmp
mov
or
movsb
mov
ljmp
notl
push
mov
lods
inc
cmp
inc
and
mov
push
sbb
int3
pop
dec
add
xchg
aad
rcrb
mov
lcall
push
out
rcll
inc
xchg
push
mov
inc
mov
mov
scas
adc
out
xchg
mov
aas
cli
addr16
jecxz
lods
fwait
out
mov
pop
pop
add
aaa
dec
adc
jp
cs
stos
or
mov
xor
sub
pop
adc
orl
xor
inc
es
or
test
push
movsb
push
cmp
cmp
pushf
jge
jg
daa
cld
dec
cmc
jns
pushl
je
lahf
sbbb
push
or
sbb
inc
lcall
fs
xor
rorl
or
push
jg
out
push
or
inc
gs
in
xchg
sbb
js
sbb
imul
mov
dec
mov
adc
imul
ljmp
js
call
enter
insl
xor
jmp
fmuls
es
or
push
jecxz
xchg
sbb
int3
xor
cli
add
in
sbb
fiaddl
cltd
js
into
push
nop
les
sbb
xchg
inc
mov
stos
cmc
push
cmp
cmc
out
push
out
cmp
or
xorl
lahf
cmp
or
pop
movl
mov
cmpsl
test
mov
and
mov
or
xchg
test
iret
mov
push
sbb
jp
sarb
mov
inc
aad
in
add
dec
add
jmp
jae
xor
mov
push
dec
outsb
pop
add
xchg
into
repz
test
xchg
test
push
cmp
in
shrl
or
push
dec
or
pop
or
outsl
in
or
pop
lock
add
dec
scas
inc
xchg
or
in
test
cmp
xchg
movsb
or
sbb
out
test
adc
clc
push
cmp
lret
adc
cs
mov
pusha
mov
mov
outsl
jp
out
pushf
imul
loope
std
shll
mov
xchg
xor
fldl
mov
cmp
lcall
lea
lret
push
or
sahf
add
adc
clc
pop
iret
test
popa
cmp
push
subl
and
mov
xchg
rcl
shrb
sti
js
sbbb
les
jne,pt
xchg
arpl
push
jno
in
jp
mov
lods
into
popa
in
inc
mov
mov
push
fsts
and
xlat
jb
enter
xor
repnz
lret
mov
scas
les
into
fisubl
fldcw
arpl
and
popf
jecxz
cmp
repz
xchg
rcrl
sbb
ljmp
decl
out
pop
dec
iret
mov
pop
xor
xor
lret
fdivr
mov
xchg
jo
ljmp
jne
inc
rcr
mov
cmpsl
stos
xchg
or
lods
ss
add
sub
push
imul
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
fwait
dec
cmc
call
jns
jle
in
xor
and
xor
std
in
pop
gs
mov
in
popa
dec
mov
fstpt
xor
inc
cmc
pushf
insb
jb
xchg
mov
aas
add
je
test
pop
cmpsl
fmull
out
pop
or
imul
int3
sahf
scas
lahf
setl
daa
add
mov
lahf
jp
cmpsl
ss
and
cli
out
ret
adc
movsb
subl
lock
inc
repnz
mov
or
push
mov
loope
shr
pop
ljmp
daa
imul
inc
sub
push
jl
cld
mov
into
inc
clc
push
pusha
jge
cli
dec
js
or
aam
hlt
jg
js
cmp
lret
lahf
call
stos
pop
sub
int
xchg
push
lock
stc
fcmovu
mov
icebp
inc
das
dec
mov
push
loopne
mov
push
fstp
popl
inc
sahf
aaa
add
and
mov
push
iret
jno
jne
mov
stos
jb
cmp
sahf
and
shrb
sbb
push
test
push
fldl
sahf
out
jecxz
xchg
fisttps
mov
add
xor
xchg
aas
jle
lcall
cmp
mov
jg
inc
dec
push
cmc
or
scas
adc
jb
in
orl
fldl
mov
sub
mov
js
call
mov
jmp
inc
add
ficompl
js
out
mov
and
xchg
mov
inc
pop
call
dec
xchg
shlb
fbstp
ljmp
jb
push
lds
gs
hlt
cmpsl
pop
aam
out
cmp
xor
inc
aad
inc
and
cmp
not
add
add
cmpsb
lahf
insl
inc
adc
add
in
mov
stos
outsb
dec
cs
xlat
push
scas
cld
push
rol
movsl
add
xchg
xor
out
imul
push
push
pop
xchg
in
adc
icebp
lret
fcmovbe
rclb
lret
or
jl
icebp
pushl
mov
pop
mov
xchg
adc
xchg
dec
aam
push
pop
xchg
jle
and
sub
arpl
and
xor
movsl
push
pop
pop
mov
enter
pushl
pop
inc
es
xchg
mov
cmp
inc
inc
out
cld
fnstsw
jb
sar
sub
rcrb
pop
jecxz
and
pop
cli
mov
repnz
aaa
pop
lret
sub
out
add
mov
lahf
mov
mov
cmp
inc
dec
ja
sbb
and
aaa
das
popf
jecxz
push
pop
pop
sbb
lcall
cmpsb
daa
and
mov
or
pop
orb
jmp
fldz
cmp
and
pusha
aam
aad
adc
mov
ljmp
cmp
pop
cltd
gs
jecxz
hlt
pop
addr16
push
push
insl
addr16
jecxz
mov
and
push
add
add
arpl
loope
push
sti
insl
jge
ficomps
fmuls
icebp
movl
mov
popf
mov
mov
sbb
or
cli
icebp
and
jnp
or
or
push
loopne
and
ret
repz
jp
pop
adc
sbb
mov
jecxz
mov
lea
and
adc
xor
movsl
dec
lods
ret
mov
in
in
lret
pop
cmp
mov
sar
add
imul
inc
mov
xor
jmp
iret
cmp
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
jp
xor
cmpb
jns
jle
cmp
sarl
aam
jnp
sti
das
and
stc
xor
push
jp
jae
and
repz
xchg
inc
sbb
fdivrp
cmp
ret
adc
ret
stos
lahf
jo
mov
jo
cmpsl
daa
inc
ret
or
add
jg
test
mov
pop
mov
xor
mov
xor
inc
stos
fldt
and
sub
lcall
mov
fildl
jnp
inc
insl
jnp
stos
add
add
dec
mov
mov
sbb
fsubrs
in
rcrl
mov
mov
and
xor
cld
lret
mov
cmp
stos
adc
or
cmpsl
repnz
sbb
xchg
push
clc
inc
and
imul
cs
in
ret
scas
cmc
xchg
sbb
ret
daa
jecxz
and
dec
in
mov
and
and
out
fsin
mov
sbb
loope
jne
mov
push
rclb
cmp
mov
add
js
outsb
add
pop
fs
adc
push
leave
xchg
xor
push
out
sahf
push
test
orl
pop
aas
add
mov
shlb
add
cmpb
mov
push
ss
lcall
jle
test
cwtl
aam
scas
mull
push
mov
xchg
mov
xchg
pop
dec
int
sub
jecxz
jb
lock
pop
pop
fwait
mov
lock
push
dec
lea
je
cs
jne
hlt
outsb
pop
ja
lock
sub
movsl
and
fbld
shlb
add
mov
adc
out
mov
je
sarb
addr16
mov
ja
imul
lahf
sarb
out
adc
adc
pop
lret
ret
out
adc
out
adc
popa
add
cld
adc
lret
js
popa
aas
xchg
and
movsb
int3
lock
mov
sti
jmp
shrb
push
sbb
fidivrs
adc
adc
cld
jmp
and
cmp
push
test
lret
das
shl
or
push
or
mov
popf
aas
stc
test
lods
xchg
dec
push
loop
pop
sbb
xchg
or
pop
cli
push
sub
ljmp
call
cmp
divl
out
mov
sbb
cli
and
rcrl
dec
repz
or
mov
pop
imul
adc
sbbb
lods
fs
mov
loope
addb
lret
jne
mov
sarl
xchg
in
aad
pop
insb
insl
sub
xchg
jns
xlat
and
sub
jge
fistpll
aas
clc
mov
xor
sbb
rolb
mov
fcomip
cmp
movsl
mov
ret
sbb
loop
adc
xchg
loop
in
add
mov
shlb
aam
jbe
cmp
mov
aam
pusha
insb
lods
loope
icebp
stos
movsl
and
pop
inc
or
lds
call
popl
xchg
push
lahf
stc
jp
call
cli
ficoml
push
inc
cmp
cltd
mov
jae
fldl
fwait
pop
push
je
hlt
nop
cwtl
inc
and
test
repnz
rcrl
sbb
pop
aam
or
sbb
xchg
sbb
bound
lret
mov
dec
fstl
mov
push
jmp
pushf
xor
pop
mov
mov
inc
inc
aaa
jb
xor
sbb
mov
in
push
push
mov
mov
shr
pop
add
incb
insl
push
stc
push
fsqrt
mov
mov
fsubl
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
fmull
in
jle
jo
jle
sahf
sarl
iret
daa
or
mov
mov
lods
insb
out
loop
sbb
lods
adc
mov
shrb
adc
sub
cmp
in
arpl
cmc
mov
mov
lea
sbb
adc
sbb
sbb
out
pop
hlt
add
jl
call
adc
mov
sbb
imul
arpl
push
cmpsb
inc
sub
cld
pop
dec
andb
or
shr
pop
ja
mov
cmc
cmp
loopne
popa
out
sbb
jbe
cmc
repnz
imul
nop
xor
mov
lahf
rcl
outsb
sub
adc
stos
mov
dec
xor
or
std
jne
adc
ret
dec
xorb
fwait
outsl
into
or
lods
jmp
adc
xchg
ds
lock
adc
in
aaa
fnstenv
je
bound
mov
cmc
les
jo
les
mov
pop
sub
xlat
nop
lods
jno
clc
popa
stos
xchg
jmp
inc
test
xor
cli
repz
jecxz
lods
jb
mov
push
cmpl
stc
mov
mov
dec
inc
inc
add
divb
je
gs
rcll
cmp
cli
stos
xchg
adc
push
add
xchg
shrb
xor
rcrb
dec
or
in
mov
inc
sub
and
adc
cmp
mov
cli
xchg
or
jmp
in
jnp
adc
sarl
mov
out
pop
sarb
dec
insb
add
stos
test
push
into
jne
cld
push
in
repz
jne
dec
int
ljmp
adc
gs
sbbb
outsl
mov
mov
stos
aas
jl
fdivrl
loopne
movsb
jo
subb
fidivs
cmp
cmp
fdivs
outsl
pop
mov
xchg
mov
xor
sub
out
sub
pop
xchg
inc
sarl
shrb
mov
ret
ds
pop
data16
insb
ss
testb
push
sarl
loopne
int3
ret
mov
cmp
in
adc
mov
push
lahf
imul
pop
pop
dec
sub
jle
aas
jne
and
icebp
or
mov
aam
add
pop
sbb
mov
fucomi
pop
sub
xlat
and
xor
and
push
inc
or
cmp
sub
pushf
fwait
jne
xor
push
faddl
and
sub
cmp
sbb
punpckhwd
pop
mov
dec
out
jle
ffree
in
mov
fsts
fmuls
and
mov
push
out
test
cmp
insl
cmpb
jbe
adc
rolb
push
scas
xchg
rcll
push
dec
inc
mov
pop
and
jbe
cmp
enter
les
xor
sub
mov
sub
dec
call
xchg
adc
adc
sbb
jl
jnp
xchg
xchg
mov
xor
and
ljmp
cltd
lret
dec
push
xorb
ret
xchg
xor
aaa
mov
test
rcl
pop
xchg
push
iret
pop
xchg
dec
push
lcall
sbb
mov
lret
pusha
mov
add
pop
out
in
or
push
cltd
pushf
fsubl
pop
mov
dec
lcall
pop
in
xchg
cmp
addr16
outsb
xor
cmp
jg
sarb
inc
cmp
xchg
mov
add
add
jmp
cmp
dec
mov
rolb
and
jle
jns
jle
out
xchg
cli
jge
cmc
fcoml
js
iret
enter
push
mov
adc
dec
sbb
out
sarl
add
inc
daa
cmp
test
lds
inc
in
and
xor
sub
insb
repnz
cmp
pop
mov
xchg
in
clc
orl
sub
gs
cmc
cmp
or
xchg
shlb
aas
call
sub
cs
push
aas
lar
sbb
mov
push
pop
test
loope
jae
icebp
xorb
jge
push
cwtl
and
xchg
lahf
mov
xchg
xor
pop
add
loopne
mov
jmp
repnz
mov
mov
jae
fcmovnbe
or
loop
or
clc
movsb
aas
push
repz
mov
inc
jne
pop
or
rol
mov
add
mov
leave
cltd
aad
repz
cmp
lods
hlt
jp
shlb
movsl
jbe
xor
mov
mov
push
scas
fstpl
push
ljmp
fstpt
popa
fldl
sub
fisubrs
pop
ds
jb
rol
and
jl
sbb
shll
cmp
mov
xchg
sbb
push
sbb
xor
and
push
test
inc
push
pop
jmp
xchg
ret
and
lea
xchg
pop
mov
ret
outsl
dec
and
movsl
jns
add
out
xchg
or
mov
mov
dec
pushf
xor
mov
jp
loop
cmpsl
jnp
xchg
popa
xchg
fadds
lcall
out
inc
in
imul
mov
push
sarl
cltd
pop
lock
xor
mov
xchg
scas
push
pop
push
loope
pop
mov
or
and
xor
dec
push
push
fiadds
fimuls
cmp
mov
pop
push
aaa
pop
xor
das
in
mov
std
xor
lret
dec
imul
lea
push
xchg
push
orl
mov
cwtl
and
push
cmpsl
ret
push
dec
xchg
sbbb
push
hlt
bound
pusha
test
push
movsl
cwtl
shll
inc
popa
hlt
fwait
push
dec
idivl
xchg
movsb
push
inc
sub
cmc
cld
inc
sbb
sbb
jne
xor
shll
sbb
mov
xor
popa
push
jmp
fdiv
sub
aas
std
push
xchg
imul
pop
pop
dec
add
fcoms
jmp
xchg
cmpsb
sbb
push
pop
sbb
jmp
out
jg
xor
ljmp
out
in
std
outsb
add
jle
testl
xor
shll
test
sbb
out
mov
dec
addr16
xlat
xchg
mov
pop
cmpb
dec
jno
sub
or
pop
mov
xchg
push
xchg
mov
cmc
and
out
cltd
dec
add
fisubrl
dec
cmp
cld
sub
mov
dec
data16
enter
and
and
add
xchg
pushw
sbb
cs
and
stc
adc
sbb
add
insb
xor
pop
adc
outsl
xchg
mov
pop
fldt
xor
cs
movb
dec
test
dec
mov
mov
gs
mull
rorb
jnp,pn
sbb
subl
inc
scas
xor
cmp
mov
xchg
scas
sub
mov
ret
or
sahf
jo
icebp
and
inc
or
out
push
ds
mov
lea
cmpb
jne
pop
jl
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
icebp
and
rclb
jle
pop
leave
and
adc
mov
sbb
mov
fldcw
nop
loop
jp
roll
dec
mov
cmp
mov
mov
je
sbb
jne
and
xor
inc
or
cltd
sub
rcrb
jne
fwait
add
adc
push
pop
pop
test
mov
lods
loopne
and
pop
outsb
aam
nop
fcompl
es
jne
pop
pop
inc
jae
int
inc
push
daa
xor
inc
pop
fdecstp
pop
addr16
fistpll
daa
pop
lret
add
sbb
sub
in
mull
pop
push
and
mov
test
fcoms
jnp
loope
in
lcall
ds
add
jle
stc
push
mov
cs
adc
jp
sbb
shrl
movsb
jge
xorb
out
ds
ljmp
fnstenv
and
sbb
aad
jnp
jno
xchg
pop
adc
sbb
in
xchg
xchg
xchg
popf
dec
lcall
call
sub
lcall
sarl
adc
pop
fisttpll
inc
ljmp
rolb
mov
add
push
inc
out
jp
punpcklwd
rcll
cmp
mov
mov
fs
lret
mov
jp
subl
jl
jns
jge
add
lds
loopne
pop
cmpsb
js
loope
movsl
ret
xchg
cmc
mov
dec
cmp
movsb
pop
cltd
jle
ja
mov
enter
ds
fldt
int
mov
sbb
jge
or
shlb
decb
nop
test
adc
bnd
pop
or
sbb
not
gs
aad
lods
mov
mov
cli
mov
imull
mov
mov
push
cmpsl
ret
xor
push
mov
jp
and
test
fdiv
call
rorb
or
loop
xchg
xor
js
add
inc
adc
repz
mov
dec
adc
mov
and
sub
push
sbb
sbb
cmp
ljmp
js
fcompp
add
push
push
ficoms
inc
xchg
pop
mov
jp
push
add
insb
mov
mov
es
pop
mov
add
sub
inc
aaa
push
imul
and
fcomps
jno
mov
pop
imul
ljmp
cmpsb
xchg
inc
ljmp
push
js
loopne
dec
xor
mov
jnp
popa
es
inc
rorl
insl
mov
mov
cwtl
imul
inc
mov
cmp
mov
faddl
andb
sbb
out
fists
loop
pop
je
iret
loopne
ss
and
mov
cwtl
sbb
add
subb
rolb
popf
divl
sarb
add
sbb
dec
es
repz
push
pop
ss
cmp
das
ja
aas
sbb
out
pop
cmp
in
inc
mov
test
sub
je
fcoms
push
scas
hlt
xchg
imul
loop
mov
test
jae
inc
repnz
test
mov
rorb
jno
cmp
pop
negl
sbb
in
push
mov
push
add
mov
push
push
pop
jno
mov
sbbl
nop
and
mov
test
imul
adc
xor
imulb
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
shld
inc
push
jo
jle
ja
cwtl
lods
pusha
mov
cmc
stc
xchg
pop
xchg
xor
push
and
into
bound
lret
pop
hlt
mov
xchg
dec
fisubrl
jl
pop
jge
xor
push
xchg
mov
out
mov
repnz
ljmp
add
arpl
jnp
fcmovnu
popa
ds
mov
aaa
mov
jne
inc
jnp
push
and
es
inc
sbb
pop
lcall
insl
jle
repnz
sarl
in
outsb
cmp
iret
cs
pop
sbb
push
shr
cltd
pop
jp
sbb
mov
mov
notb
rolb
pop
inc
pop
rclb
nop
pusha
xchg
idiv
test
scas
adc
xchg
mov
adc
push
xchg
push
aad
push
mov
jne
fcompl
and
arpl
mov
andl
rorb
dec
pop
mov
aad
andb
mov
notl
or
hlt
stos
pop
in
jl
xchg
or
sarb
mov
add
pop
pop
in
mov
dec
and
lods
ret
add
ror
push
insl
jge
and
test
fldcw
cltd
mov
push
pusha
lds
add
int3
cmp
pop
xchg
pop
add
mov
push
scas
enter
mov
lret
ficomps
xor
xor
sub
inc
push
jbe
dec
cs
dec
pop
and
arpl
repnz
xchg
mov
sbb
js
cs
mov
dec
shll
lds
out
jo
jecxz
je
mov
idiv
ret
inc
lds
lds
push
or
pusha
sub
cmp
fs
in
xlat
dec
fidivs
cmpsb
push
cmpsl
out
mov
sbb
std
mov
ret
pusha
rcr
sahf
sti
addr16
out
adc
mov
sub
adc
mov
sbb
push
mov
data16
jne
cs
push
stos
inc
into
jge
ja
jl
jle
mov
and
inc
dec
dec
pop
mov
sub
mov
icebp
mov
lock
pop
xchg
fnstenv
call
fwait
cmp
imull
lock
cs
sbb
adc
sbb
dec
mov
sahf
xor
aad
pop
das
push
sbb
mov
sub
aad
jae
add
mov
repnz
cmp
pop
bound
inc
cltd
jb
mov
dec
jecxz
adc
popa
xchg
pop
mov
into
adc
test
subb
jecxz
nop
xchg
mov
jmp
sbb
jecxz
ffreep
jnp
ret
jmp
sbb
dec
mov
mov
sbb
aas
sbb
out
or
sbb
dec
repnz
push
rolw
mov
sbb
nop
cmp
push
insb
jo
cmp
jle
pop
inc
mov
lods
movsl
xor
stc
cmp
sbb
rolb
dec
fsubl
arpl
test
xorl
jmp
dec
test
int
mov
inc
mov
dec
or
xor
pop
scas
sub
and
enter
fiadds
or
lret
je
test
and
cltd
shll
push
sub
sub
add
test
pop
movsb
mov
jge
add
jb
or
cwtl
cmpsb
inc
sub
stc
lods
sbb
xor
movsb
jne
xor
faddl
ss
and
inc
loopne
enter
adc
adc
je
icebp
fsubr
pop
stos
xchg
push
movsl
in
xchg
ja
pop
ficoml
lea
rclb
add
jb
add
hlt
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
loope
and
int3
sahf
jle
jo
jle
out
adc
iret
dec
popf
scas
cmp
loopne
push
or
cmp
sbb
mov
mov
jmp
jge
repnz
or
inc
call
icebp
xor
flds
xchg
jmp
inc
testb
lea
inc
movsb
push
jle
pop
mov
sarb
sub
xor
inc
mov
dec
xor
out
out
movsl
cmp
and
testl
jnp
imul
xor
call
add
mov
cld
movsb
sar
xchg
in
negb
mov
push
sbb
popa
dec
mov
stos
xor
xchg
mov
inc
adc
out
dec
das
push
fsubrp
sbb
mov
faddl
dec
scas
xor
test
pop
jg
or
test
xchg
fildl
imul
clc
pop
loopne
cld
jae
test
test
mov
movsl
clc
dec
push
lret
dec
orb
push
jp
push
sbb
stos
pop
or
mov
jg
leave
popf
jbe
ret
ja
adc
push
add
ret
loop
inc
adc
fs
mov
cmc
push
pop
push
mov
mov
jns
xor
dec
outsb
lea
out
and
inc
out
int3
mov
and
popa
std
sbb
clc
pusha
out
pusha
inc
dec
cmp
jb
sbb
imulb
out
jecxz
xor
mov
aam
jp
test
cmp
add
inc
xchg
rorl
mov
and
cld
and
imul
mov
lea
cmp
jge
cmpsl
adc
stos
push
dec
les
aad
nop
loope
jecxz
stc
call
jl
jge
and
jmp
inc
dec
test
movsb
insl
xchg
lds
and
adc
mov
fldenv
es
xor
push
sub
ret
adc
fs
pushf
cld
in
lahf
pusha
lret
inc
dec
mov
int
pop
jb
push
jno
inc
repnz
sub
sub
inc
shr
ss
mov
arpl
sub
lret
add
add
xchg
jne
imul
out
mov
push
stc
imul
jmp
andl
adc
out
xchg
int3
xchg
cld
les
leave
and
inc
pop
xor
xor
popa
mov
mov
mov
fucomip
stc
imul
aam
sbb
push
xchg
push
pop
lahf
pop
in
int3
adc
mov
xchg
into
jnp
push
mov
xchg
xchg
xchg
or
xchg
stos
or
xchg
lods
popf
mov
insl
shll
js
pop
lods
sbb
in
mov
mov
les
test
mov
fdivrs
jnp
or
jl
xor
inc
mov
lods
jl
pop
and
mov
mov
les
inc
lahf
xor
inc
shrl
adc
popf
xchg
mov
xor
cwtl
rolb
cmp
jae
jge
leave
outsb
into
xorb
orl
ljmp
test
sbb
cltd
into
push
data16
xlat
outsl
shr
fcoml
mov
jle
nop
mov
push
inc
push
sar
push
push
int3
xchg
mov
and
cmp
add
jmp
nop
stos
xchg
jg
clc
int
insb
loopne
lds
adc
and
ss
jl
xchg
push
mov
aam
jo
iret
cmp
mov
loop
lds
xor
fcmove
ret
ret
jb
hlt
aas
movsb
sub
pushw
cwtl
dec
iret
or
hlt
cli
add
lds
jno
mov
test
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
repz
jmp
lcall
cli
mov
mov
mov
int
and
mov
pop
push
nop
mov
dec
or
cmp
jp
in
cmc
into
push
mov
and
lds
sub
gs
mov
cltd
jmp
rorb
fs
arpl
aas
or
mov
xchg
ret
pop
cmpsb
nop
outsl
ret
mov
fwait
lock
inc
fisubs
add
int3
imul
adc
or
lds
bound
mov
or
or
loope
push
lods
pop
pushf
jnp
pop
aam
dec
mov
out
pop
stc
dec
cs
out
adc
dec
push
fs
movsb
mov
das
mov
cmp
out
jge
ss
sbb
aam
mov
jmp
les
scas
mov
push
fisttps
inc
push
in
jnp
mov
insl
or
jp
popa
in
or
cmc
lods
pop
std
scas
push
sub
lods
inc
mov
dec
int
dec
mov
mov
cmp
enter
xor
pop
xchg
mov
sub
ret
adc
xor
jmp
mov
mov
cmp
aaa
pushf
dec
pop
enter
jecxz
xor
push
push
or
mov
call
lods
loop
cmp
imul
testb
testb
lea
or
outsl
mov
sub
ret
sbb
inc
sbb
js
addl
or
popa
sub
add
outsb
dec
loope
dec
push
cli
dec
or
pop
loope
adc
mov
out
xchg
cli
jb
sub
mov
gs
into
sub
repnz
in
stc
loope
fisubrs
sbb
jno
xchg
fwait
aaa
mov
jns
cmpsb
imulb
jne
pop
int
aaa
mov
popf
add
leave
popf
test
mov
js
ljmp
sti
cld
mov
xor
fwait
push
imul
mov
mov
std
out
out
xor
mov
mov
nop
aaa
gs
pop
xor
dec
fisubrs
int3
scas
rsm
rorl
xor
pusha
or
push
cli
mov
sbb
test
clc
aam
cmp
pop
mov
cmp
push
mov
rorb
sbb
dec
mov
sbb
movb
mov
xchg
push
or
test
mov
mov
shr
mov
lods
ret
xchg
mov
inc
xchg
scas
aas
add
pop
xchg
pop
dec
mov
push
pop
bound
jge
mov
fildll
dec
mov
not
sbb
std
xor
pop
or
mov
cs
dec
jne
callw
jmp
mov
pop
lock
fwait
in
push
bound
push
psrld
adc
sub
mov
xchg
pop
test
loop
push
lret
sub
mov
dec
xchg
loopne
in
int
mov
dec
int
decb
mov
jp
in
xchg
pop
sti
pushf
pop
xchg
push
inc
hlt
in
fs
pop
popa
ss
out
pop
pop
cmp
dec
cs
add
cmpsb
iret
fidivl
and
mov
and
cmp
test
add
mov
push
fdiv
popa
xchg
in
mov
insl
jg
push
call
xchg
xor
rcll
push
mov
jns
loop
popf
adc
mov
jne
mov
pop
std
nop
xchg
sbb
movsb
pop
or
outsb
jecxz
sbb
and
fstps
popa
rcrb
lret
mov
xchg
mov
movl
fcmovb
ret
adc
ret
adc
push
shl
rorl
xchg
xor
pop
test
fsubrs
rorl
xor
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
repnz
jle
push
push
jp
push
pop
push
mov
or
sahf
mov
mov
std
call
cwtl
push
icebp
adc
aad
push
out
add
lcall
sahf
bound
xlat
push
mov
call
mov
out
popa
popf
dec
inc
int
clc
and
sub
and
mov
add
add
xchg
push
mov
mov
in
mov
or
addr16
or
inc
jmp
pop
and
pop
test
ljmp
iret
pop
int3
test
arpl
inc
lahf
or
push
cmpsb
daa
imul
ret
mov
enter
or
adc
xor
ds
mov
mov
mov
fwait
adc
fsubl
cld
les
lock
fldl
pop
repnz
add
in
inc
out
push
mov
iret
jle
cltd
in
ret
std
stc
dec
int3
test
lcall
std
nop
test
pop
xchg
mov
jl
push
movsb
lods
addr16
les
imulb
pop
aad
pop
dec
jmp
ljmp
cli
test
xchg
sub
rorl
dec
sub
mov
push
iret
inc
pop
push
or
dec
lock
dec
add
mov
mov
mov
push
mov
test
loopne
sbb
mov
testl
lods
icebp
scas
mov
add
int
dec
cltd
and
sub
fidivrl
dec
cmpb
cs
jl
mov
sbb
jb
ret
and
push
jge
mov
jmp
pop
cmp
push
add
pop
jp
push
adc
push
inc
xchg
push
pushf
shlb
jnp
mov
stos
push
scas
lods
arpl
or
ja
pop
stos
pop
cmp
mov
loopne
xor
loop
js
sahf
loope
test
sahf
adc
or
mov
jo
mov
xor
jg
aad
shll
outsl
push
and
adc
mov
mov
jmp
lock
pop
outsb
sub
push
xor
cs
fisttpl
jl
hlt
les
jg
inc
int3
cmpsl
stos
push
stc
imul
sbb
xor
push
ds
loop
inc
sbb
insb
dec
cwtl
movsb
popa
cwtl
test
sbb
xor
out
pop
and
daa
push
cmpsb
xchg
xchg
mov
xor
mov
mov
popf
cmp
gs
ds
add
imul
cwtl
ja
jnp
inc
add
hlt
push
scas
dec
mov
cmpsb
imul
ds
jno
sbb
out
cmp
fdivrs
cld
scas
and
cwtl
mov
or
mov
and
cmp
nop
mov
pop
inc
fcomi
fstpl
cmp
data16
cmp
inc
xor
and
imul
iret
mov
pusha
hlt
mov
jmp
das
das
adc
sbb
imul
cmp
mov
mov
jecxz
adc
jg
jl
pop
mov
adc
mov
mov
push
xchg
jne
loope
push
mov
inc
xor
jnp
mov
insb
jae
cmp
repnz
xor
sub
or
sahf
aas
fldcw
imul
push
add
mov
cmpsl
xchg
lods
add
insb
fwait
nop
shrl
push
jl
sbb
es
xor
cmpl
fwait
jns
push
sahf
xor
push
mov
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
int3
pushf
inc
xor
jle
iret
insl
dec
xor
or
lret
mov
pop
mov
push
and
ret
inc
inc
and
jl
pop
or
cmc
das
data16
ret
adc
movsb
mov
mov
gs
in
loopne
push
adc
jbe
or
pushf
int
add
push
cmpsb
and
dec
or
push
imul
mov
dec
repz
lret
daa
add
sub
push
xchg
ss
adc
pop
out
mov
xor
jmp
sahf
pop
hlt
andb
sbb
push
dec
mov
int
xor
fwait
inc
fdivl
shrl
cld
outsb
fcompl
stc
inc
sbb
xlat
jmp
or
xor
in
out
dec
adc
sub
pusha
xlat
mov
shrb
scas
lret
add
fstl
mov
cmp
dec
mov
inc
ds
and
xchg
push
nop
mov
pop
jmp
adc
mov
and
jg
sbb
scas
mov
mov
gs
xchg
inc
sbb
jg
je
scas
das
xchg
clc
inc
ljmp
or
cwtl
mov
scas
adc
push
mov
and
lock
sub
cmp
in
out
cli
ljmp
sub
inc
popa
sub
and
rcrl
in
cmp
pusha
mov
sbb
cmp
inc
mov
push
addr16
aad
cmp
xchg
scas
xlat
into
push
inc
rclb
scas
and
and
xchg
aam
std
lret
dec
inc
stos
lcall
cmp
shl
ror
leave
test
adc
cs
scas
mull
jns
sub
mov
and
pop
mov
fdivl
sbb
inc
cmp
adc
cmp
xchg
cltd
fldt
stos
mov
xchg
jle
dec
xor
or
xor
stos
jne
mov
ja
pushf
cmc
rorl
fistpl
pop
mov
daa
andb
lea
inc
mov
dec
shll
xchg
and
popa
idivl
test
aam
lock
cmpl
out
xor
hlt
sbb
jns
mov
inc
ror
xor
mov
inc
imul
ret
inc
pop
or
ss
pop
loop
push
mov
das
repnz
rolb
popl
sbb
or
outsb
mov
int
adc
xor
pop
ss
mov
int3
and
shll
and
scas
push
inc
or
fistps
inc
xor
push
mov
push
je
es
insb
jae
pop
int
sub
andb
dec
add
lcall
shl
xchg
aas
inc
or
into
xor
movsb
mov
sbb
arpl
lret
mov
cltd
or
ret
and
push
jno
pop
jae
sub
adc
xor
pop
dec
dec
les
add
pop
cli
adc
sbb
in
push
and
test
add
imul
adc
jecxz
aas
imul
and
xor
insb
in
stos
jl
int3
das
frstor
mov
int3
movl
mov
cld
mov
ss
lret
lods
int
pushf
clc
lahf
shll
and
fiadds
or
int
js
xchg
lret
in
or
pop
fldt
movsl
inc
lea
push
js
aas
mov
mov
adc
jecxz
mov
mov
cmp
or
xchg
movsb
fmull
pop
jg
popa
push
push
icebp
cs
inc
out
into
arpl
inc
jmp
pusha
sub
bound
mov
xor
mov
jmp
sahf
lcall
adc
and
ljmp
jle
jns
jle
xchg
vcomiss
mov
push
loop
jmp
subb
pop
je
mov
jno
in
les
decl
fs
push
loopne
xchg
or
mov
adc
xchg
cmp
sub
popa
stos
cmc
pop
adc
lcall
stos
xor
xor
ds
aad
mov
popa
sbb
mov
mov
adc
sarb
or
adc
inc
movsl
movsl
test
aaa
lds
out
aas
pop
dec
xorb
jnp
lea
mov
je
cs
inc
imul
mov
push
cmp
ss
stc
stos
and
daa
mov
push
mov
iret
adc
roll
jl
jge
and
add
arpl
dec
popf
add
adc
or
inc
imul
pop
cli
mov
push
push
movsl
mov
das
xor
addr16
add
repz
mov
pop
es
outsl
pop
mov
int
sti
repz
sbb
or
cmp
mov
xchg
push
out
cld
xor
push
jl
aam
call
shll
jne
mov
movsl
psubusb
cmp
mov
cs
fsubs
cwtl
in
in
test
add
popa
repz
and
jnp,pt
mov
scas
xor
in
test
xchg
mov
rcll
mov
in
mov
jne
mov
push
inc
movsl
or
mov
mov
cwtl
jne
cmpb
pop
dec
add
imul
jg
pop
jecxz
add
fldl2t
jecxz
ss
popf
vmovaps
sub
dec
pop
adc
test
xchg
andb
popa
mov
inc
inc
loopnew
loopne
xlat
xor
daa
lock
add
andl
push
ret
mov
loope
and
fcomps
subl
loop
add
mov
push
xchg
xchg
inc
popf
rorl
roll
mov
mov
inc
jnp
jb
in
stos
pop
adc
cmp
rcl
out
push
adc
inc
dec
enter
out
imull
mov
mov
sbb
sub
push
pop
and
movsb
bound
xchg
test
les
mov
sub
rcpps
dec
in
pop
sbb
loopne
cli
test
out
cld
into
inc
das
fs
mov
pusha
inc
mov
popf
in
cs
adc
mov
mov
pop
scas
imul
call
scas
xchg
jl
and
jmp
cli
movsl
mov
test
stos
in
dec
ss
cmp
int3
cmp
imul
mov
testb
inc
push
mov
out
push
sbb
adc
mov
xchg
inc
jl
cld
add
cmp
js
mov
loopne
lcall
outsl
mov
push
shll
test
push
mov
test
adc
xchg
mov
cmp
nop
push
cli
in
lcall
sbbb
or
sub
out
inc
mov
insb
js
pushf
dec
or
ljmp
push
ret
stos
cli
fsubl
inc
call
add
aam
add
data16
out
movsl
push
pop
aad
jmp
loope
or
jle
les
popf
ss
dec
mov
dec
and
push
push
push
in
mov
xchg
in
cmp
popf
and
out
scas
pop
rcl
or
xlat
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
lock
jle
jns
jle
fcoms
mov
push
adc
xchg
jns
fsubs
sbb
or
daa
ljmp
mov
sub
ljmp
dec
in
xchg
fisubrl
mov
push
cli
dec
ljmp
mov
cmp
inc
cmp
leave
jl
adc
pop
call
rcrl
andl
cltd
push
xchg
dec
pop
pushl
ljmp
add
or
dec
dec
jge
jmp
sbb
cld
loope
mov
jbe
jns
add
popa
fistpll
sub
mov
sub
hlt
cld
dec
add
adc
push
imul
jbe
xor
jnp
dec
loope
lcall
js
aas
add
xor
sbb
leave
aaa
and
into
push
mulb
lods
push
shrb
lea
xor
imul
xlat
mov
xlat
ja
adc
jno
jns
rcrb
aam
mov
push
ficoml
or
pop
movsl
xor
pop
ljmp
outsb
mov
fwait
fwait
push
push
jle
sub
fs
dec
cld
leave
inc
push
adc
push
xlat
ret
in
add
sar
dec
aad
cltd
inc
popf
je
nop
inc
xor
jo
sar
bound
clc
push
push
fldcw
out
xchg
push
in
lods
sbb
mov
inc
int3
mov
popa
daa
inc
xchg
and
mov
notb
ja
jmp
stos
pop
push
pop
and
rcr
js
mov
lea
cmp
mov
mov
xor
jecxz
arpl
sub
push
push
cs
push
clc
dec
fdivrl
jge
dec
inc
sub
lods
leave
adc
sbb
iret
test
xor
ljmp
sbb
stc
clc
dec
mov
cli
iret
xor
lea
jmp
mov
daa
cwtl
xor
or
adc
loope
es
sbb
push
in
sub
cltd
daa
sbb
out
in
xlat
loopne,pt
out
mov
lret
int3
cmc
mov
mov
ret
xor
xor
sbb
push
xchg
cmp
sub
adc
daa
loopne
jns
mov
insb
xor
inc
daa
int3
lods
pop
jp
stos
xor
cld
pushf
clc
sub
add
mov
ljmp
shrl
adc
rorl
int
fistl
das
sbb
mov
mov
into
dec
loope
push
clc
sub
mov
out
int3
lds
repz
loope
push
pop
pop
mov
pop
stos
jb
sub
outsl
rcl
mov
jmp
mov
outsl
dec
and
icebp
pop
push
push
and
mov
loopne
lret
jl
cmp
inc
daa
sub
bound
pop
push
dec
mov
add
push
jp
jg
xor
addl
in
insb
mov
cmp
fstpl
cmpsb
hlt
in
xchg
ret
mov
test
xchg
cltd
subl
mov
cltd
addl
xor
dec
push
loopne
xchg
pop
js
and
lret
push
lock
pop
movsl
clc
ljmp
pusha
repnz
and
out
dec
pop
or
gs
mov
or
jbe
push
stos
mov
lahf
jl
push
nop
xor
inc
movsl
test
cmp
push
test
add
jmp
fadd
mov
ret
pop
jp
jne
lcall
or
es
ds
pop
push
sbb
xlat
push
int
pusha
pop
mov
clc
mov
scas
sti
xor
cmp
push
mov
mov
aaa
pushf
bound
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
jg
and
jle
and
in
inc
add
cmp
ja
cmp
dec
data16
jle
mov
push
fiadds
cmpb
sbb
adc
push
push
and
imul
and
roll
sbb
mov
jbe
dec
mov
shl
call
pop
jo
stos
test
jg
sub
mov
pop
xchg
scas
pop
jmp
xlat
and
fsubrp
daa
popa
pop
cmp
mov
sahf
test
fwait
ss
pop
cmp
jle
mov
or
xchg
in
xchg
sub
inc
ret
imul
xchg
jge
cmp
jbe
jmp
ds
inc
sbbl
les
cmp
sub
cmp
in
dec
lods
cmpsl
aam
testl
int
and
mov
test
nop
pop
sub
sbb
jbe
xor
mov
jne
popf
lret
push
stc
mov
xchg
mov
jne
mov
insl
subl
pop
mov
xor
xchg
cli
adc
mov
jp
enter
insl
jmp
or
add
mov
push
add
dec
loop
mov
cmp
pop
xchg
add
mov
stc
jo
in
lock
mov
fs
loopne
cwtl
push
nop
sbb
mov
test
rclb
and
mov
out
mov
pop
jmp
fcompl
or
mov
mov
push
call
test
loopne
or
mov
mov
push
pop
dec
jp
out
popf
add
add
scas
jle
and
test
cmp
add
mov
mov
pop
testl
pop
cmpsl
loopne
lods
stos
cmp
lods
cltd
gs
dec
sbb
in
imul
pop
lea
movsl
daa
scas
add
repz
lds
setnp
fldenv
and
addb
js
push
inc
rclb
push
iret
inc
jae
or
in
inc
loope,pn
xchg
mov
dec
aam
inc
or
popa
outsl
sar
in
add
mov
shll
pop
mov
iret
push
and
lahf
lret
lock
and
ja
stc
nop
in
xor
add
sbb
test
add
adc
cmp
nop
lahf
pop
lcall
stos
or
dec
pop
or
xchg
lahf
rorl
out
std
aaa
outsl
int3
mov
outsb
add
pop
xchg
inc
push
mov
outsb
xor
lret
sub
add
and
lods
sub
fs
ja
mov
pop
rclb
ljmp
out
mov
pop
insl
stc
pop
enter
pusha
jmp
movsl
fstpl
mov
int
aaa
mov
inc
pop
std
or
in
mov
pusha
jmp
std
iret
fiadds
insb
mov
hlt
sub
cmp
cld
test
inc
add
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
or
fistpl
jns
jle
sbb
cli
fwait
mov
pop
rorl
sub
or
dec
and
in
je
push
xlat
ret
dec
push
in
mov
xchg
push
pop
push
or
push
jnp
push
cmp
lahf
mov
subl
fistl
loop
adc
xor
push
push
int3
rclb
mov
lods
cmp
es
dec
xchg
jge
stos
or
fdivrp
jno
test
cmp
sbb
add
inc
add
outsb
mov
gs
lret
imul
scas
mulb
outsl
jne
fwait
paddsb
movsl
iret
adc
xchg
stc
or
push
push
adcl
std
icebp
pop
cmp
lahf
pop
in
decl
jns
cmpsb
test
es
add
lcall
call
adc
cmp
imul
jge
jno
shrl
mov
mov
mov
int3
fcoml
cmp
notb
lock
cs
test
lds
aam
push
lea
int
in
cmpsb
dec
xchg
push
cld
jp
add
movsb
mov
mov
jmp
out
mov
fildl
shll
imul
lds
mov
mov
sub
movl
loop
mov
cmp
int
sub
ja
adc
and
sbb
iret
movsb
arpl
in
hlt
lret
pop
sbb
rcll
mov
stos
cmpsb
mov
lods
movsb
jmp
push
mul
in
jg
shll
roll
imul
or
push
sub
mov
daa
dec
outsl
mov
jmp
popf
rcrl
add
pushf
shrb
push
rcll
push
pop
dec
dec
out
push
dec
aas
or
adc
into
lret
sbb
pop
dec
xor
pop
ja
fsubl
aas
jne
mov
sub
jp
push
inc
xchg
call
lret
mov
idiv
sbb
fmuls
movsb
jae
movsb
inc
je
pop
xchg
les
jmp
sub
aad
rcl
lret
jo
shr
and
push
or
fstpl
mov
lods
mov
cmp
sahf
add
insb
pushf
cmp
inc
js
in
insl
add
dec
pusha
xor
add
push
stos
lock
push
bound
das
inc
imul
ret
es
mov
int3
xchg
mov
sub
adc
repz
dec
mov
fstpt
push
xchg
sub
jbe
inc
lea
inc
xchg
lret
out
xor
shrb
jno
jp
subl
dec
movsl
sbb
jmp
push
dec
pop
or
add
jae
scas
repz
popa
pop
lret
dec
mov
jo
pop
out
xchg
sub
fwait
loopne
xor
push
repnz
roll
fstpt
add
lret
out
sbb
scas
mov
push
dec
jo
mov
xchg
sbb
repz
sahf
daa
push
or
fwait
push
out
jb
sub
pop
mov
mov
ds
mov
push
pop
sti
xor
mov
mov
mov
xchg
jmp
sahf
pop
add
rorb
sbb
dec
mov
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
fldenv
jle
jns
jle
xor
mov
adc
mov
jb
jnp
or
cmp
pop
sbb
imul
enter
sub
leave
je
mov
cld
mov
jl
sbb
cmp
test
fs
inc
inc
xchg
mov
push
scas
mov
clc
adc
pusha
pop
test
sub
bnd
div
aas
rclb
sarb
push
dec
mov
push
nop
fistps
add
xor
popf
int
sub
ljmp
add
popa
push
xor
mov
mov
cmc
lds
fmull
ss
enter
pop
popf
pop
aad
dec
cs
dec
mov
cmpsl
mov
adc
out
scas
stc
xchg
loop
sub
imul
mov
aas
jae
lahf
test
pusha
push
cmp
xchg
adc
jle
insb
mov
arpl
sub
mov
outsl
mov
lcall
mov
inc
lea
or
and
or
mov
outsb
xchg
fs
jecxz
pushf
enter
insl
xchg
sti
pop
add
mov
jg
xchg
push
lods
sbbb
repnz
push
jecxz
ljmp
icebp
or
push
dec
sti
push
mov
stc
xorl
xchg
scas
mov
xchg
iret
cwtl
jmp
je
lret
sbb
push
rcll
bound
fnstcw
les
xor
sub
or
jp
clc
mov
daa
sbb
pop
mov
lods
pop
add
ljmp
jne
sbb
adc
pop
mov
data16
push
inc
xchg
cmp
xchg
xchg
xorb
test
sub
mov
test
push
repz
div
out
dec
lea
int
inc
mov
or
fnstenv
jno
and
out
xchg
mulb
shlb
out
and
in
mov
and
mov
cmpl
cmp
mov
and
mov
pop
cltd
inc
xor
inc
xlat
add
inc
addr16
push
or
fcmovbe
std
add
xchg
add
arpl
dec
pop
mov
mov
jp
shll
mov
xor
mov
xchg
imul
ss
mov
sti
lret
jge
nop
xlat
inc
mov
jnp
jnp
sbb
rcr
adc
in
or
adc
pop
out
scas
xor
fs
cmp
popa
insb
mov
mov
insb
out
jecxz
clc
sbb
outsl
shl
dec
push
lds
jecxz
cltd
inc
and
sahf
mov
lret
fisttpl
cmc
clc
int3
add
lods
fidivrl
dec
add
xor
and
int3
std
xor
out
jbe
jns
or
fdivrs
xor
sub
bound
jp
xchg
xchg
int
mov
and
or
pop
sbb
push
pop
jmp
pop
dec
divl
popf
mov
ja
fstps
sbb
dec
adcl
mov
popa
push
add
adc
jecxz
push
fidivl
inc
sub
rcrb
xchg
inc
mov
add
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
pop
dec
inc
lcall
jle
xchg
cmpsb
or
inc
out
jbe
int3
insb
inc
bound
dec
cmpsb
inc
leave
mov
pop
dec
dec
push
and
lods
scas
into
push
xor
addr16
fmul
mov
push
push
iret
fistpll
push
push
jbe
sub
imul
xchg
xchg
xlat
fnstsw
xchg
clc
jns
xchg
sbb
fwait
stos
test
pop
xchg
lods
add
push
mov
outsb
pop
testl
loope
inc
xor
mov
mov
jno
gs
repnz
inc
sub
mov
iret
sub
lahf
clc
test
jecxz
or
inc
mov
xor
xchg
scas
out
push
aaa
cld
push
adc
lods
pop
data16
jmp
jbe
adc
fisttpll
xlat
loopne
jp
jno
and
push
jp
or
inc
popa
mov
ficoml
lock
add
insl
int3
ds
add
xchg
lods
add
es
jbe
int3
shll
inc
push
cmpsb
outsl
aam
cmp
aad
cmp
inc
mov
sub
mov
add
lret
rorb
insl
icebp
xchg
adc
aas
stos
xchg
xchg
mov
jbe
xlat
jmp
fisubrl
cmp
enter
jmp
mov
mov
bound
or
pop
nop
adc
insb
ret
jb
jmp
adc
shlb
out
xor
xchg
and
imul
fadds
aad
ja
push
pop
aad
or
push
add
adcl
jb
in
push
test
lea
sbb
xchg
cmpb
shll
test
clc
push
push
ror
call
sbb
inc
mov
xchg
push
fnsave
icebp
in
adc
mov
ss
scas
sbb
push
mov
xchg
add
push
sub
repz
xchg
leave
cmpsl
dec
or
in
fcomi
xlat
ja
mov
clc
push
dec
adc
scas
popf
or
sbb
push
xlat
bound
cltd
pop
in
je
or
mov
lahf
inc
cmp
xor
sbbl
lods
inc
mov
popa
sbb
jg
cmpsb
aas
rolb
or
ret
cltd
out
fistpl
mov
jmp
cltd
fldl
xor
out
bound
xor
inc
sbbb
mov
notl
adc
in
lret
int
stc
lds
dec
popa
inc
lods
xchg
push
push
mov
push
out
js
stc
test
stos
push
cmpsw
dec
or
and
mov
movsl
enter
test
xor
adc
and
fstpt
cmp
inc
sub
xor
dec
inc
mov
out
mov
out
lret
mov
mov
xchg
loop
shl
iret
je
lock
dec
rorb
and
mov
xor
leave
nop
int3
xchg
adc
inc
movsl
lods
out
or
imul
call
lods
movsl
lahf
mov
mov
fsts
fidivrs
xchg
shrl
inc
cld
xor
pop
jmp
push
clc
clc
mov
test
adc
inc
jle
hlt
jns
jle
or
mov
fnsave
push
xchg
mov
pop
scas
jno
testb
fsts
push
jg
movsb
sub
lds
dec
pop
sbb
cmpsl
int3
mov
dec
lock
nop
sub
push
cmp
sbb
and
les
fwait
je
adc
jns
mov
nop
fucomip
pop
lret
sub
int
in
aas
test
loop,pt
out
push
cli
mov
movsb
mov
andb
mov
add
sbb
inc
and
or
pop
or
sbb
int
into
xor
insl
pusha
aad
stc
add
test
rorb
or
adc
cmpsl
out
sub
cmp
mov
sub
add
mov
aaa
adc
cmpsl
cmp
aam
cmc
ljmp
xchg
pop
push
pop
ljmp
fwait
lods
xchg
adc
inc
xchg
mov
sbb
xor
jno
adc
mov
jb
stc
mov
dec
ja
inc
clc
enter
mov
sub
mov
adc
dec
push
mov
movsb
xchg
pop
jle
hlt
sub
mov
xchg
imul
dec
cld
stos
inc
fbld
sbb
sarb
inc
lcall
jecxz
rcll
inc
mov
sub
shrl
sub
mov
mov
insl
inc
aas
cmp
push
bsr
fsubrs
sbb
insl
sub
xor
decb
test
add
lds
lods
jbe
jp
push
pop
adc
movsl
dec
push
mov
ljmp
pop
fwait
push
ret
hlt
loop
shll
pop
dec
dec
int
xchg
xor
xor
mov
adc
imul
lds
mov
push
dec
fcoml
inc
ds
and
push
pusha
into
imul
or
stos
fiadds
jp
and
cmpsl
ret
xor
faddl
adc
test
ret
fistpl
imul
dec
sbb
pop
jg
add
cli
subl
sub
sarl
add
dec
or
mov
cmp
jge
shlb
add
jno
ljmp
out
push
adc
pop
shl
icebp
iret
xchg
test
add
in
pop
fisttpl
mov
cmpb
or
aaa
outsb
imul
ficoml
cli
or
js
popa
jle
outsb
cmp
neg
int3
lret
pushf
push
add
fs
sub
mov
stos
pop
rorl
mov
mov
mov
aam
mov
xchg
inc
cmp
inc
imul
scas
pop
fdivrs
mov
dec
loopne
je
fstps
push
fldl
sbb
dec
into
mov
dec
loope
cmp
mul
sarl
outsl
and
sbb
vmaxsd
and
xchg
add
mov
and
cmp
cmpl
loopne
mov
test
mov
cltd
sahf
jg
cwtl
and
inc
dec
sub
imul
test
xchg
clc
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
pushf
cmpb
jle
pushf
jg
jle
cs
push
cmc
xor
out
divl
sbb
out
rcll
mov
dec
lods
xor
ja
les
scas
lods
and
xchg
std
int
mov
icebp
and
shrb
xchg
idivb
mov
in
cmp
insb
mov
test
lods
push
cmp
fdivrs
cli
fldcw
mov
fdivr
test
and
ss
sbb
sub
dec
mov
mov
test
sarl
xchg
loop
rcll
mov
insl
pop
lret
jg
movsb
and
mov
cmpsl
inc
lods
lcall
cmp
dec
aaa
aaa
scas
sub
pop
scas
leave
mov
fcmovb
adc
mov
mov
mov
aam
xor
inc
push
jecxz
data16
mov
loop
push
inc
push
pusha
sar
mov
inc
inc
js
test
push
dec
push
mov
fcompl
lret
mov
shl
rolb
xchg
adc
push
int3
fmull
mov
xchg
insb
sub
xor
and
bound
push
inc
or
xchg
pop
aaa
cmp
iret
xor
mov
mov
es
add
lds
jne
in
mov
xor
jecxz
daa
mov
adc
lods
pushl
xlat
mov
sbb
rorb
sahf
mov
movl
jb
add
mov
add
cmc
mov
enter
cmpsl
mov
add
notl
adc
jle
pushf
jg
jle
add
add
adc
fldt
push
aas
push
bound
out
nop
leave
bound
lods
nop
xor
dec
popa
sbb
scas
imul
rorl
jo
repnz
pop
int3
mov
mov
mov
movsb
dec
lret
xlat
mov
jno
in
out
and
test
aaa
in
fs
outsl
mov
aas
jno
xchg
lock
or
shrb
std
inc
dec
mov
fimull
xlat
cli
mov
push
lret
aaa
pop
iret
fisubrl
test
sbb
inc
add
lcall
mov
pmaxsw
sub
cwtl
stc
das
loopne
incb
jle
adc
adc
mov
mov
mov
sbb
nop
add
orb
inc
xchg
test
insl
and
std
out
mov
pusha
dec
jnp
movsb
aad
sbb
std
mov
js
insl
mov
jge
jecxz
dec
push
stos
insl
push
or
jne
ja
or
ret
push
mov
lock
pop
or
rcr
dec
scas
and
outsl
fstpl
xlat
pop
push
inc
cs
cli
sub
sbb
pop
sahf
add
aas
andb
dec
test
fs
push
into
jae
pop
scas
prefetcht2
daa
lods
shrl
add
fdivl
mov
or
mov
jge
jno
test
mov
fidivrl
jle
add
push
hlt
push
add
cmp
add
or
mull
sbb
sarl
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
pop
shll
stos
inc
jle
popf
js
jle
lods
mov
sub
stc
push
add
je
mov
push
out
das
jmp
adc
mov
pop
sub
inc
and
in
jae
cwtl
lds
sbb
dec
mov
imul
mov
testb
mov
loop
or
or
sahf
mov
cmpsl
lods
mov
mov
and
jbe
and
out
xchg
fs
cli
sbb
dec
or
ljmp
testl
mov
add
pop
enter
sbb
inc
aad
cmpsb
pop
or
stos
jle
hlt
outsb
xchg
add
adc
sbb
mov
arpl
cmp
test
icebp
dec
outsb
inc
outsb
pop
inc
add
sub
cmc
sahf
jae
popa
pop
sbb
inc
dec
or
bound
and
sbb
dec
xchg
dec
lret
fimull
mov
decl
cmc
xor
or
push
cmp
inc
out
bound
inc
in
aaa
fildll
in
mov
jns
dec
outsb
mov
int3
mov
fbld
stc
das
mov
pop
add
jae
mov
xchg
shrb
dec
mov
mov
fisttpl
jg
insb
sti
mov
lock
jnp
push
fcompl
arpl
repz
bnd
cmp
dec
fs
mov
jns
stos
popa
cs
inc
les
sbb
cmp
popf
sahf
out
pop
imul
jg
sbb
push
or
stos
out
cmpl
xlat
mov
mov
push
test
insl
adc
inc
sbb
fmulp
les
jns
gs
insb
aam
fs
test
orl
xor
xchg
mov
div
jge
add
mov
sub
sahf
mov
and
fadd
lods
mov
mov
mov
lock
fiaddl
xor
or
es
cmc
das
pushf
jns
in
fbld
push
fidivs
add
loope
pop
dec
jmp
jnp
jne
mov
stc
push
push
fsubrl
push
ja
jge
push
sbb
push
adc
lahf
cmp
pop
lcall
daa
push
jb
or
imul
push
in
xor
inc
cmp
cmp
sbb
mov
push
lods
jns
aam
arpl
loop
loope
icebp
pop
mov
test
mov
inc
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
jg
pushl
jbe
dec
xchg
neg
insl
fldenv
sub
jmp
dec
pop
iret
mov
loop
sbb
cmpsb
ret
nop
inc
inc
fwait
jl
and
stc
mov
adc
inc
mov
cli
in
pop
and
sarl
inc
jbe
or
ds
adc
shll
popf
mov
ret
mov
fstl
mov
mov
jl
mov
add
add
mov
pushw
insb
mov
popa
cs
ret
mov
mov
cmp
insl
pop
mov
inc
pop
cmc
push
cmpsb
out
inc
push
lret
xchg
test
dec
mov
das
xor
pushf
in
pop
pop
inc
cmc
mov
xlat
cmpsb
jp
std
daa
cs
push
and
xchg
and
cmp
rcrw
stos
xor
int3
adc
stc
xchg
aad
cwtl
hlt
and
xchg
adc
mov
jnp
push
dec
adc
mov
cmp
pop
jns
rclb
lret
ficomps
xlat
es
jbe
cltd
aad
jmp
xor
imul
loop
loopne
scas
inc
dec
cmpsl
cmp
mov
or
imul
shlb
and
sub
mov
push
mov
test
loope
les
push
and
sub
test
jns
cmpsb
movsl
or
ret
arpl
xor
lds
rclb
decb
jae
test
ds
cmc
jg
xchg
cwtl
icebp
push
xor
nop
aam
ljmp
outsb
add
jo
jg
incl
inc
mov
pop
lret
cwtl
or
iret
lods
mov
mov
pop
pop
out
jno
aaa
sub
inc
mov
imul
mov
cmp
rorl
jbe
inc
mov
mov
jb
push
mov
pusha
fwait
pop
mov
inc
push
ds
dec
mov
repz
cmc
and
mov
push
mov
dec
mov
jl
outsl
dec
cmp
adcl
jno
sub
xchg
pop
jae
je
cmc
sti
sti
cwtl
push
mov
dec
pop
sti
and
out
out
or
mov
or
js
daa
and
jecxz
loope
xor
dec
fisttpl
sub
inc
and
repz
js
flds
dec
lods
push
lods
clc
pushf
fldl
shll
decl
jne
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
mov
push
js
jle
pushf
in
jle
lcall
cld
movsl
xor
leave
rcr
xor
es
adc
jbe
mov
outsl
sub
sti
sub
int3
rclb
ror
jno
mov
cmpsl
pushf
mov
cmpsb
dec
dec
jns
pop
lcall
mov
insb
mov
dec
in
pop
nopl
mov
es
imul
or
or
rclb
negl
icebp
or
xchg
or
movsb
cmp
inc
int3
nop
aas
daa
push
mov
ja
testb
scas
in
push
enter
xchg
xchg
jo
cmpl
pop
movsl
lea
cmp
push
lods
shll
jp
or
fistps
sbb
jae
adc
rolb
mov
jg
ficomps
xchg
outsb
xchg
push
and
cmp
mov
pushf
push
test
add
mov
mov
aam
add
push
aaa
mov
sbb
add
xor
mov
mov
test
call
test
pop
aaa
int
mov
mov
in
and
and
iret
or
les
data16
scas
inc
adcl
enter
sahf
imul
outsb
das
xlat
mov
shll
push
or
push
pop
sbb
addr16
ljmp
jge
push
add
insl
mov
dec
cmc
imul
iret
jle
and
adc
ds
jnp
pop
in
mov
js
shll
push
pusha
mov
or
cmc
mov
pop
out
stos
pop
pop
fcomip
mov
xorb
cli
and
mov
pushf
sub
sahf
dec
push
mov
clc
xlat
out
stos
loop
loopne
icebp
xlat
jmp
inc
or
xor
push
lahf
in
add
repz
or
mov
out
repnz
scas
sbb
sub
ret
and
out
push
cli
mov
fxch
push
sub
test
insb
ficoml
and
cs
pop
xor
add
js
sbb
cwtl
add
push
cmp
lds
push
fstpl
push
xchg
inc
mov
pop
mov
pop
mov
mov
sbb
pop
jl
inc
jp
jne
mov
add
aas
xchg
sub
aas
cmp
stos
subb
roll
lcall
fdiv
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
lret
pop
jg
jle
lds
es
xchg
mov
es
popa
dec
jecxz
jno
mov
call
movsl
sub
push
movsl
and
sub
cwtl
fmuls
xchg
jb
pop
es
dec
ljmp
js
pop
fldcw
lcall
or
ret
mov
xor
mov
push
pop
and
cli
mov
lods
pushf
subl
sub
call
cs
icebp
or
icebp
xlat
cmp
cmp
into
xchg
xor
negl
and
push
fstps
testl
jge
jl
push
inc
adc
dec
or
fnsave
sub
push
test
scas
inc
ret
testl
jmp
sub
jecxz
lds
add
jne
movsb
jg
dec
pop
jmp
pop
cmp
js
rorl
stos
inc
sbb
in
or
imul
xchg
pushl
rcl
aad
in
cld
orl
insl
add
in
add
jb
jo
push
sarb
inc
and
add
push
shrb
xchg
jne
mov
and
push
push
or
sub
roll
xchg
dec
stc
aaa
sub
fisubrl
mov
add
imul
stc
clc
mov
ret
xchg
mov
inc
inc
out
add
insb
cmovp
lret
dec
xor
lahf
inc
daa
pusha
jle
adc
loopne
add
xor
imul
das
arpl
inc
inc
ja
incl
stc
adc
inc
sub
loopne
scas
cmpsb
ljmp
add
lahf
data16
test
xchg
repz
dec
inc
loopne
gs
or
gs
daa
stc
sar
jae
pop
push
mov
add
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
mov
fidivs
pop
jg
jle
std
lock
adc
addb
flds
cld
subb
mov
lcall
mov
mov
push
enter
mov
inc
xor
addr16
cmp
xchg
mov
das
pop
mov
popf
pop
sub
jle
cmp
xor
inc
mov
and
push
xor
or
xchg
ret
fwait
push
test
sarb
lods
xchg
mov
pop
dec
cmp
shlb
fnstenv
jg
lcall
sub
xor
xchg
mov
and
divb
mulb
addl
adc
mov
cmpl
test
mov
cmpsl
push
jns
push
and
inc
test
scas
and
imul
and
pop
mov
sub
mov
fmull
ret
dec
xor
push
push
xchg
aaa
bsr
pop
aad
inc
pop
push
test
xor
pop
push
jae
mov
divb
mov
add
cmp
pop
mov
xor
rol
std
push
push
mov
adc
das
dec
call
ret
xchg
dec
ja
or
stc
or
add
lret
lcall
insb
mov
lret
ficoml
out
inc
mov
nop
cmp
dec
pop
ret
xor
and
xchg
xchg
mov
dec
jge
mov
cs
push
cmp
push
testb
cmp
mov
es
icebp
push
sbb
cs
in
adc
repz
jae
fcmovb
push
inc
cmpsl
cmp
jmp
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
add
inc
inc
aad
jle
pop
jg
jle
mov
sbb
push
in
jne
lret
inc
ret
sub
xlat
sub
jmp
mov
les
add
div
mov
rcl
inc
repz
push
push
cmp
aam
mov
aad
lret
jmp
or
ds
cwtl
or
inc
jb
mov
dec
mov
adc
mov
lret
es
add
mov
das
mov
lock
in
add
vmovaps
mov
aaa
mov
or
aas
jo
push
or
pop
repnz
xchg
or
cmc
mov
inc
mov
push
mov
insl
push
jg
ss
mov
lret
inc
jo
in
mov
pop
dec
adc
sbbb
sbbl
fisubrs
rcrb
ret
sbb
push
sahf
daa
xor
clc
xchg
jl
arpl
push
push
adcl
mov
xchg
cltd
cmp
jno
int3
mov
mov
aas
idiv
jne
mov
push
pop
push
jg
jo
outsl
dec
mov
cmp
popf
cmp
sub
xchg
es
es
sbb
adc
ljmp
cwtl
and
pushf
sahf
dec
add
xchg
lods
ret
sbb
push
stos
mov
lods
lret
pusha
xor
andb
dec
or
cmpsl
cs
adcb
out
aas
push
pop
inc
xchg
xchg
lret
and
inc
push
jmp
push
test
fidivl
jg
sub
mov
jae
jnp
ljmp
leavew
pop
out
or
int
lods
pop
testl
dec
cmp
cmp
fcoml
cmc
aas
outsl
popf
mov
lods
sub
pop
das
jns
loope
jbe
shll
lret
push
cmp
fmulp
adc
dec
loopne
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
notl
jb
xor
jle
jg
jle
xor
jg
pop
test
inc
sbb
negl
in
in
jbe
rclb
jge
in
repnz
mov
push
dec
jo
data16
scas
cmp
pop
lahf
outsl
mov
dec
cmp
lods
ja
sbb
and
les
sbb
sbb
mov
adc
jno
or
das
lods
pop
push
mov
movsb
call
xchg
mov
mov
mov
in
xor
nop
sbb
mov
mov
xorl
xchg
mov
sub
popa
mov
loopne
mov
sbb
adc
loopne
xor
nop
ficoms
ret
in
out
and
out
jbe
jl
lds
mov
roll
scas
int3
sbb
pushf
sti
sahf
cli
mov
repnz
xchg
call
xlat
test
popl
popa
and
pshufw
mov
mov
and
movsb
sbb
fdivl
dec
mov
pop
in
fimull
testb
and
dec
dec
addb
aam
pop
sbb
fnsave
xor
push
jb
mov
movsl
inc
inc
xchg
or
dec
inc
notb
fdivrl
or
xor
testb
data16
push
xor
lds
cmp
dec
data16
mov
add
les
jne
adc
shrl
xlat
lods
or
and
or
scas
lds
sbb
cmpsl
movsb
push
popa
pop
icebp
sbb
pop
add
push
jnp
shlb
inc
add
fucomp
mov
dec
es
jmp
lret
lret
mov
lret
ficoml
gs
mov
mov
mov
jmp
cmp
jne
xchg
mov
sbb
stc
nop
adc
jle
jg
jle
pop
ljmp
jecxz
mov
pop
or
dec
adc
inc
push
subb
cmp
insb
push
ljmp
or
add
jle
sub
pop
test
loopne
sub
lods
mov
outsb
xchg
jmp
stos
fwait
xor
pop
dec
add
sarl
mov
jnp
sbb
mov
xchg
jg
sbb
int
pop
repz
adc
mov
ret
clc
sub
insb
aaa
es
push
inc
cmp
push
jg
sbb
mov
outsl
cmc
mov
mov
std
add
cmpsb
push
mov
cmc
rcl
lods
mov
fcomps
lcall
xor
mov
and
ret
mov
imul
int
out
jb
js
mov
mov
and
aas
mov
jne
out
fs
lret
aaa
pop
inc
dec
test
dec
push
aad
sub
gs
jg
xor
pop
lahf
jbe
addr16
or
adc
or
aaa
xchg
sub
sti
cmp
outsb
pop
jo
pop
into
mov
jb
jmp
sub
test
mov
and
incb
out
and
push
in
cmp
aaa
push
sti
outsl
or
int3
cmp
sbb
jno
xor
ret
mov
push
xor
xchg
mov
aam
fnstenv
inc
rorb
enter
mov
push
push
cltd
imul
in
mov
repnz
ret
adc
ret
scas
sbb
nop
push
or
sub
outsl
ss
out
xor
add
fisttps
test
movsl
add
push
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
fists
pop
jg
jle
adc
sarb
cmpsl
jne
shrb
dec
into
pop
pop
int3
jno
push
ds
sbb
xchg
scas
ror
clc
sahf
mov
xchg
push
mov
dec
and
call
push
pushf
lahf
push
pop
aas
imul
call
in
jg
and
in
rorb
imulb
sti
fs
xlat
ret
out
mov
jmp
cmp
push
dec
out
stos
dec
in
sbb
and
pop
jns
sbb
test
rolb
xor
adc
int
mov
mov
or
jns
mov
les
lock
or
aas
pop
clc
add
pop
sbb
mov
insl
push
ret
es
inc
fimull
cltd
aam
test
testl
das
pop
push
cmp
jg
cld
jmp
mov
pushf
fmull
imul
daa
add
pop
mov
jl
scas
sahf
add
or
or
cli
test
pop
outsl
inc
push
stos
ja
xchg
leave
xchg
or
lods
xor
aas
inc
scas
mov
clc
jae
rcrl
add
sar
aad
in
shlb
pop
outsb
arpl
sub
xor
hlt
mov
sub
and
dec
dec
out
call
stos
testl
loop
xor
and
dec
mov
pop
or
cltd
add
jecxz
insb
pop
pusha
daa
mov
sub
or
aas
push
mov
dec
pop
clc
ret
nop
insb
fnstcw
cmpsb
jmp
sbb
mov
enter
mov
lret
jae
jmp
mov
fst
sub
jl
inc
lods
sub
inc
or
in
rorb
lret
add
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
inc
lcall
pop
jg
jle
pop
dec
xchg
pop
daa
lret
inc
insb
movsb
push
sbb
push
sbb
jnp
clc
push
dec
cmc
xchg
jecxz
or
dec
mov
jge
cwtl
add
ret
leave
repz
pop
xchg
or
fldenv
pop
in
mov
mov
dec
or
mov
es
mov
clc
iret
cmpsb
cmp
jns
jnp
outsl
fsubrs
fnstenv
insb
jl
dec
les
cltd
fmull
out
mov
push
sub
jl
inc
jnp
fisubrl
adc
cli
push
cmp
aad
rolb
jg
ss
hlt
mov
shl
push
sub
shrb
repz
xchg
jnp
and
fnstcw
push
jecxz
aam
push
fxtract
es
cmp
xor
sahf
lret
sub
lret
jg
mov
cmp
cmpsb
mov
jecxz
cmp
cs
in
dec
fwait
repz
jbe
icebp
or
mov
xlat
out
lcall
mov
inc
pop
ja
pop
lds
cmpsl
push
icebp
push
mov
sub
jge
inc
test
dec
jge
cs
add
mov
jl
pushf
xchg
lcall
stos
jb
push
and
sahf
sbb
mov
les
imul
jae
sub
mov
inc
push
aaa
mov
rcll
fsubrs
xchg
sbb
roll
stos
dec
sub
cmpl
jge
dec
sbb
cmpsb
and
inc
xor
div
fstpl
xchg
push
fs
dec
fimull
ror
jnp
jle
nop
dec
mov
pusha
call
inc
mov
mov
fucom
mov
lods
push
ds
jg
xor
aad
mov
pop
ss
mov
add
add
cmp
cltd
int
jno
ja
loope
fiadds
pop
inc
pop
jle
pop
jg
jle
or
dec
push
adc
int
lea
aad
ss
pop
insl
stc
mov
xchg
inc
sbb
mov
out
out
mov
push
rcr
sub
xchg
jb
mov
add
mov
sti
mov
fwait
imul
out
ret
jle
mov
repnz
mov
xor
sbbl
int
xchg
pop
ljmp
push
push
ds
or
push
repz
fcmovnbe
mov
rol
lcall
stos
lahf
and
andl
ljmp
test
jnp
pop
mov
les
sbbb
mov
and
mov
push
adc
lods
jo
push
pop
aam
inc
mov
shll
inc
mov
les
push
jo
mov
push
push
sub
fs
push
mov
adc
dec
mov
xor
jmp
sub
inc
daa
loopne
stos
in
mov
jle
add
jge
jecxz
out
or
in
pop
repnz
in
insb
es
sbb
lret
stos
cld
xchg
mov
jno
cmp
mov
adc
mov
push
push
fnstenv
mov
clc
push
inc
pop
jns
das
arpl
pop
ror
dec
loop
enter
lret
dec
out
mov
pop
std
rcl
pop
sbb
sub
arpl
mov
dec
jecxz
mov
push
xor
pop
push
mov
inc
jne
divb
xor
mov
in
ljmp
fstpl
xor
pop
dec
sbb
xor
std
das
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fsubs
inc
cmpsl
pop
jle
pop
jg
jle
cmp
leave
aaa
add
adc
mov
aam
test
pop
aaa
cmp
js
int
or
das
lods
sub
sub
jge
mul
jmp
mov
xor
jns
lcall
insl
cltd
das
xchg
imul
aas
pop
fidivs
adc
sub
and
mov
jg
iret
mov
fwait
pop
xor
mov
inc
inc
mov
lock
pushf
aas
inc
enter
arpl
lcall
in
ljmp
gs
jp
add
jb
jmp
loopne
mov
xchg
sub
jle
prefetcht0
aad
das
imul
aaa
sub
xor
je
jae
dec
mov
cli
jp
xor
out
xor
bound
pop
fnstenv
imul
mov
jo
jecxz
loope
fsubs
xchg
mov
pop
shlb
ret
jp
dec
mov
fs
enter
sti
sbb
pop
js
adc
pop
out
mov
inc
jge
xor
mov
xor
push
test
nop
rcl
daa
xor
lds
icebp
and
or
stos
cmp
daa
add
mov
mov
push
mov
jmp
jno
movsb
rcl
test
mov
xchg
test
das
sbb
mov
out
hlt
shll
pushf
stos
xchg
push
cmp
bound
push
sete
ret
mull
in
cmp
imul
xchg
int
icebp
inc
fcompl
negl
test
stos
popa
sub
xor
push
push
mov
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fcomps
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
in
add
add
add
jne
clc
jo
int
mov
cli
xchg
outsl
mov
gs
leave
mov
ss
std
lds
push
fbld
lret
mov
mov
add
fsub
mov
or
cmpsb
inc
lods
mov
adc
int
mov
pause
call
or
add
lret
jge
ffreep
nop
sahf
push
mov
mov
repz
mov
enter
movsl
jecxz
leave
mov
ljmp
sbb
sub
mov
lahf
jmp
imul
push
mov
and
cmc
divb
mov
push
clc
or
out
xor
sub
push
pop
mov
adc
les
inc
mov
fst
push
and
in
adc
and
mov
in
jge
cmpsl
push
jb
insb
push
jmp
add
push
pusha
in
jle
cs
pop
ret
lds
out
add
add
add
in
mov
cwtl
and
andl
pop
or
jae
add
mov
shlb
xchg
dec
lahf
jno
jo
insb
cmp
std
test
int
bound
nop
cld
jp
outsl
outsb
xor
jle
aam
scas
js
cwtl
movd
pusha
adc
stc
lods
and
lahf
and
shrl
in
or
js
inc
cs
push
cmpsl
inc
push
cld
dec
add
call
ret
mov
cmc
xor
pop
dec
mov
out
mov
and
and
mov
cmp
sub
cmp
jl
adc
pop
pop
daa
cmp
push
jle
pop
loop
sar
pop
iret
cmp
hlt
mov
sbb
mov
dec
sbb
mov
push
cmp
and
scas
rclb
pop
dec
add
add
add
adc
pop
js
add
testb
add
cs
mov
jno
scas
xchg
sbb
mov
push
enter
sbb
jp
inc
mov
or
cmpsl
and
xorl
pop
pop
pushl
push
sbb
cld
repz
sub
lods
int3
pushf
mov
mov
push
add
jno
mov
adc
cmp
orl
xor
pop
xor
push
pop
mov
popf
sbb
mov
cs
into
pop
int
lods
in
sub
pop
mov
in
and
pushf
imull
movsb
mov
iret
sbb
scas
add
lods
push
lods
push
xor
pushf
add
sahf
adc
popf
nop
and
dec
bound
loope
push
xor
outsl
insl
std
pop
push
xorl
dec
lods
daa
dec
xchg
push
pop
inc
pop
sub
or
add
add
subl
stos
dec
out
loope
inc
aam
call
add
fnstsw
fwait
pop
sbb
pusha
adc
shlb
cmpb
add
insl
add
das
dec
lods
and
rcr
mov
scas
push
repz
sbb
scas
mov
addr16
mov
jo
mov
mov
test
jg
and
or
mov
mov
lea
push
jmp
in
subb
mov
loopne
mov
shl
addr16
add
cmp
je
jne
icebp
scas
jo
pop
inc
loopne
vsubpd
cwtl
setle
dec
jge
je
call
pop
mov
daa
imul
ljmp
xchg
mov
and
mov
push
mov
pop
and
sbb
int3
je
sbb
pop
stos
mov
xchg
inc
inc
push
scas
enter
pop
dec
addr16
add
add
pop
jae
or
leave
bnd
mov
jmp
add
fnsave
out
cld
jns
adc
leave
sarl
push
mov
dec
arpl
idivl
iret
out
ljmp
push
cmp
adc
iret
push
xchg
out
fisubs
mov
mov
lods
cmp
mov
mov
mov
in
out
push
dec
das
ds
lods
pop
mov
cltd
add
or
add
outsb
sbb
lods
or
ja
adc
add
lahf
insl
push
adc
movl
and
fcomi
orl
dec
push
add
cmc
mov
adc
ficoml
loopne
lret
dec
in
lods
andb
ss
out
mov
lcall
push
and
or
lock
pop
push
sub
aad
fisttpl
sbb
cld
dec
scas
mov
sti
mov
jg
cmc
insl
cmc
out
lcall
sub
pop
xchg
xchg
ret
add
testb
add
inc
push
fwait
shrl
or
push
mov
pop
out
testb
cwtl
sub
push
cmp
lds
inc
js
sbb
scas
fiadds
mov
sub
lcall
pop
das
enter
faddl
or
sub
push
mov
in
test
jmp
fs
imul
repz
fistps
aas
jmp
shrl
arpl
sub
lcall
es
pop
int
notb
imul
inc
cmpb
jo
in
mov
das
out
outsl
js
pop
outsl
adc
pop
pop
popf
cli
jmp
mov
insl
cmovns
ljmp
clc
jg
cld
bound
add
mov
xor
dec
movsl
mov
mov
ret
in
aas
and
push
ret
pushf
pusha
mov
add
add
add
outsl
jle
dec
xchg
call
xlat
push
jmp
add
add
add
mov
ljmp
std
imul
push
jp
dec
xor
mov
mov
dec
dec
dec
push
popa
popa
jno
cmc
or
ljmp
lret
mov
jbe
cmp
lahf
sbb
adc
lcall
pop
cmp
or
ret
ds
fistpll
mov
mov
cmp
jg
sbb
in
sahf
dec
ja
cmp
jns
dec
xchg
int
mov
repnz
xorb
daa
mov
aaa
cmp
data16
pop
jl
dec
rcrl
mov
ja
popa
dec
inc
outsb
xchg
cmc
pop
ds
push
stos
pop
and
fsubrs
pop
push
dec
push
lret
cmp
cmp
leave
outsl
xor
mov
mov
mov
and
mov
inc
sbbb
cs
bound
add
add
add
jle
and
scas
sti
jle
inc
sbb
add
add
testb
add
or
cwtl
test
fnsave
xor
jne
scas
mov
jnp
fldl
dec
jns
xor
adcl
mov
ja
subb
cwtl
mov
popf
mov
xchg
inc
filds
push
mov
test
in
dec
sbb
fnstenv
or
inc
sub
jo
and
popf
fs
fs
mov
jmp
hlt
pop
fs
lret
iret
negb
fs
jge
cmpsb
popl
cmp
dec
adc
pop
nop
mov
adc
mov
fwait
push
mov
mov
mov
push
mov
mov
jno
cltd
xor
cltd
fstps
dec
cli
scas
add
lcall
fcmove
mov
cld
and
cs
lcall
push
xor
add
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
lock
test
add
add
add
jno
cmpsl
mov
sub
jmp
add
mov
jp
sub
pop
mov
test
incb
jo
or
cld
xchg
cwtl
cld
lret
mov
out
mov
add
testl
cmp
clc
xor
push
push
and
out
adcl
call
scas
pop
add
cs
mov
aam
mov
push
mov
jp
or
xchg
push
sbb
insb
jno
loope
test
insb
cmc
pop
jmp
push
shrb
inc
sub
cli
lea
call
repnz
sub
mov
and
cltd
fisubs
xchg
adc
mov
test
jp
rcl
out
push
cmp
cmp
cmc
pop
inc
hlt
popa
or
push
push
cltd
ficomps
adc
lock
cltd
xchg
fiaddl
add
push
jl
jle
insb
pop
decl
sub
stc
icebp
xor
add
testb
add
pop
arpl
xchg
jge
cmp
jp
dec
arpl
fsubrl
dec
ja
jg
jbe
or
mov
sbb
mov
lods
test
push
pushf
ret
mov
iret
xchg
cmc
cs
push
scas
mov
jl
mov
out
jns
jb
xchg
inc
dec
sbb
sti
loop
shll
popa
cmp
sti
dec
aad
sub
lods
push
jmp
cmp
mov
and
dec
push
data16
mov
lahf
cli
dec
inc
fcmovnu
pop
xor
out
sub
sahf
push
pusha
mov
sub
mov
jo
lock
movsl
das
pop
xchg
jecxz
inc
jno
cltd
loop
sub
lods
adc
jo,pt
std
arpl
jecxz
ja
push
cwtd
jnp
hlt
sbb
cmp
les
pop
cmp
test
jns
addr16
sub
cli
push
mov
mov
jge
jae
mov
add
fwait
mov
pop
ljmp
sub
add
testb
add
mov
sti
cmp
ds
aaa
pop
xor
lods
sarl
xchg
dec
and
bnd
sti
lret
jg
sbb
lret
aaa
into
sarb
jle
mov
addr16
mov
jb
add
lea
sub
pop
jle
out
add
sub
stos
or
repnz
mov
xchg
lods
xor
inc
pminub
ficoms
cmp
mov
test
jo
xchg
movsl
loopne
sarb
popa
jbe
inc
fcomps
sbb
inc
mov
rorl
or
mov
or
pop
xor
push
sub
sti
hlt
xor
and
mov
jno
jecxz
loop
inc
adc
xor
movsl
mov
jge
stos
fisubs
mov
aam
rorb
cs
cmp
sbb
mov
push
idivl
jp
mov
roll
aaa
data16
jne
mov
gs
mov
out
lock
testb
add
addb
mov
movsl
mov
xor
insb
cmp
mov
outsl
or
mov
divl
pop
or
and
jecxz
pop
push
out
stc
clc
mov
mov
aad
decb
pop
call
hlt
stc
jnp
imul
and
or
sbb
jne
cwtl
jnp
jb
jne
xor
mov
mov
push
imull
shlb
ret
add
lods
icebp
insl
adcb
out
sub
inc
outsl
out
mov
mov
outsl
or
inc
mov
jmp
cmp
xor
call
lea
gs
pop
imul
pop
out
sub
mov
xor
les
mulb
dec
and
pop
push
ret
inc
dec
cltd
fsubl
mov
push
add
jnp
add
jnp
sti
xchg
rol
imul
aas
adc
add
testb
add
ret
sub
pop
mov
enter
mov
push
jnp
lret
roll
push
not
sbb
mov
inc
dec
sbb
pop
repnz
add
popa
inc
jle
jne
adc
ja
jg
lock
clc
cltd
fisttps
enter
mov
mov
xchg
stos
ja
aaa
mov
roll
mov
and
cli
adc
insl
push
inc
fistl
pop
inc
jmp
loop
movsl
fldt
jge
fidivrl
call
xchg
jno
repz
testl
aam
adc
adc
icebp
stos
sahf
cltd
push
les
push
mov
mov
sub
pop
rcrl
and
cltd
hlt
mov
xor
aaa
lods
enter
stos
insl
call
rcrl
mov
jg
lret
ljmp
arpl
pop
jbe
das
or
add
pop
sarl
test
sub
ja
repnz
testb
add
call
inc
xor
or
push
pop
aam
aas
push
fs
mov
pop
stos
mov
nop
fisubl
jl
inc
mov
orl
mov
pop
or
sub
mov
sbb
lock
pop
cmp
pop
add
insb
leave
pop
cld
lods
inc
lea
adc
pop
sbb
xchg
pop
gs
loopne
pop
sbb
sahf
add
cltd
movsb
jne
shrb
xor
test
inc
out
in
aad
mov
imul
repz
loop,pt
leave
jns
mov
pop
movsb
movsb
adc
loopne
jecxz
out
fisubrs
sub
dec
inc
fcomi
cmp
mov
fs
cwtl
dec
mov
sub
adc
jg
adc
les
jg
mov
stos
cmp
adc
push
lret
fistpll
ljmp
inc
movsl
out
pop
adc
lock
sub
call
mov
add
add
repz
std
repz
xchg
scas
ffree
mov
add
testb
add
call
int
mov
pop
aaa
int
psubw
cmc
int
cltd
nop
add
aad
and
push
mov
sahf
js
pop
mov
xlat
mov
sub
cmp
cmpsl
rorl
je
in
cmpl
clc
stos
cmc
lret
and
arpl
add
test
aas
and
xchg
out
iret
enter
rolb
imul
pop
hlt
ftst
push
pop
cmc
push
lret
in
addr16
sarl
mov
in
clc
inc
rcl
stc
jbe
dec
lock
dec
jmp
ret
jae
adc
mov
mov
scas
ss
sbb
push
mov
insb
dec
jbe
in
and
xchg
repz
addr16
and
jae
adc
inc
dec
jp
sub
jbe
fwait
in
push
xor
jl
mov
or
add
lock
cmp
or
andb
add
add
add
fiadds
sarb
cmc
sub
cli
mov
movsl
push
cs
sub
jle
ret
jo
fcomi
scas
xor
pop
dec
stos
jb
mov
push
popa
cmpsb
cmc
aaa
jl
dec
add
mov
pop
cmpb
sub
jl
xchg
mov
stos
fistps
add
sbb
lea
mov
jmp
cs
mov
ss
in
ds
mov
inc
xchg
subl
adc
fsubl
iret
std
and
jbe
add
push
sbbb
mov
dec
jns
lods
and
cltd
jecxz
inc
push
imul
xor
int
dec
push
cld
nop
sbb
movsb
jmp
mov
inc
mov
pop
mov
hlt
aam
add
jmp
mov
ficomps
add
inc
cmp
or
and
jnp
dec
fcmovnu
jbe
mov
xor
jne
das
add
insl
lcall
lret
sbb
aad
movsb
mov
add
add
add
mov
xor
mov
cltd
push
mov
adc
push
push
pop
pop
int3
bound
in
cmc
dec
aam
sbb
xchg
inc
xchg
cmp
cltd
dec
es
icebp
dec
xchg
vandnpd
jo
xchg
xchg
lods
or
arpl
mov
jnp
mov
xchg
cmp
sub
fcomp
push
pop
sbb
pop
lcall
test
mov
fdivl
mov
pop
sti
sub
sub
mov
ret
mov
pop
lret
data16
mov
cmc
pop
test
js
jno
pop
fadd
jecxz
shl
hlt
pusha
insl
pop
inc
fbld
mov
push
dec
mov
scas
cmp
imul
repz
mov
xor
fbstp
and
jmp
adc
lcall
push
add
add
lret
xchg
in
mov
pushl
comiss
add
testb
add
fisubrs
cmp
push
pop
xor
sbb
xchg
ret
cmp
loope
cmp
push
loope
icebp
xlat
mov
inc
mov
cltd
fsubrl
sbb
ret
faddp
push
cltd
push
pop
push
jnp
pop
mov
es
mov
bound
sub
jns
shrl
leave
std
xor
lock
es
jb
add
mov
adcl
xchg
aam
inc
popf
sbb
fcmovnb
test
mov
sub
out
add
pop
push
cltd
nop
out
je
dec
push
push
outsb
lret
inc
xchg
mov
mov
shl
cwtl
ret
cwtl
sbb
into
pusha
mov
arpl
mov
xor
clc
outsl
mov
add
iret
inc
mov
mov
test
gs
inc
cltd
pop
js
add
fsubr
add
push
daa
xor
add
sub
in
negl
push
inc
push
xor
add
testb
add
stos
sahf
pop
xchg
push
popf
adc
int3
push
cmp
mov
push
cmp
jo,pt
int3
or
mov
imul
popa
arpl
out
adc
push
cmc
comiss
adc
pop
mov
push
jl
outsl
xor
jp
fstps
and
xor
out
or
movsb
ret
push
fs
mov
out
popa
adc
sarl
push
inc
mov
int3
std
scas
psubw
imul
cmc
cs
aaa
inc
and
xlat
popf
leave
in
into
pop
xchg
movsl
cmp
aas
fcmovu
insb
into
jne
sub
mov
push
xor
stos
scas
ja
inc
out
add
mov
pop
or
pop
add
xor
jne
or
es
inc
repz
les
mov
mov
clc
hlt
ret
cmpsb
pop
xchg
sbb
add
mov
nop
fmull
testl
add
xchg
insb
mov
pop
mul
subl
cmp
dec
xor
mov
js
fcmovnu
cmpl
lret
sbb
ja
or
inc
mov
int
push
popa
sbb
jbe
insb
pushf
mov
or
pop
imul
test
dec
enter
xchg
push
lods
test
fisubrl
cmpsl
sbb
pushf
outsb
add
jl
adc
jne
jge
jge
and
inc
mov
aaa
mov
mov
xchg
test
sub
stos
popf
inc
dec
sub
inc
call
outsl
test
bound
pop
popf
mov
je
xor
mov
cmpsl
mov
and
dec
sbb
lret
mov
jb
test
roll
xchg
hlt
inc
testb
pop
pop
fnstsw
mov
and
add
adc
push
add
adc
clc
add
testb
add
xor
ret
xchg
cmp
test
fwait
mov
mov
jnp
dec
stc
lcall
pop
push
xchg
loopne
and
dec
and
insl
scas
adc
test
js
push
ret
dec
daa
and
aaa
js
ja
lea
cmc
clc
sbb
dec
aam
dec
test
rcrb
ret
fs
xor
xchg
popa
gs
cltd
adc
je
push
jp
fadds
mov
sub
or
icebp
pop
lods
ja
pop
push
xchg
and
push
sub
mov
dec
cmc
cmp
in
repnz
and
cmp
mov
das
dec
xchg
mov
mov
cld
cld
dec
sbb
or
into
cmp
or
jmp
pop
and
lret
call
and
xchg
addr16
out
repnz
add
pop
inc
xchg
pusha
push
mov
add
add
xlat
xchg
xor
js
rorb
fwait
jge
jae
sbb
jnp
lret
hlt
or
in
xchg
in
aaa
xor
jo
ljmp
insl
lea
in
aas
clc
jge
stos
lock
imul
pop
pop
test
inc
stc
jle
ljmp
mov
mov
out
sub
lods
xor
stos
outsb
adc
adc
jecxz
inc
adc
sub
loop,pn
xor
xor
sbb
mov
inc
loop
mov
cltd
push
loopne
mov
xlat
enter
into
call
data16
stc
and
in
js
hlt
xchg
outsl
sbb
out
pop
mov
and
loope
testl
pop
aam
xor
ds
mov
jo
int
dec
mov
and
add
aaa
xor
xchg
mov
jae
add
mov
push
decl
push
pop
clc
cmpxchg
add
testb
add
pushf
xchg
push
movsb
sahf
xor
clc
and
mov
fsubrp
sub
dec
inc
fcoml
in
xlat
jge
lods
mov
mov
jecxz
mov
aad
push
push
dec
push
inc
movsl
sbb
lds
xor
pop
in
out
out
loop
add
mov
cmp
and
xor
cmpsb
es
and
sbb
sarl
js
ret
sub
jl
xchg
gs
pop
pop
insl
pop
in
xchg
jecxz
adc
test
xchg
bnd
jmp
mov
xor
inc
push
lret
adc
dec
xor
mov
fwait
mov
jbe
test
push
xchg
xchg
rolb
jg
jl
scas
aaa
cld
fs
jle
add
cmp
adc
or
es
loop
fdivrs
popf
dec
dec
push
insl
mov
add
and
cmp
sti
fsubp
decl
ret
addl
sbb
cmpsb
sti
add
testb
add
outsb
or
inc
loope
add
xor
outsb
pop
adc
pop
mov
test
orb
nop
idivb
aam
orl
lcall
shl
adc
arpl
xchg
ja
push
jle
cltd
pop
icebp
out
mov
xor
cs
mov
jne
popa
out
mov
fldt
mov
repz
pusha
xchg
imul
mov
pop
jge
subl
mov
sub
mov
lcall
mov
dec
push
mov
rcrb
xchg
or
int
je
mov
jno
pop
jle
repz
fbstp
jo
xor
inc
call
test
clc
sbb
sbb
fsubs
push
shrb
lods
or
cmp
ss
push
fildl
add
and
and
or
and
add
testb
add
imul
mov
adc
icebp
cmpsb
arpl
cmpsl
pop
subb
push
out
xchg
cmp
dec
cli
xchg
mov
mov
testb
add
aad
kmovb
jno
cmp
cmp
aad
or
cwtl
jne
cmp
aam
mov
clc
and
or
andl
jge
xor
outsl
call
inc
pushf
xchg
and
add
das
scas
js
pop
shr
inc
add
pop
mov
insb
shlb
cmp
inc
cwtl
aas
arpl
jae
jns
xor
fldcw
frstor
stos
imull
jge
push
xchg
cmpsl
and
ss
inc
xlat
push
ret
sbb
inc
dec
arpl
add
hlt
repz
leave
and
imul
and
mov
in
fsts
or
xlat
ljmp
es
sbb
add
repz
ror
lock
jnp
jmp
sbb
data16
xchg
std
add
testb
add
cmp
test
adc
orb
cld
repz
mov
push
bound
and
mov
addr16
enter
jmp
clc
outsb
inc
data16
inc
jns
jle,pn
push
test
movsl
pusha
mov
je
xchg
mov
inc
lds
add
push
loope
in
loope
pop
idivl
jg
and
push
mov
mov
repnz
sub
xlat
xor
jg
divl
lods
jno
aaa
bound
cld
ficomps
inc
ret
add
jecxz
jo
jp
inc
out
xchg
jno
lods
jb
call
les
mov
fisubl
les
pop
lods
test
add
push
insl
mov
jle
push
frstor
adc
cmp
cltd
pxor
and
call
lds
mov
mov
add
and
repz
fimuls
mov
cld
test
add
add
cmpl
and
cmp
jmp
test
inc
mov
inc
test
xor
sbb
pushf
les
addr16
and
jecxz
xchg
lea
mov
jecxz
pop
dec
jle
enter
lcall
aas
aas
or
push
nop
jg
cmp
outsl
loopne
sub
into
sub
push
sub
and
icebp
lahf
gs
mov
sti
inc
pop
bound
inc
cmpsl
cmc
loop
nop
add
adc
push
dec
dec
les
mov
mov
lret
stos
fwait
pusha
adc
xor
sub
arpl
pop
dec
nop
cmp
pop
inc
jne
imul
imul
mov
testb
movsl
mov
sti
xchg
cs
cmpsl
push
iret
jmp
clc
sub
sbb
fldl
je
inc
sub
xor
and
jns
data16
out
xchg
jns
stos
push
pop
cltd
jle
add
testb
add
cwtl
rorb
fistl
pushf
and
call
push
mov
lods
mov
int
push
inc
and
insl
out
stc
adc
ret
aam
dec
inc
xor
mov
ss
imul
leave
fistpll
push
xor
cmpsl
adc
jne
out
adc
stc
ljmp
push
sbb
or
bound
cmp
ljmp
test
adc
add
jg
loope
or
imul
xchg
add
jle
or
or
aaa
xor
mov
jmp
es
out
pushf
loope
iret
mov
mov
repnz
ret
jo
es
cmp
jl
lret
xor
sub
mov
sbb
or
pop
cmpsl
sbb
lahf
paddq
mov
out
add
scas
push
repz
cmc
scas
mov
adc
lret
add
testb
add
insb
push
fcmovb
inc
insl
loopne
inc
arpl
loope
sbb
push
repnz
movsl
mov
test
mov
enter
cmp
jge
rorb
mov
jb
jle
jmp
jbe
mov
adc
or
sub
lea
dec
aam
dec
dec
adc
inc
jl
and
ja
cmpsl
inc
cmp
cmpl
jbe
pushf
int3
fwait
pop
popf
and
pop
sbb
fsubrs
push
divl
scas
mov
mov
inc
insl
cwtl
jnp
fisubl
cmpsl
int
push
jne
out
push
add
insl
lock
idivb
loopne
scas
sahf
pop
push
pop
fiaddl
adc
push
loop
xlat
jae
sbb
ja
ds
fidivrl
repz
orl
mov
in
lahf
adc
cmp
fldenv
adc
push
mov
mov
add
lret
pusha
rorb
lea
mov
add
add
add
lods
dec
je
push
aad
insb
int
sub
jb
jge
subl
push
addr16
push
movb
adc
adc
das
cmp
movsb
xchg
sbb
mov
dec
fistpl
outsb
int3
mov
sub
xlat
sarb
adc
fcomip
dec
arpl
arpl
dec
jge
inc
adc
push
lods
add
push
add
scas
adc
loopne
mov
cmp
shll
in
pop
cmpsl
inc
xchg
push
stos
push
mov
out
sbbb
mull
dec
cmc
pop
add
sub
dec
leave
pushf
adc
jne
cli
jle
aas
mov
frstor
push
mov
imul
aad
ljmp
mov
lret
mov
lods
mov
xchg
pop
fisubrs
pusha
xchg
fsts
xor
jecxz
push
testl
pusha
out
pusha
add
add
add
add
push
in
xchg
jg
jnp
push
loope
iret
xchg
fldenv
cli
das
mov
out
adc
xor
mov
cmp
adc
mov
outsl
inc
mov
pop
xor
xchg
in
xchg
mov
lret
xchg
lods
or
iret
daa
arpl
arpl
iret
incb
xor
sbb
and
sub
mov
mov
inc
jmp
push
mov
xor
xor
sbb
pop
data16
mov
sub
fmull
push
jg
cs
lret
mov
into
loope
push
add
shll
aam
out
xchg
adcl
jo
mov
mov
cmc
mov
pop
jnp
pop
adc
clc
add
lds
mov
pop
xchg
shll
shll
imul
rorb
or
mov
or
sub
jge
loopne
test
fwait
pop
xor
add
xchg
mov
jle
sbb
negb
add
add
add
xchg
pop
push
add
out
cmp
iret
mov
dec
int
rolb
or
add
ljmp
aaa
jb
cmp
mov
enter
aam
fnsave
divb
inc
and
mov
mov
mov
inc
cs
fnstsw
nop
out
fdivs
int3
loop
jno
and
push
mov
jo
mov
ss
in
xchg
inc
scas
xor
inc
dec
inc
inc
ljmp
mov
movsl
jle
mov
int3
jns
push
mov
jecxz
ret
push
adc
mov
add
es
cs
or
into
jcxz
pusha
jns
movsb
sahf
in
imulb
enter
jbe
push
ror
sbb
mov
mov
jge
lret
aas
xor
mov
bound
sarb
xor
int3
notl
mov
xlat
aam
fsubs
add
testb
add
out
fs
adc
lret
sub
push
xchg
repz
push
lea
cmpsl
or
les
mov
adc
mov
sub
jp
jae
pusha
jle
out
add
and
inc
push
lahf
lret
adc
cmp
inc
push
jne
loopne
cmp
mov
stc
push
ja
aad
bound
pop
out
xor
sub
jb
add
repz
lsl
or
ja
enter
ljmp
sbb
mov
pop
out
sbb
add
ljmp
xchg
sub
push
fwait
cmp
mov
loopne
inc
hlt
xchg
or
jmp
fldt
repz
jbe,pn
pop
add
inc
jle
dec
mov
in
mov
add
out
mov
aad
mov
fdivrl
add
push
inc
pop
jns
aas
fisttpl
inc
cmp
arpl
add
testb
add
xchg
js
fxch
mov
test
insb
mov
leave
push
pop
clc
mov
les
movsl
add
push
inc
sti
insl
mov
fwait
and
add
int3
mov
pop
scas
mov
sti
pop
cltd
repz
cmp
xor
repz
int3
rcrl
rorb
adc
aaa
cmpsl
pop
popf
aad
fwait
sub
movsb
jecxz
mov
testl
add
lahf
or
out
fwait
mov
leavew
je
inc
pusha
or
lea
out
sbb
xchg
call
inc
pop
mov
sbbl
cld
jb
insl
fistpll
fistl
or
mov
sbb
cmp
fisubrl
mov
shll
arpl
cmp
pop
pop
dec
rclb
mov
adc
or
arpl
cwtl
fwait
cld
add
cmpsb
sbb
jnp
mov
leave
push
in
jns
push
add
testb
add
xor
or
mov
test
mov
icebp
cmp
aaa
jo
or
cmp
jmp
sub
mov
out
out
xor
outsb
jmp
les
shll
xor
sub
xor
xor
pcmpgtd
push
shr
mov
mov
mov
aad
sbb
repz
ja
mov
xchg
sub
cmp
cmp
mov
popf
pop
addb
in
in
test
xchg
pop
inc
mov
mov
iret
sub
sbb
imul
xchg
inc
mov
add
addr16
and
and
inc
daa
push
mov
imul
fstps
pop
incl
jne
add
adc
sbb
pushf
ret
xchg
mov
xchg
push
sbb
xchg
pop
jb
push
testb
inc
or
imul
adc
pop
add
testb
add
xchg
inc
lcall
int3
jb
ret
aaa
stos
jae
lods
cs
xchg
ss
mov
int3
sahf
xchg
sbb
sub
js
cmpb
mov
mov
xchg
decb
jmp
lods
xchg
lods
push
or
push
or
push
adc
pop
scas
pop
jle
xchg
mov
iret
in
bound
dec
inc
mov
aad
in
out
jecxz
or
test
into
cmc
cld
push
fistpll
add
add
pop
sbb
sbb
stc
fildl
xchg
pop
mov
mov
in
sbb
cwtl
lea
adcb
jne
and
mov
test
and
stos
insb
adc
dec
xor
lds
mov
enter
sub
fildl
cmp
push
inc
jl
cld
out
adcb
shlb
xor
pop
inc
add
xchg
mov
idivl
in
cmp
and
add
testb
add
lods
inc
dec
or
shll
or
int3
ror
pop
call
bound
xchg
in
cmpsb
stos
dec
xor
test
dec
inc
and
jns
jge
jo
adc
xchg
push
push
out
fsubr
repz
sbb
push
adc
cltd
push
inc
fmul
xchg
lods
xchg
std
jecxz
mov
mov
pop
scas
mov
xlat
leave
or
cmp
lahf
dec
test
or
push
vmovaps
popa
mov
push
fs
enter
cli
sarl
or
fldcw
es
adc
add
cs
add
cmp
mov
lods
push
clc
outsb
filds
jne
mov
adc
loope
sbb
jns
dec
push
sahf
lds
push
daa
xor
test
push
mov
std
add
mov
dec
jge
loop
outsl
movsb
xchg
xor
add
mov
stc
call
or
add
add
add
fmul
inc
sub
xorb
incl
call
ficoms
test
xchg
mov
and
mov
popa
insb
push
mov
aas
mov
fildl
pop
dec
jmp
push
lret
cmp
lahf
push
mov
push
cltd
mov
sbb
xchg
and
fstp
xchg
mov
bound
push
nop
out
lods
and
inc
mov
cmp
pop
rcrl
xor
add
xchg
jae
and
mov
jg
adc
sub
mov
lods
test
or
adc
enter
push
push
add
sub
enter
lods
sbb
std
inc
pusha
mov
out
in
cmpsl
out
jecxz
gs
out
leave
push
ljmp
jp
dec
push
push
scas
xchg
add
push
jno
jo
inc
sarl
add
jmp
imul
pop
sub
sahf
xor
bound
or
add
add
add
mov
or
dec
push
pop
jg
lods
and
ja
jae
jmp
or
cs
jmp
int
push
nop
ss
push
dec
js
lcall
adc
js
mov
pop
cld
rcrl
jnp
jo
into
les
pop
or
cmp
fisubrs
jmp
lea
shrb
jecxz
fildll
sub
out
call
mov
pop
cmp
lock
sbb
inc
or
lods
je
add
add
pop
stos
flds
fcom
daa
lea
add
sub
aam
outsl
push
ja
pop
pop
sub
inc
and
jmp
jae
ljmp
aad
push
cmp
out
jae
ljmp
and
loop
enter
push
dec
mov
pusha
push
adc
cmpsb
and
and
in
dec
jns
outsl
add
add
pop
lods
pop
cli
cmc
inc
mov
pop
push
or
add
add
add
mov
sub
jb
sub
shll
stc
sbb
dec
jge
cld
xchg
in
outsb
or
adc
xchg
dec
sub
mov
lea
repz
aad
add
add
adc
push
rclb
or
cs
mov
push
pop
cmpsl
xlat
cltd
mov
xlat
movb
iret
mov
xor
movsb
out
dec
mov
lods
xchg
in
scas
scas
mov
sbb
stos
iret
mov
sub
sbb
jmp
jmp
or
mov
xor
xchg
dec
xchg
cmp
pop
rclb
sub
in
add
pop
pop
or
inc
xchg
adc
in
int
int3
inc
inc
mov
aam
push
je
or
pushl
or
outsb
jecxz
fs
cld
mov
jecxz
jb
jmp
mov
add
stos
cltd
inc
popf
jae
out
inc
dec
clc
push
jne
cld
or
add
add
add
sbb
lcall
mov
int3
inc
push
flds
xchg
movsb
add
or
fxch
fnstcw
sub
xor
addr16
in
call
fidivrl
xchg
pop
bound
jp
jne
sub
sar
inc
jle
mov
lret
hlt
shlb
dec
mov
xor
ret
add
aad
dec
aas
rcrb
gs
dec
mov
xor
jb
cmpl
mov
pop
addb
dec
or
mov
dec
pushf
or
outsl
addb
mov
and
jp
inc
inc
push
lods
repnz
pop
add
imul
and
push
mov
mov
mov
popa
lods
dec
mov
mov
sbb
pop
mov
adc
dec
imul
subl
aam
jb
aam
movsb
mov
or
mov
stos
add
mov
nop
test
aam
int
xchg
clc
and
sub
add
add
add
js
and
xchg
jnp
xchg
push
test
pop
inc
sub
shll
add
cld
inc
cs
or
pop
pop
idiv
subl
cld
imul
mov
push
in
sbb
mov
sub
pusha
andl
les
mov
or
pop
jge
out
fs
out
mov
jmp
cmp
mov
sbb
mov
dec
scas
adc
aaa
or
and
mov
mov
pop
dec
mov
pop
inc
repz
scas
jnp
add
addr16
icebp
inc
loop
addl
push
mov
adc
jge
xor
add
or
lock
orps
outsl
adc
cmpsb
icebp
loop
jb
fs
adc
add
pop
arpl
addr16
inc
jmp
pushf
call
add
add
fistl
and
mov
xchg
or
mov
jecxz
mov
xchg
jno
cmpsb
fnstenv
jo
call
pop
fwait
cmp
les
xchg
jge,pt
dec
or
cltd
test
jg
jb
mov
mov
xor
int
add
test
out
jb
shlb
mov
outsb
dec
inc
movsb
xor
cmp
mov
jns
cmp
jnp
dec
push
sbb
sbb
ja
mov
fldcw
dec
stos
mov
pop
rcr
push
inc
sub
frstpm(287
mov
negl
pop
mov
pop
sub
test
pop
into
or
xor
mov
sub
mov
mov
xchg
out
pop
lahf
js
cltd
push
mov
inc
or
dec
subb
push
xchg
stc
mov
out
cmp
cmp
pushl
jecxz
adc
add
add
add
js
ret
ja
xchg
add
jae
jmp
push
push
cs
jg
add
int3
adc
lahf
sbb
into
sbb
mov
aam
lods
mov
lods
pop
inc
and
push
pop
std
xchg
sub
dec
scas
enter
enter
or
bound
sbb
repz
lret
outsb
scas
mov
out
test
js
std
ss
sbb
jmp
pop
adc
test
dec
sub
fs
es
mov
fists
pop
sbb
inc
nop
sti
mov
scas
jns
pop
push
jle
adc
jle
outsb
add
or
sbb
cmp
adc
mov
xchg
lods
aam
jo
in
or
cmp
cmp
in
icebp
jl
xor
cld
jns
lcall
add
push
scas
out
mov
shl
sbb
xchg
aam
add
testb
add
outsb
arpl
in
jbe
mov
add
cmpsb
mov
insl
dec
push
mov
cmp
dec
popa
out
push
and
xorl
xchg
insl
pop
lret
imul
loop
pop
cmc
cmp
mov
fisubs
enter
nop
xchg
insb
in
mov
jb
push
adc
push
fdiv
aam
vhaddpd
and
mov
mov
xorl
mov
jl
xor
popl
leave
adc
orb
addl
xchg
mov
pusha
mul
sub
popa
int3
pop
jb
adc
and
lods
mov
jae
cmp
adc
xchg
mov
dec
pop
jne
mov
sahf
in
mov
leave
adc
jmp
pop
sti
dec
addr16
sub
push
jno
test
cmc
outsl
pop
push
fcmovnb
add
aaa
xchg
and
movsl
mov
mov
cmp
scas
jp
mov
add
add
add
mov
fldenv
and
inc
in
push
pop
jle
cld
jg
leave
sbb
imul
daa
push
jb
sbb
in
jb
stc
xor
shll
xor
movsb
cmp
popf
jo
packssdw
arpl
sarl
mov
cmpsl
mov
enter
jb
pop
notl
pop
scas
out
mov
mov
std
jmp
dec
fistps
pop
push
ret
adcl
mov
mov
push
sbb
outsl
jnp
inc
ss
into
xor
test
inc
xor
or
or
push
push
or
sbb
sub
cmp
xor
in
lret
ljmp
in
push
cmp
push
jnp
push
add
lea
sub
rcll
int3
xlat
add
fdivl
mov
mov
dec
add
add
testb
add
mov
pop
inc
jb
pop
dec
icebp
adc
xor
insl
faddl
std
cld
call
and
in
xor
jae
icebp
icebp
repnz
dec
xchg
imul
inc
aam
roll
repz
pop
push
dec
xchg
add
or
cmpsb
int3
decl
jo
jp
arpl
fcomip
fistpll
mov
cmc
adc
mov
fstps
xchg
push
and
in
scas
add
adc
sub
repz
xchg
repnz
lods
loope
aas
mov
aam
cmc
dec
pop
je
xor
cwtl
nop
or
or
xchg
mov
mov
andl
jb
or
cmp
xchg
das
mov
cmp
xor
in
leave
push
jmp
and
imul
cld
out
fcoml
pop
mov
movsb
add
inc
stc
mov
mov
fidivrs
mov
divb
add
add
test
popa
daa
divl
inc
jle
push
adc
mov
movl
mov
and
imul
scas
je
adc
dec
or
jnp
xor
jp
aas
fildll
and
sbb
std
iret
dec
insb
pop
out
int3
repnz
xchg
adc
je
aas
jecxz
popf
cwtl
push
cmp
mov
push
sub
dec
sbb
daa
pop
cmp
sbb
in
pop
fidivrl
mov
popf
adc
jp
lahf
lcall
ucomiss
adc
cmp
cmp
inc
lock
aad
or
out
pop
xchg
ret
iret
cmpsb
aaa
mov
pop
fidivs
jnp
and
je
rcrb
ret
xchg
clc
xchg
hlt
and
test
js
mov
lods
xchg
adc
outsl
mov
aaa
cli
add
push
jb
pop
data16
adc
les
lods
add
xchg
sub
scas
jbe
or
lods
adc
add
add
add
sarl
push
pop
and
sub
stc
push
mov
add
mov
ret
fisttps
scas
push
and
xchg
flds
bound
push
xchg
nop
jecxz
or
je
movsl
jbe
xor
fnstsw
hlt
dec
mov
int3
and
mov
cmpsb
mov
sbb
inc
cmpsl
lods
adc
mov
mov
adc
ds
or
adc
ljmp
les
and
repz
shll
inc
jnp
fcompp
push
fxch
cmpsb
pop
xchg
loopne
loope
ljmp
dec
clc
add
xchg
andb
lcall
inc
sbb
nop
int3
mov
jmp
push
imul
add
pop
lret
mov
mov
jnp
cmpsb
xor
and
mov
loope
pop
jne
push
mov
add
add
hlt
fists
xlat
xchg
mov
add
add
mov
dec
jne
dec
xchg
ss
jae
push
push
je
fstps
jg
push
sbb
dec
mov
or
pop
pop
fsubrl
mov
add
cmp
das
jns
push
mov
fisttps
jno
cmp
rcr
ret
push
into
or
ljmp
lods
nop
fildll
insb
fiadds
push
pop
jbe
adc
inc
fs
int
fadds
shrl
aam
mov
cmc
pop
ret
aaa
rcrl
pusha
pop
push
mov
sub
hlt
add
cmp
idivl
add
mov
xchg
out
mov
adc
rol
jns
repnz
dec
bound
dec
icebp
jne
ret
lcall
loop
xor
sub
mov
pop
cmpl
mov
xchg
mov
les
mov
leave
stos
in
xor
pop
add
mov
into
fwait
testb
mov
loopne
adc
add
mov
push
fidivrl
movsl
push
in
insb
and
or
xchg
adc
insl
jo
xchg
lret
inc
out
jbe
xor
add
xchg
push
push
rorl
push
lods
aaa
mov
ret
pop
mov
loope
cmp
xchg
out
fsts
bound
repz
or
into
sbb
mov
repnz
cmpsl
sarb
jl
pushl
fwait
mov
xor
and
cmp
mov
cmp
mov
xor
cmp
or
mov
adc
cmp
xchg
mov
adc
inc
and
and
cs
xchg
mov
push
inc
test
dec
push
xchg
mov
hlt
push
jne
cmp
loop
mov
jp
test
icebp
imul
jle
scas
pop
lret
push
push
push
lret
lods
mov
lret
xor
adc
add
xor
mov
pop
mov
aad
stos
mov
add
testb
add
cmp
fld
nop
sarl
gs
sub
in
in
fidivrs
dec
cmp
addr16
sbb
sub
jb
imul
inc
jno
cltd
cmp
jmp
inc
jp
xlat
mov
mov
sub
mov
push
jns
adc
pop
scas
scas
outsl
scas
sub
inc
cld
cmpsb
mov
mov
gs
xlat
mov
bound
jne
cmp
jns
fdivl
lret
mov
cmp
pop
or
sti
popa
test
dec
xor
add
xor
push
sbb
mov
jbe
les
cvtdq2ps
sbb
out
pop
dec
or
mov
pushf
out
outsb
xor
mov
dec
pop
mov
insb
popf
iret
shl
xchg
test
popl
add
inc
out
aas
mov
sub
push
in
test
add
testb
add
xchg
scas
arpl
ljmp
lcall
lock
and
push
pusha
gs
jecxz
push
movsb
push
adc
mov
popf
pop
movsb
cwtl
out
jl
ds
xchg
or
push
or
dec
push
or
rcl
hlt
and
in
sub
shll
lea
mov
js
jge
jno
jp
xchg
or
adc
jnp
jle
shlb
and
push
dec
sub
xor
dec
xor
xlat
sbb
popf
lock
sahf
jg
cmp
xchg
daa
add
das
in
xchg
loope
ljmp
fbld
rolb
pop
shl
or
xchg
mov
into
int
mov
flds
adc
addb
xor
hlt
enter
xchg
in
mov
std
je
out
cmp
xor
sti
inc
or
xor
imul
add
bnd
jp
xchg
inc
test
sbb
add
add
add
push
ret
cltd
xorl
jl
dec
push
mov
inc
mov
arpl
xor
pop
cwtl
lods
mov
mov
push
mov
pop
jb
loopne
and
inc
mov
ds
enter
jl
mov
rcr
xor
xchg
cmc
call
leave
push
outsb
push
ja
fistps
xchg
insl
imul
mov
jl
jo
xor
cmc
scas
mov
test
lahf
movsb
sarl
inc
dec
test
arpl
push
jle
out
roll
aaa
mov
popa
adc
sbb
push
fbld
incb
nop
jns
je
push
push
test
lret
andb
xlat
into
push
icebp
daa
inc
pusha
cmp
ds
sbb
dec
dec
xchg
pop
add
jb
pop
insb
mov
repz
ret
decl
imulb
arpl
mov
add
in
out
ja
fbstp
das
je
jo
add
testb
add
push
mov
xchg
cmp
xor
add
pmovmskb
mov
imul
sub
lods
aas
scas
jb
ja
cmp
mov
dec
ret
fistps
jns
fsubrs
shlb
pop
cli
aad
iret
push
loop
adc
int
xlat
cmpsl
jmp
pushf
sbbl
adc
inc
call
xchg
fstps
push
xchg
or
test
cmp
adc
pop
cmpl
push
mov
aad
dec
ret
cld
aam
lcall
mov
jg
jae
loope
ret
xchg
push
stc
dec
mov
and
mov
popf
pop
dec
in
out
lock
cmp
mov
lods
pushf
cmp
aad
push
inc
arpl
dec
cmc
fldcw
loop
movl
cmp
add
pop
in
insb
movsb
data16
add
add
add
addr16
xor
push
ds
xor
cld
cmp
aad
cmpsb
fnstenv
lcall
jns
push
mov
out
and
add
ss
sbb
setne
and
sarb
inc
loop
test
pop
leave
mov
lcall
push
cmp
pop
rol
mov
shlb
cmp
pop
enter
mov
cmp
loope
fs
mov
iret
rorb
movsb
push
rolb
mov
cmp
push
daa
shrl
fisubl
lock
jno
jge
mov
ret
orl
or
sbb
push
xor
add
pop
mov
adc
sarb
mov
xor
dec
arpl
mov
cmc
xchg
push
inc
movsb
cmp
pop
inc
xor
icebp
iret
leave
aas
lds
add
mov
jg
imull
push
mulb
mov
add
testb
add
push
aam
in
push
xor
pushf
repnz
cmp
xor
adc
pusha
sbb
mov
xchg
ss
inc
sar
cs
sub
pop
leave
bound
arpl
in
fcoms
pop
jb
out
mov
push
inc
outsb
inc
shrb
dec
or
or
aam
jae
mov
mov
add
cmp
daa
sbb
jecxz
adc
das
add
shrl
cmp
mov
fdivp
push
das
pushf
bound
adc
stos
rorb
add
jae
inc
mov
and
jle
imul
push
mov
icebp
dec
rcrb
dec
adc
xchg
test
les
ds
push
aaa
loop
xchg
aad
and
sbb
add
sti
jg
and
cmpsb
jno
pop
push
sbb
add
add
add
jnp
push
sar
sub
roll
sbbb
iret
pusha
mov
xor
inc
or
lahf
leave
sti
sbb
jne
mov
cs
fisubl
cmc
jl
lds
xor
cwtl
addr16
sbbl
inc
mov
add
jns
rol
jno
jg
aad
adc
sbb
adc
ret
stos
cmp
xchg
push
stc
inc
sub
lock
insl
pop
mov
stc
cs
mov
mov
stos
mov
and
xchg
stc
adc
rcr
sti
push
sbb
mov
mov
cli
scas
fs
shlb
fldenv
fmulp
cmpsl
add
popa
mov
popf
fsubr
add
fstpl
enter
mov
outsl
clc
xor
shrb
inc
les
sbb
dec
je
or
add
add
scas
aam
jnp
fldl
inc
cld
dec
sbb
add
dec
push
jne
push
test
fdivrs
shr
in
xchg
scas
sub
sahf
xor
jge
cpuid
in
bnd
xor
sub
lret
mov
jne
adc
sarb
fidivrs
hlt
xor
push
mov
cmp
cld
xor
fisubrs
lcall
xor
pop
cmp
dec
and
mov
iret
in
sub
hlt
jmp
push
arpl
mov
push
popl
xor
dec
jge
nop
mov
and
mov
cmp
mov
movsl
push
push
je
xor
mov
adc
or
leave
adc
pop
inc
testb
divl
cmp
mov
pushw
test
ja
mov
sbb
lds
ljmp
fcmovne
sub
add
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
mov
add
testb
add
sahf
mov
sub
leave
sbb
dec
push
popa
push
dec
test
stos
in
and
push
jnp
inc
in
push
dec
cmp
jg
xor
push
out
dec
mov
dec
fsubrl
jge
in
mov
cltd
repnz
je
cmc
cmpsl
fnstcw
pop
mov
adcl
icebp
lret
sbb
or
xchg
push
sbb
les
mov
mov
andl
sub
adc
lcall
in
or
lock
dec
cmp
and
pavgw
addr16
jecxz
scas
arpl
push
aas
outsl
cmpsb
add
cmp
and
shl
je
ficoml
movsb
jp
dec
sbb
scas
xor
out
mov
xor
add
test
insl
int3
out
rcll
fstp
mov
fstpt
incb
sahf
push
pop
xchg
int3
pop
add
push
push
pop
add
xor
sbbb
loope
jmp
loop
ja
imul
add
add
add
movsb
sub
ds
and
mov
push
repnz
loop
inc
clc
adc
outsl
pop
pop
pop
das
mov
inc
dec
xor
repnz
jne
push
jl
mov
xchg
insl
out
jne
push
xor
mov
push
xorb
lret
or
sbb
and
into
fidivs
adc
mov
in
mov
rcl
xor
les
jns
std
lea
xor
mull
dec
movsb
or
fistl
jno
or
adcb
push
mov
imul
insl
add
insb
add
ljmp
daa
loope
push
fistpl
outsl
mov
test
in
push
mov
shll
popf
dec
rorb
inc
call
mov
mov
pop
ja
add
imul
cmpsb
add
cmc
xor
xor
add
xor
idivl
adc
add
add
add
lods
jnp
adc
test
cmpsl
fnstsw
cmpsl
sarl
push
insl
jo
pop
addb
ja
aas
pop
cmc
push
int
ret
fwait
mov
inc
jp
and
or
ljmp
insb
cmp
or
out
mov
xchg
pop
adc
stc
aas
mov
daa
jae
fucomip
ficomps
cmpsb
inc
outsl
sub
xchg
mov
loopne
add
sbb
fldcw
mov
cwtl
lock
or
add
fadds
aas
ret
aaa
ret
mov
test
sub
setae
popa
dec
aad
mov
rcll
pushf
insl
adc
push
jp
mov
mov
xchg
stos
add
lret
fwait
and
or
aam
cmpsl
out
imul
dec
cli
inc
jg
int
pop
sbb
push
xor
testb
add
orl
dec
add
mov
lea
inc
insb
das
cs
gs
jne
daa
clc
mov
into
and
insl
mov
subl
pop
xchg
xchg
xor
pop
sbb
dec
outsl
inc
std
loope
push
test
and
cmp
insb
adc
inc
out
insl
cmpsl
inc
fisttpl
sub
loopne
stos
or
aad
mov
xor
out
loop
lds
fcompl
xor
mov
or
bound
inc
stc
int
sub
js
lret
int3
pop
out
push
mov
shl
in
in
mov
jmp
xor
adc
fcom
jo
dec
adc
out
jmp
jle
xor
adc
arpl
enter
cmpsl
loope
jbe
inc
add
test
aaa
imul
add
xchg
std
cmp
jle
fisttps
cmp
pop
push
and
add
add
add
or
mov
push
bound
testl
aaa
arpl
pushf
pop
into
push
cltd
sahf
mov
fnstsw
mov
es
out
out
out
stc
mov
and
mov
push
jno
or
pop
fldcw
adc
dec
into
setp
push
and
mov
cmpsl
xor
movsl
in
push
mov
divl
int
ret
imul
jmp
int3
adc
pop
jbe
mov
bound
jmp
pop
sub
lock
ss
pop
lods
mov
mov
xchg
xor
xchg
movsb
lret
test
mov
pop
jge
cltd
rorl
ljmp
test
jp
and
inc
shlb
xchg
rcrb
stos
xorb
das
cmp
mov
mov
xor
cmp
xor
cmpsb
mov
jb
ja
aad
loopne
push
add
xchg
pop
lds
xlat
ficoml
sbb
add
add
add
dec
fldl
das
xor
gs
sahf
cmp
pop
scas
xchg
arpl
xor
pop
xchg
push
insb
ss
out
add
js
or
lcall
lret
std
aaa
inc
or
cltd
jg
cli
adc
pop
jmp
cmp
mov
stos
adc
fisttps
imul
pop
fidivs
or
mov
aam
sub
cs
ret
bound
jg
aas
int3
pop
pop
fcoms
and
xor
mov
nop
push
push
std
enter
repz
inc
sub
jns
insb
test
jns
cltd
jg
inc
sub
xchg
push
sub
jecxz
jne
insb
pop
sbb
dec
cmpsb
lods
adc
xchg
cld
minps
and
jp
dec
xchg
sbb
mov
outsb
sbb
push
adc
pusha
add
dec
jmp
dec
scas
iret
outsb
jmp
rcll
cmp
add
add
add
add
das
cmp
mov
lods
outsb
mov
popa
mov
jl
mov
sbb
loope
inc
pop
bound
das
sub
mov
out
gs
cmpsl
fdivs
jl
xchg
cmpsb
cmpsb
movsl
pop
xlat
hlt
add
int3
or
lret
movsb
repnz
lods
in
shlb
imul
insb
push
xchg
je
inc
dec
mov
das
add
aaa
adc
js
or
mov
mov
rcll
mov
dec
mov
les
rcrb
negb
inc
sahf
lds
pop
xchg
lret
or
int3
jecxz
cmpsb
sbb
sbbl
add
mov
das
test
jo
subl
insl
xor
sahf
gs
rclb
in
lret
mov
in
aam
mov
add
sbb
std
sbb
stc
cld
or
push
push
or
clc
and
add
add
add
iret
dec
push
and
sub
xchg
jg
fdiv
push
xchg
or
inc
inc
xchg
jge
jge
mov
jae
fprem1
inc
int3
mov
test
mov
push
lahf
lcall
push
pop
into
popf
push
decb
push
dec
mov
jl
add
jge
push
push
mov
mov
data16
ret
stos
fldenv
neg
aad
pop
imul
xor
jmp
scas
loop
xor
dec
pushf
pop
sbb
jge
xchg
sbb
push
sub
push
push
imul
lret
sub
leave
sub
cmp
lock
andl
xchg
rclb
gs
mov
dec
andb
jns
nop
das
jmp
and
dec
out
lock
repz
xchg
jle
xchg
xor
adc
addl
jnp
std
push
add
negl
adc
out
jl
fstl
add
testb
add
mov
lds
ljmp
inc
mov
std
push
stos
das
std
movsl
push
pop
in
and
in
xor
xchg
cmp
mov
scas
sbb
jnp
sub
xor
jmp
pushf
mov
adc
cmp
ret
xor
mov
mov
in
or
fisubrl
jmp
rclb
ss
aas
dec
outsb
mov
lock
or
mov
add
ja
adc
sbb
movsb
repnz
jb
int
and
pop
imul
pop
sbb
push
adc
jg
aad
call
pop
mov
ficoml
lret
xor
mov
lods
out
xchg
inc
push
mov
in
push
test
mov
dec
stos
jo
pop
stos
jnp
sbb
jecxz
add
dec
pushl
mov
add
testb
add
pop
push
inc
lret
je
out
mov
dec
stos
or
ret
loop
cwtl
imul
mov
pop
lea
inc
stos
jge
stos
out
jo
lock
repz
pminub
into
cwtl
mov
in
ret
and
es
add
pop
repnz
sub
or
cmpsl
outsl
sbb
dec
add
or
mov
loope
test
pop
sbb
add
dec
jbe
cmp
in
aaa
lods
pop
inc
iret
mov
out
repnz
sti
frstor
mov
add
aas
jo
xor
or
popa
xchg
mov
cmp
mov
mov
sahf
shlb
or
push
lcall
daa
sahf
dec
sbb
mov
mov
jne
sub
iret
mov
ds
arpl
in
mov
call
cmp
and
add
inc
ja
pop
aas
pop
pop
inc
adc
in
movsl
xchg
fisubl
add
testb
add
dec
pop
stos
inc
xlat
ficomps
les
mov
iret
fdivrl
popl
daa
jb
jne
inc
add
ljmp
add
rcll
push
rclb
and
mov
out
xchg
les
xchg
hlt
push
and
int
sbb
and
nopl
mov
fisttpll
outsl
mov
jo
fwait
sbb
xlat
sub
ljmp
je
pop
inc
xor
popf
ret
outsb
sti
js
in
dec
lock
in
push
insl
outsb
or
mov
pop
xchg
sbb
adc
mov
sub
and
je
mul
cmpsb
in
and
xor
cmpsb
inc
xchg
insl
sbb
cld
lret
lahf
add
push
stos
outsl
aam
lods
scas
mov
push
xchg
inc
add
cmp
jne
mov
push
ret
mov
jge
cld
push
je
xchg
ljmp
aam
test
adc
add
repz
jae
ja
div
dec
lods
push
mov
sub
add
testb
add
jbe
ret
gs
fcomps
imul
mov
das
jmp
lret
add
and
mov
pop
xchg
pop
xchg
xchg
add
fidivrl
rclb
mov
fimull
ffree
iret
xchg
push
add
and
mov
jge
push
push
add
in
shrb
adc
loop
cmp
pop
sbb
inc
call
icebp
shlb
adc
and
cmp
and
pop
je
shr
orl
mov
repz
int3
xchg
adc
in
pop
add
lret
xlat
out
shl
xchg
ss
pop
mov
mov
adc
out
jo
cmp
pop
mov
lods
int
mov
push
jno
mov
fs
mov
icebp
sbb
and
ret
and
add
xor
cli
std
jg
into
jno
mov
sub
add
add
add
dec
add
mov
push
test
pop
push
jns
cmpsl
scas
sbb
subb
int
ss
mov
sub
xor
jbe
repnz
inc
cmp
cmp
cmp
pop
mov
lods
mov
xor
out
dec
sub
or
mov
insb
and
cmp
in
subb
das
push
hlt
sub
test
jg
add
push
push
dec
xor
dec
sahf
enterw
ja
je
lods
leave
stc
outsb
mov
dec
sti
sub
out
fistpll
cmp
xlat
mov
sub
es
jno
aad
cwtl
sbb
ss
xor
sbb
test
les
ljmp
add
push
dec
mov
inc
in
es
inc
stos
add
testl
incl
sub
pop
das
sub
add
add
add
gs
in
ret
inc
add
out
fcmove
and
cmpsb
sub
and
sbb
xor
adc
push
inc
or
in
mov
xchg
inc
push
cwtl
dec
mov
sbb
jb
aaa
lea
int
or
stc
ret
sbb
sub
cmpsl
pop
sub
dec
push
subb
dec
push
dec
mov
movsl
and
aaa
push
jo
fcomps
idivl
or
add
jle
sbb
imul
cmp
dec
sub
add
lods
fadd
out
call
dec
ja
dec
cs
pop
jnp
popf
nop
push
mov
sbb
into
inc
xchg
aam
imul
aam
test
lret
mov
cmp
jge
xchg
lods
lock
addr16
pop
inc
sbb
mov
sbb
xor
nop
mov
lock
xor
sbb
add
push
es
jg
pop
xorl
and
sub
add
add
add
imul
outsl
testl
push
icebp
jo
mov
sub
add
inc
mov
les
inc
in
hlt
test
ret
mov
test
cltd
cmp
or
cmp
idivb
xor
movsb
addr16
scas
cmpsl
sahf
mov
popf
add
es
and
repz
fcmove
inc
cmp
lcall
cmp
das
jl
pop
pop
outsw
pushf
sbb
popl
cmp
in
and
and
js
les
cmp
xor
gs
mov
scas
in
ret
sbb
pop
pushf
jns
xor
jo
jnp
test
mov
sub
inc
xor
add
push
dec
mov
lods
jmp
addr16
out
push
xor
sub
out
cltd
cmp
shr
xchg
fs
mov
call
stos
in
xchg
push
inc
fsubrl
add
bound
icebp
outsl
sbb
data16
push
clc
or
cmp
and
add
add
mov
sbb
mov
xchg
push
in
imul
aam
adc
cmp
sahf
jge
clc
inc
in
ret
data16
insl
add
adc
pop
push
sarl
dec
mov
out
bound
jg
popa
mov
out
cmpsb
dec
js
jae
inc
out
aas
add
push
push
test
or
jns
and
adc
push
mov
es
adc
pushf
xchg
orb
cmp
shrl
arpl
xchg
dec
xchg
cmp
test
push
divb
and
pusha
pop
mov
test
sahf
repnz
stos
xor
inc
sub
ss
adc
add
jns
movl
mov
and
pop
fs
push
je
xchg
scas
push
or
or
neg
xchg
push
add
adc
add
xor
ja
cmovnp
sbb
sub
add
xchg
xor
push
ja
in
ret
or
push
push
inc
les
mov
cmp
push
in
add
and
cmc
push
adc
fwait
dec
fwait
mov
mov
mov
fimuls
lret
cmc
shr
or
add
or
imulb
cwtl
test
lods
xchg
mov
lods
xchg
fisubrl
enter
nop
pop
ret
cmp
mov
in
add
sbb
sbb
jecxz
lods
sub
sbb
xlat
xchg
or
mov
xor
test
sub
sbb
push
xor
ja
aad
xchg
and
and
add
mov
inc
jne
inc
or
xlat
or
dec
or
aad
cmp
lods
mov
fisttpll
int3
xor
lret
xor
inc
pop
call
adc
cmp
in
lret
ficoms
stos
sbb
ljmp
push
iret
xchg
add
testb
add
mov
fnstcw
mov
andl
pusha
sar
or
add
push
das
pusha
jb
lods
push
and
mov
outsl
iret
loopne
mov
xor
adc
js
faddl
mov
in
push
dec
or
xchg
mov
cmpsl
gs
and
xchg
push
daa
inc
or
mov
inc
lods
xchg
push
stos
insb
nop
sub
lret
sbb
pop
arpl
pop
cmpsl
ljmp
mov
cltd
lahf
cmpsb
test
cwtl
les
add
test
lods
fimuls
dec
inc
push
ret
mov
sub
sbb
lret
sti
jbe
lock
repnz
xchg
inc
imul
cld
inc
mov
cmp
pop
shll
cmpsb
pop
xchg
aam
sub
xchg
and
pop
push
aas
and
jge
enter
orb
cld
xor
push
inc
sbb
adc
add
add
in
out
sbbb
sbb
mov
add
testb
add
pusha
js
or
mov
scas
mov
sbb
imull
es
orb
and
sub
push
sub
sbb
ja
shr
jb
daa
icebp
mov
cmc
std
jl
xor
jb
sbb
scas
and
push
sbb
bound
jmp
out
inc
bound
scas
mov
into
ja
imul
call
mov
cltd
cltd
cmp
imul
sbb
inc
push
mov
adc
cmp
xor
popa
and
sub
inc
filds
lods
sub
or
cmpl
pusha
mov
test
mov
movsb
dec
jle
xorl
fs
xchg
cmp
dec
mov
in
cmp
xchg
andl
mov
xor
aaa
dec
xor
jns
add
sbb
out
aad
jo
in
ss
add
add
add
subl
popa
sbb
sbb
and
add
inc
leave
sbb
lahf
jnp
iret
push
mov
data16
pop
xor
mov
sarb
mov
xchg
fsubrs
icebp
dec
in
dec
xor
gs
pushf
out
push
stos
lds
add
sub
stos
in
ret
rorl
aas
mov
lahf
mov
lods
inc
xor
xchg
dec
sbb
pop
jo
cmp
pop
fs
xor
xchg
push
repz
add
out
loope
push
push
pop
outsl
push
dec
imul
jecxz
mov
sti
pop
inc
stos
popa
and
aaa
ret
mov
lret
stc
jg
jmp
idivb
ret
pop
dec
dec
fldl
sarb
sbb
pop
pop
cmp
or
push
mov
mov
sub
add
aam
add
cmp
out
dec
lret
fstpt
jbe
add
testb
add
sbb
inc
daa
das
mov
clc
mov
push
xchg
push
call
stos
or
push
in
jb
push
inc
xor
add
push
loop
or
inc
cmpsl
cmp
insl
dec
push
xchg
cwtl
sbb
insl
cld
and
popf
dec
xchg
jmp
and
inc
test
jo
inc
stc
les
aaa
pavgw
outsl
mov
pop
enter
sarb
sub
mov
jnp
cmp
xor
adc
push
std
ret
pop
fwait
pop
mov
or
lods
addb
adc
popf
xchg
hlt
fildll
sbb
outsl
jno
pop
inc
dec
inc
push
or
cmp
mov
out
mov
mov
cmpsl
loop
sbb
mov
jae
sbb
repnz
push
and
add
lods
jg
add
lods
aas
pop
fists
insb
xor
add
add
add
sub
mov
test
inc
add
push
push
or
push
repz
inc
sbb
aad
push
loop
into
daa
xchg
out
dec
lea
push
out
addr16
dec
movsb
xor
sbb
pop
lds
mov
nop
inc
fistl
std
fistpl
das
gs
ja
mov
je
pop
repz
pop
push
add
sbbb
inc
cld
dec
lock
lret
clc
mov
cmp
into
lods
pushf
jle
insl
pcmpgtb
ss
pop
ss
xchg
scas
aas
push
imull
in
push
ds
das
rorb
cs
mov
pop
jne
sub
push
cmp
jb
mov
pop
shrb
inc
fsubrl
mov
sub
stos
nop
push
push
pop
gs
pop
inc
sbb
in
and
adc
lea
roll
dec
ret
shll
stos
push
add
into
or
inc
mov
add
jg
cld
add
adc
lcall
add
aam
lcall
xchg
jne
mov
sub
push
fistpl
fucomi
xor
xorb
out
movsl
ret
sub
xor
push
dec
loope
xchg
mov
pop
cmp
xchg
cmpsb
xchg
adc
lods
das
adc
jbe
lahf
stc
and
ss
cmpsl
xchg
mov
jo
jno
pop
mov
shrl
sbb
mov
mov
and
icebp
loope
frstor
sbb
add
sbb
dec
jmp
xor
pop
stos
xchg
and
jne
je
xor
shl
ja
mov
xchg
popf
aad
xorb
aas
inc
mov
dec
xor
mov
jo
nop
out
mov
mov
cs
xchg
adc
mov
inc
popf
into
adc
xchg
and
dec
loop
in
push
add
ret
mov
iret
mov
hlt
scas
pop
xor
add
add
add
adc
sbbb
test
test
push
adc
xchg
int
out
jl
pop
ret
fldenv
xchg
push
je
jnp
daa
push
aaa
inc
js
sbb
adc
jo
dec
sub
cwtl
push
mov
inc
cmp
pushf
xor
fwait
cli
icebp
lods
and
clc
dec
cmp
out
fsubrs
mov
mov
mov
cmp
lods
insl
jge
push
mov
hlt
sbb
cmc
xchg
scas
ljmp
mov
mov
inc
ret
or
xchg
inc
ljmp
stos
mov
fxch
mov
jp
pop
and
xchg
mov
push
add
test
lret
jle
mov
jae
mov
cltd
pushf
inc
cmp
loop
pop
xor
jle
xchg
das
test
xor
xchg
jb
out
icebp
les
add
or
sbb
in
sbb
testb
add
mov
or
xor
xor
daa
mov
cmp
or
cltd
test
add
mov
mov
pop
je
mov
je
inc
push
sub
adc
mov
cmp
add
cmp
cmpsb
fwait
lods
inc
pop
scas
ja
sub
cmp
insl
or
sbb
vmovntdq
lock
add
mov
cmp
push
jnp
push
push
lahf
pop
xorb
jg
insb
into
in
in
sub
xchg
mov
insl
rorl
mov
clc
add
push
clc
outsb
out
movsl
leave
xor
inc
cmp
inc
leave
push
mov
cmpsl
sub
cmpsb
xchg
mov
movsl
or
aas
mov
aam
sbb
pop
jmp
out
mov
pop
jno
test
dec
shl
inc
lods
cld
add
shlb
cli
clc
cli
clc
sarb
repnz
inc
aam
scas
lock
add
add
add
jecxz
arpl
data16
sbb
stos
mov
into
xchg
daa
das
out
mov
sbb
notb
pop
pusha
and
jle
pop
jbe
loope
arpl
out
scas
sub
adc
pop
adc
jg
rolb
push
into
out
out
jle
sub
cmp
mov
mov
jno
adcb
adc
pop
loop
das
xchg
aam
or
sbb
push
and
mov
and
mov
mov
lock
sti
mov
aas
inc
daa
insb
mov
cmpsb
jp
cmpl
xchg
add
xchg
add
leave
mov
mov
es
cld
and
sub
or
sbbl
dec
leave
pushf
cmp
jb
out
or
cmp
movsb
mov
rorb
lock
jmp
out
mov
add
test
imul
push
lcall
cmp
add
testb
add
ja
push
jb
xchg
hlt
xchg
sub
push
jl
xchg
fcmovnbe
leave
pop
adc
or
jp
add
cltd
fiaddl
adc
xchg
mov
insl
dec
push
sahf
daa
ja
dec
scas
mov
dec
adc
sub
repnz
scas
outsl
divb
mov
ljmp
lea
lcall
mov
out
push
xor
std
shrl
enter
adc
jno
inc
add
pop
lods
dec
jae
dec
subl
mov
outsb
fdivr
mov
cld
out
mov
fnstsw
in
jl
orb
mov
in
push
jae
and
sti
adcl
and
sub
sbb
xorb
mov
push
jns
mov
jbe
lahf
shl
or
enter
out
xchg
mov
cs
out
rorb
xlat
fs
dec
fnstcw
add
fs
es
data16
cmc
jle
dec
push
mov
add
testb
add
iret
aam
adc
add
mov
mov
int
sbb
out
xor
ja
pop
sti
jo
stc
lock
repz
add
arpl
shll
mov
addb
int3
mov
lret
push
fs
jb
sub
mov
or
xchg
dec
pop
lfs
cmpsb
jne
push
push
pop
push
xchg
xchg
jnp
push
int3
jbe
pop
fidivrs
pop
ja
cld
mov
jo
hlt
cli
and
aam
xchg
mov
jecxz
sbb
or
jmp
pop
pop
out
hlt
paddw
shrb
sti
mov
leave
mov
fdivrp
fsubs
add
xlat
jecxz,pn
xor
mov
mov
sub
cmp
mov
out
mov
mov
push
shlb
clc
pop
xchg
outsb
or
xchg
add
adc
cmp
movsl
cwtl
mov
int3
add
clc
mov
fldcw
cwtl
cmpsl
xorb
add
add
add
push
fildll
hlt
add
pop
fsubl
bound
jg
cld
xchg
pushf
stc
enter
lods
stc
mov
jae
add
stc
popl
mov
inc
aas
and
sub
pop
push
mov
testl
jecxz
pop
ss
sbb
adc
jg
inc
fcoml
jle
push
and
mov
xchg
pop
test
out
mov
pop
sub
jns
push
mov
pop
mov
dec
leave
jnp
dec
pusha
in
xor
or
xchg
scas
pop
jge
mov
aas
xchg
repz
or
xchg
cwtl
inc
shl
adc
jmp
inc
add
cmp
movb
test
bound
lock
test
adc
xor
jae
inc
into
mov
pop
in
xor
jno
sbb
push
inc
xchg
dec
jecxz
ret
lods
jge
add
and
push
sti
cmpsl
pop
push
jo
xchg
xchg
cmp
add
add
add
loopne
and
dec
aaa
mov
out
shrl
cld
dec
fs
sub
push
test
inc
mov
cli
std
xor
repz
adc
mov
or
in
hlt
pushf
icebp
ficoms
push
add
sub
fdiv
hlt
mov
xchg
ljmp
hlt
push
push
or
movsl
and
sarb
and
push
int3
push
imul
dec
xchg
pop
testb
fwait
sub
jp
mov
movsl
push
cmc
jmp
cmc
ja
add
outsl
mov
mov
scas
lea
sahf
and
test
call
in
xchg
stos
xchg
jb
or
scas
sti
dec
add
sbb
ret
adcb
sbb
mov
mov
lcall
adcb
sub
out
dec
adc
les
fbld
shlb
sub
add
add
mov
std
cmp
pop
add
add
testb
add
cli
movl
jle
and
fwait
adc
daa
fwait
push
dec
mov
cwtl
cmpsl
negb
adc
xchg
sub
adc
lock
cld
adcl
dec
add
cmpsb
or
push
shll
mov
jo
fistpl
dec
adc
mov
les
fnsave
cmp
fidivrs
jo
pop
jle
lock
dec
shlb
adc
jo
dec
out
sub
adc
roll
sub
mov
lods
das
popa
mov
in
out
xchg
sbb
sub
dec
sti
pop
sbb
shrl
pop
mov
dec
and
loopne
cmpsl
dec
js
sbb
aaa
aaa
stos
mov
inc
orb
and
mulb
mulb
or
dec
popl
loope
push
dec
pop
mov
adc
mov
cmp
jmp
mov
pusha
int
in
pop
xchg
add
lds
xchg
and
push
or
or
add
add
add
xchg
and
push
mov
adc
sub
mov
pop
enter
into
and
xor
popw
arpl
imul
push
orb
stos
daa
roll
or
jb
test
jns
cmpsb
lret
mov
sub
dec
sahf
mov
jp
xchg
adc
insb
hlt
int3
mov
or
lret
outsl
enter
jle
sbb
xor
int3
sbb
mov
and
cld
rcr
ret
or
cmp
into
gs
std
fisubs
out
pop
push
rol
add
sub
push
addl
push
jge
mov
xor
in
push
dec
imul
in
out
mov
mov
cmp
add
scas
test
pop
inc
mov
sbb
mov
cmp
out
xor
movl
add
add
add
xchg
ficomps
push
inc
dec
cmp
add
add
add
push
dec
mov
lcall
add
cmp
jo
movsl
cmpsl
fs
add
js
and
dec
push
shll
int3
test
out
mov
inc
or
xorb
mov
mov
imul
cmp
and
jae
mov
add
xchg
inc
xchg
hlt
call
mov
cld
push
into
push
addr16
mov
movsb
mov
push
das
cmp
push
scas
pop
jmp
sub
cmp
sarb
loope
lea
mov
push
outsb
cmp
fdivr
jecxz
bound
in
push
andb
aad
iret
inc
fbld
ret
add
pop
sbb
jae
pop
mov
mov
push
xchg
cmpsb
jns
xor
test
aaa
jno
push
and
cli
or
mov
cmp
icebp
iret
dec
test
add
arpl
ja
repnz
add
cmp
add
mov
adc
out
inc
sahf
aam
sti
push
movsl
inc
call
or
mov
jne
pop
rolb
popf
inc
in
mov
js
daa
cmp
xchg
and
xor
push
movsl
or
lock
fwait
lods
fisubrs
pusha
mov
adc
adcb
cmp
or
stos
into
in
rcrl
mov
jge
or
push
hlt
mov
mov
insb
lret
pop
out
inc
hlt
loope
push
ud0
loope
cmp
ljmp
fldcw
enter
out
test
add
mov
js
sbbb
scas
xchg
mov
or
adc
lock
jns
mov
dec
scas
mov
in
jne
mov
or
test
mov
loop
xor
and
xchg
mov
add
add
lock
mov
cwtl
sbb
dec
ljmp
add
push
call
scas
lcall
aam
shrl
movsl
sub
xor
fs
iret
cli
cltd
push
pushf
rorl
add
jns
xor
push
push
dec
push
push
jne
adc
popa
mov
jmp
arpl
shl
mov
pop
mov
or
add
inc
push
es
les
mov
fsubs
scas
cmp
mov
lret
lahf
or
push
push
sub
jg
mov
sub
jecxz
sbb
add
push
scas
lds
add
cmpsb
daa
and
jo
ret
into
jb
push
jp
dec
or
imul
fcomps
andl
push
outsl
mov
cwtl
adc
push
mov
push
hlt
push
and
mov
or
out
jge
movsb
outsb
push
iret
or
pop
popa
pop
arpl
push
stos
frstor
add
sub
sti
pop
jge
div
cmp
ss
inc
loopne
add
testb
add
adc
imul
lahf
sub
in
adcb
xor
pushf
out
or
sub
mov
jp
jmp
popf
xchg
inc
sub
ss
xchg
sbb
lea
movsb
jno
test
aad
xchg
sbbl
jle
mov
ret
push
test
imul
push
pop
mov
jp
ret
ljmp
mov
subl
xchg
pop
jae
add
sub
pop
stos
std
int
adc
popf
lds
test
cli
out
inc
ja
out
pop
outsb
jg
dec
jmp
adc
adc
pusha
lret
inc
jnp
sbb
xchg
fistl
inc
xor
cmp
movsl
jmp
mov
stc
sub
jae
dec
push
int3
dec
sahf
shll
xlat
out
add
pusha
cltd
fsub
std
in
popf
jle
es
push
add
testb
add
add
jmp
mov
lods
xor
push
imul
in
lea
fadd
clc
mov
pop
inc
lret
test
lods
jle
push
mov
jns
push
loopne
mov
insl
jp
and
cmp
cli
js
xchg
adc
and
push
xchg
sbb
ss
jg
lods
cltd
hlt
cmp
movsl
aaa
in
dec
bound
mov
mov
jo
cmp
cli
and
add
movsl
sbb
outsl
dec
jbe
sub
push
lret
repz
into
mov
xor
cltd
pop
cmp
enter
repz
push
icebp
subl
add
sub
cmpsl
lods
loop
lods
adc
cmp
mov
pusha
cmp
mov
mov
sub
dec
subl
fcomi
xor
add
jp
jnp
sti
xchg
jle
popf
loopne
outsb
lods
or
testb
add
sub
xor
add
pop
adc
mov
out
sbb
xchg
iret
faddl
mov
roll
pop
add
test
sbb
lock
inc
notb
test
mov
and
ret
ljmp
out
movsl
adc
inc
mov
js
outsb
and
push
cmc
je
popf
dec
das
xchg
inc
adc
xor
cmc
clc
pop
popf
sbb
rcrl
sub
je
out
jmp
sub
outsl
outsb
or
dec
jle
mov
pop
pop
or
popa
cmp
and
jb
cltd
xchg
add
mov
daa
fbld
arpl
mov
mov
mov
out
adc
jmp
imul
inc
push
or
cmpb
inc
in
cmp
outsl
ss
push
fwait
addb
cmp
cwtl
jno
or
dec
sub
push
inc
out
stc
push
inc
sbb
push
add
mov
push
sti
loopne
cmp
jo
push
adc
inc
add
testb
add
ja
mov
xor
sbb
out
dec
out
jns
data16
or
rcll
fnstenv
cwtl
test
scas
test
pop
push
xor
mov
jae
xor
sbb
inc
dec
repnz
mov
ficomps
call
mov
imul
or
shrl
dec
jle
sar
test
decb
enter
pop
mov
add
lcall
out
les
push
push
and
cmp
loop
lds
ficomps
shll
sub
aaa
push
sahf
jmp
test
pop
pop
sub
inc
mov
push
xor
dec
add
out
cwtl
sbb
push
hlt
addr16
jno
dec
cmpsb
pop
cmp
std
pop
or
cmp
xor
xchg
mov
mov
inc
cmp
add
cmp
and
push
dec
sub
pusha
and
add
add
adc
cmpl
dec
mov
bound
cmpsl
ljmp
cmpsl
arpl
aam
dec
fisubs
dec
mov
mov
mov
add
int3
dec
movsb
fdivrs
aad
push
fsubl
jge
pop
scas
or
and
inc
sub
mov
xor
sub
mov
pop
testb
push
in
bound
cmp
insb
les
fidivs
inc
std
in
stc
decl
mov
jmp
mov
mov
push
push
sbb
pop
add
out
aad
pop
mov
mov
xor
sub
push
add
ffreep
jb
dec
inc
mov
pop
insl
in
test
inc
bound
push
jbe
push
sub
movsb
and
jle
pop
pop
cltd
or
imul
lret
mov
add
cmp
jge
stos
movsl
push
arpl
add
nop
scas
inc
add
testb
add
cmp
xchg
inc
push
inc
inc
adc
fadd
xor
jl
cmp
sub
xor
add
in
add
lret
std
and
pop
cld
sub
leave
xor
jnp
pop
cmp
dec
push
mov
mov
out
lret
fidivrs
sbb
adc
std
mov
sub
rcl
or
xchg
mov
cmp
lods
jb
sti
nop
xchg
jmp
ret
ljmp
mov
out
sbb
pusha
in
jnp
fildll
scas
mov
and
push
inc
inc
out
or
mov
data16
xor
out
rcrl
push
jno
cmp
adc
sbb
cwtl
sbb
dec
sbb
inc
lods
mov
icebp
xchg
repnz
sbb
add
divb
rclb
mov
movb
add
add
add
dec
ja
arpl
push
adc
mov
push
out
mov
pop
jg
ret
jle
ja
jno
mov
mov
out
inc
adc
mov
mov
movsl
adc
nop
xlat
hlt
int3
nop
popf
insb
js
inc
or
inc
lret
sbb
lcall
daa
push
cmp
mov
jmp
cmc
jne
ret
xchg
mov
aaa
push
mov
or
in
and
add
sub
xor
cmp
in
xor
scas
jb
lret
out
dec
inc
or
xchg
lcall
dec
arpl
xor
jns
outsb
xor
xlat
addb
push
fmull
div
imul
cmp
jns
sbb
stos
test
lods
hlt
es
nop
ret
and
sbb
shrl
aaa
xor
dec
xor
dec
or
cmpsb
inc
jno
roll
jl
dec
jbe
idivl
ss
repz
imul
shlb
rol
cmp
fcompl
dec
lret
mov
pop
adc
jo
sub
pop
adcl
aaa
es
pushf
xchg
mov
jg
dec
add
int3
stos
jecxz
sbb
lret
call
jecxz
add
rcll
sub
cld
xor
push
xor
cmp
popa
pop
pusha
iret
ja
in
xor
fs
in
scas
lret
and
lret
orb
ja
js
popa
add
sti
lea
push
inc
adc
sub
scas
aad
pop
inc
enter
jge
out
mov
leave
in
jae
fisubrs
test
pop
outsb
inc
mov
lcall
mov
cmpsb
test
cs
sbb
test
sbb
ror
jle
pop
test
add
outsb
sub
stos
fs
cmp
xor
nop
inc
add
testb
add
inc
bound
mov
and
add
or
dec
pop
stos
mov
xor
push
jp
jbe
adc
pop
test
fwait
jg
cmp
mov
sahf
mov
push
pop
mov
add
ret
pop
cli
lret
gs
int3
lahf
dec
out
xchg
jl
sbb
enter
xchg
mov
outsl
mov
mov
mov
mov
push
scas
push
push
scas
lods
push
xor
or
adc
std
test
adc
jge
mov
out
pop
scas
adc
pop
push
mov
ficoml
jo
ret
mov
into
sbb
dec
cmp
xor
stos
mov
add
popa
pop
cltd
xchg
int
mov
lahf
adc
ds
push
sub
enter
adc
push
int
shr
adc
add
pusha
mov
add
insb
pop
pushf
scas
fistpll
loop
imul
add
les
or
dec
ja
stc
loop
sub
inc
pop
in
sahf
inc
les
or
jge
pushf
dec
addr16
xchg
popa
xchg
push
jb
dec
cli
sarl
jg
sbb
xor
mov
jg
sub
xor
aam
cmpl
cs
xor
mov
inc
sbb
shl
gs
push
cmc
outsb
or
xchg
fwait
cltd
addr16
push
jb
aad
enter
jne
add
pop
inc
or
jae
mov
test
mov
dec
jl
pop
test
and
mov
dec
pop
sbb
push
pop
pusha
test
inc
aad
lock
mov
xchg
insb
sub
hlt
test
jmp
mov
aad
xor
mov
les
test
insl
mov
xor
dec
loopne
or
add
add
cmp
les
fstl
dec
add
testb
add
aaa
inc
xor
cmpl
popa
sub
pop
mov
out
in
enter
or
pop
dec
jo
lea
andb
or
into
sub
cmp
mov
insl
mov
push
xchg
outsb
adc
mov
in
in
gs
pop
popa
fwait
ds
mov
imul
dec
outsl
jecxz
shll
and
push
and
mov
cmp
add
sahf
adc
nop
and
fldcw
leave
into
sub
fucomi
fwait
fwait
pop
stos
jmp
call
mov
jnp
frstor
stc
xor
mov
mov
jge
add
sub
aam
push
hlt
adc
in
xchg
shrb
outsb
sub
test
cmp
jl
mov
mov
mov
imul
out
xchg
jnp
out
or
test
add
add
adc
incl
arpl
into
mov
add
testb
add
or
outsb
cltd
xchg
inc
xor
add
test
nop
add
pop
cmp
outsb
call
in
cmc
rcrl
fcoms
push
gs
out
and
mov
scas
in
adc
iret
ss
or
dec
dec
adc
push
daa
fwait
jbe
outsb
cmpsb
xchg
bound
pushf
clc
loop
mov
lods
out
xchg
sbb
inc
sbb
and
mov
lret
lret
and
bound
cwtl
and
pop
aas
lods
cmp
daa
sbb
lcall
leave
push
sbb
pop
cmp
mov
stc
adc
sahf
insl
repnz
xor
loope
dec
pop
dec
insb
dec
cmp
cld
cwtl
nop
cli
nop
cmpb
vmovupd
stos
leave
push
add
repz
cmp
lods
repz
in
pusha
out
push
enter
dec
add
testb
add
out
dec
ss
xor
iret
leave
xor
lea
inc
xor
pushf
loopne
xor
iret
lods
mov
push
mov
jbe
fdivrl
mov
mov
fcomps
add
sub
shl
aaa
or
jns
mov
movsb
dec
mov
fnstenv
jle
subl
mov
popf
mov
fs
stc
test
ja
test
jle
rcr
cmp
das
mov
adc
shrl
fiaddl
add
xlat
clc
insb
push
add
repz
mov
sbb
scas
fidivs
sub
popf
aas
rep
test
and
loop
or
out
sbb
jns
or
mov
jae
mov
inc
dec
lahf
sbb
xor
lret
test
cmc
repz
scas
pop
repnz
lret
je
cmpsl
mov
add
add
daa
push
cld
push
std
jmp
push
jg
push
pop
sbb
pop
dec
add
testb
add
inc
popa
or
xlat
ret
cmc
cmp
or
cmp
lock
dec
cltd
xor
cmp
test
lods
lods
or
jle
jecxz
clc
pop
cmp
popf
dec
adc
mov
andl
xchg
xchg
dec
jmp
jp
mov
stos
push
mov
sahf
cmp
jb
cmp
inc
cmp
jmp
xchg
je
test
pop
mov
mov
repz
cmpsb
sub
mov
pop
scas
xchg
xchg
mov
scas
out
arpl
in
mov
pop
sub
insl
xchg
add
push
pop
push
jl
ret
inc
pop
cmp
lods
js
hlt
add
adc
and
lcall
jge
adc
dec
pop
or
push
fisubrs
out
dec
xchg
and
fisttpl
orb
out
shll
inc
mov
scas
out
bound
add
add
sbb
dec
push
cwtl
adc
or
cmp
add
add
add
lret
jecxz
mull
aas
rcll
sbb
rorl
js
xchg
je
data16
mov
jno
fxch
mov
adc
pop
movsl
add
ds
sahf
adc
fdivrl
adc
add
fsubs
das
ljmp
mov
cli
iret
adc
xor
cld
cltd
into
cld
sbb
sub
pusha
or
xor
cmovp
fucomip
mov
push
xor
or
jbe
mov
xor
push
ret
ss
push
push
push
sbb
jmp
rcll
dec
cmp
add
and
inc
enter
loopne
xor
sahf
push
jmp
ds
test
add
mov
xchg
outsl
inc
icebp
je
or
jae
loope
fs
fisttpl
push
mov
xchg
cmpsb
imul
stos
add
push
mov
mov
addr16
add
add
xor
cmp
xor
mov
arpl
pop
adc
popa
stc
fucomip
or
mov
mov
adc
or
and
repz
add
notl
sub
push
push
and
sti
mov
or
imul
mov
sub
mov
mov
nop
dec
rclb
push
cmp
pushf
shlb
movsl
and
lahf
xchg
or
movsb
cs
add
push
ljmp
and
ret
orl
xchg
shlb
add
cmp
cwtl
pusha
pop
lods
notl
rorl
pop
mov
pushf
gs
push
movsb
push
addb
xchg
in
mov
fwait
daa
sub
test
leave
mov
insl
sub
lods
pop
pop
mov
jne
outsl
fildll
lcall
xchg
icebp
xchg
mov
add
jg
xchg
lcall
rolb
add
add
add
loope
jae
mov
add
nop
fisttpll
add
lea
mov
popa
xchg
adc
out
xor
pop
pushf
sbb
dec
jmp
sti
je
lods
jecxz
dec
arpl
cmpsl
std
js
xchg
xchg
and
testb
and
lret
test
sti
and
popf
cmp
in
leave
imul
push
hlt
push
lahf
xchg
mov
push
divb
pusha
fxch
out
orl
mov
sbb
jge
mov
int3
dec
inc
adc
rcr
enter
adc
imul
pop
mov
mov
in
cmpsl
sbb
jg
popf
std
enter
cmp
add
pop
aam
icebp
add
nop
xchg
cmc
gs
int
dec
mov
add
cmc
mov
imul
test
mov
decl
scas
jg
or
push
in
add
and
dec
lret
jmp
imul
xchg
aad
adc
ss
add
testb
add
push
insl
aas
adc
leave
sub
xor
stc
cmp
lcall
xor
and
movsb
test
mov
fisubrs
lds
inc
jns
push
jle
jb
push
ja
mov
pop
repz
shlb
xchg
jmp
and
lock
mov
insl
adc
enter
aad
shrl
pop
popf
inc
in
lds
or
mov
xlat
cli
xor
mov
jl
push
inc
mov
push
inc
xor
dec
testl
dec
or
pop
push
adc
in
cmp
dec
cmpsl
mov
sub
dec
cwtl
outsl
mov
pop
jl
neg
lods
bound
dec
es
inc
insb
mov
sbb
dec
psubusb
je
movsb
dec
lods
aas
and
in
int
pop
jmp
add
lds
cmc
cwtl
and
inc
xor
add
testb
add
pop
popa
stc
cmp
push
or
cld
adc
xor
stos
fs
cld
js
sbb
je
mov
push
scas
inc
xor
cmpb
fsubl
inc
into
jae
ja
bound
xor
adc
sub
mov
lds
sub
sbb
pop
pop
cmp
inc
dec
fwait
sub
into
pop
dec
lahf
jmp
test
inc
inc
cmp
cmp
mov
mov
adc
bound
das
or
outsb
xor
cmp
shll
sti
jne
push
jmp
and
and
pop
mov
fwait
jo
push
arpl
addl
lock
mov
cltd
or
insl
imul
adc
sbb
sbb
js
pop
jae
adc
jnp
inc
inc
and
add
jns
clc
mov
sbb
jae
and
add
add
add
ret
addr16
mov
loope
into
xor
mov
mov
loopne
aad
ja
mov
je
test
adc
push
lds
or
or
scas
leave
mov
insl
xchg
cli
fisubl
cld
mov
ljmp
filds
in
and
dec
mov
xchg
lock
pop
pavgb
adc
addl
popa
add
sbb
jno
xchg
repnz
pop
enter
or
cwtl
cltd
movsl
test
xchg
mov
mov
xchg
mov
mov
push
outsb
adc
xor
mov
das
jp
pop
and
and
mov
xor
pop
push
pop
imul
adc
rclb
filds
std
lea
and
scas
imul
js
orb
jecxz
add
ret
jg
mov
sub
sbb
add
add
add
dec
and
leave
ret
ret
mov
sti
pop
jmp
push
push
rcr
rcl
xor
test
stos
hlt
push
lock
push
push
xor
cs
pushf
mov
fildl
mov
jl
adc
jl
pop
lods
or
mov
pushf
sub
std
mov
lods
jne
sub
inc
dec
xchg
mov
mov
out
inc
xchg
mov
pop
fidivrl
ret
popa
push
mov
popf
push
stos
push
movsl
cmp
xchg
and
pop
sbbl
mov
jge
mov
or
mov
inc
popf
in
sub
mov
push
mov
mov
sar
inc
out
adc
cmc
ljmp
imul
int
pop
or
mov
xor
scas
adc
sbb
push
jbe
sub
add
add
das
mov
cwtl
out
daa
adc
push
add
testb
add
fistl
icebp
mov
jge
xchg
lds
jns
mov
clc
out
pop
jecxz
push
cmp
call
cwtl
dec
xchg
negb
sti
cmp
out
mov
mov
pop
insb
mov
aam
mov
cltd
add
mov
fmuls
xchg
lahf
ret
fstpl
jl
aaa
pop
add
push
pop
dec
dec
popl
mov
xchg
das
repnz
sub
push
in
loope
enter
adc
mov
or
ret
pop
andb
xor
popf
mov
ds
or
rcrl
or
leave
imul
frstpm(287
xor
cmp
and
fmuls
mov
loope
fsubp
xor
jo
out
push
mov
repnz
push
dec
popf
pop
mov
cmc
data16
enter
shlb
dec
inc
shll
out
sahf
popa
mov
add
inc
icebp
hlt
gs
push
sub
xor
push
add
testb
add
xor
rcll
mov
iret
mov
jo
add
xchg
das
sbb
jmp
sahf
sub
sbb
push
int3
cld
lds
cmp
jp
test
push
jae
loop,pn
dec
mov
add
sub
cmp
clc
xor
or
dec
dec
popw
pop
push
std
hlt
and
pop
cs
add
pop
cmpl
xor
clc
fidivrl
mov
bound
popf
jp
stos
dec
jb
cmp
inc
fimuls
arpl
shrb
push
mov
or
js
lret
cmp
cmp
insl
or
enter
aad
sar
xor
inc
xchg
sub
jnp
adc
subb
sub
repnz
inc
pop
fnstcw
les
and
xchg
xor
adc
out
cli
push
add
add
aas
gs
repnz
and
in
bnd
push
add
testb
add
repz
fsubr
jl
jns
popl
pop
dec
shlb
dec
rolb
fcmove
jge
pop
cmp
jl
lods
stos
lds
xchg
xchg
lea
fwait
inc
sub
imul
ds
cmp
test
xchg
mov
loop
into
clc
xchg
roll
dec
sarb
sti
xor
mov
push
aad
sbb
lods
or
jg
mov
stc
je
xchg
and
hlt
pusha
arpl
xor
add
xchg
cmpsb
mov
dec
js
xor
mov
loope
pop
sub
mov
sbb
jge
inc
scas
or
pusha
jbe
aas
jns
bound
xorb
addl
cltd
scas
data16
push
sub
lcall
jb
jo
dec
lcall
sbb
push
adc
add
mov
out
fisttpll
mov
lock
add
testb
add
movb
add
sub
fwait
js
fistpl
mov
in
mov
popf
mov
xchg
push
cmc
jp
fwait
test
mov
repnz
mov
dec
inc
push
xor
rorl
mov
movsb
add
jg
ja
jge
in
cld
adc
push
rorl
pop
mov
or
mov
sbb
xchg
aam
xchg
mov
add
sar
xor
or
sbb
in
rorl
sub
push
pop
and
sbbl
iret
sbb
aam
shrl
aad
xlat
xor
inc
mov
dec
out
cmpsb
jno
icebp
cmp
je
dec
push
cltd
repnz
stc
pop
pop
pop
cmp
pop
cmp
std
jae
push
jae
jecxz
int
outsl
rcrl
or
pop
nop
xchg
mov
dec
data16
stos
imul
mov
and
in
xor
add
add
mov
arpl
out
add
testb
add
cld
mov
or
cmp
push
lcall
clc
adc
movsl
pop
mov
add
daa
cmp
pop
int
das
xchg
fmull
call
cs
push
outsl
nop
push
jne
fwait
jle
jmp
loope
jno
cmpsb
cmp
sub
outsb
scas
cltd
popf
jl
mov
mov
sub
jo
push
sbb
movsl
adc
jecxz
popl
or
fiadds
int3
inc
dec
xchg
dec
and
jnp,pt
mov
mov
add
dec
xchg
lcall
repnz
cmp
div
adc
and
sub
mov
lods
aad
loop
popl
xorl
cmc
nop
push
xchg
test
xchg
mov
add
call
int3
lahf
mov
mov
dec
scas
arpl
sub
or
aas
adc
push
sbb
jmpw
fnstcw
mov
jbe
fcompl
add
add
add
xchg
les
in
cmp
sub
sbb
jl
out
and
mov
inc
or
add
les
push
mov
jno
test
mov
push
aam
mov
clc
fildl
push
push
add
xor
push
std
stc
or
les
cld
jge
sbb
push
in
lcall
iret
bound
imul
in
push
enter
repnz
jmp
sbb
jmp
inc
xchg
push
sub
test
daa
xchg
xchg
faddl
lcall
cltd
jp
xchg
inc
push
es
sub
pop
jecxz
pop
xchg
ds
xlat
push
mov
and
das
popf
hlt
jae
xchg
mov
inc
sub
outsl
push
cmp
lods
outsb
mov
and
add
imul
out
mov
arpl
movsb
movsb
js
pop
add
testb
add
mov
aam
xor
mov
or
js
mov
xor
gs
inc
push
daa
out
xor
ficompl
cmp
int
mov
sub
cmp
in
lcall
inc
dec
and
jle
or
mov
cmp
shrl
xchg
cli
scas
movsl
inc
adc
out
mov
xor
or
or
xor
jo
fwait
and
in
inc
xor
out
test
ret
sub
mull
scas
fcompl
fidivrl
movups
add
sbb
nop
addr16
xchg
hlt
leave
mov
push
sbb
push
ljmp
jne
dec
add
cwtl
push
andb
push
and
adcl
pop
or
dec
sub
ss
cli
xor
fcmovu
je
add
js
add
dec
stc
mov
clc
add
imul
add
add
add
jle
rcll
jg
xor
cltd
mov
xchg
add
or
add
fldl
mov
xchg
push
outsl
mov
mov
data16
adc
int
adc
aas
fsubrs
stc
inc
div
repz
cmp
fdivrs
mov
cltd
stos
jl
into
cmp
cmp
insl
daa
call
sti
cmp
xchg
scas
adc
mov
pop
xchg
test
lcall
jl
xor
mov
std
daa
fwait
sahf
push
mov
outsl
mov
sti
add
out
jno
xchg
movsl
xchg
inc
sbb
xchg
aad
pop
in
enterw
push
es
or
lcall
xchg
push
jecxz
in
cmpsb
lods
adc
mov
xor
clc
xchg
jo
jle
mov
dec
shll
cmp
les
ljmp
bound
or
and
jbe
mov
add
jg
cld
jo
hlt
leave
inc
jae
into
mov
add
add
fcoms
out
dec
push
cmc
mov
js
add
hlt
xor
out
fistpl
xor
sbbb
dec
arpl
sbb
ss
mov
fistps
pop
xchg
mov
cmp
ja
dec
sbb
xor
cld
add
lock
fistl
dec
dec
or
out
loope
push
jns
ficomps
jnp
jp
subb
ds
dec
icebp
pushf
aaa
and
mov
in
aam
and
or
push
or
ljmp
push
cmp
sahf
pop
lret
inc
jge
jg
pop
push
dec
inc
dec
push
xchg
shl
ficompl
mov
das
loop
mov
aas
fnsave
gs
ret
inc
test
mov
dec
idivb
sarl
scas
or
sub
addb
add
mov
xchg
mov
mov
cmp
add
add
add
lods
pop
rcrl
lahf
out
jns
adc
mov
out
push
lds
andl
jmp
adc
aaa
xor
clc
lea
adc
xor
out
stos
inc
testb
sbb
in
add
adc
orb
xlat
clc
pop
jl
sbb
aas
ljmp
mov
inc
adc
xor
test
add
mov
adcb
adc
jnp
mul
cltd
xor
mov
sar
jle
mov
xor
cmc
ljmp
les
mov
sahf
push
cmp
ret
pushf
movsb
lcall
fwait
and
xor
insl
repnz
xchg
jp
mov
xorl
xchg
add
fwait
mov
dec
dec
in
jno
jmp
pushf
movsb
push
and
std
cmp
adc
test
add
add
inc
mov
push
push
jmp
sahf
fisubs
hlt
adc
stos
pop
add
testb
add
fidivrl
push
add
lcall
xchg
lret
repnz
ja
push
fdivs
es
pop
push
iret
inc
iret
push
shl
mov
jmp
rcrb
bound
sbb
pop
mov
punpckldq
jmp
lods
add
movsb
inc
lock
cmp
sti
dec
les
jp
icebp
jle
push
ss
in
mov
push
test
divl
jg
imul
jg
sbb
inc
mov
cmp
dec
mul
mov
dec
sar
mov
aam
jecxz
and
stos
xchg
cltd
and
pop
mov
fnstcw
jns
mov
adc
filds
out
push
mov
loop
loope
xchg
xchg
push
jmp
xchg
pop
mov
add
jecxz
into
xor
sbb
push
jnp
inc
int
hlt
add
fsubrl
mov
out
cmp
dec
emms
mov
add
testb
add
ret
add
test
stos
dec
push
pop
inc
scas
inc
and
into
and
ret
dec
cwtl
sahf
pop
ja
mov
xchg
sbb
aam
xor
mov
xchg
jecxz
shrl
xchg
xchg
sub
ds
fxch
jbe
cmpsl
adc
inc
bound
mov
movsl
shl
inc
outsl
push
and
push
mov
enter
mov
xlat
lods
dec
insb
jl
push
andl
sarl
sahf
pop
push
in
mov
inc
xchg
push
or
push
movb
cmpsb
fisubrs
mov
xchg
std
call
xor
fucomip
mov
les
fisubs
imul
popf
jg
ficomps
call
sbb
mov
mov
inc
loope
leave
adc
jg
fiadds
cmp
add
or
push
shll
out
xchg
inc
push
cld
xchg
pop
add
testb
add
cmp
adc
sub
lods
sti
ficomps
out
movsl
pop
add
lret
cmp
mov
inc
clc
lcall
jl
push
mov
daa
xor
push
mov
andb
mov
push
cli
xor
gs
repz
push
or
mov
mov
decl
pushl
xorl
inc
fbstp
ret
into
popf
test
and
jb
std
leave
pop
lods
push
sub
add
pop
mov
ss
rcrl
mov
xor
push
inc
push
or
and
xchg
loop
adc
cmp
jg
or
imul
js
inc
arpl
mov
test
mov
jne
sub
lods
fmulp
lcall
call
pop
mov
cld
loope
mov
pop
sbb
rorb
fnclex
mov
aaa
add
stos
push
lcall
inc
and
or
add
testb
add
mov
sahf
mov
mov
loop
mov
cltd
push
call
test
imul
enter
pop
data16
xchg
pop
dec
lahf
rolb
dec
aaa
test
sub
pop
shrl
out
or
es
and
iret
cmpsl
int3
pop
push
in
pop
dec
push
dec
mov
lea
testl
sub
and
mov
rclb
sub
dec
insb
mov
sub
cmc
addw
ret
rcl
dec
pusha
cld
xlat
test
sbb
jg
mov
add
cmp
sub
mov
adc
cwtl
push
xchg
repnz
cltd
jns
cmp
das
push
xor
insl
stos
sbb
inc
loop
mov
xchg
jmp
jmp
sbb
data16
movsb
aas
repz
add
add
jbe
idiv
imul
mov
xchg
andb
testb
add
icebp
in
aas
inc
adc
sbb
jl
sbb
xchg
loope,pn
xchg
mov
push
or
mov
outsl
xchg
loopne
dec
mov
test
lret
push
push
add
cmpsb
outsb
mov
into
pop
mov
push
fs
mov
add
mov
test
pop
in
fbstp
xor
mov
jge
xor
mov
out
cmpsl
cwtl
jno
fidivs
lret
mov
mov
sbb
or
jo
out
adc
movb
mov
cmp
sub
jmp
sbbb
sbb
jmp
xor
test
push
aam
add
addr16
jge
cmp
loopne
shl
jmp
add
mov
xor
fcompl
aas
mov
dec
push
jo
dec
sarb
inc
dec
mov
add
jae
fwait
cmp
dec
data16
mov
add
testb
add
lret
xor
test
sub
adc
mov
mov
dec
adc
push
mov
inc
add
iret
push
insl
lahf
pop
int3
sub
enter
mov
or
hlt
lret
ljmp
in
or
inc
test
mov
sub
cmp
aam
std
cld
xchg
dec
sub
dec
addl
push
call
mov
and
rolb
jnp
mov
xor
call
aam
jmp
repnz
xor
je
ret
mov
sub
outsl
adc
jp
fwait
inc
ret
not
nop
mov
cltd
insl
jae
mov
je
jp
dec
aam
insl
es
in
scas
cmp
jecxz
cmp
xchg
sarl
lea
pop
mov
test
out
out
bound
lret
lahf
iret
mov
movb
xor
adc
add
clc
mov
or
insb
push
shrl
add
testb
add
sub
mov
mov
loop
mov
mov
into
and
movsb
shl
mov
dec
imull
push
mov
xor
aad
rclb
push
mov
add
outsl
mov
add
fs
pop
dec
lea
leave
ds
rcr
outsl
int
stc
ds
pop
cmp
cmp
inc
pop
out
jmp
xor
mov
dec
xor
out
repz
jp
or
xor
sub
mov
pop
cwtl
adc
fdivrl
jae
mov
sbb
repz
addr16
clc
push
add
mov
fldenv
outsb
in
addl
pop
call
aas
pop
xor
dec
sub
sub
lds
xlat
lret
or
dec
pop
pushf
stos
daa
lods
fwait
mov
sbb
cltd
dec
xor
add
scas
xchg
push
adc
out
mov
mov
add
testb
add
mov
sub
xchg
cmpsb
dec
mov
fs
ja
jne
lea
jmp
ja
mov
push
mov
filds
scas
loop
out
jp
cmc
push
sbb
jnp
jae
je
in
add
push
xlat
test
sbb
hlt
mov
xor
sub
mov
int
lea
inc
clc
ljmp
cmp
adc
out
inc
test
rcl
in
int
fists
pop
lock
xlat
push
pop
cmp
xor
daa
cmp
push
inc
inc
fildl
arpl
or
sub
int
inc
pop
fdivrl
and
jg
push
dec
mov
sahf
in
mul
ret
rcrl
sub
pop
mov
enter
xchg
adc
fs
cmp
jns
ljmp
pushf
iret
mov
fiaddl
add
mov
int3
rorb
pop
popf
add
testb
add
push
lret
cmpsb
int3
push
pop
cmpsl
or
lock
push
fistpll
jns
jle
pop
lcall
lods
outsl
sbb
mov
leave
roll
fdivr
pop
mov
sbbb
pop
sahf
cmp
jecxz
into
cmp
xchg
cltd
sub
and
out
pusha
adc
dec
dec
mov
std
sub
xchg
out
mov
cmp
pop
rclb
adc
test
xor
addr16
cmp
imul
ja
pop
or
or
pop
jno
xchg
lock
adcl
add
sahf
pop
clc
popf
incb
and
insl
xchg
test
pop
jg
subb
stos
cmp
jge
mov
and
mov
jo
adc
enter
push
aas
xor
aas
inc
jmp
xor
add
mov
cmp
add
testb
add
je
inc
cmp
mov
jecxz
or
mov
test
call
mov
jmp
mov
sbb
test
and
fs
sahf
or
push
sbb
and
pop
into
movsb
sbb
xchg
outsb
dec
insb
inc
xor
data16
in
xchg
add
cmp
sub
pushf
rorl
clc
nop
sbb
iret
xchg
imull
lcall
inc
lds
jg
mov
jge
aaa
mov
cs
aad
or
xchg
int
or
sbb
cltd
sahf
sbb
ds
loope
add
xor
push
call
jmp
sbbl
sub
xchg
adc
inc
mov
push
xchg
shl
inc
lret
repz
ss
icebp
shlb
mov
or
add
fsubl
mov
lods
push
adc
data16
testb
add
add
add
pop
loopne
es
xor
push
cmp
roll
subl
cs
cwtl
pop
pusha
inc
inc
hlt
dec
es
dec
aad
xchg
and
fimuls
test
mov
popa
daa
mov
cmp
pop
mov
scas
fisubl
sub
es
addl
loope
mov
xchg
sub
or
cmp
mov
gs
xor
mov
ds
mov
push
imul
es
adc
icebp
dec
sbb
std
loop
repz
shlb
in
enter
push
test
mov
jne
lods
insl
mov
popf
add
pop
movsl
fucomi
fwait
fistpl
mov
inc
mov
testl
mov
pop
imull
push
cmp
mov
add
xor
mov
and
cmp
add
testb
add
test
adc
sub
out
sub
mov
push
cmp
pop
rol
pop
imul
add
jae
aaa
mov
dec
loope
sbb
mov
je
dec
ds
push
out
dec
data16
popf
rolb
jae
mov
jnp
aaa
push
cld
ud1
xor
sub
push
pop
adc
push
cmp
sbb
test
inc
mov
mov
and
lods
loop
sub
sub
ja
push
inc
shll
imul
stc
mov
mov
fistpll
push
and
jno
into
dec
popf
imul
ja
stos
sbb
out
pop
sbb
cmp
jbe
scas
xorl
repnz
pop
add
bound
cmpsl
outsb
xchg
inc
pop
dec
jns
aas
pushf
icebp
add
mov
mov
sub
xchg
adc
imul
add
clc
enter
sbb
or
into
clc
int3
jmp
cmpsl
fsubs
xor
pop
cltd
outsb
ret
inc
mov
cmpsl
bound
jg
adc
insl
repz
addr16
jno
icebp
xchg
mov
je
pop
or
mov
mov
lock
adc
dec
sbb
push
cmp
pop
dec
enter
jmp
mov
push
leave
mov
loope
aaa
cli
addr16
and
mov
mov
push
enter
jno
divb
xchg
xor
mov
addr16
xor
js
shlb
push
repnz
rcrb
push
add
jns
lods
xchg
fs
adc
adc
popf
addr16
std
pushf
cltd
or
pop
in
xchg
pop
lds
ret
cmp
add
out
into
push
cmp
sub
out
fcmovnu
add
push
add
add
add
dec
push
push
sbb
aaa
out
dec
test
insb
sub
je
aad
inc
or
sar
push
xchg
push
daa
inc
xchg
sti
pop
mov
push
xchg
lret
fs
jbe
sbb
dec
sbb
mov
dec
adc
les
movb
out
je
fdivrl
popf
repnz
fs
and
loop
in
mov
ret
mov
movsl
mov
loope
leave
mov
pop
mov
outsb
xchg
dec
cwtl
out
negb
mov
push
push
push
cltd
rorl
xor
ret
test
arpl
mov
mov
cmp
jne
push
test
inc
jecxz
jne
xchg
add
inc
ffreep
add
mov
inc
rorb
sub
push
push
mov
dec
aas
loop
insl
mov
enter
dec
popf
cmpsl
out
in
addb
add
xchg
inc
shl
xlat
mov
fisttps
jo
out
adc
imul
testb
add
insb
pop
and
aad
add
lret
pop
loope
cli
xchg
mov
repnz
in
mov
insl
jns
aaa
mov
add
mov
pop
call
dec
fdivrl
das
pop
mov
mov
aaa
xor
mov
push
pop
pop
movsl
in
test
push
jmp
or
stos
ret
add
push
jle
push
divb
lods
test
mov
jno
in
daa
jecxz
lret
mov
cmpsl
push
pusha
out
inc
testb
and
aam
sub
es
sbb
adc
int
stos
leave
icebp
int
out
add
jo
int3
and
push
into
xlat
dec
lods
dec
adc
sub
add
ficoml
loopne
push
fcmovb
fidivs
pop
mov
push
add
rcl
jb
cmpsl
and
mov
mov
mov
sbb
leave
scas
mov
push
cmp
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
adc
add
testb
add
shlb
add
js
jns
mov
jg
rorb
inc
incb
ja
pop
out
add
in
iret
dec
inc
adc
cwtl
mov
inc
pop
cmpb
insb
sub
stos
arpl
jo
sarb
lret
ss
cld
jbe
das
loop
fadd
xor
add
adc
fistl
movsl
scas
imul
lret
mov
cs
jmp
mov
jge
inc
pop
cmp
cmp
mov
clc
out
mov
and
lods
lret
gs
sarl
push
das
mov
jbe
add
lret
mov
cmp
pop
xor
lods
int
xor
jmp
jmp
in
mov
xchg
iret
sbb
orl
pop
xor
in
adc
insl
in
xchg
bound
add
sahf
pop
testl
dec
insb
rorl
insl
add
testb
add
jo
jns
cmp
push
loope
into
ss
xor
jmp
mov
leave
int3
insb
mov
cmp
mov
in
jp
in
mov
and
leave
fsubrs
scas
outsl
mov
sub
insl
mov
fdivp
inc
int3
cwtl
adc
insb
cmp
dec
hlt
and
jg
pop
imul
js
sub
mov
and
scas
mov
xchg
jp
inc
or
dec
push
stos
pop
and
pop
fdivl
mov
dec
xchg
sbb
loop
sbbb
scas
cmpsl
inc
sbb
xchg
jecxz
ret
js
aam
fcomps
sahf
gs
xchg
jns
sub
jg
cltd
mov
fidivrl
mov
sub
mov
and
mov
data16
cmp
xor
push
das
sbb
jmp
push
add
inc
pop
mov
movsb
inc
gs
into
mov
dec
add
add
add
add
sub
dec
mov
loopne
jo
push
add
pop
popf
lret
test
jnp
aaa
scas
or
testl
rorl
dec
mov
leave
fs
pop
fidivrl
fildll
add
filds
rcr
movsb
scas
and
xchg
ss
outsb
xchg
lea
clc
xor
lods
adc
lods
inc
fs
ret
sbb
or
or
mov
sbb
incb
mov
sub
arpl
sbb
add
adc
cwtl
xchg
jl
adc
outsb
lods
jne
lods
ljmp
popa
notl
subb
jle
ss
jbe
movsl
pop
shlb
shll
imul
pop
push
dec
inc
mov
mov
adc
jmp
push
in
adc
or
sbb
pop
jmp
push
les
and
push
xor
cltd
jg
aad
imul
add
add
repnz
movsb
jle
mov
mov
imulb
add
add
add
add
mov
inc
dec
fisttpl
lds
sub
iret
test
imul
jne
jbe
lods
mov
fsubs
scas
insl
fidivs
daa
in
pop
clc
pop
popa
test
sahf
jmp
cmp
and
adc
jne
pop
repnz
cmp
xchg
popa
ror
mov
add
std
rol
loop
test
mov
adc
pop
pusha
adc
frstor
mov
lret
and
inc
mov
jmp
orb
jne
aam
outsb
add
xchg
lfence
xchg
in
scas
movsl
xchg
fs
insb
jp
mov
aaa
sbb
and
lretw
xchg
push
dec
ds
out
fmull
cwtl
cwtl
add
dec
test
js
push
stos
dec
aam
sub
test
mov
leave
xchg
jb
in
sub
daa
std
out
mov
xlat
loope
add
jmp
sub
lods
adc
add
add
add
jmp
adc
bnd
cli
movsb
cltd
in
lahf
xchg
or
call
into
aas
out
xor
add
cmp
cli
add
or
mov
rcr
inc
insl
loopne
icebp
faddl
outsl
daa
scas
adc
orb
mov
push
cmp
leave
mov
push
push
lcall
sub
mov
mov
mov
fs
js
push
sbb
popf
imul
cmp
movsb
shlb
rolb
es
inc
push
add
push
loopne
ds
jmp
sahf
dec
sub
loopne
je
and
mov
cmpsb
jno
fs
mov
jns
mov
call
xchg
test
mov
or
pop
or
pusha
dec
inc
cmp
imul
add
shll
fnstenv
dec
mov
mov
testb
add
sub
outsl
push
insb
or
pop
inc
cmc
cmp
or
or
cmp
ds
sub
xchg
in
push
or
js
sbb
xor
cmp
or
out
lret
sti
inc
push
mov
and
call
adc
int3
push
aaa
push
adc
mov
and
or
nop
adc
es
repnz
out
gs
dec
sbb
mov
mov
cwtl
neg
and
mov
ficoml
test
sbb
scas
xchg
int3
push
dec
push
mov
mov
xlat
sbb
aas
or
or
stc
mov
xchg
in
jp
cld
lds
sub
inc
in
adc
xchg
lahf
mov
or
mov
loop
cmp
sbb
dec
sbb
arpl
cmp
add
cld
je
jbe
jmp
lea
xchg
aam
ljmp
add
add
xchg
adc
mov
iret
into
rclb
push
and
xchg
add
je
call
push
mov
add
xor
dec
mov
adc
int3
ficoml
insl
jmp
je
mov
pop
ljmp
stos
push
repnz
pop
push
push
sbb
fs
icebp
daa
inc
hlt
dec
enter
into
pop
sti
inc
fwait
push
cmp
sub
scas
lods
sub
adc
mov
outsb
cmp
jo
inc
loopne
inc
dec
jns
sbb
fcoms
test
icebp
aaa
dec
sahf
orb
jl
xchg
lods
cmc
mov
fadds
cltd
out
mov
pop
cmp
add
cwtl
inc
stc
xor
add
add
lds
aad
pop
fistl
cmp
lock
addr16
inc
js
or
mov
mov
fcomps
outsb
into
test
cmp
add
push
cltd
jmp
fcmovnbe
cld
xor
xchg
and
mov
testb
add
mov
pop
push
repnz
cmp
pop
stc
mov
push
fstl
add
or
loop
cmp
mov
shrl
imul
cs
or
pop
mov
dec
imul
mov
mov
sbb
jbe
das
in
mov
mov
mov
into
mov
jge
sub
cmp
int
data16
ds
cld
mov
faddl
into
loope
mov
dec
clc
sbb
push
and
adc
mov
in
add
repz
sbbb
xor
adc
pop
pop
popf
cmp
sbb
das
mov
loopne
sbb
lds
fisubs
jl
fcomip
mov
push
pop
mulb
cwtl
repnz
sti
sub
push
pop
cmp
into
mov
dec
mov
daa
add
mov
mov
push
jg
pop
jne
dec
and
dec
les
add
add
add
xor
fnstenv
ja
pop
outsb
ja
cmp
fiaddl
mov
adc
cmpsl
mov
icebp
and
call
or
clc
mov
push
jl
and
push
mov
xchg
out
cmp
push
leave
fcmovb
push
jae
xor
inc
xchg
jae
jl
aam
stc
dec
data16
jae
fxch
or
lret
jge
or
out
loop
mov
pop
adc
sti
ja
jo
dec
lds
add
rolb
popf
or
xor
fwait
push
inc
outsb
jp
add
int3
add
movsb
push
lret
mov
out
stc
movsl
push
push
ss
jl
lods
push
stc
shl
movsb
sub
and
inc
dec
mov
mov
lods
or
sub
add
push
inc
add
iret
mov
fucomip
addr16
adc
mov
add
add
mov
fidivl
and
push
pop
sub
cs
pop
pop
ret
pop
inc
xor
mov
push
mov
fs
sbb
adc
xchg
xorb
pop
bound
idivl
jmp
movsb
jbe
imul
adc
push
push
enter
lds
xlat
clc
sub
and
fnstsw
mov
sbb
fsts
fidivrs
and
cmc
fistps
push
fs
dec
fmuls
or
push
lcall
pop
out
adc
sbb
test
add
push
xchg
add
pop
mov
js
cld
add
jbe
xchg
cmc
out
and
arpl
in
stos
aam
ficoms
or
pop
pop
push
jae
das
and
push
adc
push
sbb
sub
add
imul
dec
out
iret
jmp
cmpsb
add
loop
jne
add
add
add
cmp
jle
scas
dec
leave
into
pop
inc
icebp
mov
cmp
fidivs
pushf
mov
jmp
mov
adc
je
mov
scas
fidivs
ja
jae
push
dec
lock
sub
decl
jno
cmp
xchg
out
mov
jg
in
ret
sbb
mov
mov
push
aaa
push
sbb
outsb
push
sbb
test
inc
data16
xor
inc
jg
mov
inc
lahf
jg
jae
inc
mov
loopne
mov
xor
out
outsl
and
lods
scas
push
fadds
inc
loope
or
mov
and
andb
adc
ja
mov
mov
std
sub
pop
adc
xor
test
jb
les
jns
xor
push
inc
lcall
test
add
std
cmpsb
pop
lods
jne
xchg
sti
and
pop
cmpsb
jbe
add
add
add
add
ljmp
pop
divb
in
repz
test
xchg
repnz
lcall
sub
or
rolb
inc
fmull
jmp
add
dec
jne
mov
pop
mov
dec
push
out
stc
cltd
mov
shrb
loopne
imul
fcomps
std
push
clc
mov
mov
dec
fucom
xchg
rorb
cmpsb
sbb
movsl
loop
and
ljmp
shlb
pop
pop
sar
popa
mov
xlat
addb
icebp
cmp
push
pop
push
pop
loopne
imul
xor
dec
addr16
in
cltd
enter
sub
sbb
sub
sbb
addl
mov
or
xchg
xchg
xorb
sbb
pop
xor
lea
xchg
out
push
sub
sbb
add
neg
std
stc
idivl
jl
ja
add
add
add
xchg
xlat
je
leave
aaa
adc
xor
add
sub
daa
or
shlb
pop
push
pop
std
mov
addb
int3
mov
sar
cmpsl
mov
int3
jl
push
das
movsl
popf
sub
enter
sbb
repnz
aaa
mov
adc
sub
or
dec
pusha
icebp
jns
out
pop
gs
ljmp
testb
sub
loopne
push
in
jne
lret
jmp
mov
out
and
test
loopne
lahf
push
pop
imul
jb
sbb
mov
orl
and
pop
popa
mov
stc
fstpl
shrb
ret
jns
mov
adc
lret
stos
and
jle
cmp
push
push
cld
loopne
sub
dec
xchg
test
add
sbb
mul
fcoms
mov
std
scas
mov
push
stos
inc
dec
jnp
cmp
mov
sbb
mov
popf
push
add
push
subb
in
push
mov
rorb
add
testb
add
pop
sub
push
fistpll
int
pop
scas
push
lock
dec
and
sub
inc
xlat
or
pop
cmpl
jnp,pt
xor
jno
pusha
rcrb
mov
jge
addb
pop
xchg
inc
pop
lea
ret
neg
fidivs
rcll
sub
in
into
mov
add
mov
sub
push
mov
inc
pop
cwtl
pop
aaa
ja
rolb
push
scas
sbb
mov
and
cmp
idivl
cmp
rep
enter
jge
adc
dec
xchg
mov
add
inc
roll
lods
inc
pusha
dec
int3
stos
out
xchg
scas
shlb
pop
cmp
mov
and
repz
out
iret
pop
xchg
stos
outsl
repnz
lcall
loope
mov
scas
or
pop
dec
fcmovu
js
add
into
pop
stos
push
add
lcall
out
dec
jg
aad
sti
std
inc
mov
add
add
add
xor
push
adc
je
lea
dec
mov
js
xchg
ret
push
hlt
nop
or
js
jp
std
test
cmp
mov
insl
mov
js
popf
xchg
mov
sahf
mov
jl
pop
fldt
insb
add
addr16
mov
or
or
cmpsl
enter
movsb
in
xor
push
xor
leave
dec
add
cmp
testb
inc
loope
aas
dec
xor
stc
sub
and
ret
sub
jp
sub
std
cmpsl
sbb
xor
dec
jae
ficoms
outsl
fsubp
and
shll
out
out
scas
sub
adc
xchg
rclb
xchg
imul
out
and
inc
pop
xor
cmp
fists
mov
clc
push
xchg
lcall
xchg
int3
add
daa
sub
ja
mov
paddq
adc
jle
add
testb
add
rcr
xchg
dec
or
or
ret
pop
xchg
push
insb
or
inc
call
movsl
wbinvd
or
pop
cmp
arpl
hlt
add
fcompl
mov
and
add
mov
mov
mov
push
int
filds
outsl
rorb
fwait
mov
ja
adc
sub
cmovb
insb
xor
mov
pushf
icebp
xor
jo
xchg
insl
mov
xor
mov
fdivrl
and
popa
inc
jl
ret
fcomip
in
test
arpl
or
push
or
push
pop
test
and
sub
into
mov
out
and
lret
out
mov
jp
xor
pop
outsb
in
sbb
push
daa
repz
scas
aam
test
add
int
mov
jnp
jge
xchg
neg
rcrl
jnp
add
add
add
mov
data16
lahf
out
or
mov
and
sbb
sbbb
or
pop
stc
sub
sub
push
lea
fisttps
xchg
aam
rclb
push
xor
nop
sbb
or
xor
cmpsl
loop
andb
lods
mov
cmpsl
and
pop
loop
lea
push
lahf
popf
sub
lods
sbb
std
mov
jmp
mov
lret
mov
daa
add
js
cld
add
faddl
sbb
je
xchg
aam
nop
vpmacssdd
mov
cmp
fsub
int
int
pushf
lret
inc
dec
into
loop
shlb
cmpsl
sti
cmpb
fidivrs
jp
fwait
out
cmp
scas
js
push
loop
adc
es
dec
andb
jecxz
add
cli
xchg
jle
mov
mov
out
lahf
push
add
testb
add
xlat
sti
roll
pop
shlb
in
movsb
push
sbb
xor
int
test
pop
in
push
into
xchg
mov
add
sub
push
in
adc
xor
test
mov
loope
sub
lea
xchg
and
rcll
xor
dec
xchg
sub
pop
andb
cmp
pop
mov
movsl
nop
xlat
scas
xchg
jb
cmp
xchg
stos
or
pop
mov
int3
popa
sarb
cmpsb
clc
repz
push
outsl
cmp
and
data16
jle
test
int3
pop
aas
pop
mov
sbbl
inc
mov
dec
xchg
movsl
sti
sub
sub
hlt
adc
popa
push
jo
mov
int
orl
jmp
push
sub
cmp
pusha
aaa
and
push
lods
rcl
mov
into
adc
add
fwait
jnp
aad
gs
into
add
or
pusha
jge
add
add
add
aam
mov
push
js
push
cwtl
subb
rcr
out
inc
xchg
fisubrs
aaa
leave
jns
and
jne
nop
bound
aaa
movsl
jns
dec
iret
idivb
push
imul
push
jbe
sbb
xchg
jno
cmp
add
in
mov
pusha
lods
scas
call
xor
repnz
dec
fisubrs
pop
dec
mov
sbb
stos
mov
and
callw
ljmp
dec
jle
ja
mov
je
xor
pop
cmpsb
add
push
sub
jae
fnsave
cmpsb
jns
add
jecxz
sub
sub
mulb
jle
cmc
outsb
imull
push
mov
xchg
mov
cli
pop
cmp
pop
in
stos
aad
xchg
mov
sub
push
stc
enter
inc
pop
js
jae
sbb
adc
add
std
mov
enter
js
jle
add
add
add
mov
xor
call
jp
movsb
jns
iret
inc
imul
fcmovne
in
sbbl
jle
bound
push
dec
mov
mov
lods
out
mov
imul
mov
adc
dec
fisttps
push
lcall
leave
cmp
dec
adc
pop
aas
jno
xchg
negl
sbb
mov
mov
daa
negl
mov
inc
and
lahf
rclb
into
sbb
int3
ljmp
xchg
sti
int
sub
test
mov
das
add
jp
dec
ret
or
inc
aad
in
mov
out
xchg
xchg
aam
cmp
and
in
loope
lahf
jle
pop
and
insb
loopne
xchg
int3
mov
mov
mov
mov
shrl
sbb
and
push
rcll
mov
loope
pushw
lds
mov
add
fstl
out
mulb
rcr
dec
jg
add
add
add
pop
fisubrl
enter
cltd
push
add
jle
bound
and
adc
or
cld
xor
cmp
mov
call
sbb
outsl
sbb
xor
ds
sbb
mov
stc
movsw
repz
mov
jne
cmpsl
ljmp
sub
mov
inc
sub
es
jg
or
test
test
adc
push
add
xchg
out
sbb
or
cmp
rcll
pushf
jae
mov
sub
in
pop
cmp
aam
push
jl
data16
shll
cli
sbb
xor
js
enter
stc
cmp
adc
lret
cmpsl
pop
or
xor
mov
fwait
arpl
stc
sbb
and
jmp
pop
popl
add
bound
in
pop
test
mov
add
testb
add
mov
fmuls
es
stos
les
cmp
push
cwtl
sbb
gs
push
sahf
adc
mov
pop
sbb
fidivl
push
add
pop
xor
inc
cmpsl
je
xchg
test
lcall
sub
inc
je
xor
jp
in
mov
inc
int3
repnz
dec
adc
out
mov
and
insb
test
leave
test
ja
fists
leave
iret
cmpsl
lret
xor
out
or
in
pushf
loop
orb
sub
inc
pop
es
dec
dec
test
jge
sub
xorl
mov
cltd
xorl
xchg
sub
cmp
sub
stos
mov
ljmp
jne
push
lds
sub
cmp
adc
pushf
mov
add
add
divl
bound
mov
addl
add
ds
call
mov
sub
repnz
cmpsl
xor
fstpl
xchg
loope
adc
inc
add
xchg
js
sbb
stc
mov
mov
aad
rcll
cli
fidivs
mov
sti
cmpl
shrl
mov
mov
jle
cmc
sahf
xorl
inc
call
imul
jecxz
pushf
out
imul
mov
add
mov
jp
dec
pop
stos
mov
cli
leave
mov
ficomps
push
or
and
pop
jnp
popa
jp
aam
mov
mull
sbbl
test
mov
sub
sbb
enter
inc
in
adc
loopne
pop
fcmovbe
lods
pop
sub
sbb
or
push
imul
push
mov
mov
push
ljmp
mov
cmp
aas
out
negl
roll
add
fisubs
mov
push
mov
loope
addb
testb
add
popf
stos
mov
ret
cmc
push
xchg
movsl
loopne
out
pop
loope
xor
sub
fisttpl
rcrl
sbbl
sbb
xor
inc
sti
adcb
sub
test
dec
fadd
xchg
scas
lahf
sub
inc
sbb
or
mov
enter
jle,pt
das
outsb
shl
mov
imul
mov
add
test
mov
push
or
mov
adcl
pop
fistps
pop
xchg
or
push
cmpxchg
pop
xchg
pop
inc
dec
or
nop
and
xor
pop
sbb
pop
lret
inc
dec
push
mov
cmp
mov
fstpl
fldl
and
jmp
adcb
inc
xlat
pop
cmp
int3
out
xor
int3
stc
cmpb
jo
add
shlb
mov
mov
addl
testb
add
mov
in
mov
sub
dec
or
call
fnsave
dec
lahf
xor
cs
or
jge
cmp
fldcw
sbb
mov
int3
je
add
stos
push
sbb
cmp
cmp
mov
sbb
ret
jecxz
sub
outsl
mov
iret
repz
sti
xor
xchg
test
fsubrs
pusha
mov
test
adc
or
pop
dec
mov
aas
add
jecxz
bound
lret
dec
movsl
sbb
movsl
jge
fcoms
and
loop
mov
outsl
or
xchg
mov
std
cmp
fcoms
or
mov
int
out
xchg
push
loopne
and
iret
call
push
aam
push
out
lock
jne
std
mov
pop
cmpl
fs
scas
and
loopne
add
orb
jle
insb
xor
push
loop,pt
test
add
add
add
popf
cli
daa
es
push
fmull
jo
jmp
jbe
or
lcall
popa
ss
cmpsb
nop
dec
mov
lret
xor
xor
insb
sbb
xchg
call
outsl
pop
imul
mov
push
or
ret
out
hlt
cmp
fwait
jb
mov
jb
jle
jno
lcall
loope
mov
andl
mov
cmp
es
es
shl
addl
xor
sti
addr16
test
xor
or
sti
stc
inc
mov
fstps
xlat
cmp
cmp
jns
push
pushf
mov
ret
dec
sub
fistpl
fs
out
jnp
push
loope
test
adc
nop
jmp
sbb
jle
mov
cmpb
cmc
inc
push
mov
add
and
or
arpl
add
xor
jo
ja
std
stos
lods
and
fstpl
pop
cld
adc
add
ss
aad
sbb
sbb
inc
sub
jbe
mov
lea
lret
inc
mov
shlb
dec
sub
adc
push
jmp
out
adc
xchg
push
dec
movsl
jns
and
fdivrl
das
and
xlat
sbb
jecxz
jmp
jno
pop
stc
test
icebp
push
fcmovne
mov
into
pop
lcall
or
shrd
bsf
std
fisttpl
shll
cmpl
jl
rcll
aas
test
push
mov
mov
orb
je
data16
inc
out
ds
fsubl
dec
dec
sti
stos
xchg
repz
aam
cmp
inc
add
sbb
and
inc
fidivs
cs
cmp
in
aad
mov
mov
push
and
add
pushf
and
dec
sbb
xchg
add
push
test
addr16
pop
pop
cmpsl
aam
add
mov
cmpsb
arpl
je
icebp
sbb
add
add
jmp
out
stos
mov
mov
push
in
xchg
lret
and
jns
mov
sbb
aas
jb
je
insb
cli
and
jb
sub
add
fildl
adcb
lret
push
sbb
jp
ja
imul
push
xor
loopne
movb
roll
jl
or
add
sbb
mov
xor
push
lock
rcr
adc
lods
mov
cmp
out
jecxz
in
inc
mov
pushf
dec
pop
pop
sbb
mov
outsl
out
sbb
mov
movsb
flds
in
adc
mov
lcall
lret
mov
imul
mov
and
sbb
adc
jo
xor
cmpsl
pop
femms
loop
dec
push
mov
mov
xor
cli
mov
sub
add
testb
add
fwait
sbb
stc
lahf
das
inc
imul
fmuls
mov
loop
bswap
jle
sub
mov
jg
or
and
adc
fldl
and
cltd
scas
lahf
scas
out
lock
and
xchg
js
inc
outsl
push
lods
xchg
mov
aam
mov
mov
lcall
ds
pusha
xorl
sub
clc
push
call
sbb
mov
hlt
loopne
mov
sbb
push
lahf
out
stos
push
stos
bound
jge
xchg
mov
lea
sub
mov
mov
mov
cmp
loop
dec
mov
xor
and
adc
aad
int
imul
mov
pushf
ds
cmp
pop
jno
int3
clc
push
pop
nop
sbb
popf
incb
add
test
ljmp
and
int
xchg
add
add
add
mov
mov
imul
call
ret
cld
xor
jecxz
pop
inc
cmp
imulb
cmpsb
pop
xchg
pop
xor
sub
mov
mov
mov
and
aam
xchg
mov
in
testb
ds
sub
sti
xor
mov
int3
aam
sbb
jo
stc
or
and
lods
inc
add
jae
mov
fnsetpm(287
pop
outsb
mov
rcll
sub
mov
das
movsl
mov
mov
inc
fidivrl
sbb
into
push
lcall
aaa
add
pop
inc
test
pop
xchg
fiaddl
dec
mov
jns
dec
push
dec
clc
mov
mov
out
mov
aad
ror
jnp
shll
call
cs
xor
sbb
mov
bt
and
mov
jb
add
testb
test
mov
call
add
add
or
bound
dec
aaa
lret
movsb
into
xor
dec
out
fists
jnp
sub
push
and
sub
out
sub
cs
push
cmp
dec
movsl
mov
scas
xor
and
adc
lret
jp
icebp
and
test
icebp
aaa
and
addr16
das
es
test
inc
dec
dec
dec
mov
jecxz
pusha
mov
ss
or
pushf
movsb
jns
pop
dec
cmp
mov
xlat
mov
add
sub
cmpsl
pop
jl
xor
jnp
fs
push
lret
pop
imul
lds
aas
sbb
xor
repnz
push
aam
std
xor
mov
aaa
dec
xor
bound
movsb
cmc
out
fs
outsb
cmp
mov
adc
add
sub
sub
or
xchg
out
and
mov
lock
adc
add
add
lcall
scas
fmull
rcr
mov
add
add
add
inc
data16
mov
push
nop
inc
addr16
mov
jle
mov
jle
mov
xchg
loope
hlt
leave
sarl
pop
sbb
arpl
cld
cmp
js
loop
sbb
in
imul
jnp
mov
sub
out
js
push
push
push
xor
or
imul
add
pop
test
cmpsb
add
daa
mov
push
adc
int3
mov
ja
cmp
mov
movsb
dec
sbb
fistpl
inc
stos
mov
xor
les
int
bound
andb
pop
lret
fwait
outsl
inc
addr16
push
and
push
sub
fsubl
lock
inc
or
loope
ret
mov
adc
jecxz
fisttpl
xor
fadds
lods
push
lahf
aam
inc
xor
movsl
std
loop
call
ljmp
add
add
mov
idiv
fst
inc
sahf
pop
and
xor
mov
add
add
add
lahf
in
jns
or
popf
jne
hlt
test
hlt
adc
jl
into
out
divb
lahf
xchg
sub
xchg
insb
test
adc
push
dec
jp
fmul
dec
fnstenv
out
xchg
bound
ljmp
gs
sti
adc
loope
adc
xchg
rorl
ljmp
wrmsr
xchg
and
and
out
jp
add
add
stos
lods
shl
pop
movsl
jle
push
iret
adc
js
and
scas
mov
push
or
nop
and
subb
es
cli
and
popa
cli
mov
pop
stos
in
mov
icebp
adc
test
aam
xor
xor
adc
inc
jl
sbb
fwait
scas
loop
out
inc
push
jmp
lods
mov
sbb
cwtl
aam
test
fimull
mov
bound
les
add
call
and
je
jecxz
lret
add
add
add
adc
cmp
inc
jge
cld
inc
inc
xchg
dec
dec
adc
pusha
xchg
mov
loope
xchg
mov
xchg
pop
cmp
data16
mov
pop
insb
ja
mov
jbe
xchg
leave
into
add
repnz
out
xlat
xor
rcll
movsl
jmp
sub
lock
rorb
mov
movsl
aaa
jbe
push
mov
inc
imul
lods
and
out
in
mov
add
gs
shlb
ljmp
pop
outsl
and
ja
loope
push
inc
push
aam
mov
push
fwait
xor
enter
fwait
sub
and
mov
xchg
repz
lahf
sbb
scas
xlat
cmp
sub
dec
lret
iret
adc
push
jp
add
sub
outsl
daa
cs
mov
adc
add
stos
push
and
add
sti
iret
and
repnz
sub
rorb
cmp
add
inc
dec
xchg
das
shll
movsb
and
mov
test
stc
xor
rclb
push
stos
fcomip
psrlq
mov
jg
jle
cmp
pop
push
and
push
sar
sub
mov
pop
mov
out
xchg
cli
in
mov
mov
addr16
sbb
out
or
lea
dec
jae
jne
cwtl
cmc
cmp
lock
xchg
mov
inc
cld
mov
mov
inc
fbstp
lahf
fwait
jae
aaa
nop
mov
cmp
nopl
lods
addl
stos
std
jno
mov
je
stos
sbb
and
jmp
inc
push
fildll
adc
mov
cmpsb
out
sub
test
aad
mov
mov
cmpsb
stos
xor
push
add
xor
adc
xchg
stos
dec
fldl
sub
arpl
add
loopne
xchg
inc
lahf
sti
hlt
out
cmp
loop
xchg
xchg
adc
lea
add
add
add
in
adc
aam
ss
imul
adc
aam
pop
lock
movsl
mov
jg
xchg
lea
insb
outsl
cmpsb
dec
mov
jp
pop
lret
fwait
testb
fwait
and
inc
sbb
mov
mov
sbb
mov
or
pop
loope
push
rcrl
mov
loope
fldt
mov
inc
movsl
sub
lahf
jmp
in
repz
rcll
test
lcall
fsubl
out
fadds
adc
sbb
and
mov
mov
mov
lret
fsts
cmp
in
stos
sti
sub
lcall
fs
mov
imul
jo
cld
stos
cwtl
inc
sbb
mov
sub
lock
fiadds
dec
mov
ljmp
pop
pop
ficoml
in
sub
add
mov
into
nop
lock
add
add
add
push
sbb
mov
jno
out
mov
dec
test
and
aaa
sbb
cmpsb
mov
and
push
pusha
cmpsb
insl
notl
jg
push
shrl
repz
fstl
cwtl
mov
and
andb
in
cmp
mov
pop
cmp
mov
jae
in
xchg
pop
jmp
iret
sarb
pop
jmp
call
mov
sti
mov
sbb
ds
add
daa
add
imul
sub
sub
jns
lea
lock
sbb
movsl
mov
dec
inc
shl
shrb
dec
lret
add
fmull
pop
mov
insl
lods
xor
outsl
fsub
ds
cltd
sub
xor
mov
imul
mov
add
imul
add
pop
test
ljmp
jp
cmp
xchg
add
testb
add
and
xchg
push
add
cmc
cli
fwait
mov
xor
cltd
pop
mov
adc
rol
nop
in
sub
mov
out
imul
mov
iret
fistpl
dec
cmpsl
cmpsl
dec
leave
test
ret
jle
mov
ljmp
das
popf
icebp
jb
aad
setae
lret
mov
imul
dec
pop
jmp
sarb
mov
mov
push
ljmp
out
dec
std
inc
gs
push
inc
pop
ja
inc
dec
and
sub
insl
add
jbe
das
pop
push
pop
pushf
xor
cmpl
test
push
dec
jl
add
push
xchg
sub
cmpsb
cmc
movsl
addr16
adc
ds
stos
pusha
inc
fcmovbe
and
sbb
lret
sub
popa
xchg
adc
mov
jne
leave
lock
imul
push
jnp
sbb
xchg
sub
inc
mov
add
add
add
in
mov
push
je
push
sbb
pop
bound
arpl
call
dec
leave
rcrl
pop
test
adc
lods
sub
jmp
mov
int3
xchg
mul
jbe
pusha
sbb
cmc
add
xchg
pop
and
xor
daa
call
mov
and
add
fs
sbb
xchg
xchg
or
lds
in
dec
clc
movsb
jl
repz
jno
daa
inc
jne
mov
lea
dec
mov
sub
or
adc
js
insb
loope
xor
cmp
notb
dec
fistpl
bound
xchg
cmp
test
outsl
int
xchg
mov
fwait
adc
mov
pushf
adc
lock
in
in
div
inc
pop
sbb
jnp
adc
add
add
aas
or
mov
rcr
jno
xchg
add
testb
add
cmp
and
dec
pop
jmp
add
dec
into
fimull
pop
xor
fidivrs
cmp
test
hlt
int
fcomps
pop
js
sbb
inc
mov
jne
pop
xchg
jg
std
in
add
dec
jl
mov
test
loopne
mov
xlat
pusha
fcos
arpl
iret
xlat
jmp
xor
push
inc
and
jle
movsl
hlt
incb
pop
xchg
sub
xchg
addr16
orb
dec
pop
addr16
insb
inc
rol
push
dec
outsl
pop
clc
jae
dec
pop
int
xor
pop
hlt
scas
mov
out
leave
leave
pop
test
aad
loop
sub
pop
ss
mov
xor
jl
fimuls
das
sarb
mov
fwait
lds
push
pop
lock
mov
std
cmp
loopne
roll
inc
push
inc
ja
mov
or
out
loop
gs
ljmp
insb
fidivl
cli
sub
lcall
add
testb
add
and
sub
scas
cmp
push
pop
insb
jmp
jns
out
popa
out
test
leave
movsl
mov
jle
fisttps
and
push
inc
mov
add
sti
add
lds
push
sub
aam
jmp
in
sub
pop
mov
and
imul
jbe
push
cmp
dec
or
jnp
fdivrl
mov
adc
dec
pop
xor
mov
in
fwait
cmp
sub
cmp
mov
mov
or
push
xlat
and
int
pop
and
mov
xchg
mov
pop
fwait
std
jl
movsl
cmp
lods
imul
movsl
scas
and
cmp
cli
jl
xchg
ss
cmpsl
in
dec
stos
adc
sti
mulb
jle
jo
or
movsb
push
leave
cmp
add
cmp
mov
in
push
xor
add
testb
add
xchg
fsubs
bound
gs
ret
mov
pop
xor
leave
outsl
imul
mov
dec
fimull
jp
xchg
es
scas
cmpsb
adc
pop
in
movsb
ja
dec
aaa
movsb
rcl
in
lret
fidivrl
pushf
push
lds
popf
lret
roll
insl
orl
test
clc
mov
or
rorb
int3
pop
js
jo
adc
stos
or
fadds
jle
incl
mov
ds
sbb
jl
adc
mov
repz
or
mov
stos
or
les
xchg
add
add
fs
mov
ret
es
out
dec
jb
xchg
adc
std
cmp
shll
dec
jo
pop
mov
sahf
sbb
roll
es
sbb
dec
ds
lock
dec
pop
outsb
add
leave
add
dec
push
int
fstp
iret
push
lock
jmp
sub
add
add
add
sub
gs
pop
mov
sub
dec
fiadds
cmp
or
mov
push
jo
pop
test
or
inc
mulb
push
xchg
mov
cmp
push
scas
inc
xchg
stos
int3
sbb
nop
ja,pn
xchg
fcoms
and
mov
xchg
mov
ss
xor
push
push
call
out
orb
test
xor
int
push
sar
adc
sub
mov
call
fs
cmc
adc
mov
insl
cmpsl
movsb
iret
push
sub
dec
out
repnz
push
fcomip
popa
inc
insb
lock
je
fs
mov
jmp
test
repnz
movsl
and
push
test
inc
lret
push
add
xor
pop
or
add
adc
std
sub
pop
mov
xchg
add
testb
add
testb
ret
xchg
mov
out
cmp
mov
mov
addr16
mov
jnp
xor
aam
sbb
in
xchg
aam
mov
xchg
pop
ss
inc
in
lods
mov
out
pop
addr16
mov
sub
rorl
xchg
and
lea
ret
dec
sub
adc
psubb
mov
push
push
jmp
adc
xchg
cmpsl
mov
and
push
pop
dec
movsl
nop
pop
mov
test
or
ret
adc
cmp
into
cmp
xlat
outsb
mov
sti
mov
jo
xchg
sbb
sub
je
add
push
sub
mov
fiadds
ljmp
pop
cld
lret
shrl
pop
inc
popa
ret
or
mov
cmp
jnp
xchg
push
faddl
add
add
lods
les
jnp
mov
push
clc
add
add
testb
add
mov
pop
push
das
fldpi
shl
stos
sahf
ja
out
or
scas
mull
add
pop
popl
std
aam
call
jge
pop
aas
lahf
pop
add
mov
ds
sbb
fists
pop
sbbb
int3
jo
sbb
rcrb
lds
sub
ret
loop
push
arpl
out
add
jo
mov
add
mov
out
testb
or
adc
adc
test
push
stc
cmp
cli
mov
cmpsb
sbb
sbb
mov
in
xor
dec
inc
clc
push
divl
jno
mov
mov
add
ret
push
sahf
sub
inc
pop
repnz
inc
fistl
scas
adc
sub
jo
cwtl
inc
pop
and
add
dec
mov
dec
mov
add
les
mov
shlb
in
sti
push
xchg
add
testb
add
adcl
jmp
fdivl
stos
mov
mov
movsl
dec
cmp
mov
stos
lcall
or
decb
cwtl
inc
dec
mov
pop
orl
sbb
push
cmp
iret
jge
lea
movsl
stos
pusha
or
mov
or
imul
faddl
jo
dec
arpl
ja
push
movsb
jne
add
cmp
into
xchg
xor
jle
jl
mov
lods
das
gs
jg
xorl
scas
mov
xchg
sub
jecxz
pop
pop
lds
iret
das
push
and
xor
mov
test
push
xorl
push
mov
fs
push
dec
cmp
movsl
pop
sub
inc
inc
push
fs
xchg
mov
jmp
arpl
add
ljmp
loop
dec
pop
adcb
add
add
add
cli
push
dec
loope
inc
mov
and
mov
fidivl
push
xchg
lea
out
adc
cli
test
pop
sub
into
inc
inc
shlb
xchg
enter
add
sub
add
mov
jno
insb
sbb
inc
rolb
cmpsl
mov
xlat
dec
scas
push
iret
sbb
aam
xorl
cld
idivb
add
sub
cmpl
push
pop
repnz
sti
pop
out
push
xchg
cmp
lret
out
fwait
mov
cmp
das
xor
mov
cmp
sahf
fnstenv
jg
out
and
out
dec
loop
icebp
jg
jl
cmp
dec
cli
cmpsb
pop
push
mov
lods
cmp
mov
in
mov
sub
scas
aaa
jg
push
rcrb
popa
ss
xor
and
test
pop
lret
or
repz
push
test
scas
xchg
es
add
aaa
shlb
cmc
div
rcl
inc
pop
inc
lods
fwait
sbb
cltd
add
testb
add
sub
fsin
sub
out
jns
inc
xor
fucomip
addr16
add
xor
push
idivb
aad
aad
xchg
inc
divl
adc
out
ljmp
out
neg
add
fwait
xlat
inc
mov
ljmp
out
arpl
loop
sub
add
repnz
push
out
and
movsb
mov
loopne
add
dec
pop
call
into
adc
out
cwtl
inc
cld
fsubr
shrl
lahf
scas
or
pop
xchg
jecxz
jnp
popf
xchg
nop
pop
lds
adc
mov
sbb
cltd
mov
jae
mull
lods
popa
loopne
dec
loopne
xchg
outsl
xchg
gs
icebp
xchg
push
negl
loopne
icebp
push
stos
cmp
mov
out
addr16
and
fdivr
popa
daa
inc
int3
mov
adc
push
xchg
rorb
fisttpll
mov
xchg
frstor
pop
sbb
lods
mov
add
pop
push
nop
push
sahf
rcr
pop
test
scas
xor
add
testb
add
cltd
mov
loope
xor
cs
cmpsl
cmp
out
mov
mov
adc
add
xchg
mov
add
out
insl
mov
dec
loop
mov
mov
fisubs
xlat
outsb
mov
push
or
jns
mov
sbb
in
sbb
push
loop
test
neg
fisttpl
or
sbb
adc
in
mov
or
push
stos
xor
cli
jne
mov
sbb
loopne
inc
sub
sbb
dec
into
mov
mov
lret
js
add
jnp
mov
sbb
neg
jp
rcrl
fcompl
dec
sub
mov
lret
pop
fiadds
cmp
dec
insb
sbb
js
push
ljmp
daa
pop
push
scas
hlt
ffree
inc
pop
decb
loop
inc
add
inc
mov
pop
push
pop
repz
xchg
xor
add
arpl
cmpsb
jcxz
jne
push
inc
or
fwait
add
testb
add
pop
out
jnp
sti
pop
cmp
mov
mov
mov
hlt
aam
shlb
xlat
repnz
sti
pop
outsl
or
popa
lds
jb
mov
mov
push
shlb
add
jmp
push
and
je
ss
fldl
popf
cwtl
int3
movl
xchg
pop
and
les
inc
cwtl
in
cmpsl
stos
push
dec
jl
test
repz
in
add
xor
and
imul
das
xchg
and
dec
add
bound
ljmp
daa
out
pushl
add
mov
test
cwtl
cmp
sub
into
xor
test
out
pop
out
enter
shl
xor
lahf
and
pop
xor
pusha
inc
jo
sbb
lret
pop
xchg
push
fistpll
dec
jmp
push
or
sbb
jp
cmp
add
clc
jnp
jg
in
cli
cwtl
inc
mov
and
loope
and
add
jl
jecxz
insl
push
xchg
xor
dec
ficomps
mov
mov
std
lahf
sbb
jnp
movsb
pop
mov
fdivrl
cli
out
mov
push
or
mov
xchg
add
stos
dec
cli
repnz
sub
popl
mov
mov
mov
fdivrs
bound
adc
ds
inc
add
xor
pop
sub
hlt
int
xchg
call
cmp
cmp
push
out
in
ret
ds
ja
adc
shrb
dec
rorb
add
mov
mov
clc
fwait
cmpsb
nop
push
fs
xchg
outsl
outsl
adc
add
lods
lock
das
aam
gs
sub
out
adc
sub
sti
arpl
iret
cmp
cld
iret
cli
lret
cwtl
test
xchg
inc
xchg
adc
mov
ds
and
jg
in
push
fwait
push
xchg
into
rdpmc
popa
add
ljmp
cld
inc
push
cltd
das
push
lock
push
popf
add
testb
add
or
add
out
cli
xor
cmpsl
rorb
push
sahf
clc
pop
mov
cli
mov
insb
and
and
and
sub
out
clc
subb
push
pop
jbe
cmp
add
or
popa
daa
movsl
out
mov
jecxz
push
out
fimuls
imul
dec
les
fsubs
and
stc
sahf
jl
cmp
paddd
cli
inc
jecxz
jns
loop
sbb
arpl
sub
inc
inc
out
mov
jmp
shlb
movsb
aad
xchg
insl
lods
loop
gs
mov
add
xor
and
addb
cmpsb
pop
pop
cmp
in
dec
outsb
pop
adc
rsqrtps
sbb
xchg
fsubrs
lret
scas
ja
sbb
insb
or
in
cmp
sub
fcmovb
add
jl
sar
std
jle
loop
dec
insl
mov
add
add
add
mov
aas
leave
decl
adc
fwait
daa
popf
push
fmulp
into
xor
pop
inc
mov
and
push
mov
or
inc
outsb
test
outsb
loopne
sahf
cld
push
addl
inc
sti
xlat
scas
mov
mov
lret
mov
test
rcll
jns
cltd
test
pop
dec
mov
jp
es
cmp
inc
or
xor
lods
push
xor
aad
xchg
out
sub
xchg
movb
jae
les
cmp
movsb
in
fstps
das
and
xchg
lds
loop
add
or
dec
subb
mov
pop
lods
mov
pop
inc
sub
inc
ljmp
scas
jl
push
leave
fdivrp
bound
stc
lds
pusha
adc
jnp
sbb
jl
popf
cwtl
aam
jb
pushf
xorb
cs
cltd
outsb
sub
add
cmp
cmp
pop
cwtl
aas
xchg
or
lahf
add
testb
add
sub
int
repz
and
pop
int3
cltd
fnstenv
callw
pushf
daa
stos
cmp
sti
popf
lock
pusha
mov
mov
cmp
pcmpgtd
dec
scas
ds
add
jne
lcall
mov
int
pop
dec
out
mov
jo
mov
add
mov
adc
or
and
xor
stos
lret
dec
mov
xor
adc
jl
xchg
push
shrb
sbb
lea
sarl
xor
jo
dec
push
dec
popf
fldenv
pavgw
cmp
sti
push
ljmp
jae
es
inc
inc
sbb
fists
mov
aam
add
in
out
notb
sub
push
push
stos
cld
cmp
lock
jle
int3
nop
pushf
xchg
dec
mov
mov
and
sbb
loope
dec
add
fwait
and
popa
mov
aad
aam
mov
das
clc
lahf
add
testb
add
jbe
cmpsl
adc
lds
pushf
xor
mov
adc
add
lods
push
aaa
aad
mov
adc
push
pop
mov
pushl
xorl
push
push
mov
xor
outsb
mov
mov
dec
xchg
fsubs
daa
jbe
sarb
xor
paddusw
fisubrs
lods
repz
pop
add
fisubl
popa
xor
cltd
push
cmpsl
nop
mov
int
cmp
test
cmp
std
dec
and
xor
or
pushf
cmp
bound
push
xchg
and
mov
movb
cmpsb
mov
movsb
cmp
stos
cmp
ror
outsb
repz
and
sbb
inc
dec
xor
loopne
jecxz
daa
xor
sbb
dec
sbb
cld
mov
call
dec
data16
add
jo
insb
les
inc
push
add
push
and
xlat
aas
jle
ds
out
mov
add
sbbl
jmp
repz
cmpsl
fistps
jle
flds
cmp
inc
and
jmp
sub
test
push
jecxz
pop
jae
ret
sub
sti
xor
lock
jg
sarb
lods
dec
in
pop
pop
pop
xchg
js
ss
pushf
pop
neg
test
sub
mov
mov
testb
xor
push
mov
jnp
cmpsl
push
fidivrs
mov
aad
lods
xor
push
ret
mov
repz
jl
xor
icebp
icebp
sahf
push
mov
and
sub
enter
push
sbb
xor
add
mov
fisttpll
cmp
cli
ss
sbb
lods
ficoml
popf
nop
mov
lret
push
pop
add
mov
sarl
jns
xchg
sbb
sub
imul
outsl
popl
out
mov
mov
add
je
jge
mov
std
mov
imull
mov
daa
sub
jbe
or
jae
fadd
scas
bound
ljmp
dec
push
aam
mov
cmp
pop
lock
inc
idivl
cmp
cli
mov
mov
mov
dec
push
inc
push
and
sub
out
into
das
xor
dec
daa
pop
sub
std
fsubrl
push
icebp
test
xor
and
fcomps
or
les
into
jle
popa
mov
dec
mov
repz
xor
xorb
mov
pop
shll
dec
shll
je
dec
pop
cmp
xchg
cwtl
push
repz
xchg
in
push
and
pop
xchg
add
popa
loop
int3
or
inc
add
adc
sbbl
mov
cmp
add
testb
add
in
jo
cmp
xchg
je
sbb
lock
fisubl
adcb
stos
loopne
mov
xchg
jecxz
pop
test
data16
cmpl
mov
lcall
push
popf
sbb
push
fs
pop
repz
and
hlt
mov
sbb
mov
sub
orb
adc
pusha
inc
daa
sbb
lock
lea
fs
pop
arpl
inc
inc
add
mov
sub
icebp
or
add
int3
push
mov
popa
mov
in
ficompl
inc
push
adc
rorl
dec
test
mov
dec
daa
mov
mov
sbb
mov
imul
sbb
int3
ja
decl
in
sbb
or
xor
push
test
xor
orb
mov
out
popa
add
mov
imul
and
or
inc
addr16
sbb
mov
add
fdivp
push
daa
fdiv
jmp
pop
icebp
pop
adc
dec
mov
sbb
pop
aas
inc
mov
cli
sbb
add
lea
aam
lret
orl
xor
cmp
test
add
or
push
out
xor
fs
int3
dec
pop
out
rorl
or
fninit
imul
jae
inc
jo
mov
lods
js
jae
cmpsl
in
andl
jbe
fstpt
pop
mov
loop
ret
pusha
iret
pop
fidivrs
cmc
cmpsl
xlat
subb
fcomps
or
ds
mov
call
push
std
imul
jg
lea
dec
hlt
push
ja
dec
sbb
and
les
imul
cli
arpl
inc
ja
insl
or
lods
mov
add
repnz
cli
adcl
mov
jle
std
lds
aas
sub
and
adc
lock
mov
jge
jg
decl
xchg
ljmp
add
add
add
adc
add
mov
mov
lret
push
inc
mov
ds
add
lods
movntps
icebp
repnz
push
cltd
dec
push
sub
popa
je
pop
fs
sub
pop
ret
xchg
xlat
rcll
push
clc
mov
jnp
dec
divb
xchg
rolb
fwait
sub
ja
jmp
push
andb
rorl
loopne
cmp
mov
or
insl
int
sbb
xor
dec
inc
icebp
dec
mov
ja
pop
popf
jmp
cwtl
leave
rcr
pop
mov
sbb
subl
mov
push
mov
mov
xor
out
add
or
mov
insb
pop
dec
pop
aad
out
std
dec
dec
mov
insl
jbe
movsl
arpl
or
mov
mov
orb
insb
add
loop
adc
ret
cli
adc
add
ja
out
das
mov
aam
pop
int
mov
add
add
mov
jnp
cli
in
push
and
mov
ds
test
cmc
rolb
data16
add
in
mov
sbb
xlat
lea
fisubs
adc
lods
in
add
jns
aaa
iret
mov
fistl
sbbb
xchg
jle
xor
lock
ja
xorl
lods
cmpsl
dec
and
jp
test
pusha
in
andb
adc
into
adc
mov
mov
xchg
mov
cli
jnp
gs
mov
lods
sbb
in
cmp
cmpsb
aad
imul
add
jge
xchg
or
dec
fmuls
hlt
cmp
movsl
push
or
mov
jno
in
int3
test
sbb
data16
push
sub
stc
sbb
cmp
sahf
sub
out
repz
aad
xor
rcl
mov
jae
dec
add
loop
test
mov
dec
or
add
add
add
rcrl
sbb
rcr
test
add
cmp
call
and
lods
mov
xchg
mov
arpl
leave
in
and
subb
xchg
xor
aas
and
add
add
fidivs
arpl
insl
xchg
mov
insl
fadds
lds
mov
cmp
add
mov
dec
aad
jle
sbb
or
xorl
or
xchg
jle
mov
pop
sbbb
adc
dec
mov
aaa
int
ja
sub
pusha
xchg
mov
or
fdiv
push
fdivl
fiaddl
or
sbb
nop
add
xlat
mov
rclb
or
inc
loope
xor
mov
pushf
outsb
mov
jno
movsb
mov
xchg
add
or
lcall
test
loop
cmpsl
add
testb
add
sbb
mov
int
int3
mov
mov
js
aas
mov
mov
xchg
or
arpl
mov
insb
test
cmp
mov
outsb
lea
cs
sarb
inc
mov
stc
sti
out
sub
lcall
jle
stos
add
cmpsb
mov
pop
ljmp
int
xorl
rorb
das
repz
pop
jno
scas
sbb
add
xchg
aas
test
int
test
and
xchg
lock
sbb
sub
aam
fsub
hlt
call
sub
scas
negl
pop
jnp
subb
js,pt
rclb
test
mov
in
adc
repnz
lods
mov
inc
testb
adc
and
xor
ret
sub
inc
push
dec
pop
add
movsb
mov
mov
mov
cmp
push
xchg
sahf
test
add
add
add
negl
sbb
lcall
dec
cld
ret
fs
fistpll
cmp
cmp
push
jno
or
mov
or
jae
mov
adc
fadds
fnstsw
jmp
mov
mov
sbb
xchg
dec
mov
sub
lret
push
jnp
inc
cmpsb
pop
test
lods
outsl
inc
xorl
imul
movsl
mov
rcll
jg
jecxz
in
or
xlat
rorb
push
push
inc
sub
jl
mov
out
ljmp
sub
imul
stos
adc
jecxz
mov
faddl
inc
add
in
ret
xchg
int
lcall
inc
pop
jbe
mov
fcoms
ret
scas
mov
leave
dec
sti
call
cli
lahf
es
mov
lea
add
or
sbb
mov
xchg
dec
pop
xchg
xchg
test
add
mov
cli
ret
icebp
and
fidivrl
dec
xchg
pop
add
xchg
mov
das
xchg
ret
cmp
sub
lret
cltd
push
pop
aaa
repnz
inc
adc
into
ss
scas
sub
repz
je
pop
xchg
sub
dec
jl
jle
ss
into
sub
andb
sub
or
xor
movq
mov
testb
add
addl
call
cmc
sbb
nop
lods
push
dec
ds
push
xlat
mov
mov
push
cltd
jns
xchg
sti
cld
xor
xchg
rclb
dec
in
xor
cwtl
push
shlb
cmc
sbb
cltd
fists
push
push
sub
inc
sub
pop
divl
icebp
out
test
outsl
sub
add
xchg
test
insl
add
push
inc
fdivl
stos
push
decb
add
add
nop
in
adc
xchg
int3
mov
adc
loopne
insl
add
daa
mov
out
inc
dec
mov
stos
sbb
lea
jns
xchg
out
aaa
jp
cmp
pop
fisubrs
pop
fcomps
scas
mov
lretw
aad
fildl
fmuls
mov
into
ja
jl
cmp
lea
or
xchg
inc
repnz
repz
or
shr
xchg
lahf
sub
push
lret
cmpsl
push
pop
jno
mov
out
pop
cs
jecxz
inc
gs
fcomps
dec
sti
inc
mov
shrl
mov
jl
rorl
incb
or
inc
call
xor
jg
adc
aaa
push
ret
call
add
dec
xchg
pop
roll
scas
test
add
add
adc
mov
pusha
cmp
insl
subb
add
cmc
fnstcw
or
add
in
bound
adc
fidivs
es
jno
mov
mov
fldl
jb
insb
mov
bswap
imul
outsl
inc
fsqrt
mov
decl
or
mov
push
dec
xor
and
lods
in
add
lods
cmp
scas
rcrb
pop
ret
loop
vmovd
iret
push
cmpsl
xor
out
clc
pop
fistpl
and
adc
inc
lods
sub
fsubs
ja
mov
lret
or
iret
test
jo
mov
jecxz
mov
scas
jl
and
mov
cwtl
cmp
dec
aam
mov
neg
sbbb
jmp
cmp
mov
mov
cmp
repz
js
rcll
movsl
lea
add
add
stos
hlt
jmp
ljmp
add
add
add
add
jl
movsl
lds
imul
push
mov
mov
mov
mov
pop
push
btc
sub
into
rol
cwtl
popa
cmp
mov
lahf
xor
push
fists
and
leave
test
jns
xchg
stc
mov
in
and
add
jnp
sub
inc
dec
aam
mov
inc
push
loop
xlat
xchg
jle
dec
insb
in
in
dec
push
call
push
inc
mov
nop
fadd
aad
imul
jle
sub
inc
mov
repnz
popf
lcall
dec
cmpsb
sbb
fdiv
adc
mov
jnp
int3
mov
sub
fisubs
shrb
aam
cmp
jne
fisubrs
popa
fisubl
push
cmpsb
in
es
fistpl
leave
push
adc
ficomps
insb
das
out
test
test
movsl
fnstenv
mov
xchg
or
cmp
enter
jo
xchg
aaa
inc
push
add
add
out
xlat
out
jg
dec
cmp
adc
add
testb
add
jmp
insb
push
ss
push
je
sahf
jmp
lahf
mov
add
outsl
cld
scas
jb
adc
mov
add
push
pop
pop
stos
cmp
and
mov
push
fists
movsl
cmp
cmpl
call
js
lahf
jmp
bound
ret
imul
mov
sub
rclb
xchg
leave
leave
mov
subb
ds
lods
loop
loope
std
xchg
fcomps
ret
enter
pop
jp
or
dec
mov
jnp
aaa
or
ja
int3
or
int3
pop
in
pop
rclb
xchg
mov
adc
dec
andl
push
cmp
sub
mov
mov
mov
stc
imul
sar
sbb
pop
fidivs
mov
inc
cltd
cmp
add
mov
inc
fwait
lds
xor
mov
add
add
add
ret
and
int3
mov
sbb
fwait
xor
sti
pop
lret
inc
jo
pop
pop
ficoml
xchg
and
mov
xchg
mov
inc
ret
into
in
push
add
and
cmpsb
arpl
or
inc
stos
jnp
mov
pop
addl
inc
jp
lds
cs
aas
ds
clc
inc
push
inc
or
inc
je
push
std
jo
jne
dec
sub
xchg
sbb
scas
dec
adc
sahf
jo
pop
int3
sbb
xchg
int
sub
add
sub
mov
mov
loope
dec
push
and
scas
jns
and
iret
ss
jbe
pop
nop
shlb
jp
pop
jns
insl
pop
cs
cmpsb
sub
shrb
call
stc
js
cmpsl
xchg
pop
adc
pop
sbb
sub
rcl
jp
ficoms
repnz
mov
bound
xor
inc
fadds
add
mov
ja
xor
mov
add
testb
add
push
sahf
mov
push
imulb
imul
cmp
jl
fldenv
adc
mov
in
xorb
in
dec
xchg
dec
jecxz
xor
and
inc
das
xchg
mov
in
js
xchg
fs
jl
adc
flds
insl
scas
cmc
cmp
or
in
sarl
sbb
sbb
stos
mov
and
mov
mul
mov
sub
out
in
sbbb
mov
push
push
sbb
cmc
ror
inc
dec
mov
adc
xchg
add
jg
incb
cmp
push
jmp
cmp
lods
dec
jmp
mov
lods
dec
fidivs
je
xor
lcall
dec
pop
out
xor
fistps
inc
loopne
call
mov
add
lret
jnp
sti
jmp
xchg
sub
out
dec
mov
add
add
add
and
cmc
ret
push
push
pop
push
rep
pop
cmp
pop
push
sub
dec
imul
cld
lds
nop
movsb
add
movsl
pop
inc
fsubl
into
lock
push
fidivrl
dec
testb
sti
bts
fnstsw
xor
push
rorl
or
push
mov
test
in
sbb
xor
mov
jle
dec
add
std
popa
insb
out
lahf
mov
xor
add
and
fisubrl
mov
add
aad
mov
jo
movsb
jae
mov
add
mov
aam
rorl
add
xor
popf
scas
fwait
scas
xchg
stos
fimull
js
aaa
pusha
push
jns
aam
sbb
inc
mov
cwtl
pop
cld
gs
std
mov
sti
mov
inc
xchg
xor
and
push
js
cmp
sub
ja
adc
movsb
cs
jge
or
jge
repz
dec
pop
mov
add
mov
jecxz
lock
pop
andl
mov
add
add
add
jecxz
sub
mov
daa
push
xchg
das
daa
adc
repnz
mov
je
or
pop
xor
cmc
stc
jge,pn
xchg
das
jg
jp
addl
aas
or
sbb
dec
rcrl
in
jo
stc
push
adc
pop
push
and
imul
xlat
cmp
sbb
xor
mov
lods
daa
lods
popf
stos
cwtl
in
or
adc
lock
ds
stc
aas
inc
inc
push
inc
jmp
rcrb
mov
mov
push
mov
lods
adc
out
or
jecxz
jp
call
fucomi
ret
shl
int
xchg
andb
adc
out
dec
push
rclb
and
mov
and
and
cmc
aam
mov
mov
push
dec
jecxz
repz
add
cld
mov
test
cmp
add
and
dec
fldpi
xchg
inc
cli
fwait
adc
ss
cld
cli
aaa
mov
lcall
rolb
test
hlt
add
dec
aam
lock
icebp
std
cmp
cmpsl
ret
or
andl
mov
jge
sahf
push
in
jge
stc
xor
rcll
fsts
lock
or
cld
mov
loop
sub
pop
fwait
xor
jmp
mov
cmp
mov
dec
lahf
mov
inc
jle
pop
popa
cmp
notb
lds
jae
out
mov
popf
pushf
mov
and
arpl
aad
fcmovnbe
cli
mov
sbb
cld
pusha
xchg
scas
int3
leave
jmp
movsl
mov
xchg
call
mov
pop
push
sti
jns
cmpsb
add
fsincos
out
or
ljmp
add
mov
dec
das
pop
out
cmc
mov
sbb
mov
add
add
add
out
cmp
bound
and
pop
mov
cltd
push
mov
addb
and
in
cmp
iret
xchg
call
enter
xor
addr16
mov
divl
cmp
ss
xor
push
rclb
aas
mov
mov
rorl
pop
pop
movsb
jmp
mov
mov
sahf
icebp
lods
xor
leave
mov
pop
xchg
cltd
addr16
fstps
xor
popa
cli
mov
jecxz
inc
or
js
cmc
push
lret
decb
xchg
sbb
or
mov
loop
inc
pop
mov
cmp
mov
aad
gs
jae
rorl
pop
xchg
adc
add
scas
xchg
dec
xchg
je
add
lahf
aaa
inc
rol
loopne
add
jl
mov
into
scas
sub
pop
xor
sbb
sub
fucomip
std
dec
std
pop
mov
aas
ds
es
add
add
add
pop
shrl
mov
dec
push
sub
dec
mov
sbb
std
fwait
or
sbb
add
ds
xor
pop
fwait
cmp
lahf
cs
lret
into
push
xchg
mov
stc
mov
xchg
lcall
in
or
std
ja
pop
mov
cli
and
icebp
and
jo
inc
push
cmpsb
daa
inc
jmp
mov
mov
xchg
pusha
mov
jbe
out
es
mov
in
ficomps
test
nop
xchg
js
push
mov
pusha
push
mov
pop
inc
in
add
mov
adc
int
les
inc
fstpt
xor
xor
inc
test
jg
jns
std
adc
adc
fistpll
mov
aaa
xchg
je
shl
adc
xor
mov
sub
jg
and
call
add
fidivs
loop
ljmp
jo
mov
sbb
add
testb
add
xchg
push
mov
fs
aad
cmp
in
inc
dec
xor
xor
xchg
inc
add
add
mov
in
cmc
or
push
imul
sahf
imul
bnd
cmc
mov
into
incl
into
inc
scas
insb
das
xchg
arpl
xchg
dec
dec
pop
addr16
xchg
leave
leave
sub
pop
scas
lahf
and
les
cmc
pop
mov
ljmp
lret
cmp
inc
shlb
sbb
cwtl
mov
xor
and
cmp
pop
jp
bound
jge
adcb
rcll
pop
test
and
mov
cli
imul
divl
add
jo
adc
mov
sahf
das
jg
jge
aas
inc
das
andb
add
and
sub
outsl
push
std
and
mov
add
xchg
jg
jmp
std
jge
in
xchg
xchg
cmp
push
adc
add
cmp
movsl
loopne
pushf
lahf
gs
lods
ljmp
out
sbb
jo
int
sarb
pop
or
add
pop
pop
xchg
lds
test
adc
fdivl
adc
pusha
sub
mov
mov
andb
out
loope
push
sbb
call
std
scas
insl
cmp
sbb
sbb
mov
pop
sar
mov
mov
test
push
shrl
jbe
push
ljmp
ret
je
xchg
sahf
lahf
jne
dec
mov
pop
loopne
pop
int
dec
mov
and
push
arpl
arpl
adc
xchg
xchg
stos
repz
push
lret
jge
insl
sub
mov
out
cmp
je
scas
push
or
sub
mov
adc
jae
xchg
jbe
out
cmc
ds
fisubl
clc
mov
es
scas
inc
decb
and
and
add
push
divb
std
cmp
mov
or
add
push
and
shrl
lret
pop
fdivrs
inc
sub
mov
adc
leave
inc
jns
xchg
add
movsb
stc
mov
loop
das
arpl
ljmp
cmp
sbb
pop
cmp
xchg
dec
enter
mov
out
mov
lcall
add
pop
cld
mov
bound
mov
fidivl
cltd
adc
fstl
mov
mov
inc
mov
or
leave
push
jp
add
xchg
es
add
cmp
packssdw
jb
into
fmul
je
xchg
out
out
int
lea
push
cmp
test
lock
daa
or
aad
jp
xor
ja
cmp
ljmp
movsl
xor
fidivrl
std
mov
fwait
mov
add
aas
pusha
xchg
mov
out
xor
push
ret
add
push
pop
xor
cmp
ficoml
js
jle
mov
add
add
add
mov
xor
xchg
push
notl
test
ss
pop
jle
js
jns
loop
loopne
sbb
mov
gs
les
lret
les
lahf
lods
adc
sub
cltd
xchg
popa
leave
mulb
jae
jbe
fcoml
pushf
daa
push
test
pop
dec
adc
lret
push
shrl
pop
out
push
mov
jle
mov
test
push
xchg
pushf
jle
lea
out
pop
ficoml
std
add
scas
iret
movsb
jp
pushf
xor
inc
dec
out
mov
push
xchg
jae
and
das
subl
das
mov
rclb
orb
ret
fwait
jnp
lods
rol
add
pop
fistl
push
xchg
notb
lret
jae
arpl
mov
adc
cmp
in
sbb
push
iret
mov
adc
nop
scas
cltd
sbb
mov
jg
mov
add
es
les
mov
push
push
adc
lcall
testb
add
dec
scas
les
mov
ss
sbb
daa
repz
int3
jl
fildl
sbb
pop
cwtl
ret
out
lods
xchg
cmpsb
xlat
fdivl
lea
xor
xchg
push
pop
xor
dec
lods
sub
pushf
dec
and
ds
adc
mov
call
pop
cmc
mov
mov
das
fdivrs
jecxz
adc
push
dec
ret
scas
jmp
dec
loopne
pusha
int3
xchg
daa
scas
push
imul
fstps
cmp
adc
add
mov
cmp
clc
sbb
jbe
mov
ret
mov
flds
shrl
data16
out
movsb
out
lds
sub
mov
push
ss
jp
imul
cmp
rolb
lcall
mov
xorl
add
add
clc
pop
stc
out
push
insb
xchg
cld
sub
mov
add
testb
adc
cmp
stos
inc
pop
out
cltd
and
loope
mov
and
shl
iret
jle
sbb
jl
imul
mov
sbb
pop
jo
out
popa
and
xlat
out
dec
das
lods
les
stos
push
mov
mov
sbb
fcmovnb
addr16
push
enter
ljmp
adc
incl
mov
sub
push
sbb
ss
sbb
cs
je
push
jbe
loopne
jmp
daa
popf
data16
pusha
fmulp
fcmovu
push
repnz
mov
nop
fld
daa
insb
ret
call
or
mov
into
jae
fdecstp
in
in
and
mov
lcall
hlt
fstpl
jecxz
adc
lods
cmp
jg
pusha
shlb
cmp
mov
hlt
scas
lea
mov
add
push
mov
lcall
ret
arpl
loopne
add
testb
add
test
das
mov
cmp
lcall
jl
das
cmpsb
js
repnz
lds
ja
cmp
hlt
rolb
inc
sub
push
cmp
push
xor
or
mov
sahf
pushl
mov
add
sub
sub
in
or
xchg
je
jo
outsl
mov
pop
mov
xchg
xchg
lds
insb
lock
scas
js
aad
add
divl
decb
lretw
imul
jecxz
mov
clc
gs
xchg
hlt
sub
cmp
jb
inc
mov
jl
mov
or
test
and
pop
decb
mov
cmp
jo
scas
aad
mov
aas
xchg
insb
adc
div
mov
cmp
push
jmp
mov
mov
add
xorl
insb
scas
pop
xchg
add
add
add
inc
fnstenv
fisubs
mov
ljmp
xchg
mov
and
faddl
stos
or
inc
imul
push
cmp
outsl
stc
inc
ret
pop
mov
out
cmp
jmp
mov
xchg
fucomip
mov
add
push
lds
pop
xor
cmp
dec
iret
and
insb
data16
xchg
sarb
lds
jp
pop
jb
sahf
pop
push
sub
dec
loop
pushf
xor
lahf
fs
adc
movsl
mov
cmp
and
bound
jg
ds
mov
and
rcll
lods
xor
sbb
aas
out
push
rcl
fwait
icebp
pop
loop
mov
fisubl
jg
imul
and
adc
repnz
cmp
scas
mov
stc
or
out
pushf
dec
ja
movsb
dec
addr16
jecxz
add
pop
sbbl
fstpl
imul
dec
int3
mov
add
mov
push
in
jns
jno
xor
dec
cmpxchg
inc
lcall
mov
insl
stos
and
mov
lock
shll
cmp
pushf
jecxz
clc
js
jge
inc
lret
sbb
mov
sub
sbbl
lock
push
fnsave
hlt
xor
aad
jg
mov
inc
push
inc
js
add
and
sbbl
jl
aas
xchg
js
pop
add
cmc
jg
jnp
push
imul
dec
in
outsl
scas
cli
incb
loope
or
orb
cld
mov
pop
sbbl
pusha
dec
sub
sti
mov
pop
pop
push
pop
lods
test
push
and
push
in
popl
xchg
pop
xchg
mov
lods
add
loope
mov
jecxz
out
sub
mov
ret
add
add
add
and
sbb
ljmp
sti
pop
dec
push
inc
push
dec
jge
xor
xor
cmpsb
mov
sub
dec
push
shlb
arpl
fs
imul
adc
adcb
das
sub
inc
and
push
lds
popf
sbb
push
imul
add
dec
in
pop
jne
or
mov
int3
xchg
mov
insl
out
cmpsb
or
fcomp
insl
test
int3
cld
sub
sbb
les
int3
cmpsl
cld
out
ss
xchg
imul
jge
or
dec
nop
shll
mov
stos
jmp
out
and
xor
and
pop
mov
jbe
orl
pusha
push
xchg
pop
cmp
outsl
adc
call
icebp
dec
sub
xchg
mov
add
std
test
jg
jbe
movsb
in
inc
hlt
mov
add
add
int3
mov
jg
push
incb
icebp
and
add
outsl
pop
mov
data16
popl
mov
ret
dec
add
and
stos
or
sbb
imul
loopne
sub
jle,pt
cmpsb
ficoms
fcomps
adc
cmpsl
pop
add
insb
es
iret
mov
and
or
fdivr
jno
fisubrl
inc
or
outsb
cmp
jbe
push
pushaw
add
push
fldt
xchg
std
std
in
push
mov
hlt
or
sti
xlat
add
or
push
inc
lods
push
sub
jnp
stos
jge
push
lcall
push
sub
mov
mov
hlt
in
inc
lret
orb
ret
andb
stos
xchg
or
xchg
sbb
das
out
adc
jmp
pop
xor
add
adc
in
lcall
xor
inc
cmpsb
add
add
add
inc
or
movl
mov
fsubl
sar
das
test
cmpsl
pop
cmc
rorl
lret
bound
mov
scas
xor
jbe
mov
das
aas
test
sub
mov
in
or
addl
add
sub
inc
sub
pop
lds
inc
push
cmp
sub
mov
sub
add
pusha
xchg
xor
adc
xchg
push
dec
cs
fisttpll
shlb
push
out
dec
ljmp
movsb
stos
cmp
or
push
lahf
popa
lret
fstl
lods
xchg
ret
lock
adc
repz
imul
iret
ffreep
inc
ret
movsl
pop
or
repz
into
adc
adc
jecxz
and
adc
add
mov
mov
adcb
mov
jno
add
sub
jg,pt
stos
dec
push
jo
pop
mov
movsb
rolb
testb
add
fsubrs
push
cld
rcl
mov
adcl
pop
stos
pop
clc
cmpsl
mov
stc
push
mov
cmp
jecxz
lret
jge
idivb
mov
iret
add
fdivrp
mov
ret
cs
mov
ljmp
aad
mov
addl
fbstp
pop
subb
rep
es
shll
mov
bound
mov
mov
repz
in
jle
mov
xor
cmp
adc
inc
mov
cmp
insb
insl
sbb
enter
pop
gs
add
push
xchg
popa
inc
and
xor
inc
mov
pop
nop
rcrb
pop
test
lret
jbe
sahf
in
aaa
xor
adc
inc
out
ficompl
push
test
rclb
xor
les
popf
add
insl
sbb
outsl
mov
push
mov
add
testb
add
xor
enter
cmpsl
cmp
fldcw
outsl
mov
mov
lods
jns
cmp
in
mov
lods
xchg
aaa
pushf
popa
outsb
add
das
scas
cwtl
adc
mov
pop
icebp
or
jb
cmp
xor
loop
xorb
cmc
jl
mov
pusha
fists
and
adc
mov
pop
stos
cwtl
aas
pop
jle
pop
loope
dec
loope
aaa
push
imul
insb
mov
aad
mov
icebp
shlb
mov
dec
mov
out
sbb
repnz
testb
pusha
arpl
mov
inc
mov
mov
cld
xchg
xor
pop
jg
stos
shll
aaa
mov
mov
imul
cld
jp
pop
sub
mov
cmp
out
add
inc
fbld
mov
cltd
xchg
rep
jge
ret
testb
add
iret
dec
ret
dec
sbb
dec
xchg
dec
sbb
mov
adc
rorb
popl
iret
and
outsb
gs
jbe
in
adc
pusha
test
imul
test
or
sti
jmp
outsb
lods
lahf
into
fisubl
cwtl
mov
mov
mov
cmp
lds
push
outsl
push
add
andb
lods
push
inc
add
inc
and
inc
js
mov
mov
inc
sbb
daa
loop
call
out
arpl
cmp
mov
jle
jbe
dec
mov
xchg
xchg
insl
jo
icebp
mov
xchg
pop
push
rcr
jae
cli
stc
in
push
jmp
add
jp
enter
jp
adc
lcall
dec
shrb
xor
into
subb
mov
xchg
push
insl
fcos
mov
jno
lds
jmp
cli
xchg
out
sub
add
push
push
call
xor
add
testb
add
mov
xchg
xchg
je
mov
outsb
mov
jl
dec
pushf
pusha
inc
enter
pop
pop
xor
iret
outsl
stos
mov
stc
in
or
pop
adc
xor
cmp
rcl
lahf
dec
cmp
fisttpl
ret
xchg
movsl
sub
jb
shll
xchg
ret
and
movsb
jno
repnz
fwait
sbb
mov
popf
push
aam
enter
dec
push
jecxz
ja
pop
push
test
pusha
dec
adc
nop
fucom
negl
loope
test
pop
xchg
rol
addl
aaa
leave
cmp
negl
xor
pop
mov
adc
inc
jecxz
outsb
fsts
and
pop
dec
xchg
lds
enter
ret
mov
mov
stos
aam
loopne
push
sub
mov
xchg
push
add
mov
inc
jmp
or
cmpsb
cmp
xor
add
into
std
sti
leave
sti
iret
ljmp
dec
je
hlt
jl
add
testb
add
mov
sub
mov
test
fistpl
out
jnp
fwait
lahf
lea
fdivl
mov
push
adc
lea
adc
aam
pop
fdivs
test
sahf
out
sti
mov
sbb
addb
lea
mov
push
add
repnz
std
sub
xchg
pop
push
div
aas
fdivs
and
push
push
sbb
pusha
ret
push
push
mov
cltd
out
ret
les
adc
xor
lret
pusha
adc
inc
xor
lods
inc
scas
jbe
push
mov
loopne
add
icebp
cmp
mov
fucomi
jmp
test
int3
adc
sbb
and
mov
popa
push
mov
clc
int
dec
int3
loopne
stos
lods
sbb
pop
or
test
test
sbb
jl
xor
mov
mov
es
shrb
add
add
add
les
outsb
lock
inc
andl
and
dec
fwait
pop
sahf
shrl
cs
jno
rcrl
mov
ret
in
shll
add
add
ljmp
nop
enter
mov
mov
mov
sub
lcall
push
cli
xchg
adc
aaa
and
pop
mov
dec
cltd
dec
sti
js
sbb
push
add
push
cmpsb
inc
xchg
outsl
fildl
pop
jns
jae
mov
aad
inc
lahf
rcr
mov
jmp
cmpsl
mov
shlb
pop
popa
mov
aaa
jmp
jo
adc
inc
sub
or
add
ret
or
cmp
push
insl
ljmp
dec
push
insl
pop
jl
push
fmuls
cli
mov
into
je
inc
mov
mov
fdivrs
mov
mov
das
add
fwait
mov
or
jg
mov
sub
invd
mov
xchg
push
add
add
pop
in
jno
xchg
and
add
fs
test
inc
shr
xchg
sub
cmp
leave
popa
xchg
xor
je
dec
ret
mov
sbb
fistpll
mov
add
or
in
sbb
push
xor
or
jno
push
push
movsb
add
insl
mov
jp
pop
jno
inc
add
sub
rcll
lret
pop
push
pop
pusha
cmp
mov
and
mov
cmp
jl
jae
aad
and
cs
fstl
sub
dec
mov
test
adc
pop
lret
addl
cwtl
lahf
push
jae
repnz
jmp
push
xor
mov
loopne
pop
fcompl
neg
push
cmpl
jle
push
sbb
pop
cltd
push
fidivrl
loopne
xchg
dec
lods
ja
sub
test
insb
adc
jle
hlt
dec
xchg
push
sub
test
mov
mov
dec
jge
outsl
std
add
xor
push
cld
pushl
out
adc
or
movl
add
xor
bound
stos
xchg
xchg
divl
sub
inc
ja
fnsave
nop
rcrb
lock
clc
inc
mov
push
push
or
sbb
lods
leave
mov
sahf
mov
or
es
jge
dec
icebp
pop
jge
daa
imul
leave
fst
pop
and
cmp
mov
jo
xchg
pop
sbb
xadd
pop
and
js
push
xchg
loop
sbb
sbb
mov
push
cmp
clc
mov
pop
cvtps2pd
call
xor
inc
mov
clc
xchg
or
test
jns
int3
ljmp
daa
mov
mov
mov
mulb
push
or
js
jp
mov
test
xchg
les
and
fisubrs
pushf
jbe
xor
loope
sbb
dec
add
add
pushf
shrb
jb
ret
ds
push
enter
add
add
dec
jp
enter
aas
loop
jne
cld
push
pop
inc
mov
push
sbb
dec
mov
xor
outsb
mov
inc
inc
mov
ja
fists
or
push
aas
subl
cmpsb
test
popa
aaa
xor
popf
aam
cmp
cmp
or
hlt
out
jo
xor
xor
xor
stc
mov
leave
push
adc
mov
jmp
mov
lret
nop
xor
arpl
data16
mov
xor
xchg
repz
ja
daa
jo
ljmp
movsb
push
inc
arpl
fisubs
call
shll
enter
and
inc
cmp
push
mov
mov
mov
inc
adc
sub
scas
add
test
stos
pop
pop
jno
mov
shlb
cmp
das
xchg
push
daa
lods
sub
rorl
pop
loop
insl
or
add
sub
scas
mov
xchg
push
outsl
in
push
pop
dec
leave
add
testb
add
push
sub
js
sti
fs
push
xchg
xor
push
insb
fbstp
push
stos
or
lret
dec
mov
add
sti
popfw
mov
and
scas
sub
aad
sbb
pcmpgtd
das
and
inc
dec
sub
movsl
in
cmp
jecxz
mov
adc
add
jecxz
or
insl
or
out
push
fsts
adc
mov
lods
ror
inc
rcrl
sub
sahf
push
aas
shll
xchg
nopl
fmull
rorl
aaa
inc
cld
imul
scas
gs
dec
mov
pop
adc
adc
out
xchg
rorb
outsb
subb
push
mov
fisubs
sub
in
daa
ljmp
lds
scas
ret
and
shll
cmpsb
cmp
es
ds
popf
add
jg
jne
jne
jg
out
and
inc
daa
sub
add
testb
add
pop
xor
inc
outsb
lret
push
push
sbb
mov
adcb
fst
ds
outsb
or
inc
ret
popf
mov
movsb
lcall
outsb
dec
loopne
pop
andb
outsb
jle
mov
outsl
cmp
dec
loopne
sbb
xchg
lcall
outsl
jle
mov
xorb
sbb
add
sub
sbb
push
aaa
int3
ret
push
pop
outsl
mov
daa
push
test
mov
mov
shl
sub
les
mov
inc
mov
xchg
pop
xchg
nop
call
adc
repz
pop
ds
out
repz
ljmp
cmp
sub
dec
adc
push
shll
stos
scas
mov
cmpsl
lcall
or
fcomps
dec
sub
add
sbb
mov
cmpsb
fstpl
push
pop
add
lret
add
testb
add
cmp
mov
ret
mov
jle
jne
sub
lret
jl
dec
nop
int3
mov
cmp
xlat
mov
lock
sbbb
imul
inc
imul
xchg
aaa
xlat
mov
fcomp
mov
mov
jnp
out
mov
mov
cli
lcall
inc
push
add
shll
out
pop
cs
push
mov
dec
adc
loopne
cmp
js
incb
jp
es
pop
dec
mov
ljmp
lcall
cmpsb
push
mov
mov
cmp
or
cwtl
sbb
rorl
loope
mov
test
imul
add
aam
mov
shlb
xor
dec
and
sub
aad
push
dec
and
jl
or
xor
add
inc
popa
mov
add
and
outsb
jle
lods
not
mov
add
sub
add
testb
add
xchg
psrld
push
loopne
mov
mov
into
add
add
pop
hlt
out
mov
pop
cmp
inc
je
xlat
adc
sub
fstps
ucomiss
in
jnp
jb
rcrl
xchg
mov
pusha
xchg
xchg
mov
jnp
scas
mulb
inc
pop
movsb
xor
mov
sahf
test
in
push
xchg
xchg
push
addb
fistl
push
mov
push
hlt
addr16
cli
push
loopne
sbb
add
and
push
fidivs
jl
fsubs
les
or
out
push
dec
push
inc
mov
das
gs
pop
movsb
out
push
pop
pop
mov
jae
ret
mov
mov
dec
cmc
push
fnstenv
insb
mov
sub
sub
xor
mov
scas
sarb
pop
jmp
push
outsb
aas
add
mov
mov
push
xor
mov
testb
add
fst
mov
jmp
outsb
mov
imulb
mov
ss
pop
icebp
out
adc
mov
adc
sbb
sub
fucomi
test
daa
cmp
cmpsb
fwait
in
xlat
lret
gs
repz
pop
fsts
mov
idiv
inc
int3
popf
inc
adc
aad
rolb
sar
push
cli
push
sbb
fucom
inc
fidivl
push
adc
aas
cmpsb
fdivl
je
outsl
mov
imul
notb
adc
push
stc
orl
into
mov
push
cmp
pop
test
jnp
xor
outsl
jnp
int
pop
mov
lahf
push
loop
mov
pushf
cwtl
lods
fcompl
sbb
or
push
or
push
fisttpl
adc
dec
pop
sub
mov
inc
js
and
jle
popl
mov
lcall
push
cli
movsb
add
test
sbb
xlat
ss
inc
movsb
out
inc
and
into
add
testb
add
mov
mov
mov
mov
jnp
lods
xchg
into
and
mov
stc
mov
int
ljmp
dec
pushf
repz
and
or
sbb
and
inc
ss
fisttpl
addb
lods
dec
jbe
test
mov
jb
or
fisttps
leave
mov
mov
hlt
lods
mov
jecxz
je
inc
jo
out
or
push
add
cmp
pop
push
xor
data16
fistps
or
mov
hlt
xchg
gs
lds
sbb
mov
cmp
and
lods
fidivrl
jle
sub
inc
ja,pn
push
pop
mov
fisttpll
push
loopnew
or
imul
add
ds
sub
cmp
jg
cmp
in
add
iret
add
testb
add
push
adc
test
mov
daa
into
pushf
adc
inc
loopne
push
aaa
arpl
add
sbb
lods
mov
aas
and
push
push
xorl
push
adc
cmpsl
lcall
ret
stos
dec
dec
cmp
cli
sbb
xor
cld
xchg
or
inc
leave
xchg
adc
insl
inc
lahf
pop
movsb
jmp
jl
add
push
enter
dec
xchg
in
in
roll
std
mov
rcrl
add
sbb
movsb
lods
arpl
or
sub
mov
pop
jne
loope
fidivrs
les
and
push
dec
add
enter
push
rolb
xor
mov
cld
sub
and
lock
daa
dec
fstl
push
mov
xchg
outsl
pop
adc
ret
add
jmp
ds
repz
aam
imul
testb
add
or
push
stc
ss
mov
xor
ret
mov
bswap
inc
in
int3
ja
int3
push
dec
push
rorl
cli
jl
daa
xchg
aam
mov
sbb
or
lcall
xor
cli
or
into
int3
and
sub
sbb
add
decb
mov
mov
mov
push
cmpsb
mov
test
or
jmp
stos
cmp
push
adc
arpl
dec
ljmp
std
sbb
cmp
or
xchg
fcmove
or
pop
cld
movsl
add
daa
mov
xor
std
jnp
add
pop
mov
dec
push
es
loope
xchg
inc
push
stos
xor
lret
mov
and
jecxz
pop
jge
out
mov
adc
mov
popl
add
mov
jne
aam
stos
jns
rolb
add
add
add
and
loopne
or
stc
mov
stc
shrb
jae
je
cld
or
outsl
fmull
popf
lret
push
inc
and
je
jp
mov
gs
mov
cmp
out
sbbb
mov
leave
inc
pop
jmp
push
lahf
pop
add
xchg
dec
enter
outsb
divb
jno,pn
cwtl
mov
hlt
jbe
add
jg
jecxz
inc
cmp
mov
daa
scas
cmpsl
add
aad
pop
fdivl
inc
in
mov
xor
jl
ja
pop
rcll
icebp
jbe
push
mov
icebp
push
pop
jle
in
cmp
mov
dec
pop
leave
cmpsl
jge
imul
xchg
mul
jl
jmp
filds
sub
aad
in
mov
pop
xor
out
insl
loopne
push
rolb
mov
into
dec
es
add
adc
sub
xchg
add
enter
in
out
mov
dec
je
push
ljmp
add
sbb
jb
cltd
outsb
pop
jno
xchg
lock
loopne
dec
xor
jmp
xor
ss
rorl
test
daa
fcmovnbe
jns
inc
cld
sahf
pop
in
iret
fbstp
add
sbb
std
or
insl
lods
and
and
cmp
mov
pop
movsb
daa
xchg
sti
out
sub
push
ficomps
lea
jb
jo
loopne
arpl
cmc
mov
jg
shlb
sbb
jae
pop
jge
mov
inc
xlat
jb
push
fsubr
movsl
mov
xchg
sbb
lcall
dec
mov
data16
dec
adc
fcmovnu
fadds
jg
fistpl
ja
inc
and
mov
sub
sahf
popa
into
sub
adc
mov
pop
xchg
mov
jge
xorl
add
test
mov
push
jmp
or
add
imul
cmc
call
cmpsb
aad
out
add
testb
add
icebp
ja
and
xor
jmp
push
cmp
mov
ljmp
in
lcall
in
stos
negb
xor
jae
outsl
pop
gs
cld
stc
mov
in
sbb
fdiv
and
test
mov
lock
cmp
ret
jge
cmp
fsubr
mov
lods
add
xor
mov
dec
call
or
cmpsb
cmc
xchg
movsl
mov
adc
clc
sbbb
out
and
js
lahf
pop
fxch
jns
das
mov
push
daa
cmpsl
pop
movsb
pop
sub
push
or
inc
xchg
repz
sbb
mov
das
sub
mov
cmp
cmpsl
pop
ret
pop
xchg
ja
sbb
out
movsb
and
push
cmp
adc
cmp
stc
dec
imul
into
mov
add
movsl
mov
iret
xchg
xor
inc
sbbb
add
add
fiadds
add
dec
hlt
or
push
adc
ret
or
jbe
dec
or
add
and
in
xchg
or
lods
loop
dec
lock
popf
aas
adc
mov
fcos
not
sbb
in
adc
jbe
lret
adc
push
mov
sub
cmc
lods
gs
fst
stos
fsubp
mov
pop
cld
out
rcrb
adc
imul
mov
xchg
add
dec
aaa
mov
mov
jae
push
fs
out
mov
imull
sbb
imul
mov
adcb
xchg
jl
mov
xchg
cmpsb
mov
jl
jnp
cmp
push
add
jbe
daa
fimull
je
jmp
movsb
add
cmp
lods
or
add
mov
out
out
out
into
gs
fsts
push
cmp
testb
add
mov
mov
push
stos
test
and
inc
or
mov
push
lret
add
jp
mov
dec
ljmp
mov
movsl
jnp
jl
pop
enter
cmp
jo
adcl
cwtl
mov
jmp
and
fwait
jno
xchg
neg
dec
inc
jae
sbb
outsb
clc
scas
mov
or
loop
add
push
push
stc
push
mov
dec
outsl
mov
inc
push
mov
push
mov
mov
jmp
adc
inc
insl
push
sbbl
sbb
or
mov
rorb
xorl
mov
push
mov
jmp
sub
pop
jo
adcl
xchg
jne
pop
pop
inc
iret
sub
cmpsl
aad
stos
into
in
inc
fistps
int3
and
dec
inc
cli
icebp
adc
add
loopne
and
je
out
mov
fwait
dec
mov
testb
add
mov
into
xchg
or
sbb
lret
mov
insl
cs
add
adc
ja
pop
hlt
loopne
xchg
xor
movsb
pop
scas
jl
in
in
inc
cmc
adc
pushw
push
push
lahf
xchg
mov
les
adc
inc
leave
and
cld
lret
sbb
pop
mov
add
sub
add
leave
dec
mov
fcmovu
pminub
adc
sbb
adc
ja
shrl
or
sbb
sahf
jb
les
sub
psllq
dec
inc
xchg
or
insl
xchg
lahf
sti
adc
add
mov
aad
xchg
jo
mov
fwait
cmp
addl
insb
pusha
xchg
sbb
jo
inc
dec
lea
mov
add
jo
jnp
cwtl
push
push
push
scas
add
dec
inc
dec
daa
dec
das
outsb
imul
enter
xchg
lcall
add
stc
adc
mov
pop
jbe
mov
pop
sub
cmpsb
sbbl
pop
ret
or
call
inc
aas
mov
adc
push
push
dec
mov
sub
nop
cwtl
or
pop
out
sub
inc
std
sbb
ficoms
mov
scas
shl
stos
enter
rorl
shll
cmc
leave
jne
sub
lcall
scas
jp
push
push
pop
pop
mov
ret
cwtl
xchg
aam
xor
js
push
cmp
cmp
push
sub
jo
call
psrad
dec
xchg
pop
dec
rcrb
xor
faddl
or
xor
cmp
sbb
andl
jns
lret
shl
pop
mov
lahf
aam
xchg
lock
cmp
mov
fs
push
push
pop
fisttpll
lea
clc
out
pop
push
jge
pop
inc
add
mov
add
popf
mov
lahf
or
fdivs
mov
add
testb
add
and
jae
sbb
scas
aad
inc
in
sub
xor
imul
mov
pop
sub
gs
or
adc
repz
repz
xor
and
xor
push
dec
sub
adc
cs
inc
xor
sub
test
aad
js
repnz
cltd
insb
dec
shl
adc
dec
push
pop
arpl
pop
or
loop
jl
fimuls
jge
pop
es
sbb
rorl
movsl
fistl
sbb
aaa
xchg
mov
ljmp
popa
aad
add
fists
xchg
or
cmp
daa
cli
or
mov
pop
nop
movsl
fidivs
pop
pusha
jnp
inc
jmp
nop
sbb
mov
aaa
push
jge
sbb
cmpsl
stc
mov
lcall
inc
mov
adcl
lods
and
xlat
cld
xchg
push
inc
lods
sti
sbb
cmp
loopne
add
neg
outsl
mov
push
and
sti
mov
stos
fadds
add
add
add
adc
roll
pop
fists
inc
xchg
cmp
push
jle
pop
push
or
js
mov
fs
or
mov
hlt
sti
test
or
mov
popf
movsb
or
inc
in
fdivrs
mov
lods
sarb
addr16
xchg
pop
loop
ret
insb
inc
jb
fs
push
add
mov
pop
jnp
testl
add
cmp
jmp
ret
dec
jns
dec
sbb
push
add
jge
jle
jmp
dec
add
add
out
mov
or
add
xor
into
xchg
sti
push
pushf
mov
push
shrb
mov
mov
mov
and
mov
ds
push
ret
inc
js
nop
aam
mov
int3
fldl
daa
sahf
cmp
cmp
stc
inc
mov
popf
cli
xchg
xchg
movb
xor
add
sbb
sbb
ds
add
testb
add
jnp
sbbb
mov
shlb
cmc
adc
push
mov
pop
lock
mov
mov
icebp
popa
fistps
cmpsb
or
dec
test
and
stos
push
sarb
pop
xchg
scas
adc
mov
ja
mov
cmpl
out
mov
orb
adc
jmp
popl
xchg
or
iret
outsl
adc
jae
xor
aad
xchg
dec
sub
aaa
adcb
stc
mov
and
pop
pop
dec
out
mov
xchg
jo
inc
popa
pop
mov
lea
adc
js
add
inc
xlat
mov
add
add
sbb
pop
mov
std
adc
dec
xor
outsl
aam
cli
insb
jge
int
lret
sbb
mov
or
mov
pushf
adc
ds
sub
fiaddl
add
add
add
jnp
fsubl
in
lock
adc
pop
int
adc
fwait
ljmp
leave
xchg
push
outsb
sti
or
xchg
jmp
in
jmp
jb
or
les
fnstsw
js
dec
fprem1
aam
jne
decl
dec
xchg
mov
stc
movsl
mov
addl
fnstsw
ret
mov
adc
cmp
push
xor
aaa
xor
dec
out
jmp
inc
hlt
sbb
popf
and
or
push
push
hlt
shll
lods
lods
push
mov
jmp
adc
arpl
mulb
or
cli
cmp
aam
jnp
adc
imul
rcrl
and
inc
test
sub
add
jle
cmp
jb
push
mov
push
subb
dec
addr16
fs
enter
xchg
and
idiv
lahf
insl
mov
out
rorb
add
mov
sbb
and
pop
sub
mov
cmp
das
mov
sar
sbb
pusha
or
cmp
mov
mov
sub
xchg
jmp
add
dec
push
and
xor
xor
mov
sbb
jne
mov
xchg
pop
mov
jne
fcmovbe
jne
xchg
inc
incb
and
adc
cmp
repz
adc
add
push
in
in
pop
xor
roll
sarl
dec
xchg
push
sub
mov
push
inc
imul
mov
pop
ja
lods
mov
mov
int
enter
mov
xor
adc
push
xor
adc
adc
idivl
jo
mov
clc
test
or
repnz
mov
xor
add
cmp
jg
loope
cs
push
or
add
add
add
xlat
cmpb
push
cmp
xor
test
sub
sbb
xor
cmp
sbb
int
sbb
pop
xchg
and
lods
or
xchg
jns
inc
xchg
mov
mov
js
xchg
mov
orl
fld
movl
loope
sahf
aas
loop
jo
inc
sti
lret
andb
sub
sbb
out
test
push
xchg
xchg
fwait
add
cmc
cmp
cmp
mov
jbe
pop
pop
aas
add
in
inc
mov
cmp
ds
into
cmc
in
mov
sub
pop
es
push
or
scas
jle
or
cli
adc
sbb
pusha
push
nop
add
test
sti
or
jl
rclb
mov
push
stos
push
sbb
rolb
or
dec
push
sub
mov
mov
add
imul
xor
iret
js
add
testb
add
mov
stc
adc
shll
inc
add
inc
ja
add
rorb
inc
mov
pusha
out
aas
inc
push
test
sub
clc
push
push
jp
lods
fstps
push
and
pop
nop
test
jb
push
std
inc
aam
movsb
sub
icebp
out
pop
push
inc
xor
ja
mov
iret
out
xchg
push
xchg
xchg
mov
stc
sub
mov
daa
sbb
js
test
pushf
fwait
dec
mov
out
imul
mov
sub
movb
lods
addr16
out
shll
mov
lea
arpl
mov
int3
inc
add
scas
jns
adc
pop
in
call
mov
jle
and
ret
jae
aas
and
movsb
jmp
enter
dec
inc
nop
inc
loopne
sub
aad
aam
push
les
sub
fsubl
push
idiv
xchg
adc
out
std
test
add
psubusw
push
xchg
fsubrs
push
inc
dec
outsb
fiadds
add
add
add
inc
xor
shll
cli
fdivrl
jno
stos
inc
pop
imul
imul
pop
dec
xlat
inc
aaa
rcl
cmc
cmpsl
jns
adc
sub
leave
sub
icebp
out
cld
loop
repz
cld
cli
pop
out
shrb
or
pop
sarb
mov
es
lahf
ficoms
and
fs
inc
popf
pop
mov
outsb
into
add
push
xor
dec
stc
out
adc
mov
sbb
call
sbb
aas
in
subb
cmp
cmp
pop
scas
std
sub
cltd
les
bound
mov
cmpsl
push
test
xchg
pop
insl
fstp
jb
jmp
aaa
xchg
sub
fstl
outsb
fcmovnb
movsb
repnz
int
in
xor
sub
gs
movsb
sbb
pop
jne
pop
or
adc
mov
js
outsl
in
jbe
ja
ds
add
in
sbb
sahf
cmc
fsubrp
jnp
mov
sbb
filds
add
add
add
ja
test
inc
out
inc
out
cmp
ljmp
or
inc
sbb
cmp
repnz
loop
pop
movb
mov
xchg
pop
addl
and
fstpt
mov
inc
inc
in
push
cmp
ljmp
xchg
test
and
fs
out
jo
ja
jnp,pn
pop
xor
adc
cmp
push
insl
enter
cltd
xchg
xchg
inc
inc
inc
iret
sbb
movsl
lds
stos
je
mov
cmp
je
push
jo
js
pop
repnz
lret
lods
adc
loope
mov
and
mov
ror
pop
ret
loop
inc
inc
push
out
fxch
aad
jns
add
imul
pop
jmp
into
roll
mov
mov
fcomps
add
pop
dec
jle
jg
std
fldt
cmp
pop
and
pop
loopne
add
add
add
mov
or
cli
add
mov
pop
push
jo
lods
lret
mov
sbb
cmp
pop
cld
mov
arpl
stos
fwait
ja
mov
pop
push
push
loopne
adc
xchg
call
inc
or
nopl
lods
ret
dec
sti
orb
icebp
out
scas
mov
imul
xor
and
pop
movsl
inc
inc
arpl
flds
cmp
rcll
xchg
insl
dec
clc
pusha
scas
jp
fisubrl
cmp
stos
mov
in
into
imul
ret
mov
and
pusha
jb
xchg
mov
add
jmp
imul
insl
test
rcrb
add
adc
xchg
add
shrb
bnd
xchg
test
insb
sub
and
shl
ds
xor
cmp
pop
hlt
jno
aad
outsl
outsl
or
sbb
aad
add
cmp
ljmp
test
sub
push
loope
add
add
add
out
rcrb
push
pushf
mov
inc
push
enter
xchg
dec
push
test
push
dec
fcmovnb
into
or
xorl
xor
ss
ffreep
pop
into
add
mov
rclb
ljmp
lcall
mov
push
pop
hlt
loope
and
sbb
jne
mov
in
mov
jp
loope
fwait
mov
call
ret
jmp
into
shl
jmp
inc
pop
imulb
aaa
xor
test
sub
lock
push
mov
stos
cli
sbb
or
rcrb
stos
out
and
adc
sub
lock
outsl
mov
stc
pop
lods
mov
inc
into
stc
aam
push
int3
in
pop
push
idiv
in
pop
lock
sub
scas
data16
in
dec
testb
adc
sub
add
das
mov
enter
lret
adc
xor
add
sbb
jmp
mov
dec
aam
inc
loop
add
add
add
xchg
loope
cmpsb
dec
and
test
mov
dec
jno
mov
imul
xor
sahf
and
sbb
fisubs
sbb
test
push
fsubrs
dec
data16
jb
jmp
outsl
jno
aam
loope
arpl
add
adc
subb
sbb
ja
sub
stos
jmp
xor
lea
jb
out
sub
test
insl
pop
jmp
movsb
xor
mov
jne
push
aas
pop
outsl
xchg
lock
sbb
test
xor
sar
mov
clc
inc
pop
dec
test
dec
insb
ret
sub
cmp
jl
fdivs
aad
mov
cwtl
jnp
shlb
imul
in
sub
inc
mov
jno
out
fidivs
inc
fsubs
add
mov
popf
jp
sub
inc
adc
xchg
add
cmpsl
fimull
jp
dec
cmpsl
std
popf
cmpl
add
jp
pop
test
rorb
vpshufhw
mov
fbstp
cmpsb
inc
xchg
outsb
in
jnp
mov
iret
push
cmp
push
sar
lea
stos
je
mov
or
retw
scas
imul
les
dec
stos
jae
cmc
ret
sbb
xchg
dec
leave
lcall
gs
mov
dec
mov
adc
mov
cs
es
lret
cli
mov
push
sub
setns
popf
ret
shrb
rcr
sbb
les
clc
scas
minps
ret
add
out
movsb
popa
jbe
push
out
dec
ss
push
push
out
sbbl
sahf
rcl
lods
and
lea
mov
inc
data16
lods
sbbb
mov
push
test
test
rdmsr
rcrl
sbb
add
mov
lcall
mov
xor
add
testb
add
add
lods
rcll
inc
ret
lret
mov
jo
dec
out
js
jecxz
sub
mov
push
cmc
adc
out
push
adc
push
add
lret
pop
mov
cmp
inc
aas
or
daa
mov
cmp
test
mov
movsl
rcrl
xor
jg
ljmp
adc
sbb
in
adc
in
mov
mov
cld
mov
xchg
or
xchg
aam
jecxz
ret
sbb
add
jmp
loopne
lods
aam
adc
xchg
and
das
std
jns
repz
mulb
fwait
mov
subb
jae
sbb
xchg
and
jb
jle
sub
mov
jb
add
dec
mov
mov
push
or
push
fbstp
sbb
add
test
add
xchg
sbb
xor
add
mov
jns
daa
data16
sub
add
testb
add
jb
xor
nop
or
mov
popf
mov
adc
pushf
fnstcw
and
or
std
mov
fwait
mull
fistpl
iret
pop
aad
jge,pt
loop
test
out
and
imul
push
clc
pop
sarl
dec
sbb
std
pop
cwtl
xor
pushf
ljmp
in
mov
divb
push
mov
mov
shll
adc
icebp
fdivrs
js
adc
cmp
fs
in
add
adc
mov
js
push
mov
data16
jno
ficomps
xchg
add
mov
mov
stos
sahf
incl
jo
icebp
enter
and
ret
lds
or
and
and
mov
lret
jecxz
in
xor
xor
dec
ffreep
lahf
mov
push
hlt
fsubs
push
test
add
fadd
fsubp
jnp
push
xor
loope
out
add
add
add
arpl
xor
sub
shlb
ret
mov
and
scas
pop
icebp
out
ret
jb
or
lods
push
into
mov
lcall
out
push
mov
inc
pop
adc
or
xor
ret
andl
xor
bound
cld
imull
or
insl
inc
sbb
push
cmpsb
mov
inc
les
dec
ret
call
imul
loopne
mov
xor
push
and
pusha
cmc
jl
jnp
mov
test
pop
jle
jo
sahf
mov
add
popf
adc
jne
popf
idivl
and
inc
xor
sbb
xorl
inc
dec
ror
fmul
jp
dec
pop
shll
xchg
jg
and
fildl
adc
push
mov
mov
adc
vpacksswb
cmpsb
jae
mov
push
cmp
sub
cld
cli
jle
addb
adc
add
testb
add
and
xlat
call
pop
sub
push
and
arpl
fstps
cmc
mov
and
mov
ds
sahf
clc
sub
pop
aam
and
inc
cltd
cmc
adc
lods
push
cli
mov
int3
push
mov
sbb
jno
inc
sub
dec
cmp
arpl
mov
mov
mov
push
xchg
push
dec
sub
or
std
stos
test
xchg
loope
xor
imul
addr16
xor
insl
mov
iret
sub
stos
daa
mov
lods
mov
and
std
rorb
mov
sub
and
ja
ja
push
in
and
pop
cmp
pop
mov
insb
adc
inc
rcll
mov
lock
pop
sahf
pop
idivb
dec
xor
jbe
loope
cmp
orl
add
ja
sti
dec
push
sbb
push
or
add
testb
add
fisttpll
adc
add
jns
out
fisubs
pop
lea
cltd
xor
push
cmp
in
das
daa
push
pusha
mov
cltd
push
shll
xor
cmc
jle
jle
sbb
movsb
push
ficoml
repnz
icebp
mov
xchg
mov
hlt
aam
ss
sbb
xor
nop
jb
push
sahf
push
outsb
mov
aam
orb
call
inc
jp
lea
mov
insl
outsl
cmpsb
jecxz
iret
xchg
jg
loop
fidivrl
inc
or
mov
push
rolb
call
scas
sahf
movsl
gs
pop
jb
fdivp
sti
in
aam
imul
sbb
jmp
pop
sbb
pushf
jle
inc
rep
lahf
ret
push
into
stc
rcrl
stos
jmp
jmp
mov
fimuls
loop
outsb
incb
fcmovne
movsb
repnz
arpl
add
ror
cltd
outsl
mov
cmc
or
enter
jmp
add
addr16
jns
pushf
mov
das
stos
dec
sbb
add
movsb
mov
cli
in
lock
and
in
getsec
pop
mov
out
sub
sbb
aad
pushf
das
adc
sub
add
int
jle
lods
dec
jno
mov
sahf
popa
xchg
push
mov
push
ljmp
cs
sub
dec
ret
popa
mov
sub
xchg
dec
push
imulb
add
ljmp
dec
lods
dec
xchg
jp
mov
nop
pop
ret
sarl
in
sub
aaa
cmpb
add
cwtl
popf
aaa
dec
iret
mov
pop
lcall
ret
dec
test
dec
mov
mov
je
and
movsl
xlat
xlat
mov
outsb
subb
outsl
push
mov
xchg
or
mov
cmc
xor
insb
clc
cmp
mov
and
add
ja
decl
jecxz
mov
imul
add
testb
add
sub
cmc
sub
lock
lock
dec
xor
mov
push
cmp
into
sbb
into
iret
push
pushf
add
inc
movsb
shll
cmp
jb
xor
int
pop
ja
mov
add
adc
mov
jne
ljmp
jb
dec
mov
dec
rolb
enter
push
inc
push
push
sarb
dec
bound
mov
sti
push
stos
arpl
or
out
negl
xchg
mov
mov
and
dec
cmp
mov
fistpl
into
and
loope
sarl
mov
jg
push
adc
sbb
xor
pop
mov
movsl
cltd
scas
imul
pusha
mov
cli
ja
inc
dec
mov
int
xor
push
add
jmp
mov
add
add
add
lock
jg
mov
and
ljmp
push
or
dec
adc
or
lret
cmp
adc
lods
ja
cmpsl
inc
xlat
mov
xor
adc
sti
xchg
negb
pop
jo
push
mov
in
mov
negl
xor
loope
jecxz
mov
xor
mov
out
pop
jae
mov
sti
or
cmp
aaa
cmp
mov
div
mov
pop
add
ss
clc
popa
popa
push
out
js
dec
sbb
mov
lret
add
loop
jl
sub
xchg
testl
mov
lret
mov
jge
push
xchg
iret
pop
into
loope
loope
and
sahf
add
and
lods
int3
adc
dec
enter
xor
xchg
je
jmp
xchg
loope
clc
push
and
jmp
push
dec
imul
ja
cs
ror
add
push
push
jmp
popa
sbb
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
scas
in
loop
add
testb
add
pushl
insl
cmp
fs
lcall
js
lods
cmp
pop
and
xchg
push
sub
scas
lock
xor
arpl
push
cmp
mull
sbbb
cmpsl
in
ret
adc
lods
sub
sbb
xor
iret
shrl
cmc
pop
shlb
xor
or
adc
inc
into
inc
mov
popf
cltd
decb
dec
mov
popf
cli
scas
insb
lret
lahf
lods
dec
les
cmp
xor
stos
add
es
cmpsb
pop
lahf
dec
aas
mov
aad
orb
hlt
out
dec
aaa
stos
or
mov
inc
adc
mov
and
add
ficompl
das
pop
pop
mov
popa
fsubrs
xor
loope
dec
lock
jmp
and
movsb
aas
arpl
cmc
xor
stc
mov
dec
js
stc
mov
push
nop
aad
add
fsubr
add
testb
add
push
mov
xor
mov
or
imul
loope
ret
loopne
mov
loop
pop
leave
mov
loope
fldcw
pop
mov
popa
test
xchg
inc
mov
fimull
lahf
movb
cmpb
jbe
loopne
or
int3
je
dec
mov
inc
aad
shl
pop
loop
ljmp
in
ffree
ja
shl
cli
inc
mov
pushf
pushf
test
cmc
xor
fcomi
je
jmp
stos
ficompl
sub
test
and
jns
inc
or
sub
js
notb
test
fwait
push
pushf
clc
mov
inc
inc
xlat
call
adc
aad
shlb
push
fiaddl
cmc
aaa
dec
test
mov
scas
scas
mov
cmp
push
stos
cmp
addl
mov
pop
insb
fildll
decb
add
std
lret
into
in
add
testb
add
pop
je
cmp
pop
push
cwtl
xor
test
sbb
leave
call
cwtl
or
xor
pop
xchg
sbb
mov
stos
xor
loope
cli
lahf
cmc
push
jae
jg
shrl
pop
pop
dec
test
mov
mov
adc
add
mov
aaa
or
push
cmp
xchg
pop
fsubl
push
addr16
inc
nop
hlt
add
mov
mov
inc
ss
cltd
fdivs
xchg
mov
jmp
push
cld
mov
dec
cmp
pop
pushf
sahf
mov
xlat
fincstp
dec
mov
imul
mov
sbb
nop
xor
incb
push
xchg
mov
jns
xor
mov
ljmp
data16
shlb
inc
nop
mov
test
push
popf
insb
xlat
inc
sub
hlt
inc
dec
or
pop
push
add
cmp
jnp
sbb
jge
out
add
testb
add
jbe
in
in
mov
sub
stos
mov
shl
fld
adc
mov
adc
stc
fistl
pusha
cli
loop
pop
mov
dec
lods
iret
fld
flds
sti
scas
hlt
mov
ret
push
enter
cmpsb
xor
fiadds
insl
mov
sub
test
or
lock
adc
lds
pop
pop
mov
or
xchg
rcrl
cs
testb
outsl
pop
sti
sub
add
add
loop
add
mov
push
icebp
ds
mov
loop
dec
mov
cmp
push
dec
jae
lahf
cltd
cmpsl
out
std
fs
xorl
in
xchg
mov
mov
push
out
in
jbe
push
ljmp
adc
pop
std
les
movsb
ficoms
mov
in
into
in
mov
insb
inc
jmp
add
out
lods
xor
aas
xlat
jmp
popa
test
mov
add
add
bound
fisttpl
push
loopne
ret
mov
pop
fdivl
mov
insb
pop
loop
fstl
sbb
mov
sub
push
pop
pop
cltd
sbb
loop
mov
pop
add
jno
adc
mov
mov
int
mov
aad
pop
mov
repnz
pusha
cwtl
shlb
pop
xor
lock
add
js
push
out
dec
into
shr
fstl
loopne
mov
incb
push
sub
gs
pushf
push
loop
cld
notl
jns
stos
rcrb
cmp
subl
dec
ret
xlat
or
or
stos
bound
out
leave
ret
pop
push
out
in
jmp
loope
sub
jl
mov
pop
xor
xorl
popa
in
aam
incb
add
jb
scas
cmp
int3
repnz
lock
testb
add
sub
sbb
pusha
lds
lock
cmp
pop
lcall
stc
arpl
das
inc
cmp
mov
jle
repz
mov
scas
fld
cmpsb
jl
sub
dec
mov
jecxz
or
aam
add
popf
mov
xor
and
sub
ljmp
mov
les
lret
loope
mov
in
decb
sbb
inc
imul
cmp
scas
xchg
sub
pop
pop
sbb
test
movsl
push
xor
cld
pop
cmp
mov
xchg
repnz
aam
addl
ret
jge
pop
dec
cld
out
lods
loopne
ljmp
dec
adc
and
sbb
cmp
sbb
push
mov
inc
mov
or
scas
test
gs
mov
aas
jmp
outsb
jb
or
pusha
jmp
test
jmp
add
xlat
mov
bound
icebp
add
testb
add
xor
push
mov
mov
mov
pusha
movsb
xchg
xchg
pop
inc
push
jg
adc
pop
outsb
sbb
xchg
cmp
jle
bound
into
jne
or
dec
mov
cmp
movsl
cwtl
test
movsl
push
sub
lret
push
or
ficomps
js
mov
inc
xor
testb
jmp
cmp
sub
jmp
filds
popa
push
push
imul
lock
cld
sub
push
or
leave
push
mov
arpl
outsb
in
loope
mov
cmc
andb
mov
mov
jnp
sub
lods
or
xchg
arpl
xchg
and
adc
sbb
cmp
mov
pop
fcmovnbe
mov
rcr
add
bound
mov
mov
jne
les
add
mov
aas
jp
int3
icebp
push
sbb
add
add
add
iret
out
xlat
fcmovnb
js
movsb
ds
adc
mov
loopne
lods
inc
mov
jg
call
mov
js
pop
sub
inc
cmpl
dec
shlb
mov
sbb
mov
notl
dec
cli
aaa
cmpsb
cmp
enter
pop
xorb
push
fidivl
loop
test
popf
iret
shlb
hlt
mov
jmp
pop
push
fst
xor
scas
inc
sbb
out
jle
mov
out
mov
fimuls
sbb
and
cmp
jg
loope
pop
fsubs
lods
or
outsb
or
fwait
movsl
fadds
dec
cwtl
jp
lcall
xchg
sarl
add
negb
in
pop
enter
jno
fadds
xor
add
add
loop
fadd
sti
mov
adc
mov
xchg
repz
testb
add
xchg
std
ficompl
out
jle
cmp
in
lcall
in
lea
pop
pusha
adc
xor
mov
sahf
push
cmp
enter
out
dec
fnstcw
inc
lret
out
loopne,pt
testl
aas
cmp
cmp
mov
rol
add
add
testb
rorl
jno
xchg
xor
fs
jbe
mov
cmp
mov
out
xor
pop
inc
cmp
loopne
shrb
cmpsb
js
loope
dec
mov
push
mov
jne
out
pop
jns
cmp
gs
push
int
mov
inc
mov
jns
mov
lahf
nop
xor
insb
in
mov
adc
into
sbb
fistps
cmp
rcll
stos
jg
mov
add
into
adc
neg
jge
push
xchg
lea
add
add
add
mov
cmpsb
sub
add
fbld
cmp
push
les
xor
adc
test
outsb
call
enter
mov
scas
scas
mov
jmp
cli
xor
lock
xor
and
or
or
iret
loope
push
mov
aam
fwait
and
sbbb
lret
mov
ret
push
rcl
push
jg
test
mov
shrb
shlb
loop
stc
mov
inc
aam
cmp
and
sub
fcoml
lret
mov
and
movsl
add
mov
popl
fsubs
lds
es
xchg
mov
sub
lds
and
push
jl,pn
pop
ja
outsl
je
dec
sbb
add
pop
cmp
outsl
jg
jg
mov
xor
lret
jle
add
testb
add
adc
lods
shll
aad
mov
out
mov
aad
ljmp
test
sbbl
xchg
dec
negl
mov
push
sbb
push
loope
xchg
adc
lods
out
adc
cli
movsl
nopl
or
adc
dec
jle
pop
mov
popf
inc
dec
push
pusha
jae
dec
inc
aas
sub
test
and
mov
adc
mov
popf
mov
test
aas
push
movsb
mov
fidivrs
orl
mov
jg
into
mov
je
xor
adc
adc
out
mov
sub
inc
mov
into
scas
or
push
mov
inc
rol
mov
push
and
inc
in
movsb
push
insl
divl
add
ja
and
aaa
negl
jae
and
add
add
add
mov
lods
fcompl
fs
pop
mov
adc
enter
repz
pushf
test
outsb
shll
sarb
dec
ja
and
inc
aaa
and
out
mov
mov
aam
stos
push
hlt
xor
hlt
xor
push
push
mull
cmpsb
mov
das
mov
loop
out
cmc
pushf
lcall
stc
push
xchg
hlt
insl
xor
fbstp
sbb
xor
push
sbb
cmp
faddl
outsb
dec
push
ficoml
lock
sub
mov
and
cmp
arpl
and
push
loop
aam
jbe
fdivs
adc
cmpsl
cmp
dec
jmp
inc
push
dec
adc
jne
push
xlat
add
adc
cmp
xor
cmp
in
sbb
mov
mov
push
loope
pop
mov
jbe
testb
lcall
in
xchg
jecxz
jmp
mov
ss
mov
testb
add
pop
std
ret
or
mov
das
popa
pusha
xor
pop
pop
enter
mov
push
clc
aam
xchg
jno,pn
lock
lock
js
scas
fdivs
mov
je
inc
xor
push
cmp
pop
std
mov
shl
lret
lret
dec
and
adc
scas
lret
pop
mov
loopne
fisubs
test
leave
enter
push
dec
and
test
into
in
in
adc
pop
add
push
push
sbb
jge
pop
cmp
jp
in
je
shll
push
jno
stc
outsb
std
sub
jl
les
jl
xchg
mov
sub
or
add
cmp
call
dec
loopne
add
into
xor
push
push
js
call
jecxz
test
and
jle
jne
cmp
pop
cmp
popf
jl
clc
add
testb
add
in
out
xchg
imul
lock
mov
icebp
lcall
es
rcll
mov
cwtl
popa
inc
push
cwtl
jae
sub
insl
jno
and
sti
out
ss
xchg
jnp
lock
lahf
fdivrp
add
fsubl
dec
jns
pop
add
imul
jae
idivl
jae
mov
lcall
xchg
jmp
icebp
xchg
andl
mov
pop
cmp
add
arpl
cmc
mov
xchg
movsl
cltd
loopne
jg
inc
in
je
push
jno
sub
cmp
mov
push
aam
hlt
test
std
pop
cmc
sub
push
xor
push
jne
xchg
fs
faddl
and
das
jbe
mov
fldt
imul
and
push
aam
lahf
add
sub
scas
fdivr
fnstcw
cmpl
notb
add
testb
add
aas
hlt
fldl
cs
mov
jno
inc
aaa
test
sbb
add
in
mov
cli
mov
in
std
push
jmp
jp
dec
cmpsl
cli
xchg
add
xor
cwtl
addr16
leave
or
lods
mov
xchg
scas
cmp
das
scas
rcrb
cli
add
jnp
push
xlat
lock
gs
test
les
or
test
rorl
decb
mov
addr16
push
push
sahf
inc
or
inc
mov
jo
ret
mov
pop
bound
mov
cmpsb
pop
out
outsl
jmp
notb
or
mov
loopne
xor
ficompl
out
loopne
aas
insl
mov
inc
fwait
gs
lcall
fwait
push
sbb
pushf
inc
adcb
cmp
shlb
jg
xchg
lret
xchg
hlt
cmp
mov
add
ret
add
xor
xchg
fwait
bound
mov
cli
add
testb
add
add
mulb
shlb
mov
sahf
cmpsb
ficoml
sbb
sub
cmpsb
imul
pop
scas
inc
popl
pop
or
dec
lods
pop
pop
cmp
xchg
leave
inc
mov
jle
dec
mov
dec
push
outsb
add
call
nop
adc
xchg
pop
js
add
mov
jl
or
lods
adc
xor
mull
outsl
mov
insb
sbb
or
cmp
jae
dec
fldl
lock
incb
out
mov
sub
cli
lods
pop
in
mov
xor
shll
adc
push
xor
sbb
loop
loopne
lret
lahf
mov
push
mov
sbb
mov
mov
adc
add
xor
dec
mov
mov
and
pop
xor
pop
fs
cmp
sub
add
ds
in
idivl
pushl
and
repnz
sti
add
testb
add
loop
or
cli
xor
divb
insl
cmp
int
lds
es
add
xlat
jno
addl
ds
push
sarb
inc
jl
dec
dec
xchg
adc
mov
fstps
sbb
xor
into
inc
test
cli
loop
addr16
jmp
popl
popf
mov
into
fstpl
aaa
std
sub
ret
mov
dec
mov
bound
das
fisubl
lock
cli
pop
test
push
stos
lock
fmulp
addr16
in
aad
push
inc
rclb
cmpsb
or
sbb
xor
fstpt
jnp,pt
dec
mov
repz
ja
iret
mov
mov
cmp
in
mov
ljmp
stos
sbb
sub
cmpsl
and
popa
rorl
fcomps
cwtl
stc
shll
scas
cltd
lock
out
mov
add
add
jecxz
inc
cli
aas
push
ljmp
cmp
add
testb
add
jbe
inc
add
in
ffreep
ja
flds
sbb
icebp
mov
inc
stos
inc
pop
jae
lock
enter
add
xor
aad
sbb
jno
jnp
js
adc
pop
jle
jne
adc
mov
sbb
xchg
popa
jg
nop
mov
jnp
adc
add
mov
sti
loope
pop
rcr
mov
sbb
pop
cmp
adc
pop
pop
push
jl
dec
lods
inc
push
mov
iret
dec
in
or
pop
test
push
mov
add
jg
data16
lahf
out
mulb
xlat
in
inc
and
mov
data16
adc
std
ljmp
lahf
cmp
mov
leave
push
cmp
pop
vcvtsd2si
divb
jae
mov
stc
cmp
ja
mov
std
sbb
cltd
movsb
push
loope
arpl
add
lcall
mov
std
add
testb
add
mov
cmp
and
add
and
adc
in
in
add
aam
lock
cmpsb
sti
dec
test
jmp
in
xchg
fwait
push
rcrl
movsl
push
add
inc
add
mov
out
and
add
cmc
add
mov
ficoms
sub
arpl
push
cs
loop
jno
cmp
mov
cmp
sbb
inc
stos
jge
in
pop
xor
je
inc
mov
mov
add
sti
in
pop
pcmpeqb
pop
mov
call
lahf
popf
cli
lock
outsl
cltd
not
ret
pop
add
dec
or
shl
xor
insb
xor
je
pop
push
pop
into
sub
mov
inc
cmp
loopne
adc
rcrb
fcmovu
out
ja
gs
pop
push
or
xor
and
aaa
jae
cltd
dec
mov
fs
add
testb
add
xchg
pop
fwait
jne
std
jp
cmp
les
cwtl
stos
dec
lahf
xchg
pop
pushf
lods
inc
out
daa
test
dec
repz
mov
aaa
and
mov
add
dec
imul
jns
repz
fs
lods
test
mov
xlat
push
pop
mov
add
js
sub
fnstsw
push
loop
gs
aas
pop
fsubl
jge
xor
ja
or
mov
adc
shr
cltd
je
xor
cwtl
fwait
adc
orl
les
xchg
mov
sub
clc
jae
cmpsb
mov
insb
or
or
cmp
xlat
mov
pop
loopne
jnp
sbb
xor
insb
out
lcall
stc
lods
sbb
pusha
sahf
in
hlt
aam
fsubrs
les
cld
lret
leave
stos
mov
push
movsl
fcmovnbe
dec
addr16
repnz
popf
add
ds
into
nop
out
cwtl
jle
xlat
movsb
add
mov
add
add
add
dec
mov
pop
fwait
scas
fs
pusha
dec
pop
lret
adc
pusha
add
roll
dec
lcall
push
mov
jns
cmp
dec
lret
push
aam
sbb
repz
cmp
pop
and
mov
add
in
mov
xchg
xor
dec
inc
cmp
sub
leave
sbb
sub
cpuid
fdivrl
movsb
push
xchg
jae
imul
and
push
sub
rcrb
jp
inc
icebp
mov
fldl
add
sbb
shrl
sti
xor
shrb
out
loopne
xchg
jecxz
in
jnp
les
rcll
fldl
scas
and
sbb
jae
jl
pop
xchg
sub
pop
ljmp
flds
outsl
or
imul
add
jno
test
jg
xor
or
pop
mov
add
add
add
push
pop
mov
cmpsb
xchg
jnp
test
addr16
pop
pop
test
jb
xchg
mov
lret
mov
mov
xchg
in
imul
aas
sub
sbb
sub
pop
test
hlt
pop
xchg
test
mov
shll
jns
stos
in
and
pop
int3
push
push
sbb
jnp
xor
ljmp
mov
xor
inc
outsb
movsl
cmp
in
adc
adc
push
pushf
sahf
xor
adc
insb
fldt
xchg
jge
jle
push
inc
or
imul
movsb
add
fiaddl
adc
mov
es
add
jbe
fimuls
int3
int
mov
aas
push
pop
xor
mov
out
nop
shlb
hlt
outsb
div
orb
adc
movsb
push
in
cmc
jne
pop
adc
das
sub
pop
push
add
add
add
add
test
mov
cli
cmpsb
sub
lret
sub
repz
pop
int3
popa
mov
inc
mov
sbb
sahf
sbb
mov
dec
je
aaa
inc
and
xchg
sub
lcall
mov
cmp
out
sub
cmp
dec
movlps
xor
fisubs
sub
std
repnz
dec
add
sbb
and
push
pop
std
pop
mov
and
mov
cmp
push
negl
xor
jle
jno
mov
dec
leave
xchg
pop
hlt
mov
dec
sub
mov
test
cmp
test
sub
sub
mov
aam
loop
xlat
push
rcll
mov
lock
and
les
in
stos
push
adc
mov
add
out
shlb
aas
out
fwait
aaa
call
scas
cld
add
add
add
add
xchg
sahf
xor
push
cwtl
adc
in
jbe
sbb
gs
xlat
roll
test
out
lret
into
sbb
xor
loope
testl
inc
mov
jl
xchg
std
xor
adc
mov
or
push
insl
scas
jo
push
xchg
xchg
aaa
mov
cmp
dec
out
std
adc
mov
cmp
lcall
sub
cmp
xlat
or
push
popa
cltd
sbb
or
shr
push
sub
insl
mov
lcall
pushf
add
aad
test
mov
cmp
movsl
cmc
sbbl
sub
pop
xchg
adc
sbb
test
dec
sbb
xchg
pushf
mov
insb
addr16
mov
xchg
add
mov
sarl
in
ds
pop
mov
fwait
push
lcall
or
mov
aas
xlat
dec
and
testb
add
mulb
call
call
mov
inc
push
dec
sarb
arpl
incl
dec
add
lret
movsb
lods
push
or
sub
lcall
das
fadd
or
ja
xor
adc
dec
sub
adc
pop
scas
faddl
rclb
jae
jb
sbb
jne
push
mov
imulb
sbb
jmp
and
xchg
fistps
test
stos
mov
pop
popa
cmc
stos
mov
mov
inc
push
push
push
mov
ljmp
mov
cs
pop
cmpsb
mov
ds
repz
test
jp
sub
and
inc
fabs
pop
out
jmp
fbld
mov
push
ret
xlat
popf
rclb
or
dec
mov
push
adc
mov
lock
fldcw
add
ret
bnd
rorb
cltd
jl
cmp
cmp
add
add
add
add
loope
mov
sub
insl
shrb
cmc
lret
std
cmp
mov
ret
fisttps
sbb
pushf
cmp
sbb
cmp
hlt
adc
xor
mov
sub
xor
hlt
dec
cltd
dec
hlt
sbb
int
test
lea
sub
jb
sbb
cmpsb
shll
in
or
or
mov
sub
xor
mov
fcompl
mov
or
sub
dec
lret
pop
pop
iret
xor
icebp
test
add
fdivr
lods
pop
ja
adc
push
xor
stc
cs
inc
ret
xchg
mov
mov
daa
leave
pop
adc
pusha
fs
sub
xor
xor
mov
mov
mov
cli
adc
shll
in
int3
test
ds
xor
xor
mov
ficoms
add
add
std
aaa
mov
lret
jne
and
aam
add
add
add
add
ror
pop
outsb
inc
rcrl
in
test
aas
and
jl
rolb
fcompl
cmp
inc
aas
inc
add
movsb
adc
add
je
adc
and
dec
xchg
ds
pop
or
loope
add
lea
jl
and
and
test
xchg
jns
mov
loop
xchg
cld
add
dec
lahf
jle
dec
in
inc
mov
mov
loope
push
add
xchg
or
jno
insb
jl
ljmp
mov
cmc
cmp
fcoml
dec
ror
lea
mov
pop
out
js
repz
imul
or
imul
mov
sub
mov
lock
fsub
psllw
idiv
fnsave
mov
mov
pop
stos
mov
add
hlt
push
das
subb
dec
push
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
gs
or
popa
mov
dec
cs
push
sbb
add
push
cmp
jne
insl
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
