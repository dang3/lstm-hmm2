mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
jb
and
push
add
jmp
mov
xlat
les
les
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
mov
adc
pop
inc
jmp
insb
xlat
hlt
lds
cmp
pop
cmp
mov
adc
xor
sub
sub
mov
mov
sbb
cmp
push
push
dec
xchg
or
andb
or
ret
push
aam
push
mov
push
and
in
cmp
add
sbb
int
cld
repz
add
sub
scas
mov
mov
insl
rcll
movsb
rcl
ds
shrl
cmpsl
push
hlt
push
in
mov
test
mov
in
xor
lods
or
xchg
es
xchg
dec
mov
lret
and
sbb
xor
aaa
mov
cmp
xchg
mov
sub
mov
push
cmpsb
gs
and
xorb
test
sbb
dec
or
ljmp
stos
pop
pusha
push
mov
lods
lahf
add
iret
rorb
xchg
and
dec
shlb
gs
pop
push
mov
ror
pop
fmulp
mov
loopne
scas
xchg
and
pusha
or
test
xor
aad
mov
push
lock
push
sbbl
sbb
pop
cmp
in
mov
and
js
std
inc
push
jae
dec
xchg
jno
and
or
jbe
inc
or
sar
mov
mov
lds
pop
cld
call
lret
mov
mov
sub
jns
mov
icebp
inc
mov
mov
mov
int3
inc
icebp
subb
divl
in
leave
cld
mov
and
pushaw
inc
ret
mov
jo
dec
in
popa
outsb
bound
out
jno
popa
insb
adc
xchg
mov
or
jl
jle
mov
sbb
es
pop
mov
cmp
adc
or
lea
shlb
inc
cs
ret
fs
or
sbbb
push
pop
xchg
inc
repz
stos
test
sub
xor
test
sub
or
sub
imul
ror
je
cli
xor
std
in
pushf
lcall
neg
sbb
and
ds
jl
icebp
inc
pushf
dec
mov
cmp
inc
imul
or
ret
xor
mov
lret
sbb
arpl
sbb
pop
jnp
push
clc
pop
lds
xor
scas
jecxz
inc
shl
xchg
mov
daa
shlb
enter
aad
push
cld
pop
or
popf
lods
std
loop
mov
loope
xchg
push
dec
push
mov
ret
mov
mov
push
pop
inc
lahf
push
sahf
sbb
cs
and
and
mov
jne
jb
lea
jl
jno
lea
and
cli
add
test
push
xchg
dec
sbb
in
xchg
dec
imulw
in
or
add
xchg
testb
mov
jl
inc
pusha
adc
lock
and
aas
imul
mov
hlt
les
mov
iret
jg
cld
pop
sub
push
mov
out
jb
leave
mov
fs
in
dec
add
lods
shlb
cwtl
ja
mov
adc
jne
cmp
cmp
das
orpd
imul
inc
cli
in
js
inc
xchg
aad
ret
into
mov
push
and
inc
dec
fsubrs
sbb
out
xchg
stos
nop
out
adc
popf
cs
jl
cmp
adc
or
stos
xor
ljmp
popa
pop
xor
or
rcrl
fstp
addr16
shll
mov
push
iret
in
and
scas
nop
gs
cltd
iret
arpl
pushf
push
daa
test
pop
negl
stc
cmpsb
das
add
pop
sub
std
rcrb
iret
movsb
ret
add
pop
fidivs
xchg
or
dec
inc
xchg
sbb
nop
cmp
xchg
ret
les
lret
dec
je
push
popa
fisttpl
adc
jmp
lcall
mov
push
mov
sbb
xchg
xor
pop
rolb
in
push
ds
aas
das
and
out
jnp
lahf
inc
push
stc
lea
push
or
add
or
xchg
lret
adc
out
fstl
aas
pushw
jae
jne
mov
ret
sub
mov
loope
and
mov
inc
mov
mov
cmpsl
pop
pop
fildl
pop
xor
adc
insl
cmpb
cltd
test
xlat
xor
arpl
cmp
aam
dec
or
xchg
jb
jle
cltd
push
jb
subb
sub
jg
xor
push
out
or
or
cmp
sub
xchg
inc
xchg
out
lcall
jae
xchg
sbb
mov
cmp
xchg
std
pusha
push
shll
sub
add
popf
pop
sbb
mov
dec
pop
fisubrl
bound
hlt
xor
int3
xor
ret
mov
jecxz
and
inc
or
insl
out
mov
stc
movsb
pop
or
pop
mov
sbbl
dec
or
jo
sahf
jge
xchg
xchg
push
push
jb
stos
ds
sbb
mov
mov
in
dec
sub
mov
add
jne
fwait
test
insb
sub
fucom
out
clc
lock
insb
or
mov
lods
and
cwtl
dec
adc
lret
cmp
dec
cmpsb
add
dec
cmp
mov
adc
cltd
inc
test
repz
fwait
adc
insb
mov
inc
popf
imul
in
adc
or
fcoml
push
out
ja
mov
push
xchg
rcrl
xchg
jmp
push
cmp
mov
and
pusha
inc
mov
scas
add
cmp
fcmovbe
daa
pop
iret
and
sbb
sbb
les
out
out
mov
mov
jg
mov
add
lret
pop
jbe
imul
shlb
mov
push
xor
sbb
jns
addr16
xorps
add
xor
add
and
mov
push
movsl
mov
mov
inc
jne
das
loopne
cs
dec
or
out
push
sub
xlat
icebp
and
arpl
sub
pop
imul
in
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
setg
ret
ret
sub
inc
lods
std
testb
mov
lea
dec
mov
outsb
mov
loop
data16
sbb
sahf
inc
leave
std
stos
xchg
jns
stos
insl
bound
test
cwtl
push
movsl
icebp
repnz
cltd
sarl
jmp
roll
pop
sbb
cmpl
stos
cli
sbb
fs
int3
cld
add
mov
shlb
sbb
js
cld
sub
or
rcrb
fmull
jle
xor
shrl
fdivr
aam
xor
mov
mov
xchg
inc
mov
mov
mov
dec
pop
aaa
es
repz
sbb
xor
xchg
jecxz
das
arpl
and
pop
pop
xor
push
clc
xchg
cli
mov
inc
add
push
xchg
or
dec
dec
add
cmpsl
or
and
xor
pop
cmp
aas
clc
lahf
cmp
in
add
mull
cmp
popa
dec
dec
insb
fwait
out
out
in
adc
cmpsl
jp
sub
ljmp
inc
mov
fsub
push
dec
frstor
iret
fldl
lods
lcall
jl
dec
and
sub
ret
add
int
inc
inc
cli
jns
adcl
jnp
lcall
and
jno
sbb
pop
fildll
sub
dec
lock
xlat
mov
scas
les
pop
jmp
dec
cmp
add
jne
or
sbb
je
cmpsl
cwtl
xor
lahf
xor
push
out
fcmovnbe
mov
pop
push
sbb
nop
lea
shll
movzbl
and
or
sub
mov
jno
std
testb
cmp
icebp
pop
testb
shlb
ja
adc
in
stc
loop
in
jle
cs
xchg
scas
and
jb
mov
xchg
xchg
mov
lds
mov
mov
repnz
idiv
xor
push
aad
stc
jmp
inc
lret
jnp
int3
inc
fsubl
xchg
dec
mov
mov
dec
dec
inc
or
jmp
sbb
mov
movsl
sti
add
mov
das
push
ss
mov
adc
lods
rolb
jg
cmpsl
sub
out
or
cmp
push
xchg
push
mov
push
out
jle
lods
and
jo
cmp
imul
mov
pop
add
xchg
lock
lods
iret
xor
test
jge
push
int
mov
and
push
or
inc
cli
ljmp
jmp
or
lret
mov
lods
xlat
popa
lret
popf
sbb
idivl
sub
cmp
and
lret
outsl
push
xchg
sbb
mov
pop
mov
fwait
pop
test
popa
gs
or
push
inc
rclb
inc
lock
ja
jmp
push
adc
cli
arpl
mov
hlt
push
or
inc
dec
push
je
pop
adc
je
imul
out
inc
inc
in
cld
xchg
cmpsb
jmp
pop
jmp
call
mov
mov
push
imul
les
call
pop
mov
mov
rcrl
cld
adc
pop
in
mov
enter
je
pop
andl
int3
push
pop
in
fstps
es
jmp
out
sbbb
data16
hlt
out
push
call
testl
sbb
subl
sbb
dec
dec
rolb
std
and
stc
mov
mov
in
sbb
pop
adc
cmp
or
aad
fwait
data16
xor
test
add
leave
icebp
xchg
subl
call
bnd
shll
add
or
sbb
clc
and
lahf
or
mov
push
sub
mov
pop
fisttpll
inc
mov
movswl
jle
scas
adc
movsl
fwait
and
pop
outsb
adc
jnp
jae
jle
popf
bswap
movsl
sbb
mov
mov
and
push
les
mov
jecxz
xlat
sti
hlt
andb
add
and
jbe
es
and
push
xor
jecxz
lcall
mov
dec
out
inc
jl
repnz
ss
ljmp
notl
add
pop
stos
jg
pop
ret
outsb
pop
xor
xchg
pop
jne
arpl
sbb
jg
push
cmp
loopne
popa
mov
lock
adc
xor
in
sbb
cltd
sbb
pusha
xlat
inc
andb
loopne
dec
test
int3
mov
mov
leave
fistl
mov
pop
xchg
gs
pop
push
push
and
xlat
andb
fimull
cmc
out
enter
xchg
lret
mov
sub
pop
int3
push
inc
inc
xchg
dec
pop
pop
mov
icebp
cltd
jb
lret
or
push
mov
leave
push
jne
sub
psadbw
call
ret
push
fistpl
mov
sub
imul
push
jne
fisubs
insb
or
mov
inc
inc
xchg
sub
leave
mov
dec
mov
push
out
jae
movb
and
sahf
adc
icebp
push
or
sbbb
xorl
outsb
push
add
mov
lods
insl
cmc
mov
sub
or
jne
push
jecxz
fmuls
lods
mov
dec
add
mov
scas
in
cmp
lods
movsl
ss
enter
dec
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
paddb
repz
aaa
push
or
xor
fisubrs
adc
fucom
stos
adc
aas
dec
pop
mov
inc
add
sbbb
into
faddl
xchg
sub
movsb
aam
adc
jne
jne
gs
movsl
push
in
scas
nop
push
lea
lahf
icebp
adc
inc
inc
jl
inc
sub
jl
cmpsb
and
fsubl
mov
popa
push
adc
cltd
rcll
scas
cmpsl
or
shlb
insb
or
push
mov
jl
data16
adcl
jo
xchg
int3
shll
daa
cmpsl
and
mov
enter
hlt
xchg
out
movsl
mov
test
sub
enter
fwait
aaa
aad
mov
mov
es
popa
test
jl
das
add
orb
std
insl
or
es
jbe
repnz
jp
jno
orl
shlb
pmaxub
push
cs
jge
jp
lods
into
outsb
xor
cmpsl
lods
iret
sbb
jne
pop
mov
out
cwtl
pop
pop
les
clc
test
cwtl
imul
and
outsl
cmp
or
loope
cmp
mov
dec
mov
xor
test
mov
xor
imulb
mov
das
pop
add
arpl
fs
xor
pop
sbb
loop
shrl
mov
push
dec
mov
ja
fcomps
adcl
sar
mov
jnp
adc
or
dec
fcompl
add
pop
fisubl
jle
and
sbb
ds
sbb
leave
add
mov
xchg
insb
mov
lods
hlt
xorl
movsb
mov
repnz
pop
cltd
loop
shlb
mov
orl
xchg
sub
orb
lock
adc
xchg
aas
pusha
xor
jp
punpckhbw
fwait
repnz
dec
in
mov
in
int
and
popl
and
pushf
xchg
mov
gs
cmp
adc
ficoml
stos
adc
ljmp
cmc
pushf
jns
arpl
test
or
or
popf
scas
pop
in
or
movsl
mov
mov
rorl
add
seta
test
int3
pop
aaa
out
sbb
pop
push
insl
mov
jns
sbbl
imul
adc
and
inc
xchg
ds
inc
in
xchg
jl
hlt
fsubrs
and
cmpsb
push
shll
sbb
xchg
cmp
mov
scas
dec
adc
aam
dec
stos
out
nop
mov
rep
pop
pop
out
jo
pop
dec
mov
mov
data16
repz
cs
dec
inc
adc
cmp
test
xor
cmp
in
subl
cmp
jle
lret
jg
and
mov
popf
xor
int
test
mov
ficoms
add
out
daa
imulb
dec
ficomps
fmulp
push
adc
jne
xchg
loopne
shll
gs
movsb
add
sarl
in
sub
fistpll
push
pop
cmp
decb
or
lcall
test
pop
push
lods
call
nop
mov
jne
iret
sub
jnp
insl
outsl
cmp
pop
fidivl
and
mov
or
xchg
popa
dec
pop
mov
xor
jns
adc
and
clc
je
pop
repz
xor
iret
outsb
in
mov
or
inc
push
test
jmp
push
pop
jmp
jns
pop
in
push
das
aas
cmpsb
stos
pop
add
sbb
adc
mov
jmp
pop
push
sbb
jbe
fwait
xor
jge
inc
cvttps2pi
or
mov
dec
push
adc
sub
sti
pop
mov
xor
dec
add
std
xor
shl
jle
pop
out
jp
fcmovne
dec
xchg
mov
das
cmp
hlt
js
aam
inc
lcall
aam
dec
cwtl
cwtl
add
sbb
add
push
pop
je
sub
or
adc
fucom
test
scas
mov
sbb
add
loopne
dec
jo
push
sub
hlt
fsubrp
aad
jp
scas
inc
orb
push
mov
in
das
fmuls
in
push
cmp
jecxz
lret
jmp
mov
out
mov
adc
test
sub
std
pop
fsub
stos
ret
jge
mov
nop
pop
ljmp
inc
cmp
aam
sbb
xor
out
cmp
jnp
sub
movl
into
outsl
fsub
adc
out
pop
addr16
int3
lret
inc
inc
mov
pushw
sbb
roll
jns
sbb
loope,pt
jge
push
dec
mov
imul
mov
jp
jbe
pop
inc
mov
adc
mov
pop
mov
repnz
cmp
les
sbb
pop
ret
jg
push
loop
test
aam
inc
and
cmp
and
aad
je
ret
outsl
or
cmp
ljmp
fnstsw
xor
out
fildll
or
cltd
insl
int
loope
ljmp
jne
enter
popf
ret
jg
hlt
ja
inc
or
in
push
xcrypt-cbc
cmpsl
xchg
mov
movsb
lds
adc
lods
into
and
xor
popl
cwtl
mov
lret
cmp
xor
mov
pop
pop
pop
mov
test
cltd
clc
dec
xor
lods
divl
or
fcmovnb
cmp
int3
lea
mov
lods
sub
mov
mov
adc
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
add
pinsrw
setg
mov
mov
or
ja
scas
jmp
ja,pt
aam
test
in
pop
pop
notl
test
push
push
mov
and
aas
js
cmpsl
out
movsl
sub
push
ljmp
push
mov
mov
mov
jg
jle
cmpsl
out
cmp
hlt
mov
xor
mov
test
in
jp
data16
cmpsl
in
xchg
jae
mov
ret
cmp
and
insl
es
sahf
add
repz
or
push
or
movsl
lahf
mov
adc
adc
push
repnz
cwtl
jl
rcrb
pop
sub
xor
add
jno
push
out
mov
lcall
pop
test
loop
jo
cmp
mov
xor
ds
scas
sti
mov
insb
pop
and
pop
les
mov
mov
cmc
sbb
sbb
and
jae
rcl
stos
and
cmp
jge
movsl
pusha
out
push
andl
out
push
push
push
push
push
out
rclb
scas
outsl
pop
daa
pop
pop
sahf
lds
leave
pop
jle
push
repnz
cmp
mov
test
mov
mov
jae
xchg
jge
xlat
lahf
cmp
sub
xchg
xchg
jno
add
mov
fmuls
ret
adcl
iret
xor
testl
movsl
test
ljmp
cmp
dec
mov
pop
outsl
pop
in
sbb
push
inc
xor
mov
fsts
ret
mov
aaa
mov
stos
mov
inc
outsl
std
mov
or
cmovns
jp
enter
popf
ret
mov
sbb
js
inc
sub
and
in
mov
subl
push
lds
mov
rcll
mov
loop
stos
fcomip
jno
or
pop
dec
inc
inc
andl
rolb
fstl
adc
jg
mov
fists
xchg
mov
insl
bound
and
pop
ret
in
cli
sti
xor
xor
pop
nop
hlt
jne
jbe
clc
cmp
cmp
test
inc
pusha
xchg
cmc
lods
cli
je
pop
insl
lahf
dec
adc
jmp
aaa
sbb
daa
pop
pop
rclb
js
mov
pop
jmp
mov
inc
sub
push
push
int3
repz
fld
repnz
jbe
leave
out
fwait
arpl
mov
pop
push
les
hlt
xor
icebp
lret
push
loope
test
dec
sub
mov
mov
and
and
das
out
sbb
mov
xor
xor
fmulp
lahf
shlb
ds
push
aad
xlat
test
xchg
lret
sahf
data16
jmp
cmp
mov
mov
jnp
imul
jne
dec
and
popf
jns
inc
ljmp
arpl
outsb
push
add
loop
lods
scas
das
fldcw
outsl
xlat
mov
out
shrb
lea
adc
rcl
int
adc
jge
pusha
lcall
stos
je
xchg
cmp
xchg
sbb
mov
out
rclb
fwait
lods
dec
pusha
mov
jmp
jnp
push
sti
pusha
lods
cmp
xchg
lret
mov
sub
sub
mov
jne
push
adc
sbb
add
pop
popa
jp
inc
movsl
push
mov
pop
mov
jbe
dec
pop
xchg
sbb
bswap
call
cmp
inc
or
adc
adc
cmpl
mov
sub
sub
gs
rcrb
mov
lea
fnstenv
loop
int3
pop
pop
jno
jge
roll
pop
xor
ja
enter
loopne
stos
shll
jb
in
enter
inc
mov
aas
add
xorl
out
std
add
or
lds
jno
daa
mov
mov
adc
add
and
push
shlb
pop
icebp
cs
jns
mov
insb
jecxz
adc
pop
into
ret
icebp
arpl
shlb
xor
test
push
cmp
ret
ss
mov
dec
fstpl
add
pop
icebp
add
dec
mov
pop
stos
jle
fs
aam
outsb
les
inc
add
mov
adc
popf
cmc
dec
mov
fsubrs
ret
push
and
xchg
inc
neg
rcrl
je
mov
aaa
mov
cmp
outsb
rol
lock
std
mov
xchg
js
xor
pop
adc
add
mov
dec
dec
mov
fisubs
pop
repnz
jae
push
add
xchg
or
insb
jl
clc
xchg
dec
push
es
aas
cmp
arpl
shrb
jmp
mov
movsb
lds
shll
stos
jno
jbe
sbb
cwtl
cmc
pop
pop
add
lods
subl
mov
fwait
mov
ljmp
mov
call
movsl
push
jns
in
or
or
in
sarl
jmp
mov
sarb
xchg
mov
push
ret
or
xchg
aad
gs
lea
mov
xor
pop
or
adc
lods
mov
adc
push
rcpps
mov
adc
dec
sbb
aam
fadds
jg
outsb
test
or
jne
into
test
es
mov
cmp
mov
data16
jg
jb
xor
pop
sub
add
mov
push
repz
pop
push
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
pop
xchg
cmp
pinsrw
pextrw
nop
imul
rorl
add
jno
pop
incb
jmp
movsl
dec
dec
das
sub
maxps
iret
fmul
cmp
loopne
repz
jno
fisttps
mov
cmp
int
adc
inc
das
pop
dec
rcl
mov
sbb
movsb
push
inc
cmp
in
dec
sub
mov
push
add
mov
or
xor
jb
mov
fcomps
mov
repnz
jno
xchg
xchg
stc
or
push
or
sub
jp
push
outsl
and
pop
xor
in
jg
dec
in
mov
push
push
jmp
pop
mov
ficoms
ret
ficompl
fmuls
or
repz
js
and
jle
outsb
sarl
mov
fdivl
or
repz
ret
movsb
or
stos
rclb
mov
imul
jo
imul
pusha
sub
sarb
dec
sbb
mov
push
sti
push
or
pop
jb,pn
fs
cmp
add
loope
adc
cmp
in
add
push
sbb
inc
inc
loopne
arpl
packssdw
mov
lds
mov
xlat
jb
cmc
ficoml
sub
cli
or
pop
cmp
xlat
lcall
and
push
pop
xchg
or
adc
push
fdivs
dec
inc
and
mov
mov
push
popa
ss
outsb
ja
jg
fidivs
xlat
or
fstps
or
orb
mov
in
xchg
sbb
out
and
inc
jae
xchg
jle
lock
inc
cmc
push
fmuls
push
xchg
out
jno
or
inc
pop
cmc
lock
stos
mov
cmp
ss
sahf
sti
jg
and
push
mov
scas
frstor
shrl
hlt
dec
inc
ljmp
daa
pop
or
test
xchg
imul
xchg
add
sub
sbb
jg
adc
hlt
out
and
rorb
cmp
sub
int
mov
add
movsb
leave
jbe
push
cwtl
lea
gs
pop
push
addr16
push
addr16
out
insl
inc
lods
jp
jmp
insl
cmp
lret
pop
mov
sbb
push
jmp
cmc
movsl
push
das
shll
repz
call
sub
ljmp
mov
pop
xchg
mov
sti
decb
push
mov
mov
mov
outsl
stos
cs
cmpsb
pop
fldl
pusha
sbb
cmp
scas
mov
andb
jb
jb
add
pop
mov
jae
shrb
adc
movsl
jmp
clc
jae
push
icebp
sarl
cwtl
pop
jo
xchg
jne
cli
or
push
sbb
js
fbld
lods
loop
sahf
ret
cmp
adc
ljmp
pop
out
pop
stc
dec
push
dec
int3
je
push
sbb
add
into
clc
int
repnz
pop
or
xchg
pop
sbb
sub
mov
lcall
push
or
stc
inc
mov
shll
mov
xor
lcall
push
mov
xchg
sub
repnz
sub
inc
or
dec
jnp
psrad
sub
shrl
sub
push
rcrb
mov
mov
sbb
push
xor
xor
cld
ljmp
clc
sub
dec
imull
cli
mov
mov
push
jle
pop
inc
jo
stc
or
and
in
cld
dec
enter
add
inc
mov
cmp
push
add
out
test
push
cmp
out
nop
dec
cmp
pop
xor
jge
movsb
add
jne
lods
insl
xchg
jp
inc
scas
xchg
ljmp
and
xchg
mov
clc
ja
add
mov
andb
mov
sbb
aas
and
jo
xorb
push
ficoml
out
lcall
call
outsb
popa
jmp
in
mov
out
cmp
int
or
and
and
mov
mov
cltd
lcall
loopne
loopne
mov
adcl
add
arpl
lock
out
jnp
in
hlt
lods
or
cmpsb
scas
fs
pushf
sbb
mov
insb
xchg
cli
add
nop
sbb
xor
jp
or
sub
jb
jg
inc
fdivrs
push
mov
xchg
mov
jnp
andb
add
xchg
xor
pop
repnz
fwait
jg
mov
mov
stos
into
mov
lcall
lcall
push
cmc
push
jne
insl
imul
movsl
call
mov
xchg
jb
push
pop
adcb
lret
mov
add
sbb
rclb
lods
mov
data16
inc
inc
jno
cmpsb
popa
or
roll
push
pushf
cmp
dec
sbb
mov
cmpsb
cltd
pop
lret
or
js
mov
xchg
popa
sbb
out
fs
shrl
leave
push
mov
sub
scas
push
or
out
test
sub
jp
xor
mov
xlat
mov
in
cwtl
stos
mov
and
out
pop
into
lods
pop
mov
imul
pop
adc
jmp
ret
mov
or
add
mov
ss
inc
hlt
or
adc
inc
sbb
aas
dec
aas
data16
leave
and
adc
jmp
std
xchg
or
out
or
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
mov
pinsrw
decb
adc
test
mov
fsubr
cmpsb
mov
inc
nop
sub
cmp
pop
out
add
push
jp
or
push
cmp
loope
mov
push
xor
test
mov
and
mov
mov
imulb
mov
xchg
xchg
and
jp
int
jno
sbb
ret
mov
insb
and
addb
out
adc
push
pop
rorb
rcr
push
sbb
addr16
mov
int
and
dec
mov
ret
lock
lcall
mov
out
adc
stos
fsubrl
adc
dec
lcall
mov
add
inc
inc
mov
mov
aad
sarb
mov
inc
xchg
xchg
inc
fmull
shlb
sub
sti
mov
adc
insb
mov
movsb
cltd
out
shll
arpl
adc
dec
push
iret
out
sahf
or
cmp
xchg
mov
adc
dec
push
test
les
dec
dec
xor
cltd
jo
test
icebp
dec
aas
push
fsincos
sub
repz
or
cld
mov
jecxz
cmp
scas
mov
test
jb
push
mov
inc
sub
es
arpl
pop
sub
cmp
sbb
dec
push
and
insb
pop
lret
iret
hlt
pop
push
in
push
cmc
dec
repnz
mov
outsb
push
outsb
sbb
sbb
xor
and
fbstp
and
mov
mov
cmpsb
sub
push
addr16
in
xchg
add
mov
fbld
cwtl
data16
loop
cmp
dec
jnp
push
xchg
cmp
cmpsb
fildll
in
dec
pop
cli
mulb
fisttpl
insb
push
fisubrl
out
cltd
jp
aam
ljmp
je
mov
test
ret
pop
icebp
lock
xchg
repz
sahf
jo
sbb
xor
jecxz
into
insb
sbb
loop
adc
mov
xor
fildl
inc
push
fwait
fs
stos
inc
popf
jo
xchg
jae
xchg
lods
into
sti
dec
sbb
push
ret
jecxz
and
or
pop
sub
inc
js
dec
sbbb
push
mov
sub
xchg
ss
inc
lahf
and
leave
out
test
push
sbb
in
mov
sahf
adc
data16
sbb
mov
inc
cmp
imul
into
lea
and
test
xchg
xchg
mov
add
je
xchg
or
pop
cld
push
xor
pop
jns
sbbb
xlat
pop
push
dec
fisubl
fstps
shr
movsb
xorb
and
push
mov
nop
inc
dec
xor
dec
add
mov
mov
out
jb
nop
stos
outsb
xor
cmp
lret
cld
mov
fwait
sahf
into
iret
test
imul
cmp
cmp
fs
xor
test
pop
push
popf
enter
jecxz
cmp
lods
fwait
pop
jg
shl
lds
int3
test
push
xor
sbb
lea
fnsave
call
imul
sti
jge
jg
fldcw
popf
xor
out
stos
lret
adc
shl
jl
push
mov
mov
push
leave
xchg
mov
mov
jg
rcll
dec
mov
adc
mov
out
scas
cmp
lock
cli
adc
push
xchg
aam
push
add
cmp
pop
dec
call
pop
mov
and
shll
or
gs
lret
jmp
mov
xchg
xor
xchg
leave
sbb
jg
or
fadds
xchg
cmp
sbb
testl
sub
xor
push
int
aas
sbbl
out
sti
insl
push
xor
and
out
and
lods
stos
cmp
jbe
mov
loopne
mov
in
jns
push
inc
rcr
cmp
jmp
lret
cld
xchg
cli
xchg
stos
arpl
xor
sbb
mov
or
sbb
shrb
dec
push
jge
push
arpl
mov
leave
adc
cmp
sub
pop
add
or
out
test
leave
je
into
xchg
out
stos
and
fdivrs
fdivrs
push
stc
jns
pop
adc
test
mov
mov
mov
lock
es
cmp
sub
cmp
sub
sbb
ja
pop
push
leave
sub
mov
hlt
outsb
add
in
cmpsb
jle
pop
cmp
and
adc
jl
out
nop
cs
push
push
fisubl
mov
out
aad
mov
inc
filds
mov
sub
into
repnz
pop
pusha
lods
fnsave
inc
ss
stos
pushf
sbb
xor
xor
das
adc
hlt
lea
adcb
push
ret
arpl
daa
jmp
out
stos
sti
adc
out
aad
xchg
or
test
andl
sub
push
les
mov
sahf
repz
imul
cmp
push
add
arpl
cmp
sub
cmp
mov
mov
push
xor
aad
outsl
test
mov
jne
out
je
jle
xchg
stc
jbe
test
andb
adc
stos
mov
sub
inc
es
push
call
or
push
add
jae
cmc
pop
sub
xor
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
subl
pswapd
cmp
cmp
bound
mov
xchg
gs
mov
rorl
insb
and
or
imul
mov
ja
push
sar
lock
or
rcrb
test
pop
int3
mov
pop
add
push
push
hlt
cltd
mov
cld
hlt
xlat
int3
rcl
adc
cld
pop
leave
push
cs
cmc
mov
and
scas
xchg
inc
cmp
push
ret
ljmp
aad
mov
hlt
lds
dec
pop
fsin
out
mov
popa
insb
jp
pop
adc
ja
lahf
lcall
ret
and
push
movsl
cwtl
cwtl
push
out
addl
jecxz
insl
aaa
dec
cmc
clc
jge
dec
int
outsl
loopne
aam
divl
pop
sub
dec
addb
push
aam
push
imul
cld
adc
sbb
sub
push
mov
or
add
adc
js
xchg
jmp
out
jbe
das
jecxz
out
sub
push
or
ds
cltd
push
or
xchg
sbb
xchg
dec
lock
cmp
sub
mov
scas
std
aam
sbb
scas
lea
jmp
outsl
mov
adc
cwtl
and
lcall
loop
dec
inc
sbb
jmp
mov
ret
push
push
shrb
fmull
push
add
jl
push
out
adc
test
std
fiadds
es
imul
mov
in
data16
ja
push
repnz
rorb
and
cmc
sub
xor
push
mov
pushf
inc
pop
psubw
lcall
ljmp
xchg
or
aaa
add
push
jne,pt
mulb
xchg
push
test
sub
xor
adc
sub
jbe
lret
arpl
pop
xchg
sub
push
dec
add
sub
popf
imul
mov
add
ds
fdivl
stos
nop
jns
cwtl
popa
cmp
loop
push
push
insl
mov
cmp
pop
jo
xchg
xchg
sub
inc
mov
lods
inc
nop
adc
lea
popf
sub
repnz
adc
xor
or
loopne
push
xchg
pop
scas
out
es
sbb
sahf
test
test
loop
enter
insl
lahf
add
mov
push
xor
out
sarl
mov
and
xchg
movsb
adc
add
mov
sbb
push
xchg
adc
mov
jecxz
cli
pop
in
arpl
cmp
jnp
hlt
push
fcoms
xor
push
jae
mov
mov
pop
mov
dec
cmpsb
cmp
or
mov
sub
push
in
fists
cmc
and
scas
aas
popl
out
pop
adc
xor
js
das
fbstp
dec
inc
rcr
add
mov
adcl
inc
bound
divb
xchg
lret
push
out
lea
dec
enter
bswap
fidivl
dec
mov
call
push
cmp
dec
test
pop
gs
xor
test
test
pop
sub
popf
adcb
dec
pop
mov
imul
sbb
jo
mov
loop
rcll
inc
adc
call
add
jb
outsl
jp
lcall
push
jecxz
mov
sbb
pushf
jge
push
ljmp
pop
mov
lret
mov
xchg
dec
loope
popf
std
jbe
add
sahf
push
cmp
pop
pop
adc
xchg
insb
sbb
inc
xchg
mov
loope
push
cmp
xor
pop
mov
mov
lahf
aad
sti
or
jno
cmp
or
clc
ret
std
in
fcmovnu
cld
int3
sbb
pop
cmp
loope
in
jle
sbb
js
daa
enter
jb
add
mov
mov
test
lods
dec
dec
in
jbe
in
or
cmp
mov
and
in
neg
or
jo
insb
mov
inc
or
imull
jl
push
jne
int
imul
mov
cmp
inc
std
mov
es
push
mov
push
push
sbb
sbb
inc
movsl
cmpb
dec
mov
adc
jle
lds
mov
and
into
popf
sbb
in
push
dec
loopne
pop
and
inc
push
xlat
mov
pop
jnp
cmc
cmpsb
cmp
sar
fcmovb
out
inc
xor
cld
push
cld
inc
or
mov
insl
dec
adc
sti
inc
sbb
add
sub
xchg
and
dec
pop
jno
ja
test
scas
das
xchg
sarl
lods
cs
add
gs
enter
loopne
xchg
add
cs
mov
lock
insl
and
mov
rcll
cmp
andb
loop
sub
mov
cmp
inc
mov
stc
mov
fisttps
in
inc
dec
inc
loopne
xchg
jae
jbe
lock
mov
inc
xor
push
negb
negl
fwait
and
jne
sete
dec
dec
xor
mov
movsb
pop
jge
and
fwait
pop
cmp
mov
shlb
mov
pusha
push
jl
fcmovnu
cmp
cmp
xor
scas
adc
scas
xor
add
int3
or
es
lcall
mov
repz
es
loope
aas
push
shll
push
push
xlat
lea
fistpl
jae
fbstp
mov
rcll
ret
iret
sbb
dec
arpl
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
jae
lcall
add
push
jae
cmp
push
xchg
cmp
fsub
addb
es
insb
call
push
or
dec
pop
sbb
pop
scas
pusha
out
outsl
pop
aam
lock
cmc
rcr
sysexit
inc
addr16
xchg
add
shl
mov
cmp
gs
das
pop
movsl
cmp
mov
int
dec
test
cmpsb
add
xchg
xchg
ja
jae
mov
sbb
push
fisttps
call
stc
aam
mov
cmp
push
jbe
xor
insb
jne
rcrl
mov
or
and
mov
pusha
mov
lods
dec
aam
inc
cmc
out
mov
pop
scas
fdivrl
rclb
mov
xchg
pop
ret
hlt
fnstcw
lods
cmp
cmp
lods
aas
mov
jp
mov
test
rcll
push
addl
mov
into
jg
mov
popf
in
adc
sbb
cmp
jg
and
out
cmp
mov
jae
mov
mov
mov
push
arpl
inc
shrl
sbb
sub
shlb
mov
push
cmp
vunpckhps
dec
xorl
loope
aaa
sbb
fistl
inc
xor
cli
or
mov
pop
popa
push
loope
in
not
mov
pop
cmp
xor
push
and
dec
xchg
les
rolb
xor
inc
push
cmc
call
leave
fwait
adc
jle
sub
pop
jno
add
sub
mov
or
push
pop
mov
loope
in
mov
nop
or
push
sbbl
xlat
inc
cli
outsb
jbe
fcmovu
int3
lods
push
addr16
insb
inc
inc
cwtl
ja
imul
jne
xchg
or
sti
push
dec
mov
pop
pop
shr
mov
adc
sub
movsl
loopne
mov
in
mov
cmp
mov
cmp
mov
mov
xor
fstpt
rclb
iret
int
aas
xchg
ds
sub
cmpsl
dec
fwait
jae
sub
cld
adc
pop
mov
push
sub
xchg
in
or
scas
push
dec
push
js
mov
mov
push
add
mov
int
mov
shl
data16
mov
repz
xchg
loop
or
inc
js
sbb
inc
out
ljmp
jle
aaa
dec
cmp
xchg
in
jg
imul
int
and
or
into
cmp
sub
fisubrs
repnz
add
int3
incl
push
outsb
sbb
jg
stos
movsb
pop
cmp
mov
fxch
push
fcoml
sarl
inc
push
lret
stos
and
pushl
mov
popa
pop
das
in
push
cmc
in
sbb
jl
push
dec
dec
sbb
test
cs
out
jnp
inc
mov
mov
mov
in
inc
xchg
sub
mov
xor
roll
loopne
inc
sbb
pop
dec
dec
adcl
push
or
cmpl
adc
cmc
sbb
in
dec
or
rcll
divb
sahf
shll
push
clc
test
jmp
fmull
add
stc
sti
lcall
js
pop
in
lock
jne
adc
jno
inc
xor
fwait
int
cmpsl
test
pop
repz
jb
iret
mov
test
cltd
add
aas
mov
jl
inc
or
test
cmp
in
lret
hlt
shrb
adc
and
push
inc
and
xor
loopne
sahf
inc
test
icebp
call
dec
push
das
popa
aaa
push
sarb
shl
mov
pop
leave
sahf
push
dec
mov
xchg
adc
cmp
ljmp
cmpsl
aas
cmp
push
out
jns
sub
dec
sub
out
arpl
or
mov
test
cmp
lret
inc
or
mov
enter
repnz
inc
add
push
inc
roll
pushf
jmp
pop
jne
cwtl
pop
jb
mov
adc
test
sbb
inc
ficompl
or
lahf
aaa
cmp
push
xchg
stos
mov
xor
enter
add
mov
cmp
mov
sbb
lods
and
aaa
inc
rcrl
repz
xor
int3
adc
ljmp
mov
inc
add
sub
outsl
or
pop
out
std
je
inc
fs
inc
repz
pop
test
pop
jge
aad
add
cld
rcll
scas
mov
movsb
lods
push
inc
sbb
es
push
pop
lods
inc
jge
pop
and
scas
fiadds
inc
loopne
flds
xor
in
int3
sbb
in
xchg
cmpsl
int3
cmpb
ja
mov
push
mov
adc
dec
cmpsl
cmc
repnz
iret
xchg
hlt
in
cmpsb
call
mov
test
outsb
xor
daa
jb
jns
mov
repnz
and
popf
repnz
out
inc
adc
xchg
add
insb
pop
out
pop
mov
ret
fstpt
add
fildll
adc
mov
subb
mov
aam
sahf
xor
idiv
mov
lret
sub
fwait
mov
xchg
push
int
xchg
add
rol
sub
push
std
iret
in
and
jmp
into
pop
jmp
mov
test
dec
mov
lods
fbld
dec
mov
push
jo
das
pop
mov
addr16
cmpsb
xor
mov
leave
and
sub
pop
stc
imul
and
sbb
pop
fisubs
ret
xchg
cmp
dec
lret
mov
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
or
pinsrw
dec
popf
mov
nop
ss
xlat
fildl
loop
inc
and
jo
pop
sub
pop
cmp
in
daa
lock
and
push
pop
mov
popa
outsl
shlb
add
negb
adc
aam
lcall
out
xchg
push
jl
jno
out
mov
test
mov
xor
insb
mov
and
sub
pop
movsb
mov
xor
dec
cld
loop
jbe
int3
and
dec
or
jbe
ror
in
pop
push
adc
ffreep
mov
loope
add
or
xchg
cltd
outsl
in
or
stos
aaa
and
xor
and
inc
mov
mov
mov
mov
leave
pusha
sbb
out
fwait
xlat
pop
cwtl
inc
mov
cmp
loopne
pop
cs
fs
xchg
and
popf
jno
js
cmp
mov
call
addr16
ret
arpl
mov
fstpt
in
jmp
daa
loop
es
sub
jno
push
scas
sub
xchg
outsb
dec
jne
xor
in
sbb
add
or
pusha
and
xchg
int
mov
shrl
or
stc
out
or
xchg
cwtl
push
scas
test
or
das
and
scas
inc
pop
js
jg
mov
in
fucomi
addb
sub
lds
mov
or
out
inc
loope
mov
mov
rcr
aas
cmpsl
sbb
xchg
lock
mov
mov
cwtl
jge
shll
popa
shll
mov
adcl
jp
shrl
pop
bound
shl
cmp
clc
and
test
imul
mov
enter
xchg
mov
pop
dec
aas
arpl
mov
je
sub
outsl
lods
mov
stos
mov
lret
adc
push
and
add
cwtl
cwtl
aad
fsub
mov
lcall
push
icebp
mov
pop
shrl
int3
aaa
fs
pushf
loopne
xchg
cmp
lret
cmp
sti
dec
sahf
jae,pt
xor
xchg
pop
ss
sub
jmp
cmp
loop
mov
test
or
inc
sahf
in
xor
cli
pop
mov
mov
sbb
imull
clc
out
rcll
cmpsl
and
stc
aaa
push
inc
pop
adcb
push
insb
jg
dec
sbb
sarl
pushf
dec
test
mov
hlt
sbb
xchg
mov
test
adc
mov
ret
pop
popf
or
nop
lds
stos
xchg
cld
xchg
mov
jne
nop
xor
iret
lea
cwtl
out
push
shrl
xor
or
adc
sub
into
cmpb
sub
jg
push
or
dec
adc
insb
pop
pop
jo
aas
lret
dec
enter
add
lcall
cmp
cmp
sub
ret
inc
fistl
pop
xchg
lods
xchg
adc
negl
inc
mov
xor
sbb
leave
push
push
sub
push
popl
push
outsb
out
or
mov
pop
js
lea
or
mov
shrb
in
ds
pop
insb
pop
arpl
adc
xor
repz
pop
inc
sbb
add
xchg
jns
ret
xchg
inc
or
sbb
clc
pop
dec
das
jne
add
bound
xor
jecxz
pop
dec
xor
loope
mov
xor
pop
sbb
cmpl
pop
frstor
shll
dec
lahf
push
dec
xor
adc
out
mov
pop
popf
fidivs
sub
and
in
mov
les
test
clc
in
inc
idivl
inc
cld
leave
lods
andb
enter
aam
and
jae
stos
into
clc
adc
in
xor
lcall
push
add
or
cmc
xor
sti
xchg
xchg
mov
stos
and
outsb
stos
cwtl
mov
xor
cmp
mov
ds
push
cmc
mov
mov
fcoms
fstpl
mov
sub
lret
push
add
sub
lods
sbb
repnz
repnz
int3
mov
shr
sarb
dec
in
clc
sbb
repnz
mov
into
cmp
icebp
mov
nop
jge
test
inc
inc
fldenv
or
nop
sbb
pop
add
popa
adcb
pop
mov
push
loope
xchg
shlb
adc
repz
pop
leave
push
xor
push
paddsb
xchg
mov
jg
leave
mov
jne
lods
dec
jp
mov
sbb
fidivs
enter
ret
jg
sbb
xor
jle
push
jg
jmp
mov
lods
repz
mov
cld
leave
jns
lock
std
inc
dec
jnp,pn
jb
inc
mov
test
mov
adc
and
negb
pop
push
push
ljmp
push
out
ljmp
xorb
addb
daa
cli
pushf
pop
inc
pop
and
cwtl
mov
pop
mov
nop
push
xchg
push
or
sbb
xchg
xchg
int3
lea
add
subl
lret
lods
mov
jmp
das
sbb
mull
scas
imul
ret
and
mov
dec
es
test
sbb
arpl
push
rcl
je
lods
pusha
sahf
mov
loope
jbe
ret
jne
fidivl
xchg
push
mov
xor
sbb
aad
inc
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
mov
sub
mov
jge
scas
or
lock
push
sti
lret
push
jb
jno
lcall
xchg
movsl
ret
and
fisubl
jbe
shll
lret
sbbb
sbb
mov
mov
adc
imul
fistpll
add
mov
test
fs
fcmovbe
mov
xchg
loop
sub
sahf
lods
std
popf
and
lahf
movsl
outsl
fsubl
mov
jge
mov
or
jmp
push
imul
push
enter
lods
or
jmp
dec
fwait
subl
adc
push
jg
cmp
sbb
leave
imul
pop
gs
cmc
ret
pop
mov
int3
cmp
dec
push
xor
lods
inc
adc
dec
mov
leave
sbb
jnp
lock
fldcw
push
dec
mov
ja
pop
sti
cmc
mov
xlat
mov
ja
lods
cmp
jp
fsubs
jnp
xchg
out
int3
jmp
sti
adc
bound
xor
sahf
dec
mov
pop
ret
shll
dec
xchg
pop
jg
mov
sbb
mov
jecxz
or
lahf
cmp
test
lcall
mov
lret
add
xor
repnz
cmp
cld
in
xor
add
subl
jbe
cli
sub
repz
cli
ljmp
push
sbb
andps
cmp
fmull
jns
sbb
in
xchg
das
inc
popf
loop
inc
rclb
mov
dec
dec
les
stos
mov
adc
daa
ret
jb
test
imul
out
ds
adc
cli
or
das
mov
xor
ljmp
mov
jmp
cs
mov
jne
cmpsb
sub
shrb
jecxz
std
xchg
jg
popf
push
cmp
sbb
imul
rol
pop
js
adc
jae
ret
xchg
fwait
bound
add
lret
pop
or
out
cmp
adc
les
je
paddw
les
cld
call
les
popa
daa
dec
aam
sti
xchg
xchg
mov
ret
push
rolb
sahf
stos
js
test
dec
int
lds
jp
imul
cld
test
mov
ret
push
repnz
mov
sarb
leave
call
lods
test
fs
push
js
xchg
dec
cwtl
add
xchg
subb
aas
inc
mov
mov
sbb
dec
mov
or
sub
or
lcall
aad
test
loop
add
mov
rolb
stc
test
pop
aaa
jmp
jno
dec
sbb
movsb
xor
aas
sbb
ret
outsl
lcall
or
sbb
das
mov
add
or
js,pn
jbe
mov
push
pop
lods
xchg
push
sti
pop
sub
adcb
in
mov
or
daa
jp
call
pop
push
sbbb
fdivrp
pop
pop
in
jo
fdivrl
cld
in
inc
push
movups
and
cmp
jne
addb
sbb
mov
lcall
shl
aam
repnz
lock
adc
aad
jle
stos
pop
in
push
fs
lcall
aam
inc
mov
mov
sub
lahf
out
xor
push
and
add
sbbl
scas
push
pop
shlb
out
ss
sub
push
lcall
repz
pslld
xchg
aam
shll
cli
cmp
pop
xlat
not
inc
test
movsb
arpl
comiss
pop
pop
cld
pop
and
xor
cmpsl
popa
scas
mov
popa
outsl
jns
bound
sahf
test
inc
sahf
clc
jg,pt
xchg
sub
mov
pop
cli
stos
test
scas
add
in
or
jmp
lea
adc
les
pop
pop
lret
call
ljmp
stos
and
addr16
mov
shll
jae
adc
push
iret
roll
std
mov
push
jp
sbb
pop
push
out
neg
xchg
add
inc
mov
stos
jno
shrl
inc
adc
shl
rcrb
test
lret
les
cmp
jp
sbb
jo
jge
dec
push
pop
fmull
addl
sbb
lods
ret
cwtl
jle
dec
push
arpl
mov
les
adc
insb
mov
les
out
pop
adc
pop
popf
test
xlat
sbb
jmp
in
loope
mov
sbb
call
repnz
push
out
xchg
aad
in
jp
imul
jne
ret
pop
pop
lcall
pusha
addb
stos
outsb
movsl
sub
mov
push
inc
or
iret
aas
fidivl
out
push
push
je
cltd
loop
pop
xor
movsl
jmp
pusha
std
gs
xor
dec
mov
xor
xchg
jecxz
jl
std
add
sbb
push
rorl
push
cmpsl
mov
adc
dec
mov
popa
lock
cmp
jmp
jmp
jmp
loop
adc
xchg
sbb
pop
scas
jmp
scas
pop
inc
xchg
movsl
ret
pop
paddusw
pop
mov
xor
pop
rcrl
pusha
pop
hlt
enter
or
loope
rcrl
outsl
dec
repz
daa
pushf
pop
ret
push
pop
bound
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
subb
les
movntq
out
mov
cwtl
lods
mov
sbb
fbstp
or
mov
mov
shll
movl
dec
xor
jmp
lods
ljmp
pop
mov
mov
hlt
pop
inc
push
into
pop
sbb
mov
adc
add
mov
inc
sbb
lcall
aaa
inc
cmp
mov
dec
mov
and
inc
lea
iret
push
call
rolb
dec
fstpt
in
lods
inc
sub
les
xchg
nop
sub
lea
and
jo
push
scas
push
cs
loope
dec
aaa
fstl
in
int3
add
insl
inc
or
into
pushf
add
push
outsl
das
pop
frstor
or
rorl
mov
in
hlt
fs
pop
cmp
fisubl
lods
jle
sbb
jl
in
outsb
lds
jecxz
ss
pusha
pop
icebp
jae
push
ss
and
xlat
inc
aas
jne
adc
imul
sbb
lcall
lahf
mov
sub
mov
test
cmp
xor
fcomps
mov
sbb
fsubr
arpl
dec
xchg
xchg
fistl
stos
test
fdivr
nop
mov
hlt
test
arpl
icebp
xor
cmp
inc
or
lret
out
mov
cwtl
pop
jb
dec
shlb
cmpsb
inc
lret
or
out
mov
in
adc
pop
mov
pop
cmpsb
mov
ret
test
adc
xor
sbb
xchg
lods
mov
mov
sub
jmp
ret
or
pop
loope
addr16
popa
lcall
adc
or
xlat
push
mov
cmp
mov
jmp
scas
fadds
jno
fidivs
jbe
mov
test
mov
or
xchg
lea
stc
xor
mov
movsl
aad
mov
mov
inc
push
out
jle
mov
mov
mov
push
jp
adc
mov
aam
sbb
dec
xchg
xchg
fwait
jb
push
test
insl
push
mov
and
adc
jle
mov
es
push
jg
sub
adc
inc
push
out
mov
xor
je
cwtl
cli
push
shlb
in
imul
mov
outsl
adc
pushl
neg
jne
mov
push
dec
add
and
loope
push
pop
aas
clc
das
xchg
pop
test
lahf
or
lret
jmp
popa
jle
jle
cmp
pushf
ficoms
das
cmp
scas
jnp
push
xor
je
shl
pop
lds
add
jg
and
and
mov
adc
cmp
loope
push
sub
pushf
test
or
jne
mov
push
jno
cmpsl
inc
mov
sbb
fcompl
mov
lea
lret
lock
mov
inc
in
shlb
cmp
mov
test
leave
adc
pop
jecxz
mov
bound
in
jne
jle
stos
loope
aad
fnstcw
jl
push
and
jle
test
outsb
in
out
ja
stc
movsl
pop
js
jp
xor
push
pusha
sbb
cs
jmp
mov
ficompl
and
loopne
insl
enter
inc
mov
inc
iret
mov
lds
imul
push
push
lret
sahf
adc
mov
stos
test
jnp
lret
mov
jecxz
in
pop
aas
flds
bound
pop
stos
dec
sbb
add
lock
fsubl
dec
dec
sub
inc
cmp
mov
xchg
out
dec
daa
dec
test
push
ficomps
push
add
sub
pop
ljmp
inc
fldenv
cmpsl
mov
lahf
js
cs
cmp
or
stos
roll
filds
vphaddbd
int3
sarb
frstor
sbb
cmpsb
xor
test
add
sti
push
pop
fwait
jmp
xorb
scas
cmp
mov
dec
addl
push
nop
loop
stos
cwtl
dec
sti
xchg
dec
shrl
mov
sbb
mov
push
mov
dec
dec
mov
leave
icebp
push
aam
and
or
sarl
out
mov
mov
cmp
ss
sbb
iret
push
and
movhlps
and
ljmp
jns
rolb
pushf
add
and
icebp
ljmp
sub
fcomip
fadds
mov
in
xchg
jle
les
and
dec
lcall
out
sbb
mov
popf
xchg
rcll
iret
repz
sub
xchg
andl
aas
and
cmp
mov
imul
add
std
call
bound
push
add
adc
cmp
nop
outsb
pop
xlat
push
jecxz
mov
xchg
push
fs
jns
fidivrs
sbb
shll
aas
cld
dec
pusha
aad
mov
inc
pop
jmp
subl
push
mov
xchg
sbb
cmc
push
repz
data16
call
mov
imul
add
mov
cmp
mov
jbe
outsb
sub
mov
aad
rcrb
inc
jnp
stos
jge
cs
aas
enter
test
scas
shrl
decb
ljmp
xchg
or
jb
and
aaa
inc
cwtl
rcr
or
pop
or
xor
xchg
mov
repnz
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
pop
icebp
stos
js
js
add
es
dec
adc
fwait
mov
leave
shll
sarl
nop
scas
lcall
shll
jo
jbe
sub
insb
pop
movsl
aaa
xor
sbbl
mov
mov
iret
adc
mov
cs
mov
xchg
sbb
jbe
and
scas
push
pop
dec
in
gs
js
sbb
jmp
es
and
das
cli
dec
sub
adc
lcall
std
je,pn
jmp
dec
jns
adc
dec
scas
insb
mov
fwait
add
push
dec
pusha
xchg
out
mov
lea
and
loopne
mov
ficomps
mov
jecxz
pop
int3
pop
mov
arpl
mov
pop
rolb
xor
and
dec
xchg
jmp
mov
xchg
sub
jl
daa
sbb
out
dec
pop
fimuls
jg
imul
fstpl
daa
das
add
or
add
cmpl
std
js
dec
cwtl
arpl
or
add
out
arpl
in
cwtl
mov
fimull
repz
mov
pop
jl
imul
icebp
out
sub
xchg
sub
dec
cwtl
shr
repnz
std
xchg
mov
and
inc
xor
xchg
push
add
mov
rclb
insl
mov
adc
mov
es
aam
cld
popf
int
mov
push
pop
mov
pop
or
inc
xor
push
xor
popf
jle
lds
adc
add
mov
mov
scas
int3
in
ds
pop
mov
jnp
int
mov
sbb
jl
sbb
idiv
push
addr16
and
les
scas
inc
sti
idivb
lret
lods
cld
ss
push
aaa
fcoml
fimull
stos
cmpsb
mov
mov
add
out
adc
push
aam
je
push
es
mov
xchg
lret
push
mov
out
lcall
fdivs
lret
add
push
mov
rcr
imul
lods
ja
and
mov
lods
call
push
cmp
out
aam
push
xlat
inc
lea
iret
mov
scas
insb
in
mov
or
sub
xlat
orl
mov
shlb
stos
pop
mov
shl
fisttpl
xor
cld
fxch
cs
mov
ret
int
fidivrs
das
mov
sbb
mov
loopne
jb
stos
xchg
pop
bswap
insl
cs
ljmpw
adc
push
and
inc
push
cmp
adc
cmpsb
ss
into
pop
jge
add
dec
pop
sti
shll
inc
stos
xchg
fcmove
repz
fstl
es
ljmp
scas
mov
inc
in
in
lcall
mov
lods
imul
dec
cmovnp
cmp
ror
bound
pop
pusha
jmp
xchg
outsb
inc
mov
or
inc
add
or
lcall
jne
leave
xchg
insl
sbb
mov
and
mov
imul
mov
jae
fsub
out
add
pop
xchg
outsb
inc
mov
bound
stos
pop
addr16
sub
jnp
sbbb
xchg
dec
xor
push
cmp
daa
mov
out
js
test
lock
movsb
push
nop
movsb
sub
insl
sti
movsl
aaa
cmp
orb
test
push
mov
jge
xchg
stc
push
shll
aas
loope
enter
dec
popf
fsubs
int3
adc
stc
in
lret
xor
addl
jp
and
xchg
cs
adc
push
push
mov
cli
clc
std
out
push
in
cmp
dec
leave
int3
aam
add
xor
jmp
inc
adc
and
and
scas
dec
xorl
in
ds
push
dec
pop
sahf
cltd
mov
sahf
sub
mov
lcall
pop
jae
jo
stc
out
and
add
mov
test
mov
jnp
sbb
mov
sub
icebp
jmp
cmp
pop
jae
out
sar
movb
cmp
mov
cmp
test
inc
movsl
inc
add
jbe
sub
sbb
loope
cmp
stc
lea
cltd
sahf
pop
mov
scas
or
push
mov
or
jmp
cmp
ja
mov
sbb
scas
dec
jno
xor
lret
inc
inc
rcrl
repnz
sub
pop
lods
jmp
jbe
daa
outsb
out
iret
out
xchg
push
test
in
insb
pop
sub
in
ljmp
sbb
std
sahf
fldenv
loope
sbb
mov
sub
jg
rolb
dec
jne
push
mov
jne
push
sub
and
xchg
pop
xchg
lcall
cmp
inc
add
push
lcall
mov
rcl
or
and
push
push
iret
and
icebp
xlat
loope
mov
add
mov
mov
sub
and
xor
jmp
ja
mov
jns
add
test
into
push
adc
jg
pop
and
int
push
mov
subl
mov
sbb
test
dec
popf
xchg
push
cmpsl
out
das
jge
adc
cmp
fcoml
pop
xchg
dec
aam
mov
and
outsb
lods
jno
jnp
enter
test
es
stos
adc
mov
addr16
mov
test
cmp
or
push
sub
or
pop
xor
jmp
mov
xchg
xor
push
and
push
mov
xor
sti
aam
lret
lods
mov
pop
xchg
xchg
mov
or
pop
scas
daa
sbb
fisttpl
stc
out
lahf
ja
fwait
cs
and
je
mov
fstp
pop
dec
std
ds
jne
scas
clc
out
icebp
cmp
pop
and
ftst
xchg
test
fwait
cli
jp
pop
repz
xchg
je
xor
sub
scas
push
inc
sbb
ror
pop
sub
or
test
cli
xchg
jge
inc
push
stos
pop
loop
fwait
imul
inc
pushf
add
mov
and
fisttpl
xor
adc
mov
jno
movsl
lods
jle
inc
sub
popa
mov
mov
outsl
ds
sub
cmp
icebp
push
lcall
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
push
add
or
xchg
push
add
cmp
lcall
mov
out
dec
jp
sbb
dec
xor
fdivrs
pop
maxps
test
mov
sbb
mov
stos
in
mov
sahf
add
xchg
cmp
popf
cmpsb
outsl
mov
adc
adc
adc
push
xchg
fldl
fcmovnbe
mov
adc
add
jno
sub
loop
decb
cli
cmp
or
insb
xor
lret
in
popa
out
dec
xchg
or
fisubrl
lods
dec
popf
nop
pop
cmpsb
dec
fbstp
mov
in
or
sub
sub
lahf
inc
and
sbbl
jmp
aaa
mov
cmp
int3
sbb
int
push
xor
and
sub
adc
aas
pop
decl
ja
pop
shll
out
mov
and
fwait
sbb
insb
jb
cltd
addl
loop
push
lods
jne
les
arpl
and
test
jge
push
fs
jl
sub
bound
cmp
insb
lds
insl
js
ss
cli
in
pop
sbb
sbb
push
dec
test
shll
loopne
ds
aaa
push
sub
inc
mov
xchg
in
pop
mov
mov
sub
sbb
mov
sub
dec
rcr
pop
sbb
jge
int3
into
mov
sbb
mov
xor
dec
adc
sub
sbbl
cmpsb
ljmp
mov
es
daa
push
sub
in
inc
mov
xlat
or
sub
lret
add
jge
nop
push
add
pop
mov
xor
fst
jg
inc
sub
cmp
ja
mov
test
sub
fs
scas
imul
push
and
inc
and
jnp
jecxz
jbe
arpl
fsubrp
adc
sbb
in
push
jl
or
test
jnp
inc
jae
jbe
cmpsl
dec
xlat
aam
sbb
jne
sub
aam
loope
sub
push
mov
ret
dec
inc
and
or
test
push
lds
add
fucomi
cmp
into
xchg
das
mov
push
dec
lods
xchg
and
imul
jmp
shl
pop
jbe
dec
shrl
mov
and
mov
movsb
cmc
xor
pusha
ds
push
adc
and
dec
and
inc
and
push
xlat
jo
test
mov
cwtl
out
or
fsubs
mov
and
fldenv
std
mov
cmpsb
lret
xor
mov
sti
pop
popa
jecxz
inc
and
jge
xor
ret
mov
push
add
int
stc
aam
mov
push
rcll
and
imul
mov
dec
add
xchg
lahf
cmp
mov
subb
mov
aas
stos
in
adc
pop
add
adc
sbb
xchg
push
std
in
scas
pop
test
cmp
add
xchg
repz
xor
dec
jne
movsb
ret
mov
cmc
jge
push
add
cmpsl
test
adc
adc
jno
jno
pop
adc
push
jb
das
loope
pop
sbb
ljmp
scas
mov
or
testb
pop
jge
pop
add
push
lods
push
fstps
notb
sbb
or
mov
outsl
lcall
push
movsb
push
dec
mov
jmp
roll
out
cmp
xchg
sbb
push
add
mov
movsl
mov
xchg
adc
mov
adc
mov
dec
xorb
rolb
lods
ret
pop
popa
jne
rorl
jp
iret
push
fisubl
cltd
stc
movsb
sbb
imul
ficompl
insl
push
mov
add
ja
adc
cltd
jp
ljmp
call
mov
rolb
fwait
clc
sbb
insb
je
add
int
decb
faddl
adc
fsubs
in
mov
ja
xor
inc
cmp
mov
mov
int
bound
inc
mov
xor
jg
jns
mov
out
mov
jb
or
arpl
lock
dec
movsl
mov
cld
add
ja
and
sar
bound
sahf
data16
insl
int
jmp
push
sub
call
mov
cltd
scas
mov
or
push
fmul
jp
push
data16
aam
mov
sub
add
pop
outsb
stos
xchg
jbe
xchg
lock
rcrl
cs
add
xor
nop
lret
pop
repnz
pop
sahf
fwait
notb
in
sti
jmp
out
lods
mov
inc
hlt
push
mov
jp
push
or
add
push
fs
add
mov
sub
cmp
pop
push
mov
jp
push
jbe
ss
aad
inc
jl
add
cmp
push
inc
xchg
fldenv
mov
dec
push
test
ficompl
dec
pop
into
in
xor
in
add
cltd
mov
cmpsl
shl
rol
les
xchg
in
jl
sub
jb
cmc
mov
test
jle
inc
sub
inc
and
loopne
subb
jmp
test
pop
pop
mov
test
jecxz
lock
js
cld
inc
or
inc
pop
daa
xchg
sbb
mov
scas
repnz
dec
outsl
dec
roll
mov
loopne
xchg
ret
jg
pop
rorl
or
mov
lods
inc
adc
sbb
dec
sub
cmp
jno
adc
gs
mov
cmp
lods
in
xchg
xchg
jae
mov
and
push
sbb
fldt
shlb
popaw
lcall
sbb
movsb
sbb
arpl
push
fchs
fldl
cmp
dec
fimull
aam
sbb
movd
sbb
in
mov
repz
mov
xor
or
inc
fdivp
xchg
cwtl
movsl
mov
or
aaa
pop
pop
leave
mov
sub
xor
cmp
adc
push
mov
xchg
jmp
mov
es
pop
outsb
fucomp
jecxz
dec
sub
sbb
sub
push
sbb
repnz
dec
scas
daa
adc
and
ficompl
mov
dec
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
adc
pop
add
mov
bound
and
mov
sbb
mov
xor
pop
xor
or
jmp
mov
xor
fstp
fnstsw
inc
add
xchg
dec
or
or
sbb
push
lret
ljmp
repz
or
pop
sbb
dec
test
push
data16
lods
scas
aaa
rorb
jp
aad
add
add
ficoms
and
fwait
lahf
push
xchg
cmp
mov
aam
movl
pop
lods
cmp
fiadds
in
mul
scas
mov
ret
jp
js
lret
push
aas
add
or
or
sbb
inc
rcrb
add
pop
xlat
fbld
cwtl
xor
mov
mov
cmc
push
inc
ss
sbb
sbb
add
fldl
mov
mov
or
xor
xchg
sub
scas
int
les
fsubs
jmp
push
add
xchg
movsb
jae
call
shrl
cmc
xchg
ljmp
imul
call
mov
testb
das
int
fcomp
bound
sahf
repnz
shrb
sbb
imul
mov
mov
pop
xchg
rorl
push
packuswb
push
nop
fs
dec
inc
xor
xor
inc
flds
push
leave
cmpsb
jno
pushf
imulb
jb
je
cmc
in
mov
ret
xchg
pusha
push
mov
xchg
int3
nop
sbb
add
sub
ss
je
mov
push
mov
shr
add
cltd
mov
jecxz
aas
push
lds
insb
mov
das
pop
sbb
cs
jo
pop
pop
ja
cmp
bound
adc
insb
into
fs
movsb
adc
pop
pop
adc
rclb
imul
xchg
sbb
lret
pop
push
rolb
cmpsb
fdivrp
dec
inc
in
mov
dec
cmp
mov
mov
mov
movsl
test
push
push
call
jae
xchg
pop
aas
mov
jb
adc
xlat
stc
inc
das
out
xorb
iret
push
push
sti
add
lea
sbb
jb
adc
xor
leave
add
sub
dec
js
xchg
daa
pop
cmpb
dec
ret
push
fisubrl
and
adc
insb
test
push
or
and
fstp
movsb
shl
cli
outsb
adcl
and
adc
scas
inc
cmp
sti
add
xchg
aaa
fs
xchg
inc
ret
pop
sar
inc
xor
loope
movsl
adc
mov
mov
int3
lret
test
repz
cmpsl
aaa
jo
jmp
sti
clc
dec
pop
test
xchg
rcll
xlat
adc
push
xchg
sub
repnz
aas
enter
pop
ss
jno
inc
rorl
xlat
aaa
je
pop
cltd
insl
jmp
dec
jge
inc
daa
push
lods
aad
push
imul
dec
mov
nop
jno
jnp
sti
push
cvtps2pi
ljmp
pop
pop
test
cli
rcrl
mov
xchg
add
sti
dec
sub
clc
xor
xchg
int
xlat
movl
js
add
pop
sti
and
cmpsl
clc
xor
mov
jbe
pop
sarb
sbb
icebp
rorl
sbb
fsubr
push
test
pop
ljmp
jae
imul
in
sbb
and
mov
dec
xor
loope
cmp
adc
cmpsl
mov
xchg
cmpsl
mov
hlt
mov
mov
or
js
int
mov
jnp
fsts
and
or
push
sbbl
sub
pop
mov
inc
dec
dec
xchg
jg
mov
ret
jbe
out
icebp
shr
inc
xorb
sub
loop
lret
popw
pop
out
push
push
jb
xchg
pop
and
aaa
inc
aas
xor
pop
mov
inc
outsl
inc
mov
lret
pusha
lods
lcall
push
lea
loope
arpl
pop
inc
insb
inc
push
loopne
std
and
iret
popa
test
leave
aaa
data16
imull
mov
ljmp
pop
fcmovnbe
mov
jmp
mov
shl
sub
jge
cltd
pop
sbb
movsb
pop
fistps
cmp
aas
push
cmp
out
or
sbb
adc
xor
lret
into
xchg
insl
icebp
jecxz
imul
outsb
test
rorl
sub
int3
test
mov
test
xchg
fists
enter
xchg
jecxz
mov
jno
sub
mov
xchg
movsb
cwtl
inc
repz
cmp
jno
scas
jge
dec
mov
pusha
mov
mov
push
outsl
out
push
push
xchg
fsubrs
pusha
inc
mov
and
int3
jno
pop
push
inc
pop
cmp
jns
fists
pop
data16
jne
xchg
jb
jmp
fsub
dec
pop
and
or
add
inc
or
arpl
dec
mov
aam
ucomiss
mov
jnp
inc
cmp
loopne
mov
clc
adc
ret
ret
xor
popf
xchg
jns
insl
lcall
sbbl
stos
xchg
xchg
loopne
cmp
test
fcompl
loop
adc
push
jmp
pop
xchg
inc
addr16
fmulp
push
pusha
sbb
push
xor
add
mov
jmp
adc
inc
dec
mov
mov
and
test
cld
in
xor
aad
das
fdiv
sub
push
inc
aas
inc
out
sub
frstor
mov
mov
pop
test
ja
fwait
ss
aam
psubd
push
push
sbb
xchg
mov
pop
loope
lahf
mov
loopne
push
mov
divl
jbe
outsl
add
inc
imul
dec
lret
jmp
movsb
sub
lds
nopl
dec
mov
jp
push
out
icebp
xlat
mov
btr
int
xchg
inc
rcrb
insl
aas
xlat
sub
dec
push
in
imulb
fbld
xchg
cld
in
jl
dec
inc
lds
inc
cs
cs
stos
fwait
outsl
lcall
outsb
jmp
arpl
stos
lret
sbb
mov
mov
or
ret
fwait
cmp
mov
mov
xor
lahf
or
jge
xchg
mov
addb
cmp
and
divb
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
xor
js
dec
add
fs
sti
xchg
mov
sub
add
sbb
mov
mov
std
lcall
push
inc
rcl
and
test
cmp
mov
inc
insl
loop
mov
out
loop
aaa
sbb
icebp
mov
addr16
imul
cmp
lahf
loop
js
push
pop
inc
mov
ja
cmpsb
pop
add
jp
out
jnp
out
test
push
jge
dec
add
stos
mov
inc
inc
sbb
out
fisubrl
sub
dec
aam
test
out
test
repnz
jo
push
adc
dec
enter
push
pusha
out
scas
cmc
push
push
adc
add
test
and
stos
sbb
es
xlat
xchg
jno
je
dec
stos
push
push
ja
sub
sbb
jmp
leave
arpl
and
pusha
aaa
dec
mov
mov
outsl
daa
stc
and
sbb
lahf
icebp
dec
inc
ljmp
xchg
jmp
mov
jno
outsb
mov
mov
stos
push
xor
xchg
or
mov
pop
dec
jg
and
adc
int
outsb
mov
push
dec
adc
movsl
dec
push
cmpsb
imull
leave
xchg
pushf
cmpsl
enter
loope
push
movsb
add
inc
and
mov
push
or
in
loopne
fdivs
dec
push
dec
cmpl
add
cli
jmp
subb
push
sbb
in
mov
mov
insl
inc
sub
sub
fidivrs
dec
rcrl
adc
and
dec
std
fistl
orl
mov
rolb
pop
js
mov
rolb
sub
inc
mov
shlb
add
fisubrs
stc
addr16
jno
jo
out
shl
aas
scas
pop
push
fldt
push
clc
mov
dec
adc
rcll
xor
sub
loop
loop
pop
popf
into
stc
test
xchg
repnz
ja
add
mov
pop
das
jle
xchg
sbb
ret
test
int
fldlg2
hlt
int
inc
mov
add
shlb
inc
cmpsb
sbb
sub
scas
cmc
aaa
bound
icebp
stos
xchg
mov
mov
push
mov
mov
in
dec
push
shl
jne
mov
hlt
add
ds
cmc
cmpsw
enter
shll
mov
test
out
repnz
std
push
mov
aad
or
out
dec
pop
mov
push
mov
inc
mov
fnstenv
inc
jbe
subb
outsl
sbb
cltd
icebp
ret
mov
cmc
lods
inc
lods
push
sbb
sbb
sub
inc
fwait
lods
fisubl
pushf
xchg
in
mov
test
adc
pop
mov
pop
sbb
fidivs
mov
adc
and
jmp
mov
dec
cmpsl
mov
mov
xchg
leave
mov
and
cli
scas
jmp
rorb
mov
or
add
xor
fwait
pop
mov
popf
adc
push
aas
iret
mov
jae
and
mov
fstpl
cmp
mov
xchg
pop
cmpsl
daa
fisubs
jmp
int
enter
push
mov
adc
mov
rcll
cmp
jge
inc
xchg
jb
insb
gs
ret
enter
xlat
divb
mov
int
negb
cmp
repnz
std
cmp
jg
orb
inc
aaa
call
or
sub
and
inc
scas
icebp
les
cs
mov
lock
add
lret
mov
jl
pop
cli
js
push
xchg
dec
add
jbe
mov
xlat
pop
sub
decl
jno
lods
cmc
aad
leave
arpl
dec
jns
negb
jne
push
add
push
in
stc
sbb
ficoms
xchg
mov
dec
movsl
xchg
add
inc
out
jne
pop
stos
xor
lea
lahf
roll
cwtl
pop
jb
or
imul
movsb
jae
adc
mov
pusha
and
je
xor
and
imul
jae
jne
sub
sub
repz
data16
bnd
jno
test
pop
xchg
ficomps
iret
clc
xor
push
sbb
pop
pop
fidivl
sbb
in
pop
jns
sub
sub
sub
cmp
sbb
gs
cli
stos
dec
std
mov
push
adc
outsb
cmpsl
and
fisubl
sub
shll
sub
fidivs
push
and
sub
insb
popa
mov
push
loopne
jl
shlb
hlt
mov
mov
rol
sbb
cltd
add
fwait
incb
jne
lret
popa
aaa
iret
add
push
push
push
loope
dec
les
dec
mov
inc
cmp
sbb
in
ret
gs
out
pop
xchg
shrb
cmp
xor
loopne
icebp
subl
sbb
popa
and
addr16
pop
jnp
into
mov
insb
and
aaa
dec
addl
cld
xchg
fsubp
dec
jns
xchg
push
inc
jl
nop
jecxz
fcompl
sub
push
pop
pop
jg
cmovbe
xlat
imul
idivb
push
mov
aaa
push
jb
push
test
mov
mov
dec
into
inc
rcll
aam
and
jb
rcrl
sub
cmc
jno
mov
sub
cmp
mov
mov
scas
addr16
dec
insl
jg
fcomip
popf
in
test
pop
cmp
xchg
int
imul
ss
test
jl
cmpl
adc
jp
sbb
mov
jmp
and
push
in
and
and
cmp
mov
sbb
xchg
pushf
jae
pop
lods
leave
imul
or
mov
xor
or
adc
int3
in
aaa
enter
outsb
mov
pop
jb
jnp
leave
imul
lret
leave
out
cmp
mov
add
sub
pop
push
sbb
cmp
sahf
xchg
adc
or
inc
inc
pop
xor
push
sub
mov
mov
cmpsb
add
int3
decl
ret
inc
insl
lods
les
mov
cmp
xor
push
insl
cmp
stos
imul
add
inc
or
sarl
dec
stc
fdivl
jmp
fs
ret
mov
mov
dec
mov
pusha
jb,pt
mov
or
mov
in
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
pop
dec
mov
add
fadds
mov
or
rcl
or
add
mov
push
lods
lcall
pop
cmpsl
cmpsl
jnp
popa
rcll
inc
sbb
imul
ficoms
push
xlat
xlat
out
pop
or
hlt
enter
mov
pop
xor
sub
in
hlt
lods
fldt
int3
std
inc
cmpsb
jne
mov
push
pushf
out
push
es
loopne
loop
loop
mov
pushf
push
lret
fs
scas
test
lds
fstpl
sbb
dec
ret
faddl
cmp
cmp
ljmp
jbe
je
ret
dec
xor
mov
jp
inc
jp
sbb
or
xchg
sbb
enter
test
out
stos
push
add
sarb
cmp
pop
adcl
add
jno
icebp
inc
inc
add
hlt
popa
imulb
imul
jb
mov
or
fmull
push
sti
mov
scas
mov
jns
sbbl
mov
jecxz
pushf
ja
call
ljmp
fwait
push
scas
add
rcrl
xchg
lahf
cmp
cmpsb
mov
mov
push
mov
lock
xor
adc
mov
dec
adc
std
mov
jae
or
inc
scas
loopne
popa
test
loopne
dec
jecxz
adc
sbb
xor
inc
and
fdivs
jmp
aam
ret
lods
jp,pt
xchg
mov
fldt
and
and
xchg
fisttpl
add
jmp
jns
cmpsl
dec
xchg
mov
imul
jae
bound
push
sub
cs
and
xchg
mov
pushf
push
cwtl
popf
sbb
mov
icebp
jle
sub
jg
or
add
jle,pt
mov
pusha
jg
cs
rolb
add
cltd
cltd
xchg
mov
scas
and
and
sub
pop
add
inc
mov
mov
enter
ds
pop
or
test
ja
cmp
rcll
pop
mov
idivb
pop
jl
mov
adc
lcall
jb
pusha
push
sub
popa
out
rcrl
pop
aam
jg
stc
sbb
loopne
xor
fdivrp
js
fsubrl
sbb
adc
dec
push
imul
aad
insl
adc
jg
push
loopne
add
insb
lds
in
push
test
push
test
negb
adc
cs
fiaddl
push
xor
clc
inc
lret
popl
pop
aad
int
xor
fwait
push
shr
repnz
sarb
hlt
cmpsl
jl
lcall
adc
mov
inc
push
sar
arpl
ret
enter
cwtl
int3
cmpl
das
mov
and
jle
lret
push
ss
roll
push
xor
mov
inc
mov
xor
and
imul
hlt
or
add
scas
stos
dec
orb
dec
cmp
fnsave
push
sub
imul
xor
xchg
or
jns
add
sti
test
mov
mov
divl
mov
fcoml
je
insl
sbb
inc
add
lret
mov
push
movsb
in
ret
or
mov
mov
push
cwtl
jecxz
cwtl
pop
mov
movb
push
sub
and
dec
test
adc
sub
mov
mov
repz
mov
es
jns
scas
xlat
xor
jle
and
fildl
jae
imul
xlat
pop
repz
mov
int
in
scas
jno
jle
in
or
insb
sti
push
popf
add
mov
mov
xchg
inc
pop
xor
cmpb
add
adc
pop
in
xor
push
pop
sub
fldl
sahf
ds
inc
ljmp
pop
hlt
addps
nop
test
cwtl
xor
sub
push
mov
pop
testb
fcompl
jg
out
lods
mulb
mov
mov
bound
adc
rolb
push
lahf
pop
jno
cli
testl
push
lods
dec
ret
sub
in
mov
xchg
push
inc
or
popa
lahf
push
sbb
cmp
cs
xor
and
mov
inc
sub
shrb
negl
js
pop
das
aaa
sub
push
int
mov
add
sbb
cmp
mov
xor
pop
sbb
jle
addr16
dec
add
mov
addb
pop
and
icebp
lods
cmpb
mul
jl
out
cmp
clc
inc
in
xchg
xlat
montmul
cmpsb
les
fcoml
fildl
mov
xchg
mov
fbld
jae
sahf
jmp
data16
add
leave
daa
jb
adc
shrl
out
outsb
and
pushf
xor
add
daa
andb
inc
pusha
in
es
movsl
testl
push
pop
pusha
jmp
mov
adc
lret
or
dec
mov
pop
pop
dec
push
insl
mov
push
mov
pop
into
ds
push
rorl
adc
jns
xchg
adc
outsb
sbb
push
push
nop
cmp
dec
pop
adc
mov
inc
in
fbstp
dec
clc
orl
inc
movsl
sub
xorl
jae
xchg
cmpsb
gs
inc
js
iret
repnz
ljmp
mov
lcall
orb
push
push
dec
jno
std
js
or
xchg
pop
push
fcompl
and
mov
mov
inc
xchg
out
jmp
xchg
pop
js
mov
sbb
pop
inc
pop
jmp
scas
mov
mov
cmp
sub
mov
sub
mov
sbb
sub
lret
dec
lods
stos
inc
loop
cld
addl
dec
outsl
aas
stc
repnz
inc
loope
pop
xlat
sbb
les
mov
repz
and
push
pop
repnz
jbe
repnz
insb
xchg
outsb
push
xchg
sbb
notl
outsb
jl
xor
xchg
mov
out
push
pusha
scas
cmp
jbe
xchg
mov
mov
aas
stos
dec
pop
hlt
mov
or
imul
sbb
cmp
and
hlt
push
mov
repnz
sub
dec
out
and
add
mov
push
shr
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
bound
in
inc
add
push
ficompl
mov
bound
xor
xor
ret
out
jmp
mov
cmp
leave
out
cmp
jmp
xlat
lret
jl,pn
sti
push
scas
hlt
in
fildll
stos
pop
fwait
icebp
sbb
pushf
dec
mov
fistpll
pop
js
ja
movsl
loop
cmpl
mov
add
xchg
cmpsb
in
aas
jno
pop
sbb
push
push
and
adc
mov
popf
push
in
and
xchg
pushf
push
dec
test
pop
data16
test
mov
pop
mov
mov
sub
test
rcll
dec
pop
mull
or
fbld
stc
lods
xchg
insb
pushf
sub
inc
and
adc
subl
clc
xor
call
inc
outsl
shrb
xchg
out
scas
stos
ds
mov
sahf
pop
add
and
pop
scas
int3
cmp
push
push
adc
mov
adc
push
popa
rcll
jge
mov
sub
js
jl
jae
js
xchg
out
pop
sbb
push
popf
or
scas
jge
in
mov
jnp
fistps
fstpt
aad
mov
inc
dec
hlt
in
push
movsb
das
arpl
pop
lods
pop
inc
gs
lea
sbb
loop
out
mov
call
or
js
jg
pop
mov
outsl
inc
lret
mov
pop
jl
faddl
mov
or
jmp
mov
popf
imul
fldl2t
icebp
jb
sbb
iret
mov
fbstp
fwait
or
incb
mov
mulb
lds
shrb
icebp
sub
and
inc
cs
push
push
hlt
push
fnstcw
test
and
scas
mov
fadd
vcvtpd2dqx
jecxz
mov
test
rorb
pusha
iret
xchg
xchg
daa
pop
cmp
jae
lock
cmp
inc
mov
in
nop
add
ja
cltd
sti
insl
pop
jnp
scas
adc
mov
or
jbe
mov
ret
jl
inc
mov
fists
or
push
inc
out
aaa
test
dec
push
fstpt
enter
scas
hlt
push
jle
push
fdivrl
loop
xchg
fsubr
cmp
add
leave
test
mov
dec
cld
mov
dec
push
xor
or
sub
sbb
shlb
push
sub
add
mov
fnstcw
jbe
jo
addr16
jns
or
xchg
sahf
out
push
mov
sbb
fst
rcr
mov
add
dec
stc
cmp
clc
mov
mov
lret
and
enter
orb
add
ret
enter
mov
pop
lods
xlat
push
rorl
rolb
and
and
imul
pop
jmp
mov
dec
jge
jo
movsl
push
hlt
add
xor
data16
lods
inc
add
or
lock
push
inc
mov
push
cmp
lods
inc
and
push
add
sbb
sbb
sti
jge
in
movl
sbb
adc
push
aas
shl
push
cmp
push
jne
xchg
jmp
outsb
mov
cs
iret
cmp
xchg
fdivr
mov
mov
icebp
lods
lods
and
xchg
add
push
scas
test
pop
mov
mov
dec
call
pop
cmp
mov
subb
ss
xchg
lret
mov
dec
and
mov
jbe
in
or
jo
fs
mov
xor
mov
aaa
call
dec
sub
addr16
mov
xor
push
xchg
fwait
cmp
int
push
push
jb
cmp
gs
in
or
xchg
xchg
pop
pop
clc
dec
sbb
cs
insl
fnsave
pop
lock
jnp
scas
mov
cmp
sub
out
insb
in
repz
cli
pop
popf
mov
jnp
pop
dec
stos
inc
dec
inc
push
adc
test
int3
pushl
mov
or
enter
cmp
insb
jecxz
std
aas
adc
sbb
enter
in
aas
mov
cmpsb
repnz
push
je
movsl
movsb
js
int
bound
push
fucomi
mov
icebp
loopne
pushf
fsubrl
popa
inc
adc
mov
dec
ret
add
fucom
call
jmp
inc
mov
out
orb
in
popf
add
fs
xor
nop
or
lods
enter
dec
cmp
push
loopne
js
and
leave
jg
pop
inc
fs
fsubrl
and
push
jge
sti
das
add
addr16
les
std
mov
mov
into
cli
insl
xchg
hlt
jno
jo
mov
adcb
sbb
out
jb
inc
adc
clc
outsl
aad
rcrb
inc
mov
pushl
or
jno
dec
jmp
scas
xor
sti
xchg
into
lret
in
inc
addr16
stos
in
leave
push
lahf
js
and
fwait
push
int3
dec
lcall
push
pop
push
fistpl
and
adcl
icebp
scas
lods
jmp
or
add
movsl
sahf
inc
sub
cmp
cmp
xchg
and
repz
jb
dec
fistpl
xchg
int3
pusha
and
sub
mov
xchg
pop
jmp
popa
mov
dec
dec
xchg
enter
pusha
add
mov
rorl
xlat
and
das
pop
and
fs
sub
cwtl
push
jg
sbb
outsb
push
aad
adcl
mov
and
mov
lahf
iret
adc
push
push
cmp
dec
inc
mov
lcall
and
inc
fucom
inc
xor
aad
cltd
pusha
cmc
inc
leave
arpl
add
fnstenv
jmp
cmp
dec
lret
imul
icebp
pop
cwtl
call
add
lods
fisubs
inc
inc
shlb
inc
popf
dec
ds
pop
mov
aam
pushf
cld
jo
inc
lahf
lea
push
pop
adc
popa
mov
into
in
mov
ja
adc
xabort
mov
jp
movsb
daa
xor
add
movsl
mov
insb
mulb
loope
aam
test
fwait
dec
mov
clc
mov
js
push
inc
int
or
popa
fistl
cmp
push
lods
rorl
and
push
mov
icebp
add
hlt
adc
jmp
pop
jae
nop
sbb
out
push
inc
loopne
mov
jge
cld
cmp
cmp
sbb
mov
cmp
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
cmp
xchg
ss
add
sub
push
addr16
cmp
ret
int3
pushf
cmpsl
aam
xchg
adc
je
ret
stos
push
sti
mov
fmulp
aaa
sbb
cli
lea
pop
xchg
imul
rcrl
xor
gs
mov
data16
mov
mov
mov
cmpsl
ljmp
clc
fisubs
fldenv
ret
outsb
cltd
repz
sarb
dec
pop
mov
int3
mov
mov
call
cmp
or
xchg
mov
fcmovnb
arpl
dec
sbb
out
mov
ljmp
out
daa
scas
out
sahf
mov
or
sbb
imul
mov
jb
mov
pop
mov
in
sbb
fs
mov
fcomps
stos
ja
fistl
lods
mov
fstl
aad
aad
sbb
dec
cmp
mov
jmp
mov
cmp
mov
sub
adc
aaa
adc
andnps
insb
push
xor
rorl
and
jp
xor
inc
sbb
outsl
into
enter
cwtl
push
divb
cli
xor
jle
jp
mov
push
dec
fistps
pop
imul
inc
in
push
xor
cs
test
sub
iret
pop
mov
inc
into
push
xchg
pop
pop
and
push
cmp
add
mull
dec
or
push
cli
ja
aad
jp
pusha
sub
test
xchg
pop
ja
adc
shl
std
push
sub
pop
mov
xor
and
bswap
or
mov
shlb
jg
pop
fwait
outsb
cmp
sub
cmc
jl
add
loopne
push
fnstsw
push
or
call
jns
out
pop
inc
push
cmp
xchg
add
stos
sub
imul
sbb
ss
push
or
xchg
dec
out
xor
out
xchg
sbb
mov
mov
add
outsl
mov
cltd
push
xchg
mov
dec
insl
cmp
xchg
imul
pop
fcmovbe
push
and
mov
clc
mov
hlt
into
sbb
enter
mov
sti
mov
pop
and
adc
in
xchg
lea
test
fldl
int
mov
fildl
cmp
or
mov
call
inc
aam
lods
sbb
sub
jnp
or
mov
lods
jge
sub
jns
popf
add
cmpsl
cmc
enter
pop
test
loop
cmp
loopne
in
fisubs
xor
xchg
inc
xrelease
fildl
jl
add
lods
add
outsb
sbb
addb
sti
lods
les
cmp
mov
dec
jge
and
jb
and
sub
and
ret
dec
push
outsb
repz
loop
xchg
fcomi
cmp
movsl
cltd
int
pop
dec
gs
dec
lret
add
movsl
test
pop
dec
lods
fiaddl
and
jns
xor
scas
add
push
stc
cld
xor
jl
aad
lock
pushf
mov
push
inc
push
push
test
in
add
jo
fsts
mov
test
imul
insb
xor
cli
into
push
push
mov
fs
sub
pop
mov
mull
enter
ds
pop
fiadds
xorl
dec
test
inc
sub
gs
lods
jp
repz
xchg
scas
xchg
adc
mov
or
bnd
inc
fnstsw
xor
jo
call
xor
jae
push
adcb
sbb
into
orl
cmp
push
push
push
sub
insb
push
fmuls
mov
sub
fisubrl
je
xor
add
lahf
jecxz
xchg
jmp
xchg
mov
fwait
outsb
or
incb
ret
dec
pop
pusha
cmp
repz
loopne
mov
lock
lahf
sub
jo
adc
add
movsb
sti
mov
shr
push
fs
adc
andw
repnz
mov
jmp
cmp
int
push
mov
test
cs
fldenv
mov
out
pop
xchg
push
push
jae
adc
dec
in
pushf
adcl
in
pop
cld
ret
and
mov
outsl
or
jge
lea
sbb
mov
sbb
pop
inc
in
popf
loopne
mov
sub
mov
lcall
sti
inc
cltd
out
cltd
loop
push
adc
lds
ret
rcl
mov
cmp
shll
iret
dec
push
decb
mov
xchg
stc
mov
add
insl
mov
dec
test
mov
out
push
and
jle
push
rsm
das
in
shrl
setl
out
das
pop
fs
movsl
fs
popa
jp
std
pop
hlt
out
pusha
out
xor
pop
push
cmp
cmp
shll
cmp
add
xor
inc
inc
dec
jl
icebp
mov
xor
sbb
mov
inc
ja
jp
mov
ss
jae
dec
and
dec
xchg
pop
aam
push
xchg
loop
jno
and
ds
sbb
daa
andb
lds
jbe
and
mov
std
clc
pusha
pushl
test
pop
sbb
or
repz
mov
loop
outsb
gs
loope
fmuls
popf
jl
sub
enter
adc
xorl
insl
enter
add
roll
adc
scas
dec
and
pop
ja
loop
sub
clc
mov
decb
loope
notl
mov
stc
sbb
jmp
neg
mov
pop
jae
in
mov
fldenv
xchg
fs
out
lret
insl
mov
je
xor
or
popl
jmp
xor
fidivs
push
dec
jg
out
jmp
push
mov
pop
cmpsb
cmp
push
stos
jne
sub
addl
jl
lahf
leave
pop
xor
adc
mov
pop
mov
lret
mov
sbb
adc
cmp
jo
add
sub
mov
mov
andb
mov
adc
into
mov
cmp
test
dec
es
push
aad
shrb
out
add
aad
xchg
jmp
mov
out
push
fs
dec
addr16
cmp
xchg
inc
cmpsb
jecxz
movsb
test
xchg
xchg
loopne
mov
cs
push
add
das
mov
outsl
pop
jnp
jge
sahf
cmp
xor
test
mov
adc
cmp
fidivrl
lret
push
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
add
jb
les
jne
pop
jmp
cmp
out
pop
mov
push
and
addr16
leave
mov
sahf
adc
push
cmpsl
mov
push
sub
pop
daa
jmp
jge
pop
jp
pusha
ljmp
xor
pop
scas
lcall
mov
hlt
sti
inc
fistpll
dec
mov
mov
jge
inc
lcall
subl
mov
jp
fnsave
fists
mov
add
mov
lret
je
imul
push
outsb
fucomip
jo
mov
push
jns
loopne
sbb
js
add
jg
dec
jae
sarb
and
bound
dec
cmp
mov
iret
les
pop
iret
mov
loop
pop
add
in
sub
xchg
in
in
mov
jb
jge
jns
and
lods
mov
or
into
xchg
inc
call
clc
inc
shlb
push
sub
push
aam
jbe
int
popf
push
mov
inc
scas
mov
cmp
push
dec
push
movsl
inc
lds
lock
movsb
mov
or
push
and
loopne
or
es
or
out
mov
in
bound
and
mov
shlb
cwtl
fmul
pop
and
aaa
sbb
xor
xchg
push
pop
jmp
inc
in
aam
jne
out
cs
or
push
scas
insb
loope
xor
mov
pop
xchg
and
pop
mov
push
imul
imul
movsb
int3
shl
gs
leave
add
and
dec
inc
or
lret
cmpsb
jmp
add
xlat
mov
inc
pusha
fldl
hlt
nop
xchg
imul
shll
movsl
cld
pushl
std
mov
clc
cmpl
add
jge
or
cmp
lcall
sub
arpl
ret
pop
xchg
mov
out
mov
cmc
pop
jae
out
dec
rcrb
xor
mov
js
xchg
data16
mov
ljmp
ss
imul
inc
adc
inc
push
fdivp
mov
add
inc
movsb
mov
xor
pop
adc
into
add
psubd
xor
in
and
fsts
loopne
fcmovne
adc
ja
adc
sbb
sti
mov
jge
mov
or
ja
int3
setge
cmpsl
cli
mov
mov
int3
inc
mov
mov
mov
add
xchg
ficoml
fisubl
mov
push
sbb
sub
mov
or
int
pop
aam
test
scas
ret
xchg
inc
test
mov
cmp
mov
lret
call
testl
push
ret
or
dec
daa
jno
fisttps
cmc
inc
push
sbb
xchg
sub
xchg
xor
push
fmul
xor
xor
mov
lret
cmp
jecxz
js
adc
mov
popa
jns
ret
outsl
std
jno
xlat
fildll
xor
fcmovnbe
in
add
int3
inc
mov
je
add
mov
xchg
mov
cs
pop
jno
add
lret
ret
sarl
call
mov
outsb
movsb
in
rcll
pop
out
outsb
enter
inc
test
stos
rolb
shlb
cli
jmp
push
push
lcall
adc
cmp
xor
cmp
daa
push
lea
lahf
mov
test
mov
push
xchg
or
or
mov
pop
push
cltd
pop
cmp
pop
pop
pop
jne
pop
xchg
sub
or
and
and
mov
cmp
jmp
das
icebp
fs
std
mov
xchg
int
cmp
cmpsl
fldenv
cli
sbb
mov
mov
jmp
test
popf
outsb
notl
lods
lret
or
cmp
in
insb
jle
into
lds
push
sysenter
loopne
scas
jnp
add
pop
insb
lock
inc
mov
or
fbstp
push
int3
popa
gs
loop
imul
mov
xchg
dec
mov
cmpsb
add
add
mov
out
sub
scas
out
cmp
js
dec
les
jmp
imul
sbb
jmp
push
rorl
mov
into
xchg
divps
sub
ljmp
jg
push
sbb
in
xor
mov
fcoms
jo
lret
push
scas
ljmp
test
or
test
lock
xchg
pop
pushf
testb
arpl
jbe
push
cmp
in
in
push
outsb
lret
ljmp
repnz
pop
into
outsb
gs
mov
insl
aam
dec
mov
iret
cli
mov
xchg
dec
out
mov
push
imul
sbb
push
xor
roll
repnz
and
mov
jns
push
mov
xchg
jnp
out
xchg
out
cli
mov
fcomps
add
jecxz
mov
or
add
movsl
call
test
imul
add
add
adc
xchg
cmpsl
aam
fsts
sbb
in
imul
xor
adc
cmp
dec
fisttps
mov
inc
imul
daa
ja
lret
pop
bound
or
add
push
xchg
popa
push
push
mov
mov
sbb
xchg
sarl
lcall
iret
popf
outsb
ja
adc
cltd
add
jmp
sub
or
jo
jb
mov
mov
and
stos
mov
enter
dec
push
hlt
mov
rcr
loop
mov
popf
or
and
pop
cmpsb
rcrl
add
xchg
in
push
inc
jno
xchg
mov
lret
test
scas
loop
xor
or
push
and
jb
cmp
hlt
sbb
pop
adc
scas
out
fbld
inc
sbb
shrb
ljmp
pop
mov
and
sub
add
rorl
xchg
stos
getsec
jle
enter
jb
cwtl
jo
cmpsb
mov
mov
mov
idivb
jecxz,pt
insl
push
mov
sub
mov
lret
andl
jno
mov
mov
pop
lock
push
rorb
jle
ret
push
jae
jmp
push
mov
push
xchg
mov
xor
jb
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
push
inc
or
add
std
sbb
push
xor
dec
or
insl
sbb
aad
ja
sub
push
sbb
adc
mov
mov
mov
pop
push
xor
pushf
mov
mov
and
loope
or
sbb
adc
sbb
or
enter
stos
cwtl
adc
push
lahf
jne
cmc
stos
sub
mov
pop
pop
test
mov
or
jb
mov
inc
popa
adc
loop
pop
cwtl
jns
lret
dec
jno
inc
push
mov
out
adc
int3
nop
inc
mov
add
jecxz
cmp
jnp
adc
lds
fnstsw
inc
pusha
out
or
iret
sbb
cmc
xchg
repnz
xor
push
sbbl
mov
call
pop
andb
adcb
into
insb
pop
pop
push
divl
dec
imul
push
mov
cmc
ljmp
cltd
je
cli
out
or
add
loop
ret
add
loop
repz
pop
pop
jno
imul
aaa
nop
pusha
rcl
js
hlt
pop
fwait
or
pop
cmc
fidivs
xchg
push
jg
mov
mov
mov
popf
mov
addb
rorb
movsb
outsb
scas
rcrl
dec
xor
imul
xchg
push
pop
mov
ds
sub
mov
ret
mov
jl
adc
inc
in
mov
bound
mov
les
orl
shl
mov
and
adc
int3
scas
mov
or
xchg
inc
adc
jns
cmp
cmp
sbb
enter
rcr
pop
pop
adc
jge
int3
out
in
mov
pop
stos
fldenv
pop
imul
dec
mov
stc
dec
pop
lea
cs
icebp
pop
cld
fwait
aaa
imul
cmpl
inc
pushf
jge
cmp
inc
out
es
in
pop
fdivrs
outsb
mov
aad
xor
mov
int3
popf
lcall
jg
in
push
gs
mov
mov
mov
cs
mov
xor
mov
gs
lret
or
mov
rcl
mov
pop
cmp
jae
and
scas
push
cld
mov
jbe
xchg
int
jae
mov
and
jle
call
into
mov
lods
dec
les
mov
sub
in
fwait
xor
icebp
add
xchg
stos
xor
pop
or
jecxz
push
fimuls
sbb
and
movsb
xchg
js
nop
lds
repnz
xchg
jb
icebp
int
add
hlt
add
in
sbb
shl
insb
mov
xchg
push
shl
pop
mov
les
mov
push
aaa
xor
adc
andb
lret
lret
push
inc
mov
js
jle
aam
pop
mov
addr16
and
push
and
hlt
int
push
sbb
add
mov
add
mov
sub
inc
or
push
cmp
sti
lret
jge
jo
mov
ret
jnp
pop
mov
xchg
movsb
and
in
leave
lret
add
jno
adc
ds
clc
lcall
mov
adc
mov
iret
and
pusha
fneni(8087
pop
sahf
xchg
ds
xchg
inc
sbb
popf
pop
pop
arpl
repz
test
adcb
mov
sub
jno
loop
pop
lahf
jo
ss
xchg
add
sti
std
mov
adc
stos
in
shr
fstps
cwtl
mov
sbb
cmp
push
push
xor
insl
cmp
inc
fiaddl
or
xlat
cli
xor
mov
mov
jmp
ljmp
inc
fcomi
iret
cmc
jns
lret
add
dec
cltd
jmp
mov
and
mov
push
xchg
loope
or
cmpsl
bound
and
mov
pop
mov
in
jmp
mov
jae
pop
imul
mov
and
imul
inc
movsb
push
and
cmovg
daa
sbb
fistpll
dec
xor
cmc
fldl
in
jno
repnz
icebp
or
mov
ret
aaa
push
mov
jl
stos
in
cmp
in
jne
lock
das
adc
push
cmp
sahf
xlat
add
in
ljmp
decl
movsl
adc
mov
test
jecxz
or
les
mov
pop
rcll
clc
and
aam
adc
or
mov
nop
jge
add
pusha
sbb
mov
jno
and
inc
out
fidivs
lcall
ljmp
adcl
cwtl
mov
cltd
loopne
adc
loopne
cmpb
mov
jne
push
stos
pop
test
mov
rcr
xchg
das
fs
aam
lret
mov
ds
lret
outsb
fcomp
cmpsl
xchg
jno
scas
cmp
or
or
lea
shl
jmp
jno
mov
dec
push
insb
test
sub
inc
pop
filds
cmpsl
and
cmp
mov
pushf
dec
mov
es
xchg
imul
mov
dec
test
sub
cmp
mov
mov
pop
das
or
mov
adc
xchg
jne
pusha
cmp
scas
out
cmp
stc
lcall
dec
and
sbb
xlat
shll
imul
cmp
test
xlat
xchg
addr16
adc
cmc
dec
jge
sbb
fs
movsb
repnz
sub
mov
mov
addr16
shl
test
popf
mov
or
out
fisubrs
stos
jae
sbb
inc
ret
movsl
in
ja
add
pop
fistpl
into
iret
in
out
inc
sub
sti
xor
mov
shrb
negb
jmp
sbb
dec
jmp
das
sti
scas
push
lds
icebp
mov
xchg
std
lret
aad
gs
fs
pop
aaa
ret
cmp
adc
pop
xor
jecxz
orl
test
ja
leave
xchg
popa
and
cli
call
adc
cmc
xchg
mov
pop
popf
mov
int3
dec
sub
je
cmp
dec
mov
inc
gs
mov
andl
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
push
mov
add
or
xchg
inc
sahf
loope
dec
test
dec
fnstcw
inc
out
movsl
or
jmp
pop
fildll
ja
xchg
pusha
mov
sahf
enter
push
imul
hlt
daa
adc
mov
add
adc
mov
mov
movsl
arpl
ficoml
and
pop
enter
cmp
out
mov
pop
sbb
data16
jae
nop
fmulp
push
int3
mov
add
push
in
movsb
mov
mov
data16
push
lret
pop
xor
ja
sbb
inc
push
test
stos
test
xor
and
xor
mov
test
xchg
jo
lahf
inc
jle
mov
pop
test
mov
icebp
xor
pushf
push
mov
xchg
mov
call
inc
into
add
cwtl
sub
cmc
and
adc
pop
push
sub
inc
insl
ja
addr16
push
lds
jnp
mov
out
pushf
icebp
movsl
insl
int
inc
and
jp
repz
push
adcb
xchg
scas
xchg
lret
xchg
xor
movsl
xor
shll
aaa
call
push
dec
jmp
add
or
test
ja
pushf
js
push
scas
fwait
inc
shll
xchg
inc
push
mov
scas
loope
insl
dec
int
dec
xchg
adc
inc
mov
scas
out
jl,pn
ds
lret
in
aam
add
inc
push
inc
cmp
clc
arpl
dec
jns
jle
cmp
cmpl
int
or
jle
cmpsl
sub
fsubrl
data16
dec
fnstenv
lret
nop
sub
fisttpll
mov
jp
dec
or
mov
jnp
lods
jmp
cmc
jb
cld
insb
dec
leave
nop
out
addr16
mov
fld
sahf
jnp
pop
mov
and
in
ret
aam
inc
mov
lea
gs
pop
aaa
movsl
mull
pop
adc
test
mov
das
imul
add
jns
adcl
inc
jne
stc
fcoms
jmp
xchg
sbb
adc
popf
nop
in
sbb
daa
add
rsqrtps
and
aaa
jbe
test
inc
ja
xchg
mov
adc
xchg
imulb
and
push
sbb
mov
cmp
int3
cmc
xor
push
cmp
pop
push
sbb
cmp
adc
cmc
jle
popf
test
mov
clc
sarl
pop
xchg
int3
jnp
xlat
out
dec
inc
pop
dec
xchg
xchg
fisubrl
or
push
aaa
test
push
xlat
mov
js
push
scas
inc
xchg
ret
sti
scas
mov
xchg
inc
stc
inc
xchg
or
push
notl
pop
add
add
in
cli
mov
dec
xchg
push
xor
and
mov
ret
cmp
inc
das
inc
ds
xchg
and
fcompl
in
cltd
cmp
push
sar
dec
mov
add
xchg
mov
add
mov
scas
lret
sub
adc
movl
mov
jg
fimuls
pop
mov
push
sub
imul
cld
sarl
xor
mov
xor
or
sbb
xor
cmp
out
out
pop
outsl
sbb
lcall
push
cmp
adc
xchg
scas
cmp
xor
jp
mov
imul
pop
add
push
cmp
jp
cli
daa
cmp
test
jge
add
mov
repnz
pushf
xlat
xchg
push
stos
rolb
mov
push
lcall
addr16
mov
int3
popa
movsb
lret
fildll
mov
cmc
mov
cmp
jne
mov
sbb
nop
into
mov
aaa
inc
test
iret
jb
xchg
jno
inc
inc
insl
cmpsl
inc
aaa
mov
and
adc
scas
xchg
das
inc
test
test
push
xor
jg
fnstsw
shlb
xchg
fistps
inc
and
fimuls
inc
adc
push
shlb
push
lcall
je
idivl
cmp
mov
push
mov
inc
push
and
xor
sbb
mov
and
add
adc
mov
loop
sub
xor
jl
lds
xchg
pop
adc
rcl
sbb
push
pop
loopne
mov
and
xchg
fucomip
jo
pop
dec
push
scas
add
mov
out
pop
adc
aam
sub
xorl
pop
push
lock
mov
mov
insl
add
out
inc
leave
xchg
xchg
sbb
or
lahf
fs
lods
sub
sbb
xor
add
mov
add
in
enter
std
mov
adc
lock
xor
lret
cmpsb
je
adc
mov
xchg
insb
push
fbstp
insl
lret
push
pop
sbb
mov
pop
mov
push
xchg
lret
and
cmpsb
mov
inc
icebp
bound
aas
outsb
cmp
and
mov
je
insb
dec
xor
jle
mov
and
ficomps
ds
mov
mov
pop
shrb
call
mov
mov
test
xor
ljmp
jge
adc
mov
or
int3
push
cs
push
cmp
ja
cwtl
mov
mov
jmp
cs
daa
fs
jae
dec
mov
fistps
inc
into
jg
sarb
test
mov
dec
push
lret
lret
add
mov
ljmp
inc
das
lcall
mov
push
shr
pop
cmp
inc
lret
adc
sub
test
or
and
dec
xchg
fcoms
ljmp
popf
sbb
mov
rorl
pop
scas
jge
test
xor
pop
jg
mov
call
push
push
mov
lret
insb
xchg
add
adc
cltd
and
aad
dec
dec
xchg
sub
roll
into
imul
mov
add
scas
sbb
and
jae
leave
test
xor
imul
pop
adc
dec
mov
dec
gs
and
or
stos
into
int
sub
dec
test
mov
cs
pop
mov
inc
sub
cmp
rorw
ja
mov
jbe
in
call
shlb
xchg
jbe
mov
test
outsb
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
and
add
and
dec
cmp
or
out
push
adc
jecxz
pop
ret
popa
lret
mov
stc
cmpsl
std
inc
sti
mov
mov
int3
call
rolb
push
or
pop
mov
and
ret
andb
and
ret
movsl
insl
jbe
imul
mov
in
and
mov
cmp
inc
inc
push
pusha
add
es
rclb
js
and
out
dec
fcoml
aaa
inc
inc
xchg
add
movsl
push
enter
jbe
push
mov
stos
pusha
in
lds
or
mov
sub
sti
lret
call
inc
mov
pmaxub
flds
mov
or
add
inc
notb
sbb
icebp
cmp
outsb
add
aad
xchg
lea
out
mov
lret
mov
jle
cmpsb
lods
inc
sahf
and
jae
shlb
out
enter
mov
repz
xchg
and
cmp
loope
imul
jl
dec
cmpsb
rorb
pop
ss
bound
xchg
jge
test
pop
xor
dec
dec
in
insb
sub
lret
outsb
das
es
frstor
pop
and
jge
sti
gs
div
addr16
jo
add
clc
out
sahf
mov
insb
or
xor
shl
fwait
sbb
fwait
push
adc
adc
mov
out
nop
dec
xchg
sbb
sub
mov
insl
aam
js
movb
or
movsb
dec
sarb
and
and
movsl
aas
dec
mov
inc
mov
sub
call
mov
cmp
call
push
cmp
mov
test
mov
movsl
ljmp
mov
fildll
adc
jo
and
mov
es
fisttpll
mov
inc
aas
and
xchg
hlt
mov
mov
sbb
cwtl
pop
lcall
pushf
add
shrl
daa
pop
inc
pop
sub
call
icebp
dec
lea
test
mov
pop
and
lods
fmul
adc
int
sub
rcr
lret
loopne
mov
aas
stos
mov
fxch
outsb
xor
and
imulb
add
add
cmp
push
mov
mov
xor
sbb
cmc
arpl
mov
mov
xor
sbb
clc
mov
pop
add
in
or
popf
xchg
insl
sub
adc
fcmove
std
cmp
xlat
pop
inc
pop
dec
dec
call
aaa
shll
orl
in
adc
xor
es
sbb
cmp
jmp
pop
inc
lods
cmp
sbb
loope
movsl
jmp
je
enter
xor
sbb
or
pop
loope
and
pop
sti
insb
push
adc
xor
mov
ja
data16
shrd
adcl
sub
mov
cmp
movmskps
nop
and
sbb
std
dec
xchg
sahf
into
pop
icebp
mov
add
arpl
pop
cli
data16
pop
jno
cmpsl
lret
jg
outsl
add
outsb
lea
jge
popf
ret
jg
pop
and
jle
mov
xchg
mov
lcall
imul
mov
imul
lcall
lcall
insb
mov
lods
into
sub
cltd
rcll
sbb
ret
sub
xchg
in
iret
lods
jb
and
arpl
cmpsl
push
jne
iret
stos
aaa
jge
jle
mov
or
push
jle
in
xchg
mov
andl
pop
sahf
sub
mov
mov
sbb
pop
xor
je
fnstsw
push
inc
sbb
xchg
stos
in
std
or
stos
or
adc
push
mov
inc
fcmovbe
dec
mov
or
idivl
sbb
add
in
inc
icebp
and
dec
insl
cmp
hlt
aaa
push
cs
xchg
mov
inc
cwtl
sbb
mov
push
push
loope
aaa
add
mov
ror
jg
jne
out
sub
xchg
aas
jne
lea
fstl
clc
and
or
xor
add
jo
adc
scas
leave
push
dec
pop
cmp
sahf
ja
push
addl
adc
movsb
xchg
dec
ror
arpl
dec
jmp
cmpl
jmp
pusha
dec
push
mov
std
xchg
test
push
std
bound
movups
jmp
in
inc
xchg
xchg
or
push
mov
mov
xor
sahf
clc
outsb
sahf
lea
jne
sbb
push
cmpsl
sbb
and
fs
mov
test
sub
lea
jl
rcrl
fsubrl
and
jne
lcall
aad
mov
jno
pop
pop
pop
dec
popa
mov
fisubs
cmp
inc
mov
inc
gs
icebp
mov
fistps
paddsw
icebp
divb
inc
in
or
sbb
mov
lea
xchg
lret
sbb
stos
mov
enter
fwait
andb
aam
mov
popf
addr16
push
mov
xchg
and
pop
and
movsl
jecxz
movsl
roll
in
pop
jmp
and
pop
adc
xchg
mov
sbb
lods
sar
cmpsb
inc
fidivrl
in
insb
ror
pop
or
cmp
mov
xor
xor
mov
js
mov
mov
mov
mov
cmpsl
jle
mov
inc
mov
xor
ja
shlb
mov
sbb
pop
add
sub
sbb
in
mov
fld
and
cmp
xor
sbb
rcrl
ret
ror
outsb
mov
shll
add
mov
push
mov
sbb
jecxz,pt
jne
sub
push
pop
call
jbe
xchg
sub
in
sahf
mov
scas
jo
jl
scas
mov
outsb
mov
or
fildl
movsb
movhlps
pop
imul
jle
mov
inc
or
out
mov
inc
jmp
fmul
dec
push
or
xor
into
std
jmp
jp
out
cwtl
inc
movb
mov
insb
ss
ret
lahf
xchg
loopne
dec
adc
loope
push
mov
pop
into
and
rcl
insl
es
fisubs
into
dec
pop
mov
jbe
and
jb
push
mov
jecxz
sub
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
pcmpeqw
addr16
cld
inc
hlt
movsb
orb
mov
lret
ret
sbb
lcall
mov
lea
sbb
aam
fwait
scas
mov
sub
lret
pop
daa
sbb
pop
insb
fimull
fsub
adc
xchg
fs
repnz
mov
push
enter
stos
lahf
outsl
sub
fisubs
pusha
add
insb
mov
filds
xor
mov
push
push
cwtl
jae
mov
fsubr
push
mov
or
push
inc
imul
sbb
rcrb
xchg
jb
repnz
mov
popa
fcoml
fdivr
fldcw
push
pop
push
hlt
mov
add
lret
jge
cwtl
sbb
xchg
out
jecxz
roll
pop
push
in
sub
fnstsw
inc
sub
pop
dec
addl
mov
jmp
shlb
cmp
add
lods
pop
inc
stos
arpl
mov
mov
stos
ja
jmp
dec
jno
es
mov
push
mov
sbb
jp
add
aaa
repnz
dec
xchg
cs
lcall
lods
pop
cmovg
pushl
aam
xor
popf
gs
icebp
sub
add
enter
add
mov
mov
and
push
test
mov
shr
pop
cmova
and
mov
push
test
adc
sub
in
lods
cld
fwait
lahf
pop
inc
enter
filds
lret
cmp
shrb
es
mov
push
inc
cmp
dec
scas
ret
loopne
int
inc
and
cltd
in
mov
add
push
adc
leave
add
pop
shll
nop
and
and
add
icebp
xor
fs
and
nop
pop
js
xchg
sbb
lods
xchg
cwtl
pop
push
lret
lock
pop
add
jno
test
fcoms
sti
pop
xor
mov
pop
xor
or
repnz
push
insl
jo
mov
push
sbb
std
inc
adc
jns
mov
jns,pn
jmp
adc
jg
inc
mov
out
mov
add
out
aaa
lods
ljmp
adc
jne
push
and
mov
lds
mov
xchg
push
fcomps
into
loop
adc
movsb
outsl
cmp
jge
jl
adc
aas
outsl
cmp
rcrb
xlat
xchg
jns
repnz
xor
cs
push
imul
pop
mov
aas
inc
mov
push
pop
dec
nop
lods
mov
xor
pop
pop
das
mov
enter
or
sbb
js
and
jmp
adc
shll
insl
je
jecxz
jb
dec
bound
rcrb
stos
mov
jl
lcall
test
es
out
and
xchg
cvtps2pi
sub
cld
mov
daa
out
stos
fiaddl
sbb
nop
push
xor
adc
in
popf
ja
jno
test
into
faddl
xchg
sbb
lret
testb
pop
lea
in
test
rorb
dec
xchg
jp
sbb
das
bound
es
and
xor
push
sbb
fcom
jp
mov
testb
out
enter
sbb
lds
hlt
ja
push
dec
shl
push
fistpl
fstpl
sbb
aam
mov
inc
sbb
mov
int3
sub
cmpsl
jno
jmp
mov
mov
adc
adc
inc
jge
sbb
lcall
shr
inc
orl
or
push
inc
fiaddl
add
imull
ja
dec
mov
add
and
enter
fwait
clc
inc
inc
sbb
roll
mov
fpatan
push
js
pop
cwtl
xor
les
add
lahf
mov
sbb
lods
and
int3
add
int
xchg
sub
adc
stos
push
in
sbb
arpl
fwait
inc
mov
int
cmp
lods
jae
sub
jns
sarl
sub
pop
pop
dec
pushf
or
hlt
dec
inc
jb
lock
mov
xor
mov
in
mov
jno
sahf
fnstcw
test
xchg
popf
fsubr
sbb
out
add
dec
push
dec
nop
cld
sub
sbb
mov
sbb
test
std
cwtl
pusha
data16
call
pop
fcom
leave
adc
test
js,pt
and
jl
mull
dec
out
jb
cwtl
cmpsl
adc
lea
test
cltd
push
lods
cmp
sbb
mov
xchg
mov
adc
lret
sbb
inc
jne
rclb
add
jae
adc
push
inc
cli
aaa
hlt
xor
in
outsb
loope
xchg
lret
inc
aas
mov
ss
lods
je
sbb
fistl
addb
pop
pusha
cmp
int
xor
test
fdivs
testl
out
or
popf
sbb
sub
mov
mov
aaa
lret
inc
pop
mov
adcl
push
cmc
sub
adc
sbbl
nop
lods
pop
xor
daa
xchg
dec
inc
jecxz
movsb
mov
mov
xchg
test
push
movsl
rcll
fmulp
mov
sbb
pop
and
dec
xchg
data16
xchg
aam
and
in
adcb
push
jmp
dec
push
adc
jbe
loope
xchg
jl
cmp
jns
pusha
mov
sbb
je
test
inc
in
nop
mov
shlb
lahf
fdivs
push
inc
xor
iret
sbb
inc
xchg
xlat
gs
ret
sbb
arpl
lock
mov
jp
cli
cs
sub
mov
or
xchg
adc
adc
inc
or
or
loopne
cltd
cwtl
dec
inc
cmp
and
sub
ret
lahf
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
hlt
pop
mov
loope
invd
add
cmovno
and
sub
fwait
sub
fmulp
insb
je
mull
push
jno
adc
loopne
inc
dec
ret
mov
mov
sbb
stc
pop
pushl
popa
lods
cmpsb
sub
mov
pop
mov
loopne
fiaddl
scas
lods
daa
andb
mov
xchg
cld
loope
int3
cmp
hlt
cwtl
jge
insb
xchg
push
jle
outsb
int
xchg
push
mov
jg
xchg
jno
xchg
mov
xor
clc
push
mov
and
popf
popa
mov
neg
lods
push
mov
rorl
dec
adc
iret
mov
mov
dec
ds
push
xchg
int3
mov
mov
dec
js
xor
mov
lahf
mov
pop
addr16
jecxz
test
in
mov
sbb
mov
jmp
repz
fsts
pop
aam
int3
sbb
lock
push
rcrb
test
xchg
jne
insl
arpl
loope
cmp
or
mov
rolb
sbb
inc
lcall
mov
or
mov
jge
mov
pop
or
xor
fwait
ss
ss
mov
out
jne
jp
sbb
sbb
cmp
inc
lock
int
and
jl
pop
inc
adc
mov
mov
lret
addb
mov
mov
cmc
enter
std
shlb
mov
xor
inc
fs
fmuls
or
mov
ret
pop
repz
xchg
cmp
mov
pushf
sub
adc
pop
inc
jne
cmp
imul
sbb
addr16
pop
mov
gs
or
mov
pop
ljmp
cld
push
sti
les
mov
jl
or
lods
xchg
mov
nop
jmp
fimull
pop
mov
in
std
imul
pop
add
jno
out
sbb
ds
push
xchg
lock
mov
cmpsb
aam
sbb
cwtl
mov
inc
out
jmp
pop
dec
cmpsl
dec
or
xchg
xchg
pop
subl
jge
loop
pop
movsb
push
dec
jo
cwtl
fiaddl
mov
xchg
subl
jmp
mov
pop
push
jmp
cmp
test
mov
add
pop
mov
ds
ss
sbb
stos
mov
movsl
pop
pop
and
cmp
adc
sub
divl
or
dec
and
cmp
jecxz
fcomps
aam
shlb
jb
rorl
pop
sub
cs
ds
sar
icebp
add
bound
stos
in
dec
cwtl
and
andl
mov
pop
inc
inc
mov
push
mov
fs
sub
mov
push
outsb
xchg
loop
fistl
icebp
jne
pushf
cmc
lret
mov
xchg
mov
into
ret
mov
dec
fadd
bound
jle
in
sbb
lea
lea
gs
jp
out
stc
adcl
fs
push
and
jo
pusha
addr16
rclb
xor
movsl
lock
cwtl
or
fistps
in
stos
cmp
sahf
aaa
fsubs
pop
mov
daa
call
div
pop
fisubl
rolb
adc
or
leave
jg
pop
out
nop
cmc
iret
fsts
ja
fsubrs
cmp
cs
or
loopne
dec
sub
inc
decl
sub
sbb
push
movsl
es
out
lock
jp
aad
jae
out
push
mov
fimuls
jle
mov
call
adc
out
pushf
sbb
jno
or
xor
addb
mov
lret
cwtl
cmp
fstpl
add
and
adc
aas
or
jae
pop
ds
shl
pop
ret
mov
imul
fwait
leave
push
jnp
fcoms
cltd
inc
out
xchg
rcrl
sbb
fwait
loope
scas
sbb
or
repnz
jae
pop
pop
inc
jo
or
add
jecxz
push
mov
mov
std
adc
rcll
mov
sbb
sbb
fisttpl
mov
xchg
jne
xchg
xchg
push
xchg
aad
push
fs
xchg
in
sub
jns
mov
xchg
test
mov
pop
fisubrs
add
lcall
shlb
lret
inc
test
popf
mov
iret
icebp
cmp
insb
ret
push
in
out
cmp
mov
test
cmp
mov
lcall
cmc
repz
aas
jg
and
gs
test
inc
jne
xor
and
mov
jge
lock
ret
lea
cmovo
into
popa
leave
adc
les
popa
mov
rcr
mov
dec
aad
mov
xchg
xchg
scas
pushf
xor
loop
add
dec
pop
fisubrs
outsb
ficompl
shlb
and
mov
dec
pushf
jo
lods
in
jecxz
stos
and
push
shl
mov
psubusb
lahf
gs
in
aas
shlb
rolb
ja
repnz
sub
in
iret
cli
mov
push
add
loope
mov
test
push
std
cmp
jmp
jno
lret
pop
mov
add
fwait
jg
and
adc
mov
mov
outsl
in
adc
inc
adc
and
or
inc
adc
lea
sbb
dec
enter
add
or
push
and
leave
inc
sbb
mov
outsl
dec
dec
repnz
das
adc
rcll
ljmp
mov
dec
mov
push
mov
rep
out
cli
rcrl
push
jecxz
push
leave
jb
xchg
xor
out
dec
mov
and
insl
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
testl
ja
outsl
add
jmp
mov
in
mov
xor
je
shl
aam
jns
jnp
cwtl
in
pop
inc
push
rcll
sub
sarl
cmpsb
xchg
pop
pop
adc
fwait
sahf
jb
mov
test
aad
vunpckhps
lret
stc
xor
mov
pop
inc
sarl
ret
xchg
jl
rcll
subb
sbb
out
mov
xchg
imul
inc
push
in
mov
int
loope
repnz
mov
mov
adc
dec
mov
mov
adcb
jo
aad
adc
js
mov
mov
les
add
jl
stc
add
lods
call
dec
xchg
das
imull
xlat
and
ljmp
pop
andl
cld
outsl
imul
inc
push
mov
inc
pop
mov
lret
and
mov
sbbb
inc
std
insl
push
out
dec
imul
and
push
pop
sbb
push
or
js
sbb
or
mov
stos
push
pushf
es
xor
mov
xchg
popa
decb
popf
lcall
cli
sahf
xchg
xor
sti
dec
jne
xchg
inc
roll
fiadds
pop
inc
seta
cmc
dec
sub
mov
xor
dec
sahf
pop
lcall
callw
or
inc
cmp
data16
sub
in
pop
xor
repz
xchg
mov
scas
ljmp
lahf
inc
push
adc
icebp
lret
aas
loope
jle
mov
sbb
cs
pop
adc
adcl
clc
out
dec
inc
test
shl
aas
ljmp
jns
pop
stos
sbb
cs
dec
int
push
aad
les
mov
mov
jbe
out
movsl
xchg
sti
jo
in
lcall
inc
fs
adc
jo
jbe
push
orb
cmp
lods
dec
mul
and
mov
test
scas
je
xor
lods
subl
bound
sahf
out
xchg
xchg
pop
shrb
sbb
dec
loopne
xchg
mov
xor
and
icebp
icebp
sti
jge
jne
fiadds
mov
imul
xor
fidivl
sbb
dec
mov
fs
push
inc
sub
sbb
enter
mov
push
cli
out
mov
jmp
cmp
adc
movsl
sub
xorl
std
hlt
hlt
inc
pop
js
jle
mov
or
dec
data16
mov
jb
test
fsubl
inc
mov
mov
test
pusha
jne
xor
cld
jae
pop
call
repnz
push
lods
fcoml
rcrl
sahf
outsl
sahf
lcall
out
cltd
lods
mov
jp
lds
sbb
add
mov
lret
loop
shl
fcmovnbe
test
pushf
js
jne
cmp
in
adc
pushf
mov
std
push
into
add
hlt
cltd
push
mov
mov
dec
lcall
clc
lea
out
push
push
outsb
xor
outsl
into
mov
pop
outsb
cmpsl
mov
cmpl
push
out
hlt
ret
xor
sub
cmc
push
lea
adc
mov
push
fildll
add
adc
lcall
fstpl
push
mov
push
inc
movsb
test
js
sub
repz
movsl
xlat
lcall
imul
mov
mov
jg
jae
gs
sbb
mov
les
pop
or
xchg
sbb
pmuludq
sub
aas
jmp
pop
push
lock
sahf
fstpl
scas
cli
repnz
insb
and
sbbb
ds
pop
mov
mov
or
cmpsb
inc
cli
mov
add
mov
bound
dec
or
dec
test
sbb
pop
test
aad
push
jns
xor
dec
sti
test
xor
repz
cmp
sbb
out
mov
mov
lods
out
clc
sbb
add
in
jg
in
add
out
inc
mov
arpl
lds
mov
fisttpl
push
pop
imul
xchg
sti
dec
dec
loope
inc
xor
rol
push
mov
in
xchg
sub
push
std
add
sub
push
sub
movsl
bsr
inc
es
xchg
mov
gs
fwait
test
lret
push
mov
dec
cmpl
pop
les
es
dec
sub
into
or
jl
dec
push
imul
xor
imul
jns
mov
adc
inc
mov
lcall
daa
and
repz
scas
popa
rcrl
push
xorb
popf
sbb
in
push
mov
pop
sub
push
jno
ljmp
dec
aad
mov
int
fcmovne
pop
arpl
dec
cmp
out
jmp
cwtl
stos
sahf
arpl
std
fwait
mov
jmp
jae
sbb
or
jne
pushf
mov
rcll
cltd
lret
push
xor
out
xchg
sub
fisubl
cs
fwait
insl
jge
insl
or
adc
popa
clc
out
shl
mov
enter
jbe
mov
fists
or
add
inc
mov
jbe
push
sbb
fs
adc
sbb
inc
pop
sbb
clc
xlat
pop
scas
dec
repz
mov
jne
mov
mov
mov
inc
in
jmp
out
xchg
mov
in
add
inc
mov
xchg
rolb
cmp
and
lahf
push
xchg
loopne
sbb
lea
fistl
mov
dec
fisubrl
lret
or
test
and
ret
sub
fiaddl
call
pusha
cltd
insl
movsb
jnp
pop
out
fs
jge
xchg
push
sbb
out
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
punpcklbw
repz
cli
jo
push
xor
nop
jno
sbb
mov
movsb
mov
pop
shll
outsl
enter
pushf
int3
add
mov
jbe
cmp
loope
sub
or
scas
push
addl
mov
in
lods
mov
xchg
push
into
aas
mov
data16
jne
fcom
imul
mov
div
dec
pop
and
sub
popf
cltd
ret
out
ljmp
mov
xchg
sbb
jae
es
cltd
sarl
xor
movsb
imul
divb
pop
clc
pushf
jne
cmp
test
mov
shrl
imul
and
jp
fbld
pop
bound
ljmp
push
out
jae
sub
pusha
jns
inc
dec
ljmp
arpl
mov
les
int
ret
xchg
fstpl
mov
pop
mov
xchg
into
sbb
pop
cld
jae
push
ds
cmp
data16
mov
xchg
sbb
cwtl
mov
jo
int3
stc
into
or
mov
cmp
push
fiaddl
std
cmp
lea
es
adc
pop
pop
cmp
insb
xor
sub
les
call
ds
xchg
push
sbbb
mov
add
push
js
mov
call
incb
mov
es
inc
fistpll
xor
jae
inc
mov
rclb
lahf
pop
test
out
add
rclb
fdivrp
cli
pop
mov
or
mov
movsl
cltd
pusha
mov
jbe
ret
mov
data16
xchg
pop
push
xchg
fcoms
sti
shl
adc
out
arpl
fnstenv
adc
insb
sub
stos
jp
mov
aaa
push
fcmovb
jl
xchg
daa
pusha
add
hlt
ljmp
push
push
fcomi
divb
aam
and
or
add
popa
mov
push
adc
sub
and
fldenv
jns
loopne
and
aad
in
push
shl
inc
push
pop
fwait
test
pop
fistpll
dec
add
fdiv
or
pop
mov
int3
or
xor
push
cmp
in
or
xor
push
mov
sarb
pop
nop
in
sbb
inc
adc
push
xchg
adc
push
mov
adc
xchg
outsl
sbb
jge
loopne
in
fwait
out
imul
fadds
pop
aas
inc
lret
jno
cmpsb
push
rcll
pop
dec
jne
loopne
pop
jae
cs
sbb
mov
cmp
or
mov
pushf
adc
es
sbb
jno
and
mov
into
mov
fstps
arpl
xchg
daa
in
test
cs
xor
mov
jo
adc
pop
sbb
gs
std
mov
aaa
mov
jecxz
xchg
popf
icebp
mov
mov
arpl
mov
mov
pop
imul
das
cld
xor
icebp
inc
cld
std
add
fwait
pop
jae
arpl
jg
mov
sbb
lds
test
mov
mov
dec
push
pushf
loop
mov
sbb
mov
mov
daa
inc
in
out
xchg
arpl
in
mov
mov
inc
loop
mov
push
pushf
stos
pop
mov
cmp
cs
xor
sahf
sbb
es
xor
pushf
lahf
stc
das
sbb
lock
jnp
push
jno
sub
push
jle
xchg
lret
repnz
fs
aas
roll
outsb
fwait
ljmp
mov
test
iret
dec
lret
repz
push
xor
xchg
in
arpl
fsubrs
cmc
and
clc
shlb
mov
dec
pop
out
jecxz
insb
xlat
inc
cld
test
roll
or
push
addr16
inc
js
aam
stos
pop
mov
xor
add
or
mov
aam
adc
test
js
fnsave
mov
icebp
lods
jb
into
lret
pop
mov
std
or
lock
idivb
jmp
cmp
sub
repz
fdiv
aaa
les
cwtl
popa
cltd
roll
jg
and
fldlg2
std
test
add
mov
adc
pop
lods
xlat
imul
xor
std
mov
jb
xchg
daa
lea
mov
pop
repnz
ds
add
sahf
sbb
mov
test
hlt
mov
outsl
ja
cld
inc
divl
daa
fs
adc
scas
scas
push
sbb
and
add
mov
outsb
movsb
or
pop
mov
and
add
mov
sbb
lds
adc
sbb
push
stos
cmp
lock
cmp
je
xor
es
js
jo
cmpsl
stos
cld
mov
sbb
jl
xchg
or
jecxz
inc
adc
mov
mov
or
addl
mov
mov
mov
sub
add
inc
in
aas
cs
sub
faddp
jbe
loopne
aad
dec
jo
jo
or
test
sbb
int
les
xchg
jg
xchg
push
push
stos
pop
xor
add
mov
cmpl
jne
bound
clc
adc
movsb
pusha
add
int
imul
mov
into
inc
daa
stos
cs
mov
sbb
cmp
mov
push
ja
insb
cmp
xchg
mov
leave
cmp
jae
fimuls
sbb
lods
jno
pop
xor
dec
or
xchg
adc
cmp
pop
inc
mov
cmpsb
pop
ret
inc
imulb
xor
mov
iret
lea
clc
loope
rclb
and
xchg
adc
sub
mov
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
lock
dec
cwtl
test
adc
test
orb
jbe
mov
inc
add
mov
cmp
stos
hlt
loopne
scas
sub
push
ret
aaa
popf
mov
mov
jmp
imul
sti
es
jmp
fidivs
mov
cs
stc
dec
add
cs
push
popf
xlat
shlb
jge
or
mov
push
cs
sarl
hlt
mov
sub
fchs
pop
mov
mov
mov
les
bound
movsb
mov
fisubrl
sbb
mov
cli
sub
clc
sub
xchg
leave
xchg
add
cmpsl
mov
sti
mov
mov
andb
mov
xchg
inc
imul
mov
out
decb
or
lds
jecxz
pop
inc
and
pop
clc
enter
adc
and
lahf
int
xor
or
mov
bound
outsl
sbb
or
dec
dec
loop
jmp
test
pop
in
push
push
mov
aas
dec
or
add
push
dec
stc
lds
cmp
inc
icebp
mov
sub
and
lret
and
xchg
ds
and
push
lods
addr16
in
in
lret
insl
cmp
decb
inc
pop
icebp
xchg
mull
fwait
cmpsl
push
nop
xchg
out
xor
mov
cmp
push
iret
push
stc
inc
cli
test
sub
pusha
sbbl
jo
repz
jbe
orl
adc
pusha
std
fsubrl
std
adc
pusha
stc
and
scas
mov
xchg
fcmovne
inc
lods
mov
movsb
xor
cmp
push
xor
fisubs
call
xchg
dec
scas
sub
hlt
inc
mov
int3
push
lods
add
jnp
mov
push
scas
pop
push
mov
adc
insb
pop
test
or
rcll
out
sbb
sub
cmp
sbb
inc
mov
mov
cmpsl
and
vmovntdq
sbb
pop
sbb
jno
mov
sbb
mov
push
jb
xchg
sahf
mov
mov
stos
pop
pop
xor
mov
loop
xchg
ret
mov
push
add
loopne
pop
xor
inc
shrl
push
fildl
sub
int
stos
inc
pop
or
xchg
cwtl
sub
js
fdivrs
je
ds
andl
jge
xchg
jno
cmp
and
mov
mov
ret
aas
bsr
stc
adc
sbb
xlat
rcr
pop
jle
loop
mov
mov
sbb
jnp
fnstsw
inc
or
add
mov
dec
ja
ret
lahf
add
mov
orb
mov
movsl
xor
cltd
or
out
xchg
roll
xchg
pop
loop
push
jae
add
mov
jle
xchg
mov
out
push
adc
popf
and
mov
faddp
loop
lret
inc
pop
iret
stos
insl
fs
fistps
xor
shlb
adc
dec
inc
insb
mov
repnz
mov
call
lods
mov
test
scas
and
js
sbb
outsl
sbb
test
add
add
das
mov
dec
push
test
scas
dec
dec
mov
bound
adc
imul
xchg
or
inc
jo
cli
je
stos
lock
bound
frstor
push
or
mov
xchg
popf
mov
int3
mov
call
jae
inc
mov
lds
gs
test
sub
xchg
lea
push
dec
ljmp
cmp
mov
push
stos
ss
mov
cmp
stos
jo
mov
jno
shl
xchg
dec
fstpt
in
in
pop
adc
aam
cmp
adc
push
and
in
sub
adc
push
icebp
inc
adc
scas
cmp
testb
dec
xor
or
std
jne
push
fcoml
mov
arpl
stc
inc
jb
arpl
push
aad
enter
dec
test
mov
pop
mov
imul
cs
fidivs
push
shr
xchg
and
adc
iret
xor
add
or
mov
mov
pop
and
and
mov
stos
add
adc
insb
insl
add
push
inc
jle
adc
mov
insl
mov
mov
mov
mov
dec
js
lcall
imul
in
pushf
ds
mov
pop
imul
sbb
dec
test
loopne
xchg
stos
insb
mov
ret
addr16
add
notl
cmpsb
pop
push
ret
pop
jge
out
xchg
add
in
mov
mov
sbb
inc
pop
add
xchg
dec
arpl
popa
scas
dec
gs
cli
cwtl
add
push
mov
pop
dec
aam
push
inc
test
mov
movntq
hlt
lcall
imul
push
clc
aam
andl
mov
xor
xor
mov
and
dec
mov
shll
jb
or
lcall
loope
mov
push
xchg
lea
sub
adc
mov
or
ja
dec
popl
pop
divb
jnp
and
push
outsb
int3
in
xchg
mov
inc
movsb
ffreep
or
in
testl
hlt
ficoms
add
adc
negb
mov
pop
lea
and
aad
out
mov
movsl
pop
idiv
jmp
mov
xchg
mov
mov
or
pcmpgtb
sub
xchg
or
and
loop
pusha
pcmpeqw
lods
mov
mov
fs
mov
outsb
iret
loopne
shll
mov
cmpsb
jae
out
or
push
or
clc
dec
notb
mov
cmp
jecxz
iret
pop
sbbb
bound
and
imul
dec
nop
push
pop
mov
adc
enter
ror
mov
push
fs
jne
sub
clc
mov
dec
and
fildll
lock
or
dec
and
jp
inc
xor
push
or
adcb
xchg
aas
adc
popa
or
mov
sub
sub
jp
pop
mov
sub
pop
lcallw
sbb
push
push
inc
jp
dec
lea
inc
test
repnz
mov
cli
dec
and
pop
lds
jnp
insl
in
cwtl
lret
jl
xlat
popf
imulb
std
insb
xor
dec
out
popf
adc
mov
daa
stos
jl
iret
jmp
mov
mov
leave
jne
pop
insb
sti
imul
and
pop
jbe
fmull
mov
xchg
lret
daa
lea
enter
mov
sub
and
sub
in
stos
push
xchg
adc
xchg
push
leave
mov
add
cmp
testl
cli
shrl
das
or
pop
imul
jge
sbb
fisubrs
adc
xor
dec
mov
mov
pop
loopne
fbld
aad
pop
mov
xor
repnz
mov
sub
pop
nop
popf
fildl
xchg
int3
dec
cmp
lret
push
repnz
imul
cmp
test
mov
int3
test
inc
in
scas
loop
fs
std
mov
fwait
fs
or
sub
xor
bound
mov
mov
mov
icebp
sarl
pop
incb
fisubs
jmp
or
pop
fadds
fisttps
aas
xor
js
mov
testl
xor
sbb
pop
es
jnp
scas
ja
xchg
dec
and
pop
or
push
pop
sahf
inc
pop
dec
repz
and
lods
lret
push
fs
fsubs
lds
orb
movsb
sbb
cmp
adc
repz
rorb
mov
jmp
adc
jmp
jb
fistpl
rcr
push
stos
inc
popf
or
lret
xor
cld
inc
insl
jecxz
loopne
sub
dec
inc
adc
or
dec
cmpsb
shr
inc
loope
cmpsb
sbb
cmp
enter
int3
leave
adc
mov
xchg
daa
int3
movsl
jg
ja
xor
jmp
hlt
cmp
insb
jmp
loopne
xlat
sbb
dec
popa
and
adc
adc
push
stc
mov
pop
push
cmp
lods
mov
adc
pop
cmp
mov
or
cmc
add
je
int
mov
cwtl
sub
sbb
xchg
pshufw
stos
mov
push
jns
test
jno
dec
dec
out
shr
sbb
mov
mov
dec
sbb
inc
cmp
movsb
pop
xchg
lret
popf
jne
push
shll
and
insb
leave
lea
test
sbb
out
dec
movsl
data16
rorl
stc
add
mov
pop
and
cltd
ret
sub
mov
mov
push
hlt
xchg
out
in
push
stc
sti
sub
sub
fisubl
insb
jb
mov
pop
mov
sbb
ficompl
mov
mov
out
mov
scas
pop
xor
jge
push
dec
fbld
fstpl
addr16
ljmp
pusha
lock
pusha
pop
out
mov
ljmp
sub
jle
arpl
mov
mov
pop
push
push
inc
inc
in
sahf
or
sub
or
inc
mov
test
adc
add
int3
addr16
xchg
fdivs
lcall
bound
jecxz,pt
in
pop
jge
cwtl
cld
inc
or
mov
adc
mov
in
out
lds
mov
xchg
xor
movsl
ljmp
push
inc
ror
in
xchg
inc
in
mov
sbb
pop
or
mov
fsubrl
fsubrs
sbb
ds
dec
icebp
pusha
and
adc
pop
mov
inc
cmpl
push
stos
sbb
mov
push
in
sarl
pusha
lcall
lds
add
scas
dec
imul
and
jl
outsl
je
ret
fisubl
pop
xchg
fmuls
dec
insb
mov
dec
jns
scas
sub
aaa
adc
pop
aas
push
mov
jae
push
jae
mov
or
fdivrs
shlb
adc
pop
sbb
mov
push
fisttps
jle
jmp
pop
sbb
cwtl
cmc
scas
jb
scas
aas
lahf
xchg
mov
add
out
cmp
das
std
int3
xor
pusha
or
sub
jns
push
and
push
xor
setl
fstpt
mov
inc
pop
and
cmp
mov
inc
fxch
popf
lret
dec
sub
xor
mov
bound
rcr
xor
inc
cmpsl
cmp
movhps
les
jg
scas
sub
cmp
inc
fsts
xor
loop
inc
cmp
aaa
lahf
in
inc
or
xlat
icebp
repnz
scas
imul
mov
sbb
in
xchg
clc
aaa
cmpsb
mov
fisubrs
gs
insl
jbe
jp
pop
fisubs
dec
push
test
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
dec
test
invd
add
shld
aas
mov
shlb
test
cli
in
cmp
loopne
mov
xchg
jnp
call
mov
les
or
mov
test
cmp
xchg
sbb
xlat
xor
std
pause
test
pop
gs
js
inc
adc
icebp
xchg
daa
push
rcrl
int3
call
xchg
das
test
inc
repz
repz
pushf
test
hlt
mov
mov
dec
push
dec
mov
dec
push
call
pop
sbb
shlw
das
mov
movsb
or
pcmpgtd
lea
dec
adc
in
inc
das
sub
push
adc
push
xchg
movsl
inc
rcll
cmp
mov
aaa
test
pop
lds
inc
jne
ljmp
and
mov
pop
movsb
das
mov
adc
mov
jge
jo
hlt
xor
jmp
jg
int
xchg
outsb
repnz
fxch
orl
xchg
lea
mov
out
sub
push
subb
in
movsb
das
and
fwait
repz
jg
fisubrl
push
sub
jbe
push
jg
das
enter
jbe
add
push
push
imul
or
push
rorb
stos
je
cmpsl
call
push
pop
push
ret
push
out
movsl
mov
sub
es
mov
adc
mov
outsl
test
inc
xchg
imul
ds
iret
dec
movsl
imul
pop
fbstp
sbb
cltd
and
lret
push
fistps
loopne
iret
hlt
fidivl
out
mov
inc
inc
mov
jg
adc
mov
ja
inc
cmpb
repnz
sbb
stos
aas
mov
out
mov
cmp
sub
sbb
cltd
repz
pop
cmp
mov
mov
cmpsl
xor
and
jbe
inc
dec
add
aas
in
sti
in
insl
cmpsb
rep
popf
repnz
adc
add
pminub
in
lret
push
jno
xlat
cmpsl
push
mov
int3
lret
xor
sbb
add
adc
inc
mov
xor
adc
jl
jecxz
sub
rolb
sub
fs
jbe
mov
pop
pop
mov
fcmovnu
sbb
cmpl
add
pop
rorb
movsb
cmp
subl
mov
test
in
rclb
sub
sub
je
mov
xor
push
cmc
push
popf
out
arpl
push
test
dec
dec
test
insl
or
cmp
stos
lcall
test
loope
vmwrite
orb
cmp
mov
or
mov
movsl
push
pop
and
pop
mov
idivb
repz
pushf
sub
sbb
sti
jl
sub
std
lods
stos
pop
fmulp
mov
push
jbe
subb
cld
pop
push
sbb
mov
out
push
cltd
dec
xchg
cmp
add
mov
or
adc
pop
xchg
ret
lods
shrb
lret
fnstenv
xor
arpl
popa
cmpsl
popf
pop
aaa
dec
jmp
sub
cmp
pop
jns
sbb
add
inc
shll
scas
xor
ror
imul
xchg
cmp
lcall
sub
pop
orb
xlat
inc
xor
mov
lret
popf
sahf
movl
mov
imul
mov
aam
inc
notb
std
inc
ret
stos
leave
cmpl
sbb
cmp
scas
scas
mov
dec
out
daa
xlat
ljmp
adc
sbb
mov
lock
mov
xchg
lahf
mov
mov
ss
stos
mov
rcrb
jle
ja
pop
pusha
push
shll
mov
in
push
mov
cmpsl
adc
mov
add
fadds
pop
not
sbb
cltd
xor
mov
cltd
xor
mov
outsb
inc
outsl
pop
and
popl
and
jg
lret
sahf
outsl
push
aad
movsb
xor
sbb
sub
push
aad
mov
pop
fsub
sbb
in
test
adc
mov
call
sub
and
scas
std
adc
sub
mov
enter
mov
push
imul
push
scas
pop
adc
pop
lahf
out
xchg
mov
in
subb
arpl
repnz
call
out
adc
into
mov
jae
push
cltd
insb
fwait
aam
mov
pushf
addr16
sbb
pop
cmp
mov
sub
pop
adc
sub
popf
adc
leave
xor
test
lret
fdivrs
mov
mov
cmp
push
dec
lods
cli
cmp
jno
mov
adc
shll
adc
out
xchg
xchg
pop
adc
sbb
xor
std
iret
pop
nop
push
mov
sahf
outsl
and
fisubs
movsb
xchg
insl
in
pop
ret
push
lods
leave
adc
imul
and
in
ljmp
and
push
orl
popf
and
setae
ret
jb
push
dec
out
pop
in
js
jae
test
sahf
mov
movsl
or
popa
lock
daa
inc
jno
je
mov
divb
push
pusha
outsb
dec
add
aaa
inc
movsb
pop
in
cmpsb
shrl
dec
sbb
adc
out
imul
rcr
jecxz
push
lret
jo
rol
inc
add
test
cmpsl
outsb
mov
push
sbb
sbb
jb
and
pusha
test
adc
push
jmp
push
sub
cmp
js
repz
icebp
pop
leave
je
mov
fstp
inc
aad
sub
add
or
out
test
loope
inc
ds
fbstp
sbb
outsl
rol
pop
lcall
mul
pushf
in
rcr
das
pop
push
dec
mov
xchg
mov
ljmp
fstpl
push
mov
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
test
xchg
mov
add
sysexit
xchg
icebp
dec
add
add
scas
out
mov
loop
mov
xor
and
push
mov
cmpsb
pusha
add
in
push
in
cmp
pusha
sahf
jge
or
cmp
or
inc
into
inc
xchg
ret
xchg
lea
jns
cmpsb
rcll
fidivl
bound
sub
sbb
sbb
mov
stos
and
pop
adcl
dec
xor
mov
jmp
adc
movsb
fsts
jbe
aas
mov
mov
and
mov
das
lret
sub
add
enter
xor
or
das
sub
push
outsl
ficoml
mov
stc
into
mov
xchg
lahf
cltd
out
push
mov
xchg
mov
repz
outsl
sbb
cltd
add
pop
jno
sahf
lods
dec
movsb
push
js
pop
rcrb
aas
xchg
insl
lock
int3
or
pop
test
jle
repnz
dec
loop
push
xchg
jae
imul
pop
orl
test
scas
hlt
in
mov
jae
rcrb
cmp
pop
pop
inc
ror
xor
negb
aas
sub
cmpl
pop
mov
cmp
jecxz
in
loop
std
cmpl
ret
aas
out
pop
xor
icebp
sbb
test
inc
xor
add
fsubr
stc
divl
ja
mov
adc
add
je
int3
and
fcoms
int3
xorl
xchg
push
mov
add
lea
test
je
inc
cmpsb
pop
cld
lea
neg
push
imul
jmp
jne
out
iret
jno
scas
aas
xchg
movsl
mov
lea
xor
pop
cwtl
call
mov
push
fstps
test
gs
movsb
adcl
or
cmp
fdiv
sub
pop
adc
xlat
fildl
or
xchg
loop
repnz
idiv
inc
xor
add
xchg
mov
adc
ja
shrb
fxch
mov
rcrl
sarb
push
or
bound
sub
push
call
and
wbinvd
ds
xor
and
inc
out
add
stc
rolb
mov
out
arpl
dec
cmp
fidivrl
cld
je
subl
mov
cmpb
xor
shlb
add
cmpsl
inc
dec
gs
ss
outsb
push
and
add
lret
out
xchg
mov
sbbl
dec
pop
insl
push
sbb
aas
mov
and
xor
jo
xor
stos
pop
sub
arpl
or
fcompl
pushf
insl
dec
mov
sub
aas
sub
pushf
dec
popf
popa
mov
pop
mov
xor
lds
mov
pop
out
xchg
stos
hlt
mov
mov
pop
mov
or
iret
std
outsb
jae
loop
popa
fwait
xorl
pop
mov
cmp
sub
in
fstpt
or
cmc
lds
lea
cltd
mov
inc
sbb
test
mov
push
mov
or
cmp
rcl
push
les
jmp
insl
das
xchg
ffree
jmp
mov
nop
out
test
cmc
arpl
jge
notl
jl
mov
sbb
mov
sub
pop
jl
lods
mov
lods
dec
in
je
or
and
leave
inc
xor
shrb
pop
add
in
jb
insb
lea
hlt
mov
data16
out
icebp
adc
add
out
cmp
push
add
sub
daa
iret
addr16
in
mov
sub
das
out
popa
cmpsl
pop
adc
mov
loope
ds
sti
fisttps
lret
flds
jp
cmp
cmp
pop
loop
jl
xor
push
fildll
idivb
mov
in
xor
and
stos
js
ficoml
packssdw
xor
outsb
addr16
cmpsb
cmp
nop
push
mov
lods
mov
push
shl
push
cwtl
mov
fs
es
jo
dec
xlat
push
in
cmpsb
out
push
fstpt
pop
jge
loopne
cmp
mov
mov
mov
mov
xchg
inc
sbb
inc
ljmp
push
mov
sbb
jo
cli
fdivrl
inc
mov
adc
fdivs
jp
pop
aaa
mov
cmp
in
lahf
lcall
dec
call
out
push
jbe
add
add
sub
mov
xchg
leave
lret
addr16
xchg
pop
xchg
sbb
adc
in
pop
jns
pop
in
ffreep
loope
sub
out
xor
dec
adc
mov
loop
gs
pop
and
or
loope
push
xchg
pop
mov
dec
imul
es
mov
mov
into
mov
in
rolb
pop
pop
shl
jle
out
nop
dec
mov
outsl
data16
dec
sub
or
fdivrs
pop
rcll
sbb
int3
in
cmp
or
xor
pop
test
adc
mov
and
stos
sub
mov
sbb
clc
pop
out
mov
pop
divb
or
inc
cmpsb
push
jecxz
int3
pop
outsl
jl
aas
enter
dec
int3
inc
je
aaa
push
dec
pop
lds
cs
xchg
dec
std
mov
movsb
mov
or
lock
mov
shll
jne
mov
insl
pop
or
jp
shr
jl
mov
ljmp
push
orb
xor
fiadds
xchg
test
lods
iret
addr16
shrl
push
push
add
xchg
push
aas
or
arpl
fwait
int
aas
in
ret
and
test
pop
fdivs
push
insl
mov
jge
cmc
pusha
push
mov
sbb
adc
mov
push
outsb
std
jo
fwait
jae
dec
cmp
outsl
fists
adc
and
int
out
lret
popl
jno
insl
ss
sub
inc
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
popa
cmp
or
jnp
loopne
fdiv
xor
jns
shll
cmp
push
push
in
punpckhwd
sbb
aam
icebp
jmp
sarl
xor
pop
xchg
xor
sub
jge
jl
jecxz
mov
andb
inc
jb
mov
mov
sbb
popa
hlt
imul
movsb
xor
dec
cmp
divb
cmc
ficoms
jne
in
and
scas
mov
mov
sbb
or
popa
xor
daa
jmp
out
xor
sti
add
pop
xor
sar
jbe
pushl
es
mov
mul
fcmove
inc
and
fldl
mov
addr16
cmp
inc
sub
stos
or
andb
add
mov
into
inc
or
sub
in
outsl
test
or
and
jge
push
adc
enter
cmp
cmp
jne
xor
push
popfw
fsubs
cmpl
cmpsb
xlat
mov
xor
fildll
pusha
iret
push
inc
repnz
jnp
xchg
jl
lahf
sbb
out
mov
addl
loope
cmp
jo
pop
jp
push
sbb
jl
or
and
popf
push
jnp
int
ret
push
fnstcw
scas
out
ss
inc
rcll
mov
aam
ret
pop
lret
add
std
gs
imul
push
scas
xlat
fcmovnb
mov
lcall
clc
das
jns
stos
call
mov
arpl
shlb
mov
inc
in
stc
mov
lods
movsl
outsb
inc
std
push
or
xor
sub
or
pop
repz
push
int
mov
inc
bound
jae
dec
repz
sbb
push
cli
mov
xor
sahf
mov
dec
push
mov
orb
mov
icebp
dec
imul
mov
jo
xchg
pop
or
jecxz
jno
cmp
mov
outsl
mov
pop
add
or
sbb
xor
es
lock
stc
adc
mull
jne
add
fisttpll
cltd
mov
in
lds
lcall
imulb
out
js
sbb
scas
pusha
test
or
cmc
jbe
inc
mov
or
or
out
mov
mov
lea
popa
mov
sbb
arpl
dec
and
call
add
testl
and
xchg
sub
sub
pop
adc
mov
repz
fldl
mov
imul
in
cwtl
stos
data16
repz
mov
xchg
pop
icebp
ds
jnp
push
push
out
repz
lds
ds
xor
or
pop
push
cwtl
push
xor
cmpsb
hlt
call
shrb
sub
sbb
push
cmp
mov
jae
lret
push
aam
sbb
cli
ficoms
sbb
jae
in
xor
or
or
push
push
test
xchg
cltd
jb
cmpsb
lods
xor
mov
push
mov
cmpsl
cmpl
insl
adc
inc
xchg
dec
test
clc
dec
mov
push
push
test
in
loope
repnz
push
bound
fidivs
stos
dec
add
jae
dec
iret
jae
add
pop
mov
sbb
hlt
cs
fstpt
push
loope
jge
add
xchg
bound
sbb
add
mov
icebp
int3
xlat
pop
mov
and
fistpl
mov
cltd
rorl
jl
adcb
lret
add
push
aaa
xchg
in
rorb
add
push
adc
mov
clc
enter
daa
jno
mov
push
xchg
nop
fwait
loope
jge
test
mov
adc
cmp
sub
test
sub
or
sbb
pop
dec
xchg
jb
test
push
popf
pop
xor
hlt
jae
cs
nop
jne
aam
pop
mov
xchg
sub
imul
ds
mov
mov
nop
mov
xor
xchg
inc
ljmp
jecxz
std
jle
lds
and
mov
es
int3
insl
pop
int3
popf
jge
test
inc
pop
loop
fdivrs
mov
stc
cmp
div
aas
insl
cmp
push
out
mov
in
arpl
jmp
in
out
sti
leave
and
cltd
sub
pop
mov
scas
mov
cmp
in
sahf
jne
jae
shlb
pop
mov
mov
push
mov
sahf
sbb
jle
js
out
mov
loopne
das
fnstcw
cltd
sahf
and
mov
cwtl
cmp
mov
push
fistpl
cmpsb
call
fst
mov
movsl
push
xchg
lret
sti
das
pop
mov
ret
int3
mov
inc
mov
ret
jecxz
out
mov
out
sbb
insl
aam
push
pushf
aas
wbinvd
out
push
ss
cmp
sub
xchg
mov
pop
pop
sub
mov
addl
or
stos
sbb
inc
test
push
in
xchg
loop
je
mov
pusha
les
addl
inc
cld
add
lret
xlat
xor
pop
sbb
enter
lcall
jmp
push
add
or
dec
push
fistl
ret
dec
loop
pop
cmp
cmp
adc
ja
call
mov
aad
jecxz
adc
imul
out
insb
xchg
mov
or
push
adc
cmp
or
sub
das
lret
add
icebp
push
cmp
ss
movsb
mov
loop
aaa
or
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
smsw
scas
das
mov
dec
add
ljmp
rorl
add
mov
mov
orl
xchg
pop
sub
mov
cmp
xor
xor
pushf
and
sti
xchg
cmpl
xor
mov
shll
lds
mov
mov
push
push
push
imul
sub
cs
ss
dec
adc
push
cwtl
daa
jl
jo
sub
and
jne
loop
push
jp
xchg
jle
sahf
fistpl
subl
insl
dec
out
push
adc
clc
repz
xchg
scas
fs
in
loopne
fidivl
ficompl
lret
add
dec
data16
cmp
add
aam
gs
hlt
lods
push
popa
cmp
out
sbb
aam
xor
xchg
adc
dec
outsl
jbe
xor
xlat
rdmsr
sti
inc
mov
jmp
aam
leave
imulb
leave
mov
pop
cmp
mov
test
push
mov
xchg
adc
or
pop
pop
cmp
sti
sbb
adc
ffree
mov
pop
cmpsb
popa
hlt
out
fwait
stos
and
and
in
mov
repz
push
mov
cmp
push
pop
sbb
mov
pushf
add
dec
in
in
jge
insb
cs
dec
mov
jns
loope
or
shrb
mov
sbbb
adc
inc
lods
into
push
jns
pushf
pop
fwait
lret
mov
xchg
rol
pop
outsb
add
addl
sub
mov
xor
outsl
pop
push
sub
xchg
test
mov
data16
rol
mov
fwait
aaa
iret
mov
jno
inc
stos
jmp
xchg
loopne
shrb
xor
jmp
xor
or
push
lea
add
loope
mul
pop
sub
add
sti
sahf
out
sbb
pop
adc
dec
or
jbe
mov
push
push
mov
jns
test
mov
ror
sar
call
inc
inc
mov
stc
push
push
popa
fmull
xchg
enter
cmp
lock
xchg
sub
push
and
cmp
fnstenv
das
mov
fisttpll
fcom
pop
les
mov
jno
jecxz
mov
pop
xchg
push
stc
mov
sub
ret
popa
sub
addr16
adc
inc
hlt
std
or
loop,pt
add
out
lea
mov
clc
push
cmp
sub
test
nop
jmp
idivl
and
sbb
shl
enter
pop
data16
enter
inc
and
jp
xor
in
lds
adc
fildll
sub
shrl
mov
shl
jne
cltd
rorl
dec
in
pop
inc
fnstcw
cmp
test
xlat
push
cmp
push
pusha
sbbl
icebp
mov
dec
ds
aam
test
ucomiss
imul
jecxz
push
testl
in
cmp
leave
fs
and
fcomps
in
pop
jae
and
mov
nop
int
pop
xor
sbb
cmp
lds
arpl
jnp
test
inc
sbb
andl
outsb
mov
cltd
into
mov
adc
or
jo
lahf
jns
test
fldz
jae
jbe
js
std
push
and
loope
fs
pop
or
jb
xor
pop
jl
shl
out
push
pop
cwtl
rolb
mov
sahf
xor
fprem1
mov
les
pop
shll
dec
aad
fimull
lds
jmp
or
icebp
repnz
push
rcrb
mov
and
iret
bound
xor
cmp
ja
or
int3
jmp
prefetch
xor
shlb
pop
fidivrl
icebp
fs
pop
push
add
adc
xchg
mov
mov
add
and
xor
shll
or
popa
ja
push
xor
sub
test
push
sub
imull
out
rcrl
loope
xor
add
loopne
icebp
cmpsl
fwait
inc
jno
dec
jecxz
adc
sub
test
fdivr
or
out
mov
adc
outsb
rcll
std
loopne
dec
jl
movsb
cwtl
xchg
inc
dec
xchg
pop
and
pop
push
fildl
xorb
fcompl
nop
push
pop
lods
inc
sbb
push
mov
fdivr
xchg
iret
push
dec
int
ljmp
inc
insb
in
sbb
in
xchg
and
pop
adcl
jno
loope
and
lds
sahf
adc
loopne
mov
adc
fidivl
test
jmp
shr
add
cmpsb
movsb
int3
sub
add
outsb
cmp
sbb
push
cmpsl
ss
ret
jg
add
dec
and
mov
sti
push
cli
sbb
fwait
jb
ret
cld
aad
inc
sbb
popa
and
xlat
and
mov
pop
push
adc
push
dec
shlb
jge
mov
sub
jo
and
nop
xchg
cmpl
mov
outsl
fsubr
sub
stos
add
call
xchg
or
xchg
mov
aam
mov
fnstsw
inc
sti
jae
int3
mov
mov
inc
stos
mov
mov
adc
sub
gs
scas
jo
xchg
push
push
push
jmp
adc
push
fcoml
inc
aad
into
add
sub
ss
in
inc
xchg
jecxz
push
test
bound
iret
outsb
movsb
and
mov
outsb
lods
and
nop
repz
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
loope
movsb
js
push
invd
add
pshufw
adc
or
lods
jne
int3
pop
inc
movsl
cmp
or
mov
push
fstps
mov
bound
mov
inc
or
xchg
mov
mov
pop
loopne
ja
or
faddp
sahf
rorb
out
mov
xlat
out
sarl
cld
mulb
inc
popf
aas
mov
les
pushf
iret
lret
sbb
add
in
mov
cmpb
mov
xor
jbe
divb
mov
idivl
mov
in
fsubs
dec
fisttps
sub
sub
scas
dec
out
call
jle
in
cwtl
xlat
movsl
pop
or
cmp
xor
jl
pop
inc
adc
cli
pop
subb
cmp
jecxz
mov
or
cmc
jle
xchg
xchg
push
in
sti
fwait
aam
cmp
sbb
dec
add
cmpsb
outsl
in
jb
bound
ret
popa
xchg
xor
sbb
inc
mov
push
das
sbb
cmp
inc
and
push
add
fisubrl
out
insb
pop
inc
out
ljmp
insb
mov
jnp
in
push
xlat
ljmp
cltd
movsb
jbe
pop
ret
aas
or
daa
das
shlb
sub
adc
sub
movsl
scas
pop
xor
fnstenv
sbb
push
lcall
mov
lods
or
loopne
add
mov
mov
fwait
movsb
in
lods
int3
mov
sub
out
idivb
dec
jno
stos
add
lods
xchg
push
mov
stos
mov
jne
stc
push
xor
fs
mov
dec
fsubp
popf
cmp
ja
mov
jbe
imul
mov
push
cmp
xchg
or
popl
and
sbb
loope
mov
int
xor
pop
dec
and
xchg
icebp
aas
stos
in
sub
pop
cmp
daa
sbb
adc
push
dec
mov
mov
test
push
sub
ljmp
test
or
movsl
lret
fiaddl
lahf
loope
jmp
shl
fs
jle
inc
pop
dec
out
dec
cmp
push
pop
push
mov
sub
mov
and
les
pop
rorb
adc
mov
cli
sbb
lret
pop
lahf
xor
xchg
dec
xor
hlt
cwtl
mov
inc
and
sarb
push
and
es
mov
fstps
pop
daa
cmp
sbb
roll
test
push
or
mov
repnz
cltd
push
in
or
pop
pop
push
decb
jo
mov
fbstp
xchg
or
loopne
mov
cmp
test
fcoml
xor
test
and
out
insl
aas
xchg
or
sar
mov
cltd
fstpt
inc
scas
sarb
dec
push
mov
dec
notl
enter
insl
sbb
jl
fwait
repnz
jnp
sbb
mov
ret
shl
fadd
dec
dec
add
ds
fcmovb
cmp
adc
dec
add
jnp
test
scas
stc
shrb
pop
mov
pmaxub
dec
push
lock
add
notl
lods
pop
gs
push
pop
fistpl
pop
lea
mov
mov
mov
push
mov
cwtl
and
nop
jl
and
dec
cmpsl
inc
inc
push
pop
fiadds
movups
iret
enter
pop
xchg
inc
xor
lods
xor
cmp
lret
fwait
pop
mov
xchg
push
imul
lret
or
sbb
push
fdivs
cli
jnp
test
push
xor
and
jge
sbb
mov
inc
lock
aaa
add
dec
fstl
add
fnstenv
cmpsb
jge
pop
and
mov
push
lret
push
push
jbe
movsb
dec
scas
test
inc
jae
cltd
mov
push
or
int
or
daa
dec
push
daa
and
lcall
jo
cmp
fs
loope
repz
xchg
rorl
or
sti
mov
and
pop
sbb
insl
xchg
and
call
mov
mov
dec
mov
imul
mov
movb
out
lret
mov
movsl
insl
or
lea
rolb
cmp
arpl
mov
dec
jnp
xchg
xchg
jmp
xor
jns
pusha
xor
dec
jmp
push
adc
sbb
jecxz
jns
sbb
mov
jmp
push
inc
pop
dec
imul
jns
push
movsb
sub
rcrb
es
cmpsl
jle
je
aad
or
lods
movsl
jbe
or
jbe
int
sbbb
in
lcall
sahf
cmp
mov
adc
iret
pop
mov
adc
push
mov
mov
or
ds
lods
xchg
std
outsb
jge
rorb
pop
jnp
and
mov
xlat
out
jg
in
lds
pusha
orb
enter
sarl
push
popa
add
stos
mov
cmp
fsubs
test
ja
xchg
push
aad
jno
xchg
jp
dec
shlb
test
xchg
scas
testl
sbb
sub
insb
xor
push
int
pop
loope
mov
mov
enter
add
mov
inc
and
and
push
aas
int3
adc
rcr
add
daa
mov
add
or
insl
jne
mov
shrb
xchg
inc
mov
push
pop
mov
lcall
cwtl
aas
cmp
movsb
aad
rclb
sahf
and
add
adc
cmp
xorb
clc
inc
popa
adc
pop
daa
jecxz
mov
out
pop
je
rcrl
stos
stos
out
data16
call
rol
push
xchg
xchg
jb
push
and
jb
bound
xor
out
jl
jecxz
in
mov
das
mov
pop
arpl
pushl
leave
jmp
sub
cmpsb
pop
sti
test
ds
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
pop
shld
invd
add
outsb
out
push
adc
xor
ret
lods
pop
and
jb
push
mov
push
jbe
in
add
cmp
sahf
cmp
iret
dec
xor
push
xchg
test
sub
inc
sahf
dec
mov
aaa
sbb
iret
fwait
iret
cmp
mov
jl
dec
hlt
daa
jae
dec
cltd
loope
lret
int
inc
push
popa
scas
jmp
popa
rolb
cmp
push
and
cld
add
mov
sbb
or
jnp
lret
dec
inc
jne
jae
sub
rcrl
push
nop
xor
mov
sbb
int
or
divl
xchg
mov
insl
ljmp
dec
int
aaa
sub
es
cld
mov
ror
xchg
push
mov
and
jg
add
stc
mov
fnstenv
mov
stos
int3
jecxz
adc
inc
nop
pop
dec
div
pop
mov
push
mov
idiv
nop
pop
out
cmp
dec
repz
or
inc
lret
pop
test
leave
test
leave
test
cmp
je
xchg
fsts
inc
push
jmp
das
outsb
jo
sbb
call
test
aam
scas
sbb
mov
cmpsb
sub
cs
jae
fwait
ret
jns
mov
imull
cmp
in
adc
aam
ja
loop
push
xor
popl
ds
jno
jmp
cmp
ret
cmp
push
lret
lahf
jp
mov
scas
sbb
xchg
mov
push
stc
pop
sub
imul
insb
lock
dec
jle
fxam
lds
push
jns
sbb
push
pop
dec
clc
cmp
cs
andl
xor
stc
into
mov
sub
push
ljmp
je
lds
dec
shll
mov
or
aam
and
jno
inc
sub
outsb
fdivs
adc
shlb
adc
jle
dec
loopne
mov
stos
out
test
rcrb
xor
adc
jge
sbb
cltd
mov
std
negl
cs
inc
add
shl
pusha
dec
xchg
push
enter
add
ds
or
in
jmp
lds
pusha
repnz
negb
in
xchg
shl
xchg
lods
dec
test
cmp
fscale
aad
cmp
push
and
lcall
mov
clc
js
outsl
mov
add
xchg
test
dec
fistps
sbb
sbb
jae
lcall
xlat
inc
fs
cmpb
cmpsl
mov
leave
push
jle
mov
push
sub
and
inc
push
inc
adc
mov
xor
lret
mov
ss
push
inc
inc
call
cld
je
cmp
xchg
push
inc
out
mov
push
sub
repz
aas
stos
adc
xlat
imul
ret
ljmp
mov
jns
dec
lds
decl
lret
in
mov
push
push
stos
dec
adc
mov
mov
popf
dec
mov
lret
fs
jmp
loope
and
inc
shl
enter
mov
inc
mov
lcall
jns
jge
cmp
jb
adc
outsl
jle
pop
adc
xchg
mov
outsb
scas
xchg
inc
rcr
out
arpl
and
fdivrl
pusha
dec
mov
rcll
pusha
or
addr16
pop
lock
lods
rcll
in
cmp
push
aad
mov
pop
stos
xor
int
cmp
jmp
sub
or
xchg
loope
mov
hlt
sbb
cmpsb
inc
add
cmp
mov
push
testl
mov
adc
push
pop
dec
jp
dec
mov
add
sbb
or
out
ds
push
imul
push
mov
jbe
pop
sbb
rcl
sub
clc
xchg
data16
or
xlat
dec
sbb
je
adc
pop
sub
cmp
lea
sbb
shlb
push
sbb
loopne
cli
lret
movsb
inc
push
loope
push
mov
mov
int
sbb
icebp
scas
mov
lret
jne
in
mov
sub
jae
fidivrl
push
mov
sbb
gs
sub
push
clc
testl
push
pop
clc
fmuls
pop
loop
adc
mov
dec
roll
mov
insb
push
lahf
ds
xlat
push
imul
addr16
js
hlt
bound
xchg
test
jns
xor
in
inc
das
testb
or
jns
jb
lods
jb
and
bound
jne
fucomp
or
mov
or
mov
inc
rorb
push
push
add
orb
test
es
stos
repz
rcr
cmc
scas
cmp
adc
dec
sbb
sub
fdivl
mov
jg
ret
pop
jge
sub
adcb
or
rorb
out
iret
pushf
pop
jne
cmp
sub
lea
or
iret
and
pop
insl
mov
push
or
mov
lock
icebp
xor
push
int
push
insl
pop
fisubrl
stc
stos
sti
sub
in
aas
mov
inc
cmpsb
in
mov
cwtl
fcmovu
inc
shll
aas
adc
lods
xchg
jnp
adc
stos
xchg
push
arpl
jae
sahf
in
ficoml
jno
push
inc
scas
outsl
in
dec
gs
test
push
xchg
pand
xor
push
pop
loopne
cs
loop
orb
daa
mov
dec
dec
pushf
xor
test
or
cli
iret
clc
mov
and
adc
je
mov
or
xlat
sub
push
enter
or
dec
jge
pop
aas
adc
push
repz
pop
in
xchg
jg
xlat
jo
movsl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
adc
les
mov
daa
les
out
push
int
mov
cld
lock
pop
stc
push
das
aaa
cltd
repnz
lock
test
call
rclb
push
addr16
xchg
and
pushw
stc
loope
sub
dec
jp
ja
lods
popa
clc
arpl
add
mov
xor
pop
call
push
clc
enter
mov
lods
xchg
mov
out
push
subb
xor
inc
jp
mov
inc
mov
pop
push
mov
ds
scas
add
push
aaa
stc
push
add
adc
jnp
mov
push
pushf
sti
cmp
xchg
shrl
aad
inc
out
jmp
xchg
cmp
and
pop
in
adc
sub
std
mov
sub
add
lods
sub
inc
test
imul
out
stos
push
divb
in
push
mov
out
jp
pmullw
pop
pusha
mov
add
es
rcll
jl
pop
lahf
inc
mov
stos
mov
push
cmp
xlat
jl
cwtl
lods
lcall
sbbl
cmc
mov
push
xor
xlat
and
cmp
sbb
fwait
addr16
push
mov
xchg
dec
out
xchg
call
pop
in
mov
xor
mov
mov
jle
mov
mov
inc
adc
mov
arpl
pop
xchg
adc
add
ret
dec
subb
cli
sub
out
pop
sbb
push
sbb
inc
fnstenv
ficoml
mov
jns
inc
test
sub
fwait
ja
std
ss
test
sbbb
lods
cmc
mov
imul
cmpsl
and
xchg
mov
clc
je
add
push
into
fbld
sahf
fbstp
cmp
sub
lds
mov
mov
add
sti
xor
sbb
dec
fstl
loopne
inc
and
mov
inc
lods
scas
and
push
lcall
mov
cli
dec
or
pop
xchg
sub
xchg
or
pop
insl
insb
jae
pop
stos
ss
mov
imul
ficoml
out
lods
neg
icebp
pop
cli
mov
mov
enter
hlt
dec
shlb
gs
mov
push
out
or
jno
insl
sbb
pushf
jns
pop
scas
pop
sub
repnz
jns
mov
xchg
into
adc
lds
iret
je
push
mov
aas
sbb
mov
xor
mov
cmp
mov
imul
sub
push
dec
lret
mov
and
pop
xor
pop
lods
mov
xchg
scas
or
sub
leave
push
cmp
test
das
movsl
inc
sti
pop
sub
pop
insb
leave
gs
movsb
xor
pushl
fs
outsl
hlt
fwait
inc
scas
jle
scas
pop
mov
mov
push
mov
mov
pop
mov
pslld
push
enter
ljmp
cmp
jae
addl
xchg
lds
jge
adc
adc
enter
xchg
arpl
jp
decl
or
ds
xor
dec
pop
mov
or
push
imull
out
rcrb
mov
mov
js
jge
xor
test
inc
jmp
int
sub
dec
lods
sbb
cltd
adc
mov
adc
mov
jg
cmp
insl
loop
sub
cmpsb
cwtl
cmp
jo
in
inc
mov
mov
dec
pop
push
or
xlat
cwtl
clc
test
gs
xchg
push
rolb
push
repz
aam
push
xor
push
outsb
pop
push
loop
jl
mov
push
pop
add
jle
repz
notl
xchg
mov
popa
mov
inc
shlb
out
popa
dec
out
ret
cmp
loope
das
jo
mov
fildl
xchg
stos
in
jo
jae
pushl
push
sub
or
icebp
mov
inc
cmp
dec
xor
orl
lods
ret
sete
sbb
jne
outsl
ret
movsl
in
mov
mov
fdivl
adc
outsl
cwtl
bound
mov
fcom
jp
pop
pop
xorb
xchg
or
mov
shrb
fs
mov
in
mov
inc
in
popf
mov
mov
pop
jg
adc
mov
or
daa
shll
hlt
or
sbb
push
jl
arpl
xorl
test
lcall
std
arpl
push
loopne
insb
mov
or
jns
fidivrs
adc
dec
and
xchg
sbb
mov
stos
shrl
movsb
shll
jle
enter
daa
out
add
pop
push
rorl
movsb
bound
lds
sbb
lcall
mov
mov
inc
loopne
sub
out
xor
out
xchg
rclb
arpl
imul
jle
jl
pusha
data16
loope
sbb
gs
mov
stos
jbe
xchg
loop
mov
inc
lock
outsl
addr16
mov
std
dec
gs
xchg
das
out
cmp
jne
pushf
nop
cmp
es
dec
out
sub
stos
jno
lock
cmc
pop
insb
lahf
adcb
sub
lret
repnz
mov
push
dec
push
cmp
insb
sub
xor
add
xor
popf
arpl
cmpsl
push
mov
stc
mov
jg
lahf
dec
add
and
fistpl
shl
imul
xchg
leave
dec
fwait
out
mov
lahf
repz
mov
repnz
movsl
mov
ror
movsb
sahf
xchg
mov
pop
pop
mov
mov
mov
stos
mov
xchg
or
pop
outsl
mov
add
dec
pushf
rcrb
mov
shll
jmp
mov
jle
jp
sub
xor
xchg
xchg
mov
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
in
add
invd
add
punpcklwd
mov
jae
pop
mov
dec
hlt
out
jns
cmpsb
xchg
sahf
popl
xchg
jne
cmp
jge
mov
or
xchg
fmul
arpl
addr16
mov
mov
push
adc
lds
cmc
xor
add
jp
adc
mov
jbe
cmp
xor
imul
test
out
test
adc
mov
jo
and
loope
out
jnp
ljmp
push
mov
cmp
mov
xchg
cmp
popf
out
push
mulb
pop
scas
add
push
arpl
call
js
loop
mov
out
daa
sahf
sbb
mov
xchg
out
and
mov
or
mov
jns
iret
leave
in
sub
pushf
add
sbb
mov
xchg
imul
mov
push
repz
out
pop
push
jp
fwait
push
jl
sub
lcall
test
pop
dec
push
sbb
notb
xchg
dec
xchg
inc
rcr
ds
ds
mov
jmp
sahf
testb
sbb
dec
cmpsl
shlb
mov
fcmovbe
ja,pn
ficoms
iretw
dec
sub
pop
xor
mov
fisttpl
or
xorb
xchg
negb
push
mov
xor
jmp
adc
pop
mov
sahf
xor
cs
das
notl
jle
pop
add
fdivr
mov
lret
mov
out
mov
inc
jp
xchg
fcmove
add
in
cmp
xor
into
xchg
dec
fbstp
fidivl
xchg
xor
or
push
cli
and
nop
mov
push
das
xchg
fidivrl
rcrb
in
insb
push
int3
add
test
pop
shll
hlt
lahf
lods
jne
ret
jge
imul
dec
xchg
cmp
nop
into
dec
out
rep
mov
and
in
das
mov
fsts
push
adc
fbstp
sarb
les
out
test
inc
addr16
sbb
jne
fildl
popf
repz
or
out
adc
jmp
mov
fmul
add
xchg
xor
stos
mov
into
jne
mov
in
sahf
fisubl
psrlw
cli
cmp
aam
sub
pop
jno
jb
jge
mov
mov
mov
mov
jb
rcrb
in
xchg
mov
add
mov
lret
mov
cmp
loope
insb
mov
mov
and
xor
test
jne
out
pop
loope,pt
mov
popa
sub
pop
dec
and
psrld
xchg
out
sub
mov
lods
jno
pusha
sbb
push
adc
repnz
push
mov
and
popf
das
pop
sbb
lea
jnp
push
pop
cmp
inc
cmp
inc
jae
mov
out
inc
jmp
int3
sub
add
cld
push
pop
jae
mov
rorb
pushf
add
dec
mov
les
aas
repz
mov
and
into
mov
or
std
sub
xor
or
nop
inc
bound
mov
sbb
pop
repnz
cmpsb
enter
cmp
mov
fwait
insb
ss
push
jb
sub
les
gs
xchg
push
cmp
fstpt
pop
fisubrl
test
subb
movsl
pop
sub
aad
pop
dec
mov
stos
sbb
cmpsb
call
adc
out
shll
scas
movsb
stc
push
loopne
lcall
adc
jp
cmp
jp
lea
mov
ret
push
dec
push
xor
jmp
stos
pushf
aaa
call
mov
xchg
push
bound
faddl
jmp
xchg
mov
cmc
aaa
or
sub
xchg
es
adc
mov
push
xor
sbb
mov
daa
and
sti
cld
shll
rcrl
push
or
ret
pop
fsubp
insb
in
dec
clc
jae
scas
xor
xchg
pop
sub
mov
sub
or
fimuls
push
daa
xchg
xchg
cmpsb
cltd
sub
orl
mov
mov
mov
hlt
push
cmpsl
or
push
aas
jmp
and
mov
ljmp
adc
mov
out
adc
mov
xchg
cmp
jno
push
sub
push
mov
lea
scas
lea
out
in
xchg
jno
xor
xchg
mov
sarl
je
adc
xlat
cmpsl
or
and
fwait
or
sbb
and
xchg
insl
adc
leave
xchg
jnp
and
decb
xchg
xor
cmpsl
xchg
and
cwtl
xor
cltd
es
imul
in
repnz
stos
fwait
add
stc
cmpl
mov
lea
movsb
sbb
je
adc
cmp
shl
mov
movl
pop
imul
and
jbe
fwait
loop
das
repnz
aas
cmp
mov
lahf
add
push
or
xor
pop
sub
test
in
fnsave
inc
mov
loop
cmpsb
fidivrs
loope
movsl
mov
pushf
mov
jecxz
sub
xor
push
jg
dec
fwait
idivb
mov
xchg
stos
imul
cmp
or
out
dec
addr16
mov
arpl
stc
out
imul
into
fs
jle
mov
cmpsb
popf
movsb
rcrb
ja
dec
fsts
in
leave
ss
aam
test
shrl
and
jne
cmpsl
mov
cmpsb
xchg
pop
jno
xor
and
cmp
and
mov
mov
mov
loope
imul
mov
push
mov
shlb
push
mov
xchg
lods
cmp
cwtl
or
and
mov
movsb
clc
inc
lea
pop
and
push
mov
bound
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
jbe
and
and
jg
inc
sub
ss
fcomps
shlb
jp
or
push
mov
test
movsb
icebp
int
stos
mov
jne
mov
push
xchg
xorb
push
xor
out
lcall
daa
push
mov
inc
adc
xchg
int3
bound
sbb
lock
les
inc
pusha
pop
lret
nop
cltd
mov
nop
pushf
or
sub
xchg
adc
mov
icebp
aad
fimull
lods
ss
pop
pop
sbb
scas
push
add
ret
xchg
adc
lds
pusha
lods
mov
fwait
pop
leave
fsubl
sbb
pop
add
sbb
xchg
fcom
arpl
pop
mov
xchg
shl
cld
lods
sub
add
das
cmp
and
xchg
test
inc
push
pushf
mov
enter
imul
cmp
insb
cmp
int3
movsb
xchg
inc
mov
test
out
inc
mov
inc
pop
adc
xchg
mov
fwait
xor
mov
in
cmp
and
adc
jmp
xchg
scas
popa
mov
clc
mov
jbe
mov
xor
shl
inc
sub
sbbl
xor
mov
shlb
lds
sbb
stos
adc
movsb
out
jae
shrl
inc
adc
push
push
add
in
out
dec
mov
push
lahf
inc
arpl
dec
lcall
popa
ret
xor
sub
jne
push
outsl
fnstsw
dec
insl
cmc
dec
jmp
data16
loopne
in
imulb
pusha
mov
dec
adc
adc
lds
aam
mov
push
filds
xchg
push
sub
lahf
pop
outsb
sahf
fbstp
insl
cmp
cmp
mov
movl
ret
roll
insl
push
loope
mov
les
cmp
call
cmp
mov
push
mov
and
dec
outsl
cmc
lods
sub
rcrl
hlt
jne
leave
lsl
add
out
subl
jb
xchg
fwait
cmpsb
fwait
clc
lock
add
inc
repnz
xchg
stc
sbb
inc
jl
cmc
mov
dec
push
pop
xor
mov
aas
int
dec
movsb
mov
lahf
jl
enter
and
lods
out
aas
popa
popf
sbb
into
adc
mov
hlt
rcrl
jmp
fcmovnu
mov
sarl
aad
imul
mov
test
xchg
sub
inc
adc
mov
cmp
cmp
mov
sub
jnp
dec
or
cltd
repnz
dec
adc
jmp
scas
xor
ja
int3
call
add
imull
mov
pushf
adc
lock
push
push
xchg
xchg
jmp
sub
popf
mov
enter
call
mov
or
mov
mov
sub
enter
out
aaa
sahf
cwtl
xchg
icebp
pop
cmp
mov
hlt
jns
mov
add
fsub
jns
cltd
les
movsl
adc
testb
lods
popf
dec
mull
sub
je
xor
xchg
js
jl
cmp
push
fadds
sbb
lods
es
pop
push
lds
mov
pop
lret
cmp
cld
movsl
loop
imulb
pushf
int
repz
push
push
sbb
fxch
out
mov
cs
push
inc
sti
mov
pop
push
push
mov
jb
cmp
mov
mov
ret
les
mov
cltd
sub
or
loop
sarb
mov
ret
sub
push
dec
lret
push
leave
bound
icebp
inc
mov
and
inc
and
or
xorl
sub
cmc
and
inc
sbb
or
lcall
sbb
xor
movl
xchg
nop
mov
test
jmp
add
in
sub
jge
mov
pop
fisttps
cmp
mov
inc
xchg
mov
dec
lods
jg
pop
mul
jo
fildll
mov
ljmp
shlb
xchg
into
pusha
cmp
enter
shrb
bound
xchg
xorl
jnp
int3
lods
fs
xlat
outsb
xor
mov
and
movl
xor
and
inc
movsl
stos
aaa
movsb
imul
pop
filds
jl
and
xchg
sahf
repnz
mov
sahf
cs
pop
mov
add
jg
add
nop
and
scas
xor
cmp
xor
rcrl
es
mov
adc
xlat
shl
or
jns
xor
mov
ret
sbb
dec
inc
and
imul
dec
test
scas
cli
and
jb
test
xchg
das
ret
and
and
xchg
sbb
aam
lods
std
jbe
ret
pop
inc
lret
rolb
jmp
add
lahf
dec
dec
mov
int3
fadds
pop
ja
test
iret
pop
dec
push
push
jecxz
aad
inc
cmp
or
sahf
movsb
outsl
das
mov
adc
lret
adc
testl
xchg
cmc
sbb
jnp
push
push
in
cmp
mull
mov
stc
dec
and
aad
dec
leave
insb
aad
int
cmp
inc
repz
jge
js
push
scas
imul
test
cmpl
inc
cli
ss
inc
sti
push
mov
mov
adc
mov
pop
adc
stos
push
aaa
pop
push
fdivs
repnz
pop
xchg
mov
ljmp
rorl
out
pop
push
ljmp
and
in
addr16
push
push
xor
arpl
cli
push
add
rorl
in
mov
push
mov
out
out
or
mov
js
jno
xlat
call
mov
fld
mov
test
inc
sub
mov
inc
push
mov
mov
inc
adc
data16
les
pop
rcl
mov
scas
ss
test
shl
or
aaa
daa
adc
inc
loope
adc
fldt
pop
xor
xchg
aaa
nop
xor
dec
out
aad
jmp
into
shr
in
daa
mov
adc
cmpsl
mov
fsubrs
imul
sbb
mov
lea
sahf
sti
dec
fiaddl
pop
in
jl
call
out
in
add
push
xchg
fdivl
pop
nop
mov
pop
push
mov
jae
xor
sub
in
mov
lds
push
imul
std
adc
jo
push
mov
push
movsb
and
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
mov
mov
xlat
lret
mov
ret
adc
or
mov
sub
lods
ljmp
adc
bnd
into
imul
dec
xlat
inc
jbe
xor
repz
jbe
pusha
pop
loopne
les
scas
imull
mov
cltd
ljmp
jg
rcr
cs
movsbl
inc
ret
jbe
popa
xorb
xchg
cld
mov
sub
inc
roll
mov
cmp
aaa
cli
push
fsubl
or
xchg
adc
xor
dec
xor
jns
adc
adc
sbb
mov
imull
jb
pop
sbb
sti
pushf
jnp
sub
rclb
xor
xchg
or
inc
stos
lea
or
mov
out
pop
push
out
and
fstpl
loop
fdiv
cs
jae
shl
fildl
movsb
mull
cmp
jbe
cwtl
cmc
test
les
or
lods
ficomps
adc
jmp
jp
inc
push
and
sub
adc
mov
loopne
mov
or
jp
sbb
mov
push
jnp
sbb
mov
pop
adc
push
lods
mov
xchg
cmp
sub
jns
push
test
cmovo
lahf
and
dec
in
pop
jl
adc
bound
lret
pop
pop
orb
adc
jge
shr
mov
inc
dec
fisubrl
and
mov
xchg
pop
lock
jecxz
mov
jecxz
or
loope
pop
jns
dec
dec
je
lcall
xchg
cmp
or
insl
nop
out
inc
fwait
mov
xor
int3
stos
scas
pusha
mov
jg
push
pop
andb
hlt
mov
sarb
pusha
or
sbb
mov
movsl
xor
jp
pushf
mov
ja
shlb
sahf
mov
cmpsb
scas
sbb
mov
shrb
mov
jne
lods
push
xor
cmp
and
cmpsb
adc
dec
inc
mov
push
adc
je
movsl
loopne
xchg
outsb
es
jnp
js
mov
xor
mov
clc
adc
add
dec
sub
cld
in
call
fldenv
add
adcb
pusha
adc
inc
nop
or
fmull
sbb
mov
jmp
push
cld
jbe
cld
mov
add
test
call
lcall
pop
shrb
fnstenv
push
pop
roll
fstpl
add
mov
data16
mov
nop
mov
cmp
nop
xor
inc
test
add
stos
mov
fdivp
test
mov
movsb
inc
fldcw
mov
or
jge
cmp
sub
out
pop
lret
ret
inc
jne
hlt
inc
icebp
xor
jmp
sub
cmp
inc
sbb
into
jo
inc
movsl
cmpsb
or
dec
sbb
jo
cmp
inc
fsts
ret
lock
int3
fcmovb
add
stos
mov
jmp
add
push
mov
mov
and
icebp
pop
inc
add
add
add
cltd
sub
addl
int
into
pop
jne
push
jae
xchg
mov
mov
cmp
inc
std
pop
cmp
jle
and
nop
pop
pop
fs
lock
pusha
pop
test
mov
mov
mov
fsub
push
aam
repz
inc
iret
bound
jp
sbb
pop
fisttpll
shlb
outsb
lcall
enter
mov
xor
mov
insl
jae
and
push
cmc
adc
mov
and
push
pusha
xor
xchg
cmp
xchg
cmpsb
aam
inc
jne
test
jp
fdiv
lahf
push
fisttpll
add
sub
imul
aam
movl
jo
in
stos
aas
mov
insb
test
xchg
cmp
xchg
xor
sub
mov
inc
scas
xchg
dec
pop
sub
inc
xor
popf
cmp
mov
scas
add
ljmp
xchg
out
mov
inc
insb
sbb
jmp
mov
fimull
or
sub
dec
lods
repz
ficoms
jne
xchg
neg
inc
sub
xchg
pop
push
lcall
gs
xor
pop
lcall
jge
dec
pop
jmp
cwtl
jmp
sarb
dec
cmp
and
sbb
sub
movsb
push
pop
and
mov
ja
pusha
lods
lods
fcompl
adc
xor
jmp
rorl
pop
adc
ret
scas
sbb
pushf
push
dec
xor
ljmp
add
mov
jle
vaddss
mov
hlt
adc
nop
popa
pop
jne
in
loopne
jmp
jg
add
mov
sbb
push
add
push
lds
mov
push
jl
testb
mov
xor
je
fdivrl
loop
adc
dec
jo
lods
xor
mov
clc
lcall
aad
and
cs
xchg
ret
mov
cwtl
aam
mov
adc
adc
idiv
lock
sti
inc
inc
test
in
shrl
gs
pop
iret
mov
imul
jg
xlat
add
movsb
scas
adc
mov
jno
stos
imul
dec
lret
mov
jo
xchg
rcl
push
stos
and
movsb
mov
mov
xchg
mov
or
lahf
pop
or
sub
mov
jp
or
lods
xchg
mov
pop
jle
clc
les
icebp
mov
jnp
sarb
imul
test
push
jns
ss
in
inc
cmpsl
and
nop
lcall
stos
scas
mov
pop
fidivs
push
icebp
idivl
int
stos
shl
inc
test
rorb
xor
lret
ret
and
rcll
jecxz
test
mov
adc
cwtl
arpl
jnp
stos
jb
jae
cwtl
xchg
mov
mov
mov
and
inc
leave
stc
cmp
test
psubsw
cwtl
negb
lock
cmp
out
mov
aaa
mov
xchg
add
mov
inc
movsl
pop
xchg
pusha
add
mov
and
jne
mov
sub
and
enter
push
inc
icebp
cmpsl
adc
push
incl
not
inc
push
or
sub
dec
insb
ja
mov
cmp
sub
and
outsl
and
cmp
xchg
dec
cmp
cmp
fcomp
sbb
into
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
sub
pop
mov
movq
jg
dec
sbb
mov
and
insb
add
add
out
cmp
push
cmp
call
sub
clc
pop
pushf
fcompl
test
xchg
inc
jae
out
cmpsb
mov
push
in
mov
xchg
dec
je
mov
mov
mov
inc
inc
adc
dec
cmp
rorl
dec
push
es
mov
insl
push
mov
ja
push
jne
fcmovnb
mov
mov
dec
out
mov
sbb
add
push
and
jmp
mov
mov
rcl
and
imul
inc
dec
in
push
popa
mov
fnstenv
icebp
jmp
test
mov
int3
into
adc
and
push
mov
xor
xchg
mov
ss
pop
imul
stos
jecxz
jbe
pxor
imul
imul
fldl
cmp
cwtl
jbe
lret
insl
mov
rcl
repz
xchg
xor
mov
inc
aas
pop
imul
ret
push
jne
xchg
ja
cmp
xor
cli
outsb
mov
shl
pop
jg
sbb
repnz
jecxz
push
jbe
pop
in
js
movsw
das
push
pop
push
pop
mov
xlat
sarb
or
sbb
ss
mov
sub
push
and
jg
lock
fdivs
push
ret
xor
std
pop
clc
lods
xchg
or
inc
mov
cmpsb
pop
xchg
mov
nop
fbstp
adc
stos
jle
or
mov
insl
mov
fsubs
sbb
fcoms
std
mov
inc
nop
cmp
stc
js
xor
or
xchg
push
cmpl
ljmp
cmp
out
add
and
ret
movl
xchg
dec
push
mov
sarl
add
dec
fwait
test
push
into
jae
jecxz
stc
jmp
jne
and
dec
push
xchg
or
iret
jmp
push
push
test
fnstcw
jne
push
fsubrl
ljmp
hlt
inc
fnstsw
or
sub
add
push
into
mov
or
sub
lods
fstpl
lcall
add
shrl
add
out
sbb
pop
loopne
fadd
dec
mov
in
pushf
stc
pop
inc
aas
ljmp
mov
insl
pusha
cmp
mov
pop
inc
pop
out
or
push
std
pop
cmp
daa
movl
aaa
mov
xchg
pushf
push
out
es
cmp
stos
pop
inc
and
sub
mov
pop
sbb
push
xor
ret
lock
and
icebp
mov
xor
mov
test
dec
mov
lcall
sbb
xor
mov
fsubrs
jns
push
mov
pop
push
pop
mov
repnz
test
stos
and
sbb
int
ds
pandn
leave
or
and
fnstcw
js
cmp
fdivs
push
sbb
fistps
pop
jg
cmp
movsb
mov
pop
or
sub
inc
xor
push
leave
rcrl
shll
xchg
imul
rorb
pop
mov
and
or
fs
lock
cmp
bound
lds
mov
push
fidivl
fsts
or
test
cwtl
inc
rcrl
sahf
push
mov
test
es
pop
inc
push
test
push
xchg
sbb
xchg
jle
cmp
mov
lods
xchg
mov
xor
and
mov
push
xchg
adc
mov
lea
ret
push
hlt
loope
lea
sarl
jb
xor
cmp
data16
scas
leave
sbb
push
mov
add
sti
mov
in
sbb
fsubs
or
test
push
movsb
test
out
shlb
aaa
and
jmp
sti
lahf
out
in
sub
insl
fistpl
int
hlt
adc
xchg
xchg
sarb
movsb
dec
mov
jae
push
cmp
adc
and
neg
xor
inc
mov
rorb
arpl
pop
push
jns
rcrl
push
xor
mov
xchg
sbb
sub
adc
imul
int
sub
xchg
xchg
xchg
fmul
pop
sub
icebp
or
adc
cmpsl
mov
cwtl
sub
popf
dec
jg
adc
dec
movsb
xlat
movsl
mov
imul
cmc
cmc
adc
nop
int
push
aas
test
xor
add
je
sbb
lds
jecxz
nop
movsb
dec
or
popf
and
add
dec
loopne
dec
and
in
imul
mov
popf
inc
mov
js
fucomi
arpl
add
or
push
aas
aad
lds
daa
outsl
adc
out
in
out
jmp
pusha
adc
out
fadds
outsl
xchg
or
jo
jecxz
dec
cmp
pop
lret
dec
xchg
ja
imul
lcall
push
ret
pushf
adc
adc
leave
dec
sti
jns
in
lret
and
add
cmp
dec
fildll
lods
sbb
fldl
adc
xchg
leave
dec
dec
mov
stos
jnp
dec
loop
clc
adc
xor
sti
pop
pop
js
xor
xor
scas
outsl
push
sbb
xchg
or
pop
rclb
loopne
add
mov
lret
jecxz
adc
fcomip
sbb
jnp
xor
lea
aaa
push
add
mov
adc
pushl
out
sub
stos
mov
imul
pop
roll
push
sti
loop
push
enter
cmp
out
jmp
repz
out
imul
xor
jle
xor
adc
pop
push
icebp
jle
pop
outsl
mov
mov
imul
jo
sub
xchg
pop
mov
add
sbb
negl
add
sbb
push
cli
xchg
sub
sub
xor
sbb
jecxz
outsb
mov
cmp
mov
add
adc
aaa
ficoms
and
roll
aas
rcl
testl
stc
mov
insb
iret
mov
aas
ss
loope
pop
repnz
push
in
sahf
iret
pop
push
ljmp
fdivrl
adc
cmp
or
arpl
lods
lret
push
and
ret
dec
mov
jae
xchg
jmp
loop
pop
push
or
dec
dec
repz
mov
push
inc
frstor
pop
stc
orb
clc
maskmovq
testl
mov
jno
add
lcall
sbb
pop
lods
pop
adc
jmp
pop
xor
push
jmp
adc
jmp
into
add
or
mov
sbb
notl
mov
setns
xchg
sbb
ljmp
call
jecxz
mov
xor
xor
fnstenv
jns
inc
adc
lret
push
mov
jns
jge
sbb
ja
hlt
mov
arpl
into
stos
outsb
lahf
aam
xor
sti
lods
xchg
hlt
into
iret
mov
sti
pop
xor
fisttpll
out
lods
arpl
xor
and
popa
iret
std
fstpl
add
test
cmp
data16
xchg
cmp
and
test
scas
loope
lret
mov
jne
cmpsb
rcl
insb
call
or
push
mov
jle
sbb
jg
or
pop
jmp
xlat
jbe
fdivs
pop
xchg
and
fdivr
mov
pop
cmpl
jae
xchg
cmp
jmp
mov
test
fwait
rclb
pop
and
data16
sbb
xchg
fisubrl
xor
and
sub
sahf
mov
packuswb
das
push
push
or
jb
xor
rolb
push
adc
sbb
xchg
mov
push
mov
lds
jle
sub
push
test
sbb
scas
mov
xor
outsb
push
jnp
les
add
ss
inc
std
or
sbb
adc
push
inc
outsl
adc
out
jl
in
das
das
mov
negl
ljmp
aam
mov
test
gs
rorl
xchg
mov
cmp
mov
pop
movsl
inc
add
mov
ja
sub
test
in
and
mov
mov
mov
clc
je
loopne
scas
cs
cmp
fcom
std
and
cmp
lcall
dec
lock
scas
add
jbe
mov
sbb
dec
inc
call
cmp
aad
and
cmpsl
and
sahf
jge
mov
pop
xor
jo
cli
sbb
xor
xor
fwait
inc
xor
push
fmul
clc
pop
inc
adc
iret
xchg
ljmp
aam
xlat
sbb
mov
add
aad
fisttpl
xlat
pop
or
mov
adc
jle
mov
subb
cltd
mov
push
and
sub
jle
in
adc
lea
test
push
movsb
jle
ja
mov
mov
mov
mov
ss
xchg
mov
xchg
inc
in
and
and
call
xor
loope
inc
jo
push
and
and
cld
cltd
mov
mov
xor
ljmp
leave
or
rcll
pushf
out
addr16
out
aam
lcall
adc
rorl
sbb
jb
pop
mov
jno
xchg
jne
repz
sub
lods
mov
adc
lahf
mov
adc
jns
sub
push
pop
call
xchg
dec
sbb
dec
push
and
into
cld
sub
test
xchg
clc
push
int3
xchg
sub
ja
pop
lret
mov
pop
arpl
mov
adc
push
aas
sahf
adc
outsl
mov
sub
adc
push
adc
pushw
test
or
bound
pop
les
inc
xor
andb
stc
push
aaa
cmp
je
mov
xor
push
fcom
cld
mov
loope
sarb
insl
xor
fstpt
pop
mov
nop
xchg
dec
pop
bound
fdivl
dec
push
cltd
add
adcb
mov
or
pop
add
inc
dec
cmpb
sbb
rol
popa
popa
sarl
mov
outsb
mov
xchg
cmp
std
mov
lea
jge
xchg
bound
mov
movsl
dec
dec
xor
lret
xor
sbb
outsl
lahf
and
inc
cmp
and
or
outsb
mov
or
aas
stos
imul
das
xor
add
test
xor
mov
jle
adc
inc
sub
sbb
inc
xchg
jle
mov
jns
or
cs
shlb
gs
or
outsb
int
cmp
nop
out
out
push
dec
xchg
adc
push
lock
into
in
inc
jae
rorl
in
xchg
pop
std
jge
ret
test
mov
mov
scas
cmp
repnz
push
out
adc
movsl
push
inc
cmp
push
aad
inc
decl
mov
aam
or
dec
imul
xchg
xchg
and
dec
shlb
xor
mov
sahf
movsb
stos
sti
cwtl
xor
mov
adc
add
outsl
inc
out
xor
xor
movsb
cmp
clc
or
sub
add
scas
dec
daa
mov
sbbb
icebp
or
test
int3
fsubrp
stos
mov
cmpsl
dec
jns
out
scas
mov
stos
jb
and
inc
or
ror
lcall
lds
dec
mov
stos
fwait
jle
xchg
xchg
in
sbb
hlt
insl
sub
xor
jmp
xchg
out
dec
mov
mov
lea
mov
mov
mov
test
jo
out
sbb
jge
cmp
inc
cmp
add
push
push
pop
daa
enter
fldl
call
lock
fldt
mov
out
addr16
insl
dec
xchg
push
das
call
jbe
jl
mov
std
xor
xor
or
xchg
aaa
push
pop
and
xchg
into
push
xor
stos
xchg
std
jo
iret
fildl
push
sbb
xchg
ret
sbb
lret
mov
sub
or
inc
cmp
push
xor
loop
dec
pop
out
icebp
pop
les
pusha
test
push
xor
cmc
xor
push
imulb
imul
clc
adc
dec
stos
ss
mov
aas
cs
sbb
mov
push
sahf
add
std
push
clc
adc
push
mov
inc
stc
aam
mov
or
or
lcall
fidivrs
test
pop
adc
scas
fidivrs
sub
fpatan
movsl
movsl
cmp
jbe
in
lods
aas
lahf
sahf
dec
ss
inc
xchg
push
es
mov
inc
aam
in
ja
int3
ja
mov
or
mov
dec
mov
add
decl
inc
mov
gs
mov
push
or
divl
nop
leave
ljmp
nop
cmp
ret
and
bound
cmp
decl
orl
cltd
mov
insb
ljmp
popf
pop
shrb
dec
jmp
imul
scas
xor
xor
xor
adc
xlat
inc
xchg
lret
test
je
shrb
and
jns
mov
mov
sub
inc
shll
je
lret
pop
mov
pop
jmp
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
test
dec
daa
in
adc
and
xlat
pop
jns
aaa
imul
jbe
and
movl
dec
cmp
jg
xchg
xchg
pop
mov
push
cmp
xor
negl
out
dec
mov
jl
pusha
mov
mov
cmp
fadds
scas
mov
and
js
cli
in
in
cmp
sti
test
jle
mov
call
inc
cli
subl
pop
xchg
inc
out
cmp
cltd
jge
add
push
inc
loop
aaa
lea
addb
mov
jbe
fisubrs
ds
andb
cmp
fwait
rcr
call
das
scas
xchg
mov
std
and
lahf
inc
mov
testb
icebp
iret
mov
into
arpl
cwtl
jnp
icebp
mov
adc
outsl
leave
and
mov
movsb
adc
call
pop
cmc
cltd
xor
addl
fcomip
jmp
jae
in
xchg
adc
outsb
or
jns
stos
mov
pop
hlt
ret
cmc
lods
fsubrs
out
mull
and
xchg
xor
or
cld
std
shl
push
jb
inc
cs
adc
in
pop
mov
adc
outsb
add
mov
cwtl
mov
aas
mov
mov
clc
out
popa
shrb
int3
mov
fsubrl
xchg
in
addb
cltd
xlat
dec
pop
mov
and
xchg
adc
inc
lret
movsb
mov
call
jb
inc
movsb
jb
lods
or
push
out
gs
push
or
stos
xchg
ret
stos
faddp
out
pop
pushf
fs
mov
xchg
sbb
xor
div
movl
fnsave
popf
cltd
js
mov
dec
push
mov
imul
outsl
mov
sub
out
out
sub
faddp
dec
mov
lret
stc
sub
mov
and
ret
jno
sbb
sub
and
cmp
daa
sub
sbb
clc
leave
mov
inc
shrl
subb
dec
adc
shll
icebp
rcll
inc
xlat
adc
mov
cmp
test
dec
sarl
cld
sbb
out
sbb
cmp
push
int
scas
jge
shrb
aam
neg
cmp
loope
xchg
outsb
mov
push
hlt
jg
sbb
xor
adc
cmovnp
add
jecxz
in
jae
mov
repz
xor
aas
test
mov
xchg
inc
nop
out
jb
or
jo
pop
movsb
cld
xchg
xchg
mov
dec
sahf
xchg
shll
repz
push
int
cmp
mov
jmp
scas
jmp
popl
ja
loop
adc
gs
ljmp
sbb
outsb
ror
test
std
jmp
cmpsb
xchg
cmp
adc
adc
add
pop
loop
rclb
ss
int3
je
addb
scas
sub
int
pop
mov
mov
xchg
aas
adc
mov
sbbb
loop
imul
mov
fxch
inc
jne
dec
add
mov
xlat
dec
mov
fmul
mov
xlat
mov
mov
int3
xor
popa
jns
insb
cmc
jo
dec
xor
mov
inc
pop
adc
insb
loope
cli
pop
mov
inc
in
in
lahf
lock
sbb
inc
jae
pop
jmp
and
xchg
lahf
adc
sbb
imul
xor
leave
shrl
fisubs
lret
inc
mov
fiaddl
hlt
and
imul
mov
push
mov
pop
clc
ss
pusha
xchg
sbb
xchg
es
sbb
mov
push
nop
adc
fs
pop
inc
stos
js
mov
loope
lret
inc
arpl
popa
stos
jno
mov
cwtl
data16
sub
dec
test
inc
call
cmp
mov
rorb
pop
in
cmp
add
add
stc
sbb
hlt
cmp
or
outsl
sub
fldenv
aaa
outsl
pushl
pop
hlt
add
ja
ss
ror
loop
mov
rol
shlb
cmpsl
inc
leave
dec
adc
mov
fsubr
das
out
shlb
ja
lret
nop
inc
stc
movsl
test
stos
imul
in
call
es
inc
mov
jae
inc
xchg
pop
xchg
cmc
fdivr
sbb
adc
fwait
xlat
outsb
inc
mov
divb
mov
mov
rcll
les
movsl
dec
aam
testl
pop
gs
test
dec
cmp
ret
enter
cmpsb
popf
pop
jae
jae
cmp
jecxz
loopne
cmp
adc
xchg
mov
cmpsl
hlt
and
js
xor
dec
add
push
or
movsb
or
cli
sbb
sub
jb
add
xchg
cmp
and
jbe
pop
mov
fmuls
mov
xor
stc
pop
lds
push
shrb
inc
aaa
sub
sti
icebp
cmpsb
iret
lods
leave
daa
mov
cmp
add
sbb
xchg
add
adc
int
stc
in
popf
mov
xchg
aas
cwtl
push
outsb
mov
pop
cmc
mov
movsl
dec
call
dec
and
cltd
jecxz
int3
dec
mov
test
inc
ss
fnstsw
xchg
xchg
jnp
sub
lods
cwtl
mov
inc
mov
mov
pushf
push
jne
jl
pop
ror
add
leave
xchg
test
aad
fldt
mov
and
xorl
in
addl
jl
loopne
bound
testb
sbb
pop
mov
inc
ficoms
lret
pop
in
call
adc
lods
mov
ficompl
or
inc
cmp
pusha
push
push
xor
xchg
dec
and
push
or
push
ljmp
int
cmp
inc
xchg
mov
jns
dec
cltd
or
cmc
aam
sbb
popa
nop
mov
mov
xchg
cmp
mov
lcall
fsubl
xchg
jb
idivb
dec
inc
xor
xor
inc
sbb
inc
xor
mov
inc
fnsave
pop
xor
notb
xchg
jnp
jo
sbbl
push
pop
pop
mov
ret
mov
mov
cmp
sti
stos
cmpsb
dec
xchg
data16
ldmxcsr
xor
lahf
mov
leave
push
jp
or
lret
scas
or
or
adc
jnp
rcll
adc
pop
lea
ret
ds
push
jnp
cmp
sbb
hlt
icebp
xchg
lods
mov
icebp
ret
cld
cmpsl
stc
je
xor
and
ds
sub
mov
mov
repnz
mov
push
insl
lock
and
aas
outsb
mov
and
jo
adc
stc
aad
lock
add
pop
popf
mov
jae
jmp
cli
aas
enter
sub
lret
push
xor
lret
aam
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
fistpl
adc
and
movsb
xchg
sarb
clc
lcall
and
int3
jb
sbb
mov
les
jnp
mov
pop
iret
push
fidivs
test
cmp
mov
xor
xchg
jno
daa
xchg
es
jg
fimull
jg,pn
cmp
cmc
out
in
xchg
ds
into
scas
sub
mov
sti
sub
xor
add
add
stc
pop
pop
addr16
and
push
xchg
xor
or
pop
inc
enter
dec
sahf
jmp
gs
pop
push
hlt
icebp
iret
jle
inc
add
jbe
jg
sub
in
ds
pushf
xor
filds
mov
pop
pop
jbe
dec
pop
fistps
add
loopne
fadds
or
sbb
sub
xlat
sub
lods
or
cmp
xor
stc
cmp
ljmp
mov
jmp
sub
push
jle
int
mov
pop
dec
pop
or
fcompl
daa
pop
adc
fidivrl
xor
mov
mov
addr16
dec
sbb
pop
sbbb
orb
cmp
icebp
lea
cmc
xchg
repnz
mov
aas
fs
adc
xor
push
test
jnp
lds
std
test
imul
add
test
adc
fld
mov
jge
into
icebp
sub
cmp
fwait
cli
call
in
sub
rclb
jecxz
push
movsl
add
fnstsw
into
sub
xchg
jne
push
xor
push
sbb
jo
push
push
push
gs
lret
add
push
dec
cltd
enter
fdivrs
test
pop
xchg
lods
lock
das
mov
lcall
nopl
das
inc
ror
jecxz
xor
dec
notb
push
mov
dec
mov
in
orb
pop
mov
nop
inc
mov
mov
fisubrl
aas
fisubrs
lods
call
sub
imul
cmpsb
pop
negb
xchg
cmp
push
xchg
jo
rorb
clc
aad
cmpl
mov
leave
out
test
into
ds
outsb
int3
lds
out
sarb
push
es
pop
mov
mov
scas
cmpsb
shrl
negb
pusha
adc
cmp
push
xchg
pop
hlt
repz
add
fidivs
pop
mov
dec
and
mov
sete
ret
xchg
cmp
out
js
mov
pop
test
pop
xor
mov
add
jmp
mov
ficoms
out
insb
mov
into
add
mov
mov
stos
subl
rolb
push
add
xchg
fisubrs
cld
jp
add
and
xchg
inc
pusha
sub
popa
movsl
mulb
test
lea
dec
iret
jne
push
and
and
pusha
inc
lret
inc
loop
daa
mulb
sbb
in
loope
jae
add
mov
fcompp
fucom
popa
inc
pop
imul
repnz
push
scas
lret
cmc
adc
loop
jne
bnd
imul
fcomi
xchg
sarb
jcxz
cli
ljmp
jle
fbld
in
sub
fnsave
mov
adc
pop
mov
jle
push
hlt
xchg
inc
cltd
inc
pushf
adc
test
mov
cmpsl
add
dec
stc
jp
test
push
dec
mov
xchg
jl
xor
add
mull
cmp
syscall
mov
jl
adc
sti
jge
lret
ljmp
xchg
add
add
mov
mov
add
loop
sub
sahf
xor
fldl
add
aas
ja
adc
leave
aas
mov
dec
mov
jno
xlat
inc
cmp
testb
scas
xabort
and
out
insl
xor
sbb
jo
out
arpl
lahf
jp
xchg
adc
cwtl
stos
mov
into
call
data16
cld
pop
gs
pop
add
mov
and
bound
add
dec
sub
dec
pop
or
pop
adc
data16
cmpb
inc
sub
pop
das
xchg
leave
bound
jg
lock
fnstenv
daa
or
xor
xor
sbb
ja
ficoms
pop
stos
cli
leave
out
sub
aas
adc
outsb
mov
xchg
xchg
and
loop
loopne
push
into
popf
jp
rclb
xlat
mov
push
pop
les
push
adc
mov
insb
mov
pushf
cmp
jp
lods
inc
sub
xchg
push
ffreep
out
push
inc
mov
and
mov
mov
sbb
mov
adc
repz
push
scas
icebp
push
jl
jecxz
jo
adc
xchg
adcl
fisttps
and
xor
mov
loope
mov
movsl
dec
fldt
or
push
sbb
add
ret
js
cmp
daa
call
or
inc
jge
push
pop
or
and
int3
bound
and
mov
out
add
out
mov
push
xlat
add
jl
fistl
push
divb
pop
cwtl
call
stos
pop
adc
push
mov
sti
adc
push
jle
stos
cwtl
ds
loope
inc
push
fcmovne
add
and
dec
pop
adc
inc
bound
mov
push
xchg
xchg
popl
ror
pop
test
out
and
xchg
xor
sub
rcrb
mov
outsl
adc
inc
push
xor
jl
inc
js
xor
cs
insb
cmp
shrl
movsl
or
data16
jb
fcompl
xor
or
nop
notl
xor
adc
mov
pop
push
loopne
pusha
imul
in
mov
jl
and
xchg
xchg
out
jecxz
jle
xchg
inc
imul
jle
push
je
xor
mov
out
jge
xchg
lds
pop
mov
cld
stos
push
shr
cmp
adc
shl
in
and
jo
cmpsb
adcl
and
mov
mov
mov
add
jmp
jb
sub
add
sarb
ja
inc
jbe
lock
cmp
jns
sbb
enter
add
insl
sbb
clc
lods
add
sub
imul
xor
inc
xchg
andl
insb
push
gs
clc
xor
mov
mov
fisttps
insl
shrb
adc
inc
daa
pushf
fsubs
fsubp
cmpsb
cwtl
fcmovnu
rcl
xchg
cmp
popa
dec
xchg
test
or
jmp
cmc
xchg
cmp
push
mov
adc
and
mov
and
dec
pop
jnp
xor
movsb
lods
fldl
mov
or
dec
jge
repz
scas
add
mov
andb
push
rcrb
adc
xchg
cmp
ss
outsl
xchg
xchg
xor
call
xchg
mov
in
clc
aas
mov
mov
mov
and
pop
sub
inc
adc
testb
ret
sub
aas
fisubs
daa
adc
pop
mov
out
jns
mov
and
add
out
fwait
mov
sub
subl
inc
xchg
xor
into
or
adc
stos
xchg
mov
pop
repnz
das
dec
inc
stos
gs
movb
mov
xor
decl
fwait
test
mov
inc
lea
or
ret
sbb
stos
aaa
fistpl
movsl
sub
jmp
loopne
push
adc
or
push
out
int3
push
pusha
jmp
push
je
dec
xor
pop
xchg
xchg
or
cmp
pop
popa
dec
outsl
pop
mov
inc
pop
jns
iret
cmpsb
xor
ret
icebp
or
shll
int3
jne
loope
adc
mov
lahf
outsl
mov
mov
xlat
or
cmpsl
xchg
hlt
mov
adc
fwait
cmp
cmc
sti
xchg
adc
mov
adc
fdivp
lods
pmaxsw
add
sub
xor
outsl
les
ret
xchg
push
xor
popf
xor
mov
jbe
aas
scas
out
pop
push
dec
add
divb
jge
nop
pop
cmc
push
jns
dec
cmp
out
adc
leave
daa
jbe
mov
jmp
out
hlt
ss
xchg
xor
xchg
pop
or
pop
rcr
inc
repnz
dec
and
loopne
inc
xor
lds
add
mulb
jle
xchg
jecxz
sub
and
insl
mov
or
jmp
cmp
fdivrl
xor
or
cmp
pop
mov
push
and
es
int3
cmpsl
arpl
mov
push
inc
ja
cmpl
movsl
cmc
inc
push
xchg
cmp
mov
insl
push
aaa
adc
lret
lret
insb
out
sbb
jo
xor
xor
push
add
inc
in
mov
enter
loop
dec
or
imul
cmp
popf
in
mov
xchg
fisttpl
ljmp
icebp
mov
mov
mov
lahf
inc
ret
or
or
pop
lret
mov
mov
rclb
fidivrs
jnp
lock
fsubrs
iret
dec
cmp
pop
lods
jne
jb
inc
sub
jg
xchg
repz
leave
stos
mov
jmp
enter
or
or
push
out
in
sub
adc
test
fisttpll
cli
popa
cld
fmul
lret
and
mov
out
and
dec
sti
ret
ret
cmp
fsubrl
and
cmp
sahf
ss
push
inc
outsb
or
mov
mov
cld
xor
sub
imul
jecxz
mov
or
mov
test
test
sub
stos
xchg
in
push
push
dec
inc
jne
stos
push
cmpsb
jo
pop
mov
in
sbb
mov
mov
sarb
dec
or
fstps
add
xor
filds
xchg
es
sbb
mov
push
inc
jmp
fisubrl
dec
sbb
push
ss
jmp
test
mov
mov
out
in
test
out
nop
adc
xchg
pop
ja
out
mov
cmp
fcomp
ja
insl
jns
call
in
pop
mov
lcall
ret
or
cmp
push
fdivrl
cltd
mov
push
lret
xor
cmp
inc
test
jge
xor
repnz
push
sti
scas
sub
mov
dec
mov
lods
or
mov
pop
and
xchg
fists
jno
subl
sub
enter
mov
push
mov
and
mov
mov
and
loop
subl
xorl
subl
inc
xor
adc
push
xor
bnd
cmp
movsl
push
mov
pop
cmp
fwait
repnz
jecxz
dec
sub
push
gs
fbstp
pop
inc
hlt
dec
xchg
cmpsl
dec
adc
movsl
pop
std
cld
fisubrs
fildll
outsb
push
fiadds
notl
inc
loope
and
rcrb
movsb
adc
add
and
sub
adc
pop
dec
icebp
in
jae
sub
roll
push
outsl
roll
mov
xchg
mov
ret
or
test
or
push
dec
or
lods
sub
xchg
lods
enter
ja
mov
std
fadds
xor
fistl
xchg
shr
fnsave
lock
arpl
push
sbb
sub
add
iret
in
imul
out
mov
pop
xchg
sti
jl
inc
pop
mov
adc
push
pushl
jl
and
mov
jle
push
pop
push
rorl
mov
push
add
leave
out
loopne
mov
ja
pop
andb
pop
pop
jl
jecxz
pop
loopne
lods
push
xchg
xor
andb
push
sbb
mov
inc
add
cmpsb
sub
jl
push
pop
pop
sbb
scas
lahf
negl
mov
aad
sti
mov
pop
pop
lods
imul
push
shl
es
cmpb
inc
mov
dec
dec
clc
jno
sahf
pop
lods
out
sbb
mov
cmp
push
and
imul
daa
lret
ret
xchg
pop
aad
cmp
jns
ret
cmp
scas
icebp
jle
shlb
lret
jmp
xor
sub
aas
or
sahf
xlat
xchg
out
jnp
fidivl
lret
push
into
add
test
sbb
cmpsb
ror
mov
pop
roll
push
insl
adc
in
jbe
out
jns
fcoms
stos
sub
mov
adcb
fdivl
xchg
mov
iret
sbb
pop
fimull
push
or
test
fdivl
jecxz
sbbl
popa
ficoml
das
mulb
fwait
dec
daa
mov
sbb
sbb
or
repnz
rorl
stc
dec
or
loope
mov
mov
lods
cmp
stos
imul
add
ljmp
and
hlt
sub
pop
imul
lds
cmpsl
lret
das
sub
mov
cmp
ljmp
ss
fdivp
hlt
jne
cwtl
or
lods
xlat
sub
xchg
push
ds
enter
clc
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
push
inc
mov
adc
and
sbb
pop
push
push
sub
add
cmp
icebp
stos
fimuls
mov
push
test
iret
hlt
addr16
hlt
mov
out
inc
mov
movsb
mov
cmp
and
sbb
repz
repnz
icebp
addps
xchg
js
jl
adc
dec
mov
call
popa
out
adc
lret
popa
int3
jge
bound
inc
cli
jle
jo
andl
je
xchg
mov
popa
js
cld
and
push
mov
sub
mov
cli
outsl
popf
sbb
leave
inc
inc
jne
adc
cmpsb
leave
rorb
ror
rolb
rcl
jae
cmp
fcomp
dec
arpl
in
test
jbe
clc
imul
xchg
push
jnp
test
mov
or
jp
not
insb
mov
xchg
cmpl
outsl
jbe
cmpsl
pushf
pusha
sub
sbb
push
add
mov
inc
push
and
mov
xor
cmp
push
pop
loope
sahf
add
mov
xchg
xor
cli
sbb
push
jmp
out
mov
ds
push
leave
xchg
in
hlt
int
mov
cmp
adc
xchg
pop
sub
xlat
dec
les
sahf
iret
sbb
imul
xchg
pop
mov
cmpsb
test
add
ds
jo
shr
int
bound
mov
inc
add
roll
notb
ljmp
aam
mov
xchg
jmp
jg
notl
loop
out
sahf
stc
rclb
fisttps
mov
lret
xchg
add
pop
clc
sbb
sub
push
daa
dec
imul
mov
insb
and
stos
xchg
call
lock
add
xchg
xchg
pushf
fcmovnbe
out
cmpsl
fisubl
adc
cltd
nop
into
cmpb
pop
push
lea
and
in
jge
lods
in
mov
fwait
and
pop
scas
loop
push
je
sub
dec
shlb
arpl
je
test
in
xchg
repnz
jp
pop
fprem1
jecxz
adc
popf
fbstp
mov
push
shll
pop
mov
idivb
cmp
shrl
or
sub
fsubl
stos
fsubrl
pop
lcall
push
psubw
popf
adc
sbb
mov
and
xorb
test
ret
sub
sahf
inc
fistps
sbb
mov
pop
lods
cmp
insl
sbb
repz
cmp
dec
mov
popa
pop
test
push
push
inc
xchg
mov
push
mov
xlat
lret
aas
jp
insl
in
popf
pop
mov
in
daa
les
cmpsb
jge
and
adc
xchg
aad
test
je
xchg
xchg
adc
push
cmc
mov
adc
sub
loop
cmpsb
fwait
adc
cmp
lock
sbb
iret
dec
pusha
or
jecxz
imul
cmp
in
xchg
out
mov
add
xchg
fisubl
lock
fstl
gs
rorb
dec
das
adc
cwtl
add
lahf
xor
adc
sub
cmp
xchg
mov
out
in
jbe
arpl
mov
enter
ret
pop
lods
lret
dec
in
mov
add
fwait
loop
sti
rep
test
xchg
je
inc
dec
xor
clc
lods
mov
rcll
cmpsl
cmpsl
movsb
jge
jmp
jecxz
cmpsl
jnp
lods
mov
jecxz
add
jb
repnz
dec
outsb
or
repnz
sbb
lock
ret
stos
pop
mov
mov
xor
les
inc
sbb
xchg
xchg
mov
imul
mov
jle
dec
lret
xchg
out
enter
pop
lock
loopne
addr16
mov
stc
int
adc
adc
aad
adc
sahf
jo
jmp
mov
xchg
lock
lock
out
jge
or
mov
xchg
push
xor
jb
js
sub
lods
mov
popl
jns
test
push
mov
lods
dec
inc
ret
ret
leave
xlat
jmp
fmulp
push
or
xchg
inc
sub
sub
mov
in
add
add
arpl
out
inc
push
in
or
nop
sub
mov
stc
in
insl
mov
std
sarl
aam
xor
jae
nop
out
add
xor
insb
in
jb
repnz
lret
mov
push
xor
scas
enter
xchg
add
push
mov
cmc
rcr
lahf
push
cmpsb
test
mov
and
das
gs
and
icebp
inc
adc
movsl
shll
outsl
lea
sub
aaa
sub
sub
ljmp
in
in
xorl
and
mov
mov
mov
iret
mov
inc
aad
sub
cmp
scas
incl
stos
flds
pop
mov
je
dec
imulb
inc
mov
in
hlt
mov
xor
cld
daa
jle
hlt
loopne
testl
sub
jle
ss
shrl
adc
pop
xchg
dec
cmpsl
pop
jg
xchg
icebp
or
push
loopne
inc
das
loopne
icebp
data16
rol
lock
add
mov
lds
nop
xor
inc
cmpsl
push
mov
jle
xor
fs
mov
inc
rorb
mov
inc
sbb
out
negb
outsl
jns
test
imul
and
cmpsb
pop
sahf
xchg
cmc
mov
inc
shlb
cli
cmp
lds
jp
mov
js
and
daa
push
pop
scas
hlt
mov
push
xor
popa
pause
jmp
rcr
push
popf
adc
push
mov
push
jo
fwait
lods
sti
movsb
cmp
sti
sub
pop
das
cmp
xchg
inc
movl
pop
xchg
andl
cmpl
pop
jl
mov
loop
pop
dec
test
dec
lret
fcmovu
push
lock
int
cmpl
insb
add
fidivl
lock
aad
pop
sbb
xchg
testb
and
push
mov
push
movsb
mov
das
out
fwait
dec
iret
cs
xlat
ror
sub
scas
test
mov
stc
xor
sti
mov
cld
mov
pop
push
fdivrs
sub
jbe
int3
pushf
cmp
add
daa
testb
adc
aas
loopne
add
fisttpll
shrl
jmp
in
lahf
and
rcrb
inc
sbb
push
leave
mov
ret
sbb
clc
xchg
add
jbe
push
pop
stos
out
push
out
cli
jmp
lret
out
pusha
jmp
or
adc
push
or
pop
mov
xchg
es
in
in
out
test
adc
mov
and
and
jmp
jne
add
subl
xchg
and
bound
adc
and
test
sbb
sbb
icebp
add
fwait
outsb
jl
xchg
lods
mov
std
cltd
icebp
es
popf
mov
xor
and
jno
sub
rcrl
gs
cmp
xor
cmp
sub
cmc
dec
bound
jne
pop
xor
mov
or
nop
xchg
cltd
and
pop
ficoms
mov
jg
jne
dec
fdivl
pop
into
sbb
mov
orl
aas
pop
mov
and
jle
lods
outsl
les
rorl
ja
shll
sbb
outsl
mov
das
xchg
outsb
bound
add
pop
loop
stc
les
sub
ljmp
dec
gs
arpl
sbb
inc
adc
ds
lcall
mov
int
cmp
out
in
test
mov
leave
mov
idivb
xchg
mov
mov
in
int
aad
cmp
add
aam
popf
adcb
add
pop
lahf
pop
jo
dec
sub
negb
pop
push
cmpsb
std
inc
or
nop
sbb
and
inc
fwait
dec
stc
pop
or
push
aaa
les
sbb
fwait
push
stos
push
mov
jne
push
jp
mov
cmc
xor
pop
push
sub
loopne
sub
inc
lds
pop
dec
pop
ja
jge
cli
push
sub
push
dec
add
dec
jg
xor
ret
rol
jg
sub
inc
jne
fprem
xchg
sti
xchg
and
push
jl
icebp
dec
inc
jl
cmp
mov
push
adc
fidivs
xchg
xchg
mov
dec
rorb
test
mov
aad
sub
jo
xor
add
pop
pop
cmp
xchg
push
notb
imul
dec
inc
loop
xor
mov
push
sbb
fmuls
fnstcw
mov
mov
mov
and
jp
mov
cmp
xor
add
repnz
sbbl
int3
std
out
push
aaa
adc
das
mov
or
repz
adc
push
dec
stos
scas
outsb
push
fcompl
es
dec
mov
or
lret
lds
jnp
test
outsl
add
mov
imull
pop
adc
clc
and
stos
cmp
call
jb
add
mov
xor
add
pop
pop
fisubs
and
aaa
and
cmp
xchg
fimull
pop
sbb
imul
insl
inc
lods
hlt
push
xchg
rcrb
imul
pop
dec
jno
and
and
sub
int3
sbb
sub
call
shl
and
arpl
push
das
aad
mov
in
fldl
jg
add
fucomip
mov
ret
std
arpl
pmaxsw
scas
pop
cmp
in
pusha
pusha
cmc
mov
int3
test
minps
lods
sti
jp
call
dec
mov
sub
fdivl
adc
dec
mov
ret
push
or
stos
rcrb
jnp
xlat
js
adc
add
in
iret
mov
dec
stos
aas
cmp
mov
pop
leave
les
mov
repz
notb
shlb
jp
xchg
lods
and
fldcw
or
sti
mov
push
xor
mov
jg
mov
mov
lret
aaa
jno
fidivrl
into
push
cmp
mov
mov
and
ds
push
mov
cmc
mov
mov
cltd
mov
cmp
mov
cwtl
clc
jle
add
in
xchg
inc
aas
add
arpl
jae
dec
mov
cld
aaa
mov
addl
xor
cltd
xchg
shrl
lret
xchg
test
add
jno
adc
sub
sbb
inc
dec
mull
push
outsl
or
adc
push
mov
cmpsl
jge
jge
clc
jmp
jle
sbb
jo
jo
mov
push
aaa
cmp
and
imul
dec
push
mov
push
mov
aad
mov
shll
cmp
insb
pop
outsl
xchg
arpl
shl
subl
xor
ss
popa
adc
sbb
sarl
dec
mov
andb
pop
ljmp
push
scas
inc
add
jp
mov
xor
pop
imul
popf
test
adc
mov
gs
es
push
enter
or
jecxz
push
dec
int
fcom
test
pop
sbb
pusha
pop
pop
mov
xlat
inc
pop
sub
mov
ds
or
jnp
popa
jnp
xchg
push
shrb
push
push
sti
outsl
mov
push
decb
mov
fcmovu
mov
or
cmp
lock
add
xchg
hlt
lock
hlt
xlat
adc
andb
mov
imull
iret
ljmp
and
fnsave
sbb
das
dec
fcoml
fadds
loope
movsb
pusha
leave
rcl
push
xchg
xchg
ret
scas
sbb
jns
push
popa
push
in
add
pushf
sbb
xor
lea
cmpsl
pop
sub
mov
xchg
sbb
pop
xlat
add
pop
les
test
shll
adc
filds
xlat
movsb
sub
inc
push
test
fisubrs
xchg
jle
pop
mov
cli
add
jp
adc
mov
cli
xchg
mov
popf
cmpb
daa
adc
sbb
aaa
add
mov
lods
or
sub
aaa
stos
scas
stc
cmp
es
cmpsb
jbe
sbbb
add
int
in
mov
xchg
mov
sbb
test
out
push
lret
push
into
cwtl
or
xchg
sbb
xorb
adcl
loopne
and
sbbb
mov
out
mov
push
mov
pop
inc
jae
outsl
mov
fbld
mov
pop
loope
test
or
les
popf
jnp
xchg
out
cltd
leave
or
test
jae
xor
jmp
arpl
jmp
sub
cmpsb
push
subl
sbb
cltd
out
jl
ljmp
inc
daa
rol
inc
add
adc
jg
dec
enter
jge
ljmp
negb
loope,pt
out
lcall
adc
notb
pavgb
test
pop
inc
mov
in
test
cwtl
pop
call
inc
or
scas
sub
mov
fadds
add
push
mov
sub
cli
data16
or
dec
jne
cltd
push
push
mov
mov
ficoml
push
cmp
mov
fmuls
roll
lret
and
jmp
push
push
xchg
outsl
aas
loope
or
imulb
sbb
popf
ds
insb
stos
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
xchg
xchg
js
adc
and
or
and
repnz
adc
sub
push
outsb
scas
subl
xchg
jge
std
je
movb
arpl
dec
loop
push
stc
test
imul
jmp
sub
arpl
pop
and
js
add
xchg
jne
movsl
daa
sub
add
cmp
pop
dec
arpl
push
aas
call
add
or
fs
dec
inc
cmpsb
es
imul
adc
pop
frndint
xchg
insl
push
push
dec
loopne
add
stos
shll
lods
mov
mov
mov
test
fwait
add
stos
popa
mov
lret
sub
xchg
jl
in
and
dec
pusha
out
jb
inc
outsl
cmp
mov
fimuls
inc
xchg
jecxz
mov
call
sbb
mov
xchg
fninit
pop
popf
clc
addl
test
jge
adc
xchg
clc
add
ss
add
inc
icebp
mov
mov
or
cmp
cmp
mov
xchg
mov
jge
mov
test
aas
push
ret
or
and
stc
push
bound
out
loop
dec
cmpsb
jg
shrl
lock
lahf
dec
xorl
out
loope
add
call
outsl
cwtl
stos
xor
in
jle
mov
fdivl
insb
icebp
ss
filds
sbb
jb
popf
push
repnz
shll
hlt
int3
jp
popf
xchg
and
lea
lea
shll
sub
add
popf
repz
cwtl
lahf
arpl
loop
cld
pushf
nop
les
lcall
mov
sbb
inc
xor
and
fldl
or
or
mov
sub
sbb
pop
pushf
push
xor
push
in
push
mov
push
sbb
jae
ljmp
jne
adc
sub
adc
ja
pusha
or
icebp
jno
test
mov
lock
mov
mov
mov
jp
scas
or
lds
jle
std
sarl
aad
inc
hlt
inc
cltd
lock
jecxz
xor
dec
dec
push
lcall
and
stos
add
or
cmp
dec
mov
lret
cmp
and
out
enter
xlat
ds
test
out
and
xor
cltd
hlt
outsl
sbb
mov
mov
xchg
popf
bound
and
mov
les
add
sti
push
lds
xor
cmp
jmp
adc
inc
pop
loopne
ss
pop
cmp
xchg
push
fwait
ja
sub
xchg
in
outsb
ror
push
xchg
push
dec
aas
mov
dec
sti
dec
lock
je
mov
dec
adc
in
sbb
test
fmuls
ret
mov
in
and
inc
lret
adcl
popa
and
adc
pop
pop
lcall
pop
test
and
fcmovb
push
jle
pop
fsubrp
cmp
repnz
repz
clc
pop
mov
mov
xor
add
pop
inc
pop
sub
popa
inc
std
dec
cmp
jno
and
mov
lahf
inc
pop
testb
xor
cmpsl
sub
sar
aad
mov
push
loopne
mov
sub
sahf
xor
mov
xchg
aad
pusha
push
ret
pop
popf
imul
aam
fwait
enter
jmp
inc
ss
fcmovnu
mov
xor
jnp
bound
inc
mov
call
rclb
xor
cs
das
inc
jmp
mov
push
sti
dec
dec
in
call
fbstp
lea
jae
ret
and
mov
out
rcrb
or
cwtl
in
sub
clc
scas
sub
cmp
cltd
jae
inc
jp
inc
orl
enter
sub
mov
inc
jle
dec
and
and
ret
sub
adc
aam
cs
sub
mov
push
fstp
push
pop
jno
pop
or
dec
ljmp
mov
inc
ljmp
jle
push
stos
insb
idiv
insb
mov
jo
push
adc
adc
cli
mov
das
xchg
hlt
nopl
or
jns
push
movsl
aaa
add
mov
push
sbb
sub
cmpsb
pop
cmp
xor
push
sarb
vmread
mov
cltd
mov
addb
add
mov
pop
cmpsb
out
test
xor
push
ds
test
inc
movsb
fiaddl
addl
inc
clc
inc
jmp
inc
xor
jne
mov
push
loop
in
sbbl
sbb
xchg
add
and
das
or
xchg
mov
mov
jle
cwtl
mov
jmp
push
adc
repnz
inc
xor
cld
jl
jb
sbb
mov
test
or
mov
or
aas
jno
out
call
iret
or
add
adc
movsl
cmp
sub
pushf
and
nop
insl
das
jl
aaa
pop
jl
pop
xchg
ret
mov
xor
cmp
adcb
and
mov
popf
adc
rclb
jmp
stc
mov
jnp
xor
jp
push
cmp
adc
je
repnz
mov
lea
mov
bound
mov
scas
dec
cs
es
dec
sbb
cmp
jge
in
aad
outsl
add
mov
inc
dec
cmpsb
insb
adc
add
lahf
cmovg
out
aam
rcrl
mov
lcall
push
std
ds
shrl
dec
inc
push
sub
pushf
sahf
scas
mov
sti
imul
or
rcrl
hlt
pop
nop
scas
jmp
ss
mov
rcrl
sarl
sarb
mov
mov
fldpi
dec
sti
push
pushf
xchg
mov
pop
repnz
notl
jb
adc
les
test
repz
and
pushl
sahf
pop
jno
jge
fstl
pop
lds
mov
push
clc
lret
sahf
es
inc
sti
repz
jecxz
imul
test
mov
repnz
enter
inc
push
dec
les
xchg
sbb
pop
icebp
adc
rol
add
cwtl
loope
xor
push
imul
ret
pop
mov
inc
push
lcall
sub
imul
fwait
dec
mov
js
fwait
daa
add
es
nop
stos
sub
xchg
mov
cltd
jo
jo
jne
aad
jl
test
jp
dec
ficoms
xchg
loop
xchg
cld
or
popa
sub
es
inc
popa
je
sbb
sub
push
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
sbb
mov
cmpxchg
not
daa
aam
jo
and
cmp
fsubrl
mov
cmp
in
stc
aad
call
int3
pop
loope
sahf
jl
mov
or
sahf
sbb
rcrb
or
pop
sbb
pop
mov
dec
scas
sbb
mov
shrl
lcall
pop
sub
and
or
addr16
mov
das
repnz
add
hlt
pusha
popf
mov
mov
sub
xchg
push
xchg
mov
dec
in
mov
dec
icebp
jecxz
dec
dec
daa
mov
push
mov
pop
lea
movsb
mov
clc
cmp
loope
push
sahf
ficoms
mov
mov
adc
jle
mov
mov
mov
adc
dec
inc
adc
popa
push
push
jl
cmp
cmp
lea
sahf
adc
aad
stc
insb
jle
jb
repz
inc
call
ds
adc
fisubl
jnp
cmp
and
sbb
xchg
shll
lret
pop
data16
sbb
loop
sbb
push
dec
pop
xchg
add
add
adc
add
sti
jbe
jle
mov
fwait
or
pop
mov
mov
cs
mov
mov
imul
ret
dec
or
add
insb
mov
sub
xor
lret
xor
jno
shr
addr16
mov
push
or
repnz
call
sub
add
or
or
pop
pop
cwtl
push
icebp
cmp
data16
imul
pop
mov
cmpsb
pop
movsb
idivl
jp
test
push
fsub
rcrb
pop
mulb
pusha
ds
out
mov
ja
sub
je
movsb
or
push
push
mov
pop
cwtl
aam
jne
inc
loop
fcoms
test
adc
lods
nop
enter
jmp
xchg
icebp
pop
jb
add
and
lock
adcl
push
int3
sub
fcomps
adc
jno
mov
int
sbb
adc
dec
push
negb
cmp
aas
dec
popa
or
test
out
orl
mov
xchg
or
sub
inc
cmp
std
xchg
pushf
nop
insl
add
dec
test
inc
cmp
iret
or
lret
aaa
cmc
loope
dec
jne
imul
lds
pop
cmpsl
mov
ds
push
lahf
das
jmp
dec
cmp
add
mov
in
xchg
mov
pushf
dec
cwtl
adc
inc
mov
and
add
cmp
push
fldt
test
jne
ret
andb
mov
push
push
int
cli
lea
mov
sub
sbb
loopne
mov
jbe
cmp
mov
inc
push
fnstsw
fldt
daa
icebp
add
pop
outsb
xlat
ds
inc
push
std
fldcw
push
push
pop
cltd
shr
mov
andl
je
push
xchg
jne
pop
ljmp
xor
sub
clc
and
xchg
pop
ret
xchg
hlt
dec
enter
ljmp
lea
xchg
sbb
jge
fiaddl
sub
mov
mov
fs
xor
in
cmc
jnp
xchg
sub
pop
pop
cli
cmp
pop
jl
and
add
movsl
xor
xchg
xchg
cli
lcall
dec
insl
aas
fnstcw
adc
sti
push
std
cmp
in
mov
rorb
and
pop
and
mov
mov
adc
fcmovnb
or
cmp
outsl
sarb
adc
push
imulb
push
pop
into
mov
enter
in
add
or
rol
push
inc
inc
jns
loopne
lods
mov
ljmp
jno
jecxz
lods
sub
sub
sbb
sub
fidivs
dec
sub
divl
andl
andl
and
insb
push
cwtl
xchg
jmp
xor
lret
sub
imul
push
and
test
mov
mov
push
xor
test
test
mov
rcrl
lods
mov
aam
stos
push
push
jo
imul
ret
push
test
inc
pop
scas
js
mov
imul
rorb
inc
jns
cmpsb
jnp
in
das
or
addr16
pop
loop
push
pop
insl
hlt
mov
push
es
dec
or
gs
pop
push
sub
or
pop
xor
mov
or
icebp
cmc
ficoms
jnp
xlat
pop
pushf
jne,pn
push
leave
cmpsl
cmp
pop
cmp
hlt
ja
je
mov
pusha
fldenv
inc
ja
dec
bound
repz
outsl
clc
push
jmp
jo
shll
xchg
repz
or
push
enter
and
loop
emms
daa
ror
mov
cs
sbb
cmpsb
das
sub
push
xor
jbe
cmp
fidivs
shrl
andl
out
loop
and
in
leave
test
fwait
inc
imul
mov
xor
pop
test
jbe
push
xor
cli
leavew
or
lods
sub
cmp
push
jmp
pop
pushl
dec
outsb
xor
mov
mov
aas
push
or
dec
aaa
inc
dec
or
adc
ss
outsl
mov
push
sbb
cwtl
push
pushf
lock
sub
iret
sbb
xchg
es
test
mov
std
pop
mov
xchg
pop
shlb
imul
in
push
in
mov
outsl
mov
hlt
add
mov
sbbl
pop
call
jo
in
and
adc
push
add
and
xor
push
insl
ds
aam
and
test
rcrb
call
testb
push
ljmp
inc
cmpsb
out
sub
js
cwtl
leave
pop
repz
mulb
adc
sub
arpl
mov
xorb
push
scas
aam
and
add
or
es
mov
xchg
push
mov
pop
mov
scas
cmpsl
push
cmp
push
scas
push
add
mov
addr16
aad
daa
and
adc
sub
insl
add
inc
insb
cmp
mov
es
xchg
lds
xchg
fcomps
in
loopne
fsubp
clc
mov
movsb
cmp
cmp
in
jns
outsl
enter
into
or
icebp
ja
cs
push
xlat
pop
push
jne
out
jb
dec
dec
je
loopne
xor
jnp
adc
pop
sti
mov
dec
jg
xchg
xchg
push
push
out
inc
add
lret
mov
iret
pop
nop
sahf
mov
sub
daa
jle
mov
push
push
jmp
sbb
push
adc
xchg
int3
xchg
stos
fmuls
nop
adc
and
mov
roll
push
or
jae
iret
push
addb
ds
push
out
lea
lret
xchg
adc
inc
orb
lret
inc
cmp
insb
ret
fldcw
jb
outsl
cmp
mov
sbb
mov
aam
mov
stc
sbb
decb
mov
movsb
jecxz
jnp
push
cli
aad
jg
push
fidivs
out
dec
cmp
mov
int
insb
lds
mov
inc
cwtl
mov
jmp
shlb
xchg
popf
jmp
in
pop
ret
and
dec
int3
pop
scas
dec
mov
lret
decb
arpl
addr16
sbb
jb
dec
shr
pop
fdivrl
mov
jl
cli
scas
push
sbbb
pop
pop
pop
adc
popf
dec
setne
jne
xchg
imul
or
lds
test
jne
inc
enter
xor
stos
fwait
and
dec
mov
adc
sti
push
dec
dec
aas
daa
mov
rcll
mov
lea
inc
and
and
out
or
ja
pushf
ficompl
add
fbstp
pop
cs
add
inc
ficomps
cmp
push
xchg
xchg
cmp
dec
xchg
or
ret
jecxz
inc
cmp
mov
pushf
imul
xor
pop
movl
int
jo
adc
xchg
cmpsl
pop
xlat
dec
mov
test
add
pop
lea
fimull
and
in
xchg
sti
sar
xor
adc
out
adc
test
sahf
lock
out
pop
cmc
cmpsb
mov
jle
push
popa
int
out
adc
push
das
or
mov
pop
cmp
ds
jp
sbb
mov
push
xchg
mov
push
imul
pop
das
int
lea
scas
inc
ret
sub
pop
popa
addr16
lds
or
popf
jno
int
mov
pop
fdivl
and
js
jle
mov
pop
jp
sub
pop
pop
mov
fiadds
and
dec
stos
sti
shlb
orb
sti
mov
push
into
test
inc
stos
hlt
adc
pop
loope
fs
data16
shll
and
mov
repnz
and
sub
outsb
test
pop
addl
subb
jmp
test
out
and
mov
cltd
sbb
fs
push
push
cwtl
addr16
incb
inc
push
mov
fists
adc
es
movsb
dec
stos
adc
out
sub
xor
fcomps
insl
in
lock
push
jno
and
push
in
xchg
xlat
lea
sbb
jg
jmp
inc
aad
jp
fistl
sub
xchg
add
adc
outsb
addr16
push
rol
sahf
dec
jb
xchg
or
movsl
mov
push
mov
aas
xor
fimuls
xor
xchg
push
mov
push
fwait
sarl
cmp
xorl
push
movsl
leave
add
aas
lds
movsb
shl
dec
call
repnz
ljmp
push
mov
cmpsb
leave
mov
add
add
dec
loop
in
mov
aam
lods
xchg
fidivrl
jns
mov
jmp
rorb
adc
xchg
cmpsl
stos
fnstenv
int3
sbb
xchg
xor
popf
sbb
push
or
jnp
hlt
mov
stc
mov
mov
aaa
nop
jnp
lea
or
lods
cltd
inc
iret
push
fnsave
xchg
mov
pop
shrb
dec
test
xlat
iret
idivl
dec
sahf
scas
xor
jecxz
inc
lock
cs
pop
rcr
fwait
ret
push
or
in
jp
xor
pop
lea
aas
push
dec
inc
gs
shll
ljmp
ret
xchg
shlb
test
xor
ds
mov
sub
in
pop
loop
dec
cltd
sbbb
shr
pop
inc
incb
mov
hlt
mov
pop
sbb
mov
adc
mov
push
pop
dec
sub
div
xchg
or
sbb
mov
or
xor
std
rcr
mov
pop
outsl
xor
pop
sub
add
or
fnsave
pop
pop
leave
push
lds
ljmp
stc
pop
lock
std
mov
sub
mov
adc
mov
imul
cmp
sub
cmp
popa
arpl
fistpl
mov
outsb
pop
cs
imul
pop
mov
movl
repz
mov
pop
sub
cmp
and
ret
pop
ficompl
leave
ja
mov
shl
push
mov
ss
push
dec
mov
subl
sbb
aaa
mov
pop
cwtl
inc
mov
push
mov
std
lret
in
dec
add
iret
dec
push
bnd
jb
hlt
push
adc
bound
inc
outsb
cmpsb
decl
jbe
mov
push
div
pop
xor
sbb
or
mov
inc
xor
imul
addl
mov
pop
movsb
jnp
dec
pop
and
push
rclb
out
xor
fchs
jne
ret
stc
or
shrb
pop
stos
daa
mov
jo
adc
ja
or
xchg
and
inc
add
aaa
jl
out
iret
jecxz
adc
shlb
pop
mov
dec
daa
stc
or
pop
fdivs
dec
mov
xlat
cli
push
xlat
push
cmpsl
sub
dec
xor
fisttpl
fnstcw
decb
scas
add
ret
jno
sbb
xlat
ja
jo
js
movsl
jne
mov
or
adc
pusha
pop
pushf
rorb
mov
jbe
jp
pop
int3
xor
mull
add
enter
out
sub
fsubrl
mov
cs
stc
jnp
shl
xchg
cmpsl
adcb
shlb
mov
andb
push
dec
aam
stos
ljmp
jno
mov
cmp
mov
cmpsl
mov
shll
js
test
cs
or
scas
aam
and
lods
iret
out
xor
test
jl
jo
pop
jns
aam
fbld
cmpsb
pop
out
imul
testl
sub
lds
pop
rol
dec
enter
jecxz
mov
jp
lock
or
lahf
inc
outsb
xor
jmp
add
rorl
fldenv
stos
arpl
xchg
lods
fldl
rolb
bswap
popf
inc
mov
xor
scas
cltd
mov
orb
sbb
das
clc
mov
inc
push
push
into
cs
repz
arpl
mov
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
mov
mov
jno
outsl
inc
test
adc
jp
mov
cld
cmp
out
jbe
mov
and
jno
sbb
inc
jecxz
out
jbe
and
dec
int3
jmp
adc
out
jmp
iret
adc
stos
pushf
ret
test
mov
mov
adc
push
inc
push
rep
mov
jns
jns
mov
pmulhuw
lods
xor
mov
cmp
xchg
enter
shl
ficomps
xor
jl
mov
adc
push
arpl
jb
push
imul
jg
sahf
dec
add
daa
jle
ljmp
push
xorl
cli
push
xchg
jbe
and
rolb
and
jns
fdivs
ret
add
mov
ror
jecxz
sub
dec
out
lret
add
jg
repz
fs
cmp
and
and
mov
and
shrl
xchg
in
cmp
add
push
add
mov
rcrl
sbb
push
orl
push
push
pop
cmp
sub
adc
scas
aad
in
pusha
fs
dec
cmp
jge
push
dec
pop
imul
cld
or
pusha
imul
mov
sbb
jne
and
fwait
xchg
cmp
enter
cmp
jmp
test
in
add
out
mov
dec
push
in
jno
hlt
cmp
mov
roll
pop
mov
mov
jne
imul
dec
daa
and
mov
shlw
sbb
call
sbb
lock
lea
xor
sub
jns
jo
mov
sbb
and
jmp
mov
popa
push
and
pop
sti
xchg
cmp
xchg
pusha
jbe
mov
mov
insb
ret
aaa
xor
mov
push
sub
jg
test
fbld
xchg
mov
xor
imul
cmp
nop
xor
add
fcomps
les
je
xchg
mov
cmc
stos
xchg
xchg
mov
shll
mov
xchg
adc
mov
leave
out
mov
sarb
loope
fcmovb
xor
pop
std
mov
xchg
push
mov
sahf
adcl
lcall
adc
call
out
pop
adc
imul
std
jg
xor
jp
and
sbb
mov
xor
inc
fisttps
jae
lret
jg
negb
mov
ret
imulb
mov
lods
mov
pop
adcl
xor
subl
gs
stc
mov
add
and
jecxz
xlat
or
insb
xor
mov
aas
testb
bound
adc
cld
loope
sub
sub
adc
in
mov
and
enter
push
or
arpl
je
and
mov
mov
lret
inc
mov
xchg
lock
stos
popf
sbb
jg
pop
addb
xor
cmp
movb
mov
jecxz
adc
inc
add
stc
mov
cmp
enter
popa
fwait
cmp
mov
xchg
xchg
out
or
into
push
xor
arpl
and
pop
adc
mov
test
dec
ja
repz
cmp
push
cmc
sar
mov
lods
mov
add
out
push
mov
cwtl
loop
nop
mov
je
pop
shl
or
pop
inc
sub
dec
test
jmp
sub
cltd
and
lods
pushl
xchg
mov
xor
xchg
or
xchg
loopne
loope
and
dec
push
mov
mov
cmp
fwait
sbb
mov
push
push
push
dec
cld
inc
jl
call
fstp
jbe
scas
and
dec
test
popf
loope
jae
jnp
jmp
in
test
sar
jns
push
adc
add
out
fstpt
int
fsub
and
cmc
shl
xchg
mov
mov
push
leave
jp
push
jae
out
fs
or
lcall
pop
fldenv
xor
clc
xor
leave
push
jp
jne
fistps
mov
loope
xchg
sub
daa
ds
test
xchg
stos
mov
insb
jo
test
sbb
mov
pusha
inc
mov
cmpsl
addr16
js
leave
hlt
lock
or
inc
inc
cld
shrl
mov
std
clc
cwtl
push
sbb
push
push
adc
pop
movsl
mov
xchg
mov
sub
movsl
mov
and
ds
mov
sbb
cs
fistps
out
adc
mov
add
fstl
pusha
imul
fisubrl
jb
jmp
mov
das
rcl
sub
push
out
stos
push
sti
inc
mov
call
push
mov
xor
jb
xlat
sbb
mov
loope
lock
mov
dec
fldenv
cld
in
imul
dec
mov
add
jmp
add
lret
jo
imul
mov
pop
add
sbb
sti
mov
cs
out
hlt
mov
cmpsb
and
jbe
add
jae
pop
clc
add
in
mov
es
or
pusha
sub
or
sub
pop
or
fwait
mov
dec
nop
mov
and
lret
jns
das
pop
and
rol
dec
nop
stos
hlt
jge
icebp
inc
repz
shll
iret
dec
test
pop
fidivl
bound
jecxz
stos
adc
fwait
or
in
or
int3
cli
jb
fcomps
repz
cmp
popa
sahf
ja
inc
inc
sbb
adc
pop
xor
push
push
repnz
adc
test
and
push
jge
sbb
xchg
fnsave
xor
out
repz
pop
lahf
sub
icebp
or
push
dec
lds
cmc
sbb
push
adc
insb
and
or
jns
jecxz
inc
pop
xor
xchg
xchg
jns
and
shlb
hlt
outsl
pusha
add
addb
or
adc
sti
mov
jle
std
popf
addb
stc
jmp
idiv
xchg
lret
xchg
or
jecxz
subl
push
stc
dec
mov
mov
add
xchg
ja
inc
fldl
ret
bound
fisubl
sub
inc
inc
mov
in
int3
sbb
insb
ret
sbb
dec
push
and
test
inc
mov
inc
mov
add
lret
outsb
sti
mov
leave
cli
and
clc
aaa
sbb
cmpsb
andb
sbb
dec
dec
mov
loopne
rcrb
mov
sub
mov
pop
fnsave
in
xchg
aas
out
sahf
loop
insb
xor
and
xchg
hlt
icebp
mov
movsl
shlb
cld
test
imul
subb
inc
or
jle
leave
mov
mov
inc
or
scas
inc
inc
add
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
into
sti
xchg
jbe
jno
loop
iret
adc
push
and
push
and
push
out
mov
daa
inc
xchg
sub
mov
outsb
xor
push
push
add
loope
fcoms
ss
test
and
mov
mov
xchg
in
arpl
mov
cmp
imul
adc
jp
test
and
lea
nop
push
push
mov
stos
lcall
jne
cmp
fs
std
leave
xorl
lds
aad
dec
stos
cltd
mov
ret
fwait
lret
xor
mov
aad
xchg
jne
sub
imul
mov
sub
movsb
adc
enter
sbb
add
pop
adc
stc
inc
cmp
lock
push
adc
mov
dec
popa
loopne
xchg
and
lds
adc
pop
sub
fwait
sbb
mov
hlt
ret
loope
jne
outsb
adc
gs
imull
sti
dec
not
sub
and
fidivs
sahf
lahf
fwait
in
xorb
push
addl
scas
xlat
ss
inc
ror
into
jle
stc
cmpsb
dec
xor
daa
dec
inc
in
inc
stos
sub
cmp
and
cltd
pop
push
stc
mov
mov
out
loopne
pop
adc
scas
lret
shrl
pop
adc
enter
sub
dec
fwait
in
mov
add
mov
pop
push
push
and
fldenv
jns
jp
and
out
pop
dec
sbb
lods
mov
xor
lea
jb
mov
insl
pop
xchg
xchg
mov
std
fwait
push
aaa
aaa
lret
mov
jle
mov
xchg
dec
push
cli
cmpb
jg
scas
adc
aas
call
xchg
push
dec
popa
into
gs
push
cmpsb
mov
out
jl
xadd
mov
ljmp
mov
loop
sub
rcl
leave
pop
imul
add
push
scas
or
adc
push
test
xchg
lcall
cld
out
loop
sub
loopne
add
add
cli
int3
push
push
mov
int
in
push
jbe
jns
cmp
inc
push
mov
mov
call
sub
in
stos
outsl
mov
push
popf
fld
test
loop
cvtps2pi
adcb
ficoml
sub
add
pushf
pop
fsubs
fdivl
negl
arpl
orl
add
dec
rol
or
pop
xor
mov
pop
popf
mov
test
iret
cmpsb
xor
mov
call
pop
jno
nop
js
mov
sbb
xor
gs
lcall
pop
mov
bound
adc
cs
in
or
dec
inc
aam
repnz
dec
xchg
out
repz
adcl
or
stos
fucomi
push
aam
shlb
cmp
addl
scas
mov
pop
xor
repz
cltd
dec
mov
je
jnp
ret
mov
push
mov
adc
fstpt
movsbl
pop
add
int3
add
xchg
jle
shlb
mov
and
sti
fsubs
push
xor
les
jo
icebp
mov
mov
jl
das
mov
sbb
jecxz
aad
jmp
jg
cld
mov
jae
push
sub
mov
into
insl
jnp
jecxz
out
popa
adcl
js
mov
jnp
pushl
mov
mov
loopne
cmc
lahf
cmp
adc
outsb
mov
xchg
es
xor
inc
pop
push
sbb
dec
jno
mov
nop
pop
imul
fildll
pop
add
pop
out
pop
jno
aaa
push
sti
inc
in
adc
scas
cli
xchg
inc
xchg
fprem
cmp
hlt
xor
push
mov
mov
push
sete
cmpsb
test
push
cltd
jne
test
mov
fmull
sub
push
scas
stos
inc
pusha
add
push
lds
dec
sbb
lods
mov
lods
and
mov
popa
lret
fsub
js
mov
sti
adc
mov
push
enter
adc
adc
xor
fcmovu
and
pusha
sub
das
xchg
scas
in
mov
pusha
pop
push
flds
add
mov
cli
lods
repz
cli
movswl
mov
cmp
mov
inc
sbb
popw
int
pop
aam
push
sub
or
pop
sbb
loop,pt
push
mov
cwtl
pop
xchg
mov
jl
mov
arpl
or
mov
sti
flds
cmp
pop
fdivrp
cmp
mov
push
loope
add
cmp
clc
pop
lret
shlb
push
ret
mov
sub
out
inc
cmp
stos
ljmp
pop
jg
addb
jmp
sbb
test
lcall
movsl
cmpsl
lret
inc
or
dec
sbb
loope
jge
sub
cmpsl
jl
dec
jno
mov
or
test
adc
adc
jbe
jno
loop
mov
inc
pop
dec
iret
iret
sub
adc
adc
sub
and
push
test
subb
lret
punpcklwd
int
and
dec
push
or
mov
or
jecxz
inc
les
xchg
add
adcb
insl
or
or
jp
test
adc
mov
jle
xchg
es
loope
and
jge
mov
fstl
and
dec
or
adc
sub
jge
xchg
mov
jns
loop
lds
mov
es
mov
mov
aaa
daa
mov
or
rcll
dec
xor
rcl
mov
push
enter
xlat
insb
fildll
jno
sub
sbb
loop
dec
pop
addr16
js
negl
int3
enter
ret
mov
jl
arpl
mov
xchg
xchg
and
jmp
inc
push
sub
ficoms
dec
jbe
inc
jl
movl
pushf
sahf
mov
lret
in
pop
mov
jo,pt
dec
dec
push
jns
push
jge
mov
jmp
add
push
out
push
mov
stos
sbb
mov
rcrb
sarb
test
pop
and
test
stos
in
fldcw
adc
std
fisubrs
mov
cltd
loop
out
lock
and
pop
jae
shll
mov
adc
pop
mov
pop
js
sbb
das
shl
inc
cld
and
pop
mov
gs
psadbw
mov
lret
cmpl
xchg
in
add
mov
sbb
push
inc
jl
fidivrl
mov
push
stc
scas
mov
dec
xchg
les
gs
sub
and
fists
and
add
pop
lcall
xor
call
mov
fcmovnbe
xor
outsb
daa
insb
out
adc
mov
clc
jle
mov
jmp
push
jmp
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
xor
adc
addl
fmuls
push
in
mov
jns
cmp
fnstenv
xchg
imul
fldcw
imul
pop
divl
stos
mov
sbb
cmpsl
lea
sub
and
mov
into
fidivrs
test
jbe
cmp
dec
push
adc
cmp
mov
mov
jns
aam
xor
dec
push
fstpt
push
rcrl
cmp
or
or
mov
daa
popf
idivb
mov
in
movsl
into
and
pop
dec
lea
jecxz
ret
cmp
adc
mov
mov
lds
ja
jno
pop
sbb
pop
and
fs
mov
out
sbb
rorl
xchg
rorb
imul
test
inc
es
out
insb
add
pusha
jle
ljmp
mov
push
popa
inc
adc
insb
leave
inc
push
dec
mov
pusha
in
std
add
aam
test
inc
jp
mov
or
fidivs
test
fwait
lret
or
leave
cmp
outsb
icebp
mov
cld
mov
jmp
or
push
aaa
iret
arpl
inc
loope
stos
inc
movb
into
sbb
in
jo
mov
test
jp
sbb
sahf
mov
pushf
and
adc
div
aad
cld
xchg
and
pop
sub
test
insb
cli
jl
mov
jnp
in
cs
adcb
xor
push
fcomp
rorb
inc
inc
hlt
stc
xchg
sbb
xor
icebp
pop
mov
sub
push
cmp
xor
xorl
addl
jno
mov
test
dec
jp
cmp
stos
mov
lret
cmp
shl
mov
pop
push
add
cmp
cmpsl
inc
xorl
das
inc
fcoml
jge
add
outsb
sbb
add
arpl
scas
ss
mov
paddsb
mov
inc
jne
loop
stos
adc
insb
adc
adc
pop
mov
cmp
lret
push
loope
lret
mov
sub
int
divb
sub
inc
popf
sbb
mov
push
jecxz
ficoms
out
or
xchg
cmp
stos
add
cmpsl
xchg
enter
ret
dec
ss
xchg
dec
les
cwtl
ja
lret
fs
jle
imul
jbe
mov
lds
aam
test
lret
mov
lcall
mov
inc
cmp
bsr
pop
lcall
cwtl
sub
ljmp
jg
pop
sbb
insl
pop
push
call
out
mov
mov
lds
xchg
push
push
sbb
add
sbb
and
xor
or
and
xchg
mov
icebp
sub
jle
mov
scas
ds
add
icebp
mov
jl
fdivl
mov
jmp
popa
add
mov
sbb
subl
sbb
repnz
out
cs
dec
jp
mov
inc
je
add
adc
jne
push
outsb
mov
or
jo
sub
test
iret
sbb
nop
leave
inc
jl
sbb
jnp
cmp
mov
and
jbe
fstpl
or
cmp
xor
add
sbb
lods
sahf
mov
inc
or
cmp
sub
dec
pop
in
lea
jecxz
mov
mov
movsl
xchg
movsb
rcr
cmpsl
arpl
jle
rorl
loope
ds
int
and
mov
scas
loope
nop
test
jne
add
std
adc
repz
dec
mov
push
ret
jg
fsubrl
jl
cld
push
shl
popa
cmc
dec
inc
pop
and
inc
into
movsl
cmp
mov
mov
xchg
aaa
inc
dec
rorb
jns
std
mov
not
sbb
sti
push
dec
fwait
movsl
fistl
push
cmpl
mov
in
or
repz
xchg
clc
xchg
daa
int
call
xchg
mov
decl
adc
xchg
mov
leave
vcmpss
outsl
adc
sbb
cmp
and
mov
push
xor
into
xlat
inc
lods
int
ret
iret
das
push
les
repz
or
push
lea
in
mov
pop
sub
add
push
arpl
jmp
inc
sbb
mov
jg
cmp
xchg
pop
push
jp
data16
ficompl
fsubrs
test
movsl
xor
insb
mov
cmpb
repnz
in
hlt
int3
jbe
mov
or
jo
sub
pusha
shr
mov
push
mov
mov
mov
lahf
inc
addr16
std
inc
dec
add
push
or
daa
je
fwait
scas
pop
cmp
jmp
push
js
rcl
mov
imul
inc
xchg
jmp
jb
inc
into
inc
aas
imulb
or
pushf
repz
push
sub
sbb
mov
inc
xor
mov
mov
loop
leave
call
test
dec
out
pop
popf
mov
outsb
add
or
call
pop
add
inc
push
push
jb
sub
xor
pop
mov
lahf
out
push
or
mov
test
sahf
or
xor
repz
cmp
lret
xor
leave
jns
push
jno
andl
mov
jl
mov
es
aaa
and
imul
fcoml
xchg
iret
dec
idivl
stos
add
mov
ficoms
cmp
push
xchg
sub
test
xchg
shr
xor
out
out
mov
inc
fdivrs
outsb
push
cs
sbb
hlt
xchg
push
repnz
aaa
sbb
inc
dec
das
aas
push
sbb
lahf
test
fsubl
pop
push
mull
mov
lods
loope,pt
add
aas
idiv
jmp
pop
insb
data16
fcoms
mov
lret
pop
xchg
jmp
mov
sbb
pop
popf
mov
mov
xor
xchg
mov
pop
incb
mov
jnp
out
or
adc
pop
adc
gs
jmp
or
subb
cs
dec
in
mov
into
push
inc
icebp
sub
nop
push
outsl
and
pop
mov
sti
push
jg
pop
jecxz
pusha
in
mov
jmpw
push
stc
enter
pop
insl
xchg
add
lahf
fs
pop
inc
or
xchg
xlat
sti
dec
mov
cld
mov
repz
aad
call
jmp
xchg
cmp
cwtl
cld
xor
xchg
pop
mov
and
pop
insl
xorb
repz
sub
js
aad
pop
push
pop
lret
inc
out
mov
add
jg
test
outsl
daa
in
add
movb
add
adc
mov
cwtl
pop
sti
dec
and
jle
add
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
mov
adc
addl
mov
gs
out
mov
inc
mov
cmp
lcall
jae
scas
lds
test
lcall
ljmp
pusha
js
loop
nop
or
fildl
stc
cltd
jbe
adc
cld
movmskps
cmpsl
or
xchg
push
popf
sbb
mov
repnz
sub
mov
pop
lock
stos
sub
mov
jae
dec
sahf
fbld
scas
shrb
shlb
orb
and
insb
insl
mov
mov
sarb
xchg
int3
xor
in
pop
inc
add
sahf
popa
inc
sub
mov
lret
outsl
sub
or
mov
outsl
cltd
hlt
mov
jp
inc
das
xor
popf
cmc
add
inc
bound
std
sub
push
jo
push
jl
push
jle
or
cmp
movsb
mov
push
aad
push
mov
or
sbb
pop
ret
xor
add
out
clc
xchg
jnp
xor
pop
sub
into
mov
cmp
pop
addr16
adc
xor
xor
out
jnp
int
jecxz
fwait
sub
pop
pop
or
and
xchg
lds
sub
mov
xchg
int3
aam
inc
mov
mov
pop
mov
jno
adc
loop
cmp
pop
lock
int
test
xor
in
pop
mov
pop
fsubl
int3
ljmp
shll
loope
int
outsl
in
and
shll
pop
jl
iret
mov
les
test
test
repz
xor
daa
push
std
popa
mov
hlt
jge
in
jno
pop
sbb
mov
cmpsl
and
test
mov
repnz
sub
pxor
cmc
sbb
ds
add
out
shll
mov
adc
jge
aad
das
das
mov
xchg
lods
lock
ds
test
xchg
mov
sbb
fmuls
jmp
xchg
jp
add
aam
divl
dec
ret
shlb
adc
jg
mov
mov
jmp
enter
andb
iret
jno
mov
push
jae
stos
fistpll
cli
cmp
ja
out
mov
stos
mull
idivl
inc
test
bound
mov
mov
pop
xorb
push
sti
mov
push
push
scas
fdivl
leave
movsl
sbb
mov
stc
mov
js
pushf
cmp
aas
jl
or
outsb
adc
dec
int3
jae
cmp
lea
jle
shlb
mov
lcall
aad
popa
mov
data16
xlat
lret
iret
fisttpl
add
pop
add
cltd
stos
push
sub
inc
jmp
in
xor
test
dec
mov
iret
std
inc
mov
fwait
dec
sarb
pop
scas
mov
in
mov
or
mov
fbstp
int3
jge
fdivl
cs
push
push
xor
mov
ja
push
mov
jecxz
pop
adc
and
mov
inc
stc
add
imul
push
inc
mov
es
jns
cld
shll
dec
pop
std
in
xchg
fimuls
mov
sahf
mov
adcb
outsl
push
mov
push
push
add
xchg
cmp
sahf
lahf
test
hlt
mov
pop
data16
jl
cwtl
jns
inc
mov
mov
adc
shll
int3
sbbb
je
xbegin
xor
sbb
inc
popa
in
lods
stos
outsl
sub
cltd
ds
test
push
cmpsb
das
add
test
orb
pop
movsl
xchg
imul
insb
call
lret
or
adc
and
stos
xor
cmp
jp
in
sarb
cld
sti
push
js
repnz
loop
outsl
xchg
dec
sub
cltd
rclb
fwait
arpl
shll
sbb
fdivr
xchg
ret
xchg
xchg
pusha
adc
cmp
icebp
add
jb
mov
adc
push
mov
xchg
jl
inc
cwtl
dec
and
xchg
imul
push
sbbl
pop
je
adc
fcoml
add
test
pop
gs
adc
fdivr
mov
xor
into
and
insl
fisttpl
sub
mov
leave
or
adc
dec
mov
push
mov
jns
and
insl
in
push
outsl
mov
std
mov
rcll
icebp
push
jmp
dec
bound
xor
icebp
pop
dec
inc
pop
sub
push
mov
lds
jbe
dec
xchg
fiadds
daa
outsb
outsb
shll
sub
push
xchg
pop
addl
imul
icebp
and
jg
dec
data16
das
inc
cmp
xor
jae
adc
lea
xchg
xlat
push
and
out
xor
imul
mov
cmp
in
inc
xchg
push
fistl
ds
push
dec
jecxz
cmpsl
int3
add
mov
cwtl
and
imul
mov
int3
aad
adc
mov
mov
push
aad
in
push
adc
fwait
out
hlt
js
inc
push
xor
inc
daa
mov
cmp
xchg
icebp
mov
imul
sub
rorb
or
loope
insl
adc
into
int3
in
lods
out
or
sub
mov
sub
xchg
cmp
sub
adc
or
push
decl
loop
aam
insl
push
rclb
lcall
jle
pop
mov
adc
fnstsw
xor
test
ss
shl
hlt
lcall
stos
sub
mov
xorl
int
mov
mov
test
call
les
lret
jp
xchg
mov
out
adc
arpl
push
mov
pop
pop
mov
jmp
pop
jmp
sbb
sub
ja
jle
out
adc
add
loopne
add
inc
jmp
jg
push
xchg
mov
push
test
xor
pop
outsl
sub
insl
xlat
adc
ret
push
outsl
jecxz
aad
lds
icebp
sub
inc
call
negb
cmp
mov
xor
mov
lods
and
cwtl
cld
addr16
adc
mov
mov
push
fbld
loop
and
cmpsl
loopne
mov
pop
or
outsl
jb
mov
test
dec
push
out
repz
shl
push
in
ret
gs
jo
call
cmp
js
fwait
mov
stos
into
jecxz
pop
lods
movsb
fwait
xor
xchg
rolb
inc
mov
shlb
ret
movsb
cltd
inc
push
shrl
movsb
jne
jbe
or
sub
orl
mov
js
stos
scas
in
aad
popf
push
out
mov
lahf
mov
lcall
cmpsb
js
pop
pop
lcall
xor
movsb
adc
jmp
xchg
pushf
imul
gs
je
mov
dec
andb
ss
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
fisubs
lret
xchg
jl
mov
xor
jmp
dec
mov
push
push
ds
mov
or
mov
dec
adc
mov
out
or
test
rorl
or
xchg
xor
out
les
cmp
icebp
loope
nop
sub
rol
cmpsl
mov
sbb
lods
dec
outsl
aaa
shll
cmp
mov
ret
negl
push
ds
push
mov
out
cmp
inc
add
dec
jl
jl
pusha
pop
lods
cltd
dec
lcall
test
push
jnp
out
fwait
insb
fisttpll
cs
push
divb
fistps
xchg
clc
in
mov
icebp
cli
cs
mov
xchg
and
cs
test
outsb
test
jl
mov
jg
fidivs
in
push
call
jne
and
cmp
mov
add
test
cmpsl
cmp
dec
int
mov
out
pop
add
hlt
push
mov
jge
shlb
outsl
dec
out
cmp
cmpsl
sbb
add
scas
jns
gs
mov
lret
push
push
jnp
pusha
push
jge
fxch
dec
lock
les
loop
jno
pop
iret
bound
mov
scas
fs
jmp
ret
scas
xor
cmp
int3
int
and
pop
push
jecxz
adc
inc
jns
fidivs
add
mov
push
sub
jl
mov
push
das
scas
push
ds
aam
rorl
in
sub
std
adc
pop
xbegin
mov
pushf
sbb
and
ss
ret
push
ret
inc
dec
jb
sub
cmp
sub
cmc
jnp
sahf
aam
test
adc
fnstcw
xlat
in
hlt
xor
fcompl
push
sahf
push
xor
rorl
pop
push
loope
mov
or
enter
in
mov
sbb
pop
clc
sti
aad
test
jp
xchg
jge
inc
xor
adc
das
dec
ret
xor
orl
fs
push
test
inc
add
xor
out
or
mov
sar
aad
ss
loope
jge
xchg
xchg
mov
lret
jne
push
pushf
cmpsb
int
dec
xor
mov
lret
ret
jge
cmp
cmp
jo
movsl
dec
inc
sub
in
mov
add
out
es
or
cli
lcall
sbb
fcomip
ss
fdivrs
push
cltd
push
enter
pop
fs
xor
or
es
rolb
test
cmp
daa
stos
add
mov
mov
scas
jns
mov
pop
pop
test
loopne
lcall
sti
out
rol
xor
orl
cmp
mov
mov
call
sarl
orl
shr
call
aas
ds
dec
ds
scas
leave
packuswb
adc
and
adc
outsl
dec
pushf
sbb
xor
je
mov
sub
inc
dec
adc
dec
cs
insb
or
mov
mov
xchg
xlat
andl
jnp
push
jmp
or
pop
cltd
dec
push
jnp
iret
jb
and
jle
xchg
sbb
sub
es
pop
in
mov
mov
inc
daa
out
jp
adc
nop
call
dec
add
or
cmp
bound
cs
call
nop
lods
xlat
pop
jmp
sbb
or
int3
cmc
adc
fbld
and
mov
push
es
mov
dec
sbb
cmp
jno
lret
pop
rolb
popa
mov
sarl
sbb
hlt
dec
ja
sub
test
adc
rcl
in
outsb
repz
jecxz
jae
adc
ret
in
lea
notb
jp
insb
xor
rcrb
into
or
mov
clc
cmp
inc
push
xchg
pop
imul
fiadds
mov
mov
cmp
pushf
cltd
roll
cmpsl
jne
in
ss
dec
pop
xchg
fwait
sub
sbb
fadds
fldpi
jp
les
add
pop
and
xor
jnp
cmp
cmpsb
xchg
cmpsb
in
dec
inc
dec
dec
lret
push
repz
add
cpuid
shll
jnp
xchg
push
inc
mov
mov
xchg
pop
lret
jl
int3
cmc
sub
jae
jns
mov
gs
fwait
sti
pop
cli
hlt
mov
pcmpeqw
cmp
dec
sub
adc
jo
or
pop
arpl
xchg
out
and
cmp
sub
lret
out
andl
outsb
imul
in
in
inc
popa
xchg
negl
mov
push
std
leave
mov
sbb
test
sub
mov
insb
xchg
iret
call
inc
std
mov
hlt
pop
mov
jb
jg
iret
mov
xchg
call
inc
jle
sub
leave
lds
in
jg
dec
arpl
dec
enter
cmp
test
sti
shll
cli
das
jae
mov
in
mov
jb,pt
pop
mov
pop
imul
add
dec
popa
in
cmc
leave
inc
xchg
mov
enter
and
and
add
js
cltd
push
dec
sbb
in
push
xlat
mov
and
mov
pop
cmc
inc
lahf
stc
xchg
adc
push
nop
daa
push
jno
adc
ret
mov
inc
mov
jae
and
push
subb
stos
jne
mov
cmp
sbb
scas
ljmp
sub
arpl
lcall
nop
add
cmpsl
daa
out
mov
imulb
xlat
shl
mov
mov
int
inc
insb
sbb
pop
push
xchg
mov
jnp
mov
cmp
popf
jnp
push
adc
or
cmp
pop
cmp
cmp
data16
push
jg
inc
add
pop
push
mov
xchg
push
lret
jl
xchg
dec
adc
or
enter
inc
xchg
pop
lea
popl
out
jg
jns
jnp
ljmp
les
sbb
xorb
mov
and
xlat
dec
jmp
cmp
adc
xchg
mov
repz
adc
sbb
es
mov
cmp
pop
push
fists
pop
les
and
cltd
in
fistl
adc
jae
imul
int
ds
cmpsl
scas
arpl
pop
push
sahf
dec
or
jno
pushf
mov
inc
into
pop
xor
loopne
fwait
dec
sub
lds
fwait
dec
and
jl
or
xlat
rcl
inc
mulb
in
idivb
aad
lret
mov
lea
pop
adcb
jle
jno
movsl
push
ja
lea
aad
ljmp
or
movsb
jns
push
iret
sub
out
fsubrs
jmp
xor
mov
pop
cwtl
adc
or
leave
shll
and
in
repz
pop
pushf
xchg
cmp
fldt
loopne
daa
mov
push
subl
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
mov
xor
jno
data16
cmp
mov
jns
movsl
mov
repz
mov
cmp
xchg
cmp
mov
insb
sub
test
pop
sub
out
clc
imul
lods
orl
aas
es
and
test
imul
std
test
shlb
jno
adcb
push
mov
addr16
mov
adc
mov
mov
push
fmulp
rorl
lods
popa
repnz
xor
and
pop
stc
mov
fistl
inc
dec
mov
rol
test
fcoml
jl
cmp
jg
xor
xchg
push
int3
and
out
mov
cmp
pop
shrb
pusha
scas
adc
sub
inc
cmp
sub
xor
addr16
adc
pop
rcrl
xor
repnz
out
jbe
fcomps
fwait
jns
push
and
add
pop
jns
and
std
leave
pusha
mov
dec
and
shl
ljmp
mov
pusha
loop
lea
sbb
fwait
addl
popf
or
cmp
dec
inc
xchg
loopne,pn
aas
aaa
jmp
xor
jle
add
aad
out
mov
loope
mov
or
movl
xor
sahf
adc
imul
icebp
sub
sub
int3
icebp
inc
dec
push
bound
dec
and
test
test
pop
scas
lcall
push
shl
mov
pop
lret
popa
jge
cs
push
test
push
mov
loope
hlt
adc
idiv
xor
jl
jnp
adc
icebp
or
cmp
push
lds
adc
add
push
repnz
dec
lods
pop
shrb
push
jae
jmp
loope
cmp
out
inc
inc
repnz
cmp
pop
and
mov
mov
scas
imul
adcb
mov
hlt
add
mov
and
fildll
inc
pusha
jae
xchg
adc
jecxz
sti
mov
xchg
pusha
mov
test
lahf
push
sarb
addl
notl
sub
aaa
xchg
pop
sbb
imul
pop
dec
int3
test
mov
sbb
bound
in
add
dec
orb
mov
or
jo
jle
int3
test
mov
mov
inc
sbb
int3
fisubrl
add
aas
sarb
xchg
scas
sub
and
sti
imul
inc
push
outsl
stc
aaa
lock
sub
jae
fdiv
int
imulb
jle
and
inc
jl
cmp
xor
inc
ljmp
addb
dec
mov
cmp
loopne
pop
sbb
cmp
inc
pop
lahf
and
push
cs
test
adc
fildl
stc
lods
iret
jno
mov
test
add
stc
in
std
push
mov
aad
mov
int3
sub
stos
sarl
repnz
mov
pop
sub
nop
hlt
fistpll
repnz
inc
inc
pop
adc
hlt
jno
icebp
sbb
jb
ret
adc
cmpsb
mov
icebp
stos
jp
insl
sbbl
mov
jge
xchg
or
incb
popf
jp
rcll
out
jmp
adc
es
push
mov
dec
mov
adc
loopne
cmp
cmp
sub
rorb
or
inc
lret
mov
fnsave
cmp
adc
pop
inc
test
cmp
call
cmp
dec
cmp
mov
add
adc
xchg
mov
jg
stos
or
push
stos
cmp
mov
dec
jecxz
outsb
mov
outsb
sti
es
daa
in
xchg
dec
add
dec
mov
mov
and
mov
ljmp
or
or
leave
lock
dec
in
mov
cmp
cmc
and
loop
inc
xchg
repz
movsb
lret
loopne
ss
mov
call
push
push
jnp
xor
jmp
xchg
lcall
pusha
pop
sahf
loope
andb
incl
js
jae
mov
ret
lock
lcall
push
push
nop
scas
jmp
add
dec
leave
out
cmp
sub
adc
rcrb
xor
mov
ret
and
fnstsw
mov
mov
add
iret
out
cmp
add
movsb
ret
adc
je
jo
cmp
push
mov
and
pop
or
insb
aas
rclb
cmpb
divl
shr
outsl
add
push
arpl
dec
pop
test
lcall
mov
jle
xor
shll
jbe
cltd
cltd
jo
lods
out
jle
leave
pop
lock
hlt
sbb
jg
lock
fcoms
fstpt
cltd
pusha
dec
loop
or
push
gs
fisubrl
push
mov
sbb
mov
xor
jge
test
bnd
xor
or
icebp
jle
gs
repnz
mov
in
lods
std
mov
mov
mov
mov
lock
int
xchg
cs
xchg
std
and
xchg
outsl
pop
mov
sub
dec
sbb
adc
ret
jns
insl
mov
and
adc
sti
mov
push
sbb
cmc
add
push
std
out
movsl
mov
add
ljmp
in
inc
stc
nop
mov
push
cltd
shrb
mov
or
movsl
mov
test
lds
inc
fs
clc
sbb
mov
dec
imul
mov
inc
shl
push
jmp
inc
sub
bound
loopew
push
pop
int3
das
aaa
cwtl
xor
ja
inc
jae
and
fcoml
push
pop
push
or
outsl
in
test
cmpsl
adc
addl
sub
and
mov
mov
add
cs
cli
out
pop
shlb
xchg
sbb
mov
pop
test
sbb
jne
adc
push
xchg
lods
xlat
gs
mov
scas
mov
sahf
fisttps
adc
lcall
or
lock
test
aas
dec
sub
xchg
sbbl
testb
adc
lds
in
pushf
out
push
mov
in
inc
pop
jno
inc
mov
addb
cmp
sbb
jmp
call
inc
adc
jg
je
inc
rol
test
fsubrs
cwtl
bound
fstpt
mov
incb
sbb
adc
inc
jge
xor
in
stos
gs
cltd
jnp
lret
adc
fdivrs
fwait
jae
adc
loopne
std
cmpsb
jns
nop
jmp
xchg
jb
popf
cmpsl
xchg
sbb
ljmp
push
mov
inc
outsl
jecxz
mov
jo
enter
or
and
add
movl
add
call
inc
inc
add
inc
add
loope
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
xlat
imul
call
insb
test
lcall
dec
jecxz
push
insl
ss
inc
shlb
cmp
mov
int3
popa
xor
sub
loop
dec
pop
lahf
aam
rcrb
dec
or
lcall
aam
and
jl
insl
dec
ds
or
sbb
mov
mov
cmp
push
jne
adc
and
out
fildl
and
push
cli
gs
mov
ja
repz
fisubs
repnz
int
xchg
or
mov
jmp
add
cmp
add
arpl
mov
push
popa
int3
scas
ret
inc
pushf
mov
xor
ret
into
sub
push
ret
pusha
movsl
xchg
jae
xchg
or
data16
stc
lea
aad
jecxz
es
jns
ret
push
fiaddl
jnp
cmp
aas
and
xchg
sbb
popa
mov
mov
mov
sarb
inc
sub
pusha
mov
mov
cmp
std
mov
ljmp
outsb
pop
jb
lock
xacquire
test
jp
jl
das
dec
pop
mov
fcmovb
pushf
push
mov
test
mul
rcrl
int3
out
lods
inc
mov
jns
push
notl
adc
repz
int
mov
mov
push
sub
dec
pop
mov
mov
and
fsubrs
adc
add
cmp
cmpsl
lea
sahf
icebp
xchg
xor
add
fnstenv
sbb
cmp
jae
sbb
lods
arpl
xchg
stos
popf
call
jno
mov
add
add
mov
add
jg
hlt
jo,pt
jno
out
imul
mov
xchg
mov
gs
or
test
lret
jl
aas
mov
ficoms
shlb
gs
cmp
mov
add
rclb
inc
fstl
movsb
mov
fnstcw
cmp
stos
test
lds
dec
xchg
sbb
push
sbb
js
mov
xlat
imul
mov
push
fdivl
mov
stos
pop
xor
ficoms
nop
inc
imul
aaa
mulb
ds
mov
mov
aaa
pop
and
xchg
shll
add
jns
pop
mov
push
pop
dec
add
in
lds
sbb
add
test
add
push
js
int
xchg
call
lds
out
mov
cmp
sub
push
push
iret
outsl
in
xchg
xor
cltd
les
mov
inc
xor
ljmp
in
aas
ret
and
hlt
inc
dec
sbb
jl
mov
jmp
scas
fwait
enter
xlat
adc
xchg
adc
testl
jge
mov
jg
cmp
and
hlt
jne
push
bound
inc
pushf
cld
in
std
lock
loope
cmp
outsl
or
or
mov
inc
outsb
add
xchg
ficoms
cmp
insb
lcall
imul
push
dec
into
mov
andl
mov
arpl
call
sarl
dec
xor
sahf
sub
stos
dec
test
addr16
call
jnp
xchg
loopne
xchg
push
sub
inc
push
ret
push
ret
addr16
cmc
stos
mov
test
loopne
inc
imul
sub
call
jae
jmpw
push
sub
data16
fcmovnu
ret
enter
popa
mov
adc
flds
mov
mov
mov
add
mov
jg
stc
push
add
adc
loopnew
mov
call
insb
shlb
mov
sbb
cmp
adc
fs
shl
cmp
fs
push
cmp
sub
fs
mov
dec
fwait
and
mov
insb
push
imul
push
dec
movsb
mov
iret
dec
or
gs
cmp
lds
sub
push
or
add
inc
cmp
adc
push
flds
push
add
inc
cltd
imul
push
mov
mov
and
test
pop
arpl
sbb
sbb
or
xorb
ss
popa
ficomps
or
fnstenv
jle
fimuls
bound
jbe
lods
arpl
mov
das
pop
lods
aaa
hlt
inc
adc
mov
sti
mov
mull
aad
add
aad
ss
jno
int
pushf
mov
and
xchg
ds
je
jl
and
mov
fcompl
or
jecxz
xchg
add
mov
outsl
shlb
lret
in
fimuls
mov
mov
ror
cmp
pop
data16
dec
shrl
pop
dec
pop
pop
js
repz
xor
mov
and
movsl
cwtl
loopne
sbb
jno
add
mov
xor
daa
and
fwait
ljmp
idivl
xchg
jle
push
out
cwtl
in
jge
xor
or
push
stos
hlt
mov
loop
popf
orb
cmp
sub
adc
hlt
pop
js
js
xchg
adc
fdivl
or
cltd
push
gs
xor
out
pusha
pop
jo
xor
lcall
sbb
jne
push
icebp
orb
loop
sub
in
jbe
int3
pop
sbbb
sar
rorb
sub
imul
or
fstpl
mov
fisttps
aam
lcall
xchg
xlat
or
fbld
jns
fs
stc
in
push
das
dec
fistps
mulb
adc
jno
repz
test
cmc
cmp
lcall
lahf
mov
add
cmp
or
xor
fidivrs
scas
andl
xchg
imul
out
push
cwtl
xlat
jnp
pop
cli
out
jg
in
scas
fcomps
mov
mov
pop
mov
jle
dec
movsl
mov
xlat
sub
and
jbe
in
or
adc
dec
and
mov
cwtl
sub
sub
cmp
fmull
movsl
lret
je
pop
and
cs
insl
xor
push
pop
push
mov
mov
ficompl
stos
daa
mov
push
jg
in
push
cwtl
mov
in
ret
mov
lcall
cld
pop
xorl
test
daa
insb
mov
jg
cli
sub
or
dec
mov
pop
xor
inc
aas
mov
js
je
icebp
bnd
jl
test
cld
dec
lret
dec
pop
xor
pop
leave
fstpl
cmp
addr16
inc
je
mov
lods
leave
ret
les
popf
rcrb
jb
adcl
out
inc
lcall
imul
sahf
ss
leave
loopne
test
cmp
add
mov
mov
scas
lret
stos
push
cmp
icebp
push
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
outsl
out
scas
adc
jno
test
int
push
jne
jbe
call
xchg
scas
aad
out
movsl
test
sub
inc
bound
rolb
das
mov
scas
hlt
mov
mov
notb
movsl
dec
xchg
das
cli
dec
les
ljmp
mov
mov
pusha
mov
pop
add
add
into
mov
xchg
sub
dec
xor
push
aam
shll
pop
sub
mov
push
stc
mov
sbb
sbb
mov
push
addr16
stc
addb
push
das
ret
mov
push
pop
xor
ss
aas
into
enter
mov
add
inc
sbb
sbb
fwait
push
xchg
adc
mov
repnz
jno
imul
sbb
xor
popf
cld
imul
mov
cmp
lahf
sbb
xor
pop
addr16
and
inc
imul
out
adc
in
or
xchg
stos
xor
or
pop
cmp
adc
jmp
jns
movl
fsubrl
ficoml
out
jle
sbb
push
push
xor
rolb
inc
xor
lret
jbe
pop
arpl
insb
loop
sbb
fsubrl
or
cmpsl
mov
push
mov
repz
mov
add
cmp
push
push
mov
scas
adc
adc
stos
inc
dec
scas
xor
pusha
pop
cld
idivl
xor
jnp
push
cmp
xchg
mov
xor
mov
lods
int
mov
cmp
jle
sbb
fbld
jge
nop
flds
add
sbb
stc
sbb
mov
nop
pusha
aad
sbb
cmp
push
scas
mov
sti
test
push
cmp
pop
out
jbe
popa
push
lods
sub
mov
test
fsubp
sub
rcrb
cld
mov
pop
lret
aaa
filds
shll
adcb
or
jmp
pop
add
lahf
int3
push
adc
ficoml
lahf
and
dec
out
fstl
test
movsl
mov
mov
incb
add
ja
fcoms
mov
gs
push
je
mov
sti
jecxz
sub
cmp
ret
mull
push
mov
adc
push
jg
rcll
scas
std
faddp
inc
adc
leave
mov
pop
cli
dec
lods
cli
out
mov
xor
out
mov
xchg
push
test
enter
test
test
das
mov
std
test
lea
std
sarb
sbbb
decb
ss
or
pop
lock
xchg
dec
mov
out
inc
push
insl
stc
repnz
ret
lret
fs
add
jbe
mov
mov
xchg
cmpsl
out
cli
pop
sbb
mov
xor
imul
ds
cmp
leave
jo
bound
xchg
lret
stos
std
or
imul
jle
in
sbb
je
push
and
decl
push
xchg
xchg
xchg
mov
jns
je
mov
mov
or
ret
jb
add
mov
outsb
sbbl
outsl
dec
mov
xchg
fwait
cmp
sbb
or
lock
fists
cwtl
push
jg
sub
xor
andl
iret
jo
adcl
jmp
out
fadd
mov
or
lea
stc
mov
jo
jge
jp
aam
push
rorb
push
push
dec
data16
jmp
dec
mov
mov
clc
push
lods
ret
inc
fcomps
rorl
xchg
or
jbe
xlat
mov
mov
outsl
outsl
lock
ficoms
adc
xchg
and
push
addl
xchg
stos
arpl
test
insb
push
xchg
dec
shlb
mov
out
in
xchg
mov
sbb
cmc
addr16
xor
pop
test
pop
add
pop
adc
aas
xor
into
dec
fmull
cmp
les
imul
adcl
jo
pop
sub
jne
push
cmc
inc
fdivrl
push
jae
sti
stos
dec
xchg
rcrl
sub
nop
dec
mov
cmpsl
fmuls
inc
fwait
push
mov
jbe
sbb
lahf
jb
outsl
fstp
add
jnp
enter
ds
testl
mov
add
enter
or
repz
mov
cmp
hlt
ljmp
cltd
cmp
jo
mov
jno
xchg
inc
adc
xchg
jg
adc
sahf
call
lods
cwtl
js
ljmp
arpl
pop
or
inc
pop
sub
add
cs
cld
aas
xchg
lods
inc
dec
ljmpw
jb
jno
and
cmp
mov
orl
fisttpll
sti
and
loope
cmp
push
inc
jecxz
push
inc
fs
sbb
dec
and
and
mov
mov
test
lock
fsubrp
lret
test
in
jp
lods
loop
sub
mov
add
stc
and
sbb
pop
loopne
aaa
mov
jb
ja
fcmovbe
shl
std
movl
daa
fmull
dec
pop
mov
in
pop
cmpsb
xor
repnz
adc
outsb
fisttps
pop
jecxz
das
mov
jne
sub
sbb
xor
sub
es
cli
lods
fildll
icebp
adc
mov
cmp
xchg
pop
dec
sti
mov
scas
insb
stos
movsl
cmc
sub
icebp
in
stos
lea
lahf
xchg
push
push
nop
cmp
push
and
push
jecxz,pt
add
xor
and
fs
clc
lds
mov
mov
hlt
inc
adc
repz
in
cltd
dec
addr16
fcoml
xchg
es
pop
mov
repz
lock
dec
fdivr
pop
add
imul
lods
dec
jmp
cmp
jnp
xor
xlat
test
cmp
pop
adc
outsb
je
in
int
mov
pop
pop
pop
xor
add
pop
push
addr16
xchg
jo
dec
adc
mov
push
ret
cli
test
adc
cwtl
insl
mov
adc
xchg
jle
xchg
imul
adc
insl
xlat
pop
cwtl
mov
outsl
adc
stos
pop
leave
aad
negl
xor
das
dec
pushl
rolb
movsb
pop
outsb
jnp
stos
push
sti
push
xor
mov
mov
lods
mov
push
sti
mov
addr16
movsl
test
inc
mov
fisubrl
mov
add
dec
insb
mov
insb
shlb
scas
out
dec
and
call
in
in
or
sbb
add
xor
test
testb
adc
push
xchg
and
nop
pop
popa
jl
test
lcall
mov
or
dec
pop
stos
cmp
test
xlat
lock
scas
cwtl
rcrl
sahf
mov
push
stos
pop
sbb
inc
mov
xor
sub
nop
mov
push
scas
lods
pop
push
cld
ja
movsb
fcmovbe
shl
mov
and
mul
jb
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
aas
mov
adc
imul
andps
add
push
add
inc
adc
dec
sub
fdivp
jbe
into
mov
push
sbb
sahf
popf
aaa
inc
pop
xchg
xchg
push
lods
dec
mov
insl
lcall
push
bound
icebp
ss
or
jbe
inc
mov
cmpsl
xchg
rcrl
xchg
mov
insb
and
dec
out
cmpsb
xchg
or
dec
jno
xor
jecxz
and
mov
adc
sbb
dec
push
cmpsb
jnp
adc
and
jne
cwtl
mov
std
out
inc
or
push
fstl
and
arpl
and
imul
inc
lock
fcoml
adc
pop
pop
push
adc
mov
dec
imul
int3
sarl
out
adc
jge
sbb
pop
pop
test
sbb
push
hlt
call
stc
ja
add
test
xor
addb
mov
test
add
loopne
sbb
or
stc
repz
mov
push
mov
sti
sti
push
push
add
aaa
sub
or
out
add
sbb
mov
arpl
pushf
mov
mov
out
out
and
gs
xor
aaa
sub
pop
shll
or
rcll
loopne
enter
mov
mov
mov
xchg
push
cmp
mov
pop
mov
xor
jecxz
fisubl
rcll
stos
xchg
sbb
sbb
add
mov
shll
jg
jno
repz
aas
shl
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
