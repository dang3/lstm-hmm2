mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
push
addb
nopl
jmp
mov
ffree
xchg
out
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
clc
xchg
ud1
inc
push
jnp
pop
sub
and
add
pop
dec
stos
div
leave
cmpsl
add
mov
imul
sarl
jmp
outsl
pop
bnd
je
jbe
mov
imull
or
test
ds
outsb
add
loop
pop
xchg
cmc
dec
adcb
loopne
mov
jmp
mov
loop
or
or
push
jl
ret
jo
repnz
loop
mov
pop
fistps
aam
add
sbb
mov
sub
lret
mov
and
insb
cmpsb
cmp
imul
std
les
enter
sets
jle
cltd
inc
fcmovnb
xchg
and
add
cli
mov
mov
icebp
int3
scas
loop
test
push
lock
mov
adc
mov
add
push
xor
or
sbb
gs
mov
and
jle
stos
sub
dec
lret
sarb
inc
lods
movsb
cmp
xchg
lock
push
adc
xchg
push
jb
sbb
push
cmpsb
mov
push
ret
cmpsl
xchg
ljmp
outsb
ljmp
xchg
push
or
out
mov
or
enter
mov
in
cmp
in
xchg
es
jae
xchg
lock
xchg
jp
mov
add
inc
xor
in
cmpsb
nop
cld
inc
fmul
in
popa
popa
or
adc
pop
lret
iret
mov
sbb
lea
lods
cmpsl
movsb
inc
pop
test
add
insb
mov
ja
xor
and
and
sbb
shll
add
fucomip
adc
sub
mov
pushf
orl
or
inc
shl
pop
inc
lock
cmc
inc
loope
shlb
mov
imul
outsl
xor
cmpsl
sbb
inc
lahf
sarb
push
cmp
aas
xchg
test
and
and
insl
xchg
push
testb
or
mov
addr16
jnp
stc
sahf
push
mov
ret
mov
mov
adc
xchg
pop
sub
lods
sub
mov
out
sahf
mov
sub
xor
imulb
cmpl
push
inc
mov
es
dec
xchg
mov
mov
jg
repnz
subl
aas
ljmp
or
and
mov
bound
mov
inc
mov
or
add
repz
lret
jne
add
sbb
sbb
mov
pop
push
fsubl
adc
push
inc
adc
out
jecxz
lods
into
xor
cmp
gs
mov
cli
arpl
dec
mov
jbe
out
jg
call
outsl
dec
pop
jb
jmp
loope
xor
mov
adc
mov
lods
pop
loopne
sub
lods
mov
rclb
jne
cltd
lret
out
xchg
cmp
sub
lcall
sub
add
imul
add
sub
lret
mov
and
outsb
add
xchg
repnz
imul
dec
adc
inc
popf
xchg
or
scas
in
rcl
int3
and
add
push
lods
mov
sub
cmpsl
popf
cli
ret
pusha
dec
int3
jl
out
dec
mov
jno
jbe
inc
jl
pop
mov
or
sbb
mov
cmpsb
notb
lods
dec
sarb
sbb
stos
fistpl
jns
aas
call
outsb
lahf
sti
enter
dec
test
adc
int
mov
fcomps
scas
adc
into
sbb
pop
sahf
and
loopne
stos
loopne
cld
je
and
lea
and
or
xor
lret
orb
sub
mov
arpl
cmp
cld
jl
push
arpl
out
xor
lahf
mov
adc
out
xchg
xchg
xor
xchg
scas
out
cmp
rorl
stos
push
ret
cmp
and
repnz
jmp
pop
imul
movsb
rcrb
fs
cld
sub
hlt
cltd
aad
adc
out
jnp
jbe
arpl
pushf
inc
xor
out
push
sub
mov
push
scas
imul
jp
push
xchg
xchg
cmp
mov
ficoml
add
adc
jbe
pop
loop
jno
pop
push
in
mov
mov
stos
pop
inc
cmp
out
dec
sub
fcomps
lods
mov
into
inc
cld
int
lods
fs
or
xor
push
addr16
adc
stos
xor
sbb
enter
pop
scas
mov
xchg
cmp
jg
aad
xchg
loopne
pop
push
or
sub
sbb
fs
mov
sub
fdivrs
mov
push
lock
or
repnz
stos
xor
mov
mov
sub
push
lret
lods
insb
pushf
xor
loopne
cmp
push
push
das
or
push
or
call
rcll
lods
sbb
sarb
pop
pusha
mov
mov
aaa
push
dec
dec
pop
addr16
shll
out
pop
sbb
loopne
mov
add
ljmp
out
in
xchg
inc
xor
xor
add
xchg
mov
leave
scas
mov
and
in
xor
or
shlb
cmpsb
sub
movsl
out
add
test
xlat
mov
add
xchg
pop
mov
stos
sub
lahf
cmp
pusha
or
adc
cwtl
jecxz
or
fldl
xchg
jnp
cltd
cmc
mov
ss
psraw
cltd
inc
or
sahf
imul
cmp
and
xchg
les
enter
dec
leave
imul
lods
pushf
les
scas
jge
jae
mov
out
lret
add
sar
push
pop
sub
dec
push
and
xchg
mov
es
mov
xchg
inc
mov
push
pop
ret
mov
arpl
in
daa
shrb
in
cmp
in
push
fs
jl
sbb
stos
push
rcrl
mov
or
push
subb
mov
cmp
or
rorb
adc
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
movhps
popa
sub
add
jge
and
sbb
cmp
cmp
lock
and
mov
clc
lods
ficompl
movsl
out
sub
into
add
scas
mov
ret
and
mov
aas
loop
sbb
cmpsb
in
push
shlb
adcl
adc
cmpsl
and
addb
call
in
insl
lcall
outsb
or
pop
mov
sbb
cmpsb
lret
mov
mov
xchg
clc
rcrb
popf
fldt
sbb
push
or
arpl
jo
xor
jecxz
mov
mov
pop
out
iret
das
sub
dec
popf
jnp
jns
push
mov
and
jp
mov
or
jecxz
aas
sub
push
mov
fbstp
xor
dec
or
dec
xchg
mov
insl
inc
mov
sbb
ljmp
negl
pop
xor
xor
shll
pop
mov
xchg
jge
push
test
mov
enter
fcoml
cli
adc
inc
je
rol
xchg
jp
fsubs
pop
sub
pop
xor
sarl
loopne
or
loopne
jle
sub
sub
orb
lea
out
or
iret
inc
sbb
mov
ljmp
shr
push
jne
into
movsl
pushl
scas
pop
lret
leave
ds
add
mov
xchg
and
mov
ja
add
pop
push
pop
inc
aad
or
adc
lds
mov
mov
or
inc
and
mov
mov
or
test
push
ljmp
icebp
xchg
popf
mov
xchg
or
subb
push
inc
test
cmpsb
ja
inc
iret
test
cmp
movsl
dec
mov
in
sbb
fdivrp
lea
or
xor
xor
xor
sbb
sub
xchg
insl
cwtl
movsb
stc
clc
sbb
sub
mov
sarl
stos
fs
and
xor
jno
sub
ljmp
fsts
xor
jne
xchg
movsl
mov
pop
pushf
dec
cmp
xchg
ret
vorpd
jmp
fisubs
test
add
lds
and
jmp
jle
fsubrl
push
push
jne
push
xor
nop
xchg
lds
pusha
pushf
incb
outsl
sub
cmc
ds
sbb
jno
pusha
fwait
lahf
mov
ficompl
adc
add
pop
xchg
andb
popa
lcall
pop
or
leave
insb
leave
and
shlb
loopne
mov
cmp
daa
or
mov
cmp
push
add
popa
lahf
and
cmp
fdivrl
lret
jp
loop
ret
leave
or
mov
dec
imul
xchg
adc
pushf
mov
adc
inc
inc
xor
xor
into
cmp
ds
lcall
mov
jb
scas
inc
pop
iret
push
jge
fs
lcall
clc
xchg
inc
fsubrs
lds
add
push
out
xchg
loopne
or
mov
insb
pop
lea
xchg
movsb
xchg
fwait
and
jb
push
loopne
and
fsubl
xchg
dec
outsl
push
push
out
in
leave
lods
push
pop
inc
adc
lahf
dec
pop
jp
aad
pop
lcall
cmp
or
jno
or
sub
fwait
xchg
icebp
inc
jl
jge
mov
das
jg
dec
fcompl
shl
inc
lods
imull
std
sahf
in
fidivrs
xor
xor
jno
roll
xchg
or
pop
push
jl
or
int3
es
mov
dec
ja
into
and
jo
ja
stos
iret
fsub
pop
lods
lods
mov
inc
popf
dec
data16
cmpl
pop
add
xchg
fidivrl
cwtl
sub
ds
xor
cmp
push
jge
ret
xor
lods
mov
xchg
leave
xor
mov
movsl
shll
pop
js
nop
aaa
addr16
xor
sbb
dec
loopne
lret
jno
jae
mul
mov
int
lret
movsl
repnz
inc
cmp
xor
cli
por
fiadds
xor
adc
int3
scas
std
fstp
mov
push
das
cmp
dec
adc
push
call
mov
sub
adc
sbb
iret
scas
mov
and
cmp
dec
fs
aad
pop
lea
cs
lret
sub
sbb
xchg
pop
repnz
mov
sbb
sub
idiv
repnz
test
dec
xor
into
jmp
dec
jle
cmpsl
dec
jne
cmpsl
in
out
shl
jae
aas
ret
in
out
push
out
stos
into
mov
lahf
add
cmpsb
adc
hlt
bound
lret
bound
mov
inc
adc
stos
mov
jne
imul
push
mov
mov
andl
je
pop
xor
stc
push
incb
inc
bound
test
out
adcl
sbb
lret
hlt
out
sub
jge
popf
push
mov
add
movsb
imul
or
or
imul
clc
add
shll
dec
mov
cs
pusha
cmpsb
xorl
mov
scas
out
jnp
das
xor
or
push
add
enter
mov
cmc
gs
cwtl
stos
js
inc
pop
sbb
mov
mov
cmp
adc
sbb
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
shld
and
sbb
jne
out
mov
xchg
push
aas
test
out
das
sbb
cmp
into
jae
jo
inc
cmp
push
loope
fdivr
inc
sub
cmpsl
jmp
insb
xor
mov
xlat
xchg
cmc
leave
xchg
mov
or
fidivrs
or
xchg
inc
mov
cli
mov
testl
cmp
out
mov
imul
std
or
shl
mov
jle
add
xor
std
or
fstl
jp
sub
dec
inc
fcoms
fdivrp
adc
mov
jp
sbb
xor
push
mov
mov
rorb
mov
mov
or
aad
mov
sbb
into
push
mov
es
scas
daa
mov
sub
divl
insl
cmp
mov
adcl
or
mov
mov
and
insb
pop
stc
sbb
mov
cmc
xchg
pop
es
test
int3
push
bnd
cmp
pop
jbe
xchg
xchg
jg
lcall
dec
js
icebp
mov
xchg
pop
notl
xchg
cmp
jge
dec
xor
mov
push
add
mov
jecxz
adc
adc
mov
pop
std
es
cmpsl
cmpsl
fsts
pop
pop
add
mov
push
sbb
xchg
add
xlat
push
dec
xor
xchg
scas
pop
mov
adc
cmp
mov
pop
test
sub
or
out
repnz
shll
bound
loope
pusha
lcall
pop
mov
mov
jmp
imul
or
xchg
sbb
bound
xor
inc
jne
jb
inc
ja
adcb
mov
test
or
mov
jns
sbbl
pop
fiadds
xor
xchg
repz
inc
and
fmull
adcb
imul
out
adc
or
or
and
test
xchg
in
sub
jecxz
dec
bound
inc
push
mov
out
push
or
jmp
pop
jle
xchg
nop
call
mov
mov
jns
mov
cmp
subl
add
incb
aas
outsl
out
xor
mov
or
inc
rorb
sub
push
adc
pop
mov
iret
add
shr
out
daa
and
and
bound
mov
cmpsb
jge
insl
adc
add
push
ret
mov
bound
xchg
mov
popa
lea
and
mov
or
imul
mov
ret
pop
mov
out
pop
xor
fyl2xp1
mov
icebp
cli
ret
jg
in
jns
jae
mov
or
insb
jnp
and
ja
sti
mov
push
mov
mov
jg
in
sub
out
orl
mov
jbe
jg
xor
mov
inc
aam
cmc
mov
cmp
xor
jb
mov
xchg
cltd
int3
stc
arpl
stos
jnp
je
push
out
stc
incl
jnp
fimull
sbb
fincstp
sub
or
pop
adc
sub
mov
and
mov
jmp
pusha
mov
dec
sbbb
insb
dec
loop
adc
inc
imul
sbb
sbb
cld
fwait
lds
loopw
pop
push
cmpsl
jle
cmp
lret
std
pop
dec
push
aaa
dec
outsl
bound
cmp
inc
push
arpl
cmpsb
mov
data16
fs
mov
clc
jbe
xchg
test
and
or
add
movsl
or
and
scas
pop
cld
mov
fs
in
and
mov
inc
jge
into
dec
push
ds
push
mov
sarl
jge
pop
mov
or
xlat
idiv
gs
sbb
das
or
or
clc
outsl
cmp
or
add
es
or
pop
xlat
data16
push
mov
in
sbb
jg
mov
push
ficoml
pusha
cmp
pop
mov
aas
iret
bnd
inc
aad
add
or
pop
popf
xchg
arpl
push
cmpb
cmpsl
xchg
rcrl
inc
sbb
out
mov
sbb
scas
aaa
gs
mov
pop
jb
or
frstor
daa
add
ret
push
call
fmulp
es
hlt
inc
popa
out
int3
xor
inc
and
mov
roll
test
xchg
push
fldcw
sub
sbb
add
mov
pop
sbb
aas
les
inc
adc
sub
pop
loopne
in
cmp
ret
dec
push
xor
or
push
loope
fistpll
sub
cmp
ficomps
nop
stos
ds
mov
orl
and
xor
mov
cmp
add
in
popf
lcall
xchg
xchg
div
adc
sarl
movsl
push
pop
mov
xchg
push
fdivs
mov
mov
inc
aam
jae
xor
jb
int3
aas
pop
cmpsb
imul
push
decb
push
test
dec
push
push
xor
and
push
jbe
sti
lods
sbb
jecxz
shr
dec
insb
scas
pop
mov
cmpb
xchg
and
daa
lods
xor
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
mov
pinsrw
invd
and
or
in
stos
pop
pop
ret
or
jl
movsl
mov
add
hlt
push
add
mov
mov
mov
dec
aad
mov
roll
mov
pop
popa
aam
push
and
xchg
xor
sub
inc
fstps
sub
mov
hlt
sti
lcall
jae
xor
out
jmp
scas
gs
mov
cmp
mov
lock
mov
jb
frstor
into
shl
xor
aad
mov
pop
ja
imul
sbb
aaa
sbbb
out
add
dec
jg
jno
dec
push
popa
cld
cmp
push
lock
pop
inc
scas
lahf
in
ljmp
jno,pt
mov
loop
inc
lods
push
or
cld
and
aad
ljmp
daa
cmp
xchg
loop
and
and
ljmp
ss
lock
addr16
mov
add
movsl
into
pmovmskb
lret
dec
xor
in
mov
mov
dec
leave
stos
les
inc
jle
in
xchg
lcall
clc
dec
insl
sub
inc
mov
dec
xor
xchg
jle
or
test
nop
xchg
in
in
icebp
sbbl
movsl
dec
imul
lods
inc
loope
xchg
test
jae
cs
rcll
xchg
mov
int
roll
jmp
loopne
fs
data16
and
dec
dec
mov
icebp
jb
push
push
stos
aam
adc
dec
push
lods
out
lret
jne
pusha
frstor
mov
sahf
pop
decb
lret
lea
jmp
jg
arpl
lds
or
jbe
xor
add
pop
xchg
xor
xchg
pop
rorl
push
es
xchg
sub
stos
movb
ret
jnp
js
cwtl
mov
dec
icebp
ss
xchg
rcl
aad
testb
jmp
xchg
popa
sti
pop
clc
mov
fstp
popf
cltd
cmpsb
jmp
iret
in
xchg
repz
and
idivb
jae
insl
ds
jmp
cmp
ret
fs
fadds
orl
ljmp
scas
dec
and
jmp
push
test
adc
aam
sub
popa
pop
fnstenv
dec
loope
add
pop
or
push
stos
ret
push
mov
ljmp
push
testb
imul
adc
xor
sub
push
cmp
pop
fwait
pop
repnz
sahf
jp
aaa
jo
out
or
xor
or
std
pop
inc
arpl
fwait
decl
jl
into
inc
mov
jmp
into
subb
sub
stos
in
mov
jg
xchg
cli
push
add
push
test
mov
aam
aam
mov
das
addr16
repnz
pop
loop
or
fimuls
repnz
push
iret
or
pushf
xor
add
or
int
les
or
scas
mov
rclb
cltd
jbe
dec
in
mov
pop
push
jnp
xor
pusha
push
sbb
push
adc
repz
mov
loop
jmp
mov
bound
sbb
outsl
cmp
adc
sti
int3
or
inc
mov
xor
mov
ljmp
insl
inc
iret
mov
pushf
and
push
jmp
orl
ljmp
mov
shlb
jbe
add
sarl
mov
leave
icebp
push
lahf
cmpsb
test
fucomip
hlt
cmp
or
pop
cmc
adc
aad
jnp
xor
popf
mull
mov
das
pop
js
cmpsl
scas
pop
inc
pushl
pop
push
jecxz
sub
mov
add
aas
mov
mov
call
enter
add
stos
jns
cmpsl
mov
adc
ds
xchg
adc
mov
and
in
stos
pusha
cwtl
outsl
sti
lock
sub
stc
pop
jae
xor
fneni(8087
loopne
mov
mov
fwait
push
cmp
or
paddq
test
pop
std
dec
out
adc
jns
test
dec
int
mov
hlt
pop
js
mov
imul
leave
push
je
out
dec
aas
insb
bsf
cmc
bound
adc
xor
adc
mov
ret
mov
cmp
nop
xor
mov
ret
es
mov
les
pushf
xchg
mov
cwtl
cmp
out
dec
icebp
ret
in
std
mov
mov
lods
jne
jns
loopne
xor
leave
xchg
enter
cltd
in
mov
or
fnstsw
sbb
jmp
std
xor
jbe
jl
or
push
aaa
bound
jecxz
mov
lods
je
push
je
repz
arpl
cld
imul
fildl
repz
mov
lds
mov
xchg
mov
jb
cmp
mov
in
imul
stc
mov
fcompp
mov
pop
xchg
stos
jo
inc
outsl
shll
call
push
xlat
aad
push
sub
pop
add
jmp
sub
insb
clc
xor
xchg
adc
fdivrl
fsubl
xchg
pop
loop
push
xor
xchg
es
mov
sub
jmp
iret
sbb
les
mov
jbe
loope
mov
mov
shlb
push
mov
ljmp
nop
pop
jne
mov
les
and
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
push
pinsrw
punpckldq
sbb
add
mov
sub
dec
xor
movl
cmp
pop
xchg
aam
or
insb
add
add
lahf
ret
or
pushf
sub
add
fistps
pop
stc
dec
cwtl
test
ja
test
in
jo
push
fmull
rol
pop
repz
xor
pop
adcl
mov
mov
insb
dec
ret
cmp
sub
mov
in
jb
cmpsb
mov
sbbb
repz
test
cmp
repz
push
adc
add
into
into
cmpsl
fwait
jnp
push
rclb
add
pop
repnz
dec
mov
std
jae
inc
fmul
hlt
add
push
mov
inc
aad
jecxz
cltd
out
and
out
dec
and
popa
xor
sbb
xchg
stc
data16
scas
sub
jb
jb
xchg
push
imul
bound
loopne
sbb
xor
dec
pop
nop
sub
sub
xor
subl
adc
scas
insl
push
or
jns
push
or
fcoms
pop
jae
jo
mov
xchg
jle
cmc
xor
loop
popa
aad
and
mov
and
mov
lods
jmp
test
push
mov
xchg
and
mov
or
iret
push
movsl
enter
movsl
xor
sub
or
std
call
inc
cwtl
hlt
xchg
loop
add
mov
and
mov
repz
out
pop
adc
in
mov
sub
fdivrl
push
addr16
shlb
sbb
shl
sub
fadds
adc
add
add
jnp
test
mov
xor
out
and
fisttpll
mov
sbb
xchg
cmpsl
insl
aas
cmpsl
bound
mov
and
add
pop
ss
adc
out
mov
gs
inc
int3
lea
int
test
adc
jmp
sbb
sub
lahf
mulb
and
dec
push
jnp
mov
je
and
add
mov
adc
jns
mov
nop
sbb
pushf
sbb
scas
adc
scas
inc
out
adc
jmp
sbb
jns
mov
inc
test
mov
xor
mov
sub
ljmp
or
xchg
push
or
out
xor
clc
ss
shlb
xchg
mov
inc
sbb
arpl
mov
pushf
out
sbb
idivl
loopne
ja
std
sarl
insl
sahf
imul
add
mov
and
stos
or
push
aaa
push
shlb
stc
out
mov
lret
sub
jns
testb
add
inc
roll
mov
xor
cmpsb
mov
in
inc
adc
in
adc
xchg
mov
insl
jns
push
or
int3
ss
xchg
cmp
inc
popf
add
cmp
fs
and
mov
fcmovb
in
mov
cmp
lds
cmp
data16
mov
pop
dec
or
pop
inc
jb
cmp
test
xchg
xchg
xor
xor
xchg
clc
loopne
rcll
hlt
in
adc
cmp
xchg
idivl
roll
shll
sti
push
jmp
ficoml
not
mov
cmpsl
inc
jb
and
je
out
icebp
jns
fdivrl
xchg
add
fucom
fistl
add
jecxz
test
mov
dec
mov
mov
sub
mov
pop
stos
push
xchg
call
xorb
xchg
inc
push
push
cmp
leave
mov
jne
jp
jl
outsl
mov
mov
outsl
mov
mov
ftst
ret
inc
cmp
xor
pop
inc
lock
dec
sbb
xchg
std
ja
scas
data16
shlb
pop
jp
and
test
dec
sub
xor
or
jns
stc
xchg
cmp
jp
rep
xor
out
pop
popa
jb
inc
cmp
mov
fisttpl
movsb
js
aad
sbb
repnz
push
push
pop
test
jge
je
dec
mov
add
jbe
pop
mull
mov
test
loope
inc
outsl
not
or
pop
jmp
cmp
push
jge
ret
push
subl
push
pop
nop
repnz
outsl
jns
pop
adc
fsubs
popa
leave
mov
inc
cld
ss
xchg
pop
out
dec
or
sbb
inc
inc
or
ss
xlat
arpl
call
adc
inc
pop
movsb
inc
gs
mov
xor
ja
lahf
sbb
outsl
ret
cs
shrl
mov
mov
mov
dec
pop
or
loope
xor
mov
push
jno
mov
testl
das
jecxz
xor
pop
cvtdq2ps
rorl
push
dec
fiadds
mov
movsb
adc
jno
gs
add
lret
repz
andl
push
add
xchg
cmpsl
push
pop
xorl
or
mov
repnz
adc
pop
push
pusha
xor
clc
fstps
pop
adcl
xor
into
sbbb
mov
adc
arpl
bound
test
outsb
sub
imul
xor
aas
rcrl
cmp
cmp
arpl
inc
mov
push
je
mov
in
xor
mov
mov
add
loop
ficomps
mov
adc
adc
inc
xchg
jnp
rcr
ss
push
test
mov
xlat
xchg
jbe
ljmp
jb
add
inc
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
bound
pinsrw
comiss
cmp
sbb
addr16
jne
cli
fnstenv
aas
in
loope
adc
nop
adc
je
inc
shrb
adc
shl
push
add
mov
adc
push
fisttpl
stos
test
jp
fwait
mov
xor
fs
push
call
xchg
sbbl
mov
jl
dec
sbb
mov
add
inc
insb
cmp
idivl
dec
or
and
or
add
fisubrl
push
sub
mov
fdivr
mov
push
andps
inc
jae
nop
fcoml
jne
jmp
pop
or
dec
cli
fucomip
pop
lahf
adc
and
or
and
cmp
push
loope
hlt
aad
xchg
cmpsb
cmp
ljmp
adc
xchg
test
cmpsb
sub
adc
mov
ds
push
xchg
jmp
int
sub
jg,pn
loop
xchg
xor
test
push
xchg
icebp
sbb
andl
fcomip
dec
cli
roll
add
xor
mov
out
std
out
ds
inc
cmp
cwtl
sub
scas
sti
cli
out
jg
mov
dec
sbb
stos
nop
out
mov
lcall
out
push
mov
daa
ss
add
call
cmpsl
dec
pop
sbb
in
dec
mov
inc
pop
das
fs
adc
and
insl
push
jp
xlat
mov
cli
mov
or
ja
mov
stos
stos
in
rcr
test
push
adc
mov
out
push
inc
inc
jne
mov
and
add
fwait
rcll
ljmp
jle
leave
decb
sub
jo
xor
dec
icebp
pusha
mov
test
mov
push
push
pushf
fdivp
adc
push
adc
pop
inc
push
adc
ds
sub
xchg
icebp
call
movsb
mov
shr
push
lcall
js
adc
in
mov
fldenv
enter
dec
pop
loopne
cmp
mov
jmp
hlt
dec
jl
btc
sbb
pop
mov
xchg
popf
add
pushw
divb
push
mov
insb
ficomps
repz
pop
xor
mov
ja
mov
pop
xchg
sarl
stos
movsb
popf
ret
jno
inc
fldenv
or
jge
popa
enter
inc
out
push
mov
and
cmp
call
push
bound
cmp
in
fistpll
daa
insl
pop
jmp
xor
movhps
out
pop
push
xor
das
mov
in
enter
cmp
dec
dec
mov
mov
sbb
or
xchg
dec
jns
push
mov
mov
mov
test
rcll
mov
xchg
xchg
lds
popa
or
adc
pop
rcl
int
mov
and
and
xchg
cmp
dec
imul
jns
add
cmp
jnp
std
sahf
mov
jo
lcall
pop
inc
adc
pop
cld
mov
pop
sub
in
xor
movsb
aam
cmp
ret
and
pusha
inc
rcll
clc
sbb
dec
xor
fldenv
popa
cmp
loope
popf
aas
jecxz
fisttpll
pop
cmp
outsb
push
insb
ret
xor
cli
test
pop
outsl
jb
sub
xchg
fsubr
movsb
test
sbb
jns
and
sbb
or
sti
stc
or
cmp
popf
mov
adc
ficomps
cwtl
pop
pop
mov
cmp
enter
fucomi
mov
popf
dec
jge
inc
adc
mov
lea
fwait
jp
pop
ss
jbe
jge
xchg
out
add
fsubrl
jge
cmp
mov
cmpsl
jl
aas
rol
data16
loop
popf
cmp
jecxz
test
lahf
out
movsb
test
outsl
in
cmpsl
outsl
mov
outsl
call
jbe
fsts
pop
inc
xor
dec
and
xor
mov
dec
mov
lock
mov
test
mov
cld
jl
pop
jmp
pshufw
mov
mov
inc
arpl
push
mov
xchg
movsb
cmpsb
mov
data16
or
inc
ficoml
loop
cli
push
test
xor
or
pop
sub
sbb
sbb
leave
mov
push
movsl
dec
rcr
adc
cmc
pop
xor
xor
loopne
mov
cmp
cmp
pop
mov
cmp
or
fldt
pop
pop
lods
icebp
push
push
sbb
inc
xchg
and
ja
repnz
push
sub
dec
add
ljmp
jnp
lahf
xchg
scas
lods
leave
mov
stos
mov
pop
gs
adc
xchg
push
bnd
xchg
mov
push
add
jb
fisttpl
jae
cld
mov
pop
mov
imul
movsb
imul
pop
rolb
ror
push
decl
negl
mov
es
xor
and
ret
hlt
ret
xor
xchg
in
and
notb
mov
cmp
sub
jb
in
int3
into
push
icebp
dec
icebp
mov
roll
push
ljmp
mov
push
adcl
sbb
jg
test
jecxz
adc
popa
mov
dec
xor
mov
add
mov
xchg
test
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
and
xchg
add
punpckhwd
mov
xor
mov
adc
adc
cmpsl
int3
inc
xchg
xchg
std
es
sahf
sbb
inc
mov
ret
push
push
fs
sub
inc
xor
fsts
and
push
es
push
fs
mov
push
mov
ret
jecxz
dec
mov
in
jnp
jecxz
adc
pop
ficoml
mov
xchg
sbb
ds
xor
lods
mov
sbb
xor
cmp
cli
insb
push
add
push
andb
fisubrl
inc
addr16
xor
jno
sub
lock
push
insl
jmp
lods
push
sub
pop
scas
mov
mov
xor
cwtl
cwtl
add
mov
cltd
data16
aaa
sbb
push
test
inc
cli
lds
sub
inc
lods
lahf
cmc
lods
sti
xchg
dec
push
and
push
fdivr
cmp
movsb
lods
fistl
jg
jno
push
mov
in
ss
stos
daa
and
lds
cmc
int
push
sub
jae
jmp
in
sub
aam
imul
int
pop
lcall
inc
add
fcomip
add
jnp
dec
out
add
dec
xchg
lds
jecxz
xor
int
loop
cmp
mov
dec
xchg
stc
and
rcr
dec
into
mov
outsb
bound
in
subl
pop
cmp
adc
imul
sarl
jle
xchg
cmp
icebp
stos
in
loop
fcmovb
es
cmc
lret
stos
push
mov
rcll
add
mov
cli
and
ja
cmp
stos
loope
loop
leave
je
popf
sbb
jnp,pt
cmp
sbb
dec
lds
jmp
lea
push
aad
lcall
mov
pop
dec
mov
jg
sub
in
arpl
and
mov
pop
inc
pop
shll
jmp
les
out
xchg
mov
inc
negl
jb
mov
arpl
and
les
add
mov
xor
stc
xchg
push
cmp
or
mov
inc
mov
shl
jecxz
xor
xor
add
bound
lret
sar
ds
jae
mov
jmp
or
cmp
aad
ficomps
cwtl
and
lret
pop
lods
insb
and
push
mov
fisttpll
mov
pop
cmp
ret
ja
roll
xor
cmc
imul
inc
in
insl
scas
test
cmp
and
pushf
loopne
in
adc
pop
adc
xor
cs
std
in
mov
addr16
movlps
mov
mov
and
sti
frstor
or
test
xchg
cmp
xor
dec
mov
js
inc
push
jge
out
dec
mov
sbb
imul
leave
fnstenv
fistpll
test
lods
iret
repnz
sub
push
insl
jge
mov
mov
mov
adc
inc
fisttps
push
andl
lea
pop
es
into
mov
and
cmp
push
push
jnp
sbb
and
mov
rcl
daa
cmp
jno
repz
dec
fwait
movsl
cld
jno
dec
out
push
das
dec
ja
mov
push
mov
ja
adc
xlat
lods
aam
cld
cmpsl
sub
sahf
sub
mov
mov
std
sbb
pop
xchg
dec
or
mov
push
fildll
stos
xchg
jns
dec
or
push
arpl
pushf
add
std
inc
stc
lds
insl
js
or
inc
inc
mov
repnz
pop
dec
mov
push
mov
in
test
in
mov
mov
push
or
pushf
dec
icebp
inc
inc
inc
xchg
jge
insl
imul
je
dec
into
out
int
fld
mov
sbb
push
xor
push
add
and
movd
sbb
push
lds
jle
dec
lock
push
or
fdivl
out
imul
test
lock
test
inc
call
inc
push
jb
orl
rcrl
loopne
mull
cwtl
cmp
cwtl
adc
mov
aaa
shlb
and
adc
leave
pop
push
roll
in
mov
pushf
mov
mov
imul
mov
jnp
mov
xchg
subl
mov
aad
fistl
jbe
icebp
xchg
insb
jp
add
jbe
cmp
or
xchg
push
sahf
pop
jmp
mov
test
push
sub
in
dec
mov
mov
inc
jae
pop
add
cli
sbb
sbb
inc
mov
in
movsb
sbb
daa
xor
push
mov
testb
cmpsb
negl
pop
and
pop
pop
inc
cmp
fcmovnb
stos
sbb
ret
jmp
mov
icebp
sbb
jno
fs
cwtl
adc
loopne
loope
dec
mov
jge
lods
ds
mov
stc
push
aaa
sub
pop
mov
cld
out
shlb
add
popf
jne
push
mov
out
add
ja
cmp
pop
shll
add
xchg
and
fcomps
negb
cld
bound
sub
in
xor
push
push
xchg
mov
inc
mov
and
mov
dec
hlt
mov
shrb
jns
xchg
add
in
imul
xchg
mov
vmovd
outsl
pop
sbb
sbb
call
jne
icebp
xor
lds
test
data16
addr16
sbb
xchg
fdivrs
sbb
push
sbb
fnsave
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
or
xchg
data16
pinsrw
pavgw
int
jg
ljmp
mov
inc
loop
int3
xchg
jl
dec
add
out
sub
fdivrp
push
jge
popa
adc
loope
jns
out
xor
push
pushw
inc
mov
xlat
lcall
mov
xchg
add
movsl
shll
pop
leave
cmp
fnstcw
andl
outsb
ja
pop
dec
cmp
aaa
inc
outsb
enter
jno
pop
xchg
scas
test
sbb
cmp
and
loop
jp
inc
xor
adc
repnz
pop
pushf
dec
stos
jae
sub
sub
xchg
int
xchg
test
push
push
lcall
mov
mov
sub
pop
add
mov
fwait
jl
les
mov
mov
or
lea
sub
sub
arpl
dec
mov
cmpl
add
xchg
pop
cmp
lock
sbb
pop
je
insb
xchg
shlb
stc
shrb
push
icebp
cs
pop
pop
or
and
xchg
imul
jp
call
in
icebp
xlat
stos
mov
sub
sbb
fs
xchg
inc
les
xabort
cmp
fldl
test
push
push
or
cli
in
push
stc
cmp
adc
sbb
or
mov
add
cmp
sarb
add
push
cld
push
xor
push
and
push
gs
lock
mov
ljmp
adc
push
xchg
pop
inc
adc
cli
lock
xor
fistpll
push
mov
pop
inc
jne
jp
call
push
stos
aad
and
clc
inc
cs
notl
pop
lods
into
aaa
data16
push
mov
jno
ds
xor
cmpsb
mulb
aam
je
push
xchg
pop
dec
sbb
shll
cmp
dec
rcl
movsb
shrb
sbb
orl
es
or
in
int3
scas
out
cmp
mov
inc
dec
adc
leave
stc
rcrb
jnp
lock
jno
jb
push
shll
idivb
sbb
shll
daa
mov
sub
push
add
jl
mov
sub
jno
xor
add
push
cmp
pop
pop
ret
dec
lret
or
sub
xchg
pop
xchg
loopne
xchg
xchg
xchg
mov
push
dec
xchg
xchg
movl
cli
test
mov
jnp
adc
dec
push
mov
in
mov
cltd
lods
inc
mov
lret
loopne
ret
fcoml
jae
loope
xchg
pusha
push
pop
shlb
inc
mov
aad
shll
rclb
int
in
inc
fistl
lcall
movsb
sti
add
scas
lea
mov
mov
xor
in
out
ja
pushf
mov
xchg
pop
mov
aam
sbb
xchg
lock
fdivrs
push
cmp
adc
or
repnz
inc
notl
or
pop
jl
jae
nop
mov
mov
or
ret
jge
testb
call
ljmp
cs
and
mov
jle
fnstsw
dec
inc
add
jl
lds
lahf
rclb
pop
ds
or
psubb
fisttps
xchg
jbe
sbb
aam
flds
dec
jbe
mov
ret
add
lods
imul
sub
mov
pushf
in
stos
cmpl
fidivs
addr16
movsb
mov
push
cmpsb
outsl
pushf
inc
loop
aam
jecxz
pop
out
jb
fsub
fidivs
push
add
and
mov
test
frstor
addb
sbb
dec
ret
jp,pt
jns
dec
jl
adc
adc
in
or
mov
aas
in
pusha
xchg
cmp
xchg
popa
or
repz
push
inc
xchg
ja
and
push
nop/reserved
es
jne
pop
aaa
pop
lret
and
push
push
adcb
stos
mov
leave
mov
shll
out
aas
pushf
jge
cs
cli
mov
mov
scas
sbb
pop
in
bswap
inc
sub
fsubrs
test
push
loopne
jl
pop
mov
loopne
dec
mov
rorb
sbb
stos
cld
mov
movsb
pop
mov
push
add
mov
dec
push
cmpsb
adc
pop
test
or
inc
pop
adcl
ret
aaa
adc
mov
jne,pt
cmp
lahf
mov
and
inc
addr16
mov
int
out
rcll
push
shll
mov
cmp
js
pop
pop
push
sub
jle
mov
jns
dec
aaa
std
xchg
hlt
fsubr
imul
sub
or
mov
sub
lds
mov
out
fadd
and
enter
cmpsl
push
clc
sub
loop
sub
arpl
push
popf
pop
xchg
push
ja
fwait
mov
arpl
sbbl
daa
mov
loope
xchg
sbb
push
mov
or
dec
adc
adc
mov
data16
iret
or
iret
arpl
shrb
mov
pop
jmp
mov
mov
sbb
in
dec
xchg
shl
dec
imul
jmp
nop
xor
stos
xchg
stos
int
addr16
ljmp
das
dec
fwait
ret
stos
daa
pushf
adc
fwait
or
pop
bound
adc
ret
stc
lods
out
adc
enter
jnp
push
jnp
mov
sbb
jp
mov
adc
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
xchg
mov
pinsrw
femms
sti
sub
test
mov
hlt
push
in
and
in
push
sbb
cvtdq2ps
bound
js
cmpsl
outsb
imul
and
aam
pop
jecxz
stos
out
sbb
stc
hlt
push
icebp
push
dec
sahf
push
jmp
aam
addr16
add
test
ds
sbb
fiadds
lea
adc
jns
dec
enter
inc
mov
pop
ds
adcl
xor
stos
jae
loope
jb
push
aad
js
or
adc
in
adc
xchg
lret
movsl
mov
neg
rclb
dec
push
mov
lea
addl
loop
mov
push
inc
test
mov
pop
mov
adc
cmpsl
adc
push
inc
mov
movzwl
xor
dec
jno
cmp
nop
dec
in
call
inc
mov
mov
jmp
incl
mov
cmp
int
mov
pop
mov
jmp
mov
lret
mov
inc
mov
lea
jo
mov
pop
push
and
mov
ljmp
cld
jmp
xchg
movsb
push
in
adc
mov
out
add
loopne
cwtl
movsl
mov
test
sub
or
out
inc
cmc
fs
out
js
scas
sub
loopne
mov
cmp
lcall
lar
mov
fucomi
jnp
mov
adc
call
popf
sub
xor
adc
leave
stc
jno
jge
pusha
cmp
jg
dec
setnp
divl
mov
lock
push
pop
xor
cmp
call
lock
or
roll
mov
fldl
adcl
pusha
rcrl
loope
jmp
add
out
push
mov
in
shlb
xchg
adc
jo
xor
sub
ffreep
cld
lods
mov
dec
sti
in
popa
lea
mov
jbe
jnp
popa
rorb
mov
cli
add
loope
dec
imul
es
jns
pop
fcmovnu
push
aas
test
add
lods
into
outsb
mov
cltd
pop
add
or
dec
mov
xor
mov
dec
or
cmp
stos
pop
sub
lods
pop
add
icebp
xchg
jo
push
xchg
flds
jle
adc
or
jb
adc
sub
sti
mov
scas
cs
mov
les
adc
vmovntps
cld
and
mov
pop
fidivrl
and
test
jl
cmp
cmp
inc
inc
pop
or
xchg
ret
mov
dec
inc
nop
inc
negl
fimull
pop
and
add
in
xor
cmpsl
fs
mov
cmpsb
rcl
mov
stos
mov
loop
cmpsb
inc
out
cs
mov
fisubrs
mov
mov
sub
xchg
push
inc
stos
pop
outsl
push
sbb
push
cmpsb
or
scas
ja
pop
mov
jg
imul
leave
sar
stos
mov
dec
and
inc
mov
hlt
xchg
and
stos
lods
cmp
nop
sbb
int
sub
mov
mov
push
test
jae
fadds
mov
xchg
or
inc
test
pop
repnz
pusha
inc
arpl
fdivp
xchg
xlat
clc
push
mov
andl
mov
popf
ficomps
popf
jg
mov
sub
jmp
repz
sub
mov
movsl
adc
daa
mov
cmc
cwtl
pop
dec
movsl
mov
mov
xchg
pop
int3
xchg
cmp
loopne
sbb
arpl
leave
fcmovnu
ret
mov
jle
jge
jp
inc
lcall
push
aas
ja
dec
adc
add
xor
jns
inc
sqrtps
push
push
pop
push
cmp
xchg
in
xchg
repz
test
sbb
sub
imul
jnp
mov
add
or
sbb
cmp
lret
ljmp
test
adc
cmp
inc
test
dec
inc
lret
pop
pop
in
lea
jecxz
sbb
push
jge
or
hlt
sub
push
adc
addb
mov
or
ffreep
je
fadds
jmp
jne
or
addl
push
mov
xor
lock
mov
rcrb
lds
mov
push
push
lahf
jmp
xchg
lret
xchg
pop
mov
loopne
cmp
or
add
fdivr
mov
add
pop
xor
xor
inc
cld
mov
movsb
movsl
addb
inc
xor
aad
scas
jo
mov
insb
inc
cmpsb
xor
mov
inc
aas
je
dec
movsb
lcall
jecxz
pop
push
not
mov
cwtl
shr
xchg
rcl
addr16
into
push
sub
repnz
dec
mov
add
icebp
and
lock
cmp
sub
fbld
idiv
cmc
xor
xchg
sbb
pop
adc
mov
loopne
mov
jp
sub
pop
hlt
pop
cmp
lahf
push
testl
push
rclb
mov
jbe
lret
adc
xor
pushf
jo
dec
repz
cld
xor
fists
in
mov
popf
fdivrs
push
lea
sub
jbe
adcb
cmp
jg
in
add
fs
jns
out
jecxz
fildll
and
jnp
stc
cmp
gs
sub
mov
jae
inc
hlt
mov
inc
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
daa
cmp
xchg
add
nopl
insl
pop
ficompl
jne
std
ds
jle
shl
mov
add
jge
adc
pop
loope
adc
dec
outsb
add
xor
jnp
in
popf
outsb
mov
lret
and
test
dec
and
sahf
push
add
xchg
xchg
mov
inc
pop
sti
add
imul
pop
xor
call
inc
jns
fistps
data16
pop
mov
loop
xor
pop
scas
aad
cmpsb
or
in
sarl
sbb
inc
adc
aam
stos
lret
into
push
sbb
hlt
cmpb
stos
inc
fsts
add
xchg
int
in
xchg
and
pop
popa
or
jnp
aad
or
adc
and
js
sbb
mov
cmp
out
xchg
lret
mov
in
xlat
mov
sbb
in
repz
in
lahf
cmp
jp
mov
mov
mov
jp
aad
sub
out
sub
fldcw
aas
push
or
xor
xchg
xor
int3
in
in
sbb
scas
cmp
xchg
faddl
add
addr16
xchg
dec
rorb
out
cmp
adc
dec
pop
push
xchg
scas
shrb
mov
sub
daa
sub
out
rcrl
inc
and
jnp
mov
dec
inc
stos
jo
jge
cmp
inc
enter
mov
cmpsb
xchg
or
in
lock
in
lea
inc
add
dec
out
push
je
add
cli
cli
sti
push
sub
mov
loop
cmpl
push
xor
xor
shrl
cmc
clc
imul
mov
lock
mov
jg
pop
std
lahf
pop
mov
pushf
sub
pop
ljmp
fdivl
push
add
dec
outsb
popa
ss
pop
lahf
and
sbb
rcr
push
and
sub
push
or
int
popa
xor
shlb
pop
mov
cmp
hlt
pop
ficomps
inc
lcall
mov
pop
scas
and
pop
cmp
scas
test
cmp
mov
add
dec
or
jmp
mov
fistpl
sbb
jp
xchg
and
out
mov
push
stos
imul
mov
dec
fisubl
stos
in
shll
sarw
daa
or
lods
mov
inc
aad
mov
pop
lret
decl
sbb
sarb
jp
cmpsl
mov
xor
adc
std
out
scas
jns
repz
test
imul
push
dec
or
lret
pop
xchg
pop
mov
push
sarb
shr
fld
or
xor
arpl
mov
mov
xchg
fs
movsl
push
add
js
bound
cmpsb
roll
enter
xor
movsl
or
jecxz
into
pop
dec
sub
clc
aaa
mov
adc
adc
dec
pushf
fsubl
cmp
mov
xor
inc
sarl
popf
pop
mov
mov
imul
mov
sub
lods
ja
into
jmp
inc
sbb
data16
mov
fnstcw
mov
ficompl
movsb
sub
sbb
aam
es
mov
and
pusha
add
cmp
inc
clc
rorl
pop
addb
push
fcoms
xor
popa
jae
mov
movsl
clc
adc
xchg
add
pop
mov
inc
xor
add
push
sub
sbb
inc
xor
ret
cmp
repnz
rorb
jge
sub
cmpsl
push
jecxz
in
dec
sbb
inc
push
das
psubsw
sbb
push
imul
inc
jmp
adc
pop
ret
add
xor
rol
insb
mov
xchg
pop
pop
mov
sbb
sub
testb
add
std
imul
push
cmp
rol
orl
xchg
mull
je
mov
sarb
and
inc
sbb
inc
fs
repnz
adc
cltd
sub
stos
insl
push
in
imul
jnp
and
xchg
mov
mov
jl
xor
in
lods
adcl
bound
test
or
aas
mov
push
mov
xchg
rcrl
in
cmpb
daa
inc
es
popf
aam
mov
out
cmp
loop
lock
lahf
push
or
and
xchg
scas
inc
and
dec
adc
or
test
jl
imul
fistps
insl
add
lcall
fs
pop
cwtl
jp
dec
lret
push
ficomps
lret
fmuls
sub
pop
js
mov
dec
sub
dec
inc
hlt
in
dec
popf
push
mov
std
jl,pn
pop
sbb
stos
pusha
dec
repz
popa
movsl
fxch
mov
mov
mov
cs
pop
xchg
pop
leave
push
les
loopne
mov
aam
or
clc
push
inc
cmp
mov
mov
add
jns
push
pop
sub
rolb
ret
fwait
add
fadds
sub
lds
push
pop
sahf
out
imul
popf
sbb
outsb
nop
in
adc
inc
or
cmpsl
icebp
jmp
pop
jnp
lcall
push
jo
repnz
loopne
jnp
nop
jnp
inc
jae
cmp
pushl
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
jnp
movb
cmovbe
repz
or
cltd
and
jno
ja
sbb
pop
inc
mov
push
dec
daa
ret
fcomi
popf
loop
lock
ret
or
loop
jns
xchg
sub
lret
insb
les
std
cmpsb
xor
sub
add
inc
hlt
add
adc
jecxz
pop
addr16
dec
ljmp
out
idivb
fwait
mov
sti
jp
and
ret
ret
sbb
sahf
or
dec
lret
out
push
stos
orl
inc
rcrl
out
loope
insl
cmp
inc
ja
pop
pop
out
insl
xchg
or
into
fdivs
mov
sbb
outsb
lock
idiv
fstps
lds
ljmp
repz
and
jge
fcompl
repz
and
mov
jo
leave
loopne
push
mov
nop
push
xor
pushf
inc
out
adc
xchg
lret
cmp
xchg
pop
cmp
xchg
out
push
enter
insl
push
dec
inc
mov
popf
shlb
int
mov
or
lods
mov
lea
xchg
push
and
add
or
out
inc
pop
lahf
testb
dec
xchg
pop
push
dec
add
out
mov
and
lea
jmp
add
xor
or
mov
repz
les
push
insb
xchg
sbb
loope
sub
add
pop
mov
gs
push
mov
in
sarb
popf
arpl
xchg
lahf
inc
out
lret
dec
sti
out
sbb
cwtl
mov
test
dec
pop
hlt
test
fucomi
sub
jo
das
fst
shr
pop
push
shlb
loope
div
mov
cmpsl
sbb
jge
mov
cmp
ja
push
and
xor
out
mov
scas
or
aas
jg
xchg
call
sub
push
int
sub
fwait
sub
adc
jle
xchg
push
popf
xchg
cmp
ret
insl
outsb
fstps
lret
in
fidivrl
in
mov
inc
pop
ret
mov
inc
dec
aam
mov
push
lea
xchg
leave
movl
cwtl
test
ret
nop
in
dec
or
mov
cmc
fcompl
test
inc
pop
decb
push
das
cmp
jbe
jo
or
rcl
jge
mov
mov
jmp
repnz
rorl
addl
pop
out
pushf
shlb
data16
sbb
popf
fsub
dec
divb
rorl
sub
mov
sub
inc
cmp
jge
and
mov
dec
mov
mov
jp
lock
or
insb
pop
js
push
je
pop
mov
testl
mov
push
std
push
jbe
push
imul
push
push
cmc
mov
repz
ja
pop
loope
and
xlat
dec
out
shll
pop
xor
pop
enter
gs
mov
xor
and
push
lods
xlat
add
fistl
mov
sub
lods
inc
lea
push
rorb
leave
adc
sub
movsb
aaa
addr16
dec
cmp
shll
pushf
int
mov
add
aas
in
adc
dec
jp
mov
inc
mov
fwait
leave
inc
dec
adc
aas
in
pop
mov
xchg
cltd
xchg
cli
or
pop
pusha
loop
mov
rorl
add
test
aaa
xor
clc
jne
cs
bound
hlt
repnz
into
and
cltd
dec
mov
fidivs
in
fnstenv
dec
test
out
xor
insl
out
movsb
mov
cmp
mov
jbe
in
fnstcw
sbb
push
add
inc
mul
test
js
fnsetpm(287
mov
lret
push
rolb
add
xor
push
sbb
test
imul
in
jl
cmp
movsb
sbb
insl
xor
xchg
pop
shlb
cld
insl
pop
fcoml
mov
push
or
and
xlat
je
sub
fcmove
fisttpll
mov
movsb
gs
scas
adc
das
push
js
cli
cmp
ja
cmp
jg
xor
out
insb
out
or
mov
cmpsb
mov
jl
inc
xchg
negb
aas
dec
lea
insl
mov
jg
int3
xor
xchg
xchg
imul
lret
pushf
xor
jp
jle
daa
mov
inc
loope
adc
mov
enter
test
xor
out
mov
movsb
shlb
dec
xor
test
orb
out
std
cld
and
movsl
imul
or
out
shl
sbb
call
mov
leave
pushl
test
fs
add
repnz
adc
push
sub
pop
pusha
out
xchg
test
insb
jno
cmp
dec
in
pop
stos
outsl
lock
and
movsl
xchg
mov
mov
xor
jmp
xor
movsb
sub
mov
ljmp
nop
es
testb
loope
pop
and
flds
xor
int
pop
xchg
xor
in
lcall
xchg
mov
add
ret
lret
adc
cmc
les
xorl
sahf
add
adc
and
fdivl
insb
mov
outsb
and
mov
lcall
stos
pop
dec
xor
cs
leave
cwtl
aaa
out
sarb
int3
not
xchg
adc
jp
fstp
mov
ss
aad
fcompl
and
test
xchg
mov
bswap
pusha
add
mov
ss
adc
notl
jno
repnz
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
test
js
add
inc
loope
sub
or
scas
and
jmp
cmp
xor
and
xor
cmp
popa
gs
call
push
push
add
and
lods
sbb
pop
mov
lahf
mov
add
sbb
adc
sbb
dec
sub
pop
xchg
xchg
lods
imul
scas
or
js
leave
punpckldq
aad
or
loopne
lock
xchg
fstpt
add
inc
adc
mov
shrb
repnz
lock
repnz
ror
sub
lods
sbb
mov
and
and
xor
mov
test
lret
xor
into
dec
mov
clc
xor
mov
lods
sbbl
shlb
in
int
cmp
cwtl
insb
adcl
adc
cwtl
add
xchg
ds
add
cld
xlat
loopne
pop
sub
pusha
cli
lret
pop
pop
adc
das
sub
cmp
mov
addb
push
and
repz
mov
rcl
pop
enter
and
lret
das
fs
test
inc
sub
movsl
jb
or
and
shr
jg
mov
test
mov
insb
xor
ds
out
shl
and
mov
adc
cwtl
cmp
mov
aad
or
dec
mulb
lret
icebp
mov
notl
sbb
jns
fisubl
push
jge
aas
jge
ds
lock
fdivl
mov
push
xchg
sbb
mov
aaa
xchg
sbb
xor
int
icebp
sbb
and
repnz
lret
sbb
jo
xchg
sarl
sbb
jmp
add
xchg
out
loopne
pop
jmp
popa
lret
adc
cs
stos
test
loop
je
mov
jb
xchg
es
mov
xchg
xchg
xor
inc
lods
cmp
push
sbb
jno
mov
ret
push
xor
pop
repz
into
jb
or
or
adc
scas
lds
add
add
fiaddl
mov
das
in
inc
mov
lcall
iret
xor
or
pop
outsb
arpl
stos
pop
das
aam
xchg
stos
xchg
cwtl
push
in
imul
pop
cwtl
mov
mov
inc
mov
rorb
cmp
mov
lock
or
ja
jno
xor
inc
adc
test
mov
pop
dec
clc
push
adc
mull
inc
push
jno
out
inc
jle
lret
mov
push
and
push
in
adc
rcr
das
push
jbe
frstor
data16
pop
mov
pop
sbb
into
push
add
pop
add
ljmp
leave
sub
sbb
mov
ret
ds
xchg
dec
movsl
fwait
add
mov
in
inc
inc
mov
cvttps2pi
adc
push
fs
popf
jp
and
in
adc
jecxz
cltd
insl
cmp
cmp
mov
ja
test
jb
test
sub
daa
in
icebp
adc
or
mov
fs
ss
or
cmp
lea
xor
int
cld
sbb
int3
jae
mov
in
ds
iret
inc
sbb
leave
nop
repz
arpl
jno
inc
or
test
je
or
in
rcrl
inc
test
jb
repz
in
icebp
xchg
loop
xchg
aaa
push
add
jb
fnstsw
mov
mov
sbbl
es
jb
in
jp
and
cmp
jno
fwait
pop
dec
add
or
lea
and
movl
mov
pop
or
mov
call
mov
inc
mov
jmp
out
cmp
mov
mov
add
add
push
xor
mov
ret
gs
testl
cmp
or
pop
pop
add
test
pop
push
jp
imul
mov
out
sti
cs
scas
das
sub
and
xchg
ja
dec
loop
xlat
mov
push
test
test
movsl
inc
rorb
repnz
jecxz
pop
adc
flds
push
and
hlt
dec
mov
jg
sub
add
mov
outsl
sahf
cli
push
push
pop
sub
cmp
loopne
sbb
and
shlb
sub
push
test
sub
adc
and
imul
mov
xchg
push
rorl
lahf
cmc
mov
scas
or
mov
js
stc
cmp
out
mov
or
sahf
jne,pt
cmp
lcall
xor
hlt
rcr
stos
add
push
add
fwait
lods
shrl
pop
adc
not
andb
push
or
jns
loop
faddl
push
mov
ffreep
ja
lock
or
int
inc
ss
dec
xor
or
int
lcall
ret
sbb
xor
mov
adc
xor
popa
cmp
mov
lea
loope
push
xor
ret
jae
arpl
je
cmc
pushl
popa
sti
dec
arpl
dec
mov
mov
push
jp
jo
add
into
mov
mov
cwtl
mov
add
movb
push
notl
xor
roll
pop
jno
inc
pop
jno
shrb
cmc
dec
mov
mov
jg
cmp
inc
lret
pusha
and
nop
cmp
xchg
lods
sbb
lods
sub
jb
xorb
clc
ljmp
pusha
dec
cmc
aam
loopne
or
je
leave
out
sbb
mov
push
mov
adc
pop
into
loope
inc
call
push
ljmp
add
xor
mov
mov
sbb
jmp
dec
mov
fwait
mov
fwait
fs
jne
pop
js
adc
cmpsl
pop
mov
pop
push
jne
and
cli
movsl
cmp
scas
iret
lret
imul
cltd
aad
cmp
add
sub
xchg
or
jp
jp
sub
in
cmp
xchg
push
lock
fwait
jno
mov
outsl
inc
mov
or
lahf
mov
ljmp
jmp
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
and
repz
orps
insb
jle
pop
lret
sub
or
push
in
pop
dec
loopne
or
dec
loopne
add
dec
pop
or
imul
inc
ljmp
sar
cld
adc
aaa
pop
pop
inc
or
mov
enter
sbb
adc
adc
out
xor
push
sub
nop
int3
adc
push
ds
xchg
mov
or
mov
push
pushf
mov
mov
adc
push
sbb
sub
sahf
mov
push
popf
shrb
pushf
loopne
mov
sbb
stc
fs
dec
negl
push
xor
xor
inc
out
movsl
mov
and
push
cmc
inc
ror
arpl
insl
adc
mov
mov
mov
pop
pop
or
out
or
call
dec
cmp
jnp
stos
jnp
mov
push
bound
sbb
push
mov
xor
stos
pop
xorl
imul
and
in
incb
popf
dec
or
rcll
sbb
or
mov
push
xor
push
outsb
cmc
xchg
inc
push
xchg
out
mov
shrb
cmpb
xchg
jno
push
push
arpl
lods
or
insl
inc
rcl
xlat
push
mov
cmc
int
dec
int
ja
xchg
lods
adc
cmp
pop
ret
or
inc
cli
imul
fdivr
fidivrl
xchg
imul
fnstsw
mov
cmp
push
stos
dec
pop
loopne
mov
xchg
inc
push
mov
les
lahf
jae
xchg
push
xor
dec
fsubs
cmp
cmc
fst
imul
xchg
xlat
dec
fcoms
mov
sarb
and
rcll
sahf
shl
mov
pop
sbb
xchg
inc
cmp
decl
inc
mov
daa
cmp
or
xchg
jecxz
xchg
int3
sbbb
jge
push
xchg
dec
stos
ret
aas
in
out
in
data16
movsl
rcrl
mov
xchg
in
sbb
aas
cmp
xchg
xor
cli
ret
mov
aaa
pusha
or
mov
icebp
mov
sbb
popf
icebp
cmp
gs
xor
pop
sti
lds
sub
mov
jmp
daa
lock
mov
sarb
in
push
mov
int3
loope
or
sbb
lock
sahf
xchg
lds
jbe
cmp
push
add
test
or
int
fdivrs
nop
dec
stos
fs
or
or
mov
cmc
arpl
loope
int
pop
je
mov
aas
mov
lods
mov
cmp
inc
jbe
lds
lea
fdivr
fisttpl
mov
pop
out
or
push
loopne
jp
ret
ror
aaa
push
je
add
fildll
adc
sub
out
imul
jb
xor
stos
cmc
sbb
in
in
adc
pop
dec
inc
mov
xchg
fdivrs
jle
aam
xchg
int3
cmpsl
push
mov
orb
lret
adc
adc
pop
lret
mov
clc
push
mov
mov
cmp
fbstp
push
dec
test
addr16
jno
sub
pop
adc
repnz
inc
je
data16
push
lret
xor
mov
pop
inc
add
fwait
popf
xor
jg
or
inc
mov
shlb
cmp
movsl
jbe
addb
pop
fs
inc
repnz
into
mov
push
outsl
pushf
cmp
outsl
movsb
and
sbb
push
inc
imul
test
cs
push
imul
lret
xor
mov
or
fcmovu
imul
inc
push
and
or
repnz
mov
xchg
test
or
data16
fstpl
inc
es
adcl
mov
sub
push
mov
add
divb
jg
cltd
dec
ja
aas
jb
and
mov
ficompl
push
cwtl
stos
or
mov
jne
push
mov
pop
arpl
in
mov
pop
ds
pop
sub
xor
adc
jl
je
nop
pusha
push
hlt
xchg
enter
lret
imul
sbb
dec
jmp
stc
sahf
or
shl
or
mov
leave
xor
push
fcmovbe
sahf
sbb
repz
sbb
add
cmp
test
push
shlb
loopne
push
mov
roll
lcall
adc
cmp
mov
int
fwait
lcall
adc
mov
push
imul
ret
and
movsl
je
inc
cmc
adc
add
loop
shlb
ss
loop
sahf
sub
adc
movsb
pop
add
cli
adc
faddl
into
bound
fnstenv
xorb
sbb
or
repnz
insb
jno
repz
fistps
xchg
mov
and
mov
mov
sbb
xchg
les
cmpsb
or
rcrb
jmp
inc
cs
inc
and
jg
push
inc
xor
jecxz,pn
xor
dec
mov
dec
push
call
push
adc
pop
rcrl
jl
dec
cmp
lahf
mov
xchg
mov
fstpt
es
dec
pusha
xor
leave
push
xor
dec
adc
adc
jae
sub
or
popa
subb
xchg
inc
gs
arpl
cmp
stos
faddl
pusha
xchg
jecxz
notl
pop
mov
mov
jmp
xchg
bound
pop
jo
int3
nop
mov
fcoml
dec
loope
add
outsl
jb
adc
pop
nop
push
pop
add
jne
inc
push
add
push
and
jbe
sub
adc
jmp
in
xchg
jle
lcall
cmc
dec
out
pushf
xchg
scas
push
pop
mov
jae
and
fxch
jge
ret
adc
andl
cmpl
push
in
adc
arpl
aaa
sub
mov
inc
sbb
sbb
out
std
insl
lahf
lret
jns
sbb
add
mov
xchg
scas
pop
cmpsb
inc
test
fcom
or
mov
out
mov
jge
mov
xor
jmp
scas
adc
movsl
cwtl
inc
popf
ds
add
pushl
imul
cmp
and
stc
fistpl
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
pop
addr16
stos
pop
add
jb
pop
mov
mov
call
jb
scas
sub
fmul
jo
sbb
lahf
push
adc
stc
inc
xchg
cmp
std
int
jl
mov
jp
enter
stos
fcom
test
in
xor
xor
sbb
pop
in
lahf
test
xchg
xchg
jno
test
call
pop
and
into
in
xor
sarb
pop
cwtl
sub
add
lcall
push
aaa
jmp
mov
insl
pop
inc
ss
mov
push
adc
and
test
iret
mov
or
outsl
cmp
fsubrl
imul
icebp
push
daa
push
test
scas
pusha
sti
or
int3
add
aas
xlat
add
sbb
mov
xchg
test
notb
xchg
dec
fs
dec
out
cmc
movsb
in
std
jp
fyl2xp1
lea
push
jg
inc
or
push
cmpsl
addr16
xchg
lds
pop
sub
jns
imull
loopne
xor
mov
jmp
mov
ljmp
int3
cmp
inc
cmc
dec
imul
sti
pop
sbb
fists
push
imul
xor
jle
out
sbb
orb
mov
cmp
mov
pop
push
outsb
cmp
cmp
fcomi
sbb
sbb
and
push
mov
out
cmp
mov
mov
dec
and
int
xchg
fstl
mov
test
mov
sub
andb
xchg
jb
sbb
or
sahf
or
xlat
mov
and
dec
sbbl
in
adc
cmp
dec
lods
pop
cltd
xor
pop
mov
dec
std
invd
add
ljmp
dec
push
push
push
jl
adc
inc
jno
xchg
fcomi
push
push
jl
push
dec
and
cmp
xor
sbb
rcl
lods
insl
xchg
ds
mov
sbb
filds
mov
mov
les
out
inc
sti
inc
insl
pop
xorl
xor
fldt
das
ret
testb
jg
in
loopne
aaa
push
xor
xchg
lea
lods
in
push
loope
cmpb
rorb
or
rorb
lret
mov
or
imul
push
fs
add
xchg
cmpsl
add
flds
movsl
or
sub
mov
xchg
adc
pusha
in
lock
sub
enter
sbb
outsb
adc
sarl
mov
pop
test
dec
jmp
mov
adc
insl
int3
in
or
dec
jp
cmp
leave
cli
aas
testl
sub
mov
mov
fwait
dec
imul
inc
jge
loop
popa
mov
jle
or
xor
sbb
add
out
dec
popa
xchg
cld
and
jns
and
popf
adc
fcompl
xchg
xlat
jecxz
iret
and
and
ss
inc
dec
ja
cld
repz
mov
outsb
xchg
mov
aad
xchg
add
mov
xchg
mov
add
rorb
xchg
push
xlat
fidivrs
pop
enter
ja
shlb
sbb
mov
nop
lret
cmp
test
out
inc
adc
arpl
mov
cmp
decb
cwtl
push
int3
pop
lods
mov
rcll
or
sbb
hlt
lea
sbb
dec
out
push
add
in
ss
jmp
mov
es
xchg
mov
mov
aam
leave
inc
in
sbb
mov
imulb
out
xchg
and
mov
int3
repnz
lcall
pop
popa
inc
fwait
jl
mov
lea
shrl
mov
dec
mov
int
out
push
push
in
xchg
data16
lret
mov
aad
xchg
frstor
push
adc
rcrl
repnz
push
rcrl
xchg
sub
sub
mov
ja
mov
roll
rcrl
jge
insl
jp
sbb
out
into
int3
repnz
lea
rclb
rorb
imul
and
sbb
adc
inc
insl
repnz
xchg
mov
ja
movsl
pop
pop
inc
ret
notl
jecxz
sti
push
sbbl
daa
xor
mov
ljmp
cmp
adc
push
data16
cmp
pop
adc
popa
fwait
push
leave
outsb
jns
mov
sahf
push
daa
addr16
and
stc
sar
addr16
addr16
jne
cwtl
outsb
push
mov
cmpsl
adc
mov
repnz
ss
loop
ss
mov
cmp
xor
iret
orl
ja
xchg
cmp
pop
sub
xchg
jnp
xchg
jnp
gs
jle
cltd
inc
repnz
popa
dec
and
inc
push
ljmp
mov
mov
jecxz
rorl
mov
lahf
jne
pop
rcrl
shll
push
add
mov
lahf
mov
and
pop
pusha
test
sahf
in
movsb
fbld
and
jno
mov
popf
dec
pop
or
pop
mov
nop
push
sub
aad
bound
cs
adc
dec
inc
xchg
and
mov
in
xlat
cmpsb
sti
es
jg
out
inc
popa
insl
jb
pop
orl
mov
into
sbb
lock
notb
xchg
push
xchg
dec
jmp
insb
test
push
cmp
sti
mov
add
bsf
dec
fcmovnu
push
test
push
ds
cmp
data16
push
lock
lret
or
inc
shlb
mov
pop
pop
fwait
inc
js
add
push
js
inc
or
xlat
and
sbb
repnz
mov
push
dec
and
pop
inc
dec
xor
push
sub
push
push
xchg
push
cmpsb
or
inc
inc
mov
xchg
mov
out
inc
pop
repz
mov
test
sub
mov
es
test
fstps
js
push
pushf
mov
mov
or
nop
les
sub
mov
jmp
sub
xor
loope
insl
aas
sti
jp
loope
jo
and
pop
inc
mov
loopne
or
push
sahf
lret
jmp
call
stc
loopne
rcll
subl
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
lcall
add
call
bound
and
add
pop
call
call
test
mov
rorl
jle
lahf
mov
fmull
xchg
adc
sub
dec
test
mov
mov
xchg
and
xor
push
cwtl
inc
and
cmp
in
jns
mov
ret
aas
mov
lds
sbb
rorl
aas
icebp
scas
xor
out
add
in
mov
mov
lds
call
aad
stos
sbb
gs
jo
push
pop
in
and
pop
fistl
lods
cmp
sti
pusha
mov
push
ret
dec
xor
mov
xchg
js
in
sub
scas
test
inc
test
jae
jecxz
int
mov
pop
inc
cwtl
sub
and
ljmp
dec
dec
imul
push
std
xor
out
or
push
lods
jbe
jg
mov
int
jle
lds
ret
sarb
icebp
lods
test
sbb
fnstsw
fwait
add
jle
aaa
fimuls
add
add
das
mov
push
mov
sub
pushl
dec
rol
repz
mov
leave
and
mov
cmp
insl
jne
or
lret
stos
push
xchg
fsubrl
icebp
int
xchg
push
dec
cs
icebp
movsl
roll
mov
cs
cmp
loop
add
pushf
ret
add
and
xchg
inc
aaa
rol
push
pop
les
movsb
in
aas
add
push
mov
mov
vandnps
int3
push
pusha
dec
out
mov
xor
or
decl
outsl
cli
mul
sahf
sbb
sub
stc
in
repnz
sub
push
scas
sbb
pop
xchg
mov
out
fldt
push
pop
dec
xchg
sahf
push
mov
les
in
dec
dec
mov
mov
sbb
rcr
sub
outsb
idiv
lods
mov
test
out
and
sbb
dec
loop
jno
lret
fcmove
int3
or
sbb
dec
stc
lds
xor
ret
cmp
xor
fwait
mov
lds
mov
cmp
jnp
sbb
jle
addl
rcr
mov
xchg
mov
cltd
jbe
jno
mov
and
lret
mov
lods
mov
sbb
add
mov
fistps
sbb
push
sbb
add
jmp
jge
ficompl
mov
rclb
jl
jae
popf
xor
stos
sbb
shll
mov
mov
jae
push
adc
xor
shrb
xchg
stos
xchg
ret
pop
cwtl
ljmp
mov
adc
js
adc
dec
push
inc
cld
jg
or
dec
ja
jle
xor
add
lods
enter
and
cmpb
pop
outsl
mov
rclb
sahf
cmp
aaa
arpl
cli
mov
adc
sbb
rcr
pop
push
jge
mov
push
adcl
test
xor
sbb
fs
xor
js
pop
mulb
popf
pop
xor
xor
rcrl
jne
lock
stos
inc
add
cmp
test
pop
out
cld
dec
ret
mov
push
scas
mov
adc
ja
add
ret
fldcw
push
push
cmp
mov
shl
subb
rolb
loop
test
mov
push
mov
outsb
xchg
mov
dec
sub
dec
sub
jns
dec
fbstp
add
push
sbb
stc
arpl
roll
insl
mov
shl
ja
jb
in
mov
add
pop
mov
insb
stos
movsl
mov
fwait
les
xchg
lret
insb
dec
test
je
repnz
popa
sub
mov
cmp
aad
ss
jmp
push
cltd
inc
loopne
in
es
cmp
sti
jl
sbb
enter
popa
xchg
sbb
mov
cmp
mov
push
inc
and
add
lods
xchg
loope
int3
or
jl
mov
popf
test
popl
jb
lea
xor
xor
jno
bound
fisubrl
add
push
enter
ljmp
loopw
inc
movsb
test
pop
in
mov
fdivrp
cwtl
dec
mov
inc
addr16
pop
mov
cmc
push
int
cmpsb
push
sbb
push
pop
inc
xrelease
or
push
rorb
cmp
std
jge
jg
outsl
jle
loope
or
sbbb
test
shr
into
fsts
jbe
popa
loope
mov
dec
loopne
ret
cld
mov
into
ja
mov
mov
into
andb
scas
dec
xchg
ret
stc
mov
sbb
loope
pop
and
cltd
and
add
xchg
into
jp
fnstenv
decl
std
scas
mov
sub
push
popa
jge
leave
mov
lock
push
js
jo
push
nop
sub
xor
adc
and
push
js
inc
adc
lock
mov
cmp
dec
sub
dec
ret
es
mov
add
mov
jbe
cmp
stos
fwait
movl
stos
out
inc
push
mov
call
inc
mov
jp
inc
mov
jp
loope
fbld
je
dec
mov
cmpsl
in
scas
mov
fnsave
inc
dec
jne
add
loope
movsb
mov
pushf
dec
or
loop
push
jmp
xor
outsl
testb
mov
push
sub
push
sub
pop
loope
adc
lret
das
xlat
scas
rol
insb
cs
lret
cmpsl
xchg
ret
pop
rol
mov
push
mov
inc
leave
fistpl
mov
xor
sbb
stc
xchg
es
movsb
cmpsb
nop
add
stos
mov
xor
pop
sub
outsl
popf
rcl
daa
jecxz
iret
cmpb
mov
insl
xor
push
mov
jno
add
cmpsl
push
mov
data16
cmp
cmp
mov
push
pop
jno
cltd
addr16
mov
sbb
jge
int3
jae
sub
outsb
iret
loopne
mov
call
or
fistpl
sarb
or
nop
loopne
mov
add
or
push
pop
jle
inc
adc
mov
mov
pusha
xchg
cmp
or
addr16
jmp
mov
xlat
into
inc
mov
jb
xchg
mov
xchg
subl
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
mov
add
sub
and
sbb
inc
call
lds
movsl
cmp
movsb
les
or
iret
jmp
or
lods
es
sub
es
mov
inc
mov
repnz
sub
mov
pop
fistpll
pop
mov
cmp
fucomip
mov
out
out
aam
lds
aad
aam
xor
dec
jg
insb
rolb
cmp
cmp
ret
fistpl
insb
sbb
pop
pop
xchg
xor
sub
cmp
mov
outsb
js
and
out
jae
add
ds
mov
ss
aad
dec
lds
clc
sub
xchg
outsl
and
movsl
lods
pop
xlat
add
jae
mov
sub
dec
lock
pop
push
out
cmpsb
pop
mov
inc
sub
sbb
in
sbb
shll
mov
inc
sbb
adc
ret
jb
mov
xor
cwtl
vmovsd
sti
pop
call
mov
jle
mov
ljmp
xchg
and
sub
pop
push
inc
in
test
test
popf
inc
mov
or
mov
dec
mov
aaa
stos
mov
pusha
mov
sbb
in
add
xlat
adc
pop
je
sbb
inc
cmc
jl
jbe
js
pop
data16
jge
cltd
rol
or
push
lcall
ret
aam
repnz
sub
cltd
idivl
fsubrp
pop
xchg
lods
lods
fsubr
sub
xchg
sub
add
div
push
jae
addr16
sbb
das
push
jae
and
shl
stos
loope
icebp
js
xchg
call
xor
fldenv
adc
xor
sti
push
dec
sbb
cmp
pop
repnz
mulps
fldt
push
pusha
pop
out
in
shrb
push
mov
jge
cld
cmc
movsb
stos
or
pop
sbb
imul
sbb
xchg
or
lods
or
jno
mov
shll
into
inc
sbb
xor
test
xchg
or
xor
jb
push
add
mov
mov
cwtl
inc
aad
les
sahf
daa
mov
clc
mov
mov
push
adc
out
lret
dec
pop
sbb
push
and
dec
insl
outsb
adc
adc
xchg
fistpll
push
lock
push
sub
mov
sub
sbb
sahf
cwtl
mov
mov
sti
push
mov
mov
leave
clc
pop
in
lods
cmpsb
cli
xchg
stos
in
out
stos
push
lea
je
testl
in
cmpb
dec
sub
loop
mov
jp
mov
adc
icebp
pop
adc
add
cld
inc
xor
std
sbb
push
pop
popf
in
push
cld
cld
dec
and
or
rolb
lea
ljmp
push
mov
clc
clc
push
pop
out
cmp
pop
int
mov
and
popa
repz
fistpl
orb
mov
leave
clc
addl
fwait
inc
lahf
movsb
lds
adc
hlt
adc
insl
bound
mov
mov
sub
sarl
pop
mov
mov
enter
or
test
mov
push
push
lret
fdivrs
mov
cli
movsl
les
cltd
stc
jg
dec
mov
cmp
or
inc
mov
lods
mov
sub
fcmove
inc
rolb
jb
mov
sub
sbb
add
adc
mov
scas
aaa
dec
mov
bound
or
adc
pop
mov
xchg
pusha
sbb
daa
pop
lea
repz
xchg
shlb
dec
jne
mov
sarl
adc
sbb
cmpb
cmp
ret
mov
data16
push
mov
or
xor
or
sahf
cs
adc
repnz
cld
pushf
arpl
adc
and
repnz
lea
sti
mov
mov
xor
pop
or
lahf
lea
pop
aad
movsl
aad
mov
or
mov
cmpsb
ss
sbb
xor
jb
jb
mov
push
dec
sbb
push
cmp
int
sub
xchg
push
in
repnz
pop
push
adc
xchg
rcl
jae,pt
adcl
cmp
inc
test
cmpsl
cwtl
fsubp
cmpsb
test
cld
adc
pop
cmpsl
and
clc
movsl
jp
shrb
gs
push
xor
or
xchg
pop
enter
push
sahf
pop
push
fucomip
hlt
imull
pushf
mov
ficomps
ss
repz
cmp
adc
inc
shlb
add
mov
insb
sub
ret
std
std
inc
mov
push
adc
mov
add
or
mov
or
aas
imul
sbb
push
add
inc
mov
add
aas
push
mov
dec
rclb
stc
xor
aaa
fistps
lcall
inc
fmuls
mov
call
dec
movl
in
push
inc
imul
inc
pop
dec
call
pop
adc
add
mov
addl
or
inc
lret
cmp
je
push
out
shll
imul
push
mov
jmp
jl
lods
pop
cmp
sub
adc
sbb
gs
adc
add
ret
mov
ret
mov
mov
in
mov
aad
sbb
into
outsl
lds
jmp
xchg
pop
into
sbb
pop
imul
push
add
push
jmp
sahf
outsl
lods
inc
ss
out
cmpsl
repz
mov
or
cmp
push
jge
movsb
mov
lahf
jae
push
mov
or
xchg
or
pop
fxch
cltd
jae
jns
lcall
fwait
pushf
std
jg
sarb
fdivrp
popa
sbb
mov
dec
fwait
mull
insb
out
mov
xlat
push
andb
cmc
ret
adc
jecxz
dec
inc
add
addb
aam
movsb
sahf
lea
cmc
push
mov
ja
cld
cmp
inc
loopne
and
and
mov
and
lcall
mov
pop
clc
jp
shl
clc
push
pop
lret
movsb
jmp
mov
jmp
jnp
loope
ds
loopne
shrl
outsb
call
arpl
xor
clc
mov
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
orl
mov
fs
test
add
xor
mov
sub
jnp
jo
pop
arpl
or
scas
lods
sarb
mov
sub
rclb
cmp
sub
sbb
inc
or
mov
jae
xchg
and
mov
test
ss
pop
push
nop
xchg
js
loopne
popl
in
in
fcomps
loop
sbb
add
jbe
cmpsb
pusha
or
loop
insl
inc
in
push
xor
das
mov
xchg
jae
rolb
adc
out
cmc
jp
out
cmp
lds
aas
push
std
ljmp
jmp
fwait
inc
jno
push
xchg
xchg
pop
jne
jge,pn
xchg
je
fmull
icebp
int3
insl
gs
fnstenv
test
ja
mov
push
cmp
mov
xor
push
je
xchg
movsb
jns
cmp
mov
jbe
aad
call
int3
push
popf
push
aas
lret
mov
leave
sub
ret
xor
pop
inc
jmp
nop
mov
int
xchg
inc
cmpsl
lret
movsl
inc
push
push
sbbl
pop
lcall
and
mov
lods
mov
fisubrl
xchg
push
mov
push
cld
ret
popf
je
fs
movsb
test
nop
cmpsb
xchg
or
sub
cli
mov
cmc
cmpsl
fidivrl
or
fimuls
push
push
push
push
dec
dec
stc
add
and
dec
push
es
jp
dec
cmc
inc
stos
add
subl
xchg
stos
push
cmpsl
mov
jb
movsl
jp
dec
mov
cmp
cmp
xlat
xchg
add
pop
mov
fmull
iret
fisttpl
faddl
fsubp
loope
ljmp
movsl
and
lock
std
je
ss
or
cmp
cmp
icebp
std
mov
mov
add
pop
cmp
pop
dec
mov
daa
sbb
sbb
push
icebp
jbe
sbb
dec
jnp
les
inc
loop
xchg
aaa
or
xor
adc
dec
popa
in
lds
mov
fadd
out
sbbl
cmp
jmp
test
sub
stc
aas
lcall
scas
cmp
leave
jge
push
xchg
dec
pop
dec
push
mov
lahf
stos
data16
inc
pop
inc
sub
cmpsl
lods
les
push
shl
pop
pop
idivl
lock
shlb
jns
sub
push
icebp
adc
add
inc
mov
je
jo
es
shrb
push
xchg
mov
fcoms
call
test
es
jp
mov
aam
jg
shrl
sbb
mov
pop
fldcw
or
and
jp
push
daa
push
cmpsb
stos
cmp
push
fidivrs
inc
mov
fstpl
shrb
subl
pop
fcomps
push
scas
call
mov
or
mov
cmp
mov
adcb
sarl
push
mov
insb
clc
lret
es
mov
stc
xlat
or
ret
xchg
mov
sbb
fimuls
add
sbb
loop
andnps
nop
jge
add
push
mov
xor
in
mov
sbbb
ljmp
push
in
sub
jecxz
loop
add
mov
ja
or
pop
iret
lods
imul
fwait
ds
xchg
jnp
or
mov
jle
cmpsl
loope
out
pop
xor
lret
lock
pop
inc
outsl
in
mov
or
in
sub
leave
test
sbb
iret
adc
movl
pop
shr
sub
lret
jge
push
push
int3
cmp
je
stos
sbb
cmp
enter
out
cmp
push
out
xchg
popl
in
sub
lods
sti
icebp
imul
mov
jbe
adc
or
cmp
lods
mov
fstpl
jnp
data16
scas
das
jp
repz
sbb
clc
rolb
dec
xchg
sub
pop
jg
lock
sbb
gs
cmp
nop
push
jnp
loop
inc
pop
lock
or
jns
lea
daa
es
les
jmp
mov
xchg
mov
out
js
push
aas
mov
in
and
pop
rcr
jns
and
enter
dec
sub
popf
mov
pushf
pop
jbe
mov
xchg
mov
mov
js
popa
fisubrl
fbld
fists
mov
mov
push
cs
cltd
xchg
push
call
push
mov
mov
cmp
into
dec
mov
stos
mov
and
xchg
jb
repnz
movsb
adc
cmpl
cld
sub
cmp
mov
mov
lds
stos
pop
xchg
push
inc
aaa
jl
jge
or
dec
int3
ja
in
lea
popf
arpl
sbb
out
test
dec
std
jne
xchg
inc
mov
and
adc
mov
pop
ret
sub
sahf
daa
into
jecxz
jle
or
in
or
mov
ds
jmp
sub
cs
movsb
test
out
add
xchg
push
imul
les
pop
test
lret
test
push
aam
pop
orb
push
xor
xchg
je
pop
or
push
lock
xor
sbb
in
fwait
xor
movsl
xor
lret
mov
or
stos
daa
mov
iret
mov
sbb
xchg
pusha
or
fsubrl
or
jne
test
adc
stc
jae
adc
dec
xchg
in
cltd
dec
addl
add
lret
sbb
adcl
out
cmpsl
nop
int3
adc
imul
ret
ret
daa
pop
outsl
std
sbb
addr16
movsl
pop
aam
ss
sbb
jmp
mov
add
pushf
rcr
adc
ret
inc
sbb
jmp
js
mov
and
jno
subb
jle
cs
mov
xlat
movsl
lods
jnp
lea
xor
ss
inc
pushf
and
jno
in
leave
sahf
pushl
cmp
dec
add
in
test
sub
notl
mov
jo
jne
test
adc
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
movsl
test
imul
mov
jne
outsl
pushf
jecxz
push
cmc
xchg
xchg
jns
test
movsb
inc
or
jp
sub
ret
push
testb
mov
clc
ljmp
in
mov
popf
sub
push
inc
lcall
imul
xorl
leave
loopne
xor
pop
jne
mov
outsl
push
or
mov
sbbl
jle
dec
fadds
pop
retw
dec
jge
in
xorl
lds
aas
lea
outsb
add
add
std
xor
or
ret
sbb
xchg
pop
pop
test
pop
and
push
jp
fdivs
or
mov
std
sub
icebp
mov
mov
add
jge
lock
adc
nop
and
jge
int
jg
jo
arpl
jmp
dec
fucomp
mov
fs
xchg
xlat
xchg
bound
jge
jno
cmp
cmp
cld
mov
lahf
stc
cmc
push
mov
jmp
das
mov
scas
cmp
enter
repz
cwtl
mov
or
out
lods
les
pop
incl
jae
hlt
in
sahf
jne
loopne
push
pop
or
mov
lods
inc
dec
push
jmp
mov
lahf
lds
add
sub
mov
jnp
movsb
xchg
in
loopne
and
pop
daa
jge
jmp
xchg
inc
cmp
cmpsl
adc
dec
pop
mov
outsb
pop
cmp
bound
stos
xchg
xor
sahf
inc
ljmp
mov
mov
repz
mov
or
adc
xor
or
lea
ror
adc
jge
loopne
sbb
fwait
xor
add
imul
push
mov
mov
mov
sub
mov
sti
loopew
xor
pop
inc
aaa
xchg
add
int3
jp
in
insb
into
pushf
into
pop
es
cld
xchg
scas
enter
nop
and
sbb
outsl
sub
jae
pop
add
push
push
xor
dec
xchg
popa
ret
mov
lock
sbb
ficoms
mov
or
xchg
lret
loopne
or
inc
int3
add
or
mov
cld
rclb
in
lock
mov
scas
test
pop
push
pop
xlat
lods
pop
sub
mov
xchg
add
push
jecxz
shrl
hlt
cmp
rolb
push
mov
mov
xchg
xorb
jle
rorb
outsb
shll
cmpsl
sub
jl
sub
add
sub
jae
inc
leave
mov
dec
sub
jp
pop
arpl
call
dec
mov
push
mov
sti
fiadds
test
and
femms
pusha
das
daa
outsb
xor
mov
xchg
pop
xchg
push
out
dec
rcrb
add
dec
or
cmp
pop
pop
add
or
push
or
in
fistpl
loope
in
pop
dec
out
inc
cmp
mov
adc
or
in
fs
jns
out
test
xor
cs
add
shll
add
testb
or
mov
adc
or
inc
add
gs
imul
inc
loope
add
jno
fs
mov
sub
jne
fldt
sbb
inc
int3
lock
cmp
out
or
xchg
rclb
sbb
cmp
ret
inc
nop
pop
push
scas
push
rclb
sub
sub
jbe
mov
jmp
and
cli
adc
add
in
inc
adc
push
jle
ja
pop
imul
rcpps
shl
mov
xor
pop
popf
fsubl
es
cmp
test
push
mov
add
daa
in
and
test
pop
pop
mov
dec
add
popa
mov
into
out
push
je
xchg
cmp
flds
rol
rcr
jg
pop
xor
xor
lock
xor
movsl
adc
sbb
ja
and
mov
sub
arpl
or
imul
pop
and
push
clc
sub
mov
es
xor
inc
stos
jp
sbb
imul
inc
jae
ljmp
arpl
in
mov
ds
inc
mov
bnd
fidivl
cmp
xchg
mov
add
dec
sbb
adc
ret
int
mov
inc
sub
testl
cwtl
add
rolb
sbb
fldcw
adc
mov
test
cmp
add
jnp
cmp
lcall
mov
shll
add
xchg
mov
jl
leave
push
push
clc
dec
aaa
or
fbld
and
cmc
pushf
add
sbb
cwtl
lods
xor
outsl
pop
xor
mov
jns
sarb
or
xor
mov
outsl
aam
add
das
jnp
repnz
push
int
add
sub
aad
pop
aad
xchg
outsb
nop
in
icebp
lahf
jb
hlt
cmp
and
xor
pop
fimull
aad
jecxz
sbb
fsubrs
or
ds
hlt
push
outsb
lcall
xor
jae
push
sbb
jbe
ljmp
lea
out
call
add
rorb
add
sti
ret
ljmp
jle
xchg
rclb
enter
cmp
mov
mov
adc
mov
and
pop
lea
add
or
inc
xchg
rcr
or
xor
jno
negb
sbb
subl
out
fnstcw
sbb
xlat
nop
lds
mov
movsl
out
jmp
imul
sub
mov
ja
js
xorl
jmp
push
sub
add
pop
test
pop
mov
aad
pushf
xchg
add
jle
loopne
cmp
push
mov
movsl
pusha
lcall
push
scas
lea
sub
andl
out
adc
jno
push
mov
mov
imul
xlat
lahf
ljmp
xor
clc
or
call
shl
out
les
cmp
aaa
lret
jle
push
daa
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
gs
mov
add
test
jne
xchg
lods
dec
frstor
dec
ds
jg
sbb
test
mov
and
push
lock
lods
incl
pop
das
outsb
jae
add
adc
in
lods
mov
sti
repz
and
xorb
fdivs
or
xchg
jno
movsl
pop
add
and
fstl
dec
xchg
xchg
bound
sbb
jg
mov
cmp
or
rep
aam
lcall
push
dec
in
fdivl
in
ret
ss
pop
pop
xchg
dec
dec
xchg
es
fists
cmpsl
push
lds
xor
lds
ds
pushf
insl
in
xchg
fistl
imul
hlt
repnz
stos
flds
jae
sahf
leave
mov
sub
in
addr16
sahf
push
or
clc
cmc
jae
sbb
out
repz
sub
dec
adc
push
cs
or
frndint
xchg
jmp
insl
pusha
sbb
or
clc
push
jl
out
stos
ss
push
and
push
loopne
ljmp
push
xor
mov
sahf
arpl
cwtl
xor
into
inc
icebp
push
sub
push
leave
jae
xor
and
fiaddl
bound
mov
push
inc
inc
jo
or
hlt
popf
pop
dec
es
dec
les
je
testb
inc
das
lret
fcomp
jle
ljmp
jne
xchg
icebp
dec
mov
ja
cmp
in
mov
cmp
imul
inc
jl
mov
adc
mov
mov
std
lret
mov
cmp
dec
lea
lods
jne
fwait
xor
sub
data16
loop
aam
fldt
cmpsb
xchg
adc
test
hlt
cmp
pop
enter
inc
popa
xor
add
mov
xchg
push
arpl
lds
shlb
push
mov
xor
sbb
dec
or
shlb
mov
xchg
push
or
insl
daa
sub
inc
sbb
and
icebp
xchg
xchg
xchg
mov
push
fs
or
cmpsl
adc
cmp
pop
test
adc
cmpsl
xchg
fiadds
xorl
stc
mov
or
ja
stos
jns
and
incb
add
and
loope
aam
sbb
cmpsb
mov
loopne
push
jmp
mov
xchg
ret
dec
dec
mov
insb
aaa
jns,pn
repz
push
push
sub
sub
jns
xor
out
sub
mov
gs
imull
stos
xor
ss
or
sbb
cmp
adc
repnz
call
push
mov
jno
jle
pop
imul
pop
sbb
pop
sub
cmp
cmp
dec
dec
stc
mov
dec
jae
inc
stos
imul
dec
enter
sbb
mov
test
std
pusha
pop
cli
sahf
out
pop
lea
jns
dec
mov
cld
imul
in
inc
adc
pushf
movsl
sahf
jp
cmpsb
add
mov
inc
mov
clc
rorl
cmp
sbb
cmp
dec
enter
and
cmc
lret
pop
mov
sbb
mov
push
cmpsb
xchg
cmpsb
lahf
fdivl
and
cmp
sub
dec
nop
push
push
in
xor
out
popa
mov
fisttpll
push
push
mov
repz
dec
ja
pop
inc
sbb
fidivrs
neg
xchg
or
push
out
pop
stc
fiadds
push
dec
icebp
inc
les
mov
pop
enter
mov
and
lods
popa
ja
jmp
or
stc
mov
dec
mov
ret
clc
or
cmp
outsl
out
adc
fsubrs
pop
adc
push
or
cmp
das
xor
pop
test
jecxz
add
out
les
ss
or
xor
pop
insb
scas
lods
inc
unpckhps
adc
mov
jl
mov
icebp
insl
inc
je
pop
nop
pushf
or
test
lcall
inc
pop
xchg
mov
or
or
lock
dec
lret
and
mov
aas
cmpsl
cmp
sub
aad
fstps
in
xor
pop
stos
jle
mov
out
orl
mov
inc
push
mov
cld
push
scas
leave
add
jmp
sti
ljmp
pop
push
subb
mov
cmp
mov
add
adc
mov
cwtl
ret
into
xor
out
sti
xor
pop
cmpsb
mov
lahf
fcomps
test
or
jae
dec
pop
dec
mov
sbb
call
cmc
enter
pop
jecxz
outsl
pop
mov
repz
repnz
insl
inc
sti
push
adc
cs
test
pop
fildll
inc
jne
pop
in
jp
xor
in
aaa
xchg
in
nopl
pop
in
mov
push
stos
mov
mov
xchg
cmp
sbb
xchg
inc
sub
jb
hlt
ficoml
icebp
add
cmp
sub
std
sbb
adc
inc
pushf
dec
and
scas
mov
push
or
scas
lret
repz
sub
scas
sahf
test
jne
cmp
add
cld
pusha
or
mov
in
xchg
bound
sbb
or
push
ficompl
stc
mov
ljmp
mov
sub
mov
test
sti
insb
jecxz
sbb
mov
xlat
xor
cmp
sub
jnp
idiv
outsb
fwait
jge
pop
mov
pop
stos
ds
rep
mov
xor
sbb
add
stos
adc
mov
cmp
addb
mov
cwtl
into
add
cmpb
adc
xchg
lahf
jle
pop
fsubs
inc
loope
aaa
shr
dec
sub
mov
pop
mov
inc
call
movsl
mov
push
sub
jbe
jno
mov
inc
aaa
inc
je
cmp
xor
fsubrs
jmp
push
xor
lret
fsubp
lods
jg
mov
adc
push
sti
or
adc
cmpsl
lds
roll
xor
cld
add
and
xor
xor
cmp
jb
ljmp
lods
jg
lods
xor
xchg
enter
pop
xchg
ja,pn
subb
inc
fildll
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
js
or
add
inc
test
mov
addl
outsl
or
xor
mov
js
push
idivb
cmp
adc
ss
push
and
xor
jl
or
outsl
dec
xchg
mov
rolb
lret
mov
sbb
mov
lock
mov
aad
mov
int
aaa
jmp
jl
das
dec
sub
popf
ja
mov
xorl
cmp
pop
call
sbb
mov
ljmp
nop
jo
aad
pushf
xchg
cmpsb
cld
inc
aaa
sub
and
int3
test
out
insb
dec
repz
push
cmp
push
sbb
xor
repz
sub
push
sbb
mov
cmc
repz
fistps
inc
sbb
shl
in
movsb
ljmp
sub
push
lcall
pop
push
mov
es
add
pop
sti
aam
xchg
rcrl
xchg
loop
outsb
std
rcll
push
jg
sti
adc
sub
mov
js
xchg
xchg
ret
jbe
jcxz
xchg
dec
or
add
pusha
into
mov
jg
stos
push
rorl
insl
iret
rclb
lret
js
xchg
fs
adc
lea
mov
sbb
or
iret
out
mov
addr16
jo
ds
lea
ss
fs
inc
lahf
out
cmp
lea
adc
cwtl
or
notl
pop
push
dec
push
fs
or
dec
xchg
stc
movsl
or
add
adc
lods
aas
adc
push
hlt
jae
je
inc
push
xchg
dec
leave
mov
cmp
ja
arpl
movsl
fucomip
andl
fcom
lods
mov
dec
ja
hlt
push
inc
xchg
add
scas
scas
mov
cld
ror
mov
stos
rcll
push
shll
insl
mov
cmp
jecxz
fnstenv
and
jae
adc
movsl
jl
push
and
je
cli
lea
push
test
test
shlb
sbb
aaa
les
nop
inc
or
leave
lret
fbld
cwtl
lods
mov
rcrb
out
js
adc
aam
popf
jne
stc
mov
aas
test
jp
cmpsl
mov
data16
adcb
sahf
adc
cwtl
iret
dec
xorb
adc
add
lahf
pop
data16
sbbl
ret
outsl
cmpsb
out
fdivl
jno
fiadds
inc
cs
testb
mov
icebp
sar
adc
jmp
cmp
sub
cmpsl
lods
adc
xchg
nop
inc
push
xor
fnsave
and
and
dec
imull
pushf
mov
and
sub
mov
repz
push
mov
sub
leave
pop
inc
mov
xchg
orb
ljmp
fstps
sbb
xor
dec
roll
aad
jg
or
push
adc
cmp
stos
mov
ret
xchg
out
stos
mov
mov
adc
imul
xchg
cltd
mov
xor
cli
out
jnp
lods
and
rcrl
and
notl
fstpl
cmpsl
inc
add
aaa
xor
add
push
lret
loope
int
mov
ljmp
mov
adc
ffree
stos
aad
xchg
iret
push
add
jmp
mov
pop
push
aam
inc
lret
xor
data16
push
dec
gs
inc
ja
or
or
xchg
mov
shlb
mov
jle
adc
pop
push
add
ss
scas
and
adc
pop
scas
pop
jecxz
push
xchg
dec
dec
ret
xor
jecxz
sbb
data16
dec
xchg
lret
lcall
fisubrl
dec
mov
cmpsl
roll
cltd
adc
push
mov
xor
aam
xor
imul
fs
push
lret
ret
movsb
xchg
popa
cmp
sub
dec
adc
aad
pop
inc
adc
outsb
and
push
dec
sbb
cmc
mov
pusha
push
fisubrs
outsl
fnsave
xsaveopt
add
leave
test
in
sbb
test
test
jle
inc
mov
xorl
xor
outsl
in
cmp
fs
or
or
xor
cmp
lds
dec
jb
sub
adc
or
pop
push
loope
mov
xchg
jmp
arpl
or
lea
pop
sub
add
push
jnp
jno
mov
repz
mov
cmovo
fsubrl
mov
push
insl
cmc
fwait
pop
or
fimull
dec
mov
adc
dec
lds
jl
cmpsb
pop
push
xchg
pop
fdivrs
push
inc
mov
xor
repz
lock
outsb
repnz
mov
jne
adc
push
push
push
das
and
es
pop
sub
ja
pushf
xorl
jns
outsb
jnp
popa
push
jle
sub
add
lret
mov
or
repz
lret
xchg
xor
ret
ja
aam
pop
rcrb
jnp,pt
hlt
xlat
mov
cli
nop
imul
push
and
test
xlat
jne
out
add
xor
fnstenv
loop
xchg
cmpsb
mov
cltd
mov
and
cmpsl
push
iret
out
or
adc
lea
js
push
loop
in
cmp
call
mov
push
inc
mov
imul
lock
frstor
fs
js
cmp
add
lcall
ja
lret
push
sbb
mov
imul
xchg
jge
stos
and
les
mov
dec
mov
outsb
cmpb
cld
fsubs
sub
push
addr16
jg
cli
adc
iret
in
mov
js
mov
rcrl
mov
mov
and
jbe
push
pushf
xchg
cmovp
xor
mov
cld
mov
push
stc
stos
pop
pop
enter
or
shr
ja
and
std
jbe
add
movsb
xchg
loop
insb
push
push
add
mov
stos
lahf
ret
lock
lahf
in
adcb
loopne
xchg
cld
fs
adc
mov
jp
pop
add
movsl
mov
enter
xchg
cmpsb
aas
xor
ficoms
nop
push
mov
dec
xchg
pop
mov
sub
cld
idivl
cmpl
mov
fcoml
or
icebp
clc
fbstp
stc
push
cmp
sbb
lods
iret
outsb
mov
and
pop
mov
shl
shll
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
nop
xor
sbbb
mov
dec
testb
sub
pop
add
leave
imul
imul
leave
ljmp
or
sub
sbb
push
jp
stos
jnp
push
jbe
fldt
adc
add
push
les
add
idivb
scas
and
inc
mov
jp
sbb
xor
aas
push
mov
jle
adc
add
xchg
into
imul
mov
pop
shlb
scas
adc
sbb
shl
icebp
fimuls
bnd
xchg
pop
inc
mov
call
mov
dec
adc
mov
loope
fwait
dec
pop
cltd
jmp
pop
cltd
mov
xor
pop
cli
push
mov
int
arpl
xchg
ss
xchg
inc
faddl
pop
aaa
add
and
mov
adc
and
add
in
xor
xchg
cmp
and
shl
sub
cwtl
mov
jmp
imul
and
mov
xor
jp
mov
fsubr
rorl
mov
sbb
inc
aam
shl
mov
push
fiaddl
jmp
fisttpl
cwtl
sbb
add
sub
mov
xchg
xor
enter
dec
mov
dec
mov
rcll
mov
pop
xchg
repz
out
fidivs
mov
lods
xchg
push
stos
shl
aas
cmp
xor
sbb
dec
and
mov
stos
mov
js
paddw
sbb
insb
std
sbb
inc
sub
and
xchg
and
mov
daa
push
hlt
xor
sbb
imull
adc
or
pop
iret
mov
cmp
mov
int3
into
adc
negb
push
cmp
out
jo
mov
fists
or
fdivrp
cwtl
xor
subl
dec
or
sbb
iret
mov
and
fadds
cwtl
fadd
pop
fmul
add
sub
repnz
scas
dec
cli
push
repz
xor
test
mov
push
ret
adc
mov
or
sbb
jle
out
rolb
inc
push
jne
imul
cmpsl
ljmp
sbb
jl
cld
lods
pop
sub
lods
lcall
mov
xchg
lods
pop
or
jmp
push
or
mov
pop
push
dec
mov
into
xchg
xlat
mov
mov
sbb
cwtl
leave
add
pop
mov
ljmp
lcall
in
inc
push
mov
inc
sbb
jae
rolb
stos
sbb
adc
out
jns
mov
fisttpll
sub
dec
sahf
push
jnp
scas
add
in
cmp
test
data16
mov
add
data16
fadds
jae
jmp
fwait
mov
lret
shll
fbld
sbb
pop
nop
ljmp
jno
xchg
mov
js
inc
adc
mov
adc
xchg
dec
pop
call
sbb
pop
or
inc
mov
mov
cld
push
sub
enter
icebp
pop
shll
lods
iret
jns
jecxz
push
scas
jg
or
lods
nop
ficoms
mov
out
xchg
fistps
inc
mov
and
xor
dec
inc
mov
mov
mov
pop
mov
inc
pop
cmp
push
sub
jb
pop
inc
xchg
movsl
sbb
imul
sbb
ret
push
pop
mov
arpl
xchg
call
imul
movsb
je
adc
push
addr16
enter
jecxz
mov
lds
aam
sub
pop
xchg
jo
out
xchg
rcrl
imul
cmp
fidivrs
xor
dec
mov
fucomp
rcrb
dec
mov
hlt
mov
pop
lds
mov
hlt
test
sar
or
sti
pushf
out
cmp
test
cwtl
nop
adc
stos
inc
je
fimull
sub
fldln2
das
lods
mov
aad
xor
pop
dec
push
rol
lock
pop
pop
or
ret
aam
or
mov
call
int
mov
imul
jne
aaa
test
push
push
test
and
mov
enter
lods
cmp
jl
cwtl
mov
loope
mov
ret
std
lea
push
mov
sar
push
pop
jg
pop
dec
dec
mov
adc
xor
in
leave
jmp
fisttpl
out
ds
mov
ror
test
lds
out
jnp
lods
mov
outsb
stos
addl
push
or
xor
cwtl
xor
dec
lret
adc
xchg
es
sbb
cli
test
xor
in
cs
mov
dec
leave
and
pushf
sbb
cmp
or
xchg
frstor
pop
xchg
cmc
nop
xor
movsb
jl
repnz
cmp
sub
in
std
in
adc
inc
lock
mov
scas
lcall
cmp
orl
or
adc
sti
fmuls
jp
sub
in
lret
mov
int3
mov
xor
cwtl
je
lods
stc
shll
lret
aas
sbb
cmp
dec
inc
jno
clc
jp
lock
pop
test
push
or
sahf
aad
aam
fists
rcrb
int
pusha
iret
adc
jbe
push
mov
cmc
test
loop
nop
les
data16
in
sbb
fcmovne
add
dec
push
push
xchg
jle
rolb
pop
mov
sbb
jnp
xchg
mov
ret
cmp
into
cmc
aam
jbe
cmp
pusha
pop
mov
mov
fmull
adc
xor
mov
je
sub
rcr
pop
mov
inc
rclb
pop
repnz
sbb
dec
pop
test
lea
shl
adc
and
cmc
inc
adc
das
daa
jl,pt
cltd
inc
inc
jge
fcmovnu
mov
inc
hlt
popa
scas
pop
test
dec
cmpsb
jge
mov
mov
adc
jecxz
add
lret
mov
dec
lds
ret
mov
pop
std
pop
and
leave
pop
and
in
lods
jns
push
clc
fs
out
fidivl
inc
jcxz
in
sbb
addr16
mov
jle
andb
xchg
cmpsb
mov
sub
xor
ja
pop
inc
push
xor
loope
sbb
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
test
icebp
mov
add
cld
jp
add
mov
stc
add
addb
add
mov
jle
imul
dec
lcall
pushf
insb
pop
and
dec
pop
aam
sbb
popl
int3
inc
sbb
scas
xor
jne
xchg
inc
xor
push
xor
cli
add
push
cmc
ja
jo
pop
push
push
call
stc
mov
fwait
movsb
or
fucomip
cmp
jnp
dec
inc
pop
les
push
push
cltd
insl
or
cmp
inc
lock
cmp
ret
loope
or
xchg
xor
cmp
sarl
or
icebp
jnp
adc
push
inc
add
xor
scas
xchg
xor
rcl
mov
lea
lret
aas
lods
and
mov
mov
outsl
pushf
rcr
xor
stos
icebp
cli
pop
inc
or
or
rorl
pop
jo
shll
or
es
repz
imul
jmp
cmc
imul
cmp
or
mov
daa
cmp
loop
test
cmp
xor
sbb
mov
xchg
inc
test
push
ret
xorl
inc
loope
mov
push
jbe
stc
add
cmp
xchg
bound
stos
pop
ret
insb
add
push
mov
fstpt
in
pop
leave
add
mov
out
cmp
fsts
pop
xchg
jae
or
adc
fsts
ds
jl
dec
pop
and
in
xchg
outsl
add
add
loopne
leave
pop
or
adc
xor
add
out
push
mov
int3
dec
pop
sbb
push
ja
orl
jo
outsl
aas
add
frstor
sub
sub
sub
dec
inc
in
cmp
icebp
enter
pop
pop
lret
add
xor
arpl
xlat
fstpt
out
leave
rcrb
out
sbb
scas
ljmp
push
clc
adc
sub
mov
cmc
fdivrp
adc
je
mov
dec
popa
pop
push
insb
or
iret
add
cmpb
imul
aam
xor
lods
imul
stos
or
adc
xchg
es
xchg
lcall
xchg
xor
iret
push
mov
iret
mov
popf
test
fstp
movsb
icebp
bound
addl
mov
shll
outsb
add
jg
outsl
pop
fsubl
stos
mov
leave
rolb
sub
cli
xchg
xchg
jg
dec
jb
mov
jg
test
lret
jbe
mov
xor
call
imul
aaa
dec
mov
cwtl
je
ja
cmpsl
je
jb
xorb
pushf
loop
xchg
pop
imul
clc
sub
call
mov
and
push
rcr
das
ds
cli
add
mov
rorl
pop
aas
push
fsubrl
inc
enter
mov
insb
jp
push
and
adc
add
sbb
aad
inc
add
ret
xor
insb
pushf
das
jns
cmp
ja
into
les
lret
call
xchg
enter
rclb
imul
dec
dec
mov
repnz
fiadds
sbb
or
jnp
or
lret
test
mov
aad
fists
inc
pop
lret
dec
jg
jns
mov
dec
mov
shl
test
mov
lret
movaps
mov
sbb
dec
rorl
push
push
push
xchg
mov
dec
test
xchg
mov
sahf
addr16
mov
mov
gs
in
mov
es
mov
js
in
jecxz
mov
xor
jmp
cs
and
add
xor
xchg
mov
xor
mov
int
and
in
addr16
loopne
ss
iret
jo
push
je
test
inc
movsb
std
not
mov
pop
mov
pop
mov
mov
out
dec
clc
aas
pop
data16
sbb
mov
adc
mov
movsb
cltd
push
adcb
mov
mov
dec
outsl
or
je
inc
sahf
ljmp
jle
inc
add
repnz
xchg
stos
and
pshufw
sarl
mov
adc
out
jb
stos
imul
and
sub
sub
pop
pop
xchg
cmp
outsl
int3
push
dec
repz
sub
and
push
cmp
aas
fcoms
js
into
xor
leave
cld
mov
jecxz
xchg
movsl
leave
sbb
and
sub
pop
popa
pop
stos
fwait
int
arpl
push
iret
adc
inc
sahf
out
xchg
btc
scas
cmpsb
out
xlat
lahf
push
clc
popa
lcall
aas
pop
pop
xorl
cmp
mov
inc
sbb
out
pushf
lods
mov
pop
shrl
nop
add
les
fnstsw
inc
test
out
inc
sbb
filds
jl
inc
mov
adc
pop
sub
sahf
lret
push
dec
cmp
ret
test
add
xor
jp
mov
push
mov
std
outsl
adc
pop
lds
mov
daa
insl
xchg
cmpsb
pop
inc
or
fs
pop
in
into
push
in
sbb
fs
imul
imul
sbb
cs
sbb
sub
jnp
movsb
in
cmp
aad
push
sub
jb
dec
push
cmpsl
add
adc
adc
add
jno
pop
out
test
cld
pop
xchg
jns
jo
jo
out
inc
mov
pop
lret
outsb
inc
cli
xor
pop
sti
repnz
cmp
fbld
xchg
jl
js
movsb
mov
mov
push
pop
sahf
sbb
int3
das
adc
jbe
lods
sub
roll
into
je
add
fwait
outsb
popl
movsl
scas
push
hlt
adc
adc
aas
xchg
sub
sub
in
icebp
sbb
cmp
vphaddbd
sub
je
lcall
sbb
dec
lahf
imul
mov
fwait
lods
mov
pop
cltd
mov
ret
pop
add
cltd
sbb
decb
and
div
xor
mov
mov
cmp
icebp
iret
pop
scas
stc
pop
cmpsb
jl
rcll
ljmp
push
sti
sbb
xchg
repz
inc
stc
add
adc
pop
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
cmovae
loop
xor
push
and
jmp
fadd
std
cmp
lock
lahf
sbb
mov
dec
mov
es
js
stos
push
mov
sub
push
and
orl
cmp
dec
std
incb
pop
ljmp
pop
stos
negb
mov
pop
pop
xor
fcmovne
and
outsb
cmp
clc
leave
out
xor
ret
je
cmp
nop
jmp
nop
cld
sub
js
lods
lea
popa
fidivrl
bound
inc
pop
icebp
mov
pop
add
movb
jle
and
mov
test
sub
xchg
scas
pop
mov
daa
push
push
or
fimull
sub
loop
pop
and
rcl
adc
insb
fcmovu
mov
sub
mov
mov
lods
stos
lahf
lret
or
add
test
lahf
cltd
lds
sbb
add
xchg
sub
insb
xchg
push
mov
mov
popf
dec
and
divb
test
sbb
pop
pop
sub
lods
xchg
sub
cmp
sub
cltd
xchg
inc
ret
or
inc
pop
sbb
and
push
mov
mov
aam
jmp
xchg
ja
jg
in
pop
lcall
push
cmp
insl
and
xchg
aam
xor
add
sub
xchg
ret
mov
shrd
xchg
mov
push
iret
clc
inc
cmpsb
sti
inc
pop
aad
jno
adc
fildll
jg
pushf
or
lds
mov
cmpsb
xchg
loopne
sbb
cltd
inc
add
lcall
sbb
fwait
xchg
movb
xchg
xchg
insl
sub
push
jae
outsb
pop
cmp
ret
mov
mov
arpl
add
add
mov
add
int3
dec
into
loope
xchg
and
push
aas
pusha
add
dec
ds
inc
pop
pop
gs
les
stos
aas
jbe
sbb
aas
popa
mov
inc
lock
push
sub
shrb
pop
push
data16
sub
inc
xchg
cmp
je
out
mov
inc
fldenv
iret
add
sbb
and
loope
jle
jno
js
insb
xchg
add
jmp
xchg
stos
outsb
pop
jecxz
mov
mov
inc
sub
orb
and
or
test
mov
sbb
cmpsl
test
int3
pop
and
or
push
insb
or
and
mov
repz
pop
in
adc
sub
xor
mov
xor
sub
stos
and
mov
push
sbb
cmpsb
aam
xor
dec
push
cwtl
aaa
pop
and
movsl
int3
dec
mov
push
and
clc
push
sub
xchg
add
push
fs
pop
pop
mov
pusha
or
adc
jno
pop
fs
sub
loope
or
cld
stos
clc
add
pushl
xor
xchg
sbb
pop
and
arpl
mov
push
mov
js
shrb
ja
mov
pop
dec
adc
fdivl
mov
push
or
test
in
sar
repz
out
movsl
jo
adc
into
jb
and
sti
jnp
shrb
leave
iret
mov
push
loop
lods
imulb
das
mov
outsb
ja
insb
outsl
test
loope
or
enter
into
rcrl
mov
adc
cmc
add
inc
mov
loop
lea
mov
jb
add
mov
pop
jno
int
xorl
lret
pop
push
inc
add
outsl
and
std
shll
pusha
cmpsb
dec
or
push
fisttps
ror
xchg
push
in
dec
mov
cmp
loope
xor
dec
imul
cmpsb
adc
dec
sub
dec
shrl
movsb
push
loop
fwait
lods
sarb
lock
data16
xchg
stos
les
fdivr
jg
xor
dec
fs
les
test
sub
js
enter
ret
mov
push
cmp
xchg
outsl
mov
enter
cmp
call
not
mov
loope
daa
les
push
mov
cmpl
icebp
popa
inc
rclb
aas
inc
push
inc
jns
ja
xchg
mov
xchg
fdivrs
negl
jge
outsb
jno
add
sub
stos
lods
xchg
mov
jle
shr
dec
mov
xor
testl
mov
aaa
loopne
pop
mov
jae
pop
testb
adc
xchg
scas
push
fmuls
mov
adc
stos
mov
aas
fldl
and
jge
ja
sub
lret
jne
dec
and
and
sub
std
dec
into
ret
jle
dec
scas
xchg
out
inc
popf
mov
pop
insb
movsl
imul
xor
add
ja
inc
sbb
leave
loopne
or
mov
cmc
sub
aad
adc
movsb
push
gs
push
jecxz
push
lahf
jp
push
orl
and
sbb
call
dec
das
jg
movsl
outsl
jbe
shll
jae
jnp
lods
fldenv
cmpsb
pushf
dec
mov
cmpb
repnz
mov
push
pop
hlt
daa
push
pop
repnz
jne
adc
into
sbbl
sub
push
int3
outsl
push
dec
push
ficoms
xor
lds
into
mov
fsubrl
dec
andl
frstor
dec
xchg
or
sub
push
pop
or
sub
decl
pop
inc
xor
pop
fs
mov
and
loop
pop
stos
into
jmp
stos
mov
into
jge
push
xchg
out
and
clc
or
and
dec
fmuls
mov
data16
jge
filds
push
push
pop
pop
pop
into
adcl
sbb
dec
and
lret
cmp
pmuludq
pop
sbb
inc
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
cmp
es
loope
invd
add
seta
cmp
pop
adc
mov
mov
push
mov
aam
cmp
lock
in
lcall
lahf
gs
mov
repz
cmp
push
scas
or
je
mov
adc
inc
mov
scas
inc
mov
imul
mov
int
stc
outsb
cmp
cmpb
sarl
icebp
cmp
js
outsb
mov
std
adc
js
push
mov
sbb
mov
movsb
pop
sbb
rcrl
sbb
xchg
xchg
out
push
decl
mov
movsb
cmc
fwait
test
push
inc
call
jbe
adc
xchg
lahf
add
adc
mov
filds
stc
incb
je
jmp
xor
dec
mov
movd
push
mov
sub
popf
clc
mov
out
dec
push
sub
in
dec
push
xor
sbb
sub
aaa
xor
sbb
inc
adc
inc
xchg
and
iret
ljmp
cld
iret
or
movb
imul
popa
pop
dec
dec
or
lcall
mov
loope
pop
mov
and
add
jg
mov
test
sar
loopne
pop
dec
loopne
dec
nop
dec
jb
pop
mov
dec
sbbb
push
outsb
mov
add
inc
cmpsb
subb
jmp
fnsave
or
fcomip
repnz
fldt
std
sub
lahf
lock
addr16
and
dec
outsl
test
add
mov
in
add
stos
in
adc
loop
add
cmpsb
adc
and
inc
loop
mov
mov
mov
xchg
into
push
aaa
xchg
mov
aad
adc
xchg
and
add
divl
in
ret
lds
sbb
adc
addr16
insl
pushf
cmp
pusha
push
jp
jns
fldcw
hlt
lret
sarb
ja,pt
push
mov
or
dec
push
jge
mov
push
push
sbb
xchg
jne
dec
mov
daa
inc
cmp
jbe
pop
adc
pop
sbb
shr
dec
xorb
ljmp
jl
push
add
in
xchg
xchg
add
sub
dec
mov
dec
rclb
add
mov
add
jbe
inc
adc
push
flds
hlt
pop
jae
lret
repz
jne
and
pop
cmpsb
frstor
cmp
ret
add
testb
jge
dec
dec
popa
inc
outsb
inc
popf
mov
pop
cwtl
rcr
sbb
push
movsl
cmp
lods
aam
pop
dec
fistpll
das
repnz
adc
jno
jmp
lret
idivl
fsub
or
jmp
sbb
stos
in
popa
mov
or
push
sbb
das
fldenv
cmp
shr
aad
out
add
inc
inc
in
jg
aaa
sbb
mov
jmp
movsl
or
pop
mov
hlt
pop
xchg
stc
decb
push
das
mov
xchg
shrl
call
or
inc
pop
inc
xchg
sub
in
lods
cltd
push
ss
imul
adc
pop
cli
aad
int3
dec
aaa
dec
hlt
sub
cmp
sti
push
dec
add
fwait
pop
mov
or
xor
aam
loop
test
loope
iret
bound
xchg
fisttps
pusha
mov
adc
add
hlt
inc
mov
and
jne
movsl
movsl
mov
sbb
adc
imul
lds
or
xchg
pushf
mov
enter
ja
mov
sub
xor
mov
lock
pop
inc
addr16
mov
xchg
bound
lahf
mov
or
pop
mov
mov
incl
mov
je
rcl
stos
and
adc
cmpsb
sub
pop
xchg
pop
lret
add
les
mov
adcl
popf
add
out
inc
adc
bound
imul
divb
pop
shlb
std
pop
or
subl
sbb
lret
push
xor
mov
sarb
rcrl
cmpsb
fs
sub
mov
ss
ss
jp
xor
add
pop
xchg
inc
int
imull
pop
pop
adc
push
loopne
xchg
in
mov
cmc
jle
shlb
xor
or
out
lock
jne
outsl
or
enter
xchg
xchg
iret
push
dec
into
lret
xor
pop
fldt
pushf
or
add
ss
cmp
and
inc
add
sahf
xchg
daa
jge
in
ret
and
add
sti
addl
shll
pop
cmp
adc
int3
mov
adc
scas
adc
push
xchg
leave
repnz
leave
in
mov
mov
cmp
push
dec
lock
das
cmpsb
pop
std
stc
dec
cmp
fld
adc
inc
test
jnp
addr16
ret
fs
lret
clc
mov
add
xchg
clc
xor
push
repnz
mov
cld
movsb
add
je
push
lea
mov
cmp
pop
lock
push
gs
inc
ja
aaa
es
sub
sbb
inc
jns
iret
std
stos
nop
xchg
movsb
in
sbb
dec
sub
jle
shll
insb
xchg
dec
repz
lds
pop
mov
and
pushf
dec
push
pushf
mov
cmp
or
sar
lea
rcrb
dec
repz
ljmp
mov
push
mov
push
imul
mov
pop
or
add
pop
ret
loop
mov
mov
xchg
into
jae
pop
lea
or
loope
nop
mov
fcomip
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
adcb
rdmsr
and
xchg
outsb
xchg
iret
in
push
lahf
ja
negb
xor
mov
shlb
jns
cmp
adc
jmp
sbb
cmp
mov
xlat
nop
hlt
pop
dec
mov
popa
mov
stos
sahf
xchg
sub
or
dec
lock
xchg
lahf
leave
cmpl
clc
ja
les
mov
scas
jl
out
mov
fidivl
xchg
push
cs
mov
lea
ja
mov
cs
xor
out
lea
aam
mov
sub
notb
jae
stos
xor
imul
jge
int3
aas
repz
cli
fisubrs
test
mov
cltd
lds
mov
jbe
jmp
pop
aad
imul
pop
dec
sbb
push
cmp
add
std
out
dec
jbe
insl
inc
jne
popf
test
sbb
xor
in
sbb
fimuls
pop
mov
mov
adc
mov
shlb
mov
lds
aam
or
jl
add
push
clc
cwtl
lods
gs
lock
sbb
bound
xchg
add
dec
pop
mov
popa
pop
add
notl
pop
or
push
fld
xchg
aad
push
xchg
pop
push
mov
and
bound
roll
cmp
or
clc
popa
sub
push
leave
jmp
adc
xchg
out
imulb
push
cmp
inc
adc
ret
loope
aam
adc
xchg
pop
push
dec
lods
xor
fwait
mov
cmp
jnp
xchg
in
cld
jmp
mov
mov
sub
pop
adc
loope
fwait
incb
ss
xchg
pop
push
or
sbb
adc
pop
sbb
sub
sub
cmp
add
push
push
shrb
xchg
dec
jp
dec
stos
dec
add
frstor
test
ljmp
popf
or
repz
dec
xor
add
sbb
and
inc
xchg
dec
js
adc
or
cmpsl
lret
outsb
loopne
test
rolb
and
icebp
push
mov
push
addr16
jnp
loopne
pop
sahf
lods
mov
jp
cmp
push
inc
pcmpeqw
shrb
mov
daa
pop
mov
hlt
loopne
incl
lods
fcmovu
loop
xchg
sub
lea
lret
jecxz
stos
and
jmp
aaa
repz
push
sbb
je
repz
xor
ja
mov
add
push
bound
psadbw
or
xchg
dec
adc
jl
cmp
scas
popf
mov
enter
mov
push
ljmp
xlat
orb
sarb
into
js
movsb
pop
xlat
nop
lods
inc
cs
in
mov
lcall
and
xchg
xor
xchg
add
faddl
adc
and
add
sub
std
in
int
xor
jae
loope
lods
fstpt
mov
iret
jge
test
xchg
xchg
mov
ret
out
popa
clc
fdivr
pop
subl
jmp
cli
shll
or
scas
adc
out
push
or
fnstsw
daa
xor
sahf
pop
aam
in
dec
int
ds
icebp
cwtl
test
mov
repz
cld
xchg
ss
inc
sbb
bound
ret
fwait
add
mov
dec
lahf
mov
inc
cmp
mov
mov
pop
xor
push
ret
jle
mov
daa
or
imul
and
xchg
loop
push
stc
or
jno
jns
sbb
insb
popf
fidivrs
inc
fildll
test
xorb
add
mov
push
scas
sub
inc
xor
jle
mov
rcl
insl
mov
inc
add
add
leave
loop
sbb
jp
push
jge
lods
xchg
sub
mov
mov
out
push
mov
jae
xchg
loope
mov
jg
repnz
stos
fldt
pop
sub
sbb
cmp
xor
stc
and
cmc
sahf
dec
and
addb
and
iret
add
push
clc
pop
jns
inc
push
jg
sbb
stos
cmp
add
insb
sbb
mov
shlb
inc
scas
js
lahf
add
rorb
push
aad
cmp
std
sub
insl
addr16
sub
test
imull
test
sub
add
mov
sarb
mov
popf
xchg
aas
addr16
add
int
jg
mov
icebp
imul
push
roll
cmp
xchg
lret
adc
sub
repz
cmp
dec
dec
jge
jmp
mov
jne
cmp
jle
or
test
cld
adc
ficoms
push
and
inc
mov
cmpsl
out
rclb
mov
mov
dec
stc
rcll
cmp
mov
enter
adc
mov
push
push
pop
fsubrp
push
dec
je
out
push
cmp
sbb
mov
jb
ja
add
call
or
fsubrp
inc
push
dec
dec
int
adc
in
mov
loop
aas
add
pusha
shlb
out
andl
adc
mov
fs
lret
repnz
jecxz
adc
std
jg
xor
das
pop
dec
movsb
orb
out
dec
sbb
imull
cmp
xchg
push
xchg
gs
arpl
test
cmp
mov
sbb
fldl
lret
out
xor
fdivrs
xchg
sub
pop
ljmp
mov
enter
iret
call
inc
loope
lea
xor
in
add
stos
cmp
mov
mov
js
push
sub
push
mov
imull
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
setae
xor
xor
imul
mov
mov
mov
cmp
mov
mov
mov
sub
xlat
pushf
call
fldl
xchg
cmpsl
test
jne
sbb
sbb
pop
mov
popa
mov
xchg
int3
ret
jno
icebp
lahf
push
push
in
jle
arpl
sbb
aas
or
nop
jbe
insb
mov
in
mov
insl
test
dec
int3
outsb
jle
shrl
push
push
mov
lods
ljmp
add
and
jecxz
pushf
add
ret
mov
adc
cld
pop
or
mov
jns
js
enter
xlat
sub
mov
push
mov
mov
jbe
ja
rcll
sbb
inc
inc
jecxz
imul
push
xchg
jp
lea
jp
cmp
mov
int
aaa
out
lcall
scas
int3
loope
fdivs
adc
push
rcrl
pop
or
and
push
jo
ret
hlt
insl
mov
gs
je
fiadds
cmpl
dec
jg
push
outsl
sbb
bswap
jge
xchg
xchg
lods
sar
sub
stos
sahf
xlat
pop
repnz
pushl
lret
or
add
std
add
sub
add
lret
xchg
cmp
push
xchg
addr16
push
xor
jl
jecxz
jns
addr16
sub
push
call
jae
xchg
mov
push
les
out
sti
mov
ds
pop
cmpsl
push
xor
pop
lods
mov
inc
sub
adc
aad
sub
add
jbe
xchg
lcall
outsl
xor
das
lods
fldt
mov
mov
xor
jbe
dec
mov
sahf
mov
jl
hlt
dec
jg
ss
adc
mov
das
xor
pop
lcall
mov
rolb
lahf
jbe
adc
jns
popa
push
pop
jnp
ds
popf
lock
movsl
push
mov
cli
pushf
xchg
imul
mov
xchg
cs
or
sub
out
aad
jns
sub
or
jb
arpl
insw
nop
cmp
aaa
pushf
and
mov
stos
test
push
push
dec
jno
sbb
xor
sbbl
xchg
idiv
std
add
sbb
loope
adc
cmpsb
andb
push
lods
es
sti
fwait
rorl
jl
stos
imul
stos
cwtl
stos
xchg
test
push
xor
xchg
fiadds
hlt
push
out
push
push
test
jbe
pop
daa
jmp
insl
sti
icebp
lods
cmc
sarl
lods
aad
ret
add
and
push
cld
jo
mov
shll
or
xor
xor
and
je
pop
stos
in
inc
clc
dec
or
lret
push
xchg
cmp
cmpl
adc
jnp
jb
mov
add
sub
mov
and
cmpsl
jnp
mov
popa
ja
dec
dec
sbb
notl
dec
and
jo
inc
pop
pop
rol
push
inc
lods
pop
cmp
mov
aad
lret
or
sub
out
mov
shl
jns
dec
ret
fwait
push
cmp
or
adc
shll
pop
ljmp
sbb
es
lods
scas
lahf
ret
sahf
mov
add
and
inc
sahf
dec
xlat
xlat
pusha
sbb
dec
xchg
xor
jle
xor
scas
and
shl
stos
jge
lods
shlb
aaa
das
jg
jge
sti
add
mov
inc
dec
add
jns
jno
jge
push
lods
dec
dec
add
data16
dec
dec
into
outsl
stc
jp
testl
adc
dec
jp
sub
in
stc
ljmp
jae
shrl
repnz
mov
pop
mov
push
cmpl
hlt
or
or
jbe
mov
xchg
adc
ficompl
fwait
orl
jns
sahf
jae
xor
scas
jp
psrad
xchg
inc
fistps
add
mov
inc
cmp
sub
dec
inc
lock
aam
fwait
pop
aad
mov
in
mov
sbb
iret
gs
mov
pop
and
adc
shll
ret
push
xchg
lock
or
push
mov
push
dec
sahf
test
popa
and
outsl
lods
xchg
sbb
lods
lea
or
sahf
iret
push
push
adc
jae
mov
mov
cli
mov
push
lods
jl
fdivrs
pop
ret
xchg
xchg
mov
xor
repnz
cmp
push
imul
jno
es
jecxz
xor
enter
lahf
pop
fisubrs
mov
insb
test
rep
and
push
sub
dec
iret
mov
adc
fildl
adc
jmp
insb
movsb
cli
pop
lock
iret
cmp
enter
rcr
cmp
mov
ret
scas
mov
dec
dec
add
ret
sub
rorl
aad
xorl
dec
push
adc
or
adc
mov
into
cmpsl
add
xchg
enter
insb
bound
das
popa
movsb
stos
pop
jmp
pop
sub
mov
push
mov
mov
leavew
cmc
cmp
add
xchg
dec
xchg
xor
enter
cld
lock
push
lahf
test
stos
pusha
sub
mov
sub
data16
inc
dec
daa
jle
sti
mov
cmpsb
mov
cmp
sar
or
stos
pop
jbe
jp
das
fdivs
mov
iret
out
fucomp
ja
jl
and
jmp
cmpsl
jb
or
push
sbb
int3
jb
sub
jne
cmpsb
inc
dec
or
push
cltd
fwait
push
ss
jns
or
imul
lahf
aaa
jns
adc
int3
mov
out
inc
inc
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
scas
mov
mov
add
setbe
sbb
push
xor
pop
enter
jb
sub
pop
xchg
jne
pop
test
pop
fmull
inc
call
cli
xchg
das
or
repnz
fs
movsl
cli
dec
mov
sahf
jnp
clc
lret
popf
mov
int3
inc
sub
adc
or
mov
jl
push
add
cmp
xor
imul
test
sub
data16
or
arpl
pop
dec
ret
lret
dec
sub
jnp
pop
add
jno
dec
fmuls
rclb
in
pop
mov
sub
fdivrl
mov
add
cmc
dec
clc
cmpsl
xor
in
mov
aad
dec
cmp
mov
outsl
and
jo
xchg
cmp
rolb
ret
fbld
mov
mov
gs
test
cmc
jo
mov
mov
int3
ljmp
ja
in
and
push
fs
pop
jo
lcall
and
mov
jnp
pop
sbb
addb
sbb
in
lea
dec
jns
mov
add
push
jl
jo
lcall
aad
mov
add
or
cld
iret
mov
nop
loope
inc
inc
push
lock
push
jo
mov
dec
sub
push
fldcw
and
inc
or
dec
jge
movsb
or
push
mov
dec
dec
sbb
add
pop
std
cwtl
mov
mov
inc
mov
jl
and
leave
and
adc
ret
or
in
icebp
cltd
push
or
adc
lret
loop
out
add
push
imul
dec
mov
bound
stos
insl
imul
push
cmp
andl
imul
sbb
addr16
mov
ss
xor
dec
and
or
pusha
in
out
or
jp
adc
push
fidivl
out
sbb
sub
insb
popf
fisubs
or
pop
fisttps
lret
negb
repz
mov
xchg
loop
xorb
movb
arpl
loop
xor
ja
mov
add
lods
adc
mov
sub
xor
je
lahf
inc
popa
dec
mov
mov
cmp
inc
ret
into
mov
movsb
and
rolb
push
lods
aaa
outsb
push
inc
sbb
pusha
ds
bnd
mov
jecxz
arpl
xlat
imul
mov
pop
or
adc
lahf
iret
mov
shlb
rolb
and
jle
jge
ret
sub
pop
lahf
jg
orl
sbb
out
arpl
inc
aad
push
sub
xor
js
out
imul
xchg
lods
jmp
rclb
sub
push
ljmp
inc
popa
and
hlt
cmp
xchg
push
pop
cmp
in
pop
imul
jg
inc
imul
mov
add
add
repnz
jg
divb
jmp
jmp
nop
jns
or
out
add
mov
je
or
jl
rclb
cs
cmp
sbb
cmp
hlt
add
cltd
and
fstl
stos
xchg
add
adc
xor
movl
cli
mov
ds
data16
cmp
rolb
xor
scas
shlb
mov
xchg
lahf
lret
ss
insl
cmp
data16
loop
or
sqrtps
sub
pop
dec
aaa
imull
out
aaa
std
outsb
mov
movsl
and
popa
jnp
ret
push
mov
into
test
mov
pop
test
repz
jns
fiadds
jge
into
jp
fcmovbe
icebp
iret
adc
pop
push
fsubs
insl
nop
mov
nop
xor
stc
test
sbb
hlt
scas
jp
mov
test
repnz
aas
scas
cmp
int
out
inc
mov
stos
sbb
addr16
ja
shll
add
psraw
es
mov
adc
sbb
aaa
xchg
jle
push
lock
pop
inc
xchg
in
ja
scas
std
mov
dec
fists
cmp
adc
ja
jp
sub
add
fistpl
xchg
lock
cli
je
cmp
adcl
clc
jns
cmp
mov
mov
xor
jmp
jmp
fstps
xor
mov
push
jle
xor
cmp
imul
sbb
lock
popa
aam
mov
add
rorl
addr16
mov
popa
jae
pop
ret
sbb
aaa
aam
pop
leave
cmpsb
loopne
adc
fiaddl
outsl
mov
push
xchg
stos
int
pusha
loop
cmp
pop
inc
stc
add
in
popf
rolb
push
mov
jb
jb
insb
ds
mov
push
adc
leave
lahf
enter
rorb
push
arpl
cmp
test
sbb
lods
mov
adc
pop
sbb
inc
sub
stos
loop
cmp
and
sub
mov
xchg
add
inc
gs
enter
inc
fstpt
cmp
lret
fldenv
mov
ss
nop
lds
push
cs
xor
adc
jne
mov
xchg
cmp
xchg
leave
dec
hlt
popa
sub
push
push
xchg
int3
mov
sbb
push
ds
push
scas
cmp
mov
xor
mov
xor
pop
cmp
xchg
mov
or
push
xor
xor
dec
xor
aad
imul
jecxz
push
cmp
jp
pop
jecxz
sub
jnp
adc
lds
add
pop
lods
hlt
push
or
xchg
mov
and
mov
inc
mov
cmp
fisttpl
xchg
mov
sub
rcrb
sub
stc
jmp
mov
xchg
mov
push
push
mov
or
mulps
in
sub
pop
clc
lods
mov
add
pop
sub
mov
adc
scas
fcom
xchg
adc
cmp
add
aam
mov
stos
pusha
in
out
push
xor
popa
xchg
lods
inc
lret
filds
push
add
test
push
lds
iret
mov
shll
test
addr16
imul
repnz
adc
lret
sbb
xor
iret
xchg
gs
sub
jmp
push
loopne
push
mov
out
cmp
add
fwait
pop
sub
add
imull
pop
subl
pop
cmp
orl
pop
rorb
cli
call
sub
int
inc
mov
dec
roll
aaa
sbb
icebp
sub
mov
ret
inc
gs
add
pop
or
cli
popf
cmp
pop
or
adc
inc
or
or
divb
std
cmp
mov
and
stos
jecxz
xchg
mov
push
jg
fucomp
xor
mov
pop
sbb
in
dec
sbb
js
ds
xchg
xor
mov
popa
in
stc
cmp
jl
sbb
stos
push
loopne
loop
sub
sbb
sti
cmc
pop
add
sbb
push
add
loope
jnp
out
test
dec
and
iret
pop
dec
cmp
dec
mov
mov
xchg
dec
rep
inc
sbb
dec
xor
and
stos
ficoml
mov
fcomip
jns
out
mov
out
aam
xchg
iret
rcl
popl
pusha
pop
ja
pusha
in
mov
scas
pop
mov
or
xchg
dec
fldcw
insl
lret
andl
mov
cli
jb
mov
jne
adc
mov
call
add
pop
mov
test
in
and
insl
out
dec
push
repnz
add
mov
or
inc
mov
jnp
mov
mov
repnz
or
sahf
jns
pop
iret
add
pop
mov
sti
add
push
jae
cwtl
jmp
xchg
or
cmp
lock
pusha
push
xor
add
xchg
clc
aad
adcb
stos
pop
adc
inc
arpl
lods
cmp
jne
ret
mov
fsts
out
sbb
inc
jns
sub
es
repz
xchg
and
fnsave
cmp
in
push
ljmp
bound
jo
xchg
push
fistps
xchg
add
xchg
fs
orl
cs
mov
in
jb
dec
pop
fcmovbe
std
outsb
inc
xchg
jnp
xlat
inc
inc
fnstcw
lret
out
in
inc
aas
add
push
jl
inc
jo
or
pop
dec
stos
add
push
lock
icebp
mov
cmp
push
mov
lock
and
mov
in
int3
add
imul
adc
push
inc
js
xchg
add
inc
sbb
inc
adcb
mov
jg
addr16
adc
add
xchg
mov
xor
movl
jp
pop
mov
cmp
outsl
lds
jnp
mov
xchg
mov
in
inc
add
pop
hlt
ja
dec
sbb
movsl
and
adcb
popf
or
enter
enter
mov
mov
xchg
test
repnz
pop
vmovdqa
das
push
rorl
adc
leave
fisttpll
fcomps
out
and
pop
jo
and
push
lea
lcall
xor
jge
push
adc
int3
fcmovnu
rcrb
sbbb
je
inc
dec
das
jno
xor
shlb
ljmp
out
out
pop
mov
push
mov
out
xor
cmc
sysenter
cmp
pop
add
sub
add
call
dec
aas
mov
loope
cmp
push
xor
outsb
fisttps
repz
mov
fldcw
push
mov
in
adc
rcr
cmp
mov
add
test
lds
dec
sbb
sub
sub
rol
daa
into
fsubrl
add
dec
push
inc
pop
or
mov
shrl
insl
cmp
push
addr16
or
inc
push
add
shlb
mov
xor
mov
flds
std
call
inc
sbb
sbb
pop
icebp
shlb
stc
lds
and
or
es
push
pop
popa
push
sbb
or
push
pop
dec
stos
fildl
lock
cltd
or
fimull
cmp
aad
icebp
aas
or
push
lahf
pushf
ss
mov
sbb
into
cwtl
divb
pushf
push
adc
and
mov
dec
xor
push
mov
sub
cs
push
out
jmp
mov
aam
sbbl
adc
aam
and
hlt
inc
dec
mov
pop
mov
xchg
cld
adc
divw
xor
add
dec
pop
lds
loope
sub
and
dec
or
adc
cwtl
repz
inc
mov
cmp
xchg
les
push
push
sbb
xchg
inc
out
dec
push
xchg
mov
fstpl
pop
mov
pop
int
push
cmp
adc
sub
bound
bound
xchg
pop
inc
sahf
enter
out
negl
enter
scas
dec
cmp
push
sahf
mov
pop
adc
sub
mov
lea
cmc
xchg
sahf
dec
popa
cli
lods
fwait
sub
faddl
mov
orl
jmp
fwait
pop
adc
and
adcl
lahf
mov
jp
fbld
xchg
jg
xchg
les
sti
popf
mov
sub
out
add
sub
push
call
sbb
push
sub
inc
icebp
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
js
mov
invd
add
jge
ljmp
cmp
ja
adc
push
in
cmp
subl
sub
dec
daa
insb
fdivs
dec
or
mov
cld
rclb
jno
push
stos
mov
xor
pop
mov
mov
and
mov
mov
lods
push
cmpsb
push
outsl
test
addl
lcall
and
fisubs
xchg
iret
mov
pop
in
cwtd
and
mov
or
cwtl
lcall
xchg
ret
inc
xor
fcmovnbe
pop
add
or
jg
add
and
push
and
ds
aas
cmp
testl
xchg
mov
cmp
cld
jne
stos
adc
xor
inc
test
shll
fadds
pop
int3
std
or
cs
imul
sub
push
push
add
loope
xchg
ret
mov
jmp
das
hlt
popa
je
out
divl
imul
jle
push
ljmp
out
jl
jnp
stos
dec
addr16
push
adc
inc
inc
mov
or
enter
add
pop
leave
adcl
hlt
shlb
pushf
mov
repz
mov
jns
push
or
mov
sbb
or
sub
pop
jo
popf
xor
movsb
push
mov
sub
mov
imul
icebp
push
jbe
repz
ret
shll
xor
jae
jnp
mov
or
sbb
cmp
mov
jl
nop
push
cmpsb
inc
jbe
mov
cmp
jmp
mov
cmp
xlat
add
in
lahf
movsb
xchg
shr
mov
in
push
loope
xchg
jg
push
out
jle
mov
in
insl
add
and
sti
mov
dec
jo
and
aam
pop
inc
pop
mov
cmp
xchg
stos
push
push
adc
and
shlb
fsubrl
dec
stos
xchg
cld
jb
fdivrs
fistpl
jo
clc
mov
push
mov
mov
cmpsl
mov
adc
psrld
dec
test
loope
fldt
add
imul
push
cltd
xchg
dec
mov
clc
xchg
aas
repnz
inc
rclb
dec
fistpll
aas
int3
fdivrl
or
and
cld
or
mov
imul
cmp
push
rcrl
aaa
bound
daa
cmpsl
add
ficompl
dec
fcmovnb
mov
lock
adc
sahf
les
sub
test
ret
cltd
cs
imul
fcompl
enter
scas
mov
mov
dec
mov
int
std
insl
imul
fs
cltd
add
adc
addr16
pop
in
jae
mov
jmp
xor
sbb
push
pop
shr
pop
int3
cmpsb
mov
enter
sbb
std
sbb
test
ficompl
addb
jnp
pop
addr16
xchg
cld
pushf
sbb
mov
out
adc
clc
pop
daa
int
dec
lods
mov
daa
fldcw
scas
and
or
or
mov
fisubl
jl
xchg
iret
psubusw
add
pop
cmp
push
ficomps
cltd
mov
mov
inc
add
addr16
pop
xor
mov
stos
adc
out
std
rcrb
test
orb
cmp
in
sub
xor
out
push
push
std
fmul
sbb
sahf
hlt
rcl
xor
rcrb
aas
push
ret
clc
mov
push
dec
cmpl
push
sbb
in
push
popa
cmp
out
mov
test
mov
push
rcrl
jl
push
sti
sub
sti
shll
mov
cmp
ljmp
test
adc
mov
cwtl
pusha
fs
mov
jmp
aad
out
or
addr16
in
or
add
es
jmp
pop
jmp
xor
gs
xchg
add
pop
stc
sahf
xchg
adc
mov
mov
fnsave
orb
inc
inc
in
clc
lea
push
sbb
inc
xchg
pop
jo
rorb
jbe
dec
inc
pusha
es
lea
and
rcr
jbe
in
adc
negl
scas
and
pusha
shl
ljmp
and
sbb
mov
add
fwait
and
out
cmp
mul
mov
loop
ret
add
hlt
mov
ljmp
xchg
xchg
inc
adcb
mov
insl
fstps
cmpsl
fwait
sbb
adc
mov
xor
mov
test
mov
fwait
test
pusha
loopne
xchg
xchg
rcrb
inc
shl
pop
ja
outsb
push
push
push
sbb
push
mov
mov
and
xorb
jae
xchg
int
adc
hlt
ljmp
push
jb
mov
shll
lahf
push
int
in
out
arpl
push
je
push
mov
mov
pop
xor
out
or
or
jp
inc
into
sub
sub
jmp
imul
add
mov
fwait
jl
push
xorb
push
addl
pop
dec
dec
adc
cmc
inc
jno
loop
ss
cli
jne
and
leave
push
inc
rclb
loope
inc
pop
fwait
or
xor
loope
cmpl
dec
add
aam
add
xchg
addr16
fisubl
adc
pop
push
out
std
push
sub
mov
int
mov
adcl
push
clc
pop
lret
or
xchg
jo
push
mov
jmp
in
pop
push
mov
ja
pop
leave
or
rcrl
pop
add
add
out
cmp
aam
jg
int3
push
ret
cwtl
xlat
div
lea
sbb
mov
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
int
js
invd
add
cvtps2pi
dec
mov
inc
aad
cli
test
or
movsbl
push
push
xchg
jns
cmpsb
sbb
call
pop
lcall
mov
cmp
sub
inc
jbe
cmp
xor
jb
testl
fwait
cmp
sbb
inc
pop
cmp
addr16
inc
mov
imul
dec
mov
jo
fs
fdivl
jb
lret
testl
adc
hlt
fs
push
int3
or
gs
aaa
push
push
lcall
and
mov
mov
orl
sti
and
mov
jae
mov
cmp
jns
or
adc
insb
nop
mov
jle
iret
inc
hlt
iret
add
je
daa
fdivs
ja
stc
repnz
loopne
mov
fs
add
movsl
mov
push
pushf
insl
movsb
js
xchg
mov
int
jmp
fiaddl
xor
add
mov
xlat
inc
dec
pop
in
lds
pop
mov
ja
adc
out
or
lret
mov
arpl
popa
jge
cmc
cmp
out
dec
and
mov
dec
push
jbe
dec
or
test
les
sbb
das
mov
clc
xchg
mov
frstor
imul
roll
mov
and
inc
mov
sahf
fs
mov
mov
outsl
lea
add
xor
dec
test
pop
push
push
ss
test
roll
or
test
xchg
sti
fistpll
imulb
pop
xor
fstl
inc
mov
dec
add
aaa
or
jmp
mov
jb
leave
leave
cmp
mov
leave
pop
out
lret
outsl
rcl
or
loop
add
lock
inc
sub
sub
pop
xlat
mov
jne
inc
dec
xchg
es
mov
jnp
cmp
cmp
popa
fsub
push
push
adc
rorl
rolb
ret
pop
mov
loope
dec
mov
fs
movsb
and
js
lret
mov
inc
xor
int
aaa
das
inc
in
movd
ds
lea
xchg
adcl
xchg
dec
and
xchg
inc
add
xchg
jne
jg
inc
or
ror
xchg
outsl
xchg
push
add
xor
push
outsl
nop
or
mov
aas
and
inc
dec
cmp
popa
mov
fstp
mov
push
repz
pop
arpl
sahf
push
xor
dec
cli
xlat
bound
sbb
dec
shlb
inc
leave
adc
xor
fdivl
cmp
mov
enter
fcomps
aad
aad
dec
outsl
aad
in
cltd
sub
mov
xchg
outsl
lcall
mov
jnp
jb
int3
sub
pop
jecxz
test
xor
lods
pop
push
mov
ret
rcll
jg
xor
ja
mov
xor
cmc
cmp
xchg
aam
inc
push
mov
loop
popaw
test
stc
and
test
cmp
loop
push
ds
and
pop
aaa
dec
push
jae
in
inc
xchg
jo
shll
notl
cld
fnsave
ret
in
pop
sbb
pushl
shll
push
lret
pop
adc
sarb
loopne
and
inc
bound
lret
clc
cmp
inc
dec
ret
lcall
call
cmp
fistps
push
mov
sub
jb
jmp
je
mov
loop
jle
and
aad
pop
imul
movzwl
mov
cmp
jp
add
daa
std
push
outsl
cld
push
xchg
movsl
inc
or
lahf
xor
or
xchg
mov
aam
in
rcr
icebp
xor
int3
push
push
pop
fldl
testb
dec
sub
mov
mov
sbbl
cli
xlat
xor
pop
push
xchg
outsl
mov
sub
or
dec
mov
fistl
push
imul
mov
pop
addr16
xlat
andb
xchg
xchg
mov
out
mov
cmp
cmp
pop
andb
and
repnz
dec
shll
loope
or
dec
mov
xor
jb
in
xor
sbb
mov
inc
mov
test
fstp
sbb
test
push
das
xchg
fsubrl
mov
pop
repnz
mov
in
jae
add
enter
push
dec
push
into
xlat
xchg
roll
adc
shll
jg
hlt
fsubr
pop
inc
scas
stos
jno
xchg
inc
cltd
push
aaa
cmpsb
xchg
jnp
sti
sub
loop
jae
mov
into
pop
jmp
loope
test
loope
xor
movsl
push
int3
leave
adcl
adc
neg
mov
sahf
daa
aam
sub
mov
mov
sub
pop
push
adc
sarl
xor
pop
stos
xor
mov
pop
nop
andnps
jnp
push
mov
repnz
movsb
div
adc
xchg
inc
xchg
icebp
dec
add
push
lcall
ds
inc
jb
pushf
inc
push
jg
imul
pusha
xor
outsl
xchg
adc
repnz
xlat
jg
stc
fdivr
test
in
fisubl
push
sbb
rcr
cmpsl
cs
imul
decl
dec
sub
pop
push
adc
mov
xor
les
fs
clc
mov
popf
dec
and
cmpb
mov
daa
mov
xchg
or
push
cli
xorb
mov
mov
push
pop
out
clc
hlt
push
cmp
xor
sarb
mov
notb
mov
xor
sub
insb
mov
insl
ja
xlat
add
jne
or
es
xchg
andl
xchg
inc
inc
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
xor
mov
add
lret
aad
les
add
cmpsb
fidivrs
or
push
sahf
movsl
aam
mov
xchg
dec
jmp
addr16
fsub
sbb
enter
add
mov
iret
insl
cmp
idiv
jnp
inc
jg
stos
mov
mov
mov
loope
cmp
xchg
push
pop
mov
call
out
fdivrs
std
jne
pusha
dec
adc
inc
push
lea
xchg
and
xchg
aam
cmp
push
movsb
mov
imul
xor
loopne
mov
out
mov
add
mov
into
jne
jae
filds
or
pop
fistpll
sbb
dec
imul
xor
xchg
in
outsb
daa
push
xbegin
pop
stos
mov
xor
dec
push
fcom
stos
stc
jge
lret
xlat
inc
push
cmp
dec
in
loope
or
jle
jb
stos
jge
enter
xchg
mov
mov
add
sbb
cmp
jns
jmp
mov
mov
insl
aam
jge
shrb
lock
ds
cld
ljmp
jle
adc
repnz
js
lods
movsl
pop
pcmpeqd
lock
or
jg
cmpsb
out
in
lock
mov
mov
push
das
fiadds
insb
addr16
jne
roll
sub
outsl
dec
xor
insl
icebp
loopne
out
dec
popa
sub
push
scas
pushf
aas
out
ret
cmpsb
and
xchg
cmp
mov
stos
inc
js
imul
lock
sahf
lcall
test
pop
cmpb
sub
outsl
fcoml
stos
iret
stc
add
ds
xchg
fs
inc
push
push
adc
lret
pop
out
mov
push
cmp
jmp
mov
jnp
mov
push
test
ds
cmp
popf
dec
push
int3
test
in
stos
push
mov
jne
js
enter
filds
sub
loopne
xchg
jne
rcll
scas
xchg
mov
cmp
jne
jmp
xor
loop
pop
outsl
pop
push
clc
push
insl
cmp
testb
add
test
adc
jne
mov
call
cmp
add
xor
out
push
mov
mov
test
fistpll
cmpl
pop
and
mov
mov
mov
cmp
xchg
sub
cmc
sarl
adc
pop
sub
popf
arpl
std
jp
filds
jns
xchg
and
cltd
rol
and
jb
imul
in
scas
in
dec
fisubrl
xor
xchg
mov
jnp
and
jge
xor
push
or
cmc
mov
dec
mov
pop
push
ja
cmp
roll
jmp
test
lret
pushf
and
xor
dec
dec
dec
and
mov
add
leave
push
addr16
pop
xchg
push
adc
insl
adc
iret
lods
pop
leave
xor
jecxz
sub
insb
int3
daa
xchg
mov
les
divl
jge
scas
ds
dec
inc
incb
mov
push
cli
jae
push
push
lret
shl
shrb
mov
sbb
add
jle
push
mov
cmp
filds
push
aaa
mov
scas
cmpsb
fwait
sbb
jo
fst
mov
push
or
sub
in
mov
ja
lret
popf
sub
xor
icebp
ja,pt
or
mov
mov
lods
xor
imul
addr16
sarl
pop
jl
adc
ss
lods
fistps
xor
movsb
jo
stos
cli
in
jle
jae
aam
addb
xchg
mov
lods
das
add
mov
movsl
pop
adc
test
jb
or
call
mov
sahf
cwtl
cmp
mov
bound
loopne
add
fsubl
xchg
pop
mov
mov
lahf
aas
imul
jecxz
dec
jecxz
call
jp
mov
xchg
pop
ret
or
inc
call
xor
test
inc
xor
negb
rcrl
imul
test
test
test
orb
ja
sub
mov
add
mov
fwait
mov
out
roll
lahf
pop
lret
sbb
jecxz
rolb
ljmp
sub
test
jne
sbb
and
push
sub
xlat
mov
rclb
aad
or
mov
ja
in
pop
mov
cmp
ljmp
clc
or
inc
dec
mov
cs
mov
ds
fisttpl
jl
mov
bound
pop
mov
cld
xorb
mov
addr16
jl
pop
xor
or
test
mov
pop
or
adc
fstps
xor
addr16
je
mov
outsl
add
push
pop
aad
mov
cmpsb
pop
adc
icebp
sbb
cltd
adc
sbb
cmp
or
daa
inc
mov
mov
xlat
mov
imulb
xchg
push
sti
in
aaa
push
sbb
inc
aad
int
jecxz
loopne
fbstp
cld
lock
jo
lods
aas
xor
pop
scas
popa
in
dec
adc
gs
xchg
cltd
and
aaa
or
std
mov
sbb
popf
adc
mov
push
dec
data16
cmp
mov
cli
inc
pushf
cmc
xor
mov
scas
jo
cmpsl
lods
sbb
jno
jle
inc
push
daa
loopne
and
xchg
sbb
push
jbe
push
sub
mov
stos
jmp
dec
sahf
xlat
ret
gs
lea
and
push
out
dec
pop
cmpsl
pop
dec
pop
jb
mov
fisubrl
dec
jb
sbb
fldenv
push
mov
xchg
cmp
sbb
in
aam
xchg
push
stos
jb
in
subb
mov
mov
in
in
inc
xchg
ret
jnp
inc
ss
fdivrp
mov
mov
jns
push
lcall
mov
push
jo
cmp
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
jg
pop
out
cmc
push
push
jmp
aas
and
add
lock
mov
dec
push
sahf
test
push
iret
lock
dec
notl
xorb
jnp
imul
leave
push
push
jo
adc
adc
adc
xchg
rclb
imul
cli
jnp
push
mov
mov
aad
outsb
pop
cmc
lds
fistpl
popf
leave
inc
mov
fbstp
cmc
movsb
xchg
cmp
scas
jo
xchg
inc
pushf
test
pop
cmp
jp
fs
adc
push
xchg
mov
mov
jp
and
mov
aas
popa
push
scas
sub
pop
std
mov
cmp
inc
neg
xchg
pop
aas
pop
fdivl
cmp
outsb
lahf
in
push
lcall
outsl
sub
jae
icebp
and
ss
mov
adc
ds
insb
notb
jmp
cmp
mov
inc
pusha
mov
mov
icebp
mov
mov
mov
stc
test
and
outsl
mov
jo
cmpsl
dec
jbe
mov
sbb
cld
push
pop
mov
adc
inc
out
xchg
out
subl
outsl
mov
call
lcall
jno
mov
add
popf
lods
in
imul
outsb
inc
push
cltd
adc
adc
clc
jecxz
dec
fdivl
xchg
sahf
loope
std
sahf
inc
or
and
pushf
movsb
int3
jb
and
test
ret
or
cmpsb
xor
mov
lret
sbb
sar
and
movsl
push
movsl
mov
add
add
push
imul
fnstsw
sub
push
mov
sti
inc
cmp
pop
cmc
lea
mov
push
jb
add
movl
faddl
push
sub
add
adc
xchg
push
aas
jb
in
cltd
jb
ret
je
sub
outsb
sbb
xlat
lcall
sbb
xor
ljmp
iret
cmp
clc
xchg
mov
adc
sbb
cmp
lds
push
push
fdivs
mov
push
and
jae
ljmp
jge
ds
lds
xchg
mov
xor
inc
mov
out
xlat
mov
jnp
push
sti
mov
sarl
popa
bound
pop
or
xchg
mov
jno
lods
mov
sub
je
pop
mov
or
dec
jp
out
push
jl
movl
pop
in
jg
xor
inc
adc
inc
add
sarl
pop
sar
test
aas
call
movsl
jns
pop
shl
adc
sahf
pop
or
sub
push
mov
scas
jecxz
fists
pop
pop
das
stos
or
xchg
js
jns
pusha
fstpl
add
insb
adcb
add
adc
sub
xor
int3
shlb
mov
add
sbb
xlat
and
mov
sbb
ss
cli
aam
fucomi
out
sub
test
inc
sub
fisubl
mov
daa
icebp
cmp
mov
mov
scas
fnsave
sub
inc
push
adc
repnz
mov
icebp
or
xchg
mov
fcom
push
cmc
nop
push
cmp
cwtl
hlt
sbb
out
jae
lods
cwtl
xchg
pusha
push
sahf
or
pop
cld
jp
and
in
mov
imul
jo
out
fwait
sbb
sti
test
loope
insb
cmc
xor
aad
jmp
leave
dec
fcoms
xchg
pusha
out
test
daa
test
mov
push
jecxz
or
inc
insb
into
es
data16
mov
or
add
mov
mov
addb
icebp
cmpsl
push
fdivrs
sbb
and
pusha
ret
scas
cmp
inc
inc
sub
aaa
jb
sahf
or
loope
lds
xchg
add
mov
nop
cmp
mov
daa
stos
mov
mov
pusha
mov
jns
dec
inc
dec
sub
xchg
add
mov
paddw
push
imul
mov
movsb
xor
aad
mov
push
ljmp
mov
fprem1
stos
inc
pop
out
mov
mov
add
mov
out
nop
fadds
adc
imul
hlt
ss
push
pop
in
enter
mov
add
dec
xchg
outsb
cmpsl
push
leave
push
ret
repz
sub
ljmp
mov
pop
fidivrs
and
sbb
in
xchg
es
into
mov
repz
and
fdivr
inc
fildl
jae
push
fs
decl
inc
and
pop
mov
jp
fisttpl
orb
fbld
loop
xchg
adc
mov
test
sbb
jno
pop
les
push
bnd
push
inc
int3
push
add
xor
repz
sub
pop
xchg
xor
enter
xchg
mov
inc
push
insb
or
js
jb
dec
fildl
mov
lahf
aam
jge
pop
cld
fs
int3
xor
aaa
data16
sbb
cmp
dec
sbb
or
or
ja
repz
out
stos
fmull
dec
stos
out
push
roll
sub
lea
lahf
fiaddl
dec
js
insl
roll
sub
mov
scas
gs
pop
dec
popa
data16
jecxz
out
repnz
mov
pop
nop
sbb
inc
lcall
inc
ret
mov
and
jecxz
iret
push
push
sti
shrb
rcl
push
lahf
stos
out
fst
adc
xchg
ja
cmpsl
push
or
sti
add
cmp
frstor
xorl
insb
push
and
add
and
jmp
fcmove
xchg
pop
pop
test
or
push
fwait
jae
mov
sub
sbb
push
pop
xchg
into
outsb
xchg
out
pushf
mov
cmp
or
or
cs
enter
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
loopne
or
enter
or
por
jno
cmp
sub
popf
sarb
stos
push
not
mov
push
sub
aam
xor
mov
in
bound
shr
xor
sbb
shlb
aas
fsubrs
idiv
test
mov
xchg
xchg
cmp
dec
fdivrs
fdivrs
push
mov
or
jmp
and
adc
dec
mov
mov
das
xchg
out
pop
fisttps
pop
cmp
jp
imul
sbb
loop
push
mov
das
dec
addr16
cli
enter
xor
push
divl
push
pop
sbb
mov
loopne
lcall
or
out
cmpsl
movsb
leave
dec
mull
aad
mov
stos
pop
add
mov
dec
sbb
fldcw
add
inc
jp
pop
aam
cmp
dec
inc
loopne
sbb
int3
inc
xchg
jne
pop
push
or
lahf
into
or
mov
es
mov
insl
sub
loop
adc
mov
pop
outsl
push
ds
push
cmp
out
xor
inc
mov
jae
lahf
adc
jae
int3
ss
xor
and
push
jmp
lret
mov
repnz
aas
es
test
inc
push
repnz
aad
lcall
jne
insb
cmpsl
arpl
nop
sahf
xchg
bound
mov
pop
pop
addl
add
push
in
sarl
in
icebp
xor
or
and
scas
and
outsl
data16
nop
mov
in
adc
mov
xchg
cmp
cld
jg
inc
or
sub
iret
sub
cmpsl
jp
xchg
insb
adc
cltd
lock
scas
mov
mov
imul
pop
lret
adc
mov
les
xor
adcb
cmp
jno
lea
addl
out
iret
adc
mov
or
cmp
mov
fisttps
movsl
adc
dec
dec
movsb
mov
push
mov
hlt
add
add
jno
jecxz
jo
movsl
xlat
sbb
scas
mov
andl
mov
shlb
sub
dec
fs
xor
mov
aam
je
loop
mov
xor
mov
pusha
sbb
lods
lods
xchg
hlt
xchg
daa
imul
push
sar
jecxz
ds
xlat
nop
xchg
repz
push
insl
sbb
mov
imul
xor
call
and
cltd
outsl
jge
mov
mov
cmp
les
in
mov
es
jecxz
jmp
insb
cs
xor
fmulp
in
and
xchg
push
push
push
imul
stc
sbb
push
push
cmpsl
mov
mov
test
pop
cmp
jp
enter
aam
nop
shr
cmp
mov
sub
cmp
sbb
fmul
sbb
or
pop
cmpsb
sbb
add
mov
cmp
outsl
hlt
mov
mov
or
ret
push
sub
imul
in
in
push
lds
cmc
pop
pushf
repz
loope
or
fcoml
mov
jno
es
sbb
sbb
sub
pop
popa
or
inc
lds
mov
fisubl
dec
add
mov
adc
dec
mov
inc
push
mov
or
aaa
rcpps
or
jg
test
dec
inc
push
jno
jg
and
pop
outsb
idivb
jb
jle
adc
or
inc
call
push
fdivr
popf
pop
dec
call
adc
lea
ret
mov
jns,pt
inc
dec
insl
dec
stos
mov
jno
pop
lahf
loopne
mov
lds
in
cld
ds
pushf
cmpsb
xor
adc
jge
jle
movsl
push
mov
jbe
shl
cli
ja
hlt
add
and
add
pop
test
and
movsl
or
call
push
pop
add
mov
and
push
stos
adc
fnstenv
xor
mov
int3
and
jmp
aas
inc
mov
and
lahf
xor
movsl
jne
mov
push
pop
imul
mov
xchg
hlt
test
fdivs
cmpl
pop
sti
into
lds
xor
and
push
ss
mov
into
add
cs
lods
out
fistpll
or
or
in
pop
cli
sbb
dec
cmp
pusha
dec
outsb
mov
jecxz
xlat
mov
or
pop
add
mov
scas
mov
gs
inc
imul
jns
jmp
jp
push
popf
add
dec
ja
mov
xor
or
outsl
or
enter
xchg
aas
push
push
scas
jl
cltd
fdivrl
adc
insl
adc
into
adc
stc
bound
mov
je
incb
and
push
cld
inc
mov
lea
cs
jmp
popa
push
repz
pop
sbb
fstpl
dec
inc
lods
subb
jle
add
jbe
sbb
stos
adc
add
inc
pushf
dec
jmp
inc
add
leave
fs
dec
mov
add
scas
out
dec
mov
loope
mov
daa
lcall
sbb
jp
aas
jecxz
dec
test
pop
xchg
pop
dec
xor
push
daa
xchg
inc
icebp
aas
pop
in
cld
movsl
mov
dec
das
sbbl
jg
nopl
lahf
jnp
push
repz
repz
mov
cmp
dec
cmp
cmp
inc
mov
jl
push
mov
test
push
inc
jmp
cmp
fldl
or
dec
loop
sti
rorl
testb
out
sbbb
fcoms
std
jns
mov
push
leave
xchg
loop
out
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
je
jle
fisttps
invd
add
sbb
mov
out
adc
jne
xor
push
popf
movsb
ret
sub
fwait
push
xchg
out
push
sbb
ss
pop
es
popf
inc
sub
dec
mov
sti
imul
dec
test
xchg
mov
test
and
and
testb
out
enter
add
and
out
xor
jmp
mov
sub
arpl
sahf
jle
js
fldpi
ret
sub
imul
fisubl
rolb
cs
psubsw
insb
gs
negb
jge
mov
loop
sti
sub
mov
push
inc
out
pop
dec
fiadds
add
jle
adc
push
mov
pop
jmp
pushf
fnstenv
ljmp
data16
ss
hlt
shrl
cli
rcrb
shrl
xchg
and
pushf
sar
hlt
sbb
add
int
or
or
jecxz
data16
jae
mov
loopne
mov
imul
add
cmp
mov
mov
inc
es
xchg
mov
fld
loopne
xchg
jmp
lods
bound
cli
imulb
jl
cltd
cli
pop
mov
add
fst
jne
aad
test
outsl
nop
mov
inc
or
lds
or
inc
sub
inc
push
sbb
lods
inc
sbb
push
add
test
orl
pop
pop
pop
jbe
rcll
adc
shlb
pushf
mov
pushf
pop
je
fisubrl
sub
mov
imul
fwait
xchg
leave
mov
popf
bnd
mov
xchg
jno
leave
mov
ja
and
sbb
push
popf
in
rorb
mov
jno
sbb
cld
push
xchg
in
fdivr
or
inc
pop
jno
adc
scas
jbe
xlat
inc
test
push
scas
add
xor
mov
ret
xchg
clc
inc
shrl
iret
sbb
dec
or
out
outsl
lcall
loop
add
les
jecxz
dec
addb
xchg
lcall
push
dec
add
lods
fistl
aad
or
pushf
sbbl
or
outsl
cld
lds
push
cmp
pushf
cmp
xchg
repnz
sbb
jnp
jb
push
movsl
aaa
jb
mov
or
xor
or
pop
fsubs
push
cltd
inc
out
sub
sub
and
xchg
stos
pop
pop
adc
or
push
xchg
jbe
cmp
loop
xchg
gs
pop
ficompl
cmp
fs
inc
ss
fwait
repnz
repz
and
arpl
mov
ja
xchg
ret
mov
adc
cmpsb
push
lret
pop
jge
mov
fadds
jl
xchg
xchg
xchg
mov
lahf
subl
sbb
push
lcall
in
test
sub
or
add
sbb
jp
hlt
mov
xlat
js
gs
mov
movsb
push
push
inc
dec
mov
mov
push
jle
jmp
adc
add
pop
pop
stos
push
pop
xor
into
lods
pop
popa
popf
pop
out
pop
test
imul
les
jl
xchg
xor
inc
cli
push
mov
lea
adc
jne
adc
int3
mov
movsl
loope
push
and
ss
arpl
imul
mov
or
mov
cld
pop
out
push
sarl
hlt
test
xor
sbbl
jecxz
insb
xlat
fists
out
sbb
xchg
push
test
std
jle
xchg
ss
daa
popa
or
xchg
daa
push
call
jl
xchg
pop
xchg
add
dec
adc
push
pushf
adcb
sub
cmp
stc
jl
stos
jb
jno
cmp
std
sbb
push
subb
arpl
jo
rcrl
lret
ret
repnz
call
jge
in
jge
inc
mov
cwtl
add
notl
inc
sub
push
cmpsb
cmc
loop
iret
shll
pop
lods
stos
in
inc
jmp
repz
outsl
jl
pushl
jbe
outsl
and
dec
jl
mov
sbb
mov
int3
mov
inc
stos
aas
cmp
js
gs
cltd
lods
das
lods
cmp
inc
jnp
jno
sub
cld
or
push
mov
js
cld
hlt
push
or
roll
outsb
loope
mov
fisubl
outsb
gs
sbb
cmp
sub
mov
xor
stos
cmp
sbb
icebp
sbb
mov
loope
shr
jns
or
mov
xchg
dec
mov
fs
pop
mov
mov
adc
push
sub
dec
lods
xor
mov
pop
inc
add
fcomi
daa
jecxz
sbb
add
jl
ds
mov
imul
loope
sbb
push
cltd
pop
fimull
loope
in
aam
pop
cmp
ja
xchg
cmp
popf
outsb
cmp
sub
shlb
int3
pop
in
xor
xchg
mov
jb
cwtl
jecxz
xchg
and
mov
and
call
dec
jb
cmpsb
mov
pushf
add
cmp
mov
popa
pop
mov
fmulp
shll
cwtl
pop
das
leave
pusha
mov
jne
xor
scas
stos
outsl
inc
loop
cs
je
or
outsl
popa
sub
das
ja
adc
push
sub
mov
add
rcrb
test
jne,pn
insb
sbb
test
jne
sbb
fnstsw
add
jmp
cmpsl
cmp
jecxz
inc
jmp
pop
add
push
les
ja
xchg
aam
in
xchg
dec
push
and
pop
xor
mov
test
mov
xchg
mov
add
jle
ret
aam
mov
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
punpckhdq
pop
xchg
jnp
adc
loopne
or
imul
gs
sub
fimuls
mov
xor
cmpsl
push
test
es
sbb
xor
daa
inc
out
daa
jmp
jle
mov
push
mov
cmp
push
sbb
shlb
daa
popf
xchg
and
jnp
sbb
lret
cli
je
es
adc
movsb
repnz
mov
cltd
or
xlat
xor
andl
inc
lods
dec
ficoms
jle
fnstsw
sub
adc
lock
divb
adc
pop
orl
ficoms
or
add
fiaddl
out
popa
into
xor
pop
insb
ljmp
inc
mov
cmp
mov
xchg
sub
jns
sub
and
mov
dec
sub
fimull
ljmp
adc
mov
lods
inc
mov
mov
call
push
out
push
sub
cmpsl
inc
or
jns
testb
in
stos
mov
dec
fsubr
jns
nop
lret
adc
add
pop
daa
sarl
inc
aam
mov
ljmp
jl
sahf
push
fdivrs
aas
and
pop
mov
xchg
mov
lret
xchg
pop
dec
add
fs
push
out
push
jb
pop
jo
call
adc
icebp
cld
inc
jnp
ret
repz
dec
js
insl
inc
adc
add
sbb
cltd
daa
movb
aas
mov
lds
or
leave
cs
stos
roll
push
jg
sbb
aam
xchg
lahf
pushf
adc
adc
cmpsb
xchg
inc
cli
fidivrl
std
lock
cmpsl
pop
xor
pop
jge
push
insl
loope
cmp
mov
and
mov
mov
pop
cwtl
mov
and
xchg
das
aad
pop
mov
mov
mov
add
popf
sbb
or
sub
fs
pop
mov
popf
popl
sbb
dec
call
lods
sbb
iret
ja
xchg
xor
xor
jb
mov
pop
sbb
pop
mov
fstl
inc
sbb
insl
test
pop
sti
divb
mov
loopne
push
js
gs
mov
sahf
fcmovu
jb
xor
push
jp
aas
out
pop
sub
xor
mov
ljmp
aam
outsb
fwait
pop
pop
inc
xlat
ficomps
and
dec
test
pop
je
xchg
dec
aaa
jae
add
cltd
out
gs
nop
mov
jmp
jae
pop
in
repz
hlt
dec
add
jno
mov
dec
push
popf
cli
cld
ret
jae
aam
push
and
jne
fsts
mov
decl
dec
push
data16
mov
scas
mov
jae
loope
in
inc
xorb
fsub
stos
xchg
mov
lcall
mov
mov
push
dec
iret
sbb
mov
fmuls
jp
cmp
adc
cmp
aaa
sarb
push
pop
cltd
out
js
jo
fwait
mov
movsb
ds
jmp
hlt
cmpsb
pop
push
mov
stc
pusha
add
mov
pop
xchg
int
mov
rclb
xlat
sbb
or
inc
sbb
int
pop
dec
push
aas
add
mov
imul
aas
xor
imulb
aam
js
jge
jmp
sahf
fisttps
ss
mov
lret
scas
push
mov
test
sub
fisttps
addb
and
push
dec
xchg
clc
dec
lahf
jl
lret
mov
push
outsb
test
ja
repz
mov
lret
dec
dec
mov
outsl
jbe
dec
cltd
test
push
cli
orl
adc
int3
adc
push
mov
xor
mov
and
jge
fwait
sbb
rcrb
fildl
mov
into
and
xor
aaa
inc
loopne
jl
push
jbe
mov
mov
mov
insb
push
mov
test
cmpsb
jne
mov
in
nop
popf
push
sub
fildl
jmp
ret
hlt
push
je
or
adc
cmpsl
leave
lret
push
lock
cmp
push
scas
sub
lahf
add
push
das
jmp
sub
ffreep
jnp
into
cmc
gs
lret
jmp
out
dec
lock
in
xchg
popa
adc
cltd
fistpll
inc
aam
dec
das
arpl
mov
stos
push
pop
push
mov
fwait
in
dec
xchg
pop
or
pop
cmp
enter
stos
push
jae
xchg
mov
cltd
gs
and
and
sub
paddusw
test
jmp
pop
roll
jmp
and
sahf
aaa
les
mov
cmp
ja
and
rol
jecxz
arpl
sub
jle
aad
xchg
sbb
add
loope
inc
sub
pop
sub
in
adc
incl
mov
push
lcall
sbb
std
jae
or
jl
test
sti
aaa
mov
pop
sbb
dec
out
mov
add
stc
test
jle
mov
loopne
sub
imul
jge
inc
jo,pn
insl
mov
jns
xchg
pusha
scas
mov
mov
sbb
jmp
xor
repz
popa
mov
popf
dec
fldt
xor
jnp
mov
test
xor
xchg
sub
dec
shrl
mov
push
fcmovb
cwtl
test
das
shlb
dec
lds
xchg
cs
ljmp
push
xchg
add
pop
jmp
cwtl
add
xor
pop
and
fsubp
push
sbb
xchg
sbb
add
pop
jnp
leave
inc
aad
insb
inc
aad
pushf
pop
movsb
pand
mov
and
nop
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
adc
sub
lock
invd
add
ud2
mov
push
xchg
ja
outsb
iret
inc
jns
in
outsb
sub
push
xor
lods
or
and
sti
cmc
daa
sub
pop
cli
insl
ss
xor
aam
nop
test
mov
dec
stc
aas
push
inc
pop
mov
xchg
addr16
mov
cltd
ficoml
pop
out
xchg
mov
pop
pop
jmp
lock
cmc
mov
repz
xchg
xor
test
bnd
or
cmovae
scas
dec
aam
fs
pop
pop
sahf
sarl
xor
sbb
shlb
pop
mov
cltd
fists
jb
xor
pop
popf
into
sti
xchg
xor
in
adc
repz
rol
push
add
cmc
std
dec
stc
sahf
pop
adc
jp
jo
mov
push
je
lcall
aaa
mov
pop
std
xorb
push
dec
mov
int3
ret
mov
xor
call
sbb
add
mov
test
leave
daa
xchg
adc
pop
outsl
sahf
pavgw
shl
arpl
sahf
pusha
sahf
and
inc
xchg
pop
xchg
repz
sbb
ds
sar
in
scas
shll
stos
jl
flds
in
pop
xchg
pop
xor
inc
xor
or
sti
mov
ss
or
clc
sub
shll
loopne
pop
dec
mov
lret
test
bound
les
fs
dec
inc
in
xchg
pop
out
cmp
mov
sti
jb
or
in
ljmp
push
mov
out
fcomps
push
mov
mov
and
iret
sbb
mov
or
out
and
sti
mov
stc
add
push
test
dec
add
push
lcall
push
test
rcrb
scas
ja
sub
or
lahf
test
xchg
mov
cmp
in
sarb
test
and
jle
in
cld
xor
pop
push
shrl
sbb
dec
mov
adcb
aad
sbb
mov
cli
mov
sarb
ud0
fs
pop
mov
inc
lods
jb
xor
cmp
mov
xor
xor
call
stos
jle
cs
mov
mov
imul
out
mov
bnd
jo
mov
mov
sbbb
and
shlb
gs
ljmp
lret
jg
mov
test
and
jb
push
mov
push
jecxz
loopne
data16
inc
leave
mov
inc
add
add
daa
mov
lods
loope
rorb
pop
sub
cltd
into
dec
lock
pushf
xchg
cmp
push
syscall
imul
je
xchg
xlat
push
fwait
jae
mov
cltd
inc
outsl
sub
lea
adc
mov
dec
not
cmpsb
dec
jecxz
pop
or
insl
jecxz
xor
mov
add
xchg
jo
stos
repz
aas
inc
ja
sbb
fsts
flds
mov
cmp
cmp
cmp
xchg
mov
adc
sub
pop
sub
out
ret
mov
sbb
push
mov
scas
jle
mov
imull
add
mov
in
jb
mov
imul
inc
dec
outsl
sub
cmpsb
jle
sbb
mov
shlb
add
jge
pop
pusha
or
xlat
cmp
dec
out
inc
mov
outsl
popf
jno
enter
push
mov
gs
cld
pusha
mov
int3
popa
pop
sub
mov
jecxz
mov
or
gs
xchg
add
inc
adc
std
add
and
mov
nop
nop
xor
fbld
add
ret
mov
fidivrs
jecxz
movsl
es
cmpsl
sar
jge
mov
jb
jl
fadd
sti
pop
jns
loope
insb
push
and
loopne
xchg
roll
into
int3
or
ret
stc
fdivr
dec
dec
sub
or
shlb
add
adc
and
cmp
and
leave
ficomps
mov
popf
dec
mov
push
mov
movsl
pop
scas
out
cltd
mov
cmp
jae
xlat
bound
test
movsb
inc
ret
xchg
jae
or
push
iret
add
xchg
xor
ficomps
pushf
jnp
insb
gs
add
pop
jo
aaa
mov
xor
add
in
mov
mov
insb
jns
test
enter
xchg
insb
enter
aas
or
mov
loop,pn
pop
out
mov
movsb
fcmovne
test
aam
rorl
inc
jmp
cmp
mov
sbb
test
mov
push
dec
jge
das
jl
cmc
mov
addr16
cld
insl
adc
cli
push
int
arpl
lret
repnz
mov
pop
jge
cli
nop
int3
sub
outsl
cmp
or
loopne
cmp
dec
pushf
and
enter
sub
xor
ficomps
nop
xchg
mov
jns
ds
in
pusha
inc
les
dec
ficompl
or
push
iret
js
mov
insl
sbbl
cld
ljmp
xchg
push
jmp
sub
scas
xor
xor
cltd
imul
lods
pop
xor
rclb
cmpsl
and
and
pop
mov
xchg
sub
pusha
enter
push
lock
loope
or
fadds
ret
rcr
prefetch
out
flds
inc
shlb
push
jb
jo
mov
out
cmp
mov
jle
mov
or
ret
insl
out
rorl
movsl
out
hlt
or
and
ljmp
jp
jnp
pop
aas
out
sbb
mull
int3
fcmove
jg
lret
in
fs
sbb
and
daa
xchg
pop
jbe
fisubrl
xchg
aad
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
jb
out
mov
lfs
push
add
or
xacquire
xor
or
jl
mov
cli
jne
test
loopne
cli
popa
test
pop
divb
call
lods
mov
and
std
inc
jmp
sti
fimuls
add
jmp
test
pop
pusha
and
iret
sub
stc
mov
adc
out
push
aas
cmpsl
and
scas
jecxz
dec
fnstenv
mov
mov
scas
sub
jb
mov
push
mov
mov
push
cld
push
or
bnd
or
sbbb
cmp
enter
inc
mov
ss
iret
jb
push
jl
hlt
sbb
clc
push
mov
arpl
shrb
add
mov
sub
sub
aam
add
inc
push
add
das
push
fisubrl
adc
fsubrp
aaa
dec
test
stos
mov
out
jb
out
inc
mov
pop
fldcw
lret
jbe
xchg
sub
movsb
cmpsb
jnp
leave
ret
xor
push
int
or
lods
dec
jb
jnp
dec
dec
fwait
cmp
mov
add
imul
test
sahf
inc
mov
outsl
xchg
mov
inc
xchg
mov
loopne
cmp
test
xchg
rcr
mov
lods
cmp
aas
cmp
movhps
mov
sahf
dec
mov
jp
xor
pop
out
lret
add
jb
stos
fidivrl
push
fmuls
xchg
sarb
push
inc
dec
sbb
or
adc
int
outsl
cmp
and
shl
mov
into
cmc
out
unpckhps
cltd
ror
push
lods
and
outsl
into
rorl
inc
xchg
xor
push
adc
loop
xchg
inc
sub
sbbb
mov
push
jne
cmpb
sub
in
mov
leave
dec
movsl
add
mov
js
inc
ds
testl
xchg
fistps
lods
dec
mov
jo
mov
leave
loope
popa
sub
inc
push
cwtl
in
or
in
mov
xchg
js
out
movsl
aas
mov
fwait
pop
aas
mov
pushf
adc
loop
shrb
mov
pop
and
aaa
mov
cmp
aam
es
pusha
data16
dec
lea
lcall
xor
fwait
jecxz
jno
sub
mov
jne
and
jne
mov
lds
inc
popa
mov
movsl
mov
push
xchg
icebp
and
pop
rcll
cmpb
mov
or
lcall
xchg
jg
nop
fisubs
push
push
lahf
mov
xchg
or
dec
inc
dec
into
outsb
lods
imul
mov
lock
lret
aam
jo
sub
sbb
mov
xor
enter
push
mov
aam
rcrb
outsl
xchg
mov
repz
clc
bound
cmp
pop
pop
sbb
rolb
jnp
leave
xchg
ret
test
add
jp
mov
cltd
jno
add
lods
lea
jbe
arpl
fidivrl
imul
addl
sub
scas
lds
cltd
jmp
aam
xor
nop
movsb
cmp
subb
movsl
rcrb
add
scas
add
inc
sub
mov
int
das
adc
xchg
sbb
into
dec
mov
arpl
lret
xor
lds
iret
mov
xchg
imul
int
insl
dec
xlat
xchg
inc
iret
add
int3
or
lock
xor
es
enter
add
stos
stos
je
fs
xchg
mov
lahf
lahf
pop
shr
mov
pop
scas
cs
popa
dec
cmp
xchg
pop
icebp
pop
popf
dec
inc
inc
inc
fmull
test
xor
xor
cmp
lcall
gs
xchg
inc
xlat
test
sub
test
sub
mov
movsl
ret
inc
pop
aad
jno
sbb
in
fisttpll
pop
pop
rolb
gs
iret
inc
stos
data16
xor
mov
or
push
pop
out
or
out
jns
out
loope
adc
mov
dec
fisttps
pcmpeqd
rolb
cmc
jmp
pop
out
aam
pop
decl
imul
fsubrp
mov
and
sub
sub
jno
ficoml
xlat
sub
push
inc
test
leave
mov
iret
inc
push
lcall
clc
ljmp
pop
stc
stc
mov
fimull
mov
in
sub
mov
mov
sub
aad
pop
mov
faddl
adc
push
jne
outsb
imul
insl
loope
add
xlat
imul
push
mov
add
or
sub
sbb
adc
mov
loope
push
and
mov
push
fildll
insl
cltd
loope
hlt
sbb
xchg
mov
cmp
pop
dec
push
cli
xor
lock
cmp
sub
in
clc
xor
int
aaa
icebp
adc
int3
repnz
rol
into
mov
les
inc
jmp
inc
aas
lods
dec
xchg
fwait
into
pop
cmp
or
add
push
cmpsl
inc
int3
notb
xchg
outsb
and
sub
fimull
jo
stos
pop
sahf
stc
mov
inc
jb
push
jle
mov
adc
cli
popa
stos
fdivl
pop
sbb
jmp
in
nop
imul
jecxz
sub
loopne
adc
aas
sub
mov
adc
jnp
add
int
dec
jne
in
loop
jmp
shlb
jl
jmp
inc
xorl
mov
stos
pop
test
nop
cmpsb
xchg
pop
xchg
filds
ret
into
add
mov
xchg
enter
xchg
push
jle
add
sbb
jae
scas
int
outsb
mov
xor
das
cmp
push
xchg
mov
lock
pop
and
mov
ret
xchg
cli
movsl
push
testb
xchg
inc
addb
lea
dec
ret
mov
pop
xor
mov
addl
pop
cmp
mov
divb
outsb
inc
sarb
fwait
and
das
pop
push
sbb
sbb
data16
outsl
cmp
mov
push
mov
mov
adc
das
pop
cld
fs
sbb
and
outsb
out
ret
mov
dec
and
cmp
test
sbb
pop
mov
inc
sub
xchg
pop
xchg
sbb
and
iret
sbb
ret
test
or
mov
pop
outsl
fstpt
sbb
mov
in
mov
push
adc
cmp
and
int3
popa
xchg
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
sbb
clc
sbb
mov
pavgb
jmp
push
lcall
pop
movb
sub
jbe
test
loopne
sti
imul
push
aas
xchg
mov
adc
cmp
lea
mov
xchg
xlat
addr16
adc
aas
js
repz
xchg
icebp
pop
cmp
mov
test
leave
jp
and
sbb
cmovo
in
pop
dec
jo
jne
in
enter
nop
in
xchg
outsl
popa
add
dec
sub
adc
fsubrs
mov
sbb
and
je
fldl
inc
inc
shlb
jbe
fisubl
mov
in
cmp
fisubs
add
lret
cmc
lods
pop
data16
or
jle
inc
dec
and
data16
sahf
int3
das
inc
push
and
add
cld
and
and
xor
sub
pop
imul
mov
add
es
movsb
imul
fstps
add
ret
jmp
aad
pushf
cs
lahf
mov
int
out
jg
test
push
mov
pop
dec
inc
fs
mov
fwait
lahf
arpl
movb
ss
pop
into
sub
and
ljmp
stos
rol
jne
lock
mov
lahf
out
fs
push
inc
ja
scas
fs
lret
cmp
scas
mov
dec
lds
rolb
mov
sub
pushf
sub
std
jne
fcomip
xchg
movsb
mov
int
push
decl
test
inc
clc
push
repz
jecxz
nop
push
and
imul
pushf
mov
inc
add
aad
ja
ret
into
jle
dec
scas
pop
mov
popf
insl
and
ljmp
mov
jo
xor
fs
ret
stos
jo
loopw
rcrb
pop
mov
jmp
hlt
addr16
aad
xchg
aam
loopne
jb
push
insb
out
push
enter
xchg
jno
xorl
xor
stc
aaa
pop
sbb
out
imul
mov
data16
dec
inc
or
cltd
imul
sahf
pop
sti
xchg
mov
dec
sbb
pop
test
out
mov
repz
jp
or
fcompl
or
sub
inc
lock
cmp
sbb
mov
mov
arpl
dec
lods
lock
cmp
rcrb
push
arpl
fsubs
aad
jmp
and
into
mov
sub
data16
xchg
adc
repnz
in
outsl
jns
leave
lods
push
stos
out
pop
gs
loope
out
popa
mov
xchg
jecxz
cmp
adc
imul
aaa
data16
lret
xchg
dec
test
jp
inc
pop
jnp
aam
adc
std
dec
inc
decb
cs
jp
jp
addr16
ljmp
int3
mov
popf
or
sti
sbb
pop
sbb
mov
jne
lea
lahf
insb
dec
mov
stos
jno
cmpsl
add
out
inc
pop
test
adc
mov
mov
enter
into
dec
sbb
in
hlt
inc
fcomps
dec
jp
push
add
add
fdivs
cmpsb
pop
cli
shll
and
ret
inc
sahf
xchg
jle,pn
sub
and
xchg
pop
add
sub
mov
test
addl
test
cmp
xor
fidivrs
cmpsb
scas
bound
cmp
cmp
sahf
and
lods
outsb
add
xchg
inc
movsb
shlb
clc
xor
pop
in
add
roll
sub
shll
pusha
in
adc
std
push
jmp
push
or
shll
dec
add
loopne
dec
loope
shlb
lds
cmp
add
xchg
sahf
or
and
pop
iret
mov
lcall
adc
jno
push
es
mov
pop
in
add
push
lods
dec
pop
dec
xor
push
jbe
and
fs
stos
inc
pop
not
lcall
mov
ds
sarl
sbb
xchg
dec
dec
sub
mov
notb
jns
stos
loop
xor
incl
test
hlt
iret
pop
xchg
js
aam
mov
jo
mov
cmp
jne
pop
xchg
clc
mov
stos
hlt
pop
inc
xchg
clc
sbb
cmp
cld
fadds
xchg
fs
and
popf
inc
fisttpl
call
xchg
push
push
test
inc
sbb
insb
sub
and
jp
clc
lods
xchg
lds
in
sub
aaa
ficoms
jl
cmp
out
xlat
or
xchg
and
in
cmp
sbb
ficomps
shlb
pop
lods
and
scas
fsubrs
xor
popa
push
cmp
push
ret
lret
or
mov
stos
rcrb
bound
and
jns
and
aas
mov
arpl
lret
jge
ret
fcmovbe
adc
out
xchg
imul
sbb
gs
cmp
xchg
stos
xchg
insb
call
mov
sarl
arpl
mov
in
sub
xor
lahf
push
idivl
push
sub
loopne
shrb
clc
push
pop
fwait
mov
cmp
mov
xchg
push
stos
mov
or
addr16
bound
add
xchg
adc
dec
lds
xchg
mov
ret
icebp
mov
clc
and
push
mov
push
jnp
lds
ud0
and
mov
add
bound
movsb
add
sbb
cmp
mov
fimuls
sbb
cmp
repz
fdiv
rorl
dec
jecxz
or
inc
mov
insl
xor
sbb
add
lea
push
imul
sbb
jo
jo
in
cmp
call
int3
pop
fisubrl
adc
inc
shr
lea
test
push
pop
out
call
dec
rclb
pop
dec
inc
inc
jb
or
insb
inc
arpl
add
in
sub
xchg
mov
enter
jmp
xchg
push
lcall
xor
fwait
add
pop
and
sbbl
mov
inc
rorl
push
mov
call
ja
sbb
or
adc
sub
jns
dec
adc
les
adc
pusha
push
xchg
sahf
lds
ret
sbb
popf
push
mov
or
loopne
daa
or
jecxz
mov
push
push
test
fsubrl
stc
push
mov
xor
mov
add
mov
mov
dec
dec
arpl
imul
addl
jae
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
sti
inc
or
and
mov
jb
mov
pop
pop
mov
sahf
repz
stc
stos
pop
jnp
inc
mov
jbe
mov
adc
cmp
push
out
and
insb
es
and
pop
sbb
sub
sub
lea
ret
rolb
push
loop
mov
push
into
not
xchg
ljmp
rclb
push
sahf
dec
nop
arpl
mov
fwait
in
adc
rcrl
mov
orl
mov
test
add
jno
or
mov
rcrb
into
dec
es
daa
out
sbb
outsb
or
hlt
lret
inc
arpl
inc
pusha
mov
movsb
jbe
adc
dec
out
ret
sbb
dec
cmpsl
adc
jp
pushf
fidivs
ret
imul
aaa
jle
adc
inc
out
mov
aad
dec
cmpsb
mov
or
and
adcb
cld
pop
insb
adc
inc
mov
mov
add
in
push
sti
outsb
jmp
sbb
cmp
and
fsubrl
rorb
mov
xchg
adc
mov
mov
das
xor
pop
sub
mov
clc
sbb
pop
xchg
enter
sbb
jae
repz
mov
jge
pop
loop
or
jl
cmc
lods
repnz
ljmp
mov
push
xchg
adc
mov
sahf
ss
push
dec
mov
adc
push
mov
jo
cmp
loopne
and
dec
out
push
cmp
mov
or
out
add
arpl
dec
test
repnz
mov
mov
push
push
mov
mov
addr16
aaa
push
aas
testb
ror
adc
adc
loope
dec
inc
adc
inc
jmp
pop
sti
and
jle
jb
js
bound
dec
bsf
add
mov
sub
jo
mov
cmp
fdivrs
out
mov
in
push
cltd
jae
inc
dec
dec
es
push
orl
sub
test
mov
test
jp
jle
aam
ljmp
arpl
push
sbb
js
pop
and
pop
mov
mov
push
insb
mov
gs
jg
jno
add
mov
mov
xchg
lea
ss
adc
and
das
repnz
inc
dec
jae
in
sub
cmp
clc
fscale
jo
xchg
cmp
ficoms
adc
pop
daa
inc
or
sbb
stos
popf
jp
or
lods
mov
mov
sbb
int
mov
or
sbb
loope
sub
and
pop
push
dec
outsl
push
adc
test
les
fidivl
mov
lret
jnp
mov
or
sub
sub
adc
xchg
cmpsb
rcl
into
mov
ljmp
xor
std
xchg
jl
cmp
mov
pop
sbb
mov
mov
jo
mov
cwtl
mov
loopne
stc
fildll
hlt
out
cmpsl
outsb
mov
aad
mov
xorl
fildl
pop
loopne
and
lret
mov
rolb
pop
lret
aas
push
pop
test
add
xorl
sbb
mov
icebp
dec
out
cwtl
and
mov
jmp
mov
cmc
mov
mov
push
bound
sti
pusha
jl
arpl
mov
jmp
or
jb
into
xchg
push
xchg
jne
arpl
mov
pop
gs
jmp
push
lods
fsub
push
cmc
xor
popf
xchg
jno
dec
push
jae
int3
push
mov
lds
xchg
leave
or
sub
inc
mov
testl
xchg
push
sbb
sbb
mov
pop
sbb
ja
cmp
repz
sbb
pop
mov
nop
push
jmp
stos
enter
lret
lods
mov
mov
imul
jp
popf
adcl
and
push
scas
notl
cwtl
jge
addl
jo
stos
gs
add
dec
mov
cltd
xchg
mov
cmp
call
sbb
xchg
mov
aam
mov
in
inc
jmp
mov
not
cmp
cmp
cltd
mov
cmc
cmp
jle
xchg
mov
sub
test
cmpsl
jl
dec
loop
imul
je
bound
adc
sbb
and
mov
imul
dec
xor
sub
test
push
dec
stos
jo
sub
mov
cli
pop
cwtl
push
dec
sbb
push
jno
dec
mov
mov
xchg
push
sti
dec
add
or
add
pop
int3
xchg
push
fnstenv
xchg
pop
add
lock
cmc
repnz
repz
sbb
adc
and
pop
xor
les
inc
movsb
or
iret
call
pop
pop
mov
inc
cltd
test
shll
sbb
sub
mov
add
cmp
std
jbe
hlt
cmp
hlt
cmp
dec
movsb
xchg
mov
jle
ja
mov
stos
xchg
adc
jp
and
sarl
cli
popa
sbb
imul
arpl
testl
mov
arpl
aad
xor
adc
ret
jae
mov
add
adc
push
lds
push
add
daa
in
cld
pop
mov
adc
iret
cmp
mov
fsubl
adc
enter
fmull
hlt
in
les
int3
fidivrs
add
and
xor
sbb
dec
jg
dec
and
sub
pop
arpl
mov
mov
dec
pushf
pop
and
sbb
lea
imul
sub
test
adc
out
dec
in
xchg
ficoms
jl
adc
mov
xchg
fidivs
bound
cmp
pop
ret
cmp
adc
mov
test
jae
cmpsl
decl
fisttpl
fwait
ret
cld
cs
addr16
add
jmp
inc
clc
movsl
int3
jbe
mov
lods
inc
out
mov
fstps
xchg
mov
dec
pop
sub
clc
popf
daa
sbbb
ljmp
or
mov
sar
cmc
push
and
hlt
adc
and
daa
sub
popa
mov
xor
mov
mov
xor
imul
divl
dec
inc
mov
insb
adc
aaa
adc
jmp
into
add
or
sub
adc
and
arpl
adc
mov
xor
aad
sbb
xor
outsb
push
xchg
inc
outsb
jb
mov
sub
adc
mov
push
fsubr
das
cmpsb
rolb
jbe
xor
div
xlat
gs
out
loopne
in
cmc
mov
lcall
scas
jno
pop
cmpsl
xchg
std
in
negb
sbb
push
sub
xchg
mov
xchg
mov
cltd
or
or
cmc
fnstsw
mov
test
mov
mov
aas
cmp
mov
xor
and
cmpsb
mov
iret
xchg
movsb
or
cmp
ljmp
sbb
test
cmc
js
xchg
add
cmpsl
inc
nop
flds
pushf
test
mull
fisttpll
or
dec
pop
loopne
lock
cld
data16
ss
popa
sub
pop
or
rorb
test
arpl
lds
sbb
sbb
sub
int3
outsl
shlb
insb
sub
sahf
out
shll
mov
gs
rol
or
ljmp
pop
jl
arpl
xchg
push
xchg
xor
pop
sub
scas
leave
sahf
dec
add
cmp
insl
xchg
sbb
gs
mov
or
mov
jg
adc
dec
fcmovb
sub
xor
sub
sahf
in
jnp
xchg
sti
pop
pop
mov
cmc
push
jmpw
jne
pop
sbb
stos
scas
mov
mov
loope
or
jo
ss
push
enter
pop
jp
pop
mov
out
imul
and
movsl
push
notl
cld
lcall
mov
push
pop
or
mov
sahf
inc
mov
clc
dec
fs
out
sbb
mov
pop
loopne
ja
pop
and
cs
dec
rolb
mov
dec
cld
inc
shrb
popf
scas
push
lods
jnp
cmp
aaa
in
xchg
mov
push
push
hlt
jge
lds
mov
inc
stos
aaa
xlat
lret
int
xchg
xchg
arpl
shrb
rcl
jb
mov
cmp
mov
ret
mov
mov
adc
jnp
cmp
lock
testl
shlb
in
mov
and
lret
sbb
adc
paddq
mov
or
mov
mov
cmp
push
icebp
push
lahf
xor
nop
inc
push
add
xor
xor
sub
dec
loope
mov
ja
fisubrl
loop
jae
fildl
cmp
call
jne
adc
pop
jl
inc
ret
jl
in
jecxz
xor
popa
push
orl
xor
add
sbb
cmp
sbbw
dec
data16
scas
shr
pop
dec
ret
xchg
sbb
sbb
in
mov
subb
sbb
jmp
mov
push
gs
scas
jnp
or
ljmp
movsb
lahf
enter
push
pop
sub
outsb
movsb
adc
outsl
add
stc
and
and
mov
cmp
jecxz
loope
dec
lret
sub
movsl
out
push
sub
mov
inc
pop
sbb
mov
mov
outsl
mov
fwait
mov
mov
cmpsl
push
pop
jmp
dec
cmpsl
icebp
ljmp
inc
sub
test
sub
mov
sub
mov
sbb
rcrl
add
sarl
mov
fisubs
dec
sbb
in
xchg
in
andb
xchg
mov
je
inc
sbb
or
add
std
adc
push
xor
sbb
int3
je
sar
dec
hlt
hlt
mov
add
das
lock
dec
xor
xor
xchg
pop
xchg
stc
mov
repnz
sahf
je
movsb
dec
pop
mov
add
sbb
ficompl
shll
iret
jb
loope
sbb
aad
xor
jge
insb
fwait
mov
push
test
imul
sbb
cmp
xor
movsl
cs
mov
icebp
aas
mov
jle
lret
add
subl
test
rolb
loope
sub
mov
cmp
adc
fcmovnbe
jecxz
insb
cmp
aad
pusha
daa
xchg
jbe
add
rorl
dec
es
xchg
adc
pop
lcall
push
cmp
or
in
test
ficomps
push
lcall
sbb
inc
push
cmp
shrb
movsl
fbld
lret
div
inc
push
mov
adc
cmp
lret
jecxz
pushaw
hlt
push
mov
sbb
push
fnstcw
jbe
fisubrl
inc
dec
lcall
push
dec
jo
test
add
arpl
nop
lods
push
push
jbe
fistl
cmc
mov
sub
cmp
xor
mov
pop
jo
jge
push
fdivr
dec
hlt
xchg
xchg
xlat
out
xchg
inc
jo
sub
xor
pop
pop
xor
mov
ret
mov
mov
pushl
push
pop
iret
mov
mov
fildll
lods
or
enter
inc
pop
mov
andb
mov
adc
xor
movsb
stos
loope
sub
sbb
pop
push
sbb
xor
pop
ds
mov
inc
test
dec
popa
mov
add
js
ljmp
fistps
xlat
sbb
dec
icebp
lds
and
das
cmp
inc
add
dec
mov
stos
arpl
inc
xor
aad
jae
frstor
decl
dec
push
mov
data16
push
lret
pop
inc
dec
inc
lret
xchg
lods
cwtl
sub
rcll
mov
incl
xorb
loope
adc
xor
adc
movsb
jle
dec
mov
ja
mov
movsl
xor
lahf
ja
jge
sub
or
scas
push
into
cld
jmp
lock
dec
jbe
jne
inc
push
cltd
jo
ja
loopne
movsb
xchg
outsl
nop
sbb
jns
lahf
shll
and
jle
jne
mov
daa
fidivrs
loopne
out
insb
sub
pop
inc
mov
aas
jl
mov
add
into
xor
inc
xchg
inc
stc
mov
test
push
sub
mov
xlat
scas
mov
cmpsb
ror
shrb
dec
jbe
inc
sub
add
xor
adc
push
push
cmp
xchg
adc
js
mov
dec
adc
xchg
aad
lahf
push
jb
xchg
outsl
push
xchg
sbb
push
fldenv
cltd
adc
add
test
icebp
mov
pop
and
xor
pop
sub
adc
rcll
insl
sbbb
je
ja
shll
gs
aad
je
sahf
pop
stc
mov
or
dec
test
nop
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
cli
lret
daa
in
adc
and
adc
nop
sub
insb
test
xor
int3
push
ljmp
xchg
cmpsl
cmp
mov
fwait
mov
or
mov
aaa
call
lret
jl
push
push
addr16
mov
test
or
mov
and
push
mov
cltd
divl
shl
mov
jmp
mov
shll
outsl
out
or
xchg
xor
push
or
lods
mov
insl
cmp
popa
rolb
mov
add
push
repz
ss
faddp
and
fldcw
cmp
jmp
out
adc
mov
loope
in
push
jno
push
in
and
sbb
inc
jne
mov
stos
nop
test
cmpsb
mov
ja
mull
sahf
xchg
inc
or
mov
xchg
inc
int
or
pusha
cmpsb
xchg
push
pusha
stos
adc
pop
aam
scas
rclb
jno
fstps
imul
cmc
pushl
xchg
lea
mov
lret
mov
jmp
or
in
xchg
fcomi
add
inc
jnp
popf
adcl
out
aaa
xchg
dec
imul
aaa
xchg
jge
add
push
mov
mov
jg
sarl
xchg
or
add
sbb
xchg
loopne
pop
shll
loop
fs
mov
mov
iret
test
cmp
sti
cmp
mov
cmc
mov
sbb
push
lcall
shr
add
popa
sbb
repz
loope
loopne
mov
dec
cld
psraw
movsl
dec
pop
in
frstor
jno
lock
push
or
outsb
pop
inc
xor
inc
mov
pop
adc
pop
lea
fs
popf
dec
hlt
movsb
sti
jae
jo,pn
mov
mov
mov
pop
pop
sbb
push
push
xchg
dec
adc
jnp
leave
scas
ja
inc
xor
leave
cltd
mov
mov
imul
push
mov
push
push
or
mov
mov
int3
lods
or
mov
out
cmp
mov
xchg
xchg
fistps
or
xchg
push
movsl
sbb
pop
out
sbb
mov
je
scas
mov
ret
insl
push
sub
lock
dec
cmp
adc
jnp
imul
mov
add
stos
add
mov
orl
shlb
outsl
aad
add
cmc
adc
inc
sub
fs
aaa
mov
sub
insb
cmp
inc
fstpl
xchg
mov
mov
sub
sti
mov
pusha
mov
sbb
xor
push
xchg
sbb
sysret
addr16
jmp
xor
out
sbb
loopne
fs
push
mov
cli
jne
daa
fcomps
inc
cmp
push
out
test
add
mov
fnstenv
push
jmp
mov
lret
fiaddl
fistpll
stos
or
sbb
out
jmp
shll
test
cwtl
pop
sbb
in
in
lock
inc
aaa
push
pusha
mov
aad
cmp
push
xchg
fdivr
rorb
enter
shrb
sbb
sbb
xor
jl
or
sub
mov
push
test
sbb
dec
imul
cmc
mov
adc
cmp
adc
sbb
sub
lds
leave
xchg
jbe
pop
jo
lds
sbb
or
fadd
push
shll
inc
nop
cmc
jo,pt
adc
cmp
push
aam
and
mov
mov
pop
pop
ds
adc
cmp
xor
or
adc
repz
movsl
pop
xchg
sbb
mov
dec
repnz
test
inc
cs
mov
sar
cmp
pop
andb
push
mov
pop
in
imul
out
adc
push
imul
paddb
adc
or
fidivs
cmc
xor
inc
insb
add
lock
mov
daa
int3
fwait
jae
outsl
imul
jmp
gs
das
lock
inc
test
cmpsl
cli
fcoms
adc
xchg
adcl
mov
dec
add
shll
test
push
jno
outsl
iret
jge
sub
cmp
stos
and
insl
ja
scas
fnsave
sahf
shrb
mov
ret
dec
push
mov
push
xor
or
int3
adc
mov
fwait
roll
mov
int3
scas
cmp
imul
sub
sbb
mov
jbe
in
xor
adc
fwait
push
sub
or
popa
dec
xor
or
inc
imul
out
mov
imul
outsl
cs
add
adc
es
rorl
cmp
adc
mov
adc
and
das
pop
testb
inc
stos
enter
pop
aaa
aam
mov
fs
repnz
decl
mov
mov
enter
ja
ja
adc
xor
dec
mov
std
dec
iret
faddl
cltd
inc
hlt
fldenv
add
jno
dec
jg
and
in
popa
jne
dec
imul
jo
lods
enter
jle
jne
mov
cmc
lods
push
jecxz
insl
add
add
pop
sbb
mov
in
rolb
js
or
pop
aas
mov
mov
insb
dec
xor
repz
ljmp
sub
inc
pushf
lods
sub
fldenv
push
mov
pop
sub
ret
fisubl
fdivl
dec
icebp
inc
es
es
dec
mov
fldl
mov
ret
cmp
add
mov
fmull
mov
data16
imul
rorl
inc
sub
mov
int
push
outsb
xchg
lea
into
outsl
push
push
sbb
ljmp
add
aam
dec
xor
call
mov
icebp
fisubl
in
jb
mov
mov
pop
shl
dec
xchg
cmp
pop
lret
or
cli
sub
mov
fsub
mov
mov
icebp
sbb
icebp
and
in
xor
adc
and
sbb
mov
fistl
or
cmpsb
jno
xchg
inc
scas
jo
stc
inc
inc
test
or
popa
std
push
push
xchg
mov
mov
outsb
push
std
dec
xor
rclb
adc
fsts
nop
insb
shlb
pop
rclb
rcll
popf
fisttpll
jl
jo
pop
daa
mov
shr
test
fwait
loopne
xor
cmc
fistpl
repnz
cmp
and
repnz
fdivl
jmp
repz
or
inc
pop
mov
insl
adc
cmp
loope
pushf
sub
jl
loopne
jmp
adc
and
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
cwtl
out
loop
cmp
adc
and
xor
iret
mov
ja
add
lds
fstps
cmp
mov
dec
gs
mov
pushf
out
mov
insb
or
or
dec
xchg
push
daa
pop
mov
inc
or
sub
jno
or
stc
faddl
add
fisubs
call
jge
cltd
xchg
mov
jb
mov
fs
add
stc
xchg
cwtl
scas
xor
jnp
mov
nop
push
cmpps
idivb
ss
push
leave
out
shrl
dec
rcrl
adc
fucomip
xor
pop
add
leave
mov
gs
dec
jle
mov
out
xor
mov
lcall
pushf
jae
idivl
dec
repz
jb
enter
lock
jp
cmp
mov
rcl
and
out
in
les
push
pop
aam
push
das
sbb
stos
add
and
testb
sub
test
mov
cmpsl
in
lods
out
add
mov
das
fwait
jle
mov
out
mov
je
mov
stc
fs
sub
movsl
test
sbb
shrb
push
std
das
out
hlt
cld
stc
jg
cmp
xlat
mov
sub
mov
sub
ja
ret
daa
sbb
dec
add
movsl
out
pop
stos
mov
mov
mov
add
cli
or
stos
or
je
or
pusha
in
pop
pop
scas
fs
push
mov
push
pop
xlat
sbb
pop
arpl
push
mov
inc
les
jmpw
lock
fwait
loopne
ja
dec
dec
fnstcw
jae
int3
and
xor
shrb
mov
push
loop,pt
test
mov
cld
movsb
push
sub
add
ljmp
mov
inc
fidivs
push
and
sbb
adc
xorb
mov
xchg
pop
xchg
ficoml
push
rcrl
ss
sub
outsl
pop
xchg
cmp
mov
push
pushf
push
adc
dec
add
cmp
mov
adc
rcrl
sub
xor
lea
int3
mov
in
rolb
pushf
adc
jge
dec
int3
or
cmc
pusha
dec
fldt
lock
fcompl
lahf
popf
adc
sti
inc
push
repz
pop
scas
push
sbb
jns
in
pushf
cld
dec
add
out
xchg
or
xor
dec
jae
gs
cmp
jno
xor
push
push
ljmp
adc
das
cli
imul
sbb
loopne
pop
sbb
xlat
push
int
mov
insl
push
pop
jns
sbb
jp
dec
add
xlat
icebp
ret
insb
divb
dec
jae
lret
push
mov
xor
fidivs
hlt
int3
dec
push
cmc
dec
adc
repnz
lock
inc
or
xor
and
push
jp
and
xchg
fwait
jbe
sbb
xlat
imul
mov
pop
cmpsb
fadd
cld
ret
leave
cmc
xchg
push
stc
xchg
sbb
insb
sub
negl
pop
out
or
pop
imul
std
shll
adc
xchg
sbb
andb
pushf
mov
rorl
add
xor
inc
pushf
fdivs
idiv
fs
cmp
adc
mov
lods
out
out
out
xchg
jb
cmp
mov
popf
ffree
sbb
in
pop
cmp
inc
add
lret
in
loop
fadds
out
icebp
fwait
mov
out
fucomp
mov
mov
mov
adc
aaa
dec
outsl
fmulp
loop
nop
movsb
in
sub
cmp
outsl
mov
gs
pop
mov
cltd
jne
add
xchg
push
das
mov
lahf
iret
int
xchg
cmpsl
test
cmp
repnz
fs
das
push
dec
xchg
fmull
iret
jb
jmp
lods
mov
push
dec
ficoms
sbb
mov
int3
or
push
sbb
dec
mov
pop
jge
imul
jmp
stos
les
arpl
dec
les
or
pop
cmpsl
add
sbbl
dec
xor
pop
mov
lahf
loope
stc
and
lock
jno
loop
mov
cmp
pop
stos
cmc
sti
imul
test
cld
shll
out
mov
movsb
imul
js
jns
icebp
in
sub
push
sbb
or
jle
repz
mov
popa
insl
aaa
mov
andl
std
movsl
cmp
rorl
adc
dec
sbb
gs
jl
stos
push
sub
xlat
popa
sbb
fistpl
add
and
int
out
sub
xor
inc
dec
jge
lret
ret
stc
jg
add
cmp
lret
loopne
adc
pop
push
adc
mov
jb
cmp
jmp
pop
lock
add
aam
in
call
sub
test
dec
push
fdivl
dec
and
ss
call
push
pop
or
mov
mov
sub
mov
test
cmp
dec
dec
loope
add
fwait
mov
mov
in
and
pushf
xor
adc
movsl
adc
aaa
sub
repnz
je
idivb
addr16
adc
xor
mov
ds
xchg
hlt
dec
pand
push
popa
or
ja,pt
cmp
fs
cmc
pusha
popf
rcrb
mov
hlt
jmp
addl
daa
outsl
enter
pop
repz
in
cld
in
int3
push
cmp
add
insb
mov
adc
mov
or
jb
out
push
daa
int3
sarl
push
leave
mov
push
sub
and
dec
pop
dec
ljmp
enter
nop
dec
jbe
sub
mov
push
out
dec
inc
or
dec
nop
or
cltd
push
data16
in
push
loope
iret
jecxz
jb
xchg
sahf
ret
mov
stos
cmpsb
jecxz
aad
and
xchg
das
test
imul
and
pop
es
mov
js
lods
inc
fwait
ret
std
shll
jge
fldl2e
inc
lahf
cmpsb
out
decb
gs
sahf
cmpsb
dec
cli
push
sbb
inc
ds
sub
insb
mov
inc
and
sbb
xchg
mov
mov
lahf
and
push
mov
nop
cli
bound
jg
cli
push
or
adcl
rolb
mov
dec
movsl
roll
in
mov
mov
mov
mov
loope
cld
xchg
sbb
je
ret
sbb
push
repnz
leave
cmc
pop
orl
ss
repnz
mov
adcb
jecxz
pop
push
or
aam
stos
push
or
push
add
sbb
jno
xchg
add
pop
jle
jo
add
popf
leave
mov
add
icebp
call
push
push
das
sub
cmpl
hlt
inc
inc
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
lret
cmp
inc
int3
adc
and
stc
xlat
xchg
loop
les
mov
cli
mov
in
outsb
idivb
es
lret
inc
sahf
das
sub
aam
xor
add
mov
leave
adc
shrb
and
xchg
call
mov
shll
jno
scas
adc
sar
mov
lcall
repz
in
and
rcll
pop
and
popf
xor
sub
sarl
push
out
in
cwtl
arpl
cs
jne
and
jp
ds
add
mov
lods
pop
adc
dec
fstps
ds
push
sbb
fs
sahf
and
pop
pop
rol
das
mov
ret
push
fisubs
mov
mov
mov
stos
lods
xchg
cmpsb
das
js
adcb
adcb
icebp
nop
cmp
xor
jno
addr16
lds
mov
test
nop
scas
cld
outsl
jecxz
lret
ret
dec
dec
push
movsl
xchg
fwait
mov
dec
sti
sub
xchg
jp
fistl
mov
inc
jg
pusha
mov
shll
mov
or
aam
xchg
lret
fucomip
sbb
cmc
inc
mov
ds
jecxz
pop
xor
mov
sbb
mov
lods
es
arpl
das
push
nop
xchg
adc
scas
stos
mov
sti
mov
mov
pusha
adc
shl
lock
inc
fwait
mov
sbb
xor
aam
rcl
jmp
push
out
or
xchg
and
loopne
gs
js
ret
ficomps
sub
or
ds
shrl
lods
sub
push
sarl
sbb
and
imul
and
adc
mov
mov
xor
push
mov
mov
fnstcw
shrb
test
mov
in
xchg
push
sub
fistpll
loop
push
stc
xchg
xchg
mov
pop
mov
fbld
lock
cli
pop
test
sub
sahf
jmp
fwait
sarb
or
cmp
loope
leave
je
cmp
xor
jno
add
dec
xchg
leave
fcoml
sbb
mov
jecxz
mov
stc
jecxz
xor
leave
outsb
outsl
xor
addr16
scas
cmp
fstpt
incb
or
pop
push
xor
repz
pop
dec
xor
adc
mov
jns
push
cmp
lret
mov
and
fisubs
xor
sbb
xchg
cs
jno
cs
iret
fbld
jmp
int3
out
ds
js
lret
rorb
shrl
icebp
jae
mov
xor
imul
jg
imul
popl
mov
push
stc
jno
mov
cld
out
xchg
out
jg
jno
subl
xlat
fldl
xchg
insl
sub
incb
xor
shlb
pushf
fiadds
xchg
dec
cmp
je
push
fisttps
jnp
jp
and
sub
xchg
pop
scas
cmpb
xor
roll
mov
mov
cs
push
push
mov
mov
hlt
xor
rcll
jp
setp
pop
gs
inc
inc
push
cmp
loope
xchg
out
mov
xchg
cld
das
nop
pop
sbb
ret
push
outsl
pop
jne
ret
inc
inc
sub
mov
adc
iret
lcall
test
mov
pxor
enter
and
or
test
cltd
pop
ljmp
xor
rep
dec
int
imul
mov
sbb
adc
and
sahf
outsl
mov
jle
or
mov
fstp
mov
or
in
mov
sbb
shl
test
mov
mov
movsl
scas
mov
pop
and
push
pushf
pusha
sbb
dec
aad
ljmp
jmp
xor
push
inc
jo
mov
mov
sbb
outsw
mov
push
push
xlat
sbb
and
insl
adc
leave
mov
into
clc
negl
imulb
cmp
out
xchg
sub
sbb
xchg
add
xor
es
add
sbb
xlat
fiadds
scas
repz
push
aam
sbb
mov
jp
sbb
addr16
mov
test
sti
mov
test
stos
ja
dec
aam
jg
pushf
push
jge
std
nop
out
dec
andb
and
mov
in
sti
mov
shll
mov
jg
dec
xor
push
je
cmp
or
add
inc
out
ja
scas
adc
jae
lods
arpl
jge
pop
cmpsl
fldl
xchg
add
cmp
mov
push
and
dec
dec
adc
std
notl
outsl
icebp
lods
add
sbb
push
jno,pn
mov
in
mov
dec
mov
mov
push
unpckhps
out
mov
gs
xchg
or
or
cwtl
lahf
fsubrs
dec
cmpsb
cmp
mov
mov
push
stos
add
inc
pop
aad
sub
lret
push
repnz
jbe
or
xor
xchg
adcl
test
das
call
jmp
int3
dec
dec
xchg
andb
and
sub
repnz
arpl
jmp
sti
jbe
repnz
popa
mov
ret
shll
jg
inc
xor
test
jge
es
or
mov
push
in
pop
es
inc
mov
sub
cltd
idivb
movsb
adc
popf
adc
push
stos
frstor
sbb
mov
ljmp
addr16
mov
cmc
jb
inc
xor
fbld
repz
jo
fwait
pop
mov
mov
jne
aas
shrl
inc
test
sub
pop
sub
xchg
mov
fwait
sbb
out
loope
ljmp
lret
push
adc
je
test
cli
shl
js
mov
xor
outsl
lahf
dec
idivl
mov
test
nop
add
sbb
pop
scas
xchg
test
mov
fwait
aas
repz
out
mov
sti
test
mov
dec
subl
cmpsb
pop
jne
sbb
or
fisubrl
pop
or
cwtl
mov
pop
cmc
mov
mov
or
mov
ljmp
mul
mov
jne
sub
or
mov
leave
dec
pushf
rorb
xor
mov
into
dec
icebp
xchg
cli
bound
push
out
repnz
sbb
and
push
stos
decl
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
adc
and
dec
test
fsts
pop
add
arpl
lret
mov
insb
lret
xchg
pop
outsl
sahf
es
push
jb
mov
or
cwtl
mov
in
bound
push
xlat
dec
push
cld
daa
loop
jb
in
xchg
ss
push
lods
push
mov
cwtl
pop
mov
mov
xor
pop
push
shll
mov
shlb
jb
mov
out
ja
lret
std
test
jo
mov
sar
cmp
jmp
pushf
loope
and
add
aad
into
mov
insl
mov
sub
pop
lods
lds
mov
xor
pop
jg
ret
movsl
mov
push
push
roll
lcall
popl
and
mov
mov
loop
lods
push
gs
sub
ret
xchg
cmc
adc
adc
mov
sub
xchg
jo
mov
push
bound
outsl
scas
idivl
test
dec
insb
sti
int
mov
add
mov
add
cltd
cwtl
fs
add
js
frstor
aad
mov
je
mov
test
enter
and
xor
lret
pop
mov
hlt
mov
and
fisttpll
in
shlb
test
aaa
mov
mov
por
xor
sbb
shrb
movsb
mov
sbb
in
xor
jbe
mov
mov
cmp
mov
xor
aaa
and
out
pop
pop
pop
addr16
mov
cltd
sub
cs
iret
iret
mov
dec
add
pop
addr16
js
aad
in
xorb
stos
icebp
sbb
sbb
pop
sbb
nop
mov
stos
xor
pop
hlt
sub
rclb
loopne
sbb
inc
dec
cmp
pop
fs
push
sub
or
roll
es
out
sbb
xchg
int
mov
push
mov
or
xor
cmpsl
and
ret
cli
adc
adc
imul
push
mov
ficoml
mov
sahf
es
rcrl
inc
xchg
mov
push
clc
ret
jecxz
xchg
add
orb
inc
cmpsl
push
xchg
insb
sbb
push
pop
pop
flds
fcompl
xchg
mov
outsl
inc
ret
jle
push
ffree
jns
aad
mov
lret
or
fcmove
mov
sti
xor
rorb
scas
mov
loopne
std
setnp
cmp
into
repnz
inc
fcomip
push
pushl
pop
insb
cmp
sub
call
mov
push
sub
filds
fnstsw
sbb
es
xchg
jg
xchg
jg
pop
dec
sbb
xor
sahf
sbb
lret
imul
aam
cmpsl
ret
xor
int
loopne
and
int
inc
xor
pop
xchg
or
xchg
fimull
rcrl
bswap
mov
movsl
or
idivl
stc
jnp
ss
and
jb
push
loop
jne
cltd
outsb
cltd
cmc
cld
cmpsl
lods
stos
lret
xor
sahf
inc
add
loope
shr
mov
mov
fstpl
je
xor
rcll
jno
adc
push
xchg
xor
dec
jne
int
gs
mov
push
jecxz
sbb
mov
mov
lret
stos
loope
push
jb
xor
sub
xchg
push
js
jnp
cmc
aaa
test
push
outsb
in
pop
inc
retw
push
mov
mov
mov
nop
stos
sar
dec
out
jb
cli
and
pusha
xchg
cmp
inc
test
in
dec
mov
pop
add
ss
dec
iret
xchg
mov
adc
xor
cwtl
adc
inc
enter
push
pop
rclb
jge
cmp
inc
je
mov
jae
loope
fwait
shlw
insl
in
add
js
aas
ds
add
ljmp
push
adcb
iret
xchg
rorb
jno
xchg
sarl
das
shr
popa
xchg
lods
xchg
mov
lret
test
sbb
jge
fnstsw
pop
and
pop
fsubs
fldenv
lods
pop
movsb
out
xchg
mov
fsubl
pop
repnz
xchg
mov
xor
mov
sbb
mov
std
sbb
adc
mov
loop
add
sbb
mov
pop
fmuls
test
xor
inc
cmpsb
sbb
fisttpl
js
dec
xor
mov
in
pop
pushf
stc
pop
and
inc
daa
les
push
imul
push
outsb
shl
cltd
ret
or
stc
xor
dec
stc
jg
sti
lcall
xor
lods
test
repnz
push
or
je
sub
and
scas
dec
out
dec
jb
push
or
or
push
or
mov
cmp
mov
cmc
or
int3
and
fisubs
fisubrl
kmovw
cmp
insl
sbb
jb
js
mov
pop
jl
sbb
mov
lods
movsl
ret
outsl
sti
fs
push
iret
jge
ja
mov
leave
fisttpll
mov
addb
stos
mov
repz
sbb
pushf
sti
lods
xorl
dec
ret
xor
inc
lahf
and
int
adcl
and
adc
xor
mov
xchg
cs
add
add
and
adc
mov
es
add
mov
inc
mov
add
aam
adc
xchg
fcmovnu
push
fsubrl
jl
jg
mov
jmp
cltd
cwtl
cmp
scas
mov
test
xchg
mov
fisubl
movsl
fpatan
ret
xorl
shll
jno
mov
mov
shll
test
sub
scas
shrl
scas
jno
xor
js
push
arpl
xor
pop
jne
adc
jns
nop
xor
rorb
mov
dec
inc
jge
push
mov
in
mov
notl
lret
into
mov
dec
fwait
cltd
rorl
mov
sub
and
push
fcoms
mov
ret
push
aas
inc
fisttpl
insb
sbb
and
out
or
rorl
out
jmp
push
xor
and
push
nop
pop
je
xchg
sbb
and
loop
in
movsl
les
add
gs
sub
dec
movsl
xlat
mov
mov
lods
repnz
ja
mov
out
inc
mov
jne
cwtl
mov
jbe
sbb
push
lods
scas
xlat
xchg
sbbl
clc
fstps
std
inc
stc
js
fsts
in
stc
add
orps
inc
pop
mov
push
rcrb
inc
sbb
lds
jg
add
ror
insl
loope
lret
cmp
rorl
jb
icebp
mov
and
and
jmp
jne
add
subl
xchg
inc
icebp
stos
js
ret
and
into
inc
loopne
sbb
out
enter
in
jns
or
rorl
lock
or
nop
push
cmp
push
je
stos
jle
dec
imul
pop
shll
inc
int3
push
fnsave
xchg
adc
rorb
lods
inc
mov
pop
and
sub
test
scas
pop
jmp
dec
xchg
adc
js
mov
mov
jp
jns
push
sbb
inc
gs
sub
dec
jl
std
inc
dec
imul
jmp
cltd
addr16
jo
popf
rcrb
dec
inc
adc
subb
lret
mov
add
push
mov
jb
movsb
popf
inc
adcb
inc
lret
pop
into
pop
mov
push
mov
in
pushf
xor
pop
or
xor
jle
add
fucompp
sub
xchg
pop
jge
jbe
xor
xor
cs
add
and
inc
push
xor
sub
pop
int
jnp
xchg
cmp
popa
mov
jl
sub
push
out
cltd
mov
sub
bnd
stos
jmp
jns
mov
mov
orb
jp
xchg
ja
add
or
repnz
dec
mov
addr16
clc
mov
pushf
cmpsl
in
push
scas
sbb
xchg
inc
js
inc
dec
cmpsl
and
push
mov
jl
adc
pop
cmp
inc
lcall
and
cltd
xchg
fsubr
dec
cmpsl
jns
inc
add
adc
out
mov
xchg
jecxz
icebp
pop
flds
lcall
clc
cwtl
in
jae
cmp
pop
idiv
pop
xor
xor
xchg
and
xchg
or
pop
mov
loopne
rol
sarb
add
shr
add
nop
sub
push
out
out
int
push
nop
adc
ss
mov
or
data16
popa
xlat
and
btc
hlt
icebp
fiaddl
inc
and
add
xlat
mov
jbe
pop
cli
jbe
dec
pushf
rolb
xchg
xor
ss
push
aad
pop
fwait
icebp
mov
fsubl
testb
push
mov
pop
mov
mov
sub
mov
adc
push
mov
xor
mov
adc
cltd
sahf
push
add
xchg
pop
xor
xchg
inc
subl
and
sub
cwtl
cltd
movsl
pop
dec
test
mov
xchg
xor
in
test
add
pushf
or
cld
jp
xchg
and
sub
jbe
sub
inc
int
dec
mov
loope
dec
inc
popf
arpl
dec
movsb
std
and
jmp
gs
imulb
xchg
or
pop
cmp
decl
imul
mov
cwtl
data16
dec
cmc
and
arpl
or
adc
or
out
push
dec
loope
sbb
imul
jp
shrl
gs
test
jne
push
xcrypt-ecb
cmpsl
mov
or
nop
aaa
lock
xor
aaa
fdivs
fdivs
cli
out
xchg
insb
pop
add
ret
imul
push
jmp
aam
imul
jne
and
popf
stc
aam
jp,pt
stos
cmp
jp
pop
outsl
aad
jb
sti
sbb
ja
dec
cwtl
movsl
jo
out
pop
test
pusha
sbb
push
jg
out
xchg
ret
add
xchg
lock
lods
pop
stc
mov
cltd
mov
int3
push
dec
mov
jne
jecxz
mov
stos
pop
and
fistpll
lret
orb
pop
aam
arpl
subb
mov
or
pushw
inc
mov
ljmp
cmpsb
cld
test
mov
fsubs
in
movsb
in
cli
out
lahf
xor
jo
dec
mov
inc
insb
imul
dec
mov
pop
and
fstp
inc
fwait
sbb
or
out
mov
and
out
outsl
stos
fs
gs
fimuls
jle
rorb
mov
and
bound
push
and
add
pop
daa
arpl
jo
lds
outsl
xchg
dec
push
shlb
dec
scas
lret
fimull
xor
xchg
inc
fiaddl
shufps
aam
bound
dec
push
adc
or
ljmp
adc
pop
jbe
xchg
test
stos
jmp
mov
ja
or
mov
push
arpl
neg
mov
xlat
outsb
add
popa
fmull
repz
jbe
lret
sbb
adc
dec
jmp
popa
pop
adc
or
fsubl
andb
push
mov
daa
push
das
inc
jae
adc
push
add
gs
add
idiv
ret
daa
sub
clc
xlat
pushf
xor
out
dec
jle
jle
ss
adc
data16
cmp
loop
push
ds
cld
lahf
leave
jp
outsl
es
vpshuflw
xor
sbb
bound
dec
ja
sub
insb
add
jl
pushf
das
xchg
and
inc
out
mov
pushl
jno
cmp
add
or
push
pusha
cs
in
inc
cs
test
mov
fsts
push
cwtl
dec
jmp
pusha
xchg
sub
idivb
sub
xor
aas
pushf
iret
push
push
xchg
pusha
je
jp
mov
dec
xchg
push
cmp
fiadds
dec
add
xchg
popl
imul
xor
xchg
popa
dec
ret
das
int3
adc
in
repnz
inc
xor
shl
adc
or
call
mov
jns
in
jae
mov
mov
sbb
push
test
das
and
mov
test
sbb
sbb
jecxz
sub
add
shll
sub
pop
inc
lds
sbb
jo
aaa
aaa
fistpl
jg
mov
ss
pushw
inc
inc
sbb
nop
inc
negb
pop
mov
aam
pop
inc
lds
test
dec
jle
adc
clc
jno
pushf
cmp
push
aas
push
in
cwtl
adc
iret
test
and
adc
fsts
xlat
insl
repz
and
add
adc
mov
push
shl
cmp
mulb
mov
in
cwtl
push
dec
jae
sbb
ja
push
fwait
jbe
push
std
xor
or
outsb
inc
add
jp
loop
ss
dec
xorb
je
fbld
dec
push
test
icebp
lock
mov
cltd
or
mov
stos
xchg
iret
addr16
mov
mov
andb
sub
push
or
mov
aam
add
xchg
aad
mov
outsl
cld
sbb
sub
cmp
lock
dec
sbb
xchg
ret
sarl
test
add
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
sbb
mov
js
adc
and
idivb
bound
cmpsb
inc
and
mov
mov
ret
stos
inc
xchg
jo
dec
mov
ss
hlt
pop
inc
adc
sarl
pop
inc
xchg
jp
xor
inc
sub
je
xor
sbb
lock
and
bound
rclb
fildll
and
fwait
mov
inc
rep
xlat
bound
lea
pop
cmp
xchg
fwait
cmpsb
jecxz
out
cwtl
sub
xchg
mov
mov
cmp
pop
mov
push
pop
cmp
in
push
or
mov
inc
loop
int3
lcall
lret
sub
push
or
jae
cmp
and
testl
or
scas
lret
out
mov
jl
sub
sbb
cmp
repnz
sbb
arpl
aas
sub
xchg
sbb
shll
or
sbb
lret
out
fwait
xchg
add
out
sub
mov
and
inc
jmp
les
and
push
test
lret
mov
jmp
xchg
xchg
mov
popf
cmp
cwtl
sub
in
sub
loope
repz
iret
loopne
adc
sbb
push
mov
lea
aaa
outsl
xor
jae
leave
add
lret
pop
sbb
adc
sub
gs
jbe
imulb
xchg
loope
movsb
in
or
sbb
test
mov
adcl
bound
sub
mov
or
xor
sbb
ret
js
inc
add
stc
outsl
xchg
jo
inc
mov
aam
xor
dec
mov
test
or
xchg
cwtl
jne
aas
adc
adcb
push
jno
xchg
in
aas
imul
or
in
add
negl
dec
jg
dec
iret
jne
nop
jmp
and
aaa
fs
sub
mov
jb
rorb
movsl
add
stos
jmp
mov
xor
mov
dec
lret
jmp
iret
cli
test
sbb
push
cmp
xor
pop
stos
ss
jnp
ss
inc
xchg
cs
mov
pop
aas
and
xchg
pop
add
flds
cmp
sbb
pusha
or
push
push
fisubl
outsb
xchg
fucomip
test
sub
sub
jne
bnd
jg
sub
xchg
dec
popf
pop
xor
pop
pop
add
push
test
mov
lea
push
jl
das
int
xor
push
scas
jo
sbb
xchg
shll
bound
xor
push
xor
cmp
push
and
orl
icebp
lea
sbb
push
mov
ljmp
test
adc
cmp
push
xchg
pop
push
hlt
pop
movsb
add
js
jo
mov
inc
xchg
fldcw
mov
cmpl
lahf
cmc
es
jb
aad
mov
fnstenv
cmp
or
push
nop
push
sti
adc
dec
jmp
repz
scas
cmc
and
into
mov
xor
pop
pop
and
inc
mov
pop
fmuls
bound
xchg
and
cmpsb
lock
push
sahf
jbe
scas
mov
and
insb
subl
xor
imul
sub
mov
insl
pop
out
xor
lock
leave
loopne
sahf
lret
imul
addr16
add
sar
dec
icebp
mov
int3
in
ret
inc
mov
in
cmpb
cltd
lahf
jmp
inc
xor
sahf
orb
loopne
test
push
out
mov
test
les
repnz
sub
sub
ret
out
xlat
fidivl
into
sub
stc
in
mov
fdivs
xor
in
arpl
out
mov
push
xchg
add
pop
mov
mov
sbb
aad
and
pop
and
inc
cmp
mov
dec
js
lret
xchg
lods
loope
call
cwtl
stos
lahf
dec
push
xchg
push
pushl
inc
dec
mov
sub
mov
jl
cmpsb
in
out
movsl
jge
xchg
push
dec
shl
mov
rolb
mov
pop
out
dec
dec
xchg
fcoms
mov
movsb
mov
stos
mov
jp
lret
push
arpl
out
repz
xor
fldenv
mov
cmpsb
lods
fisttps
xchg
std
mov
std
or
popf
lcall
fsubrs
pop
shrl
shlb
orb
out
push
mov
loop
adc
ja
movsb
adc
push
popa
daa
sub
sub
push
out
int3
ljmp
test
mov
test
rcrl
stc
jne
pop
pop
idiv
pop
mov
loop
mov
xorl
shr
cli
scas
dec
push
test
scas
paddsb
test
test
ja
sub
out
rolb
xor
enter
jo
repz
je
sbb
dec
cli
ret
in
sbb
mov
xor
js
sbb
mov
add
push
push
fsubrl
ficoml
test
jle
in
cs
stc
ljmp
test
shl
inc
cltd
pop
dec
out
dec
rclb
mov
xor
repz
cmpsl
xchg
xchg
movsl
aad
inc
jbe
stos
fiadds
in
js
aad
cwtl
xor
ret
mov
in
shll
pop
lds
punpcklbw
daa
loop
sahf
stos
xchg
fsubrl
leave
and
xor
insb
add
mov
add
mov
add
mov
lret
sbb
rclb
push
pop
add
sub
bound
mov
shlb
sarb
inc
data16
mov
adc
je,pn
popf
hlt
scas
cmp
adc
pop
sub
xchg
frstor
sub
ss
out
shll
into
lods
dec
cmp
mov
mov
dec
out
mov
in
jbe
mov
clc
add
inc
mov
push
les
inc
inc
sti
mov
insl
stos
int3
int
xorl
shr
cmp
aad
xchg
loope
inc
xchg
jno
sub
push
insb
in
std
in
inc
mov
push
pushf
mov
call
mov
das
sahf
add
into
cmpsl
loop
cwtl
xor
adc
adc
dec
push
or
xchg
or
pop
mov
add
out
xchg
mov
int3
pop
add
mov
inc
test
xor
dec
sahf
xchg
mov
xor
movsl
cs
leave
lds
bound
dec
outsb
push
std
or
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
and
and
rolb
push
pop
into
popa
jb
push
pop
mov
fld
mov
pop
or
ficompl
inc
cwtl
aam
scas
movsb
mov
popf
bound
and
xchg
pusha
lea
cs
push
ljmp
int
adc
sub
rorb
stos
mov
lcall
fnstenv
mov
iret
jbe
and
mov
xor
xchg
movsb
cmpb
cmpsb
loop
inc
push
shrl
mov
fsts
decb
shl
fmuls
mull
mov
out
dec
sub
mov
movb
pop
sub
arpl
das
nop
mov
jb
subb
rcpps
push
movsl
ss
sub
std
and
push
push
inc
mov
mov
mov
adc
in
cmpsb
jne
cs
repnz
hlt
add
mov
scas
mov
jl
xchg
xchg
adc
sbb
test
gs
push
jno
stc
mov
lret
aam
jae
adc
loop
movsb
nop
jl
jno
cmp
in
add
mov
mov
xchg
fistps
aad
outsb
les
dec
jmp
dec
cmp
pop
daa
sub
stc
sub
outsl
sub
jle
js
arpl
mov
jne
add
das
popf
cmp
push
jns
mov
mov
xor
pop
and
in
int
push
pop
iret
jg
mov
mov
xorl
lods
push
clc
push
mov
lea
sub
push
xchg
ret
mov
leave
mov
push
stc
aaa
sub
jnp
in
jle
mov
jns
pushf
adcb
mov
mov
clc
dec
popf
fildl
pop
fldcw
cwtd
out
movsb
outsl
movsl
mov
outsl
jl
sahf
enter
lahf
ror
pop
rcl
xchg
in
ja
mov
cmp
ret
cmp
pop
repz
xchg
push
pop
cmpsl
aam
mov
cmpsl
jne
add
cmc
addr16
scas
stc
push
lret
aad
shrl
sbb
in
pop
nop
sbb
imul
pop
cmp
ss
andb
cmp
rcll
pop
push
loope
icebp
movsb
arpl
cmp
stos
adc
pop
sub
imul
adc
stos
lret
sub
std
sbb
and
or
mov
adc
and
cmp
pop
js
outsl
add
cltd
aas
and
icebp
sub
pop
cmpl
and
je
push
pop
lret
ds
and
inc
rolb
jnp
out
mov
shll
cmpsb
les
inc
and
sub
shl
das
mov
push
jno
add
or
outsl
lcall
shl
decl
xchg
ljmp
jae
sti
cmp
pop
and
push
lds
and
popf
pop
aaa
mov
add
arpl
cwtl
ret
sbb
inc
dec
clc
ss
lds
out
add
iret
sub
lret
pop
outsb
dec
xchg
mov
push
fisubrl
push
in
repnz
repz
in
bound
pop
scas
fwait
push
in
gs
loop
std
test
sbb
sub
out
add
enter
clc
push
das
add
in
mov
cli
in
rorl
andl
or
scas
das
dec
push
push
dec
add
testl
hlt
andb
test
icebp
scas
inc
pop
mov
dec
cld
jle
arpl
adc
pop
cmp
popf
sti
jmp
out
mov
dec
aas
sbb
lds
adc
fists
insb
lcall
bnd
nop
jo
inc
pop
imul
in
inc
jno
outsl
leave
xchg
xor
mov
mov
xor
lods
mov
int3
sti
lea
sub
les
pop
inc
xchg
repz
push
mov
pop
jno
cltd
dec
std
je
push
pop
stos
mov
inc
data16
negl
xchg
imulb
orl
or
setne
test
shrb
lods
ret
lds
sbb
out
jo
sub
dec
cmp
shlb
mov
sub
adc
jb
insl
dec
ljmp
std
mov
inc
pop
jno
popf
pusha
push
repnz
jg
hlt
ds
fdiv
cli
cmpsl
shlb
mov
cmpb
or
push
inc
add
push
outsl
mov
xor
ljmp
lods
outsl
in
ss
jg
pop
test
roll
lcall
pusha
popa
enter
fsubrs
mov
aas
jecxz
inc
cwtl
xor
and
out
ss
inc
cmp
dec
push
fnsave
lcall
mov
repz
xor
mov
jo
clc
in
mov
push
mov
sarb
add
loope
pop
pushl
ret
lea
cltd
dec
sub
jo
ss
mov
icebp
enter
int3
mov
repz
push
push
push
clc
xor
pop
repz
mov
or
sbb
int3
shrl
cld
dec
js
lods
loop
xorb
mov
popf
pop
dec
gs
push
adc
cmc
divb
incl
shll
lahf
push
mov
test
fidivl
push
jbe
jb
negl
fnstenv
cmp
stos
push
flds
sahf
rcrb
sub
in
mov
repnz
add
movsb
xchg
adc
imul
cmp
aad
repz
adc
shlb
add
push
fwait
outsl
jno
daa
or
adc
leavew
inc
inc
in
dec
xchg
lea
sbbl
lret
lcall
sbb
mov
push
repnz
pop
and
outsb
es
mov
add
xchg
adc
or
das
arpl
les
mov
sahf
int
dec
push
ljmp
clc
dec
andnps
dec
dec
and
rcrb
stc
test
xor
in
xchg
scas
fldt
pop
jmp
or
mov
mov
js
dec
mov
les
and
jge
sbb
dec
lods
push
mov
sub
hlt
inc
out
lods
loope
addr16
mov
inc
inc
sub
jae
dec
sub
les
ret
mov
inc
ljmp
sbb
iret
jno
test
cld
pop
imul
mov
sub
adc
faddp
add
bound
into
je
push
aas
push
ljmp
stos
or
outsl
mov
mov
pop
inc
cmp
xor
mov
push
jmp
sbb
push
adc
xchg
int3
xchg
adc
and
inc
shrb
lods
fnstcw
jle
lcall
cli
xchg
arpl
jl
mov
mov
fdivl
in
stos
lcall
push
and
mov
mov
jne
les
and
sbbl
mov
mov
inc
shrl
dec
sbb
scas
fwait
xchg
push
pusha
mov
push
mov
test
shl
and
addr16
jo
fs
push
add
jo
fdivr
inc
ret
nop
ret
cmp
cld
cwtl
and
jecxz
xor
ret
ficoms
and
xor
xlat
aad
in
mov
lcall
adc
decb
dec
push
ret
ljmp
int3
sbb
sbb
xchg
into
jl
xchg
rcrb
xchg
ror
sar
push
fcoms
pop
shll
aam
mov
jl
loope
test
dec
xchg
lods
ss
dec
test
mov
dec
xchg
add
loop
adc
mov
rolb
jns
and
jbe
xchg
mov
dec
push
adc
xchg
push
or
sti
fs
sub
inc
call
mov
inc
add
or
jge
or
push
pop
out
and
push
mov
int
sbb
jmp
xchg
in
es
xlat
lock
sub
outsb
ret
test
dec
inc
popa
fwait
jno
and
loope
outsb
aad
mov
mov
xchg
and
fs
mov
imul
fstps
jbe
push
leave
sbb
lea
popf
jl
mov
cmp
daa
jo
cwtl
aaa
jnp
mov
and
mov
cmp
sbb
add
xchg
add
mov
pop
iret
mov
inc
mov
cmc
aad
je
shll
dec
cmp
mov
addb
mov
scas
sub
mov
mov
aas
jl
fidivs
sub
enter
ja
mov
xor
enter
jle
add
cli
aam
fldcw
test
pop
loopne
in
cltd
fistps
mov
test
mov
leave
test
add
add
es
sub
and
lcall
scas
ja
lods
test
push
cmp
outsb
jnp
fwait
push
mov
push
xor
dec
push
fdivrl
and
cli
sbb
out
into
mov
mov
leave
xor
stos
mov
push
mov
mov
xchg
dec
inc
mov
icebp
mov
in
pop
push
lods
popf
imul
in
int
ret
nop
lcall
arpl
add
sti
popf
pushl
jle
dec
mov
push
loopne
and
gs
or
dec
add
xchg
push
enter
adc
push
or
into
fstpl
xchg
addr16
mov
or
gs
std
call
cs
lods
push
inc
adc
mov
push
loop
scas
inc
fdivl
fs
dec
pop
or
mov
and
lods
dec
pop
mov
imul
and
addr16
jp
pop
xchg
adc
aam
mov
mov
jo
fld1
movsl
scas
dec
mov
es
and
push
push
scas
xor
or
fimuls
jp
ret
and
mov
std
mov
out
xor
cmp
fisttps
rorb
ds
inc
in
pop
into
jnp
filds
lea
xchg
popa
jae
pusha
push
movsb
rclb
fnstsw
out
push
jo
aaa
inc
movsb
mov
fs
inc
mov
pop
push
adc
push
lret
shrb
sbb
adc
les
mov
das
cmp
out
movsl
insl
cwtl
prefetcht2
mov
cmp
sub
addr16
xor
ljmp
in
add
pop
adc
xchg
pop
lea
pop
test
daa
jno
out
dec
call
clc
enter
dec
xchg
lock
testb
xor
xor
fisttpl
cld
test
cmp
in
fwait
test
fcoml
push
lea
or
xlat
mov
push
aam
out
push
jb
ja
mov
xor
mov
mov
mov
and
push
mov
ss
mov
adc
cmpsl
nop
lcall
jecxz
inc
cld
or
gs
push
xchg
mov
andl
xor
cmp
lds
loope
mov
xor
mov
sahf
push
into
test
in
mov
push
push
pusha
push
sub
fwait
pusha
jecxz
cmp
pusha
loope
aad
jno
mov
pop
iret
sar
popa
jle
push
andl
fwait
mov
in
cltd
sbb
jg
pop
cmp
mov
sbb
sbb
lahf
aam
cmpb
adc
int3
pop
js
sahf
loopne
pop
in
iret
negb
pop
cs
xchg
mov
mov
mov
lahf
mov
lcall
mov
iret
clc
jge
fldenv
rcll
pop
insb
insl
mov
sbb
inc
stos
sbb
push
and
cmp
call
repz
sub
call
das
or
cmpsl
mov
rcrb
lds
stos
mov
repnz
push
xlat
cmc
jo
and
pop
call
sbb
mov
sbb
je,pn
idivb
mov
test
aaa
ret
sub
cmp
push
mov
testb
outsb
mov
add
rep
jmp
add
inc
or
shl
cmpb
push
jb
mov
sub
push
fstl
fcoml
fmul
inc
adc
sub
jb
mov
pop
cltd
mov
mov
cmp
pop
cmp
mov
int
insl
inc
push
loope
hlt
mov
jbe
push
inc
shrb
or
xchg
into
fs
and
push
mov
mov
insb
mov
sbb
enter
adc
lock
test
and
cmpsl
int3
xchg
fsubrl
stos
xor
ds
ljmp
scas
xor
lods
and
or
jno
push
lods
in
int
test
mov
push
mov
jp
sbb
jecxz
xlat
xchg
out
inc
popf
or
bound
xor
and
or
push
outsl
test
addb
mov
daa
sti
push
dec
test
pop
sbb
push
dec
ret
cli
jmp
dec
jnp
gs
inc
mov
pop
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
push
or
mov
addl
sub
nop
dec
insb
sbb
sbb
inc
test
adc
adc
mov
mov
push
fsts
jb
lahf
aam
clc
mov
jbe
mov
pop
xchg
or
out
sub
push
cmp
pop
cmp
pop
loop
mov
arpl
jbe
pop
scas
or
sbb
call
push
inc
out
mov
call
sub
ret
outsl
inc
mov
imul
in
hlt
add
shr
mov
test
cwtl
fmull
push
movsb
mov
lock
dec
test
nop
and
sti
test
icebp
push
push
mov
lods
xchg
dec
pop
mov
in
jb
mov
lea
popf
and
pop
out
push
push
jle
pop
pop
ret
aam
jo
inc
dec
sub
aam
mov
or
and
lods
cmp
jmp
jecxz
pop
in
push
jecxz
adc
adc
fstp
or
cmp
mov
adc
or
jge
cld
sub
cmp
stos
pop
les
pusha
cmc
out
out
push
clc
inc
sti
cltd
fsub
lock
fwait
cmp
mov
jb
ret
push
push
sub
cmc
fimull
inc
stos
in
jae
test
imul
xchg
jmp
mov
add
pushf
adc
mov
cmp
repnz
mull
cld
fs
inc
stc
pop
and
dec
mov
push
pop
add
outsl
and
loopne
lcall
jno
mov
jnp
aad
adc
mov
or
in
and
jp
or
sbb
sbb
push
movsb
pop
ret
or
ljmp
lret
ret
and
mov
sub
negl
jae
lock
push
jmp
or
push
iret
int3
test
fcmovu
or
pop
fdivrl
loopne
notb
sbb
lahf
jae
into
jl
popf
cwtl
push
mov
test
xor
xor
loope
fiadds
hlt
xlat
push
jle
cmc
add
pop
jno
cmp
rclb
or
cld
lahf
jmp
lds
add
mov
fwait
arpl
sarl
mov
sub
scas
iret
and
popf
mov
fs
insb
adc
enter
mov
aam
lret
and
xchg
pop
xchg
pop
push
adc
adc
loop
mov
inc
cmpsl
inc
xor
lods
lods
mov
mov
std
addb
mov
shr
int
sbb
lahf
es
sub
cwtl
std
out
nop
movsl
mov
jecxz
push
cld
pusha
xchg
orb
pusha
push
sub
mov
enter
pop
or
and
rorl
sbb
out
pop
popf
mov
jle
sub
cs
cmp
outsb
cli
mov
xchg
sub
dec
enter
int
xor
mov
jns
in
jne
jmp
add
and
cmp
negl
push
xor
dec
jnp
cld
dec
in
in
in
mov
pushf
mov
sub
xor
popa
imul
pop
mov
iret
pop
aaa
scas
das
fcoms
add
js
mov
jl
std
adc
call
sub
push
loopne
stos
sub
push
mov
xor
repz
xor
sarb
inc
rcrl
aad
aam
pop
push
mov
je
or
ret
fdivrl
inc
aad
cmpb
xchg
push
shll
imul
pop
sbb
push
insb
xchg
xchg
inc
lods
lret
mov
xor
mov
pop
and
lret
xchg
addb
mov
pop
cli
mov
imul
xlat
bswap
std
inc
add
daa
in
or
cmp
aas
mov
stc
loope
fnstenv
cmpsb
mov
jmp
jl
push
loopne
push
jne
ja
stos
xlat
loopne
ds
cmpsb
cmpsl
add
and
clc
and
jg
dec
js
test
call
sbb
mov
lret
popa
aaa
cmp
xchg
ds
jb
mov
addb
bound
icebp
popf
xchg
fadd
adc
fxch
mov
mov
daa
pop
add
dec
mov
adc
aaa
lea
jnp
dec
ds
or
push
or
test
xor
adcb
das
and
cmp
test
aas
cmp
pop
arpl
dec
sub
clc
xchg
jbe
xchg
mov
popf
shr
movsb
dec
jne
fisttpll
dec
mov
cli
jae
xor
cmp
loopne
jb
out
rorl
mov
push
pop
aad
sub
xchg
xchg
mov
insb
adc
fiaddl
in
lea
mov
adc
hlt
dec
test
push
test
add
jp
xor
lds
out
mov
adc
mov
fdivs
int3
mov
and
xchg
adc
cmp
mov
xor
jp
popa
push
or
mov
movsl
mov
or
xchg
lock
jo
das
mov
adc
js
dec
xchg
stos
sti
cmp
sub
inc
out
xor
mov
test
shl
cmp
popa
or
add
inc
dec
sbb
int
in
dec
shll
jmp
jle
jmp
fdivs
lcall
test
cmp
rol
es
dec
xchg
insb
xchg
pop
mov
pop
mov
sub
in
out
xor
dec
inc
not
ret
sub
mov
rorl
pop
inc
mov
inc
jmp
je
testl
add
lods
imul
sti
cwtl
ljmp
sub
xorb
loopne
push
adc
jae
cld
add
std
xor
addr16
loop
stc
jnp
pop
mov
es
mov
in
cmpsl
sub
xor
daa
pop
mov
call
add
pop
bound
xor
sbb
test
imul
sahf
cmp
add
adc
adc
les
xor
repz
fwait
fwait
push
lahf
inc
repnz
gs
push
hlt
jmp
sub
inc
rclb
or
ljmp
dec
dec
shl
js
pop
negl
neg
cltd
or
inc
lcall
cld
mov
std
popf
lods
pop
inc
push
fs
aaa
and
insb
pop
push
add
imull
movsb
aas
aam
jne
adc
ret
cmpsl
out
or
jne
insb
rcr
clc
jbe
cli
push
aas
neg
push
movsb
cmpsl
jno
imul
stos
stc
xchg
mov
out
psrld
push
lret
cltd
aaa
mov
mov
stc
shll
xor
aas
jae
mov
lods
xchg
js
adc
ds
outsl
sbb
fildl
movsb
jp
xchg
ds
out
lret
pusha
arpl
push
es
ret
jo
dec
add
add
dec
fwait
scas
jae
shrb
adc
mov
sbbb
and
sub
cmp
add
cltd
enter
or
sub
xor
mov
pop
dec
std
or
imul
inc
or
scas
inc
inc
add
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
mov
adc
addl
popa
cmpsl
aas
sbb
or
and
sbb
std
dec
add
xchg
popw
push
push
pop
je
insb
outsl
jae
pop
es
shrb
mov
and
jnp
mov
test
lahf
out
cmpsl
jae
pop
shl
push
cmc
adc
fs
lret
dec
push
pop
mov
stos
xor
push
jle
dec
mov
dec
cmp
add
scas
mov
ss
pop
movsl
stos
imul
xorb
lret
push
push
ret
aad
fidivrl
jno
inc
push
ss
mov
and
mul
inc
jno
mov
xor
std
push
pop
out
mov
pushf
push
enter
test
scas
fildl
movswl
push
jb
jge
adcb
or
inc
test
pusha
mov
push
pusha
outsb
inc
jnp
shlb
xchg
ljmp
jb
and
movsb
in
mov
aas
lds
test
inc
fsubrl
dec
adc
lds
popa
jo
jl
mov
sbb
dec
mov
xchg
ljmp
fstps
leave
jge
push
popa
addr16
and
xor
daa
mov
ficompl
dec
in
icebp
imul
lea
add
daa
add
movb
stc
mov
mov
cwtl
inc
push
cli
dec
ror
in
mov
dec
push
hlt
xor
sbb
jl
xchg
aaa
pop
adc
jns
mov
mov
adc
mov
shl
cmp
pop
jns
enter
add
sti
fisttpll
inc
mov
xor
es
insl
fistl
xor
sub
add
pop
aas
jge
adc
jnp
dec
std
sub
cmpsl
and
call
mov
jb
cmp
dec
sbb
xchg
mov
pop
ljmp
jns
sbb
jecxz
arpl
aam
in
pop
mov
movsb
bound
dec
add
pop
shlb
fs
cmpsb
out
flds
call
mov
push
push
sbb
adc
cmp
add
das
dec
leave
lahf
popf
mov
stc
cwtl
mov
push
insb
mov
dec
mov
and
sbb
xor
jo
pop
sbb
pop
jmp
pop
cmp
or
jb
sbb
addr16
cld
pop
jno
cmp
adc
bound
movsl
out
jle
cli
mov
jne
lods
stos
rorl
adc
cmpsb
cmp
jg
sub
and
stos
gs
jmp
icebp
shlb
mov
push
jl
sub
pop
sti
enter
mov
incb
sbb
call
sti
mov
xchg
fdivrl
and
sub
push
sbb
out
cltd
adc
xor
mov
add
shlb
movsl
adc
add
pop
ret
fldenv
push
sub
jl
movl
mov
lahf
xchg
sub
es
mov
mov
es
pop
test
cmpsb
roll
scas
pop
xlat
clc
xchg
cmp
sahf
jne
cmp
sbb
iret
ss
xchg
cmp
cmc
xchg
insl
repnz
jl
clc
cmpb
mov
leave
test
jg
or
dec
sbb
xor
cmp
rcr
mov
sub
imul
jge
mov
std
push
addb
imul
popf
push
sbb
jp
mov
cmpsb
push
add
mov
lock
roll
xor
jo
fildl
xor
mov
std
dec
cmp
pop
lret
dec
sbb
rolb
sub
jb
int
stos
xor
and
in
mov
mov
pop
shlb
push
pop
repz
mov
sub
clc
inc
or
or
dec
and
push
add
dec
cli
rol
call
ss
jo
faddl
sbb
dec
xor
push
dec
je
insb
fbstp
and
dec
or
mov
lcall
movsl
mov
enter
sti
testl
lods
pop
mov
push
lcall
or
mov
push
data16
adc
xor
shll
pop
popl
rorl
in
into
mov
lret
inc
pushf
das
push
jecxz
mov
xchg
cltd
jle
push
add
jnp
xor
gs
arpl
lahf
rcr
nop
pop
sti
jb
or
mov
sar
scas
mov
out
mov
inc
or
pop
mov
inc
cltd
test
xchg
jmp
cmp
ljmp
xor
fldt
cli
cmp
dec
cmp
xor
test
sbb
jne
jnp
mov
pop
and
fcoml
xor
xchg
cmp
fdivrp
ret
jae
and
lea
push
add
out
fs
mov
mov
hlt
jne
inc
out
aam
mov
push
cmpsl
insb
mov
fnsave
arpl
lcall
cmpps
jae
mov
and
insl
out
fwait
xchg
jne
push
mov
mov
xor
cs
lret
mov
cmpsl
mov
roll
mov
jecxz
filds
mov
sbb
test
xor
sub
scas
shrl
dec
dec
inc
or
int3
movsb
dec
pop
pop
mov
mov
sbb
ja
push
sbb
lret
pop
mov
dec
mov
jb
hlt
js
sub
test
addr16
subb
imul
pop
sti
xorl
pop
test
sbb
push
sbb
loope
add
jecxz
jge
testb
cli
mov
pop
movsb
and
push
lea
push
and
and
ljmp
jg
mov
mov
es
in
stos
lds
push
outsl
mov
mov
lea
imul
pushw
test
pop
ds
push
add
hlt
sarl
jnp
add
cmpb
push
rorb
mov
and
sub
daa
pop
push
sahf
js
add
mov
out
fisubs
and
imulb
or
jl
fsub
inc
mov
lods
mov
mov
in
popa
inc
nop
rol
lcall
jecxz
stos
mov
adcl
xor
ds
das
cli
mov
mov
les
mov
fisubl
xor
outsb
in
idivb
xchg
das
and
cwtl
cmp
cli
dec
jmp
aad
mov
dec
push
dec
jg
les
movsl
pop
push
leave
mov
jl
icebp
xor
or
stc
stos
or
dec
loop
sbb
xlat
add
ljmp
out
clc
cmpsb
push
or
mov
dec
mov
adc
adc
xchg
mov
ja
sbb
xchg
pop
repnz
cs
ret
cli
test
jno
test
fsub
dec
fs
xor
notb
mov
mov
cmp
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
pop
jmp
adc
addl
andb
xor
loope
mov
mov
ja
idivl
cmpsb
loopne,pn
pushf
pusha
cmp
pop
sbb
and
sahf
or
mov
or
dec
push
decl
into
mov
movsb
shrb
scas
add
fsubl
lret
dec
or
inc
pop
fdiv
fistpll
fiadds
mov
mov
sub
fists
fnsave
fldcw
push
add
not
sahf
scas
jbe
mov
movsb
jae
stc
shrb
int3
andb
repnz
dec
or
and
jg
adc
bound
xor
stc
stos
mov
outsl
pop
lods
inc
test
pop
mov
jo
cmp
xchg
inc
loope
clc
push
loope
sub
cld
popw
outsl
cld
adcl
add
cmp
out
daa
sbb
shr
xor
arpl
jge
sub
imul
inc
pop
les
mov
out
lock
sbb
es
dec
mov
adc
mov
inc
xchg
lahf
ss
mov
jo
mov
mov
pop
fsts
sub
into
pop
adc
add
mul
rcrb
data16
push
add
outsb
jge
jno
enter
add
ror
fwait
shll
cmpsb
les
ds
bnd
sbb
add
inc
in
mov
inc
mov
out
xor
xchg
movsb
std
clc
xor
test
adc
fisubrl
and
push
scas
and
rcrb
aas
or
test
imul
dec
push
xchg
inc
sub
inc
and
ss
fs
lahf
adc
mov
lahf
inc
or
push
pop
ja
and
push
lret
out
fimuls
jle
es
xchg
sbb
xor
movhlps
in
lret
aam
mov
mov
xchg
and
nop
pushf
fidivl
adc
test
adc
cmp
mov
cmp
push
into
mov
push
nop
cmp
mov
jp
adc
pop
mov
jnp
push
lret
xor
pop
inc
out
test
push
pop
xor
pop
jbe
push
pop
call
pop
imul
sbb
adc
xchg
mov
ljmp
jb
ljmp
dec
inc
mov
pop
ds
orl
push
adc
jl
push
add
mov
xor
or
jmp
and
and
int3
adc
pop
ret
mov
mov
iret
repz
arpl
xchg
mov
aam
into
cmp
inc
jmp
pop
and
fmul
std
inc
inc
int
mov
out
push
lret
push
pop
out
sarb
test
out
in
vsqrtps
sbb
sarb
addb
shl
cs
push
pusha
pushf
push
shlb
inc
insb
imul
mov
stos
rol
adc
adc
sub
mov
add
pop
or
cmp
imul
jp
jns
lret
outsl
jmp
or
push
lret
cli
loope
dec
daa
sub
mov
mov
repnz
adc
dec
pop
fidivrs
mov
int3
std
mov
data16
ret
ss
dec
mov
incl
jno
pop
jae
add
in
shlb
mov
push
cmp
or
imul
popf
sti
into
mov
dec
call
mov
in
adc
fldl
jb
mov
mov
ds
mov
pop
outsb
loopne
mov
fistl
lods
sbbb
fistps
pushl
popf
push
adc
ficomps
mov
jp
in
pop
fsubr
imul
das
js
fcom
mov
mov
add
out
or
xor
sbb
xchg
insl
dec
xlat
xchg
jne
dec
test
outsl
jne
jnp
lea
mov
xor
pop
loop
push
xor
ficoml
pop
test
jg
in
icebp
push
jge
push
mov
fldenv
push
popl
push
xchg
out
fistps
stc
inc
lods
sbb
dec
out
mov
and
dec
mov
jns
icebp
mov
addr16
cltd
mov
cltd
jg
ja
gs
xor
inc
sub
mov
mov
ljmp
xchg
pop
aaa
sub
mov
ret
int3
in
mov
xchg
fnstenv
mov
pop
or
fidivl
and
jo
pop
sub
push
cld
divl
incl
dec
jmp
test
incl
mov
push
adc
movsb
bnd
fdivr
push
cmpsl
cli
and
fisubs
jne
push
pushf
jns
adc
clc
jmp
in
lret
popa
jo
xor
out
ja
mov
xchg
or
push
sti
add
push
sbb
push
mov
jae
shrb
sahf
xchg
mov
mov
idivl
cmpsb
aaa
leave
dec
sar
mov
clc
mov
lock
lds
mov
dec
or
int3
enter
sbb
push
pop
sarl
popf
sbb
mov
aaa
movsb
arpl
test
mov
int3
dec
sahf
lods
int3
rcl
jns
mov
or
lahf
shrb
fs
push
jnp
cltd
data16
scas
jbe
adc
rolb
ss
jb
popf
mov
lock
ss
insl
test
mov
xchg
jbe
mov
dec
andl
adc
shll
sbbl
cld
and
dec
test
pop
add
arpl
dec
movsb
bound
ret
pop
cmpsb
fmul
lds
cmp
lahf
mov
pushf
imul
aaa
mov
addb
movsl
loop
out
add
push
in
into
stc
lock
popf
push
lret
hlt
mov
movsl
mov
pusha
and
repz
filds
sbb
test
jmp
fsubs
outsl
call
inc
cmp
mov
out
pop
add
jae
mov
dec
lea
mov
push
adc
dec
lods
call
or
xchg
cwtl
test
test
mov
inc
mov
fistpl
stos
pop
jno
and
bound
movsb
sbb
or
adc
adc
jns
call
icebp
rcrl
cwtl
sbb
daa
shll
push
scas
mov
dec
outsl
dec
mov
cmp
sub
xchg
sbb
mov
repnz
je
cmp
adc
inc
ret
fwait
jo
mov
popa
arpl
add
imul
bound
inc
mov
inc
es
pop
test
push
mov
daa
cltd
dec
sub
add
adc
jbe
outsb
mov
lahf
cmp
jecxz
mov
sti
and
jge
insb
out
or
js
lea
xchg
or
sarl
loopne
jecxz
mov
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
mov
movb
bswap
cli
int3
pop
add
or
xchg
test
jg
xchg
test
testb
add
iret
jno
mov
test
fs
sub
push
add
dec
inc
pop
pop
inc
mov
mov
imul
xor
lock
push
jb
inc
jge
ja
push
mov
mov
pop
add
out
test
ja
lods
icebp
cmp
and
aaa
popf
and
pop
shrl
imul
jg
pop
mov
add
bound
orb
jns
add
leave
xchg
cmp
popf
inc
sub
xorl
ss
mov
inc
mov
sarl
cmp
xor
push
xorb
pop
and
imul
repnz
insb
lahf
or
imull
sbb
cmp
addl
lds
xor
sbb
or
push
idivl
lret
dec
addb
or
add
and
insb
cld
cmp
push
xor
dec
push
pop
xor
ret
adc
shlb
pop
mov
push
inc
inc
or
jg
jno
pop
jmp
pop
std
inc
call
adc
ret
fidivs
pop
outsl
mov
xor
and
int3
xor
mov
repz
adc
aaa
xor
pop
test
insl
mov
xchg
in
push
jns
adc
xor
mov
mov
jo
or
push
hlt
rolb
popl
inc
popf
mov
adc
mov
cmp
int3
sub
test
test
bnd
sahf
add
aas
fnstenv
scas
daa
daa
fmul
xchg
push
cmc
mov
cmpsl
jns
outsl
mov
xor
inc
cmp
inc
dec
push
mov
aad
ret
rorl
mov
jmp
jbe
rcrl
jns
xlat
inc
aam
sbb
add
and
jecxz
stos
movsl
jp
outsl
jmp
mov
pcmpeqw
jno
sub
jbe
cs
shl
add
dec
cmpl
or
imull
jg
push
adc
mov
pop
and
jno
sub
adc
mov
cmp
xchg
mov
xor
inc
adc
popa
das
dec
jmp
cwtl
sub
jg
adc
add
cwtl
paddsb
pop
ret
imul
mov
cmp
xchg
stc
or
movsb
icebp
pop
xchg
hlt
orb
push
mov
jae
stc
mov
adc
outsb
lcall
push
jmp
arpl
jecxz
and
ret
mov
call
sub
mov
fs
ljmp
sub
mov
mov
test
xchg
notb
outsl
in
add
dec
scas
addr16
pop
fwait
push
push
xor
sbb
fcmovnb
push
mov
mov
cli
fnstcw
pop
rorl
cmp
ljmp
jle
in
loope
mov
push
push
xchg
movaps
sbb
xlat
sub
lods
mulb
and
cltd
dec
dec
stc
lahf
pushf
fisttpl
test
xchg
adc
xchg
pushf
inc
inc
jo
xor
cmp
out
lods
mov
push
sbb
push
aas
ds
test
int3
mov
xor
je
daa
lea
jg
movsl
mov
xchg
bound
mov
out
adc
in
enter
cmpsl
pop
loop
scas
out
sbb
lea
xchg
in
into
xor
cmpsb
bound
or
jno
xchg
daa
out
xor
ret
jmp
or
xor
hlt
out
push
dec
mov
adc
arpl
sub
aaa
imul
jb
aam
xchg
and
and
dec
leave
or
pop
and
nop
push
pop
and
push
out
lret
mov
add
sbb
inc
or
inc
aad
push
inc
cmpsb
jge
aam
cld
sub
andb
sbb
lret
fs
lock
cmc
push
outsb
lret
mov
xor
rclb
or
push
stos
fsubrs
mov
rcll
psubsw
imul
enter
pushf
call
inc
push
sub
stc
ret
shlb
dec
push
jae
jno
and
aam
inc
add
imul
jp
lcall
cmp
push
push
pop
dec
je
test
mov
pop
xchg
xchg
mov
js
and
cmp
and
dec
lret
sti
les
xchg
stos
xchg
test
imulb
jp
repz
xorb
mov
rep
or
shll
mov
aad
out
mov
mov
inc
mov
jge
jge
subb
fcmovu
mov
in
pushf
lcall
mov
sub
inc
lods
pop
inc
push
jp
mov
jecxz
or
and
pop
fldl
shlb
add
mov
imul
sub
cld
sbb
outsl
sub
pop
scas
inc
xor
gs
js
leave
fdivp
add
xchg
jno
jne
inc
mov
cmc
js
test
pop
adcl
mov
movsl
pop
pushf
jecxz
xchg
and
test
sub
mov
cmc
loopne
inc
pop
add
testl
lods
add
sub
push
ret
lods
ja
mov
xlat
jp,pn
call
adc
lds
outsb
sbb
imul
pop
out
into
and
andb
jp
movsl
fs
addr16
ljmp
fdivl
imul
xorb
test
mov
pop
mov
ljmp
adc
lcall
inc
cmpsb
enter
adc
ss
call
sub
xlat
cwtl
loope
xchg
pop
adc
mov
pop
fst
mov
pop
or
std
jl
sbb
pop
outsl
imul
sbb
es
nop
push
xorl
pushf
push
adc
out
fisubl
fmul
aam
mov
stos
and
pop
flds
jnp
pop
adc
dec
pop
mov
xchg
sbb
ss
int3
jl
dec
inc
mov
jg
popa
or
xor
imul
xor
and
pop
shlb
nop
sub
cld
je
jne
loop
jb
pop
mov
jns
fsubrl
andl
enter
imul
pop
mov
rclb
jbe
in
dec
jbe
pop
mov
out
cmp
loop
popf
iret
lock
ds
pushl
fadd
mov
jmp
int
mov
nop
sub
outsb
add
inc
jo
sub
and
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
adc
inc
mov
adc
mov
jle
dec
mov
xor
xorb
stos
lock
outsb
insb
gs
cld
enter
or
movsb
jl
or
lret
mov
mov
sbb
aas
sti
lahf
lcall
sub
hlt
pop
sub
add
mov
mov
sbb
add
icebp
jp
cmp
mov
inc
xor
mov
call
lea
inc
lds
loope
jo
jbe
lret
lret
hlt
push
xchg
rclb
jl
adc
lahf
daa
adc
mov
enter
mov
and
inc
jl
sar
lcall
mulb
loope
fadds
xchg
push
push
call
mov
xor
sub
ss
loop
push
movsb
pop
sbb
sbb
mov
sbb
orl
lods
js
pop
std
outsb
addr16
lahf
ficoml
out
fidivl
aam
pop
out
cmpsb
adc
out
pushf
jecxz
xor
mov
insb
xchg
sahf
add
data16
inc
cmp
test
jo
test
push
fildl
adc
cmp
jmp
jg
bound
fidivs
into
jo
fs
xchg
mov
dec
xchg
insb
xchg
inc
jae
cwtl
add
popf
cld
push
cmpsl
mov
movsl
imul
sbb
mov
sti
cmp
xchg
ret
cmp
sub
cmp
and
sbb
cltd
inc
orb
sub
leave
mov
pop
xchg
out
lods
mov
add
pop
repz
es
nop
out
je
lret
mov
out
cmpsl
loopne
mov
jbe
gs
divb
push
movsl
je
cmp
scas
lahf
out
sub
cmpsb
stos
or
rcrb
adc
pop
mov
mov
ja
fstpl
cwtl
push
xlat
pop
or
push
outsl
or
mov
inc
test
sbb
ret
neg
mov
mov
ja
subl
add
ljmp
sub
mov
cmp
push
aas
adc
xchg
pop
outsl
in
in
inc
sub
gs
std
dec
loope
mov
push
push
repz
cmc
out
and
cld
fs
adc
xor
cld
push
adc
sub
dec
das
dec
in
pushf
fidivl
adc
cwtl
mov
mov
call
jno
jmp
adc
cli
cmp
xchg
add
mov
ret
sbb
scas
fimull
inc
repz
sub
leave
ret
and
xchg
mov
xchg
es
iret
into
mov
rclb
sub
or
dec
ret
popf
and
rolb
sti
jle
jbe
mov
or
mov
test
ss
xor
cmpsl
jnp
sub
ret
pop
sub
mov
ret
bound
int3
bound
add
dec
sbb
movsl
push
scas
lea
dec
dec
xchg
fsts
mov
inc
and
mov
jp
mov
clc
and
je
aaa
iret
jne
imul
sub
or
rolb
adc
dec
out
mov
or
cmp
faddl
jno
mov
adc
ljmp
sbb
sahf
cmp
test
repnz
adc
pop
dec
inc
jle
xor
or
fwait
sub
pop
mov
es
movsl
dec
mov
and
push
add
test
xor
lret
sub
sbb
jns
test
inc
mov
mov
push
inc
xor
inc
out
add
mov
pop
rorb
or
add
js
mov
pop
mov
or
jno
add
mov
adc
and
js
dec
xor
arpl
xor
notb
rcrl
andl
mov
ss
stc
sub
std
xchg
inc
repz
insl
push
movsl
jecxz
out
mov
divl
lea
jo
mov
iret
and
push
mov
xor
xchg
inc
movhlps
mov
ret
pop
inc
dec
je
pop
test
sub
push
or
stc
adc
dec
in
gs
jnp
push
mov
inc
scas
mov
push
pop
and
or
xor
mov
dec
fiaddl
popf
add
scas
sti
add
pop
cmp
dec
sbb
inc
or
negb
sbb
mov
inc
stc
mov
add
fisubrs
push
pop
mov
insl
ljmp
ret
rcrb
xor
gs
push
cmp
inc
mov
les
push
and
fwait
shll
lods
or
pop
pop
inc
sahf
sbb
scas
xchg
add
push
pop
scas
notb
aam
and
mov
leave
push
cld
pop
int3
pop
sbb
xchg
jns
ja
fisttpll
imul
jge
aad
xor
xchg
fcompl
cmp
ljmp
dec
cmp
cld
mov
adc
pop
cltd
dec
loop
cmp
jbe
cmpsl
mov
je
insb
or
cmpsl
fstp
rcll
mov
int3
test
stc
into
add
push
jno
inc
hlt
pushf
sbb
shlb
mov
pop
dec
mov
aam
fnstcw
sbbl
jmp
push
push
iret
dec
mov
pop
pop
push
addr16
gs
test
mov
jmp
xor
imul
add
movsl
cmp
or
cmpl
sub
nop
xchg
cmc
inc
ja
mov
or
xchg
jb
mov
mov
cmp
xor
movsb
or
cltd
insl
mov
mov
push
push
pop
push
push
fistps
jl
movsl
iret
push
mov
rcrl
fmull
adc
push
hlt
jb
add
sahf
mov
push
in
scas
add
inc
xchg
pushf
lret
lock
cmc
mov
stos
adc
pop
sub
not
inc
in
pop
aam
cmpl
bound
inc
leave
scas
and
pop
out
into
cmp
xchg
and
jecxz
mov
sbb
xor
scas
push
lahf
in
or
lock
fs
jge
rcl
aaa
cmp
push
mov
or
shll
or
fistpll
mov
dec
loopne
add
adc
imul
and
mov
test
xor
sbb
push
pop
adc
xlat
or
jle
lret
andl
sarb
aam
fld
cs
rorb
fwait
adc
mov
leave
or
xchg
pop
test
fiadds
loopne
sti
xor
leave
cwtl
dec
adc
outsb
sahf
ja
cmpsb
sub
pop
pusha
movsb
and
adc
push
and
xor
jl
and
and
ja
shrb
push
into
mov
mov
pushl
lret
dec
jne
pop
jmp
rolb
jecxz
xor
jnp
push
mov
mov
xor
inc
in
xor
mov
xlat
cltd
push
pushf
fs
and
dec
int3
xor
fwait
add
jnp
jl
mov
xchg
sub
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
mov
xor
jno
fcoml
add
imul
pop
inc
jb
dec
dec
test
sub
jl
in
stos
int
pop
xor
mov
mov
stc
loope
stos
sub
xor
inc
sarb
lret
test
mov
or
addr16
sti
loopne
xchg
repnz
mov
or
movsl
pop
movsb
cli
int
int
insl
xor
add
pop
out
jb
pop
clc
js
mov
outsl
mov
ret
mov
popa
mov
rolb
lahf
jmp
xchg
call
adc
das
push
ljmp
iret
mov
sbb
mov
shrl
xlat
fmull
int
jmp
xchg
xor
lea
jp
int
clc
mov
popa
push
notb
add
mov
shl
push
mov
std
and
and
es
push
in
add
inc
jl
jns
sub
loopne
fs
xor
outsb
mov
in
adc
xchg
test
add
fwait
cli
fcmovne
dec
xor
adc
je
aaa
xchg
adc
add
mov
mov
pop
adc
dec
clc
dec
sub
cli
arpl
sbb
pop
pop
mov
fnstcw
pusha
imul
jmp
mov
push
adc
repz
fisubl
or
xlat
or
lret
lret
cmp
es
loope
mov
or
push
int
inc
lcall
pop
inc
insl
inc
mov
dec
xchg
out
or
lret
call
out
pusha
xlat
ja
sub
repz
in
jge
into
stos
mov
mov
jmp
adc
mov
sbb
lret
lret
int
pop
sub
addr16
test
aaa
testb
cmp
icebp
andl
arpl
add
mov
hlt
fwait
or
cmp
pushl
xorb
adc
imul
cmp
test
lock
xchg
andl
xor
push
jnp
mov
pop
ljmp
and
xor
rol
sub
rcrb
mov
sti
inc
cmp
push
xchg
pop
mov
enter
dec
mov
push
iret
jne
test
jg
enter
xor
aas
imul
out
aad
mov
lods
sub
push
mov
pop
mov
loope
in
push
pop
imul
scas
pushl
push
sub
movsl
movsb
jo
jmp
repz
dec
jecxz
xor
insb
sub
ret
int
add
ret
jg
loop
or
mov
mov
sbb
adc
and
sub
pushf
sti
xchg
in
mov
loope
push
sub
lods
push
dec
std
sub
jns
gs
fildll
xor
mov
jge
in
cwtl
dec
sub
movsl
imull
push
add
stos
test
jge
outsb
jns
adc
dec
negb
andl
cmc
jno
fnstenv
mov
adc
mov
je
inc
xchg
fcomi
mov
lods
test
or
lea
inc
sub
in
movsl
loopne
dec
ja
jmp
mov
enter
pop
jmp
dec
push
sub
insb
cmp
cld
data16
cli
mov
jp
fcomps
cmp
mov
stos
cmc
clc
out
mov
cli
or
pop
fisubrl
jmp
inc
shr
push
mov
dec
push
loopne
xchg
jge
repnz
fs
imul
xchg
sbb
andb
pop
int3
push
popa
jmp
fwait
mov
mov
push
sbb
addb
mov
leave
nop
fmul
lods
test
negl
push
sbb
sar
scas
addr16
sbb
lea
xchg
fisubrl
imul
push
adc
ja
adc
lcall
push
sbb
fnsave
rorl
pop
lret
leave
cmp
jl
ds
in
xor
lcall
ljmp
xchg
ds
push
fildl
add
inc
movsb
lods
mov
jle
cmpsl
mov
add
mov
pop
cmp
fstpl
add
cmp
mov
imul
stos
adc
sti
test
sahf
out
outsl
push
std
adc
pop
loopne
push
cmpsb
push
adc
add
mov
cli
push
inc
lret
cmp
hlt
call
fisubrs
jo
mov
jne
popa
cmp
mov
sub
jo
test
mov
jo
enter
cld
cmpsb
and
sub
out
dec
inc
movsb
mov
fwait
les
into
sub
dec
mov
adc
adc
scas
add
jns
jl
out
or
mov
sub
cmp
leave
jno
mov
and
sub
push
jne
lods
pop
scas
sbb
jnp
mov
std
fstpl
jns
int3
mov
jg
mov
sub
mov
mov
mov
lea
and
andl
mov
and
mov
repz
cmc
xor
sbb
push
mov
xor
out
ret
je
or
fadd
out
inc
and
ljmp
xchg
aad
cmpl
rcll
mov
mov
push
mov
lret
cs
iret
xor
loopne
fldcw
addr16
idivb
push
shrb
fidivs
add
jle
dec
stos
fadd
out
lea
inc
or
push
jg
add
sub
lds
lahf
or
xchg
je
movsb
xchg
call
mov
in
ret
inc
inc
inc
fcoml
adc
dec
cmpsl
push
inc
cmp
mov
movsl
icebp
pushf
in
dec
dec
je
lock
jmp
pop
mov
add
dec
mov
popf
sbb
orb
test
ret
push
je
cwtl
mov
cmp
mov
into
iret
inc
aam
lea
xchg
jge
push
rcr
pop
mov
mov
mov
scas
xchg
das
xchg
jns
xor
arpl
inc
push
cltd
shrl
dec
inc
mov
das
add
int3
aaa
les
arpl
push
int3
outsb
xchg
addr16
xchg
cs
sti
enter
test
fisttps
movsl
push
in
pop
ror
pusha
cmpsl
sub
xchg
xchg
outsb
data16
mov
pop
mov
and
mov
cmp
sbb
in
jbe
add
xor
in
fcoml
pop
lahf
icebp
sub
mov
cmc
pop
ret
neg
cwtl
inc
jnp
jo
clc
fwait
insl
roll
pop
hlt
inc
repnz
rcl
mov
fs
inc
scas
jb
pop
adcl
and
sub
dec
jo
xchg
mov
lds
in
pop
mov
xchg
mov
pop
jl
mov
xor
xchg
mov
sarb
xchg
rolb
adc
sbb
lcall
push
pop
inc
rol
push
mov
and
push
mov
enter
stos
mov
pop
aaa
adc
rcrb
lock
and
stos
das
or
idivb
xor
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
jno
dec
loope
push
jl
scas
and
les
fbstp
loop
leave
ljmp
stc
fwait
mov
imul
mov
adc
in
or
hlt
loopne
pushf
xchg
repz
jmp
hlt
and
int3
stos
dec
xor
shll
inc
sbb
xchg
lods
outsl
push
cmpsl
ds
xchg
mov
sub
in
fistpl
jp
or
jg
inc
mov
std
cmp
mov
fcom
fiadds
inc
movsb
ficoml
iret
cli
fisubrs
cmp
mov
pop
mov
sbb
inc
test
sbb
inc
bound
adc
int
xorl
adc
scas
jne
jbe
push
mov
or
jge
xor
je
pop
mov
mov
xchg
imul
push
pop
arpl
mov
sahf
daa
and
jns
aad
lahf
mov
pop
jmp
and
xchg
fstl
clc
or
call
clc
jecxz
jno
mov
nop
adc
cmp
adc
adc
or
pop
pusha
mov
ja
mov
cmc
add
hlt
add
ret
imul
clc
sub
or
xchg
movsb
inc
jne
pop
cmc
jno
movsl
rcr
xchg
sub
icebp
imul
scas
popa
clc
in
push
mov
xor
mov
fidivrl
fstl
push
mov
sbb
pop
sti
jecxz
cwtl
add
sub
out
and
orl
stc
lcall
lods
mov
movups
ret
pop
insl
mov
cmp
into
inc
pop
addb
pop
mov
or
jecxz
adc
lea
lahf
and
das
adc
pop
hlt
fcmovne
js
test
mov
es
mov
ss
insb
or
lahf
dec
pusha
or
push
push
and
or
out
mov
push
fadds
push
adc
cld
inc
xchg
push
mov
adc
lcall
adc
popf
lods
sub
ret
loopne
into
fwait
jns
scas
call
sbb
sub
aas
aaa
cmp
push
repnz
sbb
xlat
inc
lret
mov
adcl
sub
pop
imul
mov
scas
xchg
cmc
mov
fwait
xchg
dec
stos
in
pop
xlat
mov
or
cs
add
inc
imul
ficoms
xchg
idivl
movsl
addr16
rcrb
xchg
mov
inc
sti
inc
cmp
xor
ret
push
sub
in
fnstenv
jge
mov
or
fisubrl
outsb
addr16
sub
pop
hlt
pop
in
insb
xchg
out
loope
ret
lock
pushf
sti
dec
fcmovnu
std
jno
mov
pop
or
lods
adc
mov
int
pusha
clc
pop
and
add
adc
fstps
sbb
daa
sbb
cmp
in
mov
leave
cmp
adc
mov
dec
cmpsb
pushf
xchg
add
cvtps2pd
in
outsb
fstpt
fdivr
cmp
xchg
adc
xchg
adc
cltd
dec
or
push
mov
mov
cwtl
xchg
pop
into
movsl
or
adc
movsb
daa
arpl
pushf
ret
mov
xlat
jae
ds
ds
add
aaa
xchg
jle
das
movsl
roll
fs
call
pusha
sbb
out
jle
pop
and
pop
mov
adcb
mov
pop
dec
and
cld
lds
mov
push
nop
test
mov
icebp
mov
xchg
inc
mov
sbb
cmp
ss
jbe
mov
divl
lock
jp
sbb
rcl
stos
xchg
cmp
ja
pop
cmp
bound
mov
cltd
add
adc
insl
repnz
test
outsl
sbb
pop
fisubs
xor
xor
scas
outsl
fwait
arpl
jmp
push
std
pop
add
and
and
nop
push
ret
inc
repz
fstl
cmpsb
xchg
das
shlb
stos
cmp
pop
das
mov
or
sub
adc
dec
inc
stos
mov
dec
test
add
hlt
notl
cmp
sbb
xchg
jnp
test
mov
popf
mov
ffree
xor
mov
loopne
fisttpl
and
das
jg
lcall
xchg
jno
inc
mov
lds
pop
decl
lret
outsb
sub
andl
inc
cs
lret
in
xchg
sbb
add
push
dec
nop
mov
adc
inc
or
jae
test
lock
test
clc
cld
inc
lods
jmp
mov
jb
inc
push
jmp
adc
ljmp
fisubl
and
addr16
fwait
lret
imul
ret
dec
mov
int
int
jp
sbb
hlt
dec
or
and
out
pop
faddp
dec
sub
sbbb
push
movsb
sub
xor
bound
sub
xor
daa
cmp
notl
xchg
dec
imul
fwait
enter
pop
push
leave
scas
sub
scas
xchg
jecxz
and
ret
jl
ret
add
ljmp
aam
or
lahf
xchg
sbb
add
and
mov
pop
adc
jbe
rcll
roll
pop
sbb
cmp
push
mov
insb
fildll
jg
icebp
iret
aaa
push
fsubrs
mov
xchg
sub
xor
mov
fldl2t
fcmovnu
jae
cltd
hlt
cmp
pop
inc
push
jl
push
jns
test
xchg
dec
jle
dec
inc
pop
rorb
sub
xchg
pop
ret
in
sbb
ds
mov
cmc
inc
fildl
or
cmp
mov
stc
fsubr
mov
pop
fs
or
or
int3
mov
mov
mov
fcomi
mov
fnstcw
add
sbb
ljmp
lea
and
lahf
daa
mov
cmp
dec
stc
jne
adc
lret
imul
insb
inc
sbb
out
or
jns
xor
pop
outsb
gs
sahf
xorl
addb
cs
xchg
xlat
xchg
inc
mov
addr16
scas
sbb
mov
jae
inc
xchg
xchg
repz
cld
pop
cmp
lods
sub
and
push
orb
pop
ds
dec
loop
les
push
sub
xor
mov
mov
popa
inc
pop
inc
dec
or
loopne
pop
push
lods
shll
xchg
dec
loope
rclb
push
inc
adc
lret
fcomps
jne
imul
inc
xlat
push
pusha
cmp
ret
dec
lods
insl
lods
ret
xchg
cmp
fsubl
mov
adc
jge
mov
or
cmp
negb
xchg
xor
pop
mov
or
call
std
and
jb
jp
iret
mov
mov
les
xor
test
iret
insb
jo
cmp
mov
fs
fisubrl
rcl
pusha
fidivl
loop
shrl
jmp
sub
shll
arpl
out
push
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
or
mov
add
dec
add
iret
sub
stc
xchg
cmc
js
dec
dec
aam
lds
dec
dec
sti
xor
xor
in
mov
hlt
push
test
ds
fldcw
adc
mov
adc
fstl
popa
icebp
mov
iret
ja
inc
dec
adc
xor
cltd
fwait
mov
mov
je
aam
and
dec
cmp
mov
fcmovnb
mov
fs
cmp
psraw
sbb
cli
stos
xor
daa
jle
xor
push
push
and
sbb
add
xchg
into
add
scas
ficoms
lods
sbb
push
xchg
pop
or
arpl
lret
cmp
popf
adc
xchg
leave
loope
push
jnp
ds
mov
mov
xlat
jle
jno
pusha
insb
push
jno
loopne
lock
sbb
repnz
lcall
push
xchg
mov
jnp
xchg
insb
into
push
inc
cmp
int3
jns
daa
int3
loopne
clc
call
push
fwait
mov
data16
or
sti
cld
mov
jl
in
rorb
xchg
xchg
lcall
stos
sub
loop
mov
push
adc
add
adc
repz
gs
ljmp
stos
jno
lcall
lret
bound
mov
add
pop
icebp
sbb
shlb
scas
add
orl
inc
push
gs
push
sub
inc
enter
stos
jl
mov
inc
movsb
shlb
xchg
aam
inc
test
mov
xchg
hlt
sarb
xchg
mov
and
xchg
add
and
scas
push
adc
jl
pushf
adc
cmp
add
mov
pop
test
or
inc
cli
sub
mov
adc
pop
xor
mov
aad
daa
movsb
mov
jge
and
test
lds
loop
in
sub
mov
mov
out
insl
and
jae
and
mov
ja
aad
adc
xchg
arpl
out
ss
sbb
sub
adc
cltd
stos
out
nop
jno
sbb
fiaddl
int3
nop
out
pop
sub
sarl
sbb
adc
mov
movsl
pop
mov
xorl
sub
inc
imulb
sbb
mov
mov
out
into
lahf
fsts
adc
jge
and
dec
fldcw
rcr
or
js
mov
cmp
aad
sbb
inc
add
js
loopne
or
subl
subb
cmc
sbb
ja,pn
inc
cmp
insl
inc
rcrl
dec
mov
mov
or
rep
das
inc
push
loopne
or
sarb
bound
push
movsl
add
call
sub
jge
pop
jbe
xchg
dec
sub
in
cmp
mov
test
ja
xchg
stos
add
add
out
mull
and
test
or
inc
mov
cs
dec
cs
cli
cwtl
or
pop
mov
sub
ror
jo
jl
or
cmpsb
out
lret
cmp
loope
and
mov
ret
lods
mov
mov
ret
push
mov
sbb
mov
push
cmp
cmp
push
push
into
outsb
xor
cmpsl
xor
add
cmpsl
mov
rorb
jnp
add
fstpl
pop
adc
mov
sbb
add
xor
bnd
push
test
out
push
scas
pop
imul
ljmp
into
outsl
mov
insb
cmp
pop
and
adc
popf
imull
xor
inc
lret
xor
ja
shr
add
sbb
sub
fcomip
push
dec
pop
outsb
pop
push
mov
jbe
add
mov
faddl
pushl
xchg
inc
adc
pop
loope
inc
jb
call
sarb
das
and
push
jmp
cmp
sub
imul
cmp
jp
orl
push
xlat
mov
mov
sub
push
testb
push
dec
mov
and
ret
jae
adc
mov
movsl
cmpsb
test
roll
sbbl
jnp
pop
pop
in
sub
sbb
test
stos
fisubrs
loope
scas
js
and
sub
lahf
or
jo
sti
cld
add
pop
dec
in
mov
or
adc
insl
inc
mov
int
cmp
cmp
testl
mov
loope
fcoml
push
jb
mov
test
gs
jae
repz
int3
mov
push
dec
insb
pop
xorl
ljmp
and
into
shl
add
jnp
mov
int3
adc
ficompl
push
insl
dec
lcall
dec
insl
and
out
jno
jnp
pushf
data16
out
mov
adc
jbe
lret
int3
inc
loop
aad
inc
fstps
push
push
stos
repnz
ss
add
mov
ss
out
iret
popf
cmp
fnstenv
jbe
lret
lret
xor
imul
fnstcw
pop
lods
shl
repz
xchg
inc
push
mov
inc
mov
mov
xor
dec
or
jo
mov
push
mov
lret
dec
mov
out
inc
in
mov
out
dec
cmpsl
call
mov
mov
xor
sub
and
mov
add
outsl
jo
sbb
adc
inc
xlat
test
adc
push
mov
xor
mov
mov
cmp
xchg
iret
jb
iret
jnp
imulb
sbb
leave
out
pop
aam
xor
in
outsb
scas
cltd
loop
pop
in
les
push
xor
or
aam
sbb
imul
mov
inc
cmc
cmpsl
sbb
rorl
push
fdivrp
repnz
call
dec
cmp
xor
sub
jmp
push
ljmp
lods
push
popa
dec
sbb
jg
sar
xor
int3
cmp
js
mov
lea
jno
mov
cmovge
popl
mov
lock
add
outsl
das
sub
pop
fs
insb
bound
adc
int3
int
xor
adc
popa
int
shrb
pop
mov
pusha
arpl
lock
cmp
test
imul
jo
and
cs
xchg
sub
mov
xchg
sbb
mov
sbb
mov
enter
pushf
daa
sahf
adc
dec
hlt
jg
subb
aas
repnz
push
test
lret
adc
lcall
lahf
adc
lods
add
in
xor
pop
mov
push
std
cld
push
popf
push
xchg
add
cltd
dec
bound
mov
sbb
popa
int3
mov
xchg
ja
clc
cmpb
jae
cltd
xchg
lea
arpl
mov
aas
aad
xchg
sbb
cmpl
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
xchg
stos
dec
mov
enter
or
test
mov
mov
sub
scas
sub
repz
xchg
pop
cmp
pop
sub
add
mov
sub
lahf
pop
mov
cmp
xchg
mov
xor
xor
ja
std
scas
notb
inc
adc
xchg
push
fldcw
and
ja
push
sar
outsl
rorl
shlb
or
in
jb
push
adc
repnz
sub
loopne
stos
ficomps
cltd
fidivs
je
leave
mov
addr16
scas
push
xchg
sub
enter
gs
lret
lods
mov
and
fisubrs
jne
enter
fwait
xchg
sbb
mov
add
out
adc
jnp
pushf
mov
mov
popa
adc
ss
test
jns
imull
in
cmp
je
es
daa
jmp
les
cli
clc
sub
mov
rcr
insb
xor
call
sbb
fldenv
jnp
fidivrl
adc
cmp
rorb
call
out
xchg
insl
xor
fisttps
insb
cltd
add
cmp
cmp
or
fptan
xchg
push
cmp
push
adc
dec
das
cmpl
mov
xor
jmp
insl
or
lods
idivb
call
out
jge
push
mov
shll
push
xchg
inc
ss
insl
sahf
xorb
std
xlat
push
mov
lds
ss
dec
out
stos
or
into
mov
adc
in
movsl
xchg
fidivs
add
inc
xor
push
mov
inc
pop
cmpsl
ret
xor
lods
cmp
and
or
bound
and
das
scas
jb
das
inc
xchg
dec
outsb
lret
jg
mov
fistpll
ljmp
adc
inc
pushf
push
nop
call
push
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
