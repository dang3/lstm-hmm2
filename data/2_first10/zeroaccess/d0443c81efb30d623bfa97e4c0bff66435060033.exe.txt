push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
push
ja
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
cmc
outsb
lret
xor
leave
fildl
and
negb
es
push
sbb
roll
mov
jl
dec
hlt
mov
ja
mov
out
mov
jmp
mov
inc
fidivl
nop
jne
insl
cmp
mov
sbb
xchg
jno
sarl
scas
je
sub
adc
test
inc
psubusb
cmp
or
inc
mulb
fsubl
test
hlt
push
shll
pop
ret
lock
iret
dec
inc
mov
test
pop
mov
and
add
sbb
pusha
loopne
xchg
lcall
cmpsb
call
mov
fisubrs
xlat
add
daa
cmp
pop
jle
sbb
or
mov
cmp
pop
push
je
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
pop
and
jle
jg
jle
inc
push
popa
mov
inc
adc
xchg
scas
pop
pushf
lds
cmp
lea
lcall
in
add
and
sub
pop
outsb
leave
stc
out
addr16
push
out
jns
rcll
xchg
in
xchg
mov
cmp
or
aad
or
fdivrp
xlat
jnp
mov
sub
imul
mov
inc
dec
mov
inc
stc
hlt
or
jge
ret
test
fnsave
fsub
jne
and
mov
and
mov
mov
je
pop
clc
lcall
mov
dec
repz
aaa
adc
dec
cld
popf
mov
scas
mov
adc
sub
mov
push
lcall
mov
mov
and
pop
fsubr
sub
int
mov
dec
pusha
and
pop
test
or
mov
lahf
lods
push
and
loop
das
mov
aam
xchg
xlat
cs
adc
loopne
test
inc
int
lods
sbb
repz
into
into
mov
push
shr
adc
test
sbb
sbb
or
cmp
jae
jae
dec
push
outsb
scas
xor
dec
inc
fdivrp
scas
bts
jnp
pop
ja
or
push
xor
mov
inc
push
scas
push
add
jne
inc
dec
sti
loopne
or
insb
mov
dec
pop
sub
incb
mov
pushf
cmpsl
rorb
ss
add
neg
jmp
cli
fcompl
jno
cmp
and
jge
jle
jg
jle
hlt
stos
out
push
int3
add
int3
jp
pop
jne
dec
in
rorl
rorb
mov
inc
mov
cmp
or
ljmp
jmp
jge
cltd
mov
movb
sbb
xchg
ret
add
add
jmp
ss
popf
stos
addl
movsl
sarb
push
incl
adc
in
mov
pop
orl
std
nop
mov
aaa
shll
dec
inc
mov
pop
inc
cmp
pop
jge
mov
and
xor
int3
imul
xor
test
nop
imul
addr16
popf
neg
testl
push
iret
pop
inc
test
push
sbb
or
and
out
mov
test
sub
jge
in
fcmovu
sub
mov
lock
or
lods
jne
xor
fcoms
xor
in
xor
pop
jp
mov
xchg
xor
ja
out
incl
addr16
lods
push
jnp
iret
jbe
jg
pushf
pop
addr16
cwtl
dec
ret
adc
xor
xor
pop
add
loopne
cmp
lea
sbb
jns
call
xchg
mov
pop
decb
faddl
cmpsb
dec
in
lcall
in
test
mov
mov
or
and
in
cmpb
jo
pop
inc
mov
icebp
add
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
push
jo
jp
jle
jg
jle
mov
mov
loope
mov
add
lods
jle
les
jle
add
out
fwait
sbb
loopne
xchg
sub
add
popa
icebp
push
stc
xchg
fs
jl
mov
mov
cmp
jbe
inc
mov
add
frstor
stos
sbb
cmp
or
lods
push
in
mov
aas
icebp
sub
and
fstpt
mov
jg
fisttpll
or
jecxz
lcall
and
sti
clc
mov
sub
push
dec
mov
ljmp
mov
jp
test
stos
mov
scas
xchg
mov
sub
cmp
js
mov
pop
xchg
or
hlt
xchg
xchg
jge
data16
push
push
aad
cwtl
push
xchg
cmp
dec
bound
dec
sub
ror
mov
test
sbb
aad
fidivs
sahf
jecxz
in
popf
stc
mov
xor
addr16
mov
cmp
mov
mov
jno
mov
sub
pushf
xor
inc
sbb
call
pop
mov
push
cwtl
pop
mov
and
fimuls
add
imul
in
xlat
adc
and
sbb
xchg
mull
aas
push
mov
lds
xor
ljmp
inc
push
outsl
sub
inc
pop
mov
repz
pushf
add
add
jmp
push
dec
dec
jns
pop
push
js
jle
jg
jle
fcoms
jns
pop
shll
ja
cltd
add
add
jno
jnp
push
sub
pop
inc
movsb
jl
aam
mov
call
cmp
cwtl
jae
or
cs
xchg
frstor
sbb
mov
shlb
lock
pop
mov
gs
dec
cmp
mov
data16
out
xchg
inc
test
adc
xchg
ficoms
je
sbb
xchg
sub
pop
nop
lods
add
arpl
pop
and
movsb
inc
into
lcall
add
sbb
mov
ljmp
push
js
std
xchg
movsb
in
inc
mov
roll
icebp
jne
jne
and
aaa
mov
pop
mov
jmp
xchg
push
xchg
or
iret
inc
inc
dec
std
out
lods
mov
pop
subl
ja
nop
aaa
pop
push
lret
mov
jne
scas
test
pusha
aaa
push
pop
push
push
enter
sbb
inc
data16
mov
jae
mov
aam
adc
mov
lret
push
or
add
pusha
mov
ss
andb
stos
push
js
call
dec
dec
popf
jge
sub
pop
push
stos
stos
lea
imulb
push
inc
or
add
xchg
add
or
outsl
je
sub
std
mov
mov
cmpsl
mov
dec
push
iret
and
lea
notl
cmp
fwait
pop
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
xchg
jle
jg
jle
ret
leave
add
flds
xchg
cmpb
jnp
bound
mov
dec
mov
xor
stc
fistps
jg
inc
or
testb
xor
leave
or
int3
mov
jecxz
daa
lret
xchg
hlt
inc
sbb
iret
pop
and
std
mov
mov
push
aaa
cmc
and
xchg
jge
push
xchg
mov
fildll
adcl
cmp
sub
gs
cmp
jnp
sub
jmp
push
mov
es
xlat
and
xchg
inc
scas
out
or
cmp
pop
popf
lret
adc
jl
pop
sbb
stos
xchg
leave
pop
ret
fsubl
scas
loope
inc
das
pop
dec
mov
pop
mov
dec
into
sbb
push
xchg
mov
cmp
hlt
rcr
lock
movsl
aad
pop
adc
ja
mov
cmp
sbbb
sub
pop
popa
popf
out
xchg
cmp
clc
pop
lods
jae
mov
fists
jg
fsub
popa
mov
ljmp
mov
bound
roll
adc
cmp
push
pop
xchg
push
push
jo
pop
outsl
int3
in
fdivr
xor
sbb
cmpl
or
aas
inc
mov
enter
dec
pop
imull
andl
aas
scas
jg
cwtl
fidivs
stos
mov
lahf
inc
das
sarl
fmuls
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
lahf
push
pop
jle
cli
jg
jle
cltd
stos
mov
int3
arpl
cmc
ja
ret
mov
dec
pop
iret
outsb
fdivrs
mov
test
cmpsl
and
stc
xlat
and
push
aas
jmp
mov
dec
lret
gs
cmp
or
shlb
cmp
pop
adc
lret
stos
and
pusha
mov
xchg
dec
lods
pop
out
xchg
aas
inc
lcall
mov
push
loope
jns
add
add
xlat
cmc
mov
mov
sbb
scas
xchg
clc
mov
and
loopne
sarl
out
add
or
jl
sti
shr
test
in
push
cmpsb
xor
jo
jp
mov
fdivl
in
nop
or
pop
out
int
decl
pop
fisttpll
lods
lds
mov
addb
mulb
fmull
inc
shrl
daa
jb
jg
int
mov
lods
enter
cmpsl
jmp
xchg
push
pop
xor
pop
cmpsb
push
pusha
push
xor
sub
dec
and
inc
jecxz
adc
sbb
sarl
outsl
mov
sahf
dec
sub
loop
sbb
pop
call
int
sub
rorb
push
mov
sahf
push
or
inc
inc
dec
xor
pop
pushf
call
ljmp
add
add
call
inc
in
movb
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
pop
loopne
mov
in
adc
daa
mov
test
cltd
push
jmp
shll
sub
in
ljmp
negb
adc
mov
pop
xor
jmp
flds
addr16
add
dec
pop
je
ja
lds
lea
xor
pushl
inc
jle
mov
stc
push
pusha
push
int3
mov
rclb
add
lods
icebp
sub
cs
sbb
jl
and
xor
fisubrs
pop
and
fsubp
pop
pop
cmpsb
stc
out
leave
imul
jne
test
mov
bound
push
mov
lods
dec
mov
mov
and
sahf
cmp
cmp
aaa
test
inc
cmp
shl
mov
xchg
push
mov
lea
xor
jae
xor
lods
mov
sbbb
push
dec
dec
stos
outsb
adc
into
sbb
mov
jae
inc
iret
and
and
aam
mov
inc
push
jmp
leave
cmp
js
jo
call
cmpb
xchg
sbb
xor
movups
int
pop
inc
inc
mov
fs
adc
cmp
mov
daa
push
pop
add
addr16
cmpsl
aas
in
scas
mov
imul
lods
mov
out
rcll
popf
xor
or
add
repnz
push
mov
add
jmp
cmc
dec
and
jno
push
mov
adcl
push
add
cli
jg
jle
test
aaa
xchg
xchg
test
daa
cmpsl
dec
shll
pop
and
gs
sti
stc
je,pt
xor
fcompl
pop
test
negl
in
xlat
cmp
je
mov
jbe
jb
inc
push
addr16
add
mov
xchg
movsl
lea
mov
ror
jle
in
inc
inc
mov
push
xor
sub
into
das
sbbb
imul
negb
mov
add
shrl
xor
mov
xchg
out
sbb
push
pop
leave
aad
call
sbb
mov
sub
movsl
mov
cli
mov
pop
sub
ljmp
fstpl
mov
pop
lea
pop
xchg
or
cli
test
mov
xchg
call
push
inc
mov
shrl
dec
xchg
dec
mov
call
data16
sti
js
cld
mov
loope
pop
sbb
stos
cmp
push
jecxz
insb
mov
rolb
inc
push
dec
cmc
pusha
jg
jp
rol
mov
imul
and
aam
mov
cmpsb
test
enter
or
push
fcomps
xchg
jl
shrb
popf
jl
jne
repnz
aam
rclb
cmp
inc
pop
jbe
lods
adc
dec
push
movlps
xchg
dec
in
mov
mov
and
incl
pop
push
cli
imul
jg
mov
sub
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
out
add
lcall
jle
je
jge
rcl
cli
enter
xor
fists
insl
outsl
and
jmp
cmpsl
mov
inc
xchg
aam
pop
xchg
push
mov
jge
pop
xorb
das
and
push
xchg
mov
cmp
pop
movsb
xlat
mov
repz
mov
jo
aam
fiaddl
mov
mov
rcrb
push
loope
inc
push
sbb
in
adc
inc
cli
in
and
sub
cmp
push
ret
sbbl
mov
lret
sahf
enter
int
clc
or
roll
cmp
mov
push
or
or
test
inc
push
and
aad
mov
cs
adc
mov
movsl
test
cmp
push
cmp
dec
push
mov
mov
fnstcw
cmp
mov
outsl
clc
push
add
mov
jle
mov
test
or
daa
mov
jno
sub
and
fwait
push
mov
shll
and
addb
std
add
mov
sub
inc
fucomp
stos
or
jecxz
adc
adc
ja
jb
mov
pop
cmp
cld
icebp
incl
clc
fistpl
in
les
cmpsb
in
ds
out
xor
call
or
dec
repz
push
sub
imul
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
daa
cmp
aaa
add
cli
jg
jle
dec
bound
xlat
aas
push
add
mov
sub
fs
mov
pop
in
jecxz
testl
fsts
mulb
fwait
pop
in
or
mov
cmp
imul
jae
movsb
mov
push
int
std
mov
es
add
xchg
iret
fdivr
cmp
inc
loop
out
ss
push
push
inc
mov
sbb
repz
lcall
sbb
jnp
cmpb
arpl
daa
fsubp
fidivrl
xor
popf
loopne
lret
push
daa
mov
test
jle
inc
cmpsl
and
mov
inc
xor
xlat
into
mov
std
push
xchg
fnstenv
std
jno
ss
dec
shl
cmp
mov
imul
mov
and
orl
pop
xchg
cmp
adc
in
fucomp
imul
jge
lret
push
scas
mov
imulb
lods
fnstenv
pusha
pusha
adc
das
cmp
movsb
pop
jmp
test
lds
pop
shrb
adc
mov
dec
sub
push
adc
push
add
ficoms
adc
jg
adc
lea
add
out
mov
stc
jo
mov
test
iret
addr16
test
in
nop
je
les
bound
jp
pop
mov
and
fxch
sbb
ret
pop
lahf
clc
pop
cmp
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
xchg
jle
cli
jg
jle
dec
loope
call
or
dec
and
sub
cmc
push
sbb
mov
data16
movsb
pop
test
fists
sub
stos
push
mov
int3
in
or
push
push
xchg
and
xor
test
xor
mov
imul
pop
jae
pop
arpl
add
cli
cmp
xor
sub
jge
pusha
and
mov
popf
fsubl
inc
xorl
fcoms
sbb
aam
and
addr16
mov
aaa
jmp
mov
clc
fisttpl
inc
dec
and
fmull
mov
add
dec
mov
fistl
out
lret
stc
incl
shrb
cmp
inc
lock
sub
push
xor
jg
adcb
sbb
mov
pusha
sbb
stc
bound
jae
mov
stos
sbb
enter
cmp
pop
lret
pop
sbb
cmpsl
pop
fistpl
loop
addb
and
imul
inc
mov
daa
scas
rolb
push
movsl
add
loope
aad
or
scas
sti
inc
and
insb
mov
jns
mov
repnz
add
pushf
pop
adc
orl
mov
mov
int3
hlt
cltd
lea
test
test
pop
pop
adc
cmp
rcrl
dec
das
mov
mov
dec
cmp
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
cmc
dec
add
jle
jg
jle
sub
inc
clc
push
dec
and
mov
dec
mov
jl
test
jb
popf
add
xchg
fstpt
addr16
fidivrl
insb
pop
and
cmc
mov
test
dec
xor
inc
adc
sti
fldl
xlat
dec
sbb
orl
inc
sbb
ret
popf
add
mov
dec
stos
xchg
or
and
into
adc
mov
push
scas
add
inc
call
cli
sub
adc
inc
xor
push
lods
cmp
lret
std
cmp
pop
xor
cmp
xor
jae
insb
rclb
in
lods
dec
rorl
adc
dec
dec
cmp
lahf
xor
ja
add
jno
jle
pusha
cltd
mov
leave
mov
push
lret
cli
mov
mov
enter
insl
std
sub
cmpsl
addr16
fdivl
shrb
addl
push
dec
cmpsl
lret
sbb
cmpsl
adc
mov
ss
adc
rolb
lret
sub
or
repz
push
and
dec
push
push
sub
sub
ja
inc
push
mov
or
xchg
test
sbb
lahf
ficomps
jl
pusha
loop
ret
fsubl
push
loop
cmp
fisubs
adc
sar
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
sbb
mov
jle
jg
jle
cli
sbb
jl
push
cmpsl
rcrl
mov
sti
jge
xor
push
mov
pop
fstpl
jne
sbb
push
and
lret
and
test
or
xlat
imul
jnp
cmp
mov
xchg
dec
mov
xor
dec
push
pop
int3
adc
lahf
or
push
pop
sbb
jo
or
lea
push
enter
movsb
push
out
xchg
inc
ret
inc
pop
mov
and
fwait
jp
add
lods
xor
movl
ja
out
imul
xchg
les
xor
lcall
mov
adc
xlat
adc
sbb
sub
push
push
orl
mov
je
push
mov
sub
or
xchg
push
aaa
and
pop
add
rorl
iret
cmp
xchg
cmc
push
aaa
and
jno
sbb
leave
pop
in
and
test
mov
and
ljmp
inc
xor
cmpsl
xlat
mov
mov
lock
jg
movsl
mov
mov
pushf
mov
xchg
in
hlt
mov
xchg
ret
sbb
dec
jl
addr16
lock
inc
jo
or
scas
jb
shrb
sub
cmp
sbb
dec
push
dec
mov
jo
bound
rolb
rorb
sub
add
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
xchg
sar
or
cli
jg
jle
or
xor
sbb
inc
push
in
rcrl
inc
je
adc
xor
xchg
stos
push
adc
cmp
rcr
ss
and
ja
mov
fcmovnb
inc
jle
pop
xchg
pop
ljmp
pushf
jl
mov
in
mov
mov
test
jae
shlb
test
xlat
cmp
leave
push
jae
ds
mov
push
loope
pop
stos
add
ret
addr16
dec
popa
jl
outsl
fbstp
loop
mov
adc
les
imul
inc
mov
jb
test
mov
mov
sub
jb
dec
lods
pushf
ds
or
cmpsl
mov
mov
mov
mov
jno
loopne
mov
pop
add
push
xchg
sub
leave
adc
adc
xchg
aaa
or
jne
xchg
mov
jb
dec
out
jmp
aad
sub
push
jle
mov
dec
test
sub
adc
mov
jp
mov
movsb
loopne
pop
mov
adc
out
mov
cmpsb
add
imul
xchg
loopne
mov
inc
popl
push
lcall
jb
or
mov
stos
inc
js
negl
daa
xchg
fstpl
fnsave
gs
pusha
adc
jno
sbb
daa
data16
aaa
pushf
fwait
orb
outsl
movsl
inc
into
ja
adc
dec
and
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
or
mov
jle
cli
jg
jle
mov
sbb
mov
dec
pop
int
stos
test
adc
mov
jge
inc
jns
push
out
fsubr
faddl
push
mov
dec
ds
stos
fs
xchg
js
ror
out
dec
testl
les
pop
jb
lcall
insb
fcomip
fsubl
lods
sahf
repz
addr16
outsb
mov
bnd
dec
lea
push
jge
outsl
jmp
orl
and
mov
ret
sub
outsl
lret
jns
cmpsl
or
inc
leave
add
mov
cmp
xchg
xchg
sbb
lods
cmc
enter
or
mov
out
loopne
pop
adc
aad
or
movsl
imul
pop
aad
jmp
subb
ret
add
ljmp
mov
or
fcomip
mov
cmpsl
enter
cld
jb
pop
adc
popa
mov
in
imul
dec
add
xchg
cmpsl
sub
fyl2xp1
sti
xor
mov
out
aam
rcr
fdivrs
lods
jne
or
in
test
nop
out
pushl
add
and
mov
stc
clc
repz
jle
adc
rorl
pop
in
xor
push
adc
adc
mov
lret
leave
out
lds
inc
ss
jb
xchg
xchg
stos
xor
sub
insl
and
sbb
inc
dec
lods
mov
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
es
ds
jle
cli
jg
jle
nop
int
pushf
mov
and
cld
arpl
mov
jns
jo
iret
insl
inc
scas
cs
repz
add
sbb
in
jo
xor
rolb
or
popa
pop
in
push
jno
xchg
lret
fisttpll
inc
mov
fnstenv
mov
add
mov
dec
cli
jb
cmc
sbb
lods
fstps
and
prefetchnta
dec
icebp
mov
jecxz
and
cmp
push
pop
shrl
cwtl
xchg
inc
jl
addl
out
sahf
jge
jmp
int
push
lds
mov
rcll
and
sbb
xchg
pop
jne
lock
insb
mov
sti
sti
loop
mov
push
movsl
sub
aam
pop
push
adc
push
idivl
ud2
testb
inc
movups
es
pop
out
sbb
jo
clc
mov
mov
pusha
or
insl
cmp
add
ds
popf
and
jmp
xor
mov
orb
mov
bound
aad
daa
in
inc
cmp
mov
xchg
je
jno
hlt
fldl
lods
fldenv
imul
insl
inc
aas
adc
mov
push
cmp
add
repz
shll
fdivrl
daa
mov
or
das
inc
push
sbb
in
daa
mov
ficompl
in
jmp
loope
call
mov
mov
add
pop
jmp
add
mov
adcb
mov
jg
jle
cmp
adc
xchg
fistl
cmpsb
pop
iret
fwait
sar
insb
fs
shlb
mov
dec
rcl
push
scas
push
insl
fstpt
mov
fcmovnb
and
ret
cs
ret
xchg
mov
scas
cmp
movsl
mov
test
aam
jno
ds
sbb
mov
lds
movsb
mov
dec
jae
lock
sub
jecxz
rcll
lret
insb
aaa
mov
pushf
das
dec
clc
and
jns
cmpsb
rorl
les
lods
lock
push
es
push
fldenv
inc
cmpsl
loopne
xchg
push
mov
lcall
cmpsb
dec
cltd
jbe
pop
cs
mov
jbe
sti
mov
mov
ja
and
sbbb
mov
je
jl
enter
ficoml
dec
lock
sub
pop
xchg
cwtl
test
or
bound
cli
cmpsl
or
inc
rorb
in
or
mov
xorb
push
stos
cs
cmpl
addr16
mov
les
push
sub
adc
or
jnp
push
cmp
loope
repnz
test
pop
shll
jo
loop
fcmovu
or
nop
dec
inc
test
add
adc
push
xchg
cli
int
pushf
lods
dec
pop
or
mov
xor
add
xor
mov
popa
adc
out
dec
mov
les
jg
lahf
out
fs
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
mov
adc
jle
xchg
sub
push
and
mov
shrb
xor
or
pop
mov
loop
mov
adc
bound
jo
add
xor
mov
into
sub
lea
add
jmp
cmp
js
popf
xchg
imul
negb
iret
jp
out
mov
mov
inc
je
dec
jmp
jmp
xchg
mov
sub
rorb
lret
adc
jmp
int
cmc
out
add
mov
xchg
dec
mov
pushf
inc
push
mov
adc
lods
mov
add
mov
cmp
xchg
shl
test
insb
push
repz
and
xchg
and
dec
std
dec
mov
addr16
icebp
dec
push
bound
dec
push
repnz
mov
dec
cmp
add
loop
into
and
iret
add
cmc
movsb
std
lret
jb
fcoms
inc
ss
notb
outsl
mov
imulb
test
lahf
mov
lods
ret
push
lock
pusha
ret
enter
adc
pop
scas
mov
mov
aam
xor
movsl
mull
stos
cmc
xor
xor
mov
shlb
in
xorl
mov
adc
push
mov
cmp
fs
test
std
in
stos
and
lods
call
test
dec
js
sub
lock
jb
into
nop
xor
pop
push
pop
xchg
call
pop
xor
cmp
add
vpmulhuw
cmp
fstpt
stos
subl
popa
fdivs
pop
cmp
add
dec
fisubs
leave
iret
mov
ret
pop
mov
ffreep
lahf
aad
jmp
loopew
adc
rep
or
dec
out
mov
push
jl
int
add
mov
xchg
mov
repz
lret
fsts
jae
sbb
pusha
lret
dec
mov
call
stos
sbbl
xchg
add
mov
cmpsl
pop
sbb
rclb
insb
cmp
ljmp
call
jae
sbb
call
stc
mov
and
cs
mov
mov
leave
lds
mov
mov
pop
xchg
daa
ret
jecxz
aaa
sahf
lods
popf
pop
mov
or
pop
cmpsl
in
sub
ret
fsubr
cmpsl
jns
ja
movsl
das
xor
sub
pop
dec
push
sub
faddl
or
xchg
xor
mov
adc
ret
into
das
movsb
or
pxor
sub
mov
imul
pushf
clc
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
push
sbb
adc
pop
jl
jle
insl
cmp
or
mov
push
cmp
xchg
mov
or
jmp
das
xor
push
out
shl
adc
mov
mov
xlat
mov
sbb
push
lds
ficoml
nop
adc
cmc
mov
xchg
insb
mov
sahf
adc
outsb
fisttpl
sub
int3
outsb
imul
jge
jl
stc
sbb
mov
ds
sub
fstps
mov
or
inc
les
stos
jp
push
iret
add
fmuls
fwait
jl
add
mov
lods
mov
dec
lods
sbb
add
out
xchg
xchg
sub
out
ss
out
ficoml
loopne
test
subl
notl
mov
mov
push
xor
imul
jmp
les
or
addr16
mov
das
inc
scas
mov
sbb
pop
das
mov
mov
rorb
jg
into
xchg
int
adc
mov
pusha
push
adc
outsl
jl
sbb
dec
sti
cmp
leave
jle
sbb
xor
xor
push
repnz
push
rcrl
fcmovne
loope
mov
adc
jmp
adc
pop
leave
adc
cli
pushf
cmp
aam
push
lret
shll
mov
adc
insl
xchg
dec
push
js
sbb
rcrl
fucomi
movsl
sub
mov
sbb
jbe
decl
and
sub
insl
mov
mov
sbb
sub
shlb
cmp
cld
insl
repz
fists
test
mov
mov
or
push
cmc
mov
iret
jmp
inc
cmpsl
jae
daa
and
mov
dec
sub
push
sbb
pop
dec
arpl
and
fisttpl
push
cmp
pop
xlat
pusha
mov
pushl
rorl
aad
sbb
dec
push
jne
fsubrs
outsb
pop
divl
lret
popf
xchg
int3
mov
in
cmp
xor
fwait
inc
mov
aad
clc
jns
test
sbb
mov
mov
cwtl
pop
mov
out
dec
add
out
cmp
cmp
cmp
js
xor
sahf
push
adc
roll
sarb
push
cmpsl
test
xor
sbb
je
loope
movsb
push
sub
stc
nop
aas
arpl
add
adc
cmpsb
imul
scas
or
in
mov
notl
push
mov
xchg
and
and
bound
and
pop
xchg
notl
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
out
int
pop
jle
pop
jl
jle
xchg
out
mov
out
out
push
mov
lret
or
mov
pop
push
sbb
sub
outsl
idivl
cmpb
in
ljmp
lea
aam
push
cmp
repnz
dec
es
sub
orb
shl
pusha
or
add
icebp
xor
and
lock
mov
and
push
iret
mov
pop
mov
test
jbe
sub
out
bnd
in
adc
mov
loope
les
inc
or
mov
jb
add
xor
fsubrs
inc
movsb
daa
shlb
pop
call
ljmp
test
ljmp
movsl
sub
jo
shrl
push
sub
xchg
cmp
push
cwtl
mov
push
pop
outsb
mov
ss
adc
roll
leave
stos
or
inc
mov
ss
jo
and
mov
call
cmp
jno
stc
sbb
fisttpll
pop
dec
sub
jno
and
add
shld
inc
dec
and
jge
notb
sub
ds
push
push
and
dec
sub
data16
lahf
aaa
dec
xor
and
jmp
mov
xor
and
movl
mov
arpl
insl
jp
cld
mov
pusha
icebp
and
and
push
or
mov
stos
in
push
xchg
inc
bound
adc
sbb
jecxz
push
push
iret
ja
mov
inc
cmp
xchg
sbb
out
rcrb
loop
sbb
jmp
pop
mov
dec
fidivrl
mov
mov
cld
adc
jo
jg
mov
ja
dec
filds
push
inc
pop
cwtl
mulb
loopne,pt
jecxz
sahf
push
insl
adc
inc
ss
mov
rcr
lods
dec
leave
or
sub
or
cmpsb
ja
call
ja
test
imul
adc
push
addr16
lea
cmpsb
dec
out
and
jb
lods
repnz
insl
xchg
cmp
or
sbbl
jmp
sbb
imul
inc
fadds
orb
and
imul
bnd
pop
sub
mov
ret
xchg
sbb
in
mov
lods
bsf
sub
fists
repnz
dec
hlt
adc
loop
jp
push
fwait
shl
imul
jecxz
push
movsb
adc
push
push
loop
mov
push
pop
jmp
pop
incl
xor
scas
sub
push
dec
mov
test
jl
mov
mov
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
jl
je
jle
pop
jl
jle
xchg
lds
cmp
adc
cmp
dec
push
loope
cmp
push
or
mov
dec
pop
add
sti
outsl
sbb
paddusw
sub
je
mov
inc
arpl
xor
or
mov
xor
mov
das
and
cmp
shll
xor
dec
or
icebp
push
cmc
ret
jb
mov
push
repnz
lret
push
dec
sbb
pop
lods
xchg
mov
add
and
mov
jl
xchg
jp
adc
inc
sbb
pusha
iret
test
je
push
andb
outsb
loope
shll
shlb
filds
cmpsb
add
orl
push
or
sbb
inc
in
data16
sbb
int3
loope
or
shrl
add
mov
xor
fstpt
xchg
inc
test
xchg
test
push
pop
aaa
push
add
jp
lret
iret
in
test
icebp
loop
test
loope
dec
lods
mov
xchg
jne
add
loop
shll
pop
push
fldcw
xchg
xchg
xor
in
xor
mov
shlb
inc
test
mov
adc
mov
aad
xor
sub
lods
jle
addr16
notb
mov
pop
xchg
jge
insb
sbb
aam
shlb
inc
push
call
cmp
movsb
sub
push
jg
or
push
das
mov
mov
and
push
push
test
rcrb
or
xchg
popl
mov
into
xchg
rcrb
mov
lods
xor
push
mov
mov
xor
jl
testb
xor
jmp
fcmovu
inc
xchg
and
add
cmpsb
int3
cli
mov
mov
out
dec
jp
lea
adc
stos
rcrb
mov
sbb
shl
or
loope
rclb
mov
xchg
xor
mov
cmp
cmp
cmpsl
cmp
dec
popf
jmp
pop
sub
test
mov
sub
in
enter
xchg
mov
ret
dec
insl
fs
mov
sti
insl
inc
hlt
shr
push
shl
daa
fisubrl
cwtl
loopne
sub
out
sti
stos
loope
xor
jmp
enter
sub
rcll
in
mov
mov
sbb
jb
fstps
push
sub
loopne
push
fidivrs
sbb
jmp
pop
xchg
fsubrs
in
call
inc
pop
inc
pop
sbb
imul
and
and
jae
fs
pusha
push
mov
sub
jne
pop
xor
jmp
add
dec
popa
jno
jne
xor
jle
dec
and
sbb
pop
jl
jle
roll
cmp
add
push
xor
je
leave
xchg
inc
push
call
jl
push
xor
xchg
dec
loopne
add
push
clc
sub
xchg
xchg
stos
mov
ss
push
lds
or
dec
dec
pop
and
daa
jmp
jbe
mull
and
xchg
cs
iret
adc
inc
fwait
in
dec
imul
mov
sub
int
pop
mov
inc
out
repnz
adc
cmp
out
bound
cwtl
loope
sub
imul
sub
aam
movsb
push
jp
lcall
xchg
ret
mov
cld
cmp
pop
popa
repnz
rorb
pop
dec
stos
mov
dec
adc
mov
decl
sbb
xchg
mov
in
add
data16
cmp
dec
fadd
inc
sahf
xchg
in
push
and
rol
out
fcoml
jmp
xlat
insb
cmp
cmp
xchg
add
sbb
pushf
jno
mov
ja
fs
jns
inc
cwtl
cli
xchg
fnstenv
ficompl
daa
lret
out
inc
inc
stos
mov
jae
loop
xchg
mov
sti
js
add
lahf
xor
mov
mov
sahf
add
pop
cli
sub
inc
jns
sbb
pop
jae
or
add
idivb
into
push
ds
xlat
cld
leave
dec
pop
fidivs
and
cmc
push
in
xor
xor
aam
ljmp
inc
mov
dec
xlat
bound
mov
mov
push
sub
jmp
jbe
fsubrl
mov
call
xlat
jnp
pop
dec
scas
push
mov
addr16
push
xchg
sahf
jbe
dec
lock
cmpsl
sbb
sub
ja
es
stos
mov
ja
test
and
inc
fnstsw
icebp
jle
ds
dec
loope
outsb
adc
je
fistps
mov
jnp
sti
sub
xor
rorl
pop
divl
push
cld
jg
pop
mov
scas
push
inc
scas
jns
scas
subl
pop
fwait
jns
cli
cmp
dec
leave
cs
lahf
sbb
sbb
jp
shrl
popf
mov
mov
push
pop
or
in
jp
dec
push
mov
mov
movb
mov
xchg
xor
insb
xor
add
repnz
loop
jno
pushl
push
imul
add
js
popf
sbb
mov
loop
fcomi
dec
mov
xchg
popf
pop
dec
inc
mov
xchg
iret
imul
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
je
push
sarl
jle
lret
pop
jmp
and
push
xchg
in
push
cwtl
out
jb
xlat
sbbb
mov
jno
adcl
add
mov
out
ret
sub
xchg
imull
or
mov
adc
pop
dec
je
xchg
test
inc
xor
push
gs
fldl
pop
sub
outsb
push
push
push
and
mov
popa
int3
push
out
popa
xor
int3
pop
jmp
jmp
adc
pop
je
in
sti
push
and
jb
mov
addr16
jmp
xlat
cld
push
fcmove
into
xchg
adc
popa
fstl
test
sub
mov
fdivr
mov
inc
je
enter
cwtl
dec
std
dec
xchg
lret
push
xchg
inc
mov
pop
adc
cltd
mov
shll
lahf
cmp
mov
pop
add
xchg
push
inc
movsb
sub
sarl
cmp
sbb
jmp
or
xchg
mov
loop
pop
jp
jno
loope
push
mov
mov
mov
cmpsl
in
clc
inc
jle
adc
iret
cmpsl
arpl
movsl
out
push
cmpsb
aam
jp
sbb
scas
pop
jns
inc
jge
sub
dec
cmp
les
stc
jp
push
or
shll
inc
xchg
aam
cmp
bound
pop
cmc
pop
inc
xchg
adc
arpl
aad
mov
and
inc
pop
movb
dec
cmc
push
fsubl
adc
fwait
jecxz
xor
cmp
fidivl
fldcw
imulb
adc
sub
lods
in
faddp
jns
sbb
imul
cwtl
push
sbb
pop
jecxz
or
popf
leave
adcl
jns
call
in
fistps
inc
jle
hlt
cmpl
cmpsb
push
daa
outsb
out
push
cltd
sub
xchg
mov
jl
imul
or
int
mov
jmp
std
push
mov
mov
out
jle
pop
or
push
out
ror
inc
les
repz
xchg
imul
pop
pop
add
adc
inc
dec
jp
addb
call
mov
sbb
fsts
cld
fsts
fwait
outsb
loope
insl
cs
or
xor
into
sub
test
mov
bnd
jmp
ror
cmp
enter
xchg
test
mov
sarl
mov
xor
sbb
inc
lcall
inc
pop
push
inc
push
push
and
adc
mov
or
imul
mov
jge
mov
push
add
dec
mov
add
cmc
int3
pop
repnz
pop
add
test
jo
daa
xor
test
es
jp
mov
inc
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
jmp
xchg
mov
jl
jle
push
mov
lret
rcrl
push
inc
mov
sub
mov
ficompl
jae
push
fistl
push
test
fwait
loop
repz
mov
add
xlat
cmp
test
in
cmpsb
ret
addb
fwait
add
xor
sar
or
xor
dec
pop
or
cwtl
cmp
iret
inc
sub
jns
mov
stc
push
xchg
pop
rcr
cmpsl
sti
sub
pop
out
mov
and
stc
mov
scas
cld
inc
test
ja
mov
jmp
pop
lret
push
inc
cmp
int
xchg
push
mov
dec
dec
inc
das
push
dec
mov
mov
mov
aad
or
int3
aad
mov
mov
jg
xchg
pushf
and
ljmp
sahf
fimuls
push
inc
icebp
data16
sub
popa
mov
dec
and
cli
push
cld
loope
sahf
int3
loope
inc
jns
mov
xchg
es
lret
pop
es
outsb
jp
test
call
aaa
adc
push
popa
cmovae
sbb
pmaddwd
pop
into
or
nop
cmp
cwtl
xchg
mov
addr16
test
push
push
jge
ja
dec
push
sub
mov
mov
outsl
cmp
in
sbb
cmp
pop
dec
and
loope
pusha
addr16
jle
mov
sbb
push
xchg
insl
cmc
shrb
ja
adcb
mov
mov
lods
lods
mov
mov
and
test
mov
sbb
fildl
dec
sarb
dec
gs
mov
push
add
pop
mov
test
cmp
xchg
mov
pop
insl
test
shrl
mov
and
adc
mov
popa
or
icebp
mov
jp
mov
test
mov
in
push
sbb
in
roll
lea
pushf
fs
sbb
lds
adc
push
cmp
dec
leave
sahf
push
dec
imul
push
loopne
out
outsb
and
dec
lds
push
or
into
rcll
into
shl
fnstenv
xlat
scas
push
push
sbb
or
ficoml
or
in
xor
add
testb
loop
dec
in
call
sbb
ret
in
adc
push
xor
adc
daa
fbstp
or
and
pop
insl
and
aas
jle
sbb
mov
dec
adc
inc
and
add
pop
dec
push
push
mov
push
dec
adc
or
lahf
in
push
dec
mov
scas
xlat
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
inc
lret
and
pop
jl
jle
sar
push
inc
xor
call
mov
sbb
popa
cmp
repnz
lods
inc
mov
loope
xchg
int
sbb
fs
pusha
lret
xchg
dec
gs
icebp
mov
cmpsb
pushf
sub
out
lds
dec
stos
ret
jecxz
jge
mov
mov
jl
shrl
jmp
jle
sarb
inc
sahf
push
lcall
mov
mov
jne
lret
icebp
xchg
add
sti
lcall
mov
sbb
nop
push
and
pop
mov
push
jnp
push
pop
repnz
loopne
add
mov
mov
lods
xor
pop
dec
ss
dec
repnz
sub
ret
jo
jp
hlt
aas
pushf
sbb
cmp
out
xor
imul
sbb
lahf
out
clc
adc
in
mov
xor
mov
and
mov
out
les
mov
sub
rcrb
pop
mov
cwtl
xlat
insb
mov
or
cmpsl
cmp
push
mov
out
mov
cwtl
sbb
je
iret
sbb
adc
push
cmpb
jae
pop
jg
mov
xchg
pop
inc
mov
aaa
jne
repnz
mov
mov
enter
popf
mov
sub
dec
inc
or
mov
adc
imul
mov
repz
dec
loope
xor
mov
xor
adc
push
lods
push
popa
mov
cmp
fnsave
sbb
push
cmp
mov
mov
mov
add
outsl
sbb
sub
lcall
scas
jg
mov
add
sbb
jb
arpl
sbb
js
pushf
data16
add
xlat
mov
inc
cmpl
cmp
shr
push
adc
insl
push
scas
and
mov
stos
jb
inc
sbb
ret
xor
aad
pop
pop
test
xchg
call
pop
fsubr
call
mov
ds
and
fnstcw
xchg
jns
mov
dec
repnz
outsb
cli
scas
push
into
inc
ret
sub
fldenv
rcll
pop
lret
sbb
loope
daa
fistpl
testb
dec
mov
cmp
ljmp
movb
cmpsb
dec
mov
adc
xor
sbb
xor
faddl
lret
jp
dec
in
or
loope
mov
and
lahf
rclb
in
lea
je
test
adc
pop
and
popf
in
dec
dec
testl
dec
dec
xchg
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
adc
sahf
sub
sub
jle
jl
jle
add
je
scas
popa
mov
je
out
sbb
xchg
jnp
inc
fstl
ficoms
shll
sbb
pusha
xchg
mov
out
cmp
add
jge
xchg
pop
aaa
out
jae
popa
stc
enter
xor
outsl
add
sarl
loopne
xchg
mov
cmp
adc
pop
mov
inc
outsl
shlb
cwtl
mov
push
mov
adcl
add
push
xchg
cmpsl
rolb
inc
outsl
cmp
jl
sbb
das
mov
inc
pop
push
push
mov
inc
mov
dec
ljmp
xor
sahf
fimull
imul
xor
xor
and
out
movsb
dec
out
xchg
stc
decl
adc
adc
scas
ret
mov
adc
or
push
mov
sbb
xor
fistl
lret
xor
jne
mov
xlat
mov
ss
sub
or
mov
and
loop
adc
add
fsub
pop
iret
cmpsl
mov
iret
jle
icebp
xor
sub
dec
mov
jae
int3
pop
movsl
inc
jbe
outsb
push
xlat
scas
or
dec
and
into
in
and
xchg
and
stc
xlat
or
add
mov
insl
jmp
push
test
repz
cli
in
jecxz
inc
xchg
enter
push
pop
push
pop
sbb
fwait
cmp
jae
adc
fsubrl
xor
pop
lcall
std
pop
inc
outsl
mov
shlb
add
and
sbb
call
or
popf
leave
mov
mov
rorl
mov
xorb
xchg
xor
add
xor
fcomp
jl
dec
mov
pop
xchg
push
lcall
mov
inc
add
pushf
jp
out
movsb
mov
ja
sbb
in
xchg
sub
ljmp
outsl
imul
pop
sub
xchg
xor
mov
dec
mov
icebp
popl
mov
daa
pop
mov
outsb
sbb
xlat
xlat
cld
push
fidivs
repz
fisttpll
mov
xor
lcall
add
pop
cmpsl
in
int3
pop
rorl
out
sub
xchg
mov
mov
pop
mov
and
adc
daa
in
test
fsts
stc
movw
fmul
jecxz
dec
in
or
cli
in
mov
subl
sbb
rcrl
imul
add
lock
adcl
jmp
in
mov
push
mov
hlt
push
sub
leave
arpl
xor
cs
adc
test
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
popf
stos
shrb
jle
pop
jl
jle
orb
pop
stos
or
ja
repz
dec
add
inc
arpl
push
xchg
jnp
les
jne
shlb
adc
push
sub
inc
mov
jne
sarb
pop
in
ret
jae
out
roll
mov
dec
pop
mov
out
fcoml
addr16
push
pop
insb
inc
inc
mov
popf
cmpsb
cwtl
jmp
movb
or
mov
xchg
lahf
pop
jns
cmp
jo
mov
ljmp
orps
aas
jne
rorb
mov
loope
push
cmpsl
or
cmc
or
cmp
sub
mov
test
mov
and
push
imul
mov
cltd
and
das
adc
jecxz
test
std
dec
aad
dec
out
mov
ficoms
adc
dec
repz
and
out
aam
test
sbb
adc
dec
cmpsl
xlat
aam
pop
cmpsl
lock
adc
push
ss
ror
daa
insl
fdivrp
xor
cmpsb
imul
cwtl
adc
dec
sbb
pop
or
clc
pop
or
fisttpl
andl
loope
arpl
fidivs
bnd
sbb
sub
add
fcomi
int
ljmp
and
mov
outsl
jo
and
decb
xchg
cmp
sub
mov
push
adc
xor
and
repnz
mov
jg
shrb
add
xchg
enter
sub
cmp
cmp
mov
push
fisttps
popa
xorl
lock
out
cli
out
hlt
test
xchg
cmp
shll
mov
mov
xchg
adc
adc
mov
cmp
mov
mov
ret
xor
pop
rorb
popf
psubb
movsl
and
pop
sbb
cmpsb
cmp
sub
int
pop
pop
mov
popa
push
jb
je
imul
stos
or
daa
mov
pop
outsl
gs
cli
fwait
sub
out
mov
push
stc
mov
lock
aaa
jb
outsb
inc
cmpsl
mov
in
mov
insb
cmp
sbb
inc
and
subb
test
jmp
add
mov
fwait
inc
stc
lock
xchg
or
in
dec
scas
lret
mov
sub
cli
mov
or
pop
mov
adc
jns
movl
and
clc
ja
ret
ljmp
jne
dec
into
test
scas
jb
inc
mov
out
stos
daa
xor
push
inc
fcoml
lcall
pop
insl
mov
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
mov
jle
sub
jle
imul
call
leave
sarl
sahf
xor
inc
aaa
and
pop
dec
icebp
jp
loope
jmp
mov
jle
loope
inc
pop
in
int3
int3
in
jne
xchg
and
lahf
mov
adc
pop
out
rcrl
add
push
repz
fidivl
stos
or
idiv
aaa
mov
xchg
out
sub
cltd
pop
jne
in
mov
xchg
je
push
push
andb
inc
jne
fstpl
sbb
jne
outsl
sbb
js
xchg
inc
out
adc
sti
push
sbb
sub
test
shlb
mov
icebp
xor
xchg
mov
mov
in
pop
adc
call
push
xchg
pop
lcall
inc
mov
jl
push
or
jmp
les
jmp
test
sti
jno
rcrb
outsl
cmp
or
scas
mov
mov
xchg
jo
mov
in
mov
cmp
mov
sti
push
mov
push
jae
ret
sarb
pop
das
lcall
mov
pop
lahf
cmp
inc
xchg
insl
fwait
cli
shll
rcrl
sbb
fwait
cld
data16
inc
stos
mov
dec
mov
mov
les
adc
cld
mov
test
sub
xor
adc
imul
out
push
test
adc
out
sbb
cltd
jg
lret
push
inc
add
pop
dec
enter
xchg
imul
bound
jno
sub
inc
dec
aam
mov
jae
jl
mov
fsubrp
out
pop
xor
pop
and
xchg
mov
enter
movsb
pop
int
out
jb
in
jl
icebp
ja
mov
inc
xor
or
or
addps
mov
faddp
gs
out
sub
jo
fucomp
sbb
imul
popa
aaa
mov
dec
jmp
in
mov
movsl
aam
mov
cmp
mov
stos
sarl
out
sub
mov
xlat
pop
imul
push
inc
and
jg
xor
inc
jl
jl
lds
cmp
popf
sub
test
gs
jmp
cmp
sub
test
jne
mov
es
shrb
push
dec
mov
ret
lahf
push
int
dec
inc
fistpl
loop
xchg
adc
dec
sbb
and
clc
ficomps
and
nop
jbe
sbb
lods
divb
ficoms
pop
cmpsl
cmp
in
sub
outsl
loope
inc
or
popf
aas
jg
int3
xor
adc
or
sbb
push
lcall
mov
dec
rcrb
lcall
nop
stos
mov
jge
push
jge
dec
mov
mov
mov
pop
push
js
or
xchg
aad
into
lahf
pop
into
imulb
testl
jno
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
sbb
mov
dec
js
push
aad
dec
fsts
mov
mov
stos
mov
sbb
adc
mov
aas
push
xor
mov
xchg
sbb
dec
mov
dec
out
out
shll
inc
add
fwait
jne
test
xor
stos
fdivrs
jb
mov
test
jae
dec
pop
sti
into
mov
bound
mov
mov
mov
lock
stos
xchg
push
mov
mov
cmpsb
das
xchg
jl
mov
stc
scas
jo
inc
or
fs
fldenv
adc
inc
mov
es
or
test
adc
and
push
sub
jnp
pop
int
push
inc
mov
dec
pusha
sbb
imul
push
add
loope
loope
insb
test
std
stos
daa
mov
or
aaa
pushf
repnz
xchg
xorl
dec
push
mov
filds
add
clc
shl
test
fdivrs
add
adc
sub
jge
sbb
leave
ficoml
int3
rorl
sbb
fstpl
aas
loopne
inc
xchg
loop
xlat
jge
notb
popa
mov
lods
rcll
cli
sub
sbb
adc
lcall
sub
mov
cmpsb
prefetch
ret
movsb
push
jl
fildl
adc
mov
or
adc
xchg
dec
sub
jge
pop
sbb
sub
xchg
inc
lcall
cmpsb
fs
push
mov
xchg
fdivrs
inc
fildll
pop
pop
xor
xchg
test
mov
ds
daa
cmp
adc
bound
lods
pop
gs
sub
jmp
mov
stos
cmpsb
out
xchg
stos
jg
ljmp
outsl
adc
aad
into
loope
ljmp
inc
sub
gs
mov
mov
incl
mov
or
daa
xlat
push
cmp
and
mov
mov
and
xchg
mov
andl
daa
xchg
je
cli
cwtl
sahf
call
add
adc
jne
addr16
lret
ret
xor
cwtl
mov
sbb
mov
ds
lcall
mov
in
subb
add
fwait
into
mov
fistl
mov
lfs
xlat
xor
or
dec
and
repz
cmpsl
aad
mov
sbb
jae
mov
nop
sbb
out
enter
lock
imul
stc
mov
pop
push
adc
idiv
rcrl
hlt
das
test
inc
fmuls
or
pushf
pop
dec
cmp
mov
xchg
fwait
clc
cs
or
and
lods
xchg
popf
mov
out
stos
ret
fildll
lahf
mov
and
andb
dec
push
inc
out
dec
sbb
jb
cmp
fadd
out
int
cltd
adc
icebp
neg
jmp
jne
sub
test
test
mov
mov
jle
jge
jle
rolb
cmp
add
enter
cltd
adc
addr16
lds
mov
xchg
and
sbb
out
into
or
sub
imul
sbb
lahf
lahf
sbb
std
jo,pn
xorb
adc
stos
cs
pop
test
sub
leave
xchg
add
push
push
sub
ret
jo
in
loope
pop
into
cmp
in
xchg
fists
xor
mov
shrl
cwtl
mov
sub
mov
outsb
cli
sub
in
sbb
lret
jo
inc
fidivrl
add
sbb
lcall
jb
scas
dec
pop
test
sarl
int
test
sahf
movb
sub
sbb
shlb
shrl
cmp
sub
mov
movsb
rorb
mov
pusha
adc
lcall
push
dec
cmp
cmp
cld
fildl
icebp
mov
lret
mov
dec
and
push
jl
and
xor
js
xor
into
or
xchg
das
test
mov
add
sbb
mov
test
repz
outsb
stos
sbb
test
adc
aad
sti
out
sbb
out
xor
out
out
bound
push
fstpt
gs
stos
pop
mov
cmc
insb
in
fbstp
andb
out
mov
sub
and
loop
cs
or
dec
call
mov
dec
stos
xchg
enter
mov
xchg
pusha
gs
jmp
ljmp
lahf
mov
adc
insl
call
mov
mov
leave
add
call
out
mov
fs
and
stos
adc
out
adc
fs
jge
xchg
dec
arpl
mov
xchg
arpl
mov
adc
fisttpl
arpl
mov
insb
adc
inc
sti
cvtpi2ps
mov
test
sbb
leave
pushf
prefetch
or
out
add
mov
cli
mov
jns
jle
jmp
push
scas
xor
xchg
dec
and
pop
push
jb
mov
add
sahf
sbb
push
mov
call
push
xor
mov
cltd
jmp
sub
push
fstl
out
cld
roll
shr
xor
dec
push
pop
popf
outsb
jl
push
xchg
daa
jae
pop
inc
leave
enter
jae
push
jo
push
cltd
adc
jg
out
dec
in
fsubrs
push
push
mov
cltd
push
push
repnz
divb
mov
mov
out
xchg
sub
pop
pop
in
jns
scas
out
add
push
sub
lret
mov
loope
or
sti
sub
scas
sti
cmp
es
nop
bound
jb
ret
in
insb
out
xchg
scas
popa
lea
mov
cmp
mov
stos
rolb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
pop
mov
jle
sub
jle
daa
jecxz
cmpsb
pop
rorl
aam
out
dec
scas
popa
sahf
and
daa
jmp
push
inc
jmp
jnp
jns
dec
aas
xchg
mov
cs
add
je
enter
sub
mov
inc
movsb
xchg
cld
dec
dec
fisubs
jmp
inc
std
push
rol
push
shll
sub
xchg
andl
dec
mov
stos
push
pop
icebp
and
dec
cmp
pop
shll
xor
andb
iret
dec
rorb
aas
push
xchg
sbb
adc
pop
ljmp
xchg
stos
ffree
lcall
mov
mov
imul
and
inc
xor
jae
pop
loop
sbb
ficompl
insl
inc
mov
adc
sub
mov
dec
test
loope
xor
cwtl
shlb
push
add
add
pop
sbb
adc
xchg
or
repz
out
adc
pop
inc
femms
push
rcll
lods
xchg
mov
sub
fmuls
sbb
dec
dec
pusha
in
sub
mov
js
inc
inc
lcall
push
fidivs
out
psllw
or
fsubrs
sbb
pcmpeqw
mov
dec
xchg
fcomi
fldcw
stos
cwtl
dec
movsb
sbb
stc
rcl
cmpsl
cld
sbb
jge
imul
fnstenv
sahf
fists
cmpsb
mov
es
mull
push
call
pop
adc
cwtl
add
sbb
jbe
rol
lock
je
rol
xchg
sub
xchg
ja
pop
push
xor
lods
enter
jno
in
cld
dec
pop
inc
ljmp
jbe
mov
rcrb
pop
das
xchg
mov
popf
jg
inc
rclb
jmp
gs
fnstenv
xor
jge
cmpsl
subb
imulb
test
imul
lahf
fisttps
pop
addr16
add
lret
fcoms
out
test
jecxz
cmpsl
and
mov
add
jg
mov
push
out
dec
fidivrs
mov
add
in
and
dec
lret
jge
icebp
cmp
popa
loope
dec
push
add
lahf
shl
rcl
ss
xlat
dec
push
lcall
mov
outsb
sbb
mov
popf
xor
and
xor
jae
mov
sahf
mov
or
fsubrs
insb
xchg
cld
loop
jnp
mov
cmp
repnz
shrl
insl
lods
or
test
mov
sbb
scas
pop
imulb
push
aad
sar
imul
or
dec
push
inc
cltd
sub
and
fwait
movsb
and
cmpps
lret
dec
jle
or
sub
sub
in
mov
cmp
fldcw
jge
insb
mov
xor
call
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
testl
jg
jle
out
inc
add
cmc
mov
jmp
pop
mov
push
imul
mov
sbb
arpl
imul
test
pop
cmp
mov
movsl
push
clc
add
sbb
mov
adc
outsl
mov
pushf
and
das
nop
xor
pop
push
dec
orb
fs
add
cltd
popf
iret
add
sub
xor
cmp
sub
stos
xchg
aam
arpl
in
xor
xor
fstp
shr
push
ret
adc
test
fwait
xor
cmp
adc
sub
xchg
insb
pmaxsw
movsb
iret
mov
xchg
push
jbe
pop
xor
xlat
dec
dec
addr16
and
loope
jmp
xor
nop
aas
xor
mov
jbe
dec
pop
inc
adc
scas
aaa
cmpsl
cmpsl
sub
dec
test
test
fistl
loopw
add
das
pop
stos
sub
push
movsb
adc
xchg
inc
lahf
loopne
sub
icebp
jmp
sbb
call
pop
xchg
xor
or
mov
mov
lock
xor
ret
orl
xor
addps
adc
dec
out
sbb
ret
inc
fdivl
fstpt
movsl
sarl
lods
sbb
fnstsw
ret
inc
xor
divb
add
mov
imul
sbb
jne
lea
js
or
push
cmc
mov
xchg
rcll
insl
lock
cmp
imul
repz
lds
xchg
and
inc
mov
mov
adc
int3
movsl
or
mov
pop
pop
ljmp
push
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
lds
inc
cmp
mov
call
aas
popa
stos
out
outsl
mov
addr16
fwait
jecxz
repnz
add
jo
sub
mov
lods
jae
loopne
mov
inc
daa
mov
arpl
cmp
xor
add
or
push
pop
dec
xor
nop
push
inc
popa
sbb
fnsave
jmp
pop
loope
jl
out
in
xor
xchg
push
mov
fildll
pop
inc
xor
loope
pop
insl
hlt
enter
insl
dec
jge
mov
ss
jmp
popf
test
gs
movsb
mov
fnstcw
mov
sti
and
lock
loopne
insl
mov
mov
mov
in
or
mov
cmp
loopne
and
dec
loope
jae
push
in
lahf
rol
mulb
lods
jecxz
mov
xor
add
sbb
testl
xchg
lcall
pop
jl
stos
cld
aaa
mov
lods
xchg
add
cmp
push
arpl
test
ret
and
lock
addr16
xchg
push
lods
fwait
int3
push
shr
adc
mov
jmp
popl
jg
loopne
mov
xor
fs
sub
push
mov
pop
cmp
ret
inc
cmp
lret
mov
push
jg
test
mov
sub
cmpsb
adc
aas
pop
jns
mov
scas
xchg
pop
or
mov
jnp
mov
mov
pop
scas
xchg
xchg
js
pusha
cmp
adc
xchg
xor
and
add
adc
jg
movsl
idivb
ljmp
sub
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
cmp
popf
ret
inc
jns
xor
aas
pop
mov
mov
daa
sub
aam
mov
sub
in
xchg
gs
lret
adc
outsl
mov
xchg
idiv
stos
xchg
psubsb
add
push
jne
xchg
negb
sbb
push
popf
or
inc
mov
mov
mov
sub
inc
fxch
pop
inc
sti
dec
lret
insl
ffreep
cmp
add
subl
int
sbb
popf
stos
push
bound
sbb
jge
cmc
and
jl
mov
mov
hlt
mov
lcall
inc
cltd
inc
data16
push
mov
xchg
popa
clc
cmp
mov
push
sbb
push
es
js
push
cltd
mov
jge
push
loope
pop
push
lods
gs
add
js
hlt
sub
sub
xor
push
cld
pop
call
xlat
sub
aas
push
ds
inc
xchg
mov
js
mov
mov
cmp
ljmp
and
mov
dec
fucomip
mov
mov
mov
inc
pushf
leave
adc
mov
icebp
pop
dec
pushf
out
iret
enter
add
jl
push
scas
push
sbb
stos
int3
jbe
lods
enter
cmp
xchg
icebp
add
inc
lret
xchg
stos
addr16
push
fs
in
sub
fstps
xchg
lock
xchg
movb
jne
or
mov
inc
cltd
fisttpl
sti
loop
movsl
adc
or
cmc
push
xchg
mov
add
gs
xchg
enter
mov
pop
sti
xchg
and
push
push
aaa
sub
jne
sti
int3
stos
scas
sahf
pushl
call
test
jmp
and
in
popa
push
lret
xchg
insl
pop
push
dec
int3
les
mov
inc
mov
adc
sbb
inc
divb
aas
ficoml
jmp
and
cmpsl
rcrl
cmp
cmpb
inc
and
movsb
pop
add
dec
bound
sub
xchg
mov
sti
imul
dec
stos
fwait
pop
mov
test
aaa
pop
mov
in
ror
mov
subb
xchg
pop
push
lock
testb
test
xor
insb
cmp
out
mov
shll
hlt
sbb
dec
aaa
mov
mov
add
jmp
in
mov
ljmp
mov
addr16
lods
cmp
jmp
xchg
mull
sub
cmpsb
mov
adc
mov
ljmp
xchg
dec
cmp
lret
xor
addl
cmc
dec
int3
xor
loopne
clc
dec
jg
test
fdivrl
jle
xor
push
mov
in
pop
and
push
dec
iret
lret
sbb
pushf
ret
push
sarb
stos
inc
xor
add
shrl
cmpsl
fimuls
jp
in
jns
jno
and
ret
jge
cmp
inc
or
and
into
popa
rclb
arpl
jbe
int3
rcr
jecxz
adc
fs
pop
xorl
fimuls
lock
test
cmp
mov
shrb
jns
je
inc
clc
mov
aam
or
sti
ds
jne
push
cld
push
mov
add
push
pop
aad
inc
dec
or
add
cmp
inc
xor
jno
pop
stc
ljmp
mov
xchg
movsb
adc
repz
jmp
push
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
test
add
enter
aas
inc
in
sahf
fld
xorl
xchg
ss
ficompl
dec
fs
lea
jns
lods
lock
fmul
in
mov
fcmovne
cmp
icebp
andl
sbbl
sbb
popf
inc
jne
sbb
and
and
and
in
lock
daa
and
mov
adc
jle
or
push
stos
dec
push
or
jl
repz
int
jnp
jnp
lret
dec
scas
sbb
sbb
cli
mov
rcrl
mov
cld
inc
cmp
popa
jno
inc
enter
jbe
mov
sub
sbb
icebp
xchg
das
push
adc
dec
daa
lock
fdiv
push
icebp
adc
sbb
fcoms
pop
stos
pop
js
mov
lds
jnp
sbb
in
lods
sub
xchg
or
dec
or
mov
sbb
or
cli
int3
sub
lea
mov
shll
in
cs
add
or
sub
cmp
lret
dec
stos
inc
dec
ljmp
fildl
bswap
inc
and
cmc
or
mov
pop
dec
cmp
repz
ja
mov
cli
cld
cmp
sbb
dec
aam
loopne
jmp
iret
gs
hlt
outsb
add
pop
gs
adc
das
jns
sub
stc
out
adc
aaa
icebp
lds
pusha
sub
je
push
add
push
push
mov
popf
stos
std
or
rcrl
xchg
jnp
xor
leave
in
mov
push
inc
aam
aaa
std
pop
or
daa
xor
cwtl
xchg
ret
sub
lds
clc
sub
mov
push
fnstcw
mov
insl
pop
pop
roll
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
shll
jle
jl
jle
cmp
loopne
push
inc
mov
aas
jmp
mov
lods
bound
aad
sub
shrb
inc
pop
in
std
mov
xor
adc
pop
add
xchg
paddsw
adc
ret
mov
into
or
mov
push
mov
or
mov
add
pusha
jge
addl
mov
mov
es
fmuls
add
sub
movb
out
pop
lret
shl
xor
lret
cmp
xor
fxch
js
mov
inc
or
mov
mov
sbb
inc
sarb
loop
push
mov
inc
in
scas
mov
jnp
pop
cwtl
inc
mov
jmp
sahf
in
and
movsl
sbb
push
push
ljmp
les
adc
push
leave
stos
fstl
stc
clc
lahf
xchg
pop
push
pusha
xchg
in
push
sbb
lcall
jb
jno
loope
outsb
shrb
mov
cmp
in
mov
cmp
popf
mov
and
dec
lcall
push
mov
dec
sbb
xchg
add
call
push
jb
adc
xor
mov
xchg
sbb
movsb
adc
lds
mov
pusha
push
mov
jp
rcrl
push
mov
in
mov
or
mov
mov
cld
pop
ja
mov
inc
adc
jl
lret
cmp
dec
shll
add
cmp
jbe
mov
gs
popf
mov
mov
pushf
aam
jge
push
sub
adc
dec
mov
adc
push
insl
les
xchg
mov
test
mov
dec
movsb
repnz
jae
sbb
xor
push
inc
mov
cli
test
fwait
push
out
insl
inc
dec
mov
ret
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
and
jle
add
pop
jmp
sbb
push
ljmp
sbb
ja
shlb
out
clc
out
clc
add
jo
repz
xchg
idiv
cmp
cmp
mov
bound
and
cmp
or
jle
jle
popa
dec
jae
js
add
sbb
dec
push
inc
out
inc
popa
adc
pop
stc
xchg
or
ds
aad
mov
bound
sbb
xchg
push
repnz
stos
mov
adc
movsl
xchg
pop
or
mov
movsl
fadd
out
or
pop
dec
xchg
and
call
fbstp
into
fnsave
push
dec
ds
xchg
in
mov
mov
push
pop
clc
add
jnp
scas
in
rclb
jns
sbb
cld
adc
out
add
adc
and
sbb
aas
xor
out
js
xorb
popf
ss
and
mov
xor
pop
popa
lret
cmp
stos
xor
mov
mov
adc
lods
mov
or
jle
dec
jne
movsb
mov
sub
jb
bound
mov
les
inc
xchg
loopne
cmp
andl
andb
lea
subb
iret
xor
add
mov
cmp
andb
mov
jmp
inc
adc
sti
cwtl
inc
lods
fdivrs
pop
and
mov
mov
and
mov
xchg
adc
loopne
xor
jp
inc
clc
imull
imul
sbbl
push
cmpsl
sbb
mov
outsb
cwtl
mov
cld
fnstenv
xlat
insb
sbb
sahf
pop
dec
jbe
arpl
cld
fs
add
mov
push
push
data16
pop
fmull
pop
std
xlat
xchg
mov
cld
sub
fidivrl
mov
jmp
cmp
outsb
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
shrl
jle
jl
jle
in
xor
stos
mov
movsb
fcoms
hlt
daa
dec
mov
xchg
sub
pop
dec
in
rcl
or
pop
stos
sarl
mov
jg
jmp
out
sub
xchg
adc
push
enter
and
mov
mov
inc
adc
mov
inc
out
inc
sbb
mov
iret
sahf
push
lret
cmp
and
inc
and
jbe
je
jge
nop
sbb
inc
scas
mov
and
xor
mov
mov
dec
sbb
subl
jp
inc
jmp
into
adc
sbbb
mov
testl
stc
movsb
mov
xor
jl
xorl
in
aam
sti
bound
cmpsl
mov
hlt
cmp
cmpsb
cmpsb
jo
dec
mov
xor
or
fwait
jne
cmpsb
mov
ftst
xor
mov
mov
dec
and
dec
push
jno
imul
lahf
jae
cmp
xchg
sub
mov
mov
jb
sarb
push
dec
add
or
or
cmp
and
mov
and
loop
mov
inc
outsb
xchg
in
loop
mov
xor
ja
fs
imul
mov
in
sarl
adc
xchg
xor
andb
sbb
loopne
push
testb
lcall
cs
pop
stc
dec
pop
testb
rclb
and
sub
incb
aam
dec
sti
and
xchg
fs
faddp
ljmp
stc
mov
inc
xchg
lahf
mov
lods
fs
add
out
sub
leave
or
jp
mov
inc
mov
mov
mov
daa
xchg
ja
xchg
inc
hlt
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
iret
ds
and
jle
push
jle
push
into
repnz
inc
imul
in
lods
inc
inc
xor
fsubrl
fwait
ret
popa
ds
daa
pushf
lret
outsl
scas
pop
push
shll
jg
cmp
ljmp
sbb
shl
sarl
cmpsb
jns
adc
shrl
pop
daa
add
adc
inc
sti
mov
xor
pop
and
stc
fsts
pop
mov
insb
mov
mov
ret
in
jns
in
out
pushf
fdivr
add
mov
xlat
rclb
mov
pop
jmp
pop
movsb
mov
fcoml
les
push
dec
icebp
insl
daa
mov
fiadds
aad
pushf
rolb
pop
ret
and
pop
inc
inc
cmp
fstp
xor
xlat
cmpsl
or
jbe
push
lods
pop
arpl
cmp
fsubr
jp
loope
fadds
ret
mov
cmp
xorl
repnz
or
dec
adc
jae
dec
call
pop
rol
subb
mov
and
adc
jle
bound
shl
cmp
dec
dec
in
mov
jle
sub
inc
xchg
mov
loope
aaa
mov
jmp
js
cli
in
lret
mov
call
aad
insb
sub
mov
push
xchg
push
pop
movsb
sub
in
pop
push
dec
lods
mov
jns
adc
in
cwtl
js
scas
and
test
das
mov
jbe
jmp
inc
and
add
adc
inc
mov
enter
pop
mov
or
mov
lds
mov
mov
xchg
sub
movsb
inc
sbb
movb
test
dec
mov
mov
jb
pop
inc
cmp
testl
outsb
fimuls
movsl
jl
push
test
mov
mov
push
mov
outsb
hlt
fadd
lret
imulb
dec
jo
dec
jl
push
dec
add
fidivs
bound
mov
inc
mov
dec
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
inc
add
insl
in
jle
and
jle
out
aas
daa
pop
lcall
lret
mov
inc
movb
popl
loop
pusha
adc
roll
and
mov
cmc
or
push
mov
shl
lcall
scas
inc
pop
es
add
adc
pop
pusha
push
adc
dec
jmp
cs
inc
sbb
mov
sbb
sub
xchg
sub
je
xchg
test
out
fwait
and
repz
push
jmp
mov
jge
rcrb
loop
std
shrb
pushf
aam
cmp
mov
movsl
mov
sbb
xor
jmp
and
in
jae
ljmp
push
jmp
push
adc
xchg
xchg
lret
cmpsb
dec
push
mov
fs
pop
mov
add
push
fimuls
and
out
sbb
pop
cmp
add
add
mov
push
push
push
out
add
mov
sbb
dec
pop
or
dec
rol
pop
mov
sbbl
push
lret
fadd
inc
shll
and
inc
repnz
jge
add
inc
lret
jge
mov
sub
jmp
popf
jmp
rol
fadds
sbb
xor
xor
or
fmuls
stos
mov
cmpsb
pop
test
movsl
fidivs
es
pop
inc
mov
mov
or
sbbl
jns
jl
adc
xchg
inc
imull
es
xor
jae
js
jge
xchg
mov
loop
mov
inc
xor
negb
cmp
cwtl
jle
adc
and
jp
pop
cmp
mov
add
es
lcall
pusha
cmp
das
icebp
imul
scas
mov
cmpsb
test
xchg
arpl
mov
mov
out
adc
or
xchg
mov
lahf
pop
xor
dec
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
std
mov
jle
and
jle
mov
icebp
shlb
jae
mov
inc
mov
dec
fwait
ja
dec
iret
mov
clc
jle
xlat
push
cmp
ss
fldcw
icebp
sahf
stos
mov
je
mov
cmp
rcl
or
pop
scas
push
shr
sub
push
fldcw
jmp
xchg
pop
pushf
repnz
minps
fistpl
in
repz
les
outsl
in
mov
out
jmp
jl
sub
aam
pop
sub
add
in
push
aad
mov
jmp
out
cmpl
inc
sarl
mov
or
and
push
jecxz
jp
call
aad
sti
mov
lcall
mov
mov
cs
inc
xchg
js
dec
aaa
jno
sbb
rorl
xchg
push
fldl
mov
lcall
adc
test
jae
and
ds
or
outsb
add
daa
push
lahf
sub
dec
add
mov
mov
pop
add
mov
jns
rcrb
push
xor
jmp
lret
out
xchg
jns
and
js
fwait
jns
xor
mov
jmp
mov
shlb
pop
fstps
inc
xchg
or
sub
scas
in
inc
adc
outsl
push
mov
dec
push
pop
xchg
iret
jnp
test
xor
cmp
adc
inc
cmp
dec
rorl
mov
ds
or
cli
shr
outsb
xchg
scas
dec
dec
xchg
jg
xchg
mov
xchg
dec
iret
jnp
mov
push
mov
lret
arpl
repz
sbb
stos
ret
test
xchg
sbb
add
pop
xchg
rorl
in
pushf
fucomip
gs
mov
out
and
movb
icebp
inc
push
mov
xor
sbb
pop
sub
pushf
int3
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
shll
jl
jle
sbb
js
in
scas
pop
push
cmp
imul
xor
add
push
les
sar
mov
adc
cld
lret
scas
jg
rorl
inc
mov
push
xchg
bound
xchg
shlb
add
mov
rcrb
sub
out
and
and
int
xchg
mov
lret
iret
sub
enter
popf
repz
adc
stc
pop
loope
cmp
cmp
mov
std
adc
shll
sbb
addr16
pop
das
testl
jmp
xor
in
pop
je
cmc
dec
sahf
mov
pop
adc
pop
mov
imul
and
push
push
ror
sub
pop
pop
pop
jmp
aad
cmp
add
cmp
pop
scas
and
xchg
xchg
inc
sub
cmp
fidivrl
and
divl
mov
outsb
addb
mov
mov
push
loope
mov
mov
push
push
dec
sbb
inc
scas
mov
jo
xor
test
sbb
adc
jnp
mov
das
mov
fisubs
pop
shl
and
xor
outsb
fiadds
aam
mov
xor
add
xlat
or
adc
inc
imulb
cwtl
cmovbe
sbb
lock
test
inc
xchg
mov
sub
pop
cmp
adcl
cmpsl
fistpll
test
fimull
test
sub
inc
dec
das
fndisi(8087
adc
sbb
sbb
popa
lcall
push
lret
popa
js
aas
mov
mov
lret
and
inc
and
addr16
or
lock
sbb
push
dec
daa
lods
out
daa
movsb
daa
mov
or
mov
dec
cmpsb
sub
test
dec
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
paddw
jns
sarb
and
jle
mov
inc
or
aaa
sub
xchg
pop
xor
arpl
mov
in
xchg
cmp
xchg
adc
popl
stos
and
test
pop
loop
add
jmp
add
adc
lcall
xlat
mov
cltd
aad
mov
in
push
jns
mov
data16
addl
dec
pop
xor
nop
or
sbb
lods
lea
mov
je
and
push
test
andl
ljmp
mov
loope
stc
and
std
pop
test
sbb
xor
test
dec
xchg
dec
notb
lods
xchg
pop
push
jns
pusha
and
inc
inc
dec
mov
or
mov
push
pop
push
out
andb
loop
fs
xchg
pop
stc
xchg
pushf
arpl
je
adc
inc
mov
mov
push
push
or
pusha
cmp
inc
or
inc
dec
test
mov
xchg
lods
inc
popa
add
out
out
aaa
or
adc
rcrl
mov
jnp
push
je
dec
and
sbb
imul
lar
into
push
and
mov
push
cmp
xchg
and
or
jle
fisttpll
or
or
add
cld
pusha
add
aaa
lock
sub
inc
out
cmp
push
add
clc
xor
mov
xor
lret
sbb
mov
lret
ret
sahf
push
ftst
xchg
jae
adc
cmp
pop
ljmp
and
mov
adc
arpl
jg
adc
sbb
je
jnp
lret
jmp
popf
inc
mov
push
ljmp
cmpsl
lcall
cmpsb
adc
cmp
stos
lods
push
add
sbb
stc
cmp
mov
mov
iret
gs
mov
fbstp
cld
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
adc
push
and
aaa
loopne
aam
stos
push
lret
jb
shll
xchg
jecxz
xchg
jae
inc
testl
sarb
jb
mov
sbb
pop
jb
pop
jecxz
movsl
mov
ljmp
or
cmp
mov
rclb
xor
out
sub
xchg
add
adc
add
ljmp
aas
mov
push
sub
adc
mov
sarl
jbe
in
pop
in
repnz
mov
fwait
xor
xor
mov
je
sbb
jo
xor
cmpl
sbb
sbb
in
jns
jbe
xchg
repz
cwtl
lret
pop
dec
dec
cltd
cmp
inc
pop
outsl
push
xchg
cmp
insb
bound
push
das
pop
in
dec
mov
test
aad
aaa
xlat
sub
pop
aaa
pop
pop
sarl
adc
mov
jae
mov
sub
jge
popa
sbb
out
scas
push
js
ja,pn
push
enter
bound
rorb
xor
stos
call
sbb
xchg
popf
loope
out
sbb
in
pop
inc
lods
rcl
fs
nop
cmpsb
jb
mov
cmp
das
or
jle
in
fidivrl
mov
cmp
add
sarl
dec
fnsave
subl
lcall
mov
push
pop
pop
movsl
or
jne
into
xchg
xchg
enter
xor
add
test
sub
push
cmp
xchg
cs
call
xchg
in
addr16
inc
call
in
cmp
xchg
mov
fdiv
mov
subb
lret
push
jno
sub
jne
adc
fnsave
push
mov
or
jmp
fwait
inc
mov
or
leave
lods
adc
add
rcr
scas
xchg
mov
mov
scas
fisubl
sbbl
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
fsubs
fs
jle
and
jle
sbb
or
loop
xchg
sbb
ss
dec
push
pop
adc
bound
cli
cvtpi2ps
xlat
call
jne
mov
sahf
fsubrs
fldcw
and
out
add
sub
or
xchg
pushf
aaa
add
push
add
cmp
xchg
pushf
push
xchg
add
pop
ret
pop
sbb
iret
inc
cmp
dec
fld
mov
arpl
or
cld
faddl
es
leave
das
lods
add
test
mov
ds
dec
cmc
fbstp
adc
je
out
xlat
push
dec
mov
add
or
fildl
stos
inc
repz
imul
test
lods
and
adc
fdivl
jecxz
fldenv
lock
leave
sbb
les
add
fadds
dec
push
cmp
es
xchg
mov
mov
inc
insl
jmp
test
sbbl
push
mov
testb
sbb
or
rcll
mov
xchg
cli
sbb
adc
jecxz
lea
outsl
and
jl
dec
subl
hlt
mov
add
and
fwait
jo
xchg
rorl
out
sub
add
inc
sbb
std
scas
mov
add
inc
insl
iret
je
adc
mov
jmp
cs
pop
enter
adc
cmpsb
lcall
fsubs
js
fs
push
std
cmp
or
in
dec
data16
loopne
xchg
mov
add
xlat
inc
cmpsb
mov
or
mov
test
xor
fsubrl
scas
scas
je
js
loopne
pop
push
repnz
lds
fldl
mov
jno
jmp
xchg
fiadds
inc
inc
add
add
subl
loop
pop
pop
jns
mov
rcrb
popa
test
imulb
dec
es
and
fstpt
popa
iret
movsl
dec
ret
adc
or
inc
or
jne
jmp
lods
mov
outsb
xorl
pop
mov
pop
fcomp
jle
and
jle
fcoml
xor
cs
mov
dec
mov
add
or
inc
scas
out
outsl
xchg
push
or
xchg
iret
not
or
insl
mov
mov
fstpl
test
mov
sahf
out
jae
adc
out
xor
arpl
mov
fsubr
jns
jmp
ret
pushf
xchg
pop
pop
or
out
mov
xor
roll
ljmp
icebp
lds
fsubrl
out
loopne
push
xchg
loop
popa
ret
mov
mov
adc
or
scas
push
sub
push
mov
fmulp
cld
mov
adc
mov
test
notl
xchg
add
mov
jp
ror
cwtl
fninit
das
mov
aas
scas
icebp
std
test
pop
js
mov
je
imul
iret
dec
pop
sbb
or
jne
dec
arpl
jge
and
fmull
or
or
pop
add
cmpsl
jp
lds
inc
mov
lods
clc
pop
or
shrb
xchg
repz
jbe
sub
std
shl
push
hlt
push
nop
bound
jp
and
sar
jne
xchg
or
int3
cmp
cld
fstl
pop
or
push
scas
lahf
sbb
hlt
leave
mov
push
ljmp
push
sub
sahf
enter
call
jno
lret
shrb
loop
cmp
push
and
sub
sbb
pop
dec
jmp
ret
sbb
loop
fwait
mov
xor
push
ror
push
mov
cmp
jae
sbb
cmp
rcll
sahf
sbb
sti
repnz
cmpsl
aas
mov
jns
out
pusha
popf
xchg
loopne
sbb
xor
data16
cmpl
sbb
aaa
mov
mov
jmp
cmp
cmpsl
dec
pop
loop
movsl
fldenv
or
mov
das
lods
in
mov
ss
loopne
sub
mov
popf
and
ss
inc
jae
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
inc
scas
lea
mov
pop
je
lods
cmp
aaa
push
les
cwtl
int
mov
fsub
js
or
xchg
add
scas
xchg
jp
dec
mov
mov
inc
and
or
les
add
lods
repz
loopne
sub
sti
icebp
fidivrl
enter
adc
jno
xchg
mov
cli
hlt
pusha
popf
fadd
add
pop
dec
movsb
add
shll
stc
imul
enter
pushf
outsb
mov
sbb
dec
xor
add
fildl
jne
sub
pop
sahf
call
fwait
out
aam
xor
pop
inc
jg
mov
cmpb
or
outsb
imul
outsb
and
push
push
aad
iret
sti
inc
fcompl
xor
outsl
mov
filds
popf
mov
cmc
push
lods
fs
mov
je
cli
add
push
loop
lods
lcall
mov
mov
add
into
lds
sub
fistl
arpl
push
inc
xchg
mov
pop
lret
jecxz
cmpsb
pop
sbb
scas
pop
stos
insl
lret
sahf
imul
jl
mov
int
inc
adc
fadds
adc
stos
pop
popf
push
jno
or
mov
stos
jge
popa
enter
outsl
aam
add
cmp
sbb
jl
imul
nop
int3
out
rol
test
iret
inc
xchg
add
sbb
js
int
xchg
fcoms
fldenv
bswap
sbb
popa
inc
mov
in
fistpl
sbb
daa
mov
paddusw
out
dec
push
xor
jo
sub
arpl
sti
les
sub
mov
cli
xlat
in
sbb
pop
mov
cmpsb
mov
fdivrl
outsb
xchg
mov
pop
cli
dec
cmp
pop
ss
jmp
enter
aad
push
pushf
or
imul
test
fstp
lret
test
dec
add
or
jns
aas
in
pop
push
outsl
pop
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
out
nop
add
fnstcw
cmp
aam
push
lods
fstl
pop
jb
mov
bound
add
mov
stos
sub
sub
scas
mov
fsubp
lods
cmp
xchg
pop
test
in
mov
mov
sbb
xchg
das
mov
mov
xor
jg
mov
inc
jmp
pop
add
clc
scas
and
inc
pop
lret
mov
ljmp
mov
cmpsb
push
mov
leave
adc
pop
scas
pop
rol
scas
cmpsl
sbb
jg
sbb
sub
mov
cltd
push
stos
icebp
cmpsl
push
sub
cmp
repz
shrb
hlt
and
sbb
popa
mov
roll
xor
hlt
ret
les
sbb
dec
xchg
cmp
rorl
loopne
pop
sahf
dec
lcall
add
jb
aas
in
nop
or
fs
in
jno
and
xchg
push
data16
sti
not
fld
pop
in
sub
addr16
insl
xchg
dec
pop
lods
sbb
scas
sbb
mov
fucomp
mov
les
and
cmp
add
test
dec
pop
mov
jb
dec
jle
xchg
je
outsl
and
ret
sub
loop
movsb
aas
outsl
sbbb
mov
ds
lret
add
ss
dec
pop
loop
sbb
les
cltd
pop
adc
fisubrs
xchg
pop
movb
test
fxch
add
inc
mov
mov
jl
cmp
add
mov
test
dec
dec
mov
aaa
or
mov
inc
aad
in
mov
and
inc
insl
mov
cmpsb
and
jecxz
dec
out
cmpsb
add
leave
cli
and
dec
add
ret
pop
xchg
rclb
out
sub
je
jae
int3
jecxz
and
cmp
shlb
enter
cwtl
insl
xchg
adc
test
xchg
out
xor
cmpsl
out
push
mov
js
pop
iret
repnz
fdivrl
scas
push
mov
or
jo
add
stos
xchg
rclb
sbb
shll
inc
add
pop
add
add
cmpsl
lods
shrb
mov
fisttpll
enter
jle
jl
jle
stos
dec
mov
popa
inc
xlat
mov
push
mov
out
mov
cwtl
cmp
cmp
push
inc
fs
jge
shlb
mov
push
filds
sub
xchg
cmpb
adc
repz
dec
add
outsl
xchg
add
rcll
clc
in
adc
mov
jnp
inc
call
test
ret
imul
aam
out
and
loope
adc
sbb
add
or
xor
jge
frstor
cmp
sbb
dec
sahf
or
shll
mov
filds
bound
cmp
mov
cld
and
outsl
xor
das
out
sub
or
jecxz
mov
sub
repz
insb
dec
push
das
fmull
dec
jne
and
pop
adc
add
sbb
xchg
add
insb
jns
xchg
pop
fisubl
mov
pop
cs
repnz
pusha
cld
imul
test
cmp
xor
lods
clc
daa
add
fwait
add
mov
loopne
in
sbb
mov
sbb
pusha
ja
call
push
or
mov
jecxz
mov
clc
mov
xor
xchg
sub
pop
int3
rcrb
stc
out
loopne
xchg
into
insb
inc
mov
cld
push
lea
outsb
cmpsl
into
or
call
cltd
jecxz
pop
xchg
mov
add
xor
in
mov
aad
rcrb
sbb
vmwrite
cltd
and
jnp
stos
popl
pop
push
fs
popf
fadd
es
arpl
sbb
icebp
lcall
aam
hlt
push
fs
xchg
cmc
mulb
into
subl
cmc
cmp
test
ud0
fcmovnu
mov
push
cmp
xlat
out
nop
mov
std
inc
sahf
fs
add
inc
lds
inc
push
leave
in
push
in
push
jo
mov
pop
rorl
aam
lods
insb
mov
adc
cmpsl
cmp
lcall
and
xchg
inc
in
rcr
pop
push
inc
repnz
jl
fsubp
add
sbb
sti
cmpb
xor
mov
ss
add
xor
add
test
add
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
clc
sub
jle
cmp
mov
rorb
jb
inc
loopne
popa
mov
std
dec
test
jg
adc
sub
stc
push
das
test
cmp
cmp
fcmovu
adc
mov
test
mov
fwait
shlb
insl
ljmp
sub
ja
fdivrl
imul
repz
popf
mov
jo
xlat
inc
pop
aas
and
pop
popa
mov
sbb
mov
inc
movsl
gs
mov
inc
push
in
pop
ljmp
je
popa
inc
inc
scas
jne
test
jge
je
push
hlt
cmp
cmpsb
pop
shrl
aad
aas
pop
mov
ret
jno
mov
mov
clc
lds
fidivl
aas
cmpsl
push
pusha
xchg
adc
sbb
and
inc
nop
cmp
mov
jns
loop
xor
imul
or
fidivrs
divb
faddl
push
scas
mov
or
fwait
mov
xor
xor
mov
push
pop
stos
push
cmp
cmc
cmpsb
or
push
loop
in
pop
stc
add
stos
hlt
enter
adc
inc
dec
pop
add
fidivrl
mov
loope
or
mov
in
push
or
jge
pop
hlt
pop
add
mov
pop
sbb
lcall
fnstsw
push
mov
cmpl
es
jmp
xorl
xor
fadds
loop
xorps
push
call
and
mov
in
int
lcall
scas
lea
sbb
add
pop
loopne
sbb
mov
sbb
stos
dec
ds
mov
sbb
test
push
mov
jge
iret
inc
mov
scas
mov
push
add
pushf
xor
push
ret
mov
add
mov
ljmp
dec
sub
xchg
mov
inc
jmp
jnp
mov
fs
adc
inc
fildll
xchg
pop
rcl
faddl
push
push
and
lock
int3
sub
aaa
push
sbb
test
in
xor
repz
fstps
jae
add
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
push
push
jle
cmp
jbe
sbb
xor
cltd
js
sub
mov
test
das
push
lds
dec
cmp
lea
fsubl
add
pop
aas
enter
js
xchg
inc
aad
cmp
js
mov
jno
int3
repnz
jmp
jbe
cli
cmpsl
das
lcall
shlb
or
jmp
cmp
mov
psubw
push
incb
jge
in
pop
test
mull
aas
jns
mov
push
movups
pusha
dec
cmpsl
js
pop
jl
adc
mov
popf
dec
int
xchg
cltd
rsqrtps
dec
rorl
fnstcw
pop
sahf
lock
push
add
ret
adc
cld
or
mov
push
test
ja
xchg
fsubl
push
xchg
push
int3
fdivl
push
and
cmp
inc
mov
inc
mov
xchg
push
mov
sub
sub
pop
int3
in
push
xchg
loopne
pop
in
fisubrl
inc
xor
xor
pusha
das
sbb
inc
fwait
mov
and
lock
sbb
mov
fprem
and
pop
movnti
mov
test
sbb
and
movsbl
inc
mov
mov
movsb
in
in
sub
imul
or
ds
or
xchg
andl
leave
xchg
lock
mov
aam
cmp
push
fcompl
imul
jae
mov
xchg
call
cmpb
nop
cmp
ss
inc
or
push
push
jb
add
dec
cmp
js
inc
cld
in
mov
mov
popf
ss
cwtl
outsb
jg
inc
sbb
shlb
aam
or
subb
data16
adc
icebp
pop
dec
pop
loope
pop
push
mov
inc
and
mov
hlt
pop
andb
rcr
inc
or
mov
add
js
adc
xor
push
sub
xchg
xor
roll
mov
sbb
jp
shlb
xchg
call
jnp
inc
add
add
add
push
add
add
shlb
jnp
inc
add
jnp
inc
add
add
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
add
out
jle
cmp
cmpsb
add
xchg
mov
out
jno
jl
sub
push
mov
je
test
mov
xor
push
test
imul
fcoml
out
jbe
or
popw
lret
jns
inc
loop
dec
xchg
push
das
gs
lds
jbe
test
repz
push
sbb
ret
fistpl
repz
xlat
in
sbb
push
push
cld
cbtw
push
ljmp
arpl
loop
mov
sub
inc
xchg
xor
mov
aam
ja
jne
cmpsl
cmp
pusha
fmuls
cmp
pop
pusha
outsl
mov
and
pusha
std
je
pusha
bound
pop
xchg
dec
lock
ret
pop
scas
xor
aaa
cmp
mov
xchg
and
xor
xor
gs
fisubrl
xor
jno
out
jnp
push
stos
ljmp
data16
jecxz
rorl
rorl
das
stc
movsl
xchg
fbld
sbb
xor
pop
push
push
xchg
push
icebp
add
lret
fs
daa
jne
sbb
repz
and
daa
and
sbb
mov
mov
mov
sub
or
stos
mov
popf
mov
out
lock
jecxz
jg
pop
and
and
inc
push
dec
movl
sahf
lods
sub
outsb
clc
xchg
ja
jg
cltd
push
sbb
mov
lret
add
rcl
pop
fsubl
fadds
pop
inc
push
and
add
movsl
cltd
cltd
pop
lahf
ret
fcoml
cmp
add
dec
lods
push
adc
xchg
mov
test
mov
mov
cmp
jl
nop
pushf
and
roll
outsl
inc
add
lea
pop
and
aas
dec
dec
fcomp
sub
fs
loop
push
lds
push
add
mov
adc
sbb
hlt
repz
sbb
das
fisubrl
jmp
cwtl
mov
ret
push
ds
pop
and
mov
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
leave
clc
push
in
jle
cmp
andb
pop
mov
inc
setne
sbb
pop
or
sbb
daa
jbe
xchg
and
cmp
add
ret
roll
push
ret
mov
repnz
jne
and
mov
mov
xorl
sub
jno
jo
xor
push
cmp
add
mov
movsb
daa
dec
or
dec
daa
lcall
sahf
add
scas
rclb
insb
out
cmc
incl
addr16
jno
xchg
pop
adc
add
repz
mov
shll
js
outsl
lret
repz
imul
xchg
xor
jl
sbb
xchg
mov
insb
fldt
mov
test
sub
pop
jge
outsl
loop
cmp
lret
andl
pop
and
xchg
xchg
push
jl
push
push
dec
dec
pop
outsl
rorb
or
sbb
or
mov
push
mov
stos
and
pop
icebp
push
ss
andl
mov
mov
dec
pop
lea
cmpb
or
gs
mov
xor
rolb
mov
push
mov
jl
mul
and
push
dec
in
or
shl
jge
lret
jne
and
sub
popf
xchg
imul
stos
xchg
dec
leave
pop
mov
and
jg
daa
jo
iret
leave
pop
outsl
lcall
xchg
fsubr
or
sti
mov
add
cld
enter
into
sub
adc
pop
xchg
stos
lods
adc
inc
mov
mov
rclb
nop
jne
or
jnp
xchg
or
out
jge
jns
push
push
xchg
nop
adc
sbb
pop
jbe
stos
cmp
dec
addr16
enter
aam
sbb
lret
xor
sub
sub
xchg
ja
pop
inc
popa
inc
pop
jbe
mov
mov
mov
lret
dec
pop
cmp
sbb
push
xor
inc
inc
in
push
mov
mov
sbb
xchg
jnp
aad
sbb
out
pop
inc
xchg
xchg
and
mov
rcll
push
mov
lods
loopne
push
or
mov
orl
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
aaa
sbb
aam
jmp
jle
jl
jle
mov
js
mov
pop
inc
mov
sti
fwait
xor
mov
xchg
push
mov
pop
sbb
testb
pop
or
cmp
pushf
and
das
cmp
cmp
popw
enter
lods
fbstp
dec
add
adc
mov
ljmp
idivl
js
sbb
test
repz
pop
rolb
mov
jle
xor
pop
mov
je
insl
inc
cmp
lret
jae
scas
jmp
xchg
sbb
mov
sub
loope
sbb
fwait
sbb
xchg
push
stc
popf
sti
dec
in
jle
pop
mov
sbb
nop
sub
push
jp
test
sub
mov
adc
sti
pusha
pop
cwtl
pop
outsl
add
stos
or
js
and
push
stc
popf
jae
jp
push
insl
clc
sbb
jne
xlat
sbb
pop
shlb
int3
jns
dec
and
push
mov
xor
fldt
fwait
mov
addr16
push
xor
xchg
xor
gs
je
ret
lods
mov
scas
xchg
add
inc
bound
jl
daa
movb
out
or
mov
lret
ds
push
hlt
mov
roll
in
sbb
fidivrs
inc
adc
lods
es
insb
bnd
pop
sub
mov
test
inc
xor
cmpsl
or
mov
jbe
dec
sbb
pop
test
or
shll
je
adc
fs
and
mov
in
adc
sti
bswap
flds
inc
dec
test
mov
mov
jne
pop
sub
pop
and
div
flds
pusha
test
scas
mov
jge
mov
mov
stos
sti
ret
into
test
shll
repnz
and
sbb
cmpsl
ret
sbb
add
cld
and
out
sub
xor
mov
fucomi
jge
insl
dec
call
jg
mov
add
xchg
jecxz
add
lahf
aas
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
dec
fadds
pop
les
jne
add
mov
ret
mov
cmp
ret
adc
fsubs
mov
sahf
sbbl
mov
scas
mov
pop
pop
adc
out
lods
ds
decl
hlt
add
dec
stos
sbb
mov
mov
into
aas
push
pop
dec
into
scas
sarl
push
faddl
add
repnz
test
popf
mov
and
add
xchg
lahf
dec
xchg
dec
push
adc
out
scas
jmp
push
jns
je
or
push
mov
jl
push
xlat
and
pop
pop
dec
mov
dec
jg
jbe
sub
pop
ja
cli
jae
inc
jbe
cmpsl
std
sub
outsb
gs
mov
fs
call
sarl
jle
xchg
test
mov
pop
xor
cld
push
adc
das
int
xlat
sbb
push
outsl
ret
arpl
ret
fs
inc
adc
mov
outsl
shl
pushf
fs
popf
mov
add
clc
sub
pop
imul
pop
dec
mov
mov
and
xchg
jge
popf
or
cwtl
fs
adc
mov
lea
repnz
jmp
sar
enter
fistps
lods
push
fcomps
or
dec
xchg
adc
or
or
pop
or
push
test
js
sbb
insb
ljmp
jnp
dec
mov
decb
pop
lods
movsb
lcall
popa
sarl
mov
ds
inc
fists
xorl
jecxz
repz
cmpsl
add
adc
sbb
test
add
inc
xlat
popa
lods
sbb
push
xlat
jno
cmp
or
mov
lea
cmp
pushf
stos
cmp
test
out
repz
daa
push
push
sub
cltd
mov
fmull
fs
enter
push
or
jl
lcall
cmc
and
inc
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
das
push
and
cmp
and
sub
jbe
into
push
mov
pop
adc
out
stos
mov
pop
lea
cmpsl
jmp
popf
jae,pn
pop
dec
ds
xchg
int3
jge
jne
or
or
push
mov
xor
adc
bound
mov
pop
in
cmp
movl
hlt
push
add
jmp
cltd
mov
in
mov
add
push
cld
ds
ret
test
testb
les
insb
iret
outsb
ljmp
xorb
mov
shl
pop
pop
xor
adc
pop
movsb
pop
and
or
or
cmp
std
outsb
insb
pop
shlb
xor
jne
sub
jo
cmp
jmp
stc
rcrl
sbb
adc
push
pop
iret
jb
gs
iret
not
mov
movsl
cld
add
pop
idivb
mov
jb
scas
bound
xchg
xor
fs
add
ret
lret
sahf
mull
mov
adc
and
mov
xor
nop
rclb
int
ds
movsb
mov
dec
mov
xchg
lahf
mov
into
inc
lds
dec
call
ljmp
in
jns
and
and
pushf
xor
fwait
aas
int
cmpsl
cmp
faddl
mov
int3
xorb
nop
adc
ret
sbb
les
or
or
scas
adc
fnstenv
cmc
popf
add
bound
rorl
jb
push
push
mov
data16
ret
cmp
mov
jmp
fildl
scas
mov
mov
fcomi
xor
adc
push
sub
popf
jp
adc
clc
cmp
sarb
stos
inc
std
mov
cmp
add
call
mov
imul
pinsrw
cmc
andb
rorl
sti
add
mov
xor
or
aaa
gs
dec
fdivrs
adc
mov
mov
ljmp
mov
imull
lcall
sub
imul
jmp
jno
push
clc
jno
jno
pop
repz
push
fs
mov
bnd
cmp
push
xor
sub
mov
jl
cld
and
or
ss
in
dec
fldt
into
mov
cmp
sbb
mov
aad
sub
les
dec
scas
mov
dec
nop
cli
or
push
or
inc
outsl
out
xor
push
out
rcll
mov
divb
pushl
ficoms
push
pop
idivb
inc
sarl
mov
ljmp
clc
dec
cmc
testl
jmp
cmp
in
sub
inc
mov
cmpsl
mov
cld
int
dec
sub
inc
add
sub
inc
mov
shl
cmp
cld
in
int
mov
nop
or
pushf
sbb
xorb
andb
sbb
cld
ret
push
jmp
into
out
rcrl
lods
fs
pusha
cmp
outsl
add
xchg
cmp
push
xor
mov
sub
mov
out
cs
dec
and
jg
test
cmp
cmp
push
sti
movsb
out
in
sub
mov
and
lock
fildl
dec
outsb
rclb
cmp
incb
push
jl
push
fs
fimull
jg
xor
pop
push
mov
scas
mov
mov
dec
mov
cwtl
jns
cmp
clc
out
add
mov
push
dec
mov
and
mov
pusha
pop
mov
dec
aaa
xchg
iret
pusha
push
notb
xor
dec
cmp
add
cmp
loop
ja,pn
rorl
pop
repz
pause
and
and
and
push
mov
fs
ret
xchg
push
pop
pusha
stos
inc
aas
imul
out
add
pop
add
ja
push
lock
aad
cs
in
xchg
movsl
dec
push
push
shrl
push
lea
mov
test
push
lret
ja
fstl
adc
add
or
iret
scas
lds
add
test
xacquire
mov
cmc
fdivrl
mov
mov
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
es
mov
lock
cmp
add
xor
add
fistps
daa
xor
pushf
push
shl
cmp
xchg
or
cmpl
cld
daa
xchg
or
packssdw
leave
scas
inc
imul
adc
dec
mov
dec
in
inc
enter
xchg
leave
inc
sub
mov
test
sbbb
jbe
mov
jbe
in
je
in
in
arpl
mov
sbb
xor
or
xor
pop
xchg
bts
jp
inc
stos
rolb
push
sub
push
subl
pop
pop
stc
push
xchg
add
sbb
xor
sar
sbb
repnz
les
icebp
mov
push
or
ficomps
int
fs
sbb
es
enter
add
int
fbld
popf
xor
fstpl
inc
push
cmpsb
out
cld
dec
adc
js
and
adc
jmp
or
stc
xchg
jp
push
pop
dec
xor
orl
jmp
fsubl
or
jecxz
pop
or
sbb
cmpl
pop
and
aas
enter
jmp
out
lcall
inc
out
lahf
xchg
es
mov
sarb
jb
xchg
out
inc
push
xchg
outsb
dec
ds
or
outsl
imul
data16
insb
mov
mov
mov
scas
mov
sahf
in
push
lods
mov
lret
sub
mov
hlt
rcrb
inc
sahf
addb
lock
ret
outsl
adc
jge
sti
mov
scas
dec
jnp
xor
lods
enter
arpl
pop
mov
sub
lods
leave
std
inc
sub
jl
aad
pusha
mov
sbb
mov
push
cs
mov
mov
xchg
push
rorl
dec
and
cmp
adc
ds
push
xor
iret
in
push
and
xchg
jge
inc
lcall
and
jge
test
pop
std
jecxz
jle
imul
addr16
std
repnz
xchg
xor
stos
cwtl
pop
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
shll
cmpsl
fbstp
jl
jle
pop
pushf
pop
shll
shll
inc
scas
mov
adc
clc
adc
jl
mov
mov
xlat
shll
loop
ret
add
scas
aas
mov
fiaddl
int
mov
jnp
xor
xchg
gs
sbb
xor
jae
lock
add
sub
cwtl
jae
insb
xor
jg
or
mov
std
in
cmp
ss
int
pop
cmp
sti
sub
sbb
popa
inc
test
mov
push
mov
and
scas
mov
xchg
mov
mov
ja
insl
ljmp
sub
cmp
sarb
mov
call
test
add
jae
aas
or
adc
push
pop
add
jne
adc
mov
jne
sarb
in
adc
jb
test
pop
inc
cwtl
or
push
arpl
lcall
pop
hlt
xchg
jg
dec
pop
dec
mov
in
mov
lret
and
mov
push
cmp
leave
pop
hlt
stos
sbb
dec
push
push
das
addl
and
pop
in
inc
cltd
dec
loop
mov
data16
aam
test
je
inc
mov
pop
cmp
loope
push
lock
imul
fs
out
out
jmp
cld
jne
rorl
sbb
pop
adc
outsl
nop
leave
fsubrs
xchg
flds
clc
xchg
int3
stos
pop
pop
movsl
jecxz
fs
inc
xor
adc
cmpl
imul
push
push
mov
lods
add
enter
mov
sbb
sarl
jle
sub
dec
pusha
xchg
icebp
scas
sbb
outsb
pop
add
dec
cmp
sti
mov
rorl
ja
lcall
cmpsl
cmp
add
ja
outsl
push
movsl
mov
pop
insb
test
xlat
lock
push
add
popf
adc
aam
fldt
cld
shufps
fsubrs
push
xchg
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
dec
and
jle
jl
jle
xchg
inc
xchg
jnp
pop
xor
mov
jns
ror
cmpsb
ret
push
xchg
pop
and
sub
bound
xlat
in
jo
pop
cmovl
ds
inc
sbb
jns
out
cmp
push
cltd
leave
lods
sbb
dec
jmp
and
rcrb
push
add
or
mov
stos
mov
insb
sbbl
andl
cmp
jb
in
movsb
pop
enter
xchg
fbld
jno
add
mov
scas
push
mov
pop
das
mov
sbb
xor
stos
outsb
dec
dec
cmp
lcall
js
lock
rclb
inc
fs
add
cmpsl
adc
pop
add
push
outsl
popw
pop
pop
xorb
test
je
enter
pop
lods
int3
ja
stos
arpl
sbb
push
adc
pop
sub
pop
cmp
xor
mov
pop
add
add
xchg
aad
mov
ja
aas
or
loopne
and
das
mov
sbb
lret
outsl
inc
iret
inc
addl
cltd
popf
mov
mov
movsb
ret
in
push
cmpsl
push
jns
scas
mov
sbb
cmp
adc
mov
mov
xchg
mov
out
xor
sbb
xor
nop
pop
and
pop
out
nop
cmp
icebp
cmp
test
push
shrl
cltd
dec
jne
adc
sub
and
pop
jp
jb
stos
lock
lods
pushf
mov
xor
pop
adc
and
std
movsl
lods
js
sbb
out
lcall
mov
sbb
mov
dec
je
insb
and
int
lahf
xor
inc
sti
pop
add
loop
xchg
pop
jne
push
push
mov
inc
cltd
lcall
push
in
mov
out
sub
mov
cmp
inc
add
xchg
mov
mov
jge
int
cmp
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
adc
jle
cmp
xchg
cmpsl
cmp
mull
lods
hlt
imul
add
rcll
movsl
sbb
jmp
jnp
fs
popa
aam
mov
lret
xchg
test
fstps
test
test
xchg
movsl
pop
pop
cmp
inc
xchg
xor
ficoml
mov
addl
and
cwtl
xchg
jns
decb
cli
mov
jle
lds
lods
pushf
jns
adc
adc
repnz
and
dec
out
mov
cli
xor
push
jmp
mov
ja
scas
inc
dec
popa
push
sub
fstl
lock
add
or
lock
outsb
and
add
es
push
sbb
mov
test
mov
mov
cmp
int
push
scas
insb
stos
mov
ljmp
ja
jno
push
jnp
mov
jmp
repnz
or
punpckldq
push
sub
jns
cli
mov
xor
cmc
add
ljmp
lds
mov
and
lods
inc
test
xlat
adc
or
adc
add
imul
xor
inc
jns
xor
xchg
loopne
and
clc
fldl
roll
outsl
cmp
int
cmpsl
scas
jl
mov
lea
fimull
sbb
mov
mov
es
push
pop
mov
mov
aaa
or
sub
mov
loope
jae
or
pop
scas
mov
mov
jns
inc
lret
rolb
add
cmpsl
mov
push
or
mov
call
gs
and
xchg
cmpl
push
in
movsb
in
or
addb
sub
hlt
and
notl
pop
enter
lock
xorb
repnz
insb
xor
adc
sbb
jne
and
cwtl
inc
shr
in
testb
xchg
inc
jmp
shl
push
pop
mov
add
mov
xchg
fs
sub
and
repnz
sarl
and
mov
or
xchg
cld
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
dec
cmp
jle
jl
jle
bound
jge
mov
ret
stos
data16
test
pop
jge
jle
leave
sbb
pop
push
sbbb
mov
sbb
arpl
dec
xchg
mov
inc
movsb
push
mov
testb
mov
loop
fwait
das
ret
mov
xchg
cli
mov
pushf
push
jle
xchg
paddusw
inc
cld
pop
adc
xor
push
jecxz
dec
fdivrs
cmp
cmp
aad
in
negl
inc
lock
ds
fwait
clc
sahf
arpl
push
mov
add
dec
fisubrs
xchg
jmp
out
and
sub
lcall
sbb
pop
inc
dec
out
daa
cltd
outsl
mov
add
shrb
sub
mov
inc
sub
fidivs
test
mov
xchg
rclb
les
sub
xchg
or
repnz
dec
adc
jb
loopne
dec
mov
mov
pop
mov
fwait
push
fildll
sub
xor
sub
stc
xchg
test
xor
xor
mov
pop
clc
ss
outsl
in
jecxz
iret
mov
ror
loop
pop
mov
add
lcall
aaa
popa
xor
pop
lahf
mov
icebp
push
cmp
imul
add
stos
bound
cmpsl
cmp
add
fwait
and
jl
cmp
dec
arpl
gs
add
xchg
lea
xor
aaa
int3
dec
inc
mov
iret
xor
repz
fcmovnbe
scas
nop
insl
bnd
dec
xor
iret
jno
out
or
or
xor
movsl
mov
push
imul
daa
jge
lcall
in
mov
es
stc
inc
fistl
js
jnp
or
xlat
aad
stos
pop
add
xchg
fisttps
xlat
mov
insb
jecxz
and
mull
enter
leave
xorb
jecxz
push
dec
mov
mov
scas
mov
addr16
mov
incl
mov
cmpsl
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
mov
jle
cmp
mov
enter
xor
leave
jecxz
or
xor
jo
mov
cmp
or
rclb
pop
push
mov
cmpsl
inc
adc
pop
ffreep
lock
xorl
xchg
fmuls
movsb
jp
mov
cs
repnz
repnz
ja
movsb
jmp
inc
inc
mov
push
lret
jp
clc
mov
sub
sbb
and
push
imul
mov
mov
cld
ss
in
sub
push
ja
mov
push
cld
push
test
inc
xor
xlat
cltd
pop
jmp
adc
mov
mov
aas
dec
dec
loope
and
aas
jno
xor
aaa
fisubl
pop
stos
jmp
or
sarl
fs
mov
jbe
lahf
or
xlat
cs
in
ss
fs
iret
je
in
mov
sbb
adc
popa
dec
dec
mov
jecxz
repnz
cmp
lock
mov
xor
mov
sub
push
inc
shrd
jg
and
sbb
push
stos
gs
je
rcll
jb
or
adc
es
mov
lahf
pop
cli
xchg
xor
jg
and
out
scas
hlt
pushf
push
mov
xor
xor
mov
sub
loop
fnstenv
xor
leave
mov
int
fdivs
xor
mov
cltd
fdivl
out
in
lea
clc
jl
push
sti
sbb
lea
or
pushf
aad
push
sbb
mov
dec
fisubl
jle
mov
push
loopne
daa
lret
xor
int3
push
repz
xor
rcrb
mov
cs
adc
mov
cmpsl
xlat
lods
mov
mov
aam
mov
push
sbb
in
mov
imul
es
dec
test
pusha
jg
outsb
js
movsl
popa
jp
push
ret
pop
sub
fnstcw
inc
js
mov
add
dec
xor
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
mov
cmpb
jl
jle
jae
popa
std
dec
push
in
xchg
pop
fimuls
pop
mov
leave
cld
mov
in
or
sahf
sbb
popf
mov
ret
decb
ljmp
lcall
sub
call
sub
or
inc
fucom
mov
and
rclb
decl
mov
pop
inc
out
jno
cmp
jl
call
ds
adc
sti
int
mull
jge
scas
mov
das
out
sbbl
insb
cmp
dec
and
mov
cmc
stos
scas
xchg
or
sub
ss
or
jb
loope
mov
pop
adc
filds
ret
jl
jne
ja
div
fisubrs
insl
loopne
xor
popf
xchg
je
cmp
add
fsubr
jp
sub
mov
aam
shlb
lahf
jnp
inc
sub
stos
psllq
mov
fmulp
pop
mov
imul
les
mov
scas
negb
jo
dec
sub
xor
pushf
cmc
movb
xchg
pop
cld
popa
xor
imul
sub
test
jmp
imul
sub
and
push
mov
jge
mulb
idiv
sbb
fstps
pop
mov
in
out
dec
rclb
mov
push
push
test
mov
int
sub
nop
push
iret
fisttps
lret
dec
mov
test
movsl
jmp
cmp
movsb
pop
mull
ret
sub
insl
in
add
pop
aaa
adc
sti
loopne
out
inc
mov
mov
fnsave
ss
jns
movsb
xor
push
pop
popa
mov
paddusb
push
inc
clc
es
cwtl
addr16
cmp
mov
rcr
jecxz
data16
jmp
mull
xor
or
outsl
lods
loope
cmp
mov
notl
imul
test
cmc
adc
mov
jg
or
mov
fwait
jb
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
xchg
arpl
cmpb
jl
jle
movsl
mov
push
mov
out
cmp
jne
lahf
push
cmp
nop
jle
push
xlat
testb
xor
into
fldl
fdivp
enter
mov
sti
cli
divb
lock
aaa
icebp
cmc
mov
mov
or
sub
sarl
jbe
xor
jnp
outsb
jns
insl
inc
cmp
lahf
add
or
or
ret
or
lcall
mov
pusha
jns
das
dec
xchg
les
mov
rclb
aam
sarl
fists
jne
mov
int
or
rolb
sub
mov
push
aas
mov
xor
rcrb
insl
in
add
mov
pop
shll
adc
repnz
mov
push
lock
je
xorl
mov
leave
icebp
dec
jecxz
aas
fldl
jg
add
adc
xchg
rcrl
rol
test
mov
sub
je
lret
adc
fsubrp
out
push
repz
jnp
lods
movsl
cmp
aam
or
xchg
cmp
sbb
pop
jbe
fwait
push
sub
test
mov
in
cmp
cmpsl
in
sub
and
sub
cmp
cmp
out
ds
nop
push
sub
xchg
cmp
stos
jnp
psubusw
pop
jecxz
xor
lods
lock
repnz
cmpsl
fbld
cmp
call
add
cmp
cmp
repnz
push
and
or
mov
add
daa
inc
jb
popa
dec
mov
and
movsl
dec
out
int3
inc
out
nop
fadds
sub
fcomps
outsb
sahf
adc
jno
aas
mov
push
dec
sub
into
sub
push
dec
mov
outsb
sub
lods
xchg
pop
and
imul
shlb
lods
nop
pushf
repz
out
inc
inc
pop
pop
ds
fstpt
out
or
xor
in
mov
int
je
ja
rol
mov
test
pushf
mov
push
adc
shr
add
add
mov
cwtl
mov
mov
cmp
mov
jle
jl
jle
or
push
insl
repnz
push
loop
dec
adc
mov
xchg
syscall
add
mov
les
call
bswap
das
lret
and
sub
sub
shl
pop
mov
ljmp
or
xor
push
js
pop
int
mov
aam
ffreep
inc
sbb
shr
sbb
add
in
and
mov
mov
cmc
pop
roll
pop
xor
pop
out
popa
lret
imul
xchg
or
push
stos
pop
sbb
adc
sti
adc
stc
aas
jnp
sahf
sbb
aam
add
mov
push
dec
loope
enter
nop
orb
lcall
cltd
jne
into
sub
lret
and
sub
sub
xchg
sbb
rcl
bound
mov
jbe
mov
call
clc
stc
rcll
pop
xor
jnp
adc
iret
nop
inc
in
daa
cli
mov
fidivs
mov
int3
sbb
or
mov
cmpsl
mov
cltd
loopne
repz
dec
cs
sub
mull
dec
jnp
icebp
sti
pushf
xchg
leave
ljmp
or
sub
subl
stos
mov
push
test
dec
pop
pop
fbstp
jle,pt
jb
pop
out
mov
push
js
fcos
std
repnz
int
dec
push
rcll
inc
fs
ljmp
stos
movsl
pop
aam
xlat
pop
int
es
sub
aaa
pop
dec
mov
imul
mov
adc
xchg
push
scas
mov
jg
push
push
xchg
aaa
cmp
gs
fdivrl
mov
jge
iret
fldl
loope
add
jle
cld
push
inc
ss
mov
push
orl
aas
mov
inc
adc
add
push
ds
notb
dec
cmp
jne
sub
and
push
push
mov
in
das
adc
es
fs
dec
add
ffreep
lods
adc
scas
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
push
pop
bound
jle
int
pusha
out
cmp
insl
xchg
loope
jle
pop
cmc
adc
push
in
int
addl
pop
fsub
mov
cmpsb
test
jl
repz
test
js
pop
ret
cmp
and
inc
mov
cli
sub
divb
or
xchg
test
cmc
imul
cmp
enter
imul
fiadds
insl
sub
loop
inc
mov
out
leave
adc
mov
dec
pop
and
jg
aas
or
aad
cmpb
in
int
inc
jo
in
adc
gs
mov
and
in
mov
xor
adc
in
test
addb
insl
mov
icebp
leave
std
mov
popa
jg
and
lods
xchg
sar
push
pop
jae
test
clc
or
or
dec
mov
pop
cmp
dec
in
xor
inc
lret
daa
and
lret
aad
iret
fidivl
sahf
cli
or
add
je
shl
mov
mov
inc
sbb
xchg
in
lds
out
iret
fisttpll
or
add
sbb
fistpl
lods
and
sar
cmovno
lcall
les
or
out
cltd
xchg
add
xor
rclb
push
jo
sub
sarl
cltd
mov
mov
insb
sub
fistpl
in
repnz
dec
loop
pop
int3
je
sbb
dec
or
cmp
mov
enter
repz
sub
insl
inc
testl
push
dec
pusha
mov
fs
push
repnz
pop
addr16
test
pop
push
inc
mov
sbb
mov
scas
dec
push
mov
push
sub
mov
ret
iret
loop
sahf
push
mov
xorl
pop
out
adc
mov
fimuls
sbb
mov
sbb
push
cmp
andb
mov
es
jl
cmp
movsb
lahf
into
mov
xor
cwtl
adc
pcmpeqd
mov
data16
jae
negb
aad
xor
push
sub
xchg
jmp
push
std
dec
sahf
push
push
add
cs
jecxz
mov
cmp
pop
xchg
pusha
movsb
test
or
lods
stos
fstpl
push
push
inc
push
pop
ret
jecxz
cmp
xchg
mov
pop
xchg
add
iret
test
repz
je
push
rorl
bound
mov
daa
pop
mov
popf
xor
bswap
dec
pushfw
jmp
insl
or
adc
mov
jp
sub
fld
or
pop
add
add
inc
pushf
jmp
xchg
mov
dec
jmp
mov
addb
gs
inc
mov
loope
xchg
prefetch
out
es
in
sbb
lock
insb
fs
mov
cmp
mov
test
mov
and
int3
cmp
lods
cmp
mov
push
out
mov
and
cmp
lret
jne
mov
xchg
xchg
dec
xchg
addr16
sub
call
add
sub
adc
or
jne
push
lret
and
movsb
mov
and
lods
fwait
es
lret
pushf
arpl
cmpsl
inc
jge
mov
xor
rcr
sub
adc
scas
or
jmp
xor
mov
mov
pop
sbb
enter
sub
loop
test
dec
cli
repnz
decb
call
out
sub
mov
pop
xchg
lods
mov
mov
cmpsl
cli
loope
cs
cmp
sbb
clc
jle,pt
xorb
mov
and
inc
cmp
cmp
mov
popl
std
cmpsb
lods
pushf
fdivl
mov
jg
mov
jo
rcr
hlt
imul
stos
test
add
cmp
inc
in
inc
xor
cmovle
push
dec
mov
pop
push
pop
jecxz
dec
sub
adc
test
pop
sub
jo
sbb
daa
push
or
xor
aam
and
int3
add
mov
cmp
sbb
push
stos
pop
jbe
fsubrl
das
in
lahf
xchg
mov
jl
cltd
cmpsb
jmp
jle
and
mov
jg
jbe
repnz
rcrl
fs
mov
in
inc
adc
sbbl
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
movsb
das
or
testb
jle
into
xor
popf
xor
das
cmp
mov
inc
ret
sbb
pop
cmpsb
push
mov
inc
cmp
into
pop
add
fldt
lods
inc
test
and
add
dec
adcb
dec
and
mov
out
mov
lcall
add
sub
rclb
push
data16
sub
cmpsb
xchg
ds
fsubrl
cltd
dec
cmc
jge
cmp
lea
or
dec
mov
push
insl
js
adc
orl
mov
push
xor
scas
les
or
fisubs
or
fcompl
or
lods
sub
add
out
lret
inc
outsb
xor
out
stos
orl
xchg
testl
divl
int3
loopne
sbb
xor
jp,pt
fcompl
or
out
das
fldcw
sbb
cmc
and
and
lcall
ret
jns
push
cs
add
xor
push
push
mov
cmp
jl
out
fsubrs
sub
mov
push
cmpsl
bound
inc
mov
mov
or
popa
ret
jp
mov
loop
sbb
or
cmpsb
fsubrs
mov
icebp
mov
mov
mov
push
loop
xor
sub
mov
fnstsw
adc
daa
mov
pop
xchg
sti
fwait
mov
ret
outsb
lods
cltd
add
push
push
in
hlt
push
aaa
lret
arpl
lock
popw
jns
adc
in
inc
int
adc
or
inc
ds
pop
sub
jl
lret
mov
popf
sbb
cs
test
fsubl
sbb
enter
xchg
adc
in
addr16
mov
fucomi
in
or
outsl
fisubrl
gs
insl
bound
lock
ret
loope
add
push
jl
divb
sub
cmp
dec
mov
cltd
lock
jae
cmp
adc
popf
fmull
icebp
jae
xchg
jnp
pop
cltd
mov
aad
inc
dec
cmp
cltd
xor
movsl
dec
xor
outsb
add
dec
hlt
xor
test
or
jae
dec
mov
xor
inc
mov
stc
cmpsb
loop
leave
push
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
jle
imul
jle
cmp
dec
cmp
sarl
pop
jmp
movsl
push
dec
mov
sub
or
xor
pop
cmpsb
pop
lods
jge
pop
pop
or
push
lret
bound
cs
sbbb
xchg
sbb
push
fistl
mov
outsl
cmpsb
dec
cli
xchg
adc
sbb
cmpsl
pop
nop
xchg
orl
add
fldenv
ljmp
cmp
sar
cli
sub
push
sti
test
jnp
cs
fwait
lahf
mov
mov
sti
lods
js
pop
cmp
loope
jno
andb
fdivl
ret
adc
inc
xlat
out
lds
xchg
fstpt
xchg
test
in
les
sub
gs
stos
cmp
dec
inc
push
xor
movsb
pusha
sbb
mov
fidivl
scas
sub
sub
out
jns
jbe
inc
lods
jae
pop
ja
xor
adcl
icebp
ss
stos
mov
lock
stc
dec
orb
or
jno
lret
icebp
mov
jp
or
mov
test
jbe
or
xor
mov
lods
adc
imul
clc
mov
dec
lea
repz
xchg
cli
loopne
mov
andl
aam
push
lock
popf
push
popf
xchg
insl
stos
sub
jmp
enter
sbb
into
xchg
sbb
out
and
lcall
xor
dec
dec
ficoms
push
sub
mov
inc
int
mov
in
mov
add
mov
aam
pop
pop
add
test
dec
rcrl
sarb
inc
pop
jno
lahf
loope
imul
clts
add
and
aas
flds
ds
shlb
xlat
jecxz
jno
dec
dec
mov
insl
popf
das
ror
sub
mov
jp
push
dec
sub
mov
adc
stos
cmp
frstor
daa
xchg
mov
enter
loopne
pop
xor
sub
mov
pop
push
les
xchg
or
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
dec
movsl
push
xchg
jle
jl,pt
jle
push
into
dec
sbb
loope
jle
or
xchg
sub
imul
jg
mov
daa
cmp
mov
pop
pop
jg
sub
daa
es
outsb
push
daa
push
cmp
pop
out
inc
dec
jnp
pusha
cmc
iret
push
cmp
gs
mov
mov
ljmp
in
shr
lcall
and
test
adc
mov
inc
xchg
xor
mov
call
mov
sahf
or
sub
sbb
dec
push
dec
aam
jb
cmpsl
pop
out
ret
jae
pop
dec
jae
outsl
pop
mov
pop
in
call
mov
and
fldcw
scas
add
in
jns
lret
lds
test
loopne
sbb
insl
idivb
mov
cmp
adc
mov
lret
sub
cmp
test
add
scas
mov
push
push
and
xchg
cmp
scas
popa
sbb
push
jnp
adc
cmp
jbe
adc
test
out
popa
movsl
outsb
mov
test
fstps
xor
push
mov
scas
push
daa
daa
orl
xchg
xor
test
cmp
fsubrl
mov
cld
cmp
cmp
mov
mov
xchg
sub
ja
stos
add
outsl
xor
and
push
loopne
inc
pop
aad
fnstsw
and
pop
inc
cmp
outsb
daa
fistpl
lds
pop
leave
lret
inc
mov
es
xchg
mov
testl
adc
adc
mov
xchg
push
jbe
sub
lcall
jmp
sub
das
adc
test
fisttps
pop
mov
loop
js
leave
aam
mov
dec
sbb
push
arpl
cmp
sub
push
xchg
xchg
sub
scas
jle
mov
cmp
aad
or
les
repnz
dec
mov
xor
jmp
mov
mov
xor
add
jmp
orl
imul
cmpsb
jne
cmp
jle
or
mov
and
xchg
jb
nop
and
call
cmc
ljmp
push
xor
pop
outsb
sub
add
repnz
daa
lods
xchg
mov
mov
sbb
push
pop
lock
pop
pop
jne
mov
dec
addr16
iret
out
jl
mov
xchg
jp
fdivrs
push
mov
imul
test
lea
adc
movsl
mov
jg
mov
mov
hlt
mov
or
hlt
std
test
leave
and
nop
iret
adcb
bound
or
adc
into
imul
mov
mov
push
aas
lcall
repnz
push
pop
sbb
add
aas
sbb
inc
jge
add
in
hlt
xor
aas
inc
aas
js
repz
xor
lcall
mov
sbb
sub
xchg
and
xchg
push
mov
daa
and
cwtl
mov
dec
sbb
xlat
push
in
andl
or
das
xchg
add
sub
sarb
jb
adc
cli
push
pop
inc
iret
cwtl
sarl
sbb
loope
leave
inc
lahf
test
ds
pusha
in
imul
lret
adc
out
icebp
cli
sub
daa
pushf
push
add
jbe
in
mov
push
test
rcrb
ret
dec
inc
pop
repnz
pop
test
push
and
aam
xor
push
loope
pushf
sti
loope
out
nop
adc
punpcklbw
and
in
xchg
and
movsl
sbbl
pushf
shlb
sub
mov
sahf
dec
popf
sahf
imul
jecxz
and
aam
cmpsl
and
push
nop
mov
jecxz
xor
or
cmp
cmpsb
pop
sub
inc
gs
or
outsb
neg
jbe
mov
fdivrs
clc
scas
jp
outsb
or
loope
leave
stos
cmp
pop
dec
lock
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
pop
pop
je
mov
subb
out
dec
popf
in
js
sbb
mov
stc
xchg
addr16
mov
jmp
fs
push
repnz
adc
and
in
mov
push
test
push
push
enter
sahf
lahf
ficompl
push
push
test
rolb
jl
adc
out
sub
movsb
pop
test
insb
inc
aam
sub
movsb
lea
roll
dec
mull
in
inc
or
mov
cld
push
pop
pop
stos
test
and
and
aas
jmp
loopne
xchg
mov
das
loop
pop
int3
push
inc
fs
jg
andb
xor
mov
movswl
notb
mov
call
sbb
fisttpl
and
out
jecxz
outsl
or
fsts
inc
shlb
addr16
adc
cmp
test
xor
leave
mov
roll
mov
xor
loope
adc
pop
dec
mov
out
icebp
inc
jmp
cmp
xchg
jmp
dec
in
loopne
jmp
or
dec
and
push
insb
xlat
mov
enter
aas
roll
out
or
inc
jle
xor
mov
das
xor
xor
add
xor
int3
repz
jbe
and
push
lcall
jno
rcrb
idivl
inc
mov
sub
addr16
pop
fists
repnz
out
xor
stos
ds
inc
cmc
add
push
mov
leave
mov
mov
in
add
push
dec
xchg
test
movsl
notl
lea
mov
lea
inc
stc
fs
pushf
std
loop
sti
es
cs
push
xchg
icebp
xorb
cltd
mov
push
call
cli
xchg
mov
sub
pop
push
adc
push
mov
pop
fidivl
leave
or
xor
sub
loopne
xchg
inc
ja
in
mov
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
testl
jg
jle
rol
fistpl
lahf
in
nop
outsl
dec
mov
into
movsl
repz
lock
xchg
xlat
push
add
cwtl
inc
loope
or
call
mov
inc
jbe
add
in
xor
cmp
iret
dec
pop
add
jmp
xchg
jge
push
andb
add
pop
pop
dec
loopne
sub
out
cmp
and
into
jge
sbb
cmp
rcrb
imul
fwait
xor
sarl
outsb
ret
or
jmp
shlb
inc
add
iret
jle
push
mov
mov
cmpsb
stos
subl
mov
sub
dec
out
cli
out
out
pop
mov
lea
adc
movb
xchg
sbb
jbe
daa
xor
jo
call
leave
mov
iret
dec
repnz
adc
xchg
cmc
sbb
les
or
and
in
std
fldl
gs
test
mov
xchg
adc
jb
pop
mov
adc
jnp
imul
jbe
test
divl
hlt
push
popf
loope,pn
inc
push
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
push
popf
jle
adc
jle
xchg
jns
cmp
out
pop
loope
sbb
xor
fwait
and
cmp
adc
adc
adc
jno
inc
shl
lods
bnd
in
xor
mov
pop
inc
pop
insl
fistps
cltd
adc
roll
icebp
aad
int3
test
pop
loopne
jb
xor
mov
rclb
inc
rorb
dec
cmpsb
bound
aas
cmp
sbb
aad
xor
pop
push
outsl
push
and
leave
decb
pop
push
repnz
add
push
fnstenv
cmp
mov
inc
mov
lret
push
je
sbb
fnstenv
into
ret
bound
movl
mov
and
lods
int
outsl
repz
jo
dec
lahf
fldenv
dec
inc
mov
cmc
inc
and
push
jno
clc
mov
or
cmpsl
adc
std
loopne
fcoml
pusha
fcmovne
push
fnsave
sbb
call
fwait
push
xchg
or
cs
cli
pop
adc
clc
push
jne
cmp
inc
push
loop
mov
push
lods
fs
scas
lds
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
mov
daa
push
lcall
test
mov
in
icebp
lea
add
aaa
mov
out
popf
sbb
stos
adc
xchg
gs
out
or
aas
cwtl
fsubrl
test
sub
ljmp
push
outsb
sti
or
sub
mov
icebp
loopne
pop
hlt
and
push
sbb
or
bound
lods
loopne
push
mov
sbb
rcrb
jecxz
and
mov
dec
or
popf
mov
and
sub
aad
pushf
add
add
xor
add
filds
cmp
loopne
std
sub
je
loope
jmp
fisubrs
and
mov
les
imul
fs
scas
adc
nop
popa
or
adc
lret
push
inc
fcompl
popa
loope
hlt
cmpsl
cmp
cmp
out
icebp
icebp
inc
adc
daa
aam
decb
jecxz
dec
pusha
xor
sub
xor
lahf
mov
fs
xchg
push
push
inc
add
pop
lret
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
push
out
add
cwtl
jle
adc
jle
and
ss
in
int
xorl
push
popa
sar
cli
cmp
or
fdivl
jb
push
jl
icebp
mov
dec
call
mov
push
add
or
mov
mov
fwait
or
inc
push
dec
jns
mov
sahf
push
mov
pusha
push
inc
jge
cmp
xor
lea
jge
sbb
mov
jno
push
repnz
sbb
enter
adc
clc
fimuls
and
stos
mov
and
mov
cs
mov
into
pop
aam
mov
sbb
or
stos
daa
fidivl
sbb
dec
icebp
and
loopne
rcrb
das
xor
lea
add
movsb
add
call
sbb
and
sbb
adc
rclb
sub
int3
push
mov
cwtl
push
mov
fisubl
mov
ret
in
outsb
mov
insb
mov
adc
rorb
clc
iret
shrl
imul
xchg
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
mov
jle
jg
jle
mov
int3
sbb
sub
inc
les
push
xlat
loope
outsl
in
adc
inc
or
mov
inc
xchg
in
sbb
or
mov
hlt
xchg
scas
ljmp
out
iret
fimull
clc
popa
in
cld
icebp
jmp
into
popf
enter
cmc
popa
xor
or
fidivs
xor
xor
inc
leave
cld
repz
jbe
push
jmp
push
jne
in
ljmp
xchg
loope
aad
lea
push
mov
ret
in
mov
and
loopne
ret
mov
sbb
call
pop
call
ljmp
dec
rcrb
or
insb
movsl
inc
mov
out
mov
lds
cltd
mov
incb
cmp
xor
or
mov
insl
mov
dec
pop
mov
or
test
dec
dec
inc
dec
stc
xorl
xchg
xchg
in
outsb
mov
lret
and
inc
or
icebp
push
add
mov
sub
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
mov
pop
mov
push
cmp
add
les
adcb
mov
pop
ja
inc
add
push
in
daa
adc
sub
jl
ret
push
fs
jb
out
cmp
jne
sub
jp
xor
xor
cmp
rorl
xchg
cmp
pop
mov
mov
xchg
xchg
xor
mov
jb
es
inc
lea
mov
retw
je
mov
sub
rorb
add
ljmp
mov
push
sbb
jbe
inc
dec
or
sbb
push
push
mov
cltd
inc
cmc
notl
enter
cmp
test
test
jmp
xor
dec
or
loope
gs
xor
mov
pop
test
mov
mov
iret
leave
test
in
sbb
pop
xor
mov
or
mov
inc
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
jl
ret
jle
adc
jle
jne
ficoml
ficomps
mov
xchg
es
sub
sbb
das
mov
cmpsl
push
outsl
call
jle
cmp
mov
dec
sub
sbb
cmp
icebp
loop
leave
js
dec
jns
aad
push
loop
popa
xchg
mov
and
lods
xlat
mov
pop
in
movsl
je
mov
imul
inc
nop
lock
inc
xor
and
push
in
sbb
mov
fidivrl
lcall
sub
xchg
ret
ffreep
ds
dec
rolb
push
mov
adc
cmc
add
adc
mov
jne
pop
out
xchg
orl
jl
xor
or
enter
loop
sarl
aas
add
sarl
insb
int
pop
xchg
xor
mov
jnp
fstpt
or
xchg
aad
arpl
mov
data16
scas
into
sahf
sbb
fimuls
mov
inc
xor
pop
adc
adcb
mov
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
loope
movsb
jle
adc
jle
bnd
jae
jnp
out
iret
dec
fs
movsl
scas
mov
xchg
adc
aaa
adc
mov
das
mov
lahf
xor
jne
clc
sub
sbb
mov
jbe
sub
mov
mov
std
leave
sbb
push
and
mov
mov
loop
arpl
je
jnp
push
sbb
dec
dec
movsb
or
inc
cmp
into
push
mov
in
aad
xor
dec
adc
aas
aaa
out
hlt
nop
add
cmp
sbb
ds
ljmpw
and
enter
mov
mov
ret
jge
jmp
sbb
and
scas
jno
test
pop
xchg
mov
pop
mov
inc
jno
push
test
nop
mov
jge
sbb
icebp
icebp
rorb
adc
addr16
adc
sub
push
call
mov
pop
adc
fmull
stos
xchg
or
xchg
inc
insb
and
dec
xchg
aaa
test
or
xchg
jno
cmp
and
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
es
cli
lcall
jle
push
repz
pop
sahf
in
lock
in
inc
sbb
ret
fistps
mov
out
lcall
call
jae
jge
aad
sbb
pushf
sub
jno
dec
aas
adc
pop
arpl
fidivrl
cmp
xchg
int3
sbb
aam
ffreep
sub
popf
fimull
repz
jle
xchg
adc
into
stc
ja
push
sub
adc
push
loopne
mov
in
fwait
bound
cmpsl
add
loop
mov
mov
ljmp
dec
addr16
jle
fwait
mov
scas
fmull
jl
ret
mov
jg
sti
in
mov
out
aad
inc
jle
aas
stc
test
pop
dec
and
gs
xchg
flds
packsswb
fstps
jae
mov
cmp
in
dec
scas
mov
cli
mov
mov
adc
sbb
jns
in
push
mov
add
jbe
push
rcll
mov
sub
or
mov
fs
jmp
push
fimuls
mov
mov
add
cmc
xorb
cmp
loope
std
mov
jno,pt
popa
iret
fnstenv
rol
and
lea
cltd
mov
mov
mov
aad
mov
sbb
aaa
lds
add
in
sbb
loope
mov
test
fldl
adcb
mov
and
mov
sub
cmpsb
int3
push
call
stos
sub
mov
xchg
fstpl
and
mov
bound
cmpsb
lea
sbb
test
add
pop
stos
sub
mov
test
std
lods
push
mov
ret
shll
inc
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
ds
stos
hlt
in
sbb
adc
in
xchg
lea
fldcw
mov
popa
int
inc
push
jge
mov
ss
sub
pushf
rcll
add
sbb
or
les
test
idiv
daa
fiaddl
insb
add
scas
mov
clc
jmp
xor
es
pop
lcall
mov
movsb
add
inc
repnz
leave
sub
and
add
and
shl
mov
xchg
dec
mov
inc
lcall
cmp
arpl
mov
push
push
movsb
in
and
movsb
pop
xor
repnz
stos
insb
inc
add
add
jp
pop
ficoml
sub
rol
das
in
xor
xor
test
xor
les
mov
push
sub
int3
sbb
js
cmp
sbb
pop
xor
inc
add
or
loop
push
inc
xor
insb
arpl
mov
loope
and
int
fistl
lds
iret
or
sub
rolb
fs
push
out
pop
add
insl
cli
scas
jb
gs
jns
into
cmp
sarl
push
jbe
fs
cmp
lods
and
out
cmp
lock
enter
ja
fnstcw
cmp
cmp
mov
addl
in
out
xchg
xchg
or
adcb
sbb
repz
orl
vshufps
push
sub
dec
xor
xchg
mov
and
inc
xor
arpl
les
add
add
mov
lods
call
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
dec
dec
mov
jle
jmp
or
jae
rcrb
and
or
orl
xchg
mov
sahf
xor
dec
or
sbb
xor
add
popa
dec
push
int3
push
out
lea
pop
cmp
and
cs
imul
mov
test
stos
psrld
icebp
adc
popa
lcall
dec
mov
dec
ljmp
xor
and
add
inc
pop
aad
out
mov
stc
std
iret
fists
xchg
jne
mov
ffreep
mov
mov
pop
add
adc
lcall
mov
jle
loop
xchg
push
push
add
loopne
adc
xchg
xchg
imul
sub
iret
jge
mov
pop
dec
popa
out
adc
daa
adc
sub
in
adcb
or
js
into
daa
cmpsl
rcll
dec
push
inc
xor
pop
das
stos
push
mov
fstps
jo
mov
clc
js
gs
pop
xlat
movl
push
ss
loope
loop
xchg
xchg
pop
fstps
xor
insb
cmp
sahf
hlt
push
pop
outsl
jge
xor
out
int3
das
push
js
jmp
xor
jl
daa
int3
push
add
jnp
jmp
sbb
call
sub
fildl
mov
pusha
mov
flds
outsl
mov
mov
in
ret
rcr
mov
mov
out
mov
adc
inc
flds
movsl
xchg
push
lods
xchg
sub
jp
adc
mov
mov
xlat
call
inc
sti
rolb
adc
aad
or
insl
sbb
fcoml
or
and
subb
add
cmp
jmp
jmp
xor
mov
mov
ss
add
imull
pop
mov
es
and
mov
fnstsw
or
cmp
in
rcr
ss
add
rorl
insl
fldt
mov
daa
push
adc
arpl
subb
loope
je
mov
test
inc
sahf
test
lea
cli
adc
jns
repz
fs
adc
hlt
and
ds
pop
sbb
insb
scas
roll
loop
add
int3
lcall
cltd
and
sub
js
into
inc
iret
xchg
fadd
or
mov
xchg
adc
and
push
or
je
pop
enter
mov
movsb
gs
push
pop
arpl
xchg
sbb
fdivrs
xor
rol
data16
xchg
push
cmp
dec
mov
or
ds
add
jns
fildll
lods
cli
aam
push
ret
stc
fistpll
cmp
imul
pop
push
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
icebp
aam
jle
jl
jle
mov
jae
lahf
std
xorl
es
scas
jge
out
orl
clc
lret
shl
xchg
or
sar
adc
push
test
inc
out
mov
mov
add
push
popf
sub
aam
xchg
pop
hlt
fsubrs
xchg
rclb
xor
iret
popf
mov
cmp
fs
jae
mov
jbe
sbb
testl
mov
cmc
xor
leave
mov
mov
scas
jns
sub
pop
xor
outsb
fnstsw
sub
lahf
adc
hlt
inc
add
insl
jne
mov
nop
lds
scas
cmp
ret
mov
and
pop
adc
xor
sbb
in
and
push
jp
ds
jle
fwait
lds
arpl
inc
inc
mov
scas
ljmp
std
in
aam
aad
rclb
jae
pusha
bound
bound
push
loop
push
adc
inc
xlat
cmc
lods
jge
mov
xor
mov
aaa
dec
aad
add
outsb
xchg
aas
lret
dec
push
fsub
add
insl
pusha
rcr
jae
ret
insl
cltd
insl
paddd
mov
jmp
or
jp
test
lret
sub
ja
lods
push
stos
das
ja
push
sahf
xchg
lods
test
push
mov
test
addl
js
ss
nop
es
fnstenv
leave
adc
lahf
jl
and
ret
fdivrs
inc
sarl
lods
adc
stos
pop
lcall
inc
iret
lahf
jns
aaa
sub
xchg
in
and
aam
popf
cmp
or
cmp
jp
fsubr
add
push
dec
add
push
stos
sti
jo
pop
sub
xor
lcall
and
scas
and
pop
mov
outsl
xchg
inc
mulps
mov
addr16
inc
lcall
test
inc
or
daa
ds
xor
cmp
mov
scas
nop
adc
jae
or
aaa
jg
fidivrs
out
sbb
xor
in
jo
in
popf
out
into
ljmp
sbb
movsb
cmp
add
cltd
adc
ljmp
add
cli
cmp
clc
cltd
inc
xor
sub
lea
mov
dec
fdivs
push
xchg
pop
or
lcall
lods
sub
inc
outsl
xchg
jp
std
inc
fs
call
jmp
sub
lods
dec
out
mov
inc
push
jo
sub
xor
aas
jnp
sahf
sti
sbb
fisubs
icebp
xor
adc
std
fsubs
or
cmc
stos
inc
sbb
loop
sbb
outsl
in
fadd
xor
cwtl
popf
scas
cmpsl
xchg
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
mov
jl
jle
outsb
dec
or
or
in
outsl
cmpsl
xor
pushf
push
ret
adc
push
adc
cmp
loop
cmp
pusha
lods
rclb
loope
outsl
imul
pop
sbb
inc
adc
ret
cmpsb
push
ss
add
mov
or
dec
cmp
push
xlat
test
cmp
loope
inc
xor
pop
inc
pop
sub
packuswb
fstp
pop
pop
ja
aaa
push
jo
inc
push
push
mov
mov
loope
outsl
daa
loop
mov
andb
pushf
push
lcall
push
mov
add
mov
scas
imul
pop
test
fstl
mov
lea
lock
mov
rcr
dec
xor
or
jmp
popf
pop
insl
sbb
daa
xchg
sub
out
sub
dec
and
inc
mov
iret
iret
dec
aaa
sar
jg
in
sub
pop
lea
sarl
mov
add
jge
sbb
xor
xor
ror
nop
dec
cld
bound
add
daa
jb
adc
mov
xchg
and
cmpsb
sbb
cmp
addr16
cwtl
mov
lds
dec
mov
push
xchg
dec
sbb
pop
add
push
out
push
sub
imul
popa
push
int3
push
xchg
add
adc
icebp
xchg
aam
lods
push
or
cli
shlb
dec
in
ret
jg
xchg
inc
mov
mov
pop
sub
mov
fadds
daa
push
ja
mov
ljmp
dec
popf
movzbl
pop
mov
int3
push
das
jmp
test
das
adc
leave
test
cmp
idivb
pop
jno
push
in
jge
add
addr16
dec
dec
outsl
or
or
aas
fmuls
cmpsl
add
stc
ds
sbb
jnp
les
mov
out
add
and
lahf
adc
and
dec
mov
xchg
arpl
nop
scas
in
mov
test
rcrb
test
pop
test
pop
mov
push
hlt
mov
aaa
jecxz
pushf
push
testl
rolb
xchg
hlt
imul
aam
shlb
fdivr
add
jg
mov
mov
or
lds
popa
inc
sbb
ljmp
push
push
pop
scas
push
xor
andb
lahf
lea
pop
call
add
daa
pop
adc
out
roll
xchg
mov
pop
mov
sahf
mov
dec
es
xchg
call
subl
les
pushf
sti
and
pop
push
or
movsl
icebp
std
mov
outsb
lret
and
and
sbb
mov
fisttpll
xchg
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
cmpsl
adc
jl
jle
scas
or
scas
xor
mov
jmp
add
pop
js
insl
fnsave
push
jo
sbb
sub
mov
add
jbe
fwait
cltd
sub
imul
add
mov
rorl
mov
mov
shll
in
push
ss
icebp
rclb
dec
ljmp
sti
dec
adc
rorb
int
sar
or
frndint
repz
icebp
andb
push
addr16
pop
push
push
cmp
ljmp
insl
les
adc
leave
jne
push
xor
fisttpll
add
add
mov
imul
call
iret
mov
sbb
inc
or
enter
addb
sbb
or
call
mov
mov
sbb
fidivrs
mov
movsl
rolb
jp
neg
or
lahf
mov
mov
xchg
lods
orl
mov
outsb
sti
daa
cmpsb
test
subb
push
imul
arpl
cmp
cltd
rcl
fsubl
mov
mov
rcll
xor
cwtl
add
jl
insb
pop
outsb
jle
sub
add
inc
out
cs
cmc
hlt
inc
lods
sub
cltd
cmp
insl
sbb
add
push
or
fcmovbe
ficoml
mov
add
scas
push
dec
cmp
out
enter
jnp
dec
out
adc
shrb
adcl
cmp
mov
bnd
xchg
stos
fcomps
sbb
orb
and
dec
dec
arpl
leave
mov
loope
cwtl
fcmove
es
rclb
ljmp
movsb
mov
jno
imul
and
and
jno
shlb
sbb
mov
adc
adc
mov
loope
push
fldl
test
xchg
cltd
xor
mov
loop
out
out
sbb
dec
cmc
sub
lret
fidivs
dec
ss
in
pushf
scas
xchg
mov
push
push
test
dec
mov
inc
movsb
add
sahf
stc
popf
xchg
xchg
dec
loopne
jae
sub
and
cmpsl
scas
fs
push
out
dec
xchg
jne
iret
inc
sti
jbe
xchg
outsb
xchg
pop
shrl
mov
sub
push
out
adc
or
dec
jg
pushf
sbb
test
dec
mov
dec
jmp
add
sahf
stos
add
ret
xchg
push
and
push
shlb
lods
mov
out
loop
loopne
sbb
jno
xor
jge
pop
and
and
sbb
ret
sub
cs
mov
inc
scas
jecxz
into
adc
imul
add
scas
aam
inc
or
sarb
jmp
or
pop
jno
xchg
add
in
fidivs
jl
jle
in
or
popf
jg
adc
jb
jle
and
imul
cmp
xchg
sub
mov
ret
dec
pop
sub
gs
aad
jp
cwtl
push
add
pop
cli
pop
cmpl
ss
mov
xchg
inc
cmc
push
call
gs
pop
loop
lods
dec
scas
and
dec
out
shrl
sbb
sbb
cmp
jl
jbe
inc
std
add
cmp
rcrl
sbb
inc
push
dec
bound
mov
mov
jmp
pop
mov
lods
mov
sbb
cltd
sbb
out
adc
outsb
pop
xor
out
and
push
inc
dec
jb
dec
loop
push
dec
or
cld
cli
shrl
mov
ret
add
xchg
outsl
mov
push
fdiv
jg
mov
mov
push
mov
jmp
adc
sub
repz
inc
ds
jg
idivl
sarl
adc
je
xor
stos
inc
sbb
imull
jnp
adc
lret
fstl
jl
jbe
xlat
cmpsb
push
outsl
xchg
mov
pop
jns
dec
ljmp
ret
mov
mov
imul
pop
mov
pop
cmp
mov
add
dec
lock
test
adc
push
dec
lret
push
cmpsb
sub
je
or
pop
notl
je
sub
inc
add
xlat
sarl
dec
js
sub
dec
add
mov
jo
pushf
mov
gs
cltd
add
popf
rcll
push
or
outsb
and
es
ja
fsub
jae
subl
mov
rorl
movsb
outsb
daa
pop
lods
rol
cmp
fwait
std
pop
mov
fldenv
inc
inc
rcll
adc
inc
xchg
pop
jmp
dec
inc
and
and
adc
pop
repz
adc
sahf
pop
push
bound
fcomps
pop
aas
push
xchg
push
cmp
or
pop
ucomiss
fildll
cmc
lret
adc
pop
and
and
jns
adc
push
mov
arpl
xchg
mov
sti
jg
leave
sbb
ss
mov
divl
and
ja
fistps
cwtl
movsb
jg
sbb
xorb
ja
mov
orl
push
jns
stc
xchg
xor
dec
out
gs
mov
outsb
fdivl
iret
aam
adc
sub
pop
repnz
into
sarb
adc
cld
jle
lret
das
std
pop
xor
aam
call
shlb
leave
pop
sub
adc
push
sti
push
jmp
dec
std
or
add
fadds
mov
ljmp
dec
test
dec
push
je
int
mov
negb
icebp
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
pop
scas
pop
fdivl
jle
lods
outsb
sahf
push
inc
testb
rcrl
shrl
int
adc
jb
mov
rorl
pop
adc
mov
into
ljmp
cmp
fisttps
nop
mov
movsb
xor
and
pop
or
dec
stos
dec
roll
xor
ret
xchg
cltd
scas
mulb
movsl
adc
iret
stos
sbb
dec
mov
cmpsb
inc
xchg
in
and
pop
into
pusha
lock
jns
subb
test
roll
hlt
sbb
aam
pop
in
iret
cltd
mov
cmc
mov
out
adc
pop
cmpsb
inc
test
push
imulb
sahf
and
orl
fbld
test
ljmp
pushf
adc
scas
mov
das
jmp
repz
adc
mov
xchg
cli
mov
cpuid
jmp
stos
pushf
or
inc
jmp
outsl
jne
and
sbb
pusha
mov
outsb
adc
dec
into
adc
fucomip
inc
outsl
push
pop
ret
shl
inc
aaa
dec
inc
sub
mov
daa
mov
xor
jl
popa
repz
push
ds
movsb
and
fisubrl
loop
ss
rorl
scas
mov
out
insl
and
pop
mov
cmpl
and
fidivl
vmread
sarb
loope
xchg
sbb
leave
mov
and
test
mov
cs
pushf
mov
xchg
loopne
sbb
inc
mov
clc
adc
shl
adc
jmp
or
cmc
ss
shrl
jbe
std
lods
jns
cld
and
js
ljmp
gs
scas
add
push
jnp
sbb
jge
ret
movmskps
cltd
adc
jo
inc
lahf
fimuls
sbb
ret
fdivrs
scas
mov
xor
dec
dec
dec
jle
shl
jo
adc
xchg
lods
mov
imul
pop
cs
repnz
test
sbb
es
adc
orb
in
add
pop
push
orl
adcl
or
xchg
mov
mov
and
inc
cwtl
enter
cmp
cwtl
jo
adc
or
sbb
mov
xchg
mov
out
or
dec
in
daa
lods
js
popf
jge
out
or
lret
mov
out
lea
leave
mov
das
popf
pop
divl
repnz
mov
lea
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
push
jecxz
es
lret
fld
and
loope
mov
mov
push
pop
insl
inc
test
rcll
add
dec
dec
xor
int3
rol
aam
xor
jecxz
or
lcall
mov
xchg
push
mov
inc
cld
pop
push
inc
and
jnp
jae
dec
repz
xor
in
inc
jbe
out
xor
arpl
mov
stc
inc
cld
and
push
xchg
xor
xor
and
loop
scas
sbb
icebp
mov
xchg
mov
xor
fwait
outsl
dec
movsl
repz
jae
clc
out
mov
push
cmpsb
xchg
inc
filds
mov
call
push
mov
addr16
jbe
xor
xlat
fwait
shl
and
sub
nop
sub
pop
lcall
sub
test
xchg
mov
outsl
daa
arpl
dec
and
repz
sahf
mov
rorb
ljmp
jns
sub
fisttpl
sbb
mov
inc
lods
pop
in
lret
cmpsb
rol
adcb
pop
jge
mov
push
pop
and
mov
movsb
xchg
mov
loop
xchg
push
rclb
test
and
inc
cli
xlat
les
orl
and
sbb
lret
add
adc
idiv
inc
pop
and
test
cmpsb
and
insb
or
cmp
fnclex
adc
loop
inc
pop
negl
ljmp
fwait
mov
push
lret
adc
rolb
jecxz
mov
adc
add
int
push
in
or
or
roll
xor
adc
inc
stc
imul
out
rclb
rol
jge
push
pop
fsubrs
sub
enter
sub
pop
sub
lea
in
mov
out
cmp
sti
sub
scas
mov
sbb
stos
ret
mov
adc
imul
or
cmp
and
xchg
movsb
ret
out
jge
stos
out
mov
aas
imul
add
testl
std
xlat
int3
and
mov
mov
xor
int
out
ret
je
pop
leave
add
addb
adc
daa
mov
fwait
xchg
adc
jnp
imul
cmp
cmpb
lret
stos
call
and
xchg
in
xchg
pop
sti
dec
fsubrl
clc
xor
sub
pop
adc
jmp
add
fdivl
lock
xchg
pop
pop
mov
and
scas
jl
jle
push
push
cli
sub
mov
jge
adc
push
insb
cmpsb
mov
nop
sub
push
loopne
xor
xor
add
fistpll
iret
jecxz
dec
cmp
es
out
pop
iret
xchg
sub
xor
xchg
cmp
daa
adc
xchg
xor
adc
cmc
cmc
or
jl
imulb
or
sbb
inc
xor
bound
sbb
mov
movl
pop
mov
lods
add
out
cltd
and
int3
dec
sub
test
movsl
sahf
mov
negb
push
lock
insb
push
das
ja
adc
pop
mov
sub
xchg
jl
mov
push
int
in
cmp
cli
mov
or
ja
gs
sub
jg
cmp
mov
inc
adc
xchg
loop
and
cli
out
dec
sub
fistps
or
adc
adc
sub
jecxz
fidivrl
lcall
xchg
xchg
xor
pop
sti
cltd
push
insb
shlb
pop
gs
cmpsl
fmul
mov
pop
fsubs
lcall
sbb
pusha
add
movsl
daa
fldl
aad
xchg
mov
rcl
jmp
ficoml
or
test
sbb
cmp
jl
negl
add
sub
add
xchg
ret
fildl
cmp
test
inc
add
pop
enter
jge
icebp
and
cli
in
int
xchg
mov
sti
xchg
in
cmpsl
ss
dec
pop
pop
mov
dec
fcomp
movsl
je
dec
stc
sub
or
mov
ljmp
cwtl
jp
insl
inc
push
in
mov
rcrl
aas
mov
loopne
pusha
add
arpl
xchg
call
sbb
pop
or
stos
aas
fistps
sbb
andl
mov
pop
or
shll
jmp
adc
fsubs
arpl
mov
movsb
cmp
dec
jecxz
aam
mov
repnz
movsl
repnz
pusha
scas
mov
daa
push
mov
pusha
in
and
pop
ret
mov
dec
das
push
iret
rcll
shr
fisubrl
cltd
sub
sti
fsubrl
movsl
add
mov
fs
out
in
inc
mov
mov
sbb
lea
jge
jne
push
pop
mov
nop
in
fsubl
stc
jp
sbb
jle
jns
imul
jmp
je
push
push
lock
outsb
dec
mov
mov
scas
jl
jle
imul
push
push
repz
cwtl
push
ljmp
dec
mov
cltd
insb
sbb
stos
ret
jle
mov
add
fcomp
add
xchg
test
jecxz
fwait
mov
inc
xor
xor
sub
xchg
fimuls
jmp
leave
sbb
aad
dec
outsl
pusha
push
imul
das
loop
mov
xorl
imul
and
sbb
jecxz
sbb
pop
sub
std
cmp
punpcklwd
insb
adc
int3
jp
movsl
scas
ret
roll
mov
lds
pop
pop
pop
push
dec
out
cmc
fsubrs
mov
add
leave
pushf
mov
jb
sbb
repnz
jne
data16
jnp
jnp
mov
push
jg
inc
xor
push
and
repnz
mov
pop
loop
push
and
mov
je
xchg
pop
and
pop
dec
inc
cmp
and
sbb
or
cmp
xchg
xor
les
imul
pop
loopne
inc
out
aaa
mov
and
pop
dec
ja
das
mov
test
inc
mov
aas
dec
int3
lock
jmp
xor
cmp
mov
pop
xor
mov
aam
lahf
adc
and
xlat
xchg
push
mov
arpl
push
ret
jns
sar
sahf
inc
out
scas
xchg
push
leave
and
addb
and
xor
test
sbb
gs
and
inc
pop
outsb
sub
xchg
pop
push
iret
dec
lcall
in
mov
or
xor
mov
cmp
dec
movsl
push
cltd
arpl
and
inc
jg
bswap
inc
stos
inc
insl
jp
mov
push
push
aad
jne
mov
mov
jmp
fsub
cltd
cmp
pop
jecxz
andl
mov
pop
or
inc
xor
bnd
mov
lret
fildl
and
mov
dec
pop
rorl
mov
daa
pop
xchg
add
lock
cmpb
add
bound
addb
leave
pop
rclb
fildl
addl
pop
stos
push
jne
mov
xor
xor
sarb
enter
pop
mov
mov
es
stc
int
stc
xchg
ljmp
mov
adc
xchg
or
es
insl
push
xor
pop
xor
fldenv
fnstcw
sbb
xorb
cmc
xchg
subps
xchg
cmp
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
or
mov
scas
jl
jle
mov
jge
push
inc
jmp
test
repz
jge
cs
in
call
and
inc
cltd
jecxz
daa
ljmp
pop
mov
lahf
cli
sbb
and
mov
icebp
xor
in
dec
es
hlt
push
and
pushf
test
mov
or
fs
pop
jne
dec
or
dec
mov
push
rcll
fadd
add
flds
xor
das
jnp
pusha
xor
add
inc
xchg
pusha
ret
jbe
out
or
sbb
inc
hlt
mov
out
les
pop
inc
mov
and
roll
and
scas
imul
sbb
les
fildl
movsl
in
jns
pop
adc
inc
out
xchg
push
cmp
out
repz
or
call
mov
adc
xchg
cld
mov
mov
shlb
xchg
pop
gs
push
out
cld
leave
push
mov
inc
sarl
sbb
movb
outsl
dec
xor
jp
fsubrs
pop
je
movswl
roll
out
mov
jp
lods
push
jbe
shrb
adc
test
aas
sti
pop
imul
push
popa
mov
sub
push
out
jle
daa
repz
das
cltd
cli
insl
adc
mov
cwtl
enter
mov
cmpsb
int3
addr16
pop
rolb
dec
inc
jmp
imul
mov
or
test
ljmp
dec
xor
dec
leave
push
aas
sub
out
test
lea
dec
cltd
xchg
aas
adc
ret
or
push
int3
sub
nop
and
and
sub
mov
or
lds
in
leave
scas
mov
stc
adc
fisubs
cld
pop
sbb
or
in
testb
pop
popa
dec
notl
inc
push
mov
cld
cli
xlat
sub
push
std
lea
mov
push
sub
mov
xchg
call
pop
xchg
mov
lret
sbb
fldenv
and
fisubs
div
repnz
mov
lods
jae
dec
std
pop
pop
pop
std
es
add
or
pop
repz
xchg
mov
lock
add
pop
and
sub
ja
int
mov
and
push
lahf
stc
and
imul
call
scas
repnz
inc
jl
dec
jne
mov
xor
cmc
jno
add
dec
test
jge
cmpsl
inc
jg
sti
jle
out
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
insl
pushf
add
jle
scas
jl
jle
or
adc
in
and
mov
lock
aad
fmuls
call
out
cmp
mov
outsl
call
test
scas
mov
sbb
arpl
lock
ja
mov
jecxz
or
push
cvttps2pi
leave
aam
mov
stc
add
fucomi
jo
sub
sub
shll
imul
roll
dec
and
inc
push
pop
push
ret
jmp
xchg
ja
loopne
scas
mov
mov
pop
mov
ret
mov
jmp
ljmp
out
rorb
loope
push
int3
pop
outsl
rcl
push
out
lods
sbbb
sahf
mov
ret
lahf
mov
loop
dec
dec
pop
cmp
or
dec
fdivs
xchg
xchg
repz
push
lods
push
pop
jmp
or
xchg
mov
inc
repz
and
pop
aad
les
flds
inc
xchg
dec
mov
cmp
gs
or
loop
in
sub
pop
xchg
xchg
cmp
xchg
pop
sub
dec
pushf
into
stos
jecxz
fldpi
das
mov
stos
xchg
xchg
pusha
lret
fdivrl
loop
xor
aas
jo
pop
loop
sti
popf
aaa
push
fsts
int
ja
jne
fcmovnu
mov
mov
inc
adc
xorps
cmp
or
xchg
xchg
out
sub
cmp
dec
adc
into
outsb
or
int3
ljmp
es
jb
lahf
aaa
sbb
lock
cmc
les
xor
lods
or
int3
or
repz
inc
gs
bound
es
adc
mov
cmpsb
inc
and
out
js
xlat
xor
ja
cmp
out
jnp
movsl
std
mov
pop
loop
or
orl
jno
mov
call
add
cmpps
mov
xchg
jecxz
push
cmpsb
mov
inc
pop
mov
cmp
xchg
mov
fldt
neg
popa
pushf
sti
or
sti
in
cmp
repz
outsl
and
xchg
cltd
cmpsl
cmp
dec
rolb
es
cmpsl
pusha
mov
popa
xchg
push
cmpsl
stos
imull
mov
and
or
cmp
andb
xorl
mov
stos
dec
pop
pop
pop
jnp
out
mov
sub
je
addr16
and
inc
int3
dec
xor
push
or
rorl
add
or
sti
stc
decl
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
cmpsl
mov
jle
movsb
jg
jle
and
test
jl
lret
and
sbb
insl
xchg
xchg
pop
out
dec
pop
ljmp
rorl
adc
lock
sbb
lret
lea
dec
push
jb
sahf
cmpsl
inc
lods
test
rcll
or
xchg
cpuid
inc
xlat
adc
inc
push
movsb
dec
push
mov
jo
imul
stc
xchg
pop
jge
xchg
into
xor
cmpl
and
inc
test
or
and
mov
or
andb
in
or
and
xor
cmp
jns
movsb
je
mov
lahf
cwtl
test
fadd
ljmp
icebp
mov
les
test
scas
mov
mov
lods
adc
sti
mov
jbe
dec
les
pop
mov
sub
push
cs
xchg
xchg
int
fsubrp
cmpsl
mov
clc
orl
pushf
sbb
mov
inc
or
and
out
inc
sub
shl
out
mov
movsb
hlt
lret
scas
std
hlt
dec
lcall
data16
rcll
inc
inc
jbe
cs
pause
cmp
pop
cs
dec
inc
dec
fcomps
mov
cmp
mov
das
or
mov
sbb
ficoml
pusha
sub
add
pop
rolb
xorl
sub
notl
xor
int
cmp
jl
mov
in
jb
lock
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
jo
mov
jle
jg
jle
lret
or
fisubrl
mov
lret
dec
popf
mov
stc
mov
dec
adc
mov
push
push
jns
sub
xor
sbb
test
adc
dec
test
leave
pop
mov
mov
aaa
xor
insb
repnz
cmpsb
aaa
adcl
inc
inc
jno
sub
cmpsb
iret
jmp
fwait
inc
out
add
repz
inc
loop
mov
or
xchg
sbb
add
call
andl
cltd
inc
push
pop
test
sti
fiadds
xor
push
mov
movsb
sub
ja
hlt
cli
sbb
rorl
xor
fcoml
je
jg
inc
fistl
mov
fisubrl
mov
dec
in
or
roll
mov
fildl
xor
pop
mov
pop
sub
orl
push
pop
mov
cmp
add
scas
jmp
push
sbbb
ret
fnsave
sbb
movsb
or
loopne
mov
and
add
lds
xchg
xchg
add
mov
pusha
test
push
mov
inc
leave
addb
sub
ror
adc
jle
xchg
xchg
iret
fildl
stc
es
mov
stos
imulb
and
xchg
cli
leave
roll
push
mov
loop
sbb
addr16
sub
adc
shll
adc
fcomi
ficoms
enter
sub
test
and
jo
imul
aaa
adc
sti
cmpb
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
cmp
xchg
sbb
roll
add
add
inc
movsb
xchg
xchg
or
arpl
add
adc
jbe
outsl
xor
daa
lods
cmp
fidivrs
mov
pop
aad
add
dec
cmp
pop
mov
jns
adc
lret
stc
dec
fnsave
mov
xor
clc
sub
xchg
outsl
xchg
and
nop
mov
sbb
push
add
aam
cltd
push
cmp
rol
push
mov
call
das
pusha
imul
leave
or
xor
fcmovnu
inc
fwait
arpl
outsl
xor
cs
imulb
or
cmp
test
cmp
pusha
or
mull
pop
cs
mov
nop
into
ds
adc
mov
inc
sbb
aaa
xor
jge
and
pop
int
inc
xchg
lods
cmp
out
popf
icebp
push
push
or
fbld
ficoml
xchg
mov
flds
add
add
push
pusha
in
jle
lcall
xor
rolb
add
add
xor
stos
lcall
pop
push
sbb
mov
addr16
add
jae
sti
pop
adcb
out
dec
aaa
fs
cmp
push
ret
and
hlt
mov
shrb
inc
les
xchg
jbe
test
pop
inc
jge
or
sti
inc
mov
fidivrl
bound
sarb
sub
cmp
cmpsb
lods
dec
stos
mov
in
icebp
mov
stc
and
push
out
dec
push
jle
jg
ds
fnsave
cmp
idivl
ljmp
fcoml
rcrb
sub
in
mov
out
dec
cwtl
loopne
bnd
inc
popf
fldcw
xchg
test
add
into
repnz
add
sub
int
or
pop
jne
aaa
js
ret
sbb
or
repnz
push
mov
test
jecxz
adc
fldl
fwait
ljmp
add
add
mov
push
test
out
stos
in
add
add
add
xchg
test
cmp
sub
cld
push
jno
int
cmp
mov
xor
mov
movsl
outsl
and
je
adc
movsl
arpl
gs
imul
sub
in
loope
sub
data16
scas
or
ret
push
in
movsl
push
nop
mov
add
out
out
loopne
mov
cmc
push
js
and
pusha
aam
mov
ss
dec
inc
iret
mov
lods
inc
fsubrs
and
xor
adc
cmpsb
ja
inc
bound
push
cs
movsl
sbb
mov
jae
adc
jnp
stos
test
loope
fsubs
inc
cmp
rcr
cltd
dec
mov
test
stos
sbb
and
jg
xchg
or
inc
or
jp
shlb
cmpsb
mov
jb
jecxz
and
add
mov
push
fdivrp
insb
mov
imul
push
aas
jmp
nop
or
sahf
sub
or
add
add
subl
roll
sbb
aam
add
add
lods
cld
popf
xchg
mov
push
jmpw
fildl
mov
or
add
cmpsb
xor
xor
addl
push
lret
inc
insl
fmuls
ds
orb
hlt
ficompl
sbb
xor
add
cmpsl
das
sahf
mov
add
sub
lods
leave
jecxz
cs
mulb
das
leave
es
cmp
or
sub
fwait
mov
movsl
jmp
xor
adc
out
test
xchg
xor
fcoms
insb
pop
rorl
hlt
out
rolb
cwtl
sub
clc
lods
lods
decb
jne
sbb
fildll
inc
ja
mov
es
insl
aas
loopne
mov
mov
loope
stos
insl
xor
add
push
cmp
ja
lret
scas
mov
xor
xor
clc
cmp
dec
pusha
rorl
lds
jns
repz
cld
dec
loopne
jp
imul
add
add
inc
or
pop
dec
or
test
pop
in
aad
add
add
out
jecxz
jl
adc
mov
push
mov
mov
rorl
xlat
outsl
jae,pn
call
pop
mov
outsl
ds
xor
mov
in
rolb
rolb
inc
adc
nop
hlt
ds
daa
outsl
dec
adc
xchg
push
ja
mull
inc
pop
outsl
sub
push
push
cmpsl
push
adc
lret
aaa
pop
dec
scas
pop
xlat
jge
mov
lds
adc
sbb
mov
sbbl
jae
inc
jb
rcll
mov
lahf
xchg
mov
mov
xchg
call
lret
jl
mov
xlat
repz
push
into
leave
in
repz
out
push
mov
sub
xor
insb
jecxz
idivl
outsb
sbb
test
in
shlb
sub
ja
cmc
dec
push
and
cmp
cmpsb
adcb
and
xchg
popf
jge
sbb
jg
cmc
insl
cmc
out
lcall
enter
shrb
add
add
shll
cld
xchg
enter
xchg
and
out
cmpsl
call
std
lock
ja
test
sbb
gs
scas
ret
ret
and
or
mov
cmpb
cmp
inc
loope
js
mov
and
fmulp
fsubrs
push
inc
mov
mov
popf
adc
fwait
xchg
add
sbb
mov
into
popa
sbb
pop
ljmp
add
dec
imul
subl
daa
dec
push
pop
mov
cmp
cmp
loope
sbb
fstl
mov
loop
inc
mov
adc
shrl
arpl
xchg
jns
push
cmp
jle
cmp
sub
or
das
hlt
int
xchg
xchg
add
xchg
cmp
adc
loope
roll
popa
shr
shll
repnz
sub
mov
inc
das
add
lret
cmc
push
xchg
inc
std
jle
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
xor
and
sti
pop
jle
mov
and
dec
mov
xor
cmp
mov
lock
mov
adc
jb
scas
arpl
mov
sar
repz
pop
pop
ja
ja
xchg
pop
cmc
outsb
and
aad
cmp
pusha
scas
push
iret
dec
xor
clc
iret
xlat
test
cmp
ret
cmp
or
ljmp
push
pop
aam
mov
jg
imul
jg
filds
pusha
mov
mov
dec
or
ja
push
add
icebp
lcall
jge
sbb
cmp
fs
test
cwtl
imul
mov
in
xor
in
mov
loop
mov
test
and
es
and
sub
mov
jl
sub
fs
xor
mov
add
or
and
scas
sti
jle
pop
push
pop
idiv
or
clc
fadds
add
add
jge
shrl
inc
ja
or
mov
sbb
int3
adc
and
sbb
addb
cmp
sub
jmp
aad
hlt
mov
pop
sbb
imul
lahf
xchg
inc
jg
adcb
fmuls
inc
sbb
and
rcrb
jg
mov
pop
push
jns
jnp
nop
mov
pusha
sbb
jnp
test
and
pop
gs
test
icebp
shrb
jns
outsb
push
push
adc
adc
mov
jecxz
ljmp
sbb
enter
outsb
lods
add
sbb
add
cmp
add
jl
cmp
pop
xchg
mov
sub
jmp
mov
sub
icebp
pop
jo
jecxz
ret
dec
jnp
or
push
or
mov
and
lock
scas
int3
cwtl
addr16
test
dec
shrb
fildl
lahf
fnstcw
ss
lahf
stc
bound
jno
cld
flds
add
add
add
sub
ret
cmp
movsb
xor
or
into
movsb
cmp
adc
xchg
aad
and
or
xchg
mov
fwait
or
jbe
flds
call
sahf
pop
push
adc
mov
mov
cmp
jle
scas
shl
das
insl
leave
cmc
fstl
push
loope
icebp
xor
into
sub
out
les
sub
pop
std
sahf
pop
pop
pop
arpl
add
sbb
std
mov
adc
mov
pop
xor
sbb
fldenv
jg
iret
jle
fldl
ss
cli
je
adc
sub
addl
sbb
testl
in
cmp
sbb
pop
pop
fcomps
push
daa
xchg
xor
mov
mov
int3
aaa
lahf
inc
nop
inc
xor
test
lret
popa
inc
dec
or
add
add
push
jl
jle
insb
out
adc
scas
xchg
pop
add
add
add
add
fs
fisubrl
or
int
and
pop
hlt
inc
jae
outsl
adc
cmp
lds
adcb
fisttpl
dec
leave
pop
and
jg
or
jle
adc
push
mov
mov
nop
mov
jge
into
inc
inc
and
repz
add
dec
xchg
dec
push
jp
ret
test
add
mov
mov
lahf
mov
inc
cwtl
sbb
pop
dec
inc
xor
lock
std
or
pop
shl
dec
cli
shlb
pushf
iret
ret
pop
adcb
inc
sbb
pop
mov
fwait
inc
dec
push
dec
cld
in
dec
jmp
into
push
mov
and
ficoml
jp
aaa
rcl
movsl
jg
out
sbb
popf
push
sbb
xor
xor
or
in
cmp
lcall
pop
pop
push
mov
imull
cmp
roll
dec
idivb
inc
fs
mov
adc
in
xor
adc
add
add
add
add
fmuls
call
add
cmp
rcl
xchg
in
insb
push
hlt
in
ja
sbb
or
inc
push
ja
mov
outsb
adc
test
push
add
jecxz
cmpsl
mov
or
aad
mov
cmp
mov
mov
xchg
pop
fimuls
adc
lret
std
inc
jo
jle
cmpsl
nop
ss
xor
in
fcmovnbe
inc
ret
loop
ljmp
ss
add
mov
fwait
mov
loop
icebp
sbb
pop
jp
xchg
arpl
pop
movsb
movsl
lahf
xor
jae
xchg
cmp
lcall
cwtl
xchg
clc
mov
outsb
rorl
sub
and
loop
insl
aad
pop
xchg
cmp
adc
push
jg
and
lret
idiv
xlat
lods
adc
ficoms
ds
pop
ljmp
push
xlat
cmpsl
aad
inc
adc
jae
jecxz
or
aaa
data16
jne
mov
lcall
add
add
add
and
pop
stc
fidivl
stc
call
mov
in
jmp
sbb
aad
inc
inc
and
not
xchg
outsl
jmp
inc
sub
or
aad
mov
fs
mov
in
or
in
scas
xorl
mov
lret
dec
out
push
pop
push
scas
jnp
scas
xor
movsb
pop
or
mov
test
push
add
lcall
aaa
iret
outsl
cltd
pop
pop
movsb
push
or
adc
sbb
test
test
out
xchg
push
adc
out
into
inc
subl
mov
cmp
and
sub
push
cmpsl
mov
mov
enter
push
cmp
daa
xchg
push
mov
push
in
nop
and
shrb
add
jg
aas
sub
mov
idiv
test
and
idivl
sub
dec
ljmp
jnp
add
jnp
sti
xchg
lahf
mov
inc
mov
add
add
add
fs
in
lds
adc
mov
cld
dec
mov
mov
mov
mov
xor
pop
sub
pushf
mov
test
pop
dec
inc
sub
iret
pushf
icebp
cwtl
xlat
stc
mov
mov
fsts
or
xchg
lcall
jmp
inc
int3
mov
js
pop
clc
dec
lret
push
sbb
clc
stc
or
mov
roll
inc
arpl
aad
adc
or
sub
mov
inc
enter
xchg
daa
push
in
cmc
push
or
test
push
ret
in
xor
nop
cld
jns
sbb
jle
je
cli
cmp
adcl
cmp
push
inc
or
adc
lds
sub
cmpsl
inc
aad
push
out
xchg
shll
pusha
jne
pop
xchg
nop
xchg
testb
je
inc
inc
dec
or
mov
ds
add
and
in
pop
lcall
add
sub
pop
sarl
mov
rclb
filds
add
add
filds
sub
out
add
push
xor
sti
out
rcrb
jg
aam
lcall
stc
mov
pop
sub
push
scas
or
es
imul
mov
aas
sub
jbe
push
out
sub
into
js
jnp
cmc
mov
jl
mov
rclb
or
daa
mov
and
hlt
inc
pop
pop
stos
and
and
mov
push
scas
leave
cmp
xor
mov
data16
inc
les
test
push
jo
ja
cld
xchg
mov
add
cmc
push
pop
mov
ja
stc
dec
xlat
inc
sar
dec
or
daa
push
adc
repz
sbb
xor
sbb
cmp
cltd
decb
daa
test
adc
ds
out
rcll
lods
scas
int3
push
push
jns
jecxz
lret
pusha
test
fistps
ja
movsl
push
icebp
push
ljmp
xor
cld
aas
iret
shlb
pop
or
add
repz
std
repz
sbb
loopne
add
add
scas
inc
lock
push
cmp
push
xor
dec
cmp
fcom
and
int
xor
shl
neg
loope
xchg
icebp
inc
es
jge
dec
xlat
std
lds
fsubs
mov
push
sar
movsb
push
cmovae
push
pop
sub
outsb
or
int3
into
call
fwait
inc
adc
jo
pand
sub
in
mov
mov
pop
ficompl
fcomip
push
repz
ja
fst
out
lret
sub
insl
or
insb
and
and
sbb
cwtl
dec
and
mov
pop
push
xor
fcmovne
std
aaa
fistpll
push
dec
clc
aas
jnp
push
test
xor
lea
push
enter
fs
iret
in
mov
xchg
cmp
test
dec
sub
cmp
dec
lret
cmp
inc
ss
lods
ja
dec
hlt
cld
out
in
dec
imul
pop
mov
loope
in
sub
cmp
arpl
je
sti
inc
xchg
sbb
add
add
add
inc
bswap
shlb
push
push
cmp
es
out
movsb
sub
clc
int
dec
ret
push
mov
jle
push
xchg
mov
mov
imul
mov
push
dec
xchg
jle
add
test
lods
adc
fsubr
insb
add
sbb
ret
inc
fsin
pop
xchg
bound
std
xor
or
cld
mov
push
push
push
lret
push
bound
sub
mov
inc
int3
lret
push
repnz
lods
or
enter
mov
dec
push
jns
js
addl
pop
mov
je
aas
jo
jo
xchg
je
push
popf
test
stos
imul
nop
js
push
dec
aaa
fcmovb
int
ficomps
sahf
int
sub
fdivs
aaa
aas
je
xor
andb
insl
fisubrl
ds
sub
scas
cmc
pop
inc
adc
inc
out
imul
jb
and
arpl
hlt
xlat
push
push
push
dec
mov
insl
lcall
mov
inc
sub
js
call
add
add
arpl
inc
dec
fildll
into
daa
lret
sub
sbb
cltd
xor
push
cmp
jnp
scas
mov
cmp
dec
hlt
lds
ja
inc
loop
cmp
sbb
xor
and
sbb
jns
mov
iret
fwait
mov
lea
dec
pushf
es
leave
mov
xor
cmp
popa
repz
daa
out
outsb
mov
aad
or
scas
fisttpl
sbb
leave
lret
in
out
rol
test
cs
sti
push
test
sub
dec
shl
jo
fs
mov
sub
xor
pushf
lods
in
lds
imul
fidivs
push
popf
cmp
and
jge
ja
out
xchg
repnz
mov
push
or
stos
out
cmpsb
mov
fldt
sub
and
cmp
rol
sahf
pop
imul
dec
push
xchg
jne
dec
mov
call
lret
xchg
in
mov
incl
shll
mov
and
jecxz
add
add
xlat
cmp
push
cmp
test
into
jae
fsubl
push
cmpl
popa
push
cmpsb
outsl
test
jecxz
fistps
sub
ret
jbe
icebp
push
filds
push
mov
pop
dec
cwtl
mov
test
imul
sbb
mov
adc
push
mov
pusha
fimull
loop
cmpsl
mov
push
nop
loop
fdivrs
shrl
dec
jmp
inc
mov
sub
popf
ja
mov
sub
push
test
push
mov
xor
jmp
loop
cmp
enter
sbb
adc
movsb
into
xchg
cmpl
out
std
loopne
ss
mov
cld
sbb
lret
popl
push
js
pop
mov
js
nop
jne
and
or
mov
mov
jecxz
loop,pn
mov
jnp
lock
ret
inc
lods
or
jae
repnz
add
inc
mov
in
negl
sub
movsb
cwtl
das
xor
and
add
add
add
pop
test
lret
stc
outsl
push
clc
xor
das
mov
adc
or
fiaddl
lds
dec
mov
dec
dec
rclb
in
arpl
je
push
mov
shrl
rcll
push
iret
adc
lret
cwtl
aam
lea
jae
cmp
or
aam
and
aam
cmp
sbb
mov
in
int3
mov
mov
dec
outsb
rcrl
nop
mov
cmp
cli
mov
enter
js
out
pop
sbb
nop
jmp
rdtsc
ljmp
mov
loope
in
push
sbb
mov
xchg
roll
gs
xchg
test
in
xchg
mov
xchg
mov
xchg
test
pop
test
fistps
cmp
mov
xchg
jnp
add
mov
lahf
push
insb
stos
jne
int
jmp
mov
fstp
roll
bnd
dec
mov
pop
xchg
add
outsl
fistpll
stc
dec
push
faddl
rcrl
add
add
add
sub
fbld
and
jge
pop
pop
mov
and
and
inc
insb
shl
lret
push
fiaddl
inc
pop
mov
push
sti
mov
jo
dec
sahf
mov
cli
or
movsl
dec
mov
mov
add
hlt
loopne
cmp
stos
hlt
pop
aas
mov
out
insb
push
sbb
push
andb
pop
jl
cmpsb
outsl
jmp
aas
aad
xchg
mov
outsb
adc
jno
pop
lret
inc
pop
pop
pop
jle,pt
xor
cmp
inc
sub
jnp
or
and
mov
mov
aaa
pop
outsb
lock
mov
sub
inc
cs
push
jmp
mov
test
daa
clc
in
popl
call
mov
push
mov
xor
inc
imul
pop
cs
enter
negl
mov
cmp
mov
push
push
push
mov
popa
sub
add
add
add
test
push
popa
sub
or
aam
cmp
std
mov
push
jmp
dec
mov
movb
stos
imul
jg
in
xor
mov
jb
test
jnp
cmpsl
jge
ror
cmp
loope
aad
jmp
data16
adc
aam
sbb
adc
mov
into
lret
or
icebp
inc
inc
mov
std
test
testl
push
mov
dec
push
stos
imull
mov
jae
or
cmp
mov
insl
jae
xor
mov
cld
push
push
push
xor
sub
or
fnstenv
dec
dec
ss
fucompp
push
sbb
ljmp
mov
icebp
arpl
int
pop
push
mov
mov
out
inc
add
fidivs
jl
mov
xchg
test
xor
mov
add
out
repnz
add
pop
lcall
les
popf
insl
je
out
add
add
loopne
sbb
mov
mov
int
je
enter
sarl
jno
subl
mov
mov
inc
push
shl
mov
and
pop
enter
les
mov
pop
rcrl
aas
mov
je
movsb
ja
mov
lcall
xor
rorl
or
mov
cmpsl
jns
adc
fwait
push
popf
nop
inc
movsl
dec
addb
mov
mov
xor
xchg
cltd
das
sbb
loope
stos
jle
push
pop
sub
lds
scas
cmp
imul
or
outsl
sbb
cld
inc
test
add
int
push
shrl
mov
test
scas
lret
sbb
mov
dec
ja
or
pop
lea
in
inc
imul
xchg
push
cmp
pop
mov
ja
clc
pop
mov
push
decl
pop
xorl
add
add
jno
leave
sti
leave
mulb
cmp
ljmp
outsb
mov
rorl
cmp
adc
sbb
gs
pop
insl
ljmp
jnp
mov
out
mov
sbb
call
mov
sbb
in
lock
stos
mov
xor
or
mov
jge
cmp
aam
add
mov
pop
xchg
and
jle
add
xchg
jbe
mov
into
add
test
jnp
clc
ret
out
cmp
fwait
arpl
xor
out
adc
jae
jne
out
xchg
mov
xor
mov
xor
jno
xor
adc
xchg
cmp
inc
push
mov
adc
push
inc
and
imul
call
jecxz
aas
cli
mov
bound
insb
cmpsl
outsb
stos
push
jns
inc
or
and
cmp
sti
fsubp
inc
push
sub
push
cmp
add
add
add
inc
stos
inc
push
inc
mov
add
or
addr16
pusha
dec
inc
push
and
incb
ja
and
ret
xor
push
imul
repz
xor
cmpsl
inc
int
or
ret
dec
xchg
das
xlat
and
loopne
or
jecxz
daa
cmpsb
ja
pop
jnp
xor
bound
test
or
sbb
dec
sbb
rorb
add
rcrb
scas
icebp
and
mov
xor
hlt
adc
cwtl
shll
adc
mov
mov
flds
cmpsb
rcl
push
mov
mov
mov
mov
mov
jge
push
push
push
dec
clc
inc
fisttpll
loope
sarb
sub
mov
add
loopne
imul
cmp
popf
xchg
pop
mov
adc
push
sub
mov
cmpsb
cwtl
pop
dec
ret
xchg
pop
fldenv
incl
fstl
arpl
cmp
and
and
mov
lcall
ljmp
and
ss
pusha
int
add
mov
loopne
ret
mov
jmp
clc
stos
repz
cmpsl
mov
mov
gs
mov
out
sbb
mov
inc
icebp
shrl
dec
dec
rclb
nop
sbb
fs
pop
cmc
xlat
int
xchg
sbb
jmp
fidivs
mov
arpl
xchg
or
mov
pop
jo
sub
inc
loopne
lock
leave
xchg
mov
pop
and
cmp
imulb
adc
pop
lea
lea
fdivrs
push
test
xor
lods
push
push
pop
in
pop
cmp
outsb
cld
pop
icebp
dec
lods
mov
xchg
pop
mov
clc
inc
daa
es
mov
ret
fldl
sub
outsl
in
sbb
das
jae
sbb
cmp
dec
xlat
add
or
imul
sbb
push
addb
add
add
repz
ror
lock
jnp
xor
xchg
push
fists
inc
jmp
add
add
cmp
mov
sub
inc
pop
movsb
push
ds
sbb
insb
daa
pop
pushf
push
popf
std
inc
sub
stc
mov
dec
stos
jae
adc
adc
cmc
pop
jp
add
cmp
sarb
pop
aaa
stos
js
jle
xor
daa
inc
gs
test
cmc
aad
cmp
xchg
xlat
fcmove
out
das
ds
adc
mov
and
ret
xchg
sub
jge
sub
fdivl
mov
pop
divl
cwtl
stc
arpl
mov
ret
push
nop
rcrl
push
cwtl
loop
sbb
mov
leave
or
pop
addr16
push
popa
pop
mov
jmp
test
pop
adc
cmp
iret
jnp
xor
lcall
add
mov
and
outsb
aam
loop
shrb
test
pop
mov
jp
aaa
and
repz
fisubs
cltd
imul
add
add
push
adc
mov
mov
push
iret
dec
rcrb
jl
pop
stc
mov
or
lahf
pushf
jp
aaa
ds
push
stos
add
mov
inc
addr16
sahf
push
lds
push
xchg
push
into
sub
fwait
lds
xchg
add
or
push
xlat
cwtl
mov
push
push
xchg
hlt
test
xchg
sbb
cwtl
sub
push
lds
jne
fisubrs
out
pop
cs
std
pop
fwait
jae
pop
ds
push
shll
sub
cmc
mov
clc
insl
insb
addr16
cmp
push
es
xchg
dec
xor
push
sbb
sub
sarl
je
push
shll
inc
jno
mov
xchg
sub
imul
inc
jle
nop
push
jno
in
mov
xor
cmp
rorb
test
xor
outsl
lods
adc
push
dec
ljmp
daa
cli
out
sbb
lods
daa
push
xor
add
add
push
stos
mov
shl
push
pop
call
inc
or
mov
xlat
pop
dec
pushf
loop
sbb
or
lahf
rcrb
ljmp
and
xor
mov
int
mov
shl
mov
cld
leave
iret
movsl
jecxz
loope
loope
test
lds
jle
mov
jp
and
cmpsl
out
stos
lahf
mov
out
sub
repz
adcl
mov
lds
pop
scas
xchg
int
outsl
sub
and
add
dec
mov
mov
imul
xchg
sarl
xchg
mov
cmp
mov
mov
jne
mov
push
mov
pop
andl
jecxz
std
sub
inc
lahf
ss
push
pop
shrb
sbb
xchg
lods
and
mov
enter
mov
ljmp
lods
in
outsl
pop
xchg
int3
shrl
cmc
scas
sub
mov
dec
out
add
add
add
mov
mov
outsl
inc
idivb
daa
mov
adc
mov
or
inc
xlat
ljmp
xchg
pop
add
mov
pop
jle
dec
xchg
mov
cmp
sbb
aaa
add
mov
mov
sub
inc
sub
call
or
loop
iret
jb
sbb
cmpsl
imul
adcl
mov
jle
out
arpl
test
repnz
loopne
push
sub
mov
and
inc
fistpl
xchg
jecxz
pop
mov
cmc
mov
pushf
mov
testb
unpckhps
sub
in
and
add
shlb
test
inc
mov
add
mov
daa
jp
dec
int3
mov
sub
sbb
or
pop
ljmp
push
ss
jns
or
add
add
pusha
rorb
cmpsb
mov
addb
out
add
add
add
rorl
sbb
mov
jg
add
lretw
aaa
cmc
and
lahf
push
shl
add
push
bound
xor
sub
xchg
sub
jns
negl
mov
pop
test
inc
xor
cmp
mov
ficomps
pop
fistpll
lret
lds
test
out
lods
jns
loopne
mov
negl
scas
into
lock
pop
cmp
jb
push
add
movsb
xor
jno
add
ret
aas
mov
int
sub
cmp
push
mov
fdivrs
add
jns
xor
mov
fadds
arpl
popa
arpl
nop
sub
mov
mul
insl
push
dec
movb
push
insl
dec
and
sahf
mov
and
data16
insb
or
arpl
xchg
out
inc
push
insb
pop
cli
xor
and
in
pminub
test
dec
jecxz
push
testl
cmc
mov
push
lock
add
add
push
in
sub
cmp
shrl
inc
dec
aad
stos
cmp
es
or
jo
push
decb
xor
je
fwait
sub
adc
xor
pop
mov
push
cmp
movsl
xchg
sbb
sub
ja
arpl
pop
ss
push
cli
mov
orb
jno
movsl
nop
inc
and
inc
clc
inc
std
outsl
popf
fmul
out
bound
dec
repnz
leave
add
rcrb
pop
add
fwait
inc
xchg
or
mov
jecxz
mov
scas
clc
pop
fsubs
add
cmp
scas
xor
sub
mov
inc
lahf
xor
shll
imul
mov
scas
push
jae
in
lea
xor
xchg
in
cmc
cltd
jne
push
lret
mov
add
mov
fs
rclb
and
movsb
xchg
mulb
sbb
frstor
and
daa
lahf
mov
pop
das
xchg
iret
jne
pop
icebp
add
add
add
or
cmpsl
js
push
cli
push
in
imul
xchg
in
iret
movsb
ret
je
fdivl
pop
outsb
js
movsl
cli
mov
clc
lret
push
jmp
into
stos
cmp
das
and
dec
lds
mov
adc
sub
clc
jp
shrl
xchg
cld
inc
mov
inc
test
pop
jp
loop
sbb
shrl
test
pop
push
adc
cli
mov
adc
add
mov
roll
xchg
fdivrl
sbb
cmp
sbb
pop
jne
cli
xorl
sbb
das
ds
mov
sbb
adc
cmp
fists
cli
cmpsb
sahf
pop
out
jo
mov
ret
push
mov
dec
mov
mov
movsl
imul
movsl
jl
into
pop
pop
sbb
adc
cmp
into
hlt
dec
sbb
mov
fucomi
xor
lods
fstps
add
add
fdivrl
push
test
arpl
fsub
cmpsb
xchg
xadd
popa
test
out
dec
mov
out
push
mov
push
jle
rorb
xor
lods
and
imul
ret
stos
add
pop
cmp
or
negb
mov
pusha
icebp
inc
cwtl
add
shlb
fwait
adc
leave
mov
xor
push
icebp
xchg
jmp
mov
pop
mov
and
xchg
pop
adc
shll
cmp
clc
push
mov
pop
fmull
outsb
pop
int3
cmp
scas
xchg
and
dec
mov
pop
inc
inc
mov
shll
hlt
cmp
dec
out
enter
inc
mov
stos
repnz
lret
lds
xorb
mov
or
mov
xor
adc
arpl
stos
sub
lret
xor
or
scas
dec
leave
jae
shl
sub
pop
rorb
popf
or
jbe
push
inc
pop
jns
aas
loopne
sub
mov
add
add
pushfw
xor
mov
lcall
ljmp
xor
pop
addr16
pop
loop
andb
mov
cmpsl
or
pop
mov
jmp
add
lret
pop
subb
movl
pop
xchg
sub
push
imul
cmp
lds
arpl
lea
lods
in
lds
lret
xchg
mov
sbb
aas
insl
icebp
imul
out
jb
xchg
call
data16
cmpb
mov
iret
into
mov
mov
int3
js
and
adc
jle
sbb
xchg
xor
sbb
sbb
mov
sub
push
sbb
aam
mov
cmpsl
push
outsb
add
pop
ret
jo
rclb
in
cmp
mov
movsb
xchg
dec
int
mov
lret
adc
mov
push
lahf
test
and
add
add
jnp
mov
jno
icebp
int
hlt
add
add
add
fs
lock
and
and
add
push
sahf
pop
stos
fldl
test
daa
data16
adc
mov
or
dec
inc
fwait
sub
fistpll
xor
cmp
inc
cmp
in
mov
jp
ss
sub
jbe
jmp
cltd
sbb
lock
cmp
inc
movsb
push
jmp
in
sub
insb
push
and
imul
aaa
lods
ret
mov
pop
mov
mov
loop
mov
mov
dec
and
shl
lods
loopne
pop
mov
xchg
cltd
outsl
push
pop
in
push
test
push
cmp
xchg
push
orb
push
mov
jle
js
mov
mov
dec
mov
xor
ss
inc
decl
xchg
stc
adc
inc
jno
repz
inc
push
dec
cmp
mov
shlb
add
and
mov
xchg
ljmp
aad
add
add
xlat
pop
xlat
jg
mov
or
shlb
add
add
or
xchg
push
xchg
or
xchg
pop
xchg
mov
std
sub
repnz
push
lock
add
js
ret
lds
mov
push
jne
scas
ja
mov
push
jae
pushf
cmp
aas
dec
test
movsl
add
dec
fnstcw
mov
pop
fmul
pop
sbb
sbb
or
sbb
cmp
xchg
xchg
lea
test
out
testl
and
xor
jns
sbb
push
aam
adc
push
stos
lret
jmp
mov
jge
test
mov
push
mov
push
mov
push
shrb
std
jecxz
out
xchg
imul
fs
stc
arpl
sub
push
lahf
hlt
cmc
push
ds
scas
and
xchg
fdiv
pop
or
adc
cli
mov
jnp
or
dec
rcr
out
cmpsl
mov
xchg
bound
sub
jae
add
add
fdiv
mov
mov
testb
add
add
test
or
leave
inc
and
jge
dec
outsl
orl
or
popf
vpsllq
mov
sbb
repz
push
mov
push
jnp
push
cmp
mov
jl
jb
outsb
pop
add
pop
rorb
mov
fdivrl
sahf
aas
fbld
push
rorl
cmc
cld
lcall
jnp
les
lock
ja
popf
push
es
lahf
into
pushf
cmp
add
mov
into
adc
jmp
sbb
lods
out
call
cmp
sub
push
or
imul
cli
cmp
outsl
xchg
sub
pop
test
and
and
mov
and
movsl
rcll
iret
dec
cmp
jg
pop
movsl
daa
jo
test
scas
leave
push
cli
jg
push
or
add
movsb
xorb
loop
sar
inc
jo
xchg
mov
ja,pt
add
add
mov
fimull
insl
inc
jo,pt
add
add
add
out
out
and
adc
xchg
xchg
sbb
sub
cwtl
mov
mov
loop
lret
or
add
clc
xchg
xchg
loope
rol
cmpsl
xchg
rorl
add
scas
lds
mov
or
xor
push
in
cmp
dec
ljmp
cld
add
in
fstps
ret
loop
pop
and
fdivs
pushf
add
and
cmp
xor
aad
cmp
call
aad
add
stc
repnz
jae
clc
pop
rolb
fdivl
dec
sub
mov
cs
inc
xchg
xchg
xor
ds
aas
subb
mov
arpl
mov
sbb
loop
cld
sub
mov
xchg
leave
push
xor
inc
jmp
negb
lods
xchg
pop
pusha
cs
sub
insb
mov
add
add
push
pop
push
jmp
shlb
clc
add
add
add
sbb
adc
mov
mov
or
add
in
inc
mov
jecxz
fiaddl
dec
stos
fwait
sbb
stos
cmp
fadd
xor
pop
mov
inc
push
jp
push
mov
cmp
loop
scas
add
or
xchg
push
inc
cmp
out
ds
cmp
xor
enter
cmp
data16
adc
push
jl
aaa
dec
xchg
sbb
and
andb
mov
movsl
cmp
insb
shlb
out
daa
rcll
es
sbb
nop
fbstp
inc
insb
sub
icebp
cmp
add
call
sahf
xor
rorb
repnz
cmp
push
mov
mov
ljmp
testb
lods
popa
cli
loopne
mov
mov
ret
clc
addb
sahf
jle
scas
or
mov
into
sbb
mov
sahf
jl
stos
push
cmp
push
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
inc
fwait
mov
js
add
add
add
xor
xchg
popa
dec
mov
out
ret
bound
push
in
xor
mov
aad
mov
jno
in
pxor
pushl
mov
cwtl
adc
in
and
aam
mov
jecxz
ja
cmpl
push
xchg
mov
and
mov
sti
lods
lock
inc
cmp
and
xchg
lea
xchg
add
dec
xchg
pop
aam
xchg
push
roll
cmpsb
pop
pop
jns
repz
add
outsb
pop
cli
or
push
cmp
jmp
leave
fistpl
je
or
nop
mov
or
cmp
sarl
mov
xchg
adc
es
orb
mov
fdivl
sub
nop
mov
jmp
pop
or
cs
mov
outsb
out
stos
gs
dec
jp
jecxz
inc
add
add
jae
adc
mov
ds
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
sbb
into
outsl
repnz
sbb
push
adc
mov
popf
xchg
ja
setle
lcall
jns
sub
jbe
add
mov
fmull
outsb
pop
ja
sbb
add
mov
int3
cmp
aaa
pop
fnsave
daa
mov
cli
lcall
or
or
mov
pop
mov
stos
sub
rolb
dec
inc
jg
adc
push
out
fnsave
out
stos
push
cmp
cmc
mov
jbe
popa
push
rcl
pop
cmc
loope
sbb
sub
mov
ss
or
push
lret
in
ljmp
inc
mov
lahf
lret
pop
cwtl
sbb
sbb
dec
lea
sub
fcmove
enter
and
nop
shlb
mov
arpl
sub
shl
cmpsl
jle
mov
adc
repnz
lock
push
dec
adc
lcall
mov
nop
test
aam
int
aaa
das
aam
dec
dec
push
cmp
add
add
mov
std
push
mov
push
lahf
sub
dec
push
add
in
fsubl
inc
push
fs
fcoml
andb
fbld
add
mov
xchg
xlat
out
subb
cmp
sbb
pushf
cmp
mov
pop
jmp
out
imul
push
jae
inc
out
nop
mov
inc
mov
icebp
mov
or
imul
push
and
loopne
jp
cmp
push
push
dec
movsb
inc
add
scas
jge
cwtl
aam
xchg
jecxz
in
push
es
inc
cld
rolb
lahf
add
inc
std
push
mov
adc
push
cmpsl
push
xchg
push
jmp
or
cs
xchg
push
xlat
sub
or
mov
jne
aad
and
lock
dec
clc
cli
xor
mov
and
dec
jbe
mov
in
hlt
lahf
xchg
mov
xchg
les
das
sub
stos
pop
arpl
addr16
sub
pop
cmpsb
cld
stos
test
add
add
add
les
rolb
sbb
lea
jbe
mov
sub
push
push
or
lahf
sbb
ret
mov
adcl
aam
orb
fcompl
inc
xchg
jp
ret
lret
cmp
push
ja
shr
adc
dec
xchg
addb
mov
push
lods
pop
and
push
cmp
push
mov
loope
je
xor
pop
xchg
adc
xchg
in
inc
decb
imul
stc
push
mov
push
add
lret
jp
push
xlat
lds
faddl
lea
adc
fs
repnz
stos
dec
outsb
push
arpl
das
adc
fwait
stos
xor
ljmp
and
fistpll
pop
and
fwait
ret
sbb
popa
mov
into
jge
scas
pop
pop
ficoml
aam
mov
pop
in
mov
xor
add
add
out
out
pushl
xchg
xor
fsubrp
adc
add
add
clc
jg
pop
pop
imul
fwait
cwtl
ror
lock
in
aas
mov
push
imul
xchg
out
imul
cmpsl
stos
ss
xchg
sub
movsb
xchg
inc
push
xchg
push
iret
mov
aam
lret
pop
push
out
ret
xor
cwtl
repz
pop
xchg
sbb
and
mov
push
ror
or
sbb
jno
movsb
aaa
jmp
dec
xrelease
or
les
push
icebp
inc
imul
mov
mov
xchg
jnp
push
aad
sub
js
mov
sbb
inc
jecxz
imul
mov
push
pop
pop
out
ss
or
cwtl
sbb
mov
inc
sub
jmp
sbb
mov
lock
mov
iret
mov
iret
ret
lock
pop
mov
dec
test
int
cmpsb
pop
add
add
add
push
scas
mov
insl
stos
orb
add
mov
jns
add
test
add
call
test
pop
rcrl
cs
int3
push
mov
mov
int
loop
or
and
aam
mov
xchg
ljmp
lea
sub
js
cmp
ror
cs
push
xchg
inc
fnsave
mov
mov
and
adc
inc
mov
adc
lret
xor
popf
mov
fisubs
sbb
das
data16
pop
mov
lock
or
hlt
dec
inc
mov
loop
hlt
or
cwtl
ret
push
push
xlat
js
andl
sti
mov
sti
and
xchg
int3
add
in
mov
loop
das
arpl
xchg
dec
sub
cmp
or
pop
sbbl
es
add
dec
sub
imul
xor
mov
mov
aaa
xchg
and
movsl
mov
mov
mov
repnz
nop
incl
add
add
mov
fs
pop
andb
aas
push
aad
cmp
int
cmpb
pop
pop
cmp
fcomps
fwait
push
loop
pop
mov
jne
jo
rol
hlt
and
push
inc
lock
lret
xor
jg
mov
repnz
jl
add
xor
xchg
mov
imul
or
jno
mov
imul
xor
test
adc
or
push
inc
inc
pop
xchg
and
jl
scas
cmpsl
mov
sbb
mov
test
xlat
adc
addr16
and
das
mov
and
xchg
xchg
dec
prefetch
or
sbbl
jp
push
xor
mov
test
mov
ror
shlb
stos
adc
mov
and
psllw
push
dec
clc
sbb
cmpsl
lock
xor
add
fdivl
mov
rorb
xchg
add
add
add
sub
loopne
lea
jae
roll
outsl
pop
ss
popa
add
pop
and
orl
hlt
pushf
or
dec
mov
add
dec
outsl
fsts
in
mov
mov
cmp
push
loopne
jo
nop
and
and
sub
loopne
push
cmpsb
and
xchg
add
push
shl
mov
mov
fcoml
aam
mov
fs
mov
arpl
test
es
push
out
in
ljmp
mov
xor
call
call
lods
jmp
cltd
icebp
xchg
mov
jmp
dec
loop
jae
int3
cmc
cvttps2pi
sbb
push
xchg
gs
dec
in
add
mov
adc
cld
push
mov
pushf
hlt
add
inc
pop
xor
cli
imul
sbb
cltd
scas
nop
mov
dec
in
nop
inc
stc
mov
mov
lods
imul
xchg
outsb
lods
xchg
cwtl
add
add
add
dec
mov
movb
lahf
jmp
fidivrl
hlt
jns
xor
mov
lea
rorl
lret
je
push
cmp
popf
mull
lods
jae
pop
lcall
gs
dec
lcall
push
rorb
imul
cmc
cli
and
xor
push
rcll
push
mov
adc
cli
test
jecxz
fldenv
push
mov
insb
scas
adc
fcmovu
xchg
or
movsb
insl
mov
bnd
shlb
in
loope
and
mov
hlt
lock
cmp
sbb
sub
mov
lea
es
adc
mov
pop
lea
cltd
sub
add
outsl
hlt
mov
arpl
data16
xchg
fs
push
insl
pop
pop
dec
adc
fsubr
xor
lcall
scas
ljmp
cld
int3
xlat
fsubrl
cli
lods
xchg
sub
scas
or
cmp
mov
loope
add
add
add
insb
cmp
shlb
outsl
push
cld
push
das
push
sbb
push
inc
push
mov
xor
push
or
sub
sub
jnp
mov
xor
into
pop
fsubl
mov
sbb
shlb
loope
push
movmskps
mov
sbb
iret
hlt
and
mov
push
inc
mov
jae
stos
pop
mov
sub
pop
inc
xchg
scas
adc
in
outsb
pop
or
sti
adc
test
andl
push
jp
or
push
es
push
lcall
mov
xor
ds
scas
xchg
push
test
and
mov
test
jae
pop
test
mov
xor
out
pop
pop
cs
fisttpll
sub
push
sub
loop
pop
sub
sub
int
cmp
and
std
les
xchg
stos
mov
mov
add
xchg
enter
push
fbld
jno
inc
mov
add
add
mov
push
mov
pop
dec
sub
mov
ffree
xor
aas
addb
sarl
out
je
gs
faddp
add
test
mov
test
sub
mov
pop
dec
ficomps
lcall
inc
xor
orb
or
pop
cltd
roll
inc
xor
loopne
mov
jns
cmp
push
xchg
pop
daa
push
cltd
test
mov
ljmp
and
or
dec
push
insb
inc
sbb
mov
sbb
sub
fcmovbe
or
adc
mov
out
mov
jge
shlb
sub
dec
cmpsl
dec
xor
lea
cld
add
xchg
mov
pop
out
rcll
sub
jns
inc
sub
sarl
mov
into
push
mov
jg
fistl
mov
into
fwait
add
mov
hlt
movsb
add
add
add
mov
or
dec
int3
inc
sbb
mov
out
call
xchg
mov
std
and
mov
loopne
pop
repz
fcmove
mov
lahf
add
js
and
inc
out
or
pop
lretw
adc
into
xlat
lds
shr
test
dec
pusha
pop
jnp
cmp
loopne
rep
notl
lods
push
scas
stos
sub
ljmp
jbe
imul
loop
inc
dec
icebp
popa
sub
rcll
arpl
int3
xchg
mov
roll
jo
dec
lahf
sub
je
icebp
stos
pop
shll
dec
mov
jns
xlat
sbb
add
xchg
sbb
lods
pop
in
inc
rsqrtps
out
add
imul
push
dec
xor
inc
and
repnz
cmp
and
and
pop
stc
and
hlt
inc
add
imul
mov
add
add
xor
mov
pop
sarb
in
cs
add
add
sbb
addr16
rorl
sub
and
loope
lret
loopne
les
mov
fsubr
jae
dec
xchg
adc
xor
sub
pop
adc
test
add
popa
lahf
ffree
mov
das
push
xchg
mov
or
pop
mov
es
hlt
into
fldcw
or
outsb
sti
shlb
sbb
xlat
rcrb
sahf
enter
sbb
xchg
enter
jnp
fiadds
shlb
outsl
scas
lahf
adc
inc
push
insb
jge
pop
popa
mov
leave
daa
mov
dec
imul
pop
divl
int
call
leave
dec
sub
cmpsb
and
pop
or
popf
push
and
sbb
jnp
negb
scas
mov
mov
fisubrs
sbb
cmp
insl
inc
je
sbb
repz
xor
sti
inc
out
aas
mov
shlb
jmp
lods
push
add
add
add
cmp
adc
dec
hlt
jnp
aad
ret
repz
rclb
jmp
add
sbb
push
add
loope
or
sbb
jg
add
adc
loop
xchg
lods
and
adc
cltd
sub
jno
jae
lock
push
jno
imul
adc
xchg
insb
inc
outsb
jae
loope
test
pop
cmp
clc
stos
jmp
stos
outsb
push
lahf
xchg
cmp
adc
cltd
movsb
xchg
negb
jo
dec
pop
pushf
inc
sbb
test
or
movsb
push
andl
inc
popa
or
and
adc
mov
stos
ret
das
dec
negb
pusha
push
or
jb
aas
mov
jecxz
stc
pop
addr16
push
pop
or
gs
sub
cmp
mov
fs
stos
and
ret
and
nop
xchg
sbb
push
icebp
fucomip
add
ret
sub
outsb
xchg
cmp
push
bnd
dec
leave
and
push
push
adc
add
add
stos
jno
daa
shlb
fstps
movsl
push
lods
mov
pushl
out
sbb
and
mov
aam
pop
icebp
jbe
mov
ja
aaa
mov
or
shrl
loope
cmpsb
sbb
sub
mov
xchg
sbb
ss
fs
sbb
push
mov
jnp
movsb
or
sarb
ljmp
sub
mov
iret
adc
mov
jmp
mov
push
xchg
fdiv
mov
push
pop
dec
popa
cli
jmp
je
jnp
adc
mov
push
pop
jle
fcmove
insb
inc
out
pop
sbb
in
in
cltd
leave
add
call
adc
imul
fisttpl
lock
test
or
test
xorb
xor
inc
dec
mov
in
sbb
xchg
sbb
popa
cltd
mov
sbbl
sbb
in
out
ja
filds
sahf
and
add
add
in
and
stos
add
mov
inc
push
mov
xor
mov
shrl
mov
push
fcomps
stos
mov
jnp
mov
testb
push
inc
lods
das
in
lret
lcall
ja
iret
push
pop
shll
ja
ja
sbb
mov
mov
sbb
sbb
shrb
push
lock
pop
add
xor
jbe
aas
ret
fimuls
std
inc
cmp
sahf
sbb
cmp
ret
jnp
lods
rclb
dec
inc
or
jnp
mov
lds
jmp
mov
nop
dec
add
sbb
jns
xchg
repz
outsl
repnz
cmpb
push
pop
lret
mov
push
inc
push
fs
jo
xchg
mov
push
jo
test
cmp
cld
imul
jnp
loopne
lock
into
call
scas
test
in
inc
push
or
mov
add
add
fwait
xchg
aam
sbb
into
xchg
mov
mov
adc
and
mov
aas
stc
enter
mov
inc
jb
inc
add
decb
int3
fs
pop
lcall
inc
out
insb
loop
adc
jl
bound
or
jnp
testl
test
inc
mov
pop
mov
roll
pop
pop
push
jns
mov
jne
mov
pop
mov
adc
ficomps
mov
mov
subb
jl
cmc
sub
addr16
cltd
aaa
test
jb
mov
lods
jg
cmp
xor
xlat
shr
mov
adc
adc
lods
mov
repz
lret
dec
mov
xlat
xorl
cmp
lret
clc
mov
xchg
jo
loopne
xrelease
mov
cli
and
cmpsb
lahf
lea
lea
mov
mov
jg
neg
pop
daa
inc
nop
xchg
inc
pop
mov
add
add
jl
into
lods
movsl
sti
idivl
adc
sub
adc
push
xchg
mov
lods
les
inc
mov
enter
inc
mov
in
stos
loop
jg
dec
test
mov
test
repz
adc
ss
jb
movb
ljmp
outsl
push
out
pusha
sbb
es
mov
push
adcb
sarb
push
cmp
mov
dec
inc
push
test
stos
inc
hlt
lret
sbb
dec
cmp
cwtl
sub
shll
sti
mov
push
test
xor
mov
mov
jl
ror
das
shl
jg
stos
ds
rclb
cli
mov
mov
mov
pushf
cmpsb
fdivrl
inc
xchg
and
inc
es
movsl
scas
gs
push
mov
jne
mul
shll
cli
cmp
stos
test
int3
mov
fisttpll
sub
test
cmp
sti
jg
cmp
je
pop
fs
or
add
add
dec
out
addb
dec
in
cltd
icebp
fwait
mov
test
pop
notl
push
push
dec
cmpsb
jecxz
fdivrs
push
pop
push
fildll
out
cmpsl
cmpsl
hlt
push
es
sbb
das
mov
cmp
inc
mov
sub
jmp
add
fdivl
mov
pop
pop
ret
subl
push
jns
add
scas
negl
mov
mov
and
gs
fwait
sub
mov
mov
cmpb
fmull
int3
fisubrs
mov
movsl
lods
es
mov
call
repnz
jb
pushf
lea
aas
movsb
cld
cwtl
mov
jg
push
cmp
cmp
mov
in
xor
cmp
lret
mov
imul
aad
jbe
cltd
xchg
imul
pop
stc
movsb
ds
rcll
int
xor
and
mov
test
add
add
jnp
fstp
fcompl
movsb
and
xchg
les
add
add
fcomps
jb
mov
int3
xor
cmp
pop
test
jae
cmp
pop
xchg
jne
test
das
inc
shrl
std
push
jns
and
and
cmpsb
inc
in
dec
sbbl
psubsb
data16
int
call
jmp
cmp
clc
pop
ss
xchg
xchg
out
adc
push
adc
je
cltd
inc
out
shlb
mov
xor
icebp
or
sbb
call
mov
mov
push
shll
dec
sub
push
xchg
sub
scas
pop
iret
in
cmp
and
cwtl
out
or
or
ficompl
stos
sbb
adc
roll
push
add
push
test
scas
sbb
mov
mov
sub
inc
out
jne
dec
mov
mov
mov
push
enter
add
add
outsl
mov
add
push
sub
enter
add
add
jns
lcall
push
cld
mov
gs
test
scas
jg
popa
and
rorb
and
cltd
stc
aas
stc
pop
out
stos
lods
repz
sub
outsl
mov
pop
mov
fucomip
or
shlb
test
testl
sub
mov
push
out
shrb
sub
or
pushf
pop
mov
lds
or
fwait
and
sbb
mov
push
mov
fdivs
sahf
out
or
pop
lret
inc
add
bound
push
nop
cmpsl
dec
cmp
push
and
mov
pop
lahf
sub
das
xchg
imul
dec
negb
mov
les
js
fisubrs
mov
jg
repz
incb
and
and
test
rcrl
nop
mov
inc
or
xor
int3
xor
pop
pop
jnp
pop
test
ret
xchg
xor
mov
cmpsl
mov
mov
cli
sbbb
loope
jmp
fisttpll
push
add
add
add
push
repz
push
shrl
mov
inc
loop
pop
cmp
mov
mov
gs
sti
int
inc
and
mov
movsb
repz
pushf
jb
push
popa
add
add
je
pop
xchg
mov
inc
popa
add
rcl
rep
or
in
addb
mov
scas
mov
aam
mov
imul
dec
icebp
fmuls
or
adc
push
pop
sbb
sbb
adc
add
js
sbb
dec
add
jge
cwtl
adc
je
lcall
lods
sbb
test
cmp
cmp
sub
and
push
xorl
cmp
xchg
pop
cmpsl
cltd
out
js
lret
xor
cmpsb
adc
js
jl
xchg
jbe
dec
mov
sub
push
out
sbb
dec
mov
xchg
xchg
pop
shr
into
sahf
icebp
or
psrad
xor
pop
pop
push
jb
and
fwait
dec
subl
fs
cmp
stos
roll
add
xor
xchg
lds
rcll
cmpsb
rorb
add
add
add
jge
in
mov
xchg
aaa
out
stc
lods
adcl
xor
add
pop
loope
rcrl
push
insl
xchg
jg
pop
jbe
fwait
or
insl
in
test
cli
xchg
push
enter
arpl
sbb
stos
loopne
mov
sbb
stc
or
test
lret
hlt
sarl
int3
mov
aam
nop
and
jp
adc
xchg
aad
fdivrs
fsubp
xor
or
rclb
outsb
loope
or
es
jns
jmp
pop
pusha
jmp
int3
movsl
xor
jnp
js
pop
xchg
or
pop
adc
jo
insl
cmp
xor
movsb
and
push
testl
sbb
cltd
adcb
jne
mov
mov
xchg
pop
inc
mov
push
sbb
mov
xor
lea
add
dec
cli
inc
jg
int
xchg
lods
or
jo
push
aam
add
add
add
int
jbe
pushf
push
addl
add
push
int3
push
inc
daa
cmc
lods
lret
push
in
popw
fimuls
les
mov
pop
pop
cmp
add
push
icebp
repnz
jle
fstps
sub
sbb
cmpsl
outsl
repz
and
xorb
inc
xor
dec
sub
and
jmp
imul
nop
add
jne
arpl
add
inc
add
push
psubsb
aam
lret
push
and
pop
jg
lods
xchg
pop
jmp
ret
outsb
add
pop
bound
cld
lret
mov
or
mov
inc
xchg
sub
in
jo
daa
lcall
cmp
loopne
cmp
push
popf
fmuls
movsb
mov
lahf
or
shlb
or
movsb
push
cmp
add
ret
jp
rcrl
and
scas
sub
jmp
add
add
xchg
std
cmp
jle
fistpll
fisubl
adc
add
add
cmpsl
sahf
out
mov
or
lahf
and
jno
jb
popa
sub
mov
ret
adc
lcall
in
adc
sub
pushf
lret
in
mov
sbb
aam
xchg
ljmp
add
out
mov
stos
lock
or
cmp
add
jmp
jnp
lds
popf
sbb
in
mov
jae
cmp
sub
push
in
leave
in
test
lcall
out
repnz
jmp
data16
dec
pusha
nop
jo
lret
dec
ljmp
pop
clc
mov
out
inc
loop
ret
clc
pop
fbstp
data16
xchg
movsl
subl
into
pop
sbb
orb
and
sub
inc
fsubl
dec
fwait
gs
push
adc
xor
js
mov
or
add
iret
xlat
ficompl
inc
das
mov
dec
fcoml
add
add
add
cmpl
cli
mov
or
or
sub
shl
xor
mov
jge
dec
dec
movsb
cmp
je
push
test
inc
cmp
bound
cmp
push
jp
movsl
fdivrl
and
mov
call
mov
jb
push
pop
xchg
cwtl
inc
push
push
lock
add
je
std
add
lret
lods
inc
nop
test
adc
scas
add
sub
ret
movsl
pushf
mov
push
lock
mov
mov
jb
xor
imul
jge
mov
movsb
sbb
push
mov
and
call
test
lea
test
stc
and
sahf
mov
sti
scas
jp
cwtl
dec
negl
push
imul
push
lock
cmp
push
in
arpl
pop
push
xor
mov
leave
push
in
js
daa
add
lcall
out
cmpsb
mov
xchg
add
add
sub
iret
outsb
jmp
push
test
into
xchg
push
loopne
add
add
add
jge
push
mov
mov
xchg
ds
mov
mov
aam
cmpsb
bound
jno
ljmp
dec
nop
insb
mov
sub
cmp
push
inc
jb
arpl
dec
pop
inc
es
mov
ja
jge
sub
in
lea
sub
xor
xor
out
jns
gs
jecxz
aad
add
sub
or
push
and
inc
popa
lcall
or
loop
stos
je
pusha
mov
dec
addr16
rclb
xor
pop
mov
das
mov
cmp
inc
ror
ljmp
adc
sub
hlt
pop
xlat
sti
jp
push
cltd
mov
mov
mov
les
xorb
push
out
cwtl
pop
push
or
lods
sbb
adc
or
adc
mov
imul
adc
out
pop
ret
xlat
addb
add
sbb
std
sbb
stc
cld
or
jae
sti
fsub
adc
add
add
jnp
ss
pop
mov
mov
aam
push
hlt
mov
das
inc
shl
das
mov
mov
pop
test
jl
addr16
lret
add
les
movsb
sub
mov
lea
jne
sub
fadds
faddp
pop
push
sub
add
mov
bound
lock
xorb
dec
imul
fcoms
pusha
mov
movsl
push
add
push
and
and
mov
xchg
aam
sub
mov
inc
mov
arpl
and
jmp
xor
xchg
xor
outsb
lcall
pop
int3
ret
shlb
push
outsl
test
out
sarb
outsl
dec
ror
loope
cltd
push
pop
cltd
gs
push
jbe
dec
or
add
dec
sub
adc
inc
loopne
ja
inc
aam
jno
jb
test
jl
testl
sahf
xor
add
test
mov
negl
adc
pop
xchg
cmpsb
mov
adc
add
in
fisubs
shll
sub
xchg
mov
icebp
xchg
dec
cmp
and
jmp
cmp
mov
shl
aas
inc
xor
xchg
in
das
in
mov
xor
int
mov
enter
fnsave
xchg
loopne
out
adc
addr16
xlat
cmp
iret
jno
into
mov
cmp
outsb
mov
ret
enter
jbe
mov
push
xor
push
or
mov
push
push
add
mov
mov
add
mov
push
call
cmp
sbb
jecxz
xchg
pop
xor
sbb
iret
addb
sub
xchg
xchg
insl
jo
and
mov
shlb
shlb
lock
mov
imul
cmp
rcl
jb
dec
jne
jo
cmc
adc
mulb
add
movsl
inc
push
out
cmpsb
or
rcrb
add
add
dec
pushl
cmc
xor
push
add
add
add
popf
sub
mov
test
insl
mov
rorl
shrl
jle
mov
adc
orl
jae
mov
rol
dec
fcomps
dec
gs
mov
mov
adc
jnp
mov
sahf
push
mov
leave
es
and
test
scas
or
mov
xchg
popf
loope
lds
push
out
bound
hlt
jmp
call
pop
scas
push
mov
sub
out
add
mov
push
lods
xchg
jp
fs
lock
adc
push
shrl
push
mov
lods
xor
lea
dec
pushf
loopne
xchg
jle
aas
int3
xchg
xor
adcl
sub
jl
lea
jb
les
jne
sbb
lea
jns
lds
popa
inc
into
test
adc
mulb
push
insl
es
nop
pop
sub
inc
ja
pop
aas
dec
push
shll
pop
add
add
add
js
push
xchg
inc
sbb
fwait
inc
sub
pusha
mov
mov
mov
add
jns
mov
jo
add
hlt
xchg
xchg
jne
cmpsl
and
mov
divb
addr16
js
jp
sarl
push
add
lahf
arpl
aad
in
movsb
jae
inc
dec
in
cmc
jne
xor
dec
aaa
jne
xchg
push
dec
mov
mov
jo
push
dec
cwtl
adc
loope
add
clc
sbb
cs
sti
push
dec
js
stos
xchg
cmpsl
inc
nop
dec
movsb
push
mov
lds
or
xchg
push
xlat
movsl
inc
subl
and
cmp
or
xchg
arpl
jns
insb
inc
pop
arpl
data16
pop
sbb
dec
jb
pop
shll
loop
adc
pop
add
xor
jnp
or
lea
enter
iret
repz
jae
ja
div
mov
xor
add
add
ret
into
cli
sub
push
lret
cmp
scas
data16
pop
out
cmp
dec
sub
in
movsb
test
jp
mov
cld
out
fwait
jge
and
mov
sbb
daa
cmpsl
lds
iret
int
cltd
cli
push
bound
mov
aas
pop
xor
pop
aad
lds
jne
fs
lret
imul
add
mov
xlat
sub
cltd
je
cli
fnstcw
nop
xlat
jbe
xor
jnp
out
nop
mov
push
test
push
decl
dec
arpl
cmp
adc
push
test
xchg
push
jl
inc
pop
out
mov
mov
into
adc
mov
sub
and
cmc
es
xchg
or
in
lea
in
mov
test
outsl
xchg
jnp
insl
push
stc
das
xchg
andl
mov
pop
xchg
clc
add
aaa
push
cmp
add
add
cli
std
jg
push
pushf
dec
pop
lds
clc
sbb
add
add
xchg
scas
aad
leave
daa
in
dec
push
lods
popf
rclb
nop
adc
dec
lds
adc
pop
xchg
pop
or
mov
testb
sahf
mov
fidivl
jmp
sbb
mov
cmp
je
out
mov
movsb
xchg
jl
adc
and
add
dec
jne
mov
or
push
notl
push
cs
dec
call
dec
sbb
push
cmp
push
mov
push
and
movsb
xchg
idivl
pop
nop
outsb
in
fucom
jp
outsl
add
sub
int3
dec
test
cs
dec
fstpt
jne
sub
sbb
mov
push
sub
pop
fwait
lock
cmp
mov
push
imul
push
das
inc
mov
dec
dec
dec
or
push
push
lahf
or
pop
mov
sbb
jns
cmpsb
testl
incl
sbb
dec
scas
fs
sbb
add
add
bnd
cmp
and
and
jbe
sti
mov
lret
rolb
nop
inc
sti
sbb
rolb
imulb
shrl
mov
mov
xchg
push
andl
xorl
pop
pop
push
rcrl
sar
stos
fiaddl
mov
bndldx
mov
scas
and
addb
iret
aad
outsl
mov
addr16
loopne
cmp
xor
push
rclb
jbe
into
cmc
shll
xchg
xor
pop
shl
push
popa
push
out
xor
pop
pop
clc
adc
lret
arpl
pop
inc
cwtl
in
and
add
mov
sub
xchg
aam
sub
dec
popa
fcomps
mov
fs
add
push
nop
sub
xchg
add
pop
dec
orl
jp
scas
sbb
popa
pop
dec
lock
andl
sub
inc
jmp
ss
aaa
push
es
jg
pop
or
xor
arpl
add
add
outsb
jae
loop
pop
add
ror
add
repz
js
cmp
or
lock
mov
iret
cs
xchg
adc
test
rol
dec
xor
fldt
bound
idivb
sbb
and
movsb
mov
test
negl
cmpsl
cmp
negb
aas
lret
mov
xchg
jle
test
add
jmp
mov
outsl
sbb
iret
jl
outsb
in
cmpsl
dec
dec
imul
test
testl
iret
xor
cmp
pcmpgtb
sub
ss
lahf
out
imul
fldt
fwait
ret
xchg
xchg
insl
lahf
out
sub
dec
xchg
ret
addr16
adc
push
sbb
add
lcall
dec
icebp
pop
pusha
xor
adc
and
push
lahf
das
xlat
hlt
dec
fwait
jae
jp
push
clc
or
dec
push
cmp
sbb
add
roll
into
cmpsb
xchg
jmp
cmp
fidivrl
stos
in
ret
sub
push
cmp
ret
icebp
lcall
and
aaa
sbb
adc
andb
addr16
push
jmp
lea
insb
adc
pop
add
push
int3
pop
fsubs
add
mov
xchg
stos
test
sarl
pop
out
lock
addl
xchg
and
and
mov
iret
scas
stos
insl
rcrl
mov
hlt
pop
test
stc
pop
or
sub
push
pop
mov
repnz
daa
icebp
adc
mov
call
ljmp
pushf
mov
xchg
rcll
fldl
sti
jb
aas
pusha
aad
outsl
sbb
mov
mov
or
push
shrb
xchg
gs
out
jle
add
add
stc
lods
xor
mov
mov
add
add
sbb
scas
lcall
pop
mov
or
lock
cmc
sub
mov
pop
je
push
push
imul
call
jns
xlat
jae
push
stos
fidivrs
test
mov
mov
or
test
xchg
inc
fucomip
out
cmp
lcall
sub
les
push
hlt
add
scas
sbb
push
out
idivl
adc
lcall
cmp
rcrl
mov
inc
sub
sub
mov
push
das
push
divl
pop
mov
mov
and
mov
sub
fiaddl
mov
mov
mov
jb
mov
pop
daa
pop
in
mov
out
mov
rcrl
adc
xor
sarl
pop
push
add
or
mov
xchg
je
or
pop
or
add
ficoms
stos
sbb
call
mov
or
add
add
add
jp
in
or
xor
shlb
lret
lahf
lock
jg
insb
gs
or
cli
adc
cmp
pop
sarl
sti
jne
push
mov
jecxz
les
mov
xor
aaa
iret
mov
stos
push
addl
icebp
loopne
pop
fnstcw
pop
repz
mov
into
movl
dec
mov
cmp
cmc
ficoms
ss
dec
out
lahf
xchg
das
repnz
sub
fists
and
sub
ret
negl
rolb
inc
sti
xor
or
into
xchg
lea
xchg
pop
into
dec
add
cmc
jb
dec
rcr
fiaddl
jmp
mov
push
enter
sbb
xor
pop
in
movsb
outsb
repz
dec
xchg
test
test
dec
cmp
push
cld
rolb
inc
xchg
bound
mov
out
stos
jge
or
and
add
add
adc
dec
mov
mov
mov
mov
aam
cmp
hlt
mov
shrl
loop
adc
inc
jmp
test
test
repnz
mov
fsub
lock
fwait
mov
xchg
inc
dec
lret
push
test
flds
adc
rcl
sbb
js
lret
in
fwait
mov
xchg
pop
aad
adc
jp
jg
jle
test
sbb
test
and
cmpsl
add
sub
push
rorb
sti
mov
mov
sti
int3
out
mov
bound
sbb
mov
add
ret
and
pop
repnz
add
out
mov
add
lock
xchg
int3
sub
js
scas
fwait
cmp
sbb
imul
jne
ds
movsl
loopne
pushf
and
es
les
lock
sub
int
insl
jecxz
das
in
lret
jno
mov
adc
mov
add
dec
or
out
xchg
iret
push
aas
jmp
and
add
add
lock
and
js
cmp
jmp
incb
push
ret
mov
jns
rclb
shr
repnz
inc
adc
jecxz
sahf
sub
dec
test
pop
jns
xchg
rcrb
bound
fcompl
sarb
addl
sub
push
cltd
fsubrp
scas
fs
mov
mov
div
mov
aaa
mov
mov
ds
jb
addr16
sub
mov
movsb
lds
pop
leave
cmp
js
or
dec
hlt
ljmp
or
cmp
pusha
loope
jns
stc
cmp
fucomi
xlat
pop
stc
pop
xor
sbb
cmc
je
inc
push
pop
fldcw
arpl
loop
pusha
mov
fists
decl
mov
xchg
out
scas
orl
cld
pushf
mov
pop
popf
or
adc
xor
lock
pop
dec
inc
arpl
add
add
add
in
add
cmp
out
loope
jns
inc
repz
add
add
mov
rorl
or
cwtl
dec
aas
loop
mov
sub
ljmp
rolb
cmp
sbb
aad
lock
adc
pusha
sbb
insb
in
into
cmp
popa
repz
jo
mov
sbb
and
cmpsl
inc
cmpsl
stos
ret
pop
push
push
fbld
and
cmp
mov
jae
imul
inc
hlt
insb
dec
dec
adc
fsts
iret
mov
or
sar
jns
xchg
pop
insl
popa
imul
inc
xchg
movsl
imul
sub
lcall
push
lret
rcl
enter
jb
xchg
jb
pop
pushf
inc
in
add
sbb
pop
jb
stc
arpl
mov
inc
push
pop
jg
pop
loopne
fimuls
lret
jo
or
inc
push
mov
pop
rcll
mov
and
out
out
enter
add
test
sbb
sti
push
mov
pop
pop
mov
add
add
stc
add
js
push
push
sar
inc
jmp
pop
sub
push
xor
or
add
sbb
or
push
fldt
push
aam
xchg
dec
or
cmp
adc
popf
in
mov
add
movb
jp
adc
mov
shrb
pop
inc
sti
add
mov
dec
nop
mov
and
inc
fistpl
int
or
fwait
cmp
in
sbb
loope
test
or
sub
fisubs
xchg
push
adc
out
pushf
adc
cli
fwait
sahf
adc
adc
popf
rorb
shll
fmuls
loopne
cmpsl
pop
pusha
cltd
ja
insl
ljmp
repz
mov
xchg
test
test
int3
push
mov
sub
dec
pop
cmc
cmpsb
sti
mov
dec
cltd
in
mov
in
dec
movsb
xchg
dec
jmp
bound
push
sbb
jb
add
add
jg
cld
ret
add
lret
and
add
add
addb
push
lds
mov
lahf
arpl
sub
or
aaa
cmp
lret
inc
cld
xor
cli
adc
arpl
pop
icebp
out
daa
mov
mov
in
mov
cwtl
cmp
mov
fstps
mov
fwait
mov
ljmp
sub
xchg
std
mov
test
ja
stc
stc
int3
add
fbld
add
jl
dec
fimull
fxam
lock
scas
test
inc
popf
shr
jl
aad
xchg
ret
adc
mov
mov
xor
or
mov
push
stos
push
sbb
in
stos
lods
inc
mov
das
shrl
out
in
xchg
mov
mov
mov
stc
jns
xchg
xor
fisttpll
pop
popa
mov
ret
in
jmp
fs
call
add
add
mov
iret
mov
or
adc
add
add
sub
pop
sti
cmpsl
adc
ret
xchg
add
jle
push
sub
push
adc
gs
or
xchg
xor
out
xor
sbb
sahf
mov
dec
mov
inc
push
leave
dec
cmp
rcrl
and
inc
and
loope
mov
loopne
dec
mov
pop
pop
scas
hlt
add
adc
mov
inc
das
push
mov
and
data16
cmp
dec
push
fimuls
pushl
icebp
cmp
pop
xor
mov
mov
adc
mov
push
jns
mov
imulb
add
sbb
mov
adc
jge
mov
mov
addr16
out
test
lcall
xchg
push
jnp
sub
lahf
or
data16
sti
mov
push
add
in
sbb
clc
dec
and
jl
pop
and
and
cmp
or
jg
arpl
jae
imul
add
add
or
fcomip
push
or
fistpl
test
jbe,pt
mov
inc
cli
mov
lahf
les
xchg
lock
adc
push
fstl
mov
inc
into
rorl
jne
push
and
cmp
lret
pop
js
insl
insb
mov
nop
lahf
shll
das
push
mov
and
pop
inc
push
add
loop
inc
jno
test
xor
or
mov
or
insl
xchg
dec
hlt
lcall
jge
cmovns
movsl
cld
and
adc
mov
inc
stc
add
xchg
incl
dec
mov
and
push
push
int3
lds
cli
pop
mov
sub
jg
xor
jbe
aas
andb
xor
jl
ljmp
fwait
cld
push
adc
sbb
sbb
mov
pushf
negl
popa
pop
dec
fistpll
das
lcall
popf
push
es
in
fsts
jle
incl
add
add
xor
clc
cli
clc
sarb
sti
mov
fnstsw
sub
add
add
add
sub
sub
push
loope
test
xchg
xchg
fs
jecxz
adc
adc
pushf
mov
mov
pop
cmp
mov
pop
lods
les
jo
jmp
out
or
mov
jnp
addr16
in
aam
icebp
aaa
aaa
je
sbb
mov
cmpsb
cli
jmp
jns
inc
repnz
scas
daa
inc
lahf
pop
sub
in
or
inc
jae
add
fs
and
mov
out
sbb
jo
sahf
add
inc
inc
insl
xlat
push
mov
sti
adcb
mov
push
dec
jae
mov
notl
fldenv
in
in
imul
xchg
shl
test
adc
jnp
adc
pop
mov
adc
data16
orb
push
mov
mov
ja
cmp
loope
xchg
mov
scas
push
add
jnp
out
mov
add
sub
add
add
jl
sbb
or
push
ja
fadds
stos
shrb
loop
cs
gs
xchg
in
inc
adc
mov
shll
rcl
inc
adc
cmp
bound
push
jp
push
add
loop
out
mov
push
mov
jg
dec
sub
adc
dec
or
push
mov
dec
in
mov
js
aas
mov
and
sub
loop
pop
dec
xor
repnz
test
pop
aam
scas
cmp
adc
das
adc
lahf
pop
int3
enter
rcl
mov
movsb
ret
nop
xor
sarl
leave
pop
testb
mov
cwtl
and
jmp
es
cmp
lcall
push
and
or
jne
movsl
add
in
movsl
add
or
and
ja
mov
mov
mov
sub
jle
dec
movl
fs
es
data16
insb
daa
mov
push
ja
cmp
add
add
cltd
xchg
cmc
popa
pop
adc
jns
add
sbb
xchg
iret
icebp
pop
pop
fcoms
out
aaa
adc
lahf
mov
sub
dec
cmp
addb
js
xchg
cli
cmp
aas
arpl
imul
jae
add
aaa
pop
mov
pop
mov
icebp
inc
icebp
cmp
mov
sub
int
pop
or
mov
jg
lahf
dec
jo
mov
mov
subb
fcompl
aad
sbb
sub
or
int3
dec
out
mov
sub
inc
jg
popa
adc
jge
inc
lret
xchg
lret
add
add
xchg
lds
inc
xchg
xchg
sahf
ficomps
mov
mov
pop
gs
test
push
mov
cwtl
inc
inc
insb
repnz
std
pop
loopne
push
jnp
test
lods
loopne
mov
clc
mov
fldcw
add
ret
add
add
add
cli
push
xchg
ja
push
pop
sbb
xor
int
pop
dec
shrb
into
das
in
std
push
push
repnz
xor
hlt
mov
adc
jg
pop
cmp
xor
mov
mov
into
fstps
jmp
fistpl
cmp
mov
adc
in
fwait
rcrb
mov
aad
sub
pop
sbb
js
into
mov
iret
out
xchg
ret
sub
cs
jmp
in
arpl
cli
call
xchg
lods
ja
scas
in
enter
out
dec
js
mov
sti
cli
push
cmp
mov
jnp
mov
mov
dec
in
mov
sub
pop
imul
rclb
sbb
jp
sub
cmp
repnz
mov
mov
test
jnp
mov
int3
cmp
adcl
imul
sbb
insl
cmp
daa
or
popa
je
push
insb
fdivl
pop
repz
push
sti
cmpsl
enter
aaa
inc
or
add
add
mov
mov
mov
fdivrl
pop
xor
and
xor
mov
adc
cwtl
pop
cmp
mov
arpl
jno
lods
fwait
jge
pop
xchg
mov
add
cmp
ss
sub
mov
xor
mov
outsb
stc
and
dec
mov
lret
fcomps
xchg
or
and
lahf
jo
loopne
adc
cmp
inc
loop
mov
bound
sub
push
stos
jnp
lods
or
ret
pop
sub
mov
loope
mov
loop
out
andl
sbb
mov
and
aas
fisttps
pop
push
push
test
mov
gs
sub
sbb
sbb
js
fisttpl
repz
lods
and
imul
mov
pop
push
and
std
mov
dec
push
sar
inc
sbb
add
add
popf
sarl
jae
cmp
adc
jl
xchg
inc
arpl
dec
shl
out
dec
int3
sbbl
fisttps
dec
sub
sub
loop
fisttps
popf
mov
test
sub
data16
lods
push
shrl
jne
ret
mov
lahf
push
sbb
xchg
inc
add
xchg
cmpsl
push
int
movsl
pop
dec
mov
les
mov
dec
jle
mov
movsb
orb
notl
lret
mov
test
and
shrb
push
mov
add
cmpsb
jne
leave
cmp
or
insb
mov
repnz
jge
jb
cltd
cli
jnp
cmp
xchg
inc
mov
loope
and
add
out
out
shll
cld
insb
dec
rcll
rclb
cwtl
mul
pop
leave
push
shrb
push
cmpsb
lds
xchg
and
inc
and
lcall
add
add
add
fs
std
daa
jnp
push
mov
sub
rcl
divb
shll
cmp
dec
cli
cmp
dec
stos
xchg
rolb
sub
popa
imul
bound
and
enter
mov
aas
in
pop
ss
mov
inc
test
jg
daa
inc
cmp
mov
loopne
outsb
cwtl
outsl
les
arpl
roll
in
or
xor
test
in
xchg
sub
xor
sub
xchg
stos
std
subb
rorl
sub
out
stos
nop
test
mov
fs
jecxz
lret
pop
and
jne
sbb
fadds
sub
int3
pop
enter
rorl
shlb
iret
sbb
ret
ret
pop
or
popa
add
or
les
push
fdiv
out
push
popa
xor
pop
add
pop
dec
sub
cs
dec
jle
shll
sub
and
mov
insb
cmp
lods
inc
fiaddl
ret
ficomps
cmp
lahf
leave
mov
add
add
add
roll
pop
dec
in
or
pop
xchg
jmp
or
pop
sub
mov
mov
call
mov
push
aam
cmpsl
xchg
data16
roll
dec
sub
pop
inc
imul
sub
test
out
dec
ret
stc
test
jbe
loopne
dec
repnz
sbb
icebp
jp
test
int3
adc
mov
mov
jno
xchg
int
test
push
fsubrs
jae
inc
xchg
insb
pop
subl
xchg
outsb
cld
jbe
adc
insl
jbe
in
mov
jae
pop
mov
push
int3
inc
les
xchg
jnp
mov
rorl
jmp
jl
cmp
es
mov
cli
jl
in
push
jo
pop
jo
jnp
sub
clts
mov
insl
mov
dec
mov
sahf
sarb
inc
addb
sub
test
arpl
ja
sub
add
stos
repz
add
add
mov
or
fistl
cmp
adc
mov
cmp
push
xchg
dec
flds
or
aas
pop
sahf
testb
pop
lret
push
repnz
dec
or
push
sbb
xchg
std
adc
inc
mov
call
mov
push
add
xor
xor
enter
loope
dec
mov
out
incl
cld
sbb
and
dec
xor
sub
xor
test
cli
pop
jmp
mov
stos
push
js
mov
ret
xor
mov
push
pop
fidivrs
dec
or
xchg
inc
sti
divb
and
fmuls
dec
sbbl
imul
push
imul
in
sub
mov
lret
loop
adc
cmpsl
mov
fwait
inc
fmul
outsb
push
cmc
xor
sbb
sahf
mov
insl
add
lock
mov
or
fnsave
xor
xor
add
add
das
rorl
insb
lret
inc
push
xchg
xchg
out
xchg
cmp
dec
push
xchg
sub
mov
int
ficoml
xor
push
jg
fbld
mov
pusha
mov
std
imul
call
fcomps
xchg
dec
and
sbb
mov
pop
cmc
and
inc
mov
les
pop
adc
xor
mov
sbb
cwtl
mov
call
cmp
ljmp
inc
dec
dec
test
sbb
mov
push
jecxz
jmp
jl
xchg
mov
arpl
add
imul
insb
aam
test
mov
jecxz
jmp
adc
mov
ljmpw
lret
int3
cmp
mov
fistpll
rclb
notl
mov
clc
adc
test
jno
add
mov
lret
jns
push
pop
fdivp
ss
dec
shlb
rcll
imul
push
sub
sti
pop
jge
neg
hlt
add
dec
push
xor
add
add
inc
jb
inc
push
pusha
je
add
jo
sbb
push
dec
imulb
sub
pop
test
push
cmp
dec
fsubr
xchg
pop
jns
jmp
xchg
dec
add
mov
cld
pop
sti
mov
xchg
sbb
ljmp
xchg
sub
mov
dec
jmp
nop
and
jae
sbb
cmc
in
xchg
out
mov
mov
outsb
mov
adc
xor
icebp
inc
or
mov
cltd
push
dec
xchg
aad
es
inc
fwait
jge
stc
sbb
js
mov
xorb
ja
xchg
cmp
roll
lret
xchg
hlt
aaa
arpl
ds
mov
gs
jle
idivl
xor
jno
fstpl
mov
das
scas
mov
pop
mov
or
mov
mov
adc
push
fwait
mov
cs
ret
fcompl
push
insb
je
cmc
push
inc
test
add
add
fsub
std
in
popf
in
stc
jmp
add
sbb
add
add
add
inc
insl
popf
imul
dec
pushf
pop
jns
popf
ds
hlt
inc
lods
or
pop
sub
pop
shr
out
outsl
pop
ret
mov
aad
jo
jo
das
push
mov
in
hlt
cmp
push
jecxz
xor
jae
dec
aaa
push
and
mov
lods
bound
lcall
xchg
in
lods
push
push
pop
inc
aas
add
popa
sbb
adc
scas
push
xchg
add
fistl
int3
xchg
push
or
idivl
popw
jno
pop
daa
adc
sub
lea
int3
shll
mov
inc
inc
pop
mov
pop
pusha
xchg
cwtl
test
out
mov
cmp
sbb
mov
rcrb
mov
adc
dec
push
int3
xchg
fildl
arpl
cs
fsubl
adc
mov
lcall
mov
pop
xor
pop
pop
jp
jnp
sti
xchg
jle
jp
lods
shrb
xor
add
add
xchg
test
push
pop
or
xchg
stc
pop
mov
xor
jp
cltd
adc
je
or
sub
dec
cld
dec
xor
vminpd
call
add
sbb
mov
das
pop
cwtl
push
sub
adc
out
mov
cmp
loope
imul
adc
inc
or
jl
or
sbb
insl
pop
add
xlat
add
lea
or
mov
pop
dec
sbb
inc
icebp
pop
sbb
ret
scas
dec
sti
and
inc
cmp
dec
dec
loope
fcompl
into
psubusw
fnclex
pusha
into
cwtl
mov
icebp
fyl2x
lds
dec
lret
int
xchg
fsts
push
mov
pop
mulb
je
jp
pop
mov
lods
inc
mov
xor
xor
push
sahf
lahf
adc
mov
inc
xor
sarl
ja
mov
cmpsl
mov
cltd
leave
pop
lret
xor
movl
add
push
sti
decb
mov
movsl
pusha
xor
add
add
lcall
aam
adc
aam
xor
imul
and
repnz
sub
into
in
es
loopne
xchg
jle
mov
dec
dec
sub
adc
pop
stos
push
leave
and
or
xor
dec
or
xorb
in
mov
xchg
movsb
test
xchg
int
jmp
push
iret
push
mov
add
nop
pop
adc
mov
adcl
push
push
xchg
mov
push
mov
mov
mov
push
or
cmp
mov
xor
cld
mov
mov
ljmp
xor
inc
shrb
stos
jmp
test
sbb
or
imul
and
mov
fistpl
mov
aam
pop
aas
test
cmp
mov
fwait
lret
lods
lock
das
dec
arpl
push
ret
cmp
xor
hlt
cwtl
xor
dec
fs
add
or
xchg
adc
lret
sub
sbbl
or
test
sbb
inc
adc
jmp
movsb
shr
cmp
mov
jnp
push
add
sub
adc
fildl
push
jb
mov
adc
inc
enter
test
out
lods
adc
fsqrt
sbb
andb
das
xchg
xor
stc
pop
mov
fisubrs
cmpsb
xchg
jns
ljmp
cmp
mov
aas
pop
add
mov
pop
out
cmpsl
ficompl
pop
or
jne
sbb
adc
sbb
rcll
fdivrl
mov
dec
es
mov
jmp
adc
and
pop
inc
das
addr16
or
xchg
mov
out
hlt
add
pop
push
out
sbb
xchg
xchg
bound
idivl
sahf
rcr
mov
in
lret
or
xor
enter
out
testb
add
incb
ljmp
mov
jmp
add
add
and
cmc
sub
mov
je
repz
mov
stc
add
ficoms
xchg
test
popf
test
inc
aam
fdivrs
dec
push
das
cmp
out
mov
loop
inc
sbb
inc
pop
push
pop
mov
and
xchg
test
shrb
push
add
in
push
leave
shlb
daa
inc
stos
idivl
jb
shl
cltd
xor
inc
je
xchg
daa
push
js
jne
xor
out
lods
repnz
gs
stos
xchg
cwtl
xlat
and
mov
ja
rcr
jns
out
push
sub
insb
int
mov
jecxz
pusha
dec
icebp
mov
xchg
arpl
cmpb
xchg
fimuls
sub
sub
add
push
dec
inc
sbb
xor
or
lds
and
je
dec
and
repz
cld
pop
jge
jmp
loop
sub
jbe
fistps
divb
rclb
nop
lcall
aaa
add
add
add
rep
fiadds
sbb
dec
mov
jle
cwtl
lret
inc
int
aaa
xor
sahf
addr16
inc
cmp
cs
inc
jne
lods
insb
iret
in
mov
or
xchg
xchg
xor
dec
mov
data16
inc
inc
mov
sbb
sub
cmpb
into
cltd
sub
cmp
mov
fwait
jg
adc
cmp
ss
pusha
rolb
xchg
sbb
adc
push
ret
or
push
sub
push
xchg
aad
mov
mov
mov
cmpsb
hlt
clc
lcall
jo
test
dec
mov
outsb
rorb
cmpsb
dec
adc
jne
and
lahf
ret
push
mov
fistpll
cmpsl
adc
int
unpcklps
sbb
push
mov
enter
int
stc
int3
lods
enter
repnz
imul
call
leave
jl
dec
jbe
idivl
or
inc
lahf
mov
add
add
fcoml
adc
mov
adc
adc
dec
adc
and
mov
adc
sub
sti
stos
mov
sbb
and
xchg
xchg
sub
sub
jp
nop
push
jecxz
cmc
jg
push
ds
data16
popf
shlb
or
jmp
js
lcall
in
outsl
sbb
mov
add
inc
pop
push
push
push
mov
mov
mov
fstpl
pop
dec
rorl
jmp
iret
pop
inc
es
or
lcall
push
push
int3
imul
push
aam
scas
leave
adc
addr16
or
inc
lods
adc
shlb
in
push
or
adc
aas
lock
cld
and
xor
or
inc
movsl
inc
cli
add
mov
data16
add
and
outsb
sub
stos
fs
jmp
leave
aas
movsl
rcrb
cmp
add
add
and
fwait
inc
imul
jns
fprem1
pop
or
jo
and
jecxz
nop
rorl
call
or
add
std
idivb
outsl
adc
mov
out
les
dec
pop
clc
add
loope
fwait
jb
movsb
imulb
sub
into
or
mov
mov
adc
test
jo
sti
adc
in
popf
jmp
push
test
inc
inc
push
jle
mov
inc
xlat
iret
jecxz
insb
fsubrl
mov
jl
xchg
sbb
and
push
gs
dec
nop
push
mov
add
jns
stc
and
or
add
das
sti
aad
insb
je
mov
push
mov
pop
push
add
stos
loope
mov
cmpsl
sbb
jae
call
fsubp
add
into
into
out
jge
icebp
push
lcall
jne
rolb
les
scas
fistpll
outsl
fimull
jns
cmp
add
add
dec
inc
dec
mov
or
mov
jecxz
cmp
or
pushf
das
or
incl
jp
fildl
stos
xchg
mov
mov
in
lea
xchg
test
and
add
dec
jp
dec
sub
clc
stc
xchg
repnz
frstor
test
xchg
push
and
mov
bound
xlat
dec
sahf
adc
ljmp
pop
fcompl
xor
inc
fdivs
addr16
pop
xchg
scas
mov
in
inc
and
adc
sub
imul
mov
ss
pusha
test
mov
inc
and
pushf
sahf
inc
js
sbb
lods
fmull
inc
testb
loope
cli
sbb
lahf
add
dec
cmpsb
imul
rclb
dec
movsb
insl
stos
in
mov
aam
sub
or
push
mov
or
mov
cs
add
add
cmp
movsb
push
sbb
fildll
add
add
repz
nop
or
out
lret
in
adc
xchg
sbb
outsl
pmuludq
inc
lret
lods
leave
ja
or
movsl
stos
stos
mov
jno
add
lock
lcall
sub
cmpb
das
in
push
xor
or
cltd
cmp
scas
jae
arpl
fcmovu
stc
pop
nop
in
push
pusha
lock
sub
add
jg
push
and
popf
test
adc
cmp
icebp
inc
mov
add
and
movsl
sahf
outsl
mov
in
pushf
ja
hlt
sbb
data16
sub
xchg
pop
mov
sub
test
cmpsl
xchg
fidivl
mov
pop
mov
push
aad
and
xchg
repnz
push
jg
repz
xchg
push
ljmp
mov
in
push
lds
jg
push
sub
dec
pop
orl
fwait
es
fldenv
push
sbb
dec
outsl
lret
mov
out
jmp
adc
add
add
add
cmpsb
loop
hlt
xchg
adc
addr16
fcoml
imul
fnstsw
shrb
repz
cmpsb
mov
call
push
test
lods
mov
test
jg
sub
fisttpll
ljmp
dec
incl
and
fs
push
cmp
shl
mov
js
stos
or
loopne
jnp
sub
bound
or
aas
inc
stos
and
in
faddp
in
clc
lea
testb
mov
jecxz
add
inc
iret
aas
or
sub
ljmp
hlt
push
iret
xchg
out
xchg
mov
jnp
inc
outsb
daa
jo
fbld
jnp
inc
mov
sub
inc
bound
into
mov
inc
xor
add
fidivs
xor
stos
or
mov
inc
stos
jmp
test
repz
add
and
das
cmp
lods
repz
mov
in
adc
add
add
jl
mov
mov
mov
mov
mov
sbb
cwtl
push
xchg
iret
add
adc
xor
mov
mov
mov
push
cmp
fwait
jbe
inc
testl
cwtl
pop
jnp
inc
mov
push
or
ret
push
pop
mov
inc
sub
fisubrl
dec
sahf
shl
add
and
sti
aad
sub
rcll
push
sbb
lock
xor
cmpsb
mov
sbb
xchg
add
xchg
push
in
jmp
lods
pop
and
add
xor
push
outsb
push
cmp
lea
in
adc
and
xchg
add
test
xor
jge
cmpsl
out
add
push
and
gs
push
or
dec
lcall
fsubrl
popf
fidivs
pop
ljmp
add
aas
daa
push
cld
push
std
jmp
dec
push
pop
sub
add
add
test
aas
ljmp
outsb
push
add
inc
push
in
add
movsl
into
addr16
jae
imul
adcl
push
and
enter
sbb
cmp
xchg
ljmp
enter
icebp
jnp,pn
out
adc
in
add
fs
push
sbb
popf
jp
cwtl
jg
lahf
mov
mov
sbb
xor
aam
aam
jmp
fwait
int3
cmp
dec
aaa
or
xlat
adc
pop
mov
cmp
or
sub
popa
dec
repz
inc
enter
mov
sub
scas
inc
daa
pop
cmp
sub
cmp
add
lcall
imull
cmp
js
push
dec
inc
mov
subb
repz
mov
sub
in
xor
jp
stos
and
rcrl
shll
testl
dec
push
add
sbb
dec
push
out
aad
scas
cmp
mov
add
add
add
fs
sbb
cmp
or
cmpsb
es
dec
lds
sar
insl
xor
mov
add
and
push
pop
jbe
jl
inc
push
popa
shlb
cmp
adc
inc
pop
dec
ficompl
fmuls
cmpsb
pop
add
pop
pop
push
out
stos
cmp
jae
mov
jns
in
mov
or
ret
mov
fwait
jae
xor
sub
xchg
imul
mov
ja
xorl
or
sub
jge
cwtl
mov
fdivr
std
jo
addr16
call
cli
or
ds
mov
add
pushl
or
dec
add
jbe
sub
push
cmpsl
xchg
js
movsl
test
sub
movsl
dec
arpl
addb
lcall
mov
into
test
nop
stos
stos
add
push
mov
or
lcall
add
add
shll
sbb
ficomps
sbb
or
push
lods
pushf
lea
scas
add
pop
push
out
iret
push
rcll
pop
jle
mov
icebp
pop
adc
sbb
stos
jb
test
test
mov
jg
inc
cmc
xchg
cmp
or
sbb
mov
subl
loopne
push
push
out
pop
sarb
sub
push
cmpsb
sub
nop
add
roll
cmp
xlat
lea
test
mov
xchg
or
mov
call
mov
addb
lcall
ljmp
incl
xor
mov
imul
jmp
incb
fldenv
sub
mov
das
popf
stos
dec
adcl
in
dec
xrelease
addr16
push
jecxz
lea
jl
out
popa
mov
push
je
adc
ret
mov
ja
jg
xchg
orl
ljmp
add
outsb
add
and
cmc
mov
pop
cmpsl
inc
rcrb
test
inc
mov
push
inc
xchg
in
mov
mov
cmp
ss
sahf
mov
cmc
mov
mov
shl
cld
jb
test
mov
sbb
test
jg
xor
test
pop
loop
pop
inc
mov
mov
cmc
aad
inc
out
xor
mov
push
les
testb
fcmovnbe
sbb
les
jnp
inc
inc
pop
inc
test
cmp
pop
mov
push
xchg
out
movsb
in
or
cmp
mov
movb
sub
cmpl
sub
lds
mov
outsb
xchg
xchg
hlt
or
dec
mov
mov
pop
pushf
add
jmp
fsubs
dec
clc
cmp
icebp
lahf
lea
add
add
push
dec
lret
jmp
imul
aaa
je
ja
xchg
cwtl
inc
add
add
add
insb
popf
sbb
jbe
pop
lcall
ljmp
mov
outsl
jbe
xchg
std
cli
outsl
movsl
mov
dec
inc
loope
or
jmp
ds
mov
adc
sahf
aad
xlat
adc
xchg
lods
repnz
enter
enter
inc
mov
pop
cs
mov
call
inc
rcrb
mov
test
mov
mov
xor
mov
and
loopne
fsubs
test
push
scas
sbb
adc
out
dec
jg
aaa
pop
les
pop
in
sub
rcrl
lea
push
in
adc
int
rep
push
test
repnz
sub
call
imul
ret
dec
or
xor
xchg
push
test
or
cmpsl
xor
sbb
mov
insl
push
arpl
sbb
add
lds
dec
cmp
fdiv
pop
lea
clc
adc
xchg
lds
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
inc
aas
pushf
inc
add
add
add
sub
or
divb
lock
inc
and
dec
xor
push
jge
imul
test
mov
push
xchg
sub
dec
test
push
dec
adc
shrl
dec
sub
popf
inc
cmpb
mov
cmpsb
mov
and
push
mov
inc
and
nop
outsb
jb
fisubl
fsubrl
xor
inc
aad
jge
fidivl
je
inc
xor
ret
cmpb
mov
aam
ds
fs
out
jmp
fwait
mov
mov
fwait
in
mov
xchg
or
loope
adc
mov
addr16
pop
dec
cmc
pop
call
push
xchg
inc
sbb
or
sahf
push
ret
pop
mov
or
mov
adc
loop
int
out
out
xlat
repnz
dec
ja
ds
inc
dec
lods
push
pop
lods
sarb
jb
mov
mov
add
sub
jns
xor
jg
jnp
lea
add
add
pop
jb
inc
mov
mov
jp
cli
outsb
cwtl
aam
cmp
leave
das
mov
xor
std
sbb
inc
movsl
addr16
jg
sub
lcall
xchg
mov
jle
dec
repnz
or
outsl
addr16
mov
mov
enter
add
pushf
js
movsl
mov
testl
and
jo
jno
lock
cltd
cmpsl
xchg
or
dec
cmpl
dec
fnstenv
lahf
loop
lret
xchg
mov
mov
test
icebp
mov
sbb
xor
idiv
xchg
js
xchg
xchg
pop
dec
daa
gs
orl
mov
mov
fstl
jmp
test
or
popa
cmp
sub
and
fsubs
jbe
sub
dec
gs
imul
add
ret
jg
decl
rol
cmpsl
jne
movsb
inc
add
add
add
inc
jns
test
sub
mov
jo
andl
in
sbb
stos
test
psubusw
mov
cmp
stos
or
in
test
xchg
mov
outsb
sub
out
or
hlt
mov
fdivs
push
push
add
push
mov
out
fiadds
aam
mov
aam
aas
fildll
mov
insl
jmp
jl
dec
or
dec
and
push
aad
lret
or
push
fldenv
or
xchg
mov
xor
sbb
xchg
push
push
popf
pop
push
jnp
ret
mov
idiv
xchg
dec
cwtl
and
popa
lods
orb
mov
movsl
and
cltd
jb
sbb
imul
adc
hlt
lret
push
mov
divl
mov
fnstenv
fisttpl
mov
xchg
dec
cmp
adc
mov
out
aad
pop
test
add
add
hlt
loope
jl
mov
andb
lcall
insl
test
adc
xor
mov
ret
lcall
int
sub
pop
dec
xchg
cs
sub
out
cmp
mov
fmull
pushf
ffreep
je
add
jle
xchg
pop
cmc
out
ljmp
dec
lret
jge
dec
mov
sub
int
sbb
adc
frstor
push
jne
inc
test
sahf
inc
mov
je
jb
addl
sub
and
rorb
ljmp
std
rcll
sbb
pop
roll
fwait
mov
in
add
inc
fldcw
repnz
mov
cmp
jmp
add
push
xorb
push
lds
dec
outsb
js
jno
inc
dec
jno
mov
fcoms
into
gs
dec
mov
and
paddq
adcb
inc
icebp
hlt
gs
dec
adc
push
add
add
dec
je
ja
js
mov
push
mov
mov
mov
pop
inc
inc
pop
lret
aad
in
xor
add
and
lcall
rcrb
push
lret
int3
push
or
push
fstl
adc
mov
dec
inc
adc
ss
add
pop
and
inc
and
mov
adc
xor
shlb
xor
aam
fnstsw
jecxz
dec
mov
add
or
and
dec
sti
mov
push
xor
cmp
xchg
aas
dec
fadd
test
lahf
jl
and
pop
sbbb
js
fildl
clc
push
push
jo
insl
dec
or
leave
add
orl
mov
lret
and
jmp
push
pop
mov
mov
push
pop
fidivs
iret
xor
mov
dec
xor
pushf
and
roll
add
add
aas
gs
pop
repnz
dec
add
add
add
mov
dec
dec
rclb
pop
outsb
xchg
mov
dec
add
call
int
out
inc
mov
sbb
mov
sbb
imul
mov
pop
add
xchg
enter
mov
imulb
mov
std
int3
jg
push
mov
inc
cs
jle
outsb
popa
push
fs
outsb
xchg
pop
or
mov
out
cmpsb
xor
push
sbbb
repnz
mov
add
sbb
lret
inc
mov
mov
xor
test
cmc
fcoms
fwait
mov
mov
imul
icebp
repz
lret
insl
incl
aam
addl
jo
adc
incb
jecxz
push
cmp
and
call
xchg
inc
and
int3
lret
add
inc
inc
dec
shl
rcrl
pop
jp
mov
or
mov
out
fisttpll
lock
mov
add
add
sub
out
xorb
shlb
mov
cmpb
jmp
pushf
lret
xchg
mov
shlb
sbb
pop
aam
mov
test
dec
int
jge
int
shl
mov
cmp
sub
xor
in
popf
inc
aam
jmp
mov
inc
jmp
pusha
ljmp
mov
add
lahf
in
mov
rcrl
in
iret
fdivr
je
and
add
sbb
daa
insl
out
sbb
int
and
dec
test
jg
jne
sbb
mov
mull
mov
int
pushf
clc
pushf
jge
fisubs
push
push
and
in
aam
dec
jnp
push
push
cmpsb
mov
sub
or
cmp
clc
gs
push
arpl
mov
gs
mov
add
data16
loopne
ficomps
insb
pop
aad
imul
test
sbb
mov
sarl
add
fildll
mov
ljmp
add
add
add
loopne
mov
test
jb
mov
jb
mov
fnsave
ljmp
add
ds
dec
push
or
inc
jmp
lods
mov
std
arpl
fs
out
dec
ljmp
sbb
xorl
sarl
add
mov
fs
mov
jnp
or
rorl
in
jmp
xchg
mov
add
push
loop
push
push
fpatan
xor
rcr
loopne
push
dec
shrb
cmp
push
mov
inc
loopne
test
cmp
pop
outsl
out
cmpsb
outsb
mov
sub
cmp
push
xchg
bound
cmp
das
dec
int
pushf
adc
into
fs
push
xchg
sbb
cltd
test
lock
test
scas
fistpl
outsl
cs
push
mov
out
push
sbb
jmpw
fnstcw
jo
sahf
jb
fsub
mov
dec
add
add
add
jecxz
jecxz
js
lock
fwait
push
xchg
sub
enter
call
inc
dec
loopne
and
ljmp
in
outsl
inc
jno
inc
lods
cmpsb
pop
sub
lea
cli
sub
js
test
jle
dec
push
cmc
test
sahf
pop
mov
bnd
push
popa
add
mov
ficomps
pop
aam
movntq
out
iret
lods
or
xor
subb
cmc
pop
pop
or
dec
adcb
fbld
rolb
lea
loop
mov
xor
cli
les
cwtl
outsb
and
mov
andb
pusha
mov
lods
dec
push
lods
decb
cmp
lahf
divl
push
pop
jecxz
arpl
cmp
jb
cmp
push
add
adc
xchg
jo
push
outsb
test
add
es
mov
add
mov
add
cmp
imul
out
mov
mov
popa
leave
test
dec
add
add
add
fimull
push
divb
or
pop
mov
daa
or
mov
rorb
dec
ret
insl
push
pop
out
sub
sbb
push
mov
outsl
pushf
ficoml
es
imul
dec
jns
mov
gs
shrb
mov
inc
es
jecxz
push
lret
jp
lret
cmp
jmp
imul
xchg
jb
sbb
push
mov
sbb
rorl
mov
mov
mov
icebp
jecxz
jp
mov
pop
popa
aad
and
fstpl
jns
ret
push
jp
popf
jno
push
incl
clc
inc
add
fcompl
pop
dec
pusha
sti
mov
fdivrl
das
mov
cld
sarb
lods
dec
mov
lea
std
pop
out
mov
pop
imul
pop
andb
xchg
dec
or
shr
sahf
ljmp
dec
lret
adc
mov
add
add
dec
stc
mov
ljmp
les
add
add
xchg
loopne
lods
in
pcmpgtd
sahf
cmp
ds
jecxz
mov
roll
mov
roll
dec
mov
push
sub
dec
in
mov
ret
fidivrl
sbb
adc
adc
xchg
clc
sti
dec
add
insb
in
int3
imulb
lret
push
and
jge
xor
out
imul
popf
ret
and
in
jmp
xchg
mov
nop
icebp
insb
lods
addb
movsb
pop
pop
mov
mov
ds
scas
and
iret
cmp
xchg
shr
test
push
ss
jbe
add
pop
shll
adc
aad
pop
into
out
pop
push
out
dec
test
out
jne
loop
jmp
mov
ficomps
sbb
and
mov
js
ret
hlt
rcl
jno
jbe
int
inc
in
jbe
cmp
pop
std
pop
mov
sahf
fadds
cmp
rolb
xchg
cmp
jle
jg
cld
lcall
outsl
enter
add
add
outsl
rcrb
or
cld
push
mov
xchg
iret
mov
inc
inc
repz
setg
mov
mov
fistl
out
out
add
xchg
fwait
xor
mov
jnp
adc
dec
in
ret
movsb
xor
jo
jb
add
scas
sbb
xor
idivb
in
lret
dec
jp
adc
mov
rolb
mov
or
cmp
fcomip
dec
sub
bound
in
loope
pop
sub
daa
lods
aam
mov
mov
fstl
mov
std
lods
and
sti
incb
jbe
mov
pop
cmp
bound
cli
in
in
cld
cmp
cltd
add
lret
push
imulb
and
push
arpl
cmc
movsb
pop
fmuls
sub
cld
pop
das
mov
jb
popf
pop
imul
push
adc
mov
push
or
in
jns
hlt
mov
dec
inc
cmp
int3
pop
jecxz
pop
adc
mov
xchg
mov
pop
shlb
add
int3
dec
add
add
add
mov
movsb
jns
iret
sbb
movsb
sub
fisubrl
mov
js
adc
mov
inc
sub
pop
aam
xor
sbb
fs
sub
in
xor
pop
sub
aas
popa
popa
dec
or
xor
daa
sbb
adc
sub
inc
mul
mov
xor
pop
cmc
or
xchg
mov
pop
dec
mov
les
adc
filds
dec
sbb
adc
or
pop
xor
divl
sub
push
test
fnsave
je
sbb
roll
icebp
cmp
cmp
fwait
xor
mov
xchg
out
sti
mov
loopne
mov
ljmp
inc
push
cltd
pop
push
lea
xor
dec
insl
ds
pop
and
lock
and
xchg
decb
fsubrp
xchg
gs
out
jns
mov
pop
pop
or
mov
and
adc
rclb
add
add
jns
fistpl
mov
dec
or
xchg
add
loopne
pop
test
shrl
std
push
ret
ljmp
xor
lock
cmp
sbb
xor
lds
sbb
xchg
adc
push
iret
adc
push
xor
sbb
mov
scas
ret
mov
es
les
aad
xchg
movsl
lret
sbb
js
sbb
lret
push
daa
cmpsl
insl
push
inc
pop
fsubrs
dec
mov
in
scas
scas
add
xchg
test
cmp
int3
mov
fcmovnbe
mov
sbb
into
imul
mov
sbb
xor
adc
or
add
test
test
mov
mov
lods
sub
or
push
or
fs
or
and
lea
fsubrl
mov
out
cmp
ret
or
xchg
add
add
add
sbbl
sbb
jo
lcall
pop
mov
notl
jne
cs
or
pop
lahf
nop
rolb
and
or
clc
lahf
out
lea
pop
mov
orb
mov
inc
inc
stc
fs
jmp
nop
push
out
mov
jecxz
mov
out
mov
or
fisttps
sbb
inc
je
inc
mov
imul
and
pop
cmp
movsl
or
repz
adc
push
sbb
mov
daa
leave
in
repnz
mov
addr16
lods
push
das
out
sub
jp
mov
xchg
je
xchg
aas
incl
lods
push
mov
or
inc
into
cmpsl
dec
inc
push
mov
or
sti
in
shlb
pop
lods
aaa
inc
into
cs
dec
ja
sbb
push
or
push
shll
out
pop
pop
pushf
push
ja
mov
fcoms
add
add
dec
add
pushf
push
repz
fnstsw
xor
jg
imul
pop
inc
mov
push
data16
rcrl
push
addr16
dec
add
es
inc
sti
add
dec
cmp
push
jg
sbb
pop
mov
pop
pop
jno
inc
xor
fcmovnbe
test
pop
aas
mov
roll
mov
outsl
out
mov
lea
cmp
sub
cmp
pop
dec
xchg
cmpb
mulb
xchg
mov
das
addr16
jl
or
add
cmpsl
ds
xchg
push
gs
decb
pop
inc
mov
inc
pop
arpl
and
je
popf
pop
sbb
pop
movsl
adc
dec
popf
cmpsl
enter
ds
pop
fldcw
jg
adc
mov
dec
nop
test
mov
fiaddl
pusha
fwait
cmp
test
adc
or
repz
add
stos
push
lcall
hlt
mov
test
add
add
lcall
pop
xor
je
inc
das
loope
movsb
movsb
jmp
xchg
insl
mov
fbstp
scas
add
xchg
push
mov
test
xchg
ret
cmpsl
mov
adc
pop
adc
out
icebp
mov
clc
rolb
dec
or
test
arpl
lds
dec
push
mov
cmpsb
popa
shll
sbb
outsb
adc
fwait
jg
in
ljmp
call
fdivr
pop
sub
ss
iret
popa
fisttpll
or
sarb
lret
ss
dec
stos
cmp
in
push
addl
ss
xor
xchg
je
adc
mov
ss
lret
xor
sbb
xchg
cmp
ljmp
jns
mov
pushf
andb
pop
shll
lods
dec
sti
dec
outsl
fcompl
adc
add
add
jbe
idiv
imul
mov
add
add
add
es
jbe
or
xchg
mov
mov
jl
cmp
test
mov
cmp
or
insl
ja
fisttpl
lock
pop
mov
in
jo
or
cwtl
dec
mov
push
shlb
movsl
test
loopne
ja
dec
or
enter
jmp
popa
sub
ret
clc
sti
mov
roll
pop
or
sub
and
add
and
push
inc
nop
mov
adc
mov
sbb
mov
cltd
fdivrp
sub
dec
mov
sbb
and
and
movsl
iret
jno
rolb
test
aas
mov
xor
negb
lods
in
mov
jmp
stc
in
mov
adc
pop
ret
xor
pushf
xchg
inc
inc
aad
popa
mov
bnd
dec
fucomp
push
adc
add
loopne
add
add
fwait
cmp
stos
sarb
in
add
add
add
in
fcomps
pop
outsl
cmpl
sub
pop
or
inc
das
cltd
lea
push
insl
jbe
dec
sub
sti
and
fldt
mov
push
jge
sahf
ljmp
push
nop
ss
call
and
out
int
mov
ret
xchg
dec
mov
das
imul
fcmovnb
add
add
cmp
sub
push
or
cmpsl
mov
cld
and
xchg
loopne
aaa
dec
rclb
mov
push
jnp
push
enter
cmp
int
in
sub
cwtl
leave
dec
jp
and
or
adc
negb
ss
aam
popa
mov
mov
pop
rorb
push
xchg
enter
pop
aam
pop
and
dec
xor
loope
das
rclb
das
into
add
pop
dec
push
mov
inc
dec
adc
cmp
movsl
pop
push
fildl
add
add
clc
mov
and
hlt
xchg
lods
in
call
add
add
push
cs
fwait
js
in
stc
in
jo
dec
out
xor
popl
dec
in
mov
cmpsb
mov
dec
or
push
int
xor
adc
std
daa
push
cld
mov
dec
mov
outsb
add
cmp
je
les
clc
xchg
xlat
out
mov
jg
adc
movsb
mov
neg
loop
or
popf
je
imul
pushf
lods
insb
int3
int
cli
rcl
movsl
add
clc
push
stos
mov
iret
inc
imul
push
loopne
je
push
adc
dec
xchg
dec
pop
cmp
jg
cld
push
cmp
lods
decb
mov
sbb
add
mov
je
movsb
add
mov
ret
sti
jno
dec
mov
adc
or
arpl
scas
lods
sub
and
mov
dec
pop
sbb
cmpsl
jecxz
jne
push
scas
sti
sbb
add
add
shr
mov
scas
cwtl
fbld
push
add
add
add
pop
scas
dec
in
mov
fwait
daa
ret
inc
pop
inc
xchg
adc
scas
pop
dec
ds
ret
mov
xlat
cmp
gs
je
rorb
mov
addr16
inc
nop
test
loope
stos
mov
sbb
into
xchg
imul
fs
sub
stos
xchg
mov
xlat
mov
lret
mov
into
dec
and
cmp
cwtl
popa
jo
xchg
out
fwait
nop
ds
and
js
mov
fsubs
imul
pop
imul
lea
addr16
pop
lret
fucomp
pop
in
out
lods
fs
addr16
insl
ljmp
pop
jbe
push
fbstp
gs
cmp
or
pop
add
adc
fwait
jno
hlt
or
mov
dec
or
scas
xacquire
ljmp
jle
pusha
mull
cld
cs
mov
test
or
fdivs
repz
add
add
add
jg
sub
lea
lahf
js
push
test
test
adc
mov
sahf
lcall
sbb
dec
adc
push
sbb
clc
aas
mov
and
mov
aam
lret
scas
push
psubusb
sub
push
xor
sub
mov
cmp
les
sbb
pop
jbe
xlat
movsl
pop
fldenv
aad
repz
sbb
mov
sub
mov
ds
xlat
and
adc
shrb
pop
popa
inc
ds
xchg
arpl
jle
mov
sbb
js
cltd
pop
lods
in
jbe
daa
mov
adc
leave
mov
repnz
cmpsb
arpl
mov
lods
xor
jle
aam
inc
popa
loope
cmp
lret
dec
lret
pusha
adc
mov
and
mov
add
call
fsub
mov
add
add
add
mov
pusha
add
adc
hlt
pop
add
add
add
aam
sahf
push
inc
inc
and
xchg
out
movsl
dec
cli
rcrl
adc
jb
mov
push
xchg
lahf
ret
jae
shrl
cmp
in
and
ss
add
cmpsl
inc
arpl
roll
test
andb
imul
cltd
in
test
xchg
mov
popa
ljmp
dec
inc
pop
mov
testl
dec
ja
adc
cmc
lret
xor
mov
mov
sti
push
popf
inc
das
mov
negl
or
out
pop
or
and
mov
pop
fldl
or
sbb
addr16
inc
js
jecxz
cmp
inc
xchg
cmpsb
cmp
scas
clc
inc
adc
jb
push
mov
add
imul
into
jae
xchg
das
les
cli
adc
xor
xor
and
gs
orb
scas
ret
mov
int3
or
inc
fsubl
mov
ja
mov
imul
add
out
push
jnp
xor
xlat
add
sbbl
and
sahf
adc
or
xchg
push
pop
out
stos
pop
and
cmp
and
fistps
pop
mov
jp
int3
call
repz
and
lock
cli
add
and
inc
adc
and
in
push
inc
jp
xchg
xchg
mov
inc
add
push
and
add
cltd
movsl
mov
fcoml
pushf
pop
pop
sbb
fimull
imul
hlt
jb
lret
mov
std
lods
sub
xchg
inc
pop
lods
loope
jp
aam
jns,pn
mov
and
mov
mov
xor
xorl
dec
daa
pop
pop
adc
lret
pop
mov
pop
cli
sbb
int3
push
insl
sahf
fwait
pop
adc
mov
mov
call
cmpsl
dec
mov
dec
mov
sub
dec
or
aad
push
movsb
stos
fbstp
scas
adc
lahf
xlat
out
cld
jle
addb
add
add
push
dec
gs
popa
imulb
rcrb
sub
jg
into
xor
cmp
in
push
loop
ret
insb
lahf
sbb
pop
xchg
inc
sbb
ret
cmp
mov
xchg
jecxz
and
mov
dec
mov
add
popf
xchg
ror
popf
sub
arpl
inc
mov
push
sti
mov
xchg
jbe
xchg
pop
xchg
sbbl
lods
sub
fdivrl
push
scas
jne
xor
and
cmpl
xchg
int3
aaa
mov
pusha
mov
aad
fcomi
in
sub
sti
clc
addr16
push
das
cmp
imul
push
mov
pop
and
sub
sarl
mov
dec
mov
push
test
shll
das
sub
cwtl
mov
or
in
or
mov
xor
jmp
jl
mov
aas
mov
dec
and
leave
icebp
scas
test
add
add
mov
add
mov
mov
add
add
add
sub
in
sub
jne
sub
test
jae
inc
insl
ljmp
movsl
sbb
pop
out
adc
test
sub
jns
sub
jb
or
jg
je
push
unpcklps
mov
ret
lods
out
push
adc
cmp
rclb
push
out
xor
into
add
sub
add
movb
or
dec
jge
ret
pop
push
pusha
mov
roll
pop
xchg
ret
fwait
jns
cmp
inc
stos
sahf
lret
out
jns
dec
xor
fldenv
jecxz
aaa
sbb
or
mov
sub
mov
sbb
and
daa
inc
sub
mov
mov
add
xor
lret
outsb
mov
xor
xchg
sub
inc
pop
dec
ficoms
xorb
xchg
subb
adc
out
into
push
push
inc
lahf
mov
add
add
add
add
outsl
mov
or
popf
dec
shlb
inc
mov
pushf
lock
ret
je
ljmp
std
cld
jle
mov
xchg
mov
dec
pop
pop
imul
fwait
mov
shll
sbb
cli
adc
gs
add
push
loopne
aas
out
fbstp
in
addr16
int
dec
pop
arpl
inc
shll
shlb
stos
fs
fwait
mov
inc
push
add
emms
mov
cmp
xchg
sti
ja
mov
int3
adc
sub
push
dec
adc
push
lret
call
sub
xchg
sub
out
cwtl
cwtl
test
in
jb
hlt
xchg
jnp
xchg
and
pop
and
push
repnz
hlt
test
clc
repnz
xor
cmp
daa
fistps
xchg
int3
lcall
mov
mov
fsub
mov
and
mov
jg
or
or
add
add
leave
jle
mov
pop
in
xchg
push
or
cmpsl
std
enter
adc
inc
and
add
je,pt
imul
pop
cmpsl
xchg
or
inc
iret
add
in
mov
add
lods
lcall
pop
xlat
ljmp
test
std
mov
pop
push
loop
fdivrl
push
andl
mov
mov
xchg
cmp
sar
test
clc
mov
jmp
and
mov
mov
pop
sub
xchg
mov
pop
push
aas
cmpsb
les
or
jmp
inc
mov
push
lock
notl
jae
test
popl
fwait
jae
outsl
cmp
adc
stos
sub
popa
fbld
pop
dec
iret
add
mov
test
roll
push
jge
add
add
lahf
pop
cmpsl
jne
mov
sub
dec
or
add
add
add
add
lret
or
mov
ja
pop
dec
mov
inc
dec
gs
cwtl
mov
add
push
sbb
mov
push
jns
cmp
push
rcr
sahf
ja
push
sbb
lret
pop
push
push
gs
mulb
clc
ds
sub
mov
cmp
nopl
or
pop
mov
xor
dec
adc
es
es
int3
sub
inc
out
decb
ret
sahf
arpl
and
sbb
pop
jo
and
add
cltd
int
jbe
aad
and
adc
and
scas
jmp
pop
jbe
scas
jns
pop
pop
lea
inc
mov
adc
mov
cmc
push
in
cmp
dec
xlat
lods
imul
and
dec
add
lea
in
cmp
aaa
lds
and
mov
mov
frstor
icebp
add
or
insb
rcrb
loop
cmc
cmp
add
idiv
jg
sub
int
adc
add
add
shl
add
pop
repz
es
mov
out
mov
mov
cld
lods
mov
xchg
cltd
orl
sub
fbstp
lods
jns
mov
mov
lock
stos
and
or
xor
ss
xchg
daa
adc
lods
jecxz
dec
call
popa
add
popf
add
lret
and
ret
inc
xchg
sub
mov
scas
add
cs
mov
cmpsl
add
push
mov
dec
cmpsb
push
push
mov
movsb
dec
sbb
xchg
aas
xbegin
dec
repnz
add
mov
pop
popf
mov
pop
in
notl
mov
mov
ret
ja
and
clc
push
push
pop
jns
mov
mov
call
addr16
in
mov
sbb
add
or
inc
testl
lods
mov
fwait
and
add
inc
pop
mov
fstps
inc
pop
adc
add
add
add
push
test
repnz
ds
in
clc
pop
cmc
popf
es
dec
hlt
test
test
xchg
pusha
shll
lcall
ljmp
jbe
push
xchg
push
fsubr
pop
xor
jae
int3
jecxz
pop
mov
cmp
rclb
sub
dec
fprem1
rcl
scas
inc
leave
incl
aaa
push
sub
ret
push
or
add
add
xor
pop
lea
stc
mov
mov
cmp
jle
mov
cmp
pop
mov
outsb
in
jg
out
sbb
clc
iret
mov
aaa
imul
push
dec
jb
stos
jb
enter
ret
fldcw
lcall
xchg
inc
cmp
test
sbb
sub
push
sahf
add
andl
mov
xchg
mov
jg
xor
imul
mov
add
repnz
movsb
jle
arpl
daa
xchg
sbb
add
add
and
mov
sbb
inc
jle
ljmp
leave
jge
rcrb
loop,pt
rorb
in
jns
sbb
mov
add
cmpsl
jo
das
lcall
loope
inc
add
add
jnp
ret
mov
imul
adc
fsubr
sbb
and
fs
add
imul
inc
int
dec
adc
cli
in
sub
xchg
push
mov
mov
xor
je
push
test
stos
stc
mov
mov
fdiv
mov
pop
cmp
iret
pop
jge
mov
notl
pop
push
mov
dec
dec
shlb
shlb
sahf
ds
pop
in
test
daa
js
xor
je
pusha
xor
mov
std
or
test
leave
and
scas
fcmovu
stos
aaa
push
addb
pusha
and
call
or
and
or
jno
add
stos
sub
stos
out
jmp
sub
pop
fucomip
sub
add
add
add
scas
mov
lea
jns
mov
jbe
movsl
cmp
mov
dec
mov
xchg
mov
sub
jmp
ret
divl
and
nop
rcr
std
cs
xchg
dec
out
or
nop
es
adc
out
xor
in
arpl
bound
and
mov
lea
dec
adc
xor
adc
in
repnz
xor
aad
fsubs
xor
outsl
shlb
jmp
sbb
pop
popa
shll
sub
jo
add
sbb
xor
mov
notb
pop
jns
mov
clc
loop
out
pop
push
cwtl
add
addr16
gs
repz
sub
adc
sbb
sbb
ja
add
pop
daa
lods
jge
and
sbb
adc
shll
fnstenv
adc
add
add
add
lcall
out
call
jg
loope
mov
sub
repz
push
push
jge
hlt
adc
jmp
cmp
jns
out
push
sub
out
sahf
enter
dec
cmpsb
push
int
jnp
add
xor
dec
lock
fcmovnu
xchg
scas
jp
cmpl
mov
fiaddl
inc
xchg
cmp
loopne
inc
mov
ljmp
int3
arpl
cli
cmpl
add
add
ss
leave
call
adc
scas
pop
out
leave
mov
cmp
or
mov
mov
fs
dec
lea
pop
leave
int3
sub
sub
jae
push
pushf
repz
dec
dec
push
xor
neg
cmpsb
push
jns
fsubs
add
jle
mov
jle
nop
pop
sub
das
les
cmpsb
pop
test
xchg
sub
stc
sub
pop
pop
sbb
mov
fstl
adcl
fdivl
lret
daa
cld
je
jbe
jns
sbb
sbb
cld
aad
add
add
add
and
cmp
ret
dec
faddp
out
push
shrl
mov
mov
xorb
push
add
xor
mov
jo
cmp
sub
test
test
call
add
addr16
into
ds
jne
nop
hlt
cmc
or
push
loope
sub
xchg
aad
stc
sbb
mov
xor
cltd
imul
sbb
mov
jmp
fists
mov
test
mov
stc
mov
pop
xor
fnstcw
int3
cltd
or
pushl
sub
cmp
stc
and
jno
cmpsl
scas
mov
mov
adc
or
pop
stos
inc
add
fsubr
test
sub
lcall
add
ljmp
popf
mov
dec
mov
inc
adc
sar
das
aad
pop
jae
stos
lret
roll
xor
mov
aaa
imul
push
cltd
jmp
fildl
or
sub
add
add
bound
or
and
stc
and
or
dec
sbb
add
fiaddl
fistl
xlat
lea
std
mov
sbb
addl
lcall
andl
sbb
mov
sbb
gs
push
jne
mov
mov
sub
ss
mov
dec
xor
dec
adcl
aam
mov
mov
sbb
movsb
push
mov
mov
jbe
out
and
cmp
mov
jns
or
popf
mov
push
fs
fisubrl
cmp
push
inc
or
out
mov
daa
test
ret
call
sbb
aam
adc
lods
sti
icebp
pop
push
js
lcall
lahf
ds
rol
fsin
std
mov
stos
and
sahf
lods
jne
add
dec
lds
leave
mov
or
in
dec
sti
push
mov
mov
push
jg
dec
xchg
dec
or
dec
sub
add
add
add
decl
enter
shlb
jp
jne
add
in
int
call
aad
xchg
jle
push
nopl
pop
in
xor
rorl
mov
dec
mov
and
and
xor
pop
into
repz
testb
push
subl
movsl
xchg
jmp
push
jp
repz
cs
mov
mov
call
xchg
lods
fisubrl
xor
jns
mov
aas
mov
movsb
sahf
in
leave
int
mov
inc
setno
push
stos
rol
sahf
add
jmp
scas
imul
mov
out
sub
das
jmp
les
xchg
xchg
push
mov
pop
lret
das
xor
cmp
mov
leave
pop
xor
addr16
adc
fs
sbb
ljmp
cmp
test
outsb
dec
xchg
fisttpll
inc
pop
push
jmp
dec
arpl
addb
cmc
iret
mov
fucomip
push
insb
xor
sub
add
add
add
add
mov
fistpll
ror
add
aas
jns
test
adc
rcr
mov
popf
cs
jp
arpl
popf
xchg
hlt
sub
and
sbb
lret
pop
lods
inc
push
inc
das
or
sub
clc
and
mov
add
pop
pushf
js
sbb
das
push
enter
aad
mov
cwtl
mov
rol
mov
jecxz
ficomps
movb
rcrb
das
insb
sub
push
cmp
and
adc
mov
inc
int3
imul
sub
mov
int
or
arpl
loope
jge
sub
and
cli
int
jno
lods
xor
stos
into
addb
jnp
inc
stos
dec
out
mov
xchg
fcomi
push
xchg
push
inc
sti
scas
aam
add
push
scas
in
pop
js
and
push
inc
xor
mov
xor
es
bound
imul
dec
out
iret
jmp
aas
in
push
data16
mov
add
add
mov
xchg
fdivs
cmp
inc
out
mov
outsl
jmp
cmpsb
xor
cs
pop
andl
ds
das
repnz
xor
out
mov
in
cmpsl
or
pop
mov
fcomps
xor
jo
sahf
out
or
lds
or
jge
out
xchg
hlt
xchg
sub
xor
pusha
and
sub
addr16
mov
addl
jmp
call
mov
pusha
push
inc
js
lods
ss
push
icebp
inc
in
fcomip
insl
repz
adc
dec
xchg
mov
in
xchg
mov
pop
fdivrs
add
cltd
lret
insl
and
shr
mov
fs
cwtl
jg
test
in
and
inc
pusha
jb
loope
cmpsl
in
or
shll
fst
gs
add
sarb
jbe
mov
inc
jb
out
cmpsb
jbe
push
xlat
xor
mov
pop
cmpsl
mov
ret
movsl
sub
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
pop
inc
lock
add
add
pop
lods
flds
imul
lcall
js
loope
scas
mov
fistl
pop
test
dec
xorl
cli
leave
test
jb
mov
xchg
mov
test
mov
sbb
push
adc
ja
repnz
subb
repz
fldcw
cmp
jne
mov
in
inc
cs
adc
loope
pop
xchg
popa
rcl
les
mov
fldcw
mov
push
pushf
test
sub
inc
sbb
pop
xor
or
or
aam
test
lods
lret
aas
add
shrl
xor
movsb
mov
add
pop
pop
insl
loope
mov
test
jae
pop
test
inc
push
jg
popf
xlat
ret
and
sub
mov
cmp
mov
add
in
lods
imul
neg
std
sub
dec
xchg
push
jae
cmp
add
add
add
ds
push
lahf
jmp
cmpl
lcall
and
add
popa
or
pop
push
repnz
jae
enter
int
xchg
lds
jp
fisttps
aas
ss
imul
push
cmpsl
jbe
xchg
dec
cmp
xor
in
cld
outsl
ret
or
xchg
push
lret
inc
pop
nop
dec
rol
shrb
int3
fs
inc
adc
pop
mov
stc
sub
loopne
stos
lahf
ds
insl
test
in
lock
add
test
jp
iret
shl
inc
mov
outsb
and
ficomps
lcall
in
push
lea
mov
adc
imul
in
insb
push
cmp
cmp
rolb
cmpsb
cmpsl
sbb
sti
clc
jne,pn
repz
adc
popf
movswl
outsb
pusha
arpl
rcl
pusha
xchg
mov
mov
ja
shrb
add
add
cs
xor
cltd
dec
addr16
inc
insl
add
add
add
test
inc
jo
sbb
mov
outsl
and
sub
int3
xor
stos
push
dec
push
push
inc
leave
push
push
mov
push
dec
add
stos
lcall
and
push
mov
xor
pop
and
pop
loopne
and
mov
adc
dec
addr16
mov
aas
jp
pop
push
fldl
pop
iret
mov
ret
cwtl
pushl
cltd
xor
mov
and
push
jae
push
adcl
into
mov
lods
dec
cmc
movsb
call
sub
adc
jmp
je
cmpsl
hlt
fadds
xchg
daa
cld
and
inc
fxch
sbb
test
out
arpl
xchg
xchg
cmp
xor
bound
or
pop
or
aaa
iret
arpl
mov
inc
sbb
and
testl
sub
mov
mov
cltd
add
icebp
mov
lcall
out
sbb
fwait
dec
inc
outsb
add
add
add
outsl
push
push
jg
adc
pop
repnz
push
and
enter
iret
testb
ds
or
insb
clc
test
in
cmp
push
add
push
hlt
mul
scas
je
mov
cmpsl
leave
inc
adc
outsb
nopl
and
jmp
pop
and
adc
or
jmp
mov
sahf
lods
mov
lods
in
mov
pop
in
fdiv
jl
ficompl
dec
cmp
add
push
ja
push
popa
ss
in
imul
imul
pop
lods
enter
and
int
or
sbb
push
sbb
and
dec
jg
jbe
nop
dec
mov
cltd
adc
filds
sti
push
pop
arpl
sbb
adc
xchg
aad
mov
arpl
push
add
jns
cmc
aas
xor
cmp
dec
push
pop
mov
inc
aaa
inc
daa
sub
ja
mov
ljmp
add
add
jge
inc
lahf
cli
add
jmp
sarb
adc
push
fnsave
pop
leave
push
lods
pop
mov
nop
xchg
cmp
dec
push
push
adc
mov
not
xor
movsb
pop
iret
push
insb
nop
rorl
pop
mov
pop
scas
adc
nop
mov
xchg
addr16
test
pop
cmp
js
xchg
outsb
ret
sub
in
jmp
in
push
lret
add
add
dec
mov
dec
loopne
jge
mov
xor
test
in
add
sbb
or
imul
mov
jae
sbb
or
loopne
pop
cs
lock
jae
jb
push
fldt
stos
push
mov
xchg
push
std
and
test
or
bound
in
mov
sbb
gs
mov
mov
mov
add
add
cmp
jnp
outsl
cmpsb
loopne
inc
ljmp
add
add
add
daa
cmp
lock
adc
cmp
jmp
jae
add
subl
popa
and
lcall
ret
xchg
bound
adc
mov
dec
fsubl
scas
lock
mov
aas
xor
loopne
xchg
cli
adc
lret
in
mov
cmpsb
inc
popf
adc
shll
fbstp
dec
jecxz
aaa
outsb
out
mov
jg
adc
aaa
cmpsl
repz
cmp
sbb
mov
mov
xorl
das
das
add
mov
sbb
sub
inc
cmp
cli
scas
mov
std
xor
pusha
imul
dec
jle
inc
cmp
mov
cli
orb
push
xor
sti
mov
xchg
movsl
cmpsl
mov
push
pop
addr16
or
push
in
adc
mov
fs
pop
and
inc
call
xchg
movsb
in
nop
mov
add
add
cli
xchg
jle
push
je
movsl
add
add
add
add
stos
mov
pusha
and
les
loopne
sbb
mov
movsl
or
push
pop
pop
aas
mov
xor
ret
scas
outsb
daa
sub
aaa
sub
inc
nop
push
and
xor
cmp
push
cmp
out
mov
outsl
out
xor
jg
and
add
cmpsl
fisubs
test
xor
pusha
adc
sbb
mov
push
addr16
push
push
mov
ljmp
lock
or
pop
push
sub
and
in
arpl
push
push
push
mov
cmp
jae
jbe
push
fldenv
inc
jae
jp
sbb
push
xor
sub
out
hlt
fs
push
mov
jmp
mov
xchg
xor
hlt
mov
mov
outsb
dec
testl
push
ficomps
push
call
sbb
or
push
std
cmp
sti
pop
arpl
inc
mov
add
add
fwait
jnp
aad
sbb
push
ja
jb
add
add
enter
pop
pop
and
lds
dec
cmpsl
xchg
and
test
ret
mov
dec
mov
xor
dec
js
int
scas
push
jg
imul
xor
adc
aaa
or
or
das
mov
sub
and
loopne
iret
mov
nop
xor
adc
mov
add
adc
add
repz
in
fidivrs
dec
das
scas
and
sub
push
sub
cltd
sbb
push
cmp
les
mov
in
sub
shrl
icebp
pop
fadd
mov
jns
out
shld
aas
jmp
rcrb
mov
clc
enter
js
dec
pusha
je
add
je
fistpl
push
push
jne
sub
jbe
sti
ret
cmp
mov
inc
inc
sub
jg
cmpl
fs
je
xor
jecxz
jno
pop
push
and
mov
add
std
mov
sub
jae
add
add
jnp
or
lock
outsl
fdivrs
cmp
addr16
or
lea
push
pop
push
mov
nop
sub
push
popf
adc
sbb
cwtl
pop
aaa
xchg
addr16
xchg
jg
int3
xor
outsb
into
jno
xchg
cmc
in
loopne
dec
sub
repnz
and
cltd
rclb
inc
mov
sar
cltd
dec
dec
daa
jns
pop
sbb
clc
stos
mov
xchg
addr16
pop
and
sbb
roll
ljmp
ja
pop
aad
sub
and
and
push
mov
cmp
sbb
fldcw
xor
ljmp
cmp
into
pop
jnp
nop
mov
mov
push
mov
popa
std
xchg
mov
xlat
faddl
push
mov
mov
in
lret
ja
xchg
mov
pop
testb
jae
and
ljmp
cld
mov
sbb
je
fnstsw
dec
fs
push
adc
dec
int3
iret
fiadds
add
add
fstl
lret
jp
pop
je
add
add
xchg
data16
and
test
imul
in
and
rorb
mov
or
adc
shr
add
pop
test
pop
and
aaa
clc
dec
insb
push
pop
cmpb
int
sahf
sbb
imul
cmp
iret
addr16
adc
mov
push
mov
lock
mov
int
pop
mov
jle
int
sbb
xlat
in
sbb
inc
push
scas
cmp
mov
shlb
jbe
xchg
xchg
mov
fcomps
mov
fbstp
dec
lods
hlt
lretw
in
call
in
hlt
lods
pushf
int3
insl
or
fsubp
sti
pop
or
test
mov
fsts
clc
ja
pop
pop
mov
or
add
push
jbe
fldl2t
je
push
adc
sti
mov
ja
rcrl
leave
scas
inc
adc
mov
push
lret
xor
mov
sbb
inc
in
mov
mov
out
sub
sbb
jne
add
add
pop
adc
enter
lret
add
add
sbb
insb
xor
sbb
mov
sub
jbe
cmp
jnp
jl
push
leave
sti
in
xchg
mov
inc
jbe
adcb
mov
dec
loop
pop
and
xorl
mov
lods
lret
mov
mov
mov
les
add
jl
in
into
sti
inc
sub
ds
icebp
jns
aam
cli
arpl
scas
pop
ds
mov
outsb
icebp
mov
cmp
pop
cltd
push
inc
jbe
scas
mov
push
push
ss
stc
add
mov
jmp
push
iret
jmp
ret
aam
fildl
jl
cmpsl
sbb
sbb
inc
sub
popf
mov
jl
push
fnsetpm(287
adc
in
jo
idivl
movsl
xchg
hlt
mov
mov
jle
test
out
addr16
push
shl
cmpsl
or
popf
out
sub
test
pusha
incb
add
add
divl
in
sub
fs
add
add
and
pop
pop
or
pop
dec
pop
or
imul
movsb
jp
adc
push
ret
fsubr
daa
mov
mov
rclb
sti
lea
dec
xor
fsts
and
addr16
xlat
mov
and
mov
into
mov
or
dec
xor
fcomip
lahf
adc
jne
in
hlt
jnp
jp
divl
and
fnsave
mov
sbb
sbb
adc
repz
lcall
or
mov
xchg
lea
adc
mov
xchg
aaa
pop
mov
mov
mov
popa
sbb
sub
jo
jb
iret
mov
add
push
addr16
pop
push
adc
mov
out
inc
pop
mov
inc
or
lahf
adc
ret
cmp
inc
or
pop
icebp
mov
push
and
lcall
or
inc
add
add
clc
fisubs
mov
mov
leave
pop
push
add
add
aam
add
movsl
imull
fnsave
lock
arpl
inc
adc
cli
sahf
enter
jno
jbe
mov
xor
sub
xor
das
aaa
in
aaa
jno
out
dec
repz
das
dec
inc
sti
lods
dec
aad
pop
mov
inc
jnp
add
rorb
add
mov
stos
les
sub
mov
and
int
lods
sbb
cmpsb
mov
mov
cltd
es
mov
fs
jno
jecxz
jmp
add
sbb
dec
aad
pusha
push
cli
fisubs
stos
sbb
push
lea
mov
repnz
call
push
scas
lock
sbb
mov
xchg
test
divl
mov
data16
imul
stc
push
fucomip
push
fcoms
inc
je
mov
xchg
xor
cmp
shlb
mov
std
ss
aas
insb
js
add
add
sarb
cmp
mov
pop
pop
adc
or
xchg
fs
out
ljmp
test
lahf
sbb
pop
push
xchg
das
lods
push
xlat
inc
call
out
jl
int
sti
imul
or
stc
cmp
js
push
sbb
cltd
dec
sbb
sbb
sti
ror
mov
add
push
test
sbb
mov
aaa
shrl
mov
sub
adc
ret
inc
xchg
xor
out
repz
pop
mov
xchg
xchg
xchg
mov
push
add
sub
fs
in
or
pop
mov
jno
leave
mov
mov
pop
iret
jle
addl
cli
ret
cld
out
jno
stos
push
hlt
inc
jo
inc
cmpsb
ds
mov
mov
push
sub
and
in
test
jnp
pop
sub
or
dec
mov
inc
cmp
or
mov
nop
cmp
jg
push
orb
ljmp
jl
lcall
add
add
add
pop
push
aas
lcall
xchg
push
mov
lods
xor
scas
ret
mov
int3
in
mov
adc
fistpll
roll
pop
cmpsl
jnp
pop
xchg
andb
clc
jne
sbb
jo
sbb
popa
sbb
nop
mov
xchg
rclb
mov
pop
jno
jo
push
loop
or
sub
icebp
mov
jne
push
inc
mov
mov
stos
sbb
lahf
add
jbe
rcr
inc
dec
imull
dec
pop
adc
cmp
cmp
cmc
repz
sahf
push
mov
dec
aad
adc
or
ret
pusha
jmp
stos
pushl
sub
and
movsb
push
xor
pop
jecxz
push
sbb
inc
mov
push
and
in
push
jne
lcall
push
and
dec
pop
inc
adc
sub
jb
jp
jg
xchg
pop
test
push
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
mov
cltd
cltd
cmp
xchg
mov
add
dec
test
xchg
cli
jge
xchg
mov
sbb
xchg
cmp
inc
lcall
std
cmp
ss
and
or
fcomps
and
les
cltd
cmp
ss
mov
adc
pop
ljmp
loop
xchg
dec
call
int3
lods
sahf
and
xor
pop
jae
subb
jnp
fisubs
mov
add
lds
loope
add
xchg
mov
mov
cmp
shrb
cs
das
cs
sbb
jns
mov
inc
pop
xchg
ss
cmp
negb
aas
les
push
mov
in
ja
xor
jmp
adc
cmp
lods
test
bound
add
lcall
repnz
ss
popf
popf
or
add
pop
lcall
mov
dec
add
mov
cmpsb
push
sbb
push
js
add
add
add
lods
inc
pop
sbb
push
je
test
cmc
in
insl
mov
pop
mov
or
lahf
and
bound
scas
cmp
mov
insb
inc
je
mov
pop
xor
mov
and
xor
mov
add
sub
push
call
xchg
int
out
cmp
test
popf
inc
dec
dec
sarl
jge
repnz
inc
nop
out
lock
jne
xor
in
es
cmp
fildll
jnp
popa
xchg
dec
sbb
xor
mov
repnz
fsubr
push
aaa
inc
sbb
jp
repnz
xor
loope
mov
cltd
lcall
mov
icebp
or
add
out
xor
cs
pop
jae
and
nop
mov
test
xchg
pop
jno
in
cmp
aad
or
aad
loop
sub
leave
cmp
cmp
add
add
cmp
cli
mov
lahf
call
add
add
add
jp
pop
test
shll
lods
mov
xchg
sub
pop
push
push
mov
mov
gs
mov
adc
and
jmp
mov
cmpsb
in
mov
aas
jb
loop
insl
jecxz
cs
fdivrs
lods
call
sti
pop
and
arpl
and
in
int3
xchg
xchg
dec
popa
mov
lods
push
or
test
pop
inc
out
sbb
mov
nop
xor
out
test
or
rcll
rclb
stos
xor
sub
ss
dec
jmp
mov
add
push
pushf
scas
fistpll
add
daa
xor
fdivrp
fdivl
xchg
xor
xchg
insl
push
and
mov
mov
pop
hlt
and
out
jne
adc
jl
jl
ja
xchg
lods
out
fwait
mov
mov
std
test
lcall
mov
add
add
pop
ds
push
in
fisubl
inc
adc
inc
dec
sarb
or
sbb
les
jns
scas
or
push
negl
jne
in
and
fnstenv
xor
mov
adc
dec
ss
mov
in
inc
and
in
aas
aaa
xor
nop
inc
xchg
popa
xlat
cmp
cmc
cli
ds
push
cmp
or
faddl
jae
clc
cmp
or
ja
pop
lods
shll
fyl2xp1
stc
repz
sbb
lcall
mov
or
call
mov
jg
faddp
in
mov
xchg
repz
mov
roll
mov
push
adc
insl
jne
or
dec
inc
jmp
and
shl
test
inc
cli
jo
pushf
jbe
je
sbb
jge,pn
out
push
in
notl
or
arpl
repnz
pusha
dec
testb
daa
mov
mov
add
add
imul
xchg
mov
adc
stos
sbb
adc
and
push
gs
sbb
pop
cltd
dec
cmpsl
mov
fiaddl
sbb
cltd
rcr
mov
xor
lret
sbb
sub
jbe
xchg
sbb
fwait
mov
inc
dec
hlt
mov
in
sub
cmp
ljmp
cld
lods
xchg
mov
arpl
cld
clc
jg
cmpsb
pop
out
cmp
xchg
mov
loopne
test
adc
inc
jecxz
in
xor
scas
nop
push
xchg
mov
notb
push
xchg
bound
arpl
inc
or
inc
dec
adc
mov
gs
ret
iret
shr
xlat
mov
adc
push
push
inc
adc
push
mov
call
movsb
out
xchg
popf
es
xor
mov
aas
mov
jnp
bound
pop
dec
pmuludq
outsl
jnp
leave
push
scas
lcall
adc
sbb
iret
mov
mov
add
add
ljmp
rclb
mov
dec
ja
ljmp
xchg
mov
out
out
push
mov
nop
cmp
push
scas
scas
xchg
loope
mov
pop
nop
cmp
ret
inc
sarb
or
pop
and
fisubs
add
and
sti
aam
sti
push
adc
data16
or
jo
cmp
pop
mulb
outsl
fcmove
xchg
mov
jne
fsubrp
sub
xor
xlat
pop
inc
faddl
rcl
cmpsb
sahf
icebp
mov
dec
call
dec
ds
sub
and
mov
push
enter
fadds
std
cwtl
pop
aas
dec
sarb
aad
imul
movsbl
jle
in
push
sub
fsubrs
and
xchg
fcompl
xchg
loop
pop
into
das
push
mov
push
pop
les
pop
xor
pop
aaa
ja
sbb
cltd
jne
cltd
gs
into
xor
fwait
testb
add
jl
cs
idiv
jne
iret
mov
addb
add
add
fnsave
lea
aam
cld
leave
sub
rclb
dec
push
test
xchg
push
sub
daa
xchg
lahf
imul
push
and
mov
add
mov
leave
xchg
outsb
push
es
xor
mov
xchg
xchg
pop
add
lcall
mov
pushl
add
int3
cwtl
cmp
dec
jle
inc
add
inc
mov
mov
inc
test
mov
or
jne,pt
cmp
inc
push
jp
out
lcall
lahf
sbb
lret
or
dec
cli
rcl
lds
sub
cmpb
cmpsb
nop
push
fwait
cmp
in
ja
or
out
test
pop
outsb
mov
ja
xchg
add
lds
daa
push
xor
sbb
ret
aaa
add
cmp
sbb
rcr
ds
out
pop
xor
mov
xor
add
add
pushl
sub
bound
add
add
add
adc
push
into
pop
in
mov
sti
adc
sbb
or
push
stos
js
and
dec
add
inc
lcall
sahf
add
cltd
shll
rorb
cltd
addr16
push
sbb
shl
sti
fistl
sbb
shlb
fwait
std
lret
mov
outsb
sahf
test
add
sbb
inc
aas
nop
ja
pop
js
mov
aam
test
push
and
jae
hlt
les
mov
arpl
int3
pop
or
fbstp
xor
je
cmp
mov
add
into
jnp
and
in
loope
bswap
stos
jns
add
pop
aas
daa
xchg
xor
push
loopne
jmp
es
loop
js
jae
lods
repz
xchg
mov
or
mov
test
cltd
sti
adc
daa
pop
rcrb
cmp
inc
inc
and
test
add
add
sti
iret
ss
push
jno
xchg
pop
xchg
addb
add
add
jmp
mov
inc
mov
or
fisubrs
gs
test
aam
mov
lahf
insl
insb
je
add
mov
jae
dec
mov
xchg
mov
cmp
push
pop
and
xchg
testl
push
or
pop
ljmp
mov
jne
push
frstor
stc
cmp
pop
inc
inc
cld
sti
data16
xor
and
push
punpckhwd
jae
js
xor
enter
loop
imul
sbb
pop
cmp
bound
mov
pop
fs
icebp
sbb
out
jmp
add
lret
repnz
or
fidivs
int3
popf
mov
pavgb
je
mov
dec
push
xchg
rcll
xchg
inc
gs
pop
jg
xor
dec
push
out
push
shrl
push
push
aad
adc
imul
cmp
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
pop
and
add
add
mov
mov
int
nop
aas
in
fs
pop
ror
and
and
aas
push
fildl
fdivrs
jne
cmpsl
mov
lahf
mov
mov
out
mov
faddl
addl
sub
lea
mov
sbb
mov
mov
jle
loop
jnp
inc
and
sbb
divb
sbb
xchg
sbb
mov
xor
rcr
sbb
mov
xchg
mov
jb
sub
mov
lret
add
adc
add
leave
cwtl
push
pop
out
cmp
mov
adc
mov
in
xor
pop
icebp
arpl
mov
cmp
test
sahf
sub
test
sub
insb
xchg
mov
add
jg
std
sbb
push
fst
lods
sar
std
mov
das
lcall
add
mov
mov
mov
add
add
add
push
rclb
jae
or
sarb
xchg
std
dec
sub
dec
and
sbb
insb
mov
or
mov
dec
xchg
adc
xchg
mov
mov
pop
add
mov
nop
push
adc
add
jmp
in
imul
mulb
mov
int
lret
cmp
push
pop
es
lret
or
push
inc
out
xchg
stos
jae
jl
sub
negb
dec
and
mov
xor
pusha
sub
sub
mov
imul
push
aaa
mov
jns
jb
inc
xor
dec
add
cmp
inc
jno
jns
cmpsb
andb
int3
jl
adc
dec
push
call
jp
or
pop
add
sbb
lret
cmp
jo
fwait
stos
cmp
loop
shlb
cmc
cld
pop
cmpsl
and
out
ljmp
lock
xchg
nop
fxch
pop
mov
add
add
out
cwtl
mov
jle
jmp
insb
jnp
repz
pop
repnz
mov
imul
lods
into
adc
into
xchg
ds
push
arpl
cltd
inc
sub
jnp,pn
mov
xlat
pop
add
xchg
je
sub
sbb
mull
iret
andl
cmpsb
pop
mov
out
pop
or
jp
aaa
cmp
push
pop
mov
dec
inc
mov
int
inc
push
dec
retw
inc
sbb
ja
push
stc
adc
test
push
mov
enter
xlat
xlat
cmp
test
inc
dec
faddl
lds
ficompl
lods
push
mov
add
aaa
jge
or
fildl
or
xchg
mov
test
xchg
pop
jno
gs
mov
rorb
sarb
jecxz
push
insb
shrb
adc
sbb
mov
add
add
arpl
jnp
sbb
push
xor
xor
add
add
dec
mov
or
rolb
sub
shlb
cmp
sbb
test
dec
mov
inc
xor
leave
sbb
aad
je
push
mov
cld
hlt
xchg
mov
stc
daa
mov
xchg
int
clc
enter
push
inc
movsb
jl
outsb
cmpsb
jecxz
mov
dec
fisubs
adc
dec
mov
shrb
scas
fadd
movsl
notl
cmp
daa
inc
xlat
arpl
or
xchg
rcr
mov
sti
pushf
cmp
adc
inc
mov
fcomps
test
mov
dec
sub
or
pop
and
xchg
fwait
out
jo
enter
ret
ret
or
mov
aas
outsl
add
nop
das
movsb
or
add
insl
test
inc
repnz
jge
inc
push
imul
sahf
add
xorb
xchg
inc
mov
fwait
leave
cltd
shl
les
bound
leave
mov
pop
subl
aam
repz
rolb
ja
aam
push
aas
or
mov
push
xor
mov
xchg
add
add
sbb
in
jb
and
in
in
or
jg
int
xchg
or
dec
dec
clc
cmpsl
dec
or
out
pusha
add
jae
pop
mov
push
mov
fsin
xchg
ret
sbb
xor
setno
jne
xchg
xor
cmp
jl
pop
in
jb
in
imul
or
jecxz
mov
decl
inc
rcll
adc
outsb
dec
or
sarb
push
sbb
sahf
xchg
mov
lds
mov
shl
mov
mov
jb
clc
pop
sbb
out
cmp
pop
stos
pop
add
test
addl
sbbb
repz
fcoml
sbb
fmul
fisubs
push
mov
cmp
insl
adc
or
int
lahf
fmull
xchg
jecxz
mov
insb
xchg
dec
mov
mov
xor
ja
xor
sbb
sub
dec
insb
fidivl
bound
add
add
add
test
adc
adc
and
inc
daa
test
rorl
or
or
ljmp
push
push
mov
and
sub
hlt
mov
movsb
pop
cmp
pop
cmpb
sub
pushf
mov
rcll
sub
xabort
es
enter
nop
xor
inc
cwtl
mov
jp
xchg
xchg
scas
sbb
inc
jecxz
inc
mov
xchg
mov
stc
xchg
inc
jnp
aaa
xchg
pop
sbb
test
pop
in
cmp
jp
pop
and
lock
or
inc
sbb
rcll
mov
insl
jae
dec
outsb
mov
fsubrs
mov
test
adc
xchg
mov
xor
mov
and
and
cs
push
cltd
pop
jge
iret
lds
xorb
lret
mov
add
sbb
add
add
mov
jns
cmp
xchg
mov
add
add
add
in
popa
test
push
nop
and
loope
jae
inc
call
test
cwtl
push
adc
add
lcall
and
mov
mov
or
sub
negb
push
cmpsl
or
cmpsb
cli
cmpsl
mov
fcompl
mov
xorb
ljmp
mov
push
sti
xchg
je
mov
pop
repnz
movsl
popa
and
adc
aaa
fs
cli
push
imul
pop
fstl
pop
xor
enter
dec
in
clc
test
mov
out
popf
jg
inc
lahf
jae
mov
xchg
adc
jns
adc
movsb
mov
cmc
xchg
cwtl
filds
daa
lods
dec
es
inc
adc
in
in
cmp
xchg
mov
xchg
nop
js
out
cmc
ja
lret
fwait
and
lds
sub
sbb
push
sub
xchg
cmpsl
call
rolb
pop
sbb
fisubl
fistl
mov
xchg
inc
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
xlat
fmull
mov
add
add
add
adc
outsb
jnp
mov
dec
outsb
or
sub
pop
sbb
and
xchg
mov
fdivp
outsl
pop
xor
test
pop
lods
inc
fimuls
dec
push
inc
mov
xchg
sti
or
dec
loopne
add
xchg
fisttps
fs
and
mov
cmp
push
data16
cmpl
jbe,pt
or
dec
sbb
mov
scas
aam
ja
lods
push
test
mov
ja
stos
sbb
call
mov
mov
jnp
outsl
rolb
stos
mov
pop
sub
add
and
stos
sbb
insl
data16
pop
and
loop
mov
sub
insb
flds
mov
mov
jge
jmp
lcall
mov
inc
loope
mov
cltd
repz
adc
shrl
add
add
insl
mov
add
add
adc
std
out
ljmp
mov
add
add
add
sub
jo
iret
add
mov
in
jl
lods
hlt
test
mov
lods
xchg
pushf
fcmovbe
jle
push
mov
sbb
icebp
dec
mov
mov
or
ljmp
sahf
das
xchg
or
shll
insb
cmpsl
data16
or
add
cmp
cs
hlt
fmulp
enter
sbb
xor
gs
cmpsl
outsb
sbb
adc
adc
dec
mov
lea
mov
xor
into
jg
mov
into
int3
cmp
cltd
adc
lods
mov
int
aaa
mov
ret
ret
sbb
orb
lcall
inc
mov
add
outsb
daa
inc
push
shl
or
bnd
fsubrl
push
mov
mov
sbb
rolb
and
sub
jle
cmp
stos
push
pop
cmpsl
or
add
add
mov
icebp
ret
xchg
mov
add
add
pop
and
ret
and
cmp
add
loop
fcoms
jnp
dec
in
movaps
xlat
shl
adc
pushf
loope
xor
or
inc
mov
adc
push
push
xchg
movsb
test
inc
xchg
test
stc
pusha
xchg
xchg
flds
mov
cmpsl
push
pop
sub
lods
lahf
daa
mov
sbb
cmp
scas
pop
xchg
fdivl
dec
xor
mov
fnstsw
cli
je
dec
or
fimull
mov
or
xchg
pop
lret
pop
sub
add
imull
adc
daa
daa
dec
mov
jb
idiv
mov
loope
pusha
testb
popf
sbbb
cmp
out
out
aam
mov
xor
inc
add
loop
int
repnz
jb
das
adc
adc
fildll
mov
fldcw
and
inc
or
test
fcomps
add
rorb
add
add
sub
es
push
loope
dec
mov
mov
insb
or
dec
mov
test
and
testl
xchg
adc
sub
or
fadds
out
jo
popa
imul
mov
jl
sub
jb
cmc
ds
scas
fiadds
dec
adc
fwait
lahf
int3
std
cmp
and
inc
cli
pop
icebp
xor
scas
and
movb
adc
aad
mov
sarl
inc
bound
or
shll
in
les
mov
repz
lods
pushf
fcmove
push
push
roll
adc
pop
test
add
lcall
adc
xchg
outsb
ss
add
xchg
mov
aaa
jae
out
inc
xchg
fstpl
in
pop
sahf
stc
jns
in
adc
fstps
out
enter
ljmp
push
ficoml
ljmp
dec
mov
jle
les
add
jmp
fldl
and
add
jne
push
sbb
cmp
mov
xchg
mov
pusha
insl
mov
xor
pop
mov
popa
ds
push
xor
push
inc
movsb
add
add
dec
inc
sub
pop
out
mov
mov
orb
je
sti
and
loop
or
push
out
fists
ds
leave
hlt
mov
pop
cmp
std
aam
and
jecxz
jle
aam
shrd
pop
in
mov
popf
sub
or
ja
pop
sub
rcrb
cvtpi2ps
mov
mov
js
jb
push
addr16
mov
xchg
pop
jno
or
lea
mov
dec
pop
mov
xorb
idivb
xchg
test
fcoml
fists
sahf
mov
shlb
push
push
xor
outsb
add
nop
or
cltd
push
inc
mov
add
aaa
shlb
cmc
div
testl
inc
enter
add
add
out
int
in
mov
mov
mov
test
cmpsl
loop
aad
fimull
add
xchg
pop
pop
ds
rcrb
mov
dec
aas
add
adc
and
in
mov
mov
testb
and
cmp
loopne
mov
mul
nop
mov
pop
xchg
inc
repz
stc
pop
enter
scas
out
call
sbb
mov
add
fwait
stos
fildll
cmp
jns
mull
in
fstpt
stos
pop
fdivrs
fdivrl
cmpsb
test
jmp
adc
test
ss
xchg
repz
sahf
test
lret
popa
sbb
inc
jmp
pop
inc
rclb
pop
mov
fs
pop
sbb
int3
push
sbbl
push
cs
gs
sti
inc
insl
out
mov
mov
xor
inc
mov
mov
lds
inc
mov
push
push
or
imul
add
pop
push
nop
push
sahf
rcr
pop
adcb
pop
pop
dec
inc
int3
nop
add
add
add
inc
cld
mov
and
fwait
ret
push
push
mov
in
lods
jle
xchg
fwait
call
sbb
int3
mov
or
mov
les
mov
lds
mov
icebp
jbe
mov
test
cmpsl
push
shrl
jb
add
sub
clc
lahf
std
ss
fldcw
hlt
daa
push
jmp
mov
cmp
scas
mov
cwtl
xchg
push
scas
cmp
cmp
es
scas
adc
jae
in
pusha
in
cmp
mov
xchg
cmp
mov
pop
lcall
int3
pushf
inc
jmp
pusha
add
rcll
mov
cmp
int3
xorl
pop
scas
adc
jp
fidivrl
insb
arpl
mov
push
inc
dec
pop
stos
jge
mov
adc
mov
les
and
leave
in
scas
dec
adc
clc
cltd
mov
int
mov
shll
cmpsb
jcxz
fimull
rclb
add
imul
xlat
fnstenv
insl
push
fisubrl
cmpsl
cmp
test
stos
mov
in
out
dec
mov
mov
pop
icebp
aad
mov
xchg
add
ret
or
xor
mov
fwait
loop
xchg
jge
orl
mov
sti
xchg
scas
bound
or
cmp
mov
xchg
xchg
dec
mov
mov
mov
cmp
dec
pop
fdivs
lods
cmc
pusha
adc
bound
andl
adc
adc
dec
hlt
stc
or
dec
testb
mov
loop
xlat
mov
out
mov
push
adc
fsubrl
and
xor
jecxz
mov
lods
mov
lcall
sbb
loopne
jb
xchg
shll
dec
jp
jge
addr16
xor
inc
cmp
aaa
push
adc
add
clc
jnp
jg
in
cli
enter
lds
aaa
aam
add
add
add
add
jno
test
xor
shrl
and
xor
jns
insb
and
cmp
sarl
test
xlat
decl
sub
out
pop
xor
pop
jmp
pop
addb
test
pop
push
xor
imul
pop
lret
outsb
push
push
out
rcll
xchg
xor
fsubl
cwtl
test
insb
fimull
faddl
hlt
rolb
pop
in
loopne
mov
jne
add
fistpl
out
scas
fbstp
lds
push
xchg
je
cmp
mov
mov
jl
ret
jecxz
push
daa
xchg
jp
push
xchg
test
sbbl
fimuls
popf
shlb
data16
gs
movsl
outsl
cmpsb
mov
or
cmp
xchg
or
inc
or
out
fidivl
andl
mov
mov
jl
shrl
fidivrl
add
add
lods
faddl
fbstp
cld
gs
mov
fcoms
add
aaa
adc
daa
adc
sti
nop
aaa
lea
mov
and
jnp
jmp
pop
jae
and
loopne
add
testb
push
ss
dec
int3
xchg
jl
inc
mov
adc
add
out
pop
mov
into
cwtl
aam
sbb
stc
cmpsl
cld
scas
out
pop
mov
aaa
insb
call
pop
cld
ret
shll
mov
mov
jnp
lcall
cmp
xor
fildll
inc
dec
scas
gs
pop
adc
push
mov
jne
dec
lock
scas
lret
dec
mov
mov
enter
nop
pop
sub
pop
sbb
push
cmpsl
std
in
pop
and
aas
jp
jnp
sahf
push
cmp
shrl
dec
test
xorb
xor
add
fucom
jae
or
lea
mov
xor
cli
imul
mov
push
mov
loop
out
cli
repnz
dec
pop
push
dec
cmp
jl
sar
std
jle
pop
popf
scas
test
fcoml
add
adc
andb
leave
shlb
dec
cmp
aas
stos
lcall
punpckhdq
in
insb
pushf
fdivrs
daa
das
jae
aas
pop
or
xor
cld
mov
mov
adc
out
repnz
popf
mov
sbb
xchg
repnz
outsl
push
inc
cmpsl
rolb
add
push
into
mov
hlt
add
mov
pop
loop
mulb
push
push
aam
stos
fcomi
aad
into
mov
mov
sbb
shrl
stos
jge
popa
mov
mov
sarl
jl
push
sbb
adc
dec
out
dec
pop
mov
inc
xchg
add
enter
adc
test
push
mov
mov
cmp
inc
inc
ss
mov
sub
sti
dec
stos
xor
cmp
mov
xor
and
and
shrl
arpl
cli
xchg
inc
sbb
push
stos
inc
push
mov
push
in
push
mov
lock
add
add
cwtl
or
stos
xchg
cmp
in
mov
in
sub
xchg
add
add
add
out
mov
cltd
loopne,pn
jae
stc
adc
push
subl
mov
xorl
aaa
mov
or
bnd
rcrl
mov
inc
push
adc
jge
and
xchg
cmp
adc
pop
push
adc
and
lea
addr16
fdivs
mov
pop
jmp
sub
sbb
popa
and
adc
or
mov
mov
loope,pn
sbb
notb
test
sahf
leave
cmpsb
popl
sti
jb
mov
loopne
jg
fiadds
lret
adc
sbb
or
arpl
push
and
scas
fimuls
sub
stos
daa
push
xor
lret
mov
add
and
cmp
insl
and
xchg
push
sbbb
mov
mov
loope
push
xor
adc
fwait
and
popa
mov
xorl
in
add
add
add
xchg
inc
les
leave
imul
mov
xchg
andb
jno
jne
push
pop
sub
fucomip
adc
mov
sbb
add
frstor
or
ss
pop
or
jnp
push
adc
or
pushf
adc
dec
jle
arpl
xchg
aam
lcall
movsl
fs
adc
mov
mov
inc
cltd
out
icebp
adc
mov
push
and
cmp
adcl
dec
sbb
xchg
dec
sbb
cmp
and
or
rorb
loopne
int3
push
shrb
aam
lret
repnz
stos
sti
inc
pop
movsl
cltd
pop
nop
mov
jne
lret
cmc
cli
mov
lahf
and
lret
pop
ret
outsl
and
xchg
pushf
sahf
dec
inc
push
arpl
push
movsl
inc
stc
les
mov
add
dec
std
out
xlat
aas
dec
sbb
or
call
add
add
xchg
add
aad
inc
push
lods
pop
and
xchg
inc
sub
frstor
insl
fildll
or
pop
ja
fsubs
push
and
pushf
dec
push
adc
cli
cs
pop
je
cmpsl
shl
add
and
mov
mov
mov
adc
xchg
mov
hlt
dec
aaa
sub
out
in
adc
aad
sub
cmp
testl
rcll
dec
outsl
push
cmpsb
loope
pop
cmp
sbb
std
adc
inc
out
jmp
les
outsl
mov
lret
fistps
jecxz
sub
mov
int3
insb
xor
inc
dec
in
insl
data16
cwtl
lret
adc
and
arpl
repnz
dec
fdivrl
lahf
lret
inc
aad
or
jo
mov
pop
xchg
or
push
pop
xchg
xchg
sbb
mov
sbbb
enter
add
imul
outsl
vmwrite
mov
cwtl
add
add
add
inc
xor
dec
scas
shll
add
scas
aas
xchg
sti
movsl
arpl
fsubrl
int3
and
addr16
sarl
jb
push
inc
arpl
pop
fcoms
test
cmpsb
pop
ds
jecxz
rcll
popa
inc
movsl
push
xchg
mov
add
inc
pop
aad
rcll
jne
aam
rorl
xchg
mov
cmp
sub
jle
cmpsl
sbb
movsb
les
das
mov
inc
bound
cli
jo
inc
adc
lock
mov
cmp
cmp
push
cli
out
and
mov
cmp
daa
mov
cmpsl
push
sti
inc
push
jo
cltd
int
mov
pop
leave
scas
and
in
shrb
repnz
cwtl
xor
inc
mov
mov
test
sbb
lea
xchg
sahf
mov
dec
mov
sahf
stos
test
std
repnz
add
adc
sbbl
popl
dec
or
add
add
mov
fdiv
mov
dec
popf
leave
mov
jb
sbb
stos
js
aam
sub
fucomp
cli
add
lahf
pop
mov
inc
jp
lcall
std
mov
cmp
es
loope
xorl
inc
or
cltd
movsl
mov
sti
jecxz
std
fldl
out
cmc
mov
out
add
sti
lock
push
in
push
inc
pop
fcoms
scas
nop
cmp
dec
stc
cwtl
pop
jne
cs
les
jle
adc
stos
hlt
mov
rcll
loopne
lock
jnp
pop
sbb
outsl
add
pop
inc
jno
xor
pop
sub
sbb
insl
scas
inc
mov
cmp
pushf
fsubp
iret
jns
sbb
cmc
movsb
ret
imulb
pop
fs
dec
lds
mov
pop
push
popf
cmp
pop
and
fsubr
mov
xor
cli
jl
xor
xor
decl
loop
mov
mov
imul
movsb
and
movsb
cmpsl
fldcw
lcall
cmp
and
movb
jbe
nop
cld
in
gs
popa
pop
mov
mov
lock
out
ljmp
jmp
insl
mov
popa
gs
push
jns
in
mov
popf
push
stc
popa
and
fbstp
cmovbe
cli
adc
ficoml
dec
enter
aam
inc
and
lcall
or
dec
out
dec
repnz
jmp
andb
lods
mov
xor
mov
es
loope
sti
push
mov
stos
in
daa
enter
push
add
xchg
lock
or
std
scas
jg
cmp
lret
cmpsl
mov
call
mov
mov
xchg
add
and
das
adc
mov
xor
movsb
fadds
jns
call
pop
or
xchg
or
sti
push
add
in
lret
push
lahf
xor
push
or
mov
mov
mov
jge
jg
ljmp
in
lahf
mov
and
add
add
fsubl
sub
test
push
and
gs
ficoml
call
push
das
xchg
cmpsb
push
or
lds
arpl
xchg
mov
lock
pop
call
fisttpll
and
rcrb
psllw
push
jp
ss
leave
ss
sbb
popf
sub
leave
push
bound
mov
and
inc
sub
dec
dec
pushl
adc
adc
leave
or
xor
or
inc
test
pop
inc
pop
pop
jmp
aaa
cwtl
inc
inc
es
mov
call
out
sbb
jmp
and
mov
xor
std
in
test
jecxz
and
insertq
jns
stc
adc
les
push
into
test
insl
inc
cmp
inc
insb
popf
inc
das
mov
push
aaa
cld
subl
mov
inc
test
inc
push
add
mov
js
aaa
sbb
mov
add
add
ja
out
inc
sub
or
ds
lcall
add
rcll
or
cmp
enter
jl
jl
mov
dec
lret
lcall
sub
fdivrl
dec
and
cs
jae
or
and
cs
js
cltd
add
sti
scas
adc
pusha
out
and
shl
push
fists
out
xchg
mov
sub
push
fisubrs
cmp
movsb
andl
jae
mov
lret
push
out
xor
mov
mov
and
adc
rorl
pushf
rorl
mov
jo
enter
sbb
sbb
or
hlt
mov
fwait
push
addb
sbb
lret
pop
rclb
imul
and
ret
cmp
loop
jno
sub
popa
xchg
std
aas
call
and
mov
xor
sub
fsubs
push
mov
jnp
sbb
add
loop
test
mov
cld
mov
add
add
jl
fnstcw
enter
mov
push
pop
negb
ss
test
xor
jg
rclb
pop
inc
xor
dec
arpl
push
fcomps
pop
cld
mov
mov
les
mov
push
shr
mov
lea
cmp
outsl
dec
and
rcll
and
xchg
pop
das
bound
out
pushf
imull
push
incl
shrl
push
adc
gs
les
jno
inc
xchg
xor
mul
fcompl
sub
in
out
cmp
mov
adc
or
mov
loope
out
pop
dec
or
jg
daa
dec
hlt
fwait
lret
adc
lea
push
fsubrp
or
cmp
sbb
sti
mov
cmp
mov
sbb
ret
imul
sbb
pop
xor
or
lcall
loope
jne
lahf
add
add
add
jp
flds
cmp
leave
sbbb
cmpsb
push
pop
and
cmp
nop
std
ljmp
cmp
dec
sti
dec
sbbl
pop
mov
cmp
insl
fwait
pop
popa
inc
inc
inc
jge
dec
sbb
xor
inc
sbb
push
hlt
and
testb
test
ljmp
adc
mov
mov
mov
mov
jbe
mov
inc
sbb
js
cmp
in
adc
mov
and
cs
cld
xchg
data16
hlt
sbb
fnstsw
adc
aas
or
es
dec
cwtl
andl
ja
pop
sbb
dec
lcall
xchg
pop
cmp
mov
pop
jp
dec
jmp
mov
aas
rcll
xor
cld
jp
jno
mov
addb
jns
das
test
cmc
mov
xlat
cltd
pop
inc
testb
add
movsb
mov
mov
inc
inc
add
mov
add
sub
outsl
lret
push
faddp
inc
jns
sub
or
in
push
adcl
sub
xor
inc
mov
or
into
sarl
add
call
push
pop
lret
and
jp
je
inc
insl
dec
movsb
dec
imul
aad
fcoml
push
jp
xchg
cltd
sar
fwait
mov
cmc
ljmp
imul
jae
dec
insb
fs
mov
mov
gs
cmp
enter
xchg
movsl
jmp
add
xchg
push
dec
rol
insb
testb
imull
push
or
test
out
inc
sub
ret
xor
daa
call
pop
or
mov
xchg
xor
js
jne
fs
or
imul
sub
ficoml
fisubl
xchg
sub
out
xchg
pop
in
add
or
roll
add
add
std
inc
mov
sub
add
add
mov
cld
xor
adc
adc
pop
dec
int3
and
mov
push
aam
sbb
push
shrl
mov
xchg
mov
xchg
inc
movsl
repz
inc
xor
jnp
mov
dec
mov
sbbb
sbb
test
jmp
je
stc
pushf
inc
push
jae,pn
mov
pop
mov
lcall
call
sub
push
dec
add
lea
mov
in
jae
cmpsl
jnp
inc
enter
rorl
xchg
loope
xchg
mov
or
jp
cld
das
mov
loop
xchg
mul
sub
sbb
lret
or
stos
loope
es
cmc
adc
and
dec
mov
xchg
mov
push
sub
ror
xchg
lret
sub
sahf
jle
push
ljmp
mov
add
add
inc
fdivl
push
dec
mov
adc
add
inc
mov
add
notb
pusha
cli
mov
mov
imul
test
movl
mov
pop
jl
fldcw
sarb
lcall
dec
dec
fnstcw
lret
popa
xor
sahf
scas
push
jl
test
mov
pushf
outsb
popf
adc
lods
ja
jmp
mov
mov
fs
adcl
mov
xor
add
divl
xchg
repz
xchg
jbe
mov
in
push
inc
xor
mov
imul
fists
pop
in
out
mov
out
sbb
cmpsl
nop
add
push
movsl
test
push
das
test
mov
pusha
xchg
cmp
mov
sbb
cltd
adc
fldl
and
lds
or
sbb
incl
sahf
xor
add
mov
test
test
es
push
adc
mov
sbb
lret
mov
add
sbb
push
inc
jp
into
std
stos
pop
mov
call
sub
push
inc
aad
mov
push
cld
dec
jne
daa
loope
or
mov
inc
idivb
jg
inc
imul
pop
dec
jle
sbb
adc
sbb
mov
stc
jae
mov
push
adc
jae
in
in
jle
pop
inc
popa
pop
movsb
cld
sub
pop
je
mov
ja
in
subb
ljmp
out
test
repz
xor
pop
lds
mov
pop
jle
add
fildll
mov
lret
and
adc
mov
lods
sti
clc
and
sub
out
mov
sub
lea
inc
cmp
insl
jb
push
outsl
sub
sbbb
scas
iret
shll
and
dec
lret
sub
sahf
mov
pop
test
stos
hlt
jmp
cmp
jbe
jp
jb
sbb
add
loope
mov
imul
sbb
cmp
icebp
nop
dec
loopne
mov
xchg
xor
daa
stos
add
xorl
ret
ret
sub
stos
in
or
lds
push
add
repz
sahf
cld
or
pop
pushf
fcoms
and
in
pop
jmp
push
pop
jl
test
insb
ret
mov
shl
fdivl
cmc
dec
cs
dec
sbb
aas
push
lock
pop
ss
adc
repz
jns
mov
cld
ja
sub
cmp
xor
in
in
dec
jnp
and
jbe
sub
repz
mov
push
dec
fcmovu
insb
sahf
movsb
test
ret
loopne
pop
popa
jg
pop
add
mov
push
add
cmpsl
aad
adc
jnp
jge
mov
add
repnz
fnstsw
aaa
imul
add
out
xlat
out
jg
in
xor
fldenv
add
add
add
icebp
icebp
in
and
push
ljmp
pop
mov
ss
inc
pop
imul
xchg
les
sbb
in
fs
inc
pop
cmp
add
pop
shl
repz
mov
ficompl
xor
xor
adc
sub
jecxz
filds
aam
js
pop
movsl
push
fs
xor
inc
rep
or
dec
rclb
dec
sub
cmpsl
dec
ja
inc
sub
xchg
adc
aas
xchg
sahf
sbbb
and
fnstcw
mov
and
jle
xchg
sbb
test
rcll
jecxz
xchg
dec
mov
push
in
jle
fnsave
mull
sbb
inc
push
dec
mov
sbb
mov
popf
jne
and
dec
cld
pop
lcall
jb
cmp
ljmp
xor
xorb
jbe
cmpsl
or
fcoms
nop
lahf
or
sub
add
add
mov
inc
fwait
lds
jo
fldl2e
shrb
add
add
jae
adc
les
mov
pushf
mov
pop
cmp
stos
bound
sbb
pop
lret
inc
add
int
pop
inc
mov
add
std
pop
mov
mov
or
aad
add
xchg
and
cmp
dec
cld
stos
lcall
imul
adc
mov
mov
fdiv
xor
push
or
rclb
fdivrs
or
sbb
xor
jae
test
jne
or
sbb
arpl
mov
mov
imul
mov
jbe
cmp
mov
stos
mov
xchg
imul
arpl
sub
jae
popf
cli
call
clc
mov
jge
lret
xchg
sbb
push
out
lcall
std
inc
jne
xor
leave
or
add
add
add
shl
clc
cmp
mov
lahf
pop
and
inc
cs
mov
aad
mov
movb
add
cli
ljmp
enter
fdivrs
in
movsl
pop
adc
in
popf
jno
mov
movsb
mov
jmp
mov
xchg
dec
inc
pop
push
mov
leave
lcall
cmp
mov
pop
add
shll
jno
or
push
aad
lea
fabs
icebp
ljmp
pushf
sbbl
insl
js
fsubs
jecxz
nop
inc
xchg
fimuls
cmp
xchg
lea
movsl
sbb
sub
pop
iret
lock
out
aam
mov
fnstcw
sbb
sub
aad
cmp
cmp
xchg
push
into
pop
jle
es
jp
and
mov
mov
pop
cmpsl
sub
movsb
aam
sbb
jbe
jne
cmp
add
mov
push
sti
jmp
push
mov
div
std
mov
test
add
add
inc
push
mov
imul
fwait
loope
add
pop
adc
xchg
pop
sbb
inc
test
pop
loopne
pop
cmp
cwtl
cld
push
repnz
stos
pusha
mov
mov
xchg
jae
xchg
repnz
jge
inc
xchg
push
xor
inc
mov
jb
xchg
test
daa
dec
sub
push
jnp
in
mov
cmp
mov
xlat
mov
mov
scas
lea
cmc
mov
les
and
addr16
mov
mov
popa
dec
xchg
fistl
pushf
outsb
xchg
test
xor
adc
stos
movsb
jns
jl
and
stos
mov
jge
out
cltd
mov
loop
pop
sbb
int
push
loope
xor
out
cmc
aad
push
popa
and
xchg
xorb
push
mov
fnstsw
jecxz
mov
push
dec
sbb
sbb
jno
inc
push
inc
cmp
lret
and
repnz
mov
xor
mov
jecxz
lock
lahf
cmp
add
add
add
jne
sub
add
es
cmp
mov
cmc
cwtl
push
test
dec
es
push
inc
lretw
push
and
sbb
pop
in
xor
inc
sbb
imul
cmp
adc
mov
mov
in
and
aaa
scas
popf
inc
sub
push
sbb
test
loopne
push
sub
and
cmpb
add
cltd
loope
cwtl
dec
or
xlat
sarb
push
inc
aam
sub
jl
xor
nop
sub
pop
aaa
push
sub
and
pusha
movsb
sub
repnz
stos
lret
mov
icebp
cwtd
pop
cmp
mov
cmpsl
andb
mov
pop
inc
cmpsl
data16
fcoml
sbb
fsubr
cmp
inc
push
xchg
ja
js
jecxz
ljmp
shll
push
icebp
aad
cmp
add
add
cld
mov
leave
cld
in
add
stos
add
add
add
push
stos
pop
ss
cmp
lods
roll
insb
mov
out
mov
or
cmp
cli
mov
arpl
sar
int3
or
push
jnp
mov
jae
dec
mov
lock
mov
mov
cltd
jne
out
fcmovb
mov
mov
mov
mov
adc
lea
jno
sbb
push
pop
add
or
pop
sub
inc
fistpl
out
lea
shlb
mov
xchg
adc
mov
jo
sbb
mov
fdivrs
and
add
cld
xor
dec
lds
or
pusha
rcl
jg
sbb
and
cmp
pop
pop
stos
in
jne
mov
loop
stc
fldl
shll
ss
hlt
mov
inc
ret
mov
data16
cmp
mov
dec
das
pop
out
cmc
mov
sbb
stc
fdivl
add
add
add
test
dec
or
sub
sbb
inc
cmp
push
in
flds
fiaddl
jmp
loope
outsb
jg
mov
fisttpll
ficoml
mov
cmp
fsubl
aad
push
inc
iret
xlat
and
push
mov
pop
mov
imul
jle
and
sbb
lahf
mov
mov
test
mov
adc
and
std
cmpl
cmp
into
rorl
jl
adc
repnz
arpl
icebp
enter
xchg
fsubrl
mov
mov
adc
mov
sbb
aad
fucomp
inc
shll
cwtl
ja
sar
mov
inc
out
cmpsb
jno
in
cltd
cmp
enter
xlat
rcl
and
mov
scas
fisubrs
pop
cmp
fucomip
std
dec
std
pop
lcall
xchg
pop
push
pushf
dec
cmp
cmp
add
xchg
int
adc
sbb
and
out
mov
mov
inc
push
xchg
cmp
stc
das
and
lods
push
fs
sbb
sbb
xchg
jg
sub
sub
pop
xchg
push
enter
jb
setb
mov
push
adcb
test
pop
or
lret
dec
jae
mov
pop
repnz
iret
and
inc
inc
cmp
xchg
jbe
push
bound
sub
inc
aam
sbb
sbb
dec
rolb
cmp
jo
outsb
roll
pop
cmp
jl
ret
and
and
rolb
lea
out
fisttpll
hlt
test
sbb
cli
cli
pushf
push
sub
fld
mov
inc
filds
lret
lock
decl
in
aad
dec
dec
imul
xor
inc
or
cli
pusha
mov
sbb
lea
add
fidivs
loop
ljmp
sub
or
add
add
nop
xor
stc
mov
add
roll
out
xchg
ss
jge
notl
xchg
inc
mov
jg
adc
mov
lret
push
jp
cmpb
cld
pushf
xchg
adc
push
mov
lret
xchg
pop
cwtl
mulb
stos
jo
fdivp
aas
adc
pop
out
jmp
sub
dec
jmp
sub
pushf
divb
and
mov
xor
into
adc
jae
lret
jnp
add
lcall
push
js
rcll
hlt
mov
pop
adc
es
fmuls
insb
hlt
mov
dec
push
addr16
into
mov
cld
movsb
rclb
push
cmp
adc
insb
pop
imul
push
arpl
shll
or
mov
cmp
push
sbb
je
xor
xor
outsl
cmpsl
push
stos
bound
xchg
mov
add
add
xchg
jg
jmp
std
mov
mov
daa
inc
scas
add
add
add
into
ror
jge
js
xor
sub
pop
addb
addr16
insl
jg
xlat
mov
sub
jbe,pt
in
imulb
dec
shrl
xchg
pushf
mov
test
inc
adcl
sbbb
aam
ret
xor
push
test
xor
push
add
sbb
xor
mov
push
jl
push
enter
push
hlt
test
scas
sbb
movsb
mov
jno
rorb
das
inc
je
sbb
pop
in
imul
cmp
xor
and
nop
repz
and
ss
inc
xor
out
add
lret
dec
and
push
mov
add
inc
fs
push
call
add
lds
push
hlt
or
mov
or
xor
jg
aam
jbe
in
cmp
mov
fdivrl
insb
subb
ljmp
mov
sub
sbb
inc
loope
inc
lock
lods
push
divb
inc
mov
ret
fs
scas
add
add
add
xlat
ss
push
adc
mov
xchg
xchg
push
repz
cmp
push
mov
mov
inc
cli
sahf
inc
add
inc
adc
sub
cmp
sbb
jbe
jle
fnsave
xchg
cltd
sub
fsubs
je
cwtl
outsl
sbb
push
pop
jl
push
sub
add
mov
sbb
lahf
and
dec
push
int3
adc
xchg
pop
jbe
add
lods
mov
stc
nop
jl
cmp
and
add
or
or
ret
push
imul
cmp
sbb
jle
dec
jmpw
jmp
xchg
and
cli
lds
adc
pop
sbb
pop
stos
lret
pop
and
push
shrb
or
add
add
or
int
and
push
scas
xchg
out
cmpsl
cmp
jge
vphaddubw
add
add
add
xor
cmp
inc
call
add
add
add
je
shrb
jge
sub
dec
out
and
mov
popa
fnstcw
or
cmp
aad
mov
enter
pop
mov
xor
data16
inc
mov
adc
iret
jg
cmp
pop
adc
inc
scas
fisttpl
xorl
lods
add
xor
mov
fisubl
fsubl
sub
cwtl
ds
mov
scas
lock
scas
jns
nop
or
scas
data16
push
sbb
das
jp
pop
or
ret
push
icebp
shr
incl
mov
movsl
mov
imul
popa
push
xchg
fwait
xchg
jge
xor
rorl
insb
sbb
sub
fcoml
jmp
inc
mov
jecxz
adc
xchg
sub
jmp
negb
mov
mov
addl
cmpsb
jp
mov
in
lock
mov
js
scas
push
adc
les
add
jp
les
mov
arpl
adc
add
add
pusha
mov
mov
jg
jno
inc
sbb
adc
shll
std
js
ds
into
imul
xlat
jg
push
inc
mov
ret
es
movsb
adc
xor
and
adc
lods
pop
push
test
add
leave
add
jnp
add
out
lcall
popf
push
aaa
pop
xrelease
sbb
nop
dec
mov
popf
sbb
sub
add
cli
adc
aaa
out
sub
int
push
ss
mov
cltd
pop
cld
fisttpll
sub
xchg
jnp
ret
pushf
push
sbb
movsl
adc
outsb
test
aaa
jns
jb
fnstsw
nop
mov
push
cld
push
xchg
insb
pop
mov
daa
in
push
pop
cmp
xchg
mov
jp
sbb
les
test
lds
cmp
pushf
jbe
faddl
jnp
aaa
pop
sbb
xchg
inc
cltd
sbb
add
dec
or
pop
stc
out
push
pop
bound
mov
add
add
add
pop
add
adc
out
add
xor
cmp
pop
arpl
sub
aam
and
dec
pop
lcall
inc
shll
neg
pop
and
and
sahf
mov
pop
inc
das
popf
hlt
cmpl
clc
int
cmpl
or
xor
push
jns
sahf
cltd
rclb
outsb
adc
adc
mov
xor
xor
int
jge
nop
sub
cmp
scas
in
outsl
adc
in
push
mov
insb
fwait
pop
out
dec
loope
cmp
or
dec
loope
xchg
bound
xchg
push
movsb
inc
je
mov
cmpsl
je
inc
jnp
adc
js
sub
add
sub
lds
es
push
xor
shll
cld
adc
dec
lretw
js
out
std
jo
fsubrl
sub
xlat
lret
inc
into
jmp
flds
add
add
push
mov
lcall
push
push
mov
add
add
dec
das
jp
insb
pop
out
in
lret
out
push
xor
sbb
mov
or
push
xchg
add
xor
das
fdivrs
cmp
xor
int3
std
mov
in
xchg
sub
orb
mov
or
dec
std
rcll
xchg
leave
sti
fsubl
test
or
stos
das
in
hlt
jb
hlt
and
aad
lods
or
add
fadds
or
cmp
sbb
pushf
sub
fcom
jmp
clc
test
dec
hlt
inc
cmp
push
loope
std
jno
loope
add
and
pop
dec
cli
jmp
lret
loope
movsl
push
inc
daa
push
fdivrs
adc
adc
xlat
int
sub
nop
sub
insl
repnz
push
and
std
cmp
inc
xor
mov
es
mov
out
or
into
repnz
dec
sbb
inc
cld
cmpsl
inc
inc
xorl
insb
lret
movsb
adc
add
add
add
pushf
xor
push
imul
mov
mov
enter
je
mov
push
inc
outsl
mov
push
outsl
sbb
inc
aam
mov
adc
vandnpd
xor
jp
cmpl
push
lea
shll
bound
and
shlb
test
or
xor
outsl
lock
mov
inc
push
jnp
xchg
stos
mov
icebp
nop
mov
inc
push
pop
js
mov
sbb
lods
lret
mov
pop
cld
stos
fidivrs
jb
inc
xor
shll
dec
xor
xor
sbb
sbb
mov
or
scas
xchg
pop
je
push
mov
jbe
in
add
inc
ja
addr16
jnp
cmp
adc
into
cmp
imul
xchg
repnz
sub
pop
insl
xchg
stos
ret
in
fisubl
loopne
ret
rol
fdivr
inc
enter
stos
stos
lahf
pop
jne
out
dec
pop
pop
sbbl
fstp
rorl
fs
add
add
shll
cs
dec
jmp
mov
and
mov
pop
push
lock
push
bound
push
int3
push
dec
mov
and
mov
dec
arpl
ret
mov
mov
push
addr16
xor
add
pushf
xor
mov
xor
nop
daa
pusha
aam
loopne
mov
mov
add
mov
or
push
dec
or
add
push
dec
loope
add
jnp
fisubrl
sahf
shrl
or
xor
out
push
sti
jle
cmp
gs
cli
mov
or
mov
or
and
mov
or
mov
ret
lods
mov
push
add
adc
mov
and
cltd
icebp
cltd
jl
mov
push
dec
mov
xchg
or
adc
push
push
in
add
add
in
mov
jecxz
out
mov
jp
lock
mov
add
add
les
pop
xor
scas
jmp
clc
lcall
cmc
sub
sbb
out
pop
addl
add
push
xchg
pop
lods
jbe
adc
call
leave
les
sbb
outsb
icebp
xorl
fstps
and
mov
sbb
fbld
ljmp
imul
addb
ds
shl
pop
jle
int3
ret
and
pop
cld
popa
sbb
movsb
dec
mov
pop
xchg
test
jge
stos
cmc
push
gs
lahf
mov
aam
stos
lods
pop
jno
or
std
arpl
in
or
mov
ds
add
add
out
in
testb
les
shll
cld
mov
jae
icebp
pop
cmp
mov
sub
jmp
popa
fcoml
mov
add
mov
inc
adc
jne
es
test
inc
push
xchg
test
jg
into
lret
orl
add
add
loopne
pop
lret
jns
mov
int3
pushl
std
cmp
leave
jl
mov
loope
fcmovnu
xor
inc
ds
or
sub
lahf
sbb
jmp
lret
fistps
fldl
scas
hlt
scas
xchg
cmp
outsb
movhps
dec
ja
inc
jnp
jg
pusha
xchg
dec
add
nop
fidivs
push
sbb
out
sahf
mov
sbb
lahf
jae
inc
popa
mov
pusha
cld
dec
mov
vunpcklps
jmp
rsm
imul
inc
or
daa
pop
add
mov
inc
mov
cmp
ds
enter
nop
adc
stos
lds
scas
nop
imul
imul
mov
mov
jae
es
out
mov
xchg
xchg
daa
push
push
add
sahf
inc
dec
pop
sub
std
stos
das
xchg
mov
xchg
xor
mov
int3
mov
lock
in
lcall
jae
dec
mov
in
push
add
add
in
mov
int3
cs
nop
bound
dec
add
jae
xor
out
test
cli
aaa
je
inc
das
push
jns
sub
xchg
loope
dec
mov
aad
rcrb
pop
sti
loopne
adc
cld
dec
insb
sarl
in
mov
xorl
push
mov
pop
pop
pop
jnp
cmp
fsts
cld
imul
test
mov
icebp
dec
sub
mov
test
outsl
loopne
push
mov
ret
cmpsl
pop
xor
sbbb
out
pop
xchg
cmp
sub
imul
sbb
dec
dec
aaa
sbb
inc
das
push
roll
lods
sub
aaa
and
cmp
dec
xchg
movsl
cwtl
push
mov
stos
aad
add
xchg
lret
jge
xor
cli
cmp
or
adc
jle
push
jp
xchg
and
sub
iret
into
dec
or
jg
dec
arpl
insb
mov
add
in
js
push
popf
rorb
push
push
xor
std
lret
pusha
popf
sbb
cmp
jae
les
dec
push
outsb
hlt
mov
adc
arpl
fimull
in
aaa
sti
mov
cmpsb
pushf
aam
insl
jg
jl
stos
jns
test
cmp
sbb
leave
test
dec
leave
xor
jle
adc
inc
cltd
fcomps
dec
adc
sarb
scas
dec
mov
jne
fsubl
dec
out
insl
shrb
push
push
mov
js
jle
sahf
xor
ljmp
push
push
xchg
sub
jmp
xchg
das
ja
jo
int
sbb
popa
movl
outsl
push
cmp
shll
enter
xchg
push
and
pop
xchg
dec
xchg
out
pusha
mov
xor
adc
and
cmp
mov
and
mov
push
push
cld
xor
dec
call
in
add
add
out
idiv
outsl
mov
add
dec
or
add
add
add
xchg
cmp
push
stos
jmp
cmp
and
dec
and
dec
mov
fisubrl
icebp
xor
jmp
push
mov
test
daa
jnp
jo
xor
and
push
gs
das
add
push
dec
mov
je
fadds
mov
icebp
mov
icebp
cs
or
not
or
jmp
imull
push
cmp
cmc
fs
pop
aas
lds
pop
aas
stc
xchg
pusha
repnz
mov
sti
jp
jns
add
lods
insb
inc
test
das
scas
inc
sub
clc
inc
jns
inc
lea
xor
lods
mov
xchg
fisubs
sub
cmp
negb
fcoms
push
sbb
cmp
and
mov
add
lcall
pop
inc
into
int3
sub
idiv
shll
jo
addl
sub
add
test
jl
jle
ret
sbb
xchg
adc
data16
xor
mov
pop
imul
cmp
add
add
cli
pop
cmp
jb
outsb
movsl
pop
jae
aas
fdivrs
mov
xchg
jmp
cmp
inc
dec
jb
lea
arpl
xor
pop
test
ljmp
push
cmp
mov
mov
popa
mov
mov
xor
in
sbb
jnp
iret
xchg
rcrl
xchg
xorb
pusha
shl
ret
inc
dec
sbb
xlat
das
inc
pushf
pop
sub
xor
xchg
clc
and
mov
adc
mov
insl
sar
and
in
push
int
stos
inc
dec
lods
loopne
mov
in
or
mov
inc
fiadds
dec
iret
mov
ror
lods
ret
push
xchg
and
fisttpl
dec
sbb
in
std
cmp
subb
fadds
push
cmp
fimuls
adc
adc
ret
push
rorb
inc
cmp
insl
aaa
iret
cmp
mov
mov
testb
arpl
lods
out
cltd
ljmp
add
mov
sub
push
push
call
insb
mov
add
add
add
jae
mov
outsl
xchg
mov
mov
outsl
loopne
loopne
loope
mov
es
mov
out
sbb
dec
leave
ret
pop
in
lds
int3
stos
xchg
mov
dec
mov
loop
mov
push
adc
push
mov
scas
aaa
xlat
andl
fs
mov
push
inc
mov
stc
inc
lds
push
mov
movsl
test
scas
cmc
adc
or
mov
cltd
andb
add
jl
sub
dec
test
dec
xchg
lcall
in
movsb
aas
add
adc
push
xchg
fstp
inc
fbld
jns
xor
popa
aaa
push
xor
imul
mov
loope
sub
mov
mov
mov
int3
stc
lret
adc
push
jo
and
mov
sbb
cmpl
sub
rolb
add
into
std
sti
leave
sti
iret
jmp
pop
inc
jnp
mov
add
sub
add
adcb
sbbl
add
jo
sbb
xor
cli
mov
jb
inc
mov
scas
sbbb
sti
push
mov
loop
cmpsb
push
push
dec
mov
jno
ja
jae
pop
pop
cmp
sub
stc
pop
add
fadd
pop
loopne
sahf
stc
sub
cmc
data16
jl
mov
adc
push
mov
fbstp
xor
cmp
daa
mulb
out
and
cmp
jp
adc
fisttps
jo
insl
aas
xchg
mov
xor
xchg
xor
cmp
mov
loopne
lods
pop
movsb
js
imul
lcall
adc
mov
jns
mov
sbb
cmp
pop
movsb
or
test
in
push
addl
or
push
stc
push
jle
mov
or
pop
push
es
pop
cmc
mov
push
loop
adc
fs
mov
mov
xor
cmp
mov
mov
add
jb
lret
incl
repz
jae
push
in
jbe
nop
cmc
mov
lds
cwtl
je
sbb
cmp
xchg
xor
out
and
sub
dec
jae
pop
fs
or
cmp
mov
sbb
add
mov
jge
stos
ljmp
jo
shll
jns
inc
and
xor
scas
jecxz
mov
inc
gs
pop
add
movsl
scas
data16
addr16
das
xchg
loope
bound
push
inc
xchg
icebp
add
sub
mov
xchg
outsl
add
push
add
dec
inc
xor
sub
mov
jmp
shlb
dec
ret
add
jns
push
icebp
rcl
rcll
push
enter
repz
and
adc
test
inc
cwtl
push
iret
jb
cld
in
jb
or
add
add
jg
mov
sahf
loop
stos
leave
xor
add
add
out
or
jo
pop
ffree
mov
ret
cmp
hlt
clc
in
pop
mov
mov
xor
sub
mov
in
fsubrp
lret
add
pop
clc
mov
xchg
mov
lock
or
inc
add
pop
fcoms
mov
in
sub
jb
pop
jns
dec
popf
and
das
jnp
scas
mov
fldl
pop
push
hlt
iret
or
test
jp
dec
xchg
aaa
mov
sbb
cs
in
cmc
mov
push
pop
sbb
inc
cs
ret
xchg
xor
mov
sbb
cmp
sub
xor
xchg
mov
mov
mov
mov
leave
fildll
xor
mov
movsl
orl
xchg
inc
sbb
test
call
ror
int
rcrl
sbb
lret
and
rcll
mov
push
imul
add
add
inc
enter
pushl
cld
sbb
mov
add
add
add
sbbb
jp
push
xchg
xor
loop
mov
fstpl
adc
inc
ljmp
jbe
xchg
adc
hlt
xlat
jbe
xchg
jl
xor
sbb
mov
daa
jne
pop
lcall
xchg
xor
ficomps
lahf
add
pusha
cwtl
inc
push
lods
in
jne
adc
sub
dec
xchg
leave
mov
xchg
and
mov
std
rcll
std
imul
inc
pop
sub
push
movsl
out
repz
lahf
out
out
imul
sbb
dec
jo
push
pop
fsubs
pop
scas
mov
jo
out
mov
jae
scas
enter
sbbb
fidivl
imul
in
mov
or
test
mov
mov
ret
and
mov
xchg
inc
mov
test
testb
xchg
cmp
stos
lds
add
add
pushf
shrb
lcall
xchg
sub
xchg
mov
add
add
add
cmp
ja
cmpsl
sub
bound
mov
mov
and
mov
iret
inc
nop
loope
lds
vprotq
cmpl
inc
aam
daa
outsb
adc
mov
and
mov
jae
je
ss
sbb
ret
scas
ss
stos
fxch
pushl
pop
les
ret
loope
js
mov
das
mov
push
pop
add
hlt
int3
pop
add
xchg
adcb
xchg
leave
outsb
in
add
and
pop
aad
insl
in
subl
lcall
pop
rol
inc
test
js
mov
mov
sub
and
lret
idivl
aam
dec
xchg
add
xchg
fmul
int
and
sbb
aam
cmpl
shlb
subb
inc
das
sbb
jno
mov
push
mov
inc
aaa
fcompl
loope
push
ja
in
sub
inc
sbb
add
add
test
mov
aas
scas
fxch
repnz
xchg
ret
add
add
ficomps
popa
lret
je
mov
adc
pop
fstpl
scas
ljmp
push
mov
xor
and
or
aad
sbb
or
imul
cmp
ret
adc
inc
frstor
pop
jp
ret
imul
cmc
cld
cmp
or
cmp
push
jecxz
ds
inc
fsubr
cli
and
xadd
xchg
addb
dec
testb
mov
and
cmp
inc
mov
pop
inc
push
inc
pop
push
sub
pop
test
stos
shrl
fnstsw
dec
add
mov
sub
xchg
subl
arpl
mov
js
rcr
inc
xchg
xchg
and
enter
sbb
xchg
scas
xchg
test
in
andb
cmpsb
inc
ss
lcall
lods
je
in
clc
mov
fcomi
pop
mov
add
dec
movsb
mov
pop
ljmp
add
jg
jne
jne
jg
loop
mov
insb
xchg
ret
add
add
add
xchg
mov
js
jb
fs
cmc
test
lahf
fisubrl
fcmovbe
jbe
or
pop
loop
ret
inc
mov
sbb
xchg
hlt
stos
push
add
gs
lea
aas
pop
push
mov
sub
pusha
daa
xchg
dec
mov
dec
insb
sbb
and
jne
or
into
jmp
sti
scas
mov
or
sub
daa
mov
sbb
adc
mov
push
cmpsb
lcall
pop
inc
lret
in
adc
out
aad
pushl
cmp
test
cmp
dec
lahf
pop
int
or
into
and
mov
jns
imul
push
stc
cmp
adc
push
test
add
lods
sarb
inc
scas
dec
pop
popf
add
jnp
shlb
jbe
mov
loop
in
imul
orl
ror
es
xchg
pushl
pop
jno
cmp
mov
filds
add
add
dec
pop
mov
cmc
mov
test
add
add
ds
lret
push
imul
jb
push
push
out
push
enter
xlat
outsb
dec
xor
ljmp
pop
fmull
mov
subl
addb
xchg
out
out
adc
dec
daa
movsb
repnz
dec
call
incl
pop
and
inc
cmp
in
mov
fdivl
or
xchg
dec
jmp
sbb
sbbb
les
cmpsl
jg
int3
nop
cli
mov
lahf
adc
ret
and
repnz
cmpsl
or
add
mov
int3
add
or
cmp
sti
dec
outsl
xchg
ds
pushf
cmp
push
cmp
sti
mov
lds
pop
int
pop
arpl
or
mov
mov
aam
popf
movsl
gs
mov
and
or
sahf
fwait
push
push
mov
mov
imul
movsb
ljmp
add
add
outsb
jle
lods
testl
lds
add
add
stos
lds
xchg
shrb
sub
int
stos
jae
fistl
push
adc
js
sbb
js
add
out
inc
mov
sbb
in
scas
add
xor
out
jns
mov
xchg
and
xor
daa
loope
or
out
xchg
jbe
jne
jbe
jne
fstpt
sti
jge
out
in
sub
sbb
sub
inc
clc
imul
add
roll
pop
sbb
push
push
sub
les
mov
cld
sbb
nop
adc
ret
xor
cwtl
inc
push
and
cmpsb
jno
jae
or
jecxz
mov
clc
test
dec
lret
push
cltd
lcall
aad
pop
or
mov
jb
cld
dec
stos
es
in
fdivrl
xchg
cmp
jle
dec
cmp
js
pop
mov
bound
loope
mov
mov
add
jb
mov
add
add
sub
sub
orl
lcall
mov
ds
push
mov
loop
andl
movsl
stc
sub
call
aam
hlt
imul
and
and
daa
cmp
pop
xor
or
insb
xor
push
pop
jb
movsb
sbb
jae
add
insb
testb
insb
loopne
mov
jp
je
push
adc
mov
test
es
sbb
fidivrs
push
pop
cmp
mov
sbb
test
jns
or
xor
jg
orl
jno
dec
dec
xchg
lea
js
jne
testb
sub
outsl
lahf
add
cmp
in
int
cmp
test
imul
lock
outsl
sub
inc
jl
jge
dec
xor
push
mov
pop
mov
rol
mov
add
add
out
sti
xlat
in
aad
mov
iret
outsl
movsb
movl
add
xchg
cli
cwtl
mull
mov
adc
outsb
xchg
push
cli
pop
fs
sahf
xor
add
nop
mov
aam
xor
stc
cltd
inc
jge
sbb
imull
and
std
loope
pop
xlat
pop
enter
mov
inc
push
jl
clc
loopne
insb
mov
stos
or
enter
or
stos
jne
repnz
sbb
mov
packssdw
movsb
sbb
push
adc
dec
adc
adc
insl
xor
pop
call
cmc
aas
arpl
inc
jecxz
xorl
imul
mov
inc
xor
adc
mov
push
jecxz
push
ret
push
mov
sub
movsb
xchg
xor
repnz
aam
pop
rol
mov
dec
jb
mov
mov
outsb
inc
inc
push
mov
add
das
mov
testb
add
add
push
sub
cmp
jg
and
mov
xorb
add
add
adc
in
fst
data16
xorl
add
mov
xor
sub
push
hlt
mov
cvtps2pi
xchg
pop
out
mov
push
loopne
adc
imul
adc
mov
not
push
mov
fdiv
repz
or
xchg
gs
in
adcb
lea
add
cmpb
fidivrl
push
xor
cmp
adc
inc
or
mov
mov
loope
and
mov
dec
mov
sub
scas
out
and
xchg
test
mov
movsl
movsb
arpl
mov
mov
ret
push
sbb
push
das
xchg
jle
or
inc
sbb
sbb
lret
jp
sub
vpmullw
sub
rcll
push
cs
sbb
scas
sbb
cmpsb
and
add
add
xor
fistpll
out
repz
fcoms
xchg
bound
mov
add
add
in
mov
insb
add
cmpsb
mov
adc
pop
sbb
aaa
xor
xlat
push
jp
in
pushf
mov
and
pop
daa
dec
call
mov
out
pop
and
xor
enter
xchg
or
js
repz
xchg
mov
cmp
insb
pushf
pop
out
pop
and
call
dec
lds
push
jne
inc
jl
inc
cmp
jg
sbb
jge
js
dec
stc
push
pusha
sub
cld
add
repz
inc
xchg
ret
repnz
jl
fildll
pop
lahf
mov
or
nop
mov
jne
out
insb
add
mov
sub
mov
xchg
add
cltd
scas
lods
into
cmc
push
cli
pop
lods
daa
or
lahf
jno
int3
jle
pop
ret
fadds
loop
call
push
mov
dec
push
nopl
push
dec
fcoms
dec
pusha
xlat
mov
fnstenv
add
lds
add
add
mov
mov
mov
lret
add
add
or
xor
fwait
lea
das
int
std
add
sarb
dec
push
shrl
sub
orb
lods
fiaddl
mov
adc
sbb
in
push
cmpsl
bound
inc
loopne
pop
es
gs
lds
loopne
pop
jo
or
aas
inc
cmp
push
dec
xchg
xor
or
jg
xor
or
or
imul
push
cmp
mov
stos
stos
cmp
dec
xor
mov
dec
dec
lahf
xchg
nop
mov
outsb
fidivl
add
jmp
out
fs
fidivs
mov
inc
mov
jbe
jne
ja
jnp
pusha
or
xchg
xchg
jp
sub
cmpsb
negb
add
pop
notb
icebp
subb
adc
xor
ficoms
adc
clc
dec
jle
mov
ds
lock
pop
test
lret
arpl
icebp
sti
int
inc
les
loopne
fmull
push
mov
ljmp
sti
push
loop
mov
add
add
enter
in
sbb
push
inc
daa
imul
adc
cs
aaa
aad
xor
adc
xchg
pop
inc
pop
cmp
adc
xchg
jp
mov
push
sbbb
mov
xor
dec
sub
jecxz
cmpsb
push
pop
pusha
nop
enter
ret
das
cmpsb
and
jmp
xor
cmp
into
js
jg
xchg
xchg
pop
mov
mov
test
cmpl
mov
movsl
call
inc
in
lods
jae
jl
jecxz
cmp
ds
ljmp
jbe
jge
icebp
jne
jg
pusha
in
jbe
leave
or
and
cwtl
in
xchg
mov
mov
adc
mov
std
mov
data16
mov
andb
jp
in
aam
or
inc
out
push
xlat
pop
xchg
sbb
pop
testl
cmpsl
push
add
jg
icebp
stc
ljmp
int3
xor
add
jne
imul
cmc
call
inc
push
popa
push
movsl
loopne
mov
add
add
xchg
test
mov
mov
inc
sbb
mov
or
test
sub
loop
out
sbb
jge
loope
add
leave
jecxz
xor
sub
sbb
pop
add
sti
inc
imul
mov
mov
in
push
xor
sbbl
inc
clc
pop
cmp
fisttps
mov
cmp
dec
xchg
int3
sub
jp
shrb
sbb
mov
cs
mov
lods
push
jb
mov
mov
mov
stos
xchg
mov
push
pop
loop
aaa
aas
insl
sub
jle
leave
sbb
push
mov
or
sbb
sti
scas
adc
arpl
cmp
jbe
jb
std
icebp
cwtl
xor
je
test
inc
or
xchg
add
jnp
xlat
push
push
add
pop
mov
inc
out
aam
stos
mov
ret
add
movsl
mov
iret
sub
cmp
and
int
add
add
xor
push
pushf
hlt
je
and
pop
pcmpgtw
stc
ror
std
nop
mov
cmp
rorb
adcb
test
out
addr16
in
pushf
outsb
dec
dec
shrl
aad
cld
imul
arpl
xor
inc
cmp
bound
rorl
or
dec
mov
xor
adc
jne
loope
repz
pop
test
pop
inc
xor
inc
enter
popf
sbb
and
sbb
mov
cmpsl
rcrb
add
xor
cmp
std
xchg
jl
xchg
mov
lret
xchg
cmp
jmp
inc
sbb
cmpsb
clc
sbb
lret
sbb
and
bnd
lock
in
test
push
cmpsb
push
pop
fidivrl
cmp
outsl
xor
pop
lahf
mov
popf
mov
cwtl
aad
nop
popf
out
adc
sbb
mov
out
out
out
into
gs
cld
test
mov
ror
add
add
xchg
mov
push
add
adc
mov
xor
scas
call
or
xor
in
mov
add
mov
pop
cmc
in
jmp
divb
imul
add
loope
stc
pop
inc
mov
test
repnz
pop
inc
cmpsb
data16
or
xchg
test
add
cmpsb
xor
jno
or
dec
mov
jo
pop
andb
xor
and
push
mov
aaa
mov
dec
outsb
jns
sub
iret
lcall
ret
cmp
test
push
mov
pop
pop
std
pusha
xor
jno
lahf
into
cld
adc
xchg
out
mov
ja
shll
stos
push
adc
mov
pop
loope
inc
fpatan
int3
push
jns
sbb
in
adc
and
mov
lret
inc
mov
bound
stos
xor
inc
mov
data16
add
add
xchg
and
je
out
mov
outsl
cmp
loop
iret
add
add
add
call
mov
cli
sahf
and
mov
or
pop
repz
cwtl
add
arpl
sub
test
insb
xchg
mov
sbb
mov
int3
mov
jb
adc
lds
add
hlt
push
and
hlt
data16
out
sbb
push
sub
test
push
insl
test
inc
movsl
ret
fildl
popf
pop
repz
mov
hlt
adcl
xorb
hlt
sahf
sbb
in
pop
or
js
push
sbb
xchg
hlt
and
adc
pop
ds
sbb
in
and
cwtl
pop
inc
and
xor
xor
fsin
jno
sub
jne
jp
lods
loope
pop
inc
push
popf
jle
xchg
mov
lods
add
ffreep
xor
jecxz
and
and
cmpsb
and
dec
lods
adc
les
inc
sbb
mov
lods
sahf
cli
cmp
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
push
xor
push
rolb
add
add
add
mov
adc
push
aam
idivl
adc
cwtl
bound
dec
bound
mov
push
sub
push
dec
jnp
stos
fsubr
xchg
enter
lret
jmp
movsb
les
mov
add
xor
mov
jb
fcmovnb
nop
insb
repz
sbbl
pusha
out
jge
sbb
ret
sbb
dec
outsl
push
inc
out
xor
dec
xchg
mov
out
rcl
test
cmp
mov
pop
cli
adc
xor
pop
mov
adc
cs
pop
cld
mov
mov
iret
jle
jecxz
pop
lcall
movsb
or
test
imul
pop
xchg
fwait
mull
mov
outsl
xor
sub
addl
int
mov
sbb
fwait
call
out
lahf
ret
or
push
inc
int3
roll
add
add
iret
out
jl
mov
adc
xchg
iret
add
jg
cld
fs
sbb
lret
jns
insb
mov
jmp
sub
jecxz
outsl
adcb
fsubl
and
xchg
sub
xchg
sub
pop
das
js
clc
repnz
iret
icebp
pop
js
inc
mov
mov
pop
ret
mov
sub
mov
in
outsb
aam
cmpsb
cld
mov
test
and
dec
mov
mov
adc
adc
jmp
sbb
mov
add
push
movsb
je
dec
adc
or
orl
popa
and
js
sbb
filds
mov
mov
and
dec
dec
adc
arpl
jb
inc
in
inc
xor
jmp
mov
cli
sub
xchg
mov
mov
push
ret
cmp
sbb
mov
push
and
sub
test
roll
add
add
neg
outsl
push
xchg
or
rolb
add
add
gs
mov
mov
imul
or
aaa
data16
out
mov
cmc
cltd
and
add
and
lret
cli
les
sbb
add
lds
adc
dec
push
jle
jp
mov
mul
adc
lock
cmp
push
outsl
inc
jnp
lock
insl
adc
xlat
ror
jg
jecxz
popa
lea
cld
inc
test
adc
add
fcompl
adc
mov
or
ljmp
ljmp
jle
sbb
xlat
das
mov
bound
lock
xchg
js
andb
push
lcall
jecxz
iret
aad
outsl
imul
cltd
push
xor
xor
icebp
jmp
xchg
add
sub
adc
mov
ja
xchg
fiadds
sub
cmp
fsubrl
cld
push
push
es
fdivp
lahf
in
adc
enter
adc
shlb
adc
mov
dec
testb
add
xor
add
sbb
sub
dec
cmpsb
shrl
add
add
or
sbb
push
int
pushf
pop
lock
aad
out
pop
std
aaa
scas
sub
icebp
inc
sahf
push
pop
jnp
mov
adc
popa
dec
icebp
dec
add
or
pop
inc
repz
cmpsb
jb
inc
jb
lret
ss
adc
dec
inc
shrl
loope
sub
xchg
sbb
push
jl
subb
adc
pop
pop
xchg
pop
pop
xchg
es
ret
jae
int
ficompl
int3
pop
outsb
cwtl
pop
aas
leave
hlt
or
pop
mov
add
outsl
pop
cmp
iret
xor
xchg
mov
arpl
mov
push
filds
jmp
adc
cmp
mulb
popf
or
pop
mov
lods
mov
push
jnp
cwtl
sub
stc
es
push
repz
pop
mov
imulb
bound
push
repz
cmp
push
mov
pop
repz
add
add
ds
jae
imul
fcom
add
add
add
cmc
mov
adc
cmp
add
sbb
lea
or
repz
sub
xchg
adc
mov
or
and
mov
xlat
mov
pop
pop
movsb
adc
xlat
pop
pop
dec
movsl
dec
dec
xchg
imul
mov
subl
repz
mov
cmp
aas
xchg
xchg
ss
mov
mov
xlat
loop
sub
ljmp
jecxz
sub
jecxz
orb
add
or
roll
inc
or
dec
cli
sbb
mov
mov
iret
lods
sbb
test
aaa
cmpl
int3
fmull
out
jmp
test
add
sar
insl
ret
in
dec
enter
test
cs
lock
push
daa
mov
movsb
xor
pushf
fcomps
xor
aaa
clc
popl
sbbb
xchg
sbb
and
es
push
stos
mov
scas
xchg
and
idiv
lahf
insl
mov
lods
mov
add
add
subb
popf
pushf
dec
mov
inc
loopne
add
movl
and
adc
xchg
sub
sub
inc
mov
das
data16
pop
pop
rorl
jp
cmpsl
mov
fisubs
jno
iret
xchg
mov
fcom
mov
pop
mov
mov
mov
loopne
xchg
push
mov
repnz
mov
insb
and
aaa
lcall
and
fistpl
xchg
rcll
push
aad
mov
xchg
pop
push
cmp
fsts
stos
mov
sbb
mov
push
jmp
rcll
mov
jb
in
jns
sti
stc
adc
pop
insl
push
pop
cmp
jp
sub
inc
sub
movsb
xor
ljmp
xor
imul
fstpt
jl
inc
sub
add
xchg
ja
push
jg
leave
or
mov
or
add
add
add
out
test
xlat
stc
inc
loop
jp
pop
sti
push
stc
lret
sti
dec
mov
pop
lods
fsubrs
sub
pop
push
and
jbe
add
add
dec
ljmp
adc
mov
pop
icebp
adc
iret
scas
or
popf
adcl
xchg
arpl
clc
mov
fidivrl
sub
imul
xchg
mov
cmp
lods
enter
cltd
push
pop
adc
jl
dec
fwait
or
fldt
enter
xchg
orl
addr16
pop
and
pop
out
pop
and
inc
dec
xor
dec
push
mov
insb
fmull
nop
sbb
jbe
cmpsl
bound
lahf
mov
sbb
je
fstpl
ret
imul
stos
sbb
xor
pop
xchg
daa
inc
mov
inc
test
iret
inc
into
inc
jne
arpl
int3
pop
cwtl
push
leave
shl
fldt
add
int
out
out
imul
nop
xchg
movsb
add
xlat
add
add
add
mov
das
arpl
inc
addl
arpl
fcom
ds
xchg
mov
test
outsb
push
mov
sbb
sbb
popa
out
xor
adc
dec
jno
sbbl
mov
sbb
aam
xor
mov
xchg
scas
inc
inc
sub
mov
jno
daa
and
daa
orb
loopne
int
aaa
pop
or
imul
sti
scas
sbb
sub
dec
sbb
movsl
and
xchg
pop
hlt
fnstsw
popa
in
cmpsb
and
into
stos
sub
cmp
jb
call
lods
push
mov
push
jmp
mov
ljmp
jns
cmpsb
fisttpl
es
xor
ficompl
and
and
pop
pop
lahf
stos
js
stos
inc
mov
jbe
pop
and
lock
jg
out
repz
lods
mov
add
cmc
mov
xor
ljmp
add
add
psubusw
push
in
sub
jno
fadds
add
add
sub
insl
add
xor
testb
sub
adc
repnz
pshufw
ret
mov
push
outsl
pop
shll
maskmovq
notl
out
je
jnp
lret
popf
jl
mov
int3
int3
add
sub
dec
fwait
pop
dec
stos
add
outsb
push
dec
pop
enter
and
add
repz
rcrb
mov
mov
add
xor
shrb
pop
fcoml
add
test
f2xm1
inc
jp
cmp
mov
push
adc
aad
je
icebp
dec
pop
pop
mov
inc
ljmp
xchg
xchg
mov
add
push
jp
repz
fbstp
pop
rcrl
push
adc
mov
inc
cmpsb
pop
and
push
imul
popf
push
sarb
sti
lds
xor
lret
movsb
jle
xchg
dec
decb
jmp
cmpb
pop
sub
jns
mov
push
push
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
icebp
shr
flds
add
add
adc
inc
xchg
xchg
mov
jae
xor
xchg
test
ret
jg
fistpl
mov
daa
xor
rol
dec
dec
js
cs
pop
cmp
fnstenv
and
and
test
mov
pushf
sub
sbb
inc
mov
scas
or
mov
in
andb
fs
dec
jns
pop
loop
test
xchg
push
sbb
fiaddl
cmp
or
mov
insl
lahf
xor
xlat
and
cmpsl
adc
ja
jge
push
mov
and
mov
pop
jns
out
jb
or
test
adc
out
inc
cmp
xor
bnd
mov
loope
mov
popa
jle
out
lock
js
dec
adc
inc
mov
jae
lock
decl
jge
mov
jb
push
dec
inc
data16
fbld
mov
push
sarl
outsl
sbb
pop
dec
jle
jg
std
fstpt
xlat
ret
fiaddl
add
add
mov
lahf
mov
loopne
jne
repnz
xor
int
adc
lret
bound
das
aam
xchg
cmp
xor
sbb
mov
sub
repz
imul
mov
icebp
fstpt
cmp
js
push
jl
xorl
jmp
mov
addr16
imulb
cli
scas
cmp
rcrl
orb
jecxz
outsl
leave
lret
cmpsl
adc
ret
repnz
mov
sub
cli
xchg
cmp
in
adc
jnp
and
pop
mov
mov
cmp
lea
cwtl
mulb
cmpsl
scas
fwait
sub
jnp
jp
or
in
dec
add
xchg
mov
dec
arpl
push
mov
lret
ret
faddl
push
xor
xor
mov
mov
fistl
dec
adc
out
dec
dec
out
jl
repnz
or
aas
lea
add
add
mov
sti
idiv
lods
pop
sbb
das
mov
add
add
add
jge
sub
push
push
stos
daa
pop
out
ja
mov
dec
adc
jno
mov
jb
pop
adc
xchg
mov
or
xor
sub
inc
jecxz
sub
mov
imul
jbe
scas
out
es
inc
or
jo
or
cs
cltd
adc
mov
mov
stos
jg
lret
imul
repz
cmc
jmp
dec
jge
inc
pushl
mov
mov
cmp
xor
sub
scas
nop
lea
jb
mov
stc
xor
mov
aas
das
adc
loopne
out
es
loopne
xor
aam
cmp
pop
sbb
shll
mov
bound
lret
adc
cs
mov
cwtl
and
xchg
movsb
in
dec
adcl
mov
jbe
sahf
pop
push
cmp
mov
add
add
sbb
jmp
scas
inc
call
clc
faddl
add
add
mov
nop
lods
mov
neg
and
sti
call
js
inc
fldt
cmp
jmp
movsl
fldcw
dec
add
sub
sub
hlt
jmp
dec
in
mov
adc
scas
mov
lahf
jne
cmp
rclb
sub
testb
mov
push
fwait
inc
orb
dec
loop
lds
dec
sub
pop
imul
jns
outsl
lcall
and
jb
aad
std
mov
loope
jecxz
scas
and
inc
scas
outsb
rcl
cmp
out
mov
push
sub
loopne
lret
into
outsl
jae
sub
xor
mov
push
mov
inc
fistpll
sbb
js
push
or
push
push
pop
and
les
jae
pop
push
jae
push
mov
decb
pop
jb
pop
ret
add
dec
sbb
dec
mov
mov
inc
mov
jl
fcomi
cmpsl
fimull
faddl
mulb
cld
fldl
add
add
pop
add
sub
in
sub
xchg
ret
into
fnsave
lea
ret
aad
push
int3
mov
push
sbb
sti
cmovbe
subb
inc
lock
in
jne
fdivrl
push
push
les
xor
add
fildll
insl
subb
sub
pop
mov
aas
fldcw
enter
and
lret
test
outsb
int3
inc
ja
mov
or
pop
xchg
pop
cmp
jno
pop
out
and
ret
insl
mov
lret
xchg
rcrb
pop
into
jne
outsb
sbb
xor
insb
aam
jo
das
insl
xor
addl
xor
adc
stos
mov
loope
rclb
jbe
add
pop
cli
or
or
jmp
push
xchg
aas
je
outsb
inc
ja
push
idivl
roll
popf
mov
mov
js
or
sbb
imul
add
add
mov
lcall
fisttps
or
add
add
add
add
daa
les
pop
ret
cli
jne
xor
push
bound
call
imul
shll
xchg
std
mov
inc
cmp
outsl
dec
aas
out
testl
out
xchg
jmp
push
clc
inc
dec
lret
mov
popf
notb
outsb
sub
dec
loopne
jae
fs
popf
addr16
test
mov
pop
jnp
push
shl
and
lock
sub
std
pop
dec
xor
int3
test
popa
mov
cvtps2pd
adc
inc
fsubrl
orl
outsb
orl
lds
rol
aaa
fdivs
gs
dec
into
out
or
addr16
add
pop
les
lock
out
inc
mov
push
dec
dec
in
jno
sbb
cmpsl
das
outsb
sbbl
adc
aam
loop
push
lret
add
pop
cmp
inc
xchg
fwait
gs
mov
xchg
movsb
pusha
negb
pop
movb
add
add
mov
jns
xchg
xchg
mov
cmp
xchg
add
add
add
push
or
sbb
pop
paddw
jge
inc
lcall
in
cmp
push
sahf
mov
aad
add
pop
imul
pop
gs
sbb
cs
lds
testl
lock
dec
mov
fimull
xchg
jo
jbe
dec
les
js
popa
ret
les
pusha
push
jnp
inc
mov
nop
jge
adc
xchg
outsb
sub
dec
dec
xor
inc
inc
cmp
adc
push
nop
push
or
fimull
ljmp
lcall
sub
xchg
out
dec
enter
cmpsl
or
push
inc
imul
outsb
xor
jl
fcmovbe
sbb
adc
insl
jae
push
or
pop
mov
repnz
out
sbb
and
xchg
daa
push
mov
nop
mov
cli
fcomi
dec
mov
dec
addr16
cmp
arpl
jl
xor
add
add
fadd
fsubp
jnp
or
cld
les
enter
add
add
add
movsb
rcrb
mov
mov
jge
push
repnz
inc
rcrl
outsl
or
adc
sbb
aaa
test
pop
nop
and
xchg
xchg
and
adc
insl
das
cmp
arpl
dec
mov
add
and
cld
pusha
push
adc
sbb
mov
fwait
sub
pop
add
xor
out
xchg
sbb
fldpi
jp
adc
and
push
cs
cltd
cs
jo
lcall
shlb
rcrb
lcall
jp
add
push
iret
or
imul
lods
js
mov
fwait
xchg
or
mov
add
js
pop
fidivrl
push
cmp
xchg
into
mov
mov
push
jge
pop
or
and
xchg
cmp
and
or
or
xchg
jb
sub
not
cmc
les
test
jo
ret
xchg
sub
push
cmp
sub
cld
cli
jle
dec
nop
xor
loop
add
add
jmp
ret
nop
stos
mov
rorl
mov
shrb
loopne
lods
jge
hlt
cmp
cmp
popf
xor
cmpsl
mov
mov
pop
cs
dec
mov
jo
push
cmp
loope
and
rep
mov
lcall
mov
jle
aam
jae
jns
pop
xchg
push
gs
mov
ss
sub
sbb
mov
inc
xor
mov
scas
test
cmc
stc
and
not
adc
or
cmp
sub
jg
adc
stc
mov
stos
pop
push
dec
cmp
push
xor
paddq
cmp
dec
outsb
insb
cltd
imul
jbe
inc
pushf
mov
xor
popa
ja
lea
xor
inc
inc
inc
lock
imul
loopne
add
pop
adc
mov
repnz
add
add
ja
sti
aaa
out
ja
sub
adc
add
add
add
pop
aas
sbb
setge
addb
ljmp
pop
lret
cmpsb
sub
dec
fidivl
push
movsl
sbb
xor
das
testb
pop
sbb
sti
rcr
or
fnstsw
jne
in
stos
clc
mov
fsubs
data16
jns
scas
xchg
jb
shl
sbb
dec
subl
inc
rorb
mov
add
and
lahf
jg
dec
rorl
mov
cmp
xchg
mov
jle
inc
cmpsl
jae
sbb
or
push
daa
xchg
sbb
cltd
sbb
ror
fwait
sub
push
adc
mov
icebp
je
cmp
jle
in
outsl
js
lea
movsb
out
lds
adc
push
scas
arpl
fidivl
xor
lods
sbb
out
rcrb
xchg
push
aad
cmp
addb
clc
enter
sbb
jmp
xor
or
mov
add
into
arpl
pop
xchg
aaa
pushf
mov
in
add
add
fiaddl
sbb
pop
fisttpll
cmp
xorb
addb
mov
jo
add
mov
lods
repnz
ret
cmpl
arpl
das
clc
jg
fxch
icebp
sahf
mov
sahf
dec
sub
jp
test
je
jns
cs
insb
add
pop
faddl
and
out
mov
mov
pop
dec
push
and
pop
aas
adc
cmpsl
insb
xlat
dec
mov
js
xchg
add
test
dec
or
mov
pop
ror
pop
iret
sbb
lock
aaa
jns
jns
outsb
call
je
mov
pop
pop
add
push
sbb
mov
add
enter
out
mov
into
daa
fsubrl
dec
movsl
jo
sub
jge
fdivr
scas
outsl
test
mov
inc
xchg
mov
loopne
jp
add
and
jmp
cmp
ret
mov
subl
movsl
cltd
cmc
adcb
fcos
pop
mov
das
sbb
add
add
add
leave
push
fstpl
pop
adc
cmpsl
bound
mov
pop
add
lds
test
sahf
or
int3
lods
ret
shl
lods
mov
outsl
movsl
stos
inc
outsl
mov
ds
icebp
pop
inc
popf
mov
add
adc
cli
pusha
aas
mov
sub
fwait
pop
fcmovu
add
aad
mov
and
rcl
test
hlt
lahf
mov
insl
sahf
mov
jge
adc
test
adc
sbb
ficomps
loopne
cmp
sub
mov
or
and
stc
jmp
fisttps
ljmp
lahf
stos
inc
scas
mov
mov
inc
shl
loope
dec
imul
lret
loop
int
push
leave
das
inc
sbb
push
dec
add
inc
es
rcll
ljmp
call
xor
pushf
cmp
sbb
adc
jle
mov
add
add
add
add
lock
jg
in
and
test
adc
out
add
add
mov
push
dec
scas
mov
xchg
mov
in
mov
cmp
rol
and
aas
cmp
fbstp
mov
push
dec
test
add
std
sbb
ret
cs
dec
dec
or
dec
mov
mov
out
xchg
daa
xor
mov
loop
mov
lret
popa
or
add
jge
add
push
inc
pushf
or
rorl
aad
push
xor
dec
popa
out
mov
adc
cwtl
gs
mov
enter
add
and
add
fs
ret
push
sub
mov
out
aam
mov
dec
pop
push
xlat
stc
cmp
mov
in
jle
or
mov
sahf
push
pop
add
ljmp
imul
aaa
sbb
imul
out
aad
std
pushf
jl
mov
sbb
mov
clc
das
lds
and
call
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
xor
inc
and
add
add
add
shl
popa
xchg
lea
mov
popa
push
pushf
lahf
mov
imul
test
inc
mov
aam
mov
out
jns
sub
mov
xor
and
stos
add
lcall
mov
inc
jns
fisttpll
mov
mov
int3
lcall
pop
push
xchg
push
and
jnp
push
jbe
outsb
out
mov
add
push
outsl
pop
aam
sahf
jl
xor
jl
dec
push
or
ret
subl
dec
pop
mov
sbb
cmp
jmp
cli
loope
add
pusha
mov
ret
out
sbbl
xor
push
inc
pop
dec
mov
dec
sbb
jge
sub
pop
xlat
adc
mov
in
ds
ja
mulb
jnp
ret
mov
in
sahf
jge
inc
add
shrb
inc
outsl
dec
xor
stc
mov
dec
js
stc
mov
dec
int
scas
lcall
add
add
push
imul
cli
pop
loopne
and
adc
mov
orl
jmp
xor
icebp
cs
cmp
pop
dec
mov
rol
or
inc
gs
jmp
xchg
mov
in
or
ljmp
into
aaa
xor
cmc
or
sub
and
mov
in
cltd
incl
xchg
int
jecxz
data16
sub
loop
xor
lods
pusha
ja
adc
outsb
push
jnp
add
enter
mov
lds
pop
sub
mov
and
jmp
pushf
movsb
shlb
setne
out
aam
std
add
popf
pop
mov
cmp
stos
sub
xchg
inc
cmp
push
ja
xlat
dec
pop
mov
and
js
rcl
data16
rclb
pop
ret
push
cmp
movsl
sbb
sbb
pop
lock
jne
add
add
insl
repz
fwait
jns
jns
mov
sub
add
add
add
mov
adc
popf
out
mov
stc
sub
mov
push
cwtl
inc
sub
push
push
es
xchg
jle
leave
aaa
pop
lahf
cmp
adc
dec
cmpsl
pushl
idivb
mov
aaa
repz
xchg
mov
inc
stc
cmp
sbb
inc
xor
dec
mov
in
data16
pop
or
negl
movsl
jbe
lock
and
fisubs
mov
aad
lods
xchg
xchg
fimull
into
dec
xchg
sbbl
xor
mov
cld
popf
fnsave
fwait
or
and
mov
bound
scas
cmpsb
or
cmpsb
int3
dec
sub
add
sbb
cld
ss
and
xchg
cmp
jnp
mov
cmpsl
mov
or
cltd
xchg
push
out
cltd
mov
or
test
jno
fildll
lea
cmp
jnp
adc
jne
cli
jo
int3
sub
add
add
add
inc
pop
add
dec
dec
les
les
or
adc
int3
mov
xchg
gs
jge
outsl
jns
jno
inc
daa
adc
out
das
mov
mov
out
lret
inc
jge
sub
out
in
mov
repnz
adc
pop
cmpsl
loop
ss
xor
jmp
in
in
fwait
arpl
inc
and
mov
into
dec
int3
sbb
fldl
ljmp
ljmp
loopne
sbb
pop
bound
cmp
jns
sub
subl
aaa
xorl
les
dec
aaa
les
jnp
dec
loope
cs
xchg
inc
out
sub
and
js
push
cmpsl
or
pop
sbb
hlt
into
popa
lock
pop
call
sub
daa
jnp
add
scas
sbb
ljmp
inc
mov
dec
loop
fcomi
shll
xchg
sbb
pushf
jle
out
lods
xor
aas
xlat
fistl
das
inc
lods
popf
mov
jmp
add
add
jnp
aas
arpl
mov
cli
mov
mov
push
popf
out
inc
cmp
xor
into
js
mov
sub
loop
sbb
dec
sbb
ret
int3
jnp
mov
jmp
jg
loope
adc
lea
push
sbb
lods
lock
icebp
sub
mov
pop
sbb
and
dec
andl
jno
lea
jnp
cs
bound
cld
rcrl
fstpt
inc
push
pop
mov
ja
int
push
pop
mov
mov
add
stos
push
jae
and
dec
or
sub
aam
pop
gs
std
rcrb
rcrl
cmp
mov
sbb
push
and
fisubs
fdivrs
sbb
lret
xchg
xor
pusha
and
cs
pop
aaa
das
xchg
icebp
sub
add
mov
sbb
inc
lret
pop
sahf
mov
sub
jp
mov
sbb
call
add
jb
scas
decb
fisttps
mov
add
add
add
dec
jno
test
pop
add
sub
ret
in
inc
inc
xor
xlat
addb
mov
sahf
mov
mov
pop
cmp
icebp
add
pop
add
mov
jg
les
cld
sbb
clc
mov
fadd
cmpsb
cltd
adc
sbb
repz
cmp
mov
push
movsl
sbb
dec
add
imul
jae
mov
push
mov
pop
sti
and
adc
pop
in
and
inc
dec
psubq
push
andb
test
xor
call
leave
xchg
sti
mov
stos
jns
shl
repnz
push
mov
jmp
adc
cmp
movsb
lea
dec
div
int3
and
shrb
enter
iret
ds
lret
sti
or
fwait
mov
xlat
fisttpl
shrb
adc
mov
xlat
mov
xchg
loop
dec
icebp
cmp
add
add
add
dec
shll
ja
fbstp
clc
mov
lcall
dec
fdivrl
mov
dec
add
xchg
mov
stc
xchg
lret
and
xchg
sbb
mov
push
cmp
lods
sbb
sbb
xchg
fldcw
sbb
or
fistps
out
sub
push
mov
inc
rorb
or
ret
dec
lret
jb
ljmp
andl
ficompl
xchg
dec
sbb
movsl
pop
rorb
inc
pop
push
inc
inc
push
daa
adc
pop
fwait
outsb
lds
mov
nop
mov
cli
inc
rolb
cmp
hlt
or
sbb
sub
inc
pop
push
pop
cmpsb
pop
pop
mov
mov
rcl
cmp
xchg
sbb
and
mov
xchg
jle
pop
mov
mov
or
sub
outsb
jmp
fiadds
xchg
je
add
add
mov
aas
mov
mov
cmp
add
add
add
testl
inc
add
dec
xchg
data16
jne
pusha
pop
add
cmp
pop
push
jmp
mov
and
insb
call
pop
mov
jecxz
pop
mov
fmulp
sub
mov
jp
fs
rcrl
xchg
mov
repz
add
adc
iret
pmulhw
stos
fisubs
mov
cld
mov
jae
sbb
int
xchg
pop
mov
in
mov
pop
pop
inc
push
add
test
loop
dec
sbb
ja
scas
stos
xchg
push
xor
adc
popa
jl
jp
jb
mov
lret
popf
icebp
scas
mov
icebp
mov
fimull
cmp
aad
mov
or
jno
mov
or
inc
dec
xor
lcall
inc
ja
lea
daa
cmp
out
mov
movsl
lcall
sbb
jb
sub
add
add
mov
sti
mov
jl
and
add
add
mov
mov
pop
cmp
addl
arpl
push
jmp
add
pop
test
mov
imul
inc
enter
out
repz
pop
push
gs
cld
int3
xchg
jmp
push
lds
xchg
xlat
icebp
lods
mov
xchg
pop
jmp
out
sbb
gs
bound
cmp
sub
pop
dec
jmp
iret
dec
shrl
rcrb
jne
mov
and
into
lahf
lret
cmp
roll
mov
mov
xchg
pop
or
notb
pop
ret
or
outsb
imul
mov
inc
lds
dec
fwait
pop
cli
push
pop
or
lds
mov
subl
pop
jg
test
push
add
mov
addl
adc
cmpsb
cmpsl
mov
aas
sbb
xor
push
cmp
adc
neg
jge
xchg
jns
cmpsl
adc
add
add
inc
fisubl
inc
pushfw
ss
cli
xorb
jbe
jns
hlt
dec
es
jl
jmp
add
jo
xchg
sbb
mov
pusha
add
aaa
jmp
dec
mov
frstor
push
pop
movsb
adcl
xchg
push
mov
lea
inc
dec
ret
sti
stos
pop
mov
test
and
daa
ret
adc
mov
or
cmpsb
stc
or
pushf
sbb
pusha
or
xor
sbb
cmp
cmp
xchg
push
fdiv
jo
mov
dec
test
out
cmp
or
nop
jg
jno
ljmp
lea
into
add
jae
or
adc
stos
push
ficompl
jl
add
nop
inc
sub
stos
dec
inc
mov
or
jnp
fcom
std
dec
ljmp
cmp
sub
imul
xor
add
add
dec
sub
sub
mov
cmp
add
add
push
fcoms
out
movsl
sarl
mov
adcb
pop
ficompl
and
add
cmp
xor
or
lods
aaa
jnp
dec
rcll
lcallw
mov
sub
xchg
fadds
mov
xchg
adc
add
out
sbb
rolb
test
xor
jo
movsl
in
pop
jo
adc
shl
dec
mov
fstpl
and
or
out
ror
inc
xchg
mov
mov
sti
pop
loop
stos
mov
out
fstl
popl
mov
sbb
loopne
mov
push
fidivs
shl
add
mov
cmpsl
push
imul
inc
imulb
sub
jp
mov
sahf
scas
mov
adc
dec
adc
adc
lods
ficoms
or
icebp
cmp
aam
clc
or
outsl
adc
lret
cld
mov
leave
cmpsb
add
add
add
ja
and
aaa
divl
rorl
add
add
cmp
adc
iret
push
cmpsl
and
shlb
insb
mov
in
mov
in
js
cmc
sbb
inc
mov
mov
in
incb
sub
mov
dec
rolb
fldl
aam
dec
aad
xor
xchg
add
or
jge
cmp
jbe
push
mov
sub
rorl
int
test
enter
mov
hlt
or
dec
out
mov
jge
inc
fistpll
cmp
sbb
enter
aas
stos
mov
push
and
addr16
shl
mov
out
jo
jle
sbb
xor
lea
add
or
cmp
mov
iret
rol
xor
jmp
xor
lret
inc
cwtl
out
xchg
dec
mov
arpl
lret
ss
mov
mov
lock
dec
push
mov
sbbl
cmp
ljmp
add
in
xchg
jecxz
jmp
mov
xchg
xor
add
add
add
stc
imul
imul
idivl
movsl
out
pop
jmp
mov
aad
ljmp
mov
xor
fldl
pop
or
cmp
or
lret
out
pop
stos
pop
scas
mov
cmpsb
shrl
ds
inc
leave
jae
adc
in
or
dec
sbb
mov
push
dec
xchg
mov
out
sahf
mov
inc
sub
sti
pop
lock
addb
aas
scas
mov
addr16
jg
sub
jnp
outsl
enter
pop
lods
mov
xchg
jno
aad
mov
mov
stos
push
jmp
mov
gs
into
notb
mov
mov
loope
out
sub
sub
adc
mov
cmp
sbb
out
pusha
inc
jo
mov
push
jmp
in
xchg
lret
subl
mov
daa
jp
mov
add
add
jne
pusha
popf
pop
addl
hlt
add
add
add
mov
dec
sbb
xor
mov
mov
push
adc
lret
pushf
popa
test
xlat
mov
mov
push
add
push
div
mov
push
mov
xor
inc
es
pop
je
and
jbe
call
fcmove
lods
out
sbb
enter
rcrb
inc
xorb
outsb
xor
inc
sbb
mov
inc
sahf
int
xchg
std
ret
inc
jb,pn
cmpsl
mov
jp
push
fwait
rcrl
dec
pop
lret
jo
adc
or
xor
cmpsl
jnp
test
dec
je
xchg
xor
adc
push
cmp
adc
sbb
xchg
test
inc
lock
mov
jbe
shll
push
nop
or
test
aad
sbb
add
cwtl
add
vpor
xor
call
aaa
cmp
mov
cmp
outsb
sub
scas
fdivr
fnstcw
jecxz
test
pop
cmc
add
add
add
mov
out
inc
imul
arpl
loop
adc
jl
test
sahf
xor
push
mov
mov
outsl
sbb
arpl
adc
add
daa
sbb
xor
and
stos
xchg
inc
leave
add
mov
push
pop
movsl
pop
testb
imul
shl
xchg
push
movsl
mov
fists
scas
aad
test
mov
pop
das
adc
adcb
jbe
ret
cltd
scas
aas
cmp
sbb
and
cmp
lods
stos
mov
outsl
in
dec
icebp
mov
outsl
adc
mov
loopne
push
mov
ds
xor
mov
pop
pop
sbb
clc
mov
arpl
sub
jecxz
imul
mov
fdivr
clc
add
adc
add
popa
cmpb
xor
dec
mov
pop
rcrl
cmp
adc
gs
ret
add
xor
jb
jae
push
jno
xchg
add
add
jno
scas
fcompl
lds
ds
fcmovnb
fucomip
call
pop
insl
push
inc
mov
mov
xor
aad
js
or
xor
cmp
mov
inc
lods
rclb
loope
scas
dec
pop
mov
insl
jle
jb
insl
ret
sub
pop
out
data16
adc
add
mulb
inc
sub
lcall
adc
repnz
mov
adc
push
test
orl
jno
aam
imul
cli
pop
adc
shrb
sub
cmp
sbb
sub
sub
add
pop
inc
or
sar
pop
cmp
cmp
hlt
inc
or
pop
icebp
in
ret
in
lret
and
pop
flds
fucomp
subb
rorl
mov
add
daa
loop
dec
mov
js
stc
jbe
xchg
pop
dec
or
es
nop
rolb
jl
jecxz
mov
std
sbb
lret
cmpsb
adc
int
in
idivl
js
mov
jnp
lret
mov
testl
add
dec
das
mov
icebp
out
and
int3
stos
mov
add
sub
outsb
in
int3
mov
fdivl
and
xlat
push
inc
xor
ror
aaa
sbb
clc
sub
xor
xchg
imul
mov
jbe
ds
cmp
loop
mov
sahf
pop
insl
fdivs
jecxz
sub
mov
sub
mov
out
jp
add
dec
lcall
dec
xchg
je
mov
add
xor
pop
sbb
icebp
add
into
lods
sub
pop
xchg
imul
cmp
rcll
cmp
out
cld
pop
add
negl
repz
push
dec
ja
rcrl
test
loop
xor
xchg
xor
jbe
or
push
jbe
and
inc
xor
loope
xchg
jmp
arpl
add
mov
jp
lds
cmp
gs
sbb
adc
xor
lods
fidivrl
pop
es
inc
cli
aas
into
lret
lods
stos
cmp
fs
add
add
add
lods
addr16
add
lods
scas
sub
loope
adc
pop
mov
flds
addr16
xor
add
mov
leave
pop
mov
sti
adc
inc
mov
fstl
mov
xchg
into
mov
ljmp
fistpll
pop
pusha
pop
cmp
fnstenv
xor
and
fmul
mov
subb
stc
cmp
arpl
pop
gs
sub
std
popa
xor
ret
lret
sub
mov
xchg
shll
adc
ja
sub
loopne
mov
push
fdivr
notb
push
out
popa
sub
andb
fimull
pop
mov
into
test
and
pop
mov
cmp
or
ljmp
lcall
call
pop
js
pop
lret
sub
outsl
sbb
xchg
loop
mov
cmc
pop
xor
add
mov
lcall
jbe
stos
xchg
add
add
add
fisttps
lcall
test
dec
cmp
leave
pop
jns
push
xchg
leave
add
test
je
lock
push
xchg
lret
inc
pop
leave
sub
outsl
std
fnstenv
jb
lock
dec
ret
cmp
enter
cmp
cmp
pop
in
aam
mov
mov
lret
sbb
xlat
fildl
adc
leave
xchg
mov
test
pop
fstps
sub
inc
push
cltd
add
mov
rclb
es
adc
xchg
std
inc
sarl
jl
adc
aad
jbe
adc
xchg
mov
jne
scas
in
movl
push
leave
sti
scas
push
push
fmull
movsl
adc
data16
mov
stos
lds
inc
mov
out
fwait
pop
sub
int3
and
int3
movsl
imul
inc
adc
loope
popa
data16
sarl
aaa
jae
cltd
dec
mov
jno
push
cli
add
add
add
sbb
xchg
pushf
pop
bt
jae
jecxz
cli
test
jl
add
or
push
roll
pusha
jp
jno
mov
dec
mov
mov
fisubl
mov
adc
jmp
fwait
aam
add
push
scas
cmp
ja
imul
xchg
and
fs
sbb
adc
dec
sub
and
stos
fistpl
dec
jnp
xor
jno
cli
push
cld
test
scas
sub
push
int
push
add
lds
sbb
incl
sub
popa
inc
mov
imul
jno
rorl
inc
fcmove
popa
xchg
mov
pop
lock
mov
ja
or
cld
adc
in
mov
ss
jo
mov
jg
icebp
push
ja
mov
cmp
cld
adc
or
fcmovu
jns
popa
hlt
mov
add
stc
xor
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
sbb
sti
add
add
add
mov
hlt
bnd
aad
repnz
adc
pusha
leave
cwtl
jmp
push
lcall
xchg
and
sub
in
insb
cs
push
movsl
fdivrl
pusha
gs
or
and
jge
aam
in
fwait
rcrb
fsubl
mov
cmp
out
outsb
xchg
dec
outsb
fcmovnbe
out
stos
hlt
sbb
sbb
cli
add
or
mov
mov
mov
jae
or
add
jne
data16
jnp
imul
shll
xor
cmp
loopne
jle
xchg
arpl
mov
jo
xchg
in
mov
dec
xor
jnp
jp
mov
mov
imul
ror
cmp
push
imul
mov
mov
orb
pop
xchg
and
sub
adcl
aad
mov
shlb
jno
test
jg
push
pop
push
mov
je
add
add
add
and
lds
decb
mov
xor
in
cld
ljmp
xor
xor
mov
mov
or
sub
mov
add
loopne
dec
dec
rolb
adc
mov
adc
jecxz
mov
jge
sub
add
incb
adc
shll
scas
aam
dec
jb
ret
dec
push
or
xor
jecxz
inc
fistl
lods
rcrb
push
jno
dec
faddl
xchg
mov
push
add
out
adc
in
pop
fucomip
mov
in
lret
jno
sahf
and
dec
idivl
dec
adc
dec
insb
add
or
stos
and
loopne
bnd
enter
pop
adc
daa
loop
push
aad
mov
cwtl
jg
mov
fiadds
sbb
mov
lock
in
xor
mov
jecxz
sti
xchg
and
xorl
repnz
and
stc
mov
add
add
movsb
push
in
cmc
jne
sbb
js
divb
add
add
mov
aam
push
push
mov
mov
xorl
add
fimull
or
mov
fmul
mov
sbb
ret
or
push
arpl
loopne
pop
and
sbb
shr
sahf
jp
aaa
iret
xchg
es
and
xor
insb
cmpl
pusha
int
cmp
inc
cmpsb
insb
subl
cwtl
sbb
fcompl
sub
and
mov
push
sahf
dec
jecxz
cmp
bound
cli
iret
in
pop
sbb
stos
stos
fnstcw
dec
jge
mov
inc
mov
fdivrl
fnstenv
push
ljmp
out
mov
or
mov
mov
sahf
inc
test
ja
out
adc
and
mov
loop
out
movsb
jbe
jge
outsb
pop
mov
add
or
in
inc
push
mov
add
sbb
shlb
aas
out
int3
mov
int
negl
jl
add
add
add
pop
movsl
mov
sub
lcall
ror
insl
cmp
push
push
xlat
ret
xchg
fimull
ja
or
cmp
fwait
int
xor
test
sub
pop
in
cmp
pop
mov
cmp
pushf
jl
fiadds
test
sbb
rolb
mov
push
movsl
insb
push
inc
mov
mov
mov
jno
in
jns
ljmp
push
sub
inc
sarl
ficompl
shrl
sbb
xor
aad
and
out
nop
movaps
sbb
xlat
sarl
bound
nop
mov
jb
insb
lods
jno
pop
inc
jne
adc
inc
cwtl
out
dec
xchg
xchg
mov
ss
xchg
xor
jae
lcall
mov
or
fsubp
jg
insb
hlt
adc
repnz
mov
add
adc
push
sbbb
stos
cmp
test
ss
ss
cmpsb
loop
mov
pop
inc
into
mov
mov
out
dec
or
mov
and
jnp
addr16
add
add
out
pop
fnstenv
addr16
jns
fcompl
inc
xchg
mov
inc
cmpb
dec
mov
adc
lods
dec
stos
add
mov
scas
clc
add
and
xor
sbb
cmc
mov
testb
adcl
jl
test
push
xchg
aaa
xchg
imul
sbb
jl
and
loope
lret
test
shlb
aad
sarb
xchg
pop
pop
lock
aas
test
inc
mov
mov
pop
pushf
add
fcoms
repnz
sbbb
xor
xor
inc
or
xor
xchg
dec
loope
jge
gs
ret
mov
dec
stos
mov
aad
int3
push
les
jl
sarl
ljmp
scas
mov
ret
adc
pop
in
mov
xlat
cmp
mov
sub
dec
lds
mov
imulb
aad
addr16
dec
and
add
add
ret
bnd
cmc
inc
stos
rep
pop
loopne
test
add
add
add
out
test
mov
int
cmpb
loop
test
pop
or
sar
jae
std
push
loopne
sti
cli
std
mov
aam
pushl
mov
xchg
push
mov
cmp
rcl
movsl
out
sbb
mov
fcmovnbe
xchg
scas
je
and
or
scas
pop
int3
push
add
push
xchg
push
mov
das
sub
pop
mov
add
mov
jnp
lret
iret
ret
sub
sub
fdivs
ss
mov
lods
dec
xor
jg
pop
imul
outsl
ret
ror
js
bswap
mov
rol
std
adc
mov
lock
xor
int
mov
add
inc
sahf
scas
xor
mov
pop
push
jno
adc
das
mov
adc
lret
imul
bound
xchg
shll
add
or
test
dec
add
std
aaa
mov
shll
add
add
add
repnz
icebp
xor
cmp
leave
inc
rcrb
bound
jae
cld
mov
or
inc
jb
adc
adc
sete
jo
insl
mov
mov
in
inc
pop
into
cld
inc
es
outsb
and
sbb
sbb
scas
push
stos
int3
jae
xchg
xchg
xchg
mov
push
out
sub
fstpt
pop
inc
rcll
xchg
adc
push
add
pop
xchg
les
lock
mov
in
xchg
test
sbb
imul
mov
xchg
xchg
shlb
sbb
mov
mov
popa
imul
pop
sub
xor
clc
push
mov
icebp
mov
arpl
ja
inc
cmc
sbb
xchg
xor
negl
jge
jb
jne
pop
cmp
cmp
sahf
xchg
lds
push
in
add
outsb
aas
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
inc
add
ss
add
ss
add
ss
add
ss
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
xchg
into
ljmp
sub
int
call
add
jns
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
