push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
mov
add
xor
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
push
call
cmpl
jb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
jmp
lret
sbb
or
sub
mov
pop
addl
xor
je,pn
jo
mov
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
repnz
sar
ljmp
movl
int3
into
loopne
repz
mov
inc
xlat
dec
cld
and
roll
add
push
mov
push
jne
xchg
nop
and
sarb
stc
cmp
mov
dec
jae
mov
push
pop
add
adc
out
ret
add
in
xchg
repnz
repz
or
jno
adc
pushf
sub
mov
int
addl
flds
sti
jne
mov
xor
inc
in
sub
and
addr16
jb
mov
mov
or
out
dec
sub
and
aam
aaa
cmc
scas
lods
jbe
and
insb
sbb
and
es
xchg
pusha
dec
fwait
cld
je
mov
scas
sub
jge
lahf
inc
jnp
inc
jmp
fstpt
arpl
idiv
gs
lea
loopne
movsl
das
in
gs
es
mov
adcb
push
jl
jbe
xchg
xchg
movsl
insl
mov
fidivrl
in
pop
jmp
push
lds
pop
ss
mov
mov
xchg
pusha
popa
call
fcoms
jge
hlt
jns
mov
or
sarb
mov
in
fdivrl
loop
adc
mov
insl
and
pop
or
andnps
cmp
push
pop
aam
cmc
fcmovu
add
add
xor
movsl
mov
mov
pop
push
xchg
je
jp
out
mov
inc
and
stos
in
sti
xlat
jmp
and
fnstcw
inc
add
and
adc
scas
push
dec
ret
test
push
mov
lock
out
sbb
mov
not
mov
xor
lret
js
sbb
popa
xchg
btrl
idivb
js
jp
out
out
jl
push
mov
jmp
xchg
dec
and
scas
push
cmp
fwait
add
dec
xor
lods
std
jne
push
xchg
pop
jle
push
mov
push
mov
mov
mov
or
or
aad
aaa
jg
clc
mov
cld
xor
xor
lret
cmp
popa
mov
mov
mov
aad
mov
lds
mov
or
cli
dec
jmp
shlb
cmp
lcall
jnp
or
imul
xor
and
sub
fadds
subl
mov
mov
add
bound
jb
jae
popa
cs
fs
jle
int3
dec
mov
movsl
pop
cwtl
std
dec
jge
cmp
jo
ljmp
inc
loop
sub
dec
jns
pop
adc
mov
jle
sbb
jmp
imul
jle
push
sbb
cmp
repz
ljmp
sbb
jle
add
lret
mov
inc
int3
pop
mov
mov
icebp
cmp
add
ljmp
jae
data16
loope
jb
jecxz
lahf
mov
sbb
xor
jne
nop
iret
popa
pop
add
and
popf
inc
fdiv
mov
repnz
jmp
imul
and
jge
dec
or
xor
ret
sub
and
cmpsl
sti
das
sbb
gs
jae
inc
scas
aaa
and
sub
xchg
sub
mov
lock
imul
cmc
ss
inc
mov
mov
sub
dec
jle
shll
pushf
pop
or
scas
mov
and
ret
or
sub
loopne,pn
inc
xchg
jnp
push
sub
fistpl
lahf
pop
outsl
adc
add
cmp
sbb
mov
les
cmp
aas
fnsave
in
sub
fsubs
xchg
push
rol
sbb
vprotd
mov
lea
xchg
mov
push
rorl
movsb
mov
arpl
mov
cltd
add
mov
push
xor
dec
scas
xchg
in
cltd
sbb
loop
push
stos
mov
dec
and
cmp
js
mov
fcmovnb
mov
fdiv
and
imul
jne
inc
call
adc
add
fistl
or
inc
fsubs
lret
insl
shl
pop
sahf
daa
dec
xor
cs
incl
inc
movsb
pop
push
jp
and
jle
aam
sub
jmp
jo
mov
or
std
mov
and
neg
je
cmp
sub
jecxz
mov
xchg
or
adc
pop
arpl
jae
lea
loop
das
mov
push
adc
push
in
fstl
movsl
jge
cli
cmp
jno
rcrb
hlt
cmp
aam
mov
xor
fsubrl
popl
lea
ljmp
ljmp
loopne
pop
shll
sbb
insl
mov
sub
dec
int
xchg
cmp
mov
push
pop
in
insb
dec
lock
push
ds
and
or
jmp
cmp
repnz
inc
sbb
mov
xchg
out
notb
mov
inc
iret
repnz
add
push
arpl
addr16
in
xchg
dec
or
push
xchg
and
xchg
pop
dec
adc
ss
mov
inc
outsb
setg
or
lcall
dec
jbe
xchg
mov
nop
data16
xchg
push
adc
xchg
cltd
shl
and
inc
jnp
dec
push
jmp
or
daa
in
sub
adc
cmp
pop
mov
pop
push
and
pop
sbb
enter
mov
call
adc
jae
iret
icebp
push
lock
popf
mov
and
inc
lock
adc
ljmp
fcmovnb
sbb
movl
and
xor
mov
loopne
cmp
jp
inc
pop
mov
pop
insb
cmp
lods
xchg
iret
push
inc
add
and
ret
push
push
int3
call
insb
mov
pop
inc
ja
imul
out
xor
neg
std
pushf
mov
adc
mov
inc
call
cmpl
movsb
in
ret
lods
std
les
leave
scas
pop
into
push
mov
pusha
addr16
cmpsl
nop
inc
add
or
imul
jecxz
mov
rolb
or
mov
pop
pop
push
xor
popa
inc
ret
mov
push
sahf
jle
cmp
ljmp
aad
sbb
jo
xchg
mov
insl
nop
lea
xor
and
pop
jmp
js
in
jg
sbb
sti
das
movsl
fcomip
inc
out
and
xchg
mov
loop
jg
adc
adc
push
shrl
mov
inc
inc
fistps
cltd
sub
push
out
sub
lock
pop
sbb
hlt
jns
adcb
adc
push
pop
and
or
mov
jp
adc
mov
incb
fistpl
cli
lcall
idiv
or
mov
push
inc
dec
xchg
or
lahf
push
hlt
test
mov
mov
out
fst
pushf
lcall
mov
jb
mov
dec
jns
cltd
aaa
push
repnz
rcl
mov
int
xor
sub
clc
ret
and
mov
sub
push
movsl
jmp
int
aas
fwait
push
cwtl
iret
test
fwait
push
gs
test
in
lods
dec
imull
faddp
xchg
scas
xchg
adcl
sbbb
std
ljmp
mov
orb
cmp
pop
les
es
inc
sub
sub
xchg
lret
sub
je
jecxz
jecxz
pop
cwtl
fs
testb
mov
xchg
and
std
mov
sub
jo
fcoms
sub
jmp
aas
dec
cmp
mov
push
imul
pop
fisttpll
out
push
xchg
xchg
lret
lods
loop
filds
pop
push
rcrl
mov
into
pop
addr16
or
pop
inc
mov
mov
mov
xor
adc
cld
pushf
jns
mov
aad
jle
insl
jae
push
cmp
jns
iret
fmull
rcrb
add
inc
dec
imul
test
push
pop
sub
sbb
sahf
dec
test
mov
out
flds
mov
outsl
std
push
mov
or
rclb
push
adc
or
shrb
xchg
and
cwtl
cld
jp
jecxz
cs
pop
sub
roll
hlt
data16
ror
sbb
into
lods
stos
push
jnp
popa
outsl
scas
inc
daa
cmp
lahf
sbb
jg
push
cmp
add
js
aam
xchg
cmpsb
fnstcw
divb
aad
xchg
sbb
cmp
pushf
cmpsb
mov
pop
inc
pop
imul
es
cmc
add
les
adc
sbb
addr16
adc
hlt
les
mov
pop
and
or
mov
addr16
inc
fldln2
inc
and
outsb
mov
insb
mov
or
mov
jnp
pop
mov
mov
inc
mov
in
dec
jmp
shll
mov
arpl
push
cmp
jle
xlat
paddusb
les
daa
scas
mov
inc
jb
insl
mov
leave
cmp
or
xlat
jmp
stos
movsl
stos
outsb
sub
fstl
fcomps
dec
sub
push
shll
xchg
bound
imul
shlb
and
je
mov
std
jle
mov
les
sub
test
sbb
sub
jp
int
iret
movsb
dec
insb
out
scas
aam
jnp
mov
imul
cmp
or
sbb
shr
cmp
ret
ret
push
or
mov
pop
mov
insb
negb
mov
add
jns
xor
out
pop
push
rolb
jae
aam
mov
movsl
pop
sub
pop
jecxz
and
pusha
mov
lret
cmp
ljmp
xor
negl
out
add
jmp
fwait
push
jno
and
pop
das
les
push
xor
push
jnp
xor
pop
pop
jmp
test
xchg
insb
mov
lret
jmp
adcl
data16
push
add
jb
fdivrs
mov
sbb
cli
adc
shrb
push
pop
popa
sbb
xchg
stos
add
enter
sub
pop
ss
add
shl
mov
xchg
mov
xchg
loop
xchg
push
in
jg
sub
sbb
inc
adc
push
je
xchg
nop
or
mov
push
jmp
mov
mov
or
xlat
repnz
pop
subl
cmp
push
dec
mov
adc
jb
lret
jbe
inc
inc
mov
enter
and
push
sbb
lahf
es
jmp
sub
mov
je
fisubrs
jae
and
mov
mov
repz
gs
clc
adc
call
jno
or
or
outsb
sbb
add
sarl
jnp
loope
fisubrl
push
xor
mov
insl
cmp
bound
cmpsl
sub
mov
shl
mov
movsl
and
ret
pop
sub
outsl
inc
pop
loope
lret
add
fstpl
xor
dec
jbe
sub
or
fidivrs
addr16
dec
call
cmp
sub
cmp
leave
jg
sbb
int
cmc
pop
push
push
loop
xor
cmpsl
ficomps
mul
test
andb
rorb
int3
lahf
mov
pop
push
jp
inc
aad
inc
ret
mov
and
fmull
mov
movsl
or
shrb
cwtl
dec
inc
and
or
adc
inc
aaa
jno
scas
sub
ficoms
mov
lds
je
lret
pusha
and
mov
outsl
mov
pop
mov
mov
push
dec
sahf
call
sti
and
cwtl
pop
xor
pop
icebp
bound
jo
add
pop
mov
xchg
jne
push
std
adc
nop
stos
add
mov
push
or
push
rol
xor
movsb
ret
push
mov
mov
cli
add
and
orb
push
mov
out
aaa
mov
imul
mov
popf
pop
mov
push
orl
aas
adc
fwait
add
shlb
push
mov
loope
lcall
fnsave
in
rcrl
sahf
es
or
jg
aas
icebp
repz
pop
jle
aam
lret
adc
mov
mov
sub
hlt
push
lods
adc
in
loope
aam
movsb
nop
cs
subb
dec
mov
xor
xchg
push
insl
pusha
in
sub
and
cmpb
addr16
push
xchg
jbe
sbb
inc
das
or
jo
aad
out
lret
mov
fs
mov
sbb
xor
sahf
cmpl
adc
jmp
aam
fldcw
lock
ficoms
or
jo
cs
test
push
lock
popf
inc
push
shrb
shlb
ja
adc
jns
arpl
icebp
add
cmp
jg
add
adc
pop
dec
jl
cmp
xor
fildll
jne
lcall
les
adc
sub
pop
adcl
push
aam
xor
xor
cltd
xor
ret
loopne
sar
pop
lods
scas
jae
scas
cmpsl
sbb
xchg
test
aam
loopne
sbb
rcl
jle
enter
loope
stos
rcr
int
xchg
push
inc
pop
add
je
loop
test
mov
add
in
dec
ds
insb
cmc
fisttpll
icebp
jl
stos
cmp
xchg
stos
fldl
cmp
rcrl
sbb
jns
cmc
sbb
mov
pop
pop
mov
jmp
jbe
pop
rolb
aam
das
cs
lret
sub
loopne
inc
push
daa
test
jecxz
mov
out
mov
mov
dec
imul
es
jne
lods
imul
int
fsts
sub
fisttpll
fistpll
imul
push
cwtl
fucompp
test
xor
jp
pop
mov
fmuls
xchg
sub
out
inc
jle
imul
dec
leave
scas
out
fists
ja
cmp
fwait
add
aam
sbb
xor
push
cltd
icebp
out
sbb
popa
clc
icebp
xlat
ja
pop
pop
inc
pop
out
sbb
repz
iret
push
sbb
sub
stos
jl
jns
lret
scas
xor
push
dec
enter
je
faddl
pop
mov
sbb
mov
dec
dec
adc
stc
add
mov
and
jmp
mov
mov
js
jg
jg
pop
xchg
insb
stos
test
mov
stos
das
lods
or
lods
cli
int
fsubr
push
call
push
lret
and
sbb
xchg
jbe
ja
xlat
mov
imul
das
cmp
js
stc
clc
outsl
dec
push
or
and
and
or
push
nop
imul
cli
lea
fs
ljmp
xor
div
mov
xchg
mov
sub
cld
mov
push
inc
lahf
bound
cli
ss
stc
pcmpgtb
lahf
and
and
xchg
jmp
arpl
mov
out
pop
pop
and
dec
insb
jp
mov
jp
fisttps
arpl
incb
out
popa
into
out
lret
pop
std
pop
shlb
or
adc
add
sbb
loop
sub
scas
loopne
test
jne
xor
ljmp
mov
xchg
xlat
ret
jo
sub
pop
loopne
stos
or
daa
sbb
pop
shlb
sarl
xchg
scas
and
out
cli
ljmp
cmc
pop
insb
loop
movsb
and
into
inc
fwait
pop
mov
push
mov
or
fildll
aas
pop
mov
xor
jns
inc
xor
add
outsl
xchg
mov
lock
dec
jmp
or
mov
inc
jle
jae
pop
out
loope
mov
imul
pop
adc
inc
mov
add
mov
cmp
into
cltd
mov
rorb
jp
in
imull
daa
pushf
stos
cmp
fwait
mov
pushf
xor
and
xchg
push
sarb
and
movsb
xor
aam
push
int
inc
test
jae
cmp
mov
cmp
incl
jae
testb
pop
cmpsb
shll
out
fiaddl
sbb
bound
cmpsb
mov
mov
jae
insl
lret
xor
sbb
pop
mov
rclb
sub
movb
mov
pop
cmp
inc
cmp
xor
mov
or
xor
jae
mov
push
sub
jns
push
add
mov
lret
test
cmp
sarb
cmc
sbb
out
movsl
mov
adc
aas
or
jmp
xor
lret
push
mov
adc
stc
daa
sbb
or
frstor
add
dec
out
out
les
test
aaa
leave
adc
inc
int3
mov
in
xchg
in
xchg
xor
push
ret
icebp
and
or
lods
dec
pop
or
inc
mov
adc
lret
mov
lcall
pop
or
push
xor
mov
xor
shlb
mov
ja
hlt
cld
and
in
std
pop
mov
jmp
fsubr
addr16
cmp
push
and
add
xor
fimull
cmp
out
cs
add
inc
push
pusha
dec
cli
sbb
sbb
decl
mov
push
pop
add
ficompl
enter
push
jbe
jb
adc
pusha
mov
cmp
cmc
mov
jp
in
add
cmp
insb
mov
xor
inc
sbbb
and
or
ja
mov
stc
lds
sbb
cs
jge
xchg
push
pop
lea
mov
mov
into
xrelease
mov
out
cmp
test
mov
test
in
cmp
adc
iret
cmpsl
scas
cmp
outsl
in
pop
xor
pop
add
mov
ret
and
jecxz
insb
call
cltd
push
mov
mov
mov
fsubrs
fwait
lock
push
or
sarl
mov
insb
sbb
mov
and
dec
and
ja
mov
mov
fwait
enter
outsl
data16
sbb
cmp
push
in
jmp
ds
adc
sbb
cmp
jl
sbb
pop
adc
popl
addr16
cs
push
std
xor
push
repnz
mov
and
mov
mov
or
push
pop
int3
or
movsl
aas
mov
rcl
xchg
mov
mov
push
clc
push
ret
xlat
ljmp
out
andb
fucom
jg
add
fldl
popa
adc
sub
mov
push
cli
xchg
shrb
shr
sahf
mov
inc
dec
loop
sti
mov
out
and
mov
adc
xchg
ljmp
jmp
mov
mov
xchg
lret
andb
lret
jge
je
pop
mov
xchg
lea
ret
and
inc
into
and
xchg
fucomip
es
jo
mov
pop
and
sahf
pop
and
stc
mov
test
imul
mov
add
cwtl
or
and
pop
into
sbb
mov
cmp
iret
and
mov
or
mov
pop
ss
hlt
fsub
and
jae
scas
pop
xchg
push
push
adc
mov
dec
in
add
jns
test
ret
push
push
iret
sbb
bound
mov
mov
inc
push
adc
sbb
idiv
add
stos
cmp
push
jge
cmpsl
and
jb
imul
mov
int3
lret
imul
stos
sub
pop
jl
mov
mov
or
xchg
data16
cli
add
movsb
and
test
lret
mov
xor
aaa
addr16
repnz
adc
aam
imul
pusha
pop
adc
scas
cwtl
cmp
jle
bound
stos
mov
sbb
cmp
sahf
sbb
push
push
nop
mov
outsl
add
push
jbe
adc
jg
test
and
loope
mov
fmuls
sub
fstl
xchg
mov
mov
push
lods
xor
inc
dec
xchg
pop
cs
shl
dec
mov
mov
dec
push
mov
sbbb
cwtl
sbb
in
lret
dec
adc
shrl
cs
mov
add
mov
inc
lods
addl
sub
push
inc
mov
jno
ret
int
mov
cmp
aaa
lods
lret
sbb
cmpsl
loope
jmp
cwtl
std
hlt
xchg
into
inc
outsl
xchg
jae
loopne
lock
mov
mov
fwait
setl
or
jl
adc
xchg
add
jae
sbb
cmp
pop
push
cmc
pop
sbb
in
inc
and
pop
in
das
ljmp
push
mov
inc
notl
xchg
or
pop
fs
dec
cmp
pusha
xor
out
repz
out
cmp
aam
movsl
pop
or
lock
sti
jo
and
out
mov
cli
out
subl
arpl
lea
imulb
pop
pushl
xchg
lret
mov
jle
cmp
mov
jle
or
mov
jne
popa
mov
xchg
mov
jle
lahf
loopne
sbb
and
mov
insb
push
pop
dec
jmp
ret
jle
xor
icebp
mov
adc
pop
xchg
out
psubd
cmp
addr16
sub
aam
jns
ja
adc
incb
or
and
jae
fsubrl
inc
push
and
jp
loopne
les
ds
cmpsl
add
pop
cmp
or
cmp
shrd
movsb
jne
cmpsl
inc
fwait
and
cmp
jb
test
inc
and
mov
jne
jge
mov
push
inc
ret
fiaddl
mov
fmulp
rclb
adc
dec
pop
sub
scas
outsb
sbb
xchg
dec
les
mov
mov
es
gs
fs
inc
ret
cmpsl
fwait
add
cmpsl
mul
data16
loop
in
scas
or
cld
rcrl
xor
add
add
push
fnstsw
mov
add
popa
insl
jnp
fstl
insl
jnp
pop
push
xchg
in
push
mov
insb
dec
addr16
xor
in
jb
and
stos
or
mov
dec
sti
not
add
sti
xchg
call
ljmp
sub
jno
loope
mov
mov
xlat
inc
push
aam
dec
sar
popa
xchg
pop
incb
fisttps
enter
add
in
xor
push
mov
fisubrs
scas
cmp
or
jp
cs
sbb
jne
and
add
movsl
outsl
mov
cwtl
mov
fdivs
icebp
dec
dec
mov
jo
mov
add
pop
insl
lret
adcb
cmpl
add
pop
mov
dec
mov
test
fs
popf
cmc
arpl
pop
inc
xchg
test
jl
out
bound
scas
fisttpll
cltd
testl
lods
pusha
aam
and
dec
addl
aam
inc
lods
and
fistpl
mov
mov
mov
add
call
adc
jmp
aam
jg
leave
push
or
pop
lcall
pop
push
xor
sub
js
in
fs
add
xchg
push
ds
dec
cmp
lret
push
je
rorl
jecxz
xor
lock
outsl
sub
lcall
mov
push
add
aas
cltd
lahf
stos
sahf
sbb
adc
push
add
jnp
jno
jl
mov
sbb
mov
dec
mov
push
push
ret
jmp
std
dec
sbb
scas
sbb
dec
bound
adc
fnclex
aad
ja
push
cmp
stos
inc
js
test
jae
push
sbb
loop
xchg
addr16
ja
jecxz
push
adc
fld
scas
xchg
push
adc
and
fsubrs
push
popf
jnp
jmp
testl
xor
cs
icebp
mov
xchg
and
mov
push
push
stc
pop
jnp
fsubr
adc
lea
outsb
mov
dec
inc
pushf
dec
dec
mov
inc
pusha
cmp
in
rclb
subb
orb
ret
xchg
sti
test
mov
mov
jb
test
ja
xchg
mov
pop
xchg
dec
xchg
and
out
cmp
cmpsb
lea
scas
mov
outsw
idivl
cltd
pop
fildl
rcrb
push
pusha
cmp
inc
xlat
push
inc
push
movsb
jg
lods
sub
fildll
cmpsb
mov
call
pop
ret
test
xchg
ljmp
fwait
dec
jp
je
fldl
pop
popl
rorl
loope
pop
arpl
fidivs
mov
push
or
adc
cmpsb
dec
push
xor
test
xor
mov
or
and
xchg
dec
lcall
push
test
xchg
out
sbb
ds
rorb
xchg
mov
xchg
push
pop
xor
outsl
stos
xor
push
or
mov
sahf
sbb
sbb
pop
imul
ljmp
ret
in
aam
fmuls
outsb
sti
push
push
ss
dec
mov
shlb
mov
lret
push
stos
loop
test
pop
sbb
add
mov
imul
add
mov
lock
out
push
mov
jb
xor
popf
fistps
movsl
mov
mov
jmp
icebp
into
or
adc
mov
mov
pop
stos
push
call
and
jnp
clc
js
pushl
xchg
and
adc
xchg
jmp
mov
mov
repnz
push
fldcw
and
dec
jecxz
push
bound
push
pop
adc
mov
sbb
imul
je
dec
sub
test
xchg
icebp
mov
imul
cmp
nop
sbb
push
jo
xor
and
cmpsl
rcrb
je
xchg
ds
ja
jge
outsb
cli
and
out
js
xor
mov
scas
test
jl
xor
in
jmp
outsl
nop
ja
xor
mov
cmpsb
aaa
cld
push
es
jle
cmp
jp
dec
loop
jbe
xchg
xor
stc
add
pop
ss
mov
out
mov
push
mov
sbb
outsw
ret
aaa
es
stos
jbe
and
mov
sbb
xchg
jne
addr16
sbb
cltd
jnp
xchg
mov
mov
les
and
aad
or
pop
or
je
adc
cltd
jb
lock
mov
dec
sub
test
sbb
insb
call
sarb
lock
dec
dec
xor
mov
dec
xor
adc
jmp
mov
shufps
mov
add
inc
add
inc
imul
inc
stos
loop
outsb
in
mov
pop
xor
push
and
sbb
or
lds
ror
cs
out
jae
and
shll
in
cmp
xchg
stc
push
test
sbb
iret
cmp
xor
ret
movsb
outsl
cltd
mov
dec
loopne
jb
cmp
cmp
lcall
adc
das
add
push
sarl
mov
push
xchg
dec
js
sbb
clc
jle
jmp
and
sahf
adc
cmp
xor
jns
in
jnp
rcrb
pop
push
insb
mov
stc
movl
pop
pusha
stos
gs
adc
jae
adc
mov
push
ds
push
push
loope
insl
and
popa
cld
add
pusha
adc
jecxz
and
mov
adc
add
outsl
dec
sub
xor
inc
std
je
sbb
testl
ja
loop
or
andl
add
xor
pop
inc
sub
sahf
push
jecxz
mov
lea
adc
or
cmp
andb
push
imul
inc
xor
and
pop
push
lret
jmp
inc
jb
cmp
push
fwait
and
xor
test
push
ret
push
sbb
sub
in
mov
adc
add
sbb
mov
push
imul
adc
jno
mov
push
fisubrs
adc
test
sub
ss
sub
xor
adc
sarl
jmp
ret
popa
cltd
jecxz
dec
daa
in
sbb
xchg
out
push
push
pop
ret
sub
int3
lcall
daa
dec
je
mov
fisubl
jno
jmp
xor
test
enter
mov
cs
scas
inc
cltd
orb
push
int3
outsb
into
aas
inc
fisubl
lea
pop
push
cmpsl
xchg
cmpsb
push
push
movsb
jns
ja
jbe
push
pop
cwtl
dec
js
push
push
mov
enter
cmp
lret
sarb
sbb
nop
mov
push
popf
jnp
je
or
xor
cmp
adc
out
ljmp
xchg
mov
sub
jb
ret
xchg
jae
fisttps
mov
push
iret
out
or
out
dec
sbb
or
ret
push
jle
lds
lea
mov
xor
fstl
xchg
jmp
mov
sbb
cmp
mov
fistpl
adc
cltd
jae
mov
out
pop
xchg
jl
adc
xlat
ficomps
insl
xor
sti
lods
scas
or
into
and
es
and
dec
adc
jbe
clc
jbe
fistl
les
pop
jbe
pop
test
jb
cld
jo,pn
aaa
push
cmp
icebp
add
vcmpps
push
mov
mov
popa
js
add
and
inc
mov
jmp
test
jne
lret
in
repz
ret
jl
dec
mov
xlat
lahf
rcrl
sbb
idiv
int
decl
insb
loop
fmull
cmpb
lret
jbe
lods
inc
fcoml
pop
lahf
cmp
sub
ss
sbb
jp
lret
sarb
xor
sub
into
mov
sbb
repnz
dec
fsts
imul
leave
inc
mov
rcrb
clc
cmpsl
xchg
ret
imul
push
repz
cs
lds
lret
sbb
loopne
fwait
test
mov
loope
jmp
sbb
loop
xor
pop
cli
insl
xor
jmp
lahf
adc
shlb
inc
les
fisubs
add
xor
xor
inc
mov
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
movl
mov
mov
xor
mov
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
mov
subl
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jne
mov
neg
mov
adc
jmp
inc
nop
jl
rolb
mov
dec
test
out
pop
addl
add
inc
movsb
es
rol
cmp
mov
fwait
jle
mov
mov
mov
test
xchg
sahf
adc
out
cmp
ss
sub
jge
sub
fldl
dec
cld
std
cmp
or
xchg
daa
cmp
mov
test
dec
in
adc
out
arpl
stc
pop
or
mov
out
nop
loopne
jne
outsb
nop
pcmpgtd
add
out
and
mov
xor
sbb
xchg
ds
popf
sub
mov
mov
icebp
iret
pop
aam
rcrl
cwtl
mov
add
lret
adcl
scas
test
mulb
inc
sbb
adc
bound
jmp
aam
stos
int
clc
xor
push
inc
or
jne
iret
mov
pop
mov
loop
mov
repnz
loop
popf
inc
repnz
mov
fcomps
gs
outsb
sub
xchg
pop
mov
sub
js
clc
das
andb
mov
fst
jno
mov
scas
jnp
in
out
negb
test
dec
mov
pop
insb
fnsave
xor
outsl
outsb
jo
mov
mov
dec
pop
or
fs
dec
inc
jge
shll
add
jle
inc
push
ljmp
push
out
mov
cli
pop
arpl
fisubrs
sub
xchg
lahf
pop
mov
mov
dec
add
lods
sarb
pop
fisttps
popf
stc
lahf
pop
fildll
xor
ljmp
mov
lret
jae
imul
cmc
xlat
jl
adc
fstpt
sbb
stos
repz
lea
js
dec
stos
push
pop
scas
dec
outsl
and
jno
imul
xor
call
lock
pusha
add
dec
sub
ret
xchg
cltd
in
jbe
jbe
notb
xchg
jle
bound
xor
loope
add
pop
fcmove
and
push
repz
push
scas
cmp
inc
jae
movsb
push
or
sahf
adc
fsub
cs
rcrl
or
aad
or
xchg
adcb
int3
sbb
dec
vaddsd
js
lret
inc
das
and
jmp
ret
mov
push
lcall
mov
cmp
push
popf
push
into
in
popa
mov
xor
jecxz
sub
shrb
adc
imul
pop
jnp
inc
int3
mov
lods
sbb
xor
fidivrs
jle
push
dec
mov
scas
pop
xchg
inc
jmp
mov
or
add
xchg
mov
movsb
xchg
mov
push
pop
inc
xchg
movsb
lret
stc
sti
sbb
lret
icebp
into
push
in
stc
mov
lcall
pop
push
lods
add
xor
stos
fsubrl
int3
stos
mov
mov
data16
out
dec
es
push
int3
outsb
aaa
inc
xchg
mov
or
loope
aas
scas
mov
andb
sub
add
mov
ret
stos
fsubs
cmpsb
mov
push
push
sti
fbstp
push
mov
std
adc
push
sbbb
shll
xchg
jbe
xor
clc
dec
in
inc
fs
minps
cmpsl
lret
fstpt
je
inc
xchg
cwtl
xchg
jle
mov
aam
cmp
imul
adc
imul
xor
arpl
or
ss
in
sub
rolb
xor
jno
xchg
pop
in
inc
sub
xor
leave
les
dec
adc
mov
mov
out
dec
test
sbb
sub
fistpl
pop
adc
std
push
out
lds
and
sbb
mov
out
cwtl
inc
xchg
je
pushf
aaa
and
ljmp
movsb
or
pop
mov
sahf
incl
adc
cltd
sbb
fsubr
mov
movsl
ljmp
jbe
or
sbb
add
xchg
das
add
push
push
jbe
dec
pushf
push
enter
inc
inc
fwait
pop
loop
popa
xchg
mov
sub
sbb
mov
xor
sahf
xor
shl
mov
out
addr16
dec
pop
or
push
sub
lods
lods
stos
or
pop
sub
pop
sbb
in
js
sbb
push
hlt
call
nop
add
mov
les
fs
mov
mov
bound
push
and
adc
xor
movsb
fistpll
push
xchg
arpl
cwtl
sub
popa
push
adc
in
add
insb
xor
mov
lret
clc
jmp
test
hlt
lcall
mov
insl
add
gs
xchg
aaa
push
test
and
xchg
in
sub
xchg
outsl
xchg
mov
push
inc
sub
pop
fwait
and
popf
mov
push
gs
sub
js
pop
mov
mov
jbe
push
cmp
mov
dec
adc
mov
fdivl
int3
mov
pop
aad
sbb
sti
aas
das
js
pop
int3
adc
jae
sub
out
jp
dec
les
int3
stos
stc
call
jbe
mov
mov
push
rorl
in
pushf
sahf
fstpl
test
and
xchg
push
decl
ja
mov
je,pt
inc
sbb
xor
inc
push
mov
or
dec
mov
xor
in
and
add
adc
insl
hlt
fdivrs
insl
fidivs
test
scas
xor
mov
cld
adc
sbb
addl
aas
cs
add
or
ja
outsb
ljmp
jmp
es
mov
or
dec
cmp
push
clc
outsl
adc
mov
pop
inc
inc
pop
dec
stc
pop
pop
cmc
imul
xchg
mov
xchg
jg
je
cs
mov
mov
sbb
jmp
inc
push
dec
pop
jne
xchg
xor
loopne
jl
in
repz
xor
xchg
shll
push
inc
and
je
mov
jo
sbb
inc
lods
addr16
pushf
inc
mov
aam
jecxz
add
imull
movsb
sbbb
cmp
mov
dec
pop
push
ret
cmp
mov
pusha
lret
mov
jae
sbb
out
in
nop
sub
ljmp
repnz
bound
sahf
adc
mov
mov
mov
xor
ss
cmp
cmpl
pop
pusha
pop
mulb
pop
outsb
in
scas
icebp
outsl
dec
popf
xchg
aaa
test
xor
int
sub
mov
sub
inc
popf
aam
movsl
or
loop
popf
outsl
dec
cmpsl
add
movsb
out
repnz
jg
inc
mov
jae
loopne
sti
add
orl
daa
data16
mov
mov
arpl
pop
out
pop
dec
mov
lea
subl
mov
dec
ljmp
loope
aas
aam
pop
jnp
dec
jecxz
std
mulb
into
xor
xchg
push
jb
xor
mov
dec
or
fisttpll
mov
sbb
incb
xchg
nop
sbb
pop
bound
mov
cld
jbe
inc
pop
push
loope
repz
xchg
sub
out
sub
mov
ljmp
xchg
push
sub
inc
dec
jae
push
fs
insl
mov
sub
dec
out
repz
je
adc
cs
push
mov
xchg
adc
mov
adc
jl
push
aas
and
mov
lds
enter
cmpsl
xchg
xchg
je
insb
enter
mov
ja
mov
int3
jae
in
jmp
sahf
dec
pusha
sbb
loopne
mov
xchg
int3
sbb
out
sbb
fwait
pusha
cmpsb
sub
cmc
das
decb
sbb
test
pop
xchg
fnstcw
cmpsb
inc
jb
ret
mov
pop
rorl
xchg
adc
dec
mov
adc
ss
repz
jo
je
fbld
mov
xchg
mov
pop
sbb
popa
clc
aam
shrb
cmc
add
insl
push
jns
push
or
les
inc
fisubrs
testl
dec
mov
or
pop
push
cmp
mov
cmp
outsb
and
or
in
sub
into
pop
add
cmpsl
scas
sub
nop
scas
scas
adc
sub
orb
cmp
sbb
arpl
fdiv
mov
mov
addr16
stos
xchg
subl
ja
pop
dec
mov
ret
and
inc
ds
out
adc
or
mov
ds
and
icebp
in
es
mov
clc
add
or
mov
add
pop
lret
xor
or
or
and
xor
sub
pop
out
mov
push
in
xchg
adc
inc
fldl
pushl
fbstp
push
or
movsl
xor
scas
push
push
insl
test
xor
push
jno
dec
in
repnz
adc
rep
or
xor
dec
lock
aaa
add
and
push
sbb
bound
dec
adc
mov
aam
jno
or
pop
outsl
push
ds
lret
icebp
outsb
add
push
pop
cmp
insl
scas
xor
cltd
fdivl
subl
add
dec
cs
sbb
jno
scas
mov
pop
mov
jb
leave
push
dec
sub
test
inc
in
insb
je
lock
lret
icebp
cld
sbb
les
ljmp
sbb
mov
das
aas
aas
rolb
add
mov
sti
mov
push
aaa
popa
dec
and
or
mov
popf
dec
je
test
push
fstl
testb
fldcw
pop
or
cmc
xor
rol
dec
mov
sub
sub
js
shlb
jmp
loope
mov
or
xor
test
mov
xchg
push
mov
addl
icebp
push
adc
sub
inc
add
in
fwait
pop
inc
jns
shll
inc
fmul
mov
add
adc
sbb
jp
xor
notl
cmpsl
loope
adc
inc
adc
movsb
jmp
pop
mov
push
dec
dec
mov
dec
rcrb
movsb
add
das
aas
or
cmp
ds
lock
enter
or
je
add
pop
adc
lds
mov
cmp
stc
pop
xlat
mov
mov
and
out
out
jno
out
mov
mov
hlt
add
test
jns
fldcw
shll
out
adc
jb
inc
inc
dec
mov
popf
aaa
lahf
dec
add
mov
test
mov
or
mov
push
pusha
jbe
faddl
dec
out
lds
sub
mov
stos
cmp
or
pop
outsl
mov
imull
pop
cmp
pop
fwait
dec
jge
loope
pop
or
ret
jo
xchg
inc
inc
js
and
cld
div
and
jae
sub
dec
xchg
push
push
stos
pop
imul
adc
jne
lahf
sbb
inc
pop
mov
and
bound
fstpl
loopne
pop
daa
xchg
icebp
popf
or
sbb
xchg
sub
in
fmull
sub
jns
pop
jecxz
jle
aam
dec
xchg
sub
and
in
xchg
lahf
movsb
fildll
sbb
adc
mov
push
push
push
mov
push
mov
cmpsl
sbb
ja
mov
jg
loopne
jl
out
mov
xchg
xor
mov
jno
addl
gs
outsb
push
dec
add
les
and
mov
add
jo
jge
sub
ljmp
cld
sub
and
dec
pusha
pop
xchg
and
cmp
pop
aad
std
movsl
cli
inc
or
loopne
add
sbb
js
pop
and
fidivl
push
rol
std
jb
jg
int3
add
jne
mov
pushw
mov
push
cli
xchg
sub
lock
movsb
and
or
addb
lock
pop
stos
jne
notb
fdivs
jns
lock
add
daa
mov
inc
dec
insb
pop
xor
inc
cmpsl
rcr
xchg
jle
or
cld
in
mov
js
mov
xor
pop
mov
mov
into
pop
fsubs
and
clc
decb
mov
adc
sub
repz
cwtl
xchg
adc
sub
pushf
xor
add
push
pop
fisttpll
cwtl
dec
loop
movsb
sar
push
js
fisttpl
fbld
sbb
popf
fildll
push
dec
mov
sub
jmp
call
mov
dec
jns
mov
xchg
jmp
push
or
fnstcw
mov
test
enter
loope
lods
lcall
dec
das
cltd
and
lahf
ss
inc
insl
dec
and
gs
pusha
jno
lods
cld
sbb
push
push
push
stos
mov
adc
mov
push
sub
inc
adc
xchg
fidivl
mov
lea
pop
sub
bound
push
into
mov
shlb
sub
imul
shrl
adc
mov
push
sub
lea
out
dec
sub
cmpl
in
sbb
cltd
stos
or
fidivs
sbb
push
dec
popa
outsl
jg
push
into
loop
jns
rorb
sbb
lret
adc
mov
stos
aad
imul
xchg
arpl
mov
mov
insl
cmpsl
out
sub
cmp
add
or
xchg
sti
mov
dec
xorl
jmp
mov
sub
cld
jnp
sub
out
jnp
lahf
call
data16
lahf
shll
addr16
inc
popf
das
xchg
sti
xor
sub
xchg
data16
sbb
cvtpi2ps
adc
mov
lods
dec
mov
cmp
test
xor
mov
rcll
mov
inc
inc
div
xor
inc
jbe
mov
imul
push
nop
insb
pop
jmp
jecxz
mov
rol
pushf
jecxz
outsb
daa
jl
nop
bound
sti
pop
and
sub
sub
int3
es
add
stos
inc
daa
inc
mov
adc
pop
and
pop
lock
pop
enter
inc
mov
ficomps
push
cmp
mov
rorl
lcall
in
das
or
sbb
sti
jmp
jge
movsl
fwait
sbb
inc
inc
dec
jp
dec
mov
pop
cld
inc
cltd
ret
mov
and
repnz
into
outsb
jge
add
and
aad
sbb
ljmp
fdivl
jno
movb
int
mov
jns
cmp
jge
inc
mov
in
enter
sahf
and
mov
mov
out
ret
cmp
xchg
inc
add
jb
stc
fiaddl
cmp
jmp
mov
inc
inc
pop
dec
xchg
mov
push
popf
popf
push
sbbb
sbb
mov
mov
sub
pop
loop
decl
inc
sti
xchg
mov
inc
mov
xchg
ds
jns
xchg
arpl
jp
push
loope
das
cmp
shlb
pop
jnp
jle
int3
push
and
xor
shrb
in
lret
cmpsb
jo
sbb
jmp
xor
pusha
outsl
mov
sbb
nop
dec
popf
mov
cmp
in
xor
inc
daa
push
cmp
sbb
xorb
jge
mov
popa
int
or
mov
add
xorb
push
push
mov
xchg
sahf
xchg
sub
popa
adc
or
sub
xorl
aam
sub
lock
lea
ret
in
icebp
icebp
popa
inc
xchg
icebp
test
inc
inc
sbb
cs
aaa
inc
cmp
shl
cmp
lcall
push
or
push
inc
ror
mov
or
xor
and
push
add
pusha
cmpsb
mov
ss
popf
and
and
xor
xor
add
mov
mov
aam
xchg
jns
jmp
pop
jge
xlat
or
cli
iret
repz
rorl
into
sub
jl
add
cmp
pop
mov
loop
call
mov
loopne
xchg
test
inc
mov
cmp
mov
sahf
mov
jns
cwtl
push
pop
add
xchg
and
jmp
pop
movsb
cmp
pop
jo
fwait
jp
clc
pop
mov
and
inc
sub
nop
ljmp
cmp
xor
mov
ljmp
jo
lds
test
out
push
xchg
into
and
sbb
push
dec
lods
jae
pop
aad
cli
xchg
push
test
in
out
nop
inc
outsl
or
call
or
rcrl
sub
fiadds
ds
imul
rcrl
cmp
pslld
sarb
arpl
divl
hlt
out
stc
cli
cmpsl
pushf
ret
cmp
test
idiv
mov
fstpt
outsb
dec
push
and
mov
iret
lock
xlat
jbe
mov
mov
jne
movl
add
mov
iret
push
inc
push
je
or
xor
lret
stos
and
loopne
cmc
mov
idivb
mov
cmp
stos
pop
ja
pop
cltd
popa
dec
mov
cmc
xchg
inc
ret
js
xlat
sub
and
pusha
xlat
sti
hlt
ss
xor
aam
scas
loopne
fsubrs
cld
mov
or
out
out
stos
outsb
outsl
adc
lret
aam
xchg
iret
pusha
sub
mov
or
rolb
jno
fisubrl
push
dec
pop
sub
aaa
andl
in
scas
add
cmp
sahf
into
or
in
mov
out
cmpsb
dec
les
sbb
pushf
jns
mov
dec
ret
add
inc
xchg
mov
divb
sbb
leave
fcomi
daa
adc
inc
push
sub
mov
int3
jae
cmp
cmpsb
jns
aad
mov
cmpsb
fidivs
push
mov
out
xor
popf
pop
cmpsl
mov
adc
add
popf
outsl
cmp
fstp
cltd
jmp
test
inc
xor
push
sub
mov
into
shll
cmp
das
imul
repz
out
adc
sub
orl
test
cwtl
scas
not
fdiv
ljmp
into
loope
cwtl
int
outsb
je
cmp
aaa
adc
test
sbb
cmp
mov
xchg
int
jp
and
inc
pop
cmp
lret
mov
ret
and
incb
pop
mov
add
add
and
popa
and
jmp
lods
xchg
daa
insl
scas
and
lret
push
rcll
sbb
add
cmp
add
cltd
pop
mov
test
inc
ljmp
cmp
add
hlt
cmc
xorb
mov
xor
add
adcb
add
imul
jmp
push
mov
push
daa
push
push
sub
xchg
dec
psrld
imul
cli
xor
in
jae
ss
loopne
jbe
and
clc
jg
loope
pop
jge
dec
xor
jp
shrl
xrelease
in
fsub
pop
addl
mov
iret
or
mov
cmp
insb
pop
mov
xor
sub
sbb
dec
int3
inc
mov
mov
icebp
inc
xchg
pusha
out
push
jo
shlb
xor
add
cmpsl
pop
lret
idivl
cmpsb
push
jnp
cld
sub
and
repz
adc
mov
xchg
push
push
test
sbb
aas
movsl
fsubl
dec
imul
cli
xchg
lock
test
sub
testb
and
clc
sub
mov
mov
cmpb
jnp
outsb
mov
xlat
jae
movsb
icebp
add
push
popf
push
out
lret
jnp
fs
jb
sub
shl
cmp
icebp
imul
push
lock
jae
loopne
mov
loope
movsb
jbe
xchg
test
inc
dec
jmp
pop
or
xchg
push
cmp
sub
fmul
xor
fstl
cmp
dec
dec
aas
es
xchg
and
test
pop
cli
inc
movsl
add
cmp
cmpsl
mov
out
stos
dec
mov
pop
push
daa
aas
or
data16
sti
lret
pop
or
lcall
roll
outsb
cmp
pop
insb
shl
cmp
jne
scas
push
leave
hlt
mov
in
sahf
mov
stos
iret
inc
cmc
jle
mov
hlt
in
push
and
xorl
push
ficompl
cmp
push
and
or
sbb
pop
in
xchg
js
cmp
jg
outsl
cmc
cmpsb
sbb
adc
ret
or
arpl
jmp
shlb
sbb
inc
mov
into
or
push
cltd
xor
mov
add
mov
aas
xor
inc
add
sti
es
push
repz
loope
add
lds
pcmpeqb
es
mulb
arpl
xor
sub
fadd
rclb
pop
push
mov
imul
cmp
fidivl
movsb
mov
ss
push
addr16
dec
incb
mov
lcall
lock
pop
xor
mov
arpl
js
bound
mov
pop
sub
int3
sbb
or
xor
mov
fldcw
sub
call
icebp
dec
out
lods
aas
enter
aaa
push
outsb
push
test
fs
dec
push
aaa
and
xchg
xchg
adc
mov
lock
sub
xchg
pop
cmpsl
repnz
in
test
stos
inc
test
test
dec
dec
push
in
pop
xchg
rcll
clc
inc
dec
fdivrl
andb
lods
adcl
test
pop
mov
sarb
lea
stc
iret
mov
in
pop
dec
mov
mov
or
repz
mov
ja
je
andb
rolb
mov
pop
in
out
or
rorb
sbb
push
jl
fldl
popa
xchg
pusha
or
cmpsb
in
sbb
stos
fbstp
mov
pop
daa
mov
daa
hlt
lret
out
mov
fs
ret
sub
test
or
dec
int3
adc
int
inc
das
cwtl
imul
movsl
mov
push
adc
mov
sbb
xor
icebp
fs
call
cmp
and
push
lods
xchg
add
pop
xchg
xor
je
testb
pusha
cmp
pop
xor
mov
std
dec
adcb
dec
xchg
mov
pop
xor
fiaddl
lret
pop
jnp
sbb
cmp
add
pop
or
cmpsl
and
sub
push
push
inc
ljmp
or
outsb
fcomp
mov
gs
shl
stc
sub
imul
inc
sub
negb
push
inc
insl
fcomip
mov
adc
xor
je
sbb
pop
popa
jle
sub
lcall
cmpsl
mov
fistpl
xchg
inc
stos
das
sub
sbb
mov
or
pop
mov
mov
test
aas
rorb
mov
adc
mov
popl
sbb
arpl
lods
inc
cmp
clc
mov
mov
cmp
mov
add
jbe
and
pop
jo
dec
pop
add
stos
pop
icebp
mov
jp
mov
insl
adc
sub
cmp
out
jmp
push
cmc
jbe
addr16
xor
mov
push
cmpsl
fnstcw
gs
push
pushf
mov
mov
mov
cwtl
sub
mov
insb
push
lret
mov
mov
adc
ret
mov
rcrl
sbb
dec
and
dec
pop
sbb
sub
dec
nop
stos
adc
ds
adc
add
or
in
mov
or
scas
out
push
sbb
adcl
push
mov
fstl
cltd
into
test
mov
pusha
mov
cltd
outsb
pop
test
fcompl
pop
insb
jg
sbb
ret
xchg
loope
movsb
mov
aas
sbb
sbb
push
mov
jg
push
mov
sub
jo
ret
cwtl
jecxz
subl
addr16
jno
test
cmp
aas
mov
aaa
data16
inc
dec
lods
mov
inc
test
push
popa
mov
lcall
and
lret
fiaddl
push
dec
je
mov
mov
pop
aaa
or
mov
jne
cmp
js
dec
loop,pt
dec
jg
push
pop
sub
mov
sub
mov
or
mov
outsl
das
mov
insb
inc
es
leave
inc
xchg
push
sbbb
xor
fsubl
test
out
addr16
lcall
and
pop
out
push
jmp
jbe
mov
insb
and
sahf
cmc
cs
shll
cwtl
xchg
mov
jmp
cmp
cltd
lret
mov
push
mov
or
clc
dec
jb
add
cmpsl
jmp
cli
push
jo
jmp
inc
dec
lock
inc
pop
inc
iret
hlt
leave
jle
lods
loope
shl
sub
dec
pop
jo
mov
out
bound
ljmp
scas
cmpsl
xchg
adc
rorb
xchg
cmp
jecxz
xchg
mov
fwait
loop
out
aas
dec
daa
cmp
sar
xchg
sub
dec
cs
jmp
cwtl
and
adc
add
sbbl
dec
jge
add
add
dec
dec
push
cmpb
fnstcw
add
mov
add
xchg
scas
gs
test
js
and
repnz
sub
test
mov
dec
sub
outsb
inc
jecxz
xorl
dec
ret
add
dec
cmp
cmc
inc
stos
jb
andps
add
cmp
stc
pusha
and
aad
mov
cli
push
dec
pop
dec
mov
mov
cmp
add
aam
or
gs
cs
mov
adc
dec
jnp
or
out
push
add
jl
mov
push
inc
cmp
push
inc
fadd
fsubs
cltd
jle
cmpsl
push
inc
je
add
fdivr
stc
mov
lcall
mov
testb
and
mov
repnz
daa
fwait
add
sub
in
xchg
insl
push
sub
sub
push
or
push
sti
cltd
scas
fsubs
cmp
insl
jns
lds
lahf
sub
inc
jg
fcompl
mov
icebp
jno
mov
lretw
hlt
cmc
adc
div
lock
mov
inc
push
cmp
add
fs
push
jns
mov
outsl
stos
dec
enter
orl
xor
add
enter
loope
outsl
sbb
cli
mov
sub
pop
adc
mov
or
jg
fildl
ja
jne
test
shll
and
jmp
sub
aas
int3
scas
sub
movsl
xor
or
push
hlt
insb
xchg
ror
sahf
xchg
cmp
mov
jg
push
jnp
ss
xor
lcall
and
add
pop
mov
xlat
hlt
push
loop
aas
in
mov
xor
sub
cmp
xor
xor
pusha
xor
lret
push
jb
imul
and
pop
js
push
or
testl
fildll
shrb
inc
inc
mov
lret
mov
mov
xor
sbb
fistps
sub
mov
xor
mov
aad
mov
ljmp
mov
cmpsb
mov
adc
nop
test
jnp
pop
push
or
dec
dec
rol
lods
call
js
loopne
test
lahf
mov
into
mov
lahf
mov
sbb
js
mov
sub
cli
push
mov
subb
push
loope
and
and
sbb
aas
fistl
inc
dec
lock
xchg
xchg
in
inc
in
je
push
mov
sarl
ljmp
jnp
pop
sub
sbb
popa
in
adc
and
ret
add
mov
dec
daa
pop
loope
jl
lret
nop
dec
jbe
in
pushf
push
push
cld
stos
cs
fucom
scas
and
insb
ja
in
and
mov
xchg
push
mov
loop
mov
mov
ret
aas
lock
jns
adc
push
cmp
cmp
cwtl
pushf
jo
push
cmp
aam
arpl
pushf
or
mov
push
mov
out
jae
mov
xchg
mov
lods
mov
inc
idivb
xor
or
std
test
and
mov
stos
mov
pop
sub
sub
and
lret
mov
out
das
adc
outsb
scas
push
ret
aas
cmp
and
jbe
lret
jb
negl
lds
push
mov
add
adc
imul
pop
shlb
out
xor
test
mov
jl
or
fidivrs
xchg
xchg
stos
dec
rorb
sub
adcl
sbb
push
push
rorb
push
cmc
cmp
and
xor
rolb
mov
xchg
xchg
test
or
icebp
adc
mov
js
cmpsl
add
cwtl
shll
arpl
bound
sahf
mov
jne
rcl
addb
mov
sub
loope
in
mov
les
xorl
scas
or
inc
lar
imul
aad
movsl
push
insb
jno
cmp
sbbl
ud2
dec
mov
xchg
adc
call
dec
xchg
cmp
mov
pop
data16
outsl
push
dec
test
pop
std
sub
inc
cmp
inc
jo
fistpll
mov
cmp
cmp
js
daa
cmc
shr
lea
inc
pop
lods
mov
sbbl
push
cmp
jbe
jp
inc
int
dec
out
inc
push
lods
cmp
ss
lcall
dec
daa
jnp
ja
ja
cli
mov
mov
call
mov
loop
ds
pop
popa
hlt
pop
fmuls
sub
mov
jecxz
loope
jp
mov
arpl
stc
jmp
mov
pop
outsb
mov
lret
pop
movsb
test
jb
mov
push
and
stos
aas
dec
je
pop
sbb
and
xchg
in
mov
sti
sbb
jns
inc
cmp
and
test
dec
xchg
iret
cld
inc
incl
out
xor
pushl
xchg
ret
iret
xlat
imul
xchg
je
out
inc
mov
adc
jns
push
inc
popf
pop
ficompl
fwait
jmp
dec
mov
jg
adc
inc
test
push
push
cwtl
sub
mul
lret
incl
rcl
movnti
dec
push
dec
sbb
lret
aam
js
out
fwait
adc
or
popf
cltd
pop
jge
nop
leave
xchg
cmp
punpcklbw
paddb
outsb
int
icebp
notb
xor
xchg
mov
in
or
das
push
jno
cmp
pop
pusha
jmp
pop
data16
add
ret
dec
loope
call
pop
jnp
aad
outsl
clc
stc
call
xor
adc
stos
imul
sub
pushl
pop
sti
and
adc
int
pop
loop
sbb
nop
push
xchg
add
xchg
clc
push
loop
popa
sbb
jg
xchg
fidivs
stc
jecxz
mov
jge
cld
add
jnp
stos
fstps
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
push
push
pushl
pushl
call
cmpl
jb
mov
jmp
test
addb
jno
mov
sub
addl
pop
cmp
adc
arpl
mov
adc
fs
das
in
and
test
cwtl
data16
add
pop
rorb
xchg
xchg
fnstcw
push
ss
adc
push
cmp
mov
aam
shrb
nop
xchg
mulb
inc
cld
mov
adc
das
ret
jge
arpl
icebp
mov
cmp
out
push
and
ljmp
loopne
add
mov
insl
inc
mov
lret
push
cs
idivb
je,pt
jg
dec
pop
cmpsl
je
dec
hlt
pop
cmpsl
out
daa
fwait
cs
negl
sub
jb
add
cmc
xchg
dec
xlat
jnp
insl
fs
push
jbe
inc
push
jne
cmp
or
push
mov
inc
out
cmp
mov
push
pusha
cmp
xor
sub
inc
enter
outsb
push
or
cmp
push
insb
mov
aas
out
xor
sbb
mov
bound
jnp
mov
xchg
xor
sub
dec
aas
jno
inc
ror
das
xor
add
xchg
mov
mov
test
mov
jnp
out
arpl
stc
jo
push
pop
sbb
mov
pop
sub
ss
mov
fucomp
mov
shr
shl
mov
outsb
das
sbbb
xor
cli
mov
mov
or
mov
mov
dec
rep
sub
insl
icebp
push
subb
adc
sbb
push
xor
sbb
xchg
ds
xor
dec
aas
sbb
mov
ds
jmp
ror
sbb
test
cmp
xor
sbb
lret
out
hlt
sub
mov
clc
fcomi
sbb
mov
cli
add
xchg
das
roll
push
sar
das
adc
sbb
insl
das
cmp
sub
jbe
inc
or
dec
xor
xor
mov
pop
xchg
or
add
fadds
cmp
popa
scas
or
jne
stos
jbe
sub
mov
push
and
mov
cmp
xchg
dec
js
push
mov
rcl
pop
xchg
add
sub
cld
push
adc
push
test
mov
out
mov
cli
mov
idiv
clc
in
mov
aad
and
cmp
loope
stos
lds
aad
or
sbbb
push
imul
pop
sbb
addr16
popa
stc
rclb
out
inc
xchg
repz
push
in
cmp
ret
cwtl
and
mov
adc
scas
dec
push
fisubl
add
sub
mov
stos
mov
test
in
out
xor
mov
dec
or
jge
xchg
lret
lret
lret
mov
scas
stc
adc
cmpsb
push
and
clc
filds
daa
dec
sub
push
sti
adc
xchg
outsb
adc
xor
add
mov
bnd
push
mov
frstor
sbb
xchg
mov
push
stc
add
adc
mov
inc
mov
outsl
popf
sbb
and
ja
xor
sahf
hlt
gs
jl
xor
pusha
aam
rol
inc
mov
gs
pusha
dec
addr16
test
cmpb
adc
adc
jge
fcompl
loopne
lock
shll
mov
fwait
out
jge
dec
inc
scas
repz
jbe
and
jnp
lret
out
lock
xor
mov
push
jo
dec
mov
repz
inc
lcall
push
push
scas
inc
push
inc
mov
adc
in
cmp
shll
mov
inc
adc
cmp
mov
dec
adc
and
cmp
add
leave
insb
inc
jnp
dec
inc
jnp
adcb
pop
pop
xchg
movsl
in
jp
sub
pop
cmp
or
xchg
clc
push
sbb
pop
mov
xchg
ds
ret
mov
mov
mov
mov
call
sbbl
outsl
sub
xchg
int3
xchg
lock
icebp
es
and
pusha
jg
aaa
push
mov
pushf
lahf
jl
sbb
les
repnz
fstpl
outsl
add
mov
clc
leave
lds
jg
pusha
fisubrs
lods
ss
gs
mov
pop
outsb
or
and
sbb
mov
jmp
jnp
dec
shr
add
sbb
inc
insb
repz
sub
inc
popf
xchg
test
xchg
daa
aaa
pop
pop
popf
stc
dec
insl
mov
xchg
das
pop
arpl
xchg
sub
iret
adcl
sbb
cltd
jo
sbb
mov
shll
pop
mov
mov
ret
xor
vfrczps
adc
movsb
loopne
add
ret
loopne
sahf
mov
and
in
fcom
mov
pop
aas
imul
inc
adc
outsb
in
fdivl
jno
fsincos
jno
rcl
xchg
mov
ljmp
and
and
bound
fiadds
xchg
dec
jb
mov
jp
mov
or
popl
jne
xchg
lcall
bound
dec
mov
and
clc
repnz
fs
inc
movsl
cs
ret
or
ret
jns
fnsave
loopne
daa
xchg
fcoms
popf
popa
xchg
je
xor
pusha
loopne
jg
lret
mov
loopne
or
or
pop
lcall
inc
mov
mov
xor
sbb
testb
xchg
xchg
test
push
mov
std
xor
test
xchg
dec
xor
out
out
pop
or
push
push
dec
mov
xor
adc
test
mov
and
repz
repz
addl
xchg
frstor
jbe
inc
in
repnz
inc
imul
sti
scas
inc
mov
mov
in
sub
testb
sarb
lret
in
popf
mov
lods
lock
mov
cmp
xorl
mov
fiaddl
sbb
js
inc
test
cmpsb
jbe
mov
cmp
outsb
sub
jecxz
das
ret
xor
cli
int
leave
je
ds
adc
jb,pn
leave
sbb
cmp
sbb
add
rcll
cli
jns
xchg
int3
lcall
and
out
mov
clc
dec
jp
cmp
mov
xor
outsb
sub
aam
adc
mov
mov
sbb
int
dec
mov
mov
xchg
sub
movb
pop
jp
dec
rcrl
lret
pop
dec
je
xchg
sub
aaa
add
push
and
les
sub
scas
aas
out
sub
cmpsl
test
call
repz
fisttpl
dec
add
xchg
lcall
fwait
mov
es
cld
int3
in
pop
cltd
cmpsb
push
f2xm1
cmp
inc
adcb
xchg
lret
mov
lret
cmp
out
in
adc
mov
push
jl
ljmp
pop
fyl2x
adc
sahf
add
scas
cld
cwtl
mov
enter
cwtl
pushf
mov
mov
dec
imul
push
jl
rcl
lea
push
loopne
pop
loop
xor
cmpsb
arpl
sbb
fistpl
jae
lods
push
xor
mov
out
mov
jge
mov
cmp
rolb
sub
scas
or
in
lea
sti
into
mov
lret
sbb
xchg
in
sbb
and
subb
mov
loopne
and
sbb
loope
push
mov
pop
jle
jmp
sti
jp
pop
jg
imulb
aaa
incl
xor
js
pop
xor
lcall
and
mov
shr
cs
push
jne
xor
fdiv
push
subb
ds
add
and
das
mov
sahf
inc
xchg
repz
inc
aam
daa
mov
dec
loope
scas
inc
jae
sub
ret
mov
xchg
sti
ret
mov
mov
jle
adc
adc
adc
sarl
inc
in
out
and
ret
into
enter
mov
cmp
push
pusha
sub
push
xor
jb
add
jmp
inc
lds
jmp
jg
frstor
add
ljmp
lods
incb
mov
sub
sbb
jecxz
dec
push
test
pop
pushf
test
xor
mov
mov
in
push
jnp
ficomps
push
gs
mov
or
xchg
in
cs
bound
mov
in
pop
pop
mov
ljmp
add
arpl
inc
add
ss
or
imulb
scas
outsb
pusha
mov
xor
ret
lds
sub
fisubrs
or
stc
aad
sub
mov
jp
inc
jge
push
sbb
div
fistpl
mov
aam
aad
lea
push
xchg
pop
sub
xor
gs
cmpsl
int
add
icebp
pop
fisubrs
repnz
outsl
mov
test
cmpsb
cmpsb
pop
mov
popa
xchg
dec
mov
sub
mov
add
dec
jne
sub
pusha
jecxz
sahf
imul
aaa
and
lea
movsb
sbb
int3
add
jge
inc
js
xchg
insb
jo
dec
cmc
mov
ret
or
daa
in
jae
arpl
mov
xorb
mov
sti
popf
push
lods
into
adc
cli
cmc
add
cmpsl
dec
sub
mov
nop
jb
sbb
and
xchg
imul
xlat
pop
fwait
in
popf
jb
xchg
stc
loope
dec
xchg
dec
cmp
jecxz
insl
sub
icebp
fsub
loope
je
leave
dec
negl
js
arpl
aas
dec
repz
jbe
imull
jno
daa
xchg
jne
lret
sti
dec
cli
mov
aas
in
inc
sbb
mov
pop
scas
xor
fnstsw
fs
stos
xchg
xchg
cs
mov
aad
xchg
sbb
xchg
sub
repz
ds
bnd
jle
jb
subl
pop
jns
xchg
aaa
push
cli
adc
jg
aam
fwait
cmpsb
sbb
jmp
out
flds
dec
mov
cwtl
cmp
push
ret
stos
or
push
xchg
adc
xchg
adc
call
mov
movsl
push
and
stos
or
sub
mov
xchg
jle
xor
bound
pop
pop
pusha
sub
or
sbb
jle
mov
lods
jne
and
push
xor
jecxz
pop
fs
inc
cmp
push
mov
stos
iret
inc
loop
rcrb
es
addl
cmc
loope
pop
xchg
test
push
fnsave
adc
add
test
lods
mov
mov
xchg
mov
xor
or
in
cs
jae
mov
jo
and
out
shlb
ss
inc
imul
jae
divl
cmp
scas
lock
push
sbb
jns
sarl
pop
push
lds
jno
lahf
add
jmp
cmp
mov
xor
jl
fldcw
jmp
ljmp
mov
jns
jnp
inc
cmpsl
xchg
pop
out
sti
sub
inc
outsl
pop
mov
xchg
mov
pop
or
add
push
andb
imul
jb
test
ljmp
cli
shlb
lds
loopne
sub
mov
add
xchg
adc
pop
stc
inc
sti
inc
out
xchg
xchg
inc
icebp
sub
fsubl
loopne
push
outsb
int3
dec
add
out
and
sbb
in
sti
pop
pop
push
mov
stos
inc
insb
fs
cld
pusha
add
aas
mov
scas
fwait
sub
push
jle
xchg
fdivs
lret
lods
scas
or
add
cvtpi2ps
aas
fwait
xchg
leave
push
cmp
mov
xor
outsl
bts
stc
sahf
roll
and
cli
xchg
leave
inc
popf
cmc
push
jo
inc
lret
jae
testb
pop
dec
movsb
inc
rcll
jp
mov
or
cmpb
jne
jg
jae
push
sbb
or
dec
push
lock
dec
adc
jmpw
cmp
pop
les
jecxz
xchg
mov
xor
test
or
hlt
lods
xchg
push
int
insl
out
test
cld
fisttps
sub
and
adc
in
inc
sbbb
insb
add
test
lock
out
mov
mov
rcr
xchg
mov
push
dec
daa
addr16
sahf
mov
mov
mov
push
cmp
sub
sbb
icebp
jne
jecxz
fwait
sbb
mov
sub
loopne
ljmp
mov
sbb
hlt
cwtl
test
sbb
push
push
lea
ljmp
icebp
js
enter
cs
xchg
mov
lahf
jo
mov
test
mov
jbe
mov
xchg
xor
push
ret
xchg
imul
adc
enter
addl
fisttpl
jno
iret
mov
arpl
pop
mov
movsb
hlt
sbb
das
shll
das
or
out
add
popa
ret
cmp
inc
int3
into
dec
fstpl
sbb
pop
bound
jne
cmp
mov
jle
icebp
push
adcl
sbb
xchg
cli
pop
dec
xchg
subl
mov
call
mov
sbb
cmp
xor
push
add
into
ss
mov
pop
jne
fsts
test
out
loope
ja
popa
pop
cmp
or
pop
sbb
std
adc
in
xchg
mov
test
pop
sbb
and
test
sbb
test
lret
push
sbb
test
andl
bound
push
outsl
pop
idiv
push
mull
xor
pop
sbb
mov
iret
push
stos
dec
push
mov
ja
add
scas
shl
subl
add
jno
jge
pushf
sbb
shrb
fsubrs
daa
push
outsb
or
mov
mov
ds
xchg
push
orb
dec
dec
push
scas
xchg
pop
pusha
es
mov
jmp
xor
nop
mov
in
enter
outsl
xchg
and
sbbb
xor
pop
push
cmp
insb
push
xor
cmp
sub
ret
sahf
mov
xchg
jae,pn
push
test
jno
andl
inc
or
bnd
lahf
mov
dec
xchg
imul
and
inc
aaa
add
rcr
add
scas
xchg
xchg
dec
ds
rcrb
push
mov
lret
mov
mov
nop
pop
pusha
int
ss
out
out
js
sbb
bound
push
fldl
shll
inc
dec
icebp
mov
pushf
inc
icebp
das
xor
fldl
addl
aaa
inc
clc
pop
out
mov
fdivrl
xchg
movsl
push
leave
pushf
push
add
gs
pop
mov
das
mov
js
ljmp
mov
jp
in
lret
xchg
mov
ret
and
fldenv
popf
pop
jb
push
bound
inc
negb
orl
cmc
add
js
rcrl
or
and
repz
out
cmpsb
lock
inc
test
rolb
outsl
cmpsl
and
inc
and
push
pop
in
in
lea
nop
inc
aas
ss
es
xor
in
cmc
icebp
fwait
jl
out
ss
cmp
cli
sub
int3
mov
ds
sub
in
cs
scas
push
rcl
popf
imul
sub
pop
sub
in
jg
push
xor
xchg
or
lcall
mov
bndldx
sub
and
lahf
leave
or
clc
test
movsl
mov
fwait
leave
or
mov
js
mov
jae
mov
pop
mov
iret
add
in
fbstp
cmc
sahf
xor
loop
fadds
insb
out
icebp
fbstp
movsl
mov
and
cmp
arpl
jg
sbb
mov
push
adc
in
jecxz
adc
jp
cmp
clc
sub
push
mov
add
roll
leave
testl
inc
jo
daa
cltd
inc
pop
push
gs
shlb
jb
xchg
sbb
mov
aaa
out
add
xor
dec
xchg
push
or
idivl
cmp
jo
jg
roll
xchg
pop
and
aaa
insl
filds
iret
xor
and
lcall
xchg
pushl
fidivrs
lods
adc
mov
fists
lods
pop
fmull
mov
and
xor
or
lret
cmc
les
inc
add
sbb
stos
lcall
push
sbb
andb
leave
mov
xchg
mov
dec
mov
fbstp
jno
sbb
call
push
mov
nop
inc
add
pop
mov
mov
cld
jge
adc
sub
push
mov
pushf
mov
stos
pop
rcrl
cmp
xchg
pop
fadd
outsb
and
sbb
movsb
test
out
clc
in
mov
in
ss
cmp
fldenv
jle
fiaddl
mov
pop
ljmp
in
dec
sub
scas
cmpsb
inc
mov
sub
push
dec
in
lods
sbb
adcl
iret
push
jno
sahf
mov
dec
and
inc
jns
pusha
sbb
imul
pop
xor
pusha
movsb
clc
xchg
cmp
inc
das
sbb
test
fbld
xlat
sahf
jne
jns
push
inc
gs
cld
and
lods
xchg
bound
in
mov
jl
adc
mov
push
push
in
mov
jae
enter
je
or
leave
adc
sub
stos
xacquire
xor
jae
es
jno
mov
jle
scas
push
insb
mov
lods
pop
cmp
leave
mov
cmpb
das
sub
and
aam
int
pushf
inc
pusha
mov
shlb
pop
into
cmp
daa
stos
in
ss
pop
push
popa
mov
rol
mov
jnp
sub
imul
sarl
mov
lock
inc
rcrb
sbb
jo
pop
jge
lret
adc
pushf
mov
xchg
stc
or
cmpsl
aam
aas
and
jo
outsl
and
push
movsb
jno
loope
mov
ljmp
int
add
fiadds
push
and
or
xor
stos
mov
fwait
test
leave
cmp
or
sahf
mov
push
mov
scas
aaa
xchg
or
bound
and
stos
lds
jbe
ljmp
lret
les
pop
ja
rclb
mov
xchg
push
lahf
push
xchg
or
ljmp
xchg
cltd
cmp
mov
jno
int
xchg
cmpsl
inc
dec
adc
add
sub
jp
sub
cmp
pop
and
rolb
enter
std
in
inc
pushf
jns
mov
and
jg
aas
jb
sti
inc
dec
js
jecxz
gs
ja
in
fs
push
xchg
loope
jmp
jbe
lods
jnp
push
push
les
jo
test
or
ret
mov
pop
shlb
adc
pop
add
push
cmpb
mov
mov
fisttps
mov
xor
stos
push
mov
mov
fadds
push
data16
jl
addr16
lock
bound
jle
aad
addr16
out
mov
or
fsub
mov
jle
out
in
add
add
jg
push
mov
in
icebp
cmc
pop
insl
pusha
jp
ljmp
imull
lret
in
out
out
jb
mov
icebp
rorl
fcoms
pop
mov
add
xchg
mov
dec
ss
xchg
rol
jns
aas
outsb
mov
push
aaa
mov
inc
mov
fstpt
jp
cld
mov
and
js
lea
mov
jne
xlat
mov
fcoms
fnsave
push
repnz
das
xor
jmp
lahf
iret
adcb
sub
add
shr
or
sbbl
ljmp
adc
fstl
iret
lret
aam
lret
loopne
aad
in
xchg
ja
sbb
test
mov
mov
js
mov
pop
sub
push
dec
outsl
sbb
mov
mov
mov
sbb
loope
mov
or
xchg
add
adc
jb
cwtl
mov
divl
ja
adc
fdivrl
push
push
xchg
mov
pop
ror
shr
sbb
or
pop
pop
clc
arpl
jmp
or
incl
test
imull
jmp
and
adc
clc
f2xm1
push
pop
mov
jo
mov
shlb
addb
push
dec
imul
sbb
daa
cmpsb
shlb
in
sti
in
arpl
mov
mov
sub
lock
daa
ja
lods
add
imul
mov
cmpsb
loope
stc
fcoms
mov
subps
mov
int3
popf
popa
ss
repz
mov
pop
mov
insl
enter
mov
lock
in
out
je
lret
fwait
inc
jo
lret
lret
subl
fmull
push
es
lcall
sbb
cmpsb
sub
loop
cld
je
mov
or
in
shll
push
outsb
je
jmp
cld
cmp
and
int
stc
repz
fiaddl
dec
or
inc
mov
imul
pop
mov
inc
jns
sbb
orb
mov
in
fidivs
mov
mov
out
pop
loopne
fwait
ja
in
lret
leave
fisttpll
mov
je
add
mov
inc
mov
outsb
ja
pop
into
jo
inc
mov
mov
sub
and
bound
fdivrl
cmp
std
push
dec
insl
arpl
cwtl
jno
add
mov
mov
add
aaa
dec
mov
int3
jae
pop
xchg
mov
xchg
cld
sbb
add
mov
fistpl
cmp
pop
jmp
xor
sbbw
iret
sarb
jns
lcall
out
ja
daa
sub
clc
popl
push
lret
ljmp
divb
push
out
addr16
aaa
pop
ja
loope
sbb
iret
dec
push
cmpl
mov
jl
jno
test
std
mov
jae
push
or
mov
xchg
and
push
cmp
mov
jns
ljmp
lea
and
cmpsb
loope
mov
or
out
adc
jb
or
iret
xchg
mov
sbb
or
fsubrs
dec
shrl
js
outsb
test
mov
mov
mov
in
repz
rorl
and
imulb
cmpsl
push
push
sbb
xor
mov
ss
inc
call
test
ficomps
xchg
subl
je
cmp
mov
lds
outsl
das
xchg
lods
jle
or
jmp
xor
pop
aam
xchg
lock
lret
icebp
xchg
sub
insl
sbb
lcall
pop
mov
xchg
dec
lcall
dec
jo
scas
repz
rolb
outsb
mov
mov
in
jle
mov
ret
andb
out
or
xor
add
sarb
sub
and
jb
movsb
roll
xor
adc
adc
cmp
rcrl
fisttpll
dec
pusha
test
adc
iret
jne
daa
mov
and
icebp
popa
xchg
cmp
add
pushf
std
push
dec
add
ret
xchg
test
cmp
inc
pop
adc
add
push
pop
inc
ret
mov
mov
xchg
call
or
push
jl
jmp
shlb
jl
sbb
cmpsl
xor
xchg
jae
pop
push
dec
xor
icebp
jecxz
movsb
cmp
pop
std
fwait
movsl
sbb
mov
inc
lcall
aam
lcall
fildll
sbb
pop
roll
jmp
sub
mov
test
sub
out
sbb
stos
in
pop
outsb
stos
add
jbe
add
mov
loope
push
add
insb
iret
je
arpl
xchg
jno
jns
loopne
fstpl
jge
cmpsb
stos
stos
dec
jp,pt
loopne
jnp
pop
cli
leave
pop
cmp
xchg
jp
add
or
ljmp
mov
stc
in
fxtract
movsl
int3
xor
int3
outsl
mov
sahf
shlb
shl
mov
scas
add
or
or
or
es
xor
xor
decb
adc
and
nop
pop
push
fsubl
out
inc
pop
adc
mov
push
xchg
outsl
sub
popf
inc
mov
mov
ficoml
aam
push
data16
jbe
ss
pop
test
sub
cltd
arpl
push
mov
xor
out
daa
add
jnp
add
pop
or
aas
iret
test
mov
jmp
add
mov
sti
jge
repnz
sub
shlb
dec
cltd
sbb
bound
hlt
loop
pop
mov
mov
pop
jmp
mov
sub
cmpsb
and
sub
add
xchg
adc
push
ja
cmpsb
mov
xor
or
insb
jge
enter
out
mov
push
or
sub
popa
fs
repnz
icebp
insl
lods
or
aam
jmp
ds
aad
jae
js
fiaddl
xchg
divb
pop
lea
imul
xor
xchg
lcall
and
inc
scas
add
cmc
sahf
ficoml
icebp
mov
inc
xchg
mov
imul
cmp
inc
jle
xchg
mov
cmpsl
loop
push
sbb
xchg
xchg
shlb
mov
xchg
mov
sub
or
lret
out
jns
in
call
mov
ss
push
xlat
mov
lea
add
cmpsb
out
lcall
in
pop
stos
test
lods
js
mov
cmp
push
addr16
push
scas
and
cmpsl
jae
mov
hlt
orb
pop
std
jmp
fnstcw
sbbb
sbb
mov
and
mov
inc
pop
loopne,pn
hlt
and
mov
push
int
out
push
push
xchg
imul
or
int
dec
divb
stos
and
xchg
adc
sub
int3
cli
inc
movsb
je
xchg
subb
cld
fs
loop
cwtl
stos
arpl
and
and
pop
lea
imul
das
or
scas
sub
sbb
mov
fmuls
push
add
scas
movsb
inc
fadds
movsb
mov
in
sbb
xchg
pop
or
lcall
pop
pop
leave
outsb
shll
in
and
ss
daa
lret
mov
jnp
mov
or
scas
mov
xchg
mov
subl
or
cmc
mov
sbb
or
xor
and
sbb
lea
mov
inc
or
ss
out
inc
aam
jmp
or
aad
orb
pop
cld
xchg
pop
push
test
push
xor
ds
jo
mov
and
into
fst
dec
scas
mov
adc
fsubl
insb
jb
inc
ljmp
cmp
test
mov
or
xchg
inc
push
rcll
pusha
or
mov
icebp
out
mov
sbb
rcrl
inc
fwait
dec
imul
pusha
lret
or
mov
cmc
sub
pop
xchg
imul
arpl
xchg
dec
and
push
in
imul
mov
orb
inc
call
imul
sar
adc
add
test
dec
xor
mov
xor
divb
mov
mov
pop
xlat
les
arpl
popf
stos
xor
xor
push
and
or
dec
add
insb
push
adc
jb
test
sub
xlat
psubsw
push
dec
pop
dec
or
dec
js
mov
xchg
out
divb
cmp
repz
mov
int
jno
xor
cmp
stos
fwait
and
dec
cmp
popa
sbb
push
leave
aaa
add
or
fsub
mov
notl
mov
push
es
dec
lock
jno
mov
neg
xor
add
cmp
test
push
xor
or
js
and
sub
lret
adc
test
adc
xorl
sbb
dec
lret
mov
dec
push
fidivl
stos
nop
dec
add
xchg
add
fisttpl
inc
pop
loop
mov
adc
pop
pop
mov
xchg
xchg
es
sub
jne
mov
add
call
lret
pop
sahf
xchg
and
lahf
mov
mov
pop
push
or
cmpsb
dec
cmp
xchg
push
stos
sub
mov
mul
out
xor
mov
mov
jl
xchg
xlat
dec
push
mov
push
mulb
shlb
add
jg
or
mov
lock
xchg
sbb
mov
dec
dec
popf
adc
xchg
cmp
or
adc
inc
pop
jmp
inc
shlb
sahf
ret
pushf
test
and
cwtl
jmp
and
cmpsb
mov
das
adc
in
mov
sahf
dec
mov
test
adc
add
scas
add
lea
cmc
mov
and
enter
add
inc
testl
orl
loope
test
xor
or
lds
test
les
cmpb
scas
sub
leave
lret
sub
xor
daa
add
outsl
inc
pop
xor
push
inc
sahf
pusha
pop
push
pop
ficompl
pop
outsb
sarb
sbb
mov
dec
int3
daa
xchg
push
loop
cmp
repz
sub
xor
mov
insb
xchg
mov
xor
cli
fidivl
stos
mov
addr16
arpl
push
mov
push
sub
repnz
inc
mov
cwtl
stos
xchg
gs
out
xor
mov
std
push
lock
sub
repz
mov
test
jae
scas
lock
inc
inc
jne
and
jecxz
mov
jbe
test
popa
js
push
mov
fstpl
mov
loope
sbb
bswap
sti
loope
fldenv
lret
mov
jg
jmp
or
lahf
pop
repnz
or
test
insb
inc
lods
dec
xchg
divb
lods
or
out
xor
add
repnz
popa
int3
dec
pop
push
loop
mov
out
pop
cmp
inc
clc
ljmp
out
mov
jns
test
adc
push
lcall
hlt
lods
dec
push
cmp
mov
jb
xchg
xor
mov
adc
mov
pop
ret
not
ret
add
jecxz
dec
add
jb
xchg
sbb
stos
pop
xchg
pop
sbb
imul
jmp
idiv
xlat
sti
stos
rcr
test
inc
pop
xor
add
push
inc
nop
mov
xor
pushf
fwait
daa
loopne
imul
setl
nop
data16
sub
cwtl
sbb
movsb
push
and
pop
mov
xchg
faddl
dec
jb
out
pop
add
vpsubd
xorl
xor
mov
sub
xorl
add
or
mov
xor
sub
ror
sub
xor
mov
subl
mov
adc
jmp
or
mov
hlt
jne
in
shrl
adc
addl
push
clc
les
enter
jg
xchg
insl
cmp
repnz
mov
movb
lods
data16
loop
cmpsb
xchg
fdivp
sbbl
pop
push
imul
xchg
dec
jg
cmp
sub
ss
out
insb
mov
xchg
lret
lock
daa
aaa
daa
xor
cltd
repnz
test
xor
mov
lret
cmpsl
outsl
js
stos
sti
cwtl
shr
cmp
xorl
sbb
popf
aam
shrb
lahf
sub
repnz
or
add
mov
cmp
rclb
sbb
or
cmp
dec
imul
pop
movsb
shl
scas
test
nop
out
fdivr
mov
icebp
scas
roll
sub
cmp
sbb
je
and
inc
push
lcall
loop
icebp
jae
out
adc
xchg
fadd
idivb
push
jmp
rorb
aas
mov
sub
fdivrl
sub
fiaddl
pushf
jg
punpckhwd
mov
push
popf
sti
pushf
mov
xor
cmp
inc
xor
push
lret
icebp
bound
inc
xchg
loope
add
push
mov
push
mov
dec
test
pop
adc
mov
stos
daa
or
pop
test
ja
repnz
pop
arpl
adc
addr16
adc
mov
repz
lods
cld
and
dec
fidivl
pushf
lods
lea
ds
mov
loopne
pop
jne
mov
cmpsb
in
jle
cmpsb
sbb
int3
fwait
mov
lcall
pop
movaps
pop
adc
lock
dec
movsb
jne
xchg
jne
sbb
push
in
dec
dec
loopne
pusha
mov
sbb
or
jae
shl
shll
mov
lret
pushf
daa
mov
mov
or
sti
sti
adc
inc
inc
lock
pop
xchg
movsb
dec
push
in
ja
mov
xor
mov
je
sub
mov
fcomps
cmp
outsb
sub
add
push
push
jg
adcb
xor
rcrb
mov
fdiv
add
out
addr16
leave
rclb
adc
shlb
ja
call
cmpb
lret
jae
std
and
xorl
cmpsl
ss
dec
add
test
out
stos
inc
cmp
subl
rorb
sub
mov
stos
scas
in
adc
pop
jge
mov
jns
mov
fnstsw
js
sbb
paddd
cltd
sti
inc
icebp
std
stos
mov
push
or
push
daa
ja
inc
and
fistpll
mov
rolb
les
sub
mov
sub
test
or
stos
test
mov
dec
push
mov
inc
cld
bnd
test
ss
stos
add
repz
int3
jge
push
jg
sbb
mov
xchg
dec
push
lock
push
mov
dec
pop
test
adc
push
sarb
je
je
cld
mov
mov
xchg
add
stos
repz
mov
inc
jle
inc
out
xchg
pop
sub
dec
sub
ss
dec
sarb
inc
movsl
sub
shrd
jnp
pushf
frstor
sarl
inc
push
push
mov
or
cmp
shlb
pop
mov
lds
into
sub
pop
xchg
and
fcompl
out
push
cmp
dec
aaa
fwait
sbb
test
dec
nop
adcb
aaa
jge
scas
insl
inc
push
fisttpl
jb
push
adc
and
mov
inc
and
xor
lret
inc
dec
rorb
xchg
adc
arpl
fsqrt
mov
push
add
lret
push
sbb
dec
adc
stos
mov
or
sbb
call
dec
xchg
cld
pop
ljmp
xlat
mov
mov
gs
pusha
cmp
mov
into
icebp
xchg
enter
and
push
in
mov
inc
sbb
inc
inc
fs
jo
ss
aaa
inc
mov
rcrb
inc
orl
aam
rcll
inc
out
sub
stos
xor
and
mov
xchg
fdivrs
leave
or
shll
mov
mov
mov
xchg
and
inc
movsb
push
jae
mov
insb
add
jmp
push
mov
lahf
push
mov
aaa
ret
xchg
lret
xchg
das
sahf
xor
subl
mov
dec
cwtl
mov
adc
jge
adc
call
das
sahf
push
xchg
cmpsb
adc
mov
or
jne
scas
pop
cmp
dec
push
sbb
push
push
xor
xchg
aas
pushf
and
lahf
dec
out
psllq
div
and
mov
pop
and
test
dec
cli
mov
xor
fidivs
hlt
add
or
les
hlt
fcmovnu
pop
js
idivl
xor
leave
inc
sbb
add
in
insl
scas
xchg
dec
stos
inc
push
pusha
dec
dec
out
pop
jmp
loop
or
lock
pushf
stos
repnz
mov
push
sqrtps
sarl
mov
add
pushf
test
pop
lahf
int3
jmp
adc
add
or
leave
jmp
icebp
xchg
aas
pop
int3
imul
test
jg
outsl
pop
out
movsl
mov
fwait
pop
add
divl
pusha
mov
fcomps
mov
je
popa
adc
pushf
sbb
hlt
subb
ret
lcall
neg
pop
das
mov
xor
aas
inc
fimull
push
xchg
mov
test
pop
aam
adc
adc
jle
cli
xor
mov
xchg
daa
vpor
lods
fimull
out
xchg
lds
adc
mov
adc
cmp
mov
ljmp
ja
jge
mov
xchg
mov
loope
xchg
enter
adc
cmp
iret
sarl
in
daa
xchg
ret
inc
repnz
int3
mov
cs
sar
cmc
cmpsb
aaa
pop
xchg
lods
jp
mov
cld
mov
pop
mov
xor
sub
js
ret
loope
push
or
arpl
movsl
lahf
dec
jg
push
lds
mov
in
xchg
sub
psadbw
adcb
xlat
je
daa
cmpsb
std
call
inc
add
xchg
jno
jno
or
popa
imul
jns
aam
push
pop
mov
ds
pshufw
mov
mov
mov
add
xchg
mov
mov
dec
loop
xchg
ss
int3
jae
dec
out
mov
addr16
sub
scas
cmpsb
xchg
pop
inc
pop
pop
out
fidivl
mov
jmp
jmp
fldenv
in
and
mov
cmp
clc
mov
push
sub
and
inc
lods
lods
sbb
xchg
scas
fcoml
inc
leave
sbb
loope
in
aam
stos
lods
mov
and
xchg
push
sub
inc
cmp
mov
mov
ja
xor
push
push
cmp
stos
cmp
adc
rclb
xchg
xchg
inc
shlb
jp
leave
out
lret
ret
adc
dec
imulb
ret
clc
xchg
dec
add
sub
loopne,pt
adc
addb
or
pop
lcall
into
stos
call
inc
ljmp
cmpsl
xchg
subb
inc
adc
mov
lods
dec
jmp
dec
ret
lret
dec
nop
jmp
add
mov
pop
or
mov
ret
out
mov
mov
sub
lahf
pop
sbb
outsl
and
adc
std
mov
ja
jg
ss
insl
xor
cmpsb
jo
push
cmp
xor
arpl
dec
pop
mov
xchg
pop
jnp
aam
dec
jg
idivb
add
sbb
pushf
mov
lahf
js
xchg
ds
out
push
inc
sub
sbb
clc
push
pop
xchg
fwait
into
in
xchg
jo
xchg
pop
xchg
rcl
insl
mov
stc
dec
xor
insb
sbb
sub
inc
hlt
and
daa
popf
ret
xor
jae
xorl
mov
addr16
xor
add
lods
jb
repnz
nop
dec
sub
sub
cmp
push
mov
add
xlat
repz
jae
sub
or
lds
daa
mov
lret
fnstsw
cmp
add
mov
bound
sub
push
aad
or
lcall
sbb
xor
sub
xor
in
xor
adc
daa
jl
in
cmp
ja
jo
mov
push
rcll
std
mov
pop
or
inc
addr16
loope
pop
xor
dec
gs
cmp
adc
mov
sub
pop
mov
push
test
subw
cmc
mov
cmp
fstps
shll
xchg
pop
dec
sub
pop
imul
adcl
pop
jmp
jl
call
dec
add
test
movsb
sbb
je
lret
outsl
sahf
jno
jo
push
mov
and
outsl
enter
aad
push
inc
cmp
repnz
popa
faddl
bound
push
mov
aaa
aas
insb
rolb
xchg
sbb
insl
xchg
in
stc
and
iret
jae
jl
push
pop
cli
mov
nop
insl
popa
shrb
or
je
xchg
fcomi
int3
fadd
pop
or
ss
jne
mov
insb
icebp
add
cmp
lcall
jne
inc
push
imul
mov
sub
fisubs
rorl
fstp
xor
imul
xor
sbb
adc
mov
push
jmp
cwtl
rcrl
pop
cmpsl
push
adc
pop
int3
sbb
sbb
adc
sbb
and
mov
xor
push
ficompl
adc
adcb
inc
shlb
jae
nop
jae
fists
pop
arpl
leave
adc
jecxz
mov
xor
push
sub
cmpl
and
mov
mulb
lock
outsl
jo
icebp
jecxz
push
imul
jno
or
xor
mov
cld
fsub
leave
scas
stos
stc
rorl
test
mov
dec
cmp
mov
lahf
arpl
ja
fs
repnz
sub
push
and
les
cmp
xchg
pushl
jnp
sbb
movsb
in
subb
mov
ret
decl
sbb
loope
sbb
lret
movb
out
pushf
cmp
cmc
loop
jg
jbe
or
fnsave
or
bound
out
ljmp
inc
add
enter
push
dec
in
into
or
mov
aad
sbb
fistl
ret
fwait
jo
fidivrl
push
mov
fsubr
in
push
ss
pop
repnz
jl
popa
mov
dec
adc
lods
rcll
out
test
pop
dec
dec
mov
adc
rcr
icebp
stos
fsubr
xchg
mov
pop
ljmp
add
inc
into
xchg
jns
pop
mov
out
sti
xchg
dec
add
push
xchg
pop
scas
mov
lahf
sub
insl
in
jae
add
sub
sub
lret
jle
sbb
shl
lods
lcall
mov
dec
pop
mov
repz
mov
dec
jb
jo
daa
push
sbb
stc
xchg
sub
ja
sub
cmpsl
xchg
mov
shll
fdivr
jg
neg
mov
leave
add
fst
loopne
mov
enter
jnp
cmp
cmp
insl
pop
sub
xchg
subl
mov
dec
sbb
push
xor
and
or
sub
lods
fistpl
lock
dec
negb
mov
adc
call
xchg
inc
incl
jns
les
popl
repz
adc
sbb
cmp
repnz
lock
mov
fcom
sub
aaa
cmp
fidivrs
lods
xlat
and
lock
sbbl
imul
push
movsb
push
sub
mov
outsb
nop
lods
dec
imul
push
into
out
sar
sub
ja
or
out
pop
idivb
mov
xchg
push
inc
cmp
jb,pt
inc
aaa
icebp
test
lret
mov
lds
sub
pop
xchg
add
inc
mov
pop
das
sub
fidivrl
lret
dec
gs
pop
cmp
jbe
push
dec
in
ffree
enter
push
xchg
out
sub
mov
mov
enter
mul
movsl
out
insl
out
adc
insb
insl
jno
icebp
fsubrl
xchg
and
push
pusha
fs
stc
aad
jnp
cs
xor
or
xchg
push
test
shrb
inc
jno
popf
mov
hlt
push
or
aad
leave
leave
fistl
test
cmp
dec
out
lcall
pop
out
sub
hlt
xchg
adc
mov
dec
pop
lret
or
add
fisttpl
loope
repnz
sbb
je
push
mov
int3
cli
aas
push
leave
out
cmovae
das
cmc
inc
sbb
push
cli
mov
jae
sub
inc
test
test
dec
aad
out
mov
test
flds
jecxz
cmp
clc
enter
jmp
adc
push
je
sbb
mov
mov
push
adc
leave
in
out
icebp
data16
xor
mov
iret
aam
std
call
push
test
test
push
xchg
jns
sar
mov
scas
mov
dec
inc
repz
push
or
push
les
pop
pop
and
adc
and
adc
inc
dec
or
mov
pusha
jae
adc
mov
fxch
jnp
into
xlat
add
push
fcomp
das
into
jmp
mov
repnz
mov
mov
imul
loopne
clc
inc
repz
in
inc
dec
or
xchg
push
loope
gs
inc
lcall
jne
bnd
frstor
add
out
pusha
sub
out
sbb
sub
loopne
stos
je
jno
xor
test
loop
shl
test
or
push
je
cmc
pop
mov
popf
add
or
out
jne
negl
js
lret
fsts
les
mov
inc
call
inc
ret
and
add
sbb
nop
jb
sub
hlt
jne
fldenv
inc
pop
pop
and
push
jg,pt
gs
jmp
data16
imul
and
mov
add
sub
mov
mov
decl
data16
mov
mov
add
xchg
xchg
call
or
int3
xchg
mov
cmp
xor
roll
lret
sub
scas
pop
mov
push
mov
imull
adc
mov
mov
lods
mov
pop
les
sub
push
out
sub
sbb
les
mov
idivb
into
add
xchg
mov
shll
cld
push
test
mov
or
cltd
es
push
roll
inc
into
inc
insb
jno
mov
sub
inc
xchg
shrl
jecxz
mov
into
leave
ss
scas
cmp
add
mov
xor
outsl
inc
es
test
fs
sbb
xor
and
sarb
sub
mov
mov
test
xlat
lods
cmpl
lcall
add
xchg
into
push
jnp
pop
nop
into
adc
xor
and
subb
js
mov
xlat
inc
pop
lods
sarb
cltd
ret
mov
ret
pop
pop
aaa
sub
out
xchg
daa
jle
mov
cmc
cmpsb
test
jno
cmp
hlt
outsl
jmp
mov
xor
lret
xchg
sub
push
iret
fstpl
movsl
sbbb
pop
jp
inc
push
sub
mov
xor
addr16
xlat
das
and
or
fldenv
inc
or
inc
ss
push
push
xor
cli
loopne
xor
push
sbb
xchg
mov
xchg
push
aam
pop
mov
and
add
test
lock
aas
movsb
pusha
mov
mov
or
cs
inc
nop
jbe
mov
push
add
cmp
iret
shlb
jo
test
out
fidivrs
push
mov
push
loope
mov
mov
shlb
or
wrmsr
mov
iret
ljmp
rolb
xor
insb
mov
ret
fildl
lea
stos
pushf
hlt
pushf
fimuls
jne
aad
arpl
cs
jmp
mov
popf
ficoms
mov
addb
jne
push
cmp
xor
and
push
mov
test
fdivs
stos
push
xchg
shl
jne
insb
xor
jp
or
cwtl
ljmp
ffree
sbb
or
lods
push
or
xchg
mov
ret
fsubr
int
sbb
bswap
mov
jmp
push
movsb
and
scas
sbb
das
lret
shr
scas
xchg
mov
mov
mov
and
test
xchg
mov
add
cmp
cltd
sbb
insb
ffree
cmp
add
sbb
cmc
sub
mov
test
ret
adc
mul
dec
sbb
out
mov
scas
mov
insl
cmp
repz
cli
fbstp
cmp
cltd
pop
push
sub
dec
cltd
enter
pop
orb
or
aaa
add
inc
xchg
test
push
pop
dec
sahf
aad
sbb
jae
out
sahf
jbe
push
cmp
pushf
je
cmp
repz
cmp
in
clc
adc
lds
popl
mov
mov
stos
mov
test
add
adc
fcoml
ficompl
adc
cmp
or
icebp
push
lock
adc
fstpt
in
aam
adc
push
jno
adc
mov
in
inc
xchg
jmp
es
xor
fsubrs
pop
inc
jo
in
jp
and
aad
idiv
and
xacquire
jns
and
lds
mov
out
push
orl
mov
mov
mov
bound
fiaddl
faddl
scas
loop,pt
jp
xchg
sbb
ljmp
shl
add
add
xlat
xchg
jl
xchg
jns
fwait
outsl
loop
lock
mulb
mov
mov
pavgw
mov
adcb
jg
inc
aam
xchg
jns
xchg
loopne
ljmp
dec
sar
shrb
push
xchg
sub
sbb
loopne
aaa
fisttpll
test
or
sub
xchg
mov
jns
arpl
ds
pop
shlb
notb
ds
sti
mov
lds
lea
insb
cmp
movsl
mov
lret
push
leave
pop
call
in
jecxz
or
fildl
andb
and
rorl
sub
jl
xor
add
cmp
aad
data16
enter
int3
jno
stos
ret
push
dec
add
cwtl
xor
popa
xor
and
mov
adc
loopne
pop
add
nop
inc
mov
insb
enter
fdivrs
ds
jae
pop
inc
cs
iret
sub
cli
repz
rol
arpl
mov
lods
or
jl
jbe
lea
aam
push
push
lods
inc
sbb
aas
sub
in
les
daa
ljmp
pop
cmp
ror
fisttpll
addl
sti
decl
rcll
sti
dec
mov
lock
ja
pop
xor
inc
cmpsb
inc
sub
xor
hlt
jnp
adc
sub
loop
add
decb
xchg
dec
fwait
movsl
push
adc
inc
lods
inc
iret
out
iret
fsts
push
es
aam
adc
out
cli
popa
xor
xor
subb
aaa
xlat
stos
inc
lahf
xor
movsl
jl
push
push
dec
cmp
adc
pop
push
push
push
adc
and
or
cld
push
cmp
add
repz
jno
fcompl
sub
out
pushf
mov
fisubl
add
pop
aad
pop
iret
sub
in
pop
add
bound
jns
out
fistpl
insb
jp
pop
sbb
cmp
sub
cltd
stos
in
or
pop
call
mov
xchg
xchg
repnz
aam
popa
pop
out
sub
call
scas
jbe
dec
aam
dec
xchg
or
cmpsl
mov
imul
mov
popf
imul
div
xor
rclb
lock
je
or
sub
jecxz
sub
iret
push
add
scas
or
aad
fsubr
sbb
insl
fwait
clc
jmp
sbb
add
in
call
mov
insb
pop
dec
mov
lcall
mov
add
lods
ja
stc
jmp
popa
mov
pop
mov
pop
push
je
mov
xor
out
add
push
add
rep
add
mov
mov
ds
jmp
pop
inc
push
int
dec
dec
sti
cmpsb
mov
push
imul
loop
xor
fnstenv
push
pushf
fwait
and
fs
sub
cld
cli
mov
fcompl
adc
xchg
notl
fldl
sub
icebp
jmp
stos
out
jle
mov
mov
adc
stos
mov
push
mov
mov
mov
test
dec
testl
sub
add
movsb
lods
aas
addr16
xor
dec
loop
mov
adcb
sbb
shrb
mov
jae
push
mov
test
jo
lret
xchg
pop
adc
sbb
push
cmc
bound
inc
lea
addr16
cwtl
push
pop
cwtl
and
add
hlt
test
mov
push
scas
addr16
orb
adcl
cmp
and
sbb
adc
nop
ficoml
in
in
fimull
adc
adc
xor
adc
in
bound
mov
and
call
mov
push
mulb
int
inc
xor
clts
scas
or
dec
nop
or
adc
mov
or
jp
xchg
push
in
jge
test
pop
cmpsb
jno
push
shrl
std
leave
test
sub
cld
mov
sbb
jns
push
dec
imul
pushf
loopne
inc
pop
mov
pop
push
mov
outsb
decb
or
push
insb
pushf
lea
adc
fs
xor
cli
and
repz
cltd
mov
adc
push
mov
movsl
fcompl
movsl
ljmp
pushf
lock
loop
pop
vdivpd
lcall
sbb
movsl
mov
inc
push
je
or
mov
fistl
pop
cmpsl
push
test
mov
cmpsb
mov
xor
pop
arpl
pop
addl
and
sahf
sbb
push
mov
push
insb
jbe
gs
dec
mov
and
cltd
js
xor
pop
mov
ret
xchg
mov
inc
mov
jg
jp
movsl
push
out
cwtl
adc
push
fsubr
push
jbe
inc
pop
lds
or
in
mov
xchg
filds
and
in
push
pop
dec
rolb
mov
idivl
sti
clc
shrb
cltd
inc
cmp
clc
dec
dec
mov
mov
popa
lods
lods
pop
push
dec
bound
push
dec
sbb
sub
loopne
inc
mov
cltd
add
sbb
cli
loopne
xchg
stos
arpl
push
jno
and
movsl
sbb
xor
push
inc
into
mov
or
lret
ljmp
push
fdiv
xchg
mov
dec
jmp
fldl
pop
jp
xchg
sub
test
std
or
bound
sbb
dec
rcl
inc
jmp
cmp
std
test
xor
lods
add
int
loopne
icebp
jmp
cmc
cmp
jae
dec
jle
mov
popf
imul
jnp
xlat
imulb
or
sbb
es
in
mov
sub
das
and
mov
pop
loop
mov
pop
mov
mov
pop
dec
fwait
xor
xchg
dec
jb
add
sti
gs
aas
mov
cmp
or
pop
jns
sub
insb
sub
sahf
call
shrb
fs
cmp
test
add
ret
pushf
add
pop
jmp
jae
cmp
xor
fsub
imul
ss
or
test
lcall
repnz
inc
mov
xchg
push
jae
out
ret
and
mov
iret
adc
sbb
sub
in
pop
inc
xchg
inc
add
mov
mov
sbb
xlat
xchg
mov
add
fcmovbe
lods
mov
jl
test
inc
push
jnp
sub
rcl
lods
or
test
xchg
stc
scas
gs
aaa
aam
sbb
jge
cmp
std
pop
mov
arpl
ss
sub
test
aas
dec
jmp
sub
mov
cmc
fsubr
jbe
mov
insb
mov
daa
cmp
push
mov
hlt
add
pop
outsl
mov
xchg
xor
loopne
dec
cmpsl
jb
aad
dec
cmp
mov
adc
push
dec
xchg
movsl
adc
daa
xchg
adc
adc
je
xchg
out
ret
inc
push
mov
les
dec
push
xchg
popa
lret
dec
cld
mov
bound
pushf
inc
dec
fldl
push
xchg
lcall
jl
mov
in
sub
mov
push
jbe
outsl
cmp
xor
sbb
xlat
clc
push
and
inc
ret
cs
add
out
mov
xchg
cld
cli
out
into
jae
into
pop
mov
adc
imul
pop
testb
dec
cmp
mov
inc
arpl
and
sub
sub
popa
lods
or
sbb
xor
adc
int3
fisttps
push
das
cmp
sub
mov
push
popf
or
call
das
and
test
pop
add
jnp
inc
jl
test
push
movsb
mov
jmp
pop
mov
or
orb
adc
pop
xchg
mov
pushf
popf
adc
shlb
cmpsl
jmp
cmp
jno
out
dec
test
lock
xchg
adc
shlb
dec
daa
pop
xchg
push
arpl
dec
lods
fadds
stos
out
mov
mov
icebp
and
push
loope
jl
mov
es
push
jp
inc
fwait
loope
inc
fwait
sahf
cmp
push
sbb
cmp
xchg
jle
loopne
sahf
jl
mov
shl
and
les
les
jmp
rolb
sbb
ret
dec
mov
daa
and
std
stc
cltd
stc
adc
je
push
mov
jmp
xchg
hlt
popf
jecxz
mov
rorl
lret
sbb
adc
popf
and
stos
and
fildl
inc
xlat
fs
sub
xor
sub
icebp
pop
adcl
inc
out
add
xor
out
repnz
lock
sbbl
add
popf
and
inc
push
stos
and
or
rorl
sqrtps
scas
arpl
scas
js
or
dec
pop
xchg
mov
add
mov
mov
add
stc
dec
jns
imul
jp
loope
add
popf
cmp
fs
addr16
clc
mul
in
adc
pop
into
cmp
mov
out
push
and
cmp
gs
clc
mov
xor
cmp
pop
repnz
hlt
pushw
xchg
es
inc
out
xor
std
fwait
inc
inc
sbb
lods
fbld
push
push
sub
movsb
xor
dec
movlps
mov
adc
lods
lods
xchg
insb
inc
bound
das
add
scas
and
adc
mov
outsb
ficoms
add
jno
mov
rclb
leave
sub
push
add
stc
popa
mov
pop
shll
lds
sbbb
test
loop
xor
rcr
dec
out
das
inc
add
pop
ds
mov
jl
mov
mov
data16
jb
jmp
fsubrl
addr16
jl
jg
std
std
ret
inc
rorl
cmpsb
mov
inc
pop
cmp
mov
loop
push
jecxz
leave
add
add
or
xchg
inc
sarb
fisttpll
sti
cli
ds
xchg
fisubs
loop
ror
pop
mov
sbb
xlat
addl
add
xchg
popf
dec
inc
mov
pop
inc
add
cli
push
aam
aam
xor
xor
xchg
ljmp
jae
nop
mov
jns
xor
pop
mov
or
pop
xlat
imul
lds
arpl
fdivr
arpl
or
out
stos
xor
pop
cwtl
out
sahf
push
daa
dec
sub
mov
movq
stc
cmc
push
jns
adc
sub
fimull
lret
test
mov
xchg
pop
xchg
pop
lret
jg
fists
or
hlt
jae
repz
je
jmp
xor
xchg
xchg
das
mov
les
add
xchg
xchg
fimull
and
inc
insb
sub
sub
loop
jbe
test
push
lret
push
cltd
wrmsr
jmp
loope
jecxz
fsubr
cmp
std
jmp
ret
sbb
pop
in
dec
fidivrs
aaa
or
daa
cli
jae
cmp
cmc
ja
dec
pop
gs
inc
pop
test
out
cmpsl
and
xorb
sub
in
loope
xlat
dec
mov
hlt
ss
stc
test
xor
js
ss
pop
sbb
imul
cwtl
dec
sbb
cli
xchg
jg
cmpl
arpl
stos
push
pusha
adc
push
in
outsb
adc
out
adc
xchg
mov
mov
pushf
les
call
jmp
mov
aad
jmp
inc
push
mov
seto
idivl
outsl
add
insl
ds
movsl
lds
outsl
std
mov
push
iret
sub
jne
popl
jnp
sbb
testb
sub
insb
aad
sub
outsl
mov
adcb
cwtl
mov
nop
rolb
rolb
out
pop
jbe
sub
xor
sbb
nop
imul
scas
mov
insl
jb
inc
je
data16
shr
xor
jecxz
ljmp
cli
xor
dec
cmp
shlb
icebp
adc
and
clts
sbb
movsb
mov
out
outsb
ja
cmc
pop
xchg
arpl
xchg
pop
mov
and
mov
dec
adc
in
push
out
dec
adc
adc
fildll
mov
and
inc
cmpsl
push
cld
inc
ljmp
roll
daa
movsb
mov
xchg
and
test
ds
add
popw
test
mov
stos
push
push
pop
cmp
sbb
mov
xchg
mov
pop
sub
mov
into
pusha
xchg
and
in
fs
sub
enter
pcmpgtb
mov
or
jne
push
outsb
pop
ds
sbb
mov
jbe
mov
sub
pop
dec
pop
imul
xor
xchg
xor
and
in
pop
aas
clc
push
ds
sbb
iret
xchg
inc
pop
mov
in
jp
inc
cmp
pop
dec
data16
dec
movsl
roll
adc
xchg
add
movl
mov
push
pop
rorl
out
xchg
andb
fidivrs
cltd
inc
push
vmovapd
in
dec
dec
stos
inc
push
jmp
or
or
out
pusha
xor
lret
add
out
aaa
stos
sahf
cmp
pop
jno
push
pop
loop
imul
push
jmp
ds
enter
fisttpll
dec
lcall
pop
push
inc
leave
mov
adc
mov
subl
sub
andl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
andl
xor
sbbl
inc
ret
push
mov
sub
movzwl
sbb
movl
push
addl
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
jmp
mov
orl
push
xor
xor
or
mov
mov
xor
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
pushl
call
jmp
mov
subl
test
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
subl
mov
adcl
xor
add
mov
mov
and
mov
adcl
mov
xorl
xor
add
decl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
movzwl
or
add
mov
mov
sbb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
call
jmp
add
mov
sbbl
sub
adcl
lea
incl
xor
xor
cmp
movl
je
mov
xor
add
movl
cmp
jne
xorl
pushl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
addl
jmp
sub
mov
pop
or
mov
andl
addl
or
jle
std
mov
fstpl
popa
push
les
add
jb
jl
and
xor
sar
sbb
dec
lret
or
movnti
jle
mov
ja
daa
jge
mov
enter
ds
arpl
dec
push
cmpsb
inc
int3
lock
xchg
jae
sbb
popa
outsb
out
mov
dec
stc
rolb
js
or
repz
xor
and
mov
loop
repz
std
mov
sub
sbb
aaa
cmp
jg
dec
int
mov
xor
mov
mov
or
push
push
cmc
jb
stos
xchg
sahf
or
xchg
loopne
sbbb
pop
jb
add
adc
and
and
lea
subps
lret
push
pop
fsubrl
cmp
adc
mov
icebp
push
mov
insb
insb
xor
xor
or
mov
aad
mov
nop
ja
rcrl
xor
mov
xchg
fisubl
xor
sti
dec
les
and
cmpsb
sbb
mov
insl
xor
pop
pop
jg
adc
add
cld
or
sbb
jecxz
sbb
cli
test
jecxz
sub
out
in
push
push
and
cmp
sbb
or
push
xchg
adc
add
dec
add
int3
mov
in
mov
dec
xchg
frndint
fxch
inc
fcmovnu
sub
inc
out
clc
or
xor
mov
push
lahf
ljmp
xor
xor
imul
fcmovbe
int
pushf
in
push
gs
in
sub
jno
arpl
mov
pushf
icebp
adc
mov
ja
das
xchg
adc
jb
imull
pusha
jno
test
adc
loopne
movsl
rcrl
in
stos
sub
mov
and
and
cmp
jnp
imul
ja
popa
sub
call
mov
lea
pop
mov
cmc
mov
mov
sbb
shr
fsubr
movsb
inc
cltd
inc
sahf
pop
js
cwtl
fisttps
icebp
mov
xchg
imul
ret
int
jp
push
jmp
lcall
push
xlat
mov
int3
cmpsl
pushw
and
daa
repz
ret
adc
jg
jle
mov
push
ljmp
mov
or
cmc
xchg
jbe
push
xchg
xchg
push
stos
xor
mov
testb
or
negb
jne
cmpsb
mov
pop
aaa
sbb
add
cmpsb
das
jns
jg
cmp
fdivl
stos
lods
test
mov
loopne
out
bts
adc
cltd
push
andl
fs
mov
mov
std
bound
sub
mov
aas
xchg
adc
movsb
sbb
xor
insb
pop
aas
stos
cmp
mov
mov
jne
mov
xor
lds
sub
sub
into
imul
movsb
call
es
sbb
push
js
pop
fiadds
jo
sub
ret
adc
pop
adc
dec
mov
dec
inc
xchg
hlt
clc
mov
popa
xor
sub
or
imul
fstl
les
pop
jno
pop
mov
fcmove
add
add
mov
mov
mov
jo
jge
jnp
or
fidivl
aaa
in
cmp
xor
repnz
jnp
insb
jge
jb
dec
add
lods
pop
es
mov
les
mov
ffreep
dec
sub
pop
shl
aam
mul
pop
push
es
cmpl
push
test
fs
sahf
or
jmp
cmp
stos
stos
pop
fs
sub
aaa
push
jns
fs
dec
outsb
add
mov
pop
jmp
hlt
sub
pop
jmp
lahf
lea
sbb
jne
xchg
push
or
lret
mov
packuswb
xor
pop
repz
pop
or
fisubl
mov
movl
jo
mov
call
out
xor
ficomps
inc
push
stos
or
cmp
cwtl
xchg
sub
neg
cmp
outsb
mov
pop
ror
mov
sbb
flds
push
mov
ds
or
jae
sub
or
mov
mov
mov
shll
ds
jg
xor
adc
mov
jo
ja
pop
lea
xlat
pop
sbb
xchg
test
xchg
lret
fsubp
popf
inc
mov
inc
inc
popa
ss
les
out
jb
push
pop
sarl
aad
jne
sub
test
mov
mov
out
push
icebp
push
or
sarl
out
test
mov
pop
adc
push
inc
gs
adc
sbb
push
fcoms
mov
adcb
sbb
aad
sbb
stos
mov
test
xchg
xchg
jo
mov
jb
jge
mov
xchg
mov
cmp
push
arpl
xchg
sti
jmp
pop
enter
clc
movsb
pushf
xor
movsb
sti
fs
dec
sbb
mov
cmp
push
mov
pop
icebp
frstor
mov
ljmp
jb
push
xor
pushf
repnz
imul
jmp
jbe
inc
dec
lret
dec
aaa
je
mov
add
or
pushf
xchg
fs
push
bound
mov
jecxz,pn
inc
movsb
sub
fimull
cmp
dec
stos
arpl
sub
add
and
push
add
jge
jg
call
or
jecxz
dec
sub
sub
mov
int
sbbl
adc
into
das
push
add
xor
das
ficomps
push
popa
movsb
loop
push
inc
push
and
cmp
enter
mov
aas
sub
lcall
jns
lcall
add
xchg
cmp
stos
or
mov
stos
push
data16
and
xor
sbb
out
pop
mov
cmp
ret
adc
loopne
adc
mov
and
std
cmp
inc
shlb
lcall
xor
push
jg
mov
aam
sub
mov
addr16
jae
ret
mov
test
mov
sahf
pop
fwait
jae
mov
pop
mov
fsubl
push
push
dec
xchg
sbb
dec
cmpsb
repz
ret
push
sbb
mov
repnz
adc
inc
pop
fsubs
jp
fstpt
add
jge
popf
movb
nop
push
cmpsl
jp
cmpl
lods
call
loope
sahf
call
in
cmpsl
jmp
popa
and
pop
xchg
mov
sbb
das
and
or
inc
jge
out
sub
cld
das
xor
mov
out
aas
lcall
in
inc
std
shlb
sbb
mov
dec
leave
add
insl
setb
out
ss
out
add
out
xor
jge
daa
mov
adc
imul
add
out
scas
dec
insl
cwtl
in
call
test
inc
inc
add
mov
inc
add
jae
jg
negl
data16
fcmovne
aad
cmp
ljmp
divl
scas
push
outsb
test
lods
push
test
daa
push
fs
outsb
cmp
mov
sti
inc
push
psubsw
psubsw
in
push
or
into
xlat
cmp
jno
inc
adc
dec
cmpsb
adc
fiaddl
jne
sbb
mov
ret
mov
imul
pop
sub
jl
mov
xchg
imul
inc
mov
add
pop
cmpsb
sbb
inc
movsb
into
ficomps
mov
sub
insb
xchg
outsb
and
xor
xor
psraw
mov
mov
stos
adc
es
xlat
push
jb
xchg
aad
int
std
xor
into
enter
fs
or
sub
ds
in
ss
adc
sub
imul
jbe
xchg
je
cmpsl
jno
cmpl
outsl
inc
fistps
jg
mov
mov
pop
xor
ja
int3
mov
xor
push
jns
xor
sbbb
popf
or
out
sbb
cltd
lcall
cmp
mov
and
mov
ror
adc
rorb
inc
arpl
cmp
popf
pushf
test
pop
xor
shrl
in
and
shlb
jae
sbb
imul
dec
and
push
dec
enter
pop
je
jmp
rorb
xor
in
aad
fisttpl
add
cs
push
add
clc
xchg
into
repz
xchg
out
call
xchg
les
or
jns
ja
sub
fdivs
jge
lock
test
pop
adc
int3
mov
jp
imul
pop
adc
add
add
or
jle
outsl
loopne
les
add
leave
faddl
test
add
out
fs
jno
ret
aam
scas
outsl
bound
out
xor
mov
inc
fwait
or
mov
mov
mov
mov
mov
cmpsb
cmpsl
mov
pop
cmp
std
cmp
jnp
rolb
dec
lods
mov
xchg
shll
cmp
and
pop
add
aas
imul
lret
cmp
fists
jbe
push
lds
mov
repz
movsl
xor
mov
mov
or
push
in
xchg
out
fwait
out
jo
in
push
in
fisubrs
lahf
add
add
ss
fnsave
dec
orl
mov
addb
daa
jae
jmp
mov
iret
fildll
mov
fsin
enter
add
mov
xor
and
jbe
mov
out
mov
mov
popf
pushl
data16
mov
lds
into
movsl
mov
sub
and
call
addb
popa
std
int
mov
movsb
jns
xchg
or
decb
cltd
in
xor
scas
fs
adcl
jns
dec
idivl
xor
xchg
aad
fcomps
fwait
out
scas
mov
jmp
stos
xor
sbb
data16
mov
decb
mov
xor
into
mov
xor
pusha
and
dec
into
dec
loop
sbb
popa
or
or
lcall
jb
jnp
arpl
mov
iret
jne
xchg
dec
jge
jb
fnstenv
jg
add
scas
addb
fdivs
shl
mov
into
js
outsl
popf
fdivs
dec
xor
cli
dec
pop
xlat
mov
repnz
mov
adc
stc
mov
cmp
sbb
pop
sti
push
add
add
sbb
imul
jg
imul
enter
and
out
mov
cli
sahf
and
xchg
lret
sub
rorl
ret
push
repnz
cmp
adc
xchg
inc
adc
xchg
add
mov
insb
nop
mov
arpl
add
adc
lea
stos
cmp
lcall
cmpsl
jge
xchg
arpl
sbb
adc
pop
mov
mov
lods
imul
xor
loope
sbb
sbb
outsb
shlb
jle
movsl
cltd
sub
imul
dec
mov
cmc
sub
push
les
jl
cli
lret
inc
lods
lea
shlb
pop
xchg
push
ljmp
and
add
scas
or
leave
ret
mov
popa
dec
mov
jl
lret
outsl
fs
std
add
mov
mov
mov
dec
fnstcw
jg
loope
jne
bound
cmp
push
or
pop
adc
pop
and
ja
shll
hlt
scas
mov
pop
lock
xor
mov
jbe
xchg
xchg
ret
je
sbb
push
mov
clc
pop
dec
sub
adc
xchg
movsb
bound
pop
mov
je
decl
pop
pushf
lret
dec
inc
pop
jnp
jae
movsl
out
jbe
out
sub
xchg
pop
adc
fincstp
cmpsb
jne
jge
sbb
push
xchg
pop
inc
shl
push
insl
loop
movsb
jl
push
insl
adc
adc
jo
push
mov
push
mov
push
add
xchg
insl
push
movsl
int3
ret
fsubrs
repnz
xchg
pop
cmp
lret
cs
adc
or
xchg
out
negl
xor
outsl
dec
sub
cmp
and
adc
xchg
xor
sub
sub
lret
sarb
sub
cmpsl
imul
pop
addr16
xchg
insb
pop
push
inc
sbb
adc
ss
lret
gs
ljmp
add
sub
mov
xchg
push
inc
adc
in
rorb
sbb
lods
xor
in
or
mov
inc
sti
dec
mov
out
cli
movsb
les
sti
arpl
mov
inc
xor
in
and
dec
mov
and
sbb
scas
sbb
jb
pop
or
pop
dec
mov
adc
or
movsb
xlat
and
sbb
pusha
mov
push
xor
lock
mov
nop
stos
or
push
movl
fimull
aaa
mov
push
divl
pushf
fsts
cmp
dec
pop
pop
xchg
sub
cs
loop
or
hlt
cs
js
or
out
and
pop
scas
in
pusha
xor
fldenv
pop
sbb
stc
mov
mov
jg
adc
ret
sbb
mov
xchg
jge
pop
inc
xchg
sbb
ret
inc
scas
aaa
into
js
and
sbbb
dec
in
or
faddl
sbb
and
fsubl
in
mov
fldenv
mov
mov
lret
cltd
fimull
in
incb
adc
in
xlat
xor
aam
stos
xchg
insl
out
pop
cmp
cltd
sub
jne
testb
cmp
fcompl
sbb
rorl
popa
jecxz
nop
inc
dec
sub
jp
add
and
mov
arpl
xor
out
mov
jecxz
insb
mov
inc
push
push
push
pop
push
xor
jl
sub
mov
add
cwtl
sbb
cmpsl
cmp
movsb
daa
sub
andb
lods
cmp
mov
and
shll
mov
out
ljmp
push
arpl
push
nop
aas
jne
aaa
addb
js
mov
fldt
sub
lods
and
lods
out
jbe
push
adc
lcall
frstor
cmp
mov
jmp
xchg
in
add
cmc
shl
add
push
push
cmpsb
lds
shrl
sbb
jo
add
xor
out
pusha
jo
or
mov
outsl
add
js
dec
je
pop
or
outsb
pop
xchg
mov
dec
mov
les
cmp
decl
xchg
clc
add
sbb
inc
mov
sbb
sbb
and
lret
inc
lcall
and
cmpsb
fidivs
cwtl
dec
int
scas
inc
insb
inc
xchg
jl
bound
call
xchg
mov
lds
dec
rep
loope
pop
out
sarb
mov
lret
sbb
dec
sti
push
mov
jns
xor
fiaddl
push
aad
icebp
adc
xchg
push
jbe
jecxz
int3
das
push
loopne
jp
jp
imul
pavgw
xchg
add
push
or
in
es
lods
mov
aad
sub
jp
mov
sub
cmp
aad
pushf
fs
xchg
lret
mov
and
outsl
sbb
das
or
loope
stos
or
and
mov
cmp
mov
movsl
test
mov
xchg
ret
adc
ret
mov
cwtl
icebp
mov
imul
mov
xchg
shll
pop
xchg
test
out
shll
cwtl
sbb
jno
insb
jge
testb
mov
inc
pop
push
test
push
cmpsb
xchg
jle
out
mov
mov
xor
stos
xor
push
mov
dec
and
out
movsl
test
inc
sti
and
popa
mov
mov
in
cmp
sbb
ja
in
les
int
adc
lock
and
out
mov
xor
mov
mov
jno
sub
ljmp
out
out
cmp
out
cwtl
les
lods
mov
imul
aam
adc
int3
inc
push
shll
stos
aad
in
jne
data16
adc
test
xchg
imul
mov
cmpsl
jo
xchg
hlt
add
gs
js
sub
cmp
fldenv
xor
or
jns
jno
shlb
aas
ja
xchg
xchg
or
leave
hlt
outsl
and
mov
mov
rcrl
inc
or
cld
pusha
arpl
xchg
sbb
ds
push
ret
pop
pusha
mov
scas
es
pop
testl
cld
push
jbe
jge
test
mov
xchg
adcl
outsb
ret
or
scas
aad
popf
loop
daa
pushf
popa
mov
xor
xchg
sbb
fidivrl
incb
ret
push
cmpsb
hlt
push
jg
mov
push
mov
rcrb
decl
ret
shl
js
mov
adc
divb
dec
sbb
les
xor
mov
int
bound
xchg
test
cmpsl
test
or
lret
in
mov
ficomps
and
lret
adc
in
pop
jle
xchg
dec
cvtpi2ps
push
jns
imul
sbb
xor
and
lds
cmp
pop
into
cmp
ljmp
cmpsl
fildll
mov
jle
outsl
pusha
insb
fidivrs
jo
push
test
inc
idivl
or
sub
mov
stos
adc
mov
xor
sbbb
or
je
xor
mov
aam
pop
scas
mov
in
jnp
mov
loope
add
andl
jnp
xchg
pop
movsb
imul
call
js
xchg
mov
adc
mov
stos
mov
dec
dec
outsl
scas
dec
in
jmp
test
mov
daa
mov
fbld
out
push
pop
pop
mov
adcb
int3
lret
pop
xchg
ret
mov
sbb
mov
or
addl
jl
push
inc
fucomip
sbb
sub
pop
adc
xchg
push
and
scas
fistps
lcall
cwtl
xor
popf
push
dec
or
decb
pop
xchg
scas
xchg
lock
mov
int
es
arpl
jno
incb
icebp
imul
sub
mov
sub
fidivrl
cmpsb
mov
mov
jp
push
mov
cmp
call
rorl
dec
sbbl
mov
cld
sub
cmp
xchg
or
mov
mov
lea
sbb
imul
xchg
es
and
out
cmp
xchg
mov
sbb
stos
add
aaa
lret
mov
sbb
mov
mov
xchg
in
icebp
or
sbb
std
in
insb
sub
jl
jbe
pushf
and
jmp
aam
mov
bnd
mov
xor
and
in
packsswb
dec
inc
mov
pop
nop
jmp
adc
out
cmp
xor
add
fwait
in
mov
fsubrl
fbstp
in
dec
into
icebp
das
mov
push
mov
mov
jbe
cmpb
icebp
stos
push
fidivrs
lea
loopne
lods
mov
rcrb
dec
mov
add
xchg
mov
int
test
jmp
xchg
sti
stc
nop
les
in
push
lret
mov
or
pop
fnstsw
sub
stc
sbb
test
popa
mov
test
xchg
movsb
shll
movsl
lods
inc
xorb
pusha
or
cmc
mov
cmp
mov
shlb
outsl
push
jo
mov
ja
addl
loop
pusha
jbe
push
xchg
mov
jecxz
or
sarl
xor
push
stc
repz
push
fnstenv
jp
lcall
sbb
fcoms
xor
mov
pushf
dec
push
jg
push
and
inc
loop
inc
jno
dec
adc
lcall
mov
arpl
cmp
adc
repz
pop
or
pop
push
xlat
mov
out
mov
push
loopne
jp
gs
lock
int
outsb
add
sar
jns
dec
xchg
xchg
popa
fcoms
sahf
jl
nop
test
cmp
and
bound
and
inc
leave
outsl
cmp
or
mov
jbe
adc
cmp
jmp
out
jg
add
add
cmovle
push
lret
xorb
fs
jg
sub
push
movsl
jno
fidivrs
idivb
imul
fisttps
push
mov
jne
jb
or
imul
add
icebp
jno
inc
dec
lcall
pop
mov
push
cltd
jp
loop
movsl
cmc
xor
outsb
pop
ret
adc
out
arpl
cmp
mov
mov
lods
sbb
xor
jmp
sti
dec
pusha
xchg
sub
mov
fsub
add
std
xchg
pop
fmull
gs
mov
or
mov
repnz
cmpsl
mull
lcall
leave
cwtl
call
mov
push
add
sti
stos
sub
xchg
or
pop
in
mov
testb
iret
rcrb
icebp
data16
mov
mov
in
popa
dec
and
dec
scas
xor
pusha
mov
mov
int
or
lds
sub
ja
adc
mov
jle
std
bound
fwait
xor
or
inc
dec
loop
jnp
jmp
cmc
xorb
fimuls
push
insl
lock
aaa
dec
call
mov
out
test
dec
and
adc
xchg
sahf
push
icebp
mov
and
popa
bound
inc
jle
mov
aas
push
mov
lds
loope
lds
lcall
mov
pusha
test
pop
and
and
ss
lea
adc
dec
and
or
stos
sbb
outsl
les
ljmp
jg
orb
jle
jmp
ss
stos
xor
and
cmp
nop
out
xorl
dec
pop
push
xchg
mov
xor
movsb
mov
mov
or
lret
jno
stos
sub
lds
dec
and
cmovge
inc
xor
hlt
ja
repz
xor
and
xchg
push
lea
push
or
pop
mov
cltd
pop
push
mov
iret
pop
jle
imul
dec
lret
push
fnstsw
sub
ds
stos
sahf
int3
pop
repnz
fadd
xchg
icebp
scas
pop
cmp
jnp
outsb
mov
movsb
xor
lcall
stos
xchg
adc
fcmovne
hlt
loope
jl
lcall
fwait
jg
cmp
mov
enter
sbb
mov
pop
imul
mov
roll
test
inc
add
sub
inc
lret
sbb
das
xchg
mov
mov
push
mov
adc
cltd
or
es
xchg
imul
mov
in
push
nop
dec
xlat
ficomps
in
mov
cmp
xor
fdivrl
mov
jle
cltd
or
hlt
fidivl
mov
dec
in
insl
fdivrs
inc
or
add
jns
push
add
mov
cmp
loopne,pn
pusha
cmc
test
mov
stc
sti
adc
inc
cmp
mov
mov
sti
aas
daa
leave
sti
lret
std
push
sbb
mov
repz
loop
negl
shlb
jmp
sub
or
int3
inc
adc
dec
iret
dec
scas
into
cmp
mov
mov
test
push
xor
inc
aad
daa
loope
stos
test
test
movsb
nop
push
xchg
aam
pop
es
in
je
adc
fsubrl
mov
pusha
and
sbb
mov
sti
fwait
mov
dec
inc
xchg
std
sub
inc
pop
jno
push
jle
nop
aam
es
outsl
clc
mov
xor
inc
movsl
push
inc
mov
adc
push
jmp
aas
out
mov
es
lahf
adcb
lahf
jp
cli
jo
push
jecxz
lret
mov
mov
gs
ja
dec
push
dec
inc
jnp
out
fmull
and
or
loop
das
sbb
pop
cwtl
jns
push
cmpsb
ss
cli
test
roll
or
pop
sti
andl
and
ret
icebp
push
mov
push
je
mov
test
in
outsl
push
add
into
cld
mov
mov
jle
cli
hlt
iret
cmc
int
dec
jmp
lods
push
les
cmpsl
imul
lret
cmp
xchg
fistps
cmp
sbb
add
repz
loopne
daa
iret
dec
inc
jae
jbe
or
out
xchg
fyl2xp1
sbb
mov
aad
pop
or
jo
in
cld
add
roll
jge
and
jmp
xchg
int3
cs
test
fsubrl
push
aaa
fistpl
insb
out
push
test
push
pop
test
lods
adc
xor
cmc
scas
out
ficomps
gs
jge
out
inc
cmp
pop
in
cmc
jg
or
fpatan
cmpsb
push
es
insb
sarl
std
std
js
sbb
adc
push
dec
in
and
popa
xlat
hlt
add
stc
jo
mov
sbb
lahf
push
std
pop
lock
xor
push
lahf
data16
xor
sub
test
orl
dec
xchg
imul
call
enter
dec
add
js
fisubrl
adc
cwtl
cmpl
add
inc
addl
inc
addr16
lcall
mov
outsb
test
xchg
rolb
adc
jae
sub
cmp
stc
or
nop
nop
test
sub
arpl
sbb
sbbb
mov
mov
in
dec
sbb
in
xor
push
adc
ja
add
fs
mov
jbe
adc
pop
in
idiv
divl
in
sbbb
andb
les
stos
add
lods
imul
adc
jo
aam
dec
adc
sbb
faddp
out
dec
mov
ret
add
add
mov
dec
cs
push
sub
daa
mov
mov
out
insl
mov
mov
aas
xchg
xor
fcompl
jecxz
mov
pushf
hlt
cmp
inc
push
add
lret
inc
fistpl
pmulhuw
adc
jbe
je
fwait
iret
xlat
pusha
daa
xchg
fwait
les
inc
decb
dec
ss
fcomip
pop
inc
leave
lcall
jmp
or
prefetcht2
mov
sbb
pop
stc
hlt
int3
mov
ret
add
mov
xor
adc
int3
pop
add
xchg
xchg
sbb
notrack
icebp
stos
idivl
lret
mov
sbb
aad
pushf
and
inc
test
in
sub
into
sub
push
fs
mov
jg
xchg
adc
cmp
imul
add
insw
or
jo
pop
test
in
aas
jnp
sub
aas
sti
jbe
lock
dec
aam
mov
jge
ds
fcompl
in
dec
aad
incl
xchg
sbb
je
cs
or
and
push
nop
jne
daa
mov
fisttpll
push
arpl
and
jbe
enter
aas
cmp
mov
fstpt
inc
jae
repnz
jae
adc
bound
push
nop
jnp
ss
dec
repz
cmp
sbb
and
mov
or
cmp
cmp
mov
flds
mov
ljmp
pushl
loop
dec
shll
lods
mov
fdivp
pusha
inc
leave
mov
xor
ret
das
cltd
cmp
jno
adc
xlat
xor
cmp
xor
xor
popf
shlb
or
or
adc
loopne
xchg
mul
aam
int
push
subb
dec
mov
push
out
cmp
dec
mov
inc
push
xlat
dec
mov
xchg
mov
mov
xor
cmp
push
adc
test
mov
ficompl
enter
xorb
and
arpl
aad
fwait
sbb
xchg
insb
dec
jnp
aas
adc
mov
jo
xchg
or
cmp
les
cmp
dec
mov
pop
ja
mov
xchg
sub
repnz
test
mov
mov
ror
daa
and
xor
sub
mov
ja
mov
scas
pop
popf
ficoms
cmp
imul
je
push
xlat
xor
xchg
es
icebp
pusha
or
es
mov
mov
es
enter
jecxz
cmp
push
js
adc
cmpsl
aas
sub
stos
jne
inc
out
leave
add
mov
fdivrl
aad
mov
jle
je
xor
cmp
int3
iret
insl
xchg
pop
pop
adc
or
push
inc
pop
sub
pop
xor
lds
and
inc
or
pop
xchg
aad
ror
arpl
adc
sub
mov
sbb
sub
mov
pop
orb
xchg
popf
push
in
adc
fucompp
inc
jne
and
stos
imul
inc
test
repnz
pusha
mov
lret
repnz
loope
leave
cmp
pop
fwait
push
rcr
xor
lahf
cli
imul
in
cltd
mov
pop
cmp
outsb
imul
inc
and
xchg
fnstenv
push
inc
jp
mov
sbb
cltd
in
mov
cmp
xor
inc
cmc
jl
cli
cmp
pop
push
sub
outsl
cmp
nop
jg
mov
and
mov
mov
mov
cmp
out
xchg
sub
sar
ret
push
push
cmp
xchg
imul
aas
xor
jge
inc
cli
inc
add
mov
jecxz
dec
hlt
dec
es
cmc
enter
add
sub
aaa
pop
loop
inc
test
fidivs
cli
inc
xor
iret
jb
sub
mov
sbb
inc
mov
xor
js
pop
fstps
pop
out
adc
sbb
movsl
xchg
lods
in
inc
xor
xchg
adc
sbb
lcall
jecxz
mov
sbb
movsb
insl
sub
xor
jb
mov
test
std
subb
mov
pop
pop
pop
jnp
xor
jl
adcl
ljmp
out
cli
jge
mov
popa
and
lods
sar
lahf
add
int
mov
mov
sarb
xor
test
pop
flds
bound
xchg
pop
add
pusha
xor
cltd
imul
or
sub
in
hlt
scas
jle
inc
xchg
ja
mov
gs
repnz
jne
imul
mov
inc
add
mov
add
sbb
add
enter
insb
add
xorl
pushl
pushl
call
sub
jmp
scas
cltd
and
add
cwtl
int
test
mov
int3
addl
roll
cmp
ret
fiaddl
jnp
test
mov
push
std
sub
jns
leave
fwait
jnp
shlb
sbb
sub
mov
cmpsl
outsb
mov
insl
push
and
or
inc
daa
stos
cmp
push
fmull
jne
fsubl
cmp
adc
cmp
cmp
popf
push
sbb
rol
mov
enter
scas
lahf
loop
mov
in
jmp
jnp
xor
pop
and
push
xor
je
stos
in
loop
das
insl
xor
ljmp
aam
mov
xchg
and
incb
inc
push
dec
mov
lahf
cmp
adc
arpl
cltd
xlat
xchg
mulb
dec
es
xor
fsubrl
mov
lret
les
insl
imul
xor
rcrb
and
cmp
je
jno
gs
out
add
or
and
lods
jae
jb
ret
insl
xchg
subb
push
jo
divl
jmp
stc
packuswb
sahf
icebp
popa
pop
mov
mov
push
cmp
or
enter
cmp
js
enter
or
movsl
mov
mov
adc
adc
push
fldz
dec
xchg
add
mov
push
insl
jno
and
xlat
add
int3
js
adc
add
cmpb
xor
pop
iret
mov
xchg
fisttpll
fistpl
les
dec
cmp
push
pop
cld
adc
add
fnstenv
sar
fdivrp
aaa
push
lcall
mov
and
add
mov
into
gs
lahf
or
pop
rcrb
jb
sbb
mov
cmp
adc
pop
outsl
and
xchg
repnz
push
jno
add
call
mov
mov
ficompl
adc
inc
outsl
and
mov
dec
ja
pop
push
push
dec
es
xchg
xor
sub
pushf
test
jg
lret
ds
out
push
shll
push
in
mov
xor
or
add
lcall
pusha
mov
cmp
arpl
daa
sub
loop
and
cmp
or
mov
outsb
fidivs
jge
cltd
fsubp
inc
xor
clc
cwtl
mov
into
shl
jp
mov
fld
sub
dec
mov
in
fwait
hlt
sbb
daa
aas
aaa
mov
sub
dec
adc
in
mov
pop
bound
cmp
mov
std
xorl
mov
and
ret
loopne
adc
shrb
pop
push
lock
ss
adc
test
jne
add
add
das
ret
mov
shll
mov
sub
dec
clc
and
cs
and
add
cld
stos
out
mov
lock
pop
push
xchg
push
cmp
loope
push
outsl
fldcw
neg
xor
cmc
or
popa
cmp
mov
das
ja
insb
xor
and
xor
imul
xchg
cmp
leave
pop
inc
push
add
fistl
in
test
fldenv
fdivs
jle
daa
outsb
ljmp
and
push
pop
cli
fisttps
imul
shlb
fistpll
mov
jns
pushf
fcmovnu
push
xor
stos
inc
sub
or
ja
shll
lret
les
xchg
stc
shll
lret
popa
cltd
sbb
fwait
pop
or
ja
add
lods
mov
mov
jo
cwtl
loope
fnstcw
jl
nop
fdivrs
xchg
pop
sub
jae
mov
out
inc
lret
mov
loop
pop
in
fnstcw
sbb
icebp
cmp
sahf
sbb
mov
insl
add
mov
loop
mov
adcb
push
imul
inc
pop
pop
addr16
jmp
push
sub
inc
aaa
sarb
into
mov
cmpsl
leave
mov
cmp
jge
add
mov
sahf
mov
dec
inc
adc
jp
mov
stc
pop
mov
pop
fisubrl
sahf
sti
xchg
aad
or
into
or
stos
push
mov
imul
nop
lods
outsl
sub
stc
fnstcw
xor
sbb
adc
push
lds
xor
lret
push
data16
cmp
xchg
xor
xchg
clc
pop
sbb
fwait
test
mov
xor
push
fnstenv
fcmovne
add
nop
nop
bound
inc
push
push
mov
loope
xlat
mov
dec
roll
cmpsl
fimuls
pop
stc
je
mov
sbb
inc
add
imul
pushf
push
js
addr16
insl
and
xchg
jns
insb
aaa
adc
jle
add
dec
adc
mov
pop
or
es
mov
cmp
jns
and
daa
cmpl
outsl
xor
das
sub
push
movsl
sbb
mov
rcll
push
mov
lock
mov
loop
jbe
jmp
leave
das
pusha
ja
loop
fwait
push
sti
shll
jb
adc
mov
out
pop
rep
adc
mull
int3
inc
or
or
cli
sub
rcrb
fldcw
xchg
or
ret
mov
mov
push
popf
pusha
cmp
sahf
dec
test
les
test
test
mov
ffreep
mov
push
mov
xor
test
imul
mov
dec
xchg
out
add
mov
or
gs
cmp
and
jle
dec
ss
xchg
int3
das
push
or
stc
xchg
outsl
sub
xor
outsl
mov
imul
inc
stos
dec
ror
test
or
in
ficomps
and
ss
push
dec
lods
lahf
lret
sub
mov
push
sub
repz
sub
loopne
scas
pop
cmp
inc
mov
or
sbb
pop
jle
rorl
dec
add
scas
push
adc
enter
mov
hlt
jo
fdivr
mov
cmp
test
mov
mov
icebp
cmp
enter
pop
in
pop
lret
xchg
jmp
jmp
push
adc
mov
insl
stc
arpl
cmp
leave
sub
add
inc
ret
mov
adc
sbb
pop
push
push
xor
pop
push
pop
jbe
mov
push
jmp
enter
lcall
or
pusha
sub
insl
inc
ss
insb
adc
outsb
push
cltd
leave
and
push
jae
insb
jno
xchg
sbb
shlb
push
push
dec
jmp
add
jb
mov
push
out
jae
jl
repnz
xor
sbb
mov
cmc
mov
cmp
sub
push
mov
sahf
mov
mov
sbb
sti
adc
rcr
or
aas
popf
dec
dec
lea
lods
lret
iret
pop
xchg
inc
add
mov
sub
je
lcall
lea
jmp
mov
and
stos
xor
scas
push
jb
rcl
mov
or
or
push
clc
rcl
frstor
or
aas
xchg
mov
and
adc
fcoml
push
scas
pop
mov
lock
xor
fwait
lret
pop
inc
push
and
notb
mov
and
inc
xchg
inc
or
xchg
or
xchg
adc
sub
or
loope
xchg
stc
mov
adcl
sub
push
dec
rcl
popa
and
movsb
push
xlat
loop
cmp
xor
movsb
fucompp
fimuls
popf
adc
out
mov
add
push
enter
and
inc
or
je
adc
gs
and
inc
mov
popa
pop
cmp
fnclex
ss
adcl
cmpsl
mov
add
fsub
out
pop
out
xchg
pop
repnz
mov
sbb
xorb
jp
std
and
dec
adc
push
dec
stos
fisubs
mov
andb
mov
in
lahf
bound
sbb
inc
cld
push
in
inc
insb
pop
stos
xor
fisubrl
mov
mov
pop
rcrl
ficompl
lds
aas
sbb
or
mov
repnz
rcl
mov
fnsave
mov
inc
push
sbb
out
lret
cmp
mov
popa
dec
push
mov
ss
xchg
xchg
in
add
dec
js
lods
das
std
out
xor
pop
fs
imul
and
push
xchg
hlt
adc
lds
int3
sbb
in
pop
xor
or
movsb
loopne
xor
std
inc
or
out
dec
scas
outsb
xor
adc
mov
and
popa
nop
cmovno
mov
xchg
mov
mov
sahf
cs
lock
pusha
fldcw
dec
fs
lret
dec
mov
mov
aad
adc
lret
ja
mov
and
jmp
repz
mov
mov
daa
and
jb
add
in
pop
repz
fnsave
jp
mov
test
loope
lods
xchg
ljmp
jae
aam
mov
stos
stos
and
inc
cwtl
push
sub
xor
test
iret
adc
jb
mov
gs
and
fisubl
fadd
out
xchg
popa
loope
sub
or
push
out
lods
call
mov
jmp
and
stos
ja
sub
jg
or
push
push
push
shr
sti
sahf
sub
mov
pop
data16
mov
push
add
fsincos
out
pop
or
jne
scas
xchg
dec
leave
cmc
nop
mov
mov
pop
das
push
push
call
jns
daa
or
push
ret
mov
int
and
and
cs
or
mov
or
or
mov
loop
in
lods
repz
mov
dec
das
push
adc
push
mov
adc
aas
in
int3
pop
jnp
or
push
arpl
xchg
mov
fidivs
lods
jge
cmpsb
js
sbb
push
fnstcw
or
jge
or
mov
inc
lahf
loop
test
icebp
dec
pop
mov
dec
xor
jno
xor
pusha
fimull
or
icebp
xchg
popa
inc
cmp
pop
pop
iret
pop
adc
xchg
jns
lret
imulb
sub
adc
adc
into
rolb
arpl
cmpsb
mov
cli
adc
add
adc
mov
push
insb
je
mov
mov
ljmp
xor
sub
push
push
pop
jb
and
js
push
ja
rcll
out
out
xchg
and
sbb
in
fbstp
mov
sti
rcrl
ret
test
arpl
imul
in
incl
lods
pop
sub
rcrb
mov
hlt
jmp
sbb
je
ror
jge
add
adc
add
pop
out
loopne
aas
adc
adc
and
xchg
fcomi
jb
mov
cmpsb
sbb
cwtl
cli
mov
in
xlat
adc
imul
mov
fwait
loop
jnp
push
xchg
inc
pop
jne
test
fidivs
dec
push
mov
mov
cmpsb
pop
push
pop
fsubp
dec
push
cli
ds
push
mov
popa
adc
mov
lret
push
dec
sub
push
subl
jns
or
stos
or
loope
adc
faddl
hlt
mov
cmp
jge
aad
repnz
loopne
shlb
imul
lea
jae
add
sub
in
pop
mov
and
stos
push
sub
jge
jmp
dec
ljmp
fcompl
ss
leave
add
jmp
xchg
out
pop
lret
inc
mov
insb
aad
adc
mov
jecxz
lcall
jmp
mov
shll
call
xchg
sbb
inc
push
add
test
shl
jbe
mov
mov
outsb
jae
push
std
lret
loop
push
mov
mov
cwtl
test
sbb
enter
scas
aas
mov
mov
mov
add
adcl
testb
divb
daa
jmp
jecxz
or
xor
sub
movsb
sbb
mov
nop
cmp
lods
dec
cmp
and
cltd
and
push
add
xor
je
dec
mov
push
rclb
and
arpl
jle,pn
pusha
mov
add
test
pusha
outsb
push
lods
inc
cmp
and
pop
jnp
insl
je
adc
icebp
sub
pop
cmpsl
lret
dec
out
push
fnsave
pop
dec
rolb
iret
rcrb
add
lods
sbb
out
incb
jbe
fwait
adcb
and
sub
pop
inc
xor
into
lret
inc
add
ficoms
inc
in
xchg
je
jp
mov
jp
sub
leave
jg
sbb
movsb
push
mov
mov
xchg
aad
mov
test
mov
jae
lcall
mov
cmp
xchg
int
aad
std
dec
xchg
mov
pop
cltd
xchg
sub
xor
xor
imul
cmpsl
pop
in
mov
lret
int
mov
lock
insl
pop
adc
mov
call
mov
inc
sbb
fidivrs
popa
std
outsb
adc
and
cmp
mov
add
mov
xchg
out
or
jbe
pop
inc
pop
and
cwtl
arpl
shrl
mov
inc
push
adc
mov
inc
and
inc
lcall
scas
or
mov
mov
pop
scas
jle
pusha
js
and
jne
pop
shrl
sbb
push
mov
lcall
sub
inc
lds
dec
ffreep
insb
fistps
inc
fwait
add
sbb
addr16
hlt
jnp
pushf
sbb
jl
gs
pop
cmp
push
sub
xchg
imul
je
pop
xor
mov
ret
aam
test
lock
cmp
rcl
or
dec
ljmp
lret
pop
mov
iret
cmp
imul
mov
outsb
pop
into
out
mov
push
cs
iret
jmp
or
call
and
inc
xchg
not
or
adc
push
and
inc
inc
inc
sbb
das
lods
mov
fildll
xchg
dec
mov
dec
lock
in
sbb
out
into
xchg
pop
adc
testl
mov
orl
xor
movl
push
inc
sbb
pop
mov
and
pop
arpl
pop
mov
lds
or
outsb
xor
mov
stc
xchg
lods
mov
jmp
adc
cmp
xchg
jp
sbb
adc
insl
cltd
xor
call
pop
dec
add
popa
adc
pushf
mov
aas
clc
or
mov
adc
xlat
sbb
push
andl
xor
in
vgf2p8mulb
fnsave
aad
push
arpl
cwtl
pop
xor
mov
leave
pop
mov
out
das
mov
insb
insb
sbbb
pop
jge
mov
andl
jo
repnz
mov
das
sti
cmpsb
pop
cltd
lcall
push
cmp
xlat
sbb
or
inc
leave
loopne
inc
jae
mov
addr16
push
lock
cvtps2pi
cmp
test
loope
and
mov
inc
fwait
cli
mov
and
sub
xorl
test
popa
arpl
stos
lahf
fcmovbe
stc
jne
int3
jle
cld
pop
ja
icebp
xchg
sbb
xchg
cmc
fcoml
test
into
and
mov
das
outsl
jo
push
addr16
dec
xchg
xchg
shrb
jp
dec
pop
loop
pop
push
dec
pop
cmp
cmpsl
outsb
push
out
adc
jae
lods
cmpsl
testb
xor
mov
xor
imulb
dec
ret
fdivl
out
outsb
pop
cmp
icebp
adc
cmc
or
sbb
in
sbb
stos
pop
ljmp
adc
data16
movsb
jp
pusha
outsl
in
jecxz
test
push
icebp
cmc
xchg
inc
xchg
jp
adc
outsl
mov
mov
in
pop
hlt
ret
push
mov
loop
pop
mov
test
in
xor
daa
inc
popa
cmp
test
pushf
jp
sbb
jg
div
pop
enter
ret
and
stc
out
push
stc
outsb
cmp
mov
js
dec
loopne
jns
jbe
xor
mov
mov
jbe
and
je
mov
lods
mov
and
dec
mov
and
adc
sti
mov
enter
fidivs
fcomip
lahf
lods
data16
inc
cmpsl
js
pushf
pusha
out
push
push
xchg
cwtl
stos
sub
sbb
sub
and
loop
fxch
push
cmp
and
in
xor
adc
sub
inc
fdivl
or
lahf
insl
inc
push
dec
ret
add
sub
jl
sbb
or
push
adc
sub
rcl
je
aaa
push
fadd
adc
adc
pop
adc
dec
sahf
out
mov
stos
mulb
mov
pusha
cmp
fidivs
mov
sub
xchg
push
scas
lods
fwait
mov
lods
lock
xor
movsl
cmp
mov
inc
mov
dec
loopne
mov
adc
cs
sbb
xchg
cmp
cld
adc
lret
lock
inc
xchg
out
out
or
jae
iret
sbb
insl
scas
shlb
lods
push
push
clts
mov
cltd
inc
sarb
divl
imul
mov
or
in
fidivrl
mov
es
test
and
aaa
stos
mov
stos
fcomps
sbb
inc
add
pop
movsb
adc
repnz
ja
pop
cli
or
sbb
cltd
sub
aam
or
bound
mov
jle
adc
fisttpll
mov
pop
or
test
cs
mov
ljmp
xchg
in
clc
ljmp
stos
fdivrs
clc
lcall
lods
adc
cmovns
xlat
jo
dec
lcall
bound
gs
in
ljmp
loop
lea
push
rcl
inc
cmpsl
and
jle
mov
loopne
mov
pop
stos
in
dec
and
sbb
std
mov
outsl
adc
push
inc
leave
pop
xchg
ljmp
fldt
mov
outsl
or
mov
add
adc
mov
nop
scas
sbb
inc
and
ja
pop
cmp
and
fdivl
xor
dec
jb
das
mov
das
daa
mov
sarl
mov
inc
das
fsubr
mov
sub
mov
push
push
push
mov
aas
jo
data16
lock
and
gs
push
adc
mov
pop
mov
mov
xchg
cmpsl
sbb
xor
lods
loop
rcll
std
push
inc
movsl
mov
xchg
adc
and
or
inc
push
sub
fldenv
and
ret
dec
stos
test
jmp
sahf
popa
push
cmp
mov
sti
cmp
jno
sub
loopne
sub
lods
adc
or
or
test
dec
ret
in
gs
mov
cmpsb
jle
in
popa
xchg
jg
cmp
mov
mov
outsb
dec
out
adc
incl
mov
pop
inc
sbb
arpl
js
popa
stos
cmpsb
out
mov
pop
inc
loopne
ficomps
dec
mov
rcrl
add
or
icebp
leave
gs
inc
es
mov
mov
enter
roll
fsubrl
bound
shlb
out
cmp
mov
cmpsl
daa
xchg
sub
out
popf
cmp
mov
add
add
ret
lods
inc
push
repnz
dec
outsb
push
aad
ret
jp
mov
imul
and
push
xor
inc
pop
lds
jle
fcoms
xchg
mov
movsb
loopne
mov
cmpsb
lds
lret
jecxz
in
aad
pushf
jge
xchg
cmp
in
dec
ret
aad
cs
mov
push
hlt
cmp
cmp
xchg
jecxz
cmp
fstl
into
inc
cmp
push
mov
mov
mov
bound
add
sbb
cmpsl
xlat
jmp
xchg
repnz
ds
sbb
and
mov
aad
cs
out
adc
adc
clc
push
mulb
repnz
jg
or
test
jbe
adc
inc
xor
fidivl
imul
outsb
lahf
movsl
es
lret
lret
mov
adc
mov
or
dec
xchg
push
addr16
cld
xor
sbb
sahf
pop
adc
push
les
fldt
shr
and
adc
jb
je
xlat
cmp
sub
fcmovu
xlat
xor
ror
xlat
adc
sbb
ja
push
mov
fs
xchg
scas
inc
les
jns
sbb
jp
test
xlat
xchg
stc
out
lock
lret
shld
in
sbb
dec
adc
pop
and
pushf
xchg
xchg
mov
push
addr16
outsl
push
lret
popf
insl
subb
les
inc
add
dec
test
sbb
mov
pop
add
and
lcall
xor
sub
sub
int
and
pop
push
inc
loope
xlat
mov
mov
jmp
mov
jg
sbb
sar
mov
sub
dec
mov
icebp
xor
adc
dec
push
js
hlt
lods
stos
xchg
pushf
bound
sbb
data16
mov
jb
or
insb
xchg
pusha
add
dec
fs
and
mov
dec
shrl
cmp
mov
fcompl
or
adc
xchg
and
iret
xor
mov
nop
pop
xlat
sub
into
jmp
dec
leave
push
add
int3
jg
fs
in
leave
dec
out
lret
dec
addr16
divl
mov
jge
ljmp
xchg
add
cmp
inc
loopne
js
loopne
mov
pusha
sbb
or
sub
add
outsl
jns
push
fbstp
sbb
adc
stos
dec
movsl
xlat
cmp
xor
stos
lea
bound
andw
or
cmp
inc
arpl
subb
lcall
mov
push
push
iret
mov
fbld
cli
sbb
arpl
fldenv
mov
fsubrl
mov
mov
cmpsl
jne
mov
scas
stos
addb
sub
mov
lret
bound
jae
lea
ret
cmp
xlat
xchg
add
js
xlat
and
fisttpl
cmc
pusha
fdivl
lahf
xor
sbb
mov
adc
fdivr
sub
dec
jp
jns
gs
insb
dec
add
fwait
mov
add
pop
sbb
xlat
inc
fmull
mov
subb
sub
sti
outsl
add
cmp
sbb
pop
inc
jp
movb
out
stos
fisubl
push
stos
fs
sarl
dec
sub
inc
push
xchg
test
and
aam
xor
cmpsb
xor
inc
dec
sub
adc
mov
or
mov
rcrb
lock
je
mov
dec
lcall
adc
icebp
mov
popf
fmul
push
clc
repnz
cli
dec
xor
icebp
std
or
les
iret
jns
jle
or
jb
xlat
push
insb
fidivrl
pop
in
add
pop
adc
sbb
dec
xchg
push
pushl
int
fsubs
mov
mov
out
adc
lahf
repnz
jecxz
pushf
mov
int
push
out
mov
and
loop
lcall
mov
cmp
arpl
pop
aas
pop
js
xchg
xchg
or
add
pop
filds
in
adc
push
push
jno
xlat
sti
cltd
popa
insl
dec
push
xor
xlat
dec
cmp
inc
push
cmpsl
push
xor
fcmovb
out
les
inc
dec
xor
fdiv
and
lret
out
aaa
ss
insl
add
shl
push
cli
lea
fs
adc
inc
cltd
imul
inc
xchg
cmp
fwait
pop
inc
repz
xlat
jge
enter
out
jge
jmp
je
aam
dec
jb
adc
jecxz
jnp
xchg
xor
ds
jecxz
mov
fisttps
cli
jmp
cmp
mulb
rcr
bound
mov
test
xor
fcoml
and
fsubr
jle
aas
mov
ss
xchg
mov
in
popa
rolb
idivl
adc
jp
rcll
fldenv
xor
mov
mov
xchg
movl
popf
hlt
popa
xchg
stc
inc
lea
jae
arpl
adc
add
dec
and
mov
inc
or
test
scas
bound
xlat
popf
sub
sbb
inc
rcll
ds
lods
push
les
sbb
mov
mov
jnp
cwtl
and
aaa
cmpsl
xchg
add
popa
cmp
hlt
lods
dec
stos
sbb
ror
in
adc
pop
aam
adcb
mov
ja
and
add
jle
add
dec
mov
mov
cmp
mov
xor
xor
mov
or
stos
cmpsb
stos
movsb
adc
popf
mov
mov
xor
add
mov
in
mov
icebp
sub
dec
pop
popf
stos
in
mov
dec
fsts
insl
movsl
fs
push
lahf
jle
or
icebp
int
mov
in
jb
sub
loop
jbe
sahf
sbb
cwtl
ss
mov
pop
es
clc
cmp
bound
cmpsb
xor
mov
test
in
lock
adc
imul
lods
imul
pop
push
out
jle
out
loope
popa
pusha
fiaddl
loopne
ret
divl
aad
or
int
mov
les
ds
add
stc
filds
sbb
pushf
and
and
bound
and
mov
lods
xor
and
call
test
inc
test
sahf
sbb
ret
mov
call
outsl
xor
lcall
test
dec
sti
xor
mov
divl
pop
in
dec
add
loop
pushf
cli
inc
jge
and
scas
sbb
xchg
xchg
stos
inc
faddl
ljmp
mov
xor
inc
testb
aas
dec
scas
dec
jp
xchg
loopne
xor
mov
sub
mov
insb
xchg
mov
and
decl
dec
rclb
addr16
cmp
mov
in
pop
pop
dec
outsb
mov
adc
movsb
sbb
push
jecxz
jno
sbb
ret
inc
dec
xor
push
shll
dec
mov
clc
scas
std
out
push
or
add
jb
fstpl
adcb
mov
dec
mov
push
jl
xor
hlt
dec
and
in
stc
out
enter
add
rcrl
sbb
test
imul
cmp
push
roll
adc
cmpsl
cmp
mull
mov
jbe
jl,pt
lods
cmpsb
sbb
xchg
sub
mov
mov
filds
addb
push
mov
andl
mov
or
sub
in
adc
or
test
inc
sbb
add
mov
mov
push
insb
ret
dec
rolb
fisubl
cltd
daa
test
test
ljmp
lods
pop
enter
adc
in
ret
push
inc
jmp
mov
outsb
mov
xor
ss
and
sbb
mov
sbb
cld
and
fstpt
ret
pop
push
adc
pop
pushf
scas
fs
mov
jmp
pusha
sub
push
fs
lea
repnz
cmc
or
sub
sbb
pop
loope
inc
or
movsl
mov
pop
dec
or
push
jbe
scas
cmp
mov
ret
adc
push
fnstcw
repz
sub
je
out
jno
pusha
mov
addr16
or
aad
loopne
in
fwait
icebp
hlt
mov
lods
sbb
in
int3
or
or
dec
lock
cs
inc
add
in
lods
push
jp
mov
push
ss
in
jns
push
data16
in
adc
lods
cmpsl
lods
int3
fcomip
sar
shll
sbb
bnd
xchg
test
bound
in
lds
xchg
add
xor
dec
mov
add
jp
dec
mov
daa
xchg
and
scas
mov
add
dec
add
ds
xor
xor
push
filds
sub
mov
ja
push
dec
insl
xor
es
aam
rol
sbb
sub
pop
out
jmp
mov
pop
aas
js
scas
xchg
mov
push
lahf
push
add
cld
out
fidivrs
add
jae
and
or
mov
aam
cmpsl
or
fwait
lods
mov
adc
add
in
push
adc
mov
scas
or
in
adc
push
movsl
test
lret
xchg
insb
lea
je
adc
pop
cmp
dec
mov
mov
push
mov
je
in
push
push
mov
jno
dec
pop
lock
pop
sbb
inc
pop
xchg
mov
mov
sarb
sbb
sub
insb
dec
jae
xlat
dec
xchg
stos
rcll
cli
mov
aad
inc
add
jp
lret
lods
mov
icebp
sub
cmc
jo
adc
loop
inc
out
das
je
mov
pop
ror
pop
gs
fwait
call
ss
insb
jno
std
cmp
addr16
imul
inc
xor
mov
outsl
jo
loop
sbb
ss
mov
inc
add
pop
jb
out
xor
cs
dec
movsl
cli
xor
cmp
adc
out
xchg
mov
and
mov
jae
roll
adc
rorb
pop
clc
cmp
adc
mov
imul
inc
in
lcall
stos
xchg
test
adc
mov
adcb
into
inc
cs
sub
aaa
mov
ret
pop
inc
test
mov
cmpsb
loop
outsb
test
ljmp
jnp
xor
lret
mov
sbb
xor
jbe
loopne
sbb
sub
cld
jp
dec
repnz
mov
adc
jne
mov
xor
out
inc
and
adc
jns
lea
in
xchg
ret
or
push
aad
adc
iret
sub
ljmp
ja
fsub
div
jbe
stos
lds
add
mov
faddl
test
iret
clc
inc
xchg
dec
and
mov
add
dec
jg
pop
popf
movsl
sti
clc
cmpsl
sub
jbe
jmp
sub
sbb
sahf
push
aam
jb
inc
mov
loope
clc
xchg
push
push
rcll
mov
jo
mov
sub
loop
ret
jbe
sbbl
push
push
push
inc
loopne
dec
fdivrl
pop
push
int
sub
test
inc
pusha
fstpt
mov
in
xlat
push
cltd
ja
sahf
mov
dec
inc
lahf
xor
inc
imul
adc
inc
pop
mov
sbb
push
push
xor
mov
add
dec
ret
xchg
or
xchg
sti
pop
mov
mov
jae
stos
in
icebp
popf
gs
jge
cmp
test
ljmp
cmp
or
adc
push
add
jmp
shll
pop
fistl
pop
gs
lods
cmc
subb
mov
stos
mov
add
cmpl
je
cmpl
jg
jmp
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
mov
subl
xor
xorl
add
movl
cmp
je
xor
mov
xor
mov
mov
mov
xor
or
xor
mov
xorl
add
mov
mov
and
mov
mov
adcl
add
xorl
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
jmp
or
inc
mov
insl
mov
jno
addl
pop
js
mov
cltd
rorl
push
test
jns
push
mov
lahf
notl
test
mov
cmp
cld
gs
arpl
outsb
mov
in
dec
jns
call
loope
inc
arpl
scas
or
xchg
mov
js
cmp
sub
mov
adc
push
mov
sbb
aaa
mov
lret
lea
cs
mov
fs
movsb
pop
ljmp
jmp
fnstenv
cmp
cmp
hlt
xchg
loope
out
es
movb
lahf
dec
sub
js
push
and
cltd
mov
fs
xor
add
lock
ds
fucomip
sub
jne
pushf
xor
mov
jno
int
js,pt
push
jne
fs
movsl
pop
push
mov
das
push
lahf
pushf
mov
mov
pop
sbb
jp
mov
pop
xchg
pop
frstor
xchg
push
sti
push
jnp
sbb
aaa
cwtl
jecxz
mov
lock
aas
lar
outsl
push
movsb
rolb
cmp
fists
dec
lret
fidivl
or
adc
inc
or
fmul
mov
jmp
shl
mov
shrl
push
cmp
jmp
push
lds
jg
cmc
push
pushf
dec
mov
daa
pop
dec
push
sbb
sub
scas
mov
lock
or
dec
cmp
lret
jno
inc
sahf
fsubs
push
js
jno
push
scas
inc
push
mov
push
stc
repz
and
mov
int
xchg
pop
jmp
imul
mov
popa
ret
and
xor
dec
shll
sbb
sub
inc
lods
lods
out
add
scas
xchg
aaa
and
cmp
or
loope
stos
dec
cmp
outsl
mov
stc
popa
test
leave
jae
cmp
out
inc
lds
push
rclb
call
rolb
add
cli
adc
jle
lret
sbb
movsl
jp
push
roll
add
inc
push
out
jbe
cli
xor
and
xchg
in
pop
nop
xchg
in
int
cmc
in
out
pop
lods
xchg
add
imul
lds
sbb
jno
icebp
fs
push
test
iret
inc
add
lock
ja
xor
mov
pop
push
jb
fsubl
jecxz
loopne
lds
mov
icebp
in
ret
outsl
push
movsl
cwtl
int3
test
mov
or
adc
loope
cmp
outsl
popa
and
rcrl
xchg
popa
and
fstl
add
xchg
sub
notl
xor
rcr
sbb
inc
push
mov
push
mov
mov
mov
adcb
pop
inc
or
mov
test
inc
sbb
xchg
sbb
jo
lret
cmp
push
push
bndldx
js
cli
push
shrb
add
cmp
mov
mov
stos
leave
dec
outsl
nop
mov
je
stos
inc
dec
js
mov
mov
adc
pop
sub
mov
enter
ljmp
jecxz
cmpsl
hlt
fisttpll
aam
sub
jg
add
mov
roll
jmp
test
ljmp
xchg
gs
dec
push
sahf
fimuls
dec
xchg
movsl
sub
cltd
inc
outsl
sbb
mov
xor
or
mov
xchg
mov
das
cltd
pop
push
lods
data16
ret
cmp
aad
enter
xorb
lods
je
cmp
out
pop
aas
mov
testl
pop
dec
dec
aas
imul
lds
mov
pop
jecxz
adcb
call
outsl
or
cmp
push
sbb
cmp
adc
lret
adc
pop
je
and
les
sub
add
lds
pusha
outsl
cli
dec
pushf
push
in
or
inc
repnz
sub
and
mov
jl
cmp
push
test
pop
test
push
xchg
out
call
movsb
or
insb
out
int3
das
push
inc
ror
testb
fldl
subl
adc
ffree
fistpll
xor
pop
inc
and
shll
fstpt
dec
mov
push
test
stos
fcmovu
addr16
es
rorb
jp
cmpl
dec
and
pop
mov
xchg
sub
mov
mov
js
xchg
rcrl
mov
and
mov
loopne
mov
mov
fcmovnu
mov
and
aad
sarb
aas
push
adc
orl
test
rcll
faddl
sar
sub
push
pop
mov
jle
jmp
js
fdivr
mov
mov
add
jmp
add
dec
jge
adcl
mov
icebp
pop
in
pop
sti
out
push
es
pop
aad
xor
jle
or
mov
aam
dec
repnz
mov
pop
jge
shlb
push
mov
dec
jecxz
dec
push
sbb
out
xchg
gs
aad
and
arpl
xor
stc
or
and
xor
dec
cmp
loopne
pop
push
jnp
adc
push
repnz
pop
ret
mov
and
mov
push
sbb
cmp
imul
push
lds
push
add
out
aas
ljmp
cmp
jle
xchg
aas
jp
mov
and
dec
fs
add
pop
js
and
ret
inc
jp
mov
sbb
mov
dec
xchg
in
cmpsb
dec
ds
leave
fimuls
xchg
jb
scas
cmc
xchg
dec
neg
out
push
pushf
inc
jb
cmp
leave
ljmp
dec
jle
mov
popl
aaa
add
dec
out
daa
rcrl
test
mov
scas
jg
enter
jno
in
dec
mov
addl
jbe
outsb
xchg
push
cmp
mulb
dec
jmp
int
sti
mov
outsb
cmpsl
mov
sub
js
pop
jmp
push
popf
stos
dec
mov
or
mov
xchg
adc
or
jnp
jo
subb
negl
leave
xor
out
sub
shll
in
aas
leave
loope
mov
loopne
push
jle
ficoms
sbb
add
jno
mov
fwait
repz
in
xor
roll
or
jg
stc
adc
or
dec
es
jmp
inc
scas
imul
mov
cmp
cwtl
push
xor
fldcw
aad
cmpsb
testb
mov
aaa
push
jmp
adc
cmpsl
mov
ret
cmpsb
fdivrl
inc
cmp
pop
push
mov
outsl
jmp
and
pop
std
bound
xor
fsubrs
into
or
test
sub
or
testb
lret
mov
in
loopne
jae
mov
sbb
scas
xchg
call
shll
mov
mov
mov
into
aaa
cltd
mov
sbb
cld
dec
shl
ss
pop
leave
mov
jmp
xor
dec
and
xor
popa
push
pop
lods
xor
fbld
out
and
cmpsl
and
xchg
imul
test
inc
cmp
mov
call
mov
push
mov
in
xor
sbb
lods
std
lea
jne
push
sbb
dec
sbb
xor
dec
jge
dec
fnstenv
bound
icebp
jne
or
cmpsb
cli
das
pushf
adc
mov
mov
dec
push
mov
pop
mov
mov
popf
sbb
stc
shlb
and
mov
lds
xchg
dec
xchg
push
jmp
mul
mov
das
das
cmp
sarb
pop
aad
push
in
shlb
inc
dec
aam
add
xor
and
je
lds
ja
xchg
cmp
push
pusha
or
pusha
mov
in
filds
and
insb
call
cs
ja
aad
inc
out
mov
inc
jne
repnz
add
mov
cmpl
xchg
mov
stc
sub
mov
test
push
call
jno
insb
lds
mov
mov
adc
sbb
jmp
arpl
js
cwtl
out
and
fisubrl
mov
xchg
push
or
stos
sbb
mov
sbb
xchg
sbb
xor
mov
or
inc
jno
rcr
cmp
mov
pop
mov
xchg
xor
out
inc
pop
jns
cmp
inc
adc
push
pusha
mov
jne
out
pop
aas
jno
dec
sbb
pop
aam
cmc
cmp
pop
xor
sarb
jge
repnz
mov
jle
cltd
adc
adc
mov
mov
shll
mov
adc
sti
lods
pop
outsl
hlt
adc
ja
cmp
outsl
push
cltd
inc
nop
dec
and
into
test
pop
xlat
mov
fmulp
jmp
ljmp
sbb
xorl
ja
ficomps
ds
insl
jae
pop
adcb
xlat
out
cmp
lods
leave
outsb
mov
fcoms
jbe
or
mov
cltd
std
or
or
cs
inc
adc
inc
add
outsl
pop
push
mov
and
sbb
jmp
cmc
rclb
sahf
shlb
ret
or
inc
jge
dec
mov
adc
xor
in
xor
mov
je
sub
int
mov
sub
jge
inc
cwtl
dec
add
jae
push
in
xchg
jl
insb
mov
ss
cmpsb
jo
test
or
fstpl
stos
inc
fisubl
mov
xchg
xchg
push
fsub
test
add
fldenv
inc
sahf
mov
cli
scas
push
add
xchg
mov
int3
mov
scas
repz
fdivr
sar
dec
jb
testl
out
xor
and
shrl
jne
adc
popa
scas
imul
xor
mov
mov
rorl
mov
arpl
fldz
les
mov
push
imul
jmp
push
sbb
sarl
cmp
add
add
pop
repnz
sub
enter
mov
pop
sub
imul
cmp
push
cmpsl
stos
ds
dec
movsl
clc
es
mov
mov
lds
mov
mov
jbe
pushf
dec
dec
repnz
negl
test
ror
aad
sbb
cwtl
or
mov
add
xor
out
fisubrl
xchg
xchg
fsubp
push
and
jge
xorb
mov
andl
cld
mov
jmp
dec
sti
jbe
inc
orb
dec
fbld
or
je
mov
lret
mulb
add
dec
in
mov
aaa
out
inc
pop
cmpsl
sti
jle
call
xchg
dec
mov
in
adc
mov
int
cli
lods
adc
adc
sbb
push
out
xchg
dec
mov
stc
push
mov
pop
sub
push
test
xchg
bound
mov
fcom
dec
push
mov
push
jecxz
es
fidivrs
inc
jns
in
aam
inc
rolb
cmp
fsubrs
arpl
xor
sub
pop
mov
mov
int3
clc
pop
lods
repnz
mov
xchg
out
call
jl
cmp
mov
scas
das
scas
mov
cmc
push
push
and
push
pushf
leave
jne
or
sub
outsl
inc
push
and
ret
add
lds
pop
mov
arpl
sub
sub
adc
mov
hlt
pop
ja
call
mov
sbb
and
aas
inc
sbb
ret
push
lret
add
iret
jb
cwtl
repz
pop
in
jnp
lea
xchg
pop
push
inc
push
jne
pop
mov
loope
sub
sub
mov
sahf
test
sub
or
es
cmpsl
push
inc
ret
mov
insl
or
mov
lret
inc
dec
pop
sahf
inc
aad
mov
and
daa
popa
add
mov
or
lods
in
call
xor
or
pusha
mov
mov
mov
pop
dec
inc
add
jge
xor
loop
jle
loopne
pop
stos
sbb
xchg
sahf
notb
add
bound
mov
cmp
jae
shrl
jg
andl
xchg
out
push
jbe
adc
add
cmpsb
aaa
ss
addl
jnp
add
push
sub
enter
popf
mov
ja
pop
pop
xchg
jo
daa
jle
cmpsl
mov
push
into
mov
sbb
sub
into
xchg
cltd
ja
sbb
cmp
enter
xchg
dec
ja
push
aam
clc
les
and
fidivs
test
lahf
cmc
sbb
xor
lahf
or
xor
push
insb
dec
clc
add
stc
lea
rorb
or
loopne
cld
xor
nop
xor
mov
add
add
mov
push
cmp
jmp
daa
inc
adc
int3
jae
pop
addr16
xchg
or
xchg
imul
push
push
repnz
push
shrl
sub
lret
push
shlb
inc
lcall
dec
shl
sbb
mov
and
aam
sbbb
je
push
sti
notl
clc
pop
cmpsb
aas
call
adc
mov
lea
add
xlat
in
or
scas
test
outsb
xchg
dec
xchg
call
add
jb
dec
outsl
sbb
pop
bswap
jnp
lahf
xor
imul
lea
adc
push
adc
movsb
shrl
sahf
rcl
cld
mov
inc
jg
lahf
and
sahf
clc
cli
ficomps
mov
jne
ror
pop
xchg
aaa
xchg
out
jge
ljmp
cltd
iret
imul
ds
pop
lea
fcoml
xchg
lds
dec
outsl
mov
adcb
cld
cmp
pop
mov
arpl
test
dec
inc
push
clc
push
lea
xor
or
add
ret
sbb
mov
aas
lret
mov
pop
es
cmpsl
popa
fldt
dec
mov
out
or
and
test
lods
lds
pop
int3
aad
push
xor
sbb
add
aaa
ret
fnstcw
sbb
sub
fsubrl
mov
stos
pop
or
lret
mov
jo
loop
sbb
addr16
push
fistpll
xchg
jnp
std
ja
sbb
jae
ficoms
pop
cmpsb
inc
js
sti
adc
inc
jnp
outsb
push
mov
and
pop
in
sti
adc
nop
adcb
cmp
pop
dec
pop
hlt
idivl
jg
popa
stc
stc
sbb
popl
scas
leave
sbb
cmc
or
es
push
std
hlt
out
mov
push
je
cmp
cmp
pop
jns
push
pop
shlb
mov
cmp
in
push
or
jne
cli
sbb
xchg
bound
xor
adc
sbb
stos
sbb
sbb
push
mov
subl
mov
mov
js
fcomps
out
aaa
call
loope
mov
test
xchg
out
mov
mov
out
inc
sub
std
add
mov
push
lock
and
inc
or
std
stos
js
add
pusha
xchg
dec
ja
inc
mov
fstpt
ljmp
leave
cmp
push
les
hlt
push
xchg
xchg
and
or
dec
pusha
ja
sbb
sbbb
or
mov
dec
sub
jle
or
pop
fldt
pop
xor
movsl
mov
nop
lods
inc
push
aad
sahf
jno
mov
pop
mov
cmp
rcrb
je
scas
mov
adc
mov
inc
and
divb
shll
sbb
jge
imull
xor
cmp
or
jp
mov
js
jmp
jno
shrb
outsb
xchg
sarl
pop
add
addr16
mov
ss
xchg
sub
daa
lods
mov
cmc
sub
cmc
cmp
lcall
addr16
cmp
pop
sarl
int
mov
data16
cmpsl
jp
pushf
mov
push
mov
cmp
jo
test
out
imul
test
aas
pop
dec
jns
imul
movsl
orl
mov
insb
daa
aam
out
adc
xchg
adc
sub
cmp
stos
xor
add
pop
dec
jns
in
xor
repnz
loopne
and
fucomi
mov
add
sarl
xor
lock
jae
cwtl
push
in
adc
or
add
adc
clc
xor
mov
loope
mov
in
sub
sub
cmp
adc
test
sbb
push
sbb
push
cmc
jns
mov
jmp
cmpsb
lea
scas
mov
rorb
in
fsubrs
je
hlt
or
addr16
aam
fxam
sbb
pop
fsubs
sub
jmp
out
cwtl
fisubrs
shr
rorb
mov
out
cwtl
data16
bnd
pop
jg
test
lahf
pop
sub
hlt
and
mov
mov
push
rolb
lcall
cli
movsb
inc
mov
jmp
sub
add
jae
jae
jb
pop
and
sahf
xor
stos
push
mov
jnp
adc
mov
sbb
mov
cmp
int
add
jae
loopne
ss
or
jae
inc
sub
sbb
arpl
iret
lahf
loop
mov
mov
push
or
mov
stc
enter
mov
pop
pop
lods
outsl
jmp
jl
mov
std
pop
je
popa
mov
stc
xchg
ja
sub
sbb
test
push
movsl
ffree
frstor
sarb
inc
nop
or
jae
sbb
pop
sbb
not
sub
movaps
movsb
adc
mov
leave
loop
loope
call
sbbl
mov
stos
fdivl
sbb
or
push
mov
ljmp
inc
mov
jg
test
jge
mov
and
add
ret
dec
faddl
in
fwait
add
mov
xor
inc
sub
mov
xchg
pop
ret
add
out
sbb
adc
sub
movsb
cmp
popf
and
xchg
imul
cmp
lret
std
push
add
adc
sbb
pop
cli
pop
pop
xor
mov
test
movl
add
mov
sub
mov
arpl
dec
sti
jp
pushf
jge
dec
aaa
mov
lods
pop
aam
mulb
lahf
sbb
mov
cltd
push
movsl
lcall
je,pn
sub
push
jne
push
and
int
scas
lret
xchg
inc
aam
mov
xchg
jbe
scas
xor
insl
scas
adc
sbb
sub
mov
mov
mov
push
push
in
lods
movsl
je
test
fldenv
daa
icebp
fsubr
inc
push
bound
sub
cmp
test
test
dec
push
sbb
out
push
sub
daa
pop
sub
mov
cmp
mov
jle
arpl
dec
repz
jmp
sarb
and
mov
sbb
xchg
adc
jge
bound
sahf
or
or
daa
adc
jb
gs
lods
cmp
loopne
scas
or
and
jnp
dec
mov
xor
fs
sub
jb
movsl
test
fbstp
inc
cmp
es
ja
js
sub
nop
dec
cmpb
add
lock
inc
mov
mov
dec
pop
inc
orb
jmp
les
stos
cmpsl
ror
or
mov
cmp
cld
inc
aad
xchg
sarl
xor
jecxz
pop
fs
loop
jbe
adc
xor
or
insb
lods
jmp
jle
dec
sub
das
inc
push
adc
je
push
xchg
dec
pusha
lods
cmp
push
push
adcb
jp
iret
push
dec
test
out
sub
test
push
sbb
xchg
push
pop
adc
jo
vpmaxub
xor
lods
push
fsubl
scas
push
sbb
js
sub
sahf
cwtl
cld
jne
xchg
incl
out
push
out
ror
mov
jg
call
test
js
popa
orb
mov
movsb
sub
imul
in
addr16
push
jecxz
loope
imul
pop
inc
lahf
push
mov
sbb
pusha
rorb
adcb
adc
push
push
ffree
xor
jae
pop
xor
mov
pop
xor
lods
or
cmp
mov
sahf
cld
mov
push
add
movsb
outsb
dec
mov
jg
out
shlb
in
and
jle
jae
leave
sbb
call
int3
jp
out
xor
sub
add
dec
pop
push
adc
pop
xlat
dec
cmc
jne
push
xor
lret
cmp
jnp
scas
popf
ss
xor
jl
inc
loop
ret
andb
mov
outsb
or
std
enter
add
pop
or
mov
rcr
scas
popl
cmp
in
les
push
stos
inc
dec
mov
mov
mov
push
fdivrl
cli
roll
cld
jae
data16
ret
negl
push
inc
in
jns
ljmp
pop
shlb
daa
enter
xchg
dec
adc
add
and
and
imul
loopne
popa
imul
lret
in
daa
pop
xchg
adc
add
jge
imul
inc
pop
jne
fwait
and
xor
pop
ja
xchg
lret
dec
and
mov
mov
imul
out
lea
sbb
addr16
jl
push
sub
mov
scas
out
imul
fisubs
jl
xor
jmp
mov
loop
jb
js
test
cmp
adc
and
jno
mov
les
sub
leave
adcb
imul
inc
cmp
test
cmp
ljmp
push
xlat
ss
cwtl
push
test
scas
inc
pop
xchg
jne
sbb
test
cmp
or
dec
iret
adc
push
lds
push
movsl
nop
pop
mov
jb
cmp
fwait
pop
fiaddl
test
in
rcrb
aas
inc
mov
hlt
jne
sub
push
bound
cmc
mov
mov
shlb
daa
or
std
das
mov
mov
push
icebp
or
lret
sub
pop
and
call
popa
mov
inc
xchg
xor
inc
inc
repnz
shrb
int3
jg
push
scas
pop
add
daa
add
hlt
sbb
es
movsl
jb
dec
inc
aas
popf
fisubrl
fdivrl
int3
or
loop
lret
fistl
test
sbbb
xchg
jnp
xchg
and
lret
notb
lret
stos
leave
push
xor
clc
movsl
mov
pushf
mov
in
pop
nop
xor
out
jb
mov
imul
scas
clc
lock
addr16
mov
inc
mov
sbb
sbb
cwtl
aaa
ljmp
std
mov
xlat
and
push
pop
outsb
leave
rcrl
hlt
repnz
lret
lret
xchg
pop
dec
cmpsl
test
movsb
or
fldcw
xor
inc
and
repnz
dec
ror
inc
cs
push
jnp
fadd
cli
rol
jp
mov
test
loop
pop
dec
lret
cmpl
pusha
mov
adc
out
push
xor
out
arpl
push
iret
lahf
sub
or
or
pushf
mov
mov
mov
fdivs
lahf
jns
sarb
test
mov
mov
mov
fcomps
icebp
push
sub
xlat
adc
enter
jg
pop
imul
inc
dec
les
mov
add
fisttpll
mov
scas
ret
fisttpl
jmp
sub
push
out
sbb
pop
push
lock
test
adc
dec
lcall
mov
add
and
cmp
sub
loopne
mov
mov
lret
sbb
movl
xchg
adc
or
addl
in
es
arpl
push
cmp
inc
pop
cmpb
xchg
out
fsub
popa
jb
cmp
movsl
pop
mov
push
mov
or
mov
sbb
clc
rolb
adcb
sbb
leave
scas
aad
test
mov
in
cmpsb
out
in
mov
sub
jmp
mov
mov
inc
ficomps
aad
test
add
adc
cmp
adc
dec
es
mov
addl
pop
cmp
push
jmp
lods
in
add
dec
and
inc
frstor
fs
pop
push
cmc
fnsave
sbbl
cmp
ja
aaa
inc
push
aas
sbb
movsl
mov
mov
sbb
repnz
sub
inc
or
out
call
clc
xchg
clc
mov
mov
jno
shrb
movsl
mov
pop
sbb
inc
jge
push
mov
rolb
jo
xchg
lret
insl
mov
movsb
inc
pop
cs
ds
fimuls
repnz
pop
pop
shll
xor
in
insl
mov
stos
sbb
imul
push
push
cmp
js
sti
outsl
mov
push
loopne
dec
repnz
in
push
push
xchg
insb
mov
lea
push
sbb
jne
cmp
jns
ret
jno
stos
jle
fs
gs
mov
notl
mov
subl
into
fstps
or
inc
fimuls
and
aas
cmp
mov
popa
push
sub
add
std
and
xchg
push
sbb
int
out
push
cli
into
cmp
les
mov
out
sub
fwait
mov
inc
enter
add
cmp
mov
sbb
fcmovne
mov
orb
xlat
rorb
nop
pop
and
pop
je
jecxz
adc
jnp
cmpsl
jecxz
jae
sbb
call
mov
cmp
pop
pushf
mov
or
sbbb
fisubl
sub
push
cmp
lret
jne
adc
outsl
pop
test
ds
push
and
dec
jbe
xchg
imul
mov
das
shll
adc
cs
aaa
mov
adc
scas
lret
xchg
mov
xor
femms
shll
pop
enter
push
rcll
xchg
push
testl
xchg
xchg
dec
fistps
jo
lahf
gs
pop
cld
sbb
sbb
sub
add
xchg
aam
imul
fwait
loope
push
aad
and
lea
add
lret
decb
fisubrl
je
jae
adc
push
mov
dec
xchg
push
test
xchg
xor
push
sbb
sbb
jae
insl
push
inc
dec
mov
adc
jns
orl
bound
jno
inc
ss
aas
dec
insl
repnz
sub
mov
push
xchg
sahf
inc
pop
lds
test
into
inc
jns
pop
outsb
xor
rol
insl
in
repnz
fldl
jle
movsb
cwtl
int
or
ret
or
add
cmpsl
mov
cmpl
repz
mov
in
in
insb
xor
xlat
adc
sarb
push
add
mov
mov
xor
lret
enter
xor
into
mov
pop
int3
insl
out
add
push
ja
out
push
sub
subl
cmpsb
ljmp
hlt
xchg
mov
jg
add
or
rcrb
repz
lods
xlat
push
jb
dec
out
lret
lock
sbbl
aas
xor
fs
push
loop
mov
fidivl
push
cltd
mov
xor
mov
lods
inc
imul
lret
lock
or
jae
lahf
aad
out
lahf
mov
sarl
sub
popf
add
lods
mov
inc
adc
aas
mov
dec
dec
ficoms
adc
add
mov
mov
adc
das
fildl
push
outsb
inc
sti
xchg
cmp
sub
adc
sti
mov
mov
sub
mov
sbb
mov
rolb
adc
push
std
mov
cmp
fnstcw
mov
jbe
jmp
push
in
xor
pop
andb
xor
in
sahf
sbb
jb
imul
pop
dec
sar
jo
movsl
cmpb
push
pop
adc
ja
loop
pop
push
ret
out
and
movsl
or
std
lret
sbb
sbb
dec
pop
cmp
mov
lea
sbb
sahf
lahf
jge
jno
movb
roll
xor
push
mov
test
xor
or
call
xchg
dec
outsl
ret
popl
jne
pusha
adcb
adc
sbb
inc
mov
mov
sbb
xchg
sahf
cmp
cmp
repz
adc
fisubs
adc
add
je
xchg
cmp
imul
inc
xchg
jp
iret
fisubrl
sar
push
lods
popa
ret
fdivl
or
outsl
push
lahf
jge
lahf
movsb
push
subb
sub
lock
or
clc
jl
mov
or
stc
dec
outsl
sbbb
mov
or
pop
push
ljmp
push
aad
aad
cmpl
pusha
out
test
ja
stos
adc
andl
xchg
loop
mov
out
fwait
dec
or
dec
mov
js
in
rclb
mov
cmc
or
rclb
std
popa
mov
cmp
addl
fdivs
add
enter
outsb
cwtl
mov
movsb
sub
pop
popa
test
sarl
jg
ror
out
loop
mov
sub
inc
mov
lcall
mov
in
shl
sub
mov
test
and
arpl
mov
js
pop
gs
xlat
sbb
and
jecxz
pop
iret
js
sbb
push
das
hlt
xchg
jne
mov
fisubrs
sbb
cmp
mov
es
fsts
fimull
mull
mov
cmpsb
add
inc
in
data16
pop
push
xor
sahf
add
movsb
test
jns
pop
fdivr
cmpsb
jns
stc
dec
sahf
addl
dec
dec
xchg
cmp
in
arpl
scas
cwtl
clc
mov
or
lock
and
iret
and
testl
sub
mov
adc
cld
test
lret
and
and
pop
mov
pop
push
les
adcl
jle
dec
xchg
pop
stos
adc
or
mov
mov
rolb
mov
jnp
lods
add
jmp
cmp
xchg
mov
dec
pop
outsb
xchg
sub
shlb
cmp
fwait
cmp
jl
out
das
stc
xlat
adc
pusha
fildll
jl
out
sbbb
or
sbb
jge
hlt
out
sbb
mov
jp
mov
cmc
in
mov
mov
xor
rep
mov
sub
xchg
enter
movsb
shlb
jle
in
arpl
sbb
pop
push
add
jne
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
jmp
mov
loope
addb
fstpl
arpl
adc
addl
push
adc
test
sbbb
rcll
xor
rcrb
mov
push
ds
out
sbbl
cld
push
sahf
andb
sbb
cmp
mov
xchg
adc
fiaddl
mov
stos
lahf
xchg
mov
inc
or
std
jmp
js,pn
or
enter
int
xchg
fmuls
test
add
test
popa
push
mov
mov
aad
je
mov
das
mov
xchg
aad
jae
sbb
adc
dec
mov
push
lcall
fwait
inc
popf
sti
loopne
dec
sti
test
pop
inc
daa
adc
stc
add
and
leave
loopne
jmp
and
jmp
xorb
dec
xchg
sbb
xor
mov
xor
loop
pop
push
idivl
and
cli
and
data16
or
or
pop
daa
and
nop
pop
xor
mov
jle
rep
jae
bound
out
cs
mov
adc
push
pop
jp
pushf
arpl
ds
adc
lea
or
pop
dec
push
into
ss
mov
xchg
or
jl
xor
outsb
add
mov
jl
mov
push
movsb
pop
pop
inc
xchg
cmp
sbb
in
les
std
push
sub
add
or
xlat
xchg
push
fcmovne
mov
jmp
mov
pop
dec
jmp
mov
outsb
xorl
jb
mov
xchg
mov
fbld
and
fisubrl
scas
jbe
xchg
push
add
int
and
jb
jae
add
xchg
or
or
stc
mov
aam
or
bound
xor
lcall
das
lret
lods
adc
ss
inc
add
jp
loope
and
push
add
mov
cmc
push
pop
sahf
mov
fdivrs
cmp
das
sti
andb
mov
scas
xchg
mov
test
les
sub
mov
insl
cmp
xchg
xor
add
sub
sti
mov
iret
push
mov
ss
jbe
adc
fdivs
cmpb
xchg
sbb
jno
add
shr
add
test
in
icebp
outsb
aas
sahf
mov
into
adc
lea
adc
out
fcompl
ret
cs
mov
ret
jb
mov
cmp
outsb
sub
ret
daa
push
jnp
inc
movsb
inc
xchg
je
ficoms
jle
or
push
test
cmpsl
dec
add
arpl
push
out
pop
dec
pusha
dec
push
and
fdivs
xchg
pop
inc
negb
jg
adc
fwait
ja
roll
fs
les
loopne
xchg
jg
xchg
jnp
adc
clc
sub
dec
insl
pushl
adc
bound
addr16
jno
fcompl
test
jb
xchg
sbb
push
or
inc
push
jp
test
scas
add
inc
fiaddl
jne
pop
jo
mov
inc
nop
pop
test
and
jmp
push
jb
sbb
xchg
or
dec
or
adc
out
shll
jg
and
ret
mov
jl
lahf
mov
aas
push
loop
mov
rcrb
sub
gs
mov
inc
repnz
hlt
in
sahf
aad
adcb
mulps
xor
pop
add
ror
cmpsl
lea
inc
cmp
int
mov
sub
xchg
adc
inc
inc
mov
lock
jb
pushf
sbb
ret
pop
rcrb
cmp
mov
insl
imul
out
scas
cmp
pop
lea
push
insl
mov
push
mov
out
mov
pop
xor
jmp
mov
scas
fsubs
jle
ret
adc
and
or
movlhps
cld
fmul
xchg
ret
fbld
in
sub
cwtl
fadds
or
hlt
mov
xchg
pop
in
dec
push
pop
das
ds
jae
test
lahf
lahf
in
and
xor
popa
adc
pop
adc
push
and
test
mov
sahf
mov
sub
and
xlat
outsb
fdivs
mov
pushf
fwait
or
mov
loope
or
ss
jne
and
add
pop
push
jl
pop
and
out
in
dec
decb
insb
jg
fs
lea
xchg
adc
test
in
js
jl
push
ret
inc
fwait
add
sub
sub
cwtl
dec
je
comiss
or
push
ljmp
xchg
test
minps
arpl
lret
out
stos
loop
in
add
popf
cltd
push
inc
dec
shl
mov
shll
xor
test
xchg
jp
loopne
push
adc
and
ret
insl
loopne
aad
cmp
movsb
data16
mov
lret
daa
negb
lock
out
ret
inc
adc
pop
mov
dec
adc
xchg
dec
in
rclb
stc
adc
or
das
test
push
inc
mov
push
aaa
jl
jae
inc
adc
out
or
enter
mov
mov
mov
xchg
mov
or
icebp
cmp
adc
jnp
dec
dec
xor
adc
mov
jge
popa
div
ret
mov
pop
popl
mov
pushf
in
push
dec
mov
mov
cmp
int3
repz
dec
sahf
gs
arpl
lcall
mov
push
xlat
cwtl
jge
ret
out
and
or
iret
ja,pn
adc
jb
arpl
adc
scas
inc
fwait
and
lods
cmp
fwait
pop
filds
lea
fimull
in
mov
dec
lea
xchg
mov
inc
arpl
mov
leave
push
dec
stc
inc
jns
das
rcrb
lret
xchg
mov
and
les
call
dec
push
cmp
push
sbb
rorw
mov
int3
mov
sub
push
pop
dec
xor
cmc
iret
pop
loope
xor
mov
sbb
adc
cmc
fisubs
sbb
cmp
mov
shlb
jecxz
add
loope
xorl
divb
xchg
and
mov
int3
or
gs
pop
les
sbb
pop
lods
xor
imul
inc
hlt
cmpsb
es
rolb
pop
subl
jnp
and
sub
xlat
add
pop
in
and
mov
stos
movsb
sahf
adc
mov
mov
jg
decb
test
mov
fwait
adcb
mov
aaa
faddl
sub
arpl
and
das
sub
in
das
cmp
dec
rolb
pop
xorl
sub
data16
inc
lods
inc
shlb
lret
into
in
inc
ljmp
outsl
gs
cmpsl
inc
mov
outsb
and
push
sub
adc
push
not
ret
cmpsl
xor
pop
dec
sbb
das
addl
mov
mov
les
in
sarb
mov
cmp
sbb
xchg
arpl
and
loopne
inc
push
jns
jae
push
mov
mov
leave
les
push
dec
fldenv
lcall
in
dec
loopne
ret
ja
testb
addr16
in
movb
scas
sti
mov
ja
stos
add
push
fcomps
insb
cmp
dec
enter
mov
pushf
popf
test
arpl
dec
xor
mov
inc
inc
insb
lds
jl
repnz
jbe
mov
fs
add
sbb
pop
inc
lea
add
movsl
cmp
dec
insb
push
dec
imul
ljmp
or
repz
mov
push
jae
push
pop
cmpsl
lea
fwait
mov
outsl
aam
test
and
test
jo,pn
push
cli
insl
and
and
inc
lcall
ret
imul
sbb
push
mov
or
aaa
inc
jp
push
out
fwait
xchg
mov
fcmovbe
dec
mov
daa
stc
mov
in
mov
cs
add
stos
mov
bound
jns
int
stos
mov
inc
loop
jmp
push
inc
mov
iret
mov
popa
aaa
ret
sbb
dec
int3
xor
inc
inc
je
inc
sub
add
repz
outsb
push
mov
dec
mov
cmp
decl
ja
mov
or
out
and
pop
sarb
fistps
xor
cmp
jb
imull
inc
pop
xchg
push
xor
and
cmp
test
xor
sbb
jmp
sbb
fdivl
mov
icebp
jno
cli
dec
pop
dec
jle
andl
mov
data16
xor
imul
repz
or
lret
mov
dec
lahf
imul
pop
lods
pusha
pop
insl
jl
push
fdiv
pusha
ja
mov
sub
js
jmp
repz
int3
test
ds
ds
rcrl
mov
push
out
loop
call
scas
add
lods
sti
aad
sbb
cmp
and
adc
pop
add
jbe
mov
mov
cmp
inc
and
xorb
cmp
cs
test
sbbl
addr16
jl
popa
sbb
ljmp
popa
sbb
loopne
je
mov
add
xor
push
sbb
in
test
add
jae
out
movsl
jl
mov
jg
bound
push
leave
imul
fildl
inc
sub
pushf
mov
push
out
pop
xor
ja
push
xlat
xor
hlt
cld
xchg
xchg
jno
call
movsb
jge
jo
jge
xchg
int3
mov
add
hlt
add
pop
test
lock
movsb
xacquire
or
dec
xchg
mov
mov
push
jb
cmp
sub
cwtl
pop
outsb
lds
sub
jbe
in
mov
sub
sbb
pop
push
and
cld
mov
ja
cmc
ret
and
pop
shrb
sbb
pop
rolb
xor
cs
test
addr16
fdivs
shll
rcl
repz
aad
sbb
loop
mov
cmp
xor
jne
push
add
cmc
movsl
leave
lods
adc
int
and
mov
dec
push
or
mov
push
add
cmp
mov
xchg
ds
adc
dec
lret
and
mov
stos
rclb
stc
pop
cmp
mov
andb
mov
push
fs
das
pusha
mov
and
inc
cli
cmpsl
inc
mov
jmp
sbb
icebp
stos
add
cli
xchg
jle
sar
ss
mov
lods
into
in
or
sarl
rcll
pop
push
imul
flds
sub
outsb
push
cmpb
sub
xor
test
mov
dec
sbb
out
xchg
cmp
sub
imul
std
jnp
lahf
into
pop
psrlq
in
call
outsb
sub
int3
mov
push
inc
sub
mov
hlt
das
out
out
jbe
dec
pop
stc
mov
and
xor
and
adc
movsl
fwait
mov
fs
mov
sub
pop
sub
loope
add
push
xchg
cmpsb
daa
mov
inc
sahf
adc
add
mov
addr16
add
in
or
cwtl
pushf
stc
and
adc
lods
loop
inc
js
popf
popf
ja
adc
or
dec
mov
idivl
test
imul
push
mov
and
push
sub
jle
mov
flds
adc
lock
test
mov
pushf
or
insl
aad
push
mov
out
jbe
test
dec
out
out
lods
fmull
pop
adc
ret
loope
repz
es
pop
mov
aad
cmc
jne
pop
xor
out
push
lods
xlat
fld
dec
nop
pop
jo
mov
test
aad
les
jno
lods
jle
in
gs
mov
dec
jg
fcomip
xor
push
aad
dec
pushf
cmp
lods
icebp
add
dec
or
cmp
adc
and
repnz
lds
movsb
jb
ds
orl
and
jmp
es
jle
pop
cmc
clc
inc
data16
cld
hlt
sub
mov
sti
lahf
mov
inc
cmp
cmp
cmp
lock
repnz
sub
xchg
rcll
xchg
add
dec
iret
dec
or
pop
ljmp
int
add
push
mov
dec
and
push
pop
bound
test
push
sub
mov
pop
sti
scas
sub
rolb
add
aam
insb
ja
fnstenv
mov
cmpsb
jb
ret
in
std
fwait
sub
jno
jo,pn
push
push
in
loop
sub
loopne
fwait
mov
icebp
cmp
lcall
xor
out
or
xabort
scas
dec
push
dec
dec
add
shlb
adc
cwtd
pop
jmp
stos
and
jg
push
sbb
ss
inc
rolb
mov
aaa
mov
pop
push
mov
movsb
inc
xchg
negl
push
cs
inc
xor
fcmovnb
sbb
lods
mov
or
pusha
dec
push
xor
dec
testb
mov
mov
and
cmp
out
rorb
inc
cmp
bound
aam
jb
subb
or
sbb
sbb
loop
lds
inc
cld
addr16
jnp
push
mov
arpl
nop
idivb
sbb
out
out
inc
pop
out
jnp
cld
out
call
sbb
out
push
xor
cs
jnp
fdivs
pop
loopne
xchg
jo
adc
xchg
push
lods
jmp
rcrl
jbe
add
or
cmp
xor
scas
aad
push
int
test
pop
leave
cld
repnz
or
inc
add
cmp
inc
xlat
daa
dec
and
push
icebp
clc
fwait
movb
in
adc
mov
out
popl
adcl
int
jae
xor
push
sarb
shll
fistpll
dec
jnp
out
hlt
cwtl
clc
cwtl
ja
dec
clc
lret
pop
inc
sbb
xor
mov
jbe
push
cmp
dec
pop
pusha
or
sti
cmp
pop
dec
xchg
ficoml
cmpsb
jns
andl
pop
arpl
cmp
cwtl
clc
dec
xor
mov
pop
sbb
ljmp
in
or
xor
push
cli
push
popf
fdivr
sbb
cmc
jno
loopne
pushf
xor
dec
fs
out
mov
sbb
add
dec
fs
rcrb
jnp
adc
enter
insb
lea
les
bnd
mov
test
stc
add
cmpsl
int3
add
adc
xor
fs
popf
ds
cld
test
stos
and
popf
in
and
pop
test
adc
pop
jl
nop
adc
lea
push
call
xchg
movb
mov
sub
icebp
sbb
in
mov
jb
mov
push
xor
clc
fimuls
push
add
sbb
push
lret
fdiv
sub
or
pop
lods
adc
adc
xchg
xor
adc
js
mov
in
mov
in
and
jo
in
movsl
cmp
les
ret
ficomps
loope
dec
std
xlat
test
add
xor
aaa
aam
cwtl
jne
mov
stos
mov
imul
popa
daa
pop
xor
and
cltd
jmp
xchg
sahf
std
mov
dec
rcrl
pop
ret
mov
jno
push
movsl
mov
movsl
push
adc
jb
imul
dec
pop
xor
out
pop
push
jp
leave
movsl
dec
dec
cmpsb
imul
mov
lret
and
rorb
fldl
sbb
addr16
adcb
or
push
cwtl
cmp
fs
daa
jnp
mov
enter
xchg
pop
inc
sbb
pop
cmpsl
mov
lcall
cwtl
es
jb
adc
xchg
push
jo
lret
mov
mov
mov
sub
sub
lahf
mov
dec
in
xor
dec
mov
mov
push
jmp
cwtl
lods
data16
or
pop
xorb
gs
pop
inc
inc
imul
pop
or
dec
pop
xor
or
data16
aas
dec
cmp
mov
stos
repnz
xor
add
dec
push
in
push
ror
addl
in
test
into
mov
push
js
or
movsb
push
xor
sbb
arpl
dec
mov
inc
mov
stos
add
add
pop
subl
test
sarb
push
scas
call
rolb
clc
popa
iret
lahf
std
xor
aas
fildll
loope
shrb
nop
adc
out
loop
cmp
sub
sub
insb
mov
xlat
cli
out
mov
and
xorb
ret
data16
dec
pop
out
mov
lret
iret
sahf
sbb
push
lret
or
add
sarb
pusha
xor
adc
dec
loopne
test
pop
jbe
push
xchg
and
ljmp
lcall
scas
lahf
ja
pop
mov
decl
jmp
mov
mov
stc
dec
rcrb
out
fadds
inc
push
sbb
jbe
jecxz
inc
pop
push
mov
popf
or
inc
std
fstpl
add
lods
call
mov
lds
pop
es
stos
daa
inc
xor
sbb
cmp
inc
mov
fidivs
cmpsl
les
popa
ficoml
mov
lods
mov
mov
inc
jnp
ljmp
aaa
pop
or
cs
inc
xchg
sbb
ljmp
repnz
out
pop
add
cmc
cmp
sahf
into
nop
dec
or
and
inc
or
inc
push
lea
cmpb
insb
stc
sub
in
pop
jne
jecxz
daa
and
jmp
xchg
into
cmp
shl
mov
outsb
inc
out
xchg
fisubs
jbe
iret
adc
sub
cs
mov
mov
jbe
and
scas
jns
out
mov
and
dec
jle
stos
pop
lcall
fldt
pop
and
mov
mov
add
xchg
icebp
dec
pop
pop
xor
and
mov
or
push
in
push
sbb
aam
bound
xor
push
cmp
jg
push
ss
stos
loop
mov
rcrb
dec
push
imul
pop
fndisi(8087
push
ds
ss
cmp
sub
aam
inc
xchg
cmp
cmpsb
lods
sti
out
bound
icebp
add
das
cmpsb
fadd
cltd
js
mov
inc
ss
adc
sbb
fadds
pushf
out
push
leave
jns
mov
add
pop
jne
add
jmp
sbb
sbb
push
xchg
sti
aad
int
clc
daa
outsb
movsl
fdivrl
mov
inc
jg
sbb
aam
mov
mov
inc
cs
rcrb
lcall
movb
ficoms
into
fstps
mov
pop
or
aad
add
jle
pop
call
fcmovbe
jecxz
out
xchg
out
push
cmpsl
cmp
adc
fsub
out
ja
jge
nopl
mulb
sbb
cwtl
or
mov
mov
mov
mov
gs
fistl
cli
fnop
or
cltd
dec
scas
popa
sbb
fidivl
mov
sub
adc
or
mov
bound
cltd
cs
sbb
loopne
int
mov
push
test
jle
aas
cli
loop
and
jle
test
subl
fnstsw
jge
out
and
mov
pop
sub
les
or
push
jno
or
inc
dec
mov
enter
or
dec
cmc
mov
test
mov
push
gs
pop
ret
cmp
and
add
or
popf
pop
jnp
vandnps
les
sarb
jbe
pop
jmp
cmpsl
cmp
jne
mov
clc
inc
jb
xlat
or
dec
xchg
jnp
dec
sub
adc
push
enter
std
cltd
pop
popa
fisubs
les
ja
adc
cmpsl
stc
xchg
xor
add
les
cmpl
pop
sub
mov
repz
in
inc
jne
hlt
inc
xor
jo
rorl
shrl
ljmp
sbb
adc
mov
or
out
sbb
push
add
push
jae
jns
inc
jecxz
add
insl
cmp
cli
xor
fadd
and
das
xchg
pusha
xor
add
push
shll
test
dec
mov
int3
cs
or
mov
test
sarb
cmp
and
push
lret
in
loopne
inc
inc
arpl
push
xor
jmp
dec
fmull
imul
adc
ret
jecxz
jecxz
testb
push
xor
js
pop
or
cld
mov
mulb
push
aaa
xchg
and
nop
pop
push
inc
jmp
push
or
xchg
xchg
push
inc
or
pop
cmp
mov
pusha
add
dec
jns
and
xor
call
dec
cwtl
test
mov
arpl
sbb
mov
ljmp
sub
data16
loope
lods
icebp
adc
aaa
ret
pop
fsubrs
dec
jge
lahf
mov
bnd
ficompl
insb
bound
fwait
loop
pop
sbb
adc
sahf
pop
mov
lds
mov
pop
pop
push
dec
iret
or
push
repnz
cmp
fildl
cmp
sbb
fcmovne
jge
lahf
fnsave
inc
clc
outsl
imul
add
jb
into
icebp
dec
aaa
lods
nop
inc
lahf
xor
pop
std
mov
or
adc
add
out
data16
inc
push
dec
mov
push
shll
addr16
sahf
test
les
sub
sbb
lock
lret
dec
or
es
pop
mov
sbbb
mov
mov
popa
mov
push
or
fnstsw
dec
fists
sub
cmpsl
leave
aaa
xor
lds
mov
dec
cmpsl
mov
push
cltd
test
push
mov
movsl
push
xchg
cmpsb
lods
push
xor
aas
or
cmpsb
cmp
ret
fcoms
jge
xor
adc
out
jne
cmp
ret
adc
sti
fstps
xor
push
jg
ret
jg
repnz
mov
cmpb
shr
dec
lahf
pop
lea
scas
adc
push
xor
fcoml
lret
pushf
sub
out
iret
cltd
scas
out
dec
mov
das
and
mov
rcrb
scas
sub
int3
sbb
jo
mov
xchg
jp
in
dec
leave
and
jbe
xor
lods
and
stos
jecxz
adc
sbb
sub
scas
popf
xor
popf
shrb
cwtl
xor
adc
cmp
imul
dec
inc
fdivr
or
push
inc
jns
sti
add
pop
mov
loope
push
and
jmp
adc
push
movb
pop
jmp
rcrb
insb
lock
mov
cwtl
loope
sar
movsb
sbb
add
push
xadd
stc
clc
xor
cli
js
mov
test
daa
lds
mov
xchg
popa
inc
bound
ljmp
imul
and
add
mov
movsl
outsl
push
inc
adc
cwtl
cmc
adc
mov
leave
pop
push
shll
ret
in
cmp
and
mov
icebp
pop
or
xchg
pop
arpl
mov
mov
out
or
mov
jo
mov
xchg
inc
mov
push
ret
push
and
add
pop
movsb
xor
sub
xchg
inc
jb
pop
sbb
xchg
push
out
push
icebp
push
lods
add
loop
xchg
or
mov
pop
pop
sti
mov
xor
sbb
adc
push
sbb
mov
mov
pop
out
imul
daa
pop
jge
sub
test
pop
xor
hlt
outsb
sahf
fwait
stc
cmp
jne
mov
mov
jb
repz
jecxz
aas
sbb
mov
jne
ficomps
sbb
fdivs
mov
mov
lret
cmp
sub
xchg
in
push
mov
lcall
jne
inc
add
mov
stc
push
das
movsb
xchg
mov
mov
leave
push
pop
std
scas
arpl
mov
aad
jg
pop
xchg
push
adc
sti
addr16
aam
out
es
test
sbb
inc
ljmp
les
push
mov
pop
loop
fnsetpm(287
pop
shll
aam
xor
sbb
movsl
fwait
xchg
dec
and
outsb
or
xchg
ss
bound
cltd
roll
inc
mov
fsubrl
pop
inc
xchg
dec
mov
adc
popa
ffreep
outsl
lods
ret
dec
mov
in
sbb
sarl
dec
mov
xchg
sbb
lods
sub
xor
mov
cmpsl
in
test
add
xchg
loopne
mov
xchg
jp
add
sub
movsb
mov
fwait
mov
loop
inc
mov
sbb
push
loop
cmp
sti
test
or
out
clc
sbb
pop
in
or
adc
call
int
push
lea
mov
gs
push
insl
icebp
adc
xor
enter
xor
rorb
mov
xchg
scas
cs
nop
push
mov
ja
xchg
inc
insl
mov
insb
jne
adc
dec
test
pusha
fmulp
enter
jae
sub
pushf
mov
mov
aaa
mov
in
test
lds
lds
cmpsb
stos
jmp
ss
jp
lods
cmp
dec
mov
and
xchg
imul
lds
and
nop
test
pop
int3
sbb
ret
push
loope
lods
push
sub
pop
mov
xor
pop
or
xchg
or
jb
daa
gs
test
cs
push
jl
movsl
fldl
sub
cs
enter
pop
adc
pop
enter
orb
insl
sub
cmp
jecxz
lahf
inc
loopne
xchg
addr16
or
push
mov
sub
jns
adc
jg
fbstp
pop
pushf
xor
ljmp
mov
sti
loope
faddl
es
arpl
inc
adc
fimull
adcl
jge
push
and
shl
mov
xor
fists
lahf
jg
jmp
in
dec
lret
in
xor
cmpsl
lods
xor
xchg
mov
fimull
cmp
out
xor
sub
adc
cmpsl
mov
les
sub
gs
sbb
adc
shll
push
fists
mov
adc
lds
xchg
js
push
mov
sub
int
sbb
stc
jbe
pop
mov
cmp
test
mov
xchg
jecxz
addr16
add
bound
jle
and
mov
adc
cmp
pop
popf
and
imull
xor
aas
dec
cmpsl
mov
cmc
pop
mov
mov
and
xor
es
out
xchg
or
sarb
cmp
dec
adc
fstpt
mov
fimuls
mov
pop
sbbb
xchg
pop
xchg
decb
mov
jmp
and
xchg
and
leave
pop
lret
inc
mov
out
mul
and
jne
lahf
push
xor
xor
mov
mov
sbb
out
and
ficomps
mov
std
aaa
icebp
inc
add
stc
jo
xchg
out
xchg
leave
and
lret
loopne
jg
jp
aam
xchg
mov
repz
stos
pop
jmp
push
leave
or
insl
adc
jp
or
es
int
cmc
imul
and
notb
inc
mov
hlt
rcrb
outsl
pop
push
mov
sbb
loop
or
xchg
fcoml
cmp
cltd
outsl
cld
push
or
mov
mov
lcall
int3
scas
lret
mov
push
ror
jl
cmpsb
jnp
daa
outsl
mov
push
int3
cwtl
mov
push
cmp
loopne
pop
jnp
hlt
sbb
filds
mov
pop
sbb
jo
adc
or
test
fstl
push
dec
xchg
stos
and
fcoml
inc
and
xchg
dec
lds
notl
out
mov
sub
scas
mov
mov
js
lods
lret
int
push
sub
and
push
into
jg
pop
push
mov
lahf
int
sub
and
test
push
leave
icebp
inc
subb
repz
aam
mov
mov
test
leave
dec
lret
pop
lods
mov
lret
add
cltd
pop
xor
repnz
popf
push
dec
and
nop
xchg
jb
or
fdivp
jmp
repnz
mov
in
mov
pushf
jns
fidivrl
nop
in
or
pop
push
mov
jle
in
add
inc
sbb
arpl
sbb
inc
shll
or
bound
jne
sbb
inc
test
lret
mov
xchg
in
rolb
xor
call
sbb
sbb
xor
aam
xor
inc
push
mov
mov
xchg
pop
and
rcrl
lods
shlb
push
cmp
pop
js
cmp
lock
lods
jle
push
add
xchg
or
lahf
xor
out
int3
in
ja
cmp
stc
mov
adc
mov
test
sub
lahf
dec
cmpl
leave
mov
inc
decl
push
aas
xchg
imul
lods
push
xchg
xor
pop
in
adc
lret
sub
ret
sub
inc
shl
jns
rcll
mov
int
xchg
std
adc
sbb
mov
and
enter
push
js
xlat
aam
xlat
cs
je
push
sub
cmp
xchg
jbe
inc
rol
cmpsb
leave
stos
and
cmp
add
mov
mov
xor
or
out
cmpsl
mov
mov
mov
imul
push
push
mov
call
push
pop
add
jp
cli
pop
cli
sbb
sbb
mov
mov
fsubs
xchg
add
icebp
mov
mov
test
inc
xchg
stos
rcr
flds
call
adc
repz
dec
mov
cltd
ss
cmpsl
cmpsb
dec
push
into
fidivrl
fmuls
cmp
jle
pop
shl
std
out
or
lret
hlt
les
push
out
outsl
daa
je
xrelease
mov
mov
xchg
lods
cmp
lahf
in
xor
jge
out
jmp
xchg
lea
adc
cmpsl
xor
xor
cmp
push
or
dec
xor
mov
test
jmp
jle
popf
jmp
loop
sbb
rcrl
rcrl
sub
push
xchg
or
es
push
dec
sarl
xlat
or
lcall
adc
pop
jl
sub
sahf
push
aad
xchg
mov
ja
jbe
mov
push
lods
mov
cmp
adc
xor
inc
add
or
pop
lret
sbb
pop
cmp
in
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
mov
adc
mov
xor
subl
add
mov
movzbl
sub
mov
mov
xor
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
add
mov
adcl
xor
mov
adcl
add
movzwl
sub
mov
movb
sbb
lea
mov
mov
sbbl
mov
xor
xorl
inc
andl
mov
add
movl
addl
push
movl
mov
push
mov
mov
sub
or
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
addl
add
movl
jmp
mov
addl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbbl
add
addl
movzwl
xorl
mov
sbb
mov
movzwl
orl
xor
add
movzwl
mov
mov
movl
inc
mov
mov
movl
cmp
movl
jne
or
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
mov
sub
xor
and
add
adcl
mov
mov
xor
add
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
xor
xor
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
movl
neg
movl
movl
mov
mov
adcl
mov
xor
xor
add
mov
mov
mov
je
mov
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
adcl
xor
sub
subl
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
xor
or
mov
xorl
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
call
mov
dec
mov
jmp
mov
add
subl
imul
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
add
subl
or
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
call
cmpl
jb
mov
sbbl
mov
mov
andl
add
addl
xor
mov
sbb
mov
add
mov
movl
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
call
jmp
mov
mov
adcl
lea
adcl
mov
mov
neg
mov
sub
add
mov
mov
mov
and
mov
xor
movl
add
jne
jmp
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
sub
xor
xor
sub
mov
subl
mov
mov
movl
xor
andl
xor
sub
orl
sub
xorl
xor
movl
mov
mov
movl
mov
jmp
andl
xor
or
inc
mov
cmpl
jge
jmp
push
pushl
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
adcl
xor
addl
xor
sbbl
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
inc
arpl
and
xchg
sahf
pushf
ja
jae
mov
mov
jl
cmp
imul
sub
insl
leave
mov
xorl
ja
push
jl
dec
and
sub
andl
mov
cwtl
sub
jge
sbb
push
pop
sub
test
adc
ficoms
sbb
and
idivb
stc
imul
addr16
sbbb
sbb
in
nop
mov
loope
mov
pop
in
xchg
xchg
daa
dec
sbb
lret
in
jmp
xorb
mov
pop
push
ja
sbb
fcmovu
jo
iret
lret
or
inc
call
mov
xor
lret
mov
mov
scas
dec
dec
push
push
jmp
mov
stos
subb
pushf
sub
cwtl
add
xchg
push
mov
outsl
stos
dec
push
mov
test
cld
mov
xor
push
xchg
pop
ja
repz
gs
cmpsb
insb
incb
jno
les
dec
pop
cmp
add
mov
sar
shll
repnz
inc
inc
and
and
int
xchg
clc
mov
xor
leave
add
das
cmp
xchg
adc
ss
sbbb
cwtl
addr16
and
dec
dec
addr16
sbb
sbb
fs
loop
inc
sti
mov
push
fiaddl
sub
sub
mov
aas
xor
popa
cld
pop
lcall
pusha
xorl
or
mov
mov
call
fsts
and
sub
or
shrb
jmp
sub
cmc
scas
cmp
xchg
or
clc
xor
fnsave
rcll
cmp
les
inc
inc
test
lock
ja
cmp
xor
mov
jae
xchg
sahf
pop
in
rcrl
gs
ss
shlb
icebp
lcallw
ficoms
mov
adcl
pop
fdivrl
addr16
sbb
es
dec
rcrb
movl
mov
and
pop
aam
push
cmc
into
xchg
scas
xchg
mov
adc
idivb
test
mov
pushf
add
int3
imul
bound
aas
fidivrl
in
jb
xor
aam
inc
sbb
pop
sahf
call
xlat
pusha
mov
ljmp
pop
inc
pushf
fsts
enter
sbb
dec
xchg
fnsave
jmp
into
inc
mov
mov
popf
add
dec
pop
lds
test
movsl
aad
sbb
adc
push
pop
pop
out
xor
add
bound
sub
fsubl
dec
mov
nop
pusha
pop
dec
pusha
bsf
pop
imull
shrl
ret
push
lods
sti
fcoml
repz
loop
cltd
dec
jne
xchg
cmc
push
mov
loope
and
mov
xchg
in
inc
cmpsb
div
pop
jae
outsb
xchg
fs
mov
add
mov
mov
arpl
aaa
push
repnz
stos
arpl
addr16
sub
filds
mov
movl
popf
lcall
daa
jge
repnz
or
add
sbb
dec
jno
dec
adc
xchg
add
push
xor
std
push
popa
xor
dec
mov
in
popa
dec
aas
aaa
cmp
mov
xlat
ds
cwtl
inc
pop
fs
push
fisubl
lods
jb
jb
mov
scas
add
mov
test
sahf
outsb
pop
mov
add
xchg
data16
add
and
pop
jle
mov
fstl
lods
out
cmp
cmc
in
nop
ret
xchg
pop
push
jecxz
fdivrl
push
in
or
xchg
pop
inc
lock
xchg
adc
cli
mov
mov
leave
inc
or
dec
out
and
add
mov
jecxz
push
cmp
push
psubq
push
pop
xchg
imul
popa
jo
sub
icebp
mov
adc
adc
fadd
fisubrs
xchg
xor
test
xchg
push
pop
cmpsb
pop
xor
lret
or
mov
cs
insl
jb
test
sub
adc
clc
or
sbb
cs
sub
ret
jns
add
cmp
add
cmp
or
mov
sub
jnp
mov
testb
and
cmpsl
movsb
sub
das
and
andl
jge
inc
cltd
leave
xchg
cltd
push
jo
push
pop
lea
mov
cmp
push
add
inc
es
and
int
shll
or
mov
jmp
int3
xor
leave
into
jno
or
pop
icebp
adc
loop
cmp
mov
add
jne
mov
fsubrl
ss
sbb
out
xor
xchg
in
mov
adc
push
mov
add
mov
repz
dec
xchg
mov
imulb
jae
mull
mov
leave
xlat
mov
icebp
in
jmp
push
or
stos
mov
xor
mov
and
xor
jle
mov
in
pop
mov
iret
out
fisttpl
loopne
pop
push
aad
xor
adc
or
jmp
iret
push
clc
icebp
mov
andl
rorl
test
or
lret
xchg
and
test
and
push
outsl
pop
pushf
pop
xor
sbb
orl
cmp
and
and
scas
pusha
lret
mov
insl
rorb
loopne
fs
arpl
pushf
daa
stos
shlb
call
sub
mov
fidivl
outsb
jbe
test
or
stos
rolb
negl
jnp
sub
push
insb
mov
fildl
pushf
lcall
add
or
push
test
push
sar
adc
xor
aam
xor
mov
mov
int3
xor
frstpm(287
sub
cmc
adc
dec
ret
inc
sar
cli
push
cmp
xchg
push
mov
imul
and
mov
out
leave
sbb
and
in
adc
imul
mov
xchg
movsl
leave
cmp
sbb
pusha
dec
fstl
ljmp
out
fcompl
push
lods
fistps
mov
loopne
and
lahf
xor
aas
iret
popf
mov
scas
push
jne
jg
inc
mov
adc
inc
pushf
mov
sbb
addr16
adc
xor
cmp
mov
shrl
dec
pop
jg
icebp
xchg
mov
ljmp
mov
adc
enter
and
in
mov
popl
not
lea
into
rorl
std
lcall
aaa
iret
xchg
dec
adc
dec
imul
dec
or
mov
filds
shr
mov
pushf
jns
in
lds
adc
mov
inc
movsb
mov
sbb
cmp
mov
mov
adc
dec
push
adc
mov
or
xchg
stos
mov
lcall
dec
mov
fldcw
cmp
stos
insb
ljmp
mov
jbe
test
imul
mov
push
jp
ds
aam
imul
hlt
addr16
cmp
add
andb
das
jnp
leave
lock
clc
mov
inc
add
cmp
mov
sub
cwtl
aad
mov
mov
insb
mov
inc
xchg
cmp
loopne
sbb
sti
leave
adc
sbb
inc
fwait
add
push
ds
mov
out
mov
insb
dec
pop
and
mov
or
adc
jo
lret
imull
stc
repnz
shrb
dec
dec
cmp
fldenv
sbb
jmp
add
mov
sahf
add
leave
rcrl
adc
daa
dec
inc
cmp
jb
clc
or
sbb
push
jnp
mov
or
arpl
in
fidivs
sti
dec
call
leave
xchg
xchg
fucomi
mov
sbb
repz
inc
or
aam
jb
cwtl
in
sti
pusha
mov
insb
daa
sti
dec
sbb
sbb
pop
sbb
clc
in
lahf
gs
cmc
in
mov
cmp
jmp
jmp
mov
fcmove
xorb
dec
movntps
subb
xchg
cmp
xchg
cmpsb
movsl
or
pop
xor
fucomip
mov
repnz
scas
inc
dec
popa
cmp
lods
or
pop
int3
add
jbe
xchg
lock
test
aad
cs
incb
add
mov
mov
xchg
enter
imul
add
adc
cmp
cwtl
rcrl
add
cmc
fdivl
dec
rol
push
in
ja
movsl
inc
push
xlat
and
lahf
shrb
push
fnstcw
enter
sub
ljmp
cmp
lods
add
mov
stos
and
sub
dec
ret
and
or
sbb
call
sbb
pcmpgtd
int
lret
les
call
sbb
mov
dec
dec
outsb
movsb
pushf
or
xchg
data16
rol
jb
push
fabs
cltd
mov
and
mov
mov
sbb
xchg
fildl
ds
outsb
lods
test
das
dec
movsb
push
fs
shr
jnp
sbb
bound
leave
add
fimuls
cmpsl
je
inc
cmp
pop
adc
mov
loopne
xor
sub
cmp
fmull
sahf
or
mov
movsb
push
mov
pop
arpl
pushf
mov
sub
dec
lcall
pop
mov
and
cmc
sub
lret
push
push
and
mov
jge
mov
sahf
mov
iret
mov
fwait
sub
cmp
shlb
fdivrl
rcrb
cli
iret
stos
add
ljmp
cmc
sub
fwait
add
fwait
add
and
and
pusha
pop
sahf
push
xor
and
jb
mov
pop
xor
jge
cmp
mov
mov
enter
adc
fwait
stos
xchg
mov
and
sbb
pop
mov
xchg
and
dec
shl
jne
jno
jne
push
adc
and
xchg
inc
pop
imull
mov
aam
mov
fs
push
push
xor
mov
nop
push
xchg
ds
push
imul
int3
loopne
sbb
insb
lock
xor
into
insb
and
test
loope
xlat
sti
pop
in
das
pop
add
mov
or
add
or
fwait
into
roll
repnz
push
popl
icebp
adc
cwtl
mov
shl
mov
addr16
cmpsl
inc
cmc
dec
adc
daa
repz
sbb
cli
andb
and
pop
aaa
fbstp
ss
dec
fwait
outsl
loop
mov
addr16
mov
jp
fdivs
sbb
mov
mov
lret
into
pop
xchg
lock
flds
aas
aam
test
or
inc
imul
xor
inc
cmp
push
psubsb
fsubrs
inc
pop
jbe
loope
jae
adc
stc
mov
sub
dec
sbb
iret
sbbb
into
sbb
lock
loopne
pop
dec
leave
lods
mov
sub
rcrl
fcomps
call
pop
dec
sbb
dec
inc
out
or
xor
fiaddl
notl
xlat
jge
mov
sub
lds
pop
daa
dec
jg
scas
mov
pop
mov
rclb
and
xchg
hlt
cmpsb
push
sub
sbb
shrb
xchg
or
in
sbb
aas
inc
cmc
ficompl
push
stos
insl
daa
xor
imul
movsb
push
in
clc
cmc
popl
inc
push
xorl
cmp
cmpb
sbb
and
icebp
adc
das
cmp
out
fisttpl
sbb
xchg
idivb
lahf
cmp
jmp
mov
jb
std
ret
int3
shrb
dec
bnd
scas
mov
mov
mov
stos
out
vmovdqu
pop
mov
int
pop
push
mov
inc
push
popa
lods
sti
inc
repz
xor
int
les
or
push
jl
out
loopne
xchg
test
cltd
icebp
fs
xchg
sbb
sbb
cs
push
mulb
cmp
sub
pop
bound
les
cmc
lods
mov
jle
xchg
jmp
sub
adc
mov
push
pop
mov
lret
fstps
test
lret
adc
inc
lcall
jnp
lods
and
jg
nop
inc
das
dec
mov
or
xchg
pop
xor
mov
inc
ss
dec
test
fldt
sti
jno
or
outsb
cmpsb
or
mov
fcoms
call
push
lahf
cmovns
xchg
mov
sarb
dec
vpcmpgtw
xor
inc
pop
cmc
das
push
dec
add
loop
dec
dec
stos
jp
sub
pop
cmp
sarl
popf
mov
je
lahf
jg
push
rorb
mov
fisubrl
inc
lret
divl
iret
test
jge
sbb
pop
mov
gs
std
push
out
mov
xor
inc
imul
xlat
or
pusha
dec
mov
aaa
hlt
dec
jb
jp
pop
cmpsb
es
in
cmp
mov
pop
cmp
ret
jge
mov
sub
cwtl
lcall
nop
mov
ja
lods
out
xor
or
jl
cmp
iret
call
dec
inc
and
pop
cltd
les
pop
push
inc
sub
sub
mov
adc
cmp
ljmp
lods
mov
push
xlat
loope
xchg
fstps
pop
push
movsb
jl
scas
inc
cmpsb
add
loop
cmp
cmp
jge
test
jo
fisttpll
daa
xchg
xchg
cmp
cmp
cli
xor
inc
pop
insl
add
repz
enter
mov
dec
scas
dec
pusha
push
inc
ds
stos
mov
pop
int3
fs
mov
fcomps
push
fwait
jl
mov
popa
mov
mov
mov
nop
dec
pushf
lock
or
sbb
scas
sub
cld
mov
fdivl
pop
jae
imulb
out
jl
dec
cld
pop
mov
inc
pop
and
inc
fidivrs
xchg
jl
hlt
shl
jp
sub
inc
mov
add
sar
subl
daa
int
arpl
lea
pop
dec
inc
lock
inc
je
frstor
fdiv
pop
icebp
das
add
add
or
pusha
add
mov
mov
ss
in
notl
addl
loope
loopne
pushf
jbe
add
pop
popf
push
outsb
pop
mov
push
mov
cmpl
sbb
insl
aad
and
int3
xchg
ja
leave
mov
sbb
mov
xlat
lcall
notl
xchg
incb
ret
cltd
xor
cmpsb
xchg
or
sbbb
fwait
insl
scas
mov
add
rcr
xchg
and
sub
dec
adc
mov
ds
outsb
orl
fcompp
outsb
fisttps
jmp
jnp
clc
rcrl
push
sub
pushf
dec
in
addr16
push
test
jl
sub
xor
cld
pop
mov
and
xchg
daa
testl
mov
int3
and
insl
das
cmpsl
jno
repz
rcll
hlt
clc
loopne
xchg
mov
decl
dec
cmp
dec
shlb
clc
sbb
jnp
sub
push
push
dec
popf
inc
test
mov
clc
push
out
nop
stc
stos
mov
je
dec
jns
mov
add
shr
addr16
pop
ret
mov
mov
mov
or
int3
ja
gs
cmp
push
aaa
ret
ljmp
divb
push
xchg
jne
ljmp
mov
mov
lahf
jno
lds
loop
daa
xchg
es
out
cwtl
pop
xchg
and
or
push
pop
lret
fisubrs
arpl
orl
ret
adc
lds
cs
xor
and
lock
daa
inc
aaa
dec
mov
fwait
sbb
lret
sub
outsl
lret
lret
mov
push
gs
dec
or
bound
mov
lods
pop
hlt
pop
sti
jl
push
ret
mov
xor
jno
pop
repnz
movsl
and
dec
mov
mov
add
outsl
mov
pop
out
out
adcb
xchg
lods
fs
in
sub
std
js
cmp
pop
das
clc
or
inc
push
jae
xorb
or
popf
mov
shrl
or
and
push
dec
js
addb
mov
loopne
push
bound
push
jb
loop
mov
push
dec
inc
or
ljmp
into
add
out
in
imul
mov
iret
dec
lods
cmp
in
or
adc
cmp
cmpsb
out
dec
push
pop
xorps
addr16
les
and
jae
addr16
inc
cmp
int3
or
add
in
js
lahf
pushf
inc
movsl
int
test
scas
mov
stos
cmp
fimull
movsb
test
and
dec
arpl
jle
sbb
inc
cmpsl
cmp
test
push
fdivrl
sub
fdivrs
add
jo
sbb
push
xchg
lods
cmp
sti
and
aad
clc
lods
mov
push
inc
bound
jecxz
ljmp
adc
rcrl
xor
sbb
jp
xor
lds
adc
cmpsb
pop
adcl
outsb
and
mov
sub
push
pop
and
mov
cltd
inc
repz
adc
gs
fwait
sbb
push
add
pop
ss
mov
xchg
inc
or
shl
in
mov
test
push
insl
xchg
popa
and
int3
push
adc
fisubl
and
jg
xor
sub
inc
inc
mov
scas
lret
adc
scas
and
mov
loopne
jb
rclb
jle
and
jb
cmp
lret
xor
push
test
nop
xchg
cltd
lahf
nop
ret
xchg
or
pop
and
mov
push
xchg
inc
scas
mov
add
scas
roll
test
sbb
push
pop
pop
push
mov
popl
add
das
cmp
sbb
pop
inc
jno
push
das
movsl
inc
test
xchg
jne
out
mov
decb
movsl
jecxz
push
jle
lahf
insl
ss
sbb
cs
lret
mov
fisttpll
out
mov
inc
mov
mov
or
call
popf
scas
mov
popf
aad
test
in
jo
lret
push
fimuls
out
cli
xchg
pushf
cmpsl
cmpsb
hlt
pop
sbb
mov
repnz
push
jb
testl
and
test
data16
ljmp
jmp
jne
xchg
std
aas
push
stc
fdiv
adc
popf
or
scas
dec
bound
loope
jno
repnz
or
shrb
push
cmp
jo
dec
push
cmp
push
sbb
rcl
lcall
pop
loop
xchg
insb
xor
jo
push
cs
les
insb
mov
or
je
std
outsl
popf
xchg
sub
pusha
xor
pop
or
daa
mov
out
mov
gs
je
imul
les
sub
mov
lret
jl
xchg
xchg
iret
jnp
mov
adc
xchg
lods
or
lahf
mov
fidivrs
enter
mov
into
arpl
mov
push
sarl
lock
es
pop
rclb
cmc
shll
lahf
std
push
loop
mov
scas
adc
fisttps
adc
imul
push
mov
mov
cwtl
push
sbb
mov
and
sub
in
xor
ret
repz
sti
cld
mov
fnsave
jecxz
jmp
ficoml
inc
jl
jb
imul
popf
mov
in
cmp
push
mov
notb
jae
mov
adc
push
insl
aam
std
outsb
sub
mov
push
test
popf
dec
jno
jge
push
inc
push
cmpl
add
push
dec
inc
fidivl
out
je
cltd
pushf
js
jbe
cld
sub
dec
jb
xchg
cltd
into
xlat
mov
push
stos
lahf
enter
scas
xchg
aad
scas
lea
sar
jb
test
push
mov
imul
test
sbb
enter
xchg
push
mov
xchg
popf
xor
push
js
repz
in
pusha
and
pusha
push
sbb
mov
xchg
pop
inc
push
data16
pop
das
jbe
jb
add
or
lcall
pop
mov
mov
nop
cs
mov
xor
cltd
adc
insb
add
jle
into
push
stc
les
mov
or
outsb
out
ja
push
popf
or
cmp
push
jp
aad
mov
outsb
xor
enter
repz
sub
sub
mov
inc
xor
cmp
jb
ret
ja
jb
and
jb
mov
fcmovb
sbb
sbb
fwait
jl
push
fs
and
push
and
jb
lods
jmp
in
jle
lods
jno
and
mov
add
test
test
out
inc
mov
and
das
pop
sub
push
sbb
and
or
mov
out
in
sar
es
mov
or
es
mov
addr16
stos
das
push
lods
xor
imul
repz
popa
fcmove
xor
cmpsb
stc
pop
cmc
sub
sbb
cli
imulb
xchg
add
mov
pop
nop
ss
and
clc
mov
das
mov
clc
cli
dec
jae
jns
inc
loopne
sbb
dec
mov
sub
std
and
sub
dec
xchg
lods
scas
mov
fdivrl
sub
and
lods
pop
sub
xchg
mov
cmpsl
rcll
push
les
jg
stc
or
fwait
mov
addr16
xor
subb
pop
jmp
xchg
ss
mov
mov
xchg
lods
pop
or
sbb
or
and
xor
jge
mov
push
mov
je
out
fldt
out
rcrl
xor
repnz
test
clc
adc
mov
lods
push
in
xlat
sbb
aam
dec
inc
dec
add
test
leave
je
xor
push
jnp
aam
mov
mov
dec
mov
cld
pop
push
inc
or
aaa
dec
pop
sbb
xor
push
xor
xlat
xor
and
jb
loop
lods
mov
push
jl
lods
xor
and
std
add
xor
push
insb
test
pop
int3
dec
sub
arpl
ret
mov
mov
cmp
call
pop
mov
xchg
std
movsl
mull
push
xchg
lea
mov
sbb
addr16
xchg
aaa
shr
push
mov
cs
gs
mov
dec
sub
out
fucomp
mov
leave
or
sbb
pop
das
outsb
jbe
push
pop
or
xor
mov
push
push
mov
mov
xchg
push
xchg
sti
adc
dec
scas
loope
jae
ficoml
out
nop
adc
sbb
scas
fs
push
into
mov
sub
jnp
gs
cmp
rclb
imul
gs
into
movsl
xchg
and
hlt
mov
mov
adc
sub
jp
add
out
inc
xorb
aaa
pop
dec
push
xor
sub
cli
out
repz
dec
inc
fdivrs
jns
adc
mov
sbb
mov
inc
push
jg
lret
mov
repnz
mov
aad
jo
lret
cmc
clc
enter
mov
xor
sbb
cmp
and
aam
pop
cmpsb
push
cmc
stc
xor
inc
jl
dec
lods
cmpsl
test
push
xor
jge
scas
sub
and
adc
dec
and
ljmp
pop
ss
sbb
mov
es
imul
aas
in
push
cmp
inc
jp
jmp
out
sti
pusha
ja
test
out
mov
cltd
jmp
insl
push
cs
lds
mov
outsb
and
imul
mov
movb
stos
outsl
ficoms
inc
clc
sarb
fst
mov
sbbl
xor
mov
in
add
loopne
inc
mov
xlat
les
sub
and
mov
mov
lret
push
stc
mov
rorb
mov
int
clc
mov
sub
inc
pusha
adc
in
or
adc
inc
push
test
mov
lret
sbb
hlt
pop
jnp
mull
sbb
fldt
mov
outsb
imul
mull
pop
cs
outsl
out
mov
enter
cmpsl
ljmp
mov
push
cmp
test
je
jg
test
and
mov
mov
insl
int
pop
shlb
cmp
rorb
gs
inc
and
sbb
clc
xor
dec
scas
ss
add
push
dec
adcl
adc
xchg
pop
bound
push
jmp
js
fadd
or
sahf
dec
mov
xchg
xchg
push
pop
insl
sub
mov
stos
mov
iret
ret
mov
outsb
mov
mov
mov
pop
ljmp
xor
outsb
dec
shlb
aas
into
sub
sbb
outsl
fstl
shr
shll
ffreep
stc
data16
dec
jmp
arpl
push
pop
aad
or
mov
xor
cmpsb
hlt
pop
cli
cmp
sub
mov
mov
ss
shrl
pop
push
inc
jp
shll
mov
push
cwtl
sbb
add
adc
pop
bound
cltd
pop
lock
push
push
dec
pop
call
or
push
adc
int
xchg
pop
mov
xor
fisttpll
or
lahf
dec
out
sub
dec
xor
xchg
out
cmc
mulb
inc
rol
or
inc
stc
mov
sbb
fldl
insl
xchg
clc
outsb
mov
sarb
hlt
push
loop
or
jmp
pop
in
mulb
jecxz
aaa
call
lds
mov
xor
test
inc
popf
mov
shlb
gs
fs
dec
ss
test
lret
xlat
and
ds
insl
pusha
lcall
mov
push
push
push
in
add
nop
aas
jns
insb
sub
ret
dec
jmp
int3
ljmp
leave
loop
dec
lds
push
dec
insl
xchg
out
dec
push
sbb
cmp
movsb
and
sarb
jmpw
idivb
stc
cs
mov
repz
lret
into
mov
lds
lock
and
push
mov
mov
pop
imul
es
sub
mov
shrb
dec
mov
icebp
jle
pop
inc
jae
nop
shrl
cmp
hlt
mov
and
jmp
jmp
pop
ret
rorb
jo
out
mov
xor
ret
scas
leave
push
lret
orb
cmp
fsubrs
mov
lea
add
sbb
insl
test
cmp
sub
stc
repz
movsl
jns
ds
jno
xor
mov
nop
bswap
shll
and
xor
sti
gs
inc
cs
rorb
push
and
dec
rol
xor
cwtl
repz
fsubrs
stc
mov
icebp
mov
inc
arpl
stc
fstps
and
das
push
xlat
movsb
repnz
or
xlat
loopne
mov
test
popa
adc
fdivr
jl
ret
mov
jmp
movsb
mov
push
aaa
cmp
hlt
in
lock
dec
push
add
mov
inc
stos
repz
addr16
jle
test
cmp
out
mov
insb
insl
cltd
lods
fisttpll
adc
lds
das
out
negb
xchg
cwtl
mov
inc
das
inc
sub
mov
scas
lcall
push
shrb
loop
add
mov
inc
mov
jo
and
pop
repnz
insl
test
imul
iret
sahf
cmpsl
jno
fcomps
sub
and
jae
lahf
inc
inc
pop
std
add
roll
aam
cmp
sbb
lds
ljmp
idivb
sbb
popa
or
xor
push
es
clc
popa
sbb
sub
filds
movsb
js
div
push
or
cmp
xchg
iret
push
ss
push
sbb
lret
aas
movsb
cltd
or
xor
andb
es
hlt
inc
mov
adc
sub
push
pop
rcl
lea
inc
es
add
mov
arpl
mov
fs
push
mov
aad
mov
cwtl
mov
daa
adc
mov
lods
in
ss
add
filds
pop
jmp
mov
repz
push
sbb
bound
mov
add
cli
sub
cmp
fwait
xchg
xchg
add
test
out
stc
dec
mov
add
jnp
pop
pop
mov
adc
inc
lcall
orb
adc
stos
call
jae
mov
cmpsl
xor
xor
in
pop
inc
ret
pop
imul
add
mov
test
ud0
mov
nop
ret
icebp
das
movsl
cli
xor
arpl
lods
loope
sbb
pop
fisubrl
mov
in
sbb
push
nop
hlt
xchg
sbb
lret
mov
jp
shrd
push
test
push
fucomp
dec
adc
jnp
int3
mov
pop
lea
cltd
mov
and
mov
lods
or
sti
xchg
sbb
sti
cli
xor
xor
cmp
mov
add
pop
xabort
inc
cmp
loop
hlt
and
xchg
clc
xchg
aas
xor
dec
cmpsl
hlt
pop
sti
xchg
sub
push
pop
dec
sub
subb
es
cs
pop
insl
cmp
bound
std
fwait
es
mov
jne
adc
jle
lea
iret
mov
orl
inc
xchg
push
mov
lods
sbb
and
sahf
roll
xchg
sbb
in
xchg
lds
sub
cmp
pusha
enter
pushf
mov
shl
cmp
lcall
xlat
or
jbe
notb
jmp
mov
popf
lods
jl
mov
or
inc
adc
mov
rclb
iret
movsl
mov
mov
ret
loop
les
mov
out
dec
movsl
jmp
in
out
mov
cmova
pop
popf
adc
and
icebp
pusha
xor
or
xchg
mov
push
enter
movsl
int3
or
pop
js
jno
mov
mov
add
mov
loop
pusha
aas
les
pusha
and
int3
sbb
mov
out
in
jbe
xor
lock
jbe
shlb
cmp
scas
xchg
mov
jp
fbld
adcb
cld
add
jg
cmp
dec
dec
add
push
repz
jge
mov
mov
add
andb
pop
cltd
in
mov
xchg
jle
pop
pop
aaa
aas
mov
xchg
loope
sub
loope
mov
out
sub
sbb
cmp
adc
lea
xor
xchg
jge
rclb
pop
xlat
jb
mov
mov
xor
or
mov
xlat
aam
decl
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
jmp
test
pop
sahf
andl
push
sbb
jl
cmp
pop
testb
ss
arpl
fucomip
les
aaa
fbstp
push
insl
mov
rcrl
dec
pop
imul
inc
hlt
jns
scas
in
inc
xchg
pop
xchg
rorb
cs
lret
inc
dec
xchg
aad
push
inc
xrelease
bound
fwait
and
adc
mov
into
sub
dec
jns
pop
sbb
or
push
shlb
push
cli
push
sbb
push
dec
pop
mov
loop
aam
xorl
fnsave
cli
jmp
imul
pusha
or
clc
decl
push
into
sub
jecxz
jg
repnz
xchg
in
cmp
stc
cmc
lahf
ss
mov
pop
cmp
les
in
jecxz
test
sub
add
test
pushf
cli
or
pop
hlt
shlb
push
inc
cmpb
imul
popa
test
xlat
cld
icebp
jno
out
add
test
push
sbb
xchg
jns
jg
adc
in
hlt
push
push
dec
pop
lock
cmc
ja
dec
xorb
movsl
cmp
mov
in
pop
imul
pop
or
and
jo
pushf
mul
add
cld
cmp
and
mov
cs
shr
push
stc
setg
add
dec
inc
or
fcoml
fwait
dec
push
mov
pop
add
mov
popf
push
mov
xchg
mov
loop
test
lods
push
stos
jp
or
xchg
clc
lods
and
add
fs
pusha
push
sar
loopne
mov
adc
inc
out
mov
xchg
std
mov
loope
sbb
push
pop
std
fdiv
mov
pop
sbb
mov
xorl
mov
push
rorl
into
mov
xchg
imul
cltd
scas
call
mov
out
push
mov
in
mov
iret
aam
sub
ds
mov
cmpsb
mov
cvtdq2ps
mov
aad
push
fs
or
movsb
jmp
sub
shll
roll
bound
ret
shll
scas
rcl
mov
movsl
dec
mov
lods
cmp
out
outsb
dec
mov
inc
shlb
in
sub
cmpsl
rcrb
filds
cmp
lret
roll
stc
ljmp
mov
imulb
rcrl
aad
add
jge
das
lret
mov
inc
jno
daa
adc
mov
or
aad
fnstcw
out
and
loopne
mov
pop
push
loopne
cmp
jns
shrb
jge
sbb
and
sbb
aas
out
dec
adcb
pop
add
into
push
jecxz
scas
loopne
sub
fwait
in
adc
mov
mov
repz
int3
push
testb
inc
xor
ret
fcomip
push
out
push
xchg
dec
lods
repnz
pop
subb
shl
aad
push
dec
jmp
inc
je
pop
xor
inc
adc
mov
add
sbb
push
and
cmpsl
and
sbb
cmp
push
jno
pushf
adc
or
dec
pop
xchg
xor
push
out
push
rorb
jo
leave
mov
rorl
addb
in
andl
xor
adc
bound
xor
sub
cmpsb
or
add
xchg
sub
xchg
mov
ret
jl
pop
dec
push
clc
rolb
mov
gs
mov
mov
xor
iret
mov
int3
or
ss
add
sbb
and
mov
xchg
pop
xchg
ljmp
cmpsl
pop
das
fsubrl
out
sbb
or
bound
pop
mov
loopne
mov
pop
out
jo
sbb
push
jg
mov
pop
sahf
dec
pop
js
inc
in
mov
in
mov
xlat
jl
mov
in
stos
fnstenv
inc
lret
inc
scas
out
popa
mov
loop
pushf
adc
call
ds
lods
xor
mov
mov
add
in
pop
or
push
popf
dec
push
adc
mov
sbb
mov
dec
jl
sbb
mov
icebp
mov
adc
mov
inc
in
mov
popa
push
popf
jecxz
mov
into
inc
mov
push
pop
loop
pop
je
imull
movsl
mov
test
pmaxub
daa
jg
std
loop
lods
cmp
sub
dec
mov
inc
imul
sbb
add
pop
pop
in
cld
aad
and
xor
inc
xchg
out
pop
dec
clc
add
lods
sub
push
shll
add
orl
jo
in
sub
mov
lret
out
ja
clc
nop
inc
inc
jnp
adc
cld
dec
jb
loopne
jne
cmp
subl
test
outsb
lret
enter
imul
sbb
das
xchg
icebp
loope
adcb
shrl
lods
jg
mov
add
mov
ret
stos
xor
inc
gs
xchg
and
jmp
pop
out
pop
imul
loope
ja
mov
sbb
add
movsl
lret
mov
cmp
pop
pop
js
xchg
imul
jo
inc
jge
xor
mov
je
adc
sbb
xchg
mov
stos
ljmp
mov
cmp
imul
aaa
dec
and
dec
jnp
cmp
sti
inc
jl
cmpb
leave
lret
sub
mov
dec
push
or
dec
xor
push
mov
ret
loope
cmp
and
shl
sti
ljmp
mov
jle
mov
push
jmp
xor
sub
mov
lds
sbb
loope
cmp
cmp
pop
sbb
aaa
les
out
add
inc
xchg
outsl
cwtl
clc
loope
xchg
sbb
lea
out
xchg
pop
pusha
push
xor
pop
out
ds
jbe
or
insl
addr16
inc
loopne
mov
rcrb
sbb
je
dec
adc
mov
or
fistpl
gs
sub
test
push
aad
cmp
mov
stos
mov
mov
jmp
mov
or
mov
cmp
dec
mull
push
lss
ret
inc
aaa
inc
jnp
adc
in
repz
dec
std
loop
out
dec
loope
jae
add
or
xchg
xor
push
mov
js
arpl
mov
lcall
mov
cmp
outsb
rcll
xchg
movb
adc
imul
stos
cmc
pusha
and
inc
iret
and
ljmp
aas
aad
out
mov
adc
sbb
clc
push
cmp
dec
leave
dec
mov
in
dec
jae
and
aad
adc
idivb
inc
or
mov
popf
mov
sbb
dec
fsubrs
cld
popf
fdivs
mov
and
mov
sar
cmp
inc
cmp
sub
jne
shlb
movsl
mov
movsl
add
repz
pop
ss
in
addl
outsb
in
jb
arpl
or
iret
lock
aam
fucomp
outsl
insl
cmp
push
jge
push
push
test
je
and
dec
inc
testl
test
movsl
mov
insb
sarl
inc
jle
lcall
es
inc
and
arpl
adc
or
outsb
xchg
icebp
fistl
or
pop
sub
sub
mov
cmp
pop
sahf
adc
push
popa
sbb
adc
int
rcl
mov
push
sub
flds
rcrb
or
inc
adc
scas
jo
adc
mov
stc
scas
add
jmp
in
es
cltd
add
rcll
pop
mov
loop
push
or
repnz
std
xchg
pop
mov
push
lods
ret
fmull
subb
xchg
jno
notl
inc
cmp
movsb
inc
mov
sahf
jne
rcrb
pop
add
insb
inc
lcall
jg
jmp
mov
push
xchg
mov
jae
das
xor
popa
fxch
addr16
pop
xor
cmp
sub
lods
rcr
add
ffree
cmc
mov
imul
lods
add
je
sub
and
sub
aas
and
lret
add
xchg
inc
push
push
mov
pop
es
shll
mov
in
daa
ja
adc
mov
add
push
cmp
mov
push
mov
inc
jns
lahf
popf
shlb
mov
inc
pop
jge
xor
fcmovu
ret
jle
in
or
popf
pop
xor
adc
dec
pusha
mov
jmp
mov
out
sbb
lea
jg
sub
jmp
xchg
outsb
pop
movsb
std
inc
ss
scas
js
add
ss
orl
add
inc
cmovo
add
mov
mov
dec
jns
decb
pusha
sub
add
push
ds
cwtl
pop
adc
lahf
fidivrl
cld
call
sti
xchg
pop
push
in
jnp
or
fsubrl
jp
fdivs
inc
and
les
xchg
and
aad
mov
mov
and
inc
mov
push
jno
or
adc
iret
mov
in
test
cld
in
outsl
pushf
or
xchg
inc
jl
jecxz
sub
jp
scas
enter
adc
cmp
clc
mov
lock
rcl
pop
stc
cld
in
aam
push
aad
stos
gs
dec
mov
cmp
push
jne
mov
lret
bound
sarb
pop
sbb
adc
pop
jmp
dec
lock
fsts
mov
cmp
pop
fcomps
call
test
repz
int
pop
repz
sti
lds
xchg
inc
xlat
test
add
sahf
in
jnp
sbb
adc
mov
xor
adc
icebp
sub
mov
rol
mov
mov
das
andl
push
jp
xchg
push
imul
mov
adc
xor
xlat
inc
sub
sahf
das
mov
daa
int
mov
dec
subb
mov
add
mov
pusha
shll
add
mov
xor
loope
jmp
leave
jg
adc
lods
pop
mov
xor
and
mov
mov
fists
inc
or
add
sti
cltd
lret
mov
and
sub
mov
inc
clc
stc
jge
pop
dec
pop
in
cltd
or
sub
mov
xor
lret
bound
int3
test
inc
movsl
jge
fsubl
cmp
call
jno
fs
mov
fidivrl
icebp
sub
sub
xor
cmp
xchg
dec
rclb
mov
cld
loop
cmpsl
sub
notl
cmp
shlb
sbb
mov
call
je
insl
pop
add
xor
stos
mov
adc
icebp
in
sbb
call
push
repnz
push
or
cmpsl
mov
add
lods
lahf
rolb
jecxz
in
add
scas
lods
and
mov
dec
mov
rcr
dec
stos
jno
pusha
mov
dec
inc
pop
out
imul
aam
loope
ja
lock
testb
jns
add
mov
ret
stc
add
int
sahf
pushf
lods
enter
enter
out
stos
sub
es
insb
fs
ficompl
idiv
or
call
test
pop
mov
or
jecxz
movsb
or
xor
insb
mov
push
lahf
out
mov
movlhps
push
icebp
fstps
and
inc
cmp
fwait
xor
hlt
rolb
cli
lret
and
clc
adc
sbb
dec
outsl
fs
je
or
hlt
pop
push
test
das
insb
sbb
or
push
sahf
enter
mov
orl
je
lods
out
dec
data16
mov
jp
sbb
call
jo
and
push
fwait
cmp
xor
mov
call
cmpb
inc
sbb
push
inc
fcomp
add
inc
jp
push
mov
adc
cmp
dec
mov
xor
push
lret
lods
dec
shrl
adc
insb
cmpsb
popf
stos
push
nop
adc
jno
ret
mov
dec
mov
cmc
into
les
jg
sub
out
shrl
enter
sub
inc
push
mov
stos
cltd
mov
int
dec
fists
fisubrs
insl
jno
cmc
jecxz
jnp
decl
adc
ds
icebp
xchg
xor
gs
test
push
pop
shlb
sub
aam
xor
insl
cs
outsl
fsubrl
outsl
xchg
add
popf
xchg
ljmp
push
sar
cmpsb
nop
sub
adc
pushf
movsl
pop
fidivl
mov
pop
mov
mov
jbe
cmpsl
adcb
inc
pop
lahf
cmp
pop
test
ss
mov
lods
out
std
xchg
cltd
cmp
jp
repnz
movsl
insb
xchg
dec
ds
cmp
inc
popf
inc
pop
shrb
cwtl
sbb
cmp
enter
sub
add
fwait
mov
add
sti
insb
lock
cmpsb
lahf
jl
inc
lea
dec
push
fildl
outsl
scas
insb
clc
repnz
xchg
enter
mov
push
pop
jmp
std
jnp
int3
cli
fsts
push
mov
fsubrs
pop
mov
mov
mov
call
aaa
movsl
rcrb
jno
cmpsl
and
xor
or
jnp
inc
movsb
gs
in
nop
mov
lods
fucomip
cmp
daa
pop
push
aam
dec
xor
xchg
aad
fisubl
pushf
aad
sbb
lcall
jne
lahf
loop
dec
push
sub
rcrb
push
jge
ret
pushf
and
and
sub
mov
ja
jb
insl
xchg
adc
in
dec
sarl
and
xchg
inc
cmp
aam
hlt
pop
inc
dec
mov
pop
shrb
xchg
lahf
sbb
loop
fnstcw
and
leave
stos
and
mov
nop
in
pop
orl
jmp
sahf
repz
orb
cltd
insb
inc
jns
cltd
lods
test
stos
xchg
ret
and
pushf
sub
xor
mov
inc
loope
mov
inc
loop
sar
pop
lods
xchg
dec
cmp
jbe
std
pop
pop
repz
sbb
xchg
leave
xor
and
pop
mov
adc
fdivrp
outsb
add
pusha
push
dec
adc
test
push
into
icebp
jge
mov
jae
pop
dec
icebp
pop
cwtl
sub
pop
xchg
or
loope
pop
inc
pop
inc
insb
daa
push
dec
dec
lret
mov
inc
stos
pop
xor
out
bound
xor
mov
mov
pusha
nop
mov
jo
sahf
das
xor
ja
pop
iret
push
adc
cmp
mov
dec
mov
jns
cmp
or
ficoms
adc
dec
dec
daa
insb
mul
push
aas
sbb
pop
push
cmp
ss
sbb
adc
lock
or
cltd
es
dec
inc
mov
sbb
inc
in
scas
inc
insl
add
shr
lret
popl
xchg
xchg
rol
adcb
push
hlt
mov
pop
insl
or
nop
lea
pusha
mov
mov
aas
aam
add
sar
test
daa
xchg
mov
stos
pop
loopne
sbb
insb
xor
std
out
aaa
pusha
dec
roll
pusha
sub
mov
out
cmp
fmul
shl
outsb
dec
gs
mov
repz
in
rolb
daa
std
pop
mov
xlat
test
mov
shl
pop
jb
sub
cmp
data16
pop
jbe
in
or
cmp
pushf
movsl
loop
jle
fbstp
and
sub
mov
mov
lods
ret
out
sarl
xchg
idivl
js
push
mov
sti
pop
inc
ucomiss
fld
js
mov
xor
inc
mov
in
xchg
scas
test
jne
or
push
cmpsb
ljmp
sbb
pushf
xor
mov
lret
mov
jge
sub
mov
pop
sbb
in
fimull
and
movsb
xchg
addr16
add
outsl
sbb
and
or
or
sub
cmpb
test
stos
jge
sbb
or
test
scas
jg
dec
sahf
lahf
mov
or
xor
stos
xor
cmp
bound
jo
nop
and
jmp
js
jg
cld
mov
imul
rclb
mov
stos
jne
xchg
cltd
push
je
fidivrs
lahf
fidivrs
sub
add
out
je
inc
roll
xchg
inc
scas
mov
outsl
mov
in
or
cmc
ljmp
pop
inc
rep
jne
movsl
mov
loope
imul
enter
cmp
or
push
into
fildl
jecxz
jo
mov
insl
dec
or
mov
jecxz
pop
out
ljmp
ljmp
mov
call
in
sbb
js
dec
popa
adc
data16
out
xor
lret
or
mov
pop
sbb
mov
loope
cli
sbb
sbb
in
jae
fwait
enter
ja
or
xchg
das
test
stos
out
push
push
lods
and
aaa
adc
aam
ss
es
pushf
xchg
cmpsb
sbb
sub
arpl
add
bound
ss
cmp
fwait
adc
loopne
es
and
mov
pop
movsb
ljmp
and
jle
movsb
roll
xor
scas
jne
cld
xchg
pop
cwtl
addr16
dec
inc
mov
out
std
lret
enter
inc
add
lahf
mov
mov
daa
js
mov
mov
mov
cmp
ljmp
and
cld
out
imul
mov
lahf
adc
ret
dec
out
xchg
jp
flds
adc
mov
sub
cmp
add
mov
mov
cmp
std
outsl
xchg
dec
ljmp
cmpsl
jb
xor
loopne
addr16
sti
jnp
pop
jecxz
std
or
xchg
imull
test
xor
cmp
and
aaa
pop
sti
popf
cmp
push
pop
cmp
int3
mov
stos
int3
cmp
dec
dec
sahf
mov
mov
dec
jle
pop
sbb
addr16
std
xchg
mov
jle
jl
out
mov
and
mov
loope
lcall
gs
mov
and
xor
sub
out
and
adc
subl
in
dec
stos
movsb
mov
cmp
xchg
shrl
loope
dec
roll
jecxz
cltd
and
inc
out
xorl
mov
jmp
cmp
clc
js
ljmp
mov
xor
or
daa
lret
pop
jmp
pushf
rcl
sarb
gs
mov
cld
mov
dec
dec
sub
imul
inc
out
jp
shlb
in
cld
in
push
lods
mov
jne
or
sub
xchg
push
es
jl
add
js
xor
xor
into
mov
pushf
add
add
cmp
push
sahf
scas
xchg
insb
pop
outsl
xlat
and
leave
xor
xchg
xchg
jmp
rcl
call
into
dec
in
mov
into
sub
insl
and
lds
inc
iret
sub
cld
stos
or
ret
popf
jb
lret
xchg
mov
stos
fstl
outsl
xor
pushf
jne
or
test
ret
and
ljmp
cmp
lock
or
jae
lds
add
inc
inc
outsb
lcall
mov
or
fs
ret
in
fiadds
in
shlb
test
fimuls
imul
pop
cld
or
dec
movsb
test
jb
jo
nop
into
loopne
sbb
out
or
adc
or
ficoml
divb
insb
sarb
cmc
fwait
cmp
cmp
stc
xchg
cmc
mov
inc
dec
push
sbb
lret
mov
lods
push
fildll
jp
adc
add
scas
push
xchg
repz
xchg
xchg
xor
gs
ss
scas
xor
xchg
mov
push
sbb
cmc
xchg
addr16
aam
sub
jne
cld
fisubs
xlat
xlat
jge
mov
pop
rclb
ds
andl
push
scas
sbb
imulb
lahf
or
nop
lods
jnp
clc
mov
xor
xor
jl
inc
es
push
cmp
cs
cwtl
xchg
sub
aam
sbb
mov
aad
xlat
shll
push
cmp
adc
jmp
lock
and
insl
inc
sbb
xchg
push
cwtl
xor
enter
es
push
nop
lea
sub
cmp
mov
dec
pop
imul
adc
aam
cmp
movb
sbb
mov
cmpl
and
lret
bound
inc
adc
cltd
sbb
xor
xor
rol
push
xlat
pop
jo
sarl
or
and
xor
jmp
inc
dec
aam
and
rcrb
stos
aas
dec
repnz
rcll
pop
ja
pop
adc
cmp
hlt
enter
inc
scas
inc
pusha
xchg
mov
pop
movl
mov
out
inc
adc
jbe
mov
arpl
rclb
add
ret
call
ss
orb
lods
std
jle
sub
loop
sbb
push
push
cmpsb
sub
pop
sub
loope
cltd
push
into
rcpps
push
decb
cltd
shl
popf
dec
pop
pop
xchg
ret
jmp
in
fcomps
out
pop
jbe
cmpsb
pop
mov
fcomi
cmp
lahf
pop
pop
jle
xor
mov
mov
rol
imul
outsl
sub
cmp
adc
hlt
pop
inc
and
faddl
hlt
mov
xchg
push
add
ret
fisubrl
cmp
mov
rcrl
or
inc
mov
jns
mov
movsl
lock
add
inc
cmp
out
push
test
mov
mov
sub
arpl
test
in
cmpsl
mov
incb
lods
je
lahf
cli
aaa
in
push
pop
lods
popf
adc
pop
xor
mov
sahf
mov
repz
subb
addr16
pop
sub
jge
adc
adc
fbstp
adc
cmpl
add
xor
sbb
fwait
inc
cmpl
pop
sub
mov
inc
lock
or
sub
or
jns
loop
jno
jg
out
or
dec
insb
fidivl
sarb
in
dec
fwait
iret
jne
popa
push
shl
movsb
push
in
movsb
data16
cmp
fdivrs
adc
xchg
xor
dec
or
adc
xchg
bound
inc
push
xchg
pop
jae
and
das
adc
cltd
inc
ret
xchg
and
mov
shlb
dec
fistps
ret
push
pop
xlat
stos
fstps
pushf
cs
insb
neg
push
fwait
test
sub
cmp
pop
test
shrb
pop
cltd
test
push
dec
add
int
add
int3
mov
rcll
or
push
movsl
jns
xor
popa
pop
in
scas
inc
cmp
jecxz
inc
mov
orb
add
adc
jmp
scas
out
sub
call
insl
inc
loop
push
and
xchg
loope
repnz
xor
out
pop
test
cmp
out
sarb
adcl
or
mov
insb
xchg
movl
std
jbe
fs
pop
sti
xor
cmpsl
imul
mov
inc
icebp
in
iret
inc
dec
loopne
mov
divl
inc
aas
ficoml
adc
cld
insl
fbstp
aad
scas
and
cmpl
dec
pop
cmp
push
jns
in
shl
add
cmp
ss
dec
xchg
adc
loop
mov
cmp
adcl
fmull
addb
pushf
dec
lods
sbb
push
mov
fimull
mov
shlb
je
mov
inc
ss
push
lods
shll
xchg
mov
mov
mov
sbb
aaa
sbb
cmp
sbb
push
or
mov
xor
pop
lods
jmp
test
js
or
jo
fdivrl
ss
mov
lods
fbld
or
xchg
inc
add
pop
mov
sbb
xor
stos
icebp
add
jo
inc
adc
pop
adc
test
dec
sahf
mov
push
lods
xor
jecxz
cmpsb
add
jne
sahf
sub
xchg
ljmp
xlat
push
movsb
enter
xchg
fildl
dec
inc
arpl
cmp
push
mov
in
les
jge
gs
inc
cmp
outsl
outsl
ja
ficoml
iret
imul
jp
xchg
sbb
loope
jmp
shr
imul
pusha
xor
cmp
or
pop
pop
fbld
ror
bnd
push
js
inc
stos
fs
push
mov
shrl
pop
dec
test
sbb
fadd
negl
dec
jb
sub
mov
mov
js
mov
in
stos
rcrb
add
fs
int3
or
in
inc
adc
add
ss
mov
fs
jo
xchg
int3
sbb
int
cmp
imul
lahf
add
mov
stos
pop
lea
fdivs
es
inc
fdiv
cmpsb
js
inc
sti
daa
cmovp
sbb
add
loopne
daa
stc
jo
sbb
gs
jb
hlt
pop
cld
add
jg
fists
xor
test
adc
out
pop
jae
popa
adc
mov
cmp
lret
inc
idivl
jge
outsl
adcl
add
jl
divb
push
into
jge
in
movsb
stos
addr16
fsubrp
fadds
xor
out
icebp
or
cmc
cmp
data16
in
mov
cmp
out
dec
sub
push
mov
mov
pop
inc
push
dec
das
outsb
mov
fdiv
sub
pop
das
icebp
jbe
jne
fcmove
ret
cmc
divl
mov
jnp
in
gs
sbb
cmp
in
or
aaa
pop
cmp
push
fwait
clc
icebp
xor
loopne
push
xor
popf
out
xor
out
cmpsb
pop
in
jmp
icebp
push
xor
push
in
daa
cmp
aam
faddl
test
or
add
fwait
xchg
es
sub
lods
xchg
sub
nop
inc
add
fs
and
jns
push
das
sti
add
cltd
mov
es
mov
add
mov
add
add
lds
jae
cmp
adc
mov
hlt
daa
xchg
mov
mov
xchg
rcrb
mov
jge
pop
push
hlt
out
in
dec
scas
rorb
jb
cld
mov
or
mov
iret
sti
addl
xchg
xchg
push
xor
fucom
pop
pop
mov
mov
mov
pop
mov
ds
mov
dec
arpl
xchg
cltd
pop
fsub
lods
adc
pop
push
scas
pop
sbb
ds
dec
fiaddl
ret
inc
pushf
test
pop
inc
and
test
jne
in
rolb
sahf
repnz
jae
adc
cmp
bound
jecxz
sbb
xlat
testb
cmp
sbb
out
fildl
cmp
ds
es
into
jecxz
dec
dec
imul
ret
test
loop
jle
jle
pusha
fs
sbbb
pop
jle
lds
jnp
ljmp
push
orl
push
call
fdivs
jnp
xor
push
mov
addr16
int
cmpsl
xorl
xchg
mov
or
loope
repz
gs
stos
push
std
dec
jo
je
mov
fidivs
es
addl
jae
add
add
jge
leave
insl
aas
mov
adc
dec
add
pop
push
sahf
lret
icebp
mov
call
dec
push
icebp
stc
xchg
add
movsb
and
mov
leave
inc
lahf
and
iret
fcomps
psubd
repnz
int
stc
jo
push
imul
test
inc
das
pop
sbb
xor
inc
xchg
mov
loope
mov
jecxz
xlat
add
cli
test
inc
cld
mov
sub
cld
into
pop
int
inc
cs
sbb
fucomp
mov
hlt
jo
dec
push
movsb
ficomps
js
inc
mov
cmc
jo
leave
js
lret
loopne
xchg
cli
arpl
adc
cmp
iret
cltd
add
movsb
cs
fwait
add
pop
or
sbb
pushf
outsb
outsb
es
mov
insb
jp
lret
mov
mov
ret
movsl
jp
cmpsl
subb
mov
inc
lock
ds
fdivr
filds
scas
add
jb
and
push
outsl
mov
dec
fmuls
shrl
mov
aaa
adc
in
and
cmp
nopl
scas
and
ljmp
or
jns
sub
fidivrs
roll
movsl
cltd
outsl
dec
or
mov
add
cmpsl
adc
aaa
adc
add
lock
pop
pushl
data16
and
test
mov
or
cmp
sti
clc
push
push
inc
xor
mov
in
sub
lods
push
sub
loopne
and
pop
inc
cmp
fsubr
or
stos
popf
aad
test
add
pop
inc
lock
jecxz
popf
sub
xor
repnz
push
lds
shl
sbb
mov
and
sub
imul
lock
inc
in
sbb
pop
insl
dec
imulb
xor
mov
addb
push
sub
aas
sbbl
add
aas
es
pop
out
mov
inc
and
pop
aam
inc
sbb
inc
push
enter
vandpd
inc
jg
mov
mov
adc
jbe
loope
movsl
sub
and
fnsave
cli
xchg
xlat
out
add
jl
out
imul
jne
dec
push
cmp
imul
dec
lret
cltd
inc
adc
pop
pushf
and
icebp
movsb
rcrb
loop
xchg
mov
jbe
aaa
cmpsl
int
jg
mov
mov
cmp
inc
les
rcll
test
cmc
cmp
in
push
or
cmp
pop
pop
inc
fwait
pop
pop
cltd
fadds
cmp
jmp
sbb
sub
stos
sbb
or
in
aam
xchg
and
sbb
daa
xlat
mov
mov
xchg
pop
pop
xor
jo
mov
mov
push
adc
push
mov
cmp
cmp
xor
xor
or
stos
or
push
push
dec
lock
mov
jge
popa
mov
push
push
xchg
loopne
aas
pop
pop
jl
iret
jle
test
insb
lods
xchg
cmpb
loopne
cmp
push
mov
xor
hlt
les
loop
mov
push
and
lea
pop
out
insl
push
iret
and
popf
inc
jo
xor
or
mov
cmpsb
push
icebp
in
pop
test
mov
pop
mov
jp
popa
mov
mov
div
test
rclb
iret
xchg
enter
and
js
lock
jne
mov
jp
cwtl
mov
and
pop
dec
pop
jns
les
push
ret
cmc
aas
mov
xchg
and
aam
cmp
clc
cmp
call
cwtl
es
int
cmpsl
sbb
mov
adc
clc
rcl
sarl
roll
add
inc
repz
popa
shrl
mov
mov
jmp
notb
insl
pop
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
adc
jl
mov
bound
test
test
cmp
in
sub
or
cwtl
testl
das
nop
jp
mov
pop
jo
xchg
pop
and
popf
mov
lcall
imul
jbe
and
rorb
lcall
pop
mov
mov
sbbl
inc
mov
sbb
imul
mov
repz
push
cmpsb
stos
orl
sub
add
repz
test
mov
or
dec
int3
fistl
or
cmpsb
add
sbb
es
cld
lret
jb
les
sti
in
xor
jg
pop
jmp
xchg
xchg
push
repz
mov
mov
in
pop
divl
daa
insl
pop
jo
mov
mov
adc
mov
cli
ss
pop
mov
mov
lea
push
enter
xlat
inc
popa
call
je
test
and
stos
stos
sub
dec
adc
pop
xor
insb
dec
in
pop
lods
sbb
dec
frstor
add
and
stc
gs
cmp
or
jg
dec
jne
out
xor
cwtl
cmc
inc
jecxz
in
push
xor
aaa
pop
lret
imul
ss
mov
lahf
adc
lret
ljmp
pop
icebp
mov
mov
push
or
jno
cmp
and
inc
stc
dec
dec
sbb
inc
and
lea
pop
mov
pop
mov
jl
or
movsb
xchg
ja
out
inc
icebp
ljmp
arpl
mov
dec
xor
psubsb
mov
jb
adc
jge
push
shlb
jns
sbb
push
xor
sub
lret
adc
notb
out
cmc
ljmp
scas
pop
out
fisubrl
les
adc
mov
andl
rcrb
loope
testb
mov
pop
mov
mov
pop
xor
push
mov
aaa
pop
out
mov
push
pop
mov
es
add
pop
das
push
inc
rdpmc
jge
decb
mov
iret
fs
into
lret
xor
jnp
mov
out
mov
sub
mov
mov
add
adc
out
jge
ficoms
adc
rcll
ja
popf
add
add
daa
in
mov
push
nop
mov
mov
clc
lahf
xchg
enter
std
insb
cmp
add
sahf
js
jmp
jge
iret
imul
sub
dec
shll
jge
push
cs
xchg
dec
sub
bound
arpl
dec
sarb
adc
aam
lock
fwait
jle
fwait
xor
jmp
xchg
xor
push
cmpsl
loop
jg
adc
cmpsl
pop
fistps
cmpsb
xchg
sbbl
int3
lods
ja
cmpsl
insl
sbb
mov
lock
shlb
mov
lods
in
leave
jge
and
mov
and
lret
fwait
daa
fs
fidivrs
mov
lods
ret
adcb
cmc
stos
addr16
cmpsb
cmp
jge
test
push
cmc
pop
xchg
push
sbb
push
iret
sub
xchg
and
outsb
sbb
jecxz
icebp
ret
popf
dec
ja
arpl
jp
inc
jne
cmpsl
or
push
dec
push
outsb
adc
sti
or
inc
out
stos
and
les
out
add
ds
mov
daa
scas
dec
pop
xor
dec
cmp
mov
and
mov
add
fwait
ss
mov
rolb
or
fimull
mov
vpcmpgtb
insl
std
lods
jg
mov
mov
and
mull
nop
add
movsl
sub
cmpsb
test
dec
mov
inc
mov
jne
push
adc
jecxz
les
dec
xchg
cwtl
or
mov
ss
sub
mov
negl
out
jne
cmp
push
ret
dec
jl
cmp
int
aas
jnp
adc
movd
gs
popf
int3
movsl
and
rcl
xor
aad
adc
addr16
push
lret
imul
pop
mull
jecxz
pop
out
add
stos
inc
clc
push
jns
jbe
jbe
pusha
xor
dec
dec
lcall
adc
jno
cli
pop
movsb
pop
pusha
and
lods
sbb
arpl
stos
clc
mov
clc
fsubrs
inc
aas
fisubrl
cmpsb
aaa
push
dec
mov
lret
ret
std
jecxz
test
outsl
mov
ss
jecxz
jbe
mov
xchg
rclb
outsl
ljmp
fmuls
repz
insl
sarl
or
adc
jge
popf
pop
pop
add
cmc
cmp
das
rol
xchg
cmp
clc
add
mov
mov
or
clc
jnp
lds
lcall
cmp
call
test
fmuls
mov
cmpsb
adc
das
inc
and
std
insl
mov
mov
inc
into
jp
sbb
mov
or
insb
or
shr
in
xlat
sbb
cmpsb
xchg
cmp
mov
push
and
jb
push
aas
aas
cli
xor
loop
clc
pop
int3
xor
repz
add
mov
cmpsl
and
mov
mov
push
xchg
xchg
push
push
jecxz
sbb
cmp
gs
mov
cmpsl
pop
mov
andl
setns
and
push
fimuls
lahf
ret
clc
fcoms
cmc
pop
test
lods
mov
pop
xchg
lods
push
fs
and
cli
not
dec
roll
add
rcll
pop
mov
and
cmc
mov
lret
and
dec
mov
mov
sub
pop
add
mov
or
addr16
inc
adc
inc
jp
or
outsb
xchg
mov
dec
xchg
rcll
and
mov
jb
push
sbb
mov
inc
iret
popa
call
sbbb
cmp
aam
mov
inc
pop
dec
and
pop
jle
push
mov
fisttps
fsubrl
lock
negl
cmpsl
adc
mov
fucom
lahf
lret
lods
fsubrl
pop
scas
sahf
cmpsb
dec
loopne
outsb
lahf
jl
je
or
inc
xchg
insl
jno
mov
lret
jo
cmp
movsb
jmp
jo
bound
fwait
cmp
fdivrp
inc
popa
adc
sbb
or
movsl
outsl
aad
fcomps
mov
int3
or
bound
mov
xchg
xor
addr16
cli
mov
lcall
dec
adc
dec
jge
pop
xlat
mov
push
or
fucomp
push
test
jg
xorl
pop
in
lahf
aas
xchg
xchg
mov
mov
scas
daa
mov
ds
jo
insb
mov
icebp
sub
pop
cmp
dec
mov
ds
js
loop
mov
jmp
mov
in
das
jne
stc
arpl
cli
sbb
dec
les
daa
movsl
xchg
addr16
xor
fwait
xor
mov
out
push
aam
or
pop
cmp
mov
outsb
aad
repnz
or
xor
iret
mov
jle
imul
mov
es
bound
popa
scas
addr16
dec
scas
nop
push
ds
pushf
sbbb
stc
js
stos
movsl
push
adc
js
addl
mov
jnp
out
add
and
lods
xlat
lea
shlb
sbb
inc
jmp
js
xchg
mov
cmp
dec
lock
scas
pop
xor
push
lahf
pop
iret
popa
jae
popf
mov
loop
mov
xchg
mov
mov
sub
ret
jno
dec
dec
jbe
mov
pop
inc
ss
std
fwait
lock
fsub
mov
sub
out
xchg
cmpsl
ss
je
ret
loope
iret
das
daa
sbb
add
scas
jecxz
pop
xchg
mov
jp
out
clc
xchg
cmp
sub
jge
stc
stos
gs
call
adc
sub
sbb
adc
mov
ja
inc
je
loope
outsb
clc
loopne
lahf
push
jo
stc
std
cmp
mov
jmp
pop
push
mov
fadd
stos
fs
lret
repz
clc
lahf
mov
dec
mov
pop
push
add
push
mov
inc
test
xchg
cmc
dec
scas
dec
adc
in
enter
and
xor
insb
movsl
jp
out
dec
mov
mov
cmp
icebp
mov
push
push
dec
inc
jmp
and
push
aaa
pop
sub
andb
push
mov
in
xchg
scas
xor
insl
loope,pt
les
sub
fbld
jne
xchg
lret
mov
dec
repnz
mov
pop
jle
cltd
xchg
push
bound
jnp
push
insb
pop
out
out
lret
push
cmpsb
push
mov
cmp
pop
aaa
xlat
sub
fst
mov
mov
movsb
add
stos
lcall
movsb
icebp
mov
js
imul
cmp
fs
sub
push
add
or
mov
jo
mov
ja
popa
aad
push
push
jle
out
cltd
mov
loope
cmp
fdivl
cmp
add
sbb
mov
or
cwtl
dec
je
and
mov
fisubl
jb
xchg
unpcklps
repnz
xor
std
push
je
cli
push
mov
mov
out
in
or
test
dec
xchg
mov
mov
inc
inc
ret
sub
or
dec
pop
adc
mov
bound
push
mov
pop
subb
and
xor
mov
faddl
lods
xor
inc
sub
or
inc
cmp
lcall
mov
out
and
jge
jp
stc
pop
cmp
in
pushf
addr16
inc
adc
adcb
cmpsb
mov
popa
into
lea
sbb
xor
mov
stos
adc
int3
cmc
lahf
repnz
lret
mov
ja
mov
xchg
rcr
xor
pop
xorb
pop
in
je
lcall
fdivrp
inc
push
ror
movsb
lret
aas
inc
cli
sbb
jnp
jge
mov
ret
cli
repnz
dec
imul
jecxz
int3
rol
push
and
jne
cmp
xchg
jae
mov
pop
loop
jno
xchg
jne
mov
stos
das
sarb
mov
mov
and
movsl
xchg
push
fldenv
or
mov
dec
cmpsb
dec
pop
push
dec
clc
cli
or
fldcw
push
test
or
jns
inc
and
or
sub
clc
dec
je
stos
pop
and
xlat
in
cltd
xor
int3
in
sbb
jnp
es
jns
rol
or
int
ret
mov
mov
mov
sub
mov
lock
mov
out
dec
rorl
or
jno
xor
mov
pushf
es
xor
mov
insb
push
and
fildll
xor
mov
pop
mov
ljmp
jno
pop
repnz
xor
or
loopne
std
cmpsl
cmpsl
inc
jg
inc
popf
add
jo
imul
jge
push
mov
inc
mov
cmc
cld
push
mov
push
xchg
nop
out
ja
mov
xor
push
lock
neg
cld
stos
mov
cmp
jb
dec
push
shr
fldcw
popa
push
jmp
adc
jbe
es
fwait
mov
sbb
fdivrs
fisubrl
loopne
pop
imul
sub
imul
xor
insl
fisttps
xchg
lahf
stos
shrb
cmp
xchg
push
jle
clc
test
and
gs
mov
std
loop
inc
dec
or
ds
fisttps
sarb
mov
cmp
js
add
cmpsb
rcrl
cmp
outsl
inc
mov
sbbb
xchg
inc
sbb
enter
dec
orl
mov
sbb
cmp
dec
lahf
jne
jge
mov
in
xor
cmpl
inc
imul
push
lods
xchg
movl
je
test
fwait
adcb
shlb
dec
mov
cmp
dec
xor
mulb
or
xchg
push
lret
mov
or
jge
sub
push
arpl
adc
aam
nop
push
xchg
into
dec
arpl
bound
dec
adc
xor
int
popf
test
int
fisttps
xchg
aad
sarb
insl
adc
mov
sub
sahf
xor
push
in
insl
das
and
das
popa
xchg
in
push
push
repnz
push
adc
loope
cmp
inc
hlt
add
sub
sbb
sahf
lock
aad
jl
mov
xor
iret
mov
das
in
mov
fistpll
mov
mov
testb
loop
bound
xorl
adc
pop
jne
adc
jl
icebp
xchg
pusha
fnop
mov
test
cmp
popf
inc
lods
mov
jo
mov
mov
pop
xlat
lea
cmp
sarl
outsl
jl
jg
xor
dec
xor
addr16
and
jne
or
push
leave
jge
add
cmp
push
mov
rorl
pop
test
jne
add
cltd
mov
int3
loop
sub
sbb
push
jbe
dec
or
sbb
mov
outsb
dec
push
in
push
xchg
fstpt
inc
pop
movsl
scas
mov
lret
inc
es
pop
mov
inc
adc
mov
in
leave
and
aam
and
xchg
push
xor
ljmp
mov
mov
xor
lods
push
sub
mulb
leave
lods
pop
cmp
fs
jp
jns
xchg
out
js
jnp
mov
cmp
ret
sub
dec
sub
or
stos
sarl
mov
loop
mov
cmc
or
insl
cmp
data16
outsb
ja
add
push
daa
inc
aaa
dec
test
movsb
fs
mov
mul
in
xchg
jno
into
dec
lcall
sbb
mov
or
lds
stos
xchg
fdivrs
fs
push
inc
repnz
notl
movsb
es
jne
xor
rorl
mov
je
dec
and
sub
pushf
sbb
es
aas
add
addb
dec
push
repnz
xchg
inc
nop
out
loope
adc
pop
adc
test
int3
and
inc
ss
xchg
in
shr
lret
inc
stos
ljmp
rol
enter
ret
xchg
lods
inc
clc
jge
scas
jp
push
xchg
lea
mov
sbbl
pop
and
or
lcall
cmp
fadds
jle
sub
lea
pop
mov
or
outsb
jb
xor
xchg
pusha
add
mov
lahf
mov
enter
mov
pushf
or
cli
jb
cwtl
pop
fisttpl
ret
cwtl
arpl
push
loopne
out
mov
jno
jmp
push
stos
mov
push
or
outsb
jbe
jbe
movl
push
lds
push
lock
xor
clc
stc
out
rcrb
xlat
fstps
imul
bt
dec
lock
add
test
fidivrs
dec
lcall
xchg
mov
dec
xchg
jp
scas
and
aaa
adc
push
mov
sbb
faddp
push
stos
rcrb
sbb
lods
add
sti
fs
lea
dec
jae
scas
mov
mull
xchg
int3
lcall
sbb
add
fwait
jno
push
test
inc
dec
mov
es
shr
js
je
iret
lods
std
xor
inc
pop
ret
push
sbb
lods
test
mov
pop
mov
xchg
dec
mov
cld
sbb
jp
add
mov
xchg
add
cmp
mov
mov
out
push
mov
inc
xchg
insb
in
sahf
sbb
mov
mov
fstenv
iret
jp
sbb
mov
push
mov
jg
testb
add
mov
lret
roll
aaa
dec
ret
inc
aaa
cmpl
cmpsb
mov
push
mov
mov
sbbb
aas
push
stos
fsub
push
mov
add
or
xlat
in
inc
mov
imul
rcrl
fldcw
xchg
rcrb
mov
add
std
outsb
lods
dec
adc
fidivl
lods
push
into
jbe
test
ficoml
aas
inc
jbe
inc
jge
lret
in
sbb
push
mov
sub
mov
rcrl
adc
push
aam
test
lock
mov
sbb
and
pop
and
hlt
lds
bound
imul
xchg
mov
adc
pop
cmpsl
outsb
jns
rcrl
lret
ss
mov
cmp
or
add
shrl
lret
mov
push
cmc
imull
cwtl
mov
lock
mov
inc
jge
aam
pop
jno
fdivl
mov
pop
aad
sbb
sub
mov
pop
push
test
cwtl
ljmp
mov
stc
inc
pushf
mov
xor
lcall
outsl
sbb
add
rol
sbb
sub
call
repnz
xchg
dec
push
jecxz
sbb
xor
mov
cmp
fildl
out
mov
mov
out
ror
addr16
jmp
std
pop
cmp
mov
ds
cmp
pop
mov
xor
xchg
cmp
dec
mov
inc
mov
xchg
popa
adc
jmp
stos
dec
add
popa
dec
jmp
mov
jnp
mov
fcmovu
sub
and
inc
mov
rol
cmp
mov
lret
push
mov
xor
push
mov
jae
jmp
pop
or
ja
outsb
cmp
dec
xchg
repz
and
jl
mov
jbe
jp
dec
adc
aas
popf
lods
std
shlb
pop
mov
jbe
pusha
and
mov
leave
jnp
jb
fcomps
sub
mov
add
rep
sub
mov
cli
mov
mov
push
inc
inc
out
xchg
and
lods
aad
lea
jae
ljmp
ds
sti
fldenv
mov
push
mov
jge
mov
mov
clc
sub
mov
mov
and
mov
mov
repnz
dec
xor
in
jne
mov
add
mov
sbb
cmc
dec
push
mov
mov
dec
mov
pushf
pop
movsl
dec
or
adc
xsavec
mull
xor
stos
fcoml
fcoms
cmp
ret
addr16
jecxz
inc
fcmovu
mov
lods
imul
sahf
pop
mov
sub
lock
pop
jns
enter
push
fnstcw
sub
cli
test
inc
push
add
xchg
mov
push
sub
jb
or
stos
xchg
aam
dec
movsb
aaa
inc
imul
fnstenv
cmp
xchg
or
imul
call
test
test
sbb
int3
push
xlat
pop
jo
adc
or
loopne
push
xor
cs
adc
cs
roll
icebp
add
fs
pop
cmpsl
dec
jbe
push
shlb
daa
out
hlt
ret
push
sub
adcb
xchg
jmp
pop
or
sbbb
mov
mov
xchg
dec
cmp
bound
sbb
iret
and
aam
out
xchg
sbb
sbb
stc
push
pop
sub
sbb
andl
sub
sbb
pop
or
clc
rcl
enter
adc
add
test
outsl
jno
les
sti
mov
pop
rcl
mov
add
xor
mov
ficoms
add
mov
je
or
dec
inc
test
in
imul
add
mov
clc
inc
xlat
aad
or
movsl
jmp
in
jmp
ja
push
insl
and
xchg
data16
pop
lcall
ss
inc
fcoms
bound
int3
mov
cmc
push
sbb
shl
adc
cltd
or
add
xlat
mov
inc
dec
test
addr16
mov
mov
sbb
scas
leave
rclb
dec
shrb
or
adc
and
movsl
fucom
adc
xlat
lret
popa
inc
bound
cltd
mov
push
xor
cmpb
cmp
mov
xor
or
jne
jl
ret
addb
sub
jmp
ret
mov
mov
mov
in
sbb
sub
out
cmpsl
sbb
lods
pop
iret
inc
lea
and
cmp
je
add
fucomp
test
xchg
test
push
repz
mov
cltd
cwtl
lcall
mov
xor
push
rclb
imul
aas
int
sub
add
lret
and
xchg
cwtl
cli
testl
out
jmp
jbe
push
mov
or
dec
sub
add
cwtl
push
scas
insb
shl
pop
mov
or
shll
ljmp
xchg
jo
imul
aaa
mov
test
jge
mov
sbb
jb
out
icebp
inc
shlb
das
mov
jmp
and
mov
or
in
dec
dec
ffree
data16
lea
cmpsb
das
dec
inc
cmpsl
adc
mov
push
jnp
test
test
aaa
ja
mov
jmp
push
lret
xorl
imul
sbb
cli
pop
push
scas
adc
lea
mov
cmpsl
jb
outsb
jp
decl
or
aaa
int
pop
repz
mov
mov
adc
rorl
iret
es
mov
xorl
cmp
testl
xor
jae
insl
mov
popl
adc
or
into
cmp
outsb
pop
ret
pop
dec
cli
cmc
pop
mov
test
dec
pop
cld
inc
sub
cmc
lret
scas
cmp
cmpsb
cld
pop
popf
aas
adc
cltd
pop
add
out
test
adcb
push
stos
jns
push
lea
sub
in
mov
xchg
xor
or
dec
lods
mov
roll
cltd
jo
in
repz
dec
addl
jp
movsb
cmp
push
lret
pop
or
imul
sbb
enter
sub
int3
rol
in
xchg
pop
mov
bound
pop
mov
push
lret
ret
out
inc
jmp
shr
cmp
stos
push
stos
in
pop
sbb
rolb
clc
cmpsb
add
cltd
inc
arpl
mov
ret
popa
cmc
shlb
sbb
jp
push
mov
xchg
inc
sbb
in
movb
outsl
push
push
int3
lret
sbb
fsubs
movsl
or
movhps
pushf
sti
adc
incl
xor
dec
xor
dec
sbb
mov
outsb
adc
bswap
int3
jb
mov
pushf
dec
aam
in
out
out
dec
popf
jae
out
add
fisubs
mov
or
insl
cmp
pop
loop
popa
adc
neg
xor
pop
inc
adc
and
sub
les
movsl
dec
or
into
cmp
mov
push
mov
arpl
push
push
or
add
and
dec
leave
stos
sbb
cmpsb
jge
xchg
and
loopne
es
lods
xor
js
push
inc
addr16
cmp
mov
aas
test
cmp
lock
xor
out
inc
xchg
sbb
scas
push
je
enter
imul
mov
adc
sbb
mov
dec
mull
xor
jns
inc
scas
pop
mov
lret
subb
add
mov
lret
or
ljmp
xchg
pop
bswap
pop
fsubl
mov
sbb
sbb
pop
push
outsl
int
push
nop
not
xlat
scas
inc
test
lret
rol
mov
sbb
push
lea
pop
sub
sub
sub
xor
xor
sbb
loope
mov
cwtl
xchg
pusha
dec
shll
clc
sarb
out
lcall
mov
inc
andl
aam
adc
das
xor
jmp
add
loop
mov
lret
or
dec
popa
test
or
es
push
jno
mov
or
lods
out
enter
fdivr
sbb
out
adc
imul
decl
mov
shlb
xor
mov
repz
sahf
xchg
popa
out
xchg
dec
sbb
mov
adc
out
lds
test
cmpsl
jmp
test
dec
stos
inc
inc
mov
push
xorl
daa
cmp
mov
pop
cld
or
xor
adc
mov
arpl
adc
repnz
mov
sbb
mov
add
mov
dec
imul
cld
nop
mov
repnz
mov
push
cmp
push
int
fsubl
push
repz
pop
in
addr16
jo
leave
out
sub
mov
and
xor
xchg
cmpsb
outsb
sti
ljmp
outsl
xchg
xor
jecxz
es
jns
mov
add
xchg
adcb
jo
push
pop
lret
xor
or
outsl
cli
pusha
out
jb
retw
jo
pop
das
sbb
test
test
nop
cmpsb
mov
ret
xchg
in
test
add
xor
outsb
xor
lret
cmpsb
or
out
ret
arpl
xchg
or
push
les
in
mov
jnp
mov
pop
and
ss
aad
push
lcall
or
xor
mov
xor
jge
ja
popf
scas
adc
lcall
xchg
sub
mov
arpl
adc
movsl
stc
outsl
into
cli
sbb
decb
or
loopne
jmp
insb
mov
lret
in
test
xlat
aaa
lods
cmp
aas
mov
and
push
pop
and
imul
cli
jo
xrelease
xor
dec
push
xor
pop
es
mov
sbb
stc
call
repnz
ds
lods
pusha
add
or
sub
movsb
push
push
mov
cwtl
cmp
push
xlat
jecxz
cmpsb
cmp
pop
mov
mov
cmp
aas
jge
jge
rcrb
loopne
add
xchg
sbb
sbb
movsb
pop
sub
or
iret
mov
jae,pn
push
pop
mull
cmp
out
in
lret
adc
into
dec
jnp
ljmp
sbb
cmpsb
ret
pop
push
add
pop
insb
aaa
or
ss
add
cmp
pop
addr16
or
clc
lret
pop
fsqrt
inc
dec
xchg
push
js
and
rolb
xor
in
bound
pop
or
aam
insl
add
outsb
enter
sbb
dec
lods
jbe
push
pop
jecxz
push
dec
inc
xor
std
pop
xchg
loopne
lock
add
and
orb
or
popf
jo
and
les
jecxz
in
xlat
pop
icebp
inc
pop
sbb
imul
decl
xor
in
sub
dec
in
cld
pop
lods
movsl
adc
pop
loope
icebp
cmp
test
pop
iret
add
aam
push
icebp
xchg
lea
movsl
cmp
arpl
jp
in
push
lods
mov
jb
sbb
mov
lahf
outsl
stc
mov
push
xchg
in
rcrb
dec
inc
data16
aam
add
insb
add
mov
cltd
xor
and
movsl
mov
sbb
mov
add
push
push
or
inc
mov
popa
insl
imul
cwtl
loopne
movsl
shl
sub
stos
mov
sar
enter
cld
les
testb
dec
xchg
push
popa
and
lret
into
and
hlt
sub
xchg
adc
add
out
mov
jne
xor
push
fdiv
nop
popf
xor
add
and
dec
ljmp
and
out
cmpsb
or
repnz
test
std
or
imul
shrb
and
cwtl
into
mov
stos
inc
pusha
xchg
xlat
clc
int3
cld
mov
add
push
ror
jg
cmp
daa
push
sub
or
sub
xchg
xchg
cmp
mov
mov
sub
lods
mov
and
std
xchg
out
pop
loope
scas
and
xchg
cmp
or
cmp
mov
lea
pushf
fiadds
cmpsl
cmc
mov
insb
cmp
shrl
inc
add
jb
sbb
xor
push
pop
ds
jecxz
aaa
out
ret
sti
dec
cmpsl
jnp
mov
test
rorl
mov
ds
mov
push
nop
sti
add
cmp
cltd
sub
xchg
inc
iret
pop
es
repnz
lahf
lock
pop
hlt
arpl
push
xor
inc
repnz
cmp
je
fisubl
push
dec
cmp
divl
inc
or
and
fnstsw
shll
jno
scas
sub
xorl
mov
lret
add
aad
repz
mov
imul
cmpsb
cltd
lock
out
inc
pop
icebp
in
mov
lods
and
loope
add
std
adc
or
sti
andb
dec
fs
nop
enter
push
adc
sbb
repnz
in
adc
push
mov
in
fs
push
clc
inc
scas
clc
sbb
fs
loop
mov
dec
pop
or
mov
lcall
loop
mov
cli
adc
mov
mov
mov
cwtl
push
pop
inc
test
movsl
or
test
sub
push
shrl
movsb
push
insb
xlat
pop
xchg
xchg
out
or
inc
data16
lret
in
sbb
sub
out
sarl
lds
scas
outsb
icebp
xor
add
imul
mov
jle
mov
loopne
mov
adcb
mov
mov
data16
insl
xor
out
push
xchg
fs
inc
aam
jle
dec
outsl
jbe
stc
mov
xchg
clc
cli
jp
in
cmp
inc
insb
push
into
sub
pop
imul
sahf
jp
jecxz
xchg
ds
repz
jbe
sub
iret
ss
sub
es
xor
jge
mov
and
jo
dec
enter
bound
test
ljmp
mov
push
cmp
in
dec
jmp
push
dec
aam
aad
aaa
adc
xlat
mov
adc
inc
out
cld
or
mov
into
xchg
negl
mov
xchg
fmuls
xchg
insb
adc
push
jae
pop
cmp
add
or
lods
xor
cmp
sti
pop
push
adc
andl
adc
mov
push
mov
cltd
xor
inc
or
rcrl
gs
les
out
jno
addl
stos
sub
jp
stos
sub
pop
xor
aam
gs
sti
lods
jno
add
xchg
dec
inc
test
cmovne
and
sub
in
xor
jb
fnstsw
push
insl
sbb
or
push
pop
aam
mov
dec
scas
mov
or
mov
sti
pop
movsl
mov
daa
xchg
xchg
pop
lret
push
push
jl
xor
push
push
or
cli
or
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
test
jl
out
mov
sti
loopne
inc
push
call
cmp
mov
dec
dec
or
xchg
xchg
daa
pop
sbb
inc
sbb
mov
ss
out
nop
popa
mov
push
imul
or
cwtl
inc
mov
xor
hlt
inc
push
xor
mov
out
loope
sub
xor
mov
cld
gs
insb
xchg
stos
cmp
ret
push
je
xor
ret
in
imul
push
jnp
dec
das
sub
fdivs
std
fidivrl
push
inc
inc
shll
and
mov
or
fcomps
xlat
fisubl
mov
add
fisttpll
push
loop
xchg
dec
lock
jmp
sub
mov
iret
xor
adc
ds
mov
sarb
pop
sbb
call
fstpt
movsl
mov
dec
cmp
rorl
jl
rorl
cltd
pop
gs
jmp
stc
pushf
push
pop
rolb
mov
sahf
and
test
fs
lea
in
jmp
cmp
mov
sub
stc
lods
enter
cmpsl
mov
add
jl
jg
jg
or
sbb
loope
ret
cmp
das
fwait
and
aad
mov
push
lahf
das
push
jecxz
mov
aad
orb
dec
xlat
mov
je
lret
cwtl
xchg
mov
scas
pop
or
das
or
or
xchg
pop
add
pop
addl
loope
dec
cmp
jnp
repz
sub
imul
sub
inc
cmp
mov
dec
sbb
inc
shll
call
mov
insb
outsl
adcl
ret
imul
pushf
push
push
xchg
sbb
test
in
jne
stos
push
sti
aam
push
and
popa
xor
sbb
push
pop
jg
std
mov
sub
mov
mov
pop
adc
stos
cli
mov
stos
xchg
and
popf
sahf
test
cmpb
and
repnz
sbb
inc
jecxz
pop
sub
and
add
out
sti
cmp
cli
in
or
xchg
fs
mov
push
jl
xor
inc
daa
mov
xor
dec
sbb
sti
and
cmp
data16
xchg
push
inc
mov
push
inc
mov
pop
lcall
jns
push
inc
ret
insl
cmp
fsts
add
pop
popa
jae
or
es
jecxz
dec
sbb
jle
push
sahf
xchg
and
pop
fdivr
ss
imul
into
dec
or
outsb
inc
mov
int3
push
xor
xorb
cld
adc
xor
clc
sbb
cli
mov
xor
pop
push
xor
andb
pop
xchg
repnz
mov
adc
arpl
iret
mov
push
hlt
mull
sbb
lcall
lds
mov
mov
ljmp
lcall
inc
clc
push
jp
sbb
lods
ficoml
mov
mov
loopne
test
outsb
inc
out
xchg
cmp
push
sahf
and
mov
mov
dec
pop
push
ds
mov
jle
sub
push
adc
sahf
aaa
lahf
iret
mov
in
pop
and
lahf
lods
int3
xchg
cwtl
or
test
jb
ljmp
clc
ljmp
addl
push
dec
xchg
imul
sub
mov
sahf
sub
call
xchg
jo
rcl
dec
add
mov
push
sub
insb
jle
rcrl
push
test
gs
fs
pop
pop
aas
push
lret
mov
sub
xchg
pop
popa
adc
lea
movsb
test
in
mov
movsb
data16
cmpsb
xchg
fxch
inc
inc
pop
push
or
adc
jnp
ret
icebp
inc
mov
out
pop
adc
sti
iret
inc
lock
movsb
daa
out
stc
dec
or
xchg
dec
dec
inc
xor
loop
pop
mov
dec
xchg
or
xor
push
popf
mov
cmp
enter
rcll
lcall
mov
cmc
jbe
mov
aam
fucom
sti
sti
or
jae
fwait
xchg
mov
data16
or
hlt
cs
test
mov
ret
dec
fwait
loopne
adc
mov
cltd
inc
adc
mov
cld
lock
lock
ret
cwtl
and
adc
scas
sub
div
int
pop
pop
popa
vmulss
xor
mov
cmp
inc
mov
xchg
jae
movsb
add
xchg
xor
out
mov
xchg
adc
mov
push
repz
mov
xlat
xor
sbb
xchg
sahf
xor
xor
sbb
or
fcoms
aaa
sar
imul
pop
jb
sub
out
xor
xchg
mov
jmp
dec
xor
andl
cld
sub
iret
dec
inc
sbb
pop
testb
pop
rcrl
les
jmp
xchg
fs
mov
mov
dec
ja
pop
divl
test
or
cltd
mov
imul
push
roll
cwtl
stc
mov
insb
lods
ja
adc
fmull
or
jmp
lret
cwtl
ss
cld
push
sub
rcrl
xor
mov
fwait
popa
aad
add
aaa
mov
inc
inc
mov
adc
mov
int3
test
jg
repz
stos
push
pop
pop
stos
sahf
push
cwtl
adc
mov
xor
push
dec
mov
push
mov
lcall
cmp
xchg
jo
mov
adc
xlat
mov
mov
cld
das
xlat
jns
ja
insl
in
lret
mov
pop
int3
add
pop
insb
mov
push
cmp
flds
enter
jecxz
cld
and
inc
dec
les
mov
dec
jo
mov
ret
mov
and
sub
sub
mov
and
scas
jp
enter
insl
rcl
mov
std
cwtl
push
dec
dec
add
pop
test
inc
lods
and
adc
mov
dec
mov
cmp
int3
add
mov
lret
das
cmp
scas
sbb
pop
and
and
rclb
repz
cmp
outsl
push
int
imul
imul
mov
rcr
fxch
adc
sahf
cmp
dec
or
outsl
mov
and
cmp
frstor
sbb
es
xlat
jmp
pop
movsb
lret
dec
std
mov
sub
adc
xchg
fimuls
lret
mov
pop
mov
mulb
test
hlt
adc
cmp
xor
sbb
dec
mov
and
push
inc
iret
test
fcmovb
pop
adc
xchg
stos
push
int3
or
push
test
xchg
pushf
cmp
outsl
loopne
and
enter
jne
and
mov
dec
repnz
and
mov
mov
xor
cltd
mov
dec
jle
leave
jl
pop
sahf
push
sahf
xor
or
pusha
shr
mov
push
outsl
subb
add
test
push
mov
clc
mov
sahf
fwait
xchg
out
dec
es
add
popa
fistpl
mov
and
push
cmc
emms
cmp
dec
mov
clc
lods
and
inc
ljmp
adc
pop
cs
lods
add
hlt
decb
shll
pcmpgtw
dec
lds
or
ds
pop
leave
xor
or
pusha
scas
xor
lods
and
mov
pop
push
or
incl
icebp
js
mov
rclb
cmp
pushf
jmp
test
imul
shrb
push
icebp
cmp
cmp
mov
push
addr16
xor
lock
test
outsl
fists
shrb
and
add
nop
clc
mov
push
xchg
andb
jbe
adc
xchg
dec
lods
mov
popa
mov
or
xor
mov
call
test
xor
add
inc
sub
mov
test
or
aad
cld
sub
repnz
imul
jl
push
jne
xor
cmc
jg
jle
push
jmp
fs
pop
dec
idivl
mov
pop
test
sti
dec
inc
inc
xchg
sub
push
or
pop
inc
les
and
loope
into
mov
add
sub
in
mov
and
sub
es
icebp
and
sub
test
lea
fs
iret
lock
sti
dec
sub
test
mov
add
out
jmp
xor
lds
imull
inc
and
pop
pop
cli
cmpsl
mov
adc
lret
lahf
call
imulb
stos
loopne
add
das
imul
je
add
cmp
or
lds
mov
rcll
mov
imul
or
insl
inc
xor
mov
pop
and
dec
imulb
imul
mov
dec
push
arpl
push
or
int
mov
inc
xchg
sbb
adcb
out
inc
adc
fwait
jg
and
out
in
mov
lods
repz
inc
jno
inc
nop
sbb
roll
pushf
mov
inc
daa
jno
lcall
push
hlt
mov
fs
mov
int
inc
mov
jg
leave
jae
mov
int
lods
mov
sti
hlt
jle
pop
int3
cmc
mov
jecxz
mov
xor
push
push
cwtl
lods
repz
or
jbe
insl
fwait
ss
shr
loope
pop
push
pop
mov
jle
jg
aaa
sbbl
stos
push
jnp
movsl
sub
jl
lea
loop
aas
xchg
fsubrl
jnp
mov
into
push
cmp
sahf
xchg
xchg
xchg
fidivrs
movsl
dec
rorb
testl
xor
fistps
push
pop
psllw
push
fildll
dec
dec
lret
repnz
scas
stos
fwait
stos
jmp
mov
ds
mov
jp
pop
adc
cmp
std
inc
jae
test
ret
jp
push
ja
imul
into
pop
mov
loope
fimull
mov
repnz
cmp
jno
xchg
jge
scas
mulb
test
xchg
jmp
add
mov
or
and
je
add
pop
xor
mov
cmc
pushf
outsb
lods
mov
sahf
xor
sahf
cmp
aaa
mov
clc
fs
lcall
add
stos
ss
shl
jne
lea
test
and
rolb
test
hlt
inc
jno
repnz
cmp
shlb
sub
aam
sbb
nop
fisttpl
push
adc
pop
xchg
cmp
std
aad
xchg
repz
fisubl
cs
mov
cld
or
jl
or
hlt
add
in
xchg
mov
pop
cmp
sbb
inc
decl
mov
and
test
inc
lahf
in
sahf
lcall
adc
jmp
adc
fwait
loope
sub
sub
lea
dec
mov
arpl
mov
cmp
mov
or
adc
or
insl
in
adc
or
data16
dec
cwtl
data16
pop
test
mov
stc
mov
mov
push
mull
xor
add
call
sbb
jb
mov
sets
push
push
jb
inc
and
aaa
mov
push
arpl
pushf
and
cs
add
jl
ljmp
xor
xchg
mov
pushf
into
sbb
pop
xchg
lret
push
dec
fiadds
add
rcll
jbe
sub
and
stos
xchg
push
cmp
int
jmp
dec
mov
ret
and
mov
jae
fwait
pop
outsb
jge
mov
jbe
mov
call
outsb
ja
adc
test
pop
ret
mov
lock
xor
xchg
imul
push
dec
inc
cmp
pop
sbb
inc
xor
or
jge
fstpl
out
loop
decb
xchg
out
mov
inc
lea
adc
fdivrs
jg
or
sub
and
fs
push
mov
xor
jne
cmp
cmp
decb
add
add
push
xor
out
aam
nop
bound
movsb
sbb
push
pop
sub
fisubrs
and
xchg
icebp
out
das
ja
in
mov
or
cmpsl
cld
xor
out
inc
imul
mov
aad
mov
data16
out
cmpsb
adc
mov
inc
aaa
pop
ja
popf
xor
shl
cmp
mov
loop
fsubl
pop
jp
dec
xchg
aam
mov
lods
dec
jo
out
adc
test
jns
lret
jge
int
ljmp
std
and
ljmp
sub
in
sbb
push
xor
movsl
pop
jbe
adc
cmc
xchg
shll
icebp
fst
orl
sbb
and
cmp
in
adc
xor
call
aaa
push
push
cli
jge
sub
imul
stos
mov
sar
inc
lret
mov
jb
fs
adc
push
jecxz
add
pop
and
mov
adc
mov
insl
xor
lcall
iret
sti
popa
cld
int3
jno
addr16
mov
jnp
and
shl
mov
inc
fsin
adc
lock
fldl
sbb
cmpsb
xchg
add
ret
inc
stos
pushf
je
sbbb
jl
dec
movsb
mov
loopne
cwtl
outsb
addr16
nop
sub
adc
or
in
push
or
jo
aad
scas
inc
cmp
in
fbstp
in
into
movsb
and
adc
and
rclb
aad
mov
sti
dec
sbb
cmp
inc
cli
das
fimull
or
into
sbb
outsl
add
movb
andb
xor
add
loopne
fildll
shll
jl
add
mov
lret
ret
pop
ret
cmpsl
leave
xchg
je
shlb
repz
push
xchg
hlt
lock
das
xchg
inc
stos
aas
lock
leave
xchg
xchg
arpl
sti
inc
andl
add
ss
xor
push
cltd
mov
mov
pop
cmpsb
repnz
mov
lcall
mov
push
insb
cvtdq2ps
ficoml
mov
bound
es
andl
movsb
jl
xchg
mov
and
ret
sbbb
mov
rcl
imul
cmp
imul
mov
mov
xor
cmpb
pop
into
mov
data16
fwait
imul
stc
mov
dec
test
jnp
cmc
mov
mov
push
push
sti
test
mov
jo
es
and
fcomp
mov
add
and
mov
jnp
jne
lret
out
pushf
push
or
or
lahf
and
push
lcall
xchg
cmp
imull
push
xchg
cmp
leave
mov
and
pop
and
dec
cld
ja
insb
cmpsb
lods
adcl
ret
int3
sbb
lds
or
sub
xor
in
adc
adc
cmp
pop
and
lock
ds
jo
test
icebp
pop
decl
bswap
cmp
imul
fimull
rcrl
cmp
mov
inc
std
lret
lea
adc
jns
scas
int3
xor
fisttpl
popa
jmp
push
cvtps2pi
xchg
sti
xor
inc
mov
mov
xchg
cmp
or
jne
sbb
aaa
push
pop
mov
cmpsl
mov
insl
ljmp
hlt
scas
and
push
adc
arpl
js
mov
cmpb
shll
adc
mov
lahf
pop
stos
mov
scas
outsl
sub
pop
mov
fstpt
repz
stos
adc
mov
cmpsl
mov
xchg
pop
push
add
inc
add
jne
lock
pop
inc
aad
xchg
dec
sarb
mov
lods
and
mov
xor
and
cmp
int3
adc
movsl
cli
loop
jmp
dec
or
dec
xor
inc
dec
cwtl
mov
add
adc
cmp
cld
pop
mov
jbe
fildll
outsb
ret
fmul
push
mov
cs
and
stos
mov
ja,pt
fnsave
cmpsb
jecxz
data16
jmp
mov
imul
mov
mov
cmp
jbe
add
aas
popa
adc
ss
aas
sbb
rcll
ficoml
mov
loopne
sub
jmp
add
jg
adc
push
pop
mov
negb
popa
adc
mov
aaa
mov
adc
in
mov
js
icebp
scas
out
loopne
pusha
mov
fisubrs
aam
jp
cmp
ljmpw
and
hlt
hlt
pop
fstpt
jp
jle
jp
mov
ds
cmp
mov
pop
fldt
pop
jge
xlat
xor
xchg
in
shll
sub
popf
cld
loope
inc
pop
repnz
sbb
shll
dec
cmp
testb
loopne
push
push
in
int3
adc
cmp
lcall
mov
movsl
xchg
shlb
les
xchg
fidivl
popa
call
dec
ljmp
gs
pushf
xchg
rolb
xor
ja
into
lods
adc
std
repnz
lret
scas
fwait
aad
aad
sbb
cltd
aam
mov
add
lcall
push
loopne
inc
out
pusha
in
clc
aam
outsb
jp
lcall
cmp
mov
sub
push
adc
xchg
sbb
jl
pop
test
add
dec
test
out
pop
add
fsubrl
in
out
mov
adc
push
inc
dec
notb
and
inc
int3
pop
cs
sub
and
das
iret
cli
fdivs
sub
push
mov
or
jge
and
pop
insb
jmp
cmc
daa
cwtl
int
add
sbb
inc
outsb
imul
mov
int3
jge
pop
xchg
idivb
sahf
pop
orl
sub
call
add
and
test
clc
jp
ret
icebp
sbb
or
enter
js
outsl
add
cmp
mov
and
sub
mov
sti
mov
mov
loop
jmp
bswap
fists
ljmp
insl
movsb
dec
mov
mov
mov
inc
stc
add
sarl
bound
lds
divl
lods
jb
rolb
cld
pop
out
xor
sti
lods
push
rorb
pushf
pop
arpl
fisubrl
shll
mov
inc
jl
add
loopne
cmp
sub
rolb
push
pop
inc
cmp
movb
scas
loopne
jge
pushf
outsb
test
adc
lret
dec
mov
arpl
cmp
inc
out
push
scas
stos
js
into
xor
loop
push
push
fcom
scas
sahf
inc
add
pop
sub
in
lea
pushf
add
mov
push
jns
rorb
test
pusha
aaa
pop
arpl
sahf
mov
inc
andl
mov
mov
push
xchg
iret
popa
cmpl
mov
xor
rorl
cmp
rcrb
mov
mov
xor
dec
dec
or
lcall
xchg
mov
pushf
sahf
or
pop
pushf
lea
icebp
pop
data16
adc
and
jg
clc
in
cli
pop
xor
pop
stos
add
ficoms
mov
and
sub
xor
sbb
shrl
xor
fadds
or
mov
mov
popa
imul
or
jge
cli
adcl
cmpsb
lret
subb
pop
pop
xchg
leave
adc
and
cmpsb
or
fldl
cld
inc
lcall
pusha
inc
decl
rol
mov
cmc
xorl
cs
mov
mov
jl
rorl
or
rcl
dec
pop
push
xchg
xlat
cmpsb
add
aam
insb
pop
int
add
xchg
loop
rol
pop
test
dec
lret
into
test
adc
fdiv
sub
push
std
xor
mov
pop
ja
clc
insb
jb
shlb
into
pushf
jmp
mov
add
loop
sub
dec
push
mov
rcl
add
fisubrs
out
jb
add
sahf
pop
test
aas
cs
imulb
adc
sbb
mov
aas
mov
js
xor
mov
push
cmpsb
imul
out
jnp
call
adc
mov
xor
push
sbb
jmp
inc
pushf
ljmp
inc
cmp
lods
scas
cmp
lret
mov
test
cltd
inc
lea
in
scas
pop
jno
jb
sub
rcr
call
cmp
mov
lcall
mov
inc
lret
int3
arpl
popf
mov
std
pop
js
adcl
negb
dec
inc
inc
out
outsb
mov
jmp
cmp
push
pop
mov
cmp
ja
pop
dec
dec
adc
mov
sahf
iret
push
inc
test
jl
mov
push
and
pop
xchg
dec
mov
ja
ljmp
mov
mov
or
or
mov
push
cmpb
lods
and
and
push
insl
push
popa
push
cmp
mov
ds
jb,pt
cld
lret
adc
out
pop
int
jb
pop
outsl
sti
dec
mov
cmpsl
cs
add
mov
lret
mov
mov
outsl
insl
push
pmaddwd
iret
cmpsb
xchg
scas
pop
or
rclb
repnz
add
addl
inc
add
lret
xor
test
movb
add
enter
int3
lret
and
bound
xor
in
inc
stos
sahf
loop
xchg
xchg
mov
mov
sub
mov
pop
xchg
ror
mov
jp
pop
test
add
xchg
xor
nop
loop
data16
inc
lcall
lea
bound
out
add
sub
xchg
iret
xchg
lcall
rol
mov
mov
pop
mov
xor
out
jle
pop
mov
int
adc
ss
test
out
add
pop
fidivs
dec
dec
pop
iret
shl
imul
mov
xor
mov
in
xor
mov
std
add
pusha
repz
in
mov
or
mov
ret
ror
enter
pop
mov
jo
movsl
outsb
in
out
lock
jmp
cltd
shlb
xchg
out
mov
mov
mov
test
in
xchg
dec
insl
inc
dec
mov
sti
jno
lcall
xlat
or
imul
sub
or
sbbl
mov
ds
enter
out
pop
pop
jne
sbb
push
xchg
out
sub
dec
xchg
pusha
or
cmpsl
sahf
jae
repz
int3
test
rcll
fs
icebp
mov
je
scas
pop
mov
hlt
push
fiadds
movsb
sbb
push
nop
inc
cmp
fmuls
sti
cmp
pusha
xor
loope
nop
mov
std
pop
dec
xchg
clc
aad
adc
nop
test
push
cltd
sbb
iret
rorb
sti
jle
inc
lock
inc
sub
xchg
and
test
into
lcall
loope
cmp
call
push
testb
mov
and
mov
outsl
movsb
inc
ss
xor
jbe
push
inc
mov
mov
mov
jle
adc
sub
dec
xorl
cmp
jge
nop
sbb
call
fs
shl
sbb
lret
lcall
pop
dec
dec
and
enter
inc
popf
cmpsl
hlt
orl
out
cmp
movsl
xchg
inc
jmp
test
sub
inc
sub
xchg
arpl
mov
aaa
incl
call
push
addb
push
ja
adc
cltd
popf
jl
fidivs
into
fcomps
dec
sbb
lret
adc
fimuls
imul
ljmp
sub
add
outsb
fildll
in
or
cmpsb
push
and
add
jb
sub
into
stc
pop
aas
call
dec
sub
inc
adc
push
arpl
and
mov
enter
hlt
outsl
sbb
jb
jle
test
lret
pop
jae
dec
shlb
mov
xchg
pop
dec
movl
push
fmull
or
pop
aas
jo
mov
push
mov
mov
mov
repz
xchg
add
push
imul
xor
inc
ret
call
cmp
aaa
jp
xchg
loope
adc
sbb
dec
inc
sub
xchg
popf
mov
push
xchg
mov
les
in
push
dec
push
std
or
jno
bnd
ret
fnsave
adc
mov
lock
roll
cltd
iret
add
adc
sarl
ljmp
fwait
lods
mov
in
in
movsb
shld
imul
pushf
push
das
fcoml
iret
mov
lods
fsubrs
pusha
rorb
adc
cld
orb
ret
adc
cmp
cmpsb
fcoml
scas
mov
xchg
loope
or
cmp
popf
sbb
mov
and
ja
mov
lahf
pop
stc
adc
cwtl
jnp
mov
bound
sub
adc
scas
xor
jne
cmpsl
sub
xlat
jae,pt
cmp
push
mov
add
push
mov
push
push
jmp
xchg
cmc
add
lods
mov
call
aaa
adc
cmp
aaa
repz
sbb
cli
dec
push
je
fsubrs
imul
lds
push
adc
pop
arpl
scas
cmp
adc
cwtl
dec
leave
scas
outsb
push
fucomi
in
fidivs
sbb
movsb
pop
test
lahf
sbb
stos
inc
pop
std
inc
pop
or
cmpsl
int3
loopne
push
in
mov
jecxz
push
test
rolb
pop
cwtl
xor
cmpsb
sbb
in
dec
and
mov
push
push
mov
imull
shll
xor
lods
fndisi(8087
push
cmpsl
setbe
mov
fisubrl
mov
scas
cli
adcb
jl
mov
ret
xor
lcall
mov
or
dec
clc
iret
add
pop
pop
leave
add
xor
mov
mov
dec
nop
inc
add
fs
fimuls
mov
sub
aaa
pushf
jl
jbe
fisubs
ljmp
xchg
push
dec
pop
sub
ljmp
add
mov
cmpsl
mov
mov
jp
pop
sub
xchg
mov
je
pop
inc
xor
out
sub
pop
adc
inc
js
movsb
cmp
out
jb
push
xorb
shrl
testl
mov
mov
jecxz
ds
sub
ss
hlt
das
out
xchg
jmp
inc
push
adc
xor
sbb
ljmp
icebp
into
jle
movsb
sbb
gs
mov
roll
push
add
or
in
cld
push
push
jp
andb
subl
sti
pop
pop
sbb
sahf
in
sbb
stc
popa
xor
gs
nop
or
jb
addb
mov
int
adc
mov
add
adc
xchg
lea
jnp
jecxz
cmpsl
arpl
scas
sahf
sub
outsl
outsl
cmp
cmp
push
or
jge
mov
add
pushf
das
in
test
daa
xchg
lcall
adc
stos
inc
int
ficomps
mov
shll
lods
mov
xor
dec
popf
push
and
and
mov
insb
or
mov
testl
adcl
icebp
je
cld
mov
lea
mov
xchg
lret
pop
dec
shl
pop
jnp
push
mov
fistps
xorb
mov
adc
cmp
iret
xor
pop
sbb
jle
arpl
data16
dec
hlt
mov
inc
cltd
test
in
or
test
sub
xchg
subb
and
sahf
sahf
sahf
and
jae
lret
mov
jo
pop
mov
push
stos
ljmp
or
xlat
mov
repz
or
fisubrs
cmp
xor
enter
mov
push
adc
stos
cmp
jmp
or
jnp
xchg
faddl
in
into
iret
rcrl
cmp
push
ds
lret
shr
xor
dec
mov
out
pop
rclb
adc
pop
into
xorl
mov
enter
or
inc
iret
lcall
xchg
jne
fs
ror
mov
mov
jbe
jecxz
jns
insl
fstps
add
sub
inc
sub
mov
pop
push
jbe
addr16
xlat
sub
mov
dec
xchg
out
jb
add
pop
ffree
dec
add
lret
icebp
popf
pop
or
call
andl
mov
cmp
hlt
or
dec
jge
sub
cmpsb
jle
outsl
mov
js
das
xchg
lahf
lcall
inc
mov
scas
iret
xchg
in
sbb
adc
mov
and
jge
lcall
add
or
jno
sbb
cmc
std
repnz
and
mov
mov
test
shlb
adc
int3
std
xor
or
in
sub
pop
adc
mov
xchg
call
mov
divb
cmp
mov
fsubrs
jae
repz
scas
aas
xor
dec
ror
mov
mov
xchg
jnp
jb
mov
push
popf
mov
cmp
inc
outsl
xchg
fbld
and
out
lock
pusha
and
loop
outsb
mov
test
and
jns
add
or
add
lcall
jmp
mov
dec
push
fimull
dec
dec
out
dec
into
ljmp
insb
icebp
mov
daa
sbb
int3
fstpl
cmp
lds
pop
or
jle
pop
adcl
loope
or
cmp
in
and
imul
jns
mov
cld
mov
fsubrs
mov
mov
pop
xchg
fstps
dec
adc
and
outsl
or
sbb
test
mov
pop
jb
ds
aaa
ret
arpl
scas
sbb
repz
or
mov
cld
adc
push
xchg
inc
das
sub
ficomps
cmp
dec
fwait
xchg
jl
or
push
repnz
stc
test
cmp
add
cwtl
mov
lock
or
lock
mov
lret
lods
sti
stos
xchg
sbb
divl
fcomps
mov
jae
pop
xor
pop
fcmove
add
pop
dec
repnz
adc
out
pop
mov
cltd
inc
adc
je
arpl
mov
cld
jl
mov
add
call
out
inc
cmp
push
adc
scas
pusha
ret
and
ficoml
mov
mov
mov
add
jmp
popf
add
xchg
adc
pop
in
loop
and
fstpt
pop
addl
xor
mov
cmpb
idiv
and
xorb
ja
adc
es
push
ds
mov
lods
mov
popl
pop
jg
iret
sub
push
jle
pop
adc
mov
adcb
sub
jno
dec
sarl
mov
or
add
ja
leave
sahf
sub
sbb
int
push
cmp
mov
mov
lahf
insl
mov
jg
xor
cwtl
ficompl
xor
mov
jnp
ss
adc
xchg
adc
mov
leave
out
flds
mov
int
mov
mov
sbb
push
mov
jmp
sbb
mov
jge
enter
sbb
lret
rol
clc
add
icebp
shll
inc
sub
insl
repz
cmp
ljmp
cs
or
fsubl
inc
out
into
sub
mov
test
enter
test
xor
cmpsb
lret
mov
cld
shr
mov
leave
push
stc
lcall
xchg
lods
hlt
add
jnp
cwtl
adc
clc
fs
leave
inc
popa
add
sub
dec
pusha
xor
dec
adc
fwait
add
xchg
idiv
push
rcrb
pop
cmp
cli
cmp
jecxz
jo
inc
popf
fsub
pop
movsb
push
outsl
or
pop
iret
sbb
dec
mov
jae
mov
popa
rorl
fmulp
rcll
pop
ja
dec
jl
xchg
push
out
mov
fistps
adc
ja
xor
sbb
aaa
inc
sub
ret
xchg
jo
pop
lret
insl
adc
jno
xchg
xorb
movsb
clc
adc
test
pushf
sti
push
sub
cmp
xor
ficoms
jb
gs
outsb
jo
xchg
in
mov
pop
xor
sub
in
mov
pop
fsub
fstp
rep
shr
sbb
loop
cld
mov
mov
orb
cmp
push
adc
jl
mul
in
sbb
nop
mov
mov
test
and
pop
shlb
mov
push
cld
cs
ljmp
ja
xchg
mov
fldcw
ror
ret
adc
rcrb
push
shr
sub
dec
jb
pop
xchg
push
insl
sub
sarb
cmpsb
mov
sbb
pop
mov
jns
jp
sbb
ja
sbb
or
dec
outsl
ret
cmc
push
push
push
pushl
aad
sbb
cld
mov
jae
xchg
fs
mov
sub
popf
inc
jecxz
ficoml
outsb
repnz
xor
mov
adc
pushf
pop
mov
pop
aam
lods
mov
dec
inc
in
and
pop
stos
cmp
fucomi
out
lods
jecxz
or
arpl
push
xchg
popf
pushf
loop
xor
add
lcall
cmpsb
inc
mov
dec
ljmp
je
adc
arpl
mov
dec
jg
push
xorb
mov
push
xor
and
pop
sbb
repz
mov
pop
scas
or
push
add
inc
popf
sahf
add
popa
adc
add
enter
push
test
mov
mov
jnp
shrl
std
jecxz
xchg
or
adc
inc
dec
jmp
dec
mov
push
fs
mov
dec
adc
leave
std
push
insb
cmp
lods
push
cmp
iret
scas
inc
xor
push
imull
shl
mov
cmp
insl
mov
mov
neg
cmp
add
cld
out
and
jns
ret
jecxz
mul
daa
jecxz
pop
test
loop
clc
aad
roll
pop
stc
pop
mov
movsb
das
dec
push
inc
inc
mov
out
push
or
adc
or
xchg
bound
mov
and
dec
xor
add
call
cmc
loope
push
dec
and
div
enter
popf
or
mov
dec
jl
jl
jp
mov
sbb
fdivrl
jmp
out
jbe
lods
sub
jp
in
sub
mov
xor
lret
sarb
pushf
jmp
adc
in
sbb
push
sbb
in
das
pop
test
jae
sub
popf
dec
sub
lcall
js
push
out
pop
jmp
fimuls
jnp
add
popa
daa
insl
aad
gs
std
xchg
mov
les
or
sub
jnp
inc
xchg
pop
lock
icebp
sbb
out
lret
push
xchg
popa
mov
sbb
je
popa
adc
add
cmp
out
mov
or
into
aad
push
jmp
inc
shrl
mov
std
add
jl
inc
mov
ja
push
cmpsb
out
xchg
bound
cmp
imul
movsl
es
xorb
aad
fldcw
in
out
mov
test
lods
addr16
test
xchg
inc
jmp
test
mov
enter
push
jle
mov
rol
filds
and
mov
ss
in
insl
scas
mov
jmp
imul
dec
adcl
lock
out
jbe
movsl
cmp
iret
repnz
mov
icebp
mov
sub
nop
sub
gs
sbb
and
xchg
subl
add
jnp
push
mov
sbb
pusha
out
sub
dec
inc
cld
fstl
sbb
mov
mov
dec
add
cmp
add
sbb
loop
mov
addr16
push
lods
inc
pop
into
mov
jmp
inc
mov
cltd
mov
jno
test
mov
lahf
push
rcl
pop
xor
xor
or
lcall
mov
adc
in
push
in
mov
xchg
imul
daa
cwtl
loop
inc
ljmp
xchg
mov
mov
xchg
andb
fs
out
or
movsb
cs
pop
aas
cmp
xchg
lret
xor
pushf
cmp
ror
add
inc
insb
es
outsl
shll
inc
xor
movl
mov
aam
scas
pop
popf
mov
jle
dec
mov
scas
and
in
cltd
push
mov
in
std
punpcklwd
into
cli
mov
xor
push
jecxz
sbb
push
cmpsb
mov
adc
mov
mov
fisubl
pop
mov
repz
inc
jbe
daa
or
xchg
cmp
and
pop
dec
and
fcoml
fdivl
dec
js
push
dec
add
fstps
sbb
dec
ds
aas
in
inc
push
test
sbb
cmpsb
inc
cmpsb
out
test
jl
xor
mov
roll
mov
cwtl
addr16
shlb
orb
fdiv
mov
sbb
lds
xor
add
mov
outsl
jg
xor
je
mov
inc
ljmp
repz
enter
jp
jns
mov
adc
out
es
faddl
jnp
xchg
pop
jb
adc
sbb
out
outsb
inc
and
sbb
and
add
mov
mov
adc
pop
add
pop
push
mov
mov
mov
icebp
dec
outsb
aad
pop
adc
incb
aaa
jle
clc
pushf
pop
sbb
hlt
in
push
iret
and
jbe
adc
and
int3
repnz
rcll
or
ret
jp
cmp
ja
jnp
sbb
xor
mov
aaa
call
call
dec
aas
sub
addr16
repz
scas
push
mov
outsl
xor
data16
dec
dec
ds
lea
mov
mov
pop
int3
lret
movsl
add
aas
fs
daa
cltd
sarl
out
test
xchg
bound
xchg
popf
and
mov
imul
flds
cmp
iret
ss
sub
mov
mov
xor
mov
dec
cmp
into
push
xor
mov
idivl
sbb
mov
sub
rcrb
setno
add
push
arpl
mov
jns
in
mov
mov
inc
iret
push
pop
jg
jl
adc
ret
into
cmp
dec
inc
and
xor
dec
push
mov
mov
int
xchg
adc
lret
sub
cltd
pop
data16
jbe
sbb
mov
shll
push
clc
adc
cli
das
scas
lock
js
cmpsb
stos
les
mov
sti
nop
in
icebp
cltd
cmpsl
push
pop
push
repz
mov
leave
imul
rcrl
insb
jae
xchg
push
movsb
jnp
push
loope
decb
sar
mov
mov
sahf
mov
cs
mov
gs
or
mov
mov
xchg
shr
in
imul
jae
popf
addr16
pop
xchg
mov
push
push
fldl
dec
imul
cmp
fbld
lods
sbbl
pushf
hlt
mov
mov
jmp
inc
xor
add
mov
sbb
shlb
shlb
push
fs
test
dec
pop
sbb
cli
push
or
fcmovnbe
into
call
loope
daa
std
out
cld
and
inc
outsb
adc
xor
rolb
sar
sbbb
sarl
je
jbe
adc
insl
jo
test
andb
ret
xchg
and
pusha
lcallw
and
lods
dec
stos
arpl
pop
jg
or
iret
outsl
imul
xchg
in
lods
lds
call
mov
orl
inc
lret
pop
mov
iret
push
dec
repnz
nop
data16
xchg
cwtl
push
cmp
push
sbb
cmp
push
push
hlt
rclb
lds
jl
xor
dec
add
inc
cwtl
arpl
aaa
inc
ljmp
inc
in
xor
shr
push
jnp
loop
jecxz
int
lock
aaa
xchg
int
sbb
inc
add
jp
cltd
inc
xchg
int3
sub
mov
jp
mov
pop
jne
jp
movaps
inc
mov
fistps
xchg
inc
fisubl
jo
inc
mov
push
mov
add
jnp
cltd
cmp
sub
frstor
sub
pushf
sti
add
and
pop
xchg
rolb
shr
lods
push
pushl
shll
lods
jae
add
inc
gs
or
jns
xor
sbb
or
lret
mov
xor
push
pushl
into
add
test
sbb
mov
mov
movsb
ss
adc
lds
ret
fst
lock
popa
xchg
and
sahf
test
lret
popf
jl
aad
fs
add
dec
sarl
lcall
les
frndint
dec
in
xor
shl
and
adc
push
lea
mov
test
ds
xor
lcall
mov
lret
int
mov
jg
and
jne
xor
gs
cmp
cmp
xor
fstpt
xor
xchg
movsl
dec
int
push
and
je
cmp
adc
mov
out
fstl
arpl
jle
sbb
cmc
mov
clc
pop
aaa
dec
test
aam
lahf
xor
ja
pop
jmp
jmp
cmpsl
sub
and
xlat
add
cwtl
aaa
and
dec
xchg
xchg
test
pushf
ffree
or
ret
stos
pop
sbb
rolb
cli
jae
test
or
dec
xchg
lahf
pop
xchg
mov
xchg
add
mov
repz
pop
jge
mov
imul
jb
sahf
sbb
jbe
stos
sub
outsl
ficoms
mov
pop
fisubrs
call
ret
test
sub
xchg
sub
popf
in
adcl
andb
loope
incl
pop
fadd
mov
or
lahf
xchg
movsl
pop
je
es
or
ficompl
jo
push
mov
cmpsl
push
or
push
hlt
scas
dec
sub
xor
push
fcos
rcrl
ja
fidivs
aaa
xorl
in
pop
jns
movsl
xchg
cltd
outsb
adc
cmc
test
sbb
shrb
cmpsb
imulb
mov
inc
xchg
test
aam
test
pop
sarl
mov
pop
xchg
dec
mov
cs
push
rclb
imul
jg
loop
cmp
xchg
inc
ljmp
ljmp
pop
or
adc
inc
mov
imul
mov
dec
negb
lahf
fs
and
in
and
and
dec
lock
dec
inc
lahf
ret
lock
cmpsb
lods
ret
ja
sti
and
cmpsl
fnclex
test
cmp
lds
jne
push
outsl
cmp
inc
scas
jle
inc
jmp
shrb
sub
imul
sbb
and
jo
inc
push
mov
in
xor
xorl
xor
add
in
mov
mov
icebp
stos
push
xor
xchg
add
imul
imul
mov
ret
movsl
push
mov
loopne
insl
adc
fcompl
inc
cld
inc
pop
cs
mov
ret
imul
mov
lods
cmpsb
mov
loop
movsl
lods
dec
cmpsl
stos
mov
out
mov
and
pop
sbb
and
mov
sbb
scas
fwait
lret
mov
and
pusha
xor
rorl
les
add
push
jne
in
stc
cltd
push
xor
dec
pop
and
sbbl
lock
mov
pop
push
movsl
test
sbb
jp
je
out
dec
into
and
loopne
and
jns
popa
push
popf
mov
add
or
mov
fmuls
mov
mov
test
lea
pop
sahf
xchg
push
xor
in
cmp
fistpll
roll
sbb
mov
mov
and
lds
sub
lock
popa
out
hlt
shlb
sub
cmp
pop
pop
out
sub
dec
xchg
pop
xchg
mov
add
and
mov
out
pop
jno
jl
jp
push
fdivrl
sub
sub
mov
inc
xchg
dec
pop
mov
and
adc
jae
sahf
mov
cwtl
test
in
inc
sbb
push
jl
adc
in
ljmp
stos
scas
sbb
push
test
pusha
push
cmp
sarb
enter
aaa
movsl
jne
cli
imul
fbstp
out
push
scas
lock
iret
insl
dec
lods
add
jl
nop
clc
cmc
sbb
out
stos
mov
add
xchg
addr16
aad
dec
push
lea
xor
inc
lods
stos
sbb
mov
pop
lds
lods
mov
cltd
cmp
adc
xchg
mov
lods
mov
aad
in
cmpsb
insb
repz
sarl
mov
in
sub
jnp
fscale
sbb
popa
xchg
pop
jnp
lds
xor
dec
add
aad
push
loope
cmpsl
in
outsb
jns
dec
mov
es
imul
fisubrl
pop
cmp
jb
leave
mov
sbb
xchg
fwait
gs
iret
lods
out
sti
pop
cs
xchg
xorl
dec
insb
das
cmp
push
or
jns
xchg
xor
hlt
mov
dec
or
pop
xlat
cltd
pop
push
sti
cmc
xor
shlb
or
mov
jmp
pop
mov
push
ss
add
inc
test
push
loope
adc
jne
push
cld
repz
mov
xchg
test
jle
out
xor
daa
or
fildl
cmc
mov
lret
ret
cmp
int3
and
loop
jl
mov
pushf
fimull
add
jns
mov
mull
bnd
jmp
cmpsl
and
out
jl
lods
imul
sub
daa
inc
aad
jg
xchg
push
imul
out
sub
scas
mov
push
stos
lret
cmp
scas
xchg
lods
orb
nop
mov
outsb
ret
dec
stc
in
sarl
dec
rcrb
rol
jb
sbb
mov
stos
fwait
pushf
push
call
adc
lahf
sahf
nop
push
sbb
sub
sbb
and
xchg
adc
imul
xor
imul
inc
ret
jnp
fdivrl
sbb
sti
int3
je
add
fldcw
js
dec
pop
clc
pop
add
inc
into
push
inc
mov
mov
insl
xchg
xchg
xchg
mov
aad
dec
adc
pop
jnp
and
popa
jmp
and
pop
pop
mov
sub
pop
shll
adc
or
shlb
lahf
xchg
jle
dec
gs
mull
jg
pop
dec
jns
xlat
mov
lret
adc
pop
pop
inc
sub
cmp
test
cmpsb
mov
rorl
shrl
js
adc
lcall
and
out
cmpl
mov
or
mov
out
add
stos
in
dec
inc
pop
test
popa
push
js
rcrb
and
enter
mov
xchg
je
mov
pop
iret
sbb
push
repz
out
iret
xchg
jnp
fistpl
push
popa
push
jg
mov
leave
je
addr16
jbe
lds
inc
outsl
push
adc
ret
push
xor
push
jns
dec
sub
jnp
mov
mov
xchg
jp
jmp
mov
and
mov
loope
jp
aad
leave
adc
xchg
inc
mov
cli
sbb
call
jbe
test
inc
and
arpl
cmp
outsb
add
enter
cmp
xchg
mov
sub
xchg
push
dec
jl
lret
cli
or
lea
mul
and
xor
jbe
mov
ds
pop
leave
jno
inc
fcomps
ljmp
pusha
movsb
cmpb
ds
push
mov
loope
popf
pop
sub
int
pop
cmp
jb
sbb
mov
pusha
mov
pop
cmp
lods
cwtl
inc
lea
sub
push
jecxz
sahf
mull
icebp
insl
pop
mov
or
lcall
pop
cmp
leave
push
pop
jmp
out
sub
adc
shll
jmp
ficoms
sbb
sbb
es
or
aad
out
out
xchg
jle
lret
inc
push
js
sub
sub
jmp
test
loopne
inc
rolb
xor
je
mov
xlat
xchg
repnz
fldenv
jns
movsb
fsubs
in
dec
daa
sbb
and
jle
mov
jnp
cmp
sbb
fsubs
dec
pushf
shrl
scas
xor
xchg
mov
clc
stos
aam
mov
mov
data16
outsl
and
xor
sti
arpl
sub
mov
jo
add
out
test
inc
dec
sarl
hlt
ds
adc
pop
cmp
scas
test
push
mov
fistps
pop
popa
notb
dec
scas
cltd
nop
jmp
out
sbb
jmp
sub
mov
dec
dec
fs
test
cld
mov
jns
mov
lods
lods
filds
jg
adc
sti
fmull
test
add
in
mov
sub
out
outsb
cs
dec
jbe
push
lret
imul
pushf
mov
jnp
in
pop
jecxz
stc
movsb
cmc
push
mov
shll
xlat
xchg
and
push
push
loopne
ret
ss
rorb
xlat
jle
jle
subb
imul
lods
je
jl
mov
fsts
jecxz
mov
ljmp
cltd
and
push
xor
xchg
ljmp
ljmp
cld
stos
movsb
xchg
sbbl
or
pop
pop
cld
adc
shl
or
sub
mov
fwait
sub
inc
orl
test
mov
adc
fidivrs
fdivl
xchg
in
mov
jno
mov
cmpsb
lcall
arpl
xchg
adc
inc
imul
cmp
jb
cmp
arpl
mov
mov
dec
lods
push
jp
mov
ljmp
add
ljmp
imul
xchg
or
inc
push
ss
ljmp
movsl
xchg
and
jg
jbe
mov
push
imull
stc
or
cmpsl
sub
push
clc
ja
iret
mov
in
dec
dec
stos
call
push
dec
inc
out
inc
lret
push
pop
inc
inc
add
adc
cmp
in
lcall
mov
std
push
mov
jmp
sbb
dec
dec
xchg
ret
rcl
lcall
and
adc
sbb
xor
add
or
add
ss
jp
dec
and
andl
lcall
xchg
loopne
leave
add
add
clc
js
insl
sub
fwait
test
xor
inc
mov
ljmp
push
clc
dec
xchg
rclb
pop
sub
jp
std
loopne
out
and
lahf
imul
adc
pop
out
sub
sbb
adc
inc
xchg
push
test
mov
or
sti
mov
pop
aad
adc
pop
mov
add
inc
sub
lock
pop
mov
sub
jg
inc
and
lret
test
or
ljmp
jle
daa
imul
push
sub
and
inc
pop
fimull
bound
fwait
imul
rcl
xchg
inc
cmp
movsb
fiaddl
sahf
mov
add
subb
and
push
pop
and
leave
sti
xchg
push
add
adc
loop
push
decl
mov
fldenv
lods
adc
dec
mov
jo
push
dec
lahf
xor
fcmovu
in
not
in
popf
xlat
fcom
cmp
cmp
mov
mov
mov
ja
mov
sbb
and
clc
test
test
push
jnp
xchg
jbe
repz
push
mov
divl
xchg
out
call
sbb
das
enter
mov
mov
clc
inc
inc
leave
in
outsl
mov
loopne
outsb
aam
mov
jae
inc
pop
mov
xor
jle
fistpl
negb
outsl
lcall
btl
mov
mov
xor
adc
sub
cld
andb
mov
adc
das
popa
insl
mov
fwait
adc
push
ja
int3
jbe
outsl
in
loop
nop
jge
jl
and
scas
pushf
or
inc
arpl
xorb
popfw
cmp
rclb
ret
fcoml
cwtl
bound
int
mov
pop
das
adc
mov
push
pusha
sub
and
xchg
cmc
insb
fsubrs
jnp
loopne
xchg
repnz
cld
mov
aad
dec
incb
push
stos
mov
hlt
dec
jno
cmp
stos
mov
jge
add
ret
in
mov
shlb
sub
testl
sub
and
int3
notb
pop
ror
into
cmp
fsubrs
std
pop
stc
mov
ficompl
repz
jp
roll
mov
das
mov
pusha
mov
mov
std
ja
xchg
fcmovnb
sbb
mov
add
repnz
sub
jg
loop
ja
inc
ja
lods
or
test
in
leave
pop
lcall
das
cmp
dec
xor
or
push
sbb
repz
mov
fcomps
jbe
lret
fwait
mov
scas
je
sbb
setno
loopne
movsb
call
add
pop
popf
adc
movsl
xor
popf
cmp
arpl
inc
pop
outsb
pusha
sub
add
mov
push
popf
lea
roll
sbb
jno
shll
pop
addl
adc
jecxz
stos
cmp
push
arpl
out
adc
cs
cmpsb
out
pop
push
xchg
scas
fsub
cli
and
icebp
scas
mov
push
mov
fdiv
in
sbb
stc
pop
inc
and
lret
je
or
ljmp
jecxz
mov
adc
cmc
ror
stos
je
aas
and
or
add
sbb
push
es
jmp
test
pop
or
shl
cld
inc
xchg
es
push
sbb
or
lcall
jp
iret
jnp
push
and
stc
adc
sub
pusha
cmpsb
clc
or
or
cmp
jmp
inc
add
test
fwait
jne
mov
sub
cmc
xlat
push
adc
icebp
pusha
lahf
adc
dec
cmc
vpmaxsw
mov
jns
paddusb
lea
adc
jmp
insl
scas
out
and
mov
mov
test
push
stc
je
lds
insl
jno
popf
xchg
out
pop
mov
xor
cmc
cmc
push
or
push
inc
fs
pusha
jecxz
ds
sub
dec
int
hlt
push
out
add
push
jl
inc
insb
loope
subb
push
jb
fisubl
inc
dec
xor
in
mov
pop
jg
dec
xchg
adc
cmc
or
or
js
lock
adc
xchg
dec
pop
mov
jbe
xchg
adc
push
stos
popa
mov
fldl2e
jnp
in
fsubs
jecxz
jge
cmp
mov
cli
pop
xor
adc
das
es
xor
popa
not
es
mov
sbb
test
push
cwtl
inc
sub
inc
insb
mov
jg
cltd
add
push
lret
cmpsb
cmp
cwtl
int3
mov
xor
sbb
mov
push
adc
insl
add
sub
pmaddwd
lea
push
test
xlat
mov
outsl
arpl
mov
sub
and
xlat
xor
jp
xchg
add
mov
mov
mov
or
push
mov
cmpsb
iret
xchg
push
inc
cmp
add
lcall
or
jno
fistpll
btr
rolb
jle
inc
adc
lret
xchg
test
or
dec
and
dec
int3
repz
pop
add
or
xor
jbe
dec
sub
jecxz
xchg
ret
push
fmull
mov
mov
iret
bound
sti
sub
dec
les
andl
jne
push
sbb
pop
cmp
push
lods
adc
cmp
sbb
push
ljmp
xchg
loop
xorb
ss
mov
jecxz
adc
outsb
cmp
in
aam
dec
inc
mov
add
movsl
rol
jae
jb
mov
push
sbb
jno
push
xor
std
xchg
jbe
in
rorb
xchg
in
dec
test
mov
sub
aam
mov
lods
adcb
and
jne
out
cwtl
inc
and
scas
xrelease
sub
test
stc
ret
daa
cmpsl
dec
mov
dec
insl
cmp
cmp
shll
mov
loope
add
jns
mov
dec
sub
push
xor
xchg
cmp
mov
mov
mov
xor
cmp
mov
mov
sub
popa
mov
add
loope
pusha
pop
or
ds
push
jmp
mov
push
adc
jmp
clc
inc
adc
pop
fbld
loop
xorb
push
mov
pop
outsl
lahf
fistl
test
pop
push
jnp
out
ret
dec
in
and
dec
adc
iret
aas
out
cld
dec
inc
loopne
fsubrs
sar
mov
mov
sub
js
cli
add
and
mov
repnz
push
insb
movsl
movsw
sub
mov
test
ror
inc
std
cltd
test
add
das
fsubr
adc
xchg
andb
mov
std
xchg
clc
and
jnp
lods
jnp
dec
jno
sub
mov
arpl
mov
xchg
mov
test
mov
shll
pop
inc
das
pop
push
pop
push
popa
test
pop
add
inc
xor
lea
test
mov
mov
addr16
loop
xchg
cwtl
daa
ljmp
insb
sub
ljmp
xor
xlat
mov
jg
negb
push
pop
cmc
and
shll
sbb
xor
sub
cmpsl
outsl
imul
int
addr16
mov
aaa
jmp
xor
aaa
xor
cld
pushl
mov
mov
lcall
popa
xor
jae
pop
loope
dec
mov
push
mov
aas
xchg
add
adc
fldl
inc
cmp
xchg
ds
sbb
cmpsl
xor
cmp
dec
mov
xchg
or
leave
xchg
insb
ret
sub
dec
in
test
cwtl
inc
adc
add
cs
pop
adc
pop
jge
loop
inc
iret
lret
jle
sarb
push
pop
inc
or
jae
ja
insb
repz
mov
imul
in
into
jns
sbb
pop
stos
sarb
add
rcl
movaps
cmp
outsl
fisubl
sti
clc
sti
inc
adc
xor
or
das
and
clc
xor
lods
mov
mov
or
imul
inc
jmp
hlt
ljmp
push
loopne
pop
adc
sti
sub
cmp
cmpb
jl
test
mov
scas
adc
xchg
mov
lods
scas
andl
out
cmp
sbb
inc
mov
mov
lods
inc
adcl
fwait
cmpsl
inc
adc
sbb
push
enter
imul
outsb
cli
loopne
popa
dec
test
or
sbb
daa
xchg
sub
bound
add
js
mov
lret
lock
cmp
inc
outsl
imul
jmp
xchg
popa
mov
push
mov
in
or
jge
or
mov
push
jecxz
adc
rolb
testb
jl
enter
sub
push
inc
inc
adc
sub
inc
shrl
jo
push
mov
and
test
lock
lahf
arpl
fs
mov
sbb
sub
imull
dec
out
repz
or
mov
loop
and
jb
sbb
jb
adc
dec
mov
jno
enter
mov
adc
scas
push
sbb
outsl
fcmovne
andl
pop
mov
cmc
dec
jg
add
loop
iret
or
std
scas
mov
jnp
cld
cmpsl
inc
jl
add
outsb
enter
lea
pop
fidivl
andb
lods
inc
int
sub
rolb
arpl
sub
lret
push
lock
lds
fmuls
es
sub
sbb
fdivl
rcrl
cmp
jae
fmuls
fdivrl
les
sub
sub
or
mov
lock
ficompl
pop
mov
lahf
xchg
addr16
xor
cltd
jg
dec
jno
or
fldenv
add
cmp
sub
push
mov
addr16
test
dec
outsl
jg
in
outsb
icebp
cmc
pop
setp
xor
xchg
push
pusha
mov
jmp
cmp
incb
cmp
xlat
filds
pop
jmp
sbb
or
les
movsl
cmp
xchg
mov
test
or
push
push
mul
aas
push
loopne
dec
fstl
dec
pop
popa
pop
enter
in
pop
push
mov
add
stos
pop
sbb
les
jnp
xchg
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
fistpll
lcall
fs
inc
and
cmp
jbe
mov
aaa
inc
lea
jno
outsb
je
rol
loop
push
and
jmp
out
push
xor
mov
rcr
mov
nop
sub
sbb
lock
sbb
sub
and
or
jns
cmp
cmp
pop
popf
lcall
mov
hlt
or
fistps
imul
repz
lea
daa
jbe
loop
in
test
in
ffree
mov
subb
cmp
adc
push
xchg
outsb
hlt
xor
nop
xchg
push
mov
mov
adc
sub
insl
or
dec
adc
lcall
mov
and
xchg
sub
lahf
sbb
jl
sahf
call
add
aaa
jg
and
push
test
cmp
lods
orb
xor
inc
or
mov
cmp
jns
outsb
stc
cmp
loop
xchg
jle
jmp
lahf
mov
scas
ret
mov
mov
popa
add
imul
jmp
fmul
and
pop
shll
pop
stc
leave
jl
sarl
adc
loope
sbb
cmp
lock
push
mov
cs
mov
decb
mov
pop
add
adc
mov
mov
popa
or
xchg
ret
and
loop
into
dec
testb
cld
dec
inc
cmp
xchg
movsb
lret
inc
inc
ljmp
ljmp
add
or
call
inc
and
xchg
mov
inc
jecxz
out
xor
cmp
into
inc
push
inc
lods
les
inc
and
adc
xor
pop
icebp
out
pop
xor
adc
ret
push
cld
ja
enter
cmp
rol
int3
loopne
mov
mov
jmp
jb
mov
filds
push
pop
ljmp
xor
sub
adc
fmull
jl
in
push
cld
stos
iret
outsb
js
dec
orb
jecxz
xor
in
je
popf
mov
ss
mov
icebp
adc
lahf
mov
shr
inc
cmpb
mov
xor
dec
sahf
sarb
cmpsl
inc
shr
das
mov
mov
mov
push
sbbl
test
adc
mov
xor
lods
imul
repz
es
call
fsub
or
mov
insb
das
jmp
ds
pop
insl
mov
out
dec
cwtl
add
loopne
adc
movsl
jge
jns
call
cld
cmpsb
cmp
adc
jne
loope
lahf
shll
mov
ja
repnz
adc
xor
test
jo
es
mov
jns
mov
xchg
and
xor
aas
mov
data16
lret
adc
push
xchg
aam
add
sbb
repnz
enter
dec
mov
ret
mov
outsb
fldl
frstor
fsub
sub
or
adc
imul
fldt
out
movsb
adc
flds
std
cld
sbb
shl
or
pop
mov
jge
or
jno
fsubrl
icebp
push
pop
xor
xchg
push
xchg
inc
jg,pn
insl
jg
cmpb
pop
jb
movb
push
out
inc
sbb
out
and
push
jmp
mov
inc
daa
notb
in
imul
mov
add
sti
inc
xor
push
pop
adc
add
sti
rcll
mov
lods
insl
pop
hlt
out
push
push
jbe
mov
push
pop
pop
test
pop
imul
xor
xor
mov
sub
sub
dec
xor
mov
and
pushf
test
inc
andl
inc
xor
gs
dec
pushf
jnp
aam
jns
imul
add
ret
cmp
gs
adc
lcall
push
pop
nop
pop
or
mov
mov
iret
ds
imul
call
mov
jns
jecxz
rcrl
push
bound
mov
fcmovu
in
xor
xor
mov
aam
aad
enter
sarl
cs
filds
mov
push
fistl
xchg
mov
icebp
xor
fcoms
pop
and
add
push
push
rorb
orl
inc
mov
cli
sbbb
add
mov
xchg
int3
sbb
mov
adc
sbb
mov
inc
cld
pop
iret
mov
loope
cmc
push
mulb
ret
xchg
cmp
sbb
xchg
mov
push
rcrb
adc
sbb
loopne
or
fcmove
cmc
inc
mov
mov
lea
stos
out
xor
push
sbb
mov
dec
fbstp
test
faddp
dec
lock
fldt
sub
push
xor
push
lret
add
ss
sbb
cli
mov
shl
push
sub
push
subl
mov
mov
jbe
fs
mov
mov
icebp
mov
jns
and
sahf
inc
xchg
or
xchg
ja
mov
mov
cmp
and
ret
lret
pop
mov
decb
sbb
inc
insb
xchg
popa
outsb
shrb
sbb
jmp
cmp
dec
in
pusha
pop
pop
xor
shl
cmp
mov
lock
mov
pop
mov
and
stos
add
sub
leave
rol
sbb
popf
imul
rcrl
inc
nop
mov
notl
dec
and
or
lret
or
mov
and
shll
xlat
push
cmp
adc
fdivl
out
clc
popa
mov
pop
loopne
fld
and
adc
xor
std
mov
sub
lods
and
sub
cmpsb
and
mov
or
popf
fwait
inc
ss
loopne
mov
adc
cmc
jl
aas
fistpl
stos
fcmovnb
js
xchg
mov
push
xlat
dec
daa
cmpsb
iret
jnp
iret
imul
xchg
aaa
mov
mov
mov
jg
xor
add
ja
repnz
ja
lcall
sbb
mov
add
xor
js
ss
imul
mov
add
in
popf
imul
es
dec
cs
ljmp
out
sbb
in
std
pop
jo
mov
imull
imul
push
xchg
fsubl
cltd
out
xchg
mov
imul
test
mov
pop
mov
jo
jp
pop
loop
sbbb
repz
mov
add
inc
mov
lds
not
les
xor
pop
in
stos
dec
mov
bound
add
xor
xchg
dec
dec
mov
mov
es
in
rorl
xchg
push
cli
push
sub
pop
mov
ljmp
aas
es
es
adc
mov
cltd
mov
nop
and
lods
inc
xchg
imul
add
push
mov
inc
adc
sub
cwtl
mov
jae
mov
pop
out
sub
test
xchg
adc
in
mov
push
stos
aaa
inc
push
mov
add
lea
mov
and
pop
and
push
pop
sub
lods
enter
out
add
inc
mov
ljmp
movq
mov
mov
int3
and
cli
lock
stos
and
enter
out
sbb
pop
mov
pusha
cmp
push
xor
add
clc
xor
sbb
pop
test
pop
sub
and
sbb
loopne
sub
adc
addr16
aam
and
cmp
cli
outsb
dec
xor
stos
or
into
outsl
dec
add
or
jns
xchg
mov
cmp
inc
fisubs
fcompl
add
xchg
lock
icebp
loopne
or
add
rorb
jno
pop
andl
mov
dec
fldenv
dec
sub
xlat
pop
fcompl
dec
lea
inc
mov
add
insl
shll
mov
cs
add
sbb
leave
lds
cmpsb
jecxz
push
push
mov
lahf
or
sbb
cmp
pop
push
jecxz
js
xchg
xchg
movsl
ja
lods
mov
push
cmpsb
pop
repz
mov
ret
or
jae
jle
cld
neg
pushf
setae
and
mov
jbe
fs
xchg
xor
and
push
ret
cmp
test
xor
sbbb
test
or
xchg
aas
aam
sbb
nop
outsl
jbe
xor
jp
imul
mov
add
add
popf
push
icebp
push
lds
inc
je
fs
xor
jno
andl
fucomip
imul
cmp
inc
and
pop
sub
xchg
push
jl
jb
add
lret
adc
shr
out
pop
popa
xchg
xchg
cmp
cmc
and
jle
rclb
mov
mov
mov
pop
bound
push
sbb
adc
mov
call
imul
hlt
inc
jmp
or
jns
add
daa
and
in
jmp
into
aas
xchg
test
sbb
jne
cmp
enter
rcrb
mov
repnz
sti
push
mov
sbb
shlb
or
loopne
mov
push
dec
sbb
adc
add
push
dec
lret
xchg
cwtl
jp
ficompl
mov
test
pop
sub
test
adc
push
fcoms
xchg
fwait
dec
js
test
pop
cwtl
sub
dec
jne
jge
xlat
lret
rcr
fsubs
imul
in
loopne
mov
inc
xor
mov
scas
adc
orb
mov
popf
pop
xor
arpl
stos
shll
cs
aad
rcrb
les
and
dec
enter
dec
sub
jne
enter
and
in
fcomps
pop
cwtl
repz
pop
and
lds
fisubrs
int3
out
mov
mov
push
fwait
cmpsl
push
idiv
xor
daa
cs
or
dec
mov
nop
add
jp
cmp
aas
cwtl
adc
add
and
sbb
sub
dec
adc
jl
in
loopne
stos
jb
shl
cld
xor
sub
testb
mov
cmp
sub
sbb
mov
adc
scas
stc
push
insb
jl
cmp
fldcw
jp
movsb
cmp
xchg
mov
xchg
xor
lret
clc
jnp
mov
arpl
inc
lret
xchg
jge
mov
iret
div
sbb
hlt
mov
xchg
xchg
mov
leave
mov
xor
dec
sarb
cmp
lock
lds
shlb
cmp
in
test
or
inc
and
iret
outsb
xchg
adc
fwait
jmp
add
cld
cmc
popa
cltd
xchg
out
xchg
lahf
das
icebp
lcall
dec
dec
iret
clc
mov
movl
cmpsl
jne
outsl
pop
adc
push
xchg
out
mov
inc
jno
dec
sarb
sbb
nop
push
push
int
jp
cmp
scas
xchg
in
clc
inc
pop
imul
xchg
push
ja
mov
adc
cmp
std
cmpsl
mov
jno
mov
popf
sahf
cmp
int3
push
jl
jp
xor
aas
cmp
adc
arpl
mov
mov
sarl
ja
sbbb
mov
and
push
sub
push
test
sub
neg
jbe
push
mov
push
dec
call
fadd
inc
stos
sub
pcmpeqw
dec
mov
xchg
pop
mov
loop
aad
pushf
adc
dec
pop
mov
xor
mov
cld
sub
sub
out
sahf
in
lret
or
xor
or
sbb
lret
lods
inc
push
loopne
out
mov
mov
subl
cmc
sahf
fldt
xchg
sub
push
into
adc
pop
adc
xchg
inc
cmpsl
fs
cs
pushf
in
push
mov
in
scas
ret
and
stos
sti
adc
sbb
add
jae
push
inc
das
dec
add
ror
mov
sbb
jnp
jne
and
fcomip
fcompl
mov
ss
loope
xchg
push
lock
push
xor
pmullw
in
pusha
push
movsl
inc
cmpsb
cmpsb
add
sbb
push
outsl
sysexit
adc
enter
test
test
xchg
ret
dec
mov
or
shr
fcompl
fidivs
and
mov
imulb
std
iret
lcall
cmp
ds
mov
fdivp
icebp
add
push
push
cmpsl
pusha
repnz
mov
cmp
andb
test
jmp
inc
out
in
add
ret
push
cmp
pop
ja
pushl
dec
adc
out
addr16
push
fcmovb
inc
push
loopne
and
inc
imul
in
jge
jp
and
jns
test
lret
pop
cmp
add
lret
xor
pop
in
or
fdivl
fs
mov
push
xchg
cmpsb
rcr
mov
dec
int3
jg
outsl
mov
cmpb
gs
sbb
lahf
pop
inc
xchg
jecxz
stc
test
pop
std
adc
stc
arpl
cmp
push
js
xor
dec
pop
xor
xchg
addb
out
sbb
outsl
ret
jecxz
inc
in
mov
cmp
xchg
shlb
adc
iret
push
hlt
or
jbe
dec
loopne
mov
sub
adc
xor
shll
mov
cmp
mov
or
or
roll
add
mov
jg
les
imul
leave
ret
not
or
xor
insb
push
popa
push
mov
in
add
xor
mov
sub
imul
pop
sti
adc
ja
stc
ss
insl
shll
notl
add
push
shlb
push
mov
es
aaa
sub
les
insl
or
test
shl
jbe
out
loope
test
sub
xor
mov
mov
xor
adc
mov
sarl
and
dec
jp
das
imul
daa
inc
mov
lea
cmp
sub
cmp
push
cltd
xchg
push
lock
or
lcall
pushf
sbb
int
sarb
in
jle
imulb
or
and
pop
enter
lods
cltd
push
in
sub
dec
xchg
repz
pusha
xor
pop
aad
stc
imul
test
jbe
addr16
xchg
call
push
adc
push
mov
sub
in
fidivrs
mov
movsb
mov
pop
mov
pop
and
and
dec
int
and
pop
js
mov
cld
in
xchg
aas
pop
cwtl
std
jl
mov
cwtl
sub
movsb
cwtl
ja
add
pop
mul
scas
adc
and
sti
sbb
mov
sub
jg
push
sbb
mov
fwait
addb
mov
loop
js
or
rcll
inc
pop
jge
sub
std
das
insl
gs
pop
stos
push
ret
push
lahf
dec
sub
sbb
lds
xchg
xorl
lea
ret
xchg
cmpsl
mov
mov
cmp
dec
mov
pop
adc
popa
lds
dec
dec
fiaddl
lods
adcb
and
xchg
lods
dec
mov
mov
mov
dec
or
stos
cvtpi2ps
fcmovne
pop
test
xor
popa
xor
fcomip
xchg
adc
lds
int3
pop
inc
aas
jmp
cmpsl
es
ss
push
in
std
xchg
fimuls
xchg
sub
push
scas
pop
in
cmp
shlb
shl
std
push
and
xchg
out
xchg
int
jle
out
jg
jns
jmp
xor
in
sti
add
loope
imul
xchg
push
movsl
mov
fwait
lods
or
mov
mov
pop
adcl
push
int
test
mov
inc
orb
sub
cmc
xchg
lret
inc
addr16
mov
mov
mov
repnz
xor
add
sub
inc
loopne
pushf
inc
push
pop
ficomps
dec
aad
loopne
scas
ss
jecxz
les
or
cmp
or
jl
jae
add
adc
cwtl
adc
adc
dec
mov
cmpb
popa
jecxz
jae
mov
dec
int
pop
jmp
scas
pop
clc
sub
mov
cld
ja
call
in
pop
jb
insb
or
cs
inc
out
repnz
pop
or
test
xchg
xor
outsb
adc
jle
lock
daa
sahf
cmp
and
and
clc
rcrl
into
das
pop
or
xchg
pop
leave
cmp
push
pop
mov
adc
sub
jae
push
sahf
add
insb
jl
jbe
imul
xchg
int
icebp
mov
stc
xor
lods
sub
jno
lock
lds
addr16
pop
rol
pop
dec
adcl
inc
or
insl
or
cmc
je
cld
daa
daa
call
mov
adc
js
xlat
repnz
inc
mov
push
in
mov
movsb
hlt
call
mov
cld
mov
jl
pop
mov
push
mov
adc
outsb
sub
pop
jae
mov
dec
add
add
xor
xchg
aaa
ret
jno
dec
cmp
in
stos
and
cmpb
repz
dec
mov
xor
pop
xchg
sarl
jnp
mov
jno
cmp
dec
pop
push
aam
jp
insb
test
and
mov
xchg
imul
scas
adc
mov
out
mov
popf
jecxz
push
cmp
insl
jge
fcomps
push
xchg
add
aas
push
lods
pop
mov
mov
lcall
jecxz
cmp
cwtl
jecxz
mov
js
xor
into
mov
adc
inc
shr
in
arpl
cld
jbe
inc
mov
push
jne
pop
or
sub
pop
inc
xor
push
popf
adc
mov
imul
imul
int
inc
lods
test
or
fwait
nop
hlt
pop
inc
xchg
stos
inc
xor
pop
mov
sbb
arpl
xor
fcmovbe
xlat
in
loop
lods
sbb
and
inc
fstl
cld
xchg
sub
fstps
das
sub
out
jl
bnd
call
cmpsb
idiv
mov
shrl
or
test
mov
sbb
notb
and
push
sub
jg
mov
outsb
push
ficoml
enter
dec
out
pop
jle
lds
jb
call
inc
cmpsb
cmpsl
sub
fisubrs
sub
shlb
cli
push
popl
sahf
stos
add
imul
dec
pop
push
in
enter
daa
xchg
mov
int3
jge
jmp
jecxz
lock
stc
jl
and
mov
in
jp
ljmp
imul
push
ret
aam
inc
std
xchg
enter
xchg
in
and
test
lcall
ljmp
movsl
data16
sbb
cmp
ljmp
icebp
scas
aad
hlt
int
es
inc
push
xchg
cmpsb
or
data16
push
cmp
push
insb
leave
and
push
xchg
mov
mov
out
aaa
sub
lret
imul
push
mov
test
add
jo
inc
mov
mov
shll
leave
jmp
std
mov
jecxz
pusha
dec
sbb
or
iret
push
jecxz
pop
cltd
mov
push
std
sub
adc
dec
sbb
hlt
inc
cmp
inc
fcmovne
xchg
cmp
mov
adc
push
fadd
xchg
shl
iret
sub
data16
andl
aam
andb
cwtl
dec
mov
rcr
sub
out
pop
dec
jbe
scas
sbb
icebp
inc
sub
jne
mov
js
out
sbb
out
pop
mov
sbb
mov
inc
xchg
ja
les
xlat
rclb
jmp
into
jl
adc
repz
inc
dec
fmull
xor
es
mov
inc
jae
dec
aaa
fldt
sub
das
ljmp
push
mov
jnp
push
outsl
or
xchg
xchg
fwait
push
gs
orb
sbb
xchg
fnstenv
jl
cmp
cld
stos
fs
sti
dec
and
jecxz
xchg
adc
in
sub
xchg
xor
ja
or
fcomps
sti
sub
jge
out
testb
imul
adc
xchg
and
add
stc
jb
js
es
and
sub
mov
lds
cli
clc
lret
mov
fildll
outsb
xor
mov
and
or
and
ret
je
stos
imul
int3
pusha
add
cli
mov
fs
mov
sub
out
push
xor
push
stc
lret
inc
mov
push
xchg
inc
int3
test
mov
fimuls
add
push
in
mov
mov
mov
jl
xchg
rcrl
outsl
faddp
stc
xor
jb
add
sbb
loope
ljmp
push
fbstp
ret
mov
loopne
inc
mov
inc
sbb
cmpsl
ja
jo
xchg
cmp
movl
xor
ja
lret
jle
push
and
nop
daa
call
push
adc
loope
fdivl
or
and
jns
sbb
pop
adc
cmp
popf
ret
sbb
push
scas
repz
cmp
pushf
addr16
dec
xor
mov
into
and
clc
pop
fcmovnb
iret
clc
ret
cmc
daa
pop
push
pop
pop
or
subb
mov
bound
sbb
mov
movsl
pop
dec
inc
stos
adc
xchg
movsl
sub
and
repz
xchg
pusha
mov
in
or
mulb
movsb
mov
xchg
xlat
pop
jg
int
test
cli
xchg
test
scas
stc
push
xchg
dec
xchg
adc
out
jmp
cld
jge
aam
lahf
xchg
and
xchg
fstpt
sub
pushf
mov
aaa
cld
mov
cmpsl
pop
xor
lcall
cmpl
jo
inc
lcall
mov
xchg
lahf
fisubs
out
and
mov
sbb
fdivr
out
jecxz
adc
mov
movsl
xchg
sbb
call
lds
inc
aam
in
add
movsb
xchg
pop
sub
add
test
sub
and
std
pop
push
int
mov
pop
and
repnz
dec
xchg
sub
loop
shrb
mov
clc
hlt
mov
testl
mov
mov
movsl
push
add
mov
jae
inc
cltd
popa
sbb
push
pop
enter
push
mov
dec
sub
test
into
add
mov
jns
cltd
pop
imul
mov
mov
scas
ljmp
stos
leave
cmpsl
popa
and
in
xor
out
push
outsb
clc
cltd
xor
scas
gs
outsl
outsl
lods
cmp
or
cmp
mov
and
inc
inc
dec
jmp
jmp
addr16
shll
mov
and
gs
inc
movsl
icebp
pop
cld
in
mov
sub
push
sbb
test
and
xchg
in
mov
ret
dec
repnz
ljmp
mov
imul
xor
mov
push
dec
adc
cwtl
jae
pop
in
mov
lds
adc
lahf
dec
xchg
xor
je
jle
jnp
loopne
mov
push
das
in
sub
mov
clc
push
rolb
pop
lods
sbb
scas
sbb
cltd
cmpsb
orl
stos
shrb
push
mov
shl
adc
mov
cmp
sub
les
stc
jmp
ljmp
mov
out
jns
dec
mov
pop
cmp
lock
fwait
in
popf
lret
mov
xorl
mov
mov
adc
dec
and
or
mov
jo
shrl
push
fisubl
push
add
dec
jne
arpl
sbb
xchg
push
mov
add
mov
scas
arpl
sub
pop
les
adc
nop
xchg
and
cltd
sbb
sar
in
or
shlb
push
jnp
mov
repnz
mov
cs
loopne
and
xchg
push
testb
out
outsl
dec
push
push
inc
stos
and
push
adcb
in
pop
inc
xchg
pusha
mov
daa
jne
sub
push
in
aas
pop
loope
add
jmp
jne
jmp
or
gs
test
xor
add
push
in
xorl
jbe
push
popf
leave
leave
adc
inc
push
adc
fwait
dec
push
cmp
loop
int3
mov
sbb
outsb
jle
test
decb
pusha
fstpt
mov
jo
push
es
and
push
fistl
or
jo
and
rcrl
inc
ret
cld
test
push
push
push
rol
stos
stos
or
testl
in
mov
mov
sbb
insl
cmp
push
mov
push
ret
unpckhps
ror
adc
cmpb
mov
cld
sbb
lea
popa
stos
push
pusha
jno
movsl
sahf
or
inc
xor
push
push
gs
mov
aaa
cltd
data16
test
pop
dec
mov
inc
xchg
adc
mov
aam
lahf
cmp
scas
fmuls
jb
adc
mov
int3
jle
mov
in
mov
push
std
neg
popa
push
out
pop
mov
push
cld
or
fmuls
loop
mov
add
mov
das
inc
fldcw
sub
xchg
cmc
sub
ret
aas
in
arpl
subl
je
sbbl
sub
sbb
in
xchg
movsb
add
sub
into
sar
enter
pop
leave
mov
xchg
xchg
and
push
jne
dec
adcb
fisubl
cmpsl
insl
push
push
add
fstpl
push
adc
mov
shlb
cmpsb
sbb
mov
nop
loop
lcall
cmc
mov
xchg
icebp
stos
pop
in
ds
out
popa
sbb
lds
lahf
xor
in
push
mov
outsb
out
aas
sub
int3
push
or
jne
mov
jg
aam
push
sub
mov
inc
stc
daa
pop
lret
cs
inc
dec
shr
pop
lds
lds
cmp
test
and
aad
out
xor
add
sbb
jmp
rcrl
out
loope
xor
or
icebp
cmp
dec
ds
lea
mov
xlat
ret
sti
dec
xor
and
testl
shl
cmp
scas
iret
pop
dec
fistl
lds
push
cmp
lahf
and
xor
adc
sub
inc
ja
mov
sbb
jo
das
and
push
cwtl
sub
shrl
and
cmc
cli
sbb
imul
fistps
add
sti
imul
adc
cli
sub
mov
jbe
adc
nop
add
xor
jl
cmp
or
mov
pushf
xchg
ja
push
mov
push
divl
sub
and
push
mov
and
add
sti
mov
mov
pop
dec
shl
sbb
cs
jne
jne
pop
xchg
xor
inc
icebp
xchg
and
outsl
or
mov
mov
adc
mov
sbb
data16
or
xorl
sbb
add
mov
xor
cld
popl
lods
repnz
and
lock
inc
xchg
xorl
int3
fsub
shlb
in
test
sbbl
mov
fistps
xor
xchg
dec
nop
sahf
lock
scas
test
cld
add
sub
cmp
jb
dec
sbb
pop
mov
mov
and
dec
xor
push
sti
outsb
sub
xchg
and
cmp
mov
xor
xchg
lret
adc
icebp
jg
dec
aad
inc
leave
popf
push
sbb
out
xor
mov
dec
jle,pt
shl
mov
out
aas
pop
ret
sarb
jecxz
sbb
inc
jnp
xchg
lcall
aas
xchg
lret
inc
adc
bound
hlt
arpl
adc
pusha
or
js
stos
leave
cmpsb
lret
cmp
sub
push
push
or
push
and
jle
rorl
push
pop
xor
repz
xchg
and
testb
and
jecxz
fucomp
ljmp
lret
inc
mov
lret
add
inc
add
dec
sub
ja
adc
daa
in
outsb
lds
mov
and
jg
jg
pop
jge
repz
adc
arpl
mov
sub
ret
jne
lahf
enter
adc
push
push
jl
pop
pop
xchg
cmp
in
nop
mov
inc
test
xchg
sbb
test
pop
lds
leave
bound
movsb
mov
in
mov
push
mov
fdiv
inc
cwtl
pop
inc
and
mov
xchg
rcrl
nop
or
inc
cltd
cmpsb
lret
enterw
shll
pop
int3
testl
int
push
imul
iret
std
xor
jno
add
jno
rsqrtps
fs
fcompl
test
jg
or
in
xchg
pushf
dec
in
and
cmc
in
int
mov
bound
sbb
xor
dec
fld
sbb
imul
inc
add
push
daa
mov
fwait
cwtl
adc
int3
dec
rolb
shl
aaa
cwtl
dec
nop
inc
test
mov
hlt
add
sub
pop
ja
or
out
rolb
mov
add
dec
sub
sub
cld
sub
dec
push
push
push
mov
or
insl
or
cmp
aam
fsts
pop
xchg
pop
mov
out
in
xchg
jle
mov
imul
std
ss
loope
out
stc
dec
sbb
lds
cmp
sbb
outsl
mov
movsl
cmpl
push
push
inc
jg
add
xlat
test
add
fisttpll
cmp
or
mov
xchg
add
jmp
sbb
lds
push
scas
test
lods
loope
movsb
xorl
loop
mov
mov
out
addr16
add
cmpsl
scas
and
and
mov
lcall
fs
jp
add
xchg
mov
dec
inc
out
addb
mov
scas
mov
cmp
push
jecxz
push
stc
ret
in
out
sbb
lock
jecxz
sub
je
xchg
ret
dec
cmpsl
rcrb
push
je
stos
xor
push
mov
inc
in
shl
aaa
fistpl
scas
sti
and
int
pop
add
mov
lret
push
pop
data16
add
movsb
scas
mov
orl
in
mov
sbb
pusha
outsl
aad
mov
mov
mov
leave
adc
sub
imul
push
jle
cmp
xchg
adc
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
movl
sbb
movl
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
call
jmp
mov
movl
sub
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
jmp
mov
xlat
and
mov
js
test
orl
stos
ret
xor
ret
testl
popf
jns
pop
mov
mov
clc
call
sbb
jae
loope
sbb
enter
mov
ljmp
mov
call
or
push
or
sbb
mov
sbb
mov
adc
ljmp
iret
ret
loop
inc
das
pop
hlt
xchg
jmp
pop
mov
adc
lcall
mov
test
fcoml
mov
int
rclb
and
addb
xchg
popa
repnz
in
inc
scas
addr16
cmc
add
mov
in
xor
adc
sub
push
es
push
js
jle
ss
adc
adc
inc
test
push
ja
jl
push
cli
inc
stos
xchg
in
pop
dec
inc
rcll
enter
subb
lret
pop
sub
inc
jb
jge
call
int
pop
mov
push
leave
jl
sub
loop
cmpsl
or
inc
pop
js
push
cmp
inc
jp
inc
adc
int
call
sbb
cmp
outsl
test
loopne
sbb
icebp
jo
ja
es
mov
popf
mov
inc
rcl
inc
pop
les
rcrb
popa
ss
inc
outsb
das
movb
divb
xor
add
fwait
xor
mov
call
and
sahf
jle
pushf
add
mov
dec
insb
jl
sub
xor
sahf
movsb
mov
mov
add
add
jae
in
xor
dec
ljmp
pop
add
or
xorb
jmp
xchg
push
mov
jb
ds
fadds
addr16
movsb
add
dec
jne
cmc
push
les
icebp
roll
sbb
cmp
loop
inc
inc
popf
rorb
xor
push
xlat
xor
mov
gs
rcr
dec
pop
pop
xor
fcmovnb
and
xchg
fdivrl
test
or
mov
setl
ja
lcall
stos
adc
push
mov
mov
inc
ljmp
pop
rcll
stc
jmp
sbb
and
ret
xchg
sub
pushf
sub
imulb
lcall
push
fsts
pop
int
cmpsb
rorb
mov
ljmp
pop
cli
fnstenv
mov
mov
or
outsl
or
hlt
jge
push
ret
push
xchg
pop
nop
cwtl
xor
adc
aas
sub
push
or
mov
out
aad
mov
stos
insl
lcall
xchg
mov
lock
dec
push
pop
jge
addr16
mov
ds
mov
hlt
fucomi
cmp
js
add
pop
xor
sub
popf
clc
jmp
loopne
push
scas
add
mov
cmp
mov
mov
cwtl
and
insb
ret
push
fstl
aad
aaa
push
mov
ret
add
mov
mov
mov
jmp
push
jg
pop
shlb
adcb
mov
add
enter
mov
mov
repnz
push
mov
xchg
mov
fidivrl
outsl
ds
xor
clc
push
mov
mov
cmpsb
push
xor
out
cmpsl
test
into
and
movsl
jae
pop
push
movsl
or
mov
push
fucomi
sbb
fisttps
fwait
test
jge
push
mov
and
lock
jnp
cltd
mov
shlb
push
xchg
leave
je
sbb
mov
mov
addr16
pop
repz
mov
dec
cmpsl
dec
ds
push
push
pop
in
mov
rorl
and
loope
push
cmp
rorb
cltd
iret
cs
and
bound
jle
in
rcr
lcall
jae
inc
cwtl
push
dec
xchg
add
jo
mov
push
in
sbb
and
loop
add
out
mov
pop
es
stos
cmp
shll
loop
sub
xchg
mov
call
leave
mov
cli
or
aaa
adc
pop
pop
jno
and
ljmp
jno
jnp
adc
sub
xchg
dec
add
cmc
mov
xchg
hlt
dec
xchg
mov
test
rclb
sar
movsb
push
dec
iret
rolb
sub
leave
sbb
mov
scas
adc
push
insl
sub
sbb
pop
dec
jb
push
xlat
in
or
mov
add
mov
outsb
pop
sbb
xor
jb
dec
aas
roll
sbb
mov
adc
sub
cs
jbe
adc
hlt
pop
jl
adc
xchg
pop
jns
cld
mov
fs
lret
push
leave
shrl
inc
lret
cmc
sub
or
push
into
fs
add
xchg
sub
mov
in
int
jno
dec
adc
shrl
ds
pop
daa
sub
push
icebp
outsb
mov
push
inc
rsqrtps
jp
push
pop
enter
and
sbb
pop
dec
aad
inc
adc
bound
fdivl
sbb
rorb
add
or
test
out
mull
iret
mov
mov
ret
inc
jo
les
adc
inc
or
repz
mov
int3
imul
add
clc
lret
mov
push
pop
and
test
mull
mov
ja
ret
jmp
fisttpll
call
pushf
or
adc
stos
pop
cmc
mov
addr16
inc
test
dec
mov
outsl
mov
sbb
pushf
ret
test
dec
inc
and
inc
jns
mov
mov
and
push
movsb
test
das
and
mov
pop
and
xchg
adc
xchg
xchg
loope
aad
int
add
xchg
dec
cmpsb
push
jno
xchg
outsb
xor
mov
sub
xor
lahf
iret
jp
jo
orb
divl
jg
adcl
out
xchg
jle
ds
bound
ret
icebp
ret
sub
and
or
repz
je
cmp
mov
loope
loop
inc
and
ss
xlat
addr16
push
out
cmpsb
lock
push
adcb
cwtl
xor
mov
mov
fidivrl
mov
idivb
inc
test
repnz
aad
dec
out
cmp
push
mov
push
test
push
pop
pop
sbb
aaa
rcl
out
xlat
call
push
and
lcall
stc
hlt
mov
loope
cmp
xor
jnp
mov
jno
xor
stos
mov
pop
jmp
icebp
and
fdivs
daa
inc
cltd
mov
dec
out
inc
adc
arpl
fs
mov
push
arpl
ja
jo
pop
loopne
mov
adc
push
shlb
inc
push
jle
js
jmp
les
xchg
cmpsl
cmp
fwait
jnp
iret
fadds
mov
ljmp
cmp
or
scas
inc
repz
cwtl
mov
mov
add
xchg
push
ja
push
pop
and
dec
xchg
xchg
in
xchg
jge
xchg
cmpsl
or
ljmp
mov
xchg
mov
cmc
lahf
push
loopne
inc
orl
mov
call
aas
cmp
push
pop
xchg
mov
addr16
fcmovb
xorps
pop
mov
popa
sub
mov
loope
xchg
xchg
adc
imul
sar
in
inc
sbb
cmpsl
jg
jg
hlt
sub
adc
pusha
sbb
insl
add
enter
inc
push
pop
inc
pop
ret
jmp
rcrl
pop
cmp
cmp
mov
faddl
push
push
lret
mov
xchg
mov
idivb
mov
aaa
mov
daa
adc
add
cmc
mov
jp
mov
xchg
or
jne
push
and
mov
cmp
mov
popa
xchg
xchg
fimull
mov
jne,pn
and
in
dec
jnp
inc
sub
add
or
rcrb
push
mov
lret
mov
pop
sub
dec
inc
adc
xchg
shld
test
pop
inc
roll
and
jb
cmp
test
push
cld
mov
sbb
mov
mov
jl
fistpll
mov
mov
out
sub
add
scas
shl
insb
push
dec
arpl
mov
xorb
test
idivb
jecxz
shrl
sub
or
gs
and
mov
jle
dec
cltd
xor
imul
leave
add
lcall
addr16
lock
sbb
outsl
adc
inc
popa
xor
pop
add
shrl
mov
stos
lret
sub
clc
sbb
das
mov
cmpsb
mov
xor
leave
and
test
xchg
jo
outsb
fisttpll
pop
cmc
bound
mov
sub
mov
mov
inc
cmp
cmp
stc
add
in
aam
jle
sbbb
jecxz
and
cwtl
push
sbb
push
and
add
or
inc
inc
les
adc
es
cmp
xchg
shrb
insb
jle
cld
mov
sbb
cmp
jmp
loope
ret
outsl
repnz
sub
inc
out
jg
stc
lds
cmc
inc
adc
or
leave
and
push
pop
int
roll
sub
xchg
and
into
in
inc
pop
cmp
pop
fcmove
or
mov
pop
lcall
and
xor
jnp
imul
sbb
or
stos
dec
push
cltd
jl
pop
in
enter
loop
jmp
popa
ljmp
enter
test
mov
jb
dec
mov
fstpt
mov
call
repz
rolb
cld
ds
pop
push
jp
je
cmp
pop
add
push
stos
xchg
push
xchg
xor
adc
dec
mov
shr
mov
pop
lahf
js
cmpsb
jg
stos
scas
adc
imul
pop
insl
push
jecxz
loopne
xor
dec
or
xor
lahf
inc
stos
jne
add
inc
inc
imul
cmp
test
adc
cmp
push
inc
sub
addr16
mov
inc
scas
pop
cltd
les
and
xchg
mov
cld
clc
mov
dec
idiv
cmp
imul
xor
sti
stos
clc
fidivs
sub
out
add
dec
adc
add
fdivrl
add
daa
cmp
xor
scas
and
orb
cld
and
nop
cmp
out
pusha
out
mov
cmc
cmp
cmp
push
gs
dec
mov
xor
stc
jo
nop
aam
xchg
loop
fwait
mov
add
add
jae
mov
xchg
jmp
sub
rcr
repnz
divl
and
je
mov
fimuls
sub
stos
daa
repz
movsb
mov
adc
ret
aam
mov
sub
data16
cmp
inc
jne
sbb
lret
jb
enter
call
jle
adc
in
mov
lret
pop
imul
outsb
lds
addr16
mov
je
cmp
scas
push
lods
lods
leave
fcmovne
sub
mov
arpl
enter
loopne
cmp
pop
pop
add
int3
cmpsb
xor
xchg
mov
add
repz
push
mov
fbld
not
mov
hlt
or
pusha
and
pop
push
jge
mov
fsts
fwait
out
lcall
and
addr16
das
adc
iret
dec
jno
pop
sub
es
push
mov
mov
scas
dec
loopne
jecxz
mov
sbb
cmp
jmp
cltd
pop
lods
push
mov
jle
cwtl
add
stc
cmpsb
cwtl
test
jns
push
mov
sub
dec
cmp
popa
mov
scas
jae
pop
call
das
dec
cmp
xor
scas
bound
push
filds
les
jmp
ficomps
mov
inc
out
test
or
and
sbb
ret
inc
ret
mov
lcall
pop
movsb
xlat
sub
mov
or
mov
test
jp
stos
sti
lods
movsl
les
adc
xchg
sti
mov
adc
lods
jg
mov
add
or
hlt
addr16
aad
add
inc
lret
mov
xchg
loop
mov
jbe
mov
jns
mov
xor
push
scas
ja
fisttpll
shlb
mov
jecxz
mov
gs
mov
dec
mov
ljmp
xchg
add
fmuls
cmpsb
add
je
pop
cli
inc
push
icebp
sub
leave
xchg
sarl
mov
inc
pop
inc
cwtl
lret
out
dec
js
stos
das
enter
sub
jmp
call
jnp
ja
jp
inc
inc
imul
pop
insl
mov
dec
adc
outsb
xchg
mov
es
loop
or
pop
push
cld
xor
mov
mov
mov
arpl
add
xorl
lods
pop
push
adc
insl
cld
in
lock
mov
and
arpl
mov
aad
sahf
pop
mov
in
ds
push
cmc
frstor
scas
cwtl
lcall
or
call
and
sbb
pusha
das
insl
mov
xchg
fstpt
add
je
cmp
outsl
add
clc
adc
cltd
in
das
cmc
mov
push
mov
and
ja
daa
call
jnp
jns
jo
push
jg
cwtl
ljmp
fbstp
dec
pop
out
cs
inc
sahf
clc
jecxz
xor
loope
gs
rcr
mov
dec
dec
dec
inc
dec
push
rcrb
push
mov
or
xor
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
push
push
call
cmpl
jb
movl
lea
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
movl
andl
xor
xor
inc
mov
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jb
lea
xor
mov
or
mov
and
mov
movl
mov
xor
subl
add
mov
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
sub
push
sub
mov
mov
mov
mov
xor
or
mov
adcl
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
add
sub
xor
mov
andl
add
push
movl
adc
movzbl
adc
mov
xor
xor
cmp
jne
cmp
movl
jne
push
jmp
mov
xor
adcl
add
movl
xor
xorl
add
adc
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
add
mov
movzwl
xor
xor
addl
add
mov
mov
mov
xor
add
xorl
imul
movl
mov
subl
xor
adcl
add
movl
cmp
movl
mov
je
mov
subl
add
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
addl
push
movl
push
push
xor
adcl
push
sbbl
push
andl
push
call
orl
mov
andl
lea
push
movl
push
call
movl
cmp
movl
je
xor
jmp
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
pushl
pushl
push
call
cmpl
jb
mov
push
lea
addl
push
adcl
push
subl
push
push
sbbl
call
adcl
imul
movl
cmp
movl
jne
lea
subl
push
push
call
movl
cmp
movl
jne
pushl
push
andl
call
movzbl
and
mov
sub
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
lea
add
mov
lea
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movzbl
sub
mov
mov
movzwl
adc
mov
xor
orl
mov
movl
add
movl
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
mov
subl
xor
add
sbbl
mov
xor
mov
adcl
xor
addl
add
mov
movzwl
sub
mov
mov
andl
xor
add
orl
mov
sbb
mov
mov
xorl
mov
addl
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
mov
mov
subl
movl
mov
movl
decl
mov
xorl
xor
sbbl
add
movl
jmp
lea
push
addl
push
call
cmp
movl
jne
push
subl
lea
push
sbbl
push
subl
push
addl
push
call
imul
cmp
movl
jne
adcl
lea
xorl
push
push
call
movl
cmp
movl
jne
mov
mov
xor
addl
lea
adcl
push
mov
orl
xor
lea
push
xorl
mov
pushl
andl
call
mov
mov
xor
lea
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
xor
xor
adcl
add
mov
sbb
mov
mov
xor
movl
lea
mov
movl
cmp
movl
jbe
adc
mov
add
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
push
call
mov
dec
mov
jmp
mov
or
mov
mov
sub
xor
mov
adcl
lea
sbbl
mov
lea
mov
lea
push
subl
push
call
cmp
movl
jne
push
subl
lea
xorl
push
push
addl
push
adcl
push
call
movl
imul
movl
cmp
jne
lea
andl
push
adcl
push
xorl
call
movl
cmp
movl
jne
orl
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
mov
mov
or
movl
add
mov
movzbl
adc
push
or
mov
xor
xor
movl
cmpl
je
cmpl
jb
jmp
pushl
call
mov
dec
mov
jmp
mov
adcl
push
adcl
mov
addl
add
movl
cmp
movl
je
mov
adc
mov
mov
xor
sbbl
xor
add
xorl
add
movl
adc
sbbl
xor
adcl
mov
push
dec
xor
xor
mov
mov
and
mov
add
adc
movl
xor
incl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
adcl
movsbl
adc
mov
andl
sub
mov
addl
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
push
mov
mov
movl
movl
push
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
leave
dec
jns
add
add
add
add
xor
add
pusha
push
add
pusha
inc
add
add
add
push
push
inc
push
sub
xor
pop
inc
xchg
jp
sti
push
in
mov
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
