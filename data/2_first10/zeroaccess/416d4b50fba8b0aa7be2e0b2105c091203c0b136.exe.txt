push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
or
stos
adc
adc
int
adc
dec
cli
je
fisttpl
lds
lods
push
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
xor
testl
dec
imul
add
aad
and
ss
dec
push
inc
or
mov
push
cs
mull
mov
xchg
cmp
inc
jl
fstpl
jp
push
sahf
sub
inc
test
flds
lds
in
mov
dec
in
clc
mov
xchg
sub
rol
mov
adc
cmp
pushw
fidivrl
push
inc
faddl
sbb
cwtl
jno
xchg
and
jg
icebp
enter
xor
sbb
and
ror
pop
neg
repnz
aad
int
mov
xor
or
mov
cmp
enter
test
rorl
sbb
movntq
mov
adc
mov
dec
and
xor
sbb
jmp
aaa
push
push
add
fidivrl
xchg
call
out
call
jo
push
lea
repz
inc
mov
loop
or
mov
scas
and
xchg
out
or
scas
popf
pop
sbb
fs
pushf
in
les
movsb
ja
or
lds
xor
imulb
lcall
jno
sbb
inc
outsb
icebp
xor
sti
mov
mov
mov
stos
add
jo
xor
xor
jne
or
lock
out
add
push
xchg
shll
popa
negb
adc
push
rcrl
outsb
xor
push
cltd
push
hlt
cmp
push
int3
ret
xchg
clc
enter
out
cmpsl
add
inc
mov
jns
test
adc
inc
pop
add
scas
scas
das
sti
rcrl
add
lods
arpl
xor
xor
int
or
js
xchg
push
sbb
push
addr16
push
lods
xchg
call
jle
bound
jne
pop
mov
inc
mov
icebp
fwait
clc
inc
dec
sub
xor
stos
jle
push
movsb
mov
add
fs
out
scas
sub
orl
stc
pop
dec
mov
out
out
loopne
jbe
outsl
xchg
mov
and
popf
jns
inc
out
push
add
xchg
inc
jns
lret
mov
add
popa
inc
fisttpll
pushf
push
shr
add
outsb
mov
jno
pop
push
pop
jns
dec
adc
adc
outsl
push
push
scas
std
into
push
mov
in
xchg
sub
aas
data16
aad
mov
xchg
sbbl
bound
out
jns
leave
roll
popa
and
les
lea
dec
cmp
xor
inc
clc
mov
sbb
xchg
jmp
out
decb
outsl
and
lock
test
ljmp
cmpsl
in
jg
push
into
das
ds
loop
dec
test
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
push
mov
int
adc
push
ljmp
lods
lcall
pop
test
add
icebp
or
js
jp
sub
ja
mov
xchg
push
outsl
jbe
rorb
insl
int3
imul
in
fadds
mov
cmp
fsubs
adc
jne
into
frstor
enter
adc
xor
pop
dec
mov
pop
or
add
fs
xchg
pop
cmp
cld
ja
dec
inc
jb
imul
in
shl
dec
add
cli
inc
sub
inc
xor
out
add
int3
insl
pop
lcall
mov
aam
stos
inc
sbb
rol
sub
or
cmp
dec
mov
movsb
pushl
ljmp
push
jmp
lahf
or
cmp
test
jl
inc
push
stos
push
xchg
sbb
push
movsb
add
lret
jno
pushf
out
sbb
xor
fldl
dec
aas
pop
aaa
mov
popa
addr16
pop
imul
outsb
and
push
or
roll
fidivs
add
pop
imulb
aam
sahf
fxam
add
sbb
js
leave
xchg
sbb
hlt
pop
sbb
mov
sub
arpl
out
aas
pop
adc
cmpsb
pop
xchg
loopne
add
xor
sub
inc
and
pop
addr16
jl
pop
nop
in
fs
dec
outsl
xor
jae
stc
mov
adc
out
movsb
add
lahf
mull
sbb
iret
adc
cltd
xchg
popf
mov
iret
xor
jp
rcrb
pop
shll
mov
icebp
gs
inc
loope
push
dec
and
inc
push
cld
std
fsubrl
add
int
lret
std
pop
lret
jno
adc
push
xor
add
pushf
lahf
ja
adc
shrb
or
add
adc
scas
scas
test
inc
xor
xchg
pop
sub
aas
sub
roll
int3
stos
mov
sub
mov
lret
ds
fcoms
popf
sbb
and
pop
popa
sbb
lds
lret
cmc
adc
daa
adc
daa
xchg
push
push
xlat
jb
dec
lcall
mov
mov
mov
in
cs
neg
dec
pushf
rclb
fld
hlt
les
mov
fisubrs
lret
sub
mov
fwait
mov
mov
pop
test
and
xor
pop
add
or
rolb
cltd
popa
jb
out
mov
addl
out
ss
dec
xor
xchg
insl
cmp
jno
cwtl
sub
cmpl
imul
cmc
in
idivb
mov
mov
inc
out
in
xor
jbe
push
ja
mov
or
ficoml
adc
and
divb
je
decl
or
sub
sub
in
aad
insb
and
jnp
loop
lret
mov
jp
or
dec
stc
jb
inc
cmp
jg
xor
add
xchg
and
pushf
sar
push
jge
xchg
ljmp
leave
cli
shll
xor
aas
and
mov
push
mov
or
clc
sub
xchg
lods
xor
fdivl
stc
shlb
mov
hlt
xchg
pop
push
sub
pop
stc
mov
popf
orb
test
push
xchg
sti
fdivrs
jl
enter
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
daa
ficoml
orb
adc
adc
adc
jno
test
xor
cltd
mov
xlat
in
xchg
or
mov
adc
pop
pusha
aas
adc
into
push
fcmovnbe
sub
pop
push
out
fsub
inc
push
dec
xor
adc
pop
jo
jle
shll
mov
push
push
das
cld
lret
push
pop
ficoml
fstl
aad
push
inc
cmpsb
mov
or
nop
dec
or
aad
mov
fwait
shlb
cwtl
inc
sbb
pop
jnp
jmp
lds
jmp
jl
mov
insl
jl
dec
sub
mov
jp
adc
sahf
sbb
jge
inc
or
mov
add
mov
or
jb
sbb
sub
test
push
sbb
jmp
test
nop
les
lods
inc
sahf
xchg
push
dec
xchg
mov
and
add
xor
imul
and
xor
or
mov
negb
sbb
data16
cmp
push
jecxz
andb
mov
jmp
lods
or
jne
das
into
cld
rorb
or
imul
mov
in
jno
add
fmull
adcb
rorl
stc
lahf
push
mov
cmp
adc
and
icebp
shr
push
dec
fwait
aam
imul
xchg
out
stc
out
mov
rcrl
mov
add
push
jecxz
cs
call
fs
push
scas
dec
arpl
int
scas
loop
dec
call
xchg
xchg
int
cmp
cltd
cmp
jp
orb
sub
xchg
fcomps
mov
cltd
out
inc
and
lret
scas
orb
jle
add
cmc
mov
outsb
xorb
scas
inc
lret
push
out
ds
std
or
push
sbb
xor
xchg
mov
stos
in
pop
pop
dec
sbb
es
icebp
push
push
push
test
push
dec
add
mov
test
gs
int
das
mov
mov
cmp
in
je
jne
cmpsl
addr16
pop
ja
test
stos
push
in
mov
push
nop
fnclex
adc
xchg
xor
mov
push
clc
sahf
inc
mov
dec
xor
jle
sbb
aam
inc
loop
mov
cmp
push
or
test
xor
pusha
test
and
loope
cli
out
mov
lahf
cmp
pop
addr16
in
lods
int3
test
push
cwtl
xchg
jmp
in
mov
leave
fistps
in
dec
cmp
lods
push
xchg
into
insb
inc
lock
cmpb
lret
or
inc
jecxz
fidivs
mov
roll
and
sbb
rolb
arpl
push
xchg
arpl
into
mov
and
movsl
mov
pop
cmp
mov
pop
mov
daa
push
lock
fisubs
out
outsb
mov
aas
cmpsl
pushf
es
push
and
mov
push
jge
mov
mov
outsb
dec
cmpsl
and
xor
xor
cmp
daa
xchg
fwait
cmp
sub
push
arpl
xchg
pop
or
es
lods
repnz
lret
leave
adc
imul
push
jno
adc
jo
lods
into
addr16
sbb
mov
xchg
cmp
push
fcoms
shll
cmp
or
cwtl
fldl
dec
push
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
std
ret
jmp
fdivl
fs
shll
adc
mov
jmp
js
rcl
imul
jbe
int
imul
insl
cmc
mov
ds
in
in
mov
and
sbb
ret
add
jl
push
push
stc
xor
ljmp
adc
imul
adc
sub
cmp
js
sbb
daa
nop
and
cmp
pop
xchg
fdivr
add
sbb
sub
and
pop
call
mov
cld
mov
hlt
inc
pushf
insl
mov
insb
pushf
jmp
inc
movsb
mov
cld
push
inc
stos
faddl
movb
mov
out
sti
setnp
mov
xchg
mov
push
xor
mov
xor
sub
clc
xchg
int
mov
xor
or
faddl
mov
and
cmp
movsl
mov
cltd
mov
fistps
cwtl
in
mov
mov
cmp
js
lods
mov
std
push
addl
mov
add
shrb
xchg
rclb
test
lret
cwtl
push
adc
fidivrs
add
dec
inc
mov
cmpsb
mov
dec
push
cs
sub
mov
js
sbb
push
add
sub
or
int
add
mov
pushf
push
hlt
sti
or
pusha
fimuls
mov
sub
xchg
mov
and
movsb
jmp
mov
mov
xchg
lret
outsb
sub
jns
adc
adc
leave
pop
push
faddl
jle
mov
addr16
cld
lock
in
orb
insl
mov
iret
js
fnsave
out
outsl
mov
fwait
scas
xchg
ds
lahf
outsb
push
mov
push
inc
mov
mov
jmp
cmpsl
repz
push
push
xchg
pop
sub
mov
xchg
pop
stc
add
loope
popa
mov
aaa
mov
push
sub
sub
scas
dec
push
ret
inc
scas
and
mov
xor
stos
jbe
arpl
cmp
stc
mov
xor
adc
pop
fsubl
mov
data16
rcrb
mov
inc
pusha
xor
loop
iret
sbb
out
arpl
pop
cmp
mov
stos
clc
add
mov
inc
rcrb
loop
lods
cmp
popa
jecxz
out
add
test
fnsave
jp
int
mov
or
mov
rcll
bsf
js
sbb
out
xchg
cmp
push
sub
fsts
subl
aam
movsb
pop
jnp
sub
rcrb
mov
push
sub
or
lahf
ss
addr16
dec
mov
lahf
scas
inc
xchg
pop
loop
ds
addr16
dec
jae
je
out
nop
mov
das
pop
inc
sub
lret
in
push
movb
inc
inc
pop
out
call
cmp
sar
sti
jno
mov
sub
mov
aad
adc
mov
lahf
xchg
xchg
insl
fstpt
mov
xchg
pop
xchg
xor
repz
pushf
ljmp
ret
mov
lret
xor
push
lods
and
xorb
imul
outsl
test
sub
push
loop
mov
loop
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
outsb
fdivrl
int
adc
pop
jg
ljmp
fdivl
add
xchg
ret
jecxz
dec
std
sub
das
push
dec
in
jmp
xor
out
insb
sarb
sarb
push
cmp
xchg
push
loop
sub
add
icebp
aam
xor
mov
into
into
adc
jp
into
lretw
pop
adc
outsb
xchg
aaa
shrl
out
jl
stos
sub
inc
iret
daa
faddp
mov
call
mov
push
fisttpll
scas
jae
mov
lods
insb
push
pop
leave
sub
fisubrs
scas
xchg
jns
js
dec
ss
pop
mov
jo
adc
inc
pop
dec
xchg
leave
mov
xchg
shlb
fs
adc
mov
mov
sarb
mov
inc
data16
mov
jmp
gs
je
shl
pop
test
dec
pop
rol
xchg
pop
bound
cpuid
cld
hlt
mov
cmp
rcrl
dec
insl
inc
loope
js
iret
imul
ficoms
fwait
pop
jge
sahf
cltd
mov
push
xchg
mov
fisubrl
pop
mov
cmp
scas
roll
dec
push
pushf
test
cltd
mov
cmpsl
lret
cmpsl
dec
push
jp
dec
enter
jo
xor
mov
loopnew
mov
nop
mov
sub
push
adc
xor
sbb
iret
cld
das
jo
cwtl
jbe
ret
jnp
in
and
in
sbb
je
mov
stc
pop
xor
repz
out
fcomps
div
shl
insl
out
xchg
les
stc
adc
insl
nop
pop
xor
fiadds
int
mov
add
mov
jne
adc
and
nop
outsb
cmp
fstps
shrb
pop
inc
lds
fmuls
adc
int3
fimuls
or
arpl
push
push
mov
in
or
test
or
lret
hlt
mov
cmpsb
or
xchg
shll
pusha
imul
xlat
inc
incl
push
cmp
mov
stos
cltd
xchg
lods
jge
push
test
je
mov
cmp
dec
or
addr16
sub
push
or
or
imul
jle
iret
lret
mov
sahf
cmp
ret
test
sahf
and
movsb
in
cmp
loope
pop
jo
fisttps
es
mov
add
inc
ds
bound
popa
shll
xor
xchg
fstpt
es
add
xor
push
jbe
inc
xor
sbb
test
inc
dec
stos
jo
mov
add
mov
xchg
clc
ficomps
jae
pop
movsb
std
mov
push
and
mov
js
mov
shl
dec
int3
test
jge
xor
cmp
sub
mov
inc
in
xchg
gs
inc
or
adc
mov
loop
push
sbb
aas
enter
cmpsb
lods
in
jmp
sub
and
sub
xor
cwtl
push
in
or
imul
or
mov
sahf
mov
mov
std
mov
cli
cmp
test
shl
push
pop
or
cmp
fnstcw
mov
rorl
and
jge
fistps
and
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
jns
insb
cmpsb
out
adc
int
adc
test
test
dec
xor
dec
jle
push
sbb
movsl
cli
in
mov
and
pop
mov
mov
adc
dec
fdiv
insl
dec
outsb
js
jmp
push
and
fwait
xchg
daa
jo
cmpsb
or
add
pop
adc
jmp
cs
adc
fucomp
fs
sbb
inc
insb
lock
mov
sbb
jg
arpl
dec
and
lea
sub
pop
and
insl
test
mov
out
lcall
jb
adcl
push
xchg
dec
push
xor
das
mov
dec
dec
xor
negb
sub
movsl
int3
hlt
imul
adc
inc
jno
data16
bound
mov
and
lea
outsl
jg
push
xchg
jb
cmc
jnp
loopne
adc
flds
dec
pop
cmp
je
gs
mov
cmp
lret
scas
sar
or
jne
jg
test
cli
and
js
jecxz
or
or
pop
mov
aaa
daa
dec
mov
fisubrl
jns
push
fucomip
and
sti
cmpsb
mov
sub
inc
lret
pushf
xchg
fcmovbe
adc
jns
aad
mov
add
push
pop
dec
xchg
outsb
pop
lcall
roll
jns
inc
jecxz
jnp
stos
insl
jb
inc
test
std
fnstsw
fcomip
cmp
or
jp
mov
xchg
inc
xchg
dec
mov
jno
sbb
sbb
and
xchg
inc
enter
xchg
jecxz
dec
jnp
push
push
dec
ficoml
pop
cs
mov
push
jb
push
dec
roll
gs
outsb
movsl
mov
cmc
outsl
fildll
mov
nop
lds
jge
bnd
data16
jg
mov
js
js
mov
mov
jo
fs
jo
leave
and
adc
add
jle
sbb
stos
adc
pushf
dec
sub
imul
aas
jbe
cmp
outsb
dec
ss
push
dec
xor
imul
mov
dec
insl
pop
xchg
scas
xor
neg
cvttps2pi
cmpsl
add
pop
cmp
xchg
cmp
jg
xor
inc
dec
in
subl
mov
cmpsb
jbe
lret
pop
pop
mov
into
fsubrl
inc
stc
pop
sub
fsubrs
out
mov
cmp
pop
add
and
insb
adc
xchg
iret
jnp
push
lods
leave
aaa
push
nop
daa
cwtl
mov
loop
mov
cmp
pusha
sbb
insl
hlt
pusha
pop
xor
sbb
push
or
inc
repnz
pop
jmp
xor
cmp
shlb
lock
adc
jae
mov
in
dec
shll
lahf
add
lock
into
lods
dec
jno
cmp
leave
jle
test
gs
xchg
lcall
push
pop
jmp
adc
pop
xor
mov
in
sbb
push
adc
in
sbb
sarb
pusha
pop
mov
int3
out
inc
ds
sub
dec
pop
mov
aam
sub
addr16
jle
add
cmp
aam
pop
sbb
xor
jl
scas
aas
xchg
and
push
aam
cld
movsb
inc
insl
pop
xor
test
outsb
mov
dec
xchg
sub
data16
pusha
imul
xchg
aas
jecxz
int
adc
mov
mov
mov
xor
fistpll
mov
fstpt
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
cs
pusha
js
in
adc
int
adc
cmp
pop
outsb
shll
je
cmp
in
jmp
xor
sbb
out
jne
rorl
adc
add
fwait
mov
lods
sbb
sub
push
fwait
sub
stos
cmp
mov
sbb
sbb
in
in
ds
jecxz
mov
add
mov
movl
call
jns
popa
and
inc
mov
scas
in
movsl
xchg
or
push
pop
pop
pop
aas
loope
xchg
dec
sti
jp,pn
lret
repz
sbb
mov
cmp
or
and
shll
sub
scas
dec
sub
push
jns
or
movsb
inc
in
push
xchg
push
inc
dec
cli
js
outsb
pop
jge
int
pop
mov
add
repz
mov
arpl
lock
push
push
sub
inc
in
popa
xchg
int
inc
sub
xlat
shrb
push
mov
andl
lock
xchg
in
adc
jle
les
sarb
lock
out
bound
jp
dec
in
fcoml
mov
jbe
lods
push
repnz
dec
mov
std
dec
movsl
xchg
and
xor
mov
mov
cmpsb
inc
sub
into
push
push
pushf
mov
xchg
enter
or
sbb
add
or
or
leave
movsb
cmp
loopne
pushf
inc
test
mov
and
stos
xorb
gs
loopne
jge
call
add
adc
out
pop
dec
and
imul
pop
repz
pushf
inc
xlat
les
sub
insb
adc
lea
push
andb
push
jecxz
jbe
rcrl
dec
mov
xchg
xchg
adc
test
sbb
aad
dec
xchg
int3
dec
imul
dec
lahf
xchg
orb
test
mov
mov
pop
cmp
sbb
call
cmp
shlb
mov
xor
js
popa
push
shll
cmp
addr16
sub
push
mov
mov
loop
iret
das
into
loopne
fisttps
dec
fdivr
imul
or
xchg
leave
sub
xchg
leave
xchg
pop
dec
mov
add
loope
sub
sbb
sub
lods
cltd
out
ss
pop
mov
pop
mov
pop
hlt
insl
cmp
daa
lret
or
mov
adcb
insl
pop
mov
fistpl
orl
push
insb
aad
pop
out
push
jp
jb
mov
sbb
push
dec
filds
arpl
push
mov
scas
xor
pusha
loopne
sbb
sti
mov
or
lea
mov
pop
arpl
dec
lds
cmp
in
jns
lea
icebp
aam
jecxz
sub
xchg
out
or
cwtl
pop
iret
out
pop
lcall
insl
sub
sbb
sbb
outsl
scas
pushf
movsl
pop
dec
and
adcl
arpl
lods
aaa
jne
adc
or
cmp
sbb
enter
inc
inc
test
rcrb
hlt
test
inc
pop
jg
mov
jbe
push
jmp
or
pop
adc
push
mov
addl
sbb
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
enter
adc
adc
int
adc
or
xchg
xor
test
xchg
xchg
iret
movsb
fcmovbe
dec
jb
ss
pop
sarb
xchg
adc
cmp
std
fdivs
jecxz
xor
stc
ljmp
xchg
repnz
jecxz
iret
stos
loop
add
or
add
xchg
jle
or
inc
sbb
xchg
mov
pushf
or
aam
data16
mov
inc
inc
cmp
gs
push
sub
dec
dec
iret
sub
mov
aad
loopne
pop
cmpsb
arpl
cltd
mov
in
rcll
pop
cmp
rorl
lahf
add
mov
call
popf
xchg
xchg
movsb
inc
xor
out
sub
xor
test
push
fmul
cmp
icebp
repnz
mov
jmp
xchg
add
sub
rolb
push
fnstsw
pushf
subb
les
mov
mov
es
hlt
mov
cld
repz
insb
cmp
adc
test
inc
mov
gs
lret
stc
push
cmpsl
sbb
ja,pt
outsb
adc
add
add
and
mov
or
and
xchg
mov
mov
add
add
lea
sbbl
push
dec
pop
jae
outsl
ja
inc
mov
fnsave
inc
push
insl
xchg
andb
sbb
and
sarl
mov
mov
push
jge
test
fwait
sbb
rorb
or
inc
sbb
mov
ja
shrl
or
dec
pop
sbb
cmp
addr16
orb
lea
ja
xor
out
into
xchg
mov
lret
lock
sahf
outsl
sub
and
and
insb
pop
fdivl
dec
pop
mov
cmp
cld
int
mov
cld
shl
inc
adc
jg
xor
mov
das
mov
popa
dec
or
jg
leave
daa
dec
cmp
adc
je
mov
cmp
dec
adc
fiadds
adc
fdivrs
imul
push
popf
cltd
add
lods
push
jmp
sbb
popf
stos
out
cld
int
sbb
mov
sbbl
popa
cmp
sub
fildll
fdivs
push
dec
jo
imul
jns
lea
sbb
pop
pop
aam
cld
rcl
fidivrl
dec
leave
sub
mov
std
lds
jle
dec
jne
outsb
lock
cmc
push
xor
aam
jne
push
sbb
js
decb
int
les
fmull
repnz
insb
loopne
ljmp
pop
out
xor
dec
cs
add
dec
test
sub
icebp
fldenv
pop
out
enter
mov
push
repnz
jmp
cltd
cmpsb
sub
stos
outsl
sub
dec
push
mul
cmp
xchg
mov
aam
iret
jge
out
lods
mov
and
ds
mov
xor
imull
jl
pop
sub
cmp
mov
sti
jne
xchg
enter
nop
sbb
testl
push
cmp
fisubrs
mov
mov
push
sub
sbb
jmp
sbb
mov
leave
mov
dec
xchg
lock
cs
daa
outsb
fcompl
pop
cmpsb
dec
mov
jp
add
jmp
rep
out
push
loop
in
mov
and
dec
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
and
ficoms
adc
adc
adc
mov
dec
jp
adc
mov
cli
jle
jp
push
imul
sub
out
fsubr
pusha
in
and
mov
xchg
movsl
mov
mov
jnp
mov
push
mulb
das
dec
pop
popf
int
push
daa
lods
in
add
jno
sub
mov
leave
in
outsb
jecxz
lds
mov
ret
xor
and
rcll
fdivrs
mov
pop
and
add
mov
sub
jecxz
hlt
rorb
xchg
xor
adcl
sbb
mov
repz
jb
fildll
cmp
stc
loop
repz
mov
bnd
push
cli
adc
aaa
jmp
lahf
inc
dec
adc
je
cmp
dec
fiadds
cmp
pop
icebp
faddl
jge
jg
jo
cmpsl
cwtl
or
arpl
pop
jmp
pop
fs
ja
dec
out
shll
push
pop
and
pop
ljmp
int
mov
mov
leave
dec
adc
scas
popa
sub
dec
add
pop
xchg
loop
adc
mov
out
or
lahf
push
in
pop
sbb
cli
dec
or
ljmp
int
imul
test
fbld
inc
mov
add
mov
jnp
pop
loop
xor
into
movsb
mov
imul
sti
insl
pop
push
js
fs
repnz
roll
mov
add
cmp
cmpsb
popa
push
push
inc
cld
add
adc
inc
daa
inc
add
aad
xchg
pop
mov
sahf
add
and
cmp
pop
xchg
cmpsb
push
in
arpl
je
ljmp
mov
out
sbb
inc
adc
adc
jnp
pop
arpl
cs
mov
inc
xchg
cmpsb
jecxz
fdivrl
pusha
pop
cmp
stos
xor
stc
ret
jle
test
sbb
scas
imul
or
int
pushf
cmp
orl
pop
jmp
rcrb
aaa
add
popf
insb
jle
pop
insl
cmp
out
xchg
jne
or
mov
into
out
ja
xor
jns
adc
lcall
bound
roll
dec
push
out
mov
cmp
insb
xchg
and
frstpm(287
lcall
test
xlat
or
das
icebp
mov
and
sarl
aad
test
dec
inc
jne
cmpsb
or
in
test
xchg
out
js
xchg
daa
das
daa
inc
xchg
mov
inc
adc
fsubrs
xor
inc
sbb
lods
mov
or
mov
test
sbb
sbb
dec
cltd
repnz
xor
lods
and
dec
jecxz
inc
mov
or
fcmovnu
pop
fldl
jo
dec
addr16
mov
pop
fcmovnbe
das
xchg
decl
sbb
leave
test
xor
inc
sub
dec
jnp
jae
mov
jae
mov
push
sbbl
dec
enter
xchg
jne
in
outsl
xor
xor
orb
push
arpl
into
mov
cmp
jmp
mov
jecxz
movsb
xchg
mov
aam
jg
jmp
mov
shl
jmp
fmuls
sbb
jmp
aam
adc
adc
adc
push
mov
xchg
jnp
adc
jbe
fldln2
add
inc
push
push
cs
xchg
jne
pop
fdivr
insl
pop
mov
fsubl
or
push
es
and
xor
inc
mov
and
pop
cltd
insb
pop
popa
mov
adc
adc
pop
jae
loop
push
jmp
push
push
dec
mov
test
mov
andl
jge
std
shlb
movsb
inc
fnstenv
add
out
inc
push
jns
idivb
adcb
mov
jae
cmc
ja
lahf
pop
rcl
sbb
out
xor
mov
push
std
ret
xchg
xor
xchg
jno
sahf
adcb
cltd
aam
fistps
add
andl
mov
xchg
adc
push
into
dec
idivb
mov
dec
lea
mov
pop
push
cmp
shlb
mov
mov
push
lret
jb
imul
subb
cld
dec
sarl
xchg
repnz
ficomps
aam
inc
pop
cmp
xchg
bound
jle
jge
push
or
pushf
jo
mov
out
bound
jecxz
push
or
add
xor
fidivrs
inc
icebp
movsl
mov
xor
sbb
inc
or
incl
jl
repz
loop
xchg
mov
lahf
adc
and
clc
out
mov
and
mov
cmpsl
lret
insl
pop
add
mov
xor
pushf
lret
pop
scas
sbb
imul
cld
pop
xchg
lret
dec
mov
and
adc
lods
testb
jbe
imul
mov
pop
mov
lea
hlt
mov
rorl
sbb
adc
lock
and
movsb
icebp
pop
pop
lds
pusha
add
sarb
pop
pop
sbb
mov
jg
cmp
push
roll
data16
addl
xchg
mov
xchg
xorb
xchg
jmp
insb
jp
adc
mov
jbe
jns
lock
mov
fcom
movsl
ret
and
jle
inc
adcb
shlb
leave
sub
sti
mov
call
dec
xor
sahf
dec
pop
das
in
and
sbbb
inc
and
jecxz
movb
add
dec
test
mov
dec
loopne
xchg
mov
jecxz
stc
mov
mov
push
or
popf
int
cmp
sub
xchg
adc
inc
shlb
scas
mov
lahf
jae
jp
fsubrs
add
jmp
cs
mov
shlb
in
stos
cs
pop
jecxz
pushl
adc
or
nop
mov
xorb
lock
pusha
cs
shlb
mov
pop
xchg
jle
stos
fdivrs
ss
dec
dec
into
out
lret
cli
daa
push
movsb
cli
js
es
mov
movsb
push
sub
cli
and
es
outsl
insb
loope
out
mov
xchg
inc
xor
mov
jmp
and
pop
in
fists
fdivrs
or
movsl
es
sahf
mov
push
mov
in
andb
xchg
xor
and
jl
ret
es
push
in
lret
pop
sbb
mov
cli
push
cmp
pop
adc
rorl
mov
out
aaa
das
shrb
fdivr
ss
in
xor
lret
pop
mov
das
dec
jecxz
sbb
stos
cmpsl
mov
pop
sarl
dec
dec
in
repnz
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
or
ss
xor
adc
int
adc
adc
mov
ss
mov
jg
push
test
and
dec
call
les
faddl
mov
mov
inc
inc
rcrb
mov
out
and
mov
lods
shrb
push
in
push
ss
in
das
jmp
adc
inc
sub
dec
adc
sbb
jne,pn
ds
and
jecxz
add
loope
cmp
std
fwait
lret
or
fcmovnu
mov
fnstcw
push
and
scas
or
out
repz
pop
aas
cmpsb
inc
mov
cmpsl
add
xor
leave
imul
adc
or
rcl
ja
xchg
out
icebp
shlb
pop
adc
and
dec
sahf
fpatan
insl
adcb
mov
ret
pop
xlat
ss
mov
test
cmp
outsb
arpl
popl
xor
inc
int3
dec
fnsave
push
ds
dec
mov
mov
sub
xor
arpl
shrb
and
movsb
pop
out
inc
fmul
sbbl
xor
jae
insl
cmpsl
xchg
andl
push
scas
xchg
int3
fmulp
negl
out
out
pop
repnz
push
xchg
mov
repz
jl
mov
in
or
mov
xchg
xor
lea
lods
mov
and
das
sbb
ds
push
lea
call
test
scas
mov
mov
push
cmpsl
enter
leave
adc
mov
pop
shll
xchg
mov
add
adc
and
popa
aas
data16
lock
pop
inc
lock
mov
add
push
or
in
dec
inc
cmpsl
pop
fisttpll
into
mov
adc
xchg
mov
jb
or
mov
rorb
aad
dec
cltd
or
movsl
movsl
jb
pop
mov
or
aad
loopne
aaa
inc
push
sbb
jnp
dec
in
mov
push
movb
in
dec
mov
icebp
mov
dec
pop
pop
les
repnz
mov
orb
jns
add
hlt
iret
and
and
stc
dec
pusha
mov
add
in
lods
sub
leave
cmp
cmp
mov
pop
test
mov
jns
imulb
adc
xchg
mov
adc
test
mov
dec
pop
in
pop
pop
out
push
loop
rcl
hlt
insb
jnp
push
les
mov
pop
lahf
jecxz
mov
call
dec
push
shl
mov
testl
aas
xchg
or
idiv
push
push
cmpsl
loope
xor
in
pop
les
mov
lea
stc
sbb
mov
or
cmc
ds
int
sbb
or
pop
add
js
pop
mov
dec
jle
mov
mov
pop
sbb
xor
xor
mov
xor
or
push
cwtl
insl
pop
xor
jge
repnz
mov
jge
ffreep
fisttps
pop
arpl
push
adc
cmp
pop
std
and
fwait
push
lds
inc
pop
ret
adc
push
xchg
add
enter
outsl
insl
mov
push
adc
push
or
orb
sub
and
add
ret
lret
shrl
mov
mov
lahf
addr16
cmpsb
stc
cmpsb
jo
imul
incl
leave
sahf
ret
xchg
inc
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
push
sub
adc
int
adc
inc
sbbb
ret
mov
jnp
out
mov
and
fsubl
sbb
pusha
cmp
push
sti
add
adc
fwait
xchg
in
cmc
inc
shr
xor
inc
sub
ja
pop
out
xchg
sbb
cmp
xchg
es
sub
or
pop
adc
sti
inc
sub
xor
pop
push
lock
pop
in
bound
mov
popa
fildll
xchg
jg
pop
dec
fildl
xor
cld
add
cmc
adc
inc
jge
mov
cmp
sbb
sbb
push
inc
jp
sub
sbb
stos
sti
scas
push
into
xor
push
pusha
mov
enter
iret
sbb
cmp
fimull
mov
add
je
xchg
jne
movsb
add
rcrb
xchg
arpl
test
nop
mov
mov
jge
jno
cwtl
call
pop
dec
sbb
enter
adc
and
in
pusha
clc
jecxz
shll
lret
adc
addr16
arpl
sahf
outsl
in
mov
scas
mov
sbb
stos
ljmp
sahf
dec
jns
push
test
mov
xchg
lret
dec
xor
daa
in
pop
sbb
push
cmpsl
sbb
int
xor
add
pop
mov
cli
popl
sti
sti
hlt
ljmp
out
shrl
pop
int
out
jg
clc
sbb
add
dec
mov
out
xchg
mov
mov
iret
pop
push
inc
lds
pop
subb
out
mov
das
roll
jl
mov
xor
cmp
inc
adc
mov
adc
fisubrl
cld
imul
dec
aaa
jne
ss
mov
sarl
andl
sbb
dec
push
jge
jbe
mov
cmpsb
jmp
sub
jno
or
testb
sbb
shlb
js
xlat
cmp
mov
jp
stc
bound
rdpmc
mov
inc
and
or
daa
and
jns
pop
jecxz
pop
data16
adcb
ror
mov
mov
xchg
mov
adc
cmp
ja
mov
int
mov
or
pop
xor
fwait
pop
sbb
mov
dec
into
dec
push
lcall
push
addr16
mov
cmc
xchg
add
enter
enter
adc
in
cwtl
enter
jns
fmull
outsb
imul
ret
mov
jecxz
jae
jmp
dec
push
cmp
pop
mov
cmp
fsubrl
imul
into
imul
rcr
ds
mov
xchg
mov
outsb
aam
testl
repnz
cwtl
push
in
subl
test
adc
cmp
int
pushf
sar
dec
jb
inc
stos
lock
sub
pushf
mov
cmp
push
pop
and
adcl
movsb
jg
fs
xchg
mov
test
jbe
js
xor
ficoml
sbb
jae
jbe
sbb
jbe
xchg
pop
hlt
mov
sub
sbb
out
mov
jbe
add
add
insb
xchg
rorl
inc
pop
jnp
sub
sar
sbb
dec
inc
jle
cmpsb
inc
mov
push
pop
add
loope
xlat
pop
call
ss
test
out
movups
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
cmp
ret
int
adc
shlb
xchg
sub
mov
jge
mov
int
ret
push
lock
fs
push
sub
lea
movsl
jge
insl
shl
mov
mov
adc
shll
fiaddl
jg
and
and
or
ja
sar
pop
in
push
xchg
sti
pop
sub
inc
in
mov
lods
iret
xchg
add
mov
push
outsl
clc
jns
pop
imul
inc
sarl
outsb
cmp
cmc
push
repz
sub
aas
mov
addl
cld
mov
pop
mov
sbb
mull
insl
xchg
addr16
into
cs
inc
jbe
pop
pop
ss
cmp
les
mov
push
jmp
hlt
jae
aas
in
pop
lahf
dec
adc
cwtl
popf
pop
ret
mov
sub
mov
cltd
popf
out
mov
out
stos
sub
inc
inc
loopne
movsl
out
das
jbe
xchg
jl
push
mov
inc
aad
test
aaa
sub
mov
je
push
out
out
or
les
inc
jae
inc
adc
popl
add
in
and
jmp
inc
pop
outsl
mov
jp
scas
inc
cmp
add
dec
in
divl
mov
lock
mov
cwtl
loop
std
mov
popa
rorl
dec
mov
push
push
repnz
xor
dec
iret
movsb
cs
dec
sbb
inc
rcrl
inc
and
xor
cmpl
jne
out
out
xchg
fstl
mov
mov
sbb
insb
popa
adc
and
inc
repz
and
push
shlb
cmc
lods
mov
jg
aaa
push
shrl
cld
fs
and
mov
enter
or
xor
xchg
push
sahf
mov
mulb
stc
push
dec
push
sbb
aad
daa
aas
jb
pop
xlat
loopne
std
push
push
mov
mov
fsts
mov
popa
pop
inc
inc
mov
xor
jns
jmp
dec
inc
inc
shlb
pop
mov
inc
fmull
shl
mov
add
out
stc
xlat
push
stos
adc
inc
imul
sub
ds
jg
aam
imul
add
xor
and
pop
jl
lock
lret
mov
jl
daa
mov
inc
mov
pop
aam
cmp
pop
incb
test
in
sub
movsl
subb
in
sbb
paddq
sbb
daa
xchg
jo
loop
insb
push
addr16
sub
mov
xor
mov
dec
push
test
sub
aaa
lods
in
mov
sbb
sbb
jb
fucomip
inc
das
fmull
pop
mov
js
mov
sahf
xor
xor
cltd
add
mov
mov
fdivs
mov
bound
gs
pusha
loope
pop
into
inc
push
cld
testb
es
loop
xchg
push
test
stos
fsubl
xchg
push
pop
xchg
mov
inc
scas
gs
push
stc
dec
inc
xchg
and
and
pop
hlt
pop
lcall
add
cmp
jbe
jb
je
push
ja
sbb
pop
mov
stos
cmpsl
test
ss
and
movsb
mov
pop
cmpsl
pop
pop
jl
cmc
addr16
call
aas
stos
pop
fcoms
adc
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
punpckhdq
adc
int
adc
repnz
sbb
sub
fisttpl
push
sarb
xchg
or
and
leave
cld
icebp
jno
es
cmp
mov
lock
rorl
inc
dec
cmp
clc
cltd
sbbb
sbb
nop
mov
pushf
sbbb
or
pop
jl
xchg
mov
or
stos
push
adc
ret
lret
push
sbb
mov
cli
mov
add
out
daa
xchg
cltd
sub
fbld
aaa
data16
in
test
sub
in
jnp
cmp
pop
pop
das
nop
xchg
cmp
jmp
jb
aaa
jge
popf
int3
rol
fbld
push
jno
dec
sbb
xor
and
dec
inc
inc
movsl
cmpsb
and
xorl
les
adc
testl
sahf
cmp
std
mov
rcl
shll
sbb
ret
adc
js
aam
in
cmc
mov
ja
mov
lock
mov
xchg
mov
cmp
pop
push
push
and
xchg
clc
bnd
ds
sub
jl
pop
stc
cwtl
ret
scas
pop
fstpt
lock
sub
and
loop
push
and
hlt
adc
sub
mov
imul
pop
mov
pop
into
jle
sub
fidivl
mov
inc
loopne
fnstenv
ljmp
icebp
mov
test
dec
pop
sub
mov
gs
xchg
add
data16
lahf
xor
lods
add
andb
fdivs
and
xchg
scas
ss
pop
xchg
jae
lock
mov
pop
dec
mov
push
adc
push
xor
push
bound
insb
and
imull
inc
add
ret
jb
loop
mov
mov
out
hlt
jp
call
pop
sti
or
hlt
dec
outsl
ss
cli
lahf
adc
dec
pop
sbb
lret
adc
mov
bound
pop
aad
pop
sub
inc
and
xchg
imul
test
jle
jb
inc
andb
mov
jmp
maxps
mov
out
adc
pop
sbb
fstl
or
test
mov
es
dec
jo
lahf
rcll
cmp
sahf
dec
push
lret
aad
insb
ljmp
adc
xchg
push
inc
jmp
out
xor
jg
in
inc
xchg
imul
mov
enter
sbb
add
out
xor
dec
inc
mov
sbb
mov
addr16
imul
xchg
ja
and
xor
adcl
pusha
mov
xor
js
ret
movb
pop
pop
cli
sti
fnstsw
mov
add
cld
adc
jb
and
dec
mov
fisubs
push
push
jge
adc
mov
stc
xchg
xchg
gs
in
addr16
add
sub
push
sbb
cld
push
mov
loopne
xlat
clc
sbb
in
and
lahf
bound
push
dec
mov
les
cld
repz
lock
pushf
test
mov
stos
sub
lcall
js
pop
xchg
add
xchg
dec
sub
mov
mov
pop
push
mov
popf
mov
adc
and
pop
lock
sbb
mov
pushf
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
lret
mov
int
adc
ja
pop
xor
mov
push
sbb
orb
dec
or
mov
out
jno
jl
inc
mov
jb
cmpsb
add
cmp
aad
mov
cltd
push
fisubs
outsl
test
movsl
out
test
jbe
imul
sbb
cli
ss
sar
enter
inc
or
js
push
mov
dec
mov
les
or
lahf
xor
insl
push
sbb
xor
mov
lds
xor
addb
push
mov
sti
mov
pop
inc
xlat
sbb
leave
pop
inc
sub
adc
shlb
fxch
mov
push
cmpl
lret
adc
mov
repz
fnstcw
ret
js
enter
pusha
or
sub
add
mov
sub
inc
inc
or
or
mov
cltd
cmp
mov
in
fs
pop
cmp
pop
and
sub
pop
test
aad
movsb
mov
rclb
lods
mov
push
or
nop
and
aad
rorl
inc
sbbl
sbb
xchg
add
mov
push
sahf
lds
mov
imul
std
mov
cmp
mov
add
loop
sbb
sub
imul
cli
pusha
mov
add
pop
daa
adcb
xchg
lock
icebp
xchg
inc
fwait
mov
stc
ror
add
iret
xchg
pop
pop
cmp
int3
sti
inc
in
addr16
pop
push
faddl
pusha
pop
lds
aam
xchg
jbe
sub
icebp
rclb
nop
addr16
mulb
lea
or
mov
xchg
push
add
hlt
cltd
call
or
rclb
cmp
fs
std
xor
xchg
add
jecxz
push
js
aaa
xchg
popa
or
jg
mov
addr16
out
mov
pop
scas
stos
rcl
push
and
pop
xor
nop
mov
and
inc
test
fadds
sbb
test
daa
jns
lods
mov
mov
sub
and
loope
cmp
idivb
jmp
fsubl
jp
inc
and
mov
lret
call
sub
cwtl
mov
sub
lcall
jo
lahf
push
sub
lds
adc
jmp
jg
cmp
cmpsb
or
cs
mov
scas
xor
call
cmp
jecxz
mov
dec
and
add
out
mov
nop
push
xor
pop
cld
xor
mov
dec
dec
add
pop
lods
stos
imul
or
js
push
icebp
adc
cmp
movsl
gs
xor
lods
mov
in
inc
adc
repz
pop
adc
dec
mov
sub
mov
mov
sub
or
sahf
mov
fsubl
pop
xchg
xor
data16
add
mov
cli
push
insb
sub
rcrb
push
xlat
out
notb
jle
inc
push
je
push
sti
or
or
and
xchg
test
jb
repz
push
cli
inc
cmp
ja
jecxz
in
mov
sbb
xchg
adc
adc
or
adc
ds
inc
sub
push
in
pop
and
pop
data16
xchg
je
loope
ja
fisubl
out
push
jmp
popa
enter
mov
pushf
push
lea
cmpsl
je
or
dec
push
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
pop
mov
shrl
adc
dec
mov
push
mov
aam
ss
mov
fsubl
aad
or
cmpsl
loope
or
pop
loopne
repnz
dec
notl
cmpl
mov
push
movsl
jmp
mov
mov
jno
and
mov
sbb
pop
movl
and
add
pop
loop
stos
sub
push
push
clc
clc
or
cli
daa
pop
imul
pop
cmp
cs
xor
mov
aaa
jb
pushf
repz
test
sbbl
xchg
add
jo
cmp
cli
inc
mov
cmp
mov
cmp
mov
iret
mov
jae
sub
shlb
lods
pop
ret
rcrl
rorb
or
jmp
cltd
mov
lds
pop
pop
shrl
jmp
inc
bnd
subb
idivb
cmpsb
jle
xchg
add
cmp
mov
aaa
jp
fs
mov
iret
xchg
std
hlt
loope
adc
cmpsl
or
xchg
jbe
scas
cmp
rorl
cmp
subl
imul
das
jno
push
mov
aaa
mov
and
in
stc
fs
stc
push
sub
stos
mov
lds
sbb
int
jo
xchg
scas
call
mov
mov
mov
aas
dec
pop
sbb
mov
push
cld
adc
push
clc
jl
adc
ljmp
sbbb
dec
mov
fnstcw
jbe
mov
adc
fwait
xchg
les
jp
pop
lods
adc
add
out
or
fcomps
es
nop
push
inc
int
and
jno
dec
and
sahf
fsts
xchg
and
ja
xchg
aaa
xor
enter
loopne
inc
pop
push
ja
fimull
clc
lahf
out
test
jb
push
jbe
pop
fcoms
lret
jmp
lods
inc
mov
pop
adc
mov
ja
xor
mov
xchg
or
lret
rcll
ss
test
mov
pop
loop
xchg
test
mov
xor
push
sub
pop
aaa
test
cmpsb
jno
mov
into
hlt
fsubrs
sti
stc
adc
xor
cmp
mov
out
inc
fldenv
sti
out
movsl
add
loop
test
jle
and
movsb
clts
mov
movsl
adc
adc
and
xlat
adc
mov
in
pop
xchg
mov
add
mov
adc
inc
mov
push
ret
sub
inc
repz
loop
mov
dec
xchg
jnp
testb
inc
jl
into
das
stos
mov
jmp
nop
rcll
hlt
dec
push
mov
out
adc
sub
jnp
out
xor
xor
jbe
adc
add
xchg
jecxz
mov
adc
xchg
xlat
iret
testl
lock
dec
js
pop
xor
inc
movsl
test
jb
push
imulb
cmpsb
stos
outsb
xor
je
lahf
push
ss
or
das
nop
cmpb
ljmp
adc
xchg
xchg
shlb
jge
rolb
pop
pop
sub
mov
and
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
adc
fidivrs
int
adc
xlat
xlat
adc
loope
xor
into
gs
add
stos
cmp
dec
mov
mov
repnz
bound
xchg
dec
pushf
lcall
mov
fidivrl
cltd
imul
or
loopne
mov
or
cli
sbb
aas
pusha
repz
mov
or
mov
fwait
pushf
orl
jle
and
inc
adc
lock
adcl
xchg
and
loopne
sub
push
mov
dec
bound
add
mov
xor
imul
pop
or
xchg
gs
test
stos
mov
jo,pt
sbb
aad
cs
ss
enter
into
iret
mov
inc
push
jmp
pop
popa
jno
pushf
pushf
and
lret
es
xor
daa
cmp
jmp
add
mov
mov
shlb
push
add
je
shll
jmp
pop
mov
adc
xorl
pop
mov
loopne
and
jge
repnz
stos
les
icebp
push
jb
mov
cmp
shrb
in
lea
pop
repz
pop
dec
shll
pop
mov
cmp
fidivrl
xchg
lds
lds
mov
ss
out
jbe
shlb
sub
lret
mov
xchg
sub
mov
daa
dec
lahf
imul
mov
jae
test
or
adc
mov
inc
ss
inc
js
jb
or
mov
outsl
test
inc
iretw
inc
sub
pop
xchg
test
pop
push
or
mov
pop
fadd
jae
cmpsl
xor
sub
push
inc
dec
aam
scas
inc
popa
popf
mov
sbb
dec
adc
mov
mov
jg
inc
pushf
sarl
xor
xor
inc
loopne
xchg
loopne
mov
mull
cli
cmp
movb
cmp
or
jno,pt
imul
push
adc
repnz
lret
xorl
ja
xor
xor
es
test
xchg
enter
dec
movsb
push
fs
dec
cmp
aam
mov
sbb
ja
ret
add
xchg
cmc
sub
fadds
and
es
data16
hlt
cmp
add
push
inc
dec
mov
pop
testb
fucomip
mov
ss
xor
ljmp
inc
mov
hlt
mov
hlt
pop
das
cmpsl
sub
jle
jne
pop
and
xchg
int3
sahf
lret
out
ja
mov
add
fisubl
in
pop
adcb
test
cwtl
adc
dec
lret
jg
sbb
scas
testb
fs
js
ss
ljmp
nop
jbe
mov
sub
shrb
jp
mov
xor
push
mov
hlt
shlb
xor
shl
fsubl
shr
sbb
icebp
loope
cs
mov
jle
aas
pop
sets
adc
sub
mov
rol
jae
jb
rcr
out
xor
adcl
arpl
jmp
jae
mov
cmc
pop
repz
data16
int
jmp
pop
push
fadds
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
and
sub
adc
adc
sub
loopne
push
pushf
icebp
push
popa
stos
xchg
cli
dec
push
ljmp
je
ret
outsl
test
cmp
into
mov
cmp
cwtl
rcrl
je
test
dec
xorl
lods
in
and
mov
movsb
sarl
mov
cmp
push
push
or
and
das
or
xchg
jbe
and
mov
xor
ljmp
mov
daa
std
jae
pop
arpl
in
lds
movsl
aad
mov
gs
cmp
xchg
jp
scas
push
xor
movsl
adc
lea
addl
xor
daa
js
jg
in
dec
popf
xlat
mov
cmpb
cld
adc
pop
in
jmp
fistpll
sub
pop
mov
inc
sub
push
andb
mov
nop
or
notb
push
adc
ss
xchg
cmc
cmp
dec
pop
add
mov
cmpsl
jnp
or
mov
xchg
cmp
aaa
daa
cli
inc
cmp
mov
aam
sub
ja
inc
cmc
in
push
jecxz
xchg
js
pop
inc
insb
mov
pop
push
jns
orb
fs
inc
pop
jb
les
and
pop
lret
mov
inc
mov
cmpsl
lock
dec
movsb
in
sbb
xor
jmp
sbb
push
cltd
andl
pushf
jp
repnz
scas
sub
test
jge
outsb
call
aas
jmp
mov
adc
out
repnz
xchg
cli
lods
mov
sbb
faddl
and
lahf
xor
nop
sahf
arpl
mov
pop
and
xchg
cmc
cmp
dec
enter
push
xchg
sahf
aam
mov
out
add
mov
shrl
callw
dec
xchg
jnp
xchg
xchg
movsb
push
mov
pop
pop
insl
outsl
dec
out
es
in
add
in
repz
nop
mov
pop
cmpsl
sub
mov
jp
clc
mov
push
jmp
lock
fdecstp
ret
fdivrs
push
data16
xchg
in
sbb
push
fcomp
lret
ret
movsb
div
or
cmpsl
inc
push
maxps
enter
add
pop
rcll
es
decl
pushf
add
clc
js
out
or
xchg
fistpl
test
fwait
mov
mov
jno
sahf
or
fcmovu
scas
mov
sbb
jo
and
xor
mov
cmp
jns
dec
mov
cmp
aam
adc
mov
ror
ja
inc
mov
movsb
and
repnz
cmp
mov
sbb
sub
dec
shll
sbb
or
outsb
dec
insb
cld
mov
loop
mov
xchg
cmp
fucom
mov
sbb
pop
jle
xor
inc
pop
cmp
mov
mov
pushf
xchg
mov
stc
aam
in
pop
insb
dec
sti
lock
std
sbb
cmpsb
add
scas
aad
imul
jle
ret
mov
sub
imul
inc
mov
ljmp
add
cs
sbb
ret
pushl
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
cmpsl
jnp
call
mov
jmp
fsubs
cwtl
or
fdiv
push
jbe
adc
push
mov
arpl
icebp
dec
cmc
cwtl
test
lea
pop
add
jnp
fsubrl
and
push
adc
jge
out
pusha
inc
sub
pop
in
mov
stos
push
jns
fwait
sub
push
mov
scas
incb
aad
scas
loopne
in
enter
clc
aas
out
invd
xchg
ss
mov
int
jmp
mov
add
lods
jmp
dec
into
sbb
lret
daa
mov
mov
jb
add
clc
xor
aad
push
movsl
dec
mov
shrl
gs
mov
cmc
sub
cmp
outsb
outsb
inc
mov
aaa
pusha
addr16
dec
jne
js
sbb
add
mov
xor
rorb
push
push
cmp
mov
push
adc
jl
test
popa
pusha
push
mov
adc
cmpsl
xchg
cmp
sti
mov
add
inc
and
mov
leave
fsubrs
test
shll
adc
pop
fidivs
ljmp
repz
mov
call
das
outsb
cmpb
jnp
call
push
clc
sarl
mov
or
fcomps
pop
mov
mov
jg
push
int3
mov
inc
jns
test
inc
push
adc
lahf
push
loop
ret
push
and
jne
cmpsl
cmp
dec
jns
sub
movsl
sub
jp
gs
mov
dec
jbe
pop
in
dec
cltd
jge
aam
cmp
cmp
shl
pop
lret
dec
imul
mov
cld
push
movsl
xchg
push
in
push
std
push
dec
mov
iret
dec
das
add
cld
or
scas
fs
sbb
stos
mov
cmp
or
gs
xchg
adc
push
jbe
lock
inc
adc
add
dec
dec
scas
inc
xor
lods
mov
aaa
push
and
data16
fwait
sbb
daa
lret
lahf
add
or
inc
in
call
je
cmp
ljmp
jecxz
mov
divb
dec
mov
fisubs
cld
dec
rorb
mov
sub
add
pop
mov
sbb
dec
pop
cmpsl
outsb
adc
or
aaa
js
ret
fdivs
mov
insb
std
adc
inc
and
ficomps
and
popa
fidivrs
stos
mov
mov
inc
inc
icebp
inc
cli
sbb
cmp
xor
add
cs
imul
fadds
jle
jbe
push
xor
int3
ljmp
or
dec
or
adc
icebp
sbbb
add
or
xor
rcl
mov
mov
rclb
and
daa
xchg
push
mov
leave
jp
add
movsl
cmpsb
cmp
into
add
xor
push
fadd
stos
popa
add
jecxz
std
jo
ljmp
out
or
xchg
sub
push
dec
mov
sbb
dec
imul
sub
or
jo
movsl
test
sti
mov
and
sti
mov
stos
jo
pslld
mov
or
cltd
sbb
movsl
jae
cs
jae
mov
rorb
or
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
aam
lcall
adc
out
loope,pn
mov
inc
mov
icebp
cli
mov
push
mov
in
testl
cld
pop
mov
cmp
mov
push
mov
xchg
in
mov
adc
popf
inc
dec
ret
sbb
or
jge
insb
push
cld
jle
lods
mov
out
push
adc
add
mov
fucomi
insl
lret
xchg
cmp
mov
mov
pop
inc
bnd
inc
sub
push
popa
sub
jo
out
and
sub
notb
test
loop
pop
inc
shlb
repz
cmp
adc
jecxz
sub
push
pop
stos
in
jno
out
inc
test
inc
and
popf
sbb
arpl
in
xor
dec
or
sti
int
movsl
stos
jbe
movsb
dec
ss
push
cmp
jno
lock
cmp
mov
dec
jb
in
push
cwtl
mov
fnstsw
cmpsb
rcll
ret
dec
xor
pop
outsb
nop
add
push
jg
mov
cmp
stos
data16
push
fcoml
jo
pop
mov
adcl
fiaddl
dec
xchg
or
jno
mov
lock
sub
roll
push
ljmp
dec
in
cli
das
xchg
mov
aas
shl
mov
outsl
xor
and
ret
push
js
repz
mov
or
insb
push
shll
ss
pop
popa
push
and
mov
mov
fs
sahf
mov
testl
outsb
and
xchg
cmpsb
sub
cmovnp
jmp
or
sbb
lcall
inc
je
dec
in
imul
jns
push
arpl
pop
imul
mov
shl
ret
scas
and
xchg
inc
jp
jecxz
leave
dec
lahf
add
sub
mov
jle
jl
mov
mov
sub
xlat
push
cmp
mov
jecxz
adc
cmp
cmp
test
xor
jne
shr
lock
repnz
jle
or
xor
xor
loop
and
or
fdivs
cltd
dec
xor
cmp
ss
mov
mov
mov
xor
inc
iret
fistl
lcall
or
adc
movsb
and
pusha
or
xor
icebp
adc
notl
sarl
lret
sbb
filds
pop
jbe
pop
adc
push
or
jle
jl
mov
outsl
xchg
xchg
push
clc
call
andl
jge
inc
fistpll
rcrb
idivb
push
add
mov
and
sti
cmp
jp
mov
adc
insl
call
and
dec
adc
popf
cltd
out
dec
xchg
stos
mov
hlt
ret
lret
in
xchg
xchg
ret
mov
rorb
add
sub
vmaxsd
faddp
mov
adc
add
adc
stos
and
cltd
lods
xchg
mov
popa
out
jae
mov
call
ret
jae
mov
aaa
adc
rep
jb
loop
sub
mov
leave
pop
das
loope
imul
pop
inc
jne
cli
jno
lods
xor
fnsave
jmp
int3
sub
inc
lds
ss
adc
and
lock
adc
push
mov
jge
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
ret
lods
dec
test
adc
adc
adc
fwait
jnp
sub
stos
rolb
sbb
icebp
jmp
arpl
inc
adc
inc
mov
lahf
inc
adc
jp
and
loopne
cmc
mov
cmpl
mov
test
mov
fsubs
addb
fdivrs
add
aad
leave
push
or
shr
pusha
aaa
in
aad
and
add
push
xchg
lds
xchg
push
lods
clc
in
push
stc
je
xchg
lret
jg
out
stos
mov
xchg
out
sub
jge
mov
xor
pushf
and
lea
rorb
mov
lds
bound
cli
sub
xor
out
fmuls
dec
lret
inc
sbb
pop
adc
inc
or
sub
enter
imul
adc
fcompl
add
cmc
sbb
das
imul
xor
in
or
flds
xor
lea
pop
mov
movsl
lcall
mov
cli
and
data16
pop
inc
lret
insb
insb
aas
xor
sbb
icebp
sub
adc
push
out
mov
data16
adcb
filds
jb
imull
mov
shll
call
dec
bnd
pop
mov
push
shl
xor
hlt
and
cmc
test
cli
inc
jmp
push
push
sar
rorb
jmp
mov
arpl
nop
cmp
cltd
shlb
push
int
jmp
mov
addr16
stc
xchg
pop
data16
cmp
lfence
push
scas
leave
jge
xor
mov
imul
arpl
fdivrl
loop
mov
push
subb
add
insl
daa
sbb
js
aas
add
cmpsb
test
movsl
incl
lcall
push
adc
jecxz
xchg
xchg
les
daa
xchg
or
cwtl
inc
cltd
cmpl
faddl
mov
mov
xchg
clc
cmp
stos
notl
push
xchg
adc
rol
or
push
adc
xchg
ds
jo
sar
int
jne
pop
gs
xchg
dec
cmp
fstpt
jl
mov
mov
inc
fisubrl
daa
sahf
xor
ret
sbb
sbb
add
push
sbb
lods
inc
mov
xchg
mov
mov
push
sti
inc
or
push
adc
sti
fiaddl
stc
lods
inc
nopl
ss
fcmove
mov
lods
cmp
inc
mov
aad
dec
inc
xor
fisttps
or
cmp
mov
in
cmc
and
imul
daa
outsl
sub
or
jle
in
in
hlt
jb
stos
add
cltd
inc
add
adc
adc
inc
ss
les
rcrb
xchg
loopne
popf
mov
mov
loopne
inc
adc
pushf
lret
jge
inc
cmp
lahf
mov
ret
lock
nop
inc
stc
mov
dec
out
xchg
jb
outsl
call
scas
leave
loope
dec
mov
fucomp
scas
dec
js
out
dec
lcall
jne
pop
add
add
js
or
imul
cmpsl
imul
lret
loope
xchg
imul
arpl
jns
loope
sbb
mov
push
inc
lahf
and
and
fwait
cs
mov
mov
inc
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
inc
loope
lods
push
jl
adc
adc
adc
mov
and
loopne
and
lock
stc
or
sub
js
adc
cmp
test
negl
pop
push
sub
mov
and
xor
cld
jnp
xor
mov
stos
test
or
test
mov
ret
out
sbb
push
dec
pop
sub
xchg
adc
mov
adc
mov
aad
leave
push
pop
sub
dec
imul
es
cwtl
idiv
pop
imul
or
lods
pop
nopl
lock
fcoms
dec
cltd
mov
cld
ds
jno
sbbl
sti
int
sub
leave
and
xchg
pop
data16
add
movsl
jo
xor
dec
adc
negl
xor
cmp
add
push
aam
repz
nop
outsb
jmp
xchg
ja
dec
push
mov
adcl
fcoms
jmp
pop
in
mov
out
mov
dec
rolb
push
add
mov
aam
cmpsl
xor
inc
lods
inc
pop
fst
dec
pop
movsl
or
lahf
leave
in
bound
push
push
mov
xlat
sub
and
lret
int
sbb
mov
mov
xchg
pop
push
jmp
xor
cmpb
adc
lahf
and
cmp
and
and
mov
dec
nop
pusha
sbb
imul
mov
gs
mov
lds
jno
ljmp
cmc
test
xchg
ja
jmp
xor
cmp
fisttps
fdivrl
fisubs
push
mov
jl
mov
mov
insb
test
loop
in
jo
mul
jo
aam
cmp
aas
pusha
mov
mov
clc
bound
sub
rcr
jmp
popa
shl
adc
sub
out
xor
mov
xor
inc
jne
cwtl
fisttpl
mov
inc
cmpsl
int3
cmp
xchg
scas
jno
ret
ja
sbb
cmp
loop
dec
sub
push
mov
adc
mov
fcoml
cwtl
jmp
stc
jnp
iret
cmc
dec
pusha
pop
xlat
cmp
test
stos
pop
mov
std
mov
sbb
sbb
popf
mov
cmc
or
test
decb
bound
push
mov
inc
and
push
out
lahf
xchg
pop
sub
mov
jns
mov
lret
sbb
inc
pop
out
out
lea
jl
mov
jecxz
lea
mov
out
mov
adc
push
or
stos
add
cmp
mov
jno
xor
mov
hlt
test
add
enter
cmpsb
sahf
icebp
lods
mov
push
lods
sub
xor
xor
out
jl
mov
jns
fwait
jne
dec
inc
adc
jo
test
filds
in
ret
mov
inc
mov
dec
push
pop
movsb
out
in
xchg
jns
pusha
adcb
adc
cmp
and
ret
sahf
mov
cmp
cld
and
push
stc
int3
stos
jmp
dec
cmpsb
push
pop
sub
sub
and
orl
out
mov
push
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
jmp
je
adc
adc
adc
push
adc
test
or
mov
in
push
jo
jge
icebp
outsb
mov
arpl
outsb
sbb
iret
pop
dec
btl
lret
fisttpll
mov
mov
nop
dec
push
adc
repz
xchg
jecxz
arpl
xor
jl
out
xchg
rorb
in
sbb
pop
jg
inc
sbb
ret
sbb
test
insb
cwtl
or
mov
outsl
in
adc
cmp
dec
mov
cmp
mov
pop
cwtl
mov
xor
cmpsl
cmp
add
fidivrs
adc
ss
testb
xchg
push
scas
scas
jle
mov
adcl
ret
mov
adc
pop
sub
imul
imul
mov
movsbl
cs
jle
mov
push
jg
sti
scas
repz
inc
pop
pop
and
xchg
sbb
xchg
rcr
sub
mov
jbe
fdivs
loop,pt
addb
fldl
aad
inc
leave
jg
std
mov
lret
pop
inc
cmovbe
popa
pop
subl
xchg
aas
mov
jl
jno
cld
lret
test
push
fmuls
mov
in
cltd
ret
sub
push
scas
aas
jb
fwait
add
mov
dec
jae
not
ss
js
bound
cli
jb
int3
psadbw
stc
push
aam
add
pusha
jo
dec
icebp
data16
pop
sbb
adc
out
mov
test
jno
cmp
mov
lock
cltd
push
out
cmp
rcrb
dec
scas
jno
out
or
pop
test
or
mov
inc
and
push
std
xchg
adc
call
and
stos
mov
pop
adc
adc
in
lret
mov
sbb
or
aad
cmp
std
lcall
lahf
push
inc
cmpsb
into
or
xchg
insb
mov
or
push
test
xchg
test
mov
mov
fmulp
xchg
adc
test
inc
outsb
sub
idivb
leave
or
lahf
stos
test
adc
add
xchg
sbb
or
sar
hlt
enter
test
ja
cmpsl
mov
test
add
fnsave
stc
xchg
mov
add
ret
stc
xlat
andb
in
xchg
push
xchg
push
xor
cld
scas
adc
add
pop
scas
into
dec
in
mov
jl
sbb
mov
out
add
in
cmp
mov
arpl
mov
pxor
shrl
cltd
int
sub
insb
popf
rolb
push
xchg
ja
popf
xor
in
and
cmpsb
mov
scas
leave
call
jge
fcoms
pop
pushf
rclb
popf
inc
or
adc
shll
xor
loop
data16
mov
cmpsb
leavew
gs
ret
add
in
jo
or
sub
xchg
adc
adc
add
pusha
insb
cmp
stc
sarl
in
in
stc
sbb
inc
pop
push
pop
bnd
sbb
sbb
sub
popa
scas
mov
xchg
adc
test
sbb
and
xor
cmp
mov
adc
icebp
rorl
daa
or
mov
cmp
adc
lcall
push
sub
je
inc
add
xor
bnd
aam
fisubrl
mov
mov
fwait
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
ljmp
adc
adc
adc
inc
inc
or
dec
cmp
mov
lock
mov
pop
call
lahf
push
lret
adc
xor
sbb
xchg
add
daa
icebp
xchg
enter
push
jbe
mov
sbb
out
add
imul
data16
mov
xlat
mov
cmp
mov
xchg
adc
inc
pop
dec
stc
pop
cltd
ja
jnp
cmpsb
mov
jge
clc
mov
mov
inc
fcoml
push
call
icebp
pop
cmp
in
push
adc
mov
inc
xor
divl
ljmp
into
add
inc
xor
dec
stos
push
add
sbb
jle,pt
push
pop
out
xor
pop
imul
bound
aas
mov
mov
xchg
add
cmpsl
incb
cmp
roll
adc
cs
sub
xor
ret
lret
test
xchg
sbbb
inc
mov
mov
call
sahf
or
or
xor
mov
xor
xchg
inc
jecxz
insb
push
cmp
fucomi
daa
push
mov
push
push
mov
fwait
or
loope
and
adc
inc
add
cmp
xor
mov
cltd
dec
and
sub
cmc
jl
pop
pop
mov
jno
mov
jecxz
aad
movsb
call
lea
out
and
in
jo
push
add
push
or
push
jno
sbbl
pop
movsb
fsts
push
jg
jb
imul
addb
lods
sbb
pop
fadd
into
add
out
or
sarb
dec
sbb
dec
sahf
jle
xchg
out
jl
sahf
sbb
add
inc
mov
shll
in
xlat
xchg
mov
scas
insb
fnstcw
repnz
cmpl
mov
xor
mov
dec
adc
ja
push
xchg
jnp
imul
sub
cwtl
addr16
loope
cmp
dec
sahf
add
pop
xchg
mov
nop
sbb
out
and
fcompl
imul
xchg
inc
or
push
iret
in
mov
lahf
mov
ds
nop
adc
into
negl
cmpsl
xchg
pop
inc
adc
loope
push
push
movswl
xchg
aas
gs
movsl
inc
push
adc
pop
sub
cmp
jl
ljmp
loop,pn
adc
in
ljmp
and
in
push
xorl
xchg
push
aaa
pusha
cli
jbe
nop
jp
insb
insb
xor
ljmp
cmp
loope
fisttpl
test
andb
jle
lcall
rorb
mov
sbbl
sarb
inc
sbb
xor
das
push
and
sbb
mov
and
lret
push
lahf
cmc
int3
imul
jp
push
mov
fistpll
add
jge
out
in
xchg
lods
rcrb
cmpsl
test
inc
mov
push
adc
out
push
xchg
mov
fdivrl
mov
adc
xlat
add
cmc
or
cmp
daa
xchg
push
pushf
jne
push
mov
lods
test
es
ret
and
bts
push
call
ds
cmp
sbb
idivl
jg
mov
jbe
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
xchg
adc
int
adc
mov
add
pop
insb
into
jp
mov
mov
push
xchg
push
mov
pop
pop
in
in
sub
sub
add
outsb
jge
and
xchg
add
mov
mov
mov
lret
jae
in
lret
lret
and
or
lret
xor
xchg
push
ss
lret
pop
aad
mov
xchg
sub
ljmp
cld
negb
mov
inc
mov
notb
aad
jge
push
push
stos
jp
cmp
xor
cli
push
popa
shl
mov
js
add
bound
data16
or
sub
mov
fwait
out
xchg
loope
scas
pop
cmp
test
leave
push
imul
dec
pop
xor
loopne
mov
bswap
pop
inc
mov
xor
fcomp
sarl
and
push
mov
mov
fdivrl
pop
pop
inc
imul
push
push
jge
out
mov
dec
mov
lret
fsub
leave
cmp
stos
stc
jmp
jo
ja
stos
iret
sbb
cltd
lret
add
lods
lods
push
imul
dec
jmp
jnp
xchg
js
cmp
lcall
xchg
lds
outsl
add
jecxz
and
sub
push
icebp
arpl
sbb
in
js
and
xchg
rclb
adc
sub
mov
xor
mov
sub
bound
loopne
cmp
cmp
mov
mov
pop
push
repnz
cmp
jmp
cmp
inc
inc
push
je
shr
out
repz
jae
and
pop
insl
outsl
xorb
adcl
push
roll
test
imul
sub
add
cmc
fs
push
cmp
scas
or
out
ljmp
add
add
cwtl
jmp
insb
xlat
sub
in
mov
push
inc
dec
mov
adc
jns
inc
adc
mov
mov
outsb
jge
aad
fldl
pop
mov
notb
mov
mov
fdivrl
cmp
mov
sbb
dec
rolb
fcoml
jo
xchg
test
popa
std
sbb
cmc
fsts
xchg
mov
jmp
lcall
push
dec
inc
or
insl
decb
mov
pop
fidivrl
fcompl
or
imul
xchg
ret
jmp
sti
jl
arpl
jg
cmp
stos
aaa
jecxz
sub
mov
outsb
dec
and
rolb
cld
sarl
cmpsl
fdivrl
push
push
mov
repnz
pop
mov
mov
pop
cmpsb
jne
add
jne
lret
pop
fldenv
popl
cli
add
mov
add
xchg
and
decb
outsb
pop
lret
hlt
or
and
ret
gs
fsubrl
push
pop
in
aaa
loope
lea
mov
icebp
pop
and
inc
dec
mov
test
ss
xchg
jbe
daa
or
negl
popf
leave
dec
std
mov
xchg
cltd
test
cmc
cld
imul
mov
xor
shlb
comiss
ret
lea
jl
cmp
lods
add
sbb
or
push
movsl
pop
lret
lahf
cmc
iret
cmpl
jmp
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
cmc
mov
adc
adc
popa
loopne
loope
aad
push
bound
pop
or
sbb
cmc
lret
dec
sbb
fnstsw
push
or
push
mov
fstpt
cmc
jp
in
pusha
adc
pop
dec
das
popf
xor
shll
aad
inc
mov
pop
outsl
data16
add
dec
push
bound
sbb
shr
aas
cmp
ret
lods
jge
ret
xlat
adc
xchg
inc
push
sahf
or
int
lock
push
sbb
call
add
jge
nop
cmp
xchg
pop
in
rclb
jecxz
inc
cmp
in
movlps
imul
cmp
test
insl
loope
mov
push
xchg
xor
xor
lret
aam
xor
push
add
mov
sbb
xlat
or
cmpsb
or
sbb
repnz
scas
lret
push
sbb
xchg
mov
out
dec
lock
clc
loopne
jae
rolb
aam
icebp
and
xlat
mov
lahf
negb
push
mov
stos
mov
add
in
and
and
push
dec
xor
cmp
insb
pop
sbb
xlat
dec
lcall
cmpsb
jle
lret
sub
insb
xchg
mov
scas
jle
and
fldt
cmpsb
and
fcompl
push
insl
sti
mov
insl
repnz
cmp
lock
pop
lea
sub
dec
sbb
add
mov
sahf
and
mov
iret
push
rcrb
mov
ret
sarb
mov
jp
pushf
xchg
in
fdivs
adc
lea
or
sub
in
ret
les
insl
insl
cmp
out
mov
mov
insl
sbb
fsub
push
xchg
lcall
rorl
xor
fstl
into
fiadds
repz
sub
sub
enterw
ja
inc
jo
ds
pop
aam
push
xchg
push
lea
cmp
push
ss
xchg
mov
mov
cs
mov
xor
sarl
insl
std
push
inc
pop
mov
pop
pop
int3
dec
test
dec
iret
jp
pop
xchg
ret
in
aaa
outsb
adc
dec
pushf
repz
jne
cmp
nop
and
and
daa
mov
dec
addr16
pop
adc
lahf
ret
lds
pushf
mov
pop
pop
cmp
or
in
in
fld
mov
inc
in
mov
test
lea
insl
mov
addr16
dec
movsl
mov
add
sbb
xor
lret
or
inc
or
rorb
and
aam
pushl
push
cmovae
jmp
stos
shl
mov
loopne
jecxz
shl
mov
xor
xchg
add
cmp
dec
data16
jl
enter
adc
loop
adc
jg
sahf
outsl
data16
popa
mov
mov
xlat
inc
inc
fwait
push
roll
test
repnz
or
push
jae
icebp
xchg
out
sahf
pop
aas
xchg
les
cli
in
pop
inc
xchg
ficompl
ja
pop
test
stos
push
daa
pusha
shrb
or
outsl
xorb
sbb
stos
out
xor
cmp
sbb
lea
or
aam
stc
shr
loopne
xchg
pop
insb
iret
or
inc
stc
hlt
lods
test
pop
mov
jnp
sub
fists
lods
rol
pop
sbb
sub
jmp
pop
jmp
push
ljmp
dec
mov
ss
iret
sub
loope
cld
lds
push
sub
pop
sahf
idiv
push
jle
inc
loope
cli
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
mov
pop
adc
xor
adc
mov
push
pop
dec
xchg
xchg
pushf
jmp
dec
imul
jle
push
mov
aam
insb
cmpsb
icebp
test
cmp
lcall
iret
push
xchg
movsl
cld
jp
or
mov
jb
lock
outsb
xchg
rclb
or
lahf
divl
sbb
xchg
insb
pushl
xchg
rorl
xchg
jae
fldl
cmc
fistpl
sub
bound
lahf
out
fisttpll
jg
adc
scas
mov
sub
dec
adc
subl
mov
sub
lret
pop
or
push
cltd
add
in
nop
lods
adc
mov
xchg
sbb
stos
faddl
cmp
stos
cmp
xor
dec
mov
scas
jnp
in
sbb
ss
mov
lods
test
cmp
lcall
rorb
cmp
pop
repnz
push
mov
sbbl
jge
mov
mov
jnp
mov
pop
inc
mov
add
mov
test
sub
dec
cmp
lret
xchg
faddp
inc
ficompl
out
imul
push
pop
mov
cmp
add
outsl
clc
fadd
xchg
mov
push
cmpsl
push
cmp
arpl
mov
or
inc
outsl
xchg
mov
ljmp
mov
testb
or
sub
push
pop
sbb
adc
jecxz
mov
push
test
rcl
and
xor
ret
mov
push
inc
test
jp
adc
js
jne
aas
push
push
jne
or
mov
push
jmp
icebp
inc
jle
aam
aad
xchg
sub
rol
push
xor
xor
sbb
lock
fisttps
ja
repz
jno
cs
inc
and
sarl
inc
mov
les
cld
ds
sti
aam
out
sti
mov
test
inc
rorl
loope
jmp
mov
xchg
adc
or
inc
shrl
jg
shrb
sbbb
add
push
iret
les
xor
js
mov
add
push
sbb
and
xchg
jmp
clc
inc
jae
pop
jl
lahf
mov
in
jne
xor
scas
divl
fidivrs
pop
nop
dec
inc
in
cmp
stos
addr16
mov
cmp
icebp
push
push
or
std
cmp
mov
scas
or
fwait
incb
jecxz
inc
add
adc
idivb
and
sub
inc
jbe
daa
dec
stos
test
es
test
loope
leave
mov
mov
xchg
push
scas
push
jo
inc
mul
mov
inc
or
sub
push
pusha
xchg
rcll
imul
push
inc
ja
pop
inc
xchg
imul
js
lahf
jl
push
mov
push
push
mov
divb
mov
insb
sbb
addr16
mov
ret
cmp
js
push
or
inc
js
bound
inc
idivb
enter
dec
dec
xor
imul
xchg
movsb
scas
lahf
mull
cmp
jg
push
add
and
test
xchg
ret
out
sub
dec
xor
dec
outsb
sbb
jl
jbe
shlb
and
es
mov
xchg
inc
lahf
sub
jle
lahf
mov
test
adc
arpl
incb
adc
and
inc
pop
mov
fidivs
fistpll
aaa
mov
sub
dec
sbb
add
and
lods
roll
xchg
addr16
add
int
into
jns
mov
cmp
jo
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
sti
rep
xor
adc
adc
adc
adc
in
mov
arpl
add
aad
rclb
and
in
inc
xor
fcmove
dec
pop
cwtl
cs
dec
daa
repnz
popa
sub
scas
pop
xchg
pop
loopne
insl
rorl
sbb
mov
std
mov
mov
in
leave
xlat
pop
mov
dec
mov
xchg
push
add
xchg
dec
aas
mov
aam
adc
ss
mov
pushf
idivb
xchg
aaa
xor
test
and
sbb
jmp
cmp
cmc
cmp
ret
mov
push
and
mov
adc
in
mov
sub
xchg
in
pop
lds
les
filds
cmc
sti
mov
leave
addr16
test
clc
sbb
inc
jge
scas
lds
adc
dec
xchg
xchg
xor
sbb
add
mov
xchg
cmp
xchg
mov
mov
int
stos
lods
mov
sbb
jns
sub
lock
xchg
in
mov
dec
mov
or
sarl
mov
jae
in
adcb
push
addr16
mov
aam
pop
ljmp
jo
out
aas
xor
enter
xchg
xlat
pop
int
pop
pop
jns
sub
xor
and
lret
jno
xchg
adc
faddl
das
mov
mov
pop
mov
mov
jp
mov
arpl
ja
repnz
adc
imul
loop
mov
push
daa
or
in
outsb
dec
sbb
into
jno
cwtl
mov
ja
or
pop
mov
mov
dec
pusha
mov
cli
notb
jbe
lcall
mov
xchg
cmpsl
sub
ret
cmp
clc
sbb
inc
lahf
bound
arpl
and
pop
bound
fs
mulb
lahf
stos
jp
fadd
inc
cmpsl
mov
fstpl
popf
int
addr16
mov
mov
repnz
jmp
lcall
jb
jge
es
lods
imul
fsts
and
shlb
fldt
sbb
test
lahf
jg
or
xor
mov
imul
or
sahf
jb
mov
ja
push
add
ret
cli
xchg
stos
je
test
mov
movsl
mov
push
mov
mov
sarb
and
imul
out
out
mov
stc
mov
sahf
scas
pop
hlt
jp
dec
ss
insb
mov
stc
add
mov
adc
rcrl
ljmp
addr16
mov
ljmp
adc
insl
sub
out
lret
cld
roll
loope
jno
cmp
mov
test
sub
call
xor
dec
repz
xchg
pop
cltd
incl
mov
mov
dec
in
pop
pop
mov
mov
and
into
mov
daa
push
push
dec
jo
sbbb
xor
mov
cs
mov
outsl
add
xchg
xchg
nop
mov
sbbl
jmp
mov
inc
jg
pop
outsl
bound
xchg
sub
xor
mov
in
sub
repnz
mov
call
shrb
arpl
mov
fidivs
cli
mov
dec
or
rcr
xchg
dec
cs
mov
push
lahf
jmp
adc
or
xor
leave
cli
mov
adc
push
negb
sub
lock
nop
jg
hlt
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
push
mov
xor
adc
sub
adc
sarb
fcompl
shlb
movsb
jo
ret
mov
stc
pop
push
pop
push
sti
mul
sub
fwait
enter
pop
lret
and
sbb
xor
inc
or
or
outsl
test
and
test
test
or
arpl
mov
mov
add
out
pop
sbb
or
dec
xor
mov
add
stc
sub
sub
jg
xchg
sbb
adc
inc
pop
insb
lahf
xorb
adc
jg
lret
xor
ret
test
dec
pop
mov
aam
inc
inc
sbb
dec
cs
xchg
mov
jmp
addr16
fildl
lret
add
sbb
imul
lds
ficoml
jae
lods
les
adc
sbb
test
fldl
rol
aas
pop
and
pop
fsub
xchg
mov
pop
mov
inc
hlt
cmp
lret
inc
mov
mov
into
fstl
cwtl
adc
push
inc
jnp
leave
imul
push
sti
push
cld
sbb
push
adcb
adc
imul
movsb
addr16
bound
xor
aaa
stos
and
adc
pop
mov
stos
push
mov
in
inc
lea
hlt
cmpsl
pop
adc
in
clc
push
mov
enter
and
xchg
xor
pop
mov
sub
addl
or
add
push
pop
je
addl
xor
gs
xor
push
ja
cmp
ja
in
dec
mov
jmp
inc
sbb
fdivrs
addr16
sahf
jns
lods
jae
ficomps
loope
mov
insl
insb
sub
xor
addr16
sub
inc
push
dec
adc
lods
dec
test
enter
ret
jnp,pn
mov
or
push
mov
and
jb
sbb
jb
mov
push
shrl
fistl
xor
mov
add
stos
dec
push
add
inc
lods
mov
scas
mov
cmp
pop
decl
sbb
dec
sub
sub
nop
adc
inc
mov
cld
fadds
push
adc
lods
lods
inc
push
xchg
std
pop
mov
test
xchg
scas
jle
inc
push
push
add
sub
or
sub
fldcw
cs
out
insb
data16
pop
mov
sub
loope
pop
aas
nop
cld
push
adc
aaa
add
inc
sbb
jecxz
test
push
mov
test
ss
push
fldt
rclb
sub
adc
je
jg
ljmp
iret
pop
movb
adc
cli
xchg
push
mov
scas
or
xchg
mov
push
pop
jp
pop
xor
lahf
shlb
into
lret
sub
out
test
mov
cwtl
iret
popa
jo
lret
dec
pop
enter
fxch
cs
gs
xchg
push
adc
add
xchg
lcall
scas
je
pop
pop
cmp
idivb
addr16
pop
jmp
jb
lds
mov
add
cmpsb
outsl
faddl
pop
sahf
lret
jp
xor
loopne
xor
mov
in
nop
push
xchg
adc
sbb
xor
cs
sti
fistl
ret
lea
int
popf
ss
sti
and
lret
push
add
mov
sbb
mov
sub
fidivrs
loop
orb
add
dec
in
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
idivl
shr
push
daa
rcrl
lcall
testb
sbb
daa
xor
stos
pop
and
stc
and
movsb
or
xchg
and
out
and
fmuls
xchg
ds
mov
inc
iret
dec
cmpl
repnz
int3
lret
sbb
in
js
mov
clc
xchg
inc
xlat
sti
lret
movsl
hlt
arpl
lcall
xor
js
sbb
push
jnp
sbb
loop
mov
or
or
stos
sbb
out
pop
pop
inc
movsl
mov
sbb
sub
imul
lret
and
lret
pop
sbb
sbb
cmp
arpl
std
dec
pusha
jg
mov
iret
jmp
stc
or
lret
lahf
push
test
pop
cmp
push
inc
mov
jno
dec
jnp
loop
push
adcl
mov
je
dec
dec
scas
adcl
and
std
sbb
xchg
out
xchg
pop
lea
out
adc
xor
sbb
insl
adc
das
orb
or
ja
jle
insl
add
mulb
sbb
push
lock
lds
adc
mov
es
mov
mov
jp
imul
jbe
dec
add
inc
icebp
mov
popf
popf
or
dec
lods
or
lret
scas
mov
iret
int
out
sbb
push
hlt
hlt
dec
in
jge
mov
inc
pop
shrl
test
insb
xchg
bound
inc
push
pop
js
cs
fiadds
push
add
inc
xor
adc
cmp
scas
push
repz
and
cmp
xchg
jnp
pop
shlb
in
into
inc
sub
je
pop
mov
mov
imul
add
inc
sbb
push
mov
mov
leave
out
iret
mov
push
push
add
leave
dec
push
mov
iret
mov
push
movsb
dec
repz
scas
xor
pop
pusha
add
inc
ljmp
jmp
in
rorl
inc
push
aas
jg
shrb
xor
cmpsb
adc
fldt
mov
jecxz
in
pusha
fcompl
pop
or
jno
in
out
lods
shll
gs
jb
xchg
test
mov
jae
call
fdivs
sub
outsl
subb
inc
mov
mov
mov
ret
mov
dec
adc
fildl
mov
int
test
push
pop
jb
pop
mov
sbb
inc
xor
pop
std
add
dec
jecxz
mov
mov
dec
xchg
push
out
popf
push
das
and
imul
push
mov
lods
push
sbb
call
popf
pop
push
in
stc
gs
in
sub
imul
add
out
inc
push
xor
lret
push
inc
int3
imul
icebp
mov
nop
popf
mov
or
xor
data16
into
or
in
andl
rorl
int3
xchg
xchg
jae
out
push
xchg
in
cmp
enter
int
shl
jnp
fdivrp
or
mov
push
and
xchg
int3
sahf
and
xchg
popa
xor
popf
push
adc
ficoms
fisubrs
lock
pop
pop
push
fwait
lret
pop
mov
leave
sti
lea
or
push
and
vminpd
mov
sarl
mov
adcb
ljmp
ds
imul
fs
cmpsb
mov
lcall
and
cmp
jle
xor
cld
push
pop
imul
fnsave
pop
add
mov
add
leave
mov
jb
sti
fsts
jmp
and
push
call
shll
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
jo
jnp
adc
xor
adc
pop
out
xchg
loopne
adc
lods
cmp
nop
pop
mov
xor
dec
stos
inc
mov
jo
std
jmp
dec
cld
shll
push
jo
pop
in
adc
das
adc
push
das
push
scas
and
aas
std
mov
and
mov
or
ret
adc
lock
xchg
xchg
mov
nop
scas
or
push
xchg
popl
mov
fsubl
cli
pop
push
dec
cs
cwtl
mov
adc
inc
or
imul
sbb
mov
dec
and
push
mov
outsb
push
sbb
cmc
sub
or
inc
dec
sti
mov
push
dec
mov
addl
fmuls
leave
mov
lcall
add
xor
sub
cmpsb
mov
movsl
lret
jnp
or
xor
aas
jns
xchg
xchg
test
bound
or
and
pop
or
in
mov
in
pop
scas
jnp
sub
adc
xchg
test
jmp
push
lcall
ss
dec
pop
sub
out
out
and
mov
js
sbb
and
mov
pop
imul
lret
push
or
cmp
add
and
pop
push
nop
xor
addr16
jnp
daa
mov
js
adc
add
add
push
xor
daa
arpl
fildl
inc
stc
scas
jbe
cmc
inc
cmc
push
or
mov
fsubrs
push
mov
sub
and
jns
outsl
adc
mov
test
sti
adc
das
lock
imul
arpl
and
insl
insb
mov
mov
push
test
dec
pop
jno
xor
push
pop
add
ficompl
sub
cmp
pusha
test
mov
jnp
and
popf
wrmsr
sbb
cmp
add
adcl
test
push
je
test
lea
call
lret
ljmp
add
pop
mov
pop
lods
mov
subb
mov
lahf
adc
test
sahf
jp
adc
mov
sub
jge
mov
cmp
subb
fimull
mov
inc
aas
xor
gs
sbbb
cmpsb
mov
cmpsl
shrb
jbe
imul
fsubl
cmp
data16
inc
mov
aad
push
fiadds
push
stos
in
xchg
pushf
mov
nop
cs
test
orl
and
lock
in
sub
arpl
mov
mov
cmp
xlat
mov
add
repz
into
mov
shlb
xchg
jae
loopne
sbbl
aam
mov
mov
insl
or
in
add
mov
adc
std
mov
je
mov
or
mov
push
scas
ret
in
sbb
inc
xchg
mov
repz
or
lods
jle
mov
incb
or
mov
jno
mov
imul
test
jae
movb
jns
std
mov
push
jp
rolb
jmp
and
adc
out
mov
adc
cmp
and
or
adc
mov
cmc
xchg
int3
test
inc
leave
mov
jo
repnz
mov
mov
aad
in
mov
sarb
nop
out
pop
mov
add
rorl
mov
dec
sub
mov
adc
fldt
xlat
mov
addr16
adc
outsb
mov
incl
ret
std
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
mov
ljmp
jns
fwait
sarb
sti
push
or
or
push
mov
sbb
jg
jbe
in
into
imull
push
daa
psrad
xchg
add
cwtl
and
jle
ficomps
pop
pop
test
aad
imul
xchg
or
and
test
addr16
aaa
dec
add
sub
in
mov
and
movsb
pusha
mov
push
inc
xor
imulb
mov
pop
subl
cmpb
xor
shrl
outsl
or
notl
and
jg
sbb
mov
or
fiaddl
mov
nop
mov
push
in
flds
xchg
ljmp
cmpsl
cmp
in
mov
cmpb
call
cmc
cwtl
loope
push
and
mov
aad
or
or
inc
repz
mov
fwait
sbb
lods
or
pusha
vmread
jmp
pop
mov
das
xor
push
pop
jmp
push
inc
xchg
push
fidivrl
loop
sar
cmp
sbb
scas
and
dec
jmp
andl
rcl
push
aas
mov
cld
xor
lods
imul
sbb
inc
jmp
jo
dec
addr16
iret
pop
xor
lret
outsb
push
pusha
fildll
scas
filds
push
pop
pop
mov
mov
push
sbb
out
mov
pop
les
xchg
scas
outsl
inc
inc
lods
pop
icebp
xor
push
js
bound
aas
jmp
bound
in
xor
mov
enter
addr16
xchg
pop
gs
jmp
pop
jo
pop
int
shl
sub
fdivrp
outsb
clc
subb
imul
dec
mov
sub
les
test
mov
addr16
pusha
cmp
mov
jl
les
push
pop
in
sti
pop
push
addr16
repnz
push
sub
out
mov
sbb
pusha
mov
push
or
add
fidivrs
xchg
xor
lock
push
outsb
popa
ja
dec
outsl
or
xor
xchg
ret
pushl
scas
inc
fstpt
push
aaa
pop
cltd
mov
sbb
sbb
orb
rorl
dec
dec
icebp
out
fwait
push
fistps
shll
ja
push
lret
jno
pop
sub
inc
sub
dec
test
rcll
and
cmp
les
mov
cmp
popa
test
scas
dec
sti
inc
push
fs
mov
lret
adc
xor
lret
adc
cmp
mov
cwtl
sbb
push
fs
fwait
imul
repnz
pop
xchg
aaa
cmp
out
stc
aad
cltd
mov
pop
adc
stos
or
cmp
adc
nop
cwtl
or
in
mov
lea
pop
xchg
ds
xchg
std
in
jae
pop
std
mov
sub
es
insb
mov
fstps
rclb
sbb
xchg
add
cmp
dec
push
adc
jnp
inc
sarl
dec
fisttpll
sub
mov
inc
lahf
loopne
xchg
sub
loopne
jne
gs
dec
jbe
mov
jl
int3
arpl
jbe
fnsave
lods
test
or
les
fadds
fstp
or
outsl
dec
jnp
mov
out
add
pusha
outsb
inc
das
movsb
jle
fadd
shrl
jmp
loopne
push
fdivrs
adc
ret
dec
add
inc
dec
sti
lods
mov
or
dec
xor
shll
xchg
test
sbb
call
inc
xlat
mov
shrd
xor
jmp
mov
popa
lcall
adc
xor
adc
xor
pop
xor
xor
xchg
test
xchg
bound
jns
cwtl
mov
sar
cltd
push
or
sbb
les
jbe
repnz
dec
push
mov
sub
rorb
pop
outsb
test
jg
loop
push
add
shlb
mov
add
out
mov
pop
setbe
cmp
scas
dec
pop
cmp
mov
adc
adc
mov
pop
pop
cmc
jl
mov
lret
adc
test
sub
mov
jmp
push
lock
imul
ljmp
pop
repz
out
xchg
add
jle
mov
inc
xchg
dec
mov
adc
lods
cmp
pop
mov
xor
imul
test
xlat
xlat
jnp
rorb
cmp
jbe
and
scas
divl
inc
sbb
movsb
and
mov
adc
or
test
pop
mov
cmpsb
mov
fisubs
jp
adc
mov
in
movsb
int
lret
lcall
je
fsubs
test
shrl
inc
test
imul
push
mov
dec
jo
daa
lods
lock
inc
sub
dec
push
out
stos
sbb
jnp
sub
jge
inc
lret
mov
lret
dec
cmp
dec
push
adc
pop
xor
out
rcll
fdivs
ja
ret
ljmp
subl
pop
inc
pusha
mov
lret
in
xchg
xchg
inc
adc
hlt
mov
xor
xchg
sbb
movsl
pop
test
xlat
mov
sbb
and
outsl
mov
xchg
xor
addr16
imul
iret
dec
sti
lcall
scas
das
call
fs
sarl
out
xor
mov
outsl
lds
xor
xchg
xlat
stos
pop
push
lret
pop
xor
sbb
subb
popa
push
jge
adc
xchg
adc
shld
inc
pop
gs
testl
mov
add
leave
mov
jg
pop
je
push
data16
insb
dec
sbb
dec
fsubs
fmuls
inc
daa
in
ja
aad
iret
cmp
mov
hlt
std
and
loopne
pop
mov
dec
mov
incl
mov
mov
sub
test
mov
loop
ret
push
pop
fcom
loope
sbb
dec
cld
mov
mov
pop
cmp
fdivl
movsb
mov
mov
push
js
and
pop
cli
cld
xchg
and
xor
sbbl
dec
lret
push
add
pop
push
mov
xchg
sub
push
jg
mov
xchg
push
jp
push
fdivrl
add
cwtl
stos
or
out
lahf
stos
lods
icebp
add
sbb
lret
insb
sub
test
cmpsb
mov
sub
sbb
mov
pop
fs
pop
lds
repnz
insl
enter
xor
add
dec
jp
out
pushf
ds
and
add
sbb
insb
imul
dec
shr
ljmp
inc
ljmp
jmp
int
enter
push
pop
adc
dec
gs
subl
rorl
dec
mov
jl
mov
xor
push
loope
mov
cltd
loope
aas
ljmp
cmp
fcmovu
idivl
and
js
repnz
out
dec
cmp
mov
jl
test
add
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
adc
adc
movlps
xor
xor
pop
icebp
mov
movsb
data16
pop
cmpl
jg
sbb
dec
jmp
in
mov
or
lds
add
or
jne
mov
mov
push
pop
dec
fisttpl
sbb
fcompl
push
iret
adc
fisubs
push
sbb
xchg
pop
movsb
ret
stos
test
sub
push
or
mov
fsqrt
adc
inc
std
fstp
pusha
pop
jo
jns
jno
std
sbbl
pop
pop
jl
push
repz
sbb
sub
jge
mov
bnd
sbb
sahf
cli
lahf
inc
fnsave
jae
or
js
push
cmp
orb
inc
push
js
and
and
mov
jge
adc
inc
xchg
sbb
les
adc
int
inc
xor
push
js
int
dec
mov
mov
clc
packsswb
or
or
repz
xchg
add
enter
cwtl
add
je
cmc
add
dec
in
insl
std
das
cmp
mov
subl
lcall
fs
bnd
stos
xor
hlt
jnp
int3
jge
dec
ljmp
cmc
lods
xchg
pop
movsb
sub
insl
gs
push
pop
adc
inc
outsb
rorb
fs
rorl
mov
pop
mov
mov
cmp
sbb
gs
mov
mov
insl
sub
das
mov
adc
and
or
dec
mov
jnp
dec
inc
pop
inc
xor
pop
xlat
leave
sbb
nop
roll
jo
jo
add
fcmovne
test
sub
call
imul
in
xchg
psraw
imul
lods
cmpsl
jge
mov
out
add
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
lcall
adc
movlps
push
daa
aas
xor
stos
jp
test
xlat
push
mov
inc
adc
sbb
sub
cmp
hlt
das
mov
jo
ficoms
cmc
lcall
or
rol
je
andl
call
lea
inc
loop
pop
test
dec
aad
enter
jo
sbb
mov
and
adc
fs
sti
scas
sub
cmc
pop
inc
sbb
ret
xchg
sbb
pop
xchg
rcrl
arpl
adc
mov
popf
jb
mov
inc
pop
mov
pop
or
cwtl
push
dec
lret
mov
mov
and
pushf
and
int3
loope
pop
jno
push
aaa
stc
cmc
mov
jbe
sub
pop
fildl
enter
push
inc
fs
or
movsb
inc
or
ds
mov
rorl
pop
enter
xor
dec
dec
xchg
sub
leave
gs
mov
pop
push
push
mov
cwtl
jbe
fstpl
out
aaa
xchg
fcmovnbe
lret
pop
xchg
jl
xchg
pusha
lret
push
or
push
mov
roll
xor
fimuls
or
in
rcl
outsl
imul
sub
sarl
leave
sbb
stos
pop
imul
sub
fldcw
jp
movsl
inc
mov
push
cmp
push
pusha
decb
scas
sbb
rcrl
decl
pop
cwtl
pop
inc
xchg
sbb
xchg
xor
outsl
stc
dec
push
pop
adc
fsub
cs
jnp
out
dec
fidivrl
stos
notl
and
or
xchg
in
jl
jle
lods
je
mov
jno
enter
jmp
lods
xchg
jmp
pushf
lods
fwait
lahf
xchg
pop
out
or
fisubs
push
rcrb
push
jle
mov
adc
rcrb
popa
mov
popa
mov
jne
dec
mov
in
popf
cmp
push
lods
push
fstpl
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
nop
dec
mov
fmull
adc
xor
cmp
icebp
outsb
xor
and
jnp
lret
dec
ror
xor
bound
int
lock
fldenv
fucomip
subl
and
or
out
stc
enter
mov
sub
jecxz
lret
sti
ljmp
xor
sbb
mov
cmpsb
mov
fstl
sub
gs
iret
jmp
pusha
or
xchg
sbb
aaa
ffreep
cld
pop
in
outsb
les
ja
pop
push
xlat
movsl
xchg
loop
jbe
dec
popf
add
mull
ja
jl
rcll
enter
lcall
test
dec
push
mov
pop
popa
add
sub
aas
stc
cmp
lods
enter
push
push
mov
or
cli
cmc
lds
enter
jae
add
pop
ljmp
hlt
repnz
xor
pusha
mov
mov
mov
dec
push
sti
movsl
mov
adc
inc
pop
scas
pop
pop
pop
in
push
hlt
or
xchg
lret
movsb
inc
cmpsl
sbb
jae
jne
cmp
jg
in
xor
dec
mov
sbb
sub
ja
inc
lods
sub
aad
test
lds
bound
ficompl
adc
xor
and
adcl
imul
lods
sbb
mov
leave
loopne
or
push
mov
push
push
or
into
jg
cmpsl
add
jmp
dec
or
sub
out
mov
xor
jne,pn
ret
sub
inc
lcall
je
fildl
cmp
clc
in
xchg
movsl
scas
xchg
adc
cmp
jne
dec
jnp
push
sub
cmp
lods
or
leave
xchg
stos
pop
jo
call
xlat
andb
addl
cmp
lods
push
or
ja
pushf
and
add
inc
hlt
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
test
adc
movlps
pop
lahf
sbb
pop
pop
cmp
insl
mov
and
push
pop
jbe
adc
adc
stc
xor
lds
mov
jmp
insl
repz
scas
out
sub
in
js
jl
int3
fmuls
scas
inc
xchg
scas
pusha
cli
dec
hlt
sbb
pop
ret
cli
xchg
xor
push
or
jno
push
mov
sub
add
xor
pop
in
inc
shrl
push
ret
adc
sub
pushf
inc
jle
jne
leave
fsubrl
xchg
rcll
xor
iret
lds
in
mov
mov
inc
pusha
pop
movsl
ret
nop
xchg
jge
sub
jp
roll
aad
scas
or
inc
int
in
int3
daa
cmpsl
cld
jne
adcl
dec
out
dec
mov
scas
std
xor
repnz
adc
jle
fucomi
stc
jp
xor
mov
cmpsl
xchg
mov
stos
adc
sbbl
pop
xlat
push
pop
ljmp
test
adc
fsubrs
jp
movsl
cmpsl
push
idivb
daa
stc
cmp
ljmp
aas
ffreep
and
mov
cwtl
movsb
jns
aad
aad
cmp
mov
mov
xor
jb
leave
enter
aam
and
sahf
sar
xchg
pop
adc
xor
xor
or
sub
or
push
addl
push
or
dec
insl
mov
data16
incl
sbb
adc
sub
pop
out
and
leave
out
jns
cmp
and
cs
out
xor
pop
test
in
fnstsw
push
pop
adc
add
add
push
mov
enter
sbb
or
ret
pop
xchg
jp
dec
cmpsl
sbb
cli
jnp
dec
jno
add
xchg
push
dec
jnp
xchg
jle
xor
dec
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
dec
push
adc
movlps
roll
js
add
sbb
pop
pop
into
sbb
jmp
sahf
lret
mov
rorb
iret
je
mov
inc
jae
cmc
lahf
inc
rolb
in
mov
mov
and
xchg
lods
add
ficompl
and
sbb
enter
xor
jo
jle
mov
push
lock
lcall
fs
mov
lds
test
bound
adc
xchg
push
sub
sbb
test
sti
lret
popa
in
add
repnz
jo
popa
mov
fbld
mov
dec
cs
popf
fcomps
dec
rclb
or
sub
addr16
mov
arpl
std
es
lds
jnp
repnz
shll
sbb
ja
icebp
jbe
movsb
fs
sarl
push
dec
into
js
push
mov
mov
lods
inc
push
xchg
ljmp
insb
outsl
in
or
dec
push
mov
pop
lahf
ja
ljmp
jne
cmp
push
out
sub
cmpb
dec
aas
inc
jb
das
xchg
push
push
orl
or
movsl
sub
jno
push
nop
outsb
enter
xchg
les
loopne
xchg
jecxz
popa
push
push
hlt
aaa
jb
fs
insl
sub
jae
jg
push
or
dec
sbb
sbb
ljmp
imul
xor
push
xor
push
dec
stos
movsl
adc
cmpsl
inc
cmp
dec
push
repnz
call
push
mov
ret
test
xorb
pop
fs
mov
pop
jo
jb
cmp
hlt
pusha
es
xorl
jno
inc
jp
std
repnz
lret
call
and
jecxz
sbb
lret
sbb
mov
shll
mov
push
jge
pushf
push
pop
test
pop
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
sbbl
cmpsb
jl
pop
lock
jb
ja
mov
jg
test
mov
mov
movsb
cmpsb
inc
mov
xchg
lods
jne
lea
bound
das
loope
add
xchg
das
cmpsl
sub
bound
dec
icebp
push
outsl
push
push
jle
fs
pop
lcall
fcmovnbe
mov
pushf
dec
data16
mul
ret
xor
sbb
aam
dec
repnz
pop
cld
or
fnstenv
jae
adcl
jno,pn
mov
cmp
xchg
std
sub
repz
subl
enter
inc
jno
fiaddl
mov
adc
js
arpl
mov
sub
int
push
xlat
mov
push
das
or
lods
aad
sub
push
mov
sub
mulb
insl
dec
add
std
dec
mov
aad
mov
enter
lods
push
jno
jmp
roll
lea
inc
sub
inc
pop
or
in
scas
mov
mov
ss
add
rorb
sub
jg
cmc
add
ds
or
xor
lret
cwtl
daa
data16
pop
shll
mov
push
sub
push
xchg
addb
aam
inc
xor
mov
rcrb
pop
pop
daa
mov
sub
and
popf
cmpsl
mov
jg
jbe
pop
pop
sbb
loopne
push
pop
jecxz
test
hlt
push
lock
ss
and
and
jg
xchg
mov
into
mov
je
mov
insl
xorb
xchg
mov
or
repz
insb
mov
out
xchg
xchg
fdivl
xlat
out
stos
loope
mov
test
pushw
cmp
shlb
push
lea
test
sbb
cli
xchg
inc
mov
shrl
mov
push
push
sub
cmpsl
rcrb
jge
cld
xor
outsb
push
icebp
cld
add
fwait
and
xchg
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
jnp
insb
jle
adc
fmull
adc
dec
mov
lret
xchg
movswl
imul
addr16
lret
sti
shrb
rcrb
jge
jmp
cld
jb
xor
inc
dec
inc
lret
lcall
lea
add
adc
push
pop
iret
leave
arpl
inc
ret
cmp
jp
add
leave
outsb
fdivrs
test
adc
cmp
mov
xchg
pop
xorl
jmp
cmp
pusha
push
and
cli
test
xor
fisubl
cmpsb
pop
imul
sti
scas
xchg
popf
mov
pop
xchg
and
pop
push
sbb
pop
mov
cltd
dec
stos
xor
mov
push
pop
stos
add
push
sahf
fwait
aad
push
call
cmpsl
sbb
pop
in
mov
std
and
fdivrs
mov
out
ret
cmp
arpl
sbb
aas
fwait
insl
push
adc
sub
jae
ss
xor
cmp
xlat
outsb
aaa
xchg
or
es
mov
push
lret
xor
lds
push
out
sahf
mov
daa
rcrb
xlat
inc
adc
add
scas
mov
jmp
pop
jp
inc
mov
bound
popf
mov
test
add
ret
call
clc
mov
test
mov
mov
jge
pop
mov
test
cs
mov
mov
cltd
aad
insl
add
push
pop
inc
lock
push
inc
xor
pusha
mov
fbld
mov
jp
pcmpeqb
movsl
test
push
xchg
pushf
movsl
out
add
insb
dec
mov
mov
pop
stos
lret
mov
mov
dec
mov
mov
fwait
int
dec
fs
insl
inc
rclb
test
and
aam
mov
pop
xchg
shlb
test
call
leave
mov
xor
fwait
lahf
test
mov
jecxz
adc
mov
ljmp
xchg
sub
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
scas
push
mov
gs
pop
push
sbbl
xchg
ret
jae
jl
fwait
test
push
mov
repz
daa
fyl2xp1
test
mov
pop
cld
mov
fsubr
pop
and
mov
aad
and
pop
and
xchg
sbb
in
bound
movsl
jecxz
jp
jnp
cmp
inc
fistl
inc
adc
xor
sub
mov
pushf
jb
dec
add
out
push
popa
sub
sbb
mov
sbb
lock
out
mov
pushf
cmpsl
add
rcl
mov
pop
imul
iret
mov
sub
sub
mov
dec
xor
mov
sti
mov
cwtl
mov
loopne
sub
outsl
pop
mul
fstpt
xor
mov
mov
cld
stc
push
stos
xor
add
xor
popa
and
not
inc
addr16
fs
int
mov
push
into
add
jp
cmp
xchg
dec
pop
xor
jne
inc
lock
xchg
call
movsb
cmp
es
cmp
mov
cmpsb
fadds
fdivrs
aas
push
mov
outsl
stos
pop
inc
clc
ja,pt
push
arpl
in
mov
into
jne
jge
lahf
sbb
inc
jecxz
sub
out
inc
mov
out
mov
iret
sub
adc
test
pop
ljmp
lock
sarl
mov
into
mov
mov
mov
mov
pop
xor
fwait
shl
aad
test
pop
push
inc
push
jae
mov
rol
daa
rcll
lods
xor
inc
and
cmpps
pop
xlat
pop
cs
cmp
imul
cmp
lret
lea
hlt
sub
cmp
testl
and
and
adc
push
dec
and
pop
push
ss
test
inc
out
notl
and
enter
std
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
pushl
jbe
roll
sub
pop
jne
mov
insb
add
push
stos
aad
addl
gs
mov
xlat
movsl
mov
push
xchg
mov
mov
sub
enter
rclb
movsb
std
xchg
mov
xchg
jmp
jne
je
call
pop
rclb
add
outsb
or
aam
inc
lret
int
jae
mov
call
inc
dec
sbb
sbb
imul
fwait
fwait
adc
xor
or
xlat
shr
dec
xchg
inc
popf
xor
jmp
inc
cmpsl
cld
mov
imul
cmp
jp
inc
and
ja
into
les
addb
idivl
push
inc
fisubrl
repnz
dec
sti
push
enter
stos
fs
and
arpl
cmovl
orb
mov
movsb
fwait
clc
ret
imul
pushf
adc
xchg
movsl
lods
dec
mov
addr16
out
mov
lods
lcall
fldz
dec
ret
pusha
fadds
or
or
pusha
into
pop
xor
xchg
repz
cmp
mov
xchg
push
mov
daa
mov
test
pop
jl
aas
jle
ss
xchg
out
arpl
dec
and
xchg
push
dec
jbe
lret
add
shlb
shr
outsb
xor
mov
jp
or
arpl
fcoms
xlat
es
f2xm1
insl
cmp
bound
and
adc
add
pusha
js
fdivl
and
inc
xor
jne
mov
arpl
and
jne
pop
mov
test
jne
stos
push
hlt
mov
mov
jnp
pop
test
fists
mov
hlt
movsl
sub
xchg
out
xchg
sti
sub
dec
orl
dec
ljmp
test
test
sahf
or
orl
bound
and
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
mov
adc
fmull
adc
mov
orl
ffree
rolb
movsl
push
lcall
mov
fadd
mov
dec
xorl
out
push
outsb
sbb
lods
and
add
aam
mov
in
lods
pop
adc
dec
rclb
les
inc
jmp
and
cmp
sub
sbb
or
jecxz
mov
jp
dec
out
js
enter
push
out
or
cmp
cli
and
and
adc
add
sub
xchg
fs
dec
icebp
jle
sbb
jne
in
imul
adc
cmp
mov
jmp
add
sub
fadd
sbb
ficoms
jl
inc
fucomp
outsl
sahf
test
je
fists
mov
je
fcoml
in
call
jle
je
cmp
ljmp
xor
cltd
js
add
adc
push
add
clc
sar
mov
dec
sub
loopne
rorb
test
add
sar
mov
lret
ret
enter
pop
cmp
xor
sahf
outsb
mov
adc
xchg
jns
jae
xchg
pusha
sbb
add
loopne
pusha
mov
repnz
aas
movsb
sbb
pop
adc
add
pop
push
lock
es
sbb
push
adc
pop
hlt
push
mov
das
jp
movsl
sbb
add
push
imul
outsl
xchg
xchg
fdivrl
lock
adc
jge
add
frstors
cmp
push
xor
les
mov
pop
cmp
or
lock
inc
mov
sub
xchg
mov
push
sbb
mov
and
dec
cli
ja
or
xor
xor
mov
sbb
sbb
cmp
dec
add
mov
add
std
movb
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
sub
lods
popf
cli
adc
fmull
adc
mov
cmp
inc
add
idivl
and
or
sub
int3
out
gs
mov
sub
enter
pop
mov
repz
sbb
cmp
dec
mov
push
orl
cmp
jmp
daa
push
xor
pop
les
shrb
jo
movsl
lds
neg
jle
stc
dec
scas
sbb
test
jnp
jae
outsl
adc
or
rorb
vcvtsi2sd
ror
adc
push
push
lock
mov
sarb
das
daa
dec
cmpl
inc
or
test
repnz
xchg
inc
jns
cltd
jbe
push
or
scas
mov
mov
out
scas
lds
adc
inc
loope
pushf
dec
aad
jp
and
scas
push
push
lds
or
sub
lcall
jle
incb
lret
fwait
sbb
adc
repz
scas
shl
inc
or
stos
cmp
outsb
adc
out
in
jmp
sub
or
sub
imul
jb
dec
add
add
lock
push
mov
les
mov
push
xchg
xchg
in
xchg
cmp
fistpl
insb
and
cs
jmp
adc
adc
jl
fstl
out
cld
les
sbb
jno
sub
adc
jo
shrl
xchg
mov
sbb
les
shll
popf
outsl
dec
mov
mov
mov
pop
daa
movsl
add
mov
cli
xlat
mov
xchg
add
adc
lcall
int
and
stc
clc
xor
sahf
adc
push
mov
lods
ja
lds
or
stos
xchg
icebp
and
pop
inc
aam
data16
leave
pop
scas
and
outsb
arpl
mov
fwait
mov
outsb
xor
push
bnd
push
and
or
pop
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
jp
and
notb
adc
movlps
rcrl
ljmp
ja
xor
adc
xchg
insb
into
dec
mov
into
inc
cs
flds
pushf
pop
std
inc
in
mov
and
pop
stos
nop
mov
faddp
xchg
inc
inc
pop
xor
xchg
out
push
sbb
dec
pop
cmc
leave
iret
fmull
lds
add
push
push
cli
jg
orl
scas
loop
cltd
pop
adc
imul
enter
outsl
push
add
jne
or
mov
stos
test
sbb
jae
je
std
xlat
jo
sub
mov
inc
insb
add
or
sahf
andl
pop
js
pop
push
cmc
lcall
pop
ud2
lods
dec
sbbl
cmpl
mov
xorb
or
incl
dec
mov
fwait
xor
or
cmp
adc
dec
cltd
lds
subb
jne
aad
add
movb
loopne
sub
jmp
test
popf
mov
adc
hlt
mov
cmp
fstpl
add
jg
pop
std
sarb
ss
popa
push
gs
sbbb
inc
inc
gs
xchg
stos
xor
cld
or
mov
insb
cltd
fs
adc
cmpsl
xchg
adc
js
jbe
fbstp
cmp
mov
xor
scas
icebp
out
shll
sti
idivl
inc
sub
dec
cmpsb
lock
ja
rolb
bound
sbb
add
mov
daa
pop
loop
inc
xchg
imull
mov
mov
call
cmpsl
sbb
cmp
and
sub
std
xor
pop
mov
aas
mov
cmp
inc
nop
or
push
in
dec
pop
inc
aad
lret
push
lods
das
mov
xchg
pop
das
call
loop
and
fsubrl
cs
cmc
rcl
jne,pt
adc
pop
andl
jecxz
add
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
into
dec
mov
ret
mov
out
in
xor
lds
cmp
pop
dec
int
fistl
xor
fs
and
pop
dec
mov
imul
jnp
xlat
inc
push
push
lcall
sti
insl
movb
jle
fdivs
xor
add
pop
fisttpl
adc
subb
push
loope
jge
sub
push
cmp
test
fwait
cltd
push
jae
push
add
jae
aaa
decl
mov
sbb
into
data16
xor
cld
aad
test
mov
sbb
xlat
mov
arpl
fsub
or
testb
loope
mov
jl
sub
jns
dec
adc
loope
loopne
and
mov
mov
pop
test
repnz
inc
sbb
hlt
jo
loopne
daa
mov
push
daa
frstor
out
lds
or
les
sahf
in
xor
hlt
push
sbb
mov
cmp
push
jns
mov
xchg
stos
pop
mov
xor
push
fsubr
test
loopne
jne
sarl
mov
mov
pop
sbb
adc
dec
roll
aaa
call
sbb
inc
daa
movsb
sub
cld
hlt
and
aad
sbb
mov
arpl
div
inc
scas
pop
xor
adc
sub
adc
fistpl
loope
jp
xchg
xchg
add
xchg
sbb
mov
push
mov
jg
inc
pop
pop
rolb
es
ret
idivl
inc
stc
xchg
iret
rcll
mov
xor
subl
lods
jp
fwait
mov
inc
mov
fsubl
and
cmp
xlat
in
enter
xchg
mov
cmp
out
dec
jle
or
loope
jge
icebp
mov
in
cmp
dec
xchg
dec
and
jl
aaa
popf
dec
loopne
pop
sti
xchg
lods
cli
sub
jne
xchg
shlb
js
pop
xor
sar
sbb
fimuls
jl
sub
xor
fimull
imul
push
pusha
pop
xchg
cld
dec
out
mov
cmp
movsb
cmpl
xchg
mov
stc
xlat
mov
dec
xlat
jecxz
xchg
inc
daa
xor
sbb
sbb
imulb
mov
mov
loopne
outsl
push
push
jae
adc
xor
enter
push
xchg
in
out
idivl
sbb
shr
out
in
lcall
icebp
jmp
mov
mov
inc
sti
mov
mov
lea
bound
adc
aas
out
div
and
adc
add
push
push
push
decb
out
jns
cmp
pusha
movsb
jge
xchg
rolb
cmp
sahf
jns
scas
icebp
out
stos
test
pop
sti
mov
fimuls
or
scas
pop
adcl
ror
cmp
push
loopne
popf
sub
sub
outsl
test
repnz
mov
es
cmp
rcll
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
sub
mov
jo
adc
sbb
adc
push
nop
sub
dec
nop
test
cmc
jle
insl
out
push
popa
movl
xchg
insb
and
jo
sbb
sub
or
xchg
cmp
cli
sub
and
fprem
cmp
sub
repz
xor
sbb
push
mov
es
and
fdivl
pop
mov
imull
in
pop
mov
sbb
sar
repnz
psrlw
popa
test
in
mov
push
test
jecxz
push
or
cltd
ret
inc
mov
rcrb
or
ss
mov
push
sbb
enter
dec
mov
add
cmpsb
or
jbe
or
cwtl
aas
adc
orb
xor
pop
stos
shlb
adc
scas
ja
rclb
loop
les
pop
or
jb
mov
ja
add
xor
jg
jne
cmc
dec
pop
decb
subl
shrl
and
gs
or
mov
mov
lcall
cmpsb
and
xabort
xchg
mov
pusha
mov
cwtl
adc
fwait
sarb
nop
add
aas
call
adc
jb
inc
add
imul
pop
xchg
imul
imul
cmpsl
sbb
je
pop
testb
in
cmp
sbb
or
or
adc
and
aas
pop
jecxz
xor
sbbb
leave
stc
cmp
mov
in
leave
repz
cmp
adc
loop
std
pop
cwtl
fisubrl
movsb
jno
cmc
inc
mov
jbe
fs
mov
lret
xchg
adc
out
xor
sbb
push
test
sbb
adc
repz
mov
xchg
lods
and
mov
jo
inc
jbe
push
inc
lods
dec
loope
jge
mov
adc
push
mov
xchg
jg
test
jge
or
shll
xchg
rolb
pop
in
xchg
sub
cmp
mov
pusha
xor
push
cmp
xor
sbb
jo
sub
fldcw
fcoml
movsl
dec
test
mov
adc
inc
scas
jle
jb
ret
mov
adc
and
cmpsl
nop
stos
cmp
push
jmp
xchg
push
pushf
inc
xor
dec
push
fcoms
sbb
add
outsl
arpl
imul
and
cs
pop
daa
mov
fldcw
iret
mov
in
cmpsb
ret
test
pop
cltd
cmp
push
daa
xchg
insb
mov
mov
dec
in
jmp
mov
or
test
xor
gs
test
repnz
fstpl
sub
scas
xor
cmp
bound
addb
or
cmpb
aaa
mov
sub
add
sbb
and
frstor
sbb
xchg
adc
or
sarl
sbb
xor
xor
jbe
jg
cltd
insl
cmp
cmpsb
je
jns
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
xchg
adc
adc
adc
rcr
sbb
jns
cmp
cli
mov
jg,pt
or
ja
addr16
stc
jl
add
push
and
inc
fidivrs
ss
mov
cmp
in
add
jbe
push
push
cmp
mov
and
xchg
jne
push
adc
mov
lcall
pop
loop
jmp
js
repnz
add
outsb
lds
pop
lods
xor
and
cltd
jo
mov
lds
mov
jp
add
out
xchg
inc
ljmp
mov
add
popa
data16
scas
cmp
push
inc
mov
fwait
cmc
inc
sahf
in
mov
and
xchg
mov
ds
xchg
je
cs
in
jle
divb
push
std
je
add
or
pop
test
dec
roll
or
pushf
inc
ds
dec
and
cwtl
add
cltd
mov
xor
aas
fcmovb
enter
push
mov
repz
test
outsb
fwait
jl
addr16
loopne
outsl
and
bound
sbbb
mov
in
xor
pop
adc
idivb
and
xchg
inc
lcall
mov
shlb
add
xchg
cwtl
call
addr16
dec
mov
iret
inc
mov
or
pop
dec
jmp
inc
sub
mov
popf
dec
out
xor
cmpl
mov
xchg
inc
jnp
test
movsb
idivl
inc
test
push
and
adc
adc
pop
cmp
ret
out
out
cltd
clc
je
lea
add
sub
test
add
ljmp
test
outsb
dec
in
aam
jne
mov
inc
push
fs
push
imul
inc
div
stos
repnz
dec
sti
pop
jmp
dec
jmp
lods
mov
iret
mov
das
mov
lods
mov
xlat
ret
lret
std
sahf
cmpsl
cmpl
mov
fisttpl
jbe
movsl
cld
jmp
mov
and
push
cli
test
jne
out
xchg
lods
or
mov
xchg
mov
fimuls
inc
scas
mov
int3
jmp
repnz
xor
orb
cmp
push
mov
adc
xor
or
dec
or
into
movsl
pusha
xchg
lods
sub
mov
insb
sub
mov
xchg
pop
and
inc
mov
push
ret
orl
imul
popf
sti
inc
ds
notl
popf
in
lret
add
and
dec
ds
int
sub
pop
push
push
mov
repnz
das
adc
add
mov
xor
pop
push
inc
call
nop
pop
lret
jne
scas
lods
adcb
pop
std
xchg
ljmp
leave
aad
or
sub
jb
cmp
jl
mov
mov
leave
int
dec
jl
fcmovb
inc
pop
scas
fisubrs
out
dec
or
and
shrl
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
push
cmc
stos
inc
fstl
adc
adc
cmp
mov
mov
test
subb
pop
jne
rcrl
int
mov
into
call
lea
cltd
fisubrs
call
or
lock
popf
aaa
imul
jns
ret
jecxz
sbb
xchg
js
insl
cmp
mov
loop
sar
es
push
adc
xor
iret
xchg
push
jle
shl
btr
mov
movsl
pop
lods
sbb
adc
push
fiaddl
ss
loope
or
fdivrl
push
xorb
sahf
mov
sub
xchg
pop
hlt
stos
lods
xor
pop
cwtl
out
cwtl
sbb
std
call
and
push
shlb
push
lret
dec
int3
sub
dec
popa
xchg
cmp
adc
mov
out
das
adc
test
add
mov
push
lret
jp
or
es
pop
mov
ja
scas
inc
stos
inc
fcmovbe
pushf
lea
sbb
jge
xchg
dec
in
mov
decb
push
sti
cmp
cmp
mov
out
jle
cmpxchg
ljmp
hlt
aam
lahf
pop
inc
data16
xlat
xor
push
mov
adc
lds
xchg
cld
xchg
push
sbb
dec
fmull
int3
shlb
cmp
int3
pop
push
cmp
dec
pop
addps
cwtl
fimuls
das
push
pop
xchg
xchg
cmp
mov
fcoms
out
mov
mov
das
mov
insb
dec
iret
in
ret
cltd
or
call
fldt
mov
in
leave
cmp
push
jg
loop
out
sub
int3
push
sarb
or
mov
pop
mov
dec
mov
inc
outsl
jmp
notl
xchg
fsubrl
or
cmpsl
inc
mov
sbbl
pop
or
push
sbb
push
mov
test
add
roll
mov
cltd
rcrl
loop
sbb
sub
push
fsubs
adc
mov
mov
add
rolb
sti
jne
mov
pusha
hlt
or
xchg
mov
into
jbe
mov
repz
jne
addr16
inc
lret
leave
push
in
sbb
xchg
les
sub
cmpsl
adc
loope
jb
pop
jae
sub
pushf
pcmpeqd
jo
mov
sub
addb
bound
sub
int
add
sbbl
repnz
out
in
mov
cli
xor
out
lds
ficomps
inc
and
inc
call
mov
mov
xor
lahf
stos
sub
imul
push
movb
jne
ljmp
dec
pop
fsubrl
es
popa
add
dec
aam
dec
xor
loope
scas
mov
jb
lcall
in
sbb
lds
add
sbb
push
xchg
popf
mov
or
aam
rcrb
enter
cld
xchg
fnsave
add
aam
repz
or
or
jae
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
movsl
sarb
aad
adc
adc
and
arpl
mov
fwait
pop
push
aas
mov
jecxz
fidivs
js
test
sbb
nop
in
xorl
xor
push
lock
mov
mov
sbb
dec
cmp
cwtl
je
xchg
lods
mov
fcmovb
in
int
movsb
mov
push
cmp
stos
inc
pop
dec
and
test
cmpsb
icebp
jge
shl
notl
insl
movsb
push
push
out
or
scas
mov
fmul
je
lret
pop
adc
aaa
jecxz
xorb
cmp
dec
js
xchg
rorb
mov
cmp
sbb
fcompl
popf
jae
jmp
push
inc
xor
jl
jp
dec
into
int
fisubs
adc
test
in
idiv
test
add
pusha
jb
mov
xchg
sahf
push
xlat
add
hlt
adc
test
ljmp
mov
inc
iret
scas
fimuls
mov
add
mov
dec
sbb
and
mov
add
rcrb
push
lock
in
push
sbb
test
mov
repz
xchg
pop
aas
or
jbe
lret
xchg
cmpb
jmp
sub
or
pop
inc
neg
push
in
pop
les
out
ficomps
push
fs
aaa
pop
js
repz
shlb
bound
jmp
pop
adc
outsl
mov
stos
inc
mov
out
shrl
bound
push
mov
in
dec
cmp
mov
and
icebp
cmp
aaa
fisubl
add
sub
push
mov
cld
je
ss
adc
ret
lods
lock
shrl
push
xchg
test
out
leave
cli
bound
and
xchg
push
mov
push
cmp
sbb
es
cmp
sub
and
mov
sahf
xchg
sub
mov
rcll
mov
push
and
popa
push
and
inc
jp
test
movsl
cld
or
and
pop
xchg
imul
push
in
cmp
gs
add
adc
adc
and
cwtl
xor
or
xchg
jecxz
adcl
sub
mov
dec
scas
jns
stos
fldcw
mov
cmp
les
mov
xchg
xchg
or
or
push
mov
xor
pop
stc
lods
mov
std
insb
xchg
aas
pushf
insl
aam
sub
lret
test
popa
test
leave
maxps
mov
sub
xchg
push
dec
mov
sbb
test
aam
jle
mov
lret
sbb
fdivs
xchg
inc
push
int3
lods
jne
pop
popa
push
ret
mov
mov
mov
loope
dec
mov
jp
dec
adc
into
adc
pop
pop
push
lods
shll
insb
ljmp
mov
pop
adc
stos
push
into
js
push
imul
lock
dec
cmpsl
mov
out
sub
or
testb
leave
orb
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
mov
jo
cli
lret
adc
jo
adc
or
fwait
loopne
mov
rol
mov
lret
inc
lds
lahf
mov
ret
aas
adc
jl
test
lods
push
pop
fadds
mov
add
mov
push
pop
xchg
mov
mov
push
jbe
dec
jmp
mov
push
xor
adc
test
leave
or
jmp
es
mov
lds
add
xor
dec
repz
and
into
mov
dec
popa
out
dec
rcl
and
or
fnstcw
js
inc
cmp
or
push
jmp
push
and
fsubrl
push
pop
sbb
sub
adc
adc
or
cmc
add
pop
insb
jl
cmp
iret
adc
lock
ljmp
movb
push
sub
cmp
aas
hlt
mov
mov
pop
call
mov
cmp
mov
outsb
mov
es
pusha
mov
mov
cmp
mov
mov
in
shlb
mov
jmp
sbb
enter
mov
mov
dec
das
dec
adc
faddp
push
and
cli
pop
xchg
mov
icebp
and
sbb
inc
sbbl
and
outsb
repnz
add
lret
shrl
sti
cmp
popf
stc
adc
aas
lcall
shl
xchg
xor
lds
push
sub
setns
sub
lods
jge
jecxz
push
jge
test
cmp
cmp
out
popa
push
adc
loop
jo
pop
mov
fwait
push
mov
into
out
mov
ljmp
js
mov
jnp
inc
pop
mov
cli
imul
ljmp
repnz
imul
jne
add
dec
and
inc
xchg
and
pushw
mov
jb
dec
lcall
ret
push
outsl
push
push
add
popa
pop
adc
test
adc
jmp
pushw
sti
adc
sbb
xchg
jne
fidivl
push
sbb
push
mov
inc
push
sbb
sub
inc
test
add
cmp
ss
dec
bound
imul
xchg
iret
adc
inc
adc
je
cwtl
test
or
mov
xor
ficomps
in
add
in
les
adc
mov
xor
sbb
pushf
mov
cmpsb
push
int
pop
leave
std
into
mov
jns
xchg
cmc
hlt
fistps
shr
or
in
or
shrb
stc
cmpsb
lcall
jg
sub
add
mov
outsb
xor
mov
mov
jne
push
mov
enter
push
inc
rcrb
cmp
cli
mov
mov
mov
cmp
push
and
cltd
inc
roll
mov
inc
inc
sbb
jp
pop
inc
stos
cmp
iret
push
fidivrs
or
bound
xchg
repnz
ljmp
cmp
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
leave
xchg
decb
faddl
cwtl
lret
or
inc
bound
dec
stos
imull
imul
push
jns
es
xchg
les
imulb
or
adc
mov
jae
out
shlb
fimuls
cs
popf
fsts
sub
aam
and
inc
arpl
add
sub
and
pop
insl
lcall
jnp
popf
xor
add
inc
popa
mov
jns
lcall
and
add
jns
cmp
cmp
or
movsb
add
cmpsb
and
movsl
call
in
and
mov
push
lret
lret
xor
stc
mov
stos
cmp
cmp
mov
clc
popa
rsqrtps
jmp
sub
and
sbb
lcall
aas
jecxz
mov
jp
loopne
lock
xchg
popa
cmpsl
and
hlt
lods
shll
mov
or
stc
mov
dec
mov
lret
inc
mov
in
pushf
push
int3
xchg
popf
mov
cmpb
cmp
int3
popf
mov
je
fwait
subb
jp
jne
cs
pop
xchg
lcall
fsubs
inc
cmp
push
sahf
add
addb
dec
push
aam
fcomps
movl
addr16
or
and
test
pop
ret
pop
mov
movsl
call
outsb
and
cmp
enter
lds
sub
adc
mov
jb
pop
popa
fcoms
mov
mov
mov
mov
aaa
adcl
es
sbb
sti
fildll
std
repnz
cld
mov
mov
pop
std
cmp
dec
pop
js
mov
and
mov
sub
inc
sbb
cltd
jecxz
jo
call
cmp
sub
inc
fs
loope
sub
jne
jle
push
ds
push
push
aaa
test
push
stc
das
lock
ja
jb
fisubl
int
je
jo
and
movsl
dec
sub
or
push
or
push
dec
roll
jne
test
pop
mov
insb
cwtl
imul
xchg
push
push
mov
xor
add
jbe,pn
and
jl
test
negb
cwtl
daa
mov
cmp
into
pop
mov
sbb
mov
inc
mov
insl
mov
mov
into
inc
in
movsl
roll
inc
sub
decb
jmp
jmp
mov
shrl
leave
jecxz
fsubrl
mov
xchg
out
stos
nop
stos
or
insl
fsts
lock
pop
fucom
nop
jg
jb
adc
mov
clc
mov
js
data16
je
ss
int3
sub
arpl
fists
jge
repz
insb
mov
fcmovb
popf
or
jecxz
bound
aam
sub
mov
pop
ljmp
in
xlat
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
pop
push
and
rcll
jo
adc
inc
dec
out
loope
mov
mov
sbb
jl,pt
ljmp
mov
xlat
and
xor
fdivrl
loop
xor
div
inc
jge
xlat
lcall
les
jae
icebp
cmp
aam
sbbb
sub
inc
and
cmp
mov
enter
jle
xchg
mov
movb
add
inc
insb
xlat
jmp
sub
adc
ss
adc
or
dec
adc
loopne
push
mov
xlat
nop
dec
pushf
push
mov
and
sbb
loopne
mov
xchg
out
in
or
movsb
dec
ds
cmc
pop
xor
push
xchg
enter
jle
movsl
js
rorb
jecxz
shll
add
mov
sub
ljmp
pop
mov
push
sub
mov
push
cmp
or
mov
inc
push
lcall
fistpll
lds
addr16
rorl
inc
jl
push
push
push
mov
ror
jno
add
xchg
pop
push
and
adc
sti
jnp
push
cmp
xchg
cli
add
dec
push
mov
add
pop
mull
mov
dec
cmp
xchg
lods
cmc
test
pusha
rol
aad
xor
cmp
popa
fistps
cmp
xor
imul
and
and
out
mov
cmp
ret
cmpsb
scas
jns,pn
scas
ret
push
cld
popf
sub
das
scas
jecxz
adc
push
out
jmp
push
dec
aaa
xor
mov
icebp
out
lods
or
leave
fs
shlb
xchg
outsb
sti
mov
jge
jp
xor
das
jp
into
aas
inc
nop
clc
pop
mov
xchg
cmpsb
test
out
ficoml
mov
loopne
out
xchg
subl
jge
movsb
ret
pop
pop
aam
push
xor
cmp
dec
mov
fcmovnu
test
push
and
aad
ret
test
movsl
loopne
nop
aas
xchg
cmp
sub
sbb
mov
dec
daa
bsr
aaa
mov
cmp
adc
and
je
clc
push
pop
into
push
lock
adc
xchg
sbb
inc
fwait
test
out
int
lret
into
push
xor
imul
jb
cmp
jno
push
loope
xor
mov
add
push
movsl
push
push
into
pop
stc
sbb
and
les
xchg
and
push
cmp
jmp
sarl
and
int3
jg
pusha
fcmovnb
cmp
push
inc
xchg
outsl
stc
mov
out
jae
or
pop
int3
push
out
adc
xor
jne
in
xchg
js
mov
xchg
sbb
push
mov
adc
sub
sbb
jae
sti
lahf
xchg
jg
dec
repz
test
popf
mov
mov
mov
add
stc
xchg
jbe
jge
test
call
push
mov
lods
push
popa
hlt
mov
dec
rorb
inc
xor
rorl
notb
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
loope
sahf
lods
push
mov
adc
adc
das
or
xor
addr16
outsb
sbb
pop
or
das
xchg
adc
std
outsl
arpl
and
xchg
push
fwait
jae
cwtl
sub
or
jnp
aaa
cli
out
pop
mov
aad
push
xor
aas
xor
jno
aam
into
mov
test
push
adc
mov
jmp
lock
xchg
out
xchg
out
scas
fdivrs
dec
or
leave
push
dec
or
inc
sub
shr
sub
fidivs
add
loop
adc
jbe
les
cs
out
lods
addr16
or
and
cmp
int3
fsubl
or
jmp
mov
mov
sbb
addb
subb
and
out
in
xor
ss
mov
in
mov
subb
stos
cmpl
fs
out
xor
test
out
mov
jb
das
and
push
sbb
or
ret
sbb
out
mov
or
mov
cli
les
clc
mov
or
mov
arpl
sbb
das
enter
les
loope
aam
or
jmp
push
xchg
pop
test
rsqrtps
mov
out
mov
push
pop
in
mov
pop
mov
mov
test
sub
inc
jo
sub
aas
sub
imul
and
adc
cmpl
fs
dec
sub
movsb
lahf
fistps
cltd
dec
inc
gs
or
mov
jle
or
mov
sub
ja
dec
jle
sbb
cmp
inc
idivl
aam
pop
adc
out
icebp
loopne
ss
test
imul
jle
jmp
popf
aam
jg
jmp
or
dec
xchg
push
dec
fs
iret
insb
or
cltd
shlb
in
or
lret
mov
push
call
roll
jnp
lahf
pop
mov
das
fldt
jle
cmp
and
pop
movsl
insl
xor
xchg
insl
cs
sub
cmp
in
fs
lret
pop
fadd
cltd
out
lahf
ja
out
js
scas
mov
pop
scas
xor
pusha
cs
bound
inc
mov
fldl
aad
inc
popf
dec
lret
jb
je
pop
adc
or
sub
jbe
cmpsb
or
push
or
iret
inc
jge
add
out
xchg
xchg
and
cltd
pop
lahf
adc
and
ss
jecxz
dec
popf
xor
in
add
aam
sbb
mov
fwait
xor
popf
lds
mov
xor
push
mov
mov
or
and
call
sub
sahf
mov
or
pop
xchg
push
ss
sub
daa
jbe
lcall
jmp
mov
and
mov
imul
cld
pop
mov
mov
dec
pop
enter
jle
cmp
cmp
xchg
push
pop
mov
pop
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
shl
movsl
repz
push
daa
adc
or
dec
jmp
daa
or
fdivs
and
je
mov
fs
jmp
mov
xlat
push
pop
movsl
repz
sub
pop
or
xchg
dec
lret
push
loop
in
jns
dec
jg
and
out
cmp
fidivrs
aam
and
fisttpll
push
mov
jge
add
fisubl
and
pop
or
cli
into
lods
fdivrl
inc
mov
cld
jno
insl
cs
xchg
ficoms
mov
ret
jne
and
lds
jecxz
dec
adc
loope
stos
scas
add
pop
xor
stos
aam
es
imull
add
dec
andl
jmp
adc
ds
data16
jne
lock
cmpsl
lock
sub
cwtl
add
dec
ret
jl
adc
lods
push
pop
idivb
imul
xchg
xor
shll
xchg
jecxz
and
orb
sub
add
cmpb
sbb
mov
pop
cmc
les
cs
cld
aam
scas
mov
pop
mov
cld
pop
xchg
add
mov
call
mov
fisttpll
fdivrs
jecxz
sti
sub
cli
mov
mov
subl
subb
mov
clc
out
mov
fists
sbb
pop
lahf
jle
jle
push
es
mov
mov
popf
movsb
cmp
popa
aas
push
stc
mov
dec
dec
imul
mov
xor
inc
push
sahf
add
ret
push
mov
stos
adc
mov
pop
cli
decb
mov
insl
loop
mov
ljmp
xor
shrl
push
pop
scas
sbb
lahf
test
stos
mov
fidivl
es
mov
adc
mov
adc
mov
popl
imul
les
add
in
rorl
push
add
push
jmp
push
pop
push
js
add
jle
stos
adc
stos
movlps
rcrl
or
push
call
pop
in
jbe
push
int3
int3
pop
xchg
xchg
mov
rcll
jno
lock
push
arpl
ret
mov
mov
mov
adc
add
cmp
add
icebp
dec
scas
adc
xchg
pop
or
lods
mov
inc
mov
mov
dec
sbb
or
movsl
pushf
outsl
jae
xlat
test
xchg
jo
dec
add
outsb
jns
cmpsl
clc
xchg
jp
movsb
mov
lcall
lret
xchg
clc
std
push
cmp
adc
pop
test
std
or
dec
icebp
cmc
push
mov
fstpl
bound
getsec
xor
shlb
mov
mov
and
cmp
test
sbb
call
push
ja
jae
and
negb
and
inc
sub
std
jns
repnz
cltd
out
push
ret
mov
clc
mov
add
test
int3
stc
xor
pop
inc
aad
cmp
lods
push
push
sbb
and
mov
gs
adc
xor
int3
rol
enter
sbb
adc
mov
jae,pt
or
mov
push
loop
movsl
push
leave
scas
mov
ret
sbb
lods
clc
inc
xchg
pop
jecxz
mov
pushf
pushf
fwait
push
movsl
mov
mov
jp
loop
cmc
sub
inc
cwtl
into
push
decb
out
dec
and
or
stc
ret
xchg
jmp
jno
dec
adc
stos
int
push
jmp
lds
mov
and
ja
xlat
xor
dec
mov
js
lods
inc
mov
in
pop
jo
stc
push
into
and
loopne
clc
lret
xchg
sub
leave
fimull
mov
push
add
hlt
add
push
xchg
jnp
sub
hlt
mov
pop
pop
push
xor
pop
xchg
fs
notl
ljmp
lock
push
pop
adc
fldl
mov
mov
cmc
sahf
push
cmp
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
orps
cmpsl
adc
stos
movlps
icebp
jmp
adc
mov
cli
add
cmp
sbb
push
mov
fidivs
jne
mov
adc
lea
pushf
xchg
and
ret
test
mov
inc
jmp
xor
lcall
push
mov
fisubl
in
fnstenv
xchg
jmp
jmp
jle
pop
es
mov
cmp
pop
add
mov
inc
pop
imul
lcall
loope
imul
scas
pop
jp
movsl
jle
jns
idivb
push
jmp
idiv
gs
jecxz
jne
ds
fisubs
lods
push
outsb
mov
jge
mov
arpl
mov
sar
aaa
add
cmc
lret
iret
sub
pop
in
fadds
push
add
mov
xchg
and
jl
cmc
insl
shlb
xor
enter
pop
outsb
inc
es
inc
or
and
sbb
popl
aaa
dec
xchg
mov
or
mov
fdivrs
push
cmc
cmp
xchg
or
sbb
dec
mov
fbstp
nop
in
cmpsb
es
pop
jb
push
notb
out
cmp
ret
fdivl
jns
mov
jno
test
scas
xor
mov
fistps
shlb
mov
add
xchg
adc
ljmp
sbb
dec
test
test
cmpsl
mov
test
dec
scas
fcom
or
push
mov
in
leave
mov
mov
jp
inc
xor
lcall
repz
jo
mov
mov
sub
push
mov
ljmp
add
addr16
loopne
inc
int3
xor
mov
incb
das
dec
je
xchg
rcrb
insl
aad
xchg
ss
movsl
lret
pop
inc
outsl
inc
scas
push
or
jns
sub
pop
pop
pop
pop
inc
bound
sub
mov
jle
or
movb
jnp
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
dec
fistpl
adc
cmp
xor
cmp
jge
jmp
mov
in
das
xor
jp
and
add
test
fidivs
jl
shl
cs
mov
inc
sub
imul
decl
mov
cwtl
mov
mov
push
sbb
sarb
sbb
in
cmp
cli
in
and
adc
mov
int3
jmp
ror
push
mov
push
sub
push
adc
mov
xchg
xchg
push
push
in
sub
clc
je
mov
jnp
and
ficoms
sti
shlb
adc
sbb
test
fiadds
das
push
daa
and
fmull
mov
cmp
or
jp
add
push
jle
mov
in
adc
outsl
mov
push
call
cmp
xchg
repnz
inc
outsl
mov
mov
aas
pop
adc
xchg
pop
sub
ja
or
lods
rep
aad
cmp
nop
inc
xlat
push
int
test
mov
xchg
mov
outsb
inc
mov
in
pop
inc
fisubrs
jecxz
cwtl
aad
inc
outsb
mov
popa
test
sub
out
mov
add
sub
rcll
jbe
stos
imul
sub
stc
add
sti
xchg
fdivl
pop
and
mov
decb
adc
lods
ja
mov
inc
push
push
pop
push
xor
sub
sub
add
cmc
jae
loop
ret
cwtl
jnp
jns
out
notb
inc
inc
inc
dec
pop
jne
sbb
ja
pop
data16
push
push
addr16
and
xor
dec
ljmp
data16
lods
and
adc
int3
in
add
ja
fwait
xchg
movsb
dec
mov
rcl
mov
idivl
xchg
inc
pop
fdivrl
jle
or
sarb
jle
lahf
lea
fdivrl
fcomi
ror
xor
and
test
mov
movsl
jp
mov
gs
inc
add
jmp
add
cmc
dec
xor
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
add
adc
stos
movlps
xchg
and
dec
jle
jp
jp
push
scas
jge
call
cmpl
add
push
jecxz
dec
movsl
popf
imul
sbb
pop
pop
xor
int
xorb
shll
int
or
lahf
adc
sbb
mov
insb
xchg
in
lret
sahf
shlb
jbe
inc
mov
and
shlb
mov
leave
test
inc
testb
sub
fsubrl
jo
or
sub
jo
xchg
stos
mov
mov
jbe
add
in
push
mov
out
pop
and
fstps
mov
je
and
dec
inc
pop
dec
stos
mov
mov
lods
and
jle
bnd
daa
push
jns,pn
pusha
mov
inc
or
pushf
pop
shrl
test
mov
push
or
xchg
dec
movsb
cltd
cmpsl
mov
idiv
cmc
mov
nop
dec
and
jmp
jge
or
in
sub
pop
sub
cmpl
popf
cltd
lcall
inc
add
aas
cmp
mov
and
js
fwait
mov
test
iret
pop
incl
or
jmp
cltd
rclb
cmp
or
fwait
mov
or
mov
mov
sbbl
mov
outsb
jecxz
outsl
cs
cmp
and
sbb
jl
mov
fdecstp
fldcw
mov
cld
fstp
leave
sub
jg
movsb
add
lea
out
ss
xor
mov
sahf
add
sub
push
cwtl
xor
not
xchg
mov
xor
adc
ret
xchg
sub
jmp
hlt
ret
icebp
xchg
inc
mov
pop
cltd
sbbl
int3
add
cmpsl
es
push
pop
fcmovnu
icebp
stc
pop
pop
xchg
inc
insl
jno
out
xchg
movsb
cmp
lds
cs
xor
pop
push
mov
negl
add
orb
pop
lahf
out
push
push
sub
rorl
mov
add
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
cmp
xor
or
nop
sub
jo
sbbb
test
sti
loope
jle
and
mov
call
cmp
inc
in
aaa
dec
xchg
mov
mov
mov
jae
cmp
arpl
inc
les
mov
add
add
xchg
dec
jnp
rol
ds
sub
cltd
aas
jne
jle
or
sti
hlt
ds
and
adc
push
idivb
jecxz
mov
orb
inc
hlt
xchg
ret
push
dec
cmp
mov
push
fisttpll
ljmp
jae,pt
clc
lret
lock
ljmp
or
pop
stos
push
fs
or
sbb
orl
add
add
xchg
cmc
movsl
jecxz
cmc
sbb
repz
sti
in
pop
jo
lret
pop
aam
inc
hlt
add
rol
outsl
push
cmpsl
test
rcrb
fldl
adc
loope
mov
sbb
hlt
outsb
cli
mov
add
xchg
inc
call
popf
fistpl
outsl
mov
add
mov
roll
fistpll
xor
fisubs
out
pop
push
jo
xor
mov
push
pop
cmp
mov
mov
mov
mov
out
add
add
out
fimuls
repnz
mov
out
mov
xchg
cmpsl
mov
leave
nop
inc
mov
setge
xlat
rcrl
jmp
fdivrl
arpl
shll
mov
cltd
sbb
and
out
fdiv
jae
lods
mov
push
addr16
mov
nop
dec
pop
push
pop
fstpl
pop
push
sarb
gs
out
mov
adc
insl
aas
fldt
arpl
sub
xorl
sbbl
les
cmc
mov
arpl
pushf
mov
lods
cltd
push
stos
push
repz
and
iret
mov
cli
xchg
imul
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
dec
push
xor
push
and
or
sbb
loop
popa
imul
out
mov
nop
shrl
xchg
push
lods
cltd
mov
mov
fidivrl
neg
sub
stos
add
push
mov
mov
add
sarl
xor
push
cli
jnp
hlt
mov
ljmp
sbb
pop
int
js
fisttps
pop
scas
jge
push
mov
xor
xor
mov
lret
je
adc
je
insb
movsb
xchg
and
mov
adc
cmp
mov
push
xchg
push
imul
sbb
cmpsb
outsl
std
push
push
cmp
push
cmp
add
or
repz
daa
mov
ret
xchg
lea
int3
mov
add
push
jmp
jl
aaa
arpl
xor
lret
inc
mov
pusha
adc
pop
aam
sbb
mov
push
in
jmp
push
sti
sti
mov
test
and
pop
mov
ds
rolb
in
pop
test
jns
sbb
sub
mov
jg
loopne
xor
movsl
filds
add
sbb
shrl
pop
punpcklbw
adc
fsubl
or
jne
push
push
mov
loopne
sub
in
int
es
ds
loope
insl
test
jns
hlt
dec
or
sbb
lds
std
xchg
mov
pop
xchg
sar
shr
sbb
test
cld
fcomip
sub
jb
adc
mov
adc
and
lds
pop
addr16
lret
addr16
and
sahf
xlat
incb
xchg
daa
fmuls
jmp
shll
xchg
int
pop
and
push
push
or
pop
adc
xor
nop
jnp
incl
inc
xchg
lea
lock
xchg
into
sbb
sarl
into
test
mov
lea
mov
inc
popf
mov
movsl
in
out
nop
bound
sarl
pop
mov
daa
sbb
mov
cltd
mov
sarb
ret
scas
cltd
push
ds
dec
scas
das
mov
data16
pop
sub
mov
jle
inc
testl
jl
fnstcw
sub
mov
stc
mov
imul
fldl
mov
test
iret
pop
scas
movsl
cltd
ljmp
shrl
call
and
push
mov
and
popf
add
sahf
push
mov
inc
outsb
clc
or
dec
pop
and
test
pop
adc
mov
in
imul
lret
inc
ffreep
loop
push
push
dec
filds
pop
ret
xor
mov
loopne
pop
popa
dec
orl
add
adc
daa
jmp
scas
dec
sahf
jecxz
cltd
cmp
into
mov
cmp
sub
rorl
loopne
dec
xchg
lahf
and
jle
insl
jg
add
es
jle
cmp
adc
popa
call
adc
shrb
adc
mov
das
aad
sub
push
jo
ds
jae
nop
scas
ljmp
bswap
dec
lahf
rcll
adcl
xor
fwait
jp
jg
test
cmp
inc
pop
stos
stc
mov
mov
cmp
sahf
iret
dec
fcmovb
xchg
sbb
and
xchg
adc
push
and
dec
xor
fsubrl
mov
add
mov
push
es
sbb
mov
or
pop
adc
mov
xchg
sti
outsl
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
mov
adc
pop
adc
adc
sub
ljmp
jno
das
inc
movsb
rclb
clc
push
jecxz
dec
movsb
stc
jae
out
ss
cmpsl
adcl
adc
sbb
pop
scas
pop
shr
cmc
mov
jns
add
bound
in
adc
pop
adc
ss
xor
sbb
test
js
ss
adc
xor
push
push
stos
jle
jge
fsubrp
dec
mov
add
sbb
dec
pop
fdivrp
sbb
shlb
ljmp
repnz
fmull
mov
mov
pop
pop
test
aad
icebp
cmc
push
outsl
gs
pop
rorl
shr
pop
sbb
pop
sub
xor
fdecstp
dec
rep
dec
inc
jl
pop
gs
ret
aad
dec
pop
sbb
repz
clc
adc
dec
pop
mov
in
jmp
lahf
push
mov
xor
mov
aad
subb
dec
adc
sbb
cmp
xor
pop
inc
or
je
addb
rcl
xchg
xor
xor
xchg
cmp
rcll
and
rcrb
pop
ret
pop
jmp
or
xlat
movsl
jns
mov
mov
add
pop
movsl
xchg
jno
cld
popf
mov
xor
outsb
or
cmpsb
jns
and
cmp
add
and
decb
xchg
jge
outsb
add
cmc
fcoml
int
push
xchg
mov
inc
push
jne
hlt
jb
mov
data16
daa
or
add
cmp
sub
aam
lods
xchg
popf
aaa
outsb
sbb
xchg
sbb
fwait
aas
outsb
inc
xchg
dec
negl
repnz
add
mov
pop
int
dec
mov
pop
cmpsl
dec
loop
add
scas
cmp
arpl
xor
mov
shr
xor
pop
addr16
pop
popa
inc
xchg
inc
dec
insl
and
clc
mov
ret
notl
pop
mov
add
sar
cmp
inc
shl
pop
leave
orl
or
lcall
xor
or
jne
ret
jns
sub
mov
fisubs
inc
cmp
das
pop
repnz
pop
lock
mov
xchg
sahf
shl
cmp
mov
xor
jp
leave
sub
xchg
into
mov
push
nopl
inc
jmp
push
divl
mov
outsl
repz
adc
mov
nop
mov
pop
enter
fcomps
cwtl
jns
lods
nop
int
ja
jne
add
jl
inc
shrl
clc
pop
lret
js
push
push
mulb
les
add
call
mov
out
dec
mov
fildl
das
dec
pushf
cmp
mov
and
xor
sub
pop
push
xchg
push
jnp
and
or
pop
push
inc
test
loop
insb
mov
out
mov
fstpt
shrb
or
pop
add
push
adc
pop
adc
fs
cltd
or
jl
mov
test
sub
jl
test
adc
jnp
fcmovnb
sahf
psubq
mov
decb
outsl
call
push
mov
addl
sbb
inc
loopne
and
cmpsl
fcomps
scas
and
push
int
inc
cltd
and
add
fisubrs
arpl
cld
in
push
in
xlat
fwait
js
into
xchg
xchg
or
movsl
sbb
call
test
or
pop
inc
idivl
enter
stc
pop
mov
scas
inc
add
lahf
les
push
adc
adc
sub
lods
add
daa
ja
rclb
pop
jge
sbb
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
repz
and
adc
push
lock
ret
sbb
pop
mov
inc
xlat
inc
sub
aam
pop
xor
jne
mov
dec
ret
movsl
movsb
mov
stos
push
adc
push
mov
xchg
xchg
lar
add
cmp
out
sbb
mov
popa
cld
outsb
sahf
out
cli
loop
out
or
mov
mov
ja
aaa
ja
mov
lods
xor
sbbb
lcall
ret
scas
mov
addl
and
jae
dec
dec
mov
push
adc
mov
fbld
dec
fsubr
add
pop
imul
stos
push
and
push
inc
inc
xor
jne
and
popa
dec
sbb
add
xchg
iret
dec
mov
cltd
das
in
jp
leave
mov
lret
imul
jns
rcr
mov
iret
ja
jne
sbb
dec
repnz
push
lret
mov
lcall
dec
es
xchg
sbb
pusha
imul
aas
scas
or
mov
movsl
cmp
es
cmpl
in
out
int
ljmp
lcall
ror
mov
xchg
jne
ror
enter
iret
shll
ss
and
sub
stc
lea
iret
inc
or
int
popf
fisttps
sub
fsubrp
dec
xchg
lret
mov
das
addb
inc
sbb
loopne
mov
mov
cmpsb
das
pop
in
xor
or
test
mov
iret
aam
mov
inc
mov
jge
sub
and
xchg
jno
outsb
mov
cmpsb
push
cmpsb
push
sub
dec
arpl
ret
pop
mov
push
dec
data16
mov
or
xchg
mov
in
or
fiadds
cmp
jb
rcrb
call
lock
aaa
jp
jp
cmpsb
fadds
cld
pusha
mov
rorb
aaa
test
dec
dec
xor
rolb
rol
outsb
and
jp
mov
into
in
in
sahf
cmp
inc
adc
and
sub
pop
dec
dec
notl
lods
or
pop
sub
pop
insb
mov
jge
subb
mov
sub
mov
into
lods
cmc
outsb
lret
iret
cwtl
lods
pop
imul
shll
mov
stos
sub
xor
inc
pushl
dec
ss
lock
filds
mov
pop
or
or
mov
ror
mov
in
aas
pop
pop
cmp
clc
dec
ljmp
in
pop
or
adc
push
xchg
xor
in
out
cmpl
or
adc
outsb
ret
mov
push
pop
mov
into
or
jp
sub
or
mov
add
dec
or
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
sarb
mov
add
popa
and
lods
push
push
and
jb
arpl
mov
fsub
xchg
test
pop
std
dec
add
aas
aas
xor
ljmp
cmp
jmp
mov
cmpl
and
adc
xor
sar
xchg
adc
fiadds
aam
out
cli
gs
and
bound
sub
call
out
icebp
adc
push
cmpsb
in
adc
sub
cs
ljmp
sti
frstor
pop
jmp
rolb
aad
fcoml
xchg
mov
dec
sbb
in
inc
pop
sahf
jp
mov
lahf
ds
push
mov
pop
inc
or
lret
xlat
xchg
outsl
je
push
mov
mov
cmp
xchg
dec
pop
shrb
stos
leave
scas
jns
cmp
sub
loopne
mov
cmp
stc
pushf
mov
jo
scas
push
inc
movb
pop
or
inc
daa
fmull
xchg
jl
fsts
push
repnz
push
filds
test
fidivrs
or
jmp
ja
sub
and
lahf
cwtl
cmpsl
xchg
aas
enter
test
jo
mov
sbb
je
add
iret
xchg
pop
sub
mov
adc
xor
orl
std
fmul
out
das
jge
movsl
xchg
mov
mov
enter
aad
hlt
xor
pop
ret
ds
pop
std
dec
leave
cmp
mov
js
xor
out
dec
mov
das
add
push
jae
inc
cmpsb
pop
loopne
jmp
idivb
cmp
jno
sub
int3
inc
inc
jo
cs
and
mov
sub
mov
add
xchg
sub
mov
dec
adc
mov
stc
sub
cmp
out
imul
sbb
iret
xchg
aas
aad
and
xchg
inc
mov
xchg
sbb
add
xor
sti
push
ljmp
js
enter
cmp
int
mov
out
mov
dec
call
pop
push
mov
aas
out
sbb
sbb
ret
test
mov
cmc
adc
clc
fcompl
in
mov
sub
test
mov
pop
lcall
pop
int3
notl
or
mov
lock
dec
fsubl
or
gs
pop
test
aam
add
jp
xlat
jmp
aad
cli
jnp
sub
sarl
xchg
mov
scas
call
inc
aad
push
dec
mov
mov
mov
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
mov
and
adc
cmp
loop
mov
xchg
stc
push
int3
cmp
mov
lret
xchg
xchg
sub
mov
xor
int
jae
insb
js
fcmovne
arpl
int3
loopne
inc
pop
pop
dec
push
rclb
addr16
sbb
push
push
insb
nop
icebp
cld
cld
leave
icebp
and
push
sub
ds
push
adc
enter
jl
popf
dec
jno
sub
bound
and
lahf
pop
into
and
js
test
or
loope
pop
adc
aas
add
lock
jl
scas
int
testb
lret
xchg
sahf
dec
fcomi
cmpb
sbb
inc
mov
cmpb
cmpb
fiaddl
mov
jne
sbb
jnp
pop
adc
mov
dec
sub
add
movsb
popfw
cmp
fidivs
repnz
jnp
sub
mov
idivl
fistl
dec
ljmp
insl
or
xor
xchg
push
in
iret
fstp
adc
mov
in
dec
fidivrs
adc
xchg
push
fdivrl
xorb
stc
mov
push
sbb
push
adc
scas
add
sbb
dec
addr16
popf
iret
push
in
xchg
popa
push
xchg
aas
mov
or
sub
lods
push
cmpsb
sti
pop
out
jbe
dec
icebp
dec
cmp
jbe
push
mov
adc
inc
fldt
out
in
mov
mov
nop
add
and
mov
jecxz
ja
popf
mov
out
inc
and
cmp
push
add
inc
xchg
hlt
mov
pop
jb
test
sarb
test
rcll
adc
cmc
mov
mov
jb
popa
fldcw
repz
xchg
and
cmp
imul
in
mov
xor
scas
dec
pop
push
pop
and
insl
sbb
adc
sbb
sbb
aad
in
ret
inc
pop
push
icebp
loope
popf
xchg
push
mov
dec
insl
jg
jg
jg
xchg
mulb
dec
jl
pop
outsb
cmpsb
ret
filds
stc
xor
inc
mov
add
xchg
lcall
test
ret
pop
scas
repnz
jge
dec
jbe
sub
pop
mov
lret
pop
test
push
mov
jecxz
out
mov
js
rorl
push
mov
outsl
mov
pop
mov
insb
test
pop
bound
mov
test
dec
repnz
dec
popa
lret
inc
aam
fisttpl
add
and
sbb
out
cmc
inc
adc
cltd
mov
stos
pop
dec
sbb
arpl
flds
popf
arpl
insb
cmp
sbb
mov
mov
adc
test
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
arpl
adc
or
movsl
test
cld
dec
loope
loopne
ret
push
inc
rcrl
call
scas
or
ljmp
cmp
adc
push
mov
aaa
jnp
cltd
mov
int3
aaa
movsb
orl
sub
icebp
fcomps
inc
arpl
dec
rcrb
icebp
mov
sub
jecxz
dec
cli
jmp
scas
push
xchg
out
mov
push
or
sahf
mov
push
popl
sarl
pushf
sbb
bound
out
and
mov
adc
arpl
testl
mov
xchg
outsl
xchg
xor
push
pop
jb
sarl
and
cmp
adc
nop
dec
push
int3
hlt
mov
iret
shl
and
sbb
inc
addb
mov
decb
jg
cmpb
cmpsl
cmp
ret
add
movsb
sbb
arpl
iret
movl
out
push
sbb
lds
pop
pop
in
adc
aas
ja
je
scas
fistl
push
aam
mov
xor
adc
mov
xchg
dec
insb
push
imul
or
push
inc
popf
movd
add
and
cmp
jnp
xor
push
aaa
lret
fstl
idivl
mov
cmp
test
sub
scas
imul
mov
mov
mov
cwtl
imul
sbb
clc
addr16
jecxz
xorl
scas
cmp
inc
out
fisttpl
add
and
and
pop
sarl
xchg
mov
xchg
int3
pop
and
addr16
loop
stos
add
fcompl
nop
negl
inc
aas
push
adcl
add
cmc
inc
add
mov
stos
arpl
icebp
mulb
inc
in
adc
mov
push
data16
test
mov
movsl
rorb
cmp
sub
nop
mov
mov
fdivs
jbe
jne
dec
push
dec
dec
dec
cmp
jbe
sbb
mov
adc
add
inc
add
arpl
dec
push
loopne
cmp
fmuls
mov
push
or
mov
mov
or
in
inc
mov
push
xchg
scas
sub
adc
push
adc
pop
jp
imul
std
push
sbb
sahf
push
xor
or
pop
loopne
ds
dec
add
shl
cwtl
mov
and
popa
pop
mov
repz
adc
adc
or
sub
imul
adc
xor
xchg
gs
push
cmp
test
insl
mov
adc
or
sbb
mov
add
inc
loope
out
and
inc
push
movlps
lods
push
call
lret
out
jl
jnp
je
shrl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
enter
mov
outsb
mov
push
push
ret
les
bound
andl
push
mov
and
pop
aaa
cmpsb
fstps
fmull
xchg
jnp
arpl
outsl
dec
push
insb
adc
enter
mov
lock
mov
popf
dec
or
push
in
jg
or
iret
out
dec
pop
iret
scas
lock
mov
mov
and
add
test
xchg
pop
jo
jp
xorl
scas
dec
push
jbe
mov
sbb
or
mov
jmp
aam
test
cli
sbb
out
dec
lcall
cwtl
adc
aad
pop
mov
push
push
sbb
push
movb
add
mov
icebp
pop
ret
rorb
jae
pop
jge
mov
push
popa
gs
xchg
lods
xchg
dec
lcall
or
mov
sub
pushf
xor
jecxz
pop
cltd
gs
sbb
icebp
jge
and
ss
sub
push
addr16
pop
sub
nop
fsub
leave
data16
sub
push
cmp
jno
fmuls
xchg
fisubs
and
and
stc
insl
enter
inc
dec
push
xchg
cltd
xchg
mov
lahf
push
repz
out
int
fidivs
sub
sarb
pop
into
int
popf
xchg
iret
jb
cltd
cmpsl
dec
jmp
shrl
ret
mov
out
imul
add
pop
pushf
jbe
adc
dec
out
sub
cmp
gs
push
mov
aam
xchg
lret
enter
je
or
pop
dec
xor
xor
mov
in
popf
movsb
cmpsb
pop
pop
push
shlb
std
and
add
dec
mov
lods
insl
dec
mov
cmpl
push
repz
test
push
push
ret
or
cmc
jmp
cwtl
mov
push
filds
xor
add
mov
jp
test
jbe
imulb
imul
xor
jne
out
rcll
push
std
jg
mov
cltd
in
mov
inc
inc
cmp
pop
sub
add
dec
shlb
femms
inc
jno
mov
bnd
out
pop
add
in
pop
sbb
loop
xor
mov
pop
jmp
xchg
xlat
inc
jb
pop
ss
cmp
lods
add
sti
das
jb
iret
xchg
nop
in
mov
jne
pop
inc
in
add
repz
std
and
xchg
pop
sbb
cs
jne
pop
pop
sub
jb
inc
lds
cltd
cltd
xor
inc
nop
jns
inc
or
std
and
lret
daa
pop
mov
dec
outsb
mov
in
jl
les
push
cmpb
aas
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
mov
adc
or
nop
dec
ljmp
inc
jp
mov
adc
in
jmp
int
mov
test
xchg
xchg
push
pop
ret
jno
mov
dec
fadds
pushf
jno
pop
rolb
mov
test
fcmovb
and
inc
sub
jmp
xor
pop
ljmp
lcall
shrb
outsl
mov
cmp
mov
pop
fs
daa
fdivl
xchg
call
or
or
adc
fcompl
mov
mov
lahf
mov
sbb
adc
mov
ljmp
ror
shlb
mov
or
in
add
shll
ds
adc
mov
sub
jo
test
lret
rcrl
push
enter
mov
jp
add
mov
add
int3
ss
pop
fldcw
lea
jmp
icebp
lods
ror
sub
push
cmc
xor
icebp
in
jbe
jae
rcrb
inc
andl
xchg
xor
call
xor
mov
outsl
es
adc
call
addr16
hlt
sti
jno
in
orb
cmpsl
insb
xor
sub
cmp
xchg
mov
in
arpl
cmp
sbb
xchg
cmp
into
mov
iret
or
addr16
enter
fsubl
ja
pop
pushf
and
pop
push
add
cmc
stc
dec
sbb
pop
xor
jns
mov
std
sbbl
push
hlt
out
lret
lods
sbb
xor
mov
or
test
adc
pop
push
insl
adc
out
xlat
loope
lret
fldl
loopne
arpl
sbb
cwtl
cli
cli
and
loope
xor
arpl
push
mov
adc
aas
loopne
or
mov
sbb
push
jb
repnz
mov
mov
and
ret
bound
sub
jmp
push
les
pop
lds
jecxz
cmp
out
jle
mov
push
add
cmpsl
xchg
insl
idivb
jbe
iret
aaa
push
lods
or
or
jno
cmpsb
cmp
jl
jmp
jl
cmp
daa
xor
popa
and
mov
pop
pop
outsl
fstpt
mov
lret
dec
stos
shll
int3
jmp
mov
mov
daa
inc
xor
call
xchg
subb
filds
leave
pop
sbb
dec
out
sub
int
mov
inc
test
ss
xor
aam
inc
mov
in
sbb
jbe
add
or
mov
lods
int
push
mov
je
loop
xor
gs
cwtl
aad
xor
dec
mov
shll
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
sub
popf
add
ja
jg
ret
sbb
sahf
leavew
loope
ds
loope
mov
pop
sub
into
dec
push
or
into
or
sub
idivb
scas
mov
addr16
pop
test
dec
inc
sbb
nop
push
pop
dec
jge
cli
inc
out
es
add
cmp
dec
sub
adc
or
cmp
cmp
call
outsb
es
dec
xchg
inc
adc
mov
fnstcw
loop
jecxz
mov
out
shrb
cmpsb
test
pop
sub
cli
inc
sub
shrb
xorl
fcmovb
out
test
sbb
adc
mov
out
sub
xor
pop
lods
jb
add
jo
movsl
pop
pushf
loop
addr16
sbb
in
jg
adc
adc
insb
jle
ror
cmpsb
xchg
aam
push
clc
data16
mov
cmc
sbb
xor
into
jle
mov
lret
push
das
fs
add
fsub
add
push
addr16
rcrl
mov
adc
inc
outsb
push
mov
insb
lcall
and
lods
mov
xchg
sti
loop
lock
in
xor
pop
xor
push
push
sahf
je
push
dec
sti
insl
inc
inc
loopne
cmc
sub
mov
and
in
add
shlb
and
mov
ja
pop
imul
movb
cmp
jb
popa
addr16
inc
data16
repz
test
test
xor
les
lea
mov
mov
into
andb
iret
popa
pop
pop
pop
mov
push
adc
xor
lret
aas
mov
xor
adc
bound
inc
in
sub
push
movsb
xor
cmp
std
inc
fcmovbe
jl
nop
andb
jmp
jb
xor
lret
mov
mov
sahf
adc
xchg
popf
das
push
mov
sti
ds
lods
and
cmpsb
in
out
int3
add
sti
das
add
imul
mov
dec
dec
mov
inc
shlb
aaa
sbb
mov
insb
cs
mov
xchg
mov
cmp
cmpsl
stc
add
test
ret
imul
push
cld
add
mov
cmp
pop
repz
push
ss
mov
adc
sbb
push
outsb
repnz
ret
test
lods
lds
add
xor
ja
xor
incb
insb
dec
and
test
jle
dec
sbb
ret
daa
cmp
jnp
sti
stos
mov
cmpsl
inc
sahf
lret
mov
sbb
in
mov
and
pop
inc
addr16
jns
push
mov
lret
fcmovnbe
dec
test
hlt
aaa
pusha
fdivrs
into
aam
lods
pop
xor
pusha
subb
cmp
and
xlat
fimuls
sub
test
insl
sbbb
stos
xor
bound
sub
and
dec
push
push
aam
push
mov
nop
mov
fiadds
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
mov
adc
jp
adc
add
pop
fbld
push
test
lret
xchg
mov
pushf
stos
aad
cmp
jae
sbb
pop
fbld
mov
pop
dec
or
adcb
imul
and
sub
in
ret
cwtl
ret
xor
jbe
adc
test
add
xlat
fdivl
push
xchg
jo
fidivs
mov
pop
mov
cmc
and
scas
pop
add
jb
mov
jns
rorb
addl
mov
cmp
out
pop
push
jmp
and
in
adc
dec
inc
mull
mov
dec
or
fbstp
roll
lods
xchg
dec
mov
in
xchg
jmp
adcb
or
scas
lret
sahf
jnp
das
sete
cmpsb
push
adc
push
ljmp
sub
push
pop
repz
add
mul
adc
pop
add
push
jg
fistpl
sbb
sub
into
lret
push
and
movsb
aam
and
outsl
dec
push
mov
pop
adc
add
jae
dec
sbb
mov
push
lret
adc
call
mov
sub
cs
add
mov
cs
repz
fadd
scas
adc
and
sbb
push
sahf
pop
repnz
fdivrs
jno
sub
daa
inc
sbb
mov
jns
imul
xor
or
mov
xlat
pop
cmp
cmp
imull
sbbb
pop
mov
jbe
rcl
pop
dec
mov
ja
or
subl
in
mov
adc
sarb
out
ret
xlat
sbbb
aad
and
lret
clc
pop
fsubl
ss
into
xor
xlat
or
adc
in
dec
aas
xor
sbb
nop
cmp
pusha
dec
ja
mov
fistps
dec
call
js
ret
jg
and
xor
inc
dec
push
in
jae
dec
lds
push
push
loop
or
cmp
notl
bound
adc
repnz
push
dec
inc
arpl
out
add
mov
std
ds
sbb
out
rorl
pop
fstl
cld
shll
notrack
cltd
add
jg
mov
and
dec
sbb
idivl
cs
pop
cmp
or
sub
cmp
adc
inc
aas
cmpsb
push
jns
stos
mov
fidivs
test
jmp
jge
cltd
sub
insb
mov
loopne
fcoml
mov
mov
mov
and
jle
mov
jmp
imul
lcall
fldcw
rorb
out
lods
pop
sbb
adc
sub
insl
pop
dec
loopnew
pop
negl
mov
loope
adc
ds
aad
xchg
mov
xlat
and
mov
test
sahf
fimull
adc
aaa
fsub
mov
out
lods
test
js
mov
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
push
out
insb
test
adc
adc
int3
xor
add
aad
ds
and
jae
ja
jnp
cmp
mov
std
test
neg
roll
stos
dec
test
roll
lods
fbld
sub
shlb
movsl
lcall
push
cli
pop
mov
lods
xlat
js
ljmp
mov
dec
sub
or
mov
sub
stos
and
bound
mov
mov
or
mov
out
gs
imul
sbb
xor
mov
sub
xor
shll
test
jns
sti
and
xchg
cmp
and
lcall
and
inc
xchg
pop
or
ds
inc
jae
push
cmc
and
push
mov
pop
fcoms
je
nop
push
rorl
je
les
sbb
fldenv
xchg
mov
lods
popf
adc
cmc
test
pop
insb
mov
fisubs
mov
leave
inc
mov
mov
add
lret
imul
fbstp
dec
icebp
addr16
inc
into
sub
ss
sahf
cmp
popa
push
push
adc
push
ss
mov
adcl
or
xor
cld
pop
sahf
sub
pop
loop
and
cmp
sbb
je
adc
mov
fnstsw
shrl
cmp
je
fnstsw
add
aas
xor
mov
or
popf
dec
sub
sbb
dec
dec
inc
in
cmp
fsubs
das
sub
mov
inc
adcb
jmp
inc
add
in
cmc
das
xchg
inc
lods
and
sarb
adc
cld
fildll
fstps
and
pop
pop
dec
push
dec
or
push
out
cmp
out
std
jecxz
sub
dec
imul
shrb
jne
adc
dec
inc
movsl
jne
push
and
mov
dec
sbb
push
lds
daa
mov
or
cmpsl
adc
cmp
jl
xlat
mov
pop
hlt
adc
xchg
into
sbb
xor
jb
bound
add
mov
jo
xor
push
add
and
push
call
inc
add
hlt
mov
xor
pop
std
mov
stc
inc
adc
ror
pop
imul
push
in
mov
xchg
inc
lcall
mov
lods
xor
imul
push
push
pop
int3
xchg
xchg
out
out
mov
ss
and
push
divb
in
dec
out
inc
lods
out
mov
xor
xchg
sbb
pusha
dec
das
sbb
in
pop
cld
or
pop
fs
add
adcb
push
dec
mov
loope
push
bound
sti
cmp
and
sub
out
xchg
scas
add
das
inc
inc
mov
sbb
jmp
lret
push
fs
pop
in
sbb
ss
inc
popa
div
loopne
jmp
add
add
shrd
jecxz
pop
mov
xchg
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
push
push
push
adc
jp
adc
add
je
loop
mov
and
push
cmp
jne
std
rcrb
roll
outsl
loop
pushf
add
js
sbb
popf
rorl
je
sbb
mov
bound
rol
hlt
out
mov
fs
repz
sbbb
lock
aad
pop
loopne
call
mov
push
xchg
testb
pop
cmp
xor
addr16
dec
imull
fldenv
jp
push
enter
sahf
sbb
es
icebp
pusha
xchg
das
outsb
jmp
aam
mov
mov
jb
ret
mov
mov
aaa
fwait
inc
dec
pop
in
xor
sbb
inc
rorb
or
mov
loopne
mov
push
pop
add
add
das
sub
in
in
test
ss
je
into
ljmp
inc
inc
sahf
cmp
jne
and
push
push
push
mov
sub
pop
add
jb
ja
xor
inc
xorb
cmp
out
jmp
push
popf
lahf
fldt
push
adc
mov
icebp
sub
mov
pop
hlt
out
cld
insl
repz
xorl
rorl
call
cwtl
test
ret
shl
into
push
and
hlt
es
mov
push
dec
das
out
mull
sbb
dec
pop
push
addr16
mov
cmp
xchg
scas
cld
ljmp
sub
jge
jge
scas
pop
mov
push
xlat
jae
push
pop
push
sbb
daa
inc
adc
cmc
subb
mov
jb
mov
enter
cwtl
mov
or
ret
adc
shll
mov
outsl
push
mov
call
push
js
adc
andb
mov
fiaddl
cmp
or
mov
mov
scas
jne
int
mov
add
es
pop
repz
or
je
daa
sub
jnp
mov
lahf
mov
test
jb
xchg
and
dec
jns
fwait
xrelease
sub
fistps
sbb
dec
lcall
inc
fsubrl
mov
mov
fsubrl
aad
scas
sbb
or
adc
and
and
push
adc
jb
or
xor
add
cmp
sub
pop
dec
add
jle
sahf
mov
outsb
in
jmp
pop
outsl
or
std
mov
inc
test
cmpsl
out
xchg
push
insb
inc
and
adc
int3
add
push
hlt
jb
jecxz
or
jle
xchg
adc
scas
mov
mov
jecxz
sub
sub
xchg
inc
push
mov
jmp
test
sar
rorb
cwtl
dec
push
enter
jbe
stos
sarl
pop
xchg
dec
xchg
sbb
icebp
xor
or
inc
in
adc
add
mov
in
out
and
stos
push
sbb
aaa
insl
in
stos
outsb
xor
push
movsl
mov
sbb
lahf
cmp
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
fisubrs
inc
adc
lea
adc
jno
das
jecxz
add
loope
fdivrs
daa
inc
lret
cmp
mov
push
push
jns
mov
into
or
subb
sub
jge
movsb
insl
jne
pop
test
xchg
xchg
int3
cmp
sbb
inc
pop
mov
mov
xor
and
adc
xchg
lds
inc
aam
push
add
cmp
pop
fldt
sbb
push
inc
imul
fwait
xor
and
cmp
sbb
cmp
sub
push
es
es
test
xchg
sbb
bound
cmp
and
lods
push
movsb
jle
lret
lock
adc
test
and
fsubs
xor
pop
stos
cmp
jmp
dec
sub
cmp
mov
xchg
pop
jno
loop
lahf
and
mov
sbb
cmc
jg
jl
outsl
pop
inc
test
cwtl
std
sarb
aaa
popa
nop
push
push
fcomps
mov
divb
faddl
xorl
jae
pop
or
clc
dec
mov
cli
xor
push
or
pushf
decb
cmp
cmp
scas
mov
push
sbb
lea
mov
pushf
scas
lds
and
fwait
mov
cmp
je
sahf
jns
mov
xchg
loope
lret
inc
scas
pop
adc
cli
movsl
xor
imul
sahf
inc
ds
jns
movsl
push
jae
loope
mov
sahf
dec
add
into
std
test
cmp
in
cwtl
out
cmp
aad
in
xor
cwtl
sbb
cmp
or
in
mov
jno
lods
and
aaa
lret
xchg
dec
jb
cmc
or
faddl
cmpsl
xor
popf
movsb
mov
xchg
out
repz
dec
cmpsl
mov
cmp
lahf
popf
cmc
rorl
ds
inc
inc
test
pop
repnz
xchg
push
fs
mov
dec
dec
xor
outsb
sar
mov
lock
ss
jg
jbe
push
adc
push
insb
adc
sub
outsl
outsb
lea
stos
lret
push
outsb
jecxz
or
cmp
cmp
shr
mov
push
out
in
mov
out
xor
jno
enter
cltd
in
add
jp
int3
lahf
daa
add
leave
or
jmp
inc
insb
loope
mov
fisubs
out
mov
add
xchg
jb
andb
jecxz
jg
xchg
mov
xorb
push
fmull
lods
push
rorl
pop
cmp
xchg
ja
mov
dec
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
icebp
cmp
loope
rclb
insl
sub
xchg
ret
aaa
enter
add
leave
sub
loope
pop
repz
daa
add
roll
cmc
jnp
adc
xor
cs
pop
movsl
push
pop
orb
aas
mov
fists
mov
repz
addr16
leave
adc
adc
int3
int3
or
pop
jg
bound
fucomip
or
out
testl
cmpl
add
js
call
cmp
inc
std
mov
pop
inc
cmp
fdivrs
mov
repnz
aas
pop
xchg
push
mov
icebp
enter
sub
add
jecxz
mov
pop
cld
aad
dec
xchg
and
mov
push
test
adc
mov
jl
cmpsb
stc
or
xor
jb
xor
orl
test
rcr
sbb
mov
sbb
cmp
stos
neg
inc
cwtl
gs
iret
rolb
and
jnp
nop
pop
lods
loop
mov
fwait
mov
mov
jecxz
xchg
fstp
imul
js
dec
loop
pusha
inc
outsb
cld
dec
cmp
lahf
xchg
sti
cmp
cmc
adc
outsl
aaa
in
outsb
xor
rcrb
mov
cmc
aam
pop
mov
mov
pop
lds
mov
inc
sbb
ja
pop
jns
adc
pop
jl
in
and
popw
aam
repz
cmpsl
lds
into
mov
sub
push
jae
stc
cld
cwtl
shlb
inc
add
push
ljmp
cvtps2pi
int
push
and
jl
mov
es
and
imul
popa
sti
ud2
stc
aas
pop
test
inc
mov
sbb
mov
mov
sbb
stos
dec
sti
jg
or
sbb
mov
js
fdivrl
adcl
xchg
pop
popa
xchg
int
js
imul
mov
jl
mov
xchg
jne
outsl
sbb
pop
xchg
fcomps
mov
filds
aaa
xor
jno
xor
sub
inc
sub
std
movsl
pushf
mov
push
fcompl
xor
mov
sbb
aaa
xchg
imul
pushf
cmpsl
mov
sbb
fstpl
jne
pop
jmp
sub
addr16
cmpsb
xchg
dec
mov
orb
leave
sub
mov
ss
xor
cld
outsb
insb
daa
sti
and
push
shl
mov
or
mov
cmp
add
add
mov
xlat
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
xlat
cmp
leave
daa
lds
inc
xchg
out
bound
aas
mov
mov
repz
pop
mov
inc
lds
outsb
or
inc
fdivrp
gs
lea
movsl
pop
mov
out
ret
inc
lcall
repz
xchg
xor
inc
jns
aas
dec
loop
fdivrl
mov
sbb
mov
out
jbe
jb
push
mov
cwtl
lods
arpl
sarb
lret
xor
fsubs
fists
dec
sbb
fisubrs
lret
dec
dec
cmc
mov
mov
xchg
gs
sub
mov
mov
adc
mov
push
cmp
es
cmp
scas
push
movsl
insl
imul
sar
inc
xorl
fcomps
mov
test
sti
out
icebp
pop
pop
push
test
imull
fnstcw
jmp
xchg
pop
pop
data16
movsl
lret
or
js
dec
xchg
inc
jmp
cmpsl
jns
sub
adc
insl
lahf
cltd
imul
aam
lcall
mov
sbb
sub
mov
mov
sbb
fisttpll
inc
cli
adc
fwait
mov
push
inc
pop
lcall
rcrb
dec
cltd
lods
jl,pt
icebp
mov
pop
test
mov
insl
cmpsb
sub
repnz
adc
ret
mov
ret
enter
pop
mov
rcrl
pop
stc
mov
xor
mov
mov
xchg
cmpsb
jbe
fiadds
cmpb
imul
loopne
cmp
sar
pop
aas
cwtl
cmpl
cmp
dec
push
mov
sub
jp
jo
shrb
jb
call
cwtl
arpl
and
push
xlat
pop
jecxz
testl
dec
pop
mov
sbb
add
mov
jp
push
mov
test
push
add
push
ss
std
sub
cmp
fdiv
pop
lret
mov
cmp
test
sbb
fnstenv
cli
pushf
iret
gs
mov
and
xor
addr16
popf
pop
pop
mov
inc
adc
cmc
hlt
movsb
das
scas
and
cmp
clc
jo
std
mov
sti
movsb
push
cmp
cmp
arpl
sub
mov
lock
sbb
inc
push
test
popa
or
xlat
fidivs
and
js
cmpsb
add
rolb
push
mov
push
iret
jmp
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
sbb
pop
mov
lea
adc
push
gs
ljmp
mov
jg
imul
mov
mov
xor
jecxz
push
xlat
test
push
aaa
push
xor
enter
test
lret
scas
cmp
movsb
call
jl
mov
outsb
and
idivl
inc
sub
xorb
pop
add
push
xchg
cs
into
shlb
add
imull
mov
and
js
sbb
jge
pop
pushf
gs
out
imul
and
cltd
movsb
cmpsl
jns
inc
aaa
inc
arpl
sub
jp
mov
sub
cmp
jge
iret
ljmp
popa
jnp
lock
add
and
test
jns
xchg
mov
dec
leave
outsb
daa
jp
jp
push
popa
loope
mov
call
push
add
push
mov
loopne
push
out
clc
pop
xor
inc
ja
mov
imulb
sti
movsl
mov
daa
into
or
scas
ficomps
rclb
loop
mov
or
xchg
movsb
sub
push
mov
test
call
push
rcl
or
aad
inc
ljmp
or
inc
push
bound
int3
sub
inc
out
scas
lahf
cli
cwtl
push
sbbb
adc
repz
pop
cli
dec
mov
sbb
test
frstor
xlat
or
jp
stos
outsb
sahf
stos
in
lret
aas
mov
dec
xchg
mov
xchg
push
clc
sub
push
sbb
xchg
jmp
movsl
popa
dec
into
xchg
insl
call
movups
adc
and
cmp
fs
mov
cs
lock
push
ftst
push
cmp
jo
daa
mov
leave
mov
lret
push
jae
pop
movsb
jae
call
mov
popf
adc
jg
push
cmp
dec
sbb
mov
jne
jmp
out
sub
ss
out
std
add
xchg
inc
sub
ja
push
push
scas
cld
clc
or
out
mov
dec
push
cli
icebp
fs
jl
clc
jle
mov
xchg
mov
inc
and
aam
xchg
add
push
nop
adc
sbb
xor
ja
xor
jno
movsb
mov
stos
popf
idiv
and
dec
bound
es
sub
inc
jecxz
negl
les
mov
dec
outsb
bound
shlb
pop
ret
cmp
pop
dec
mov
sti
cmp
lahf
add
push
pusha
inc
xor
dec
inc
push
sti
andl
in
jg
mov
inc
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
arpl
lods
inc
xor
adc
call
jne
repz
jbe
jmp
outsl
sub
imul
out
data16
addr16
out
movsl
cld
test
adc
push
sbb
pop
icebp
aam
imul
sub
data16
iret
adc
div
mov
cwtl
js
mov
mov
xchg
lea
xchg
insb
xchg
jecxz
jnp
les
pop
rcl
fmul
xchg
mov
rcrl
xor
mov
xchg
jecxz
call
push
popa
je
fcoms
rolb
or
mov
mov
shl
out
mov
mov
lcall
test
add
popa
dec
add
divb
adc
xchg
inc
pushl
decl
loop
adc
push
jmp
pop
sbb
ret
enter
xor
push
sub
fiaddl
dec
sbbl
pushf
jbe
add
lret
push
addl
xchg
out
push
mull
adc
pushfw
lret
enter
rolb
xchg
mov
xchg
and
pop
popf
dec
int3
ss
les
sarb
loopne
les
xor
dec
sub
movsb
xor
push
lcall
xchg
pop
sbb
jg
daa
popf
jecxz
adc
cmp
dec
mov
aas
lahf
xor
jmp
xorb
int3
push
add
imul
push
cmp
inc
jno
mov
cmp
aad
pop
cmc
inc
and
es
add
cmp
ss
cmpb
sarl
push
arpl
dec
or
std
or
movsb
loopne
fstpt
xchg
lret
xchg
and
add
sbb
lea
aam
movb
aas
sti
or
fstp
pop
pop
lahf
jae
or
in
loope
sbbb
xchg
or
pop
es
imul
enter
push
mov
adc
add
pop
add
mov
rcrl
add
jp
dec
sbb
xorb
pop
mov
pop
loopne
jb
sbb
xchg
and
jecxz
mov
jmp
fistps
and
add
enter
cmp
arpl
addr16
add
scas
out
cs
jns
imul
mov
sbb
add
mov
push
rcl
test
jns
mov
xchg
inc
leave
popf
pop
data16
inc
fldln2
mull
loop
jmp
mov
jge
gs
push
aad
into
mov
aaa
lock
push
pop
inc
jle
jmp
mov
xor
mov
leave
mov
rcll
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
sub
jle
sub
adc
nop
out
cmp
clc
and
push
mov
mov
push
shrl
repz
push
popa
pop
test
push
lods
pushl
mov
dec
pop
xor
movsb
cmp
leave
arpl
movb
aad
das
rcrb
and
mov
rcrb
mull
mov
inc
outsb
adc
pusha
sbb
outsb
mov
imul
dec
dec
adc
out
js
push
sub
aad
addb
jmp
push
jbe
leave
in
je
cs
loop
mov
sar
pop
iret
push
mov
inc
movsl
adc
ret
ss
mov
xchg
scas
cmpl
xor
pop
ja
pop
jnp
jo
jmp
fsubl
cmp
push
scas
xor
or
jle
push
pop
ficompl
jb
sti
inc
xor
push
push
loopne
cmp
rcrl
ret
push
cltd
inc
stos
xor
inc
dec
mov
push
jecxz
sbb
jg
add
pop
cmp
cmp
push
pop
jae
cmp
xor
mov
gs
hlt
cmp
shll
sti
enter
fnsave
fistpl
sub
and
sub
lret
mov
mov
stos
jmp
xchg
daa
mov
out
mov
ret
xor
xchg
xor
js
pop
aam
lahf
movl
stos
push
bound
test
movsl
xor
gs
jne
icebp
in
mov
or
adcl
cmp
dec
cli
pop
xchg
push
pop
fcmovu
push
sbb
mov
test
loope
xchg
mov
roll
call
iret
and
pop
jecxz
dec
ljmp
inc
push
cmpsl
gs
add
dec
stos
push
aam
loop
push
ret
inc
jo
aam
std
pusha
pop
pop
push
add
xor
cmp
aad
xchg
test
xor
jne
xchg
aaa
aam
dec
fistpll
cs
bound
fwait
loop
jo
in
mov
add
and
mov
cmp
and
xor
adc
mov
into
sahf
push
scas
test
fldenv
jno
pop
mov
jecxz
xchg
inc
lods
leave
pushf
int3
into
stc
dec
add
lds
les
mov
or
sysexit
gs
loop
arpl
test
jmp
mov
sub
in
add
out
mov
test
arpl
hlt
test
jns
pop
xor
push
ljmp
mov
lods
bound
mov
sub
jb
inc
loopne
repz
mov
xor
xor
or
push
add
jmp
and
lods
and
js
inc
push
xor
adc
lea
adc
xorl
pushf
lret
push
int
mov
movb
mov
mov
xchg
mov
dec
mov
jbe
sbb
inc
enter
cli
mov
xchg
mov
scas
out
mov
mov
loopne
notb
xchg
sbb
call
xor
xor
adc
xchg
int3
adc
lret
js
movsl
add
xlat
cli
xchg
sub
cmc
outsl
outsb
push
sub
sub
add
gs
imul
subb
cmovg
push
jne
xor
add
push
push
je
mov
dec
out
movsb
pop
mov
push
inc
mov
mov
scas
mov
outsb
bound
dec
repnz
lods
test
xchg
jecxz
push
notb
fnstsw
dec
mov
rorb
sub
je
dec
or
mul
push
cmc
sub
negb
adc
dec
int
test
mov
jg
dec
push
push
pop
push
and
jle
mov
lahf
add
inc
push
scas
insl
or
popa
push
lahf
leave
adc
xor
or
imul
popa
dec
out
sbb
in
std
adcl
arpl
mov
pop
mov
mov
inc
data16
dec
jno
adc
into
pop
jns
mov
inc
jg
xchg
aaa
add
pusha
or
scas
jnp
in
push
in
mov
cmpsl
out
lock
mov
sbb
inc
push
dec
fiaddl
dec
fdivrs
sbb
test
lahf
add
cmp
ljmp
xchg
stc
pop
call
movsb
imul
fcmovnb
mov
repz
dec
pusha
jmp
push
xchg
mov
mov
sbb
imul
cmp
pop
cli
mov
xor
jmp
adc
enter
movsl
pop
xorb
mov
mov
adc
js
call
dec
sub
or
aad
insb
mov
and
dec
outsb
mov
xor
fwait
sub
add
add
pushf
fidivrl
cmp
xchg
cwtl
fwait
jg
pusha
sahf
std
mov
and
out
into
or
rcll
mov
xlat
les
das
clc
mov
addr16
push
push
dec
add
fadds
and
fucomp
sub
xor
pop
ljmp
sbb
daa
in
push
cmp
cltd
test
mov
lods
push
out
dec
cmp
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
jno
cmc
pop
popa
dec
xor
aaa
in
imull
add
and
or
arpl
mov
dec
rol
dec
stos
push
lds
and
shl
jmp
insl
cmp
fwait
xchg
sub
movb
jle
int
add
jl
mov
shrl
mov
rorb
stos
cmp
je
imul
mov
cmp
nop
or
add
adc
lcall
rcrb
arpl
test
jle
pop
jl
cmp
pop
xorb
mov
stos
inc
add
dec
ret
popf
pushf
cmp
mov
mov
add
mov
add
mov
xchg
lock
cmp
inc
jg
ja
int3
daa
bound
cli
xchg
inc
push
cs
lret
cwtl
pop
leave
push
and
insb
jb
push
inc
leave
dec
inc
loopne
mov
pop
mov
insl
xchg
xor
push
ficomps
and
adc
out
sbb
or
cmp
fimuls
lcall
jbe
pop
mov
adc
inc
mov
add
push
pop
dec
mov
xorb
mov
mov
inc
movsb
push
cmp
pop
decb
adc
ficompl
imul
push
pop
push
sub
dec
inc
xchg
add
and
sub
sbb
adc
rol
fwait
jns
dec
mov
or
push
data16
push
cmpsb
jmp
xorb
not
sbb
mov
mov
scas
lea
ljmp
dec
sbb
push
ljmp
subl
stos
in
stos
mov
fcomp
rcl
and
jmp
dec
mov
addr16
test
jmp
sbb
mov
add
pop
sbb
mov
jmp
adc
insl
repnz
inc
jo
push
int3
into
lods
pop
test
sub
loopnew
rol
inc
push
imul
in
mov
mov
mov
decb
push
ret
dec
xchg
adc
inc
cli
outsl
xchg
mov
and
pop
sub
imul
out
add
gs
insl
mov
notl
mov
add
addr16
fs
push
mov
dec
mov
inc
int
rcr
cli
das
jmp
xchg
ss
cmp
mov
cmp
add
jae
int
idivb
stc
shlb
mov
arpl
das
jnp
inc
adc
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
pop
lods
push
sbb
adc
inc
push
xor
iret
cmpsb
add
out
ds
fsubrp
lods
addr16
add
mov
out
xor
cmp
jl
mov
imul
push
addr16
or
sbb
int3
fidivrl
jl
mov
dec
sbb
cwtl
aad
dec
push
xor
lcall
jne
lods
jae
cltd
je
xor
dec
push
in
cmp
addl
popf
in
popf
pop
jmp
xchg
loopne
idivl
sahf
mov
les
or
dec
and
cmp
pop
xor
iret
adc
and
div
bound
into
add
cli
xchg
jbe
cmp
loop,pn
mov
cld
cld
dec
sub
repnz
push
push
shrl
push
sti
sub
rcr
mov
mov
sub
sub
dec
lret
inc
shll
inc
jae
pop
xor
mov
clc
repz
scas
mov
mov
rcrl
and
andb
hlt
jmp
mov
popa
push
adc
jns
xchg
dec
jecxz
lahf
ss
push
daa
cwtl
dec
movb
cmp
push
loop
push
lods
jmp
mov
jbe
xor
xchg
ficoms
jne
roll
pop
adc
lahf
mov
int
or
mov
outsl
xor
loopne
cmp
xor
mov
or
jno
mov
fstp
sbb
cmp
dec
gs
xorb
outsl
xor
pop
les
int3
and
dec
adc
cli
mov
jmp
inc
adc
fldt
push
add
movsl
ljmp
enter
add
mov
out
sub
cs
push
dec
xchg
loop
repnz
popa
mov
movsl
test
cmp
fcmovnbe
outsb
insl
sbb
cmp
in
cmpl
sub
xchg
popa
ficoml
mov
xchg
sarl
lods
jmp
lods
mov
fistpl
js
cmp
and
adc
pop
push
inc
imull
and
adc
xchg
and
dec
xor
nop
repz
lea
out
ljmp
roll
push
dec
adc
and
xlat
rolb
stos
cmp
jge
cs
mov
push
cmp
dec
push
mov
enter
jmp
sahf
mov
sub
pushw
dec
movb
jle
mov
lcall
sar
ljmp
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
xchg
movsl
mov
adc
adc
es
xor
xor
push
fsubrl
push
push
in
dec
adcb
mov
imul
cwtl
mov
adc
mov
clc
push
cwtl
adc
jge
ljmp
cmp
or
repz
clc
lods
rcll
xchg
cmpsb
addb
push
lock
push
cmp
add
insl
cs
add
cld
add
xchg
icebp
lods
dec
push
xchg
hlt
ret
inc
inc
or
int3
adc
jb
cmc
mov
push
pop
or
jecxz
js
pop
mov
shlb
in
jns
mov
sub
jmp
insl
fs
out
call
xchg
jp
sub
xchg
mov
xchg
jae
movsb
adc
cmpsl
xchg
xchg
insl
cmpsl
push
es
push
vdivpd
dec
repz
xchg
push
sub
lcall
les
adc
push
out
dec
jae
inc
sbb
sbb
testb
aaa
adc
or
mov
mov
xor
je
clc
icebp
mov
jmp
inc
in
insb
movsl
push
leave
lods
dec
shlb
jns
aad
pop
mov
cmpsl
sbb
sub
xchg
mov
cmp
data16
and
mov
push
lds
mov
cld
out
hlt
mov
aas
ret
dec
cmc
lods
ss
in
arpl
imul
cmpsl
sbb
xor
addb
mov
push
xor
xor
insb
dec
push
dec
dec
push
mov
jae
push
rcrb
dec
xor
ss
and
popf
test
iret
xchg
dec
ja
xor
fsts
jno
hlt
fldl2e
repnz
push
imul
mov
cld
add
jecxz
dec
repz
lods
test
or
fstpt
xor
mov
lret
icebp
or
sbb
cmp
pop
je
loopne
orl
scas
pop
fldcw
xor
add
or
test
sbb
stos
aam
pop
pushf
push
cmp
cmp
xchg
mov
sbb
xchg
adc
adc
xlat
imul
sbb
rcrw
push
stc
dec
or
cmp
repnz
jae
sbb
sbb
pop
in
out
mov
iret
xor
pop
pop
orb
iret
divb
ret
xor
movsl
jae
push
jb
jp
divps
cmpl
bound
mov
scas
out
js
pushf
xor
lods
mov
xor
orl
sub
hlt
loopne
in
mov
push
repz
shlb
cmc
xor
push
js
sub
mov
popa
dec
mov
fucomp
enter
loopne
and
aaa
cwtl
shlb
ja
xchg
stos
je
mov
pop
cmp
push
sub
inc
fdivrl
cmp
dec
pop
cld
push
leave
push
ret
repnz
push
out
lods
idivb
rcl
cmpsl
leave
cmp
mov
leave
cmp
imul
jb
pop
stos
inc
xchg
in
test
ret
loopne
adc
ficoml
mov
iret
or
jno
cs
cli
nop
xor
aam
mov
pop
sbb
cmp
call
fisttpl
mov
jg
hlt
lods
dec
iret
pop
sub
dec
in
aad
movsb
out
in
lret
push
jo
push
add
incb
mov
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
outsb
mov
adc
adcl
mov
fisubs
xor
cld
das
sbb
jns
ficoms
pop
cs
outsb
clc
fwait
clc
cld
pop
mov
jne
lcall
mov
rorb
or
xchg
cltd
and
pop
lods
lock
mov
jne
xor
mov
lcall
cmpsl
data16
dec
negb
pop
xchg
mov
adc
jle
adc
xchg
repnz
mov
addl
inc
aas
shrl
fs
int
clc
xor
cli
loopne
fldl
xchg
dec
cmp
pop
jmp
icebp
cmp
in
mov
sbb
arpl
popa
mov
xor
sbb
flds
dec
xor
add
jno
xor
test
add
mov
cwtl
repz
jle
pop
mov
sbb
push
cmpsl
filds
inc
fmuls
dec
sahf
xor
imul
lcall
lods
xor
test
inc
mov
and
xor
cmp
adc
addr16
mov
fwait
add
outsb
mov
add
aas
and
movsl
aaa
and
sbb
call
mov
and
push
nop
pop
fs
lahf
dec
sub
sahf
push
inc
ja
imul
je
test
pop
xor
push
mov
loop
and
push
pop
adc
xor
cmpb
popf
sbb
fimuls
das
xor
aad
mov
mov
rolb
push
adc
adc
cld
fimuls
icebp
xor
sbb
push
jno
leave
mov
ret
pushf
ljmp
xchg
mov
into
mov
insb
xor
mov
xor
inc
imul
xor
das
in
leave
mov
ret
iret
inc
sbbb
push
adc
mov
push
pop
repnz
push
repnz
hlt
nop
cmpl
popf
pop
movsb
or
dec
or
jle
jmp
pushf
xor
mov
mov
and
or
stos
mov
mov
ja
sub
sahf
inc
dec
in
and
dec
mov
and
or
add
and
lea
mulb
adc
and
scas
popa
shlb
sub
jne
mov
mov
adc
adc
sbb
or
aad
lret
pop
and
cmp
cmp
push
test
pushf
mov
pusha
dec
arpl
dec
cmp
jg
rcll
cs
xchg
shlb
in
ja
clc
mov
push
inc
xlat
pop
jl,pt
xchg
arpl
or
sahf
int
cmc
xchg
aam
jecxz
std
aad
mov
movsb
pusha
imul
mov
push
cwtl
sub
sarl
xor
sub
xor
mov
into
mov
and
pop
dec
pop
ss
dec
pusha
shl
mov
adc
mov
and
sbb
sub
loop
xchg
push
mov
stc
mov
testb
std
loopne
andl
xchg
loopne
xchg
xor
jne
jo
rcll
outsl
lock
dec
cli
fcoms
fdivs
or
xorb
lcall
jmp
mov
shrl
fstp
imul
jo
outsb
jno
les
stos
bound
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
rcrl
movsl
movsb
arpl
fcomp
daa
mov
mov
pop
push
scas
faddl
pop
adc
rolb
or
fsub
xor
mov
mov
adc
mov
loope
xor
movsb
data16
xor
xchg
iret
shl
cmp
aam
add
fnstenv
dec
inc
pop
inc
mov
and
jg
pushf
jmp
jecxz
lea
mov
mov
cli
in
cmpsl
cmpsb
aaa
fldenv
push
cs
js
lea
shll
ja
lock
fcoml
call
dec
or
iret
mov
jp
cmp
ret
dec
mov
scas
pop
test
pop
clc
push
ljmp
pop
jecxz,pn
sub
ljmp
jge
cmp
xchg
and
sbb
repz
cmp
ret
lock
jnp
sbbl
mov
adc
bound
int
add
mov
leave
sub
idivb
lea
xchg
sbb
sub
pop
xchg
bound
cmpl
pop
xor
mov
lcall
movsb
xor
cmp
mov
push
lcall
icebp
or
inc
mov
lods
pop
or
jb
mov
mov
ficomps
add
cmpsl
sbb
jg
pop
mov
in
dec
dec
pop
and
mov
mov
out
das
clc
sub
aad
adc
call
jl
mov
mov
and
mov
in
sti
ficoms
leave
cltd
xchg
and
outsb
inc
sbb
cmp
dec
out
inc
xor
mov
add
pop
ret
jg
dec
out
arpl
xor
aam
enter
mov
xor
cld
out
pop
arpl
push
xor
mov
sbb
aad
jae
scas
ret
movsl
push
test
movb
sahf
mov
bound
mov
cltd
jb
sub
rolb
push
mov
imul
pop
jecxz
mov
inc
xchg
push
bswap
add
mov
adc
loop
adc
cmp
cmp
sub
stos
shll
or
jno
fadd
scas
dec
sti
stc
std
jmp
jl
fimull
mov
dec
imul
out
cmpsb
push
lcall
inc
jnp
xchg
leave
xchg
aaa
rorl
cmpsl
gs
movl
fwait
sub
out
inc
les
lahf
cmp
sbb
jp
fldcw
leave
pop
sbb
lahf
repz
and
sub
ret
mov
sbb
mov
adc
pushf
mov
add
jo
mov
sub
mov
mov
lock
lods
inc
cmpsl
mov
scas
notl
fistl
add
mov
mov
addr16
lods
pop
sbb
pop
shrb
xchg
and
sti
fnsave
push
idivl
xor
test
inc
out
push
inc
imul
mov
sub
push
scas
enter
loopne
xchg
out
sahf
inc
sbb
fxch
aam
sub
or
mov
mov
pop
xchg
movsb
jnp
stos
jo
ficomps
xchg
jne
sub
dec
int
in
jns
push
leave
or
insb
test
cs
adc
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
mov
call
adc
es
lods
cmp
cwtl
outsl
adc
stc
cmp
sbbb
cli
mov
push
sub
mov
pop
lar
xor
pop
jmp
xchg
mov
ljmp
sahf
dec
lahf
cs
push
jns
cmp
jbe
stc
sbb
push
cld
xchg
popf
and
mov
push
nop
fwait
mov
stos
mov
push
jnp
dec
cld
cmpsb
std
jno
pop
push
lret
stos
and
neg
pop
faddl
push
jp
in
clc
sub
dec
push
rcrl
ja
sbb
popa
mov
xorl
hlt
icebp
mov
push
xchg
and
pop
sbb
adc
loope
fs
test
mov
sti
dec
sbbb
js
pop
or
rcrl
outsb
push
jnp
sub
mov
add
cwtl
out
mov
cmc
mov
sarb
call
aad
mov
push
out
dec
xor
push
inc
addr16
sbb
push
imul
fistpll
das
jne
rcrb
push
mov
sbb
cs
aaa
pop
add
shlb
inc
push
movsb
mov
and
in
mov
jge
push
imul
or
inc
ret
leave
lcall
push
mov
xchg
jbe
fldenv
pop
cltd
nop
test
push
mov
or
pop
jne
pop
movsb
insl
lock
lahf
int
out
cmp
cwtl
testb
ficoml
out
dec
cmp
outsl
adc
bswap
inc
pop
adc
movsb
jp
mov
loop
fs
dec
push
xor
dec
jg
jo,pn
rolb
out
insl
shll
imul
jge
sub
out
xor
outsb
and
jb
mulb
js
xchg
cltd
sbb
jle
xor
stos
sbb
jl
push
nopl
scas
add
push
lds
lret
xor
jl
out
mov
pop
or
bnd
xor
sub
jecxz
push
mov
sub
jmp
and
adc
and
adc
dec
stc
xor
fstpt
loop
imul
sub
or
or
loope
aad
cmp
cmpsb
jnp
mov
inc
sbb
mov
aad
xor
fistpll
ss
repz
xor
std
call
adc
rorb
aad
out
xor
shrl
xchg
xchg
fcompl
rclb
cmc
out
push
sbb
cmp
fidivrs
outsb
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
stos
fs
std
adc
adc
in
sbb
and
dec
adc
pusha
push
mov
stos
mov
or
out
cli
out
mov
rcll
setnp
dec
xchg
imul
cmp
dec
push
das
push
movsb
sub
jg
scas
xchg
cs
cltd
mov
or
xchg
lret
icebp
fstl
pushf
mov
imul
mov
add
into
mov
mov
lahf
dec
or
mov
add
dec
and
inc
sbb
sarb
int3
jo
out
cwtl
sub
cltd
lret
movsb
sbb
shrl
gs
insb
mulb
daa
xchg
cli
xchg
mov
pop
jns
pop
pop
mov
pop
gs
out
call
mov
ja,pt
sti
popf
xchg
jmp
in
dec
xchg
mov
mov
sbb
sbb
mov
sbb
scas
jb
popa
hlt
mov
push
pop
push
fistl
dec
mov
sub
jbe
jns
mov
in
mov
jns
fldt
lds
push
xor
out
push
pop
xchg
push
or
ret
lret
fdivl
adc
ret
cli
xor
jl
adc
sub
jb
dec
push
mov
stos
std
and
mov
cmp
adc
xor
mov
mov
add
push
mov
push
mov
add
je
mov
sub
pop
push
add
xor
jmp
sub
xchg
jo
imull
fimull
movsb
jmp
mov
sbb
or
add
cmp
mov
pop
inc
push
xchg
mov
sub
ficoml
cmp
adc
roll
je
adc
dec
inc
jmp
int3
push
jge
popf
pop
jne
jb
push
sub
sub
lods
jge
ja
clc
push
adc
and
mov
add
push
jne
fs
fs
lret
and
outsl
push
xor
sbb
movntq
iret
mov
sbb
cmpsl
mov
stos
scas
pop
cmp
adc
imul
ud1
add
or
rcll
popf
add
dec
adc
ret
ret
add
dec
jb
add
and
pop
cld
mov
sahf
mov
jp
loope
mov
test
mov
insl
push
test
or
xchg
test
cwtl
cltd
jg
mov
add
push
leave
test
cmpsb
lock
mov
divb
dec
cmp
mov
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
call
adc
adc
mov
sbb
popw
iret
or
stos
xor
dec
rolb
sbb
mov
faddp
aas
lahf
insb
jge
xchg
cmpsb
loop
jmp
unpcklps
cmpsl
adc
adc
mov
pushf
lret
jae
cmc
out
mov
push
push
mov
arpl
loope
ficoms
shrl
jmp
sub
sahf
es
push
pop
dec
lret
pop
push
inc
jg
sti
sub
xor
pop
out
jno
clc
int3
cmp
ljmp
mov
cli
dec
addl
cltd
dec
xchg
mull
daa
or
sub
lods
mov
xor
lods
jnp
fwait
inc
mov
sti
test
jo
enter
dec
rclb
push
cs
and
mov
sub
add
jns
xchg
fyl2xp1
sub
cld
mov
lret
aaa
adc
inc
pop
out
inc
xchg
push
mov
nop
test
fwait
jb
inc
rcl
add
loope
cmp
addl
iret
loop
movsb
sub
popa
int
mov
stos
adc
push
ficoms
daa
cmp
jecxz
fdiv
jbe
and
stos
push
mov
jle
push
jecxz
test
aaa
call
pusha
in
sub
or
pop
xor
dec
xchg
xor
sub
rep
add
pushf
xchg
sahf
mov
jne
aam
cmpl
hlt
mov
jecxz
cmp
mov
push
cld
aaa
cmp
push
movb
lcall
push
or
push
jl
scas
insl
sub
cwtl
fisttpll
pushf
jnp
test
add
mov
cmp
fsub
pushf
xchg
lock
into
das
add
dec
jge
sbb
dec
sub
sbb
jmp
jecxz
stos
and
cmp
mov
cmpsb
sub
xchg
js
test
inc
roll
and
dec
xor
pop
daa
leave
pop
sar
sub
jge
xchg
mov
adc
jp
div
inc
add
fdivrl
in
out
push
inc
push
pop
adc
push
sub
das
iret
repz
cwtl
and
xor
jo
sahf
inc
stc
or
loope
inc
les
adc
push
outsb
fildll
rcrb
lods
test
mov
data16
iret
xor
jae
cmpsb
lcall
test
dec
xor
pop
xlat
arpl
inc
dec
test
push
cs
jmp
xor
addr16
sbb
or
sti
scas
push
mov
loope
jo
or
lds
jge
inc
add
rol
xchg
in
add
daa
add
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
loope
insb
push
out
adc
adc
mov
xor
stc
push
add
pushf
jae
lods
lods
add
aaa
loopne
jb
add
in
cltd
enter
fldl
mov
repz
dec
mov
mov
orl
mov
push
cmp
xor
xchg
fxch
enter
cmp
dec
and
pop
mov
dec
les
add
add
adc
fs
push
dec
push
pop
das
add
and
ja
lret
test
clc
push
pusha
mov
in
cmp
xor
jne
pop
mov
orb
testb
xor
fs
pop
xchg
cmp
loope
popf
out
cmp
pop
inc
dec
pop
ret
or
sub
mov
xchg
scas
movl
fsubp
push
aam
shll
jp
out
sahf
xchg
xchg
test
mov
mov
in
xchg
dec
cmpsl
and
sti
les
sbb
xchg
push
je
inc
insb
mov
push
and
roll
jb
addl
lods
es
cmp
jecxz
cmp
or
push
cmp
push
add
fwait
iret
lods
popf
adc
xchg
xor
and
mov
push
imul
subl
jl
mov
push
jmp
testl
adc
cmpsl
push
or
add
in
jg
inc
arpl
sbbb
filds
icebp
dec
mov
mov
cs
or
mov
insb
add
adc
xchg
std
out
mov
mov
es
sub
out
mov
aad
push
lcall
pushf
adc
jg
rcll
lcall
into
scas
jl
jg
inc
and
jg
mov
pop
mov
sbb
adc
or
add
xorb
ljmp
and
test
leave
in
test
xor
js
or
xor
sbb
add
mov
int3
lods
stos
decb
das
mov
test
xorl
jecxz
pop
sbb
pmulhw
fadd
test
es
push
addb
adc
shrl
aas
or
jge
ss
mov
inc
cmpsb
call
inc
cmp
in
pushf
inc
addr16
mov
shrl
fbld
push
dec
jge
and
stc
adc
inc
lahf
movsl
jo
popf
pop
mov
adc
inc
sbb
into
rcll
or
xchg
add
mov
adc
xchg
imul
fstpt
mov
das
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
div
push
sub
adc
arpl
repz
lods
fistpl
repnz
sbb
pop
push
stos
test
test
cmp
xlat
dec
push
add
std
repnz
std
prefetcht2
dec
subl
sbb
in
movsb
xchg
cmp
mov
loope
dec
popl
sbb
stos
cmp
mov
jg
xor
dec
movsb
jo
jne
sub
je
fcmovu
or
js
je
aad
push
ret
aam
pop
popl
ss
cmp
cs
pop
pop
mov
push
mov
mov
add
inc
sbb
adc
mov
arpl
jbe
ret
gs
cmp
inc
addb
sahf
cmp
or
es
mov
incb
mov
cwtl
mov
cmpsb
cld
xchg
sti
loope
std
lds
mov
jne
cld
pop
xor
lods
sbb
or
int
lret
in
jne
jae
inc
out
add
add
push
cmp
fmul
ror
sbb
aaa
iret
mov
test
sbb
movsb
bound
fs
mov
mov
out
add
shrb
mov
mov
mov
xchg
push
sar
xchg
sbb
mov
cmpsb
clc
sub
push
imul
fs
mov
cmc
int
add
gs
imul
or
xchg
out
add
sub
insl
xchg
ret
cli
dec
adc
outsb
xor
sbb
mov
out
pop
xchg
cli
xchg
adc
push
lahf
and
inc
ss
cli
outsb
and
and
cmp
push
sahf
jno
lea
mov
pop
pop
rolb
push
xchg
aad
scas
dec
push
xchg
out
lahf
out
int3
and
pop
cmp
repnz
pop
add
add
lret
pop
int3
out
sub
arpl
and
stc
rorb
pop
cmpsb
xchg
jp
into
in
jecxz
clc
popa
sub
loop
bound
jmp
loope
add
adc
lods
mov
mov
bound
in
dec
insl
lret
push
or
test
pop
jbe
cmpsb
ret
pop
fdivs
insb
fiadds
pop
xor
cltd
ds
jg
fadds
lods
xchg
or
loop
pop
mov
dec
or
aad
ds
aam
jns
or
dec
or
mov
rorl
pop
fidivrs
jmp
in
in
push
push
js
rclb
pusha
and
xor
or
insl
test
imul
xchg
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
out
dec
mov
xchg
movlps
pop
rolb
jb
mov
jge
mov
mov
push
or
cmp
mov
mov
scas
xchg
out
shl
mov
fucomip
pminsw
shrl
jbe
pop
jl
aas
jno
sub
jbe
std
jns
sub
call
mov
push
adc
popa
mov
fidivs
adc
xor
mov
and
xor
in
mov
leave
push
jmp
outsl
mov
and
std
mov
add
hlt
jge
cmpsl
ljmp
out
ljmp
xchg
aaa
cmp
clc
mov
mov
push
cmc
jge
sub
pushf
lock
adc
stos
stos
pop
dec
inc
aam
in
xchg
bnd
es
cmp
test
xchg
dec
daa
pushf
inc
repnz
dec
mov
sbb
cmp
or
or
jo
sub
xor
inc
jecxz
sub
xor
inc
out
aad
mov
in
sbb
fstpl
fmull
inc
insb
cmpsb
dec
add
aaa
pop
cltd
enter
push
mov
ret
mov
lret
call
jp
cli
pusha
cwtl
sub
mov
push
leave
xchg
bnd
pop
dec
pop
push
mov
repnz
jae
fs
outsb
rclb
add
adc
push
xchg
pop
in
sub
into
pop
dec
rorb
mov
sbb
insl
dec
addb
push
mov
pop
fildl
xchg
xchg
es
addb
daa
jle
add
pusha
mov
test
sbb
jmp
or
add
cmc
mov
icebp
cs
lods
push
insl
cmp
ret
hlt
mov
xor
or
jb
aaa
inc
push
push
ljmp
fwait
inc
stos
xor
dec
jmp
fcomip
xor
push
push
push
addl
add
inc
xchg
inc
adc
add
dec
daa
xchg
jge
lea
sbb
std
imul
sub
sbb
dec
out
inc
sub
js
sbb
nop
sub
jl
dec
fdivr
jg
sub
dec
cmp
sub
jo
adc
xor
shrl
mov
leave
or
xor
pop
aad
cmp
enter
lret
nop
dec
cld
pop
cmpsb
sbb
enter
imul
cld
mov
and
aas
mov
sub
leave
fcmovnbe
xchg
ret
cmp
add
xor
fsts
fimull
mov
icebp
mov
mov
fadd
add
add
push
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
dec
fbstp
stos
jnp
adc
adc
sub
xor
out
sbb
mov
pop
rorb
jmp
mov
push
mov
clc
xchg
pop
call
sub
mov
into
mov
mov
aad
dec
lcall
and
aam
push
jns
push
and
mov
inc
push
aam
repnz
mov
xchg
cmp
inc
sbb
mov
ficompl
dec
in
xchg
cs
call
loop
xor
cwtl
or
mov
pop
test
inc
jbe
or
fcomps
push
mov
sub
inc
push
push
int
jmp
sbb
mov
mov
notb
cmp
xchg
sti
jmp
lods
bound
repnz
push
aas
imul
push
pop
aaa
mov
scas
cmp
loop
mov
push
push
pop
add
aad
mov
mov
fwait
jl
sbb
sub
popf
push
sti
cld
es
scas
sarb
mov
popf
enterw
scas
lods
jbe
pop
inc
std
frstor
xor
ss
mov
push
push
sbb
insb
imul
sub
orb
or
inc
adc
test
pop
cld
faddl
jl
iret
and
inc
dec
ds
mov
lcall
pop
jae
pusha
addl
mov
inc
imul
andl
shl
sbb
mov
imul
and
addr16
sahf
mov
jnp
les
add
les
aas
outsl
mov
sub
out
xchg
push
xor
aas
xor
rcl
clc
out
aas
dec
add
and
xor
xchg
jbe
aam
push
bndstx
pop
or
js
aas
and
cmc
push
adc
jo
fdivl
divl
mov
mov
jns
cld
rcll
inc
insl
inc
out
inc
es
mov
imul
push
sbb
mov
lds
push
adc
test
jl
out
daa
add
in
test
loopne
mov
and
pop
mov
mov
and
add
loopne
cwtl
sbb
sbb
flds
xor
popf
pop
test
scas
dec
out
cli
iret
push
stos
fidivrs
mov
repz
xor
pop
xchg
movsb
aam
test
push
lret
loopne
xchg
imul
arpl
loopne
mov
pop
iret
mov
inc
shll
pop
div
iret
push
iret
movsl
enter
sub
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
mov
xchg
movlps
mov
cmpsl
loopne
inc
hlt
hlt
dec
shl
and
stos
cmp
mov
dec
pop
xchg
cmc
and
movsb
hlt
ja
jnp
adc
es
jecxz
aad
inc
gs
mov
xchg
lahf
pushf
imul
and
aad
mov
inc
mov
mov
mov
jmp
addb
lea
jns
and
add
push
shrl
sbb
loope
lea
sti
fwait
and
xor
inc
adc
mov
out
and
icebp
xor
inc
ljmp
sub
cmp
sbbl
sbb
divb
or
orl
rcrb
inc
int3
ret
mov
mov
loop
push
jbe
pop
ret
xor
or
xchg
dec
mov
int
adc
subl
mov
ret
out
sbb
ss
sub
jb
mov
incl
ficoms
test
cmc
pop
sub
mov
inc
add
jp
into
xor
out
in
int3
lea
pop
out
cwtl
dec
in
dec
sti
mov
and
xchg
mov
sbb
shll
data16
ljmp
scas
xor
cs
cmp
xor
scas
sub
mov
cltd
or
inc
sti
mov
shlb
inc
insl
fsubs
pop
int
testl
pop
jne
mov
loopne
xorb
pushf
or
xor
cmp
dec
jns
jge
jae
imul
mov
pop
jecxz
mov
add
jnp
mov
adc
jb
pop
jmp
imul
pop
mov
cmp
mov
iret
sub
jecxz
jmp
inc
inc
imul
jno
sti
sbb
push
mov
mov
sarl
add
ja
aam
ja
push
sbb
mov
mov
xor
loop
addr16
add
sub
add
lcall
stc
out
push
inc
add
pop
adc
lds
in
xorb
jecxz
fwait
inc
and
aaa
push
jb
ficoml
push
inc
sub
push
clc
ret
mov
lock
adcb
adc
and
mov
add
sbb
pop
stc
aas
lret
mov
and
repnz
mov
ds
into
fistl
std
xchg
pop
dec
lea
xchg
push
xor
pop
pop
xchg
jae
icebp
rolb
mov
mov
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
xor
adc
adc
push
ljmp
sbb
mov
loop
sbbb
jb
add
test
pop
lcall
push
and
sar
pop
loope
and
popa
fadd
mov
cmp
sub
cli
lea
mov
test
pop
inc
test
add
lret
std
outsl
je
mov
lock
adc
mov
lock
push
les
xchg
jno
int3
dec
and
push
sbb
imul
ss
push
fnstenv
ds
ss
dec
add
jp
leave
xchg
dec
cmpsb
scas
sti
push
jne
aad
sbb
nop
js
sub
mov
jbe
call
pop
jle
jns
and
or
rcrb
sbb
jmp
roll
mov
repnz
adc
dec
add
outsl
sub
add
mov
ds
imul
lret
dec
jmp
push
pop
outsl
icebp
xchg
or
sbb
pop
adc
and
iret
and
ret
daa
or
xchg
jp
popf
xor
pop
jae
lods
jno
incb
js
das
push
cmp
lahf
dec
cmpsb
lods
orb
mov
add
lret
add
mov
jne
in
outsb
mov
cmp
mov
cs
inc
xor
pop
pop
xchg
adc
xor
arpl
arpl
mov
mov
stc
and
and
inc
push
sub
out
sub
out
movsl
xchg
scas
or
mov
std
cmp
pop
sahf
push
jb
xor
mov
sub
pop
or
sub
xor
movsl
cld
insb
das
pop
jne
sti
mov
dec
imul
iret
jmp
xor
push
cld
or
sub
push
icebp
aam
loop
loopne
jb
mov
jne
cld
cltd
std
add
scas
in
jecxz
shlb
popf
scas
xor
jns
mov
xlat
add
pop
popa
repz
xor
call
push
push
test
loop
fdivrs
mov
mov
dec
xchg
xchg
ds
or
xchg
sarl
cmp
cmp
adc
aad
movsl
repz
out
jle
jbe
jmp
dec
sbb
cmp
cmp
rclb
bound
jno
cld
insb
pop
adc
push
imul
jo
shrl
mov
push
in
dec
into
mov
mov
mov
fcompl
xlat
adc
push
add
xchg
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
repnz
jmp
mov
out
rorl
adc
ret
les
js
push
sub
lcall
jae
addr16
jmp
lea
mov
fcmovb
xchg
in
insl
loop
je
mov
cltd
test
cmpsb
mov
push
sub
les
sbb
xchg
std
cmp
xchg
fisubs
push
adc
push
fwait
adc
leave
push
add
pop
jne
push
or
mov
jmp
js
mov
lods
push
cmp
lahf
lods
cwtl
mov
xor
inc
push
sti
jmp
stc
fildl
jmp
rcr
sbb
insb
jmp
bswap
fbstp
xor
dec
and
push
repnz
or
xchg
xlat
jbe
movsl
lahf
xchg
cmpsl
jecxz
daa
push
fiadds
filds
push
inc
add
add
or
shll
fstpl
mov
mov
dec
sub
movsl
loope
in
jle
cltd
sbb
lret
test
sub
sarb
fwait
out
cmp
pop
jnp
gs
push
pop
dec
adc
add
sub
xchg
and
jp
cli
cmpsl
pop
cmc
nop
outsl
out
and
cmpsl
mov
xchg
dec
xchg
sub
sub
pusha
lea
jns
push
lds
jnp
aad
shr
pop
mov
jo
xchg
mov
mov
outsl
pop
int
call
dec
mov
cmpsb
cmovns
daa
push
cli
push
and
imul
adc
pop
xchg
out
test
jbe
movsl
fwait
test
mov
shll
stos
fiaddl
pop
cld
xlat
push
and
fnsave
pushf
cmpsb
cmp
loop
jo
loop
out
mov
mov
mov
inc
xorl
leave
mov
mov
aad
jmp
xor
mov
sub
adc
cmc
xchg
mov
mov
mov
dec
loopne
mov
or
fimuls
iret
pop
xchg
leave
push
fwait
jae
pop
mov
sbb
cmpsl
gs
sub
pop
movsl
sti
jne
add
mov
push
jle
lock
mov
pop
add
leave
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
test
mov
enter
nop
mov
fsubl
es
jp
jg
pop
inc
push
and
add
add
or
pop
cmp
inc
add
out
scas
adc
daa
and
testb
mov
inc
aam
gs
test
ss
in
movsl
adc
jmp
loop
cs
dec
sbb
in
mov
cmp
sbb
and
cld
mov
xor
sub
enter
jns
dec
fxch
gs
movsb
repz
pop
aaa
in
ret
ja
pop
ret
push
adc
mov
shlb
cmpsl
rclb
xchg
inc
push
pop
or
movsb
outsb
stos
scas
jbe
aam
mov
pop
test
jp
shrl
int
pusha
jmp
addr16
sti
and
in
cmp
cmp
scas
cmpsb
lods
add
add
aas
cmp
not
sbbb
sub
aaa
sahf
push
and
adc
movsl
repnz
xor
mov
add
adcl
inc
in
orl
lods
add
pop
mov
jae
js
addl
in
mov
imull
mov
jo
clc
inc
jecxz
sti
cmpsl
jecxz
xor
lock
cld
ret
xor
imul
add
shr
insb
pop
es
test
add
add
sbb
dec
fmuls
push
add
nop
in
push
push
in
movsl
popa
lods
sbb
pcmpeqw
lods
cmpsl
fildl
push
add
stos
imul
push
sub
les
xchg
mov
add
repnz
fisttpl
mov
ss
push
test
mov
push
jg
loopne
addr16
mov
stos
fbld
push
sbb
nop
xchg
xchg
mov
sbb
jnp
fidivl
jb
jle
xchg
mov
bndstx
cmpsb
leave
pusha
or
inc
dec
xchg
decl
into
outsb
xor
mov
inc
aas
mov
push
ja
and
shll
adc
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
lods
movsl
jmp
lret
enter
andb
jno
cwtl
stc
inc
cmpsl
mov
inc
cmp
jmp
enter
adcl
jbe
icebp
hlt
mov
xchg
aaa
dec
cmpsl
pop
in
fistpll
jle
mov
add
sbb
sub
dec
pop
xchg
jae
sbb
cmp
push
stos
je
add
aad
inc
adc
xlat
add
fistpll
fistpl
or
mov
shlb
xlat
push
lock
and
push
jmp
inc
je
call
sub
mov
bound
add
or
pop
sub
jge
cmpsb
pop
or
or
mov
push
pop
hlt
xlat
leave
jb
and
adc
adcb
pushf
add
xor
pop
push
sbb
jge
pop
pop
std
fs
nop
and
adc
in
out
pusha
jo
jne
popa
inc
mov
mov
xchg
lret
arpl
mov
add
push
mov
jbe
cmp
pusha
or
fcoms
clc
cltd
mov
imul
dec
jmp
and
mov
sub
test
in
dec
lret
out
jmp
sbb
es
loop
adc
mov
aam
sbb
icebp
inc
mov
mov
mov
aaa
push
add
ja
or
jmp
stc
sub
pop
xor
cmc
lock
xor
xlat
scas
jle
push
push
sub
jge
mov
fidivrl
enter
lcall
dec
or
mov
sbb
jns
jb
and
or
scas
mov
out
xor
xor
dec
clc
cmp
fistl
daa
xchg
mov
cmc
dec
dec
mov
cltd
cwtl
or
and
in
cmpsb
push
lods
mov
xor
push
jno
imul
or
dec
pop
cmp
cli
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
mov
adc
adc
rclb
cltd
dec
cmpsb
fcoms
out
xchg
inc
in
sbb
adc
xchg
pop
mov
and
int
aad
jne
or
pop
jge
and
inc
jmp
inc
mov
icebp
test
push
jno
into
iret
xlat
mov
mov
add
jno
inc
xor
shlb
clc
pop
cmc
dec
test
push
in
test
or
sbb
lds
push
test
add
mov
subb
movsb
rol
or
ret
shrb
or
enter
and
cmpsl
add
lods
push
outsl
jge
xchg
jl
push
orl
insb
or
xor
pushf
stc
xor
sub
stos
rcr
call
out
xchg
rol
adc
and
sub
aam
outsl
enter
mov
mov
sub
inc
mov
mov
out
cmp
jecxz
ds
mov
shll
mov
mov
mov
mov
std
sub
imul
xchg
stos
xor
lock
mov
jno
sub
test
xor
cld
in
dec
enter
sub
jae
sti
js
dec
push
mov
mov
xchg
mov
loope
inc
leave
mov
add
inc
or
lock
jp
loopne
xchg
fdivrs
stos
dec
mov
pusha
mov
inc
in
leave
leave
or
gs
push
repz
call
adc
dec
das
mov
mov
sarl
xchg
inc
stc
mov
add
imul
and
fcmovb
mov
imul
mov
cmpsb
dec
pavgb
incb
or
cmpsl
and
in
push
jns
or
mov
dec
inc
jo
inc
lcall
jecxz
push
sub
jb
fbstp
das
cmp
mov
mov
neg
movl
movl
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
mov
push
ret
enter
mov
cmpb
mov
push
aad
rorl
xchg
es
dec
push
and
mov
mov
dec
imul
sti
fmul
sub
jl
rcrl
jae
sarl
mov
stc
ja
or
jns
dec
mov
fnstcw
push
jp
imul
iret
clc
jp
sbb
push
dec
or
enter
daa
outsl
pop
xlat
mov
pop
push
xor
repz
xlat
cmc
fcmovu
mov
sahf
les
sbb
lret
push
adc
lcall
mov
hlt
xor
in
popa
mov
sti
mov
and
dec
sbb
dec
aam
nop
aad
and
popa
in
out
inc
jae
sub
jg
rorl
in
test
or
push
mov
sti
mov
and
pop
bound
push
add
shlb
daa
loop
pop
sbbb
jno
mov
out
in
add
xor
cmp
fstpt
je
xor
rcll
stos
addr16
sbb
ja
rcr
push
adc
dec
cmp
push
mov
arpl
data16
cltd
repz
inc
shr
stc
mov
in
push
in
cwtl
mov
pop
inc
notb
and
jle
mov
neg
or
sub
dec
jl
mov
xor
mov
es
push
adc
cwtl
push
or
add
mov
jmp
js
dec
jbe
cmovl
pushf
insb
lods
sbb
inc
cwtl
pop
and
pop
ljmp
pusha
mov
jmp
or
inc
sub
mov
out
shrl
lret
scas
loop
jns
mov
xor
push
jmp
xor
sub
outsb
mov
dec
cmpb
or
and
and
orl
fwait
inc
push
sub
and
or
adc
int
xchg
shlb
dec
dec
xchg
xchg
aam
pop
stos
push
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
mov
mov
adc
push
jp
mull
mov
insb
inc
lcall
notl
dec
or
iret
push
jbe
outsl
lods
out
or
ljmp
jbe
pop
mov
cmp
cmp
push
pop
cwtl
enter
jl
test
dec
lret
test
mov
dec
in
js
mov
pop
sbb
inc
in
push
repnz
hlt
sahf
mov
push
pop
cmp
mov
dec
aam
jle
push
jne
add
daa
sahf
mov
ljmp
loope
inc
lret
enter
std
pop
bound
push
fisubrl
popl
adc
lds
push
shll
lods
inc
cmpsl
inc
aaa
mov
xchg
sub
outsb
or
sub
mov
jnp
jg
std
jns
ret
push
jge
pop
add
pop
jno
sbb
xchg
fnsave
cmp
and
or
mov
mov
lods
out
outsb
imul
sbb
adc
das
or
and
lods
and
lret
adc
cmpsl
jmp
pop
outsl
data16
xchg
lds
mov
jg
xchg
fsubrl
mov
test
dec
adc
push
and
inc
xchg
shl
xchg
jge
adc
mov
sub
mov
das
shr
mov
pop
sbb
fiadds
push
xlat
cmp
scas
fldcw
dec
aaa
inc
lds
inc
xor
xchg
mov
jl
clc
jno
stos
adc
js
ja
stos
bound
sub
inc
clc
push
repnz
test
add
es
push
aaa
cmp
push
push
pop
fistpl
adc
push
xchg
outsl
jno
andb
lock
ret
cmp
mov
or
rclb
fmul
add
fsubrs
jae
mov
lret
mov
sub
inc
pop
xor
mov
stos
pop
adcl
or
add
std
adcb
mov
jo
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
cmc
stos
xor
adc
ja
mov
mov
stos
fildll
inc
loopne
inc
or
lcall
dec
adc
xor
cmp
rcrb
xchg
test
push
pushf
sub
sbb
jns
add
xor
sbb
xlat
sahf
frstor
cmp
test
nopl
cmp
mov
push
pop
fadd
lock
popa
cmc
add
dec
or
sub
popa
pop
inc
orb
push
add
sub
jmp
inc
aad
adc
pop
xchg
pop
or
into
std
xchg
inc
xchg
sub
jns
and
and
rolb
aaa
inc
xchg
mov
pop
test
stos
jmp
aas
cmovns
xchg
mov
push
pop
scas
xchg
push
mov
inc
aas
jno
sub
les
xor
out
and
dec
and
insb
pushf
in
stos
inc
mov
mov
or
dec
push
scas
sub
stos
mov
pop
sbb
gs
call
or
cmpsb
add
jp
inc
pop
mov
mov
test
cmp
xlat
iret
int
sub
fs
adc
dec
or
cmpsl
sub
or
hlt
push
inc
jo
repnz
lea
mov
xchg
aam
out
aas
mov
jno
mov
pop
sbb
in
or
dec
mov
sbb
inc
nop
pop
test
and
aad
lods
repz
sbb
shrl
adc
jle
xor
cmp
and
dec
jge
jl
in
or
scas
pop
int
mov
idivb
testb
testl
out
or
sarl
cmc
rclb
sahf
lds
repnz
shrl
icebp
sbb
into
jo
je
push
mov
repz
mov
or
xchg
mov
fdiv
decl
sub
cmp
pusha
pop
add
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
cli
cmp
out
adc
adc
mov
dec
dec
jne
movsb
mov
ss
cmp
cmp
jp
decb
insb
out
aaa
pop
jl
lea
lock
xorl
iret
xor
inc
daa
inc
mov
xchg
xor
jb
push
scas
inc
notl
inc
push
pop
jne
rorl
ret
stos
mov
push
js
mov
push
or
xchg
add
xchg
cmc
stc
xor
xor
je
aas
loopne
lds
out
hlt
and
aad
xchg
sarl
aas
adc
xorps
or
cli
mov
aad
aad
push
repz
inc
mov
xchg
jne
int
mov
pop
ja
push
jb
decb
push
gs
inc
aaa
add
in
sbb
xchg
pusha
jle
aas
or
dec
cwtl
push
dec
mov
inc
xchg
mov
mov
xchg
mov
int3
push
int
cmp
stc
sahf
xchg
cmpsb
sahf
sub
or
adc
pop
and
push
int3
xor
jns,pt
in
ss
pushf
push
fstpt
mov
imul
notl
lods
hlt
stos
lds
xchg
fstpt
lds
sbb
mov
aam
movsb
or
fsqrt
dec
xchg
sbb
add
mov
add
popa
loopne
je
test
xchg
mov
xor
js
and
push
inc
call
mov
mov
mov
stos
jmp
ss
jg
or
stos
xlat
js
inc
jbe
dec
arpl
leave
cmp
or
je
and
adc
fsts
cmc
mov
xchg
in
pushw
scas
pop
xchg
mov
test
in
mov
pop
dec
inc
or
xchg
adc
mov
lods
dec
xchg
mov
or
pop
jecxz
fidivrl
dec
jp
push
jo
mov
pop
jecxz
mov
idivb
mov
shll
repnz
int
outsb
mov
fwait
xchg
xchg
jge
and
decl
arpl
and
nop
imul
std
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
lret
testl
adc
movlps
stc
lret
pop
sbb
lods
pop
mov
fcompp
inc
and
xorb
mov
or
aaa
inc
stc
shlb
movsb
mov
das
mov
stos
sub
and
mov
std
test
sbb
dec
cmpsb
jno
pop
aam
jns
and
fcoml
ljmp
into
insl
push
inc
pop
sub
dec
mov
push
and
in
mov
es
ret
cmp
or
lcall
push
xor
loope
xchg
push
mov
pop
dec
adc
push
lds
jns
mov
orb
adc
out
test
push
add
mov
cmc
lods
push
ret
sbb
pop
jno
mov
push
sbb
sbb
mov
pop
dec
or
push
clc
inc
out
neg
out
lods
cmp
addb
js
repz
notb
pushf
push
mov
cmc
gs
rolb
data16
cmp
stos
xchg
cwtl
mov
xchg
jb
aad
mov
ror
icebp
sbb
jo
jle
mov
dec
and
imul
nop
orb
movsl
loopne
aas
es
arpl
xchg
lock
jmp
movsb
jg
jl
enter
pushf
mov
insl
mov
jno
mov
dec
mov
push
cmpsl
adc
test
sbb
fsubl
cmp
pop
dec
cmc
push
subl
xchg
cmp
fmul
leave
push
dec
push
paddd
in
lret
add
jne
push
adc
fwait
adc
popf
das
dec
shr
xchg
pop
and
jo
or
ret
rcll
jmp
pop
jp
ret
adc
add
jne
cli
sbb
test
sub
push
stc
ret
mov
lahf
adc
cmp
mov
push
dec
gs
cltd
stos
adc
push
bound
inc
movsb
in
aaa
or
add
movsl
jae
cmpsb
xchg
sti
ret
push
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
test
jb
dec
test
adc
movlps
mov
loopne
pop
call
mov
add
push
sub
mov
ja
in
sbb
xlat
mov
int
fcoml
das
inc
fsubl
je
push
rcrl
test
add
xlat
mul
aad
mov
sahf
test
sub
jnp
push
jp
pusha
xchg
ja
dec
rclb
xor
jo
or
das
lahf
and
rcrl
jecxz
ret
pop
pop
jl
fadds
idivl
outsb
in
das
lds
xchg
idiv
shrl
pop
stos
cld
push
inc
add
test
pop
out
xor
or
aad
neg
jne
jl
cmp
adc
loopne
jb
sbb
rolb
add
adc
xchg
scas
int
mov
adc
mov
jnp
adc
mov
sub
mov
mov
in
cmp
cmpsb
testb
push
jp
push
pop
mov
insb
lcall
mov
jge
mov
stc
add
daa
inc
into
stos
pop
lahf
push
xchg
mov
xchg
xchg
xchg
test
mov
or
inc
test
cli
rcl
fnstcw
mov
das
test
int
mov
mov
or
sbb
in
call
jmp
mov
pop
lock
out
jmp
dec
pop
sub
inc
mov
nop
mov
imul
inc
xchg
mov
push
pop
push
in
pop
shll
mov
xchg
mov
mov
mov
cltd
push
and
cmp
mov
lahf
or
psllq
push
adc
mov
pop
sbb
jmp
es
je
popf
inc
adc
mov
enter
and
test
cmp
ret
push
lds
adc
lds
andb
pushf
cmp
out
mov
mov
pushf
ficoms
call
cld
repnz
add
push
push
dec
mov
rclb
or
xchg
dec
test
and
sbb
jle
movsl
in
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
add
adc
adc
jo
push
cmpsl
pop
popa
mov
cmp
dec
jnp
xchg
hlt
lods
or
inc
pop
pop
inc
or
lahf
sbb
xor
pop
xor
fdivs
adc
push
push
leave
aaa
cmpsb
js
hlt
mov
fs
ljmp
xchg
gs
imul
mov
in
popa
dec
jb
stc
sub
xchg
mov
das
mov
lret
pop
repz
insl
into
xor
mov
popa
cmp
xor
xchg
lea
mov
mov
movb
xor
cmp
push
imulb
add
int3
mov
inc
xor
ds
jno
loope
dec
sbb
jle
dec
imul
add
mov
aas
cmp
ficompl
fsubr
mov
mov
xor
and
add
imull
xchg
pusha
lret
pusha
add
lcall
andb
mov
aad
mov
cli
pop
fcomps
mov
int
and
stc
jne
movups
ror
xchg
mov
push
dec
mov
out
pop
jg
sar
xchg
popf
cmp
cmpsb
mov
lods
in
mov
mov
dec
dec
jmp
lret
and
fisubs
mov
aad
lock
in
or
jae
sbb
adc
lds
and
mov
test
or
mov
enter
ds
sahf
lcall
cmp
cmp
jecxz
add
popf
fs
inc
dec
sub
or
jnp,pt
xor
std
lcall
ljmp
mov
and
push
sub
add
aad
aaa
insl
testb
in
scas
jne
fnstsw
cmp
jae
adc
gs
cwtl
imul
popa
push
jno
push
imul
cmpsl
jmp
mov
mov
lock
shrb
cmp
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
stos
fs
mov
adc
jns
out
sbb
ret
mov
or
ret
add
cmp
js
jbe
fisttpll
sub
dec
test
leave
push
add
mov
push
fidivs
xor
cmc
cmp
shll
adc
es
cmp
adc
push
mov
lods
sub
pop
jae
test
jg
ret
aas
push
out
pop
xor
sahf
pop
add
push
inc
into
xor
hlt
dec
lea
sbb
jo
pop
test
fmull
pop
js
loop
lret
cmp
jecxz
jecxz
add
cmp
xchg
pop
pop
and
pop
stc
jecxz
test
jbe
ja
jns
inc
jmp
sub
sbb
push
dec
test
push
insb
dec
clc
mov
jge
inc
bnd
shll
negb
xor
fs
cmpsb
test
xor
out
aam
mov
sti
inc
mov
sub
push
pop
fnstenv
incl
push
insl
hlt
iret
xor
int
jg
insl
ljmp
cmp
inc
dec
imul
push
ja
mov
xchg
repz
dec
inc
dec
push
jno
out
adc
fisubs
popa
roll
mov
sbb
pop
shl
jo
bound
sbb
jbe
incb
mov
test
imul
jmp
inc
jle
cmp
and
or
dec
mov
jl
mov
add
push
sahf
inc
iret
sbb
test
js
addr16
ret
popf
icebp
lds
stc
shll
mov
pop
adc
imul
sub
pop
mov
mov
ljmp
sahf
test
jnp
mov
or
jns
popa
icebp
lods
inc
pop
test
and
das
nop
bound
dec
arpl
add
dec
adc
jns
adc
movsl
aad
cld
xchg
call
stc
push
cli
or
int
xor
aas
dec
xchg
xchg
push
jb
and
add
sub
cli
mov
scas
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
stos
imul
sbb
dec
cwtl
cli
and
mov
movhlps
fsubl
sarb
and
lock
sbb
push
or
xchg
insb
push
pop
out
xor
dec
clc
scas
sahf
push
inc
cmc
mul
dec
cmp
lock
out
xor
mov
sub
ss
xor
mov
subl
and
mov
pusha
lret
push
call
fcmovnu
add
ljmp
sbb
and
and
xchg
push
xchg
add
sbb
popa
mov
lea
incb
push
shl
lea
rcrl
or
dec
pushf
mov
out
jecxz
xchg
fsubrs
xor
jle
in
nop
xchg
adc
loope
cmpsb
mov
scas
cmpsl
adc
jb
lret
inc
dec
xor
pusha
in
cs
inc
js
mov
int3
mov
sahf
ljmp
mov
shll
dec
or
or
fcmovnbe
js,pn
add
into
adc
pop
or
xchg
ss
cmp
mov
cltd
xchg
movsb
and
in
dec
int
add
inc
mov
les
jnp
adc
fstpl
mov
movb
and
lds
subb
rorb
imul
ror
in
dec
mov
mov
cmp
cs
push
fwait
test
pop
push
and
std
mov
fs
adc
je
mov
xchg
fisubs
cmp
adc
movsl
shlb
or
pop
popa
popf
clc
dec
rolb
jne
and
jns
ds
icebp
push
or
mov
popf
fnstcw
sbb
lock
das
add
test
push
xchg
sub
in
out
cmp
cmpsl
add
dec
repz
fcoms
loope
xor
or
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
ret
adc
cwtl
adc
adc
gs
dec
adc
xor
pop
mov
or
jno
push
push
ss
loopne
jno
addb
in
repnz
jno
dec
hlt
or
add
sbb
jne
cmp
test
sbb
aam
pop
rorl
adc
ret
xor
push
insb
cmp
or
mov
xchg
mov
xor
cmc
pushf
jb
loopne
mov
dec
lock
aad
jl
xchg
mov
nop
mov
lahf
or
jmp
xchg
mov
xor
ljmp
insb
repnz
sub
nop
pop
stc
mov
mov
inc
sub
daa
lock
xlat
jg
pop
adc
cli
test
xlat
or
mov
jno
loope
daa
sbb
imul
dec
inc
inc
dec
mov
push
mov
andb
loop
and
repz
hlt
mov
adc
pusha
and
pop
negb
jmp
jmp
sbb
aad
cmp
std
mov
push
popf
jg
shl
jecxz
jmp
ret
ja
std
fbstp
insl
dec
daa
xchg
cld
repz
ja
mov
pop
loope
and
aaa
jno
out
loop
cmp
push
fstps
or
fstpt
push
insb
add
jb
pop
aas
dec
dec
push
mov
sbb
ss
cmp
sbb
inc
mov
aas
lahf
out
and
loope
in
cmp
cmpsl
add
push
mov
in
add
daa
push
sub
sbb
stos
or
push
mov
sub
in
xchg
imul
sbb
out
mov
mov
out
pusha
pushf
add
das
cld
test
xor
lret
popf
pop
push
add
xor
mov
xchg
cmpsl
xchg
xor
push
pop
inc
or
fstl
push
in
lret
push
inc
cmp
aam
enter
lods
psubusb
int
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
dec
rep
rclb
adc
pop
ljmp
push
push
cmp
test
rcl
inc
dec
fnstcw
jae
xor
add
pop
mov
push
xor
sbb
lods
mov
push
movsl
inc
xor
jle
aas
testl
sbb
gs
sub
ljmp
pop
sahf
sbb
mov
ss
mov
loopne
pushf
mov
movsb
mov
xchg
pop
jp
mov
fs
outsl
add
fbstp
iret
mov
xlat
in
add
les
inc
cs
nop
imull
addl
rorl
xor
popf
adc
popf
jecxz
cmp
leave
push
adc
out
pop
dec
negl
mov
pop
and
add
leave
pusha
int
jmp
inc
rcrl
mov
out
xor
mulb
push
mov
or
js
xor
shll
fcmovnu
or
imul
jae
pop
repz
mov
and
inc
jb
push
pusha
adc
inc
mov
andl
sbbb
xlat
ret
push
nop
pop
fistpl
cmp
add
test
std
cmp
adc
mov
inc
lret
sub
es
movsl
cld
and
adc
xor
mov
mov
lcall
in
pop
out
lea
into
xchg
jle
mov
jmp
mov
cmp
add
inc
push
xlat
push
nop
mov
lahf
lret
aam
arpl
fdivl
mov
loope
popf
lds
mov
cmp
in
cmp
jl
sbb
imul
repnz
outsb
pop
and
popf
pop
mov
inc
jb
inc
xchg
cld
ret
sub
xor
imul
push
xor
into
or
adc
pop
lcall
aas
rorl
ret
ret
and
or
leave
sub
scas
xchg
test
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
outsl
fidivrl
enter
cmp
ljmp
loop
xlat
mov
jo
dec
cmpsb
popf
push
movsb
fimuls
dec
xchg
or
pop
fiadds
xchg
sarb
scas
sub
loope
into
cld
dec
and
dec
push
push
adc
lahf
xchg
outsl
sbb
aam
xorb
pusha
pop
push
mov
mov
inc
test
out
loopne
punpckhbw
add
adc
push
fwait
jp
sub
inc
xor
mov
cmpsb
negl
call
xor
aas
mov
adc
fidivrs
out
outsb
cmp
int3
hlt
sub
sbb
fs
mov
push
pop
or
int
popf
les
inc
adc
mov
fs
cmp
add
subl
cmp
stos
fisttpl
push
and
or
inc
cmpsb
fwait
imul
and
inc
hlt
imul
aad
scas
mov
stos
pusha
add
dec
gs
cmp
fsubrp
xor
sbb
mov
shlb
jecxz
faddl
fdivl
in
inc
and
dec
push
and
dec
mov
mov
ss
mov
add
ds
imul
icebp
push
sub
or
movsl
jle
or
iret
pusha
jns,pt
add
or
in
clc
ud1
jo
cld
aas
sub
sub
mov
inc
std
lcall
pop
mov
mov
stos
roll
pmaxsw
mov
fldz
jno
push
imul
lret
push
xor
cli
test
fbld
out
mov
std
testb
sbb
inc
mov
pop
add
cmp
arpl
fbld
mov
or
cmpsl
add
dec
xor
mov
dec
push
xchg
dec
inc
negb
or
xor
add
mov
xor
std
addr16
xchg
lods
pop
dec
cmp
lret
fldl
push
push
dec
daa
js
inc
cmp
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
pushf
or
adc
movlps
cmp
xor
jg
jne
pop
add
mov
dec
and
leave
idivb
sbbb
incb
push
inc
dec
mov
test
imul
push
mov
scas
push
cld
idivl
lret
ret
mov
xorb
jno
mov
fwait
dec
sbb
into
jb
aas
push
push
mov
ret
pop
ret
cmp
fnstenv
enter
xchg
mov
ficomps
ds
cmp
daa
mov
push
mov
les
fnsave
lock
mov
dec
pop
insb
jbe
ss
fists
mov
push
sar
add
repz
aaa
mov
pusha
out
sbb
fadds
or
sub
dec
mov
sub
mov
loop
jp
jg
pop
dec
dec
cmp
std
pop
cmpsl
fwait
push
popf
inc
pop
or
cmp
daa
dec
push
icebp
sub
int3
pop
mov
stos
nop
push
push
aaa
mov
sahf
sub
mov
xor
jg
inc
inc
imull
xor
and
pop
xchg
mov
cmc
jnp
cmc
pop
icebp
fiaddl
mov
scas
jmp
int3
iret
cld
xchg
dec
sbb
in
adc
xor
dec
clc
mov
mov
lock
dec
mov
pop
inc
negl
mov
stos
xchg
arpl
jbe
iret
scas
dec
pop
aad
cs
and
ret
aam
inc
mov
adc
test
popf
roll
aaa
push
call
inc
xchg
sbb
sbb
push
sub
and
mov
xchg
mov
ret
andb
jmp
xchg
jae
outsl
jge
jecxz
add
xor
add
fldcw
mov
push
jp
pop
pop
xchg
push
pop
aam
les
daa
push
inc
loopne
aad
arpl
imul
mov
add
or
imul
movsl
clc
push
jno
mov
jae
divb
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
mov
bnd
push
imul
mov
xchg
mov
and
jo
fisubrs
jl
ret
xchg
push
and
cmp
lock
ljmp
cli
or
inc
pushf
xor
pusha
pop
xchg
sub
jp
js
clc
negb
loope
hlt
add
mov
dec
mov
sub
xchg
mov
mov
sub
out
sbb
ret
out
jno
xor
cmpsl
and
push
cld
mov
inc
xchg
cmc
jl
jg
jmp
xchg
imul
addb
push
aas
adc
adc
out
xchg
nop
xor
enter
push
pop
cmpsl
adc
pop
cmp
mov
push
add
es
adc
lcall
gs
sub
repnz
cs
sbb
into
rcrb
mov
or
sub
mov
cs
jbe
pushf
push
inc
jp
dec
aad
test
xchg
sti
lret
xchg
fdivl
adc
out
lea
add
test
mov
and
dec
and
mov
mov
lret
dec
xor
dec
push
mov
arpl
cs
dec
in
dec
jl
ror
sbb
push
stos
lcall
fwait
pop
das
loopne
outsb
movsb
mov
mov
negl
mov
push
ss
dec
cmp
aam
lock
mov
inc
lcall
popa
push
icebp
notl
pop
push
pop
cs
adc
push
out
pop
mov
repz
repz
daa
sbb
pop
push
mov
sbb
xor
into
scas
outsl
push
leave
fs
cmp
lahf
inc
imul
cmp
cmp
sbb
stos
bound
call
pop
sarb
repz
push
xor
mov
les
sub
jne
push
sbb
out
dec
xchg
and
orps
sbb
rcr
sbb
mov
dec
xchg
push
jne
repnz
js
add
xchg
xchg
add
je
mov
add
je
imul
or
add
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
xor
mov
adc
movlps
jb
loop
and
scas
call
icebp
cmp
dec
pop
or
aas
fidivl
icebp
std
sahf
mov
sub
in
sbb
popa
sub
movsb
push
mov
xchg
jae
push
dec
adc
repz
and
pop
clc
sub
ret
fnstenv
dec
mov
es
in
subb
aas
das
sbb
adc
daa
jno
sahf
adc
inc
cmpsl
fnstcw
divl
insl
lret
mov
arpl
jae
shrb
shll
inc
ljmp
clc
add
dec
and
aam
fistps
sar
cmpsl
es
stos
insb
xchg
into
lea
cmp
cld
mov
fsts
pop
mov
and
lahf
jg
jae
lds
nop
push
inc
dec
adcb
inc
push
data16
jle
arpl
mov
push
das
call
mov
inc
icebp
test
mov
pop
or
sbb
mulb
sub
imul
shr
out
xchg
adc
bound
adc
lods
ret
cmp
jl
clc
clc
int
daa
cmp
aas
xor
loopne
aas
pop
sarl
xchg
int
imull
pop
test
in
stos
mov
cmpsb
sbb
cmp
mov
or
xchg
hlt
inc
mov
fwait
leave
mov
lahf
test
lret
adc
add
jl
icebp
iret
adc
jl
test
loopne
inc
push
mov
cmpl
jns
sbb
aad
xchg
add
aam
adc
dec
dec
and
or
jo
repnz
clc
andl
adc
add
sub
mov
fcomip
cmp
inc
subb
jbe
mov
inc
jg
dec
test
sbb
loopne
xor
ret
ret
inc
pop
testl
or
lret
xor
xor
xor
mov
add
pop
test
pop
shll
scas
sub
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
and
adc
movlps
jns
sbb
xchg
sysexit
lcall
xlat
jns
cmp
sbb
sbb
jo
pusha
push
sbb
shll
push
enter
sub
push
mov
mov
arpl
test
enter
cmp
sbb
fldt
push
aas
jge
cli
je
or
aas
dec
dec
in
shll
push
cli
icebp
mov
cmp
cmp
and
pop
inc
sbb
out
in
gs
jbe
xor
xor
mov
imul
pop
ja
push
push
cld
stos
jle
lock
lods
bound
and
sub
xor
adc
movsb
std
insl
inc
inc
bound
push
pop
adc
xor
inc
dec
arpl
hlt
lret
nop
aad
stos
and
hlt
stc
cmp
sahf
rorb
xchg
into
jo
ja
icebp
js
xor
mov
mov
push
les
lret
jmp
inc
call
ret
jnp
pop
mov
rorb
sub
mov
pop
fwait
arpl
mov
pop
mov
rcrb
in
call
add
push
pop
hlt
aas
xchg
bound
inc
fisubrs
mov
push
bound
dec
dec
popf
repz
movsb
out
into
shl
xchg
int
out
arpl
sub
sbb
cmp
jle
xchg
test
pop
cli
rcrl
push
je
jle
and
mov
movsl
and
sub
jmp
mov
push
dec
add
push
fstpl
and
jnp
push
cmpsl
dec
push
xor
xchg
mov
push
pop
js
xlat
outsb
cld
pop
arpl
mov
shlb
mov
dec
cltd
rcrl
push
mov
lea
pop
fisubl
xchg
pop
fldcw
cli
jnp
push
mov
sub
scas
mov
insl
mov
cmpsb
dec
push
add
je
int3
scas
and
jo
popa
dec
cli
dec
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
imul
or
adc
movlps
loop
cmc
pop
imul
jo
xchg
sarb
ljmp
inc
and
loopne
outsl
cs
das
dec
lsl
mov
and
mov
fldt
negb
lds
shl
add
sahf
in
test
loopne
fincstp
cltd
test
js
dec
pop
test
and
and
scas
mov
add
lret
fimuls
cwtl
cmc
lods
mov
push
cltd
test
pop
ja
mov
lock
dec
or
nop
in
fcomip
mov
add
jo
mov
les
addr16
mov
adc
mov
mov
aam
cwtl
aas
jmp
in
adc
push
jle
jmp
movsl
fucomi
mov
das
mov
pusha
push
pop
sub
aaa
xchg
cs
mov
cltd
pop
and
mov
dec
dec
sbb
xlat
movsl
xchg
lea
sub
or
movsl
aas
mov
into
scas
dec
hlt
or
in
imul
shl
js
in
xor
rclb
xchg
and
mov
cmp
and
inc
adcb
fs
pusha
notb
aad
add
movl
push
push
scas
lods
push
add
fisttpl
loope
add
cltd
adc
adc
jle
movsl
push
sub
rorb
jg
pop
sbb
jl
pop
out
aas
cwtl
dec
sbb
or
cmc
mov
fsubl
jo
test
lcall
mov
push
add
fdivrl
mov
xchg
lea
jl
mov
mov
jnp
stos
gs
fcmove
jg
xchg
sub
adc
scas
pusha
xor
gs
out
sbb
movsb
subb
es
scas
pop
mov
test
pop
mov
popa
mov
mov
mov
inc
ficomps
xor
cmp
aad
fcompl
lods
push
mov
xchg
ljmp
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
insb
sub
je
adc
movlps
pop
jns
out
addr16
or
or
repz
jb
pushf
loope
std
lcall
mov
mov
ljmp
pop
fwait
sbb
cmp
mov
mov
outsl
lock
inc
push
mov
push
inc
fidivs
daa
dec
jl
jo
jp
fldl
es
and
add
add
cltd
int3
inc
sbb
pushf
jle
xor
lcall
ss
mov
xchg
test
aas
test
jp
add
push
adc
cltd
push
incl
pop
dec
mov
pop
lea
fisttpll
shlb
std
aam
lock
and
das
ds
sub
inc
add
or
push
es
insl
cwtl
add
inc
outsl
test
repz
mov
add
lods
repz
fmuls
mov
in
scas
add
decl
and
mov
icebp
push
jge
and
roll
pop
mov
and
jge
stc
lret
jae
jp
lret
lret
loop
scas
stos
gs
or
lods
repz
ret
mov
mov
inc
mov
inc
in
pushf
pop
shlb
leave
movsb
aaa
int3
aam
cmp
sahf
in
pop
fists
es
add
sub
in
jmp
jp
scas
dec
mov
cmpl
cmp
ja
lcall
mov
add
fcmovnu
lock
xor
push
cld
sub
adc
nop
xor
dec
cmpb
int
xor
lcall
inc
xor
enter
push
movsb
adc
ret
cmpl
xor
mov
loopne
lods
sub
cmc
bound
pop
push
jno
mov
sbb
lods
jl
jl
arpl
sbb
xchg
jne
jno
push
xchg
insb
push
andl
cmp
insl
add
jb
ret
shlb
cmpsb
std
loop
jmp
pop
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
ds
jb
adc
adc
push
and
pop
mov
lcall
xchg
sbbb
insl
jp
jp
sarb
xor
sbbb
jmp
mov
inc
fnstcw
cli
mov
dec
cmpsb
mov
fisttps
in
sar
xchg
xchg
sti
dec
sub
aad
dec
jecxz
scas
ficoms
loope
sbb
inc
push
adc
pop
xchg
rorb
adc
stos
iret
jbe
sub
test
push
push
ja
loope
imul
fisubs
dec
mov
cmpl
add
dec
lret
gs
cmp
in
mov
popf
jb
xor
daa
adc
push
lods
int3
mov
pop
adc
iret
jbe
xor
push
jmp
sar
imul
sub
out
mov
test
or
adc
mov
fstpt
pop
mov
push
inc
jge
addr16
dec
clc
stc
xchg
jecxz
enter
inc
xor
decb
lret
icebp
andl
loop
cwtl
or
xchg
push
fsubl
mov
or
inc
jl
outsl
rol
fwait
dec
je
aad
js
push
shlb
pop
ret
sti
sbb
mov
inc
or
mulb
xor
loopne
push
mov
mov
imul
shlb
adc
xorb
test
popfw
pushf
adc
jo
add
mov
test
test
push
cmp
aam
pushf
subl
mov
add
xchg
mov
cltd
xchg
mov
out
xor
xchg
cmpsb
xor
sub
cmp
cli
mov
pop
dec
fldcw
pop
lea
inc
sti
xor
push
aam
fidivrs
push
aas
loope
ret
cmpsl
xor
js
mov
cwtl
push
int
inc
and
pop
or
inc
mov
xchg
leave
faddl
test
shlb
sbb
xor
xor
lcall
inc
mov
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
inc
ljmp
enter
mov
push
call
jg
xchg
shll
aam
repnz
push
and
fnsave
cmc
icebp
sub
and
pop
mov
and
fcmovbe
cmp
adc
or
push
xchg
xchg
int3
cltd
cmpsl
jbe
cmp
lret
mov
lods
rorl
sbb
mov
mov
jbe
sahf
imul
jecxz
mov
into
je
pop
jle
data16
cmc
jmp
mov
movsb
inc
aam
test
out
cmp
dec
mov
dec
cwtl
add
dec
mov
lret
dec
sub
rorl
mov
imul
dec
xchg
lods
cmpsb
in
xchg
jmp
loope
push
pop
adc
movsb
movsb
stos
imul
xorb
nop
fnstenv
or
and
setp
cmp
pop
xor
xor
inc
xlat
lock
nopl
andps
lock
push
cli
leave
xor
ret
iret
inc
int3
sbb
idivb
push
test
out
jecxz
push
inc
cmp
aam
and
and
adc
xchg
clc
mov
adc
xor
mov
push
neg
push
repnz
cmp
call
test
jns
mov
xchg
and
int3
mov
add
outsb
push
or
mov
ret
adc
mov
in
leave
cmp
bound
and
jle
mov
nop
dec
pop
dec
stos
sbb
xlat
mov
scas
js
aas
jl
rorb
je
jecxz
loop
fimull
cmpb
mov
dec
push
ja
dec
gs
es
js
loop
or
enter
sub
cld
leave
rorb
dec
arpl
inc
add
adc
das
rcll
aas
mov
aam
add
js
pop
or
jo
cltd
xchg
arpl
pop
lds
or
add
adc
add
push
test
xor
movsl
push
scas
mov
imul
adc
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
xchg
adc
js
push
adc
loope
sub
jb
xchg
shlb
shrl
insl
xchg
arpl
loope
pop
add
test
lea
sub
dec
call
fwait
jge
or
adc
cmp
mov
sub
jnp
xchg
scas
cwtl
std
mov
mov
fdivs
call
int
gs
movsb
xor
pop
rclb
lods
jno
inc
sarl
in
lds
mov
mov
mov
gs
cwtl
xor
loop
mov
cmp
movsb
jle
aas
scas
xor
mov
fistpl
pop
pop
push
aaa
ror
xor
sbb
xchg
mov
push
faddl
clc
in
mov
jle
xlat
mov
cmp
repz
testl
movsb
test
xor
xchg
xchg
enter
mov
sub
js
dec
xor
enter
int3
jle
xchg
cmp
lods
mov
cli
adc
pop
lcall
xor
add
imul
in
mov
sub
push
mov
or
push
mov
test
cmp
xchg
mov
or
ret
test
in
jbe
lods
jno
add
mov
push
or
jg
lods
mov
xor
xchg
out
xor
add
pop
jns
push
and
sarl
xchg
ret
sbbb
sbb
mov
sbb
and
in
loop
cmpsl
dec
stc
lret
iret
mov
fwait
clc
fcmove
pop
mov
ds
and
cmpsb
pushf
clc
xor
jae
aaa
pushf
push
fcompl
fistl
jecxz
jge
nop
jnp
sbb
les
cmp
lods
jb
scas
mov
mov
stos
ja
aam
in
mov
push
rclb
push
test
test
shll
cmp
and
int3
xchg
pop
adc
mov
mov
aam
insb
fsubrs
cs
xor
adc
daa
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
adc
fs
adc
dec
sub
pop
sub
push
add
push
jb
jge
xor
dec
or
je
cmp
orl
mov
cmpsb
mov
push
scas
aas
leave
clc
subl
enter
ror
jle
mov
push
mov
xor
and
stos
cmp
sub
push
movl
and
jmp
fnstenv
bound
jnp
jg
sub
dec
dec
arpl
push
pushf
mov
fnstenv
std
nop
mov
iret
fsub
mov
lds
repnz
xchg
sbb
lret
xor
or
dec
mov
and
in
or
mov
enter
lcall
push
ja
adc
xor
mov
stos
orl
outsl
iret
adc
jne
mov
jbe
loopne
leave
inc
imul
add
jo
and
xor
mov
cli
mov
and
cmp
xor
or
stos
jecxz
mov
insl
push
mov
pop
xchg
data16
std
adc
or
das
mov
shrl
dec
mov
fisubrs
ss
cmp
and
dec
push
push
fldl
ficomps
jnp
inc
and
addr16
jmp
cltd
mov
mov
inc
repnz
imul
and
mov
pop
dec
insb
adc
adc
mov
lea
xchg
fmuls
loop
addr16
sub
xchg
test
sbb
cmp
dec
jge
out
add
cmp
mov
pop
arpl
mov
aaa
fdivrs
fcomip
in
xchg
jg
addr16
or
in
mov
cmp
jl
xor
add
popa
je
in
out
add
xchg
mov
ja
xor
pop
push
das
jg
push
or
sbb
mov
loopne
cmp
add
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
popa
enter
repz
ficompl
pop
mov
lret
int
cmp
cmp
and
xchg
lahf
add
pop
or
xchg
adc
inc
sub
shll
std
jl
sbb
not
xorl
mov
ja
nop
pushf
lret
rorl
lcall
ficoml
insb
and
clc
mov
pop
pop
lret
inc
add
notl
loope
out
adc
lcall
pop
shr
push
jae
inc
push
xchg
fidivrs
cwtl
inc
aaa
es
add
ret
xor
xorl
test
xor
pop
xchg
and
scas
call
mov
push
andl
ret
stos
mov
or
xchg
jnp,pn
gs
inc
insl
mov
addr16
mov
outsb
pop
pop
mov
enter
pop
sbb
fcmovbe
cmp
inc
cmp
repnz
adc
cmp
lea
push
cwtl
mov
cmp
cmp
stos
hlt
aad
xor
xor
lahf
push
xchg
loopne
dec
adc
aas
call
pop
clc
cmpl
fistpll
jge
icebp
jae
dec
mov
dec
sbb
test
sbb
mov
jo
jne
arpl
mov
adc
cwtl
nop
sbb
call
push
in
int
pop
in
dec
cmp
adc
pop
jge
xchg
test
ds
loope
ror
or
xlat
xchg
inc
pop
rol
aaa
out
dec
popf
push
jbe
cwtl
jge
out
or
mov
jg,pt
xor
push
add
repnz
adc
sbb
je
lods
mov
jnp
sti
mov
mov
and
int
or
xchg
dec
cld
cmpsl
out
push
xor
or
mov
shlb
add
clc
push
add
inc
subl
push
adc
outsl
idivl
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
dec
icebp
mov
enter
pushl
loop
in
outsb
inc
push
daa
leave
mov
jb
jg
xor
push
cmp
or
lret
push
stos
cmp
inc
inc
xor
push
out
popa
pop
outsw
or
add
or
jmp
js
push
jecxz
cwtl
mov
jae
jmp
mov
mov
mov
sbb
add
mov
mov
imul
lods
xchg
in
das
ror
ja
xchg
mov
mov
mov
dec
nop
cltd
cs
mov
in
xor
fwait
sti
inc
xor
test
aam
jl
cmp
mov
cmp
rcr
xchg
fldl
aad
stc
andb
push
jge
mov
cmp
out
lock
pop
ds
inc
mov
xchg
jbe
pop
cwtl
mov
push
pop
pop
out
add
lock
movsb
add
sbb
xor
cltd
inc
mov
jne
popa
das
xchg
lds
or
mov
inc
hlt
xor
sub
sub
inc
xlat
dec
xchg
fcompl
fldt
push
xchg
xchg
fcom
and
xchg
pop
sub
popf
ss
inc
addl
mov
lds
scas
out
inc
inc
jle
lods
adc
out
daa
loopne
and
mov
sarl
mov
or
pop
aaa
sub
mov
push
xchg
cmpsl
cmpsl
icebp
std
add
cmp
inc
std
or
arpl
iret
inc
dec
cmp
jae
lahf
dec
fsubl
xchg
ljmp
and
and
jg
stos
mov
shlb
inc
adc
add
int
pop
lods
or
fwait
stc
or
sahf
shr
sub
dec
xor
cli
mov
call
shl
test
scas
mov
testl
jecxz
std
cmp
sti
adc
ret
jg
fstp
push
add
in
pop
mov
mov
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
arpl
adc
adc
pop
sti
xor
mov
ret
in
and
enter
add
mov
sbb
fldenv
adc
nop
mov
mov
push
jno
out
add
adc
push
cmp
das
repz
inc
adc
push
jnp
xor
sbb
jmp
andb
add
insb
stos
cli
add
xor
xorb
lret
fistps
mov
add
movq
je
incb
fistps
popa
push
and
xchg
out
mov
or
mov
or
nop
push
cli
add
pop
xor
out
and
pusha
push
or
push
sub
imul
repnz
mov
lahf
xchg
adc
test
addr16
dec
call
ss
loope
stos
adc
iret
cmp
mov
adc
push
call
xor
jae
adc
jbe
mov
mov
xor
ficoml
inc
out
pop
test
pop
pushf
leave
lcall
bound
nop
addb
jg
xor
ss
jb
xor
jbe
inc
adcb
jnp
cmpsb
jg
cmp
lret
sbb
dec
popf
shrl
mov
xchg
mov
or
mov
enter
pop
push
cmp
push
frstpm(287
jo
lock
add
mov
loop
mov
push
outsb
cmc
aad
mov
cmp
ret
adc
mov
lods
bound
nop
sub
addr16
cli
call
mov
or
nop
and
xor
or
xchg
mov
into
cmpsl
notl
shrb
push
iret
pop
iret
out
out
aaa
roll
cmpsb
ret
out
mov
dec
icebp
fucomi
sti
pop
mov
and
mov
or
sarl
xor
daa
lea
sahf
or
cmp
ja
jb
sub
mov
int
pop
movsl
mov
inc
xchg
sbb
xor
inc
daa
cmp
int
push
xchg
mov
outsb
and
xor
inc
mov
cltd
pop
cmp
push
test
pop
adcl
loop
mov
stc
add
mov
adc
cs
and
mov
lret
ret
inc
cmp
inc
xchg
ds
jg
cmp
pop
bound
and
xchg
setl
sub
xchg
push
jle
cs
and
jns
out
insl
outsl
xchg
fidivl
test
stos
repnz
jb
cmc
pop
and
ljmp
call
xor
lock
adc
mov
gs
mull
pop
test
es
push
mov
addr16
hlt
jno
js
outsl
das
scas
dec
xor
cmp
js
or
mov
insl
push
dec
movsb
jle
es
imul
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
push
push
adc
adc
test
sbb
fcomip
mov
cmp
jnp
out
adc
hlt
add
adc
xor
or
push
mov
adc
js
js
sbb
int3
data16
mov
push
sub
mov
call
cmp
test
mov
mov
mov
cmp
cmpsb
push
int3
push
mov
sub
cmpsl
lds
sbb
xor
jmp
push
jno
xchg
jp
lret
jbe
jae
lods
ss
and
inc
stos
sbb
lods
nop
shll
xchg
lret
rcll
add
in
addr16
into
lods
es
popf
dec
mov
in
and
mov
ficoml
sti
ja
std
fimuls
cmp
data16
or
das
fistpl
fs
adc
pop
ds
ds
je
cwtl
rcll
push
outsb
icebp
insb
roll
divl
aaa
daa
imul
dec
jmp
cmc
test
and
repnz
adc
cmpsb
mov
das
mov
xchg
das
lcall
lea
lahf
jp
jecxz
pop
and
push
jb
jmp
sbb
lret
loop
popf
outsb
cmp
inc
in
inc
xlat
int
add
insl
jp
filds
cld
scas
aam
mov
xchg
push
pop
iret
push
pop
pop
cmpl
jle
xchg
jbe
mov
bound
sub
pop
idivl
jne
adc
inc
rorl
and
test
sub
pop
loopne
test
jmp
inc
jl
clc
dec
push
aad
scas
lret
std
outsl
adc
adc
in
ja
jo
cmpsb
test
lret
cmp
push
pop
sbb
call
lahf
cmp
sbb
fdivrs
outsb
inc
stc
dec
js
fucomip
std
fbstp
mov
or
inc
sbb
addr16
mov
ljmp
cmpsb
pop
call
mov
mov
dec
ds
loop
into
sub
scas
inc
dec
pop
xorb
rcll
push
in
roll
pusha
dec
jle
jp
pop
in
roll
fwait
dec
bound
imul
pushf
inc
inc
jns
test
mov
lea
jnp
push
paddd
notl
hlt
mov
mov
std
mov
push
out
sub
outsl
push
insb
xor
inc
pop
test
cmp
cmp
out
mov
and
adc
sub
int
push
cltd
sub
gs
push
cmp
add
subb
jmp
jae
sub
xchg
cmpsl
xor
xor
jb
dec
mov
adc
xchg
test
jae
in
imul
add
mov
aaa
push
adc
outsl
into
xor
out
jb
pop
sbb
mov
sti
bound
or
bound
idivl
pop
test
jg
mulb
in
stc
inc
stos
xor
aad
fiadds
stos
idiv
leave
pushf
inc
sub
enter
add
pop
cmp
sbb
sbb
jg
insb
jge
dec
sbb
or
cmp
mov
inc
mov
pop
inc
mov
leave
loope
sbb
or
je
test
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
