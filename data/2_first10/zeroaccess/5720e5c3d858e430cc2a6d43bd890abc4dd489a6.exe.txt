push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
fwait
dec
mov
xchg
iret
mov
mov
jmp
xlat
sahf
mov
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
xor
pop
xlat
mov
test
sub
test
rolb
pop
cmp
xor
pop
cltd
mov
test
sti
sahf
mov
push
jne
fldt
xorl
dec
cmpsl
pop
dec
outsl
lea
pop
xor
repnz
push
add
lock
orb
inc
call
and
or
lods
add
xlat
inc
pop
push
mov
movsb
je
insb
orb
add
loop
xor
outsb
inc
add
in
pop
jne
mov
jmp
adc
aas
xchg
aaa
mov
cmp
and
sub
sub
xchg
inc
inc
out
daa
dec
push
sbb
outsb
imul
stos
shrl
jnp
mov
insb
imul
les
aas
stos
mov
jecxz
mov
aam
int3
lahf
adc
je
aad
out
push
push
xchg
ds
data16
sbb
and
mov
movsb
divb
push
cwtl
jl
sarb
insb
fmull
outsl
or
rcrl
dec
dec
push
xchg
test
divb
mov
and
aam
xor
cmp
inc
stc
in
pop
mov
stos
icebp
mov
cli
ja
shrl
scas
and
inc
pop
and
mov
mov
ror
mov
lock
icebp
add
cmp
ret
fsubl
jae
sbb
mov
inc
outsb
pop
inc
sahf
pop
adc
pop
pop
mov
rcll
negb
scas
push
lcall
inc
scas
int
repz
push
add
cmpb
dec
shll
aam
negb
es
pop
fbstp
cmc
fidivrl
xchg
mov
shll
dec
sbb
arpl
js
js
cmc
mov
lret
shlb
int
loope
arpl
push
dec
cmc
leave
adc
inc
mov
enter
xchg
mov
mov
and
repnz
push
dec
outsb
inc
mov
jp
into
loop
stc
sub
jmp
dec
movsl
in
jp
shll
cmc
lahf
adc
imul
aad
in
sub
into
popf
gs
lea
mov
xchg
mov
test
rclb
mov
test
stc
pop
push
jns
push
jo
pop
aad
jbe
test
fs
add
add
in
fcoms
int3
pop
pop
rcll
mov
sub
sbb
sub
mov
pop
pop
adc
adc
xor
aad
clc
mov
push
cmp
pop
mov
jge
mov
mov
mov
push
pop
adc
addl
xor
test
inc
pop
mov
mov
inc
add
jo
jle
xchg
inc
xchg
mov
sbb
push
notb
xchg
sbb
enter
or
orl
mul
xchg
pusha
imul
loopne
je
test
cmpsl
cmp
decb
lods
jl
sahf
repnz
mov
push
aad
push
pop
cmp
sub
jp
dec
mov
jae
aas
push
push
xchg
mov
sub
sbb
jge
mov
das
push
mov
into
into
cld
mov
pop
jge
mov
fcom
xor
sahf
sbb
ja
and
testb
xlat
xchg
in
loope
je
push
cmpsl
mov
jmp
test
sbb
fdiv
xchg
bound
dec
lods
cmp
fiadds
and
xchg
js
push
lock
decb
pop
mov
mov
mov
jp
and
enter
add
movsb
pop
loop
add
hlt
lret
std
lret
int3
enter
repnz
divb
mov
cld
dec
cmp
jp
leave
sbb
pop
in
outsl
gs
sbb
icebp
xor
lock
push
mov
sub
mov
xor
jnp
lahf
rcrb
sbb
out
ror
mov
cmpsl
xchg
mov
rorl
fidivrs
in
imul
popa
ret
sbb
sbb
arpl
xor
sbbb
mov
fistpl
or
xor
pop
jbe
out
pusha
cmpsl
pop
comiss
xchg
sbb
in
xorl
pextrw
and
scas
inc
call
sub
repnz
and
aas
sbb
outsb
jp
mov
ds
aad
cmp
mov
incl
jge
inc
jb
add
jbe
fdivrp
sahf
jns
imul
movsl
pop
cmp
bound
call
pusha
jle
xor
out
mov
pop
adc
mov
in
jl
fidivrs
lret
aad
out
enter
mov
inc
pushf
push
out
xchg
lock
stc
mov
lods
mov
lods
addr16
inc
pop
mov
cltd
adc
cmpsl
sbbl
adc
xchg
cmpb
mov
fimuls
nop
and
inc
and
push
fwait
test
out
ds
jnp
int3
xchg
or
arpl
scas
and
lret
fnstcw
arpl
mov
inc
pop
jbe
negb
in
pop
fdivl
das
xchg
iret
cmpsb
lahf
cmc
sbb
xor
add
sub
arpl
repz
or
dec
enter
cwtl
or
stos
cmovb
xor
imul
fwait
lret
dec
faddp
and
std
mov
mov
inc
xchg
pop
inc
fdivrl
dec
mov
cwtl
push
cmpsb
gs
andb
mov
es
loopne
dec
psrlq
out
lret
aam
push
enter
mov
lahf
enter
sub
lret
js
xchg
mov
gs
loop
jno
icebp
lock
mov
pusha
xchg
push
scas
std
les
xchg
pop
cmp
loope
into
push
aaa
ret
lods
jg
test
push
stos
xor
xor
je
add
xchg
fildl
icebp
dec
sub
cmp
scas
out
loop
adc
pop
lods
xchg
les
out
cltd
out
fs
xor
inc
push
sti
aas
rol
in
daa
cmp
dec
jge
stos
test
fsubrl
mov
sbb
bound
cli
sahf
cmp
movsl
adc
out
int3
cmp
push
push
sub
xor
mov
sub
pop
lret
lods
icebp
xchg
scas
je
aas
orb
enter
or
mov
mov
fisubs
push
mov
aam
cmp
clc
test
mov
das
sbbb
sub
insb
mov
add
inc
test
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
mov
movb
wrmsr
ja
mov
cwtl
pop
or
mov
push
cmp
dec
sbb
push
cmpsl
sbb
mov
popa
mov
cmpsl
dec
xchg
outsl
scas
scas
aas
lahf
adc
push
int
insb
cltd
in
push
mov
sahf
fisubrs
sub
xchg
cmp
fdivrs
add
adc
subl
int
dec
inc
sub
nop
in
jbe
xor
sub
sahf
cmc
in
repnz
hlt
aas
je
out
in
inc
xor
dec
push
xchg
xor
out
xlat
clc
lds
adc
and
outsb
xchg
arpl
imul
dec
in
xor
cmp
daa
aam
mov
and
movsb
pop
cmp
popa
jns
ljmp
shrb
pop
pop
add
sub
hlt
mov
loop
dec
cwtl
sti
icebp
out
dec
xchg
push
lret
andl
lcall
ljmp
imul
out
insb
push
xor
mov
add
addr16
loop
push
hlt
adc
out
inc
gs
push
lret
cmp
insb
push
push
stos
mov
sbbb
xchg
sub
mov
jmp
test
dec
movsl
clc
ds
les
je
sub
mov
xor
adc
into
cmp
push
dec
sbb
fwait
je
dec
mov
mov
idiv
or
je
insb
sub
mov
mov
xor
cmp
and
xor
popa
or
mov
shrb
mov
out
push
xchg
xchg
fstpt
jnp
outsb
pushf
add
push
add
repz
jmp
sub
jge
popa
les
gs
addb
mov
mov
xchg
mov
addr16
popl
xchg
sbb
inc
sti
adc
and
test
hlt
xor
adc
dec
sub
mov
mov
xor
pop
clc
mov
daa
mov
sbb
adc
popf
test
arpl
arpl
rcrl
push
xchg
fistps
je
mov
pusha
lods
xor
push
es
int3
rcrb
jle
mov
and
sbb
in
stc
inc
rcll
inc
mov
scas
in
pop
lahf
sub
cmpsl
inc
sbb
dec
lock
and
xor
add
add
movsl
in
scas
fidivrl
nop
shlb
cmp
insl
sbb
xchg
push
lret
jge
adc
imull
outsl
push
dec
insb
sahf
jbe
sbb
jnp
and
in
imulb
loopne
out
das
adc
sub
or
fucomip
cwtl
cmp
jg
xchg
shlb
gs
pop
and
dec
out
test
cmp
nop
dec
movsl
xchg
dec
dec
mov
mov
lods
add
or
adc
adc
sahf
iret
sub
addr16
or
popa
xchg
or
lds
xlat
sbb
sub
js
and
jl
ljmp
aaa
push
movsb
punpckhbw
cmp
data16
pop
inc
cmp
lds
pop
pusha
in
data16
aaa
out
cmc
arpl
xchg
mov
dec
add
les
xchg
lods
add
addr16
or
jae
and
xchg
das
lods
push
lea
insb
mov
outsb
fsts
cmp
and
sbbl
push
aaa
mov
sbb
pusha
test
push
sub
inc
sti
xchg
inc
cmpsb
movb
das
clc
push
fs
xchg
mov
ja
sub
mov
dec
dec
xlat
out
popa
mov
add
pop
mov
pop
clc
hlt
fnstsw
dec
add
cmpsb
sbb
jb
jl
push
xchg
cmp
out
gs
addb
add
insb
lock
sbb
sahf
pop
jb
xchg
lods
push
mov
es
mov
or
movb
add
xchg
ja
push
ljmp
cmc
mov
adc
jmp
cmp
out
xchg
popf
les
je
cmp
xchg
add
iret
mov
and
dec
pushl
enter
sysexit
cltd
in
sub
jns
leave
sub
xchg
mov
or
cmp
mov
aas
adc
pushf
test
movsl
xchg
xchg
stos
cmc
test
repnz
out
lcall
lods
xchg
arpl
push
cmp
loopne
fstl
inc
aad
lds
pushf
andb
jg
imull
popa
imul
rolb
adc
and
sub
ret
roll
xchg
mov
movntq
mov
jbe
or
imul
icebp
sbb
and
sbb
sub
outsl
popa
inc
xor
and
lods
movsl
mov
cli
fimull
bound
loop
cmp
sbb
mov
jnp
inc
xchg
inc
fwait
fwait
add
or
and
sbb
subb
je
fbstp
xchg
lock
ljmp
cmp
test
and
fucomp
add
sbb
out
push
mov
jae
pop
xchg
pop
jge
mov
in
and
and
mov
jp
and
iret
test
mov
out
loop
ret
aaa
loopne
ljmp
pop
fsubp
xor
jmp
int
lea
mov
repnz
mov
sub
jp
repz
mov
cltd
jle
sub
pop
fsubl
or
lea
mov
repnz
pop
dec
push
stos
add
loopne
repnz
xor
push
xlat
std
hlt
popf
dec
call
xor
data16
dec
add
dec
fwait
hlt
pushf
shll
add
test
push
fimull
stos
nop
aam
out
mov
jmp
pop
cmp
fmul
cmpsl
jne
negb
push
mov
jge
in
mov
dec
sub
mov
sbb
enter
push
cltd
jecxz
cmpsl
int3
leave
orl
fcmovbe
push
sbb
dec
daa
or
or
inc
dec
push
xor
dec
in
jmp
outsb
stos
mov
mov
pushf
outsl
sub
xchg
lock
ljmp
pop
sahf
shrl
adc
fnsave
dec
notl
xchg
push
xchg
inc
push
sub
jne
cmp
and
ljmp
movsb
mov
ret
push
popf
mov
sti
mov
push
pop
mov
ficompl
mov
popf
dec
pop
sahf
jecxz
aaa
fidivs
adc
cmp
mov
es
stos
fsubr
and
js
push
jae
mov
jp
mov
iret
mov
mov
lea
arpl
push
fwait
mov
sbb
pop
setb
decl
jl
pop
filds
mov
pop
mov
icebp
inc
movsb
adc
movsl
mov
idivl
pop
in
sbb
arpl
mov
xlat
dec
lret
lcall
scas
loope
out
cli
xor
push
xchg
cwtl
rorb
cmc
jo
push
pop
cmp
jl
add
dec
leave
mov
and
dec
sbb
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
mov
push
and
ja
andl
sub
sbb
jge
dec
or
cmp
sub
outsl
jecxz
sub
repnz
insb
out
xorb
lret
or
mov
add
xor
dec
jge
inc
jae
add
and
ficoms
hlt
cmovne
sub
push
sbb
inc
repnz
aam
clc
jnp
adc
arpl
fldl
xor
or
pusha
lahf
cmp
repnz
sub
sbb
inc
stos
pushf
lahf
adc
outsb
dec
sub
mov
scas
enter
fadd
outsl
minps
mov
push
and
sarb
pop
adc
aad
mov
push
mov
fildl
test
adc
or
sti
push
cmp
or
lret
arpl
push
loope
add
pop
mov
push
gs
or
mov
imul
mov
xchg
fwait
outsb
pop
mov
jne
daa
subb
sbb
adc
shl
aas
and
inc
dec
jbe
fnstcw
jb
push
mov
push
popa
adc
insb
inc
cltd
hlt
adc
xor
adc
insl
loopne
out
cltd
mov
in
clc
jnp
inc
push
subb
sbb
mov
push
mov
cld
addr16
scas
lods
mov
dec
xorl
loope
shll
cmc
jne
inc
fstpt
pop
push
outsb
and
mov
xorb
lea
inc
mov
jge
aas
jo
std
dec
xor
and
sbb
cmovbe
mov
adc
lahf
push
out
sti
mov
out
mov
out
add
scas
xchg
xchg
sbb
xor
into
push
lods
pop
or
loop
push
in
jo
std
sub
adc
jb
out
pop
jns
xor
fisubrl
hlt
sti
jns
dec
mov
leave
pop
jmp
add
jge
and
nop
mov
mov
stos
cmp
inc
dec
jmp
push
xchg
dec
sbb
addr16
or
add
mov
std
push
test
xor
cmp
cltd
or
xchg
mov
lret
outsb
push
lret
and
jle
cmc
sbb
mov
std
movsl
ss
mov
push
mov
lcall
mov
je
sub
add
shll
loope
xchg
pop
mov
shlb
fwait
aaa
dec
add
sti
and
mov
ljmp
push
inc
call
cmpsl
aaa
or
das
fdivl
ficoml
jp
aad
outsb
and
jmp
add
xor
dec
insb
mov
sbb
faddl
int
add
cltd
xor
mov
jge
push
dec
mov
xchg
stos
or
test
ss
or
sarb
lahf
imul
ror
pop
fstps
repnz
pushf
outsl
cmp
push
or
rcrl
inc
xchg
xchg
out
iret
mov
mov
repz
sbb
jmp
into
adc
ds
mov
ljmp
jns
cli
ret
dec
lret
divl
or
enter
adc
mov
mov
dec
es
stc
mov
loop
int
push
sub
daa
cmpsl
xchg
lods
addr16
call
jo
push
out
dec
pop
scas
je
sub
xor
iret
xchg
push
push
jns
pushf
stos
cmp
jb
push
mov
rcrb
sbb
inc
cmp
or
int
loopne
test
fnstsw
push
dec
sbb
mov
data16
in
cli
mov
inc
movsb
sub
lods
notl
dec
push
cli
dec
mov
jmp
push
push
mov
push
scas
add
stc
and
shl
push
cmp
jno
lods
cli
dec
jecxz
enter
jb
fidivl
cli
mov
lret
ja
out
fucom
lcall
outsb
jg
push
nop
out
int3
xor
fmulp
insl
pop
js
add
or
inc
dec
cltd
andb
and
xchg
mov
dec
pushf
pop
mov
push
daa
bound
or
insb
mov
ret
incl
cli
fwait
and
movsl
pop
adc
imul
or
pusha
les
rclb
test
std
ja
push
imul
popl
dec
incb
sbb
lock
xchg
sbb
sbb
mov
inc
add
mov
mov
nop
pop
loop
dec
xor
aas
test
fimuls
mov
mov
sarb
shlb
mov
cli
sub
in
test
imul
jno
push
and
jmp
lods
push
sub
mov
xchg
jecxz
jo
stos
xchg
jns
test
cmp
ja
sahf
sbbb
out
or
dec
inc
mov
push
icebp
ret
and
mov
loope
mov
arpl
movsl
mov
inc
mov
mov
xchg
inc
fcmovb
cmp
fsubr
imul
jae
push
pop
out
adc
jns
dec
sbb
loopne
and
fcoml
dec
dec
leave
lcall
sahf
mov
ret
or
dec
lahf
test
stos
xor
mov
xchg
sub
loope
xchg
push
into
rcr
xor
incl
shrb
push
cmpl
mov
sarl
pop
sbb
popf
loopne
and
stos
add
mov
fs
adc
pop
or
mov
loopne
cmp
inc
cli
cmp
mov
dec
dec
xchg
inc
sahf
outsb
xchg
in
stos
jecxz
inc
cli
outsb
pop
rcr
jbe
inc
xchg
mov
pop
cwtl
push
je
mov
mov
adc
inc
adc
or
adc
arpl
stc
jl
and
sbb
sbbl
sbb
mov
insb
arpl
add
in
je
imul
add
adc
sbb
add
popa
push
inc
cld
int3
insl
lret
lods
pop
int3
into
dec
daa
out
push
icebp
mov
fwait
int3
lds
mov
add
aas
sub
pop
je
test
pop
icebp
loop
and
test
pop
gs
xor
or
sub
aaa
or
decb
stc
aad
push
inc
lcall
vmptrst
xor
jmp
imul
out
xchg
sbb
jne
loope
movsl
push
or
dec
and
sbb
mov
out
sub
pushf
mov
fs
fstp
into
xchg
pushf
adc
icebp
xchg
jnp
push
test
mov
sub
fsts
cli
add
pop
xchg
sbb
ret
cmp
dec
dec
icebp
jae
cwtl
sub
add
xor
cmp
cmp
outsb
jnp
pop
xlat
add
stc
sbb
cmpsl
lret
fldcw
lahf
mov
mov
das
push
aam
xor
xchg
stc
ss
test
xchg
imul
and
out
lea
cmc
popf
push
mov
lods
jge
push
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
inc
dec
js
cwtl
out
ja
out
mov
or
adc
jno
sbb
mov
ror
inc
push
notb
pushf
or
and
or
movsb
or
hlt
dec
push
dec
sbb
out
jnp
enter
push
pop
pop
sbb
shrb
inc
mov
mov
pop
int
sbb
adc
cmp
and
adc
fistpl
push
inc
daa
into
jne
xchg
push
and
pop
loopne
out
push
stc
jb
fmuls
clc
and
mov
adc
and
or
jmp
faddl
ret
dec
xchg
push
les
rep
rep
fistps
prefetch
sbb
jnp
jno
push
jb
sbbb
jle
sub
imul
shl
dec
inc
xchg
aas
or
popa
adc
mov
inc
pop
in
pop
dec
fsts
or
jns
mov
lods
aaa
call
mov
inc
mov
lahf
cmpsb
cld
pop
add
xchg
std
insl
add
adc
loop
aad
add
cwtl
jecxz
xchg
andl
fcomp
xor
push
ljmp
push
push
mov
nop
xchg
nop
stos
inc
mov
mov
push
movmskps
xchg
adc
jne
std
cmp
mov
js
jecxz
mov
mov
jmp
idivb
mov
sti
mov
jl
adc
out
xor
rcrl
inc
pop
bnd
push
dec
out
stos
mov
repnz
or
notb
stc
dec
cmpsl
add
dec
push
in
mov
or
inc
arpl
fisttpl
adc
ret
test
arpl
fcomip
mov
sbb
daa
enter
js
pop
jb
dec
outsl
jae
sub
cmc
pop
sbb
mov
sbb
and
stos
loop
in
xchg
dec
pop
cmp
push
mov
popa
and
js
sub
addl
push
pop
mov
aaa
adc
cli
outsb
xor
sub
mov
jns
in
fwait
inc
imul
lea
daa
pushf
sbb
or
out
in
test
xor
popa
int
cltd
dec
movsb
mov
mov
rclb
out
rcll
in
pop
pop
dec
lcall
in
pop
dec
adc
mov
sub
hlt
push
or
ljmp
dec
imul
jo
fs
scas
pushf
cmc
lea
arpl
es
push
fwait
sub
pop
movsl
jns
push
sbb
jno
sub
or
orl
leave
addr16
in
add
int
add
je
jns
push
sub
pop
push
mov
adc
call
mov
pop
mov
push
jge
adc
aam
mov
pop
add
repz
mov
data16
jnp
and
or
lret
lods
adc
mov
call
cld
xor
ret
inc
cmpsb
jnp
fs
dec
cmp
or
aam
aas
sub
cs
out
mov
fdivrl
mov
inc
fcmovbe
or
arpl
aas
movsl
aam
ja
outsl
imul
xchg
and
sbb
xchg
xchg
pop
pop
sbb
stc
push
out
mov
stos
push
xchg
fstpt
fisttpl
push
fidivs
or
sbb
mov
mov
inc
xchg
rclb
xor
mov
mov
add
into
jns
pop
sbb
cmp
fstpl
cli
jge
add
cmp
mov
mov
dec
adcl
bsf
xor
dec
data16
and
dec
cmp
shl
mov
lods
or
ja
push
les
push
mov
icebp
pop
add
neg
fwait
testb
push
popa
or
sbbl
daa
notb
jno
adc
xor
add
out
ficoms
rcr
sbbl
push
jle
cmp
flds
enter
divb
int
dec
xchg
cmpw
sbb
fcomps
push
add
enter
out
imull
fnstenv
imull
into
int
fcmovnbe
mov
sub
adc
test
pop
aas
cmpl
les
mov
push
sbb
sti
add
enter
mov
push
inc
aad
gs
sbb
ja
stos
fadd
rol
scas
hlt
rcrl
iret
and
cmpsb
push
jo
pop
xor
or
and
bound
or
push
inc
dec
dec
into
xchg
iret
adc
dec
dec
imul
gs
add
test
ljmp
movl
mov
cmp
fidivrl
pop
aaa
loop
fdivrl
daa
cmp
add
cmp
pop
mov
jb
negb
cmc
lahf
pop
shrb
aaa
sub
xchg
mov
sbb
leave
adc
mov
adc
cmc
push
mov
lret
mov
pop
xchg
mov
sub
xlat
ds
cmp
jae
jg
jne
loopne
aaa
lret
shll
ja
in
jmp
ror
sub
mov
xor
add
ret
push
lret
insb
and
jmp
cli
adcb
dec
in
mov
jnp
pop
cmpsl
cmpsb
jp
mov
sarb
shlb
scas
or
clc
loop
dec
in
ds
ret
push
push
mov
pop
test
jns
pop
sbbb
aaa
jge
and
dec
cmp
mov
xor
push
mov
into
mov
push
scas
outsl
cli
out
jmp
push
pop
imul
subl
adc
or
mov
inc
les
es
and
ljmp
push
push
mov
aas
jmp
mov
xchg
fsubrl
adc
fistpl
jo
xchg
cmc
repnz
mov
into
mov
lods
sbb
arpl
and
mov
mov
aaa
cmp
cltd
loop
ja
pushf
std
push
test
or
dec
test
out
into
inc
xchg
idivb
and
push
sub
roll
jmp
adc
aas
scas
pop
mov
xchg
cmp
pop
push
cltd
xchg
cmp
sub
ljmp
les
ja
aam
adc
ss
xor
inc
jnp
fiadds
out
or
mov
mov
push
sbb
jge
add
xlat
fsts
xchg
push
cs
andb
cmpsl
xchg
fistpl
test
int3
jmp
nop
push
sbb
dec
and
sbb
mov
in
jns
cmp
lds
cmp
push
stos
lahf
enter
sbb
outsl
inc
sbb
push
pop
lret
push
shl
imul
lret
xchg
mul
and
sub
mov
stos
aaa
and
dec
adc
int3
mov
mov
leave
cmpb
std
pop
sarl
dec
shlb
decl
stos
cli
dec
out
xchg
fsts
call
jnp
jbe
sbb
sbb
ret
imul
push
bound
mov
inc
test
call
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
insl
xor
das
aam
ja
jns
pop
jg
xchg
inc
cmp
lea
cmp
rclb
scas
ret
mov
and
add
outsb
sbb
loopne
das
scas
cmp
add
mov
push
sahf
roll
les
out
mov
adc
pop
fbstp
rorl
jae
in
sub
mov
push
mov
jmp
in
add
or
and
jnp
pop
jg
xchg
mov
outsl
mov
mov
loope
ja
stos
inc
sub
mov
data16
es
mov
ret
ss
out
in
insl
mov
loop
sahf
lock
lock
mov
fldt
jge
xchg
inc
sub
push
push
fyl2xp1
loop
mov
push
out
and
add
repz
or
xlat
cmp
jbe
insb
or
jle
or
jle
pop
mov
push
ss
push
or
cmp
jle
sbb
enter
int3
sub
or
xor
sbb
mov
cmp
imul
jg
imulb
clc
insb
dec
lret
mov
xchg
stos
ljmp
dec
in
xor
sub
jns
fcompl
lea
mov
push
bound
call
and
mov
dec
pand
mov
pushl
sub
xchg
or
ds
dec
sub
inc
xchg
dec
pop
aam
xor
adc
sbb
js
or
xlat
inc
lcall
loopne
mov
sbb
mov
int3
in
in
lret
js
sub
iret
mov
movsb
stos
sub
ret
rcll
leave
cmpsb
test
mov
dec
cmove
mov
ret
mov
mov
and
es
adc
sbb
test
ds
adc
mov
mov
jo
cmp
ss
cli
mov
lods
addr16
outsl
mov
adc
inc
xor
pop
ss
rorb
lret
stos
push
repnz
mov
rcll
mov
popa
xor
dec
sub
fs
pop
sbb
mov
adc
je
into
imull
sub
es
daa
aaa
mov
and
and
xchg
movsl
or
aam
pop
jmp
pop
aam
bound
sbb
cltd
adc
ss
jmp
daa
push
and
std
dec
push
in
lods
sbb
add
jecxz
pop
and
xchg
imul
jl
std
xchg
test
inc
repnz
or
pop
sti
jne
push
jmp
push
mov
mov
xchg
adc
xor
and
or
push
inc
dec
test
notl
popa
dec
decb
pusha
mov
hlt
into
data16
mov
and
mov
xchg
pop
test
loopne
insl
xchg
jg
ljmp
xchg
gs
sub
adc
sub
popf
lock
xor
add
sub
inc
jmp
out
js
test
jnp
shlb
mov
pop
repz
adc
shlb
inc
jne
sarb
icebp
xor
mov
dec
stos
aad
inc
mov
or
push
imul
roll
sub
aad
inc
push
arpl
dec
jae
push
mov
add
or
clc
and
jnp
or
daa
pop
sub
sub
mov
mov
mulb
or
jo
sti
out
mov
fsubrs
out
aas
sub
push
pop
sbb
fdivl
cmpsl
sub
shrb
sub
push
repz
adc
mov
imul
imul
sub
fdivr
sbb
aaa
gs
push
je
rcrl
movsb
sub
fsubs
lods
sub
lret
add
out
mov
fnsave
cmpsl
jle
and
sub
pop
lock
lock
xchg
lods
mov
xor
jbe
cmpsb
push
or
dec
ret
das
addr16
cmpsl
cmc
shll
mov
test
div
push
ss
popa
in
cmp
in
inc
mov
xchg
jge
pushf
call
outsb
xchg
popf
cmp
mov
clc
mov
nop
sahf
jge
xor
sarl
fistpll
xchg
jge
xor
mov
add
sarl
das
mov
inc
loopne
xor
xchg
loope
je
test
inc
sbb
jae
popa
lcall
mov
shll
int
fidivrs
mov
sbb
fldcw
movsl
mov
jno
mov
dec
addl
mov
push
jmp
lock
std
in
insb
and
jp
xor
pop
sub
scas
xchg
cmp
mov
pop
jo
cmp
mov
pop
enter
pop
test
xorl
test
sub
xor
pop
pop
jnp
dec
jbe
dec
fbld
inc
leave
fadd
fistpl
mov
out
dec
out
out
push
loopne
loope
out
jle
mov
loope
mov
xchg
sti
ss
pop
inc
movq
jp
mov
add
ret
cwtl
xchg
cs
sahf
xlat
mulb
push
aam
in
popa
test
jmp
call
sbb
ja
inc
add
pop
hlt
hlt
nop
pop
sbb
test
sbb
push
pop
ret
pop
add
mov
fsubrl
xor
jg
mov
testb
pop
std
icebp
mov
sbb
cmp
push
test
cmpsb
sbb
jmp
outsl
loope
fisttpl
stos
and
jns
or
loop
push
mov
mov
jl
sbb
or
mov
rcrb
jle
and
fwait
mov
pop
jo
sub
hlt
test
movsb
pop
push
scas
test
or
int
push
into
fidivrl
xchg
inc
in
and
cltd
pop
pop
lret
aas
mov
clc
fcmovbe
int3
sub
mov
daa
out
sub
lds
insb
out
loopne
pop
dec
cmp
test
dec
adc
ja
int3
ja
xor
xlat
cltd
lods
xchg
mov
add
out
aas
vmovntdq
mov
out
jmp
jae
or
shlb
fimuls
loope
mov
inc
add
fstpt
in
jno
ja
loopne
and
adc
call
stos
ds
cmp
add
ljmp
fwait
jl
push
xor
push
xchg
pop
hlt
fisubs
outsl
js
aam
mov
test
mov
mov
stos
sbb
sbb
test
push
fcmovb
xchg
jne
sbb
dec
mov
das
or
mov
xor
es
mov
clc
testb
lods
test
lret
rcrb
sbb
sbbl
sub
imul
xchg
or
leave
or
add
lcall
jno
inc
leave
cmovno
cmc
lock
cmp
pop
cmpb
cmp
xor
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
sbb
mov
jno
test
xchg
add
jne
adc
lods
je
repz
std
mov
insl
add
xchg
jge
mov
cmp
push
test
in
clc
mov
add
pop
cmc
jmp
mov
sbb
pop
push
es
xor
test
adc
jecxz
movsb
pop
push
mov
mov
pop
addr16
dec
loopne
mov
cmc
mov
cld
scas
mov
xor
sub
insl
jb
mov
mov
daa
fidivl
dec
and
inc
dec
sub
or
push
stc
jg
jns
pop
push
enter
jne
cli
add
cmp
pop
inc
lock
mov
stos
adc
inc
scas
loop
pushw
jns
pop
dec
addl
cs
es
dec
daa
mov
xor
leave
and
es
and
lods
jbe
jb
out
add
push
loope
add
loop
cmp
push
sub
popa
in
or
sbb
jge
mov
movsb
stos
add
dec
faddl
roll
cmp
shlb
push
mov
xor
and
out
sub
into
or
mov
mov
push
popf
dec
inc
shll
aam
fs
jno
loop
cvtps2pd
mov
cmp
outsl
iret
insl
push
mov
inc
cmp
inc
sub
imul
inc
and
jb
cmp
dec
pop
push
divl
or
cwtl
dec
xor
sbbb
jb
jp
aas
popa
mov
hlt
inc
pop
fwait
xor
sub
lods
loope
xorb
in
cmp
sub
inc
add
and
inc
mov
mov
jb
mov
popa
mov
pop
sbb
call
outsb
test
je
std
sub
test
push
xchg
add
push
xchg
mov
mov
imul
std
jno
movsb
out
iret
pop
dec
fwait
lock
push
stos
pusha
loop
dec
jb
into
jnp
bound
cmp
adc
jbe
xchg
adc
fucomp
push
insb
bound
cltd
pop
mov
insl
pop
cmp
xor
ljmp
xchg
mov
push
sbb
add
pop
pop
xchg
lret
insl
mov
test
imul
xchg
mov
mov
jp
cmp
das
cli
orw
cs
jmp
icebp
aam
dec
pop
enter
daa
inc
int
add
dec
scas
and
fnstsw
mov
es
bound
mov
fchs
testl
sbb
pop
xchg
push
cmc
in
add
add
orl
jg
dec
das
add
repz
jg
mov
jle
fisubrl
leave
int
mov
mov
mov
sbb
push
orb
negb
push
dec
cmp
daa
scas
jne
cli
out
lea
adc
mov
push
loopne
loope
out
loope
imul
jae
aam
fsubrl
ljmp
cli
out
out
xchg
test
xlat
rcr
aaa
mov
mov
pop
mov
mov
in
mov
sahf
int3
jae
les
sbb
xchg
inc
outsb
pop
gs
mov
xor
fs
ret
push
dec
pushf
arpl
or
sahf
mov
in
pusha
push
adc
dec
divl
js
sub
sbb
push
push
and
lcall
data16
shrb
out
aad
mov
push
dec
jge
push
dec
jge
xlat
xlat
sub
pop
cltd
mov
lcall
adc
cmpsb
mov
mov
add
inc
or
scas
adc
lock
sub
mov
popf
adc
xchg
jne
cmp
fisttps
pop
sbb
pop
and
les
sub
cmp
repnz
and
pop
mov
movsb
cmp
cmp
lahf
xor
shlb
xchg
lea
jo
insl
cli
cld
mov
push
mov
sub
mov
sarl
xchg
fimuls
loope
in
push
add
xor
lods
fiaddl
xchg
jecxz
cld
lock
adc
jp
sbb
xchg
ret
xchg
jne
dec
mov
jmp
add
cli
hlt
movsb
or
mov
adc
sub
jae
push
rcrb
push
popf
insb
pop
packuswb
ss
mov
nop
scas
push
outsl
cmp
dec
and
outsl
test
mov
jo
adc
jb
pop
gs
xor
xchg
pop
rorb
mov
outsb
pop
dec
in
andb
sub
mov
adc
sbb
in
xchg
mov
cltd
fdivl
scas
shl
mov
adc
mov
bound
sar
negl
out
loop
pop
jp
sbb
jb
sbb
mov
stc
xchg
inc
xor
aaa
in
mov
xchg
cmp
mov
xchg
mov
ss
mov
push
aam
fbld
dec
test
inc
sbb
adc
stos
cmp
jne
mov
loop
sar
push
xor
cmc
sbb
stos
imul
popf
jl
push
mov
sti
xchg
into
push
mov
push
movsb
andb
mov
fwait
mov
int3
cli
or
sbb
aas
push
rcr
xchg
jno
jae
addl
loopne
push
jg
mov
test
sbb
ret
mov
add
dec
ficoml
outsl
jmp
push
pusha
addr16
sbbb
jbe
or
lret
cmp
in
jo
sub
mov
lret
nop
cmc
jmp
sub
xor
out
cwtl
ja
jl
std
adc
and
mov
bound
fbstp
cmp
sub
insb
ret
jmp
dec
pushf
push
rolb
ret
jp
out
add
cld
mov
xor
or
inc
mov
std
jnp
inc
lcall
aam
dec
pop
dec
add
mov
in
mov
sub
push
push
push
mov
mov
mov
sub
lret
dec
add
cmp
mov
mov
fstps
pop
je
out
loopne
outsb
push
test
mov
xor
hlt
test
test
push
cmp
lret
in
lret
dec
push
popf
repz
out
xchg
xchg
xchg
nop
push
push
cmc
in
daa
mov
aad
xor
pop
ret
repnz
cmc
cmc
bound
cltd
lret
jmp
lea
lret
movsb
xchg
ror
sahf
mov
inc
and
in
fdivrs
dec
sub
and
cmp
mov
and
test
outsl
inc
or
mov
mov
pop
mov
mov
mov
sbb
into
in
test
loop
aaa
into
inc
gs
lock
sbb
inc
cmpsl
inc
dec
mov
or
mov
xor
cwtl
rcrb
repz
scas
sub
das
shl
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
loop
push
inc
mov
ja
loopne
pop
bound
cmpb
insl
mov
repnz
pop
adcl
mov
jno
out
insl
loopne
add
pop
sub
iret
cmp
fwait
push
or
xor
in
fnstsw
xchg
and
lods
fdivp
and
insl
daa
mov
rol
dec
jne
repnz
pop
aam
push
enter
rol
jae
dec
ret
test
pushw
jecxz,pn
por
idivl
lods
or
out
hlt
jg
xchg
sub
jp
outsl
dec
mov
mov
jge
pop
xlat
pop
int3
aas
cmp
ja
or
pushf
xchg
cmovbe
push
push
xor
xchg
addr16
pop
xlat
ja
shl
loop
lret
xor
push
dec
and
push
adc
imul
cltd
or
push
xchg
leave
test
xchg
push
dec
add
fdivs
adc
dec
subb
mov
add
in
or
jnp
int3
sub
sarb
jmp
test
mov
loop
test
ficompl
sub
rorb
push
mov
ss
dec
outsb
icebp
clc
lahf
push
jl
add
push
push
push
jmp
or
sub
sub
out
js
test
cltd
in
popf
addr16
mov
test
mov
push
loope
test
ret
insb
rcl
push
punpcklwd
push
fnsave
sub
aad
insl
inc
clc
into
cmp
out
add
aad
or
and
jbe
fiadds
fists
sub
inc
xchg
sbb
mov
xor
js
sub
imul
gs
mov
xchg
push
lods
in
mov
dec
mov
cmc
fwait
adc
and
adc
xchg
les
sarl
xor
add
pop
subb
out
xor
xor
mov
jmp
je
repnz
fisttps
icebp
cmp
sub
addr16
or
and
lret
mov
insl
loopne
pushf
out
inc
and
inc
dec
xor
rcrb
leave
aad
hlt
dec
inc
cltd
call
ficomps
xchg
sbb
int
mov
mov
inc
sbb
rcl
or
push
pop
xchg
mov
hlt
stos
dec
push
loopne
cmp
jp
addl
push
mov
mov
xor
pop
lahf
fmulp
add
popa
dec
test
fdivrs
add
inc
fs
push
stc
mov
push
pop
jo
insb
push
dec
lock
rclb
mov
or
notl
mov
mov
hlt
dec
cmp
push
sub
sub
pusha
xor
xor
std
mov
pop
xchg
push
iret
or
fistl
mov
mov
and
cmp
in
jbe
xchg
mov
sarl
adc
sub
or
outsb
dec
in
cmpsb
mov
cwtl
data16
jae
loopne
fnstenv
test
leave
sbb
dec
dec
pop
shll
adc
mov
sahf
push
jmp
adc
mov
setp
lret
pop
je
les
add
xor
out
out
and
mov
faddl
push
fcomi
aad
das
in
xchg
push
xchg
cmp
je
sbb
pop
cmpsb
mov
cmp
repnz
cmp
sub
leave
hlt
add
icebp
push
fisubrs
fisttpl
or
sbb
and
mov
pop
mov
pop
repz
pop
ss
aaa
ret
pop
lods
fistpll
sub
adc
movsb
lahf
jae
and
dec
lea
mov
stos
mov
nop
and
repnz
cmpsb
shl
dec
lret
pusha
pop
or
out
push
pop
mov
xchg
push
jo
jae
jnp
dec
sbb
jno
in
inc
inc
mov
inc
test
ss
mov
dec
xlat
inc
test
outsb
fcompl
addr16
ss
js
jmp
inc
sub
xor
call
xchg
in
out
lahf
scas
add
push
bound
imul
xor
ds
icebp
mov
lea
cmpsb
sahf
push
push
jl
jle
pop
imul
jg
xor
jl
data16
push
imul
out
jge
int
jp
int3
dec
les
xchg
or
bound
xchg
push
xor
inc
pop
dec
test
pushf
push
jbe
arpl
xchg
pop
fistps
scas
mov
aam
jecxz
mov
xor
imul
repz
sbb
push
lahf
push
xchg
into
pop
and
ss
xor
or
xor
stc
xor
lock
repnz
movsb
push
fs
mov
repz
into
mov
mov
into
fidivrl
xchg
and
jnp
loope
ret
lods
outsl
ret
lret
mov
sbb
xchg
ja
add
fwait
add
in
mov
push
mov
movsb
aaa
lahf
mov
out
pop
rclb
or
in
movsb
xorb
mov
sub
std
sub
sti
pop
pusha
test
int3
popl
in
sbb
repnz
dec
sub
inc
and
out
insb
outsb
cmpl
push
mov
ss
mov
cli
jmp
mov
into
xor
lcall
mov
mov
ja
fldcw
dec
ss
shlb
mov
ficoml
stc
jmp
xchg
popl
xchg
test
xlat
mov
adcl
dec
lret
push
js
jo
es
movb
or
push
mov
pop
aad
xchg
out
xor
xchg
inc
mov
stos
mov
jle
pop
mov
aaa
dec
dec
sbb
sub
pop
lret
and
push
sbb
nop
pop
outsl
cmp
stc
in
cs
inc
dec
push
push
cmpsb
mov
mov
div
les
out
in
mov
jecxz
out
cmp
fidivs
mov
pop
add
add
das
and
icebp
mov
pop
cmpsb
aaa
mov
xchg
rcrb
push
xchg
loopne
xchg
imul
inc
sbb
inc
jge
scas
fucomip
jo
movsb
lahf
arpl
sub
gs
sahf
xlat
xchg
lods
mov
icebp
dec
cmp
js
and
lcall
popa
cmp
icebp
les
movsl
loop
xchg
xor
rcrl
adc
xor
or
push
fiadds
xor
mov
or
outsl
mov
mov
jmp
lods
nop
mov
add
xchg
icebp
ret
mov
in
insl
xor
mov
push
xchg
out
and
xlat
adc
sub
xor
cs
xchg
and
xchg
sub
into
sbb
adc
aas
jns
cmp
jg
lahf
or
adc
addr16
cmp
adc
sarb
xchg
or
adc
outsb
mov
cmp
mov
mov
xor
xchg
rorl
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
lret
push
add
mov
add
sbb
popa
dec
mov
dec
mov
push
xchg
and
xlat
stos
inc
sub
inc
mov
movl
jp
test
or
lods
mov
dec
dec
lds
cmp
push
push
test
subb
mov
adc
pop
xchg
mov
into
jl
mov
sbb
out
push
aad
adc
xchg
pop
mov
add
pop
add
cmp
jge
mov
xor
loop
mov
mov
lcall
jge
or
xchg
mov
push
inc
push
iret
sub
push
stos
mov
shrb
and
pop
mov
mov
addr16
and
cmc
stos
push
je
xor
loopne
and
popa
jae
out
pop
icebp
xor
data16
cmp
lcall
ret
repnz
fimull
shll
and
jno
int3
cltd
test
adc
push
aam
pop
mov
xlat
scas
addr16
pop
add
pusha
inc
jbe
loop
cld
js
fs
push
mov
popf
jbe
pop
push
xlat
sub
pop
rcll
adc
stos
test
movsl
std
fldl
jns
inc
pop
pop
lcall
jno
add
push
je
add
test
cs
iret
adc
shrb
in
cmp
xor
fisubl
adc
mov
aad
shrb
test
jnp
dec
xchg
push
pop
loopne
les
in
mov
sbb
xchg
inc
sbb
pop
dec
aaa
fildl
loopne
pop
xlat
pop
jbe
push
sarb
lock
clc
sbb
sbbl
and
jge
or
add
push
mov
xor
mov
cmp
leave
lret
popf
popf
js
stos
aas
jmp
mov
pop
sbb
jp
shrb
cmpb
js
ret
mov
mov
loope
sahf
sub
repz
jl
pusha
mov
xor
push
aam
mov
mov
mov
sahf
xor
cltd
dec
cmpsb
jo
sub
arpl
sub
push
xchg
in
testb
jne
xchg
sub
mov
sub
ss
iret
lahf
rcr
or
rorb
ret
pop
mov
pusha
xor
call
cli
inc
pushf
xchg
push
dec
jmp
push
loopne
daa
popf
pop
pop
leave
sbb
cmp
mov
mov
sub
jle
xor
ss
bound
es
cltd
jl
pop
push
mov
dec
pop
movsl
sub
sub
hlt
sbb
iret
out
bound
dec
push
int
xchg
cs
rol
test
loope
enter
xchg
int3
add
mov
fstl
out
dec
mov
adc
ja
inc
loope
lods
into
or
lahf
cmp
lret
jl
sbbb
xor
sub
xchg
insl
icebp
cmc
cmp
in
inc
jb
popa
cli
xor
into
push
push
ja
push
push
dec
push
negb
pop
xchg
insb
sbb
xacquire
fistps
push
int
mov
inc
xchg
inc
mov
inc
in
into
jo
mov
pop
pop
cmpsl
jmp
mov
dec
dec
pop
out
xchg
adc
movl
sbb
dec
sub
mov
andb
push
imul
xchg
jge
sub
jae
mov
xor
mov
push
mov
mov
cmpsl
push
popf
mov
fwait
hlt
hlt
je
outsb
les
je
lret
les
mov
dec
cli
lcall
dec
lock
fcoms
push
push
adc
mov
pop
add
inc
mov
cmp
stc
sub
je
nop
dec
add
leave
add
imul
bound
cmp
pop
enter
xchg
cmp
cmp
jmp
inc
add
push
fcoml
xchg
fisubl
xor
int
pop
lea
pop
inc
xchg
jl
loop
or
sti
mov
lahf
inc
xchg
and
push
sub
jbe
mov
pop
push
dec
push
xor
clc
pop
cmp
xlat
add
pop
das
inc
xor
pusha
leave
pop
lahf
ret
cmp
push
lea
cmp
mov
or
push
fs
pop
inc
mov
add
pop
jmp
add
ljmp
push
push
xor
jge
mov
jno
gs
push
pop
inc
mov
scas
out
out
popa
lods
push
push
ds
cmp
mov
pop
sbb
lods
andb
jmp
inc
xor
mov
mov
ret
inc
jbe
test
leave
je
mov
sbb
mov
dec
jo
ficompl
xchg
fstps
outsl
fisubrl
add
or
dec
inc
sub
lods
enter
scas
cmpsb
xor
jnp
out
xchg
lret
pop
mov
adc
popa
and
rcrb
ljmp
cltd
cmc
push
push
jo
popa
xchg
iret
sub
xchg
in
jp
and
pushf
cmpsb
arpl
xor
insb
aad
xor
mov
cmp
cli
jmp
aas
adc
xchg
jbe
add
pop
xor
mov
sbb
mov
push
xor
inc
jmp
jmp
loopne
sbb
xor
ret
neg
shrl
popa
cmp
pop
shr
xor
add
imul
cltd
jno
mov
loope
daa
and
icebp
jnp
into
sbb
popf
jmp
cmp
repz
fs
jmp
stc
pop
in
mov
shlb
std
dec
fnsave
dec
loop
jns
and
scas
loop
inc
cmpsb
cmc
pop
shll
xor
dec
mov
sbb
movsl
adcl
sub
xor
data16
test
pop
xchg
add
pop
sbb
repnz
xor
mov
test
add
sahf
std
data16
enter
das
jo
jecxz
and
mov
frstor
push
mov
iret
cmp
adc
andb
mov
inc
pop
stos
fistps
out
cmpsl
cld
arpl
fwait
loope
mov
jmp
sub
jmp
mov
xor
imul
setne
push
sub
sar
mov
jmp
adc
mov
addl
jmp
int
and
imul
xchg
cmp
fsubrl
jb
push
push
and
cmp
aam
movsb
jge
div
je
pop
pop
stos
adc
inc
xchg
sbb
pop
adcl
fisttpll
pop
popa
dec
negb
and
popa
sti
cs
xchg
call
stc
lods
dec
lgs
jecxz
cmp
cmc
mov
rorb
jp
xor
xor
dec
add
inc
incl
and
cs
call
cmp
pop
pop
into
jle
sub
pop
out
scas
push
cli
mov
cmp
cmp
pop
test
imul
mov
jg
dec
shl
stos
cld
push
and
pop
cmpsl
rorl
xchg
pop
mov
push
out
lret
clc
add
and
fprem1
xchg
xchg
std
fs
rorl
aaa
inc
add
add
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
sub
ja
and
pop
dec
insb
inc
pop
and
in
in
mov
pushl
push
fldenv
js
mov
aam
int3
pop
cmc
dec
subb
adc
mov
sbb
ds
cld
sbb
add
jle
inc
xchg
mov
pop
push
push
repnz
sub
add
insb
insl
std
inc
jecxz
cmpsl
pop
jmp
inc
cmp
cmpsl
adc
aaa
rclb
mov
mov
mov
xchg
xor
out
cmp
or
jne
sar
loope
or
push
repz
add
or
xor
subl
daa
rorb
jp
rorb
lock
stos
pop
out
clc
cmpl
sub
jnp
xchg
in
andb
mov
jl
mov
sbb
rcrl
pop
jnp
sarb
mov
aad
les
fwait
lret
cltd
lods
mov
int3
mov
ret
in
ret
les
movsb
shl
dec
sub
jmp
push
ret
test
and
xlat
daa
out
in
pop
mov
pushf
mov
pop
xlat
adc
inc
in
addb
xor
ljmp
jno
hlt
dec
jecxz
mov
pop
mov
ficoms
xchg
lea
outsl
lret
lret
dec
xor
push
sub
repz
mov
or
dec
adc
pop
leave
popa
out
pop
or
adc
out
jl
lret
loope
or
stos
inc
pop
stc
pop
leave
jne
outsl
push
aad
add
push
pop
into
lret
mov
dec
jle
xor
es
push
imul
sub
fists
roll
push
add
cmp
out
mov
cmc
insl
xor
test
mov
sar
das
pop
adc
int3
imul
stos
push
mov
movsl
mov
test
dec
daa
push
imul
iret
mulb
test
jns
cld
pusha
pop
inc
mov
xor
loopne
rorb
jmp
push
mov
subb
insb
xchg
jmp
je
push
jmp
out
negb
stos
adc
out
jmp
dec
stc
je
clc
mov
scas
cmpsl
cmp
pop
inc
mov
push
xlat
mov
lcall
inc
xchg
inc
test
mov
jo
lret
pop
pop
ds
cmp
dec
nop
cmpsb
inc
add
nop
les
sub
in
add
mov
xchg
test
clc
flds
int3
icebp
mov
jl
add
dec
jmp
rorb
aam
pushf
or
out
cld
push
les
stos
mov
rcrl
pusha
lahf
scas
dec
jne
jne
push
lods
cltd
pop
xchg
mov
in
in
fidivl
mov
add
jo
out
call
dec
cmpsl
xchg
sub
out
lds
scas
into
sub
jle
add
xchg
cmpsl
ds
scas
xchg
and
insb
or
dec
sub
cmp
push
xor
inc
movsb
fstpl
leave
adc
out
mov
stc
jb
push
mov
mov
icebp
mov
xor
adc
mov
jl
sbb
sbb
shlb
xor
and
pop
mov
scas
outsl
out
inc
pop
add
mov
mov
icebp
hlt
repnz
mov
sbb
xchg
fdiv
sbb
and
clc
xchg
fldenvs
adc
or
pop
aaa
adc
mov
hlt
fidivrl
dec
xchg
jnp
out
in
out
sbb
popf
fiadds
ret
out
stc
push
imul
enter
push
imul
jge
add
dec
mov
cmp
pop
fstpl
or
ja
fisubrl
sbb
fwait
xor
pop
dec
pushf
test
in
jg
push
push
push
dec
sbb
in
cmp
mov
ja
pop
or
and
fwait
sub
lock
xorps
scas
pop
shl
dec
lea
add
push
pop
inc
fcmovnbe
and
in
aas
push
popf
imul
xchg
pop
or
cmp
scas
test
mov
stc
xchg
dec
sbb
adc
dec
sub
mov
mov
xchg
gs
mov
push
sub
mov
xor
push
pop
add
mov
cmpsl
and
outsl
bnd
dec
jl
fs
jmp
or
xchg
adc
ljmp
cmp
jg
adc
sbb
jns
dec
mov
or
and
das
mov
push
jne
fstps
jnp
mov
sub
neg
ror
mov
stc
out
lods
jg
xchg
or
stc
inc
cmp
addl
arpl
call
pop
clc
test
daa
in
addl
dec
cmp
sbb
movsb
or
sbb
arpl
sub
push
loope
cmp
cli
pop
js
stos
inc
mov
aaa
in
lods
insb
ja
rol
or
pop
cli
jg
inc
pushf
push
dec
xchg
fnstsw
daa
pop
jnp
sahf
fwait
jae
mov
or
or
ljmp
movsl
ljmp
adc
or
cltd
lret
mov
shlb
xchg
loope
and
mov
pop
imul
mov
push
enter
cmp
jne
mov
push
dec
mov
or
arpl
sbb
ficoml
jmp
adc
and
ret
push
pop
sbb
btr
int3
ja
outsl
paddusw
xchg
cmp
ret
shlb
pusha
outsb
stc
adc
scas
add
sub
add
scas
rcr
or
cld
pop
xor
stos
mov
mov
push
mov
ficoml
cli
cmp
and
std
or
nop
cmp
push
jge
rorb
push
daa
shll
xor
ffree
mov
in
pop
aam
push
mov
xor
pop
jmp
test
inc
mov
or
inc
or
lahf
xor
data16
stos
aad
aaa
jmp
lods
pop
loope
inc
test
push
clc
fistps
nop
arpl
pop
sub
cli
mov
mov
scas
fisttpll
aam
cmp
dec
repz
int
into
aam
negl
rcrl
stos
je
pop
cmp
jns
scas
inc
jbe
lahf
loop
pop
enter
push
stc
lods
sbbl
sub
repnz
jns
test
push
into
adc
or
pop
xorl
jne
dec
pop
push
cwtl
dec
push
out
xor
add
jbe
dec
add
clc
js
out
scas
ret
jnp
jb
fucomp
dec
loop
or
sahf
push
or
test
mov
out
and
and
lds
fcompl
adc
and
sub
push
cld
sbb
int
push
das
setne
mov
rcll
pop
adc
xchg
movsb
mov
push
xor
inc
push
or
jle
dec
fwait
das
outsb
ret
xor
ss
xor
jnp
pusha
dec
sbb
lods
xchg
int
xor
nop
lret
out
jb
cmpsl
or
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
xlat
shll
jp
ja
testl
mov
mov
adc
push
jno
xchg
fldenv
test
test
cwtl
push
pop
sub
mov
push
push
pop
aaa
xchg
push
fildl
outsb
cmp
fiadds
pop
add
mov
and
cmpsl
jecxz
xor
sbb
insb
orb
xchg
test
mov
fldt
xchg
mov
sti
sti
mov
mov
js
int
pop
repnz
or
dec
sbb
ficompl
repz
bound
or
mov
or
lahf
push
cltd
movsb
jbe
pop
cmp
cmp
push
mov
sbb
adc
mov
clc
mov
push
sub
cmp
insb
dec
int3
out
xchg
test
mov
test
xchg
sahf
cmpsl
lret
sub
repnz
add
jae
mov
mov
das
repnz
add
xlat
sub
xchg
inc
mov
push
adc
mov
fsubl
cmp
mov
in
cmpsb
mov
jg
cmp
cli
xor
jecxz
into
dec
jmp
adc
push
dec
insl
add
jle
ret
pop
daa
scas
push
sbb
cli
enter
arpl
jo
pop
mov
pop
lcall
jge
mov
loop
lds
shlb
inc
out
lods
outsb
je
insl
sbb
fwait
imul
pop
bound
aam
dec
xchg
loope
push
pop
not
push
dec
inc
mov
jmp
jge
out
test
mov
aam
sahf
mov
loopne
in
loope
call
test
in
stos
sbb
aaa
mov
repnz
mov
lods
jbe
movsb
mov
push
mov
sbb
inc
out
cmp
cs
pop
lds
lods
dec
xor
test
aaa
test
xchg
cmp
mov
pop
push
cld
lret
pop
jle
and
std
sub
sbb
xlat
mov
xchg
loopne
pop
sarb
lret
adc
test
rcrl
scas
jae
stos
mov
and
daa
mov
clc
test
int3
cmp
cmp
cmp
in
pop
push
enter
cmp
stos
stc
and
nop
test
addr16
cmp
cli
mov
out
add
dec
push
in
jae
je
or
and
add
hlt
pop
add
push
dec
pop
rcll
mov
call
xchg
sub
in
repz
cs
fucomip
dec
outsl
mov
cmp
push
jecxz
imul
ds
cmpsl
xor
rcrl
lret
test
adc
cli
jns
or
outsl
sahf
mov
mov
adc
aad
clc
decl
leave
and
in
ficoml
std
push
or
xor
int
cmc
out
xor
rcrl
inc
jns
lret
sub
sub
add
rolb
in
mov
jns
xchg
mov
mov
and
pop
mov
mov
xchg
mov
rolb
dec
jno
xor
xchg
test
xor
bound
add
jne
push
or
xchg
pop
mov
adc
lea
in
mov
xlat
pushf
dec
aam
imul
sbb
adc
bound
imul
jp
jno
int3
jno
pushl
push
movsb
sbb
lock
lcall
mov
loopne
ja
jecxz
or
jne
bound
push
add
aam
scas
or
add
test
dec
mov
scas
pop
sbb
jmp
call
mov
mull
test
xor
cmc
int3
jbe
mov
inc
mov
nop
adc
fst
call
jno
fnstcw
stos
mul
jno
jne
out
popf
mov
jl
shrb
fdivp
jae
dec
pop
jb
sti
test
xor
bound
and
stc
cmc
mov
jmp
xchg
dec
mov
lcall
bound
dec
inc
xor
js
push
pop
psubw
pop
aas
daa
inc
xlat
arpl
push
adc
movsl
fistl
ficoml
push
or
and
sub
into
int
sub
cmpsb
aam
insl
lea
add
add
aaa
das
pop
ja
and
sbb
mov
dec
xchg
sbb
pusha
sbb
add
stos
adc
stos
and
addr16
and
jns
inc
sub
icebp
add
icebp
push
in
jns
gs
adc
inc
xor
cmp
ret
out
test
or
jle
mov
cli
stc
addb
aam
mov
or
sbb
movsb
ljmp
fisubl
test
mov
fisubrl
push
jge
js
test
mov
lret
addb
mov
lahf
and
popl
xor
sub
pop
mov
jb
inc
mov
xor
pop
insb
pop
jge
xchg
lcall
and
and
mov
mov
test
fidivl
popa
in
cmp
adc
clc
jecxz
push
pop
call
loope
and
xor
sti
int
dec
push
mov
stos
lods
popf
fbstp
dec
xchg
test
xor
std
mov
ljmp
dec
les
push
jnp
jmp
adc
dec
adc
push
iret
movsl
stos
add
stos
sti
sbb
pop
sub
lea
mov
into
push
sbb
dec
pop
test
sbb
sbb
pop
jle
sub
mov
cmpl
add
cli
rcl
gs
mov
mov
add
sbb
pushf
and
add
fsubp
cld
or
mov
cmp
aad
ss
cmp
adcl
inc
in
xchg
and
inc
addr16
push
mov
cmp
pop
mov
dec
notb
mov
aam
cmp
inc
add
push
rep
xor
pushf
cmp
dec
movsl
addr16
mov
or
stos
movsl
inc
mov
out
gs
call
sarb
jge
cmp
movsl
dec
mov
pop
inc
mov
stc
movsl
sbb
dec
cmc
mov
addr16
or
test
push
js
hlt
ljmp
xchg
pop
sahf
jmp
xlat
xchg
xchg
pop
jg
push
dec
push
xor
mov
sbbb
lea
icebp
sbb
xchg
int3
ja
sbb
adc
mov
pop
sbb
lods
mov
mov
ret
cmp
imul
cwtl
imul
in
fwait
sbb
push
inc
fdivrp
popa
sti
jae
outsb
sbb
mov
cmp
dec
jo
stos
and
sub
adc
xor
lret
mov
mov
outsb
rcrb
mov
push
inc
movsb
pop
stos
pop
cltd
int3
mov
aad
pop
xchg
das
dec
imul
and
jne
and
mov
push
sub
lea
lods
adc
sbb
xor
jg
cs
lock
mov
sub
jle
or
push
scas
enter
mov
and
jo
mov
cmp
sub
mov
clc
add
adc
adc
cmc
test
roll
add
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
ss
ja
fisttpl
cs
aaa
sub
lret
push
inc
sbb
dec
add
pop
pop
adcb
into
test
xorb
push
ljmp
out
fdivl
popa
cltd
inc
push
outsl
scas
jb
jg
jnp
out
in
and
lahf
cmp
mov
into
push
xchg
add
lods
xchg
push
enter
add
std
cmpsb
nop
dec
push
repnz
popl
nop
xchg
into
sbb
decb
sbb
mov
jo
and
imul
xor
jge
mov
xlat
push
jnp
or
in
mov
psubd
push
enter
or
imul
mov
das
xor
dec
inc
lock
hlt
stc
sbb
in
dec
leave
dec
xor
push
mov
inc
adc
xlat
aaa
icebp
int3
cli
ljmp
fmulp
dec
js
test
dec
repz
mov
and
jns
add
adc
lds
pop
les
aad
pop
rolb
xor
movsl
and
sub
movsl
xor
xor
fldenv
sbb
or
test
inc
fcmovb
mov
pop
out
mov
sub
jbe
test
cwtl
pusha
pop
push
xor
in
lcall
loope
aas
int
sahf
mov
inc
push
push
add
adc
xorl
imul
sbb
dec
xor
xchg
scas
and
sub
repz
lds
andl
dec
je
jno
adc
jl
mov
test
int3
dec
dec
adc
sbb
arpl
cmp
jg
mov
xchg
cmp
rorb
lret
rol
or
data16
fistl
frstor
mov
and
mov
lcall
inc
mov
and
or
arpl
stos
jno
ja
lret
ret
int
faddl
xchg
adc
movsb
cs
test
std
repnz
pop
or
mov
lret
jb
call
jae
jne
sbb
xchg
inc
cmp
and
pop
push
push
idivl
lret
fs
cs
arpl
xor
jbe
mov
inc
push
scas
sti
cmp
ret
mov
jmp
mov
mov
push
mov
adc
aad
dec
or
fidivrl
out
lret
xchg
add
scas
xchg
int3
pop
xor
call
test
loop,pt
sbb
imul
orb
sbb
sub
enter
rcl
mov
jle
rorl
in
sub
ret
sti
pop
enter
int
pushf
jle
setb
dec
scas
ret
cli
pop
inc
mov
aad
sbb
adc
scas
push
sub
leave
movsl
add
decb
add
add
add
lret
and
clc
imul
adc
mov
or
jbe
mov
push
jle
pop
imulb
cmp
in
mov
dec
clc
xchg
xor
insl
sti
and
dec
mov
add
jae
pop
or
stos
lcall
sbb
pushl
ret
lahf
mov
cltd
jbe
jns
xor
mov
lret
xchg
and
pop
das
dec
pusha
jne
pop
pushf
out
sahf
adc
rcrb
aam
les
outsb
outsl
adc
xor
mov
jecxz
xor
xlat
dec
xor
mov
jp
cmc
dec
xor
out
shrb
cld
std
adc
mov
xchg
jle
inc
hlt
jno
movsl
je
pop
lods
loopne
lret
mov
js
push
jmp
and
mov
das
inc
nopl
mov
movsl
iret
sub
jg
int
lock
cld
adc
jl
aaa
xor
shll
xchg
or
push
xchg
fisubrl
and
loop
repnz
pop
adc
and
stos
xchg
popf
pusha
xchg
mov
loopne
icebp
sbb
mov
and
fimuls
lods
jbe
and
adc
fs
jp
ljmp
and
iret
mov
cmp
loope
cli
mov
xchg
scas
fistps
ljmp
pop
stc
push
or
pop
jns
push
out
dec
mov
loopne
inc
mov
inc
inc
scas
iret
and
dec
jae
imul
lods
dec
dec
cmpsb
mov
imul
addr16
cs
add
sub
arpl
aaa
xor
daa
mov
jnp
xor
mov
inc
dec
rorl
out
xor
jle
xchg
and
xchg
cmp
add
and
pop
push
cmp
jnp
fsts
jo
add
aam
push
cmp
mov
xchg
jp
outsl
xchg
fmuls
shrb
pop
mov
sub
dec
sub
fnstenv
add
icebp
cmp
scas
sbb
std
push
les
pop
xchg
cli
lahf
mov
je
shrb
cli
dec
ss
lret
mov
dec
push
popa
popf
mov
loop
fistpll
lahf
mov
and
shr
dec
aad
dec
movsl
sarb
mov
xlat
cmpsl
shrl
negb
sub
sub
sbb
daa
in
push
repnz
fmul
push
decl
and
lods
and
push
xor
push
mov
pop
mov
pop
jb
pop
fidivrs
lea
shll
clc
ja
xchg
popa
stos
push
xor
fadd
cmp
mov
mov
inc
cmp
loopne
jbe
and
fwait
xchg
and
inc
mov
gs
lret
insl
mov
mov
xchg
repz
push
mov
mov
dec
xchg
lods
pop
cmp
mov
lock
dec
sub
popa
pop
leave
xchg
xchg
adc
push
rorl
jbe
pop
pop
ret
mov
inc
outsl
cld
push
xchg
jle
mov
and
pop
jno
je
pop
xchg
js
nop
nop
das
loopne
and
call
or
lods
loope
xchg
push
fstps
rcl
sbb
lods
push
lret
push
repnz
je
push
pop
add
mov
aam
mov
fmull
outsl
fs
ret
push
rclb
repz
or
and
cmp
or
fs
mov
rcrl
add
leave
jp
mov
xor
pushf
mov
sub
adc
ljmp
lret
aam
jne
pop
fistpl
fisubrl
insb
sahf
sti
mov
xor
push
xor
je
and
mov
xchg
stos
inc
stos
std
je
inc
or
sarb
add
test
push
sbb
ret
dec
inc
jb
mov
pop
loopne
pop
imull
mov
popa
imul
or
mov
nop
test
xchg
cmc
xlat
push
lods
xchg
fidivs
pusha
adc
sar
pop
cwtl
jb
fwait
icebp
cli
enter
pop
lock
dec
ret
movsl
sbb
repnz
sbb
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
xor
mov
les
jl
cmp
mov
cmp
into
pop
pop
rol
push
cld
iret
or
adc
lock
test
inc
sbb
cmp
ret
js
cmp
adc
repz
in
jbe
mov
fbstp
int3
mov
outsb
mov
inc
cmp
push
clc
mov
loopne
mov
hlt
push
sbb
fwait
dec
mov
xor
lock
cmpsb
xchg
push
sti
sbb
insl
inc
add
lock
ds
add
inc
imul
add
mov
jecxz
int
jnp
sbbb
mov
les
add
daa
cwtl
adc
shll
jnp
pop
push
mov
mov
pop
inc
pop
mov
jno
pop
dec
lds
mov
inc
cmc
jne
xchg
jo
push
arpl
mov
outsb
and
fidivrl
nop
fcomps
addr16
and
inc
pop
push
mov
loopne
jge
cmp
jmp
jmp
std
xchg
mov
cli
dec
daa
js
jmp
mov
cmpsl
icebp
bound
ljmp
pop
fsubr
cli
data16
int
xor
jg
test
lea
or
push
or
add
jae
sub
inc
ret
xor
ss
vstmxcsr
mov
sti
in
inc
pop
mov
cmpsl
xor
int3
add
inc
xlat
and
inc
addr16
add
repz
stc
mov
adc
insl
and
out
sub
add
andl
pushf
addl
mov
pusha
dec
je
adc
es
xor
out
popf
jns
mov
inc
push
scas
and
cmp
movsl
in
adc
add
add
or
sahf
int3
stc
jle
repnz
in
xor
push
xchg
adcb
rcl
loope
popa
xchg
test
push
push
mov
ja
mull
push
cli
dec
in
loopne
data16
and
push
mov
mov
xchg
fldt
loop
jmp
inc
jle
jno
xor
cmpsb
test
pop
mov
rcll
jl
push
add
ljmp
cmp
cmovp
das
cmc
add
fwait
shl
js
dec
sbbl
lea
push
sbb
movsl
sub
cmp
xor
mov
mov
stos
add
loop
cmp
sub
xchg
lods
ret
cld
loope
imul
mul
or
mov
dec
pop
test
idivl
movsb
add
je
jo
jnp
aad
lock
and
and
xchg
push
outsb
jbe
pushf
imull
scas
mov
cs
aam
scas
cmp
or
mov
xchg
pop
outsl
mov
movsl
xor
into
and
mov
test
aaa
test
push
pop
and
push
in
nop
shlb
in
addr16
dec
add
jnp
pop
ds
push
loope
inc
rcll
lock
xchg
push
inc
add
adc
shl
xchg
cmp
cmp
sbb
push
mov
adc
movb
fisubrs
cmp
aaa
sub
scas
shlb
xor
jmp
shrl
test
andb
mov
push
xchg
hlt
cmp
enter
in
scas
adc
xor
or
out
pushf
xchg
xor
and
ret
xor
add
int
in
cmp
mov
lahf
pop
inc
cltd
loopne
out
scas
xor
xor
inc
mov
cmp
sti
inc
xchg
adc
sbb
lods
xor
and
sub
cmc
add
shll
sbb
outsb
sbb
xorl
lock
pop
decl
cmp
nop
mov
insl
add
push
ljmp
push
insb
ljmp
jp
leave
push
je
push
mov
ja
lret
adc
hlt
lcall
mov
test
addr16
cmp
movsb
cs
sbb
push
cwtl
movsl
je
adc
xchg
into
cmpsl
mov
mov
hlt
adc
in
mov
adc
ret
call
test
inc
xlat
push
inc
xlat
dec
sbb
pop
mov
mov
cwtl
sahf
xor
mov
cmp
and
sti
add
sbb
mov
call
andl
mov
and
inc
jb
dec
shll
bound
xlat
call
adc
arpl
mov
outsl
mov
aad
movsl
test
or
or
mov
jge
int
addr16
es
adc
roll
rcr
mov
out
xchg
xchg
mov
mov
out
addl
aad
int
push
mov
mov
insl
mov
jmp
xchg
call
jge
fsubs
push
pop
xchg
push
jno
cmp
lahf
mov
mov
and
testb
or
sahf
rcrl
adc
in
jb
imul
push
sbb
push
push
push
inc
int
jecxz
daa
mov
shl
int
std
jle
je
adc
int3
xchg
mov
test
mov
jle
fwait
int
mov
sbb
dec
in
sub
jecxz
bnd
leave
lds
aam
pop
xor
mov
cs
movsb
rcr
sbbb
ret
popf
es
jae
xor
dec
ds
dec
jp
mov
into
loop
mov
test
push
out
fists
sub
pop
jecxz
faddl
push
rcrb
daa
stc
pop
ret
mov
inc
adc
mov
mov
mov
or
mov
aad
nop
arpl
xor
adc
int
in
mov
hlt
pop
les
adcb
and
sbb
xchg
mov
imul
mov
sub
sub
dec
and
inc
mov
cmpsb
push
adc
je
jmp
daa
shr
mov
out
hlt
sub
das
imulb
das
push
lret
cmp
jge
mov
loop
je
cmp
lahf
mov
scas
nop
mov
aaa
in
xchg
cmc
imul
aad
repnz
pop
jl
and
or
push
bound
mov
adc
and
ret
fcmovb
jb
xlat
push
bound
dec
ficoms
pop
insl
outsl
mov
or
aas
inc
arpl
fnstsw
pop
add
div
xchg
mov
pop
fmull
ret
and
clc
xchg
xor
out
xor
xchg
adc
sub
mov
xor
cwtl
dec
ret
iret
xlat
out
mov
xchg
mov
lods
outsl
lahf
jns
push
call
dec
cmp
xlat
and
dec
fisttpll
mov
mov
scas
lret
int
or
add
xlat
mov
sub
imul
in
mov
nop
cli
xor
movsl
dec
in
xor
sub
in
mov
jg
out
inc
xchg
cmp
mov
mov
ficoml
rcll
mov
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
imul
outsl
dec
ja
pop
cmp
mov
push
test
dec
popa
sar
aad
loope
mov
dec
xor
cmc
aas
mov
sbb
div
add
mov
and
movsl
call
push
rcll
pop
cmp
arpl
loop
fisubrl
inc
fmul
cmpb
push
andl
pop
mov
call
push
clc
punpckhbw
js
adc
push
in
pop
into
sti
push
or
pop
sub
test
jl
add
xchg
adc
movsl
push
inc
or
jmp
hlt
cmpl
add
lds
bound
dec
mov
sub
jne
sub
sbb
lcall
test
pop
mov
adc
jae
fs
out
inc
jno
pop
mov
lcall
adc
fwait
cltd
xor
push
lahf
stc
jb
and
mov
sub
and
scas
xor
jnp
mov
inc
jnp
push
out
mov
test
loopne
push
push
aas
sahf
and
sbb
add
inc
vandps
dec
push
int3
sub
into
out
sub
jae
je
rcrl
and
inc
repz
mov
mov
int
fs
daa
shll
and
ret
outsl
pop
sar
inc
jp
xor
sub
xchg
pop
clc
add
mov
mov
push
cmpsb
or
jns
out
out
push
xchg
fistpll
pop
push
sbb
dec
or
mov
pop
sar
cwtl
pop
cmp
data16
inc
lock
outsb
addb
mov
xchg
pop
int3
or
arpl
sbb
sub
int3
lds
clc
ljmp
adc
and
xchg
shrl
jno
ja
add
inc
jns
mov
sbb
push
inc
xchg
ret
or
add
pop
adc
adc
push
mov
xor
lock
in
dec
arpl
jg
test
push
adc
mov
pop
sbb
xchg
add
and
dec
outsl
jge
movsl
xchg
push
rorl
xorb
adc
lcall
stos
push
mov
iret
mov
icebp
ss
ficomps
movsl
push
ret
ret
mov
cmpsl
rclb
cmc
push
pop
sahf
pop
push
cmpsl
out
and
imul
rcrl
sub
das
and
ss
mov
mov
into
pop
adc
ljmp
sahf
mov
mov
sub
loope
idivl
test
addl
xor
mov
repz
sbb
in
xchg
push
aaa
push
pushf
rclb
inc
rorl
add
and
pop
js
xor
pushf
and
or
dec
mov
shrb
mov
jbe
into
pusha
and
stos
or
inc
sub
loopne
push
lret
orl
stc
inc
push
fs
sbb
test
push
pop
mov
xchg
mov
xor
lret
lahf
xor
cmpsl
mov
mov
push
lods
adc
mov
iret
sahf
aam
mov
adc
sbb
subb
hlt
or
insb
push
iret
or
cmp
jle
idiv
push
or
mov
shrl
cwtl
pushf
pop
out
jbe
mov
movsb
mov
sarb
stos
xchg
inc
add
jbe
jno
loop
cmpsb
test
jmp
xor
pop
add
xor
scas
sbb
cltd
rcr
cmc
or
dec
or
mov
and
xor
or
je
push
xor
pop
mov
pusha
or
mov
mov
bound
ds
dec
mov
sbb
xchg
sti
inc
fisubrl
int
xor
jle
or
and
mov
pop
scas
mov
push
jmp
scas
and
push
sub
in
dec
pop
dec
es
pop
cmpsb
dec
push
iret
test
xchg
push
sub
and
sbb
cmp
dec
addr16
push
test
xchg
lea
insl
cmp
sbb
jle
xor
adc
aad
lcall
lret
mov
adc
std
mov
cmpsb
mov
sbb
repnz
jge
pushf
aad
push
inc
aad
je
add
int3
push
popa
repz
jo
leave
imul
lock
iret
mov
lods
cmp
xor
jae
push
ljmp
or
fnstcw
dec
mov
pop
pop
sub
inc
sahf
push
mov
popf
sbb
mov
push
in
add
sahf
in
jp
cmp
or
dec
mov
push
mov
aas
pop
cmpsb
pop
push
mov
and
iret
or
dec
ljmp
inc
ds
sbb
mov
sbb
out
in
imul
mov
dec
xor
or
fnstsw
push
xchg
arpl
loop
jle
pop
lcall
pop
in
inc
cs
in
jl
and
mov
bound
fs
lret
ljmp
jl
repz
std
and
mov
and
xrelease
push
int
aas
jge
xor
mov
sub
add
or
clc
mov
mov
dec
cmpsb
das
xchg
push
stos
test
jmp
jne
lds
add
loop
ljmp
orb
mov
out
and
jmp
out
int3
adc
outsl
mov
or
pop
outsl
cmpsb
shrl
nop
cmp
fisttpl
push
or
arpl
push
adcl
cmp
jnp
jl
imul
fidivrl
xchg
fmull
pop
cmp
inc
inc
push
lahf
dec
into
xchg
fimull
or
iret
std
iret
into
jmp
out
fldcw
outsb
test
push
cmp
cmp
loopne
ljmp
sbb
jl
push
cli
mov
cmc
mov
xor
mov
int
aas
sbb
ffreep
push
inc
jge
xchg
or
mov
repz
mov
push
jmp
cmp
and
test
clc
sub
es
sub
lock
mov
lahf
in
dec
jle
daa
das
mov
mov
loope
stos
mov
lret
and
fistl
mul
sarl
push
outsl
repnz
test
pushf
xchg
pop
and
sub
xchg
cmp
test
and
push
leave
inc
lds
add
in
sbb
ret
sub
xor
dec
push
cwtl
push
pop
dec
mov
push
dec
shlb
in
mov
lahf
faddl
add
cli
in
jp
fcomps
lret
jle
out
andb
lds
fadds
subb
mov
loopne
dec
or
xor
or
mov
gs
ljmp
outsb
iret
push
clc
pop
shr
adc
xchg
jmp
sbb
movsw
lret
sbb
dec
movsl
mov
or
sub
xchg
mov
mov
fmul
mov
adc
lods
mov
mov
xchg
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
mov
pop
xchg
call
add
aad
mov
sub
rcll
cltd
int3
jb
in
mov
not
scas
inc
rcll
push
dec
xor
cmp
sbb
imul
fwait
sbb
std
idivb
stc
out
aad
jge
loop
fmull
adc
mov
ja
dec
xor
jle
inc
aad
les
xor
pop
and
jl
out
or
jne
aaa
adc
mov
arpl
dec
lods
mov
add
xchg
mov
out
cmp
je
jnp
pop
and
lock
push
sub
loop
lret
inc
mov
or
out
cmp
stos
dec
push
cmp
adc
sbb
sahf
in
pop
xchg
es
ljmp
clc
pop
xor
mov
jbe
mov
lock
and
icebp
and
sbb
mov
ss
daa
lea
loopne
gs
jo
in
pop
mov
inc
xchg
mov
sbb
adc
push
xchg
imulb
xchg
iret
insb
je
sub
daa
adc
repnz
mov
or
or
cmc
test
xchg
int3
inc
sub
inc
mov
fimull
fcoml
aas
mov
inc
imul
push
cmp
pusha
arpl
add
aaa
leave
test
lods
popa
push
call
mov
sbb
cltd
cli
push
popa
and
push
or
push
loop
jmp
pusha
mov
mov
or
fsubp
ja
dec
pusha
and
push
out
shll
inc
jnp
cmp
mov
testb
push
hlt
in
divb
out
sbbl
dec
das
out
mov
mov
lret
add
pop
loopne
loopne
cmpsl
push
inc
and
mov
mov
cmp
sahf
dec
add
or
dec
hlt
xchg
pop
pop
in
arpl
sub
cmp
inc
js
mov
loop
dec
imul
push
clc
fnstenv
pop
adc
jle
cmp
add
add
or
jl
inc
mov
dec
pop
dec
cmp
shll
lea
lcall
dec
std
push
inc
adc
rcll
int
mov
cmp
jbe
mov
pop
dec
popa
cmp
inc
sbbb
pushf
cmp
pop
stc
cli
sub
int
mov
jl
pop
rol
jo
test
les
nop
sbb
loopne
jp
sub
inc
daa
gs
in
pusha
cwtl
push
xor
lods
and
and
sbb
shlb
clc
out
in
mov
icebp
int
push
sbb
cmc
stc
inc
pop
mov
push
fstpl
popf
inc
outsb
xor
or
xor
jp
mov
jnp
sub
inc
jno
pop
fcoml
mov
in
divb
cltd
cmc
jecxz
dec
rcrb
cmp
rcrb
fsts
mov
sbbl
mov
hlt
aam
cmpsb
movsl
add
sub
sbb
and
mov
xor
or
pusha
adc
in
test
mov
pop
das
push
dec
scas
lea
jae
decb
push
orl
jae
jl
fs
adc
hlt
and
push
or
ss
jp
xchg
sbb
js
xchg
mov
out
jge
lea
push
cmp
xchg
inc
leave
je
inc
jb
enter
fwait
mov
hlt
push
push
jp
je
xor
pop
stos
sub
jns
arpl
mov
xor
pop
daa
mov
jg
ret
jbe
orl
xchg
dec
loopne
outsb
in
and
mov
je
inc
cli
adc
or
mov
test
xchg
sbb
jb
jno
mov
jo
fs
adc
push
cmp
stos
negl
arpl
das
pop
mov
ja
mov
inc
fldt
daa
loop
push
fdivrs
neg
data16
add
sti
dec
scas
movsl
dec
iret
mov
mov
xchg
cltd
daa
dec
into
pop
lods
insl
and
and
cmp
push
pop
push
cmp
xor
push
push
notl
and
fabs
popf
rcll
repnz
lock
mov
jbe
and
jmp
pop
bound
ss
idivl
adc
jne
ss
int
inc
cld
lahf
dec
jnp
bnd
xor
aas
mov
sbb
and
xor
jbe
mov
pusha
jmp
sti
push
sub
jp
fwait
sub
inc
inc
loopne
sbbl
fsubrs
fidivl
mov
dec
mov
mov
push
insb
pop
das
jp
lahf
add
fidivrl
add
inc
push
adc
push
nop
dec
dec
pop
shl
mov
mov
imul
cs
js
addr16
icebp
outsl
push
in
push
ja
or
int
or
fadds
mov
int3
pop
insl
push
fwait
loop
adc
mov
sub
push
lods
cltd
out
subl
xchg
add
repnz
add
repnz
ret
or
cltd
lds
aad
dec
xchg
dec
popa
out
aad
jge
addr16
and
mov
imul
push
mov
lods
hlt
stc
test
push
xchg
mov
cmp
adc
dec
or
lret
sti
cli
adc
and
jne
lret
mov
xchg
xchg
xor
data16
insl
sbb
and
mov
adc
jae
movsb
adc
cs
or
nop
insb
fst
aaa
gs
inc
cmp
inc
dec
push
inc
int3
jo
out
mov
inc
test
jo
fdivrl
sarb
adc
sbb
aas
mov
xchg
sub
dec
push
je
fisttpll
imul
push
mov
jle
ret
out
jno
jg
jecxz
addl
xchg
sbb
dec
jb
sub
xor
icebp
dec
pop
xchg
ja
add
mov
int
int3
and
int
scas
mov
mov
nop
cmpsl
and
cmp
xor
into
dec
repnz
adc
scas
sub
jbe
sub
loop
pop
dec
nop
xor
notb
dec
icebp
jmp
mov
xchg
xor
dec
mov
pop
mulb
xchg
aaa
add
push
jb
mov
andb
mov
pop
mov
dec
xchg
pop
ficomps
or
fwait
or
xor
xchg
cmp
lret
dec
and
in
lret
cli
subl
ss
cld
inc
xchg
jne
ss
mov
push
dec
stos
mov
je
ffreep
rcl
dec
and
sub
es
bound
stc
imul
pop
cmp
jae
pop
mov
insb
aaa
cld
mov
and
fdivrs
dec
cmp
pop
xchg
xor
inc
loop
sbb
es
fsubs
xor
jle
stos
fsubrp
int3
lds
jmp
frstor
push
cwtl
mov
sub
clc
mov
dec
xchg
aam
sub
loopne
stos
fsubrs
inc
or
jno
dec
aam
adc
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
pop
add
subb
ja
dec
ja
iret
js
fdivrs
repnz
pop
mov
scas
xchg
mov
add
adc
adc
sbb
sbb
sbb
sbb
rol
lods
jno
sub
inc
out
sbb
std
cmp
dec
cmp
mov
mov
clc
fsub
out
shrb
test
jae
push
iret
fimuls
and
mov
call
fwait
mov
cmpsl
aam
ja
inc
push
loop
cmp
imul
clc
mov
lea
out
inc
sub
xor
lods
push
stc
xor
cmpsb
int3
ret
jecxz
mov
jecxz
dec
mov
test
scas
or
mov
jbe
jg
mov
movsb
mov
ret
das
popa
xchg
or
add
adc
dec
lock
cltd
mov
call
aam
adc
es
or
sub
inc
sbb
mov
mov
jo
and
xchg
mov
inc
loope
xchg
outsl
cmp
dec
xor
mov
jle
push
push
dec
mov
mov
decl
mov
add
add
out
subl
clc
or
mull
add
jl
mov
xchg
loop
sub
or
test
mov
and
outsl
push
fdivp
sbb
jbe
add
aaa
js
aam
mov
push
mov
lret
mov
mov
neg
jns
rcrb
mov
in
mov
push
fistpl
mov
cltd
pusha
aaa
popa
test
popa
pop
xchg
in
xor
mov
jle
mov
pop
imul
imul
leave
test
jecxz
mov
sbb
jecxz
xchg
pop
rolb
jl
ldmxcsr
pop
testb
pop
fcomi
add
dec
pusha
jge
insb
imul
mov
xor
mov
push
les
mov
dec
mov
cmp
xchg
lods
jg
sbb
inc
xchg
out
jne
faddl
and
hlt
cmpsl
fiadds
fists
ja
test
xor
imul
adc
cld
cmpsb
jecxz
lcall
or
ljmp
dec
xor
mov
lret
fmull
mov
push
cmp
sub
lock
inc
or
stc
cmp
out
fiaddl
daa
mov
push
jo
movsl
test
push
add
daa
xchg
mov
iret
mov
popa
dec
pop
repz
daa
mov
scas
mov
lods
subl
loop
mov
mov
scas
test
cmc
fisttpll
dec
xchg
mov
xor
lret
into
xor
imul
clc
sbb
fwait
inc
sbb
mov
xchg
rclb
push
xor
fsubl
stc
dec
cwtl
scas
fstpt
lods
cltd
inc
pop
mov
icebp
add
outsb
adc
add
fisubl
enter
xor
je
fwait
and
ret
pop
mov
imul
stos
jnp
or
cmp
icebp
push
pushf
mov
les
ret
out
xchg
add
clc
mov
js
ljmp
sub
mov
mov
test
jmp
jle
in
fdiv
mov
outsb
xor
in
cmp
fbstp
fcmovu
lcall
sbb
movsl
pop
je
fisttpll
cmc
xchg
sub
sub
pop
sub
loope
out
inc
and
test
clc
in
pushf
aad
jmp
sbb
int3
mov
idivb
add
lret
aaa
rep
dec
xchg
jo
stc
inc
in
xchg
add
nop
cltd
pop
insb
bound
push
stc
pop
and
dec
mov
sub
inc
sahf
out
jbe
cmp
cmp
sbb
leave
mov
mov
or
cmp
cmp
fwait
aam
jg
add
sbb
outsl
dec
fimuls
and
pop
mov
lret
aam
movsb
jg
imul
ja
stc
hlt
out
mov
pop
inc
sbb
lock
dec
xchg
dec
jnp
iret
popf
pop
inc
add
inc
ja
xor
xchg
sub
aaa
cmpb
lret
mov
adc
test
jl
pop
add
jmp
lret
dec
sti
sbb
dec
out
mov
sub
repz
enter
add
mov
mov
lds
mov
aaa
js
push
jb
sub
dec
cs
sbb
mov
shlb
cs
and
ljmp
dec
xchg
sbb
es
cmpsl
push
test
stos
or
dec
loopne
lods
push
loope
or
mov
js
cs
test
xlat
adcl
and
push
lods
push
cwtl
in
fnsave
sub
fsubr
adc
ljmp
jno
xchg
dec
mov
js
push
jne
sub
or
div
enter
shr
test
js
data16
adc
pop
push
movsb
repz
or
mov
movsl
aad
sbb
push
popf
adc
adc
leave
jl
xor
fistpll
add
mov
or
shlb
xchg
mov
iret
icebp
mov
push
cli
adc
adc
lods
mov
push
jp
cmp
sbb
mov
outsl
jmp
enter
or
xchg
inc
loope
sub
outsb
ds
jnp
and
mov
push
and
test
jae
ljmp
adc
fimull
rorb
inc
push
jp
or
loopne
add
pop
and
in
mov
adc
lds
ds
ja
inc
and
cltd
xchg
sub
jg
or
in
jge
loope
orl
sarl
shll
add
xor
lret
ljmp
inc
bt
mov
imul
mov
arpl
xlat
lods
aas
cmp
mov
or
mov
clc
pop
lcall
lods
sbb
xchg
rcrl
arpl
mov
jbe
mov
pop
jmp
mov
cmp
inc
in
pop
cmp
aad
mov
dec
pop
cmp
repnz
in
jno
imul
lods
mov
dec
adc
arpl
cld
cmc
mov
inc
jo
je
ljmp
ljmp
jnp
test
pop
pop
xor
test
cld
fistpll
sbb
adc
loopne
mov
jno
cwtl
jnp
xchg
aaa
fs
xchg
shrb
dec
add
aas
lcall
js
mov
enter
mov
mov
xchg
mov
mov
jns
jl
mov
xor
lret
cmpb
insl
testb
ss
into
rclb
pop
gs
jnp
int3
push
mov
fwait
dec
cmpsl
mov
jmp
in
out
test
dec
jl
addr16
pop
fbstp
push
decb
add
jne
xchg
fidivs
jl
push
sbb
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
cmp
sub
sbb
ja
push
cmp
cmp
jl
in
push
or
divl
mov
sub
cmp
sub
jg
adc
scas
sti
ss
addr16
inc
aam
mov
xchg
decb
lea
outsl
rolb
add
xlat
cmpsb
push
insl
test
mov
and
pop
out
out
jg
sbb
call
test
mov
out
std
push
repz
or
sti
pop
lret
mov
adc
int
xor
mov
sub
aaa
pop
xlat
out
push
sahf
jp
mov
jmp
mov
in
push
cmp
call
lret
mov
repnz
mov
and
jo
sub
pop
lds
push
add
sti
inc
fimuls
xchg
testb
outsl
pop
clc
das
aam
xchg
fs
jl
ret
pop
jg
ds
inc
xor
shrl
pop
fisubrs
cmp
fwait
aas
mov
pop
push
or
ss
fwait
jecxz
mov
scas
test
dec
stc
nop
jmp
adc
aaa
adc
arpl
sub
adc
lds
jl
popa
dec
dec
jmp
add
dec
jmp
sub
xchg
jne
pop
js
data16
lods
adc
out
or
jmp
repz
push
fs
lea
out
leave
sub
inc
ror
lock
push
insb
cmpsb
out
aad
pop
push
mov
pop
jmp
aam
test
sub
fsubl
mov
ds
stc
js
sub
adc
jb
pop
push
popa
cwtl
xchg
mov
nop
pop
jnp
and
and
xchg
dec
jecxz
pop
sub
hlt
std
add
jge
jp
dec
rcll
aas
test
and
nop
and
xchg
jno
aam
push
int
dec
cmc
push
aaa
lea
fiadds
negb
lcall
stc
or
push
ja
in
into
daa
mov
sbb
pop
or
scas
mov
mov
pop
rclb
ds
test
jae
enter
movhlps
mov
inc
jae
fldt
int3
mov
rcll
mov
imul
lods
cmp
sub
push
pop
xor
arpl
es
dec
cmp
pushf
mov
adc
cld
and
les
or
inc
pop
and
adc
or
cmp
jns
les
push
mov
out
jmp
imulb
pop
and
sti
push
aaa
mov
xor
cwtl
addb
inc
pushf
cmp
fwait
jno
push
xchg
pop
lods
mov
push
jle
pop
fsubs
loope
arpl
shl
test
sub
imul
fidivs
mov
mov
jg
mov
into
and
fucomip
into
push
dec
in
cltd
cmpsl
imul
pop
insb
add
jmp
cmp
mov
in
ljmp
out
out
push
lret
mov
push
xchg
mov
and
movsb
xchg
insb
adc
sbb
jge
rcll
push
rorl
dec
ret
cli
aad
pusha
lret
mov
inc
rcll
push
testb
mov
dec
jmp
cltd
adc
ljmp
mov
pop
fs
mov
outsb
dec
dec
adc
stos
xchg
adc
scas
mov
outsl
test
in
popf
push
bound
inc
dec
into
pop
clc
subl
lods
repnz
pop
movsl
leave
insb
xor
adc
out
mov
mov
cli
cmp
sub
mov
push
cmp
test
add
pop
jno
loope
gs
cmpsl
and
out
inc
fwait
pop
popa
movsl
mov
mov
fnsave
dec
or
push
cmp
cmp
mov
sahf
jb
or
cmp
data16
addb
sbb
adc
leave
aaa
fnstsw
sub
inc
fwait
mov
jle
sbb
jp
xchg
mov
loopne
mov
sbb
mov
push
repnz
pop
scas
les
jecxz
rclb
lods
pushf
mov
stos
xor
out
pop
sbb
sbb
mov
pop
mov
rcll
aad
push
addr16
scas
inc
and
mov
daa
mov
push
ja
das
cmpb
dec
bswap
shrb
push
scas
and
lret
xchg
jl
push
dec
cwtl
shrb
imull
xchg
lds
lock
pop
xor
idivl
add
lahf
out
xchg
sub
fstps
stc
testb
cli
stc
mov
int
dec
ret
enter
mov
inc
loopne
lock
pop
mov
subl
adc
xor
add
sbb
lea
xchg
fldenv
and
orl
xchg
inc
push
loop
nop
test
xor
in
pop
adc
sbb
ret
addb
or
mov
stos
paddsb
icebp
addr16
adc
pop
or
dec
fsubrp
mov
loop
jmp
xchg
cmp
out
popf
dec
xor
repnz
add
fiadds
mov
or
addr16
popa
mov
test
push
pop
sarb
icebp
inc
xlat
fisubrl
mov
daa
push
lods
sbb
int3
out
pop
adc
push
cmp
and
sub
cmp
add
sarb
cmp
andb
adc
mov
inc
add
je
push
adc
daa
imul
xlat
jnp
addb
push
mov
mov
mov
enter
out
repnz
pop
jns
push
in
xor
into
pop
sub
fiaddl
xchg
jecxz
negl
sbb
shlb
lret
push
jbe
pop
fnsave
stos
pushf
add
outsl
loope
movsb
cmp
dec
mov
cmp
pop
pushf
leave
je
jb
out
inc
add
out
or
bound
xor
pop
std
fs
into
stos
lret
add
lcall
cmp
mov
rolb
test
sub
lock
inc
leave
ds
inc
pop
xchg
or
std
inc
sbb
int
andnps
insl
inc
sub
ljmp
push
cmp
inc
inc
and
je
inc
pop
or
cs
mov
pop
xor
push
int
in
adc
mov
inc
xchg
xchg
and
or
adc
lods
xor
adc
push
imull
mov
loopne
jo
or
xor
jecxz
test
btc
mov
cmp
pushf
arpl
shrl
enter
push
jo
fcmovb
mov
sub
popf
sbb
pop
call
xlat
pop
imul
jne
jecxz
std
add
testl
divl
cs
sahf
push
sti
daa
sti
imul
or
dec
dec
jle
sub
movsl
adc
cmpsl
dec
mov
dec
mov
ret
cmc
es
or
jne
fdivrl
movsb
sbb
mov
and
push
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
push
push
ja
cmp
cli
mov
mov
sub
jbe
pop
repz
aam
adc
mov
cmp
out
ds
pop
ja
int
mov
adc
test
push
dec
adcl
xchg
adc
pop
adc
fildl
movsl
cmp
pop
fidivs
leave
pshufw
jle
mov
aad
dec
sahf
hlt
jl
aas
jle
push
xchg
pop
add
outsb
sbb
add
jecxz
jnp
repnz
xor
lods
jnp
sub
cli
inc
lds
push
ficomps
mov
push
out
xchg
jp
pushf
fdivrl
mov
inc
push
dec
cli
mov
repnz
hlt
sbb
cltd
push
mov
mov
pop
push
xchg
outsl
jmpw
push
lret
or
jbe
push
out
inc
mov
jo
imul
std
sbb
cwtl
rcr
mov
sahf
xor
lock
xorb
adc
jno
sahf
test
xchg
lods
mov
push
adc
inc
das
outsl
jge
pushf
xchg
sub
test
mov
inc
stc
cmp
insl
lcall
fwait
xor
ret
jno
adc
popf
enter
popa
dec
daa
add
mov
shll
add
xor
dec
cld
xchg
jl
push
add
sbb
and
popl
aas
jno
mov
movsb
fnstcw
flds
dec
and
sub
push
outsb
xor
mov
xchg
pop
xchg
shlb
or
mov
lea
mov
xor
xor
adc
fwait
add
gs
dec
dec
sti
or
dec
daa
mov
xor
jbe
leave
out
pushf
lret
xchg
mov
arpl
or
adc
sbb
pop
aaa
push
jb
jo
adc
jo
sar
mov
cmp
pop
push
test
in
xchg
jne
ja
out
or
fimull
jo
imul
stos
and
cmp
pop
or
ja
adc
inc
mov
cmp
fisttps
nop
xchg
inc
test
cmc
cli
push
mov
pop
sti
fistps
mov
jo
push
xchg
sub
mov
xchg
fwait
movsb
inc
xchg
das
inc
add
push
push
je
lea
jmp
enter
aas
pop
popf
loope
dec
sbb
mov
cmp
je
cs
or
in
cld
test
addr16
cmpb
lods
andb
int
push
std
xchg
mov
mov
gs
xchg
aad
dec
adc
push
push
addr16
sub
fcoml
std
outsl
xchg
dec
aam
inc
inc
jae
pop
sahf
in
repz
xchg
mov
or
cmp
jns
in
stos
shrl
dec
incb
mov
push
sbb
outsb
xchg
cmp
push
out
jge
dec
pushf
test
mov
mov
mov
mov
dec
jo
inc
dec
jo
shl
popa
fcomi
dec
stc
leave
pop
sub
sbb
mov
inc
leave
jg
lret
ret
and
test
adc
lret
scas
sbb
sub
shl
sbb
dec
xchg
leave
cmp
loopne
jp
jg
in
xchg
popf
or
add
xor
push
ret
ljmp
sbb
scas
pop
clc
outsb
add
lods
or
xchg
movsl
xor
nop
lock
outsb
loop
jmp
xchg
jmp
icebp
nop
xchg
sbbl
or
subl
nop
cli
or
push
insb
sarb
test
hlt
cmpsb
inc
or
and
cmp
add
jno
mov
jne
mov
mov
cmp
mov
pop
sub
sub
imul
and
dec
cli
mov
mov
iret
and
clc
lea
daa
mov
pop
std
dec
popa
aad
aaa
jle
sub
push
pop
xlat
xchg
mov
mov
into
or
xchg
test
inc
sub
aad
test
sbb
and
cmpsl
icebp
sbb
mov
mov
xor
cmp
push
shll
and
mov
fbld
xor
xor
mov
dec
int3
inc
test
lods
out
inc
cmpb
scas
cmp
sbb
out
inc
scas
stos
dec
jne
xchg
shll
test
jns
mov
sub
mov
jno
cmp
mov
cwtl
pop
je
iret
aaa
fs
rorb
sbb
ljmp
dec
xlat
aad
xchg
push
sub
aad
enter
es
pop
sbb
sbb
sub
and
push
and
jo
pop
pop
repnz
nop
sbb
sub
lahf
js
clc
insb
movsb
lcall
pop
adc
sub
pop
jns
xchg
leave
loop
xorl
scas
mov
jns
mov
aad
mov
test
mov
cld
push
mov
cmp
mov
xchg
stc
shlb
fistps
inc
mov
movsl
xchg
jmp
insb
aam
and
dec
push
mov
dec
jns
popf
pop
fwait
ret
pop
pop
push
sub
lcall
call
or
rorl
pinsrw
scas
outsl
in
loop
jg
dec
icebp
out
jns
aas
shll
repz
lcall
inc
je
dec
out
or
int
fnstcw
std
iret
stc
arpl
int
imul
and
pop
outsl
in
inc
push
jbe
out
mov
cmpsl
gs
jae
xchg
mov
push
in
stos
int
repz
scas
and
xchg
and
mov
xor
repz
sbb
sub
push
stos
hlt
add
movsb
cwtl
pop
jle
adc
pop
cli
adc
lds
fs
sbb
push
adc
xor
jo
and
xor
mov
dec
xchg
inc
movsb
in
dec
or
xchg
xchg
dec
int
add
mov
repz
xchg
xchg
cwtl
pop
sbb
sbb
cltd
mov
ret
and
lods
sub
mov
and
adc
sarb
pusha
js
add
lahf
and
dec
dec
jmp
arpl
inc
das
cmpsb
push
or
xor
dec
xor
pop
and
mov
roll
mov
adc
lods
movb
xchg
hlt
or
ljmp
ds
dec
jecxz
fcoml
lods
movsb
pop
push
jbe
in
addl
inc
mov
sub
and
dec
scas
add
call
cli
or
insl
adcl
inc
pusha
xor
sub
jle
jl
mov
out
push
pop
add
cmpsl
xor
dec
in
jp
lods
adc
push
sub
mov
xchg
pop
hlt
jbe
jmp
rcrl
lods
loopne
adc
add
subl
or
add
add
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
and
rclb
ja
xchg
inc
cmp
xlat
ds
ja
xor
movsl
loope
and
loope
mov
int
loop
push
mov
xlat
in
add
jmp
cwtl
mov
cmp
fwait
ljmp
and
popf
jbe
in
xchg
and
shll
dec
and
pop
or
sahf
sub
and
xchg
sbb
mov
adc
insb
cmp
jle
gs
mov
inc
inc
jle
out
push
fadd
push
movsb
sub
sbb
push
sbb
push
sbb
xchg
and
loopne
and
add
hlt
or
cltd
adc
xor
sub
clc
dec
mov
pop
outsl
faddl
pop
or
cmp
mov
xchg
pop
mov
dec
push
jne
mov
out
adc
xchg
test
dec
jae
push
lods
push
inc
inc
or
stos
and
or
imul
jl
push
in
cli
xor
cmp
pushf
pop
pop
or
shrl
inc
out
mov
sub
in
pushf
in
loop
add
dec
mulps
add
sbb
mov
cwtl
dec
fwait
mov
repz
cli
cmpsl
cmp
xchg
pop
add
cmpsl
push
pause
cmp
inc
cmp
in
jl
std
cmp
cmp
xorb
rclb
sbb
and
mov
mov
ficomps
std
lahf
mov
fstps
pop
js
pop
jp
sbb
inc
ret
stos
xor
xor
lret
cmpsl
jecxz
jb
call
roll
mov
aam
pop
lea
inc
push
pop
mov
jmp
dec
xchg
pop
push
sub
jbe
mov
pop
sbb
adcb
addr16
xor
cltd
jbe
mov
sbb
sahf
cmp
outsl
bound
je
inc
rclb
pushf
mov
xor
jle
adc
mov
sti
mov
sub
push
push
stos
xchg
and
mov
pop
pop
pop
or
js
pop
jb
and
std
sub
sarl
xor
cmc
test
xchg
and
adc
stos
lods
inc
into
ljmp
mov
pop
cmc
and
cmp
push
mov
dec
jp
pop
fisttpll
cmpsb
fldl
das
jmp
loope
dec
xchg
jmp
adcb
adc
test
jg
add
and
je
dec
jecxz
pop
jae
iret
into
mov
in
mov
inc
jns
iret
sbb
into
sub
or
add
mov
subb
sbb
mov
aam
movsl
mov
movsb
and
sub
inc
pop
mov
xorb
xchg
sub
push
cmpsb
mov
xchg
xchg
insb
data16
mov
arpl
jmp
lods
fs
fs
lret
push
xchg
fwait
je
sti
pop
cmpsl
mov
ss
repnz
add
add
das
lret
add
call
inc
inc
nop
xor
popf
in
pushf
add
aam
inc
test
mov
test
lret
jnp
out
sarl
jne
sub
jno
push
pop
push
xor
mov
and
aad
inc
lods
cmp
insb
and
jae
testb
sbb
testl
scas
aas
xor
adc
js
dec
lods
into
push
dec
inc
clc
lret
inc
cmp
pop
out
adc
scas
push
scas
vpmaxsw
adc
test
pusha
mov
jl
test
scas
xchg
into
and
lret
pushf
or
push
and
fisubrs
popa
mov
inc
mov
dec
mov
sbb
movsb
in
cmp
jno
fildll
pop
sub
or
in
or
adc
cmpsl
daa
pop
cmp
sbb
scas
outsb
lret
cmp
inc
arpl
mov
sub
add
ja
push
mov
inc
mov
fidivs
mov
notl
jecxz
scas
push
bound
loop
aam
sbb
pusha
cmp
pop
fiadds
icebp
jae
incl
test
fstpt
sbb
ret
jb
add
daa
xchg
push
inc
pushf
call
pop
or
call
fwait
mov
pop
pop
cld
sub
sbb
add
jl
mov
bound
or
scas
int
add
fldl
xor
hlt
jns
push
jns
sbb
lea
cvtpi2ps
xlat
popa
jmp
inc
pop
insb
inc
jecxz
push
lcall
jecxz
jge
and
int3
pop
sub
bnd
iret
push
cmpsb
adc
fidivrl
sub
jl
shlb
pop
or
mov
int3
jg
in
sub
mov
fwait
mov
lods
movntq
rorb
jmp
out
inc
push
add
mov
dec
add
enter
or
dec
xor
mov
adc
pop
and
cld
push
mov
mov
clc
fs
inc
mov
loop
inc
outsl
lea
cmp
sub
xchg
and
pop
xchg
push
ds
push
mov
sub
shl
cmp
add
call
mov
repz
mov
cwtl
push
xor
jae
es
dec
sbb
rorb
inc
pop
dec
sahf
xorl
push
xor
jge
sbb
jle
leave
pusha
cmp
or
mov
adc
movsl
inc
pusha
lcall
loop
add
out
inc
fs
out
testl
mov
sbb
jbe
sbb
lods
or
fdivrs
std
xchg
xchg
push
mov
push
mov
and
sbb
andb
insb
adc
in
xor
dec
repnz
out
sbb
and
ljmp
sbb
mov
pop
inc
aaa
push
sbb
repz
cmpsb
enter
icebp
rclb
stc
daa
scas
out
stos
inc
loopne
sbb
out
xor
mov
sarl
add
pop
outsl
push
sbb
sbb
test
or
push
int3
ja
jae
add
je
subl
stos
cmp
push
lea
ss
adc
call
addb
mov
aas
stos
nop
push
test
mov
cmp
pop
dec
add
lahf
aad
test
inc
incl
cmp
test
shrl
fs
mov
fistps
push
sbb
sbb
repz
jno
and
nop
xchg
push
sub
es
aad
aas
sbb
pop
adc
sub
xor
xchg
mov
and
in
mov
ss
scas
fiadds
add
jecxz
sarl
insl
lods
out
sub
in
inc
insb
mov
cwtl
sti
mov
frstor
notb
dec
iret
ja
stos
test
jb
scas
xor
rcl
je
stos
loop
lcall
fisttpll
and
xchg
or
pop
and
ret
push
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
mov
add
jne
es
aad
rolb
test
loopne
jns
je
push
lock
xor
jno
enter
mov
push
sbb
cld
add
cli
or
push
in
cld
into
dec
dec
arpl
mov
inc
sbbb
ljmp
dec
rclb
pushf
in
stos
cmpb
cmp
test
lret
cmpsl
pop
add
fsubs
sbb
test
jbe
out
jnp
mov
mov
mov
stos
and
mov
mov
inc
shlb
movsb
jae
inc
adc
out
aam
jne
rcll
mov
das
fbstp
and
psubw
jno
pop
shlb
fisubs
fmuls
sub
cltd
pop
outsl
add
call
fidivrl
les
sahf
pop
icebp
repnz
jecxz
adc
mov
xchg
shlb
pop
pop
push
scas
out
shl
popf
pop
in
cmp
out
das
push
adc
int3
pop
pushw
sub
mov
int
mov
pop
test
and
cmpsl
icebp
out
pop
mov
mov
or
leave
lods
mov
inc
dec
jo
fisubrl
or
mov
and
test
mov
lcall
mov
xlat
les
jno
push
mov
inc
push
mov
pop
mov
aas
cmp
pop
lret
rcl
xchg
in
pop
test
mov
mov
pop
mov
ret
pushf
pop
adc
and
cmc
dec
pop
insb
sub
xor
xchg
adc
test
enter
lahf
xor
xor
mov
or
mov
dec
dec
imul
repnz
insl
lret
mov
jo
movsb
xor
lret
test
fisubs
ret
cmc
test
lods
push
and
xor
lcall
or
xchg
push
scas
cmpsb
pop
shll
ret
sbb
jb
aas
mov
mov
mov
sbb
loopne
gs
orl
or
ret
das
push
lret
ss
sub
jg
or
xchg
mov
aas
inc
jg
xchg
pop
in
test
stos
ljmp
add
pop
lock
aam
inc
enter
xchg
push
mov
mov
popl
or
lods
fidivs
jno
xchg
ds
decb
gs
push
cli
fnstsw
dec
fisttps
jge
movsb
in
scas
sub
int3
inc
mov
cmp
mov
ljmp
std
inc
jmp
jo
add
adc
xor
sbb
in
pop
pop
adc
lcall
fsubrl
jmp
mov
clc
mov
arpl
pop
inc
icebp
stos
sbb
out
ror
std
hlt
test
dec
mov
xchg
mov
sbb
cltd
adc
pop
xchg
mov
scas
mov
fstl
stc
pop
adc
push
add
push
iret
mov
stos
or
bound
push
shlb
insb
pushf
in
pop
inc
mov
and
push
shrb
mov
or
fstpl
mov
inc
int3
ljmpw
leave
mov
mov
test
mov
xchg
shlb
xor
es
add
push
shll
scas
in
pop
mov
in
movsl
in
int3
sbb
int3
iret
out
movsl
int3
iret
xchg
mov
sub
sub
sub
mov
arpl
and
jl
xor
add
lods
out
ficoml
loope
out
push
cmpsl
pusha
adc
insl
addr16
int3
data16
push
cmc
in
dec
test
cmp
test
inc
cwtl
jno
jmp
addb
mov
sti
mov
xor
xor
sub
es
add
add
or
inc
xchg
adc
mov
sbb
xor
jmp
pushf
adc
pop
lcall
xlat
cli
pushf
push
vmread
xchg
cmp
lods
shlb
push
mov
mov
cli
arpl
arpl
push
imul
mov
jle
popa
xchg
lret
or
adc
ret
call
pop
test
cld
xor
iret
mov
sub
pushf
add
ljmp
sub
fs
pop
and
jle
jge
movsb
adc
add
bound
pusha
ficompl
cmp
test
push
adc
jo
mov
xlat
jge
pushf
std
loop
dec
ljmp
and
and
sub
movsl
insb
push
mov
xor
loopne
mov
loop
lret
imul
xor
cltd
popf
adcl
cmp
xchg
inc
xchg
ficoms
cmp
add
push
lret
and
test
dec
popa
lea
lods
jmp
push
pop
and
sub
in
rorb
fcompl
popf
popa
xchg
divb
mov
test
gs
jae
js
and
cmpsb
xor
mov
push
dec
arpl
mov
push
fdivrs
mov
cli
insl
xor
mov
sub
sbb
movsl
std
mov
jne
mov
xor
fst
aad
sbb
jbe
mov
and
lds
jno
cwtl
xor
mov
popa
lods
aaa
popf
sub
inc
cmp
addr16
imul
jmp
or
mov
test
and
and
ds
enter
lods
scas
repnz
aad
rcrl
adc
movl
push
mov
mov
add
pmulhw
out
aam
aas
out
nop
and
inc
mov
push
push
xorl
dec
lds
icebp
push
repnz
add
insl
loop
dec
xchg
xchg
pop
dec
jmp
and
outsb
mov
xchg
adc
mov
or
mov
jae
cmp
clc
adc
xchg
loopne
das
push
pop
mov
sbb
outsl
mov
fwait
lds
ljmp
movb
test
addr16
out
jnp
dec
mov
leave
leave
xor
fs
xor
shlb
mov
idivl
gs
jmp
daa
add
nop
dec
aad
xor
jle
dec
pop
and
add
mov
scas
cs
das
stos
call
repnz
dec
jne
add
mov
arpl
out
add
js
pop
jge
or
mov
xchg
js
roll
pop
out
dec
jmp
xor
and
in
stos
insl
mov
mov
int3
add
inc
std
addr16
dec
lods
jg
nop
test
stc
inc
orb
imul
das
ficomps
or
cmp
mov
adc
cmp
dec
dec
dec
ret
imul
or
pushf
cmp
push
movsb
add
push
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
mov
repz
adc
mov
lods
jmp
sbb
add
cmc
test
sub
test
jp
lret
movsb
xchg
dec
jbe
mov
ja
or
mov
aaa
pop
scas
mov
loope
sbb
jmp
dec
inc
xlat
out
lahf
in
adc
push
in
jo
es
pusha
adc
cs
sub
or
ficompl
cmc
aaa
pop
push
filds
xchg
ret
notl
inc
push
jp
jae
test
popf
xchg
fildll
xchg
jmp
push
pop
jo
ljmp
add
repz
fwait
fwait
inc
add
movsb
xor
hlt
adc
adc
outsl
add
lods
test
jbe
dec
fidivl
cs
movsb
add
jne
inc
mov
sbb
xchg
pop
outsb
mov
sbb
aad
pop
mov
or
negl
push
pusha
adc
and
rcrb
add
sub
mov
aaa
xchg
inc
lret
fwait
xchg
popl
les
mov
aaa
and
mov
sbb
inc
add
jbe
cmp
ds
fisttpll
aaa
push
xor
xor
test
mov
outsb
mov
dec
add
push
mov
stos
test
out
rcrl
push
js
push
xchg
lcall
push
mov
int
cltd
out
fstpl
leave
lock
fisubl
scas
in
mov
add
lock
out
dec
sbb
ret
jns,pt
pop
mov
cmp
pop
adc
loope
mov
sub
pop
mov
cmp
into
push
mov
or
jo
jne
sub
sbb
lods
dec
sub
aaa
hlt
aam
aad
test
in
mov
lock
arpl
dec
enter
inc
ret
fmull
dec
rcl
fsubrl
inc
push
nop
mov
les
js
xchg
rcll
adc
shrb
xchg
lea
cltd
test
iret
hlt
lcall
mov
adc
out
xchg
out
xchg
cltd
push
mov
adc
das
or
loope
fmul
loop
leave
sub
cmpsl
add
lods
shlb
aad
mov
ret
lret
mov
xchg
lock
and
mov
test
cmp
mov
xor
jnp
nop
movsl
or
push
xchg
adc
mov
push
sbbl
inc
cmp
outsl
fwait
sub
xchg
xor
out
rolb
or
push
arpl
mov
inc
push
adc
aaa
mov
inc
xlat
jecxz
int
fnsave
mov
fscale
mov
lock
jno
orb
mov
pop
movsb
xor
cmpsb
pusha
jl
jbe
xchg
pop
arpl
xchg
pop
xchg
xchg
xchg
push
jb
sbb
jne
sub
int
push
sbb
lea
or
clc
mov
aaa
mov
out
sbb
in
sbb
sbb
icebp
testl
jmp
sbb
pop
sub
rclb
sub
stc
jg
push
out
test
popa
mov
pop
adc
repnz
jmp
inc
je
popa
inc
dec
push
test
inc
and
inc
cmp
lds
loopne
pop
jae
adc
jmp
cwtl
mov
fisttpll
ss
push
mov
in
mov
test
faddl
lods
outsb
and
add
lahf
and
iret
jo
xchg
xor
test
imul
mov
pop
shrl
lret
and
cli
nop
adc
cwtl
ss
scas
cltd
add
xchg
mov
out
xchg
cmp
cmp
int
pushf
leave
aam
inc
cmpsb
test
imul
das
mov
fwait
jne
mov
mov
jecxz
mov
adc
push
and
adc
adc
mov
shll
shld
rcll
or
or
loop
outsl
and
push
shll
outsb
loopne
add
stos
mov
sub
sub
js
jge
ss
mov
cwtl
loopne
and
fistps
es
aad
xor
xor
inc
std
or
sub
loopne
xchg
dec
icebp
ljmp
cmp
fldt
dec
cmpsb
daa
imul
enter
or
push
shll
and
inc
in
push
mov
mov
repz
adc
adcb
cwtl
xchg
xchg
inc
xchg
adc
outsl
outsl
insb
sub
lret
jo
sub
mov
shlb
adc
in
dec
jl
cmp
push
push
fistl
mov
push
adc
pop
adc
add
divb
rclb
sub
pushf
test
mov
shlb
adc
dec
js
adc
mov
pop
ret
pop
and
rorb
inc
pop
xorl
sbb
pop
cmpsl
in
in
rcr
loop
out
ds
adc
mov
xchg
xor
test
js
scas
jo
cmp
mov
out
xor
fiaddl
outsb
sub
pushf
mov
or
dec
xchg
mov
ja
popf
test
cli
fsubp
jp
mov
sahf
and
js
out
jns
addl
es
xor
adc
adc
or
stos
push
in
rorb
xchg
add
xor
imul
ret
ja
sub
xchg
push
xchg
push
or
iretw
std
out
jmp
sbb
add
rcll
nop
mov
ret
clc
lods
sub
or
cmpsb
jmp
shrl
mov
jbe
xor
sub
sbbl
dec
cmp
sub
imul
into
mov
ret
sub
ja
imul
and
mov
cltd
cli
xchg
std
lods
ret
xlat
jae
loope
loope
mov
mov
ret
fs
out
fs
je
push
sub
adc
int
push
jb
js
cltd
fs
or
and
std
add
jp
decb
movsl
or
div
adc
pop
pop
aaa
lods
bound
inc
std
mov
sub
push
mov
ficoms
out
shrb
add
add
pop
aad
int3
xchg
mov
out
xchg
pop
aaa
cmpsl
and
jae
xor
shrl
aaa
dec
repz
and
ficompl
jmp
push
mov
cwtl
jns
jecxz
push
inc
gs
mov
and
repnz
cmp
inc
adcl
push
rep
test
mov
add
mov
and
inc
xchg
bound
mov
scas
pop
out
enter
add
lods
mov
push
mov
daa
int
icebp
mov
in
mov
pusha
rcrl
outsl
lea
ljmp
pop
insl
pushf
cmc
test
add
and
inc
movsb
mov
mov
shrd
jmp
add
dec
push
adc
call
xor
ja
jnp
mov
scas
test
ret
cmp
shlb
les
inc
pop
pusha
outsl
adc
adc
shl
xor
xor
je
hlt
sub
pop
xor
mov
fsubrp
rorl
subb
mov
dec
fimull
adc
xchg
into
cli
or
adc
hlt
jecxz
test
mov
vphsubdq
jnp
mov
jmp
pop
inc
aad
push
in
push
pop
push
pop
jecxz
and
pusha
mov
fcmovnu
andl
ja
xor
in
lock
and
xchg
shll
dec
sbb
in
cmpsb
add
add
adc
sub
jl
and
jne
or
mov
imull
xor
sub
push
int
pop
mov
inc
adc
pop
lret
in
rcrl
jl
jg
dec
cwtl
pop
je
sub
or
mov
out
add
lret
pandn
mov
pusha
adc
jge
mov
xor
imul
aas
gs
mov
out
push
test
sahf
and
test
or
mov
repnz
mov
out
xchg
adc
cmc
in
in
cltd
xchg
in
push
stos
mov
jge
lcall
mov
fidivrl
test
add
xor
push
mov
int
dec
aam
ljmp
pushf
icebp
add
shl
call
imul
add
outsb
mov
insb
mov
and
cltd
jno
fistpl
jae
mov
mov
adc
xor
fbstp
and
dec
mov
add
aad
xorl
imul
aam
stos
inc
pop
jnp
scas
pop
sti
push
pop
mov
sbb
push
lea
sbb
cmp
dec
stos
cmp
mov
iret
fisttpl
dec
mov
push
xchg
mov
pusha
jnp
inc
movsb
jecxz
mov
sub
pop
repz
pop
mov
cmc
int
jmp
lock
sbb
popa
ret
cmp
aas
sbb
stos
scas
and
or
xchg
mov
add
jnp
in
sbb
out
loop
fdivl
lods
test
rorl
pop
pushw
push
dec
jbe
adc
dec
lock
cmp
mov
les
mov
std
sub
loop
psubw
fs
neg
mov
dec
fs
pop
jnp
sbb
push
push
arpl
sbb
sub
stos
push
dec
scas
mov
push
repnz
nop
sub
inc
cmp
and
push
iret
push
data16
xor
sbb
lods
or
in
cmpsb
stos
cmp
pushf
es
scas
cmp
mov
scas
pop
jae
cld
adc
xchg
push
scas
sbb
mov
pushw
test
cmp
mov
movsl
in
mov
and
cmpsb
pop
js
or
adc
shlb
xchg
push
inc
leave
pop
jns
pop
loopne
daa
fdivrl
lcall
fisttpll
mov
aaa
inc
in
xor
fidivl
xchg
and
mov
inc
sbb
test
push
and
aam
fldcw
cs
inc
dec
mov
mov
insl
pop
scas
mov
movsl
pop
jg
mov
and
mov
rcll
jg
outsl
repz
cmp
in
xor
jmp
test
daa
aaa
ds
xor
xor
adc
iret
mov
cld
aam
mov
sub
dec
push
inc
adcl
popa
sub
movsl
dec
dec
aas
imul
adc
cmp
aas
cmp
adc
cmc
orl
out
fmulp
andl
imul
ljmp
adc
push
jb
imul
push
out
inc
jmp
push
imul
imul
rorl
subl
pop
push
jnp
mov
or
fsubrs
jle
movsl
cwtl
mov
lods
push
js
jl
lahf
icebp
mov
xchg
stos
dec
movsb
dec
int3
lds
imul
repnz
aas
pop
rcrl
cmpb
or
into
adcb
cwtl
mov
inc
mov
xchg
shl
pop
or
out
lahf
loope
fucomp
data16
lea
mulb
lods
sub
popa
sbb
mov
nop
inc
dec
cltd
divl
dec
lock
sub
in
out
iret
push
je
and
dec
fxch
add
out
sub
mov
iret
add
js
jge
sbb
pop
push
sub
push
cltd
push
cli
std
pop
mov
imul
xchg
sub
stos
fisttpll
and
das
mov
daa
pushf
loop
xchg
ss
dec
adc
cltd
inc
icebp
push
jo
add
outsl
push
mov
inc
mov
loopne
cmpsb
orb
mov
pop
repnz
stc
rclb
fwait
aam
test
mov
stc
push
mov
cmc
jle
in
icebp
fstl
jl
les
enter
sbb
aad
stc
lcall
mov
add
add
fdivrl
and
jne
movsb
dec
sub
mov
es
inc
gs
xchg
imul
sarl
sbb
mov
cmp
icebp
add
imul
and
sub
aaa
xor
mov
mov
push
pop
mov
or
fwait
push
js
pop
jecxz
and
add
inc
and
mov
mov
dec
pop
arpl
sti
int
pop
jo
push
mov
push
mov
test
push
and
adc
cld
rcr
in
or
js
xor
or
cmp
xor
das
adc
stos
lret
lods
inc
or
add
lret
and
mov
out
and
cmc
mov
scas
xchg
push
or
adc
jl
in
mov
pop
jae
xchg
sbb
sub
lret
into
jns
cmp
repz
push
movsl
dec
fstpl
dec
repnz
cmp
ficomps
int3
negl
adc
outsl
gs
test
in
adc
mov
adc
fcomp
inc
jb
mov
aaa
in
inc
pop
jecxz
loop
mov
nop
mov
or
push
insl
stc
inc
bound
xchg
xor
mov
pop
inc
rcrb
or
test
jae
inc
lcall
stc
mov
push
and
sbb
int3
sbb
mov
xchg
sub
inc
mov
loopne
insb
xchg
in
sub
adc
pop
and
sbb
mov
or
push
mov
push
fisubs
mov
getsec
test
pop
xchg
int3
jns
mov
push
mov
aaa
adc
cli
test
cmp
aam
cwtl
icebp
sub
out
fwait
and
push
lods
cltd
in
add
or
mov
mov
divl
fcoml
and
sub
pop
mov
loopne
jbe
leave
fwait
test
push
sub
or
jmp
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
lret
inc
sub
jg
mov
sub
fwait
push
mov
mov
pushl
mov
mov
mov
jg
sbb
mov
add
out
popa
jb
call
cmp
inc
xlat
out
pop
xor
cmp
sahf
cmpsb
cmp
jno
pop
and
shl
not
jge
addr16
cmp
dec
test
dec
mov
push
andb
clc
dec
into
sbb
xor
mov
inc
scas
pusha
adc
dec
push
push
shl
add
or
outsl
push
sub
jo
ret
mov
fwait
lret
xchg
xchg
fwait
inc
das
shr
dec
cmpsb
inc
out
icebp
xor
sbb
ljmp
mov
cld
mov
mov
js
push
or
xchg
lock
mov
cmp
jl
in
pop
and
sub
sub
jecxz
push
cld
jb
repnz
jp
inc
dec
std
pop
cmp
out
push
xchg
pop
fnstcw
movsb
insb
pop
lret
imul
rolb
xor
sbb
pop
aas
cmp
sbb
pop
clc
aaa
pusha
cmpsl
jecxz
and
xor
jb
pushl
xor
mov
loopne
cmp
or
pop
es
lret
add
xor
fldcw
inc
mov
jmp
loop
add
inc
cwtl
push
scas
js
std
les
push
jb
ja
cwtl
pop
mov
or
jle
lock
sub
pop
lcall
cs
test
jns
hlt
jg
xchg
jo
mov
negl
dec
pop
fiadds
dec
cmp
out
push
sar
bound
clc
mov
fmull
mov
push
jp
or
cmp
cld
daa
out
jae
push
mov
loopne
negb
xchg
adc
mov
hlt
mov
call
data16
ret
mov
mov
inc
sti
xor
outsb
pop
data16
aaa
ja
in
iret
pop
test
in
inc
pop
ret
fcompl
cmp
mov
cmp
jne
add
fsubs
dec
popf
mov
fsubp
cwtl
cmpsb
out
add
fs
push
rcr
push
add
or
xor
inc
adcb
xor
arpl
jo
mov
gs
push
movsb
push
test
cmpsl
sarb
testb
cmpsl
loope
scas
mov
cmp
cwtl
dec
cmp
and
pop
das
xor
jmp
lods
sahf
cmp
ret
rorl
or
std
add
lods
in
in
push
arpl
pop
push
in
in
add
adc
pop
jmp
subl
imul
test
lret
jns
mov
decb
push
lods
xchg
xchg
cwtl
add
cmpsb
les
aad
fsubr
mov
jno
outsb
xlat
push
sub
shl
add
and
jge
adc
jge
and
sti
dec
rolb
adc
xchg
adc
mov
stc
sub
fldcw
outsl
jecxz
pushf
ret
jle
les
call
cmp
pop
in
addr16
xlat
dec
orl
out
ror
pop
push
mov
lea
repnz
cmpb
lock
in
xor
dec
sub
xchg
push
push
lds
push
dec
cwtl
mov
out
cltd
imul
cwtl
push
add
mov
cmp
ja
test
xchg
inc
cmp
mov
insb
push
fbstp
mov
fisttpll
cmpsl
lds
push
mov
push
fcoms
dec
daa
fisttps
and
pop
dec
sarl
inc
subb
negb
add
jle
rcr
out
fst
push
push
jle
mov
es
inc
cmp
js
push
sbb
fwait
jo
scas
mov
xor
mov
cmp
adc
sub
movsl
bound
xor
push
cmp
xor
and
mov
inc
call
and
test
fidivrl
or
les
lods
bound
add
xor
or
ja
xor
jp
adc
bound
dec
xor
rcrb
cmp
mov
and
cmp
pop
movsb
mov
adc
fisttps
cmpsl
rclb
inc
cmp
jb
cwtl
mov
rcr
loop
push
cmp
sub
ss
ret
in
add
repz
dec
subps
sahf
ret
push
or
out
jp
mov
filds
pop
push
nop
rclb
into
or
inc
call
mov
jg
out
jge
es
out
jae
lea
inc
add
jecxz
mov
cmp
popf
mov
pop
mov
inc
lahf
imul
ret
mov
jge
or
js
lds
movsb
xchg
shl
xorl
push
mov
gs
pop
and
inc
fcmovb
mov
cmp
pop
outsb
js
push
and
cwtl
cltd
xchg
inc
sbb
int
adc
jns
adc
inc
cmp
aaa
adc
icebp
mov
mov
mov
outsb
sbb
push
stc
lds
sahf
cmp
xlat
sub
test
xchg
cmc
mov
sbb
mov
cmpsl
andl
push
sub
xchg
int3
push
mov
popf
dec
mov
push
mov
dec
ja
mov
pop
mov
shrb
int3
out
mov
rclb
aas
mov
imul
testb
scas
xorb
mov
push
enter
dec
or
shr
mov
mov
orb
aaa
mov
mov
ss
fwait
jns
or
int
aas
sub
push
sbb
mov
push
out
out
sub
adc
stos
mov
mov
xchg
rcrb
pushf
insb
add
mov
call
lods
shrb
xchg
lds
jmp
es
xchg
mov
mov
xor
rcrb
rorl
mov
int3
dec
dec
add
lcall
subb
mov
mov
lea
xchg
mov
inc
fisubs
pop
xor
sub
arpl
data16
ljmp
sbb
mov
mov
push
xor
push
in
adc
dec
xor
push
dec
clc
roll
test
test
sbb
xor
je
xchg
mov
leave
inc
cs
and
xchg
stc
xchg
leave
ss
jnp
push
in
and
pop
xchg
leave
push
repnz
dec
mov
pop
push
stos
jb
jg
lcall
test
jle
cld
and
cmp
mov
adc
stc
sbb
dec
xor
inc
adc
js
scas
push
mov
add
push
lret
dec
and
popa
or
cmp
popl
push
aaa
fstpl
jbe
cmp
push
inc
inc
mov
decb
test
inc
mov
repnz
test
mov
or
pushf
cmp
pushf
and
scas
adc
mov
xlat
jo
sti
or
jmp
mov
fwait
dec
inc
in
pushf
mov
inc
or
lods
xor
call
push
aam
loope
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
stos
enter
ja
pop
mov
in
lea
scas
lret
sbb
fisttpl
add
lock
dec
pop
fs
aaa
jae
ss
das
dec
mov
mov
mov
out
or
cli
sbb
aad
ret
cltd
js
sbb
cmp
mov
test
loope
icebp
testl
stc
in
push
shlb
lds
cld
pop
xor
xchg
mov
sub
pop
push
shr
insb
sub
lea
sub
xchg
cmp
adc
ljmp
push
sub
adc
in
movsb
push
nop
fimull
jns
adc
ret
jns
fsts
mov
rep
xor
push
push
xchg
mov
stos
cmp
fwait
sub
push
mov
add
sbb
jecxz
subb
jo
leave
cmp
data16
daa
daa
ficoml
pushf
ss
mov
dec
fistpl
jmp
ret
in
xchg
test
xlat
out
push
sub
outsl
xchg
cld
sub
inc
inc
rcll
shlb
push
inc
pop
or
repz
fidivl
scas
and
je
xchg
loop
cmp
push
imul
ss
jo
aam
enter
cwtl
dec
arpl
insb
shrb
jmp
jno
je
iret
push
outsb
cwtl
movsl
jnp
icebp
xchg
stos
icebp
jo
xlat
cmp
loopne
in
sbb
adc
push
cmpsb
dec
inc
mov
mov
mov
mov
or
xchg
mov
sub
add
testl
sbb
ljmp
mov
call
bound
mov
shlb
leave
mov
shlb
mov
lret
into
sub
sarl
jne,pn
negb
sbb
stc
pushf
fisttpl
adc
push
outsb
xchg
dec
mov
in
in
sub
aam
out
leave
gs
sbb
add
and
mulb
cltd
xchg
insl
fwait
mov
pop
sarl
or
icebp
out
daa
sub
xchg
push
push
cwtl
xor
roll
inc
dec
inc
jmp
and
jae
dec
push
mov
loope
adc
popa
mov
sbb
subl
aaa
es
mov
inc
cmp
mov
mov
lods
adc
or
mov
lcall
dec
pop
xchg
cmpl
cmc
leave
mov
dec
mov
out
rcrb
mov
fisubrs
sub
enter
jmp
pop
loop
js
mov
dec
xchg
xchg
dec
pushl
lcall
cld
mov
cmp
fs
lods
cli
inc
pop
rclb
inc
repz
push
push
js
adc
xor
xchg
es
jge
add
shll
les
xchg
pop
insb
add
sti
mov
mov
add
iret
xchg
mov
fldt
and
in
mov
mov
pop
or
test
aaa
out
ret
or
push
testb
dec
shll
insb
arpl
arpl
adc
scas
pushf
shlb
sbb
push
dec
push
insl
pop
gs
dec
jb
cwtl
ret
dec
cmp
mov
cld
pop
out
rcl
xor
roll
xchg
add
into
jnp
std
ret
sbb
insl
inc
mov
cltd
iret
mov
and
mov
cmp
jns
mov
xchg
xor
shll
xchg
adc
cmpsb
lods
stc
stos
xchg
movl
sub
and
outsl
idivl
push
xlat
push
sbb
adc
shlb
xor
fwait
cltd
ret
mov
imul
mov
cmp
xchg
into
shlb
pop
iret
fdivrs
dec
xchg
lods
fs
pop
cmp
into
jle
mov
or
inc
out
pop
cmp
fprem1
push
xor
sub
test
lret
dec
rcrb
int
push
or
stos
sti
dec
mov
fcmovb
jle
sti
iret
and
mov
cmp
inc
lret
cmp
cmc
or
lods
push
rcr
mov
dec
lcall
cmpsl
js
subl
push
cmpsb
sbbl
mov
sub
imul
loop
ds
adc
cmp
out
or
jns
int
xchg
pusha
rclb
jb
test
jl
sub
and
sub
popa
sbb
aam
lret
fucomip
or
es
int
mull
shlb
ds
int
mov
andl
pop
js
fadds
std
enter
push
and
add
ret
sub
pop
out
xor
xor
int3
sub
push
or
cmp
or
and
js
out
gs
mov
shll
leave
add
sub
xor
shr
jno
cmpsl
mov
push
or
gs
leave
ss
mov
jno
lods
or
divb
cmc
movsb
jno
cmc
addb
in
mov
mov
popa
sbbl
dec
fsubrl
addr16
push
jno
or
jg
cmp
inc
cmpsb
mov
scas
jns
sbb
insl
dec
dec
jmp
pop
iret
dec
add
inc
pop
cld
cltd
or
add
mov
ficoms
aam
pop
and
subl
in
fwait
mov
outsb
xor
roll
stos
adc
stos
mov
movsb
iret
inc
sbb
or
movsl
test
fistpll
xlat
jbe
add
mov
sub
sbb
ljmp
push
mov
inc
and
push
and
jbe
shlb
sub
mov
cltd
mov
mov
xchg
adc
or
xor
sub
mov
sti
jo
adc
cld
sbb
push
cmp
outsl
mov
push
fists
pop
fdivp
xor
popf
scas
adc
fsts
cmp
lods
rorl
movsb
or
mulb
or
inc
outsl
sbb
sti
jecxz
icebp
xchg
mov
hlt
cmp
sub
mov
sub
out
cld
mov
mov
int3
mov
mov
mov
sbb
imul
mov
ljmp
mov
lds
dec
dec
pop
lods
push
mov
add
jne
and
dec
scas
mov
jmp
sub
mov
jmp
test
jno
add
fcompl
testb
mov
mov
iret
imul
jle
or
xor
jl
push
mov
sub
sub
push
mov
pop
fsubrl
stc
adc
dec
or
stos
jmp
popf
pushl
mov
repnz
lcall
add
push
fists
ss
dec
mov
imul
and
jg,pn
xchg
mov
push
cmpb
mov
cmc
jae
mov
pop
jb
jge
js
push
leave
insb
call
addr16
fimuls
scas
mov
stos
in
cpuid
nop
lock
int3
dec
movsl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
sarl
mov
mov
ja
aas
rcrl
and
jb
sub
and
js
sti
mov
sbb
add
addl
movsl
ja
or
or
ss
sarl
cltd
iret
lea
notl
cs
add
mov
add
add
in
mov
or
add
lret
out
lods
pop
dec
jne
cs
loop
or
movsl
arpl
adc
push
sub
lock
lds
push
pop
cli
cld
jbe
idiv
add
sub
inc
orl
cmp
outsl
lock
push
cmp
adc
fists
sbb
push
fwait
ret
push
mov
fidivrs
idivl
mov
and
push
dec
out
es
inc
dec
add
mov
xchg
ficomps
fistpll
fdivs
adc
shlb
test
xor
icebp
rcl
xor
fsubr
and
xchg
mov
ret
dec
push
xchg
jne
loope
mov
or
sbb
cmp
cmpsl
in
scas
mov
push
adc
push
and
test
and
std
cmp
das
cmp
fldl
jnp
mov
jmp
and
test
push
loope
in
pop
xor
testb
test
cmpsl
icebp
adc
pop
push
sub
jmp
adc
mov
add
je
mov
jl
jae
cmc
fsts
sub
idivl
fiadds
leave
test
ret
push
jb
faddl
mov
sbb
pop
rcpps
pop
out
dec
repz
aaa
iret
test
imull
inc
cmpsb
shlb
sbb
repnz
push
mov
subb
scas
jnp
iret
les
adc
in
cwtl
inc
dec
std
stc
shlb
popl
jecxz
in
push
push
gs
je
sub
jecxz
adc
xor
push
xor
aad
sub
mov
and
fnsave
ret
mov
add
out
push
lds
ret
gs
push
ja
fistps
or
mov
mov
mov
lock
fldl
xor
xchg
cmp
ror
orl
call
pushf
and
movsl
mov
in
stos
test
cli
shl
push
pushl
dec
rcll
in
mov
rorb
jg
mov
test
fsqrt
add
and
jg
mov
jno
dec
mov
daa
adc
popa
xchg
shlb
jb
add
cli
push
ja
xchg
xor
fcompl
cmp
xchg
sbb
aad
cmc
jb
clc
adc
adc
or
pop
mov
push
mov
mov
rcr
or
mov
orb
stc
jp
push
add
push
sbb
ja
cs
lock
push
jle
sub
aaa
mov
jmp
sbb
loope
cmp
xchg
hlt
cmp
and
adc
repz
jle
aam
aaa
adc
fistpll
push
lret
mov
pop
xchg
cmp
andb
pop
xchg
das
mov
mov
ljmp
push
mov
test
orb
ja
push
loopne
ret
sbb
add
mov
mov
iret
jns
and
mov
in
loopne
xor
cmp
gs
inc
adc
in
stc
pop
add
inc
aad
iret
mov
xor
arpl
sahf
stos
sbbl
insb
pop
jp
jo
icebp
inc
sarb
incb
dec
and
mov
repnz
or
push
mov
sbbl
rcl
sub
aas
fisubrl
lret
adcl
mov
push
push
imul
push
mov
dec
sbb
fwait
or
stos
aad
scas
jnp
sti
leave
test
push
add
shrl
cmc
cwtl
aad
bound
jmp
add
push
out
cmpsb
and
xchg
jge
testb
lret
lods
xchg
jne
fnstenv
fldcw
push
pop
ret
cmc
xor
sbb
ss
push
fnstenv
xchg
jne
jg
insl
nop
adc
jmp
xchg
cmp
push
test
test
es
inc
repnz
or
add
push
lret
les
cltd
loopne
cmp
jp
mov
lods
adc
push
push
mov
bound
daa
int
int3
cmp
pop
popa
jmp
and
mov
leave
cmp
dec
push
mov
xchg
inc
cmp
mov
cmpsl
push
mov
mov
inc
or
sub
mov
mov
jb
sbb
adcb
into
pop
xor
les
ds
testl
mul
iret
clc
bswap
lods
mov
jmp
or
xchg
mov
and
mov
iret
cld
jno
sbb
xor
lds
sub
cmc
pushf
sahf
call
outsb
fnsave
jle
or
cs
pop
sbb
jo
jno
ja
arpl
lock
sbb
mov
ret
es
adc
sub
mov
in
retw
jmp
fmul
pop
or
andb
incb
xor
xchg
scas
jno
cmc
and
imul
test
aaa
ds
push
lret
ret
rcll
inc
aam
push
mov
aas
dec
and
decl
movsb
xor
mov
icebp
dec
inc
adc
in
pop
xor
movl
divb
mov
lret
xor
loop
lds
and
pop
mov
nop
cmp
movsl
mov
fwait
mov
pop
jae
jmp
outsl
dec
mov
pop
mov
outsl
cld
dec
shll
inc
lods
clc
cwtl
aad
repz
and
mov
mov
scas
push
pop
pop
sbb
or
pop
sub
adc
and
roll
inc
cmpsl
mov
std
or
rorb
jae
insb
xchg
inc
adc
int3
imul
outsl
add
pop
cli
rcl
mov
inc
inc
sub
mov
or
sbb
dec
xor
cmpsb
adc
loopne
mov
arpl
clc
xchg
dec
dec
inc
or
adc
add
movsb
or
lods
jmp
pop
popa
rcr
mov
jp
xorb
out
sbb
cld
pop
sub
jns
add
jae
rolb
adc
fmull
mov
sar
cmp
sbb
aaa
cmpsb
call
out
out
or
push
lret
or
cmp
add
insl
sbb
sub
xchg
xchg
cmp
mov
jecxz
adc
div
or
xor
jecxz
inc
repnz
xchg
bnd
and
lock
out
sbb
sub
mov
inc
jmp
ffree
outsb
xchg
mov
or
int
mov
dec
cli
fdivrl
jmp
xchg
movsb
call
cmp
push
mov
outsb
iret
shll
push
jae
fstl
pop
fwait
inc
dec
push
rcll
and
lods
enter
add
hlt
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
std
imul
iret
mov
movups
mov
lods
ss
cmpsb
repz
repz
sub
sbb
xor
fs
xor
bound
pushf
xchg
arpl
inc
ljmp
int
ss
xchg
sti
gs
mov
sbb
les
xlat
scas
add
push
test
addr16
out
xor
and
lret
div
imul
imul
cmp
mov
xor
outsl
push
testl
repnz
in
aam
movsb
ljmp
lcall
stc
mov
xor
push
jecxz
sbb
int
push
sub
out
mov
jbe
cmc
aas
lret
xor
pop
movsb
shrb
jle
or
arpl
push
cmpsl
add
inc
fs
xchg
cmpsb
shll
ret
fisubs
jmp
inc
or
clc
aam
mov
lret
test
shll
pop
xchg
sub
pop
dec
sahf
cmp
add
pop
dec
scas
int3
sbb
or
mov
cmp
mov
jno
test
inc
or
clc
scas
sti
add
mov
mov
xchg
xchg
cmp
jbe
inc
or
or
ds
es
out
sub
mov
push
dec
lcall
mov
pop
mov
adc
gs
and
nop
adc
daa
xor
mov
xor
das
in
or
jl
mov
push
shll
shl
pop
dec
cmp
mov
xorb
das
lods
call
mov
xor
cmp
ja
test
jbe
jno
outsb
daa
cmp
mov
aad
js
adc
enter
jecxz
mov
or
cli
into
cmpsb
lret
add
cmpsb
sub
enter
pushf
loop
sub
movl
mov
ds
arpl
adc
addr16
pop
push
ljmp
mov
jae
fisubl
daa
sub
and
lock
or
add
loopne
sbb
in
pop
xor
push
cmc
fistl
dec
mov
push
movsb
cwtl
jge
cmp
push
ljmp
mov
pop
sar
stos
out
sub
lods
popa
test
mov
pop
dec
loope
and
pushf
ljmp
push
push
mov
push
imul
rol
nop
in
shlb
pop
xchg
out
xchg
aas
aaa
push
jg
outsl
dec
jb
test
jecxz
cmp
or
dec
cmc
ja
jl
mov
sbb
sbb
jecxz
int
mov
sub
mov
imul
and
pop
mov
adc
or
xchg
push
shll
inc
lahf
push
test
xor
xor
andl
mov
push
aaa
arpl
xlat
lock
jbe
decb
xor
rcrl
cmp
daa
in
std
pop
cmpsb
roll
fwait
jns
xor
inc
sub
adc
mov
inc
dec
adc
and
sbb
jno
std
dec
fcmovbe
jbe
mov
aas
iret
lret
aam
jb
fbstp
cs
or
stos
adc
movsb
add
and
lea
jns
inc
xor
pusha
lods
aas
pushf
push
int3
in
mov
je
jecxz
dec
iret
loopne
popl
cmp
es
fcomps
test
lods
repnz
jl
lock
mov
cmpsb
test
fsubs
clc
add
push
ljmp
and
mov
cmp
mov
imul
mov
imul
fistpll
sub
pop
xchg
and
ret
lahf
push
stos
aaa
jo
loope
sbbl
mov
xchg
jge
mov
sub
mov
out
mov
push
mov
or
daa
adc
jbe
lahf
lret
repz
mov
jle
stc
insb
das
mov
rcll
add
cwtl
inc
mov
xchg
imul
sbb
cmp
mov
sbb
mov
roll
hlt
out
mov
cmc
mov
push
dec
jnp
adc
jae
fcmovnu
sbb
fnstenv
mov
iret
pop
lcall
es
mov
mov
sub
je
enter
stc
push
jg
inc
test
repnz
arpl
hlt
pushf
cmpsl
or
lods
or
popa
int3
or
sub
enter
add
cmp
out
mov
adc
stos
pop
cmp
je
fildl
push
data16
xchg
je
and
sub
into
or
mov
mov
sub
pop
or
or
cmp
or
in
es
les
imul
cli
nop
mov
adc
fdiv
push
aam
add
jb
clc
adc
pusha
cs
ror
arpl
sub
cs
pop
pop
dec
int
aas
sbb
in
mov
adc
xchg
push
xchg
mov
outsl
in
leave
mov
push
add
mov
sbb
pop
xor
out
add
sub
push
loopne
lahf
sbbb
xlat
and
enter
cwtl
sbb
mov
sti
xor
sub
gs
xchg
sti
inc
ljmp
addr16
pusha
leave
cld
dec
sbb
jecxz
rcr
hlt
ficompl
sahf
js
faddp
cmp
pop
and
cmpb
call
sub
add
cs
sbb
jle
outsl
lea
stos
sti
mov
jno
pop
mov
mov
jecxz
outsb
xchg
call
das
cmp
jae
or
add
sub
sub
sub
pop
jmp
lret
mov
lds
jno
nop
pop
imul
cmp
mov
inc
pop
idivb
jne
mov
andl
popf
loop
dec
out
mov
out
add
into
and
ret
je
in
ljmp
sbbl
mov
cmp
sbb
jmp
pop
jg
das
inc
sub
clc
pop
pop
rorl
jmp
inc
xlat
cmpb
cmc
lcall
out
or
mov
sub
imul
insb
cld
out
rorb
mov
lock
cmp
mov
cwtl
push
xchg
push
popf
jnp
mov
lods
mov
jno
dec
icebp
insb
lods
popa
cmp
mov
cmp
ficomps
fsubrs
lret
dec
popf
insl
pop
mov
cmp
out
mov
shll
cmc
out
mov
mov
aad
sti
add
dec
mov
sbb
int3
inc
js
jno
lcall
jg
sub
jecxz
or
leave
roll
push
pop
hlt
enter
mov
icebp
and
push
hlt
sub
xchg
xchg
sub
mov
lahf
rcl
push
pushf
ds
jne
cmpsb
adc
jp
mov
in
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
out
add
ja
fwait
imul
daa
dec
insb
add
arpl
or
outsl
popa
idivb
push
mov
loop
in
sbb
xchg
outsb
mov
fcmovbe
push
rclb
outsl
scas
pop
out
sti
ja
popf
mov
pop
in
sbb
mov
xchg
aad
test
nop
push
dec
jle
mov
ss
xor
pop
lahf
dec
cmp
mov
or
es
mov
jns
add
xchg
int
rcrl
aas
xor
push
aas
pusha
fcmovnb
mov
and
daa
add
or
pop
or
cmc
push
fs
mov
clc
incl
movsl
pop
out
push
xor
mov
ret
jle
test
test
xchg
mov
in
notb
int3
or
lds
aas
xor
jnp
test
mov
jp
mov
xchg
leave
loop
xor
inc
mov
jl
lretw
sub
inc
bound
mov
popl
loope
in
sbb
jnp
push
mov
push
inc
test
aas
in
ss
push
loope
ds
repnz
incb
arpl
insb
aad
and
lcall
fisubrl
repz
pop
jge
arpl
andl
imul
mov
add
enter
and
xlat
xorb
sub
adcl
pop
jo
mov
sarl
mov
nop
testb
sbb
pusha
sub
es
mov
or
and
cli
lds
inc
ljmp
icebp
xchg
mov
daa
jne,pt
shl
push
xor
cld
sbb
mov
ret
inc
daa
popf
daa
dec
mov
in
push
imul
jae
add
insl
xchg
popf
ljmp
push
mov
inc
jl
pop
aad
sti
fistpl
add
shlb
sbb
andl
or
ljmp
cmpsl
cmpsl
sbb
cli
mov
xchg
mov
pop
addr16
inc
pop
repz
sbb
or
xchg
xor
mov
add
inc
push
cli
inc
mov
out
les
xor
aas
jmp
out
jb
jmp
xchg
mov
xor
dec
add
scas
ret
sbb
add
pop
xor
inc
call
insl
xchg
popf
push
lds
or
xchg
and
cmp
out
xchg
mov
lahf
and
out
aaa
inc
repnz
leave
and
popf
loopne
cmpsl
jb
mov
cmpsb
loopne
rcrb
test
and
add
inc
jnp
sub
xor
and
loop
test
pop
and
lds
cmpsl
sbb
cmp
cld
sbb
inc
popf
push
stos
or
xor
xchg
es
ret
loop
pop
in
cltd
pop
jo
pushf
imul
cmc
sbb
push
mov
ret
xchg
sbb
xor
or
sub
xor
out
lcall
les
mov
sbb
mov
int3
test
adc
xchg
shr
lods
ret
xlat
mov
xchg
or
sub
jb
sbb
mov
ljmp
shlb
jp
pop
sub
adc
outsb
adc
or
fimuls
mov
mov
sub
ss
test
sbbl
insb
xor
or
and
test
ss
cs
dec
sbb
sub
in
mov
mov
loop
push
adcb
clc
add
mov
lods
mov
xor
xor
lcall
xor
fildl
xor
mov
outsb
inc
mov
jae
outsb
cwtl
das
int3
and
dec
jns
rcl
mov
aas
push
aas
es
sbb
in
cli
cmc
addr16
mov
aas
jno
into
aaa
dec
clc
and
sbb
inc
jb
push
mov
inc
test
out
pop
or
stc
add
xchg
push
xchg
sbb
cmp
mov
sahf
jg
push
sub
clc
scas
sub
add
shrl
cmp
test
ja
xlat
mov
push
mov
xchg
jl
add
sti
xchg
int
das
lcall
ljmp
add
or
ret
cwtl
pop
mov
or
lds
movsl
ljmp
cmovge
insl
in
pushf
iret
adc
mov
pop
rol
iret
enter
xchg
imul
negl
fdivrl
shrl
rorl
pop
pop
mov
mov
out
jmp
xor
mov
adc
fiaddl
cmp
push
popf
cmp
pop
subl
lds
xor
sar
xchg
int3
dec
in
mov
and
hlt
aad
jecxz
adc
push
cmp
outsl
add
push
jl
sbb
outsl
cltd
fcoml
aaa
sti
jp
loope
lcall
jecxz
cmp
test
add
fnsave
cmc
sahf
loopne
nop
inc
scas
jns
cmpsb
pop
arpl
add
jo
adc
loopne
stos
xchg
push
or
pop
hlt
in
mov
dec
xlat
rep
mov
mov
dec
and
mov
push
mov
subl
add
fldt
jno
mov
xchg
jne
inc
add
not
pop
mov
jnp
ret
lock
mov
pop
jmp
jne
cld
das
scas
sbb
stc
cmp
cmp
xor
mov
mov
dec
mov
aam
lods
mov
mov
xchg
shrb
loope
out
ret
xchg
test
out
jb
idivb
bound
cld
stos
aad
push
push
insl
push
in
push
daa
add
xchg
je
xchg
jb
dec
in
pop
stos
insl
jne
sub
mov
inc
xchg
loope
mov
or
adc
std
lcall
xchg
lret
xchg
in
dec
jg,pt
xchg
pop
shlb
in
popa
dec
fimull
fmul
dec
shll
and
aad
lret
cmpsb
vmovntps
pop
mov
outsl
dec
or
mov
jns
ret
jmp
mov
or
out
sbb
lahf
lods
lds
mov
or
inc
sahf
test
jo
jno
test
stos
ja
push
std
movsb
cltd
jbe
stos
cltd
stos
incl
aas
xor
stc
jo
push
nop
inc
fsts
cmp
insb
roll
mov
or
les
shr
push
and
out
xor
ja
or
inc
stc
xor
arpl
mov
inc
jp
or
sub
inc
gs
push
ret
adc
dec
mov
add
lret
or
test
xlat
into
xor
cltd
jo
push
mov
and
aaa
sub
sub
push
inc
inc
jae
mov
jb
push
insl
push
xchg
mov
add
jbe
incl
popa
mov
mov
shrb
test
scas
dec
mov
mov
jecxz
mov
icebp
cmp
mov
stos
test
sbb
ret
sub
inc
sti
stos
sub
mov
icebp
lahf
jo
mov
push
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
test
push
xchg
orl
jp
inc
push
fstps
and
pop
clc
add
lods
cmpsb
cli
push
jp
lods
fisubrs
adc
test
sub
push
lods
imul
ret
jnp
addb
xchg
or
movsb
adc
cmp
hlt
push
mov
repz
inc
xor
int
xorb
fdivrp
notl
mov
xchg
cld
div
sar
loop
adcb
out
push
mov
sub
add
pop
fcmovnb
mov
mov
pop
fadds
in
and
repnz
lret
mov
dec
cwtl
in
mov
xor
cmp
pop
stos
cmp
pop
jmp
ficompl
or
inc
push
jl
add
sbb
mov
std
jne
sarb
xchg
repnz
push
out
push
xor
cmp
call
ljmp
daa
mov
mov
fwait
addr16
and
enter
or
mov
pop
cmc
rorb
inc
jg
push
sbb
sub
loope
sub
xchg
jno
xor
rorb
std
sti
adc
jl
lods
jge
pop
jg
push
mov
js
outsl
push
and
ljmp
push
dec
xchg
es
out
and
mov
es
scas
mov
mov
aam
cld
sbb
sub
mov
idiv
jge
lods
lock
inc
in
int
outsl
push
mov
sub
fdivrl
int3
or
pop
inc
testl
lock
xlat
fcompl
sub
leave
int
lock
out
icebp
inc
int
cmp
cwtl
xchg
sbbb
cmpsb
jge
or
rol
jb
fcomps
pop
cmpsl
or
mov
incl
xchg
not
and
sub
scas
add
iret
faddl
and
jp
or
or
bound
outsl
xchg
pop
xchg
inc
jo
aad
push
insb
jnp
sbb
dec
xchg
or
xor
sbb
cmc
test
and
sbb
xchg
jae
test
jo
jno
lret
jl
push
in
ljmp
scas
and
mov
sub
xchg
roll
dec
mov
int3
push
adc
pop
out
pop
add
xchg
mov
jge,pn
pushl
notl
push
insl
adc
jne
inc
les
inc
je
xchg
icebp
test
insb
push
cmp
imul
pop
movlps
push
or
xchg
pop
cltd
mov
fiadds
pop
mov
jp
push
jnp
xchg
sbb
test
mov
xchg
cmp
mov
mov
pop
out
pusha
sub
inc
ret
daa
sti
imul
out
out
adc
repz
rorl
jb
js
loopne
pmullw
pop
lods
out
mull
mov
dec
and
push
ret
icebp
add
loop
lret
mov
das
rcrl
add
cmp
jle
mov
ret
xchg
jp
fiadds
rorb
add
sub
fnstenv
cmpsb
aad
fsubrl
jno
test
adc
loope
lahf
or
cmp
pop
pop
out
addb
cmp
jle
aam
testb
inc
pop
test
sub
jl
insb
mov
rcrb
or
ficompl
loope
cwtl
mov
out
mov
push
les
mov
push
pop
push
mov
dec
jns
pop
pop
cmp
xor
lods
push
cld
add
cwtl
shll
pop
mov
pop
xchg
cmpsb
xchg
push
dec
jae
pushf
mov
pop
popa
jmp
inc
inc
in
sub
sub
icebp
pop
bswap
mov
fmuls
push
fimull
add
mov
shll
pop
fisubs
add
hlt
dec
dec
scas
cmp
repz
adc
dec
xorl
push
adc
and
mov
jbe
dec
aas
dec
push
sbb
sub
lea
mov
mov
mov
xor
and
clc
mov
dec
xor
out
mov
jb
insb
mov
es
ljmp
push
aam
in
jge
lcall
mov
push
ds
add
daa
ds
mov
int
pop
push
jns
inc
repz
push
mov
test
mov
pop
fisubs
or
lret
dec
mov
scas
js
je
cld
pop
cmc
dec
inc
or
mov
mov
js
enter
adc
repnz
inc
mov
dec
mov
fcomps
sti
clc
fldenv
icebp
insb
or
ret
popf
cli
lods
or
and
in
in
xor
push
mov
adc
fidivrl
bound
pop
in
sbb
adc
mov
loope
jbe
xchg
xchg
es
jg
test
dec
fstl
xor
movsb
adc
push
repz
dec
xor
dec
inc
ja
iret
push
imul
jl
cmpsl
roll
and
cmp
outsb
arpl
sbb
mov
dec
cmp
outsl
ja
in
frstor
cli
fcmove
mov
pop
in
dec
out
repnz
fcomip
aam
cld
enter
pop
and
add
stc
mov
int
outsl
pop
into
adc
push
dec
jbe
jl
or
mov
ljmp
js
mov
or
das
inc
int
dec
arpl
jle
push
jo
les
adc
dec
dec
dec
shl
fstl
nop
ds
sbb
jge
xchg
cmp
dec
out
pushf
lfs
mov
popa
mov
icebp
push
addr16
cli
mov
aam
imul
call
es
fsubrl
cltd
jmp
icebp
dec
into
iret
imul
pop
mov
rol
or
inc
fwait
cmp
xchg
cs
adcl
stc
xor
mov
das
nop
daa
cmp
das
dec
push
pop
notl
mov
ljmp
xor
mov
jmp
sub
jmp
outsl
jle
rcr
imul
mov
or
mov
sti
pop
mov
decb
in
adc
ret
cmp
dec
add
inc
test
inc
rcll
and
lock
push
fdivl
pop
dec
xor
test
xchg
pusha
mov
push
xor
pop
pushf
or
into
pop
mov
push
jg
mov
pop
adc
lods
sbb
shll
lret
popa
lods
mov
lcall
shlb
pushf
xor
xor
leave
inc
add
pop
jl
mov
cmc
enter
ss
out
xor
loope
mov
jo
fisttps
sub
insl
dec
jne
aaa
in
sub
mov
movsb
cmp
enter
and
scas
sti
js
sti
cltd
fisubrs
jmp
sub
in
stc
test
insb
mov
and
push
push
ljmp
cld
aam
dec
in
mov
mov
jmp
aam
inc
test
addr16
add
cmp
outsl
ja
sbb
out
fnstenv
or
cmp
lret
push
hlt
adc
faddl
out
cltd
inc
jmp
mov
add
hlt
inc
cmp
xorl
into
aaa
add
fidivs
cld
loopne
imul
inc
sbb
sbb
aam
push
mov
and
adc
shld
popa
pop
xor
in
jnp
mov
adc
xchg
or
ret
subb
push
lcall
movsb
cmp
iret
xchg
sub
xor
jne
pop
inc
mov
test
and
sbb
leave
incb
jmp
cmp
lea
adc
cltd
jns
es
sahf
push
out
xchg
adc
and
add
loop
mov
adc
jbe
cli
jl
loopne
pusha
aaa
outsl
cmp
into
push
sub
or
mov
push
pop
cmp
sbb
xchg
minps
leave
xorb
push
mov
cmp
outsl
lret
xor
daa
xor
mov
pop
cmp
mulb
popa
insb
scas
mov
mov
lahf
filds
adc
repnz
mov
lods
inc
mov
in
cld
test
mov
cwtl
pop
mov
sub
mov
jae
pop
out
test
outsl
pop
dec
cmpsb
pop
fwait
in
xor
pop
imul
xchg
popa
mov
adc
lock
pop
in
mov
dec
and
inc
fisubrs
add
scas
clc
cmc
fcomp
dec
popf
and
test
cmp
sti
jns
mov
popf
mov
pop
sub
pop
adc
leave
xchg
inc
outsb
ljmp
adc
or
mov
xchg
fisubs
mov
sbb
mov
pop
push
fmuls
jmp
mov
jge
or
ss
movsl
mov
dec
adc
jecxz
add
add
rsm
add
xor
mov
out
fwait
lcall
ffree
subl
js
pop
dec
inc
ret
or
inc
sub
fdiv
stos
fidivrs
xchg
out
push
inc
lods
add
cs
paddusb
mov
loop
xchg
fsts
mov
in
ja
push
push
sar
mov
gs
xor
mov
pop
sbb
xchg
cmp
lods
cmp
or
pushf
mov
xor
sub
push
sbb
leave
sub
mov
stos
addr16
call
pop
jb
jge
mov
scas
and
pop
out
push
out
mov
decb
or
outsl
adc
leave
dec
repz
jno
and
lret
fs
jb
and
jge
roll
aad
pop
sub
push
ret
dec
xchg
xchg
mov
and
adc
insl
dec
out
imull
jle
xor
cli
mov
lahf
mulb
pop
pop
add
push
cli
dec
adc
rcll
mov
insl
enter
inc
insl
std
xchg
pop
dec
hlt
call
jle
mov
sub
insl
arpl
mov
sbbl
xchg
mov
sub
push
in
add
popf
mov
scas
inc
jo
adc
xchg
dec
loop
aam
dec
loope
imul
cmp
ja
jle
xor
sub
scas
fbld
xchg
mov
cmp
jae
sbb
cmpsb
inc
pop
fcoml
push
aam
bound
mov
fisttpll
xchg
loop
in
add
jge
push
jb
addl
fwait
add
jbe
push
push
xchg
pop
sub
or
ret
into
push
jnp
pop
pushl
mov
movsb
mov
pop
scas
lcall
inc
daa
cmpsb
push
stos
cmp
push
insl
fnstenv
out
mov
mov
push
jmp
std
sbb
dec
loope
or
mov
int3
adcl
imul
jp
and
or
mov
xchg
lret
dec
adc
xchg
ds
mov
add
add
xchg
inc
lcall
sbb
clc
mov
pop
test
lret
fcmovbe
cmpsb
jg
repnz
xor
mov
sbb
mov
ss
out
jl
lods
add
pop
pushf
shrl
push
push
fldl2t
jns
es
shl
xchg
xor
out
cmc
xchg
mov
mov
repz
das
arpl
mov
xor
fisubrl
adc
aam
movsl
mov
cli
daa
fadds
sub
je
int3
cmp
stos
mov
dec
or
xchg
repz
clc
sbb
xor
mov
cmpsl
je
rcrl
jns
stc
adc
clc
or
jns
mov
subb
loop
lahf
sub
push
in
mov
iret
ds
pop
scas
jb
mov
sbb
shll
stc
pushf
ljmp
test
imul
xchg
les
sbb
cmpl
es
addl
cmpsl
or
int
jle
call
nop
les
jge
adcl
into
and
push
cs
sbb
mov
cmpl
fcoms
ljmp
xlat
sbb
push
dec
std
nop
adc
in
jmp
xor
cmpsl
and
gs
call
dec
mov
add
cmp
enter
lock
pop
mov
adc
into
je
aaa
push
and
push
cwtl
jp
cmp
shlb
xchg
sub
jae
and
push
sbb
jae
mov
and
les
jg
mov
inc
test
lea
mov
pop
pop
sub
pop
mov
rorb
enter
xor
jmp
pop
adc
jnp
out
inc
mull
xchg
shlb
aam
push
xchg
dec
push
jno
mov
jmp
xlat
adc
inc
adc
mov
xchg
mov
push
jge
xchg
push
pop
adc
lahf
pop
inc
scas
xchg
push
mov
int3
mov
xchg
adc
mov
mov
hlt
fnsave
das
dec
int3
mov
shl
jnp
dec
xor
sub
pushf
mov
add
arpl
sbb
or
push
jne
jae
fmulp
jb
in
cpuid
out
push
xchg
xchg
or
adc
and
adc
sub
aad
sub
out
cs
mul
sub
adc
pop
in
lea
or
xchg
add
jne
pop
in
jnp
mov
lods
dec
ret
mov
sbb
pop
jg
fnstsw
xor
push
mov
sbb
mov
and
jo
in
push
fidivs
xor
mov
or
insb
push
ret
test
cmp
cmp
mov
adc
sbb
jnp
mov
outsb
dec
lods
dec
in
jbe
lret
lds
adc
push
aaa
out
in
add
inc
ffreep
inc
popf
out
jmp
pushf
shll
jl
jb
loop
test
es
push
push
lods
pop
std
mov
std
iret
shl
jl
jl
xchg
inc
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
jbe
lock
ja
dec
sub
push
dec
adc
cld
cmpsb
ss
fnstenv
fdiv
xchg
fsubs
jnp
adc
xchg
movaps
and
cmp
stc
jl
dec
lea
sub
outsl
pop
push
icebp
or
sbb
add
xchg
outsb
push
and
cmp
fmul
add
add
das
orl
and
and
pop
sub
mov
mov
inc
out
jnp
mov
mov
lcall
aam
sbb
mov
aaa
push
cmpsb
sub
stos
mov
int3
test
sub
ljmp
sbb
out
daa
add
aad
fadd
xchg
aam
xchg
lock
js
into
jecxz
orb
xchg
jg
sbb
jg
pop
daa
cmpb
and
mov
imul
mov
sahf
mov
repnz
add
aaa
jbe
stc
or
dec
or
repz
das
adc
ljmp
xchg
and
pop
call
jmp
adc
dec
sub
and
adc
pop
xor
dec
shlb
aas
aas
and
hlt
ljmp
sbb
aam
adc
jne
or
xlat
sub
xchg
push
rclb
fidivs
test
int3
push
sbb
sbb
pop
hlt
mov
in
mov
dec
cld
pushf
mov
inc
out
scas
xor
mov
test
ljmp
fcmovb
js
femms
or
fisttpll
lods
dec
sbb
fidivs
xchg
out
ljmp
icebp
mov
jmp
lock
jno
ljmp
ljmp
mov
testb
sbb
adc
jp
mov
and
movsb
jle
lcall
adc
mov
xor
fcomps
je
aaa
in
stos
adc
xor
dec
ret
loope
dec
stos
insb
push
push
jmp
and
dec
mov
movsl
and
nop
clc
cmp
and
lret
mov
mov
push
int3
lods
or
xchg
jnp
mov
and
xor
push
or
inc
out
pop
add
cmp
in
adc
repz
ret
lods
cwtl
sub
push
xchg
sub
or
inc
xchg
fs
jl
shll
sbb
add
ret
addl
mov
mov
mov
out
mov
outsb
ljmp
lcall
mov
xor
sbb
dec
aaa
cmp
pop
sbb
test
pop
lock
gs
mov
adc
xchg
iretw
inc
pop
loop
xor
in
xchg
mov
xlat
and
jne
and
push
cmp
in
or
cltd
cmp
mov
daa
adc
inc
mov
mov
fidivs
fisubs
sub
pop
push
insl
hlt
mov
insb
mov
inc
test
out
push
in
loop
outsb
test
jb
adc
int3
or
lds
iret
stos
sub
lret
les
adc
mov
pop
jb
cli
sub
xor
push
int3
mov
jmp
jbe
jbe
loopne
outsb
jmp
fdivs
mov
scas
adc
push
stc
jne
mov
and
loopne
repnz
pop
cmpsl
add
pop
std
adc
inc
sbb
or
hlt
aas
inc
add
movsb
xor
or
mov
ret
mov
loop
les
aam
sub
dec
inc
pop
jno
adc
adc
dec
cmpsl
stos
mov
xchg
xor
jnp
cmp
pusha
fdivrl
cmc
sub
dec
push
push
out
loopne
bound
stc
or
and
pushf
in
int3
ret
sbb
fdivp
mov
in
sbb
and
ljmp
and
cs
mov
sbb
jle
iret
mov
xlat
pop
push
push
loopne
mov
shl
cld
adc
dec
and
fidivs
loopne
shrl
sbb
sub
lcall
test
jmp
sub
pop
sbb
data16
call
and
cmp
ret
loopne
jle
fcomps
call
xor
xchg
mov
jp
mov
or
add
in
sub
flds
popa
lea
out
pop
adc
xchg
or
adc
and
mov
push
pop
adc
sbb
popf
fdivrl
jne
aas
jl
hlt
call
sub
dec
pusha
in
call
loope
add
ss
in
jae
test
fiadds
xor
clc
and
push
sub
aam
rol
std
pop
mov
ljmp
xor
add
popf
sbb
pushf
sub
inc
mov
sahf
cli
mov
insb
js
mov
rcl
cmp
pop
pop
sub
add
xor
arpl
repz
jl
inc
cmp
outsl
fsubl
add
out
imul
aaa
mov
xorb
mov
lds
inc
stc
inc
test
push
push
movsb
and
mov
jmp
les
roll
testl
and
mov
mov
rorb
and
loopw
cltd
cli
bound
int
loopne
outsb
icebp
pop
mov
insl
or
pop
pushf
int
or
rcrb
mov
arpl
pop
rcrb
inc
add
xlat
xchg
dec
out
xor
xchg
shlb
xchg
daa
jb
xchg
mov
and
push
push
arpl
enter
jle
jp
dec
lcall
jle
test
mov
or
les
test
stos
jecxz
xor
ficomps
sbbb
ss
scas
ja
fisubs
sub
das
cmp
in
clc
and
movsb
mov
lds
xlat
xlat
lahf
data16
int3
fucom
dec
push
cld
insl
push
nop
rcll
or
xchg
xchg
mov
push
inc
push
repnz
rcll
pop
fsubl
aas
jecxz
mov
jns
ljmp
xorl
je
pusha
enter
pop
fsts
in
mov
iret
mov
test
es
mov
push
pop
xor
and
adc
ds
mov
mov
cs
out
insb
pop
xchg
mov
jecxz
sub
or
add
ja
dec
and
xchg
hlt
hlt
dec
sti
push
xchg
test
in
push
xchg
jmp
adc
fisubs
mov
cmp
pop
mov
cmc
sub
lock
mov
or
mov
adc
fildll
clc
xchg
data16
adc
push
cmp
loope
xchg
push
stc
aaa
mov
sbb
in
in
adc
add
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
sahf
mov
ja
les
and
cmp
sbb
out
sbb
ret
and
adcb
cmpl
mov
add
inc
shl
aad
repnz
cmp
xchg
push
in
push
loop
jg
adc
movsl
sub
mov
ja
mov
rcrb
xor
popf
push
out
jo
pop
sub
movsb
dec
in
pop
sti
inc
push
ficomps
inc
std
lret
je
mov
in
cltd
cmp
sbb
outsb
es
addr16
mov
dec
dec
insl
and
ret
js
nop
incb
mov
pop
mov
ss
mov
push
and
cltd
fimull
xor
mov
in
into
or
repz
test
fnstenv
adc
xchg
or
inc
ficoms
mov
xor
out
js
pop
pop
popa
jecxz
fdivrl
mov
arpl
in
fwait
bound
jp
push
imul
loopne
dec
shl
mov
mov
pop
and
stc
cld
add
jb
leave
push
rclb
xor
add
cmp
sub
incb
cmp
je
lock
cmpsl
push
ljmp
enter
pop
scas
adcb
push
mov
mov
push
mov
push
jle
add
mov
mov
hlt
movsl
enter
adc
sti
or
jp
push
call
and
add
sbbl
push
js
lods
add
js
push
and
inc
or
adc
adc
adc
mov
push
cli
dec
lock
or
clc
mov
mov
cli
mov
fisubrs
mov
mov
sbb
shr
mov
push
mov
jb
lahf
leave
sub
inc
push
lret
and
sub
sbbb
add
push
out
add
jmp
dec
xchg
cmp
movaps
incb
adc
scas
jge
imul
push
in
out
cmpsl
je
fwait
lahf
sahf
xchg
stos
add
mov
jbe
jg
adc
pushf
popw
pop
icebp
inc
jnp
insl
out
jl
repz
inc
add
add
mov
stos
mov
or
jne
imul
into
push
sbb
inc
pop
mov
fs
repnz
pusha
pop
dec
hlt
pushf
push
push
pushf
adcb
cmpsl
out
cwtl
lahf
scas
hlt
mov
xlat
ja
mov
mov
sub
lret
mov
ss
js
sub
subb
mov
scas
cmp
lock
mov
pop
add
mov
in
xor
out
lock
adc
mov
lods
xor
int3
push
pop
mov
xor
outsb
push
sbb
mov
cmp
adc
fdivrl
fs
outsl
stc
inc
xchg
inc
push
push
jge
push
out
xchg
popa
xchg
dec
test
out
aas
xlat
xor
cmp
clc
por
xor
dec
sbb
jle
lock
mov
jecxz
pop
lret
mov
mov
lahf
xor
pop
xchg
nop
loopne
push
insl
fmuls
push
inc
dec
pinsrw
sub
arpl
outsl
pop
cmp
xor
add
mov
add
movsb
scas
xchg
sbb
add
dec
cmpl
shrl
aas
lock
ror
sbb
dec
xlat
iret
loop
or
pop
rcrl
mov
lret
rolb
loope
subl
bound
add
xlat
xor
aam
pusha
int
in
sahf
jae
ret
xchg
imul
test
jecxz
xchg
lret
mov
int
mov
dec
cmpsb
mov
add
icebp
pusha
cmp
push
mov
rcrl
lds
insl
pushf
fnsave
and
pop
lock
daa
inc
pop
lods
mov
hlt
pop
xchg
ja
arpl
sbbl
sbb
jg
mov
decl
sbb
sahf
stos
inc
push
stc
push
je
or
jg
jl,pn
enter
ret
clc
lcall
lods
movsb
cwtl
jbe
mov
xchg
cli
add
mov
lods
push
cmpsb
pop
adc
fisubl
jno
leave
xchg
imul
push
jg
mov
adc
movsl
call
pop
mov
cmc
push
loope
loopne
or
in
fcmovu
sub
imul
adc
or
lret
inc
dec
rcrl
pop
jle
sbb
add
setbe
js
mov
xor
pop
call
mov
ret
xchg
and
add
pop
jae
lods
popf
rorl
sub
jp
xchg
mov
ljmp
cmpsl
inc
xchg
pop
repnz
repnz
cltd
lods
sub
or
decb
pusha
pop
jno
pop
xchg
dec
or
addr16
test
fwait
mov
std
mov
ljmp
decl
int3
fwait
pop
jbe
std
and
adc
push
sub
lcallw
push
or
mov
lds
sahf
mov
jecxz
or
sub
cmp
in
scas
or
fisubrs
dec
cmp
aas
pusha
popf
imul
clc
inc
adc
in
xchg
mov
push
addl
repz
imul
in
add
jno
sub
stos
mov
hlt
pop
pop
stc
mov
mov
jl
mov
movsl
jmp
mov
cmp
push
sub
ds
and
sbb
aad
enter
insl
mov
sahf
es
jmp
hlt
in
pop
push
loop
shlb
inc
mov
nop
repnz
data16
mov
mov
neg
pop
cli
add
aaa
add
mov
add
faddl
and
ss
adc
cmp
push
ret
in
std
adc
stc
jecxz
xchg
outsl
enter
inc
popf
pop
sbb
pushf
std
cli
inc
sbb
outsb
lods
iret
nop
lret
icebp
and
jb
mov
mov
cmp
pushf
outsl
fistl
or
adcl
pusha
mov
addr16
je
mov
xchg
xlat
icebp
outsb
add
or
cmpsl
inc
xor
lock
call
addl
pop
loope
pushf
mov
mov
popf
adc
fs
xchg
popa
xor
cmp
cmp
sbb
mov
inc
leave
fwait
or
insl
mov
dec
sub
pop
mov
loope
sub
xchg
sbb
test
lcall
xchg
es
std
cwtl
or
pusha
out
push
inc
gs
insl
add
loopne
sahf
mov
dec
adc
mov
xchg
outsb
sarl
sbb
sbb
call
sti
fnstsw
cltd
add
mov
scas
pop
pop
mov
fucom
mov
push
pop
mov
add
sub
sahf
lods
jno
mov
sub
ljmp
xchg
lret
lea
pushf
mov
lds
pop
mov
add
or
cli
pop
mov
pop
xor
mov
cmpsb
jecxz
cmp
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
data16
push
aas
ja
mov
nop
cmpb
push
fwait
xor
repnz
adc
push
bound
fdiv
inc
fucom
push
cmp
addl
push
int
cmp
inc
pop
cmp
adc
xor
mov
jg
jp
in
xor
fwait
xchg
cltd
add
sub
shll
call
cltd
mull
ja
aad
jmp
lock
lea
push
pop
les
sbb
call
and
push
hlt
and
mov
pop
push
push
orb
adc
dec
xchg
mov
mov
popf
inc
cwtl
xor
xchg
pop
lcall
mov
push
xor
mov
int
xchg
mov
jb
cmp
cmpsl
cmp
cmpsl
scas
push
repnz
imul
dec
dec
mov
sti
sub
cmp
scas
iret
bnd
cwtl
scas
push
bound
gs
repnz
lods
cli
pusha
mov
test
or
mov
push
insl
lahf
push
push
dec
subl
iret
jp
je
scas
add
mov
pop
pop
add
sbb
das
adc
in
push
xor
xchg
mov
ss
inc
insl
mov
dec
cwtl
mov
sub
in
push
out
das
cmpsb
push
jne
dec
jo
mov
or
stc
sahf
jns
xor
mov
cltd
inc
nop
mov
or
stos
flds
shl
ret
subl
ljmp
daa
jns
mov
pop
jmp
xor
xchg
outsb
out
sbb
sbb
out
pop
jbe
adc
daa
mov
orb
sub
lds
ja
test
test
mov
lret
je
cmp
add
fcmovb
add
push
push
js
xor
mov
inc
mov
and
test
dec
fwait
dec
outsl
pop
xor
repz
pop
cmpsb
xlat
dec
inc
in
jmp
adcb
insb
dec
mov
loop
adc
inc
jb
push
push
pop
lret
mov
mov
push
push
dec
or
mov
std
push
mov
and
shll
and
mov
add
sbb
rcll
imul
pop
fldln2
add
cli
dec
dec
cmp
aad
gs
mov
mov
sub
add
jo
pop
push
ljmp
lds
cs
dec
andb
xor
mov
lahf
dec
add
mov
mov
je
pop
adc
xchg
jb
inc
mov
xchg
enter
cmpsb
das
adc
clc
push
lds
into
cs
jbe
rolb
jl
push
mov
push
repz
jnp
mov
add
push
stos
mov
push
or
inc
mov
inc
inc
das
push
cmc
ljmp
lods
mov
in
lds
sahf
or
ljmp
mov
and
imul
loopne
and
mov
dec
cmpsb
push
inc
cmp
fnstcw
arpl
jbe
and
shll
cmpsb
outsl
xchg
xchg
inc
pushf
xor
pusha
aad
popa
subb
out
mov
cmp
xor
cmp
cmpsl
sub
mov
push
jne
je
icebp
scas
scas
cs
popf
arpl
or
mov
sahf
mov
add
push
pop
and
test
in
or
mov
ret
push
popf
pusha
pop
push
pop
sahf
sti
fdivl
movsl
insl
outsl
pop
outsb
jge
xchg
shlb
or
or
inc
lock
enter
sub
fnsave
mov
stos
jmp
movsb
imulb
mov
adc
sub
andl
pop
out
xchg
adc
push
mov
and
leave
add
inc
imulb
ret
cmpl
push
dec
stc
jno
mov
mov
jle
lods
push
mov
pop
lock
mov
dec
pop
add
xchg
xor
xchg
mov
cmpsl
adc
insb
movsl
fwait
ss
mov
outsb
mov
scas
addr16
xor
push
inc
fs
mov
fnsave
add
and
fdivrl
dec
jge
mov
push
insb
rclb
out
les
test
cld
mov
data16
nop
mov
sbb
movsb
int
aaa
ret
jo
popf
in
pop
adc
cmp
mov
popa
stos
mov
adc
dec
or
ljmp
jecxz
pop
fs
cltd
mov
and
dec
mov
inc
mov
jmp
inc
pop
fisubrs
push
mov
xchg
or
jp
arpl
ss
and
fcmove
push
push
clc
jecxz
in
std
jle
push
addr16
inc
sahf
popa
loop
fnstenv
fiadds
movsb
jle
cmp
lods
ds
icebp
sub
or
in
sub
out
sbb
sub
mov
cltd
sub
aas
lret
jle
inc
sahf
xchg
adc
jge
or
cmc
jg
sbb
arpl
les
pop
gs
sbb
pop
in
push
xchg
jb
dec
cmp
cwtl
les
mov
out
decl
sub
imul
inc
lret
ret
sbb
test
mov
loop
sub
and
outsl
in
mov
and
test
fwait
insb
cmp
lea
xor
shll
imul
jg
jno
adc
pusha
add
mov
es
arpl
sub
or
sub
fildl
adc
ret
sbb
jno
lahf
jp
fdivrp
pop
cmc
inc
in
xchg
jl
in
adc
or
xchg
jge
rorb
fld
stos
shll
mov
fs
cmp
scas
add
dec
jp
or
pop
aaa
xchg
add
inc
imul
adc
mov
test
dec
inc
cmp
mov
jae
cmpb
adc
sbb
adc
xchg
jne
fdivp
and
icebp
lret
adc
or
gs
mov
jno
mov
xor
nop
or
pop
pop
or
add
push
popf
sub
popa
imul
ja
adc
imul
mov
nop
shrl
xchg
inc
jmp
jmp
lods
fldcw
outsl
jbe
jl
ret
in
mov
pop
addr16
mov
and
adc
jle
daa
add
pop
add
pop
sub
inc
xor
ficompl
sbb
in
out
add
in
xchg
cli
mov
lret
adc
adc
out
xor
testl
push
xchg
adc
dec
in
mov
mov
lock
jg
jno
inc
repnz
stos
mov
cli
and
rorl
mov
enter
push
and
lds
mov
das
dec
jp
mov
js
jno
cmp
fldcw
cmpl
add
arpl
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
fnstsw
ja
pushf
js
add
pop
arpl
insl
test
gs
pop
nop
in
dec
cmpsb
loopne
nop
jg
in
xchg
fmuls
and
or
mov
subl
lea
mov
sub
jg
loope
dec
adc
addl
mov
movsb
jg
add
sbb
in
aam
pop
mov
ret
adc
data16
push
rcrl
mov
push
into
mov
pop
push
mov
pop
popa
insl
mov
movsb
stos
iret
lret
enter
shl
and
bound
mulb
imul
cwtl
fwait
test
cmpb
repnz
call
xor
js
les
dec
iret
sarb
xor
enter
in
jmp
loop
nop
test
pmaddwd
fisubrs
jecxz
jbe
std
jp
add
mov
mov
daa
fs
addl
fsts
es
test
push
je
cwtl
mov
cwtl
and
js
stc
lret
jo
push
fcmovne
jnp
push
dec
mov
jl
inc
xchg
xor
std
and
in
push
pop
inc
cmpsl
mov
addr16
xchg
rcrl
sub
push
or
adc
aad
bound
cmc
xchg
inc
in
xlat
aad
fstpl
stc
scas
enter
jb
mov
mov
out
xchg
aam
decb
scas
mov
lret
dec
pop
lds
push
xchg
test
push
rclb
pop
mov
insb
sub
pop
pop
inc
xchg
add
cs
inc
jb
jmp
cmp
pop
pop
mov
mov
push
psubsb
lret
movsl
les
lods
scas
dec
mov
movsb
sbb
data16
sahf
jae
pushf
or
mov
js
jno
cmpsl
leave
insb
dec
dec
int
loopne
xchg
aaa
push
push
jae
add
push
mov
mov
inc
sub
rep
or
pushf
fidivl
pushf
mov
movsl
cmp
les
scas
popa
push
push
fisubrl
arpl
ljmp
pop
gs
mov
sub
mov
bound
push
dec
int
fbstp
inc
js
cmp
push
test
in
xchg
jbe
bound
fdivp
or
imul
dec
in
dec
push
cltd
push
jmp
adc
data16
push
lock
es
ret
rcrb
test
into
jo
out
dec
xorl
jbe
int3
mov
fcoml
lea
cmp
xor
mov
je
cld
lods
ja
push
mov
pushf
mov
and
imul
dec
popa
and
scas
into
mov
shr
mov
inc
into
jle
pop
into
enter
sbbb
cli
cmpsb
and
push
mov
shll
pop
fists
cltd
pop
inc
lods
jns
dec
or
xor
add
add
jae
mov
pusha
je
cwtl
shlb
out
cmp
sub
dec
call
pusha
shrb
xchg
sub
jbe
or
inc
lods
sub
jne
pop
cwtl
jns
adc
cmp
movsl
int3
mov
xchg
mov
dec
aam
subb
mov
enter
cmpsb
pop
repnz
ss
inc
mov
add
cs
mov
push
jns
mov
push
dec
and
jle
xchg
xchg
cmpl
xor
jo
jns
cmc
imul
mov
cmpl
mov
movl
xor
dec
jmp
sub
cltd
shr
push
push
aaa
out
out
jl
repnz
js
or
je
adc
push
mov
mov
dec
xchg
addr16
ficompl
push
movsl
jae
jo
add
not
jecxz
and
ss
jno
lcall
fdivrl
adc
fdivl
mov
cmp
jne
stc
adc
stos
pop
jnp
cmpsb
lds
xlat
outsb
adc
addl
adc
test
dec
add
repnz
adc
sbb
xor
dec
mov
std
push
dec
push
jbe
xchg
lock
jb
xor
cmp
pop
inc
aas
inc
stos
sbbb
insl
xor
pop
dec
sbb
dec
int
gs
adc
push
stos
mov
or
xchg
int
aaa
xchg
xchg
sbb
je
xchg
mov
fildl
xstore-rng
cmpsl
rorl
lcall
inc
xchg
jno
rorb
icebp
pop
cmp
jb
shr
das
cmp
jno
ss
xchg
push
mov
andb
jnp
push
mov
iret
xlat
mov
xor
int3
xchg
mov
sub
add
ficoml
xchg
or
das
or
pop
and
sub
xchg
in
addl
xor
add
iret
scas
push
cmc
mov
das
push
mov
cmp
xor
push
mov
imul
cmp
mov
daa
mov
jl
mov
pop
or
inc
xlat
adcl
bound
xor
pop
test
jl
pop
push
je
xrelease
in
pop
pop
mov
adc
and
xor
push
jle
outsl
cmp
push
lods
push
cli
pop
push
mov
mov
bnd
and
push
int
cld
xor
inc
or
hlt
aad
lods
xchg
ficompl
inc
rcr
fstpl
out
lock
mov
leave
enter
push
mov
inc
and
jns
mov
rcrb
cltd
pop
das
dec
jno
lods
xchg
jle
in
add
in
jle
in
pop
or
loope
cmp
test
das
push
loopne
pop
and
push
stos
and
or
inc
and
push
and
sbb
ficoml
jle
inc
push
xor
scas
iret
and
in
mov
and
fwait
inc
jle
xchg
jne
dec
push
pop
pop
cmp
add
mov
xlat
out
pop
imulb
jne
pop
adc
jne
inc
and
cmc
adc
or
fwait
addr16
cmpsl
incb
xchg
xor
ficomps
sbb
aad
out
scas
les
roll
mov
iret
fcompl
rcl
jae
in
push
mov
xchg
xor
push
xchg
cmp
pop
or
dec
mov
fstl
insb
movsb
rorb
add
inc
aam
aam
adc
fstps
sbb
repnz
mov
scas
ret
mov
test
sub
add
je
clc
jge
jle
and
jae
jns
ror
ss
xlat
shlb
js
iret
in
inc
jge
ret
mov
das
in
movsl
repnz
addr16
cmc
fs
sub
inc
stc
movsl
pop
mov
xchg
pop
xchg
add
iret
cltd
shl
out
xchg
sti
sub
hlt
mov
or
sub
leave
jb
in
out
jns
sub
push
fbstp
bound
dec
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
pfcmpeq
cmp
sub
inc
mov
orb
mov
aad
pusha
nop
mov
xor
cmp
popa
mov
filds
lods
cmp
mov
pop
jg
aas
add
fwait
jbe
fwait
test
repz
add
cmp
sbb
lret
jl,pn
push
lret
jmp
pop
pop
gs
push
inc
sbbb
mov
xchg
dec
shlb
jbe
cmp
shr
xchg
push
sbb
cmpsb
lods
mov
mov
mov
lds
out
push
cli
test
das
xor
push
sbb
pop
out
orb
je
xor
pop
mov
mov
jnp
cmp
out
mov
mov
cmc
scas
dec
in
sub
nop
jmp
push
nop
and
adc
imul
jb
dec
cmp
push
pop
fs
lcall
mov
mov
mov
inc
xor
lock
jns
dec
in
out
notl
rcrb
inc
adc
pop
insl
mov
sbb
jge
stc
test
fstp
sbb
mov
cld
and
mov
sub
popa
inc
mov
outsl
inc
lret
xchg
push
jecxz
dec
xchg
push
jge
push
lea
and
mov
jge
dec
lods
fucomip
pop
sahf
and
lahf
pop
movsb
repz
push
or
inc
fadd
inc
cmp
push
ficompl
popf
mov
arpl
mov
negb
outsb
pop
mov
xchg
inc
inc
andl
outsl
xor
xor
daa
clc
addr16
lret
mov
pop
sbb
fistpl
jbe
js
jg
pusha
or
sbb
pop
sub
mov
xlat
inc
sub
aaa
arpl
sub
leave
sub
orl
mov
aam
xchg
add
es
test
test
movsl
add
es
rolb
push
dec
outsb
sub
outsb
sti
jb
push
mov
gs
push
dec
imul
testl
jbe
mov
jno
mov
sbb
imull
in
mov
aas
xchg
or
cmp
insb
push
lea
mov
add
test
and
cmp
dec
cmp
sub
cwtl
fldenv
lahf
push
fcomi
push
pop
test
je
movsl
gs
fcoml
daa
addl
lahf
ja
pop
cpuid
aam
sbbb
push
call
adc
fcompl
dec
outsl
rclb
enter
cld
push
jecxz
mov
mov
xor
stos
pop
pop
clc
out
ror
xchg
int3
mov
imul
insb
popf
popa
test
jge
sub
aad
loopne
push
hlt
outsl
movsl
andl
sub
lea
js
negl
cmp
sbb
jno
cmp
mov
leave
je
xor
fcmove
sub
mov
push
jns
imul
and
cs
and
cmp
cmpsb
cmp
cwtl
es
xchg
mov
cmpsb
sub
testb
or
out
xor
inc
inc
repz
sahf
outsb
dec
es
jae
xor
adc
cmp
pop
push
sub
ljmp
dec
adc
push
jg,pn
sarl
pop
pop
jmp
addr16
ja
xor
das
sbb
mov
add
out
mov
mov
pop
or
call
mov
sbb
out
push
out
dec
push
mov
negl
xlat
mov
sub
and
xchg
test
jns
xor
sarb
in
inc
sbbl
cmpsl
movsl
inc
std
xchg
jl
and
es
aam
mov
cmp
sbb
push
inc
mov
dec
sub
adc
dec
cmp
push
shll
repz
push
dec
insb
push
jg
mov
mov
xor
xchg
add
mov
mov
imul
test
dec
test
xchg
outsl
cli
inc
mov
cmp
repz
adc
mov
ret
mov
popf
mov
call
loope
stc
adc
mov
push
sub
mov
addr16
fsubs
fs
xchg
or
sub
dec
adc
sub
pop
inc
dec
adc
rorl
loope
int
sahf
fidivs
jae
cmp
sti
jo
bound
add
cmp
ret
mov
scas
jp
roll
pop
xor
pop
mov
dec
call
inc
xlat
lods
xlat
cmpsl
test
push
lahf
xor
cs
push
lahf
movsb
inc
inc
and
aad
lock
aas
lods
pushaw
test
mov
loopne
pop
pop
insl
mov
dec
cmp
pusha
test
dec
cld
loopne
cli
subb
in
sar
add
push
sub
pop
dec
js
outsl
and
jp
mov
bound
ja
cltd
cmp
adcb
and
pusha
ljmp
fcoml
mov
cmp
pop
add
push
lret
or
loop
aas
sbb
xlat
and
push
mov
cmc
into
xor
pop
mov
add
enter
pop
mov
ret
rolb
xor
ret
or
movsl
dec
or
test
shl
xor
lock
out
pop
das
imul
negb
fdecstp
enter
cld
mov
test
dec
lea
mov
lds
adc
adc
jnp
push
fwait
sub
pop
movsb
jp
mov
pop
out
push
mov
mov
jno
dec
mov
and
sub
pop
push
popf
jge
stos
jbe
aad
addr16
movsl
xchg
in
enter
mov
sub
mov
lods
stos
test
mov
xor
push
or
loop
cmc
iret
sbb
adc
ret
push
xchg
mov
and
push
lock
mov
outsb
pop
addl
push
mov
jb
fldenv
pop
into
leave
ss
divb
jmp
mov
dec
dec
arpl
fisubrs
ret
xchg
push
mov
cmc
xchg
mov
xchg
sub
mov
push
sub
lods
xlat
jb
ss
push
mov
fdivrp
sarl
push
ja
pop
das
inc
jo
addr16
mov
pop
adc
pusha
inc
jge
insb
sti
sub
or
repnz
inc
jl
icebp
adc
and
aas
inc
clc
nop
lds
insb
jb
shr
cmc
aad
orl
out
js
addl
and
nop
outsl
imul
cmp
loope
push
fwait
mov
shll
cmp
bound
insl
adc
loopne
scas
sti
movsb
cmp
loop
cmp
lock
lret
or
push
loop
and
add
xlat
push
cmp
sub
hlt
ja
cs
dec
std
and
add
sub
mov
mov
add
incb
jo
loope
pop
mov
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
sbb
es
mov
push
jmp
sbb
imull
jge
or
outsl
jecxz
js
pop
sahf
out
js
lds
pop
dec
call
pop
xchg
inc
lods
outsl
pop
dec
add
cmp
je
jg
jns
sub
inc
rolb
out
inc
out
push
fbld
out
add
cmp
xchg
adc
xchg
mov
adc
mov
cmp
test
pop
cmp
mov
daa
rorb
xchg
xor
sbb
insl
pop
mov
dec
add
fcmovbe
xchg
frstor
subl
jne
lahf
cld
sub
mov
ja
gs
mov
cmp
xor
lods
into
les
imul
adc
inc
adc
fcoml
cld
enter
inc
in
inc
loope
ss
cmp
sbb
dec
cmp
xor
adc
push
dec
or
jecxz
mov
and
not
das
cmp
or
or
adc
sbb
pop
pop
mov
ja
cli
cmp
subb
mov
adc
sahf
push
pop
sub
rorl
mov
mov
xor
push
add
inc
out
aam
jne
stc
or
dec
sub
sbb
test
movsl
mov
enter
sahf
add
jle
xchg
decb
das
ds
jg
inc
int3
adc
add
add
jp
mov
and
pop
sbb
add
xchg
out
das
je
dec
dec
aam
add
icebp
jnp
aad
add
test
popf
lret
cld
mov
and
rorl
enter
sti
movsl
mov
jae
sub
rclb
int
push
cmpsl
sub
ret
mov
nop
test
push
fsubrs
rorl
jmp
pop
ss
out
xchg
lret
aaa
fiadds
lret
mov
pop
inc
jg
mov
mov
push
or
xor
sbb
pop
pop
sbb
call
jb
dec
add
arpl
fucomip
mov
nop
test
and
test
mov
add
testl
fcoms
jge
mov
pop
mov
push
bound
fistps
aam
lea
repz
pusha
add
inc
jmp
ret
pop
fdivr
push
xchg
cmp
dec
dec
mov
push
outsb
dec
test
jg
jg
jecxz
test
mov
mov
mov
inc
mov
dec
push
aad
cld
cld
testl
cmpsb
jmp
xchg
pusha
pushf
xchg
out
push
inc
and
xchg
mov
aaa
and
dec
call
dec
dec
les
inc
aad
pop
xchg
mov
cs
jnp
dec
mov
fsubs
xchg
and
jmp
and
movsb
dec
push
call
outsb
clc
cmp
mov
cmp
xchg
pop
pop
sbb
add
in
sbb
in
js
mov
mov
mov
and
loop
sub
sbb
xchg
mov
pop
and
pop
jg
stc
push
stos
jle
pop
mov
mov
test
and
test
inc
cmp
je
xchg
aaa
sahf
jnp
popf
mov
mov
add
jns
jmp
mov
mov
pop
sub
adc
cmp
dec
lods
sub
imul
xor
pop
jno
lcall
mov
sar
outsb
xor
add
inc
adc
jl
or
mov
xor
sarl
jl
dec
stos
add
and
aas
and
mov
push
iret
je
test
xchg
call
imull
xor
inc
sub
xor
xchg
addr16
add
adc
shrl
xchg
jl
sub
fisubs
xchg
insl
divl
adcl
push
iret
cs
lds
dec
aas
mov
or
ret
jae
xchg
sbb
lahf
pop
scas
nop
out
mov
mov
push
ja
test
mov
sbb
fstl
cli
add
int3
or
inc
incb
dec
adc
mov
add
pop
cmp
mov
xchg
adc
stc
push
iret
fsubr
daa
loope
test
decl
push
mov
mov
fdivrl
lea
dec
imul
add
adc
fisttps
int3
sti
xchg
lds
fsubs
mov
in
divl
sbb
ss
mov
xor
push
jo
aad
or
inc
mov
xchg
mov
cmpsb
xchg
cmc
bnd
fdiv
aam
push
jne
jl
adc
push
sbbl
loop
pusha
jl
mov
adc
out
lahf
mov
outsb
mov
xlat
int3
rclb
das
sbb
xchg
ljmp
add
mov
cmp
ret
mov
stc
push
ds
stos
and
and
nop
iret
int3
mov
add
lock
pop
cltd
ret
adc
outsl
add
aad
rclb
es
push
mov
sbb
ds
sub
fildl
pusha
in
mov
sub
in
dec
les
daa
jl
mov
repnz
aam
and
mov
adc
shrl
pushf
ss
adc
mov
jl
ss
mov
push
fxch
push
mov
inc
les
mov
in
push
push
pop
sahf
je
adc
cmp
add
lcall
je
adc
mul
ja
push
aam
ljmp
push
aad
fnstsw
inc
pop
cmp
dec
popf
jnp
int
push
adcl
or
mov
pop
jne
hlt
rcll
ljmp
mov
xchg
pop
xchg
sbb
jp
mov
add
xchg
mov
inc
or
dec
loopne
add
mov
imul
mov
pop
cmp
pop
insl
fdivrl
push
ret
data16
enter
cld
stos
xor
arpl
mov
pop
imul
sbb
inc
xor
xchg
int3
jle
stos
hlt
mov
or
fmul
dec
push
jo
cmp
pushf
jne
or
outsl
scas
aas
out
add
mov
sbb
imulb
cmp
rcrb
jp
push
inc
sbb
ficomps
adc
mov
lret
es
or
push
gs
cmp
mov
into
and
lahf
dec
and
cmpsb
cmc
addr16
add
mov
jo
test
icebp
sub
adc
add
dec
lret
sub
add
jae
or
loope
add
icebp
andl
jb
inc
or
or
push
notb
mov
dec
sub
popf
or
stos
dec
fbld
inc
mov
mov
ja
adc
das
daa
xor
jmp
add
or
inc
shlb
inc
sbb
dec
movsl
pop
push
mov
leave
sbb
iret
xchg
push
aad
icebp
inc
cld
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
in
xchg
pop
add
ja
or
les
xchg
out
mov
out
add
sub
cli
push
data16
mov
mov
add
mov
cmpsl
cmpb
and
sub
or
loop
inc
insb
mov
bound
mov
test
les
xor
mov
fcomps
inc
pop
icebp
or
adc
movsb
sti
das
in
es
cmp
fistpl
jae
dec
dec
push
mov
es
xor
push
and
fs
jne
jle
fwait
pushf
jo
sti
mov
sub
call
scas
lahf
xor
lock
lret
fisttpl
scas
add
mov
das
rcrl
mov
test
sbb
fisubrs
jae
add
xchg
cs
jbe
mov
fcompl
or
mov
adc
rcr
addb
add
icebp
pop
cli
sub
aaa
xor
jae
std
or
pushf
pop
psrad
popf
adc
push
xchg
and
and
es
add
sarl
cmp
lcall
movsl
cmp
inc
es
inc
ja
imul
mov
xchg
les
jbe
insb
loopne
push
movsl
dec
sti
faddl
cli
mov
xor
je
ret
adc
outsb
xchg
xchg
rcr
inc
add
push
aaa
or
sub
negb
iret
outsl
fxch
sbb
pop
lods
add
sbb
movsb
fsubrs
pop
or
sti
add
pop
repz
daa
sti
fstps
fwait
scas
push
inc
xchg
or
movsb
inc
bound
xchg
subl
or
jbe
into
gs
push
adc
js
les
inc
test
sub
mov
lahf
dec
push
mov
out
jno
mov
inc
xchg
ss
mov
inc
jle
mov
xor
mov
sub
loop
mov
iret
lret
sub
fnstenv
es
inc
cmpsl
mov
pop
jbe
sbbl
scas
sti
adc
adc
push
add
int
mov
adc
sbbb
sub
pop
mov
fsubrl
mov
shrl
and
les
mov
add
xchg
adc
and
sbb
or
add
mov
rclb
les
push
add
mov
in
mov
rcrl
sbb
xchg
xchg
push
sub
xchg
jnp
ret
je
mov
and
mov
inc
adc
mov
cmp
or
aaa
pop
xlat
pusha
adc
jle
and
xor
scas
nop
mov
jo
ficompl
pop
mov
popf
cmpsl
mov
dec
popf
or
shl
cltd
jns
jbe
add
testb
fistpll
push
cwtl
mov
pop
pop
or
aad
push
adc
xor
cmpsb
stos
pushf
xor
sub
popf
sub
inc
mov
pop
xor
cmc
movsb
and
jo
in
pusha
adc
in
int3
stos
clc
xchg
jns
ljmp
xor
or
cmpb
insl
testb
jae,pn
ret
dec
push
xchg
fwait
clc
xchg
xor
or
mov
negb
xlat
test
inc
and
in
aaa
xchg
sahf
jecxz
cs
mov
aad
mov
and
sub
andl
sub
das
mov
test
sub
fidivrs
push
sbb
push
je
xlat
insl
popa
into
movsl
inc
js
jl
cmp
inc
cmpl
xchg
hlt
push
pop
in
repnz
ljmp
imul
jecxz
imul
xor
hlt
mov
xlat
fisubrl
in
pop
and
xor
lcall
cltd
mov
rorb
inc
add
aaa
stos
in
inc
pop
leave
jae
shl
xchg
in
mov
mov
cmp
insl
mov
int3
leave
repnz
mov
in
sub
pusha
cmp
std
cmp
js
mov
and
sbb
loop
xor
sbb
xor
mov
lcall
push
push
in
lret
add
std
mov
or
sub
adc
jbe
ficompl
shll
mov
inc
and
inc
lea
addb
pop
sbb
push
inc
and
repnz
mov
scas
or
push
mov
hlt
mov
add
xchg
jnp
testl
pop
and
dec
or
lods
sbb
dec
adc
xor
ss
sub
adc
xor
out
out
testb
ja
test
jae
or
sub
in
rcrl
add
dec
adc
mov
xlat
sub
adcl
sbb
mov
add
icebp
je
xor
in
enter
popa
addb
loop
lahf
jmp
icebp
and
clc
mov
add
jle
dec
ficoms
mov
ss
dec
stos
popa
leave
push
test
roll
jno
seta
sub
lret
clc
xor
lahf
adc
cmp
xor
pop
inc
lock
loope
mov
out
mov
jg
push
inc
mov
jns
jmp
hlt
lret
jbe
cmp
xchg
inc
sbb
xchg
pop
mov
or
dec
dec
in
rorb
aam
clc
sub
xchg
cmp
jp
sbb
je
loop
insl
inc
arpl
sahf
in
push
cld
f2xm1
loope
add
push
andb
fnstsw
pop
xchg
popa
imul
aad
movsb
out
pop
inc
clc
xorl
dec
popa
push
or
shll
sahf
addr16
rolb
push
mov
divb
outsl
jae
sub
fimull
mov
cli
orl
test
xchg
cmpsl
or
jbe
inc
pop
xchg
imull
out
add
test
dec
add
push
jle
mov
push
cwtl
cltd
lret
into
scas
orb
sbb
lock
xorb
xor
lods
sub
mov
mov
jecxz
pop
orl
sub
test
pushf
cmp
adc
out
and
loop
pop
call
call
pop
lods
int
cmpsb
adc
lret
and
pop
dec
mov
sub
js
xchg
xor
popl
in
inc
movsb
mov
mov
push
into
shl
mov
and
push
lods
pop
mov
inc
pop
and
incb
cmpsb
aaa
clc
or
mov
cli
xchg
add
mov
mov
xchg
ror
shl
gs
je
mov
and
pop
and
mov
loop,pn
clc
pop
jne
pop
out
scas
call
dec
js
mov
mov
cmpsb
sbb
lods
mov
mov
int
jle
pop
push
push
andb
push
dec
mov
ljmp
sarb
push
mov
insb
jg
stos
xorb
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
daa
scas
mov
push
imul
add
jne
inc
orl
lea
lds
xor
adcb
test
shl
fcoms
sbb
shl
pop
jb
shlb
cmpsl
pusha
and
repz
xor
pop
cmp
mov
leave
rol
cmpsl
ficomps
xchg
cmp
in
lods
mov
decl
std
and
jle
push
aam
xlat
lea
fistps
push
lea
adc
dec
ljmp
or
fs
cmp
lods
sti
ret
fistl
mov
subl
jnp
nop
xor
mov
or
popf
mov
mov
xchg
lods
and
vsqrtpd
jp
cmpsb
movl
xor
addr16
imul
popf
add
jne
push
test
jge
daa
add
mov
loope
lock
jle
jae
or
out
sbb
lea
lods
scas
xchg
ss
imul
and
pop
int
xchg
push
mov
add
mull
movsl
xchg
rclb
inc
mov
inc
fsubl
dec
arpl
mov
sti
cltd
inc
xchg
mov
out
dec
insb
sbb
hlt
gs
sahf
push
xchg
inc
sub
mov
mov
mov
fwait
repnz
push
int
jge
repnz
decl
mov
fistps
and
in
shl
loop
in
inc
stc
cmp
movsw
inc
movsl
loope
mov
lret
lods
shrl
mov
fwait
jb
in
test
nop
inc
sub
pop
mov
or
push
cs
sub
icebp
jns
ss
mov
pop
add
jmp
inc
xor
subl
xchg
addb
or
xchg
dec
pushf
mov
in
mov
insb
shll
jne
adcl
int3
pop
imul
and
test
push
xor
cmc
mov
pop
sbb
xchg
rcrl
and
xor
and
ret
and
test
lods
jg
sub
push
aas
sub
push
fiadds
cwtl
lcall
sbb
or
sub
mov
addb
mov
xchg
lahf
cs
jbe
pop
sub
inc
loop
mov
shlb
repnz
pop
or
test
repnz
iret
sub
lock
push
out
ret
fldenv
fwait
insl
rcrb
mov
adc
inc
pop
imul
jbe
daa
jno
cmc
push
jno
in
sbb
cs
sub
test
test
pop
cli
popa
addl
jo
clc
jl
in
cli
xchg
das
clc
push
ja
add
imull
mov
mov
sub
aam
daa
mov
les
xor
shrl
scas
mov
js
push
rcll
and
popa
ds
adc
jl
int3
insl
rolb
ljmp
xchg
inc
or
imul
imul
inc
inc
sub
add
mov
dec
xor
int
jnp
mov
ljmp
xor
int3
test
inc
or
xor
mov
ljmp
stos
sub
inc
xchg
iret
rcrb
lock
call
jnp
add
shlb
pop
cld
ds
imul
mov
jbe
pop
fdivrp
mov
loop
push
mov
push
in
les
stos
movsl
jbe
dec
sub
fisttps
ljmp
mov
xorl
in
cmp
rol
push
dec
or
dec
orl
movsl
push
fisttpll
jns
cmpsl
pop
daa
stos
xor
dec
scas
jne
or
sbb
inc
repz
ja
pusha
pop
pop
idivb
and
aaa
inc
cmpsl
adc
outsl
inc
mov
lea
lock
jecxz
mov
mov
mov
mov
jne
adc
rclb
cltd
jl
addr16
jb
dec
jae
sarl
rolb
push
shlb
pop
sahf
push
rorb
push
in
in
arpl
pop
mov
lods
ret
jb
cmpl
adc
test
lret
push
fistpll
cld
jp
fwait
mov
and
sbb
add
mov
stos
jb
cmp
sbb
xor
mov
sub
int3
push
movsb
in
adc
pop
lret
daa
imul
push
mov
push
in
insb
imul
xor
xor
ljmp
jg
fnstenv
or
js
and
mov
cli
xchg
or
iret
push
fistpl
mov
mov
cmpsl
cmp
fnstcw
aam
popa
fidivrl
or
mov
aaa
stc
inc
xchg
in
std
cwtl
push
push
jp
pop
ret
push
mov
jb
test
adc
jmp
add
push
call
call
and
data16
or
lcall
xchg
jg
dec
and
xlat
data16
jg
push
adc
push
and
xor
xchg
stos
rolb
lret
adc
cmp
dec
repz
push
push
sub
and
subb
cmp
sub
mov
xor
stos
jne
push
incl
lea
fprem
jae
int3
pop
inc
adc
xchg
dec
mov
cmp
xor
popf
out
inc
shlb
xor
mov
stos
jg
xchg
push
mov
testl
sarb
pop
jg
add
xlat
xchg
mov
inc
or
inc
imul
jmp
out
aaa
jl
lcall
xchg
out
movsl
or
rcll
aad
mov
cli
ss
mov
jns
jmp
adc
push
cmp
test
sbb
adc
pop
shrb
xchg
rclb
push
dec
jle
sbb
mov
add
or
mov
in
insb
jle
lcall
cmc
push
in
dec
xchg
jns
pop
adc
xchg
ljmp
xchg
push
mov
ret
sbb
adc
in
mov
sti
pop
andb
aaa
mov
lret
lret
rorl
jmp
das
aaa
mov
mov
scas
js
lret
gs
xor
int3
pop
addr16
mov
or
cltd
add
call
adc
sub
loop
lahf
jne
dec
cmp
xchg
jno
sahf
adc
psllw
std
clc
rorb
jle
push
mov
mov
movsl
jmp
movsb
dec
jp
sbb
mov
push
jo
ds
in
jbe
sbbb
call
leave
fistps
cvtdq2ps
popa
mov
bound
push
out
dec
mov
push
rclb
jl
hlt
sub
and
sub
fists
outsb
insl
in
fwait
adc
pop
jle
popf
xor
test
decb
push
jne
hlt
add
xchg
sti
mov
and
pusha
mov
clc
mov
lcall
rol
loop
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
popf
mov
inc
push
cli
gs
inc
push
jnp
hlt
repz
cmp
pushf
dec
mov
jns
std
sbb
mov
sarb
or
mov
aaa
dec
jge
inc
inc
in
ljmp
dec
sar
loop
aam
xchg
pop
das
decl
add
leave
mov
bound
leave
rorl
mov
aad
jmp
dec
cmc
insb
cld
lret
cli
loopne
cmpsl
lds
aaa
inc
movsl
or
sbb
sub
outsb
sti
sbb
inc
pop
pop
std
rcrb
dec
lcall
jmp
adc
lea
imul
mov
imul
pop
add
and
jb
pop
jne
dec
lods
out
test
out
popf
and
fldl
sbb
inc
and
leave
call
iret
pop
xchg
adc
push
emms
inc
and
lcall
stc
mov
fwait
ret
jmp
jbe
xor
loopne
mov
add
js
xchg
mov
dec
out
or
ja
outsb
and
xchg
lea
cmp
imul
flds
xlat
loop
lea
out
fisubrs
lret
bswap
adc
call
iret
sti
clc
cltd
pushf
daa
shlb
bound
insl
add
inc
test
pop
mov
movsb
add
xchg
xorl
ret
push
cmp
lea
xor
in
fidivs
ficoml
rorl
push
stos
in
insl
sbb
pop
int3
dec
or
dec
jmp
out
insl
mov
aam
or
sbb
adc
xor
test
sbb
push
call
sbb
jno
and
fimuls
imulb
popa
sarb
push
push
xor
addl
cmpsl
jmp
push
aad
in
pop
sbb
dec
insl
cmpsb
pop
push
pop
pop
out
dec
fadd
xchg
in
mov
xchg
xchg
fwait
dec
mov
sbb
add
push
adc
ror
push
jge
ljmp
aaa
mov
ja
mov
scas
mov
lds
outsb
mov
cmp
push
clc
scas
sub
rolb
sbb
adc
jns
mov
std
xchg
test
sbb
sub
inc
and
ja
rcrl
imul
inc
jmp
sbb
xor
or
movsb
movb
xchg
and
inc
xor
cmp
or
dec
dec
dec
lret
sbb
pushf
add
mov
pop
shrl
rcrb
push
js
loop
out
push
daa
dec
arpl
lea
jp
pop
outsb
mov
cld
cmpsl
mov
cmpsl
je
loope
imul
popa
jecxz
push
adc
fadds
or
popf
pop
das
mov
mov
fisttps
add
jae
mov
mov
mov
or
xchg
fdivrp
jl
cmp
lds
mov
out
mov
sar
test
cmc
mov
dec
ret
ret
fldcw
add
shl
jmp
repz
adcb
xor
xchg
push
mov
mov
std
mov
mov
push
jl
pop
dec
ds
rcrl
xor
stos
dec
jmp
das
pop
dec
test
popa
clc
lods
or
cli
sti
mov
xor
inc
push
ret
mov
mov
add
mov
es
jecxz
loop
mov
pop
xchg
cmp
stc
cmpb
mov
shrl
rorl
std
out
iret
xlat
addr16
and
inc
push
stos
into
mov
adc
mov
es
and
ret
shrd
jbe
xor
mov
mov
cmp
shrl
out
loope
dec
cltd
pop
sbb
pop
or
lcall
push
fsubp
add
addr16
pop
popf
mov
or
pop
lds
mov
cltd
cltd
jnp
cmp
jbe
push
mov
fdivl
inc
inc
arpl
jmp
xor
or
inc
cmp
xor
mov
xor
mov
fstpt
int
mov
fimull
or
lcall
fnstenv
jecxz
mov
aas
xchg
fsubl
adc
loope
inc
pop
aas
push
std
fimuls
lea
rcrb
dec
push
test
gs
mov
mov
sbb
xor
popf
pushf
push
lods
adc
or
or
nop
mov
mov
mov
aas
push
test
lods
orb
out
hlt
xchg
sbb
ror
scas
pop
aad
dec
pop
inc
mul
loopne
int
ret
cmp
inc
or
shrl
pop
jae
xor
xchg
lahf
lods
sub
pop
add
aad
pop
cmp
cmpsb
push
test
inc
inc
jne
and
shlb
loop
aaa
or
lea
in
es
clc
arpl
outsl
mov
dec
in
outsb
jae
and
clc
pushf
mov
jne
xchg
push
dec
inc
aas
sbb
popf
scas
int
mov
inc
ret
pusha
sarl
call
lods
add
mov
mov
pop
nop
dec
sbb
dec
jmp
popf
fdivl
xchg
enter
je
out
xchg
mov
out
mov
inc
pop
loop
and
mov
lds
popa
sets
or
push
std
cmpsb
sbb
cmpsl
jp
daa
insl
jae
mov
add
mov
mov
mov
ret
sbbl
sbb
pop
cwtl
incl
adc
fnstsw
fnsave
mov
jle
push
add
push
pop
ja
scas
cmp
shll
pusha
xor
aaa
mov
cmpsb
or
aaa
sub
imul
sarb
cmp
lahf
lds
and
adc
pop
lods
mov
js
lods
hlt
jg
jns
xchg
in
repnz
add
inc
jae
ret
cwtl
jmp
shrb
imul
leave
hlt
jne
leave
lahf
popf
dec
sub
dec
ficoml
lock
sahf
dec
loope
mov
adc
push
xchg
rclb
cwtl
push
arpl
test
push
shlb
push
popf
cmp
test
sbb
orl
add
fidivrs
dec
and
inc
movsl
in
mov
xor
enter
roll
lock
lahf
int3
mov
xor
sub
and
pop
sub
sbb
cmpb
jmp
gs
out
xchg
xchg
pop
aad
lea
fs
lock
or
xor
inc
lcall
insb
sub
out
add
sbb
mov
inc
addr16
es
aad
xor
lods
jno
jno
pop
xor
sub
sbb
test
xor
cmc
ljmp
out
iret
test
shl
sub
pop
stos
pop
lea
xchg
imul
mov
jmp
ljmp
sub
xchg
xor
test
adc
xchg
jmp
mov
fistps
xor
mov
mov
push
xchg
adc
jno
sbbb
imul
cwtl
aaa
jg
lret
bound
scas
ja
inc
mov
xor
lds
in
xchg
cmp
cmpsb
xor
dec
or
repz
in
ret
push
imul
sub
outsb
xchg
ja
jmp
rcll
sub
or
mov
sbb
push
fsubs
sub
stos
or
cmc
add
push
push
mov
inc
mov
outsb
mov
cs
and
popl
mov
mov
cmc
xchg
push
cmp
xor
in
repz
mov
mov
xchg
imul
dec
jg
jno
out
cli
xor
test
aam
inc
xor
ret
cwtl
cmp
xchg
ds
ret
push
cmp
adc
fisubrl
dec
inc
adc
xor
stos
inc
test
mov
jnp
mov
mov
inc
push
in
mov
dec
cmp
cmp
cmp
sub
loopne
jb
mov
xor
jnp
lahf
out
xchg
push
out
lret
and
push
adc
out
hlt
push
insl
mov
jg
add
aam
neg
push
sub
xor
mov
addr16
xchg
sbb
cmpb
mov
into
dec
cmpsl
jo
jbe
and
mov
lds
insb
clc
repnz
ret
aaa
je
fmul
xchg
lds
xor
push
pop
jl
out
and
out
sub
insb
pusha
xchg
std
arpl
clc
lret
mov
push
imull
repz
into
mov
clc
dec
scas
in
in
xor
neg
in
arpl
jmp
or
add
mov
enter
cmp
jb
push
iret
mov
and
or
dec
icebp
mov
ljmp
aad
repz
out
test
into
jne
jecxz
cmp
fisttpl
imul
out
pop
loop
ljmp
mov
insl
and
rcr
adc
test
in
addr16
push
lahf
lea
jge
cmp
cmp
ret
push
loop
xlat
cli
sahf
bound
popa
mov
addr16
jl
into
imul
cmc
fwait
mov
cmp
subb
or
or
std
cmp
subl
test
adc
inc
clc
mov
push
lods
inc
and
sbb
out
movb
popa
cltd
scas
incl
lret
mov
cld
xor
popf
loop
xchg
jbe
cmpsl
scas
adc
bts
sub
xlat
jecxz
mov
icebp
cld
enter
shrb
sbb
lret
sahf
jp
add
shrb
jne
mov
stos
je
mov
or
sbb
push
inc
insl
outsl
or
push
mov
pop
mov
loope
fstpl
js
add
jg
popf
mov
cli
movsb
or
or
jge
mov
push
enter
rcll
jge
xor
test
inc
clc
lea
int
bound
bound
push
cmp
nop
push
cmpsb
jne
sub
fbld
in
pop
fwait
mov
out
cmp
out
outsb
xor
out
shlb
cs
mov
sub
cld
lahf
xorl
test
cli
lods
pop
jmp
mov
pop
fsubp
xchg
pop
jnp
nop
push
pusha
movsl
fdivrl
xor
test
rolb
sahf
xor
lods
mov
mov
xchg
adcl
test
xchg
insb
fucom
loop
jmp
pushf
mov
bound
aas
js
or
loope
mov
mov
push
jne
shll
ja
dec
jo
filds
mov
cmp
aad
cli
jmp
mov
mov
cmpsl
mull
cld
cltd
push
mov
inc
mov
fsubs
mov
cmpsl
xchg
push
push
cli
mov
push
sti
inc
scas
cltd
mov
lret
dec
mov
or
out
add
iret
daa
jns
icebp
lret
sub
push
push
icebp
mov
ret
or
js
add
lret
cltd
imul
pusha
dec
insb
hlt
lods
sbb
int3
mov
iret
add
mov
mov
call
sbb
jp
mov
in
push
dec
insb
lods
cmp
fld
jg
mov
imul
sahf
mov
cmp
cmp
add
adc
xchg
hlt
sub
adc
xchg
xor
push
test
xor
push
fs
dec
daa
push
pop
cmp
jp
lret
bound
sbb
inc
sbb
sahf
test
mov
nop
sub
dec
push
loopne
dec
cmp
mov
inc
int3
adc
movsb
mov
ror
pop
aam
and
test
xchg
insb
out
sub
sub
or
mov
sahf
and
push
andl
xor
jecxz
pop
dec
mov
mov
mov
gs
xor
dec
or
into
pop
scas
inc
sbb
jle
push
loopne
imul
cltd
add
fistl
adc
fists
dec
or
push
mov
dec
jae
loope
stc
jle
fwait
leave
cmp
hlt
arpl
pop
mov
out
mov
out
in
pushf
sbb
adc
mov
outsb
pusha
add
and
out
jo
mov
cld
in
jo
pop
dec
xchg
mov
xor
jo
aam
cmpb
cmp
shl
cmp
mov
call
outsl
sub
jnp
les
mov
and
sub
fistps
adc
int
xchg
jne
push
aad
outsl
sbb
or
mov
sub
add
mov
inc
lret
jne
sahf
jp
repnz
arpl
xchg
lods
into
arpl
push
pextrw
sbb
xchg
js
ffree
cmpsb
imul
aas
loope
xor
lea
mov
adc
cld
ficoms
add
enter
jno
xchg
or
pop
pop
xchg
enter
cmp
inc
loop
mov
push
scas
mov
pop
in
popa
xor
dec
mov
in
jmp
shl
mov
cmp
and
iret
imul
pop
pop
les
xor
inc
jecxz
jg
out
fcompl
outsl
or
fxtract
cwtl
add
pop
dec
dec
dec
push
sbb
addb
pop
ret
sub
not
sub
dec
inc
sub
notb
push
jg
scas
cmpsl
adc
pushf
push
sub
shlb
fldcw
jle
jle
sub
pushf
add
mov
mov
mov
fldcw
fs
add
in
pop
inc
add
icebp
imul
mov
adc
mov
push
rorl
dec
jne
jns
pushf
mov
aad
jbe
repz
ds
xor
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
int
xchg
mov
sqrtps
bound
daa
in
add
outsb
push
nop
dec
ffree
loop
out
mov
lods
cwtl
ret
mov
inc
push
rcll
push
cmp
test
mov
mov
push
xor
sub
pop
clc
jbe
jg
cmpsb
scas
add
fisubrs
out
mov
add
scas
jno
adc
push
sbb
leave
mov
adc
dec
mov
mov
loopne
mov
sbb
push
scas
inc
arpl
sti
iret
std
fisttpl
mov
aaa
mov
dec
out
and
pop
dec
mov
jl
jmp
jb
add
mov
push
xchg
sti
xchg
ret
and
adc
es
mov
test
xor
dec
xchg
shll
pop
sbb
and
in
sti
jns
sbb
out
push
push
in
push
stos
sub
roll
jb
ja
and
sub
dec
push
lods
shufps
test
fdivrl
mov
dec
ss
fiadds
lret
out
imul
inc
mul
out
jnp
shlb
popf
sub
inc
nop
jns
test
pop
popa
xchg
sub
sarl
inc
orl
fistl
jp
stc
xor
push
shl
or
jbe
and
push
and
das
jge
dec
arpl
jg
and
xor
pop
jb
fcomps
outsl
jmp
xor
mov
fwait
xchg
or
push
jl
stos
cmp
sbb
sub
mov
and
aaa
imul
into
dec
mov
scas
push
out
dec
sti
xchg
xor
ss
sahf
lea
mov
mov
jle
lock
loop
xor
movsl
xchg
push
push
loop
insl
mov
adc
dec
outsl
sbb
fbld
jle
fnstsw
inc
xchg
bndstx
mov
mov
das
push
pop
into
mov
in
xchg
pop
loopne
aas
mov
addr16
arpl
int3
xchg
pop
push
popa
insl
or
insl
cwtl
xor
or
data16
cli
pop
push
repz
js
mov
je
popa
stc
iret
adc
mov
movl
adc
ds
fucomi
dec
mov
clc
fs
stc
sbb
xchg
push
fimuls
push
in
loope
jb
pop
dec
outsl
pop
es
rcrl
adc
mov
scas
lret
scas
add
lods
gs
add
fisubs
jb,pn
mov
fistl
int
aas
ljmp
push
mov
xor
adc
movsb
inc
mov
outsb
jns
xchg
daa
mov
pop
xchg
or
inc
testb
js
cld
and
dec
mov
lds
and
sbb
hlt
pop
ljmp
mov
mov
cmc
leave
fidivs
mov
push
mov
fistpl
push
pop
and
pop
xor
inc
bound
inc
add
pop
loope
loop
sbb
and
cmp
test
sbb
pop
shr
mov
dec
into
jmp
setg
pop
insl
test
leave
mov
push
cmp
mov
adc
lcall
cmp
out
push
int
xor
cmp
jecxz
push
adc
mov
jl
cmp
xchg
or
push
or
push
dec
sbb
insb
inc
mov
xor
loop
pop
les
fistps
int3
loop
lds
adc
pop
fldln2
cmp
bound
bound
inc
mov
mov
add
cld
ja
scas
and
mov
inc
movsl
popf
jle
fiaddl
mov
rolb
push
and
aaa
push
sub
sarb
mov
or
shrl
add
cmp
jno
xor
sti
push
sbb
xchg
pop
repnz
adc
fldcw
bound
xchg
in
mov
xchg
xor
ja
ss
jo
mov
arpl
js
lods
dec
rolb
cmpsb
shrl
cmp
cwtl
push
push
mov
or
ret
xor
stos
push
out
fisubrl
push
push
inc
int3
xchg
stc
lods
fadds
sbb
mov
sbb
js
out
or
push
adc
sbb
andl
in
mov
jb
ret
nop
push
fadds
add
insb
sub
aas
cld
dec
stc
pop
sub
cmp
inc
sub
sarb
or
or
ss
dec
or
pop
les
add
hlt
divl
int
popa
add
repz
mov
push
ret
popf
pop
lock
mov
pop
inc
dec
test
adc
sti
sahf
fdivrs
or
mov
add
push
jae
dec
andb
daa
into
cld
push
test
insb
js
jge
mov
lret
inc
cltd
aad
add
sbb
push
out
inc
adc
dec
fildll
cmp
call
sbb
jbe
imul
cmp
int3
pop
cmp
jne
cmp
pop
jnp
fldl
rcr
and
in
cmpb
bound
ret
popf
movsb
add
pop
add
inc
xchg
cltd
test
sahf
sbb
shll
fldl2t
mov
imul
xchg
jns
fldlg2
mov
orl
insl
movsb
rclb
clc
test
outsb
outsb
add
lea
xchg
push
sbb
inc
pop
int
mov
sbb
cmpsb
mov
dec
mov
dec
fwait
shr
dec
dec
insb
or
xlat
rorb
arpl
push
leave
pop
movsb
dec
negl
test
icebp
pop
or
loope
jnp
les
jns
cli
aaa
push
aas
sub
add
push
movsb
add
pop
inc
je
mov
call
gs
push
ja
sbb
into
mov
ljmp
stc
fnstenv
add
rcr
movsb
pop
mov
lods
test
fildl
mov
push
xchg
push
jbe
fdivl
fisubrl
mov
daa
mov
jp
xor
cmpsl
adc
jbe
dec
and
aam
jle
jnp
add
and
sbb
mov
cmp
cmpsl
sti
push
xor
lods
xor
xor
out
inc
mov
js
and
gs
scas
xchg
inc
or
lcall
mov
xor
ret
cmc
arpl
punpcklbw
pop
mov
iret
push
stos
and
add
outsl
lods
fstps
movsb
stos
stos
sbb
or
pop
mov
ret
addr16
mov
xchg
and
clc
add
pop
adc
es
jb
sbb
lea
inc
xchg
cli
movl
pop
out
ja
pop
stos
adc
xchg
test
js
mov
shll
cmc
push
jle
push
xor
daa
or
gs
lret
out
sub
dec
xchg
dec
mov
mov
xchg
adc
ljmp
jb
insl
push
aad
mov
movsb
int
and
lcall
dec
jmp
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
pop
mov
adc
xchg
jl
mov
imul
inc
fbld
push
pop
test
mov
push
add
lock
inc
cmp
das
xchg
cmpsb
add
mov
neg
mov
lret
cwtl
lock
daa
dec
loopne
sar
test
dec
movsl
cmp
hlt
inc
or
xor
push
test
sub
xchg
cwtl
sti
int
xchg
xor
bound
sbb
popf
pop
in
cwtl
stos
mov
mov
fisubrl
pop
cmp
jge
xor
pushf
adc
jl
ljmp
jp
mov
loopne
cmp
pushl
mov
fadds
ds
mulb
js
or
jb
pop
jae
je
test
aam
pushf
in
outsl
jbe
sbb
lock
or
out
jb
push
inc
push
rcrl
fnsave
fistps
pop
mov
icebp
ficompl
adc
adcl
cmp
imul
jbe
or
lret
ljmp
std
shlb
out
push
xor
mov
fmuls
int3
xor
iret
jno
loop
lret
pop
push
mov
mov
jno
jns
inc
cltd
cmp
out
mov
inc
cmp
test
add
cltd
loop
and
scas
fdivrl
or
jle
mov
xchg
mov
mov
repnz
int
fnstsw
nop
mov
cmp
cmpsb
in
lea
push
mov
xor
in
rclb
insb
popa
ds
repz
jp
cmp
jl
sbbl
shlb
cmp
lret
inc
enter
sub
popl
xor
cltd
fadd
popfw
xchg
lcall
mov
jbe
and
nop
sti
cmpsl
lods
nop
mov
movsl
fs
out
xor
sub
xor
mov
imul
add
out
rcrl
sbb
or
std
arpl
pop
int
or
xlat
and
sub
sti
push
mov
loopne
movsl
movsb
sub
leave
or
xchg
mov
fxch
adc
add
insl
push
cli
mov
mov
aaa
subb
lea
rclb
cltd
call
test
pop
sti
aam
adc
xlat
sbb
lcall
dec
sub
fldcw
dec
je
adc
das
lock
jmp
lcall
or
mov
fs
mov
orb
cmp
cli
sbb
idivl
mov
dec
fstpt
xor
stos
inc
xor
fistpl
lods
lea
jo
dec
stc
lods
jge
aaa
push
fisttpl
mov
pop
jle
mov
cmpsl
lret
ja
sub
jb
push
jl
or
insb
roll
push
das
stc
inc
sahf
into
in
jnp
sub
shr
aam
jge
mov
push
mov
mov
icebp
mov
fsubrl
test
fwait
mov
aaa
outsb
ja
xchg
je
popa
int3
push
cmp
mov
mov
out
std
adc
pop
adc
pop
jno
pop
dec
fldcw
insb
sbb
mov
dec
adc
mov
repz
sub
ljmp
jno
sahf
push
jne
add
mov
xor
mov
aam
inc
and
sbb
xor
sbb
popa
ss
jmp
mov
int
daa
and
jl
push
fs
and
sbb
shl
outsl
das
bound
icebp
jp
dec
xor
xchg
je
jns
mov
cmp
divl
jle
sarb
cwtl
cld
pop
call
inc
xor
add
jmp
mov
inc
push
xorb
lret
jo
pop
mov
rorl
in
xlat
arpl
data16
leave
test
or
clc
and
lea
xchg
movsb
popf
std
nop
pusha
mov
push
out
clc
add
sbb
mov
mov
xor
dec
leave
sbb
mov
mov
inc
test
in
int3
adc
push
mov
test
arpl
adc
sub
data16
movsb
cltd
mov
mov
jp
mov
rorb
icebp
bound
inc
movsb
adc
sbbb
out
mov
arpl
mov
xlat
pop
shrb
mov
dec
adc
xor
pminsw
push
movsl
in
cmpsl
loope
mov
popa
out
ss
jbe
sub
sbbb
pop
xchg
iret
stos
xor
cli
in
add
cmpsl
mov
mov
out
lods
faddp
pop
lret
sub
mov
push
sub
inc
dec
xor
xchg
pushf
inc
int
mov
xchg
lret
sbb
sub
ss
or
cs
mov
loop
test
pop
jl
cmp
pop
xchg
bound
inc
mov
xor
mov
inc
adc
push
nop
mov
push
mov
dec
cmpsb
pop
xor
ja
mov
ret
dec
push
jmp
fsubrp
mov
lock
jecxz
out
mov
sti
pop
rorl
pop
into
cmpl
xchg
cwtl
out
mov
adc
mov
or
movsl
leave
lret
push
fwait
push
test
ljmp
sub
inc
adc
test
aad
and
test
mov
je
mov
ja
sbb
das
mov
xchg
cmp
fwait
sub
sarb
dec
lret
lret
inc
outsb
jno
mov
insl
xor
in
cmp
addb
xchg
push
sahf
jg
cltd
jge
fldcw
dec
dec
sti
sbb
add
xor
cld
lods
add
push
jne
rcl
mov
aaa
add
xchg
xchg
dec
insb
mov
jnp
mov
add
hlt
lret
mov
lods
mov
or
sbb
lods
inc
loopne
fcomi
push
popa
pop
jle
push
pushw
xlat
jo
pop
adc
gs
jmp
sbb
shrb
out
jle
xchg
mov
mov
rcr
mov
aam
lds
or
cwtl
add
inc
or
mov
or
scas
or
addr16
js
or
adc
xchg
movsl
aas
jecxz
pop
mov
or
sbb
lds
insb
movsl
mov
outsb
sbb
mov
popf
xorl
out
sti
cmp
and
ret
mov
popa
xchg
pop
jns
fisubs
insb
dec
test
das
jne
mov
adc
mov
lret
lret
rorl
lods
push
lock
xchg
inc
add
xor
bound
popf
or
mov
push
xchg
call
mov
jmp
scas
sub
pop
sti
outsb
std
jge
out
push
push
mov
ljmp
push
shrb
fwait
int3
adc
inc
fcomip
pop
push
add
leave
jns
mov
cmp
xorl
jle
dec
shlb
call
dec
lret
shrl
pop
inc
mov
movb
sub
in
mull
mov
sbb
adc
out
inc
inc
not
push
sbb
pop
sbb
mulb
jns
dec
jbe
pop
popa
cmp
out
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
rorl
js
lcall
add
inc
mov
and
mov
sbb
test
aaa
inc
xchg
mov
pop
pusha
pop
adc
cmp
sub
fdivl
rclb
fwait
dec
outsl
adc
xchg
sbb
test
jle
jmp
enter
mov
push
cmp
mov
adc
imulb
into
bound
fcompl
fdivrp
popf
fimull
in
gs
xchg
lret
in
mov
mov
ja
rorl
and
jbe
je
out
push
arpl
filds
dec
push
mov
push
lods
repz
jae
aaa
sbb
push
jo
push
call
push
push
mov
pop
insl
dec
iret
jno
movlhps
mov
mov
sbb
pop
daa
fmull
lods
xchg
dec
jno
mov
cmc
inc
cmp
adcl
adc
std
subl
jmp
ret
push
push
sub
push
sub
dec
fistpl
dec
adc
test
adc
sbb
mov
xchg
mov
or
in
in
fistpl
in
add
xchg
cs
pop
pop
mov
jp
in
mov
add
lock
fisubl
scas
inc
std
push
pop
fcmovne
pop
scas
outsb
jmp
add
aam
push
rclb
or
addl
xor
repz
pop
hlt
pop
jle
add
ret
dec
loope
lock
cmpsb
mov
aad
cs
jnp
js
cmp
or
mov
push
xchg
fidivrl
repnz
jo
sub
lret
lds
push
ja
mov
xchg
lcall
inc
push
xchg
lret
cmp
fidivs
mov
ljmp
adc
sti
xchg
bound
lret
cmp
test
ret
sbb
sbb
mov
or
sbb
test
jae
loopne
ror
mov
push
adc
pusha
hlt
cmp
jnp
push
popa
out
insl
sub
fdiv
cltd
push
sub
fsubrl
inc
mov
xor
jne
in
inc
stc
or
or
sub
scas
mov
xchg
or
and
pop
in
mov
mov
outsl
ss
xchg
pusha
jno
insb
mov
sbb
pop
lods
stos
xor
sbb
ds
out
xchg
aaa
push
jle
fcmovnbe
popf
movl
mov
jbe
not
insb
lods
dec
jne
mov
sub
enter
data16
mov
cmp
cmp
lds
mov
add
cmpsl
pushf
in
push
lcall
add
iret
jno
adc
sbb
sbbb
jg
sub
or
stos
or
fsubrp
ret
jl
push
das
ja
lretw
adc
outsl
sub
mov
sbb
adc
mov
popf
in
stos
jmp
xchg
or
loopne
mov
leave
dec
sbb
rol
jbe
xchg
push
adc
cmc
adc
mov
icebp
fwait
pop
pop
push
repz
add
lret
fiadds
idivl
lcall
jb
lds
or
js
stos
insb
std
mov
inc
stos
ljmp
jmp
outsb
lea
xor
outsb
sub
lret
cmp
ja
adc
sbb
pop
fdivrl
jp
jge
pop
sbb
not
movsb
test
cwtl
sbb
pop
push
lock
push
mov
or
xor
inc
imul
ficompl
sarb
jnp
push
pusha
sbb
mov
fwait
adc
ja
lds
insb
pop
mov
dec
jecxz
jmp
sbb
addr16
clc
jbe
pop
push
popa
pop
cli
push
dec
outsl
mov
push
xor
ds
lds
xor
dec
inc
clc
ds
add
loopne
cld
jae
sub
push
jnp
sbb
ds
ljmp
push
insl
roll
fsts
aad
dec
push
sbb
mov
in
push
inc
jge
jecxz
bound
pushf
pop
scas
lahf
and
shlb
popl
fistpll
cs
psubb
jle
sub
dec
push
or
mov
mov
and
cmp
cmp
shlb
adc
mov
jle
fstl
mov
movsl
adc
scas
pop
clc
lret
xor
call
jmp
daa
cld
push
es
mov
leave
and
sub
movsb
in
sub
sub
ret
dec
shlb
stc
push
mov
mov
int3
or
adc
add
inc
xchg
out
movsb
out
shll
jns
addl
fstpt
mov
mov
cmp
jg
xchg
sti
incl
inc
lret
pop
in
and
dec
sbb
jb
sbb
mov
shrl
test
lds
fildl
adc
les
mov
dec
int
push
adcb
jns
scas
mov
ret
rorb
scas
test
inc
and
add
cwtl
call
cmp
int3
movsb
lret
cmp
inc
push
pop
xchg
push
les
push
push
cmpsl
cmp
cmpsb
jle
inc
pop
sbb
pop
loope
xor
mov
sbb
jno
sub
sub
push
cmp
dec
sbb
insl
dec
int
in
repnz
inc
xchg
jge
sub
mov
add
mov
xchg
outsl
mov
lea
jle
xchg
rcll
cmp
sub
lret
pop
push
inc
scas
loop
xchg
sub
inc
mov
fsubrs
les
setne
adc
cwtl
incl
pop
divb
cmp
xchg
adc
cmpsl
pop
xchg
loope
mov
sbb
push
int3
insb
leave
add
dec
icebp
outsb
pop
dec
stos
jne
andl
dec
stos
sub
jo
sti
xor
mov
xchg
lahf
push
pusha
lea
fsubrp
push
or
add
xchg
cmpsb
xchg
add
add
loopne
daa
dec
lock
lods
sbb
test
inc
cld
daa
pop
mov
sbb
mul
inc
adc
hlt
lret
push
or
repz
pop
cmpsb
aad
mov
mov
mov
cmp
sbbb
pop
xchg
cmpsb
mov
icebp
mov
lret
inc
adc
mov
push
lods
mov
xorb
push
fidivl
xchg
bound
pop
in
dec
lock
or
push
inc
or
stc
scas
xchg
loopne
gs
mov
inc
cmpsl
ret
pop
sbb
xor
clc
and
cs
mov
xor
sub
lods
xor
push
shlb
rorb
xchg
cmp
mov
ss
or
aaa
pop
mov
enter
jle
push
js
add
movsb
ret
lret
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
call
mov
ja
loopne
mov
jnp
xorb
sbbb
cmp
enter
movsl
lahf
mov
xor
lret
xor
or
hlt
cwtl
push
cmp
mov
pop
push
inc
add
fs
or
mov
cmp
jb
sahf
leave
shll
lcall
sub
cmpsl
push
mov
xor
sub
push
cmpsl
jne
mov
cmp
xor
shr
ljmp
add
lods
shll
insl
pop
jbe
js
pop
add
mov
adc
movsl
xchg
add
pop
pop
xor
sbb
ror
mov
adc
cld
out
rcrb
mov
repz
leave
sub
mov
inc
and
aaa
push
adc
sbb
push
xchg
push
sbb
into
outsb
jbe
pop
pop
fstp
lods
xchg
enter
outsl
push
cmp
xor
lret
push
sarb
outsl
arpl
ficoms
xor
fdivs
push
cmp
mov
xchg
mov
orb
cltd
hlt
sbb
xor
sbb
jb
lock
jg
rep
inc
or
adc
movq
sbb
jge
test
addl
nop
adc
adc
push
inc
arpl
rol
push
nopl
pop
ss
outsb
push
es
loopne
and
push
jnp
std
jle
cmp
in
push
aad
mov
inc
cmp
ret
fisttpl
sarb
adc
mov
push
sub
addr16
jmp
lods
ljmp
pop
cwtl
mov
xor
icebp
aad
jno
xchg
dec
inc
je
dec
mov
in
mov
fisubrs
ficomps
xor
add
fwait
push
negl
mov
call
out
out
movsl
mov
loope
loope
subl
lahf
mov
add
sbb
lahf
xor
cmp
imul
clc
xchg
ret
lea
daa
xor
data16
ror
inc
push
scas
cmp
push
mov
pop
cltd
das
or
cmp
and
lret
or
fs
dec
test
clc
fs
cmp
jl
push
es
pusha
pop
lcall
sub
or
add
sub
mov
adc
xor
gs
xor
or
js
jne
sub
jne
mov
repnz
mov
hlt
xorl
movsb
sub
mov
lods
fstpl
pop
xchg
add
mov
fisttpll
fstpt
popf
lock
mov
in
mov
push
int3
mov
or
inc
ret
or
insb
adc
jns
data16
sbb
test
mov
pop
pop
dec
test
imul
cmp
sti
push
and
ret
mull
fistpl
test
imul
dec
gs
js
jmp
call
adc
in
or
insb
sub
cltd
inc
adc
sub
or
out
clc
jecxz
push
sub
lods
mov
add
aaa
sub
in
or
jno
and
mov
ljmp
cmp
lahf
test
les
sbb
add
enter
sbbl
jne
sti
dec
inc
jp
stos
inc
mov
sub
popa
mov
lret
fs
jbe
test
loopne
xchg
and
cmpb
xchg
sbb
mov
ds
test
mov
push
clc
fwait
out
pop
xor
mov
shlb
loopne
mov
jb
adc
sbb
imul
push
xchg
cmpl
dec
repnz
jbe
push
inc
ljmp
cli
out
push
in
jns
push
dec
mov
sti
mov
nop
paddb
lret
lea
mov
repnz
pop
call
das
aad
aam
cmpsb
sbb
xchg
addr16
ret
enter
jmp
xor
push
dec
mov
mov
faddp
sub
nop
mov
dec
sarb
add
push
sub
hlt
les
pusha
cwtl
xchg
mov
push
ficoms
pop
js
xor
mov
inc
adc
mov
in
push
sbb
ljmp
imul
cmp
leave
push
cwtl
in
and
imul
imul
or
cmp
iret
add
repnz
frstor
ss
imul
into
pop
mov
mov
mov
jge
sarl
lret
inc
sub
popl
fucomip
cs
gs
or
jge
lret
test
push
cmpsl
shl
xlat
sub
fstps
ja
jmp
cmp
jb
xor
jmp
mov
add
mov
pop
out
inc
add
pop
dec
loop
xchg
fldcw
ficomps
into
fs
enter
outsb
dec
xchg
scas
cmc
xchg
sub
jp
xchg
movsl
sbb
dec
jnp
xorb
nop
dec
inc
loop
mov
inc
mov
test
andb
or
xchg
nop
cmp
add
inc
std
outsl
repnz
xor
in
sub
sub
mov
sbb
and
push
mov
xor
xchg
dec
sub
ljmp
mov
call
jb
leave
jecxz
jne
mov
movsb
adc
mov
lcall
js
mov
test
sbb
inc
lcall
mov
push
jnp
test
inc
into
shrb
out
cmpsl
ficomps
jb
pop
pop
fdivr
pushf
les
fwait
movsl
in
sub
adc
mov
adc
mov
mov
jp
rol
jge
int
rcl
fisubrl
movsb
xchg
les
xor
xchg
adc
outsl
xchg
insb
cmp
pop
mov
jle
pop
push
pop
incb
mov
and
lds
pop
or
adc
ret
jp
in
in
xchg
mov
push
aaa
jmp
pusha
mov
ljmp
and
and
out
loop
lea
enter
pop
nopl
in
add
cmp
mov
call
or
test
mov
inc
or
and
ret
and
mov
or
lods
dec
dec
dec
xchg
mov
div
sub
sbbl
or
addb
incl
pop
jmp
xchg
movsl
pushf
or
lahf
push
inc
pushf
lock
arpl
xor
mov
int3
rcrb
and
dec
insl
addr16
or
add
outsb
ret
test
or
and
and
adc
andb
cwtl
inc
xchg
lods
cmpsl
pop
and
and
lods
pop
movsl
and
mov
and
mov
dec
push
popf
ja
in
pop
int
mov
lods
enter
add
fadds
add
and
add
loop
es
pop
js
xchg
pop
js
ja
notb
mov
dec
jge
cmp
in
or
cs
xchg
xlat
ds
sub
repz
das
jnp
mov
popf
out
add
ja
test
jmp
mov
add
lock
dec
mov
repnz
cmp
jmp
cmp
pop
mov
movsl
ret
jg
cmp
push
in
push
adc
jno
sbb
stc
mov
arpl
rclb
andl
filds
shll
inc
popf
aas
adc
sbb
xor
mov
mov
aaa
fstpt
das
leave
inc
in
mov
shrb
inc
pop
repnz
add
stos
pop
jl
push
das
mov
test
jecxz
push
rcrl
jmp
test
jnp
repnz
mov
shrb
fimuls
pop
cld
fs
pop
or
mov
ret
fmul
add
shr
in
adc
dec
push
jle
cmpsl
push
jno
xor
push
loope
leave
pushf
lods
movl
xchg
inc
mov
sub
or
xchg
mov
push
jecxz
inc
jecxz
dec
mov
push
adc
xor
into
bound
sub
jmp
jb
mov
enter
mov
js
mov
loope
call
and
jne
inc
outsb
ss
sbb
sub
mov
in
mov
pop
test
push
enter
es
rcll
in
movsb
repnz
insb
adc
das
mov
pop
movsl
mov
adc
out
push
mov
xchg
popf
add
outsl
xchg
mov
call
sub
sbb
jp
out
fmuls
and
jl
mov
sbb
sub
xchg
mov
insb
mov
mov
arpl
movsl
into
outsl
xor
loop
cmp
push
sbb
into
sub
enter
fs
ret
rorl
sbb
leave
mov
fidivrs
push
mov
loop
out
ss
dec
leave
leave
push
in
pop
jb
jns
clc
test
jo
clc
push
shlb
and
push
cwtl
movsl
pop
jp
fwait
rclb
faddl
jecxz
sub
cmpsb
mov
jge
xor
pop
dec
fs
arpl
js
repnz
dec
iret
ds
push
out
mov
enter
sbb
gs
fs
mov
cmc
hlt
ret
xchg
mov
stos
jg
inc
inc
pop
jge
xor
ds
inc
test
fs
and
push
sbb
cmp
pop
push
xchg
xor
sub
leave
int
loopne
arpl
and
inc
or
mov
mov
rcrl
cmpsl
rcll
popa
jecxz
push
sub
jmp
xchg
push
or
out
cwtl
rcrl
pop
sub
xchg
dec
dec
pushf
sub
icebp
icebp
sub
in
test
rcpps
xlat
pop
pusha
roll
adc
cmc
repnz
or
rdtsc
pop
out
add
data16
fwait
and
pop
repz
push
sub
enter
or
adcb
push
movsl
push
loope
dec
stos
xor
fstpl
test
aas
fstps
cs
aaa
ljmp
leave
sbb
notl
pushf
outsl
jp
mov
in
or
add
jns
fs
cmpsl
fs
adc
sub
jecxz
xor
sub
sbb
push
mov
inc
imul
fdivr
insl
das
mov
scas
aas
cmpsl
movsb
add
xor
adc
push
push
lds
and
dec
dec
cmp
lods
and
psubusb
sub
call
popa
outsl
ds
movsl
dec
xor
comiss
jae
daa
std
je
or
test
sbb
xor
pop
popa
sbb
nop
aaa
fstl
es
push
dec
sub
insb
jle
clc
sbb
mov
aaa
jns
or
pushf
enter
jne
xor
push
push
mov
negb
out
fists
and
add
and
dec
adc
adc
and
dec
jnp
cmp
mov
fucomip
mov
jb
mov
pop
ss
mov
mov
or
loopne
pop
xchg
cmp
daa
cmp
push
cmp
jb
xor
xorb
hlt
jmp
ret
test
jae
aas
imul
sahf
mov
mov
sub
fisubs
inc
loopne
adc
mov
inc
mov
pusha
incb
or
iret
xchg
cli
or
sbb
adc
pop
adc
lcall
dec
mov
cvttps2pi
leave
jbe
mov
shll
je
adc
vaesenc
stc
sbb
inc
adc
pop
mov
mov
push
imull
xor
adc
pop
add
mov
daa
mov
nop
inc
mov
jae
test
mov
push
xchg
push
xchg
lret
dec
push
rcr
inc
stos
dec
mov
scas
sbb
push
out
xchg
cmc
pusha
and
lret
sub
jno
or
leave
xor
lret
cmp
mov
loope
mov
push
movsb
sti
data16
or
in
or
lods
fs
pushf
imul
fcmovnu
es
call
sbb
jns
mov
cmp
mov
loop
sbb
inc
mov
pcmpeqb
cmp
aam
add
in
mov
jno
sbb
pusha
test
stos
cwtl
mov
sub
xchg
sub
pushl
repnz
int
add
mov
ljmp
ss
push
dec
mov
inc
pop
adc
mov
jns
loope
dec
pop
stc
xchg
jmp
sub
ljmp
sti
add
popa
fs
mov
mov
call
inc
dec
cmp
hlt
imul
shlb
sbb
jno
pop
xchg
lcall
lea
mov
mov
xor
push
fnstsw
fwait
xor
xchg
xor
ds
adcl
jg
xchg
lret
jmp
jno
mov
mov
mov
xlat
xor
mov
in
cmp
ret
ja
xor
mov
imul
dec
int3
outsl
mov
sub
pop
int
and
jbe
scas
push
cmp
aaa
pop
rorl
les
dec
out
mov
test
insl
scas
mov
inc
ret
cltd
cmp
push
dec
jae
xor
push
sbb
cld
outsl
jno
mov
inc
inc
pop
out
and
mov
lret
sahf
xchg
cmp
enter
or
es
shll
and
or
leave
movsb
or
scas
ret
inc
sbb
loopne
fidivs
ds
popf
inc
dec
jo
sti
int
rorl
out
popa
data16
sub
fwait
sub
and
dec
mov
xor
or
imul
dec
or
shl
xor
or
jmp
aam
mov
xor
push
inc
add
xlat
push
cmpps
out
or
adc
repnz
inc
mov
xor
mov
sub
dec
dec
fs
inc
fs
in
call
movsl
xchg
ja
push
dec
test
xlat
pop
out
jge
sub
call
xlat
xor
test
mov
flds
adc
dec
iret
and
xchg
frstor
ja
dec
inc
xchg
add
iret
mov
pop
mov
jns
sub
mov
mov
and
and
loope
dec
dec
in
cs
mov
popf
adc
xchg
push
pop
es
das
adc
push
pop
pop
jb
push
dec
ret
adc
mov
mov
jp
rolb
adc
adc
sbb
push
sub
lahf
ret
mull
int3
repz
sub
mov
sub
add
pop
rcrl
jne
popl
ljmp
jle
in
and
hlt
xchg
rolb
lods
jecxz
pop
sbb
out
inc
mov
inc
cmp
lods
xchg
dec
in
mov
pop
pusha
and
into
addl
pop
sub
in
cmp
fldcw
xor
cmpsl
ret
pop
xor
mov
loopne
cltd
clc
xor
mov
fildll
sbb
pop
sub
mov
and
xchg
sarb
mov
gs
push
je
or
or
adc
int
dec
mov
pop
pop
and
inc
inc
test
add
or
in
adc
and
popf
push
mov
out
or
sub
or
loopne
mov
mov
in
mov
lds
sub
out
outsb
fs
xor
test
jno
jl
leave
pop
xor
sub
lods
sahf
sub
popa
or
inc
jl
and
xor
mov
cmpsl
pop
mov
adc
movsbl
push
mov
movsb
xor
popa
pop
out
xor
notb
or
pop
ja
iret
cs
arpl
sbb
loopne
fyl2x
add
push
orb
ss
outsb
add
pop
ja
andb
cmpsb
je
mov
ss
push
sub
rclb
xchg
or
cmp
pop
movsl
mov
or
push
ljmp
mov
lcall
and
jge
loope
insb
pop
cmp
out
clc
scas
xchg
dec
in
cmp
jl
sahf
out
jbe
inc
adc
popa
sub
int3
dec
mov
in
mov
lea
or
fimull
mov
jbe
add
pop
mov
rcl
dec
mov
or
adcl
inc
or
push
outsl
loop
ljmp
mov
roll
xchg
or
movsl
daa
or
stc
mov
into
lret
inc
push
adc
mov
jle
subb
jns
out
mov
mov
rolb
pop
cmp
xor
pop
jge
das
pop
dec
lods
out
pop
imul
xor
push
mov
lcall
stos
mov
xchg
mov
sbbl
jle
cs
pushf
pop
sub
pop
insb
push
xchg
adc
les
repz
fstps
cmpl
sbb
in
inc
cld
cmpsb
fldenv
mov
pop
jbe
dec
add
lods
jb
enter
hlt
out
pop
arpl
push
mov
fisubl
jnp
push
stos
rcll
js
push
cmp
enter
xor
fstpt
xor
mov
push
cmc
imul
out
mov
arpl
jecxz
mov
jmp
cmp
pop
lock
xchg
push
sbb
ss
mov
xchg
ret
pusha
fcoml
int
cmp
imul
xor
dec
and
jno
scas
jns
shr
inc
fistpll
mov
cmpsl
xchg
mov
cmp
xchg
mov
sahf
xor
test
mov
adc
idivl
mov
cmpsl
imul
data16
push
scas
mov
insb
xor
and
aaa
and
inc
pop
out
shlb
les
jo
xor
loop
inc
jle
pop
or
xor
adc
xchg
lret
xchg
icebp
mov
das
outsl
insl
mov
inc
sbb
test
mov
push
add
fwait
pop
in
jle
bound
stos
inc
add
negl
sub
mov
idiv
sbb
sub
mov
xor
int3
sahf
pop
dec
pop
fs
icebp
mov
arpl
test
mov
jge
rorl
add
gs
sub
jg
jb
adc
cmpsl
std
rcr
call
imul
je
xor
cmp
lcall
inc
test
push
in
or
adc
cltd
pop
testl
cmp
lret
fistpl
call
pop
shll
pop
pop
sbb
pop
sub
or
mov
cwtl
sbb
lret
cmpsb
aam
mov
cmp
xchg
mov
out
mov
in
testb
fbld
jae
adc
xchg
cld
mov
icebp
ja
mov
pusha
in
and
push
sub
setg
es
push
or
mov
push
and
cmc
pop
int
sbb
mov
out
insl
std
xor
cli
push
and
pop
and
jb
iret
mov
jns
pop
imul
repz
outsb
cmp
fnstsw
dec
cwtl
stc
jp
jge
xchg
ds
sub
jb
fildll
jge
shll
jg
inc
cltd
push
les
jge
pop
push
sbb
and
jge
dec
mov
popa
mov
imul
mov
jge
sbb
mov
xchg
mov
jge
sbb
push
pop
adc
sbbb
jo
fimuls
stc
pop
cmp
pop
rcrl
test
bound
pop
ficoms
pushf
pop
xchg
int3
call
mov
mov
cs
data16
call
adc
data16
adc
pop
int
movsb
pop
rorb
pop
out
ljmp
mulb
mov
sub
stos
aaa
int
add
cmp
test
subl
push
lcall
or
or
add
imulb
cmpl
ja
rolb
cmp
jb
sbb
stos
in
sti
sar
stos
popa
daa
fneni(8087
cmpl
int
stos
add
shrb
outsb
std
lods
maxps
lret
mov
mov
mov
rorb
inc
jns
mov
mov
lods
pop
ds
les
call
inc
cmp
pop
lahf
ret
jo
leave
jg
iret
lahf
dec
rcll
aas
sbb
adc
test
xlat
or
sub
dec
add
add
or
pop
inc
or
and
jo
adc
xchg
js
or
lods
xor
mov
loopne
fidivs
stc
std
cmp
fnstsw
pop
mov
mov
mov
fldenv
push
add
cmp
js
dec
test
aad
mov
xor
cs
out
adc
sbb
mov
lods
clc
jle
ficoml
xchg
aaa
jne
mov
cs
loopne
aam
shll
sbb
call
ret
dec
sbb
into
cld
rorl
mov
mov
mov
xchg
cltd
sub
push
sub
in
lods
lret
or
pop
xchg
xchg
push
sub
lret
jno
fdiv
rcrl
out
cmp
xchg
lea
mov
test
add
iret
mov
test
pushf
pop
imul
mov
cmp
or
jmp
loope
mov
cmp
xor
loop
loop
decl
push
imul
sbb
xchg
adc
mov
rcr
cmp
fsts
fwait
rcrl
mov
fstl
lret
out
std
stos
mov
loop
jmp
in
lds
pusha
iret
push
push
adc
test
and
dec
lock
sub
push
insb
test
mulb
mov
into
adcb
dec
jp
mov
mov
insl
xor
mov
aas
jge
xchg
bound
pop
push
pop
call
sbb
int3
sahf
repz
mov
mov
lahf
push
icebp
jg
je
dec
xor
mov
rorl
cmpsl
outsb
xchg
mov
fidivl
aad
mov
sub
stc
xor
nop
and
cwtl
push
and
in
arpl
mov
adc
xchg
mov
stc
aad
inc
jmp
sub
mov
mov
cmc
sub
cmc
cmp
sbb
repz
aaa
fnstsw
mov
push
jnp
sub
jl
mov
push
aas
sub
andb
dec
sub
int3
add
test
jecxz
inc
jmp
mov
mov
int3
aam
adc
pusha
cwtl
out
cltd
int
les
sub
cltd
sbb
jecxz
push
inc
jl
les
pop
sub
movsb
cwtl
or
icebp
sbb
jecxz
mov
dec
inc
xor
lahf
imul
mov
scas
out
mov
sti
popf
push
jnp
fildl
stc
repz
xor
mov
loop
pop
mov
loop
bnd
ret
xor
lcall
and
fbld
push
add
scas
xorl
dec
out
lods
sbb
cs
jecxz
xchg
gs
push
je
mov
ds
out
dec
jbe
mov
cmp
adc
out
stc
inc
sub
fidivs
xchg
adc
push
cld
movsb
js
push
dec
in
aaa
mov
fcomps
jnp
popf
mov
in
stc
in
into
daa
imul
and
mov
or
jge
add
mov
push
fidivrs
outsb
insb
and
xlat
sbb
inc
cmp
cli
loope
loopne
into
lret
mov
pop
cmpsb
jne
lcall
pusha
cmpb
out
push
xor
mov
shlb
jmp
or
stos
addr16
daa
in
repnz
mov
ficoms
ret
mov
fld
sbb
xor
dec
scas
adc
jp
push
leave
adc
add
xor
pop
jmp
push
mov
stos
scas
ret
mov
lret
mov
inc
mov
pop
xchg
sbb
ja
mov
jecxz
jle
shrl
sub
repnz
mov
cli
xchg
cmc
daa
inc
ret
cmp
adc
cmp
aaa
push
jnp
xchg
pop
jmp
xlat
mov
imul
or
push
cltd
add
inc
xchg
test
cmpsb
inc
gs
pusha
loop
inc
loope
push
aas
sti
push
xchg
mov
jg
loope
jbe
pop
out
pop
ds
jno
add
movsb
test
jo
out
lcall
std
mov
cwtl
in
cmp
xchg
jge
sbb
lods
ret
pushw
dec
mov
cli
mov
js
in
das
xchg
fwait
add
adc
lret
out
call
jno
lret
dec
aam
adc
adc
popf
jge
call
pop
mov
inc
xor
xor
sti
shrb
xor
addr16
or
loope
lds
mov
rorb
mov
adc
push
in
mov
aad
js
fildll
jns
jge
push
flds
aam
fidivrl
int3
adc
iret
mov
repnz
xchg
add
adc
scas
dec
fcomi
iret
repnz
std
gs
es
xchg
adc
out
cmc
or
xor
ljmp
mov
xlat
in
xor
stos
cltd
push
pusha
sbb
cmpsb
sarl
xor
outsb
inc
pcmpgtb
dec
nop
jle
mov
pop
out
mov
nop
arpl
imul
mov
mov
push
mov
pop
test
icebp
mov
sub
cmp
push
mov
mov
jo
loopne
or
std
pushf
in
testl
ljmp
push
lock
outsb
xchg
xor
push
sbbl
aaa
in
jbe
sti
loop
stos
pop
andb
xchg
std
pop
or
stos
cld
daa
int3
mov
jne
xlat
rcll
sub
scas
roll
sbb
mov
nop
jo
jnp
jne
in
mov
xchg
imull
fldl
jb
mov
inc
cwtl
jp
mov
cmpsb
popf
addl
daa
adc
add
iret
push
adc
sub
scas
test
xchg
cltd
test
push
mov
ss
sub
std
jp
pushf
mov
arpl
fisubl
movsb
in
call
pop
adcl
out
inc
lret
arpl
repz
mov
aad
push
iret
or
jae
mov
pop
stc
insw
sub
test
out
dec
cmp
and
roll
dec
cmp
or
add
jne
mov
sbb
xor
push
xchg
adc
cld
mov
pushf
mov
inc
jb
cltd
jge
xchg
pop
arpl
push
sbb
ljmp
cli
push
roll
jmp
jmp
lcall
push
lods
das
imul
scas
push
adc
xchg
hlt
out
aaa
in
xor
pop
mov
pop
or
mov
or
lcall
jae
je
mov
and
sub
out
mov
testb
fwait
and
test
mov
add
inc
mov
xchg
insb
mov
sub
lea
and
pop
jae
dec
xor
jg
jmp
cmpsb
pop
cld
mov
jb
sub
inc
sub
ror
mov
cld
mov
xchg
lods
test
pop
imul
outsl
icebp
fiaddl
xor
sbb
sub
out
ficompl
stos
add
xlat
lahf
in
out
dec
into
mov
cltd
add
adc
and
pop
mov
pop
jmp
das
or
jg
mov
fadds
add
std
sti
sbb
sbb
mov
out
adc
xchg
xlat
mov
mov
sub
mov
setp
popf
sub
pop
cmp
addr16
or
enter
pop
aam
mov
imul
xchg
jae
jne
inc
push
imul
fcoml
test
bound
jb
ficompl
addl
pop
lods
das
aaa
cwtl
or
mov
loopne
subb
daa
add
into
cmp
xchg
test
in
aad
inc
and
or
push
jg
cmp
xor
test
sub
hlt
cld
xchg
add
mov
mov
xchg
iret
adc
hlt
xchg
sub
mov
and
and
in
push
xchg
mov
xchg
in
subb
jge
push
jg
xchg
int3
jg
jl
fcompl
lret
add
ljmp
into
cmp
js
dec
mov
fstp
pop
pop
hlt
stc
pop
add
mov
das
mov
inc
aad
cmp
cmpsl
xchg
or
repz
inc
call
mov
mov
xchg
push
shrb
push
xor
aaa
scas
je
stos
add
cwtl
leave
imul
xchg
lret
inc
in
adcl
adc
pop
sub
or
shll
mov
sub
adc
or
out
clc
pop
fldenv
fisubl
and
adc
xor
je
mov
or
mov
in
int3
arpl
sbb
in
push
jo
inc
rclb
add
push
add
je
xchg
shl
add
mov
aas
paddq
ret
dec
les
add
pop
and
jecxz
out
push
jecxz
push
mov
push
push
add
fwait
stos
xchg
outsb
mov
xor
and
mov
cmp
mov
lock
push
add
mov
xor
aaa
push
ds
jne
push
cmp
xor
adc
xor
das
ja
scas
inc
mov
sub
xlat
and
cmp
iret
inc
push
insl
dec
mov
pop
mov
xchg
outsl
mov
mov
xchg
out
jbe
xchg
mull
cld
jge
nop
adc
fnsetpm(287
add
test
stos
pop
fwait
cmc
insb
sahf
lods
ret
lea
movsl
mov
mov
insb
push
sub
ds
movsl
sbb
pop
clc
int3
pop
lds
daa
add
push
pop
jne
sbb
sub
dec
jp
jnp
cltd
adc
pop
push
in
dec
insb
insl
and
mov
and
sub
push
in
fiadds
xchg
enter
call
call
mov
cwtl
cli
and
mov
outsb
gs
ljmp
xor
xchg
sub
inc
dec
cmp
pushf
jae
mov
stos
packuswb
imul
out
jno
pop
mov
ds
xchg
jle
scas
shrl
iret
jb
dec
mov
es
sub
xor
insl
pop
pushl
xor
push
fs
pop
jae
pop
loop
xor
repz
dec
jno
pop
jp
call
clc
iret
icebp
or
and
mov
adc
adc
sbb
or
push
push
mov
and
and
or
jae
xchg
sbb
into
cmp
data16
inc
jns
jg
pop
inc
ja
sub
mov
mov
js
fldl
test
cmp
cltd
push
sbb
mov
add
sbb
inc
sahf
xchg
fwait
mov
iret
stos
mov
into
push
dec
divl
mov
jmp
addb
sub
lret
mov
fldt
in
mov
sub
out
ss
pop
out
mov
arpl
lods
leave
sbb
xorb
or
add
pop
or
nop
shrb
sub
fwait
push
add
or
fnsave
push
fimuls
xlat
nop
mov
adc
sbb
nop
inc
aad
or
mov
shll
hlt
iret
xor
popa
test
or
mov
fidivrs
adc
ljmp
or
sub
dec
enter
add
push
xchg
lods
push
into
hlt
xlat
push
adcb
fwait
pushf
inc
scas
fs
cmp
push
sub
jne
push
shrb
movsl
xchg
insl
ljmp
pop
xor
cld
mov
aad
loope
xor
outsb
sti
adc
insb
daa
push
mov
dec
mov
lret
pop
pop
sub
jge
cmpsl
xchg
ud2
out
pop
cmp
fldl
push
leave
jecxz
in
sub
fidivrl
inc
pop
repnz
imul
cmp
add
lods
aas
aaa
call
mov
xchg
lods
aas
arpl
sbb
or
mov
mov
stos
or
inc
rolb
push
cld
mov
push
mov
outsb
mov
mov
cltd
jle
bound
aas
outsb
cltd
subl
rcl
das
mov
sub
sbb
repz
inc
pop
and
cmp
jno
je
js
jae
dec
mov
nop
cmc
out
jecxz
dec
ficoms
jmp
bound
dec
and
iret
cmp
lcall
dec
lret
sbb
sub
mov
insb
mov
movsb
inc
ffree
sub
push
cmp
mov
jge
add
adc
scas
adc
in
dec
push
fbld
push
mov
and
push
test
xrelease
jge
push
pop
jle
sub
mov
mov
inc
popf
pop
mov
repz
les
fmul
xchg
pop
add
sahf
push
mov
sbb
shrl
sbb
adc
aam
sbb
push
jecxz
inc
scas
dec
mov
push
stc
outsb
cmp
push
jg
mov
jg
fs
lds
mov
incb
xlat
sbb
add
mov
push
inc
cmp
aam
sub
insb
mov
sahf
mov
sti
sti
aam
cmp
lea
in
lea
out
aad
push
or
jecxz
sub
mov
cli
sub
xor
idivl
add
push
inc
insl
inc
sbb
in
movsb
repnz
aam
daa
xchg
jnp
adc
adc
add
mov
xor
sbb
xchg
int
fidivrs
es
ret
cmp
jp
dec
inc
je
sbb
xchg
cmp
out
faddl
pop
or
outsb
clc
or
test
mov
test
sbbb
clc
pop
push
aad
arpl
fadds
scas
mov
int
and
imul
inc
mov
pop
scas
push
fdivrs
stc
fs
rorl
imul
or
adc
ret
mov
test
sar
lahf
inc
mov
xor
fstps
into
mov
xor
inc
pop
addl
cwtl
int3
mov
xor
inc
ret
pop
dec
movsb
push
add
push
scas
xor
xchg
cs
xchg
das
jbe
test
fimull
sahf
les
mov
cmp
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
std
int
js
adc
xchg
inc
mov
leave
shrb
mov
into
aam
push
push
dec
sub
dec
aaa
stos
xchg
add
test
popf
addl
mov
out
clc
add
pop
mov
aas
imul
ja
into
cmp
xchg
sbb
sti
xor
ret
mov
dec
xchg
ret
cmp
loope
out
xor
fsubl
push
inc
pop
sbb
sbb
in
inc
scas
push
lcall
dec
sarl
fsubrl
flds
dec
pop
loop
push
les
insl
nop
xchg
sbb
adc
pop
pop
sbb
je
je
inc
cmc
std
jmp
jle
mov
push
push
dec
xlat
outsb
push
loopne
subb
push
adc
stos
stc
sub
pop
dec
fcoml
push
jae
mov
or
jno
iret
or
add
lret
xor
scas
in
sub
jle
scas
addr16
rol
xor
lahf
mov
in
inc
jmp
loop
mov
testl
popf
sbb
addr16
mov
les
fst
cmpsl
xor
sub
nop
xchg
mov
test
add
neg
rorl
pop
inc
xor
and
dec
lret
fidivl
sti
clc
sbb
outsb
sbb
subb
pushf
xchg
mov
cs
jb
daa
adc
pop
push
and
add
stos
xchg
and
dec
and
nop
add
xor
push
dec
fidivl
dec
pop
sbb
das
dec
stos
dec
xchg
push
hlt
xchg
fcmovnb
fsubrp
pop
jb
inc
jl
decb
int3
adc
add
cmpsb
and
xchg
repnz
xlat
mov
in
out
iret
xor
cltd
pop
jl
jp
call
inc
test
mov
icebp
xor
mov
enter
mov
cltd
and
or
stos
lock
leave
inc
dec
sbb
sub
movsl
inc
jle,pt
aad
jl
stos
fcompl
bound
mov
push
xor
out
pop
in
js
into
shlb
loopne
mov
push
jmp
leave
lret
sub
mov
mov
inc
xchg
mov
cmp
push
cmp
mov
cli
rorb
lcall
xchg
in
push
bound
sbb
out
pop
add
rcrl
movhps
xchg
dec
popl
test
rcl
sub
leave
cmp
test
int3
and
stc
cmp
and
adc
or
sbb
jo
lcall
adc
sbb
icebp
adc
jl
adc
xor
negb
pusha
cmpsl
pop
aas
sbb
das
jg
rcrb
pop
adc
or
pop
shlb
pop
cwtl
xchg
or
daa
sbb
ljmp
pop
bound
enter
push
cmp
xor
rol
pop
ljmp
fcomi
cmpsb
or
or
dec
mov
ss
enter
mov
fs
cmc
je
call
push
insl
adc
inc
push
mov
out
imul
mov
sar
gs
jecxz
insb
jno
iret
test
jnp
jne
jno
mov
ffree
stos
shl
push
int
imul
movsb
cmp
add
or
popf
pop
pop
js
lods
test
jge
inc
outsl
arpl
push
pop
js
fbld
arpl
pmullw
inc
adc
mov
mov
imul
hlt
inc
das
mov
lds
adc
ljmp
sbb
jno
cmpb
mov
pop
jmp
cld
out
mov
jecxz
xor
xchg
movsl
imulb
bound
aas
mov
test
add
lcall
sbb
movsb
or
xor
and
or
sbb
mov
cmp
rcr
cmpsb
icebp
shlb
mov
mov
pop
mov
test
mov
xchg
inc
jno
pop
jp
stos
sub
cli
pop
mov
nop
cmpb
inc
roll
imul
lods
push
cmp
popf
stos
test
imul
adc
andb
xor
mov
repnz
adc
clc
push
dec
repnz
cmp
pop
lcall
cltd
and
jno
inc
sub
repnz
inc
mov
outsl
nop
push
mov
test
popa
adcl
adc
push
jmp
inc
cmp
mov
test
lea
push
cwtl
jno
rcrb
int3
lahf
lret
dec
adc
push
cmp
cmpsb
inc
xorl
push
jb
add
sbb
add
movsb
lods
insb
cmp
fst
xor
daa
xor
and
stc
push
pop
pushf
rsqrtps
insb
scas
sbb
data16
jmp
lock
test
adc
rcrl
jnp
or
inc
add
xchg
or
or
popf
test
popf
lcall
popl
ljmp
movsl
pop
jne
push
jb
xchg
lret
add
mov
mov
ss
in
sti
push
lret
pop
jmp
loopne
fs
ja
call
cmp
faddl
mov
xor
lret
outsb
fisubrs
ret
scas
jmp
rcr
fistpl
jo
cmp
in
mov
jnp
xor
cs
pushf
loop
dec
arpl
xchg
mov
inc
xor
mov
xchg
jns
cltd
mov
xchg
out
jg
jp
sub
addr16
out
mov
sarl
lahf
lds
inc
lds
xchg
mov
pop
repnz
mov
rcl
xchg
adc
cwtl
inc
lds
sub
js
mov
cmp
sbb
push
repnz
mov
xchg
pop
out
insb
xchg
dec
push
scas
mov
or
das
inc
inc
inc
add
jmp
pop
stos
daa
shll
addr16
pushf
mov
lods
es
or
sahf
out
xchg
pusha
rclb
divb
aas
daa
add
pop
loopne
js
out
bnd
mov
scas
test
add
push
mov
mov
pop
lea
add
inc
or
into
scas
lea
mov
jmp
out
in
sub
or
mov
sti
popf
roll
add
mov
jle,pn
ljmp
push
popa
repnz
test
test
or
stos
loope
sub
enter
pop
xor
fnstenv
dec
imulb
stos
xchg
jl
jg
outsb
cli
inc
cmc
fistpl
je
aas
or
repnz
pop
ja
fistpl
jmp
cli
jg
roll
xchg
xchg
popf
shl
leave
pop
int
sub
xchg
sti
aam
leave
lret
push
outsl
jmp
js
inc
mov
data16
mov
pop
sub
lcall
xchg
jns
std
out
outsl
xor
stos
jl
lock
jbe
and
out
fidivs
shrb
stc
sub
rorb
ret
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
cmc
mov
ja
jl
popa
mov
push
es
sbb
push
into
push
das
sub
mov
pop
bound
jg
fnstcw
mov
lcall
cld
mov
popf
les
int3
cmp
fcoml
mulb
jbe
fcos
xlat
and
cmp
in
dec
cmpsb
insb
out
imul
int
jl
inc
je
sbb
xchg
dec
subl
movsb
lods
jo
sbb
mulb
mov
in
mov
fsubrl
or
clc
lds
call
cmp
popa
inc
xor
in
mov
cwtl
xchg
mov
out
ljmp
arpl
insl
aam
jmp
aad
fdivrl
xbegin
dec
aad
mov
inc
mov
sahf
push
fs
push
lret
inc
lahf
lcall
adc
loope
push
mov
xor
xor
inc
rcrl
in
je
sbb
aas
push
pop
dec
cmp
dec
aaa
movsl
mov
int
add
push
xchg
inc
add
fsubr
jns
lea
mov
inc
fnstcw
xchg
dec
dec
mov
outsb
int
xor
jecxz
inc
cmp
outsl
popa
sbb
inc
ds
loopne
jo
shl
je
lds
xchg
flds
outsb
sbb
fsts
pop
sbb
lret
pop
xor
adc
push
xchg
lret
cmc
fmuls
or
fwait
mov
ljmp
sub
push
mov
mov
xlat
and
mov
cwtl
cmpsb
pop
push
lods
sarb
cmp
dec
daa
mul
sub
lods
sbb
ret
mov
dec
int
sti
xchg
stos
fiaddl
mov
bound
jecxz
cmpsb
dec
fsubrl
mov
les
dec
xor
lock
mov
out
lcall
clc
popf
mov
repnz
mov
outsb
add
fs
loop
icebp
xor
mov
daa
in
stos
cmp
bnd
pop
insl
fwait
ja
fisubs
mov
cwtl
add
sbb
and
gs
push
ret
dec
js
mov
sbb
insl
and
arpl
push
shl
xchg
stos
dec
and
aam
mov
fwait
xchg
mov
out
lods
sub
cmc
icebp
xor
pop
js
mov
or
addr16
loope
scas
ret
xor
hlt
int
push
fisttps
inc
add
ds
lods
mov
xchg
sarl
push
push
clc
mov
push
repz
adc
hlt
mov
mov
lock
xlat
mov
and
xchg
mov
leave
inc
shl
subb
mov
mov
cmp
push
rcrl
cmp
lahf
aam
jp
xchg
or
pop
test
call
jmp
sti
mov
movsb
pop
inc
mov
mov
adc
inc
jns
sub
add
fwait
mov
lock
dec
push
or
adc
xchg
cli
sub
test
daa
pop
cvttps2pi
push
ror
mov
outsl
mov
std
in
into
push
jae
sahf
aaa
sbb
mov
sub
or
cs
mov
mov
push
hlt
adc
in
sarb
mov
rolb
in
imul
iret
es
scas
imul
stos
ret
inc
lret
scas
inc
inc
push
lods
mov
lds
xchg
xor
mov
push
lcall
stc
ljmp
mov
movb
ja
mov
mov
lods
cs
xchg
cmp
xchg
mov
push
mov
xor
jne
and
scas
push
je
or
test
mov
lods
enter
push
ss
jmp
test
scas
mov
test
lahf
lahf
negb
mov
mov
lods
pop
and
es
ficoml
lret
sti
xchg
out
or
cwtl
xchg
xchg
in
ret
bound
push
sub
sbb
addr16
in
rolb
xchg
fcomp
xchg
adc
adc
aad
inc
adc
cmp
add
bound
jno
xor
out
xchg
repnz
fdivrl
mov
mov
mov
rclb
xor
lahf
cmp
out
testb
test
add
sahf
shll
jle
adc
adc
mov
mov
insb
aam
bnd
mov
das
imulb
xor
xorb
pusha
push
cmp
push
cld
icebp
pop
int
cmp
insl
fwait
dec
cwtl
stos
nop
mov
ret
lret
ja
bnd
inc
data16
iret
lahf
je
mov
jp
mov
js
jmp
sti
loopne
lods
cmp
gs
cmc
xchg
popa
cmp
fwait
push
push
mov
inc
mov
jp
sahf
mov
out
aad
mov
roll
mov
movsl
jnp
ret
mov
lret
push
movsb
jl
rcll
loop
adc
mov
xor
xchg
ftst
cmp
in
aaa
sbb
or
push
xlat
xchg
mov
loop
imul
lcall
and
cmpsb
ret
es
xchg
ret
or
nop
mov
mov
leave
in
jb
sbb
flds
pop
aaa
cmpsb
mov
aad
adc
add
imul
xchg
sub
xchg
fs
or
cltd
les
jnp
ret
jg
mov
daa
xor
cltd
in
push
lcall
add
sbb
stos
push
fimuls
jb
or
push
add
loop
cmp
lret
inc
popf
lea
push
test
adcl
scas
jo
rcl
cmp
std
jecxz
or
sub
outsl
fdivrs
and
out
icebp
outsb
cmp
sub
aaa
es
or
adc
mov
test
scas
stc
les
cltd
mov
out
mov
mov
mov
sub
or
add
push
ret
loopne
adc
dec
out
adc
popf
mov
fnstsw
and
mov
das
xor
icebp
and
mov
imul
loope
gs
xorb
aaa
push
fstpl
jne
scas
imul
or
jb
inc
movsl
sbb
adc
sbb
lcall
jns
xchg
pop
icebp
xchg
mov
cmp
cmp
js
push
popf
cmp
inc
and
into
nopl
xor
mov
stos
and
outsl
xchg
dec
pop
imul
cmpsl
imull
lds
jecxz
lret
fildl
adc
sub
dec
popa
dec
stos
lcall
add
lods
hlt
in
and
adc
mov
aad
cmp
lahf
xor
cmp
mov
out
xchg
loopne
sahf
push
ds
iret
bound
xchg
push
lods
lcall
jp
frstor
xor
outsl
aas
fistpl
shr
movsl
sti
decb
jg
or
int3
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
push
bound
sbbl
adc
std
stc
fidivs
cmp
and
mov
xor
mov
jg
inc
inc
xlat
cmp
pusha
imulb
pop
stos
neg
aam
test
jo
adc
pop
scas
hlt
sub
nop
push
or
or
xor
sbb
jl
dec
scas
jo
add
enter
cpuid
aas
push
sub
gs
in
sbb
out
xor
aad
push
mov
or
mov
cwtl
or
mov
lea
pop
sub
push
pop
subb
repnz
jne
cmp
lock
push
push
push
rcll
popf
test
addl
inc
fsubs
add
leave
sub
loop
add
pop
inc
mov
mov
inc
clc
test
inc
mov
push
and
scas
or
das
lods
add
popf
loop
jle
test
xchg
sahf
in
popf
and
leave
sub
pop
dec
add
push
loop
xor
aaa
add
pusha
and
jno
out
adc
scas
jp
mov
out
stc
and
mov
add
cmp
pop
imul
xor
xchg
icebp
xor
fcomps
mov
add
iret
add
inc
call
test
jp
mov
dec
sub
popa
or
xor
cli
add
mov
jnp
xor
and
data16
jo
pop
stos
in
sbb
stos
mov
call
mov
sahf
jmp
ret
cmp
and
dec
sub
movsb
or
push
dec
and
aaa
jns
cmc
jnp
push
stc
aaa
and
jmp
pop
and
inc
mov
arpl
stos
dec
fwait
loop
and
inc
push
mov
or
mov
inc
mov
stos
jne
cwtl
icebp
fimull
or
xor
pop
or
shrb
divl
loopne
jmp
mov
movb
in
repnz
adc
gs
insb
inc
loopne
pushf
inc
xchg
call
int
mov
sub
jne
push
shrl
lock
xchg
pop
mov
sbb
cs
ret
mov
pusha
pop
out
and
sti
sbb
mov
xor
or
in
loope
pop
pusha
xchg
popa
sbb
icebp
mov
insl
jno
in
mov
pop
or
xchg
mov
es
int
andb
rcl
testl
inc
in
jl
jecxz
daa
enter
dec
xchg
add
int
call
sbb
sub
pusha
out
mov
pop
mov
add
mov
cmc
or
js
out
call
sbb
push
xor
sbbl
sbb
repz
push
jbe
in
cmpsb
adcb
stos
add
lea
or
pop
jne
shlb
sub
mov
pop
inc
mov
cmpsl
test
dec
andb
addb
pop
or
adc
push
aas
jecxz
or
jp
stos
data16
cld
out
xchg
jno
addr16
push
test
imul
sbb
pop
sbb
cltd
testb
in
push
mov
loop
pushl
dec
adc
cmp
dec
xchg
test
push
insl
mov
cmp
xor
jno
xchg
push
pop
fistpll
xor
and
fbstp
xchg
pop
sub
mov
rcrb
push
push
ljmp
notb
adc
jns
jbe
movsb
adc
test
aas
cmp
xor
popa
push
sub
stos
mov
test
dec
add
ljmp
adc
inc
enter
nop
mov
xor
aas
sbbl
mov
addl
mov
addr16
mov
mov
loopne
testb
loopne
mov
adc
mov
or
test
mov
mov
or
dec
mov
dec
xchg
cmp
sbb
push
jae
sahf
imul
sub
inc
mov
in
ja
dec
mov
push
or
xor
inc
pop
or
loope
and
insb
mov
sti
and
adc
hlt
cmpsl
fadds
or
jbe
loopnew
aam
sbb
xchg
xchg
icebp
jg
push
or
push
pop
mov
and
sahf
dec
xor
shrb
into
out
aad
clc
mov
jno
into
cmp
sti
push
or
test
outsb
pop
rcrb
xor
push
and
repnz
lret
std
lods
fildll
aaa
xchg
and
in
mov
ljmp
sub
jg
pop
imul
sarl
sarb
or
lock
xor
fldcw
nop
sti
dec
mul
popa
jbe
xchg
push
loopne
bound
lods
into
jne
pop
pop
iret
insl
or
push
out
pop
inc
decb
jb
mov
out
in
xor
cmp
lahf
or
lds
cmp
in
adc
aam
bound
adc
jo
pop
cmp
or
xor
mov
addb
hlt
mov
nop
daa
movsl
pushf
or
shl
out
jo
addl
mov
lock
or
rcl
dec
lea
pop
enter
int3
bound
cmp
loopne
dec
push
cmp
fcomi
mov
popa
adc
pop
lret
imul
sbb
lock
test
mov
xor
lods
idivl
shlb
jg
jge
and
icebp
mov
mov
stos
sbb
push
sub
rcll
cmpsb
xor
cmc
add
xchg
jno
fwait
inc
ret
shrl
or
cld
or
ja
leave
jne
insb
mov
sub
dec
jbe
mov
xchg
push
js
mov
jb
popa
mov
lret
push
repnz
jb
lea
mov
jno
cmpsl
dec
std
or
xchg
mov
mov
jb,pn
lret
xor
sbb
or
in
fcoml
imul
or
inc
imul
adc
lock
mov
inc
je
mov
in
inc
mov
cmp
stc
xchg
lods
ret
push
dec
mov
jmp
xor
and
int
outsl
je
enter
cmp
flds
push
cmpsb
push
inc
mov
mov
fnsave
push
out
das
and
jmp
fidivrs
rcrb
sub
repnz
inc
lret
xchg
and
or
and
outsl
stc
aam
daa
jb
mov
jmp
popa
std
push
mov
enter
jno
jnp
jbe
sbb
pop
push
mov
lea
sbb
movsb
das
dec
jp,pt
push
xchg
loope
fs
popf
out
incb
inc
cwtl
sti
fisttps
sub
adc
push
mov
shl
shl
mov
mov
jmp
test
fcoms
inc
loop
xchg
pop
or
ja
loop
pusha
add
mov
add
cwtl
or
shll
outsl
test
rolb
lock
cmp
mov
jbe
test
je
sub
jmp
pop
ljmp
dec
push
test
daa
fcoml
jnp
mov
aaa
jle
lock
jnp
mov
scas
jbe
aad
push
mov
lcall
xchg
xchg
aad
jne
xor
cmpsb
sub
pop
rcr
mov
lret
push
bound
inc
push
adc
in
repnz
aam
push
add
sub
adc
xchg
cmp
cmpsl
shl
dec
mov
inc
inc
push
dec
imul
pop
push
lods
pop
aad
test
dec
sbb
sub
stc
lahf
adc
vunpckhps
dec
mov
jmp
xlat
lret
test
lods
shrb
or
xchg
bound
lahf
and
lret
push
xor
hlt
xlat
in
jle
aad
push
lock
adc
fimull
pop
and
xor
ret
div
add
xchg
sub
loop
lods
adc
test
out
sbb
cs
in
sbb
add
sub
and
pushf
dec
lret
mov
mov
imul
xor
cwtl
inc
and
pop
jg
loopne
test
lods
and
rclb
cmp
and
pop
mov
and
adc
mov
jg
aad
fsubrp
sbb
cld
mov
and
mov
lret
pop
gs
xchg
je
mov
push
leave
fdivs
scas
fwait
mov
cmp
inc
jb
std
and
lcall
mov
pop
out
push
mov
fs
adc
int
jl
mov
mov
push
repnz
lret
fwait
mov
aam
scas
xlat
sbbl
push
push
repz
mov
je
dec
jns
cmp
ss
lea
mov
nop
mov
push
leave
add
adc
mov
movsl
andb
cmc
ljmp
popa
mov
mov
jne
push
scas
in
sbb
jecxz
int3
inc
outsl
enter
or
stos
push
fsts
je
ret
imul
daa
and
repz
jae
sbb
fnstcw
pop
mov
stos
push
in
sub
push
loop
dec
or
xchg
mov
dec
sub
sbb
xor
sbb
andb
jnp
push
gs
sti
mov
ret
jecxz
rcll
mov
sub
sub
cmc
das
push
into
pop
in
jne
jl
sti
popa
and
xchg
xor
mov
jbe
inc
adcl
mov
jecxz
arpl
mov
das
mov
out
inc
xor
test
lret
sahf
shlb
mov
in
fld
adc
pop
push
xchg
pop
in
shlb
xchg
adc
int
lcall
push
xor
cs
lret
arpl
fdivr
insb
mov
push
xchg
popf
in
out
add
ja
mov
cmpb
test
jns
incl
cwtl
lods
pop
push
push
fdivrp
nop
repz
fdivs
clc
shll
inc
outsb
xor
jecxz
adc
and
dec
test
jnp
int3
sti
and
outsl
or
call
or
add
mov
pop
jmp
fs
ljmp
add
into
in
imul
pusha
lcall
pushf
divb
dec
push
nop
fdivr
in
dec
mov
push
jae
in
outsb
sahf
jge
sub
add
js
sar
mov
stos
inc
pusha
cmp
sbb
pushf
inc
dec
jbe
pop
cmp
hlt
jo
push
xchg
movsb
pushl
inc
add
insl
addr16
push
cli
push
and
inc
and
mov
repnz
mov
push
das
pop
fmul
loope
or
sbb
and
push
push
or
push
xchg
xor
hlt
ljmp
lret
outsb
cmc
adc
vminps
jns
pop
sbb
int3
mov
out
inc
push
mov
jbe
insb
fiaddl
ret
popf
cmpsb
cli
loop
sbb
pop
ja
in
cmpsl
rorl
daa
jcxz
into
cmp
sar
adc
adc
arpl
call
movsl
outsb
icebp
std
je
repnz
stos
or
test
xor
dec
push
xchg
cmc
cmp
arpl
int3
mov
imul
rcrb
arpl
movsl
stc
inc
jmp
pop
xchg
mov
and
sbb
pminsw
dec
insb
jnp
aaa
cli
jle
adc
adc
xor
sub
sub
sub
cmpsb
sbb
out
add
inc
push
loop
lods
lahf
push
xchg
jb
arpl
incb
fcoml
adc
js
sub
push
or
push
jle
jg
rorb
lock
andb
mov
cltd
cmp
lcall
sti
loopne
xor
stos
inc
push
adc
push
jle
divb
jp
andb
mov
aad
xor
add
pop
lahf
pop
or
sbb
mov
adc
aas
gs
cmc
cld
push
xor
xchg
dec
sbb
xor
nop
sbb
mov
jle
xor
xchg
test
popf
insb
cmp
cmp
mov
mov
pop
fnstenv
inc
and
jmp
popa
aas
sahf
pop
cmp
adc
pop
adc
out
aad
adc
into
jne
fcmovu
data16
sbb
pop
and
mov
scas
lock
dec
pop
mov
push
push
loope
in
gs
std
mov
fsubrs
mov
push
addb
cltd
jb
or
les
xchg
or
ja
mov
sarb
sub
inc
in
outsb
add
jns
or
movsb
popf
out
inc
je
ret
in
mov
cwtl
in
fidivs
adc
fdivs
mov
dec
aas
cwtl
ljmp
scas
in
out
xor
jbe
mov
inc
cmp
add
mov
insl
imul
lahf
pop
enter
jne
rorl
mov
xor
leave
jecxz
loope
xor
daa
sub
scas
inc
iret
enter
or
out
inc
lods
pop
popf
js
test
xchg
push
cmp
ss
fists
dec
mov
lock
jae
stos
int
loopne
icebp
push
jecxz
leave
lock
cmp
gs
aad
mov
outsb
fdivp
fdivs
test
addr16
xor
inc
movb
fwait
jo
pop
mov
or
add
sbb
xor
adc
push
cmp
sub
pushf
pop
and
or
and
and
sbb
test
push
mov
push
add
jle
sub
xchg
nop
pushf
testl
dec
incl
lcall
inc
adc
arpl
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
es
lahf
cld
adc
jno
setns
inc
mov
inc
je
shr
sar
aam
cmp
dec
pop
push
or
jge
popf
jle
xchg
xchg
adc
mov
pop
vhsubpd
movsb
pop
push
xchg
xchg
test
cmpl
cwtl
pop
loope
jo
mov
adc
pop
jge
test
jnp
fadds
mov
ljmp
insb
mov
pop
ret
ret
xchg
lock
sbb
push
cmp
pop
jp
adc
mov
push
mov
cmp
adc
mov
or
mov
repz
pushf
push
arpl
lods
or
leave
pop
andb
adc
stc
adc
bound
xchg
jp
add
jbe
xlat
int3
fildll
push
add
add
and
pop
enter
cmpsb
jno
and
das
dec
mov
adc
xchg
insb
and
xchg
rorb
xor
aas
mov
pop
adc
repz
adc
inc
jmp
jl
push
outsb
sub
lcall
cmp
movsl
push
adc
nop
sbb
in
mov
aas
adc
xchg
push
push
int
xchg
cmp
fstp
inc
imul
jg
mov
lahf
dec
sbb
push
mov
jmp
sub
push
push
inc
negb
inc
sar
push
pusha
rcr
inc
mov
lcall
pushf
adc
imul
es
call
adc
inc
lahf
lahf
test
xchg
ficoms
nop
cmp
mov
inc
xor
pop
push
sub
fcomps
rcl
mov
xor
iret
cmpsb
pop
imul
fadd
mov
or
jns
in
stos
xorb
ror
pop
or
mov
pop
cmp
dec
repnz
stc
mov
xchg
movsb
push
das
mov
fidivl
fisubs
ss
test
sub
fwait
sti
mov
jle
mov
add
jnp
stos
sub
jbe
clc
inc
mov
jecxz
shrl
add
jp
pop
mov
dec
ja
push
sub
sub
rolb
lods
fwait
enter
scas
push
andl
jae
adc
inc
mov
and
aad
fistps
fs
or
jp
int
lcall
cmp
xor
scas
xchg
mov
cmp
aad
rolb
bnd
inc
pop
or
fnstcw
and
pop
lock
mov
sti
xor
fisubs
shlb
stos
aad
add
sbb
in
xchg
out
int
fst
aam
lcall
outsl
fmulp
cmp
push
sub
inc
imul
pop
adc
sbb
aas
dec
xor
shrb
push
pop
mov
mov
out
cmp
movsl
push
bound
sub
rcll
push
mov
lea
imull
shll
inc
test
pop
in
mov
mov
je
cmp
push
xlat
in
xchg
mov
add
test
push
jl
and
lds
push
or
mov
aam
mov
inc
mov
shll
adc
and
mov
loop
xchg
lahf
xchg
jl
fs
inc
rcl
fcmovb
or
sti
insl
inc
sbb
pop
lods
mov
inc
movsb
lds
and
cmp
adc
adc
aad
jp
push
fistps
xor
xor
mov
cmp
jl
aad
push
fdivrs
jle
or
ljmp
push
rol
sub
push
push
shll
mov
xchg
and
loope
jbe
faddl
push
ja
das
pop
push
fdivs
sti
ror
lods
mov
test
mov
add
lods
popa
mov
push
not
pop
int3
fiaddl
add
add
pop
mov
ret
into
outsl
pop
inc
fucomip
mov
ds
push
fdivrs
std
cmp
push
cmp
int
rcrl
sbbl
js
lahf
push
mov
push
call
stos
icebp
jne
add
test
pop
int3
push
add
jns
aam
mov
aam
cmc
push
push
jmp
lea
pushf
cmp
notl
cld
adc
push
scas
test
push
rclb
push
xor
pop
aad
fnstsw
lods
ljmp
add
stos
push
inc
xor
sets
add
add
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
