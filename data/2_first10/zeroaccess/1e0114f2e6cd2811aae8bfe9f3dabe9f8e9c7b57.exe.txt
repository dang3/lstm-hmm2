push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
loope
addl
subl
and
cmp
sub
aas
jbe
aaa
jno
jae
dec
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
adc
filds
dec
cmc
pop
out
iret
cltd
sbb
jecxz
out
fidivrl
mov
addr16
imul
movsl
add
lret
mov
sub
dec
sarb
icebp
sub
xor
out
mov
fisubrl
mov
adc
not
aam
popf
cmpsb
xchg
fdivr
xor
cltd
xchg
in
mov
and
in
mov
mov
lea
adc
mov
imul
push
dec
or
ds
jb
cmc
push
aam
xchg
mov
pop
test
outsb
pushf
bound
push
mov
xor
sub
fs
test
je
dec
je
out
or
outsb
imul
repz
stos
ficoms
les
adc
adc
dec
jge
popa
mov
sbb
es
loope
fdivs
xor
sub
test
jo,pt
aaa
es
out
push
into
int3
cld
out
mov
dec
loopne
out
cltd
push
jg
and
mov
out
in
xchg
push
dec
sti
xor
cmp
jg
arpl
dec
leave
mov
jb
andb
mov
push
mov
int3
mov
push
sbb
fbstp
mov
add
rcr
aam
adc
jae
push
push
clc
out
xor
fsubs
xchg
ljmp
dec
or
and
cmpb
xor
sbb
pcmpgtw
sbb
push
test
push
pop
jo
jle
and
sti
sbb
jp
sbb
in
push
arpl
sbb
imul
int3
mov
dec
arpl
dec
ret
leave
jne
mov
ja
stos
push
lcall
cmp
jbe
sahf
sub
arpl
lea
add
lds
leave
inc
push
cmp
jo
prefetch
or
mov
subl
notl
cltd
or
mov
dec
adc
jp
dec
xor
sbb
lds
cmpb
mov
clc
mov
and
lds
out
ds
mov
cmc
sarl
mov
movsl
lock
inc
loop
sub
cmpsb
adc
mov
mov
fstp
mov
xchg
dec
sbb
sbb
cmp
mov
mov
push
pop
sbb
pop
repnz
jecxz
and
mov
cmc
jbe
outsl
pop
aaa
cmc
push
mov
xor
or
push
lods
inc
pop
mov
cmpsb
lock
aad
cmc
mov
movsb
cmp
das
insl
mov
cwtl
xchg
pop
das
shrb
mov
addr16
repnz
mov
sub
or
adc
sbb
les
in
addr16
mov
xchg
xchg
mov
and
iret
test
nop
dec
jle
rorl
adc
cmpsb
test
push
cltd
clc
cmp
pop
inc
push
pusha
stc
cmpsb
mov
mov
mov
sbb
xchg
add
jmp
adc
out
xlat
add
sahf
sub
mov
xchg
aaa
dec
cld
adc
cmp
push
in
call
imul
xor
jge
cmp
das
fidivs
pop
cmp
mov
cmp
bound
pop
push
ja
inc
ret
mov
je
icebp
jns
frstor
negb
out
push
negb
cltd
mov
lret
fwait
push
fwait
hlt
cmpsb
and
dec
sub
stos
mov
jnp
sbb
and
push
xor
insl
adc
jp
or
ret
or
jbe
in
ja
or
mov
jle
bnd
inc
mulb
scas
adc
ficoml
js
loop
scas
sti
add
xchg
lock
jmp
pop
test
icebp
shrl
jmp
jle
hlt
fnstenv
fwait
push
adc
adc
call
mov
shll
xchg
call
mov
and
jbe
and
dec
sub
lret
jle
ds
sub
push
fistl
sbb
inc
pop
addl
cmp
push
lahf
cwtl
mov
in
fidivs
xor
push
iret
lea
sbb
adc
dec
inc
jl
jg
or
cmp
fstpl
adc
jo
jnp
inc
xor
pop
dec
insl
mov
sbb
ja
gs
lock
jns
es
mov
dec
aaa
push
mov
push
aad
add
in
lods
inc
xor
jb
shr
stos
mov
fildll
pushf
andb
enter
dec
cvtps2pd
lods
mov
mov
rcrl
push
jne
push
sbb
loope
les
pop
or
mov
repz
ljmp
ret
pop
inc
pusha
add
inc
or
sbb
xchg
out
les
rcr
xorl
movsb
sub
dec
xchg
repnz
test
leave
mov
clc
or
into
jne
int
test
or
adc
jg
mov
and
push
call
sbb
add
lahf
mov
rol
cmc
stc
decb
ja
cmp
sarl
sti
addr16
rclb
pop
cmp
pop
mov
jl
lock
aad
lock
lea
in
or
dec
and
lcall
mov
add
add
jle
insl
insb
sub
outsb
data16
jns
ja
cmp
push
mov
sbb
test
test
pop
dec
repnz
pop
sbb
int
addr16
dec
mov
push
cmp
ljmp
hlt
iret
dec
sub
cwtl
or
test
jmp
bound
ret
cs
andb
sub
adc
scas
inc
jmp
add
add
scas
rcrb
pusha
ss
nop
andb
dec
out
outsl
mov
outsb
adc
xor
icebp
push
cli
repnz
subl
in
jno
arpl
shll
sub
stos
mov
and
std
pop
xchg
xchg
sahf
jmp
call
sarb
popf
lfs
xor
scas
cltd
mov
cmp
push
mov
or
mov
dec
sub
ljmp
adc
jnp
daa
add
subl
push
sub
out
mov
adcb
lock
jle
cmp
adc
in
push
loop
cltd
sub
xchg
dec
xchg
and
inc
sub
hlt
jecxz
pop
arpl
lret
scas
mov
xor
in
jno
test
outsb
into
xchg
sbb
xchg
shlb
inc
xchg
fimull
jno
sub
shll
loop
jmp
scas
icebp
pop
mov
iret
cli
push
ljmp
push
add
stos
out
push
fdivrl
jbe
cmp
or
mov
fistps
test
daa
lods
in
jb
push
inc
pop
cwtl
push
sbb
cmp
mov
dec
sub
aam
adc
cltd
jno
jo
push
in
jb
rclb
mov
mov
jle
cmp
inc
je
jo
inc
cmp
jae
cmp
jg
and
test
sti
jne
clc
adc
lret
int
ret
repz
pusha
int3
shlb
mov
subl
insl
sbb
clc
out
mov
inc
jp
sub
stc
cltd
fistpll
mov
test
div
mov
pusha
pop
xlat
pop
into
sbb
sbb
mov
push
mov
arpl
lahf
iret
dec
inc
dec
push
outsb
sub
icebp
mov
je
aaa
inc
mov
cmpsl
or
sub
push
sub
fdivrs
xchg
dec
jnp
pop
int
sahf
call
sahf
mov
and
iret
dec
add
arpl
jo
jno
xchg
lret
sbb
jecxz
out
leave
add
mov
sbb
dec
jo
mov
cld
repnz
bound
xchg
sbb
out
or
cmp
sbb
cltd
inc
out
stos
rcrl
cmpsb
lods
mull
dec
add
mov
mul
mov
in
push
fdiv
es
out
adc
lret
gs
leave
stc
mov
fisttpll
lahf
add
adc
push
cs
push
pushw
jb
inc
fdivrl
inc
aam
adc
jl
sbb
dec
stos
sub
mov
add
push
pushf
fimull
jb
and
loop
sub
add
sbb
andb
mov
insl
data16
or
xor
iret
jne
cmp
xchg
xchg
xor
ljmp
push
ret
cmpsb
jl
add
decl
or
sub
jbe
mov
push
cwtl
push
popa
and
or
leave
insb
cmp
jnp
pop
sub
in
add
daa
mov
popa
stos
or
or
add
mov
rorl
ljmp
push
outsl
pop
push
outsb
test
movsl
pop
xchg
xor
xor
mov
loope
mov
jecxz
add
test
js
test
stc
mov
adc
cmp
in
lahf
repnz
and
pop
add
jnp
mov
jg
ss
mov
add
shlb
aad
and
mov
das
sub
movzwl
repnz
stos
fmuls
jo
jmp
cmc
jmp
mov
lods
clc
jo
pop
and
subl
es
and
xchg
push
icebp
nop
outsb
xor
or
js
dec
and
sub
cmpsl
jmp
and
dec
add
or
lahf
pop
shrb
and
lds
ret
adc
lahf
lret
in
test
imul
push
dec
sbb
mov
xchg
in
fildll
cs
enter
jae
orl
sub
mov
cs
data16
mul
mov
lcall
pop
push
push
push
pop
addr16
adc
lods
pop
jp
data16
mov
mulb
mov
iret
push
in
pop
leave
gs
jecxz
dec
mov
inc
or
mov
in
fmull
cmpsl
fldcw
fbld
mov
cmp
jp
out
fs
test
shlb
ss
cs
orl
pusha
jg
fimuls
iret
pop
mov
sbb
mov
mov
xchg
mov
ljmp
sahf
cmpsb
aad
jl
mov
mov
lea
popl
enter
test
ret
or
mov
push
outsl
aaa
add
adc
aad
pop
push
mov
mov
sbb
test
mov
scas
sarl
or
pop
dec
jae
mov
jmp
dec
inc
jl
nop
test
push
mov
icebp
iret
mov
test
and
rorl
push
jno
or
lret
frstor
repz
mov
push
or
das
mov
mov
mov
in
xchg
push
sbb
mov
gs
cs
xchg
rolb
sub
mov
mov
cmpl
mov
ret
inc
and
loop
mov
out
xlat
lods
push
and
mull
ja
push
sahf
fwait
lret
cmpb
dec
int3
mov
mov
jb
mov
lds
cmp
or
mov
mov
lahf
sub
push
adc
sbb
movsb
adc
sti
ret
daa
push
jo
adc
mov
into
jne
add
jns
movsl
mov
cli
add
mov
fidivl
mov
jp
mov
or
std
sub
push
dec
add
aad
cmp
push
enter
mov
mov
ljmp
dec
sbb
sub
icebp
scas
sbb
sbb
jns
lea
sub
mov
cmc
pop
out
cmc
mov
xchg
add
pop
mov
pop
cmp
inc
xor
pop
fwait
lea
sbb
inc
jge
icebp
faddp
xchg
ljmp
jg
aad
xchg
cli
fldenv
jae
outsb
add
inc
nop
movsb
mov
jg
rcll
sti
pusha
imul
adc
mov
dec
lcall
pop
lods
mov
insb
or
int
mov
test
xlat
dec
dec
lret
sbb
jno
into
xor
fistps
xor
ret
jbe
sbb
cmc
ss
jns
push
sti
fs
or
sub
push
dec
mov
pop
pop
cld
push
inc
fwait
lods
cmp
cmpsl
repz
les
mov
cld
repz
jns
in
nop
mov
ror
add
mov
dec
out
sub
xchg
mov
ficoml
shlb
fbld
mov
mov
dec
ss
cmpsb
test
xchg
cmp
out
inc
or
cmp
lds
mov
insl
sub
sub
out
mov
scas
cmp
inc
aas
inc
pusha
fmul
sbb
rcrl
or
outsl
and
mov
cmp
jo
add
das
sub
rolb
je
ljmp
cmc
lock
cmp
es
add
stos
cmp
mov
andl
and
addr16
out
cmp
pop
test
jae
lds
adc
in
mov
mov
mov
xchg
sub
push
fidivrs
loopne
inc
mov
xchg
mov
push
out
aaa
fistpll
aam
lock
je
or
fs
ds
pop
out
in
mov
cmp
jp,pn
lret
test
sbb
xchg
fisubl
gs
fs
xor
pop
cs
and
mov
lds
inc
inc
xor
jmp
leave
xor
arpl
push
mov
decb
add
fiadds
pusha
push
lods
std
push
sub
cmp
dec
mov
sub
loop,pt
or
mov
lods
sub
adc
adc
or
sbb
lret
pop
sbb
out
pop
loope
fdivl
ficomps
xchg
xchg
scas
xchg
je
fistpll
int3
aam
data16
aas
out
or
jno
outsb
rorl
fnstcw
int
js
int3
mov
push
pop
dec
sub
push
stc
sub
cs
dec
gs
mov
outsl
inc
and
jecxz
rcrl
add
leave
sbb
pushf
movsb
lea
mov
push
pop
clc
das
das
stos
mov
int3
loop
push
dec
hlt
leave
clc
fsub
repnz
add
stc
and
adc
adc
sbb
pop
xlat
push
movsb
xor
sahf
out
fists
push
std
insl
ja
je
add
pop
adc
mov
or
andb
std
in
scas
adc
cli
sub
daa
std
ret
dec
cwtl
sahf
pop
aaa
ret
pop
jecxz
aaa
ficomps
or
and
jge
jl
aad
add
inc
cmc
sbb
xor
insb
mov
jg
fcmove
adc
insb
jl
in
data16
rcll
mov
push
and
pop
imul
mov
rcr
in
push
cli
mov
je
jno
sub
fs
mov
and
pop
scas
inc
push
test
sbb
or
out
or
sub
xlat
cld
jge
mov
add
mov
fbstp
mov
jbe
cld
sarb
jno
xchg
mov
ja
and
xor
sub
jmp
ror
pop
repz
lret
add
push
pop
das
negb
mov
int3
outsl
loope
push
mov
cmpsb
sti
sub
popf
dec
neg
push
pop
fistl
sbb
ljmp
dec
add
add
int
mov
in
loope
mov
xchg
repnz
fisttpl
xor
mov
pop
push
mov
and
lods
jle
jns
xchg
sbb
fiadds
movsl
adc
mov
into
clc
mov
pop
mov
pop
cmp
add
sub
push
in
or
xchg
cmp
push
incb
push
cmp
ljmp
daa
loop
mov
out
aad
repz
lcall
and
scas
cs
xlat
aas
adc
loopne
sub
jb
push
fs
xchg
sub
push
sti
cltd
into
je
and
subl
pop
add
enter
xchg
lret
dec
inc
add
adc
mov
push
out
sbb
leave
pop
sub
jbe
rclb
fstpt
arpl
test
jb
and
xchg
outsb
mov
test
xchg
stos
pop
outsl
sbb
inc
mov
fdivrs
or
jle
ret
sti
add
aam
nop
pop
or
rcrl
sbb
cld
or
mov
arpl
in
lret
shrb
popf
mov
fwait
cmp
outsl
dec
dec
xchg
cmp
int3
push
shrb
fisttpll
add
loopne
inc
mov
insb
push
loope
pusha
les
insl
out
jb
in
push
das
loopne
jae
ret
dec
mov
jbe
push
movsb
add
xor
jae
lcall
xorl
inc
add
mov
jne
xchg
xor
lahf
cltd
dec
test
outsl
insl
bound
rolb
mov
pop
fs
stos
movsb
mov
shlb
cmp
add
add
in
pop
jne
jae
cmp
lods
mov
dec
push
xchg
mov
dec
loope
lahf
inc
sub
and
jae
mov
pushf
sti
sbb
dec
imul
xor
ljmp
sub
je
inc
push
pop
push
test
pop
xchg
or
fs
xorb
add
push
pop
mov
fidivs
inc
sbbl
pop
jno
out
ficoml
add
imul
or
daa
xorl
mov
xchg
fadds
lea
fcoml
adc
xor
xchg
sub
jnp
in
pop
xor
cmpsb
enter
out
fidivrs
lods
jmp
dec
sub
mov
repnz
mov
mov
les
outsl
in
pop
mov
lods
xchg
or
int
sbb
adcb
popa
mov
movsl
cltd
push
xor
aam
jl
je
xchg
adc
jmp
dec
iret
inc
dec
jg
addr16
ja
xlat
mov
mov
push
gs
insb
xor
xor
das
xor
popf
mov
das
in
jb
stos
in
int
out
pusha
mov
es
imull
sbb
popa
pop
cmc
shlb
dec
lods
pop
push
in
xlat
jmp
into
fsubs
cwtl
push
es
faddl
cmp
and
and
jno
nop
gs
popa
push
push
jbe
test
repz
call
ret
stos
sbb
mov
add
and
add
or
cmpsl
insl
or
ret
loop
pop
adc
out
sub
repnz
repnz
loop
or
jns
xorb
int
pop
push
inc
loop
cmc
mov
fiadds
push
hlt
arpl
cmc
iret
pusha
fiaddl
shrb
orl
icebp
mov
adc
cmpsl
jne
fcoms
fiaddl
rolb
fcmove
pushf
pushf
cs
add
aaa
in
out
xor
std
cmp
out
fs
adc
cmp
adc
lret
movsl
xacquire
and
stc
shrb
je
mov
test
or
addr16
pop
fldt
jge
xchg
or
inc
in
loopne
psrlw
ss
kmovw
addr16
or
adc
pop
popf
cmp
inc
test
lock
jb
inc
imul
aas
out
icebp
mov
mov
sbb
lock
push
loopne
loope
in
mov
dec
mov
stc
sub
out
into
sbb
dec
dec
and
adc
imul
inc
data16
cltd
lods
dec
outsl
inc
push
lods
pop
sbbb
call
inc
loopne
push
and
fsubs
jb
xchg
daa
hlt
out
in
pop
sub
inc
adcb
or
mov
fstpl
ljmp
pop
pop
mov
shll
sti
sbb
loop
jl
push
cmpsb
leave
push
push
adc
mov
inc
xchg
dec
sahf
aad
mov
int3
and
imul
push
lcall
dec
sbb
clc
push
in
scas
sub
and
or
sti
jno
sub
sub
sbb
adc
push
cmp
add
pop
or
push
cld
and
cmp
pop
aas
add
xchg
das
xchg
sub
push
xchg
cmp
notb
test
je
data16
jnp
inc
or
out
xchg
pop
jno
popf
xchg
push
fiadds
mov
pop
jb
jae
push
aaa
add
adc
jo
sub
dec
mov
mov
and
mov
test
mov
push
push
and
xchg
es
js
scas
call
inc
jle
sub
xor
mov
mov
dec
cmp
das
ja
mov
hlt
xor
movzwl
and
aaa
movsb
cmp
xor
xchg
cwtl
bnd
lahf
loope
call
es
cmp
jecxz
adc
aam
pop
std
test
and
adc
mov
adc
push
dec
xor
ja
es
pushf
jg
mov
into
rcll
jecxz
gs
dec
andb
mov
push
add
jo
into
lret
sahf
arpl
clc
mov
out
jp
mov
int
mov
insb
push
sbb
fs
dec
xlat
cs
add
push
inc
mov
dec
outsb
icebp
adc
jns
add
pop
push
dec
loopne
fstps
xchg
das
scas
xor
js
out
cmp
mov
lahf
adc
imul
cld
inc
pusha
popa
pop
movsb
pop
mov
cwtl
and
dec
cltd
clc
sub
call
pop
pop
jecxz
lahf
lahf
lods
sbb
adc
sbb
pushl
mov
testb
ds
jb
nop
ret
mov
sub
sti
cmpsb
dec
sbb
cmp
mov
sbb
inc
sub
jmp
movsb
and
cmpsl
nop
jo
fcmovu
hlt
mov
or
mov
les
data16
mov
aad
cs
test
hlt
jmp
daa
test
scas
cli
xchg
mov
fisttpl
jae
xor
xor
dec
push
inc
mov
repz
push
aad
sub
gs
sysret
shr
mov
mov
add
mov
outsl
fdivrp
and
leave
stc
aas
jnp
and
sarb
fildl
dec
adc
xabort
ja
or
rcll
insl
and
call
xchg
push
mov
movsb
adc
or
nop
push
aad
add
jno
dec
pop
mov
std
xor
add
lret
sti
sub
in
je
aaa
cmp
fbld
jg
stos
mov
sub
fiaddl
mov
aas
xchg
andb
mov
fisubrs
les
mov
call
jbe
or
dec
jle
dec
sub
test
fwait
test
dec
fmull
xchg
rol
dec
rcll
fwait
xchg
mov
je
loop
pop
cli
and
insb
sbb
pusha
pop
jl
scas
loopne
dec
sub
popf
in
and
pop
repnz
jbe
leave
xor
sbb
adc
out
push
cmp
dec
repnz
dec
fs
inc
bound
mov
test
aad
movsb
out
dec
jo
push
jp
mov
jge
js
adc
in
inc
xorb
xchg
in
jg
hlt
bound
scas
fmuls
push
testb
aad
gs
dec
add
add
mov
scas
dec
inc
out
mov
fisubl
mov
sub
loope
push
jb
jae
or
clc
dec
sbb
aad
sbb
ss
pop
jno
pop
mulb
mov
push
push
mov
int3
cmp
inc
push
jg
stc
xchg
jle
jp
pop
dec
adc
loop
mov
js
push
jle
in
add
and
cmp
inc
shlb
pop
adc
push
and
outsl
inc
test
dec
inc
cmpsl
hlt
outsb
adc
pop
jp
in
cmp
out
push
push
xchg
mov
jge
add
mov
stos
mov
mov
and
sub
shlb
paddw
sbb
ret
cmpb
push
xor
pop
xchg
add
jecxz,pn
out
adc
fistl
fnstsw
aam
aad
mov
divb
pop
xchg
imul
sbb
hlt
mov
adc
push
push
movsb
xor
lock
mov
inc
stos
jo
pop
add
cli
mov
stos
stc
idivl
movsl
scas
pop
and
sub
add
xchg
and
movsb
jnp
pushf
xorb
insl
fsubrl
adcl
mov
lods
xchg
aaa
out
lret
leave
faddl
jnp
ret
repz
rolb
mov
mov
aas
and
outsb
scas
mov
push
lret
aad
mov
push
loope
mov
jns
jbe
cmp
push
or
cmpsl
fmuls
sub
push
cmp
mov
cmp
aas
std
pop
fisttps
or
mov
dec
out
xorl
ret
aas
ds
cmp
inc
push
jmp
out
dec
das
pop
pop
and
adc
enter
cwtl
aaa
xchg
mov
push
rol
ljmp
imulb
inc
jbe
data16
cmpsl
sahf
lock
push
out
dec
and
mov
push
out
push
je
push
int
dec
gs
or
ficompl
insb
aam
dec
push
cld
mov
dec
repnz
jge
mov
xor
xchg
aad
or
mulb
jp
cli
negb
jne
cmp
jne
lods
push
jge
dec
cmpl
dec
pop
scas
cmpsb
dec
xchg
mov
fistl
push
and
movsb
fnstcw
in
cmp
xchg
xchg
orl
inc
imul
sub
enter
pop
inc
stc
sub
xchg
mov
stos
pushf
cwtl
data16
scas
negl
mov
inc
jmp
xorl
les
push
xchg
pusha
insb
out
jp
add
cli
xchg
popf
in
out
mov
mov
sbb
jb
movsb
fstpt
push
ja
or
lods
dec
cmp
repz
shl
mov
jmp
or
xchg
fiaddl
pushf
popf
push
pop
dec
and
push
pop
sub
pop
adc
jbe
dec
lea
xor
xchg
or
inc
mov
pop
shlb
adc
test
pop
rcr
cmp
ret
pop
mov
sub
ja
sub
adc
fnstenv
lcall
rclb
push
sub
lcall
in
fnstenv
popa
ret
in
push
pusha
stos
xchg
adc
pop
push
jbe
xchg
mov
stos
push
push
jo
stc
in
das
std
fists
sbb
popa
lret
out
in
push
data16
in
aaa
add
sahf
sub
fnstenv
and
lcall
sub
arpl
inc
insl
mov
insb
stos
test
scas
lds
pushf
cmpsb
out
insb
sbb
or
in
sbb
mov
fmulp
sarb
out
push
enter
xchg
xlat
das
cmpsl
sbb
orb
pop
jmp
mov
xor
jno
test
add
in
and
xor
pop
lcall
gs
xchg
test
adc
push
mov
vaddsubps
fdivs
jmp
lds
push
gs
dec
mov
pop
adc
inc
arpl
pusha
adc
adc
inc
mov
or
jge
and
lods
inc
sbb
cs
es
repz
lds
and
and
mov
test
ljmp
sbb
scas
jl
jno
sbb
and
cmp
xor
mov
fucomi
rorb
negb
outsl
movsl
push
add
jo
cmc
push
loop
aaa
je
sahf
addr16
arpl
xor
lret
push
insl
gs
fldenv
dec
pop
mov
pop
test
mov
mov
mov
mov
call
outsl
mov
dec
xor
lock
js
xchg
bound
xchg
inc
dec
leave
mov
mov
cmpsl
inc
pusha
mov
jmp
clc
xchg
aam
mov
es
push
adcl
das
dec
jo
in
sub
stos
sub
and
movsb
jb
sub
nop
and
dec
out
cmpsl
jo
or
repnz
ret
stos
std
lcall
adc
popa
sub
fsubl
sbb
or
clc
js
in
repnz
push
daa
stc
inc
mov
xlat
test
ljmp
ret
fistpll
cmpl
sti
mov
adc
sub
ret
jo
adc
mov
shrl
or
cmp
imul
jnp
xor
stc
jecxz
xchg
inc
lods
rcll
inc
sbb
dec
dec
popf
sbb
xchg
mov
outsb
scas
push
xlat
loope
mov
stc
add
mov
dec
mov
mov
mov
inc
repz
je
into
pop
inc
jl
and
int3
pop
rcl
fnstenv
sbb
insl
or
or
add
pop
mov
loopne
mov
les
mov
clc
mov
mov
pop
outsb
pushf
nop
insl
inc
mov
xchg
fdivrs
mov
in
sbb
test
sbb
jb
push
je,pn
hlt
out
movsl
nop
adc
jne
inc
js
jbe
cmp
jae
mov
sti
out
pop
and
vpshlb
imul
jnp
adc
sub
mov
outsl
cmp
inc
pushf
out
jns
sub
or
mov
xchg
mov
dec
mov
stos
lcall
lods
in
into
ret
jge
dec
mov
insb
or
sub
or
stos
add
push
mov
packuswb
or
fs
xchg
mov
test
fwait
pop
cmp
fistpll
sbb
inc
cwtl
sbb
xlat
xchg
aas
sarb
les
push
mov
popf
adc
inc
sbb
stos
fs
inc
lods
xchg
mov
push
ret
inc
cld
cwtl
xor
push
imul
add
out
mov
sbb
inc
mov
loope
insl
pop
push
jg
push
and
add
scas
adc
jp
push
mov
orl
cmpsb
inc
or
cmp
stc
repz
negw
into
jo
das
adc
loop
or
sahf
push
or
lods
mov
dec
sub
shld
mov
cs
jae
jp
loope
rclb
jae
in
xlat
sbb
mov
int3
test
adc
or
sti
dec
and
push
jnp
shrl
and
sub
fwait
fwait
add
pop
clc
mov
insl
loope
or
jne
pop
dec
inc
fidivs
sbb
loopne
mov
adc
popa
sub
inc
mov
sbb
int3
adc
fiaddl
mov
dec
xchg
mov
aaa
or
insl
mov
adc
insl
iret
aaa
inc
cmp
arpl
sub
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fstpl
pop
addl
xor
mov
mov
mov
pop
fwait
rcrl
mov
shlb
int3
mov
inc
cmp
sbb
ss
lock
aam
push
imull
xor
test
jae
lods
sbb
push
repz
pop
mov
mov
sbb
dec
test
or
popf
mov
and
out
push
mov
aas
mov
dec
push
movsb
jne
movsl
mov
loope
mov
dec
ds
sbb
pop
or
mov
pop
lods
or
xor
xchg
in
mov
scas
les
data16
ret
or
cmp
sbb
sar
mov
fwait
rorl
nop
dec
sub
call
int3
push
stos
jmp
and
sub
roll
scas
jp
xchg
dec
call
icebp
cmpsb
mov
pop
xor
adc
rorl
lds
xor
mov
or
push
test
cmp
daa
mov
js
mov
repnz
sub
lods
lock
cmpb
xchg
push
pop
mov
add
and
in
movsl
pop
arpl
stc
adc
or
js
and
out
xchg
test
rcrb
mov
aad
aas
imul
inc
jne
ret
mov
inc
xchg
xabort
out
into
iret
icebp
mov
and
mov
jle
aad
loop
ja
in
sbb
int
mull
sbb
jmp
imul
jno
push
mov
fcoml
pop
xchg
pshufw
mov
pop
outsb
sub
pop
data16
shlb
ret
lret
movl
inc
and
mov
addb
sti
mov
xor
loop
pop
insl
mov
leave
lret
mov
scas
fcoms
lcall
push
mov
loope
lret
into
xchg
sub
das
clc
rorb
lret
ss
sbb
sub
mov
push
add
cmpsb
sbb
loop
adc
mov
lcall
mov
movsb
pop
and
inc
push
push
out
movsb
into
cmpl
pop
cwtl
test
lcall
add
add
std
repz
fnstcw
mov
and
ds
clc
test
clc
and
xchg
pop
aad
mov
nop
cmpsb
push
mov
mov
fistl
and
rolb
jle
ja
pop
mov
add
pop
add
push
aaa
mov
cli
rolb
pop
push
and
imul
daa
or
mov
fidivrl
in
push
lret
mov
iret
sub
push
or
adcb
pop
test
inc
pop
shrl
pop
jne
leave
dec
int3
movsl
mov
pop
dec
or
dec
xor
cmp
xor
push
mov
data16
scas
repz
fwait
dec
inc
mov
nop
sbb
into
push
lcall
inc
adc
in
xchg
scas
js
jecxz
sbb
fwait
pop
dec
fdivrl
clc
jns
adc
test
scas
adc
jl
cmp
rcll
push
movsl
or
inc
mov
jb
fwait
mov
movsl
pushf
psubsw
jo
dec
push
cld
pop
add
icebp
jp
push
and
mov
push
fwait
push
xor
jl
add
scas
mov
sahf
mov
sbbb
movsl
mov
dec
mov
subl
test
repz
pushf
mov
aam
jnp
push
inc
rcrl
add
cld
mov
jno
cmpsl
adc
xor
inc
jge
dec
push
xor
stc
adc
xchg
sub
gs
leave
test
xchg
sbb
inc
push
nop
addb
repnz
mov
mov
xchg
add
pop
scas
dec
pop
dec
mov
js
popf
push
cmp
insl
jle
mov
inc
adc
jle
pop
mov
jge
add
sahf
call
dec
lret
nop
jg
mov
push
mov
aaa
mov
icebp
xor
inc
inc
mov
les
ds
cmpsb
repnz
sbb
mov
sub
cmp
test
xchg
shl
fstl
mov
push
xchg
out
test
decl
fwait
out
adc
fiadds
iret
mov
shll
jmp
call
inc
xor
cwtl
push
xor
leave
scas
xchg
jle
push
xchg
icebp
ss
fwait
push
mov
xchg
push
pop
stos
int3
and
insb
mov
xchg
xchg
out
dec
mov
jae
dec
pop
mov
and
dec
push
xchg
out
xor
sbb
mov
sbbl
movsl
push
cmpsl
lret
test
dec
pop
xlat
ds
sbb
movsl
icebp
dec
ljmp
out
ret
push
orl
imul
loop
dec
cmp
stos
pop
shlb
imul
push
and
cmp
cmc
ret
aad
mov
xchg
sub
mov
shll
loopne
sbb
repz
inc
scas
inc
lahf
mov
pop
jae
repnz
test
out
xchg
xchg
push
mov
xchg
or
mov
dec
out
rclb
xor
lods
xchg
jge
inc
push
pop
addr16
divb
cld
out
loop
xchg
or
inc
addl
leave
das
aaa
je
insl
in
ror
movsl
ds
and
shrb
push
sbb
bound
inc
or
addb
mov
push
push
pushl
cmp
mov
insl
jle
leave
icebp
jns
and
dec
xchg
call
ja
mov
roll
jns
xchg
dec
std
cld
fidivs
mov
inc
movlps
into
lret
inc
test
mov
xlat
xchg
roll
sub
test
mov
cmp
test
cltd
jl
dec
fsubl
pop
leave
adc
call
lcall
fldenv
cs
pop
clc
dec
cld
jno
pusha
push
inc
mov
rolb
jae
lea
popf
in
nop
sub
pop
pop
add
xor
cmp
pop
imul
iret
leave
testl
or
into
jmp
or
movsl
or
cltd
inc
dec
aad
out
jmp
sbb
mov
xchg
push
fbld
aaa
rcl
lret
pop
mov
lahf
and
jns
fsubr
inc
leave
mov
sahf
push
mov
adc
shll
xchg
cmp
jo
dec
insl
imul
cmp
mov
loop
dec
inc
xchg
faddl
inc
cmp
mov
jo
int
xor
sub
int3
adc
test
jmp
and
or
lods
pop
out
scas
inc
cmp
mov
daa
lock
cmp
test
mov
sbb
orb
out
rcrl
ds
int
push
stos
or
jg
scas
out
loopne
movsb
dec
testb
add
adc
fcomi
add
pop
orl
outsb
lea
xchg
orl
mov
pop
sahf
loop
movsb
pop
mov
or
enter
divb
xor
data16
mov
or
call
aam
push
pop
mov
or
sbb
cmp
mov
loope
inc
cli
cmpsl
call
jge
lds
test
jae
or
jmp
into
fsubrs
cmp
orl
repnz
leave
push
lods
adc
jmp
cld
std
pop
mov
in
popa
pushf
fnstenv
inc
je
ficoml
xor
insb
adcb
xor
xor
icebp
adc
and
into
hlt
in
test
lods
push
loopne
inc
sub
or
add
pusha
loopne
or
es
push
push
add
adc
jp
mov
ficoml
loope
cltd
xchg
in
and
addr16
aaa
dec
test
mov
aas
or
arpl
fwait
xlat
sub
sub
std
mov
add
movsl
loop
push
xchg
dec
cld
xchg
test
mov
lret
out
ret
mov
push
dec
dec
ds
lock
sbb
lock
push
xor
rcl
xor
enter
pop
lods
cwtl
cmc
sub
call
inc
xchg
add
sbb
movsb
in
jl
pop
jp
jo
mov
mov
adc
lcall
popw
mov
mov
cld
inc
and
push
shrl
ret
dec
je
jo
adc
lret
stos
jbe
rol
fisttps
sub
mov
rolb
dec
rolb
popa
lahf
outsb
push
sbb
ljmp
mov
leave
adc
mov
jnp
lods
pusha
out
pop
sub
daa
mov
testb
test
or
fsubl
mov
decb
xor
cmp
adc
mov
mov
mov
cmpsl
xchg
add
icebp
lret
xchg
jo
lods
xor
test
sbb
daa
and
test
ds
sbb
push
into
add
inc
subb
add
ds
loop
pop
mov
fcmovbe
roll
out
xor
std
in
fcoml
insb
fs
icebp
and
mov
or
outsl
dec
enter
iret
mov
adc
out
es
mov
push
jecxz
push
les
pop
xchg
enter
fs
xchg
loopne
jmp
push
out
pop
es
cmp
push
ret
mov
inc
adc
sub
mov
or
icebp
push
xor
js
popf
mov
popf
add
mov
mov
mov
je
cwtl
loopne
jnp
sahf
cmpsb
mov
add
das
sbb
lods
push
push
push
xchg
push
popa
and
or
pop
mov
adc
aad
lret
pop
jp
add
pusha
iret
lea
pop
addb
ror
mov
jle
cld
arpl
add
movsl
or
ret
jge
sub
test
push
jnp
sub
jbe
cmc
imul
andl
mov
outsb
dec
or
repz
scas
mov
out
jg
fucom
xchg
les
cmp
jle
adc
roll
sub
enter
mov
mov
xchg
xchg
jmp
dec
shll
imul
test
std
int
jecxz
xchg
push
mov
mov
inc
xor
xor
xor
mov
sbb
das
xor
sub
mov
int3
out
cmpb
jnp
xor
and
mov
lret
adc
inc
imul
push
add
iret
mov
in
inc
adc
mov
shll
mov
mov
scas
movsl
cmp
pop
lods
clc
jnp
sub
inc
test
mov
lret
in
loope
sahf
cwtl
adc
inc
pop
das
testl
repnz
push
push
sbb
iret
push
and
leave
inc
sar
or
xlat
clc
movsb
cltd
shrb
aad
add
out
mov
popf
sti
clc
jle
push
outsb
mov
repz
push
and
mov
jp
push
pop
xchg
push
jae
jmp
adc
pusha
dec
mov
cmc
mov
imul
push
or
fisttpll
xlat
mov
enter
push
mov
rolb
out
pop
sahf
xchg
cmp
push
outsl
inc
fwait
dec
cli
rcrl
repnz
and
lret
inc
rolb
xor
test
push
sub
mov
imul
and
push
pop
mov
lods
push
xchg
sub
xchg
sbb
pop
push
jbe
rcrl
dec
std
lcall
sbb
fdivrp
mov
cmpsb
arpl
mov
rcrb
cmp
or
sarb
and
pop
adc
sti
addr16
lret
in
xor
inc
add
jne
rcrl
adc
scas
pop
inc
push
ja
pop
pop
iret
mov
test
popa
lods
inc
ds
call
int
xchg
or
dec
or
mov
outsb
mov
mov
cmp
push
test
dec
fadd
jae
mov
iret
and
jnp
inc
push
cmc
mov
jp
push
push
xor
scas
mov
scas
sub
clc
dec
test
xchg
mov
dec
xchg
test
or
jmp
mov
jmp
cmp
test
aad
or
mov
sub
insb
mov
addl
jp
mov
ret
adc
out
mov
push
icebp
xchg
sub
mov
xchg
xor
sbb
icebp
movsb
push
and
insl
adc
jecxz
aad
insb
imul
int3
sbb
loope
mov
sbb
xchg
cli
lahf
adc
fs
ss
cmp
mov
outsl
test
inc
or
jae
insb
jno
sbb
int
lds
incb
cld
mov
mov
dec
icebp
mov
sbb
mov
dec
push
in
adc
mov
inc
adc
mov
push
dec
jno
clc
pop
jne
fs
fdivl
cmp
pop
mov
dec
adc
fwait
shr
arpl
or
adc
sahf
add
out
shrl
call
jg
iret
or
dec
pusha
mov
xchg
pop
xor
and
mov
out
cltd
incl
dec
mov
les
mov
outsb
xchg
fs
outsl
mov
shrb
pushf
sahf
data16
or
sbb
jo
stc
pop
enter
icebp
cli
pop
cli
jmp
mov
sbb
shll
dec
das
sub
fldcw
or
sub
addr16
sub
adc
mov
je
xor
cmp
add
cwtl
popa
cwtl
pop
loop
pop
insb
int
cmp
out
sbb
leave
scas
xchg
mov
dec
jbe
adc
sbb
and
sbbb
js
cli
out
addb
clc
jp
or
jnp
jp
das
repz
jae
xor
and
and
fsts
pop
call
pop
pop
out
push
push
xor
cmpsl
jnp
out
cs
inc
xchg
sub
in
push
loop
jp
fimull
push
pushf
mov
pop
mov
xor
loopne
imul
xlat
ljmp
or
sbb
pusha
jle
cli
jl
stos
ss
or
push
jbe
iret
arpl
testb
sbb
lods
mov
and
in
mov
out
cmp
cs
imul
ds
adc
push
lahf
dec
ljmp
arpl
gs
lods
rorb
xchg
push
add
and
mov
sub
xor
clc
stos
jo
jo
pop
movsl
adc
jge
xor
jno
mov
xor
aaa
sbb
out
push
cmp
shr
in
sbb
jno
push
xchg
adc
or
imul
fsts
lret
bound
js
lods
lret
jo
add
or
je
sbb
cld
imul
mov
mov
pop
push
xor
scas
xchg
stos
jl
pop
int
xchg
out
stos
aaa
fsubs
mov
and
dec
cmc
sahf
outsl
call
dec
sub
loopne
xchg
rclb
fists
inc
inc
imul
mov
nop
add
xor
dec
pop
dec
mov
in
in
out
push
out
sbb
mov
xlat
and
cmp
jne
dec
lcall
setns
cmp
movsb
cs
lock
push
and
fsubl
cmp
outsb
push
or
mov
rorl
cmp
jg
dec
xor
cmp
pushf
nop
enter
lret
mov
jbe
cmpl
inc
aam
pop
sti
xor
mov
or
pushf
fldl
mov
push
sahf
push
inc
dec
rcl
jp
sbb
imull
sub
fsubrp
push
ds
int3
xor
xor
loope
jl
mov
add
ljmp
cld
fidivs
iret
hlt
cmp
aam
mov
adc
and
add
leave
aas
mov
or
and
leave
jae
inc
fnsave
in
pop
call
pop
push
in
pop
dec
or
dec
sub
dec
and
xchg
and
mov
in
cwtl
xchg
leave
outsb
mov
sub
and
sub
jb
adc
iret
addr16
lea
addr16
enter
xor
jp
popa
inc
in
ret
and
pop
mov
sub
mov
pop
mov
mov
daa
mov
out
std
int3
fisubrl
pop
adcl
outsb
mov
sub
cmp
push
push
xor
mov
jno
movsb
int3
adc
lods
hlt
shl
dec
ljmp
push
inc
xchg
cmpsb
ja
mov
mov
add
pop
cltd
leave
ret
push
mov
sub
out
outsl
push
xor
adc
popa
push
inc
bswap
cmpsl
lods
aad
aas
xchg
inc
cmp
ss
mov
jmp
loopne
sbb
adc
or
std
xchg
popf
pop
pop
mov
lods
je
out
sbbl
sti
xor
lahf
inc
or
or
xchg
clc
and
loope
fdivrs
jo
jnp
and
dec
sub
in
in
push
test
repnz
jnp
mov
ret
inc
adc
lods
insb
cmp
push
inc
inc
insl
popf
pop
inc
jo
mov
mov
dec
and
add
or
jbe
out
pushf
mov
sbb
lock
jns
cld
adc
jnp
ret
mov
mov
test
or
pop
cmpb
sbb
dec
repnz
jae
sub
les
pop
sbb
sub
lret
pop
inc
push
mov
pop
adcb
int
jbe
jge
daa
call
sbb
sbb
push
cmp
cmp
add
push
arpl
adc
lret
es
test
jle
jbe
ja
mov
inc
xchg
fwait
gs
fists
cmp
scas
lock
enter
sub
fwait
xor
adc
loop
add
sub
mov
cmc
adc
mov
cmpb
cwtl
outsl
test
repz
fnsave
jmp
mov
stos
xor
jne
popa
xchg
sub
or
loope
inc
pop
lahf
jnp
fwait
mov
lret
add
loopne
loop
outsl
dec
push
xlat
mov
push
les
lahf
or
mov
xor
test
lods
add
jg
push
xor
xchg
lds
sbb
jns
cmp
cltd
jno
cmpl
inc
xlat
scas
jno
ljmp
pop
jl
lods
in
pushf
or
inc
imul
lahf
lahf
out
dec
in
lods
push
sbb
daa
adc
hlt
movsl
js
inc
pop
imul
scas
cmp
xor
jle
lret
jno
mov
inc
and
scas
loope
scas
jo
test
mov
mov
movl
repnz
and
daa
add
dec
daa
test
xchg
fcompl
pop
mov
cli
jg
mov
in
sti
push
add
xor
addr16
aas
dec
mov
lahf
dec
mov
sbb
mov
dec
lret
jbe
sar
aaa
sub
gs
cltd
sub
jg
mov
or
lahf
and
xor
cld
jg
sub
das
rolb
or
mov
stos
xchg
lds
and
push
mov
fbld
ljmp
or
enter
mov
out
outsb
scas
and
pop
add
jecxz
or
test
cmc
fstpl
cmp
call
pusha
call
add
xor
xchg
pminsw
stc
add
jne
es
dec
pop
scas
sahf
jne
fabs
push
inc
and
or
inc
movsl
ret
jge
pop
adc
mov
mov
pop
push
imul
push
pop
daa
push
cmp
fbld
dec
pop
iret
or
test
pop
aam
sbb
or
leave
lcall
repz
subl
test
push
icebp
lret
jbe
jo
xchg
mov
lds
sub
push
mov
adc
imul
sub
xchg
imul
iret
and
test
mov
pushf
out
xlat
movsl
push
dec
out
inc
sbb
or
out
insl
jnp
jbe
cmp
adc
sbb
inc
mov
sub
sub
sub
test
jo
mov
std
or
inc
fsubrs
push
mov
test
adc
std
fidivs
sbb
adc
rolb
int
insl
enter
push
movsb
movsl
jle
ja
lahf
into
cmp
das
bound
outsl
stos
repz
gs
nop
push
js
jae
movsl
push
jno
lods
add
mov
and
insl
lahf
lods
push
pushf
mov
pop
loope
incb
dec
mov
mov
mov
pop
insl
repnz
enter
xchg
scas
push
pop
sarb
push
jne
imul
lds
iret
fistps
out
aad
cwtl
movb
fs
in
xchg
mov
repz
mov
xchg
add
and
inc
adc
imul
cmp
xor
mov
mov
or
out
mov
test
mov
addl
mov
arpl
xor
push
je
test
xchg
adc
testb
fs
mov
jle
rol
xor
adc
int3
xchg
loop
outsb
cmpb
xchg
cmpb
shll
fisubrs
and
sbb
idivb
addr16
cwtl
jmp
lret
ja
cs
test
sbb
aad
jp
mov
das
mov
decb
mov
test
adcl
jb
cmp
dec
push
sub
jno
xor
outsb
sbb
iret
push
out
insb
add
mov
int
in
cmp
inc
cmp
in
xchg
popf
lods
push
sub
in
movsl
aas
mov
xlat
arpl
dec
lret
out
jmp
push
shlb
or
ds
test
xchg
repz
call
bound
mov
mov
into
dec
fmull
xchg
and
xor
cmc
or
jmp
frstor
test
lcall
inc
mov
fsubrs
fcomp
jnp
push
mov
xchg
jnp
hlt
sub
mov
filds
add
enter
pop
ret
int3
aas
sub
rcrl
xchg
jecxz
int
callw
mov
mov
ret
cmp
loopne
add
test
lock
mov
clc
mov
in
ljmp
push
adc
add
pop
rorb
cltd
fs
mov
xor
je
test
test
imul
in
aaa
inc
fsts
es
pop
fcomps
pusha
mov
outsb
out
cmc
mov
sbb
and
push
sahf
ret
pop
sub
xchg
or
pop
push
mov
ror
in
and
add
bound
jne
out
loopne
pop
int
mov
cmp
and
arpl
loop
xor
ss
fisubrl
mov
ss
cmc
rolb
addr16
jl
inc
test
jl
lods
dec
or
mov
add
ret
leave
adc
int
mull
std
gs
rorb
pop
mov
fcmovbe
cmp
aas
leave
daa
add
insl
bound
push
mov
cmpsl
sub
rcrb
or
jno
insb
loop
out
or
arpl
repz
hlt
bswap
jne
mov
jle
pop
jl
or
call
sub
cmp
cli
and
fdivs
xor
jbe
shlb
in
out
rclb
jae
jg
fimuls
cmp
xor
addb
and
lret
std
jo
dec
cmp
mov
inc
pop
mov
in
sub
and
in
mov
mov
jno
lods
xchg
jmp
popa
pusha
pop
js
inc
incb
lret
popf
inc
mov
lock
lock
loop
sub
cs
lcall
mov
xchg
nop
lcall
inc
cmp
outsl
sbbb
or
push
stos
add
sbb
push
int
icebp
xchg
cwtl
inc
sub
je
adc
imul
jno
in
shll
out
rolb
jle
insl
and
sbb
jns
mov
lods
testl
cs
xchg
xchg
ljmp
clc
mov
lahf
pop
mov
mov
and
dec
cmpsl
jne
dec
mov
int
cmp
mov
add
sub
lret
loopne
dec
dec
and
cmp
adc
mov
push
test
fcmovnb
cli
push
leave
cmpsb
add
pusha
add
jno
lea
arpl
mov
pop
pop
add
and
dec
loop
cmpsl
jmp
mov
stos
lods
cmp
sbb
xlat
enter
jmp
repnz
mov
into
xchg
faddl
das
popf
cmp
scas
fcomip
lcall
lahf
mov
cmp
cmp
fldcw
es
cmpb
fwait
jo
mov
in
xor
jb
mov
and
and
adc
mov
jmp
inc
stos
push
pop
push
enter
jb
cmp
jnp
loope
mov
imul
push
and
jl
xor
pop
dec
fs
dec
inc
jae
addl
push
jo
mov
sahf
mov
xchg
jl
lock
xor
loop
cmp
mov
add
out
test
mov
int
out
mov
add
rcrl
lods
daa
mov
inc
adc
add
jle
mov
add
xchg
dec
mov
cmp
es
enter
sbb
repnz
lahf
sbb
dec
push
cmp
xchg
pushf
pop
int3
mov
sbb
xor
pushf
or
xchg
fistpl
loopne
push
ljmp
sbb
add
lret
cld
pop
in
testb
jle
mov
push
jg
push
lods
pusha
sbb
iret
pop
inc
pop
mov
mov
jle
pop
int
stc
cmp
ds
push
cmp
dec
adc
or
mov
repnz
pop
mov
and
xchg
addr16
hlt
mov
shrl
stos
test
pusha
es
pop
icebp
fucomi
mov
scas
jo
add
mov
loope,pt
adc
loopne
loopne
shlb
shr
push
and
xchg
loopne
ret
mov
arpl
cmp
ja
stos
loopne
into
mov
sbb
mov
xchg
push
mov
mov
and
mov
and
jge
and
mov
imul
add
es
aaa
sub
cmp
xor
leave
mov
cmp
cmp
dec
mov
fcompl
inc
adc
mov
mov
jle
jg
mov
idiv
clc
repz
sbb
ss
or
loop
insb
adc
fwait
int
pop
out
shlb
nop
imul
or
ret
mov
in
jp
jae
sub
and
lcall
pop
cmpsb
andb
jecxz
xchg
xor
mov
rcrl
lea
pop
xor
sti
jne
movsb
sbbb
mov
jae
mov
sub
cmp
push
testb
loop
xchg
dec
push
imull
popf
cmp
sbb
loopne
pushf
shr
mov
dec
mov
ret
sbb
popa
add
mov
lods
xorb
enter
repnz
add
cmc
cli
mov
or
sub
aam
dec
mov
add
sub
push
notb
mov
imul
adc
stos
jae
fsubrl
jnp
push
and
sbb
jl
stc
nop
lds
add
testl
bound
jnp
jl
es
rol
pop
jnp
movq
sbb
iret
pusha
fsubp
add
fwait
cmp
mov
hlt
bound
push
shlb
fisubrl
clc
popf
inc
mov
dec
stc
add
adc
push
cmpsl
into
push
jbe
pop
push
pushf
fisttpll
push
in
push
dec
movsl
mov
mov
push
pop
shlb
in
push
sub
cmp
loop
adc
loope
in
das
lds
or
jg
aad
rol
mov
push
mov
loop
xlat
cmpsb
decb
pushf
insl
xchg
test
lods
outsb
clc
test
lock
in
je
and
inc
dec
outsl
push
cld
int3
xchg
lret
adc
mov
mov
sub
mov
xor
lds
and
in
cmc
fwait
icebp
or
mov
mov
xor
fcmove
adc
push
xlat
fnstsw
or
xor
fisubrl
daa
dec
gs
movsl
xchg
imul
mov
xchg
push
lret
cltd
ret
lret
test
push
or
cmp
ja
rolb
fstps
mov
and
push
cmp
int
or
dec
mov
call
call
and
and
add
pop
jo
lods
or
data16
and
pop
cmpsl
ret
xor
test
mov
dec
adc
in
les
jo
jmp
cmp
cmp
push
jne
mov
dec
xchg
xchg
repz
mov
pop
int3
mov
xor
pop
jne
enter
dec
pop
hlt
jle
dec
push
mov
shr
pusha
ret
cli
jns
rolb
out
cs
inc
fcoms
div
xchg
fdivs
cmp
jnp
idivl
and
aas
test
and
es
xor
jp
cmp
test
and
mov
sbb
cli
insb
pop
dec
inc
mov
push
mov
jge
xor
dec
out
icebp
ret
movsl
addl
sbb
jne
xor
or
xor
imul
mov
inc
imul
xor
pop
mov
lds
pop
or
dec
rclb
xor
int3
out
cmpsl
cltd
les
out
pushf
or
scas
and
push
ja
clc
std
or
or
xor
fnstcw
scas
inc
insl
shlb
insb
mov
test
cmpsb
repnz
cmpsl
pop
lahf
xchg
mov
rclb
test
push
test
in
int3
dec
in
shl
sarl
icebp
cs
pop
push
push
stos
mov
out
insb
jno
pop
int
mov
cmp
sar
mov
sub
jb
pop
jle
mov
or
xor
or
dec
std
add
cld
test
jmp
push
loop
imul
sti
mov
xor
popa
repnz
je
popa
lods
int
das
mov
jae
lcall
out
ret
cld
lret
xchg
or
sub
loopne
add
mov
mov
ss
xchg
push
aas
fstl
cmp
stos
mov
and
cwtl
sbb
cmpsl
test
sbb
out
mov
scas
push
fstpl
loopne
rorl
pop
mov
cmpl
lods
iret
xchg
cwtl
push
mov
sbb
xchg
pop
emms
lret
and
test
subl
stc
xchg
cli
loope
loopne
lret
mov
ficoms
sbb
add
or
rcrb
mov
mov
std
in
addl
scas
add
dec
in
inc
xor
lcall
pop
add
outsl
jmp
mov
push
sarb
cmp
push
sub
outsb
icebp
scas
insb
pop
repz
pop
popa
mov
mov
daa
adcl
cli
push
je
je
pop
outsb
jge
in
add
xchg
test
ja
imulb
fists
daa
inc
test
push
daa
jecxz
fisubs
movb
pop
rorl
xor
imul
mov
inc
jl
sbb
js
add
rcll
sub
movb
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
cmpsb
in
outsb
pop
cmp
andl
bound
push
add
stos
push
sbb
mov
int
das
nop
test
daa
lret
mov
int
and
lret
cmovle
and
xchg
xor
and
jecxz
je
shl
out
pop
jb
gs
rclb
scas
xchg
sub
outsb
xchg
push
push
mov
movsb
cmp
lock
push
mov
sbb
cmp
and
xor
sbb
cmp
fiaddl
nop
or
inc
push
roll
cwtl
cmp
rorb
std
ljmp
xchg
jecxz
clc
sub
push
jmp
arpl
shrl
imul
in
addr16
movsb
inc
add
and
xchg
sbbb
ficompl
jno
aad
lret
mov
dec
mov
jnp
lea
pop
lea
ret
sub
adcb
imull
mov
scas
xlat
add
jmp
mov
dec
jmp
pop
push
sub
test
pusha
cmp
mov
iret
shll
sub
pop
inc
popf
push
fisubl
ljmp
scas
xchg
mov
in
fucomi
adc
lock
and
or
and
cli
fidivrl
cmpsl
nop
cmpsb
dec
push
mov
cmp
dec
mov
jno
loopne
add
adc
lret
dec
cld
xor
jne
fldcw
jmp
xlat
dec
jo
push
mov
xchg
mov
lods
push
movsb
mov
dec
loope
xchg
outsl
mov
ljmp
aaa
push
mov
lods
and
ret
jns
ret
pop
jl
adc
cmc
jns
in
xchg
int
pushl
stos
test
xor
aam
test
cmp
lods
sbb
jno
mov
gs
imul
push
push
mov
shll
movsb
mov
push
out
fstpt
adc
shr
movsb
aam
jg
mov
in
lea
lcall
sar
inc
out
das
outsl
jnp
xchg
mov
in
stos
int
lea
mov
adc
es
stos
shlb
jns
imul
xor
lret
inc
js
sbbb
mov
and
xor
add
inc
outsb
lods
test
mov
cmp
fs
das
sub
out
mov
insb
xor
mov
sti
jl
popw
lcall
rcll
lock
bound
adc
jmp
jb
pop
int3
cmc
push
imul
adc
je
popf
xchg
mov
jmp
push
xor
mov
outsb
pop
stc
imul
inc
pop
mov
adc
mov
fyl2xp1
or
sub
ret
push
int3
ret
gs
sbb
incb
jns
push
pop
enter
fninit
leave
or
cmp
test
inc
es
sub
andb
xlat
fnsave
subl
or
mov
inc
xor
es
pand
pop
and
out
pop
js
and
xchg
lods
cmp
rorl
testb
jbe
jp
inc
jle
or
movsl
out
adc
insl
je
out
cmpsl
mov
push
xor
rcr
mov
out
iret
adc
dec
leave
dec
stc
xor
cmpsb
aaa
test
push
and
cli
pop
sbb
int3
xorl
lock
dec
adc
insl
xor
daa
rcrb
stos
mov
ds
fcoml
inc
bound
jmp
xlat
stos
dec
repnz
mov
xor
ja
fbstp
ljmp
loop
push
test
mov
cwtl
mov
sti
gs
cld
ret
sar
into
jl
add
mov
adc
leave
push
fsubs
cmp
jns
cmpsb
push
mov
mov
clc
add
aam
jns
insl
das
dec
xor
lea
hlt
sbb
and
mov
push
jg
or
sbb
out
popa
hlt
xchg
mov
dec
dec
and
push
rol
sub
adc
cmp
loop
sub
cmp
inc
shr
lock
fsubs
mov
fwait
call
xor
xlat
adc
or
mov
popf
mov
add
sub
mov
mov
and
mov
outsl
into
hlt
pop
test
mov
aad
dec
outsb
mov
int3
je
movsb
push
iret
inc
fimull
cmp
aad
mov
gs
jmp
lds
out
je
sub
push
or
push
sbb
xchg
adc
cmpsb
sar
pop
idivb
in
xchg
inc
mov
mov
aaa
push
outsb
jo
xchg
xor
fnstsw
les
mov
gs
and
shlb
push
pop
and
mov
xor
out
hlt
jecxz
and
and
xor
mov
movsl
popf
push
adc
and
in
mov
add
mov
aaa
mov
pop
sub
test
bound
mov
inc
and
and
sbb
inc
xchg
insb
and
pop
mov
dec
sti
in
addr16
insl
jae
add
dec
lock
int
mov
lret
lahf
pop
push
hlt
dec
unpckhps
dec
xor
add
xchg
xchg
std
inc
pop
or
aaa
cmp
mov
out
lea
insb
and
movsb
mov
out
pop
jae
iret
iret
xchg
pop
mov
and
inc
push
sub
shr
cld
aad
adc
movsb
xlat
cmpsb
mov
aam
dec
xchg
cmp
mov
dec
add
mov
cs
pop
push
ljmp
arpl
mov
call
rep
jecxz
mov
outsb
or
mov
pop
arpl
fidivrs
notb
xchg
jb
test
push
in
dec
mov
jge
pushf
aaa
sbb
imul
mov
jl
out
std
rclb
fucomp
xor
dec
cmp
pop
shlb
fidivrl
sahf
scas
pop
or
daa
je
and
bound
das
cmc
shlb
or
mov
in
and
cmp
sbb
jo
and
dec
push
fidivs
pop
dec
in
divb
sbb
or
inc
addr16
and
fs
dec
sub
cli
scas
and
mov
cmpb
addr16
xchg
pushf
jne
movsl
ds
jmp
sbb
pop
pop
xor
dec
pop
push
jne
dec
es
loope
cmp
orb
les
sbb
adc
or
inc
cmp
pop
inc
cli
mov
imul
lret
into
sub
cmc
push
fsubrl
ret
out
push
arpl
fmuls
in
xlat
push
imul
add
cmpsl
dec
inc
shll
icebp
sti
jle
and
jle
jp
ficompl
cmp
add
jb
or
cltd
sbb
testb
lds
sub
sarb
push
push
push
jmp
or
sub
mov
or
xchg
mov
lcall
and
ss
cmpb
popf
mov
and
xor
aas
mov
loopne
mov
mov
sub
mov
lea
adc
push
out
pusha
cld
mov
clc
test
jo
inc
push
jae
push
sub
or
lcall
test
lea
mov
xchg
cwtl
jmp
pop
je
pop
and
out
cmp
pop
jmp
popf
es
arpl
sbb
pop
or
jg
aad
ror
xchg
ret
jo
bound
mov
mov
push
mov
sarb
enter
jge
nop
fldt
cmp
sbb
aas
fwait
aaa
cmc
mov
insl
push
mov
and
xor
movsl
pop
imul
sub
jg
push
jbe
in
aas
or
fwait
jns
push
xchg
inc
aad
mov
push
add
and
jecxz
arpl
adc
into
and
int
dec
push
pop
sub
rclb
push
outsb
mov
pop
jbe
bound
cltd
push
and
out
mov
xor
shr
inc
fs
ret
or
jae
sub
popf
mov
sbb
iret
inc
sti
loope
sbb
ljmp
out
push
aad
cld
xor
aam
jg
shr
scas
test
cli
mov
jns
int3
push
push
push
mov
add
cmc
or
addr16
push
jmp
or
lret
sub
inc
inc
mov
mov
lea
and
outsb
mov
mov
stc
cmp
out
mov
sub
jb
pop
adc
ja
insl
push
lock
pop
test
mov
xchg
iret
push
push
push
sub
shlb
add
mov
je
cmp
sbb
out
icebp
pop
mov
les
xor
cli
push
ret
out
cs
push
ja
arpl
and
mov
es
cs
cmp
movsb
pop
sub
loope
sub
jne
mov
or
or
fnsave
stos
push
sub
xchg
in
xchg
pop
ret
fs
jne
mov
fcoml
movsb
sbb
popf
push
mov
clc
in
inc
dec
cmp
pop
push
push
add
mov
dec
mov
mov
cmp
outsb
inc
lds
cwtl
inc
inc
xor
pop
xor
stos
xchg
cmpsb
pop
stc
xchg
sbb
fildll
out
cmp
shll
loope
bnd
stos
loope
ficoms
out
xchg
push
push
pop
int
pop
fcoml
stos
lcall
mov
mov
push
sub
mov
js
sbbb
dec
jp
sbb
mov
orl
mov
pop
adc
lds
lret
in
fldl
push
into
mov
jmp
mov
or
cmp
inc
into
mov
push
movsl
push
push
movsb
test
lahf
lds
push
pop
xlat
push
jecxz
dec
cld
popf
cmc
pop
or
ss
rorl
add
pop
jmp
icebp
pop
xchg
pop
fidivl
dec
lea
pop
cltd
pop
mov
hlt
ljmp
in
test
jns
mov
scas
dec
mov
xchg
mov
xchg
cltd
fisubs
push
mov
ficoml
in
jge
push
push
pop
mov
and
ljmp
xchg
popa
andb
popf
sub
es
loopne
mov
fdivs
mov
testl
add
jecxz
popf
stos
xchg
push
xchg
mov
rcl
gs
or
mov
sbb
loopne
mov
repnz
clc
fdivrs
adc
ss
pop
xor
stos
and
popf
cmp
sub
inc
leave
mov
xchg
cld
and
hlt
ret
or
jbe
xor
rcrb
mov
mov
cmp
les
rcr
movsb
pop
and
std
fucomp
sub
hlt
lahf
data16
jmp
loop
roll
outsl
iret
xchg
test
xchg
lret
cmp
add
xchg
fistpll
imul
adcb
adc
mov
subl
mov
mov
pop
and
xchg
jg
and
cmp
loopne
sarb
pushf
inc
sti
push
rcrb
mov
lret
shl
pop
add
jle
lret
and
inc
into
xor
xchg
out
sub
sbb
ret
clc
das
add
repnz
sbb
lcall
jnp
xchg
add
xlat
in
dec
pop
push
imul
mov
and
int3
loopne
push
test
inc
jg
mov
cmp
jae
inc
sar
adc
or
out
or
cli
mov
fstpt
cs
ss
in
xchg
push
iret
fsubl
in
popa
dec
addb
cmp
jb
int
orl
adc
lock
js
jne
pop
add
inc
fmull
loop
xchg
sbb
jecxz
sbb
data16
pop
lret
add
xchg
push
sti
scas
in
mov
xchg
or
aaa
hlt
inc
jo
lahf
cmpsb
mov
ljmp
cs
adc
xchg
jb
cmp
rclb
jmp
jge
dec
insb
or
mov
jno
insl
jl
loop
adc
arpl
pop
ret
mov
int3
xchg
stc
mov
into
add
pop
popf
pop
movswl
icebp
cmc
icebp
in
mov
aam
push
dec
add
add
filds
cmp
insb
ljmp
xchg
in
push
mov
inc
cmp
lea
dec
push
sbb
fbstp
ret
jmp
test
jmp
sub
call
shlb
inc
xchg
adc
faddp
sahf
xchg
dec
and
mov
push
cmpb
lcall
dec
idivb
sbbb
mov
sbb
cmp
movsb
mov
in
jle
pop
sahf
cmp
jb
dec
in
and
or
ljmp
xor
test
cmp
sarl
and
jnp
cmp
or
shll
and
out
aad
jp
jnp
dec
xor
scas
das
mov
mov
mov
mov
jno
clc
inc
mov
cmp
sub
mov
adc
jnp
cmp
xor
add
bswap
pop
cmp
add
sbb
xchg
bndldx
cmp
jnp
push
adc
mov
jmp
cld
dec
outsl
sbb
dec
jmp
icebp
mov
jge
in
jne
push
pop
inc
popa
enter
test
fsts
out
das
test
inc
inc
mov
sti
xchg
int3
jno
dec
or
pop
pop
in
cmp
js
mov
pop
inc
repz
mov
xchg
add
mov
sti
inc
aad
add
pop
test
pusha
pop
pop
out
sub
push
mov
pop
in
aam
sbb
and
mov
inc
dec
xor
imul
js
jecxz
adc
insl
xlat
adc
and
pop
dec
mov
jmp
xor
out
xor
mov
pop
xchg
mov
dec
or
jbe
stos
mov
filds
mov
and
ljmp
sbb
sti
mov
cmpl
push
aaa
sub
add
jno
adc
inc
lret
ss
fcomi
sub
shr
jle
mov
cwtl
imul
stos
sarb
enter
fistpl
loop
cs
popa
mov
jp
into
imul
inc
insb
mov
orl
cmp
sbb
mov
or
push
arpl
jp
jge
int
xorl
xlat
mov
sub
insb
pop
and
push
iret
jge
int3
fnstcw
clc
out
lcall
jmp
pusha
das
xchg
testl
insb
inc
inc
mov
inc
out
inc
scas
jne
popf
sbb
inc
lcall
lods
dec
test
inc
mov
push
stos
jle
inc
into
clc
push
fisubl
cmp
xchg
aas
fdivl
pop
adc
or
shlb
mov
jns
mov
mov
jecxz
mov
movb
in
sbb
add
stos
test
mov
push
in
fs
out
ds
pop
es
or
lret
inc
rcll
arpl
sahf
dec
popf
mov
or
pop
adc
aad
out
scas
mov
sub
ljmp
iret
fisubrs
les
adcb
lods
mov
in
cld
push
cmp
or
xchg
mov
repz
and
push
jno
bound
aaa
std
jae
imul
ljmp
jno
out
xor
mov
gs
jle
mov
je
fisttpll
or
aam
std
test
out
sub
fucomp
adc
cmp
xor
and
ja
xor
add
add
cli
xchg
adc
xor
jle
fcmovbe
or
add
fwait
push
enter
lea
sbbb
mov
pop
mov
insb
adc
add
xor
insb
aas
mov
sbb
arpl
xor
outsb
mov
mov
in
dec
test
into
dec
in
sub
lock
movsb
inc
push
push
mov
pop
mov
popa
add
insb
hlt
adc
outsb
sub
test
aad
sahf
outsb
mov
mov
mov
or
loopne
sub
adc
dec
aam
movsb
sbb
xor
add
dec
out
stos
lods
cs
adc
cmp
xor
paddsb
sub
pop
cmpb
in
pusha
aad
ljmp
sbb
dec
ljmp
sub
dec
xor
cmp
push
add
mov
cs
add
jb
iret
push
fwait
add
fucomp
xchg
js
mov
cmp
leave
sbb
fwait
push
pushf
sbb
mov
mov
mov
jmp
movl
push
jg
adc
xor
push
inc
repz
dec
inc
mov
icebp
inc
push
jmp
mov
lea
inc
sbb
jne
mov
rorl
and
mov
insl
sub
pop
mov
cmp
cltd
inc
or
push
cmc
cltd
cwtl
push
rcll
jns
mov
test
adc
cmpb
mov
cmp
mov
push
cmp
aaa
or
out
pop
dec
pop
fdivl
add
enter
mov
jae
das
adc
ficomps
add
cmc
cli
or
imulb
xor
jo
inc
fsubrs
sub
inc
cli
push
andb
push
ds
cmpsl
push
shrl
movsb
out
push
mov
arpl
popa
mov
imull
sbb
push
xlat
pop
xchg
repnz
adc
sbb
cs
test
push
jmp
sub
push
addr16
ss
mov
je
shlb
cmp
mov
adc
xchg
sar
jge
sbb
int3
cmp
es
lds
das
movsl
inc
jnp
imul
in
mov
inc
je
out
jle
loopne
xchg
jns
push
mov
pushf
shl
mov
js
ficomps
mov
dec
pushl
xchg
lock
xchg
hlt
and
and
in
lods
sub
loop
xchg
pop
or
or
sub
int3
xchg
adc
mov
fstl
scas
adc
cmp
sbb
push
push
ret
loope
jp
icebp
imul
dec
pop
es
add
inc
das
scas
xlat
and
adc
inc
or
xchg
jne
in
test
les
insb
insl
xchg
jl
pop
mov
or
dec
stos
sub
out
cmpsl
aas
mov
pop
sarb
mov
push
push
jge
out
jecxz
lret
sub
add
in
test
lss
loopne
adc
lret
icebp
pop
sahf
insl
out
cltd
jb
jns
je
xchg
gs
jo
push
ljmp
xchg
cmp
dec
icebp
aam
push
insb
mov
ficompl
ja
icebp
add
inc
or
mov
mov
fstp
xchg
ds
cmp
mov
das
mov
loope
insb
shll
mov
pop
mov
sub
js
mov
mov
into
cwtl
adc
addr16
mov
jns
test
adc
push
lds
cmpsb
mov
add
in
into
xchg
sahf
pusha
add
mov
les
decl
fnstsw
std
or
icebp
xlat
cli
cmp
xchg
or
sbb
dec
mov
and
out
lds
imul
inc
inc
or
push
lds
cmpsl
dec
dec
cmp
outsl
pop
jl
inc
jmp
xchg
pop
imul
lret
imul
mov
xchg
pop
std
call
and
mov
movsl
lahf
xchg
js
cmp
sbb
mov
fwait
ret
mov
adc
int3
push
in
cmpsb
jo
sbb
test
pop
mov
jmp
or
into
int3
sti
in
sbb
shll
test
rorl
loop
rolb
or
test
lods
push
inc
popa
shrl
dec
sub
sbb
pusha
rcll
jbe
testb
out
in
lret
mov
or
nop
mov
cmp
jae
xor
cli
mov
lret
sahf
or
test
mov
pop
icebp
xchg
add
es
je
mov
push
mov
or
xor
dec
or
int
daa
cmp
dec
dec
push
mov
ds
fidivl
lods
js
pcmpgtb
cltd
add
sahf
pop
pop
xor
mov
clc
xchg
inc
sbb
jmp
arpl
xchg
adc
out
sub
movsl
loop
xchg
push
mov
mov
mov
out
fmul
xor
sbb
scas
inc
mov
lahf
xor
jnp
dec
jl
cli
popa
jb
cs
push
das
pop
notl
arpl
xor
sbb
ds
adc
cmp
test
push
es
inc
push
cmp
xchg
inc
popl
add
xchg
or
aaa
loope
fistpll
mov
push
push
stc
in
cld
test
hlt
fs
std
pop
inc
enter
xchg
xor
notl
lahf
pushl
pushf
jo
outsl
cmpsb
jecxz
sub
insl
cmp
aaa
lock
cmp
pop
jmp
inc
lods
or
test
pop
scas
xor
loopne
mov
mov
adc
aam
mov
push
or
ret
sub
push
dec
es
ljmp
mov
or
repz
and
xchg
inc
mov
call
pop
pop
mov
add
scas
adc
lahf
js,pt
sbb
xor
sbb
out
inc
clc
call
std
mov
mov
pop
sub
int3
addr16
xchg
or
push
xor
adc
sti
in
fstpt
out
les
bound
das
es
lods
cmp
pop
bound
xchg
adc
mov
push
or
push
dec
xchg
int
or
es
movsb
aaa
adc
cmp
mov
aad
inc
not
jle
dec
mov
into
sub
mov
fwait
movsl
mov
adc
insb
xchg
das
mov
scas
xchg
notb
inc
jo
adc
ret
sub
aaa
andb
xchg
cmpsb
lock
movsb
das
movsl
xchg
icebp
xchg
xchg
xor
mov
adc
in
add
call
add
mov
ljmp
xorb
loop
lahf
jmp
push
loope
stc
xchg
int3
push
cmp
iret
mov
imul
repnz
fstpt
pop
testl
lahf
xchg
scas
inc
insl
mov
jo
inc
mov
inc
push
imul
dec
xor
mov
fmulp
and
in
clc
mov
enter
in
xor
pusha
lock
mov
and
push
or
cmp
movsb
or
loope
dec
scas
jmp
popa
stc
cmpsl
ss
or
mov
test
scas
sbb
cmp
lcall
sbbl
and
sbb
push
aam
je
js
in
mov
cmp
testl
shlb
xchg
jbe
lods
stc
pop
xchg
out
and
xchg
sub
cwtl
pusha
gs
cmp
adc
mov
pop
pusha
fwait
pop
and
cltd
sbbb
fstl
pop
mov
filds
addb
popf
ja
imul
fdivr
repz
or
sbb
subb
cs
sbb
repz
cli
in
push
cmp
cs
arpl
lods
push
cwtl
sub
jae
jp
add
adc
xor
cwtl
and
push
in
push
gs
cs
jae
subl
or
adc
idivl
sbb
pop
mov
leave
mov
out
cmp
pop
xor
jno
pop
bound
int3
jg
dec
sti
dec
xor
ja
xchg
mov
adc
inc
pusha
icebp
cmc
lds
stos
jle
or
cmp
leave
test
lock
sbb
push
mov
rcrb
mov
aam
pop
pop
fsubrs
out
pop
mov
jle
aad
pop
mov
push
mov
sti
rolb
dec
mov
jb
cltd
jl
sub
scas
mov
popf
outsb
daa
ss
pop
lret
pop
dec
int3
mov
mov
xlat
adc
or
outsb
insl
imul
pop
fwait
je
test
xchg
les
xchg
fildll
push
bound
ljmp
adc
or
mov
leave
popf
pop
icebp
pusha
hlt
stc
xor
loop
mov
aam
push
add
iret
out
loopne
pop
push
aad
imulb
movsb
sub
shrb
mov
inc
push
mov
inc
into
pop
ljmp
sbb
or
mov
push
cmpsl
test
js
jbe
and
adc
push
cli
jo
dec
xchg
add
sbb
pop
push
out
mov
jne
mov
dec
cmc
inc
pop
push
sbb
sbb
xchg
fldenv
sahf
lcall
mov
mov
and
clc
dec
mov
fxch
add
stc
add
cli
xchg
pusha
mov
add
sub
fwait
push
mov
sar
repnz
pop
xchg
rcrb
fcompl
repnz
fucomp
popa
into
jg
pusha
push
push
repz
call
xchg
lods
scas
jbe
jno
mov
mov
pop
aad
and
jb
pop
lods
xchg
dec
cmp
inc
loopne
shlb
sub
xor
lea
arpl
stc
mov
mov
sub
add
and
fcomps
cltd
xchg
jg
cltd
mov
in
test
push
mov
dec
mov
addr16
pop
jecxz
cmp
cmp
cmp
mov
and
mov
cwtl
inc
xchg
mov
jmp
mov
nop
gs
dec
xor
imul
xchg
mov
adc
data16
imul
sub
add
sbb
bound
cmp
inc
lods
pusha
stc
ror
mov
cld
into
cmc
das
jnp
push
xchg
cltd
jp
sub
jae
loope
loope
lea
hlt
mov
mov
jns
sbb
out
enter
cwtl
mov
ja
inc
loopne
fstl
stos
push
fldt
pop
mov
sbb
aad
leave
sub
push
sbb
mov
arpl
mov
shll
daa
dec
bound
jg
sbb
sarl
call
or
cmp
mov
lret
icebp
pop
xor
xchg
cli
sbb
das
hlt
stos
lcall
push
notl
mov
push
in
cmpsb
cmp
incb
hlt
and
ret
xchg
inc
mov
bound
mov
pop
jmp
cmp
cmpsl
jbe
xchg
xorl
xacquire
cltd
dec
imul
xor
mov
std
or
xor
decb
lahf
out
pusha
xchg
and
clc
xor
scas
push
cwtl
notl
test
mov
outsb
outsl
decb
fcompl
fucomi
mov
sub
dec
fnsave
push
push
mov
lods
daa
loopne
rep
enter
pop
jbe
or
fisubrl
lret
in
movsl
sub
push
sbb
sti
mov
mov
inc
movsl
ljmp
xor
and
pop
hlt
stos
out
int
sarb
mulb
or
scas
cmp
out
movsl
cwtl
aas
xchg
or
cmpsb
cs
sti
dec
inc
ljmp
fwait
xchg
sbb
dec
inc
aas
and
xor
xchg
insl
int3
in
or
ss
adc
or
stos
sbb
cmpsl
or
sqrtps
pop
pop
push
and
mov
adc
sub
les
xchg
mov
lock
mov
fs
insb
iret
adc
push
cltd
adc
dec
xchg
out
lods
sahf
lahf
inc
int
pmuludq
pop
xor
pop
xchg
push
inc
cld
data16
movb
hlt
jg
fs
jb
dec
hlt
push
ficompl
loope
xor
pop
sbb
loop
jae
inc
fsubrl
es
mov
pop
mov
std
adc
std
pop
adc
jg
ud1
xor
pop
mov
inc
aaa
pop
sub
jp
ret
stos
lahf
daa
sbb
jno
js
movsl
xchg
andl
mov
push
push
out
testb
aaa
mov
bswap
arpl
fwait
add
dec
xchg
sbb
and
sub
xchg
or
jae
adc
cmp
pop
imul
lds
mov
popa
push
cld
pop
sub
push
mov
es
cmp
repz
fidivl
jg
fstpl
and
pop
pop
sbb
jno
lea
pop
popa
stos
cs
lcall
cmpsl
or
and
mov
add
mov
mov
adc
lods
mov
insl
or
arpl
movsb
inc
pop
jnp
std
arpl
sbb
jg
mov
or
dec
loope
lods
test
push
pop
mov
xchg
inc
fsubp
and
mov
push
lods
out
outsl
mov
lahf
addr16
dec
jno
fdivs
popa
out
aaa
mov
jmp
sub
test
dec
xchg
mov
fucompp
adc
fwait
add
shr
out
lahf
jge
adc
jno
fnstenv
push
nop
loope
out
pop
rcll
push
scas
sub
sarb
pop
cli
cmp
adc
stos
push
and
sbb
fimull
add
dec
into
cmp
cmp
fwait
daa
pop
cmc
loopne
sbb
sbb
jnp
jae
je
adc
clc
test
push
hlt
in
sub
mov
pop
sub
dec
movsb
in
outsl
ja
in
lcall
test
sub
mov
push
jbe
dec
in
adc
jmp
inc
inc
xlat
js
jns
mov
pop
push
pusha
inc
sbb
leave
xchg
and
cmp
sub
mov
cmp
add
jge
jo
pushf
inc
xchg
aaa
insl
mov
ror
pop
dec
inc
stos
adc
or
enter
stos
insl
cmpsl
cmp
mov
cs
iret
inc
clc
test
cmp
cli
push
outsl
mov
fsts
dec
nop
jno
gs
shrl
cmp
sbbb
mov
daa
or
sub
push
xchg
and
cmp
fwait
negb
push
scas
cmpsl
push
push
gs
mov
pop
setbe
call
adc
loope
sub
rorw
xor
adc
sbb
lea
push
mov
push
mov
rorb
xor
out
or
enter
xchg
hlt
push
test
lahf
inc
xor
imul
inc
mov
in
lcall
or
lea
scas
sbb
xor
movhps
shll
shlw
ja
arpl
cli
xor
cltd
dec
xchg
loop
lahf
pop
nop
out
test
ficompl
add
lahf
gs
sahf
xchg
sbb
xor
div
or
xor
das
dec
pop
mov
cmp
cs
and
xchg
push
push
out
push
push
rorb
add
push
out
hlt
loop
and
or
adc
or
out
movsb
out
xor
sbb
mov
into
lea
bound
sub
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
das
jge
adc
addl
shlb
pop
add
jp
shl
push
repnz
adc
arpl
es
inc
jmp
add
jns
add
ds
pop
repnz
movsb
loopne
mov
lock
or
repz
lret
int
fbstp
lds
movsl
lret
loopne
fcoml
fldenv
fcoms
push
and
mov
scas
addr16
push
inc
jbe
cmp
fldenv
jnp
test
shlb
cli
mov
lret
jns
xor
arpl
int3
iret
xchg
pop
mov
sub
dec
ds
in
cmpb
fisttpl
imul
mov
je
jbe
ret
daa
out
xchg
pop
pop
outsb
adc
lods
pop
sub
stos
lea
pop
cmc
mov
and
call
scas
sarl
push
dec
lods
sub
int3
sbbl
xchg
and
pop
in
cltd
sbb
frstor
cmp
push
mov
mov
cmp
into
add
pop
jbe
jecxz
aad
sub
cmp
or
dec
mov
dec
sti
dec
pop
out
dec
lock
iret
jmp
dec
pop
sbb
inc
or
pop
mov
push
adc
fnstenv
fcomps
dec
adc
xor
or
loop
cmc
aam
dec
jnp
outsl
xchg
or
ret
lea
rolb
mov
movsl
hlt
mov
es
call
lods
aad
outsl
aas
popf
inc
dec
icebp
push
mov
xlat
ljmp
add
popa
mov
jge
cmp
sbb
movsb
dec
insl
lock
or
shll
es
movsb
jle
icebp
push
clc
push
es
mov
adc
push
jl
jmp
push
jae
inc
scas
sahf
aas
ds
pop
sbb
lods
pushf
fsubr
add
fwait
std
imul
sbb
pop
movsl
rolb
add
add
mov
cmp
xchg
cmp
sub
cli
imul
cmp
push
icebp
subb
daa
jmp
daa
stos
out
in
aaa
pop
popa
shll
cmp
cld
xor
xlat
mov
mov
dec
xchg
jle
pop
fimuls
or
sub
push
and
fnstsw
out
xor
pop
ljmp
mov
sbb
repnz
scas
shlb
shrb
int
mov
jl
cwtl
sbb
sub
jo
data16
imul
dec
pop
cwtl
jmp
cwtl
lods
push
mov
lods
xor
stos
int
mov
add
dec
push
mov
daa
xchg
xor
sub
jb
cli
fcomi
sbb
stc
lcall
adc
xchg
pop
xor
and
jne
ds
or
data16
lret
xchg
jbe
pop
dec
filds
jbe
gs
mov
insb
int3
jno
jp
adc
xchg
test
hlt
ret
int3
fwait
jecxz
mov
fmull
cwtl
sbb
js
rcrl
push
lds
std
ljmp
sbb
or
movsl
push
mov
mov
and
aad
data16
push
ja
dec
imul
out
clc
adc
mov
mov
cmpb
xchg
mov
lret
into
mov
xchg
jg
gs
inc
repnz
inc
pop
pushl
adc
test
cmp
jno
arpl
and
pusha
loop
shrl
xlat
push
cltd
mov
or
stos
and
shll
fimuls
daa
mov
xchg
cwtl
add
fmul
fs
ficompl
call
lcall
fsubr
jp
loope
in
add
inc
dec
sarl
cli
push
add
inc
stc
sub
inc
push
inc
rorl
rcr
xchg
mov
cltd
mov
addr16
cli
jle
arpl
jne
test
dec
dec
insl
icebp
pop
mov
xchg
inc
aas
ja
mul
lds
inc
adc
or
aad
push
loopne
popf
or
mov
out
inc
push
xchg
inc
loop
push
pop
pop
push
pop
mov
inc
inc
mov
mov
fldt
mov
jb
cmp
mov
outsb
cltd
inc
xor
mov
into
and
dec
mov
mov
sarb
mov
xor
movsb
jns
aad
pop
xchg
ja
das
sbb
sahf
dec
bnd
stos
pop
xchg
inc
in
inc
dec
lcall
sub
addr16
or
and
subb
xorl
jle
xchg
stos
mov
negl
xor
jae
dec
add
xor
xlat
jmp
jg
in
mov
push
mov
xchg
pop
jg
mov
inc
push
mov
jae
sub
pop
pop
push
mov
mov
leave
je
sub
jmp
sbb
mov
cli
mov
loope
mov
sbb
out
xchg
jb
pop
out
test
or
sub
mov
cld
or
aad
clc
jmp
inc
lret
xor
outsb
rorl
popf
dec
or
inc
sbb
inc
jo
mov
lret
int
mov
sbb
sbb
push
push
das
push
jmp
push
push
lret
adc
inc
mov
inc
xchg
mov
jle
sbbb
int
adc
jb
fildl
add
movsb
scas
and
fs
int3
mov
out
lods
xchg
sbb
and
dec
jo
int
scas
pop
testb
in
out
pop
pushf
push
or
push
mov
les
ss
mov
loopne
cmc
idiv
mov
lods
mov
test
in
inc
out
adcb
lods
fnstenv
push
ss
jns
enter
push
dec
sub
push
add
mov
cli
outsl
cmp
push
test
lret
xor
sar
cmp
cmp
mov
sbb
cmc
ja
inc
in
out
cmc
mov
rolb
insl
mov
fs
push
dec
mov
in
addl
or
or
xor
cmpsl
sub
stc
arpl
jo
and
test
adc
in
sub
pop
jno
cli
jae
rclb
lods
dec
insl
notl
inc
jg
lret
mov
cmc
sbbl
jge
cmpsb
jo
into
jle
into
cltd
adc
sti
jp
mov
or
jb
inc
and
fadds
cmp
and
repz
enter
clc
stos
das
out
xor
mov
iret
lahf
outsb
jg
shll
in
sbb
push
xchg
fdivrl
xchg
addl
push
fiaddl
push
cmp
fnstenv
stos
cmpsl
mov
test
push
aam
xchg
pop
jge
fildll
lcall
std
mov
idiv
sahf
xchg
gs
jns
jl
add
push
and
jmp
pop
shlb
daa
and
pop
push
pop
into
push
in
ret
push
jl
loop
pop
mov
js
test
dec
lods
or
and
jmp
stos
shlb
xchg
mov
jp
std
cmpsl
int3
lods
mov
ss
lcall
or
pop
sti
inc
dec
mov
mov
pop
test
push
sar
pop
mov
andl
shll
and
jmp
cmp
dec
adc
mov
mov
cmpsb
mov
jge
dec
fstps
cli
inc
testb
aad
push
scas
jp
adc
xchg
inc
imul
das
pop
sarl
dec
adc
inc
xor
sub
jae
imul
xchg
add
push
sbb
out
mov
scas
cmp
int3
adc
repnz
mov
jg
aas
mov
stos
xor
mov
int
inc
lahf
test
or
dec
icebp
outsl
jbe
fucomi
jmp
lods
dec
pop
adc
adc
sbb
dec
inc
cmp
mov
leave
fwait
adc
es
mov
fmull
iret
aad
pusha
aam
jl
add
outsl
pop
and
addr16
jnp
xlat
sub
add
push
fs
xor
aaa
es
cmp
std
roll
cs
add
push
push
stos
repnz
push
sti
inc
pop
cmp
pop
enter
dec
test
xor
dec
setge
cmp
lods
fs
add
pop
into
jno
loop
es
icebp
lods
or
notb
rcrb
cltd
in
push
rcll
ds
xor
out
cmp
inc
pusha
jg
and
out
adc
das
dec
arpl
mov
cmpsl
repz
lods
jg
cwtl
fisttps
enter
aas
xchg
jbe
sbb
jnp
lods
or
int
jns
mov
subl
hlt
in
aad
push
and
iret
inc
jle
push
or
clc
movsl
sub
lret
dec
lods
and
cwtl
subb
push
add
jmp
shrb
mov
or
xor
cmpl
hlt
cmp
roll
shll
pop
xor
iret
mov
arpl
xchg
stos
subl
fisubs
mov
adc
mov
jg
in
adc
xor
cmpsb
jg
mov
ficoml
pop
sti
mov
xor
movsb
add
xchg
mov
in
das
xor
fucomip
xor
lret
push
fmull
or
repz
xchg
add
sbb
je
lods
add
call
lea
mov
xchg
sti
jl
ret
in
jl
addr16
in
mov
fists
jnp
cli
push
sbb
cs
jno
js
aam
sbb
inc
sbb
fcmovbe
int3
negl
test
sbb
out
xchg
test
xchg
sub
mov
hlt
sbb
sub
test
cmp
lahf
or
mov
and
aam
inc
jl
loope
fstpt
mov
or
stos
sub
lret
jne
push
push
je
ja
mov
rclb
sbb
fnstenv
ret
mov
sub
nop
cld
adc
dec
pop
out
inc
addr16
and
lea
and
lock
aaa
shlb
sarl
dec
pushf
cmc
ljmp
or
lock
pop
add
ja
lods
out
roll
inc
bound
lret
pusha
jg
mov
ret
xchg
push
inc
mov
inc
add
pop
test
leave
mov
les
jle
movsl
adc
or
data16
stc
gs
movsb
inc
fs
loop
adc
enter
mov
or
pop
cs
xchg
incl
rcl
adc
out
inc
xchg
mov
mov
add
sub
orps
sti
mov
and
and
cmp
mov
test
fidivl
mov
jnp
stos
add
mov
xchg
jp
shlb
loop,pn
mov
add
mov
cmp
jbe
pusha
hlt
dec
mov
push
adc
and
arpl
dec
lret
mov
das
ljmp
push
and
mov
xchg
ret
inc
pop
add
out
mov
jge
sub
and
jns
ror
adc
out
dec
insl
rolb
icebp
jb
repnz
bnd
in
dec
lcall
stos
stc
adc
mov
or
dec
jl
and
imul
push
fstps
loopne
daa
inc
imul
pushf
xor
jecxz
repz
in
jno
aam
test
cli
arpl
in
jno
push
push
jbe
mov
les
jl
or
adcl
cmp
aaa
inc
jb
pop
xlat
enter
lret
xchg
jns
stc
ljmp
jbe
icebp
lea
repz
mov
xchg
inc
mov
cmpsb
adcl
dec
gs
and
mov
or
pop
cli
mov
mov
sbb
or
xchg
imul
loop
push
add
xchg
jmp
addr16
fwait
scas
in
inc
mov
outsb
dec
aas
xchg
test
xor
dec
mov
jl
xchg
xchg
cld
fisubs
outsl
mov
fdivs
add
pop
mov
sub
insl
ljmp
lock
mov
and
imul
xor
pop
js
or
popa
in
adc
sub
cmp
jns
mov
cli
jb
int3
mov
xor
cmp
xor
test
xchg
ret
xor
sbb
or
scas
sbb
pushf
cs
cs
xor
test
lret
fnsave
cmp
jg
mov
adc
pop
mov
push
sub
xchg
mov
jmp
jae
push
test
xor
lahf
xor
mov
incl
fdivl
or
fsubl
or
clc
movl
dec
inc
add
jle
mov
pushf
sbb
jbe
inc
testb
test
leave
lret
mov
adc
outsb
and
insl
mov
hlt
mov
hlt
jno
sub
daa
dec
aam
adc
hlt
pop
fiaddl
xor
push
into
mov
jmp
stos
fisttpl
push
adc
mov
lahf
cld
jbe
and
mov
push
loope
jge
add
orb
add
movsl
cmc
iret
int
sub
push
push
cltd
xchg
hlt
shr
loopne
loope
idivb
gs
mov
or
jp
stos
add
pop
sbb
imulb
lret
gs
inc
mov
dec
sub
inc
mov
add
mov
pop
pop
int3
push
cmpb
adcl
adcb
call
push
dec
lock
cmpsb
test
sub
pop
jb
push
loopne
inc
push
xchg
xor
xor
fidivrl
scas
mov
and
add
lods
push
xor
js
cs
dec
lea
mov
pop
mov
dec
mov
and
arpl
sbbl
xor
shr
leave
dec
out
insb
shl
mov
stos
aam
sub
jge
sti
ret
int
fs
xchg
and
xchg
outsl
bound
push
loop
mov
je
mov
test
cmpsl
xchg
jl
ljmp
inc
subl
jmp
push
in
jg
add
sbbb
xor
lret
das
xchg
dec
pop
and
dec
mov
shl
dec
fisttpl
insl
mov
sbb
ficoml
xlat
or
lret
sbb
jae
push
adc
inc
out
aas
mov
mov
in
lea
dec
popa
dec
lds
inc
or
push
sbb
fcmovne
lret
mov
shll
arpl
lretw
bound
insl
inc
call
fs
jns
fld1
popf
test
mov
adcb
lret
adc
in
fstp
sahf
push
pop
dec
cld
dec
lret
xor
or
cmpsb
xor
lret
fsubrp
or
fsts
cwtl
test
in
xor
pushf
push
test
in
or
inc
lods
popl
jmp
in
xchg
pusha
idivb
or
sbb
jg
test
mov
jb
imul
mov
ja
adc
addl
loopne
subb
rolb
aam
cmpb
pop
jb
push
mov
or
pop
imul
pop
aaa
mov
bound
ret
negl
sbb
or
pop
daa
ja
lret
aad
push
cmpsb
and
jp
out
sub
mov
and
inc
xor
ss
idiv
aas
mov
xchg
stos
xchg
mov
sbb
jns
and
lock
sub
roll
pop
push
mov
fdivrs
push
push
outsb
jbe
ljmp
lods
pop
or
ret
js
stos
out
repz
enter
rcll
insl
scas
push
push
ljmp
jmp
jne
mov
cmp
push
mov
es
mov
dec
mov
mov
push
loopne
or
mov
xchg
mov
rolb
sbb
idivb
cmc
push
xchg
jb
sbb
jb
cli
aas
add
mov
les
lods
xchg
pop
mov
lds
fstcw
in
jp
sahf
int
popl
cmp
and
sbb
or
std
inc
dec
mov
out
mov
xchg
fdivs
or
push
xchg
stos
movsl
add
xchg
dec
pop
test
dec
sub
ds
sbb
mov
pop
mov
jne
mov
lods
loope
cltd
int
stos
inc
adc
clc
popf
dec
sub
add
lods
xchg
push
sbb
repz
adc
add
lcall
and
sub
xlat
lret
mov
rcll
in
cltd
sbb
loope
adc
mov
xchg
pop
mov
jle
cmpsl
ficoml
sbb
adc
pop
mov
enter
pop
repz
push
pop
rolb
cld
and
push
and
jle
lret
pop
rol
mov
mov
bound
or
mov
iret
sbb
scas
lods
jne
mov
xor
jge
add
dec
dec
mov
or
mov
pop
push
aam
jg
push
dec
push
cmp
xchg
mov
mov
jmp
or
mov
imul
lock
cwtl
jle
dec
lret
push
outsl
and
inc
mov
cmp
cmp
clc
cmp
cmpb
push
jmp
and
mov
mov
fwait
hlt
lea
sarb
dec
dec
cmpsb
vzeroupper
js
push
sahf
scas
xor
stc
sub
xlat
test
jno
pop
push
jmp
push
add
popf
mov
sub
fbstp
xchg
aam
mov
sbb
xor
outsl
cld
mov
xchg
loopne
mov
lock
mov
int
popf
mov
nop
int3
pop
cmovs
mov
int
out
mov
das
and
repz
orl
je
mov
dec
sub
cmpsl
mov
test
fst
or
sub
mov
stc
xchg
daa
xor
je
pop
mov
mov
daa
outsl
ret
mov
inc
sbbb
pop
cwtl
xchg
neg
mov
or
jmp
insl
sbb
in
add
icebp
push
daa
push
or
jns
rcr
or
idivb
inc
cmp
ss
mov
jle
add
mov
inc
incb
lret
mov
pop
dec
add
mov
outsb
lods
inc
cwtl
insb
xchg
mov
leave
data16
jg
push
in
cmp
sar
sub
sbb
cmp
adc
dec
sahf
ret
lea
pop
movsb
xchg
lcall
das
addr16
pop
and
es
xor
fidivs
mov
test
adc
xor
jbe
ss
aad
ds
xchg
sbb
in
mov
xor
mov
je
jle
setle
dec
dec
mov
mov
mov
scas
cltd
xchg
data16
mov
ret
jg
enter
aas
test
xor
ret
fadds
sub
loopne
pop
jl
dec
lds
or
mov
or
xchg
push
aad
mov
add
cs
sbb
fiadds
add
subb
xchg
shrl
jae
sti
addr16
cmp
dec
add
sub
ja
xchg
cld
sbb
pop
or
mov
sbb
sbb
gs
xchg
mov
arpl
fcmovnu
loopne
call
push
sub
add
jne
fistpl
popf
jmp
jg
lea
in
or
cmp
cwtl
loop
adc
sub
lret
add
test
flds
mov
jo
imul
jo
sbb
xor
sbb
cmp
adc
es
sbb
jmp
fwait
jae
mov
dec
push
or
popf
sub
jecxz
inc
push
xchg
aas
jns
xchg
xchg
sarb
mov
add
cmp
cmp
jecxz
lds
sbb
mov
addr16
lds
out
mov
imul
adc
jo
in
xor
add
ss
jbe
ljmp
mov
call
iret
loop
ds
cld
cwtl
js
xchg
inc
jl
xor
out
adc
and
mov
or
addb
jns
out
int3
xchg
xchg
xchg
mov
push
ja
cli
push
xchg
shll
clc
xlat
test
add
pusha
adcl
sbb
ljmp
jb
testb
mov
inc
jno
mov
ret
push
pop
movsb
dec
enter
mov
shll
fcoml
mov
push
sub
dec
mov
cmc
sbb
jns
push
sub
and
dec
jb
popf
outsb
inc
pop
pop
stos
dec
enter
outsb
lds
jo
gs
push
pop
or
dec
lock
mov
mov
push
pop
fs
ret
clc
adc
add
insl
pop
test
or
aas
fcoms
mov
ja
rcrl
cmp
jmp
insl
mov
inc
aam
int3
lds
or
ja
gs
or
mov
inc
stos
jl
lcall
ret
je
arpl
mov
jno
pop
fdivl
fidivrl
adc
leave
pop
adc
mov
and
outsl
cmpsb
addb
icebp
aas
jns
add
mov
ret
ds
hlt
insl
pushf
sbb
in
mov
out
push
cmp
outsl
adc
and
arpl
xchg
jl
pxor
add
ja
shll
pusha
cmp
out
int
fstpl
jno
xchg
cmp
adc
scas
adc
repnz
cli
add
jne
inc
ret
pop
and
js
xchg
and
dec
xor
mov
xchg
adc
dec
pop
mov
call
hlt
mov
inc
mov
push
in
or
mov
mov
push
jnp
push
lret
ret
mov
mov
cmpsb
mov
jns
mov
stos
mov
std
mov
insb
pop
dec
addl
mov
repnz
pop
daa
outsb
shr
push
aas
xchg
sahf
pop
or
fs
cwtl
aad
cltd
lret
add
or
pop
out
cmc
inc
cli
push
dec
or
pushf
or
je
jne
std
push
ficoml
sub
scas
dec
push
mov
sbb
mov
jne
lods
gs
mov
mov
adc
mov
adc
std
ss
mov
and
jae
xchg
add
pop
push
jnp
test
xchg
js
cmp
enter
jo
int
ss
lea
lcall
pop
push
dec
jle
fidivrs
mov
inc
inc
gs
enter
jmp
cmpsl
xchg
test
dec
loop
inc
andb
lcall
daa
ret
push
inc
sarb
add
jecxz
jge
ds
scas
adc
jnp
pop
pop
xor
inc
lcall
lret
ficoml
push
loopne
ds
mov
push
dec
ret
imul
jnp
sub
aad
xchg
call
addr16
outsl
adc
repnz
xor
lcall
mov
lods
aam
shll
pop
cmc
ja
push
mov
pop
mov
dec
pushf
jb
cmp
mov
ret
fmul
lahf
mov
aas
cwtl
lock
out
push
xchg
ret
add
loopne
xor
sbb
jno
arpl
mov
mov
aaa
add
or
xlat
addr16
xchg
pop
setp
mov
test
or
lods
mov
sbb
mov
lods
push
daa
ja
clts
inc
cmc
shlb
and
lcall
push
jge
push
out
cmpsb
ja
or
outsl
das
push
inc
nop
aas
imul
and
xchg
xlat
mov
test
pop
sbb
data16
and
ffreep
lods
ret
sbb
inc
adc
sbb
popa
or
mov
icebp
or
arpl
dec
icebp
cli
sbb
in
dec
cmp
cmpsl
pop
dec
xor
mov
das
cmp
shlb
jl
xchg
std
mov
pop
jo
jo
xchg
mov
dec
leave
sub
into
ficomps
mov
loopne
sub
and
scas
xor
bound
inc
jnp
addr16
imul
dec
inc
je
iret
xchg
je
aad
xor
mov
shrb
bound
adc
negl
sbb
adc
dec
cs
int
mov
rcrb
push
pop
and
or
mov
mov
pop
mov
scas
je
cmp
cmp
lock
pop
popw
dec
cmpsl
or
or
add
rcrl
imul
adc
xor
sub
xor
cmp
in
mov
iret
std
dec
jp
mov
jg
add
mov
ja
fbld
iret
cmp
push
aad
pop
outsl
add
mov
pop
xchg
sahf
adc
in
push
pop
fcoml
xchg
outsb
hlt
cld
xchg
or
or
mov
mov
stos
ficompl
lods
xlat
jne
lahf
cmp
popf
mov
fisubs
or
mov
test
in
out
pop
pop
jmp
lret
in
lret
enter
imul
in
xor
fiaddl
and
cmp
pop
ljmp
adc
sbb
stos
test
fldt
or
xchg
push
cld
mov
inc
sbb
in
fists
xchg
pop
inc
in
dec
insl
dec
in
das
insl
cld
and
fs
fwait
mov
fcompl
inc
pop
adc
push
lret
push
and
xchg
xchg
popa
nop
hlt
scas
mov
xor
in
and
je
fstpl
sti
movsb
cld
adc
imul
mov
stos
mov
int
inc
dec
aas
orl
ss
xor
es
pop
lret
dec
int
xchg
xchg
test
xchg
and
jb
sub
cltd
les
fwait
js
pop
xlat
push
adc
push
aam
sahf
stos
add
jns
and
cwtl
pushf
in
dec
rolb
imul
mov
add
ror
outsl
cmp
inc
lds
jno
add
lcall
loop
rolb
and
rcl
sbb
mov
cmp
rorl
jb
daa
and
leave
je
inc
sbb
xor
cmp
fcom
xlat
pop
push
xchg
stos
pop
data16
std
mov
data16
xor
lock
pushf
push
lret
pop
pop
sbb
bound
sbb
push
and
mov
mov
aaa
repz
rorl
xchg
cmp
cs
dec
dec
cmp
add
pop
inc
insb
loope
and
mov
push
int
xor
inc
daa
sub
mov
popf
pop
mov
jno
adc
scas
push
mov
sti
scas
test
punpcklwd
sahf
out
jge
mov
dec
lret
and
push
imul
inc
push
mov
xor
add
adc
lods
sub
int
mov
ret
cmpsb
je,pt
push
in
push
adc
std
add
sbb
hlt
inc
sbb
jle
inc
and
add
and
mov
pop
adc
adc
xor
mov
sub
or
decl
mov
outsb
dec
fwait
xlat
pop
rolb
xlat
inc
test
jo
out
mov
push
lcall
fwait
pop
dec
ja
xorl
inc
xlat
push
mov
loopw
js
cmp
enterw
jnp
stc
adc
mov
mov
jns
push
mov
xchg
repz
pop
rcr
ds
pop
loope
in
sbb
xchg
jae
subb
lret
xchg
hlt
cmp
out
add
loopne
pop
push
int3
out
inc
cmp
xchg
lea
xchg
out
mov
push
icebp
btr
lahf
xchg
mov
test
in
mov
push
out
push
jl
pop
stos
jge
outsl
xor
cmc
mov
sti
insb
dec
shlb
not
sub
mov
xor
insb
nop
xchg
outsl
shrb
inc
cli
test
icebp
jb
clc
or
icebp
inc
iret
cld
push
movsl
mov
cltd
push
jp
movsb
fs
pusha
pop
adc
lahf
sbb
inc
pop
outsl
mov
fiadds
push
lcall
lods
xor
pop
push
add
in
sbb
in
cmpsl
cs
xor
adc
cmpsl
pusha
sub
in
inc
xchg
lods
addl
pop
mov
xchg
icebp
aam
out
loopne
movsb
mov
icebp
dec
adc
dec
sbbl
pop
push
jmp
pop
push
pop
jbe,pn
aaa
sti
iret
in
xchg
pushf
hlt
or
or
dec
andb
adc
ss
cmp
pop
and
dec
dec
enter
mov
sbb
mov
or
xchg
lcall
inc
fcoml
jb
cmp
fmuls
add
lret
lea
test
pop
or
cmpsb
sbb
dec
pop
imul
stc
or
sbbl
mov
inc
sub
pop
adc
inc
push
icebp
cmc
cwtl
sub
mov
and
cltd
mov
sub
aam
inc
stos
sahf
or
int
enter
cmp
fwait
xchg
mov
sub
push
cli
adc
int3
dec
ret
repnz
fs
sbb
faddl
enter
gs
sbb
sbb
xor
inc
test
or
mov
scas
add
movsw
stos
push
aas
mov
xor
push
inc
add
je
lret
mov
shlb
clc
pop
or
lahf
stos
xor
ss
ds
push
fcoml
loop
popa
imul
mov
cmp
xchg
mov
pop
movsl
adc
loope
add
dec
lock
sub
jno
inc
jo
mov
stos
bound
mov
dec
lcall
and
enter
clc
adc
aas
push
mov
xor
stos
add
or
cmp
scas
aas
jecxz
mov
fisubrs
jo
and
or
cmp
xor
sbbb
sub
mov
and
mov
dec
pop
xor
dec
add
repnz
sbb
movl
scas
and
mov
incl
lods
mov
inc
ljmp
repz
cwtl
mov
es
gs
lods
sbb
call
lea
lds
or
cmp
mov
xor
sahf
pop
jmp
and
pop
ja
fimull
inc
pop
popf
mov
or
push
adc
cmp
pop
push
sbb
or
cmp
mov
loope
movsl
dec
xorb
idivb
pusha
sub
and
iret
shrl
inc
xor
and
mov
repnz
or
test
mov
cmp
mov
jp
inc
add
mov
push
mov
out
ss
lahf
add
xor
mov
push
mov
cmc
cld
push
mov
jns
insl
mov
or
xchg
scas
out
js
mulb
fistpll
dec
jg
loope
dec
xchg
mov
sahf
cmp
cmc
ds
mulb
fistps
sti
jno
cmpb
xchg
stos
inc
mov
cwtl
loopne
popf
je
rorb
aaa
pushf
add
out
xor
ss
aaa
jae
xchg
add
js
push
pusha
xor
mov
and
xor
add
xchg
lea
sbb
push
ret
or
mov
stos
xor
out
scas
mov
call
ficoml
ror
outsl
lret
adc
jecxz
inc
cmovo
insb
xlat
or
xor
movsb
pop
xchg
jno
out
push
cmp
sub
mov
sbb
pop
test
jbe
xchg
ljmp
ficoml
or
push
xchg
jmp
xchg
call
fdivrl
in
push
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
repz
ljmp
push
add
roll
xchg
outsb
pop
in
jns
int
rep
sbb
scas
ja
xor
lock
add
adc
imul
mov
dec
lods
aas
icebp
lcall
xor
decl
mov
mov
int3
mov
and
push
imul
outsb
fcmove
out
inc
insb
xor
pop
adc
pop
xor
pop
sub
pop
pop
sarb
adcl
iret
mov
and
mov
or
mov
js
icebp
mov
cmp
push
ja
jmp
mov
inc
imul
xchg
mov
xor
popf
mov
pop
out
pusha
push
stos
sti
jae
adc
mov
sub
rcrb
dec
cmp
pop
add
inc
jmp
fucom
mov
cli
out
cmp
and
lret
into
inc
mov
test
push
or
repz
rol
dec
addr16
xor
cmp
sub
sub
je
js
jmp
iret
loopne
xchg
jg
inc
gs
or
and
mov
out
xor
sub
cltd
cmpl
xor
dec
and
mov
cmp
push
or
lret
jnp
sahf
in
and
fsubrs
and
into
insl
aam
xor
cld
jmp
sti
adc
inc
bound
loop
lods
xchg
leave
stos
repz
jmp
dec
mov
sahf
cmp
pop
icebp
dec
cmc
push
push
in
cmp
sub
in
add
shrl
into
cmp
icebp
shl
push
shll
lods
loop
orl
cs
repz
pop
push
gs
imul
add
sub
pop
xor
out
sbb
jb
xchg
pop
jnp
subb
mov
sbb
mov
jns
sbb
enter
clc
shll
jae
jns
mov
addr16
add
xor
push
jp
fists
scas
dec
mov
ljmp
loop
loop
pop
cmp
lcall
jg
aam
js
cmp
outsl
popa
mov
hlt
xor
adc
xor
sbb
testb
mov
fisttpll
sub
mov
movsl
loopne
push
push
loopne
mov
insl
cmp
fnsave
jecxz
mov
and
xor
dec
loopne
movsl
sbb
sbb
sbb
pop
push
std
fisubs
js
int
int3
in
rorl
into
fstl
lret
mov
pushf
mov
loop
fsub
jmp
jg
cmp
aam
fstpl
sub
or
and
adc
mov
scas
xor
or
repnz
ds
jae
push
and
test
and
lcall
inc
test
rcr
adc
lcall
xor
pop
test
into
xor
inc
mov
sbb
ret
fcompl
ret
sub
pop
pop
test
std
fmull
je
xchg
clc
or
pop
inc
imull
push
cmove
js
fists
lods
arpl
add
fisubrl
inc
sub
stc
sub
sub
mov
icebp
add
sahf
dec
scas
pop
jne
mov
stos
sbb
xor
aad
jb
arpl
sbb
bound
or
push
cmp
push
cld
les
ret
mov
cmpsl
push
adc
fistpll
jg
repz
imul
insl
dec
mov
aas
mov
inc
sti
mov
jg
in
and
ljmp
jecxz
mov
lods
dec
sbb
incb
mov
jg
int3
nop
mov
stc
in
push
clc
ret
sub
jl
jl
out
jmp
into
xchg
pop
push
loop
or
jmp
out
xchg
xor
lret
sbb
pop
hlt
jbe
mov
sub
insl
sahf
push
inc
repz
inc
repz
jb
stos
decl
jecxz
inc
jno
in
subb
push
mov
rcrl
push
jne
or
jno
and
jns
sub
push
fdivrs
cmp
out
leave
scas
xor
jbe
sbb
popa
lea
mov
dec
inc
push
sbb
mov
add
add
lods
enter
xor
addr16
xchg
insl
and
and
xchg
mov
add
sub
xchg
push
cmp
push
ficoml
not
js
jge
loope
mov
jge
rcrl
les
xor
insb
add
rcrl
aas
in
push
sub
pop
imul
mov
arpl
mov
icebp
inc
leave
scas
dec
out
popa
iret
and
cmp
testl
dec
scas
out
push
adc
jmp
pop
add
outsb
or
fs
mov
cmpsl
popa
outsb
repz
jmp
ja
sti
fdiv
stos
mov
or
xchg
jecxz
xchg
lds
jbe
ja
lea
mov
dec
xchg
ret
in
cld
xchg
aaa
push
jne
insl
cmpsb
stc
pop
mov
jno
mov
sub
loop
cmp
dec
and
pushf
mov
xchg
adc
in
in
shlb
js
push
scas
xchg
pop
push
aas
adc
inc
dec
negb
enter
lods
fstpt
popf
xor
shl
xor
shrb
and
lods
rorb
jo
lock
cmp
popa
in
test
cmova
lock
icebp
mov
test
in
push
mov
and
cmp
mov
inc
cmp
pop
into
dec
in
lods
xorl
pop
cmp
cmp
inc
sbb
xchg
repnz
in
arpl
xchg
pop
push
jbe
xor
repnz
xchg
push
repnz
repnz
xor
jle
xchg
mov
xchg
dec
sub
cmp
jno
in
out
jmp
mull
xchg
in
getsec
xchg
or
xor
jg
fs
shlb
cmpsl
sbb
push
pop
leave
fstpt
mov
int3
push
nop
mov
sahf
test
jecxz
xor
aas
leave
xchg
mov
jl
jno
xchg
aad
std
stos
cmp
xor
negl
inc
lea
adc
xchg
or
repnz
xchg
pop
dec
jnp
add
sbb
pop
or
je
sbb
sbb
scas
push
pop
arpl
and
test
enter
push
cltd
popf
ss
xlat
or
adc
scas
mov
test
loop
pop
dec
daa
adc
mov
add
daa
inc
movsb
push
push
pushw
mov
and
xchg
or
jo
push
mov
jg
jge
leave
cli
cli
test
pop
jge
frstor
sbb
pop
shlb
xchg
xchg
or
mov
movsb
fldt
pop
dec
jae
inc
stc
stos
lods
andb
push
mov
imul
inc
xchg
mov
jp
aam
call
outsl
cmp
adc
or
mov
inc
pop
pop
test
mov
sub
ja
pop
adc
addb
imul
cmp
jnp
pop
pop
shr
inc
sbb
inc
test
scas
push
loop
mov
fcompl
mov
push
popf
mov
jnp
movsb
xchg
pop
xor
ret
shlb
punpckhbw
or
stc
lret
mov
cld
pop
lret
push
in
mov
es
movsl
jns
inc
add
cltd
and
sub
inc
pop
sub
inc
loope
inc
fidivrs
add
test
sbb
push
pop
pop
or
out
enter
adc
pop
push
xor
fs
xor
inc
loop
pop
lret
add
pop
xorl
mov
sbb
jp
jg
jne
inc
push
mov
movsb
inc
xchg
ret
leave
cmp
jmp
jb
fnsave
dec
sarl
inc
dec
fiadds
mov
or
xor
repz
add
xchg
mov
outsl
sub
mov
scas
cmp
cmpsb
ret
out
lods
pop
jne
jecxz
jecxz
mov
stos
aad
mov
or
push
and
test
lods
lcall
mov
daa
and
ffree
or
sahf
aas
cmp
je
insl
dec
push
mov
cmp
sub
nop
push
adc
or
cltd
xchg
pop
fsubp
nop
push
arpl
lods
push
xor
and
mov
shlb
xor
inc
cld
outsb
sbb
in
or
enter
dec
pop
mov
daa
cmp
stos
mov
add
mov
clc
lods
mov
push
fdivrl
or
pop
push
xor
popa
test
and
ds
inc
ja
inc
dec
iret
adc
aaa
fildl
pop
ljmp
imul
ljmp
add
in
lds
mov
lock
or
outsl
sbb
test
mov
jge
xor
aam
inc
ror
inc
jge
jmp
hlt
xchg
loope
lahf
les
push
ja
xor
arpl
in
pop
mov
sbb
jmp
lods
push
jmp
xor
cmp
insb
loop
fisttps
bound
ds
das
sti
fsubrl
popa
repz
cld
and
mov
cwtl
fst
push
xor
mov
jbe
testl
push
cmc
jmp
stc
or
or
jns
std
stc
sahf
in
lea
cmp
loope
push
xor
xor
clc
incl
pop
inc
jb
sbb
shll
or
pop
gs
pop
lret
clc
in
xor
mov
icebp
out
gs
mov
cmpsl
push
xchg
mov
pop
cmpsl
scas
mov
insl
in
loope
inc
enter
into
jmp
popa
insb
jmp
sub
pop
xor
aaa
add
fadds
inc
repz
mov
in
popf
cmp
movl
jp
xor
ss
mov
sub
stos
hlt
add
out
mov
lods
jo
push
xchg
push
loope
add
loopne
push
lods
in
xchg
inc
dec
mov
jo
outsl
addr16
adc
mov
mov
lea
dec
test
insb
sub
imul
cmp
daa
pushf
sarb
iret
dec
test
xchg
jo
mov
cs
pop
scas
adc
aas
ljmp
fsubrl
and
aam
or
push
pop
inc
pop
mov
lds
lcall
aad
dec
outsb
fisubrs
xchg
rclb
arpl
mov
jno
js
rorl
and
cmpsb
mov
jae
xor
sub
imul
dec
mov
push
xor
movsl
shll
cmp
dec
inc
cltd
dec
mov
int
mov
dec
xchg
sahf
popa
cwtl
fimuls
pop
jmp
test
sub
daa
xor
int3
fldcw
push
out
sub
sahf
ds
adc
movsb
sbb
ret
lcall
imul
pop
adc
int
fwait
adc
push
mov
data16
fs
packuswb
inc
or
pop
mov
xchg
in
mov
insb
sbb
mov
add
add
mov
dec
push
and
cmp
mov
add
dec
adc
mov
jo
add
adc
xchg
push
fistpll
outsl
out
push
ret
adc
outsb
dec
les
pusha
push
mov
adc
in
call
mov
mov
cltd
ret
leave
popa
cmp
dec
cltd
ljmp
movhps
lock
xchg
xor
repz
pop
xchg
sub
ss
adc
xchg
dec
jge
push
inc
and
lods
fistps
ss
mov
fdivrl
js
cmp
jne
sbb
adc
jo
mov
daa
lret
xchg
loope
lea
jb
pop
sahf
fildl
sbb
jo
xchg
mov
mov
aad
rclb
sbbb
in
call
out
int3
sbb
or
scas
add
out
xor
in
push
out
dec
bound
mov
and
loopne
and
and
dec
jge
cmp
push
xchg
cmp
enter
rol
xor
lds
fs
pop
mov
movsb
or
inc
test
shlb
or
jne
push
sti
inc
push
leave
adc
loop
outsl
xor
mov
cld
aam
pusha
lcall
xchg
sarb
mov
dec
rorb
addr16
aas
adc
subb
pop
fsubrs
sbb
enter
sbb
jg
cs
jp
dec
jmp
movsl
push
xchg
pop
out
and
bound
in
pop
adc
xchg
sbb
cwtl
data16
cli
fidivs
bound
mov
in
out
pop
in
dec
pop
clc
mov
adc
or
or
loop
xchg
test
xchg
fnstcw
or
mov
xchg
mov
loopne
addr16
sbb
in
lcall
xor
mov
push
mov
cmp
sbbb
push
pop
scas
lea
mov
pop
mov
shll
dec
mov
ss
mov
and
sub
and
pop
jmp
popf
shl
inc
xor
jo
repz
dec
sub
sbb
int3
lods
fnstenv
and
shll
aas
mov
inc
xchg
mov
push
mov
adc
sarb
mov
and
mov
call
daa
inc
shl
jle
nop
lock
push
leave
sub
xchg
scas
xor
outsl
daa
das
jns
in
add
xchg
push
xor
sbb
and
sbb
pop
push
xor
xchg
cltd
ret
mov
and
dec
jl
mov
in
mov
sub
insl
mov
jae
loop
insl
inc
or
outsl
adc
xlat
jnp
jge
or
mov
outsl
aaa
ss
sbb
gs
sub
sbb
lock
iret
arpl
lock
push
push
push
sub
push
pop
clc
outsl
je
bound
or
push
enter
add
mov
xor
add
push
xor
fcoml
cmp
xchg
add
pop
push
into
add
insb
pusha
inc
fnstenv
test
iret
sub
pushf
pop
or
lret
sbb
loop
lea
pusha
or
pop
jmp
pop
in
dec
jne
sub
daa
insl
xor
cs
xor
mov
mov
xchg
push
mov
mov
pop
mov
sarb
push
insb
into
sub
jbe
filds
lahf
pop
setp
jl
into
or
ss
inc
inc
sbb
adc
push
fcoml
outsl
and
xchg
inc
leave
das
inc
inc
add
push
test
add
rorb
int
and
mov
sti
jmp
mov
xor
aaa
aaa
mov
dec
movsl
mov
in
cmp
loop
xchg
xchg
inc
pop
adc
jg
test
dec
push
and
bound
adcb
pop
cmp
jg
das
lds
xchg
dec
nop
pop
cwtl
add
sbb
lret
enter
clc
push
imul
inc
pusha
outsl
sub
jl
cmp
les
inc
xchg
cmp
sbb
push
push
add
pop
pop
mov
jb
fstl
stos
out
xchg
sbb
xchg
in
and
test
adc
pop
aaa
pop
lds
adc
or
inc
imul
js
fucom
cmc
inc
test
adc
sub
outsb
push
and
loope
push
fwait
jb
cwtl
and
lahf
inc
call
dec
in
jbe
or
shlb
outsl
xchg
push
test
inc
and
jmp
std
cmpsl
hlt
push
lds
shrl
inc
and
pop
clc
mov
es
das
out
dec
jo
lahf
fmull
imul
int3
or
addb
mov
mov
hlt
push
cmp
scas
cwtl
jg
mov
test
jae
push
scas
xor
jmp
push
aam
mov
fsts
mov
xchg
jmp
dec
inc
jns
andl
or
mov
outsl
dec
jecxz
adc
cmp
scas
pushf
cmpsb
lret
adc
ret
popl
pop
dec
or
mov
or
sahf
push
test
pushf
mov
mov
popa
sub
push
lcall
cmp
das
dec
cmp
mov
adc
js
sub
outsl
and
xor
jo
mov
stos
sub
lea
and
jecxz
lret
add
fldcw
push
pop
int3
or
lea
sbb
in
fldt
pop
cmc
movsl
je
lahf
loopne
sub
xor
into
cmpsb
sub
inc
mov
inc
push
testl
aad
test
sub
inc
pop
jns
mov
aas
mov
adc
mov
add
jne
punpckhwd
mov
fwait
leave
pusha
insl
inc
xor
pushf
int
xor
stc
insb
jbe
scas
pop
movsb
xlat
cs
js
data16
mov
pop
cmp
jb,pn
xor
and
inc
xchg
xchg
mov
insl
test
cmp
mov
xor
sub
adc
popl
mov
call
nop
xchg
dec
outsl
mov
repz
int
lds
cld
push
das
adc
xchg
and
push
clc
ror
ljmp
loopne
pop
pop
in
jl
in
orb
fpatan
mov
add
jns
sbb
jno
mov
test
jb
pop
fcmovne
inc
or
lcall
into
and
jmp
dec
rcrb
or
popf
out
ja
cld
cmp
jecxz
inc
or
test
inc
lcall
stos
jg
pop
xchg
mov
pop
cltd
dec
loop
leave
stos
jl
popf
out
push
iret
aas
cmc
int
xchg
and
xchg
les
mov
cmp
xchg
shll
in
rcrb
jnp
movsb
mov
sbb
out
or
push
sbb
push
cmc
push
mov
push
jnp
ror
sbb
mov
and
pop
push
fs
ljmp
testb
push
lcall
loopne
pop
clc
int3
mov
pop
jecxz
xor
or
mov
add
imul
pop
mov
insb
push
out
lds
push
pop
cmp
jl
data16
cltd
dec
adc
jl
sub
push
sahf
icebp
das
fidivrs
andl
push
xlat
fbld
test
and
lret
xchg
and
aas
jmp
add
ljmp
pop
fadd
sub
stos
mov
jge
inc
mov
mov
push
sbb
sbbb
cmpsb
mov
push
imul
ja
loopne
add
insl
mov
int3
add
out
ret
mov
jg
dec
gs
sbb
loopne
inc
jno
or
into
pushl
xchg
int3
push
lock
cmpl
cmp
popa
push
mov
stos
jp
je
popf
or
jno
jne
ja
add
pusha
sub
xchg
cmp
ljmp
ss
fcoms
mov
lahf
loopne
sbb
sub
mov
push
push
out
xchg
orl
subl
cmp
pusha
lret
repz
shlb
pop
pop
or
push
add
out
les
push
cli
lcall
in
cmp
push
aaa
dec
jb
adc
pop
push
or
outsb
in
cmp
mov
xchg
jmp
adc
push
cli
or
xchg
xorb
add
add
mov
add
sbb
cmpsl
xor
or
or
leave
rcrl
add
cmp
lods
push
or
jbe
call
xchg
sbb
sub
xlat
xchg
repz
ds
cwtl
sbb
outsb
mov
jmp
xor
fisttps
out
mov
rorb
into
mov
xlat
jl
rcl
clc
xor
inc
lret
js
addr16
lock
mov
pop
cmpsb
incb
fidivl
fnstenv
lret
dec
fcmovb
test
jecxz
pop
sti
popf
and
lock
push
stos
insb
sub
fnstsw
scas
scas
dec
cmp
pop
push
aad
sbb
scas
xchg
or
xor
aad
mov
lods
mov
xchg
mov
notb
jp
mov
js
or
inc
int
jns
jecxz
insb
int
add
cmp
jno
ss
sub
dec
dec
inc
lcall
push
mov
dec
add
nop
lahf
movsl
ret
pop
and
add
sub
rolb
jecxz
sub
and
pop
jge
std
pop
adc
shlb
test
fst
frstor
xchg
xor
bnd
and
and
dec
mov
subb
dec
jne
fcompl
call
and
outsl
or
xchg
push
adc
cmp
push
xor
ja
pop
cmpsl
sarl
nop
data16
in
mov
sbb
xor
ljmp
lret
mov
xchg
jne
mov
mov
or
lret
shlb
incl
adc
mov
jmp
test
loopne
cmpsb
jge
mov
jle
js
push
dec
ss
fstpt
dec
mov
in
dec
outsl
out
mov
imul
bound
xor
sub
call
cmp
jnp
sbb
sub
mov
dec
call
icebp
ja
fadd
mov
pop
aad
push
imul
sbb
imul
adc
addr16
daa
sbb
mov
or
push
aaa
pusha
sahf
mov
sub
sbb
add
mov
loope
push
sub
cwtl
mull
xlat
lds
scas
cmp
fdiv
xor
add
mov
mov
scas
imul
outsb
cmc
inc
test
push
xor
ret
jp
mov
mov
jno
mov
mov
lret
cmc
daa
adc
and
mov
loopne
imul
xchg
in
hlt
mov
jns
inc
mov
int3
insl
jle
inc
jae,pt
mov
mov
mov
shlb
or
xor
mov
inc
jbe
pop
aaa
fildl
jbe
test
jne
xlat
fwait
pop
ja
insb
loopne
xchg
stos
xchg
inc
hlt
ret
testb
xchg
mov
shrl
out
cli
jnp
or
in
stc
mov
repz
jl
push
sub
xor
aaa
xchg
insb
jns
dec
popa
imul
mov
jb
ja
bound
test
repnz
dec
or
xchg
dec
filds
arpl
addl
xchg
daa
cmpl
mov
push
repnz
test
mov
fists
xlat
mov
loopne
ret
sbbl
je
in
insb
mov
nop
pop
mov
and
jne
or
rol
inc
hlt
or
push
cld
or
adc
cmp
data16
xor
jmp
in
pop
lahf
jmp
xchg
mov
fisubrs
mov
in
adc
sbb
cli
shll
pop
pop
lods
lret
jo
adc
loop
movsb
and
xchg
mov
or
data16
jp
and
lods
sti
jo
jle
pop
sahf
mov
pop
and
outsl
gs
push
cmp
xchg
movsl
inc
loope
ror
pop
xchg
jnp
jns
cmp
sub
mov
xchg
pop
shrl
sbb
pop
mov
sbbl
jns
pop
rclb
push
add
mov
ljmp
pop
enter
jb
xchg
mov
jno
insb
push
mov
sub
imul
popa
jns
jge
hlt
and
jae
push
inc
push
dec
pushf
xor
mov
es
mov
xchg
int3
fsubl
pop
stos
xchg
bound
outsb
test
pushf
in
add
sub
repnz
in
imul
lret
imul
sub
xchg
pop
and
loope
sbb
adc
pop
mov
test
dec
dec
add
xchg
mov
popf
lock
jg
push
add
scas
or
sbb
jle
xchg
pop
outsl
repz
fdivl
xor
in
pushf
movl
pop
rcrb
or
pop
dec
hlt
fstp
mov
iret
test
ljmp
mov
fistpll
jne
cmpsl
scas
dec
out
sbb
cmp
int
push
mov
push
test
lret
dec
cwtl
push
jns
pop
dec
and
mov
out
ljmp
inc
iret
shrb
cmpsl
pop
fs
inc
sbb
mov
loop
imul
mov
arpl
sub
imul
pop
ss
lods
je
push
jb
fbld
push
push
aad
sbb
int
push
in
and
jp
lahf
lcall
cs
mov
jae
fs
mov
lcall
cwtl
lock
call
xor
mov
stc
ficoml
inc
jg
push
mov
into
mov
sbb
pop
clc
cmp
jae
loopne
push
push
pop
nop
dec
ljmp
enter
push
bound
idivb
shl
cmp
cmpsl
int
sti
rcrl
js
sbb
and
mov
rorl
dec
adc
lret
pop
pop
sbb
std
bound
add
adc
cld
fwait
lods
ficoms
test
flds
dec
addr16
cmp
in
filds
cs
mov
adc
cltd
sbb
fucom
jmp
addr16
or
lods
arpl
adc
fs
pop
sbb
jne
jge
cmp
out
aas
jmp
insb
adc
loop
test
movsl
aaa
fsub
imul
fidivrl
and
dec
pop
mov
fcomi
fwait
add
pushf
test
loope
add
sub
dec
and
inc
mov
and
cli
iret
test
pop
and
sub
push
inc
push
das
scas
mov
test
push
shlb
fldt
ds
movsl
sub
movhlps
jo
cwtl
movsb
lods
es
mov
mov
fsubl
in
or
pop
and
or
xor
inc
cld
mov
mov
sub
xchg
aam
movsl
cmp
or
xchg
dec
jo
cmp
lret
sahf
dec
inc
movsl
daa
int3
push
int
pop
mov
outsb
push
inc
insl
xor
fcmovnbe
push
das
out
test
jno
outsl
pop
stos
movsl
adc
andb
mov
jno
push
repnz
fcoml
add
imul
add
fstpt
int
jne
lahf
and
xchg
aaa
xchg
mov
dec
fdivrs
jnp
sbb
orb
cwtl
xor
jb
fs
aas
dec
ret
fmul
pop
loopne
pop
fimull
mov
add
jl
push
sub
ret
add
push
cmpsb
xchg
pusha
out
outsb
out
dec
sbb
sub
mov
inc
insl
mov
bound
jg
mov
out
das
add
cmp
adc
inc
loopne
sub
scas
scas
sbb
and
cmp
in
cmp
mov
leave
sbb
dec
inc
call
idivb
or
bound
cli
mov
push
fimull
push
mov
fisubrs
cli
and
inc
popa
sbb
cld
aam
int3
int3
xchg
or
mov
fdivr
sti
jne
faddl
pop
int3
jns
jns
or
js
mov
lahf
pop
in
mov
jne
fstpt
dec
or
sub
rcrb
sbb
call
out
lods
sbb
xor
mov
jnp
sbb
iret
js
push
or
cmp
push
mov
js
arpl
int
fildll
mov
int3
jle
ja
xorl
push
insb
loopne
invd
xor
ds
sub
in
jno
mov
pop
ds
lahf
dec
add
xchg
jae
sub
xlat
daa
test
xchg
pop
mov
mov
cld
mov
repnz
cld
dec
dec
movsb
ret
xchg
sub
testb
mov
in
mov
ja
pop
push
adc
int3
stc
inc
push
xchg
jne
nop
mov
mov
ja
mov
repz
dec
fdiv
pusha
ret
cli
iret
sti
xchg
mov
sbb
cmc
add
mov
adc
arpl
repnz
loope
in
mov
lret
sub
sbb
xor
mov
dec
add
mov
testb
test
shll
test
cld
orb
in
sarb
lock
or
int
sub
sbb
and
aam
pop
mov
mov
push
lret
aam
inc
in
stos
add
aam
sub
push
cld
cmp
jo
imul
arpl
mov
xchg
fwait
aam
stos
int3
push
dec
jmp
push
cmc
mov
jmp
loopne
mov
cld
or
cmpsl
mov
lods
xchg
int3
in
aam
push
aad
test
sbb
inc
jge
nop
pop
test
out
addb
lock
push
push
xchg
lret
push
push
fs
mov
push
clc
inc
pop
mov
cmpsb
mov
arpl
xor
subb
xchg
daa
or
jecxz
fdivl
sbb
sub
adc
mov
mov
add
pop
and
jge
into
pop
orl
pushf
aad
add
adc
mov
mov
xchg
inc
cmpsl
jmp
out
or
mov
fsubrs
outsb
and
lods
inc
rorb
sub
stc
addl
inc
mov
lds
or
mov
add
xchg
pop
insb
adc
mulb
ss
pop
cmp
pop
popa
rclb
sbb
div
data16
shll
stc
fcoml
rclb
ss
leave
jns
sbb
jecxz
cmp
jo
xor
xchg
fisttpl
add
sub
sub
pop
jl
inc
xor
pop
xchg
jecxz
ds
outsl
out
je
mov
xchg
test
dec
mov
popa
pushf
movsl
jmp
mov
xchg
imul
pusha
ss
int3
mov
mov
or
mov
xor
sub
jmp
decl
pop
out
xchg
xchg
mov
inc
mov
je
jno
sbb
rcl
inc
cmpsl
out
sbb
add
fiadds
mov
xor
cmp
sub
mov
inc
ret
lock
lds
pop
repnz
das
out
shll
int
push
pop
dec
stc
sti
sti
xor
pop
aas
adc
out
daa
sub
pop
jae
or
cmp
stos
sub
cltd
mov
mov
out
sbb
inc
jnp
cmp
gs
mov
popf
aaa
xchg
push
push
pop
push
inc
jne
mov
aad
cli
and
jbe
sub
movsl
add
xor
nop
and
mov
and
hlt
pop
fdivl
sbbb
int3
inc
add
push
pop
lcall
in
mov
sub
mov
mov
cwtl
xchg
jg
pop
sub
cmpsb
inc
lcall
loope
movsl
fadds
or
das
sahf
insb
test
js
sbb
lahf
lcall
fwait
mov
into
inc
icebp
ret
stc
and
daa
or
clc
mov
enter
stos
mov
mov
mov
leave
test
int
xchg
or
hlt
xlat
sbbb
test
movsb
xor
adcb
push
adc
sarl
xor
dec
test
jns
rcr
mov
movsb
sub
sbb
in
jle
sbb
enter
test
movsb
or
iret
fs
xchg
mov
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
inc
xchg
repz
rolb
add
jp
rorl
mov
ljmp
ja
push
cmp
dec
sahf
int
stos
push
push
xchg
cld
pop
add
mulb
ret
sbb
pop
subl
xor
mov
mov
xchg
cmp
pop
adc
fs
negl
mov
pop
lcall
arpl
cli
add
repz
xor
ficoml
out
pop
cli
xchg
arpl
mov
and
sub
pop
sub
push
cli
jbe
fld
in
aad
cli
movsb
in
sbb
cld
in
je
mov
sub
cmc
shlb
jmp
xchg
push
test
sahf
jp
daa
push
add
jno
jae
addl
dec
inc
push
fwait
movsl
or
inc
pop
sbb
xorl
imul
mov
test
mov
imul
sbb
lcall
das
popf
mov
repnz
std
gs
pop
ljmp
cmc
aas
inc
pop
rol
loope
jb
xor
aam
inc
scas
or
mov
add
mov
pop
mov
mov
adc
and
arpl
push
sub
and
pop
pop
push
and
subb
nop
jle
mov
cld
xchg
and
xchg
push
stc
mov
add
sub
push
pop
cmpsl
mov
cmp
xchg
cmp
and
inc
jecxz
adc
push
dec
hlt
push
push
mov
rclb
fld
daa
sub
mov
sub
ret
test
cmp
jge
jl
and
add
xchg
or
loopne
data16
xor
jno
shll
cmc
cmc
mov
or
push
sub
pop
push
push
pop
cli
outsb
xchg
cmpsb
inc
insl
pop
dec
inc
js
push
test
sub
aaa
stos
xchg
push
jl
and
jmp
mov
lret
insl
or
clc
push
incb
fisubrs
fwait
xchg
les
xchg
es
insb
mov
roll
fistl
sbb
jl
or
in
test
jecxz
jg
leave
pop
out
lds
shll
jecxz
mov
mov
mov
ret
lods
pop
or
push
sub
or
jmp
pcmpgtb
icebp
push
imul
movsl
repz
cmp
stc
lock
hlt
cmp
adc
adc
add
dec
xor
mov
inc
mov
adc
repnz
cmc
ds
jno
stos
frstor
cwtl
jge
loope
pusha
ret
movsl
xor
test
mov
imul
jle
add
xor
shrl
or
push
mov
add
dec
cmp
push
mov
fs
xor
mov
mov
dec
push
popa
inc
push
popa
daa
sub
dec
xor
inc
dec
je
rol
cmp
mov
into
addl
or
in
inc
negb
clc
outsb
mov
pop
std
in
inc
inc
xor
sbb
sub
inc
add
and
sahf
adc
jle
mov
mov
notb
popa
clc
dec
cli
dec
and
dec
jae
inc
jl
in
dec
adc
push
sbb
orb
cmc
repnz
lea
in
mov
adc
adc
push
jbe
and
lret
movb
push
fisttpl
jnp
ds
mull
stos
push
jge
mov
aam
int
sub
dec
stos
mov
retw
push
lods
cmpsl
mov
push
clc
sbb
push
pop
add
inc
pop
js
stos
jecxz
data16
loopne
xor
and
xchg
mov
pop
outsl
xchg
cmp
add
cmpsl
sarl
lahf
shll
mov
jge
xchg
adc
push
ds
mov
fs
xchg
loopne
xor
into
xchg
cwtl
test
lret
shl
xchg
repnz
sub
jl
in
test
and
and
jge
sbb
xchg
cmp
lret
iret
push
mov
dec
pop
push
mov
xor
pop
imul
loopne
aaa
leave
fcoms
stc
cwtl
inc
inc
pop
testb
lret
ret
dec
clc
cmp
lock
xlat
adc
sub
sub
out
js
out
push
sbb
nop
mov
dec
inc
xchg
push
inc
in
push
jmp
gs
add
std
pop
cmp
xchg
sbbb
cmc
fisubs
arpl
sahf
or
popf
aas
fistl
imul
or
mov
mov
jbe
or
xor
pop
movsl
shrb
in
out
xlat
in
jno
enter
std
add
pop
push
movsb
inc
divl
notb
aam
imul
sub
adc
int3
adc
in
iret
iret
xor
lret
fisttpl
lahf
add
jo
sub
rorb
pop
loope
ja
andl
jge
shlb
popa
arpl
clc
sub
dec
push
xchg
lahf
add
aam
dec
out
dec
sti
xor
into
adc
xor
push
sbb
lcallw
fnsetpm(287
or
jb
mov
mov
adc
mov
mov
in
or
stos
mov
push
mov
jmp
inc
stos
stos
mov
enter
mov
adc
add
and
adcb
andb
enter
addr16
shlb
jbe
mov
in
out
rclb
mov
lods
and
std
mov
cmpsb
fisubrs
test
dec
repnz
jecxz
xchg
fwait
inc
sub
imul
in
lret
inc
or
push
sahf
pop
xor
test
jbe
cld
or
xchg
xchg
cmp
adc
imul
pop
inc
jbe
and
push
je
je
mov
stc
mov
bnd
leave
dec
xor
xchg
xchg
xchg
jge
xchg
call
insb
into
xchg
call
jbe
and
sub
push
and
push
and
sbb
lea
lock
pop
stc
int
xor
call
mov
sbb
and
pop
push
mov
or
mov
fnstenv
outsl
adc
jecxz
sbb
fimuls
cli
jge
subb
ss
dec
pop
dec
sub
call
lret
sbb
inc
jns
cmpsl
push
int3
cmp
jne
xchg
arpl
jmp
dec
inc
jns
inc
jnp
jne
mov
mov
dec
lods
les
enter
inc
cmpsb
sub
testl
xor
pop
mov
jae
pop
xor
fbstp
mov
stos
ja
push
popf
repnz
inc
enter
dec
jbe
xchg
xchg
add
xor
sub
jg
lret
dec
inc
jge
add
xlat
loope
notl
movsb
fsubl
mov
lret
iret
mov
push
add
rolb
test
adc
arpl
lods
rcrl
out
out
sbb
andb
add
fdivl
fcomps
jecxz
xchg
fdivrs
out
cmp
cmp
or
fdivrs
popl
sub
mov
push
jp
stos
leave
sbb
subl
sbb
out
pushf
rcl
cwtl
scas
cmp
xchg
xchg
cmp
cmp
mov
fwait
push
rcrb
mov
or
mov
xchg
xor
jbe
out
mov
sahf
out
lea
or
jno
lea
mov
mov
xchg
mov
sbb
and
roll
lods
add
mov
jbe
sbb
ljmp
sub
fisttps
cmpsb
mov
or
leave
mov
and
loop
outsl
xor
xchg
cmp
repnz
into
popa
test
sub
adc
shrb
scas
fbld
daa
out
or
xchg
or
cmp
aas
pop
lock
popf
dec
sbb
ljmp
leave
stos
and
ret
out
jecxz
js
gs
fwait
loop
fcmovne
lea
loopne
xchg
jbe
aam
push
jb
lds
popf
mov
loope
clc
test
popf
add
mov
add
and
mov
jecxz
xchg
rcrl
push
push
inc
and
and
adc
stos
cmp
sbbl
orb
lods
nop
ds
jne
shll
mov
dec
enter
nop
loop
pop
add
mov
dec
or
add
cmp
push
and
mov
push
aad
push
and
dec
stos
cmp
fiaddl
adc
or
and
jnp
jno
jnp
out
or
sub
mov
in
sub
adc
sub
jnp
es
arpl
aad
pop
pop
aas
jno
push
dec
mov
lock
rcrb
push
outsl
ljmp
mov
cmpsb
syscall
fdivs
mov
fadds
xor
repz
dec
lods
mov
mov
fcmovnu
data16
lret
jae
pop
repz
jecxz
imul
out
xchg
dec
sahf
sbb
push
jno
sub
ljmp
sub
adc
hlt
xchg
pushf
or
lahf
jecxz
xor
mov
jmp
test
out
pop
inc
push
jmp
adc
jae
repnz
popf
fiaddl
imul
jge
xchg
push
push
std
push
mov
mov
movsl
repnz
loopne
out
nop
xchg
dec
xlat
pop
dec
loopne
ds
ss
aad
cmc
in
or
neg
adcl
mov
or
lcall
jmp
push
cmp
inc
xor
push
push
inc
mov
or
mov
notb
loop
mov
sbb
xor
sti
aaa
xor
es
xchg
lods
jecxz
mov
lret
pusha
xchg
cmp
gs
mov
xrelease
int3
mov
fs
popf
clc
jno
scas
mov
mov
mov
ffree
xchg
out
fdivl
dec
stos
jl
hlt
push
ret
out
iret
loope
hlt
fimull
lahf
sub
mov
or
push
or
insl
mov
mov
test
fwait
push
das
fldenv
add
arpl
sub
mov
cmpsl
adc
push
jne
ss
and
in
cli
inc
jo
pushf
pop
inc
cld
inc
mov
sub
pushl
lret
jl
in
sub
sub
jno
test
xchg
jo
clc
inc
outsb
or
mov
nop
sbb
int
inc
loopne
or
scas
add
sub
mov
fdivr
mov
inc
ud0
jge
bnd
out
lret
das
scas
pop
jge
out
pop
xor
mov
mov
pop
cld
insl
inc
out
jne
adc
and
mov
lret
rcll
jbe
adc
orb
adc
sbb
jge
lods
aam
ret
pop
gs
xor
mov
push
pushf
test
fdivrl
jecxz
popa
mov
mov
les
push
frstor
lods
hlt
mov
push
dec
pop
pop
lock
mov
xorb
icebp
lret
and
fadds
shrl
and
push
fcmovb
aas
mov
jmp
hlt
jg
stc
xlat
out
mov
sti
lret
loope
and
sbb
dec
xchg
xchg
jo
push
inc
bound
mov
xchg
mov
popf
rol
dec
inc
mov
es
sbb
push
mov
aas
rcrb
lods
sub
test
mov
cwtl
cmp
out
js
xchg
cmp
fs
in
jae
test
aam
pop
xor
out
inc
xchg
jbe
mov
int
out
or
loopne
iret
add
and
pop
xchg
mov
inc
or
les
xchg
leave
mov
pop
jnp
pop
sbb
pop
inc
push
xor
repnz
mov
lahf
test
enter
ficoms
and
test
scas
adc
xor
mov
inc
std
dec
cmp
aad
pop
pop
lcall
xchg
add
pop
lock
xchg
mov
popa
pushf
insb
ds
jbe
push
in
xor
or
adc
cmp
not
and
cltd
mov
add
in
fcomip
pop
out
daa
push
aam
jle
xorl
insb
push
sbb
or
add
sbb
inc
sub
test
mov
stos
mov
dec
xchg
mov
inc
stc
mov
int3
mov
dec
sti
jge
xchg
mov
mov
loope
in
jle
cltd
les
fisubl
ficomps
cmp
xchg
negl
push
mov
jmp
cmpsl
lods
xchg
dec
outsl
aad
mov
and
sbb
jbe
pop
das
or
or
call
ljmp
sahf
xor
xchg
jbe
inc
fsts
xchg
rorl
out
adc
dec
inc
push
dec
sbb
aas
jmp
movsb
sarb
rolb
pop
in
dec
cld
leave
out
andb
bound
clc
mov
loopne
aas
bound
cwtl
cmpsl
fwait
ss
add
lret
gs
jbe
test
jb
add
dec
std
inc
sub
ljmp
pop
cmovl
pushf
sbb
mov
rolb
arpl
xor
sub
mov
sbb
inc
rol
sub
mov
cmp
cli
sub
mov
repnz
das
sub
or
loopne
jne
mov
mov
xor
imul
xor
pop
jle
popf
out
and
test
mov
add
adc
adc
cmc
ss
jecxz
or
adc
in
add
inc
inc
push
push
movsl
sbb
cmp
inc
sahf
jns
jge
adc
cs
lret
lcall
aad
frstor
lret
cltd
ljmp
cmp
clc
push
jno
pop
mov
mov
sub
and
sub
dec
popf
mov
sub
adc
call
hlt
jge
daa
xchg
pop
dec
mov
iret
mov
aas
iret
data16
add
jno
jge
and
popa
mov
je
rcll
xchg
inc
ret
sub
add
inc
dec
sub
mov
add
loop
cmp
adc
pop
jne
aaa
aas
jp
imul
insl
imul
mov
in
fwait
popf
sub
add
push
pop
sbb
and
add
repz
ret
xor
out
sahf
push
xor
mov
addr16
lods
scas
and
mov
enter
out
and
add
xchg
push
into
or
arpl
mov
xor
std
out
xor
jbe
ljmp
cmp
xchg
fs
pop
pop
xchg
push
arpl
cmp
inc
pop
mov
push
xchg
rolb
int3
imul
popf
vpackssdw
in
and
je
fcoml
ja
pop
test
xchg
mov
lock
dec
jecxz
test
fcmovnb
or
mov
xchg
movl
push
lcall
jnp
pop
push
push
pop
stos
push
ficoml
xchg
inc
insl
mov
cmp
xchg
and
jg
cmpsl
sub
mov
cmp
addr16
mov
loopne
stc
fs
xlat
xor
fldenv
xor
arpl
mov
test
insl
out
push
add
pusha
mov
shlb
fwait
int
outsl
adc
hlt
push
bound
insl
sbb
imul
sahf
dec
nop
lret
xor
sub
push
push
mov
out
inc
mov
xor
adc
test
jl
pop
or
jns
psubsw
pop
aas
leave
push
in
xor
lds
aaa
dec
and
xor
in
test
cltd
xchg
js
stos
lret
fs
int3
pop
popa
push
and
jno
xchg
out
in
jns
loope
rcrb
adc
add
ds
cmp
jb
js
or
out
mov
mov
adc
push
or
cmpsl
popf
out
xor
pushf
jmp
jbe
mov
xor
mov
and
js
fstpt
and
in
mov
dec
sbb
aaa
sbb
or
and
xor
inc
daa
sub
cmp
sbb
jg
sub
jo
out
dec
stos
dec
push
sub
nop
xchg
shrb
int3
ret
sub
xchg
xor
in
shll
sti
std
jg
cmp
rcrl
dec
pop
mov
cltd
mov
adc
pop
jecxz
aad
or
push
sub
mov
aad
pop
pushf
ret
cld
xchg
std
fidivrs
mov
sub
outsb
push
ss
js
mov
jle
repz
xchg
shll
clc
jbe
jp
cmp
ret
xchg
lahf
add
dec
and
leave
mov
mov
popa
mov
push
xlat
pop
roll
jbe
out
mov
int
lahf
aad
dec
cmp
add
out
mov
jecxz
out
jmp
aaa
push
enter
mov
dec
xor
mov
clc
subl
out
mov
mov
cmp
test
in
cld
push
repnz
adc
inc
loop
mov
adc
or
hlt
sub
lret
jp
inc
push
cwtl
out
mov
shlb
and
cmp
pop
push
lahf
stos
js
sti
movsl
jmp
repnz
cmp
jg
cmpsl
xor
inc
test
jmp
rcrl
jae
loopne
pushf
mov
stos
mov
and
leave
mov
inc
dec
loopne
mov
push
inc
jmp
pop
enter
dec
sar
mov
and
shl
push
movsb
sub
xor
pop
and
mov
fstl
xchg
incl
jns
adc
sti
cmc
or
ds
nop
lods
and
mov
ret
jno
jb
mov
mov
fwait
mov
push
add
sub
ss
mov
stos
dec
xor
adc
jp
jp
pop
mov
mov
scas
std
lea
leave
cmp
das
push
xchg
mov
mov
in
decl
shrl
push
xchg
clc
loop
mov
jns
mov
jge
mov
add
jne
daa
dec
outsl
cmc
imull
in
lahf
dec
loope
je
lods
xchg
jmp
ja
sbb
and
outsb
inc
mov
fistps
test
out
pop
aad
and
and
mov
xchg
inc
cs
daa
sarb
out
mov
outsl
dec
testb
loope
add
aas
scas
sbb
outsl
add
jecxz
shlb
pop
addr16
sahf
not
fwait
insb
push
push
sub
dec
std
loope
push
insb
iret
hlt
fildll
lds
mov
mov
inc
stos
ss
mov
sti
jnp
lds
push
lret
std
pop
ds
sub
rorb
xchg
repnz
or
movsb
cmc
stc
arpl
into
ja
mov
or
mov
pop
imulb
insb
lret
mov
mov
std
jp
decl
add
dec
sub
mov
and
js
mov
loopne
cmp
sbb
xchg
sub
enter
mov
bound
arpl
lds
mov
jb
clc
jecxz
shrb
call
ret
scas
nop
sahf
loop
lcall
inc
lods
arpl
outsl
xchg
jecxz
lock
sub
and
jmp
adc
jle
lret
imul
xchg
mov
jnp
xor
ljmp
mov
push
xchg
je
rcll
into
sub
mov
sub
add
sub
jge
mov
mov
add
pop
mov
lahf
pop
sbb
pop
rcrl
pop
add
mov
or
adc
jno
and
mov
cmp
cmp
cmp
ljmp
popa
nop
test
loope
and
mov
cltd
push
repz
in
push
mov
jne
cmp
push
testw
inc
ret
xchg
dec
mov
pop
shr
push
sbb
push
cld
dec
jbe
xchg
push
fsubl
pop
int3
add
fdivl
sub
enter
jg
out
ret
adc
xchg
loopne
stos
insl
mov
insl
xor
and
dec
es
mul
rolb
ret
ret
push
mov
int
pop
push
stc
outsb
mov
mov
mov
mov
cmp
ss
lods
mov
call
mov
rol
xor
in
dec
arpl
and
or
mov
in
jge
mov
and
stc
jb
pop
lods
pop
add
ss
push
pushf
xchg
and
sbb
rorl
xor
xchg
mov
xchg
fdivrl
mov
and
and
xchg
dec
mov
jns
jnp
dec
add
cmc
fdivrs
xor
mov
movsl
dec
mov
je
aaa
nop
insb
sbb
fs
icebp
add
decb
testb
testl
sbb
es
cmp
push
jmp
pushf
xor
and
push
shlb
xchg
lret
mov
or
divb
or
mov
lods
ds
cltd
shrb
xchg
das
fadds
stos
insl
setle
jno
cwtl
sbbb
dec
in
enter
rcr
jnp
jbe
pop
clc
pop
sbb
rcl
les
lahf
sub
pop
jo
dec
das
aaa
ret
aam
inc
sub
pop
add
mov
fsub
xchg
dec
mov
adc
aaa
push
sub
xchg
ret
cs
mov
fstl
out
ja
jae
mov
fsubrl
push
insl
mov
cmc
mov
sbb
sub
add
out
idivb
fcmovnu
lahf
or
mov
jbe
add
and
int
sub
jle
lcall
mov
fld
push
scas
ljmp
jbe
fcomps
call
jbe
repnz
mov
out
pop
or
cmp
dec
mov
cmp
sub
xchg
xor
pushl
adc
out
cmp
roll
cmp
out
in
jb
repnz
test
lods
gs
ljmp
sub
inc
sbb
and
mov
pushf
mov
push
jb
into
or
inc
popa
add
lcall
ja
shlb
ds
mov
rcrb
ss
adc
add
jbe
popf
mov
lods
pop
mov
aas
ja
mov
adc
ret
popl
mov
mov
jns
push
sbb
sbb
lds
push
mov
int
test
lcall
stc
int3
mov
aas
cmp
sbb
rcll
jo
cmp
pop
push
jp
in
stos
imul
dec
and
xlat
loopne
out
das
adc
xor
rcll
jb
mov
es
dec
push
add
jge
and
mov
mov
xchg
xchg
dec
in
ret
cmp
rcll
and
mov
hlt
aad
test
sahf
or
addr16
imul
idivl
dec
mov
fcoms
mov
push
jae
xor
fmuls
inc
mov
popa
cld
push
pushf
inc
mov
adc
dec
aas
lea
push
rorl
inc
dec
and
xor
cld
push
ja
pop
ss
pop
cs
xor
dec
cld
icebp
jno
lods
mov
shll
pop
jno
hlt
pop
pop
popf
sbb
push
xor
andb
mov
jno
mov
in
pusha
es
repz
pop
jmp
jbe
add
mov
mov
movsl
mov
cmpsb
or
lcall
jno
jmp
andb
pop
cmp
add
jb
adc
std
rcr
xchg
mov
daa
daa
scas
cmc
sub
mov
and
js
xor
jmp
ds
mov
repnz
and
sbb
sbb
ret
push
loope
pusha
sarl
std
fsub
repnz
cmp
adc
and
mov
sub
push
stos
and
cmc
and
cld
orl
or
fs
adc
mov
decb
push
cmp
mov
and
aam
lret
sub
mov
call
xor
or
sbb
and
and
mov
fcoms
mov
cmpsb
clc
arpl
fisubrs
push
jg
packssdw
cmp
sbb
mov
je
xchg
fs
pop
shlb
fnstcw
fwait
and
fmul
inc
and
iret
ljmp
insb
pop
push
mov
pushf
jle
fstpt
mov
adc
mov
cld
mov
scas
jle
icebp
test
mov
je
scas
adc
sub
aaa
dec
jnp
xchg
add
shll
insb
mov
pop
cmp
sahf
ret
mov
mov
xor
hlt
xchg
xorb
xor
mov
orl
dec
sub
ja
in
mov
inc
lea
xchg
fistl
cmp
xchg
nop
sub
sbb
inc
icebp
xchg
leave
loop
sahf
mov
notl
ficoms
jecxz
scas
or
lcall
sub
jg
cmp
or
mulb
gs
into
rclb
rorb
outsb
cmp
inc
add
arpl
add
cmp
inc
pop
pop
insb
movsl
jle
sahf
add
cmp
xchg
dec
scas
jo
cs
jo
push
xor
inc
add
sahf
pop
ds
pop
jp
cs
push
loope
ja
leave
fs
mov
pop
mov
or
sbb
rcrl
push
adc
or
adc
dec
lea
and
push
arpl
lret
dec
adc
xchg
rcrl
enter
outsb
lods
push
mov
push
sub
dec
mov
lret
jo
inc
les
insl
sub
fwait
xchg
inc
scas
fnsave
sub
mov
enter
test
and
jge
xor
xchg
je
stos
pop
mov
into
inc
pop
push
mov
pop
inc
ret
mov
repz
xchg
outsl
pop
nop
lcallw
imul
out
pop
cmp
test
dec
xchg
jg
inc
scas
add
pop
xor
clc
adc
pop
sbb
shll
adc
data16
out
jge
out
jae
je
mov
xor
sbb
ret
imul
loopne
xchg
or
mov
repz
std
or
dec
mov
rcrl
lea
and
shlb
out
cld
adc
es
xlat
int
inc
int
sub
and
mov
sarl
sub
sahf
xor
ret
dec
js
push
pop
sbb
fldt
dec
sbb
sbb
mov
inc
add
nop
rorl
imul
out
arpl
mov
ret
ljmp
in
fimuls
bound
shlb
insb
jmp
jp
mov
push
cmp
mov
popa
cmp
xlat
dec
pop
pop
mov
lock
xchg
cs
jnp
dec
sbb
xchg
cmc
add
lds
shl
add
clc
jge
sbb
rcrb
cmpsl
aam
in
test
xlat
test
inc
sbb
inc
jp
dec
push
push
ds
sbb
cwtl
mov
add
inc
je
dec
and
push
adcl
cltd
mov
push
cmc
loop
add
inc
add
int
fsubl
in
xor
ljmp
inc
or
cmp
scas
pop
mov
cmp
fcmove
xchg
hlt
xchg
std
dec
push
ret
add
jl
xchg
lahf
cmp
loopne
mov
dec
sahf
and
shrb
leave
stos
lahf
in
push
sahf
dec
adc
leave
fmull
pop
sbb
mov
aad
in
push
hlt
movsl
sbb
icebp
scas
rcrl
sub
cmp
pop
loopne
cs
xor
dec
lcall
pop
lcall
cmpsb
pop
repz
add
arpl
jb
mov
sahf
into
or
jp
mov
jae
cltd
rclb
pusha
sbb
orl
sarb
idivb
inc
repnz
pop
xchg
xchg
cld
xchg
xchg
out
xor
mov
cld
insl
test
lock
stc
je
insb
in
cli
outsl
push
pop
cli
in
imulb
ret
cmpsl
jbe
sub
xchg
cbtw
sub
cltd
add
pop
pop
lock
test
cmpsl
sub
rcrl
scas
and
mov
imul
lods
cmp
popa
scas
ficoml
in
aam
iret
out
add
xor
inc
xchg
das
addr16
inc
test
clc
push
sub
cwtl
nop
imul
jno
jl
lods
dec
pop
xor
mov
and
add
adc
or
in
shl
push
lods
dec
pop
jnp
mov
push
aad
mov
pop
xorl
imul
les
push
in
and
ja
mov
mov
pop
out
jbe
add
mov
mov
push
ffreep
insb
lods
mov
push
daa
pop
std
xchg
xlat
lcall
dec
negb
jne
mov
lret
or
ret
fs
stos
or
xor
fwait
and
mov
and
pop
and
mov
dec
mov
aam
and
mov
movsl
push
jl
jmp
fxam
cmp
pushf
mov
daa
mov
pop
icebp
mov
mov
repnz
std
and
fnstenv
mov
subl
sub
or
mov
cmc
in
call
scas
add
push
and
xor
call
sub
ja
in
loopne
int
out
lret
test
jb
push
sbb
fwait
bound
inc
and
ret
mov
fsubp
mov
xchg
mov
push
adcl
xchg
in
lods
mov
cs
outsl
scas
pop
adc
scas
jae
decb
add
xor
leave
out
push
xorl
lods
dec
inc
les
cli
fnstcw
pop
pop
and
lret
mov
lahf
or
arpl
xchg
inc
pushf
repz
adc
ficompl
movq
lods
fdivl
sbb
jbe
and
xlat
and
mov
pop
xchg
mov
xchg
xlat
xor
fincstp
std
pop
sti
dec
jge
sar
pop
nop
push
dec
es
or
enter
cli
add
xchg
cld
movsb
xor
lods
add
push
les
sahf
roll
jg
jb
mov
out
addb
xchg
pushf
mov
adc
mov
in
cs
cmp
fcmovnbe
leave
test
xor
mov
mov
stc
xorb
rcrb
in
jbe
jg
div
inc
in
test
xchg
test
mov
pop
mov
data16
cmpl
dec
ficomps
hlt
in
nop
int
loope
sbb
pop
movsb
sbb
or
xchg
lods
sbb
outsb
clc
test
jge
je
ret
lcallw
and
xchg
push
jmp
sbb
fwait
cmpsl
hlt
adc
xchg
xchg
cmp
lds
test
lret
dec
pop
pop
dec
dec
push
inc
sub
xchg
cmp
es
mov
mov
push
inc
out
aaa
arpl
fisubs
xor
fidivs
cmpsl
xor
aaa
dec
std
cmp
mov
pop
sbbl
ret
dec
sbb
shll
add
or
in
rorb
dec
and
add
inc
loopne
add
add
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
adc
scas
addl
test
scas
std
arpl
and
inc
pop
sti
clc
rorb
inc
int3
enter
xchg
arpl
cmp
std
xchg
cwtl
mov
mov
pop
idivl
mov
iret
std
int
cmpl
cli
mov
dec
jg
stc
or
add
movsl
fdiv
stos
jns
xor
or
or
mov
fbstp
sbb
cmp
lret
in
mov
cmpsl
dec
lret
cmpsl
pusha
std
lods
gs
dec
mov
insb
adc
stc
mov
jb
mov
push
push
cmp
cmp
jge
jmp
cld
imul
jns
cltd
sbb
leave
int3
aas
cmp
jns
inc
xor
and
rol
fistps
push
inc
sub
popf
dec
dec
pop
jnp
lahf
pop
dec
xchg
or
cld
cli
add
cmp
lahf
jb
push
lcall
movl
mov
icebp
and
xchg
pop
repnz
jecxz
sarb
pop
sbbb
lea
mov
outsb
xchg
pop
lock
mov
shlb
scas
dec
and
pop
push
lock
adc
adc
insl
dec
push
ror
or
cmp
outsl
pop
adc
sub
ror
push
push
push
sbb
pop
test
imul
insb
mov
dec
idivl
jmp
or
hlt
add
xor
popa
scas
sbbl
aad
popf
orl
test
mov
rcl
jne
cmpsl
fxch
std
xchg
hlt
mov
addb
dec
mov
jo
inc
addr16
out
lea
xchg
testb
fld
xor
les
leave
mov
insb
mov
cltd
test
jle
mov
clc
add
mov
xchg
roll
dec
and
popa
mov
push
push
fadds
inc
incb
loop
sahf
mov
insb
stos
jo
sbb
aas
mov
out
push
ljmp
call
cmp
xchg
jg
or
push
jo
pop
iret
cmp
sti
or
icebp
mov
mov
adc
loope
dec
in
or
add
or
test
jbe
sbb
mov
pop
ret
mov
or
push
test
rclb
cmp
inc
and
lock
stc
adc
gs
imul
out
repz
sbb
cmp
fildl
push
insl
sub
cs
in
ja
sub
lret
cmc
jg
fnstcw
pop
imul
loop
sub
ret
dec
jo
add
stos
ret
xchg
lcall
fidivs
push
lcall
push
cmpsb
out
jle
xchg
inc
adc
int
jb
push
inc
mov
loopne
xchg
pop
sub
dec
sahf
das
xchg
mov
push
xor
pusha
ja
jb
pop
push
dec
pop
add
xor
aam
cmp
push
movsl
mov
bnd
jecxz
xor
popf
ss
ror
inc
or
adc
xor
fmul
shll
sub
dec
jl
stc
je
xchg
sbb
add
cwtl
mov
popa
cld
popa
cmpsb
imulb
out
data16
mov
test
cwtl
or
test
lock
push
push
arpl
aas
xchg
dec
hlt
subb
scas
pop
add
and
jmp
in
mov
lock
xchg
lcall
push
sub
xchg
mov
jge
pushf
mov
mov
jns
orl
cmc
imul
les
pop
xor
dec
roll
test
and
sub
mov
sbb
insb
orb
fstl
movsl
push
mov
lea
sub
call
dec
aas
sti
fsubrs
and
roll
push
pop
cltd
scas
cmpl
xor
mov
jnp
push
pop
sti
stos
mov
push
pop
enter
adc
shl
pop
imul
and
fnsave
push
mov
inc
jae
push
cmp
adc
jae
cmp
sbb
xchg
inc
push
in
xorb
adc
imul
out
push
stc
dec
inc
cmp
xor
sti
and
dec
aas
ss
addl
add
xchg
pop
ljmp
sbb
xor
dec
cmp
xchg
rclb
filds
inc
xchg
xchg
test
mov
loop
mov
jl
icebp
ja
cltd
ret
pushf
cmpsl
pushf
lods
stos
loopne
fs
cmp
push
loop
inc
and
es
std
shlb
pop
pop
out
movsl
cld
ret
lods
mov
outsl
push
jmp
psrlw
sub
les
test
jg
sbb
xchg
pushf
daa
and
push
add
mov
xorl
pop
add
fsubrp
pop
mov
in
sarb
mov
cltd
dec
lret
bound
push
out
push
es
xchg
jb
outsb
test
cmc
stos
cwtl
cwtl
rcll
in
cmp
pop
pop
iret
popf
cmp
aam
call
xor
mov
xchg
xor
lret
sbb
stos
test
das
dec
movsl
andl
repz
dec
push
sub
mov
loopne
je
clc
les
pushl
or
or
inc
adc
cmp
sub
movups
dec
push
xlat
dec
mov
imulb
mov
xlat
stc
cltd
gs
mov
fcoml
adc
dec
or
cmc
inc
or
push
insl
shrb
insl
add
sub
int3
inc
pop
shlb
mov
xchg
mov
cmp
jmp
sub
or
add
pop
or
mov
jg
decb
jae
sbb
in
sbb
xlat
enter
orl
mov
imul
push
cmp
jge
sbb
addr16
int3
cmpb
dec
scas
jg
dec
into
mov
out
pop
lea
jae
cmp
adc
cmp
xchg
ss
xor
nop
gs
push
das
cmp
iret
dec
dec
les
or
mov
aas
cmc
inc
or
idivb
cmp
fs
lret
pop
jg
push
addl
pop
fdivs
in
cmpsb
inc
out
push
pop
push
xor
inc
mov
outsb
jo
je
xor
imull
mov
push
push
in
xchg
nop
inc
inc
sahf
cmp
add
les
jecxz
and
xchg
adc
lds
pop
jns
stc
xchg
mov
jae,pn
dec
mov
loop
dec
iret
outsb
mov
bound
lods
loopne
je
ds
imul
dec
cld
das
and
loop
pusha
std
aas
fistps
fimull
lcall
inc
mov
jge
inc
jg
lahf
mov
adc
fldcw
jge
enter
std
loopne
in
pop
xchg
dec
adc
dec
js
pushl
lds
addr16
enter
cmp
cs
xchg
jno
push
push
mov
int
sbbl
arpl
mov
lret
mov
ret
imul
jnp
push
or
cltd
mov
addb
xor
call
cltd
ja
push
rolb
cmc
out
sbb
mov
adc
insl
sub
mov
push
clc
dec
clc
stos
jge
lret
out
fisubs
mov
mov
scas
push
xchg
movsl
flds
xchg
cmp
enter
mull
lret
sub
mov
idivb
aad
xchg
into
sti
jecxz
lret
fcomps
sahf
mov
aad
call
pop
movsl
xorl
notb
sub
dec
push
xor
cmp
xor
lahf
mov
addr16
nop
jge
iret
mov
mov
mov
lods
hlt
cmpsl
xorb
push
cmp
test
popa
inc
adc
jle
jmp
pop
sarb
and
inc
lret
pop
fwait
iret
fcmovnu
not
test
gs
or
mov
mov
dec
sub
mov
pop
js
xchg
pop
aad
xlat
inc
cltd
add
loop
stos
fnstsw
int
adc
std
lock
add
xchg
push
pushf
push
dec
outsl
gs
inc
inc
pop
lock
out
adc
mov
out
xor
mov
sbb
dec
addr16
shl
jl
fs
cwtl
sub
cmpsl
and
movaps
or
mov
iret
xchg
stos
sbb
sar
in
ds
cmp
cmp
push
inc
and
sub
mov
popa
fmuls
test
xor
cmp
adc
dec
arpl
mov
or
leave
xchg
icebp
hlt
cmpsb
jns
test
xchg
mov
cmp
jge
lea
mov
sub
imul
test
add
xor
cwtl
clc
loop
aad
lahf
sub
fsubp
pop
scas
out
pop
stc
adc
or
nop/reserved
hlt
xorb
and
sar
movsb
dec
jge
jae
jecxz
cs
stos
or
je
cmp
mov
push
sti
sub
add
jae
mov
loopne
into
nop
or
xor
mov
push
xor
inc
out
xor
outsl
and
jno
cld
test
std
or
cmc
cmp
pushf
mov
push
and
sbb
xchg
lahf
push
inc
inc
xor
data16
mov
outsl
pop
cmp
mov
mov
ror
out
test
pop
out
xor
xor
adc
pop
and
clc
add
inc
enter
test
es
fmuls
ljmp
jp
xor
shl
mov
repnz
scas
movsl
pop
out
cld
int3
adc
dec
adc
out
lds
cmp
fisubrs
lret
rcll
jge
mov
enter
or
stc
or
js
scas
sub
xchg
push
jae
cmpsl
sarl
xor
mov
stos
xchg
xchg
or
cmp
xchg
jne
dec
int
fidivrl
mov
adc
jle
fs
inc
stos
fildll
loopne
aas
adc
or
jo
pushf
rcl
xchg
push
and
es
mov
mov
push
sbb
xor
lcall
inc
ljmp
aaa
jbe
and
ja
sbb
daa
mov
int
popf
roll
xor
stos
enter
out
cmpsl
push
pop
sbb
rol
shll
jns
decb
rcrb
jno
fstpl
push
pop
adc
repnz
mov
stos
popa
ret
iret
rorb
jo
xor
inc
xchg
arpl
inc
or
adc
jne
std
out
pop
out
add
inc
jo
mov
test
dec
push
ss
shl
outsb
lret
aam
xchg
lea
aam
cmp
mov
pop
or
pop
inc
enter
aam
int3
xor
dec
cwtl
divb
shrl
pushf
ret
sbb
pop
xlat
mov
fstpl
dec
call
or
jmp
mov
adc
inc
mov
add
sbb
loop
mov
fs
movsb
inc
push
gs
lcall
rcr
cmp
jl
jle
add
and
call
xor
rol
push
jle
xor
lods
jmp
pushf
sbb
roll
pop
mov
sub
lds
xchg
mov
dec
mov
inc
cmp
or
je
cmpsb
pop
jnp
add
popf
imul
xchg
andl
mov
mov
fdivrs
pop
ror
and
mov
inc
shl
ljmp
mov
ja
jge
push
or
mov
shll
into
js
mov
roll
sbb
imulb
adc
pop
inc
rcrl
pop
adc
or
enter
mov
adc
hlt
rcrb
into
ss
pop
cmp
mov
adc
loopw
mov
xchg
xor
sahf
repnz
je
sbb
out
add
push
les
sbb
push
pop
xchg
aam
pop
in
and
cld
mov
pushf
ds
out
mov
inc
cmpsl
imul
cmpsb
pop
cmp
lcall
push
loopne
dec
dec
cmp
pusha
idivb
dec
into
cmp
ljmp
bound
lods
test
sahf
aad
mov
cli
push
cmc
inc
xchg
stos
outsb
je
fistps
xor
adc
xchg
fsubrs
ds
sahf
pop
hlt
cmpb
loope
in
iret
int3
cltd
jl
push
repnz
pushf
mov
adc
xchg
push
mov
int3
xor
cmpsl
lahf
dec
jbe
lea
popa
test
stos
add
cmc
jp
lods
fcmovne
cs
add
aas
sarl
xor
mov
xchg
lock
inc
inc
stos
xchg
push
out
in
mov
mov
icebp
push
jl
cs
fmuls
in
test
decb
repz
inc
ret
mov
aas
movsl
or
pandn
leave
loop
std
push
sbb
test
pushf
add
adc
xchg
sub
jg
adc
mov
or
cmpsb
jne
call
cmp
insb
mov
adcl
xor
fmull
dec
notb
loop
jle
movsl
adc
js
jno
pop
jne
jbe
mov
int3
imul
push
dec
test
fildll
cli
or
jp
repnz
lock
cs
jg
leave
mov
int
rolb
lret
sahf
pop
iret
pop
cli
pop
nop
sti
mov
xchg
arpl
aad
out
imul
xchg
les
mov
rclb
cmc
sub
mov
mov
daa
lock
xor
repnz
and
shlb
std
test
stc
addr16
daa
stos
jl
sub
cmp
icebp
mov
pop
fbstp
cmp
in
lods
inc
mov
add
inc
xchg
cwtl
jle
cmp
or
push
ljmp
test
mov
dec
jae
jmp
dec
adc
xchg
in
push
cmp
divl
and
lea
adc
mov
mov
ljmp
xor
jg
ljmp
sbb
ret
mov
jnp
or
addr16
jns
xchg
mov
pop
push
push
addr16
add
rolb
insb
mov
cmpsb
jl
and
jb
cmpsw
stc
leave
call
and
divb
xlat
cwtl
sub
xor
inc
in
mov
xchg
cmp
or
xlat
mov
cmpsb
or
sub
cmp
rorb
adc
push
xor
cmp
mov
clc
cli
mov
jns
je
fldenv
xor
pop
cmp
xchg
jle
scas
mov
cmp
sbb
int
adc
or
inc
lret
fcomip
add
test
adc
add
inc
aas
jg
xchg
pop
mov
bound
ss
add
outsl
nop
mov
cmp
repnz
push
int
in
pop
mull
js
rcll
pop
push
fnsave
xchg
xor
inc
lea
int
ds
leave
aad
inc
cmp
mov
mov
dec
sbb
das
in
movsb
aad
mov
outsb
cmp
sub
cmp
push
lcall
sbb
add
pushf
pop
bnd
icebp
sbb
sbbl
repnz
outsb
mov
dec
add
push
pop
test
stc
insb
ss
dec
jae
pop
mov
push
clc
sbb
popa
fcmovnu
jae
and
sbb
fcoms
mov
push
xor
bsr
sub
mov
mov
out
popa
dec
test
aaa
in
outsb
push
cmp
daa
pop
pop
add
cld
inc
imul
sbb
daa
dec
lret
adc
dec
aas
push
inc
mov
sbb
ljmp
shll
loope
into
cmp
mov
aaa
xlat
xor
push
mov
xchg
jecxz
arpl
add
add
lcall
cli
dec
add
push
inc
aas
roll
aaa
aas
xor
xor
cmpsb
xchg
cmp
xor
cmp
jbe
aam
inc
test
scas
sahf
jge
xchg
adcl
rcll
clc
push
cli
add
add
add
xchg
insb
pop
lcall
mov
lods
cmpsl
sub
sbb
pop
xchg
pop
inc
fisttpll
cmp
clc
or
cli
mov
mov
sti
sar
push
imul
mov
out
sbb
pop
xchg
or
test
or
ret
or
cmc
inc
adc
fwait
xchg
push
adc
lods
push
jbe
xchg
fiadds
addr16
jns
pop
fistps
scas
xchg
pop
xlat
dec
test
xchg
mov
sub
cmpsl
imul
sub
adc
aad
in
aaa
jmp
leave
leave
in
jne
out
hlt
pop
addr16
inc
pop
scas
cli
cmp
push
mov
push
xor
push
dec
mov
lret
js
bound
fs
add
sub
xchg
sub
std
loop
cli
cmp
sbb
jmp
movsl
mov
cs
sub
mov
xor
pop
push
fcomps
loop
push
jmp
movsl
sbb
push
insb
or
add
lds
dec
pop
pop
push
hlt
rol
int
test
sbb
push
or
iret
push
inc
mov
mov
stos
ds
xor
cli
dec
fdivrl
xchg
pop
roll
jmp
or
fstp
cmp
mov
xchg
mov
mov
add
ret
jb
nop
dec
fisubrl
pop
lcall
stos
mov
push
or
xor
add
loope
gs
notb
push
pop
mov
iret
fstps
push
jne
mov
fs
out
jbe
jb
lods
in
loopne
and
cmp
shll
and
lock
iret
je
fistpll
loop
mov
stos
xorb
inc
repz
push
mov
mov
imul
mov
xchg
fiaddl
mov
pop
pop
mov
mov
push
xor
sub
orl
rcl
xlat
pop
sub
push
scas
xorl
inc
out
cwtl
pop
dec
push
xchg
inc
rclb
mov
adc
rolw
and
cmp
xchg
cmp
add
outsl
jecxz
movsb
orl
lods
xchg
xchg
jns
jecxz
scas
mov
cmp
push
mov
shr
mov
pusha
shrl
sarl
int3
sbb
popa
xorl
jbe
mov
shll
or
mov
lods
cmpsb
rcll
sbb
test
inc
das
lods
xorl
mov
shll
into
pop
mov
aas
or
pop
outsb
in
call
sbb
int
lds
push
and
std
dec
vrcpss
mov
fs
test
jno
or
jecxz
loope
hlt
add
cmp
fcoms
xchg
mov
mov
cmc
es
sub
dec
dec
add
mov
loopne
test
cmp
xor
cmp
push
inc
fst
mov
push
ret
dec
mov
in
jnp
mov
data16
jo
cmpsl
pop
lds
mov
jp
arpl
dec
inc
mov
pop
lds
adc
pop
mov
inc
jmp
xchg
and
pop
dec
xor
aaa
repz
sub
out
mov
or
lret
in
pop
std
jno
hlt
mov
and
int3
aas
stos
inc
lock
arpl
cmpsl
repnz
addl
add
stos
adc
stos
inc
or
jae
mov
lock
mov
adc
dec
int
lcall
sub
cli
sbb
mov
popl
inc
add
test
mov
inc
out
push
sub
mov
and
mov
mov
rcl
jge
insb
hlt
popf
adc
movsb
mov
dec
nop
or
out
popw
mov
push
mov
xchg
loop
xchg
lret
stc
or
mov
in
dec
pop
dec
arpl
mov
icebp
fs
pushf
push
sbb
dec
movsl
pop
dec
xchg
push
mov
lods
lahf
xchg
pop
xchg
std
push
push
mov
xchg
lret
adc
jp
imul
pop
aam
mov
jmp
sahf
outsb
insl
mov
mov
pop
add
or
jmp
and
stos
add
adc
dec
cmp
fsubrs
dec
cltd
out
mov
mov
imul
jl
cmpsb
ljmp
and
mov
inc
pop
ja
popf
push
cmp
sbb
add
push
xor
test
and
out
add
pop
gs
mov
or
js
push
scas
jb
stos
adc
clc
stc
test
pop
sbb
sbb
movsb
xor
xor
scas
inc
xor
popa
cltd
adc
fimuls
push
cs
ret
cmp
mov
loop
jl
fnstenv
aad
push
loopne
loop
push
add
jle
cmpsb
leave
lods
jnp
xchg
cmc
lcall
pusha
imul
push
inc
sub
fwait
popf
jb
sahf
inc
loopne
mov
cmp
jbe
push
and
jno
add
jg
lret
inc
mov
cld
out
das
xchg
popa
mov
fists
lods
sub
and
aad
push
jp
shrd
adc
scas
mov
cmpsb
adc
or
in
mov
xor
sbb
mov
enter
enter
lea
pop
std
movsl
gs
roll
dec
mov
std
mov
xchg
pop
or
imul
orl
fdivs
push
mov
stos
or
outsb
push
mov
imul
mov
mov
out
js
add
push
ret
mov
push
ret
push
adc
cmp
stos
aaa
repnz
mov
add
push
inc
jns
xchg
sbb
lret
or
lock
dec
shll
pop
mov
data16
jg
xor
xchg
mov
push
push
ja
scas
push
les
imul
cmpsl
mov
stos
lods
adc
jg
stos
or
jmp
add
stos
ss
enter
and
stos
cltd
or
dec
imul
add
movsb
scas
jb
insb
and
fsts
jmp
bound
test
xchg
fs
push
je
jno
dec
movsl
nop
xchg
push
imulb
mov
cmp
mov
popa
insl
mov
or
mov
adc
jb
push
or
mov
mov
pop
inc
jmp
fsubrs
sbb
pop
icebp
push
inc
fiadds
xor
inc
enter
cmp
add
xchg
loopne
add
hlt
lahf
sbb
or
cmp
jno
sbb
dec
ret
mov
mov
test
jo
sub
fsubrl
inc
loopne
pop
rcll
out
mov
incl
les
inc
jecxz
mov
or
insb
pop
sbb
push
mov
shrb
mov
leave
or
jno
mov
cmp
clc
pop
pop
dec
cmp
flds
pushl
or
fucomip
mov
in
arpl
pop
sbb
mov
adc
push
or
cwtl
xlat
cmpsb
adc
pop
call
or
adc
xchg
fsub
xor
jno
outsw
cmp
pushf
dec
jo
dec
or
xor
cmp
mov
test
jne
test
cmp
clc
adc
call
in
stos
mov
sbb
test
cwtl
jp
cmpsb
sub
fldl
test
icebp
orl
idivb
scas
xor
xchg
xchg
xor
les
dec
inc
in
out
je
pop
enter
and
jb
lds
push
sub
aas
shl
les
sub
rol
std
imul
xor
mov
cmpb
bound
push
test
add
xchg
pop
jle
xchg
pop
stos
in
sub
sub
aas
sbb
xchg
mov
mov
pushf
cli
insl
sbb
dec
sbb
lahf
scas
inc
pop
jb
sbb
cmp
jmp
fmull
mov
and
and
jo
shll
out
xor
jae
cmp
lods
pusha
test
roll
pushf
jns
les
aam
add
dec
out
fwait
dec
push
dec
mov
pop
mov
cmp
mov
or
imul
outsl
mov
lods
push
lret
sbb
test
stos
xchg
cs
ja
loopne
addb
sbb
sahf
xor
mov
sub
int3
mov
js
jmp
jmp
lods
out
pop
mov
pop
pmuludq
movsl
dec
inc
insb
sahf
idivb
jno
repnz
mov
stos
out
add
lcall
mov
push
mov
cli
enter
pop
cmp
dec
push
mov
sub
cli
jne
stos
int3
gs
das
test
and
stos
mov
stos
dec
or
sub
insl
insl
gs
or
inc
outsb
lock
aaa
xchg
xor
int3
mov
jge
fwait
and
sub
mov
or
push
push
push
test
xchg
sub
jae
sbb
arpl
incl
cli
jl
jbe
mov
test
add
repnz
push
xor
mov
xchg
inc
in
lods
into
add
faddl
jns
decb
sub
imul
mov
cmp
test
test
lods
cltd
jnp
in
mov
mov
cmp
shll
idivl
cs
fs
adc
mov
cmp
test
lahf
insl
pop
int3
sahf
dec
aaa
jge
adcb
xorb
sbb
aas
pop
mov
fucomi
mov
push
ja
sbbb
push
sti
lahf
repnz
sahf
out
loop
popl
push
xor
test
aad
repnz
sub
push
or
shll
mov
xor
mov
aas
into
in
add
dec
xchg
xchg
sti
lret
push
iret
mov
ret
loop
out
xorb
inc
xlat
gs
mov
lahf
push
xchg
decl
add
mov
mov
xchg
les
fmuls
dec
push
jl
pop
ret
rcll
hlt
sti
add
mov
fs
fwait
test
jmp
jns
arpl
mov
shr
lods
cmpl
in
jo
fdivr
xchg
or
in
xor
xor
dec
cmpsl
ret
and
mov
xor
mov
andb
adc
pop
imul
cmp
icebp
ret
push
out
xor
mov
mov
rcr
mov
lret
mov
repnz
gs
push
and
popa
stos
jne
and
mov
data16
xor
int3
bnd
unpckhps
mov
arpl
push
xchg
in
xchg
movsl
cmpsl
popf
pop
pop
mov
xor
sbb
imul
xchg
in
daa
call
jecxz
push
ret
inc
jg
pop
fucomp
daa
jecxz
aad
jo
add
mov
daa
add
and
js
fiaddl
inc
sbb
shlb
lret
pop
cltd
clc
xchg
in
jge
add
insb
fldt
push
sub
int
jge
jo
push
sarl
add
ret
sbb
in
outsl
mov
inc
out
ficoms
les
push
ret
aad
test
dec
push
jmp
ds
cld
fcoml
stos
and
add
push
enter
push
sbb
shrb
mov
fs
lods
pusha
cmp
pusha
sub
mov
loope
mov
inc
add
icebp
js
xchg
iret
push
mov
les
int
daa
fistps
pop
addr16
xchg
adc
fildl
push
pop
int
pop
jmp
mov
movsl
cmp
inc
movsb
xor
out
jg
icebp
not
sti
idivb
leave
sbb
add
lock
mov
imul
push
test
adc
dec
cld
cmp
lods
shrl
sbb
jmp
in
push
shll
andb
mov
subl
mov
xor
adc
xchg
divl
popa
xchg
xchg
cmp
clc
pop
gs
push
dec
in
push
in
mov
cmp
adc
mov
mov
gs
andb
push
in
gs
adc
dec
cs
int
clc
sub
les
add
mov
xchg
jne
cltd
js
insb
cmp
sub
imul
scas
push
repz
cld
pop
test
inc
popf
jl
push
mov
fwait
adc
test
sbb
adc
bound
push
lahf
push
jge
or
adc
gs
sbb
xchg
push
fs
jmp
jb
call
es
movsl
or
mov
lret
lea
or
or
jne
mov
scas
adc
add
pop
call
mov
lret
xor
scas
loopne
stos
xchg
mov
sbb
pop
lods
pop
mov
sub
movsl
ljmp
and
hlt
push
jmp
or
ret
pop
enter
push
sub
jl
add
jmp
lds
stc
mov
outsl
nop
fsubrl
roll
mov
fidivrs
and
ret
push
cmp
mov
adc
xor
push
add
lds
je
xchg
adc
dec
cmp
clc
cmp
jno
insb
pop
lds
xchg
cmp
xchg
negb
fwait
xchg
adc
xchg
pop
xchg
and
cmp
pop
das
pop
push
pop
faddl
xor
pop
mov
fidivs
or
adc
std
pop
mov
gs
fisubs
ljmp
adc
imul
or
out
dec
ret
cmpsl
push
lea
mov
push
mov
and
adc
add
shlb
sbb
push
or
cld
aas
cld
mov
pop
pop
mov
mov
sub
mov
ds
loop
int
call
aad
push
in
mov
mov
mov
dec
ja
cmpsb
xor
ss
push
or
fdivrp
inc
jge
mov
bound
adc
dec
adc
pusha
sub
outsl
jle
and
xor
cld
andl
jb
pop
sub
or
mov
jnp
rcl
pop
hlt
add
jbe
and
pop
test
dec
mov
popf
sub
sbb
push
lret
push
negb
dec
adc
popa
sarl
cmp
in
sub
les
pop
push
scas
and
push
or
stos
icebp
insl
out
sub
shlb
or
mov
iret
scas
test
pusha
sbb
mov
test
push
dec
jl
insl
jb
xor
imul
pop
xchg
inc
mov
nop
cmp
ret
aaa
jg
or
cs
mov
scas
and
sub
and
lods
loopne
mov
push
sub
test
and
std
jecxz
pop
in
outsb
mov
aad
lcall
jl
out
xchg
jb
pop
sub
nop
push
cld
in
mov
mov
inc
scas
scas
cld
push
jae
popl
popa
jo
xchg
sub
or
xor
sbb
call
push
lret
cwtl
add
xor
jge
adcb
jbe
xlat
into
cmovo
lods
imul
dec
push
xor
into
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
mov
orl
push
inc
aas
test
adc
rorb
push
add
cld
pop
inc
dec
mov
ffreep
push
repnz
in
pop
out
icebp
mov
das
std
jl
lods
pop
jmp
push
aas
pusha
add
pop
push
push
mov
ret
jbe
cltd
xchg
sub
enter
mov
push
cmp
add
popa
sti
rorl
and
push
cmp
push
mov
inc
and
push
push
adcl
adc
sub
or
cmpsl
mov
cmpsl
rcr
pop
pop
cmp
pop
loope
sbb
mov
test
mov
xchg
and
mov
sbb
popa
push
mov
and
push
add
mov
jecxz
lock
adc
scas
mov
xchg
addr16
xorl
push
pop
push
adc
mov
inc
and
movsb
fmuls
sub
add
add
jle
sbb
xchg
jnp
push
mov
and
repnz
arpl
or
ret
cmp
stos
mov
cltd
fldt
dec
sbb
and
sahf
out
cltd
mov
nop
sbb
sbbb
lock
dec
and
sahf
sbb
mov
add
and
adc
lock
ja
clc
das
movb
mov
jbe
push
adc
ret
jne
outsl
xchg
lds
in
push
or
or
pop
icebp
fcom
ret
les
ds
fildll
xlat
adc
sarl
out
add
push
push
cmp
jne
add
pop
push
cmp
and
in
fisttpl
adc
push
jp
mov
loop
mov
dec
mov
imul
in
xchg
jae
fcoms
jnp
inc
lods
call
in
cwtl
iret
insl
fistps
xor
sub
xchg
sbb
addr16
push
cmp
lods
enter
sub
cmp
mov
inc
and
mov
gs
lock
repnz
xchg
cmpsl
dec
iret
ja
dec
sbb
or
data16
shlb
pop
shlb
pushf
lods
int
sub
mov
sti
inc
fidivrs
adc
mov
jl
cmp
int3
clc
test
fstpl
bound
stos
sbb
inc
movsl
outsb
iret
fldl
hlt
cmp
insl
sbb
in
adc
movsl
outsl
inc
pop
lahf
ja
fs
add
adc
mov
das
jge
ss
pop
sahf
xchg
lods
sub
cld
pop
pusha
adc
lcall
lret
cmc
dec
popa
sub
adc
mov
das
mov
mov
sub
fistl
icebp
push
cmp
xchg
xor
rcrl
adc
testb
lret
scas
subl
jo
sbb
xchg
stos
mov
sub
add
pop
das
into
xlat
push
es
ret
stos
mov
mov
fisubs
mov
nop
insb
in
movsb
mov
sbb
fnstsw
cmp
aas
jae
mov
jle
arpl
incl
sbb
loopne
outsb
sub
fucomp
sub
xchg
sti
scas
fimull
decb
loope
dec
jl
cmp
out
dec
push
popl
add
xchg
das
cmpb
pop
stos
lock
inc
aam
sbb
test
jecxz
cmp
out
inc
aas
sbb
add
shlb
outsl
xor
mov
xchg
int
pop
mov
lds
sub
jnp
cmc
xchg
frstor
in
rcrb
cmc
jns
add
mov
sbb
add
decl
inc
dec
lods
and
fwait
jns
jnp
loop
hlt
arpl
xchg
lods
xor
xchg
or
rdpmc
lds
cmp
mov
mov
or
out
cli
mov
mov
dec
cmpsl
jb
in
inc
jmp
out
aaa
lret
loope
inc
mov
cmpb
ja
mov
sub
adc
fidivl
cmp
test
jno
mov
repz
mov
cwtl
mov
hlt
pushf
pop
jg
xchg
push
fsubl
in
xchg
dec
lret
imul
mov
or
sbb
add
jnp
push
inc
sub
cwtl
in
mov
sub
clc
fs
add
mov
cmpsl
pushf
pop
push
lret
ret
fstp
and
push
sarb
cs
adc
imul
xor
jp
out
repnz
hlt
pop
jge
data16
or
leave
fsub
enter
lock
sub
into
mov
push
push
lret
out
mov
icebp
jb
xchg
xchg
lea
push
sbbb
xchg
es
jns
test
fs
pop
pusha
sub
repnz
das
lret
repnz
sahf
add
out
or
cmp
loopne
lods
lods
iret
testl
sub
daa
insl
fwait
mov
in
sbb
movsb
inc
jno
cmpsb
xchg
inc
pushf
out
inc
sbb
addb
gs
mov
repz
or
movb
pop
and
mov
fstl
into
sub
and
and
adcb
dec
jg
js
jecxz
ljmp
loopne
test
test
dec
rcrl
pop
add
pop
jbe
mov
mov
push
pop
lea
in
xor
mov
mov
pop
lcall
or
notl
out
mov
test
mov
push
inc
sbb
ds
lahf
xor
and
lret
stos
ror
imul
fistps
xchg
jnp
sub
test
mov
lcall
cwtl
mov
mov
popa
cmp
fs
jg
sbb
inc
imul
popa
loope
push
test
mov
push
pop
and
or
cmp
mov
insl
add
xlat
negl
and
mov
mov
sub
jp
out
call
inc
decb
shrl
fwait
mov
sub
jnp
sub
pop
pop
pop
adc
xchg
cwtl
mov
inc
mov
mov
mov
lods
mov
inc
das
inc
cli
mov
push
icebp
fildll
adc
sbb
xchg
jmp
popa
xor
adc
movsb
fwait
out
mov
pop
test
ret
mov
push
dec
das
ja
fsubr
mov
mov
ret
inc
mov
in
subl
adc
sub
outsb
int3
repz
mov
pusha
fimuls
dec
dec
ss
dec
divl
std
cmp
xchg
dec
jbe
mov
out
cmc
dec
cmp
or
scas
call
and
or
push
and
repnz
mov
jp
push
test
icebp
push
stc
iret
cmp
in
mov
sub
mov
xchg
data16
mov
shl
lea
pop
rorl
outsb
pop
out
sub
dec
add
dec
cmp
add
sti
orl
lds
cmp
neg
enter
insb
add
sub
push
sbbb
and
pop
repnz
lock
into
cmc
adc
lret
cltd
or
in
in
nop
sub
mov
jns
ds
sub
movsb
or
mov
div
ficoml
xchg
and
loop
xor
arpl
mov
and
cmp
cli
cld
mov
aaa
xchg
push
nop
xchg
push
mov
xchg
mov
xchg
lock
cmp
jae
cmp
jmp
mov
xor
dec
or
std
mov
test
jmp
jp
idiv
cmc
into
xor
mov
in
lods
insb
or
mov
mov
jle
inc
daa
lods
mov
add
xor
inc
inc
add
mulb
movsl
or
mov
cmp
cmp
sub
jb
scas
add
sbb
xor
adc
lcall
push
loopne
cli
adc
or
lods
int
testl
stos
stos
pusha
out
adcl
fimuls
push
mov
sub
js
jmp
mov
ret
popf
stos
clc
sbb
je
inc
inc
push
dec
movsl
jmp
jo
pusha
lret
or
ja
xor
sbb
imul
stc
mov
fsubl
sahf
cmp
shlb
push
jecxz
add
cmpsw
inc
stc
and
sub
andl
jmp
sbb
cli
into
or
in
addl
push
int
dec
push
mov
cmpsb
arpl
xor
popa
lds
mov
std
push
inc
cmp
addr16
sbb
jmp
mov
jl
btr
mov
sub
jmp
fs
push
cmp
js
mov
mov
pop
dec
insl
loopne
xor
mov
into
sbb
call
fs
in
std
movsb
mov
sub
popa
cld
push
repnz
lods
push
sbb
leave
or
and
orl
enter
rcrl
icebp
sub
dec
out
mov
mov
fsubs
es
pop
stc
lea
xchg
mov
nop
sub
push
mov
pop
stc
jg
rclb
ret
ffree
insl
push
push
inc
or
loope
xchg
jns
pop
sub
dec
dec
test
jno
fwait
or
xchg
cmp
nop
dec
icebp
les
mov
inc
mov
cwtl
cltd
or
outsb
pop
imul
lcall
cwtl
sahf
movsl
cmc
adc
fucom
bound
aam
in
xchg
scas
es
mov
aaa
push
push
dec
mov
dec
cltd
dec
lahf
add
jmp
dec
pusha
std
jmp
repz
adc
dec
fcomp
sbb
mov
pop
sbb
dec
mov
jl
stos
sub
dec
dec
ss
add
add
psubsb
jo
shll
inc
mov
mov
ljmp
mov
ja
cwtl
int
cmpsb
mov
sbb
js
mov
mov
jg
in
aad
pushf
adc
mov
or
jb
jecxz
mov
in
insb
dec
jle
pusha
xchg
mov
push
mov
mov
sbb
jno
and
dec
mov
icebp
lds
es
mov
fildll
std
pop
push
and
icebp
bound
inc
and
gs
xchg
cs
fistl
popa
pop
in
ds
cwtl
inc
ss
lds
mov
insb
or
add
mov
xchg
mov
div
jns
arpl
insl
mov
out
mov
sub
shrl
fstp
popa
mov
lcall
mov
mov
dec
xor
adc
gs
or
sahf
pop
test
cmp
movhlps
cwtl
sbb
fsubl
push
data16
pop
inc
in
sti
das
ficompl
lea
out
xchg
add
aaa
sahf
dec
popa
rcll
dec
xor
cmp
clc
mov
ss
adc
pop
shr
mov
jecxz
push
in
adc
es
mov
add
jp
push
pop
xor
enter
cmp
push
iret
xchg
cmp
in
xchg
hlt
sub
daa
jmp
cs
jecxz
enter
inc
and
dec
test
out
aas
inc
sub
adc
cmpsl
fidivl
inc
shlb
mov
fsincos
cmp
jp
sysexit
leave
and
push
or
outsl
inc
inc
mov
mov
shrl
mov
stos
pop
mov
jne
mov
cmp
sbb
or
divb
cli
fstpl
cmc
and
xchg
sub
inc
xchg
call
lahf
xchg
add
cli
addr16
mov
push
popa
in
xor
xchg
test
imul
push
bound
fsin
xchg
push
negb
jnp
pop
fdivrs
or
shl
insl
mov
mov
mov
dec
cmc
xlat
cmc
inc
adc
cld
push
xchg
inc
pop
popf
movsb
sub
cli
insl
mov
pop
jecxz
push
pop
pop
ds
gs
mov
mov
addr16
cmpsb
inc
cld
outsb
int
in
fadds
cli
pop
pop
adc
mov
and
in
pop
mov
arpl
loop
arpl
inc
xchg
jge
jno
dec
adcl
mov
sbb
push
mov
adc
push
dec
cmp
sub
jp
ss
movsl
mov
mov
cmp
lahf
lds
into
std
out
js
push
ljmp
mov
xchg
lcall
add
sub
push
pop
cs
xchg
ret
xchg
sub
pop
add
adc
aaa
adc
in
repz
rcrb
adc
mov
jns
cmp
gs
cmp
outsl
sti
and
mov
pop
mov
rcl
jne
fs
mov
dec
sub
jns
fildl
rcrb
icebp
rcll
jmp
hlt
xchg
mov
pop
pop
outsl
push
cmc
and
dec
cmp
sub
outsl
dec
jnp
sbb
fwait
imul
mov
lock
add
rolb
fsubl
imul
jg
mov
sub
scas
mov
mov
lods
hlt
popa
push
iret
lret
inc
mov
or
xor
in
cmp
mov
lahf
jno
mov
iret
aad
stos
add
sub
negb
loop
movsl
inc
test
dec
rorl
xor
les
cmp
adc
in
out
push
mov
xchg
mov
out
cmp
push
adc
cltd
add
mov
jae
adc
dec
add
sbb
inc
orl
loopne
jno
div
xchg
arpl
xor
dec
int
loopne
lods
data16
cmp
mov
cld
hlt
loopne
sbb
inc
cmpsl
inc
mov
jb
xchg
popa
insl
cli
inc
dec
out
push
sub
add
mov
movsb
dec
dec
mov
test
mov
xor
movsl
add
or
aam
icebp
fcmovu
mov
lock
je
scas
jno
adcb
loop
add
pop
cmp
out
xchg
lahf
pop
popa
mov
aam
jns
mov
sub
push
sarb
push
push
std
push
cs
insb
mov
jbe
xor
stos
jp
call
jle
into
lcall
out
jo
xlat
xor
imul
repz
fldl
mov
sub
shrl
jno
inc
enter
and
in
push
xorb
jnp
mov
mov
cmpsb
cmp
xor
add
ret
dec
dec
push
or
mov
push
cltd
test
test
mov
inc
adc
stos
insb
lcall
dec
fstpl
lea
addr16
lods
ret
js
lcall
mov
fisubrs
int
cmpsb
cmp
repnz
loope
bound
sti
cmc
push
cmp
movb
cmpsb
cmp
filds
leave
jbe
jo
cld
enter
int
xchg
test
cwtl
jne
dec
iret
sub
loop
lcall
and
into
jp
dec
add
add
and
arpl
ret
int
outsb
scas
loope
mov
ss
repz
xchg
xchg
mov
push
rcrl
lcall
inc
pop
push
mov
es
cmp
das
and
out
popf
mov
addb
sbb
push
mov
adc
aad
mov
or
push
repz
stos
add
inc
inc
bound
pushf
arpl
pop
ljmp
pop
dec
xor
aaa
and
out
rorl
ss
pop
adc
in
inc
jp
in
gs
jle
inc
jmp
sahf
fnstcw
dec
shrl
popa
inc
dec
push
lods
cmp
ret
sub
insb
stos
inc
ret
shl
or
mov
ret
ja
outsb
cmp
call
sti
inc
insl
in
pop
push
fidivl
inc
push
push
fisubs
leave
jae
cmpsb
insl
mov
fnstcw
mov
repz
pop
inc
jp
repz
inc
and
xor
cs
ss
push
addr16
inc
dec
and
sbb
xor
and
cltd
or
dec
addr16
push
inc
jno
divw
imul
int3
popf
mov
inc
inc
cmpsb
mov
scas
shll
popf
jne
xor
out
and
loop
mov
mov
shrl
imul
pop
pop
fadds
sbb
mov
jge
call
inc
jp
inc
cmp
push
das
bound
insb
jo
xor
out
xor
ljmp
xchg
enter
xchg
mov
xlat
sub
mov
shrb
lea
dec
jge
push
pop
test
mov
add
addr16
xchg
xchg
xchg
sar
mov
test
jmp
pop
mov
test
mov
sti
out
lods
lock
jmp
out
pushf
mov
jle
mov
jae
sub
pop
loopne
js
mov
sbbb
aam
ljmp
das
xchg
cmpsl
mov
cmp
jnp
jmp
xchg
pop
inc
push
adc
and
xor
rorl
inc
movl
aad
mov
lock
icebp
pop
dec
sarb
icebp
in
inc
jno
push
mov
dec
shr
testb
mov
hlt
ret
aaa
pop
xchg
lahf
lods
stos
xor
or
ret
mov
iret
ret
iret
arpl
pop
arpl
jle
push
outsl
into
push
data16
test
pop
xchg
mov
dec
mov
mov
int
ficompl
fildll
inc
mov
xchg
and
push
lahf
xor
nop
out
in
add
nop
popa
repz
sti
sbb
shlb
roll
into
movups
fildl
and
rcll
dec
push
jo
cmp
leave
enter
jge
lret
add
xlat
aad
mov
aaa
push
push
aaa
jmp
inc
int
mov
test
inc
inc
dec
lcall
jae
cmpsl
rclb
ss
sub
aaa
es
push
sahf
push
outsb
es
stos
sbbb
cltd
je
lock
in
insb
pop
mov
scas
int3
push
inc
aaa
stc
xor
mov
dec
js
add
movsb
fdivs
push
leave
fisttpll
xor
xlat
adc
cmpsb
pop
cmp
add
inc
int
jl
xchg
xchg
and
pusha
mov
push
sbb
lods
fisttpl
pushf
stc
jae
adcl
inc
mov
insl
sub
mov
mov
cs
subb
mov
rcll
mov
mov
xor
cld
xchg
std
xchg
cmp
mov
sub
sahf
fbstp
ja
mov
fstl
mov
mov
jne
pop
xchg
out
push
sub
lcall
data16
mov
in
mov
fst
pop
fcompl
push
mov
out
lahf
push
es
mov
or
mov
inc
cmp
add
or
or
sbb
pop
xor
sbb
in
sbb
mov
mov
int3
dec
adc
nop
lahf
stos
sub
cmc
jmp
inc
ja
jle,pn
cmp
and
cmp
xchg
ja
bnd
mov
mov
or
outsb
dec
fidivrs
inc
lds
sub
mov
push
inc
test
inc
int
ret
push
sub
stos
xchg
imul
pop
mov
popf
or
repz
lods
xchg
mov
jne
fucomip
push
cmp
xlat
add
jmp
xchg
loop
leave
mov
testl
dec
mov
inc
scas
push
iret
pushf
dec
lea
aas
and
mov
mov
mov
mov
sub
add
fnsave
adc
ja
cli
mov
mov
fmuls
les
outsl
mov
mov
jge
xor
cmp
idiv
add
push
mov
hlt
jl
xchg
loop
sarl
xorl
bound
rcr
push
jle
lods
and
insl
add
jp
jle
ljmp
and
sbb
rcrl
sbb
jne
adc
fs
rol
dec
cld
sub
adc
leave
imul
outsl
arpl
aad
cmp
es
jbe
jecxz
sbb
xor
inc
popf
fmull
ret
pusha
aad
mov
xor
or
hlt
dec
loopne
sbb
repnz
cmp
loop
inc
enter
icebp
loop
mov
adc
rcrb
movsl
mov
sub
dec
div
mov
inc
or
cmpsb
pop
cmp
dec
pop
jp
flds
loop
lcall
inc
push
mov
das
lret
pop
mov
addr16
dec
and
pop
mov
mov
scas
jge
jo
icebp
out
arpl
lods
adc
insb
mov
xchg
cmp
xor
mov
fistpll
mov
pop
push
test
add
lods
or
cmp
shl
xchg
push
lcall
paddw
jmp
pop
and
icebp
xchg
push
adc
dec
rcr
or
sti
clc
adc
stos
cmc
inc
cmp
test
cmp
mov
packsswb
push
add
mov
and
cld
add
jp
cmp
mov
lea
call
mov
mov
sbb
test
jnp
ljmp
xorb
jecxz
iret
and
xchg
in
rcrl
test
push
mov
insl
mov
add
xchg
add
jb
xor
xchg
adc
cltd
jecxz
adc
das
pop
push
sbb
xchg
lds
movsl
push
cmp
ds
pop
data16
test
xor
mov
ljmp
in
fucomi
jecxz
jmp
jnp
lods
insb
mov
lock
or
cmc
xchg
icebp
adcl
xchg
test
fstp
mov
addb
aas
hlt
sub
arpl
xor
int3
fs
sahf
jbe
xchg
shlb
jo
mov
pop
ljmp
pop
jle
fadd
mov
ja
std
inc
or
aaa
repz
jns
shl
std
cwtl
push
sbb
cmpsb
jno
ss
dec
sti
pop
jp
or
gs
fbld
xor
scas
sbb
push
mov
pop
cmp
ss
dec
into
fucomp
lahf
jecxz
jne
cs
cs
mov
loope
lcall
fcomps
push
xchg
loopne
daa
jp
pop
in
stos
push
mov
and
sub
int3
cmpl
mov
loop
les
or
test
hlt
aad
js
jp
or
dec
ret
push
dec
mov
jg
inc
cmpb
aad
in
inc
int3
enter
dec
out
lcall
int
popf
push
test
test
fstpl
jae
add
iret
push
mov
cmp
outsb
push
aaa
push
cmp
mov
jp
sub
push
shr
inc
pusha
sbb
ret
scas
mov
into
cmp
jmp
addb
arpl
push
mov
shll
je
hlt
xchg
jae
ret
sbb
in
inc
pop
mov
mov
mov
pop
popf
push
dec
jae
ret
and
mov
pop
shlb
rcl
xchg
out
add
test
clc
jo
sub
loope
mov
pop
xor
sub
mov
insl
inc
in
outsl
mov
push
fsts
and
cmp
call
mov
cwtl
pop
inc
faddl
xchg
imul
mov
pop
repnz
sub
inc
push
xchg
out
sub
and
rcl
sbb
adc
out
push
sbb
lret
in
lret
outsl
adc
rolb
test
mov
das
idivl
subl
imul
and
xchg
xor
inc
mov
sub
movsl
jb
stos
pop
jo
pop
dec
lods
mov
mov
lea
pop
in
jb
nop
cli
push
repz
dec
dec
ja
iret
das
pop
inc
ss
xchg
rep
pop
sahf
ja
pop
mov
popa
xorb
mov
pop
jg
loopne
add
cmp
pop
sahf
sbb
filds
das
outsl
mov
movsl
aam
xchg
add
scas
inc
pop
pop
loopne
dec
shl
mov
test
xorb
out
mov
mov
mov
push
es
mov
jge
push
insb
xchg
test
in
addr16
cmpsb
gs
cmp
mov
cld
ja
hlt
test
xor
mov
or
pop
lret
iret
mov
movsl
or
sub
outsl
add
test
xchg
sbb
mov
hlt
lea
addr16
aaa
inc
jno
sbb
les
sbb
stc
loop
cltd
test
pop
test
inc
shlb
inc
roll
push
fxch
xor
addl
push
imul
nop
sahf
dec
push
stc
cmp
and
in
inc
sbb
pop
test
jge
aas
les
je
sub
cmp
cmpsb
sub
sti
xchg
xor
cmp
sub
adc
jne
push
adc
add
aas
fisubrl
mov
xlat
mov
lahf
stos
push
jnp
sahf
xor
pop
pop
pop
clc
jbe
mov
mov
add
orl
das
xchg
scas
pop
pop
sbb
clc
lods
int
sub
adc
adcb
pop
or
aas
dec
not
sub
mov
lock
int3
movsl
int
es
xchg
popa
fiaddl
imul
pop
iret
jmp
xchg
mov
cmp
sub
mov
fwait
ja
dec
ret
test
cmp
xor
ret
outsb
inc
jl
cmpsl
fstp
call
popf
into
popa
or
sti
jl
inc
xlat
lods
sbb
mov
or
jo
jnp
mov
ret
popf
mov
jg
pop
lcall
adc
push
sub
inc
fwait
cmp
les
xlat
mov
repnz
out
adc
out
mov
lahf
fidivrl
bound
mov
jno
das
int
sub
cmpsb
lock
fsubl
fwait
lock
cmp
bound
mov
test
rol
cmp
cwtl
pop
rorb
in
cld
movsb
and
jmp
xlat
jnp
sbb
sarl
into
js
arpl
aas
in
pop
fwait
dec
add
add
hlt
or
and
sub
and
dec
mov
inc
pushf
cmpl
cmp
pop
cmpsb
or
push
adc
fisubrs
add
push
and
int3
or
lcall
inc
push
push
loop
xchg
mov
sbb
dec
lea
in
mov
fstpl
pusha
or
jmp
std
push
push
mov
pop
xchg
sbb
pusha
in
push
stos
or
cmp
sbb
bound
jecxz
or
cmp
fldcw
outsl
adc
mov
scas
mov
popf
dec
inc
popa
xor
mov
fsubr
int3
or
inc
test
xor
popf
mov
sub
loop
gs
fs
inc
test
pop
subl
rcrb
xor
outsb
testl
xor
into
repz
aad
push
adc
ret
xor
pop
ret
mov
mov
mov
mov
ror
xchg
jp
cmp
mov
mov
movsb
rorb
or
add
xchg
sbb
loope
push
inc
pusha
sbb
loope
dec
pusha
jne
in
and
mov
push
rcrb
pop
inc
xchg
jmp
add
adc
jecxz
jg
sub
pop
adc
int
cld
add
divl
call
inc
lret
mov
ja
testl
mov
or
test
clc
mov
cmp
lea
imul
ffreep
je
xchg
int3
push
cmpsl
call
dec
mov
lock
xor
cmp
jb
call
sbb
cmc
dec
bswap
cmpsl
mov
das
pop
push
xor
mov
bound
pop
dec
cmp
int3
mov
inc
pop
adcl
mov
mov
in
insb
pusha
and
cmp
mov
shrb
aad
arpl
and
leave
jns
lods
bnd
popa
or
xor
in
cmp
loop
xor
cltd
andb
mov
mov
neg
inc
test
mov
sbb
dec
js
push
popf
dec
pop
hlt
push
push
lcall
imulb
pop
scas
icebp
adc
xchg
xor
imul
mov
sub
mov
aam
rcrb
cli
inc
dec
outsl
xchg
pusha
mov
cwtl
jg
int
jne
add
pop
shll
lods
out
testb
push
es
fwait
jbe
push
out
jle
and
xor
fs
mov
mov
add
js
cmp
sub
lcall
dec
or
dec
push
shr
je
push
xor
jp
in
jae
pop
mov
int
fsub
and
or
mov
pop
pop
mov
sub
and
mov
xor
xor
ficompl
stos
mov
mov
push
or
call
shll
mov
cmpl
mov
pop
fstpl
push
mov
cwtl
pop
add
shr
push
mov
in
test
hlt
add
sti
cmp
jg
lds
mov
jge
shll
ss
or
xchg
cmc
ret
pop
test
and
mov
jl
js
jne
pushf
mov
orb
cmpb
rcll
scas
out
add
pusha
xor
jo
mov
cs
push
decb
out
lret
cmp
mov
adcl
test
test
mov
test
mov
add
jg
inc
or
vmread
dec
jo
mov
and
pop
adc
aad
fs
aam
jns
jb
ds
dec
mov
or
inc
adc
lock
and
ficoms
enter
scas
aam
cmp
rclb
imul
dec
pop
leave
mov
nop
decb
lock
jae
xchg
das
icebp
pushf
sbb
addr16
push
ficompl
outsb
mov
adc
int
out
pop
aas
mov
pop
outsb
pop
ja
shrb
jae
js
adc
mov
push
loop
jnp
sub
fidivs
cs
xor
push
cld
ds
push
pop
lret
popa
xorl
scas
sbb
popf
bnd
jle
int3
sub
sbb
cmpsb
dec
push
sahf
dec
mov
add
mov
mov
fisubs
mov
or
mov
daa
jge
sub
pusha
mov
push
pusha
ss
in
sbb
sbb
cmpsl
xchg
lcall
fistpll
xchg
xor
push
in
xor
jns
xor
fsub
fcomps
sub
ret
scas
push
loope
sub
movsl
sti
dec
out
daa
xchg
lahf
imul
fbld
or
fsubr
loope
mov
push
cmp
mov
push
ljmp
mov
lahf
and
mov
push
add
pop
data16
sbb
adc
lret
xor
std
mov
cmc
adc
aad
dec
leave
out
loop
sub
cwtl
cwtl
pop
dec
jecxz
xor
outsb
cs
jo
mov
push
xchg
adc
inc
push
mov
and
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
cmp
and
pop
pop
addl
mov
jbe,pn
and
lret
test
mov
in
pop
out
aad
movl
jg
adc
test
sbb
push
push
cwtl
fmulp
shll
cmp
cmp
push
inc
pushf
adc
mov
daa
dec
cld
aas
inc
sbb
sbb
mov
lock
out
push
sbb
or
jge
mov
push
xchg
mov
push
or
jl
xchg
imul
sbb
cltd
stos
cmp
movsl
mov
int
in
out
stc
leave
imul
pop
push
aaa
add
dec
repz
fprem1
adc
loope
lahf
cmpsb
or
mov
bound
jmp
cltd
mov
fbstp
or
cmc
mov
enter
fdivrp
xchg
inc
mov
lods
xor
or
mov
sub
fldenv
movsl
fisubrs
inc
orl
pop
stc
stos
mov
std
pushf
popa
xchg
rolb
mov
mov
lock
lret
mov
jno
xchg
push
mov
inc
idiv
jl
pop
lahf
mov
inc
mov
mov
stos
push
and
adc
inc
shlb
inc
pop
scas
je
jle
push
fiaddl
inc
bound
bound
add
jo
mov
push
cmp
test
fs
sbbl
mov
nop
cwtl
das
dec
sub
fistpl
or
sbb
push
jns
rcll
rcrb
fdivrl
mov
aam
movsb
jne
fxch
int
push
insl
dec
pop
leave
or
mov
or
int
and
adcl
in
pop
push
icebp
xchg
jg
xor
mov
pop
pusha
les
loopne
inc
jg
adc
mov
divps
adcb
out
xchg
adc
les
jns
lret
add
sub
out
cmp
call
nop
and
fucom
or
cmpsb
inc
xchg
sbb
pop
fistl
pop
xor
jnp
mov
mov
ja
mov
stc
lret
push
lods
fadd
or
push
push
sbb
sti
push
push
or
jbe
into
adc
xor
xchg
fwait
in
push
out
loope
imul
movsb
mov
lea
shlb
sub
test
movb
dec
mov
dec
cmpsl
sbb
sub
push
inc
scas
dec
fistps
gs
sbb
jns
test
pop
out
and
sub
int3
sbb
int
sbb
push
enter
pusha
jg
addb
inc
addr16
adc
mov
test
jbe
cmp
push
hlt
pop
cs
lea
mov
pop
cmpsb
xchg
add
je
stos
pop
mov
inc
call
lret
call
ret
int
mov
jo
loop
in
aad
inc
jnp
arpl
popa
pop
movsb
mov
sub
pop
pushf
pop
sbb
rolb
add
enter
test
jmp
jo
jno
rcl
testl
adc
inc
add
mov
pop
ds
dec
lods
rol
pop
inc
mov
mov
stos
aam
data16
outsl
or
add
fisubl
push
cmp
int
mov
clc
sbbl
jge
pop
push
sub
cli
out
xchg
aaa
cltd
sub
mov
xor
jle
and
cli
xchg
je
cmp
sub
xor
cmpsl
xchg
enter
call
dec
lock
imul
mov
dec
add
std
mov
lea
cltd
cld
push
out
gs
arpl
imul
add
pop
adc
fsubl
testl
out
aaa
in
lock
out
sbbb
jecxz
sbb
insb
add
inc
lods
xor
dec
sub
xchg
jge
sbb
es
pop
xor
cli
sbb
jnp
sub
filds
pusha
aaa
out
push
pop
xor
test
or
rcl
stc
mov
lods
arpl
cmpl
sti
or
stos
clc
lret
rcrl
xchg
pop
addr16
xor
test
adc
test
sti
pusha
jnp
jno
pop
lea
hlt
or
mov
and
mov
sbb
add
or
xlat
mov
cmp
jno
lea
adc
xchg
rcrl
dec
sbb
dec
mov
xchg
or
jno
adc
or
sbb
lods
mov
imul
lahf
fcoml
adc
scas
jl
sub
sahf
fildll
add
mov
bound
inc
outsl
clc
cmpb
int3
gs
test
mov
sub
pushf
cmpsl
dec
sti
out
addr16
pushf
sub
xchg
std
repz
cli
jbe
mov
ds
mov
pavgb
lea
or
sub
pop
mov
pop
push
arpl
pop
cmp
dec
test
xor
notl
mov
in
jge
inc
scas
js
mov
pop
mov
int
inc
cltd
pop
stc
js
sub
in
push
lahf
aad
mov
pushl
movsl
out
cmpsl
stc
sbb
sbb
cmp
mov
sbb
adc
pop
or
ja
shlb
ljmp
dec
aam
sahf
and
mov
lods
xchg
aas
mov
ljmp
repz
jmp
cli
aam
lret
stos
add
fadds
dec
loopne
fstpt
mov
dec
jge
out
dec
lods
cwtl
jmp
cli
repnz
lret
or
insl
loopne
mov
dec
mov
cmpsl
mov
inc
sahf
shlb
jle
and
adc
pop
add
push
mov
push
lock
inc
rcll
dec
out
das
iret
cmp
insl
jecxz
sti
push
sub
add
cmp
adc
jbe
mov
aam
xor
and
mov
cmpsl
cmp
push
pusha
sbb
xchg
push
insl
scas
sbb
jnp
push
imulb
out
jle
or
sbb
fldenv
mov
mov
add
push
cmpsl
adc
outsb
dec
jo
mov
adc
cld
aas
mov
mov
mov
pop
push
mov
or
or
push
jns
clc
xorl
xchg
xchg
inc
fadd
cmp
mov
mov
mov
scas
sub
lds
fdivl
in
movsb
fcompl
jns
mov
cmc
dec
push
sub
and
lahf
jb
inc
ret
xor
xor
iret
xlat
mov
mov
add
js
fmuls
pop
insb
fsincos
xchg
ss
mov
xchg
mov
addr16
cmp
lret
sbb
int3
decb
lret
aas
rcrl
cmp
lahf
cmp
shll
scas
mov
fwait
shll
sbb
jne
cltd
xor
dec
or
push
pop
popf
inc
sub
mov
dec
or
mov
shlb
aad
loopne
xchg
addr16
loopne
xor
test
data16
or
mov
push
jno
add
jmp
pop
call
mov
std
push
and
fucomp
sbb
sub
pop
xor
xchg
out
or
xor
inc
sub
popa
push
cmc
fs
testb
xchg
inc
dec
xor
xor
pop
inc
xabort
iret
add
jmp
mov
stos
cmp
das
bound
lret
jmp
jnp
push
cwtl
push
cmp
rolb
adc
fnstsw
test
scas
into
pop
mov
repz
inc
or
je
cmp
or
lods
add
popf
jg
arpl
jbe
and
pop
std
cmp
mov
stc
xchg
test
enter
push
js
xchg
jl
popf
icebp
sub
jmp
or
add
mov
push
jmp
cmpl
mov
mov
jae
icebp
push
repz
test
aad
popf
stos
inc
jns
jo
push
icebp
xor
cmp
popf
fcompl
fninit
shll
xchg
mov
mov
mov
divb
aas
rclb
rorl
jmp
and
cmp
dec
cmpsb
popl
into
push
mov
xor
mov
mov
sub
gs
fistl
inc
mov
scas
sbb
cltd
pop
pusha
icebp
ret
xchg
sahf
fstpt
ss
mov
je
arpl
pop
add
push
xor
xchg
jmp
fs
dec
cmp
adc
pusha
mov
shlb
scas
pop
pop
cli
stos
add
mov
and
shl
jmp
and
addb
sub
mov
xchg
out
pop
sar
cld
inc
sarl
mov
pop
mov
inc
iret
inc
jae
clc
imul
or
sarb
mov
cmp
inc
stos
jecxz
push
adcb
stos
adc
shrl
test
repz
pop
and
cmp
bound
adc
cmc
ret
test
add
or
xlat
fidivrl
or
incl
sbb
dec
add
es
lahf
jp
sbb
mov
sub
inc
mov
pusha
fs
test
enter
sub
xchg
pop
pop
in
inc
sub
xchg
cwtl
pushf
movsl
xor
xor
into
cmp
xchg
pop
lods
je,pt
rorb
mov
adc
in
imul
cli
sahf
xchg
push
jecxz
jb
movsb
repnz
test
xor
fdivl
fmuls
dec
xor
inc
cmpsl
jg
repnz
data16
pop
imul
push
std
cmpsl
std
scas
mov
sub
mov
sar
add
push
xlat
int
sub
addr16
cwtl
mov
into
arpl
fidivrl
ficoml
mov
pushf
fsubp
ja
jns
in
adc
repz
sub
pop
adc
inc
test
mov
gs
fucompp
test
dec
jo
pop
push
lcall
push
and
jae
popa
mov
cmpsb
int3
mov
jnp
or
in
cs
or
jmp
adcl
in
shr
daa
jbe
mov
ljmp
pushl
mov
adc
inc
and
or
xchg
pusha
dec
in
mov
xchg
dec
xor
add
mov
in
aam
out
and
rcrb
xor
mov
shrb
insl
mov
call
stos
push
loopne
cmc
pop
xchg
icebp
mov
jnp
imulb
adc
dec
lret
aam
sub
test
inc
out
insl
push
cld
inc
xor
mov
pop
cmp
sbb
xor
adc
xchg
subb
arpl
adc
sub
inc
rol
jge
test
lcall
and
jo
enter
mov
and
xlat
adc
mov
out
scas
hlt
push
push
nop
mov
stos
test
fcomp
mov
and
lds
lret
inc
lcall
call
xchg
jns
xor
in
jecxz
lods
andb
sub
clc
stos
sti
out
xchg
lcall
push
push
xchg
fcmovbe
jb
stos
xor
popa
adc
movsb
and
adc
mov
in
mov
loopne
add
mov
jbe
mov
inc
daa
cmp
adc
iret
scas
cld
inc
mov
adc
ss
adc
mov
push
fld
ja
fisttpll
std
inc
jp
add
lock
inc
pop
inc
ja
xlat
push
stc
cs
push
cmp
mov
inc
and
cmp
xor
sub
in
push
mov
shll
xlat
insl
sub
pop
das
ficomps
mov
loope
popl
jecxz
lret
les
mov
out
xlat
sub
icebp
xor
xor
dec
xchg
pushf
lods
fcoml
adc
outsb
jne
mov
push
je
cmpsl
mov
push
call
enter
and
dec
mov
add
jmp
mov
test
mov
cli
sbb
push
inc
rcll
mov
jl
xor
js
xor
mov
jp
inc
movsb
pop
out
mov
scas
inc
jp
jo
orb
stos
or
cmp
fs
hlt
mov
sub
mov
enter
add
mov
rclb
repnz
add
movsl
pop
and
mull
out
xchg
pop
xor
je
cmp
enter
pop
stc
mov
inc
jl
mov
data16
cs
sub
and
pop
ret
aaa
cmp
mov
scas
and
xchg
xor
icebp
add
mov
mov
cltd
mov
icebp
out
adc
mov
fnstsw
jae
movsb
xchg
jo
repz
push
cmc
insb
dec
xchg
cmp
gs
mov
rcrl
fnstsw
jecxz
sbb
add
es
adc
cmp
pop
xor
push
loopne
call
mov
xor
mov
movsl
push
xchg
rcll
mov
sbb
mov
mov
xor
xchg
loop
dec
jge
mov
sbb
xchg
cli
xchg
xchg
out
adc
cmp
imul
pop
xchg
jae
movsb
sti
data16
jnp
fisubl
and
or
cwtl
pop
sbb
aas
sub
and
cmpsl
mov
mov
push
nop
mov
inc
sbb
mov
inc
jecxz
shlb
mov
mov
jge
mov
jno
adc
loopne
sub
icebp
out
dec
js
test
sub
sbb
mov
dec
or
lds
notl
ret
adc
negb
jno
mov
lds
xor
repnz
sbb
sti
mov
cli
sbbl
xchg
lret
mov
cmc
out
add
fadd
fimull
out
inc
fidivs
inc
faddl
test
sbb
das
fdivs
into
nop
mov
adc
in
cmp
bound
adc
ficompl
fwait
xor
dec
push
daa
lods
adc
sbb
stos
pushl
cmp
and
aam
or
jle
mov
mov
sub
pmaxub
pop
inc
xor
pop
bound
or
pop
or
jno
adc
dec
sahf
jo
lods
sahf
mov
xor
sub
ret
test
jno
lods
lcall
sub
aas
in
push
push
lods
cmp
mov
mov
js
out
arpl
ja
popl
mov
adc
mov
loopne
sbb
in
xchg
jns
mov
push
clc
mov
hlt
outsl
jge
cld
cmpsl
loop
mov
insb
cmc
rcrl
fnsave
push
xor
out
dec
mov
icebp
jno
fsubl
xchg
ja
xor
mov
and
mov
sub
in
mov
add
popf
mov
sub
mov
out
fwait
shlb
xlat
push
push
dec
hlt
xlat
cltd
idivl
repz
sbb
repz
adc
add
nop
push
xor
push
jnp
add
or
cmp
shl
mov
aam
hlt
fldt
xlat
aas
movsb
je
cmp
push
cs
mov
iret
ret
or
std
repnz
fidivs
jge
adcb
rol
mov
loopne
jae
cmp
dec
popf
cmp
jle
int
pop
mov
clc
aam
sbb
xor
adc
push
push
mov
leave
mov
xchg
push
fs
out
xchg
mov
call
out
mov
addr16
sub
push
aaa
jae
dec
pop
in
push
aas
adc
dec
loope
pop
mov
notb
rcl
insl
leave
fildll
pop
popf
jecxz
cmp
dec
pop
and
xor
xchg
cmp
or
sub
lods
dec
arpl
pop
jb
cmp
out
cmp
push
into
cwtl
lret
hlt
sub
jno
add
outsl
mov
lcall
xor
cld
xchg
adc
jecxz
push
lock
dec
push
pop
adc
mov
mov
mov
mov
inc
xor
inc
std
int
lahf
mov
popf
mov
jnp
add
xchg
jno
js
pop
ret
jmp
cmp
add
sbb
add
add
std
mov
mov
out
cli
out
je
adc
sbb
adc
xchg
or
mov
and
dec
int
pop
dec
inc
cmp
push
sar
je
push
xchg
shl
stc
inc
fs
adc
pop
cmc
stos
scas
pushf
popa
ljmp
idivl
aad
cmpb
ss
arpl
shlb
cltd
int
adc
mov
fs
inc
movsb
fsubr
cmc
fsubrl
jecxz
enter
fs
imul
sub
int3
xchg
lahf
mov
cmpsl
sbb
hlt
mov
js
aaa
mov
iret
xor
das
cltd
mov
cmp
nop
lock
push
lock
jmp
sbb
loope
or
mov
pusha
lea
mov
bound
and
fidivs
jge
or
popa
outsl
movsb
data16
in
dec
aaa
jbe
cmp
lock
push
sub
xor
popa
fidivrs
fsqrt
aam
mov
daa
testl
adc
push
ror
aaa
cmc
jne
jg
cmp
nop
mov
lcall
stos
mov
stos
lock
out
and
xor
jecxz
push
fisubrs
aas
daa
dec
loopne
insl
mov
jecxz
inc
pop
or
test
cmp
sti
dec
xlat
les
jmp
sbb
pop
pop
orb
outsb
mov
ret
fidivrl
pop
mov
ret
dec
push
add
jecxz
dec
int
call
jbe
popf
xor
inc
and
out
push
inc
ja
add
aam
enter
mov
inc
in
pop
mov
pop
jae
push
mov
inc
pop
mov
clc
iret
mov
mov
outsl
mov
push
push
jo
fisubrs
pop
mov
stos
sub
pushf
pop
adc
int
fadds
rorl
add
pop
stos
inc
dec
add
xchg
pop
int3
sub
aam
sbb
mov
call
xchg
mov
decb
test
mov
ret
rcrb
ss
insl
aam
xorb
jmp
mov
mul
jp
gs
jle
jo
es
out
es
ret
mov
insb
cltd
insb
cld
aad
mov
sbb
test
xlat
int
gs
adc
cmc
jae,pt
sar
adc
out
lds
movsl
xchg
push
mov
pushf
in
test
sbb
loop
and
add
int
jg,pt
filds
inc
dec
pusha
and
sbb
mov
fmull
aad
pop
xchg
ficoml
adc
imul
ret
mov
fsubrs
jne
mov
shl
jo
mov
scas
dec
shrl
std
stos
push
aam
xchg
mov
sbb
jnp
add
and
dec
popf
jge
lahf
js
xchg
sbb
mov
repz
sti
jp
sbb
sbb
and
fldl
mov
mov
outsl
cmpsb
in
sahf
rcr
inc
out
push
push
aaa
out
sub
inc
pushf
push
jae
jmp
rcrl
lods
pushf
add
pop
shll
jno
adc
and
hlt
mov
dec
push
test
ljmp
jle
bound
mov
sub
jp
pop
lds
ja
iret
sbb
shll
push
jne
lret
fs
cmc
add
inc
add
mov
mov
dec
push
std
cwtl
mov
lods
mov
pop
xchg
movsl
outsl
push
in
inc
movsl
pop
inc
fldl
in
jmp
mov
mov
xchg
out
mov
movl
mov
das
jns
aas
fcmovbe
pop
loopew
pop
fsubp
rcr
mov
call
fs
shll
mov
jle
sti
cmp
faddl
fcmovne
jne
movsb
stc
shr
mov
ficoml
xchg
push
xchg
xor
sub
inc
bound
cmp
movsb
fwait
adc
mov
dec
aaa
or
sub
data16
pop
inc
loopne
mov
push
push
inc
sbb
call
push
out
fwait
out
inc
ror
jmp
push
push
mov
pop
pushf
cld
and
frstor
xchg
cld
movsb
enter
mov
mov
lret
test
pushf
sbb
bound
call
loope
repz
movsl
leave
inc
cmp
out
jne
cmpl
dec
inc
mov
aaa
xchg
data16
xadd
adc
push
std
jge
or
in
insb
sbb
fistps
cs
shll
inc
mov
add
mov
adc
test
jb
push
xchg
out
sub
fstpt
call
faddl
mov
movsl
jbe
lods
mov
scas
mov
sbb
out
ljmp
test
mov
mov
enter
inc
push
hlt
sbb
dec
cmpsb
or
adc
cld
pop
pushl
xchg
cmp
ja
je
lcall
mov
cwtl
mov
mov
inc
sub
subl
or
push
sahf
xchg
bound
pop
lock
cmc
mov
andl
ja
or
call
and
es
cmp
popf
push
jne
jo
add
mov
cmp
inc
stc
in
nop
adc
jle
jno
xchg
stos
cmpb
mov
aas
xor
and
les
push
jmp
dec
in
jns
aaa
sbbb
and
iret
or
rclb
cs
pushf
dec
in
add
shll
sbb
xor
daa
loopne
mov
dec
and
clc
xor
mov
mov
outsl
sbb
or
decl
inc
mov
push
sbb
mov
xchg
adc
inc
rclb
mov
pushf
mov
lahf
push
pop
mov
jmp
lea
push
xchg
lods
adc
pop
in
add
imul
cmp
cmp
scas
adc
and
movd
and
and
add
imul
fsubs
fidivrs
mov
leave
scas
add
ret
shll
xor
dec
jp
dec
push
mov
cmp
ret
mov
mov
adc
imul
btr
push
or
mov
adc
imulb
in
das
or
pop
sub
mov
or
jecxz
popa
repnz
push
cmp
push
aam
in
dec
inc
mov
sbb
test
jbe
mov
in
cmp
pop
jo
mov
and
cli
push
lds
mov
xor
loop
movsb
movsb
int
inc
cmc
je
mov
test
aaa
fnstsw
adc
push
inc
sub
inc
jae
out
push
fucomp
jg
negb
das
mov
subb
jl
nop
cmp
fsubrs
push
push
in
sbb
sahf
pop
pop
pop
xor
mov
xor
add
pop
push
inc
xchg
push
or
and
rclb
fcoms
sahf
pop
pop
xor
mov
pop
ret
inc
lcall
pop
pop
lea
xor
imul
sbb
shlb
data16
cwtl
sub
or
xchg
jle
es
adc
call
pushw
sbb
push
mul
dec
in
mov
sbb
xchg
test
movb
lret
arpl
xchg
xchg
je
jg
cmp
mov
or
clc
test
je,pn
pop
mov
insl
shl
insb
testl
pop
pop
sbb
dec
test
xchg
gs
popa
jge
cmp
hlt
ja
jae
insb
das
add
hlt
jmp
cmpb
into
dec
popf
mov
xchg
jge
sub
pop
and
cwtl
pop
xchg
fcom
cmpsb
add
or
sti
push
xchg
xor
jbe
std
fcmove
aad
pop
imul
je
pop
mov
sub
xchg
mov
adc
push
push
and
movsl
call
mov
testl
dec
scas
ljmp
jge
pop
add
imul
imul
jmp
aaa
sar
and
not
out
hlt
dec
into
push
cmp
pop
inc
cmpsb
in
outsb
mov
scas
pop
aam
jl
movsl
add
inc
sub
inc
loop
cmp
in
jno
movsb
out
lea
fimuls
xor
lret
icebp
aam
or
outsl
je
jbe
add
cmp
inc
inc
imul
ret
xor
lock
rorl
jp
xchg
arpl
mov
jle
imul
dec
repnz
cmp
movsb
xor
push
repz
inc
out
scas
outsl
xchg
or
lods
test
mov
imull
out
pop
mov
mov
or
adc
sbb
and
cmp
insl
cli
push
jg
ljmp
inc
subb
loope
ret
scas
pop
clc
out
cwtl
cmp
lret
add
sbb
daa
mov
jno
mov
scas
in
mov
data16
mov
add
xchg
out
inc
mov
sbb
push
sub
jmp
out
loope
ja
adc
shll
aaa
mov
add
into
rol
repz
adc
adc
popf
mov
cld
cmpsb
pusha
lods
das
out
sbbb
pop
pop
out
xchg
add
sub
dec
mov
adc
mov
mov
sbbl
mov
scas
pop
pop
shll
sub
outsl
fdivp
push
rclb
insb
ljmp
dec
jge
jnp
lock
add
sbb
fbstp
or
dec
jmp
mov
mov
scas
mov
lds
enter
adc
imul
cli
sbb
adc
les
cmp
xchg
notl
psubd
sbb
in
imul
and
inc
jae
cmp
in
sbb
imul
lods
cmpsl
shrb
pop
add
xchg
jns
sahf
pop
cmpb
pop
insl
js
sbb
pop
popf
aad
cmp
mov
mov
or
lea
sti
or
cmp
in
push
movsb
jnp
mov
or
lahf
daa
cmp
add
jbe
pop
out
xchg
lahf
add
xor
cs
mov
out
pop
xchg
or
rcr
adc
fdivrs
inc
jmp
or
mov
fiadds
repz
pop
jb
std
xor
jnp
lods
and
push
xor
push
xor
adc
icebp
mov
mov
mov
test
mov
enter
inc
sti
xor
xchg
xchg
sub
xchg
fadd
roll
dec
sub
into
mov
mov
popf
es
lahf
mov
inc
sar
mov
cmp
loope
lret
inc
jne
aam
adc
adc
jmp
mov
sub
jg
xchg
flds
adc
xchg
loop
xor
inc
adc
sub
enter
mov
and
mov
push
ret
data16
mov
cmp
sbb
in
xchg
xchg
dec
aam
loop
push
shlb
dec
cwtl
sahf
or
push
inc
jl
cwtl
int3
mov
sbb
fidivrs
mov
out
push
mov
hlt
enter
pop
fdivrp
pop
out
inc
je
outsb
pushf
repnz
push
xor
out
sub
sbbb
lahf
mov
fidivrs
pop
sbb
or
stos
mov
neg
lds
jecxz
subb
cmpsb
inc
add
mov
or
pop
fwait
aad
xchg
jecxz
loopne
cmpsb
and
push
insb
sahf
movsb
in
insb
aam
and
dec
push
stos
xor
ficoml
inc
jnp
mov
mov
and
shrl
dec
jmp
pop
push
push
insb
pop
mov
and
adc
sub
lahf
push
jg
lret
mov
movsl
xor
fnstcw
push
test
dec
xor
push
das
hlt
repz
lahf
jb
movsb
mov
das
insl
sbbb
in
and
cmp
in
cltd
jne
mov
xchg
jno
cltd
push
in
test
cmpsb
jo
cs
adc
inc
mov
je,pn
sarb
pop
ss
or
dec
call
aad
dec
push
xchg
cli
pop
and
mov
sub
ss
pop
mov
xor
jne,pt
jecxz
lret
jb
sub
sub
int
loopne
mov
pushf
cwtl
je
cmpsb
sbb
out
test
mov
sub
insb
mov
or
ss
pop
int
and
loop
int
orl
daa
xor
jge
arpl
or
adc
nop
mov
movsl
xchg
clc
xor
sbb
xchg
pop
stc
pop
repnz
mov
mov
ret
jmp
dec
dec
jae
aad
mov
mov
fs
imul
xchg
inc
xlat
or
pop
adc
and
push
mov
mov
fldl
jae
test
push
insl
mov
ja
pushf
in
push
or
sbb
mov
ret
ret
jmp
js
sti
popf
xchg
mov
fwait
inc
hlt
pop
dec
dec
nop
repnz
xor
imul
xchg
pop
push
push
push
pop
mov
addb
repz
add
mov
dec
push
xchg
pop
pcmpeqb
adc
cmp
pop
xchg
scas
enter
out
sub
fdivrs
in
sbb
insb
dec
add
mov
mov
mov
jae
mov
mov
cmp
or
fcomip
mov
cmpsb
adc
bound
pop
int3
pop
or
and
ss
ret
stos
and
mov
ficoml
pop
push
hlt
xor
dec
xor
jg
push
loopne
gs
in
or
scas
push
and
int
fnstcw
sub
mov
jns
xor
negb
out
pop
cmp
lret
add
sbb
loopne
xor
fwait
mov
aam
push
das
mov
and
sub
out
stc
stc
pop
adcb
xor
mov
and
insl
cwtl
into
xor
cwtl
cltd
and
arpl
in
mov
push
mov
pop
xchg
nop
push
cmp
repnz
hlt
mov
pop
or
movb
mov
sbbb
sbb
dec
pop
sub
mov
mov
sbb
pop
into
sarb
aaa
subl
xor
pop
bound
mov
inc
data16
push
fmul
sbb
or
pop
or
push
cmp
rcll
aam
fidivrl
orl
gs
lock
dec
out
mov
cmp
stos
adc
jge
clc
loope
adc
jbe
popf
and
add
mov
push
popf
inc
lret
push
rorb
dec
test
jae
cmp
or
push
cwtl
xor
sub
sub
jmp
adc
test
enter
xchg
inc
addb
xchg
rol
xchg
cmp
scas
inc
push
sbb
gs
pop
pop
add
cmp
orb
fwait
push
add
cwtl
popa
nop
fmul
cmpsb
lea
fwait
jae
in
jmp
insb
out
imul
sub
mov
sbb
imul
lods
ss
or
mov
hlt
xor
dec
inc
ret
pop
or
and
rcl
mov
mov
push
push
cltd
dec
pop
mov
xor
jl
stos
or
test
test
jbe
addb
cmpsl
mov
loopne
push
push
movsb
dec
add
pop
jle
in
inc
and
cwtl
aad
xor
aaa
out
fbstp
aam
dec
jmp
arpl
arpl
sarl
xor
insl
add
test
push
scas
xchg
xor
outsl
popa
pop
adc
mov
dec
scas
pop
popa
nop
dec
in
call
in
xchg
rclb
cmc
and
mov
or
shr
rcr
adc
xchg
es
fimuls
adc
xor
sub
pop
mov
sbb
xchg
push
and
imull
mull
imul
imul
sub
les
inc
mov
add
jecxz
xor
pop
ss
add
push
inc
mov
fimull
fwait
jo
jle
and
add
sbb
sbb
jo
jmp
lock
jmp
jbe
push
mov
pop
lods
in
lcall
loop
sbb
sbb
int
imul
mov
mov
sub
xlat
fcmovbe
fadds
shll
jo
cltd
mov
das
sbb
push
dec
xor
fucom
push
lahf
xchg
mov
in
nop
jns
push
jnp
icebp
xor
jge
lahf
outsb
xchg
cs
xor
push
ret
xor
xor
les
jae
repnz
mov
jle
cld
xchg
test
imul
pop
lahf
dec
pop
add
insb
les
scas
scas
inc
mov
les
xchg
jne
xlat
jecxz
addr16
mov
sub
inc
inc
mov
hlt
outsl
jns
pop
lcall
mov
loopne
xchg
shrl
les
push
pop
xor
push
xlat
xor
loope
pop
or
cmc
mov
dec
xchg
inc
mov
cmp
int
popa
xor
pop
sbb
int
sbb
insb
ds
call
xchg
inc
adc
std
sub
jbe
jle
stc
pop
std
mov
fidivrl
mov
insb
aad
std
std
adc
xchg
push
dec
aad
add
push
xlat
fidivs
inc
jo
rclb
sti
inc
test
jp
scas
es
ret
lods
shll
mov
mov
fidivl
sub
shrb
test
push
outsl
dec
mov
aaa
sbb
and
mov
out
addl
ljmp
cmp
xorl
cld
fstp
cmpsb
jl
inc
mov
nop
sahf
xchg
scas
xchg
cmpsl
aas
xor
add
in
xchg
cmp
insb
scas
daa
push
mov
lahf
and
movsb
adc
sbb
ds
jg
adc
adc
pop
jae
int3
sti
or
mov
xchg
ret
inc
and
pop
or
ret
lds
mov
lcall
xchg
fisttpll
cmpl
push
mov
sbb
movsb
sub
test
mov
into
out
and
cli
jle
popf
push
inc
shl
sbb
xor
mov
mov
pop
int3
leave
jmp
push
push
imul
subl
test
aam
data16
lahf
es
mov
adc
loope
push
arpl
jmp
mov
jno
das
add
jo
jno
mov
sbb
push
out
adc
loope
cmp
push
sbb
sub
pop
lret
sub
fstpt
inc
or
out
aad
or
pop
repz
imull
dec
sbb
into
adc
inc
lcall
orl
sub
sbb
jb
sbb
pop
or
sarb
loop
xchg
outsl
xchg
sub
mov
adc
repz
dec
mov
loopne
out
bound
xchg
pop
dec
mov
les
pop
cmpsl
rolb
test
ret
xchg
cwtl
js
mov
xor
pusha
lock
mov
lret
inc
std
dec
mov
mov
add
shlb
sahf
pop
xlat
lret
jns
adc
jb
push
mov
jnp
mov
or
mov
jbe
sub
pop
sub
mov
rorl
lcall
pushf
sti
insb
aas
nop
dec
js
mov
call
push
fidivl
xor
pop
or
outsl
nop
hlt
aaa
popa
cmp
pop
lret
loope
xchg
cmp
dec
inc
ss
into
xchg
xchg
xchg
aad
ss
push
shl
inc
icebp
push
ja
arpl
imul
push
push
sbb
mov
push
rcrb
cwtl
xadd
xchg
scas
cmc
xrelease
add
movsb
aas
xor
mov
xor
bound
negl
movsb
sbb
cmp
dec
and
lret
in
jl
mov
cmp
mov
cld
push
cld
or
add
repnz
and
adc
pop
sub
cmp
loopne
push
add
xlat
leave
add
and
mov
repnz
ret
loope
cmp
inc
repnz
sub
jg
insl
pop
push
mov
add
ds
lea
push
loop
cs
test
mov
mov
sub
int
jl
pop
xor
fmuls
adcb
stos
test
fistps
scas
ret
cmpsb
ja
sbb
clc
or
add
movsb
enter
aaa
test
imul
inc
hlt
mov
fdivl
mov
mov
lcall
mov
jmp
inc
push
add
jb
inc
insb
or
fnsave
enter
dec
in
arpl
out
and
push
xchg
imul
mov
cli
push
xor
jnp
mov
push
jp
imul
inc
mov
pop
gs
clc
negb
add
sbb
stos
pop
scas
out
loopne
jo
pop
xchg
jmp
sbb
jbe
xchg
xorb
push
mov
sahf
sbb
xchg
imul
imul
pop
pop
mov
mov
repz
fwait
movups
inc
int3
add
insl
lods
pop
out
out
jbe,pn
outsl
inc
mov
lret
dec
lcall
sahf
iret
xchg
mov
dec
cld
insb
dec
jge
stos
adc
or
loope
xorl
mov
mov
or
movsl
push
push
rclb
iret
jnp
xchg
in
mov
fildll
sub
stos
fstps
pusha
sbb
push
push
adc
pop
sub
xchg
sahf
testl
adc
fnstsw
loop
lret
push
push
mov
insl
in
hlt
mov
stc
rcrb
outsl
into
arpl
sub
mov
mov
insb
mov
stos
inc
cmpsb
mov
inc
sbb
fs
jb
pop
insb
mov
daa
cmp
pop
adc
flds
std
pop
int
sub
arpl
jae
insb
adcl
mov
push
and
adc
imul
in
inc
aaa
xor
mov
cmpb
mov
cmp
pop
aad
cmp
pushf
jg
xor
push
mov
and
aad
mov
push
push
add
loopne
jecxz
lahf
movsb
arpl
dec
fdivrl
out
inc
adc
inc
addr16
roll
push
aas
mov
sahf
push
arpl
fcompl
mov
push
sbb
jb
inc
dec
cmpsb
sub
sub
pop
pop
and
sbb
data16
rorb
or
test
and
add
popf
inc
dec
dec
lret
and
jge
sahf
dec
movsb
lods
daa
jecxz
sahf
xorb
mov
pop
ja
sti
push
out
out
jp
addr16
cmp
mov
jne
xchg
inc
rclb
adcb
hlt
jbe
and
testl
jnp
jae
jo
gs
xor
and
inc
test
jle
pop
mov
out
push
insb
scas
or
imul
adc
xchg
mov
mov
sbb
mov
loope
mov
push
sub
jl
mov
mov
inc
xchg
movsl
rcr
pusha
xor
imul
ljmp
xchg
jmp
cmp
jmp
mov
lea
test
adc
add
pop
shrl
pusha
mov
dec
xor
sub
clc
jo
push
sbb
jnp
xchg
jmp
mov
mov
cmp
dec
arpl
mov
pop
jnp
sub
or
mov
inc
cmpsb
mov
test
bound
adc
add
arpl
pop
outsl
out
jno
mov
imul
loopne
mov
mov
test
in
iret
dec
aas
add
int3
and
add
adc
push
inc
daa
adc
mov
lahf
fimull
push
imul
leave
mov
mov
jae
leave
test
xlat
testl
cli
dec
mov
pop
ret
jmp
xchg
cmp
xchg
sbb
push
test
adc
dec
mov
mov
sub
push
popf
into
cmp
sbb
sub
mov
inc
in
ret
cli
inc
fildl
imull
push
cmc
xchg
rcrb
call
adc
lods
dec
shrl
cmp
lret
push
sub
sbb
xchg
mov
gs
insb
ror
js
je
pop
int3
mov
lgs
or
xorb
jo
aaa
inc
jne
lods
jne
pop
mov
sarb
pop
outsl
pop
add
sbb
xchg
decl
cmp
dec
ret
jl
mov
enter
jge
or
adc
pop
push
xlat
inc
push
push
mov
inc
add
sbb
add
mov
pop
add
icebp
mov
insb
jbe
xor
xchg
adc
ss
push
lea
cmpsl
cmp
mov
add
aad
andb
pop
vrcpps
jbe
jmp
loop
and
pop
aas
or
daa
fs
aad
repz
mov
inc
imul
push
or
mov
mov
xchg
ret
scas
notb
and
mov
inc
leave
je
push
pop
in
dec
push
sub
push
cmp
push
jae
pop
in
decl
insb
pop
xchg
das
cmc
sarb
data16
push
aaa
ja
inc
dec
push
push
jl
ror
jae
idivb
out
cmp
inc
loope
ficoml
adc
std
pop
push
imul
lahf
cmp
cld
xchg
mov
mov
or
inc
jo
mov
iret
xor
and
nop
mov
scas
sub
loope
xor
xchg
xchg
ret
ds
icebp
leave
and
cmp
pop
mov
inc
push
sbb
cltd
or
lds
jae
xor
mov
rclb
aad
scas
sub
ficoml
cmpsb
fadds
sbb
sti
ror
inc
or
push
in
sbb
mov
pop
mov
inc
xchg
add
clc
clc
lahf
pushf
mov
sahf
int3
std
xchg
mov
push
adc
mov
and
cmpl
cmp
mov
jp
or
lea
shrb
cmp
push
and
inc
test
orb
fmul
xor
mov
adc
data16
mov
mov
mov
out
or
lock
in
in
add
push
sbb
cmp
lret
in
pushf
lods
adc
dec
aam
pushf
sbb
clc
out
or
mov
scas
sbb
push
xor
mov
or
in
sti
mov
push
jae
ljmp
pop
orb
mov
xor
adc
daa
jne
outsb
test
or
jae
xchg
cmp
daa
sbb
cwtl
pusha
lock
add
cmpb
pushf
cmp
scas
cmp
ja
pop
inc
ljmp
sti
cmp
cmp
pop
mov
cmp
js
xchg
mov
sub
cs
pop
jns
mov
inc
stos
mov
rcll
and
add
lock
popf
call
push
xchg
pop
or
add
repz
mov
outsb
ds
sahf
int3
cmpsb
ss
push
or
loop
or
or
repnz
xor
push
lock
addr16
loopne
adc
jge
and
movsb
jecxz
dec
ljmp
add
cmp
call
xchg
call
imul
stos
leave
inc
ljmp
enter
inc
pop
jo
mov
subb
repz
aaa
decl
insb
mov
in
push
lods
aaa
push
jns
gs
push
aaa
push
sar
and
nop
lret
outsb
add
and
adc
sti
out
shll
add
outsl
inc
jg
rol
inc
shll
int3
adc
movsb
fdivr
fisubl
loope
addr16
stc
fwait
pop
xor
push
push
jnp
inc
cs
jae
xor
pushf
or
cmp
inc
cmp
adc
push
cwtl
xor
xchg
add
bound
imul
aam
adc
ret
int
push
jle
jle
enter
shll
mov
push
pop
jne
pusha
mov
jae
cmc
jle
stos
cltd
mov
imul
fwait
stc
ficomps
xchg
movhlps
cmc
xor
insl
sbb
cltd
jo
insl
ret
repz
xchg
push
cs
pop
cmp
push
fcom
aas
aaa
lods
mov
mov
clc
lahf
xor
test
ljmp
or
jl
aam
in
add
pushf
xchg
or
in
imul
mov
push
mov
dec
mov
popa
test
popf
xchg
and
and
dec
and
push
push
daa
fwait
adc
adcl
push
in
test
loop
xchg
stos
xor
js
and
frstor
push
jl
push
fstp
inc
jae
ret
mov
mov
xor
xchg
push
jb
mov
in
movsb
test
shr
mov
xor
test
add
jge
test
lea
add
sarl
test
ljmp
es
mov
ror
xchg
clc
aam
sbb
cmp
rorb
add
nop
pop
or
adc
pop
push
inc
dec
xor
fcoml
insb
pop
jecxz
ror
dec
loope
push
jbe
pop
cli
push
in
pushf
shr
mov
hlt
lods
cmpb
xchg
push
scas
xchg
icebp
aad
inc
test
adc
xlat
fisubs
call
arpl
cmp
xor
into
ficoml
clc
mov
or
inc
dec
je
mov
sbb
mov
and
lock
loopne
sbb
cld
jo
cltd
movsb
cmp
aam
mov
adc
dec
add
dec
lret
pop
push
pop
in
pop
and
mov
fs
or
enter
insl
imul
in
push
push
inc
scas
sbb
sbb
pop
ja
mov
lahf
xor
or
pusha
lock
cs
xor
mov
cmp
sbb
test
adc
dec
lret
cmp
mov
arpl
movsl
pop
add
fdiv
test
es
adc
sub
cmpsl
xchg
dec
jns
ds
loop
rcl
jne
test
jnp
adc
ss
mov
cmp
out
push
add
fwait
jns
les
push
sub
cltd
pop
mov
dec
xchg
sub
xchg
push
pop
xor
or
rcr
xchg
adc
pop
hlt
xchg
jbe
inc
xor
mov
enter
lea
pop
lds
addr16
mov
cmpsl
addr16
sub
ret
push
fstpt
xor
jecxz
into
sbb
and
mov
jmp
loop
mov
mov
les
scas
and
jb
repnz
jbe
jg
dec
ds
clc
les
ss
cwtl
mov
js
jb
mov
fsubs
syscall
push
loope
pop
std
leave
inc
and
out
cmp
aaa
imul
push
cwtl
cmp
je
mov
popf
jns
dec
lcall
and
jo
xlat
pop
adc
dec
pop
nop
pop
jns
push
mov
or
xchg
ficompl
scas
fisttpll
fwait
jg
sub
cli
xchg
xchg
in
pop
pop
je
push
cld
mov
movsl
in
ret
jno
jnp
xchg
adc
mov
cwtl
sub
or
in
ljmp
in
jge
in
xchg
adc
imul
xlat
push
nop
out
insb
push
dec
push
lock
adc
sbb
sub
or
arpl
sub
shrb
loop
repnz
repnz
ljmp
jg
mov
push
jl
push
or
sbb
adc
fisttpl
sub
xchg
adc
adc
push
imul
pop
jl
test
pusha
aas
mov
sub
pop
aad
cmpsl
dec
inc
mov
mov
jo
jns
addb
push
cmp
mov
dec
pop
mov
addr16
into
mov
fwait
adc
sub
pop
dec
inc
push
xor
movsb
shrl
scas
cmc
repz
or
gs
push
lcall
fdivrs
mov
push
cmpsb
dec
rorb
movb
mov
push
dec
sbb
inc
cwtl
push
in
cwtl
or
xchg
push
dec
push
es
call
std
test
andb
push
loopne
leave
jl
loopne
jle
lcall
mov
xchg
xor
fadds
push
add
fwait
push
ja
shlb
jl
sbbl
sub
mov
adc
mov
pop
dec
dec
mov
ror
es
je
xchg
inc
adcb
out
shll
arpl
stc
fistpll
and
fcomi
jmp
inc
and
add
ror
test
sti
gs
lcall
shrb
flds
inc
ljmp
push
movsl
mov
clc
dec
cmpsb
xor
lds
rcl
lods
iret
cmp
ficoml
loopne
pop
lahf
cltd
fcmove
fs
xchg
gs
mov
add
adc
test
or
xor
add
out
sbb
lods
xor
je
sbbb
mov
add
aam
lods
cmp
pxor
js
mov
push
push
addr16
aad
mov
jbe
xchg
dec
in
inc
repz
in
cmpsb
adc
lea
mov
jge
jmp
mov
push
mov
cld
scas
movsl
push
dec
lcall
adc
enter
mov
sub
pushf
dec
insb
leave
fildll
or
or
mov
notb
filds
push
add
fildl
test
add
mov
cmp
out
jnp
ja
xlat
dec
lock
mov
jg
or
jp
mov
jge
imul
je
loopne
cwtl
or
and
adc
mov
hlt
inc
lret
cwtl
jmp
jns
nop
rolb
mov
cmp
cltd
mov
or
jge
ret
cmp
pop
or
push
pop
and
arpl
push
call
insb
xchg
js
orb
scas
mov
push
sub
adc
push
pop
sbb
mov
enter
stos
fbstp
js
cmp
in
xor
mov
gs
jo
ja
adc
mov
push
cmp
mov
frstor
rorb
cmp
rcrl
mov
mov
push
jne,pt
ret
push
mov
and
roll
xor
push
jmp
mov
fisubl
repnz
stc
pop
andps
mov
jae
mov
test
imul
jmp
mov
mov
sbb
ret
mov
into
jge
mov
xchg
mov
sbb
fs
out
leave
or
mov
mov
pop
mov
xchg
cmc
mov
xchg
notl
leave
out
pop
mov
sahf
loope
mov
shrb
xlat
add
stc
mov
movl
stc
inc
jg
fs
add
rorb
insb
xchg
fimull
sbb
fsubs
xchg
jle
popl
jb
in
pop
inc
push
and
sbb
push
jnp
fnstsw
stc
mov
fsubs
leave
fsubrs
scas
dec
mov
shlb
loopne
cs
push
sbb
mov
fistl
in
cltd
add
ljmp
adc
inc
xor
dec
adc
cmp
sbb
mov
icebp
adc
or
mov
cmc
fwait
imul
mov
xor
dec
test
adc
sbb
out
cmp
mov
inc
jmp
xlat
pop
std
push
aas
xchg
scas
stos
rcrb
fmuls
ds
jmp
mov
ret
iret
ds
ret
mov
mov
dec
or
divl
adc
jb
jnp
outsb
xchg
pop
xchg
mov
hlt
pop
out
test
nop
mov
test
xchg
scas
into
jne
orb
hlt
xchg
pop
cltd
jmp
daa
mov
ss
or
inc
sub
addr16
sbb
adc
aaa
cwtl
arpl
fldl2e
je
mov
xchg
mov
aaa
sub
jecxz
cmp
inc
js
mov
mov
stos
push
lret
frstor
iret
cli
in
jmp
rorl
sub
pop
push
shlb
sub
outsl
dec
mov
nop
dec
scas
test
push
icebp
inc
add
in
fisubl
pop
push
add
jno
mov
push
movb
adc
addl
jmp
fsubs
hlt
lret
xchg
dec
and
inc
mov
fidivl
add
pop
aad
cmp
add
movsl
je
pop
aas
std
pop
sbbl
or
mov
lds
cmp
mov
adc
pop
jo,pt
pop
insl
mov
add
jmp
iret
mov
push
fwait
inc
mov
outsl
test
cltd
or
lods
sbb
jbe
test
cmp
int
and
add
mov
repnz
gs
data16
inc
adc
inc
mov
fcomp
cmc
push
xchg
or
pop
into
lds
adc
jecxz
add
iret
adc
fs
call
and
cltd
in
xor
ja
js
adc
xchg
fs
xchg
lahf
popa
test
pop
arpl
mov
and
fcomps
cmp
imul
mov
add
cmc
test
fcmovne
out
mov
mov
push
pusha
mov
popf
cli
mov
or
lds
pop
mov
push
jge
loope
and
std
mov
sbb
jle
lret
sub
and
cmc
inc
testb
jecxz
mov
lcall
sbb
ret
mov
sbb
lds
xlat
or
cmp
jnp
jl
loope
sbb
mov
and
cmp
imul
lret
lret
stos
ss
jecxz
jo
mov
jo
mov
andl
cmp
add
adc
mov
fadd
fwait
pop
subb
jg
or
mov
iret
sbb
stc
pop
dec
dec
pop
mov
pop
aad
and
push
jne
call
push
fprem
insl
les
imull
jo
pop
into
cmp
mov
mov
mov
cmp
out
test
cli
or
mov
pushf
dec
insl
mov
cs
stc
cwtl
movsb
es
das
subb
xor
adc
mov
dec
cmp
inc
sahf
sbb
adc
jnp
shll
pop
jae
jp
nop
sbb
icebp
push
add
int3
bound
pop
mov
fldenv
add
push
dec
lret
aaa
or
add
aam
xor
test
fcmovne
out
fwait
xchg
lds
pop
jae
fcoml
lods
daa
sub
out
scas
ss
cmc
mov
jecxz
cmp
mov
dec
faddl
adc
cltd
adc
xchg
mov
fistl
sub
arpl
jne
xchg
dec
cmc
test
outsl
sbb
cmp
inc
dec
mov
push
rcll
or
dec
jmp
rorb
popa
icebp
fcoms
push
cmp
mov
fistl
xor
std
fistpl
jl
sbb
popa
jo
push
mov
mov
cli
xor
inc
cmp
punpckhbw
mov
cmp
xor
fcmovnb
lahf
push
addr16
mov
imul
add
and
addps
dec
push
add
bound
ss
sahf
or
insb
push
in
ret
jg
push
jb
fisubl
out
xor
mov
mov
test
cmp
inc
cmpsl
cmp
loopne
insl
lods
in
subb
nop
mov
cs
fistps
adc
mov
mov
adc
incl
sbb
test
js
call
roll
fnstcw
pop
fst
or
mov
in
sub
mov
loope
jne
mov
add
lock
mov
insl
aaa
lods
lock
mov
sub
sbb
pop
out
inc
push
mov
push
xor
data16
cmpsl
jecxz
out
sbb
jecxz
cs
add
jge
jns
inc
and
lods
aaa
adc
sub
xchg
dec
popf
pop
fldl
stc
in
das
iret
add
or
cmpsl
sbb
mov
ds
lea
mov
mov
push
dec
je
out
in
adc
xchg
stos
add
mov
mov
orb
sub
fucomip
lods
mov
rorb
adc
aad
push
aas
xchg
popf
pop
jle
test
push
mov
ss
inc
shrb
mov
jmp
cwtl
sub
mov
ljmp
inc
xchg
mov
xchg
bound
jae
iret
das
inc
inc
lcall
or
lds
fstpl
push
fcomps
lret
mov
add
cld
xor
dec
nop
arpl
insb
mov
push
mov
js
scas
hlt
xlat
inc
icebp
nop
es
sar
or
dec
sbbb
test
sbb
mov
mov
lea
int
fadds
add
cwtl
rcll
faddp
ret
pop
scas
orl
adc
push
xor
pusha
jbe
push
xlat
fmulp
sbb
add
lahf
fwait
mov
orl
fimuls
out
pop
ja
xchg
sub
mov
jge
xor
jecxz
sub
test
dec
push
data16
sub
es
jg
xor
jo
mov
cmp
sub
adc
dec
adc
adc
xchg
rolb
inc
mov
or
and
sbb
xchg
arpl
push
orl
and
outsb
rcl
adc
fisttpl
pop
cmpsb
or
mov
jns
add
mov
jp
dec
insl
mov
aaa
xchg
aad
push
mov
lods
cmp
jmp
pusha
insl
aam
mov
inc
cmp
sub
in
xchg
mov
pop
sub
mov
arpl
cmp
xor
movsl
mov
lret
test
insl
shl
mov
pop
into
and
or
or
inc
push
inc
add
sbb
movsb
dec
mov
rep
dec
inc
loope
mov
jmp
das
repz
xchg
inc
jp
dec
insb
orb
cld
adc
insb
mov
pop
sti
repnz
mov
xchg
roll
xor
pop
jne
push
jo
inc
cmp
loop
rorl
sub
push
or
es
icebp
xchg
outsb
pop
ja
icebp
pop
fxch
shlb
mov
test
xchg
jns
push
push
and
mov
push
repnz
int3
aam
inc
repz
aam
shll
push
cmpsl
add
mov
xor
jl
mov
inc
dec
and
in
mov
mov
mov
mov
jle
out
xchg
das
push
dec
cltd
push
push
or
pop
pop
dec
adc
lcall
cmpl
and
out
pop
dec
inc
mov
push
pop
or
into
ljmp
and
jns
subl
pop
xor
push
aam
insb
push
sbb
pop
aad
adc
gs
scas
mov
cmp
arpl
into
fdivs
addr16
mov
push
xor
inc
frstor
push
sub
or
in
pop
addr16
fs
aas
mov
xchg
sbb
fnstsw
out
push
mov
jbe
leave
ds
jecxz
daa
xor
cmpb
outsl
fwait
dec
hlt
data16
pop
je
inc
enter
out
push
fstps
inc
outsb
xor
aaa
push
arpl
mov
xorb
sarb
cs
or
data16
mov
scas
ds
cmc
cmpsb
jmp
sbb
push
sbb
mov
inc
cmp
or
sub
mov
xor
pop
mov
cmp
hlt
push
pop
sbb
push
inc
adc
inc
rcll
jmp
lret
cmpsb
mov
lock
pop
mov
xor
adc
aas
shr
call
mov
loope
test
xchg
lds
dec
xor
adc
xchg
sub
andl
daa
add
flds
aas
fldt
leave
jg
jb
sbbb
sub
loopne
pop
push
mov
cwtl
cmp
inc
test
dec
stos
inc
dec
push
out
sbb
and
bound
mov
iret
cld
and
pop
pop
sub
jecxz
push
in
sbb
in
fnstenv
and
shll
pusha
inc
mov
xor
ss
cmp
push
in
sti
mov
sahf
lock
shl
les
mov
jmp
mov
cltd
sbb
jo
adc
pop
sub
sbb
out
adc
faddl
mov
jge
pop
adc
or
pop
arpl
mov
loopne
mov
inc
push
xor
repnz
scas
push
adc
mov
push
push
in
das
jmp
cmp
xchg
sbb
out
loopne
repz
test
dec
lods
and
xchg
jae
pop
sti
fidivrl
daa
mov
data16
inc
inc
add
xchg
mov
cmp
into
or
push
mov
push
and
stc
lods
cmpsl
scas
loope
mov
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
push
mov
pop
pop
addl
push
xchg
scas
mov
pop
pop
mov
pop
pop
cltd
mov
mov
cmp
aaa
jmp
les
cltd
jne
out
and
sbb
push
sub
fmulp
add
and
push
loope
pusha
fs
cltd
pop
xchg
push
rclb
mov
mov
test
cmp
pop
and
or
and
and
cmpsl
jne
mov
faddl
dec
and
dec
push
pop
mov
sti
inc
lahf
pusha
sub
jl
cmpsb
dec
xlat
fadds
mov
pop
sub
test
lcall
jp
int3
pop
sbb
lcall
add
adc
add
sub
xchg
pop
lds
dec
xchg
mov
mov
pop
xchg
xchg
mov
ret
test
enter
jae
fs
sbb
push
imul
pop
jecxz
sub
dec
or
inc
push
xchg
xchg
mov
into
aad
xchg
inc
push
in
out
or
cld
mov
jae
or
jno
cmp
lock
dec
jnp
out
adc
movsb
and
adc
jmp
cltd
adc
dec
stos
in
inc
out
repnz
lock
cltd
test
out
int
adc
sti
cmpsl
fsubr
ja
test
pop
aam
loope
jne
inc
mov
int3
rclb
in
je
lods
or
push
mov
movsb
lds
push
and
movsl
inc
data16
pop
sti
movsl
mov
and
ret
fdivl
daa
stos
inc
movsl
push
dec
loop
insl
imul
dec
fcoms
ljmp
mov
sub
rcl
adc
sbb
add
ds
movsb
pusha
push
pop
fcoml
and
ja
das
cs
add
rcll
sub
add
pop
jl
jbe
in
mov
mov
or
jae
roll
xor
outsb
in
or
lahf
cs
adc
lcall
ss
sbb
cmp
jmp
outsb
lods
in
adc
shlb
movsb
xlat
pop
mov
adc
fdivrs
jmp
xchg
iret
push
jecxz
pop
adc
push
mov
add
mov
mov
mov
xchg
add
and
lret
mov
pop
xchg
in
pop
lea
pop
dec
in
jmp
pop
addr16
repnz
adc
dec
mov
ljmp
ret
pop
add
inc
mov
or
call
mov
mov
cwtl
push
mov
mov
test
inc
sub
inc
mov
adc
iret
ds
in
test
add
xor
sbb
nop
sbb
jbe
in
push
add
rolb
and
mov
icebp
lret
mov
jbe
xchg
imull
lret
inc
add
fildl
iret
pop
addb
sbb
testb
in
jmp
or
imulb
xor
xchg
push
xchg
push
cmc
xchg
mov
cmp
xchg
or
clc
cmp
mov
divb
mov
xor
dec
sysret
aam
jne
adc
mov
js
or
out
out
cmc
movsl
lock
sbb
into
lea
mov
jnp
add
mov
clc
push
fwait
ret
xchg
movsb
mov
cld
test
cli
adc
test
out
push
ds
push
aam
leave
or
jecxz
xlat
clc
rorl
jp
in
fwait
fwait
sub
adc
push
mov
mov
sub
push
mov
int3
sub
mov
xchg
push
add
loope
push
ud0
or
ret
sti
jg
shr
insb
add
call
mov
punpckhbw
xchg
mov
and
stc
sbb
push
dec
in
mov
jae
and
data16
data16
mov
sbb
loop
inc
fdivrs
adc
push
test
inc
test
icebp
push
push
xor
js
and
cmpsb
subb
sbb
test
pop
sbb
and
jbe
push
inc
adc
shr
ss
lret
inc
jle
jb
pop
ret
xchg
adc
pop
test
enter
adc
cltd
and
dec
ja
cltd
push
lret
pop
sbb
and
mov
sahf
fisubrl
bsf
addr16
xchg
add
adc
mov
adc
pop
pushf
in
test
push
fistpll
mov
andb
aas
lea
jge
aam
fstpt
xchg
mov
xchg
fdivrl
cmp
rcll
das
sti
incb
mov
lret
sbbl
inc
test
jae
cmp
and
dec
cmp
daa
sbb
sub
or
xchg
int3
mov
dec
stos
cld
xor
inc
js
in
stos
xor
or
mov
xchg
in
insb
mov
mov
lret
dec
dec
adc
lea
pop
add
pop
call
sub
adc
icebp
xchg
cmp
cmp
movsb
loope
dec
and
fiadds
jge
push
xchg
pushf
in
add
pushf
jmp
das
pop
and
popf
push
pop
stos
notb
divb
mov
jne
iret
pop
inc
imul
stos
push
das
stc
sbb
push
and
xor
xorl
push
outsb
cmp
repnz
iret
mov
outsb
inc
mov
mov
daa
xchg
jg
mov
adc
aas
jne
lcall
dec
sti
in
adc
push
popf
test
rol
mov
fucomi
xchg
fwait
cmpsl
add
jecxz
pop
or
lods
pop
hlt
insb
sub
pushf
mov
sbb
mov
or
faddp
dec
add
stc
movsl
in
push
ret
fwait
jg
lret
bound
dec
and
or
and
ljmp
xchg
mov
in
test
ja
scas
fnstsw
fs
and
stos
jae
negb
push
push
insb
enter
adc
dec
add
iret
lcall
pop
xchg
push
ljmp
add
mov
mov
or
jle
xchg
rcl
popa
dec
ret
xor
cmp
jb
sahf
jp
mov
sarb
mov
bound
incb
cmc
adc
int3
adc
xchg
imul
shll
cmp
psubb
mov
cmp
cmpsl
inc
fwait
mov
fstpt
fisubl
in
and
mov
pop
lret
pop
xor
push
and
clc
test
dec
xor
sbb
add
hlt
mov
in
and
mov
outsb
arpl
push
arpl
stos
add
mov
mov
jo
cmpl
pop
movsl
jae
in
fwait
fs
push
call
stos
cmp
mov
and
sarl
sbb
dec
leave
vandnps
xorl
or
in
xlat
dec
mov
dec
out
adc
aam
push
loopne
prefetch
scas
andl
jns
bound
loope
mov
cwtl
rolb
cmp
ret
lods
lea
dec
ljmp
lock
nop
push
adc
jae
stc
loop
inc
imull
sub
scas
mov
ss
je
dec
pushf
pop
add
divb
sbb
dec
dec
xchg
loop
stc
sub
dec
lds
out
insb
add
push
out
mov
repz
jns
push
ljmp
dec
test
movsb
je
incl
test
lods
mov
pushf
daa
mov
call
nop
pop
xchg
mov
or
aaa
jl
lret
add
dec
lods
dec
imul
push
sti
clc
popa
hlt
repnz
mov
add
ljmp
sub
arpl
or
call
jmp
test
mov
jg
subps
sbb
xchg
lcall
cmp
sbb
dec
aam
inc
psllq
push
push
add
test
daa
pushf
pusha
inc
adc
ror
nop
or
sbb
sbb
adc
cmpl
or
mov
pop
scas
mov
mov
cmp
push
cmp
sbb
int3
hlt
sub
lods
outsb
mov
mov
cmp
push
mov
scas
cmp
mov
jne
es
out
add
inc
in
dec
pop
push
push
out
stos
sahf
cltd
push
mov
fldl
mov
and
mov
jb
shlb
out
test
insl
xchg
mov
or
inc
and
js
popa
stc
fstl
pop
jne
mov
adc
mov
mov
inc
xor
mov
cltd
fs
mov
inc
andl
cmp
cld
cmp
cli
loope
cmp
arpl
mov
inc
lods
int
pop
sahf
movsl
cmpsb
lods
iret
inc
in
lret
ret
jbe
ljmp
cltd
or
lock
lret
mov
sbbl
repnz
mov
jge
addr16
addr16
sbb
mov
in
ljmp
pop
lods
popa
addr16
push
push
inc
sub
sbb
data16
cmpsl
ss
jb
pop
loopne
pop
loopne
ljmp
insb
mov
movsb
adc
fistl
sub
or
adc
lea
pop
jge
and
push
orb
jne
jge
or
cmp
xor
push
jl
or
mov
dec
jecxz
clc
mov
pop
jb
pop
push
mov
push
lods
push
add
add
mov
movsb
mov
jl
or
xchg
sub
sahf
inc
adc
push
or
inc
jnp
inc
and
push
pop
xor
and
jg
cmp
or
sub
out
inc
xor
sti
popf
sub
pop
mov
jo
pop
cmovp
mov
shrb
je
popa
push
mov
mov
add
stos
in
int
addr16
dec
test
dec
pop
mov
lock
sbb
push
dec
cmp
pop
pop
nop
mov
insl
cltd
adc
daa
mull
mov
loop
push
inc
lahf
jbe
decb
imulb
fs
mov
inc
sbb
xchg
push
pushf
inc
mov
cli
lock
jmp
std
in
xchg
pop
fwait
mov
xor
jle
lcall
inc
cmp
nop
adc
roll
fidivrs
xchg
sub
sub
stc
xchg
jge
test
outsb
pop
mov
cmp
push
xor
dec
mov
sbb
les
inc
enter
mov
loop
sbb
push
cmp
mov
test
enter
in
pop
jb
ja
popf
mov
mov
sub
data16
jns
jmp
imul
xchg
push
ss
cmc
in
pop
xchg
cmp
scas
sarb
ret
loopne
repnz
sub
orb
adc
loopne
xor
repz
pop
aam
cmpsl
sub
imul
dec
adc
dec
sahf
mov
int
xchg
lret
xlat
pushf
std
jne
mov
xchg
mov
in
sbb
jle
jmp
sahf
in
and
out
movsl
int3
jbe
jecxz
cmp
lret
dec
mov
adc
ss
jno
xchg
in
fwait
dec
iret
xor
adc
push
into
cmc
lahf
push
sahf
cs
push
cmpsl
ss
mov
xor
xchg
ret
pusha
in
outsb
popa
fidivrs
xor
or
repnz
jnp
xchg
popa
sti
shrl
adc
push
jecxz
adc
mov
ja
mov
xor
inc
fadds
mov
push
es
loope
enter
xchg
sub
push
push
sbb
std
sbb
mov
mov
iret
scas
fldt
test
sub
in
leave
inc
dec
pop
jg
lret
sub
out
xor
fimull
lahf
loop
adc
xorb
test
push
cmpl
orl
add
ret
xchg
sahf
ds
jge
lock
frndint
shr
sbb
xor
push
inc
lret
ror
out
mov
push
out
cs
push
icebp
fldt
cli
cld
aam
sub
jne
cli
pop
jb
repnz
test
pusha
jp
mov
pop
imul
mov
stc
mov
cmp
xor
mov
sbb
dec
adc
dec
xchg
insb
rcrb
mov
je
jle
pop
jbe
push
and
mov
add
xchg
test
jne
push
loopne
nop
sub
pop
mov
cmpsb
scas
inc
xchg
push
popa
fldl
call
jno
stc
pop
movsb
mov
pop
dec
cmc
je
inc
fstl
lret
mov
rcll
push
icebp
jnp
stc
or
mov
jmp
dec
and
sti
mov
jb
add
cmp
pusha
int3
ljmp
scas
push
shrb
mov
shrb
xchg
mov
mov
int3
dec
sbb
add
je
lds
andl
cmc
hlt
sahf
outsb
push
jmp
sbb
inc
add
dec
sti
mov
outsb
in
push
jne
xor
mov
stos
cmpsl
lret
aas
jbe
push
ror
les
xor
mov
mov
xor
xchg
adc
aad
push
jno
inc
sbb
add
cmp
lahf
js
fisttps
inc
or
notb
pushfw
pop
cld
dec
adc
push
repz
imul
adc
int
xor
and
imull
lahf
add
sbb
jg
repz
mov
arpl
in
lds
or
out
sbb
lods
xchg
jg
or
ret
addr16
cmc
rolb
or
cmpsb
stos
cmp
es
mov
jmp
stos
leave
sbb
or
imul
cmp
test
int3
xor
test
stos
in
dec
sub
out
mov
and
pusha
pop
scas
lods
enter
mov
sbb
pop
ror
je
ret
add
dec
arpl
xchg
inc
sbb
sarl
sub
xlat
mov
pop
imul
dec
fcmovnb
dec
mov
mov
cmp
mov
pop
mov
insl
mov
cmpsl
cmp
or
test
or
outsl
pop
mov
data16
cmpsb
pop
pop
xor
sub
mov
fistps
mov
decl
lret
cmp
inc
aam
inc
push
and
sbb
into
lods
mov
pop
fstps
fsubr
mov
movsb
cmp
call
xor
xor
sub
mov
pop
dec
dec
in
out
aad
js
loope
aaa
push
shll
popl
out
mov
jmp
call
add
mov
gs
daa
or
push
outsl
pop
loope
pop
dec
mov
pop
out
push
es
adc
push
scas
mov
pop
adc
and
mov
insb
daa
sbb
idiv
add
out
add
and
mov
and
test
fistps
ret
push
test
mov
int3
jno
mov
mov
addb
aam
jbe
cmpsl
pop
mov
out
cmpsl
movsb
pop
mov
dec
xchg
mov
xchg
int3
and
inc
pop
mov
loope
aaa
std
lea
adc
arpl
xchg
sbb
dec
icebp
mov
cltd
in
js
push
test
sub
in
pushf
push
shrb
or
fiadds
cmc
std
gs
stos
cmp
xor
xor
aaa
cmp
or
rcr
popf
adc
gs
push
decb
sub
jge
rcrb
notl
add
out
lahf
dec
ja
test
pop
daa
mov
imul
add
cmpsb
sub
test
xchg
xchg
jg
mov
mov
and
sbb
movsl
or
xchg
in
out
add
push
dec
rolb
lahf
test
sub
daa
sbb
xchg
rcll
cmpsb
inc
or
imul
loopne
xor
mov
xlat
push
xor
sub
js
jo
mov
lret
sbb
cmpsb
fistps
xor
rcl
lcall
xchg
jae
imul
in
pusha
scas
cwtl
mov
cmp
sbb
sti
sub
nop
fcmovnbe
shlb
popa
ret
fcomp
ss
gs
lods
jge
jl
push
add
ficoml
call
and
sbb
jmp
cmc
cmc
mov
mov
xchg
cltd
and
lcall
sbb
dec
pop
enter
dec
and
adc
mov
enter
mov
cmpsb
aam
popf
ljmp
mov
popa
stc
pop
int
pop
js
and
cmc
ret
in
pushf
inc
test
fldlg2
cmc
pop
dec
aad
vpsrad
lods
in
or
inc
sbb
cwtl
inc
and
iret
push
lahf
in
pop
mov
lcall
daa
mov
jbe
lahf
pop
fcmovnb
int
add
inc
movsl
icebp
or
mov
fdivl
mov
mov
cwtl
pusha
rorl
xchg
ja
adc
movsb
pop
pushf
xchg
enter
ss
fmull
xchg
push
push
fdivrl
or
add
pop
clc
pop
ret
jo
jb
pop
stc
rcrb
cmp
ficomps
sahf
and
int3
mov
lahf
jmp
mov
lods
pop
xchg
js
ljmp
daa
xor
out
lods
call
xchg
daa
cmp
lcall
xor
leave
lds
imul
jns
cmp
sahf
sar
lock
lea
inc
push
aas
div
pusha
jns
pop
xchg
xlat
mov
int3
cwtl
mov
sbb
jnp
xchg
fistps
pop
mov
dec
sbb
pop
sti
jae
out
cs
jno
dec
dec
xchg
dec
xor
push
xchg
push
mov
or
cmp
pusha
push
push
ret
push
mov
movsb
je
aaa
mov
das
aad
loop
loop
nopl
mov
lret
ds
cmpsl
jo
push
notl
cmpl
and
xor
int
sbb
xchg
fstl
push
test
mov
sbb
fildl
ret
add
std
fs
gs
cltd
test
popf
push
or
lock
es
pop
jmp
push
ljmp
xor
dec
stc
or
xchg
fisttpl
jo
popa
xchg
lock
fwait
out
mov
sub
repz
xor
lret
aam
popa
adc
enter
adc
out
jg
cli
pop
dec
mov
push
xchg
xor
mov
add
stos
inc
cmpsb
and
mov
inc
adc
les
adc
dec
mov
mov
jl
arpl
dec
cmpsb
data16
fidivrs
loopne
sti
scas
dec
jb
adc
adc
xchg
testl
pop
pop
lret
sahf
rol
pop
popf
lods
sbb
mov
sbb
cs
inc
push
icebp
pusha
mov
movsb
sahf
push
fwait
test
lea
push
inc
pop
adc
inc
pop
lds
push
mov
loop
mov
das
push
mov
icebp
int
push
into
jbe
mov
fwait
out
icebp
pop
jp
les
test
into
adc
inc
icebp
jno
fsub
cmp
mov
lods
pop
ret
pop
sub
out
mov
jmp
pop
jne
xor
movsl
sbb
dec
cli
push
inc
loopne
inc
ficoml
mov
pop
into
mov
mov
xchg
and
mov
frstor
cmpb
jg
fisttps
cmp
cmp
cs
ja
lea
adc
fptan
xchg
xor
iret
mov
or
test
add
push
in
iret
call
data16
pop
inc
idivb
cmp
sbb
sahf
daa
int
nop
pop
sbb
xor
stos
inc
mov
popf
sarb
push
and
cld
cwtl
fnsave
popa
mov
sahf
and
adc
xchg
cmpsb
sbbb
mulb
mov
fiadds
in
jne
push
and
xchg
shrl
lods
mov
movsl
insb
mov
and
out
loop
xchg
shll
inc
and
lods
jb
arpl
push
sub
or
pop
cli
sbb
cmp
mov
repz
movsl
xchg
popf
and
imul
and
push
sar
cmpsb
fbstp
jle
in
add
sub
fstpt
xor
shrb
pop
lods
imul
gs
add
inc
xchg
shlb
or
mov
outsb
iret
shrl
push
sarl
lcall
jmp
loop
addb
jge
sbb
nop
aaa
and
outsl
xor
dec
jmp
dec
loop
inc
adc
jge
loope
scas
dec
movsl
add
push
cmp
int
clc
bound
mov
repnz
mov
shl
sbb
out
xchg
inc
hlt
cmc
xchg
xor
jle
cmp
in
movsb
aaa
push
add
int
inc
push
addl
out
mov
lock
cmp
divb
in
xor
test
cmpsb
cmp
or
push
adc
dec
add
add
jecxz
pop
dec
insb
mov
pop
jmp
fisubs
in
js
push
xchg
dec
ss
insb
adc
mov
mov
test
jle
push
fs
inc
data16
lahf
gs
int3
push
xor
inc
pop
inc
sub
add
pushf
dec
gs
lock
inc
cmc
push
pop
ja
pop
into
into
sub
jno
imul
popa
lret
daa
fldenv
dec
inc
add
adc
or
jmp
jo
cmpsb
push
xchg
pop
mov
push
mov
outsl
mov
or
sbb
mov
nop
pop
in
mov
jmp
add
dec
sub
fstpl
jp
sub
lds
adc
jb
dec
or
cmpsb
in
mov
test
jecxz
mov
repz
mov
popf
jo
cmp
insl
mov
and
push
pop
hlt
fs
and
push
andl
mov
push
mov
xor
sbb
xchg
aaa
or
pop
fildll
int3
dec
outsb
rol
pop
pusha
push
shl
cli
mov
pop
xor
pop
shll
scas
sahf
out
sub
mov
xchg
sbb
sti
cmp
addb
jae
fsubrl
push
pop
sahf
pop
aad
dec
mov
rol
adc
sub
in
add
fildl
mov
fwait
loope
daa
jo
inc
ds
adc
mov
dec
xor
mov
stos
inc
push
daa
mov
sbb
loope
pop
insb
mov
imul
xorb
adc
inc
movsl
lods
imul
scas
in
in
cwtl
cmp
je
popf
ds
insl
xor
clc
jb
push
loope
xchg
xchg
test
mov
jmp
rclb
push
mov
cli
popa
insb
dec
and
insl
mov
xchg
jbe
xchg
mov
sub
fsin
negl
cmp
inc
mov
mov
jns
in
out
out
xor
jns
xchg
inc
insb
cmp
push
int3
add
add
or
ficomps
rcrb
hlt
cmp
mov
sub
call
xorb
arpl
inc
push
lret
pop
cltd
mov
mov
daa
and
in
mov
shll
adcl
adc
fcmove
outsl
lods
push
push
or
cwtl
movsl
push
jmp
inc
pop
int
push
in
shl
mov
je
incl
shll
sbb
out
scas
repz
fs
inc
outsb
stos
mov
push
jle
cmp
dec
dec
jg
pop
pop
push
or
iret
ss
cmp
inc
and
add
lcall
lds
dec
idivl
pusha
outsb
test
pushf
repz
mov
sub
push
dec
push
sub
cmp
xchg
xchg
mov
dec
push
inc
aad
sub
movsl
mov
ficoml
dec
dec
loop
dec
xchg
sub
clc
icebp
jns
push
sbb
adc
cwtl
cli
jp
gs
ss
mov
test
out
adc
mov
pop
sahf
lcall
push
and
push
fsubrp
nop
gs
out
mov
sbb
and
mov
jno
cmp
dec
xchg
jae
inc
sbb
add
xor
inc
add
fwait
xor
test
test
xor
ss
stc
push
pop
dec
mov
and
mov
fimuls
push
fs
xor
jbe
addb
loopne
scas
cwtl
inc
imull
pop
lods
and
in
clc
cwtl
mov
repnz
iret
aaa
aaa
mov
aas
jge
cmp
xchg
sarl
dec
stos
cmp
pusha
out
in
fbstp
xor
dec
sti
test
js
mov
mov
jnp
imul
xchg
mov
es
xor
xor
inc
mov
add
dec
insb
and
add
sbb
testl
or
and
outsl
adc
inc
imul
int3
push
xor
xor
out
mov
je
mov
stc
shlb
fcoml
imul
enter
dec
bound
push
mov
push
in
lock
fs
push
stos
add
es
fst
in
sub
inc
jg
push
jno
fldenv
daa
out
dec
sbb
fiaddl
mov
insl
cmp
inc
xor
call
test
addl
enter
xchg
push
mov
add
adc
test
xchg
mov
imul
fildl
dec
sbb
mov
sub
xchg
sbb
imulb
shl
pop
jbe
xchg
outsl
mov
jbe
adc
adc
jno
aam
in
dec
add
xchg
sub
or
clc
out
cs
movsb
es
push
xor
lods
jecxz
lret
mov
adc
mov
bound
adc
ret
jne
jb
lret
mov
cld
sub
jecxz
pop
pushf
pusha
int3
and
xor
imul
xlat
xor
sbb
mov
xor
aad
pop
push
rorl
jmp
iret
aaa
push
rclb
jmp
test
outsl
ror
outsb
js
into
xchg
arpl
outsb
fdivrl
mov
jno
int3
sti
js
pop
repnz
repz
sub
jl
jmp
outsb
arpl
cltd
bound
insb
movsl
adc
jbe
aam
pop
pushf
pop
into
and
push
xchg
dec
fdivrl
insb
lods
xor
shrl
mov
test
mov
jle
sbb
and
pusha
cltd
aam
fwait
inc
hlt
daa
xor
jle
mov
mov
in
loopne
fstpt
pop
or
mov
push
inc
arpl
pavgw
bound
mov
xchg
mov
popa
mov
jno
jno
and
mov
mov
cmpsb
adc
pop
mov
pusha
cs
xor
mov
xor
xchg
mov
ljmp
dec
mov
lcall
xchg
pop
stc
rcl
inc
sbb
lret
xchg
bound
and
fildl
in
lcall
lcall
ret
out
cmc
fwait
dec
push
sub
fs
lcall
dec
sbb
std
movsl
and
pop
or
fsubs
cmp
jo
cmpsl
jb
lock
sbb
mov
mov
lret
cmp
nop
cmpsl
push
movsb
sbb
xchg
jp
xchg
stc
sarb
adc
ret
in
repnz
stc
test
lods
jp
subl
adc
bound
insb
rcrb
or
js
jg
dec
pop
ss
cmpsl
push
mov
sbb
jns
inc
add
dec
and
loopne
fimull
inc
fwait
xlat
mov
leave
push
test
fcompl
push
sbb
lock
lcall
push
push
pop
fcmovu
daa
test
out
ljmp
jb
pop
arpl
sub
cltd
xlat
and
jnp
push
int3
cld
fisttpll
lds
jmp
mov
insl
sub
int
jp
add
xchg
fcompl
dec
icebp
inc
sub
pop
sub
fstps
xchg
lcall
sub
pop
or
xchg
fs
and
jmp
cli
sub
inc
jb
add
pop
leave
mov
fwait
mov
or
orb
jp
and
fucomp
jne
maskmovq
idivl
cmp
push
push
call
test
push
int3
sbb
in
inc
pop
mov
ret
cmp
cmpb
pusha
cmpsl
or
jp
dec
sarl
and
mulb
pusha
push
repz
mov
push
into
adc
add
flds
adc
mov
cmp
or
rcll
ss
dec
adc
popf
mov
sub
pop
jle
pop
std
and
adc
loope
fstpl
push
sbb
fistl
adc
or
mulb
jb
fcmovnbe
scas
mull
mov
xchg
push
jg
push
and
xchg
fnstsw
jo
ljmp
push
pop
jno
sahf
inc
mov
jnp
dec
inc
les
int3
or
scas
jo
insl
inc
dec
cmp
and
add
cli
jp
sbb
add
adc
xor
and
push
mov
imul
mov
scas
lods
adc
jmp
sbb
fwait
jl
out
outsb
dec
add
dec
mov
bound
mov
loop
add
xchg
ret
push
sahf
bound
loopne
ffreep
stos
add
xchg
and
aaa
mov
cmp
lret
push
fisttps
test
stos
imul
pusha
in
or
stos
mov
mov
loope
loopne
adc
pop
xor
jno
jnp
jg
fcomps
pop
leave
and
and
shl
orl
hlt
sbb
movsb
shl
adc
add
sbb
sti
scas
repnz
loop
jmp
sahf
pop
inc
stos
dec
adc
push
in
mov
inc
faddl
adc
sbb
and
cmp
mov
cmp
sbb
fwait
dec
cmp
cmp
mov
xchg
inc
in
adc
dec
jecxz
movsl
dec
lahf
rcrl
and
add
cli
cmc
mov
push
test
gs
dec
lcall
sub
sbb
movsb
daa
lods
pop
mov
jmp
cwtl
pop
adc
pushf
pop
xor
inc
dec
insb
xchg
mov
int3
mov
sub
push
lods
xchg
jge
dec
daa
repz
fdivr
jl
cmp
cli
dec
divl
test
aam
scas
inc
je
jmp
mov
cmp
sbb
lahf
adc
test
shrb
xchg
loop
push
enter
pop
add
and
xor
push
loope
rcl
add
xor
add
roll
xor
jge
dec
add
aas
mov
lahf
mov
ljmp
popf
sbb
jo
dec
loopne
pushf
adc
mov
push
mov
cmp
sub
mov
mov
loop
push
sbb
and
mov
and
cmpsl
int3
mov
xor
inc
addl
push
or
jae
add
shrl
sti
movsb
out
adc
addr16
sub
ficoml
mov
xor
mov
mov
xchg
cmpsl
mov
inc
add
int3
and
mulb
mov
xchg
mov
repnz
scas
sahf
ds
mov
aam
mov
sub
pop
add
shl
ss
stos
ror
sub
insb
inc
pop
pop
cli
movsb
sbb
fimuls
int
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shl
test
mov
pop
addl
pop
mov
xchg
imul
jno
or
out
pop
in
mov
jle
loope
faddl
aas
divl
int3
and
mov
roll
mov
shr
xchg
stc
pop
bound
sbb
lret
out
jg
cmp
xor
jecxz
mov
mov
mov
add
pop
inc
pop
adc
jne
in
sbb
clc
imul
aam
popf
ss
sub
jno
mov
cmp
xchg
push
add
or
xchg
bound
es
push
je
cmp
sub
sbb
rcll
xchg
sub
imul
push
enter
sub
or
lcall
stos
enter
stos
fs
push
adc
pop
inc
mov
mov
mov
xchg
imul
add
inc
push
cmp
mov
or
jns
pop
add
lcall
push
mov
mov
adc
pusha
xchg
jb
test
out
sub
mov
xor
lahf
pop
xchg
rol
data16
popf
enter
sbb
cli
jbe
test
popf
lahf
xlat
jno
jnp
pop
imul
arpl
lds
cmp
jmp
adc
jmp
loopne
add
ret
aam
xor
sti
jmp
push
dec
push
aam
sbb
push
lret
testb
dec
and
xorl
pop
leave
cwtl
adc
mov
mov
xchg
push
popa
mov
mov
arpl
push
fcoms
or
xor
adc
mov
adc
jmp
adc
hlt
lock
add
pop
pop
ret
gs
sbbb
dec
xchg
adcl
mov
sahf
lea
mov
addr16
add
adc
imul
lcall
das
cmpl
into
fwait
jae
sub
or
arpl
dec
in
sbb
fdivs
lcall
rcl
or
adc
xchg
pop
ds
and
adc
xor
sub
popa
rclb
push
jmp
in
lcall
loopne
fwait
mov
lret
iret
std
xlat
jge
ficompl
cmp
add
sub
push
pop
into
mov
push
int
das
ficoms
lods
cli
push
cld
jge
rolb
jl
sbb
pop
inc
outsb
ja
into
incb
mov
je
sub
adcb
out
in
dec
sub
mov
dec
in
pushf
and
insl
xchg
std
leave
call
cmp
rorl
xor
add
out
cld
cmp
mov
in
jp
mov
out
mov
mov
mov
sbb
outsb
or
push
mov
jge
push
pop
adc
daa
pushf
jecxz
sbb
mov
or
aam
into
mov
lds
push
mov
xor
imul
mov
jge
xchg
xchg
lret
loop
movsb
rcrl
int
stc
sar
test
mov
in
mov
jmp
out
sahf
adc
fsts
out
xlat
xchg
xor
ret
mov
shrl
adc
out
int3
xchg
stc
inc
shr
insl
dec
mov
fisubs
cmpsl
inc
or
fsubs
scas
addr16
xchg
mov
pop
lds
adc
push
xor
pop
stos
inc
lds
popa
add
cli
inc
cmpsb
fs
pop
and
stos
ja
sbb
inc
xchg
aad
mov
adc
enter
dec
int
insl
sub
and
insb
test
jnp
push
push
pop
jecxz
xchg
pop
cmpsl
in
xchg
fistps
pop
add
fstpt
test
jne
insb
mov
mov
cmp
ret
push
jmp
dec
mov
aam
fcoms
sub
cmp
insl
sbb
fnsave
and
add
stc
xchg
fistpl
mov
fildll
xor
movsl
cmp
xchg
lahf
mov
pop
stos
pop
jo
pop
pusha
pop
popf
cld
cwtl
inc
pop
dec
jb
popa
xor
mov
aad
lock
das
pop
into
test
aas
add
cli
pusha
push
sbb
cmp
xorl
fdivr
push
lea
add
xchg
clc
imul
leave
sub
dec
inc
clc
xlat
or
rcl
pop
mov
jl
ds
push
sbb
imul
or
leave
fwait
xlat
xchg
push
fadds
cmpsw
in
pop
sub
pop
inc
mov
add
sbb
outsb
dec
addb
or
test
jbe
in
add
stc
andb
out
ss
fwait
push
sbb
scas
out
lds
inc
call
sbb
push
imul
pop
mov
jno
addr16
xor
mov
or
fiadds
fldl
and
ds
jno
mov
outsl
pop
jl
xor
aaa
pop
sbb
cltd
stos
xor
push
and
push
mov
mov
movsl
push
or
xchg
push
inc
test
xchg
add
adc
leave
xor
fcoms
add
cmp
cmp
or
cmc
push
inc
dec
rcl
pop
inc
and
pop
test
stos
mov
hlt
jmp
pop
pop
movsb
fcmovu
jno
stos
mov
push
adc
push
dec
mov
pop
jle
mov
mov
xchg
stc
fwait
jmp
pop
pop
loope
pop
mov
add
adc
mov
test
mov
scas
xchg
lahf
test
call
cmc
mov
js
sarl
xchg
inc
xchg
popa
sub
sbb
ja
sti
mov
cmpsb
fsubr
pop
pop
mov
lcall
or
lods
push
cmpsb
pop
push
mov
xchg
cmc
fwait
pop
mov
into
xchg
sub
fcmovne
jecxz
out
sahf
dec
xchg
sub
arpl
xchg
scas
hlt
test
insb
or
xor
das
push
mov
mov
lods
and
sbb
or
enter
mov
insl
imulb
scas
dec
xor
dec
loope
sbb
pop
cmpb
sbb
insb
loope
add
lods
mov
daa
mov
jge
stos
inc
loop
xor
mov
xor
adc
in
scas
dec
and
xchg
movsb
cmp
aaa
mov
fdivrs
arpl
and
jnp
inc
xchg
sub
ss
push
push
sbb
add
sbb
sub
aaa
negb
mov
pop
mov
adc
mov
or
add
and
mov
das
push
push
sub
movl
iret
dec
je
jge
jno
roll
cwtl
ljmp
add
sub
xchg
and
push
fidivrs
xor
in
addb
mov
sub
cld
mov
fwait
je
shlb
sub
popa
mov
cmp
aam
in
popa
mov
cmp
rcrb
mov
xor
out
push
pop
cwtl
push
in
cmp
ds
jo
into
rcrb
cwtl
and
ja
in
mov
jnp
push
pop
dec
ficoml
sub
repz
cwtl
mov
movsb
mov
mov
in
loopne
roll
pop
dec
sarb
aaa
imul
sti
clc
fdiv
lods
mov
mov
jne
jecxz
leave
pop
add
add
push
int3
hlt
sahf
cmp
fwait
mov
xchg
xchg
cmp
lcall
pop
cmc
xor
pop
loop
xchg
cmpsl
dec
popf
jbe
aad
mov
sub
sub
scas
push
stos
xchg
out
xorl
cmpsb
mov
gs
push
outsl
push
sbb
sub
and
sbb
inc
xor
outsb
loop
push
imull
mov
pushf
js
cli
adc
fstpt
dec
mov
addb
sub
pop
aam
pop
loopne
mov
hlt
mov
aad
jnp
insb
imul
insb
add
jae
push
xor
xlat
icebp
mov
je
jp
mov
sahf
in
xor
lods
push
lcall
out
inc
sub
outsb
in
mov
push
mov
sbb
xchg
and
dec
sub
test
sbb
and
or
loopne
ss
add
pop
jecxz
hlt
push
or
jecxz
addb
loopne
inc
push
testl
sub
mov
and
aad
mov
test
rol
in
xorl
or
bound
pusha
in
dec
mov
aaa
sub
mov
mov
xchg
ja
in
test
fnstenv
and
mov
xchg
pushf
pop
push
push
insb
or
cmc
aad
out
mov
fst
pop
sub
pop
or
sbb
jno
movl
xor
call
ficomps
loope
jb
xchg
fisubrs
inc
sbb
icebp
rcrb
loop
pop
iret
xchg
or
lret
loopne
jp
fcmove
mov
jns
and
popf
mov
jo
mov
mov
inc
cmp
mov
sub
inc
movl
sub
stos
jge
jne
sub
xor
inc
in
test
aad
xchg
shlb
cltd
jecxz
mov
add
lods
jmp
jg
push
lea
sub
sbb
sbb
lcall
mov
ds
mov
outsl
cmp
jae
cli
xor
inc
mov
shll
fnclex
testl
sti
push
add
out
mov
inc
or
pop
mov
rep
adc
sti
mov
into
add
clc
std
pushf
push
cltd
pop
lds
xchg
xchg
mov
xor
sub
add
cmp
mov
lea
mov
xchg
jmp
bound
mov
lds
mov
dec
xchg
inc
mov
jmp
adc
jae
xchg
mov
push
sbb
movsl
gs
fnstcw
sub
fnsave
or
shll
mov
fs
lods
xlat
fcomps
pop
popl
sbb
test
jp
shlb
cs
mov
in
sub
mov
nop
adc
inc
testl
shlb
fldt
fstl
inc
or
sbb
aad
outsl
inc
sbb
iret
add
sarb
adc
gs
nop
lret
push
movsl
cmp
pop
jbe
pop
int3
mov
xor
repz
mov
pop
pop
scas
mov
shl
fwait
scas
lret
adc
mov
dec
mov
cmp
or
dec
pop
pop
mov
xor
mov
add
cwtl
out
and
xor
pop
out
adc
or
inc
in
cmp
loopne
mov
sbbb
push
and
mov
mov
xor
xlat
rcrl
cmpsl
shll
adc
mov
adc
test
push
xchg
aad
push
mov
and
adc
dec
dec
jo
or
int3
int3
cmpsb
js
data16
mov
mov
nop
push
stc
push
inc
jmp
sbb
mov
insb
jp
jmp
bound
add
add
mov
add
mov
iret
jno
fistpl
dec
les
adc
sbb
in
sbb
jg
insb
xor
pop
push
stos
or
adc
lock
insl
push
jl
mov
xlat
fstl
aaa
sbb
cmp
popf
vmwrite
je
inc
je
adc
add
inc
inc
int3
sbbb
push
mov
sub
hlt
sub
xchg
outsb
sbbl
jecxz
stos
pop
notl
outsl
int
sub
sahf
cmpsb
in
les
insl
sahf
mov
test
adcb
mov
adc
popf
ja
sub
xor
and
mov
and
bound
mov
stc
mov
jp
out
sbb
jns
sbb
sub
rcrb
dec
scas
pop
cmpsl
adc
enter
add
xorb
cld
mov
orb
js
pop
push
mov
in
ljmp
adc
cld
jge
cmp
inc
and
cmpsb
dec
and
cmp
pop
lcall
push
stc
fcom
pop
arpl
and
inc
push
fsubl
fs
icebp
xor
jp
or
push
cmp
or
out
js
push
arpl
out
loopne
subl
stc
sbb
add
sub
mov
cwtl
xor
les
repnz
insb
js
push
pusha
in
sarl
sub
pop
pop
lret
je
sub
dec
call
mov
stos
stc
fcmovb
sub
sub
jo
adc
out
jnp
dec
mov
lahf
out
cmp
fidivrs
xchg
out
decb
jne
lods
jp
xchg
rcr
fmuls
mov
sbb
adc
stos
jne
mov
fdivr
cmp
add
inc
push
in
push
xchg
ds
inc
lds
leave
dec
or
sub
sar
ja
pop
test
mov
push
sub
jae
pop
cmp
loope
cmp
and
cmpsb
cmc
pop
adc
cmp
ret
insl
and
pop
es
outsb
mov
cmpsb
jno
cwtl
and
xor
cmpsl
cmp
aas
pop
push
jg
or
add
rclb
cltd
cmpsb
mov
lahf
pop
fs
xchg
test
popf
sbb
lods
xchg
adc
cmp
dec
cmp
sub
addr16
icebp
pusha
movsl
scas
lcall
mov
pop
xchg
stc
inc
call
xchg
movsl
testl
pop
orb
push
sahf
cmp
jl
insl
jge
mov
in
push
out
add
sahf
xor
je
insl
cmpsb
dec
jb
sbb
push
ret
jmp
imul
jo
pop
sahf
sti
aad
leave
daa
mov
std
daa
mov
jb
lcall
in
dec
and
ja
in
xchg
cli
sarl
roll
inc
hlt
adc
pop
xor
enter
jae
mov
pop
dec
jmp
add
mov
cmp
pop
mov
add
inc
sti
lret
imul
xor
hlt
jecxz
jbe
cmc
addr16
mov
test
lret
loop
adc
scas
add
fimuls
not
or
add
and
lret
pushw
sub
in
dec
jmp
or
cs
call
mov
mov
aad
adc
pop
or
mov
mov
in
pop
outsb
mov
cmp
add
xor
mov
mov
idivb
imul
ljmp
in
data16
adc
stc
call
push
dec
loopne
pop
outsl
pop
sub
xor
out
lea
lea
insb
popa
cmp
fdivp
int
mov
pusha
gs
icebp
rcr
mov
mov
icebp
pop
daa
mov
stc
das
pop
jne
mov
fmull
pop
scas
mov
sub
pop
adc
sub
mov
daa
out
outsl
adc
or
xchg
xchg
xchg
xor
sub
jecxz
aas
pop
rcrl
sbb
sbb
mov
or
sub
xorb
rolb
adc
test
sub
jmp
jg
push
nop
dec
mov
push
iret
movb
sub
xchg
stc
out
adc
or
mov
shrl
sahf
bound
es
in
idiv
inc
mov
push
or
or
mov
fdivrs
outsl
sarl
shll
or
xor
mov
stc
mov
enter
push
rorl
mulb
add
clc
mov
je
cltd
sahf
pop
shl
ss
rcrb
push
fsts
mov
add
rol
dec
adc
add
jp
gs
and
icebp
les
aam
sub
movsl
pushf
cmp
xchg
pop
mov
shll
mov
test
sbb
xchg
pushf
ljmp
and
daa
stos
xchg
ja
adc
inc
xchg
call
popf
test
jg
les
jge
inc
les
push
pop
add
mov
pop
push
and
xchg
mov
arpl
inc
cmpsl
in
aad
lcall
movsl
adc
sbb
std
hlt
cltd
test
clc
cwtl
and
cmp
pop
or
add
jnp
int3
add
mov
lea
xchg
test
inc
xor
mov
int3
out
into
cmpsl
sbb
xorb
loop
daa
jns
xlat
mov
leave
daa
outsb
adc
popf
xor
enter
mov
inc
cmp
dec
aam
int
out
ret
add
pushf
ror
std
push
xchg
pop
arpl
push
push
jg
adc
jle
dec
push
jle
inc
stos
sbb
imul
adc
ds
das
dec
scas
cmpsb
add
mov
lods
sub
mov
lods
jg
mov
loopne
or
iret
outsl
mov
shlb
xor
repz
js
or
lahf
sti
cs
mov
xor
adc
iret
jne
insb
cmpsl
mov
xchg
loopne
nop
jno
mov
sub
insb
fsubl
mov
xchg
xorb
cmp
xor
data16
fmull
add
andl
lret
ja
in
mov
das
stos
adc
push
imul
jge
mov
lock
xchg
ret
sub
arpl
add
fcoml
and
les
xor
inc
fdivl
movsb
adc
jne
sahf
mov
into
cmpsl
mov
mov
sahf
std
or
xchg
and
inc
add
nop
xor
inc
xchg
fldcw
mov
or
jnp
mov
bnd
push
nop
mov
dec
mov
mov
lock
push
sbb
xchg
lock
imul
inc
stos
adc
and
sub
adc
cmpsb
mov
mov
pop
jecxz
jl,pn
in
add
mov
and
movaps
jae
and
dec
pop
in
mov
cwtl
lods
scas
popf
mov
push
popf
lcall
jge
je
loopne
ret
push
stos
into
xchg
bound
shll
out
adc
scas
leave
test
xchg
sbb
jb
mov
jecxz
sbb
fistpl
mov
repnz
movsl
std
pop
sub
sub
adc
sub
loope
mov
iret
clc
push
or
push
and
repnz
jo
gs
inc
push
push
and
adc
and
jg
in
mov
es
inc
outsb
imul
push
push
lcall
cmp
stos
aam
je
mov
nop
fimull
mov
dec
testb
das
dec
push
fucomip
scas
dec
popl
xor
andl
adc
lea
imul
iret
out
xor
mov
out
stos
adc
push
add
rcll
push
jo
pusha
lahf
jle
add
inc
dec
adc
call
pusha
or
jge
push
or
adc
bound
mov
pop
fchs
stc
fmull
lods
fistl
mov
pop
cmp
pop
cli
aam
inc
pop
inc
insb
testb
add
xor
adc
jae
and
sarb
sahf
add
out
cltd
sbb
mov
add
insl
sbb
jp
decb
cmp
sbb
add
jns
ret
dec
cmp
mov
mov
mov
adc
or
xor
lcall
cmpl
xchg
adc
or
dec
adc
dec
jp
stc
out
cmp
pop
out
stc
aas
scas
mov
es
mov
mov
imul
cwtl
es
dec
testl
mov
push
sub
dec
push
or
jno
nop
jle
push
mov
push
mov
xchg
iret
pop
sub
jge,pt
cmpsb
cmp
jge
std
lcall
lret
mov
ret
jns
mov
in
lds
add
scas
into
lret
arpl
call
in
imul
or
test
push
add
jbe
xchg
test
push
ror
xchg
mov
out
bnd
mov
ja
mov
push
mov
push
les
mov
xchg
adcl
icebp
jecxz
lcall
addr16
rcl
std
sbb
mov
outsl
and
dec
ljmp
mov
push
pop
xor
sbb
xchg
outsl
dec
hlt
mov
es
inc
xlat
mov
xor
mov
cmp
rcll
mov
in
xchg
sbb
popf
cltd
pop
push
mov
cmp
xchg
cmc
ficoms
push
xor
shlb
jnp
in
sub
mov
dec
std
xchg
and
cwtl
out
fs
loope
lret
int
sahf
xchg
jb
ds
lret
cs
shr
add
inc
neg
out
out
sbb
repz
inc
ret
jecxz
pop
scas
arpl
mov
dec
lret
pop
lcall
add
sub
call
xchg
mov
push
push
negl
adc
jno
sbb
out
jnp
sti
dec
imul
cmp
int
inc
lahf
test
cwtl
call
xchg
fbld
in
insb
lcall
dec
push
in
push
inc
hlt
jmp
push
adcb
inc
ss
jl
push
fisubl
push
inc
add
loopne
mov
or
mov
cs
enter
mov
pusha
or
mov
mov
push
adc
pop
mov
insb
mov
push
and
pop
mov
sbb
xor
pop
jo
mov
cmp
outsl
xlat
xchg
inc
cli
shrl
sbb
sbb
adc
xor
and
sub
sbb
jae
inc
jb
inc
push
sbb
lds
sub
xchg
loopne
pop
inc
xor
mov
jbe
data16
mov
mov
adc
add
inc
incb
scas
sub
mov
xor
lcall
mov
adcl
xlat
movsb
inc
add
bound
inc
or
lock
xchg
jo
add
mov
sub
mov
movsb
pop
push
aaa
ds
jns
popf
into
lret
jl
and
dec
xor
cs
in
pushf
stos
fidivrl
jae
ss
mov
mov
cmp
neg
dec
cmp
inc
int
sbb
inc
nop
shrb
imul
iret
push
mov
mov
dec
push
push
add
aad
rclb
outsl
sbb
and
jl
dec
lods
mov
jbe
push
push
mov
dec
push
xchg
test
push
jnp
aaa
and
jg
dec
filds
xor
mov
bnd
aam
sbb
test
adc
ret
mov
mov
mov
push
push
jo
leave
xor
xchg
fstpl
inc
and
nop
stc
insb
les
cmp
stc
cs
movsl
dec
movsl
dec
int
adc
insb
jg
mov
cwtl
or
call
addl
std
leave
xchg
mov
mov
push
scas
mov
inc
pushl
add
loope
icebp
stc
add
std
addb
sbb
fstl
xchg
icebp
mov
sahf
inc
insb
cmp
out
lret
inc
or
repnz
icebp
push
roll
stos
ljmp
les
cmp
sbbl
dec
lock
xor
xchg
dec
cmc
dec
adc
loope
outsl
pushf
mov
mov
fwait
insl
or
repz
add
clc
lock
frstor
ss
daa
cmp
enter
jge
hlt
sbb
das
outsb
hlt
fmuls
xchg
or
push
loopne
mov
mov
inc
sbb
lar
rolb
xor
mov
or
lahf
scas
popfw
aad
pushl
dec
sub
jle
mov
jp,pt
push
sub
ret
inc
cld
sbb
inc
mov
xchg
call
testb
cmp
sub
outsl
and
test
sbb
rcll
stc
or
int
call
iret
push
add
lret
fstps
daa
movsb
lahf
sarb
stos
xlat
stos
test
xor
out
sub
stc
mov
mov
adc
inc
or
xchg
in
cmp
cmp
inc
lea
xchg
mov
mov
jle
ljmp
rcl
les
ja
mov
jp
lret
mov
out
fsubrl
lds
xor
inc
mov
loop
cmp
int
mov
push
mov
mov
into
or
imul
pinsrw
mov
and
sahf
lods
cmp
aad
mov
out
test
in
jmp
std
fstpl
mov
adc
mov
andb
adc
jecxz
fldenv
ds
fdivs
xchg
testb
xlat
pop
push
test
insl
nop
xchg
out
rcll
jl
jle
enter
or
notl
out
inc
cmpsw
repz
mov
addr16
cmpsb
mov
scas
fstpt
lcall
into
in
roll
sub
mov
add
jb
mov
jns
es
mov
stos
es
or
pop
mov
into
pop
imul
jmp
js
mov
jmp
xchg
gs
mov
inc
cmpsl
in
dec
ret
xchg
jno
or
cmp
xor
push
sub
iret
loopne
inc
fidivl
outsl
or
movsb
mov
in
dec
mov
ja
and
repz
in
jg
incl
popf
enter
in
pop
hlt
xchg
js
movsl
sbb
dec
stos
sub
loopne
and
out
pop
sahf
cmp
sbb
jecxz
xchg
inc
rorb
in
ret
xchg
negb
test
icebp
sbb
sbb
sbb
leave
cmpsl
push
or
pop
sub
adc
into
fwait
lahf
cmpsb
out
ficoms
lahf
pop
insl
mov
xchg
loopne
gs
push
xchg
hlt
or
push
xor
scas
test
cmp
mov
jne
xor
inc
loope
xlat
scas
bound
and
push
aad
jnp
cltd
mov
xor
jle
sub
xchg
cs
pop
int3
jns
or
pop
ds
fsubl
mov
sub
mov
shl
xchg
fbld
jnp
sbb
subb
cmpsl
hlt
adc
shrl
mov
mov
inc
push
xchg
mov
sti
fists
push
jae
push
mov
andl
shl
movsl
ret
sbb
cmp
adc
ret
addr16
pop
add
push
cmp
and
popa
sub
adc
clc
dec
pop
imul
adc
fisubs
sbb
cmc
jl
out
push
xchg
xor
icebp
icebp
jecxz
outsl
mov
pop
ret
jno,pn
mov
ret
or
push
pop
and
cmpsl
inc
cmp
jnp
mov
fistpl
push
mov
mov
mov
orb
ret
dec
xlat
lods
jbe
fstl
sub
sub
dec
int3
cld
push
test
push
mov
adcl
mov
jmp
insb
pop
gs
inc
pop
jb
popf
mov
dec
sub
push
scas
jne
pushf
jge
push
push
popa
xor
outsl
add
adc
mov
push
inc
or
inc
jno
jl
mov
cmpsl
lock
jns
sub
popa
mov
decb
idiv
ret
in
or
adc
add
xchg
shrl
jg
adc
ljmp
rorl
adc
jp
inc
inc
pop
sub
shrl
das
xor
mov
scas
lea
neg
push
mov
or
add
xor
movsl
cmp
mov
shl
jmp
mov
jb
pushf
ficompl
outsl
pmaxub
sbb
sbb
mov
jmp
insb
pop
outsb
test
xor
add
nop
mov
adc
jge
mov
push
sahf
mov
and
xor
inc
mov
ljmp
mov
pop
xor
cld
shll
pop
call
xchg
inc
jne
adc
or
pop
arpl
ljmp
ss
jle
xchg
jae
cmp
scas
xor
mov
mov
int3
in
xchg
mov
mov
xor
lcall
aam
sar
fiaddl
loope
add
out
mov
mov
fbld
mov
lret
out
ss
xchg
aam
sub
hlt
scas
pusha
jle
dec
into
fisubrs
cmp
xchg
mov
sarl
jecxz
dec
push
pop
js
jne
js
ret
dec
mov
push
gs
scas
jae
jle
sbb
lret
sub
pop
and
int3
imul
das
jno
loop
repz
addb
sbb
sub
cmpsl
pop
testb
xor
sahf
dec
gs
lahf
sub
mov
inc
out
fidivs
leave
rcrl
push
jo
lahf
push
ret
shrb
mov
xchg
arpl
mov
enter
and
jmp
add
nop
pop
pop
push
int
pop
mov
lahf
mov
or
mov
in
xacquire
jp
addl
loopne
daa
test
lcall
std
lahf
fwait
sub
dec
rcr
sbb
jns
mov
and
and
add
fidivl
adcb
cmpsl
scas
pop
add
add
lods
sti
and
je
mov
and
fs
repnz
jno
adcb
mov
push
aam
dec
sarl
xchg
sahf
inc
sbb
inc
std
insb
inc
jecxz
xor
lods
lea
or
cmc
pop
dec
scas
in
jge
popa
and
and
ds
mov
pop
fwait
and
out
into
adc
mov
xchg
sbb
jne
push
mov
push
insb
ja
movsl
pop
insb
mov
and
cmc
sahf
frstor
js
ja
mov
add
aas
xchg
jno
lcall
push
jmp
pop
xor
pop
out
push
push
gs
mov
xchg
pop
enter
test
push
cmpsl
int
leave
ljmp
mov
mov
pop
aam
mov
jbe
popf
jge
pop
mov
ficoml
mov
xchg
enter
int
cmp
sbb
sbb
rolb
cmp
push
std
notl
sub
rol
cli
sahf
lds
adc
int
xchg
push
pop
mov
pop
lret
loope
mulb
leave
pushf
and
sbb
jno
insl
adc
sti
incl
out
and
mov
pushf
testb
sbb
jnp
es
sub
ret
add
outsb
xchg
mov
and
xchg
push
jno
xchg
jl
cmp
bound
xchg
xchg
sub
scas
into
xorb
or
and
adcb
xchg
pop
adc
lods
push
mov
lahf
mov
push
mov
jmp
insb
mov
mov
fld
mov
add
into
jbe
and
loopne,pt
xchg
clc
sub
inc
pusha
stc
xchg
sbb
aas
mov
testl
mov
mov
out
cltd
lcall
outsl
movsb
mov
push
or
stos
inc
outsb
repnz
or
mov
aad
movsl
sti
in
test
movsl
in
pop
inc
pushl
inc
jecxz
es
push
cmp
jle
push
repnz
inc
imul
mov
int
and
or
jge
mov
cltd
mov
cvtps2pi
das
ret
adc
into
arpl
mov
dec
inc
pop
fcomp
push
lods
jg
and
imul
adc
mov
fidivl
fbstp
arpl
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
push
xchg
adc
addb
push
xor
shrb
mov
xlat
cmpsb
ja
mov
nop
shl
adc
int3
jge
adc
test
jnp
lds
cwtl
jae
dec
lock
out
imul
inc
inc
sub
adc
cs
or
arpl
out
sbb
xlat
mov
or
stos
dec
sarb
ret
mov
jge
aaa
xchg
loop
inc
mov
ljmp
push
dec
enter
dec
xchg
xchg
repnz
and
outsl
add
iret
push
ret
lret
std
or
fldt
ja
mov
cmp
lods
sbb
notl
call
add
mov
push
cli
shrb
imul
pop
divb
and
add
pop
test
fwait
inc
shll
sub
cltd
jb
pop
cmc
mov
jae
or
sub
sub
popa
sub
mov
inc
ljmp
fwait
xor
outsb
push
jl
sbb
fs
mov
push
and
jp
mov
mov
push
pop
and
in
xchg
sbb
icebp
xchg
sbb
fucomp
dec
das
dec
cwtl
call
sub
ljmp
xchg
movsb
xchg
out
xor
outsl
addr16
dec
or
jge
mov
ret
xlat
cmpsb
insl
ds
and
dec
clc
lock
ds
add
ljmp
cmp
insl
add
xor
inc
jmp
ret
faddl
xchg
call
sub
mov
xorb
mov
or
pusha
xor
add
les
out
jge
pusha
jo
push
jl
aaa
lret
test
loope
add
clc
mov
sub
popf
ljmp
loope
pop
mov
sti
sub
jecxz
icebp
sub
fstpl
xchg
mov
out
jnp
push
cmp
sahf
mov
mov
fcomps
dec
xchg
cs
dec
sub
aas
insb
out
rcrl
stos
xor
daa
in
cmc
adc
dec
popf
ss
xor
mov
out
fimull
js
pop
add
or
adc
pop
xchg
inc
mov
mov
pusha
loop
stc
cs
jo
test
orl
out
repnz
cmc
pop
mov
in
pop
dec
clc
sbb
imulb
and
pop
xchg
adcb
xchg
sub
pop
fwait
lret
jb
out
xchg
inc
aam
loopne
or
fstpt
push
sbb
sub
cmp
cmp
cmpsl
pop
sbb
out
enter
out
dec
aas
and
mov
insl
comiss
lahf
xchg
mov
js
jno
cmp
shll
mov
in
addl
xchg
es
fiadds
cmp
fwait
aad
or
outsb
xchg
loop
mov
data16
xor
mov
adc
int3
orb
fisttpll
cmp
jg
adc
out
fs
addl
mov
pop
mov
aad
sahf
ds
data16
mov
xor
sahf
xchg
jg
add
mov
xor
jg
shrl
jl
push
cmp
sti
adc
add
jnp
scas
dec
leave
mov
xchg
mov
or
push
push
scas
int
push
repnz
out
dec
pop
add
xor
loope
push
add
cmp
cmc
inc
int3
cs
mov
fwait
lods
test
sub
xchg
jle
mov
fidivl
inc
inc
mov
xor
shrl
cmp
repnz
mov
dec
cld
loopne
or
out
add
sahf
popa
inc
mov
ficompl
cmpl
push
pop
je
enter
stc
enter
cmp
xchg
outsb
ljmp
loopne
test
das
mov
shlb
xchg
xchg
mov
mov
cld
xor
movsb
mov
mov
sub
mov
ja
enter
in
hlt
push
dec
adc
xor
mov
push
xchg
subl
pop
aaa
adc
or
or
mov
cmp
cmc
cmpsb
ret
fcompl
mov
call
js
push
sub
sahf
mov
out
xchg
cwtl
cmp
pop
fcmovnbe
jae
xchg
aaa
mov
adc
cld
add
sub
roll
push
adc
lahf
jle
mov
push
fildl
cmp
pop
flds
in
scas
sbb
jne
ja
out
iret
je
shlb
push
sub
pop
and
lock
or
fsubrs
add
lods
pop
fwait
sbb
adcb
jne
cmpsb
jmp
mov
jbe
stc
adc
aad
sbb
arpl
sbb
pop
add
jns
fs
outsb
mov
or
ja
insl
ds
popl
imul
lea
xlat
pop
aaa
mov
push
je
add
mov
jbe
xchg
bound
imul
add
dec
aad
rorb
cmp
push
push
push
aas
cld
fucomp
or
push
out
stos
in
jecxz
pusha
fwait
out
movsb
mov
repnz
lcall
push
xchg
fsubrp
les
mov
sbb
rcll
fadd
inc
add
dec
hlt
sbb
mov
stos
outsl
dec
adc
xchg
push
insb
andb
xchg
jmp
std
test
xor
adc
ljmp
insl
negl
xlat
mov
pop
mov
or
cmp
rcrl
jp
dec
mov
lods
push
int3
xor
out
sbb
pop
lahf
shll
dec
js
add
cmp
jbe
jae
and
jmp
dec
out
iret
or
cmp
xchg
stos
inc
lods
idivb
sbb
js
dec
and
fnstcw
xchg
mov
dec
mov
orl
imul
ds
inc
data16
xor
in
ror
ljmp
mov
je
mov
outsl
and
lods
lea
outsl
jae
cmp
jnp
adc
mov
lds
movsb
je
xchg
xor
repz
aam
jae
es
jge
sti
mov
cld
ret
mov
jmp
iret
push
xor
add
jno
test
lods
jnp
pop
out
mov
std
mov
and
dec
imul
fs
jl
scas
ja
push
in
inc
cld
xor
ficoms
mov
push
repnz
jecxz
xor
sub
stos
imul
or
jp
mov
cmp
lods
int3
pusha
popa
jge
and
jmp
push
arpl
and
or
cld
and
adc
jb
outsl
enter
inc
fiaddl
jb
adc
inc
adc
xchg
hlt
mov
jle
lock
pop
jno
inc
jnp
cmp
in
out
xchg
sbb
dec
test
sub
fildl
int3
js
out
test
xchg
in
fimuls
and
cld
insl
mov
mov
sub
xor
lods
jnp
sub
add
sub
push
mov
movsb
cmpsl
cmpsl
incb
loopne
pop
mov
adc
push
jge
int3
adc
xchg
cmp
sbb
dec
push
jge
sbb
mov
out
jb
pop
aam
icebp
jmp
sbb
xchg
xor
stos
add
out
imul
jae
test
xchg
mov
cmpsb
dec
mov
in
insb
leave
xor
xor
xor
sub
scas
pop
imul
xor
and
das
in
inc
xlat
enter
or
jnp
jnp
in
mov
push
ret
add
mov
cltd
cmp
or
xor
lods
jg
not
push
decl
mov
fmul
mov
icebp
pop
push
mov
or
xchg
and
inc
cld
jae
stos
dec
xchg
cmp
mov
xor
pop
xchg
mov
adc
ret
add
push
mov
test
arpl
aas
sub
jl
add
pop
push
enter
shl
jae
into
mov
jecxz
aas
mov
outsl
test
xchg
imul
xchg
adc
addl
lahf
push
cmpsl
mov
xchg
hlt
test
mov
inc
xchg
sub
fbld
adc
inc
div
push
ror
out
loop
fldt
loope
out
jb
out
dec
add
rol
dec
sub
add
pop
jp
and
adc
nop
pop
nop
aad
fisubrl
mov
rep
shr
arpl
inc
outsb
sbb
cli
xchg
mov
mov
mov
sbb
mov
in
fsubrp
sub
lret
test
fwait
dec
pop
xchg
aad
mov
je
or
std
push
push
sbb
dec
xor
clc
dec
cli
orl
or
es
addb
dec
stc
in
lds
clc
loope
pop
testl
ret
sbb
repz
mov
push
cmp
xor
xchg
fcom
outsb
sbb
mov
sahf
repz
pop
fsubrl
pop
mov
mov
mov
and
pop
fimuls
lret
pop
dec
and
inc
sarl
test
push
dec
sbb
pop
ror
cmp
cmp
cmp
test
cmpsl
insl
icebp
sub
dec
scas
sbb
cmpsb
insl
icebp
add
hlt
imul
ja
mov
mov
std
xchg
adc
jmp
adc
pop
pop
movups
call
push
adc
push
lea
jbe
add
jo
push
lods
fnsave
push
xchg
test
pop
adc
and
cmc
cmpl
divb
out
xchg
xchg
sar
pop
pop
movsl
scas
jecxz
out
fstpl
xchg
push
js
xor
popfw
inc
clc
mov
dec
out
mov
mov
push
mov
inc
stc
xchg
sub
xor
cmp
mov
and
cmpsb
sahf
xchg
sbb
mov
int
push
popf
jo
loop
mov
inc
test
leave
and
xor
sub
pop
in
ss
nop
fistl
add
ss
add
insb
inc
xchg
push
clc
jno
iret
in
lret
jns
xlat
loop
repnz
pop
inc
fwait
les
lahf
das
dec
lock
and
adc
add
pop
adc
call
jp,pn
outsl
xor
jae
adc
rclb
mov
inc
jg
xchg
inc
inc
ss
repz
xchg
mov
adc
push
sahf
dec
xor
insl
jno
lcall
inc
loopne
sahf
pop
cltd
popa
bound
mov
aas
mov
sbb
int3
sub
ss
movsb
lret
lock
js
test
mov
sub
stos
push
mov
mov
out
rolb
mov
rcrl
add
cmp
and
cs
enter
xchg
xchg
jns
mov
mov
fidivl
mov
fcmovnb
repz
push
push
dec
movsl
add
mov
stc
ficoms
cmc
repz
add
aas
adc
aas
jo
lahf
in
das
stos
jge
mov
call
fucomi
dec
gs
adc
jle
insb
pushf
arpl
xchg
or
dec
xchg
or
sbb
pop
inc
imul
stos
test
xor
testb
pop
in
in
jo
mov
push
outsb
xor
inc
std
adc
push
iret
xchg
lds
aaa
pop
fisttpll
pop
jo
push
push
pusha
push
dec
jns
sbb
stos
dec
xor
aaa
aas
lret
or
mov
or
test
push
push
cltd
pop
inc
popf
or
inc
loop
dec
cmp
pop
cs
rcr
and
push
sub
xchg
test
and
lods
mov
pop
hlt
out
adc
and
insb
jle
add
push
mov
adc
fidivrs
loope
sub
cmpsl
filds
mov
cmpsb
lret
hlt
xlat
push
dec
mov
dec
int
adc
xchg
xor
iret
jl
test
mov
mov
jo
std
cmp
filds
cmp
sbb
in
popf
sub
dec
push
into
popa
push
mov
mov
adc
adc
push
sub
int
xor
lods
inc
mov
sbb
repz
dec
flds
in
stos
pop
dec
adc
jg
jns
mov
pushf
test
inc
mov
fisubrl
fmull
pop
inc
arpl
lret
roll
es
pusha
mov
pop
rcl
inc
mov
add
xlat
push
and
pop
and
sub
cmp
inc
cwtl
adc
es
imul
cmp
sub
cmp
mov
std
jbe
cltd
mov
test
pusha
leave
push
sub
jb
xor
out
arpl
inc
pop
data16
stc
sti
dec
in
mov
sub
xchg
mov
push
sbb
gs
les
fs
adc
ljmp
shlb
movsl
and
xlat
pop
enter
add
jmp
int
jbe
and
and
ret
xchg
or
pushf
jl
sarl
negl
dec
fucomip
outsl
loop
pop
test
or
nop
xchg
cmp
out
sbb
mov
insb
or
inc
cmc
sbb
ret
pop
adc
dec
loop
fcompl
stos
lds
mov
gs
int
loop
inc
cld
sub
sti
pop
cmc
lea
cmp
fs
dec
shl
adc
mov
push
jae
dec
and
enter
sub
pop
popa
mov
and
bound
hlt
dec
cli
mov
mov
sub
popf
fisttps
sub
jp
aad
das
ret
adc
push
fiaddl
sar
sbb
daa
outsl
xlat
pop
add
xor
cwtl
cmc
in
dec
inc
pusha
inc
xor
mov
jo
push
mov
cmp
sub
cmp
enter
insl
fsubr
dec
adc
lret
push
hlt
andb
popa
inc
and
test
mov
push
mov
jge
inc
sub
imul
popf
hlt
adc
aaa
sbb
mul
mov
adc
pop
mov
adc
movsl
push
or
mov
test
cmp
push
mov
mov
dec
call
addr16
mul
inc
jecxz
gs
mov
cld
iret
in
cltd
lea
insl
pop
in
or
cmp
xor
mov
dec
cmp
call
push
xor
adc
or
jbe
dec
sub
ss
shll
arpl
lock
leave
ret
pop
inc
cmp
push
mov
push
lea
inc
mov
mov
enter
jo
mov
incl
mov
mov
popa
xor
push
sub
mov
mov
adcl
movsl
mov
sarl
filds
es
jmp
sub
adc
lods
dec
hlt
ja
jns
sub
or
in
test
pop
ficompl
jmp
cmp
jp
ds
imul
lret
xchg
push
fmuls
inc
aam
dec
jg
fcoml
jmp
movl
aad
pand
and
xchg
scas
and
jo
mov
push
aam
xchg
sub
fimuls
inc
mov
cmc
insb
sub
shll
js
push
gs
aad
dec
inc
adc
dec
cmp
mov
mov
fcompl
rcl
sub
and
dec
adc
inc
outsl
movsb
add
push
jge
cmc
je
jae
ret
in
jnp
test
sub
aam
inc
stos
jge
cmpl
test
inc
lcall
loopne
mov
hlt
mov
dec
jmp
jo
cmp
push
or
repnz
push
sets
pop
pop
cmpsl
test
ds
in
cmpb
cmpsb
dec
nop
add
jle
xor
rcrl
lds
mov
pop
pop
cmp
outsl
pop
std
mov
mov
lret
cs
dec
call
inc
and
shll
arpl
sbb
push
mov
sti
sub
push
andb
mov
stc
adc
xchg
lods
pusha
or
in
pop
jge
ficoml
jg
shll
cmp
into
insb
push
xor
xor
mov
imul
clc
add
cmp
dec
pop
lret
xchg
mov
pop
push
push
and
cmp
ss
call
jg
inc
jmp
lahf
mov
cli
lds
xchg
mov
in
lods
xchg
mov
loop
aas
cmp
mov
adc
jo
out
lods
pushf
jns
sbb
push
push
popa
mov
xchg
sub
stos
or
in
jb
jns
sub
fmuls
in
sub
dec
fsubs
sbb
aaa
pushf
into
mov
cmpsl
ret
insb
mov
in
repnz
in
rorb
xor
mov
adc
stos
aad
and
pop
rorl
stos
out
dec
clc
aam
mov
and
pop
in
sti
jb
shll
gs
dec
push
inc
into
mov
lods
cmpsl
out
data16
adc
push
inc
bound
jbe
std
pushf
dec
sub
push
mov
inc
dec
inc
pushf
fidivrl
dec
stc
pusha
xor
inc
sub
fwait
mov
inc
lds
jmp
push
pop
sbb
into
loop
dec
cli
inc
and
clc
pop
pop
push
add
outsl
sub
enter
fadds
aas
popf
sub
js
addl
mov
adc
xchg
sub
outsl
jno
cmp
cmp
jnp
js
lock
out
cmp
testb
pop
repnz
pop
mov
mov
cmc
add
es
iret
and
scas
cmpb
or
jo
data16
jle
lcall
pop
mov
insl
inc
xchg
push
iret
inc
int3
xchg
into
iret
std
mov
scas
popa
dec
push
pop
inc
cltd
cmp
xchg
xor
repz
lods
in
pop
mov
pop
addr16
cmc
xor
cli
cld
pop
faddl
out
inc
out
int3
lods
dec
xchg
es
fsubrs
int
add
stos
std
std
adc
or
mov
sub
add
lcall
sbb
jnp
cs
arpl
pop
and
ret
sbb
mov
jp
sbb
sarl
not
pop
lock
enter
xchg
pop
fcomip
cld
lret
arpl
mov
ja
stos
sbb
dec
mov
negl
cwtl
mov
in
shll
xchg
mov
imul
jo
push
cmp
fimull
call
hlt
mov
mov
test
mov
mov
xchg
nop
negl
std
or
icebp
loope
sub
xlat
std
icebp
pushf
inc
or
mov
jb
mov
xor
push
cmpsb
in
jbe
loopne
push
mov
inc
push
mov
outsl
inc
sub
lods
iret
pushf
es
mov
repz
mov
rclb
xor
int3
pusha
cmp
ljmp
repz
out
je
sub
jb
das
mov
mov
fcmovnu
lds
insl
xchg
test
cmp
sub
cmp
sbb
mov
fs
idiv
fistpll
push
out
adc
mov
mov
hlt
pop
pop
mov
jnp
out
rolb
pop
push
mov
bound
lods
dec
in
push
scas
sbb
cmpsl
icebp
popf
loope
pop
push
sub
out
sub
in
mov
ud1
and
sbb
pop
mov
mov
into
mov
inc
js
xchg
iret
dec
or
push
arpl
icebp
jmp
rorb
int
fisubs
arpl
pop
xor
mov
je
xlat
aaa
xchg
adc
add
stc
jbe
call
out
aam
das
pop
sub
push
and
xor
lcall
in
daa
push
into
mov
imul
sarb
xchg
test
in
xchg
jb
mul
push
sbb
fcmovnb
movb
cmp
in
in
mov
mov
cwtl
loope
push
daa
loope
push
add
add
xor
and
xor
fcompl
scas
flds
inc
cmp
js
lahf
loopne
dec
push
addpd
add
test
add
push
cmpsb
push
fstpl
stos
adc
sbb
mov
mov
mov
mov
adc
jae
jp
iret
inc
test
lods
les
in
mov
frstor
call
popf
mov
jae
inc
cmc
and
pop
lock
in
pusha
icebp
xor
pop
mov
sbb
adc
scas
add
ja
or
lcall
and
mov
push
dec
scas
mov
jae
enterw
inc
fcoml
out
xchg
jno
fsts
push
inc
mov
pusha
push
imulb
or
pop
mov
rcrl
pop
imul
jno
sbb
mov
xchg
outsl
scas
imul
adc
mov
imul
fisttps
pop
shl
inc
jp
xchg
xchg
sub
add
xchg
inc
jae
or
rcr
jmp
dec
dec
into
push
inc
mov
in
aaa
inc
cmp
dec
jmp
pushf
fstl
icebp
xchg
idiv
inc
push
fstps
and
mov
fnstenv
pop
inc
aas
sbbl
popf
adc
pop
icebp
mov
stc
push
or
loopne
ficomps
and
mov
loopne
add
idivl
sub
jl
sbb
cwtl
add
and
push
mov
jne
adc
movsl
cs
xchg
cmp
lcall
or
push
out
shll
sahf
jg
outsb
sbb
sub
add
out
add
cltd
or
add
or
jecxz
sahf
popa
sub
arpl
mov
xchg
cmp
les
psrad
call
scas
cmp
sti
fidivrl
in
jp
cmp
xchg
in
cmovs
in
pop
cmp
pop
sbb
mov
sub
ret
fidivrs
inc
sbb
inc
movsl
mov
mov
or
mulb
sub
cli
mov
les
daa
leave
mov
pusha
xor
sbb
jecxz
mov
inc
fstpl
cmp
push
addl
mov
movsl
jo
or
ss
enter
mov
cltd
jmp
pop
mov
mov
push
mov
mov
sbbl
sbb
cmp
adcl
lret
lock
data16
mov
filds
inc
push
push
pop
loopne
or
lods
shll
adc
jmp
int
or
jg
or
dec
dec
push
push
mov
imul
addl
lds
insl
inc
les
into
daa
shll
adc
xor
scas
mov
popa
stos
jmp
dec
in
mov
or
mov
bound
or
or
mov
nop
sbbb
xor
pop
jg
insl
cmc
sbbb
inc
fucomip
jmp
cmp
adcb
jle
jo
pop
pop
leave
notl
and
cmp
xor
jmp
pop
rolb
lods
test
xchg
sbb
jle
int3
push
std
xchg
jo
test
outsl
insb
fcmovne
sbb
add
add
ret
movsl
sti
inc
fwait
push
pop
fwait
outsb
or
sub
jmp
cli
out
int
out
push
rcrl
xchg
int
inc
lock
ss
roll
mov
push
test
push
stos
pextrw
or
jl
jecxz
mov
adc
dec
pop
fildll
push
jo
dec
inc
push
cmpsb
dec
ret
inc
push
testb
test
sub
out
das
mov
fdiv
inc
mov
fadds
cwtl
xchg
test
idivl
push
sbb
loop
cmpb
gs
add
lret
xor
stos
xor
push
imul
pop
add
into
add
lret
rclb
xor
sbb
sub
pop
mov
stos
lahf
sub
pop
xor
cmp
dec
call
rol
ficoml
sub
aam
lcall
xlat
test
xchg
mov
jp
mov
push
out
lds
adc
xor
push
leave
out
mov
mov
sub
xchg
and
rorb
andl
std
fwait
sub
jl
or
jecxz
fnstenv
loopne
jo
mov
inc
por
arpl
das
mov
fwait
push
bnd
sbb
imul
aaa
addr16
sub
push
mov
or
int3
inc
cwtl
daa
cmpsl
in
loop
or
jbe
adc
test
or
test
push
cmp
inc
xchg
or
jno
adc
iret
or
xlat
sbb
lahf
pop
pushf
xchg
sub
cmp
jl
icebp
movsl
leave
jmp
mov
aam
or
nop
mov
dec
push
loop
js
push
sbb
les
xchg
lods
jl
mov
lret
sub
fsts
popa
shll
sub
pop
in
push
xor
stos
shrb
mov
loop
in
push
pop
sbb
decl
jne
dec
jns
or
addr16
mov
mov
mov
jae
addl
jmp
xchg
faddl
xlat
insb
jae
dec
mov
in
push
xchg
cmp
adc
inc
ret
pushf
sbb
xor
push
pop
test
dec
cmp
fsubl
jecxz
push
lods
sti
mov
mov
ljmp
fisubs
rolb
cmp
mov
lods
mov
add
cli
dec
mov
inc
lds
mov
push
scas
push
mov
ud1
mov
pop
cmp
lock
xchg
jmp
cld
in
int
inc
mov
mov
nop
into
mov
iret
testb
pop
icebp
aad
sbb
jnp
fists
adc
idivb
xor
push
js
movsb
dec
mov
int3
jo
xor
cmp
imul
popa
lock
mov
jle
movsb
xchg
call
orb
arpl
mov
xchg
jg
jbe
popa
pushf
mov
jo
push
lods
adc
dec
mov
cmp
push
fstpl
repz
test
imul
add
sti
push
push
jno
sbb
in
test
jno
in
ss
insb
jp
mov
adc
mov
xchg
loopne
popa
std
test
movsl
inc
es
jno
imul
add
inc
cmpsb
mov
pop
rorb
es
lock
popa
cli
lock
mov
and
enter
pop
adc
jb
xchg
xchg
adc
fwait
add
aad
pop
cmp
cmp
iret
fs
push
or
cwtl
les
inc
call
add
or
mov
loopne,pn
xorl
mov
ja
inc
je
sbb
or
inc
ficoms
cmp
fwait
cmp
or
pop
jg
mov
fisttps
les
xchg
stos
ret
xor
fstpl
lock
call
xor
movsl
or
imul
cmp
les
faddp
sbb
lea
mov
mov
pop
int
sbb
add
test
sub
ret
dec
inc
cmp
lret
push
ret
sub
sbb
and
dec
addr16
jne
cltd
jo
decl
out
or
inc
test
and
popf
jo
rcll
jnp
pop
add
dec
dec
ja
sbb
shll
mov
aaa
xchg
mov
in
scas
inc
dec
in
lock
daa
movl
push
jne
push
mov
lods
lods
or
rolb
jmp
sbb
les
cwtl
and
mov
jns
in
arpl
cmc
lret
shll
inc
mov
jl
sbb
das
inc
xchg
push
insb
sub
dec
add
push
mov
popa
mov
lret
add
push
pop
dec
mov
xlat
pop
xchg
aam
mov
pop
gs
out
fs
mov
out
adc
in
pop
mov
aad
xbegin
hlt
mov
push
push
repnz
mov
mov
and
or
pop
or
test
lods
lret
inc
inc
add
add
fnstenv
or
cmpl
push
enter
fidivs
stos
inc
mov
popf
fwait
mov
hlt
or
inc
shrl
decb
rol
sub
xor
ret
mov
mov
add
ds
mov
jnp
pop
adc
lahf
and
repz
loopne
dec
xlat
mov
ss
scas
out
outsl
pop
adc
dec
xor
jge
inc
filds
or
inc
lods
in
sbb
xchg
cld
xchg
ret
jae
push
xor
mov
add
mov
sub
mov
leave
xchg
mov
into
sub
out
xchg
test
push
imul
pop
add
cmc
aas
lahf
jp
cmpsl
cmp
xchg
out
push
mov
popf
lock
shll
jbe
cld
xchg
jmp
adc
push
xchg
sbb
and
incb
mov
pop
sbb
cmpsl
push
mov
cmp
mov
sarl
and
push
mov
testl
add
inc
lcall
push
xchg
pop
push
fdiv
idivb
xchg
test
fsubrl
popl
cmp
aas
mov
add
push
xlat
or
or
mov
cli
push
dec
ret
jmp
jnp
bnd
jecxz
sahf
jg
in
stos
jne
repnz
lret
jbe
inc
add
cmp
xor
imul
rcrl
cld
not
mov
and
mov
fs
fsub
cmpsb
cwtl
aaa
mov
rorb
push
lcall
adc
push
dec
mov
xor
enter
adc
mov
cwtl
loopne
push
insl
icebp
pop
push
in
popa
ret
pop
jae
popa
cmp
xor
lods
mov
les
cwtl
sub
ret
or
cmp
aad
idivl
jbe
mov
dec
or
scas
and
pop
loop,pn
dec
es
xchg
jmp
sub
dec
hlt
mov
sahf
lea
jb
push
ret
ret
emms
cmp
ds
aam
xchg
jmp
jecxz
rolb
mov
lcall
or
mov
in
jecxz
les
std
sub
out
out
dec
mov
jbe
xorb
test
xchg
out
shr
pop
add
cmp
shll
sbb
sub
xor
js
daa
clc
imulb
mov
lock
jecxz
cmpsl
mov
hlt
cld
loop
adc
ljmp
jns
or
ret
mov
pop
ret
std
inc
std
mov
mov
or
in
push
subb
xchg
push
ret
jle
lahf
or
mov
or
clc
ja
xchg
or
std
add
xlat
cld
xor
pushf
cld
push
adc
jle
xor
mov
push
push
in
inc
mov
test
xchg
and
add
or
int
stos
ret
imul
sbb
pop
mov
or
call
rorl
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
mov
mov
addl
addl
mov
lods
pop
sbb
pushf
jno
sbb
push
mov
sar
pop
pop
sub
xchg
out
add
rorl
mov
jb
loopne
movsb
movsb
pop
push
xor
jno
mov
leave
scas
inc
xchg
jnp
lahf
sbb
fidivl
vmread
xorl
push
push
ret
popf
and
xchg
mov
inc
imul
orb
fidivs
mov
cmp
add
fcoml
inc
fs
mov
std
jno
xor
xor
push
aaa
or
lods
insl
andl
ss
push
add
and
jb
sti
cmp
ljmp
xchg
dec
sbb
mov
xor
mov
push
movsb
inc
pop
pop
and
ss
dec
outsb
aam
mov
ljmp
loope
mov
adc
out
fbld
and
mov
mov
rorb
or
outsb
mov
cltd
or
adc
in
mov
and
mulb
cmp
pop
mov
or
test
inc
jecxz
pop
add
out
js
xor
leave
inc
pop
mov
pop
inc
jge
or
push
ds
insl
je
jge
outsb
lods
int3
xchg
xor
cltd
test
mov
push
pop
mov
stos
stos
sub
cmpsw
rcrb
pop
rep
xchg
divl
adc
inc
popa
xchg
mov
sti
cmp
daa
ljmp
adc
mov
push
and
jb
clc
cltd
es
xor
ljmp
pop
je
inc
adc
push
and
jl
lcall
sbb
fcmovb
int3
cmp
jae
cmc
inc
xor
dec
scas
lret
stos
and
jg
std
pop
lods
outsl
mov
andb
in
loopne
push
pusha
push
adc
jbe
les
sbb
or
sbbb
addr16
adc
imul
pop
xorl
mov
mov
lock
addr16
sub
jno
jno
pushl
dec
out
aas
dec
call
lret
cli
std
cmp
push
inc
xchg
hlt
mov
jecxz
or
enter
js
out
mov
push
xchg
aam
iret
sub
outsl
add
adc
push
out
push
pop
inc
out
sbb
shrb
lret
shll
sbb
lret
shrb
inc
cmp
ja
std
push
push
dec
mov
lea
pop
jo
cmp
lret
mov
enter
xchg
shll
orl
push
aam
push
scas
cwtl
movsl
movsl
imul
xchg
cmp
fnstenv
mov
jb
cltd
out
gs
xor
lcall
add
fisttpl
lret
adc
dec
cmp
mov
ja
or
pop
and
mov
jp
add
xchg
lods
mov
mov
les
into
or
outsb
jp
rorb
xor
xor
lock
outsb
push
or
push
imul
les
dec
fildll
jo
test
subl
aam
pusha
push
into
push
push
cld
movsl
sub
std
dec
ja
enter
jle
std
rorl
ljmp
cld
sbb
insl
mov
sahf
loopne
jb
sub
add
adc
mov
arpl
adc
pop
mov
daa
add
popa
mov
push
push
adc
pop
cmp
or
mov
fildll
repnz
jle
jecxz
push
aam
insb
rol
movsl
jbe
add
inc
cwtl
add
orl
cwtl
lahf
cli
rcll
sub
pop
stos
dec
scas
je
and
xor
movsl
int
cmpsb
sub
jl
jb
pop
fadds
call
aas
xchg
inc
enter
cli
lret
roll
ja
cli
aad
ds
jp
scas
push
jns
mov
xchg
ret
push
imul
dec
inc
fiadds
sbb
outsb
out
movsl
test
push
add
pop
ret
scas
dec
inc
mov
add
repz
scas
stc
push
and
scas
sbb
xor
cld
cmp
jge
arpl
or
mov
stos
shlb
cmp
data16
sbb
jl
jl
mulb
adc
imul
stos
push
imul
test
pop
sar
movsb
rorl
xor
ss
adc
mov
xchg
xchg
add
aaa
inc
xchg
sarb
mov
out
pop
stos
sub
aas
jg
push
aad
rcr
mov
xchg
arpl
xchg
jae
pushf
andl
jae
sbb
jmp
arpl
xor
lock
aaa
mov
pop
out
mov
and
scas
in
pop
imul
not
sbb
mov
pmaddwd
out
popa
sub
sub
insb
mov
mov
inc
aam
or
add
adc
add
mov
dec
mov
clc
cmpsl
adc
xor
aad
jecxz
and
or
fcomp
rol
mov
js
test
dec
loop
xchg
loop
push
ja
mov
dec
push
xlat
jecxz
or
lock
enter
or
incl
daa
add
mov
rolb
imul
mov
imul
mov
xchg
lods
outsl
or
ja
mov
xor
lcall
lods
lahf
scas
mov
mov
in
pop
pop
sub
xchg
lahf
cmp
and
mov
mov
lahf
add
jp
mov
adc
mov
xchg
ljmp
je
jle
or
jns
dec
and
adc
adc
stc
das
inc
rclb
and
xor
jno
dec
add
outsb
xor
mull
add
jp
or
xor
xor
mov
pop
into
mov
pop
rcrl
jp
aaa
add
outsl
jmp
push
leave
pop
jle
shll
popl
fisubl
addl
jno
dec
push
test
test
dec
cld
dec
scas
dec
ljmp
in
mov
xchg
dec
add
push
mov
xor
pop
sub
jg
adc
inc
mov
in
insl
es
pop
and
sub
jns
sbb
mov
daa
loop
es
inc
popa
test
ljmp
pop
cmp
jbe
movsl
cmp
lret
cmp
adc
jmp
and
pop
add
repnz
lret
inc
hlt
inc
push
cli
lods
call
leave
fs
xor
mov
jo
add
inc
lods
bound
jb
adc
sub
xchg
pusha
cmp
cmp
sbbb
mov
leave
in
clc
inc
mov
es
xor
ss
or
cmc
adc
in
js
mov
out
fcmovne
rcrl
push
data16
ret
mov
xor
loope
iret
adc
movsb
add
xor
mov
rorl
ds
in
cmp
pop
ficomps
pop
nop
mov
cmp
mov
popf
arpl
enter
sbb
dec
mov
subl
popa
pop
adc
outsb
jae
lds
in
or
xchg
jl
and
popa
sub
fxch
aam
fwait
int3
mov
mov
xor
mov
jb
out
xchg
jmp
dec
xor
xlat
mov
call
mov
rclb
stc
inc
ss
into
bnd
mov
xor
and
adcb
push
lret
into
sbb
subb
cmp
out
cltd
mov
cltd
dec
icebp
les
cmc
lods
cmp
jnp
push
sub
lret
push
mov
sbb
jno
das
xor
inc
test
fldt
sbb
inc
test
mov
add
jo
into
pop
push
adc
jecxz
sbb
xor
xchg
gs
inc
cmp
das
ret
sbb
pop
sahf
jns
jae
fistl
test
push
pop
adc
out
test
inc
pushf
or
pushf
sarl
dec
lret
lcall
sbb
push
ret
jge
ss
outsb
xchg
lret
cli
push
lods
rolb
pop
pop
subl
mov
cmpb
push
jne
or
rcrl
int3
add
into
or
sbb
out
dec
stos
mov
lcall
jl
ljmpw
cltd
sub
and
in
mov
cli
sub
mov
jmp
lods
iret
or
push
push
jge
icebp
scas
add
add
aas
pop
cs
add
dec
fcompl
aas
mov
insl
push
jl
fwait
xor
lret
jne
movsb
out
and
xor
push
xchg
test
pop
ret
rcl
fsubrl
shlb
jp
xor
lret
lret
mov
je
add
repz
les
add
adc
xchg
aas
popf
stos
mov
call
sbb
int
sbb
xchg
pop
xchg
cmp
or
xor
ret
mov
fiaddl
add
outsb
mov
dec
cmp
pop
cmp
mov
push
sub
rol
dec
dec
repz
adc
adc
or
mov
sti
mov
sub
imul
xchg
mov
push
test
into
or
jmp
or
ds
pop
sub
inc
sub
dec
sub
jnp
mov
xor
push
iret
loopne
ds
mov
adc
fldl2e
xchg
mov
addr16
cmpsb
push
lods
pmaxub
enter
push
mov
vcvtss2si
pop
popf
dec
inc
in
mov
mov
je
fldl
or
mov
push
xchg
testb
scas
dec
cmpsl
pop
inc
popf
cmp
bound
fnsave
cmp
cltd
sub
decl
mov
ljmp
insb
icebp
fisttps
cld
into
aaa
mov
cmp
dec
sbb
and
jle
add
and
sbb
mov
loop
mov
pop
nop
and
sbb
hlt
in
cmp
sub
mov
cmp
jb
and
xchg
test
sub
insb
dec
inc
and
mov
push
jmp
jae
adc
movsl
sbb
xchg
jecxz
sti
fwait
sbb
cmp
inc
aam
inc
jne
xchg
testb
push
push
push
xchg
sub
adc
in
stos
jecxz
out
into
fs
sbb
sub
cld
and
idivl
sub
lock
cltd
lret
popl
mov
mov
xchg
adc
shll
mov
mov
jo
or
sbb
xor
les
or
jne
lock
adc
xchg
inc
xor
jb
add
push
pop
repnz
xchg
pop
mov
imul
inc
pop
movsl
fidivs
je
push
add
es
push
mov
sbb
jae
sbb
sbb
xor
adc
sti
rclb
repz
dec
fdiv
inc
cmc
sbb
and
jl
cmp
sub
aaa
aad
pop
aaa
inc
shll
popa
aad
lods
fmull
sbb
pop
mov
pop
add
cmc
adc
jbe
std
sub
rol
or
es
xchg
pop
test
mov
out
cmp
push
lahf
ret
popa
repnz
cmpsl
inc
inc
lock
rcrl
iret
adc
add
cwtl
in
mov
mov
jo
sarb
stos
or
or
lsl
or
mov
mov
push
ss
rolb
lods
inc
sti
nop
pop
jne
jne
and
sbb
push
ret
inc
ja
stc
inc
inc
xor
mov
std
jbe
insl
insb
sbb
xor
outsb
mul
call
in
leave
dec
sbb
adc
inc
cmp
sbb
cld
in
dec
lahf
in
pop
pop
imul
bound
mov
lahf
loopne
aaa
push
mov
jns
pop
aas
fistpll
xchg
and
shrb
in
aam
mov
push
xor
cs
ds
xor
mull
call
and
lods
faddl
jl
or
in
fnstcw
dec
iret
fnstcw
inc
inc
cmpsb
in
es
popf
pushf
cmc
jo
ljmp
jne
push
imul
mov
mov
xlat
mov
mov
mov
es
sbb
jmp
lea
jecxz
outsb
mov
mov
out
or
fmuls
cmpsl
lahf
and
sbb
leave
pop
jmp
sahf
ret
xchg
xchg
test
cli
fstpt
push
mov
popf
aad
mov
je
mov
stc
mov
fsubrl
xchg
daa
xor
cmp
pop
xchg
cs
pop
fists
out
jno
in
push
enter
xor
lods
movsb
pinsrw
mov
and
mov
stos
out
xchg
mov
aam
pushf
mov
sarl
mov
and
add
cmp
sbb
xchg
push
insb
stos
mov
lcall
adc
sarl
pop
pop
xor
inc
jg
jecxz
jg
adc
dec
jle
dec
cmp
mov
cmp
jp
inc
or
lods
repnz
insl
insb
and
pop
jae
dec
mov
push
cld
xor
dec
pop
or
mov
cld
push
sbb
cmpsb
dec
jbe
cmp
imul
shlb
movsl
xor
sub
mov
push
sti
adc
lods
stc
ret
mov
sahf
or
jbe
jg
subl
lods
ss
shrl
dec
clc
cs
rclb
ror
lods
mov
add
mov
fwait
cmp
mov
xor
stos
xlat
int
xchg
shlb
into
pusha
pop
lods
push
sub
pop
jl
int3
xchg
pop
ljmp
mov
stc
push
adc
rcl
cli
test
pop
dec
cmpsb
and
insb
jbe
inc
pop
ss
fnstcw
fcoms
call
pop
push
cltd
leave
adc
movsw
insl
jno
and
sub
js
mov
add
test
mov
pop
add
sbb
mov
sti
cmp
mov
lds
fwait
imul
aaa
mov
xchg
jbe
ret
out
adc
mov
loopne
xchg
out
enter
int3
ja
push
or
fidivrs
cmpsb
cli
ja
adc
in
outsb
lds
mov
and
int
cwtl
sub
sbb
push
cmpb
mov
loope
fisubs
mov
addr16
dec
mov
add
jbe
movsb
or
push
leave
or
arpl
adc
call
movsl
pop
je
sbb
adc
fs
jmp
fwait
out
and
mov
mov
outsl
outsl
ljmp
call
adc
jns
das
vcmppd
add
insl
jnp
pop
ret
stos
adc
cmc
pop
mov
into
movsl
adc
mov
mov
dec
nop
fdivrl
push
xchg
gs
xchg
jnp
in
testl
les
fsubl
sbb
xchg
mov
addr16
in
adc
or
or
test
shll
loop
jecxz
lret
jp
inc
ss
test
and
xor
cmp
mov
mov
adc
xor
mov
inc
mov
mov
into
dec
sbb
shll
jecxz
test
jnp
xlat
mov
loope
rclb
mov
dec
test
mov
inc
xor
mov
jge
cmp
dec
xchg
loope
lds
scas
lea
idivl
fwait
and
or
jbe
sub
pop
addb
fiadds
ret
mov
arpl
sti
pushf
mov
inc
mov
dec
xor
out
mov
outsb
icebp
popf
movsl
mov
push
aad
xlat
jae
mov
call
push
xchg
pop
arpl
stos
mov
and
xchg
test
sahf
push
lcall
jl
data16
xor
lods
jl
mov
imul
lods
popaw
push
mov
es
cmp
mov
or
into
out
mov
daa
pop
jmp
pop
hlt
xor
mov
das
scas
je
jae
in
mov
fistpl
jg
dec
mov
and
mov
test
ds
in
je
call
jbe
mov
lahf
push
pop
cmp
sti
call
mov
jl
fstps
xor
insl
outsb
sub
bound
push
add
out
mov
jl
imul
pop
pop
scas
cmp
xchg
jb
jmp
incl
sub
mov
out
xchg
jo
inc
ja
or
xlat
fwait
mov
stos
push
add
sahf
jo
movsb
cli
push
lret
pop
add
and
movsl
sub
lcall
sbb
cs
hlt
cmc
das
enter
cld
jo
jb
es
push
push
sub
push
push
xchg
repz
mov
int
xchg
pop
add
inc
cmpsl
loopne
dec
rolb
xor
es
xchg
dec
imul
popf
mov
stos
and
xchg
mov
dec
hlt
incb
jg
or
dec
outsl
jmp
mov
xor
xor
sbb
sbb
std
push
adcb
push
cltd
orb
mov
sbb
lcall
jns
dec
push
inc
cmp
mov
clc
fs
cwtl
mov
jnp
push
or
iret
mov
lock
test
sbb
cltd
int
sub
sub
mov
xchg
xchg
out
ret
jl
loope
cmpl
mov
mov
cmpsl
sti
dec
mov
insb
lds
push
ja
pop
mov
inc
lods
xchg
call
jmp
cltd
inc
test
push
jmp
xchg
or
and
cmp
orl
add
loopne
sarb
ret
cli
insl
or
sbb
adc
jne
addr16
out
push
push
shrb
cmpsl
loop
mov
sbbl
sub
or
lock
fmull
lods
ja
xor
pop
out
test
xchg
pop
and
aam
xchg
and
fimull
and
mov
inc
sub
fdivr
xchg
fdivrp
ljmp
repz
adc
pop
cs
pop
out
dec
neg
dec
sub
mov
scas
lret
pushf
mov
cld
mov
sbb
push
push
push
mov
mov
or
pop
into
lcall
jle
outsl
mov
or
pop
jl
and
mov
rcll
pusha
cmpsl
xor
mov
ret
scas
mov
shll
mov
cld
shrl
dec
inc
cmp
aam
out
cmpb
shrb
shrb
loop
cwtl
cli
mov
idivb
adc
lods
or
insb
or
adc
call
push
sub
jae
xorb
aaa
jne
xchg
ret
imul
mov
enter
roll
adc
out
js
xor
stos
lea
ja
jge
pop
inc
xchg
sub
inc
rcl
xchg
shll
sbb
adc
leave
jmp
or
adc
mov
xchg
push
lcall
fs
fdivrl
mov
cmp
repz
mov
outsl
xor
shrl
jmp
dec
stos
xchg
mov
adc
mov
mov
add
add
outsl
fildl
imul
sub
cli
xor
cmp
cld
sub
xor
sbb
and
cld
jnp
mov
add
mov
js
sbb
xchg
add
bound
lcall
mov
pop
sbb
push
inc
xchg
pushf
pop
sbb
mov
jecxz
lds
mov
lahf
jl
mov
mov
add
jae
push
add
les
pop
adc
aam
mov
test
js
pop
adc
push
outsl
dec
stos
call
sub
fnstsw
xor
push
pop
add
in
call
pop
pop
inc
dec
inc
movsl
cmpsl
dec
jle
fnstcw
or
imulb
and
jmp
xchg
mov
mov
ss
popf
lret
test
dec
and
ljmp
sbb
jecxz
push
push
add
lret
mov
test
movsb
pop
cmp
push
fldenv
sub
fcom
je
pop
mov
repnz
dec
xor
call
in
push
jmp
and
insl
sbb
icebp
or
popf
xor
sbb
test
aad
iret
bound
xchg
out
and
fnstcw
in
pop
adc
jb
cmpsb
mov
in
repz
shl
jae
stos
inc
mov
xchg
addr16
popa
imul
add
cwtl
push
cmpb
outsb
dec
hlt
cltd
lret
ret
push
pop
bound
mov
pushf
lods
push
mov
pop
in
test
es
add
fmuls
pop
ja
inc
mov
cmovge
mov
mull
sbb
out
adc
adc
xor
fnstenv
dec
aad
loopne
inc
dec
or
out
loop
repz
icebp
lea
inc
jns
inc
dec
add
mov
add
xchg
push
sbb
lds
cmp
cmovge
dec
in
xchg
fistl
inc
cmp
pop
out
xor
aad
sub
or
adc
mov
jp
push
call
jmp
movsbl
push
or
mov
pop
sbb
popa
clc
movsl
mov
cmpsl
in
into
ja
inc
and
jb
fstp
imul
pop
push
pop
push
push
test
bound
fsincos
sub
mov
ret
std
lret
add
dec
adc
jecxz
fs
inc
lods
sbbl
pop
icebp
data16
cwtl
call
loop
mov
rcr
mov
arpl
pop
into
jg
jnp
test
cs
sbb
cmpb
ret
sub
sbb
loope
fcmove
adc
std
arpl
push
sub
inc
ret
in
imull
movsb
das
stc
daa
dec
jo
loop
or
inc
hlt
pop
cmp
enter
sub
sti
cmp
scas
out
outsb
pop
jge
fs
jecxz
test
inc
push
test
pop
mov
xchg
xor
imul
lret
pushf
pop
sub
and
adc
jne
ret
cmpsl
mov
xchg
leave
enter
mov
das
pop
pop
sbb
dec
shl
inc
lret
lcall
leave
repz
cld
js
push
jo
loope
aaa
lcall
ja
push
bound
jp
cmc
xorb
aad
cmpsb
xor
xlat
jecxz
fsubl
mov
movsl
jg
adc
mov
sub
mov
pop
dec
std
test
stos
jb
add
or
inc
add
ret
mov
fmuls
inc
cmp
push
lahf
sbb
mov
sbb
popa
xchg
jo
cmp
add
out
xchg
lret
ds
fistpl
pop
call
lret
adc
mov
fmull
movsb
cmp
out
lods
cmp
xchg
leave
mov
fs
xor
int3
stc
fcomip
test
jl
std
jnp
cs
push
cmp
adc
cmp
jb
cli
mov
fimuls
jbe
cltd
xchg
push
mov
cmpsb
pop
jne
mov
cmp
or
mov
jecxz
xor
ffreep
pop
push
lcall
and
xor
lret
adc
cwtl
fildll
or
arpl
shll
inc
dec
dec
out
push
stos
jne
mov
les
testb
into
pop
std
jl
add
popf
lock
mov
xchg
adc
cli
jb
faddl
and
jb
fxch
jmp
mov
icebp
push
leave
xor
das
shrl
xchg
add
addr16
mov
test
addr16
pusha
cmc
cs
ljmp
xchg
mov
push
insl
push
dec
xor
mov
xchg
pop
or
mov
repz
sbb
sbb
movsl
push
mov
or
pop
ljmp
stc
and
xchg
jge
ja
push
pop
mov
pop
xchg
popf
movsb
mov
mov
push
pop
cmpsl
dec
mov
mov
pop
cltd
fnsave
inc
jb
mov
dec
scas
add
shrb
loopne
scas
rclb
jbe
add
xor
add
rcrb
test
pop
fisttpl
mov
lea
das
add
inc
and
fs
jo
fsubrs
add
inc
mov
and
xchg
cmpsl
xorl
sub
outsl
gs
push
in
mov
jp
hlt
roll
into
leave
lock
in
lahf
mov
outsl
adc
pop
sub
imul
stos
pop
ret
push
jb
push
push
jae
leave
pop
sub
or
mov
mov
pop
lods
dec
and
mov
inc
add
fistpll
jg
insl
fidivs
inc
mov
in
repz
mov
push
lock
movsl
icebp
aas
and
jge
xchg
fbld
int3
mov
xor
rcr
js
or
adc
lcall
rclb
outsl
fs
les
ja
push
adcl
cmp
aas
push
xchg
adc
shlb
stc
int3
lds
mov
aad
sub
mov
out
int
push
mov
push
mov
in
ficoml
fdiv
aas
mov
and
jne
sahf
mov
push
lahf
sbb
loop
imul
lea
jl
mov
shl
call
ss
xor
bound
push
mov
pop
out
jbe
popa
xor
dec
or
cmp
add
add
popf
outsl
out
outsb
cli
push
add
cltd
push
iret
add
jb
out
int
loop
inc
xchg
push
xor
loopne
cmpsl
pop
cmp
outsb
pop
les
sub
loope
mov
add
mov
rcrl
loopne
sub
std
mov
fcomi
loopne
sub
shlb
shlb
sub
inc
xchg
ret
pop
sub
mov
stc
popa
push
xor
aas
fistl
sbb
mov
hlt
adc
mov
mov
test
xorb
clc
xor
xchg
ljmp
insl
sbb
outsb
fs
mov
sbb
inc
mov
inc
add
scas
push
xchg
icebp
lock
dec
adc
rcr
outsb
adc
pop
rorl
xlat
aas
pop
pop
push
or
mov
adc
xchg
hlt
mov
cmc
mov
out
xor
mov
or
stc
push
fistps
aaa
add
fsubrs
lock
in
jno
adc
lods
add
pusha
aam
je
aaa
loope
loopne
xchg
pop
jecxz
push
into
lock
dec
shr
pop
out
aas
pop
xor
aaa
test
dec
rolb
dec
cmc
nop
cmp
add
or
jo
pop
test
xchg
das
pop
enter
cmpsl
jns
pop
scas
add
cmp
xchg
pushl
cmp
sbb
into
cmp
popa
xlat
xchg
imul
shlb
orb
jecxz
inc
jp
cmpsl
fcomp
sbb
adc
xabort
cmp
add
or
jbe
add
pusha
movsb
inc
sub
cmp
add
outsl
mov
lret
mov
fwait
shrl
inc
js
and
push
in
nop
movsb
imul
mov
mov
sti
imul
lahf
outsl
jo
push
push
popa
and
pop
out
rol
jne
mov
sub
icebp
lods
jg
out
mov
jge
mov
lret
lret
pop
vpunpckhdq
push
or
mov
add
pop
rorw
dec
mov
push
xor
lcall
dec
sbb
and
mov
jb
lock
fisubs
jge
and
mov
jge
shl
aaa
mov
push
sbb
aam
and
jae
and
jo
addr16
mov
stos
cmp
mov
push
or
sub
in
push
stos
sbb
sbb
pop
push
lock
lret
sbb
push
out
test
and
insl
scas
dec
inc
es
sti
pop
lret
dec
xor
mov
jae
cmpsl
jnp
in
dec
jns
aas
nop
xchg
stos
lahf
jnp
popa
mov
jno
bound
addr16
adc
test
ret
imul
cli
test
je
pop
gs
jns
mov
es
jb
jg
sub
out
enter
jb
jne
push
jno
pop
jecxz
jl
pop
lahf
ljmp
cmp
outsl
fcompl
jmp
or
lods
jne
jno
or
push
mov
mov
arpl
jno
test
inc
jmp
jo
bnd
lods
in
mov
jo
andl
int3
pop
data16
cmp
sub
inc
cmp
insl
mov
jmp
or
leave
mov
sub
mov
push
lret
pop
pop
sub
or
xor
add
or
add
xor
jecxz
add
push
jmp
mov
mov
xchg
dec
out
xchg
insb
xlat
push
jl
sbb
stos
dec
pop
push
sbb
pop
sahf
mov
dec
rcrl
jne
fisubrl
and
fwait
incb
xchg
outsb
or
xchg
cmp
rclb
xor
pop
push
es
int
push
pop
xchg
ret
mov
pop
setno
jl
mov
test
dec
in
popa
jecxz
cmovbe
sarb
lods
insl
aaa
lods
mov
roll
dec
cltd
pop
sub
push
xlat
cmp
xor
mov
inc
shlb
or
pop
push
aam
sbb
lcall
sub
push
std
mov
jbe
pop
shrb
adc
sbb
jmp
lock
scas
jbe
bound
pop
jg
lock
xchg
cmp
xchg
lods
or
test
jecxz
fcmovb
lea
dec
iret
pop
pusha
mov
mov
scas
stos
aam
daa
and
data16
adcb
cltd
lret
in
inc
cwtl
adc
add
mov
sbb
pop
out
inc
jbe
sbb
outsb
adc
sbb
lods
jnp
jg
mov
push
sub
hlt
pop
scas
je
pop
cltd
pop
and
pop
out
cmpsl
jbe
push
mov
push
mov
lods
or
scas
xor
fistps
cmp
dec
push
enter
mov
and
mov
loope
mov
insb
mov
pop
fs
pop
fldl
jne
xor
mov
push
and
les
xor
or
mov
cmpsb
loopne
inc
push
dec
cmp
popa
or
add
movsl
imul
jge
cmp
xchg
inc
xchg
addb
data16
sbb
xor
ror
cmpsl
mov
mov
push
mov
lods
inc
shll
dec
decl
data16
mov
adc
mov
aad
sahf
das
call
hlt
lahf
popf
movb
pop
adc
add
add
add
fldl
push
sub
sbb
sti
dec
out
faddl
lahf
add
jmp
lret
aad
push
jge
mov
xor
mov
mul
and
lcall
test
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
enter
mov
lea
dec
mov
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
