push
mov
sub
andl
push
mov
movl
push
movl
push
call
adcl
test
movl
je
orl
xor
movl
jmp
subl
push
push
xor
subl
inc
subl
push
sbbl
push
xorl
call
test
movl
je
incl
xor
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
jne
sbbl
push
xorl
push
orl
call
andl
test
movl
jne
push
push
call
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
jne
push
subl
push
adcl
push
orl
call
decl
test
movl
jne
push
orl
push
call
subl
test
jne
addl
push
adcl
push
call
sbbl
test
jne
orl
push
push
orl
call
test
movl
jne
movl
push
push
push
call
test
jne
push
push
orl
push
movl
call
test
jne
sbbl
push
orl
push
call
test
jne
push
andl
push
subl
call
xorl
test
jne
push
subl
push
adcl
call
xorl
test
movl
jne
addl
push
orl
push
andl
push
call
adcl
test
jne
orl
push
push
push
call
test
movl
jne
push
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
call
test
movl
jne
adcl
push
push
push
movl
call
test
movl
jne
adcl
push
push
sbbl
push
call
adcl
test
movl
jne
xorl
push
addl
push
orl
call
test
movl
jne
decl
push
andl
push
orl
call
test
jne
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
push
xorl
call
addl
test
movl
jne
push
orl
push
addl
push
andl
call
test
jne
adcl
push
orl
push
subl
call
test
jne
orl
push
andl
push
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
je
addl
xor
jmp
movl
mov
mov
adc
mov
inc
mov
movl
lea
xor
mov
lea
dec
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
adcl
mov
sbb
mov
xor
mov
mov
adc
mov
add
movl
mov
movl
mov
cmp
movl
jne
mov
mov
sbb
mov
xor
mov
mov
xor
sub
add
sbbl
mov
xor
mov
xor
add
andl
mov
xor
mov
mov
mov
mov
mov
mov
sbb
mov
mov
add
mov
mov
mov
not
movl
movzbl
add
mov
mov
orl
xor
orl
add
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
xor
andl
lea
orl
push
mov
and
mov
subl
xor
sbbl
lea
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbbl
pushl
andl
call
sbb
mov
mov
xor
lea
add
mov
mov
xor
xor
subl
add
mov
subl
xor
lea
mov
movl
cmp
jbe
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
mov
or
mov
movzbl
sbb
mov
mov
sub
xor
movl
mov
mov
movl
cmp
jne
decl
lea
adcl
mov
lea
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
test
movl
je
sub
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jb
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
cltd
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
sbb
mov
add
adc
xor
andl
xor
mov
sub
mov
mov
dec
mov
mov
movl
xor
mov
mov
and
add
mov
adcl
xor
mov
mov
xor
movl
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
mov
mov
adcl
mov
xor
addl
add
movl
adc
addl
xor
xor
movl
cmp
movl
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
push
inc
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
addl
mov
xorl
push
adc
mov
andl
add
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
xchg
add
xchg
mov
dec
ja
inc
push
inc
dec
jp
jp
dec
pop
jp
adc
pop
cmp
popa
cmp
xlat
popa
push
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
adc
xchg
pop
dec
sbb
add
call
sub
dec
in
addr16
in
sahf
mov
inc
sbb
mov
cmpsl
push
and
or
pop
pop
pop
or
pop
mov
adc
insl
lea
repz
adc
maskmovq
mov
imul
or
push
cmp
in
pop
xchg
jmp
loopne
rcrb
jae
xor
sbbb
dec
sti
push
scas
xchg
pop
in
into
inc
add
divb
aas
inc
pop
push
lock
mov
cld
add
shr
xor
mov
push
lock
rcll
sbb
call
push
and
jbe
push
loop
jl
stos
dec
sbbl
out
repz
pop
hlt
xlat
sbb
sub
sub
sbb
nop
sub
test
es
pop
sub
push
test
popa
pop
out
mov
adc
sub
jbe
ljmp
fimull
or
sbb
mov
jge
dec
push
lea
lods
jmp
cld
adc
ffreep
sar
dec
push
jb
aaa
push
dec
sbb
rcrl
fldenv
and
out
call
xchg
cmp
cmp
lds
inc
rcll
dec
arpl
inc
mov
mov
jle
hlt
lods
lods
stos
xor
adc
insb
in
arpl
xchg
inc
lea
mov
cmp
inc
cmp
pop
xor
and
aas
int
ficoml
push
fucomi
dec
loope
cmp
pop
cmpsb
jmp
dec
push
out
enter
sarl
mov
jnp
outsl
push
mov
sub
aad
fcmovu
xchg
dec
arpl
xor
cltd
jecxz
in
ret
push
insb
inc
in
int3
das
sbb
adc
xchg
iret
inc
call
dec
jno
test
add
fwait
or
sub
add
inc
not
cmpsb
insl
or
mov
mov
jbe
sbb
std
ds
test
aaa
mov
inc
std
stos
jle
scas
fimull
imul
rcrb
push
inc
das
jo
outsl
xchg
pop
call
fldenv
into
pop
sub
push
inc
aas
gs
stc
pop
aas
lods
mov
stc
mov
sub
ss
jl
dec
hlt
jg
jae
movsl
ja
xor
sub
cmpsl
xchg
push
jl
push
sar
ret
xchg
pop
rcrl
sub
je
sbb
aaa
jl
imul
movsl
pusha
popf
stos
sub
out
sub
inc
test
mov
sbb
mov
dec
inc
stos
imul
sbb
incl
ljmp
addr16
add
mov
pop
test
std
and
mov
jecxz
or
cli
sbb
sarl
adcl
shll
loopne
sahf
dec
cld
jnp
test
icebp
jnp
jp
mov
in
sub
call
mov
sub
jp
popf
incl
xor
and
insb
push
xor
jecxz
or
ret
rorl
iret
and
loop
sub
mov
in
sub
pop
jb
popa
jecxz
adc
jge
shlb
stc
push
fs
add
cmp
test
stos
dec
cmp
xor
inc
pop
pop
dec
mov
scas
pop
mov
mov
pop
xchg
lock
mov
jbe
data16
dec
fnsave
sub
cmpsb
ja
sbb
popf
and
inc
pop
adc
fnstsw
insb
ficomps
mov
pop
fstl
mov
fiaddl
bound
sbb
adc
psubb
stos
arpl
in
aam
add
or
out
daa
dec
sub
jl
cmp
fwait
push
push
adc
push
loope
imul
mov
jg
mov
sub
out
add
popf
lock
sbb
inc
adc
push
cmp
imul
jbe
cmp
inc
into
outsl
cli
add
test
in
jbe
ljmp
jae
subl
imul
xchg
shrb
inc
jbe
push
cmp
cmpsl
cwtl
int3
nop
mov
xor
sub
pusha
push
add
repz
repz
mov
cmp
mov
ds
dec
je
xor
jg
imul
mov
addb
cmp
ljmp
vpshufd
dec
dec
cmp
dec
outsb
dec
push
rorb
cwtl
scas
dec
int
pusha
mov
jne
mov
ljmp
sbb
mov
sahf
ret
popf
xor
gs
mov
add
shrb
leave
adc
loop
dec
addr16
in
xchg
les
xchg
loop
in
aas
mov
pop
mov
xchg
jge
mov
xor
cltd
mov
and
fyl2xp1
cmpsl
mov
rorl
repnz
push
xchg
in
mov
ljmp
lods
cmp
fwait
mov
or
daa
dec
xor
xor
js
mov
mov
mov
fwait
enter
inc
sahf
xlat
xchg
adc
xor
mov
mov
pop
mov
out
mov
and
scas
xor
cld
outsb
pusha
jg
mov
sarl
lods
dec
mov
pop
mov
lret
push
push
stos
sbb
cld
xchg
icebp
fs
cmp
push
jle
pop
es
xchg
dec
inc
movsb
imul
xchg
dec
subl
inc
push
cs
into
sarb
call
mov
lret
mov
mov
icebp
scas
dec
mov
jp
sbb
mov
ljmp
mov
out
cwtl
test
aaa
xchg
cmp
ljmp
stc
mov
add
aad
divl
repz
in
cli
cmpsb
lahf
stc
xchg
cmp
mov
mov
enter
xchg
mov
lods
pop
dec
movsl
das
inc
jb
sub
lahf
and
insl
or
pop
sub
mov
jge
fwait
push
jns
push
sti
sti
popl
das
dec
int3
sbb
pop
and
ds
jns
orl
mov
lods
or
js
int3
cmc
sbb
pop
or
es
mov
fldcw
out
mov
push
es
imul
fnstenv
or
or
xchg
add
in
mov
lods
mov
gs
pop
mov
fbstp
lahf
movsb
push
adc
pop
mulb
nop
push
test
jecxz
clc
mov
aad
jnp
enter
jnp
fisubl
jae
xchg
mov
divb
shll
nop
xor
jg
es
cmpsb
or
cli
aaa
lock
testl
pop
jp
loopne
out
std
push
xchg
sarb
fstl
dec
mov
push
js
cmpsb
andl
cmp
lea
sbb
jg
imul
repnz
insb
jp
cmp
mov
dec
or
mov
mov
mov
push
sub
hlt
push
mov
mov
sub
sub
pop
add
inc
fyl2xp1
cmp
xlat
push
imul
clc
shrb
int
outsl
and
sbb
cmp
movsb
fsubp
fucomi
push
fmuls
mov
subb
jp
mov
push
sub
pop
stc
outsl
inc
es
lret
ja
gs
icebp
icebp
pop
jmp
add
xor
fucomp
ljmp
popa
adc
lret
push
or
sarb
andl
fbstp
xchg
mov
aam
aam
push
fcomip
mov
sahf
aaa
mov
jae
push
mov
xor
and
mov
data16
out
aas
jecxz
mov
fldl
mov
hlt
lock
js
or
cwtl
jmp
push
mov
cmpsb
in
bound
clc
mov
lret
and
aaa
pushf
mov
push
mov
push
cmp
mov
jge
pop
mov
sub
xor
loop
or
lcall
pop
jb
inc
or
push
inc
ds
xchg
mov
sub
mov
pop
mull
js
ds
inc
mov
int
arpl
jns
push
push
mov
ret
jg
and
sub
testb
and
pop
add
inc
je
pop
in
and
dec
aad
xor
xchg
out
push
pop
pop
jae
lods
call
sub
movsl
mov
mov
xorl
ret
popa
and
xchg
add
loope
inc
fsubr
and
les
cmp
xor
cli
jecxz
jp
sbb
or
rol
mov
in
inc
pop
mov
adc
cs
push
in
mov
push
jl
xchg
std
mov
sbb
add
sub
stos
out
sahf
cmp
rorb
mov
xchg
jl
test
aas
add
fnstcw
mov
push
lret
mov
int3
inc
mov
dec
cmpsl
add
jge
lds
xchg
mov
popf
cmc
jg
sub
inc
lods
sbb
ds
mov
fmull
sub
js
cmp
ds
and
cmp
pop
or
cmc
xchg
aad
and
add
adc
mov
push
mov
add
in
xlat
cltd
addr16
jbe
jns
mov
mov
outsb
daa
push
push
ret
leave
decb
enter
mov
sub
repnz
cli
and
pop
mov
xor
add
sub
xchg
lods
in
ja
pushf
test
mov
lods
in
pushf
popf
push
inc
scas
lret
cmp
dec
push
xchg
pop
mov
ror
jl
ret
sub
repz
je
mov
gs
out
push
hlt
ja
add
mov
lret
les
movb
push
mov
lret
xor
es
pop
call
in
out
mov
das
sahf
mov
inc
adc
sbb
xor
cmp
movsb
push
and
in
leave
mov
sub
or
or
pop
aad
cmc
mov
cmp
sub
xchg
pusha
outsl
stc
jg
dec
jle
fcomi
fsubs
test
out
sahf
fcomip
mov
or
in
jbe
fsubrs
and
in
lock
sbb
xchg
mov
inc
cmp
jo
dec
adc
mov
and
sbb
xchg
pop
adc
filds
test
cmp
mov
out
iret
fsubl
enter
in
call
in
mov
mov
xor
lcall
push
dec
loopne
out
cmp
and
push
out
push
xor
enter
sub
aad
mov
into
xchg
cld
rolb
out
pushf
and
sub
jae
dec
and
mov
jge
jns
shr
mov
adc
xchg
mov
in
das
jmp
iret
mov
stos
mov
aaa
hlt
lret
jnp
push
in
and
ja
xor
push
cmp
pop
je
call
sbb
jne
arpl
movsl
add
xacquire
or
cmc
stos
das
daa
loop
push
pop
shlb
mov
push
cmp
movsb
icebp
mov
pop
int
ljmp
mov
mov
lea
and
stc
mov
xor
sahf
adc
push
mov
jmp
sbb
adc
adc
stc
lods
in
test
mov
sub
adc
imul
xor
stos
sbb
mov
push
fisttpll
add
ja
pop
lcall
fwait
mov
xchg
mov
aam
shr
nop
and
adc
mov
mov
cmp
jge
jecxz
cwtl
cmp
sub
arpl
mov
and
pop
add
addr16
mov
test
aaa
push
jbe
mov
jbe
cmp
or
sbb
ret
jge
cmpsl
ja
mov
fldt
shl
cmp
insb
sub
data16
adc
or
dec
test
or
lret
lahf
add
mov
fisubrs
popf
hlt
sub
xor
movsl
test
jbe
lret
inc
add
daa
sub
adc
cmp
push
fists
sarl
movsl
xchg
popf
sbb
ret
test
lods
shrb
jno
jg
dec
jbe
adc
sbbb
fldenv
movsl
nop
add
jb
int3
aas
addl
and
rcl
leave
iret
cld
jne
addl
outsl
inc
lret
cmp
fcoml
dec
fs
in
mov
es
stos
cmpsb
imul
sub
fisubrs
fildll
negl
imul
sbb
inc
cld
rorb
sub
jns
and
sub
add
inc
pop
rorl
dec
mov
mov
das
adc
lcall
repnz
inc
sub
push
cmp
negb
jo
addb
inc
into
pop
mov
jle
and
rcrb
or
xchg
xorb
mov
mov
xor
mov
orb
jns
xor
lcall
lods
mov
or
fmull
cltd
mov
mov
push
ret
push
fistpll
mov
cmp
xchg
mov
hlt
ret
inc
adc
mov
mov
mov
roll
fildl
sub
clc
push
cmp
mov
ficompl
mov
sub
scas
outsl
pop
inc
cmpb
add
push
push
jo
pop
rol
push
subl
test
pop
into
in
aaa
fwait
dec
gs
ss
test
stos
mov
std
out
icebp
dec
mov
mov
and
pop
mov
mov
jb
adc
push
icebp
scas
add
jns
test
in
pop
xchg
and
dec
mov
sub
cld
dec
rorb
xor
push
sbb
mov
mov
mov
sbb
fidivrs
in
sub
hlt
fimull
and
xchg
mov
sbb
adc
push
adc
fbstp
and
sub
cmpsb
jle
mov
push
mov
fs
lcall
mov
out
mov
dec
mov
inc
out
pop
fmuls
nop
and
clc
inc
ret
sub
or
or
push
jl
sub
fwait
xchg
xchg
andl
push
or
sub
cmp
cs
adc
insb
cmpsl
in
sti
cli
pop
aas
mov
out
pusha
jns
mov
lcall
push
int3
dec
cmc
sub
or
push
xchg
pop
adc
popf
mov
ja
out
hlt
lret
jne
pop
dec
subl
jo
into
adc
aaa
mov
mov
loop
mov
cmp
adc
fdivrp
inc
add
dec
mov
dec
lds
imul
insl
stc
sbb
test
and
hlt
in
mov
dec
adc
jmp
cmp
les
adc
jecxz
addr16
fsubrs
subl
cld
in
cs
rorl
jno
ljmp
pop
mov
mov
fldt
sub
xchg
cli
fcmovne
pop
adc
rcrl
rorb
cwtl
ss
xor
fdivrs
add
repz
or
aam
addr16
pop
cmp
int
jne
add
sub
pop
lahf
jns
xor
mov
mov
hlt
lret
aam
bound
adc
jbe
imul
jecxz
leave
sti
mov
cmp
std
insl
mov
ret
dec
or
adc
add
mov
sub
inc
shll
jns
cmp
xor
pop
mov
lahf
xchg
and
movl
cltd
inc
clc
fildl
popf
jg
shr
mov
fsubl
int3
pop
add
andl
dec
jnp
sbb
or
test
out
rolb
movsl
popa
inc
sub
das
test
sti
jp
negb
push
fmull
push
movsb
inc
dec
xchg
into
inc
push
and
cmpsb
test
and
jbe
gs
ljmp
mov
fidivrl
cwtl
orb
xchg
adc
nop
mov
pop
std
cmp
ja
ljmp
into
adc
rol
test
fs
faddl
fiadds
mov
dec
adc
adc
es
popl
lea
lret
push
idivw
mov
imul
lock
adc
mov
outsl
inc
outsb
dec
jge
insb
xor
xchg
pop
dec
jno
loope
pop
repz
or
jmp
or
adc
push
cltd
push
inc
orl
ja
test
mov
fs
jne
lods
jo
cmpsl
mov
xchg
sub
test
adc
adc
loopne
inc
xchg
or
jge
jp
ds
movsb
mov
inc
mov
into
pop
cmp
pusha
enter
push
push
sahf
stc
add
mov
push
jle
pushf
cmpsl
incb
mov
push
cwtl
dec
cmp
pop
fst
pop
outsb
xrelease
das
popf
inc
popf
imul
and
cmp
push
lea
rcr
das
and
add
add
jl
pushf
push
xchg
or
fiadds
mov
ret
pop
icebp
add
and
sbb
sub
push
pushf
mov
mov
lret
push
pop
mov
addr16
inc
dec
popa
or
push
and
je
xor
in
cmp
sbb
pop
xchg
out
std
pop
add
repz
or
add
jle
testl
cmpsl
push
aam
rorb
sahf
xor
cmp
sahf
and
cmp
jg
scas
and
mov
mov
roll
ret
movsl
and
popf
lods
gs
or
arpl
jge
mov
test
xchg
add
sbb
or
jmp
inc
inc
cmpsl
fadd
jno
shrl
adc
push
pop
pop
sub
jb
mov
push
and
je
mov
shll
in
xchg
les
into
incb
mov
jecxz
jmp
cmp
insb
push
dec
add
push
es
cmp
push
inc
dec
cmp
mov
fisttps
push
sbb
nop
scas
dec
bound
ds
jg
mov
xor
fidivrs
enter
fwait
xchg
sub
jb
lods
sbb
fwait
repz
mov
pmuludq
push
adc
jg
xor
pop
mov
dec
out
and
cltd
mov
xchg
mov
mov
push
orb
rclb
jmp
mov
mov
jo
jmp
int3
jae
in
mov
sub
and
in
fsubl
and
push
inc
mov
gs
out
jnp
jb
dec
sub
xor
je
out
gs
outsb
jns
inc
mov
pop
mov
ja
jp
lock
in
lods
cmovl
das
cmp
mov
cmp
or
push
ljmp
jne
test
cmp
mov
jl
inc
adc
clc
arpl
push
aad
jecxz
ret
push
mov
mov
mov
or
inc
vmaxss
cwtl
inc
cmp
xchg
aad
add
aam
bound
xor
mov
xor
jbe
bound
push
pop
pushf
dec
sub
jns
xchg
push
xorb
aad
sahf
dec
repnz
push
push
in
pop
fistps
jnp
inc
xor
sbb
jo
sub
add
xchg
lds
in
cld
sub
negl
xor
idivl
test
dec
mov
lods
inc
test
pop
sub
pop
dec
push
pop
or
andl
push
push
push
in
add
xchg
xchg
mov
popa
add
scas
divl
repnz
jnp
xor
insl
mov
sbb
out
div
arpl
call
lods
lods
inc
cld
ljmp
mov
into
dec
movsl
std
leave
aas
adc
clc
lcall
jno
pop
pop
dec
jge
pop
or
or
jg
inc
add
int3
mov
cwtl
ss
pop
pop
test
mov
ds
or
or
jae
movsl
lods
adc
cmp
mov
std
pusha
pop
ss
rcll
lahf
inc
cmp
or
lcall
and
test
fistps
les
dec
sbb
sbb
sub
dec
orl
add
jbe
pop
jmp
adc
sub
div
mov
cmp
xchg
push
std
dec
dec
loopne
bound
xor
xchg
xor
push
xor
adc
test
rcl
lods
xchg
sub
loopne
sbb
xlat
test
pop
jae
jne
mov
xabort
and
out
imul
add
je
in
and
stc
sti
mov
je
xchg
pop
cmpl
xchg
sti
test
stos
lahf
cltd
mov
push
inc
mov
leave
pop
out
xchg
mov
jns
push
and
sub
aas
push
test
loope
push
push
cltd
div
mov
fstps
nop
shrb
inc
test
cmpb
enter
sbb
mov
or
jns
rolb
push
push
fwait
push
and
push
lock
outsb
pop
iret
in
out
outsl
sar
std
stos
lret
push
pusha
xor
add
outsb
les
rclb
out
test
push
jg
aad
or
jmp
leave
mov
xor
adc
movsl
sti
shll
enter
das
inc
addr16
pop
cmp
out
fnstsw
lds
mov
pop
mov
lcall
xor
push
dec
or
xlat
ss
adc
cmp
cwtl
outsl
sahf
imul
add
in
adc
sbb
mov
arpl
sbb
pop
int3
test
arpl
cmp
xor
ret
sub
push
or
or
shll
xor
sub
pop
inc
sahf
cmp
fbstp
clc
lock
and
aaa
xchg
xchg
inc
ja
mov
mov
pop
jo
cmpb
into
cltd
cmp
loope
andb
cli
imul
inc
or
jae
adc
aaa
sub
loope
push
ds
pop
cli
push
out
fucomp
scas
jne
jns
popa
and
xorb
mov
pop
or
push
adc
mov
xchg
jae
xor
jbe
inc
insl
das
pop
jbe
xor
outsl
sbb
loopne
mov
gs
aaa
iret
movl
lea
js
mov
mov
jg
pop
sbb
xchg
pushf
movsb
mov
inc
dec
repnz
leave
nop
mov
push
cmp
xchg
ja
adc
mov
adc
arpl
or
js
dec
push
add
sbb
cmp
sbbl
les
nop
insb
pop
out
ds
inc
and
sarb
sbb
sub
push
mov
shll
sub
add
mov
fucompp
les
call
add
jg
pop
sbb
jnp
ljmp
in
ljmp
outsb
pop
jns
cmp
lods
sbb
sbb
subl
stos
mov
jg
and
inc
idivb
insb
out
mov
pop
and
jg
cmp
adc
add
jb
jno
add
mov
xchg
add
mov
divl
ret
sbb
mov
sub
push
out
xor
jnp
or
orl
xor
test
ficomps
movsl
cmp
inc
mov
lods
shlb
or
cli
add
leave
lahf
inc
pop
xlat
dec
dec
sti
popa
int
inc
notb
push
nop
les
outsl
mov
adc
jno
lcall
leave
xchg
jae,pt
xor
push
aad
push
push
jg
adc
aas
fwait
aaa
pop
pop
mov
loopne
cmp
jge
lret
ret
xchg
out
out
xor
arpl
mov
icebp
mov
lds
fcompl
hlt
mov
and
adc
cld
js
movsl
dec
mov
es
jecxz
dec
test
xor
out
cmp
jl
pusha
flds
inc
push
sub
es
mov
dec
add
sub
mov
leave
inc
in
or
int
mov
adcb
mov
or
lahf
push
add
iret
dec
pop
cmc
mov
jl
imul
inc
add
sub
sbb
mov
and
outsb
jmp
adc
pop
cmpb
lcall
imul
fwait
aam
jno
jmp
popa
mov
fldcw
pushf
shrl
loope
pop
or
sub
pop
push
scas
mov
imul
shlb
xchg
xor
jge
pop
inc
xor
test
xor
int3
out
xchg
cwtl
sub
mov
jne
mov
shlb
mov
and
bound
sbb
jmp
cmp
scas
cmp
or
hlt
jne
or
fisubrs
fs
scas
mov
jns
nop
adc
and
test
cs
in
sub
sub
inc
nop
roll
add
lret
sahf
xchg
add
jo
mov
and
mov
iret
push
or
inc
xor
movsb
add
and
add
popa
or
mov
dec
leave
fwait
in
pop
jo
das
into
stos
ljmp
iret
xchg
jb
jg
cmp
pop
dec
xor
mov
cmp
mov
mov
scas
mov
xchg
jp
gs
cltd
dec
stos
repnz
sbb
ljmp
sub
push
lods
mov
adc
mov
popf
pop
mov
mov
les
leave
rcll
iret
rcll
xchg
mov
lret
xchg
cmp
xchg
rcll
or
cltd
gs
and
dec
gs
stos
xabort
dec
daa
mov
sbb
imul
lock
mov
sub
add
sbb
fsubrl
and
stos
push
pop
inc
cmp
sbb
inc
mov
negl
stc
push
and
pop
lods
inc
sub
sti
jb
xor
and
hlt
adc
outsb
shl
pop
adc
sbb
test
mov
fld
push
xor
dec
xchg
mov
xor
cltd
dec
out
xor
or
subl
jnp
push
fsub
popf
mov
or
repnz
xchg
pop
jmp
jne
pop
loopne
push
roll
loop
fcmovnu
stos
jne
adc
cli
inc
rol
cmpsb
pop
test
sti
sub
lock
mov
or
stc
cmp
mov
sbb
mov
mov
sbb
std
dec
sar
insl
xchg
stc
push
int
cltd
repnz
dec
stos
clc
push
mov
mov
mov
cli
mov
mov
inc
cmpsl
xchg
jae
lret
inc
clc
mov
popf
rol
push
push
ljmp
insl
std
and
leave
fsubr
dec
or
jae
sbb
xchg
fwait
in
jns
je
jbe
push
stos
sbb
cmp
mov
outsb
push
arpl
test
out
iret
sbb
dec
add
xor
add
push
pop
cmp
pop
call
pop
adc
push
and
std
daa
psllw
mov
mov
mov
adc
insl
add
les
psubw
and
adc
mov
jecxz
mov
out
out
jae
jecxz
jnp
push
mov
bound
mov
gs
xlat
movsl
pop
pushf
cmp
fcoml
add
pop
mov
or
xchg
je
mov
sub
icebp
inc
movups
outsl
in
fmuls
lock
and
xchg
ret
add
mov
daa
jns
add
pop
mov
sub
call
xchg
cmp
or
or
inc
xor
mov
sti
and
push
sahf
cwtl
shrl
aas
and
test
jge
xchg
mov
mov
dec
push
cld
jge
std
insl
mov
dec
lret
sub
aam
mov
int
repnz
xor
push
daa
push
adc
popa
imul
sbb
add
lcall
inc
mov
mov
add
xor
dec
xor
nop
insb
adc
nop
dec
dec
daa
fstl
test
xlat
pop
sub
mov
pop
test
mov
aas
test
fidivrs
repnz
es
dec
cltd
jns
test
mov
and
and
mov
outsb
pushf
pop
mov
pop
jnp
sarl
push
arpl
inc
in
call
test
addr16
popa
xchg
mov
je
xor
test
mov
push
sbb
adc
push
or
stos
or
pop
cmpsl
repz
mov
jmp
cli
and
imul
sub
dec
lret
push
jns
ss
in
cmp
jb
dec
push
push
sub
insl
adc
jg
out
jae
fninit
sub
into
enter
adc
repz
inc
or
fmull
out
lock
cmp
adc
xor
jnp
sub
ficomps
jb
xchg
ja
mov
es
call
xchg
cmp
add
or
push
lret
call
adc
popw
push
inc
loop
outsl
das
dec
inc
cmp
mov
loope
sbb
inc
int3
pop
test
xchg
out
dec
push
mov
mov
mov
mov
or
jecxz
jg
and
scas
cmc
mov
ss
mov
inc
stos
repnz
outsb
outsl
adc
sub
or
lock
jbe
lret
imul
or
repnz
mov
dec
sbb
mov
rclb
int3
mov
mov
clc
out
or
mov
push
dec
ret
in
xor
jae
das
xchg
lea
mov
pop
addb
pop
inc
and
xlat
mov
pop
scas
clc
add
ret
das
jp
cmp
dec
sub
iret
xchg
sbb
insb
or
stc
pop
adc
dec
push
jbe
mov
sub
popa
adc
and
popf
insb
jp
jg
cmp
lret
inc
pop
mov
cmc
fstpt
jo
push
data16
sbb
stos
stc
mov
enter
xorl
pop
sub
loop
jp
sbb
in
mov
add
pop
xchg
test
shll
jle
cwtl
inc
xchg
mov
aad
add
call
mov
lock
int3
test
movzwl
lret
mov
jge
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
sub
movl
mov
movsbl
or
mov
sub
sub
mov
xor
mov
sbbl
xor
movl
cmp
movl
jne
xorl
mov
andl
push
mov
xorl
add
mov
and
mov
mov
add
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
subl
push
push
push
lea
push
lea
adcl
jmp
outsl
or
or
orb
jp
pop
jp
pop
shl
mov
aad
out
into
lret
fildl
popa
in
mov
dec
xchg
pop
push
xchg
aaa
outsl
push
adc
lock
jns
cltd
in
sub
mov
mov
ret
ds
adc
cmp
stos
repz
sahf
mov
fidivrl
outsb
xor
fs
or
sub
stos
call
lahf
push
cs
xorl
adc
movsb
push
popf
mov
inc
cmc
mov
adcl
push
call
xor
and
push
lcall
push
ljmp
in
out
add
enter
ret
test
and
cmpsb
loopne
adc
lea
jb
mov
mov
mov
mov
jp
in
mov
sti
lcall
push
setl
dec
adcb
jmp
cmc
mov
sub
mov
xchg
cmp
lcall
push
les
sbb
lcall
mov
mov
push
mov
dec
xor
or
push
enter
fwait
xor
loopne
pop
jno
cmpsb
pop
sub
add
ret
into
iret
shlb
movsl
mov
fst
sub
cwtl
addr16
fs
and
or
sub
mov
push
jp
out
rolb
outsb
xchg
movsl
gs
addr16
or
icebp
and
fabs
jle
add
dec
cmc
stos
popf
dec
pop
sub
ljmp
popa
fmul
fsubp
and
push
sahf
jp
jmp
sub
out
cwtl
fldcw
je
negl
rep
adc
iret
inc
xor
sub
cmpsl
push
ret
sbb
xchg
pop
mov
icebp
cld
leave
and
pop
add
std
rolb
faddl
notl
sbb
push
dec
sbb
lds
push
inc
or
insl
cli
test
out
leave
lea
adc
sahf
rcr
mov
rcll
imul
adc
in
mov
inc
cmpsl
testl
add
stos
adc
pushw
pop
scas
pop
data16
sbb
mov
adc
xchg
jae
and
sbb
fs
roll
fcoms
shlb
mov
push
mov
cltd
movsb
shrl
dec
inc
shlb
xor
jg
repz
jle
aas
push
jg
push
addr16
ret
les
aam
mov
push
fs
int3
pop
pop
jle
pop
es
lahf
sbbb
sub
adc
out
shrb
or
add
push
push
scas
mov
stc
inc
lret
std
push
je,pn
mov
hlt
dec
cmp
mov
mov
cld
pop
dec
jb
push
adc
mov
inc
arpl
mov
adc
jns
mull
int3
das
jg
ljmp
call
dec
push
fsubrp
mov
sbbl
mov
and
sbb
dec
pop
mov
into
and
insl
aam
mov
rorb
movlps
je
mov
inc
lds
in
mov
jbe
dec
mov
pop
push
mov
xchg
fiadds
or
sub
sbb
cli
mov
pop
jbe
jno
hlt
or
shrl
mov
ja
sbb
ret
add
mov
loopne
xor
adc
lret
pop
and
leave
and
js
inc
mov
add
sub
orl
pop
hlt
add
pop
pop
nop
inc
mov
pop
cmp
sbb
popa
and
add
mov
loopne
add
xor
mov
sarb
mov
fldenv
and
xor
adc
cmpsb
das
jl
insb
mov
leave
push
sub
mov
push
insb
pop
int
fsub
add
sub
insl
add
pop
mov
daa
xor
stos
mov
imul
xchg
or
adc
sti
leave
cmp
out
je
movsl
push
sbb
xchg
or
loopne
ja
outsl
cli
icebp
mov
cmp
out
mov
jns
pushf
and
mov
pop
sbb
pop
cmp
lret
scas
pop
int
mov
lods
jne
dec
pop
inc
xchg
mov
mov
pop
mov
std
inc
and
adc
std
in
pop
dec
icebp
pop
insl
subb
mov
sub
jp
jno
out
in
inc
jnp
stos
daa
stos
pushf
or
div
mov
or
popa
sub
divb
add
inc
imul
sub
xchg
shlb
adc
push
xchg
add
mov
ret
in
push
mov
jno
aas
pop
mov
pop
call
repnz
gs
sub
add
inc
push
ret
negl
mov
mov
in
cmp
dec
xor
fwait
insl
das
mov
cmp
jmp
dec
ss
dec
fcoml
loop
push
sbb
scas
loopne
insl
sahf
dec
je
or
inc
lods
jmp
mov
mov
xchg
jbe,pn
inc
and
cld
and
mov
insb
add
jge
jb
mov
shll
outsl
sbb
xor
daa
repz
push
rcrb
mov
inc
lock
dec
add
pop
loope
cmpsl
das
inc
mov
ljmp
jmp
lret
mov
jle
insb
cwtl
fistl
iret
pop
loopne
mov
sahf
lcall
and
data16
scas
aam
lea
sub
nop
std
repz
mov
loopne
fimuls
mov
inc
rolb
dec
xchg
push
rcll
pop
lret
pusha
jmp
invd
mov
mov
in
push
imulb
jae
jb
dec
xor
sub
and
sub
adc
imul
hlt
lds
data16
ss
shl
jg
js
add
lcall
cltd
lahf
xchg
movsl
in
pop
inc
pop
sub
sbbb
in
addl
in
loop
pop
push
push
push
jb
es
mov
arpl
mov
or
out
popf
or
dec
mov
sbb
xor
and
ret
sbb
sub
addb
xor
es
rolb
mov
jb
pop
stos
xor
push
cmpb
mov
mov
mov
jae
cmp
push
adc
and
jne
pop
loope
push
outsl
sbb
je
or
mov
pop
mov
sub
shl
ja
dec
dec
dec
jge
pop
arpl
push
mov
sahf
ljmp
jg
ror
in
out
inc
dec
sub
pusha
stos
clc
jns
lcall
lds
std
shlb
jns
fs
jnp
adc
xchg
mov
cwtl
jmp
push
mov
repnz
pop
scas
out
dec
dec
jae
xorl
mov
jno
adc
sbb
mov
repnz
add
in
xchg
shlb
data16
cld
mov
push
pop
rclb
cs
scas
cmc
adc
mov
mov
loop
push
mov
jbe
mov
jb
jb
pop
idiv
movsl
or
and
call
jl
mov
push
push
pushf
add
sub
std
das
loopne
mov
sub
sub
in
pop
cmp
mov
xor
mov
lock
sub
xor
ja
sbb
pop
aas
or
xchg
addl
jmp
pusha
xorl
xchg
adc
cmpsl
mov
inc
lods
xchg
lods
daa
test
lods
push
cmp
cli
cmp
lcall
xorb
mov
fs
push
push
sbb
out
insl
sbb
cmp
icebp
dec
mov
jb
sar
cmp
loop
xchg
inc
aaa
push
pop
js
xchg
lahf
push
and
mov
insl
cwtl
push
fwait
dec
lret
mov
sub
bound
int3
add
ljmp
add
aam
push
sbb
pop
push
mov
cli
mov
ljmp
jecxz
orl
stc
and
into
mov
push
fdivs
aam
fs
mov
add
sbb
push
inc
pop
jne,pt
mov
aam
jbe
lret
jmp
lods
test
mov
push
mov
lock
lahf
je
dec
inc
jo
outsl
ret
leave
sbb
mov
movsb
mov
fisubs
loop
imul
push
addr16
std
xchg
cmc
outsb
aas
xchg
push
mov
sub
or
mov
and
and
inc
xchg
jg
sub
mov
xchg
mov
lods
add
jg
sbb
testl
shll
cmc
dec
mov
cmpsl
in
adc
sbb
sub
xor
add
and
dec
adc
pop
sub
ficoml
js
das
cmp
pop
pop
ljmp
sbb
adc
testl
in
fisubrl
outsl
push
clc
mov
inc
aaa
mov
jge
and
loope
lea
cmp
cmp
cld
iret
mov
jnp
xor
lods
outsl
fisubs
fnsave
jnp
jg
scas
mov
or
clc
push
out
sbb
std
popa
inc
sub
shr
outsl
pop
dec
push
xchg
out
mov
sub
or
fisubs
xor
pop
add
gs
jnp
xchg
mov
jge
inc
jmp
push
and
inc
add
adc
fisttps
js
loopne
fnstenv
sub
mov
and
jp
xor
data16
and
pop
cmpsb
ja
sub
pop
push
addr16
mov
iret
std
sbb
or
ret
vpaddq
pop
rorb
dec
jmp
lods
pop
inc
imul
int3
mov
or
fisubl
lods
insb
ljmp
or
push
push
loope
mov
lahf
cmpl
pop
movsb
push
jne
hlt
inc
mov
cmp
mov
adc
jno
mov
dec
push
test
or
inc
adc
sahf
mov
or
add
dec
hlt
mov
add
addl
sbb
ret
cmp
shr
lock
ds
sub
rcll
pop
rcll
aad
out
push
cmc
xor
xchg
fiadds
jns
adc
mov
sbb
jnp
rcrb
fwait
rcr
into
mov
cmp
movsl
mov
repnz
jne
ljmp
cmp
ljmp
shl
or
aas
adc
mov
shl
mov
cmp
out
xor
mov
mov
pop
cli
test
inc
jae
sub
mov
pop
sbb
inc
or
sbbb
shlb
or
dec
push
lret
clc
ds
mov
mov
lock
movsb
sti
jnp
mov
int
cld
pop
push
jge
push
or
outsl
lea
les
sbb
lods
das
outsb
fwait
ret
cmp
jnp
mov
mov
push
push
jbe
jge
cmp
xchg
pop
in
stc
or
arpl
sbbl
adc
mov
pop
cmp
jns
pop
inc
loope
or
fcomp
mov
jg
adc
sub
sbb
test
dec
incb
fwait
sub
mov
mov
jae
ffreep
aas
lock
movsl
jne
shl
es
xor
nop
fmull
xchg
cmp
jb
negb
push
dec
inc
jge
push
call
ret
pop
pop
psubq
enter
dec
bound
subl
js
add
fcoms
or
lcall
stc
pusha
mov
sub
cltd
cwtl
stos
xchg
inc
xor
sbb
in
push
jmp
rcll
es
push
rol
test
stos
fucomip
popa
imul
fwait
dec
mov
ror
jg
inc
mov
cmp
dec
or
xor
fs
inc
ljmp
mov
lds
dec
sub
lock
in
push
mov
adc
shll
addr16
xchg
lret
inc
push
in
jnp
push
xor
or
dec
repz
add
xchg
out
add
rol
jnp
scas
mov
cmp
xor
add
test
push
outsb
jge
mov
inc
xchg
out
xchg
sbb
pop
inc
sbb
xchg
fwait
pop
loope
shrb
add
popa
loope
out
divb
repnz
mov
leave
mov
cli
mov
inc
out
inc
adc
jae
test
mov
dec
iret
add
pop
mov
jno
shrb
or
or
testb
mov
mov
test
sub
loope
sbb
jg
inc
mov
mov
cs
mov
jns
push
fs
test
cmpl
sarl
sbb
aad
scas
int
and
mov
into
pop
push
lret
in
adc
in
push
sahf
outsl
push
stc
push
out
or
xlat
xchg
mov
loop
lahf
add
ficomps
fstpl
or
insl
insb
add
mov
push
enter
inc
xchg
adc
adc
test
ret
imul
adc
pop
fdiv
push
lcall
xor
ss
imul
in
push
rorl
ss
xchg
leave
imul
cmc
iret
flds
nop
andb
push
leave
pop
stc
add
dec
sti
xchg
push
sbb
stos
cmpsb
lds
shll
iret
mov
aad
leave
call
mov
xlat
jb
push
clc
jns
mov
push
imul
sbb
int
mov
int3
loop
sbb
test
loope
aam
jmp
push
mov
lahf
cs
popf
leave
add
mov
int3
mov
mov
dec
les
test
es
rcl
adc
aam
inc
test
sub
out
and
cs
push
pop
lret
dec
cmpb
dec
mov
fistpl
mov
aam
dec
fldl
xchg
dec
clc
xchg
cmp
pop
adc
pop
pop
mov
shrb
cld
mov
push
cmpb
loope
incb
push
push
pop
in
adc
mov
and
add
test
mov
mov
push
jns
fsts
lcall
aas
repz
cmpsb
inc
cmp
dec
mov
inc
or
inc
add
inc
mov
sbb
sbb
pop
in
or
push
mov
xlat
mov
hlt
call
jmp
xchg
fcompl
cmpsb
bound
xchg
or
mov
and
cmp
jns
cwtl
loopne
and
pop
lahf
jecxz
outsb
pop
inc
cmp
jns
push
andl
mov
gs
lahf
enter
pop
cmpsb
bt
sbb
pop
mov
sub
nop
sbb
mov
jae
pop
dec
lret
ret
adc
cltd
imul
mov
outsb
imul
shrl
and
jbe
outsb
jns
mov
jo
sub
push
cs
ret
fnsave
push
icebp
jle
leave
mov
pop
mov
jp
pop
leave
test
out
int3
andb
lret
psllq
dec
bound
les
sub
shl
andb
loope
and
xchg
dec
adc
call
push
out
mov
inc
stos
jp
sahf
push
test
sub
xchg
test
sbb
sub
out
dec
js
push
test
inc
push
add
xor
add
push
xorb
into
pushf
lahf
enter
sbbb
fistpll
movsb
adc
and
rclb
jmp
test
jb
jne
fidivs
iret
add
andl
repz
cmpsb
mov
xlat
mov
leave
cltd
pop
mov
mov
lea
rcl
inc
inc
fcoms
xchg
jge
jmp
clc
dec
xor
inc
test
stc
mov
mov
stos
push
out
je
xlat
icebp
loopne
je
inc
ja
cs
loope
xchg
xchg
les
cmpsl
sbb
outsb
stos
xchg
push
cmpsb
jns
pop
pop
jnp
push
test
cwtl
repnz
inc
sbb
scas
js
mov
insb
jne
mov
pop
dec
sbb
imul
stos
loop
mov
push
inc
mov
add
lock
loope
loopne
pop
cmp
xor
and
mov
push
fs
mov
add
fld
mov
shr
adc
out
arpl
jno
lret
into
roll
loope
int
cld
ds
push
in
sub
xchg
xor
cmpsb
jg
xor
dec
fnstsw
scas
daa
cmp
mov
xor
mov
cmp
xor
sub
mov
ret
fcmovnu
je
inc
jecxz
daa
cmp
xlat
loope
pop
and
cmp
add
lret
outsb
outsb
xor
xor
aaa
popa
cwtl
jbe
cmc
mov
scas
sub
mov
ljmp
xor
xchg
inc
and
inc
push
push
xchg
jbe
repnz
iret
in
ror
cmpsl
gs
scas
sarb
dec
lds
dec
add
cmpb
dec
popa
rclb
dec
add
dec
dec
mov
xorl
mov
addr16
mov
lahf
imull
lods
xor
adc
dec
pop
pop
add
stc
sbb
xchg
out
mov
pop
sbb
pop
cmp
mov
repnz
xorl
jno
adc
in
bound
les
stos
sbb
xlat
inc
sub
cltd
jg
imul
push
inc
cwtl
and
repz
insb
testb
and
mov
sbb
xor
mov
shr
stc
mov
pusha
push
insl
fwait
dec
xor
mov
dec
push
cld
shll
fldl
xlat
fdivr
adc
mov
lds
lcall
and
loope
mov
imul
aad
dec
dec
cmc
add
xchg
jns
sub
pop
shlb
xchg
lods
and
pop
fcmovnu
aas
rcr
test
test
scas
push
stos
adc
faddl
sub
mov
mov
ljmp
mov
insb
sbb
adc
popa
data16
les
lds
clc
cs
dec
xor
mov
fs
insb
sbb
sub
push
jle
outsb
push
mov
mov
lahf
outsl
adc
faddl
add
ljmp
stos
cmp
adc
dec
popa
rorl
push
push
xor
mov
mov
loop
pop
cwtl
in
push
aas
rcrb
dec
fists
popl
imul
stos
popa
xor
bound
or
aaa
out
jne
ja
inc
push
add
xchg
and
test
or
push
faddl
xchg
dec
js
sbb
adc
adc
push
pop
in
jb
into
adc
loope
push
mov
xor
into
mov
cwtl
and
iret
aam
test
inc
add
and
mov
sub
andb
inc
in
dec
inc
hlt
sahf
stos
dec
sahf
xor
rorl
in
dec
sahf
push
jns
lods
push
insb
shrb
cmp
faddl
or
add
ja
test
and
or
sti
jecxz
pop
ret
push
test
mov
mov
test
jmp
lods
adc
mov
mov
stos
mov
pusha
xor
insl
inc
inc
lds
out
dec
jo
out
pop
xorb
pop
mov
xchg
jp
pushl
and
push
insl
addr16
and
rclb
xchg
insl
push
and
and
and
ficompl
mov
in
mov
cmp
mov
mov
loopne
mov
mov
jbe
xchg
jecxz
xchg
sbb
jmp
stc
sub
adc
arpl
fisttps
xor
inc
or
test
and
and
test
and
repnz
and
lahf
cmp
cmp
data16
adc
jg
jge
mov
cwtl
add
movsb
hlt
cmp
cmp
lcall
sbbl
cmp
xchg
dec
xor
aas
adc
je
mov
mov
add
push
sub
xchg
inc
inc
add
xchg
dec
loope
hlt
add
and
sarl
arpl
rolb
push
xchg
cmp
je
sub
test
mov
push
test
shrl
jle
outsl
push
xor
into
xor
and
sbb
rol
mov
or
movsl
aas
adc
pop
push
mov
pop
and
mov
push
sub
in
dec
loope
sub
xchg
push
cmp
dec
cltd
imul
mov
mov
add
loop
test
sti
sub
mov
nop
nop
mov
jne
mov
add
jae
mov
cwtl
cwtl
push
and
insl
push
xor
enter
jno
inc
sbb
pop
enter
mov
xchg
mov
sbb
push
push
ljmp
insb
and
mov
lret
mov
sbbl
mov
outsl
xlat
fdivrl
neg
xchg
ficoms
adc
cltd
push
pusha
dec
fisubrs
ja
add
xchg
push
jge
cmp
data16
cmpsl
cmp
cwtl
ds
inc
das
and
andb
fidivrl
dec
push
in
loope
jno
ret
sbb
sub
movsb
movsl
pop
push
ds
cmpsl
movsl
fs
add
lods
and
sub
push
jae
std
pop
cmpsl
rcll
xchg
lcall
nop
jle
data16
mov
outsb
sbb
fcmovne
fcmovnb
and
push
pop
and
loopne
or
inc
jns
into
and
stos
adc
sti
or
inc
leave
or
lds
jge
std
scas
mov
stc
loop
scas
movsb
call
repz
inc
push
or
leave
and
clc
iret
sub
test
push
test
xlat
jle
loopne
fbld
add
int
int
int
jo,pt
mov
mov
data16
xchg
or
xor
pop
rcrl
loopne
pop
std
add
stos
cmp
sbbb
push
test
mov
xor
dec
lods
pop
pushf
out
ret
outsl
inc
xchg
pop
stos
mov
negb
xchg
dec
mov
and
fdivrs
ret
dec
into
filds
das
push
mov
push
mov
or
sbb
nop
mov
jmp
xlat
insb
movl
dec
ret
enter
xchg
in
jns
loope
insb
or
xorb
lcall
cli
sub
int
cmpsb
cli
lahf
pop
mov
daa
mov
push
sbb
mov
aam
inc
xlat
adc
fidivl
mov
ljmp
scas
xchg
fwait
pusha
and
lret
aas
sub
sub
js
rorl
jecxz
fwait
rcl
cmpsb
les
mov
add
pop
popa
mov
dec
mov
pop
mov
mov
push
jge
pop
sbb
adc
push
aas
inc
mov
aam
jp
data16
cmp
stc
sub
ret
test
popa
mov
outsb
shll
test
movsb
std
sbb
fnstsw
or
pop
sbb
dec
jmp
mov
aas
mov
insb
idivb
pop
dec
enter
lds
pop
mov
jns
sbb
push
enter
inc
loope
and
cmc
inc
cs
and
lods
inc
fnstcw
xlat
xchg
arpl
mov
out
mov
cmpsb
ret
loop
ja
lea
adc
fiadds
outsl
add
add
pop
stos
pop
loopne
jnp
adc
das
dec
into
mul
sub
int3
nop
dec
jns
xor
and
int
push
pop
pop
pop
sbb
imul
lcall
in
repnz
adc
adc
push
jle
mov
lret
jecxz
orl
pop
mov
jns
xor
push
lock
dec
sub
pop
cmp
in
popa
pop
orl
mov
mov
sbb
dec
fidivs
into
dec
jbe
pop
sbb
mov
aad
bound
xor
adc
sub
xor
xchg
hlt
adc
into
cltd
lock
clc
mov
cmc
sub
lret
sub
jno
outsb
loope
mov
xchg
data16
movsb
or
dec
lods
push
subl
in
cmpsl
mov
bound
bound
sub
fdivs
mov
sbb
in
loope
loopne
jp
setp
and
adc
cmpsl
or
test
pop
fwait
leave
push
lret
out
imul
addr16
or
loope
mov
je
pop
and
push
aam
xor
add
mov
nop
scas
mov
jnp
repnz
xchg
das
or
and
mov
mov
sub
inc
js
into
push
mov
inc
xor
jbe
test
pop
lds
dec
xchg
incb
mov
add
adc
enter
push
add
inc
sub
movsl
jns
imul
or
int3
icebp
or
int3
add
dec
popa
mov
into
and
cmc
mov
fnstsw
inc
in
lock
push
pop
mov
or
cmpsb
mov
dec
in
aaa
out
jecxz
das
mov
sti
dec
jo
and
xchg
or
loopne
cmpsl
loope
mov
mov
cmc
mov
les
or
stos
mov
ret
xor
or
ja
shl
subl
xchg
fnsave
mov
popa
or
mov
pop
repz
out
mov
cmpsl
pop
loop
add
xor
push
addl
push
cmp
fcmovb
push
popf
insl
dec
andb
jge
sbb
push
mov
ror
ds
push
jmp
test
fwait
int3
imul
in
js
mulb
jmp
xchg
inc
sti
shrb
repz
pop
xchg
scas
sti
ret
pusha
and
mov
cld
stc
cwtl
pop
addl
mov
lret
insb
sub
sub
loope
cs
pop
sub
dec
xchg
or
movsl
dec
and
ret
adc
test
add
movsl
fs
es
jle
cmpl
or
imul
add
jo
xor
mov
and
rol
sbb
xchg
jecxz
dec
fstl
push
aas
or
out
add
adc
adc
cwtl
test
mov
jle
push
fdivrl
or
dec
adc
cld
lahf
out
push
repz
mov
jle
insl
sbb
testl
add
into
mov
outsl
stos
mov
sbb
xchg
jbe
loopne
lret
movlps
push
fildll
out
push
shlb
jns
jmp
ret
aam
push
mov
stc
lcallw
pop
arpl
shll
mov
pusha
dec
adc
lcall
gs
dec
addr16
dec
mov
or
or
rorb
dec
mov
hlt
mov
loopne
out
leave
popf
mov
mov
cli
mov
xor
in
test
dec
sub
and
pop
sbb
pop
idivb
popa
xchg
xchg
pop
mov
ja
inc
aad
adc
mov
sbb
push
mov
in
popa
mov
cwtl
dec
jb
sub
mov
sbb
dec
data16
mov
imul
sub
gs
outsl
jns
loope
xor
jae
rcr
lock
cmp
jns
cmp
sbb
test
xchg
jb,pt
neg
mov
adc
xor
and
outsl
arpl
ret
inc
cmp
mov
popa
loop
and
xorw
adc
cmp
jne
stos
jp
cmp
and
mov
daa
outsl
pop
jbe
ficoml
push
add
mov
iret
loop
mov
xchg
and
adc
sti
lock
out
jle
add
popf
jne
jbe
push
dec
in
test
lcall
dec
lock
sar
jb
inc
je
into
mov
imul
mov
decl
scas
stos
test
aas
call
xchg
pusha
daa
scas
adcl
sbb
outsl
repnz
add
stc
loope
and
pop
cmc
dec
and
xor
xor
push
sbb
jae
push
lock
add
out
shll
mov
test
inc
loopne
xor
cmp
data16
std
mov
cs
sbb
or
arpl
and
inc
sbb
sbb
push
or
jns
mov
fidivrs
daa
ret
sub
xchg
cld
pop
lret
popf
jb
or
lods
filds
adc
in
push
pusha
and
add
test
mov
add
push
fmull
in
xlat
out
dec
lret
out
add
push
addr16
xor
outsl
mov
jp
inc
xor
fmuls
mov
iret
push
sbb
pop
mov
hlt
push
test
pop
sub
xor
enter
es
jecxz
xchg
inc
lds
in
push
ss
jl
dec
xchg
out
adc
push
sbb
xlat
cmp
cs
into
push
sbb
and
and
mov
mov
leave
aas
daa
cmpsl
cmp
int
push
out
mov
dec
outsl
outsb
xchg
test
cs
notl
push
cmp
gs
mov
pop
mov
pop
mov
lcall
jge
scas
int
mov
ja
and
jne
ljmp
fbstp
iret
and
xor
out
lock
fsub
cmc
or
ja
sbb
nop
stos
and
loope
arpl
ss
and
ds
fmul
xchg
push
cmp
nop
inc
loop
jns
xchg
out
cwtl
sbb
lods
inc
sub
xor
fcmovb
lret
and
arpl
jp
mov
mov
lods
fnsave
xor
push
ss
lahf
clc
call
jg
clc
enter
sbb
movsb
outsb
icebp
mulb
dec
xor
adc
mov
out
and
into
lods
mull
loope
divb
ret
pop
pop
sahf
push
scas
sbbl
inc
clc
cs
add
roll
test
out
add
push
addl
rol
fmulp
xchg
add
punpcklbw
aaa
sub
pushf
pop
call
insb
xchg
push
cmp
fsubrs
mov
add
push
mov
lods
push
pop
inc
xchg
arpl
lock
test
xor
pop
dec
js
cmpsb
dec
adcl
jecxz
pushf
ds
adc
imul
popa
lods
in
or
sub
scas
in
mov
stos
fildll
jecxz
sbb
nop
pop
mov
adc
cltd
clc
ds
rep
dec
pop
pop
pop
add
adc
sbb
xchg
ret
fildll
imul
xor
aad
inc
mov
roll
inc
add
adc
notl
push
push
xorl
push
andl
call
sbb
movl
movl
mov
mov
inc
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
mov
add
mov
sbb
mov
test
movl
je
movzwl
sub
mov
movl
mov
mov
mov
xor
imul
mov
mov
sub
and
mov
add
xchg
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
mov
jnp
mov
sbb
enter
mov
pop
jp
or
and
jecxz
out
int3
hlt
sub
pop
aad
adc
pushw
mov
cmp
jno
push
movsl
insb
xor
pop
sbbb
sahf
pop
sbb
divl
inc
fs
arpl
mov
adcb
lods
fsubrs
std
add
shl
in
sub
aas
les
movsl
sbb
int
mov
push
lcall
push
push
addr16
mov
xchg
mov
sub
ds
jl
movsl
mov
dec
and
mov
jo
out
int3
mov
push
mov
sbb
dec
adc
jne
adc
dec
aaa
test
push
mov
pop
jle
iret
cld
jne
dec
push
iret
xchg
xchg
lahf
lds
inc
inc
dec
out
xor
jle
std
ret
mov
push
add
lea
add
add
mov
les
mov
mov
jo
hlt
dec
sbb
or
mov
add
fstpt
add
push
and
inc
test
mov
test
dec
aas
xchg
sbb
mov
aam
inc
jb
outsl
in
scas
xchg
mov
shlb
pop
xor
mov
adc
roll
inc
inc
lds
sarl
rcrl
ja
dec
ja
push
mov
sbb
arpl
sbb
pop
sbb
jmp
push
mov
mov
dec
mov
test
mov
lea
inc
out
loopne
pop
out
add
es
fs
cld
mov
dec
lods
cld
dec
pop
iret
fs
lret
shlb
cmp
stos
call
insb
push
es
pop
cmp
imul
add
dec
stc
loope
cmp
xchg
scas
popa
shll
adc
addb
mov
stos
fs
insl
jl
iret
or
sbb
mov
dec
mov
dec
fisubs
jecxz
dec
jae
incb
clc
xchg
shll
mov
lds
mov
or
xchg
pop
jbe
lods
push
out
mov
cmp
addl
repnz
mov
inc
ficoml
xchg
xor
ss
and
inc
xor
push
aam
jl
popf
cmp
mov
rcl
shr
push
out
lcall
sbb
mov
cmpsl
test
or
fadd
hlt
aad
push
jg
sub
push
cmpl
aam
repnz
xchg
in
cwtl
in
inc
and
std
movsb
outsb
add
xor
xor
xchg
inc
jg
fldcw
sbb
ret
in
sub
xor
sbb
mov
rcrb
imul
cwtl
scas
sbb
mov
dec
xor
stc
movsb
xor
mov
lods
in
ljmp
sub
lds
ja
divb
imulb
dec
imul
jge
sub
cmp
cmp
icebp
dec
imul
in
aad
lods
sbb
push
fsubrs
mov
bnd
jg
outsb
mov
adc
xor
sbb
divb
push
les
fidivs
xchg
es
lea
stos
xchg
mov
pop
jns
mov
repz
in
popf
mov
sub
xor
jo
dec
jne
and
cwtl
das
pop
fists
mov
mov
mov
lea
push
call
mov
aam
scas
sub
sbb
jle
dec
loop
mov
arpl
popa
std
jb
or
loope
add
pop
test
insb
xlat
fistps
rcll
cli
aam
rcl
jb
inc
sbbb
out
fisubrl
jl
stc
es
fwait
cmc
dec
ds
pusha
jecxz
jae
repz
push
xchg
shll
fildll
pop
popa
mov
push
mov
sub
aam
jg
adc
jae
cs
clc
push
push
and
stos
and
pop
cmp
adc
repz
dec
pusha
pusha
in
pop
mov
loope
addr16
mov
stos
dec
clc
sub
out
mov
addr16
inc
lcall
rolb
lods
jl
int3
jg
cmp
daa
call
imul
xor
fstpl
mov
arpl
rcrb
iret
addl
loope
stos
pop
cwtl
int
push
sbb
mov
jns
es
sbb
push
add
xchg
cmpsl
int3
xchg
mov
shl
inc
xor
or
jae
push
dec
outsl
sahf
rcr
cmp
pop
inc
icebp
fidivrl
outsb
imul
or
dec
add
mov
and
sub
ficomps
mov
aam
stos
out
scas
mov
pop
jnp
cltd
fdivrs
xorb
mov
xchg
sbb
cmp
out
arpl
mov
inc
jb
dec
push
add
idivl
inc
dec
movsb
jmp
pop
ja
aam
push
and
adc
xchg
dec
xchg
aam
in
lods
aas
add
fisubs
xchg
jmp
ljmp
lods
cmp
insl
test
adc
jb
adc
dec
sub
pop
fcompl
movsb
loop
dec
nop
xchg
sbb
in
pusha
es
in
xor
stc
or
push
push
mov
pop
xor
sbb
divb
popf
xchg
sub
insl
cltd
push
outsb
jbe
repnz
xlat
lods
adc
bound
mov
cwtl
gs
bound
leave
notb
xchg
repnz
jo
fnstcw
jl
mov
jae
pusha
call
addr16
add
ja
rclb
ds
jnp
imul
xchg
movsl
inc
lds
jg
dec
sub
and
sub
daa
mov
pop
xor
outsb
pop
je
push
mov
es
mov
mov
xchg
into
add
jo
or
test
pop
pop
add
inc
int
inc
imul
mov
adc
mov
fucomi
dec
push
lret
repnz
sbb
xor
imul
js
pop
mov
cwtl
mov
mov
faddl
and
cmp
cwtl
scas
daa
movsb
sbb
dec
mov
popf
mov
outsl
or
mov
shlb
icebp
clc
mov
repnz
mull
push
adc
fsubs
movsl
cmp
mov
push
std
jl
dec
lods
adc
adc
icebp
in
cmp
movsl
xchg
jmp
pop
xchg
mov
out
mov
cltd
scas
inc
mov
push
xchg
addr16
or
and
xlat
loop
mov
inc
inc
adc
addr16
fs
adc
pop
xor
aam
std
iret
push
inc
mov
daa
mov
mov
push
fcoml
dec
hlt
cwtl
faddp
pop
ret
mov
cmpsl
inc
push
xchg
fistps
and
sbb
scas
jb
pop
mov
push
xchg
jg
and
loopne
into
insl
rclb
jge
ficompl
pop
lods
subb
stos
lock
xchg
addr16
pop
insl
imull
sub
pop
cmp
fstl
adc
xchg
adc
mov
jle
sub
and
idivl
mov
mov
xrelease
cltd
jle
pop
test
lods
pushf
fimuls
aaa
idivb
popa
mov
mov
movsb
lds
xor
outsl
mov
cmp
daa
fistl
lret
fcmove
sub
push
test
andl
cmc
xor
jb
sub
ljmp
fcoms
mov
mov
inc
cs
cwtl
inc
push
dec
push
jmp
cmp
pop
and
insb
js
nop
adc
daa
and
ss
popa
cmp
mov
loop
mov
test
mov
dec
loop
add
jo
sarb
push
pop
mov
sub
jge
es
or
inc
int
xlat
and
rclb
jecxz
add
mov
or
out
jne
cld
fbstp
push
incb
imul
ss
fstp
imul
adc
sub
sbb
ds
addb
das
bound
and
xchg
sbb
or
pop
or
add
dec
xchg
call
inc
cmp
inc
jg
pop
pusha
data16
pop
sbb
pop
jo
and
ret
lock
xor
dec
cwtl
insb
mov
es
int
int
cli
cmp
xlat
cmp
subb
dec
es
gs
xlat
sub
ja
popa
lcall
or
jno
out
adc
out
mov
cwtl
sbb
adc
add
aam
pop
dec
pop
xchg
rcr
lods
mov
ret
mov
xor
cmp
add
decb
and
movsb
mov
ja
ret
xchg
cld
pop
test
cmp
push
and
scas
push
pushf
shr
add
js
sbb
lret
insl
sbb
mov
roll
jbe
xor
mov
pushw
cmp
cmp
pop
mov
fistps
sbb
stos
inc
dec
aas
inc
fidivs
fcmove
lret
ret
stos
mov
fcmovnb
jnp
adc
cmp
ljmp
fstps
push
pop
ret
pop
pop
imul
xor
dec
fimuls
insb
rcll
outsl
mov
mov
in
xchg
or
pushf
xchg
mov
mov
icebp
push
or
or
cltd
or
mov
adc
movsl
jo
xor
mov
pop
in
mov
push
mov
add
sbb
scas
ds
jecxz
pop
xchg
sbb
repnz
inc
fcoml
push
sahf
loopne
lcall
cmp
mov
icebp
ja
cmp
push
rol
in
jg
cld
push
pop
mov
iret
dec
sub
xlat
add
sub
xor
ja
push
out
inc
cwtl
lret
add
jmp
fimuls
mov
mov
mov
fwait
stc
sbb
jnp
imul
sti
stc
repz
add
sbb
ja
sti
push
lods
xchg
pop
xor
cld
add
aad
sahf
xor
mov
jp
lods
enter
pop
lea
cmc
ja
stos
shll
cmpsb
dec
nop
mov
test
cmp
adcl
jne
mov
sar
decb
mov
iret
jnp
or
repnz
std
sub
mov
pop
push
js
adc
dec
push
std
stos
or
add
sub
fs
xchg
data16
mov
xor
xchg
pop
subl
mov
mov
mov
mov
jae
jl
sub
pop
stos
shr
out
fldt
out
mov
test
or
inc
mov
jl
das
push
xchg
jg
mov
lods
mov
popa
push
adc
bound
adc
jb
push
mov
jns
sbb
cmpl
ss
mov
push
mov
cli
int3
lret
test
xchg
stc
fsubrl
dec
imul
jo
out
ds
pop
adc
ja
mov
adc
lret
pop
jno
scas
mov
aad
pusha
insb
and
shll
lcall
call
xor
mov
push
cmp
add
cmp
jne
push
je
adc
les
push
push
fisubs
sub
test
mov
push
pop
dec
xchg
sub
imul
cmp
jne
xchg
xchg
test
xchg
scas
shlb
mov
adc
dec
xor
in
adc
addl
in
pusha
test
and
in
pop
push
inc
pop
inc
dec
sbb
sub
lahf
call
cmp
mov
ds
mov
das
cmpb
int
mov
cmp
cmc
push
cmp
cli
mov
pop
std
push
imulb
dec
pushf
sbb
jl
sbb
xor
mov
das
lret
movsb
addr16
sub
hlt
inc
jne
in
sub
pop
lcall
or
stos
dec
mov
push
out
ja
outsb
repnz
fldcw
and
lret
pop
mov
push
adc
mov
ss
xor
sahf
cmp
daa
and
cwtl
cltd
dec
loope
sqrtps
pop
cli
mov
adc
arpl
hlt
cli
cmpsb
pop
pop
add
mov
jecxz
xor
jmp
jle
cmc
add
jge
in
ljmp
fs
jp
adc
mov
cmpsl
jg
sub
ds
or
ret
jne
fdivl
hlt
ljmp
sub
cld
idivb
enter
in
das
mov
add
sbb
jb
xchg
push
shrb
mov
sbb
xor
out
loopne
sbb
addr16
adc
leave
aas
sbb
fsubs
leave
cltd
mov
push
and
decl
sbb
fnstenv
aas
sahf
jbe
ja
lock
lret
aad
xor
or
or
pop
mov
adc
in
loope
sbb
or
add
sub
imul
enter
sub
roll
into
cwtl
jne
jp
sbb
adc
inc
aam
mov
or
and
pop
sub
aaa
sub
pop
fistpll
lea
mov
jecxz
mov
fs
jp
in
mov
xchg
xchg
xchg
test
and
decb
stos
and
push
std
adc
cmp
jnp
in
loope
push
out
ds
and
fadds
sahf
or
fidivl
inc
addr16
mov
mov
js
ret
mov
mov
xor
out
mov
push
mov
add
fwait
xor
pushf
pop
push
add
jns
enter
push
int3
or
repz
out
inc
ljmp
in
popa
daa
outsb
cmp
fcompl
xor
icebp
sub
loop
sti
xlat
xchg
aad
xor
imul
clc
push
loope
inc
inc
repz
dec
pop
dec
sub
test
jns
add
ja
testb
cwtl
push
and
int
dec
sbb
imul
cmpb
xor
in
rcr
mov
inc
in
adcb
mov
xchg
adc
cmc
adc
push
or
popa
mov
iret
mov
pusha
sbb
inc
in
jle
dec
dec
inc
test
pop
push
mov
add
outsb
mov
in
in
mov
jnp
mov
stos
sub
sub
sbb
jnp
push
cmp
mov
ljmp
jb
js
les
imull
inc
inc
andl
or
mov
mov
fcompl
sbb
or
mov
cli
or
out
pop
outsb
jae
add
cmp
leave
hlt
mov
popa
mov
shrl
cmp
xor
insl
mov
aas
cmp
or
or
dec
jmp
and
bound
pop
sbb
aad
test
cmp
mov
in
mov
hlt
movsl
push
rclb
mov
scas
lds
mov
dec
push
dec
and
mov
jp
sub
pusha
scas
xor
outsb
push
ret
or
push
cwtl
xlat
mov
into
inc
or
adc
push
leave
outsb
test
pop
jmp
decb
jns
fisubs
dec
xchg
xor
mov
cltd
mov
ret
jg
sahf
paddw
out
stc
xchg
dec
int3
pop
pop
popf
outsb
rorl
sbb
jp
push
and
sub
add
push
adc
mov
stos
jae
pop
mov
addr16
repz
pushf
repnz
mov
ja,pt
lret
movsb
cs
clc
je
push
jmp
fs
xor
pop
outsb
rolb
mov
push
std
scas
mov
dec
push
aas
orb
dec
test
or
adc
xorl
pop
mov
sarb
sbb
out
jne
push
mov
xor
xchg
xor
mov
xchg
imul
mov
incl
jecxz
jb
call
push
jae
idivl
mov
in
pop
jl
mov
addl
sbb
jns
movsb
xor
ja
add
mov
jno
dec
jecxz
or
mov
aaa
mov
xor
mov
insb
xor
test
pop
mov
dec
pop
aaa
arpl
mov
sbbl
and
pop
jge
dec
rolb
jbe
ss
push
lret
popa
shrb
mov
jp
or
mov
inc
ljmp
stc
cli
inc
test
mov
pop
lahf
cld
cltd
add
in
pop
sbb
lds
mov
jmp
push
mov
lea
rorb
jmp
cmpsb
xchg
sbb
in
fisubs
idivb
mov
inc
pushf
cwtl
enter
dec
call
insb
dec
mov
shll
lds
adc
inc
mov
xor
lret
jno
add
or
es
or
fdivl
sub
mov
jl
popa
jg
and
stos
dec
pop
ja
and
push
lds
xchg
pop
hlt
psubusb
mov
push
and
cmp
icebp
adc
aad
or
mov
arpl
icebp
rcll
mov
fs
lods
js
sbb
xchg
xchg
scas
mov
fcomps
shr
jge
push
pmulhuw
mov
stc
push
loopne
pop
or
mov
mov
test
insb
xor
jae
rcr
adc
xor
repnz
xor
xchg
mov
js
xchg
subl
idivl
imul
hlt
adc
pop
sub
pop
test
inc
bound
js
mov
mov
inc
sahf
xchg
insl
in
insl
scas
lcall
pushf
nop
cltd
mov
repnz
in
les
sub
test
fnstenv
sbb
lret
jmp
ss
daa
pop
pop
cmpsb
cmpsl
fnstcw
insl
ljmp
cmpl
cltd
sub
jg
cs
pop
lret
push
gs
rcrb
sbb
mov
loopne
sub
mov
xchg
std
cmp
lret
outsb
into
cmp
push
ja
call
in
xchg
lods
inc
addr16
xchg
dec
sahf
mov
mov
cmp
jb
gs
push
jne
cld
jmp
iret
sub
test
pop
inc
mov
jmp
sbb
out
cltd
xchg
fildll
push
fcoms
adc
mov
pushf
lret
jp
fisttps
mov
dec
jmp
jne
ror
add
jno
cli
mov
lahf
pop
in
in
sti
push
cwtl
xchg
dec
es
and
cld
push
adc
push
jecxz
xchg
push
insl
push
js
mov
jb
arpl
mov
imul
out
in
push
imul
push
dec
dec
rorb
mov
js
mov
push
jle
and
sbb
adc
icebp
mov
cmpsb
sbb
add
mov
mov
inc
push
and
cmp
pop
outsl
sub
fwait
mov
jb
cld
add
cli
daa
xor
ss
jl
ror
mov
xchg
jl
mov
dec
and
sub
xchg
and
iret
xor
mov
push
inc
std
mov
or
mov
cmc
jmp
mov
test
orl
jo
push
mov
mov
sahf
jge
xor
pop
pop
dec
insb
ret
cmc
and
push
push
rcrl
xchg
in
dec
mov
xorl
ret
inc
mov
sbb
fdivs
and
call
pop
dec
pop
movsb
in
mov
cmpsl
or
negb
adc
add
cmpsb
cli
sub
mov
adc
ficoms
cmpsl
lock
frstor
xor
test
mov
push
mov
mov
push
sbbl
mov
and
jns
xor
pop
sbb
cmp
pop
sbb
sbb
sub
popa
inc
lea
insl
mov
and
xlat
inc
cmpsl
repz
cmpsb
xlat
mov
sbb
xor
push
clc
sub
sub
ss
push
aam
dec
rcl
push
cmc
or
sbb
mov
push
sub
scas
jecxz
xchg
and
ds
js
mov
les
je
pop
sub
add
xor
xor
hlt
dec
das
push
daa
iret
mov
je
mov
test
jne
mov
pusha
ss
sti
jo
movb
test
popa
xlat
fstpl
sub
in
jecxz
insl
pop
adc
cmp
mov
push
cmp
popl
call
scas
subb
fistps
or
or
mov
jae
mov
dec
sub
cld
in
add
ds
sub
leave
and
dec
push
jmp
mov
push
popf
pop
incl
add
fistpl
mov
ja
hlt
jp
push
push
mov
mov
jbe
adc
test
test
mov
aaa
pop
outsl
fstpl
mov
test
cmp
push
and
aaa
xchg
sbb
test
jp
jne
je
loope
sub
jle
clc
aad
and
rcl
pop
adc
sbb
or
roll
dec
jmp
adcl
and
call
repz
pop
jp
pop
stos
inc
mov
nop
add
adc
xchg
movsb
cmpsl
je
imul
jne
inc
mov
jnp
aam
dec
add
mov
jbe
sbb
push
std
xchg
lcall
idivb
xlat
xor
mov
decb
mov
rcrb
sbb
mov
adc
mov
adc
ss
lods
dec
gs
cmp
sub
mov
into
and
mov
cmp
hlt
mov
cmp
loop
testb
xor
and
arpl
inc
inc
out
mov
std
pop
repz
cmp
mov
stos
fcompl
int
into
pop
pop
sahf
fidivs
cwtl
jbe
and
pop
lahf
sbb
push
cmp
bound
add
sbb
push
sbb
test
lods
pop
out
enter
add
push
xchg
adc
jl
cwtl
js
xor
jp
test
aas
stos
pop
jb
mov
and
push
mov
or
pop
mov
dec
hlt
ss
lds
adc
sub
fdivs
cmp
dec
les
adc
sbbb
xchg
cmp
mov
loope
inc
pop
adc
subl
cmpb
pop
cmp
ja
movsb
les
ds
mov
into
jle
roll
pop
xor
mov
in
int3
xchg
in
bound
push
ret
shl
fsub
xor
in
jle
cmp
lahf
stos
mov
jbe
jno
push
nop
xor
sahf
cmpsb
fsubs
stos
dec
mov
xor
jo
dec
and
dec
dec
sbb
gs
cs
sarb
iret
adc
push
mov
adc
xor
rorb
pusha
jno
mov
cmp
mov
repnz
pop
mov
jp
lahf
jmp
idivl
sub
shl
stos
cmpsl
mov
ret
stos
xchg
inc
cmpb
addb
pop
pop
pop
cmc
jge
jp
xchg
push
cs
pop
mov
sub
cmp
jge
xor
mov
push
ror
mov
mov
loop
lea
push
into
push
jle
orb
sub
adc
test
gs
add
js
stos
lcall
imul
std
ss
push
and
insl
sub
sub
inc
mov
mov
into
dec
dec
and
int
outsb
sbb
aam
inc
std
and
mulb
push
xchg
repnz
loop
mov
fdivrs
aaa
addr16
out
mov
cmp
in
push
or
jmp
mov
cmp
fadd
pop
and
rol
dec
enter
imul
fs
ljmp
inc
insb
and
out
loopne
adc
dec
mov
mov
xchg
pushf
mov
push
out
mov
inc
fidivrs
pushf
int
lcall
jo
push
pop
mov
and
xchg
loopne
out
add
add
mov
and
test
insb
lods
jecxz
add
test
incb
rclb
xchg
iret
cmp
fcmovnb
xchg
js
dec
or
adc
adc
and
sub
mov
daa
les
fistpl
cmp
push
xor
xor
mov
fnstsw
xchg
adc
imul
mov
lahf
mov
je
js
xchg
fdiv
fisttpl
pop
xlat
add
jns
jns
shld
pop
dec
out
rcr
or
repnz
sub
dec
movsl
rcll
jb
pop
mov
es
repz
pop
xor
rolb
jo
sub
and
pop
or
int
imul
xchg
sbb
scas
in
add
pop
icebp
mov
imul
lret
and
or
push
dec
or
bound
or
mov
sub
or
insl
cmpl
das
ss
or
jbe
push
fsubrl
and
and
cmp
xor
jns
outsl
ljmp
dec
inc
jg
ror
mov
adc
inc
jmp
xchg
nop
leave
add
sub
outsb
mov
loop
pop
sub
pop
xchg
scas
fs
cwtl
addr16
jmp
ja
push
fiadds
or
lret
fxch
pop
ja
mov
enter
shrl
add
push
cmp
fldl
nop
adc
addb
fs
dec
jno
mov
repnz
flds
mov
dec
shl
insb
push
inc
and
es
andb
shrl
fistpll
ret
adc
pop
push
push
sbb
loop
das
ljmp
push
insb
push
lahf
dec
sbb
push
std
leave
pop
xor
stos
int3
cwtl
push
je
outsl
sbb
lea
adc
in
sbb
xor
ss
dec
imul
stos
sbb
fs
and
out
push
in
and
cmpl
icebp
mov
pop
movsw
pop
repz
cwtl
mov
mov
in
cmp
mov
fcmovnu
add
loope
test
sub
jp
cmp
cmpsb
test
add
cmp
or
movsl
mov
fildl
stos
mov
jl
pop
orb
pushf
out
fxch
cmp
sub
push
addr16
test
jnp
pop
inc
test
push
mov
add
sub
mov
into
pop
aad
pop
out
daa
pop
xor
test
sub
xor
xchg
inc
inc
fdivp
scas
xchg
dec
test
jl
mov
lahf
push
xor
push
popf
out
add
not
mov
jg
cmpsb
cmp
lds
jge
adc
icebp
or
push
sbb
jge
add
out
test
sub
mov
incb
cltd
shl
std
xor
fsubs
add
pop
push
add
jmp
sub
leave
mov
loope
push
and
dec
push
sar
mov
inc
sub
lods
dec
pop
pop
pop
addl
inc
cmp
and
aam
mov
and
daa
aas
outsb
push
popf
pop
lods
xchg
test
mov
sub
shlb
ja
sbb
inc
pop
mov
or
mull
xchg
or
pop
imul
sbb
lock
xor
idivb
aas
mov
adc
push
sbb
xor
and
out
add
xchg
or
movsl
xchg
sub
jmp
mov
loopne
push
or
dec
push
or
pop
cltd
mov
push
clc
jb
iret
dec
in
inc
out
rolb
xor
test
cmp
lret
jo
xchg
int3
bound
dec
pop
mov
ljmp
inc
mov
cmpl
sub
add
xor
sbb
inc
cmp
aas
out
push
xor
sub
push
bound
push
sbb
adc
cltd
mov
into
push
scas
pop
rcrl
xchg
testl
scas
xor
xor
iret
mov
jnp
aam
mov
cltd
inc
sbb
js
sbb
ret
cmp
dec
shlb
ja
inc
mov
adc
mov
and
jmp
test
iret
fsts
pop
xchg
mov
push
jns
jae
ret
add
test
in
mov
scas
jecxz
lcall
daa
xor
add
and
or
aaa
lcall
imul
inc
mov
cmp
or
enter
or
fdiv
adc
or
loopne
and
in
bound
test
repz
xchg
xchg
imul
sub
iret
pusha
inc
dec
adc
dec
add
clc
js
test
xor
repnz
loop
fiaddl
imul
add
mov
and
push
mov
jno
xchg
iret
cli
retw
pop
mov
fnstcw
or
jb
xlat
call
in
push
movsb
or
pop
ljmp
mov
roll
dec
mov
arpl
out
jg
jo
lret
filds
or
pop
xor
add
mov
pusha
sbb
push
imul
fcomps
inc
add
sbb
push
out
add
fmull
inc
mov
fldl2e
add
pop
mov
fidivl
decl
ds
dec
cs
jbe
addr16
inc
jg
je
loope
or
inc
mov
cmp
gs
inc
daa
add
push
xor
pcmpgtw
pop
shrl
and
sti
in
xchg
adc
fnsave
cltd
mov
adc
jne
jmp
popf
outsb
inc
dec
shlb
pop
sbb
mov
ret
and
js
mov
andb
ss
icebp
pushf
xchg
cwtl
and
cmp
mov
test
clc
jb
cmp
mov
adc
cmp
popa
orl
push
cli
cwtl
xlat
mov
cmpsl
fsubs
sub
pop
cld
gs
lods
xchg
sub
call
pop
loop
jo
repz
aas
sbb
pop
adcb
pop
fcoms
pop
dec
movsl
ficoml
add
loop
shlb
mov
aaa
cwtl
into
cmp
stos
int
xor
mov
xchg
jno
call
nop
out
xchg
push
xchg
in
loopne
xlat
ret
and
rcrl
inc
jne
inc
insl
push
dec
aad
aaa
or
dec
xchg
push
xor
push
dec
into
and
andl
adc
stos
out
and
sbb
sbb
push
stos
jl
repnz
dec
lock
bound
sbb
rolb
into
aam
dec
and
pop
push
push
push
sbb
into
and
jl
inc
mov
and
sbb
shll
sarl
sub
cmp
ret
mov
pop
cmc
cmc
adc
fisubs
adcl
iret
push
jns
outsl
pop
or
cmp
mov
movsl
fistpl
out
loope
sbb
cmpsl
popf
sbb
add
imul
lea
dec
imul
sub
or
inc
add
add
add
add
xor
cmpl
jne
push
call
cmpl
jb
sbb
mov
mov
xor
xor
incl
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
xor
mov
or
mov
xor
add
mov
decl
mov
xor
add
sbb
mov
sub
lea
xor
xorl
xor
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
xor
sbbl
add
movl
cmp
movl
jne
pushl
adcl
call
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
xor
sbb
mov
xorl
add
movl
cmp
je
addl
pushl
pushl
orl
call
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
and
mov
and
mov
mov
decl
xor
add
movl
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
sbb
push
mov
adc
mov
push
mov
adc
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
movl
mov
adc
jmp
gs
jne
jle
repz
std
sub
jp
adc
in
roll
notb
lods
inc
test
jae
test
stos
test
push
test
mov
mov
call
jecxz
mov
outsb
jo
out
push
ja
inc
xchg
lds
leave
jp
pop
cmp
xchg
lret
mov
movsl
lock
xlat
mov
cmp
int3
dec
add
dec
andb
fdivrl
rcr
scas
xchg
and
fildl
rol
sbb
xor
xchg
dec
mov
mov
in
push
pusha
cmpsl
push
sub
ja
cmpsb
in
pop
pop
lahf
sub
aam
in
in
jmp
nop
aam
shlb
pusha
out
mov
sub
je
rcr
iret
out
dec
jecxz
movsb
in
mov
jne
divl
cmpsl
cmpsb
scas
mov
mov
mov
test
jmp
sub
shrb
mov
sub
cli
int3
setb
jne
and
dec
movsl
jo
push
mov
fwait
push
cmp
in
sbb
int
outsb
div
fdivrl
adc
mov
cli
iret
mov
pop
outsb
or
push
add
into
sub
je
sbb
mov
fdivrl
lods
mov
neg
test
xor
flds
cmp
mov
pop
pop
sub
aas
mov
push
hlt
cmp
xorps
iret
pop
lods
or
mov
mov
aad
jp
mov
lcall
rcrl
mov
jne
xchg
push
scas
idivl
fsubrl
imull
mov
jne
cmp
jle
xchg
iret
pop
mov
lcall
pop
js
out
stc
lahf
mov
pop
fsubrl
fldl
and
adc
jp
fistpl
int3
clc
jb
call
std
mov
outsl
cmp
test
lret
mov
inc
loopne
lahf
jb
xchg
push
xlat
je
test
lret
add
cmp
enter
clc
mov
push
lcall
push
mov
jecxz
notl
std
add
enter
sub
imul
movsb
add
adc
jecxz
jmp
js
leave
mov
aad
insl
xchg
inc
ficomps
movsl
mov
nop
xchg
cltd
cli
mov
leave
adc
roll
pop
dec
dec
repnz
popf
pop
imull
out
js
pop
mov
imul
jmp
xchg
jge
adc
ljmp
loopne
leave
and
arpl
addb
test
in
xchg
dec
imul
jo
add
lcall
sub
mov
add
or
cmp
cmpsb
iret
bound
sti
sbb
adcl
pop
adcl
cmpsl
dec
inc
pushl
cmp
xchg
and
cli
sub
xor
stos
test
test
orb
mov
pop
data16
pop
adc
faddl
cmp
inc
nop
mov
imul
push
js
lret
adc
outsb
repnz
addr16
or
adcb
loop
aas
sbb
hlt
pusha
lea
jg
cmp
aaa
mov
jmp
add
jns
shrb
fistpl
nop
mov
fyl2xp1
dec
stos
ret
mov
and
lcall
add
adc
out
xlat
jle
push
pop
lods
jle
cmp
imul
ss
pop
mov
xor
mov
nop
loope
sub
push
jbe
mov
in
cs
adc
jp
rorb
gs
mov
ja
shll
popa
out
push
xchg
mov
mov
cwtl
push
mov
push
pop
stos
add
shll
xor
inc
or
cmpsb
or
stc
mov
ss
stc
pop
push
repnz
inc
lcall
popa
adc
addr16
cli
cwtl
sahf
sub
loopne
xor
add
lahf
mov
jbe
push
sbb
dec
and
shlb
jg
xchg
adc
push
cmp
rcrb
in
repnz
test
xor
test
mov
sahf
dec
rclb
ret
rolb
xor
aaa
inc
pop
lret
cmp
mov
adc
out
int3
and
or
cltd
dec
adcl
mov
jp
outsb
enter
fdivrs
stc
stos
div
test
cmp
mov
pop
pop
or
push
loopne
shrl
out
mov
xor
jae
adc
out
xrelease
lods
dec
xlat
and
out
imul
push
xchg
loopne
pop
stos
and
cmpsb
out
aaa
gs
xor
sub
mov
cltd
cld
or
mov
repnz
aas
pop
call
in
add
sbb
mov
push
in
adc
fistpll
insb
daa
dec
imul
lea
cltd
mov
dec
loop
mov
das
je
cmpsb
push
into
sbb
push
xchg
icebp
arpl
hlt
in
push
sub
mov
mov
xor
sub
sbb
or
sbb
jae
jp
mov
pop
cld
insl
out
les
outsl
xchg
lods
call
inc
jge
sbbb
stos
call
or
es
ret
and
cmp
inc
aaa
scas
jge
popf
xchg
outsb
mov
lds
add
les
mov
or
pop
pop
mov
and
dec
out
or
call
mov
popf
cmpsb
scas
in
xchg
push
xchg
cltd
push
outsb
or
lahf
xor
repnz
mov
xor
mov
setl
xor
adc
das
mov
mov
jp
mov
inc
shlb
cmpb
lock
frstor
pop
sub
push
stos
inc
dec
cmp
xchg
add
bound
pop
or
mov
ljmp
jge
cli
adc
adc
pop
sar
outsl
jp
sub
push
mov
popa
in
cmpb
sbb
popa
fstps
add
dec
inc
adc
xor
outsl
mov
repnz
std
dec
scas
push
addr16
leave
int
xor
fildll
test
and
mov
xchg
scas
or
sbb
fxch
out
mov
push
cmp
into
hlt
sahf
push
jns
test
data16
faddl
inc
and
loope
shlb
into
ss
leave
aaa
xchg
jbe
sbb
data16
repnz
out
mov
or
xor
subb
jo
mov
inc
sbb
mov
rclb
or
and
or
sbb
ret
sahf
icebp
fyl2xp1
js
ret
jmp
incl
shll
shrb
xor
data16
cltd
sub
adc
pop
sbb
pop
pop
rcl
pushf
sbb
ret
bound
mull
aad
jns
xor
mov
imul
loope
inc
pop
je
add
leave
popf
push
pop
adc
lock
mov
sbb
pop
fiaddl
pusha
mov
sar
jno
pop
and
adc
mov
push
ljmp
icebp
sbb
or
add
imul
push
mov
mov
leave
adc
or
cmp
movsb
push
dec
cwtl
and
cmpsb
movsl
dec
sahf
pop
add
frstor
adc
pusha
aam
xor
repz
cmp
mov
icebp
nop
adc
negl
jbe
sbb
enter
xchg
enter
mov
sub
push
cmp
rcll
out
rclb
jae
in
jmp
hlt
add
and
popaw
xor
bound
loope
xchg
and
jmp
int
addr16
inc
inc
loope
pop
dec
lret
outsb
xor
push
rdmsr
addr16
inc
int
cmp
sub
in
dec
into
add
sbb
pusha
dec
pusha
leave
push
push
ret
push
mov
inc
cltd
fs
mov
in
pop
pop
lret
cltd
xchg
cli
inc
int
sbb
and
bound
push
shll
jle
gs
das
mov
jmp
call
ret
mov
add
push
repz
adc
mov
rcrb
or
adc
pop
jecxz
and
ja
inc
shll
jo
push
insl
cmp
xchg
dec
or
outsb
dec
adc
sbb
xchg
xor
push
std
ret
out
je
ret
movsl
int
inc
push
mov
xchg
or
adc
mov
lret
mov
iret
shl
sbb
or
cld
xchg
loopne
xchg
pushf
adc
mov
pop
push
pop
mov
sub
mov
adc
cltd
test
std
rorb
and
and
mov
push
es
jecxz
les
les
sbb
movsb
push
jmp
sub
xor
in
insl
iret
mov
loop
xchg
out
jl
es
scas
mov
fsubrs
loopne
pop
mov
adc
pushf
add
or
gs
imul
inc
aas
aaa
cmp
xorb
jo
dec
and
lock
test
mov
test
jl
or
bound
roll
mov
aam
lods
scas
leave
jb
pop
stos
pushf
insb
int3
mov
mov
mov
jbe
mov
dec
jge
sbb
mov
es
or
sub
adc
bound
test
insb
inc
pop
pop
loop
test
or
and
pop
ljmp
addr16
adc
sbb
loopne
loop
test
and
fnstenv
mov
cwtl
aaa
shlb
adc
cmc
test
insl
cli
add
push
cmc
pop
push
pop
sarb
into
in
push
cmc
cmpsb
test
mov
movsb
dec
mov
orl
cld
fsubrs
mov
arpl
shr
mov
call
push
pop
mov
cmp
push
and
lock
int3
gs
pop
ret
ljmp
scas
lea
inc
mov
mov
std
stos
cld
dec
dec
push
xor
sbb
into
xchg
xor
push
enter
fdivr
shll
fistpl
mov
push
inc
arpl
inc
dec
add
and
hlt
imul
cmp
mov
test
pushf
out
sub
add
sbb
hlt
and
cmp
ret
cmp
jno
pop
and
cmpl
mov
enter
add
in
cltd
outsl
jae
push
dec
inc
stos
fcompl
xlat
add
bound
and
loop
repz
stc
pusha
fstpt
inc
subb
int
mov
clc
lea
hlt
out
lea
push
jns
or
sbb
out
scas
adc
and
jge
icebp
in
enter
push
ja
adc
adc
pop
imull
scas
das
js
insb
pop
dec
sbb
jae
mov
jg
dec
in
mov
ljmp
fisttps
pop
xor
std
fcmovnu
sbb
sub
mov
shll
ret
sub
inc
or
insl
int3
push
aam
ret
mov
sbb
push
aaa
scas
mov
jae
fimull
inc
ss
pop
mov
loop
sar
or
mov
add
and
adc
push
jl
mov
out
divb
lret
push
cli
push
mov
xor
je
adc
jle
fldl
jbe
xchg
imul
xor
pop
sub
and
aaa
sahf
inc
dec
out
daa
adc
loop
test
enter
xchg
gs
mov
mov
pslld
mov
outsb
jb
repz
movsl
mov
mov
std
inc
popa
sub
mov
or
sti
stos
mov
out
loope
and
in
leave
ja,pn
ret
xrelease
inc
aaa
dec
adc
pop
pop
adc
mov
cs
popa
popf
push
ficomps
ror
bnd
shll
mov
scas
mov
push
movsb
or
test
xchg
mov
pop
daa
xor
jle
pop
fisubrl
mov
adc
and
xor
xchg
cmc
ja
mov
push
roll
icebp
lcall
out
or
mov
sbb
push
mov
xchg
shl
xor
jl
push
jl
sbb
scas
sbb
adc
aaa
inc
jne
jg
inc
xor
mov
pop
stc
xor
lock
dec
gs
out
das
ljmp
loope
xchg
icebp
push
jmp
loope
out
push
push
sub
inc
into
cmc
mov
cmp
test
lea
xchg
xor
inc
imul
sbb
sbb
bnd
add
push
jne
jo
lcall
arpl
mov
fwait
xor
arpl
or
nop
nop
popf
icebp
pop
and
icebp
pop
sub
mov
call
add
push
fcomp
test
sbb
daa
lock
pop
shll
and
mov
clc
es
lock
orl
movsb
incb
sub
scas
lret
mov
in
mov
adc
lret
push
inc
outsb
dec
push
fdivs
push
mov
and
xor
xlat
mov
inc
adc
xor
jnp
lcall
pop
push
rcrb
jae
xor
adc
lock
jmp
in
enter
jge
shlb
push
pop
popa
xor
popf
sbb
sbb
fidivs
sar
fcomip
fldt
subl
mov
andl
fistpll
rorb
lock
std
fs
inc
inc
xchg
xchg
xchg
cmp
inc
loopne
mov
mov
shlb
jae,pt
mulb
in
mov
repnz
int
pop
xchg
inc
push
xchg
mov
nop
cmp
std
daa
dec
sar
aaa
outsb
mov
fadds
and
std
je
mov
rcrb
pop
jae
sub
fchs
shrl
cmp
adc
mov
sbb
inc
pop
inc
mov
push
imul
ss
mov
cmp
push
and
popf
sbb
in
dec
jl
loop
dec
imul
lock
jp
call
add
pop
and
xor
adc
adc
mov
mov
cs
xchg
push
loope
test
sbb
mov
inc
ret
in
das
andl
shl
add
mov
mov
jle
es
lea
mov
aaa
xchg
outsl
or
lea
cs
sahf
cmp
pop
divb
and
sbb
neg
adc
or
outsb
sti
lea
dec
sub
dec
sbb
adc
scas
lods
jecxz
jns
pusha
and
leave
xchg
pop
cmp
xchg
cmpsb
adc
or
and
fisubrl
sub
dec
fs
shll
inc
xor
in
into
sbb
sbb
push
xlat
mov
jnp
push
pop
xor
movsl
jecxz
fbld
insl
cmp
ficompl
sahf
test
jmp
out
dec
inc
xor
and
stos
std
lds
lods
mov
cmp
jmp
add
sub
push
stc
test
and
cld
ret
jp
ror
inc
pop
inc
cs
pusha
cmp
push
cmpsl
sub
jnp
add
les
bound
into
popa
push
aad
jle
in
call
or
ljmp
mov
push
and
daa
adc
or
xlat
mov
ja
mov
push
cmp
cs
adc
pusha
push
sahf
fs
movsb
pop
lods
add
adc
push
cmp
mov
andl
or
ret
push
xchg
imul
lahf
outsl
stc
pop
inc
cwtl
push
adc
jb
dec
add
mov
mov
pop
push
mov
ficoml
mov
popf
out
inc
or
mov
fisttpll
push
and
movsl
pop
insl
ror
push
mov
outsl
lret
out
adc
leave
sti
das
and
clc
and
adc
ljmp
jb
dec
adc
out
scas
jmp
xor
sub
inc
xlat
jl
pop
mov
add
mov
rorl
pop
cmp
cli
call
adc
add
and
repnz
roll
sarb
scas
std
gs
bound
sbb
stc
mov
xchg
xor
and
les
or
push
pop
jg
dec
or
stc
rorb
jge
lret
sub
pop
mov
stc
pop
sbb
add
xor
push
jbe
popa
push
sub
adc
nop
ja
cmp
in
add
sub
adc
stc
lret
int3
xor
add
imul
je
fwait
inc
dec
cmp
xor
insb
sbb
cmp
mov
shl
sbb
popf
xor
cmpsl
fstpt
loopne
sbb
call
adcb
add
ds
xor
add
mov
outsb
xor
sbb
lahf
lcall
not
sub
fimuls
add
mov
sbb
imul
push
push
repz
sub
mov
ja
data16
das
mov
mov
cwtl
mov
dec
dec
sti
ss
jge
aad
cli
mov
dec
imul
dec
loope
xchg
ljmp
aas
cmpsl
push
outsb
and
jae
in
out
cmc
xlat
jge
je
push
ljmp
popf
lock
xor
ret
insb
jg
into
aas
jbe
addr16
jle
rol
xchg
dec
push
mov
xchg
fbstp
pop
int
mov
xor
mov
bound
cs
idiv
add
jmp
ret
sahf
jnp
insb
dec
add
adc
mov
mov
dec
mov
and
cwtl
mov
andl
movsb
dec
inc
mov
fpatan
pop
cs
push
add
lret
cmp
jb
xor
push
adc
call
or
outsl
idivb
cmc
daa
dec
cltd
xchg
aas
mov
mov
xor
sbb
mov
ds
dec
push
pushf
orb
add
add
arpl
jnp
mov
out
adc
jecxz
pop
es
add
pushf
gs
xlat
jns
cmp
cli
cmp
clc
shll
mov
fisttpll
call
outsl
lret
mov
push
mov
cmp
popa
jecxz
arpl
insl
push
popa
xchg
popf
push
out
jge
js
in
mov
leave
cli
inc
orl
cs
xchg
sbb
sub
push
mov
xor
loop
inc
fdivl
movb
ljmp
stos
xor
and
mov
mov
popa
xchg
fs
jno
stc
sub
scas
jecxz
push
into
mov
sti
out
dec
dec
pusha
add
and
fwait
jl
ss
mov
cli
bound
rcrl
xor
inc
sbb
inc
sahf
rcll
mov
push
insl
popa
popf
in
imulb
icebp
xor
lods
clc
out
adc
push
push
sbb
hlt
aaa
xor
inc
pop
sbb
es
or
dec
in
mov
fs
scas
pop
sbb
aaa
mov
enter
pop
loope
mov
and
stos
mov
out
push
mov
adc
andb
mov
adc
and
nop
add
adc
stc
adc
cwtl
pushf
cmp
aas
jg
sub
mov
jp
pop
sbb
or
lret
in
scas
jg
cmp
adc
loop
mov
cmp
popf
mov
pop
cltd
or
and
lret
ss
xchg
push
or
sbb
sub
or
push
aaa
cmp
cmp
aas
lock
mov
jns
in
xchg
les
dec
sub
test
mov
iret
nop
fiaddl
pop
bound
ds
cmp
xlat
data16
push
incl
xor
and
jmp
adc
sub
cmpsb
cwtd
xor
test
push
adc
fmul
andl
sbb
or
sbb
adc
jp
jo
sbb
jb
sbb
push
ret
daa
and
in
sbb
imul
in
push
add
shll
cvtps2pd
mov
les
inc
fldt
jo
jne
push
adc
push
sti
ret
rclb
push
stos
int
addr16
cmpl
dec
add
pusha
push
fimull
lods
or
xor
adcl
sar
test
cmp
push
sub
in
std
lahf
out
movsl
shr
sbb
dec
cmp
icebp
fwait
pop
dec
or
lea
leave
xlat
push
repz
xor
std
jmp
pop
mov
push
out
or
add
clc
aas
dec
jecxz
jmp
aam
push
xchg
jp
adc
push
jp
shlb
sub
cmp
jg
inc
pushf
mov
mov
out
outsb
cwtl
movsb
lret
dec
sub
adc
push
jecxz
xchg
ret
push
add
in
sub
lcall
mov
loopne
arpl
sbb
aaa
ss
lahf
out
lcall
dec
inc
adc
sbb
sub
fidivrs
jp
les
and
leave
clc
pop
ljmp
push
mov
lea
adc
in
dec
dec
repnz
cwtl
mov
cmp
mov
pop
leave
dec
iret
out
cmp
in
out
mov
arpl
jecxz
xor
jl
adc
mov
xchg
sbb
cltd
pop
aam
xchg
flds
jle
inc
stos
mov
pop
hlt
inc
std
movsb
mov
ljmp
mov
sub
aam
and
fidivrl
xchg
insb
cwtl
stos
pusha
or
mov
aas
sbb
xchg
cs
sahf
or
add
pop
push
mov
shl
decb
and
push
jns
jnp
lahf
test
sub
shll
inc
sbb
dec
inc
xchg
or
int3
cmp
mov
mov
stos
xor
nop
lret
pop
loopne
lret
mov
fs
push
pushf
lods
cmp
pop
in
inc
adcb
cmp
push
fpatan
inc
push
push
and
dec
pop
in
push
pop
fcoms
es
mov
add
repz
cli
mov
mov
inc
pop
cmp
xchg
fxch
push
lods
push
jle
jecxz
dec
addr16
jae
pushf
fidivs
xchg
adc
sbb
mov
aad
into
test
clc
sub
mov
pop
jl
inc
sbb
pop
push
mov
ljmp
dec
aad
xor
mov
sub
mov
imul
iret
and
iret
jno
hlt
ss
push
ja
cli
push
in
jae
jo
popa
push
shrl
add
sbb
clc
add
mov
pop
stc
dec
pusha
pop
std
pop
loopne
mov
sub
icebp
cmp
pusha
inc
jp
cli
add
inc
in
or
fwait
enter
aaa
fndisi(8087
cmp
cmpsl
aaa
mov
dec
jo
mov
shr
insb
shl
inc
jp
sub
fisttps
lret
xor
pop
lods
sbb
and
xchg
ljmp
mov
cmp
pop
add
push
dec
out
je
test
mov
fistpll
mov
stos
cmp
mov
inc
nop
mov
cld
and
dec
mov
movsb
xchg
adc
adc
test
pusha
call
roll
in
mov
adc
es
testb
inc
dec
loop
jg
xchg
mov
loope
and
ja
ret
lret
test
mov
add
push
push
add
push
mov
mov
outsl
and
cmc
add
jbe
mov
insb
push
add
stc
pushl
loope
in
pop
dec
mov
pop
test
jl
lods
cmp
mov
rorl
into
dec
jp
sahf
hlt
push
repnz
sbb
cmp
cmp
js
das
lret
mov
add
aam
xchg
and
scas
sbb
mov
les
pop
addr16
add
dec
inc
sahf
outsl
mov
add
push
packsswb
jecxz
cmp
cmp
push
jo
lods
out
mov
mov
or
pop
rolb
lahf
and
into
push
les
test
push
movsl
cmp
jne
clc
test
jecxz
jmp
and
test
adc
cmp
ds
cs
dec
sub
mov
push
or
ds
ja
inc
loop
dec
lock
clc
ss
cmpsl
bound
push
in
sbb
out
pop
in
push
sar
out
mov
movsl
stos
and
test
in
pop
and
stc
push
in
mov
sbb
sbbl
jge
test
mov
stos
push
out
jmp
out
add
inc
call
push
and
or
adc
pop
sbb
cmp
cmpsb
jno
leave
mov
movsb
mov
imul
fnsave
test
mov
leave
mov
pop
out
pop
cmpsb
dec
cs
sbb
faddl
int
jne
rol
ja
jae
dec
cld
sbb
mov
xchg
gs
sbb
or
fcomi
iret
cmp
mov
cltd
test
push
xchg
xchg
dec
mov
insb
in
daa
push
repnz
shlb
repz
mov
push
pop
and
loope
enter
dec
repz
loope
imul
cmp
test
inc
mov
adc
or
test
or
xor
sarl
push
rorb
ffree
xor
mov
xchg
sub
adc
loop
aam
or
ds
fisttpll
shrl
insb
adc
pop
and
xchg
or
push
sub
clc
cld
mov
fisubrs
push
notb
lret
push
xchg
arpl
pop
lods
push
mov
lock
cmpsl
data16
shr
into
cmp
imul
xorb
sbb
inc
ss
pop
jp
nop
xor
lret
or
fidivrl
mov
lock
sub
pop
jns
daa
pop
cs
fdivrl
iret
push
push
adc
pop
cld
in
lock
sub
push
mov
std
insl
mov
aad
or
mov
dec
ja
pop
adc
mov
jmp
sarb
daa
lods
mov
popf
das
call
insl
xor
mov
or
ljmp
inc
jl
and
jp
jg
call
arpl
loope
add
xor
or
xchg
xlat
pop
fiaddl
mov
xchg
push
xchg
test
adc
outsb
pop
imul
adc
sar
daa
pop
xor
mov
jno
lret
stc
mov
pop
clc
mov
add
adc
mov
ffreep
adc
popf
nop
imul
jb
iret
and
xchg
out
setp
pop
hlt
cli
jmp
hlt
fidivrs
or
xchg
pop
popa
inc
jns
mov
xchg
sub
je
pop
pushf
cwtl
push
xchg
jge
inc
fwait
and
aaa
orl
xchg
test
into
mov
std
dec
dec
mov
cld
mov
test
xor
fdivl
mov
fiaddl
addr16
inc
and
jnp
mov
fisubrl
jmp
roll
push
sub
loope
dec
xchg
mov
cltd
sar
cli
cltd
mov
jp
loopne
rol
mov
cmp
cltd
addr16
iret
iret
pavgb
push
inc
sbb
mov
ss
cld
mov
sbb
pop
pusha
xor
push
aad
aas
dec
push
movsb
mov
add
jo
mov
sbbb
inc
sahf
call
and
sub
dec
adc
push
mov
sbb
jmp
cltd
or
mov
xor
in
push
xchg
pop
out
adc
fs
xchg
add
enter
jmp
stc
cmc
cltd
das
and
mov
sub
xor
and
jne
push
arpl
les
mov
aas
cli
movsl
int3
rorl
dec
es
stc
fcomps
sub
lcall
push
adc
mov
pop
lea
aad
pop
xor
mov
shrl
addr16
sbb
int3
adc
out
call
dec
push
sbb
push
mov
mov
fs
mov
in
test
push
sub
popa
repz
out
fistps
rorb
jmp
xchg
xchg
jmp
or
cmp
shlb
aad
mov
mov
leave
pop
es
icebp
lds
out
stc
mov
or
pop
fisttpl
scas
xlat
aas
sub
gs
jmp
cwtl
mov
xchg
pushf
jle
je
mov
mov
sbb
xlat
std
xor
push
inc
mov
mov
mov
sahf
out
loopne
pop
enter
jne
adc
out
test
popa
ss
push
fimuls
sbbb
mov
fs
jp
push
mov
cmp
xchg
loop
and
insb
dec
xchg
mov
mov
cmp
sbb
in
pop
daa
pop
mov
push
ret
xchg
repnz
mov
pop
xchg
cwtl
je
mov
insb
ret
fstl
push
das
mov
mov
mov
shrl
add
mov
dec
pushl
dec
xlat
adc
stos
cmp
dec
es
jmp
adc
cmc
fisubl
jb
adc
repz
cmpsl
xchg
jno
add
jo
out
mov
nop
mov
testb
xchg
outsl
dec
cmpsb
pop
mov
idivb
mov
test
xchg
int
jecxz
mov
mov
fs
outsb
adcl
fmuls
add
cmp
in
xchg
push
or
jmp
pop
jns,pn
sub
push
adc
or
das
add
outsb
lds
xchg
cmpl
lods
jo
xor
pcmpgtb
or
imul
push
or
dec
jo
dec
adc
sub
mov
or
repnz
gs
sti
push
lods
pusha
pop
jne
std
adc
inc
pcmpeqb
xchg
movsb
mov
adc
sahf
mov
fcmovnbe
push
xchg
popf
insl
mov
pusha
ds
or
mov
add
cmp
xchg
xchg
je
ret
lea
inc
mov
mov
push
xchg
out
add
outsb
sbb
jo
jnp
pop
mov
js
push
sti
and
and
cwtl
movl
inc
xchg
xchg
lds
stc
pop
and
mov
aaa
adc
mov
out
jne
hlt
loope
test
cs
push
js
cwtl
cltd
daa
arpl
gs
out
dec
or
xor
stos
std
rol
sub
rolb
scas
mov
popa
jl
add
add
dec
lahf
push
dec
pop
mov
testb
pop
mov
pop
mov
test
clc
addr16
call
cld
xchg
jl
addb
pop
jnp
sti
sbb
in
xchg
outsb
jno
adc
cltd
and
or
jne
xor
jle
sub
cmpsb
and
mov
dec
mov
sub
dec
push
sbb
dec
inc
dec
pop
sbb
mov
push
xor
test
lds
push
pushf
aad
das
push
cwtl
pop
sub
dec
fxtract
ja
out
shl
inc
cmp
jne
stc
jge
inc
xor
stos
dec
mov
add
mov
lret
fidivrl
loop
out
pop
pop
jecxz
stos
hlt
sbb
adc
ret
cmpsl
and
sbb
aas
cld
idivl
xor
data16
orb
int
sahf
fldl
dec
sahf
xchg
xchg
xchg
loop
out
ljmp
clc
gs
cmp
fsubs
movl
sbb
mov
or
mov
mov
sbb
sub
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
and
mov
mov
orl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
mov
sub
mov
sub
add
mov
orl
sub
mov
or
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
adc
lea
and
mov
movzbl
sub
mov
push
mov
movzbl
sbb
mov
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
mov
mov
sbb
mov
xor
addl
add
negl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
mov
add
sbbl
push
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzwl
add
mov
adc
mov
sub
xor
mov
subl
jmp
fildll
push
mov
mov
pop
sub
orb
iret
in
jp
pop
jp
stos
mov
sbb
int3
int
xchg
mov
dec
loopne
pushf
inc
ret
call
adcb
xor
test
adc
ljmp
andl
pop
scas
rorl
int3
mov
sub
gs
loopne
ror
pusha
and
ja
mov
jmp
inc
insl
movsb
cmpsb
xor
push
push
mov
jl
aam
inc
pslld
sbb
aaa
sbb
and
hlt
inc
or
dec
xor
repz
test
adc
xor
mov
sub
and
sub
jae
sbb
push
dec
add
push
jae
mov
push
cmp
mov
jle
gs
into
jnp
push
and
xor
test
jb
dec
iret
or
pop
mov
sbb
inc
sbb
pop
sti
add
push
cmp
ss
aam
sub
mov
sbb
mov
cli
push
sub
lea
xor
or
std
jo
xchg
les
out
pop
pop
xchg
xchg
fwait
jg
into
stc
shlb
shrl
lods
pop
lods
in
add
in
cmc
fisubl
push
lods
sub
clc
inc
std
or
xlat
dec
das
ror
insl
cmpsb
dec
pop
repz
jmp
inc
int
cmpsb
adc
push
hlt
xchg
mov
popa
dec
into
xor
nop
les
pop
fdivrl
lret
iret
mov
jnp
xor
andb
add
xor
push
sarl
je
or
popa
movsl
cltd
js
aaa
inc
es
insb
mov
cmp
adc
jae
mov
gs
test
je
je
adc
and
add
sbb
add
addr16
out
scas
xor
int3
sub
or
cld
inc
test
and
dec
or
mov
inc
cmp
dec
or
imulb
jp
or
bound
lock
jmp
mov
lret
stos
mov
adc
pop
negb
rcl
push
adc
or
push
ljmp
repnz
inc
xor
or
jle
cli
fs
and
nop
outsl
sub
push
inc
cmp
mov
mov
jnp
aad
push
fmuls
or
bts
mov
dec
sbb
jecxz
ficomps
test
jecxz
jp
mov
xchg
xchg
jo
fsubrl
cmc
mov
fwait
mov
mov
in
jno
add
and
ss
jecxz
stc
testl
lcall
sub
xchg
xor
xor
cltd
cwtl
xor
push
les
jmp
aaa
scas
mov
cmpsl
out
mov
pop
aam
xor
scas
pop
push
mov
and
and
dec
into
repz
add
in
fmuls
inc
insl
add
sbb
xor
inc
sub
cmp
scas
xor
addb
adc
aas
ja
xchg
cmc
out
and
aaa
push
xor
push
or
into
movsl
or
and
jo
sti
push
scas
int
pop
mov
xchg
sbbl
add
ljmp
ja
adc
lea
lret
and
ljmp
jp
mov
mov
push
pusha
jge
sbb
sbb
xchg
mov
rcrb
es
clc
pop
push
mov
add
push
pusha
aad
aaa
es
mov
test
outsb
inc
cmp
lock
test
std
fs
fs
and
xchg
adc
stos
scas
fld
push
push
data16
mov
out
sarl
call
add
mov
fs
js
bound
cmp
scas
lahf
pop
push
dec
inc
pop
pushf
rcrb
cmp
int3
or
xchg
cs
paddb
fnstenv
pop
sahf
lods
nop
js
mov
jbe
xor
jg
test
sub
lahf
pop
inc
ja
inc
cmp
jp
out
xor
cmpsb
cmpsb
or
mov
mov
sahf
out
jno,pn
jmp
filds
jb
loopne
rorl
sbb
nop
gs
pop
jne
adc
mov
rolb
mov
pop
mov
push
jl
xchg
sub
adc
iret
mulb
push
sbb
inc
insl
mov
test
mov
mov
out
adc
mov
movsl
cli
and
inc
clc
inc
sbb
mov
mov
xor
movsb
lret
push
pop
mov
mov
aas
lret
aas
test
or
popf
sti
dec
repz
cmp
inc
mov
jmp
je
iret
jmp
shrl
jmp
mov
fs
dec
loope
insb
mov
push
out
fbld
cmpsb
je
cmp
out
mov
aas
divb
idivb
cmp
inc
jno
fimull
and
jnp
arpl
adc
fstl
inc
mov
and
mov
push
pop
loope
addb
fcomp
cs
bound
and
stos
adc
push
movsl
mov
sti
adc
cltd
ljmp
outsb
cs
lds
lods
lea
and
xchg
repnz
dec
pop
les
jp
lods
and
rcrl
stos
xchg
sub
inc
shll
push
loope
sub
ja
sub
js
or
push
xchg
mov
xchg
mov
push
xlat
xchg
cwtl
jns
jecxz
add
scas
outsb
push
cmp
es
dec
dec
inc
xchg
ret
jmp
xchg
xorl
mov
jecxz
lock
jg
sub
aad
insb
hlt
or
xlat
or
mov
and
repnz
adc
addl
sub
aad
addr16
mov
nop
mov
outsb
in
push
adc
idiv
sub
mov
push
push
mov
stos
sub
ja
popa
les
loope
xchg
sti
cltd
jle
loopne
cmpsb
or
dec
or
es
imul
mov
outsb
xor
jo
mov
popf
icebp
adc
sbb
inc
mov
and
inc
out
sbb
cmpsl
add
lea
in
sbb
loop
cmp
xchg
mov
mov
fildll
dec
mov
test
ljmp
pop
imul
mov
lods
out
jmp
arpl
jo
daa
in
sub
mov
in
ljmp
pop
cltd
jecxz
mov
push
xchg
loope
scas
sbbb
sub
mov
addr16
imul
jg
stos
in
call
std
xchg
add
mov
out
mov
lret
cmp
dec
jae
daa
pop
dec
insb
pop
subb
or
xor
cwtl
xchg
push
dec
sahf
jecxz
mov
mov
or
lret
adc
jne
movsl
inc
cld
push
sbbb
fcompl
jbe
movsl
mov
pop
mov
cmpsl
push
popa
and
out
icebp
jnp
lods
test
movsl
out
pop
push
inc
data16
not
loopne
flds
movsl
int3
cmp
adc
push
dec
fs
rorl
pop
push
jo
bound
cld
cmc
ficoml
andb
cmp
push
pop
int
jle
enter
call
adc
outsb
and
jae
movsl
inc
inc
std
jne
movsl
dec
fs
fmuls
clc
or
adc
mov
aas
push
mov
or
adc
dec
rolb
out
jbe
dec
sbb
and
and
clc
daa
pushf
sbb
es
lret
mov
sbb
scas
pop
popf
jmp
stos
cwtl
fdivrs
aam
rclb
pushf
or
pop
or
lods
pop
sti
mov
pop
cmp
fidivrl
fcmove
enter
das
add
pushf
pop
xor
mov
negl
arpl
xor
xor
inc
fidivl
mov
xchg
imul
cmp
pusha
inc
xchg
mov
movsl
inc
jecxz
and
out
outsb
dec
popa
cs
bound
stos
ficompl
mov
pop
lea
aad
xchg
fbld
mov
jb
mov
call
xor
stc
fldt
dec
pop
mov
loop
mov
ret
ffreep
imul
call
in
push
cmp
add
inc
fisttpl
sti
and
bound
shrb
add
inc
push
xchg
jo
xchg
mov
xor
and
negb
or
sbb
and
psrlq
xor
out
lret
sub
imul
not
imul
xor
mov
dec
xor
push
orb
xchg
cmpsl
in
pushf
mov
jno
jp
or
mov
cmc
repnz
notb
je
dec
lds
dec
mov
pop
loopne
jnp,pt
ds
stc
add
or
sbb
loopne
into
lds
mov
je
and
adc
jecxz
cmp
bound
cld
and
mov
imul
pop
xor
jmp
cmp
call
jo
int
push
xchg
add
cmp
in
les
jle
jmp
ret
mov
pusha
lds
mov
lods
fwait
mov
pop
xchg
imul
incl
aad
mov
fstpt
aaa
cmp
ret
pop
lods
sub
loop
pop
xchg
sub
fcmovbe
mov
mov
sti
add
repz
jno
add
int3
xchg
mov
mov
sbb
pop
divl
jb
pop
xchg
das
mov
push
push
out
int3
inc
jb
jnp
daa
jge
inc
shl
cmpsl
das
pop
add
hlt
mov
out
dec
sub
and
movsb
stos
lcall
sbb
in
lcall
lock
pop
xchg
rol
ljmp
inc
sti
xor
aad
frstor
add
inc
and
notl
repz
sub
cmp
push
sarl
push
jnp
sub
pop
fsub
add
jne
cmc
fisubrs
loop
mov
push
scas
jmp
sbb
mov
push
mov
sbb
jno
loope
cmp
add
idiv
fucomi
and
mov
popf
bound
push
pop
inc
lock
sbb
cmp
scas
js
and
cs
add
xor
mov
push
orl
mov
or
imul
inc
cs
jmp
movsl
adc
xchg
inc
push
xchg
xchg
mov
pop
rorl
add
push
cli
sbb
ljmp
nop
xchg
dec
inc
loopne
xlat
aad
or
es
mov
lods
jne
stc
movb
mov
mov
sub
push
insb
sub
enter
pop
out
pop
imulb
inc
sbb
inc
std
add
popf
negl
xchg
enter
dec
sbb
nop
dec
in
mov
arpl
insb
xchg
jno
shlb
les
loopne
mov
into
mov
pop
push
mov
pusha
orb
lret
test
inc
nop
mov
aad
lret
imul
int3
push
imul
cmc
es
adcl
cs
push
pop
rcrb
or
outsl
adc
and
sbb
xor
jl
out
add
lods
inc
add
mov
lods
movsb
stos
aam
mov
xchg
or
pop
push
mov
and
or
pop
mov
fcoml
cmp
lea
adc
ds
fbld
jg
aam
movsb
jg
xor
adc
or
and
movsl
call
dec
test
jne
test
add
test
mov
cs
je
mov
fadd
mov
mov
setb
mov
sbb
in
mov
mov
imul
xor
jp
pushl
cltd
and
out
out
xor
out
lret
popf
in
lret
adc
mov
sbb
mov
cmp
ret
outsb
mov
sti
bnd
xchg
jle
loop
movsl
inc
xor
pusha
fistpll
shlb
push
in
movsb
popf
rcrb
xchg
test
jnp
and
dec
inc
add
loopne
scas
fnstcw
scas
or
jns
jnp
or
push
or
ret
mov
xor
rorl
jmp
dec
scas
roll
je
fildl
imul
sub
jmp
pop
sub
push
sub
cmp
fnstcw
loopne
cmp
dec
add
cmpsb
scas
ret
xor
jns
lea
and
xor
inc
xchg
xor
test
in
pushf
and
ds
enter
pop
clc
pushf
mov
mov
rcl
repnz
ljmp
xor
stos
jb
jns
pop
lcall
lock
xchg
outsb
sbb
add
ret
sub
je
clc
jmp
pop
cmpsl
jno
xor
mov
push
xor
mov
xor
push
mov
adc
mov
lret
and
mov
test
sub
jp
aaa
jb
test
pop
xlat
jo
sbb
add
mov
shlb
fldt
jg
int
xor
push
xchg
cwtl
push
sbb
sub
jb
stos
and
jae
mov
popf
cmp
inc
push
lahf
jg
stc
push
xor
mov
sub
mov
ljmp
jl
mov
xchg
jecxz
cmpb
cmp
pop
mov
jae
and
cltd
mov
mov
call
jmp
in
out
popf
out
lds
sbb
sbb
popa
cmpsb
arpl
roll
adc
mov
data16
add
mov
bound
movsl
jecxz
loope
cwtl
push
test
cld
cmpsl
ljmp
mov
testb
dec
je
fst
ficoml
negb
sub
mov
push
jg
dec
jp
out
pop
push
repnz
xor
fiadds
popf
lods
pop
and
in
lods
es
dec
cmpsb
xchg
fadds
dec
cmp
std
xorl
mov
or
add
push
ja
jg
stos
cmp
bound
das
jne
and
outsl
or
pop
cmc
cmc
jg
xor
mov
out
or
pop
cmp
sahf
mov
imul
in
in
clc
mov
cli
push
dec
pop
mov
cmp
add
cltd
stos
jb
hlt
pop
repnz
aas
popl
cmp
push
dec
ret
nop
cld
jge
incb
cltd
add
popf
nop
ret
xchg
fwait
shrl
andl
repz
fimull
hlt
negb
mov
sbb
xlat
fcompl
sahf
repz
cmp
mull
sbb
out
es
push
ljmp
into
sub
std
rclb
xchg
stos
dec
sarl
lds
sub
ss
js
fsts
xchg
mov
jl
mov
pop
xchg
icebp
sbb
sbb
dec
daa
mov
dec
mov
inc
cmp
mov
fldcw
sbb
dec
inc
push
int3
push
xchg
aas
in
and
call
in
out
stc
jecxz
jnp
into
sbb
xchg
dec
xor
pop
pushf
and
sbbb
inc
andl
scas
rclb
mov
rcll
mov
pop
push
jo
mov
sub
sub
dec
pop
insl
repnz
lahf
dec
adcb
arpl
xorl
lret
dec
lret
cmp
inc
sub
test
dec
pop
call
ret
push
mov
in
xor
sahf
pop
test
movsb
repz
stos
outsl
aaa
mov
and
fdivs
and
mov
or
iret
mov
pop
and
push
mov
push
insl
pop
pop
cmpsb
sahf
fs
rorb
or
aam
ja
int3
or
daa
mov
or
gs
dec
jp
xor
nop
aas
add
mov
movsl
sarl
std
test
cmovo
es
notl
fwait
repz
leave
jp
fcmovu
in
xor
std
xor
sbb
out
fadd
mov
loopne
xor
out
fwait
pop
fbld
mov
mov
add
loopne
cmpsl
arpl
iret
insl
pop
jo
fadds
mov
add
mov
out
rolb
stc
fsts
ret
fs
outsb
outsb
loop
mov
movsl
sub
out
in
mov
lods
fists
orl
jge
insb
aad
sti
clc
sbbl
fidivrl
mov
sub
mov
sahf
mov
dec
mov
loop
loopne
ret
test
add
xchg
or
leave
pop
arpl
jle
and
push
cmc
and
push
xchg
addr16
pop
stos
pusha
and
stos
inc
rcll
sub
rclb
insb
roll
cli
icebp
test
or
adc
pop
pop
stos
enter
aas
into
mov
xor
and
mov
cmp
sbb
rcrl
adc
nop
hlt
add
out
cmp
inc
cmp
pop
mov
and
xor
or
jmp
fiadds
mov
dec
push
inc
aaa
ds
leave
js
mov
js
in
sahf
add
mov
sbb
push
fsubl
test
call
test
cmc
sbb
jno
inc
incb
add
loope
gs
push
cmc
push
mov
sbb
pop
mov
sub
dec
pusha
daa
inc
add
loop
cwtl
xor
cmpb
inc
insl
add
aaa
fistpll
shrl
sub
push
xor
leave
or
jp
fwait
xlat
repnz
hlt
or
adc
pop
imul
ljmp
jp
push
ffreep
adc
pop
mov
cld
rcl
pop
jae
push
insb
jb
dec
jg
and
xchg
mov
and
pop
dec
rorb
jne
ficompl
cmp
adc
cmp
xchg
je
punpcklbw
adc
rcr
lds
sbb
call
xchg
aad
cmp
stos
mov
lods
arpl
cli
insb
sbb
dec
dec
mov
daa
repnz
lods
or
inc
arpl
mov
out
add
xchg
dec
lea
lahf
mov
clc
in
js
lret
adc
mov
xlat
ret
setae
xor
sti
mov
imull
ja
ja
pop
out
inc
loop
mov
mov
mov
call
imul
add
stos
sub
or
mov
mov
inc
pop
lods
lcall
xchg
in
xor
mov
mov
inc
cmpsb
cld
mov
outsb
fildl
jbe
adc
cmpl
adc
fsubrl
push
dec
mov
push
lods
pop
inc
pop
scas
lret
lahf
pop
test
idivb
add
sub
mov
insb
push
and
or
aas
push
pop
fwait
adcl
mov
pop
sbb
mov
dec
test
jb
and
insb
div
sub
pushf
mov
cmp
in
in
movsb
cld
jbe
testl
cwtl
sub
cmc
dec
adc
sbb
out
pop
les
cmp
test
push
dec
fucomp
push
xchg
xchg
dec
push
push
adc
and
repz
pop
mov
inc
sbb
in
mov
and
pop
test
shlb
pop
sub
out
daa
ds
aaa
xor
aas
loop
lods
sbb
rcr
mov
pop
inc
mov
pop
adc
pop
shll
aad
addr16
inc
repz
ficomps
jecxz
mov
loope
xlat
rcrl
fisubs
fdivrl
push
sar
adc
psubusb
shlb
loope
int3
in
jp
push
xor
je
pop
lock
xchg
fdivrl
clc
lcall
orb
fs
xchg
jnp
jle
cltd
jecxz
repnz
push
mov
pop
hlt
push
jge
sbb
int
mov
lcall
push
cmp
out
je
jae
ja
stos
into
loopne
jge
cltd
xlat
shlb
mov
clc
mov
sub
dec
mov
ret
dec
aaa
scas
dec
and
filds
add
mov
iret
sahf
cmp
mov
shll
shll
xor
xlat
insl
mov
shlb
in
orb
rorl
popa
adc
rol
push
aaa
sub
test
stos
aam
shrb
int3
adc
xchg
out
xor
jb
cmp
aam
xor
and
outsb
mov
adc
or
addl
push
mov
inc
stos
rep
lock
and
enter
mov
push
dec
lods
movsb
jb
sbb
subl
fxch
shl
dec
push
lret
add
sbb
loop
jno
sbb
ror
mov
cmp
push
lret
outsl
aam
leave
jae
js
lock
ret
mov
jb
push
scas
jp
mov
xchg
insl
jecxz
ficompl
pop
add
push
mov
int
mov
hlt
rol
unpckhps
fnstsw
aam
and
int
ret
cs
xchg
testl
gs
fwait
lods
mov
repz
pop
pop
pop
sbb
ret
jnp
test
cmc
fimuls
mov
mov
pushf
mov
jg
bound
pop
pop
lahf
add
sub
pop
scas
mov
repz
aaa
jnp
push
sub
jl
and
sub
imul
or
xchg
sub
xor
pop
in
incl
stos
loope
ja
mov
stos
xchg
out
ljmp
jns
inc
lock
jmp
leave
mov
jbe
jp
pop
sbbb
mov
jne
mov
mov
sbbb
push
fsubl
jnp
adc
pop
fiadds
fmull
sti
jb
inc
and
push
mov
popa
aaa
push
out
fnstcw
pusha
mov
imul
pop
lcall
pop
fsubrp
into
dec
and
stc
fwait
sbb
test
js
lret
lss
mov
lods
ret
dec
dec
pop
jmp
jge
mov
sbb
ficomps
mov
or
mov
test
divb
jnp
xchg
push
adc
inc
clc
aad
adcl
fdivrl
sbb
sub
outsl
jg
adc
jae
mov
mov
movsl
inc
sbb
and
les
and
mov
sub
sbb
cs
vmread
movzwl
mov
fidivs
out
xchg
lock
mulb
ret
push
sbb
leave
fmul
mov
add
nop
inc
or
pop
repz
cmp
push
push
jle
daa
cmp
es
cmpsb
leave
mov
and
and
scas
lcall
push
mov
jo
mov
ficoms
ret
cmp
test
sub
pop
shlb
jge
aam
mov
scas
mov
sbb
cmpsb
or
mov
xchg
push
loop
std
dec
adc
ret
sub
fisttps
mov
mov
popf
mov
push
jecxz
pop
xor
xchg
pop
jl
push
push
rorb
mov
sbb
dec
mov
enter
cmp
push
loop
and
clc
jmp
pop
call
cmpsl
mov
add
cmp
loop
dec
xor
test
sub
mov
xor
mov
dec
arpl
adc
call
sub
cmpsb
pushf
mov
cs
push
pop
cmp
ja
rcrb
xchg
xchg
fst
adc
xor
push
popa
cmp
cmp
sub
inc
jge
pop
jo
inc
bnd
push
shrl
inc
ja
cli
mov
rorl
into
enter
sbb
out
call
and
lds
mov
mov
ljmp
or
test
xchg
out
cmp
aas
outsl
lcall
mov
test
jp
push
jne
mov
push
lcall
fsubrl
jmp
inc
rcll
or
pop
mov
sbb
or
incb
mov
int
add
sahf
out
fstps
fucomp
adc
int
test
ss
xlat
mov
int3
add
out
fcoml
js
jnp
or
adc
xchg
mov
or
cmp
sbb
dec
stos
lods
scas
test
push
lock
movsb
sub
and
daa
sbb
xor
aas
jo
fs
jl
mov
sub
dec
push
popa
sti
leave
sub
icebp
sub
sbb
imul
lret
or
sub
inc
and
xor
mov
scas
insl
hlt
jle
inc
popf
push
scas
and
das
mull
lods
dec
xor
test
inc
out
pop
int
mov
mov
dec
daa
repnz
fwait
add
int3
adc
jno
or
shr
inc
mov
sbbb
inc
sbb
mov
xchg
inc
cmpsb
sahf
mov
imul
frstor
jbe
xor
pusha
dec
rorl
popa
stos
xchg
or
bound
push
in
incl
repz
nop
ja
add
loopne
pop
clc
jb
call
rcrl
cmp
cmpsb
inc
pop
jp
in
push
xchg
mov
xor
scas
stos
sbb
jge
and
fildl
pop
or
aas
sbb
and
inc
push
cs
pop
rcrb
shr
xor
xchg
cli
xlat
push
push
bound
mov
into
cmc
hlt
cmp
cli
shll
pop
pop
insb
inc
fsubrp
xchg
pop
fsubp
push
aaa
jbe
ret
decb
popa
out
mov
loope
daa
cmpsl
popf
xchg
popf
mov
ds
ljmp
xorb
pusha
mov
and
cmpsb
fcoms
jge
jecxz
and
xchg
insb
or
inc
aaa
push
aad
aad
pop
loopne
mov
mov
inc
mov
aam
aam
int
add
mov
dec
lret
test
mov
lret
sub
xchg
jge
test
sbb
sub
out
jg
div
dec
pcmpgtw
icebp
addl
xor
pop
pop
sbb
pop
xor
sub
ss
mov
mov
sub
xchg
stos
cs
jb
popf
data16
and
or
jg
adc
in
daa
imul
int
int3
jbe
mov
in
lret
add
and
sbb
enter
shrl
adc
jnp
push
inc
cmpsl
sbb
jo
aad
outsb
lds
nop
and
push
in
xchg
imul
sahf
jns
xor
out
in
adc
aam
sbb
xorb
loopne
js
xchg
aaa
loopne
rclb
xchg
fdivr
sbb
push
scas
mov
or
imul
mov
jecxz
decl
std
ret
xor
mov
lcall
or
test
insl
and
ret
dec
mov
insb
int3
insl
addr16
out
inc
fmuls
mov
sbb
insl
stos
xor
mov
shr
cmpsl
or
loope
gs
mov
pusha
and
inc
push
inc
dec
pop
sbb
in
push
jmp
dec
adc
inc
out
mov
pop
xor
xchg
fwait
shlb
pop
mov
mov
pop
jp
xor
idiv
inc
mov
lds
mov
mov
push
bnd
out
das
pop
hlt
call
leave
and
sahf
mov
les
jbe
sbb
in
add
fwait
scas
cltd
push
insb
fwait
adc
xchg
cmpsb
add
sbb
cli
jns
les
jg
add
dec
popa
dec
int3
fsubrl
fsub
mov
mov
std
pop
popf
inc
cli
push
jnp
fld
ficomps
or
hlt
sti
and
aaa
add
cltd
stos
adc
mov
push
ja
inc
out
call
mov
pusha
es
sarl
loopne
fistl
decl
xchg
xchg
mov
mov
mov
scas
xchg
mov
in
sbb
dec
xor
add
cmp
fisttpll
push
jne
xchg
xor
leave
or
in
xchg
push
in
pop
add
imul
push
sbb
cwtl
test
xor
sbb
jno
mov
stos
xchg
bound
jae
add
fildl
add
rolb
pop
mov
lock
add
jbe
orb
nop
mov
rorl
sbb
test
mov
dec
int
inc
in
xor
or
aam
adcb
jmp
flds
mov
cmpsb
imul
aaa
sbb
fbld
testl
gs
push
imul
imul
pushf
icebp
mov
shl
mov
jmp
sub
lahf
inc
or
push
cmp
xchg
ret
jmp
adc
movsl
xor
lods
jecxz
push
push
or
mov
mov
lahf
mov
inc
aas
dec
aaa
and
jmp
mov
out
jne
test
ja
sub
rol
push
push
fstpl
inc
add
mov
adcb
push
mov
aaa
ljmp
clc
shlw
pushf
adc
cltd
xor
pop
dec
out
outsl
cltd
mov
lcall
cld
jecxz
sbb
test
aam
cltd
ret
pop
shl
add
fcomps
xchg
mov
sub
sub
jb
mov
add
fnstenv
cmp
mov
insb
push
sbb
cmp
xor
pusha
jmp
hlt
push
bound
adc
cmp
add
bound
imul
orb
adc
xchg
ss
cld
push
sarb
add
xchg
loope
arpl
in
mov
push
mov
dec
dec
ds
sbb
mov
jg
cmp
scas
cmpsl
mov
dec
mov
cmovg
inc
push
xchg
sbb
mov
mov
pushf
lcall
push
sti
out
or
sarb
fildl
adc
in
inc
xchg
call
mov
mov
and
test
sbb
dec
inc
mov
cmp
xor
inc
imul
sbb
sub
out
dec
ret
test
xchg
stc
jl
jmp
into
sti
sbb
mov
adc
inc
idivl
jmp
or
push
push
inc
add
les
jb
lret
outsb
in
jp
in
lahf
cld
in
out
iret
aad
movsb
cli
fnstcw
mov
jge
lock
push
pop
clc
lods
imul
and
add
push
cmp
dec
push
sbb
lods
jns
sbb
lods
aaa
jmp
movsl
scas
adc
mov
loop
inc
mov
jmp
or
cmpsl
pusha
loopne
xchg
xchg
loopne
sbb
mov
pop
push
scas
outsb
or
pop
dec
inc
adc
outsb
cli
sub
daa
repz
sbb
jecxz
sbb
sub
sub
jo
fists
and
in
cltd
pop
add
mov
sbb
rorl
sub
rcrb
mov
pop
sbb
cmp
div
int
dec
popf
sti
push
jg
test
sub
xchg
jle
mov
cli
sub
xor
pop
aam
xchg
sbb
jmp
int3
xor
or
pushl
push
xchg
or
je
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
call
xor
xor
dec
mov
jmp
adcl
add
movzwl
xor
mov
mov
mov
xor
mov
or
mov
orl
xor
movl
add
movl
imul
dec
mov
andl
xor
adcl
add
cmp
mov
mov
push
movl
je
addl
mov
add
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
sub
mov
neg
mov
subl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
jmp
rorl
xchg
mov
pop
jmp
dec
or
jp
adc
jp
insl
test
movsl
xchg
cmc
insb
jmp
or
pop
push
shl
mov
sarb
dec
mov
test
inc
nop
mov
rcll
aad
xor
add
cmp
cld
inc
imul
or
rcr
daa
mov
insl
mov
movsl
or
icebp
adc
cmp
sbb
mov
adc
inc
mov
bound
rolb
movsl
movsl
ds
push
les
int3
cmp
jge
mov
leave
xor
mov
lcall
mov
test
add
out
xchg
pop
or
jmp
inc
loopne
inc
ret
sub
outsb
mov
dec
mov
adc
jo
and
jns
aam
stos
xchg
filds
or
pxor
enter
sub
repz
repnz
out
int
sbb
faddl
pop
in
jae
and
cmp
sub
aaa
cmp
sub
psraw
stc
push
push
dec
xchg
orl
subl
mov
repz
mov
push
jo
adc
enter
roll
and
lahf
test
push
les
fsubrs
pop
pusha
mov
test
in
outsb
fwait
xor
fs
push
fistl
jns
sub
dec
xchg
push
insl
iret
stc
les
or
loope
rcr
mov
cmp
adc
loop
adc
stc
shrb
mov
insb
or
xchg
dec
jg
fistps
xchg
pop
jmp
ljmp
and
fsubr
fstpt
mov
mov
add
fwait
add
arpl
cmp
jne
jae
and
fst
mov
xor
sti
lret
or
xor
xchg
mov
scas
mov
dec
into
popf
lods
mov
into
mov
es
sbb
mov
jg
and
enter
in
mov
dec
fists
repz
in
mov
pop
xor
mov
loop
jo
das
jo
mov
inc
mov
jo
ja
inc
enter
add
xor
popa
negl
movsb
sub
subb
push
pop
adc
add
jg
push
gs
aad
fldl
xor
imul
add
sahf
add
sbb
lods
or
or
in
add
fcomp
mov
adc
sub
scas
into
repnz
mov
loopne
test
insb
pushf
and
gs
adc
inc
test
movsl
repnz
jp
mov
dec
shrl
jbe
xchg
mov
and
jnp
clc
jmp
dec
xchg
lock
xchg
push
dec
push
xchg
lods
icebp
fs
xor
adc
mov
xor
aaa
aas
inc
pop
inc
and
dec
mov
sub
notl
sub
fs
inc
sbb
clc
arpl
xchg
lods
aas
or
pop
insl
pop
xor
repnz
repnz
rcll
fsubrl
mov
ss
negb
addr16
cwtl
push
scas
mov
jno
mov
push
sbb
mov
add
add
push
repnz
cmp
sbb
cmpsb
insl
push
mov
out
jno
arpl
push
ds
std
jne
dec
fwait
inc
mov
jo
repz
call
xchg
add
cmp
out
out
jp
int
xchg
pop
hlt
mov
scas
out
mov
push
cltd
bound
clc
shlb
test
je
in
testb
data16
repz
xor
scas
xor
and
xlat
ffree
inc
and
xorl
mov
mov
lretw
xor
addl
dec
cld
dec
inc
ljmp
in
xchg
adc
xchg
inc
icebp
sub
scas
push
insl
and
stos
nop
pop
sub
lods
pusha
daa
inc
decb
adc
jo
dec
dec
pop
repz
cmp
std
mov
push
or
xor
pop
sahf
nop
loop
repz
inc
lret
gs
fldenv
inc
add
jbe
fsubp
cmp
xor
clc
mov
nop
test
test
dec
ds
adc
sahf
sbb
mov
cmp
mov
add
push
add
inc
loopne
jb
jge
fisttpl
lds
pop
in
push
lahf
mov
mov
mov
imul
arpl
pop
mov
loope
into
or
inc
je
xor
shl
adc
aad
mov
pop
adc
push
cmp
cmp
cld
mov
mov
loop
xchg
push
xchg
pop
pop
and
orb
test
sub
xor
cli
push
sub
pop
xchg
movsl
sbbl
ds
mov
shl
ficompl
mov
sbbb
arpl
loope
xchg
idiv
add
xor
dec
ljmp
adc
push
into
cs
imul
popf
push
pop
add
sahf
xchg
cmc
cs
push
mov
in
in
jl
pop
xor
enter
lods
je
mov
in
fmulp
mov
cmp
mov
jb
mov
xchg
int
pop
adcb
addr16
or
xchg
lret
cmp
stos
inc
xchg
fmul
btc
jnp
aas
mov
cltd
aas
popf
jp
jecxz
les
and
sbb
sti
dec
sbb
mov
imul
add
adc
enter
mov
aad
pop
or
out
in
sub
pushf
mov
arpl
cmp
stos
pusha
inc
pop
pop
and
lret
mov
pop
call
jl
jns
mov
lods
sub
pusha
mov
adc
push
loop
xor
sbb
sub
out
sbb
iret
lods
jns
scas
imul
mov
xor
ror
movsl
xchg
push
xor
jl
mov
outsl
decb
fs
popa
stos
jp
xchg
adc
push
push
popf
std
clc
lahf
scas
cwtl
mov
pop
or
int3
test
mov
lods
xchg
sub
sbb
dec
inc
jo
lret
js
cmc
cmp
cmc
inc
cmpsb
les
cmp
and
dec
dec
inc
adc
test
adc
notb
in
repz
cmp
mov
and
xor
rcrb
cmp
push
pop
insl
cmp
out
pop
inc
push
push
sbb
imul
out
mov
inc
fisttps
daa
push
xorl
add
lods
shll
adc
sbb
int3
pop
and
frstor
inc
add
and
dec
orb
inc
fiadds
xlat
or
hlt
in
inc
rol
scas
imulb
add
pop
mov
mov
movsb
jne
add
popa
xchg
cmp
movsb
xchg
in
mov
jb
aas
xor
lds
jbe
ljmp
outsl
adc
stc
push
faddl
and
mov
loope
or
push
sub
es
in
dec
in
in
popa
mov
mov
mov
aaa
push
sti
xor
inc
mov
mov
shr
mov
add
or
les
adc
push
dec
ds
pop
and
cmc
repnz
hlt
push
xchg
stos
pop
sahf
pop
shr
cld
cwtl
add
dec
xchg
rclb
and
aam
rolb
jl
mov
add
pushf
aas
sub
xchg
sahf
lea
jmp
jae
movsb
addr16
pop
jno
out
push
incl
out
jne
test
cltd
sar
xor
mov
das
push
rol
mov
test
gs
sub
ja
sub
xor
jl
imul
pop
mov
roll
add
test
push
pop
pop
movsb
mulb
je
nop
mov
cwtl
in
test
mov
stos
insb
shll
pop
cmp
and
sub
mov
xlat
test
dec
aaa
cmp
hlt
sub
jle
push
adc
mov
cmp
sbb
stos
jo
sarl
inc
loopne
adc
dec
movsl
xlat
ret
inc
hlt
add
sbb
push
and
arpl
cltd
in
arpl
fmulp
dec
xchg
repz
fpatan
mov
das
jne
stos
icebp
fisubrs
fxch
cmp
clc
adc
loope
hlt
shlb
xor
jmp
insb
scas
je
mov
lods
jmp
mov
fmul
lods
sarb
adc
pop
mov
xor
add
cwtl
xlat
faddl
out
and
je
loopne
dec
hlt
dec
dec
aad
popf
sbbb
pop
jb
push
mov
rolb
xor
cmp
sbb
add
call
adc
adc
xorl
mov
cvtpi2ps
inc
rcrb
cltd
dec
pop
mov
lret
pop
jne
test
mov
jmp
pop
xor
pop
or
cwtl
fsub
mov
cltd
arpl
mov
fistl
into
hlt
jge
sti
mov
sub
mov
push
movsl
unpcklps
cmp
test
loop
div
or
jne
cmpsl
dec
aaa
fwait
sub
sbb
loop
cmc
outsb
adc
popf
gs
cmp
dec
iret
daa
xchg
les
jae
in
push
cmpsl
and
in
movsl
dec
dec
jg
xor
loop
pop
sbb
mov
out
sub
and
or
inc
imul
mov
out
ja
inc
enter
push
inc
loope
out
xchg
cmp
xor
fsubrs
adc
out
or
bound
int
xchg
pop
push
push
jb
adc
adc
or
xchg
shr
pop
pop
cmp
loope
scas
dec
sbb
imul
jmp
inc
in
ja
push
aaa
scas
sub
jnp
nop
in
xchg
xor
data16
jns
or
and
xor
adc
lahf
cld
rcrl
mov
and
nop
jb
ret
xchg
jne
mov
test
out
dec
pop
out
cmp
mov
jl
mov
pop
xor
in
int
adc
mov
scas
mov
shlb
out
fsubrs
jb
cmp
clc
xor
mov
test
xor
decb
fisttpl
push
inc
dec
out
enter
or
xchg
sub
pop
or
cmp
pop
enter
push
mov
fsubs
jo
adc
jno
mov
push
inc
or
adc
in
je
and
ss
int3
cmc
lods
adc
in
inc
inc
and
jp
jnp
cwtl
add
cltd
fs
enter
inc
in
fldt
cmpsl
fwait
ja
dec
movsw
andb
cld
ds
xchg
cltd
xchg
lods
adc
pop
add
dec
xchg
iret
clc
push
cmp
imul
pop
or
pop
ja
jne
jnp
pop
pusha
outsb
cmp
mov
cli
fldl
pushf
mov
cmp
out
fwait
into
inc
xchg
xchg
jo
nop
xchg
stos
xchg
and
cmp
push
inc
daa
in
and
mov
mov
clc
xlat
arpl
pushf
sbb
adc
ja
and
fs
xchg
xchg
fldenv
aad
mov
mov
cmp
push
xchg
pusha
popa
hlt
sbb
mov
push
lods
cmp
jbe
inc
aas
and
mov
fnsave
lods
mov
xor
adc
and
push
mov
mov
xchg
inc
jno
movsl
test
lods
fiadds
invd
dec
in
or
stc
ror
xor
repz
pop
insb
dec
ss
and
mov
mov
out
jnp
mov
cmp
pop
xor
jg
xlat
mov
xlat
xchg
sti
divb
or
lret
xchg
mov
mov
add
not
dec
push
enter
stos
xlat
pop
sbb
mov
mov
popa
mov
sub
sbb
pop
adc
sub
jle
ss
shll
fldenv
push
out
inc
jg
jo
push
sbb
xchg
call
pop
add
iret
mov
pop
je
sbbb
mov
stc
jne
or
mov
adc
and
into
push
arpl
fwait
add
in
xchg
loop
cmp
ficoml
loope
ret
sbb
int3
dec
mov
leave
clc
add
lea
sub
jne
sub
in
idivl
movsb
int
cmpsl
or
ficompl
cmp
cmp
mov
repnz
push
xchg
das
xchg
cmp
test
js
pop
inc
and
clc
fnstsw
jg
test
ret
mov
xlat
pop
mov
push
cs
or
int
stc
sub
out
mov
fwait
xchg
pop
push
lock
js
cmc
jecxz
and
jle
test
in
add
push
bound
fstl
std
xchg
and
sub
cmp
mov
pushf
movsb
mov
ja
call
adc
xchg
xchg
xchg
pop
or
mov
cmp
arpl
scas
sbb
ljmp
add
arpl
imul
icebp
jp
pop
loop
add
movhps
jne
jp
and
fisubs
inc
cld
sbb
or
into
outsb
stos
xchg
xchg
popw
mov
xchg
lcall
clc
lahf
pushf
mov
xor
and
jo
inc
sub
jo
andl
cmp
nop
dec
daa
push
add
sbb
out
dec
movsb
js
push
mov
stos
dec
push
popf
pop
lock
or
jg
sbb
fsubp
imul
movsl
fadds
jae
loope
inc
sub
ret
dec
push
or
loopne
mov
hlt
lods
sub
add
iret
and
andb
cmp
push
loope
cmp
imull
sbb
cmpsl
aaa
dec
and
jp
push
fcmovb
inc
das
sub
dec
loop
jae
mov
add
mov
sub
xchg
mov
push
out
mov
outsl
sbbl
test
sbb
arpl
mov
sub
add
xor
test
push
jg
and
orl
scas
out
outsb
inc
add
mov
jns
push
mov
gs
mov
insl
add
push
mov
xor
pusha
jb
adc
decl
aam
mov
dec
into
pop
aaa
loop
mov
bound
cli
mov
test
push
repnz
adc
pop
aam
jg
xchg
ljmp
lret
fnsetpm(287
fimuls
sub
xor
push
mov
lods
and
sarb
ljmp
nop
fsubs
inc
setg
sbb
arpl
jg
test
push
or
loopne
lock
mov
sub
sub
mov
push
ret
xor
push
ds
imul
cs
add
inc
lret
inc
mov
lock
imul
or
bound
fs
or
in
cmc
pop
call
int3
inc
and
mov
cmp
fnstcw
call
pushf
cli
scas
lds
jmp
sbbb
ja
mov
ret
mov
fidivrs
stc
in
jmp
stos
jno
sub
add
lahf
fwait
movsb
push
jb
fldl
sub
sahf
xchg
lret
dec
sbb
sub
mov
cmp
adc
movsb
xchg
mov
sbb
jno
xchg
xchg
jno
imull
mov
cmc
jle
xor
add
popf
pop
xchg
cmpsl
jg
mov
in
lods
push
dec
iret
mov
cmp
jg
repz
xor
jbe
fildll
test
dec
hlt
jbe
xor
or
movsl
adc
daa
xchg
pop
mov
pop
or
clc
cmp
xor
das
adc
shlb
sub
ljmp
es
jnp
lcall
pop
adc
inc
enter
fstpl
mov
jbe
xor
ja
mov
outsb
sub
sub
xor
cmp
scas
shrl
dec
or
push
bound
xchg
lret
xorb
stc
inc
jg
test
popf
xchg
dec
mov
mov
add
mov
in
push
push
mov
jmp
mov
leave
loopne
mov
insb
out
push
mov
lahf
fsincos
dec
mov
inc
add
jmp
dec
dec
mov
mov
rcrl
and
lods
aaa
popa
cli
or
dec
iret
xor
iret
imul
jg
mov
inc
push
adc
cmp
call
jb
hlt
push
popa
sub
das
add
loop
xor
dec
and
enter
push
ret
sub
in
data16
lret
push
in
in
fwait
mov
xchg
arpl
int3
dec
push
into
loopne
cmp
push
ja
sub
fstl
ljmp
in
in
pop
mov
jne
sbbb
fstpt
test
jecxz
out
dec
add
push
jnp
dec
sbb
cld
jmp
aaa
jecxz
mov
jmp
push
das
push
add
sub
or
pop
add
mov
xlat
popa
mov
lcall
jne
push
in
sub
adc
add
or
call
insl
sbb
sub
mov
lock
pop
lds
jge
fsubrl
xchg
sahf
inc
pushf
dec
pushf
sub
xor
scas
inc
cmpsl
adc
cmp
popa
mov
xchg
jecxz
xchg
push
push
inc
mov
repnz
fists
mov
jle
mov
ds
roll
mov
pop
xchg
out
lock
xor
in
fwait
mov
pop
clc
test
shll
push
jae
popa
sbb
adc
rclb
push
insb
xor
jl
inc
test
aas
andl
int3
clc
ljmp
iret
push
pop
add
not
mov
adc
dec
aad
sbb
add
rolb
test
dec
jno
ja
mov
hlt
mov
sbb
fdivp
pop
hlt
jae
mov
es
cmp
gs
cmp
jmp
mov
pop
pop
jp
sahf
mov
cmp
loope
call
jmp
lret
push
jbe
xor
push
dec
mov
jmp
lods
push
clc
mov
dec
movsb
lods
mov
inc
add
mov
inc
sub
fidivrs
xor
cmp
lret
ds
cmc
sarb
or
dec
cltd
xchg
insl
ja
mov
in
cmp
pop
fs
ja
add
ds
cmc
adc
scas
xchg
mov
dec
adc
jp
inc
subl
insb
or
lods
repnz
repnz
loope
lods
mov
int
gs
loope
and
mov
sub
test
dec
and
rclb
inc
jecxz
outsl
push
mov
xchg
pop
push
mov
xor
mov
filds
stos
rcll
xchg
jmp
out
sbb
clc
cmp
pop
lret
sub
dec
push
dec
xor
aaa
es
mov
ljmp
mov
add
and
insb
sub
inc
movsw
jl
jp
cmc
in
lahf
in
cli
mov
mov
mov
lock
fcomps
rol
inc
out
and
nop
cld
rcrl
jnp
mov
test
jns
pop
jge
popf
loopne
jmp
dec
rorl
xchg
jmp
repnz
stos
sbb
mov
out
aam
mov
inc
and
cmp
and
push
inc
pop
int
dec
cmp
ficoms
push
ds
repnz
sbb
adc
pop
mov
jl
lds
xlat
cmp
lods
arpl
sbb
fistps
fisttpl
or
sbb
pop
adc
jmp
cltd
repz
mov
ds
jae
or
mov
mov
ret
push
or
mov
sub
es
xor
jl
add
xchg
xor
std
aas
mov
adc
lret
jbe
jb
loopne
mov
pop
jp
mov
jb
cmp
je
mov
cmp
adc
pop
push
out
sub
out
ja
popa
cmc
fdivl
adc
add
jno
lods
dec
fs
cld
xorb
ds
fstpt
xorl
pop
sub
movsl
ret
subb
sub
sbb
cmp
cs
ret
stos
mov
loope
or
xchg
adc
in
lahf
mov
ds
test
xchg
repz
addr16
lea
pop
jecxz
cmpsl
jo
pop
movsl
xchg
cmp
fistl
mov
repnz
cmp
jae
or
mov
fdivrl
mov
out
push
fimuls
scas
lock
sub
add
fchs
xchg
jne
bound
xchg
mov
cmpb
out
test
push
dec
xor
pop
jnp
mov
cmp
fbld
or
mov
pop
hlt
jb
pop
mov
in
daa
mov
add
sti
aam
jp
decl
and
bound
loopne
dec
test
roll
insb
ja
adc
mov
sub
lock
mov
test
cmp
mov
adc
addl
aam
mov
out
push
subl
add
dec
lret
int3
xor
loopne
mov
sub
adc
push
adc
ret
push
lock
lea
mov
mov
jo
arpl
fwait
jge
push
popa
test
ret
jb
cmp
and
int3
xor
out
shl
insl
loopne
imul
adc
jae
xor
pop
pop
cmpsl
mov
and
jp
inc
xorl
mov
inc
push
test
mov
gs
pmulhuw
jecxz
cmp
jbe
rcrb
cmp
aas
push
cltd
jns
mov
push
jge
test
pop
mov
std
jle
inc
stos
add
movsl
sbb
push
pop
cmp
jae
jmp
test
pop
dec
xorb
lods
pusha
movsl
subl
cmp
cwtl
cmpsl
daa
out
and
loope
push
fwait
movb
add
divb
jl
in
hlt
dec
fldt
dec
pop
xchg
push
rcll
cmp
loop
push
jne
add
leave
mov
ljmp
lods
add
xchg
pop
mov
movsl
or
push
xor
push
mov
jg
fwait
in
imul
xchg
mov
dec
fisttpll
cmpl
jl
and
cmc
or
stc
outsl
mov
inc
pushf
and
inc
fcmove
fstps
orb
xchg
pushf
fs
insl
dec
in
mov
adc
jmp
xor
or
add
inc
cmp
les
dec
jno
pop
dec
mov
pushf
mov
shll
insl
lret
add
fsubrl
inc
xchg
sahf
subb
mov
sbb
mov
fwait
inc
jns
xchg
incb
pushf
mov
cwtl
mov
inc
jno
adc
lock
dec
cmc
and
psubd
xchg
cld
adc
fstpl
addr16
and
xchg
add
hlt
and
xchg
shlb
push
or
sbb
fistpll
pushf
les
or
inc
adc
cmp
cmp
or
cld
sbb
xchg
dec
cmpxchg
je
inc
pop
cwtl
scas
insl
xor
adc
arpl
dec
cmp
ret
mov
mov
dec
xor
lret
mov
scas
or
dec
mov
mov
push
testl
sbb
cmp
iret
lret
mov
daa
cmp
clc
mov
push
cltd
xchg
test
nop
and
inc
aam
popf
lods
xchg
mov
cs
xchg
lods
jp
je
xchg
cmpsl
fsubr
inc
and
push
sahf
adc
inc
push
xor
push
and
inc
aaa
shrl
pop
inc
xchg
pop
and
pop
ret
jbe
cld
sbb
ja
or
sub
pusha
jmp
mov
pop
loopne
cmp
sub
test
les
jle
int
push
cmp
cmp
into
sahf
gs
push
push
cs
js
insl
sub
imull
stos
jmp
pop
pop
test
mov
mov
jb
in
sbb
and
mov
fwait
adc
dec
adc
xor
sbb
cli
out
add
std
mov
adc
cmpsl
insb
filds
jae
cmc
fnstcw
xlat
ret
cltd
cmp
insl
fsubrs
mov
loop
mov
lahf
mov
out
adc
ds
xchg
outsb
push
xchg
cmc
div
or
lea
out
mov
lahf
rcr
jge
popa
repnz
lea
dec
sub
rolb
into
cmc
clc
mov
lock
clc
call
and
lret
lods
loope
daa
push
fldenv
shll
addl
xchg
xlat
jns
mov
cmp
adc
pop
mov
sbb
sbb
mov
mov
mov
or
out
sub
jmp
leave
imul
into
sub
jge
cld
aam
pusha
xor
or
dec
pop
inc
bound
push
mov
loop
or
push
inc
fucom
sub
call
cwtl
fisubrl
sub
dec
cmp
fidivl
testl
push
fucomp
jne
fisttps
xor
pop
in
stos
stos
dec
mov
mov
fildl
push
mov
in
mov
push
add
xchg
cwtl
push
imul
inc
inc
cmp
sbb
cmc
inc
lds
mov
lahf
sbb
iret
in
insb
mov
sbb
cmpsb
fbstp
test
lock
fs
in
adc
test
sbb
pop
add
jae
jae
cwtl
stos
mov
in
fsubl
inc
jp,pn
ret
xchg
arpl
test
add
xchg
mov
sti
sub
adc
xor
pop
call
ja
push
sbb
mov
pop
mov
cld
mov
lods
adc
sbb
xor
mov
js
jb
icebp
xchg
jae
pop
jbe
fisubs
in
mov
hlt
mov
fidivl
inc
sub
push
test
inc
mov
mov
leave
loopne
mov
ljmp
test
sub
scas
in
loop
xlat
out
mov
inc
clc
sbb
stos
lods
lcall
repnz
cmp
push
fwait
sub
push
cmp
inc
inc
cltd
sub
sbb
inc
cmpl
in
pusha
xor
xchg
arpl
lds
test
jo
inc
test
sub
jg
push
mov
rorb
fprem1
adc
lret
push
dec
insl
sub
xor
mov
mov
sti
add
icebp
mov
or
push
sbb
dec
stos
ret
repz
pop
cmc
out
xor
pop
rcll
xor
mov
out
lods
je
cmp
mov
adc
and
iret
push
pop
andb
dec
je
pushl
jle
mov
lds
cmp
adc
test
popf
and
cli
sbb
mov
aam
aaa
or
push
or
inc
push
cmp
xchg
testl
adc
jecxz
or
into
mov
sbb
pop
jp
mov
and
dec
cmp
aaa
fsubrs
jmp
cmp
pop
add
push
and
adc
fstl
lods
fmuls
lret
jp
stos
or
or
jge
int
jmp
daa
mov
cmp
mov
sbb
test
lcall
icebp
jp
inc
xchg
mov
sub
fcomip
xlat
in
aad
pop
jg
js
sahf
push
sub
lcall
xor
pushf
jns
add
ja
adc
cltd
mov
es
cmp
icebp
jbe
mov
add
cld
mov
xchg
ljmp
adc
xchg
jnp
adc
outsl
inc
mov
pop
mov
outsl
push
jecxz
mov
dec
insb
jne
fcomip
fldenv
xlat
inc
inc
xor
fs
cs
or
out
std
pcmpeqb
dec
sahf
push
leave
rol
clc
outsb
pop
push
mov
movsl
jae
stos
jae
aas
or
icebp
inc
mov
xchg
pop
popf
fstps
pop
loope
cmp
imul
xor
les
inc
xor
xchg
cwtl
mov
or
pop
push
pop
cmp
imul
dec
jae
push
mov
testl
sahf
jge
mov
sub
add
xor
push
jo
mov
sarl
fcomp
dec
addr16
cwtl
sub
and
sub
add
mov
test
inc
jl
in
call
lret
lret
cmp
sub
pop
mov
push
jne
lock
xchg
and
jns
clc
and
ss
mov
dec
mov
mov
repnz
pop
push
sbb
pushf
inc
lahf
addb
and
iret
xchg
cmp
dec
push
roll
addr16
cmp
add
leave
cmp
gs
push
dec
pop
mov
aad
sbb
fisttpll
andb
fs
in
inc
pop
ljmp
insl
pop
pusha
mov
push
daa
mov
sar
cmp
out
das
loopne
inc
xor
pop
add
sub
addr16
rcrb
int
push
add
stos
jbe
inc
les
rorb
xchg
call
imul
icebp
in
sbb
iret
pop
sar
repnz
pop
enter
pop
adcl
in
xchg
push
xor
jmp
jmp
mov
cmp
cld
lds
testb
and
sub
inc
shll
mov
push
xor
jg
dec
sahf
mov
xor
push
jbe
test
call
sti
out
jne
loopne
fisubrs
mov
fbstp
sbb
fldt
add
stos
dec
push
jmp
pop
push
jle
pop
out
jge
scas
loop
int
loop
daa
add
int
jl
es
xchg
mov
or
sbb
neg
movsb
bound
pushf
jp
pop
dec
outsl
stc
out
jb
int3
xchg
rol
sub
adc
bound
jecxz
mov
mov
pop
pop
je
mov
icebp
lock
sahf
inc
scas
mov
lahf
or
cmpsb
sub
xchg
push
xor
ret
cld
lret
popa
sub
std
jge
jg
cmc
xor
mov
pop
mov
push
movsb
outsl
push
cs
mov
pop
addr16
mov
xchg
mov
mov
insl
iret
daa
xor
icebp
int3
subb
rcr
call
inc
mov
imul
xor
jecxz
xor
test
lds
cmc
out
fcoml
jle
fisttpll
cli
roll
and
sub
nop
clc
fs
fmuls
adc
je
js
sahf
jae
mov
add
adc
adc
lret
jle
sub
add
mov
sub
or
mov
ffreep
sbb
fwait
pop
pop
dec
push
lock
loop
cmp
push
lods
test
push
mov
sahf
sarl
stos
mov
pop
fistl
add
ret
inc
rol
shrb
push
cmpsl
xchg
or
in
cmovg
popa
daa
in
mov
fcoml
sub
in
fmul
stc
and
or
mov
sub
imul
fnstsw
xchg
jbe
enter
xor
sub
out
jbe
arpl
testl
cld
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
and
mov
orl
mov
xor
xor
xor
add
sub
imul
movl
add
push
adc
mov
mov
xor
or
adc
mov
mov
or
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
add
xor
addl
mov
addl
add
sbbl
add
addl
imul
movl
mov
movl
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
sbbl
add
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
xor
mov
adcl
mov
subl
xor
mov
xorl
add
movzbl
sub
movzwl
mov
mov
add
movb
lea
mov
xor
mov
mov
andl
mov
sbb
mov
xor
orl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
andl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
movl
xor
xor
or
mov
adc
push
add
mov
add
xor
mov
movl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
movl
mov
addl
xor
xorl
add
jmp
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
sbb
mov
sbbl
mov
xor
orl
mov
addl
add
movzwl
mov
mov
subl
movzwl
xor
add
mov
mov
inc
not
mov
movl
cmp
movl
jne
mov
mov
xor
add
mov
sbb
mov
xor
add
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
mov
adcl
movl
movl
sbb
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
sbb
mov
or
mov
xor
inc
add
mov
mov
mov
je
mov
mov
xor
jmp
aas
xor
es
hlt
and
sbb
icebp
in
ja
aad
scas
jp
push
pop
jp
add
test
ds
ss
imul
pop
es
pop
cmp
pop
lcall
inc
cltd
scas
out
push
pushf
fbld
cmpsl
xor
mov
nop
or
adc
imul
data16
mov
and
xchg
test
add
mov
xor
xor
jecxz
jbe
xor
xor
mov
dec
sub
xor
xchg
aad
popf
mov
outsl
jae
nop
sub
cmpsb
cmp
push
xchg
xchg
mov
fbld
stos
ret
js
cltd
and
add
jbe
mov
xchg
cmp
iret
fisttps
jnp
xlat
subl
movsl
xchg
cmp
and
lcall
jle
xor
pop
aaa
mov
mov
std
mov
and
fstpt
enter
jbe
out
dec
repz
inc
outsb
mov
inc
jecxz
sbb
in
inc
clc
ror
push
scas
push
mov
dec
pop
dec
sbb
repnz
sub
test
ret
into
sahf
cli
shrl
jns
push
lcall
stos
sub
and
cmpsb
jle
push
xchg
test
add
jecxz
jns
fmull
pop
push
and
std
dec
cwtl
fdivrl
mov
nop
lods
or
jns
jl
pop
sub
pushl
jecxz
cwtl
test
mov
into
dec
sbb
mov
add
fsub
clc
inc
mov
jmp
mov
mov
adc
pop
and
mov
mov
lret
mov
jecxz
xchg
xchg
mov
out
stos
popa
jnp
mov
aas
sbb
fdivl
mov
ja
xor
insb
jae
stos
mov
sub
mov
inc
mov
sub
adc
xchg
dec
rep
xchg
mov
inc
scas
xchg
xchg
xor
push
in
lahf
aas
jo
pop
dec
xor
inc
outsb
add
sub
fstpl
aam
mov
scas
sbb
cmp
ror
mov
or
shll
inc
sub
test
mov
fadd
js
or
mov
data16
pushf
lret
add
push
ja
xor
repnz
cmp
jns
out
filds
imul
clc
adc
and
pop
cmp
jecxz
push
mov
ljmp
cmpsb
cmp
jg
mov
push
sub
psubsb
push
in
or
sarl
mov
dec
and
es
xorb
clc
loop
std
sbb
xchg
or
data16
jne
mov
sub
in
clc
ror
push
mov
push
daa
inc
mov
loopne
pop
out
mov
lcall
cs
loop
sahf
xchg
push
test
roll
adc
cli
popf
lods
adc
inc
insb
or
sbb
test
cmpsl
roll
es
push
jmp
sbb
lea
mov
mov
cmpsl
fbld
mov
pop
dec
popf
jl
xchg
pop
push
xor
adc
es
pop
cmp
outsl
imul
mov
mov
mov
hlt
das
daa
mov
lea
cwtl
cltd
xchg
dec
pop
jl
pop
sub
or
cmp
rcrb
sub
adc
cmp
fildl
mov
ret
mov
mov
mov
in
xor
lods
push
or
insl
fbld
ficoml
in
pop
adc
lock
out
insl
pushf
fldt
rclb
inc
push
xchg
aam
jmp
clc
dec
inc
or
mov
xchg
inc
ds
aas
or
push
test
mov
clc
xchg
nop
ljmp
ds
dec
inc
pusha
jp
je
jmp
test
lock
jbe
pushf
int3
out
mov
jb
jge
add
xchg
lret
je
outsb
movsl
sbb
or
shl
sbb
rorl
pop
mov
mov
subb
xchg
adc
pushf
cs
sub
andb
repz
test
scas
inc
cli
adc
lret
dec
dec
push
dec
out
insl
clc
xchg
out
jnp
push
mov
or
adc
inc
out
scas
int
xor
jmp
dec
iret
jg
loopne
sub
xchg
shll
sub
das
mov
or
mov
cmp
and
andb
ja
aad
int3
dec
cmp
rclb
add
push
xchg
xor
loop
cmp
xor
arpl
imul
call
xor
mov
cli
and
imul
loop
sub
pusha
mov
cmpsb
adc
and
scas
xchg
mov
push
inc
add
xor
add
jecxz
mov
enter
js
mov
sarl
jne
mov
sub
lea
mov
adc
int
imul
gs
push
mov
adc
imul
jl
mov
cmc
mov
jge
xchg
sbb
inc
sti
stc
mov
jo
inc
repz
mov
imul
mov
jo
stos
pop
sbb
xchg
das
xchg
mov
gs
pushf
push
in
addl
out
jae
mov
dec
sub
data16
xor
insb
ret
test
leave
add
shl
movsl
inc
outsb
adc
inc
sbb
add
pushl
add
std
lea
mov
push
rorl
sti
fnstcw
mov
pop
bound
dec
inc
inc
push
stc
adc
jne
stc
cltd
fstps
fistl
jnp
int
cmpsl
ds
sbb
je
mov
mov
mov
dec
add
call
adc
pushf
cs
xor
imul
mov
pop
mov
and
insb
adc
aam
lret
test
mov
mov
sbb
lahf
mov
stos
sbb
jb
jge
inc
rcrb
xsavec
or
lcall
fidivrl
cmpsb
adc
or
xchg
roll
test
jl
or
arpl
mov
aas
fidivrl
jno
pop
and
rcrl
adc
lret
dec
jae
imul
pop
sub
cmpsb
push
jmp
cltd
shlb
ficoml
lods
adc
cmp
xchg
sbb
push
adc
addr16
xor
andl
push
in
push
fdivrl
jmp
stc
sarb
pop
inc
mov
fdiv
nop
push
dec
or
mov
addb
jg
sbb
or
inc
loopne
adc
sub
adc
jb
ljmp
fistl
sbb
adc
les
push
fstps
mov
mov
adc
xlat
test
mov
rcll
imul
push
mov
xchg
mov
loope
or
cmpsl
or
dec
nop
sahf
adc
imul
pop
dec
out
pop
faddl
mov
dec
movsl
add
jecxz
and
stc
xchg
pop
call
push
lret
and
fwait
test
movsl
push
into
add
outsb
int
aas
clc
push
push
and
adc
and
das
popf
inc
pop
insb
cmp
sub
cmp
sub
xchg
iret
mov
shrb
insl
pop
dec
lahf
xchg
loop
xchg
icebp
jb
clc
mov
cmp
sbb
add
iret
divb
into
push
adc
xchg
mov
test
pusha
rcr
jl
pushf
jno
mov
mov
inc
lcall
adc
xchg
call
add
xchg
inc
push
gs
or
enter
xchg
cmp
mov
adc
aad
and
sbb
cmpsl
add
lret
mov
jns
sqrtps
sub
movsb
sbb
push
mov
int3
adc
jle
dec
mov
rcll
fdivl
pop
pusha
fdivrl
mulps
dec
lcall
ficoml
mov
call
jns
xor
loopne
ss
js
das
pop
bound
xorb
fidivrl
lods
cli
inc
and
addb
loope
mov
stos
fisttpl
xor
bound
jmp
adc
jae
mov
in
xlat
or
loopne
push
push
pop
inc
xor
loopne
sete
push
popf
and
adc
call
fisttpl
movsl
out
dec
dec
xchg
fnsave
mov
cmp
cld
xor
push
dec
push
movsb
xchg
or
cltd
fidivs
les
leave
push
push
lcall
xchg
add
adc
ret
cmpsl
and
push
push
jge
sbb
xor
fld
xor
add
pop
xor
push
stos
fldl
sub
pop
push
xor
je
movsl
or
cs
and
push
movsl
xor
adc
and
test
jno
cmp
push
shlb
and
sbb
sarl
cmpsl
or
jns
add
arpl
jmp
hlt
test
decl
adc
jae
lods
fildll
sar
call
add
loopne
and
lods
push
push
pop
push
push
test
push
lret
insb
pop
arpl
shll
and
es
cmpsb
cmp
cli
mov
or
sub
mov
pop
xor
push
jbe
test
mov
daa
clc
sbb
in
xchg
push
and
lret
and
mov
ret
test
xchg
sbb
scas
xor
adc
fs
xchg
les
inc
repnz
lea
jl
sbb
lods
loope
or
pop
adc
sub
or
lret
pop
mov
push
adc
clc
mov
pop
jp
xchg
loopne
mov
sbb
and
mov
mov
cli
inc
push
push
out
push
jge
fcoms
enter
xchg
cmp
cmp
fsubl
xlat
sbb
xchg
and
jmp
push
lds
test
sarb
mov
dec
aaa
repnz
mov
shr
mov
dec
loope
test
sub
xor
or
in
shrl
and
push
call
enter
mov
loopne
dec
fistl
inc
push
or
sub
pop
jge
mov
mov
cmp
cmp
push
inc
cmp
and
in
dec
lret
arpl
push
ret
dec
dec
mul
popa
outsl
cmp
cmpb
outsb
sub
xchg
xchg
push
dec
iret
inc
pop
xchg
dec
push
shll
mov
cltd
or
pop
mov
aad
push
aam
out
js
fcompl
or
mov
sub
jg,pt
data16
cwtl
arpl
jnp
mov
add
or
dec
call
sub
dec
sbb
xchg
mov
adcb
sub
add
jbe
rol
mov
mov
shrl
add
sbb
ftst
adc
xor
pop
int
mov
jns
nop
mov
pop
mov
xchg
mov
mov
addb
repz
dec
aad
mov
mov
aaa
iret
add
jl
leave
and
inc
dec
pop
popa
out
sub
push
or
subb
sub
lock
in
and
inc
dec
ret
sub
jmp
divl
cmp
xor
test
test
sbb
adc
mov
sbb
xchg
pop
xchg
jl
scas
repnz
xor
out
dec
xor
xor
pusha
xchg
mov
das
xchg
out
ljmp
aam
mov
pop
sbb
fdivs
add
das
popf
mov
xchg
mov
loopne
popf
xor
or
test
in
lea
sahf
cmpsl
loop
mov
xchg
sbb
dec
push
outsb
xor
add
pop
dec
push
cmp
lods
mov
sbb
loopne
xchg
sbb
scas
pop
in
mov
and
aas
mov
mov
in
xchg
fisubrs
cmpsb
pusha
lcall
sbb
call
jmp
and
jp
ljmp
lds
sub
mov
xor
lret
sar
loope
enter
mov
mov
int
dec
pop
fcompl
xorps
or
out
movsb
cmp
pop
jg
imul
cmp
jge
cmp
ja
and
inc
mov
cmc
es
inc
xchg
faddl
sbb
andl
outsb
sbb
mov
mov
or
dec
and
mov
xchg
out
je
imul
dec
and
xor
mov
add
fld
dec
mov
outsb
cmp
int
fstpt
aam
xchg
sahf
jo
ds
add
test
pop
sub
rol
dec
add
dec
sbb
fnstenv
jg
sub
aad
add
orb
xabort
cmpb
cmp
dec
mov
push
test
dec
or
pop
int3
loop
in
add
pop
mov
pop
inc
sbbl
xlat
xchg
icebp
fists
sub
mov
and
addl
push
pop
mov
lret
aaa
int
es
out
mov
mov
rclb
lcall
fadd
and
sbbl
sub
add
fisubs
cld
mov
das
cmp
dec
xor
gs
ret
ret
cs
push
int
push
add
rorb
pop
mov
icebp
pop
and
dec
icebp
fsts
mov
imul
sbb
pop
ret
push
cli
cmpsl
pop
adc
mov
pop
push
xchg
or
push
out
out
push
inc
xor
fdivrs
mov
js
lods
shll
idivl
mov
mov
xor
mov
mov
cmp
inc
ja
push
cmp
mov
push
push
jae
gs
scas
cmp
lods
int3
mov
repnz
rorl
push
cmpb
int3
dec
popa
das
push
loopne
sbbl
jbe
add
stos
add
sbb
xlat
je
xorb
popa
clc
fldcw
add
es
mov
cld
jg
add
inc
dec
mov
inc
adcl
jbe
adc
loope
dec
mov
inc
sbb
jl
cmpsl
inc
movsb
rol
jl
dec
inc
cmp
mov
jbe
dec
jnp
push
pop
inc
xchg
aad
test
insb
rcrl
das
sbb
addl
daa
add
jb
push
adc
mov
mov
fwait
dec
fidivrl
dec
sti
jge
pop
adc
call
jl
das
cmc
mov
xor
call
cld
jne
fidivs
call
or
xor
fstl
test
lahf
adc
sbb
mov
inc
push
clc
roll
mov
out
addr16
push
add
cmp
jb
ljmp
sub
inc
pop
es
mov
das
jnp
inc
sub
xchg
dec
popa
add
mov
les
lret
jg
push
dec
iret
rorl
jno
jl
fiadds
jmp
lds
mov
scas
xchg
pop
pop
ja
push
insb
loope
popa
outsb
enterw
shr
jle
mov
or
push
pushf
xchg
adc
lcall
add
jp
sbb
xchg
mov
fmull
sbb
sub
sub
jmp
add
mov
ss
xor
test
xor
popa
frstor
mov
mov
fldt
aam
loopne
adcb
rcrl
das
ss
mov
sub
sub
push
fisttpl
jmp
shrb
sub
and
push
mov
icebp
xchg
xchg
addr16
pushf
cld
cmp
fldt
stos
or
jecxz
mov
xchg
sbb
jle
aam
sub
shr
or
push
jp
push
cmpxchg
adc
sarl
pop
and
push
rcll
cwtl
test
sbb
jmp
sub
xor
pop
jl
mov
dec
dec
add
push
jne
stos
movsl
shl
int3
mov
push
aad
mov
mov
push
movsl
outsl
pop
andl
inc
scas
bound
pushf
loope
xor
mov
lcall
test
mov
addl
adc
or
cmp
jmp
sub
shrb
and
repz
popa
test
imul
out
adcb
push
cmp
adc
fcomps
xor
in
mov
pop
add
or
sbb
pop
pop
cltd
js
imul
ds
cli
push
mov
mov
nop
or
lcall
shrl
cmp
jnp
jl
jle
inc
lret
fwait
popa
push
test
sbb
cwtl
stos
addl
out
mov
sbb
cmpsl
or
push
aam
push
adc
and
rcll
popf
aam
ret
loopne
lds
lahf
arpl
cld
push
daa
pop
pop
into
jbe
dec
loope
bound
jge
jge
xlat
ds
out
stos
mov
jle
jge
mov
dec
sti
jo
jmp
popa
push
add
pop
aam
mov
addr16
jle
push
ljmp
jp
push
ljmp
cmp
fisubrl
loope
mov
and
loope
idivb
or
jno
shll
dec
jo
lss
dec
dec
stos
lods
dec
mov
push
aaa
rcl
pop
jnp
out
or
pop
test
aam
cmc
lret
aaa
sub
mov
fists
xor
sbb
add
jl
xor
andl
fisttps
xor
pusha
xchg
loop
cmp
aad
jnp
clc
inc
inc
aad
xchg
jo
pop
into
mov
inc
rorb
ret
add
push
dec
mov
call
xlat
jg
pop
xor
ljmp
pop
ss
push
dec
sbb
fidivrl
pop
mov
cld
notl
lods
push
pop
add
movsl
sub
pop
xor
dec
sub
push
adcb
cs
mov
out
mov
xchg
dec
mov
xor
sbb
dec
daa
push
inc
lods
std
jae
test
lahf
mov
stos
ja
dec
stos
shll
or
fnstcw
ffree
mov
add
popa
add
push
xorb
sub
or
jb
icebp
aam
push
mov
jo
scas
ret
inc
test
dec
pop
sar
mov
stc
pusha
jecxz
pop
mov
clc
dec
and
xchg
leave
mov
jge
dec
hlt
mov
jo
repnz
pop
pushf
mov
mov
imul
pusha
out
aaa
mov
add
inc
pop
adc
push
jg
mov
mov
sarb
leave
shlb
imull
xchg
dec
mov
and
jbe
mov
loop
fdivl
loopne
dec
xchg
adcl
dec
cltd
outsb
pop
fdivrp
adc
sbb
jno
pop
js
movsl
xchg
sbb
movb
loopne
mov
scas
jnp
add
cmc
shll
leave
in
mov
inc
test
mov
lea
sbb
lret
add
push
mov
add
imul
lods
xchg
cmpsl
dec
jno
dec
push
mov
dec
mov
lahf
ja
scas
imulb
cmp
lods
sbb
jae
mov
scas
sbb
or
popa
and
das
add
imul
and
out
push
sub
pop
adc
rcrl
jle
nop
adc
lea
fcmovnbe
loop
inc
lea
jae
pop
dec
cmp
das
sub
pop
js
push
jmp
nop
fnstenv
rcrl
sub
and
xchg
sbb
mov
int
inc
fbld
stc
lret
xor
push
mov
scas
mov
out
inc
fstp
jg
jmp
pop
scas
imul
jb
je
or
push
addr16
bound
loopne
aas
daa
xchg
das
aaa
pop
lods
mov
add
cs
pushf
jne
inc
push
pop
adc
jbe
add
fstpl
sub
inc
testl
and
jge
lcall
inc
or
dec
or
and
loopne
rorb
xchg
mov
mov
call
lcall
pushf
lahf
ja
mov
xorl
sub
push
stos
fsubrl
sbb
and
loop
pop
inc
jecxz
add
ret
rcrl
sarb
cmp
cmpl
pop
imul
cwtl
push
dec
rolb
xchg
sub
jnp
dec
xor
repz
movsb
xor
ret
cmp
test
loop
aam
nop
or
push
fists
in
nop
adc
xorl
insl
xorl
popa
lods
xchg
jo
fmulp
pop
mov
push
out
and
pop
adc
and
mov
xchg
dec
fcomps
push
mov
jno
sar
repz
call
pop
aad
pop
lods
movsb
cmpsb
arpl
and
and
shl
jp
add
aaa
cld
add
pusha
std
xor
jnp
xchg
mov
std
cmpsl
sbb
gs
pop
xlat
cwtl
cmpb
push
sti
add
cltd
cmp
addr16
push
bound
pop
push
mov
pop
cmp
inc
sbb
or
jg
loopne
pop
lcall
scas
mov
clc
cmpb
addl
pusha
lret
sbb
sbb
pop
adc
je
std
jecxz
inc
jmp
insl
les
mov
out
es
ds
or
mov
in
aam
mov
xchg
xor
add
pop
push
mov
mov
push
fdivl
scas
inc
jnp
jecxz
mov
test
std
push
adc
sahf
add
imul
dec
push
inc
pop
movsb
push
les
and
inc
jo
pop
cmp
mov
repnz
lret
rcr
adc
pop
jle
test
sbb
add
jl
adc
js
adc
andb
and
lds
repz
or
cltd
mov
cmc
sbb
cmp
out
xor
scas
sbb
and
lods
nop
xchg
sbb
and
mov
incl
mov
xchg
out
lahf
nop
mov
push
in
inc
int
add
rorl
adc
add
pop
popf
dec
mov
cmp
repnz
dec
push
shlb
push
cld
adc
xchg
icebp
pop
cld
inc
sbb
jo
and
cltd
cltd
in
sti
shll
int
jbe
jmp
add
xchg
push
scas
idivb
aam
out
jae
fs
push
and
dec
int3
push
mov
adc
pop
scas
sbb
cmpsb
popf
cmp
popf
out
int
pop
adc
adc
add
int3
test
data16
mov
dec
fildll
lea
mov
stos
adc
adc
in
adc
loopne
dec
leave
gs
add
lcall
mov
outsl
pop
jge
fldl
enter
sub
sbb
cmp
cld
mov
pop
pop
mov
mov
daa
shld
icebp
push
repnz
in
sbb
in
fdivl
dec
cmp
insb
mov
inc
gs
cmc
or
pop
cmp
jmp
xor
jecxz
dec
mov
add
shlb
xchg
fcmovnb
add
shlb
test
lds
sbb
pop
int3
int
shl
loope,pt
xchg
inc
push
xchg
imul
movsl
sub
xchg
cli
push
outsl
add
mov
mov
push
and
push
mov
rcr
xchg
mov
add
aas
cld
lea
xorb
enter
dec
fcmovne
xor
sub
jns
mov
or
imul
mov
test
ret
cwtl
pop
inc
fldt
mov
adc
test
fidivrl
hlt
adc
jb
movsl
adc
jcxz
pop
jne
push
es
fadd
adc
out
rcrl
mov
push
jno
out
jmp
and
jo
cs
dec
fwait
fs
cmp
jno
out
cltd
jle
sbb
call
fwait
inc
cld
movsl
xchg
jmp
or
daa
xor
mov
in
xchg
mov
dec
ss
out
xor
cmp
jb
adc
xchg
outsb
call
cwtl
hlt
outsl
adc
pop
imul
jge
xor
add
inc
test
jns
out
test
mov
iret
adc
jo
in
aaa
mov
je
das
out
xor
cmp
into
stos
loopne
adc
jnp
cld
mov
notb
jae
pop
push
pop
xor
sub
push
xchg
subb
xor
lret
push
ret
into
cld
jno
or
je
shrl
inc
sar
inc
inc
sub
repz
lea
mov
lods
inc
cmpl
dec
bound
jl
push
outsb
push
xchg
xor
fwait
icebp
loope
les
cltd
push
adc
test
sub
mov
pop
aas
divb
push
xor
jnp
push
data16
sub
lahf
mov
inc
stos
cmp
pop
cmp
mov
xor
cmp
sbb
ficompl
inc
mov
xor
xchg
cmpsl
andl
stos
das
push
mov
fisubs
sub
cmpsl
fstpt
cmp
inc
das
imul
stc
push
bound
insb
add
adc
insl
sbbl
mov
leave
ja
fs
bound
sbb
add
outsb
push
dec
dec
popa
mov
or
push
pop
jbe
dec
mov
jp
cwtl
dec
inc
inc
mov
shlb
mov
sub
ljmp
pop
mov
mov
jecxz
mov
push
pop
mov
lds
adc
push
ja
imul
in
and
xlat
icebp
pop
inc
add
dec
xchg
stc
cwtl
mov
loope
lret
outsl
or
mov
jbe
fwait
mov
jp
jge
stos
dec
repnz
pop
stos
push
andb
cld
lea
push
jle
loopne
jb
test
sti
outsl
inc
mov
imul
lahf
cmpsl
cmp
xchg
sar
dec
shl
pop
add
outsb
mov
and
xor
cmp
call
out
arpl
add
sbb
orl
inc
cmp
arpl
ja
push
aam
sub
xor
mov
imul
sbb
pusha
and
mov
shrl
pop
jge
pop
adc
mov
je
je
daa
daa
dec
insb
dec
enter
inc
adc
fidivrl
out
in
sub
sub
push
mov
pop
xor
push
out
xchg
das
sarl
push
xchg
add
les
aaa
mov
jbe
faddl
out
adc
lret
ficoml
jle
mov
shrb
sbbb
lods
loopne
leave
inc
cmpsb
test
scas
push
fistps
in
xor
sarb
outsl
dec
repz
movsb
ljmp
outsb
aaa
in
test
mov
add
mov
mov
mov
repnz
shrl
cmp
imul
lock
stos
rclb
das
sub
lret
jp
or
je
popf
aas
fcoms
lahf
jge
inc
inc
mov
jl
orl
out
push
mov
jl
push
roll
fiaddl
mov
sarl
sbb
xor
fucom
and
sbb
xor
jae
mov
movsb
push
cltd
add
lock
movb
jge
cmpl
lret
jl
jns
insb
lret
cmc
push
sbb
lret
shlb
dec
dec
sub
mov
mov
or
mov
dec
and
test
pop
cli
stos
fidivrs
mov
xchg
pop
arpl
aas
xlat
insl
gs
cmp
icebp
mov
jge
mov
pop
aam
push
xchg
mov
add
dec
ret
movsb
loopne
mov
into
add
scas
mov
popf
add
inc
fs
mov
je
cs
dec
fs
jnp
jg
sbb
mov
fnstsw
dec
in
or
dec
pop
sub
inc
stos
je
dec
jl
lret
jno
mov
xchg
pop
mov
jo
lret
and
xchg
push
push
fs
lock
je
jbe
inc
and
mov
cmp
arpl
pand
lret
push
stc
mov
cmpsl
repnz
xor
sbb
mov
ds
xchg
adc
test
mov
aad
sub
or
jmp
movsl
mov
push
sbb
sbb
imul
and
subl
icebp
lret
xor
xlat
push
push
mov
cld
out
mov
sti
or
into
push
inc
fisttpll
cmp
dec
popa
loope
or
mov
adc
jmp
loop
xchg
jno
sahf
jp
roll
dec
lret
mov
xchg
out
cli
or
sbb
jae
mov
mov
pop
in
cmp
jp
jle
jno
sbb
pushfw
dec
mov
push
addr16
or
ljmp
test
js
mov
fwait
xchg
inc
jg
imul
xchg
lods
ret
jmp
hlt
aaa
mov
sbb
fcomps
bound
das
pop
mul
pushl
lcall
fwait
mov
push
add
popa
ror
or
dec
mov
ffree
adc
not
dec
inc
nop
repnz
nop
mov
inc
mov
negl
int
shl
adc
inc
es
lock
frstor
movsb
mov
jle
repnz
cs
xchg
cmp
push
dec
jbe
imul
test
insl
jne
and
ficomps
and
pushf
dec
pop
lods
lods
ret
movsl
push
or
icebp
adc
out
dec
sbb
dec
jns
xchg
mov
pop
repnz
adcl
leave
mov
xchg
lock
xchg
hlt
mov
push
pop
shll
shll
mov
mov
divb
daa
movsl
cwtl
push
stc
das
dec
pushf
cmp
ds
and
outsl
cmp
push
pushl
adc
mov
jle
cmpsl
cli
adc
mov
add
lret
jmp
test
icebp
and
out
mov
stc
popf
lret
sbb
jg
mov
rcrb
in
sub
ja
inc
jg
inc
stos
pop
int
add
daa
mov
fadds
push
in
jb
push
xor
gs
or
mov
es
sub
jecxz
repz
xor
mov
push
add
cmc
dec
repz
out
adc
add
xlat
add
repnz
inc
or
xlat
or
pusha
sbb
paddusw
jae
mov
adcb
ffreep
or
cmc
inc
aas
mov
das
in
das
popl
or
jg
dec
cmp
shlb
adc
mov
adc
mov
lds
mov
dec
push
push
xchg
or
sub
mov
xchg
xlat
xor
xchg
jae
mov
inc
jo
jnp
pop
xchg
jmp
xchg
in
mov
jle
or
push
push
xor
orl
sub
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
movl
add
andl
imul
mov
mov
mov
add
subl
or
mov
mov
mov
and
mov
movzwl
sub
mov
andl
add
xor
sbb
mov
and
mov
mov
addl
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
lea
sub
mov
sbbl
mov
incl
mov
addl
sub
adc
add
subl
mov
mov
orl
xor
addl
add
movl
jne
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
subl
xor
xor
sub
sub
xor
mov
mov
movl
jmp
pop
loope
mov
jnp
ror
scas
pop
cmc
xchg
pop
mov
movsl
jae
jp
pop
jp
out
jmp
mulb
loop
add
repnz
jbe
mov
pusha
in
add
inc
xchg
cmp
mov
lcall
movsl
call
fs
stc
in
in
cld
and
mov
rclb
aam
cmpb
and
incl
test
gs
nop
in
pop
bnd
mov
adc
ss
pop
jg
push
push
xchg
lret
mov
jp
sbb
xchg
cmp
les
scas
inc
mov
inc
sahf
pop
dec
mov
xchg
pop
mov
xorb
sub
cmp
dec
adc
cmp
lret
into
jmp
cmp
in
jae
inc
std
stc
mov
inc
lret
icebp
and
into
xlat
and
pop
push
lock
fcoml
sbb
adc
daa
daa
movsb
nop
lods
push
pusha
aam
fiaddl
js
pop
push
adc
pop
cmp
jae
in
test
mov
lods
roll
xor
gs
mov
dec
mov
xchg
rcll
dec
in
daa
mov
xor
jne
mov
mov
test
movsl
test
or
inc
push
sbb
pusha
mov
test
and
mov
pop
out
xor
inc
lods
addr16
add
call
sahf
std
mov
insb
adc
aaa
lahf
jmp
data16
in
adc
inc
and
insl
jg
xchg
in
pop
test
jb
fwait
sub
lods
jp
cld
movsb
mov
mov
dec
fcomp
enter
aam
jnp
sub
cmp
dec
mov
out
cmp
jg
es
test
inc
and
lea
loop
in
inc
movsb
mov
and
lea
fadds
push
das
pusha
cwtl
aas
test
and
sahf
sub
jecxz
ja
dec
jge
stos
xor
xor
and
lcall
mov
cs
pop
jmp
xabort
mov
mov
insb
mov
and
push
iret
in
lods
rolb
inc
xor
ja
sub
inc
add
jns
out
xchg
aaa
cmpsl
mov
xor
or
lahf
sbb
test
lret
push
test
mov
push
lods
xchg
cmc
sahf
in
out
insl
stos
jns
nop
sti
xor
and
push
mov
or
mov
ljmp
inc
inc
xorb
aam
push
xchg
mov
daa
or
push
cmpsb
cmpsb
shr
pop
push
jg
add
dec
cmp
pop
and
movsl
sbb
mov
stos
iret
ret
in
mov
movsb
xchg
jns
cmpsl
mov
mov
mov
shrb
jne
sub
mov
rorl
adc
aam
negl
mov
jae
xor
mov
pop
out
shlb
push
jl
sti
les
xor
jo
adc
or
xor
test
in
mov
or
outsb
rcr
mov
dec
cmp
jnp
xorl
cli
xchg
sbbb
jecxz
cltd
push
pop
inc
aad
push
adc
int
mov
pop
je
bound
repz
xchg
inc
das
das
idivb
pop
jb
xor
inc
flds
into
jne
mov
in
push
push
xor
les
repnz
ja
orl
stc
in
or
out
dec
fldenv
lcall
insb
pop
ret
fwait
mov
mov
mov
test
pop
adc
inc
xchg
sti
ror
jmp
push
sub
ljmp
and
and
clc
sub
cltd
xlat
sub
mov
leave
addl
add
in
lret
or
sub
and
cmp
into
dec
push
mov
leave
jne
imul
imul
xchg
mov
xchg
xchg
push
push
insl
push
out
mov
scas
mov
lret
popf
and
sub
inc
xor
add
sahf
pop
lds
and
push
and
pop
mov
mov
sub
pushf
lret
into
idiv
push
imulb
insb
cmp
sti
pop
sbb
pop
pop
sub
cs
stos
xor
inc
in
adc
addr16
es
fwait
jecxz
push
testl
jg
pop
fcoms
scas
aad
mov
ret
push
jnp
inc
stos
pop
mov
enter
xchg
xchg
insb
and
repz
bound
mov
fstp
cmp
xor
add
mov
inc
sbbb
inc
inc
aad
divb
jns
jl
fcmove
lods
shrb
loope
sbb
jne
xor
ds
and
ret
mov
add
xor
inc
mov
out
mov
subl
test
stos
mov
sarb
xchg
mov
mov
add
mov
in
or
stc
rolb
mov
lock
jp
mov
sub
lahf
jae
cmpb
mov
addb
xchg
adcb
mov
lret
insb
roll
jmp
jmp
add
popf
aaa
lock
je
aaa
mov
jnp
adc
loope
sbb
sbb
ret
sbb
subb
adc
adc
cmp
jle
dec
jle
push
sub
insl
or
sbb
movaps
inc
js
fcoms
sub
dec
test
aam
pop
cmc
outsl
or
mov
aad
call
mov
sub
sub
fimull
add
xor
ret
imul
mov
fistl
stos
arpl
push
push
xchg
notb
mov
je
adc
popf
fimull
or
call
enter
or
clc
adc
sbb
adc
imulb
sub
mov
stos
sub
sub
outsb
lds
pop
shr
cli
dec
out
cli
addr16
loope
inc
mov
ja
mov
and
mov
cld
in
pop
dec
repz
subl
sub
adc
jmp
out
scas
xchg
dec
inc
bound
pop
mov
mov
add
popf
mov
cwtl
clc
js
nop
mov
pop
cmpsb
mov
in
lods
out
adc
push
popa
fistps
xchg
js
popl
loopne
mov
jns
popa
test
xlat
mov
inc
mov
iret
int3
mov
xor
ret
pop
insb
enter
lret
inc
cmp
rorl
lea
notb
icebp
and
inc
or
add
in
and
arpl
mov
jmp
xchg
adc
inc
mov
ror
cmpsl
xchg
dec
mov
mov
pop
add
sbb
stc
and
shrb
jnp
mov
pusha
insb
push
mov
les
rorl
mov
pop
mov
sub
and
das
in
out
mov
xor
lds
jns
dec
shlb
sti
es
lods
mov
rcl
push
pop
fnstcw
add
mov
shrl
xchg
pushf
loopne
fmul
inc
jno
mov
jge
inc
mov
lods
scas
dec
lods
out
pop
out
pop
jmp
cmp
or
cmp
les
imul
lods
es
lds
inc
nop
cld
loopne
repz
xchg
les
mov
sar
xchg
int3
hlt
pop
rcr
jmp
inc
jmp
js
ja
or
push
mov
pop
repnz
inc
insb
dec
nop
fistl
imul
cmpsb
pop
jns
ss
dec
push
stc
xlat
cmp
xchg
cmp
or
or
push
xor
fwait
mov
add
divl
movl
sub
adc
inc
mov
jp
shrb
loope
dec
push
jbe
push
sub
scas
nop
adc
arpl
cmp
movsb
jno
sahf
inc
adc
scas
iret
jp
sti
mov
scas
sub
jnp
jp
rol
popf
inc
divb
cmp
subb
enter
pop
bnd
lahf
std
mov
mov
lret
fisubs
mov
push
decb
int
xchg
jno
inc
out
xlat
jp
test
fsubl
mov
int
mov
jge
push
dec
push
push
push
in
subb
fidivl
call
mov
jg
add
hlt
mov
loop
int
sub
lods
lods
add
dec
aaa
xor
sbb
test
pop
std
daa
add
pop
jmp
ficoml
nop
xorb
pop
jp
and
fldenv
aam
sbb
sub
xlat
sarb
add
jae
mov
mov
and
data16
lds
in
subb
xchg
xchg
sub
jecxz
mov
lahf
pusha
xchg
in
dec
jp
sbb
mov
ret
stc
and
sub
mov
and
adc
adc
sahf
into
cs
inc
cs
lret
xlat
push
into
mov
pop
lds
xor
pop
enter
and
or
sub
in
lock
fwait
sub
mov
cmc
movaps
outsl
xor
xor
popf
cwtl
add
xor
sub
ja
ret
inc
adc
mov
lcall
xchg
jb
xchg
and
lret
xor
insb
or
jo
scas
push
xchg
or
xor
sub
clc
repnz
mov
mov
loop
stc
jl
push
push
cpuid
jg
mov
shlb
inc
sbb
cli
dec
int
dec
dec
jno
fwait
ret
iret
push
xchg
and
xchg
and
lahf
stc
push
mov
xlat
cli
or
es
pop
movsl
sbb
stos
hlt
xchg
in
sub
idivl
popa
shld
cwtl
push
int3
push
mov
test
and
js
xchg
push
loop
outsb
popf
jecxz
xor
outsl
les
jno
pushf
jg
addr16
daa
mov
les
cmp
je
sub
pop
mov
or
cmpsb
into
fdivr
out
jg
out
mov
adc
pop
sbb
jecxz
xor
xchg
push
aas
mov
adc
loop
movsl
notl
or
cmc
inc
je
fisubs
std
or
dec
push
sbbb
iret
lcall
jae
mov
mov
inc
or
addb
sarl
inc
iret
push
inc
mov
js
push
push
pop
les
xor
ffreep
jle
or
ret
xchg
and
imul
nop
icebp
call
or
in
lret
cmp
mov
je
pop
dec
mov
mov
mov
fisttpll
ja
push
push
ret
inc
mov
gs
popf
or
in
inc
xchg
fdivs
sub
inc
sub
or
cmp
or
mov
mov
push
jns
mov
js
or
scas
in
mov
pop
mov
movsl
and
pop
or
das
mov
sbbl
data16
insl
inc
inc
loopne
cwtl
aad
push
in
mov
fiaddl
test
pop
bound
add
jbe
hlt
jl
adc
pop
push
mov
inc
mov
cmc
shrb
out
fcoms
dec
or
mov
mov
xor
xchg
ror
push
push
lret
adc
sbb
mov
mov
mov
add
imul
dec
iret
fisubrs
out
xchg
aad
pushf
xchg
pop
or
jno
je
lds
stos
jae
data16
cli
jl
mov
es
inc
je
stc
mov
ret
pop
push
iret
int3
or
mov
ret
inc
popa
mov
negl
pop
cmpsl
pop
icebp
and
jno
ret
lret
jmp
adc
lret
xchg
inc
in
mov
sbb
rolb
mov
int
inc
lret
call
xor
ret
stc
scas
add
mov
jp
and
jmp
sub
adc
stos
sbb
inc
dec
outsl
and
inc
mov
and
loopne
cmc
dec
mov
push
xchg
and
inc
cmpsl
mov
daa
mov
fldl2t
test
xor
cmp
cli
aad
test
adc
mov
cmpsb
movsl
push
and
rorl
adc
jp
inc
mov
jbe
jne
fldl
push
addr16
addr16
ret
jbe
push
cmp
pusha
notb
mov
sbb
mov
movsl
or
cmc
mov
sbb
mov
and
or
inc
cmp
in
mov
xchg
loope
xor
xor
push
adc
mov
sahf
lock
aam
sbb
stos
mov
adc
int
mov
scas
insl
push
ljmp
fsubrs
xor
cmp
add
pop
mov
les
inc
sbb
shll
fwait
mov
inc
sahf
shlb
adc
xchg
aaa
dec
pop
inc
pop
jns
dec
repz
mov
arpl
jae
subl
jge
lods
adc
cmp
xor
sub
faddl
mov
sbb
jl
pusha
sbb
shlb
sti
cmpsl
ja
mov
mov
rclb
mov
rcll
lret
pop
add
ds
cltd
cwtl
and
pop
lcall
pop
negb
mov
test
out
movsb
mov
aaa
adc
cmpb
idivb
pop
mov
mov
lahf
cmpsl
pop
mov
in
cmp
xchg
ret
fcomip
gs
out
aas
imulb
cli
pushf
jns
scas
push
sub
mov
sub
push
xchg
jl
aad
sti
ljmp
shrl
pop
mov
aam
cmpsb
lcall
mov
adc
jp
xor
push
adcb
add
fnstcw
popa
cli
adc
adc
dec
add
aam
sahf
jecxz
pop
mov
dec
jbe
mov
mov
in
mov
out
dec
and
sub
scas
pop
cmp
and
lret
mov
fstpt
dec
das
pop
mov
outsb
ret
mov
test
mov
xchg
sahf
inc
push
jnp
hlt
stc
out
das
add
jb
std
add
outsl
rcll
shll
lds
xchg
stos
sbb
iret
pop
les
daa
sahf
inc
add
in
or
rol
push
sub
shll
sub
and
lret
cld
xchg
lods
cli
leave
repnz
sub
cmc
mov
push
gs
add
mov
insl
jo
ja
notb
adc
inc
test
jmp
and
or
imul
sar
push
pop
cmp
fmull
into
rcl
push
mov
inc
pushf
pop
xchg
movsb
outsl
stos
inc
sub
fidivrs
mov
xor
pop
cli
lahf
cld
dec
ret
andb
cmpsb
inc
arpl
cld
cmpsb
leave
int
lcall
sub
int3
lret
add
xchg
fdivrl
mov
jbe
mov
jnp
sub
orl
addr16
and
iret
les
iret
push
pop
loope
stos
push
xor
outsl
cwtl
stc
add
add
fs
ljmp
mov
dec
or
and
xor
jmp
sar
mov
pop
push
movsb
lcall
mov
inc
mov
ret
andl
mov
push
bound
sarl
xor
adc
dec
lcall
jae
sar
add
lret
inc
and
je
mov
stc
xor
or
loope
xchg
mov
cli
cmp
push
fimull
mov
pop
out
dec
sub
xchg
mov
and
out
cmp
xor
or
dec
or
mov
loope
aas
jns
cwtl
adc
add
insb
push
ja
in
hlt
mov
and
mov
lds
in
mov
xor
mov
lods
std
cmpsb
stc
jl
pop
xchg
mov
or
insl
inc
push
dec
shlb
mov
xor
pop
inc
lahf
repz
or
cs
xchg
loopne
add
fs
rorb
sbb
pushf
daa
mov
negb
mov
fistps
mov
and
sbbl
or
xlat
fsubrl
inc
or
lret
es
push
hlt
aam
lret
push
call
jmp
cmp
mov
addr16
pop
adc
out
cmp
push
fstl
or
clc
rcll
and
and
aad
mov
pop
daa
mov
sarl
xchg
adc
int3
jns
lahf
mov
inc
stc
daa
lods
pusha
int
imul
in
cmp
xchg
in
cli
jb
ret
and
icebp
adc
shl
repz
popf
adc
cli
test
jg
js
mov
fisubl
or
pop
mov
mov
sub
addr16
aaa
xor
jp
jnp
incb
cmp
cld
fistpl
jo
repz
sbb
dec
lea
mov
mov
pop
jae
repnz
mov
imul
out
cmpsb
mov
xor
xor
lock
jmp
jns
ficoms
mov
in
mov
mov
pop
sbb
or
and
push
jl
pusha
aaa
adc
ja
in
fucompp
xchg
loop
insb
cwtl
xchg
ret
sub
jbe
cmc
cmp
sub
popf
jg
xor
std
mov
adc
pop
in
sbb
add
mov
mov
push
and
stos
mov
in
and
or
push
push
popa
sbb
insb
dec
std
sbb
push
mov
lahf
mov
dec
mov
cmp
pop
aam
jecxz
cli
lret
sbb
inc
jmp
mov
mov
xor
xor
cmp
dec
pop
push
stos
pop
into
and
ljmp
pop
ja
jle
arpl
lahf
xor
lods
sub
cmp
fs
sbb
repnz
aaa
mov
cmp
fmuls
mov
insb
popf
xchg
mull
loope
mov
lcall
add
test
movsb
pop
shl
xchg
jo
out
out
lods
and
xor
pushf
int3
call
push
xor
aam
inc
xor
push
pop
pop
imul
mov
inc
pop
rcl
add
movsl
inc
inc
insl
and
ds
int
mov
test
dec
jmp
fildll
lret
rcll
xor
in
jne
into
jns
test
je
add
cmp
or
scas
sub
xor
into
clc
daa
cld
mov
cmp
fidivrl
sub
xor
aam
push
xchg
mov
out
fdivs
inc
inc
mov
inc
lds
ret
xorl
jns
mov
fistps
cmp
xchg
sbb
sbb
enter
mov
fld
lcall
leave
adc
mov
mov
int3
imul
and
cmpsb
and
js
push
mov
push
das
xchg
adc
xchg
adc
jg
xchg
xor
sub
xchg
inc
xchg
sbb
enter
and
pop
xchg
mov
fwait
out
xchg
jnp
push
xor
ret
and
js
imul
loopne
push
dec
arpl
sbb
nop
repz
or
cwtl
leave
pop
aaa
push
sahf
fldl
xor
sub
rcr
add
mov
adc
sub
movsl
adc
hlt
stos
push
mov
sub
or
outsl
lea
pop
and
incb
sbb
lahf
mov
push
imull
dec
mov
jge
mov
xchg
mov
or
sbbb
movsl
jg
push
dec
cmpsb
aad
mov
cmpsb
adc
pop
jmp
mov
jno
adc
hlt
test
divl
enter
ss
dec
adc
imul
push
mov
leave
adc
xor
in
xchg
xor
jb
loopne
inc
sbb
mov
fnop
mov
and
and
dec
xchg
xor
mov
shll
fsin
mov
bnd
clc
cmp
xchg
imull
sub
jle
sti
stos
pop
pop
push
mov
or
out
xchg
mov
xchg
icebp
sahf
test
jno
dec
xor
imull
repz
ret
push
stos
jbe
pushf
dec
xchg
notb
nop
popf
cmpl
and
xchg
les
lods
outsb
jns
cs
xchg
ja
push
mov
mov
out
lahf
dec
pop
or
insb
dec
jle
orl
loope
pop
shl
imul
xor
shr
ret
mov
cmpsb
mov
out
jge
push
ss
or
cltd
in
push
push
sub
stc
jl
adc
dec
lcall
inc
iret
mov
pusha
ss
cmp
pushf
dec
xchg
lret
xlat
push
dec
mov
adc
scas
mov
sbb
dec
lcall
sub
cmp
jg
lret
lods
scas
fldl
and
js
add
dec
les
xor
aad
js
mov
dec
mov
jb
push
lea
jge
xor
call
test
cmc
int3
add
jg
out
or
pop
shlb
adc
mov
je
push
cmp
in
out
imul
sub
addr16
and
cmpsl
out
test
inc
pop
add
sub
dec
xor
mov
mov
mov
push
addr16
fldl
inc
xchg
and
pop
inc
testl
adc
push
std
mov
insb
mov
mov
mov
cltd
movsb
test
cltd
ljmp
xchg
dec
xor
sub
outsb
mov
jnp
mov
mov
lea
xchg
loope
mov
xchg
adc
xor
xor
lahf
fists
xchg
cmp
or
xor
mulps
push
xlat
mov
aas
sub
test
aas
mov
aas
xchg
push
outsb
fndisi(8087
negb
popf
test
cmp
push
fdivs
dec
insl
repz
adc
test
jecxz
popa
or
int3
nop
xchg
mov
in
xor
aaa
mov
fisubrs
in
shr
add
adc
xchg
mov
sub
repz
leave
xchg
jns
push
adc
ss
movsl
arpl
pop
or
and
push
pop
fsubp
gs
inc
aad
popf
push
rcll
rorl
mov
mov
shlb
sahf
hlt
addr16
in
repz
adc
mov
add
xchg
xor
push
mov
loopne
fisttps
jo
shrb
outsb
fildl
das
repz
mov
les
pop
popf
xlat
xor
popa
xchg
daa
sbb
or
aaa
sub
mov
lcall
adc
out
xchg
xchg
stos
xchg
call
notl
jbe
push
cmc
test
adc
mov
aas
scas
stc
aad
out
xchg
dec
pop
movl
ljmp
out
jp
or
sbb
stos
lods
xchg
xor
loope
test
dec
inc
sbb
lds
pop
mov
stc
mov
iret
cli
sbb
push
call
xchg
sarl
mov
aaa
es
cmp
es
mov
pop
hlt
ss
popa
dec
out
stos
cmp
rcll
out
jne
fwait
mov
jne
adc
gs
pushf
adc
xor
inc
jl
adc
adc
aad
adc
sub
jno
and
sbb
dec
hlt
scas
testl
popa
orl
popf
in
adc
or
jmp
in
jl
lret
mov
sub
mov
rorb
xchg
rclb
pop
in
mov
adc
psrlq
jae
lcall
scas
movsb
jne
pop
jo
in
iret
mov
jg
jmp
ffree
pop
aad
adc
jno
outsb
cmp
mov
int
or
rcrb
repz
shll
scas
jmp
addl
mov
mov
les
cltd
xchg
aaa
jns
xchg
push
or
insb
add
jne
xor
mov
es
ljmp
add
or
push
outsl
cmp
stos
cmp
cmp
fs
mov
cmp
repnz
mov
shl
sahf
aad
insb
jo
ja
and
adc
xor
push
int3
cmpl
add
mov
and
add
or
push
push
lret
cmp
mov
push
scas
cld
push
shl
jl
dec
xor
sub
imul
or
popf
add
popa
fldt
hlt
fwait
mov
repnz
dec
aam
imul
add
and
mov
jne
in
shll
sub
xchg
mov
ss
mov
dec
in
jmp
xchg
adc
repz
push
cmp
add
push
out
dec
shll
faddl
sub
lcall
dec
jp
mov
scas
jecxz
dec
jno
fimuls
fimull
dec
sbb
mov
pop
push
inc
arpl
xchg
fisubl
insb
mov
and
jg
pop
aam
cmp
cmp
pop
pop
inc
ficomps
mov
mov
push
sbb
push
adc
sub
call
cmp
mov
sub
dec
call
or
dec
cmpsb
push
iret
or
pop
mov
push
jae
sbb
jp
push
mov
mov
or
xor
mov
jp
and
popa
jle
mov
jo
addb
xor
loop
aad
jmp
clc
sbb
es
mov
fsts
push
leave
jl
mov
push
fsubrs
push
lret
push
ret
sub
daa
sbb
aad
lods
mov
xchg
clc
mov
in
popf
fcomp
adc
sub
sub
xchg
repz
cld
pop
fs
jbe
sub
insb
cmp
fisubrl
xchg
je
out
xchg
mov
cmp
je
cltd
gs
adcb
insb
gs
sub
cmp
sub
jp
stos
mov
lods
out
dec
sub
mov
adc
adcb
imul
jl
fsts
gs
mov
enter
in
or
ds
fwait
aad
mov
lods
fs
inc
aaa
mov
pop
mov
in
inc
pusha
or
stos
jnp
pop
mov
pop
movsb
push
shl
clc
mov
xchg
sbb
aad
mov
mov
mov
test
mov
mov
pop
popa
xchg
xchg
adc
and
cmp
push
xchg
movsl
rcrl
adc
pop
lcall
data16
pop
in
inc
add
sarl
add
jle
mov
and
pop
out
int
cmc
xchg
sti
aas
mov
int
and
arpl
cmp
test
repz
pop
xchg
jne
das
lea
pusha
xor
aam
fdivrl
and
jmp
lock
mov
xor
mov
add
xchg
mov
iret
mov
data16
rorl
ficomps
push
pushf
mov
xchg
mov
jge
bound
dec
shlb
jl
xchg
push
scas
dec
cs
xor
xchg
cli
fiaddl
ficoml
pop
push
adc
mov
jb
loope
aam
nop
enter
cmp
and
stc
pop
movsb
fcomps
popa
stos
lods
outsl
iret
pusha
jge
iret
outsb
and
mov
filds
and
aam
pop
mov
push
in
je
push
insl
test
movsl
mov
add
dec
outsl
pop
pop
mov
jmp
xor
rcl
repnz
inc
xchg
scas
stc
popa
clc
xchg
add
push
clc
shll
test
fs
adc
and
cmp
xor
bound
sbb
movsb
sub
jno
hlt
loop
or
lods
jbe
sbb
aaa
shrl
push
scas
mov
je
std
push
int3
adc
ds
lods
ret
icebp
sbb
js
test
or
xchg
nop
popf
xor
inc
xchg
scas
or
jbe
daa
inc
sahf
and
popf
rol
jo
xor
add
subb
push
roll
sahf
sti
push
mov
ljmp
pop
push
push
and
cltd
inc
idivl
lcall
test
mov
xchg
cmpsb
mov
mov
xchg
roll
push
cs
jmp
scas
mov
scas
stc
add
mov
sbb
inc
scas
pop
dec
out
jo
mov
scas
mov
jae
mov
jbe
jl
add
clc
shl
les
adc
adcb
ss
mov
outsb
inc
sbb
inc
pop
pop
shrb
loopne
test
cmp
outsb
and
or
fmulp
addb
push
enter
adc
jg
test
dec
cltd
lret
and
pop
pop
push
fstps
mov
idivl
lods
add
sbb
xchg
cmp
mov
mov
fwait
in
adcb
adc
xlat
fstpl
inc
gs
adc
xchg
jg
push
cwtl
addr16
mov
movsb
xchg
sbb
sub
mov
push
add
jo
jecxz
js
jge
push
sarl
lock
adc
repz
dec
ret
pop
sahf
inc
out
inc
jmp
insb
jnp
cmp
xchg
lahf
stos
mov
mov
sbb
xlat
popf
add
aaa
bound
mov
mov
cmp
inc
shlb
fadd
fsts
push
add
xchg
repnz
mov
mov
inc
mov
pop
mov
ret
mov
jne
dec
addr16
ficoms
lods
loop
loopne
out
sbb
sbb
out
nop
rcl
pop
push
rclb
testl
xor
ds
daa
mov
jne
push
std
das
daa
or
push
ret
mov
mov
or
xchg
dec
push
in
adc
push
cmp
xor
add
mov
adc
push
out
mov
movsb
cmpsb
ljmp
jg
aas
mov
push
mulb
push
scas
sub
cmp
mov
lds
stos
xor
in
or
cli
and
cli
jne
fstps
daa
mov
jae
roll
dec
push
push
adc
enter
inc
dec
or
mov
jo
dec
jb
mov
mov
data16
push
mov
cmpsb
dec
test
fwait
ljmp
inc
mov
add
leave
ss
arpl
mov
mov
out
and
ds
in
arpl
jg
lods
fcmove
mov
andb
cmpsl
out
fidivrs
mov
outsl
insb
xchg
or
xor
js
xchg
xor
inc
lret
fadd
pop
mov
xor
loopne
dec
add
rcrl
add
hlt
insb
enter
inc
pop
lods
loopne
xchg
loope
mov
dec
shl
cmp
rcl
insl
mov
xchg
sbb
lret
xlat
movsb
pusha
out
ficomps
and
in
jne
sbb
out
stc
scas
je
mov
loope
and
lds
es
in
xor
ficomps
cmc
mov
in
ret
inc
insl
mov
lea
clc
lea
test
repnz
in
ds
push
sarl
nop
xchg
shr
mov
gs
xchg
sub
test
cmp
sbb
and
add
sbb
inc
add
test
add
sbb
sub
jnp
mov
cld
sti
loopne
push
jns
push
pop
jp
je,pn
pushf
add
push
cmp
xchg
or
ret
clc
fcoml
shr
mov
add
scas
xor
addb
jecxz
gs
push
mov
repz
fistpll
or
mov
jle
fnstenvs
ss
xor
cmpl
push
test
int
sub
inc
add
ret
loopne
repnz
push
mov
jns
jmp
jp
add
cli
inc
xor
call
push
out
popf
jns
push
ret
sub
mov
mov
sbb
add
pushf
mov
xor
rclb
or
leave
xchg
mov
sbb
std
adc
shll
loop
je
movsl
mov
mov
lret
adc
fldcw
rclb
lcall
fsub
lods
sbb
push
orb
xchg
jns
sub
xchg
int3
dec
into
inc
test
mov
hlt
in
fiadds
lcall
test
mov
into
add
fldcw
nop
dec
into
jbe
adc
xor
stos
lret
cmp
jg
mov
int
pop
loope
jle
icebp
sub
int
rcrl
into
or
sbb
or
add
mul
sbb
push
fimuls
inc
push
jl
rcrb
add
xor
mov
decb
cmpsb
push
andl
or
scas
jae
sub
add
or
inc
xchg
cld
xor
aaa
stos
jmp
and
mov
adc
rorl
andl
mov
or
push
adc
xor
popf
fprem
sbb
out
rcrb
xchg
sub
aam
mov
mov
call
and
pop
push
cmc
negl
cmp
cmp
or
out
mov
mov
call
xchg
out
imul
jcxz
mov
repnz
adc
jb
xor
cmpsl
mov
mov
add
pop
jb
js
das
jl
pop
bound
add
xor
cmp
pop
pop
popf
daa
das
int3
mov
or
xor
jg
mov
mov
fwait
ret
lahf
mov
adc
lods
loop
mov
mov
lret
lods
or
dec
cwtl
mov
adc
nop
push
xchg
mov
arpl
inc
add
popf
and
lret
adcb
clc
movsb
dec
in
lcall
jns
adc
enter
test
dec
or
xor
dec
test
jae
outsb
jl
and
sub
mov
xchg
es
dec
stos
sub
add
jae
inc
cmpsl
jl
or
fiadds
xchg
mov
push
mov
notl
and
sbb
xor
xchg
and
js
mov
movsb
dec
inc
outsl
repnz
push
mov
daa
adc
cmp
mov
loopne
js
cmc
or
sub
arpl
pop
jae
testb
add
pop
mov
mov
insl
pop
ds
shll
addr16
cwtl
push
sbb
mov
add
fwait
mov
bound
cmp
dec
xchg
icebp
mov
or
cmp
mov
mov
mov
imulb
rorl
cmp
test
lods
mulb
inc
sarb
cmp
cmc
div
loope
dec
pop
mov
ja
jo
punpcklbw
pop
xor
adcb
pusha
push
and
in
shll
cmp
or
mov
push
mov
fwait
or
out
dec
sbb
jb
sub
jle
jecxz
pop
cmovae
push
xchg
cltd
ljmp
cmp
imul
xlat
rol
out
lds
add
push
pushf
call
adc
fldcw
je
inc
outsl
xor
mov
inc
cmp
lret
imul
sbb
sub
rolb
std
inc
xchg
cmpl
or
xor
scas
dec
in
js
sbb
dec
sahf
cmp
xchg
sahf
mov
bound
mov
ret
dec
out
cmc
insl
mov
fs
test
cwtl
mov
lock
sbb
inc
rclb
test
iret
mov
mov
dec
jns
repz
icebp
int
adc
in
lret
push
add
jbe
cld
mov
cwtl
sub
jmp
dec
xor
frstor
repnz
add
or
ds
clc
cmp
lea
push
ret
xchg
dec
dec
mov
gs
cs
movsl
outsb
lcall
arpl
jbe
addr16
movsb
jbe
mov
loopne
ds
gs
mov
cmc
hlt
sahf
sbb
arpl
int3
push
out
adc
repz
lods
jno
outsl
mov
pusha
ja
or
mov
pop
sbb
je
sbb
jae
je
sbb
cs
push
cmp
adc
mov
test
fsub
leave
cltd
xor
mov
int3
jp
in
jb
es
sub
stos
inc
cld
shlb
ja
or
inc
fstps
aam
pop
pop
adc
cmc
sub
pop
cld
mov
or
cmp
sbb
pusha
sbb
lret
popa
adc
insb
aas
dec
ja
nop
out
sub
insl
sub
imul
and
nop
xlat
mov
aad
mov
bound
jl
repnz
pushf
mov
cmc
bound
gs
sub
jns
sub
fimull
cmc
pop
and
cmp
test
scas
push
inc
push
and
int3
cmp
sbb
pop
or
cmpsb
add
pop
test
sub
mov
jne
in
mov
jmp
cs
leave
loopne
jo
mov
push
unpckhps
lods
add
sub
shrb
mov
ljmp
sbb
jmp
sub
inc
stos
xchg
mov
xor
pop
ss
insl
aam
sbb
mov
aad
jb
and
mov
aas
mov
push
mov
nop
int3
incl
mov
mov
sbb
inc
xchg
jbe
or
inc
dec
cmp
jo
in
pushf
mov
addl
stos
ret
cltd
mul
dec
inc
gs
and
leave
hlt
loope
add
fwait
add
daa
fsubl
imul
jl
sbb
sub
cld
in
lock
push
and
cmp
push
mov
lods
iret
jge
jl
and
test
xorl
xlat
xor
xor
mov
adc
adc
insb
sub
sahf
fisttpll
mov
stc
xchg
push
and
xchg
daa
push
addb
scas
out
fcomps
imul
mov
int3
sbb
pop
jp
sub
enter
mov
loop
fs
dec
cmp
cwtl
xorl
loope
or
xor
xor
pop
insb
and
and
cmp
dec
mov
or
inc
scas
into
icebp
fsubl
adc
addr16
pop
adc
js
inc
ss
jno
xchg
inc
and
adc
cmp
push
rcrl
mov
push
leave
mov
das
cmc
repz
add
xchg
adc
pop
stos
xchg
cmpsl
pop
loopne
test
mov
jno
mov
or
lods
insb
sbb
and
jbe
iret
mov
das
lock
int3
jp
shll
lock
cld
lahf
mov
sti
mov
xor
in
stos
mov
dec
stos
pop
push
xor
fs
shll
mov
dec
jbe
fisubrl
cmp
add
lahf
dec
sarl
xchg
int3
adc
sti
and
or
test
or
negb
mov
add
jae
fildll
popa
push
orl
xor
cmp
push
sub
scas
inc
mov
xchg
mov
mov
xor
es
xor
addr16
loopne
leave
jl
and
ret
or
pop
sub
xchg
pop
out
push
sub
mov
lock
fwait
out
les
cli
jl
pop
fmul
fildll
pusha
stc
cli
jo
cltd
xchg
dec
out
mov
fwait
inc
mov
mov
jg
sahf
cli
inc
fdivs
mov
iret
stos
jbe
inc
push
repnz
jle
inc
shrl
lods
jle
data16
dec
dec
mov
dec
jle
adc
pop
add
jae
pop
fcmovb
xchg
and
cmpsl
push
sti
hlt
rcll
and
jle
pop
fwait
stos
push
out
es
mull
notl
or
or
daa
sbb
ret
add
notl
pop
xor
pop
cmp
outsl
pop
sti
inc
inc
xor
jmp
mov
mov
lock
jp
pop
cld
enter
adc
xchg
cs
inc
lods
popf
pushf
repz
pop
inc
ss
sub
jbe
mov
or
loop
mov
call
jge
mov
in
rcrl
inc
inc
mov
or
cld
sub
inc
fs
scas
pop
es
push
xor
not
mov
lcall
mov
adc
xor
push
xchg
orl
cmp
dec
lret
aas
and
dec
dec
cmpsb
xor
mov
orl
sbb
sbb
and
mov
mov
iret
movsb
sbb
add
or
xchg
jae
cli
mov
lods
loop
jbe
add
cmp
cs
stos
cmp
push
xor
stos
ret
daa
pop
cmp
pop
arpl
dec
shll
and
xor
mov
mov
cmp
cmp
dec
or
and
mov
inc
subb
inc
mov
mov
aas
addr16
xor
imul
imul
inc
repnz
push
and
or
xor
cmp
lret
rcr
adc
jno
fsubrl
cwtl
les
lods
mov
pop
sub
push
xchg
imul
imul
hlt
add
jge
ljmp
test
cmpsl
pop
fwait
xor
mov
insl
lcall
jg
mov
dec
stc
stos
in
push
movsb
pop
pop
fdivp
pop
repnz
and
aas
or
sbb
inc
pushf
mov
andb
mov
stc
repz
insl
gs
sbb
pop
mov
fwait
adc
mov
mov
xchg
aad
mov
add
cwtl
dec
or
jae
pop
mov
ret
add
cmpsl
jae
push
pop
mov
fisttpll
add
and
stos
and
loope
mov
mov
fcmovne
xchg
cmp
mov
aad
mov
mov
rcl
inc
mov
xchg
inc
jns
jb
fadds
lcall
jecxz
mov
sbb
into
scas
fsubp
jno
cwtl
lcall
cwtl
mov
adc
imul
out
adc
xor
xchg
jmp
invd
inc
sub
mov
pop
xchg
movsl
andb
icebp
mov
dec
jno
pop
xor
mov
ficoml
cmpsb
in
sub
imul
daa
or
mov
cmpsl
and
ds
xor
fwait
cmp
testb
in
dec
js
mov
in
imul
daa
cwtl
pushf
ja
mov
pop
xchg
fcmovne
jnp
mov
test
int3
push
call
ljmp
subb
cmp
jmp
cmpsl
sub
mov
sub
mov
sbb
fiaddl
xchg
enter
std
ret
cmpsl
dec
out
push
sbb
inc
insl
sub
jp
cli
xchg
sub
xchg
inc
mov
add
mov
in
push
and
lock
xchg
dec
pop
pushf
mov
cwtl
jg
adc
adc
in
cltd
push
pushf
outsl
dec
pop
cwtl
jae
loop
je
sbb
sahf
mov
in
jg
add
mov
aas
inc
mov
xchg
add
aaa
sbbl
adc
sbb
mov
hlt
daa
scas
jae
jp
add
lret
addr16
or
xchg
jno
push
add
inc
or
inc
sub
lods
pop
out
mov
stc
fildl
pop
cmp
insl
aas
js
loopne
inc
mov
test
add
out
xchg
and
mov
jge
pop
xchg
add
mov
stos
inc
inc
daa
pop
pop
cli
sbb
imul
dec
push
dec
inc
xor
dec
mov
out
dec
jg
or
mov
sub
adc
mov
in
jae
mov
fs
fs
movb
or
jg
or
in
jno
out
mov
repnz
mov
adc
sbb
pusha
xchg
inc
fwait
outsl
and
subb
xchg
out
mov
mov
sbb
imul
iret
or
dec
add
mov
mov
outsb
pop
or
outsb
cmp
or
pop
add
xor
xchg
xchg
jp
pop
sub
adc
jns
mov
shll
cmp
lds
jnp
movsl
ret
pop
inc
xchg
and
dec
jo
mov
cmpsb
pushl
and
test
movsb
jo
xchg
sub
push
dec
bound
inc
ficompl
inc
ret
jecxz
imull
repz
sbb
std
gs
inc
stos
jmp
aaa
loop
push
sub
sbb
aas
sbb
popa
cmp
push
xchg
cmc
mov
and
mov
or
adc
stos
xor
js
adc
xchg
andl
mov
push
ret
push
aam
sbb
or
test
xor
xorb
icebp
enter
jge
xlat
sti
push
stos
sbb
dec
pusha
ljmp
push
xchg
and
adc
lahf
inc
mov
mov
push
add
mov
lea
lcall
pop
jo
ja
add
push
aaa
push
int3
sbb
cmpl
ljmp
negb
inc
fisttpll
mov
push
adc
out
cmp
cmp
inc
dec
es
imulb
pop
loop
clc
cmp
aas
test
lcall
or
insb
add
js
out
pop
imul
je
sahf
mov
test
inc
ret
xor
clc
fiadds
aaa
xor
test
push
add
xorb
jb
mov
es
xchg
dec
fildl
push
mov
pop
push
incl
inc
xor
xchg
and
fwait
sub
es
stos
int
mov
cmp
mov
lds
test
mov
mov
cmovns
int3
cmovb
cmp
insb
sahf
lods
push
mov
movsl
push
enter
push
loope
xchg
movsl
xchg
push
inc
xchg
inc
xchg
jmp
aad
xlat
or
lahf
jle
int3
mov
fisttpll
or
repz
popa
inc
sbb
cmp
pop
rcr
ret
fdivs
cmp
jecxz
enter
popf
jbe
rol
shll
arpl
dec
mov
add
pop
xchg
ja
fisubl
out
mov
lret
mov
add
scas
lods
testl
iret
loop
hlt
test
xchg
inc
mov
push
sub
mov
inc
xchg
clc
push
mov
rcrb
cmp
mov
inc
insl
ss
iret
or
mov
mov
data16
lods
jle
lcall
push
sbb
cli
inc
xor
push
out
popa
jecxz
imul
or
test
jmp
dec
popf
stos
negl
ss
fistps
mov
pop
adc
mov
aaa
cmp
fnstsw
sub
testl
mov
rcrl
ret
jg
mov
bound
pop
fisttpll
xchg
dec
inc
push
mov
cmp
lock
mov
mov
fwait
mov
aas
loope
test
cmp
inc
test
dec
es
ret
outsl
mov
fwait
xor
sub
lds
lea
jo
dec
aad
xchg
sub
inc
ret
mov
jae
push
cwtl
clc
iret
int3
mov
rcll
dec
push
adc
pushf
push
hlt
fucomip
pop
lea
jno
sbb
and
push
sti
fisubrl
insb
and
adc
lods
pop
fdivs
test
jle
push
daa
mov
lfs
stos
and
aam
mov
and
mov
aas
cwtl
add
fidivl
pusha
xor
in
push
mov
pop
sbb
lea
sbb
aad
adc
stc
jnp
jecxz
into
cmpsl
bound
loopne
mov
call
or
mov
and
daa
or
push
fwait
shlb
add
lock
imul
add
push
daa
cmpsl
sbb
into
xchg
addr16
orl
mov
push
lret
jl
add
xchg
ljmp
test
aad
nop
sbb
mov
mov
xor
stos
inc
inc
das
jmp
xlat
cltd
notl
cwtl
add
fwait
call
sbb
cmp
scas
cs
pop
or
dec
arpl
mov
adc
cmp
ljmp
push
and
push
nop
xchg
cmp
dec
mov
sbb
shll
cmc
inc
in
and
and
sqrtps
ja
rcrb
pop
imull
es
sbb
push
or
std
mov
jne
jle
lods
xchg
push
ja
call
inc
pop
mov
push
xor
ret
aas
add
stos
sti
hlt
data16
sti
imul
in
fwait
add
cmp
test
stos
or
pushf
in
scas
ret
and
mov
bound
mov
movsb
daa
insb
mov
sahf
test
inc
cltd
in
je
cmp
leave
add
in
jne
mov
fs
cwtl
and
mov
imul
pop
imul
or
pop
jecxz
xlat
test
cs
ds
sub
push
repz
loope
not
xor
cltd
mov
int
push
test
les
std
dec
pop
and
adc
roll
mov
mov
loope
in
push
fldl
faddl
lahf
pop
pop
mov
sub
cwtl
adc
std
adc
out
or
or
mov
xchg
mov
mov
sub
movsb
jecxz
or
cmp
cmpsl
cmp
add
scas
fimull
negl
xchg
repz
pop
xchg
pop
sbb
dec
arpl
and
pop
inc
ds
cmp
cwtl
sub
call
xchg
cmc
add
cli
dec
sahf
dec
and
stos
fsts
add
lcall
nop
loope
mov
jne
in
fs
aaa
push
fldz
mov
insb
rcrb
adc
push
jg
pop
out
pop
outsl
sbb
mov
faddl
jns
mov
xchg
das
cmp
jmp
mov
mov
push
add
pusha
addb
dec
sbb
mov
push
dec
dec
scas
dec
add
das
das
stc
mov
mov
sbb
enter
mulw
cmpsl
jb
xor
mov
mov
out
in
dec
in
pop
push
fdivs
mov
or
adc
int3
xchg
subl
out
or
shr
xchg
adc
mov
sub
jecxz
into
insl
cld
movsl
mov
lret
imul
push
arpl
mov
sti
je
out
fadds
sub
jg
and
mov
cwtl
xchg
cmpsb
mov
dec
jnp
in
ret
mov
xchg
add
nop
jne
das
fisubrs
jge
leave
push
lods
jo
lcall
ret
pop
and
sub
sbb
push
jmp
push
mov
out
aam
xchg
fidivrl
push
or
jmp
mov
daa
pop
loop
gs
mov
inc
cmp
pop
pop
in
jne
mov
sbb
lds
jbe
fildll
repnz
aaa
pop
xor
es
xor
mov
push
fsubp
fildl
add
xchg
mov
out
cmpsb
les
mov
scas
mov
mov
ss
mov
out
pop
sbb
sub
mov
cmp
outsl
std
mov
aaa
mov
fstpl
pop
hlt
sub
jge
test
stos
repnz
cs
imul
ss
dec
push
jae
mov
mov
xor
mov
cmc
push
push
sub
call
insb
sahf
cld
dec
inc
sub
popf
lock
xchg
inc
sti
mov
ja
inc
adc
lds
jl
fnstsw
push
fcmovu
loope
mov
adc
xor
jecxz
sbb
or
daa
lret
stos
or
jbe
in
mov
mov
cmc
xlat
leave
nop
popa
ss
hlt
scas
adc
xchg
adc
xor
xchg
pop
movsl
out
shll
into
stos
fbstp
push
cmc
cmp
xor
sbb
pop
pop
xchg
in
imul
adc
ss
push
adc
xchg
push
in
popf
roll
nop
outsb
mov
xlat
jg
xor
pushf
pop
in
inc
jo
ret
pusha
add
sbb
loope
sub
lea
dec
imul
fucom
dec
popa
push
xor
lret
xchg
aam
mov
push
popa
mov
adc
arpl
push
andb
sbb
into
sub
jge
mov
sbbb
je
mov
out
mov
mov
int
mov
fiaddl
cltd
cmp
mov
cmpsl
pop
cli
adc
mov
daa
xchg
push
jge
push
mov
push
sahf
fldt
movsl
dec
jbe
nop
sbb
outsb
push
scas
pop
mov
push
aaa
adc
mov
mov
mov
incb
repz
notb
sbb
dec
inc
js
sbb
sub
inc
push
lret
outsl
pop
dec
adc
or
add
sbb
mov
xchg
test
cmp
xor
jl
daa
popa
push
sbb
mov
notb
dec
imul
cli
lea
cli
andb
fnstcw
test
add
cld
sbb
xchg
jge
std
dec
dec
bound
cmp
cmp
cmp
jo
and
jnp
jo
lock
pop
das
movsb
imul
pop
andl
pushf
or
icebp
push
push
pop
flds
push
or
push
sbb
movsb
ficompl
and
cmpsb
cmp
add
adc
pop
popf
pop
mov
addr16
mov
iret
nop
pushf
cmp
xor
pop
insb
dec
mov
daa
adc
xlat
inc
push
leave
xor
cwtl
sbb
out
push
out
out
ret
xchg
sbb
jle
mov
mov
mov
cmp
out
enter
pushf
test
mov
test
jl
xchg
mov
negl
push
sbb
push
mov
ss
push
movsl
pushf
mov
pusha
jl
dec
xlat
add
xchg
mov
aam
fdiv
mov
ret
jnp
loopne
xchg
mov
ret
fucom
incl
mov
cld
pop
pop
repz
jbe
mov
sub
xor
sub
and
and
enter
sub
dec
jae
mov
pushf
mov
adc
sar
mov
fisttps
fistpl
and
push
lret
cltd
push
xchg
pop
inc
cltd
xchg
jge
sub
out
in
fsub
sbb
push
stc
lods
aas
pusha
fnstsw
test
lock
adc
sbb
xlat
dec
enter
sbb
jg
cmpb
xor
lds
sub
out
repnz
pop
imul
jle
pop
test
out
out
mov
push
push
das
lods
cmpsb
or
push
stc
jl
cwtl
cmc
and
out
lock
inc
cld
add
jl
mov
pusha
js
cmpsb
insb
sbbb
pop
repz
pusha
jl
cmp
cmpsb
pop
daa
test
sbb
sahf
xor
cld
or
gs
mov
jbe
arpl
lods
inc
ret
int
dec
cmpsl
and
push
or
rol
in
and
push
lods
outsb
lret
mov
adc
inc
frstor
pop
js
out
es
mov
or
add
and
dec
paddusb
mov
jno
cmpsb
stos
cwtl
shrl
lret
sbb
out
mov
stos
mov
push
lods
pop
fwait
mov
pop
fwait
add
sarb
mov
jg
dec
cmp
repz
inc
jmp
aad
lret
and
jp
mov
mov
push
es
movsb
inc
mov
rcrb
jl
std
jp
and
pop
mov
sub
adc
adc
jl
pop
cmp
in
fst
xchg
aad
leave
fldcw
mov
fbld
jp
jmp
pop
push
xchg
mov
push
notl
pop
jae
xchg
addr16
mov
adc
data16
sbb
mov
add
scas
or
sub
adc
out
jmp
mov
fs
push
mov
divb
xchg
sbb
cs
mov
add
push
sub
inc
lods
sbb
jnp
das
outsl
test
cmpsb
jae
in
pop
and
sbb
inc
imul
cld
std
stos
and
adc
adc
stos
dec
xlat
movsl
jge
in
cwtl
lock
and
hlt
test
pop
pop
fstpl
cmp
in
ret
jno
je
pop
xor
rcr
imul
dec
jnp
mov
or
pop
add
and
jecxz
ret
test
push
xor
stos
inc
cmp
sahf
inc
adc
addr16
push
dec
outsl
or
push
mov
test
mov
xor
pop
outsl
insl
adc
iret
fisttps
ljmp
dec
and
sti
add
cld
inc
fwait
mov
push
ss
xor
pop
mov
in
outsl
xchg
mov
pop
iret
pusha
xchg
data16
fwait
out
jmp
lahf
cmp
cmc
xchg
and
cmc
pop
pop
xchg
xor
dec
xor
das
pop
sahf
cmp
cmpsb
std
js
cmc
je
jge
mov
out
stos
dec
cmp
js
push
clc
lock
jecxz
pop
mov
jns
pop
cs
iret
leave
sbb
pop
or
xor
vmptrst
jl
sti
pop
cmpsl
shl
test
out
adc
dec
fwait
scas
push
cmp
jmp
fldenv
xchg
sbb
pextrw
pop
jns
sub
push
imul
push
arpl
xlat
mov
cmpl
dec
lcall
inc
enter
push
inc
pop
sub
pop
dec
out
add
and
dec
sbb
xor
out
bound
mov
cmp
add
add
jnp
inc
cwtl
xor
lods
cmp
pop
lds
addr16
out
leave
outsb
popa
xchg
cmc
test
sbb
rcrb
add
pop
outsl
ret
cld
xor
xchg
movsl
xor
xchg
mov
flds
or
fcmovnu
jbe
fisubl
rcll
lock
xchg
push
dec
adc
lret
jp
sahf
mov
push
or
mov
cli
test
cmp
imul
ljmp
xchg
jp
insl
sub
mov
xchg
lret
nop
sbb
sub
xlat
mov
out
mov
cli
jle
mov
fistpl
jmp
mov
movsb
fwait
das
je
push
jp
pop
xchg
jge
and
pop
push
clc
push
mov
xor
pop
pop
mov
cmp
xor
inc
insb
add
outsb
ret
xor
adc
inc
or
jl
js
mov
adc
adc
sbb
ffree
out
add
sub
and
popf
pop
in
mov
sbb
xorb
mov
les
or
aam
jae
es
data16
popa
pop
mov
mov
mov
mov
int
icebp
sarb
push
into
mov
adc
outsl
jle
mov
cld
adc
scas
insl
push
pushf
dec
clc
lds
push
inc
sbb
and
jne
es
pop
xchg
out
push
or
ss
and
push
test
lahf
fucomi
mov
xor
cmp
lret
stos
loop
in
out
fsubl
push
and
mov
xchg
xor
xor
dec
pop
cmpsb
sbb
les
mov
mov
mov
inc
sar
dec
popf
addr16
mov
xchg
cmp
dec
gs
jo
fwait
out
lods
xor
js
test
gs
inc
stos
cmp
or
sub
cmpl
or
cmp
fldlg2
cmp
pushf
rcll
sbb
push
mov
fnstcw
loopne
xchg
inc
clc
aam
jp
cs
cwtl
mov
out
sbb
dec
xchg
xor
sar
sarb
shll
or
mov
popf
push
cmp
imul
inc
jl
sub
fs
sbb
rorl
mov
test
outsb
jo
inc
and
mov
cld
pop
lods
in
sbb
repz
push
test
adc
jge
sbb
ret
sbb
jl
aas
ret
loopne
nop
lea
pop
inc
insb
lds
sbbl
mov
stos
test
scas
lret
push
xchg
xor
xlat
bnd
add
dec
xchg
mov
mov
bound
dec
xor
mov
xor
pop
jmp
mov
mov
into
paddusw
xchg
cmpsb
imul
and
shlb
lock
sti
rolb
or
mov
xor
hlt
push
sbb
outsb
xor
sub
xchg
lds
imul
stos
hlt
incb
mov
lcall
xor
push
andb
out
out
xor
outsb
movl
mov
in
leave
mov
fisubl
sub
fisubl
fldcw
or
les
add
jno
cmp
out
out
clc
lret
or
mov
outsl
mov
push
jmp
inc
out
scas
and
jmp
xor
and
rcr
rcl
jl
jecxz
dec
cmp
cmp
add
inc
mov
sub
mov
xor
aaa
push
lahf
add
pop
pop
shl
xchg
fs
mov
int
dec
push
and
jb
subl
mov
mov
shll
orl
xor
pop
xor
and
jne
inc
jp
mov
fs
and
test
xchg
repnz
inc
mov
push
mov
jp
cltd
inc
or
test
lods
sbb
jmp
stc
aaa
sub
popf
imul
insl
xchg
lea
pusha
xor
inc
pop
adc
push
sub
cmp
in
mov
fwait
daa
mov
pushf
mov
in
inc
je
test
arpl
cmpsb
jnp
dec
inc
push
in
sbbb
jp
jmp
and
mov
sub
add
gs
adc
inc
je
in
mov
lock
push
xchg
adc
rcrb
mov
cs
xor
xor
sub
dec
mov
pop
sub
mov
in
cwtl
dec
cli
movsl
dec
insb
arpl
int3
ret
enter
dec
cltd
xchg
imul
fisubrl
mov
or
fnsave
inc
leave
cltd
xor
inc
lea
aaa
shrl
in
fists
ja
popa
adc
arpl
repz
stos
jge
mov
cwtl
addl
shlb
popf
int3
jecxz
pop
clc
addl
xor
xor
sub
sub
sub
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
xor
neg
mov
mov
mov
add
orl
imul
subl
mov
mov
mov
adcl
add
sbbl
or
xor
mov
mov
and
mov
orl
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
jmp
rcrb
iret
ja
jno
into
fidivs
int3
cmp
xor
jp
pop
jp
rcrl
xchg
daa
fimull
je
mov
xlat
push
lods
jo
lods
ljmp
rclb
pop
xchg
out
jbe
xchg
repz
xor
jo
clc
js
jae
lea
cltd
push
jmp
inc
push
out
push
and
push
fildl
xchg
pop
pop
ds
xchg
mov
sbb
push
sub
leave
inc
adc
dec
push
add
ljmp
sub
mov
ss
test
jp
add
jmp
pop
jecxz
pmuludq
or
dec
mov
dec
daa
or
js
mov
mov
arpl
mov
fildl
cmp
mov
or
aad
testb
ljmp
inc
xlat
cmp
test
loope
dec
add
sbb
popf
test
je
xor
mov
outsb
xchg
nop
fcmovb
pusha
mov
push
mov
xor
xor
ss
cmp
bound
mov
in
mov
aas
jb
adc
fcmovbe
popl
test
loop
push
cmp
shl
cmp
inc
xlat
or
mov
into
call
scas
je
leave
cmp
dec
jmp
out
pop
jg
push
popa
cwtl
cltd
out
repnz
push
fsubrl
xchg
push
sub
aad
daa
or
adc
push
jg
sub
jge
lret
rclb
sbb
loop
or
adc
inc
phaddw
xchg
inc
loope
mov
or
push
sbb
add
sbb
cltd
scas
movsb
mov
jb
xchg
aaa
dec
data16
push
pop
pop
jo
xor
in
xchg
cmp
aas
subl
push
shr
dec
das
dec
cmp
push
out
mov
mov
jnp
pop
or
iret
bound
mov
xchg
adc
mov
popf
push
imul
pop
cmpsb
jl
xor
pushf
sbb
sti
fmuls
ljmp
ss
sbb
mov
lods
mov
mov
repz
dec
out
jnp
popf
out
inc
jge
mov
test
lret
imul
xor
jnp
ljmp
adc
lock
adc
sahf
mov
pop
loop
pushf
xchg
mov
jb
icebp
pop
xchg
popf
jnp
mov
push
dec
mov
adc
std
jne
and
lret
pop
dec
mov
add
out
repnz
loop
clc
mov
push
xor
jnp
and
jl
ss
push
add
xchg
jmp
and
xor
cmp
stos
lcall
rcll
idiv
in
sbb
jge
fstpl
mov
inc
imul
rol
mov
mov
imul
enter
subl
sbb
and
push
pop
popf
adc
mov
lcall
sbb
sub
xor
stc
lret
in
and
shl
and
loop
lds
popf
dec
xlat
xor
lret
inc
stos
int
xor
scas
xchg
push
imul
mov
sahf
ljmp
push
inc
ja
sbb
jbe
outsb
arpl
repz
lret
add
inc
cmp
dec
gs
push
insl
mov
adc
das
pop
or
xor
pop
pop
in
lods
mov
stc
insl
cmp
fiaddl
mov
inc
test
js
mov
mov
ja
cltd
rorb
sbbb
cli
xor
sub
fadds
insl
rcrb
cmp
mov
fcom
xlat
out
test
roll
cmp
sahf
shll
imul
or
pop
mov
arpl
sub
cmp
mov
js
repnz
dec
aad
fldt
lcallw
add
mov
icebp
outsb
add
gs
jns
cmp
or
sub
mov
cmpsb
mov
and
gs
fwait
cli
inc
mov
std
sbb
clc
ret
pusha
xchg
xchg
fstpt
lods
cmp
sub
jge
sbbl
repnz
mov
repnz
dec
lret
xchg
call
pop
jno
adc
add
movsl
push
add
nop
dec
mov
les
jno
mov
jns
rclb
push
int3
mov
sub
inc
and
dec
jge
shll
pop
cmpsb
pop
xlat
or
mov
es
dec
pop
lret
lcall
xchg
out
dec
mov
dec
cltd
add
jge
js
pop
or
mov
lahf
jns
pop
xchg
enter
pushf
sbb
push
cmpsl
sub
int3
icebp
loop
aas
out
jne
fistl
mov
jg
xchg
out
inc
iret
idiv
outsb
xchg
ret
mov
sbb
push
sbb
movsb
int3
dec
adc
cmpl
cli
jae
rorl
jp
dec
sti
add
mov
daa
hlt
add
shl
mov
sbb
sub
adc
cmp
out
push
jg
movsl
push
lret
ss
sbb
test
cltd
mov
or
mov
mov
sti
fistpl
out
and
daa
jo,pt
push
add
xor
roll
pop
icebp
out
fldenv
aaa
cli
inc
and
mov
jle
clc
mov
das
adc
jmp
jb
clc
movsb
add
loopne
or
cmc
push
leave
jne
mov
fwait
pop
mov
rcr
movsl
jns
xchg
jnp
or
xchg
mov
lcall
xor
dec
mov
dec
sar
addr16
jno
cmp
mov
xchg
fwait
cmpsl
push
cltd
and
fwait
inc
mov
push
jne
cmp
stos
jno
xchg
sbbb
or
dec
ret
or
dec
push
repnz
adcb
out
add
out
push
movsl
cmp
cs
data16
mov
pop
mov
roll
xor
lods
in
lds
mov
mov
seto
out
aam
insl
xchg
pop
and
xor
pop
lahf
adc
in
jge
fisubrl
inc
mov
js
cmp
push
lods
or
sarl
aam
dec
outsl
shld
push
gs
stc
outsb
mull
nopl
jge
mov
cltd
cmp
repz
insl
addl
xchg
inc
lods
cmp
pop
cwtl
mov
inc
gs
cmpsl
jecxz
sbb
push
mov
or
popa
xchg
enter
pop
and
mov
call
mov
inc
add
sbb
add
leave
inc
pop
faddl
pop
repz
mov
pop
fimull
fxch
test
push
or
adcb
stc
cmp
mov
inc
dec
mov
test
fcomps
das
pop
cmpsb
jp
mov
sahf
arpl
add
xor
jmp
pop
and
mov
mov
imul
sub
push
xchg
xchg
inc
xor
rcrb
sub
lret
in
fsubl
xchg
decl
or
jmp
mov
xor
add
nop
and
cmp
cmp
test
gs
push
adc
imul
cmp
inc
xchg
aam
sbb
cs
mov
lods
and
xor
adc
push
add
mov
pop
ja
aad
stos
lock
mov
push
jle
int3
mov
icebp
mov
sub
test
jns
out
mov
daa
mov
in
das
cltd
mov
pop
inc
out
pop
mov
and
cmp
imul
imul
icebp
xchg
sbb
push
pop
fstpl
orl
mov
dec
jmp
push
es
scas
shlb
ja
sbb
or
sub
mov
lock
out
dec
or
cs
in
jno
sub
fs
leave
adc
in
lea
jecxz
dec
push
push
lds
xchg
or
adc
ret
adcb
out
xchg
sub
sbb
cmc
movsb
dec
out
call
pop
mov
push
dec
lods
js
lcall
insl
xchg
dec
pop
pop
jnp
popf
push
repnz
bound
sti
jnp
mov
insb
adc
movsb
adc
sar
xchg
xlat
sbb
or
xor
cmp
add
add
sub
push
dec
pop
cmp
mov
and
sub
xchg
repz
xchg
dec
fistl
bound
mov
or
xor
test
and
es
divb
xorb
push
xor
cmp
lock
outsl
jmp
cwtl
fcompl
sbb
jnp
icebp
rcl
into
xchg
push
add
push
push
or
jb
mov
scas
icebp
movsl
and
mov
sahf
aaa
cmpsb
adc
lock
fimull
jnp
cli
out
repz
mov
xchg
sbb
mov
adc
xor
scas
mov
push
div
mov
leave
jmp
inc
pop
and
mov
push
dec
mov
stc
mov
and
mov
mov
lretw
orl
sti
mov
hlt
cmp
inc
adc
jp
sti
loope
sub
cmp
roll
sbb
arpl
pop
orb
jl
jp
xchg
cld
addb
pop
mov
sarb
movsl
sbb
shlb
jne
in
add
adc
icebp
cmp
sub
clc
sub
fldl
cmpsb
in
lods
xchg
jle
adc
cwtl
inc
push
pop
outsl
and
mulb
pop
sub
sahf
add
rorl
jmp
push
xchg
xor
jmp
jp
jbe
outsb
and
jle
jb
sbb
adc
mov
icebp
out
jecxz
pop
adc
inc
pop
scas
and
cld
sub
lret
fcoml
or
sar
adc
sub
inc
dec
mov
jno
mov
lret
subb
test
or
cmp
imul
pop
aaa
fwait
inc
inc
out
mov
jg
mov
push
aas
and
loop
add
icebp
cmp
sub
dec
jp
lods
into
lahf
aam
add
mov
sahf
push
out
and
jne
xor
mov
adc
mov
lea
pcmpeqb
int
adc
ret
cld
sub
imul
mov
sub
push
stos
call
les
cmp
sbb
imul
outsb
push
push
jae
inc
insl
pop
adc
and
mov
xchg
adc
and
and
and
ss
jns
mov
hlt
imul
cmp
jp
jp
push
jl
mov
push
mov
xlat
adc
jle
repnz
mov
adc
gs
cmpsl
xchg
xchg
push
aaa
mov
adc
adc
jge
stos
push
or
mov
pusha
sbb
jp
sbb
pusha
mov
and
sbb
mov
sbb
xchg
xchg
insb
push
mov
mov
icebp
xor
mov
pusha
stos
mov
sbb
mov
or
and
adc
jle
push
cmc
cmpsl
data16
mov
jecxz
mov
push
xchg
pop
mov
or
push
jecxz
cmp
popa
ljmp
dec
xchg
dec
movb
test
sub
lods
addr16
and
mov
xchg
hlt
mov
fldln2
mov
jp
test
rcl
nop
pop
lods
imul
sahf
leave
dec
cld
mov
cmp
or
and
fsub
sbb
daa
or
xor
loopne
xor
adc
int3
or
adcl
insb
mov
jnp
divl
jp
ds
gs
jno
repnz
movsb
sahf
push
mov
jle
popf
enter
mov
addr16
out
shl
out
das
jno
outsl
ret
and
lret
or
ret
xor
pop
jp
aas
push
add
push
mov
inc
call
ret
int3
out
lock
cmp
xor
dec
roll
int3
js
pop
sbb
sub
xor
or
inc
subb
mov
ja
ret
and
aaa
push
pop
jl
cmp
shll
xor
mov
ja
sti
pop
jae
mov
xchg
dec
jp
idivl
xchg
ja
movsl
xchg
divl
push
push
das
movsb
addb
nop
lods
xor
cmp
push
sub
add
mov
bound
bound
push
divb
aad
mov
cwtl
push
xchg
mov
aas
ja
adc
lcall
dec
gs
cmpsl
mov
sub
ljmp
mov
mov
or
int3
lock
sub
mov
insb
out
cmp
jns
mov
mov
arpl
and
in
nop
and
jecxz
add
adcl
pop
out
sbb
mov
and
push
or
xchg
nop
movsb
mov
push
testb
lret
inc
inc
rcr
std
xor
mov
mov
dec
adcl
pusha
cs
dec
scas
jge
call
insb
negb
or
add
inc
pop
xchg
cwtl
inc
and
pop
pop
adc
cmpsb
sub
aam
pop
xchg
movsb
roll
mov
cs
push
inc
or
ds
mov
out
jae
jmp
push
add
pop
xor
push
outsl
mov
nop
inc
sub
adc
test
inc
hlt
sub
add
stos
inc
lock
xchg
fdivs
int3
push
adc
xchg
xorl
mov
mov
push
sbb
stos
xchg
mov
cmp
ljmp
jnp
bound
test
lcall
stos
daa
xor
fsts
loope
inc
xorl
movsl
fwait
push
pop
xchg
and
mov
dec
jecxz
cmp
repnz
jle
pop
jecxz
cwtl
and
aas
xchg
xchg
aad
sbbl
mov
jle
mov
enter
push
popf
xor
aad
into
add
inc
mov
test
loope
mov
mov
arpl
scas
mov
cmp
cs
cmp
bound
xchg
loopne
xchg
stos
test
jae
add
cmpsb
inc
icebp
dec
dec
lret
rep
mov
adc
stos
fnstenv
stc
sub
or
imul
scas
push
js
imul
in
push
and
int3
inc
lods
jle
xchg
stos
xlat
mov
cmc
cmpsl
mov
mov
sub
mov
xchg
jbe
pop
in
sbb
lock
cmp
out
ret
bound
leave
movsl
sarb
cs
xchg
lods
cmpsl
fldcw
sbb
mov
ffreep
gs
jo
adcl
outsl
cmp
mov
cwtl
pop
xchg
ficoms
loope
mov
xchg
mov
lretw
inc
stc
dec
mov
aam
jecxz
je
pop
adc
daa
hlt
xchg
sarl
faddp
mov
pop
push
push
pusha
pop
arpl
add
and
mov
stc
or
mov
dec
dec
cmp
xor
xchg
or
mov
ret
adc
push
mov
mov
cmc
pop
lea
pushf
addr16
cmc
mov
mov
or
and
enter
out
sub
or
call
repnz
popa
lret
movsl
inc
push
pusha
pop
stos
jp
dec
mov
xor
outsl
cli
adc
out
mov
push
push
lods
jns
rcl
subb
adc
js
popf
pop
fsubl
add
xchg
sub
cmpb
and
mov
ret
inc
mov
rcrb
inc
mov
xchg
mov
jle
push
cld
xor
sbb
dec
aam
mov
and
mov
pop
lret
push
adc
sub
mov
add
fstl
nop
mov
js
paddq
iret
sti
lods
jns
sub
rcr
mov
mov
sbb
and
in
jecxz
inc
hlt
xchg
dec
xor
inc
mov
outsb
cmp
xchg
cmp
pop
adc
nop
cmc
aad
stos
mov
mov
mov
xor
cltd
cs
imul
sbb
adcb
add
cmpb
loope
adc
pop
ljmp
loop
xchg
lret
rorb
call
lea
lahf
fdiv
ret
xrstors
cld
lea
xchg
cmp
fldt
pop
push
sbb
shll
pop
cmp
mov
jb
xchg
sbb
mov
test
xor
enter
jecxz
pushf
mov
rep
cmp
and
fwait
mov
lods
popa
lret
and
inc
mov
lods
and
jp
xchg
ret
sub
sbb
push
mov
in
aaa
out
mov
repnz
pushf
mov
sbb
sub
das
outsl
loope
loope
inc
mov
outsl
mov
bndstx
lret
xor
dec
ss
sub
pop
xor
bound
lock
loope
cmp
add
int
mov
push
xlat
loopne
clc
insl
dec
pop
int3
xchg
sub
lock
xchg
fistps
inc
cld
pop
in
pop
xchg
add
xor
xchg
sbb
test
cwtl
outsl
sub
mov
or
mov
movsb
jmp
in
mov
sub
sahf
js
add
dec
dec
fcoml
dec
jecxz
add
test
adc
add
mov
or
mov
jmp
fildl
mov
test
pop
lds
jp
call
push
pop
lret
imul
xorb
shl
mov
ficoml
cmp
sub
adc
rcl
mov
data16
mov
stc
xchg
pop
lods
test
in
mov
mov
mov
add
or
lock
loope
clc
js
fxch
mov
test
sbb
jbe
lahf
pusha
or
push
mov
push
xchg
dec
sbb
sub
mov
jl
sbb
inc
add
adc
cli
add
addr16
std
test
add
adc
incl
push
test
adc
or
xchg
insl
leave
imul
sub
stos
push
scas
push
xchg
sub
pop
loopne
mov
in
fidivrl
pop
push
dec
lahf
cmc
mov
negb
mov
loop
or
sub
in
ss
inc
arpl
jae
jl
je
pop
std
xor
xchg
pop
pop
es
jnp
inc
stc
pop
push
rcrb
adc
mov
xchg
aam
fbld
sub
jns
in
add
adc
repz
aam
test
pop
aad
test
aad
jne
cmpsl
out
ss
fsubrp
add
lods
std
jl
xlat
pop
mov
jbe
mov
icebp
jne
shlb
int3
fistpl
or
leave
mov
insl
mov
mov
mov
addb
repnz
pop
mov
pop
xchg
test
lds
mov
sbb
mov
fcomi
mov
imul
repz
push
adc
or
gs
sbb
cmp
cmp
sub
add
ja
sbb
pushf
add
loop
fsubrs
repnz
imul
insb
mov
sbb
dec
sar
test
rorl
cmp
addr16
xchg
adc
bound
mov
xchg
dec
add
fistps
dec
adc
pop
cmp
lret
mov
cwtl
push
cmpsb
or
lcall
inc
mov
insb
sub
and
lea
xchg
pop
popf
cmpsb
nop
add
sbb
test
test
popa
in
fldcw
push
mov
add
stc
sbb
push
into
addl
insb
shl
cs
mov
daa
out
imul
xchg
or
je
aam
loop
jecxz
lock
fstpl
popl
loop
xor
popf
xchg
jns
jb
or
int3
or
inc
mov
sbb
ja
ljmp
outsb
xor
xor
sbb
cmp
imul
dec
mov
scas
shlb
leave
jle
jae
xchg
xchg
sub
push
ja
dec
mov
jbe
das
cwtl
in
gs
sar
inc
lods
or
pop
jle
cmp
lcall
das
sti
mov
stc
jb
rcll
jecxz
push
mov
xchg
pop
stc
mov
daa
mov
or
jmp
lods
pop
push
jmp
xchg
in
push
sbb
jbe
sub
stos
cli
addr16
jmp
sub
or
mov
mov
out
xor
out
jns
lcall
and
inc
imul
push
hlt
mov
mov
adc
mov
add
repz
inc
scas
dec
fcmovu
inc
scas
mov
imulb
adc
data16
sbb
push
les
and
inc
cmp
add
mov
int
pop
testb
jl
ffree
adc
jle
pop
popa
pop
add
neg
fbstp
loopne
repz
push
mov
mov
dec
arpl
repz
gs
add
mov
ret
mov
or
gs
inc
cltd
ljmp
mov
sub
adc
add
mov
jmp
lea
loop
jecxz
test
lock
dec
test
dec
push
push
xor
inc
test
sbb
jmp
push
dec
ds
jbe
insb
mov
push
mov
or
add
sahf
popf
aas
inc
or
xchg
mov
push
cmp
enter
fcomi
xchg
push
out
adc
dec
cwtl
jmp
jno,pn
cltd
cmp
add
xchg
sarl
adc
shlb
movsb
out
jbe
add
test
xchg
mov
icebp
call
mov
jae
pop
daa
push
cmp
cmp
lods
fcomip
xchg
add
imul
gs
jl
sub
cld
pop
sbb
xor
xchg
hlt
daa
imul
sub
repnz
test
push
negl
fucomp
out
pop
dec
jo
fidivs
add
cmp
in
jb
mov
push
jo
sbb
ret
dec
xor
mov
popa
mov
pop
and
loop
aam
sub
and
sti
cmpsb
jns
adc
imul
jmp
pop
repnz
inc
repz
or
stc
jecxz
mov
mov
jb
shlb
bound
aad
cmp
mov
and
add
pushf
leave
incl
imul
imul
js
repnz
pop
roll
and
stos
ret
int3
imul
and
lret
cltd
dec
lods
sub
in
mov
test
xor
xor
sbb
jb
in
enter
inc
cmpsb
inc
jp
imul
mov
or
cmc
mov
pop
push
xor
xor
cmp
out
jne
adc
add
mov
push
rolb
lret
jo
cmpsl
push
ud2
aaa
test
ss
imul
xor
aam
sub
or
or
ds
fcomps
notb
addr16
sbb
fbstp
mov
js
ret
call
sbb
stc
inc
shrl
sti
push
mov
sbb
xchg
inc
pop
jp
inc
mov
outsl
add
enter
jne
or
xlat
adc
outsl
lea
add
into
cmp
imul
jae
jno
pop
out
and
rorl
lock
xchg
xor
xor
and
int3
push
es
scas
mov
mov
js
loop
hlt
dec
xor
cmp
push
cmp
dec
adc
movmskps
test
xchg
and
jmp
inc
jge
mov
push
xchg
add
loope
and
sub
cli
mov
adc
dec
mov
inc
lds
es
hlt
xchg
adc
cmc
les
insb
popa
nop
jb
insb
fldt
mov
push
push
push
popa
jns
cltd
mov
adc
mov
dec
and
sbb
or
cld
dec
loopne
enter
sahf
or
lret
cltd
add
rcrl
aad
mov
insl
fstpl
push
jl
xor
dec
js
xchg
ret
mov
mov
add
dec
lret
mov
decb
adc
xchg
nop
cs
es
jnp
sub
and
add
cmp
mov
aaa
dec
fs
xor
scas
add
cld
mov
push
insl
mov
popf
push
cmovnp
jmp
fadds
scas
rclb
cs
sbb
sbb
mov
push
dec
lahf
cld
fs
inc
ljmp
or
insb
fcoms
mov
jno
xor
out
xor
insb
xlat
ljmp
stos
sahf
fcomi
sub
and
inc
mov
sbb
jae
ret
xor
xchg
mov
and
dec
stos
and
dec
scas
jbe
ds
imul
sub
in
push
adc
or
sbb
fwait
xchg
sub
push
and
mov
pop
in
mov
mov
loopne
insb
mov
adc
adc
cmp
loope
pop
pop
mov
inc
mov
inc
test
sti
or
bound
adc
pop
mov
or
outsl
adc
dec
add
or
in
mov
es
in
lea
xchg
cltd
push
mov
and
into
mov
mov
insl
test
adc
push
dec
rcl
lahf
xchg
cmpsl
xlat
adc
push
ds
ljmp
ficompl
and
int
push
lahf
mov
ja
test
inc
dec
rolb
aas
cmp
pcmpgtw
movsb
mov
and
push
jne
ljmp
push
loope
je
insb
jbe
mov
mov
fidivl
arpl
push
rclb
push
lock
jbe
icebp
xor
jb
inc
inc
negb
fs
add
or
out
sbb
jge
aad
lods
lret
loop
popf
dec
cmpsl
xchg
adc
inc
xor
add
mov
fwait
leave
popl
jp
xchg
pop
mov
roll
cmp
cld
cmp
mov
pop
nop
push
sub
dec
add
lret
inc
or
inc
shrl
mov
into
jne
cmp
mov
or
xchg
push
scas
sbbl
call
cmp
cmp
fidivrl
int
call
jle
inc
push
sbb
jae
push
icebp
sbb
sti
push
jp
dec
sub
or
aam
push
dec
cmc
cmpsb
les
dec
js
nop
xor
les
aaa
add
jae
jne
jne
outsl
test
cld
mov
jnp
xlat
mov
dec
mov
push
jbe
sti
pusha
pop
fisttpll
jo
je
xor
or
xor
add
and
cltd
std
cmp
arpl
xor
shrl
aaa
mov
xchg
in
xchg
xor
arpl
and
pushf
dec
in
push
jns
add
add
sub
es
mov
xor
daa
mov
mov
push
testb
push
jae
sbb
xlat
add
mov
aaa
insb
jns
shrl
pop
pop
arpl
jecxz
dec
shrb
adc
mov
dec
cmpsl
rcrb
mov
mov
push
sahf
ljmp
lret
mov
mov
cld
insl
aam
and
into
sbb
or
outsb
cs
dec
adc
pop
inc
sub
outsb
lea
xor
and
add
repz
stos
push
jne
cs
in
jmp
mov
int3
add
stos
xor
fbstp
add
xchg
scas
or
es
fcom
stc
jne
nop
mov
in
js
imul
inc
push
mov
pop
and
aam
notb
iret
jl
xchg
test
dec
enter
lcall
sbbl
push
enter
test
std
mov
nop
push
mov
ret
jnp
cmpb
mov
mull
sub
pop
aad
jne
sub
cmp
ret
xor
or
in
hlt
ficoms
sub
dec
bound
imul
jns
pop
out
cmp
fs
sbb
mov
jp
and
jge
and
adc
hlt
adc
inc
ret
or
aad
insb
pop
xor
int
stos
ds
or
jl
add
out
and
cli
shl
rcll
inc
fistpll
je
and
inc
mov
dec
xchg
shl
cwtl
cli
push
jnp
inc
mov
add
mov
mov
mov
insl
jle
jecxz
or
push
lret
daa
mov
add
lods
push
in
fwait
jo
test
test
mov
or
cmpsl
rorb
mov
dec
and
mov
jae
cmp
mov
xchg
cmpsl
out
test
test
jle
jecxz
xchg
jg
cmp
cmp
shrl
xor
xchg
les
push
movsl
mov
push
add
xchg
push
inc
and
and
fwait
addr16
adc
pop
add
fbstp
sub
imul
xchg
pusha
pop
sub
in
pusha
push
jg
add
popa
cli
jmp
mov
sub
insb
cs
pop
or
sbb
push
inc
push
pop
lret
int3
dec
pushl
xchg
and
rcrl
inc
sub
inc
or
jnp
mov
mov
pop
js
ret
cli
sbb
add
outsb
ret
lods
jmp
outsl
cmp
fs
jle
in
lret
ror
dec
push
or
adc
test
faddl
data16
xchg
fcoms
out
in
gs
pushf
sbb
out
jne
adc
addb
mov
inc
xchg
pop
pop
stc
jp
dec
lods
inc
hlt
stos
jp
cmpsb
or
push
add
lcall
push
dec
sub
ficompl
pusha
sbb
mov
in
scas
outsl
mov
loope
pop
in
sahf
adc
mov
mov
imul
test
xchg
cmp
pop
sub
iret
add
pop
repnz
stos
lret
pop
ja
out
test
xchg
xchg
adc
in
inc
adc
lds
mov
sahf
xlat
fstpl
pop
adc
lahf
movsl
jae
bound
stc
xchg
sbb
jl
lahf
or
sbb
sub
pusha
mov
lods
push
pop
fldcw
cwtl
jge
cwtl
add
xchg
mov
sub
push
pusha
mov
cmp
jae
loope
flds
add
inc
adc
inc
push
iret
mov
dec
adc
mov
lea
and
sbb
sub
xchg
sub
mov
or
cli
pop
stc
cwtl
into
mov
iret
xchg
adc
pop
dec
ss
scas
iret
mov
ja
std
ret
mov
jle
pop
call
and
mov
sbb
jb
into
ror
fmulp
inc
enter
xor
add
mov
sub
pusha
fucomip
mov
xchg
inc
sub
pop
mov
or
es
dec
inc
push
rolb
jno
aas
mov
and
or
and
adc
sti
or
popa
repnz
sahf
or
mov
in
dec
add
in
stos
out
xor
xchg
call
push
roll
mov
jne
and
xor
add
imul
cmp
movl
sbb
insl
cmc
or
pop
adcb
ss
cmpb
or
mov
ljmp
push
stos
sbb
out
sbb
xor
mov
push
xchg
jle
inc
mov
dec
xor
push
movsb
push
cwtl
daa
push
fcomi
in
in
or
pop
hlt
enter
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
out
dec
mov
jne
jae
or
cltd
test
sbb
push
pop
jp
cltd
out
testl
das
test
lock
pop
sbb
addr16
bound
jo
push
es
ja
out
jns
jo
fmul
int
add
jo
outsb
fadds
cmp
out
jo
lret
adc
pusha
shl
outsb
xor
mov
out
xchg
repz
adc
test
sub
leave
add
xchg
sub
and
mov
push
testb
lock
add
push
sbb
subb
mov
popf
int3
int3
arpl
push
xor
mov
sahf
mov
mov
jns
mov
pop
and
repz
cmp
je
dec
test
loopne
push
ror
shl
subl
mov
daa
pop
dec
cmp
pop
cmpxchg
pop
test
outsl
sar
loope
cmp
lret
cmc
subl
out
cmp
push
mov
push
sti
xor
call
out
xlat
push
add
jo
mull
icebp
adc
testl
push
or
shlb
sub
add
lods
mov
or
addl
cmp
negb
inc
divb
in
push
les
or
ja
and
cmp
mov
out
inc
fs
sub
or
sub
push
adc
mov
test
cmp
fisttpll
cmp
push
push
xor
adc
fs
outsb
dec
in
hlt
push
fbld
xor
push
lahf
push
in
ret
xchg
out
inc
adcb
mov
lahf
scas
xchg
cltd
mov
stc
pop
cli
sub
in
popa
sub
out
jbe
movsb
xchg
xchg
js
ss
xorl
pop
pop
add
mov
sub
xchg
push
shll
mov
test
div
mov
add
mov
jo
loop
into
jbe
pusha
xchg
call
es
repz
pop
pop
test
mov
mov
lret
sub
ljmp
int
loop
lea
push
aam
or
and
cli
pop
mov
cmc
sub
jns
and
fsts
xor
sub
inc
cmp
mov
fucomp
icebp
xchg
jae
mov
loop
lret
in
adc
test
popf
and
xor
popf
int
cmp
sub
sarl
js
or
mov
lret
iret
jp
les
mov
aad
mov
jbe
xor
clc
stos
out
adc
addr16
cmp
ljmp
fbld
xchg
aas
jmp
mov
lea
mov
js
call
gs
cs
imul
or
dec
mov
in
popf
pop
mov
cmp
ds
rcrl
xor
nop
push
std
into
stc
scas
es
repnz
flds
and
jo
add
mov
addr16
push
dec
fldcw
neg
adc
inc
push
addr16
daa
loope
jecxz
push
cmp
popa
popf
adc
inc
cmp
sub
sub
mov
adc
insb
bound
pusha
pop
clc
mov
sub
ret
pop
test
fs
jo
std
sbb
in
scas
stos
shll
adc
aad
lret
in
setno
mov
lds
loop
shlb
or
sub
or
xor
lcall
xchg
ret
lcall
sub
pop
lds
pusha
dec
xchg
rclb
sub
sub
pop
mov
mov
add
popf
or
xchg
mov
push
fidivrs
fsubrl
mov
inc
in
mov
mov
jp
rorl
push
frstor
mov
je
lret
xlat
popa
push
test
sub
mov
pop
mov
dec
sbb
mov
xor
cwtl
pop
fidivs
enter
mov
jg
in
iret
movsb
adc
ret
ds
test
sahf
and
jge
inc
xchg
inc
sahf
sbb
mov
aaa
std
dec
jle
adc
pushl
aas
mov
aam
dec
adc
and
out
adc
mov
rcll
lea
jnp
or
test
mov
arpl
sub
pop
das
out
xchg
jo
cmp
inc
sub
push
add
adc
mov
jp
push
fwait
add
pop
sub
cs
scas
sahf
push
dec
ret
ret
xor
fldenv
fsubrl
xchg
fmulp
jl
cmc
add
inc
cmp
sti
mov
mov
je
jle
jnp
dec
lods
push
inc
pop
call
mov
lret
jle
pop
dec
xlat
cmp
je
xchg
addr16
xchg
and
pop
jb
imul
jb
sub
test
mul
sbb
jle
push
mov
shl
mov
imul
mov
push
xor
in
cmp
mov
mov
push
adcl
pop
dec
push
addr16
fisubs
cwtl
fidivs
dec
out
ljmp
or
aas
or
jge
mov
lahf
nop
xchg
cmpsl
mov
sub
imul
cs
gs
pop
jp
ret
or
fdivrl
dec
mov
mov
rcll
icebp
cmp
adc
push
adc
dec
mov
xor
fsubr
xchg
push
pop
sti
mov
lods
mov
call
pop
pop
bnd
add
fnstsw
sti
jbe,pn
push
data16
pop
dec
enter
movsb
dec
add
adc
add
mov
cltd
xlat
repnz
pop
cmp
dec
out
inc
mov
lahf
hlt
test
xchg
loop
mov
and
and
mov
stos
mov
aad
scas
mov
mov
testl
loopne
roll
jb,pn
cmpsb
sub
in
scas
daa
call
lds
sbb
cld
ss
lahf
insl
notl
fisubl
mov
xchg
clc
outsl
lahf
cmpsl
das
add
scas
jle
xor
rep
roll
push
clc
shrl
dec
xchg
inc
xchg
out
xchg
stos
andb
mov
mov
or
mov
dec
sub
and
sub
sub
or
push
xor
dec
orl
push
aam
int3
je
xchg
lods
pusha
shrb
loop
adc
lods
imul
sub
sbb
insl
orl
daa
dec
data16
jns
mov
bound
insb
popf
lock
add
adc
ss
leave
lahf
js
xchg
inc
push
stos
xchg
mov
sub
sbb
or
jmp
sbb
push
std
or
mov
sub
adc
xchg
test
sti
sub
xchg
pop
or
int3
mov
add
mov
push
inc
lock
push
pushf
out
xor
rcll
mov
or
xor
jnp
push
das
jnp
inc
std
fldcw
lods
out
xor
dec
shl
xor
js
cmp
jne
daa
lahf
nop
mov
lcall
mov
pop
ljmp
and
cmpw
jne
out
mov
mov
pop
js
sub
sub
pop
jg
clc
jo
cli
mov
scas
sub
add
ss
test
in
xchg
iret
test
mov
lret
notb
ret
push
and
sbb
cmp
sbb
scas
pusha
rolb
sub
repnz
dec
inc
sub
ficomps
push
push
dec
aas
inc
jns
xor
sbb
sahf
cmp
mov
fstl
std
pop
mov
cs
stos
repnz
push
mov
push
sti
or
pop
movsl
inc
imul
inc
mov
cli
lea
sbb
mov
orl
mov
mov
sahf
shlb
idiv
mov
mov
xchg
rol
test
aas
sbb
sbb
fsts
adc
cmc
add
pusha
dec
xchg
pop
jo
xor
gs
pop
adc
inc
jb
inc
jo
push
fdivl
adc
mov
pop
mov
enter
push
xchg
imul
sub
ret
out
sahf
daa
or
lds
sub
dec
mov
call
imul
inc
mov
mov
sbb
pusha
mov
cwtl
fbstp
shll
aaa
shll
cmpsb
push
sub
mov
gs
ret
inc
xor
movsb
cmp
shrb
ss
ljmp
out
cmc
sti
pop
popf
testb
stc
dec
sub
jmp
out
adc
mov
or
test
je
popa
mov
les
jbe
insb
sub
pop
jl
add
icebp
mov
sub
xchg
xor
int
mov
mov
iret
dec
outsb
test
sti
pop
gs
fwait
or
sbb
lret
adc
cmpsb
in
fbld
addb
cmp
push
enter
pop
in
jle
or
lret
das
inc
repz
test
sbb
je
enter
xchg
mov
mov
xor
icebp
sub
loope
cmp
sub
das
jl
pop
aam
jecxz
or
mov
xchg
les
inc
pushw
jecxz
pop
repnz
repz
xor
cmc
out
xchg
scas
clc
pop
xchg
sbb
dec
push
nop
or
push
mov
fs
je
out
cmpsl
xchg
insb
adc
cmp
mov
pop
xorl
inc
xor
sub
iret
mov
jnp
in
mov
mov
jl
fwait
xchg
mov
sub
and
push
cmpsb
xchg
and
hlt
leave
cmc
cwtl
lock
xlat
dec
mov
mov
mov
movsb
int
xchg
scas
push
or
dec
sub
rcl
fbld
int
mov
das
xchg
mov
into
int
mov
int3
call
scas
add
xor
mov
insb
nop
js
call
jnp
subl
dec
push
data16
pop
mov
adc
outsb
mov
and
jbe
xchg
dec
jge
dec
lcall
sbb
and
mov
and
pop
push
lock
adc
jne
add
dec
inc
leave
xlat
xlat
sub
cmp
adc
push
fcoml
mov
int
push
popf
xor
xchg
fnstenv
push
push
sbb
push
push
and
repnz
repnz
jne
movsl
xchg
or
sub
enter
push
lods
push
jle
jle
and
imul
adc
xchg
push
sbb
out
lret
mov
add
xchg
xorb
shl
and
idivl
mov
mov
jge
dec
in
lret
arpl
es
xor
lahf
xchg
mov
cli
mov
ret
dec
mov
clc
sub
xchg
icebp
jle
xor
xchg
xor
add
scas
fsubr
lods
push
xor
jns
push
push
js
and
test
add
pushf
mov
cmp
xchg
adc
mov
inc
adcl
and
lcall
mov
loopne
in
xlat
pop
xchg
push
cmc
sti
jae
jns
insb
std
jge
cmpsb
sahf
xor
add
dec
iret
dec
loope
imul
cmpl
sbb
out
pop
xchg
fists
aaa
or
das
cmp
lcall
mov
xchg
inc
push
insl
cmpsb
xchg
jle
xchg
leave
push
or
xchg
int
popf
hlt
movsl
imul
or
mov
add
jb
clc
dec
sbb
notb
mov
in
out
gs
add
push
jle
imul
and
clc
sbbl
in
push
std
sub
sahf
out
add
into
stos
lea
add
int
adc
xchg
imul
mulb
clc
inc
mov
jmp
aaa
mov
mov
lret
xlat
test
jge
lods
gs
and
mov
cmpsl
or
addr16
std
testl
sub
dec
mov
cmp
xor
push
xchg
out
xor
cs
ljmp
inc
or
xlat
push
gs
test
pop
lods
mov
inc
or
push
mov
loopne
jbe
pop
cmc
xchg
jmp
sub
outsl
test
inc
fwait
cltd
enter
jp
and
lea
jns
ret
fstps
xor
test
rep
dec
jp
mov
push
dec
dec
std
pop
xchg
or
jp
fdivl
push
fwait
lahf
ja
jle
je
out
sbb
insl
shl
iret
sub
in
pusha
std
sbb
add
adc
xor
add
popf
fs
ret
ds
andb
xchg
leave
cltd
jns
ficompl
ret
jge
andl
fists
adc
fstl
fs
dec
js
sub
stc
inc
mov
gs
ss
adc
mov
fiaddl
inc
iret
adc
jl
loopne
inc
xlat
jp
cmpsl
cltd
sahf
dec
mov
sub
stos
fisubrs
pop
sbb
loop
jno
push
rcrb
push
dec
ds
push
mov
outsl
xor
popa
inc
je
pop
fcom
inc
mov
out
addr16
jae
pop
nop
jg
and
sbb
jge
fnstenv
mov
jmp
add
inc
push
hlt
dec
mov
mov
iret
push
xor
mov
xor
mov
dec
or
adc
mov
ljmp
mov
mov
push
add
stos
imul
mov
decl
test
outsl
int3
divl
mov
pushf
es
and
sarb
out
test
out
dec
sub
into
out
cltd
mov
mov
sub
mov
insl
rolb
fs
xor
jae
xchg
xlat
push
lea
lods
adc
out
pusha
adc
inc
or
cld
mov
sbb
pop
push
popf
adc
out
cmpsl
sar
into
pop
mull
scas
sti
loop
mov
mulps
jge
cmp
sub
xor
jle
sbb
xchg
out
pop
push
movsb
nop
je
push
sbb
jmp
divl
pop
popa
aad
inc
xchg
arpl
mov
aas
addr16
cmp
cmp
lret
fildl
movsb
test
and
lds
loopne
fnstenv
xchg
fidivrl
subl
mov
in
je
push
daa
add
sar
inc
lret
sub
add
jne
bound
sub
xor
dec
xchg
inc
repz
push
push
push
testb
push
cmp
repnz
sub
ret
push
lret
int3
adc
mov
sbbl
insl
addb
repnz
pop
mov
movsb
sarb
xlat
sbb
cmpsb
adc
cwtl
push
xor
xchg
paddsb
xor
mov
push
sub
ja
push
sahf
jns
xor
sti
imul
adc
int
xor
sub
test
jb
scas
mov
pop
loop
push
dec
jg
cmovg
cmpsb
adc
xlat
mov
dec
dec
cwtl
loope
or
movsb
adc
add
fldt
pop
js
stos
call
xor
mov
jp
out
call
mov
popa
cmp
adc
add
sahf
fists
jge
lret
out
push
popa
ja
mov
outsl
cld
cltd
push
sbb
xor
iret
mov
loop
jp
pop
in
cld
pop
out
lahf
xchg
jecxz
ds
push
pop
jmp
mov
jg
in
jl
clc
test
ljmp
ss
cmp
pop
int
dec
adc
jg
or
ret
notl
test
adc
das
xor
gs
jp
js
or
pushf
in
jecxz
xlat
xchg
lret
clc
jnp
dec
mov
stc
jo
ret
mov
xlat
xor
out
orb
lea
pop
inc
push
jle
mov
mov
xor
lea
jmp
cmc
test
repz
add
push
dec
test
in
sub
or
dec
cwtl
es
push
test
mov
icebp
mov
xor
mov
icebp
xchg
adc
out
xlat
dec
jl
movsb
and
mov
sarl
cmpb
jg
pop
push
adc
or
push
pop
mov
enter
mov
or
sbb
inc
push
out
fcmovb
pop
mov
jp
call
cmp
fsubr
fwait
dec
dec
clc
scas
lock
lret
mov
sub
std
jle
lock
mov
or
push
xor
sub
cmp
add
sti
inc
movsl
inc
add
jb
add
xlat
iret
gs
or
mov
pusha
into
adc
cmpl
das
in
xchg
enter
les
sbb
jbe
push
fs
movsl
mov
and
push
test
in
cmpsb
lods
sub
lds
add
inc
cmp
jg
sub
xor
das
sbb
lret
or
mov
jp
jp
mov
cmpsb
add
mov
jp
mov
mulb
es
aam
mov
sub
ret
fsubrl
jecxz
jnp
adc
and
mov
push
ss
sbb
and
or
adc
stos
outsb
xor
jle
sahf
out
enter
shll
notb
vpminub
insl
aam
repz
in
inc
mov
xchg
test
lahf
pusha
mov
push
test
in
popf
adc
jg
xchg
adc
rorb
and
push
lcall
jnp
stc
pop
imul
mov
push
dec
push
xchg
push
test
pop
sbb
pop
popa
fildl
mov
jb
inc
cld
push
aas
jnp
mov
push
fmull
sub
loope
mov
mov
in
sub
shr
jnp
xchg
jge
fbld
xchg
js
jno
push
imul
mov
mov
cmovne
push
stos
sub
lcall
mov
aaa
out
cli
inc
cli
xor
add
sti
stos
push
or
cmp
ja
frstor
adc
mov
popa
push
aam
inc
ds
inc
sub
pop
pop
sub
imul
icebp
out
mov
fidivs
ljmp
adc
sbb
push
in
and
cmp
pop
add
pop
ss
sub
push
insl
push
cmpb
and
lcall
lret
stos
dec
mov
pop
jecxz
repz
xor
repnz
mov
popa
ds
xchg
xlat
pop
cld
mov
sub
and
lock
aas
pop
jmp
out
not
inc
mov
mov
and
mov
push
sub
and
leave
sub
aam
adc
jle
pop
sub
sub
push
es
shll
xor
xchg
lods
mov
xor
inc
xor
ja
sbb
jno
aam
pop
jp
pop
hlt
outsb
cmp
adc
push
bound
jmp
inc
lea
loope
mov
test
ja
mov
sbb
cmpsb
push
shr
or
pop
xor
stc
push
mov
fstpt
fadd
xor
cmp
mov
sbb
outsb
scas
daa
push
dec
mov
mov
sub
xchg
fcoml
fidivl
outsb
in
pusha
pop
mov
push
rorl
mov
je
mov
fstl
fistl
dec
or
outsb
jp
scas
mov
gs
push
aaa
pop
jg
mov
ss
stos
jg
add
fwait
jns
and
dec
or
or
inc
mov
leave
nop
scas
rcrb
cmp
mov
sub
lock
hlt
sub
fdivrp
xlat
lods
sbb
cmpsl
mov
mov
push
or
adc
sub
add
repnz
xchg
push
jne
cli
imul
push
jecxz
mov
cmp
pop
shlb
push
loopne
imul
test
jno
hlt
es
movb
sub
lret
cmp
add
dec
sarb
inc
xor
inc
pop
stos
lods
cltd
mov
cmc
add
sub
sub
adc
push
cmp
cmp
dec
dec
inc
xor
xorb
push
dec
push
push
loope
loopne
xchg
cmpsl
hlt
pop
sbb
adc
add
imull
add
insb
popf
fs
sbb
rcrb
pop
stos
popf
fldcw
fnstcw
jae
in
push
cmp
addr16
cmp
push
stos
mov
mov
mov
mov
sbb
sub
scas
test
pop
fistl
in
in
movsb
or
mov
mov
jb
mov
gs
adc
in
clc
idiv
and
into
ret
dec
sub
mov
jo
leave
mov
stos
mov
inc
repz
adc
stos
mov
add
or
popf
xor
pop
aad
in
lods
icebp
mov
sbb
idivl
and
pop
lahf
pop
add
cmp
mov
or
out
jg
or
dec
lods
int3
adc
inc
xor
int
pushf
cmp
add
ret
imul
imul
and
js
call
or
or
xchg
stos
and
jp
dec
xchg
cmp
stc
push
inc
xlat
jo
add
loope
out
cmp
movsl
ret
cltd
add
popf
cmp
outsl
or
loop
lock
fnstsw
fisttpll
dec
lcall
jle
add
mov
sbb
inc
nop
bound
xchg
mov
pop
add
adc
push
cmp
imul
adc
movsb
inc
push
push
add
sub
jo
inc
pop
push
std
sbb
sub
pop
gs
sbb
sbb
outsb
add
sub
push
mov
xor
scas
jb
inc
dec
jmp
js
scas
dec
inc
xchg
cs
lods
mov
dec
push
je
sti
adc
or
test
cmp
inc
dec
int
sub
clc
mov
add
cltd
xchg
adc
pop
cmp
sbb
data16
mov
jecxz
mov
shll
jecxz
bound
les
pushf
stc
sub
sbb
out
adc
ret
cmc
or
push
xchg
xchg
cmp
xchg
cld
and
mov
loopne
mov
out
sbb
mov
mov
sbb
mov
xchg
adc
xchg
cs
cmp
rorl
jmp
pop
push
and
dec
movsb
iret
loop
pop
pop
lahf
into
or
popa
cs
jnp
pop
lds
lock
psubsw
cmpsb
cmp
sbb
dec
sub
jbe
gs
test
xor
pop
lret
add
aaa
call
inc
lret
in
pusha
mov
inc
stos
and
cli
push
leave
lcall
mov
repnz
out
mov
pop
in
fidivrs
dec
push
stos
or
sysenter
mov
and
cmp
orl
aad
push
push
dec
fstl
pushf
ret
mov
cmc
shrl
lsl
scas
gs
pop
push
pop
lahf
int3
imul
call
movzbl
dec
in
test
mov
cmp
push
mov
out
lcall
fsubrp
int3
pop
dec
aam
sbb
and
sub
inc
cmpsl
cmp
and
dec
jg
sbb
nop
pop
pop
jecxz
jne
jg
push
xor
jno
rolb
inc
outsl
cs
outsl
and
out
mov
shll
cmp
pop
fucomp
shll
cwtl
xchg
les
inc
ficoml
dec
sub
mov
scas
test
out
xchg
ret
mov
add
jp
icebp
iret
or
out
dec
cmpsb
and
das
cmp
lret
cltd
xor
jb
pusha
xor
pop
inc
mov
dec
pop
insl
lods
cmp
jecxz
pop
sub
notl
cwtl
dec
xchg
xchg
cwtl
cmpsl
cli
dec
test
lret
jae
mov
adc
and
pop
cmpsb
push
cmp
shll
inc
jmp
lods
mov
andl
in
test
out
sub
push
xchg
inc
inc
dec
jle
ds
xlat
outsl
sub
mov
jle
dec
jp
dec
imul
sub
inc
push
mov
inc
cmp
pop
mov
xchg
out
xchg
nop
ret
cmp
lcall
cwtl
cld
cli
pop
jecxz
mov
dec
mov
leave
xor
and
fldln2
dec
and
xchg
push
pop
imul
cltd
xchg
mov
popf
dec
or
xor
gs
xchg
pop
mov
jno
pop
inc
orl
cmp
stos
jle
pop
das
pop
stc
lea
insl
into
incl
ljmp
jo
adc
jo
or
movsl
xor
cmc
cmpsl
loopne
stos
clc
call
sub
pop
and
lds
ficomps
or
pop
mov
loop
lcall
mov
xchg
mov
std
mov
push
cmp
mov
jge
mov
push
pop
je
dec
and
sub
iret
daa
stos
sub
push
mov
aam
inc
lret
movl
sub
xchg
aaa
fnsave
cmp
add
shl
test
jle
adc
frstors
lcall
cmp
lock
pop
lea
adc
cmpsb
popa
stos
repz
mov
outsb
sub
sahf
mov
jae
stos
push
jle
push
add
ret
inc
cmp
icebp
xor
mov
gs
popf
push
jg
pop
cmpsl
or
popf
push
mov
fnstenv
dec
inc
jmp
addr16
pop
daa
lea
mov
xlat
add
stos
jne
fsubrs
mov
pop
or
push
enter
out
mov
repz
lcall
push
sub
pop
out
sbb
sub
aam
cmpsl
insl
in
mov
gs
cmp
mov
jns
adc
std
mov
mov
push
test
in
pop
xchg
icebp
xchg
and
push
push
xchg
sub
dec
or
push
inc
pop
movsb
push
je
xor
push
sbb
std
cld
pop
pop
test
out
insl
aas
jbe
mov
std
aam
cli
fsub
movsl
push
inc
adc
repz
inc
dec
push
push
fimull
addb
adc
fists
fldcw
pop
jecxz
pop
sti
cli
xchg
sub
test
lahf
add
inc
hlt
stos
sub
stc
mov
adc
mov
mov
add
in
stos
mov
sub
push
jo
or
sub
mov
jmp
cs
or
test
ja
shlb
add
push
mov
and
lret
sarb
jae
stos
and
in
test
sti
hlt
popf
mov
cltd
jne
inc
fldcw
jo
mov
cwtl
mov
add
lcall
insl
ljmp
mov
sahf
lahf
add
inc
fiadds
stos
neg
ss
jae
cld
lcall
pop
or
mov
jae
dec
cmpsb
xor
sub
stos
ds
dec
out
push
outsb
ds
and
jbe
movsl
pop
popf
mov
into
js
mov
lods
imul
stos
cmp
or
int
js
pop
sub
cmp
jl
lret
aas
add
and
sbb
adc
pop
dec
dec
test
adc
into
cmc
cmp
xor
push
mov
xchg
addr16
push
popa
loop
iret
pushf
sahf
out
push
xchg
mov
push
mov
cmp
mov
je
sub
mov
adc
mov
jne
andl
jp
repz
fsubs
jmp
mov
pop
loopne
mov
es
out
into
sbb
mov
and
pop
jnp
insl
mov
add
xor
mov
fistps
test
jb
cs
testl
sahf
cmp
ds
sti
mov
adcb
test
mov
ds
xchg
jp
sbb
pop
and
lds
in
es
xchg
negl
jl
ss
std
scas
pop
push
jno
ret
outsb
or
cmpl
sti
in
and
dec
jns
mov
mov
push
ss
add
mov
sbbw
xor
mov
mov
es
lods
pop
or
and
mov
nop
frstor
repz
or
out
sub
mov
pop
loopne
cltd
adc
mov
fs
mov
xor
jns
insb
out
xchg
mov
out
fwait
xchg
push
int
andl
dec
aam
fwait
lock
stos
lods
cmp
int
pop
mov
push
bound
xor
adc
pop
arpl
xchg
inc
das
mov
ljmp
dec
shr
pop
jl
and
aad
sub
mov
push
lcall
xchg
arpl
sahf
das
pusha
lds
sbb
xlat
mov
adc
fisubrs
mov
lds
and
pop
jecxz
fcmove
mov
std
js
movsb
test
stos
inc
adc
shl
mov
mov
lods
into
fbld
sbb
adc
arpl
push
cli
inc
xchg
push
iret
je
mov
cmp
lahf
ret
mov
or
imulb
add
out
jle
imul
out
mov
pop
lds
enter
enter
stos
inc
jbe
loope
mov
push
test
or
jbe
adcl
push
jo
retw
jle
es
mov
test
cmp
mov
add
push
cmpsb
mov
xor
enter
add
movsl
fimull
or
mov
clc
test
jno
pop
sub
xlat
scas
sub
pop
push
sub
dec
ljmp
lds
sahf
xchg
js
mov
add
xor
mov
dec
mov
mov
cmpl
inc
mov
or
xchg
push
adcl
jb
or
xor
das
or
xor
pop
inc
outsl
dec
dec
lret
div
cmp
push
test
lcall
lret
xlat
jne
mov
cmp
mov
mov
orl
andb
mov
in
call
int3
cmp
jmp
and
sti
aas
jns
cmc
mov
xor
stos
adc
decb
sbb
or
xchg
mov
test
pop
adc
lret
ret
pushl
push
loop
lock
fcompp
nop
jge
push
in
stos
push
dec
or
cmp
jl
xchg
subl
enter
mov
mov
call
sub
test
xor
mov
push
ss
jp
inc
mov
fdivs
dec
mov
cmp
push
lds
pop
push
inc
mov
cli
or
mov
clc
dec
testb
pop
jb
mov
insb
stos
jg
jge
cmp
test
mov
push
mov
or
nop
pop
cmpsl
adc
inc
cli
shll
addr16
mov
pop
xor
out
lock
out
sub
jmp
jo
xchg
leave
ja
ja
fstl
out
inc
mov
inc
fs
adc
add
sub
ljmp
lcall
pop
mov
shll
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
jmp
xchg
pop
and
mov
jo
push
pop
mov
jns
push
pop
jp
lds
dec
jnp
in
dec
inc
mov
sti
shl
movsb
icebp
xchg
mov
sbb
bound
scas
dec
jnp
sub
sub
gs
movsb
sub
or
jne
jg
fmul
jle
xor
mov
xchg
ucomiss
mov
jp
fwait
jnp
imul
lods
or
pop
arpl
fiadds
cmp
jns
xlat
cmp
rcll
cmc
or
scas
subl
enter
dec
aaa
cmpsb
rclb
imul
pop
in
lods
movsl
sahf
sub
or
sbb
adc
fisubrl
mov
popf
movsl
das
sahf
pop
adc
out
test
pop
lods
mov
mov
jmp
sbb
enter
push
and
lret
push
jo
jmp
xchg
push
xor
add
and
adc
inc
mov
popf
sbb
xor
dec
xchg
sbbb
jno
mov
xorb
pop
ret
movsl
fmull
inc
popf
or
mov
nop
repnz
sub
push
popf
mov
fdivrl
lret
insl
mov
mov
dec
sahf
nop
sbb
mov
sti
mov
or
aam
mov
mov
or
adc
test
call
cli
decb
iret
pop
ret
jge
cld
jge
xor
outsb
es
imul
ljmp
js
mov
mov
pop
movsb
mov
inc
cmp
nop
adc
ss
cmp
mov
in
call
ja
add
cmp
shrl
movsl
mov
xchg
out
sbb
aaa
jp
repnz
mov
scas
cmp
sub
sbb
idivb
mov
jle
mov
arpl
or
shrl
mov
inc
nop
imul
xlat
sub
inc
cmpsb
ficomps
adc
insb
clc
inc
add
sub
jmp
fcompl
pop
inc
insl
sub
addr16
add
xchg
add
xchg
or
jecxz
idivb
xchg
mov
mov
faddl
cmp
mov
mov
nop
int3
push
fs
orl
or
jp
mov
lahf
imul
pop
out
test
mov
shrl
loope
ja
aas
stc
sub
jae
mov
mov
dec
pop
pusha
cmpsb
cmpb
lret
sub
aad
insb
outsb
stos
stc
jge
xchg
lcall
push
ljmp
pop
mov
loopne
jmp
pop
cmp
pop
in
inc
add
and
or
mov
imul
cli
sub
ret
sbb
mov
sbb
jns
and
jnp
mov
add
pop
iret
mov
or
outsb
xor
fcomps
pop
adcl
mov
pushw
aas
je,pt
push
adc
pop
enter
daa
xchg
aam
xor
jae
rcrl
das
pop
dec
pusha
fdivr
push
test
jge
daa
sub
cmp
dec
xchg
imul
cmp
leave
roll
push
test
sbb
add
rorb
jg
xchg
popf
and
enter
rcll
xor
fsubs
add
pop
ljmp
hlt
icebp
mov
dec
lock
xor
mov
andl
mov
pop
in
or
pop
mov
push
out
push
fdivrl
sub
and
dec
xchg
fdivl
scas
rcrl
xchg
jecxz
pop
xchg
xchg
xchg
pop
push
aaa
sub
shll
add
mov
imul
daa
mov
aaa
add
mov
andl
enter
dec
jmp
xchg
sub
mov
aaa
mov
push
loopne
dec
sub
mov
mov
xor
cmc
out
loop
mov
inc
fsubrs
mov
arpl
mov
stos
pop
fistps
and
add
xchg
inc
hlt
pop
add
and
imul
push
nop
mov
push
bound
cmpsl
mov
add
mov
mov
cwtl
fsubs
sub
sbb
mov
popf
push
sub
xor
push
dec
push
add
sahf
in
lock
sub
pop
ss
dec
inc
inc
mov
lret
jbe
cltd
inc
xchg
jbe
lds
shrl
push
mov
pop
jg
cs
xor
cmp
mov
mov
sar
adc
stos
mov
loope
movsb
pop
outsl
enter
imulb
inc
xchg
mov
insb
les
test
pop
iret
push
pushf
jbe
leave
js
rcrb
dec
fcmovbe
ljmp
arpl
fistl
cmp
add
sahf
int3
sarb
iret
testb
dec
lock
add
cmp
cld
iret
pushf
cmp
cld
fnsave
jns
das
in
push
loopne
rol
aaa
stos
mov
sub
test
fdivs
inc
xchg
xorb
aad
jnp
mov
lahf
test
into
dec
sbb
mov
or
add
pop
add
aaa
fiaddl
fmull
ret
aad
push
and
push
and
sbb
dec
jb
roll
cmpsl
mov
out
imul
inc
shl
cmp
sbb
fsubl
xchg
mov
xor
icebp
js
add
mov
stos
or
bound
jle
insl
jge
xor
mov
cmpsb
sbb
je
sbb
add
inc
into
jp
lret
push
inc
dec
jl
cli
fs
mov
sub
in
int
sbbb
imul
push
xorl
sub
in
push
fwait
inc
push
and
inc
and
mov
shl
lods
xchg
stc
fildl
xor
fimuls
fbstp
xor
jmp
push
pop
sbb
in
cmp
lret
mov
mov
adc
inc
int
out
push
mov
mov
add
pop
loop
xchg
icebp
cmp
pop
repz
and
or
aam
call
arpl
das
push
adc
and
mov
jmp
imul
imul
xor
scas
dec
pop
mov
test
jae
sbb
sbb
ret
fwait
push
stc
mov
or
mov
aad
xor
repnz
cwtl
pop
lret
xor
out
fcom
pop
mov
ret
sbb
stos
cltd
mov
jle
fldenv
add
mov
xchg
inc
adc
adc
adc
pop
add
jne
je
xlat
es
out
sbb
das
mov
das
push
jbe
rcrl
stos
jp
sub
outsb
ret
roll
cmp
data16
sahf
sub
mov
and
pushf
loope
xor
push
stos
mov
in
clc
xchg
sbb
pop
sbb
inc
leave
cmp
cltd
icebp
pop
cmp
or
stos
adc
pop
lret
xchg
jmp
out
xchg
inc
popa
mov
push
sbb
inc
inc
mov
inc
xlat
cmp
xor
or
imulb
inc
ss
call
xchg
mov
pop
divl
daa
sbb
test
insb
cmpsl
xchg
pushf
int
mov
iret
jle
dec
mov
push
mov
adc
jns
divb
cltd
sub
fnstsw
mov
idivl
icebp
dec
push
leave
out
repz
pop
in
xor
xor
cmpsb
rorl
ja
or
repz
push
insl
movsl
xor
daa
es
jecxz
dec
negb
sti
mov
add
jnp
adc
mov
xor
mov
sbb
mov
jae
test
inc
xchg
enter
push
mov
adc
mulb
pop
jae
jno
or
rolw
and
push
push
fdivrl
pop
lret
mov
arpl
in
shr
sarb
push
cmpsb
gs
les
sbb
sbb
lea
ret
out
sbb
insl
jns
ja
add
ret
push
inc
mov
dec
or
test
lahf
jmp
outsl
aas
push
rcrb
push
sub
aad
push
add
int3
pop
sub
cltd
mov
test
testl
fdivp
aas
pop
mov
cwtl
fdivs
add
lret
sbb
and
in
out
adc
or
mov
scas
stos
xor
cmc
mov
mov
cmp
jnp
mov
push
rorl
dec
xlat
aas
jg
aaa
mov
add
out
and
mov
push
stos
lea
pop
mov
mov
iret
push
leave
jecxz
jmp
es
ja
inc
and
mov
push
mov
cmp
lret
sbb
out
jp
ss
and
push
loope
je
adc
inc
pop
add
in
inc
mov
and
mov
in
jo
test
mov
sahf
pop
idivl
iret
mov
and
js
sub
add
jle
sbb
out
xor
out
xor
cli
sbb
cmp
or
test
shlb
aaa
pop
pop
mov
scas
dec
lods
sbb
cmpsb
pop
push
popf
dec
mov
inc
pop
sbb
out
adc
clc
mov
aas
orl
aaa
cs
dec
xlat
sbb
dec
pusha
loope
fadd
or
scas
jg
add
add
test
rolb
aaa
int
bound
lret
fyl2xp1
push
cs
and
pushfw
inc
push
ja
or
cmpsl
dec
sub
cmp
adc
ljmp
cmp
adc
xor
jecxz
mov
and
sub
jne
dec
mov
sbb
sarl
in
popa
fxch
lds
addl
and
sub
mov
mov
jnp
divl
push
mov
stos
pop
pushf
ud1
sbb
out
push
mov
ds
fdivp
cli
push
add
and
insb
lds
into
fdivrl
or
stc
push
pop
movsb
cltd
repnz
cmp
test
sub
add
mov
jg
fmul
lret
push
lret
jo
sbb
mov
cmp
movsl
adcb
movsl
into
xor
cmp
or
pusha
inc
and
in
lret
sub
jb
pop
mov
pop
sarb
push
and
testb
addr16
sub
rcll
jmp
xor
xchg
test
fidivs
mov
adc
inc
jg
mov
and
mov
pop
out
pop
xchg
jns
jle
jecxz
push
jne
jp
jns
inc
daa
popl
pop
sbb
inc
in
sarb
lcall
movsl
mov
in
mov
push
push
dec
mov
jmp
jle
out
jle
imulb
cld
les
in
loopne
adc
xor
test
and
mov
in
push
jg
xchg
mov
cmp
cmc
fdivrp
sbb
das
push
pop
int
fsubl
pop
in
arpl
add
or
bswap
stos
cmp
push
outsl
mov
cmc
sub
pop
loope
add
and
subb
loopne
out
ja
test
loope
xor
push
sub
mov
sub
add
mov
dec
sahf
xchg
rorl
adc
push
mov
dec
lock
clc
mov
jo
jb
jp
and
ljmp
sub
mov
mov
mov
push
aad
scas
mov
subl
stc
pop
movsb
rol
sub
lea
pop
loope
mov
sub
adc
xorl
mov
outsb
inc
push
cmp
aam
insb
jns
pop
lock
push
cmp
dec
in
mov
loop
cmp
sub
dec
sub
mov
dec
mov
icebp
xchg
add
ret
pop
sub
ret
cmpsl
cs
pop
lods
sbb
xor
jno
mov
rcrl
sbb
aad
jmp
out
cmp
rorb
lds
xor
imull
ljmp
test
in
repz
fcmovnu
ljmp
int
mov
xor
movsl
xor
clc
push
lea
ret
popa
inc
xchg
test
sbb
fs
hlt
js
stos
push
xor
xorl
sub
adc
vpternlogq
jge
sti
arpl
mov
mov
icebp
ds
out
popa
mov
add
aaa
inc
ja
scas
ret
sbb
cmp
add
stos
xor
mov
jno
adc
out
leave
push
jp
repz
sti
out
xchg
jg
pop
js
push
movsl
jg
push
shrb
mov
sub
and
xchg
pop
xor
popf
imul
mov
fnsave
dec
jne,pn
jmp
add
icebp
lcall
mov
ja
stc
aaa
cwtl
xor
es
ficoms
ret
popf
adc
mov
aas
out
imul
cmpsb
inc
jmp
sub
sub
nop
test
or
mov
jle
jle
jp
mov
popa
stos
xchg
cwtl
mov
aam
fistps
xlat
test
popf
xchg
je
lods
jo
repz
pop
fisubrs
in
subl
jp
data16
lahf
xor
repnz
push
xor
mov
or
out
jne
gs
xchg
gs
sub
inc
ret
adc
mov
mov
repz
dec
or
outsb
inc
popf
mov
sti
add
cmpsb
mov
stc
push
aam
mov
cltd
xchg
movsl
movsb
fsubr
inc
push
loope
test
pop
sbb
mov
pop
jbe
jle
dec
cmpsl
pop
lds
fcompp
sbb
aad
cmpsl
andb
sub
xchg
jnp
jecxz
out
push
shlb
ja
xchg
scas
lahf
dec
out
mov
jecxz
pop
pop
les
data16
adc
xorb
ret
cmp
sti
test
mov
inc
xchg
or
negb
repnz
xchg
popa
enter
push
gs
arpl
mov
lret
adc
dec
in
test
mov
mov
pop
jno
mov
out
and
ja
adc
test
xchg
add
cmp
add
jmp
das
gs
adc
pop
pop
lcall
adc
cli
sbb
lds
mov
stos
inc
cmc
mov
adc
icebp
xchg
lods
push
out
lock
jo
and
push
fwait
lods
sbb
jecxz
mov
filds
or
stos
ss
scas
mov
pushl
sbb
frstor
inc
pop
jnp
mov
imul
sbb
and
ds
adc
sbb
loop
xor
adc
lcall
xchg
sub
jecxz
subl
add
addr16
inc
adcl
push
jmp
jge
test
pop
and
cltd
sti
loope
inc
lahf
movsb
aam
popa
add
std
and
cltd
jmp
mov
and
outsb
mov
or
mov
scas
movsb
add
mov
push
sti
xlat
push
fs
subb
adc
shl
push
pop
mov
xlat
or
mov
jnp
loope
jp,pn
adc
cmpsl
mov
movsl
ret
jns
jne
push
fiaddl
and
cli
mov
lahf
lea
fistps
call
push
sbb
xor
pop
pop
stos
in
xor
or
scas
and
lods
faddl
orl
mov
mov
rcrb
loopne
lcall
dec
sub
aaa
cmp
push
xchg
imul
adc
sub
mov
shl
loope
in
cld
xchg
inc
iret
and
loop
sub
movsb
sub
nop
pop
add
dec
pop
and
jmp
jmp
out
lret
inc
mov
fstpt
jge
jne
popa
pop
sub
xchg
arpl
in
lods
in
push
mov
movsb
out
pop
push
idivb
push
sub
or
xchg
in
cmp
xchg
test
add
mov
mov
mov
shll
mov
sub
mov
jmp
sub
push
hlt
mov
test
lret
sbb
mov
out
cmp
sete
leave
outsb
inc
xor
or
mov
push
aad
add
and
xchg
out
insb
nop
movsb
jg
dec
psubsb
push
push
loopne
jb
stos
imul
xchg
sbb
pop
shll
jno
mov
mov
lahf
push
sbb
mov
insl
movsl
jge
mov
hlt
test
mov
push
int3
jle
lods
pop
push
out
adc
sbb
dec
vorps
pop
push
cmpb
cmpsb
mov
int3
mov
fisttpll
outsl
js
inc
popa
push
stc
mov
fcmovbe
jns
inc
push
dec
mov
movsb
add
sahf
adc
shlb
sbb
push
movsl
test
imulb
adc
jl
stos
or
data16
outsb
fwait
push
or
repz
mov
cmp
pop
pop
aad
inc
inc
sbb
push
cmp
add
int3
mull
jle
jmp
jb
mov
incb
jae
push
fucom
in
aam
jbe
jbe
xor
fildl
mov
aam
cmpsb
jno
test
push
dec
fucomip
addr16
mov
stc
add
out
testl
or
pop
or
data16
cmp
mov
je
mov
je
sahf
pop
add
fimuls
sti
idivb
xor
mov
cwtl
xor
in
jbe
test
fstpl
int
pop
shrb
movb
adc
fldl
shl
xor
nop
icebp
test
and
arpl
mov
ljmp
xor
jecxz
cltd
leave
sbb
cmpsl
add
popa
jne
adc
cli
xchg
xchg
xor
sbb
push
outsb
sub
les
mov
jp
ja
add
ja
lcall
pop
shlb
and
cmpsl
negb
xchg
inc
aas
ret
mov
lock
xchg
hlt
iret
or
mov
cmp
cld
sub
adc
pop
push
popf
imul
jge
aaa
and
jl
dec
mov
sub
sub
out
pop
xchg
icebp
mov
pop
mov
mov
out
mov
jp
movsb
inc
jp
xchg
sahf
cmpsl
sub
jnp
push
les
xor
push
pop
jns
cltd
inc
lods
mov
pop
popf
pop
mov
loopne
xor
or
mov
in
test
or
icebp
dec
out
es
arpl
std
push
inc
dec
sbb
cli
popa
xorl
xchg
adc
xor
sahf
mov
push
das
aaa
adc
xchg
pop
and
loop
xor
in
sbb
lods
lret
pop
cli
mov
out
push
cmpb
lea
call
xchg
push
fnstenv
lret
and
hlt
mov
add
push
push
xchg
je
sbb
dec
sbb
jg
jno
sbb
mov
fs
push
pop
jb
inc
jo
iret
xor
clc
jno
out
je
ds
push
xchg
shll
icebp
je
mov
idivb
mov
xchg
je
pop
push
rorb
cmpsb
fldcw
inc
in
sub
decb
xlat
popa
jbe
filds
stos
popa
fistps
insl
repz
movsb
mov
ds
cmp
pop
add
sbb
and
xlat
mov
jae
xchg
pmullw
sahf
sbbl
pusha
lea
pop
and
lods
loopne
stc
jnp
inc
testl
call
jno
test
pop
imul
pop
mov
into
push
call
cs
movsb
js
fistl
es
rcrl
adc
data16
sbb
aas
xor
pop
push
repz
stos
movsl
pop
add
xchg
dec
je
lock
loopne
or
pop
pop
repnz
push
fdivrl
xchg
xor
or
xor
sbb
lret
xlat
and
enter
mul
mov
inc
rcrb
mov
movsl
pop
in
scas
ficompl
dec
push
mov
ja
js
pop
sbb
insl
decl
enter
sbb
int3
jmp
sti
mov
xchg
mov
loopne
aaa
cmp
divb
mov
push
xchg
int
int3
and
mov
mov
mov
jno
mov
mov
dec
push
mov
jecxz
sbb
sub
rcrl
and
movsb
jmp
lret
stc
in
pop
and
mov
sbb
je
pop
mov
rcrb
adc
jns
pop
inc
sub
loopne
sub
jne
sar
ds
insb
movsb
adc
mov
adc
das
and
dec
adc
subb
pushf
or
mov
xchg
adcl
nop
add
and
in
add
ds
test
xchg
jno
or
imul
lret
cwtl
add
nop
in
lcall
icebp
stos
adc
fs
sti
dec
push
test
divl
mov
cmp
jecxz
repnz
fwait
fs
dec
imul
push
sub
fmuls
imul
lret
nop
inc
push
outsl
adc
loop
icebp
and
in
cmpsb
fistpll
jns
pop
popa
lret
ja
imul
je
xor
xlat
aaa
ror
add
loope
fsubl
mov
fstpt
xchg
xor
fyl2x
jb
cmp
mov
repnz
stos
inc
loopne
or
bnd
sti
pop
ljmp
add
push
push
xor
flds
and
ja
aaa
mov
and
xorl
pop
xchg
cmp
pop
das
lahf
int3
inc
stc
in
insl
out
ds
pop
ljmp
push
cltd
je
jge
insb
cmc
dec
mov
push
dec
sti
cmpl
into
out
sub
sub
fucomp
fs
loopne
pusha
imul
xchg
fistpl
jge
inc
int
xlat
scas
in
stos
mov
push
mov
sub
sub
adc
pop
cmp
add
or
test
and
mov
add
repz
fndisi(8087
outsl
and
sub
rcl
jae
sbb
pop
xor
push
jecxz
dec
mov
ds
in
add
fcmovnbe
xor
roll
push
jle
hlt
jl
pop
data16
or
inc
xor
in
repz
lret
jno
inc
ret
fwait
insl
and
mov
je
push
inc
lret
mov
incb
clc
sub
sub
and
pop
dec
pusha
shlb
lahf
pop
inc
in
pop
push
mov
test
and
mov
pushf
arpl
aaa
xor
sahf
push
mov
inc
mov
std
jecxz
repz
int
mov
ljmp
jmp
orl
test
hlt
lock
sbb
sub
jae
in
xchg
xchg
mov
cltd
loopne
push
and
push
aad
jbe
ja
push
hlt
jno
pop
divl
pop
leave
xor
sub
scas
push
push
pushf
pop
es
mov
inc
incl
push
mov
xlat
inc
andl
mov
popf
leave
and
sbb
jle
iret
stos
cmp
pop
and
out
iret
in
pop
or
fistps
test
jmp
mov
jno
add
and
pop
dec
lret
and
cli
or
push
xchg
cmp
mov
out
jle
pusha
cmp
ljmp
adc
imul
scas
fldl
mov
popf
mov
xor
pop
mov
ja
clc
stc
popa
xor
dec
into
mov
addr16
add
pop
icebp
insb
mov
and
lcall
mov
stc
rcll
mov
inc
rcll
outsb
ret
loop
pushf
hlt
movsl
out
test
inc
xchg
insl
repnz
sbb
mov
inc
sbb
stos
pop
xor
mov
out
int3
and
mov
adc
sub
lock
cmp
or
mov
xchg
inc
data16
cmc
push
test
enter
dec
pcmpeqw
popf
xchg
sbb
dec
iret
mov
push
in
push
mov
rolb
mov
mov
sub
pushf
xchg
mov
mov
xchg
mov
inc
and
mov
lahf
push
popf
or
stos
pop
lock
test
jns
insb
rorl
mov
hlt
push
fidivs
cmp
cmp
hlt
les
pop
repnz
jne
jne
mov
sbb
loop
inc
cmp
ljmp
loope
push
shlb
push
data16
xchg
inc
push
ret
mov
lock
sub
pushf
mov
xchg
sbb
hlt
mov
aad
xchg
xor
leave
stos
dec
xor
shr
mov
out
mov
mov
mov
in
iret
stos
mov
and
loope
sbb
aad
imulb
add
shrl
pushf
mov
pop
inc
xor
es
lock
jl
iret
enter
inc
adc
outsb
xor
inc
inc
movsl
cmp
xchg
jl
mov
mov
popf
and
sti
dec
pop
hlt
mov
std
in
xor
aad
adcl
lret
push
pop
call
fnstcw
fdivrp
lods
inc
xor
roll
lods
shll
mov
sub
insb
frstor
cmpsl
ds
inc
rorl
outsb
mov
repnz
pop
lret
inc
and
pop
lods
je
lcall
mov
push
add
dec
mov
fldl
cmpl
popa
ljmp
jnp
sub
and
sti
out
dec
bound
mov
sbb
xorl
cwtl
dec
jbe
add
ret
scas
out
adc
cmp
int
jbe
mov
mov
jecxz
loopne
xor
mov
insl
fwait
movsl
test
sub
adc
and
inc
pop
push
mov
jmp
inc
outsl
push
imul
inc
dec
popa
dec
scas
in
clc
fimuls
shrb
push
xor
mov
push
push
xor
xchg
sbb
pop
adc
mov
sbb
jmp
jbe
add
out
sub
mov
aas
popa
or
cmp
dec
jmp
cmp
xor
test
sub
add
adc
mov
fisubs
jle
xchg
add
or
and
cmp
mov
push
xchg
add
enter
mov
imull
cmp
mov
and
ds
xchg
jl
sahf
shlb
mov
adc
sbb
ds
jl
lcall
or
jg
movsb
negl
mov
mov
daa
pop
popa
mov
mov
in
sti
js
adc
jp
pushf
fidivrl
pop
pop
enter
sbb
dec
mov
decl
push
adc
adc
aaa
dec
lds
push
dec
add
aaa
lcall
js
mov
pop
into
cmp
popl
xor
pop
ljmp
stos
movsl
clc
pop
jbe
adc
push
int
jno
push
pop
push
mov
cmp
pop
push
cmp
hlt
mov
mov
mov
fsubrs
push
bound
xor
mov
inc
cmp
jmp
fldenv
dec
push
cmp
add
push
fs
divl
xchg
cmp
mov
subl
aad
mov
push
loope
in
arpl
jnp
xchg
or
data16
mov
cmp
xchg
cld
dec
and
jnp
repz
or
xor
and
das
stos
xchg
sub
or
mov
mov
leave
and
gs
or
lahf
or
sbb
and
popf
adc
scas
or
enter
subl
xor
sbb
xor
jb
lea
or
and
es
js
sarb
cmp
daa
imul
loopne
int
jmp
hlt
jno
xchg
jne
mov
fmulp
repz
push
or
movl
inc
outsb
cmpsb
addl
hlt
push
outsl
enter
insb
sub
cwtl
push
push
out
cmovle
push
lahf
and
repz
imul
nop
inc
and
mov
pop
jae
insl
xchg
mov
stos
ficomps
scas
jge
inc
jl
pushf
mov
les
jle
nop
not
sub
pushf
and
in
repnz
movsb
dec
jnp
jns
jb
push
mov
je
in
dec
jnp
popf
ror
les
adc
loope
sbb
mov
dec
adc
push
add
jecxz
push
or
adc
jg
and
cmp
mov
jns
mov
roll
test
lea
shr
aam
out
call
or
mov
add
cs
pop
popf
push
iret
add
test
les
andl
sub
roll
mov
jg
or
cmp
out
aaa
pop
lret
pop
shlb
sub
inc
cmp
in
inc
and
jbe
and
adc
or
ja
cli
pop
rcrb
mov
fstps
out
gs
outsl
movsb
push
xor
clc
push
mov
in
leave
and
andl
lcall
sub
scas
fcomps
int3
mov
pushf
ss
test
ficomps
leave
jbe
imul
pushf
sub
shll
xchg
pop
mov
push
sbbb
adc
mov
add
testb
cld
mov
loop
or
xlat
das
pop
pop
test
repz
leave
out
add
mov
jno
pop
push
adc
add
popa
pushf
aad
push
in
mov
adc
jmp
add
cld
stos
add
sbb
push
es
pop
addr16
sbb
hlt
std
inc
adc
dec
cmpsl
loop
stc
in
fstp
test
lret
and
int
cmpsl
daa
cmpsb
inc
mov
cwtl
push
jmp
sbb
push
sub
ret
imul
lods
sbb
xchg
and
or
stos
mov
stc
icebp
in
aas
mov
adc
outsb
je
push
aas
sarl
mov
sub
mov
ja
pushf
outsl
dec
imul
fldl
imul
mov
mov
xchg
and
sub
out
add
shrb
mov
aam
fistl
sbb
out
jbe
dec
add
sarb
addl
mov
mov
mov
or
imul
xchg
cltd
pop
sahf
pop
test
dec
mov
pop
aam
xor
arpl
xlat
imul
mov
push
sbb
sbb
mov
lahf
enter
ljmp
ss
and
es
mov
pop
cmpsb
mov
inc
add
sbb
xor
jmp
inc
int
shrb
xchg
lret
xchg
mov
push
xchg
jb
aas
dec
andl
dec
add
jmp
xchg
mov
mov
sub
or
in
add
jae
push
add
and
lcall
sub
pop
pusha
sub
popa
pop
xchg
push
lret
xor
shll
imulb
dec
or
lcall
dec
ja
lock
cmc
ss
inc
or
pop
outsl
pop
fdivrp
cmpsb
fisubrs
add
dec
cmp
test
jns
adc
jl
add
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jmp
out
call
ljmp
cli
add
jp
and
xlat
ror
jae
daa
out
call
nop
and
push
data16
xchg
xor
push
int3
addl
inc
cmpsl
scas
xchg
insl
or
pop
addr16
pop
push
rcrl
out
mov
pop
push
data16
adc
jmp
xor
fistpll
jge
outsb
int3
test
daa
pop
cld
and
jbe
pop
push
or
push
or
les
mov
int
jnp
stc
mov
popa
adc
pop
xor
in
xchg
pop
mov
mov
push
shrl
inc
out
mov
sub
mov
scas
mov
add
pop
std
loop
inc
push
jns
xchg
mov
jno
cmp
lds
push
and
sbb
add
jmp
push
push
and
mov
jge
adc
or
lret
and
and
inc
mov
inc
push
dec
or
aam
mov
add
sub
nop
or
jb
jl
mov
sbb
adc
bound
pop
dec
cmp
inc
push
mov
mov
push
lcall
mov
lock
or
mov
inc
sub
xor
clc
dec
or
fsubrs
enter
fmull
sbb
cmp
jnp
sahf
mov
outsb
sub
dec
or
outsb
dec
jno
pop
or
enter
mov
int3
jae
cmpsb
loop
sbb
push
sbb
lret
xchg
pusha
dec
sbb
notb
and
or
add
fdiv
iret
test
pop
push
mov
insb
lldt
andb
shll
mov
sti
sub
pop
push
cmp
dec
dec
mov
loop
iret
push
pop
mov
test
jmp
mov
dec
cltd
pop
ss
jle
dec
scas
in
xor
inc
or
mov
lcall
aad
mov
pop
les
inc
fldenv
pop
sub
sti
dec
cmp
dec
or
mov
sbb
xor
mov
out
jae
xchg
cltd
int
test
or
inc
cmpsl
popf
sub
out
xchg
fsub
jg
add
pop
or
cltd
mov
mov
sub
jno
cwtl
pop
lea
iret
push
add
loope
push
movsb
test
and
xlat
add
or
lahf
push
hlt
and
jg
cltd
mov
sbb
arpl
fbld
call
or
cmp
inc
or
sbb
jge
jno
or
cmc
sub
and
cwtl
test
xor
andb
sbb
jnp
out
test
push
mov
daa
cmp
adc
cltd
lea
sub
es
pop
sbb
ljmp
xchg
mov
mov
mov
pop
loope
es
imul
dec
inc
xor
fucomip
mov
xor
jmp
lds
leave
lahf
and
inc
push
mov
pop
mov
stos
pop
jecxz
pop
mov
stc
mov
imul
xchg
or
in
loop
mov
inc
and
enter
das
push
jge
test
dec
cs
pop
jmp
xchg
pusha
inc
cmpsl
fbld
into
das
mov
das
sahf
insl
icebp
inc
mov
dec
cltd
sti
jne
movl
test
mov
push
ss
inc
gs
fwait
pusha
push
xor
push
or
dec
push
pusha
adc
addr16
or
fidivrs
pop
cmpsb
dec
inc
ja
xchg
sub
push
lcall
push
repz
pop
dec
pop
mov
and
popa
fistpl
mov
test
aaa
cmp
mov
outsb
test
xchg
or
loope
leave
xor
add
inc
movsb
addr16
xchg
popf
cmp
sbb
daa
stos
cmp
sti
mov
sub
pop
push
add
push
pusha
aad
mov
cld
stos
pop
or
sbb
dec
stos
dec
jb
mov
add
mov
mov
and
imul
mov
add
push
in
gs
cmc
add
push
sub
add
inc
cld
push
std
xchg
sub
jne
push
jg
sbb
ret
mov
test
dec
jge
je
push
gs
dec
mov
insb
xchg
or
pop
scas
mov
stos
outsb
xchg
push
icebp
or
ljmp
out
cld
lock
push
scas
push
ret
dec
xor
cli
call
lret
inc
fstpt
adc
aad
or
push
jp
loope
clc
cld
hlt
enter
dec
and
push
or
pop
jle
inc
mov
cmpsl
jbe
sbb
and
clc
pushl
xchg
fwait
xchg
ret
nop
sbb
pop
inc
jmp
mov
inc
push
cmp
jl
pop
int
cmp
pusha
sub
fildl
addr16
or
jecxz
mov
jmp
push
mov
mov
cltd
add
cmpb
loopne
lret
inc
mov
jecxz
addb
pop
xor
xchg
shrl
lret
mov
push
stc
mov
cmp
push
call
orb
std
cld
in
and
popf
in
fcomip
adc
cmp
int3
xchg
scas
mov
bound
jno
pusha
and
bound
and
mov
mov
cmp
sbb
jecxz
cbtw
adc
sbb
push
mov
sub
inc
outsb
shlb
sbb
jmp
add
xchg
sub
jle
xchg
fdivs
imull
mov
sbb
arpl
fisubl
sub
dec
xchg
scas
jmp
in
mov
mov
mov
insl
cld
mov
push
add
or
sbb
test
rolb
lea
icebp
mov
outsb
enter
xchg
dec
je
loope
xlat
mov
pop
add
add
bound
daa
push
enter
adcl
xor
bnd
inc
lret
xlat
dec
test
xlat
xchg
loop
or
dec
mov
cmp
sub
repnz
push
movsb
shrb
ljmp
out
fcomi
or
mov
sub
push
lahf
in
fdivs
in
out
mov
xchg
or
jne
cmp
and
xor
or
in
enter
int
mov
add
clc
push
jmp
test
mov
mov
pop
jmp
and
in
incb
jg
mov
cltd
xlat
mov
int
add
mov
dec
and
ds
pushf
add
add
test
dec
dec
jg
xchg
fsub
arpl
in
pop
mov
xor
jle
cli
aaa
pop
add
push
addr16
mov
sub
sub
push
push
push
gs
inc
das
jbe
push
lahf
inc
xchg
sbb
cmp
es
dec
pop
sbb
jno
inc
xchg
pop
push
or
dec
xchg
pop
clc
jo
out
inc
rclb
lds
out
jl
outsl
rorb
ss
cwtl
push
jb
fnstsw
jno
push
push
or
clc
add
ficoml
xchg
cs
leave
lea
inc
lock
xchg
mov
dec
sub
stos
jbe
xor
cmpsb
add
pop
ficompl
push
in
dec
sub
aad
xchg
enter
push
xor
leave
xor
dec
push
data16
loopne
test
les
insb
mov
push
mov
in
cmpsb
mov
cmp
mov
xchg
aaa
dec
scas
dec
jae
mov
nop
scas
push
pop
jl
popa
insb
dec
mov
pop
insb
mov
lods
sbb
or
imul
or
loop
lods
mov
xor
cmpsl
in
mov
les
testb
in
lahf
cmpsl
push
pop
sub
cmp
lods
xchg
icebp
dec
sub
gs
cld
lea
filds
push
subl
sbb
enter
sub
fdivrl
push
rcll
push
sub
rorb
pop
push
outsb
fwait
std
add
xchg
in
sbb
rorl
shl
test
lcall
dec
insl
adc
dec
in
lret
cwtl
mov
inc
mov
adc
xchg
or
scas
in
pop
pop
add
xlat
add
out
out
or
loope
shlb
cmpsb
dec
stos
fstpl
insl
pop
push
jge
mov
fdivrp
inc
enter
cwtl
andl
fucomip
std
arpl
test
jo
fcmovnu
out
ffreep
inc
fstl
mov
cli
xor
loope
cld
dec
sbb
test
push
pop
sti
mov
push
stc
push
jnp
inc
add
cld
enter
mull
push
mov
fwait
xor
imul
jge
jmp
cmpsb
cmpsl
and
jg
fldt
add
fnstsw
lahf
adc
xchg
push
mov
push
arpl
orl
pop
xchg
cwtl
cmp
int3
xchg
and
push
pop
adcb
es
ja
sub
fisttpll
jmp
dec
pop
out
xlat
and
mov
sub
shll
lcall
sbb
andl
fwait
push
nop/reserved
inc
sbb
addl
xchg
pushf
push
mov
push
shr
loopne
into
jae
dec
fistl
push
ds
jns
loop
jp
stos
or
push
roll
sbbl
xchg
pusha
xlat
rorl
imul
jo
sub
push
fmul
sub
add
mov
mov
dec
call
stc
fwait
mov
xlat
dec
adc
pmullw
rorl
aas
ret
les
mov
adc
push
pop
jge
sti
pusha
sub
int
pop
xchg
lcall
cwtl
push
mov
rorl
hlt
fsubrp
mov
lahf
add
xchg
orl
jp
lock
or
lcall
add
xchg
and
cmp
mov
and
loop
jmp
out
cld
iret
jne
cltd
cs
popa
xchg
out
or
mov
out
inc
jno
pop
cmp
icebp
sub
outsl
les
bound
cld
aaa
sub
je
sub
pusha
cmpsl
sbb
lahf
lds
mov
push
mov
push
sub
addl
loopne
roll
leave
loope
js
mov
in
dec
and
push
sbb
adc
sbb
jecxz
repnz
cmpsb
js
test
adc
int
or
shrb
push
cmpsl
push
out
inc
mov
lock
bound
out
push
and
punpcklwd
or
in
js
loop
fisttpl
add
mov
push
sti
or
aam
clc
pop
aam
scas
inc
mov
pusha
adc
jecxz
xchg
aas
fwait
sahf
inc
inc
cmp
sub
sub
adc
pusha
loop
sub
pop
ds
cwtl
pop
in
imulb
in
jle
or
mul
jne
popf
mov
xchg
sub
jne
push
int
pop
das
mov
test
jmp
movlps
cmp
aas
add
ret
addr16
enter
add
xor
xor
or
cmpsb
dec
jno
dec
aas
inc
pushl
ret
or
push
fwait
mov
jmp
ror
mov
bound
int3
xchg
cmp
mov
shrb
in
int
call
ret
sub
test
outsb
mov
push
stos
mov
iret
mov
pop
sbb
test
inc
push
adc
cmp
or
push
add
jecxz
fbstp
inc
jnp
popf
sub
test
pop
testb
adcb
je
xor
mov
daa
flds
mov
mov
pop
enter
jb
cwtl
repnz
add
push
addl
out
pusha
jmp
jns
or
shr
pop
pop
xor
movsb
pop
adc
jl
sahf
mov
sbb
fisubrs
xchg
pop
xchg
and
pop
mov
or
ds
lds
roll
add
daa
loopne
mov
and
dec
repz
addb
fidivrl
push
stos
and
lods
daa
push
das
gs
jns
addr16
xchg
mov
iret
or
mov
jno
popf
loope
je
jp
xor
add
cmp
call
in
or
clc
outsb
mov
in
xchg
add
aad
mov
jo
shrb
les
add
xor
pop
adc
sahf
cmp
cli
aaa
out
mov
lret
or
fcompl
push
mov
pop
xchg
adcb
xorb
insb
ss
pushf
rolb
rcl
testl
push
aam
pop
fistps
push
cmp
rorl
aas
push
dec
lods
nop
cld
sbb
aaa
outsb
dec
pop
ss
sbb
mov
mov
test
ss
push
cmp
xchg
mov
sub
call
fildl
and
jecxz
sbb
ljmp
jmp
out
mov
stc
stos
sbb
push
push
movsl
jle,pn
mov
push
jae
xor
jnp
flds
dec
or
mov
mov
xchg
loope
ljmp
fisttps
push
push
xor
insl
xor
mov
rcr
incl
cwtl
or
mov
sbbb
stc
sbb
out
mov
incl
xor
cmp
cmpsb
es
cmpsl
inc
repz
ds
outsb
ret
mov
mov
fadd
cmpsb
sahf
jne
repz
xor
mov
dec
inc
enter
sbb
mov
aam
je
xor
test
pushf
xchg
xchg
test
mov
fisttpl
clc
pop
dec
push
fs
test
add
fdivp
fstpt
push
lods
inc
loopne
shll
adc
sbb
sub
mov
or
inc
jle
sbb
ljmp
aam
sub
jno
cwtl
sub
dec
shlb
imul
outsb
add
stos
enter
add
jnp
or
xchg
mov
ds
cld
out
jns
push
mov
dec
fwait
dec
jp
je
outsl
xor
inc
clc
pop
test
jnp
mov
mov
pcmpgtd
cmc
adc
pop
adc
mov
in
jo
lods
repz
push
push
cmp
aas
and
xchg
xlat
mov
lret
push
or
pop
adc
push
jnp
popa
or
cmp
xor
inc
inc
add
fsts
xchg
pop
and
fdiv
add
mov
in
sub
stos
scas
cmp
add
inc
and
sbb
add
fwait
sub
lahf
jg
sub
xor
mov
jl
cwtl
mov
and
xchg
mov
xchg
mov
mov
call
ljmp
scas
syscall
sti
imul
int
xchg
jno
pop
les
icebp
push
mov
rol
pusha
dec
or
into
jb
addr16
xorb
sbb
inc
adc
ret
test
cmp
or
cmp
cmp
or
popa
xchg
mov
mov
mov
out
popa
jb
ret
orb
out
xchg
push
cmc
sub
cmp
xlat
out
pop
imul
mov
cld
mov
testb
add
mov
push
rep
je
push
adc
test
ljmp
push
pop
std
adc
lahf
mov
fxch
mov
out
add
jmp
xlat
dec
fldl2e
fdivrs
push
aad
pushf
xorl
in
gs
sbb
lret
hlt
jo
pop
mov
popa
pop
aad
leave
lret
mov
cld
xchg
fxch
push
sub
imul
adc
js
imul
iret
jge
in
adc
fsubs
or
adc
or
aas
jecxz
jp
out
jl
movsb
aas
enter
into
out
or
fprem1
addl
push
ss
cmc
cmp
xchg
sbb
sbb
push
dec
gs
lret
sbb
fwait
aad
fsub
lds
rorl
pop
arpl
inc
sti
sub
pop
and
sbb
dec
and
push
pop
and
xchg
dec
sbb
cld
pop
in
lock
fadds
mov
inc
xor
ret
jne
aad
xor
scas
movsb
pop
push
lea
jbe
and
comiss
icebp
sub
mov
daa
aad
scas
fwait
sbb
inc
into
add
and
sbbl
lds
adc
add
mov
adc
int
testl
dec
mov
sub
push
adc
jmp
adc
ret
pushf
mov
xchg
lods
push
repnz
lds
hlt
xor
mov
movsb
cmc
xchg
sbb
mov
arpl
imul
repz
xchg
jecxz
jbe
pop
cmp
mov
mov
mov
add
adc
leave
sbb
pop
xlat
loopne
stos
popa
test
or
rcr
cmp
mov
lds
mov
push
push
push
pshufw
ss
jae
pop
xor
push
pop
inc
clc
dec
je
sbb
mov
mov
int
xchg
push
dec
mov
clc
or
jge
out
mov
ljmp
loope
das
aas
lods
das
insb
adc
stos
imul
cmp
scas
xor
xor
adc
xchg
sub
or
mov
push
into
jecxz
lods
outsl
mov
mov
mov
outsb
js
ja
pminsw
cmp
jge
imul
pop
push
add
inc
repnz
inc
adcl
mov
or
xchg
sub
out
push
int
jo
mov
scas
inc
subb
orb
int3
mov
pop
mov
repnz
jle
inc
push
xor
mov
pop
jne
fdiv
fdiv
ds
rcrl
dec
xor
mov
xchg
cmp
cmp
mov
ret
dec
popf
jo
test
cmc
aam
push
mov
sbb
mov
scas
loop
in
insb
into
jns
inc
out
cltd
fstpt
xchg
rorl
push
inc
or
iret
fimuls
sub
mov
xor
je
mov
add
jo
lods
fistps
cmp
ret
push
xor
xchg
adcb
bound
adc
sub
fiaddl
mov
xor
push
inc
or
out
lds
mov
fwait
xor
pop
int3
inc
xchg
xor
leave
pop
fdivl
add
mov
inc
ret
cli
loope
cmp
cmpl
cmp
call
sub
mov
cmp
arpl
hlt
jmp
fadds
pop
jnp
add
mov
mov
xor
and
test
jne
cmp
mov
jle
sar
jmp
jp
cltd
shl
mov
and
imul
xor
dec
cmp
xor
dec
movsl
cli
sti
adc
pop
ror
lods
int
mov
jno
add
mov
out
xchg
or
inc
sbb
iret
repnz
lods
adc
int
sbb
xor
daa
mov
sti
addr16
mov
lahf
lret
dec
jp
mov
scas
sub
insl
or
out
inc
fldt
cmp
mov
out
gs
dec
sbb
dec
sbb
mov
in
xchg
stos
inc
out
leave
pop
cltd
dec
lds
shrl
mov
cli
repz
stc
call
sbb
xor
loopne
dec
inc
pusha
dec
dec
inc
loop
stos
xor
push
push
stos
inc
out
shlb
outsb
les
arpl
mov
or
and
or
push
xor
mov
adc
dec
sub
testl
imul
push
es
out
pushf
jge
adc
testl
popa
outsl
dec
in
pop
repnz
push
and
mov
inc
mov
pop
dec
pop
pop
jns
jae
push
call
insl
cmp
into
push
fwait
out
std
mov
push
xchg
andb
cmpsl
insb
sbb
outsb
pop
cli
xchg
sti
lcall
mov
lock
push
decl
in
mov
lea
push
ret
adc
or
lods
sarb
std
xor
push
push
sub
stc
sarl
sbb
cld
fistps
jbe,pt
andb
popa
testb
cmp
lcall
pop
std
je
push
and
out
or
jmp
mov
mov
cmp
mov
push
lret
nop
dec
and
push
jae
cli
xchg
rclb
orps
and
fimuls
cmpsb
mov
lcall
ret
sbb
ds
xchg
xchg
sub
loope
push
std
sub
fwait
ss
int
iret
xor
sbb
or
lret
stos
aam
sbb
js
sahf
sahf
jecxz
scas
test
lock
fists
fmuls
adcl
inc
or
je
pop
outsb
outsb
jmp
inc
ja
mov
adc
xor
pop
aaa
cwtl
add
inc
daa
xor
fs
cmpl
sbb
bound
in
xchg
cmp
jge
mov
mov
addl
push
xchg
pop
xorb
jne
ret
xchg
and
jecxz
jmp
pushf
fstp
mov
jmp
fcmovne
js
pop
cmpsb
scas
rcrl
cs
mov
sbb
cli
or
add
cmp
sbb
fcmovnu
xlat
shl
cld
pop
adc
sub
adc
shll
rorl
sarl
xchg
cmp
xchg
popa
pop
mov
jae
hlt
ret
sbb
mov
inc
sub
xchg
shl
ret
and
xor
in
ret
push
clc
pop
insb
movsl
aas
in
ja
out
pop
pop
stos
sbb
xor
ja
sbb
das
sbb
push
pop
cwtl
into
scas
enter
cmp
ss
rcll
pop
in
bound
push
mov
ror
das
cmp
xchg
sub
cmpsb
insb
rcrb
jl
dec
dec
mov
jnp
inc
lcall
into
arpl
or
pop
movsl
scas
xor
bound
ret
and
fdivs
mov
dec
clc
push
push
mov
insb
add
sub
sti
les
ss
filds
adc
insb
lods
clc
push
and
lods
aas
decl
call
cmp
and
push
fwait
js
jle
cmc
nop
nop
das
pop
movsl
jl
xchg
push
cs
xchg
addb
insl
fistl
js
cmpsb
leave
xchg
pop
pop
testb
sub
testl
push
loop
xor
je
pop
gs
shlb
cli
pop
fcoms
adc
pop
and
add
xor
push
jne
out
adc
nop
add
int
inc
adc
fisttpl
jo
add
lahf
std
mov
push
inc
and
mov
enter
subl
dec
jp
roll
sub
or
aaa
mov
cvtps2pi
ljmp
out
mov
popa
sub
ret
dec
loopne
dec
fxch
ja
mov
lods
mov
outsl
cmp
dec
push
fnstcw
loope
hlt
xor
out
stos
dec
lods
xor
mov
dec
mov
ret
sbb
outsl
popf
xor
das
fnstcw
lods
sub
sub
pop
mov
scas
push
imul
jmp
jae
daa
cmp
and
add
lods
test
inc
xchg
xor
adc
jnp
sub
popf
cwtl
xor
jb
test
xchg
mov
xchg
jecxz
sbb
sub
adc
cmc
mov
mov
test
popa
int3
xlat
outsb
cmp
rcrb
xchg
movl
fistpl
xor
mov
roll
cmp
sub
cltd
mov
cmp
push
aas
jle
and
lahf
scas
xchg
jmp
leave
fidivl
adc
arpl
imul
push
lds
aas
push
add
ret
mov
adc
mov
shlb
int
outsl
cmp
adc
add
in
imul
mov
fsubp
pop
sub
loop
out
dec
adcb
daa
movsb
sbb
inc
add
mov
repz
bound
pop
jmp
mov
pop
sub
in
cli
repnz
shr
std
or
xchg
cmp
fiadds
testb
lea
xor
pop
dec
stos
pop
sbb
sub
push
jle
cwtl
xchg
xchg
pop
push
stos
push
aas
inc
fsub
testl
outsl
in
popf
call
movsl
xor
insb
xchg
je
pop
imul
push
mov
fs
sub
inc
or
cmpsb
leave
sub
fwait
dec
adc
in
aad
outsb
rclb
hlt
push
mov
fistl
inc
pushf
pop
mov
loope
jb
ja
push
lahf
test
dec
pop
xor
and
mov
inc
adc
pusha
cli
pop
push
je
daa
scas
jns
add
shr
adc
adc
into
int3
lods
jmp
sbb
mov
outsb
dec
int3
jbe
lods
outsl
fucom
mov
sar
lea
stos
in
int3
imul
sbbb
inc
test
popf
xor
lods
call
pmaxub
inc
test
mov
mov
xchg
add
pop
mov
mov
daa
lahf
xor
sub
push
or
movsb
mov
cmp
cld
in
or
bound
jecxz
pop
in
push
mov
je
iret
mov
test
mov
sbb
es
inc
sub
push
test
dec
pop
mov
sbb
loopne
stc
scas
ds
cli
mov
arpl
aam
mov
movsb
sbb
scas
les
fucomip
add
and
popa
jl
and
rcr
dec
loop
push
sub
popa
loope
clc
lcall
subl
xchg
mov
push
pop
dec
loopne
xchg
in
cmc
movsl
mov
mov
mov
and
mov
sbb
mov
cwtl
mov
std
sub
jl
hlt
bound
sbb
pop
xor
lods
jge
jge
push
imul
pop
lds
stos
jge
in
loop
and
leave
es
in
inc
sub
test
bound
insl
divb
dec
sbb
push
xor
jle
aaa
jno
in
lret
xchg
js
inc
push
pop
mov
lahf
fsubp
dec
lahf
leave
cs
push
test
inc
jge
cmp
dec
jbe
sub
inc
xchg
or
pop
pop
mov
orb
jmp
push
pushf
loope
pop
movb
push
in
push
cmp
pop
loopne
mov
arpl
xchg
outsb
and
sub
iret
scas
fwait
inc
cmp
loope
pop
add
out
add
movsb
pop
es
repz
incb
icebp
cmp
inc
mov
out
std
sbb
xchg
loopne
dec
out
cmpsb
push
movsl
pop
dec
dec
dec
xchg
xchg
and
ljmp
call
pop
add
or
stos
pop
gs
mov
iret
insl
push
cmp
in
mov
fcompl
and
cs
xor
push
pop
fildll
jbe
cld
cmp
push
loop
ret
or
out
jbe
sbb
pushf
out
mov
rcr
cmp
aas
add
loope
out
xchg
mov
cmp
jno
imul
jnp
nop
ret
and
push
cmp
shl
out
dec
mov
or
andl
out
and
or
dec
sub
fidivs
xlat
jbe
sub
rol
stos
fwait
es
cmp
fwait
mov
jnp
loopne
adc
insl
jbe
ja
xchg
pusha
lret
sarb
mov
dec
shl
add
pop
mov
pop
loope
jns
pusha
and
mov
stos
popa
sbb
xor
movsl
mov
or
pop
dec
push
enter
sbb
std
aad
sub
bound
pop
xlat
pop
jle
mov
and
movsb
add
cmp
push
adc
xor
add
xor
jp
xor
cmp
ret
jg
mov
xchg
cs
iret
test
fs
jae
stc
out
cld
push
cwtl
add
js
xchg
jge
clc
dec
inc
pusha
fsubs
fnstsw
out
pop
mov
movsl
sub
dec
sub
fisttpll
sub
pop
or
sbb
or
cmpl
lret
int
mov
add
jmp
adcb
inc
in
in
stos
imul
rorl
notb
call
popf
repnz
cltd
inc
inc
xor
ret
pushf
repz
xchg
out
test
or
fwait
mov
andb
inc
pushf
daa
dec
std
lock
es
rolb
fsubs
sbb
sub
fisubrs
mov
push
stos
bound
test
push
addr16
leave
imul
push
and
add
jno
les
and
inc
jae
cli
clc
jns
push
je
mov
js
cwtl
jo
imul
push
mov
adc
inc
mov
int
lcall
push
leave
push
push
pop
stos
in
out
shll
mov
cmp
in
in
nop
in
xor
push
cmp
mov
inc
push
mov
inc
outsl
mov
imul
loop
lret
adc
mov
aam
inc
ret
into
stos
add
shll
sti
repz
jnp
mov
outsl
sub
cmp
xlat
inc
arpl
fsubl
adc
movsb
or
enter
shrd
xchg
pop
mov
ja
jg
xor
pop
cmp
outsl
and
sbb
jbe
scas
xchg
mov
cmp
and
je
stos
push
adc
pop
dec
dec
jp
mov
imul
outsb
xchg
pop
mov
xor
aam
js
cmp
vpshuflw
mov
mov
pop
out
dec
mov
mov
cmp
sbb
out
in
xor
and
inc
test
jle
fisttps
mov
pop
xor
subl
jl
ja
pushf
fcmovne
je
sub
mov
or
jmp
jno
lret
jne
testl
popa
xchg
std
roll
insl
mov
mov
mov
ljmp
in
leave
sbb
mov
es
outsb
aaa
sub
jl
rorb
cmc
xchg
js
pop
pop
adc
push
xchg
dec
push
xchg
loopne
mov
stc
in
add
in
adc
pop
pop
pop
sub
into
mov
and
stos
or
call
jmp
push
pushf
das
enter
dec
mov
stos
in
popf
jbe
adc
fidivs
adc
sub
xchg
addb
mov
mov
scas
push
sub
xchg
aad
mov
pop
gs
ljmp
mov
push
int3
push
jl
mov
push
push
xchg
int3
insl
dec
scas
lods
xor
cld
mov
cmp
cmp
and
sbbl
ds
dec
adc
add
mov
fs
shlb
dec
sub
test
imul
aad
das
cwtl
mov
cmp
xchg
sub
mov
ret
xchg
nop
jmp
shl
xchg
mov
jl
xor
lret
xor
pop
adc
daa
sti
ret
lock
insl
mov
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
jmp
sub
addr16
jnp
jne
jne
testl
jns
push
pop
jp
loopne
mov
and
notb
mov
arpl
das
adc
scas
arpl
aas
dec
in
rcrb
xchg
xor
lret
push
pop
lea
sub
sbb
mov
mov
stos
add
pushf
pop
fldcw
or
jne
je
shrl
outsb
lds
out
test
jmp
jo
inc
ljmp
dec
repnz
rolb
loopne
lods
cld
out
jae
das
jmp
sarb
rclb
dec
repnz
les
add
in
sbb
test
mov
mov
shl
add
neg
mov
stos
sub
inc
push
mov
jno
fisttpll
in
imul
lods
dec
movsl
jb
and
ffree
or
aad
arpl
sbb
gs
mov
sbb
xchg
xchg
push
inc
sub
mov
inc
add
dec
sub
or
jns
and
and
aaa
cmp
dec
idivl
jne
cld
test
jns
or
lods
stos
pop
and
rclb
push
and
movsb
mov
cmpsb
jmp
pop
jmp
mov
xor
daa
sub
pushf
fsubs
dec
xor
test
lock
jns
mov
jbe
push
movsb
add
mov
cld
dec
inc
jg
les
adc
imul
jb
pusha
xlat
scas
or
xchg
adc
fadds
cmc
hlt
xchg
into
sub
push
mov
fistpll
sahf
sbb
xchg
jb
test
sub
xchg
push
aad
xor
repz
jle
cltd
test
in
mov
shlb
and
fucomp
fsubrl
xchg
cmpsb
push
add
mov
sub
and
inc
clc
pop
jmp
xor
loop
lahf
xlat
int3
stos
jae
inc
cmpsl
cmp
inc
rcrl
add
test
push
idivb
dec
leave
xor
and
sahf
std
xor
push
jns
adc
push
and
ds
xlat
push
subb
lahf
or
push
test
pushf
jmp
divb
in
rcll
test
pusha
cmp
mov
popa
xor
into
hlt
pop
mov
mov
loopne
mov
das
fucomi
jmp
sub
leave
sti
inc
mov
xor
bnd
push
and
jbe
mov
arpl
inc
jl
pop
push
mov
sti
xor
fiaddl
push
or
dec
addl
cld
pop
movsb
cmc
iret
inc
loope
jo
pop
mull
dec
lahf
pop
pop
out
out
cmp
fsubp
pop
mov
xchg
imul
scas
pop
push
clc
sahf
pop
mov
mov
or
add
stos
cmpsb
xor
pop
pop
lods
aaa
hlt
sti
fadds
sahf
jg
mov
or
add
jb
scas
sbb
and
imul
sti
mov
fs
mov
add
mov
or
je
rcll
out
aaa
mov
sbb
push
inc
subl
insb
jno
lahf
mov
data16
sbb
dec
outsl
lea
cmc
mov
es
aaa
sbb
sti
dec
inc
mov
jecxz
imul
jno
inc
adc
rcl
xor
jne
popa
je
mov
enter
in
std
xchg
dec
push
pop
dec
cmc
test
lds
and
in
addr16
fidivl
adcl
inc
mov
pop
sbb
out
dec
fisttpl
cmc
and
xor
xor
adc
adc
add
cltd
sub
push
addb
pushf
inc
push
loope
mov
cmpsl
mov
test
cld
test
mov
rcl
mov
cmp
mov
push
orl
push
fcompl
xchg
mov
lcall
push
xor
add
xor
lds
jg
scas
int
pop
leave
xchg
pop
out
adc
and
cmp
mov
js
jnp
call
push
dec
mov
fidivl
or
pushf
push
and
std
arpl
xchg
fmuls
das
and
push
mov
mov
mov
push
and
or
jbe
push
pop
mov
xchg
sti
inc
mov
inc
data16
push
imul
and
div
addr16
jg
or
fistpl
add
cwtl
pop
mov
sub
jp
iret
jmp
sub
add
add
incl
and
mov
cs
xchg
hlt
mov
pop
arpl
sbb
sti
mov
and
push
adc
rolb
les
cltd
add
incb
jnp
and
ss
daa
nop
iret
push
inc
fucomip
test
and
test
sbb
imul
push
lret
cli
ss
enter
into
xchg
lret
mov
mov
xor
jne
sub
addl
push
sub
test
jno
shrl
cmp
inc
add
insl
in
pushf
mov
stos
sahf
loope
or
xor
push
addr16
xor
adc
xor
in
and
jne
sub
int
or
jnp
sti
dec
mov
cmp
push
insb
pop
dec
xor
jl
fisttps
xchg
mov
int3
xchg
cltd
push
fmulp
int3
inc
cld
pop
sub
aaa
testb
lock
in
xor
cmp
lcall
jmp
or
jae
push
jl
inc
shr
mov
ret
aam
jo
adc
repz
lahf
mov
insl
fmull
push
mov
xor
addr16
xor
jne
sub
mov
movsb
jecxz
bound
je
mov
ds
xchg
out
outsb
ret
std
decl
mov
pop
sarb
rol
in
subl
fistl
cmc
cs
mov
inc
or
mov
fsubl
stos
sub
sub
push
enter
outsl
ja
mov
fstpl
ds
test
repnz
adc
push
dec
cmp
push
xor
ljmp
shrb
inc
dec
mov
mov
sahf
jae
imul
test
jb
loopne
mov
stc
mov
xchg
addr16
insl
mov
xchg
adc
jo
and
inc
lods
es
pusha
cmp
out
pop
mov
adc
xor
in
popf
les
shl
aas
xor
push
nop
jmp
mov
lock
add
xor
and
mov
pop
push
cs
xor
int
pop
inc
xor
es
int3
in
stc
adc
xor
pop
and
ds
call
test
and
lret
out
and
rorb
ret
loop
nop
pop
test
cmpsb
jae
dec
xor
or
jp
push
lea
dec
fisubs
adc
test
int3
pushf
adcl
loope
inc
iret
and
into
or
outsl
lret
lods
aaa
push
sbb
pop
cs
cmpsl
imull
popa
pop
mov
mov
leave
push
xor
lret
pop
mov
stos
push
fxch
add
scas
bound
pop
and
movsl
sbb
inc
insb
xor
test
pop
das
sbb
rorl
cmc
jnp
sbb
stos
insb
jge
fstpt
dec
popf
xor
imul
fdivr
xchg
cmp
sub
sbb
mov
aaa
movsl
mov
mov
js
sbb
incl
cmp
mov
ret
adc
mov
fdivrs
rorb
inc
mov
fcomps
mov
test
aad
pop
inc
out
xor
mov
push
out
add
es
sbb
lods
inc
jecxz
test
sub
bound
imul
sub
mov
mov
push
cmp
pop
push
ljmp
fwait
insb
pushf
out
add
adc
lock
cli
xlat
jo
and
xorb
pushf
ja
jle
js
fisubs
sub
sub
aad
dec
cmc
dec
cmc
fwait
lods
mov
jo
fstps
int3
push
pop
cli
mov
out
lods
out
loopew
pop
mov
decb
push
lds
dec
mov
in
add
jmp
xchg
inc
mov
es
mov
icebp
gs
xchg
and
sbb
gs
addb
and
mov
cmp
cmp
push
lods
inc
xchg
mov
sbb
popl
outsb
xorl
in
int
cltd
in
icebp
jmp
call
inc
ljmp
xchg
xchg
dec
cli
lcall
outsb
call
enter
das
push
scas
imul
addb
mov
inc
popf
mov
add
jb
mov
mov
xchg
outsb
mov
xchg
push
in
outsl
cmp
pop
in
sti
or
sbb
outsb
or
lret
pop
xor
mov
pop
addr16
pop
sbb
inc
mov
sub
bound
pop
or
add
aas
fistl
outsl
mov
add
jmp
sahf
out
enterw
leave
rclb
mov
jae
mov
jae
push
xchg
cli
cmpsl
sar
lds
stos
testb
loope
dec
and
subl
invlpg
and
in
push
inc
movsb
add
ljmp
pop
lods
enter
mov
popa
cmp
adc
cwtl
in
mov
xor
ss
mov
jg
lret
push
cld
movsl
fidivs
scas
aaa
lret
ljmp
push
xor
mov
mov
sub
lcall
jl
xchg
dec
test
fstl
mov
inc
imul
rorl
and
mov
outsl
dec
jge
pop
cs
fcoml
dec
inc
icebp
or
and
pop
pop
bound
xchg
cmp
pop
popa
int
stos
pop
daa
add
fs
dec
lret
bound
notb
out
inc
in
test
mov
mov
ret
icebp
ror
cld
adc
xchg
or
or
test
sub
cmpl
push
mov
fistps
sbb
jne
out
sub
pop
jg
addb
shl
adc
repnz
push
jne
jbe
push
imul
sbb
arpl
pusha
daa
int
or
mov
push
and
ss
mov
or
cmpsl
daa
push
jnp
xorb
cltd
inc
mov
aam
adc
iret
daa
test
aad
push
js
jmpw
lock
mov
cmc
xor
in
mov
dec
insl
or
inc
loope
adc
enter
cmp
icebp
push
sub
or
mov
and
jns
fwait
cmp
add
push
jo
jnp
out
xor
es
push
cwtl
out
or
mov
popa
cmpsb
ficomps
or
xor
and
xchg
shl
push
inc
out
popf
jne
and
pop
pop
test
jge
movsl
or
pop
dec
and
lds
ret
add
in
add
andl
adc
and
mov
mov
fdiv
dec
frstor
and
pusha
pop
push
in
cltd
or
jmp
dec
scas
outsl
es
and
rcll
adc
or
jmp
aad
pop
pop
cwtl
mov
sbb
mov
rorb
shll
or
dec
dec
push
sbb
jb
sub
xor
pushf
dec
xor
mov
and
ror
dec
ljmp
test
jmp
xchg
cwtl
jp
ja
icebp
rorl
ds
call
ja
mov
stos
mov
enter
mov
nop
rcrl
int
add
movsb
insb
hlt
mov
sub
aam
daa
arpl
mov
mov
dec
lahf
and
js
or
out
repz
ja
fildll
push
filds
jbe
fsts
ljmp
mov
imul
dec
jns
bound
jo
add
ds
pop
dec
xor
leave
imull
cmpl
cmpps
adc
fisubrl
jl
adc
xor
icebp
stos
mov
fs
sarl
add
aaa
adc
xchg
xor
mov
lcall
mov
daa
jne
pop
nop
or
bound
test
inc
mov
xchg
cld
jecxz
pop
pop
mov
cmp
jnp
dec
lret
cmp
loopne
adc
cli
pushf
andl
mov
fst
add
scas
test
sbb
inc
adc
int
test
stos
pushf
mov
aad
out
dec
lds
out
jge
test
mov
pop
inc
sbb
lds
pop
mov
enter
fwait
enter
lock
push
jae
sub
hlt
cmp
daa
mov
adcb
xchg
fimuls
outsl
sbb
push
repz
lret
push
mov
fldl
mov
xchg
leave
mov
cld
mov
dec
jb
icebp
dec
adc
push
in
adc
xchg
in
dec
dec
pop
decb
sub
sbb
fsts
cmp
outsl
cltd
and
daa
mov
push
push
in
cltd
mov
dec
jb
imul
lahf
sub
js
fstpt
sbb
call
fcoms
adc
pop
jmp
dec
mov
xchg
ja
pop
ja
fistps
cli
in
nop
sbb
mov
push
daa
sub
pop
cld
and
dec
jg
xor
xchg
rclb
mov
dec
dec
jno
jecxz
xchg
shlb
add
ds
loope
or
sub
pop
mov
cmpsl
mov
pop
lret
mov
pop
mov
lea
jle
pop
fs
loope
sub
sub
xchg
pop
insl
inc
sti
push
cmpsb
jmp
adc
cmpsl
pop
pop
ljmp
out
dec
add
jecxz
jmp
pop
jmp
sahf
xchg
sub
mov
cmp
and
push
xchg
sub
adc
push
repnz
push
daa
cmpl
mov
aaa
and
adc
xchg
or
inc
imul
das
jp
xor
push
pushf
out
jp
sarb
fadds
leave
cmp
imul
inc
and
mov
sbbl
cmp
ror
insl
data16
leave
add
aad
mov
out
outsb
dec
sub
imulb
sub
mov
xchg
fdivp
fs
in
lock
mov
xchg
mov
jb
sbb
dec
movzbl
mov
stos
xchg
lds
popa
sbb
pop
mov
inc
bound
out
dec
cltd
mov
xchg
jp
repz
xchg
popf
loopne
mov
adc
jmp
mov
cmpsl
repnz
lock
xchg
mov
fcompp
xor
sbb
idivb
jge
jns
ret
sub
add
sti
push
pop
add
pop
dec
fwait
in
cmp
loopne
dec
add
cmp
push
cld
xor
std
adcl
push
call
inc
mov
dec
scas
loop
mov
xchg
loop
xchg
cmp
scas
jo
in
in
lock
cmpsl
int3
pop
cwtl
test
pop
and
dec
lods
ror
xlat
and
lods
dec
arpl
cmp
add
aad
insl
sbb
inc
mov
imul
sbb
arpl
push
pop
mov
mov
outsb
loop
scas
ret
xor
mov
pop
pop
gs
outsl
push
cmp
testl
lea
and
aam
out
sub
xchg
xor
push
sti
mov
fcmovbe
sbb
popa
nop
and
out
hlt
ss
jle
mov
xlat
sbb
mov
movsb
pop
rcr
cmpsb
pop
mov
mov
rcrl
jle
in
cs
xchg
lret
popf
leave
pop
pop
imul
mov
xlat
jb
cltd
out
xchg
jae
xorb
aad
add
and
test
mov
std
movsl
push
sti
out
dec
jg
cmp
mov
adc
xchg
inc
repnz
insl
sti
jae
xor
ds
imul
sub
inc
pop
lock
enter
icebp
arpl
sub
push
in
fistpll
sbb
push
movb
sti
lods
jo
push
inc
clc
ret
xlat
mov
mov
mov
popf
lcall
jl
jge
popa
dec
dec
test
xchg
imul
pop
mov
adc
push
xchg
push
test
and
fld
push
add
iret
push
inc
cmp
xchg
xchg
in
cmp
daa
pop
and
retw
xchg
add
out
push
in
imul
xor
pop
adc
push
in
jnp
rclb
push
andl
jo
jns
arpl
push
pop
mov
aam
adc
aam
addr16
jmp
inc
fidivrl
leave
es
shl
cmp
in
xor
sbbb
nop
pop
cli
lahf
scas
jae
sbb
sti
cmp
jecxz
jp
mov
cmp
lcall
sarb
or
mov
ja
mov
mov
and
loop
lods
aas
add
or
cwtl
sarl
sbb
cltd
sahf
fstpt
js
das
lahf
movsl
mov
clc
ljmp
mov
cs
xchg
dec
or
mov
xchg
dec
xchg
mov
in
cmpsb
jae
movsb
or
mov
cwtl
and
dec
cmc
dec
jle
inc
inc
dec
icebp
jno
rcll
push
stc
pop
or
add
mov
loop
gs
cld
scas
mov
mov
fimuls
sbb
jl
push
movsl
jbe
dec
or
push
movsl
fs
push
inc
push
cmp
rep
rolb
sbb
pushf
fldl
xor
arpl
pushf
movsb
and
repz
scas
add
scas
repz
sub
xor
or
push
add
sub
xchg
jo
add
dec
xchg
xor
shll
sub
mov
jle
pop
cmp
pop
subl
fsubrl
mov
inc
mov
notl
push
fiadds
shlb
and
add
andb
stos
push
xchg
popa
pop
repnz
adc
pop
jle
or
cmpsl
movsl
stos
jle
stos
dec
or
jnp
mov
dec
mov
sahf
pop
dec
les
ja
and
clc
lods
push
stc
jge
push
in
dec
nop
xchg
pop
xchg
inc
xor
sahf
pop
or
dec
mov
push
or
stos
stos
imul
add
jno,pt
mov
push
sbbl
sarl
push
inc
sbb
pusha
es
out
jmp
mulb
in
sbbl
ja
ss
mov
sbb
push
loop
push
ja
movsl
faddl
add
arpl
cltd
pop
jnp
adc
lahf
lods
push
dec
add
das
ss
push
les
jno
aaa
ret
enter
push
fwait
addr16
sbbb
adc
fstpt
jne
testl
add
inc
jg
push
and
add
lahf
adc
sahf
xchg
test
adc
imul
jnp
pusha
and
and
scas
js
push
adc
hlt
ja
xor
add
testl
cld
and
lds
shlb
or
or
mov
stos
jb
rorb
testl
dec
out
dec
mov
out
xchg
mov
push
pop
sub
lods
rol
pop
std
mov
xchg
int3
int
sbb
mov
test
pop
push
xlat
fdivs
ret
fidivl
scas
sarb
cmp
add
add
or
test
push
out
xorl
mov
inc
repz
inc
scas
outsb
inc
mov
and
add
sbb
mov
sub
rcll
or
rol
repz
dec
cmp
das
jp
pop
pop
xchg
sub
inc
int3
pop
bound
sarb
jle
adc
jne
test
ja
cmp
push
inc
lds
dec
pushf
mov
rcr
jmp
sub
xlat
scas
cmp
sub
mov
jnp
jp
fadd
rcl
and
or
push
dec
add
add
imul
sub
out
je
les
test
xchg
ret
fbstp
or
jge
inc
pop
mov
pop
out
adc
inc
mov
jb
fdivrp
xchg
in
cs
cmc
dec
push
scas
cwtl
sub
inc
inc
push
cmc
ret
imul
mov
scas
sub
loope
cltd
dec
jp
sbb
xchg
pop
dec
xor
cmp
je
add
es
cmpsb
and
push
jmp
imul
ficomps
cmp
mov
fiaddl
icebp
dec
xchg
cmpsl
mov
fld
scas
sub
jne
adc
out
mov
cli
mov
mov
enter
aam
scas
adc
dec
or
mov
imul
popa
cmp
lock
xabort
jo
lcall
aam
inc
sbb
push
scas
xchg
adc
mov
xchg
xchg
insb
mov
aam
movl
mov
mov
aaa
jae,pn
idiv
les
mov
jbe
sahf
stos
ja
dec
sbb
jnp
int
mov
jge
jae
notb
mov
jns
xchg
call
jae
in
int3
ja
mov
loope
stc
subb
sbb
fdivrp
addb
outsb
cmc
cmp
inc
sbb
outsb
imul
mov
pop
jmp
push
jmp
inc
adc
shrb
pop
cmp
cmp
scas
xor
es
add
mov
in
mov
fmull
jl
cmp
adc
les
fistpll
xchg
or
mov
xor
loope
adc
add
loop
mov
lret
pop
push
mov
or
push
cli
addl
dec
es
xchg
std
inc
jecxz
scas
repz
mov
fisubl
inc
imul
rolb
mov
pusha
push
cmp
iret
xchg
push
hlt
mov
add
xor
pop
into
push
push
xor
scas
std
jl,pn
mov
cmc
sub
repz
push
push
cmp
lods
ljmp
xchg
jg
push
cmp
cmp
sub
in
add
ss
mov
mov
mov
shll
jnp
das
sti
icebp
addr16
lds
imul
pushf
and
mov
out
movsl
pusha
outsb
test
mov
mov
mov
mov
add
add
xchg
xchg
cmp
fs
and
cmpsb
inc
or
push
std
push
out
imul
in
stc
and
lcall
div
aas
cmp
mov
les
popa
adc
and
arpl
pop
push
xchg
sbb
xor
notl
adc
into
adc
andl
rcrb
mov
pop
or
cmp
inc
test
in
cmpsl
cmp
test
mov
aas
adc
andb
mov
pushf
xchg
xor
shr
push
subl
ldmxcsr
lds
lahf
test
bound
sbb
mov
insl
sahf
iret
dec
sub
push
push
mov
nop
gs
add
test
lods
mov
test
or
int
cmpl
or
pop
outsb
cmp
mov
add
bound
jo
adc
mov
pop
nop
ret
repnz
mov
or
cmp
sub
sub
add
add
out
cli
push
dec
jno
xchg
dec
aaa
lea
jle
je
mov
add
pop
movsb
cld
not
pop
adc
push
inc
popf
xchg
dec
std
aad
mov
rolb
movsl
jg
out
pop
adc
pop
pusha
cld
cmpsb
sub
nop
popf
orl
and
xchg
jmp
and
jmp
add
ja
xor
and
dec
scas
sub
out
mov
sarb
lcall
out
pop
stc
into
xor
jb
adc
cld
aas
cmpl
rcl
sarl
insb
das
or
and
int3
push
orb
int
push
pop
push
fcoms
fnstcw
out
push
mov
and
or
sbb
sbb
xlat
jle
scas
mov
movsb
sbb
adc
repnz
mov
nop
rorb
xchg
in
add
xchg
in
pop
movl
je
test
adc
add
outsl
lods
imul
or
out
xchg
aas
push
divl
testb
sub
mov
out
xor
mov
and
inc
pop
insb
pushf
jno
jno
mov
fucomp
int
sub
outsb
stos
adc
jns
mov
out
mov
ret
adc
jle
enter
aam
cmpb
into
lahf
add
adc
dec
and
push
repnz
cmp
aaa
and
mov
test
clc
mov
sbb
add
jno
clc
aas
or
cli
or
and
fimull
mov
fadds
data16
daa
dec
stos
dec
xchg
pop
pop
das
roll
gs
adc
adc
ja
dec
jmp
mov
ds
push
jno
in
in
test
mov
fst
mov
or
movl
les
imul
push
aad
mov
cs
into
in
js
mov
subl
push
inc
sbb
xchg
jo
adc
push
int
mov
scas
push
enter
jg
push
mov
sub
pusha
fstps
sub
sub
add
and
iret
les
push
aas
dec
movsb
aam
and
cmp
add
inc
iret
cmpl
pop
xchg
clc
inc
pop
cs
xor
nop
test
ret
call
dec
cvtps2pi
lret
jmp
mov
jmp
movsb
fmull
push
aaa
add
fs
push
imul
sub
aam
cmp
xchg
mov
scas
js
or
mov
enter
mov
mov
aam
push
pop
pop
loopne
add
or
imul
jecxz
lret
dec
inc
mov
cmp
xchg
test
test
or
inc
into
and
mov
cmpsb
xchg
sub
adc
into
das
daa
push
stos
sub
jnp
or
into
movq
cmp
or
fistps
jp
cmp
mov
fldcw
mov
jbe
xor
shlb
mov
das
std
testl
aaa
pop
clc
adc
jle
mov
lock
mov
aaa
pop
rol
cld
popf
aas
add
inc
popa
pop
add
movsb
add
dec
outsl
aaa
xchg
xchg
sbb
addl
inc
dec
xchg
mov
and
call
adc
das
icebp
push
lock
stos
adc
and
fisttpll
pop
mov
and
dec
scas
xchg
pop
jbe
add
mov
incb
int3
cltd
jne
inc
xchg
test
and
push
push
mov
push
mov
shl
sbb
shl
scas
pop
imul
lcall
push
fs
inc
test
cwtl
xor
scas
pop
mov
fisttpll
and
inc
add
or
scas
mov
iret
adc
lret
push
call
fidivrl
push
inc
jge
lret
jns
out
adc
in
js
imul
out
adc
movsl
push
mov
mov
add
sub
mov
sahf
cld
leave
sbb
fstp
push
fiadds
adc
pop
imul
mov
cmc
inc
lods
bound
popa
aad
notl
push
pop
cmp
push
repz
iret
jl
loope
dec
bound
jbe
push
inc
fs
adc
or
leave
mov
mov
mov
fisubrl
xchg
div
cwtl
mov
stos
pop
cltd
cmp
inc
stos
enter
xchg
outsl
add
pop
sub
or
cwtl
lock
xchg
sahf
mov
out
mov
stos
ja
xchg
push
lock
js
mov
cvtdq2ps
scas
mov
mov
mov
dec
and
add
pop
dec
push
lods
aad
xor
lret
sbbl
push
imul
mov
fnstcw
dec
stos
jl
sahf
mov
popl
xchg
push
call
xor
test
bound
ret
test
scas
cmpsb
ret
inc
enter
addr16
in
ret
cmp
lock
xor
mov
jno
cmp
adc
fs
pop
faddp
test
leave
stos
nop
stos
pop
lcall
cmpsl
rcr
ds
xlat
mov
jns
push
mov
adc
cmp
jnp
push
xchg
jge
cmpsl
xchg
inc
in
or
stc
push
sbb
push
or
loop
in
in
rcrl
and
mov
lret
cmpsb
jg
rcr
adc
imul
lahf
sub
mov
aas
inc
dec
hlt
inc
pop
lock
cmp
jae,pt
lock
ljmp
ret
imul
mov
fisubl
cmp
sbb
dec
add
pop
pop
or
push
bound
adc
shrl
jno
aam
cwtl
pop
lahf
xor
scas
scas
fnstenv
lea
inc
jecxz
jo
pop
adc
ret
cmpsb
arpl
or
xor
jmp
outsb
mov
inc
and
mov
ja
in
aas
aad
mov
lcall
push
and
mov
pop
outsb
push
ret
arpl
mov
push
gs
and
test
ret
dec
movsb
mov
xchg
cmpsb
movsb
cmp
std
cmc
sgdtl
cmp
iret
je
or
adcl
cmp
mov
pop
cmpsl
addr16
lret
je
mov
lcall
dec
shr
jmp
int
push
lods
mov
rcl
mov
xchg
js
test
test
inc
rorb
aaa
sbb
into
inc
int
imul
in
mov
clc
mov
mov
leave
add
imul
je
mov
mov
pop
adc
inc
xchg
ds
xchg
rcl
mov
xchg
mov
pop
fsubs
rep
sbb
inc
fs
aam
cmp
mov
mov
mov
cmc
add
outsl
ret
lahf
jle
mov
scas
sub
add
mov
rorb
fsubr
sub
xor
leave
fs
inc
push
shrb
lret
jne
cld
mov
fstps
test
pop
stos
jle
aas
sbb
xchg
pop
mov
jp
mov
dec
cs
call
adc
out
enter
sbb
jle
add
dec
pop
inc
aad
test
popfw
xlat
mov
add
mov
mov
int
sti
icebp
leave
lock
jbe
pushf
mov
je
mov
out
cmp
inc
add
test
aad
adc
cmp
add
mov
jge
popa
movl
push
mov
lock
popf
lds
sbb
int3
cltd
mov
in
and
aas
push
imull
lret
ds
push
lret
sub
adc
dec
pop
add
call
push
stos
imul
add
pop
mov
and
fwait
push
sub
add
sbb
cwtl
dec
testb
cltd
mov
mov
adc
and
iret
and
push
adc
jbe
dec
dec
lds
sti
repnz
ss
pushl
cmpsl
push
loope
jg
adc
repz
cmpsb
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
imul
scas
repnz
push
int3
or
addr16
push
push
sbb
lods
dec
xor
add
mov
in
add
inc
and
mov
xchg
lcall
dec
add
mov
fistps
sbb
aad
push
jecxz
js
and
inc
xchg
mov
je
cmp
outsb
pop
jp
ds
call
daa
sarb
movsl
jle
das
adcb
lods
fstps
and
adc
movsl
mov
fwait
scas
movsl
pop
or
dec
mov
adc
dec
aaa
jne
mov
sub
dec
pushf
xor
jmp
fnsave
push
mov
les
aas
jle
shll
jns
idivb
lret
or
aaa
arpl
dec
loope
jl
ljmp
push
mov
lahf
push
add
jl
out
add
insl
cmpsl
push
in
dec
and
cmp
push
fbld
int3
lahf
pop
push
jecxz
mov
xchg
mov
adc
pushf
cmpsb
sbb
ret
pop
xchg
mov
mov
fdivl
fwait
xor
jp
sti
jbe
mov
and
xchg
and
ss
leave
push
cmp
xor
mov
inc
aas
sahf
jmp
sbb
pop
push
xchg
xor
dec
push
pop
jb
aaa
lahf
pop
lahf
cmp
sbb
adc
rorb
sub
dec
jns
or
aas
popa
xchg
es
jg
sbb
adc
gs
out
leave
dec
pop
test
jns
lahf
neg
inc
pop
dec
mov
in
out
or
lods
std
bound
pop
fwait
jl
gs
outsl
mov
lods
aaa
lret
roll
mov
ret
inc
lea
std
xor
mov
dec
push
enter
sti
jae
nop
hlt
push
inc
in
push
mov
sbbb
xchg
xchg
cmp
clc
or
pop
insb
xlat
xchg
xchg
test
push
xor
inc
mov
cmp
enter
cld
mov
sub
lds
xor
fstpt
jne
pop
xchg
lea
or
repz
jmp
inc
xchg
adc
xlat
outsl
call
jg
sarb
jbe
pop
push
xor
or
iret
dec
and
loope
fbstp
pop
pushf
ror
mov
mov
and
aad
xchg
mov
dec
lock
mov
jg
clc
sub
aad
or
cmp
cwtl
mov
sub
push
aas
fcomps
add
leave
mov
popf
xor
add
lods
mov
pop
push
or
add
movsl
dec
jmp
mov
mov
insl
leave
jae
push
lock
cld
inc
insl
inc
dec
jmp
or
cli
inc
jno
addr16
test
cmp
sti
clc
mov
cmp
jo
inc
dec
in
dec
bound
mov
push
add
aas
jno
movzbl
out
sub
jbe
into
xchg
mov
and
popf
into
int3
xor
mov
push
sbb
loope
xor
repz
pop
xor
sti
cmp
pusha
rorb
aas
jnp
es
push
pop
fldcw
cmpsb
sbb
cmpsl
fdivrl
pop
add
or
out
dec
test
enter
dec
int
aad
mov
fistpl
cltd
mov
fadds
add
aad
gs
inc
mov
repnz
mov
sbb
mov
ds
call
dec
movsb
imull
and
push
push
push
fadd
clc
add
pop
leave
cmpsb
mov
popf
dec
rorl
or
aam
test
cmc
sti
jns
pop
dec
push
add
jg
jo
pop
loope
pusha
adc
jns
dec
iret
pop
mov
out
or
lea
lock
insb
movsl
dec
rol
xchg
stos
mov
sub
call
imul
inc
jne
shrl
pop
iret
and
xor
mov
ds
int
call
das
js
or
lret
cmc
mov
mov
adc
inc
adc
mov
jl
inc
mov
mov
jmp
inc
and
cmc
nop
and
dec
cmp
jg
dec
jo
mov
rolb
stos
cmp
incl
mov
sti
jmp
repnz
fdivrl
imul
and
cmp
and
rorl
jge
outsl
out
cld
fcompl
cmp
bound
sub
jmp
lret
cs
add
dec
cmpsb
scas
mov
dec
or
mov
jmp
mov
cmp
pop
mov
sbb
popf
sti
xchg
pop
or
aad
xor
mov
xchg
xorl
bound
xchg
stos
das
shr
sbb
movups
adc
sahf
and
pop
xor
and
rcl
jnp
popa
sub
les
xchg
add
jae
sub
jns
xchg
pop
xor
fs
mov
pop
mov
jp
cs
sub
inc
push
xchg
es
inc
lods
rolb
lods
mov
xor
ljmp
pop
xchg
into
sbb
inc
pop
cwtl
dec
test
jae
mov
loopne
and
push
testl
push
inc
sbb
jp
dec
pushf
loope
fadds
dec
cmc
jae
rep
cmp
scas
notb
scas
mov
dec
or
arpl
or
xor
xlat
lret
sub
inc
gs
lods
dec
pop
lcall
loope
mov
pop
pop
lret
nop
and
in
sti
call
or
nop
jle
mov
pusha
mov
mov
inc
push
xor
mov
add
addr16
loop
lcall
mov
repnz
add
aas
clc
mov
and
jae
and
pushf
hlt
movsl
stc
cli
shll
xchg
xchg
mov
push
push
or
mov
mov
sbb
jb
or
subb
addb
repz
sahf
inc
cltd
or
xor
std
popa
call
xchg
ret
movl
mov
inc
inc
dec
fs
and
test
mov
insl
push
movsl
fs
or
and
pop
ret
mov
push
dec
sbb
inc
fists
lcall
pop
mov
xchg
daa
xor
xchg
mov
out
cmp
cmc
and
pop
ret
sub
lcall
cmp
cmc
sti
or
popf
jg
out
jg
mov
test
loopne
mov
xchg
mov
push
popa
xchg
push
push
mulb
add
in
cmpsb
inc
rcrl
mov
pushfw
push
popa
jne
aad
lds
cli
dec
dec
pop
fcompl
scas
imul
xchg
dec
ds
dec
push
lret
cmp
xchg
xchg
jl
jb
xor
nop
test
stos
inc
iret
movsb
inc
repnz
cld
pop
mov
rolb
jbe
paddq
mov
jg
pop
jae
sbb
js
mov
addb
mov
mov
por
and
sub
add
fwait
les
mov
dec
shrl
mov
fcomi
push
push
sbb
mov
push
mov
jae
mov
nop
inc
push
add
dec
in
adc
pop
dec
fisubl
add
jbe
cwtl
clc
add
mov
add
js
ficomps
int
fstl
je
add
sub
push
ret
data16
pop
gs
adc
mov
sbb
jne
outsl
rolb
lock
jg
popf
xlat
sub
mov
cwtl
es
cli
iret
xlat
xor
pop
cmpsb
pushf
fnsave
add
rorl
lds
repz
into
fdivl
pop
jne
pop
or
jmp
cmc
pop
xor
mov
lahf
jmp
jle
cmp
sbb
das
xor
std
lods
test
std
mov
inc
xor
inc
push
adc
pop
sti
push
outsl
pop
mov
out
or
mov
out
sbb
push
xchg
mov
jb
mov
loopne
hlt
ret
xchg
fstpt
repz
lock
addr16
fxtract
clc
inc
arpl
xchg
or
inc
insl
sbb
jo
icebp
pop
push
adc
mov
push
push
stc
sub
std
jns
inc
xor
adc
lret
add
sbb
int3
mov
mov
fcoml
pop
imul
outsb
mov
lahf
andb
das
repz
pusha
or
arpl
stos
div
movsl
jo
pop
xchg
fdiv
jbe
data16
inc
shll
in
das
lods
push
lcall
fsubr
test
or
xchg
in
fcoms
cwtl
xor
loope
mov
cmc
jmp
cmpsl
xor
pop
clc
movsl
stc
push
or
test
je
push
add
pop
cld
testl
jle
lahf
lock
sbb
daa
add
fstpl
mov
mov
pop
mov
push
ret
adc
in
data16
aad
mov
mov
cltd
negb
cltd
cmc
mov
scas
add
xor
push
enter
shll
shr
lret
jmp
addr16
je
mov
jno
dec
add
outsb
or
loopne
fwait
stos
ret
daa
pop
mov
and
ljmp
dec
or
fdivs
adc
mov
in
ja
out
jge,pn
cli
cmp
pop
lcall
nop
cli
jo
jae
xchg
or
jns
cmp
das
leave
add
adc
in
xchg
pop
nop
fnstsw
dec
xchg
shlb
gs
xor
fstl
xchg
inc
lods
enter
outsl
adc
xor
repz
addr16
ja
fs
frstor
jp
pop
cli
or
mov
adc
sbb
add
sub
push
inc
leave
and
cmp
push
cmp
bound
pop
mov
js
sbb
inc
loope
xchg
test
test
insl
ret
mov
pop
fsubrl
stc
push
xor
xchg
inc
adc
jae
xchg
inc
xlat
aaa
dec
jmp
or
and
mov
adc
stos
repz
jno
out
cmp
sarb
in
daa
fdivp
inc
xchg
and
scas
addb
pop
or
jne
mov
dec
cmp
ret
mov
xlat
ss
pop
push
pop
or
inc
call
mov
lods
pop
dec
xchg
adc
dec
call
inc
or
xchg
push
fcoms
dec
test
imul
aaa
aas
and
jne
or
push
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
add
add
hlt
xlat
dec
add
add
add
add
cmp
dec
add
sarb
add
sbb
xlat
dec
add
add
and
add
add
add
add
add
add
add
dec
add
sbb
add
and
add
dec
add
add
inc
jns
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
cli
push
jo
add
test
shlb
popa
and
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
