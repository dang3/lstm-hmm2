push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
jmp
enter
fldenv
add
mov
jl
jl
add
aam
ret
rol
in
lret
fmul
cli
icebp
fmul
aam
cli
rcl
xchg
mov
loopne
cli
jmp
leave
xor
icebp
xor
neg
aad
int
fnclex
out
repz
ljmp
out
ret
clc
fxch
in
leave
icebp
hlt
dec
cmp
rolb
repnz
in
fildl
shl
sub
shl
xlat
stc
aas
adc
out
out
test
mov
iret
cld
fdivp
jecxz
hlt
jecxz
aaa
ret
fcmovu
neg
in
iret
out
lock
in
lock
in
aad
jmp
sti
call
aam
int
int3
out
ds
fmulp
sti
out
fmuls
hlt
icebp
rol
repnz
aad
xor
lret
sarl
cld
hlt
cmp
ret
loopne
out
sti
xchg
jmp
repnz
out
in
loope
add
cmc
ret
addb
cmc
repz
enter
xlat
cli
cs
ret
shr
aas
xchg
xchg
lret
in
out
xchg
aad
lret
in
ljmp
aad
addl
add
leave
nop
rcll
enter
cmc
out
leave
jmp
cld
jecxz
cmc
sar
jmp
mov
shl
dec
jecxz
imul
call
cmp
shl
incl
lret
lret
ret
fisttpll
icebp
aaa
jmp
cmp
hlt
loopne
out
fcmovne
in
ds
test
mov
fcmove
addl
enter
iret
hlt
out
xor
test
mov
lret
xabort
out
stc
in
ror
lret
lock
fdivrs
loop
jmp
lret
out
rcl
xor
aaa
xor
aaa
sti
out
cmc
ljmp
repz
fucom
in
rcll
shl
enter
leave
ss
into
shr
int3
test
incl
mov
iret
ror
aad
ljmp
stc
test
sarl
rcr
xchg
in
std
mov
call
aaa
int
cli
roll
repz
fcom
stc
cmp
nop
iret
lret
fstl
sti
lret
jmp
ret
xchg
repnz
sti
mov
cli
mov
lds
xor
clc
test
aad
out
fdivp
cmp
rol
out
shr
sub
leave
add
nop
divb
aam
cmp
loope
shl
shl
fistpll
loop
call
call
ds
rcl
into
into
sarb
aad
cmp
out
sbb
rolb
iret
std
fists
repz
clc
fnstenv
xor
add
rcl
add
lret
sub
jmp
in
out
int3
addb
bnd
xchg
orl
in
call
cli
cmp
cld
jmp
test
stc
rcr
test
fdiv
xor
lret
leave
cli
xor
ljmp
test
leave
xchg
in
mov
fsub
das
aad
int
shr
int3
div
fidivrs
fidivrs
cmp
loope
call
ljmp
test
into
xor
out
aas
loope
sti
lret
leave
sub
mov
into
lock
fsubr
ds
into
rcr
out
jmp
cmp
rcl
test
ljmp
int
xor
in
cmp
cmp
in
cli
loope
mov
test
mov
incl
loopne
xor
jmp
ret
cld
faddl
mov
fsub
out
int
hlt
iret
rcl
ret
fcmovbe
stc
iret
fistpll
ror
fadds
in
call
out
sbb
stc
hlt
jmp
out
sar
test
test
fiadds
out
loopne
jmp
lds
fmul
shl
out
xlat
call
in
repz
test
cli
stc
leave
and
loop
aas
shll
leave
cmp
in
in
shl
cmp
in
faddp
xchg
cld
nop
int3
leave
das
shrl
imul
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
enter
lret
xor
inc
adc
jl
addb
jl
in
xor
shll
xlat
repnz
std
loope
int3
rcr
addb
rcl
aam
div
cmp
cli
fidivrs
sti
aad
aad
mov
test
mov
xchg
aam
test
ds
loopne
into
fdecstp
hlt
loopne
mov
sar
mov
repz
xor
xlat
enter
sti
hlt
int3
fdivr
aad
ret
jmp
loop
cli
int
int
in
and
rcl
iret
into
out
shr
iret
fdiv
in
repz
leave
leave
test
int
mov
mov
lock
cmc
ret
stc
divb
xlat
sti
aam
xor
jecxz
std
cmc
clc
leave
fiadds
jmp
in
jmp
out
cmc
enter
lock
loope
or
ljmp
xor
xor
shr
cmp
les
fmul
out
loope
lock
in
xor
lret
int
cmp
loopne
ret
neg
ret
mov
mov
repz
hlt
leave
xor
lret
jmp
out
cli
div
rol
cmc
ljmp
test
out
aam
repnz
rcr
hlt
jecxz
testl
jmp
call
loop
ror
clc
iret
iret
out
xor
ror
xlat
fld
adc
cmc
xchg
xchg
iret
cld
loop
shl
in
stc
int3
dec
or
std
fsub
test
sub
iret
icebp
jecxz
ljmp
pushl
cmp
cmp
addb
cmp
call
incl
cmp
xlat
repnz
testl
idivb
xchg
int3
orl
out
cmp
cmp
div
jecxz
test
cmp
fst
cmp
std
leave
mov
loop
rol
f2xm1
cli
icebp
idiv
repnz
cld
sar
fsub
hlt
jecxz
enter
in
cmc
in
out
cmp
leave
iret
sti
icebp
int
icebp
rcl
loope
roll
test
mov
fiaddl
fnstenv
icebp
lds
cld
hlt
icebp
call
iret
fcmovnb
iret
repnz
mov
jmp
xchg
or
repz
ds
iret
icebp
lock
iret
leave
cli
neg
roll
mov
xlat
call
dec
out
cmc
aaa
repz
fdiv
xlat
in
xor
shl
xchg
sti
aad
in
out
shl
repz
xchg
sub
into
cmp
cmp
cmp
xor
jmp
lret
in
mov
stc
iret
lret
enter
xor
out
out
loopne
ret
xlat
fcom
fcomi
out
mov
xchg
jmp
fcmovnbe
int3
fsubp
aas
ss
sti
cld
in
stc
mov
orl
out
xchg
add
cmp
aad
iret
int
rol
xchg
fdivr
ret
imul
clc
cli
nop
mov
xchg
out
into
jmp
into
sarl
aad
rcr
fsubp
cmp
hlt
fidivrl
clc
lret
in
int
jmp
aam
in
jecxz
leave
not
into
inc
rcl
shl
fadd
repnz
or
in
test
mov
xor
ret
fcom
loopne
aad
int3
sar
test
fsub
movl
out
enter
lret
lret
ret
mul
call
mov
and
in
das
enter
fcmovne
loope
repz
fsubrp
movl
xchg
incb
fldpi
stc
in
repnz
loop
ret
ret
enter
mov
jmp
mov
xlat
stc
aam
leave
addb
faddl
call
test
fdivr
cmp
out
lock
xor
cmc
sti
std
ffreep
rcr
out
std
movb
ret
icebp
lds
lret
in
sub
xor
mov
xchg
nop
lock
xor
xor
aam
shr
in
lret
stc
xlat
sarl
fucom
sti
decl
icebp
xchg
mov
fxch
fcom
lret
in
fnstcw
int3
aas
aas
cmp
test
out
fdivr
ljmp
out
cmp
fsubr
cmp
cld
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
mov
lea
mov
mov
sub
and
mov
jmp
lret
aad
fcmovu
adc
ja,pn
mov
addb
jl
test
jecxz
and
adcl
cmc
cmp
ss
loope
flds
out
repnz
jmp
out
stc
icebp
out
xchg
xchg
adc
jmp
sti
ror
out
fnstsw
loope
into
ds
loop
xlat
fldl
xchg
leave
leave
xor
cli
fcmove
lock
fsubp
mov
fcmovnbe
not
out
rorl
mov
xor
out
into
cmp
cmp
into
stc
iret
std
clc
rcr
leave
in
test
ror
out
aad
cli
stc
out
jecxz
stc
faddl
fsub
fld1
fdivr
iret
fimuls
rol
aad
cmp
int3
fstpt
sbb
cli
clc
xchg
ljmp
ret
out
shlb
in
sti
cmp
lock
clc
ds
fptan
mov
mov
faddl
shl
out
hlt
aaa
call
leave
cli
idiv
test
cmc
fcmovne
loop
ljmp
int3
in
loope
divl
ror
xor
cmp
adc
cld
sar
rolb
test
mov
out
xlat
hlt
shl
sbb
iret
cmc
cld
rolb
loope
rol
jmp
in
in
ss
lock
ss
addb
test
lret
in
test
jmp
shl
out
into
fst
loopne
fchs
xor
ds
les
into
int3
int3
test
ss
cmp
xor
cmp
cmp
jecxz
sub
lock
mov
in
fildl
jmp
out
fstpt
sti
xor
out
cmp
rolb
fnop
lock
leave
lds
hlt
in
ss
out
cmp
in
adc
mov
loopne
std
cmc
in
in
out
xor
aaa
xor
cli
cmp
out
into
lret
cmp
rcr
ret
cld
lret
clc
rcll
loope
lds
cmp
int
enter
fcmovb
addl
fsubr
mov
out
xor
in
fdiv
cmp
imul
cli
xlat
filds
fldln2
in
jecxz
xchg
loope
repnz
cmp
iret
hlt
fidivrs
in
lret
sti
rol
mov
mul
fdivr
rorb
out
lock
div
cmp
std
cld
xchg
idiv
hlt
std
sub
fucomi
mov
out
xor
in
icebp
cli
fnstsw
fdiv
aad
add
sub
mov
int3
enter
decb
aad
out
out
sarl
cmp
fcom
icebp
or
fiadds
xchg
jmp
call
sar
xor
ds
out
sbb
ret
loopne
loopne
call
out
mov
loope
ret
xor
cld
in
div
cmp
repz
leave
dec
clc
fcmovnbe
xchg
nop
xor
in
loop
lret
icebp
aaa
ljmp
test
std
aam
mov
shl
sub
xor
out
aam
cld
stc
aad
fcmovnbe
mov
mov
into
xchg
lret
xchg
cs
sub
fcomp
fcmovbe
stc
repz
cmp
cld
clc
mov
call
cld
xchg
rcl
hlt
rcl
rcr
rcr
xlat
ds
shl
std
jmp
mov
jecxz
jmp
jmp
shl
rcr
cmp
xor
cmc
cmp
testl
mov
hlt
int
fld
fadd
lret
jmp
cmp
aaa
in
mov
jmp
cld
fisttpl
loopne
aaa
enter
das
divb
repnz
aam
shl
loopne
jecxz
sti
out
call
lock
ror
jmp
xor
cli
int3
xor
fst
out
loop
rcl
lock
cld
fldl
jmp
sti
iret
jmp
in
in
ljmp
aam
leave
cmp
dec
in
jmp
fsub
not
cmc
into
repnz
fcom
ds
fadds
int3
test
std
xchg
mov
xor
xor
not
cmc
filds
std
cmc
loop
xchg
cli
xchg
xchg
sub
mov
sti
repnz
sbb
mov
and
mov
orl
jmp
rol
aas
ror
daa
jae
ror
lahf
mov
jl
addb
jl
std
ret
test
jmp
fcoml
out
out
fcmove
cmp
cmp
jmp
icebp
fndisi(8087
repz
xor
jmp
xor
inc
icebp
ss
aam
std
loopne
loope
sub
in
call
divl
fsubr
int3
fldlg2
int3
cmpl
repnz
mov
mov
cld
int
in
repnz
std
xor
cmp
aas
test
jmp
out
and
out
rcr
loop
lock
in
imul
fcomi
hlt
lret
loope
loopne
ret
sbb
ljmp
imull
xlat
mul
out
int3
stc
xor
faddl
xchg
fisttpll
out
cmc
test
xor
fucomi
enter
in
filds
out
mov
int
xchg
mov
enter
fidivl
fdiv
out
into
ds
clc
in
stc
and
sti
fsubr
cld
loope
xor
aam
out
cmc
iret
jmp
iret
cmp
cmp
in
fimuls
out
div
jmp
clc
ss
ds
cmc
leave
lret
sub
test
int
aam
xbegin
xor
xbegin
ljmp
add
xor
aad
into
fistpll
into
and
xchg
loop
iret
in
mov
xor
xor
xor
aad
aas
loope
loop
repz
aad
jecxz
xlat
in
fstp
mov
cli
xchg
xchg
loop
jecxz
aaa
in
in
fidivrs
aad
iret
repz
call
cld
lret
xor
xor
rcl
shl
enter
repnz
icebp
sbb
ret
shl
xchg
lret
incb
xor
sarl
aaa
iret
iret
clc
icebp
fsub
int
stc
fdivr
fadd
cmc
fcom
mov
jecxz
rol
lret
ret
icebp
aad
fucomp
sti
hlt
cli
int3
cmp
fst
out
iret
xchg
xchg
in
int3
xor
in
clc
cmp
fsubr
cmp
cmp
stc
cli
in
test
lea
ljmp
jecxz
repnz
in
shl
out
in
fdivr
jecxz
loopne
rolb
in
cli
loope
aad
loopne
ljmp
clc
cmp
test
stc
cmp
sti
clc
fimuls
fucomi
std
jecxz
out
aad
ss
lret
loope
fidivrl
cmp
enter
mov
test
adc
icebp
repz
int
lret
xor
cmp
in
cli
fdiv
fld
sar
adc
lret
jecxz
xor
out
out
sub
int3
pushl
repz
cmp
aas
clc
fmul
ret
enter
out
fcmove
rcl
out
in
into
lret
cld
xor
xlat
fcmovbe
aas
xlat
stc
mov
neg
lds
lea
xor
out
in
rcl
jmp
hlt
out
loope
stc
clc
test
mov
int
in
mov
hlt
in
cs
jecxz
leave
in
cli
enter
repz
test
fldpi
sub
std
leave
mov
sti
mov
lret
ror
jmp
jmp
fmul
repz
cmp
cli
ret
aam
in
in
out
sub
xchg
in
fxch
hlt
fsubr
cmp
shr
fucomp
cmp
aas
test
jmp
lret
nop
in
fisttpll
sar
xor
repz
loopne
hlt
int3
icebp
out
rcr
jmp
fldl
in
lret
out
out
xor
leave
fstp
repz
xchg
int3
out
ljmp
xor
das
fdivs
std
loope
ljmp
ljmp
loope
rolb
repz
cmp
stc
cmc
cmp
ljmp
les
mov
aad
loop
xor
fdivl
lock
iret
lret
shl
fdiv
cli
aam
in
pop
ljmp
xlat
shl
cmp
call
std
ret
fdivp
jmp
rcr
rcl
int
jmp
loopne
jmp
ljmp
shl
jmp
fidivrl
test
std
test
ret
not
call
sub
cld
xchg
xor
enter
fcmovne
fnstsw
sar
addl
xor
xor
add
mov
add
add
mov
movl
lea
jmp
ror
rcl
fcmovnu
ror
and
je
adc
jl
addb
jl
xchg
out
in
xor
rcl
aaa
lret
into
fdiv
loopne,pt
std
test
decb
test
in
out
ror
repnz
jmp
out
cld
xor
out
sar
ljmp
addl
neg
out
xlat
repz
fsubr
cmp
iret
test
in
test
jmp
dec
mov
test
ret
hlt
sub
clc
repnz
fcomip
ds
ds
hlt
out
in
sbb
mov
cmc
int
in
jecxz
xor
icebp
aas
sar
cmp
aas
shl
sti
repnz
out
sti
jmp
repz
lret
ret
call
std
xor
loope
out
call
addb
aad
int3
ss
cmc
adc
shl
stc
fdivp
in
jecxz
test
call
in
loopne
sti
aam
idiv
sub
jecxz
enter
fdivp
out
out
out
cmp
or
sar
clc
idiv
fiadds
cmc
out
shl
cmp
jmp
out
ds
repnz
inc
test
out
mov
icebp
shl
into
shl
shll
out
in
cli
shl
adc
jecxz
test
enter
cmc
ds
ret
in
clc
repz
shl
fcmovbe
rol
icebp
sbb
les
loope
test
das
stc
call
enter
stc
ret
cmp
test
iret
rcr
mov
orb
aam
cmp
adc
ret
cmp
lock
in
neg
loopne
jecxz
mov
ljmp
fldt
std
jmp
sbb
xchg
fucom
fucom
mov
mov
shl
xlat
in
cmp
stc
fistpll
cmp
test
clc
lret
loop
mul
ljmp
xlat
ffreep
fcmovbe
repnz
loop
cli
xchg
jmp
call
cmc
in
aaa
lret
cmp
into
cld
push
fildl
loop
in
out
in
cld
call
stc
int
cmp
xlat
div
sbb
cmp
hlt
xlat
rcl
jmp
mov
loopne
lret
ljmp
shlb
cmp
ret
xchg
fyl2xp1
test
mov
shl
ds
idivb
aam
int
neg
fucomi
rcr
fiaddl
xchg
xorb
jmp
loopne
in
sar
cmp
jmp
nop
into
fucom
repnz
sub
out
cmp
fmulp
cmp
sti
icebp
aam
lock
out
test
test
aam
aam
int3
jmp
xor
rol
loop
stc
out
fmul
std
rcl
xchg
ret
shr
shl
aad
int3
fucomp
icebp
cmc
cmp
loope
test
xchg
hlt
cli
mov
and
cmc
into
xchg
xlat
stc
in
shll
in
sti
aad
lret
into
fcmovnbe
sar
mov
int
mov
in
in
rol
cmp
call
enter
std
test
stc
mov
ljmp
stc
out
aam
lret
sti
aad
cmp
loop
cld
cmp
test
ret
loope
and
sub
xor
fcomp
aaa
cmp
clc
fcomi
fucom
aam
mov
enter
loopne
xchg
ljmp
repz
jmp
fcomi
xlat
shl
xrelease
and
call
clc
repz
shlb
out
clc
enter
repz
cli
in
fisttpl
lret
out
fnclex
sarb
out
cli
lret
cld
loopne
std
cld
xor
in
mov
int
loop
cld
orb
ljmp
cmp
xor
cld
std
std
cmp
mov
mov
icebp
hlt
enter
in
out
repz
adc
aam
enter
incl
xor
shll
repz
shr
fcmovb
iret
jecxz
xlat
cmp
aam
loope
out
fndisi(8087
and
xor
cli
repz
cli
xor
sar
loop
aas
cmp
mov
fsub
in
loop
ljmp
mov
jmp
aam
into
lret
rcr
fstp
les
jl
lcall
jl
xchg
out
fmulp
in
ljmp
loopne
cmp
cld
xor
and
mul
mov
nop
lret
jmp
icebp
fdivp
shl
lock
sti
addl
nop
cmc
loope
imul
in
clc
in
jmp
shl
cmp
out
sar
fcmove
xor
mov
in
xchg
in
aam
loopne
jmp
into
aam
aad
incl
in
loop
mul
fisttps
aam
lret
out
repz
out
stc
xor
fcmovbe
sar
sbb
leave
xchg
out
in
leave
ljmp
ss
add
cmp
ret
ftst
out
in
test
mov
add
cmp
repz
ljmp
std
xchg
mov
mov
add
call
repz
jmp
fpatan
std
jmp
decb
hlt
lret
aaa
lret
lock
repnz
faddp
testl
lret
cld
rclb
icebp
aam
repnz
xor
shl
aas
shl
testb
in
fucomp
xchg
loope
xlat
xor
sti
ljmp
iret
out
div
cli
ljmp
rcll
hlt
aad
rcr
ljmp
lret
lock
sar
mov
incl
fildll
xlat
fsub
neg
into
out
out
fcmovnb
or
rcr
out
ret
cmp
fldl
call
fptan
cmp
icebp
out
div
int
aas
shr
rcr
repnz
fadd
mov
ffreep
das
xor
aas
loope
test
repnz
mov
loop
enter
idiv
rcl
iret
xor
lret
leave
sti
std
loope
or
stc
cli
loopne
dec
mov
in
std
out
out
lret
loop
cmp
in
fdivrp
aad
lret
xor
shl
clc
call
loope
fdivrp
lret
icebp
xlat
jmp
lret
fcmovne
out
in
fstp
fdivr
ds
shl
fimuls
mov
pushl
out
cmp
sti
stc
rol
aam
xrelease
neg
in
addl
ss
repnz
cmp
fnstenv
icebp
or
ret
aas
xchg
lret
cld
add
jecxz
jecxz
hlt
aas
xor
leave
jmp
enter
lret
sar
lock
ret
fadds
loope
sar
out
sar
leave
shl
rcr
in
lret
out
sar
lock
in
cli
ds
int3
in
xchg
fsqrt
shr
cmp
into
in
fdivr
cmp
std
fucomp
call
fstp
jmp
mov
lret
loop
in
fxch
out
lret
aas
lret
out
out
shl
xlat
lock
les
lock
fdiv
out
cmc
ss
int3
cmp
fcmovnu
rcl
test
aam
cld
fldl
mov
nop
in
repnz
mov
clc
icebp
xor
ss
fiaddl
or
idiv
sti
hlt
cmp
icebp
xchg
shl
aad
shl
into
stc
fcos
sti
or
shl
loope
fsubr
int3
test
out
fdivrp
xchg
jecxz
out
repnz
hlt
in
rcr
in
dec
repz
sti
lock
lret
xchg
mov
ljmp
lret
repnz
loopne
cmp
loope
mov
out
jmp
hlt
enter
lds
int3
jmp
lret
ds
cmp
in
adc
int
jmp
xchg
aad
cli
idiv
cmp
int3
fcmovu
jecxz
xchg
rcl
stc
lds
icebp
ljmp
int3
icebp
fstp
in
rcl
aad
rol
jecxz
aas
in
ret
ljmp
xor
into
lret
ss
aaa
fcmovnb
divl
loope
sbb
in
in
out
xchg
roll
out
out
hlt
int
fstpt
div
repz
in
les
in
lret
loope
imul
cmp
aad
jecxz
jecxz
jecxz,pt
mov
mov
sar
xchg
call
out
cs
rcl
out
loopne
repz
out
incb
into
rcr
ds
xor
add
mov
mov
mov
mov
mov
jmp
ret
rcl
rcl
aad
shrl
jecxz
sbb
sbb
add
cmp
ss
fdivp
call
in
cli
stc
adc
mov
into
out
fmul
enter
xor
icebp
into
cmp
divb
or
xor
in
jmp
ljmp
in
out
sub
fldl
loope
fadds
leave
adcl
shrb
call
fadds
sarb
rcr
enter
iret
mov
iret
stc
cs
xor
shl
cli
aad
fdiv
into
test
lock
fcmovnu
aam
adcb
ljmp
xlat
lock
aaa
cmp
loope
cmc
jecxz
mov
in
jmp
into
roll
ss
in
cld
jmp
cmp
std
repnz
out
fadd
loop
std
leave
ficoml
shlb
lret
sti
aad
aas
cmc
fcom
sti
nop
lret
xchg
faddp
xor
loop
clc
int
repz
rcr
sbb
jmp
mov
xchg
out
mov
in
int3
cmc
idiv
xor
sar
fdiv
out
xor
mov
int
xor
rcl
out
lret
dec
ret
in
jecxz
jecxz
or
out
icebp
out
out
jmp
sti
jecxz
stc
stc
ss
sar
xlat
repnz
in
out
leave
mov
in
enter
rcll
iret
cli
shl
aaa
loopne
loope
out
shl
mov
stc
neg
loopne
clc
jecxz
test
fildll
ror
cmc
clc
aam
into
cli
into
rcl
aas
div
aas
add
aad
fiadds
xchg
jecxz
cld
les
ret
jecxz
fcmovne
out
into
jmp
xor
loop
xlat
fucomip
mov
xchg
into
fdivrl
cld
aas
aad
shl
les
fcomp
cli
sub
xchg
call
les
stc
iret
sub
vpminub
jecxz
out
orl
jmp
sub
xor
xor
cmp
aam
mov
fisttpll
in
call
clc
cli
lock
stc
shl
aas
fcmove
jmp
in
enter
std
jmp
enter
xlat
hlt
ror
fcomp
cmp
rol
aad
ret
sti
enter
xchg
mov
fdivl
jmp
rcr
cmp
aas
cmp
in
vpsubsw
enter
enter
loope
call
cmp
cmpl
rcr
fadd
jmp
int
loopne
out
xchg
icebp
int
in
leave
int3
ljmp
fcmovbe
sti
rcl
mov
in
cli
leave
mov
mul
divl
lret
fnstsw
int3
int
loopne
fsubp
std
neg
ds
int3
shr
sub
fldz
lret
shlb
aas
add
fadd
shl
xchg
xchg
repz
repnz
xor
lock
iret
repnz
enter
cli
loop
jmp
clc
out
cli
fdivrp
cld
iret
xchg
xor
sar
out
cmp
cmp
aad
stc
loopne
fptan
fidivrl
vpsllq
aam
clc
lret
jecxz
incb
repz
lret
std
int
repz
std
cmp
aad
test
fnstsw
fxch
int3
enter
test
shl
ret
aaa
out
test
shr
sti
hlt
and
add
sti
out
call
in
clc
push
cmp
aam
lock
sbb
out
lret
int3
mov
xor
iret
imul
aam
aad
cmpl
ds
xchg
sbb
xchg
stc
jmp
cmp
or
cmc
loope
aad
lret
jmp
int
test
xlat
ljmp
and
loopne
loop
clc
ljmp
shl
mov
enter
stc
xlat
leave
lock
into
dec
in
loope,pt
std
xchg
neg
cli
lock
in
test
enter
jmp
out
in
iret
xlat
loope
xchg
add
out
int3
loope
ficoml
stc
jmp
idiv
loopne
ljmp
xor
out
fdiv
enter
lock
in
lret
out
jmp
mov
jmp
sarb
enter
fidivl
mov
ret
enter
jl
add
or
fxch
hlt
aam
ret
cli
test
into
mov
sub
into
xor
aad
enter
fcmovnu
loop
lock
cld
flds
lret
into
xor
das
fcomip
jmp
aad
shl
aam
aam
enter
sar
xchg
shr
les
repnz
in
cs
xlat
clc
cmp
loop
loopne
repz
xchg
neg
jmp
sti
mov
in
ret
cmp
stc
aad
fcomip
in
loopne
jmp
stc
loop
int3
shr
cs
into
lret
cmp
cld
int
sti
stc
fdiv
in
and
int
in
int3
std
shl
mov
xor
sar
lret
cmp
cmp
fcmovb
sbb
in
loop
and
fldl2e
icebp
cmp
aaa
iret
out
hlt
test
and
int3
std
call
loope
out
ss
out
aad
xor
xchg
loopne
repz
call
nop
jmp
xlat
shll
fcmovu
xor
fiaddl
ror
sti
aam
into
addl
shlb
into
ljmp
rol
ror
mov
std
decl
ljmp
cld
fcmovnu
or
clc
cmp
mov
leave
out
in
mov
nop
xor
rcl
jecxz
in
repnz
fadds
enter
idiv
loope
jmp
out
icebp
shlb
das
leave
cmp
aad
loopne
cli
cli
sarb
cmc
out
out
ror
in
call
shl
int
les
xor
xor
lret
sti
loop
fidivrs
test
fsubp
ljmp
roll
hlt
enter
aam
std
icebp
cmp
jecxz
cmc
ffreep
test
mov
ljmp
jmp
in
aam
out
int
out
rol
jecxz
mov
aad
test
loope
nop
sar
jecxz
xor
shl
into
shl
fucomp
ror
aam
fdivr
cld
mov
jecxz
iret
xchg
jecxz
in
xchg
aad
rol
out
xor
out
out
ror
cmp
xor
rcl
aad
fcom
test
mov
rcl
ror
cmp
repnz
leave
jmp
cmp
ds
test
jmp
mov
shl
stc
xor
idivb
jmp
ret
out
lock
call
aas
les
aas
aas
in
fld
ret
jecxz
loopne
loopne
fisttpll
repnz
jecxz
xor
loop
lock
hlt
repz
ret
rolb
leave
sti
lret
lock
shl
loop
xlat
cmp
into
stc
lret
loop
fsub
rcl
stc
xlat
mov
enter
repz
mov
xor
iret
xor
in
xlat
xlat
aaa
not
fnstsw
aas
lock
ffree
xchg
loopne
movb
cs
iret
xlat
cmp
ds
int
neg
cmp
sub
in
mov
loop
test
in
lock
jmp
iret
repz
rcl
cmp
fstp
call
leave
out
lea
rclb
repnz
ljmp
std
cld
addb
xchg
xor
loopne
aad
std
out
repnz
aaa
out
out
loopne
repnz
or
call
xchg
das
sub
shl
stc
stc
aam
hlt
lret
cmpl
mov
in
fisttpll
out
fidivrl
sarb
xlat
iret
cmp
loopne
sarl
fucomp
loop
test
xchg
mov
sti
cmp
clc
lret
in
test
aam
fndisi(8087
mov
mov
sti
call
mul
out
enter
cmp
lret
faddl
cmc
out
jmp
fcomp
int
lea
xor
xlat
fdiv
ds
fcmovbe
xchg
fmulp
fdivr
in
f2xm1
fisttps
jmp
sti
xlat
xor
out
aad
repz
std
lret
sbb
in
jecxz
lock
fdivrs
in
enter
aad
repnz
fcmovnbe
loopne
cli
jmp
shr
in
fdivr
out
xor
rcl
ljmp
mov
add
mov
mov
mov
xor
add
cmp
jmp
iret
leave
rcl
fstp
leave
repz
dec
jb
pop
sub
jl
addb
jl
mov
fxch
leave
out
fcomip
mov
stc
in
rcl
fbstp
xor
out
fcomi
xlat
cld
call
xchg
xchg
iret
loop
lock
aam
out
std
cli
loope
test
stc
fsubrp
test
lds
int3
call
xor
clc
repnz
fstp
neg
incb
in
mov
popl
out
xor
sub
xor
leave
in
shl
cmp
ds
fadds
mov
mov
lea
repnz
sar
lock
mul
sbb
mov
int3
fdivr
fists
int3
enter
in
cmc
fstp
cmc
sar
adc
mul
mov
out
fdivr
in
ljmp
aad
in
aam
repnz
sbb
xchg
fucomip
test
das
into
aad
imul
push
lret
sarl
cmc
hlt
loopne
in
out
test
enter
enter
cmp
shl
fcmovb
jecxz
aad
call
nop
ljmp
jmp
xor
out
in
ret
repz
leave
enter
xchg
ror
int
ljmp
push
ljmp
sarl
xor
xchg
clc
jmp
xor
xor
ljmp
out
shl
ds
clc
ret
sbb
icebp
std
ror
loopne
lret
repnz
leave
xor
stc
in
into
cmc
out
repnz
repz
inc
out
jmp
jmp
idivl
loopne
fadd
cmp
repnz
fstp
mov
mov
ljmp
in
into
lret
int
cmp
idivb
out
ret
ret
loope
mov
int3
in
xchg
mov
iret
sti
xor
cmp
cmc
jmp
out
std
aas
fcmove
not
fmuls
lea
ds
ss
div
repz
icebp
xlat
cmc
stc
ret
mov
out
in
in
ljmp
repz
xor
into
hlt
idiv
ret
cmc
into
xlat
orb
in
fucomp
test
xor
int
idivl
int
stc
fcomp
icebp
cmp
fimuls
mov
xor
ret
xor
ror
aam
lret
aam
sarl
cmp
cld
jecxz
enter
inc
lret
leave
aad
ror
shll
ror
out
clc
addb
sar
or
sub
jecxz
lret
test
inc
ljmp
cli
cmp
incb
or
leave
cmc
lock
std
out
xor
cmp
idiv
cld
cli
frndint
neg
lret
out
cmc
mov
in
cmp
out
loope
jecxz
fcomip
cmp
cmp
aam
loope
ljmp
lret
cmp
xor
sti
int
mul
lock
sbb
stc
cld
leave
out
in
xchg
xor
ret
xor
fdivr
jmp
in
iret
shl
loope
in
rorb
orb
icebp
rcr
out
fbstp
sbb
cmpb
xchg
xchg
in
loop
inc
ret
xlat
int3
fxch
lock
fidivs
cmc
roll
loopne
clc
cld
lea
sti
in
hlt
sub
not
cli
cli
imul
dec
leave
icebp
cmp
ret
cmp
aad
ljmp
cmc
test
fucomip
iret
xor
cmp
in
fsin
in
sar
ds
rcr
int3
lret
clc
in
fiaddl
jmp
aas
xlat
jmp
rcr
icebp
fdivr
mul
out
clc
xchg
lret
xchg
cld
xlat
enter
xor
cmp
cli
std
aaa
repnz
les
jecxz
into
jmp
loope
out
aam
test
aaa
hlt
rol
ror
icebp
aam
faddl
ret
cmc
test
cli
leave
out
into
cmp
ror
fiadds
shl
aas
fcmovnu
int
cli
incl
fxtract
repnz
int
test
aad
sti
loope
xchg
fadds
lret
ljmp
stc
into
xor
fsubr
shl
ror
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
jmp
int
lret
xlat
int
es
mov
and
jl
add
ljmp
mov
aad
fucom
call
imul
into
ret
jecxz
testl
mov
shll
xor
in
repz
cmc
neg
fdivrs
aam
shl
jmp
mov
sti
jmp
mov
loop
lret
std
imul
out
shl
fdivr
xorl
xlat
test
lds
ljmp
sti
shl
into
xor
shr
ds
fdivp
leave
shl
in
stc
mov
cli
xchg
in
loopne
ror
int3
fmul
out
fsub
cli
repz
rorl
int3
in
enter
xchg
xchg
xlat
xlat
xor
icebp
in
cmc
fcmovnu
cld
adc
loope
bnd
leave
ljmp
cld
shr
das
xor
shr
out
cmp
sarb
jecxz
cli
sti
test
lret
jecxz
jecxz
std
shr
cmc
ljmp
push
lret
sar
aas
out
in
fsub
xchg
in
sbb
adc
int3
hlt
call
fidivs
idiv
fnsetpm(287
cmc
loopne
mov
addb
xchg
icebp
leave
cmc
lret
lret
icebp
cli
cmc
hlt
in
cld
lock
out
xchg
lret
jmp
fiadds
xor
loop
aad
call
lret
sar
fucom
cld
rcr
cmp
jmp
fmull
int
loopne
fdivr
loope
lret
xor
aad
sar
fisttps
loope
cli
in
xor
ffree
cmp
loopne
aad
mul
sub
xlat
xchg
sti
mov
lret
mov
int3
call
int3
out
clc
fxch
stc
test
ffreep
jecxz
fucomip
cld
out
jmp
in
fxch
ret
sti
repz
sarb
idiv
cmp
sti
aam
mov
int
nop
mov
shl
xor
repz
lock
leave
rcr
out
enter
rorl
in
xlat
jmp
cld
ljmp
rcl
xchg
mov
repz
xor
ss
cmp
int3
lret
cmp
repz
cli
mov
loope
xchg
lret
in
aam
into
call
cmp
sar
fstp
xchg
leave
sti
mov
std
lds
xchg
divl
xor
rcl
aam
aad
jmp
out
xchg
icebp
addl
fcmovu
mov
div
aam
in
out
jmp
aad
testb
loopne
jecxz
loope
xchg
call
aad
sub
xor
cli
lret
ds
cmp
jecxz
jecxz
mov
std
hlt
xor
lret
shr
repnz
cmp
fidivrl
repz
int3
cmp
rol
lret
jmp
or
lock
jmp
cmp
aas
out
out
fdiv
aas
icebp
inc
incb
xchg
cli
addb
shl
iret
hlt
fdiv
aam
rcr
testb
fucomip
in
out
lret
ljmp
hlt
sti
fidivrs
enter
cmp
repnz
call
fdivrp
xchg
aas
in
iret
cs
enter
call
xlat
loop
add
loop
out
lea
in
clc
neg
aaa
shr
hlt
icebp
fcomp
out
rcl
mov
repnz
xchg
leave
out
icebp
int
xorl
shl
xlat
int
ss
loopne
ror
fcmovnbe
repnz
jecxz
popl
xchg
in
rcl
lock
repnz
xchg
bnd
repnz
in
out
fadds
cs
int
in
icebp
idiv
cld
cmp
int3
in
fsubp
std
loope
in
orb
repz
sub
sarb
xor
call
into
test
xchg
loope
cld
sbb
fldl
aaa
out
ror
out
xor
aam
fpatan
ds
sar
adc
in
test
sub
shr
shl
jmp
f2xm1
sbb
cmp
jmp
jmp
test
lret
into
out
call
repnz
clc
fldl
cmc
fiaddl
lret
loope
call
sub
idiv
sar
into
out
sti
rcr
loop
cmp
in
lds
jmp
into
les
rcr
fxch
enter
rcrl
jl
addb
jl
mov
cmp
sarl
ss
repnz
loopne
xchg
xchg
cmc
into
call
loop
icebp
xor
aam
sar
in
aas
xlat
div
testb
lock
repz
int3
divl
repz
cmc
xlat
shr
cmc
shl
out
cmc
fdivr
mov
jmp
fsub
ljmp
out
xor
xlat
sarb
mov
bnd
loop
leave
xchg
in
mov
jmp
clc
cmp
ss
fcmovnu
sti
repz
cmp
fucom
test
ljmp
cmp
xlat
stc
clc
jecxz
clc
loope
sti
incl
fmull
mov
int3
jmp
int3
out
sarb
loope
in
fcmovb
aas
jmp
lock
repz
cmc
loop
shll
jecxz
repz
fdivs
repz
fcmovnbe
aad
xacquire
test
lret
cld
into
jmp
ret
lret
in
xor
rcr
icebp
hlt
ret
in
add
fadds
xchg
mov
rcl
icebp
cmp
xlat
out
out
fnop
lret
loope
test
loopne
out
lock
enter
fxam
hlt
lock
shl
fcmovbe
repz
idiv
fsub
test
test
mov
iret
out
leave
xor
fsubr
int
into
enter
int3
icebp
rcr
jmp
ret
fucomip
in
xchg
adc
into
icebp
xor
and
fadd
sti
faddl
sti
fsub
loopne
cmc
nop
bnd
int3
cld
cmp
and
jmp
in
hlt
fdecstp
mov
in
out
fdivp
iret
repnz
out
ss
int3
fst
loope
lock
rol
xchg
fcomp
orl
sarl
out
call
sub
fcom
cli
mov
rol
mov
xchg
divb
out
xor
imul
incl
loope
aas
in
lds
lret
nop
in
fidivs
loope
cmp
in
cli
fdivp
lret
fsub
loope
jmp
cmp
out
in
test
jecxz
orb
repz
leave
lret
aaa
test
jmp
xchg
iret
in
out
fmul
aad
ds
out
cmp
cmc
out
rol
int3
xor
fadds
enter
loopne
loop
repnz
fisubrs
in
out
stc
cld
xlat
idiv
hlt
lock
loopne
enter
int
repz
sub
ret
fld
xor
sar
repnz
xor
sbb
add
mov
mov
xor
out
shl
adc
loop
ds
les
fsubr
shl
enter
ljmp
fdivr
aas
div
ljmp
lret
loopne
in
sar
neg
std
fst
ror
cmp
cli
add
mov
test
clc
leave
aad
xor
out
fstp
ljmp
loopne
hlt
and
leave
testb
adc
cli
int
cmc
hlt
call
in
loop
ret
test
leave
mov
addb
ss
xor
cmp
aas
cmpl
jmp
or
into
into
sub
cmp
sarb
iret
fsubr
lret
aam
cmc
roll
imul
sti
decb
xor
jmp
fnstsw
repnz
cmp
fcomip
aam
loop
ljmp
out
cmp
out
aaa
enter
fcmovbe
jecxz
cmp
cld
fsubp
leave
xchg
fadd
sub
fxch
cli
cmp
aam
into
jecxz
std
aas
stc
adc
ret
loope
test
out
mov
repz
cli
repz
cmp
leave
aas
cmp
and
hlt
xlat
aam
fimull
test
test
repnz
icebp
ss
jmp
jecxz
repnz
ss
test
fchs
cld
mul
out
leave
rorb
out
sub
leave
repnz
sub
xchg
mov
adc
int3
cmp
out
add
ret
xor
cli
out
icebp
fidivrs
sti
icebp
fcmovnu
icebp
test
fisttps
out
out
roll
aad
mov
mov
xor
jmp
enter
vpsubusb
sub
xor
fstpt
add
cmp
leave
out
leave
fdivr
stc
cmp
out
aas
lock
out
test
shlb
aaa
not
xor
aaa
rcl
fiadds
stc
xchg
ret
cmc
hlt
cld
jmp
xchg
ljmp
neg
shr
neg
lock
stc
xlat
rcr
out
fsub
out
call
rcl
jecxz
cmc
xor
icebp
stc
lock
shr
ret
aas
lds
faddl
loope
xor
fadd
enter
aad
loope
sar
aad
dec
out
addl
call
jecxz
aam
cmp
in
imul
ds
out
ds
in
aam
mov
hlt
mov
mov
loope
incb
int3
lret
sarb
idivb
repz
jmp
xchg
icebp
in
sbb
ror
test
ss
jmp
enter
shl
add
fcmovnu
loope
mov
shl
fmulp
jmp
out
call
jecxz
lret
cld
out
cmc
sar
stc
test
icebp
mov
xor
fmul
div
int
fcmovu
cmp
fcos
rcr
repz
fisttps
out
int3
shlb
cmp
stc
sti
in
repnz
shl
cli
out
cmp
loopne
fadd
fsubrp
jecxz
shll
xor
std
std
sub
movb
fimull
xchg
loope
loopne
leave
in
cmp
fdivr
lret
loope
out
fdivrp
xchg
shl
std
jmp
out
mov
les
ret
icebp
ljmp
enter
cmp
sar
test
iret
leave
test
jmp
xor
enter
test
shl
or
sti
xchg
ljmp
test
xor
icebp
stc
cmp
out
movl
xchg
loop
sub
shl
in
out
fnstcw
repnz
clc
ds
loope
cmp
ljmp
repz
xor
loop
in
div
cld
cmp
sub
cmp
fimull
call
int
loop
fcmovnb
sarl
xlat
out
hlt
fcomip
sbb
fadds
out
iret
rclb
int3
cmp
xlat
icebp
sbb
icebp
repz
xchg
fldl
jmp
aad
jmp
enter
int3
sarl
cmp
xlat
roll
mov
fiaddl
sar
xor
les
cmp
lock
in
inc
loope
cli
div
lret
in
or
xchg
xor
aaa
iret
aad
sti
fdivr
clc
faddp
orb
fstp
out
in
in
fsubp
xchg
sub
aad
jmp
in
xchg
faddl
ror
jecxz
fnsetpm(287
cmp
rcl
fstp
in
cmp
fidivrl
mul
mov
xchg
loop
lret
iret
loope
loopne
in
icebp
out
ror
hlt
clc
int3
neg
xlat
rcl
mov
ds
mov
adc
clc
shl
cli
ljmp
fld
in
shl
call
loope
mov
or
xchg
das
int
fnclex
aam
cmc
lret
cld
ds
neg
out
stc
fmul
ficoml
out
loopne
cmp
xlat
xor
cmp
out
fcomp
in
mul
out
ljmp
loopne
ss
div
cmp
enter
aam
loop
ffree
sar
fiadds
leave
rcl
xor
not
shr
les
xlat
icebp
cmp
sar
test
mov
mov
out
leave
fcmovnbe
cli
aaa
loopne
aas
int
fadd
fdiv
xlat
rcr
xchg
out
fistl
in
shr
xor
int3
shl
or
cmp
test
dec
mov
test
jecxz
cmc
repz
xor
hlt
xor
icebp
repnz
rcl
shl
aam
jmp
sarl
mov
mov
loopne
repz
xor
cmpb
rcl
mov
ljmp
mov
jmp
jecxz
xor
cmp
jecxz
fadd
call
std
add
stc
out
lret
in
test
int
lret
cld
out
push
int
sub
add
mov
mov
mov
movzwl
add
mov
jmp
iret
int3
ror
fcmovu
frstor
movsl
je
stos
adc
les
jl
addb
jl
ljmp
ret
fsub
in
lret
fucomi
mov
cmc
lock
aad
ret
out
out
lret
cmp
cmp
hlt
xlat
loopne
ret
cld
ret
lea
jecxz
xchg
in
sub
cmc
call
xor
xlat
stc
rolb
in
test
int
out
test
xor
out
hlt
std
fcmovbe
fcmovbe
adc
fcmovnbe
fdiv
fcmovnu
les
mov
icebp
jmp
icebp
sub
aam
aad
std
lock
loope,pt
jecxz
incb
sti
filds
fld
std
icebp
aam
testb
jmp
jmp
fists
xchg
out
int3
in
xor
stc
cs
leave
cmc
enter
cmp
ds
cli
test
call
stc
lret
shr
clc
shl
sti
stc
in
hlt
ret
in
mov
test
hlt
clc
divb
mul
out
ljmp
out
icebp
and
enter
enter
test
into
xlat
jecxz
shl
call
cli
fadd
hlt
out
cld
fstpt
ret
aad
leave
mov
ror
rcl
xor
jmp
ret
cmp
xchg
in
out
sar
in
into
ret
jmp
ss
std
loope
cmpb
fdivr
fadd
xchg
mov
loope
repz
loope
cmc
repnz
test
filds
fucomp
fsubr
xor
aad
fidivrl
idiv
xlat
rcr
jmp
cmp
cld
add
fcmovnu
ljmp
test
xchg
rcl
icebp
shr
fcmovu
leave
stc
shr
idiv
into
shr
fdivp
jmp
jmp
in
out
ljmp
lock
ds
sarl
hlt
out
and
jecxz
jmp
out
nop
xchg
fsubp
out
xor
imul
cmp
std
aam
test
fdiv
sti
filds
nop
icebp
xorb
cmc
mov
cmp
test
adc
xchg
sub
loopne
jmp
fdivrs
cmc
std
ss
ds
fcomp
test
out
mov
loop
incb
ror
out
aam
repz
aam
test
cmp
cmp
loope
fdivrp
adc
jmp
in
sub
into
ror
lret
repz
shl
test
and
mov
xor
f2xm1
sub
lea
in
shlb
cmc
in
repnz
rolb
roll
out
int3
or
ss
cmp
cmp
sbb
test
mov
nop
hlt
shr
out
les
rcl
fistpll
frndint
sar
cmc
in
fsubp
ljmp
mov
lea
xor
icebp
clc
std
lret
test
aas
test
faddp
sti
call
ljmp
xor
lock
hlt
cmp
cmp
mov
rcl
cld
repnz
loopne
in
fcomi
icebp
leave
xor
iret
cmp
cmp
add
mov
sti
sbb
jmp
loopne
sub
stc
std
div
loope,pt
aam
sbb
out
xor
addb
sub
ret
out
in
sti
lret
out
cmp
repz
out
xchg
orl
mov
jmp
xor
call
in
repz
hlt
cmc
fmuls
mov
repz
jmp
xor
lret
leave
fsubr
cld
cmp
ffree
icebp
testb
int
cli
nop
xchg
jmp
cmp
xlat
aas
cld
ds
aam
loope
call
out
test
nop
icebp
and
in
iret
hlt
loop
idiv
ljmp
idiv
out
loope
in
aam
imul
fucom
repz
in
out
jmp
ss
lret
aaa
xor
cmp
roll
testl
cmp
cmc
cmc
lock
int3
lock
lret
repnz
fildl
jmp
in
out
out
into
lock
repnz
cmp
out
in
shl
cmp
sar
mov
jmp
in
div
iret
clc
xor
loope
or
sahf
add
add
iret
leave
ret
int
xor
pop
and
dec
ss
addb
jl
fcom
clc
add
jecxz
test
loope
repz
orb
shl
out
lock
cmp
sti
aad
cld
std
repnz
jmp
in
cli
ret
in
jmp
in
out
xor
fisubrl
int3
int3
idiv
repnz
fidivrl
fcmovnu
in
ljmp
aaa
shlb
aaa
fcmovu
sti
cli
cmp
cmp
aad
sti
rol
cli
call
sti
test
lds
into
call
out
xor
clc
clc
repnz
loope
stc
std
test
std
icebp
test
jmp
jecxz
loope
out
cli
xor
cmp
cmp
fsubr
add
in
out
out
out
test
hlt
out
imulb
repnz
cmp
cli
les
lock
aam
fsub
rcr
call
addl
xor
cmp
enter
shl
call
out
fdivp
rolb
incb
dec
shr
aam
cmp
std
fadd
lret
cld
cld
lock
iret
adc
add
fdivrp
shr
mov
jecxz
in
repnz
not
rcl
ss
cmp
jmp
jmp
hlt
mov
test
hlt
cmp
cmp
xor
idiv
loop
into
aad
xchg
aam
std
enter
xor
not
jmp
enter
clc
out
loopne
hlt
test
fmull
jecxz
xchg
cli
jmp
jecxz
ret
cli
in
lret
cmp
fcomip
in
jmp
test
rol
lock
fidivl
jmp
into
repnz
movl
std
fimuls
aaa
iret
cmp
out
iret
lret
hlt
test
loope
cmc
xlat
jmp
std
xchg
aam
sti
jmp
cmp
jecxz
test
jmp
aad
into
cmc
xor
repnz
rol
jecxz
ret
stc
xchg
nop
out
cld
in
divl
into
int3
in
cli
fcmovu
lock
ffree
in
call
fstp
out
roll
test
fucomi
cmp
fstp
icebp
rol
ds
xchg
cld
in
ret
icebp
lock
iret
repnz
idiv
xlat
cld
cld
cmp
cld
rcl
fstp
aam
ljmp
out
xchg
call
int3
enter
out
cmc
cmc
cmp
xchg
cld
shl
in
out
mov
jecxz
cmc
iret
xchg
shrb
idiv
xlat
in
cmp
cmc
rcr
cmp
ds
rcr
call
cld
test
out
jmp
loop
in
cmp
out
aaa
stc
ds
icebp
cmp
ret
mov
jecxz,pt
lret
iret
jmp
filds
xor
cmp
fnstsw
xchg
fucomi
clc
inc
out
in
out
jmp
hlt
shlb
out
jecxz
stc
cmc
rcr
lret
les
lret
mov
out
ret
jmp
cmc
out
loop
in
out
into
leave
shl
lock
repnz
ret
in
clc
testb
orl
out
into
cld
fcmovb
in
rcl
ds
clc
fcomip
jmp
mov
ljmp
leave
ss
hlt
aam
xor
sti
roll
loop
iret
xchg
mul
imul
cmp
rcl
aam
jecxz
aas
clc
leave
out
loop
stc
enter
divl
cs
neg
cmp
idiv
in
loope
fsubp
xlat
and
lret
and
ror
iret
fcmovbe
into
xor
cmp
ds
clc
cld
loopne
cld
jmp
mov
aad
jmp
xor
enter
lret
shr
into
cmc
rol
ret
stc
movb
fisttpl
in
leave
aam
loop
enter
repz
icebp
sti
ret
aam
fisttpl
out
xchg
icebp
test
out
jmp
fdivs
fdivrl
cli
sti
repnz
aas
fiadds
int
mov
cld
out
sub
aaa
cmc
jmp
aam
fdivr
test
cmp
stc
mov
ljmp
test
shl
lock
aaa
call
repz
aam
rol
fsubrp
and
mov
loope
iret
cli
ror
aaa
shl
ror
std
aad
aas
fnsave
lea
jmp
rcl
int3
iret
rol
shll
or
cmpsl
sarb
jl
repz
fiadds
fisttps
ret
fyl2x
int
ror
cmp
cmp
aas
sar
ds
cld
in
shl
ljmp
out
hlt
xlat
aam
int
aas
adc
sbb
xlat
int3
loopne
orb
out
icebp
ror
icebp
out
idivb
cmp
jecxz
iret
into
cli
aam
decb
fisttpll
das
xlat
out
repz
ss
fucom
cld
ds
rol
cld
shr
leave
jmp
std
fsubr
loope
ror
xor
repnz
stc
repz
cli
cmp
cmp
aad
hlt
fdivr
addb
mov
xchg
lock
loopne
lret
sub
xor
cld
loopne,pt
lret
add
int3
in
icebp
add
int
cmp
xor
shr
lock
lret
cld
fimuls
in
clc
filds
in
stc
out
fst
cmp
dec
adc
aad
test
sti
cld
lret
xchg
lock
lret
les
in
xorl
addb
std
testb
xchg
jmp
into
loopne
not
int3
idivl
icebp
cmpl
ret
mov
jecxz
and
xor
rcl
int3
xor
shr
cmp
cmp
not
fidivrl
xlat
out
lret
cld
lock
repnz
out
repz
int
cli
xor
xor
shl
idiv
incb
cld
inc
xlat
shlb
fcom
clc
aam
out
sti
repz
ds
stc
hlt
call
in
loopne
cld
mov
cmp
rcr
fdivrs
ljmp
sbb
sti
int
iret
cld
int
sub
loopne,pt
cmc
xor
enter
cmp
rcl
xchg
leave
fisttpll
lret
mov
in
cmp
int3
out
out
aas
out
in
shl
repz
ljmp
enter
mov
fnstenv
int3
in
cli
jmp
in
fcomp
ffree
rcl
enter
fadds
pop
lret
divb
clc
fstp
repnz
out
xlat
out
icebp
in
ret
mov
mov
fsubrp
in
out
cli
call
stc
fmul
cmp
fpatan
aam
fcomip
add
sbb
cli
jmp
jmp
loope
loopne
ljmp
neg
iret
fcmovu
sbb
call
sti
rcr
aad
int
in
leave
div
fucomp
cmp
shr
into
aad
roll
std
sti
fcmovne
in
jmp
bnd
call
rcl
clc
fdivrs
ljmp
fisttps
ror
test
cmp
cmp
ljmp
hlt
fldl
nop
fcoms
aaa
jecxz
sub
cmp
sar
lock
fcmovnbe
fcmovnbe
sbb
call
repz
cmp
lret
cmp
xor
ljmp
ds
std
sub
fsubp
call
clc
fsubr
std
xlat
cmp
in
shl
add
call
in
in
mov
icebp
enter
cli
das
cmp
cmp
out
hlt
cli
mov
xor
lea
rcr
cmp
repz
xor
cmp
out
out
sti
xchg
orl
lock
jecxz
aad
out
std
cmp
cli
aam
cmp
loopne
cmc
mov
cli
enter
out
xchg
xlat
divb
in
stc
out
aam
cld
fcmovu
loopne
iret
loope
fcomip
bnd
loop
iret
fld1
repz
out
loope
stc
out
aam
in
shl
cld
repz
int
neg
sub
adc
int
lret
in
fucom
fld
call
cmp
rcl
repz
jmp
in
iret
xchg
divb
rcr
fstp
into
jmp
cmc
loopne
call
sti
fiaddl
shr
repnz
test
hlt
out
cmp
and
cld
in
out
les
leave
int
lock
xor
rcr
jmp
lock
iret
jecxz
jmp
jecxz
test
fimull
lret
out
cmp
lret
xorl
sbb
and
xorl
mov
movzwl
cmp
jmp
lret
rcr
int
orb
icebp
faddl
push
sarl
jl
clc
decb
xor
cmp
jmp
sti
idivb
rcr
xchg
mov
rcl
int3
shl
repnz
xor
in
rcl
idivl
out
in
ret
aad
cmp
loop
incl
aaa
repnz
ljmp
cmp
fcmove
jmp
ret
lock
mov
flds
fucom
fsubr
das
ss
loop
cmc
int
cmp
cmp
aas
std
ret
leave
faddl
cli
in
int3
loope
rcl
shll
xor
enter
aas
std
in
aas
loope
fsubp
cmp
mov
in
jmp
int
repz
cmp
int3
int3
cmp
in
hlt
in
xchg
test
in
jmp
stc
xchg
cld
cmp
repnz
test
cmc
in
aam
int
in
ret
xchg
clc
mov
xchg
fdivr
cmp
inc
div
jmp
fdivrl
cmc
xor
adc
std
fmuls
clc
enter
xchg
ffreep
loopne
neg
fadd
lock
clc
ds
cld
cmp
cld
and
lret
fldcw
out
xor
cmp
loop
rcr
xor
test
leave
sti
loope
out
lock
loop
in
shl
not
cmp
stc
ds
cmp
ds
mov
xchg
loope
dec
int
cmp
ljmp
jecxz
aam
xlat
fmul
repz
call
mov
or
ss
mul
xor
aad
fidivrs
faddp
mov
loop
mov
in
call
in
lret
cmp
cmp
iret
hlt
cmp
sar
jmp
xlat
xchg
lret
enter
call
shll
cmp
cmp
sarl
ret
add
out
jecxz
loopne
xchg
rolb
aam
iret
cld
icebp
into
sar
cmc
into
xor
loop
loopne
xchg
xchg
leave
xchg
fisttps
leave
xor
cmp
cli
cld
repz
cld
fcomp
std
fcmovu
in
enter
ret
mov
aaa
in
repz
lret
cmp
xlat
lret
test
rcr
add
stc
and
mov
ret
out
cmp
fnstcw
icebp
in
out
fistpll
incb
cld
icebp
or
into
iret
out
lock
out
stc
cmp
iret
cmpb
fcmovbe
cli
cmc
rcr
sar
mov
loopne
out
loopne
out
call
xor
not
repnz
lret
roll
jecxz
fucomp
aad
fdiv
stc
cld
lret
xor
rcl
aam
icebp
repz
cld
ror
cmp
shl
jmp
imul
mov
cld
jmp
rcr
aaa
fmul
aaa
icebp
lret
cli
cmp
ret
xlat
out
int
orb
into
not
in
cmp
fcom
cmp
cmp
sti
fcmovbe
mov
mov
mov
rorl
fsubr
hlt
out
jmp
fsubr
rcr
cmp
out
aam
cld
in
cli
jmp
int3
in
loope
in
into
lock
xor
repnz
cmp
adc
in
fsubr
out
out
mov
int3
in
shl
iret
ss
xor
xlat
aas
hlt
into
cmc
loop
loop
ljmp
loopne
ror
sub
icebp
sti
jmp
cmp
neg
sar
aam
in
out
xlat
sti
leave
jmp
repz
clc
neg
enter
int
loopne
test
fistpll
adc
nop
addb
ret
cmp
or
into
rcl
cmp
aad
mov
iret
mov
shl
cmp
std
in
cmp
ss
stc
cmp
stc
loopne
test
mov
or
in
sub
iret
rol
test
ret
cmc
loop
les
ret
test
clc
jecxz
mov
icebp
shl
out
xor
ljmp
aad
out
loope
decb
mov
xchg
lret
shrl
lret
in
fxch
neg
clc
std
mul
cld
iret
in
cmp
mov
ret
hlt
in
ljmp
aam
leave
in
xlat
xor
lret
cmp
lret
cld
testb
xor
lock
out
in
cmp
aad
fldl
in
fmul
repnz
mov
movzwl
jg
xor
sub
jmp
rcl
rcr
fcmovbe
xlat
ja
inc
mov
fadd
jl
addb
jl
das
call
cmp
cmp
not
shl
cmp
fptan
enter
in
std
shl
xor
aad
std
cmc
lock
in
enter
fsub
clc
icebp
cmc
push
mul
cld
into
jecxz
out
aaa
not
cmp
hlt
jmp
cli
cmp
repz
rcl
fsubr
loopne
and
xchg
xor
hlt
xor
out
rcl
hlt
fstp
int3
jecxz
sbb
clc
test
out
cld
nop
rcll
lret
call
out
adc
bnd
in
mov
iret
out
hlt
xor
rol
sti
aas
cmp
cmp
in
stc
xchg
test
and
mov
out
in
test
cmp
fndisi(8087
clc
xchg
cmp
in
dec
ljmp
ss
repz
out
cmp
rcr
and
mov
lret
mov
xor
ss
into
in
frndint
in
clc
xor
jecxz
testb
test
ret
imul
in
lock
rcr
iret
hlt
ret
rcr
fst
mul
jmp
repz
loope
sub
fcom
fmul
test
leave
mov
in
out
xor
int
xlat
std
fnstenv
cld
cld
faddp
loope
stc
repnz
ret
icebp
or
xchg
jmp
out
fucomp
repnz
cmp
cld
aad
cmp
ret
fcmovbe
mov
in
fmull
loopne
enter
sar
ror
loop
aad
xlat
add
xchg
lret
cmc
mov
out
iret
cli
das
aaa
xlat
call
sar
icebp
repz
jmp
clc
call
fadd
jmp
loop
ror
aam
fcmovnbe
xor
in
ds
rcl
fildl
in
out
mov
ljmp
in
cld
sti
cmp
fstp
out
fsincos
jmp
mov
lret
cmp
clc
xor
xorl
ret
jecxz
shr
in
mov
int
call
div
loopne,pt
cli
aad
xlat
sar
in
out
leave
cld
in
cli
iret
fidivs
int
cmp
into
rol
jecxz
stc
ret
mov
sbb
icebp
jmp
mov
cmp
leave
iret
rcr
lret
rcl
into
ret
ds
testb
out
jecxz
in
test
in
int3
rolb
out
cmp
fcom
out
xchg
fcmovu
loope
int
xor
leave
shl
xor
fsubr
push
into
hlt
ds
stc
sar
mov
out
ljmp
xor
cmp
lret
fadd
iret
std
jmp
xchg
ret
roll
stc
fsincos
std
cmp
rol
leave
mov
clc
fcmovnu
sti
loop
xchg
iret
loop
in
cmp
cmp
in
loopne
hlt
hlt
lock
fcmovbe
fmuls
repnz
shr
jmp
fnsave
cmp
fadds
fsubrp
lret
fstp
jmp
xchg
mov
xor
les
in
call
xor
shl
rol
test
leave
sti
int3
cld
std
fcmovnb
xchg
int
ret
test
ljmp
aam
in
rcr
jecxz
ret
fsubr
xchg
in
xchg
call
out
enter
fldl
out
out
rcr
in
out
mov
dec
lock
leave
sar
cmp
aam
lock
idiv
shl
jmp
testl
rcl
xor
aam
and
sti
sar
sbb
jmp
in
fistl
cmp
fmul
repnz
shl
test
sti
addb
test
out
xor
aaa
repz
ds
cmp
lock
test
addl
nop
xchg
in
lock
int
in
aam
fucomip
cli
cmp
in
mul
ds
leave
mul
jecxz
lock
aaa
out
jmp
hlt
hlt
loopne
xlat
sar
sar
sbb
int3
int3
in
int
iret
xchg
out
div
in
iret
mov
jmp
jmp
rcl
rol
fstp
mov
mov
addb
jl
fxtract
in
jmp
xchg
loopne
addl
fsubp
xor
lock
cmp
aad
rcl
mov
call
fisttpl
mov
loop
ret
test
fsubr
cld
loope
cmc
ret
xlat
in
aam
fucomp
xchg
test
lret
xchg
into
out
cmp
enter
rcl
cmp
repz
ljmp
mov
jmp
in
divb
cmp
fnstsw
fst
shl
out
icebp
idiv
cli
in
cld
loop
test
aam
rcr
cld
cmp
aas
call
stc
cmc
les
addl
cld
cmp
xchg
repnz
neg
stc
lock
fld
clc
in
cmp
decl
lret
in
loope
nop
loop
iret
stc
cs
cmp
int
aam
cmp
ret
loopne
cli
in
fld
cmp
mov
addb
lret
cmp
clc
xlat
clc
rcr
cmc
xlat
aam
jecxz
loope
xchg
loopne
mov
loope
ljmp
out
out
cmp
hlt
jmp
sbb
out
ffree
enter
int
xchg
out
xor
aaa
fdivrs
icebp
aaa
repz
lock
cmp
rol
mov
lret
jmp
movl
in
lret
neg
fnstenv
hlt
in
ret
cmp
hlt
ret
mov
in
std
cli
in
das
cmc
enter
fdiv
xor
hlt
into
sbb
faddl
fsub
xlat
in
iret
fsubrp
hlt
out
cmc
loopne
lock
aam
in
cmp
shl
aad
aam
hlt
xchg
fucomip
fadds
in
not
jecxz
hlt
in
ss
sarb
aad
cli
cmc
cmp
sar
fcmovnu
sti
ficoml
test
lret
repz
sar
stc
loop
hlt
cld
xchg
enter
ljmp
ds
shl
xor
ljmp
lret
leave
jmp
out
fsubrp
fisttps
cmp
ror
xor
xor
enter
xchg
ffreep
jmp
jmp
hlt
int
icebp
ss
cmc
in
xchg
xchg
leave
jmp
ljmp
loope,pn
stc
ror
sti
sti
stc
lret
aas
xlat
and
test
loop
mov
mov
clc
repnz
in
aam
idiv
fxch
ds
loop
hlt
lock
fldl
xchg
repnz
imul
jmp
aam
call
idivl
movl
cli
jecxz
into
xor
rol
call
test
adc
repz
call
xchg
jmp
icebp
aad
jmp
stc
int3
lret
cld
xor
fcmovb
repz
vpaddusb
in
or
cli
in
in
das
out
shlb
shr
addl
fadd
test
into
in
shl
in
jecxz
in
hlt
std
in
lret
cmp
cmc
sti
out
leave
test
in
out
loopne
in
fdivp
rol
ret
rol
icebp
shrl
repnz
in
cmpl
or
loopne
ret
sti
lret
fucomip
fucom
lock
shlb
icebp
cmp
xor
cmp
loopne
test
in
int3
test
in
jmp
lret
leave
fucomp
lret
std
leave
mov
cli
fsubrp
jmp
jmp
xor
rcl
fucomi
rol
xchg
xlat
xlat
jmp
out
mov
dec
loope
mov
ret
in
stc
out
ljmp
cmp
test
idiv
addb
xlat
aaa
jmp
xor
cmp
std
cli
repz
stc
into
test
aad
hlt
fadd
leave
mov
mov
jmp
cmp
jecxz
jecxz
aam
cmc
cmp
xchg
fucom
cmp
out
fists
stc
out
into
into
cmp
call
fsub
fsin
rorl
in
jecxz
xchg
hlt
sub
loope
jmp
les
into
leave
fcmovbe
cmp
cmc
addb
incl
loopne
sarb
sti
cli
repnz
icebp
idiv
in
cli
repnz
sbb
decl
int3
jecxz
into
xchg
xor
jmp
ljmp
cmp
lea
mov
jmp
mov
lret
fnstenv
push
pop
or
iret
jl
addb
jl
shl
cmp
jecxz
loop
xlat
cmp
xchg
xchg
mov
in
in
mul
call
cli
ror
flds
loop
loope
out
enter
out
repnz
lock
lret
int
ds
mov
xchg
cld
lock
cs
lret
ss
movl
test
lock
enter
icebp
cmp
lret
in
cmp
idivb
loopne
cld
xlat
iret
imul
ljmp
lock
ss
clc
cmp
repz
les
loop
stc
in
sti
mov
int3
icebp
fisubrs
repz
cmp
lock
sbb
shl
fucom
clc
cmc
ret
mov
stc
test
repz
add
ror
shl
lret
test
cld
in
sti
cmp
std
out
mov
mov
fnstsw
lret
xor
cmp
ss
sarl
into
add
adc
mov
mov
hlt
in
out
shl
enter
int
icebp
xlat
in
out
cmc
fcomi
fsubr
loopne
call
fdivp
xor
stc
test
aam
sti
adc
lds
fimuls
call
fsub
ss
cmp
jecxz
rol
leave
rcr
fcomp
incl
nop
shrl
xlat
jmp
xor
shr
int
icebp
sar
cmc
fadds
xchg
mov
fucomp
jecxz
ss
int3
in
clc
cmc
aad
hlt
ret
xlat
in
in
in
loopne
out
hlt
xor
out
aaa
ljmp
jecxz
cmp
aam
out
in
enter
call
ret
xor
lret
cmp
ss
loop
fmul
std
in
ljmp
aam
xor
lret
jmp
rcr
fdivr
xlat
into
cld
test
les
mov
icebp
int
xor
divl
in
enter
fistpll
cmp
xor
mul
clc
fsub
mov
test
hlt
ljmp
cmp
cld
test
xlat
xchg
loopne
jmp
loope
int
icebp
cmp
cmc
int3
call
movl
leave
xchg
iret
std
jmp
loope
out
leave
ljmp
ffree
sarl
stc
test
out
mov
lret
in
repnz
cld
hlt
shr
fcomip
int
in
lds
icebp
loop
std
shl
fidivs
out
cmc
jmp
in
cmp
sarl
clc
shl
enter
loopne
leave
rclb
aad
stc
enter
sar
cmc
aad
loop
roll
in
iret
cmp
xchg
roll
in
sti
hlt
leave
incb
in
shr
xlat
in
cld
int
mov
ror
rcl
stc
into
xor
into
iret
shl
fdivr
sti
aas
addb
mov
fsub
sub
rcl
cmp
repz
filds
jecxz
fisttpl
sti
clc
in
or
aaa
ror
iret
repnz
cmp
vpmulhuw
rolb
xlat
int
mov
fsubr
aad
into
into
cmp
xor
ror
cli
sti
mul
xlat
loope
repnz
cmp
or
icebp
fucomip
repz
iret
out
cli
clc
xor
cmp
loopne
cmpb
xchg
sbb
iret
sub
icebp
out
out
out
int3
imul
hlt
shl
stc
filds
jmp
fucomip
mov
iret
xor
fidivrl
cmp
cmc
int3
std
shl
loope
cmp
call
idiv
ljmp
iret
hlt
das
cs
xor
iret
in
aam
stc
addb
fcmove
ljmp
addl
fcmove
ljmp
cli
clc
in
cli
fisttps
xor
rol
xor
loop
repnz
leave
out
sti
ret
shl
hlt
lock
mov
jmp
out
in
stc
shr
lret
bnd
int3
ret
repnz
out
jecxz
enter
lret
cmp
mov
shl
aam
icebp
ljmp
fadd
lds
je
mov
jmp
ror
lret
int
loopne
and
outsb
sarl
add
fadd
mov
fsubp
loopne
filds
in
iret
fidivrl
enter
loopne
ds
ret
xlat
fdivp
mov
lea
int
iret
imul
cs
fucomp
cmp
int
stc
test
idivl
mov
in
cld
lock
xor
xlat
xlat
sarl
ret
clc
cmc
stc
jecxz
jmp
loope
mov
out
fucomp
shl
in
in
leave
cs
vcvtdq2pd
into
int3
div
in
roll
ret
lret
and
xchg
aam
out
rcr
cmp
rcl
in
clc
sti
in
loopne
loop
in
jmp
xchg
fcmovne
in
out
aaa
aad
iret
sub
into
cld
cmp
test
rolb
out
addl
shll
rcl
shl
ds
fidivrs
adc
aas
fsub
out
mov
loope
loop
in
out
in
iret
lock
cmp
ror
leave
or
int3
hlt
rcl
jmp
in
flds
aas
out
xor
cmp
cmp
rcr
ret
stc
jecxz
loope
test
loop
repz
icebp
cmp
fidivrl
stc
not
cmp
div
sti
vpandn
cmp
in
xchg
div
aam
xor
rcr
rorb
int
test
xchg
leave
hlt
out
in
out
iret
cld
lret
fadd
fadd
ljmp
mov
aam
xor
cmc
enter
aas
cmp
ds
xlat
xchg
fdivp
and
in
in
cld
out
addb
sub
xor
int3
cmp
cmp
aas
in
repnz
lret
aad
loop
leave
int3
test
repnz
jmp
lock
fdivr
repnz
mov
mov
out
loop
cmp
out
into
aad
sti
mov
cld
fcmovnu
fcompp
jecxz
in
cld
in
xor
xor
icebp
lret
cmp
cli
cmc
lock
out
mov
lret
test
loopne
leave
out
mov
xlat
in
shr
test
cs
aaa
ror
iret
aas
ret
shr
rcr
fmul
xor
icebp
fcmovnu
loop
rcr
out
cmc
cmp
xlat
cld
shl
aam
addb
sub
fstp
enter
out
cs
enter
iret
clc
icebp
not
ret
test
fimull
cld
jmp
sub
xor
cmp
out
aam
cmpl
mul
enter
mul
loopne
rorb
enter
repnz
or
out
mov
hlt
out
hlt
hlt
mov
incb
lock
int
aad
call
cld
xchg
icebp
xchg
std
lock
ret
int3
fcmovne
xor
rcl
in
fmulp
hlt
aas
shl
rcl
loope
pop
mov
lret
in
xchg
jmp
aam
xor
cld
shlb
cmp
cmp
fsubp
lret
fcompp
or
leave
nop
shr
ffreep
jmp
fidivs
in
xorl
neg
testl
fildll
aaa
icebp
fxch
repnz
cmp
loopne
aas
fsub
test
test
in
out
iret
in
adc
cmp
ret
jmp
neg
into
test
idiv
jecxz
test
test
lea
ftst
sub
ss
test
cld
enter
fdivr
popl
in
in
cmp
sti
iret
jmp
lock
stc
add
jmp
mov
mov
jmp
lock
in
into
call
ljmp
sbb
jecxz
out
loopne
out
loopne
hlt
cmp
out
enter
std
addl
loopne
xlat
loope
loope
in
mov
out
lret
in
fnop
cmp
out
mul
loope
fdivr
fxch
std
div
cld
std
in
lret
xlat
in
jmp
fstp
in
loope
call
out
roll
test
test
loopne
into
xchg
xlat
iret
lret
jecxz
xor
cmc
lock
not
ljmp
enter
or
mov
in
xlat
cmp
iret
aam
incl
out
loopne
sub
add
xor
add
jmp
ret
lret
enter
dec
inc
xchg
cld
jb
jl
addb
jl
xchg
jmp
icebp
in
aam
shl
neg
stc
cli
cli
cmp
lock
dec
mov
jmp
in
filds
jecxz
fdiv
aad
shlb
out
in
out
mov
nop
out
cld
cmp
jmp
shlb
cmp
repz
in
xlat
shr
xchg
sti
leave
lea
jmp
jmp
cs
fnstsw
cmp
xchg
mov
or
aad
aad
repz
ss
repnz
fcmovne
ret
lret
incb
aad
out
shlb
sub
xlat
fdiv
faddl
xchg
stc
clc
mov
sub
aam
aam
leave
lret
cmp
in
repz
sbb
fstp
loop
fsub
mov
shr
fnstcw
sar
aad
sarl
xor
rcr
movl
ret
jmp
cs
out
jmp
lock
ss
aad
ror
test
out
loop
mov
iret
int
in
nop
ljmp
mul
repnz
xlat
sarl
in
ret
vpsubd
xchg
aad
stc
in
div
lret
lret
out
cmp
fdivr
mov
cld
in
std
sub
shr
ss
std
out
in
xor
jecxz
xbegin
cli
div
jecxz
fmul
in
aad
shll
ss
cmc
cmp
shr
fabs
out
xchg
stc
cmc
fdivr
mov
mov
aad
xor
jmp
out
ljmp
cld
mul
flds
into
out
in
rcl
aam
fcos
cmp
out
jecxz
int3
iret
filds
loopne
in
into
loopne
sub
int3
repz
in
lock
fstp
ret
lock
lret
std
adcl
sarl
cmp
fstpt
sti
cmp
cmp
iret
fchs
cmp
jmp
orl
icebp
out
xor
xor
shl
leave
jmp
and
sti
mov
cld
neg
leave
sub
loopne
jecxz
cmp
xlat
hlt
fildl
out
cmc
repz
loop
nop
out
in
into
aaa
aaa
out
sti
cmp
aad
sti
cmpl
mov
xchg
hlt
shr
into
loop
in
lret
xor
out
repnz
loop
cmp
repz
fisttps
mov
aad
imul
fcmovb
hlt
fdivrs
out
fbstp
fsub
test
cmp
fmull
rcl
out
repz
not
idiv
call
iret
cmp
shr
jmp
loope
ror
cmc
cmc
xchg
icebp
cs
fnsetpm(287
iret
hlt
in
ljmp
out
clc
out
clc
iret
ret
lea
jecxz
into
fsub
icebp
stc
fst
xor
fld
test
jmp
out
mov
in
call
leave
jecxz
xor
repnz
sti
cmp
rcr
test
xlat
clc
jmp
xchg
fucomp
repz
jmp
xor
fstpt
jmp
int
in
cmp
cmc
xchg
clc
cli
mov
xchg
loop
sub
repz
xor
shl
cmp
mov
jmp
xchg
jecxz
orb
iret
into
in
div
cmp
lock
out
lock
fcmovne
fisttpl
in
loope
in
sti
repnz
jecxz
cmp
mov
decb
incl
fdivs
enter
shl
or
ret
orl
and
aad
call
iret
shr
add
in
fdivr
addl
xchg
sti
ret
cmp
in
into
loopne
out
loop
ffreep
lret
out
rol
roll
enter
out
out
fsubp
clc
loope
out
cmp
leave
mov
std
loopne
mov
xor
lock
lret
cmp
cmp
out
rcr
loop
repz
neg
fdivrp
leave
in
loope
shl
ror
out
rcr
int
repnz
ljmp
jmp
jmp
ret
aad
lret
enter
pop
xchg
aaa
jp
jl
addb
jl
and
xor
repnz
xor
loopne
int3
ffreep
shl
in
mov
clc
lret
clc
nop
rorl
cmp
xor
sti
imul
int
push
xchg
mov
out
fdivs
out
idivl
loopne
rcr
loop
icebp
frndint
loope
mov
fcomip
fxch
vpsrld
cmc
xlat
cld
cmp
jmp
out
out
fsubr
iret
sub
ret
sti
call
cmp
shl
loop
xlat
fcmove
hlt
lret
mov
mov
xor
ror
xor
sti
in
cmp
in
enter
adc
rcr
addb
out
loop
fsubr
jecxz
aam
fcmovne
lret
repnz
ror
cmp
decb
cli
int
roll
ljmp
cld
cmc
int3
aad
iret
out
out
out
hlt
fdivr
test
ljmp
sti
xlat
cmp
call
loopne
fadd
cld
in
int
clc
test
rcr
jmp
int
cs
out
loop
in
fcmove
iret
rcl
icebp
cld
addb
out
rol
shl
jmp
out
cmp
rol
fucomi
loopne
in
loope
rcr
sti
cmp
test
fucomip
test
lret
ret
ljmp
lret
cmp
ljmp
sub
jmp
in
ret
mov
loop
shl
mov
repnz
repnz
rcr
repnz
ret
decb
into
fisttpl
ror
xor
lret
hlt
xlat
sub
cli
stc
mov
loop
call
xchg
jmp
fcom
xor
out
out
ror
stc
fistpll
aas
cld
ljmp
mov
shl
hlt
ljmp
rcl
sbb
ret
dec
stc
fmull
int3
fldcw
aaa
lock
ret
test
call
jmp
fldcw
int
imul
aas
repz
adc
std
aam
repnz
fcmovne
std
fisttps
out
lock
int
int
in
repz
out
aad
loop
lret
test
icebp
loope
in
cmc
xchg
xor
aad
cmp
into
xor
int
jecxz
filds
std
jmp
std
loope
ret
xor
out
fdiv
in
stc
leave
jecxz
aad
fsubp
addl
jmp
orb
repz
leave
leave
xlat
cmc
in
sar
int
sar
loopne
call
icebp
fists
into
xor
repnz
sarb
aam
cmp
test
jmp
lret
mov
orl
enter
repz
in
sbb
mov
fucomp
cld
ror
sti
out
call
jecxz
xor
into
repnz
loope
test
cld
sar
xchg
lret
fcomip
les
mov
fildll
ror
leave
fdivrs
out
cmp
icebp
cli
cmp
sbb
mov
ljmp
lock
int
cld
test
cmp
clc
sub
fimull
lret
int
loopne
fstp
shr
std
ss
out
std
sbb
in
test
enter
mov
shl
sub
ss
cmp
lret
in
aad
in
in
aam
filds
jmp
jmp
in
in
stc
jecxz
loop
aam
adc
fadds
std
hlt
ljmp
iret
int3
fsub
repz
sar
call
int
enter
test
xchg
aas
stc
into
in
imul
fdiv
leave
cli
in
into
sar
jmp
in
dec
cld
cld
loop
repnz
hlt
aaa
std
out
call
ds
loope
cmp
aam
ret
loopne
in
xchg
call
lock
fcmovbe
sub
xchg
hlt
rol
aam
mov
xchg
out
call
out
fldln2
std
ljmp
adc
jmp
enter
vfrczpd
sarb
aam
xor
stc
cmp
cmc
sti
clc
into
sar
leave
ror
mov
out
out
ljmp
cmp
add
jmp
rol
rcr
jbe
sti
das
mov
jl
add
jmp
loope
loop
aam
leave
inc
jmp
cmp
in
sti
roll
icebp
in
jmp
cmc
cmp
stc
faddl
orb
out
enter
idivl
fcmovu
shlb
sbb
out
add
cli
in
jecxz
shl
int
into
hlt
aad
lret
xlat
aad
fcmovu
test
stc
rorb
in
mov
xor
jecxz
cmc
roll
icebp
in
test
leave
sti
xchg
std
call
aaa
aam
sarl
sarb
cmp
out
fdiv
shl
out
add
loop
lea
jmp
jmp
into
cld
rcr
testb
fsubr
jmp
fucomp
in
call
call
sarb
repnz
xor
ds
cli
mov
loopne
mov
das
xor
lret
fdiv
clc
aas
stc
std
lock
loopne
sti
shr
xchg
call
out
in
vpmaxsw
fcomi
ror
aas
ljmp
leave
cmp
test
jmp
shlb
lret
xor
into
fst
ljmp
jmp
mov
rcr
lock
xchg
lea
int
out
xor
aam
repnz
rcr
out
bnd
aam
aad
out
fcomi
leave
std
ljmp
fnstenv
enter
into
out
rolb
aad
xlat
cli
fimuls
iret
fdivp
sub
ret
cli
in
repnz
test
hlt
call
adcb
test
jmp
aam
cmp
shll
icebp
lret
rcr
cmp
iret
stc
mov
mov
aas
jecxz
jecxz
test
mov
repnz
sti
out
aam
fcmovnu
ss
repnz
cld
cmc
fsubp
fcmovne
in
mov
lea
clc
aad
call
out
cmp
call
test
out
xchg
dec
mov
cli
shr
aam
ss
clc
fucom
add
call
fucomi
lock
mov
int
fdivr
cmp
ret
loopne
fadd
leave
loopne
ljmp
mov
cs
xor
cmp
int3
jecxz
fsub
sti
ret
loop
xchg
icebp
xor
in
enter
cmp
jmp
sti
stc
clc
clc
std
addb
out
sti
iret
adcl
ss
out
out
repz
iret
xor
jecxz
mov
ret
lds
in
jmp
ror
in
fst
fdivp
aad
stc
iret
jecxz
loop,pt
fdiv
and
or
xchg
iret
das
lret
ret
in
fdivr
loope
fmul
shl
add
sti
ffreep
xlat
jmp
out
loopne
repnz
repz
sub
iret
aam
fmul
into
ds
out
shl
orb
sub
cld
cmc
test
loop
out
out
jmp
in
std
flds
out
rcr
xchg
nop
rcr
shl
xor
das
fsub
repz
add
cmp
incl
repz
aad
out
ret
xor
lret
call
ret
cli
in
lock
loope
shl
stc
jmp
xchg
enter
cmc
ljmp
sar
ror
lret
loop
sti
sbb
cld
mov
aam
or
fisttps
xor
cmp
xor
aaa
hlt
cld
fcompp
rolb
ljmp
in
call
imul
leave
out
cld
fcmovu
loope
ret
adc
fdivr
jmp
fucomip
aad
aas
cmc
sub
loop
lock
ror
jecxz
out
dec
sti
int
and
out
enter
xor
fsub
fcom
enter
xlat
icebp
ret
loop
jmp
loopne
testl
xor
lret
icebp
stc
rcl
fnstcw
shr
cmp
loopne
fcmovnu
rol
fmull
lock
loopne
sar
cmp
cs
ror
out
div
lds
sti
xchg
in
in
int3
lret
cli
call
div
aaa
xlat
int
call
aad
ret
mov
loop
mov
mov
sub
fsub
clc
icebp
cmc
repnz
je
mov
mov
mov
mov
lea
add
jmp
mov
fcmovnu
jnp
clc
mov
rorl
ss
in
jl
add
xor
cmp
call
out
out
or
jmp
out
fcmovnbe
jmp
cmp
cmp
mov
out
or
test
lret
shl
lock
div
fdivrp
in
fcmovnbe
out
std
test
std
jecxz
inc
lret
test
mov
icebp
cmc
ret
in
test
sbb
repz
test
enter
xor
xor
cmc
aad
hlt
sti
loop
aad
shl
cli
jecxz
fimull
out
rcr
shr
icebp
fst
aad
loopne
shl
in
icebp
jecxz
cld
call
xor
out
fmul
xor
cmp
sti
fcom
lock
aam
lea
nop
jmp
loopne
in
fdiv
ret
ror
lret
aad
xor
repz
ret
fcomi
mov
out
lock
shl
out
out
shlb
out
rcr
loop
cld
adc
testb
loop
loop
lock
into
call
hlt
icebp
xor
mov
not
mov
in
jmp
xor
hlt
int3
hlt
sar
lock
out
repz
lock
out
fcmovu
fcomp
aam
test
int3
loop
in
shl
cmc
loop,pn
enter
out
icebp
in
cli
loopne
cmp
xor
xchg
rcr
xchg
xor
xlat
iret
repz
std
rcr
cld
sar
mov
fsubp
jmp
ljmp
xor
jecxz
fadd
cmp
repnz
test
in
mov
shll
aaa
aam
xor
loope
aas
and
or
fisttps
repz
fidivrl
in
fdivrs
cmp
aas
aas
iret
rcl
cli
clc
clc
stc
ret
fstp
ror
cmc
int
in
into
ss
xor
out
lret
clc
ret
fucomip
out
fcomi
mov
mov
repz
rol
loop
aad
cmc
lock
shl
jecxz
lock
cmc
testb
repz
xor
ljmp
xor
add
iret
xor
in
xlat
sub
repz
sar
cmp
jmp
hlt
or
repz
lret
ljmp
into
lock
iret
idiv
xlat
icebp
stc
fcomi
rcr
rcl
lock
clc
cmp
lds
cld
xchg
stc
cmc
aad
std
sti
hlt
fdiv
add
test
mov
fiaddl
fldl
fnstenv
xor
cmp
xlat
in
lock
in
mov
test
xchg
out
cmc
int
out
repz
hlt
cmp
shl
div
mul
fcmovne
ret
mov
loope
icebp
xchg
aam
out
rcl
fdiv
ds
cli
loopne
repz
cmc
ds
loop
std
loope
lret
aad
not
out
shll
ret
lock
cmp
int3
fucom
in
testb
mov
ror
jmp
fsubr
cmp
fucom
cmp
fstp
loope
cmc
jmp
aad
repz
cmp
div
into
ret
hlt
aas
in
mov
out
in
mov
ljmp
cmp
xchg
xchg
call
out
cmc
xchg
fbstp
call
repz
rcl
not
cmp
cmp
mov
mov
out
fisttps
into
jecxz
jmp
out
aam
aad
loop
mov
mov
sti
loopne
out
mov
xorl
ret
out
aas
iret
xor
ret
mul
repnz
aam
leave
int
xchg
lret
imull
clc
cmp
xor
cmp
shl
repnz
fiaddl
mov
rcr
loop
jmp
aad
add
lock
cmpl
int3
in
cli
enter
rol
int3
cmp
repz
fsubr
jmp
faddl
mov
fstp
jecxz
xchg
loope
loope
cmp
cmp
fdivs
idiv
icebp
std
in
faddp
div
rorl
jmp
mul
in
xor
icebp
jmp
lock
jmp
int
xlat
int3
int
cmc
or
imulb
call
jl
clc
shl
shr
cld
int3
fcmove
jmp
aam
shr
clc
clc
xor
clc
sar
ds
test
xchg
loope
fcmove
in
xchg
out
lock
in
ret
in
shl
neg
sti
jecxz
out
sbb
jecxz
orb
and
lret
xor
cmp
cmp
cmc
cli
sti
in
cmp
cmp
jecxz
cmp
xlat
lock
into
aad
out
idivb
fdivrp
incb
jecxz
test
int
xchg
jmp
xor
cld
sar
lock
loopne
out
loope
fsubr
fisttps
hlt
in
aaa
ss
xor
aaa
imul
ds
ds
hlt
sti
test
loop
in
leave
mov
xor
sarb
out
stc
sarb
shl
sbb
xchg
out
in
test
jmp
enter
xor
cs
repnz
jmp
testb
jmp
out
int
leave
imul
cmc
out
loope
iret
loop
ret
ret
out
lds
jmp
out
enter
int
xor
lret
clc
aad
fsubp
lock
roll
fsub
loope
rclb
div
aaa
in
cmp
loopne
rcr
lock
sub
test
out
xor
ss
fucomi
aaa
in
repz
test
shl
cmp
flds
in
call
div
cmp
cmp
icebp
leave
adc
test
loopne
fcmovnb
xlat
in
repz
int
ds
neg
fnop
cmp
iret
imul
cmp
loopne
fsubrp
mov
cli
sub
xchg
loopne
call
clc
divb
ret
into
test
sarl
fsubr
xor
call
das
fmul
fstp
ror
fistpll
xor
test
jmp
out
decb
in
in
shr
fyl2xp1
repz
rcr
hlt
ret
lock
sub
int3
loop
ffreep
in
aad
jmp
incl
testl
repz
aam
shll
jmp
xlat
stc
loopne
xor
call
aad
out
testb
xchg
ret
ret
jecxz
sar
jmp
loope
ds
loope
lock
flds
out
xor
out
sub
lret
repnz
sar
xlat
jmp
cmp
or
xchg
shr
in
divb
cmp
sarb
xor
neg
ss
loop
test
int
test
loope
jmp
repnz
cmp
fstp
into
cmp
and
testb
lret
xchg
jmp
lret
out
idiv
std
repz
repnz
idivl
clc
fcomip
sti
jmp
jmp
adcb
aas
xor
out
repnz
lock
cmp
sarl
into
add
decl
out
lds
aad
adc
in
ds
loope
fmul
orl
not
jmp
lret
xor
repz
icebp
xlat
in
sti
mov
ret
cmp
xlat
int
clc
rol
mov
or
ljmp
rol
div
cmp
std
rcl
ror
cld
hlt
loopne
out
add
xchg
mov
xor
xor
aaa
clc
aam
call
jecxz
out
out
rcl
or
out
jmp
adcl
xor
xor
in
in
lret
iret
rcr
stc
mov
cld
enter
lret
into
jmp
enter
clc
xor
call
fucomi
out
int3
fcmovnb
xchg
test
out
and
iret
fucomi
xor
fadd
ds
aaa
not
rolb
testb
xchg
ret
jmp
fcmovne
sub
fiaddl
loope
mov
loopne
int
cmpb
clc
aad
repz
loopne
sar
sti
jmp
rorb
jmp
fcomp
ljmp
shl
adc
mov
mov
mov
xor
add
mov
mov
mov
xor
jmp
leave
aam
fld
fpatan
cwtl
jp
ja
xor
addb
jl
loop
mov
loop
call
xor
in
jmp
cli
cmp
fcmovnbe
out
clc
sub
test
lret
test
in
incb
cmp
sar
mov
test
in
int3
fmull
lret
in
cs
xlat
lock
shl
stc
lock
mov
xchg
shl
in
cmp
aad
rcr
aaa
out
incl
loope
mov
jmp
fneni(8087
cmc
icebp
icebp
out
ret
rcl
lret
jmp
ds
iret
clc
fdivr
cmp
out
mov
xchg
xrelease
sub
clc
iret
clc
lret
lock
jecxz
loopne
cld
rol
xlat
hlt
mov
rol
kmovw
ljmp
hlt
jmp
std
icebp
cmp
std
test
ret
mov
xchg
xchg
fmulp
loope
enter
fidivl
in
xlat
aas
xor
rcr
rol
mov
stc
fsub
decl
xor
shl
ljmp
fmul
sarb
and
cld
cli
cld
hlt
mov
jmp
repz
xor
out
clc
cmc
cmc
lock
jecxz
stc
test
sar
in
xchg
call
icebp
in
call
xor
lret
out
fcmovbe
repz
lock
addb
sub
lret
jecxz
cs
int
cmp
fdivrs
sti
int
xlat
aam
fdivr
addb
nop
loopne
in
hlt
jecxz
out
cmc
fdecstp
int3
cmc
in
fcmove
aam
or
cmp
testb
cmp
incl
into
aad
das
call
shl
cmc
ds
stc
imul
in
jmp
enter
aaa
in
cli
fstpt
rolb
iret
icebp
cli
neg
ret
leave
test
xchg
xor
sar
cs
sarb
sbb
cli
loopne
in
aad
addb
clc
into
into
loop
shr
aad
push
loope
ret
cmc
cmc
std
out
loope
nop
jmp
lock
repz
lret
cmc
hlt
adc
div
into
xchg
repnz
in
in
cli
call
rcl
mov
xabort
cli
clc
fcomip
cmp
rcr
cld
les
fst
fmuls
sti
orl
fadd
int
fsubrp
clc
fstpt
test
fmulp
out
in
sub
lret
out
xor
in
int3
out
in
inc
rcr
cmp
ds
cld
aad
mov
in
fucomip
int3
into
out
jmp
aam
rol
icebp
xor
in
sarb
div
stc
test
xchg
out
not
loope
int
iret
les
fldz
addb
cld
test
ret
rcll
ss
aaa
xlat
int
cld
cmp
ljmp
cmc
test
sbb
call
hlt
lret
ljmp
repnz
repz
cli
loopne
fucom
aam
les
shl
div
out
in
jmp
aad
test
xor
fsub
cld
cld
mov
loope
test
cmp
not
div
repz
jmp
mov
clc
repz
lret
xchg
ds
xor
lock
jmp
cmp
std
add
lock
xlat
rol
in
leave
in
out
xchg
shl
loopne
in
shl
cmp
hlt
repz
fiaddl
fucomp
incl
orl
xor
shl
not
test
loope
jmp
ret
call
jecxz
test
cs
ss
std
int
cmp
iret
cmp
ss
into
clc
fcomip
fiadds
int
out
shlb
cmp
in
cld
fst
cli
lret
out
sbb
sar
mov
icebp
in
test
popl
leave
repnz
cld
aaa
loopne
rcr
fistpll
div
xchg
cld
test
stc
clc
xchg
xchg
rolb
xor
ljmp
ds
enter
cli
cli
sti
lret
xchg
cmp
aad
xor
out
cmp
cmc
cli
xlat
addb
lret
xchg
rcl
lret
out
call
enter
repz
cld
mov
xchg
incl
jmp
ror
int
fcmove
mov
push
lock
mov
jl
add
rcl
test
in
aaa
idiv
ror
fcmovnu
ds
xchg
ljmp
fsubrp
lock
das
repnz
ror
cmc
cmp
icebp
xchg
sti
clc
rorl
aam
aam
out
xlat
int
fidivrl
stc
loope
fcmovb
in
xlat
cmc
clc
lret
cli
std
fcomip
fcmove
xchg
sub
aam
cmp
fnstsw
stc
cld
out
std
fdivr
cmp
faddl
fninit
in
repz
sub
jmp
leave
int3
shlb
cmp
xlat
cmp
clc
neg
fdivrp
mov
test
in
xor
test
call
fdiv
fdivr
fptan
mov
hlt
inc
out
cld
lret
jmp
loopne
jecxz
ss
lret
out
xor
cmp
in
aam
in
ds
xor
xchg
mov
xlat
cli
out
sti
repnz
fmul
sar
enter
clc
mov
out
xchg
mov
jmp
iret
ror
cmp
jmp
icebp
fsub
std
xlat
mov
cld
rcll
aam
call
out
aad
ffreep
sar
aad
mov
sti
fst
rolb
fsubr
repz
hlt
aas
fucomp
fcmovnu
loop
sarl
cld
xlat
cmp
test
ror
nop
iret
xchg
sub
shr
cld
cli
cmp
aad
cmp
repnz
idiv
xlat
mov
ds
call
call
sub
xor
jmp
clc
std
std
cmc
not
ret
enter
mov
out
fsubrp
out
loop
out
fst
idivl
loopne
cmp
xlat
test
mul
int
mov
iret
lret
in
in
ljmp
std
cld
int3
cmp
fdecstp
mov
stc
mov
test
ror
in
jecxz
fcom
iret
lock
cli
jmp
int3
aad
mov
cmp
in
fcompp
mov
xchg
hlt
xchg
xor
in
cmp
stc
int
fadd
sti
repnz
xchg
cld
xchg
mov
xchg
fiadds
int
in
dec
out
icebp
cmp
out
jecxz
clc
cli
repnz
call
orb
loop
xor
iret
int
sbb
fnstsw
cld
ret
leave
fcmovbe
filds
enter
cs
ret
test
in
ds
fildl
fcmovne
aam
fmull
nop
shl
fnop
rcr
das
cmp
rol
int3
ds
adc
loope
rorl
hlt
aaa
in
into
shr
cmc
aas
cmp
stc
cmp
aas
ds
and
cli
cld
in
mov
ficoms
ljmp
loopne
repz
xchg
mov
jmp
loope,pn
xor
out
call
fnsave
aam
out
test
sub
shl
mov
in
int3
out
divl
aam
jmp
aam
cmp
aad
cmc
cli
rolb
mov
fcomip
icebp
cs
ret
jmp
fcmovnu
div
ret
rcl
aad
loopne
lret
jecxz
test
shr
stc
xor
fcmovnbe
neg
fdivrp
clc
icebp
lock
fldl
icebp
faddl
shr
lret
iret
lret
aad
fcomi
rcr
xlat
test
enter
jecxz
lret
shr
jmp
cli
ror
into
xlat
ss
shl
sub
std
mul
loop
enter
lock
aam
cs
int3
vpand
sar
out
testb
mov
test
xchg
jmp
mov
jecxz
xor
xor
mul
xor
std
iret
iret
addb
lret
in
mov
fmul
fsubrp
das
ret
idiv
ljmp
repnz
test
jmp
mov
fsubp
or
aam
cmp
jmp
jmp
in
test
out
out
mov
out
adc
jmp
lock
iret
lret
stc
in
xlat
sti
fcom
div
fiadds
test
in
lret
hlt
lret
iret
ror
out
leave
xor
jmp
cmp
std
sarb
in
in
aam
mov
nop
int
loop
repnz
shlb
fdivr
call
xlat
iret
icebp
fdivrp
shl
fisttpl
cld
repnz
out
enter
and
clc
jmp
xlat
ror
ror
xlat
fisttpl
lock
fisubl
pushw
idivb
add
ss
in
xor
ret
loopne
out
vpaddusb
lds
mov
iret
out
fidivs
lret
cmc
iret
in
out
enter
shr
ffree
icebp
fucom
test
adcl
repz
fsubrp
xor
ror
jecxz
stc
fcmovnb
shl
mov
sti
ljmp
in
sub
xor
cmp
clc
sbb
inc
test
loope
fsubr
xchg
in
loope
in
fildll
ljmp
enter
rol
cld
loope
ret
xchg
mov
jmp
orb
ljmp
cmpb
cmp
cli
rol
cli
lret
fsubp
ljmp
repz
xorl
cli
movl
in
ljmp
stc
ljmp
lret
aad
shl
aam
xlat
mov
cli
call
mov
out
in
xor
xor
idiv
rcl
icebp
hlt
aam
xchg
leave
clc
jecxz
loopne
stc
test
ljmp
xlat
std
int3
neg
cmc
aas
test
shl
loop
testl
out
out
fdivp
lret
call
in
adc
test
jecxz
cli
stc
out
jmp
fadd
call
lret
aad
fldl
sarb
testb
in
shr
lret
call
cmc
sar
into
sarb
jmp
fucomp
nop
in
xchg
and
out
cmc
fcmovne
jmp
idiv
cmp
aam
enter
dec
lret
in
lret
sub
cs
icebp
out
cmp
fnstsw
enter
rolb
ret
in
int3
mov
xor
repz
cmc
cmc
lret
shlb
not
aam
std
jecxz
jmp
xlat
enter
mov
xor
cmp
cmp
out
in
iret
fucom
in
jecxz
jmp
enter
out
mov
ljmp
lret
hlt
into
cmp
mov
lret
jecxz
fucomip
out
in
fnstenv
sti
hlt
clc
cmp
sar
out
loope
test
rolb
incl
mov
xchg
repz
in
in
std
rol
out
ror
cmp
cmc
idiv
clc
out
fadd
out
std
roll
cs
call
cmpl
cld
aad
cmc
fst
sbb
shrl
mov
out
aas
loopne
cmp
addb
mov
loope
jecxz
jmp
in
fmul
cs
in
out
std
cmp
aad
cmp
mov
rcr
in
orb
pop
xlat
xor
repz
iret
fdivrs
ds
fst
jmp
into
mov
adcb
lock
into
xor
aam
neg
call
in
loope
mov
enter
cmp
icebp
lret
lret
lret
in
sar
sti
lret
leave
in
or
test
idiv
into
std
lret
enter
iret
cmp
repz
lret
in
cld
repnz
in
loope
jmp
clc
lret
repz
shl
in
xchg
mov
roll
lock
cs
icebp
int3
lret
lock
cmp
clc
cli
jmp
inc
cld
mov
xchg
loope
xlat
xor
divb
aas
shl
cmp
not
faddp
out
xchg
aad
repz
jmp
testb
idiv
xlat
repnz
lret
into
dec
and
shr
lret
fsqrt
xlat
in
xor
cmp
clc
fiadds
xchg
mov
aad
xor
xor
fidivrl
std
repnz
out
loopne
loope
mov
leave
int3
loope
icebp
call
aaa
shll
xor
lret
out
cmpl
in
out
lret
mov
lret
test
lock
cmp
into
aas
cmpl
fcomp
ret
in
enter
mov
sti
int
iret
rclb
aad
xlat
cmp
fcmove
int
cmp
rcr
rol
call
int3
int
jmp
hlt
in
ljmp
dec
in
or
add
add
leave
iret
xlat
rcr
flds
cwtl
pop
dec
out
jno
cli
jl
addb
jl
aaa
int3
rcl
cmp
jmp
not
cli
fmuls
clc
in
shr
hlt
xor
out
idivb
loope
loopne
lock
cmp
repnz
stc
test
ljmp
out
xor
shl
xor
repnz
ror
neg
cmp
jmp
loope
imul
xchg
int3
aad
aam
call
repnz
ljmp
mul
aam
cli
icebp
mov
jmp
jmp
sarl
int3
lret
stc
dec
sbb
fcmovu
loopne
mov
shl
lret
int
repnz
cmp
cmp
cmp
out
cmp
lock
iret
ffree
lret
fmulp
sti
test
cs
cmp
lret
icebp
fstp
cmp
call
out
lock
lret
lret
fcom
jmp
aam
xor
lock
out
xor
jecxz
orb
mov
rcl
cmp
iret
hlt
rcr
cmp
loope
mov
shr
lret
jmp
cmp
in
test
enter
in
sarb
aas
in
rol
lock
cmp
clc
in
out
clc
out
repnz
xchg
int3
loop
lock
out
int
cmp
ljmp
mov
test
icebp
fcomip
fdiv
ror
int
iret
ljmp
div
aam
iret
out
ds
fmulp
lret
xchg
cld
xor
aad
int
xor
int
ljmp
fiadds
in
incb
leave
fstpt
sti
fscale
test
movl
mov
std
repnz
cmc
int
xor
loope
imul
rol
loopne
ret
xlat
mov
xchg
xor
cmc
xor
int
cmp
cli
cmpl
lock
cmp
leave
in
mov
mov
enter
cmp
repz
fcmovnu
shl
aad
fsub
out
jecxz
in
idiv
mov
loope
int
xchg
loop
jecxz
enter
loop
xor
repz
fucomi
cmp
shl
rcr
loopne
in
out
vpgatherqq
loop
xchg
in
lea
cs
sti
fucomp
into
leave
idiv
fcmovbe
in
xor
out
leave
mov
xor
lock
fdiv
fdivr
fadds
ror
mov
ss
loop
xor
std
cld
cmp
cmp
xor
cmp
fimull
jmp
sub
iret
neg
stc
cli
in
into
cmc
rcr
into
hlt
sti
test
xchg
enter
xor
lret
cmp
cli
fadd
cmp
cmp
std
rcl
mov
std
jmp
fmulp
std
into
xor
lret
aad
lret
cmc
leave
fcmovu
sti
loop
aas
lds
out
mov
jecxz
stc
xchg
loopne
hlt
xchg
out
in
fnop
jmp
in
into
out
testb
call
orl
jmp
sub
clc
sar
cmp
call
fcmove
sti
std
cld
rol
out
in
test
in
cmc
xor
iret
fadd
faddp
rcr
sbb
lock
fidivrl
fimuls
xchg
out
ret
lret
out
int
aaa
jmp
loope
fildl
fst
cli
testl
loop
ret
idivb
out
iret
in
idiv
stc
test
sub
in
fiadds
aas
test
jmp
shr
test
leave
in
clc
out
fdivrp
lea
shl
ljmp
enter
loop
iret
ret
hlt
rcr
mov
in
loopne
in
enter
ret
fcmovne
repnz
fbstp
idivb
leave
mov
jmp
in
cli
test
fstp
out
in
out
jmp
cmp
fsqrt
shl
cmp
lock
out
mov
rorb
leave
mov
into
aam
iret
in
lret
repz
cmp
icebp
ret
ret
call
mov
iret
in
cli
out
xor
ror
hlt
int
int3
cmp
ss
in
not
jmp
cli
cmc
hlt
in
fsub
loope
in
test
in
iret
in
call
lret
repnz
inc
aam
loope
lret
out
jecxz
rcl
aad
xlat
xlat
aaa
imul
fcomip
shr
cli
mov
jmp
leave
int
int
int
mov
aam
dec
inc
subb
jl
addb
jl
out
ds
roll
cli
loopne
fisttps
aaa
cmc
fnstcw
into
call
xlat
fcmovne
icebp
fcomp
mul
not
cld
jecxz
loopne
loopne
shl
into
in
loopne
lock
into
lock
clc
fadd
fucom
xlat
sti
mov
enter
int3
icebp
shr
jecxz
call
neg
into
lock
mul
mov
loopne
ffree
sti
mov
rol
aad
fnstenv
sar
cmc
cmpl
enter
sti
jmp
jecxz
stc
ret
lock
lret
hlt
sar
xlat
cmpl
out
hlt
sar
xlat
mov
out
lock
jecxz
fbstp
sub
xor
idiv
cs
repnz
sar
stc
xchg
idivl
int
mov
iret
std
in
and
xlat
in
fdivr
rcl
dec
loop
std
sti
clc
stc
loope
out
mov
fcmovnu
mov
repnz
int
ljmp
cmp
add
mov
ljmp
icebp
lret
shl
call
cli
iret
fcmovb
repnz
xlat
testl
int3
lea
imulb
cmp
cmp
cmp
std
out
mov
cld
enter
popl
icebp
repz
sti
cmp
xor
repnz
ljmp
repz
loop
mov
rcl
aam
xor
lret
enter
ljmp
lock
shl
aad
in
lret
out
and
repz
idiv
ds
out
int3
aad
ds
std
aam
in
out
in
out
fcmove
call
fcmovnbe
ss
cmc
fsubr
cmc
enter
testl
mov
loopne
aad
out
out
xor
cmp
test
xlat
cld
out
cmc
aam
sbb
and
iret
loopne
xchg
das
in
out
fxch
aas
iret
iret
ljmp
fucom
enter
out
sbb
xchg
leave
leave
ljmp
into
fnstenv
test
loopne
std
xchg
test
loop
les
into
xor
xor
ds
rorl
cmp
repnz
icebp
into
stc
out
xor
xor
aad
fst
cmp
ret
fld
lret
jecxz
nop
in
shr
call
ss
adc
ret
clc
clc
loope
in
into
sti
mov
lret
das
xor
fucomp
shl
out
out
loope
repz
xor
not
addl
jmp
out
in
cmp
sti
aas
cmp
xlat
loope
shl
add
fsubr
leave
out
out
mov
repz
out
lock
idiv
faddl
fiadds
fcmovnb
sti
loope
xchg
ljmp
in
aam
enter
fdiv
xor
cmc
test
sbb
ljmp
cli
in
rol
cmp
repz
xchg
addb
loop
sti
shl
cmc
and
in
fmul
jmp
cmp
sarl
repnz
rcl
adc
out
mov
addl
call
div
int
clc
sub
inc
shl
cld
loopne
xchg
fsubp
mov
shl
out
xor
in
xlat
aas
cmp
in
shl
sbb
in
in
mov
xchg
out
loope
jmp
idivb
xor
cmp
sti
out
sbb
repnz
test
mov
cli
test
jmp
or
xor
cmc
cmp
aas
iret
repz
repz
lret
and
xor
out
lock
out
cmc
in
xor
mov
mov
in
test
call
shr
enter
in
lret
shl
cld
fdivp
cmp
or
rcl
ret
jmp
testb
xchg
loope
out
xor
in
in
enter
cmp
sbb
into
roll
xor
xor
cmp
enter
idiv
loope
sti
sti
fadd
loopne
mov
fcmove
xchg
loope
xor
repnz
fmul
shl
lret
ret
enter
mov
cmp
loope
decb
enter
iret
stc
enter
out
in
mov
jmp
aad
leave
lret
fstp
aad
mov
xlat
push
mov
jl
addb
jl
test
neg
loopne
xchg
hlt
in
xor
std
ss
cmp
fdiv
test
faddl
in
xchg
xchg
lret
fcmovnu
cmp
ljmp
idiv
out
rorl
and
in
fcmovnu
in
into
enter
call
repnz
lret
fld
leave
xor
and
loopne
icebp
lea
jecxz
ret
int
call
sar
cmc
lds
sbb
mov
fmul
ljmp
aam
out
xlat
xor
sti
cmpb
test
std
aam
aad
lret
mov
mov
xlat
xor
shl
cmp
aaa
loopne
les
ljmp
mov
int3
cmp
cmp
int
neg
hlt
test
inc
std
test
test
out
std
ret
jmp
in
int3
xlat
ror
cmp
repnz
ffree
fadd
fsub
call
mov
int
cld
aad
xor
cmp
icebp
out
fstpt
aas
ds
in
fstp
aad
fmul
orl
aas
ror
xor
aam
hlt
aas
xor
loopne
rcr
fldlg2
hlt
fld
mov
vpshlb
int
xor
aaa
shl
test
in
fldl
in
in
hlt
in
cmc
cmp
cmp
shl
test
vpsubsb
xchg
into
lea
iret
lret
cli
cmp
fldl2e
test
fxtract
into
fmuls
lock
in
lret
std
ljmp
fld
cmp
aas
fadds
call
xchg
iret
in
xor
stc
jmp
sti
rcl
lock
mov
mov
loopne
mov
cmc
lret
out
aad
aas
lret
int3
std
ret
in
flds
enter
cmc
fidivrs
repnz
iret
into
stc
fsubr
aas
fcmovbe
fiadds
add
sti
shr
xchg
in
not
fucom
jmp
ret
lock
in
les
sar
in
fdiv
jmp
shr
jecxz
xlat
out
ss
fxch
xlat
cmp
mov
out
sar
nop
rolb
aad
int
out
int3
sar
loop
testb
stc
loope
fisttps
aam
in
xlat
fsubr
repz
repz
icebp
cmp
or
in
jecxz
icebp
in
int
lret
cmp
dec
std
cmc
cmp
rcl
jecxz
in
rorl
out
rcr
idiv
cs
fildl
mov
ljmp
loop
int
xor
xor
loopne
adc
out
ds
std
ret
lret
out
lret
ljmp
out
shl
aad
fistpll
xor
jmp
in
loope
xchg
fsubp
xor
in
cmp
fucomp
test
rcl
ret
fdivrp
cld
ret
in
sub
std
filds
not
aam
in
fcmovu
testl
neg
out
cld
xchg
xchg
repz
sub
lret
rcl
loopne
test
loope
cmp
rcr
jmp
incl
out
sub
ror
enter
std
rol
repnz
sub
fiadds
sbb
lock
cld
xchg
xchg
repz
jmp
rcl
fcmove
iret
faddl
ftst
enter
test
out
test
and
xor
in
clc
fdiv
sarb
repz
loope
loope,pt
sti
in
mov
or
xchg
shl
das
aaa
mov
std
rcl
int
test
lock
sti
clc
xchg
jmp
out
mov
in
rcl
call
hlt
fdivr
in
cmp
shl
in
fiadds
xlat
cmp
xchg
xor
ss
fcom
out
in
ss
and
addb
mov
xchg
in
and
aaa
jmp
idivb
out
ljmp
std
decl
mov
xchg
lret
loopne
shl
shr
cmp
fcos
lret
xor
rorb
clc
mov
mov
mov
add
xor
cmp
je
mov
mov
jmp
rol
lds
aad
aad
lcall
mov
mov
add
fimull
stc
jmp
fptan
sbb
into
into
in
fadd
fadds
lret
jmp
stc
xor
cli
icebp
cli
sarl
in
mov
ljmp
jmp
fcom
in
ljmp
repnz
lock
shr
out
call
in
shr
cmp
clc
cmp
fucomi
sti
rcl
in
add
cli
xchg
xchg
jecxz
xchg
int3
int
clc
out
aam
fdiv
lock
rcl
sar
xchg
mov
fsin
incl
int3
call
idiv
shrl
aam
rcr
into
fdivrl
and
rcl
int
fstp
enter
fmulp
ror
in
jecxz
xor
cmp
roll
hlt
xlat
out
test
sti
int3
fdivrp
icebp
rorl
stc
xor
jmp
sar
faddp
fidivrl
cli
call
mov
in
fsubr
adc
lock
shr
rcr
mul
loope
loopne
testb
ds
mov
enter
xor
idivb
fld
icebp
fucomp
fcmovbe
std
bnd
dec
rcr
jmp
in
nop
loop
in
int
ret
aam
loope
xchg
call
sub
out
cli
repnz
hlt
cs
jmp
cmp
xor
cli
std
aad
not
repz
mov
fld
test
xchg
lret
call
sti
int
sti
ret
rol
mul
fisttpll
mov
into
in
out
leave
iret
out
xor
cld
into
sub
rcl
xor
fmulp
fsub
mov
ror
out
fsubp
aaa
cmp
into
ljmp
inc
loope
call
xchg
xchg
xor
test
cs
stc
std
cli
into
sti
clc
loopne
rcl
idiv
out
mov
jmp
xchg
leave
jmp
das
cmp
cli
rcl
rol
or
aam
dec
mov
fcmovnbe
std
in
xchg
sub
xor
in
ljmp
out
ret
cld
std
mov
out
enter
enter
iret
cmp
enter
icebp
xchg
rolb
iret
out
mov
jecxz
out
enter
in
flds
xchg
clc
push
aad
mov
rcll
sub
out
in
out
out
clc
lret
std
cmp
roll
fistl
aad
xor
fcmovnbe
ret
jmp
clc
cmp
cmc
fildl
lret
jmp
xchg
rol
loopne
ror
out
xor
cmp
clc
rol
decl
mov
adcl
sti
in
f2xm1
repnz
neg
repnz
in
clc
loope
xlat
enter
xchg
fsubr
lret
clc
cmc
int3
cmc
leave
ljmp
in
rcr
fadds
fdiv
repz
enter
cmc
loop
int
xor
fdivrs
fstp
loopne
aam
test
loope
stc
test
sarl
ss
sti
aam
hlt
lret
icebp
out
hlt
fadd
lock
out
clc
xchg
ljmp
out
out
ljmp
rcr
ss
ds
icebp
shl
cli
loopne
leave
addl
lds
fcomp
enter
cmp
vpsrlq
test
cld
fadd
inc
out
jmp
xor
hlt
xor
cmp
loopne
xor
ds
ror
cld
fmul
sti
test
out
icebp
cli
xor
fnstcw
cmpl
xlat
loopne
cmc
mov
testl
out
jecxz
xor
repnz
out
int
adc
int3
xlat
rcl
fiadds
fcmovu
jmp
xchg
shl
mov
jmp
in
aaa
fsubr
enter
lock
cld
test
iret
roll
loop
xlat
int
in
xor
cmp
aad
test
not
aad
lret
mov
rorb
repz
shl
ss
stc
repz
test
xchg
hlt
mov
xor
repnz
lret
fildll
aam
cmp
lds
div
lret
shl
fpatan
fildl
add
clc
cli
loop
jmp
jmp
add
jmp
xlat
aad
rcr
fstp
mov
jl
add
xor
cs
fcmovu
lret
ljmp
xchg
int
mov
sar
in
rol
call
icebp
ror
ss
loopne
sarb
fdivp
hlt
fmul
fldln2
shl
out
out
xor
leave
shl
int3
xlat
lret
icebp
cmp
int3
hlt
aam
cli
mov
in
int
out
sbb
loopne
repz
rcr
std
cmp
stc
loope
clc
ret
rcr
lock
rolb
in
xchg
fsubrp
mov
xor
aaa
mov
cmp
in
faddp
sbb
mov
pop
stc
mov
fiaddl
loopne
clc
xor
iret
int3
testl
out
call
enter
aad
shlb
leave
lock
xlat
shl
clc
ljmp
mov
aam
enter
fdivp
cli
repz
call
jmp
mov
xlat
aam
loop
ss
lret
aaa
jmp
out
cmp
rol
out
loop
leave
cli
rcr
into
adcl
int
repz
cmp
cmp
fcmovnbe
loopne
cld
aam
sti
jmp
mov
jmp
loope
icebp
out
xchg
in
loop
rcr
xlat
fsub
lret
ror
fmulp
into
aad
jmp
ret
fdiv
xchg
fcmovu
adc
xor
int
cmp
xor
xor
fucomi
xlat
cmp
shr
lret
icebp
cld
in
xchg
cld
jecxz
in
fcmovnb
iret
xor
jmp
repz
mov
vpsadbw
cmc
cmc
ret
repz
ret
ret
in
cmp
lock
hlt
shlb
int3
hlt
repz
cmp
or
rcl
repz
fsin
in
int
addl
sti
in
fucom
rcr
test
cld
rol
xchg
sti
fxch
in
test
iret
iret
rol
repnz
rol
stc
xchg
fucom
icebp
in
cmc
out
stc
idivb
hlt
cmp
shl
in
lret
out
iret
shl
idivb
fmulp
fsubp
xchg
in
ret
aaa
xabort
out
sti
ss
cmp
xlat
roll
aad
cld
mov
std
rcr
xchg
xchg
repnz
out
clc
cs
aaa
lret
ror
shl
xchg
aad
loope
mov
fucomi
xchg
fst
xlat
aad
out
fucomi
lret
lret
xlat
cmp
fadds
std
fmul
fcmovne
addb
loop
xor
int
repz
sub
testl
sub
xor
int3
out
in
repz
out
fxtract
sar
out
jmp
addb
inc
ljmp
aad
sti
ss
std
stc
rcl
jecxz
in
xor
aam
mov
pause
enter
jmp
icebp
cmp
loope
fidivrl
fcmovnb
fdivr
sti
addb
mov
out
orb
lret
cld
lret
std
mul
in
out
cld
incl
sub
xchg
in
jecxz
sti
fsub
cmc
out
call
iret
cli
test
iret
out
rol
ret
out
fmull
imulb
ret
ret
out
aam
test
repnz
test
loope
cmp
cli
fisttpl
das
int3
rcr
cmp
in
xlat
enter
inc
loop,pt
call
xchg
out
filds
clc
shr
das
fprem1
shl
out
cld
fdivrp
cmp
loop
in
hlt
ljmp
sub
out
out
aad
xlat
adc
repnz
out
std
stc
mov
icebp
in
std
xchg
test
mov
into
rcr
enter
cli
cmp
stc
clc
loope
jecxz
in
loop
mov
mov
loopne
hlt
hlt
into
out
fcmovnb
sarl
sarl
cmp
sti
call
cmp
jmp
clc
leave
aad
fincstp
lock
cmp
rcr
rcr
out
cld
int
xchg
fsubrp
out
xor
in
rol
cmp
repnz
out
repnz
cli
leave
cmc
enter
out
loop
xchg
repz
das
shl
aaa
ret
xor
xlat
xlat
cmp
aad
in
loop
out
loope
hlt
lret
aad
lret
add
push
add
jmp
ds
leave
fstp
ret
lds
ret
jl
add
jmp
fcomp
cmpl
ret
shl
incl
addl
lret
cmp
call
ljmp
sti
loopne
test
test
loopne
int3
icebp
call
cli
jmp
faddl
ret
lret
in
loop
orb
xor
clc
xor
fdiv
repnz
sar
ds
ret
cmc
test
movl
xlat
enter
cmp
lock
testb
clc
in
iret
out
jmp
hlt
out
ss
enter
out
in
mul
aas
ret
addb
and
mov
xor
xor
aad
out
cmc
loope
in
not
shl
out
out
or
leave
incb
int
fcom
shl
cmp
hlt
cmc
inc
into
loopne
in
fsubr
out
cli
fmul
cmp
int3
ret
out
icebp
in
imul
fidivrs
shl
out
aad
adc
hlt
fdivrp
and
sti
mov
xchg
xlat
in
xor
rcr
cli
enter
sarb
rolb
out
sti
in
clc
addl
out
int3
call
cmp
loopne
repnz
clc
jmp
add
mov
out
sub
into
cli
not
clc
ds
ds
rol
shl
rcl
hlt
xlat
decl
fcoml
xor
sti
lret
adc
and
jecxz
mul
ret
xchg
in
out
nop
cmc
jecxz
xor
loopne
into
fsin
std
fstp
leave
in
xchg
in
test
int
xor
int3
enter
jmp
idivb
loope
lds
ret
loope
fsubp
nop
in
iret
rol
out
rol
out
stc
aas
lret
incl
loope
cmp
std
out
fstl
loop
sti
cmc
xor
out
lret
cmpl
les
in
testb
call
cmc
int3
int3
into
call
lock
repz
xlat
std
xlat
rcr
mov
in
call
aam
out
repz
fincstp
cli
ss
into
iret
ret
stc
rolb
ret
in
test
shl
int3
enter
cmc
in
iret
aad
std
xor
and
vpsrad
std
out
adc
int
int3
fnstenv
sub
fpatan
clc
icebp
fcomip
test
aas
or
mov
call
rcl
aam
lret
repnz
shl
ljmp
test
fildl
idiv
mov
ret
xor
in
aaa
int
aad
shr
aad
lret
sar
leave
testb
nop
out
cmp
xor
shl
out
fstp
lret
cmp
cmp
fadd
stc
stc
incl
pop
in
ljmp
out
xor
hlt
imul
fnstsw
jecxz
cmp
lock
jmp
test
lret
fisttpll
bnd
lret
aas
sub
in
aam
in
adc
fucomp
out
in
fcmovu
xchg
repnz
rol
repnz
test
std
cmp
xlat
call
xchg
lea
fldln2
icebp
aad
test
std
jmp
cmc
hlt
jecxz
adc
fiadds
xchg
aam
aaa
enter
hlt
fsubr
std
in
in
lret
not
loop
aad
mov
out
fdiv
cmc
jecxz
shr
enter
sti
rcr
jmp
fdivrp
int3
ret
cmp
mov
out
sub
clc
rcr
lret
xchg
repz
fmul
xor
cmp
aas
loope
shl
aam
lret
call
loop
rol
sarl
div
idivl
aas
ds
ds
fsub
in
cli
out
sti
loop
xchg
out
fmulp
xlat
shl
in
in
into
icebp
sub
fcom
shl
loopne
fxch
out
std
roll
aam
loop
cli
fucompp
cmp
jmp
xor
mov
jecxz,pt
leave
jmp
ljmp
ljmp
ljmp
int3
add
add
icebp
call
iret
rol
mov
repz
int3
ss
jecxz
xor
aas
xlat
jecxz
enter
mov
out
jmp
icebp
jmp
fdivrs
ss
cmp
cld
xorl
jmp
jmp
ror
int3
fcmovne
inc
clc
adc
jg
pop
sbb
addb
jl
cmp
hlt
jmp
out
fsubr
jecxz
loopne
test
in
enter
jmp
hlt
leave
lret
fdiv
int3
out
iret
ret
jmp
test
fnstsw
test
lret
xor
ljmp
in
iret
cld
clc
sar
clc
stc
xor
in
in
mov
in
enter
fucomi
aaa
fld1
std
repnz
xchg
xchg
ror
fucomp
aad
repz
in
cmp
aam
ds
shl
cli
hlt
fcomip
roll
fisttps
or
shl
in
cmp
cmpl
jecxz
cli
fcmovu
in
int
xchg
roll
xor
icebp
jmp
rcl
icebp
repz
shl
out
flds
ffreep
int3
lock
ljmp
xor
jmp
cmp
fadd
loope
jecxz
call
orb
loop
ret
aaa
lock
clc
in
aad
iret
sarb
jmp
mov
sti
std
rcll
repnz
loopne
iret
aad
idivb
int
sbb
out
aad
xor
xchg
mov
in
in
mov
xchg
shl
out
ret
repnz
fucomip
aas
test
ds
loope
test
in
out
nop
jmp
call
shlb
cmp
out
aas
out
xor
shl
aas
test
fsubr
bnd
in
rcl
xchg
mov
xor
out
int3
out
rcl
hlt
rcl
cmpl
enter
imul
std
cld
call
icebp
repz
jmp
lret
iret
fsubr
cmp
not
test
lock
mov
out
mov
aaa
in
repnz
ss
out
cmp
int3
stc
iret
sbb
jmp
mov
cld
in
add
fxch
in
cmp
adc
jecxz,pt
clc
bnd
loope
lret
mov
in
aam
in
shl
stc
cli
aaa
cmp
aam
icebp
int
adc
fadds
fildl
icebp
hlt
xor
out
cmc
aam
cmp
icebp
int3
into
clc
fdivr
xor
cld
test
in
fadds
hlt
mov
xor
jmp
rolb
cmp
in
cli
icebp
loopne
sub
call
hlt
enter
xlat
cld
repz
cmp
fldl2e
clc
loope
cmc
repnz
cmc
cmp
aam
int3
fucomi
xor
jecxz
loopne
xchg
xlat
test
ficoml
int
call
call
and
into
into
lock
mov
rorl
out
ret
xor
cmp
cmp
std
into
hlt
test
cmp
or
lret
into
fadd
sarb
out
aas
jmp
repz
hlt
movb
faddl
int3
into
idivb
ss
out
leave
int3
iret
lret
cmp
add
out
fcomi
fstl
lret
rcl
jmp
shr
out
repz
faddp
and
icebp
lret
out
cmc
cmc
in
stc
aaa
xlat
lock
aam
xlat
jecxz
addb
test
into
loope
mov
mov
jecxz
xor
cli
aaa
ror
iret
hlt
iret
xlat
fsub
clc
roll
fdivrp
mov
into
jecxz
mov
mov
fcomip
lock
int
icebp
in
sti
icebp
call
roll
incl
call
jmp
cld
call
lock
test
and
hlt
aad
xlat
in
sti
std
fimull
ror
mul
aad
lock
fcmovbe
faddl
and
adcb
das
in
fcmovnb
std
in
fsubrp
lock
idiv
test
vpmullw
lds
loopne
out
cs
ljmp
fdivr
fincstp
out
into
cmp
fscale
fsubr
in
out
iret
in
xor
out
loopne
ss
aam
stc
fxch
repz
iret
into
icebp
test
cld
std
sti
mov
decb
loop
xor
cli
leave
imul
loope
loope
dec
cmp
sti
int
rol
jmp
xlat
jmp
hlt
out
iret
in
out
in
aas
cld
cmp
fcomip
iret
into
xlat
fld
sub
leave
in
mov
repz
xor
aaa
lret
std
call
and
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
jmp
lret
leave
aas
lret
int
pop
push
icebp
into
push
imulb
lcall
mov
bnd
loope
out
enter
aad
hlt
icebp
xlat
repnz
lret
out
out
int3
stc
fdiv
cli
in
xlat
and
hlt
sti
in
stc
loopne
mov
xor
sub
aas
cmc
aam
std
xchg
repnz
xchg
fcomi
loope
into
lret
divb
repnz
loop
jmp
neg
int3
testl
fdivrp
orl
iret
out
std
std
cs
aaa
lret
imul
into
in
div
sti
clc
ljmp
jmp
lock
shlb
aaa
repz
div
stc
mul
lret
mov
out
iret
in
xor
fstp
iret
into
hlt
xchg
repnz
ret
ljmp
out
loop
icebp
not
fyl2x
idiv
cmp
clc
fsub
aas
std
std
std
fcmovnb
mov
call
xchg
into
into
in
ror
aad
lret
cmc
lock
cmp
shl
xchg
movl
in
iret
rcl
int
fdivrp
xor
add
sti
xchg
ret
in
cld
call
iret
out
test
ljmp
xor
loopne
int
hlt
mov
jmp
ljmp
ret
loop
rcl
cli
stc
aaa
leave
div
cmp
loop
aas
cld
xchg
xchg
fsubr
jmp
lock
int3
ror
ret
cmc
xlat
repnz
out
sar
rcl
xor
incb
loope
xchg
sbb
test
icebp
icebp
enter
in
ds
in
orl
fucomi
test
cmp
into
fsub
out
rcl
mov
in
clc
lea
xlat
fcmovu
int
cld
shr
hlt
ljmp
rolb
rcr
orb
hlt
in
fucomi
int3
cmp
sar
std
xlat
loopne
decb
out
loopne
nop
out
aas
ljmp
fistpll
cmc
repnz
addl
mov
cmp
cli
aam
enter
loopne
test
rol
ds
mov
loope
test
enter
mov
cmc
les
call
sti
aam
out
in
into
jecxz
iret
mov
fdivp
jmp
cmp
cmp
addb
les
test
mov
xchg
xchg
fmulp
into
out
ffree
jmp
push
shr
cmp
test
in
lret
repz
iret
sub
ljmp
jmp
test
cld
repnz
sar
mov
cli
test
sti
in
into
int3
or
test
xlat
lock
in
rcr
loope
jmp
sti
ret
fcmove
shl
test
aad
imul
ror
jmp
cmp
aad
mov
loop
aas
jmp
fucom
xchg
into
repz
xor
jmp
roll
xchg
cld
lock
xchg
in
jmp
clc
fcmovnbe
fnstsw
enter
cmp
rcl
in
fcmovb
shl
ret
mov
into
loopne
icebp
out
icebp
aam
into
xor
lret
xor
rol
repz
sti
lds
in
jmp
loopne
repz
fdivr
iret
lret
ror
loope
idiv
ret
ffree
out
fmul
sti
iret
leave
loope
int
xor
sarl
sti
jmp
xlat
ljmp
sar
ret
mov
test
ret
lock
cli
cmp
aas
sarl
ret
sub
ljmp
in
mov
sarb
aam
leave
in
iret
out
sbb
shl
hlt
fdivrp
mov
fucomi
in
cli
mov
enter
rol
ss
fadd
fcmovne
hlt
aam
jecxz
out
jmp
cli
mov
fcmove
cli
out
mul
aaa
cmp
cmp
cmp
hlt
incb
repnz
decl
loop
rolb
das
cmp
std
repz
fcmove
mov
xchg
xchg
out
repz
icebp
xor
fcom
ror
aad
cli
fiadds
ret
lea
ret
out
fsubr
test
xor
repnz
enter
fst
idiv
repnz
xchg
test
jl
decl
jmp
iret
iret
ror
ror
xlat
fnop
and
xor
arpl
jl
addb
jl
sti
loope
call
rcl
enter
fcmovnbe
div
ds
test
in
in
test
in
lea
in
hlt
ljmp
fcom
sarb
fadds
ror
mov
out
call
rcr
out
mul
enter
repnz
lock
shl
repnz
icebp
loope
in
xor
ss
aam
cmp
aad
cmp
in
out
sar
out
cmp
call
int
lret
hlt
fcom
cmp
fucomip
cmp
push
jmp
call
shl
mov
stc
fsubr
nop
ljmp
cmc
leave
out
cmp
out
rcr
cmp
hlt
idiv
neg
mov
in
mul
cld
xchg
mov
in
int3
sub
fucomi
call
cmp
into
loope
icebp
loop
shl
clc
call
lock
lret
lret
ret
das
jmp
test
push
sbb
cmp
test
loope
call
fld
fdivr
xlat
out
out
fcomip
clc
xor
cld
fucom
fmull
rol
in
shlb
iret
cmp
dec
cli
aad
cmp
fcomip
icebp
fcmovb
fcmovu
sti
mov
jmp
lds
mul
xor
repnz
cmp
icebp
cmp
into
sar
sti
xor
out
xchg
iret
ljmp
cmp
sarb
cld
cli
aas
loopne
fcomp
fisttps
int
xor
leave
loop
ljmp
std
fcmovu
cmpb
call
shl
shr
int
cmp
cmp
hlt
shl
test
stc
loopne
loopne
fsubp
loope
test
mov
out
in
repz
fldcw
cmc
xor
xor
loopne
loopne
fxch
dec
mov
int
fcomi
jmp
fcmovnu
enter
cmp
jmp
std
ret
testb
in
enter
in
mov
aam
fdiv
out
lret
cmp
shl
out
lret
clc
enter
test
icebp
cmp
xor
xor
sarb
sar
rol
jmp
mov
jecxz
std
loopne
lret
into
in
fcmovne
aam
test
test
clc
jecxz
fsubr
int
jecxz
jecxz
fsubrl
imul
cli
cmp
iret
cmp
cli
cmc
cmp
jecxz
call
in
int
fneni(8087
cmc
jecxz
xor
cmp
call
fdivs
ret
shl
ljmp
out
icebp
cmp
out
xor
ret
int
shl
fadd
loope
test
leave
lret
mov
leave
shl
lock
in
fsubp
cld
mov
enter
call
xchg
rcl
loop
loopne
ror
les
aas
cmp
aas
in
ret
out
in
and
fucom
jmp
lret
ljmp
and
fcomip
ret
fcomi
ret
sti
push
fcmovne
into
popl
clc
out
xor
rcr
sbb
sti
in
test
aad
in
out
rol
jecxz
shl
sub
jmp
aam
shl
xor
stc
lock
call
xchg
call
out
leave
not
icebp
int3
roll
cld
in
incl
mov
jmp
sub
fdiv
ljmp
loop
test
hlt
cli
loope
xchg
mov
in
rorl
shr
std
lret
aad
call
loopne
ljmp
sbb
fiaddl
xor
in
xor
clc
jmp
cld
cld
std
idiv
addl
fsubrp
mov
in
icebp
stc
fucomi
sub
shl
cmp
int3
loope
idiv
jmp
repnz
ret
cs
out
out
aad
cmc
cli
shl
fstp
cmp
ffreep
mov
jecxz
shr
xchg
jecxz
loopne
icebp
fidivl
lret
stc
iret
iret
aad
test
std
addl
ljmp
in
dec
lret
fcmove
loope
into
rcl
fcmovnu
cmc
ret
leave
and
xchg
out
call
cmp
not
cmp
test
loop
xlat
fsub
fsub
or
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
jmp
xlat
enter
fcmovbe
cmp
rolb
fisubl
jl
in
rol
repz
shl
int3
iret
iret
in
hlt
fsubr
fcmove
int3
out
xchg
xor
xor
aad
sarb
out
aaa
cmp
aad
xor
cmp
repz
in
xchg
mov
cmc
out
lret
idiv
stc
lret
into
cmp
in
hlt
filds
mov
cld
sub
in
jecxz
loope
out
clc
ret
in
fnstsw
cmp
out
adc
fadds
shr
std
cld
int
xlat
in
iret
out
aam
stc
idiv
fnstsw
ds
std
ret
lret
jecxz
in
xchg
xor
xor
cmc
cmp
roll
fmull
test
in
in
jmp
xor
repz
rcr
cmp
stc
sar
sarl
hlt
call
fmulp
adc
ljmp
xor
aad
jecxz
add
testb
ljmp
in
loopne
out
out
jmp
cmp
fndisi(8087
xchg
call
fcom
std
loop
ljmp
int3
enter
sti
out
call
jecxz
in
in
enter
in
xchg
dec
out
xor
xor
out
idiv
lret
sarb
in
cmp
xlat
push
sar
in
cld
out
jmp
out
sub
fucomp
in
flds
aad
cld
sbb
in
fisttps
shl
icebp
shl
iret
call
int
cmp
iret
cmp
ds
jmp
ret
add
mov
shr
idivl
std
aad
xlat
rol
idivl
aam
rol
out
add
in
sub
out
aad
sarl
xor
aaa
in
sar
loop
cmc
rol
test
lret
roll
rol
int3
repz
xor
call
xor
fxtract
sti
cmp
fucomip
call
cmc
mov
int
in
xlat
jecxz
fsub
fninit
decb
fsub
decl
xor
icebp
rcr
out
hlt
ss
cmp
out
std
jecxz
mov
mov
loopne
out
jmp
stc
clc
adc
fiaddl
mov
nop
addl
aam
xor
stc
jmp
aad
in
jmp
mov
into
aad
loope
shr
int3
idivb
cmp
xor
rcl
xchg
hlt
in
jmp
or
lret
loope
repz
cmp
cmc
fld
cld
fcomi
test
xbegin
jmp
jecxz
aam
xor
call
into
cmp
cli
xchg
sbb
fsubp
stc
sti
mov
aad
ds
fld
fdivs
in
cld
aam
in
aas
sarl
rcl
fadds
int3
enter
in
repnz
call
aaa
lret
out
ss
or
in
sbb
xchg
xchg
iret
leave
rcl
out
sti
push
neg
sar
xlat
shl
jecxz
loope
loope
int3
and
clc
xchg
in
mov
into
jmp
cmc
test
clc
cmp
into
int3
sarl
cmp
out
popl
rclb
in
fsqrt
cmp
cmp
clc
cmc
fildl
enter
stc
xchg
incl
les
out
cmp
fdivrs
icebp
cmp
cli
stc
cli
ljmp
shl
in
lock
xor
enter
stc
cld
iret
loope
cmp
rcr
testb
lock
ljmp
cmp
int
xor
in
iret
test
out
jmp
xlat
test
cmp
loop
lock
out
cli
xor
out
loope
cli
std
aas
out
and
faddp
test
jmp
xor
xor
sarb
adc
in
int3
out
std
loope
repnz
in
ret
xor
rol
ss
sar
jmp
loopne
sbb
mov
lock
loop
shlb
call
loopne
push
stc
sar
fucom
xlat
addb
xor
mov
and
mov
sub
mov
sbbl
push
inc
jmp
aas
lret
lret
xchg
fimuls
mov
jl
flds
jl
cld
out
mov
les
jmp
cmp
cmp
cmc
clc
fmul
mov
lret
jmp
lock
ljmp
cmp
shr
fldl
sti
fcmovu
mov
out
shl
repnz
cmp
aas
dec
int
and
sti
icebp
xchg
repnz
mov
int
test
shl
xchg
cs
sub
ret
fnsave
std
lret
stc
aad
in
roll
int3
int
addb
out
out
int3
bnd
cld
shl
icebp
ret
loope
xlat
std
movl
lds
clc
fistpll
aam
test
leave
ret
in
fldlg2
xchg
int3
sbb
lret
xor
int3
or
cmp
out
in
mov
ret
lret
fsub
rorb
stc
jmp
cmp
ret
loop
repnz
cmc
call
xchg
ret
jmp
not
loopne
repnz
not
into
fiaddl
aam
in
leave
cli
mov
clc
in
lret
jmp
loopne
ss
icebp
ror
aam
shl
fsubr
std
aas
cmp
mov
add
cld
stc
int
fcmovbe
test
lret
loop
xor
ss
clc
sar
test
cmp
cmc
cld
loop
fcmovnu
cli
mov
xor
aaa
int
cmp
test
sti
ret
ret
fucomip
fmuls
xchg
mov
int3
repnz
iret
out
sti
cmc
repnz
rorl
loop
out
lret
xchg
rcl
stc
jmp
clc
cld
std
loop
fcmovb
loopne
out
xchg
out
nop
icebp
icebp
fdecstp
xlat
repnz
shl
ret
lret
aas
fdiv
out
test
aam
out
out
in
mov
lret
fnstenv
std
repz
shl
repnz
ret
idiv
icebp
cli
int3
fcmovu
imull
stc
ljmp
jmp
pushl
fdiv
mov
in
not
add
clc
mov
divb
in
cmp
stc
sarl
fincstp
cmp
loop
popl
shlb
imul
xor
lret
fmul
lret
fdivr
ret
cli
fdivr
stc
sar
mov
shl
enter
clc
in
hlt
rcr
lret
lret
idiv
leave
cmp
lret
mov
lock
mov
shlb
into
sarb
lret
cmp
cmc
ljmp
and
aad
vcvtdq2pd
out
imul
xor
cmp
out
in
xorl
sbb
fsub
out
out
loop
icebp
xor
aaa
out
lock
xchg
rcl
xlat
cli
flds
iret
test
loop
int3
idiv
repnz
iret
cmp
sti
cmc
rol
ret
or
loope
rcl
xor
out
lret
aad
adc
cli
lret
mov
jmp
mov
repz
icebp
stc
icebp
ss
div
std
in
xchg
jmp
test
out
fcmovne
in
test
test
mul
int3
jmp
fst
repnz
rol
test
jmp
jmp
jmp
fld
cmp
fdivrl
idivb
cmp
aam
aad
rcr
out
std
addb
lret
sub
into
sti
iret
cmp
fstpt
shl
loopne
jecxz
ljmp
shll
fld
in
jecxz
clc
cmc
sti
aaa
lock
aam
shl
icebp
loop
test
iret
lock
out
aam
int3
call
cmc
ljmp
shl
vpsrad
loope
enter
in
in
in
stc
std
int3
aad
shl
test
in
out
fldln2
std
xchg
in
in
icebp
xchg
sub
jmp
jmp
in
aaa
int3
repz
repz
shr
shl
out
aam
fucom
filds
xor
xor
in
cmp
aam
jmp
out
fsubrp
jmp
cmpb
sub
loope
in
int3
out
out
in
sti
in
cmp
loopne
divl
sarb
stc
repnz
subl
xor
jmp
ret
lret
ror
lret
sub
sahf
in
pop
imul
adc
jl
fxch
call
loop
imul
xlat
loope
sti
cmp
jmp
dec
cli
cmp
out
cmp
ret
aad
out
out
fisttpl
aas
vpsubsw
out
fsub
lock
lock
lock
ret
jmp
out
mov
xor
xor
loop
jmp
out
div
roll
incb
or
fnstenv
xor
out
fcmovbe
cmp
loop
add
fadd
cmp
fdivr
out
out
in
out
shl
into
aam
iret
in
ror
fadd
cmp
shr
hlt
out
fcomi
or
xchg
rol
cmc
out
out
ljmp
out
repnz
icebp
shl
loop
test
out
std
xchg
lret
into
enter
repz
aad
incl
fiadds
in
ljmp
xlat
out
sar
aad
in
jmp
cmp
xchg
mov
cld
out
fmull
call
repz
lret
lret
cmp
shl
rcr
ror
mov
int3
xchg
call
icebp
out
icebp
rcl
fnstsw
cmp
ffreep
into
jecxz
adc
addb
int
loop
xlat
shrl
iret
cmp
iret
leave
jecxz
ret
hlt
neg
mov
adc
fldl
test
in
call
fstpt
sar
xlat
cmc
decl
mov
push
ret
loope
lds
shr
repz
out
cmp
fcomip
loop
test
xchg
cmc
lret
test
xchg
jmp
in
iret
std
xor
xor
adc
jmp
xchg
in
int
hlt
out
xor
iret
fdivrs
cmp
std
fdivrp
rolb
rcr
fmuls
repnz
into
cli
neg
fdivr
cli
repnz
shl
jecxz
hlt
sti
rcr
in
out
mov
in
into
cld
fucompp
in
ret
loop
sub
cmp
jmp
cmc
loopne
repz
idivb
in
cmp
cld
xchg
out
fcmovu
jmp
jmp
xor
aam
cmp
clc
enter
mov
lock
div
lret
xor
icebp
sarb
neg
out
clc
cld
flds
out
std
fsubrp
jmp
hlt
int3
lret
enter
ss
in
sti
aad
out
cmp
mov
fcmovbe
shlb
in
rcl
shl
jmp
ds
repz
out
test
loopne
leave
xchg
xchg
fmulp
ljmp
hlt
xlat
xlat
jecxz
sarl
loopne
cmc
xchg
out
fisttpll
ljmp
repnz
fsub
int
cmp
lock
test
mul
out
test
ljmp
xor
jmp
les
test
jecxz
add
cmp
fucomi
leave
test
div
loop
test
ljmp
icebp
icebp
out
test
cli
neg
mov
out
aam
lock
std
enter
ror
cmp
test
faddl
fmulp
into
orb
cmc
xor
stc
lret
cmp
shl
lock
fdivrp
fsub
iret
sti
orb
shr
out
int3
ss
aas
std
repnz
in
sbb
xlat
loopne
jmp
jmp
xchg
repz
cmc
out
cmc
xor
aam
aad
cli
test
ret
sarb
aad
fdivr
adc
lret
jecxz
adcb
in
xlat
in
idivl
in
fidivrs
loopne
sti
repnz
fucomi
fyl2xp1
in
orb
in
repnz
aam
std
lret
loop
call
fiadds
in
iret
jecxz
cmpl
ret
in
call
loopne
hlt
xlat
clc
rolb
into
icebp
fimull
lock
neg
ss
into
repz
test
lds
fldl
into
leave
out
sti
sarl
clc
idiv
flds
in
lret
icebp
loop
into
fucomi
sti
std
stc
xlat
xor
cmc
aad
aam
je
jmp
iret
aad
aad
aad
aad
mov
cltd
sbb
mov
mov
jl
add
cmp
adc
std
rorb
jecxz
out
ret
iret
call
fldl
std
xchg
addb
int3
iret
into
cs
xlat
int3
stc
cmc
lret
fdivr
addb
test
lret
out
aas
sub
cmp
cmc
rol
cmp
in
cmp
iret
ret
fsub
test
clc
mov
xor
ljmp
cld
jmp
jecxz
faddl
leave
enter
jmp
lock
fdivr
shl
fnstcw
iret
div
lock
jmp
sbb
nop
enter
cs
in
in
not
fmulp
cli
xlat
fdivrl
shl
fst
fcmovb
out
ffreep
fstl
repnz
fcmove
jmp
repnz
ds
ftst
shl
shl
xlat
test
out
out
out
test
adc
int
leave
vpsrld
cmp
ss
cmp
in
test
cmp
out
out
fsubp
nop
into
aad
xor
in
xor
jmp
repz
xchg
int
out
stc
in
xchg
jmp
xor
repnz
xlat
rcr
iret
repz
lock
cli
les
leave
imul
leave
loope
incb
jmp
fidivl
xor
aad
fdivr
rorb
ljmp
test
std
shl
icebp
xlat
hlt
out
sti
dec
cli
ljmp
aaa
sar
ror
repnz
enter
loope
fsub
sbb
fstp
out
incl
test
aaa
shlb
xor
ror
dec
neg
div
repnz
ds
fadds
loopne
xor
xlat
xor
fstp
iret
out
testl
xor
repnz
in
int3
ror
ret
out
aam
clc
test
into
cmp
flds
xchg
sub
shll
icebp
ljmp
fsub
xchg
fldpi
fldl2e
out
fmull
in
xor
rcl
call
std
fsubp
cmpb
stc
xlat
jmp
mov
in
repz
leave
lock
repnz
xor
shl
aam
jecxz
clc
mov
test
test
fxch
out
hlt
aaa
cld
cmp
int
shl
fiadds
mov
mov
lret
lret
int3
lret
aad
repnz
enter
lret
fdivrl
sar
fld
aam
stc
mov
test
rorb
ret
cmp
xor
out
test
fldl
ret
jmp
in
dec
in
ljmp
call
ret
idiv
mov
test
sti
in
sbb
fildl
xor
imull
dec
fstpt
xlat
xlat
call
fiaddl
fsubr
mov
xor
aam
in
cmpl
fsub
icebp
mov
neg
movl
in
loopne
cmc
div
out
xlat
shr
cmp
fldl
int
loopne
jmp
jecxz
ljmp
cli
in
cmp
test
out
aam
in
faddl
loopne
out
lock
test
cmp
cli
ret
iret
out
jmp
int3
fucomi
icebp
iret
leave
xchg
aas
xor
lret
cmp
cmc
repz
ss
aaa
cmp
in
hlt
in
jmp
lret
les
loop
imul
rcr
out
out
ds
ret
not
sarb
jmp
and
aaa
iret
hlt
sarb
lret
ror
hlt
cmpb
fyl2xp1
xlat
cld
jmp
mov
rcr
out
jecxz
shlb
cmp
shr
out
cmp
cmp
rcl
fadd
stc
out
jmp
xor
out
shl
int3
cmc
sub
cmp
add
repnz
in
fdivr
fcom
call
ret
in
loopne
cmp
int
cmp
cmc
cmp
shr
cmp
cmp
lret
fldln2
out
out
jmp
fdivp
rcr
cli
fmul
movl
sub
subl
xor
movl
cmp
movl
jne
xor
jmp
ds
ret
ds
jmp
call
jl
add
jmp
rol
ret
out
icebp
in
and
jmp
test
into
sti
lret
hlt
or
test
xchg
cli
jecxz
ret
icebp
lret
hlt
loopne
in
in
ror
cmp
icebp
adc
jmp
lret
xchg
std
mov
rorl
ss
cli
lock
into
jecxz
loop
out
cmp
shl
call
loop
rol
leave
sti
repz
xlat
into
iret
shl
hlt
cmp
fabs
idiv
in
xchg
loopne
int
icebp
out
std
rcl
testl
jmp
fsubp
flds
xchg
out
xor
stc
into
icebp
cmp
aas
cmp
ret
vpsrlq
movb
xchg
in
fmul
cli
aam
aaa
out
ljmp
xlat
add
mov
fldz
jmp
roll
div
xor
aas
cld
test
fiaddl
loope
leave
cli
jmp
sub
cmp
repnz
jmp
clc
sti
aas
cmc
ret
fstp
xchg
repz
xchg
aam
fucomip
in
repz
cld
out
div
icebp
int3
stc
int
cmp
int3
out
in
stc
jmp
ret
jmp
loope
xlat
jmp
cs
out
rcr
icebp
cli
jmp
lret
orb
mov
in
leave
das
out
in
aaa
fstpt
loope
adc
test
loop
ret
fxam
fsubrp
cli
clc
nop
lret
fst
cld
in
not
sar
enter
jecxz
dec
addl
mov
out
loope
rcl
loopne
out
repz
jmp
lock
cmp
xchg
cmc
mov
loop
ljmp
jmp
rcr
sti
lock
fcomi
aad
test
jecxz
loope
loop
xor
int3
fdecstp
int
fsubrp
inc
sar
ljmp
into
lock
jmp
iret
shl
sti
aaa
out
sti
repz
mov
xchg
test
mov
mov
ret
in
shll
enter
int
into
ds
hlt
repz
repz
out
jmp
xor
sar
and
aam
fsubrp
test
test
not
xchg
out
ljmp
xor
int
lret
ret
sti
repnz
adc
sti
mov
in
ror
iret
xabort
out
leave
int
clc
lret
lock
mov
out
cld
mov
out
lock
sar
into
repz
xlat
xor
out
call
call
shl
xor
rcr
clc
repz
xlat
fldl
aam
ret
sbb
out
mov
subl
shl
xlat
cli
out
ljmp
cmp
cli
adc
cli
xchg
in
test
or
in
out
lret
int3
idiv
cmp
out
in
enter
fcmove
xchg
out
icebp
xor
cmc
int
lret
lock
cmpb
mov
repnz
in
enter
std
xchg
xor
lock
int
cmc
hlt
out
out
loope
mov
in
lret
ljmp
repz
xor
cmp
idivb
ds
cmp
in
cld
ffreep
leave
xchg
int
repz
in
sub
ror
jmp
cld
clc
cmp
fcmovnbe
sti
aad
stc
loop
cmp
repnz
and
icebp
into
fxch
cmp
call
mul
ds
xchg
fmul
leave
lret
fucomp
in
in
shrl
jecxz
cmp
ss
lock
cmp
cmp
int3
mov
mov
xchg
xlat
out
stc
iret
ljmp
cmp
ret
jecxz
ret
fsub
mov
in
lret
in
stc
jmp
cmp
out
xor
in
cmp
cld
ror
jecxz
leave
test
enter
jecxz
xor
cli
cli
rcr
out
cli
neg
fsub
aam
clc
lret
sti
loope
shr
into
test
fsubrl
inc
add
add
jmp
mov
andl
xor
jmp
ds
rcr
fcmovbe
rcl
aad
sbb
call
jl
flds
jl
repnz
clc
cmp
cmc
loop
fidivs
faddp
ds
fldl
in
jmp
repnz
icebp
out
shr
aas
loope
cmp
out
in
ffree
shl
in
out
fcomp
repz
xorb
repnz
cmp
incb
adc
in
cli
int
cld
test
lret
out
leave
hlt
enter
enter
adc
xchg
mov
hlt
std
jmp
mov
lret
call
aam
sar
test
testb
ljmp
shl
sub
cmp
ljmp
into
ret
in
fiaddl
xchg
in
clc
enter
cs
int3
cmp
ljmp
fmul
stc
rcr
fisttpl
fadd
out
nop
lock
fsqrt
ffree
out
clc
int3
lret
loop
fnstsw
imul
cld
ret
iret
out
xchg
in
ss
lock
lret
loope
aad
aad
fadd
out
out
loope
int
enter
ret
into
out
lret
ds
shl
out
roll
fcmove
out
jmp
shr
fcmovne
jmp
fnstenv
out
hlt
out
jmp
jmp
or
xor
xor
aad
fcomp
shl
fnop
fsubr
inc
mov
out
leave
mov
fcoml
xor
cmp
aad
testl
ret
mov
xchg
out
xchg
vshufps
xor
cmp
hlt
fnstcw
enter
lret
mov
in
in
out
ror
icebp
xor
fsin
aad
aas
stc
fdivrp
faddp
lds
leave
xchg
out
mov
xchg
hlt
repz
lret
not
iret
call
adc
ret
std
in
int3
repnz
fptan
out
xor
shr
repnz
cmp
cld
sub
rorb
fiadds
ror
icebp
out
aaa
xlat
loope
lret
fsub
ret
test
ljmp
orl
sti
cld
flds
cmp
movl
xchg
repnz
jecxz
out
clc
std
cmp
jmp
fiadds
loope
sti
enter
in
into
lock
jecxz
loope
cmp
int3
cmp
and
ret
repnz
std
jmp
fcoml
div
cmp
out
out
iret
loope
cmp
aas
ret
div
rol
in
cli
fisttps
mov
in
ss
xor
rcr
out
rcl
add
fisttps
int
ror
sub
in
call
std
loope
fdivp
loop
hlt
stc
stc
mov
ljmp
ror
fprem1
ret
out
test
in
stc
xchg
out
in
xchg
in
xchg
jmp
fld
into
out
int3
div
frndint
aam
sub
jmp
fst
leave
sub
ljmp
fadd
jmp
int3
jmp
xor
cmc
in
in
aam
xchg
loope
aad
in
cmp
repz
enter
fxch
sar
cld
in
or
test
loopne
repz
lock
aas
out
aam
aaa
int3
int3
ds
cld
fsubrp
sar
loope
sti
lock
xchg
int
iret
fmull
sar
cmp
in
sti
aam
jmp
shr
jmp
and
sar
xchg
mov
lea
rcl
repz
cmp
cmp
xlat
test
in
jmp
rol
aaa
out
xor
cmp
fdivr
cmp
xlat
cmp
aam
xlat
ret
fisttpl
out
cmc
xor
into
clc
int3
stc
xlat
fldl
shl
jmp
cmc
test
loopne
enter
jmp
ljmp
jmp
jecxz
aam
fcomp
hlt
mov
xchg
out
jmp
iret
xlat
cmp
int3
fcmovne
cli
repz
cld
std
jmp
ljmp
add
mov
mov
xorl
jmp
ds
aam
aam
aad
inc
dec
push
pop
xor
jl
flds
jl
call
call
loope
xor
cmp
mov
mov
cli
out
out
in
call
stc
cli
enter
xlat
xor
icebp
clc
div
loopne
fisttpll
cli
into
xchg
in
xor
ss
ljmp
out
int
fnstcw
leave
hlt
loop
orl
div
lock
jmp
xor
aad
lret
shl
shl
mov
neg
neg
mov
int
iret
lock
in
lret
jmp
cld
repnz
icebp
ret
rcr
rcl
repz
call
fcomi
xor
ret
cli
aad
aam
rcl
in
stc
rcl
loope
iret
xchg
cmc
iret
out
call
neg
cld
shl
repz
std
clc
ljmp
loope
push
xlat
ss
xor
leave
sti
rol
fadds
and
jmp
fcmovu
into
jmp
ljmp
icebp
loop
aam
repz
lret
test
in
sub
aam
icebp
icebp
aad
repnz
test
shl
clc
call
loop
out
xchg
out
shrb
ror
cli
in
in
fdivp
cmc
iret
loopne
aas
fadd
test
roll
loop
divb
ljmp
rcr
cmp
aas
in
testb
faddl
ret
hlt
into
ret
hlt
sar
int3
cmp
cmc
aas
in
clc
fisttps
int
cld
loopne
ret
in
sti
loope
into
out
shl
fiadds
enter
inc
enter
xchg
divb
jecxz
out
xor
jecxz
fcmovb
aam
incl
in
icebp
int3
orb
in
sti
cmp
fdiv
int3
xor
clc
stc
rcr
xchg
out
jecxz
int
jmp
fst
mov
ljmp
ljmp
sarb
lock
roll
fimuls
xchg
leave
xor
repnz
int
iret
xor
lret
sub
hlt
loope
fcmovu
stc
in
fprem
orl
repnz
out
shr
cmp
out
sarb
stc
cmp
lds
in
testl
lret
repnz
lret
fmulp
lret
div
xlat
std
jecxz,pt
shl
mov
incb
jmp
divl
loop
mov
fcmovbe
cld
fstpt
rol
ror
fdiv
xor
in
ljmp
hlt
ss
roll
jecxz
sub
xchg
lret
orl
out
lret
aas
not
hlt
ret
xor
idiv
into
loope
in
fucomip
loop
ror
hlt
hlt
out
cmc
fnstsw
cli
cmp
flds
std
in
rorb
das
cmc
loope
ret
cmp
cmp
cmp
clc
call
lret
and
orb
stc
cmp
cs
cmp
or
stc
fucomp
out
in
fiaddl
in
aam
repz
loopne
addl
rolb
nop
std
loop
jecxz
das
jmp
out
lret
xlat
ljmp
cmc
in
sub
leave
mov
adcl
iret
aad
clc
loopne
in
loop
xor
in
adc
xor
cs
std
cmp
aas
fcmovu
aad
hlt
lret
aad
in
fisttpll
xchg
into
iret
out
xor
jmp
jmp
cli
adc
jmp
and
incb
out
out
out
cmp
jmp
cmp
ds
add
cli
loope
stc
out
sti
rolb
fcomi
ror
aaa
xor
into
fstp
fld
cli
cmc
jecxz
cld
addb
into
iret
std
repz
aam
xlat
in
cs
int3
shl
in
test
ret
mov
loopne
out
jecxz
loope
cld
in
out
icebp
xor
fidivrs
sti
xlat
and
fimuls
mov
roll
notl
mov
movl
jmp
mov
xor
or
sub
add
jmp
ret
aad
fstp
int
ja
imul
pop
inc
jl
flds
jl
xchg
cli
cmc
xchg
test
int
xor
cmp
xchg
rcl
or
fsub
out
leave
out
xchg
aas
out
ror
leave
fcmovnu
cmp
clc
cmc
ljmp
aad
cld
out
xchg
mov
rol
jmp
ffree
xor
leave
idivb
ljmp
faddp
aas
mov
mov
test
loop
loope
lock
xor
out
out
jmp
in
flds
xchg
dec
out
int
rcl
test
xlat
jmp
icebp
aam
ljmp
clc
cmp
mov
enter
test
int3
cli
out
leave
ss
sub
lock
neg
fcmovb
sar
out
in
cld
aad
fprem
flds
test
into
fnstcw
clc
xor
icebp
cmc
idiv
cmc
xor
fcmovb
repz
lret
addl
iret
xor
dec
rcr
std
xchg
mov
out
std
test
orb
xor
int3
ss
repz
cli
aas
rcr
in
call
mov
int
out
enter
fdivr
cli
repz
testb
hlt
mov
jmp
in
neg
out
flds
repnz
std
sbb
decb
out
lock
cmc
ljmp
shl
fcom
mov
loop
int3
mul
in
mov
icebp
in
int3
in
leave
xor
int3
jmp
out
out
into
cmp
cmp
in
out
mov
call
hlt
sti
fadd
repnz
hlt
repz
fcom
clc
ffreep
out
loopne
in
and
xor
out
repnz
cmp
loop
cld
leave
test
adc
loope
shr
xor
aaa
lock
cmp
aad
out
cmp
neg
loopne
out
fisttpll
jecxz
out
in
jmp
in
jmp
aam
ret
fdivr
loope
repnz
in
fadd
in
cmp
jecxz
in
lret
shl
iret
iret
shll
int
out
sti
stc
sar
addl
loope
in
les
fnsave
loopne
cmpl
fmulp
enter
in
lret
xchg
mov
out
divb
icebp
out
cmp
hlt
addb
leave
in
xchg
lret
leave
fcomp
xchg
in
idiv
into
xor
int3
ret
cmc
iret
not
in
in
mov
mov
xchg
into
lret
call
out
jmp
cmp
loopne
inc
ljmp
ljmp
jmp
shlb
int3
xlat
cmpb
shl
bnd
faddp
int3
loop
iret
out
xchg
xchg
aad
out
ljmp
cli
in
icebp
ret
shl
hlt
fucom
fdivrl
out
in
mov
icebp
repz
shr
jmp
aam
into
fdivr
lock
cmp
adc
clc
xlat
xchg
in
loop
jmp
mov
jecxz
loop
out
int
into
shl
fadd
test
fldl
cmp
jmp
sti
fcmovbe
call
in
dec
loope
loopne
mov
fprem
out
mov
iret
xor
aam
int3
iret
ss
shr
ret
fdiv
ds
cli
sti
xchg
fadds
xor
std
in
lret
out
iret
icebp
fdivr
fucomi
decl
fadds
shr
jmp
call
into
std
xlat
test
iret
stc
fadd
test
test
loop
out
fmul
shl
idivl
shr
cmp
clc
repz
in
leave
in
xchg
or
sarb
in
out
lret
fucomi
hlt
rcr
out
in
fscale
rolb
fsub
ffreep
int3
icebp
int3
cld
out
in
fadd
xor
lret
xor
fcom
test
out
cmp
les
mov
ror
xlat
stc
std
lret
cmp
cmp
iret
stc
rol
lret
ljmp
repz
divl
loop
in
in
cli
clc
fsubrp
cmp
stc
jecxz
test
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
pushl
call
jmp
mov
mov
jmp
iret
ror
fstp
xlat
ret
dec
or
xor
flds
jl
clc
popl
xchg
in
imul
sub
fnstenv
idiv
ss
lock
ret
cmp
cld
test
leave
call
jecxz
call
ror
sti
cmp
iret
sar
cmp
lock
aas
clc
leave
call
jmp
jecxz
ljmp
jecxz
repz
test
test
shl
mov
out
out
xor
rcl
mul
out
out
hlt
into
cmp
add
xchg
out
in
mov
xchg
ljmp
ror
into
sbb
sti
fsub
rolb
cld
cli
test
ss
bnd
cmp
div
shl
lock
mov
rol
loopne
out
lret
jmp
cmp
cmc
test
sti
ret
shr
repz
cld
ffree
adcl
fsubr
shr
std
int3
lock
into
rcr
loop
sbb
cli
in
cld
filds
ret
icebp
fdivrs
into
sarb
fdivrp
cli
jecxz
lock
hlt
xchg
xchg
out
neg
xor
cmp
aas
std
ds
std
mov
sti
loope
decb
fucomp
int3
ror
fldcw
jmp
lret
cli
fcmovne
sti
out
cli
ret
fdivr
out
into
loopne
repz
xlat
int
xor
fst
out
std
iret
aaa
fcmovne
test
out
neg
clc
out
int
fcoml
repnz
lock
cmc
iret
int3
int3
ror
sar
sti
out
ds
in
mov
decl
sub
out
out
out
cmc
lock
fcmovb
aad
sti
aas
rorl
out
in
mov
out
jecxz
xor
ss
das
sti
cmc
test
shl
addb
fcomip
kmovw
repz
repnz
cmc
cmc
sar
cli
cmc
sub
lock
fcmovu
cli
aad
call
test
lret
jecxz
call
fadd
out
into
testl
sti
or
loope
xor
sti
sub
clc
in
out
fsubrp
out
in
rolb
mov
xchg
in
out
in
cmc
fucomi
fdivrs
sar
clc
xlat
incb
loop
test
xchg
iret
lock
xor
in
jmp
out
cmp
sub
addl
iret
iret
xchg
ljmp
stc
fdiv
iret
cli
cld
lret
fcmovu
stc
repz
cld
rcr
fcomp
xchg
clc
out
rorb
clc
imul
repz
sti
fdivr
cmp
cli
int3
xlat
fimuls
test
mov
shlb
imul
fcomp
stc
rcr
cmc
fcmovnbe
idivb
cld
aad
xlat
in
test
in
mov
aad
aaa
out
in
fcmovbe
fxch
sti
xlat
or
shl
jmp
std
jecxz
mov
loopne
rolb
shl
repz
call
into
ret
lock
aas
std
loopne
jmp
xchg
cli
into
int
ror
into
int3
fcmovnb
aaa
cmp
fdivr
in
int3
cli
cmp
test
xlat
call
addl
ret
mul
lret
sarb
clc
stc
mul
in
aad
in
mov
out
in
icebp
iret
xor
loopne
sti
stc
in
cmp
in
test
fildl
ret
ror
sub
in
fidivs
xlat
in
lock
cli
in
xor
sarl
repnz
ret
jecxz
and
mov
sti
xor
lock
lock
xor
call
loopne
jmp
aad
sub
in
std
fmulp
int
lock
lock
cli
loope
imul
in
mov
fmulp
into
in
in
fcmovnbe
rcl
in
aad
jecxz,pt
jmp
clc
jmp
test
repz
cli
leave
xor
imul
icebp
cmp
aad
sarb
lret
shr
test
in
xor
lret
in
out
jmp
lret
and
xlat
mov
in
in
xchg
xchg
out
xchg
in
vucomiss
stc
fdiv
lret
icebp
iret
iret
clc
cmp
aad
mov
jmp
lret
aam
fstp
fisubrl
push
int3
je
loop
flds
jl
not
std
clc
stc
aad
loope
loop
into
in
lret
enter
fidivl
call
lret
rcr
sti
rolb
fiadds
hlt
into
stc
ret
fidivl
jmp
ds
clc
rcl
xlat
fdivr
std
test
mov
icebp
out
or
shlb
sub
aam
enter
idiv
iret
test
ret
xlat
ljmp
out
cli
test
in
cld
out
aad
ror
fsubr
ffreep
repz
loope
test
idivb
std
out
fsub
leave
mov
jmp
cmp
fxch
fadd
icebp
cmp
cmc
mov
repz
mov
in
loopne
hlt
ss
fcomi
fstpt
in
stc
out
icebp
jecxz
test
std
movl
fmull
xor
cmp
ffreep
into
clc
hlt
out
movb
lret
mov
call
xor
cmp
aam
lret
roll
fdivrp
mul
int
in
mov
jecxz
ret
idiv
iret
jmp
loopne
icebp
repz
fsub
mov
testb
lock
cmp
repnz
lock
stc
rcr
std
test
hlt
loop
cmp
mov
test
call
xor
xor
cmp
cld
iret
or
xchg
incl
loopne
std
xchg
loope
in
les
shrl
aad
out
icebp
into
cmp
jmp
mul
jecxz
mov
mov
fiaddl
out
subb
jmp
cmp
cmp
ss
clc
movb
fcmovb
in
mov
out
aas
shlb
cli
cmc
cli
call
aam
int
fdiv
cli
clc
cld
mov
mov
mov
xchg
xchg
cld
iret
idivb
repz
cmp
sar
fcomip
fstpt
lret
call
dec
xchg
loop
loop
in
repnz
out
cmc
icebp
int
out
rcr
into
roll
cli
in
lret
iret
roll
in
in
in
neg
jmp
loop
fsincos
test
repz
orb
roll
aam
xor
int3
stc
cmp
sti
fdivr
mov
fsubp
jecxz
add
loope
nop
out
in
iret
out
div
cmp
cmc
jmp
rol
loopne
aad
test
loop
in
loope
lret
xchg
aad
xor
out
jmp
idiv
cmc
icebp
fildl
aad
aad
lret
ffreep
fsub
out
sarl
ret
repnz
clc
lock
not
loop
rcr
aad
lret
fmuls
orl
cli
cmc
jmp
in
xor
xlat
loope
xlat
out
nop
in
in
cmp
rol
hlt
cmc
hlt
xlat
cs
repz
cmpl
mov
sar
hlt
jmp
sarl
rcr
out
enter
rol
in
loopne,pt
div
enter
in
test
out
in
xor
das
lret
call
cmp
repz
cmp
loop
aas
lret
incl
into
xor
xor
fcmove
lret
cmp
xor
in
cli
fstp
cmc
ljmp
xchg
enter
ss
fsub
fsub
add
shr
clc
test
test
lret
jmp
cmp
roll
ror
test
in
xchg
orl
icebp
loope
shl
rcl
out
fdivr
cmp
loope
roll
leave
cld
jmp
jmp
adcb
fcom
in
in
lret
cmp
fdiv
aad
lds
loopne
decb
lock
stc
cmp
out
cld
iret
aad
sti
cmp
and
ds
call
lret
ret
cmc
xor
fucomp
aas
idiv
sbb
jecxz
loope
call
cmc
loope
enter
cs
loop
xlat
aad
ffreep
test
sbb
call
in
fdivrl
int3
sarl
out
jmp
fdivr
loope
fsubp
in
in
lock
int
sarb
cli
mov
add
pop
pop
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
iret
into
ret
ror
aad
addb
cmp
jl
add
stc
in
fucom
sbb
aad
out
mov
rcl
das
ret
ss
into
repnz
clc
aas
orl
idiv
mov
ret
lret
sub
repz
jecxz
icebp
loopne
and
clc
cmc
ret
flds
icebp
aam
rcl
aaa
shlb
out
cmc
jecxz
in
loopne
jecxz
mov
jmp
xor
idivb
in
sar
cmp
std
fincstp
aad
test
xlat
cli
lret
rclb
in
cli
int3
clc
xor
in
fdivr
cmc
fdivr
clc
fiadds
mov
lret
in
loopne
out
das
aam
cmp
not
leave
cmp
std
xor
sti
in
incb
mov
loop
xor
xor
xlat
fsub
in
ror
int3
fucom
clc
xlat
rcr
test
xor
cmp
iret
jmp
clc
rcl
cli
test
hlt
ds
ror
lret
fimuls
icebp
shl
ret
xor
fucomi
jecxz
in
ret
addb
fstp
fsubrp
lret
in
ss
call
out
ror
clc
repnz
ret
out
aam
hlt
mov
repz
divl
cld
aad
aad
clc
div
out
cmp
flds
repz
mov
xlat
xor
fnstsw
sarl
ret
jecxz
test
loop
loopne
lret
loope
repz
cmp
fcmovnbe
xor
stc
roll
mov
repnz
xlat
xor
les
lret
call
shl
fucom
fmull
decl
out
call
fld
imul
aaa
icebp
in
jmp
cmp
iret
iret
xlat
fmuls
jmp
out
fdiv
out
in
cmp
std
clc
ljmp
xacquire
in
dec
ret
nop
out
divl
divl
cmp
cmp
lret
roll
ret
clc
rol
in
fisttpll
in
aaa
cmc
hlt
sti
cmp
fstpt
test
or
cld
jecxz
fstp
fimull
jmp
rcl
shr
jmp
repz
out
int
out
std
rcl
jmp
filds
call
jecxz
fcmove
enter
jmp
in
test
add
int
ljmp
xor
xlat
stc
lock
xor
icebp
xlat
movl
lock
repnz
enter
in
neg
repz
int
in
aas
ret
loop
xchg
in
lock
sub
sub
rol
shl
aam
fcmovne
out
div
rcl
cld
jecxz
out
out
decl
les
test
cmc
fsincos
cmp
loopne
cmp
sbb
testl
in
cli
cmp
ss
stc
cmp
icebp
int3
clc
roll
lret
mov
cli
jmp
sub
fucomp
call
filds
cmp
xchg
xchg
shl
enter
ror
sub
icebp
stc
in
shl
xor
mov
in
icebp
leave
out
mov
lock
bnd
cli
int3
int
fcmovnbe
xlat
stc
loop
cmp
in
testb
out
shl
not
out
xor
neg
stc
icebp
xorb
sbb
jmp
fmul
jecxz
int
loopne
ljmp
shl
aam
sti
cld
fadds
loope
clc
xchg
mov
ljmp
in
cmp
std
fdivrs
loop
in
fnstsw
cld
rol
test
icebp
nop
xchg
lret
out
lds
iret
xlat
aas
xlat
cmp
in
call
in
mov
ljmp
jecxz
clc
mul
fcmovbe
aas
addl
cmp
int
call
icebp
loopne
xlat
leave
lock
std
cmp
int3
fld
lret
cmp
test
test
fisttpl
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
push
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
add
mov
orl
xor
sub
mov
xorl
add
movzwl
movl
mov
movl
movb
sbbl
lea
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
mov
xor
incl
sub
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
jmp
ret
rcl
rol
aad
nop
push
pop
pop
movsl
sub
push
jl
lret
jl
loopne
in
fisttps
ret
cmp
in
fucomip
cmp
shl
cmc
orb
xor
jecxz
loopne
into
out
cmp
hlt
cli
lret
repz
std
sbb
test
call
xor
iret
fcmovnb
xlat
int
cli
sar
icebp
in
cld
out
lock
jmp
jmp
xor
lret
into
ror
cmp
cmc
shlb
enter
into
in
leave
mov
xchg
xchg
mov
repnz
ror
rol
lret
in
iret
jmp
repz
loopne
fucom
repnz
testl
out
int
in
xor
xor
jmp
cmp
out
icebp
iret
cli
in
aaa
in
out
rol
fiadds
xchg
out
divl
aaa
xlat
idiv
in
ss
into
test
orb
int3
into
out
xor
icebp
mov
fnsave
std
aaa
cmp
aas
loope
aad
test
dec
mov
enter
ffreep
lret
icebp
fildl
loopne
ret
cmp
lock
nop
icebp
imul
imulb
enter
into
cmp
lret
fcmovu
cmc
jecxz
xchg
leave
faddp
jecxz
in
xchg
rol
lret
xlat
jmp
loope
xor
aas
enter
lret
out
sti
mov
test
cld
into
das
in
ror
ret
call
repz
loopne
addl
sti
out
test
mov
enter
out
xor
loop
test
stc
rol
mov
lret
test
adc
loopne
loope
cmp
sti
stc
sti
repnz
fcom
ret
test
aam
jecxz
out
loop
ds
cs
fmul
int
fcmovnbe
out
ljmp
repnz
aad
faddl
loopne
aam
out
xor
hlt
loope
std
out
cmpl
loop
dec
mov
loop
std
cmc
imul
aaa
loopne
xor
out
jmp
jmp
into
out
loopne
xlat
jecxz
loop
in
mov
roll
hlt
into
ror
fdivrl
in
not
loopne
hlt
ret
and
sti
xchg
mov
fmul
fcmovbe
shr
ror
stc
idiv
fucom
hlt
mov
mul
out
out
mov
xor
fnstcw
ljmp
aam
rcr
sbb
incl
xor
out
xor
idiv
cmp
std
cmp
loopne
std
in
fiadds
ret
xor
cli
aam
icebp
shr
sarl
les
aam
loopne
xchg
xchg
orb
cmp
cmp
aas
jecxz
repz
icebp
vaddsubpd
loope
fmull
int3
decb
out
out
stc
hlt
jmp
cmp
shr
repnz
loopne
loopne
loopne
lock
jmp
aaa
xor
fcom
cli
rol
loop
test
fldl
clc
lret
loop
shr
in
xor
iret
rolb
aad
test
std
enter
cli
in
loopne
xchg
in
lock
ss
leave
test
out
cmpb
cld
mul
fadds
mov
ret
cld
lea
mul
repz
in
hlt
cld
cld
icebp
cmp
icebp
sar
out
out
int
cmc
call
idivb
lret
loope
cld
cmp
neg
std
int3
dec
jecxz
loop
repz
into
enter
cmp
aas
fucomp
loope
mov
xacquire
xlat
xlat
fdivr
cmp
sti
roll
lret
cld
in
sar
mov
sub
lret
icebp
out
shl
clc
jmp
ljmp
xor
cmp
not
sbb
testl
test
aad
xlat
xor
loope
cld
cmc
mul
rcl
call
ffreep
jmp
call
out
fucom
lock
mov
mov
push
xor
mov
add
jmp
jmp
aad
shlb
outsl
or
jl
add
xor
cmp
in
int3
ret
mul
cmp
xlat
aas
cli
xor
fucomip
xchg
xchg
fcmove
in
fsubrp
cmp
loop
in
sbb
ljmp
test
rcl
out
lret
ret
loope
sti
repz
repz
loop
idiv
out
ret
ret
into
fcmovu
icebp
loopne
shr
out
cmc
ljmp
inc
fdiv
aam
xchg
call
sub
loop
into
cmc
in
dec
out
sti
lret
testl
fsubrp
call
vpxor
shlb
sar
cmp
ror
loop
repnz
test
or
xchg
std
test
repnz
in
xor
lret
iret
cmp
ret
clc
in
loopne
aam
mov
jecxz
clc
out
fiadds
in
cmp
out
hlt
ss
cmp
ror
icebp
out
out
lret
test
out
xchg
in
leave
ss
cmp
in
rcl
iret
fdiv
out
out
les
lret
lret
mov
mov
call
in
xor
loopne
cmc
xor
test
ret
sbb
fcmovb
roll
shl
aam
lret
ds
loop
sar
fsubr
fmuls
call
jmp
in
shl
rcl
cmp
aad
test
loope
jmp
out
out
rcl
int
out
in
in
fcmovbe
xor
out
and
not
rcl
leave
ffreep
in
xchg
faddl
in
icebp
xor
fabs
int3
cmp
std
call
iret
lock
loopne
ljmp
enter
loopne
fst
out
iret
sbb
in
in
fadds
int
jecxz
shr
rcr
aam
aam
lock
lock
rol
loop
out
jmp
fucomp
in
mov
xor
aam
lock
cmp
repz
fildl
decb
shl
loop
shl
fcmovb
in
xlat
enter
rcl
in
sti
les
mov
out
xchg
jecxz
aam
fcomi
cmp
sti
int3
int
aad
cmp
xlat
addb
sti
sti
int3
icebp
in
fsubr
into
into
int
out
div
fcmove
lret
loope
icebp
fucomip
imul
cmc
sti
cli
jecxz
orl
out
int
call
icebp
xchg
fadds
xabort
ljmp
ret
cs
in
aam
int
xlat
mul
aam
shl
lret
xchg
xchg
out
into
int
hlt
out
cmp
ror
in
fcom
cmp
jecxz,pt
lock
leave
fisttpll
ljmp
loopne
in
aaa
xor
repnz
aam
imul
imul
in
sti
lret
out
incl
iret
call
repnz
in
stc
shl
aas
jmp
rol
ret
sbb
mov
lds
in
cmp
ss
cmp
out
in
cli
repnz
in
lret
stc
std
loope
jecxz
lret
aad
not
in
in
xlat
aas
sti
clc
fmul
incl
in
test
fdivr
jmp
in
stc
in
leave
in
out
aam
icebp
rcl
idiv
ret
in
mov
in
and
jmp
shlb
ljmp
aaa
cmp
ror
loop
xchg
in
xchg
ror
div
cli
aad
lret
fnstcw
cld
rcl
aad
hlt
in
in
xchg
faddl
in
addl
cmp
lock
fcmovu
hlt
aad
in
fsub
std
out
fimull
lret
ss
in
rcr
neg
and
bnd
rcl
bnd
cmp
int3
fisttpll
loop
out
jmp
ds
faddl
clc
out
loope
in
xchg
repz
shl
jmp
int3
in
in
fdiv
test
jmp
imul
in
xchg
sub
xor
xor
repnz
in
int3
aam
clc
shl
cmp
cmp
mov
mov
mov
jmp
rol
aad
aad
fcmovne
scas
push
mov
and
jl
lret
jl
hlt
lret
jmp
iret
lock
cli
cmp
xlat
aad
ret
ret
fisttpll
incb
loope
ss
lret
cmp
and
icebp
in
aad
out
out
sti
and
xchg
cmp
aam
into
rol
stc
ljmp
stc
stc
fdivr
cmp
jecxz
clc
mov
inc
ror
out
int
in
leave
call
clc
test
loop
rcr
repz
in
mov
lock
neg
shlb
cs
fcmovnu
lock
test
sti
in
xchg
mov
jmp
call
cli
sarb
test
cli
out
mov
fchs
out
icebp
lock
mul
stc
into
lret
cmp
call
loopne
cmp
jmp
rolb
or
addb
aad
call
sarb
out
fcmovnb
out
sbb
xchg
out
iret
call
cmp
out
shr
cmp
fcom
out
inc
rol
fcmovnb
fsub
leave
loopne
into
test
enter
shll
ljmp
test
in
fld
stc
clc
cmc
shl
mov
mov
in
shr
loop
fld1
aaa
lret
dec
rolb
out
fidivrs
lds
out
ljmp
fnstcw
out
test
les
out
leave
loop
mov
rcr
in
jecxz
int
cmp
out
mov
out
fcmovnu
xrelease
xor
enter
jmp
lret
and
hlt
out
cmc
in
stc
out
and
xchg
out
in
cmc
call
hlt
cmp
fsubr
in
cmp
vmovntdq
incb
rolb
xor
cmp
shr
hlt
dec
lret
fdivp
rcr
cld
fmul
leave
ror
shl
lret
int3
fdivs
shl
aad
ss
cmp
out
in
cmc
jmp
int3
fdivrp
fsin
loop
jmp
cmc
xor
cmp
shl
iret
in
hlt
fucom
loope
std
sti
out
cld
icebp
leave
lock
out
rcl
hlt
ret
push
fdiv
aas
ret
lds
out
out
in
in
repz
xchg
sub
jmp
lock
fmul
fxch
iret
div
out
in
not
adc
in
into
jmp
repnz
out
dec
call
in
out
fcom
test
repnz
pop
mov
shl
ss
int
aad
sti
leave
aad
rcl
iret
roll
fildl
into
loop
ror
aad
imul
cmp
int
shr
cmc
sti
xchg
fdiv
faddl
iret
out
fsub
in
fnstenv
xor
filds
stc
mov
enter
hlt
test
ljmp
loope
fcmovb
lret
stc
mov
mov
loope
lret
sti
loop
fsubr
fidivs
in
lock
in
ds
hlt
shl
shl
orb
lret
aaa
xor
imul
in
xor
enter
fdivrp
cmp
xlat
out
jmp
in
out
aam
into
shl
cmp
sti
ror
std
std
fsub
fsubp
fcmovnu
sub
fmull
xlat
ljmp
cmp
clc
aam
aad
loopne
loop
sti
cmp
ds
leave
lea
out
fnstenv
xor
fsubr
int
out
fstpt
adc
cmc
out
fsubr
ljmp
jmp
out
aad
stc
fst
sarl
in
loopne
sti
jmp
stc
in
sti
out
in
enter
shlb
lret
jmp
call
cld
out
into
fdivr
fdivrp
loopne
jecxz
mov
enter
jmp
rol
fucomip
int
stc
sti
loop
loopne
fcmove
clc
fdiv
int
xor
rcl
out
ss
dec
ljmp
fdivr
leave
in
in
in
into
hlt
aam
aad
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
jmp
aad
xor
cmp
jl
add
test
mul
cmp
fdivr
lret
fisttpll
jecxz
stc
lock
aad
idiv
ljmp
test
icebp
loopne
xor
enter
and
jmp
stc
fnstsw
stc
std
repz
repz
mov
fcmovu
sti
or
aad
das
clc
shl
ss
clc
out
fcmovbe
loop
ds
hlt
shl
mov
mov
int3
shll
repz
ljmp
lret
xor
rcr
sbb
cld
ljmp
in
aad
xor
hlt
ljmp
xlat
sarb
fsub
xchg
fninit
xchg
lret
or
sub
cmp
xor
ror
test
repnz
xlat
test
mov
mov
enter
aas
out
call
xlat
test
loop
test
les
call
lock
fsubrp
fsubp
loopne
xlat
fcomip
shr
mov
out
xor
xor
dec
fdivr
fmul
test
incb
enter
lock
mov
into
iret
out
xor
cmp
fxtract
loop
ret
fstp
loope
lret
lret
addb
int3
icebp
repz
clc
jmp
cmp
fadds
cld
in
leave
nop
int3
loope
shl
xor
iret
cmp
call
repnz
loopne,pt
mov
jmp
jmp
xchg
test
cmc
cmp
rcl
leave
in
ffree
fdivrl
sti
lock
fadd
ret
mov
loop
test
jmp
out
lock
ret
aad
loop
clc
rcr
mov
call
jmp
icebp
icebp
ss
lock
in
and
fdiv
ret
mov
jmp
test
fucomip
xchg
repz
xor
out
cmp
repnz
faddl
aad
fsubr
fcmovu
in
lret
mov
out
ror
lret
out
fld
addb
lret
fstp
into
mov
out
xchg
jecxz
hlt
out
in
into
icebp
lret
aam
in
les
cmc
jmp
stc
loope
xchg
fsubr
shr
fnstenv
jmp
std
loopne
shl
jmp
lret
in
in
loop
shl
xchg
in
in
out
in
xlat
dec
fcmove
in
fcmovnu
icebp
fiaddl
mov
rclb
out
ss
rcl
xlat
sbb
loop
cld
out
stc
out
test
incl
into
ss
ror
fcmove
iret
cmp
aad
ds
call
iret
mov
mov
in
leave
aam
stc
cmp
loope
cmp
fcmovb
fcmovbe
fucomp
popl
enter
lock
rcr
shll
jmp
out
test
rol
out
ljmp
cmc
aaa
in
leave
hlt
iret
fsubr
int
ds
cli
xor
aam
shl
hlt
aas
fstp
jmp
sar
sbb
iret
xor
ret
mul
std
xor
int3
in
cmp
lock
mov
les
mov
xchg
sub
clc
lret
div
enter
cmp
ret
fmuls
enter
fimuls
jmp
ljmp
in
jecxz
loop
fmuls
into
std
fnstsw
xor
enter
cmp
cmp
xlat
cld
cmp
ds
in
in
cld
loope
int3
sar
test
int
cli
int
int
xor
cmc
rolb
nop
xchg
adcl
rcl
neg
sub
loope
testb
out
in
ror
shll
xor
icebp
cmp
cmp
shr
loope
mov
mov
mov
lock
loopne
idivl
fcmovbe
iret
lock
out
fptan
cmc
div
fldl
out
mov
fisttps
int3
xor
int
fdivr
jmp
cli
std
rolb
xchg
add
add
jmp
ret
int
lret
sub
fisttpll
out
fs
lret
jl
and
enter
fadds
shl
fmul
into
ss
fidivrl
stc
out
cli
fdiv
rol
std
inc
out
xchg
mov
jmp
fidivs
jmp
not
std
fdivp
cmp
cmp
fdivr
fucom
in
fcomp
out
xchg
ror
jecxz
xor
xor
clc
iret
lret
out
int
cmp
aad
ret
aam
add
xchg
xchg
rorl
leave
xor
xor
fdivr
cmc
fnstcw
xor
fcomip
addl
cld
in
fcomp
icebp
vcvttpd2dqy
out
iret
fiaddl
fadd
repnz
ljmp
test
xor
lock
aaa
rol
in
aaa
repnz
idiv
addl
loop
nop
xchg
xchg
mov
lock
rcl
cmc
in
cmp
aas
jecxz
idivb
shl
cli
in
sti
cmp
sbb
xor
in
sar
ret
leave
rol
leave
jecxz
aad
ret
cmc
jmp
lret
mov
dec
xchg
std
xchg
sub
int
cld
cmp
aad
xlat
loope
clc
xchg
rcr
fisttps
vpcomub
aaa
xor
shl
jmp
in
fidivrl
out
enter
addb
in
out
shll
in
repnz
fmul
stc
int3
icebp
rcr
std
jmp
fsubp
fldl
xchg
mov
enter
lret
int3
std
not
loop
aam
ret
rolb
clc
jecxz
in
icebp
divb
repz
xor
icebp
fnsave
icebp
cmp
fadd
fcom
fcomi
rcl
leave
out
icebp
ror
lock
out
jmp
cmp
ljmp
fcomp
fdivr
jecxz
fld1
fld1
fiaddl
icebp
out
xor
cmp
cmp
cmp
repnz
xor
jmp
and
lret
call
not
clc
neg
jecxz
cmp
fcomi
loop
loope
mov
lret
mov
clc
in
shl
fsub
icebp
out
icebp
int3
ss
cmpb
idiv
out
std
mov
xor
xor
enter
cmp
in
cmp
int
add
fprem
ljmp
fstp
fmull
jecxz
lret
adc
stc
xchg
cld
in
out
or
int
int3
lock
xor
in
fcmovnu
aad
out
loope
clc
cmp
repnz
jecxz
mov
fcoml
xor
call
jmp
sar
cld
std
sti
loop
aam
leave
cli
addl
xor
not
cmp
leave
aas
lret
clc
rcr
std
sbb
mov
fiaddl
fists
icebp
cmp
into
ss
test
loop
in
into
push
out
cmc
in
test
leave
or
call
loop
leave
ljmp
ret
lock
hlt
mov
out
std
into
jmp
in
in
int
lret
lock
out
cmp
loopne,pt
fndisi(8087
std
repz
int
xor
loopne
not
stc
out
xor
fdivr
xor
jmp
call
stc
shl
incl
xchg
std
fdivp
lock
fscale
fmulp
fdivr
shl
shl
out
in
jmp
iret
cli
out
nop
out
in
rcl
leave
jmp
fld
in
ret
incl
mov
out
mov
in
filds
jmp
stc
xor
repnz
xor
sarl
jmp
jmp
fxch
test
call
xor
icebp
cmp
in
std
cli
ror
cmp
cmp
inc
mov
int
mov
aaa
repz
icebp
repnz
cmp
cmp
cmp
rcl
test
leave
orl
lret
jecxz
xlat
shl
fcom
in
repnz
lret
idivl
loop
addl
loopne
jecxz
clc
cld
incl
icebp
aam
repnz
flds
cmp
ret
repz
aas
fndisi(8087
jecxz
mov
xor
leave
call
cmp
add
rol
mov
into
call
movzwl
mov
mov
jmp
ds
int
int
int
mov
xor
dec
aam
mov
add
ds
out
ror
xor
repz
cld
xlat
repnz
addb
jecxz
int3
aad
jecxz
xor
iret
ror
xor
stc
cmp
aad
roll
fucomp
loop
shl
int
fsubrp
in
fcmovnb
div
in
cmp
ret
rcl
hlt
loopne
xor
cld
clc
int
xor
cld
icebp
ljmp
lret
jmp
cmp
cmp
cmc
dec
loop
test
aam
out
cs
call
roll
aad
in
in
lret
mov
mov
icebp
fadd
out
sar
cmp
iret
xor
cmp
test
xlat
aam
cmp
xchg
out
in
mov
xchg
loop
lret
stc
cmc
rcl
call
cmp
std
rcl
cld
std
jmp
neg
hlt
aam
cmp
in
call
loop
fcmovnu
in
fsub
loope
popl
lret
jmp
cli
aad
hlt
std
incl
test
cmp
xchg
fsubp
loope
stc
mov
lret
aad
xlat
lret
fucomi
fstpt
cmp
loope
aam
out
sti
in
roll
icebp
cmc
xor
cmp
test
loop,pt
incb
sbb
fsubrp
xor
loop
cmp
aam
clc
std
idivl
loope
fld
aad
cli
in
call
jecxz
cmp
cmc
xor
fnstcw
ror
sar
aaa
shr
cli
rcr
jmp
mov
test
cs
iret
idiv
cmp
loope
in
cmpl
int3
cli
fcmovnbe
test
filds
shr
test
xor
leave
fsubrs
fidivl
jmp
cmp
clc
out
stc
decl
out
stc
in
rol
repnz
sti
xor
loopne
sar
in
xlat
fiadds
addb
leave
in
leave
stc
cmp
jmp
stc
xlat
cli
cli
call
ret
mov
xchg
lock
iret
xor
fcomi
int3
enter
sbb
in
ds
faddl
std
fsubp
aam
shl
out
call
call
out
lock
xchg
xchg
test
xchg
in
in
loop
jmp
cmc
in
repz
xlat
test
test
shr
jmp
lret
fdivrp
fimuls
hlt
shr
in
enter
aas
fcmovnbe
lret
repnz
xchg
lret
jmp
mov
aas
stc
out
aaa
out
fisubrl
xlat
shl
fadd
out
stc
out
in
cli
jecxz
test
in
loop
fidivs
xlat
jecxz
stc
lds
sar
aam
neg
clc
loop
jmp
int
xchg
cli
mov
int
ror
call
std
faddp
cli
fdivp
xlat
shr
fcmovnu
ret
loop
fsubr
in
lret
mov
lock
xor
xlat
in
into
repnz
rolb
cli
sti
fmull
icebp
repz
in
clc
sti
lret
icebp
clc
cld
fnstsw
xlat
iret
out
lock
out
or
icebp
ss
out
lret
fxch
divb
sti
stc
ds
fcmovu
clc
cmc
imul
in
mov
loop
shl
fstpt
repz
cmp
cmp
hlt
rcl
in
aad
test
xchg
fiadds
aam
ss
xor
lret
cli
ffreep
faddp
ljmp
out
rolb
fxch
xor
neg
out
xor
into
loop
lock
fcos
fisttpll
cmc
call
lret
iret
cmp
ds
fnstsw
rcr
cli
fiaddl
mov
fildl
enter
loop
aam
into
cmp
aam
repz
cmp
lret
rcl
mov
ljmp
call
hlt
adc
fucomip
cli
aam
ljmp
xchg
shll
not
hlt
mov
cld
int
out
incb
test
out
fisttps
shr
repz
out
cmp
fcmovu
fcmovnbe
fimull
mov
nop
xor
add
mov
jmp
rcl
ret
fst
xlat
inc
dec
push
lods
xor
jl
lret
jl
testl
jmp
in
ljmp
rcr
out
aaa
fdiv
sar
roll
jmp
loop
mov
loopne
jecxz
jmp
fcmovnu
fstpt
rcr
test
in
jmp
cli
out
repz
fdivp
shr
fxch
idiv
sar
xlat
idivl
out
std
adc
lret
mov
aad
ror
xor
fdivrp
divb
cmp
mov
clc
test
out
out
into
test
in
in
push
std
cmp
repnz
shl
test
int3
addl
jecxz
aaa
cmp
out
int
cld
cld
sar
jecxz
std
repnz
cmp
leave
cmp
in
int3
int3
icebp
idivl
repnz
stc
in
sti
loop
fdiv
cmp
cmc
xchg
ljmp
loop
jmp
rcr
cmp
aad
lret
in
out
cmc
or
xchg
ljmp
xor
xor
stc
cmp
aaa
test
ret
fldl
lret
iret
call
call
jmp
xlat
out
loop
test
repnz
mov
in
test
rcl
aad
xlat
int
fcmovnu
jmp
sti
iret
cmc
lock
into
xchg
push
fisttpll
fucomi
hlt
xchg
aas
icebp
rcl
ljmp
into
repz
test
rol
xlat
lret
lret
lret
int
xor
hlt
int3
sar
cli
ret
out
repnz
clc
hlt
aam
lret
leave
lret
ret
lret
xchg
xor
shl
fdecstp
ljmp
cmp
in
aas
incl
leave
xchg
loope
std
mov
in
repnz
loop
repnz
aaa
cld
cmp
out
shl
movl
enter
xlat
lret
fdivr
shr
sti
rcl
cmp
mov
jecxz
in
lock
sub
lret
jmp
cmp
cmp
cmp
rcr
in
xlat
fcmovnb
clc
iret
out
in
in
in
xor
aaa
iret
ror
rcr
cmpb
hlt
test
add
jmp
fisttps
leave
xbegin
cmp
neg
aas
roll
mov
lret
in
lea
cli
imul
repz
loopne
stc
loop
hlt
aas
test
xchg
mov
out
fprem
jmp
or
rcl
rolb
test
ret
loope
repz
cmp
xor
std
ss
adc
test
xor
jmp
fildl
ror
imulb
mov
into
cmp
xlat
in
loopne
cli
rcl
and
in
sti
fmul
rol
sti
xchg
cli
fists
jmp
repnz
clc
cmp
sti
in
ret
mov
ljmp
jmp
shl
jecxz
jmp
cmp
sar
jecxz
in
cmc
xchg
ret
pop
ftst
lret
div
fxtract
hlt
in
hlt
aad
lret
in
clc
and
shl
leave
enter
lock
jmp
jmp
out
ljmp
sar
shl
and
mov
iret
jecxz
fsubr
out
in
out
out
cmp
in
hlt
into
xor
loopne
loope
ds
mov
lea
out
in
xor
das
xor
cmp
cmc
out
xlat
fucomi
clc
fcmove
mov
into
nop
out
call
lret
leave
idivb
clc
neg
lret
and
fsubr
mov
jmp
icebp
into
in
lret
shl
sar
loop
shl
lret
lret
out
xchg
rol
sbb
sub
call
ror
aad
fdivp
aam
clc
fsubr
roll
aad
call
enter
cli
xor
aam
in
jecxz
fiaddl
int
std
out
nop
aam
sub
lret
cld
clc
ljmp
adc
std
in
iret
fimuls
inc
hlt
jmp
aad
enter
fsts
xchg
mov
jl
add
int3
out
xchg
sub
out
call
sti
cmp
into
loope
loope
jecxz
jmp
xlat
in
iret
loop
rcl
out
hlt
ret
out
aam
fdivr
enter
cmp
roll
fucomip
out
lret
in
ret
call
call
adc
clc
ss
mov
std
enter
out
test
fld
ret
cmp
jmp
fcmovbe
out
fcmovb
in
fisttpll
call
call
out
int
in
shl
aad
cmpl
ret
aad
loop
loope
sti
out
cli
jecxz
ds
xor
xor
stc
fucomi
cli
loopne
fidivrl
test
out
cld
ljmp
out
xorl
xlat
clc
out
xor
cs
not
testb
shl
fdivr
jmp
mov
enter
icebp
out
loopne
iret
cmp
lock
ret
xchg
jmp
loop
out
xchg
in
in
xor
mov
repnz
fnop
std
stc
test
sar
fmuls
cmp
rol
ss
jmp
int
not
adc
loope
sub
fcomp
lea
mul
fdivs
xor
int3
xlat
call
loopne
mul
sbb
out
iret
mov
lret
mov
in
lret
in
cli
ss
jmp
ss
clc
hlt
aas
neg
sti
in
in
loope
cli
in
in
test
lret
icebp
into
jmp
fptan
leave
int3
enter
rol
loop
movl
clc
shr
mov
lret
call
out
repnz
cmp
in
fldl2e
cld
mov
mov
lret
in
out
cmp
repz
xlat
cld
mov
cmp
in
fmul
enter
xor
in
cmp
std
jmp
std
out
out
ret
testl
stc
roll
int3
aad
xor
int3
aas
fsubr
loopne
xor
shl
xor
fmull
repz
rorl
clc
xor
sarl
cmp
cmp
stc
mov
out
stc
in
lret
std
fdivl
sub
ret
cld
cmp
fcomip
aam
fmul
aad
icebp
loopne
stc
aad
neg
in
filds
sar
xor
clc
call
int3
out
sti
xlat
shl
dec
ret
in
loop
fucomi
out
xchg
out
out
cmp
stc
shl
testb
std
in
iret
int
int
in
ror
icebp
fdivrs
iret
fcmovnu
call
xchg
fsubp
out
fsubp
xor
imul
xor
fdiv
aad
rolb
jmp
aas
test
stc
mov
hlt
xor
hlt
les
lret
aam
ret
hlt
xlat
adc
test
cld
out
f2xm1
fsubp
shl
xchg
repnz
iret
in
fbstp
jmp
sti
test
mov
jmp
orl
lock
int
leave
aad
enter
aaa
out
out
icebp
icebp
clc
testl
lret
xchg
addb
ret
cmp
out
lret
out
in
cmp
into
rcl
stc
cmp
out
clc
out
xchg
aad
int
sti
ror
ss
aam
cld
in
hlt
cmp
out
rol
faddp
int3
cld
cli
xchg
fldl
loop
cli
xlat
icebp
shl
cmp
call
fcmovne
leave
out
nop
out
aam
sub
cmp
std
in
clc
lret
fdivrl
xlat
hlt
loop
stc
mov
repnz
out
leave
lret
cmc
fdiv
enter
xlat
xlat
test
fstp
fcoml
repnz
lret
idivb
ljmp
std
rcr
loop
aad
call
loop
mov
mov
stc
lret
mov
xlat
into
xor
ret
xorb
loope
repz
loope
in
lret
ljmp
das
sar
int
rcl
shl
loopne
fcomp
roll
out
sub
jecxz
mov
shlb
loop
cmp
data16
add
xlat
aas
fst
fcmovne
mov
imul
lret
jl
cmp
aad
std
std
repz
std
out
fldl2t
out
lret
out
sub
les
out
xor
fucomp
ror
ret
aas
loope
fsub
enter
out
lret
int3
fsubr
cld
shr
xor
call
xor
fcomip
roll
std
test
clc
mov
loop
xor
hlt
jmp
out
fnstsw
into
out
repz
stc
aad
loop
iret
out
fisttpll
hlt
cli
fdiv
out
cli
cmp
aam
aas
loopne,pt
test
loope
cld
xchg
out
xor
enter
aas
fcom
icebp
repnz
add
cld
fmull
adcb
xor
hlt
rcr
cmc
cmp
or
adc
jmp
out
xlat
repz
jecxz
sti
cmp
in
leave
cmp
cmc
les
popl
in
int3
into
ret
cmc
fcmovnbe
cmp
cmp
in
fcmovu
jmp
sti
fsubr
lock
lock
lock
in
sbb
test
ret
adc
aad
fadd
out
loop
jmp
nop
sub
fsub
int3
fnstcw
adc
cmp
vpsraw
xchg
in
subl
hlt
jmp
fcomi
ljmp
aad
sar
inc
mov
sub
shr
xbegin
lret
cmp
cli
enter
and
leave
fucomp
out
loop
aaa
cmp
ljmp
rcl
roll
repnz
in
enter
aam
loop
in
leave
out
repnz
fmulp
shl
aas
fcmovnu
rcl
ret
in
enter
call
in
iret
in
aad
sti
fndisi(8087
loopne
jecxz
ffree
rorb
fdivr
int3
cld
xchg
loope
xchg
sub
cli
leave
cmp
loopne
fcmovbe
fsub
cmp
lock
sbb
lret
mov
out
fcoml
int3
aam
int
cmc
ss
fdivrl
xlat
loop
idiv
out
ffree
loope
out
icebp
xchg
mov
icebp
loope
cmp
shl
stc
ljmp
fdivr
test
sar
lret
leave
fst
sti
xchg
lock
xor
clc
cmp
in
fcomip
int3
into
aas
cmp
loop
repnz
out
lds
push
out
cld
loopne
icebp
lret
stc
xor
jmp
into
call
repz
clc
ftst
clc
or
mov
lock
jmp
div
or
cmp
ret
les
push
nop
das
ds
cmc
out
out
inc
fcom
out
loopne
fsubp
loopne
jecxz
and
fsubr
in
mov
mov
out
ret
enter
ror
jmp
xlat
neg
jecxz
rcr
cmp
loopne
cli
fcmovne
rorb
jmp
fcmovne
shr
repz
aad
hlt
out
not
fildl
out
int3
fdiv
xor
ret
fcmove
xor
aam
cmp
ss
cld
add
cli
clc
in
xchg
xchg
rclb
into
das
ret
les
fmul
iret
out
stc
in
cmp
cli
roll
mov
sbb
out
xchg
sub
shl
rcl
test
xor
in
std
fimuls
ret
ljmp
ror
xlat
xor
out
hlt
lret
ss
aas
fadd
cmpl
ds
jmp
in
xor
xor
fcmovnu
out
cmp
testb
xchg
fmul
mov
jmp
ljmp
lock
int
cmp
sti
xlat
ret
add
clc
add
shl
into
sub
in
lds
int3
lret
ljmp
clc
in
test
out
test
lock
call
repnz
cli
iret
cld
out
in
cmp
stc
aad
flds
mov
cli
mov
xor
xlat
ret
in
jmp
stc
loope,pt
idiv
rcl
jecxz
fdiv
leave
leave
enter
xchg
xchg
repnz
in
jmp
out
iret
ds
fcomi
in
add
cmp
jne
pop
pop
jmp
int
into
fcmove
fst
aam
lods
push
xchg
push
nop
outsb
je
jl
lret
jl
jecxz
out
out
out
xchg
jmp
in
shl
xor
xlat
cld
aas
cli
cmpl
test
out
out
movl
aad
leave
cmp
lock
cli
clc
in
std
aam
xchg
faddl
les
xor
cmp
test
out
fcomip
cmc
sbb
cld
mov
mov
xor
sti
vpaddq
out
cmp
loopne
repz
repz
test
mov
ljmp
out
stc
shl
int3
fst
rcl
out
stc
fdiv
in
fadds
nop
cld
fsub
ret
into
out
lock
sub
cld
loopne
repnz
repnz
out
cld
lret
aaa
int3
loop
ss
iret
ret
ret
cmp
ret
stc
xlat
out
fcmovu
mov
and
out
shlb
not
out
int
cmp
ret
fcom
fld
not
out
loopne
mov
xor
cmp
shl
repz
out
jecxz
int
loopne
lock
lret
aad
into
hlt
iret
repz
jmp
sbb
jmp
in
mov
stc
jmp
xlat
out
shr
sar
lret
repz
clc
loopne
cmc
rolb
mov
out
xchg
mov
cs
xor
cli
divb
cmp
cmc
loopne
rcl
ret
fcmovnu
testb
fstl
sub
lret
out
cmc
fdivr
aam
cmp
rcr
bnd
inc
out
test
iret
iret
out
clc
repz
aam
cmc
roll
clc
orb
nop
fcomip
call
fsubp
into
loop
jmp
hlt
out
fst
sti
lds
fcomip
out
in
mov
fnstenv
cmc
in
cmp
rcr
cmc
fcomi
aas
leave
loop
shl
ror
repnz
xor
xlat
cli
rcl
std
faddp
cli
test
hlt
in
in
cli
in
leave
out
xchg
ljmp
lock
fdivp
cld
sarl
xchg
jmp
mov
jmp
jmp
rcr
aam
sti
into
in
cmp
fidivrl
hlt
cmp
hlt
out
jmp
out
mov
out
lock
jmp
xor
loope
iret
jmp
cmc
loopne,pt
aam
sti
les
or
xchg
out
out
xor
xor
into
out
ljmp
addb
xchg
mov
in
cli
xor
shr
hlt
rol
test
test
ljmp
std
lock
iret
neg
in
jmp
lea
loope
out
fdivr
ljmp
in
loopne
clc
loopne
call
iret
int3
in
ljmp
cmp
cli
cmp
in
ffree
fcmovb
clc
xrelease
jecxz
test
aaa
loope
int3
cmc
call
aam
cld
aam
loope
aam
ljmp
int3
xchg
out
div
call
cs
xlat
iret
fdivr
int3
cld
rol
ror
in
idiv
leave
call
xchg
jecxz
call
in
iret
aas
or
inc
stc
std
ljmp
mov
out
cmc
xor
iret
lret
cld
cmpl
sti
rorb
fmul
ljmp
ljmp
fcmovbe
aas
add
enter
fmuls
shl
int
div
int
in
cld
imul
cmp
test
aas
stc
ret
mov
out
int3
out
shr
iret
out
repnz
rcl
cli
addb
stc
call
leave
jecxz
cli
loop
std
in
ret
xor
sti
xor
out
clc
shl
add
aas
aam
fcmove
iret
test
test
call
sar
in
ss
fstpt
cmp
hlt
fdecstp
test
inc
call
in
jmp
loopne
loopne
cmp
adc
roll
mov
mov
xor
add
mov
mov
jmp
sarl
rcr
ret
fucomp
rorb
ret
jl
add
lock
call
fiaddl
hlt
fucomi
in
stc
jecxz
shl
rcll
lret
jmp
aad
icebp
fcmovne
cmp
sub
rcl
std
out
aas
and
out
lret
fiadds
out
icebp
int
icebp
shl
rolb
rcr
fmul
lret
test
loopne
aad
out
ror
idiv
out
cmp
xlat
out
jecxz
cmp
shl
call
in
fisttpl
xchg
in
jmp
xor
sarl
test
cmpb
hlt
testb
xchg
into
loopne
aam
aam
hlt
fstpt
aam
div
hlt
xor
cld
jmp
mov
in
iret
xor
lock
fucomp
stc
fsubr
repz
repnz
ret
test
out
in
loope
loop
in
and
jmp
cmc
in
div
sub
hlt
xor
in
jmp
cmc
inc
fyl2xp1
jecxz
xlat
clc
lret
xor
lret
rol
in
repnz
clc
int3
aam
int3
loope
aad
fstp
jecxz
cmp
mov
in
ljmp
xor
rcr
into
stc
sarl
fdivrs
fadds
fisttps
xchg
sub
loopne
aad
lock
jmp
icebp
iret
in
fdivp
cmp
loopne
hlt
lds
xchg
loop
xor
xlat
xor
jmp
iret
aad
lock
cmpl
shl
mov
int
leave
fcomi
shl
lea
rcr
cmc
cs
jmp
iret
sbb
ret
xchg
enter
icebp
cli
in
jmp
mov
out
clc
aaa
sar
cmp
cmp
jmp
inc
jecxz
xchg
repnz
fdivp
jecxz
loope
jmp
loop
ror
xor
cmp
cmp
iret
out
sbb
test
std
cld
movl
out
in
call
cli
addl
stc
mov
out
out
call
aad
ret
icebp
aam
lock
dec
iret
into
iret
xchg
std
shl
jmp
sub
xor
fcmovu
fnop
xor
fsubp
aas
imul
aad
xchg
out
mov
lret
iret
lret
stc
hlt
ljmp
hlt
idivb
repnz
mov
aad
loopne
in
out
in
faddl
jmp
hlt
adc
idivl
ret
cmc
std
cld
mov
dec
xchg
lret
enter
int3
cmc
cli
fldz
adc
shr
std
ret
and
out
ffree
mov
cmp
iret
ret
aad
xor
hlt
ret
ds
jmp
out
out
in
icebp
xor
cmp
fadd
xor
sar
aad
ret
cmc
in
stc
loopne
hlt
cld
sti
lret
ljmp
cmp
ss
lock
cmp
loopne
xor
aam
lret
stc
decl
out
shr
in
icebp
aad
hlt
loope
fsubr
aad
rolb
lret
fimuls
xor
jmp
leave
fdivrp
loopne
sbb
cmp
cld
jecxz
mov
test
cli
cmp
sub
out
int
fistpll
fninit
not
repnz
ret
std
sub
lret
shr
mov
leave
cmp
into
cmp
cmp
aad
filds
mov
jmp
sti
fucomip
ret
adc
loop
aad
xor
fdivr
out
cld
sub
shl
addl
out
stc
in
cld
sti
enter
int3
in
std
fcmove
loopne
cmp
jecxz
test
stc
loop
loope
idiv
xchg
repz
jmp
into
in
out
divb
into
neg
loop
faddl
shr
fadds
or
lock
ret
in
leave
aam
icebp
lret
dec
fisttps
test
int3
loopne
out
into
stc
aaa
not
repnz
fcmovne
aad
hlt
cmp
ds
inc
lret
sub
lret
jmp
shr
shlb
in
cmp
cmp
fsubr
test
xchg
fdivr
lret
loopne
mov
iret
out
ljmp
fdivrl
cli
test
test
jmp
ror
ds
ret
or
in
je
add
lret
jl
in
lret
ds
fdivrp
addl
lret
ret
xor
cli
xor
fdivr
rcr
fucomp
lock
in
mov
fcomip
les
repz
out
jmp
repz
cmp
neg
out
stc
fcom
mov
ljmp
xchg
mov
jecxz
in
xor
aaa
icebp
xlat
cmp
ljmp
ret
std
jmp
fisttpll
xor
sti
clc
xlat
cmp
out
fucomip
iret
not
fdiv
call
xchg
into
loop
mov
ror
shl
enter
shl
cmp
lock
orb
int3
in
faddl
stc
ret
xor
shll
fpatan
int3
jecxz
testl
jmp
cmp
test
lea
aaa
stc
xor
in
repz
jmp
cld
loope
aad
leave
jmp
or
std
jmp
cmc
lret
out
out
aaa
rol
lret
ss
fcomi
aas
lock
hlt
jecxz
std
dec
loope
loop
mov
in
xor
aad
in
std
ss
aam
cmp
cld
jmp
clc
int3
iret
jmp
fcmove
ffreep
les
out
cmp
cmc
in
mul
std
aad
int3
cld
out
loope
out
adc
into
iret
out
xchg
xlat
cs
stc
lock
ljmp
repz
call
clc
movb
out
cmc
fsubrl
out
cmp
aad
into
test
aad
test
mov
in
jecxz
out
iret
xor
xor
sub
stc
out
lret
std
iret
shl
roll
clc
lret
lret
icebp
jmp
enter
std
cli
ds
aad
stc
loope
inc
enter
loop
leave
test
out
in
out
lret
hlt
lret
fcmovu
xlat
ret
idivb
decl
cli
mul
leave
fiadds
das
iret
cmp
repz
xlat
repz
mul
fsubp
shl
hlt
flds
fiaddl
shl
cmp
cmp
dec
loope
cli
cmp
mov
out
fstp
mov
ljmp
out
xlat
hlt
aam
ror
cli
loope
cmp
out
xchg
int
clc
pop
mov
in
xor
call
ror
dec
icebp
cmp
hlt
jmp
lock
into
xor
in
int
shr
and
cmp
clc
test
ljmp
ljmp
jmp
sarb
std
fdiv
incl
shl
xchg
iret
sub
std
cmp
in
iret
test
in
imul
mov
ret
rcl
out
iret
aaa
loopne
xor
cld
sti
fcmovbe
icebp
loop
rcl
rolb
hlt
xchg
cli
nop
sti
or
out
test
std
aas
clc
int
test
faddl
jmp
testb
ret
ret
les
aad
fsub
stc
fcmovnbe
clc
stc
out
jecxz
mov
out
fcomp
xchg
fndisi(8087
in
mov
lret
out
aad
xlat
idivb
cmp
loope
fcmovbe
div
loop
cld
shl
mov
out
xor
cmp
test
sarb
fimull
mov
out
lret
repz
sub
ss
ss
sar
into
cld
aad
icebp
rcr
aam
ret
incb
lock
aad
das
cmc
enter
cmpl
rolb
xor
loope
cmc
hlt
in
stc
xor
into
fcmovbe
icebp
fmul
cmp
clc
loopne
std
loop
std
in
test
test
out
into
into
aad
out
in
in
enter
fucomi
stc
sbb
aam
hlt
mov
jmp
in
out
jmp
leave
in
in
in
in
idiv
ds
lds
enter
test
mov
xchg
loopne
loop
aad
ror
cmp
out
in
addb
call
test
loope
div
xor
fsubr
into
aam
loope
jmp
div
std
loope
fildl
fsub
fmulp
std
loope
lret
rorl
je
mov
mov
mov
jmp
lret
aam
fcomp
aad
andb
mov
jg
lret
jl
call
lret
icebp
lret
hlt
loopne
cli
cmp
mov
clc
ljmp
lock
iret
aam
jmp
xlat
rcl
into
fcom
rol
leave
fadds
iret
jmp
aad
aam
cmp
iret
repnz
testb
cld
loop
mov
call
rcl
in
roll
xlat
xlat
out
lret
jecxz
xchg
xchg
lds
sti
ss
lret
lock
iret
adc
ljmp
xchg
mul
ljmp
idiv
clc
cmp
test
ljmp
out
in
repz
lret
int
xor
icebp
aam
loope
jecxz
in
cmpl
or
repnz
repnz
cli
cli
hlt
xor
call
cli
out
loop
faddl
out
xor
xor
repnz
out
lock
out
cmp
cmp
cmc
fisttpll
shr
fstl
ret
enter
icebp
aam
ffreep
cmp
roll
xchg
mov
sub
rol
cmc
in
int
fiaddl
loop
repnz
lret
xchg
repz
out
call
sub
hlt
cmp
cmp
out
std
fadd
jecxz
lret
ret
in
std
icebp
fisttpl
aad
jmp
int3
int3
rcr
out
in
jecxz
icebp
aad
repz
loopne
xlat
xlat
jmp
leave
test
lret
lock
jmp
repnz
test
in
cmpl
fdivrs
incl
mov
xor
xchg
shl
in
cmp
aaa
cmp
hlt
loope
out
shlb
fucomi
hlt
aam
xchg
enter
out
jecxz
xchg
int
enter
aad
sar
sti
sar
test
call
ljmp
out
lock
in
xor
lock
in
icebp
aas
ret
repz
xchg
iret
test
xchg
ret
stc
out
lret
fcmovne
aad
repz
cli
and
cld
fmul
fucomp
xchg
in
aaa
stc
shrl
ljmp
sub
cmpb
rolb
test
jecxz
ss
xlat
int3
rcr
aas
cmp
loop
flds
les
mov
cld
lret
leave
in
xor
cld
int
repnz
shl
fcom
jecxz
repz
sub
mov
loopne
in
shl
out
hlt
cs
loopne
stc
ljmp
and
sub
cld
xor
cs
sub
neg
fadds
clc
iret
ret
fld
xchg
loopne
in
xchg
in
stc
xor
xor
cmp
rol
mov
leave
cli
int
sub
fdiv
mov
jmp
cli
cmp
cmp
cmp
in
sti
xlat
call
lea
xor
shl
fucomp
rcr
dec
fcmovnbe
stc
in
sti
aad
xchg
mov
clc
sti
sti
loopne
aam
shr
loop
xor
xor
cmp
cmc
sbb
ds
mov
mov
loop
xor
in
hlt
repnz
lret
enter
test
incb
mov
xchg
xor
loop
xor
out
lret
int
in
loop
hlt
lock
addl
xchg
in
in
xor
rcl
shl
out
cmc
stc
ds
lock
loop
ffreep
mov
aad
in
mov
sub
cmc
ret
call
std
cld
loope
fcomp
xchg
ljmp
xchg
cmc
loope
xor
repnz
cmp
lret
into
inc
cmpb
rol
fdivr
ffreep
cld
loop
fiaddl
das
mov
jmp
cmp
lock
iret
icebp
jecxz
stc
aam
ret
std
loope
orl
fcmovnbe
div
out
aaa
into
into
into
clc
xor
out
ljmp
mov
aam
xor
in
shlb
cmp
ss
ret
cmpl
jmp
mov
fcmovnb
in
mov
popa
lret
jg
lret
jl
lds
ret
fldl2e
loope
fmull
xchg
enter
in
cmp
fdivr
int3
out
cmpl
ret
in
add
icebp
cld
fst
in
rol
call
into
stc
cld
loopne
sti
roll
enter
test
xor
rcl
cli
in
ds
fidivrs
incl
shl
int
cld
xchg
fsubr
mov
out
jmp
cmp
lock
fcomip
aad
jecxz
icebp
out
test
loopne
call
aam
aaa
ror
jmp
ffreep
in
loopne
add
fdivr
mov
mov
in
out
jmp
cmp
cmc
fld1
int
aaa
jmp
fiadds
fadds
out
stc
xor
ret
stc
bnd
int
cmp
stc
out
cmp
rolb
jecxz
std
ljmp
sub
jmp
xor
das
out
int3
out
cmp
mul
cmp
test
xchg
mov
jmp
shll
in
enter
cmpb
ffree
fld
fdivr
loopne
cld
loopne
iret
mov
fsubrl
out
lock
out
int
aam
rolb
stc
add
jmp
test
test
xor
cmp
in
loop
cmp
shl
cmp
out
fcomp
aam
in
out
cld
loope
test
aad
loop
xor
lret
icebp
cmp
jmp
repz
loop
fdivr
ret
jmp
iret
sti
xchg
in
rolb
lret
lret
cld
lret
fidivrl
out
std
loope
shl
fdivrl
test
cli
out
xchg
hlt
ret
iret
in
stc
aad
cmp
lock
ljmp
fucomp
cli
in
fadd
mov
int3
mov
ror
mul
ror
xor
aam
aas
ret
fst
mov
movl
shr
leave
in
ss
enter
in
fadds
sarl
loopne
in
fdivr
lret
nop
sbb
out
aam
xor
fdivs
icebp
loopne
cmp
rcr
repz
loopne
ljmp
ffree
lret
aas
int3
ss
call
lock
aad
xlat
loopne
clc
out
loope
fsubp
ret
nop
repnz
aam
iret
call
jmp
shl
std
loope
out
sub
mov
mov
lret
fnstcw
vpmuludq
std
rolb
hlt
in
fiaddl
fdivrp
mov
xlat
imul
lock
shl
int3
into
ljmp
repnz
out
ljmp
iret
xor
ret
icebp
aaa
shl
iret
cmp
loope
cmp
call
xchg
sbb
mov
shll
repz
ss
fprem1
xor
in
cmp
out
and
cld
jmp
hlt
fcmovnb
out
loope
sub
out
shll
rcl
cmp
stc
ret
xor
adc
clc
test
lret
out
aaa
out
leave
xor
fmul
loopne
std
aas
rcl
repnz
xlat
mov
call
in
or
lret
lock
ljmp
cmp
leave
rol
mov
call
xor
cmp
lret
ss
ds
cld
aas
xchg
cld
lret
out
mov
test
xor
icebp
fcmovnbe
int
sti
cmp
out
repnz
jecxz
jmp
out
mov
sub
xor
jecxz
call
in
repz
fdivrp
aad
jecxz
test
int
repz
xor
ror
jmp
call
aaa
les
xchg
loope
mov
rcr
shl
jmp
ljmp
cld
in
rcl
iret
out
fcomip
aam
jmp
into
out
repnz
in
xchg
ss
lock
call
in
add
aas
ret
repz
test
ret
into
out
nop
lret
div
int3
enter
hlt
cmp
rcr
jmp
in
lock
fdivr
clc
std
xor
sti
lock
loopne
xor
aad
call
cli
hlt
cmc
repz
in
jmp
adc
add
mov
mov
movsbl
xor
jmp
rcl
rcr
int
add
leave
cli
adc
lret
jl
in
aaa
ret
jmp
out
std
sti
cmp
lret
xlat
addl
fmul
orb
ret
sub
cmp
xor
shr
shl
fstp
shl
mov
imul
fucomp
fsubp
hlt
in
lock
int
dec
cmc
ds
xlat
std
ds
out
decb
into
adc
les
repnz
fnstenv
ror
jmp
aas
in
sarl
aam
out
in
test
jmp
ss
cmp
cmp
into
cmc
iret
iret
fmul
ffree
aad
vpaddq
icebp
mov
out
ftst
in
idiv
aam
repz
aas
out
out
jmp
cmp
cmc
call
call
out
clc
fcmovb
rolb
int
call
xor
cmp
loop
out
cmp
inc
loop
loop
out
loopne
ljmp
shr
lret
leave
sar
cmp
testb
fadd
cld
enter
int
mov
rcl
xor
lret
lret
clc
shl
fld
faddl
hlt
loope
xchg
mov
in
out
sub
jecxz
cli
rcr
aaa
loopne
xlat
aas
ret
fsubp
in
addb
fisttpll
into
sub
ljmp
fnstsw
out
ret
shr
out
out
iret
int3
xchg
shl
jmp
loopne
ljmp
repz
loope
test
in
jmp
fsqrt
out
mov
iret
out
cld
cld
lret
repz
cmp
shl
enter
xchg
cld
cli
leave
test
fadd
sbb
lret
lret
out
out
xor
cmp
xor
cmp
xchg
add
ret
in
loope
fcmovu
loop
aam
int3
aad
ss
icebp
int3
fsubr
lock
mul
cld
cmp
cld
enter
enter
aam
aad
iret
rcl
xor
out
sar
shl
cld
ror
fsub
loopne
loop
lret
cld
cmc
test
lock
xlat
in
in
aaa
hlt
lret
clc
icebp
ret
test
test
int3
icebp
out
aad
rcl
clc
in
aas
stc
shl
aas
loopne
cli
ds
fucomip
xchg
call
shl
loopne
xor
lret
fbstp
incl
xlat
cmp
repnz
out
lock
xor
fidivl
xor
fdivrl
repnz
cmp
faddl
jmp
jmp
in
xor
fcmovnb
sar
aas
cld
ljmp
sti
in
out
loop
ret
orl
xor
into
ljmp
ds
std
imul
in
int3
out
jecxz
ror
in
aad
idiv
ss
lret
into
shr
in
xchg
rcl
cli
int
cmp
out
les
cmp
int3
fdivrl
out
lret
sarl
add
fcmovu
ffreep
fiaddl
loope
shl
in
jmp
fscale
fnstcw
cmp
test
enter
icebp
sti
call
jecxz
fsubr
icebp
shr
sti
in
in
divb
add
rcr
hlt
std
leave
fmull
xchg
int
rcl
iret
shr
fcom
fcmovnbe
jmp
int
test
aas
cmp
in
leave
enter
fdivr
jmp
aam
sti
xor
in
fdivp
std
out
aas
testb
enter
sbb
lret
cli
iret
lock
out
jecxz
hlt
in
in
repz
repnz
loope
idiv
test
ljmp
test
repz
shl
cmp
stc
out
stc
out
enter
icebp
std
sbb
ret
vpsubsb
in
in
shl
cmc
out
ror
fsincos
ret
in
aad
sti
faddl
int
enter
xchg
jmp
iret
leave
cli
sar
xor
lret
xor
int
repz
repnz
shl
jecxz
xchg
int
out
adcl
div
aaa
jmp
out
cld
cmp
cmc
iret
rol
inc
loop
cli
lea
loope
aaa
lret
repnz
aaa
loopne
cmp
je
movl
jmp
rcl
rcl
roll
mov
dec
adc
jl
aas
out
repnz
in
ret
in
loope
test
sar
out
repz
fptan
ret
cmp
xor
in
fcomp
loope
roll
loope
in
jecxz
test
lret
loopne
aaa
cli
in
int3
aad
fsubp
cmp
rcr
hlt
mov
frstpm(287
iret
aam
shr
stc
sar
lock
out
jecxz
loop
and
xchg
sti
fiaddl
in
repz
stc
int
div
cmp
xor
cmp
sar
ret
leave
mov
icebp
sbb
xor
shll
out
cmp
iret
lret
cmp
incl
xchg
fucomp
lock
in
sti
repnz
xor
cli
sar
ljmp
rol
cli
xchg
loopne
xchg
nop
fmulp
fldl2t
stc
xor
fidivrs
call
and
loop
fcomi
sti
loope
lret
out
mov
aad
sub
cmc
cmp
enter
inc
test
xchg
mov
out
in
lret
test
ljmp
cmp
ljmp
push
aad
sti
clc
loop
mov
ljmp
rcl
leave
std
idivb
repz
jmp
in
ds
shl
cmp
out
orb
aad
hlt
test
aas
cli
lock
addl
fdivrp
loope
mov
xchg
xchg
icebp
out
xor
aaa
call
lret
adc
test
sti
out
lret
cli
xchg
test
sub
iret
fdivr
jmp
rolb
in
fldl
xchg
lret
jmp
cmp
clc
cli
aaa
ret
div
loopne
in
test
ror
xchg
ror
xlat
repnz
cmc
cmp
rcr
loopne
sti
repnz
ret
sti
sar
in
mov
fcomp
out
sar
enter
out
ds
mov
sarl
mov
leave
xchg
lock
loopne
in
out
lret
fxch
cmp
fidivrs
decl
cli
fiaddl
sub
into
jmp
clc
fcmove
cmp
iret
sti
jecxz
ljmp
jmp
shl
mov
ljmp
out
hlt
cld
mov
enter
in
and
xor
not
in
fstpt
xlat
sti
stc
cli
stc
shl
sti
fcomp
and
adc
xchg
jmp
idivl
clc
jecxz
fdivl
in
shl
rcr
cmp
addb
jecxz
or
in
fdivrp
xor
int
xor
rcr
cli
xor
lock
mul
and
in
in
into
jmp
aam
leave
xor
sub
aas
addl
lret
dec
in
xor
fdivr
lock
ds
cli
repnz
stc
mov
std
jmp
out
loop
rclb
out
fmul
ss
xor
aas
fdivrp
xlat
in
aas
iret
iret
stc
or
mov
sub
addb
stc
fld
cmp
and
aas
fsubr
fcmovu
loop
xlat
mov
out
xchg
sarl
rol
shl
shl
int
out
ret
fcomi
ror
rolb
test
aad
cmp
xor
cli
jmp
rcl
in
add
leave
iret
clc
iret
in
ror
call
cmp
cmp
shl
rcr
repnz
call
ljmp
rol
jmp
cmp
sarl
clc
xchg
shl
enter
mov
cld
in
rcl
in
sub
sub
xor
aam
loopne
into
in
xor
xchg
loopne
out
mov
in
out
fstp
jmp
rolb
fcmovne
sbb
sti
xchg
call
in
in
clc
shl
ror
cld
cmp
shl
in
fimull
icebp
into
out
or
call
stc
in
cs
jmp
cli
ftst
repnz
out
sti
in
in
lea
jmp
lret
ret
int
jle
rolb
jg
lret
jl
out
rolb
lds
sti
ljmp
aad
cmp
roll
in
xchg
mov
rorb
int
in
xor
cmc
fdivr
enter
out
repz
in
cmp
lea
call
fcom
cmc
fmul
fdiv
sar
les
and
rorl
xor
idiv
out
cmp
shl
cli
xchg
ljmp
in
in
int3
int3
xor
cmc
in
cli
ljmp
loope
test
leave
enter
vpsubw
mov
addl
not
ljmp
add
cli
loopne
fadds
cmc
jmp
les
fnstcw
int
testb
call
ret
std
fldlg2
lret
shl
sar
in
out
cmp
in
cmp
into
flds
out
sti
jmp
call
hlt
out
cmp
int3
test
neg
shl
filds
out
test
in
test
aaa
rol
cmc
fst
aas
std
adc
repnz
icebp
std
shl
jmp
das
neg
jmp
roll
out
not
mov
mov
fcmove
in
icebp
test
shl
loop
icebp
fstpt
out
in
not
ljmp
icebp
fcomip
out
fcmovnu
in
jmp
shl
out
in
iret
int
repz
rcl
iret
test
fdivp
mov
xchg
repz
fmul
ror
xor
jmp
clc
ljmp
in
out
rcr
loope
aam
mov
fimuls
out
lds
into
cmc
rcr
or
fadd
jmp
stc
enter
out
cld
fidivs
enter
ljmp
std
ljmp
faddp
lret
test
cld
lret
int
xchg
mov
ss
divl
std
stc
fbstp
fxtract
in
clc
xor
lock
adc
out
roll
ss
loop
fucomi
cmp
loopne
fcomi
xlat
lock
loopne
mov
mov
out
fcmovu
loopne
cld
fcomip
jecxz
cmp
jmp
cmp
cmp
mov
in
jmp
mov
rolb
sar
ljmp
cmp
out
and
repnz
aad
loopne
iret
int3
in
jmp
cmc
iret
mul
iret
cmc
fildl
in
in
fcmovne
test
out
mov
xor
xor
out
out
call
cmp
cli
fildl
rorl
call
fcmove
xor
iret
xor
rcr
cmp
icebp
fadd
sbb
nop
out
out
xchg
stc
cmp
add
cmp
mov
call
leave
jmp
out
ljmp
cmc
std
cmc
movb
test
lea
aad
stc
fmul
in
aad
fistpll
ss
fninit
jmp
in
std
in
jmp
clc
fdiv
fdivrs
repnz
ds
call
sti
out
stc
loopne
int3
jmp
loop
in
fsub
out
cld
clc
sarb
repnz
shl
stc
sub
mov
int
lret
jmp
int3
leave
jecxz
stc
cli
repz
leave
std
enter
aad
cmc
fdivrs
jmp
cld
jmp
loope
fcomip
enter
ljmp
dec
sti
fiadds
leave
lret
fcmovne
jmp
lret
mov
out
lret
lret
and
fiaddl
int
jmp
cld
into
ljmp
fnstcw
lock
icebp
cmpb
in
repnz
lea
jmp
out
call
testb
rol
orl
lret
into
jecxz
ds
cli
call
cmp
rcl
fstp
fxch
in
fcmovnu
int3
ljmp
in
aad
leave
aam
inc
in
mov
addl
mov
jmp
rol
into
ret
rcl
aad
pop
repz
jle
xchg
lret
jl
fsub
fildl
inc
loop
fdiv
jecxz
xchg
xchg
rcr
hlt
cmc
int
xlat
std
jmp
add
ret
xchg
ds
std
fimuls
in
out
repz
repnz
test
ret
int
fcmovbe
cmp
sti
loope
icebp
jmp
ret
xor
jmp
shl
fsubrp
cmp
xchg
sar
mov
std
or
rol
xor
cmp
cli
flds
std
clc
ror
stc
fiaddl
sar
int3
shr
loop
in
cld
out
into
fmul
fcmovnb
cmp
cli
cmp
sbb
out
iret
out
rol
shl
das
xor
sar
aad
cmp
into
loopne
mul
addb
mov
in
out
xor
enter
xlat
std
in
stc
aas
loop
flds
or
repz
rol
clc
hlt
in
xor
int3
lock
jmp
in
out
stc
xchg
rclb
not
out
icebp
out
shl
addb
rol
stc
test
rcr
in
mov
out
xor
int3
fdiv
int
out
sti
in
aam
lock
fsub
in
jmp
enter
aaa
iret
in
hlt
lret
ss
jmp
adc
rcl
sti
cli
fstp
fisttps
xchg
aad
lret
xor
clc
iret
cmp
aas
loopne
ds
shl
cmc
mov
mov
decb
xor
jmp
repnz
cmp
cmp
std
cmp
mov
out
lret
aaa
ljmp
not
cmc
repnz
stc
fiaddl
loopne
testb
xchg
rol
call
stc
divb
loopne
shl
xchg
loopne
leave
fchs
mov
sbb
sar
clc
div
cmp
loopne
jecxz
fadd
rcl
sar
ror
cmp
into
xchg
sub
in
cli
out
div
aad
iret
shl
fldl
iret
fiaddl
out
loopne
iret
aad
aas
repnz
sti
icebp
iret
cli
in
mov
out
cld
stc
jmp
xlat
shr
fmul
int
xor
adc
cmc
lock
loopne
cmp
jmp
loope
shr
in
fnop
in
int3
jmp
cld
int3
stc
stc
fisttpll
loop
out
mov
cli
xchg
iret
repz
enter
aas
test
incb
call
jmp
ret
cli
lret
neg
lret
inc
shl
ret
aad
out
jmp
in
out
mov
xor
aaa
icebp
test
ror
cmp
loop
rorb
stc
mov
xchg
repnz
cmc
xor
rol
stc
xor
loope
shl
cmp
div
icebp
lret
cld
in
std
xchg
fstp
hlt
fidivs
sar
aam
lret
dec
out
cmc
cmp
clc
lock
loop
shl
fcmovb
fcmovnbe
aas
repnz
ret
rolb
sbb
les
out
ffreep
ljmp
xor
rol
rcr
sti
repnz
out
stc
aad
hlt
cli
mov
jmp
fucomip
in
int3
cmp
ljmp
addb
loop
xchg
jmp
fdivs
jmp
cmp
cli
out
out
test
clc
mov
leave
out
sar
xorl
xor
in
ljmp
idivl
xor
testb
loope
loop
in
in
fcom
aam
in
xlat
call
in
hlt
fdiv
decb
jmp
lret
icebp
jecxz
repnz
cmp
call
repz
out
cmpl
loop
int
into
int
rcl
icebp
aad
int
cmp
jmp
jecxz
fcmovnu
lret
fadds
ror
cmp
cld
ret
ret
sti
addl
test
xchg
jb
add
add
add
int3
ret
ds
jge
jae
cmp
jg
lret
jl
test
loopne
mov
lock
fadd
aaa
in
cmp
cmp
in
ret
ds
into
hlt
mov
jecxz
mov
ljmp
xor
xor
sti
xlat
ss
ror
fucom
ljmp
shl
ljmp
xchg
mov
xor
aad
cmp
cmp
hlt
cli
clc
fcmovbe
ror
fadd
in
stc
out
std
out
in
iret
xor
fdivr
lret
xorl
loop
fisttpll
loope
ret
mov
divb
cmp
ror
aad
int
into
cld
aam
jmp
jmp
std
call
lret
xchg
call
loop
enter
fcom
cmp
cmp
incb
lret
sbb
xchg
shr
into
lock
into
out
ss
loope
test
test
cmpl
lret
sti
clc
xchg
jmp
xchg
std
out
jmp
into
xor
fucomi
call
shl
in
loop
ljmp
xchg
mov
ljmp
aaa
out
mul
repz
iret
ret
int3
and
shl
int
jecxz
sar
aad
ljmp
cmp
int3
fidivrl
cmc
rcr
int
out
test
loope
int
xor
cmc
ss
into
push
rcl
idiv
out
mov
adc
lock
xor
aam
xor
call
ret
testl
call
xchg
nop
in
das
call
stc
in
shl
rcr
filds
fcmovbe
addl
decl
in
int3
fcmove
enter
loopne
into
loopne
mov
mov
out
into
mov
imul
hlt
out
lret
lock
jmp
cmp
lock
jmp
xchg
loop
aam
aaa
lds
cmp
cmpl
repnz
neg
out
mov
aaa
iret
int3
loopne
int3
in
xor
call
iret
shl
filds
mov
clc
std
int3
icebp
mov
cs
xlat
int3
xor
jmp
cmc
fcmovb
cli
icebp
mul
out
test
int
xchg
iret
in
aaa
enter
test
test
int3
std
loop
mov
sar
jmp
cli
xlat
lret
sar
fucom
test
call
std
test
repnz
out
rol
std
stc
call
aas
into
ds
test
out
out
loop
out
fsqrt
stc
out
iret
call
orb
fnclex
sti
loopne
iret
cmc
xor
cmp
xor
repnz
int3
loopne
cmc
fxtract
cmc
xchg
clc
in
cmp
repnz
xor
aam
loop
into
adc
addb
leave
test
aaa
in
xor
shr
icebp
fdivp
cmp
fstp
hlt
int
xchg
in
nop
xchg
xor
leave
rcr
cmc
ds
in
xlat
into
in
repz
decl
lock
shlb
hlt
rol
xor
cmp
in
call
aaa
call
ror
cld
hlt
int3
hlt
aas
fcom
flds
out
repz
sub
in
cmp
stc
sti
dec
rcl
sbb
out
xor
cli
in
xchg
lret
leave
enter
xlat
repz
into
fmul
std
ffreep
loope
aas
test
mov
jecxz
mov
loop
rorb
enter
xor
ds
fst
sub
test
fadds
mov
in
xor
xor
aas
aad
ret
std
out
fdivrs
testb
mov
fsubr
out
xchg
aaa
das
ljmp
ror
cmp
shl
icebp
and
test
lret
cmp
jmp
cmp
repz
sti
fsin
cmp
in
xchg
filds
loopne
lea
int
loop
incl
jmp
mov
jmp
lret
ds
fcmove
fisubrl
insl
push
add
jg
lret
jl
cmp
int3
out
cmp
adc
in
icebp
test
mov
mov
ljmp
cmp
shr
cmp
mov
ljmp
xchg
lock
faddp
mul
into
frndint
in
cmp
int
adc
sti
stc
std
xchg
mov
in
in
loopne
shl
das
xor
sti
cmp
lret
decb
jecxz
in
and
xor
lret
xor
in
xor
in
sti
loope
adc
fsubr
ret
fisttpl
lock
ss
div
aas
out
loope
rol
roll
leave
out
in
jmp
iret
xchg
out
out
jmp
xor
fsubrp
rcl
idiv
stc
xlat
out
fmulp
in
int3
jecxz
rorb
fsubr
fcom
fincstp
icebp
ljmp
mov
xchg
in
ss
cli
stc
ds
ret
aam
fdiv
ret
mov
cld
test
loope
xor
fsubr
iret
cmp
sarl
ljmp
mov
mov
in
fucomip
xor
xor
in
sti
in
aad
icebp
fld
std
fcmovnbe
cmp
cmp
loopne
mov
into
fucomi
ljmp
cmp
fdivr
cmc
fdiv
fst
aam
fcmovnu
cld
call
clc
out
xchg
xor
cmp
xor
call
iret
cmp
fiadds
lret
fdivrp
std
out
call
rcl
jmp
std
ret
aad
mov
faddl
mov
test
jmp
in
aad
int3
cmp
clc
test
ret
loop
call
xchg
xchg
mov
shrl
repnz
int
bnd
cld
cli
stc
repnz
out
fucompp
in
hlt
in
in
cld
int
vpsrld
sti
repz
lret
xlat
cmp
ret
repz
mov
jmp
orb
jmp
in
repz
call
cli
out
cmc
fcmovu
aad
ret
fsub
out
leave
int
clc
loopne
sub
xor
icebp
int3
int
icebp
repz
push
ret
hlt
int
cli
movl
in
lock
fucomi
cmp
aas
loop
lock
cmp
jmp
hlt
fimull
loop
das
xor
stc
repz
cmp
fcmove
ljmp
std
out
xchg
int3
in
xchg
out
xlat
iret
repz
enter
in
loop
cmp
out
jecxz
mov
ret
clc
leave
std
in
in
shl
rol
ljmp
loope
neg
cmp
lret
xlat
call
into
out
mov
fst
cmp
icebp
or
rcr
repnz
test
rcr
hlt
in
xlat
ret
ss
cmp
faddl
ret
icebp
out
enter
fldl
repz
in
mul
out
sti
lock
fcomip
repz
out
ror
add
enter
lock
std
into
loopne
out
jmp
ds
fcomi
sub
mov
loopne
mov
mov
icebp
rcl
loop
cmp
cmp
loope
std
cld
out
fsubp
fmul
ret
cmp
orb
ss
xlat
iret
loope
sarb
adc
sti
icebp
clc
fcompp
call
repnz
loop
xor
in
sti
cmp
cmc
icebp
repnz
fiaddl
fucom
std
test
test
mov
or
enter
std
out
lret
into
ljmp
repnz
sti
fmuls
into
in
xor
call
out
shl
hlt
call
test
ret
mov
testl
icebp
out
shl
leave
leave
xlat
leave
cmp
into
rol
loop
test
int3
jecxz
leave
lock
out
xor
repz
fcomip
neg
lock
jmp
fucomi
xchg
in
xor
lock
ret
int
shr
in
rol
hlt
adc
shr
add
add
ds
rcr
fsubr
push
iret
movsl
cmp
lret
jl
out
and
cmp
mov
test
hlt
jmp
fcmovnu
aas
fcomi
ds
iret
cli
adc
jecxz
and
jmp
call
into
int3
sarl
xor
xor
enter
in
sti
cmp
icebp
loopne
out
cli
cmc
test
mov
icebp
cld
std
xchg
out
das
shr
into
shr
stc
ljmp
ret
test
out
incb
lret
repnz
jmp
test
out
xlat
cmp
aad
fcmovnu
repnz
clc
lock
stc
in
iret
xchg
enter
out
jecxz
sti
xor
fdivs
icebp
cmp
shl
ret
test
sti
ljmp
mov
lret
icebp
jmp
rolb
sbb
xchg
fdivr
out
ljmp
lret
fcmovnbe
std
iret
repz
fcmovbe
xlat
fstp
aad
ds
roll
enter
in
dec
call
in
iret
xlat
loopne
repz
int3
loop
ds
fnclex
jmp
fisttpl
xor
divb
int
out
jmp
sub
icebp
enter
mov
in
lret
loope
fldl
cmc
xor
cs
enter
into
xlat
sti
stc
add
orb
loopne
out
repz
into
stc
clc
aas
flds
test
test
mov
addb
icebp
cmp
xor
rcl
enter
fcmovne
std
enter
test
out
clc
cmp
aaa
lock
aad
roll
rorb
lock
aam
out
ljmp
enter
in
fnstcw
cmc
stc
cmp
cld
in
mov
lock
into
shlb
cmp
test
mov
mov
std
shlb
sub
xor
lret
fidivl
rol
clc
repnz
leave
fucomi
lea
shr
ret
leave
fst
div
hlt
cmp
loop
int
fcmove
sti
out
repz
shlb
aad
ftst
ror
divb
aas
not
in
shl
fabs
std
jecxz
loope
xchg
xchg
mov
xor
jmp
aad
cmp
loope
cli
rorb
std
shr
lea
xlat
fdecstp
int3
or
test
fcmovbe
testb
mov
sar
in
xor
jecxz
fdiv
aas
shl
in
xchg
int3
stc
test
ljmp
lret
hlt
fcomp
in
int3
xor
in
test
lea
jecxz
lret
hlt
jmp
cmp
fndisi(8087
xlat
out
cmp
out
std
ret
adc
in
test
lock
in
jecxz
xor
lret
in
cld
shll
in
sti
not
sar
cli
sti
mov
fisttpl
mov
rcl
enter
sar
xlat
shr
icebp
test
loopne
aam
sar
xchg
int3
mov
xlat
icebp
sti
ret
fcmovbe
cmp
shl
test
mul
in
leave
call
loop
rorl
shl
int
fistpll
clc
fdivp
rolb
out
stc
or
adc
leave
div
aad
cmp
aam
ds
cmpl
cmc
lock
lret
loop
ljmp
lock
test
xchg
int
xchg
fildll
iret
call
int
loopne
fdivrs
cmp
in
enter
leave
enter
mov
add
ror
repnz
cmp
lock
ss
repnz
not
in
sbb
lret
xchg
rcll
ret
loop
iret
xor
repnz
or
incb
sbb
test
cmpl
ror
xor
lret
shr
mov
lret
clc
std
in
adcl
int
ss
neg
incl
addl
fdivp
test
mov
jmp
fcmovnbe
int
loope
insl
lahf
dec
pop
test
pushf
das
jg
lret
jl
cs
shr
fidivrl
cmp
ss
cmp
aas
icebp
rolb
fabs
in
leave
test
jmp
xchg
lret
ss
leave
xlat
shr
rcr
rolb
cli
cmp
loop
fcompp
int3
int
int
cmc
rol
call
shr
repnz
faddl
out
iret
loop
cmc
out
cmp
aas
cmp
aam
ffreep
addl
out
std
shr
in
int
fst
cmp
idivl
shl
lds
in
xlat
test
mov
xlat
ljmp
ffree
loopne
fcomi
fldl
loop
in
enter
in
out
lret
shl
jmp
cmc
xor
loop
aas
std
cld
call
and
jmp
xchg
xor
enter
repz
int3
cmp
aas
lock
out
out
lock
ljmp
stc
cmp
int3
sti
xchg
out
jmp
leave
int
loop
xchg
icebp
ret
rcl
xor
in
cmp
aad
repnz
call
loop
lock
xchg
aas
ret
ljmp
fcmove
jmp
cli
push
cld
in
fdivp
fcmovu
fiaddl
sub
lret
jmp
fprem
out
ss
cmp
ret
xchg
std
lret
in
decl
lret
in
in
ljmp
aam
cmp
loope
mov
jmp
dec
xchg
cmc
loop
clc
cld
aam
hlt
push
ds
int
out
cmp
mov
test
cli
int
jecxz
jmp
icebp
iret
idiv
shr
cmc
enter
lock
cmc
mov
ret
aam
out
cld
mov
in
in
shl
icebp
cmp
xor
out
ror
in
in
int3
les
enter
in
sti
fiaddl
aad
cld
cmp
ret
test
icebp
sti
fmul
mov
fucomip
out
mov
ljmp
ret
lret
aaa
out
fdivrp
aad
aad
repnz
cli
fsubr
out
mov
icebp
in
ljmp
clc
shl
ret
ror
mov
sti
jmp
sub
cs
divb
repz
xlat
call
cld
repnz
ffree
xlat
mov
out
jmp
fsubr
incl
in
xor
das
in
xlat
cmp
cmp
std
hlt
add
into
cli
out
jmp
in
ret
lret
in
xlat
out
out
std
clc
cli
in
cld
fld
idiv
in
loop
xchg
in
shll
int3
int3
ror
cmp
aam
iret
shr
cmp
test
ret
mov
aam
fldl2t
inc
mov
shr
jmp
into
xlat
xor
cld
hlt
icebp
cli
jecxz
aas
rol
leave
jmp
ret
test
xor
shlb
out
shl
aaa
in
in
ljmp
call
jmp
fcmove
rcl
in
shr
imul
out
aaa
call
lret
cmp
aam
rcl
mov
mov
in
in
aaa
repnz
aad
clc
out
int3
lret
rolb
cld
xchg
out
mov
ror
xor
aad
sti
aaa
out
cmp
incl
loop
loop
cli
lret
addb
ror
xor
in
in
fucomi
xor
out
ret
leave
repz
out
in
lret
lret
call
jmp
jmp
ss
fmul
ror
in
hlt
jmp
in
in
loop
test
in
fucomip
in
fsubr
cmc
in
clc
cld
idiv
shr
jecxz
sar
cmp
flds
lock
out
xchg
aam
loopne
ror
rcr
xor
fst
sarl
repnz
loopne
out
popl
lock
div
ror
sar
cmc
shll
ret
int
stc
xchg
int3
fstl
adcl
xor
jmp
out
cmc
xchg
out
enter
mov
rorb
shll
not
std
rcl
add
jmp
iret
iret
sarb
aad
aad
pop
sbb
mov
shrb
jl
add
rolb
jecxz
xlat
xchg
lret
lock
lock
jmp
sarl
idiv
in
cmp
ret
in
fmul
nop
in
rol
xor
out
sar
fbstp
sti
repnz
sub
roll
mov
out
loope
xchg
xor
les
out
repnz
aas
loopne
cli
cld
test
jecxz
sub
in
lret
lret
fsubrp
rcr
in
xor
cmp
fcompp
icebp
int
loope
fdivrp
call
out
sub
repnz
xchg
shl
rol
aad
aad
shl
aad
test
adc
stc
in
jecxz
sti
mov
rcr
rcl
repnz
stc
out
cmc
ss
icebp
fucom
repz
stc
clc
stc
ds
lret
stc
or
mov
divl
icebp
into
int3
cmp
sti
sbb
sti
loope
mov
mov
test
xor
xor
into
cmp
cmp
sbb
call
xchg
fisttps
xor
fmulp
xlat
cli
int
shl
cmp
cld
lret
in
stc
jecxz
int3
loop
mov
icebp
jmp
xor
iret
out
rcl
icebp
shl
mov
out
test
sbb
jmp
jmp
stc
call
sar
aas
bnd
add
lret
xchg
shl
cld
loope
aaa
sti
xlat
fucomp
lret
out
cmp
fdivrp
cmp
fdiv
clc
into
int3
sti
leave
out
roll
hlt
int
out
icebp
repz
jecxz
lds
test
iret
or
jmp
out
out
repz
iret
iret
fcmovnu
xlat
fcmovnu
lock
sti
fisttpl
ds
xchg
subl
xlat
cli
fcmove
lock
jmp
lock
into
out
in
cli
lret
test
xchg
fucomp
ljmp
xor
aad
iret
out
inc
shl
std
rol
sbb
ljmp
stc
fxch
cmp
shr
fcmovnu
std
call
aas
xchg
fsub
sbb
leave
in
fmull
shr
leave
aad
std
in
repz
in
cmp
test
clc
hlt
aam
out
fisttps
loopne
icebp
ljmp
loope
repnz
loopne
mov
iret
lret
loope
cmp
hlt
in
xor
fcomip
enter
ret
sar
cmpb
or
lock
mov
xor
fdivs
in
fiadds
aad
stc
roll
sti
int
hlt
icebp
in
in
cmp
jmp
repz
sub
clc
fcmovnb
xchg
icebp
loopne
decb
xlat
lock
cmp
shr
in
test
fmull
xlat
xchg
ret
in
lret
test
lock
xlat
repz
cld
clc
std
idivl
cmp
cmp
into
faddp
jecxz
dec
mov
out
out
mov
jmp
in
cmp
cmp
stc
fsub
leave
idiv
mov
std
mov
int
cs
shr
sarl
call
cmp
repnz
cli
ret
in
sbb
in
cld
loopne
dec
sub
repnz
fcmovbe
lret
in
ds
std
cmp
hlt
test
fucomp
fisttps
ret
int3
cmc
out
jmp
aaa
fucomp
int3
stc
test
xchg
sbb
std
into
int3
call
leave
aam
out
fadd
in
sti
std
loope
std
sar
into
shl
fsub
jmp
fucomi
out
mov
ss
hlt
test
aas
out
in
repnz
repnz
xlat
test
in
in
cmp
int
fadd
rcr
neg
fcomp
mov
fcmovnb
and
aaa
test
fprem1
aas
idiv
fcmovnbe
xor
flds
xlat
lret
fcmovnu
loop
mov
into
iret
sti
xor
ss
hlt
neg
in
cmp
icebp
test
idiv
movl
xor
xor
xor
cmp
icebp
fsubr
shl
flds
in
fldln2
shl
mov
pop
leave
ret
push
mov
jmp
rol
rol
fstp
dec
lahf
push
dec
insl
stos
cwtl
in
cmp
jg
add
xchg
xchg
repz
call
aad
cmp
int
call
sar
sarb
xchg
clc
in
decl
repnz
call
ljmp
cmp
xchg
and
frstpm(287
jmp
repnz
cmp
lret
movl
ljmp
ror
cmp
cmp
out
out
add
call
mov
ret
lock
fidivrl
cmp
bnd
cli
jecxz
sar
lds
movb
shrl
sti
in
into
cmp
loopne
fsub
in
sar
clc
loope
out
int3
sti
std
lock
enter
das
cmc
enter
sar
cmp
cmp
rol
jecxz
mov
adcb
xlat
icebp
fnstsw
clc
in
cld
lret
enter
out
xchg
stc
shl
nop
enter
out
cmp
ret
fucomi
sbb
repnz
shr
lea
loopne
jecxz
into
sub
aaa
out
call
jecxz
fld
test
call
in
mov
iret
in
xlat
fxtract
fnstcw
loop
roll
fucomip
leave
fisttpll
rcr
xor
leave
cmp
clc
rolb
incl
into
std
int3
lret
out
cmp
int3
cmp
faddl
ret
enter
lock
rcll
rol
lret
out
cs
cmp
ret
in
icebp
idivb
ljmp
xchg
shlb
fcmovnu
fldlg2
xor
ss
aad
fmuls
adcl
lock
leave
icebp
call
cld
cmp
aas
clc
cmp
xchg
enter
loop
mov
xor
icebp
not
cmc
call
stc
idivb
aam
neg
jecxz
stc
leave
int
jmp
icebp
jecxz
out
in
in
repnz
rcl
clc
xor
in
les
enter
xor
int3
push
sti
int3
sbb
fdiv
call
icebp
fucomip
mov
mov
int
aam
ror
ret
in
stc
fdiv
shl
aad
lock
jmp
std
mov
mov
das
xor
clc
icebp
ret
iret
jmp
lock
roll
lret
lret
in
test
ljmp
into
call
out
ds
fidivrl
iret
fsubr
loopne
ror
subl
in
lret
int
repz
aam
lock
fucom
fcomi
vshufpd
loop
shr
out
imul
enter
out
cmp
fninit
in
out
xchg
clc
cli
fsubr
xlat
lret
iret
call
in
into
ss
aad
ljmp
cmc
loope
ret
aam
orl
stc
cmp
icebp
ljmp
ljmp
ret
incb
in
mov
add
jmp
in
into
fcomi
call
add
rol
fcmovnbe
in
leave
jmp
or
cmc
aad
aad
in
out
in
jmp
shl
out
rcl
jmp
xchg
jecxz
shrb
imulb
aam
cmp
ljmp
sti
xchg
xchg
cld
jmp
out
iret
test
repnz
in
lock
sti
aam
aad
rcr
idivl
adc
loopne
sti
leave
icebp
test
in
shll
out
clc
sarb
hlt
lret
enter
repz
cld
jecxz
cld
sbb
in
das
xlat
aaa
into
iret
cmp
repnz
cmp
into
loopne
aad
std
loop
loopne
fstl
hlt
into
imul
xor
lret
sar
repz
fmul
repnz
jecxz
mov
loop
hlt
enter
out
fiadds
idivb
fmul
iret
repz
icebp
fsub
iret
idiv
xchg
std
mov
in
idiv
iret
out
addb
cmp
ljmp
aas
fdivrp
repz
fcomip
incb
mov
cmp
aaa
ss
lret
iret
test
xchg
fnstsw
xchg
in
std
loop
lret
nop
xor
xor
icebp
fcmovnbe
fst
iret
hlt
cmp
aad
idiv
loopne
ffreep
fsubr
in
xchg
in
rcll
fucomp
aad
call
cmp
filds
in
std
call
xchg
aam
xor
xor
jmp
cmp
fmul
rcl
icebp
icebp
leave
fcmovb
fiadds
sti
lock
int3
push
xor
push
movl
jmp
into
rol
aad
rcl
jmp
push
jg
add
jmp
cmp
hlt
fcmovnbe
add
roll
enter
test
xchg
in
iret
sub
repnz
lock
call
loope
into
fucom
out
out
xchg
out
mov
aam
repz
out
fldlg2
fdiv
fninit
in
out
aam
ffreep
out
orb
shr
aad
aad
loope
sarl
fucomi
ds
test
mul
or
xchg
fcomp
rcr
in
jmp
fcmovnbe
cmp
loop
repnz
into
sub
loope
cmc
out
sti
xor
in
std
fsubr
repnz
ret
test
movb
lea
aam
xor
neg
stc
fstpt
out
cmp
rol
shl
out
sub
xchg
out
bnd
fxch
icebp
call
aaa
fcmovnbe
jecxz
into
lock
mov
in
std
mov
iret
das
lret
xor
xor
fcom
sbb
fld
shr
iret
loope
enter
xor
stc
ljmp
and
add
ljmp
mov
cs
in
int
rcr
shr
ds
xchg
cli
sbb
icebp
xor
out
stc
shll
sti
pushl
ljmp
std
out
in
sti
aam
into
adcl
lds
cmp
aaa
lret
cmp
ds
out
fst
adc
fadds
xchg
in
cmc
stc
enter
hlt
stc
icebp
out
cmp
clc
aam
icebp
leave
stc
fisttpll
loope
ror
rcl
out
in
cli
hlt
out
xor
xlat
ds
shr
in
fimull
int
int
xlat
jmp
lret
sbb
in
cmp
jmp
mov
test
iret
out
filds
xor
stc
aad
stc
hlt
jecxz
cmp
lret
xor
addb
iret
ror
in
out
fmul
repz
in
rcl
div
xabort
loop
sub
fsub
int
jecxz
sub
lret
std
in
icebp
xor
int
cmp
fsubr
fcmovnb
fmuls
xchg
loopne
call
int
xlat
fstpt
not
lret
aas
sti
loope
jecxz
fdivp
orb
cld
mov
aaa
cmc
enter
cmp
cld
clc
cmp
std
jmp
fsubp
loope
sti
mov
out
fsubrs
cmp
in
hlt
cli
shl
cmp
aad
lea
test
ret
in
clc
shl
imul
sbb
out
shr
int3
lret
xchg
mov
icebp
shr
mov
int3
ljmp
in
lock
in
out
xchg
loop
jmp
mov
in
in
hlt
fdivr
icebp
ljmp
xlat
ffree
cmp
ret
loop
sti
out
nop
repz
shll
shr
ds
les
fisttps
jecxz
lock
icebp
cmc
ret
ret
stc
lock
rcl
out
cli
clc
addb
cld
movl
xor
in
call
cli
fdivrp
shl
ret
xlat
mov
cli
iret
xor
in
lock
lret
cmp
ret
lock
sbb
addl
lret
in
sub
lock
lock
xchg
mov
repz
mov
xor
xor
out
in
fdivl
repnz
sub
in
xchg
call
into
into
test
call
xor
cli
in
aas
ds
hlt
test
jecxz
rcl
xor
ret
xor
jmp
shl
aaa
fcom
loopne
cmp
xlat
int
or
mov
shl
repnz
shlb
shl
std
out
fidivrl
aad
cmc
rol
div
mov
neg
cli
xchg
ljmp
out
xor
leave
out
xor
cmp
aas
out
mov
fcmove
test
in
loopne
shl
jmp
xor
lret
fildl
stc
addb
xchg
repz
int3
aaa
sub
cmp
hlt
out
aam
hlt
ss
jmp
loopne
sti
icebp
call
loope
mov
sti
jmp
enter
jecxz
std
loope
out
test
loope
ljmp
fdiv
stc
fdiv
xor
int3
adc
ret
in
jmp
add
cld
enter
cmc
ret
iret
rcr
int3
aam
inc
cld
test
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sbb
jmp
rol
enter
aad
add
xchg
push
dec
clc
cmc
push
sarb
add
xor
into
cmp
cli
sbb
cmc
repnz
testl
iret
bnd
in
sbb
loopne
into
rcr
cmc
cld
loope
lret
jmp
lret
loopne
icebp
out
into
jmp
xlat
sti
aam
ror
fcom
enter
cli
lret
cli
loope
rol
into
into
in
cld
cmc
out
fstp
cmp
loope
fdivr
adc
xchg
enter
mov
loopne
rcl
enter
faddl
aam
xlat
clc
lock
fiaddl
int
in
xlat
leave
repz
xor
out
loopne
fdivp
shl
aas
loopne
fldl
fisttpll
rol
cmc
cmc
xor
repz
aad
cmp
addb
add
xlat
mov
in
mov
out
mov
xor
out
into
xor
in
clc
loop
sar
out
rcr
addl
clc
rcl
out
iret
lock
in
fsubrl
out
fsubr
cmp
fsub
hlt
mov
out
out
test
xor
into
loopne
lds
out
cld
cmp
xor
div
jmp
fdiv
ljmp
sti
std
out
enter
sti
out
stc
vaddsubpd
out
cli
loope
mov
dec
call
lock
loop
cmp
in
ljmp
cmp
testb
cld
xchg
xor
jmp
ror
icebp
iret
adc
fldl
call
icebp
mov
repz
in
fdivr
cli
cld
loope
shl
jecxz
fcmovnb
xor
les
int
leave
out
jmp
repnz
into
out
ss
cli
vpsadbw
neg
test
jecxz
iret
aad
cmp
roll
loope
clc
loop
out
or
out
int3
fmul
lock
aam
repnz
rcr
in
int3
ds
clc
test
int
stc
ljmp
int3
idiv
xor
rcl
ss
in
cmp
cmp
and
ret
testb
lock
in
xor
sar
int3
cld
xlat
vpaddusb
jecxz
fndisi(8087
clc
idiv
mov
iret
lret
hlt
iret
xor
loop
in
fstp
in
fldl
shl
imul
fxch
cli
push
loopne
test
in
mov
rol
sub
call
enter
cld
xlat
in
ds
fstp
fcmovu
addb
jmp
fcmovnbe
ror
cmp
out
shl
cmc
ljmp
icebp
loop
lret
xor
in
lret
sarl
aaa
cmp
sub
cmc
rol
test
xchg
cli
loopne
test
cmp
xor
cmc
loop
std
enter
in
fucomp
mov
adcl
enter
call
sarl
aaa
icebp
lock
sbb
out
mov
jmp
into
aaa
xor
aam
shr
cmp
out
xchg
out
testb
rorb
sti
jmp
cli
into
icebp
aam
fsub
out
loopne
cmp
in
out
cmc
jmp
loopne
xlat
lret
int3
xor
dec
int3
loope
cmp
fsub
icebp
fmulp
stc
lret
int
clc
in
in
lret
sub
loop
fxch
leave
xlat
stc
cmp
cmp
test
idivl
in
xlat
fucom
mov
into
cli
or
stc
in
iret
cmp
xlat
jmp
aaa
call
push
stc
fidivrl
call
int
in
fsubr
shlb
lock
cmc
ljmp
shl
loopne
xchg
ffree
aam
sti
out
in
in
xchg
imul
sub
int3
in
repz
clc
fucomi
jecxz
cmc
mov
test
flds
in
hlt
in
cs
cmp
rcl
stc
std
out
ffree
cli
fstp
call
repnz
xchg
xor
rol
loop
aam
rcr
fnstsw
iret
out
loop
loope
decb
fucomip
ljmp
xlat
out
xor
repnz
test
addl
mov
xlat
jmp
aaa
loopne
aas
add
rcl
rolb
out
sti
shl
repnz
aad
jmp
xor
aam
cmp
shr
repz
iret
shl
jecxz
cmc
in
jmp
in
loopne
out
clc
jmp
cli
lret
aad
out
ds
fldl
jmp
ret
into
xchg
sub
int3
enter
jmp
cli
aas
shl
test
clc
stc
test
lret
out
ficoms
xlat
out
xor
jmp
cmc
ret
std
int3
fisttpl
adc
and
mov
mov
adc
xor
or
jmp
int3
ror
fnop
xchg
sti
add
repz
jg
add
call
out
in
int3
fisttps
aad
lds
ss
in
div
aam
loopne
loop
out
aad
xchg
in
enter
in
out
lock
fcmovne
cmc
cmc
xor
repz
adc
in
fmul
enter
iret
loopne
xchg
lret
out
xlat
in
neg
out
cld
repz
cmp
repz
leave
in
sbb
or
loop
out
lock
sti
idiv
leave
cli
cmp
lret
idiv
cli
out
loop
int3
ljmp
sub
int3
sti
cmp
repnz
clc
or
roll
loop
ljmp
call
clc
cmp
into
int
lock
out
cmp
in
jecxz
loop
shl
cli
call
les
cmp
leave
in
repz
cmc
hlt
fsubp
test
lds
loopne
ljmp
xor
cmp
xlat
ss
cmp
sbb
out
addb
out
mov
ret
jmp
fprem
lret
aam
rcl
ds
in
out
vpmuludq
out
jmp
iret
cs
idivb
cmp
cmp
loope
xlat
jmp
std
lret
mov
out
in
cld
das
das
jmp
icebp
cmp
fadds
out
ret
cli
out
ret
fsubp
and
out
in
xchg
ljmp
jmp
int
hlt
les
cmc
fadd
cmc
lret
loopne
enter
mov
sarl
aaa
lret
fsubrp
cmp
icebp
xlat
rcr
leave
mov
int
in
filds
xor
xor
aaa
repnz
jmp
rcr
aam
jmp
jmp
call
mov
rcl
in
cmp
int3
xlat
fmulp
int
out
in
aad
jmp
mov
mov
loop
addl
in
out
icebp
out
in
std
fsubr
loop
aam
clc
fcmovne
enter
lret
in
fimuls
xor
loop
xor
fcmovu
cld
cmp
cmp
jmp
mov
repnz
icebp
fiadds
ffreep
les
ljmp
repz
fld
cld
std
mov
sub
int
loope
xchg
mov
xor
xor
loope
in
cmp
cmp
mov
repz
jecxz
ljmp
aad
out
sub
fcmovb
and
call
into
shl
mov
icebp
xlat
loopne
stc
repnz
into
std
cli
std
jecxz
out
aas
jmp
adc
leave
int3
int3
addl
rcr
sti
clc
cmp
aad
ret
sbb
loopne
testb
shr
jmp
shr
cmp
jecxz
out
xor
in
xchg
flds
and
enter
cmp
jmp
out
cld
ds
aam
neg
loop
test
sub
shl
int3
cmp
xlat
shl
cmp
sub
sti
call
loop
hlt
loop
cs
ror
hlt
lock
fcmovb
into
cli
lock
call
in
faddl
xchg
xor
enter
cmc
cmp
and
sbb
ret
lret
in
cli
xchg
mov
xchg
mov
fucomip
loope
rcl
div
std
lock
and
sti
out
rcr
in
loop
out
enter
in
stc
aad
iret
lret
lock
cmpl
mov
fisttps
iret
cmp
cmc
icebp
cmp
cmp
into
cli
loopne
vpmullw
loopne
call
rcr
out
out
in
xor
sarl
fstpt
aad
cmp
fldl
cld
ret
iret
lret
jmp
leave
xor
sub
icebp
aad
shll
in
jmp
jecxz
loope
out
xchg
out
das
out
enter
sti
std
sti
cmp
int
cmp
out
int
sub
int
into
out
jmp
cmp
lock
rcl
adc
loope
xlat
fsubr
mov
leave
mov
ret
in
cli
fsubr
fldl
adc
mov
incl
jmp
xor
test
sti
aaa
out
cli
clc
lock
out
call
loop
sar
out
loopne
xchg
test
cmc
call
rcr
idivb
in
loop
mul
xchg
out
mov
in
lock
repnz
into
fdivs
fpatan
loope
loopne
cmpb
shl
fimull
cld
fadd
test
in
xor
shl
jmp
fdivr
rol
lock
clc
rorb
bnd
xlat
ror
fcmovu
fcmovne
sbb
jmp
jl
add
icebp
test
mov
hlt
xor
ds
cli
xchg
ret
fucomip
ret
int
jmp
int3
jecxz
jmp
sti
clc
cmp
ds
sti
in
fcomi
xchg
sti
loopne
xchg
repnz
das
icebp
call
sti
repnz
cmp
sbb
icebp
aad
ljmp
into
nop
in
icebp
in
shr
jmp
cmpb
shl
shl
ret
movb
repnz
fcmovu
into
fdivrl
icebp
loopne
inc
fucomi
clc
in
mov
adc
shl
les
cmp
xlat
aas
call
aaa
repnz
cmp
fld
stc
sti
xchg
mov
call
lock
les
cld
addl
lret
lret
out
mov
mov
in
cmc
aad
cmp
aad
xlat
ljmp
hlt
addl
mov
in
cmp
aam
stc
sar
testl
jmp
xchg
int3
shll
xor
leave
shl
into
sar
shl
jecxz
repz
cli
cmc
ret
orl
aaa
fcom
fmul
lret
xlat
loopne
cli
cmpl
decl
in
out
lret
xchg
jmp
sub
rcr
in
in
leave
cmp
repz
lret
rol
cmp
ret
fimuls
fucomip
xor
ret
out
lret
jecxz
sarb
out
fisttps
int3
icebp
loop
xlat
jmp
leave
jmp
aad
aas
aas
test
repnz
fisttpl
loope
in
int
out
aad
xor
in
sub
out
repnz
int3
and
call
rcl
hlt
fcomip
repnz
cmc
ror
repnz
loopne
fcmovne
fldlg2
out
fmulp
xchg
xor
xor
loope
stc
loopne
lock
aas
sbb
test
xor
in
in
lret
out
call
sar
fdivrs
ret
sti
call
sub
lret
icebp
iret
shl
loop
jmp
clc
repz
xor
cmp
std
xchg
test
les
mov
ror
loopne
xor
xor
shr
filds
fcmovnb
ret
nop
out
jmp
mov
std
fcmovb
xor
cmp
aam
std
aad
fsub
clc
test
flds
jecxz
in
xor
int3
rol
fsub
into
out
aam
lret
filds
xor
enter
out
addl
jmp
out
xchg
xchg
jecxz
ret
cli
xor
xor
fyl2xp1
loopne
into
rol
xlat
idiv
cld
out
les
out
fxam
out
fdivs
stc
icebp
aam
call
in
fsub
roll
loop
jmp
xchg
icebp
out
ret
stc
out
out
fcomp
into
int3
repnz
in
cld
loop
fndisi(8087
loope
enter
xchg
int3
xchg
pop
shr
hlt
rcl
out
fidivrl
aam
ds
aam
test
stc
in
and
fimull
ss
vpaddusw
xor
fsubp
cmc
ret
cmp
repnz
cli
mov
test
or
fucomp
xor
shr
repz
lock
xor
clc
cli
out
loope
orb
cld
lret
std
into
in
jmp
in
int
mul
jecxz
sar
hlt
fnstsw
mov
test
mov
sub
cli
sti
cli
hlt
cmp
adc
shl
dec
fiadds
in
call
out
clc
sti
cmp
aas
repz
cmp
fcom
hlt
repz
mov
jmp
cli
xchg
out
mov
loopne
int
cli
cmp
rol
faddp
rcr
cli
ret
mov
inc
fiadds
out
repz
xor
fdivrs
ljmp
fucomi
jecxz
stc
lea
xrelease
cmp
xor
iret
iret
neg
cmp
xlat
lock
lock
push
hlt
jmp
in
loopne
cld
loope
repz
ret
in
cmp
hlt
cld
rcl
hlt
cmc
and
ret
testl
hlt
shl
jmp
out
cmp
cmp
cmc
loop
xlat
loope
jmp
in
int3
fiadds
shll
out
aaa
cmp
shl
cmc
into
xor
cmp
lock
cmc
cld
clc
jmp
jmp
stc
in
iret
shr
repnz
rolb
call
lea
xchg
jb
add
incl
add
ds
fstp
fnstsw
aaa
dec
jmp
mov
add
ret
xor
fcmovne
cmp
shl
cmp
test
clc
mov
fcmovb
fistl
into
xor
ss
sti
call
roll
cld
test
lret
out
out
std
out
out
ret
in
cmp
call
ret
mov
mov
aad
call
aas
out
int3
repnz
or
cmp
aas
test
jmp
mov
jmp
sti
loop
fmul
cmp
lret
aam
rol
and
xchg
out
loopne
ds
repnz
xor
fsub
hlt
repnz
fdivrl
cmc
in
xchg
in
in
leave
mov
shl
sub
xor
xlat
fstp
aam
lret
out
xchg
repz
fxch
in
sti
lock
ds
vcmpss
ror
cmp
loopne
stc
loop
les
in
aam
decl
repnz
call
repz
out
loopne
lock
repnz
test
in
std
fcmovb
repz
aaa
rcr
out
call
repz
mov
out
ljmp
test
loope,pn
aad
repnz
fsubr
jmp
fidivrl
ds
rol
cli
out
in
mov
xchg
test
int
aad
fcomp
xor
int3
xor
aas
testl
cmp
cmp
jmp
fnstsw
loopne
loopne
icebp
stc
ret
loop
decb
shl
div
int3
in
out
hlt
fstp
jmp
shl
lock
ljmp
out
fiaddl
lret
shr
icebp
out
aaa
add
in
test
roll
lock
shl
xchg
repz
aad
lret
hlt
cmp
fcomp
fiadds
fcmovne
cli
clc
sti
cli
jmp
fsubr
fsub
aam
faddl
sti
fld
adc
fdiv
std
std
call
fsub
into
shrl
shr
cmc
out
cmp
aas
iret
clc
lock
inc
xor
fimull
out
aaa
cmp
int3
xor
cmp
cmp
ror
shr
hlt
rolb
ljmp
int
hlt
xlat
cli
out
lock
fucom
ss
rcr
fadds
mov
out
xchg
mov
shrl
lret
ss
ljmp
in
rolb
aad
clc
in
mov
int
lock
int3
icebp
shr
fstp
cmp
fdiv
jmp
std
in
jmp
xchg
in
out
sub
ret
lret
cmp
stc
aam
into
cld
incl
fsubr
call
ljmp
ljmp
div
aad
loope
std
sti
adc
sub
lret
jmp
aaa
not
loop
in
cli
les
jmp
cld
fdivr
test
and
out
int
fiadds
fdivs
jmp
div
cmpb
shl
clc
clc
mov
xchg
fists
jecxz
lret
sti
shr
fsub
hlt
cmc
xor
lock
fdivr
fisttpll
clc
leave
repnz
lock
sar
repz
out
ss
aas
fsub
sar
addb
in
mov
sub
in
cs
fldl2t
fidivrs
lock
lock
ret
stc
adc
out
loopne
int
out
sbb
ror
into
in
xor
rcr
call
lock
xlat
call
mov
iret
ret
in
out
xor
cmp
jmp
fcom
incb
cld
test
mov
shr
xor
aam
rolb
fstp
out
mov
stc
fndisi(8087
jmp
out
adc
neg
loop
xor
std
int3
aam
out
sar
sar
frstpm(287
test
aam
xchg
fistl
shl
out
loop
int
repz
cmp
mov
in
in
call
rcl
ret
fcmovne
leave
jmp
cmp
repz
in
addb
fistl
div
vcvttpd2dq
fldl2t
lret
repnz
xlat
jecxz
stc
jecxz
in
in
fcomi
call
leave
ss
iret
fucomp
stc
rcr
hlt
lret
aam
cli
lock
mov
xor
rorb
int
cli
cmp
call
fsub
cli
loope
shr
jmp
roll
leave
xlat
xlat
cmp
jmp
neg
in
add
sti
ljmp
xchg
xor
in
out
icebp
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
jmp
iret
ret
fstp
insb
sub
repz
lret
aad
jl
add
xlat
shr
stc
ds
hlt
loop
cld
shl
fdivr
addb
neg
fucomi
jmp
lret
out
iret
shl
idivl
sti
jmp
in
xchg
loop
xor
call
lret
in
repnz
repz
fcomi
sbb
out
icebp
mov
stc
xor
stc
repnz
sarb
sar
rcr
loopne
shl
in
cmp
fdiv
mov
adcl
cmc
int3
icebp
out
hlt
std
test
cmp
fcmovnb
fildl
shl
xor
out
lret
addl
fildl
xchg
xchg
mov
xchg
rcl
loop
iret
out
cli
enter
cli
loopne
ret
sub
test
jmp
not
repnz
xor
lds
fmul
fdivrp
fidivs
fsubrp
clc
repnz
fcmovu
mov
in
aaa
xor
loop
stc
out
shl
int3
cli
clc
sbb
movl
lock
int
in
xor
xor
iret
cmp
into
in
cmp
shl
cmp
loope
xor
xchg
cmp
xchg
in
xchg
jecxz
aam
aad
div
aad
in
rcl
cld
rol
jmp
ljmp
in
cmc
out
cmc
xor
shl
dec
cmc
idiv
xorb
div
sti
cld
out
lret
clc
movl
jmp
shr
out
stc
iret
fsubr
cld
rolb
out
out
or
fucomip
jmp
loop
icebp
fdivr
icebp
xor
ret
loope
ffreep
mov
cld
in
inc
mul
in
fnstenv
out
aaa
repnz
cmp
clc
repz
mov
iret
xchg
shr
cs
out
cmc
repnz
cmp
cmpl
loopne
xchg
mul
cld
leave
clc
fcmove
in
in
mov
xor
rcl
repnz
cmp
clc
stc
iret
xor
iret
out
mov
fdiv
fcmovne
out
out
mov
or
loopne
xor
xor
ljmp
icebp
ret
repnz
dec
sub
repz
and
mov
std
lret
int3
add
hlt
test
aas
jmp
mov
mov
into
sbb
xor
in
fucomp
cmp
aaa
out
rolb
jecxz
and
loop
iret
mov
sub
int
jecxz
fscale
stc
out
test
orl
out
int
cs
rol
fcmovnb
xor
rolb
aam
pop
lret
divl
xor
xor
and
in
mov
testb
out
rcl
sarb
not
sarl
cmp
iret
clc
mov
stc
cli
into
test
out
out
enter
cld
xchg
loope
fdivr
lret
mov
movl
xor
fdivrs
cmp
cmp
aam
repz
fdivrp
fxch
fucomp
mov
iret
loopne
fnsave
lret
cmc
cmp
cmp
cli
sti
and
cmc
call
xchg
xchg
xchg
repnz
cli
int3
aam
jmp
fldz
repnz
lock
std
aad
loope
ljmp
cld
shr
int
cmp
out
aas
in
cld
in
xlat
sbb
clc
call
leave
lea
xor
lret
sti
cmp
ljmp
aad
mov
stc
hlt
fisttpl
int3
ror
repnz
sub
clc
repnz
fucomi
cmp
cmc
iret
fidivrs
aam
stc
aam
ror
lret
lret
xlat
sub
sti
icebp
into
leave
cmp
jmp
aaa
in
hlt
in
cld
mov
std
sub
mov
lock
mul
xor
repz
icebp
test
and
leave
ds
leave
int3
mov
cmc
cmc
imull
loop
in
cmp
idiv
cld
lret
cmpl
mul
out
sti
lret
mov
ds
stc
into
xlat
aad
add
aas
xor
fimuls
cld
in
hlt
fsubrl
shll
fnstenv
in
ss
clc
rcl
iret
xchg
in
fstp
out
loop
iret
mov
call
out
out
out
sub
in
idiv
fiaddl
fadd
ljmp
or
repnz
fdivs
enter
aam
jmp
aas
cld
idivb
shl
enter
out
in
mov
repnz
xor
ret
rcr
cld
aam
incl
call
mul
loop
fcmovu
out
xchg
rol
in
out
repz
call
inc
or
inc
js
inc
or
inc
cld
mov
xor
xor
add
add
jmp
rol
int3
fcmovnu
fcmovb
and
ja
mov
add
fdivrs
add
out
loop
shr
in
call
sti
clc
xchg
jmp
aad
cmp
int
out
fdivrl
in
aam
cmp
cmp
cli
int
call
loop
aad
rcl
lret
enter
cli
ror
lret
sar
in
ror
sbb
aas
loope
enter
int3
xchg
sub
idiv
enter
cmc
aaa
xor
cmc
aas
or
xchg
std
mov
cli
repz
cmp
cmp
shr
fadd
or
mov
out
cmp
iret
les
in
loop
xlat
in
lret
aad
sbb
out
ret
stc
and
xchg
fsub
call
cmp
ss
aam
ret
fucom
ret
testl
in
ret
leave
jmp
leave
iret
cmp
std
std
xor
fdiv
xchg
out
clc
loope
out
in
in
jmp
lret
xor
lret
repz
ds
xor
adc
repnz
mov
out
ror
out
xor
stc
out
jecxz
fsub
stc
std
test
repnz
ljmp
xchg
out
out
repz
iret
idiv
into
hlt
fdivrl
cmp
ror
fcmove
loopne
jecxz
out
call
aam
cmc
leave
in
out
in
rcl
cmp
cmp
in
leave
lret
jmp
mov
xor
in
aad
jmp
in
loope
loopne
clc
fiadds
jmp
repnz
test
aad
aam
icebp
aaa
cld
into
cmp
faddl
fmuls
fidivs
ret
lock
xor
fsincos
ss
ss
rcl
out
repz
cld
fucomp
out
out
lret
repnz
repnz
jmp
jmp
out
xchg
aam
jecxz
lret
lret
jmp
in
jecxz
shl
shlb
cmp
in
xchg
repz
cld
mov
out
cld
cmp
in
hlt
lret
repnz
cmp
fcmovnbe
fmul
iret
loop
stc
cmp
std
hlt
stc
in
call
out
loope
lret
divl
div
cmp
hlt
cmp
lock
ss
fdivr
sbb
out
mov
in
ror
ror
in
cmp
ret
std
cld
aaa
cmp
out
sarb
loopne
std
stc
push
hlt
out
cli
iret
jmp
xor
cmc
sti
clc
cmp
fucomi
repnz
hlt
flds
test
cld
addb
repnz
aas
dec
fcomi
aas
rcl
div
lock
dec
filds
cld
lret
lock
int3
repnz
fdivp
stc
in
fadds
repnz
sti
orb
int3
shrb
ror
in
cmp
sti
into
cmp
sbb
aas
sub
sbb
ror
cmpb
loopne
in
jmp
ror
loopne
ret
ds
enter
out
loop
call
fldln2
rcl
aad
ror
aas
not
lret
fidivrs
enter
clc
fsub
test
fidivs
loopne
into
clc
sti
call
into
flds
les
cld
loop
into
ljmp
cmp
lock
aad
aam
loop
hlt
jmp
fcmovu
out
mov
out
loope
lock
xor
cli
call
in
cmp
out
div
les
out
aam
int
mul
idivl
idiv
roll
add
aad
ljmp
aam
sti
lret
repnz
test
decb
ljmp
fnop
jecxz
enter
fcomi
lret
fld
xchg
fmulp
testl
xor
out
enter
hlt
test
int3
aas
cli
roll
cli
loop
cld
jmp
jecxz
loop
xor
aas
sti
rol
ds
call
leave
dec
int
clc
ljmp
loopne
ss
rcl
call
loop
lock
mov
loopne
out
mov
cmp
neg
in
sarb
in
test
out
xlat
cld
loop
test
cli
iret
xor
call
xor
xor
out
fdivr
icebp
ret
test
in
fsubr
jmp
out
iret
aam
cmp
aas
loope
xlat
fstpt
cld
out
flds
rorb
aad
shl
leave
cmp
into
shl
repnz
cmc
shl
shl
loopne
int
fsub
ljmp
ror
sti
lret
ror
stc
out
dec
out
inc
loope
imul
mov
cmp
jmp
iret
aad
ret
fst
dec
cwtl
mov
into
lock
add
mov
ljmp
xor
ret
ss
fstpt
cld
shl
addl
in
mov
fmul
cld
test
jmp
sar
lock
cmp
int3
rcl
fadd
int3
jecxz
in
in
hlt
aam
into
sarb
xlat
shlb
sti
jmp
loopne
in
xlat
sti
mov
and
icebp
repnz
imul
in
stc
ss
xor
and
xchg
xlat
cld
loope
loopne
jecxz
loop
repnz
ss
in
clc
cmp
ret
sbb
mov
cli
test
in
mov
in
loope
rcl
out
stc
lock
in
cmp
sar
cmp
ret
test
sti
icebp
leave
ret
out
fcom
test
int
fsub
fdiv
ds
into
cmp
stc
ss
fsub
loopne
cli
test
out
leave
in
xchg
nop
out
xlat
xor
xor
fiaddl
ret
cli
ret
loop
jecxz
clc
repz
xor
aam
lock
fcmovu
loop
fst
in
cmc
clc
test
test
filds
in
in
out
xor
sti
fadd
cmp
fcom
in
out
enter
test
ss
ror
ror
testl
stc
xchg
hlt
and
orl
cmc
xlat
cmp
lock
rcr
enter
jecxz
mov
loop
in
mul
xor
out
std
lret
loope
xor
fdivr
sbb
testl
jmp
loope
repnz
call
xor
sar
xchg
call
jecxz
sub
lret
sub
leave
cs
xlat
repz
enter
fst
aad
rorl
test
fcmovbe
loop
aad
xor
xor
test
cmp
xlat
sti
xchg
lret
repz
xlat
cmp
cmc
into
cmp
call
repz
ret
in
cli
xlat
mov
xchg
in
jmp
xlat
aaa
hlt
cmp
icebp
test
loop
xchg
fmul
fadds
xchg
icebp
lock
das
aaa
icebp
sub
xlat
jmp
fcmovu
cmc
in
cld
mov
testl
rcr
int
not
imul
xlat
roll
mov
repnz
enter
loope
lock
sub
leave
out
jmp
repnz
jmp
mov
stc
fidivrs
sti
fisttpll
mov
shlb
out
mul
ljmp
loop
iret
rol
xchg
in
mov
mov
out
not
out
fsubr
call
out
out
fsub
repnz
mov
out
sti
icebp
mov
int
aam
repnz
xlat
push
aas
stc
in
neg
cld
xchg
out
add
xchg
in
int
int
out
iret
in
cli
iret
lock
loope
jmp
clc
cmpb
test
std
xlat
xabort
in
xor
lret
aas
aad
enter
aas
hlt
cmp
roll
add
cli
sub
lea
out
ret
lret
fdivp
clc
xor
out
loop
cmp
mov
xchg
jmp
mov
aaa
shr
fcmovbe
ss
shl
out
loopne
fdivrp
fcmovnb
mov
xchg
mov
jmp
fdiv
repnz
out
stc
cmc
fldl
mov
leave
clc
mov
loop
enter
f2xm1
jmp
loopne
sti
and
aam
rol
test
rcl
mov
cmp
hlt
hlt
stc
shl
loopne
in
lret
in
adc
fadds
repnz
xlat
std
stc
enter
testl
cmc
fucom
fmull
out
ror
call
clc
cmp
jecxz
out
std
addb
cli
mov
out
lret
fnstenv
repnz
icebp
fnsave
adc
frndint
out
sar
jmp
fistl
call
aas
lret
adc
ds
fcmovu
or
test
xlat
shl
hlt
leave
leave
aaa
hlt
rcl
repnz
rcr
sar
cmc
mov
hlt
stc
int
ret
out
int3
loop
iret
jecxz
lret
call
fcmovu
shl
ret
out
in
fcomip
xchg
lock
ret
lret
ss
lock
mul
jecxz
loope
faddp
ljmp
into
cmp
icebp
iret
enter
shlb
into
ljmp
aad
sti
out
out
inc
cld
jmp
iret
int
ret
fstp
sbb
in
jg
add
out
lret
mov
icebp
cmp
aad
shll
aam
loope
aas
fsubp
sti
ror
in
loope
into
mov
cli
xchg
jecxz
jecxz
iret
fcmovne
xor
aad
jecxz
sarb
rol
lock
in
out
fcmovne
mov
hlt
repz
imul
xor
int
iret
stc
cmc
shl
icebp
lock
not
test
cmp
in
push
xor
in
enter
sar
faddp
ret
shl
loop
fucom
lock
mov
aam
in
repz
sti
fnstsw
fcmove
sti
sti
cmc
incl
hlt
jmp
rorb
xlat
out
out
clc
ror
cmc
cmp
push
clc
inc
cli
test
std
iret
testb
jmp
out
fstp
leave
ss
hlt
in
cli
cli
out
fisttpll
cmp
xchg
out
cs
lret
cmp
cmp
cmp
fnstsw
sarl
xchg
test
loop
loopne
test
iret
fsubrp
repnz
das
cmc
in
out
int
icebp
icebp
idiv
ds
fdivr
mov
or
repz
sub
loope
xor
cld
fdivr
fdivrl
call
idiv
vcmpps
out
int3
ljmp
ss
rol
cmp
stc
cli
mov
cli
inc
in
mov
test
ljmp
cs
div
out
clc
sarl
shl
aam
repz
orb
out
xchg
icebp
jmp
in
cmp
ljmp
loope
in
ffreep
sti
cld
mov
test
out
rorb
xor
icebp
rol
out
cmp
push
cld
ljmp
aad
xchg
fnstsw
int
loope
loopne
xor
cmp
cmp
std
cmp
jecxz
out
leave
fildl
mov
loop
shl
shr
call
leave
std
cmp
shr
fldl
xlat
in
aam
fxam
out
cmp
shll
out
int
hlt
ss
sarb
std
test
cmc
loop
cld
ret
inc
repz
ss
xor
in
lock
xor
lock
icebp
stc
jmp
in
imul
std
lock
ds
out
out
ljmp
test
fscale
mov
enter
fxch
out
icebp
repnz
xor
jecxz
fmul
in
icebp
fcmovnbe
rol
sti
fndisi(8087
std
sar
mov
clc
xchg
jmp
in
aad
stc
in
lret
sti
cmp
int3
xor
addl
int
mov
ret
in
shr
rcl
into
fcmovne
clc
ds
loope
rorb
mul
enter
aad
sub
cmc
aaa
rcl
shr
xor
loopne
clc
cmp
fsubrp
call
out
fiaddl
sub
int
sti
out
not
hlt
aad
sarb
cld
stc
mov
rolb
out
enter
xchg
mov
ljmp
xor
lret
cmc
out
ret
fmull
std
loope
lock
ss
std
call
into
cmp
cmc
repz
hlt
repz
stc
loop
fcmovnbe
mov
mov
out
idivl
out
out
aam
loop
lock
fucom
repnz
out
flds
jecxz
loop
ljmp
in
call
out
cmp
leave
imul
stc
jmp
in
repz
test
xor
lret
cmp
jmp
test
shr
xchg
rol
xor
rol
cli
aad
sar
dec
imul
rol
cmp
xchg
loop
into
div
std
aaa
out
aas
ljmp
loop
cmp
ljmp
loopne
rol
rcr
out
std
ljmp
aam
mov
xlat
mov
call
xchg
addl
cmc
xor
aaa
lock
aaa
loope
faddp
mov
mov
in
in
ret
xor
fsubr
rcr
repnz
fldl
out
xchg
lock
aad
xor
out
in
lret
repz
rcr
cmc
ret
fisttpll
out
out
shr
enter
fcmovu
xlat
icebp
xlat
clc
imul
cmp
rol
fcmovnb
xchg
fisttpll
mov
jmp
aam
ret
out
fsubp
loope
clc
aad
lret
in
ljmp
xor
cmp
jmp
into
test
sti
xlat
std
in
lret
test
xlat
in
int3
div
out
out
enter
incl
out
out
rorl
cmpl
je
xor
add
jmp
rol
sarl
rcl
mov
scas
xchg
daa
ds
jl
das
in
jmp
lock
std
enter
call
xchg
lock
xor
cs
cmp
repnz
aaa
aam
aam
std
sar
mul
stc
sti
orb
out
int3
out
cmp
xor
call
cmp
lret
jecxz
neg
ficoml
lret
jecxz
fdiv
std
sti
cmp
loopne
out
bnd
decl
xchg
out
xor
into
int
fadd
out
cmp
cmp
ret
lock
loop
mov
sub
hlt
shl
cmp
std
stc
cmp
in
fsub
loope
cli
mov
out
in
enter
iret
repz
enter
in
clc
ret
aad
cmp
test
loope
testl
ret
xlat
in
cmp
cmp
cmp
ror
jmp
notb
cmc
nop
lock
stc
out
stc
into
neg
addl
leave
mov
out
and
ljmp
repnz
idiv
hlt
out
hlt
jecxz
aas
mul
loopne
xlat
adc
lock
fucomip
cld
cs
xlat
fcom
cmp
cmp
int
fxch
in
ret
test
fisttps
clc
cli
lret
xchg
call
jmp
int3
dec
in
xlat
iret
ret
aad
lds
out
loopne
loop
das
repz
hlt
clc
jmp
cmp
ljmp
in
std
std
xchg
enter
sub
cs
aaa
ret
cmc
lock
loop
in
ror
lret
addl
repnz
out
sarl
jmp
out
lret
ror
aam
aam
orb
mov
leave
loopne
xor
xor
xor
dec
std
idiv
test
xlat
bnd
xchg
adc
ror
hlt
in
fucomp
out
cmp
loopne
test
repnz
repnz
ret
in
std
mov
fdivr
repnz
lret
out
ret
lret
out
xor
loope
jecxz
not
rcl
inc
incl
fucomp
or
out
fdivl
aad
div
lock
aam
aad
jecxz
int
lret
loop
lock
aam
stc
fst
out
push
cld
clc
lds
testb
incb
xor
rcl
shlb
cmp
cli
enter
in
call
ffreep
shll
fnstcw
fdiv
in
stc
idiv
aam
fdivr
addl
lock
shl
aam
xor
lret
add
cmpl
cli
test
in
loope
repnz
clc
shr
int3
xor
cmp
xor
cmp
std
mov
int3
jecxz
xchg
into
out
lret
not
int
sti
std
lock
cmp
lock
in
hlt
fstp
faddl
in
test
mov
icebp
call
sti
out
cmp
aas
xlat
cmp
in
sti
test
loope
lret
jmp
cmc
xor
icebp
aaa
idiv
icebp
lock
fsubp
aad
in
ljmp
nop
nop
out
faddp
xor
fcmovnbe
ss
rcl
into
or
jecxz
shl
fld
test
std
mov
icebp
orb
ret
leave
sti
jmp
xor
fyl2xp1
inc
ffree
cmp
jecxz
in
mov
fstp
call
in
mov
xor
xor
ror
xor
out
cld
rcl
or
out
cld
xchg
xchg
jmp
shr
int3
out
xor
cli
cmp
loop
ds
in
addb
ljmp
jmp
jmp
cmp
out
xor
jmp
jmp
xor
ljmp
in
int
hlt
cmp
rcr
clc
aam
xchg
aam
lret
ljmp
ret
repz
in
aad
fptan
ret
loope
in
repnz
test
into
lock
xor
enter
xor
f2xm1
sti
sti
ds
ret
cmp
int3
loopne
fisttpl
in
ss
lret
shl
xlat
clc
cli
into
stc
cmp
fcomip
loopne
jmp
test
in
in
fimull
int3
out
xor
ss
sarl
xlat
xor
sar
cli
flds
out
lret
in
xchg
xchg
xchg
test
call
lret
cmp
int3
loopne
ret
fstp
cmpb
not
xchg
enter
icebp
orl
cmp
call
iret
out
cli
rcr
and
fcomi
xchg
ljmp
cli
int
mov
jmp
iret
aad
aad
push
mov
jg
add
fincstp
aaa
out
xlat
out
std
incl
sti
ljmp
cmp
cmp
sar
in
int3
int3
or
into
clc
jecxz
stc
mov
clc
xchg
loopne
vprotw
cmp
out
into
out
sti
adc
adc
loopne
xchg
sti
stc
repz
in
mov
jmp
sti
sar
cmp
jecxz
ret
jecxz
in
lret
iret
out
and
repnz
ljmp
fsubr
stc
cmp
xor
cmp
lret
int3
loope
jmp
mov
lret
fyl2x
xor
enter
cld
fxch
fdiv
call
loopne
out
stc
xor
fdivr
shl
xor
int
jecxz
hlt
ffreep
fldl
decb
enter
xor
xlat
out
in
fucom
cmp
loopne
ds
test
xchg
lret
subb
int3
jmp
aas
idivl
adc
out
aam
flds
mov
xchg
decb
rcl
sti
int3
call
cmp
iret
fsub
hlt
aas
dec
cmc
xlat
cli
jecxz
out
mov
cmc
cmp
cmp
dec
ret
rol
rorl
in
fimull
xchg
xchg
lock
loopne
ffree
stc
lret
cmp
testl
aam
int3
xchg
lock
call
lret
fadd
cmc
cmc
cmp
std
flds
addb
aad
cmp
out
sti
jecxz
in
hlt
call
idiv
orl
in
xor
xor
into
aaa
out
loopne
out
loop
in
into
faddp
loope
in
cld
ficoml
loope
iret
jmp
out
xlat
repnz
out
cli
mov
xlat
iret
mov
int
mov
xchg
icebp
stc
out
repz
cld
aas
std
jmp
div
rcr
rcr
cld
loop
leave
fcmove
rcr
orb
jmp
ss
repnz
repnz
ret
int
ljmp
aam
fucomi
cmp
cli
cmc
icebp
cmp
cmp
xchg
fadds
clc
jecxz
in
jmp
int3
enter
std
lock
int
ffree
shr
sar
lret
ljmp
lret
sub
ljmp
repnz
fsincos
fdiv
and
mov
out
sti
test
cld
mov
xor
xlat
sti
cmp
clc
out
sar
into
test
rol
in
clc
int
loopne
cli
std
out
in
in
rol
sarl
hlt
repz
fstp
ftst
aam
movb
lock
call
aad
adc
frstpm(287
fcomi
flds
fiaddl
out
int
cmp
clc
in
fdivrs
repnz
jecxz
cli
fildl
mov
enter
test
ret
shl
xor
lret
sti
icebp
cli
rcr
repnz
movl
ds
shrb
fistpll
into
cmp
cmc
into
cmp
mov
repz
mov
xor
in
int
enter
jecxz
ret
aas
jmp
in
int
mov
xor
das
ret
not
shl
sar
filds
hlt
repnz
out
fucomip
mov
and
nop
cs
xor
xor
cli
sarb
jmp
in
sti
in
jecxz
add
fcmovb
aad
xchg
loope
out
test
repnz
jmp
div
fcmovbe
cld
aam
incb
sar
out
in
fmul
fsub
xchg
addb
call
ds
aas
in
clc
test
and
jmp
fimull
ret
xor
out
out
cmp
into
in
imul
into
out
cmp
fdivp
and
iret
lret
mov
xchg
sub
loop
out
imul
repz
clc
jmp
mov
fucom
ljmp
in
divb
ds
jecxz
in
sarb
mov
enter
loope
sbb
aam
xor
icebp
int3
cmp
jmp
loopne
lock
fadds
enter
loop
cli
in
out
in
leave
fcomp
iret
hlt
ds
jecxz
in
neg
into
out
test
xchg
shr
hlt
fdivs
out
clc
jmp
int3
aam
filds
mov
cmp
mov
xchg
icebp
aaa
icebp
int3
int3
call
lret
in
shl
fadd
fldl
test
iret
lock
int3
xchg
loope
enter
out
cmp
dec
shl
out
cmp
inc
or
or
leave
ret
push
mov
push
not
push
movl
mov
mov
mov
mov
mov
movl
cmp
movl
jmp
int3
aam
xlat
fst
fldl
mov
and
push
mov
repz
std
add
loopne
jmp
loop
jecxz
lret
iret
mov
call
shl
fdivrl
loop
rcr
rcr
fimull
mov
std
xchg
aam
lds
rol
fmul
out
ror
cmp
fsubr
xchg
cli
leave
std
out
in
xchg
cld
xchg
lret
aaa
xor
fsubrp
shl
ljmp
in
in
aas
mov
int3
std
mov
out
in
int3
enter
add
aas
ds
loop
decl
mov
cmc
in
fld
out
push
std
jmp
lock
test
rcr
enter
xchg
mov
loop
leave
jmp
neg
stc
cmpb
shr
xchg
int3
fucomp
std
fisttpl
lret
lret
lret
aam
xor
lret
cmp
sbb
int
out
fdivp
hlt
jmp
cmc
aaa
call
out
stc
stc
cld
clc
loope
cmc
icebp
aam
aad
or
loop
in
fsubrp
fucomip
out
cs
ret
ffree
repnz
cmp
cmp
stc
cmc
out
lret
ffreep
loop
das
ss
icebp
xor
cld
cld
out
ljmp
fstpt
clc
fdivrp
aam
xlat
jmp
std
or
sub
std
test
cmp
xlat
aad
sbb
in
mov
test
aad
jmp
ret
rcr
in
shr
hlt
cmp
loopne
std
incl
leave
fimull
jmp
cli
hlt
xlat
aad
test
xor
std
in
ret
out
repz
ret
aad
cmp
mul
cli
fstpt
test
in
decl
int3
xor
cmp
cmp
lret
lock
sbb
ret
cmp
into
faddl
loop
lock
in
fucomp
lret
in
fnstcw
addb
jecxz
loopne
adcl
jmp
fsubp
neg
hlt
aas
sar
fucom
xchg
icebp
call
sub
in
rcl
jmp
icebp
neg
icebp
fcmovnb
hlt
in
ljmp
xchg
xor
out
ljmp
iret
ret
fdiv
hlt
sbb
leave
stc
iret
call
jecxz
cmp
hlt
fmul
shr
cmp
hlt
cmp
jecxz
std
rcl
repz
jmp
in
out
out
into
mov
test
aad
cs
aaa
rcl
rcr
ret
test
xchg
fildl
xchg
xchg
mov
ss
loop
in
ss
lret
hlt
cld
out
sarb
cli
in
addl
mov
repnz
in
std
not
idivb
ror
rol
fucom
ret
cmp
ret
mov
lock
cli
cmp
loopne
shr
repnz
fsub
shl
fcmove
iret
orl
aaa
cmp
lret
shr
aas
out
lret
fmul
push
cli
fcmovne
lret
xlat
in
in
out
mov
lret
cmp
in
cmp
cmp
aas
addb
fisttpl
test
shr
cmc
xchg
rol
fnstenv
idiv
cmc
jmp
repz
fadd
inc
orb
mov
cld
out
leave
xor
repz
xor
int
lret
rcr
idivb
rcl
testb
shl
sub
cmc
mul
rcr
fdiv
ljmp
mov
fucomip
in
out
jecxz
fimull
into
into
cmc
int3
out
out
sarb
cmp
incb
in
in
int
xchg
enter
vpminsw
test
aas
sti
test
inc
rol
mov
fscale
std
stc
lret
rcr
shl
icebp
call
sti
iret
addl
jmp
out
mov
orb
aam
shl
fcmovbe
rcr
aam
stc
roll
call
loope
loope
aas
out
int
int3
xor
out
repz
aas
aas
sti
rcl
fimuls
cli
fucomip
decb
not
stc
cli
aaa
cmp
ljmp
std
fadd
rol
imul
cmc
in
fucom
loope
into
ljmp
in
leave
cmp
fldln2
repz
clc
jne
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
add
mov
movzwl
not
jmp
rcl
ror
fstp
fldenv
xchg
cltd
aas
idivl
std
add
xchg
cmp
leave
hlt
iret
or
fiaddl
in
lret
call
roll
icebp
aam
mov
aad
sbb
jecxz
loope
vpsubw
in
sti
shll
ror
sarl
flds
sti
clc
in
mov
xchg
xchg
xor
rol
in
out
cmp
aad
roll
clc
loope
into
and
test
call
in
cld
repz
sar
xlat
rcl
loopne
cld
enter
ljmp
shr
rcl
cmc
out
lret
ds
clc
xchg
cli
stc
cli
xor
repz
leave
cs
idiv
repz
cmp
add
jmp
aad
stc
iret
in
int
lea
iret
xor
shr
fxch
test
in
aas
les
mov
or
test
test
cmc
das
cmp
cmp
xor
addb
rcr
in
xchg
fsubp
lret
mov
out
cmc
ljmp
cmp
in
aam
movl
test
mov
test
shr
in
cli
cmp
repz
in
xlat
in
shl
sti
out
xchg
idiv
icebp
cli
fucomp
incl
loop
rcl
cmp
repz
fcmovu
mov
lret
xchg
ret
repz
lret
hlt
int
xor
aad
cmp
loop
fadd
rol
roll
out
out
repz
lock
in
xor
ds
repz
cmpb
adc
leave
mov
shlb
loopne
xor
repnz
ljmp
rorb
xchg
out
jecxz
xor
shr
cmp
cmp
aas
jecxz
lret
mov
lea
out
vpsadbw
xor
fnstsw
jecxz
jecxz
cmc
fadds
rorl
cs
enter
int3
shl
cli
cmp
les
out
in
int
jmp
aam
iret
into
lret
in
in
shr
sar
adc
repz
fisttpl
xchg
test
shr
fdivrs
ss
out
lret
ljmp
ds
call
xchg
out
loope
xor
hlt
ret
ss
rcl
int3
loope
lret
aam
repz
ror
in
test
leave
icebp
int
iret
in
in
repnz
cmc
out
iret
cmp
incl
fadds
jecxz
not
xor
leave
shl
std
xor
cmc
cmp
sti
xlat
xchg
call
lock
into
out
in
aad
in
std
sar
int
out
rcr
in
aam
idiv
in
shl
xchg
mov
jecxz
xlat
repz
in
int3
fld1
cmp
fcmovb
shl
cmc
sub
and
in
call
xor
lret
enter
filds
repz
roll
jmp
leave
rcr
out
lret
icebp
div
cmp
in
ss
std
cmpl
mov
cld
lret
shl
rol
xor
ljmp
and
vpaddusw
ret
sti
or
xchg
xorb
repnz
idivl
cmc
rcr
clc
orb
ror
loop
xor
out
out
cmp
out
out
in
fmul
cmp
sti
out
hlt
loopne,pt
shl
enter
call
in
cmp
neg
in
sub
repnz
repz
aad
cmp
into
ds
std
hlt
fcmovbe
not
add
out
fisttpll
incb
jecxz
rcl
cmp
cmc
iret
ret
mov
xchg
loop
test
call
dec
ds
loop
xchg
std
loopne
jecxz
xchg
xchg
ds
cs
cmp
call
shl
shl
sti
leave
mov
lret
cli
cli
call
leave
ret
shll
jmp
cmp
iret
int
idivb
cmp
cld
sbb
cmp
in
in
in
aad
cs
ljmp
cmp
add
jmp
jmp
enter
fstp
fstp
adc
aas
add
or
jg
std
add
cmc
ret
jmp
test
roll
int
enter
xor
stc
ljmp
lock
out
loop
xchg
jmp
int3
cli
cmp
lret
repnz
ror
into
addb
xlat
cld
lock
xor
in
fsubrp
cli
fistpll
cli
out
test
in
jmp
in
in
in
aad
out
lret
fsub
neg
cmp
jecxz
test
loope
int
int3
in
int3
repz
rol
divb
cmp
fdivrp
fcmovbe
fiaddl
std
cmc
cmp
icebp
mov
mov
out
int
xor
int
neg
into
icebp
aam
imul
std
inc
out
in
xchg
out
hlt
das
shlb
aaa
aam
aad
xlat
shl
cmp
cmc
cmpb
out
test
nop
jecxz
loop
repnz
mul
jmp
aas
sar
fadds
idiv
in
cld
test
jmp
div
out
lret
cmp
sti
cmp
ret
xchg
aam
jecxz
xchg
ljmp
shr
leave
jmp
rolb
in
cmp
jmp
sbb
std
jmp
ljmp
stc
lret
cmp
in
shl
rol
in
cld
lock
orb
out
fadd
lret
lret
repz
xlat
xor
rcr
loop
cli
shl
idiv
jmp
in
enter
fstpt
jmp
fdivrp
ss
cli
out
mov
ds
fcom
test
xchg
repnz
out
cs
sarl
shll
iret
idiv
lret
jecxz
loopne
decb
in
mov
lock
cmp
idiv
icebp
neg
test
enter
adc
out
aam
rcr
xor
into
fdiv
sbb
in
xchg
vpsubb
out
cli
cld
in
in
imul
ss
call
rcl
stc
lds
lret
lock
stc
fdiv
rcr
enter
idivl
cmp
repz
adc
in
ljmp
out
in
sub
shr
jmp
cmp
test
xchg
lret
fisttpll
shl
shr
fcmovu
roll
test
ds
loop
ret
xchg
nop
fadds
shrb
shl
aam
xor
fucomi
jecxz
cmp
loopne
aam
fld1
loopne
inc
mov
lock
shl
fdiv
shl
fsubr
iret
iret
icebp
rcr
mov
ret
in
xchg
aad
jecxz
shl
stc
shr
cld
fyl2x
fabs
lock
std
xchg
rcr
fucom
enter
call
ret
lock
xor
int
in
cmp
enter
and
lret
jmp
mov
xlat
call
rolb
std
cli
rorl
jecxz
in
fst
xlat
repnz
xor
cmp
aaa
repz
ds
out
movb
ljmp
ror
in
xlat
repz
fstp
lret
fld
std
test
ret
mov
repnz
ret
out
sar
ljmp
fadd
aam
jmp
jmp
int
xor
loop
shr
cmp
enter
stc
les
lret
xchg
cld
fstl
shr
xor
xor
aad
iret
fyl2xp1
loope
into
aad
fidivrl
hlt
mov
fucomi
in
test
xor
out
out
ljmp
std
cmp
addl
loopne
clc
mov
aam
in
in
out
shr
aam
aad
out
xchg
fdivp
out
std
out
lret
ljmp
xor
cmp
cmp
aam
clc
shl
xchg
jecxz
cli
fcmove
in
cld
aas
leave
aam
lret
icebp
loope
cld
into
iret
sti
clc
cld
cld
loop
cmp
mov
fucom
loope
in
cmc
ds
jmp
out
repnz
sub
aam
adc
idiv
out
loopne
jmp
in
xor
clc
xlat
shr
xlat
in
aam
shll
addl
push
jmp
aad
rcr
fstp
sbb
mov
jl
add
in
in
aam
in
hlt
lea
out
icebp
loope
hlt
ljmp
enter
int3
fcomip
faddp
loopne
fdivrp
in
cli
mov
xchg
repz
shll
div
stc
in
rcr
in
jmp
clc
aas
loopne
leave
jmp
in
xchg
in
rol
stc
jmp
fnstcw
sti
ds
fadds
out
lret
cld
aas
jecxz
hlt
fdiv
repnz
call
cmp
fld
call
fists
repnz
not
cld
lock
rcl
repnz
fld
jmp
cmp
sub
in
cmp
leave
xor
shl
lock
out
mov
test
test
not
leave
cmp
neg
aam
cli
out
push
loopne
out
fcomi
xchg
nop
fcmovbe
ror
cmc
xor
xor
rcr
aam
fdivr
aad
cmp
iret
fcomp
sar
leave
fmul
fucomip
out
loope
and
iret
out
ret
shr
fstpt
idiv
test
ds
repz
xchg
lea
leave
jmp
int
stc
rcl
fdivs
fdiv
lock
aad
fmull
cli
out
faddl
sti
leave
stc
cli
shl
std
std
cmp
fiadds
rcl
int
mov
out
mov
fdiv
cmp
sti
rol
int3
cld
xlat
int3
rcl
out
xor
mov
ljmp
ds
sti
cmp
sar
cmp
repnz
jecxz
fcmovnbe
fdivr
jmp
fcmovbe
xchg
sub
int3
into
aaa
int3
repz
cmp
dec
lret
cmp
clc
out
enter
fnstcw
into
div
fcmovbe
clc
xlat
aas
fdiv
loope
cld
test
enter
icebp
mov
enter
ljmp
cs
sar
fcmovbe
fstpt
ds
cmc
aad
fimuls
or
xor
xor
cmp
cmc
test
or
enter
mov
xchg
repz
leave
aaa
repz
jmp
jecxz
fcomp
and
test
lret
mov
int
test
jmp
jmp
stc
out
ror
std
rol
shl
test
mov
jmp
xchg
cs
enter
flds
xchg
ret
in
aad
imul
loop
sbb
icebp
repz
jecxz
in
stc
lock
enter
out
xchg
roll
cld
test
xchg
rcll
xor
ss
int3
cmp
int
aam
std
cmp
in
lret
cli
loope
in
loope
jmp
cmp
fcomip
hlt
repz
sti
mov
fmul
xor
idivb
iret
in
repnz
repz
stc
ljmp
stc
loop
or
fmull
xor
cld
fmulp
sarl
fistpll
out
vpsubd
mov
fmulp
icebp
xchg
out
out
aam
ffree
xor
into
or
neg
leave
rcl
loopne
mov
addb
repz
in
out
fcmovne
fdivr
cmp
fdivr
cmpl
icebp
rolb
mov
not
in
leave
sub
clc
clc
clc
cmp
ffreep
test
in
repz
test
loopne
mov
sti
fcmovnu
ljmp
xor
icebp
jmp
fildl
icebp
cmc
dec
cli
loope
in
enter
test
rcl
xor
in
iret
leave
clc
fdivrp
repz
cli
mov
test
loopne
or
lret
hlt
jecxz
into
hlt
rcr
cld
int
fxch
and
fsub
cmc
repz
mov
lret
rcl
aaa
into
aaa
hlt
cmp
shl
jmp
in
xlat
cld
loopne
roll
xchg
cld
fmulp
repz
out
iret
jmp
ffreep
loope
icebp
loope
cld
lret
mov
cli
sti
mov
mov
ret
aad
xor
cmp
shl
jmp
iret
aas
aad
cld
loope
loope
addl
jmp
jmp
sarl
sbb
cli
orb
fimull
enter
in
cmp
out
mov
pushl
call
test
je
leave
ret
push
mov
sub
adcl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
aad
xlat
int3
ret
sahf
or
test
cmpsb
add
aam
cmp
out
aam
aam
lret
clc
xchg
orl
enter
hlt
idiv
repz
xor
shl
idiv
out
out
xchg
cmc
iret
xchg
ss
jmp
aam
cmp
iret
int3
cli
fdivrp
fnop
shl
fdivr
mov
ljmp
int
fcmovu
lret
lock
jecxz
rorb
fldl
rolb
int3
repz
repz
repnz
test
loope
in
in
jmp
ret
repnz
loopne
out
jmp
idiv
cmp
std
xlat
add
in
out
jmp
clc
jmp
lret
xchg
lea
ss
cmc
fxch
leave
sti
loopne
ret
aam
idiv
xlat
xchg
ljmp
ss
icebp
lret
enter
test
cld
rcl
std
mov
aam
decb
mov
xor
clc
xor
fstp
out
repz
fadd
stc
fadd
clc
loope
loope
int
xchg
out
ror
xor
xor
into
aaa
shl
out
cmp
jecxz
sub
xchg
neg
fildl
vpaddq
ror
aad
cmp
cld
stc
fcmovnb
in
repz
ret
fisttpll
jmp
call
shll
into
jmp
fdiv
loope
test
xchg
cmp
rol
sub
xor
cmp
rcl
cmp
test
rcr
in
leave
xchg
lock
fmul
lret
xor
cmp
fsubr
xor
in
cli
sti
lds
cmp
rcr
int
lret
or
aam
out
rcl
out
cmp
shr
rcr
idivb
loop
test
test
in
lock
aam
roll
call
fcomip
ror
fldt
aaa
rcl
shl
rolb
cmp
in
lret
out
test
hlt
loope
into
aad
fadd
lret
cmp
int
aam
rol
cmc
xchg
loope
out
leave
int
icebp
hlt
mov
jmp
out
fcmovbe
clc
fsubrp
jecxz
cld
in
leave
cli
sub
cli
in
sub
out
cs
ret
aam
icebp
ljmp
aas
loope
mov
sti
leave
adc
loopne
aam
cld
iret
aaa
int3
sub
fcmovnu
sti
cmp
loop
call
out
xchg
loop
xor
sar
cmc
shr
shl
icebp
hlt
in
repz
xchg
stc
mov
call
repnz
cmp
clc
cmp
int
cmp
imul
cld
in
xchg
mov
xchg
in
cs
int3
call
bnd
add
std
loopne
ljmp
std
addl
test
in
repnz
out
cmp
xlat
std
out
int
lds
adc
in
aad
aam
std
sti
hlt
repnz
out
xlat
xlat
sti
shl
int
std
lret
cmp
sub
ds
loop
xlat
cmp
sub
ret
ljmp
out
xchg
ret
stc
cmp
lds
test
out
fnstcw
xchg
xlat
repnz
mov
test
shr
loope
clc
aam
fucomip
icebp
leave
cmc
push
cmp
xor
test
int
lret
in
xchg
shl
int3
loope
cs
rcl
repnz
fdivrp
lock
adc
shl
in
sub
lret
in
jmp
in
sub
test
cmp
aas
aas
repnz
loope
cli
fxch
sub
mov
out
shl
aaa
cmp
divb
shl
not
neg
fsub
xchg
cld
loop
or
lock
in
xor
loopne
cmp
mov
flds
nop
fimuls
mov
fucomip
enter
xlat
mul
fst
inc
hlt
ror
xchg
fstp
shl
rcr
out
lret
shlb
aam
aas
sar
into
fsub
jmp
ljmp
call
aam
out
std
repz
in
aad
mov
mov
sti
test
sub
fcmovnu
jmp
iret
sub
stc
out
cmc
out
cmp
cmp
idiv
std
cmp
mov
fsub
out
mov
shrb
out
aad
test
ret
mul
std
lock
out
inc
in
daa
test
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
lea
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
jmp
ror
fcmovb
rcr
fs
lods
adc
jle
mov
cmpsb
add
test
in
mov
lock
xlat
shl
shl
sti
aas
jmp
cmp
into
repnz
cmp
cmc
ret
mov
lds
div
cli
imul
rcl
cmp
cmp
in
sar
rol
xlat
sti
addl
xor
xor
out
in
aad
clc
sti
fistpll
cmc
cmp
ret
test
iret
ficoms
call
iret
cld
ljmp
clc
rcl
ret
addl
jecxz
out
icebp
xor
rcl
cli
rcl
aad
cld
cli
stc
cmp
idiv
out
nop
addb
imul
fstpt
sti
aam
xlat
ljmp
aam
call
int
lea
shr
stc
cmp
ret
fmul
out
lock
ret
ds
stc
inc
ffreep
std
ret
mov
loope
xchg
lock
aam
icebp
icebp
out
rcl
out
jecxz
cmp
test
cmc
cld
cld
fnsetpm(287
lock
xchg
aam
out
bnd
cmp
lret
loope
jecxz
xchg
call
out
xchg
shl
lret
in
ljmp
out
in
fiadds
shl
lret
call
hlt
rol
aad
lret
aam
jmp
icebp
cmp
sarl
hlt
out
out
movb
loope
xchg
xchg
in
out
lock
test
aam
test
out
fcom
out
std
xor
call
jecxz
icebp
rol
shrl
ljmp
flds
test
jmp
out
fsubrs
xlat
xlat
xor
leave
loope
fst
vaddsubps
test
idiv
not
rcr
xlat
lret
lock
out
add
stc
cld
aad
clc
clc
fmulp
lea
ljmp
repnz
cmp
loopne
xlat
fnclex
fcom
fldl
cmp
iret
in
hlt
sar
clc
div
leave
cmp
rol
cmc
cmp
in
idiv
cld
enter
aaa
in
lret
int3
aad
lock
cmp
fcmovnbe
decl
std
xchg
decb
idivl
ljmp
sar
ret
roll
cld
mov
xchg
icebp
jecxz
repnz
ljmp
clc
fnstcw
jecxz
cmpl
xchg
jmp
mov
lock
lret
jecxz
aas
loope
leave
loope
hlt
ljmp
jecxz
aad
int
ljmp
in
loope
iret
fcmove
xor
fcmovbe
ror
add
xchg
xchg
xor
fnsave
fucomip
sbb
jecxz
aad
xlat
repz
fdivrp
mov
ret
in
addb
ror
shr
call
fstp
loop
shl
adc
in
enter
jecxz
lret
hlt
fdivrp
xor
icebp
repz
cmp
sti
repz
aad
loopne
rorb
cmp
xor
cmc
aam
cmp
shl
xorl
rol
mov
fld
ljmp
cld
jecxz
into
ljmp
shl
jmp
lret
out
cmc
idiv
hlt
cmc
mov
mov
fsubr
mov
xchg
xor
ljmp
fdiv
cld
or
aad
xchg
shl
test
xlat
jmp
mov
mov
hlt
xor
in
cmp
ljmp
lock
orl
mov
xor
stc
cmp
stc
int3
cld
cmc
in
ror
not
sar
hlt
aad
cld
sub
fsubr
leave
int3
out
int
cmc
in
xor
icebp
ds
aad
cmp
add
loope
enter
fcmove
out
das
lock
out
in
cmp
cmp
cmp
rolb
xchg
jecxz
out
int
xchg
hlt
in
repz
in
jmp
repz
fcmove
into
cmpb
aad
sti
mov
lea
hlt
enter
xor
lret
icebp
lret
ror
out
sbb
cld
hlt
iret
clc
call
mov
in
cmc
xor
iret
xor
fst
sarb
cmpl
loop
rorb
aad
ss
call
loopne
std
mov
loop
xchg
xchg
xor
call
shl
loope
xlat
shr
in
fucomip
adcb
inc
or
or
xor
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
orl
jmp
rol
into
into
fnstcw
mov
fmull
jl
icebp
ret
loop
stc
repnz
clc
rol
cli
addb
out
cli
jecxz
out
aad
clc
out
xor
in
ljmp
rcl
cli
shl
cmp
loop
int
loopne
fsubrp
out
cs
xlat
out
cmp
int
ds
aad
imul
in
mov
loop
ds
xor
faddl
clc
cmp
iret
in
mov
cli
cmc
nop
rcl
sub
xor
fnstcw
aam
fmul
loop
ret
cld
cli
imul
in
into
sub
fnstenv
cmp
in
ret
loopne
addl
sti
in
mov
cld
mov
into
aad
fstpt
aas
sub
test
fsubr
lds
xchg
out
fbstp
ror
out
stc
xor
jmp
jecxz
aaa
lock
fdivr
mul
stc
ret
cli
std
mov
aad
test
call
or
aas
test
and
shr
iret
loopne
xchg
fsubp
cs
ret
ror
shl
idivl
in
aad
std
inc
lret
shr
and
in
call
loop
enter
icebp
hlt
testl
int3
fcmovnu
into
jecxz
or
out
repz
ds
out
loope
jecxz
sti
clc
int3
mov
fldl
rcl
ljmp
cmp
clc
fcmovnb
imul
in
clc
mov
xchg
mov
test
cmp
cmc
int
rcl
rcl
test
cli
vcvttpd2dq
out
test
xor
idiv
into
fidivrl
clc
cmp
jmp
fldpi
in
mov
lock
out
test
icebp
ret
fcmovb
iret
cmc
cmp
shr
out
fdivp
stc
fucom
jecxz
in
out
call
out
std
in
lret
jmp
stc
sbb
fucomp
hlt
test
mov
xor
in
cmp
aaa
into
cld
ljmp
cmp
sbb
cld
orb
fld
sti
xor
int3
aam
enter
ret
fcomi
leave
out
fyl2xp1
mov
repz
repnz
in
icebp
cmp
shr
repnz
int3
loopne
cli
jmp
out
xchg
out
aad
int3
sub
jmp
out
out
cmp
stc
fsubr
enter
in
mov
sub
loope
out
in
ss
aam
stc
repnz
sti
ds
cli
fcmovb
sti
mov
xchg
in
out
hlt
clc
xor
fmul
fucomp
into
faddp
in
into
iret
fdiv
cmc
aas
rolb
out
loopne
into
cmc
in
loope
shr
repz
cmp
rol
in
jmp
ret
xor
loop
xchg
fsubp
cs
out
lock
hlt
sar
sub
cmp
fcmovnbe
rcl
sti
fsubr
les
incl
int
cld
lret
aam
test
add
enter
hlt
loop
mov
out
ss
iret
ret
shl
ljmp
icebp
rol
std
cld
sub
int
out
in
shr
sub
ret
lret
lret
jmp
hlt
out
testl
addl
cmp
lret
cld
aas
and
xchg
xchg
xchg
hlt
mov
repz
int3
iret
xor
in
cmp
cmp
shl
addl
enter
in
rcr
lret
aaa
mov
imul
filds
xchg
stc
mov
cmp
out
call
ss
jmp
aas
into
cmp
loop
loop
hlt
mov
jmp
jmp
in
cs
idivl
loope
aam
into
div
xchg
cmp
lea
ror
lret
cmp
fidivrl
xlat
clc
fcmovbe
std
out
cld
and
stc
fdivr
mov
in
int
shl
loop
cld
jmp
repnz
into
repz
loopne
loopne
mov
in
mov
test
shl
jmp
fcompp
stc
out
loopne
loope
idiv
fsubp
hlt
sti
mov
rcl
xor
aaa
sarb
ret
loope
fisttpll
clc
nop
call
icebp
mul
ror
rcr
fisttpll
in
inc
in
cmp
push
sbbl
push
mov
xorl
jmp
ror
rol
aad
ror
fstpt
jno
iret
mov
jg
cmpsb
add
hlt
cmp
test
in
aam
bnd
xchg
int
icebp
mov
das
fnstenv
cmp
std
repnz
clc
out
in
add
mov
lret
addb
in
fld
ss
cmp
cmp
out
fildl
jmp
iret
jmp
lock
neg
cld
xacquire
enter
mov
leave
into
jmp
lds
leave
in
shr
repnz
cld
sbb
stc
cmc
rol
iret
out
leave
test
stc
xor
divl
roll
into
call
add
aad
loop
fdivr
ljmp
loop
int3
fnsave
cmc
aas
ss
vpsrld
int3
enter
lret
xchg
lock
in
cli
out
hlt
enter
lret
rcr
clc
ret
cmp
in
mov
lret
fcomp
out
mov
icebp
in
xlat
out
in
fnstsw
loopne
cmp
in
jmp
nop
jmp
ret
ror
into
neg
cmp
fdivrp
stc
fdivs
repz
aam
loopne
cld
in
int3
sti
sub
icebp
mul
ret
icebp
cli
repnz
sti
jmp
fcmovbe
test
ds
jmp
xchg
jmp
fimuls
cmp
hlt
lock
fdivr
ss
fadds
out
mov
enter
repz
xchg
loope
clc
enter
fcmovnu
adc
cmp
out
cmp
cli
icebp
xchg
mov
in
loope
cmc
fmul
shl
shr
cmp
adc
add
rcr
jmp
ffreep
icebp
orl
sub
divb
fdivl
cmc
cld
addl
testl
test
jmp
int
cmp
in
clc
stc
lock
idiv
sar
rcl
mov
faddp
ret
in
into
xchg
jecxz
in
xor
jmp
jmp
add
adc
hlt
std
xlat
not
jmp
int3
fisubrs
repz
lret
xlat
fldl2e
inc
sar
aam
aad
xchg
out
sti
icebp
rcr
xchg
xchg
in
ror
xor
rcl
xor
in
aas
sub
into
shl
repz
into
std
lret
int3
lret
out
xor
ss
leave
int3
cli
lock
adc
aam
mov
in
int
and
xor
shl
xor
sarb
fnstsw
fcmovnbe
icebp
rolb
in
sub
in
int
cmc
test
in
fdivl
iret
xlat
rol
in
cld
in
xor
shl
xchg
repnz
in
in
xor
out
fstp
fdiv
int3
into
fiaddl
fcom
in
icebp
cld
in
test
ret
cmp
in
lret
int3
fsub
loop
sar
ret
test
test
in
jecxz
cmp
not
xor
leave
out
int
fdivp
cmp
into
sti
std
stc
mov
cld
clc
and
repz
test
xor
xor
fcomp
ds
mov
cmp
aam
les
into
into
ror
xor
aaa
cmp
into
aad
and
jmp
fmul
in
nop
enter
leave
xor
xor
lret
out
fcomp
int3
repz
hlt
in
std
fdivr
fdiv
xchg
call
adc
loopne
cli
xor
xor
bnd
clc
cli
fcom
neg
enter
or
out
call
icebp
into
cmp
fnstcw
rcr
test
testl
cmc
shlb
jmp
das
int
lret
std
test
cmp
fisttpll
mov
in
xlat
rcl
clc
cmp
aam
out
sti
clc
cmp
out
icebp
into
xchg
repnz
out
in
loope
mov
in
aas
jmp
aaa
fnstenv
xor
fucomip
repnz
sti
fdivrp
out
xchg
test
movl
xor
sti
hlt
aam
int
jmp
loope
clc
call
aad
jmp
call
aad
shl
sti
not
int
out
jecxz
int3
fcmove
cmc
xlat
repnz
out
enter
in
xchg
enter
rcr
int3
mov
cmc
flds
fdivp
call
sbb
mov
jecxz
into
sar
out
cmp
fidivrl
rolb
loopne
incl
call
int
repz
fsub
int3
mov
mov
mov
mov
mov
xor
mov
jmp
leave
mov
lret
mov
add
cmpsb
cmp
mov
jg
cmpsb
add
mov
in
into
cli
in
shl
ljmp
xor
hlt
icebp
iret
cli
repnz
clc
xrelease
loopne
mov
call
in
xor
jmp
cmp
lret
cld
cmp
in
clc
enter
and
rcl
rorb
shr
aam
out
sarl
out
aam
cmp
ffreep
sub
mov
loop
int3
iret
xor
jmp
ss
jecxz
rcl
incb
jecxz
cld
jmp
shr
sar
std
cmp
fdivrl
fdivp
xchg
call
lret
shl
jmp
cmp
xor
rolb
cli
fcmovnb
test
out
xchg
lock
fucom
ss
cmp
jmp
ffreep
std
out
aad
loopne
std
in
out
call
out
repz
jmp
cmp
loop
sar
jmp
addl
loopne
leave
aad
div
fxch
aam
in
clc
icebp
ret
ret
shl
fcmovu
out
int3
adcb
loopne
fidivs
cmc
roll
jmp
cmp
into
loope
cs
aam
cli
stc
aam
rcr
test
addl
faddl
sbb
das
in
lret
shr
lret
div
sarb
div
std
fcmovbe
jecxz
xchg
jmp
xchg
repz
stc
aaa
in
fxch
leave
loope
repnz
test
aas
cli
addl
repnz
test
ror
out
ljmp
rcr
cmp
add
fiadds
repnz
xor
xbegin
lret
aam
loop
hlt
clc
rorb
cmp
fcmove
dec
leave
clc
stc
in
das
ljmp
fdiv
out
fcmovnu
fcom
call
lret
in
das
loop
aam
out
idiv
lret
lock
flds
lret
mul
jmp
ror
xchg
cmc
xor
cli
xlat
cmp
aas
cmp
in
cli
aas
ret
loope
out
in
in
clc
lret
mov
sarb
jmp
std
lret
adc
repnz
out
xlat
clc
test
fimuls
fucomip
mov
lock
xor
int3
out
cmp
lret
in
cmp
icebp
enter
ds
xchg
loope
out
in
hlt
shl
cli
in
jmp
fidivrs
repnz
cli
in
jmp
nop
xchg
out
xchg
xor
cmp
repnz
stc
add
leave
mov
out
fildl
shl
int
iret
fsub
rcr
ret
shl
repnz
jecxz
xchg
lret
jecxz
out
in
call
clc
cmp
xor
addl
cmc
orl
xchg
fucomp
rcl
fnstenv
rcr
into
fstp
cmp
mul
addl
idiv
ror
leave
xchg
out
rcl
shl
xor
repnz
enter
xor
in
test
lea
jmp
lock
out
aam
fst
int3
jmp
int
dec
hlt
xlat
cmc
mov
fld
xchg
in
nop
mov
in
lock
in
ljmp
in
incl
test
fucomip
out
jecxz
fmulp
repz
call
int3
xorl
cmc
filds
in
ljmp
aaa
rcr
in
cmp
ss
clc
out
fiadds
in
loope
lea
aad
loope
in
ss
iret
loopne
out
out
cmp
incl
lock
int
add
jecxz
out
xlat
lret
rcr
ljmp
out
std
in
fiaddl
repz
cs
repnz
imul
in
call
out
test
jmp
cmp
int
out
jmp
in
aam
enter
leave
into
cmp
repz
shr
loope
fcmovbe
jecxz
enter
xchg
xlat
loop
out
cmp
ss
jecxz
int
xlat
iret
xlat
cmp
out
mov
fadd
mov
dec
in
shlb
stc
repz
repz
idivl
dec
div
mov
fcmovne
jecxz
fiadds
nop
jecxz
int3
aad
enter
mul
aam
in
fst
xlat
jmp
mov
xchg
ljmp
add
aad
rcl
fst
leave
pop
push
mov
lcall
in
repz
lret
fdivs
fcmovnu
into
icebp
flds
loopne
ret
out
test
enter
les
in
lret
ljmp
clc
fcmovu
rcl
testb
rcr
repz
xchg
neg
xor
lret
lock
jmp
fstpt
xlat
loop
mov
std
mov
fsub
repz
aam
hlt
enter
fxch
fmul
repz
shl
ljmp
lret
fdivrl
ljmp
cmp
sti
cmp
xlat
in
enter
in
iret
loopne
loopne
shl
rcr
xor
shl
cmp
sti
iret
aam
loop
repz
lret
cmc
ljmp
jmp
fmul
repnz
cld
cmp
hlt
xlat
stc
dec
ret
out
cmp
mov
xchg
int
lret
nop
int3
sti
shl
cmp
cmp
into
aad
cld
into
cmp
add
stc
sti
out
in
repz
out
test
fcomi
out
aam
jmp
stc
jecxz
loope
cmp
out
out
mov
loop
icebp
in
sub
into
in
xor
out
sar
loopne,pt
cmp
ds
jmp
sti
out
out
int
jmp
aad
aaa
stc
xor
div
out
lret
aad
shl
cmp
testl
lret
fcomip
sub
aad
clc
into
fdivl
fcmovb
ljmp
sar
aad
mov
jmp
cmc
jmp
shlb
mul
cmp
in
shl
lret
cmp
repnz
shl
test
cli
lds
xchg
xchg
mov
xlat
xor
lret
std
hlt
lret
call
in
rol
vpsubsb
addb
out
repz
loope
bnd
fmul
fld
ror
cmc
int3
cld
in
mov
clc
jmp
fldl
ljmp
shl
icebp
cmp
out
aas
stc
in
sar
cmp
out
xbegin
int3
cmc
lret
out
loop
fdivs
in
icebp
cmp
sarb
roll
sti
mov
repz
out
aad
out
aas
fsubr
jecxz
rcr
in
test
call
aam
fimuls
jecxz
lret
out
call
addl
fcmovnu
in
mov
mov
fucomi
rcr
lret
icebp
in
cmc
iret
cld
cmp
rcr
ret
ret
repnz
in
jmp
out
jecxz
in
cs
xlat
xor
xor
fcmovnb
in
fpatan
loopne
repnz
fstp
std
enter
out
mov
ror
out
std
cmc
idivl
aaa
cmc
lock
cmp
sti
stc
fadd
mov
cmc
sub
stc
lret
sarb
aam
in
clc
in
repnz
aam
loop
and
int3
mov
enter
jmp
les
call
clc
in
hlt
sarl
loop
hlt
out
xchg
lret
mov
std
shrb
xor
int
in
hlt
cld
rcl
cli
icebp
test
jmp
loop
enter
and
fdivp
in
aam
jmp
fnsave
cld
cli
fucomi
fcmovu
iret
jecxz
loopne
iret
loop
cmp
cmp
fstpt
loope
sbb
sarb
loope
jmp
fucomp
jecxz
xchg
lret
nop
mov
ds
rol
bnd
loop
lock
cld
lock
ror
xlat
fdivs
leave
imul
shl
out
add
loop
stc
loop
cld
aad
mov
fmulp
mov
in
in
repnz
out
aaa
cld
call
xchg
fdiv
loopne
out
out
testb
int3
ds
in
cmp
in
rcl
in
out
jmp
cld
cli
stc
out
addb
lea
aaa
shlb
in
jmp
cmp
rolb
les
ljmp
f2xm1
into
sar
hlt
repz
shl
loopne
aas
hlt
sbb
clc
lret
sti
mov
iret
hlt
shl
xlat
in
sti
rcr
ds
les
in
std
mov
xchg
lock
out
shr
lock
iret
iret
xchg
cmc
enter
dec
out
fldl
out
in
fnstsw
cmp
clc
aad
hlt
loopne
fadds
sub
lret
xor
lock
out
cld
out
xlat
test
fcmovnu
in
nop
loop
cmp
into
in
rcr
out
rcr
xor
add
add
jmp
leave
sarl
rcl
int
mov
mov
lret
jg
cmpsb
add
shl
int3
cli
fsubp
aad
shl
mov
mov
adcl
cmp
aam
call
xlat
out
mov
jmp
iret
cli
xchg
mov
loope
sub
idiv
clc
into
hlt
cmc
xor
loope
clc
aam
call
xchg
shl
jmp
lret
ror
cmp
loope
xlat
sti
shl
loop
aam
loopne
loope
xchg
leave
xor
leave
sar
shr
sti
cmp
cmp
call
shl
iret
lock
out
int
stc
cmp
sti
cmp
cmp
in
and
ljmp
mov
loope
out
in
repnz
hlt
fadds
rorb
rcr
out
fiadds
rol
leave
cmp
cmp
out
repnz
aad
call
std
repz
sub
jecxz
imul
clc
xor
in
cmp
or
clc
call
faddp
icebp
lret
jmp
call
fcmovnb
cmp
in
movl
out
clc
aaa
in
into
out
and
out
fcmovu
faddp
xor
fdivrp
jmp
filds
loope
enter
sti
call
in
loop
test
lock
fldpi
rorl
cmp
out
ljmp
in
cmp
mov
mov
stc
fsubr
ljmp
xor
int
sti
rcl
sbb
addl
mov
aad
in
ljmp
fcomi
hlt
sbb
out
test
out
jmp
in
inc
repz
in
cmp
cli
rcr
aas
jecxz
cld
aad
call
mov
loope
int3
out
ret
iret
out
lret
aad
fdivr
ss
xchg
shl
lret
xchg
xchg
xchg
fdiv
jmp
into
enter
repnz
test
fucom
xchg
out
loopne
icebp
icebp
xlat
int3
shr
out
enter
xlat
rcr
sti
ffreep
rolb
sub
xchg
loopne
cmc
xor
xor
xor
aad
aas
aad
cli
faddl
clc
sti
in
cli
lret
xchg
repz
lret
xor
loop
xor
in
out
cmp
fucomi
iret
aas
cmp
stc
in
call
mov
hlt
int
shr
enter
lret
in
cmp
in
mov
mov
fiaddl
lret
cli
jmp
loop
ss
rcr
enter
sti
lret
mov
decl
enter
out
ror
fcmovb
repnz
fldl
ret
decl
xchg
loopne
shr
ret
in
cmp
enter
aad
test
ds
xchg
fcmove
int
mov
imul
std
fcmovne
cmp
aaa
loopne
sbb
cmp
int
in
repnz
aad
xor
ret
repnz
out
fdivl
lret
stc
repz
testb
movb
int
xlat
in
xor
icebp
std
rcl
roll
test
in
in
loop
nop
cmc
ds
sti
ds
fidivrl
cli
cmc
loopne
shl
shr
cld
or
cli
incb
sub
in
fst
xor
in
fcmovnu
xlat
in
into
hlt
aam
addl
out
lock
stc
clc
cmc
fdiv
cmc
shll
stc
aam
in
rcr
cmc
sar
fimull
int
out
out
mov
jmp
cs
xor
enter
fsubr
in
leave
clc
mov
xchg
jmp
out
aad
cmc
fucomip
repz
loop
hlt
rcr
cmp
jecxz
ror
cli
xchg
fcomip
ds
jmp
fdivl
fadds
in
shl
enter
movb
in
xor
lret
sti
xor
loope
cli
stc
xchg
mov
aas
mov
int
repz
rorl
in
aaa
clc
enter
into
and
in
jecxz
cld
in
aam
in
mov
fdiv
loopne
ret
in
xor
cmp
in
cmp
vcvtpd2dq
out
std
nop
rcl
call
in
repz
into
out
sti
aad
mov
loopne
inc
aam
dec
add
cmp
jmp
mov
leave
ret
int
leave
lret
and
scas
movsl
jg
cmpsb
add
repnz
mov
fsubp
aam
cmp
aaa
neg
shr
iret
stc
int3
sar
xchg
mov
mov
lock
shl
sarl
leave
fmul
shr
in
test
fdiv
loope
enter
rcr
enter
xchg
rcl
lock
cld
std
leave
lock
frndint
aad
rolb
in
cli
fucomp
jmp
loop
iret
ljmp
cld
cld
repnz
loop
ss
sarl
loope
loop
push
xor
out
das
xlat
xor
shl
out
into
cmp
mov
incl
cmc
icebp
sarb
xor
cmp
rol
clc
mov
sbb
sub
into
int3
loopne
icebp
rol
vpaddq
out
aam
fmulp
lock
mov
out
add
xchg
fldcw
ret
sub
aam
ret
idivb
loopne
testb
out
shl
cmc
xor
fucomi
in
fdiv
fsubrp
fdivrp
int
out
repz
xlat
aam
mov
in
in
iret
test
cld
ror
enter
cmp
jmp
neg
xlat
stc
sti
rolb
jmp
iret
iret
xor
ss
fucomip
cmp
lock
jecxz
cld
out
jmp
leave
test
hlt
out
xlat
cmc
clc
out
fistpll
repnz
loope
repz
nop
adc
xlat
ljmp
xor
iret
jmp
in
aam
ffreep
jmp
loope
jecxz
out
test
ret
aad
das
aaa
shl
aad
rcr
fadd
in
ret
aad
fmul
lea
call
clc
aas
hlt
fldl
repnz
jmp
mov
xor
in
lret
enter
repz
xlat
xlat
fucomp
int3
sub
repz
aaa
imul
imul
leave
icebp
xor
ljmp
fiadds
int
cmc
loope,pn
shr
rcl
out
stc
ljmp
mov
dec
mov
enter
cli
loope
in
xor
shll
stc
in
cmp
out
loop
or
test
in
mov
test
ret
shl
cmp
loopne
fadds
fucomi
mov
icebp
fimuls
shl
cli
clc
clc
cmp
fcomip
fiadds
neg
mov
test
out
sub
into
ss
repnz
fstpt
repnz
fdivs
loopne
rol
lock
fcmovu
out
in
loop
repnz
call
out
aas
sarl
icebp
ds
push
cli
loop
test
mov
jmp
xor
std
call
loope
loopne
rorl
int3
mov
lret
mov
out
cmp
lret
sarb
int
hlt
std
loopne
adc
cld
in
fsubr
loop
in
in
fcmove
aas
icebp
fdivr
loop
fldz
test
xchg
mov
fists
in
fxch
int
aaa
rcl
fcmovu
out
xlat
repz
loop
cmp
loope
jecxz
fucom
cmc
call
lret
jmp
ffree
loop
fcmovbe
loopne
mov
mov
cli
call
cmp
lret
call
lret
roll
jmp
cld
fdivrp
xchg
into
int
fsub
in
in
out
cmp
clc
aad
dec
xlat
roll
in
aas
div
dec
leave
adc
iret
fisubrs
rcl
cmc
aaa
ss
out
fcmovnu
int3
lock
sbb
lret
stc
call
addb
shr
lret
call
lds
fcomp
mov
fsubrp
jmp
loopne
aaa
leave
aaa
shl
cmc
into
movb
loop
ret
xchg
hlt
in
in
out
test
clc
into
mov
fsubr
aam
loop
aam
not
clc
stc
icebp
in
out
fdivp
addb
addb
out
sar
leave
repz
cmp
loope
cmp
ds
cli
clc
xlat
faddp
rorl
call
sti
fadd
lret
iret
aad
ljmp
lock
into
int3
in
std
cli
xchg
xchg
aam
out
sti
fst
rcl
aad
xlat
aam
fidivrs
movb
in
jecxz
je
movl
jmp
sarl
rcl
rcl
rol
ret
bound
test
jl
add
out
icebp
fsubrp
fxch
leave
aam
aad
out
imul
jmp
sub
out
vpminub
fcmovbe
jmp
rcr
ss
loope
fcmove
cmp
cld
sub
loop
ljmp
mov
out
out
xlat
jmp
xlat
cmp
jmp
rolb
stc
rcl
orl
jmp
ret
repnz
fiaddl
fnstsw
fdivr
xchg
vpaddb
jmp
lret
loopne
cmc
ror
aas
out
iret
addl
xlat
leave
out
out
fsubp
mov
lock
rcr
lret
cli
iret
ss
stc
repz
in
mul
stc
in
rcll
xor
clc
aaa
ljmp
loope
addl
mov
lret
and
lret
out
lock
std
filds
mov
addl
loop
icebp
shl
aam
sti
cmp
fxtract
in
and
test
orl
stc
in
imul
cmp
sar
rcr
xchg
fcomi
ljmp
cld
mov
aas
in
shll
mul
cmp
fcomi
roll
orl
iret
lret
repnz
ss
cmp
roll
xlat
sti
mov
out
loopne
shll
lret
out
aad
cld
aam
repnz
shl
repnz
sti
loope
rorl
shl
stc
jmp
fcmovb
shl
icebp
cli
into
test
mov
leave
lret
int3
fmull
out
aaa
xor
ljmp
xor
loopne
shl
in
xlat
out
ljmp
loopne
lds
xor
loopne
aad
fstp
test
mov
enter
jecxz
loopne
mov
repnz
loop
sub
ljmp
icebp
aam
aas
rolb
aam
test
sub
shl
xor
in
xor
out
lret
in
into
jecxz
test
cli
std
mov
call
cli
lret
cmp
fdivp
fnstcw
cmp
call
out
sub
mov
repz
jecxz
out
in
cmp
ljmp
cmp
jecxz
out
loope
ljmp
cmc
shl
fdiv
xlat
ss
idivb
fcom
lret
testb
in
incb
cmp
aas
int3
loopne
in
fiaddl
loope
cmp
sbb
mov
in
icebp
jmp
jmp
cmp
in
std
out
aam
in
fnstsw
ffreep
out
fdivr
test
ror
fdivp
in
xor
ss
out
jmp
rol
jmp
leave
mov
lock
jmp
stc
jecxz
sti
int3
lret
in
cmp
ror
adc
in
aad
loope
xchg
fimuls
in
in
out
clc
cli
lock
cmpb
xchg
aad
fsin
lea
out
icebp
aas
fsubrp
loopne
sti
rcl
cli
out
ds
hlt
int
loope
clc
shl
loopne
clc
fisttps
cld
repnz
repnz
icebp
xor
cmp
fdivl
out
std
loop
ret
loope
test
fsub
in
loopne
xor
lock
fdivp
lret
fcomip
cmc
stc
out
cli
fdivrp
std
loopne
fcoml
fdivr
into
out
sti
cmc
hlt
div
cmp
hlt
leave
mov
ficoms
imul
ss
das
lock
shl
aam
iret
aam
loope
cmc
mov
lret
ror
ljmp
std
std
ret
ljmp
loope
aas
stc
in
out
icebp
fmul
in
divb
loop
cmp
cmc
cmp
sti
fadds
fsubrp
call
cmp
in
hlt
sar
sti
cli
filds
ds
sar
orl
in
orl
enter
cmp
int
in
fsub
fsub
aad
call
mov
rcr
in
shl
out
out
aad
jmp
out
sti
loop
repz
xchg
mov
in
xchg
icebp
int3
int3
fdivl
sub
in
icebp
ljmp
aam
les
mov
lret
ror
repnz
shl
aam
fisttpll
lock
jmp
sarl
aad
aad
aad
sbb
or
es
mov
cmpsb
add
cli
int
clc
lret
imul
rcr
loop,pt
int
xor
loope
lret
shr
loopne
xor
hlt
aas
aam
stc
ret
incb
mov
ljmp
xlat
cmp
pushl
addb
xor
xlat
out
mov
out
lret
in
out
in
xor
out
hlt
sar
clc
leave
rolb
aam
repnz
enter
std
call
lret
icebp
jmp
xlat
std
cmp
aas
rcr
addl
addb
aad
in
xlat
cmp
repz
test
sti
loope
dec
cmc
lret
loop
mov
call
int3
out
enter
out
sarb
out
int3
aas
in
rcl
xor
xchg
fdivr
fsqrt
mov
ror
loope
xor
in
out
shlb
cmp
std
rol
sti
cli
clc
test
out
mul
decl
aaa
ret
out
in
jmp
aam
test
testb
fisttpl
out
not
repz
ror
shl
not
adc
test
loop
clc
enter
fmul
test
test
roll
int
lret
cmp
call
std
repz
aam
shl
fmul
out
xchg
out
int3
jmp
sub
shlb
in
enter
in
out
aas
xchg
sub
enter
in
lock
in
fstpt
not
adc
cmp
fadd
fucomip
clc
incl
lret
shrl
leave
xor
ss
loope
jmp
and
cmp
aam
ljmp
sbb
aam
icebp
clc
fdivl
xor
lds
fcmovnb
sti
out
mov
lret
mov
shrb
loop
shr
incb
into
fcmovne
ret
aad
out
xlat
jmp
mov
xlat
in
call
clc
fsubr
jecxz
fdiv
rcr
fdivrl
hlt
xor
fdivr
in
cmp
jecxz
leave
loop
jmp
fcmovu
clc
cmp
rol
test
fcom
leave
xlat
in
test
and
iret
loop
stc
aam
out
cmc
cmp
adc
shl
test
test
shr
out
into
hlt
ret
icebp
lret
aas
ljmp
leave
loope
stc
and
fiaddl
div
xor
bnd
out
neg
imul
ret
clc
aad
cli
leave
out
rorb
cs
clc
cmp
ljmp
int3
ret
iret
fcom
xchg
jecxz
in
in
jmp
jmp
ror
xor
cli
in
xlat
ds
into
jmp
leave
in
mov
mov
test
ror
jecxz
out
aad
cmp
aas
fsub
lock
xchg
div
fcmovne
call
jecxz
ljmp
shll
clc
in
cli
shr
ret
test
cmp
rol
lret
sub
in
lret
jmp
ljmp
aaa
repz
out
out
fcmovnbe
fst
xlat
aas
test
mov
cmp
aam
xlat
out
add
xor
roll
or
lret
xchg
xor
idiv
in
xor
cld
shr
ss
repnz
aad
jecxz
mov
test
xor
in
lret
clc
int3
aaa
fmul
int3
stc
cmp
sbb
lret
std
std
mov
jmp
ljmp
out
cli
fsubr
cld
sti
roll
cli
jecxz
fimuls
hlt
shr
in
sar
ljmp
in
in
fst
shl
movb
shl
lock
xor
fmul
call
or
fcmovb
vcmppd
fdivr
fmul
in
int3
lret
shl
in
icebp
call
cmp
hlt
stc
fnstsw
mov
call
nop
hlt
ret
icebp
in
xor
cmc
idiv
pushl
cmc
roll
loopne
int
test
fsubr
xchg
in
xor
in
rcl
cli
clc
icebp
xlat
xor
aad
cmp
loop
jecxz
mov
out
enter
lret
sub
ret
aad
cmp
fcom
in
icebp
fldl
leave
enter
mov
lret
repnz
call
idiv
jecxz
rcr
in
cli
ds
fcmove
leave
test
call
fxch
fcmovnbe
cmp
out
icebp
out
in
sar
mov
imul
jmp
ret
fcmovnu
aad
inc
pop
inc
mov
cwtl
js
mov
jl
add
mov
mov
fsubp
test
or
cmc
icebp
xor
in
fcmovne
std
jecxz
aam
not
add
xchg
mov
mov
call
leave
ret
xor
lret
ss
cld
loope
stc
xlat
clc
test
sti
cmp
loope
in
in
out
repz
aaa
xor
xor
fsubrp
in
icebp
out
mov
call
int
into
cld
repnz
ror
loop
call
fst
out
lock
and
ds
shl
enter
in
loopne
faddl
ret
in
std
aad
repnz
sti
ret
cld
mov
enter
fmul
fstl
ss
lret
cmp
call
int
lock
shl
int
lret
test
out
test
icebp
loop
loop
das
in
cmp
out
hlt
repnz
aas
ror
aam
orb
into
aam
lret
cmp
in
out
in
ror
cli
repnz
into
test
jmp
loope
mov
int
jmp
out
in
xor
xor
sar
xor
in
rol
into
cld
shr
in
out
cld
clc
shl
lret
loopne
aas
xor
xor
sarb
out
fstp
iret
jecxz
aas
ds
aad
not
and
out
int
lock
loope
in
jmp
repnz
cli
call
cmp
out
shr
aam
sub
xchg
test
orl
sti
cmc
cmp
sti
ffree
std
cli
fcomp
jecxz
fadd
test
ror
lock
lret
out
cmp
out
neg
stc
sti
fcmovnu
test
ljmp
iret
in
xor
clc
std
sarl
out
fcomp
jecxz
sti
stc
test
jmp
fldl
shr
out
cmp
in
cmc
leave
cmp
test
incl
jmp
jmp
in
enter
leave
cmc
lock
int
div
lds
faddl
faddp
mov
icebp
xor
lock
stc
ljmp
cmpl
ret
les
cli
mov
ljmp
ffree
out
lock
ret
into
add
loop
cmp
out
out
sbb
mov
fnstenv
in
fdivl
fmul
ss
fadd
sbb
mul
jmp
imul
nop
iret
and
out
jecxz
xor
rcl
xor
cld
fcmovne
iret
ret
ds
mov
lret
or
div
divl
lret
xor
cmp
cmp
fld
loopne
loope
sti
neg
mov
fdiv
icebp
out
mov
mul
fdivl
test
aad
movb
xchg
clc
loop
mov
shl
in
repnz
roll
std
mov
test
stc
int
rclb
stc
ljmp
int3
jecxz
jecxz
aad
jmp
out
decl
loope
not
in
lret
ss
repnz
sbb
repnz
cli
iret
repnz
jmp
out
sar
repz
cmc
hlt
aad
rolb
loope
jecxz
fcomp
fisttpll
test
iret
call
cld
repz
mov
sbb
mov
repnz
in
lret
xor
iret
repnz
idiv
int
repnz
aam
cld
mov
jmp
lock
jecxz
sub
sti
cmp
icebp
sti
in
out
fcomp
aad
xlat
in
shl
cld
jecxz
loope
xchg
shr
in
icebp
fld
fsincos
in
xor
repz
fdivrl
fildl
fldl
xchg
int
stc
ror
icebp
not
xlat
aaa
fstpt
lret
xlat
out
leave
ret
fcomip
sti
sbb
mov
mov
in
faddp
sub
ror
ret
idiv
idivb
clc
ds
cmp
fdivrp
loopne
std
adcl
xor
iret
fdivs
sti
cmp
cli
sbb
repz
lret
mov
ret
nop
nop
mov
xchg
sub
das
lock
out
clc
fiaddl
xchg
faddp
rcl
fucomip
enter
in
jmp
aam
in
aad
fstp
cmpb
cmp
test
cmp
loopne
and
mov
aad
out
jmp
in
repz
xlat
xlat
lds
out
ljmp
dec
jmp
fld
cmp
leave
in
rcr
rcl
cli
aad
sub
in
mov
mov
cmp
je
mov
orl
mov
xor
jmp
xlat
int
ret
ljmp
jg
cmpsb
add
mov
rcll
div
sub
in
fucomi
in
stc
dec
iret
into
into
cld
fcmovb
in
in
fsub
lret
lock
rol
cmc
div
cld
xor
aad
hlt
xchg
int3
dec
cli
test
les
xlat
lret
cld
cmp
xlat
repz
rolb
call
test
loope
shl
iret
in
neg
rcl
ljmp
test
aas
test
stc
out
sbb
ljmp
repnz
in
out
xor
repz
fsub
testl
lret
in
mov
loop
xchg
shll
jmp
hlt
in
sti
cmc
fcmovu
rcl
cld
loope
jmp
enter
lret
xchg
fsubp
loopne
mov
sub
int3
out
rol
in
testb
fsts
loopne
stc
aaa
cmp
fdiv
ss
add
call
jmp
jmp
xlat
stc
sar
stc
aad
repnz
cmp
in
icebp
xlat
ret
xchg
lret
iret
out
std
test
stc
shl
out
cmp
lret
out
lret
xchg
shr
fmul
in
xchg
sub
aad
xor
cmp
iret
cmc
loop
ret
xlat
fldl
fcomp
fisttps
ror
lock
cmp
out
cmp
shll
cld
sti
cld
sti
int
into
shl
loop
out
leave
xor
hlt
leave
out
rcl
loope
repz
ret
jmp
std
dec
cli
in
call
xor
rcr
jmp
rcl
aad
aas
add
flds
fucom
in
xchg
xchg
loope
hlt
sub
aad
cs
xor
loope
ret
ret
mov
cld
addl
xor
int
xor
lret
sar
cmp
out
fcomp
fadds
lret
leave
testb
in
mov
aaa
das
xor
sub
lock
incb
xlat
inc
aam
loopne
jmp
out
fucomi
shl
in
adc
shl
fmul
rcl
aad
in
xlat
ds
shl
ret
xlat
in
lock
mov
fnstenv
aad
icebp
shll
ss
ret
aad
jecxz
mov
orl
mul
aad
ret
ss
int3
jecxz
not
repz
repnz
mov
int
cli
jmp
loope
mov
lret
shlb
idiv
ljmp
xlat
aam
neg
cli
push
stc
test
xchg
in
in
nop
shlb
out
int
lret
hlt
sti
fistpll
std
in
call
in
int
test
icebp
call
jecxz
shrb
cld
cmp
cmp
sti
fdivr
jmp
std
int
loop
cld
ljmp
cmp
lret
std
aad
leave
cld
movl
int3
in
repnz
ffree
ret
rcr
out
sti
sbb
out
in
lret
repz
cmc
std
icebp
sarl
lret
idivb
loope
out
test
rolb
decb
int3
loope
xor
loope
out
std
div
sub
fdiv
cld
testl
xlat
cmc
aam
lds
aam
std
fdivrp
out
lock
call
into
aas
out
std
mov
sub
decb
repz
sti
call
int3
hlt
out
test
vpaddd
decl
cld
loopne
in
loopne
in
fcomip
xlat
out
xlat
lret
out
aad
int
jecxz
shl
hlt
cmp
addb
ficoml
in
shl
xor
sar
out
std
lret
ret
fucomip
mov
cld
ljmp
leave
xor
lret
icebp
in
aad
push
jecxz
out
rcr
bnd
enter
mov
mov
leave
in
ss
out
fsubr
cmc
in
cmpl
cli
inc
xchg
jmp
out
cld
std
xchg
xor
fmul
shr
lret
shl
and
sbb
test
stc
xchg
aaa
loopne
enter
cmp
call
addl
clc
fcom
cmp
out
ret
ret
int
in
cmp
sbb
aas
ret
test
sbb
lock
repz
ss
cmp
fdiv
jmp
cli
in
cli
jmp
fists
cmc
cmp
jmp
rol
int
fst
fcmovne
xor
jb
mov
jl
xor
leave
iret
imul
lret
ror
sti
cmp
ljmp
fucomp
test
in
aas
cs
aaa
repnz
loope
jecxz
jmp
xchg
fldl
cmc
rcl
lret
cmp
aaa
cmp
cmpl
aam
loop
fsubr
fisttpll
jecxz
shr
stc
out
cmpl
cmc
loopne
cli
test
int3
fcmove
fsubr
or
in
in
loop
out
ljmp
xlat
test
inc
aam
fsub
int3
cs
rcl
hlt
stc
test
stc
in
nop
lock
hlt
jecxz
aad
cmc
rol
sar
shl
fcomi
faddp
shlx
fcomi
call
jmp
cs
int
iret
cli
cmp
cmp
stc
shl
loopne
in
ljmp
nop
jmp
ljmp
std
ljmp
xchg
lret
loope
fucom
in
fcmove
xchg
sar
xchg
xor
fxch
divl
in
repnz
out
out
shl
cmp
fcomi
xlat
aad
or
test
jmp
in
out
out
stc
hlt
int3
cmp
not
lock
fcmovnu
ljmp
xchg
lret
out
in
in
shl
repnz
repz
hlt
in
ret
rol
push
cmp
test
or
filds
loopne
xlat
cli
call
xor
cmp
out
fdiv
xlat
loopne
cld
sub
aad
iret
ljmp
int
in
fucomi
ffree
testb
call
xlat
lock
iret
repz
aaa
sti
aas
loop
sti
test
sar
in
aas
lret
out
and
iret
test
jecxz
ss
out
xor
cmp
fadd
aas
icebp
cli
rcr
rolb
lret
jecxz
loop
jecxz
icebp
loope
in
shr
sar
loope
fdivr
icebp
xchg
call
repnz
cmpb
das
sub
aad
sti
lret
stc
shl
std
sar
aas
add
fcmovu
addb
xchg
lret
cmc
xlat
hlt
xor
stc
cmp
clc
sar
cmp
lock
sti
fimull
lret
jecxz
call
xor
fst
aas
aaa
out
int
jecxz
loopne
lock
sar
jecxz
out
in
aad
xor
iret
repz
stc
cmp
sar
shl
in
jecxz
shl
test
xchg
in
mov
sarb
cmc
loopne
ljmp
out
cmc
shl
aam
fsub
test
test
loopne
sub
fcomp
in
fsub
icebp
sbb
into
cld
std
repnz
clc
add
mov
xchg
orb
out
hlt
in
xor
cmp
neg
cmc
sti
ljmp
test
loope
ret
vpsadbw
xor
fldl2e
cmp
fadd
cmp
rcr
out
out
out
jecxz
mov
int3
sti
enter
shl
stc
shr
aaa
fidivrs
hlt
sbb
in
lea
mov
in
iret
shlb
xlat
repnz
fadds
vpsubusw
lret
adc
lret
nop
xor
fucomp
repz
cli
loopne
aas
xchg
xchg
ret
int3
rol
ror
aam
xor
out
ffreep
adc
icebp
repz
mov
les
inc
loope
into
cmc
cmp
icebp
lret
fdivr
cmp
ret
rol
mov
addb
lret
jmp
out
std
stc
cmp
fdivrl
ret
into
rcr
repnz
loope
iret
clc
icebp
call
aad
in
xor
cli
leave
iret
int
repnz
rol
cld
cmp
shl
rorb
cli
shl
loopne
int
enter
cmp
ror
sti
fstp
fdivrp
shl
rcr
lret
call
test
xor
leave
sti
cmp
out
cmp
cld
fiadds
int
fdivrp
into
loopne
repz
imul
int
sti
cli
shl
sarl
shl
loop
loopne
aam
into
fsubrp
xchg
xchg
out
xor
in
shr
aad
stc
hlt
loopne
shl
rcl
loop
rcr
fcmovne
out
jmp
cmpb
call
enter
sti
fnstcw
jmp
call
fmul
cmp
rol
ret
xor
sti
rolb
jmp
lret
ret
fstpl
fidivrl
rcl
stos
inc
jg
cmpsb
add
push
out
jmp
rclb
jmp
xlat
fucomi
iret
aad
out
cmp
loop
cmp
cli
fsubrp
jecxz
cmp
in
xchg
cmc
loop
xor
icebp
fsubr
in
int
lret
mul
rcl
fsincos
aad
test
pop
mov
shr
leave
fisubrl
in
in
clc
stc
iret
ds
ffreep
fsub
in
aam
ret
int3
out
mov
jmp
lock
jecxz
xchg
call
loope
fiadds
hlt
sub
call
leave
fdivs
fcomi
repz
icebp
out
hlt
aam
xor
in
lret
repnz
cmc
lret
aam
out
cmp
fstpt
stc
repnz
int
jmp
call
ret
in
lds
idivl
icebp
ror
iret
xchg
lock
jmp
loope
fsub
call
out
mov
hlt
cmp
lret
fdivrl
xor
and
leave
mov
in
xor
fcom
cmc
in
sar
aad
cmp
cmp
fmulp
jmp
mov
lret
repnz
call
cld
xlat
repz
fiaddl
lret
int
sar
popl
out
ror
das
cmp
xor
ret
aas
loop
std
loope
stc
shl
in
repz
into
into
in
fcmovnb
aam
iret
xor
clc
xlat
jmp
xlat
loope
sbb
out
out
out
call
out
repz
fcmovnu
cmp
shl
cmp
mov
xchg
cld
xchg
fmulp
rol
jmp
fcomip
int
test
addb
testl
hlt
into
sar
std
fucomip
sti
loopne
jecxz
xlat
aad
rol
mul
fsubr
xchg
out
sar
xor
in
int3
jmp
std
cmp
ret
xchg
jmp
fsts
loopne
out
int3
in
xor
jmp
leave
ds
cmp
clc
test
imul
inc
cli
flds
aaa
ror
test
xor
ss
divl
shl
adc
mov
orb
ss
jmp
cmp
int3
aam
cli
iret
sti
cmp
mov
loopne
mov
shll
sti
ss
cmp
jecxz
rcr
neg
lds
mov
lock
lret
cmp
fsubrl
xlat
int
enter
faddl
cli
hlt
mov
call
hlt
stc
int
icebp
int3
idiv
cli
shl
ret
fucomip
adc
loope
in
cli
clc
cmp
into
lret
fsubrp
shl
push
cmc
out
test
fsub
adcb
lret
jmp
call
test
icebp
sub
in
hlt
repnz
fcmovbe
idiv
fisttpll
repz
loopne
imul
cmp
ljmp
ds
in
in
aad
lret
fcmovu
adcl
hlt
in
call
sar
in
std
rcr
cmp
fisttpll
out
jmp
xor
sar
sarl
clc
out
fld1
xor
lock
mov
out
in
int3
jmp
iret
ret
clc
iret
hlt
clc
rcr
cmc
aad
std
fdiv
ffree
fdivp
cli
fsubr
mov
movl
shl
ror
lock
hlt
hlt
in
xor
ds
lret
jmp
test
aam
xor
leave
xor
loope
imul
rcr
div
jecxz
xchg
loopne
clc
fdivr
sti
bnd
hlt
das
repnz
aam
in
leave
imul
out
cmc
into
fidivrs
repz
rcl
call
enter
lret
xor
jmp
aas
div
and
aas
fsubr
lds
loope
out
cli
iret
cld
cmp
int3
cmp
out
cmp
fmulp
flds
fsub
mov
test
test
repz
ror
int3
repz
cmc
shl
ret
adc
stc
loopne
fcmovnb
std
mov
enter
aaa
ret
test
in
xlat
repz
sti
repz
test
vcmpsd
jecxz
in
sub
jmp
shlb
stc
fnstcw
aam
fidivrs
loop
loop
ljmp
ficoml
rol
call
out
cmp
cli
addb
orl
inc
hlt
jmp
aam
fcmovnu
mulb
xor
aam
jg
cmpsb
add
lret
lock
mov
in
stc
xor
hlt
aad
div
cld
jecxz
aam
in
neg
mov
icebp
loope
test
int3
das
xor
xlat
cli
loop
icebp
sti
test
fdivr
imul
in
lock
iret
std
out
rol
out
lret
ljmp
lock
and
repz
fcmove
into
loop
in
loopne
in
out
loope
icebp
cmp
ljmp
shl
cmp
xor
call
faddp
iret
into
lret
in
xlat
lret
fsubr
ret
addl
std
sub
nop
xchg
test
ss
call
cli
fmul
cld
hlt
test
bnd
sti
xchg
loopne
mov
lret
in
jmp
ret
cmp
fmuls
mov
test
loope
and
hlt
out
iret
rol
xor
into
idivb
lret
out
cmp
ret
jmp
in
call
rclb
int3
loopne
aam
rcl
ret
mul
enter
int
cli
test
out
lret
aam
shl
ljmp
test
out
fadds
iret
loopne
lret
rcl
ret
xor
stc
int3
shl
cmc
xlat
fcomi
fdiv
cld
movl
test
xchg
fidivrs
ret
loopne
xor
rcl
clc
into
out
faddl
loop
lret
clc
cld
mov
xor
cmp
xor
aad
int
loopne
cld
enter
jmp
rol
out
hlt
repz
clc
repnz
fdivr
iret
lret
loope
out
loop
jmp
in
shl
test
out
shl
fnclex
repz
rcl
cmp
fadds
call
mov
into
lock
icebp
xchg
lock
cs
xor
fnstenv
out
cmp
aas
fdivr
aam
div
lret
leave
clc
iret
xchg
shl
fdiv
repnz
lock
fcmovu
xlat
xor
icebp
iret
int3
rcr
stc
shl
repnz
xchg
jmp
fdivrp
jecxz
mov
out
out
leave
sarl
cld
cmp
jecxz
cld
out
rcl
push
std
jmp
cld
ljmp
in
not
aaa
shl
test
loopne
hlt
lret
mov
mov
xor
lret
imull
fsub
hlt
adc
div
in
aas
idiv
test
mov
in
ljmp
jmp
pushl
out
aam
fldlg2
cli
in
test
in
fmul
fmul
in
ficoml
icebp
out
lret
sarb
sbb
fldl
leave
cmp
xchg
out
ss
iret
fcmovne
repz
ljmp
test
std
loope
cld
inc
fsubrp
in
fists
xor
sarl
into
sar
ret
cmp
cmp
xlat
imul
mov
mov
ljmp
fucomp
into
loopne
fsubr
into
cmc
sarb
cmc
cmp
idiv
sti
sar
xor
shl
xlat
sarl
incb
cmp
xlat
out
roll
repz
les
in
icebp
std
iret
loopne
xlat
rcl
into
xchg
ret
fcmovnu
decb
test
sub
in
leave
aad
ss
fst
fsub
sarl
hlt
in
loop
fsubp
fdivr
mov
repz
shr
xor
aam
fstpt
cld
aas
fcmovnu
adc
rcr
test
mov
icebp
fldl
aad
xor
lock
cmpl
repz
test
xlat
rcr
lds
rol
sub
in
jmp
std
ljmp
cld
cmc
or
out
out
lret
nop
mov
loope
aad
fdivrs
std
cmp
addl
sar
shl
xchg
repnz
call
xor
xor
les
imul
xchg
cmp
iret
in
repz
clc
ljmp
int
iret
call
stc
mov
shl
leave
rol
xor
stc
rcr
loope
dec
rcl
repnz
clc
jmp
out
sub
jmp
jmp
cmc
xor
rcl
fcmovb
fbstp
fdivr
loop
xchg
sbb
call
mov
call
out
out
into
jmp
clc
loope
aad
aam
fsubp
or
call
shl
test
rolb
call
mov
add
mov
jmp
int
aas
ror
rcr
fcmove
mov
js
rorb
cmpsb
add
divl
loop
in
clc
xor
ljmp
ret
xlat
fstp
cli
cld
fxch
loopne
mov
sub
stc
fcomp
in
ljmp
shl
div
fincstp
cli
ljmp
test
jecxz
cmp
stc
int3
leave
xor
fstp
cmp
sbb
fcmovb
loop
sub
in
shl
cmp
cmp
cmp
rolb
mov
out
ljmp
enter
clc
shlb
lret
test
rcl
fildl
idiv
out
mov
mov
out
cmc
not
jmp
loope
clc
xlat
lock
adc
addl
fsubr
repnz
ljmp
jecxz
cmp
addl
loop
into
lret
int3
fcmovnu
iret
enter
fdiv
icebp
cmp
mov
mov
inc
int3
rcll
xor
lds
xlat
repnz
cmp
repz
jmp
ljmp
out
hlt
call
xor
cmp
lock
rcl
cli
fadd
in
jmp
loopne
mov
hlt
in
out
div
in
ljmp
cld
xchg
in
roll
lock
sub
repz
int3
cmp
cmpl
jecxz
bnd
mov
int
in
vpand
int3
repnz
icebp
rcl
addb
imul
loopne
std
lret
out
ss
repz
cmc
iret
mul
call
sti
ret
hlt
jecxz
les
std
mov
repz
cmp
stc
out
cmp
lret
shl
cli
loope
test
testl
repnz
fsincos
jmp
out
jmp
or
fiaddl
xlat
fisttpl
xchg
out
ljmp
cmp
ror
stc
loopne
test
sar
sti
loope
fadds
nop
shl
loope
lock
clc
shlb
shr
icebp
out
int
lret
repz
fadds
leave
loop
out
loope
out
into
jmp
repz
fdivr
std
shl
ret
repz
fptan
jmp
popl
aam
in
int3
sti
shr
std
repz
call
in
hlt
sar
mov
icebp
roll
icebp
ss
shl
xor
stc
cld
iret
fcmovb
out
sti
shl
lret
cli
rcr
xchg
lret
out
xor
out
cld
sti
enter
cld
shl
out
aad
out
in
clc
leave
fcmovnb
out
xchg
out
iret
sub
ljmp
xor
in
rcl
cmp
into
repz
jecxz
ljmp
loope
jmp
aaa
aam
aaa
in
iret
out
shl
fsubr
sarb
repnz
test
xchg
faddl
or
out
cmp
cli
fidivrs
and
cli
cli
faddp
loopne
out
nop
in
out
xor
xor
cmp
stc
cli
aas
incl
in
std
or
mov
int
clc
out
shlb
cmp
fcmovb
div
iret
int3
icebp
out
out
fcmovb
loopne
loop
xchg
ror
in
repnz
out
aaa
iret
cmp
fiaddl
fsub
test
cli
out
mov
int
in
aaa
xor
ret
sti
ljmp
shr
cmp
fisttpll
orb
cli
das
repnz
cmp
push
adc
in
mov
int
fmul
test
int
vpavgw
out
cmp
repnz
incl
fcomp
in
lret
dec
xchg
cli
in
out
lock
jmp
ljmp
call
aam
repz
mov
ljmp
out
sar
int
out
ds
clc
vpmuludq
jmp
imul
int
jmp
mov
loop
div
fsubp
test
aas
cmp
and
aam
enter
repnz
xchg
bnd
aam
fnstcw
repnz
testb
mov
out
filds
enter
repz
fcomip
cmp
loopne
xchg
rolb
mov
jmp
int
in
out
icebp
add
fcmovne
in
mov
sbb
lock
rcl
les
out
xor
aas
repnz
andl
jmp
mov
jmp
iret
aad
aad
adc
lea
out
mov
test
jg
cmpsb
add
cmp
fsub
test
stc
mul
sti
mov
lret
shl
icebp
int3
call
in
cmp
clc
out
repnz
hlt
cmp
addl
icebp
loop
leave
ss
clc
stc
out
lds
in
out
loop
xchg
divb
icebp
in
cmp
xlat
stc
repz
out
cmc
int
std
rol
stc
mov
leave
stc
mov
nop
enter
icebp
not
into
lock
jmp
into
iret
imul
stc
hlt
loop
mov
int3
loope
lock
out
cmp
icebp
sarb
ret
loope
fcomi
xchg
fldl2t
fcomp
in
enter
cmc
nop
xor
aad
stc
fcomip
fmul
clc
stc
fildl
test
decl
int
fldlg2
in
out
shr
ror
not
lret
loopne
xor
fprem
jmp
xchg
into
icebp
xor
hlt
sti
cld
leave
ds
incl
aam
xlat
in
dec
fsub
icebp
mov
in
fld
vpminub
fistpll
faddl
call
ffree
fldz
decl
loopne
icebp
int3
out
out
repz
out
rcl
fcmovb
xchg
mov
mov
hlt
in
out
lret
xlat
clc
xlat
xor
int3
leave
call
xor
xlat
lret
sti
ljmp
repnz
ror
aaa
cmp
sar
leave
std
sarb
adc
addl
jmp
fsub
decb
xor
out
int
test
aas
clc
xlat
sbb
std
enter
out
repz
shl
cmc
fmul
int3
cmp
cmp
filds
mov
aad
xchg
loopne
fsub
into
xor
jecxz
aam
sti
sti
cli
jmp
xlat
sti
aaa
cld
cmp
idiv
cli
addb
loope
in
aad
in
call
loopne
rcr
in
rol
hlt
test
incl
call
cmp
loopne,pt
fidivrl
jecxz
jmp
fadd
mov
cmp
rcl
fmulp
out
cmp
aad
cmp
fucomi
cld
incb
lock
iret
out
in
vpsllw
cmc
hlt
divb
int
jmp
xlat
loopne
stc
iret
loop
cli
div
loopne
cld
orb
repnz
repz
cmp
sar
addl
mov
add
into
fucomip
repz
call
xor
sti
fnstsw
cmp
ror
lret
les
jmp
or
repz
icebp
out
rcr
fdivr
ret
fcmove
int
loop
aad
in
ss
cmp
loop
stc
loope
testb
call
rol
jmp
enter
hlt
in
push
rcr
icebp
lock
fucomi
stc
out
loopne
xchg
xchg
xor
int3
cmp
repz
int
cmp
jecxz
add
out
call
aaa
stc
xor
in
into
cmp
cli
test
test
sbb
in
out
xchg
shl
xlat
out
jmp
fst
les
jecxz
rol
fcomip
out
loop
test
xchg
xchg
mov
out
int
vpaddsw
in
leave
cmp
int3
cmp
fisttpl
cld
dec
jmp
aad
cli
cld
div
cmp
vpxor
shr
aad
adc
test
out
divb
int
sti
repz
out
out
and
std
int
clc
and
loope
out
in
shr
cmc
cmp
cmc
lret
cld
cmpl
clc
rol
mov
call
loop
std
out
sub
stc
in
in
shll
cs
add
lds
loope
in
jmp
loop
loop
icebp
ljmp
leave
idivl
aam
in
loope
fucom
xchg
mov
int
in
les
lret
loop
sar
call
rcr
stc
cmp
fucom
test
fmul
nop
cli
jmp
ret
sti
jecxz
lret
cmp
cmp
cmp
xlat
test
fxch
decb
aaa
xor
int3
lds
leave
aaa
clc
loopne
cmp
fxtract
sti
xlat
hlt
testl
rcl
in
in
icebp
cmp
cmp
hlt
cmc
int3
stc
lock
xchg
mov
jmp
mov
int
mov
aam
rclb
jl
add
iret
in
in
shl
aaa
enter
fnstsw
cld
iret
sarb
sti
xchg
xchg
ljmp
icebp
xor
xor
cmp
loope
call
ret
sbb
fcom
xlat
out
in
in
fiadds
shll
jmp
enter
cli
push
repz
stc
test
ret
or
test
das
xor
int3
int3
ljmp
rolb
in
rcr
div
leave
ljmp
cmc
ret
into
int3
cmc
out
fdivrl
or
aaa
cmp
loop
mov
bnd
xchg
sub
fsub
fcmovnbe
call
aad
xor
repz
aam
aam
stc
lret
icebp
cli
xchg
xchg
test
shr
leave
out
loop
fcom
out
loopne
sar
lock
jecxz
out
jmp
mov
xchg
cli
in
aam
hlt
enter
cmp
fst
loop
cld
out
aam
ljmp
mov
rcr
lret
repz
jmp
sti
faddl
in
loopne
stc
mov
lock
cmc
xor
into
cld
fxtract
cmp
roll
loopne
loopne
loop
fimull
cld
ljmp
in
jmp
fcmovnbe
rcr
adc
mov
leave
xchg
iret
enter
xor
repnz
clc
ljmp
loop
out
xor
xlat
fsubp
cld
faddl
lds
xor
lret
hlt
icebp
not
rcl
rcr
fucompp
loopne
in
fucomip
shl
jmp
out
shr
xor
sub
int
aad
loopne
aam
aas
incl
iret
iret
xchg
xchg
lret
out
out
sub
cmp
cmp
aas
hlt
fcmovu
test
cli
ds
sar
orb
xchg
test
ljmp
cmp
cmp
xor
hlt
sti
out
jmp
out
fsubr
mov
jecxz
ror
call
fidivrl
jmp
xlat
test
out
mov
in
call
icebp
orl
fnsave
hlt
repnz
test
sub
int3
lea
fcom
ffreep
in
xlat
sbb
xlat
ret
test
inc
rolb
loope
lea
fdiv
rol
fsubr
add
and
cmc
ret
xchg
sti
addl
ret
repz
std
fxtract
call
test
call
jmp
cli
mov
rcl
repnz
cmp
cmp
jmp
loop
shl
cld
fcmovnb
jmp
fsts
rcr
out
jmp
aad
lds
ljmp
ret
xchg
mov
int
out
nop
mov
loope
repz
cmp
out
sti
out
fdivrs
test
fstp
clc
loopne
incb
ror
shlb
icebp
icebp
fucomip
out
loopne
fadd
imul
cmp
ds
mov
rorb
out
icebp
ror
ss
ret
sar
cld
fimuls
xchg
std
shr
inc
lds
ret
aad
aaa
in
cmp
lret
ds
lds
lea
mov
in
nop
lret
rol
sub
aaa
aad
rcr
cld
fcmovne
cli
inc
fcompp
std
xchg
cmc
fmull
sub
rcl
repnz
repnz
cmp
cld
fdivr
idiv
fiaddl
call
jecxz
das
fldlg2
lret
cmc
cmp
hlt
cmpb
fdivrl
icebp
loopne
jmp
clc
int3
lret
int3
mov
ret
rcl
cli
cli
rol
jmp
sar
mov
rcr
out
aad
shl
icebp
repz
fdiv
aam
fcomp
icebp
out
adc
aas
orb
loopne
aaa
lret
out
sar
aas
cmp
ljmp
fsubr
loopne
xlat
icebp
sti
into
out
repnz
int3
ljmp
ljmp
in
jecxz,pt
cld
fiadds
lock
and
lock
fnstsw
cmp
cli
and
aad
roll
call
rcr
int3
shl
ljmp
rcr
loope
in
hlt
jecxz
repz
test
cld
sbb
repz
lret
repz
aam
aas
cmc
fucomip
sbb
aam
shl
out
test
loop
fdivr
loopne
nop
call
cs
clc
je
mov
jmp
int
aad
fstp
ffree
push
jl
push
jl
jg
cmpsb
add
iret
lret
int
lret
lret
enter
xchg
jecxz
cmp
clc
fsub
out
lock
fsubr
shr
aam
lock
adc
aas
ror
test
jecxz
fmul
ret
cmc
cmp
lock
loope
cmp
inc
lock
ret
std
fmull
out
icebp
lock
jmp
cmp
fdivrs
iret
sti
shl
cmp
leave
xchg
sbb
lock
and
in
repnz
lock
clc
std
push
std
xlat
jmp
int3
in
icebp
call
lret
div
int
repz
shl
aam
xlat
out
add
out
jmp
shr
rcl
xor
clc
in
out
sub
not
into
neg
xchg
xchg
enter
loop
fucomp
mov
cmc
shlb
lock
std
out
icebp
xor
std
int3
loop
jmp
idiv
fld1
out
ljmp
icebp
xor
shr
enter
cmp
hlt
std
jmp
lret
int3
ljmp
clc
fnsave
cmp
addb
call
mov
jmp
call
shl
aam
roll
loopne
out
lret
ret
in
in
in
aam
cmp
cmp
fcom
aad
repz
fadd
loopne
cli
mov
sti
xchg
rcl
in
call
aam
rcl
loopne
out
fcomi
mov
in
stc
clc
sub
sub
lret
out
cmc
fsubr
enter
fsubp
hlt
sti
std
test
mov
mov
leave
lock
into
pop
jmp
out
aad
cli
jmp
lock
rcl
testb
loop
cli
xchg
in
aam
rcl
cmp
hlt
int3
roll
fdivrs
fucomp
cld
mov
lock
shlb
cmp
into
enter
fdivrp
repz
out
fldl
cld
jmp
in
das
lock
xlat
out
ror
cmc
fsubrp
ror
in
cmp
loop
ljmp
fstp
jecxz
xchg
rcl
aad
hlt
sarl
cmp
test
and
hlt
neg
mov
cmp
jmp
cmp
fdivrl
cmp
into
fnstsw
cli
ret
loopne
sub
das
in
lret
jmp
sbb
aas
repnz
mov
jecxz
ljmp
out
ret
ror
xor
fcomip
cmp
fcmovne
cld
fistpll
fidivrs
mov
call
jecxz
fsubp
fsubp
aad
mul
fprem
lock
repz
cmp
cmp
in
aam
out
out
lret
out
in
xor
repz
sarl
fnsetpm(287
hlt
leave
rol
loope
sti
int3
std
icebp
jmp
in
rol
into
fscale
fnop
fyl2x
lds
cld
fdivp
ret
xchg
stc
mov
ror
repnz
lret
cmp
and
sar
aad
in
fucomp
repz
ror
xor
clc
xor
cmp
lret
int3
into
shl
aad
filds
movb
int3
jecxz
in
fdiv
cmc
cmp
hlt
cli
in
mov
call
xchg
mov
jmp
out
cmp
add
cli
xlat
out
ljmp
mov
out
ret
aad
xor
out
fcom
out
int3
rcr
call
mov
in
fimuls
mov
xor
shr
lret
into
fadds
fcmovnb
cli
ljmp
out
ret
in
xor
fxch
in
ljmp
aad
xchg
fiaddl
orb
out
stc
int3
divl
leave
aam
ret
clc
repz
rcr
mov
cli
mov
or
in
out
xor
int
sti
int
into
call
inc
fsub
mov
out
ljmp
repz
vmovq
repz
fdiv
sti
aam
cmp
not
test
aam
vpaddw
fcmove
jecxz
iret
hlt
stc
cs
enter
cmp
test
loop
hlt
aad
call
dec
cld
loop
nop
mov
imul
rcl
out
int
add
xchg
std
test
clc
loop
frndint
mov
jmp
fcomp
hlt
call
xor
jp
jmp
inc
cld
mov
mov
mov
xor
jmp
aam
ror
rcl
fld
sub
loope
cmpsb
pop
jg
cmpsb
add
aad
div
in
xchg
xchg
xlat
jecxz
lret
test
shll
std
iret
repnz
aas
icebp
fucompp
mov
ret
loopne
lret
iret
into
jecxz
call
int
ljmp
ret
fsubrp
xchg
loopne
lock
jecxz
cld
leave
aaa
cli
repnz
or
and
neg
mov
leave
enter
hlt
les
xor
shl
out
cli
hlt
cli
cmp
jecxz
rol
idiv
clc
sti
ljmp
xchg
xor
mov
out
jmp
int3
aas
repnz
sti
movb
icebp
in
enter
jmp
clc
xor
fadds
fneni(8087
fsubr
stc
fmul
out
mov
int
int
leave
sub
loopne
fld
fucomip
shl
mov
test
int
nop
and
xlat
xor
in
icebp
cmp
call
popl
repnz
clc
xlat
xor
cmp
cli
in
repz
ret
fsubp
std
mov
out
iret
xchg
shr
xlat
xor
xor
fcmovnu
divb
cmp
fcmovnbe
jmp
int3
cld
jmp
xor
int
ss
aam
cmp
jmp
flds
cmc
int
ljmp
xor
sti
lret
rcl
lock
std
xor
ds
lret
mov
call
loop
cmp
repnz
fdivr
lret
cld
cmp
int3
fdivp
idiv
lds
sbb
nop
int
out
int3
cs
cli
cmc
idivl
in
icebp
in
jmp
lret
cli
ljmp
not
xor
leave
fldl2e
cmp
fstpt
test
out
rcl
out
loopne
testl
sub
loop
shl
lock
fst
lock
loop
out
ret
loope
fists
repz
sub
aad
clc
shl
sbb
loop
shl
leave
clc
jecxz
ljmp
adcb
sti
xor
xor
cmp
ror
jecxz
aad
sarl
fcmovnbe
jecxz
loope
out
out
into
shl
repz
jmp
ljmp
mov
xchg
lret
mov
jmp
test
jmp
icebp
div
cmp
fadd
cmp
ret
ret
ret
repnz
lds
jmp
mov
jecxz
jmp
out
cli
hlt
cmp
stc
loope
out
cmp
std
nop
repz
lock
xor
ljmp
xor
sar
fxch
stc
call
out
lret
into
lret
test
leave
aaa
ljmp
out
cmp
jecxz
cmc
addb
mov
xchg
xor
fdivr
lret
clc
loopne
loopne
idiv
sti
mov
mov
test
sub
out
aad
cmc
iret
rolb
add
mov
jecxz
stc
mov
in
lock
in
lock
aad
idiv
aam
test
test
mov
std
out
aam
out
das
in
sub
cmc
cmp
div
in
in
fcmovnu
repnz
aad
sti
ljmp
sub
repz
shl
fcomip
aam
fidivrl
in
repnz
jmp
out
fxam
enter
mov
aaa
shl
sarb
fcmovnu
hlt
fcmovnbe
test
filds
aam
jmp
int3
xchg
xchg
repnz
fld
sub
out
cmp
cmp
jmp
loope
rcr
sarb
and
int3
cld
mov
fbstp
xor
aad
ljmp
cli
int
xor
jmp
out
xchg
aam
clc
in
int3
sar
rcr
ljmp
fcmovnu
idiv
std
call
shr
xchg
bnd
out
in
repnz
shl
into
jecxz
repz
cld
ret
mul
mov
int3
fiadds
xlat
int
enter
cmp
cmc
test
xchg
loopne
int
pushl
hlt
into
cmp
std
aaa
jmp
aad
in
shl
jmp
fdivrp
xchg
decl
jmp
cmp
imul
lock
loopne
addb
cld
movl
repnz
aad
rcr
leave
ror
aad
aas
fneni(8087
push
cli
fidivrs
add
cmp
je
mov
xor
add
mov
mov
jmp
enter
int
insb
push
push
mov
xor
shlb
jl
add
stc
mov
lret
into
sub
aad
xor
cmpl
shl
lret
orl
iret
imul
cs
in
xor
clc
fsubr
sar
cmp
out
std
lret
jecxz
xchg
jecxz
hlt
loope
enter
rcr
cld
cli
shr
imul
cmc
in
out
enter
loop
xlat
xor
shr
rol
lret
loope
fstp
aam
jmp
fiaddl
out
lds
cmp
out
leave
cmp
aaa
aad
cmp
aas
ffreep
fcmovnbe
movl
nop
loop
xor
aam
cmp
loopne
jecxz
rolb
cld
jecxz
lret
adc
shl
jecxz
das
out
test
out
int3
idivl
lock
fadds
jmp
icebp
ror
loop
fsub
sub
ret
repz
fcmovnbe
fst
into
loop
cmp
loope
stc
cli
rorb
repz
in
jecxz
enter
cmp
shl
lock
jecxz
repnz
ret
aam
inc
fisttpl
cmc
iret
test
in
vpmovmskb
cli
shl
rolb
orl
std
iret
out
sub
hlt
xor
les
xor
mul
iret
hlt
loopne
fsub
ffreep
cli
stc
ljmp
xlat
jmp
lret
fcmove
in
lret
std
loopne
rcr
fcomp
mov
hlt
les
nop
xchg
aaa
int3
in
repz
cmp
sti
fistpll
fnstsw
cmp
aas
sar
fisttpl
iret
ljmp
out
jmp
sti
leave
hlt
aaa
neg
into
sarb
ret
in
testb
mov
out
shl
jmp
call
lret
mul
out
not
fdivp
leave
xabort
mov
in
loop
in
xor
lret
icebp
fnstcw
in
cmc
sar
xchg
lds
cmc
iret
call
aaa
shl
cmp
rol
lock
jmp
mov
loope
mov
loopne
jecxz
shl
aam
std
hlt
shl
iret
shl
fdivp
fcmovb
test
orl
in
hlt
ret
enter
std
std
into
adc
loope
mul
sar
out
mov
mov
int3
into
xchg
in
in
sti
div
into
icebp
fildl
in
loopne
fucomi
hlt
loope
out
icebp
xor
test
sub
divl
out
out
sti
in
fildl
bnd
xlat
faddl
mov
iret
out
sub
in
xor
fcomi
iret
repnz
jecxz
testb
fmulp
xchg
sub
cs
cmc
rcl
imul
cmp
lret
out
in
sub
lret
call
iret
fdiv
shl
aad
repnz
sti
loope
lock
flds
jmp
mov
call
ss
cli
cmp
imul
aad
icebp
mov
xchg
mov
loop
out
cmp
jmp
cmpl
jecxz
xlat
faddl
xchg
rcl
repz
fcmovbe
int
in
sar
hlt
cmp
into
ret
xlat
fisttpl
jmp
aam
out
sti
int
ror
idivb
cli
sarl
int
icebp
aad
cld
loop
mov
mov
aad
out
aaa
aam
add
div
imul
mul
loopne
jmp
out
in
mul
in
std
std
repnz
ror
cmp
cmp
cmc
clc
xor
jmp
fadds
loope
xor
xor
in
fmul
fcmovne
sar
addb
call
in
shl
ljmp
lret
leave
xlat
fnsave
idiv
fsincos
out
in
jecxz
cmc
icebp
aad
rcr
mov
mov
iret
ret
das
xor
in
cmp
cmp
sti
rcl
fdiv
out
fcmovnu
sbb
int
fcoml
shl
fcomi
ss
ret
stc
hlt
mov
nop
mov
lret
ljmp
in
out
sti
fnop
repz
ds
out
sub
adc
lret
lock
leave
sti
cmp
fdiv
aam
xlat
fcmovb
xchg
sub
out
lock
in
nop
ror
xlat
int
aaa
xor
xlat
call
in
hlt
leave
xchg
idiv
xchg
fimull
jge
mov
jmp
rcl
rcr
fcmovb
mov
fstpl
or
addl
add
cmc
shl
enter
sbb
cmc
in
cmc
xchg
xchg
leave
into
loope
out
ret
repz
aas
in
icebp
sar
int
shl
repz
xchg
fcmovb
loopne
fneni(8087
in
rcl
shl
repz
sarl
roll
test
std
enter
xchg
xor
clc
lds
cmp
aas
aas
in
int
xlat
lds
jmp
sti
xchg
lret
rorl
in
shl
fucomi
repnz
int
hlt
in
orb
or
in
cs
das
into
ss
aam
fiaddl
roll
mov
in
fimuls
ret
hlt
iret
int
cmp
ljmp
mov
mov
fdivrp
fucomip
aaa
lock
out
idiv
cli
xor
fmul
repnz
ror
mov
add
fmull
leave
cs
jmp
sar
cmp
loopne
aam
roll
fnsetpm(287
out
loop
jmp
test
xor
repz
aam
stc
fcmovb
test
xor
ljmp
xchg
lock
shl
ret
jmp
in
shr
cmp
fadd
testl
jmp
xchg
out
fcmovnbe
aad
jmp
sti
icebp
cmp
jmp
out
xor
ret
lret
in
loop
shl
ss
ss
jmp
cmc
cmp
in
neg
imul
iret
fisttpll
in
aas
not
sarl
int
enter
into
cmp
jmp
ljmp
jmp
cmp
leave
jmp
rcl
aad
lds
movl
jmp
sub
xlat
lret
fld
cmc
std
sti
inc
out
inc
ds
jmp
out
xlat
lret
shl
icebp
xchg
cs
std
cmp
out
rcr
aas
out
int
iret
out
rolb
cli
addb
iret
sti
xor
xor
std
xor
loopne
shl
aam
test
ds
stc
icebp
popl
enter
fcomp
fucompp
loope
clc
test
div
test
jecxz
test
adcl
sti
ret
rcl
aaa
cmp
aad
test
cmp
sub
sub
nop
jmp
shl
iret
in
cld
fscale
repz
fadd
cmp
jecxz
call
xchg
enter
sarb
jmp
aam
testb
test
hlt
mov
test
std
lock
imul
jmp
jmp
out
fucom
leave
shl
ljmp
xlat
cmp
int3
faddp
lea
xor
aam
aam
cmp
pushl
rolb
clc
jecxz
in
in
icebp
jmp
loop
in
iret
cmp
sar
mul
sar
imul
in
fdivrl
add
jmp
and
xchg
mov
ret
clc
repz
icebp
fmulp
fstpt
repz
rcr
jmp
icebp
jmp
call
stc
in
xlat
lret
in
call
jecxz
aas
test
aad
xchg
jecxz
int
ret
in
jmp
call
int3
rol
out
addl
clc
out
mov
icebp
xor
into
test
add
in
cli
loope
idiv
sar
jmp
in
in
hlt
cmp
xor
sarl
ljmp
leave
xor
hlt
hlt
incl
shl
imull
imul
std
sti
ljmp
out
cmp
clc
test
fst
cld
test
in
loop
xchg
aas
aam
cmp
shr
sti
in
out
icebp
cmp
repz
std
addl
mov
fldl
loopne
call
cmp
shl
add
jmp
xlat
ljmp
jmp
xor
leave
call
aad
lock
out
xor
jecxz
in
xchg
jmp
leave
int3
div
cmp
into
rcl
shl
sbb
cmp
xchg
sar
cmp
out
leave
and
ljmp
in
cmp
into
cmp
in
aam
cld
or
in
fimull
rcl
shr
cmp
shll
hlt
cmp
repz
clc
les
cli
sub
aas
aaa
in
jecxz,pn
cmc
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
ds
leave
fstp
ror
cmp
mov
les
inc
movsb
imul
add
cmp
jmp
jecxz
icebp
sti
fxch
incb
cli
icebp
mov
out
aam
xor
repz
iret
aas
icebp
cmp
cmp
addb
jmp
shr
in
xor
repz
int3
cmp
loope
ret
fdivr
loope
mul
loopne
lret
loop
in
fsubp
in
leave
iret
ret
repz
fcmovbe
xlat
iret
out
repz
fdivrp
incl
leave
out
into
sub
in
int
aas
into
cli
cmp
icebp
inc
cld
rolb
loop
fucomp
jmp
xor
loopne
in
xor
fld
in
shl
aad
fsubr
in
lock
adc
sub
xor
fldl2e
fdivr
icebp
cld
cmc
lock
addl
xlat
rcr
clc
enter
in
jmp
mov
call
out
shlb
rcr
xlat
test
aas
out
sbb
addb
xchg
shr
xor
lock
cmp
iret
lret
loope
xlat
fucompp
aad
fucomp
or
shl
loop
cmc
hlt
stc
cmc
lock
sar
ret
orl
xchg
stc
loop
fcmovbe
fsub
sub
fucomi
sarl
cmp
in
xor
aad
jecxz
testb
cld
in
xchg
test
frstpm(287
aaa
ror
cmp
rcr
roll
std
lea
xor
jmp
cld
sarb
ds
out
out
fildl
lret
enter
fidivs
ss
in
jmp
sti
shr
push
sbb
cmp
cli
xlat
decb
lock
call
das
repnz
stc
sarb
leave
iret
lret
cmp
rcr
mul
loopne
test
icebp
mov
loope
repnz
xor
in
aaa
ror
aam
sar
hlt
test
cmp
jecxz
out
fists
xor
sti
cli
rcl
stc
divl
jecxz
out
aam
fsubrp
xchg
lret
fmulp
ret
out
lret
int
jmp
test
stc
or
in
shr
loope
jmp
aaa
out
xor
rcl
sarl
icebp
sti
loopne
rcr
shl
mov
ljmp
rcl
into
xor
xor
in
shll
jecxz
dec
loope
movl
leave
into
decb
int
hlt
repnz
fcmovnu
fdivrp
aam
enter
mov
xchg
sar
xchg
loop
xor
icebp
jmp
out
xor
hlt
cli
repnz
loopne
rol
repz
test
loop
std
mov
addb
xor
cld
aam
ss
addb
ror
fisttpl
into
xchg
inc
leave
shrb
fsubr
repz
out
loope
rcr
clc
ret
jmp
ljmp
out
test
cmp
out
aas
ffreep
fdivrl
cmc
roll
fsubr
fucomi
in
xlat
ljmp
push
fdiv
out
in
fdivr
sti
hlt
call
out
mov
enter
aam
int3
ror
out
div
lock
in
not
vaddsubpd
fninit
fmull
out
xchg
xor
int3
xlat
lret
xor
out
jmp
repz
fidivrs
jmp
in
into
into
jmp
out
stc
cmp
ljmp
ds
into
incl
ljmp
repnz
xor
stc
out
icebp
ds
ds
sub
jmp
mov
ss
sti
iret
loop
iret
fidivrs
cmp
hlt
loope
addb
sbb
lret
shr
fidivs
xor
out
call
lock
ds
jmp
fchs
ret
in
fsubp
in
call
ss
xor
cli
stc
adc
jecxz
iret
fildl
sti
fcmove
shl
xchg
cmc
icebp
stc
int3
aaa
shl
cmp
aas
ror
loopne
xchg
mov
out
std
loop
loopne
mov
shlb
neg
icebp
in
out
in
out
in
ljmp
cli
out
in
shl
das
shl
fpatan
icebp
into
aaa
shl
cmp
sarl
cmc
lock
aad
sbb
mov
fisttpl
test
sti
call
jmp
testl
loopne
cli
xchg
jecxz
int
jmp
leave
div
jmp
repz
out
in
jmp
int
ret
fcmovu
add
dec
movsb
jnp
mov
outsb
jg
cmpsb
add
jecxz
fstp
test
int
lret
into
repz
call
enter
clc
loope
fcmovbe
mov
enter
enter
popl
aaa
in
fmul
fsubr
rcr
ror
loope
cmp
sbb
in
call
mov
int
xlat
cli
neg
cmp
not
jecxz
mul
testl
in
xor
idiv
lock
fdiv
aas
inc
sar
lret
ret
xchg
jmp
loop
out
jecxz
shl
in
aaa
out
fdiv
lret
loop
ds
test
fadds
mov
call
xchg
shll
idiv
cmp
clc
repnz
test
and
out
lret
cmp
xchg
xchg
xchg
iret
xor
shr
xor
xlat
aad
in
loopne
cmp
cli
ret
jmp
test
mov
out
out
shr
shll
jecxz
into
iret
lret
into
leave
divb
stc
fstpt
testl
xchg
imull
lret
int3
int
cmp
cli
clc
repnz
frndint
aad
cmp
ret
out
stc
cld
sti
nop
test
cmp
repnz
fdivrp
cld
loopne
ds
xchg
fldl
fucomip
aad
in
xor
aaa
leave
stc
sti
rol
repz
loope
leave
fisttps
loope
ss
stc
cmp
jmp
aad
loope
add
loope
mul
mov
out
movl
leave
clc
xor
out
loopne
cmp
fdivp
test
xor
int3
cmp
jmp
cs
int
call
xor
faddl
mov
jecxz
fstp
ljmp
cli
fcmove
std
fcomip
aam
cmp
test
loopne
mov
fimuls
or
lock
lock
hlt
iret
aad
fld
fcmovbe
in
mov
cmp
xor
test
out
out
xor
sarb
rcl
adc
sarb
and
lret
cld
iret
cmc
int
jmp
in
cmp
into
cmp
aad
fucom
jmp
sbb
in
loop
lock
jecxz
ss
int3
fldz
xor
fsubr
clc
in
roll
test
out
loope
cmp
ret
cmc
sti
cmp
xor
cmp
hlt
mul
cld
shl
ret
incl
shl
adc
test
fdiv
int
lock
out
inc
xor
fiadds
xchg
fucom
jmp
ss
out
lret
loope
stc
cli
rcl
std
loop
mov
fisttpll
stc
hlt
out
aaa
shl
std
aad
stc
sar
sarb
test
std
enter
clc
leave
out
out
rol
cmp
aaa
fcom
jmp
rcr
out
rcr
cmp
iret
into
enter
in
out
rcl
loope
stc
sub
cmp
cli
int
cmp
repz
loop
in
cli
jecxz
fadds
out
in
aam
rcr
jecxz
repnz
cld
ljmp
cmc
fcmovnb
test
jmp
mov
or
shl
cs
icebp
out
push
hlt
cmp
shl
in
lret
clc
in
xchg
jmp
fldz
xor
icebp
loopne
ret
ffree
incb
ljmp
out
hlt
int3
enter
jmp
aad
cld
cmp
mov
lock
mov
cli
ljmp
int
shr
test
lret
out
and
cmc
jecxz
lock
cmc
lret
cmp
shl
int3
fidivrs
xchg
repnz
std
mov
test
mov
fidivrs
ret
jmp
lret
int3
fdiv
out
bnd
test
fst
jecxz
and
xor
enter
xor
out
rol
test
jmp
vpaddw
addl
lock
jmp
faddl
loope
test
mov
int
enter
sub
repz
aam
xor
cli
iret
ror
cmp
fldl
xchg
sti
mov
int
ror
cmp
in
sar
cmp
cmp
enter
out
loopne
rolb
stc
in
fdivs
cmpl
jmp
mov
fcomp
lea
adc
sar
mov
mov
xor
cmp
jmp
aas
enter
xlat
fcmovnu
mov
pop
cmpsb
rcrl
jl
add
xchg
dec
icebp
ss
call
rcl
sar
cmp
add
stc
fsub
les
int
loopne
xor
xor
sarl
aam
cmp
cmp
repz
cld
enter
sti
mov
in
leave
hlt
out
cs
int3
in
aad
aas
hlt
iret
aas
shl
aas
rcl
loope
lret
in
lret
int3
ljmp
fcom
shr
repz
in
stc
ret
loop
jecxz
loope
in
clc
sbb
fiaddl
lret
int3
int3
fcmovnb
lock
in
lret
fsubrp
shl
rol
test
std
mul
lret
mov
out
jmp
cmp
call
in
cmp
fucom
aam
hlt
test
icebp
ret
loop
xchg
mov
loop
jmp
xor
jmp
stc
std
sarl
sti
in
repz
add
std
xchg
fucom
xchg
shl
loope
sub
shl
out
repz
fcmovne
xlat
int3
test
fdivr
repz
loop
sti
mov
xchg
int3
not
cmp
test
iret
stc
cmc
rcr
in
lret
out
xchg
in
mov
ljmp
ror
cld
call
jecxz
add
sti
mov
out
lret
mov
jmp
xor
shr
clc
ds
idivb
xchg
in
loopne
aam
leave
mov
xchg
jmp
stc
into
ret
std
lret
rcl
repnz
roll
fcmovu
ret
iret
int
ret
in
rcr
neg
fcom
in
xor
mov
fdivr
jecxz
in
sti
orl
xor
clc
rcr
loope
shr
in
loop
rol
test
loop
in
fimull
ljmp
int3
div
fdiv
cmp
cmpl
rcr
incb
out
mov
aaa
fld
out
sti
stc
jmp
rcl
jecxz
out
lret
in
fmul
repnz
int3
xor
ss
leave
out
sbb
cmp
sbb
lret
pop
xchg
sub
aaa
xor
repz
cmp
loopne
ret
xchg
lret
mov
mov
sbb
out
neg
jmp
out
fcmovb
in
clc
mul
icebp
lock
roll
mov
lret
fmulp
test
aad
sti
cmp
ror
ret
roll
out
mov
loop
filds
enter
sar
cmp
leave
ror
jmp
faddl
fcmovnb
ret
ret
fistl
ljmp
ds
test
aam
jmp
out
std
xchg
test
shr
lds
cli
cli
out
shr
sarl
jmp
loopne
loopne
out
mov
in
int3
ret
ret
out
imul
cli
into
clc
cmp
repz
loop
aas
ret
mov
rolb
test
in
cmp
iret
xor
out
lock
aad
test
mov
in
cmc
loop
cld
sti
iret
leave
loopne
fmul
addb
mul
int
jmp
loop
roll
aaa
ss
cmp
fstpt
adc
fdivr
jmp
int3
lret
jecxz
jmp
das
xor
out
cmp
loop
loope
rol
enter
les
cld
shr
das
lret
cmp
stc
cmp
into
cmp
shr
fcmovnbe
sbb
clc
test
out
mov
into
int
xor
leave
xor
cld
lret
fcomi
rol
loope
call
jecxz
into
lock
jmp
xor
cmp
aaa
cmp
fidivrs
loope
and
neg
loope
cli
xchg
int
lret
iret
iret
hlt
xor
iret
lret
int
into
lret
test
iret
loope
ret
out
cmp
clc
xchg
test
hlt
ror
rol
out
lret
fldz
jecxz
repz
mov
lds
shl
in
aam
ret
out
in
out
xlat
fcmovu
into
cld
cmp
fnstsw
enter
cli
out
int3
sti
fsubrl
jmp
repz
clc
fucom
cmc
shl
lock
and
out
loope
jmp
call
repz
out
xlat
cld
aaa
cmp
loopne
movb
repnz
icebp
leave
fdiv
enter
shl
loope
xchg
fabs
sub
loope
int3
out
icebp
ret
xor
lds
test
decl
add
mov
add
add
rcl
rcl
aad
xchg
mov
in
fsubr
mov
mov
add
ljmp
and
fcomip
leave
and
fdivr
cli
orb
sub
xor
idiv
in
xlat
loopne
std
fdivrs
aam
mov
sti
int3
lret
mov
cmc
mov
in
sar
cld
out
sbb
xor
rol
neg
cmp
jmp
int3
xor
xor
mul
sti
loope
clc
int
stc
sti
stc
ljmp
decb
call
xor
rcl
loop
out
addl
int
loop
cld
dec
repnz
loop
fsubr
int
cmp
loop
cmp
rcr
mov
std
jecxz
lock
shrl
fld
int3
xor
aam
ljmp
repnz
sti
icebp
ret
out
xchg
leave
jecxz
test
cmp
ss
stc
ret
test
cli
lret
xchg
test
mov
sub
lock
out
cmp
ret
add
call
loop
xchg
int
ret
out
out
out
aad
cli
xlat
fdiv
rolb
rcr
in
mov
sti
fsub
ljmp
cli
xor
in
hlt
fcmovu
fneni(8087
out
ret
cmc
addb
in
mov
into
rcl
int3
xor
cmp
fcom
fdivrs
and
neg
fxch
out
int
out
addb
fnstsw
cmp
repz
add
aas
std
out
out
test
test
int
mov
out
out
ret
lret
stc
in
cmc
xor
lret
shr
rcr
faddp
jmp
in
addl
rol
cmp
fnstenv
cld
cmp
lock
fistpll
roll
mul
popl
jmp
call
xlat
and
incl
lret
mov
lret
repz
lret
hlt
jmp
iret
hlt
cmp
int
push
fmul
cmp
sti
jmp
out
int
loope
ret
int
in
int3
cs
call
xlat
sarl
aad
loope
in
out
in
int3
fxch
stc
jecxz
fidivl
iret
ljmp
repz
xchg
int3
loope
std
jmp
ljmp
out
sarb
aam
cli
cld
idiv
out
cmp
idiv
loope
stc
leave
loopne
test
repnz
cmp
fxch
xlat
cli
shl
fucomp
cld
cmc
aam
ljmp
fadd
ljmp
aad
aad
aad
repz
rol
shl
rcr
call
ret
fmulp
sub
das
cmp
aad
jecxz
sar
repz
ffree
in
xchg
iret
or
hlt
ret
out
cli
sti
lock
loopne
icebp
loop
add
jmp
add
cmp
loopne
mul
test
ss
aad
clc
hlt
fmul
ret
fcomi
loopne
ret
loop
enter
mov
xor
fstpt
cmp
loope
loope
test
lock
cld
leave
fmul
jmp
fdiv
enter
jmp
loopne
sarl
lock
cmp
cli
shl
repz
out
cld
hlt
frndint
roll
ror
fld
jmp
leave
leave
cli
cmp
fiadds
test
xchg
lret
iret
fucomp
cmc
shl
fdiv
cmp
fucomp
fcmove
icebp
cmp
iret
repz
shl
jmp
push
repnz
jecxz
out
loop
out
idivb
call
loopne
fcom
aas
fdecstp
test
lret
mov
xor
lret
xlat
enter
sti
in
loop
aad
test
mov
mov
or
icebp
repz
jecxz
int3
loop
hlt
lret
fldlg2
shr
incb
lret
idiv
addl
aas
repz
aam
cmp
jmp
in
rol
aad
xlat
leave
call
icebp
std
xor
out
cmp
fcmovnu
ss
cli
fldln2
mul
rol
ret
fxam
mov
lret
lret
mov
sub
cmp
call
sbb
fscale
mov
cld
cld
shl
jmp
cmp
add
fcmovnb
sbb
fdiv
mov
rcl
cli
das
fmul
rcl
ljmp
roll
test
mov
jmp
int
call
not
cmp
aam
cmp
ret
cmp
inc
in
cmp
test
mov
jmp
push
mov
sub
incl
mov
push
or
push
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
rol
sarb
aas
rcl
mov
jbe
mov
jl
jl
add
aad
ret
in
jecxz
sti
enter
mov
xor
clc
repnz
ljmp
repnz
ds
in
aam
enter
xchg
repz
aam
int
sub
shl
sti
loope
std
fcomip
repnz
loope
cld
jecxz
loope
loopne
lret
jmp
cli
aad
fcmovnu
in
ss
aam
fstp
loopne
addl
loopne
sub
lock
repz
ds
lock
loop
clc
mov
ds
fdivr
jmp
shr
rol
lock
int
adc
rcr
adc
or
in
sti
xchg
into
mov
lds
lret
cmp
test
ss
fucom
shl
cld
mov
jecxz
xchg
sub
cmp
xabort
fucomi
dec
fdecstp
cmpl
cli
sbb
fimuls
fcmovne
xor
cld
repz
cli
cmp
fadd
clc
cmp
div
in
hlt
in
int
movl
repnz
stc
jmp
and
ret
leave
repz
loop
out
in
xchg
xchg
xchg
lock
out
xor
cmp
aas
int3
call
adc
ljmp
mov
or
call
stc
out
jmp
fdivrp
testl
fcmovne
int3
rorb
ljmp
test
aaa
stc
xchg
cli
testl
ljmp
aam
cmp
clc
cmp
stc
fiaddl
mov
in
mov
std
lret
ljmp
out
int
neg
int3
faddl
jmp
rol
fiadds
cmc
loop
xlat
jmp
icebp
aaa
icebp
idivl
sarb
xchg
in
in
rol
sti
icebp
into
jecxz
in
in
aam
lret
imul
imul
int
jmp
loope
cli
sbb
leave
out
stc
out
sbb
iret
sub
xor
jmp
xlat
xlat
repnz
std
aad
into
loop,pt
out
cmp
jecxz
out
out
xchg
mov
shlb
cs
ljmp
aam
jecxz
loope
testl
les
cmp
cmp
shlb
stc
fcomp
ret
rolb
int
ljmp
ljmp
ljmp
cmp
xlat
xchg
test
out
fcmove
fucom
mov
int
xor
fdivrs
out
call
cli
cld
stc
int3
icebp
iret
icebp
xchg
icebp
lret
repnz
ljmp
fdiv
rol
in
lock
out
mov
fucom
repz
loope
jmp
mov
rcl
cmp
out
cli
xchg
shl
fstp
out
nop
shl
mov
fsubrp
aam
ss
fnstsw
cmp
rcr
loope
jmp
std
xchg
mov
out
fld
ret
sarl
lret
xlat
in
rcl
into
into
aas
sar
out
mov
hlt
fisttps
xchg
in
into
xlat
out
hlt
sti
cli
aas
cld
aaa
stc
repz
ds
rorl
nop
out
lret
repz
loop
xor
ret
xlat
hlt
std
neg
sbb
stc
loopne
enter
test
in
out
faddl
jmp
xor
or
shl
repz
sub
call
loopne
ljmp
out
div
jmp
aam
call
fdivr
cld
rcl
stc
out
lret
loope
adcb
in
std
icebp
cmp
fdivr
cmpl
fucom
cmp
out
fdivr
fimull
jmp
lret
cmp
loope
cmp
adc
sti
loope
orl
fsubr
test
xor
out
not
cmc
out
std
lock
icebp
cmp
loopne
mov
clc
cmc
hlt
leave
incb
ror
xor
aaa
add
out
fcmovu
xlat
sub
fndisi(8087
in
mov
mov
cmp
cld
cmp
lock
lock
clc
test
cli
jmp
xchg
enter
in
int
ret
shlb
ljmp
rolb
fcmovnu
call
xchg
aam
xor
cmp
leave
into
jmp
cmp
les
mov
fsub
mov
mov
sub
aad
rcl
test
int3
cmp
xchg
fsub
loope
fstp
test
xchg
jmp
in
cs
fdivs
out
stc
out
aad
roll
call
in
lea
xor
xor
xor
jmp
cmp
jmp
sar
fildl
test
into
int
mov
lret
enter
out
lret
fidivrs
clc
mov
orl
add
sbbl
push
neg
jmp
int
aad
ffree
fstp
stos
push
push
rorb
fstpl
int
jle
jge
jl
idiv
out
leave
fsubr
jmp
in
cli
icebp
jmp
call
call
cmc
in
vpsllw
aam
hlt
lret
loope
in
leave
int3
xchg
mov
loop
clc
ss
rcr
ss
cmc
test
ret
stc
call
test
shll
in
ss
out
sti
repz
ror
cld
fldl
mov
in
std
xchg
int3
lret
aaa
ret
cmp
out
in
adc
loop
ret
aad
aad
jmp
sti
ljmp
iret
lret
jmp
xor
jecxz
cld
repz
mov
sti
fimull
fdivp
xchg
aad
aad
out
cmp
cmp
cmp
cmc
xchg
mov
xlat
iret
fldl
ss
xor
xlat
jmp
aad
lock
stc
fcmovbe
xlat
ds
mov
mov
lret
mov
xor
in
repz
repz
sti
test
test
cmc
dec
ret
das
stc
xlat
fcom
cmc
int
cmc
out
ror
test
lock
test
ljmp
rcl
cmc
cli
cli
idivb
lret
cmp
in
and
icebp
cmc
in
les
in
aad
loop
in
aam
in
out
fildl
fmull
sbb
mov
out
aam
int3
into
repz
cmp
in
cmp
test
repz
test
cmp
sti
repz
out
aad
rcr
inc
stc
fcmovu
in
leave
int
iret
in
xchg
in
xor
out
call
shl
div
flds
sti
cli
mov
jecxz
loope
xor
xor
idiv
aam
leave
rol
out
clc
test
ret
in
mov
loope
call
iret
leave
into
loopne
xlat
das
iret
not
aaa
ss
clc
fcmovb
fildl
cld
jecxz
cli
fndisi(8087
hlt
in
int3
into
rol
lret
icebp
test
fidivl
sar
cli
adc
clc
lds
mov
aam
sub
xor
ljmp
repz
fstp
mov
int3
cli
ljmp
sub
cmp
out
into
xor
int
sar
sarb
fadd
aad
addb
sar
adc
clc
sti
enter
idiv
fst
cmc
repnz
iret
ds
leave
testb
in
orb
icebp
lock
repz
sti
sar
aam
loop
xchg
mov
loope
out
ror
call
xor
stc
aad
div
aas
cmp
ret
div
test
loope
test
and
int3
rol
stc
fucomp
hlt
fsubr
rol
icebp
in
cmc
loopne
fxtract
in
ljmp
std
in
ss
out
out
shl
repz
cmp
test
aad
fdivr
in
out
repz
cmc
cmp
sarb
cmp
rcr
xlat
test
leave
out
out
int3
loop
cs
icebp
fcmovu
xlat
clc
in
loop
neg
mov
mov
xchg
sarb
xor
out
sarb
lock
in
into
ds
in
in
mov
out
enter
lret
rol
in
jmp
cli
fsubrp
ss
xor
cli
idiv
cld
sti
ljmp
ljmp
hlt
fcmovne
in
enter
and
clc
testb
fcmove
jecxz
cli
nop
loope
in
in
div
int
iret
icebp
fdivr
or
out
push
loopne
faddl
or
fimuls
xor
aad
enter
hlt
rcr
xchg
jecxz
div
mov
in
fxch
int3
mov
out
fdivrs
neg
ss
aas
fscale
roll
out
sti
mov
int
in
cs
fxch
loop
repz
rolb
fstp
movl
jmp
repz
xor
cmp
xor
cmp
iret
out
jecxz
iret
sbb
or
clc
call
xlat
repz
stc
out
jmp
stc
icebp
fidivrs
shl
add
jecxz
mov
xchg
test
das
loopne
jecxz
cli
out
fst
shl
repnz
test
jmp
loopne
int3
int3
in
out
int
cmp
cmp
xlat
sti
hlt
decl
rolb
in
enter
jmp
cmp
aam
ret
leave
test
out
mov
clc
decl
shl
xor
in
fcmove
test
cld
jecxz
add
mov
std
mov
fimull
xor
leave
lret
in
cmp
icebp
fdivrp
icebp
mov
or
mov
addl
xor
xorl
movl
sbbl
jmp
rcl
int3
fstp
arpl
test
lods
lret
jl
add
sti
jmp
jmp
in
nop
loop
rol
xor
lret
iret
imul
ljmp
aam
std
mov
add
cli
call
jecxz
lret
fldln2
stc
rcl
clc
out
clc
cmp
xor
ret
ljmp
lock
rcl
aaa
int
cmc
in
div
jmp
rolb
fdivrs
test
test
loopne
mov
xchg
xor
out
iret
ljmp
faddl
call
cld
xchg
loopne
icebp
lock
xor
xor
leave
xor
out
lret
decl
loope
fcoml
aaa
loopne
not
sar
fucomi
std
hlt
lock
test
testl
and
int3
sti
repnz
cmp
ljmp
std
test
xchg
cmc
jmp
shr
ljmp
clc
aam
hlt
loopne
jmp
aas
fdivr
test
aad
mov
or
int3
iret
aad
shlb
out
out
stc
aad
out
stc
cmp
aam
cmp
hlt
addb
out
enter
cmc
loop
clc
xor
cmc
cmp
jmp
clc
cmc
in
test
call
aad
aam
fsubr
sbb
in
or
xor
xor
neg
mul
ds
out
rcl
shl
ffreep
test
mov
into
jecxz
in
ss
aaa
fmul
aam
out
shl
fiaddl
icebp
fcmovu
into
jmp
out
shlb
leave
xor
fxch
clc
iret
iret
in
hlt
aas
ds
aas
testl
xchg
test
loope
enter
fcmove
sti
jmp
mul
stc
rol
sarb
fnsetpm(287
cli
rorl
jmp
ljmp
incl
jecxz
fcmove
les
jecxz
lret
jecxz
xor
sar
cmp
jecxz
loopne
lds
mov
in
repz
lock
std
into
aas
sar
stc
clc
fndisi(8087
in
int3
in
icebp
loop
xchg
into
out
into
jmp
icebp
in
xor
icebp
cmp
out
hlt
iret
iret
div
sbb
les
test
xchg
call
hlt
fnstcw
iret
repnz
aam
shl
sti
loope
les
jecxz
jmp
das
in
hlt
in
lret
cmp
xchg
aas
fcomp
loope
testl
idivl
fdivr
call
fidivl
int
cmp
fstp
loop
fimull
shl
aad
cmc
fincstp
xlat
aad
jmp
in
int3
xchg
hlt
hlt
mov
enter
sti
lret
iret
xchg
jmp
lret
cld
cmp
stc
in
out
out
cmp
addl
cmp
cmc
jmp
repnz
jecxz
fdivr
flds
xchg
sub
out
sti
xor
sub
out
fsubrp
into
ret
ret
ljmp
lret
loopne
in
das
aad
aam
lock
ss
out
ror
fdivr
ret
lret
int
fcmovnu
xchg
fucomip
shll
jmp
cli
shll
in
not
cmp
rolb
ljmp
cmc
in
jmp
stc
vpmaxsw
fstpt
ds
lock
cmp
in
lock
xlat
ljmp
cli
cmc
enter
xlat
fld
mov
mov
loop
ret
out
fidivrl
fmul
xor
loopne
cmp
fptan
std
rcr
mov
loope
into
mov
mov
ljmp
jmp
aas
cmp
mov
stc
int
sbb
jecxz
xlat
xor
ljmp
hlt
sbb
icebp
xchg
jecxz
ljmp
xchg
fdiv
xor
int
in
iret
sti
fsub
rol
sbb
loop
fsub
in
mov
clc
ret
clc
ss
hlt
shl
roll
leave
mov
fldl
iret
ljmp
repz
int3
sti
shr
incl
fiadds
vpsraw
and
orl
cmp
out
lock
fcomip
cld
jecxz
test
repz
aad
loop
out
test
iret
xchg
aaa
sub
int3
cmp
cmp
cmp
loopne
loopne
hlt
in
neg
mov
mov
nop
lret
lock
shrb
clc
out
in
lret
out
sar
or
test
out
out
sar
icebp
shll
ret
xor
divl
cli
aam
cmp
cmp
mov
ret
test
in
repz
test
ffreep
jmp
hlt
xor
aad
fcmovnb
inc
lock
xchg
fs
add
push
dec
add
movl
jmp
xlat
enter
enter
xchg
rol
cmp
stc
lret
or
jl
cmp
flds
test
in
in
xor
in
cmp
into
out
fdivrp
std
iret
ret
and
mov
cli
loop
stc
stc
std
lock
fst
stc
aaa
repnz
add
lock
aam
int
fstp
mov
ljmp
lret
cli
fnop
loope
addb
mov
out
dec
in
out
aam
std
repnz
call
repnz
orb
aad
loope,pn
lock
lret
in
into
fdivp
out
in
in
rcr
sar
fsub
aam
call
faddl
cmp
in
jmp
ss
int3
std
loopne
stc
aam
lds
repz
cmc
dec
xor
xor
jmp
jmp
iret
fsub
shl
stc
out
stc
in
loop
mov
hlt
cmp
cmc
cmp
loop
iret
rcr
jecxz
rorb
in
int
xor
xor
lret
fnstsw
sti
sti
ljmp
cli
test
fsub
lea
xchg
test
shrb
sar
shl
iret
ss
fsubr
sarb
ret
fdivr
ret
mov
lret
rcl
icebp
repz
loop
clc
cli
ror
aad
not
icebp
or
fsub
jmp
loopne
cli
icebp
sar
aad
test
fdiv
ljmp
xor
dec
lret
jmp
rcl
in
xor
cmp
stc
cmp
loope
rcl
enter
jecxz
fcom
out
test
lock
into
jmp
idivl
loope
clc
aaa
in
xchg
loopne
hlt
lret
cmp
fsub
xor
imul
xor
call
out
loopne
shl
out
jmp
fucomip
mov
repz
enter
out
sti
cmp
lock
incl
fadds
in
xor
out
lret
repz
lret
ret
into
sti
loopne
loopne
lret
icebp
jmp
out
iret
xchg
shrb
in
xor
icebp
aaa
cmp
sti
icebp
clc
cmc
in
loope
sti
cmpl
cli
out
enter
das
in
jecxz
ss
cmp
fdivrp
int
stc
std
cmc
fdiv
xchg
in
stc
movb
ret
xor
cli
das
stc
ss
fcom
stc
jecxz
xlat
xchg
ror
stc
in
ret
cli
in
call
fsubr
in
in
int
xlat
call
cli
loope
ds
fadd
int
fcomip
mov
iret
xchg
xlat
sub
fcomi
out
xor
fadds
cli
test
sti
in
mov
test
sti
in
lret
cmp
cmp
jmp
fcmovnbe
int
out
xchg
in
jmp
rol
std
lret
clc
fdivs
fldl
mov
xchg
call
fld
imul
cmp
in
lret
cmp
addl
xchg
loope
out
fdivs
repz
cmp
cmp
ror
loope
sar
aas
loop
ds
movb
icebp
xchg
ret
fnstenv
enter
fcmovnu
aas
cli
cmp
loopne
aad
stc
mov
fstp
fsubr
fistl
das
jmp
sub
stc
cmp
clc
cld
out
repnz
sti
jmp
lock
icebp
enter
shl
out
xor
sarb
cmp
fdiv
cli
leave
mov
jmp
jmp
jecxz
out
xor
fst
aam
fstp
xchg
sbb
in
iret
fldl
shlb
neg
fucomp
cli
lret
std
repz
mov
in
in
mov
in
xchg
lret
out
sub
out
clc
in
xor
out
clc
test
sar
call
ror
mov
int
repnz
out
icebp
aam
icebp
fsub
loope
jecxz
cld
rol
loope
in
mov
mov
in
shl
aaa
cmc
fcmovne
ljmp
cld
in
leave
xchg
in
out
fmulp
cmc
iret
sti
jmp
testl
ljmp
or
out
sub
ret
fcomi
cli
sar
fcmovne
std
fucomi
cli
test
cli
mov
shl
enter
xor
xor
rol
clc
repz
sti
aas
in
cmp
fdiv
out
repnz
incl
mov
test
ret
aad
xlat
repnz
in
cmp
xor
cli
fadds
in
in
loopne
out
lret
jmp
xor
cmp
in
clc
rcr
leave
test
in
fdiv
out
cli
repz
in
xchg
out
shr
xor
stc
lock
aas
movl
jne
mov
movl
mov
movl
mov
mov
movl
jmp
aad
leave
fcmovne
fcmovbe
test
jmp
les
jl
add
ror
add
fsubp
flds
mov
jmp
enter
sti
repnz
fcomp
fxch
repz
mov
lret
mov
int
int
ljmp
shrb
xor
fbstp
out
out
lock
aad
fmuls
fsubrp
out
lret
adc
loopne
in
int
icebp
incl
sbb
shl
lds
mov
in
ret
ret
lock
aaa
cmp
fpatan
aas
aas
stc
icebp
mov
in
fcom
int
pop
les
out
aad
iret
aas
xorb
cmp
out
jecxz
fdiv
movl
into
in
aaa
into
stc
lret
aam
repz
ds
int
out
faddl
icebp
xor
ss
std
xor
aas
fsubp
cld
shl
cmp
adc
loopne
rcl
xor
aam
shr
cmp
xlat
stc
test
sbb
mov
icebp
fdivr
in
das
cmp
repz
xor
rcr
lock
cld
aas
out
cmp
jecxz
test
in
rolb
shl
jmp
cmpl
fnop
test
ret
hlt
mov
out
in
int
xchg
das
xlat
hlt
in
repz
xor
hlt
cld
cli
roll
shl
fisttpl
into
out
aad
leave
repz
sti
cmp
cmc
cld
sti
ror
cld
rolb
cld
sti
test
hlt
iret
ret
xor
aam
shrl
jmp
int3
call
in
loop
clc
mov
out
aad
leave
leave
sti
ror
cli
icebp
cld
out
xlat
cli
and
iret
cmp
cmc
enter
loopne
cld
mov
in
das
hlt
in
lret
xor
into
repnz
rcr
int3
out
rol
in
fcompp
iret
fsubr
cmc
xchg
in
enter
lret
jecxz
cmp
test
enter
ljmp
mov
ljmp
lret
jmp
adc
call
ljmp
cld
mov
in
enter
call
lock
sar
in
cmp
std
xchg
adcb
shll
stc
lock
out
sarl
out
in
fdivr
rol
mov
or
fcmovbe
test
cmp
std
int3
aas
cli
cmp
adc
fldpi
ret
sar
loopne
mov
test
std
mov
mul
xor
xor
int
in
jecxz
cmp
fmul
loopne
clc
call
in
xchg
sub
jecxz
ror
into
rcr
cmc
sarl
cmp
idiv
fdivr
in
loope
lret
call
lea
lds
mul
cmp
xlat
xor
and
repz
clc
ds
int
xchg
xchg
lock
iret
lret
xor
in
stc
leave
aad
out
inc
loopne
rol
ret
ljmp
loopne
cld
int3
lret
loop
fcmovu
in
dec
std
fadd
add
stc
faddl
loopne
enter
ljmp
cmp
dec
cmp
cmpl
lock
cmp
ljmp
aam
cs
cmp
cmp
fiaddl
call
iret
in
xor
ljmp
loop
aam
xchg
jmp
std
nop
sbb
repnz
call
ss
aas
shlb
shl
mov
test
out
lret
ljmp
dec
loopne
out
clc
repnz
loopne
clc
mov
fimull
xor
out
shl
fdivr
leave
call
ror
fcmovu
xlat
vpsubq
lret
add
loopne
int
jmp
cmp
cmp
idiv
xlat
out
lock
in
cld
out
int3
jecxz
xchg
incb
clc
iret
les
fidivrl
addb
clc
in
fldl
repnz
in
xor
loop
out
clc
fsub
sarl
loop
test
in
stc
in
orb
cmp
imul
call
std
lret
cmp
sar
std
xlat
cmpl
out
loope
out
out
sbb
out
xor
int
neg
fxch
stc
xor
ret
cmpl
call
in
loop
iret
hlt
xchg
out
call
cmp
call
cmp
fsubr
enter
out
enter
jecxz
in
repz
in
xlat
xlat
in
clc
adc
loopne
in
cld
jecxz
fsubr
mov
hlt
loopne
ret
repz
xor
fcmovbe
cmp
and
test
lret
fsubr
loope
ret
out
into
int3
xlat
lret
out
aaa
fsubr
cmp
jmp
movl
cmp
jne
or
andl
or
mov
subl
jmp
int3
ds
rcl
iret
or
ds
jl
loope
in
cmpl
loop
out
fstp
out
in
lret
aam
loop
clc
clc
sti
in
cmp
in
cli
cmc
rcl
addl
stc
shl
out
xchg
mov
sar
shl
lret
out
std
std
sbb
shl
jmp
fcmove
mul
into
iret
xchg
out
loopne
jmp
test
hlt
cmc
std
fucom
jecxz
fdivrp
call
ljmp
jmp
ljmp
leave
ljmp
lock
jmp
mov
rcl
call
xor
xor
repnz
icebp
aam
out
jecxz
cld
aam
in
in
jmp
lret
lock
cmpl
out
fidivrs
jmp
flds
mov
enter
sti
into
aaa
enter
fidivrl
icebp
out
cmp
jmp
leave
out
out
icebp
xlat
in
ror
into
iret
fidivl
hlt
std
jmp
testl
aam
test
fsub
fdivrp
mov
rol
lock
in
aad
fdiv
cmp
in
hlt
test
hlt
std
ljmp
ror
jecxz
out
call
icebp
fcmove
lock
std
aam
enter
in
stc
loop
repz
repz
fucomp
fdivrs
cld
flds
mov
xchg
call
xor
neg
sti
jmp
leave
lret
fcmovne
std
repnz
in
nop
lret
repnz
loop
fcomi
xlat
jmp
ds
aas
repnz
ret
cmp
xchg
rolb
loopne
test
rol
aaa
aam
cld
out
lret
loope
in
repz
repz
in
xchg
in
loop
out
out
xor
fnstsw
lock
loope
cmp
aad
loop
xchg
out
fiaddl
cmc
das
fadd
stc
fcmove
cli
cmp
out
rcl
xlat
rol
jmp
mov
sti
cmp
in
in
leave
hlt
cmp
out
icebp
aaa
ljmp
mov
out
fmuls
out
sub
ss
call
xlat
clc
aam
repz
in
in
out
call
xor
lock
sarl
repz
lock
enter
cmp
in
jecxz
jmp
xchg
lret
lock
loop
cli
xor
call
cld
testl
out
lret
lret
call
lock
cmp
fst
cmp
aaa
loopne
hlt
xchg
leave
fiaddl
xchg
cmc
xchg
out
aam
xor
cmp
xor
test
repnz
mov
in
fdivp
lret
sar
hlt
sti
aam
fcmove
repnz
sarb
testl
into
nop
iret
into
test
cmc
cmc
xlat
repz
idivl
cld
jecxz
sar
fldl
xlat
in
decl
jmp
jmp
xor
fcmovne
in
into
in
fcmovne
jmp
out
enter
rcl
leave
in
in
lret
in
incl
ret
fdiv
in
leave
std
mov
xchg
hlt
into
hlt
cmp
in
rcr
ljmp
hlt
cmp
mov
out
in
mov
iret
in
int3
idivl
lock
out
xlat
ret
out
in
lret
repz
icebp
hlt
xlat
clc
int3
aam
ror
in
shl
int
xor
test
mov
xor
xchg
fisttps
enter
ljmp
idiv
cmp
fdivrs
xlat
mov
jecxz
vpsubw
leave
xor
std
cmp
jmp
in
stc
les
mov
iret
nop
xor
iret
cmp
rol
fldpi
cmp
cld
clc
aad
fdiv
fucomi
ret
cld
out
fimull
loope
in
xor
cli
xor
clc
enter
fdiv
into
aas
leave
sarb
out
repz
in
mov
stc
int
cmp
ror
clc
int
xlat
lret
cmp
out
aam
test
loope
xchg
sub
cmp
div
ss
call
fdivr
fnstsw
in
fimull
xor
lret
jecxz
icebp
cmp
fcom
lock
int3
cli
in
rol
in
aam
mul
loopne
iret
mov
into
in
cmp
rol
rolb
hlt
in
loope
loopne
lret
jmp
shll
xor
into
jecxz
xchg
in
loop
xor
xor
icebp
jmp
cmp
jecxz
fcmovb
test
xchg
clc
cld
clc
in
icebp
loopne
in
in
rcl
lock
out
sub
sbbl
push
xor
mov
incl
add
orl
push
call
movl
incl
cmpl
jb
movl
jmp
cmp
movl
jmp
ror
int
lret
xchg
or
xchg
sub
add
roll
cmc
clc
idiv
hlt
xchg
out
mov
lock
test
aaa
xlat
ror
aam
cmp
std
rcl
ret
xchg
repz
xlat
fsubr
in
lock
loop
enter
iret
aas
not
ret
out
fsincos
std
orb
xor
loopne
xor
ret
call
icebp
fst
repz
enter
lds
call
ljmp
lret
aam
cmc
fnstsw
cmc
rcl
call
in
cli
sti
lret
std
shl
das
cmc
xor
out
push
xlat
sar
ljmp
mov
fsubr
in
lock
nop
ret
aaa
aad
vpminsw
xlat
loope
sti
loop
and
rol
in
hlt
ds
mov
fcmove
hlt
aad
jmp
stc
aaa
fidivrs
cmc
cmp
aas
repz
in
out
loope
xchg
jmp
mov
xor
neg
hlt
int3
lret
cmp
into
loopne
test
lret
xor
enter
or
ljmp
repz
aas
iret
repz
cmc
rol
mov
out
lea
loopne
les
in
enter
xor
aam
int3
clc
rcr
test
incl
iret
mov
loopne
xchg
int
shl
jmp
shl
aaa
sti
sti
aas
int3
rcl
cli
fdivr
mov
in
fadd
fcmovnb
loope
xchg
mov
out
into
repz
in
aad
stc
call
aad
and
fimull
sti
or
shr
jecxz
enter
div
fsubrp
loope
lock
ljmp
repz
ror
out
cmc
in
sar
cmp
not
ds
fisttpl
std
orl
test
std
push
icebp
add
loopne
fndisi(8087
mov
rcll
xlat
int3
loop
rcl
cmp
aam
cmp
aad
jecxz
mov
leave
mov
int
ljmp
ret
jmp
out
xor
jmp
rolb
in
loop
in
jmp
enter
loope
cmc
jmp
cmp
into
fidivrl
cli
loop
jmp
jecxz
stc
mov
and
xor
fcmovnu
out
cli
aas
cmp
jmp
loop
shl
cmp
out
out
addl
rcl
cld
repnz
loope
test
loop
mov
sub
shl
int3
aad
lret
jecxz
aam
xchg
ffree
clc
loopne
lret
pause
mov
add
into
xor
fcomp
clc
rcl
cmp
jmp
xchg
in
lock
vcmppd
xor
out
fdiv
lret
cmp
fsubr
int
mov
mov
ret
xor
out
call
shr
fcomip
filds
clc
cli
std
jecxz
xchg
subb
mul
std
jmp
and
sarb
neg
cld
test
out
adc
fiaddl
clc
xor
rcl
div
cmc
hlt
in
lret
idiv
fdivr
ds
test
test
fmul
xor
repz
fmul
ds
cli
aam
addb
call
imul
out
out
in
jmp
stc
leave
leave
fnstsw
jecxz
cmp
jecxz
lock
enter
out
mov
in
lock
jmp
call
ljmp
fildl
std
sbb
ret
int
jmp
cld
aaa
int
jecxz
ror
repnz
repnz
call
in
orb
xlat
ljmp
icebp
rol
jecxz
cmp
enter
std
lret
fucomp
out
in
vcvtpd2dq
loop
repnz
shl
ds
fdivrp
clc
mov
jmp
xlat
fucomi
lret
jecxz
cmc
ret
enter
in
int3
rcr
iret
int
cmp
rorb
sub
xchg
repnz
repnz
ss
in
out
cmp
icebp
cmp
aam
leave
cmc
in
fiadds
leave
shl
in
out
cld
into
cmp
fdivp
xlat
sar
jecxz
mov
fcmove
xchg
cli
roll
int
out
fucomi
cmp
fdivrp
jecxz
sarl
testb
test
int3
loopne
cmp
out
cmp
cmp
movb
into
lock
shl
iret
jmp
sar
ds
xchg
and
xor
enter
jmp
test
clc
aam
bnd
out
rcr
lock
xchg
in
cs
leave
hlt
jmp
test
add
xor
or
adc
movl
orl
mov
sbbl
mov
xorl
jmp
rcl
lret
rcl
cmp
mov
test
and
jge
jl
xor
cmp
aas
add
jmp
xchg
test
xchg
out
vpaddsw
out
fnstsw
fidivrl
std
aas
std
fsubp
adc
hlt
call
enter
loop
jecxz
hlt
int3
cmp
into
ljmp
cmc
out
fdivp
cmp
xlat
in
out
leave
enter
in
shl
clc
lock
cmp
xlat
test
adc
fld
and
mov
sbb
out
shl
int
shl
lret
xlat
sbb
icebp
div
out
out
sti
jmp
call
out
fmul
call
sti
cli
sti
sti
test
fisttpll
mov
adc
in
sti
lock
fnstsw
sti
ret
out
int3
mov
test
sbb
das
lret
int
stc
in
cld
icebp
push
std
aad
jecxz
xchg
cmc
movl
rcl
ret
clc
call
lock
out
jecxz
enter
xlat
loop
xchg
cmc
xchg
mul
fldlg2
leave
div
cmp
cmpl
cmpb
jmp
std
shl
aam
aaa
les
aas
xor
call
icebp
fadd
xchg
std
out
enter
mov
out
icebp
xor
sti
int
int3
xorb
shr
in
addb
aas
lret
hlt
in
jmp
cmp
ljmp
std
hlt
loop
and
out
rcl
xor
into
in
jmp
cmp
call
addb
hlt
jmp
jmp
cmp
int3
idiv
into
imul
std
aas
int3
ds
call
cmc
call
test
repnz
aad
in
cmp
aad
loopne
clc
fsubr
decb
mov
std
loope
std
shl
leave
into
jmp
cmp
enter
aam
repz
adc
repnz
faddl
lea
rol
shl
lock
in
into
fdiv
stc
fmul
loop
sarb
fmuls
iret
in
out
xlat
lock
shll
enter
cmp
cmp
jmp
jecxz
loopne
rolb
test
cmp
jmp
cmp
repz
ret
mov
loope
repz
jmp
ret
out
xor
ljmp
aas
jecxz
mov
and
xchg
ds
enter
ror
cld
shl
std
xlat
shl
xlat
aam
test
fcmovu
call
out
aad
ds
aad
into
cmp
sarl
xorl
rol
test
clc
out
fcmovnu
ljmp
cmp
shl
in
xor
fidivrs
fsin
out
adc
loope
in
loope
ror
mov
xor
into
lret
into
repnz
fmul
out
idivl
cmp
jmp
test
mov
test
hlt
hlt
into
cmc
in
fistpll
repnz
test
jmp
int
lret
fcomip
sub
jmp
repnz
in
divb
lock
xchg
loopne
aad
mov
lret
in
mov
in
jmp
ss
xor
aas
fcmovnu
sbb
aad
lret
fsub
mov
loope
push
jecxz,pn
stc
shl
repnz
clc
loopne
repz
xchg
loope
repz
loopne
mov
xor
shl
in
jmp
test
aas
cmp
jmp
in
fdivrp
xchg
out
repz
out
fcmovnb
fdecstp
rcl
fidivrs
test
loop
mov
mov
loope
loope
jecxz
in
shll
aaa
int
faddp
test
mul
shl
loope
fcmovne
std
jmp
shll
sti
xlat
ror
aaa
xor
xor
jecxz
loopne
shl
enter
cld
mov
mov
sar
iret
cmp
aas
aad
loopne
jmp
cld
int
test
jmp
orl
xor
loope
cmp
fadds
addl
lock
in
test
loope
int
aas
cmc
fiadds
test
mov
xor
rol
repz
stc
and
lock
ds
stc
out
cli
stc
fdiv
out
adc
hlt
enter
ljmp
loope
cmc
sub
enter
adc
cmc
test
aaa
xor
leave
cmc
clc
int3
hlt
cmc
rcl
cmp
fsubrp
repz
idiv
xchg
loop
ror
in
shll
ror
rcl
fcmovbe
cmp
rcr
out
int
repnz
loope
mov
fdivp
icebp
aam
rol
mov
incl
jmp
int
iret
rcl
fsts
fs
xchg
rcrb
std
les
jl
add
out
div
fsubp
xlat
mul
cmp
addb
out
rorb
shr
in
cmc
shl
jmp
and
fadd
loopne
repnz
in
in
cmc
rcl
fstpt
fdiv
cli
hlt
out
xchg
fmul
and
ret
ret
icebp
xor
cmp
call
ret
fmulp
ljmp
incl
sar
jmp
jmp
cli
ds
leave
std
xchg
into
xor
out
vpaddw
int
aam
testb
and
idiv
loop
out
iret
xchg
into
mov
xor
xlat
cmp
aad
cld
dec
sti
out
into
xchg
leave
out
in
jmp
sbb
enter
in
lret
repz
repz
cmp
rcr
loopne
mov
idiv
call
mov
cmp
ss
cli
stc
lret
rcl
cmc
rolb
lds
lret
xchg
jmp
int
xor
fdivrs
sti
repz
sbb
mov
in
shl
ljmp
lret
hlt
div
in
idiv
int3
loop
into
stc
jmp
cli
fmulp
fcos
jmp
leave
into
out
aad
repnz
out
cmp
hlt
leave
xchg
lret
sti
call
test
mov
out
jmp
cmc
out
cld
cmp
cli
int
rol
ds
ljmp
in
into
rcr
rol
cmp
cmp
fxch
hlt
mov
or
shl
int
repnz
in
in
fidivl
enter
sar
cmc
clc
aas
sti
test
jmp
lret
mov
xchg
out
in
repz
xor
cli
cmp
adc
stc
loope
xchg
jmp
iret
shl
in
enter
cmp
into
lock
fnstcw
fsubr
idiv
and
mov
cli
mov
mov
jmp
jecxz
repnz
vmovq
out
fcomi
hlt
mul
cmp
std
sbb
mov
call
enter
sub
call
repnz
rol
neg
loop
shl
lret
int
mov
hlt
cmp
in
aad
cld
enter
out
loope
hlt
jecxz
cmc
call
std
ljmp
rcr
fcom
vpand
aam
icebp
div
aad
aam
fucomip
fadds
enter
loope
xor
xor
idivl
ljmp
mov
jmp
iret
sti
call
shl
stc
sub
ror
ljmp
in
stc
ljmp
mov
ret
fucomp
shl
cmc
in
repz
test
testl
lret
loope
cs
xor
fyl2xp1
lret
fcmovne
loope
aam
xor
jmp
ljmp
repz
out
xor
ds
repnz
shl
cli
aas
cld
iret
in
in
mov
in
xor
ss
fdivl
xlat
cmp
in
not
fdivrp
icebp
xchg
incb
out
jmp
out
icebp
loop
icebp
stc
shl
fchs
cmp
rcr
loopne
cld
lret
nop
icebp
xor
rcl
out
shl
rcl
out
incl
fimuls
mov
repz
loop
sarb
aam
fneni(8087
jecxz
aas
idiv
incb
out
mov
mov
in
shrl
ret
sar
xlat
ror
lock
loopne
std
out
cli
test
les
rcr
loop
int3
xor
fucomi
lock
iret
sub
hlt
aam
ds
xchg
jmp
sub
lock
cli
lret
aaa
out
ljmp
in
sti
ds
jmp
test
out
mov
xchg
rcl
xor
fcmovu
jmp
loopne
loopne
cmp
shl
jmp
and
rol
icebp
xor
int
enter
repz
aam
ljmp
test
jmp
int3
out
lret
mul
xor
sarl
into
cmp
aas
fcmovnb
aas
test
ljmp
fmulp
jecxz
icebp
bnd
out
fdivrs
cmc
idiv
loopne
icebp
cmp
fimuls
out
out
repz
out
out
out
into
icebp
cmpl
fsubp
aad
mov
orl
rcl
out
std
int3
into
enter
loopne
in
out
jmp
out
xchg
out
jmp
xlat
iret
out
std
xor
lret
cmc
cli
sar
out
lock
call
enter
into
cld
shl
in
ror
xlat
les
hlt
jmp
ds
aad
aad
aad
movb
lds
jle
jge
jl
rcl
rol
aam
cmp
hlt
lock
or
les
das
fisubrs
icebp
out
shll
out
aas
fstp
cmp
sti
into
cld
fiadds
ljmp
out
fdivp
out
icebp
cmp
enter
aad
shl
test
hlt
ffreep
cmp
xchg
mov
int3
call
in
call
repz
hlt
cmp
lret
lock
stc
call
lret
in
int3
loop
shr
out
loop
fdivl
lret
cmc
loop
into
div
hlt
hlt
fsin
fsubr
into
loop
shr
vpminsw
call
aam
repz
ljmp
and
aad
div
jecxz
iret
in
cmp
fdiv
lret
push
cli
adc
mov
mov
mov
orl
out
leave
icebp
fcmove
cld
loope
std
out
std
fcmovnbe
call
jecxz
in
in
test
mov
xor
stc
imul
ljmp
ret
and
incb
cli
int3
lea
out
aam
xor
aad
ss
fbstp
std
out
cmc
or
shl
jecxz
test
mov
sub
call
in
stc
fst
cmp
cmp
aam
lock
into
in
sti
aad
jmp
in
xchg
out
xlat
leave
aaa
les
fpatan
cmp
sar
shl
shl
xchg
cli
mov
out
divb
clc
aad
shr
cmc
faddp
ret
rcl
les
out
mov
not
jmp
fxch
stc
ss
iret
shl
rolb
xchg
ljmp
mov
iret
enter
cs
jmp
cmp
aad
clc
fmuls
mov
das
jecxz
jecxz
sti
xlat
cli
rcr
cmp
fdiv
xabort
aas
cli
neg
xchg
orl
repnz
cmp
aaa
aas
int
cmp
repz
mul
mov
jmp
addb
fucomp
call
int3
lret
xchg
in
aam
in
ljmp
xchg
xchg
bnd
aaa
rol
std
test
icebp
xor
rcr
in
enter
lock
xchg
xchg
call
aam
fcom
in
rcr
ljmp
jmp
std
loop
mov
aas
into
aad
cmc
aaa
cmp
repz
xlat
test
lock
fcmovnbe
mov
fmulp
loop
or
ljmp
cmc
out
fidivrl
std
in
repz
in
sarl
call
xorl
jecxz
jmp
aad
cmp
sti
repnz
enter
fcomip
lret
xchg
out
enter
leave
in
enter
xor
fchs
in
into
mov
call
xchg
sar
out
mov
in
xlat
aam
int
lock
jmp
cld
shl
movl
cld
shr
fdivrs
std
xor
fucomi
fst
out
loop
rol
jecxz,pt
addl
int3
repz
iret
in
cmp
ret
jmp
xor
fcmovnu
repnz
not
out
jecxz
xchg
mov
jecxz
out
icebp
call
fidivrs
roll
xlat
sbb
enter
leave
aad
xor
cmp
jecxz
call
jecxz
repnz
fmuls
fildl
xor
ret
xor
ror
cli
aad
roll
fdivr
sti
dec
int
out
out
mov
ror
lds
ss
int
ret
cmp
idiv
xabort
call
adcb
into
cmp
fucomip
jecxz
aam
shl
aam
ljmp
xchg
xchg
repz
jmp
repz
std
out
aaa
out
sarb
out
cmp
fisttpl
rol
xchg
icebp
mov
shr
repnz
icebp
stc
loopne
loopne
fucom
ret
adc
fcomi
in
xchg
sub
lock
xlat
in
xor
xor
ds
sarb
call
xlat
call
shl
jecxz
iret
leave
cmp
jmp
cmp
out
out
shl
fdivr
idivb
roll
fiadds
xchg
into
ret
in
ss
xabort
repz
rolb
sti
out
testl
fsubr
cmc
rol
fnstenv
adc
xlat
repnz
cli
stc
int
nop
iret
adcb
in
cmc
jmp
cmp
lret
fmuls
cmp
loop
in
ds
in
fpatan
enter
stc
sti
loope
cli
test
ret
leave
mov
fsubp
in
lds
enter
xor
jmp
rcl
aad
aad
rolb
push
test
jl
add
fidivl
out
sar
rcr
shl
lock
sbb
int3
ret
aaa
in
in
aad
iret
int3
neg
ret
ret
faddl
test
out
jmp
loopne
out
icebp
hlt
cmp
rol
hlt
leave
cmc
jmp
rcl
cli
out
call
lea
xchg
xlat
ret
jecxz
loop
fstp
out
filds
fnop
cmc
jecxz
lret
adcb
faddp
xor
jmp
clc
loope
rol
cmp
xchg
and
sti
leave
filds
ret
loopne
stc
cli
fnstcw
rcr
ret
lock
fcomip
cmp
aam
in
jecxz
call
jmp
aam
cmp
idivb
std
cmp
or
mov
popl
rcl
cli
out
aaa
jmp
cmp
fdivr
aas
std
stc
mov
dec
aam
leave
lret
mov
fsub
aam
clc
sarb
cmc
clc
rcl
shl
sti
mov
std
out
loop
nop
hlt
loopne
out
cmp
fsubr
aam
rcl
sarb
aad
fsqrt
in
testl
das
aaa
clc
rol
shl
fsubr
int
cmp
cld
and
loop
cli
out
jmp
ljmp
cld
ljmp
loope
aas
push
in
in
lret
int
into
int3
out
iret
jmp
inc
ds
call
fcmovnb
stc
ret
fcmovnu
loope
into
fcmovu
lret
loope
lret
ret
cmc
rcr
aaa
cmp
sar
idivl
rcl
repnz
in
xchg
sar
fcmovnu
std
iret
call
shl
rcl
cli
enter
xchg
fmulp
nop
into
ret
cli
fidivrl
in
repz
stc
idivl
in
repz
in
in
jecxz
in
xchg
sub
jmp
xor
cmp
shl
enter
cmp
test
out
sub
das
sub
cmp
repnz
rol
faddl
dec
out
sti
cli
fsub
rorl
int3
in
out
call
fmul
cmp
ror
mov
out
mov
xlat
enter
iret
int
cli
ffree
addb
in
fldl
jecxz
loopne
xchg
lret
rcr
shr
cmp
cli
xor
cmp
fsubp
mov
repnz
loop
mov
mov
icebp
out
jmp
ss
shl
out
into
cld
stc
aaa
std
out
cli
rol
enter
call
loope
xor
hlt
aaa
icebp
rcr
aaa
aaa
repnz
sti
cmp
aad
hlt
cmc
test
hlt
out
mov
jmp
aam
shl
iret
int
lret
sar
ss
iret
in
rcl
orb
jmp
loopne
aaa
lock
in
cmp
sar
into
loopne
in
aad
fadds
test
icebp
decl
out
call
xor
rol
cmp
cmc
rcl
loope
ror
enter
xchg
mov
lret
in
fnstenv
in
cld
loope
in
aas
and
repnz
leave
cmp
loop
or
decl
cmc
hlt
call
jmp
in
sti
clc
cmc
aad
test
jmp
enter
jecxz
out
into
fdivrp
in
cmp
stc
fsubp
sar
bnd
mov
mul
fdivr
mov
loop
out
in
icebp
clc
into
cmp
aaa
icebp
in
loope
hlt
rcr
in
mov
mov
lock
xor
aas
rcl
ljmp
xlat
repnz
out
loop
in
loopne
int3
leave
ljmp
icebp
test
in
out
cli
icebp
fadd
jecxz
mov
testb
test
ret
cmp
in
leave
fdivr
fcmovnu
lret
stc
test
clc
enter
fiadds
fmulp
into
icebp
cmp
shr
repnz
aas
cmp
xlat
and
sti
in
test
mov
aaa
mov
call
cmp
lret
sti
cmp
not
add
in
int
cmp
jmp
cmp
into
loopne
out
cld
shl
div
in
loopne
call
mov
hlt
cmp
fiadds
aad
test
loop
out
and
loop
int
cmp
lds
lret
iret
int3
call
aaa
testb
jecxz
loopne
in
int3
call
cmp
out
in
out
stc
fst
iret
cmp
shr
fisttpll
lret
mov
shrl
jmp
out
in
xor
std
sti
cmp
ret
std
test
cld
out
lock
in
xor
ret
mov
lea
mov
mov
xor
add
mov
lea
jmp
into
aad
int3
fcmovnu
aad
add
sub
ret
xor
jl
in
out
cmp
cmp
out
repz
xchg
xlat
jecxz
test
sti
std
loopne
loope
out
jmp
jmp
out
xor
hlt
aad
in
iret
cmp
sarb
lock
xlat
fcmovnb
xchg
fildl
addb
ljmp
fld1
rol
int3
out
out
cld
out
leave
out
mov
ret
fmul
xor
sti
leave
std
clc
call
not
loopne
std
bnd
lock
loopne
int
xor
lret
out
aas
in
rol
cmp
adc
mov
dec
mov
xchg
aam
ss
fildl
cmpb
fldl
into
test
icebp
lret
hlt
adc
fadd
lock
cs
test
rcr
cli
loope
int3
fiaddl
xor
shl
lret
fdivl
fcmove
shl
loopne
loope
cmp
lret
xchg
aad
int
shr
icebp
repz
ljmp
cmp
repnz
fucomp
fmull
adcl
std
ljmp
rcr
cld
test
ljmp
mov
fsub
xor
cli
stc
int
shl
filds
test
jmp
lock
shl
fmulp
clc
fdiv
xor
aad
fdivrp
repnz
cmp
hlt
test
cli
loop
stc
call
ret
in
call
jecxz
shl
xlat
idiv
addl
ljmp
das
into
in
cmp
jmp
cmp
lock
repnz
leave
jmp
rorl
shl
vmaskmovdqu
fdivrs
ret
loope
ffreep
mov
std
loopne
cli
rcl
jecxz
lret
hlt
xor
fdiv
lock
ss
fiaddl
sub
out
in
in
out
fst
out
shr
out
cli
repnz
in
jecxz
sti
in
aad
mov
fmuls
xchg
ret
in
cmp
ss
call
cmp
jecxz
sti
aad
leave
fcompp
cld
out
ffreep
call
out
xor
cld
out
stc
xlat
rolb
test
fld
and
lret
nop
sbb
repz
lret
aam
ljmp
out
fcmovb
in
test
fimull
int
in
rcl
icebp
fcomip
cmc
ret
iret
cmp
lock
mov
ljmp
xor
out
cmp
idivl
out
test
int
test
fld
aam
in
cmp
cmc
sar
and
xor
jecxz
mov
orb
in
xor
shr
ds
loopne
cmp
aam
dec
lret
mov
test
int
shl
ret
out
ret
lret
xor
leave
cmp
call
ds
rcr
fadds
ljmp
leave
hlt
lds
out
repz
hlt
rol
shr
rolb
out
fdivrp
xchg
xor
loop
fldlg2
repnz
cli
aas
shl
into
hlt
loop
cmp
mov
add
cld
iret
out
ljmp
iret
shl
jmp
jmp
fucomi
in
aas
and
mov
fisttpl
ljmp
out
lret
in
xlat
rcl
ror
rcr
cmp
out
mov
jecxz
call
cs
lret
ror
test
cmc
sti
aam
in
neg
fldl
fmulp
xchg
fsubrp
ret
div
rcl
xor
lock
ret
cld
loopne
rorl
xor
in
iret
xor
cmc
sarl
cmp
in
ftst
cmp
mov
inc
mov
xchg
ror
test
rol
iret
stc
icebp
xor
std
hlt
div
lock
repz
xlat
sti
in
or
sub
add
loope
out
in
xor
sti
shl
fiadds
aad
in
fsubr
lea
icebp
in
xor
int
lock
aaa
aas
cmp
clc
cld
shl
mov
hlt
jecxz
out
in
out
int3
out
loopne
fcmovne
fcmove
out
aam
repnz
sti
cmp
call
int
std
rcll
fdivs
call
test
cmc
out
call
decl
sub
xlat
xor
rcl
test
out
fnstsw
loopne
shl
jmp
ljmp
shl
ret
sti
in
leave
rcl
in
lock
cmc
xor
stc
sti
ror
neg
jmp
fucompp
loopne
xchg
lret
ror
fcomip
call
sar
cmp
repnz
out
test
in
xchg
mov
in
mov
xchg
out
ret
jmp
inc
or
jmp
ror
ror
rcr
frstor
pop
sub
cli
movsl
hlt
sarb
jl
add
hlt
cmc
clc
sar
cmp
aam
clc
jecxz
ljmp
in
repz
int
jmp
div
loop
stc
call
jmp
in
loope
int3
leave
iret
faddl
int
clc
icebp
aad
enter
xor
frstpm(287
xlat
int3
out
repnz
jecxz
lret
out
leave
icebp
ror
hlt
sarb
shl
aam
mov
in
xchg
lock
int3
xlat
jmp
cmp
ds
in
out
in
out
icebp
into
mov
sub
in
jecxz
loop
repnz
clc
cmp
cli
shl
rolb
icebp
mov
and
ror
aad
in
in
cmp
cmp
loope
fsubr
fsubr
mov
iret
lret
lret
loopne
test
sub
aaa
jmp
imul
shl
repnz
repz
in
rcr
movl
xchg
sub
xor
hlt
sar
fadds
roll
jecxz
cli
std
into
icebp
cmc
rclb
iret
rcl
cmp
loopne
loopne
ret
and
fincstp
fcos
cli
call
jmp
enter
das
ljmp
int3
repnz
in
xlat
xchg
in
test
out
loope
hlt
clc
vcvttpd2dqy
out
rcl
icebp
icebp
fdivp
clc
or
fsincos
out
lret
xchg
shr
aam
xor
clc
xor
cld
int3
shr
xchg
fiaddl
divl
enter
clc
cmp
cli
xor
test
fprem
faddl
imul
ret
std
xor
sarb
aam
adc
icebp
cld
leave
xlat
cld
in
std
fcmovne
in
cli
xchg
inc
into
neg
cmp
xor
cmp
jmp
and
fsub
faddl
icebp
vpaddq
jmp
f2xm1
idiv
cmp
rcl
jecxz
out
jmp
test
leave
loop
fdivp
into
loopne
sub
out
in
cmp
rcr
in
fsubp
std
cli
testb
jecxz
xor
sti
in
les
sarl
sarb
rcr
repnz
cld
fucomi
testl
jmp
rcl
std
aad
in
cmp
fadd
rol
aas
aam
jecxz
cld
sti
add
xchg
xchg
mov
hlt
out
out
xor
int
xor
not
ds
icebp
ret
addb
lret
mov
int
aaa
loop
fcmovu
std
aad
sti
call
into
stc
in
imul
enter
nop
test
into
in
ret
xor
cmc
jmp
lret
cmp
rcl
fdivr
xchg
in
out
enter
int
cli
loope
ror
leave
jmp
into
out
loope
int
shr
stc
movb
fdivr
lret
xchg
leave
xor
xor
lret
out
repnz
faddp
out
into
aam
sti
in
ljmp
das
aad
fstpt
xor
cmp
shl
repz
vpaddd
lret
sti
shl
adc
out
xor
hlt
jmp
ss
rolb
fiaddl
call
out
sub
clc
cmp
xor
xor
call
enter
sub
xor
out
cmc
call
test
cmp
std
ret
mov
lock
xchg
aad
aam
sub
icebp
loopne
div
jecxz
loop
rol
test
in
icebp
repz
lret
ljmp
cmp
adc
xor
decl
xchg
inc
call
lock
shl
sbb
testb
in
orl
stc
in
cmp
out
loop
cli
xchg
aad
aas
in
test
addb
shl
int3
in
clc
enter
xor
cld
hlt
loopne
aas
ffreep
cmp
adc
idivb
icebp
xor
push
into
cmp
in
int
faddp
jecxz
xchg
out
call
xor
aam
xlat
ror
cmp
sti
fcmove
int
clc
jmp
adcl
std
in
in
out
neg
in
out
ret
movl
test
fxch
std
sti
leave
lret
idivl
loopne
loop
cmp
enter
out
in
xchg
call
jecxz
call
idiv
out
lock
fadds
lock
mov
ror
repz
out
aam
cmp
loope
addl
in
bnd
leave
add
push
jmp
lret
ds
lret
rol
loop
mov
adc
aas
jle
jge
jl
xlat
cmc
cmp
in
cld
not
rcr
jecxz
fsubr
fstpt
ljmp
icebp
out
xor
repz
fcmovu
ror
cmp
in
fsubp
sar
fadd
ljmp
dec
mov
loop
lret
clc
out
div
icebp
ds
fcomip
cmp
mov
loope
lds
std
loop
out
rcl
hlt
sub
out
cmp
aas
cmp
sti
loopne
hlt
test
filds
xchg
repz
jmp
cmp
fidivrs
fcmovnbe
test
mov
in
mov
iret
rcl
in
int3
das
out
stc
int3
loop
into
out
sti
int3
jmp
adc
cmp
aam
sub
mov
mov
mov
mov
xor
in
int3
fxam
cmp
idivl
cmp
fcmovbe
ret
out
xlat
enter
enter
aad
ss
in
lock
ds
cld
stc
out
cmp
int
std
incb
div
shr
out
out
in
fcmove
clc
int3
aad
fsub
fcmovu
xlat
cld
mov
lret
loopne
orb
xor
lret
iret
cmp
in
cmp
not
fnclex
add
cmp
vcvtdq2pd
xchg
out
rcr
leave
std
int3
hlt
lret
ds
sarl
repz
and
xchg
mov
into
mul
stc
hlt
xor
lret
fxch
jmp
fiadds
jecxz
fmuls
cmc
repz
test
cs
fdivrs
lock
sar
fdivr
mov
in
neg
in
aaa
ds
xor
loopne
loopne
call
shr
in
out
enter
cli
aad
cmp
incl
cmp
call
in
bnd
ljmp
in
addb
call
lret
int3
mov
jmp
jmp
out
repz
fsubr
cmp
aad
out
in
jecxz
out
out
aas
stc
cld
out
addb
aam
out
cs
fcom
in
loop
hlt
out
mov
orl
ss
xlat
std
fucomi
cli
loopne
and
idiv
xlat
cmp
jmp
int
jecxz
in
aad
in
fldpi
repnz
shl
not
ds
hlt
fsub
cli
in
jecxz
test
int3
out
std
fistl
xor
iret
out
shr
loope
and
in
icebp
loop
not
in
jmp
xchg
repnz
xchg
shll
rcl
xor
repz
hlt
xchg
addb
orl
ss
out
in
std
cmc
jmp
cmp
jecxz
lock
xchg
fmul
or
out
loop
out
call
icebp
icebp
in
in
fsubr
loop
test
vpextrw
mov
fsubp
lea
xor
aad
jmp
sar
icebp
aas
ret
in
filds
mov
mov
mov
mov
fucomi
in
out
aaa
xorl
into
out
enter
jecxz
cli
int3
repnz
repnz
shl
cmp
repnz
rcl
repz
fneni(8087
add
mov
fimull
mov
xlat
jmp
fsub
vshufpd
shl
ret
cld
cld
cld
xchg
test
loop
fistl
and
repz
in
jmp
int
iret
int3
in
and
loopne
mov
enter
test
in
xchg
shl
ds
sar
idivb
std
jmp
cld
lock
orb
out
xlat
ret
aaa
ljmp
repz
test
mov
mov
fsub
icebp
in
loope
sti
ret
out
out
aaa
cmp
std
std
xchg
mov
mov
jecxz
out
loopne
jmp
out
mul
xor
std
cmp
ret
cli
cmp
leave
xchg
stc
in
in
xchg
in
lock
cmc
repz
ss
fcmove
not
jecxz
loope
roll
stc
mov
icebp
into
loop
lds
repz
ds
xchg
jmp
out
jmp
call
lret
ror
lock
fdivr
cld
add
cmp
test
fisttpll
shr
xor
out
rol
ds
flds
loope
rolb
mov
jecxz
cmp
xor
aad
cmp
fstp
cld
test
mul
aam
add
std
fldl
std
xlat
call
cmp
rol
mul
xlat
fld1
addl
ljmp
fadds
loope
std
test
mov
enter
mov
mov
push
jmp
rcl
mov
neg
repnz
inc
lret
ds
jge
jl
in
ljmp
loopne
loop
aaa
xchg
loopne
cmc
aad
idiv
out
cmp
xchg
cs
lret
cli
cmpl
shl
leave
cli
xchg
xchg
xchg
out
jmp
repz
into
xor
loop
rcl
rcr
aam
mov
ljmp
hlt
in
shr
lret
cmp
cmp
stc
ret
in
fdivrl
std
jmp
iret
int
out
out
lea
in
iret
cmp
aaa
rolb
shl
jmp
in
xchg
int3
aad
cmp
xor
icebp
fdivrl
cmp
cmp
cli
into
stc
fmul
mov
out
fadds
int3
aaa
sti
int3
sub
cld
call
cli
out
fdivr
repz
leave
call
clc
mov
rol
xor
enter
fucomi
add
rolb
aam
jmp
fisttps
fnstcw
xor
rcr
aam
lret
fdiv
repz
rcl
jecxz
in
shr
lret
jmp
cmp
out
loop
cld
fdivp
cli
testb
mov
mov
icebp
das
loopne
xor
aam
rcl
fildl
lret
jmp
xchg
loop
shr
mul
cmp
cmc
jmp
in
clc
ret
xlat
fsubp
in
hlt
in
stc
cmp
imul
jecxz
aam
out
ljmp
rolb
rcl
ret
out
into
nop
test
jecxz
xlat
ds
neg
cmpl
xchg
loop
sti
out
ljmp
xor
enter
in
sti
repnz
loop
idiv
popl
loop
hlt
out
int
sar
leave
call
loop
hlt
lock
in
adc
inc
icebp
lock
jmp
xor
shl
hlt
leave
clc
fcom
cmp
std
int
test
jmp
ljmp
icebp
cld
loop
repz
out
clc
in
aam
iret
shl
ljmp
loop
hlt
cmc
loope,pt
loop
jmp
rol
call
ss
lret
out
repnz
into
in
test
orb
repnz
leave
sti
aad
int
cmp
sbb
cld
decl
sbb
aaa
lret
aam
in
clc
aam
fadds
mov
jecxz
xlat
ret
std
clc
mov
int
fnstcw
clc
imul
clc
repnz
cmp
out
rcr
out
loopne
xchg
incb
xor
fmulp
iret
cmp
out
iret
cmp
cmp
aam
cld
rol
test
out
loope
mov
into
fbstp
shlb
enter
cmc
int3
rol
sar
out
ljmp
into
xchg
dec
call
iret
xor
call
cmp
idivb
test
neg
std
jmp
jecxz
test
repnz
jecxz
xor
lret
in
shl
fdiv
in
cli
test
cmp
fmul
mov
jmp
call
out
lds
out
out
fst
repz
ror
lock
mov
aad
repnz
mov
xchg
xor
xor
in
int
rcr
aam
call
cmp
lds
dec
mov
fdivr
lock
call
fcom
cli
aad
fsub
inc
rcl
leave
rorb
out
xchg
shl
aad
loop
int
xor
cld
call
repnz
fdivrp
and
lret
loope
icebp
xchg
xor
in
not
repz
loope
sti
test
call
sti
mov
sarb
xor
out
ffree
out
cmp
fcomp
add
ret
cld
fcmovbe
in
fstl
out
leave
fucompp
loope
cmpb
in
lock
ror
movl
test
ljmp
into
addb
mov
ret
fninit
xchg
imul
out
out
in
int3
enter
int3
cmc
int3
stc
fucomp
and
leave
test
sbb
mov
adc
xor
cmp
jmp
lret
in
clc
rcr
hlt
jecxz
clc
std
test
mov
in
mul
int
xor
xor
icebp
cmp
cmc
jecxz
cmp
cmp
ljmp
mov
jmp
mov
fdivrl
icebp
sti
sar
fcom
mul
test
mov
add
mov
fst
iret
out
icebp
loopne
test
xor
sarb
mov
std
ljmp
ds
icebp
cmp
hlt
test
xlat
out
std
fucomip
nop
jmp
pushl
call
jmp
jmp
int
mov
cmp
xchg
mov
pushf
aas
leave
jle
jge
jl
fsubrp
in
leave
xor
aad
rcl
icebp
cmp
test
ljmp
mov
shlb
leave
std
add
sti
cmc
cmp
out
dec
lret
fimull
call
out
stc
icebp
cmc
cmp
cld
cmp
orl
lret
into
aas
in
sub
int3
int
leave
aad
fcom
cmp
rcr
into
fmulp
fimuls
fdivp
xchg
rorl
ret
repz
out
fmulp
cmp
fsub
in
loop
aam
mul
out
out
out
test
into
fmulp
sub
aad
aaa
ljmp
adc
mov
mov
or
call
out
int3
call
lock
cmp
aam
rcl
faddp
loope
test
fsubr
test
mov
fiadds
lret
enter
test
aas
out
incb
xchg
sti
test
repz
out
aaa
leave
loope
out
loopne
sarb
jmp
std
call
shll
xor
fidivl
enter
idiv
not
loopne
addl
sub
xor
lock
aad
ljmp
repnz
loop
xchg
call
in
into
in
aad
iret
shr
fmul
shlb
call
mul
test
enter
fprem
adc
call
repz
repz
cli
lret
in
xchg
jmp
xchg
fmulp
call
xor
out
aad
hlt
cmp
cmpl
out
in
test
mov
cld
test
jecxz
xchg
in
sub
xor
leave
fdivr
aam
xlat
in
cli
ds
fdivr
cli
mov
fiadds
jmp
test
stc
dec
fidivrs
fdivrl
fcomi
cmp
fcmovnu
rolb
mov
icebp
fcmovu
lret
sar
cmc
int3
sar
cmp
cmp
in
in
cmp
xchg
fucomi
mov
orb
ljmp
loopne
std
div
out
rol
call
cmc
leave
out
popl
imulb
ss
into
shll
mul
cmp
mov
in
mov
cli
std
jmp
loop
fsubrp
aas
xor
jecxz
out
sar
xorl
sar
stc
repz
enter
fsubp
loopne
aad
lock
lret
cmpl
mov
xchg
in
lret
cs
jmp
into
stc
in
fmul
aad
fcomp
neg
flds
cli
fldln2
mov
into
fstl
sub
lret
fstp
fst
filds
clc
shr
jecxz
fdivrp
movb
ror
cmp
sar
cld
cmp
rolb
in
loopne
loop
out
jecxz
mov
repnz
idivb
jecxz
cmp
loop
cmp
in
int
out
mov
iret
mov
in
enter
fnstcw
xor
incb
cmc
addb
in
orl
lock
fmul
repz
shl
incl
out
out
call
jmp
aad
out
lret
in
aam
ss
or
faddp
cli
test
stc
loope
int3
mov
lret
jmp
out
rol
fcos
out
hlt
into
fnstcw
and
jmp
lret
in
test
xlat
jecxz
cmp
jmp
aas
xchg
adc
loope
leave
in
cli
test
out
jecxz
rcl
lret
xor
cli
leave
rcl
hlt
aas
xlat
shl
orb
cli
fsub
out
jmp
das
repnz
hlt
les
lret
loop
stc
test
call
mov
filds
lret
out
imul
rcr
lock
ds
out
cmc
rol
call
iret
fcmovu
int3
cld
xor
iret
test
int
ror
sbb
incb
cld
in
cmc
into
out
sarl
xlat
neg
xor
sti
sti
in
dec
roll
sub
std
lret
rol
fsubp
fcmovnu
mov
call
fnstenv
xor
cmp
jmp
iret
hlt
in
jecxz
fcmovb
out
test
in
int3
repz
xchg
shl
into
enter
hlt
loopne
in
fnop
loop
sti
rolb
std
lret
icebp
shl
nop
int3
jmp
test
loop
xor
xor
aas
lret
out
ret
ror
cld
ret
aam
or
xchg
int
ljmp
out
shll
aad
into
out
repnz
loop
out
cld
jecxz
dec
in
ljmp
jne
mov
xor
add
mov
mov
mov
jmp
rol
leave
rcr
fstp
lds
mov
mov
jle
jge
jl
xor
sti
not
out
test
mul
out
test
aam
fildl
jmp
out
xor
xlat
int
iret
stc
rcr
cmp
cmp
fldl
lds
mov
fdiv
sbb
out
lret
sub
xor
out
shl
roll
orl
std
nop
call
repz
iret
aad
ret
rol
cmp
ret
sbb
int
jmp
vpsllq
out
shr
aam
ror
cmp
sar
add
loop
in
xchg
mov
enter
iret
mul
int
lret
ror
sar
loopne
roll
clc
imul
in
icebp
call
in
int
aad
cli
aad
ror
fucom
cmp
ljmp
fld
mov
xchg
fucomi
int
lret
aad
int3
hlt
loop
aam
cmp
mul
aam
hlt
clc
mov
or
cli
leave
mov
jmp
enter
cmp
sti
fcomip
sti
shl
mul
mov
mov
xchg
sub
clc
xor
idiv
fdivr
cmp
stc
in
cmc
test
stc
orb
das
fadd
int3
fsubr
out
clc
enter
add
rol
in
xchg
jecxz
test
cmp
out
xor
dec
ds
sar
fisttpl
addl
iret
repz
into
enter
in
cmpb
filds
and
mov
out
cld
lock
loop
std
test
fpatan
aas
shr
aam
aam
icebp
lock
out
loope
in
test
rol
aad
rol
sti
aaa
ffree
sti
int
xlat
xlat
repz
call
xchg
into
in
fsubr
out
clc
cmp
aam
ror
loope
out
roll
fcomip
jmp
out
vpsubq
rcl
lret
ds
aas
out
xor
hlt
fiadds
int3
loope
lret
in
repz
sti
icebp
repnz
cmp
loopne
hlt
in
std
test
call
int
xor
loope
fcom
ss
fnop
cli
iret
ret
in
ftst
in
vpsubq
sti
fdiv
into
into
shl
leave
lret
call
fdivl
sar
aad
sar
jmp
out
inc
out
call
ljmp
cmp
rcl
aas
lock
aam
div
cmp
lock
out
ds
repz
call
dec
in
fcmove
loopne
lock
test
ljmp
cmp
iret
xlat
into
cmc
push
icebp
int3
fcmovbe
rorb
std
adc
sbb
ss
fninit
sar
out
aam
stc
push
cmp
addl
mov
ljmp
xor
out
addl
jmp
lret
out
rcr
rcr
fucomi
loope
cmp
stc
cld
sar
add
mov
stc
mov
repnz
leave
in
stc
jecxz
out
push
xlat
jmp
mul
xchg
xchg
in
test
mov
jecxz
cs
sar
ljmp
in
icebp
loopne
leave
mov
ljmp
out
hlt
in
cmp
repnz
leave
clc
aam
sarb
hlt
test
in
int3
test
enter
enter
jecxz
int3
out
mov
fdivr
jmp
in
std
out
enter
sti
xor
aad
into
std
aam
std
out
add
fmul
jmp
loop
fxch
repz
out
loop
cmp
lds
cld
iret
repz
xlat
xchg
shl
call
fxch
fadds
xor
aad
fsubrp
not
cli
add
repz
xchg
in
jmp
repz
repz
loope
into
hlt
stc
aam
ret
jmp
cld
iret
cli
out
xchg
in
out
out
fxch
cmp
rcl
jecxz
loope
aam
roll
lret
call
xor
ss
aaa
stc
in
cmc
cld
jecxz
in
cli
idiv
clc
imul
stc
fdivrp
in
lret
into
iret
repnz
out
aaa
in
fxch
enter
clc
shl
roll
out
in
lock
lock
int
xor
fadd
sar
fadd
cld
adc
fadd
enter
clc
addl
in
into
in
out
icebp
fistpll
aas
cmp
roll
aam
ljmp
faddl
sub
sar
cld
enter
aam
loopne
shl
enter
test
jmp
ljmp
inc
cld
mov
push
pop
sub
add
jmp
ds
rcr
fst
xlat
xchg
icebp
mov
add
jmp
jge
jl
nop
imul
cmc
int3
call
out
repz
iret
lock
fsubp
test
ret
fadd
int3
loope
nop
lret
rcr
xor
cld
in
int3
cmp
movl
ret
fcomip
out
xchg
into
jmp
xor
fcom
clc
loope
xor
loope
ret
mov
xchg
enter
loop
out
into
jmp
cmp
cli
fcmovnbe
icebp
aas
faddp
jecxz
int3
popl
shl
cmp
ret
in
repz
ljmp
aas
mov
in
xchg
rcr
mul
shr
not
fstp
fdiv
cmp
rcl
fmuls
sti
ds
cli
sti
std
mov
int
cmc
shr
cmp
fdiv
enter
fstp
fcmovbe
push
lret
mov
loop
fucomp
sub
jmp
cmc
jmp
test
cmp
mov
fsubr
mov
sbb
out
cmc
imulb
leave
ds
div
ds
repz
lds
mov
xchg
mul
shr
xor
int
ret
cli
mov
call
repz
out
rol
xor
out
in
in
ljmp
test
out
repnz
cmp
std
lret
out
xchg
repz
out
call
aad
fstpt
test
rcl
decl
ds
mov
lret
jecxz
int3
shlb
fdivr
aam
rcr
int3
ds
rol
out
cmp
cld
lret
fsubr
imul
out
jecxz
lret
out
aam
cmc
rcl
repz
ffree
out
loopne
loop
mov
test
into
aad
fcmovne
into
neg
loope
ss
sbb
fdivr
shl
in
dec
lret
cld
iret
xchg
mov
int3
xlat
jecxz
loop
rcl
out
loope
aad
repnz
mov
clc
in
xchg
shl
mov
xor
shl
fcmovbe
out
out
lret
in
rcl
repnz
xlat
repz
mov
addb
into
loopne
shlb
out
cli
iret
out
cmc
enter
cld
ret
in
mov
stc
mov
fcmovbe
hlt
xchg
loopne
xor
iret
rcr
or
add
cli
ffree
ljmp
cs
into
hlt
cmp
fcomi
int3
faddl
loopne
in
clc
xchg
out
xchg
fcmovbe
cld
lret
int
ljmp
jmp
stc
aam
in
clc
ret
mov
fisttpl
lea
sar
into
jmp
cli
lret
ljmp
call
in
lret
ret
rorl
in
stc
repnz
cmp
fcomp
icebp
xchg
mov
out
lock
shl
ret
icebp
repnz
cmc
fstpt
cli
ds
mul
in
out
jmp
loope
leave
out
test
into
out
in
xor
cmp
cmp
xor
fdivrp
in
cmp
stc
out
div
xlat
aam
int3
lret
orl
out
test
repz
ret
aas
xlat
test
test
fcmove
decb
icebp
imul
aaa
stc
sti
cmp
clc
sarb
rcl
xchg
in
mov
decb
test
enter
cmp
idiv
cmpb
loope
test
cmp
in
aam
addb
lret
clc
repz
fdiv
std
out
cld
test
lock
fxtract
mul
in
out
clc
out
loopne
mov
out
fldcw
ljmp
repnz
fldl
mov
in
sub
xchg
test
out
call
aad
stc
call
sti
lret
jmp
lret
aaa
out
xor
cli
aam
aas
call
fcomip
mul
repnz
aad
stc
addl
loop
lret
fcmove
int3
clc
shr
rcr
hlt
int
out
int3
testb
loope
cs
out
call
sar
fadd
fcompp
test
sti
int3
xchg
xchg
in
and
in
call
cmp
fistpll
cmp
incl
ret
out
xchg
mov
sub
neg
in
int
out
jmp
fcmovne
call
icebp
in
enter
clc
call
cmp
in
cmp
aad
ret
inc
in
decb
cmc
lds
lret
enter
inc
xor
loope
stc
shl
xchg
fdivr
jmp
ror
int
hlt
test
cmp
out
into
xchg
in
out
mov
loope
in
ljmp
int
leave
call
iret
lock
jecxz
cli
xlat
mov
addl
inc
or
lea
cmp
jne
jmp
int
ds
int
lock
pusha
cmp
jle
jge
jl
test
shr
out
hlt
sarb
fnstsw
aad
cmp
cmp
orb
hlt
mov
sub
nop
test
into
sub
int
int3
cmp
shl
aas
jecxz
std
std
fnstsw
mov
fcomi
cmp
test
mov
test
aam
ljmp
cli
sub
mov
fmull
cmc
sub
shl
fstpt
aas
out
out
neg
sti
cmp
ret
mov
test
aam
mov
call
fsub
vpxor
xor
repnz
loopne
out
neg
xlat
add
in
test
int
ror
jmp
in
call
sti
cmpb
test
fucomip
fiaddl
sub
sarl
int
cmp
fucomip
f2xm1
xlat
stc
orl
cld
mov
mov
xor
out
cmp
fldl
cmc
repnz
aam
ljmp
shlb
not
aaa
iret
cmc
cld
lock
test
vpsubb
aam
jmp
rolb
xor
out
rcr
cmp
aam
sti
sar
out
enter
in
out
mov
hlt
repz
idivl
fcomi
fdiv
aam
mov
lret
out
rolb
int
aam
stc
in
ror
cld
cmp
ret
fdiv
hlt
call
jmp
std
loope
in
out
cli
lock
ds
ss
mov
xchg
lret
loop
lock
sub
loop
loop
ror
xor
hlt
hlt
loop
call
loop
aam
aam
in
int3
mov
cli
out
int
iret
loope
ss
jmp
jecxz
shl
rol
ror
mov
out
loop
ljmp
cmp
out
sti
hlt
into
sarb
in
test
aam
shl
mov
stc
sti
int3
fdivr
fsubr
int3
repz
int3
ss
xlat
shll
xlat
repnz
ret
addl
test
int3
out
orb
into
jmp
cmp
int3
ds
in
lock
faddp
repz
out
mov
out
jmp
xor
enter
shr
jecxz
hlt
cmp
xlat
loopne
xchg
fsubrp
iret
sti
addb
jecxz
lock
cmp
hlt
into
cmp
xchg
aas
mul
jecxz
sbb
xchg
test
fdivrl
call
fldl
rcl
orb
aad
sub
xor
fistpll
hlt
loop
sbb
in
in
test
mov
into
xchg
lock
repnz
aad
hlt
aas
cmc
clc
std
cmp
hlt
xlat
fdiv
aam
test
int3
shl
test
call
cli
sti
aas
aam
test
repnz
fucomi
out
fcmovu
out
sub
ror
ss
clc
aad
shl
in
repnz
cli
xchg
hlt
std
fld
xchg
fiadds
shl
xor
cmp
call
sti
shl
ljmp
sub
in
fadd
jmp
xchg
ret
rcl
enter
hlt
cli
aad
jmp
hlt
in
hlt
loope
loop
clc
xchg
mov
cli
push
cld
in
xor
xlat
call
xor
icebp
ret
sub
div
enter
mov
fsub
out
mov
jmp
in
test
hlt
repnz
icebp
ret
enter
ljmp
xchg
xor
xor
xor
into
lret
std
clc
cmp
aad
xor
faddp
fdivr
loop
test
fiadds
ljmp
fcomi
faddl
jmp
xlat
mov
iret
rorb
xor
ret
xor
aaa
enter
out
in
cmc
cld
fsubr
mov
test
xor
das
enter
cmc
ss
loopne
clc
cmp
neg
out
loop
movl
out
into
ret
icebp
clc
into
xor
rcl
fxch
idiv
sti
aam
mov
fcmovbe
mov
ljmp
fxtract
cli
int
aas
aas
aas
into
out
call
in
clc
xchg
orb
xor
loop
enter
stc
shl
out
lock
cmc
fcmovbe
in
iret
ret
rorl
lret
enter
into
fsubr
int
aas
in
call
dec
ljmp
ret
fnstenv
int
cmp
call
fdecstp
ds
jecxz
test
lret
cld
fsubp
out
nop
cld
shrl
ror
out
in
ds
int3
clc
sbb
mov
flds
loop
out
lock
icebp
hlt
sub
xor
repnz
aam
repnz
aam
cmp
jmp
in
xchg
fmull
jmp
int
enter
int
lds
sbb
jge
jl
mov
lret
idivl
in
ret
ror
cld
clc
neg
fdiv
leave
inc
decb
fmuls
das
in
clc
xor
lret
repnz
clc
fcmovnb
cld
addb
ret
loopne
mov
shr
stc
lret
out
int3
lock
aad
icebp
std
mov
mov
in
in
ret
shlb
aad
enter
iret
in
rol
test
loopne
lret
shr
in
xlat
sub
cmp
cmp
sarb
fidivrl
loopne
lret
xchg
ffree
sti
call
loopne
out
rol
xchg
int
sar
sar
cmp
fdivrl
xor
stc
clc
stc
out
fisttps
xor
icebp
xlat
out
hlt
cmp
lret
repz
ffreep
jecxz
lock
hlt
leave
out
test
xchg
std
fimuls
jmp
cmp
cmp
lock
mov
icebp
rclb
idivb
ret
lock
fstp
aas
repz
in
xchg
mov
jmp
xchg
mov
das
jmp
xlat
loop
std
int3
xor
iret
sarl
fucom
adc
lret
mov
call
out
cmp
cmp
rol
aad
roll
orb
int3
icebp
mov
in
aam
cmc
fxch
aas
xor
cmp
out
rcl
repz
mov
aas
cmp
fimuls
xor
das
loopne
in
iret
iret
stc
shl
in
aad
repz
loope
mov
sub
out
ret
test
ljmp
into
loope
clc
repz
jecxz
loopne
ljmp
ror
xchg
mov
das
out
enter
int3
out
fdivr
int3
hlt
rcl
loope
fadd
in
add
fisttpll
into
iret
icebp
int3
fcmovnb
das
repnz
shl
cmc
aam
xor
cld
loopne
out
std
int
in
mov
shr
loope
leave
ljmp
lret
jecxz
aad
stc
cmpl
loop
add
out
loop
xchg
shll
cs
rol
out
cmp
iret
aas
cmp
std
fsubr
out
loop
cld
out
xchg
iret
adcl
div
rcr
icebp
fcmovu
mov
aad
test
sar
xchg
jmp
icebp
sub
loop
ret
call
fcomp
lret
rolb
in
xlat
xchg
mov
xor
out
sarb
push
in
loope
fsubr
fcompp
xchg
fmuls
out
xchg
xor
call
sarl
sar
out
jecxz
fisttpl
ret
int3
nop
lock
cmc
fyl2xp1
in
clc
std
iret
fcmovnbe
out
ret
fadd
rcl
test
in
out
fcomi
jecxz
int3
aaa
repz
call
sarl
int
out
call
in
ljmp
int3
out
aaa
out
loop
int3
not
cmp
loope
repnz
jecxz
xchg
dec
shl
call
out
aad
sti
fcomp
int3
xor
in
push
rol
leave
push
ror
ret
fneni(8087
mov
mov
sub
lret
cmp
lock
cmc
rcr
into
in
sti
sti
lds
ret
lret
mov
out
imull
fmulp
out
aad
dec
stc
rorb
in
fisttps
div
leave
not
rcr
cmp
xor
cmp
lret
ret
incb
cmc
dec
test
mov
xchg
dec
icebp
jmp
shr
into
lret
leave
iret
rolb
sbb
test
ljmp
orb
sub
hlt
aaa
into
loopne
ret
ret
fucomip
int
jmp
xchg
in
repnz
in
fcmovnbe
out
lock
filds
out
fcmovne
into
jmp
shl
in
enter
icebp
rcr
cmp
clc
idiv
stc
fadd
cmp
test
xchg
int
xchg
loop
and
into
sar
lock
icebp
fcmovne
xchg
loopne,pt
mov
icebp
in
lret
repz
enter
cmp
fistpll
lret
repz
iret
test
ffree
mov
ds
fiaddl
sub
icebp
cmp
xor
cmp
int
iret
add
into
test
orl
cmp
xor
sarl
clc
in
add
rcl
rcr
sti
lret
xor
stc
mov
leave
lret
fnstenv
aad
in
stc
sar
rcl
cld
rol
fimull
mov
in
in
in
fpatan
leave
aas
ljmp
out
shr
enter
call
fsubp
mov
call
icebp
fdivrp
ret
jecxz
repz
xor
lret
ljmp
add
ds
ror
aad
fistl
loop
pop
call
jle
jge
jl
xchg
xor
repz
cmp
in
rol
fcmovu
xlat
fdivp
stc
frstpm(287
std
loopne
out
loopne
int
jmp
int3
iret
into
out
shr
fcomi
out
clc
leave
cld
and
xlat
enter
int3
hlt
in
loope
idivb
sarl
aam
cmc
in
jecxz
in
out
test
aaa
xor
xlat
sar
xlat
leave
rcr
ds
repz
icebp
out
lea
enter
xorb
lret
call
shl
in
stc
jmp
mov
out
in
int
in
fxtract
fscale
fcmovbe
lret
cmp
stc
vpandn
cmp
ljmp
out
shr
ret
sub
cmp
cmp
fchs
cld
repz
enter
test
nop
cmc
xchg
jmp
into
aaa
xlat
lds
fdivr
std
lock
clc
fcomp
repz
sarb
fcmove
in
into
leave
mov
iret
lret
aad
int3
jmp
in
aaa
fidivrl
out
into
aad
test
std
loopne
sar
call
out
std
jmp
aad
cmp
shr
fmul
cmp
idiv
and
mov
in
dec
enter
aaa
imull
lret
cmp
fucomi
sti
out
lock
sti
jecxz
aas
xbegin
mov
loope
call
loope
aaa
int
out
shlb
shlb
xor
lock
fcmovnu
clc
loope
mov
jecxz
fldl
leave
hlt
xor
leave
out
out
cli
lret
iret
out
div
in
mov
iret
ret
mov
shr
repz
sar
aad
ret
std
mul
jmp
decl
xchg
xor
ret
ret
out
jmp
cmp
idiv
in
ljmp
loope
leave
div
lret
cmp
in
aas
shr
shll
xchg
in
clc
shl
leave
lret
rorb
loope
hlt
xlat
jmp
fnstenv
aas
rolb
idiv
test
ljmp
out
jmp
rcr
fcmovnbe
call
loopne
rol
xlat
shl
lds
fucomip
stc
lret
std
mul
out
fsubr
xor
iret
in
call
filds
loop
faddl
mov
out
jecxz
std
repz
out
loope
icebp
sar
rcr
xor
shr
fst
lock
fdiv
xor
clc
fcmovnu
int
int3
fdiv
repz
fst
jmp
in
fsubrp
repz
rcr
aam
ss
fstpt
lret
frstpm(287
test
into
idiv
jmp
xlat
jecxz
mov
fimull
enter
bnd
jmp
sub
xlat
cld
mov
in
int3
int3
orl
in
clc
leave
ffree
leave
bnd
xor
fcmovnbe
cmpl
loope
mov
out
lock
xchg
sub
xor
out
aam
cmp
call
iret
cld
out
sbb
repnz
ret
mov
loope
fldl
into
sarb
iret
leave
fsub
xor
aad
cmp
mov
cld
xchg
cmc
mov
jmp
test
stc
xor
out
out
in
in
rcl
clc
rolb
cmp
orl
enter
stc
xor
into
ljmp
fadd
cld
fmulp
in
jmp
mov
in
repnz
imull
iret
cld
iret
div
fdivrs
ret
stc
ret
fninit
test
lock
xchg
lret
shr
test
cmp
rolb
sti
loope
and
in
push
aad
in
repz
fcmovu
lret
into
cmp
flds
test
stc
fsubr
out
loopne
or
loopne
ret
ss
in
dec
out
out
sar
aaa
std
loopne
lds
fsubp
icebp
add
fsubp
ret
out
int
jmp
out
std
cmp
ljmp
leave
enter
ljmp
in
lret
ljmp
cmp
clc
cli
out
aas
xlat
out
fmul
shl
loopne
sub
ljmp
xlat
ds
int3
lock
in
mov
fldl
call
leave
out
not
loop
in
cli
ss
fcomi
fsub
cmp
rcr
repz
ds
jmp
repz
fmull
aad
sti
cmp
in
icebp
cmp
sti
roll
rcl
dec
out
lret
fsubp
in
test
ret
cmp
in
fdivrp
clc
lret
xor
sti
std
fadd
int
in
stc
loop
in
in
repz
out
imul
out
rcl
icebp
dec
lret
loopne
fyl2x
cmpb
test
loopne
neg
repz
cmp
fcmove
jecxz
out
xchg
cmc
out
aad
clc
xchg
add
pop
leave
ret
push
mov
jmp
int3
ret
ds
fst
decl
mov
fxch
cmp
jle
pop
add
xchg
mov
jmp
aad
lret
in
sti
out
cmc
sar
stc
ds
faddl
test
in
call
mov
out
jmp
clc
div
push
fstp
repnz
cmc
incb
std
icebp
xchg
test
xor
out
aad
cmp
div
enter
aad
loopne
cmp
ror
xchg
ror
sar
xlat
aad
lock
push
cmp
cmc
int
loope
sub
xchg
aaa
cmc
std
repnz
cmp
sarl
repnz
or
mov
aad
in
lret
rcr
xlat
in
ljmp
shl
into
cmc
hlt
ret
xlat
out
xchg
adcb
xor
clc
out
iret
xor
ljmp
int
into
loop
into
std
loope
enter
ror
cmp
cmp
cmp
out
xlat
int
xchg
test
cli
sub
repz
loop
sti
not
rcl
add
les
loop
out
ficoml
aam
sar
ljmp
fcmovbe
fstpt
aad
sub
filds
xchg
shl
ret
in
fmul
sar
cmp
rcr
sbb
loop
xchg
out
aas
mov
out
loope
icebp
shl
into
leave
rcr
cld
ds
fdivrs
shl
ret
xchg
xchg
mov
in
or
xor
repz
lret
loopne
icebp
fiaddl
loopne
test
out
fdiv
or
aaa
cli
fcmove
fxch
fucomi
out
repnz
jmp
repnz
adc
ror
int3
out
mov
hlt
rcl
stc
xor
cmp
rcl
ljmp
shl
xchg
shl
test
jecxz
shl
xor
xor
hlt
aaa
into
ss
in
cmc
ret
xchg
xlat
cmp
lret
test
ret
jmp
ds
icebp
in
aam
xlat
fsubr
out
aam
lret
loop
fisttpl
xchg
shl
hlt
les
int
in
aaa
repnz
in
rcl
mov
idiv
out
out
fsubrp
rcl
xor
leave
lock
lret
fld
iret
xchg
or
in
or
test
ror
sub
xor
clc
or
iret
loope
sarb
jmp
add
faddp
incl
out
shl
in
loope
cmp
in
stc
ds
sti
fdivr
testl
in
in
in
sarb
fdivrl
out
cmp
sarb
aad
incb
fsubrp
in
out
iret
xor
divl
aam
iret
cmp
xchg
cli
aad
xchg
stc
xchg
rorb
shr
cmp
xor
out
int3
lock
cmp
shr
aam
sbb
stc
xchg
xchg
das
icebp
repnz
int
fstp
repz
aas
in
xlat
fcomp
loopne
fmuls
call
int
vpaddusb
ds
jmp
repz
not
fsub
mov
lret
aaa
repnz
std
repnz
lret
aaa
lret
fildl
repnz
leave
jmp
hlt
fcomp
leave
sub
cmc
repz
loopne
aaa
repz
ljmp
add
in
xlat
std
leave
sbb
rcl
ljmp
cli
shr
cli
aad
lock
cli
jmp
jecxz
faddl
jmp
xor
not
aam
sti
repnz
jecxz
ds
std
fiadds
stc
fildl
icebp
stc
icebp
aad
call
sarl
ret
in
test
mov
mov
call
fimuls
lret
rolb
aas
not
and
fcmovb
fcmovnu
in
loop
repz
ror
shr
ds
aam
out
clc
lock
loope
out
in
out
out
out
xor
sti
repnz
lock
fidivrs
cli
aad
hlt
ret
roll
xor
mov
std
jecxz
into
cs
sub
cmp
fnop
jecxz
test
adc
leave
call
in
in
nop
cmc
loope
in
in
stc
in
lret
cmp
fcmovu
rcr
in
out
dec
lock
hlt
call
test
fisttpll
aam
sarb
dec
cmp
lret
cld
test
fimuls
cld
out
hlt
xchg
out
stc
cmp
aad
cld
into
adc
xor
xchg
mov
cld
hlt
not
enter
sar
fdivrp
in
cmp
xchg
inc
xor
xor
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
mov
mov
mov
jmp
rcl
leave
leave
fst
fimull
mov
xor
jl
add
orl
xor
shlb
vpsllw
lret
aaa
loopne
cmc
in
aam
cmc
mov
mov
jmp
fcmovne
call
out
into
loope
shr
not
out
out
cmp
aad
clc
cmp
loopne
mov
shl
int
mov
not
xor
idivl
sti
into
into
loope
jecxz
lret
int
fsub
cmc
jmp
cld
aaa
imul
sti
enter
fcomi
loope
sbb
lret
sar
out
sub
idivl
hlt
cmp
loopne
out
fldl
mov
flds
std
xchg
lret
lret
xlat
out
clc
leave
out
icebp
div
xlat
roll
out
addb
int3
jmp
repnz
xor
stc
aas
jmp
cmp
movl
ljmp
out
lret
sti
int3
in
int
in
loope
lock
xchg
rcr
enter
loope
ljmp
cs
hlt
iret
cmp
cli
fsubrp
lock
cli
aad
jmp
out
sarl
fsubp
xor
out
cmp
xlat
loopne
rcl
out
cli
aad
loopne
xchg
in
test
loop
hlt
imul
cmc
ror
in
iret
out
shl
fucomp
aas
test
ret
in
jmp
clc
repz
repz
out
xor
iret
fmul
std
call
std
repnz
fsub
decb
jecxz
test
xor
aam
lret
out
or
loope
repz
loope
loop
loopne
mov
lret
xlat
shrl
loop
shr
out
jmp
int3
out
cld
out
mov
aad
jmp
in
loope
test
cmp
in
ss
loop
sbb
xchg
test
cli
addb
rcr
loop
fsqrt
fdivp
ret
hlt
not
stc
xchg
ret
xchg
xchg
pushl
fnstsw
int3
shr
cmp
sti
adc
sti
std
sbb
in
mov
lock
ror
ror
cmp
cmp
and
loope
std
stc
testb
mov
out
mov
sub
aaa
cmp
fdivr
aas
cmp
std
sar
test
out
in
enter
out
cmp
dec
cmp
cmp
icebp
out
xchg
test
incl
mov
int
in
out
imul
cmp
rcr
shl
ljmp
adc
mov
stc
int
cmc
adcb
aam
fdivrs
int
aad
xor
cli
hlt
mov
in
std
in
aad
ror
leave
cmp
out
ss
cmp
aas
aad
fst
std
xchg
clc
cld
ljmp
repnz
ss
cli
std
enter
fcmovnb
jecxz
sarb
out
cld
jmp
fiaddl
imul
enter
neg
icebp
into
fidivrl
jecxz
xlat
div
aad
sti
test
enter
lret
cmp
cmp
fdivrp
dec
cmc
cmp
lock
filds
mov
test
fcmovu
out
iret
lock
ret
cmp
lret
repnz
clc
int
roll
xlat
mov
out
adc
enter
shl
rcl
fdivr
fnstcw
std
aad
inc
xchg
xchg
in
cmp
sarb
enter
ljmp
test
test
xchg
rol
xchg
test
shl
xor
out
jmp
ror
fcmovnu
rolb
xchg
faddl
cld
mov
xor
call
ljmp
clc
fadds
xchg
ror
cmc
xor
leave
lds
enter
cld
out
lock
out
jmp
xchg
fimuls
in
out
fstp
xor
loop
xchg
out
not
faddl
lock
aad
test
shl
fbstp
sti
in
incl
call
test
ljmp
jmp
jecxz
jmp
out
fadds
shl
out
fcomp
out
jmp
lds
out
shr
aad
xorb
loope
cmp
jmp
jmp
lret
loop
repz
cmc
nop
iret
ds
xor
leave
aad
jecxz
aam
loope
jecxz
shl
mov
call
icebp
loope
in
in
xor
xor
cld
jmp
sti
loop
hlt
jmp
or
in
loopne
enter
ret
cmc
out
enter
aam
shr
cmp
ret
hlt
add
or
test
inc
add
add
jmp
lret
ffree
fst
in
notl
or
out
jle
pop
add
ret
mov
fbstp
icebp
shll
in
in
cld
shll
call
repnz
cmc
cmc
ds
in
int3
int
xchg
xchg
xor
shr
out
fdiv
icebp
out
ss
lret
in
std
call
adc
aam
ror
jmp
incb
fdivrp
out
mov
ror
test
adc
rcl
call
cmp
fchs
out
fcom
enter
jmp
in
lock
sub
fxch
leave
call
cmp
xchg
mov
xchg
jmp
vpmulhw
movb
out
lds
xor
or
cmc
adc
shl
test
fiaddl
in
ret
rcl
aaa
xor
cmp
aad
loop
xchg
cld
enter
nop
in
std
decl
mul
ror
cmp
cmp
repnz
xchg
lret
nop
shr
lock
loopne
loope
jmp
out
int3
xlat
xor
shl
fucom
mov
fadd
jmp
xchg
mov
fsubp
int
aaa
out
fucom
icebp
out
into
in
lock
jmp
enter
out
icebp
aam
ss
shr
fnstcw
aam
jecxz
shl
loop
mov
in
mov
out
nop
lock
shl
xor
sti
cmp
fcomip
fcmovu
movb
int
int
xchg
cld
out
ret
stc
aam
repnz
leave
out
ftst
fcmovb
ds
and
in
in
loopne
xor
in
jecxz
aad
cmp
cmp
stc
sti
rcr
into
xlat
decb
addb
mov
ljmp
leave
in
repz
cmc
ds
xor
hlt
movb
call
aaa
lret
aam
out
out
xlat
fnstcw
ret
hlt
clc
in
mov
filds
out
fcoml
jecxz
repz
int3
sar
test
aad
rol
fsubp
mov
mov
fimuls
sub
cmc
stc
shl
cld
fidivrl
and
std
mov
mov
in
out
enter
cmp
cli
int3
xor
ljmp
mov
sub
loopne
rolb
sub
sti
aas
cmp
shl
loopne
sar
cli
mov
ljmp
dec
shl
clc
enter
repz
in
cli
rcl
rol
xlat
sti
sti
cmpl
leave
in
std
aam
int3
stc
rcl
clc
aaa
fcom
call
out
ret
aad
adc
fsubr
mov
cli
cld
jmp
xor
fcmovb
cld
stc
shl
test
sar
ds
sti
ljmp
xor
xor
cmp
cmp
lret
clc
repnz
adc
fdiv
clc
leave
out
loopne
adc
divl
shr
fcmove
divb
icebp
fcom
icebp
cld
stc
stc
xlat
mov
cmc
in
filds
cmc
xlat
rol
xlat
xor
out
jmp
out
out
mul
sbb
loope
xlat
out
out
in
enter
fst
int
in
cmp
lock
call
les
repnz
fldl
xchg
out
out
xor
xor
cmp
loopne
loop
ret
test
lock
fldl
leave
fld
icebp
fstp
cmpl
fsubr
rolb
int3
xchg
call
loop
out
leave
in
iret
sarl
aas
and
std
clc
shl
sub
test
loope
nop
in
loopne
out
neg
xor
jmp
hlt
enter
icebp
sti
hlt
test
ftst
jmp
out
lock
jmp
int
sar
int3
ffreep
fadd
rcr
enter
addl
call
xor
cmp
cli
aad
fadd
clc
int3
iret
mov
xchg
in
std
xchg
imull
shlb
int
jmp
repz
fcmovnb
mov
in
mov
iret
icebp
ret
repnz
cli
cmp
hlt
fcmovb
shl
stc
clc
flds
sub
repnz
imul
fmulp
in
sar
call
loope
ljmp
iret
repz
enter
leave
cmp
aad
cmc
cmc
fneni(8087
cmp
loop
and
in
jecxz
out
in
cs
lret
ror
repz
repnz
not
mov
fsts
fidivs
clc
cmp
enter
repz
lock
fcmovb
inc
loopne
test
sub
sbb
cmc
add
add
ret
int3
ror
aad
lahf
mov
dec
insb
dec
cmc
jle
pop
add
fdiv
aad
test
in
out
imul
int
in
icebp
sar
fidivrl
int3
addl
jecxz
sti
mov
ret
in
sub
div
jecxz
fcomp
repz
ds
loopne
decl
mov
enter
xchg
das
cs
xor
cmc
sti
jecxz
aad
test
cmp
jmp
in
xchg
xlat
out
leave
aam
aam
jmp
xor
fmulp
clc
call
cli
out
clc
std
test
xchg
imul
aad
xor
into
shr
in
f2xm1
jmp
cmp
jmp
jecxz
xchg
out
aad
in
idiv
int
iret
xor
shll
repnz
shl
ret
rol
clc
std
notb
mov
leave
in
int
iret
lock
xchg
sbb
int
mov
mov
in
int
jmp
ss
fld
test
div
call
enter
rol
int3
into
jecxz
divb
call
sarb
lret
rol
lock
add
sti
cmc
mul
fxch
fdivr
int3
call
ror
cmc
aaa
repnz
out
hlt
test
sarl
cli
idiv
aam
mov
fimuls
int3
ljmp
call
hlt
adc
xchg
xchg
mov
xor
cmc
shlb
in
xor
cmp
lret
faddp
xlat
stc
neg
in
aam
jecxz
into
mov
loopne
les
jmp
ss
test
ret
repz
ret
mov
mov
decb
mov
fnsetpm(287
icebp
enter
aam
cmp
cld
xlat
in
movb
jmp
leave
leave
cmp
fcmovnbe
call
fmulp
repz
cli
push
stc
fcomi
cmp
test
aad
fdiv
call
fdiv
cli
cmp
dec
test
cld
fcmovu
xchg
enter
clc
int
fcmove
out
jecxz
cld
shl
cld
repz
sbb
out
lret
xor
jmp
aam
aam
aam
sti
out
loop
cmc
hlt
rorb
out
enter
rol
test
lret
ljmp
ret
aad
repnz
les
in
ljmp
ljmp
adc
ret
repz
out
lea
int3
int
jmp
test
loopne
cmp
icebp
sti
loop
clc
out
fadds
in
jmp
out
xor
lock
aad
cmp
out
cmc
test
mov
les
jmp
iret
repz
aam
imul
ss
aad
cmpb
sarb
jecxz
jecxz
in
std
test
sti
orl
hlt
out
lock
leave
jmp
rcr
test
cld
lock
mov
mov
xchg
jmp
aam
call
xlat
std
idivb
iret
cmp
out
stc
in
incl
out
sbb
out
loopne
aaa
not
cmp
aad
jecxz
add
repz
jmp
xchg
mov
cmc
mov
repnz
int3
shl
neg
cmp
loope
aam
aas
clc
fcmovnu
jmp
or
xchg
jecxz
in
fmul
shr
int
clc
std
xlat
cmc
ret
xchg
xchg
mov
fisttps
xor
icebp
xlat
cmp
sti
aas
ss
std
iret
fldl
mov
sti
in
out
out
iret
out
shl
shl
cmp
std
fcmove
int
std
sar
mov
loopne
test
dec
into
repnz
jmp
lret
cmp
out
repnz
icebp
idiv
aam
cld
test
xchg
lret
jecxz
ret
out
in
lock
fldz
cmp
std
cld
cmp
in
ret
in
sti
inc
test
into
shl
shrl
sti
clc
xor
int3
fnstsw
ljmp
ret
loop
jmp
fucomi
mov
imul
cmc
ljmp
ret
rcr
ds
cld
mov
xchg
rcll
sarl
xor
clc
idiv
aad
sarl
fstp
jmp
ljmp
lock
ds
aam
into
enter
fsubr
fcom
hlt
sti
fcmovnu
and
test
ffreep
int3
leave
int
subl
lret
in
xor
cmp
xlat
cmc
jmp
lret
mov
shll
aam
aad
shl
cmp
int
jecxz
rol
jecxz
lret
out
loopne
int3
loopne
loope
in
imul
xor
ror
aas
lret
out
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
leave
lret
aad
int
cmpsl
mov
clc
lods
clc
jle
pop
add
fnop
loopne
cld
in
out
enter
xchg
mov
in
xor
aas
cld
fst
cmp
inc
xlat
cmc
stc
rcr
testb
int3
ror
aam
repz
not
test
rcr
loopne
ror
xchg
int
xor
out
into
aaa
stc
in
aam
ffreep
in
rol
clc
bnd
cmp
cld
mov
out
ss
in
fidivrl
cld
hlt
lock
fmul
addb
enter
test
int
lock
neg
cmp
shl
clc
in
fsubp
sbb
std
dec
iret
fcomip
nop
ljmp
xlat
repnz
std
fidivrl
neg
jecxz
repz
lock
fcmovnb
loop
jmp
out
in
fldl
lock
xor
rcr
rcr
fadd
out
test
rol
jmp
test
xor
into
or
lock
xor
sti
repz
fcomp
aad
rorb
jecxz
mov
fistpll
ss
in
cli
clc
shr
lock
shl
fiadds
out
sti
fsub
into
in
repnz
xor
cmp
cld
rol
icebp
mov
rcr
stc
out
dec
or
jmp
test
sar
fidivrs
into
cld
call
ror
out
test
loopne
ror
ss
out
std
std
lret
les
stc
fucomp
call
shl
sub
in
hlt
fdivrs
rol
iret
in
cmp
fldl
mov
xchg
push
call
lret
bnd
out
out
aaa
loope
int3
ljmp
cmp
jmp
aad
ljmp
cmp
cmp
repnz
sbb
loope
lea
xchg
lret
nop
lock
out
icebp
cmp
les
cmc
shl
cmc
adc
xchg
ret
rcl
leave
ret
cmp
shl
ds
into
xchg
rolb
fists
into
aaa
lret
int3
cmp
loopne
out
repnz
cmp
cmc
mov
mov
mov
fdivp
xor
lds
lret
xor
xlat
xor
ljmp
sbb
repz
clc
lret
out
jecxz
int3
loop
jmp
imul
aad
repnz
icebp
ds
in
faddl
cld
aaa
das
shrl
aaa
in
leave
hlt
out
repz
fdivrp
test
out
fmulp
icebp
mov
xchg
out
lret
fcmove
das
out
aaa
fcmovnu
lret
shl
lock
incb
jmp
in
in
out
xor
stc
cmp
shl
in
fldl
sti
stc
int
xchg
fsubrl
out
xor
xlat
das
out
xlat
rcr
lock
test
roll
jmp
lock
int
shl
out
std
ss
cmc
cmp
xlat
cli
adc
call
mov
shr
vpsubsb
std
aaa
int
aad
ljmp
fucom
testb
fucomp
mov
xlat
aad
lret
hlt
in
jmp
aas
adc
loop
fabs
lock
cld
sbb
test
jmp
jmp
aad
cmp
stc
aas
out
test
mov
in
lret
loope
mov
loopne
out
cs
ljmp
loop
lds
mov
out
lock
xchg
in
ror
lret
aad
out
cli
sti
repz
sti
loopne
xchg
mov
and
loop
in
in
stc
bnd
out
cld
icebp
fsubrp
rcl
in
rcr
in
int
sti
xchg
aad
int3
xor
jmp
out
repnz
stc
cmp
lock
inc
clc
jecxz
mov
loopne
repz
repnz
xabort
rol
fidivl
into
into
icebp
out
push
jecxz
ret
sti
loop
jmp
cli
fldl
xor
rcl
xor
std
repnz
cmp
jmp
test
flds
enter
lea
enter
fnstcw
int
ret
xor
jmp
aam
sub
adc
iret
ror
ret
lock
ror
cmp
rcl
cmp
xchg
in
hlt
addl
xor
xor
lret
fsqrt
shl
fdivp
fsub
fcmovu
repnz
out
mov
dec
cld
xchg
in
ljmp
cld
ror
cmp
cmp
hlt
loopne
aad
out
neg
clc
iret
stc
sbb
aad
in
ljmp
xor
jmp
aas
ror
aas
aad
iret
rol
adcb
mov
jle
pop
add
rol
sar
call
clc
test
push
fucomip
test
hlt
rcl
rcr
repnz
xor
test
cmp
xchg
xlat
repnz
cmp
aam
in
ret
loop
fsubr
int
out
test
int3
repz
ljmp
ret
iret
ret
test
call
testb
xor
stc
div
fdivs
test
xlat
addl
stc
in
testl
lret
jmp
jmp
loope,pt
icebp
in
repnz
fisttpll
out
lret
jmp
lock
rcr
xor
div
int3
cmp
in
idiv
out
in
in
xchg
cld
loopne
xchg
lret
into
sub
in
out
cmp
icebp
aam
int
fsubp
hlt
lret
addb
nop
jecxz
in
in
into
cmp
cmc
fcmovbe
aad
loope
icebp
out
in
fcomip
testb
jmp
jmp
loope
cli
aam
cmp
in
in
std
filds
hlt
mov
sar
cld
loopne
xchg
cli
lret
loopne
loop
jmp
icebp
fmul
xlat
jmp
xlat
loop
aam
xlat
inc
not
add
xchg
xchg
aad
int3
leave
lock
xor
loope
hlt
ror
fdivrs
rcr
test
ret
int3
jmp
ret
xchg
das
loope
fsubr
xor
incl
xchg
fscale
fcmovne
enter
jecxz
xor
call
iret
fdivrl
repnz
xor
rcl
std
enter
mov
lock
int3
loop
repz
sarl
out
cmc
rcl
clc
adc
jmp
or
mov
fnstenv
test
cmp
sti
mov
aam
in
sbb
into
enter
hlt
jmp
lock
stc
in
fstpt
fcom
out
hlt
out
out
addb
mov
cmp
out
ror
into
out
cmc
idiv
cld
cmpl
sti
sti
fcmovb
loopne
jmp
decb
loopne
aaa
repz
std
xor
fnstsw
cld
sarb
out
cmp
aam
cld
fdivrp
ljmp
leave
xor
out
out
xor
aas
loope
lret
ret
stc
shl
loopne
leave
and
test
in
in
fstl
xor
out
cmp
icebp
xlat
stc
icebp
out
rol
ffreep
jmp
xor
leave
int3
fnclex
std
aas
cli
lret
cmp
aas
addb
lds
repz
xlat
leave
xor
int
aam
cmp
into
fdiv
aam
addl
shr
iret
rcl
lret
shr
shl
ss
test
stc
aam
in
iret
stc
icebp
out
icebp
shl
in
xor
ljmp
cli
lds
orb
xchg
rclb
jecxz
int
aad
int
in
stc
test
loope
ret
sub
in
addl
sar
repz
fcmove
loopne
xor
out
into
mov
lock
xor
lock
neg
ds
shl
std
ljmp
std
in
aad
out
xor
out
or
out
out
fdiv
aad
imul
int
fcmovnu
int3
and
call
hlt
aam
fldpi
jecxz
addl
fmull
fdivr
mov
jecxz
mov
repz
shl
stc
fdivrl
test
roll
cli
fsubr
xchg
ss
std
in
fdivr
cmp
fucomp
loope
test
jecxz
loopne
mov
divl
into
xor
aam
leave
lock
xlat
cld
repz
hlt
ds
fucomp
loope
out
in
fucomip
int3
call
out
xor
lock
repnz
in
repz
sti
in
in
int3
cmc
nop
and
cs
ret
fcmovnu
sti
jecxz
in
aam
aas
aas
enter
test
xchg
loop
lock
lret
call
fneni(8087
loop
cmp
addl
mov
mov
in
in
shl
clc
int3
shll
into
hlt
loopne
fcmovnbe
fadds
in
xchg
shl
out
loope
shr
lret
icebp
shl
imul
cli
lret
sbb
xlat
bnd
adc
out
jmp
out
jecxz
aad
cmc
shl
xlat
into
ffree
cmp
hlt
fstp
test
sti
lret
out
cmc
int3
mov
rcr
iret
ljmp
xor
add
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
sbb
mov
subl
mov
add
xor
mov
mov
sbb
add
mov
xorl
jmp
enter
fstp
fstpl
sub
fwait
add
jl
add
cmc
div
cmp
sar
loope
sti
sar
sub
icebp
clc
iret
icebp
loope
iret
das
mov
shr
out
cmc
loopne
xor
hlt
rcl
hlt
idiv
call
mov
xchg
hlt
repz
out
leave
cli
jmp
aam
fcomip
ret
mov
fdivp
cld
addl
stc
aam
cmp
fcmovbe
aam
loopne
hlt
xchg
jmp
faddl
nop
out
mov
divl
fcmovu
cli
cld
sar
xlat
adc
fadd
ds
jecxz
in
fsub
xchg
int
in
in
out
fcomi
cli
rcr
lock
sbb
test
add
lock
out
xor
aad
cld
iret
out
ds
cmp
hlt
movb
iret
icebp
xlat
aaa
out
sar
aad
iret
clc
adc
rorb
cli
lret
lret
aad
shl
aam
cmc
in
cli
jmp
fnstsw
loope
rolb
loopne
out
mov
fucomp
fsubp
out
std
call
ret
push
sar
ljmp
loopne
hlt
iret
aaa
stc
aam
call
aas
call
fdivrp
in
in
in
xlat
loop
mov
xchg
sub
rcl
cmp
cmp
aad
ret
mov
loope
add
in
ljmp
fsubr
fcomi
loope
ds
fdiv
sti
test
test
fstl
call
cmp
repz
int3
xor
rcr
jmp
mov
leave
lret
out
xchg
clc
clc
xor
hlt
adc
aad
cmc
repnz
in
loop
in
sar
test
repnz
out
sar
out
jmp
lret
sar
xlat
fninit
hlt
les
mov
out
icebp
repz
jmp
fnstcw
fmul
cmp
iret
fcmovbe
testl
jmp
ss
out
cmc
hlt
jmp
iret
repz
int3
out
roll
sti
out
into
mov
xor
shl
int3
repnz
hlt
sti
jmp
xchg
xchg
jecxz
flds
xor
loop
cmp
fdiv
cmp
in
fdivl
sti
out
ret
rcr
std
or
mov
fsubp
iret
imul
leave
cmc
aad
fcos
loopne
iret
adc
rorb
ffree
in
repz
loopne
aam
out
out
enter
fcmovnb
cli
fst
out
and
mov
and
jmp
lock
jmp
lret
ss
lock
test
mov
faddp
sar
leave
ljmp
in
in
in
out
call
ffreep
aad
xchg
clc
loopne
test
leave
fcomp
xchg
sbb
shl
aaa
cmp
fsubr
aas
ds
ret
cli
loopne
mov
and
ret
jecxz
xor
repz
aad
cmp
cmp
neg
iret
cld
aas
loop
rcl
aad
aad
in
call
out
test
xor
ljmp
cmp
hlt
neg
repnz
and
ret
xchg
loopne
fcmovbe
iret
loopne
clc
loopne
std
iret
cmp
aad
icebp
fildl
test
cmp
roll
enter
out
cld
ljmp
out
mov
stc
out
int
out
out
xchg
loop
hlt
out
jecxz
int
fistpll
in
int3
cmp
rol
jecxz
jecxz
jmp
mov
jmp
hlt
lret
fstpt
fneni(8087
rcl
xor
rcr
ret
les
jmp
int
in
call
repz
cmpb
ffree
fchs
add
sbb
mov
repz
jecxz
in
iret
aam
rcl
loopne
xlat
lds
jecxz
call
loope
xor
xor
test
repnz
fcomip
mov
ret
xchg
into
xchg
shrl
jmp
out
cmp
adc
addl
out
out
in
cmp
xor
aas
std
ds
test
cld
out
flds
mov
out
fdivrp
mov
int
rcl
out
iret
aam
lret
faddp
stc
int3
loopne
lock
fscale
xchg
repnz
out
xlat
xor
imul
ss
loope
sub
loop
std
roll
loope
mov
mov
lock
hlt
out
repz
repnz
jmp
fscale
clc
into
aad
mov
jmp
in
out
rol
movl
and
movl
movl
movl
or
jmp
rcl
aad
aad
fstp
sub
cld
loope
cld
into
ret
jl
add
fldz
hlt
cmp
shl
aad
test
cld
fucom
neg
dec
into
jmp
shr
in
iret
sub
clc
cli
fdivrl
filds
cmc
std
fcmovnu
test
icebp
mov
lret
aad
hlt
sarb
divb
repnz
cmp
xchg
leave
fmull
clc
clc
out
aad
ret
loop
mov
clc
in
aam
les
lret
jecxz
jmp
imul
jecxz
xor
imul
sti
in
repz
sar
aam
hlt
fcmovu
loop
call
das
xor
vpsubsw
xor
xlat
call
out
cmp
loopne
mov
lock
rol
jecxz
aam
into
clc
out
ds
ds
cmpl
xrelease
lret
into
into
iret
xchg
loopne
icebp
xor
leave
int
xor
faddl
cmp
sti
test
out
fcomi
enter
out
loop
shr
out
cmp
out
xor
aam
sti
fdiv
loopne
lock
test
out
sar
fdiv
jmp
iret
aam
out
lret
xor
cli
repnz
in
sar
loopne
clc
mov
mov
xchg
inc
ret
ljmp
clc
incb
sti
cmp
xlat
jmp
orb
in
repz
aad
fstpt
imul
div
cmp
stc
clc
cmc
sarb
int3
sti
fmull
rcr
rcl
into
shl
hlt
xlat
cli
clc
adc
not
aas
clc
jmp
clc
lret
xchg
std
jecxz
aam
rol
icebp
lock
cmp
fucomp
hlt
ret
sti
mov
xchg
jecxz
loopne
lret
in
in
into
mov
jecxz
in
lock
lret
cld
cmp
lds
hlt
idiv
jmp
fistl
sub
out
jmp
aas
loopne
cmpl
cmp
ret
call
enter
iret
mov
shrb
repz
fsubrp
fistpll
xlat
decl
loopne
rcr
in
repz
hlt
cli
cmp
xlat
cli
iret
int3
cmp
cmpl
repz
loop
clc
loope
and
ret
shlb
clc
icebp
cmp
cmp
int
in
xlat
test
out
mov
cld
shr
ljmp
int
xor
cmp
cmpl
repnz
mov
cld
mov
fxch
repz
lock
jmp
sar
cmpb
hlt
fld
call
int
hlt
enter
sti
neg
leave
out
in
inc
fcomi
loop
out
fcomp
loope
ret
mov
ljmp
repz
xlat
fsubr
ljmp
incl
fcmovbe
iret
out
mov
repnz
cmp
stc
call
in
mov
out
in
out
enter
aaa
xor
clc
fcomp
xor
in
repnz
out
aas
loop
cmp
in
icebp
test
jecxz
xor
cmc
in
cmp
int3
in
hlt
out
repnz
xchg
loopne
cli
in
fiadds
xchg
in
cmc
jmp
cmp
sti
aad
jecxz
fidivrs
fsub
addb
out
mov
das
xor
fcom
idivl
fbstp
cmp
fdivp
cli
mul
in
in
int3
jecxz
jmp
in
enter
ss
idivb
ret
aam
cmp
fscale
fst
test
fisttps
in
ret
int
xor
int
cmp
cmp
fcmovb
cld
in
xlat
rol
mov
in
mov
shl
in
aad
rol
std
fdivrl
loop
ds
icebp
repnz
out
in
in
incb
call
jmp
out
jmp
cmp
in
fdiv
out
out
call
shr
icebp
ror
test
xlat
int3
inc
cmp
jecxz
jecxz
out
call
call
call
out
ss
xor
out
call
call
les
in
jmp
int
cmp
fadd
cmc
sar
shl
std
xchg
lret
cli
ret
or
in
loopne
shl
out
lock
cmp
std
cmp
idiv
sti
sti
nop
enter
lea
das
xor
out
imul
cs
leave
sar
lds
cli
in
mov
in
fisttpl
int
xor
lret
hlt
cmpl
fsubp
repnz
repnz
ffree
mov
test
mov
repnz
cmc
sub
int3
jecxz
jmp
xlat
sbb
cmp
clc
lock
clc
out
jmp
in
hlt
out
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
xor
movl
movl
xor
jmp
into
aad
lret
rcr
mov
add
add
mov
pop
add
int
leave
cmc
cmp
in
fcomp
rolb
cld
fisttpl
loop
enter
ljmp
cmp
loop
mov
fdivr
stc
stc
xchg
rol
iret
xorb
lock
fldlg2
shl
repz
clc
loop
les
or
std
call
int3
out
cmc
sti
fld1
lock
enter
shr
jecxz
ret
vcvttpd2dq
int
fsubr
out
out
fdiv
loop
sar
in
enter
iret
adc
in
rorl
mov
loop
icebp
out
fucompp
adc
cmp
lret
filds
xor
fadd
aam
ljmp
fucomip
xor
repz
int
leave
out
call
sub
enter
jmp
fsubp
loope
call
xor
sti
int
cld
fistpll
cmp
shl
sub
and
int
in
int3
out
divb
cmc
leave
cmp
leave
test
in
lret
lret
jmp
not
iret
rcr
out
cmp
fldl
fucom
testl
sub
into
leave
aaa
ss
lret
fsubr
lock
fcmovbe
jmp
sar
out
enter
lds
divl
jmp
into
imul
sti
clc
fucomp
ds
test
xchg
xchg
or
f2xm1
loope
loope
xor
leave
xor
fsubr
rcr
fdivr
cmp
loope
cmp
mov
mov
shr
sub
cmp
aad
idivl
loopne
fld
xlat
lret
lea
bnd
leave
sti
xor
cli
repnz
ss
xchg
fdivrp
jmp
cld
mov
in
mov
aad
std
int3
int3
cmp
rcr
idiv
add
fiadds
in
fcoml
xor
xlat
cld
cli
out
shl
out
rol
in
test
enter
int3
in
fimuls
out
leave
enter
aam
xor
incb
ljmp
mov
iret
jmp
in
fldl2e
fidivrl
ds
cli
shr
call
in
xchg
icebp
jmp
enter
icebp
loop
cli
aad
repnz
out
cmp
repz
jmp
lret
ljmp
xor
fnstsw
lret
fcos
aad
div
sti
not
mov
dec
lret
mov
shl
in
ljmp
in
out
xlat
sti
and
idiv
fcmovne
ffreep
ljmp
aaa
xor
in
jmp
cmp
shl
add
cli
xchg
fmulp
mov
lret
hlt
in
fcmovnu
iret
out
aad
enter
xlat
test
mov
in
xchg
repnz
ss
ljmp
shl
cmp
xor
out
out
out
addl
test
xlat
fdivs
in
sub
stc
std
cli
fimull
ljmp
rol
enter
out
cli
lock
cld
aas
rol
cmp
ret
nop
fucom
loope
ret
shll
fcomp
call
in
icebp
stc
iret
aad
rcl
loopne
cli
enter
nop
in
xchg
out
in
lret
icebp
int3
in
clc
out
div
test
cld
std
out
test
clc
xchg
xor
hlt
int3
ljmp
stc
cmc
loop
repnz
test
fimull
into
xchg
xchg
repz
int
cmp
fldl
jecxz
loope
stc
xchg
xchg
ljmp
icebp
in
fstp
xlat
cld
xlat
xlat
hlt
loop
sar
fadd
hlt
xchg
xchg
xor
xor
cli
cmp
inc
ret
aam
popl
jmp
in
clc
ret
cmp
aam
fcomi
into
ds
ffreep
faddl
or
xor
fprem1
lock
fmul
loop
std
repz
in
faddl
cld
rcl
leave
cli
sarl
aam
lret
out
lret
clc
out
icebp
roll
mov
leave
mov
loope
ror
out
out
jmp
in
xor
in
test
fcomp
icebp
shl
aad
incl
sti
in
shlb
call
int3
filds
int
xor
add
sub
out
test
int
jmp
fcomi
xlat
repnz
lret
loopne
icebp
sti
lock
adc
movl
fmul
xchg
mov
add
jmp
aad
fstl
cmp
xchg
jl
add
loop
sti
xor
out
hlt
out
sti
stc
out
cmp
sbb
fsubr
test
std
enter
hlt
les
rcl
sub
imul
rol
cmc
sar
fsubp
cmc
mov
sub
jmp
mov
loop
out
aad
out
aaa
fcomip
in
ss
in
xlat
inc
repz
ret
clc
incl
xchg
loopne
sub
aam
das
hlt
clc
aaa
into
jecxz
icebp
dec
in
xor
leave
in
fcmovu
iret
jmp
shrb
stc
cmp
out
cmp
cmp
faddp
out
test
mov
lret
jmp
sti
mov
ljmp
call
hlt
clc
rol
aad
jmp
iret
xchg
fxch
repz
fcmovnb
fcom
lret
cmp
shl
xor
mov
lock
rol
in
enter
cmp
xor
in
not
call
jmp
int
mov
ljmp
repz
aas
std
fdivr
sar
cld
xlat
in
nop
ret
shr
jmp
ljmp
loope
int3
cmc
test
xchg
loope
loop
lock
loopne
vcomisd
sti
repnz
rcl
adc
out
test
ror
out
cmp
xchg
mov
leave
jecxz
cli
xor
fcmovnbe
fdiv
into
clc
in
shl
mov
jmp
call
ret
test
leave
jmp
int3
out
test
in
loopne
enter
shl
mov
shlb
icebp
out
pushl
aad
iret
leave
cmp
mov
mov
in
xor
xor
in
in
sarl
loopne
ds
test
jmp
icebp
lret
mov
int3
aad
shr
ret
cmc
out
cmp
rcl
repz
cli
repz
movl
jecxz
div
int
repnz
xor
in
aas
aam
faddp
rol
loop
ds
ror
xchg
in
int
xor
call
repz
jmp
test
fdivrs
fisttpll
cli
xchg
leave
out
test
lock
xor
hlt
jecxz
shr
xor
ss
lock
cmc
repnz
ficoms
out
hlt
jmp
jmp
test
cmp
incl
ffree
in
xchg
test
fcmove
out
icebp
shl
cld
clc
fadd
xlat
shl
sar
fsubr
std
aad
xchg
mov
xchg
repnz
in
leave
out
xlat
aam
out
in
fstpt
jecxz
cli
fdivrp
cli
jmp
jecxz
out
cmc
xor
neg
cmp
jmp
rorl
fcmovnb
int3
xchg
jmp
out
in
iret
aam
cli
cmp
cmp
int3
rcr
mov
fcmovb
bnd
fcomip
int3
jecxz
jmp
ljmp
in
clc
fdivr
cmp
fcmovnbe
clc
fadds
mov
into
test
fsubr
in
std
rcl
cmp
mov
fimull
fld
iret
fmul
sti
aam
iret
fdiv
out
shlb
out
lds
loope
jmp
xchg
fcoml
in
xor
lret
cmp
adc
jmp
out
fdiv
out
ffreep
xor
jmp
lock
cmp
fnstsw
shl
iret
in
movb
int
cld
loop
cld
loope
rcl
int
shl
aas
cmp
cmp
jecxz
ret
out
fdivrp
in
mov
lret
divb
cmp
xor
aam
fidivl
cmc
fcom
iret
jecxz
fcmovu
loope
iret
fcoml
out
call
shl
repz
jmp
push
loop
and
ds
into
clc
vpaddusw
test
hlt
ror
test
repnz
xchg
ljmp
ret
jecxz
int
icebp
test
aas
cmp
loope
in
int3
loopne
lea
stc
xor
cmp
call
inc
lock
in
jmp
std
dec
fsubr
add
fld
call
in
std
repnz
loop
shr
mov
adcl
jecxz
sub
jmp
xor
call
idiv
cld
rorb
into
fmul
fsubrp
subl
xor
fdiv
aaa
lret
cmp
fadd
testb
xlat
xchg
sub
mov
in
loop
out
ljmp
sbb
cmp
fucom
test
mov
test
sti
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
jmp
iret
ror
aas
aad
iret
shlb
lods
jmp
into
sbb
jl
add
shl
xor
out
ret
hlt
ljmp
loopne
shl
testl
aad
lret
ss
repz
call
repnz
roll
mov
iret
int
fiadds
sti
jmp
aam
sti
clc
ljmp
fst
mov
hlt
lret
jmp
mov
fnstenv
stc
ljmp
loopne
fiaddl
repz
out
xor
into
int3
out
aaa
sar
sarb
out
cmc
repnz
repz
call
lret
mov
out
in
test
lret
in
in
int
enter
not
ret
lret
hlt
cld
fsubp
into
clc
repnz
jecxz
cs
cli
repz
loope
cmc
rcl
ljmp
fucomip
xchg
xchg
in
cs
aam
xor
cmp
jmp
hlt
testb
enter
mov
rcll
xlat
iret
enter
fdivr
call
out
std
fldl
mov
xor
enter
cmp
in
test
mov
stc
sub
xchg
or
fildll
out
ljmp
jecxz
aas
aas
hlt
loop
mov
leave
loopne
xchg
aaa
enter
in
cmp
cmp
loopne
ss
jmp
not
stc
sub
roll
ljmp
repnz
into
into
aam
sti
fsubrp
in
testb
out
cld
iret
mov
aam
enter
xor
ror
xlat
aam
out
aam
aad
ljmp
loop
cs
xor
xor
shr
aam
cmc
idiv
and
fcomip
mov
jmp
out
cmc
iret
icebp
loopne
in
ret
ror
repnz
ror
ret
hlt
shl
in
cld
mov
loopne
jecxz
not
shr
cmp
xor
fnstsw
cmp
aam
hlt
mov
fiadds
xchg
aad
int3
jmp
hlt
lock
sar
repz
xlat
out
adcb
in
in
aam
jmp
std
fcmovu
repz
jecxz
fcmovb
fucomip
clc
cld
fisttpll
aas
in
hlt
ror
lret
xor
in
fmul
cmp
not
std
mov
mov
cli
xchg
in
adc
rcr
jmp
cmp
out
int3
lret
rcr
out
fcmovb
out
loop
lret
in
incb
cs
int
cmp
enter
cmp
ret
call
fnstsw
loopne
loopne
icebp
hlt
out
in
clc
cmp
neg
fidivrl
fsubr
in
icebp
sti
jmp
lret
in
jecxz
jecxz
xchg
rcl
ret
lret
in
fdivrl
ljmp
xchg
jecxz
cli
in
in
in
shl
mov
int
xor
loop
lock
stc
fistpll
jmp
mov
mov
fdiv
int
jmp
out
shl
cs
iret
jmp
in
in
jecxz
xchg
out
leave
leave
and
shrb
sti
xlat
clc
idivb
rolb
ds
out
mov
jmp
mov
in
sti
in
cli
loope
ret
into
out
cmp
in
mov
ds
xor
in
cmp
adc
sarb
fmuls
in
ret
addl
aaa
shl
xor
clc
add
lea
mov
shr
int3
lret
sarl
fldln2
cmp
out
add
out
sti
mov
loope
icebp
in
fstp
fmul
test
in
cmp
int
cmp
out
jmp
or
leave
fst
repz
faddp
fdivs
sti
enter
cmp
loope
loope
xlat
enter
out
adc
std
int3
int
ret
cmc
loop
xor
cmp
shl
xor
call
xchg
out
jmp
call
int
lock
bnd
loop
test
orl
out
fsub
in
in
fsubr
aaa
out
lret
fdivr
fcom
cmp
ret
aaa
aas
iret
ret
fldpi
jmp
xchg
cld
aam
leave
sti
in
hlt
fstpt
cmp
xlat
faddl
clc
loope
icebp
fiaddl
xor
repnz
into
cmp
int
add
ds
add
std
test
nop
mov
xor
fnstenv
stc
int
out
cmp
ds
sti
test
hlt
cld
decb
xchg
fs
add
fs
add
rol
add
inc
jl
add
cli
je
push
movl
jmp
and
jmp
enter
fcmovnbe
int
pushw
jle
cmpsl
shrl
mov
jle
pop
add
fstp
icebp
nop
mov
xor
aam
lret
xor
cmc
icebp
loop
mul
in
roll
out
xor
clc
ss
adc
out
cmp
xchg
in
int3
ljmp
in
cmp
sti
ljmp
fiaddl
xlat
leave
fcmovnu
fcmovnu
in
mov
mov
cs
fmul
not
out
lret
fdivs
sti
loopne
fucomi
movb
aad
aam
in
sarb
cmp
jmp
cmc
fdivrp
xchg
fcmovne
call
lock
fdivp
leave
loope
shlb
ljmp
cmp
loopne
stc
rorb
incl
fmulp
shll
call
aas
xlat
in
aas
mov
hlt
mov
loopne
in
xchg
out
int
shl
hlt
leave
ds
fldl
icebp
sar
sti
int3
mov
in
fucomip
das
repz
fdiv
std
jmp
rcr
rol
hlt
rolb
std
loop
out
jmp
call
cmp
xorl
cmp
lret
fucomip
out
jmp
mov
xlat
aam
ret
cmp
xor
xor
aas
flds
leave
orl
mov
call
jecxz
aaa
xlat
sar
ss
aad
loopne
vpmuludq
cmc
enter
rolb
into
das
icebp
in
xor
aam
into
into
sti
ds
fadds
in
jecxz
xor
sub
xor
hlt
hlt
cmc
shl
lret
cmp
fdiv
test
xlat
repz
in
fdivrp
ljmp
shll
sti
aad
out
into
out
out
in
icebp
ret
fstp
out
fucomip
ljmp
ljmp
stc
leave
cmp
cmp
clc
aas
shl
ffree
xlat
fsubrp
xchg
int
loopne
loopne
mov
div
in
in
fnstenv
loopne,pt
loope
xlat
jmp
loop
out
cmc
ds
cmp
push
rcl
ljmp
fadd
cmp
testb
in
add
loope
into
out
xor
loope
ret
loope
test
mov
adc
divb
int
hlt
leave
cmc
aas
in
cld
fdivr
in
aam
flds
into
clc
loopne
lret
xor
in
xor
shl
xor
jmp
iret
xchg
loopne
clc
faddp
ret
lea
out
vpaddq
sti
rcl
lock
cmp
fnclex
mov
xor
sti
shr
xchg
ljmp
leave
loope
clc
hlt
inc
cmp
faddp
jmp
std
icebp
fiaddl
aam
shl
sub
dec
cmp
fyl2xp1
loop
add
shl
sbb
in
cmc
into
mov
xor
int
out
sarl
cld
xlat
cld
cli
test
repz
cmc
mov
fincstp
fcmovnu
cli
rcr
nop
lock
rol
repnz
jmp
aam
xor
cli
stc
sti
fsubrp
cmp
ret
out
clc
in
incl
xchg
int
into
iret
in
aam
out
int
fiaddl
out
idivb
lds
shl
sbb
cld
repnz
cmp
lret
cmp
enter
rcr
shl
jmp
loopne
loopne
jmp
in
lock
iret
xlat
shl
fsubp
addl
loop
xchg
cld
leave
rorb
cmp
mov
aad
aam
cmp
mov
test
mov
out
jmp
iret
ljmp
repnz
loopne
rol
in
shl
jmp
cld
int3
repz
shl
rcl
clc
vpsubw
xor
out
in
fsub
fcmovnu
std
mov
cmp
call
cmp
fstl
lret
in
cld
lock
ds
repnz
fdivrp
jecxz
fimuls
sub
ror
enter
int3
cmp
loopne
loopne
hlt
lret
fisttpll
jmp
rcl
iret
int
cmp
sarl
fsubp
into
ljmp
inc
test
iret
shl
lret
loop
aam
in
fdivr
jmp
shl
std
shl
std
out
int3
fmul
call
jmp
repz
sti
into
cli
cmp
rcr
in
cli
int3
inc
int
lds
ljmp
enter
sbb
fdiv
out
mov
fmull
iret
xchg
hlt
rol
xor
icebp
xlat
leave
int
aas
cmp
rcl
loop
xchg
idiv
mov
and
mov
xorl
jmp
leave
aam
xlat
in
fsubrl
notb
add
clc
addl
ljmp
iret
sar
loope
sbb
fsubrp
in
loopne
leave
fmuls
out
sub
ljmp
enter
fidivrl
test
call
jmp
xchg
icebp
jmp
les
ss
ss
cmc
in
rolb
loop
ret
dec
div
in
xor
xor
jmp
ret
cmp
in
aas
hlt
sar
std
orb
test
leave
test
repz
loopne
cmp
out
div
and
orl
cmc
iret
in
in
div
repz
hlt
faddl
jecxz
fildl
add
fsubr
stc
shr
loop
xor
add
clc
lock
test
in
fsub
fsincos
lret
lret
mov
into
lret
shl
lret
loopne
fucom
clc
ffreep
fucom
leave
mov
xacquire
int
cmp
shl
lret
lds
shl
loopne
in
aam
xlat
ror
out
shr
jmp
loope
xor
cli
ss
out
into
sti
call
mov
lret
sub
sar
fdiv
icebp
and
into
iret
cmp
jecxz
cmp
in
out
in
in
sub
in
icebp
enter
cmp
rcl
fcmovbe
lock
les
fcmovnbe
in
repz
ljmp
fucomip
aam
inc
rcl
fcom
repz
ljmp
xchg
cmc
mov
out
ret
lock
xlat
stc
int
aam
fidivrs
stc
in
out
ds
loop
out
xchg
cmc
int
xor
fcmovu
imul
loopne
shl
shl
cli
test
incl
jmp
shl
jecxz
ret
out
sbb
into
cmc
fcmovu
fcmovne
fadd
out
icebp
mov
jmp
push
cld
fnstcw
cmp
jmp
xlat
rorb
std
loop
aam
leave
fdivs
xor
ljmp
in
les
jmp
fcmovnu
enter
fsubp
hlt
cmp
into
ljmp
ljmp
hlt
mov
leave
or
rcll
leave
fidivrl
xor
fnstsw
cmp
fst
xor
cmc
test
test
lock
xor
cmp
icebp
int3
lret
fsub
int3
aad
ret
repnz
call
stc
fdivr
lret
lock
cli
cmp
stc
xlat
shl
cld
loopne
aam
mov
fmuls
xor
xor
in
cmp
lock
out
fcmovbe
fmul
aas
shl
cli
fldl
decl
ds
out
hlt
cmp
ljmp
repnz
ljmp
jmp
sti
lock
in
xlat
rcr
iret
shl
std
out
ds
clc
call
jmp
out
ret
out
in
leave
cmc
in
fdivrp
into
cmp
les
in
out
jmp
loop
popl
shr
xlat
in
call
cmp
stc
repz
rcl
jmp
ljmp
in
aaa
clc
fadd
int
std
in
cmp
cmp
ljmp
cmp
mov
jmp
out
xor
loope
int
ror
cmp
call
in
mov
aam
out
cmp
out
aam
cmpl
mov
and
sar
div
in
out
in
ss
lock
ret
vpavgw
fsubp
out
int3
jmp
rol
in
ss
int3
xlat
icebp
in
cmp
loop
cld
std
fadd
fisttpll
in
repz
aad
ret
aam
in
ss
int3
call
xor
std
fst
ljmp
xchg
out
leave
aam
out
stc
out
cmp
rcl
fldl
std
incb
out
iret
test
rol
in
idiv
call
std
int3
cmp
lock
stc
std
cmc
fsqrt
movb
aad
in
jecxz
loop
lret
out
lret
div
hlt
aad
sbb
stc
clc
fists
int3
loope
lds
cmp
lock
into
leave
iret
lret
or
repnz
xchg
fadds
iret
out
int3
jecxz
cmp
in
cmp
cmc
sbb
addl
mov
xchg
fstp
jecxz
mov
repnz
call
sub
clc
flds
adc
mov
jmp
leave
aam
rcl
aam
insb
bound
jle
pop
add
int
jmp
xchg
in
test
imul
fdiv
lret
cmp
sti
cmp
loop
mov
std
leave
fsubr
shr
icebp
in
in
leave
fdivr
sti
cmp
fxch
fdivrp
in
shl
fisttpl
out
iret
mov
sub
fstpt
ss
cmp
lret
iret
and
clc
ret
addl
xchg
lret
repnz
shlb
das
aad
repnz
lret
test
fcomi
mov
mov
in
mul
ret
xor
ror
idivl
repz
ret
jecxz
xlat
cld
leave
ds
ljmp
fcomip
icebp
xor
aad
int3
repz
imul
testl
xchg
sti
out
cli
clc
jmp
fdivs
out
out
cld
xor
cmp
iret
test
cld
aas
clc
neg
addl
ret
fmul
in
cmp
into
addl
cld
test
in
int3
repz
ret
lock
rcl
in
sar
repz
mov
rorb
rcr
in
ret
int3
out
cli
lret
cmc
cmp
call
fldl
test
xchg
out
xor
repz
out
leave
jmp
aaa
loopne
loopne
loop
test
repnz
test
out
icebp
mov
repz
lret
fnstcw
jmp
lret
aam
and
jmp
loope
call
int3
out
sub
hlt
shr
xor
ret
xlat
xchg
cmc
repz
mov
jmp
lock
hlt
iret
int
out
cmp
int
cli
addl
loop
ret
lock
repnz
int3
not
int
int
lock
aas
repz
ror
aad
aad
sti
fadd
mov
mov
loopne
int
into
not
das
shr
xor
lock
cmp
add
xlat
xlat
clc
clc
out
lret
adc
lock
loope
in
lret
fnstenv
std
xor
xlat
testl
and
out
xchg
orb
sub
cmp
fdiv
cmp
fldl
jecxz
jmp
loop
out
in
ljmp
lret
fstp
cmp
test
ljmp
jecxz
mov
aam
aam
xor
int
neg
cld
std
stc
xchg
fscale
fmull
shl
iret
cs
in
fprem1
div
std
loope
and
flds
add
hlt
aas
fidivs
in
cli
cmp
rcl
out
div
faddl
addl
fists
shr
repz
shlb
int3
cmp
xlat
xchg
cmc
cld
ror
out
loope
int3
test
int
int
cli
aad
cmp
in
out
fdivp
aad
into
fadds
out
out
mov
iret
fsubrs
rol
iret
int
into
out
shr
ret
fsub
test
fldpi
out
fsubp
enter
sub
repnz
std
fidivrl
rcl
in
shl
lock
cli
ljmp
adcl
f2xm1
enter
in
ret
vpaddd
aam
call
fiaddl
int
out
clc
in
jmp
cmp
inc
fcmovbe
hlt
hlt
out
ret
faddl
rol
in
sub
repz
loope
test
fcomip
fstp
jecxz
xchg
fisttpll
loope
rcr
call
lret
sti
ffree
cmp
leave
loop
jmp
loop
test
hlt
out
cli
adc
ljmp
jmp
mov
in
jmp
out
mov
rcl
les
stc
cmc
cmp
xor
in
leave
ret
shr
jmp
out
repz
loopne
int3
ror
shlb
call
cmp
cld
sarb
add
sar
mov
enter
lret
loope
test
repnz
cmc
cmp
roll
jecxz
ret
fcmovnb
frndint
cld
xchg
adcl
clc
icebp
cmc
cmp
fdivrp
aaa
cmp
sti
test
mov
fisttpll
sub
jmp
fidivrs
fadd
shl
xlat
icebp
sarb
lret
test
mov
icebp
xchg
cld
out
incb
out
fnsave
in
fiadds
test
loopne
lock
cs
lock
aad
shl
lret
fcmove
in
shl
aam
stc
test
cli
loopne
xchg
int3
aad
lret
shr
into
hlt
iret
aas
out
call
fdivs
rolb
rol
add
cmc
imul
add
rol
ret
ret
ret
fwait
cmp
iret
stos
jle
pop
add
xchg
dec
into
icebp
mov
xchg
jmp
cmp
cmp
inc
fprem
out
iret
cmc
fcmovu
fadd
ds
out
in
int
ret
ss
int
cli
cmp
in
in
out
ret
int
stc
int3
loopne
mov
xchg
ror
in
ss
out
aad
lret
xor
xlat
jecxz
mov
int3
out
fmuls
rcl
xor
out
lock
int3
out
shr
add
xchg
fcomip
hlt
fcmovb
out
repz
aad
fucomi
aam
rol
aad
lock
mul
loop
in
sti
neg
fmull
lret
rcl
call
fcomip
cmp
lock
test
test
in
xor
out
out
jmp
test
stc
shl
leave
repz
out
in
into
mov
aad
xor
ss
enter
out
test
jmp
out
mov
test
int
icebp
aad
lret
in
loopne
loop
in
out
aaa
sti
shl
cld
neg
idiv
ret
iret
enter
lret
and
in
neg
aaa
shl
fsub
cmp
aam
shl
call
fsub
ljmp
iret
aaa
enter
int
cmp
fsubp
idiv
mov
xchg
jecxz
repz
repnz
shr
cli
lds
aad
out
ret
stc
mul
fld1
out
icebp
rcr
roll
out
fprem1
aas
cmc
cmp
cmc
cmp
loopne
sbb
mov
in
iret
loopne
loopne
cmc
jmp
xor
int3
icebp
sti
out
lret
ljmp
sti
fadds
into
in
loope
fdiv
out
call
div
fiadds
xchg
mov
fucomp
jecxz
shr
aam
fsubr
ss
bnd
flds
ljmp
jecxz
in
xchg
shr
in
lret
aam
and
idiv
shl
aam
ror
mov
test
addb
ret
lret
cmp
sbb
lock
icebp
jecxz
lock
or
shl
ret
fadd
call
faddp
in
sbb
or
lret
iret
shr
mov
sar
rcr
in
icebp
lret
sti
cmp
in
ds
aam
mov
mov
jecxz
out
std
int
ret
fninit
aad
pushl
stc
cli
ret
ds
ret
out
fiadds
xchg
fmulp
ljmp
cmp
cmp
cmp
std
leave
ffreep
cld
sub
jmp
sbb
xor
ror
loopne
into
cli
fst
call
jmp
xchg
mov
std
add
ss
lock
out
loope
cli
in
ret
repnz
lea
out
test
shlb
sar
fdiv
cli
loope
loopne
cmc
fisttps
std
cli
sti
iret
iret
fsubr
cmpl
lret
cmp
aaa
cmc
cli
out
cmp
xlat
loopne
test
mov
rorl
loopne
in
enter
fistpll
fld
in
fucomp
repnz
test
orl
sar
in
cmp
cmc
repnz
lock
icebp
fidivrl
aam
loope
out
in
rolb
in
repz
in
cmp
enter
int3
incl
stc
aam
sbb
mov
shl
fsub
sar
clc
in
cmp
iret
cmp
in
in
lret
cmp
mov
mov
ret
ror
in
icebp
enter
std
sbb
cld
xlat
out
cmp
in
jecxz
xchg
int
rcl
rcl
sarb
xor
jecxz
xor
idivb
ret
hlt
ret
fisttpl
test
mov
shlb
int
ljmp
out
test
rolb
out
int
in
leave
enter
cmp
cmp
cmp
clc
ds
cld
xchg
repz
loope
aam
std
flds
jecxz
into
lret
rcr
cmp
lret
rcl
int3
aam
sti
fadd
cld
lret
ljmp
xlat
xor
enter
cli
in
xchg
add
mov
mov
fsubp
xor
fxch
cmp
int
faddl
in
decb
into
call
std
int
lock
repnz
int
cli
cmp
in
out
lret
clc
cli
lret
sub
ljmp
cld
call
cli
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
orl
jmp
into
ds
rcl
aad
arpl
pusha
shrb
scas
jle
pop
add
loopne
in
in
loop
ljmp
adc
jmp
cmp
in
xlat
rcl
sti
aaa
rolb
ret
xchg
mov
out
mov
sub
int
in
fcmovnu
ss
icebp
test
out
incl
xchg
lock
into
jmp
lret
int3
call
iret
test
cmc
cld
sti
ret
in
into
shr
in
aam
lret
out
ror
cli
jecxz
in
repnz
sbb
leave
in
xlat
mov
xchg
shlb
cmp
in
cmp
ljmp
ffreep
xlat
loope
lret
decb
fmul
loop
mul
in
fucomp
jmp
cmp
cmp
cld
cmc
hlt
addl
fldpi
mul
loop
out
call
enter
call
aas
test
repz
cli
mov
in
cli
cld
xchg
in
in
iret
ss
into
xlat
sub
std
flds
enter
out
addb
loop
stc
cmp
ljmp
lock
cmc
fadd
fsub
sti
mov
clc
mov
lock
out
lret
int
repnz
leave
aam
idivb
out
out
ret
in
enter
test
lret
in
xlat
xor
fsub
xor
rcr
cmp
in
addb
xchg
mov
xor
aam
cs
cmp
cmp
rcl
sub
shr
jmp
mov
int
lds
fdivs
std
aaa
ss
shl
sti
cmp
cmp
fmuls
fucom
icebp
lret
jecxz
xor
repnz
aad
sar
fadd
rcr
sti
out
icebp
repz
jmp
test
call
xchg
shl
lock
cli
idiv
lock
cmp
in
shl
ffree
sub
or
iret
jmp
enter
loope
enter
cmp
test
lret
mov
in
shr
xlat
xor
ss
ds
fdiv
shl
adc
fsubr
lea
jmp
lret
int
idiv
loop
out
cmp
repnz
addl
xchg
cmc
lds
shl
cmp
fdivr
enter
sti
rol
loope
fucomp
xchg
rcr
ljmp
lret
repz
iret
fnstenv
repz
addl
xlat
jmp
iret
int3
das
out
into
int
fidivrs
sti
cmp
fsub
addl
mov
lock
aad
aaa
aad
xlat
ds
sub
icebp
icebp
icebp
aad
hlt
std
loop
lock
iret
lret
mov
iret
jmp
ror
in
ds
in
shl
jecxz
mul
test
mov
in
fst
in
call
xor
out
xor
sti
icebp
sti
out
sti
xchg
repnz
fucomi
out
sbb
test
movl
aas
aad
test
hlt
fisttps
hlt
jmp
icebp
mov
test
rol
xor
ror
fdivrl
leave
cli
cmp
loop
iret
repz
leave
loope
xlat
loop
xchg
or
repnz
xchg
jecxz
imul
xor
fstp
aad
std
hlt
out
sar
out
jecxz
aam
mov
fiadds
in
xlat
repz
ss
cld
lret
cmp
fprem
hlt
cmp
fsubr
fldl
out
fstp
into
rorb
jmp
aad
lock
jecxz
xchg
stc
ljmp
and
das
fcomi
jmp
repz
lret
in
clc
movl
addb
aaa
sub
aam
loopne
in
std
rorb
adc
lret
xchg
rorb
icebp
clc
lock
ss
lock
cmp
xor
shl
cmp
lret
or
out
jmp
jecxz
shr
cld
xor
rol
out
incb
in
mov
lret
int
mov
icebp
int3
cs
int3
shl
repnz
cmp
rcl
sub
xlat
fninit
out
xchg
jecxz
fsubr
aad
hlt
enter
loop
hlt
fcomp
mov
fcomp
enter
mov
ds
repnz
cmp
cld
sti
into
fcmovne
sti
mov
stc
xchg
fadds
xchg
shr
ljmp
std
hlt
hlt
shl
ror
cld
neg
faddl
mov
xchg
loopne
call
aad
cmp
aas
clc
xlat
loope
fcmovu
loop
fst
out
stc
sub
fbstp
aad
cmp
stc
mov
sbb
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
imul
mov
jmp
leave
sarb
int
leave
jle
mov
pop
insb
adc
jl
jmp
std
shl
aad
mov
in
test
aad
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
andl
push
subl
push
xorl
xor
lea
xor
movl
or
andl
xor
add
adcl
push
orl
lea
subl
push
push
xorl
lea
movl
inc
subl
xor
negl
xor
call
movl
movl
mov
mov
jmp
adcl
xor
movl
xor
sbb
xor
addl
xor
movl
incl
mov
mov
cmp
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jb
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
andl
movl
sub
lea
mov
sbb
mov
mov
and
lea
neg
mov
xor
or
sub
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzwl
sub
mov
mov
mov
add
mov
add
xor
mov
add
not
mov
mov
mov
cmp
mov
movl
mov
movl
je
sub
mov
xor
add
adcl
imul
mov
movl
jmp
sbbl
xor
movl
add
mov
xor
mov
mov
sub
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
add
mov
xorl
mov
xor
mov
orl
xor
movl
add
movl
cmp
movl
jne
push
pushl
andl
pushl
andl
call
mov
mov
mov
xorl
mov
mov
mov
mov
movl
movl
andl
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
mov
xorl
xor
sbbl
add
movl
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
xorl
xor
sub
lea
mov
mov
xor
orl
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
and
mov
movl
mov
movl
or
mov
mov
xor
addl
add
cmp
movl
je
xor
mov
xor
addl
add
add
mov
mov
mov
sub
and
mov
xor
and
mov
orl
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
xor
add
adc
add
mov
movl
cmp
ja
mov
and
mov
movzwl
sub
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
push
push
call
mov
dec
mov
jmp
orl
imul
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
xor
add
and
mov
xor
adc
add
add
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
push
movl
mov
movl
mov
mov
push
not
mov
movzbl
mov
cmp
movl
je
mov
mov
xor
addl
add
cmp
je
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
xor
add
push
mov
adc
pushl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
mov
sbbl
add
andl
xor
movl
cmp
jne
and
mov
mov
movl
add
mov
mov
mov
movl
xor
and
push
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movzbl
adc
mov
xor
mov
addl
xor
subl
add
movl
mov
mov
movl
movl
mov
movl
push
mov
movl
mov
cmp
movl
je
orl
mov
addl
xor
adcl
xor
xorl
lea
negl
xor
movl
cmp
movl
jne
jmp
add
mov
xor
addl
add
andl
mov
movl
mov
xor
and
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
adc
movl
dec
movl
mov
push
mov
adc
xor
mov
add
mov
xor
or
mov
add
mov
push
push
adcl
test
movl
je
mov
mov
mov
sbb
mov
mov
imul
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
sbbl
mov
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
mov
xchg
sub
xor
orl
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
xor
sub
xor
add
mov
movl
mov
movl
je
andl
mov
xorl
xor
andl
add
cmp
jne
adcl
pushl
call
subl
mov
movzwl
add
mov
mov
mov
or
mov
sbbl
mov
xor
andl
add
cmp
je
pushl
pushl
orl
call
movl
mov
mov
add
mov
xorl
xor
add
movl
cmp
movl
je
orl
mov
mov
mov
sbb
mov
mov
notl
add
movzwl
sbb
mov
sub
mov
subl
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
orl
mov
mov
subl
add
adc
xor
mov
sub
mov
xor
add
mov
sub
mov
add
xorl
lea
mov
xorl
push
pushl
subl
pushl
orl
call
mov
xor
add
sub
mov
mov
notl
xor
decl
add
movl
cmp
movl
jne
inc
mov
movl
inc
movl
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
