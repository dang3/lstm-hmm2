push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
int3
jne
aas
pop
std
out
cwtl
test
aaa
mov
add
adc
jno
ja
mov
idivl
sbb
xchg
and
clc
je
add
test
lahf
or
mov
ja
lahf
mov
clc
lods
dec
cld
cmp
lods
sub
xchg
jmp
mov
outsb
cmp
scas
or
push
lods
test
add
push
add
pop
add
pop
out
add
je
jp
adc
imul
imul
lret
pop
in
lahf
jg
popa
call
stos
or
fcmovnu
loop
xor
pop
movsb
mov
filds
fidivl
cmp
repnz
pusha
popf
ret
pop
movsb
addr16
jae
std
dec
aas
mov
sbb
adc
jecxz
out
insb
push
loopne
mov
pushf
sub
xchg
mov
test
js
or
mov
mov
or
pop
shll
add
arpl
cmpsl
popa
push
push
lock
push
lods
and
andl
xor
add
pop
out
mov
or
nop
fidivs
cli
shll
xchg
mov
lret
popf
jle
test
push
push
sti
inc
jnp
inc
movsb
shrb
inc
xchg
fsubs
jl
pop
fcmove
sbb
adc
cmp
aam
push
lods
fidivrs
xchg
aad
mov
jg
dec
sbb
test
and
jae
sbb
clc
lock
arpl
or
sbb
enter
pusha
push
mov
imul
adc
mov
pop
inc
add
mov
sarl
mov
adc
mov
inc
mov
push
xor
insl
pusha
xchg
loope
clc
mov
sub
jb
repnz
cmpsl
push
outsb
or
aas
test
push
add
xchg
xchg
in
fsubrs
or
ret
test
sbb
into
repnz
hlt
cmp
jmp
fsubrl
sub
leave
movb
andl
das
lret
incl
or
out
inc
mov
lods
xor
sub
pop
sar
mov
mov
repz
int
filds
cmp
xor
popf
jle
push
jp
inc
pop
fisubrl
mov
cs
xchg
out
add
mov
cmpsb
in
fs
cmp
mov
loope
xacquire
js
loope
repz
sbb
inc
pop
cmp
loopne
es
pop
fwait
mov
pop
mov
and
push
dec
cmp
clc
xchg
bound
xchg
sahf
pop
call
push
lods
xor
xchg
lds
fs
pop
sbb
frstor
or
shrl
mov
dec
test
bound
pop
cs
call
inc
dec
in
xchg
lods
push
sub
and
test
xor
add
lds
jbe
imul
pmaxsw
in
rol
jmp
lret
push
sub
adc
pop
sbb
loopne
cmp
test
sub
push
mov
xchg
aas
pop
add
mov
cwtl
mov
cmp
in
sbb
insb
sub
and
aam
mov
scas
mov
push
inc
cmp
mov
int3
cmp
out
push
inc
shl
mov
imul
dec
pop
nop
mov
in
mov
int
jmp
in
clc
xchg
xor
ret
out
out
dec
add
loopne
mov
adc
sarl
mov
sub
daa
inc
xor
jns
daa
pop
icebp
pop
fcoms
inc
xchg
xchg
leave
into
movsb
adcl
fldt
dec
clc
push
out
imul
mov
pop
int
push
adcl
lret
sbb
bound
push
pop
loop
mov
xchg
sbb
jnp
int3
adc
mov
pop
into
scas
movsl
cwtl
mov
and
adc
stos
repnz
sbb
mov
stos
xchg
js
das
nop
outsl
cwtl
pop
jg
outsl
or
or
xor
mov
lahf
out
mov
aad
loope
mov
int
inc
sbb
add
xor
imul
dec
or
cld
xchg
ret
xchg
aas
fsubl
nop
and
push
and
mov
insb
adc
push
pop
clc
aaa
and
push
dec
fidivrs
hlt
repz
xchg
leave
ret
out
adc
xchg
stos
sbb
sbb
in
iret
inc
es
movsb
shll
and
leave
in
lods
out
mov
xchg
mov
insl
xchg
outsl
in
cmp
pop
push
push
outsl
jle
xor
or
sub
jl
fs
xchg
push
mov
test
rcrb
or
sub
adc
out
test
and
ja
shll
fadds
ljmp
jmp
sbb
int
psrad
bswap
int3
lea
jne
mov
cli
inc
in
sub
xchg
in
sahf
aam
pushf
dec
add
lahf
fcomps
pop
ljmp
les
sbb
xchg
mov
inc
lods
shrl
jae
or
ja
insl
iret
enter
push
lds
subb
in
lock
xchg
nop
inc
dec
push
cld
inc
call
xorl
jl
push
jns
sahf
inc
std
add
jns
enter
sub
dec
add
in
push
addps
cmp
in
pop
mov
popa
test
int
es
sub
loopne
sub
in
push
mov
push
push
jp
sbb
xchg
pushf
stos
xchg
inc
in
mov
lahf
lcall
add
nop
mov
inc
fwait
int3
push
inc
xor
cltd
loopne
enter
test
add
xor
outsb
mov
mov
aas
xlat
adcl
sbb
mov
sub
pop
cmp
pusha
ss
fildl
shrb
sub
std
minps
push
mov
sub
movsl
push
jo
lods
into
pop
repnz
lcall
in
xor
mov
int
lret
mov
cmp
mov
or
sbb
pusha
cmp
mov
inc
mov
inc
roll
mov
mov
ss
repnz
imul
cli
mov
push
cltd
push
popa
adc
sub
mov
sysenter
inc
mov
xchg
fnstcw
inc
pop
jl
dec
xlat
mov
je
push
arpl
mov
out
cmp
jns
inc
adc
or
dec
ds
sub
inc
movsl
adc
test
in
es
scas
cltd
push
lcall
das
ror
or
stc
fnsave
mov
mov
mov
mov
aam
pop
daa
or
mov
ret
iret
imul
and
sub
jo
add
in
icebp
bound
mov
mov
stos
aaa
hlt
and
push
mov
inc
outsl
fists
xor
shll
cmp
cmp
shl
inc
sarb
scas
in
cmp
cltd
push
into
repnz
xchg
decl
sbb
cmp
lahf
call
ret
sbb
push
and
into
repnz
mov
pusha
jl
sar
xchg
stos
aad
inc
fldcw
movsb
in
push
mov
push
inc
lods
push
ds
push
dec
mov
addr16
xchg
fsubrs
dec
xchg
sub
or
shlb
pushf
mov
mov
dec
sti
mov
lret
xchg
scas
lret
add
pop
mov
mov
xor
clc
xor
mov
jmp
pop
xor
lahf
inc
push
xchg
stos
sub
and
inc
xchg
add
mov
lods
loop
cmc
and
mov
mov
mov
jp
add
jo
je
push
pusha
push
mov
xchg
das
int3
xor
mov
cmp
mov
sub
pop
popa
xchg
mov
cmpsl
dec
push
call
mov
inc
adc
push
daa
movsl
stos
cld
out
sbb
pcmpeqb
lret
sahf
and
jo
sbb
dec
rcl
pop
mov
sbb
adc
lcall
pusha
push
adc
push
in
xor
out
jbe
daa
inc
ret
mov
stc
xor
dec
adc
push
xor
pop
push
out
fs
sahf
shl
punpckldq
inc
sbb
mov
clc
inc
incb
in
dec
pop
push
fidivrl
sub
mov
loop
out
test
lock
lahf
cmp
hlt
mov
pop
popa
int
jp
xchg
std
jg
adc
push
out
sub
xor
pop
sub
outsb
mov
out
lods
je
jle
mov
cmp
insl
adc
push
pop
inc
mov
iret
xchg
fidivs
std
mov
push
jp
inc
pop
lock
test
push
pop
xchg
add
lods
hlt
fucom
push
mov
stc
in
xorb
xchg
jo
sub
lahf
dec
scas
adc
cltd
jnp
fildl
in
lods
jp
loop
in
sbb
outsb
pop
dec
xlat
orl
mov
movsb
lret
loope
jns
cs
icebp
ret
test
sub
inc
pop
mov
pop
repz
jecxz
push
push
mov
inc
or
je
js
and
lret
push
mov
pushf
mov
cltd
pop
mov
in
adc
push
sub
out
imul
movsb
or
imul
not
adc
xor
mov
in
stc
lea
or
insb
jle
insl
and
ja
dec
fbstp
in
outsl
loope
arpl
jnp
add
das
nop
test
lret
test
push
repnz
jnp
ja
push
shlb
inc
pop
lods
pop
push
scas
add
test
xor
das
cmp
sbb
lods
loopne
popa
js
dec
lods
mov
xor
addr16
and
stos
adcl
jg
xor
inc
push
pop
push
jmp
jb
loopne
ffreep
daa
add
push
inc
shrb
cld
dec
test
jle
clc
pop
cmp
adc
xchg
pop
add
push
int
adc
jmp
mov
and
and
sbb
pushf
add
rcrb
cltd
push
fbld
sahf
in
dec
daa
int
push
lods
push
divb
insl
and
in
aam
jbe
mov
add
dec
adc
xchg
jne
imul
push
mov
cmp
xor
fsubrp
test
enter
dec
pop
sbb
imul
or
jb
jmp
push
sar
or
xlat
mov
mov
lock
mov
pop
test
in
jae
or
imul
sbb
into
shrb
jmp
sub
mov
jge
sti
push
decl
ud2
fstp
dec
pop
in
test
or
in
adc
icebp
fdivrs
mov
loopne
mov
and
mov
loope
aas
push
pusha
inc
cltd
xor
add
ljmp
loopne
popf
das
sti
mov
mov
inc
enter
stc
inc
inc
ret
int
popa
daa
pop
fcmovnb
add
inc
xor
sbb
mov
xor
and
sbb
inc
fadds
xchg
adc
cmc
pop
mov
mov
aam
gs
dec
cwtl
pop
inc
mov
inc
pop
inc
fmuls
jp
mov
loope
daa
dec
cmp
inc
ret
mov
jge
in
je
pop
dec
jg
int
jno
push
mov
cmp
insl
sub
adc
lret
xor
xchg
dec
push
in
inc
pop
idiv
pop
popa
mov
aam
push
mov
fisubrs
ljmp
push
pop
and
std
mov
mov
xchg
cld
das
cmpsl
push
and
add
ret
out
call
mov
xchg
insl
lock
jecxz
mov
adc
xlat
jne
fsubl
adc
les
push
mov
or
cmpsb
or
bound
in
cmpsl
adc
jl
inc
lods
jle
loop
movsb
and
pop
dec
cmp
xor
mov
sbb
mov
mov
sbb
xor
lahf
pop
sub
and
dec
stc
mov
or
test
sbb
push
xchg
xor
leave
das
push
jo
data16
mov
jnp
pop
ret
jmp
dec
xchg
addr16
loope
test
cs
jle
out
les
xor
lock
mov
sub
inc
pushf
mov
int
pop
inc
push
and
cwtl
inc
push
fcompl
in
mov
pop
xchg
stos
pushfw
or
push
in
int
std
mov
inc
pop
adc
lcall
bound
sahf
ret
mov
xor
xchg
ficompl
pop
xor
cmp
push
and
imul
sbb
or
aam
fsubl
lret
and
xor
sub
and
and
cmp
les
xor
inc
pop
leave
pop
std
cwtl
mov
push
xorb
fwait
pop
xchg
jb,pt
in
lret
mov
cmp
push
dec
add
cmpsb
fs
dec
hlt
inc
aam
sub
sub
cmp
out
scas
push
pop
les
mov
popa
sub
notb
fnstenv
pop
insb
popa
pop
pop
push
cmpsb
sub
popa
arpl
into
into
cmpsb
push
jle
mov
inc
bound
icebp
jl
lcall
test
ret
mov
cmp
loop
incb
sahf
repz
stc
leave
xor
outsb
inc
xor
andb
shl
sub
cmp
inc
mov
pusha
lahf
or
test
insb
frstor
scas
mov
inc
mov
mov
daa
cmp
std
pop
cltd
xor
lds
fs
mov
mov
or
cltd
addr16
addl
into
push
sarb
mov
call
sbb
xor
insb
cmp
bound
jmp
xor
fdiv
mov
movsl
dec
and
test
mov
and
fsubr
addr16
push
testb
aam
mov
out
inc
mov
addr16
inc
dec
in
mov
loop
cld
sub
testl
fwait
mov
xor
aam
mov
or
jbe
outsb
pop
sbb
jmp
xor
in
imul
adc
call
fwait
mov
test
cmpsb
jno
mov
fs
shr
cs
shll
jno
ds
xor
testb
int3
jne
jnp
aad
dec
and
cwtl
pop
call
pop
and
inc
push
mov
test
scas
mov
mov
pop
jg
jmp
fistl
les
mov
mov
adc
loop
mov
test
dec
in
pop
gs
enter
leave
aas
sarl
xchg
sub
fildll
xchg
data16
out
loop
lahf
sub
cli
xchg
scas
lock
or
dec
fdivrl
add
movsb
rcrb
mov
push
jnp
xchg
dec
dec
lods
pop
ret
je
fsubr
and
or
repnz
push
fcmovbe
pop
mov
add
enter
cmp
movsl
sub
inc
mov
pop
leave
push
cmp
xor
cld
sub
inc
icebp
push
ret
fidivl
divl
pop
out
addb
or
dec
mov
lcall
mov
dec
mov
sub
out
ss
xchg
jnp
aas
and
hlt
cmp
lock
sbb
sub
push
pushf
or
fisubrl
jae
mov
std
xchg
das
pop
mov
pop
and
imul
arpl
jae
pop
loop
sbb
mov
outsb
jmp
sub
je
mov
mov
jg
add
cli
aam
loop
jp
sbb
pop
outsb
pop
mov
fcmovb
xchg
and
mov
mov
inc
fucomip
push
adc
xor
aam
xchg
push
sub
inc
movsl
sub
xchg
pop
inc
and
cmp
dec
sbb
dec
pop
xor
mov
pop
das
repz
sub
adc
jae
dec
xchg
mov
mov
popa
lret
add
clc
imul
or
mov
inc
ss
mov
sub
jns
lea
mov
push
ljmp
dec
mov
ljmp
inc
sti
lret
loope
sbb
loop
mov
pop
xor
jl
add
and
xchg
gs
mov
or
in
sub
aam
pop
mov
hlt
dec
outsl
repz
add
adc
shll
stos
inc
out
mov
scas
mov
insb
xchg
inc
cmp
stos
or
fwait
test
cld
notl
and
fdiv
ja
dec
jg
dec
mov
into
push
int3
xchg
shr
xor
jae
in
imul
int
in
and
jo
inc
les
idivl
pushf
int
sahf
bound
adc
pusha
sbb
nop
out
stos
mov
or
movl
inc
sbb
pop
fsts
fs
add
rol
pop
inc
aaa
mov
mov
sub
or
jne
lahf
mov
jo
xchg
xor
scas
out
lcall
cwtl
in
in
or
pop
push
sub
mov
cmpsl
and
fdiv
das
xchg
cmp
ficompl
addr16
dec
add
rol
lock
and
pop
movsb
rcrl
gs
outsb
mov
dec
fildl
int
mov
bound
in
add
push
dec
pop
leave
or
je
mov
sub
jnp
xchg
aas
imul
popl
adc
xor
sbb
mov
insl
xchg
in
aaa
sub
mov
xor
fndisi(8087
inc
cmpsl
mov
mov
out
xor
adc
movsl
shrb
mov
push
call
push
jo
andl
cmp
int
loop
insl
mov
fwait
pushl
test
cmp
jns
or
leave
sbb
adc
test
sub
xor
add
jp
xchg
adc
dec
jb
mov
xor
lods
xchg
fisubrs
repz
mov
cmc
leave
stos
dec
je
add
jmp
mov
push
insb
mov
push
adc
push
imul
das
mov
sub
pop
adc
or
adc
std
cmp
gs
sub
dec
shl
ret
loop
addr16
nop
mov
test
cli
dec
ror
add
fistl
pop
dec
adc
mov
shlb
mov
add
adc
mov
roll
push
daa
adc
mov
dec
lcall
ss
scas
xor
xchg
push
mov
arpl
mov
jecxz
and
mov
sub
xor
jp
ljmp
mov
dec
xchg
and
fsubp
js
jne
orl
cli
dec
dec
in
lret
dec
jle
mov
movsl
mov
rolb
sub
movsl
es
cmp
cltd
cwtl
sbb
call
fmull
inc
push
gs
sahf
in
jecxz
pop
imul
jno
cmp
cs
addr16
cmpsb
bound
ljmp
cmc
sbb
lea
pushf
cli
int3
sbb
sub
mov
mov
jno
lcall
or
mov
aam
lock
test
fisubrl
and
jae
or
xchg
mov
aam
pushf
push
lods
nop
mov
gs
pop
jmp
inc
mov
movsl
add
push
cmc
jns
in
bound
sub
and
cmp
loopne
lds
mov
mov
add
xchg
push
push
into
inc
and
dec
sub
cmpsb
push
leave
outsb
imul
jmp
xchg
test
sbb
testb
stc
insb
mov
loopne
test
adc
mov
xor
jae
adc
stc
subb
lahf
out
fidivs
cld
gs
push
lds
mov
js
jnp
or
pop
mov
std
ljmp
inc
in
ds
adc
loop
pop
arpl
jno
outsl
lcall
les
mov
imul
mov
adc
call
cli
pop
outsl
inc
pusha
pop
push
pusha
hlt
mov
cltd
icebp
fistl
push
into
and
cmp
push
adc
and
inc
adc
fwait
in
mov
repz
or
stos
or
mov
jae
or
or
sub
push
mov
dec
cwtl
scas
adc
push
in
ret
insl
adc
xchg
test
aas
add
add
xchg
fbstp
fcmovne
pop
xchg
aam
test
dec
test
fldcw
adc
jmp
adc
hlt
or
push
into
gs
stc
negl
bound
mov
fisttpll
add
push
es
xchg
push
xchg
cmp
jmp
fidivrs
imul
sub
out
xor
ja
test
jp
aaa
dec
sbb
es
sbb
sbb
imul
xchg
and
jns
sub
arpl
es
jno
push
cmp
fistpl
mov
fwait
icebp
xor
inc
add
or
fnstsw
dec
shl
adc
into
and
jle
pop
loope
mov
cmpsb
scas
inc
aad
stos
jle
int
jge
sub
cli
cmova
mov
mov
push
stos
xchg
cltd
pop
pop
mov
fwait
sub
lsl
test
xor
fsts
out
and
jae
mov
mov
xor
pop
call
pop
pushf
in
jp
add
jnp
push
dec
nop
mov
int3
lock
and
mov
sub
mov
lcall
mov
arpl
lret
out
repnz
sub
fcmovbe
inc
push
sub
mov
jg
dec
mov
aad
lds
xchg
inc
mov
mov
mov
xor
ja
xor
je
cmc
adc
gs
movsb
dec
sub
adc
cld
dec
lods
jmp
fldenv
mov
mov
scas
jecxz
in
inc
scas
addb
loope
cs
adcb
and
xchg
xchg
stc
xor
ret
push
cmc
movsl
aaa
or
dec
dec
inc
add
aam
insl
adc
push
out
jne
or
lret
lret
cli
mov
push
aam
xchg
movsl
js
js
test
or
push
popf
pop
mov
inc
inc
xorb
or
ljmp
inc
leave
lds
jb
xchg
push
fdivs
sbb
in
add
ljmp
push
shl
insb
jmp
xchg
pop
hlt
ja
mov
add
dec
popa
inc
outsb
fildl
adc
cmp
pop
adc
repz
mov
cmp
shll
int
mov
xchg
cwtl
pop
test
int
test
in
sub
cld
pushf
jbe
adc
dec
jo
stos
or
repnz
mul
push
pop
xchg
ljmp
pop
jo
ret
icebp
pop
cmp
test
push
in
inc
enter
out
pushf
cmc
pop
inc
outsb
xor
pop
fwait
das
cmp
mov
push
imul
cmpsb
out
and
mov
mov
pop
push
and
or
pop
stos
inc
sti
xor
cs
ss
inc
push
fisttpll
pushf
popf
adc
lock
js
sub
rorl
out
xchg
out
xor
adc
fdivrl
scas
or
sti
xor
adcl
lcall
lahf
ret
inc
mov
idiv
outsl
out
push
jno
mov
sbb
jl
jno
mov
mov
mov
cmp
int
xor
test
cmp
jo
xchg
cld
cmp
dec
in
dec
pop
or
arpl
xchg
mull
es
push
ss
incb
jo
bound
repz
sub
xchg
hlt
leave
pop
dec
aam
jle
lock
es
stc
aam
subl
or
arpl
jmp
test
add
or
hlt
lds
movsl
sub
mov
cmpsb
sbb
cld
and
push
mov
test
push
or
xchg
arpl
sub
loop
push
mov
pop
jmp
rcrb
push
lret
sbb
push
js
inc
out
mov
mov
fldenv
rcl
push
jg
sti
iret
push
mov
icebp
jns
aas
setp
sbb
scas
ror
in
stos
and
push
xchg
jle
mull
push
repz
test
sub
addr16
mov
ror
push
cld
mov
jb
mov
push
sahf
xchg
xor
mov
psubusw
inc
cmp
cwtl
je
xor
mov
ljmp
jge
inc
cmpsb
pop
sub
dec
leave
cmpsb
mov
xchg
pop
loopne
cmp
pop
mov
push
fimull
das
fists
js
out
in
nop
and
and
mul
mov
and
inc
dec
pop
loopne
loopne
bound
imul
xor
sub
and
es
rcrl
sbb
pop
fstps
add
push
mov
lret
mov
std
mov
jecxz
and
inc
adc
adc
jne
sbbl
push
call
push
jo
stc
jno
mov
or
cmc
jle
xlat
mov
add
push
mov
and
cmp
lds
scas
decb
ret
sbb
ja
arpl
jp
jo
or
xchg
xor
xor
adc
xchg
ja
outsb
jns
movsl
mov
mov
dec
les
outsl
fidivrl
jne
movhps
nop
and
sub
xlat
cltd
push
in
mov
in
and
out
dec
aad
mov
xchg
lret
or
jb
lret
in
add
jae
or
aam
in
fidivl
inc
xchg
insb
mov
jecxz
mov
sbb
rcrb
aad
icebp
xchg
mov
pushl
or
adc
cli
fnsave
jmp
loope
pop
mov
sub
ror
int
test
adc
xchg
or
and
mov
or
les
es
test
cmpsl
pop
loopne
or
andl
call
mov
sbb
push
mov
cltd
adc
xchg
mov
or
fstl
add
imul
push
mov
stos
cld
call
push
scas
xor
sbb
or
insl
dec
push
add
fmull
rorl
xchg
pop
movsl
mov
dec
pusha
lods
mov
xchg
push
orb
fsubl
pop
lods
lea
xchg
add
in
stos
mov
repz
lahf
loopne
testl
cs
gs
or
jbe
lcall
ficoml
adc
enter
insl
es
xor
xorl
xor
mov
filds
xchg
clc
adc
iret
sbb
sub
adc
pop
dec
pop
mov
inc
or
cmc
xchg
cmp
in
push
ficomps
push
dec
jmp
ljmp
cmp
out
sub
pop
adc
aaa
pop
mov
push
cmp
adc
in
imul
push
push
aaa
jp
test
push
pop
cmpl
das
xlat
dec
sbb
lods
pop
xchg
cmp
and
jmp
lret
jne
lea
ret
cmpsb
cmp
incl
mov
jbe
xor
fcmovu
std
ljmp
insl
xchg
push
mov
mov
sub
xor
fsubl
mov
out
out
or
cwtl
pusha
and
scas
in
jnp
popf
sbbb
aaa
ss
jno
addr16
xchg
jnp
inc
fidivs
cmpsl
and
cld
sub
inc
ret
fildl
adc
mov
jns
insb
mov
sub
lods
pop
sbb
ret
add
mov
and
insl
test
stos
ret
adc
fnstcw
in
inc
pop
outsb
out
xchg
pop
adcb
insb
insl
mov
jle
cmpsl
cmp
mov
jb
push
and
lods
mov
xchg
cwtl
inc
in
jge
pop
inc
outsb
push
push
das
cmp
rclb
scas
jmp
sub
ljmp
mov
mov
mov
or
cmpsl
aaa
xchg
imul
push
add
popa
popfw
or
scas
or
jge
and
cwtl
adcb
add
test
cmp
inc
in
adc
pop
in
jmp
jnp
jae
and
ljmp
mov
mov
cwtl
adc
mov
or
cs
out
icebp
addr16
mov
sbb
stos
sahf
cmp
into
ds
mov
push
andl
and
aaa
and
mov
daa
mov
mov
out
inc
mov
or
add
jbe
sub
adc
sub
lret
add
push
test
inc
into
pop
inc
cs
pop
add
es
mov
cmp
lods
fstpt
sbb
mov
xor
inc
cmp
push
jae
loop
notl
shrl
das
shlb
lea
xchg
divb
lock
mov
insb
rcrl
cs
shrl
jb
insb
out
addr16
dec
xchg
movsl
rolb
fsincos
icebp
aam
in
popa
mov
xor
inc
sub
cmc
dec
lcall
rep
jg
push
jne
push
ss
sub
cmp
scas
fstpt
sbb
adc
and
cmc
movsl
outsl
xorl
rol
mov
int
addr16
fdivrs
xchg
cmp
shl
stc
adc
loope
sbb
mov
xor
sbb
cmpsb
cmp
sub
aad
mov
mov
aam
std
fcmovnbe
pop
outsb
adc
cmc
push
imul
test
dec
mov
fs
insl
mull
xor
lahf
lods
add
mov
cmp
adc
and
cwtl
loope
rcr
cmc
repnz
add
add
and
repz
mov
fmull
fbld
or
mov
fsubp
ja
ds
int
out
jbe
js
roll
dec
out
in
pop
icebp
xchg
jg
push
cmpb
loope
mov
hlt
aaa
mov
lret
ljmp
pop
aad
push
xlat
push
adc
leave
icebp
lret
inc
xchg
jge
bound
xchg
xchg
push
mov
jo
outsl
lret
add
sbb
bound
lds
mov
cmpsl
and
pop
lods
mov
push
mov
loope
push
mov
inc
add
push
sahf
dec
mov
es
movb
dec
call
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
xchg
cwtl
dec
pop
jp
or
jp
push
pop
mov
ror
sbb
sbb
or
gs
int
sub
pushf
add
mov
and
in
les
cmpsb
push
mov
lods
adc
mov
ret
daa
cltd
mov
imul
test
xor
adcl
ljmp
popa
lds
or
je
inc
adc
test
mov
outsl
jbe
jge
and
je
mov
lahf
cmp
cmp
jo
ret
and
adc
and
rclb
add
lcall
shrl
pop
popa
in
fisttpll
mov
mov
mov
cmp
ds
sub
stc
push
int3
xchg
cld
ljmp
sbb
lret
jecxz
mov
mov
add
push
ror
imul
mov
push
and
sub
or
mov
std
inc
popa
adc
xor
pop
cs
cmp
inc
mov
orb
inc
and
push
popf
imul
rcl
cld
cmp
cmp
fstps
mov
aam
xchg
xor
dec
sahf
jne
fmull
mov
movsl
daa
in
inc
add
xor
aad
inc
mov
stos
ret
dec
mov
push
aas
xor
stc
sbb
aam
xlat
scas
mov
ret
jns
iret
sub
adc
xchg
bound
push
add
adc
mov
nop
mov
arpl
movsl
push
stos
popa
ficoms
mov
pop
add
push
mov
int3
aam
xor
or
popf
jb
sbb
stos
pop
daa
push
nop
mov
rcl
out
dec
loopne
mov
pop
out
jmp
and
or
sarb
aam
add
and
mov
fwait
lcall
cmp
imul
mov
stc
push
jp
ljmp
faddp
inc
push
sub
dec
lret
sahf
and
pop
push
flds
out
call
sub
or
push
pop
insb
and
mov
icebp
pop
push
cmp
jae
or
mov
mov
shrb
or
add
mov
add
xchg
popa
mov
lret
sub
inc
or
mov
out
loope
xor
xor
dec
mov
mov
stc
imul
adc
xor
push
xchg
orb
mov
lahf
push
push
mov
adc
ljmp
xchg
jmp
negl
jg
test
jb
out
xchg
enter
cmpsl
add
add
mov
jnp
add
jmp
pop
cmp
inc
in
std
push
xchg
push
sahf
or
mov
nop
sbb
aaa
adc
lods
adc
out
push
arpl
pop
jbe,pn
ds
ret
mov
int3
jns
add
jns
repz
loopne
in
xchg
outsl
iret
outsb
sbb
pop
sbb
imul
iret
fucomip
dec
popa
or
adc
sub
ret
push
stos
inc
icebp
adc
mov
sbb
fisubrs
jnp
xchg
dec
lods
in
push
das
xor
ret
pop
roll
dec
dec
and
fisttps
cmp
add
sbb
pop
lahf
add
xchg
sbb
enter
ljmp
mov
jecxz
cld
popl
mov
inc
mov
adc
push
lea
jb
jae
push
mov
cmp
xchg
mov
lock
mov
int3
nop
fstpt
jae
push
inc
repz
adc
and
push
in
movaps
and
xchg
push
fstps
mov
test
insb
in
aad
xchg
dec
and
es
xor
mov
xchg
cmp
xor
adc
loope
lods
add
je
aad
pop
adc
popa
cmp
jns
out
add
lcall
out
mov
dec
test
int
repnz
lock
pop
leave
add
das
xor
in
adcl
dec
call
jb
adc
sbb
das
ja
push
dec
scas
ret
xor
cld
gs
mov
scas
mov
adc
jl
outsl
in
fisubl
jp
es
sbb
ss
aad
addr16
adc
mov
jg
dec
sub
jno
out
push
repz
push
in
jne
js
in
cmp
xchg
lea
lret
cmp
xchg
xor
ret
xor
xchg
cmp
sahf
mov
or
roll
add
inc
fmull
push
stos
mov
mov
jge
cmp
jbe
sti
aam
inc
sub
dec
enter
scas
loop
xchg
pop
imulb
jo
inc
push
ss
out
dec
lock
lret
pop
inc
out
cmpb
fidivs
xor
call
add
fstpt
rcrb
in
repz
cwtl
push
sbb
pop
pushl
pushw
push
xor
imul
repnz
lret
or
scas
repz
add
dec
out
fwait
outsl
imul
int
fxtract
js
test
lods
or
mov
push
cmp
push
pop
sub
fstpt
push
lret
and
xchg
dec
lods
add
orb
xchg
jb
push
ret
xor
test
outsb
mov
into
lret
jb
mov
in
outsb
sub
jl
sbb
xlat
subl
call
mov
xchg
and
clc
sbb
gs
adcl
into
sti
jp
popa
aaa
mov
out
sub
xchg
cli
out
jnp
or
cmp
mov
xchg
add
cmc
jae
pop
popf
sbb
repz
push
aam
fsubrs
adc
mov
out
inc
lds
and
lcall
frstor
mov
fwait
arpl
ds
decb
stos
aad
movsl
mov
lods
sbb
fstp
xlat
in
in
scas
fistpll
cmp
xchg
xchg
in
jge
iret
js
cld
cs
lea
fnstcw
into
cmp
or
pop
mov
mov
icebp
dec
daa
mov
mov
pop
pop
outsb
leave
in
cmp
shll
or
test
xor
scas
sub
pushf
bound
dec
push
outsl
lock
dec
push
dec
scas
xchg
pop
jae
shrb
paddusb
cmpsl
inc
or
xlat
sahf
cmpsl
ds
lods
jbe
mov
inc
mov
and
nop
cmp
xor
sub
push
jge
insl
repnz
sbb
or
fistps
cmp
js
cli
into
ss
jecxz
movsb
cmp
cwtl
or
and
outsl
jmp
ret
fistl
shrb
stos
je
mov
pop
insb
jno
in
mov
lods
push
pop
pop
mov
mov
mov
mov
mov
add
pop
lcall
dec
xor
adc
std
nop
mov
negb
into
movsl
dec
cmp
sub
mov
ficoms
sub
nop
adc
pop
lods
add
mov
sahf
int
sbb
jp
negb
jg
xchg
and
loope
mov
mov
inc
mov
sbb
outsl
test
push
fmulp
fucom
ja
aam
jecxz
cmp
ljmp
mov
ss
daa
push
icebp
mov
xchg
inc
gs
sar
pop
lods
pop
push
into
and
dec
jge
sub
add
stc
fsubl
xor
sbbb
repnz
gs
or
sbb
outsb
jmp
push
xor
outsb
sub
xchg
adc
lahf
inc
das
jmp
in
in
cmpl
push
dec
mov
dec
adc
xchg
push
add
add
movsb
mov
test
stc
xchg
sbb
xor
push
cmp
and
jbe
cmp
adc
cmpsl
jp
xor
push
mov
mov
call
aaa
adc
add
cmp
adc
adc
jno
xor
push
dec
lcall
mov
sub
imul
dec
lret
in
pop
mov
and
in
dec
stc
inc
mov
jbe
lret
cmp
push
push
pop
dec
aam
and
enter
ja
sbb
lahf
cmp
pop
bound
sbb
jno
int
test
xchg
shrl
mov
inc
leave
insb
pop
stos
inc
dec
push
fsts
or
jecxz
lea
sub
cmp
cmp
imul
hlt
or
adc
or
sbb
mov
push
mov
mov
sub
nop
inc
lret
fwait
rdpmc
gs
add
sbb
in
mov
dec
stos
mov
mov
cwtl
daa
jno
add
xchg
jp
push
cmp
out
xchg
jle
pop
add
mov
pop
add
lea
dec
xor
push
jnp
insl
daa
mov
dec
les
cwtl
mov
and
imul
xchg
add
call
fdivs
xorb
into
fwait
pop
push
ljmp
mov
in
into
dec
jp
add
sub
xor
daa
js
jp
mov
pop
inc
lods
xor
mov
and
loop
sub
icebp
pop
movsb
aaa
mov
sti
pop
lahf
imulb
sub
testl
inc
loop
andb
arpl
xchg
jo
mov
and
sbb
adc
movsl
sbb
cmc
inc
mov
sahf
leave
fwait
rorb
inc
mov
andl
repz
jne
inc
sahf
jo
arpl
pushf
in
popf
andb
jg
cmp
pop
cld
fiadds
xchg
stos
jbe
lcall
cmp
loopne
rclb
subl
ljmp
imul
dec
sub
lret
das
fsubl
ja
or
arpl
aas
das
dec
sub
pop
xlat
ret
imull
pop
xchg
int
outsb
popf
mov
xchg
and
insl
jp
push
xor
pop
stos
hlt
pop
out
dec
sub
jmp
sub
into
es
push
mov
sbb
in
repnz
or
pop
xor
push
sbb
push
ret
add
add
int3
stos
aad
add
xchg
test
and
bnd
push
inc
inc
push
pop
and
and
xchg
out
fs
insl
sbb
and
mov
and
call
orb
repz
lds
rcrb
fnstcw
xlat
gs
mov
cmpsl
test
xor
xchg
jp
mov
sub
inc
loope
jl,pt
int
pop
jecxz
data16
push
stos
icebp
int3
lods
xor
imul
push
cmpsl
xchg
test
je
pop
sti
test
mov
pop
jnp
pop
dec
cmc
mov
mov
idivl
addr16
mov
add
daa
outsb
push
cwtl
imul
das
cmpsb
xchg
in
cmp
out
fcom
cmpsb
lods
mov
in
push
jbe
ficoms
mov
popa
sbb
data16
xchg
jle
xchg
les
dec
inc
sub
jb
or
cmpsl
jp
in
xchg
nop
nop
mov
mov
sub
js,pt
mov
imul
nopl
sub
decl
filds
push
int
cli
in
sub
aas
imulb
in
cltd
dec
pop
pop
icebp
imul
pop
popa
mov
movl
lock
aad
xchg
or
inc
xor
sbb
mov
push
scas
add
jl
or
jne
andb
xor
pop
mov
push
insb
mov
cmp
aas
lock
addb
imul
frstor
mov
push
mov
cs
leave
jmp
adc
and
cwtl
sbb
enter
lods
loopne
mov
pop
mov
sub
push
adc
jmp
shrl
jg
or
or
mov
xchg
sbb
scas
cmpsl
mull
and
dec
icebp
sti
cs
xor
xchg
ret
in
imul
or
xor
mov
cs
in
push
jecxz
hlt
imull
cltd
mov
sbbl
inc
in
add
add
xchg
jmp
sti
dec
daa
fstpt
andl
pop
daa
loope
in
mov
push
iret
test
out
and
sbb
mov
ljmp
xchg
jbe
cmp
bound
push
rcr
xchg
xchg
mov
jns
in
cmp
popf
inc
test
xchg
xor
movhps
inc
inc
mov
inc
es
inc
fldenv
in
sbbb
mov
push
xor
jno
push
or
hlt
mov
adc
ret
or
loope
and
stos
arpl
bound
push
jne
cs
stos
inc
add
repnz
mov
adc
mov
sub
pop
mov
jmp
jbe
sbb
sbb
lea
mov
mov
test
inc
out
cmp
popf
xor
pop
test
lock
cs
mov
sub
fisubrl
jbe
or
mov
int3
ret
cmp
push
push
shl
sbb
je
aad
push
adc
outsb
mov
es
adc
popa
loope
data16
lds
jmp
xchg
xor
sarl
sbb
inc
sub
pusha
xor
fcom
cmp
push
hlt
inc
test
add
dec
outsl
daa
dec
cmp
adc
sbb
stos
jno
call
daa
adc
mov
insl
in
pop
xchg
insb
testb
iret
and
xchg
je
test
mov
fdivrl
clc
inc
sbb
mov
xchg
pop
mov
pop
out
push
push
outsl
adcl
mov
add
push
cld
sti
outsl
out
loopne
xchg
frstor
cmp
mov
sbb
xchg
iret
jb
cwtl
adc
sbb
enter
adc
das
daa
in
mov
outsl
test
pop
fwait
dec
test
push
lret
ret
cwtl
sbb
jg
cli
or
aaa
inc
das
pop
inc
xorl
popa
fs
or
sbb
dec
ja
sub
imul
movsl
ror
shl
dec
add
rclb
jno
jl
cmp
lahf
xor
mov
fcomip
stos
pop
int
dec
imul
add
jecxz
mov
lcall
ljmp
pop
push
jp
js
daa
insl
pushf
cmp
or
push
fdivrp
jnp
add
mov
mov
jl
outsl
outsl
in
mov
movsl
lea
adc
jle
xor
xor
test
cmp
add
push
mov
aad
push
rcll
mov
pop
sub
outsl
sub
xchg
outsb
into
ja
out
xor
in
push
xchg
push
ja
sarl
inc
icebp
scas
xor
push
and
push
cs
adc
sub
cld
call
add
std
repnz
ja
outsb
cmp
rorl
dec
jg
mov
jae
mov
xchg
or
adc
test
add
and
sub
pop
xlat
cwtl
sbb
movsl
pushf
xchg
int3
adc
call
dec
mov
push
adc
mov
pop
out
cmp
dec
pop
lods
mov
repz
cmp
shl
sbb
cwtl
xor
aam
mov
lea
aam
fisttps
ds
sbb
mov
je
push
fstps
in
movsb
mov
int
testb
das
negl
dec
dec
jge
pusha
xor
ds
loop
aaa
pop
push
addb
shrb
sbb
in
push
movsb
dec
int
lods
call
mov
cli
inc
clc
lods
push
xor
sub
jo
xchg
mov
cmp
jno
icebp
sti
jl
orl
pop
lahf
std
cmp
cmpsb
add
sub
or
sub
dec
dec
dec
popa
and
inc
call
mov
leave
and
inc
inc
fsubs
test
and
adc
mov
outsb
dec
dec
jmp
sti
mov
stos
mov
and
pop
or
add
xor
int
push
push
arpl
lret
lahf
in
mov
sub
dec
sbb
sbb
xchg
jg
cmpsb
mov
push
and
lods
je
jno
int
int3
mov
mov
inc
lods
fdiv
push
int3
fs
mov
xor
adc
mov
sti
imul
scas
pop
mov
push
call
sbb
and
rcl
mov
rcrl
dec
mov
adc
dec
sub
add
icebp
cmp
xor
mov
cltd
jge
stos
adc
shlb
fsubr
shr
sbb
imul
cltd
xlat
dec
gs
add
jns
sub
int3
push
adc
ror
mov
fmuls
or
test
dec
dec
mov
jg
lea
lcall
iret
scas
testl
out
push
jmp
cmpl
mov
push
js
lret
jecxz
pusha
mov
out
movsl
daa
stos
inc
shlb
mov
push
pop
push
imul
mov
push
stc
sti
cmp
mov
loope
aas
mov
pop
dec
push
enter
shll
mov
popa
adcl
nop
data16
dec
les
sbb
mov
adc
ret
mov
out
cmp
repz
nop
shll
fstpl
jp
sbb
xor
push
sbb
movsl
in
repz
adc
mov
mov
and
cltd
std
repz
adc
repz
test
dec
das
hlt
fs
sub
adc
sub
lea
clc
cmp
es
jno
fbstp
inc
icebp
mov
xchg
add
jecxz
fs
lock
mov
dec
paddsw
cli
dec
add
and
inc
cmp
xor
xor
xor
mov
sbbl
sbb
orl
xor
mov
loopne
and
sbbl
dec
scas
dec
jmp
add
cmpsb
stos
loope
shr
push
and
jmp
ljmp
mov
pop
xchg
shr
fmuls
sub
cmp
sbb
ljmp
xor
sub
cld
push
psrld
sub
icebp
xchg
adc
popa
jo
fisubs
adc
mov
inc
andb
fs
push
ret
inc
jns
dec
or
sahf
pop
adc
add
je
out
mov
stos
mov
sub
enter
stc
mov
lods
arpl
inc
add
or
fidivrs
js
xor
cltd
popf
mov
lahf
or
push
fucomip
add
or
jge
add
imul
or
push
xchg
arpl
jnp
inc
in
sub
bswap
sub
sar
std
mov
sub
cmpsb
pop
paddd
or
int
inc
sub
int
icebp
outsl
mov
xchg
imull
movsl
cltd
jb
aas
xchg
add
push
dec
xchg
fisttpll
sub
out
iret
jbe
push
dec
xor
push
mov
mov
cmpsb
in
jecxz
mov
cltd
adc
cmpsb
inc
cli
addr16
into
es
nop
das
jmp
mov
cmp
push
push
call
addr16
rolb
scas
pop
jae
rorb
inc
pop
adc
cmp
or
notb
loop
insb
mov
cmp
mov
out
cli
testb
pop
xchg
jno
popf
jae
aas
aam
pop
mov
inc
ret
ja
push
rcrl
mov
sub
in
xor
test
push
xor
movsl
sub
pop
mov
or
jmp
je
movb
lds
dec
adc
sub
mov
fsubrl
imulb
dec
loope
fdivrs
pop
xor
mov
loopne
jnp
int3
mov
or
int3
xchg
test
mov
inc
dec
and
pop
mov
mov
shll
jno
aas
bound
xor
and
mov
and
rsm
xor
out
lods
dec
fldz
out
xchg
mov
mov
pop
jge
jl
cmp
mov
sub
mov
mov
sbb
popa
mov
arpl
xor
imul
bound
iret
mov
mov
inc
xchg
pusha
jmp
cmpsl
test
mov
sti
test
sarb
insb
fadds
sub
mov
sub
out
xor
push
cs
ret
fdiv
icebp
push
aaa
fsubs
xchg
mov
jge
jge
add
sub
jo
mov
pop
ds
ficomps
stos
cltd
add
ljmp
int3
ljmp
std
xchg
ss
xchg
mov
mov
hlt
jbe
add
mov
cwtl
pop
in
ret
push
inc
adc
cmp
jle
cmp
xchg
pop
dec
mov
xchg
push
mov
in
out
pop
enter
cwtl
cmpsl
pop
mov
mov
push
call
iret
fwait
addr16
into
sar
sbb
clc
sub
lods
inc
pop
jne
call
and
push
fisttpll
jbe
shll
add
mov
movsl
stos
mov
out
push
dec
mov
add
jmp
leave
xchg
pop
push
sub
into
sbb
cmp
dec
hlt
or
ss
in
mov
sub
add
sub
fbld
xchg
pop
pop
jecxz
or
xor
inc
in
or
mov
cmp
data16
xor
adc
icebp
hlt
addr16
shrl
push
xchg
test
adc
push
jle
cmp
add
push
fdivrp
mov
addr16
mov
inc
inc
iret
sbb
in
enter
icebp
sarl
cld
add
add
out
mov
mov
sbb
mov
lods
add
mov
fisubrl
ret
inc
into
stc
rolb
mov
int
sub
lret
cli
xchg
rcrb
mov
loop,pn
mov
jbe
mov
pop
es
lret
cmc
mov
das
jp
nop
or
pushf
sub
dec
sbb
cld
pushf
lods
xlat
lcall
cltd
add
lds
mov
jne
inc
add
pop
adc
inc
mov
jne
push
and
ja
fistps
rolb
xchg
and
push
jno
fstps
mov
pop
push
aas
mov
in
add
inc
cmp
in
and
push
or
lea
clc
cmp
or
jmp
jg
pop
xchg
clc
cmp
clc
dec
sahf
or
adc
mov
fiadds
cmp
xor
call
mov
cwtl
and
mov
mov
js
loop
pusha
push
pop
sub
sahf
or
push
rolb
fildl
cmpsl
adc
inc
dec
jo
imul
add
xchg
cmpsb
je
sbb
adcb
cmp
push
jmp
push
js
movsb
je,pt
imul
movsb
rcrb
loopne
mov
pop
out
cmp
mov
mov
inc
dec
stos
outsl
outsb
in
scas
adc
rcr
mov
repnz
cwtl
imul
test
and
test
mov
hlt
fdiv
fs
shlb
push
mov
cmp
mov
inc
push
jno
jb
dec
sub
pop
sbbl
testl
dec
mov
hlt
jg
mov
repnz
lahf
pop
or
mov
rol
push
jecxz
lods
aas
sbb
adc
or
or
adc
cmc
dec
insb
adc
sahf
mov
sahf
jae
inc
popf
sub
cmpsb
fiaddl
js
ss
xor
in
adc
mov
stc
dec
pop
clc
imul
insb
imul
lahf
inc
repnz
gs
loope
push
cmp
pop
dec
cmp
xor
iret
sbb
and
sti
movsb
sbb
push
std
pop
push
fbld
fidivl
sub
inc
je
imul
mov
xchg
arpl
xchg
fs
call
xchg
mov
pop
movsb
inc
mov
jmp
lods
jmp
push
dec
push
std
dec
nop
into
dec
sbbb
sub
jle
inc
cmp
lock
adc
mov
mov
cmp
jmp
sub
jne
mov
dec
sub
jecxz
jns
popf
sbb
push
subb
and
mov
shlb
or
xchg
push
aaa
das
push
inc
mov
push
xor
scas
into
xlat
fisttpll
mov
xchg
lds
inc
je
and
faddl
mov
xlat
int3
mov
fsubl
je
pusha
sbb
jns
xchg
inc
mov
dec
cmp
les
sbb
add
mov
push
fs
movsl
test
popa
mov
mov
into
push
stos
jge
sbb
adc
int
dec
pusha
pusha
or
insb
out
es
aaa
mov
cmpsb
imulb
mov
xor
cmp
pop
fisttps
test
lods
flds
or
js
ds
and
jae
mov
fstpl
test
mov
xchg
inc
pop
push
sti
sbb
adc
bound
xchg
test
dec
mov
mov
jg
cs
addr16
or
dec
daa
popf
loop
ss
insb
sbb
js
int
inc
divl
mov
test
aam
into
in
lds
mov
sbb
out
jnp
ss
idivb
pop
pop
push
test
mov
mov
dec
cmp
mov
addr16
adc
xchg
je
xor
add
dec
idivb
cltd
cmpb
and
repz
and
adc
test
pop
icebp
lcall
fucomi
pop
imul
addr16
xlat
fwait
out
addr16
mov
iret
sbb
subb
cmp
js
cmp
dec
push
and
xadd
inc
enter
sbb
add
mov
push
cwtl
add
ret
lds
cli
mov
lods
imul
or
and
mov
and
cmp
adc
int3
ret
push
pop
int3
mov
shr
in
add
or
pushf
ficompl
movsb
cmp
divb
ja
fildl
add
inc
adc
cld
cmpsb
jp
sub
pushf
lret
jge
add
shl
loope
adc
xor
std
iret
or
inc
orb
sbb
fs
dec
jae
int3
outsl
cmp
pop
test
shll
sub
add
lret
push
adc
les
cmp
cmp
inc
pop
test
loop
or
mov
popf
addr16
mov
insb
dec
lret
cs
neg
xchg
add
sub
in
adc
pusha
gs
add
rolb
xlat
push
lea
dec
mov
sarl
sub
in
scas
sbb
subl
test
ficomps
sbb
out
lahf
clc
jmp
mov
mov
push
jge
mov
jge
or
mov
mov
rclb
pop
add
sub
sar
std
roll
and
xlat
sarb
cmp
pop
mov
inc
jnp
shlb
pop
insl
mov
std
jmp
ret
jp
fwait
xor
inc
scas
jge
push
jecxz
rol
fildll
push
adc
sbb
leave
lods
je
push
add
jecxz
mov
stos
leave
mov
xor
test
dec
or
cmc
pop
or
pushf
push
dec
mov
cs
pop
aam
fildl
jnp
int
push
mov
add
enter
pop
mov
mov
xor
cmp
nop
and
aad
inc
lcall
bound
test
imul
jns
lahf
aad
inc
outsb
push
sbb
stos
bound
mov
ja
mov
sahf
mov
jae
divl
cmpps
aam
fsubrs
xchg
int
xchg
invd
adc
scas
sbb
xchg
in
lea
hlt
dec
pop
rcrb
dec
mov
mov
mov
mov
adcb
bound
xor
xchg
sub
ror
mov
rclb
cmpl
mov
dec
ss
add
fsubs
stos
cmp
inc
es
xor
fs
mov
mov
jl
mov
jge
add
stos
cli
pop
fidivs
adc
push
int
clc
xor
jo
fsubp
inc
js
add
cmp
lret
jnp
sti
push
add
icebp
mov
scas
pushf
or
mov
bswap
xchg
inc
lods
in
inc
mov
movsl
cmc
movsl
adc
and
xor
outsb
and
xor
imul
pop
insl
cld
sbb
dec
scas
sbb
outsb
cmp
std
test
stos
adc
mov
cmp
sub
pop
jnp
movsb
pop
lods
sahf
int
jnp
in
fbld
jno
fwait
test
pop
lods
fcmovu
adc
adc
sbb
clc
lods
iret
pop
mov
mov
xchg
lret
mov
pop
xor
ds
push
jmp
cmp
pop
inc
stos
pop
lds
inc
outsb
aad
add
ja
lcall
xchg
xchg
hlt
repnz
test
mov
xor
mov
mov
push
xchg
add
mov
xor
jecxz
dec
add
push
mov
push
sbb
xor
adc
mov
idivb
out
push
movsl
out
repz
loope
iret
pop
mov
cmp
aad
push
sub
add
enter
dec
fs
movsl
mov
sub
loope
push
mov
xchg
push
sub
sbb
fcomi
stc
popa
push
mov
and
popa
cmp
xchg
dec
add
rclb
xor
lods
mov
inc
fmul
popf
jo
std
jge
xchg
push
lahf
test
aas
and
fmulp
mov
mov
lea
andb
mov
es
jnp
ret
sbb
ret
lret
jl
adc
xchg
outsb
inc
insb
popa
mov
push
xor
mov
mov
sbb
enter
add
jp
cmpsb
aas
subl
aas
sub
pop
mov
and
push
xchg
cmp
insl
mov
dec
aam
inc
fyl2x
push
or
addr16
jns
clc
inc
addr16
cwtl
mov
lock
push
popf
mov
xchg
loopne
out
pushw
add
lds
or
xor
pop
mov
xchg
jae
add
push
mov
gs
mov
frstor
imul
scas
loope
outsl
shll
fmul
cmp
mov
int
and
out
adc
adc
jge
mov
mov
repnz
adc
inc
decl
jl
sub
push
repz
dec
add
fisubs
gs
adc
jnp
dec
gs
stos
adc
lahf
push
jno
cltd
sub
jns
les
sti
jl
mov
xor
push
sub
cmp
lods
shll
cmpsb
inc
rcr
mov
adc
pop
jle
xor
ret
lret
push
popa
cmpsb
icebp
mov
pop
daa
mov
dec
cmpsb
and
enter
lea
inc
sub
lcall
cmp
and
sahf
sbb
cmp
mov
jb
add
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
sbb
fcompl
pop
jp
pusha
adc
les
mov
mov
rol
jbe
xlat
sbbl
and
ja
test
xor
lret
aad
fs
push
push
cltd
loope
sarb
sub
pop
inc
out
inc
add
mov
mov
lcall
pushw
pop
jne
arpl
push
cmpsl
stos
mov
test
popa
dec
dec
xchg
jle
loopne
pop
xor
dec
bound
popf
push
subl
lret
popa
sub
aaa
xchg
mov
pop
lahf
test
jbe
popa
mov
sub
add
es
adc
fwait
mov
mov
jb
lods
test
xor
pushf
shl
dec
sahf
test
pop
sub
hlt
adc
inc
xor
stc
ja
sahf
cmpsb
repnz
rclb
aas
pop
shll
add
in
inc
hlt
cmp
cmpsb
pop
faddl
and
jae
orps
iret
push
inc
and
jo
rcll
jmp
jae
inc
mov
loope
mov
or
pop
pushf
imul
sbb
xor
jl
and
arpl
je
cmp
idivl
fbld
mov
xor
cwtl
orb
fimull
ja
pop
adc
cltd
popf
mov
jg
loop
jae
xchg
push
rcrl
and
imul
fs
insb
lds
test
out
shll
sbb
cmc
cmp
xchg
cld
test
ret
jle
rol
jmp
push
decl
xlat
jbe
mov
xchg
movsb
dec
test
jae
into
addr16
pop
sub
inc
add
lahf
in
xor
push
in
xchg
movsl
xchg
jnp
inc
cli
test
lds
push
popf
out
ret
sub
cmpsb
mov
in
into
lret
xchg
std
sub
jne
cmp
lea
inc
inc
jns
js
movsb
cmc
adc
cs
jmp
jl
imul
xchg
scas
insb
cmc
aas
idivb
fstps
and
ljmp
push
inc
pushf
xchg
pop
out
add
call
mov
mov
and
dec
sub
sbb
call
enter
xchg
mov
and
jmp
adc
push
mov
addl
stos
or
or
pop
call
test
fnstsw
pop
fs
rclb
jns
cmpsl
pop
stos
jl
or
jg
scas
ss
push
sbb
jae
xor
and
repnz
mov
out
sub
inc
mov
test
xorb
xlat
cli
mov
lods
aas
push
push
xlat
leave
jne
jno
mov
push
inc
mov
cmp
arpl
push
ret
fidivs
cmp
fisttps
and
inc
lahf
push
je
lret
sub
push
shlb
loope
mov
movsb
or
mov
test
mov
xchg
lret
dec
pop
hlt
mov
testb
pop
loop
js
daa
cmp
dec
inc
mov
or
push
adcl
dec
jnp
inc
cltd
adc
pop
push
push
movsb
jmp
push
iret
or
pushf
sub
lahf
fwait
mov
sbb
dec
mov
shlb
xchg
jmp
fadds
hlt
andl
add
xor
push
iret
inc
xchg
xchg
rcrl
mov
mov
adc
loopne
push
xchg
sub
pop
add
data16
mov
test
push
test
push
xchg
mov
sub
add
add
xchg
xor
cli
lret
lcall
test
push
repnz
push
roll
push
inc
jbe
add
and
dec
ds
and
decl
push
mov
dec
ja
push
popf
push
fimull
out
dec
lock
adc
bound
ret
in
cmp
sbb
and
cmc
lds
cmp
dec
into
add
xor
add
daa
int
and
ret
insl
mov
push
adc
incb
loop
je
adc
sub
outsl
jne
push
add
sbb
fcoms
mov
fwait
loop
shrl
jno
sbb
mov
adc
lods
cmp
mov
shlb
pop
xorl
es
out
xlat
imul
jb
sbb
xor
pop
jg
jecxz
les
xor
xor
jbe
xchg
xor
mov
int3
xchg
xchg
outsl
faddl
mull
shlb
leave
data16
or
fsubl
ficomps
mov
out
clc
loopne
loope
iret
loope
push
fwait
mov
test
loop
push
icebp
add
sbb
push
lahf
sbb
dec
pop
rcr
mov
jge
xor
jo
cmp
mov
mov
dec
or
adc
aas
repz
fs
xchg
dec
inc
mov
xchg
mov
cmp
jmpw
pop
cmp
push
dec
xchg
pushf
pop
testb
cmp
push
xchg
xchg
stc
test
shlb
clc
pop
leave
insb
fsts
shll
mov
or
into
jns
je
data16
pusha
and
adc
loop,pn
mov
fwait
and
pop
mov
ja
out
adc
jmp
adc
jg
jmp
push
shl
int
xchg
gs
lahf
popf
xchg
movsb
out
adc
mov
xor
je
xchg
jbe
ret
dec
mov
push
push
hlt
mov
xorl
rolb
lds
pop
cmp
pop
sti
sub
pop
test
xchg
fnsave
loop
mov
dec
ss
aas
jns
xchg
jg
loop
leave
mov
jecxz
cs
sarl
popf
call
pusha
nop
sub
xchg
push
popl
pop
decl
xchg
push
fldt
sbb
mov
iret
xchg
mov
push
inc
imul
push
lock
or
sbb
sbb
push
mov
stos
ljmp
push
enter
sbb
mov
movsb
mov
stos
mov
mov
add
call
iret
mov
jle
push
sbb
stc
mov
mov
ret
and
add
nop
mov
ret
sub
jo
enter
jns
das
mov
mov
ret
pop
es
lret
cmpsb
pushf
or
cmp
test
and
jecxz
jns
ret
pop
repz
and
mov
and
mov
sub
and
add
popa
loope
jb
inc
or
push
in
adc
dec
adc
inc
pop
xlat
dec
and
xchg
mov
scas
mov
adc
sbb
repnz
add
ja
pop
test
out
and
jb
es
rorb
cmp
sahf
pop
mov
out
aad
add
push
imulb
jnp
xchg
xor
rol
mov
or
push
ja
xchg
popa
push
pop
lret
pop
push
inc
aad
jbe
push
cmp
jl
cmpsb
xor
xchg
push
jb
adc
adc
adc
cmp
das
add
and
stos
jg
hlt
push
jg
divl
mov
or
jge
scas
in
gs
ret
add
pop
aas
push
and
decl
adc
mov
mov
pop
or
xlat
and
clc
mov
adc
lcall
js
mov
pop
ret
xchg
sbb
dec
and
pop
mov
out
adc
scas
lods
cmpl
jb
icebp
push
jg
jns
pop
popf
inc
test
mov
dec
pushf
stc
lret
pop
mov
mov
sub
stc
lea
fisttpll
fmulp
pop
xchg
mov
xchg
xlat
mov
popa
ljmp
fadds
rcrb
or
leave
test
push
mov
pop
cld
push
mov
sub
and
repz
jnp
push
out
es
loopne
ja
xchg
or
rcrb
xchg
pop
test
sub
pop
xor
leave
mov
hlt
push
xchg
in
mov
sbb
fstpl
rclb
es
aam
leave
xchg
es
cwtl
inc
insb
imul
pop
call
pop
sbb
fnstcw
jge
add
push
or
add
jle
loop
repnz
ja
js
out
dec
aas
push
stos
loope
jl
cmc
jno
sub
sbb
pop
idivl
add
adc
arpl
xlat
loope
add
stos
jp
pop
xlat
data16
fld1
in
mov
jge
xor
mov
aam
jg
sbb
xor
push
inc
lods
xchg
loop
xchg
pop
lidtl
cmp
enter
les
jns
dec
mov
lcall
jb
out
add
xchg
loopne
imul
add
es
inc
jo
sbb
dec
cmpsl
rorb
lds
mov
repnz
cmp
sbb
adc
repz
dec
inc
test
icebp
ja
and
lock
ljmp
push
sbb
xchg
mov
js
fdivl
sbb
icebp
xor
pop
push
pop
mov
fidivl
loope
test
enter
mov
jge
mov
push
mov
or
aam
les
inc
aad
push
in
in
or
jo
mov
sbb
faddl
lods
xchg
shlb
std
enter
dec
inc
add
cld
sahf
pop
or
scas
test
jo
push
inc
sar
jle
xorl
adc
fdivr
pop
inc
imul
cmpsl
mov
and
dec
sbb
aas
dec
pop
test
xchg
add
and
test
ljmp
loope
pop
mov
leave
call
loopne
dec
mov
cmp
cmp
fbld
add
xchg
lahf
fstp
or
jo
sbb
orl
adc
ret
mov
lock
jecxz
cmp
xchg
lret
rcrl
sbb
lods
andb
rorb
scas
mov
mov
cmp
sub
sub
pop
jmp
call
push
xchg
push
std
outsl
fwait
leave
and
mov
and
daa
pop
mov
push
call
jl
fwait
or
test
pop
sarl
cmpsb
std
rclb
dec
sbb
jb
xlat
popf
loop
or
pop
pop
lods
dec
sub
repnz
and
pop
mov
lea
mov
mov
dec
push
pushf
mov
xchg
jb
dec
pop
inc
daa
jb
cmp
out
jle
popf
pop
pushf
ret
push
sub
adc
or
fidivs
out
idiv
inc
movb
test
adc
mov
pop
sbb
pop
sahf
or
inc
push
test
inc
lods
push
cli
out
dec
sahf
in
std
or
fs
cwtl
xchg
dec
mov
lds
inc
lea
mov
je
lahf
inc
nop
or
xchg
std
mov
pop
jns
lahf
and
sahf
scas
dec
popf
sahf
mov
rcrl
dec
xor
rcrl
negb
jp
cltd
pop
dec
and
push
and
dec
mov
and
loope
loope
mov
dec
and
in
sub
fsts
pop
es
in
mov
sub
into
out
and
pop
mov
daa
or
int
les
xchg
mov
adc
xchg
sub
nop
data16
add
inc
sbb
hlt
jge
push
xchg
mov
or
sbb
lret
fidivrs
dec
add
lahf
adc
andl
out
push
loop
xor
dec
repz
xorb
mov
inc
andb
sbb
out
stc
jmp
and
dec
popa
jl
xchg
pop
dec
pop
sub
sbb
insl
das
pushf
push
pop
cmp
mov
rcll
dec
or
loop
decl
inc
xchg
call
and
repz
mov
cmp
push
mov
lret
fld
fistpl
stos
jae
lods
or
push
pop
and
inc
mov
mov
mov
xchg
cmpsl
xor
test
cmp
repz
sub
lock
aam
int
les
push
add
or
stos
repnz
mov
push
rol
cmpl
mull
jp
in
add
jb
sbb
lahf
data16
dec
pop
inc
push
cli
push
test
int3
call
push
es
fnstenv
repz
pop
lock
jnp
xchg
mov
push
sarb
hlt
int3
bound
insb
mov
pop
jmp
loop
mov
std
xchg
mov
adc
mov
push
call
jmp
xchg
pop
cmp
gs
add
push
es
push
icebp
into
and
inc
jbe
data16
out
outsl
in
add
ret
xchg
jmpw
scas
push
jne
cmp
fbld
mov
mov
pop
mov
xor
push
sbb
add
and
xor
in
jb
xor
and
or
arpl
dec
push
pop
add
popf
pop
aam
sbb
xor
arpl
mov
stc
sbb
dec
rol
insb
sbb
in
arpl
pop
inc
xchg
bound
aas
jp
inc
pop
sub
inc
push
imul
test
push
xor
jp
mull
dec
shrb
cmp
jg
ljmp
fidivrl
push
xor
dec
mov
push
popf
leave
addl
mov
loope
add
in
or
pop
xchg
dec
and
pop
sub
cmp
popa
dec
fwait
and
sbb
test
dec
out
out
clc
dec
int
loope
mov
dec
ja
icebp
and
mov
loope
inc
or
inc
sbb
lds
stos
mov
push
pusha
into
mov
and
stc
cmpsb
into
pop
aam
fisubs
pushf
add
sub
pop
orl
sbb
test
mov
jle
push
mov
fxch
pusha
or
idivl
pop
add
lahf
and
cltd
mov
hlt
mov
loope
test
loop
fs
inc
pop
shl
inc
js
movsl
negb
cmp
mov
xor
cwtl
adc
jl
sub
inc
stos
cltd
inc
pushf
push
neg
outsl
mov
or
adc
jecxz
cmp
inc
cwtl
adc
ficomps
and
sahf
push
ss
pusha
int
push
dec
sti
adc
dec
cmp
nop
ret
xor
aam
pop
aas
inc
loopne
cmpb
or
std
pop
adc
jmp
cmp
movl
loopne
cwtl
fidivrl
dec
fcomp
inc
cli
dec
scas
sbb
roll
dec
xor
dec
mov
daa
out
dec
jmp
adc
mov
pop
test
mov
push
mov
mov
sbb
and
in
dec
cmp
sbb
jmp
movswl
mov
xchg
sub
xor
push
rcr
in
xor
daa
mov
ja
je
mov
add
dec
or
mov
mov
sbb
jecxz
mov
sarb
in
jne
bound
sub
cmpsb
mov
das
xlat
xlat
jne
popa
pop
mov
cmp
dec
push
imul
cmp
sbb
shll
or
hlt
jge
scas
inc
repnz
mov
cmp
pop
outsl
mov
pop
inc
lods
dec
mov
xchg
fwait
jle
pop
mov
insl
sub
dec
dec
sti
movsl
fistpl
push
sub
mov
mov
inc
int
push
mov
lret
es
xor
popf
pop
bound
call
out
xchg
push
xchg
fimull
sub
and
popf
add
cmpsb
std
outsl
lods
push
jb
and
pusha
sub
push
clc
sbb
fcoms
xor
jno
test
add
jmp
mov
shrb
push
out
lret
mov
pushf
mov
test
xor
push
shl
loopne
lods
insl
xchg
jl
sub
popa
insl
leave
add
inc
push
aas
fistpl
inc
push
inc
fistpll
xor
push
shll
test
leave
cmp
sub
mov
hlt
and
hlt
test
mov
mov
leave
lods
xor
mov
cmp
dec
jge
adc
jmp
jle
and
xchg
xorl
mov
mov
mov
sub
dec
in
aam
or
subl
xor
ret
out
push
and
mov
test
and
lea
rcrl
or
mov
jno
or
sti
mov
test
dec
loopne
mov
dec
aaa
ret
ljmp
iret
sub
push
xchg
pusha
inc
int3
aas
xchg
out
or
test
and
enter
test
dec
fstp
adc
cmp
adc
push
or
jae
aas
arpl
ficoml
xchg
inc
dec
xor
inc
loop
fsub
mov
rcl
inc
sti
push
push
or
mov
xor
xchg
push
fisubl
jnp
xchg
scas
xchg
repnz
pop
daa
jnp
jnp,pt
repnz
ja
xor
mov
push
ds
or
mov
arpl
inc
push
in
pop
rcl
and
pop
fwait
fs
xor
enter
sub
adc
leave
dec
int
insl
mov
or
add
clc
popa
push
loop
cmp
cld
xor
out
and
les
pop
leave
adc
imul
mov
lret
ret
sub
mov
gs
add
push
push
sub
cmpsl
mov
mov
aaa
mov
jb
cs
mov
popf
out
scas
jge
repnz
xchg
jns
sub
shll
pop
outsl
dec
fsubrs
push
mov
roll
mov
out
xchg
push
std
fists
int
xchg
mov
es
mov
enter
lret
lret
sub
pushf
in
pop
push
stos
push
xchg
out
jecxz
sahf
rorb
shrb
lock
addr16
adc
fdivp
jg
lret
int3
adc
cmc
jne
lea
mov
mov
xor
cmova
sub
and
syscall
jne
add
enter
push
inc
cmp
dec
dec
adc
add
pop
icebp
jne
mov
or
repz
xchg
negl
jb
insb
cmpl
out
call
outsb
mov
dec
bound
jl
sahf
into
pop
int
jno
mov
adc
push
out
sub
fs
rcrl
cwtl
jmp
inc
and
xlat
xor
jp
mov
jl
out
or
test
sarl
and
pop
mov
fcoml
clc
mov
sbb
in
out
clc
loopne
iret
dec
dec
pop
inc
push
pushf
pop
jno
enter
cmp
pop
imul
repz
cmp
and
push
adc
mov
jne
xlat
test
push
or
addr16
adc
nop
push
iret
pop
cwtl
mov
push
sbb
stc
imul
cmp
mov
xor
out
rcrl
lock
rorb
insb
inc
and
stc
fwait
and
mov
pusha
or
fcomip
push
inc
adc
out
adc
lods
push
pop
sbb
jmp
jne
sub
add
jo
in
imul
xor
cmp
std
push
push
lock
fsubrs
add
push
sbb
hlt
loop
sub
in
push
add
cli
xchg
mov
cmp
sub
mov
xor
adc
adc
pop
push
jnp
jg
push
jnp
sub
cmp
movq
lock
sahf
dec
mov
sarl
dec
xchg
call
imul
mov
imulb
in
pop
dec
sbb
push
outsb
dec
out
popa
pop
xlat
orl
pop
mov
cmp
fildll
movsb
int
rol
lret
sub
repnz
push
std
vcmpsd
inc
in
pop
jmp
inc
cli
subb
test
xor
insb
repz
push
jnp
mov
jnp
jb
xor
and
lahf
loop
sub
cmp
inc
jle
inc
hlt
pop
shrb
mov
xlat
pop
mov
es
mov
pop
out
adc
mov
cld
sarb
cmpsb
adcb
push
imul
xlat
pop
sarb
pusha
and
jle
fucomp
cld
and
jecxz
int3
push
inc
imul
push
push
inc
daa
lea
dec
loop
shll
shr
imul
test
popa
xchg
int
xchg
push
or
cmpsl
ret
mov
push
sub
pop
pop
sbb
xchg
fld
mov
rolb
aaa
sbb
leave
inc
pop
lea
push
pop
add
push
pop
gs
inc
ret
lea
movsb
or
call
sbb
cmpsl
mov
pusha
mov
mov
inc
jge
fwait
dec
and
les
mov
movb
stos
inc
repnz
imul
les
push
cmp
jmp
or
pop
sbb
fdivrl
out
int
imul
test
mov
popw
iret
clc
cli
push
or
aam
rorl
xchg
sub
divb
adc
add
and
cmp
nop
jge
mull
mov
decb
sub
nop/reserved
in
jns
out
lods
push
xor
iret
cmp
shll
dec
mov
xor
inc
repnz
or
ret
mov
movsl
jnp
pusha
test
push
push
lea
lds
cmp
loopne
inc
int
ljmp
fcmovnb
sbb
cmp
sub
and
lcall
cmp
mov
push
mov
add
scas
faddp
dec
jp
std
scas
dec
pop
pushf
mov
mov
arpl
cmp
push
adcl
jne
dec
dec
mov
cmp
dec
xor
cmp
clc
aad
add
cmp
jo
stc
mov
mov
jbe
rcrl
xor
inc
inc
push
push
push
ljmp
ret
mov
into
out
aas
xor
cmp
add
or
mov
xor
cmp
jmp
add
jmp
adc
negb
cs
insl
loopne
es
sub
inc
pop
pusha
rcr
inc
mov
cmp
fwait
xor
test
jne
jmp
ja
pop
out
pop
sahf
jbe
or
push
aam
ss
sbbb
adc
mov
loopne
lods
in
loope
loope
popa
rorl
cmp
in
scas
in
pop
adc
imul
jmp
mov
jbe
frstor
adcb
repnz
adc
mov
fadds
loopne
mov
loope
adc
mov
enter
adc
mov
test
mov
stos
adc
leave
fisttpl
pop
pop
adc
sbb
das
mov
rolb
movsl
jmp
adc
inc
pop
in
clc
std
jno
add
or
testb
push
adc
lea
add
test
fildl
dec
push
aad
lcall
and
jl
out
rcrl
dec
inc
jle
jne
pop
inc
mov
andl
fcomp
mov
les
es
sahf
xchg
enter
add
and
cwtl
push
lret
aam
or
and
les
es
outsl
ds
mov
divl
dec
cltd
and
mov
loopne
ficoml
jnp
inc
pop
in
inc
fwait
dec
lea
or
mov
push
mov
insl
mov
outsb
andl
dec
pop
jae
sub
jb
arpl
test
cs
pop
loopne
cmp
mov
or
and
pusha
cmp
out
in
out
fwait
mov
adc
subb
mov
fmulp
xchg
adc
xor
fsubl
movsb
push
movsb
scas
inc
and
rorb
mov
and
clc
mov
inc
push
lea
movsb
fidivs
cmp
imul
or
xor
imul
addr16
jmp
cmp
push
subl
adc
ret
sbb
xor
sbb
push
popf
pop
and
iret
aaa
insb
mov
sub
and
add
bound
subb
roll
sbb
jns
xchg
dec
shrl
xor
punpckhwd
test
int3
sub
mov
sub
aad
xor
push
cs
loopne
cmp
pop
cltd
xchg
ffreep
sbb
push
jl
das
bound
popa
inc
inc
inc
cmp
push
scas
lock
inc
std
sub
xor
dec
iret
add
inc
adc
stos
pop
push
movsb
jmp
push
xchg
fs
cld
mov
or
rcrb
mov
rclb
es
cmp
into
je
or
out
push
movsb
nop
and
push
lahf
pop
push
fstl
mov
pop
and
cmp
aaa
cmp
xchg
into
adc
push
outsl
clc
jp
loopne
into
xchg
cmp
jp
add
pop
xlat
adc
push
sti
pop
jecxz
pop
stos
inc
faddl
mov
or
mov
clc
cmp
xchg
mov
leave
mov
pop
dec
fdivs
add
xchg
das
lods
xchg
fs
jae
mov
pop
mov
subb
fadds
pop
sbb
inc
adc
push
inc
aam
icebp
xor
outsb
inc
xchg
inc
leave
push
pop
scas
xor
scas
mov
pop
push
pop
inc
pop
cmp
fldt
shrl
jle
mov
jecxz
cmp
push
aas
ret
arpl
sbb
pop
leave
push
xor
jge
dec
jmp
aam
mov
adc
mov
into
fnstcw
xchg
adc
push
cwtl
jae
ret
xorl
add
fists
mov
and
in
inc
pop
pop
sarl
movb
xchg
fdivrs
stos
cli
movsb
adc
dec
loope
stos
cld
orb
sub
mov
and
mov
bound
leave
xlat
xor
fs
cmp
xor
aaa
cmp
repnz
out
dec
jb
repz
add
cmp
cwtl
mov
movups
push
jnp
fcmovnu
bsr
mov
gs
leave
jmp
stc
add
fstp
push
cmc
repz
push
lds
jns
leave
jo
pop
aam
pop
jne
sub
popf
cltd
js
pop
add
or
out
adc
adc
hlt
fidivl
push
and
add
push
push
cmp
pop
xor
sbb
push
dec
xor
and
roll
xchg
popf
lret
xchg
dec
popa
pop
movsl
iret
lods
insb
inc
and
pop
stos
adcb
stos
sbbl
jbe
sub
in
loop
mov
iret
xor
not
iret
jns
dec
mov
push
clc
jge
adc
mov
dec
pusha
push
or
cs
daa
icebp
in
pop
push
inc
dec
shlb
das
sbb
lcall
pusha
xor
insl
rcrl
push
stc
data16
std
push
repz
rcrl
or
cmpsb
mov
repnz
jg
mul
loop
fimuls
test
orl
xor
pop
lods
mov
pop
test
or
xchg
out
insl
dec
jns
sti
cmp
push
out
fiaddl
xor
and
or
gs
push
dec
popa
iret
cmp
cwtl
push
ja
pop
cli
adc
mov
dec
cli
repz
nop
jp
pushf
jmp
push
mov
ds
mov
jl
cmpsl
scas
shll
sbb
aas
dec
aaa
jg
mov
jl
xchg
pop
dec
daa
out
adc
clc
cmp
mov
popf
jns
lock
jecxz
xchg
push
stos
add
jmp
and
or
stos
clc
std
adc
xchg
loopne
or
xchg
lret
and
dec
cmp
pop
fs
or
rol
lea
push
or
and
adc
pop
add
sub
mov
pop
aaa
je
pop
mov
in
and
inc
xlat
dec
sub
push
test
dec
push
fistl
ret
in
add
pop
add
adc
std
xor
xor
fildl
xchg
pop
xlat
mov
into
fcompl
arpl
jb
stos
psubusb
and
dec
fldln2
jmp
sub
std
cmp
add
adc
inc
mov
cli
ltr
in
inc
pusha
sbb
pop
lea
insb
mov
xchg
mov
es
in
adc
sbb
inc
mov
jns
xor
mov
add
mov
int3
dec
cmpsb
arpl
std
and
push
subb
insl
bound
xor
jp
inc
inc
inc
loope
xor
pop
stos
jge
cmp
aas
sub
sbb
lds
in
popa
sahf
lret
sbbl
sbb
outsb
pop
movsl
xchg
aaa
pop
call
mov
pop
popf
shll
insl
repnz
aam
lods
mov
sub
scas
arpl
aaa
addr16
add
mov
sub
outsb
bound
xlat
das
or
jle
cmp
fld1
xor
loopne
pop
mov
jmp
filds
jns
inc
lods
inc
lods
lods
xor
test
push
mov
inc
push
mov
in
xor
add
fsubp
add
push
insl
leave
push
xor
cld
cld
cli
dec
js
pop
and
push
insl
cmc
cmp
sub
xor
adc
adc
pop
jno
rcrl
xorb
inc
jnp
cmp
fisttps
sbb
or
fisubrs
mov
add
jns
iret
xchg
jmp
les
xor
call
int
mov
mov
cmp
xor
out
loop
cmp
loopnew
jbe
sbbb
sub
dec
inc
test
daa
nop
xchg
inc
jmp
push
movsl
call
testl
testl
dec
loop
add
mov
adc
hlt
add
jnp
imul
mov
xor
gs
imul
sub
ja
jp
add
rolb
sahf
jno
xlat
xor
jno
adc
mov
ss
inc
xor
cmp
xchg
pop
add
mov
lahf
and
clc
movsb
mov
fnstcw
mov
pop
scas
into
insb
stos
ret
arpl
push
repz
mov
xchg
mov
ja
cmp
inc
cmpsb
outsb
int3
out
out
fiaddl
popa
out
fisttpl
cltd
fimuls
sub
fwait
pop
add
clc
loop
sahf
repnz
das
dec
out
idivl
add
xor
mov
loopne
int3
dec
cmpsl
push
jbe
movsl
cmp
subl
inc
and
xchg
pop
mov
scas
xchg
push
imul
stos
in
or
test
xchg
push
out
scas
insb
orb
jbe
clc
mov
jns
mov
mov
arpl
aaa
ficoms
cmp
mov
push
test
ljmp
rcrl
xor
adc
dec
push
cltd
pop
add
arpl
or
cmp
jl
push
scas
mov
mov
imul
lock
add
pop
in
dec
push
push
pop
insl
jl
jns
bound
sahf
push
test
ljmp
cld
daa
aas
lret
movsl
ds
inc
mov
test
hlt
pop
pushf
sub
scas
inc
cwtl
out
cltd
lea
fimull
lods
ret
mov
cwtl
mov
cmpsl
push
mov
fsubs
cmp
out
or
stos
jo
in
clc
lods
push
mov
adc
call
adcb
movsb
dec
pop
xchg
ljmp
lmsw
pop
push
inc
in
orl
and
pop
add
gs
or
inc
add
or
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
movsb
push
jg
add
jp
pop
jp
sbb
out
fwait
pop
jl
out
repz
imul
jnp
jns
push
push
mov
cli
aas
mov
cmp
sbb
add
sub
xor
aas
jno
adc
mov
scas
ljmp
dec
fimull
pop
xchg
mov
xor
test
mov
les
push
mov
sahf
imul
cwtl
outsb
mov
aas
xchg
hlt
pusha
loop
test
daa
cmpsl
repz
and
add
sahf
lret
sub
mov
inc
inc
push
into
adc
inc
lcall
lods
flds
hlt
and
cmp
lds
cmp
push
and
jmp
dec
mov
fistl
fxch
push
mov
jp
inc
or
lahf
lock
scas
js
pusha
jecxz
sbb
pop
ja
insb
xor
lods
inc
dec
cld
mov
cwtl
push
sbb
adc
sahf
pop
mov
stos
repnz
aam
cmpsb
lods
rolb
mov
shlb
fcomip
cmpsb
andl
push
jg
cs
sti
push
sahf
ret
stos
cli
sub
ret
pop
int
int3
mov
ja
adc
arpl
pop
xor
mov
dec
inc
sahf
arpl
push
addb
inc
cmp
sarb
adc
sub
inc
es
bound
scas
add
mov
or
cmp
test
jae
hlt
lods
push
cwtl
ret
dec
xor
leave
lahf
xchg
push
pop
and
jmp
xor
pop
or
push
aam
test
pop
test
loope
adc
xlat
jmp
mov
xchg
sti
ret
jg
cwtl
stc
stos
stos
orb
add
dec
xchg
mov
cmp
outsb
fiaddl
int
stos
cmp
xchg
mov
jbe
ret
xchg
lret
pop
je
add
aam
or
shll
pop
jbe
test
fnstsw
push
fnstsw
lods
jmp
push
adc
lea
mov
jno
or
xchg
cmp
pop
pop
adc
xchg
adc
stc
jecxz
imul
sub
push
movsb
das
dec
mov
pop
ret
mov
jmp
add
jns
cmc
sarl
pop
dec
or
pop
adc
data16
mov
test
fwait
cmpsb
pop
imulb
xchg
jbe
jns
jl
jae
cwtl
imul
mov
xor
pop
mov
in
push
xchg
fiadds
inc
push
push
pop
pusha
add
ljmp
or
int
add
dec
cli
cmp
ret
jmp
cmc
call
out
and
dec
in
xchg
mov
dec
jns
pop
jnp
xchg
push
mov
cli
jne
jo
push
inc
leave
xchg
jle
test
lds
aad
adc
pop
ds
stos
lea
pop
int
add
aas
dec
stos
sub
push
int
sub
jnp
jecxz
and
xor
idivb
inc
mov
or
repz
sbb
dec
sub
mov
fcoml
lahf
mov
jo
mov
or
aaa
lea
jg
jo
aad
cmpsl
gs
mov
push
in
scas
lods
in
or
sbb
aad
and
mov
dec
inc
mov
mov
sub
or
movsl
mov
ss
add
dec
adc
pop
pop
popf
jmp
pushf
push
leave
mov
or
dec
cs
xor
jmp
lock
adc
mov
aaa
mov
add
jbe
dec
subb
ljmp
cmp
mov
add
pusha
cltd
iret
cmp
mov
adc
loop
pop
rolb
rorb
xor
loopne
in
popf
mov
or
dec
or
in
mov
xchg
mov
inc
fildll
sbb
pop
adc
decb
mov
outsb
test
repz
and
aam
outsb
lds
cwtl
cmp
pop
sub
fdivrl
xchg
xor
inc
in
pop
fcmovnb
jecxz
leave
jmp
ja
es
mov
jg
push
mov
push
jae
in
and
adc
ror
lret
lahf
leave
fstl
fbstp
mov
mov
cs
mov
stos
fucomip
adcb
imul
mov
shr
daa
mov
cmpsl
jb
or
and
push
mov
or
in
jo
mov
cmpsl
int3
in
push
mov
popa
xor
mov
sub
ljmp
push
test
je
adc
pusha
fndisi(8087
xor
popf
movb
data16
pminsw
dec
test
jmp
in
in
bound
add
mov
mov
dec
sub
cmp
pop
lock
pextrw
jne
stos
inc
popa
test
lock
sbb
pop
push
xor
cli
add
push
jle
mov
sbb
lods
in
movsb
scas
sbbb
jecxz
test
test
mov
mov
xchg
scas
xchg
jecxz
ret
jne
mov
rcl
jp
scas
push
or
lock
cmpb
pop
stos
cmp
sub
arpl
pusha
insl
scas
aas
in
jb
adc
or
loopne
rclb
mov
lret
out
lret
mov
jo
sub
fildll
sub
pushf
jae
or
xor
into
lret
dec
adc
movsl
shlb
mov
pop
pop
lcall
inc
lds
sub
xchg
test
mov
repz
sbbl
push
stos
fisttpl
stos
cmp
imul
xor
pop
test
lcall
shr
lret
pop
sub
mov
xor
fstpl
movsl
sahf
mov
adc
add
and
mov
int3
js
sub
rolb
push
icebp
scas
xchg
mov
jne
aad
sub
test
popa
arpl
cmc
int3
hlt
mov
and
test
xlat
or
les
nop
outsb
movsb
inc
add
and
jno
popf
jmp
scas
adc
or
or
mov
mov
nop
xchg
in
mov
xor
mov
mov
subl
or
sti
lcall
cwtl
pop
mov
gs
mov
push
dec
lock
jno
or
int
in
jmp
adc
jne
add
shl
loope
jnp
pop
mov
leave
mov
add
inc
xor
dec
mov
jb
xor
call
addl
mov
jne
cltd
and
je
push
mov
inc
xchg
movsb
sahf
sub
sbb
adc
movb
xchg
sahf
scas
mov
incb
jb
mov
push
fdivs
cmp
jmp
xchg
dec
inc
ljmp
mov
xor
adc
out
jecxz
ss
inc
push
jle
jbe
jmp
mov
push
jnp
mov
repz
inc
fisttpll
lods
fiadds
xor
cmpsl
leave
lds
inc
test
aad
xchg
mov
ja
jge
inc
add
and
dec
dec
adc
jg
in
hlt
inc
and
or
lods
inc
stos
in
xchg
cmp
fistl
pop
aas
add
add
sbb
mull
jg
push
leave
outsb
outsb
dec
decl
add
cmpsl
jecxz
pop
mov
add
xlat
or
dec
fdivrp
gs
push
loopne
imul
notb
into
popf
fsin
movsb
pop
pusha
dec
in
xor
xchg
or
movsl
in
out
adcl
pop
lea
gs
cwtl
stos
dec
push
fstpt
jnp
aad
add
lahf
ja
add
jp
push
cmp
andb
push
popf
inc
pop
push
mov
out
push
in
test
dec
lds
dec
mov
lods
test
mov
sub
adc
les
das
add
and
jmp
icebp
scas
mov
cmp
clc
js
mov
sub
ja
daa
shll
mov
outsb
jnp
push
shll
mov
data16
push
stos
rcl
jge
jo
outsl
mov
mov
and
or
xlat
push
inc
das
jbe
fsubrp
pop
mov
jnp
iret
call
out
dec
mov
jnp
arpl
push
inc
adc
push
jnp
ss
int
fs
inc
cwtl
pop
scas
push
cmp
inc
ja
xchg
lcall
out
test
inc
mov
xchg
pop
adc
pop
nop
mov
sbb
movl
lods
mov
out
das
mov
cli
aad
push
push
mov
cwtl
adc
out
push
popf
repnz
cli
aad
push
movsb
and
lret
and
pusha
je
or
xchg
or
mov
adc
clc
stc
outsl
xor
inc
push
push
xchg
inc
xorl
movsb
mov
ficomps
add
jbe
pop
stc
jne
dec
xor
inc
jg
cmp
pop
sahf
leave
mov
stos
in
test
mov
push
pop
enter
mov
mov
push
ret
jle
jo
dec
iret
repnz
aam
shlb
sbb
lret
dec
push
fdivrs
or
popf
cmp
fsubp
xchg
rcr
pushf
jg
xchg
mov
push
sub
in
push
add
or
add
loope
sbb
mov
xchg
jg
push
shrl
cmp
xchg
add
inc
insb
pop
mov
loopne
sub
sub
test
mov
xlat
add
ffree
lahf
int
adc
vcvttps2dq
and
jb
mov
xchg
mov
jecxz
jle
test
movsl
pop
loope
gs
and
in
scas
and
out
xchg
adc
fs
mov
jmp
ret
xchg
movsb
mov
lock
fstl
sub
sbb
add
jge
xchg
pop
inc
stc
pusha
sbb
daa
popl
sarb
sbb
push
mov
xchg
mov
or
mov
jae
dec
dec
and
pop
cld
or
push
and
inc
push
mov
adc
jecxz
std
enter
mov
cmp
stc
xor
in
rcl
and
mov
lock
mov
mov
pusha
mov
ja
jb
pop
fwait
mov
sub
mov
je
fildl
pop
mov
jbe
jb
adc
xchg
test
sub
sahf
fmull
cmp
dec
jno
fmuls
pop
mov
out
out
mov
nop
pop
push
pop
stc
es
adc
out
sbb
test
scas
mov
jg
in
in
and
enter
popf
dec
mov
cmc
xor
stc
push
call
cmp
xchg
clc
xor
dec
bound
ljmp
stc
add
repnz
bound
jns
rcll
iret
dec
mov
icebp
pop
leave
dec
lret
fs
testl
mov
mov
push
xchg
mov
shl
fdivrs
push
lret
ror
xchg
arpl
pop
lods
ret
out
rolb
cmp
movsb
lock
mov
outsb
int
or
lcall
cld
pop
es
push
out
push
pop
lret
divl
mov
and
add
jnp
icebp
andb
repz
dec
jmp
inc
cmp
addb
add
in
adc
mov
into
ffree
sbb
and
xor
inc
push
std
xor
xchg
adc
inc
dec
pop
xchg
xchg
ljmp
pop
or
loop
add
inc
js
movsb
xlat
pusha
mov
std
xor
repz
sub
popf
int3
fmulp
inc
dec
sbb
pop
fnstcw
pop
movsb
es
jmp
aaa
jle
leave
or
jnp
leave
dec
mov
cmp
xor
push
or
fisubrs
std
insb
aam
and
das
inc
cmp
inc
inc
je
sbbl
xchg
clc
repz
pop
stc
lods
sbb
int3
test
mov
pop
cmc
dec
rcll
adc
aam
adc
jno
sbb
jg
out
lods
dec
jg
xchg
or
pushl
cmpsb
iret
scas
icebp
scas
push
xor
mov
dec
js
movsb
inc
add
jmp
inc
xor
sbb
addr16
dec
push
pusha
repz
push
sub
fcmovne
jmp
outsl
cltd
test
fisttpll
inc
sbb
mov
pop
xor
dec
jecxz
mov
test
inc
inc
aaa
jne
sub
mov
mov
sub
loopne
or
cld
leave
int
dec
mov
shrl
sub
add
and
imul
dec
popf
cmp
bound
mov
mov
jns
out
mov
inc
push
cmp
rorb
sbb
imul
jl
pop
sbb
push
xchg
bound
xchg
mov
testl
or
jl
je
dec
mov
pop
sti
mov
jecxz
outsl
icebp
cmp
or
nop
movsl
int
add
cmp
sub
aaa
cwtl
icebp
push
outsl
push
xor
fldcw
jmp
decl
stos
int3
sub
lods
jb
xor
js
lods
ret
addr16
jp
and
cmp
loop
test
int3
xchg
movsb
sub
sti
pop
push
shrb
mov
fiaddl
lcall
adc
je
and
les
jecxz
cmpsb
loop
sub
testl
push
call
mulb
adc
movsl
enter
les
addb
sub
int
inc
cmp
pusha
adc
enter
es
test
mov
test
or
pop
mov
in
mov
sti
inc
rorl
mov
insb
sub
sbb
stc
movsl
xchg
js
jmp
out
push
lock
sbb
mov
cmp
mov
xlat
sub
int3
imul
lods
cmpsl
cmpsb
enter
icebp
out
ret
stos
jne
leave
insb
and
jecxz
bnd
lods
fsub
dec
in
add
js
and
mov
add
inc
xor
mov
dec
cmp
cmc
test
outsl
dec
in
jo
fisttpll
aas
movsb
push
add
fcmovne
jmp
ljmp
xchg
lcall
inc
mov
rcll
jecxz
sub
stos
sub
jnp
jg
js
hlt
inc
sbb
gs
pop
mov
push
xor
ret
and
sbb
push
call
inc
cmp
pushf
pop
push
xor
push
jnp
xchg
arpl
scas
inc
or
dec
arpl
mov
dec
sub
ljmp
xchg
xor
push
or
mov
or
cmp
xchg
cmp
fbstp
scas
push
aad
inc
mov
inc
and
xor
repnz
add
and
cmp
js
lock
and
pop
inc
dec
mov
mov
sub
or
mov
xchg
xchg
idivl
xor
sbb
mov
mov
out
mov
pop
pop
neg
sbb
mov
cli
mov
repz
leave
dec
jnp
or
fisubl
mov
ret
das
and
and
mov
test
cmp
push
mov
sbb
jmp
imul
xor
jl
mov
dec
inc
icebp
test
sti
fnstsw
pop
ror
sahf
insl
mov
lret
xchg
pushf
cmp
jb
sbb
into
inc
ja
xor
xor
cli
js
std
insb
fsubs
in
adc
mov
aaa
and
sub
into
in
mov
pop
inc
pop
push
mov
pop
or
mov
adc
clc
push
addb
mov
aam
lods
pushf
out
xor
cmp
je
xchg
pushf
std
mov
xchg
inc
jmp
mov
sub
inc
pop
sub
jo
mov
push
movsb
adc
and
xor
les
fisttps
sbb
cmp
insl
inc
lret
pop
scas
xchg
xor
imul
rclb
add
notl
or
ss
sub
test
add
rorb
push
lahf
add
test
jo
jbe
cmp
loopne
add
insl
lret
loop
jo
lcall
cld
cmp
testl
or
call
mov
mov
andb
push
aas
sbb
pop
mov
sarb
mov
mov
pop
lret
jge
cmp
dec
lds
pop
mov
mov
mov
aad
xchg
or
jge
in
inc
pop
pop
xchg
mov
les
jne
and
push
mov
idiv
int
jns
pop
sbb
sub
aam
push
sbb
movsl
idiv
orb
adc
addr16
sahf
xchg
cmp
mov
loope
gs
pushf
cmp
pop
sub
outsb
add
cwtl
cld
pop
or
sbb
bound
mov
inc
in
dec
nop
iret
aaa
insl
xor
aad
cmp
out
std
cli
xor
lds
and
pop
adc
test
mull
jbe
daa
inc
out
out
inc
into
xchg
sti
push
movhps
andl
loop
cmp
mov
cs
pop
sbb
sub
xchg
aam
pushf
scas
sub
pop
clc
out
or
cmp
xor
out
jnp
in
sbb
pop
push
je
scas
mov
mov
sarl
aaa
arpl
lcall
pop
cmp
pop
cmp
stc
out
mov
rcr
cmp
pop
std
xor
test
cmp
adc
mov
jp
adc
test
xchg
push
lahf
das
mov
mov
fs
rolb
aad
or
idiv
jmp
cmc
jl
cwtl
nop
jl
icebp
pop
cld
mov
loopne
pop
lahf
shll
lret
stos
adc
insb
aad
cmp
xor
insl
ljmp
push
imul
xlat
rcrb
ja
jb
mov
in
push
sahf
out
lds
dec
lret
outsl
shrl
cld
sub
inc
movb
push
jns
adc
xor
mov
testb
xchg
sub
mov
fwait
scas
sub
test
pop
lock
sbb
pop
es
pushf
cmp
push
or
adc
sbb
out
sub
cmp
iret
ja
popf
or
or
jle
fsubrl
push
stc
sub
push
lret
jmp
and
mov
mov
lds
insb
mov
out
js
push
hlt
dec
push
sub
fcomp
lds
ret
out
lock
rcl
mov
lahf
xchg
call
pop
and
xchg
pop
jae
stos
sbb
clc
adc
call
ds
add
loopne
jnp
mov
dec
pop
divl
inc
pop
sbb
leave
idivl
scas
aas
sbb
jns
lock
pop
xor
dec
xor
idivl
pop
jae
int
adc
inc
sbb
mov
adc
jns
cwtl
icebp
mov
rcrl
je
int3
lret
insb
xadd
mulb
xchg
pushf
mov
and
loopne
loope
jp
xor
xchg
test
movsl
cmpsl
push
jb
ret
das
repnz
out
daa
hlt
cli
mov
xchg
xor
sub
add
scas
loopne
lahf
pop
xor
movsl
sbb
aam
call
push
mov
adc
sbb
fcomps
clc
pushf
push
addr16
jno
jo
xchg
lods
sub
or
out
jae
ret
out
dec
fmull
popa
int
stc
xor
push
rcrl
pop
mov
or
inc
lcall
pusha
mov
daa
lock
inc
push
je
fcomps
push
in
setne
and
rcrl
lock
jmp
push
mov
add
jno
loopne
roll
leave
and
sti
push
xchg
nop
push
mov
mov
add
stos
xchg
movd
dec
add
stos
inc
data16
jb
mov
or
iret
fcomip
jns
cmc
mov
nop
pop
jbe
add
pop
movsb
dec
xchg
sti
int3
mov
gs
cld
and
pop
jg
cmpsb
cmp
imul
sarl
sbb
arpl
inc
pop
dec
cmp
inc
jl
fiadds
jno
xlat
inc
push
push
inc
std
add
inc
loop
sbb
jne,pn
sbb
sbb
ds
jno
mov
rolb
jb
aas
xor
push
lcall
cmpsl
push
push
hlt
loop
add
rorb
sbb
dec
jg
aaa
sub
loope
test
cmp
add
mov
jo
lret
and
jne
xor
cmp
dec
aas
repnz
cmp
call
test
sti
cli
mov
jo
dec
lods
lods
imul
and
sbb
xchg
sbb
dec
lods
mov
xchg
push
fsubr
mov
rclb
pushf
mov
sahf
xor
adc
adc
inc
rcr
pop
sbb
inc
aad
xchg
loopne
les
sub
or
cmp
push
insb
add
mov
jae
arpl
hlt
lret
sbb
cwtl
je
aaa
repz
scas
mov
dec
pop
bound
je
dec
pop
add
test
dec
add
je
mov
dec
adc
lds
cmp
and
and
ja
insb
bound
push
outsb
out
mov
sbb
or
cwtl
pop
faddp
add
add
fmuls
aad
fldenv
and
and
sti
int3
data16
push
cmpsb
xchg
jmp
ss
sbb
inc
push
jecxz
xor
jb
ret
jmp
adc
fcoml
jbe
outsb
add
clc
pop
push
xchg
push
in
neg
push
fdivr
and
sbb
jg
sub
out
fcoml
xor
dec
jo
cmpsb
sbb
ret
push
mov
mov
jge
pop
cmp
outsb
dec
sbb
push
fistpll
cs
daa
xor
testb
outsb
cmp
inc
leave
imul
or
sub
mov
fbstp
shll
sbb
mov
jl
xchg
pop
pop
je,pt
push
inc
cs
sbb
xchg
call
cwtl
xor
or
or
sbb
sti
mov
call
dec
add
imul
lret
sub
icebp
mov
aas
push
outsl
insl
aaa
out
movsb
cmp
sbb
movsl
jae
pop
mov
jge
mov
inc
leave
cltd
mov
mov
mov
push
pop
adc
xlat
inc
jmp
pop
insb
stos
and
and
and
outsl
dec
cld
add
sub
mov
adc
aas
jne
in
ror
xchg
cmp
stos
clc
mov
out
fsts
xor
addl
adc
aaa
test
cld
rcrl
dec
das
xchg
mov
loop
syscall
mov
add
sbb
fldenv
jnp
jne
xor
xchg
adcb
lret
les
ss
insb
gs
or
jne
les
or
jle
sub
or
out
adc
xchg
mov
jnp
pop
mov
iret
jl
int3
jns
inc
ja
daa
inc
sub
xchg
imul
add
jne
inc
jne
mov
ja
mov
repz
hlt
insb
xor
mov
outsb
mov
and
or
test
lock
sbb
out
fadds
je
xchg
test
lcall
xchg
jbe
fwait
js
rorb
or
and
subl
mov
jno
pop
add
enter
xor
and
xor
sahf
add
jo
ret
mov
pop
push
in
mov
movsl
in
and
fcmovu
lods
jo
out
aaa
cld
xor
rorb
sbb
pop
push
push
sbb
into
bound
xor
ds
add
jmp
sbb
stc
insb
sub
cld
rcll
neg
adc
arpl
sub
sbbl
push
paddusw
loope
sub
cvtpi2ps
into
sbb
mov
push
push
adc
cmp
mov
pop
mov
push
add
cmp
xor
or
mov
mov
inc
movsb
loope
shlb
call
pushl
adc
push
dec
outsb
lcall
jne
out
inc
loope
mov
sub
mov
mov
iret
sbb
dec
xor
pop
sub
hlt
iret
rep
jne
jne
lods
adc
jns
sti
mov
repz
std
leave
xchg
jg
or
clc
mov
lahf
add
cmp
mov
sub
cmp
inc
cli
push
mov
mov
sbb
leave
sbb
test
xchg
cs
push
mov
clc
push
fldl
jno
dec
std
adc
push
filds
xor
int3
mov
fbstp
das
xchg
sbb
jae
aam
sahf
mov
push
loope
xchg
inc
adc
jne
add
jbe
inc
mov
push
xchg
adc
mov
dec
add
xchg
xchg
inc
cmp
in
lahf
xor
mov
fildl
sti
dec
inc
int3
sbb
cmp
pop
jecxz
cmp
and
inc
cld
xchg
gs
jl
imul
testl
jmp
dec
jg
in
bound
aad
testl
cltd
jb
pop
fsubrl
addr16
push
xchg
repnz
add
dec
stos
sub
adc
out
and
mov
push
stc
sar
fwait
aaa
adc
mov
adc
fsubl
adc
mov
push
sbb
inc
scas
dec
leave
das
out
shrl
and
sbb
cltd
ss
rolb
dec
jbe
or
loope
inc
ljmp
xchg
push
shl
adc
cmp
lods
mov
mov
mov
dec
ja
test
adc
xlat
sub
enter
scas
lahf
mov
mov
sub
ret
dec
daa
mov
shrl
lock
push
pusha
cmp
jae
adc
mov
call
lahf
jecxz
adc
les
and
add
push
xchg
outsl
pop
jne
xor
adc
dec
cmpsb
xchg
mov
mov
sbb
popf
sahf
inc
daa
ret
fidivl
scas
jg
mov
sub
fwait
mov
cmp
jecxz
sub
mov
jle
or
mov
in
xchg
pop
nop
shlb
dec
aaa
pop
mov
lea
icebp
sub
mov
adc
sbb
mov
loopne
outsb
mov
mov
in
lret
push
xor
cmpb
sbb
jne
sub
push
outsb
outsb
fldlg2
lcall
add
xchg
xchg
out
loopne
shrl
pop
shr
jg
cmp
aas
out
loop
arpl
pop
ds
out
xchg
stos
cmp
ret
cmpsl
sbb
jno
and
mov
lods
jo
sbb
mov
pop
push
cmp
test
mov
dec
or
inc
iret
dec
lret
push
lds
xor
xchg
sbb
das
push
dec
shrl
add
and
jbe
rcr
cli
push
jg
lret
cmpsl
rorb
cmp
pusha
shrl
out
fsubrs
and
bound
jp
dec
mov
movsl
jnp
mov
jl
jb
fisubrs
je
repz
in
out
sti
mov
in
clc
cmpsb
shlb
sbb
loopne
aas
repz
cmp
and
jb
mov
ret
insb
test
rcrb
mov
jns
push
in
add
std
or
std
repnz
imul
mov
movsb
in
dec
test
movsl
std
out
sbb
or
movdqa
gs
sbb
sbb
leave
hlt
stos
adc
cmp
xchg
rclb
pop
mov
and
loopne
mov
cs
xor
pusha
dec
aas
mov
or
pushf
dec
pop
jns
das
inc
mov
into
sub
ret
adc
mov
mov
push
push
mov
fwait
into
mov
ret
rcll
mov
add
jne
xchg
inc
out
ficomps
adcl
inc
shll
insl
nop
cld
pop
dec
fildll
out
mov
xchg
mov
loopne
sbb
pop
push
pop
inc
mov
outsb
mov
sahf
mov
xor
bound
push
loope
sysexit
out
push
adc
int3
mov
sar
lcall
pop
cld
push
sub
sub
jmp
pop
push
in
push
xchg
inc
mov
pop
mov
mov
dec
les
push
cmp
xchg
or
mov
push
add
bound
popl
xchg
in
addr16
ljmp
pop
jno
adc
and
inc
xor
cmpsb
cmp
std
imul
mov
add
mov
in
test
dec
push
adc
dec
and
insl
cmp
imul
shrl
push
lods
loop
adc
faddl
out
rcrl
pop
inc
jg
movsb
xlat
pop
adc
stc
xor
jl
add
inc
mov
inc
aas
sub
adc
inc
mov
mov
or
fdivs
sbbl
mov
int3
push
leave
jno
enter
sub
shll
jge
adc
enter
scas
mov
pop
fistps
sbb
push
roll
enter
les
xor
es
pop
hlt
pop
pop
test
fiaddl
inc
out
mov
cmp
sbb
mov
aam
cmpsl
mov
loope
or
nop
sub
lock
add
les
adc
repz
mov
aad
call
mov
push
sub
jp
imul
cld
cmp
xor
xor
std
adc
xor
enter
mov
ja
sti
jnp
lods
dec
mov
shr
adc
push
dec
mov
cmc
cmp
xchg
adc
fstpt
sti
cwtl
or
fdivrp
stc
sub
mov
sub
aad
pop
sbb
ja
lea
fstl
adc
push
cmp
inc
icebp
enter
repnz
ss
xor
iret
bound
add
xor
pop
cs
fisubrl
dec
xchg
jecxz
fsubr
fnstenv
or
add
rcl
push
dec
push
scas
add
fwait
pop
sahf
lret
adc
imul
pop
jns
rol
rcr
rcrb
imul
sbb
sub
xor
jmp
ljmp
adc
add
pop
and
pause
mov
lcall
jp
add
lret
pusha
ret
outsl
mov
jp
int
sbb
jo
pop
imul
bound
rclb
bound
cmpsb
and
add
push
dec
sub
add
fsubl
pop
or
test
jnp
or
jo
fistpl
cmp
cmp
ja
inc
rclb
xchg
mov
loopne
out
jmp
clc
fwait
and
hlt
inc
dec
mov
mov
xlat
inc
xor
xor
aad
add
push
pop
mov
stos
loopne
or
mov
data16
pop
push
shl
pop
mov
mov
add
push
lods
mov
mov
stos
adcb
mov
mov
cli
and
inc
repnz
aam
lock
push
mov
mov
cmpsl
icebp
xor
adc
ja
push
cmpl
repnz
xchg
rorl
push
cmp
clc
sub
mov
jle
fidivrs
cmp
repz
cmpsb
push
ja
jbe
inc
lock
pop
test
cmpsl
push
and
fsubs
cmp
cmc
negb
jo
insl
and
lcall
addr16
inc
push
adc
pop
ficompl
push
loop
push
inc
inc
sub
adc
pop
loope
jge
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
test
addr16
jp
sbb
jp
in
push
xor
in
jmp
or
popf
jns
js
sti
mov
leave
push
aaa
and
mov
lock
std
or
inc
loope
cli
pushl
in
mov
pop
pushf
push
test
and
fimuls
ds
jg
mov
add
inc
shl
filds
adc
jl
lahf
lock
mov
xchg
push
add
cmp
xchg
sti
call
jge
adc
mov
sbb
pop
and
fs
mov
adc
scas
aam
loop
jmp
adc
mov
lcall
mov
pop
std
adc
cwtl
mov
and
fimull
pushf
out
lds
lret
in
popa
cs
outsl
pop
std
repz
pop
mov
insb
outsl
mov
lods
push
rcrl
inc
mov
sbb
sub
xchg
inc
scas
mov
or
xor
int3
inc
cs
arpl
jle
cmp
mov
mov
jae
push
sbb
cmpsb
sub
pop
shll
fadds
cld
mov
mov
mov
pop
ja
add
cltd
cmp
stos
cli
jle
sbb
ds
pop
insb
mov
ljmp
mov
and
ljmp
cmpsb
and
xchg
sahf
push
or
xchg
push
xor
cwtl
xchg
push
mov
cmp
mov
sbb
in
lret
xlat
cmp
adc
call
push
add
mov
mov
lret
fxch
ficoms
shl
cmp
ljmp
or
push
or
cmpsl
mov
scas
fs
js
xlat
cwtl
pop
insl
nop
sahf
add
push
aaa
mov
jb
rcl
push
loopne
mov
shll
xlat
enter
test
or
mov
test
inc
mov
xor
lret
xchg
xchg
push
jle
fwait
ret
sarb
pop
lods
push
push
sbb
push
jbe
push
aam
xor
fldl
stos
push
js
idiv
push
into
leave
jns
xchg
mov
icebp
sub
cmp
pop
jns
je
gs
jmp
xchg
dec
test
mov
leave
jbe
jo
outsb
ss
mul
sbb
sub
mov
push
mov
repz
test
push
stos
nop
mov
test
je
hlt
sub
enter
pop
add
jge,pt
scas
stos
pop
andl
leave
test
mov
lods
loopne
push
std
cltd
pop
and
sbb
data16
fwait
test
sbb
xor
push
pop
dec
jg
int3
mov
into
push
mov
ret
pop
movsb
mov
dec
mov
sbb
mov
pop
test
fcoms
mov
push
push
mov
sub
pop
add
push
outsb
mov
in
insb
dec
xchg
jle
lock
dec
push
fwait
mov
mov
xor
xchg
test
aad
adc
sbb
gs
xor
xor
rclb
iret
pop
sub
bound
mov
ds
pop
das
mov
dec
test
fs
mov
sarb
cwtl
daa
mov
push
dec
xchg
cmp
or
jbe
shlb
lret
ss
inc
ret
fs
inc
std
xor
stos
rcrl
mov
inc
lods
cli
out
test
les
cmp
shrb
divl
xchg
inc
push
std
loope
cld
fldcw
imul
ds
jno
orl
jg
fcmovbe
xlat
clc
std
jnp
lock
loopne
out
xchg
into
add
mov
insl
lock
pop
movsl
adcb
xchg
in
xchg
shlb
repnz
xor
lahf
rcr
adc
cmp
sahf
into
stos
cmp
mov
mov
xor
sbb
adc
and
add
mov
mov
jecxz
repz
mov
xor
xor
xchg
fwait
dec
mov
jne
jne
pop
pop
test
sbb
adc
fisttpll
invlpg
push
repnz
fstl
test
pop
aas
test
mov
leave
sbb
shr
xchg
cwtl
jmp
adc
add
addr16
pop
ds
in
inc
out
rcll
mov
scas
fcomps
out
adc
xor
int
iret
inc
mov
fiadds
push
lds
ds
in
push
xor
ret
mov
jmp
mov
dec
inc
cmpl
mov
dec
mov
cld
daa
test
dec
loope
cld
and
or
aam
in
lea
xor
cmp
adcl
in
xor
in
pop
mov
out
test
mov
cmp
repz
add
sbb
mov
sbb
cmp
inc
jb
jg
rclb
pop
iret
fstpl
je
jns
pop
fwait
jae
idiv
jae
ljmp
sbb
dec
scas
aam
sbb
push
inc
shrl
xor
sti
mov
lods
cs
cmpsl
push
std
mov
nop
cmc
mov
push
fwait
dec
je
sub
pop
inc
scas
add
xor
mov
cltd
xor
loope
cmpsb
adc
xchg
leave
and
lock
outsb
test
repnz
hlt
in
das
andl
xor
ja
pop
orb
sbb
gs
out
inc
xchg
lods
cmp
imul
aad
popf
test
adc
adc
fstpl
mov
imul
pop
inc
cmp
loop
je
mov
aaa
inc
pop
daa
loopne
add
jne
add
in
movsl
mov
jae
cmp
push
inc
push
dec
inc
sar
inc
cmpl
rorl
movsl
push
mov
icebp
mov
iret
loop
dec
fnstsw
insl
mov
ret
mov
or
decb
and
fldpi
jle
stos
and
xchg
xchg
pop
and
push
das
subb
or
jp
gs
jbe
inc
mov
ds
sub
adc
xlat
jle
pusha
gs
dec
test
and
xor
ret
pop
dec
arpl
out
xchg
shll
cmp
xchg
xor
out
push
jmp
aad
hlt
arpl
push
fdivs
inc
clc
test
cmp
jno
xor
push
cmpsl
bound
push
mov
or
imul
out
aam
je
mov
xor
adc
movsb
mov
xor
pop
out
adc
and
fistps
or
adc
aam
cmc
jl
mov
and
stos
lret
cmp
mov
and
push
mov
mov
out
dec
popf
icebp
sbb
mov
mov
cmp
imul
lock
jb
test
adc
inc
add
push
mov
bound
fisubs
pop
adc
sub
scas
outsl
leave
mov
rcll
hlt
fsubs
mov
sub
pop
push
pop
cmpl
fwait
out
int
and
add
imul
les
add
xor
or
cmp
sbb
mov
ret
or
mov
push
das
adc
mov
pop
lcall
inc
mov
sub
jbe
inc
jae
pusha
lret
test
test
sub
push
call
lds
dec
xchg
test
movsb
cmpsb
into
movsl
lea
fucomip
loope
movsl
sbb
std
or
sub
roll
cmp
cli
sbb
aas
ljmp
push
adc
sbb
outsb
inc
fst
mov
push
lods
xor
adc
push
sbb
push
cmp
enter
lret
mov
xchg
ffreep
and
out
push
xchg
outsb
jne
dec
xchg
xchg
icebp
mov
cld
inc
cli
out
mov
mov
pop
mov
mov
icebp
leave
mov
fbstp
shl
pusha
and
aas
in
jbe
push
adc
cmc
dec
outsb
mov
fsubp
cmp
jle
mov
inc
mov
add
dec
in
jle
add
adc
dec
and
pop
repnz
bound
xchg
dec
fidivrl
stos
dec
insb
les
movsb
shll
rcll
imul
add
clc
or
aaa
cmp
xchg
repnz
mov
test
stos
loopne
or
bound
iret
insl
adc
sub
cli
dec
lret
es
xor
adc
xor
scas
out
stos
or
out
lds
stos
and
jmp
mov
es
repnz
inc
in
adc
xor
jne
stc
cmp
cmp
mov
mov
push
ds
inc
adc
sbb
ds
mov
adc
outsb
fisubrs
pushf
mov
int
xorl
movsl
mov
lock
cwtl
loopne
mov
lea
bound
or
xchg
dec
pop
mul
nop
pop
je
xchg
dec
sbb
xchg
xor
cld
cmp
fistpll
mov
mov
pop
int3
addr16
pusha
sbb
pop
lods
cmp
cmove
out
lcall
nop
jo
outsb
les
push
jmp
out
addb
dec
loopne
sub
outsb
lahf
shll
clc
lret
and
mov
add
lret
xchg
insb
add
pop
imul
mov
push
fldl
pop
jmp
xor
pop
adc
add
jne
adc
cmc
pop
dec
mov
jb
ficompl
ret
jns
jg
inc
nop
mov
mov
lock
mov
mov
fnsave
push
pop
fdivrp
jns
adc
fldenv
mov
test
mov
call
cmp
sbb
sub
hlt
push
mov
xor
inc
sbb
shl
lahf
cmpsl
inc
ljmp
scas
or
fsubr
ret
icebp
pop
or
ljmp
sbbl
aad
cli
dec
int
mov
jno
imul
ljmp
nop
popa
mov
push
aam
mov
jno
fsubl
sub
xor
test
xchg
cmp
pop
sub
subl
inc
push
sub
mov
clc
push
cli
push
or
pop
es
push
dec
pop
pop
pop
rcr
xchg
ljmp
jne
add
test
repz
fstpl
push
jne
test
into
into
sub
out
push
sti
ja
mov
mov
jbe
pop
pop
lods
and
popa
mov
jg
mov
ror
inc
and
pop
aaa
popa
sbb
sahf
add
gs
rorb
clc
fmul
push
test
mov
pushf
cmp
or
or
mov
jmp
xchg
jmp
or
xor
xor
push
cld
ss
pop
jnp
or
mov
mov
dec
lcall
clflush
mov
cld
notb
push
or
loopne
jl
xlat
in
mov
sbbl
or
scas
xlat
adc
lods
sub
sub
pushf
xchg
faddl
scas
lcall
jmp
lahf
jae
jecxz
bound
push
jnp
das
rclb
loope
cli
xchg
sub
gs
pop
ljmp
sahf
rcrl
lcall
fistpl
jbe
inc
push
mov
push
shlb
mov
pop
xchg
into
xchg
cmpsl
sbb
adcl
mov
cwtl
loopne
xlat
mov
aam
in
aaa
shlb
inc
inc
clc
mov
fs
mov
adc
fsubs
mov
test
push
cs
out
sti
push
aas
push
xchg
adc
or
into
les
dec
sbb
push
jns
xorb
int
shld
lret
popa
popa
mov
fstps
movsb
cmp
pop
dec
and
jecxz
cmp
add
jno
mov
test
insl
aas
and
mov
popa
jne
fcmovb
xor
sbb
out
rorb
sbb
aad
dec
insb
data16
cmp
aad
mov
pop
or
xchg
mov
repnz
fists
leave
jmp
pop
pop
sub
dec
dec
bound
jg
jl
movsb
lahf
scas
les
mul
inc
lret
movsl
mov
cmp
mov
push
nop
pop
dec
push
test
mov
or
std
push
ljmp
out
shlb
lret
subb
jge
test
add
loop
xchg
xchg
add
ret
jnp
pop
add
roll
mov
mov
xor
jmp
daa
xor
add
pop
jg
incl
mov
lods
or
aas
dec
jmp
out
test
out
movsl
pushf
xchg
dec
sub
leave
xchg
jmp
add
jbe
xorb
xchg
repz
nop
mov
pop
jp
out
cmpsl
fisubrl
lea
out
les
scas
cmp
stc
andb
scas
pop
fstl
xor
pop
and
mov
mov
sub
jne
mov
int
les
inc
cmp
int
inc
inc
sbb
xor
jo
add
aam
cwtl
push
xchg
outsb
mov
arpl
leave
jle
mov
fsubr
scas
lret
test
leave
pop
jmp
or
mov
das
test
sub
add
xor
loope
sub
addr16
push
xchg
push
scas
pop
dec
sbb
jmp
stc
pop
jmp
cmp
insl
ret
cmp
fs
leave
push
push
test
shrb
jge
mov
fistps
rclb
mov
pop
cmp
xchg
jp
sti
sbb
rcl
jbe
push
sti
ret
jp
cltd
js
xchg
jo
mov
mov
lods
ja
std
lret
rolb
push
or
aam
xor
into
call
pop
pop
xor
ficompl
or
loope
mov
mov
stc
cmc
xchg
mov
cmp
lret
lahf
mov
lret
rcrl
je
push
jge
xchg
lds
insb
pop
jp
mov
lret
scas
push
add
sbbb
xor
mov
jecxz
lds
xchg
repz
xchg
and
inc
push
push
push
int3
outsb
lea
and
sti
aam
sub
push
mov
jae
outsb
cmp
pop
adc
mov
aas
jb
xor
fsubrl
dec
adc
popf
repz
sarl
xor
and
dec
rep
add
movsb
insl
shll
mov
jo
mov
lcall
stc
bound
loopne
pop
lcall
icebp
sub
inc
dec
into
aad
out
mov
mov
cmpsl
dec
pop
nop
dec
cmpsl
xchg
and
mov
xchg
jl
and
pusha
pop
je
xchg
push
inc
mov
cmpsb
pop
inc
js
sbb
sbb
mov
movsl
pop
xlat
jge
xchg
in
fnstenv
mov
sub
ds
or
test
in
lcall
test
aad
notb
mov
sub
cli
sbb
pop
cmp
sbb
jbe
faddl
xor
imul
jle
icebp
int3
das
mov
sub
test
insb
loop
lods
jnp
pop
je
cwtl
in
mov
cltd
cs
icebp
lcall
das
cmc
jecxz
or
mov
xlat
fldt
push
mov
pop
iret
mul
mov
dec
subl
sbb
call
and
pop
into
scas
outsb
jo
mov
and
mov
into
sub
ficoms
mov
in
mov
iret
shlb
and
mov
arpl
movsb
sub
adc
inc
xchg
jge
negb
or
leave
daa
ret
leave
aaa
inc
mov
shrb
mov
cmp
cmc
mov
and
rcrl
int
cmpl
dec
mov
mov
jo
rorl
push
pop
jg
xchg
jp
sub
mov
jecxz
add
sub
and
imul
and
jmp
pushf
sti
aam
ljmp
push
push
mov
fnstenv
lods
xor
dec
loope
mov
push
jmp
divl
imul
subb
xchg
in
push
xchg
gs
pop
mov
mov
fs
push
jg
sbb
cmp
xor
mov
pushf
aas
stos
adc
inc
enter
fnstsw
mov
fprem1
mov
push
and
fsts
movsb
sbb
aas
in
jmp
sarb
cwtl
repnz
and
add
jp
xchg
sbb
and
and
leave
sub
xor
mov
lret
mov
repnz
or
pop
fsubs
sahf
push
jnp
push
in
adc
sti
adc
jle
adc
mov
pop
stos
and
enter
loop
push
rcl
ret
and
cmp
lcall
push
mov
mov
sub
lods
cld
cltd
mov
out
cmc
lret
nop
jge
push
hlt
mov
fmulp
and
pop
movsl
push
incl
inc
push
ret
mov
xchg
pop
xchg
and
lret
scas
aam
mov
push
call
push
jle
jne
mov
inc
out
pop
mov
xchg
filds
lock
fildll
mov
test
loop
cld
cmpb
xor
movsb
jmp
sti
push
fs
mov
jbe
adc
sahf
aas
pop
aas
fdivl
stc
enter
lret
mov
js
inc
push
add
pop
ds
sahf
jno
scas
lds
loopne
pushf
hlt
push
loope
xchg
jp
ja
jg
add
fcoms
xor
mov
push
push
ss
fnstcw
test
pusha
jp
or
sbb
in
jge
dec
repz
or
xchg
mov
add
adc
std
sbb
cmp
cli
mul
adc
adc
frstpm(287
mov
mov
mov
outsb
ds
jg
cmpsb
shrb
xor
es
push
adc
pop
push
in
pop
and
gs
dec
add
stos
outsl
xor
sub
mov
pop
mov
push
rcrb
mov
jmp
push
fistps
loopne
pushf
pop
cwtl
sarl
gs
aaa
jmp
fbstp
jl
js
xchg
in
lods
inc
rclb
pusha
ret
sbb
jne
in
adc
xchg
jno
pop
dec
mov
shll
lock
daa
sarl
cld
loopne
lods
aad
and
push
cmpsl
pop
add
push
lea
mov
popf
inc
fidivrl
mov
es
pop
dec
sahf
pop
push
inc
mov
stos
shrb
repz
fbstp
inc
or
mov
cmp
lock
outsl
pushw
add
and
push
outsb
lahf
test
ret
sbb
insl
in
xchg
int3
pop
jo
addr16
fbstp
dec
std
mov
xchg
popa
je
sub
loop
testl
outsl
rol
outsl
and
shl
push
inc
fdivrl
jb
fstpl
clc
aad
add
iret
out
test
push
mov
pop
jl
mov
fildll
ljmp
int3
pop
lahf
pop
test
lds
xchg
xor
mov
sbb
pushf
xor
adc
jns
pop
xchg
add
ret
dec
aam
bound
inc
pop
jmp
push
add
mov
mov
xor
out
mov
bound
adc
jmp
add
jmp
mov
lods
and
outsb
clc
stos
jne
xor
cmpsb
lret
icebp
push
shl
or
cmp
push
xchg
lock
sub
imul
bound
mov
jge
mov
add
test
push
xchg
fs
jg
adc
aam
out
sbb
mov
nop
and
div
js
mov
aas
dec
js
jnp
fisttps
js
popa
adc
mov
mov
jecxz
cmp
sbb
xor
scas
divl
dec
jo
fiaddl
xor
ljmp
or
and
insl
idiv
fucomi
cld
clc
adc
and
jl
out
int3
movsb
jmp
aad
mov
dec
mov
cli
push
sub
xchg
pop
fdivr
rep
aaa
dec
push
push
push
call
adc
inc
mov
cmp
not
stc
xor
icebp
daa
ljmp
cmp
mov
jl
ljmp
and
push
xchg
jbe
out
and
sbb
out
mov
add
adc
mov
imul
cmp
outsl
das
push
cmpsb
jb
mov
imul
inc
mov
leave
mov
jg
rolb
jle
mov
leave
shl
test
push
sbbb
into
push
push
cmp
xor
mov
mov
pop
cs
das
int3
lcall
rorb
mov
adc
out
neg
dec
push
dec
add
insb
adc
mov
jo
sti
xchg
add
dec
ret
stc
je
lcall
add
aad
jecxz
or
in
xchg
pop
adc
nop
and
add
xchg
sbb
add
or
bound
jb
sbb
cs
or
pop
jae
dec
lahf
out
dec
xor
xor
shrl
test
mov
cmp
test
outsb
addr16
mov
mov
clc
test
mov
movsb
adc
jbe
or
dec
push
movsl
scas
dec
jno
sbb
stc
or
and
xlat
add
mov
xchg
sub
jmp
mov
movsl
out
or
mov
xor
cltd
jmp
pop
inc
popf
and
adcl
iret
dec
loope
xchg
or
stc
push
add
jg
xchg
das
loope
and
ret
test
fwait
outsl
fistl
test
pop
xchg
jnp
cwtl
adc
pop
fwait
inc
jae
movsl
adcb
push
sbb
sbb
pushf
mov
das
lret
pop
xchg
adcb
push
cli
jecxz
xlat
cmpsb
shrl
std
shr
insl
jge
pop
pusha
outsl
movsl
filds
in
js
dec
dec
dec
mov
out
inc
add
clc
mov
push
out
popf
hlt
movsb
in
loopne
daa
add
push
jle
js
pusha
leave
mov
mov
inc
adc
arpl
pushf
out
data16
mov
cmpsb
or
push
aad
mov
inc
jp
nop
jbe
add
adc
dec
add
test
xor
inc
mov
lret
stc
addr16
ds
lret
xchg
gs
push
andb
xchg
int
sub
int3
jno
adc
and
dec
adc
cmpsl
xchg
xor
leave
popf
sub
mov
out
pop
push
in
out
lcall
or
jae
js
lds
in
adc
insl
cwtl
or
enter
xor
mov
jnp
leave
sahf
sub
addr16
in
jg
cmpb
inc
cmpsb
push
dec
adc
enter
dec
sub
inc
leave
pop
xor
mov
cli
mov
add
or
icebp
fwait
lock
sbb
add
inc
fucomi
mov
inc
push
fmull
or
jmp
inc
dec
cmp
lds
sti
xchg
push
jle
or
in
xor
mov
das
test
mov
movsl
mov
jne
push
cmc
into
ret
sbb
fsubs
in
fstpt
jnp
adc
sbb
xchg
int3
fwait
sub
mov
das
out
cld
add
orl
mov
pop
cmp
or
cmp
lret
scas
inc
and
mov
imul
lds
ljmp
push
push
lds
sbb
cmpsl
sub
sbb
mov
mov
dec
adc
add
push
mov
int
mov
push
insl
xchg
movsl
adc
sbb
mov
push
hlt
stos
sbb
sarb
pop
es
push
mov
pop
pop
addb
shl
lds
xlat
sub
cld
jecxz
inc
repz
cli
icebp
push
inc
icebp
mov
cwtl
sub
xchg
or
adc
aaa
mov
out
mov
cmp
xchg
imull
loope
xchg
adc
jecxz
aam
ret
jge
sbb
mov
mov
xor
int
xchg
xchg
pop
mov
sbbl
fcomi
test
push
or
xor
imul
cmp
arpl
adc
sub
push
cmpsb
flds
pop
jecxz
pop
std
cmp
test
xor
aaa
mov
je
mov
pop
inc
mov
and
or
ja
inc
fcmovb
loop
dec
fcmovnb
cs
std
push
test
je
or
adc
push
xchg
cmp
xchg
add
adc
jmp
or
adc
bound
pop
jle
xor
adc
sbb
dec
and
push
shr
jecxz
popf
or
out
cmp
mov
mov
jl
clc
in
mov
je
in
or
sbb
or
xor
imul
into
pop
pop
lods
xor
or
mov
mov
inc
scas
or
loop
hlt
jne
push
es
cmpsl
mov
in
out
xchg
orl
sbb
push
adc
inc
ljmp
add
add
lock
mov
rcll
shll
sti
lods
mov
sbb
sub
icebp
cmpsb
dec
mov
jnp
dec
lods
gs
lds
lret
push
dec
pop
and
enter
rorl
adc
push
mov
cmpl
push
test
cltd
nop
push
pushw
rclb
jl
xor
jbe
xchg
or
mov
lock
iret
pop
adc
mov
or
lcall
getsec
ret
hlt
mov
mov
sub
and
add
dec
mov
mov
xchg
pusha
jecxz
xchg
mov
xor
xor
push
sub
fwait
xlat
scas
xlat
iret
imul
sbb
mov
hlt
outsl
or
xchg
cmpsl
hlt
call
push
aas
fistpl
mov
fabs
shlb
popf
or
push
out
adc
jb
dec
pop
lock
fcmovnu
insl
sbb
ljmp
pop
xor
adc
jg
cmp
sahf
test
mov
xlat
fiaddl
add
shlb
xor
hlt
in
icebp
add
inc
testl
pop
pop
mov
push
bound
sti
cli
out
je
mov
adc
nop
call
cli
and
arpl
ret
stc
pop
push
sbb
cmc
roll
jmp
fwait
fwait
loope
mov
xchg
cmpsl
cltd
subb
cmc
aam
jae
sbb
mov
ss
xchg
pop
movsb
push
push
repz
gs
xlat
das
pop
sub
lcall
dec
mov
gs
decb
outsb
shrl
out
icebp
mov
sbbl
scas
jge
or
aam
subl
pop
xchg
lods
les
cmp
xchg
mov
ss
adc
ret
inc
mov
test
movsb
mov
loopne
test
inc
jb
mov
imul
adc
xchg
jmp
das
xorl
dec
add
test
sahf
add
cmp
pop
dec
mov
in
and
mov
lods
test
popa
mov
sbb
popa
jae
popa
test
xor
add
fwait
insb
xor
mov
push
cmp
mov
xchg
lea
aaa
cs
dec
les
sbb
ss
pop
insb
sub
scas
add
and
scas
cmpl
call
jmp
jp
mov
jb
pop
mov
lret
pop
add
dec
nop
idivb
and
popa
jnp
mov
mov
cmp
mov
in
jecxz
dec
mov
xchg
lahf
and
mov
push
cmp
in
inc
outsl
push
push
mov
xchg
cmp
push
insl
movsb
pop
bound
jae
fsubr
out
or
pop
xor
aas
cmp
std
xchg
insb
dec
cmp
push
cld
pop
sub
sub
mov
ret
dec
fnstcw
pop
jg
mov
lret
rcll
pop
aas
push
mov
lahf
jnp
inc
jmp
xchg
mov
nop
insb
fnstsw
mov
inc
cmc
leave
leave
cmp
mov
sbb
xchg
scas
out
scas
xor
and
xchg
mov
ss
jno
pusha
push
movl
insl
ret
in
sahf
or
jno
sub
xor
push
dec
fnstenv
add
add
or
jb
cmp
sarl
or
xchg
or
lahf
stc
ss
scas
movsb
jae
cli
pop
jbe
pop
rcl
loopne
xor
pop
out
in
fidivl
sub
push
and
mov
arpl
pop
cmp
add
clc
loopne
ja
ret
int3
mov
sub
dec
jle
lahf
nop
jmp
sahf
xchg
xor
popf
in
sahf
sbb
das
pusha
lock
hlt
dec
inc
and
jns
aam
push
imul
jle
mov
mov
dec
fbstp
adc
cmp
bnd
jo
push
sub
sub
mov
mov
stos
xchg
cmp
xchg
insl
aad
out
pop
pushl
jns
xchg
mov
mov
movsb
fsubl
jbe
and
jo
add
es
mov
push
xor
int3
jl
in
cli
mov
test
jmp
in
dec
icebp
jmp
pop
inc
dec
push
mov
pusha
mov
jmp
jle
lret
loopne
cwtl
adcb
fadds
in
shl
or
or
movsl
addr16
clc
push
iret
js
movsl
xor
add
sahf
iret
out
sbb
jmp
movsl
or
mov
mov
insb
aam
push
cltd
sbb
xor
rclb
jecxz
jl
push
sub
pop
or
push
shr
jecxz
xchg
mov
add
sbb
fdiv
ljmp
sbb
cmp
test
daa
xchg
xchg
push
inc
mov
out
cmp
pop
dec
push
lret
outsl
or
in
jne
scas
dec
inc
adc
mov
loope
fs
xor
inc
in
clc
insl
pop
jne
gs
push
push
sub
fisubrs
es
push
fildll
ficoml
lret
lods
scas
call
and
mov
jno
fnstenv
mov
imul
mov
cld
xchg
adc
lock
out
jnp
xor
jle
cld
xor
pop
mov
icebp
and
mov
cmpsl
xor
sbb
add
push
roll
shl
test
push
inc
mov
and
dec
mov
jge
outsl
fdivs
add
fstl
fnstsw
push
es
fimuls
add
bound
or
andl
xlat
xchg
xor
test
sub
inc
inc
and
add
fbld
xchg
dec
add
rsm
shl
lret
mov
nop
xchg
hlt
adc
insl
lahf
ljmp
mov
xchg
popl
stc
push
jae
push
imul
xorl
dec
push
dec
dec
add
fsub
push
fildll
jp
aaa
ret
sub
dec
sbb
ret
push
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
add
jp
pop
jp
inc
sbb
repz
xchg
incb
push
pop
jg
inc
mov
fmuls
andb
lcall
mov
pop
push
mov
js
lock
add
inc
push
inc
mov
lcall
out
test
pop
sarb
lahf
cmp
scas
stos
jo
jnp
fwait
jp
mov
cwtl
in
pop
jmp
arpl
add
or
hlt
xchg
jno
ret
lret
xchg
scas
rcrb
push
repnz
push
jne
fs
imul
or
pop
repnz
mov
pop
leave
fcmovb
inc
in
notl
iret
mov
lret
mov
sbb
jb
sbb
xchg
ljmp
clc
dec
imul
cmp
mov
jnp
add
push
cmp
out
inc
and
dec
insl
out
sbb
test
mov
fisttpl
loop
push
in
addb
popa
std
xor
call
push
push
cmpsl
fsubr
enter
repz
pop
inc
std
pop
mov
jg
pushf
inc
data16
sub
sub
je
xchg
fildll
dec
or
repnz
lret
jge
scas
xor
dec
xchg
repz
ja
test
cmpsb
daa
push
out
sbb
out
pushf
jnp
mov
push
mov
add
fildl
add
mov
test
hlt
pop
cmp
xchg
fidivl
push
ret
sbb
daa
sub
jmp
mov
inc
js
mov
loopne
push
mov
out
cltd
or
sbb
or
cmc
sbb
or
hlt
cmpsb
cmp
gs
fldcw
pusha
aaa
repz
xlat
movsb
rcll
push
cmp
mov
inc
mov
sysret
xchg
lea
popf
ret
enter
ja
dec
mov
mov
sti
jl
add
jmp
mov
jmp
addr16
adc
dec
iret
xlat
mov
jb
std
sarl
addr16
pop
icebp
or
popa
ss
mov
mov
imul
insb
mov
adc
xor
outsl
pop
mov
jp
inc
add
das
cwtl
sahf
jo
lcall
fucomp
push
cmpl
rcrl
mov
orb
aas
outsl
cmp
scas
mov
pcmpgtb
repnz
sbb
insl
pop
jo
cli
je
xchg
cli
add
popf
imul
ja
jnp
dec
movsl
outsl
jns
std
sahf
inc
sub
test
jb
mov
adc
dec
xchg
or
add
sub
jno
mov
mov
dec
das
cmp
mov
pusha
into
sbbl
cwtl
xor
mov
cmc
popa
lahf
jg
stc
mov
iret
cmp
hlt
cmp
scas
xor
fwait
int
push
fidivrl
cltd
or
gs
inc
dec
sub
sub
and
dec
pop
inc
mov
pop
rcll
aam
js
stos
push
les
fwait
out
sbb
lock
scas
jno
dec
icebp
insb
enter
adc
sub
add
or
sbb
mov
ljmp
cs
sub
pop
mov
xorl
iret
fstps
sub
sub
xchg
lods
aam
xor
sbb
int3
pop
push
dec
lods
mov
frstor
insb
inc
add
mov
dec
out
jp
push
sarl
mov
mov
sub
push
push
loop
mov
sbb
inc
dec
fldl
add
sub
jo
lahf
inc
jecxz
xchg
bound
jo
xchg
push
push
or
shrl
mov
push
fsts
lahf
outsl
sbb
lret
jge
leave
pop
push
inc
xor
shlb
shrb
popf
stos
fs
jmp
orl
pusha
xor
int3
mov
outsl
mov
lahf
jb
or
jne
jmp
push
sbb
push
jg
data16
or
lods
mov
mov
xchg
fstpl
add
pop
sub
nop
sub
or
mov
sub
out
mov
push
sbb
ljmp
fsubrl
push
jb
cmp
pop
mov
mov
mov
enter
int
jl
or
push
xchg
mov
ficompl
ret
vmwrite
mov
and
pop
push
cld
xor
dec
mull
sbb
and
test
inc
jne
add
jg
in
or
push
push
fwait
push
divl
icebp
dec
scas
adc
outsb
push
mov
imul
push
movsb
jecxz
jb
sub
stc
sub
jg
sub
ret
and
insl
test
lret
adc
pop
or
xchg
mov
fidivrs
push
and
sub
fnstsw
adc
js
push
and
lds
int3
aas
aam
and
pop
and
jns
inc
subl
push
pop
xor
lret
push
and
js
add
cmp
xor
sbb
push
xor
outsl
lahf
out
sti
lods
fisubrl
and
cwtl
xchg
jp
ds
dec
popf
ret
xchg
aad
push
aaa
and
sbbl
adc
sti
xor
addr16
paddb
bound
divb
cmpsl
ret
cmp
sbb
jns
cwtl
mov
idivb
jge
aad
cmp
mov
push
jo
push
mov
dec
xchg
popf
mov
les
xchg
fcmovnu
xorb
icebp
xchg
bound
popa
outsl
pop
lods
jno
push
negb
std
sbb
xchg
cs
jg
in
push
movsb
mov
lods
pop
fisttps
mov
jge
sbb
jno
and
mov
cwtl
aaa
imul
stos
pop
mov
lahf
sub
push
pop
cli
jg
pop
push
jno
add
nop
xor
adc
shrb
xchg
imul
fmull
and
cmp
shl
aas
mov
mov
add
lret
nop
pop
icebp
lds
pop
lcall
fmuls
and
enter
add
cmp
mov
xor
mov
and
mov
push
stos
jno
sbb
fs
mov
cld
inc
mov
xchg
jge
jae
sub
cmp
cmp
mov
lds
xor
enter
and
sub
int
mov
mov
nop
inc
fnstenv
mov
push
or
xorl
mov
or
je
fadd
loope
mov
ret
fstp
insb
mov
call
ss
or
dec
mov
adc
and
out
add
push
pop
mov
mov
imulb
jne
aaa
fmull
xchg
dec
jl
imul
fstpt
repnz
dec
add
dec
lods
scas
jmp
std
inc
push
es
sbb
decl
rolb
not
and
imul
jp
cmp
out
subl
xor
add
xor
xchg
mov
fcos
cmp
mov
dec
push
mov
pop
mov
cmp
bound
pushf
fwait
sbb
mov
out
sbb
mov
leave
mov
lret
add
lods
sub
lea
or
andb
aas
imul
add
pop
gs
xlat
mov
fs
test
std
xchg
push
sbb
jo
and
lret
leave
mov
inc
adc
push
jle
cmp
hlt
inc
notl
cltd
leave
fidivs
or
leave
and
sbb
jge
xchg
or
cs
inc
xchg
jle
sub
shlb
sub
push
cld
mov
cmpsl
sub
sub
les
xchg
push
je
out
hlt
cmp
push
popa
jne
and
pop
sub
sub
xchg
sub
int
popf
and
jae
mov
andl
mov
test
jg
jbe
filds
lcall
adc
das
rcr
xor
cwtl
cld
push
in
aaa
xchg
clc
sub
pop
pop
cli
orb
andb
mov
and
mov
mov
xorl
movsl
mov
jnp
jnp
jge
push
xchg
push
push
inc
add
xor
mov
push
cmc
mov
jnp
cmp
pop
mov
incl
pop
adcl
push
scas
mov
aas
push
jne
mov
pop
shlb
push
mov
sub
dec
push
push
pushf
jp
pop
jg
sub
ret
mov
inc
mov
sub
stos
scas
ja
popl
add
jl
lods
arpl
scas
dec
lret
jb
jmp
daa
imul
pop
or
mov
inc
outsl
or
sbb
pop
icebp
xor
popf
add
adc
pop
pusha
adc
lahf
das
jmp
jns
mov
pushf
sub
leave
leave
and
xchg
lods
xchg
mov
jmp
std
ficoml
cmp
mov
inc
push
test
xchg
in
sub
imul
xor
jl
adc
faddp
add
in
mov
in
insl
movsb
ja
jbe
pop
mov
out
pop
sbb
outsb
in
pop
test
inc
push
pop
xchg
int3
pop
pop
push
inc
stos
cmp
add
and
leave
mov
lcall
pop
push
or
iret
je
fldcw
call
dec
mov
inc
shl
into
notb
data16
ret
pop
lcall
loope
fmull
pop
xor
js
add
pop
out
adc
xrelease
lock
aas
adc
out
xor
rep
adc
inc
aas
mov
xor
data16
imul
add
mov
aas
adc
push
mov
inc
jne
xlat
push
movsb
shll
ljmp
popf
roll
jg
es
aam
in
adc
mov
dec
add
push
sub
test
scas
xchg
shll
dec
mov
inc
imul
dec
mov
das
lret
das
repz
fidivl
push
and
jg
popa
out
shrb
cltd
inc
push
pushl
out
icebp
push
dec
into
xchg
cmp
mov
sbb
xchg
rcll
shll
in
mov
xor
dec
dec
or
bound
sub
xchg
out
pop
xor
enter
lock
add
adc
popa
pusha
xchg
inc
mov
insl
repz
dec
inc
dec
pushf
fcom
insl
ljmp
add
cmp
ja
jns
adc
lds
add
mov
inc
in
mov
das
adc
fs
sub
scas
mov
jmp
xchg
and
movsb
jecxz
push
aas
fistl
and
push
das
pop
jg
sub
pop
jae
nop
movl
sub
xlat
jl
adc
rcrb
push
js
dec
orb
push
and
add
pop
int
aas
leave
xor
das
xor
xchg
inc
lret
push
scas
dec
or
in
mov
mov
jge
test
fbld
dec
add
mov
ljmp
outsb
cli
add
mov
flds
inc
mov
add
lcall
sar
cmp
push
cltd
fdivl
mov
cmp
xchg
inc
stos
pop
xchg
mov
mov
shrl
imul
jae
pop
loop
shrl
cmp
sub
js
xlat
clc
inc
in
add
mov
jae
pop
xchg
mov
stos
movsb
push
sbb
and
into
push
push
jbe
bound
sbb
mov
into
ljmp
loopne
addr16
out
sti
test
push
outsb
sbb
pop
pop
mov
in
daa
or
mov
cmp
jmp
orl
cmpsb
lcall
imul
mov
stos
popa
sahf
stos
cmp
es
ljmp
jns,pn
dec
jb
mov
cmc
mov
inc
scas
mov
fcompl
fmuls
fisttps
loop
jns
into
inc
dec
mov
xchg
clc
add
push
cmpsl
adc
sbb
lds
gs
out
xchg
mov
cs
lret
pop
or
dec
add
mov
push
movntq
inc
xchg
pop
sub
push
test
xchg
sub
fisubs
jae
cmp
or
xlat
and
test
aas
xor
pop
fcoms
jle
sub
cld
data16
fsubrs
jo
mov
leave
orl
mov
shr
push
push
scas
leave
or
xchg
out
testl
loop
add
enter
xor
and
sti
sub
mov
fs
or
in
pushf
jae
fs
cmc
cld
cmp
gs
or
cwtl
push
dec
push
xchg
pop
sub
loope
test
rorb
pusha
jecxz
notl
roll
lcall
or
out
lods
arpl
sbb
mov
test
xor
test
mov
shl
mov
into
aaa
push
pop
inc
pusha
inc
fisubs
fcomps
xlat
dec
xchg
adc
inc
mov
and
sti
inc
inc
cltd
fcoms
stos
and
cmp
adc
adcb
xchg
insb
ret
lods
sbb
into
stos
in
sub
roll
enter
sub
adc
mov
push
dec
ss
sbb
mov
test
mov
fxam
jecxz
stos
ja
mov
out
add
push
jecxz
pop
add
test
pop
test
pop
push
cmp
shlb
stos
ss
fnstcw
xchg
std
fwait
icebp
mov
out
cmp
push
shll
sbb
repz
cmpb
inc
add
mov
mov
inc
and
jmp
dec
out
gs
out
cltd
daa
pushf
mov
xchg
ss
xchg
push
fucomp
not
pop
mov
divb
xor
sub
inc
lret
add
xor
repnz
cmp
inc
mov
mov
mov
add
jne
mov
pop
cmpsl
scas
dec
inc
nop
adc
xchg
leave
inc
jle
sub
mov
cmp
int3
mov
nop
cmpsb
or
stos
mov
je
mov
mov
fs
pushl
jl
pop
pushf
lds
dec
jmp
cmp
loopne
mov
push
sub
leave
adc
jo
paddq
cmp
repz
enter
or
mov
je
sbb
jl
leave
js
andb
in
xchg
outsl
cmpsl
mov
jle
mov
or
inc
xchg
xor
movsb
or
adc
lock
test
pop
lods
rclb
cld
in
lods
and
aam
out
outsl
add
es
loope
adc
inc
add
pop
in
int3
sub
pop
dec
or
mov
pop
sbb
sbb
push
cmp
jle
mov
fcomps
and
je
ljmp
add
adc
in
lret
mov
mulb
nop
xor
inc
mov
mov
in
orl
inc
mov
or
or
test
gs
fbstp
and
jmp
not
and
mov
inc
adc
fdivs
push
es
aas
sub
je
adc
outsb
movsb
mov
arpl
mov
or
xchg
xor
pop
pop
lods
loopne
lea
ror
stc
adc
int
push
mov
pop
sub
push
mov
mov
xchg
push
movsl
sarl
pop
sub
clc
jge
cmp
sbb
lret
mov
mov
cmp
popf
shl
ret
imul
xor
pop
shrl
xchg
mov
jnp
in
jl
jno
mov
mov
test
add
clc
lcall
add
add
cmp
add
pop
xchg
test
cmp
jmp
sub
sbb
push
popa
insl
sbb
mov
xor
mov
adc
pop
ret
shlb
push
sahf
inc
data16
jo
jbe
stos
ss
xchg
ds
jg
movsl
mov
mov
ret
ficompl
jno
inc
data16
xlat
insl
mov
mov
out
ja
fwait
js
push
in
push
adc
aam
cmc
cmpsl
bound
lea
sbb
mov
lret
mov
sbb
cmpb
push
jbe
pop
mov
inc
jge
ret
mov
jb
lret
nop
jae
lret
mov
je
or
or
pop
je
or
pusha
je
sub
push
pop
mov
xlat
xchg
cmc
popa
hlt
popf
js
mov
mov
adc
add
fbld
mov
int3
sahf
mov
jle
pop
jge
jle
add
enter
push
repz
dec
xchg
push
or
jb
xchg
aas
pop
mov
iret
push
push
or
mov
add
aaa
lock
scas
push
push
mov
sbb
adc
inc
pop
jle
repz
dec
mov
mov
bound
xchg
ljmp
pop
outsb
insl
fnstcw
nop
shrl
sbb
adc
add
decl
je
movsb
insl
adc
inc
adc
jle
pop
jnp,pt
pop
ret
push
xor
jg
push
mov
xor
xchg
mov
rclb
scas
cmc
sub
imul
jmp
stos
mov
leave
push
inc
sbb
nop
outsl
sarl
out
cmp
out
jp
and
pop
scas
ret
push
xchg
and
pusha
popf
push
mov
outsb
pushf
xor
test
loopne
daa
out
pop
xor
xchg
mov
pop
mov
or
outsl
jbe
les
adc
inc
and
jno
jl
push
dec
data16
xor
xchg
nop
xchg
xchg
push
jl
jecxz
fdivl
aam
roll
xchg
mov
dec
inc
sbb
rclb
int
mov
pop
add
mov
cmp
pop
xchg
jae
shrb
jnp
add
addl
cli
cmc
sub
les
jecxz
std
cmp
jnp
enter
adc
and
add
xor
jae
xor
aas
daa
xchg
pop
rcrb
push
rcll
and
mov
sbb
loope
jnp
push
cld
push
xchg
sbb
mov
inc
scas
clc
push
xchg
test
roll
out
pop
or
sbb
divl
loopne
mov
imul
call
and
jb
dec
cmp
fwait
sbb
sbb
mov
and
dec
mov
fstpl
sub
aas
nop
inc
js
mov
jbe
test
mov
mov
xchg
xor
lret
push
sbb
loopne
mov
imul
add
nop
test
aas
out
cltd
adc
adc
mov
stos
movsb
iret
ss
inc
out
insl
into
lds
xchg
outsl
popf
cmp
jp
in
push
inc
xchg
int3
sbb
sbb
loop
mov
cmpsl
test
jl
cmp
les
aam
cltd
int
xor
in
xor
xor
jg
sbb
xor
pop
sbb
pop
or
loope
jg
push
aad
std
pop
add
push
sbb
and
cmp
scas
std
shll
pop
adc
stos
test
mov
out
jmp
xor
mov
push
inc
lahf
stc
jg
lret
add
inc
ss
mov
xchg
imul
ljmp
adc
inc
sub
out
mov
xor
pop
mov
ret
jbe
inc
mov
mov
xor
cmpsb
adc
dec
and
hlt
ret
jo
cmp
sbb
and
add
push
lock
scas
mov
pop
jmp
mov
lret
daa
insb
cmp
loop
outsl
xchg
jecxz
xchg
mov
jnp
push
mov
xor
pop
jg
lods
std
lret
cmpsb
sbb
cmpsl
fisubrs
sbb
jne
loop
stos
mov
xchg
pop
mov
sbb
aam
insb
in
mull
int3
insl
test
sub
fsub
xor
lret
cwtl
test
mov
mov
hlt
cs
mov
lods
negb
aaa
cmpsb
scas
mov
fwait
ja
push
repz
adc
pop
dec
cltd
sahf
jbe
popf
ss
cmp
push
test
sub
in
fistpl
lret
or
mov
xchg
test
dec
jl
and
xchg
adc
lahf
int3
xchg
cwtl
mov
push
sub
sub
mov
sbb
test
inc
jo
js
cmp
adc
sbb
add
lahf
cmp
add
jmp
fcomi
int
clc
insl
mov
lods
pop
std
ret
enter
out
push
mov
hlt
aad
jecxz
hlt
popf
arpl
inc
lcall
cmpsl
pop
mov
outsb
and
and
mov
sub
loopne
xchg
insl
faddp
sub
sbb
xor
adcl
inc
cmp
and
xor
scas
mov
push
in
mov
cmpsb
xchg
cmp
stos
test
mov
pushf
movsb
and
div
push
mov
mov
clc
jl
jmp
ret
xor
xor
shr
inc
jmp
xchg
sbb
mov
out
sbb
int
hlt
mov
mov
xchg
jbe
pop
inc
imul
scas
cmp
test
mov
iret
jmp
pop
sub
inc
jmp
test
fmull
ds
jo
pop
push
cmp
jle
xor
xchg
dec
loop
lods
xchg
testl
mov
lock
jo
inc
pop
js
cmp
xchg
mov
repnz
dec
out
pop
xchg
jno
xchg
adc
pop
in
js
lahf
into
aaa
mov
or
and
or
cwtl
jle
dec
leave
sub
mov
lcall
sub
icebp
xchg
inc
inc
mov
push
aam
mov
push
cmpsl
pop
andb
dec
sub
mov
mov
add
jne
add
pop
lods
xchg
sti
in
jbe
fdivl
lock
jg
jns
cs
xor
adc
repnz
out
or
pop
lret
xchg
daa
movsl
lahf
loopne
int
lahf
dec
mov
cmp
xchg
and
pop
mov
test
jnp
inc
leave
mov
repz
pusha
shll
push
fisttpl
notl
aaa
popf
cmpsl
xor
mov
arpl
sub
jecxz
sbb
test
aam
leave
pop
pusha
in
mov
cmp
fdivs
lds
mov
fxtract
jne
sub
sub
xor
xchg
fcmovb
pop
test
outsl
clc
xchg
push
jl
mov
rcrl
fdivl
adc
aas
push
stc
test
movl
mov
xor
outsb
cs
mov
aas
jge
imul
popf
inc
test
js
xchg
pop
movsl
jns
mov
xchg
xor
cmp
jle
bound
cwtl
cmp
push
fstpl
loope
mov
mov
adc
data16
in
xor
and
push
in
sub
add
shlb
add
lret
mov
inc
loope,pt
sub
mov
stc
sbb
mov
aaa
xor
out
in
out
mov
xchg
pop
scas
jl
xor
mov
mov
scas
mov
int3
push
mov
clc
insl
rorl
adc
mov
xor
xor
std
lods
ja
sbb
iret
cmp
adc
sub
xchg
xchg
dec
pop
rcl
xor
pop
sub
sbb
xchg
fucom
fdivs
sti
inc
sub
xlat
nop
push
out
int3
and
and
popl
or
sbb
sarb
js
into
sub
js
mov
add
sub
jmp
out
and
xchg
aaa
and
cltd
cmp
mov
in
test
adc
xchg
rorl
shl
xchg
fnstsw
test
ds
sub
mov
jg
mov
fiadds
pop
fbld
stc
dec
in
sbb
push
cli
movsl
sub
mov
int
movsl
fcmovnb
pop
outsl
test
xchg
xchg
clc
fmuls
pop
and
int3
mov
pop
lds
push
cmp
daa
xor
cmp
jb
cmp
pop
and
push
mov
data16
fdivs
sub
push
test
xchg
xchg
xchg
mov
mov
cmp
nop
dec
adcb
out
test
int3
test
sti
adc
stos
es
xchg
and
inc
bound
cmpsl
adc
pushf
cltd
push
jge
bound
ret
jmp
mov
cmp
loope
cmp
sub
sub
mov
add
fldl
test
cli
mov
inc
frstor
stos
jo
xor
lcall
xor
cmp
movsb
movsl
cld
add
or
inc
cmc
out
mov
inc
leave
int
add
lret
push
add
jne
adc
inc
xchg
cmp
mov
add
xchg
jo,pn
stc
pop
sbb
sbb
pop
push
add
inc
mov
dec
clc
js
fs
jno
push
loope
fbld
mov
cmpsb
add
jnp
or
fcoml
mov
xor
shrl
scas
rcr
divl
pop
shrb
or
xor
aaa
push
add
and
jnp
sar
mov
cltd
dec
daa
outsb
mov
xchg
aas
or
and
inc
gs
es
stos
xchg
mov
fstp
xor
cwtl
pop
or
push
push
sarb
xchg
xor
inc
out
add
dec
adc
int
jl
ror
loopne
add
inc
mov
ds
mov
push
jp
imul
mov
test
pop
ja
push
push
scas
jp
dec
or
inc
inc
add
shr
shrb
int3
xor
jecxz
sarl
jne
ja
mov
mov
sbb
pop
sbb
pop
inc
and
sub
cmp
loopne
mov
mov
push
js
cmp
push
fidivrl
mov
sub
cli
sbb
sub
stos
jns
fisubs
icebp
movb
push
xor
jecxz
dec
mov
jae
dec
ret
call
outsl
orb
inc
into
jae
call
sub
aam
pop
jmp
sbb
pop
pop
jbe
sbb
stos
pop
jbe
inc
loop
aaa
mov
push
and
mov
jg
pop
cli
pop
xchg
sub
and
mov
inc
hlt
jnp
fmul
adc
popa
repz
icebp
dec
pop
xchg
xchg
xchg
enter
lret
cli
jbe
xchg
dec
leave
add
xor
mov
dec
xchg
fcompl
add
cs
mov
push
repnz
xchg
mov
mov
push
sub
push
mov
xchg
in
loopne
divb
fwait
lret
and
out
mov
inc
mov
mov
push
adc
loope
arpl
loop
xor
daa
push
bound
movsl
sbb
or
cmp
sbb
mov
push
jl
out
outsl
mov
aas
je
cltd
fistl
leave
adcb
cltd
into
cli
addb
ret
sbb
push
lods
pop
xchg
xor
enter
xorl
loopne
inc
push
cmp
insl
mov
fstl
xor
stc
ss
pop
decb
pop
cli
xchg
dec
stos
inc
add
pop
add
pop
inc
push
divl
jb
cld
pop
gs
mov
add
dec
hlt
sbb
outsb
mov
negl
xor
popf
and
imul
lcall
mul
data16
insb
inc
aad
and
xchg
jo
ds
mov
pop
xor
inc
in
test
and
fists
cwtl
pop
push
xchg
aad
mov
repnz
inc
sti
jae
insl
into
mov
xchg
sti
in
mov
cmp
inc
inc
mov
repnz
xchg
dec
inc
jnp
cmp
in
add
jle
lods
nop
xor
pusha
lock
mov
int3
je
dec
fwait
push
or
mov
test
mov
fidivl
sub
push
lret
inc
push
rolb
sub
movsl
adc
stos
adc
in
and
inc
lret
je
or
daa
enter
sbb
xor
push
rcrl
push
stc
pop
ja
fidivs
das
cwtl
mov
cmp
adc
dec
sbb
add
adc
xor
aad
imul
sub
cwtl
xchg
pushf
shlb
and
sahf
cmp
in
shlb
movsb
inc
and
loop
pop
adc
add
rcll
mov
addl
outsl
shrl
push
sbb
sbb
call
loopne
scas
cmp
fiaddl
xlat
mov
ljmp
xchg
lahf
sbb
or
jmp
in
xor
cmp
pop
lret
inc
cmp
sbb
daa
cmc
repz
lock
push
cs
sub
popa
jge
adc
add
jb
jno
pop
pop
xchg
inc
adc
adc
adc
jo
pushl
cmp
sbb
cmp
rclb
jnp
mov
int
cld
or
xlat
icebp
lods
sti
out
xchg
mov
cmpsl
pop
aad
cmpsl
push
cmp
out
xchg
adc
cmc
mov
outsl
lock
add
fnclex
dec
insb
imul
mov
inc
out
push
jne
test
jge
and
fwait
es
in
cmp
sbb
das
repnz
mov
or
xor
xor
lret
xor
pusha
mov
dec
and
lret
fidivl
mov
cs
in
out
jmp
and
repz
push
jno
ret
dec
or
pop
cmpsl
rcrb
mov
out
sbb
popa
pop
addr16
bound
push
lds
adcl
out
scas
jnp
cmp
std
stc
lahf
add
imull
orb
mov
out
inc
xor
inc
into
movsl
les
mov
into
inc
andl
add
inc
jno
jns
pop
sarl
in
insl
xchg
jle
mov
jle
xor
lret
cmp
cmp
out
push
iret
sbb
repz
insl
xlat
ljmp
inc
lahf
mov
jne
pop
cmpsb
sbb
jnp
lret
lahf
in
sti
and
lods
test
sbb
sbb
cmp
cmp
std
sbb
or
jb
push
xor
loope
pop
js
pop
fprem1
test
push
inc
mov
test
inc
or
and
or
popa
xlat
xor
insl
movsb
inc
xor
cld
cltd
notb
lret
jmp
inc
push
lods
adc
divl
int
cld
inc
push
sbb
mov
sarl
bound
int3
mov
push
bound
mov
out
add
outsl
adc
out
push
push
jg
add
inc
push
das
lahf
push
scas
pop
or
pop
inc
and
mov
int3
xchg
decl
or
xor
popa
cmp
push
ret
xchg
xchg
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
add
scas
jp
or
jp
pop
mov
push
pop
pusha
xlat
pushf
jp
fcoml
sbb
inc
addl
jnp
push
and
int
hlt
lret
and
inc
cmp
fbstp
cli
in
pop
mov
xchg
icebp
add
gs
and
pop
clc
jecxz
or
push
lods
cmp
jle
daa
in
sub
aas
inc
lods
xor
xchg
stos
lods
inc
add
and
jg
outsl
mov
dec
clc
shl
cmpsl
movb
pop
pop
sub
pushf
pop
in
or
inc
test
pop
jp
addl
adc
push
push
adc
xor
jg
rcrb
lret
aas
lret
xchg
fld
pop
xor
loope
push
add
inc
adc
or
orl
lahf
sub
daa
movsb
lods
or
in
mulb
and
mov
cmp
sti
pop
aad
aas
jle
int3
ja
int
inc
test
sbb
pop
and
mov
pop
sbb
nop
stc
pop
mov
xchg
add
push
xchg
rcl
pop
nop
arpl
lcall
pop
adc
pop
aad
mov
push
js
outsl
bound
xchg
xor
stos
mov
jl
out
in
cmc
lods
and
mov
jbe
inc
adc
stos
adc
jmp
pop
nop
pop
xchg
adc
or
inc
jo
jnp
pop
ds
jne
mov
push
cltd
adc
gs
lods
lret
lahf
fsubrs
in
lahf
xchg
ret
push
jecxz
jo
push
or
add
push
sub
loopne
xchg
adc
dec
lods
ret
in
sub
mov
jmp
into
xchg
push
cld
loope
xor
jp
or
shlb
in
ds
add
add
stc
out
or
push
jbe
cmp
sbb
and
mov
dec
pusha
jecxz
mov
bound
std
gs
cmp
dec
ljmp
and
cmpsl
adc
call
adc
repz
adc
jg
cmp
aas
imul
inc
or
pop
mov
inc
lds
data16
icebp
ret
aaa
mov
lods
movsb
std
ret
icebp
sbb
lock
sti
sbb
test
pop
cpuid
popa
pusha
xchg
andl
pop
adc
mov
pushf
dec
xor
mulb
fisttps
dec
xor
repnz
push
mov
pop
jg
xchg
outsb
jmp
mov
incb
stos
dec
sub
icebp
fwait
mov
movsl
xchg
mov
xchg
mov
jnp
fdiv
mov
insb
aam
cmp
adc
fiadds
or
jge
push
mov
fildl
fnsave
repz
push
sub
pop
cli
mov
jae
test
ret
pop
aam
insl
imul
aaa
cmpsl
imul
cli
iret
inc
mov
out
mov
push
cwtl
mov
sti
outsb
push
icebp
adc
mov
cmp
cmpl
mov
jo
mov
or
adc
or
adc
xchg
cmp
jo
std
repnz
inc
pop
test
adcl
loope
fimuls
lahf
mov
fsubrp
adc
dec
inc
in
mov
mov
cmp
roll
lock
dec
ljmp
mov
aaa
lods
adc
gs
adc
add
xor
into
jecxz
push
cs
loop
or
inc
sub
push
adc
adcl
jg
fmuls
jl
mov
push
loopne
xchg
cmp
inc
daa
adc
jp
push
sub
cmpsb
lcall
rcrb
and
cld
adcb
leave
divb
lds
mov
xor
or
lods
add
dec
pop
aad
lcall
or
adc
ss
cmp
in
or
mov
fmull
in
movsl
out
mov
fadd
xor
pop
fldt
cmp
dec
inc
cld
xor
addl
jmp
push
inc
sbbb
lods
fcmovb
pop
ljmp
jbe
push
nop
jle
out
jno
lds
dec
and
sub
pop
mov
mov
inc
sar
sbb
ss
lock
xchg
push
pusha
xlat
xchg
dec
push
fistpll
and
adc
leave
jl
pusha
xlat
mov
dec
add
push
loop
in
and
subb
cmp
mov
repz
lahf
pop
clc
inc
jne
sub
imull
aad
gs
stos
mov
jl
add
lret
imul
vshufps
lock
push
dec
add
xchg
push
adc
fs
ss
push
lcall
mov
adc
mov
xor
sbb
in
int
mov
fs
and
inc
pushl
xchg
fstl
jne
mov
mov
fcomip
mov
arpl
fnsave
pop
push
or
insb
xchg
push
setbe
outsl
dec
shll
add
push
push
sbb
lods
lret
out
jb
mov
cld
pop
push
lret
pop
aam
es
mov
cmp
movsl
push
mov
pop
mov
pop
xor
cmp
mov
cld
dec
mov
push
test
or
jne
aam
leave
outsb
cmp
sub
andb
sbb
adc
dec
mov
jb
insb
xchg
ror
inc
or
aas
lds
xor
loop
sbb
pop
mov
pop
daa
push
shlb
push
into
into
jmp
push
sub
fdivp
mov
mov
add
mov
add
repz
mov
mov
shll
cmpl
pop
mov
dec
ljmp
cmp
adc
cmc
sti
add
test
fdivr
popa
adc
ret
test
lds
push
push
add
inc
mov
push
movsl
js
add
mov
lcall
pop
sub
push
daa
inc
outsb
pop
sub
lock
fisubrl
call
in
ljmp
outsl
add
rorl
imul
jle
adcb
jno
xchg
xlat
int3
mov
sub
jmp
or
or
push
aaa
xchg
push
dec
std
mov
xchg
out
out
jecxz
sbb
adc
jg
ss
push
popa
cmp
aaa
filds
mov
cmp
test
bound
mov
push
and
sbb
sti
pusha
or
dec
ja
aas
adc
fistl
push
xchg
ret
jb
lock
jb
xor
ss
mov
aas
out
jae
rorb
cmpsl
pop
jp
jle
aaa
cmp
mov
push
ja
out
dec
popf
call
sub
sarb
inc
rcrl
loope
dec
xor
pop
push
jo
mov
dec
xor
subb
mov
hlt
jb
dec
loopne
sbb
imul
lret
test
mov
int3
std
inc
lret
cmc
mov
iret
imulb
push
mov
popa
stc
loope
or
cmp
in
out
in
xor
or
xor
stc
inc
scas
xor
xor
enter
adc
pmuludq
xchg
adc
adc
or
dec
jbe
or
and
mov
das
aad
sbb
xor
xchg
mov
ret
loopne
pop
in
mov
js
lret
fiaddl
mov
mov
or
sub
and
lcall
cwtl
cmp
xor
xor
push
pop
nop
arpl
cmp
ja
int3
lcall
repz
and
ficoml
leave
mov
add
leave
xor
cwtl
out
push
jp
faddl
pop
mov
inc
and
or
cmp
xor
lret
enter
scas
or
call
pop
or
test
enter
addr16
in
pop
into
and
mov
call
movsb
fisubrs
int
push
ret
sti
test
sarb
repz
arpl
mov
mov
push
or
jns
mov
cmpsl
negb
scas
cmp
popa
insl
pop
mov
popa
aas
jbe
loopne
sbb
mov
test
xor
sub
ret
lcall
ljmp
into
inc
jg
frstor
dec
es
loopne
sti
pop
lret
xchg
jno
scas
cmp
lock
xchg
call
mov
sahf
cwtl
es
fcmovb
pusha
adc
lret
sub
mov
aaa
xchg
inc
mov
cmp
mov
xlat
xlat
fldl
push
mov
lret
push
cmp
sub
pop
mov
or
sbb
or
xchg
mov
mov
aaa
mov
dec
jne
cmpsb
int3
subl
push
fst
sbbl
mov
jecxz
fcomip
push
mov
in
jp
xchg
dec
out
or
ja
adc
mov
in
mov
xchg
or
es
es
push
lods
lock
lea
inc
das
inc
pusha
xor
dec
cmpsl
xor
or
insl
ljmp
in
cmpl
jbe
sbb
pop
adc
xchg
stos
cmp
jnp
lds
push
add
xchg
fdivr
stos
lcall
fbstp
imulb
pop
sti
adc
pop
les
ret
push
add
pop
cltd
or
push
in
push
xor
imul
js
mov
or
cltd
inc
pop
or
pop
shrb
movsl
test
inc
mul
fwait
dec
mov
mov
rclb
andl
push
push
fcomps
mov
jmp
inc
sbb
idivl
push
xor
pop
cld
aam
pop
enter
fiadds
cmp
add
fcomi
stos
stc
xchg
xlat
xchg
add
push
and
inc
mov
adc
stos
fisubrs
sbb
mov
cld
pushf
jb
mov
xchg
mov
xorb
jo
data16
xchg
out
dec
cmp
cmp
pop
cmp
into
imul
test
flds
jg
push
mov
shl
pop
push
test
loop
mov
setbe
cltd
adc
lahf
outsl
cmp
sbb
pop
mov
dec
int3
fnstsw
jg
cmpl
cmpsb
fwait
push
adc
fwait
sub
cwtl
push
ja
pop
and
iret
stos
cs
jae
push
adc
cli
mov
stos
mov
sbb
push
pop
loop
dec
push
mov
ss
test
or
imul
mov
jmp
adc
cs
mov
icebp
lahf
test
test
dec
call
pop
mov
out
xchg
subb
dec
mov
jge
jg
cmpsb
je
inc
inc
xchg
into
scas
inc
ja
das
dec
pop
or
add
xlat
xchg
mov
aad
lods
mov
mov
mov
fld1
sub
xor
adc
popa
or
mov
add
or
mov
push
cli
lret
rorl
int3
test
loopne
or
xchg
mov
add
pop
push
adc
or
into
mov
addr16
and
cwtl
adc
pop
loopne
out
insb
inc
fidivl
enter
and
and
insl
jae
test
pop
pop
lcall
jo
clc
pop
pop
xchg
mov
sbb
fisttps
dec
movsl
mov
lea
inc
xchg
pop
xor
std
pop
iret
aam
mov
in
enter
scas
enter
mov
jbe
aaa
out
inc
pop
test
insb
rorb
notl
inc
xor
xchg
mov
in
call
pop
loopne
add
sub
int
xchg
xor
add
mov
mov
lea
pop
mov
mov
popa
movsl
aaa
add
mov
pop
out
and
test
cltd
sub
aaa
or
iret
out
test
and
cmc
push
repz
fadds
aam
pop
movb
je
jle
mov
shrl
mov
push
cmpsl
inc
push
cmp
xchg
mov
lret
push
cmp
dec
data16
cmp
out
js
pop
test
adc
int3
sub
movsl
mov
xor
scas
in
jb
sub
es
sbb
ja
mov
test
sbb
sub
jb
das
out
cmp
test
sahf
out
jnp
lea
dec
xor
lock
lock
sub
jecxz
xchg
int
loopne
and
pushf
jno
cmp
push
xchg
adc
vshufps
fcmovnbe
ljmp
xor
pushf
sbb
addr16
jle
rorl
push
sbb
mov
xor
rcl
sbb
cwtl
jl
fists
sub
adc
mov
aam
loop
test
adc
sti
aaa
dec
inc
lea
adc
inc
adc
jecxz
pop
aad
mov
sti
jle
loop
xchg
int
psllq
sbbl
jnp
sahf
aas
repz
inc
push
sbb
jbe
outsb
sbb
add
insb
outsb
inc
inc
sbb
mov
loopne
mov
dec
das
mov
mov
popl
or
sbb
aaa
loopne
repnz
sahf
sub
or
mov
push
int3
mov
jae
loope
mov
adc
add
loop
out
pop
mov
sbb
jae
fsubrp
sub
test
xchg
inc
jne
sub
mov
xor
lds
int3
sbb
jle
lret
jmp
movsb
xor
frstor
dec
cmp
imul
mov
aam
pop
inc
cmc
loopne
xchg
or
pop
and
add
inc
sbb
jg
mov
shlb
mov
shlb
push
jg
push
push
insb
out
jmp
std
xchg
mov
push
jo
xor
xchg
sub
cwtl
lret
jae
and
inc
test
in
adc
out
ljmp
fisubrl
dec
sub
call
mov
xchg
insb
repnz
jb
mov
cmp
mov
jns
popa
or
cmp
stc
je
push
xor
je
push
mov
popf
rcrb
stos
mov
jge
mov
inc
adc
and
sub
mov
imul
dec
aaa
pop
xorb
loop
sbbl
in
cs
dec
ret
dec
mov
pushf
mov
add
fs
fidivrl
xchg
out
mov
add
xchg
imul
flds
test
push
leave
push
mov
fcmovnb
test
stos
cmp
rclb
cs
cmp
in
cmp
xchg
nop
pushf
jmp
pop
cmp
xchg
and
push
adc
push
roll
sbb
mov
es
inc
into
hlt
test
push
mov
mov
jl
movsl
ljmp
jnp
in
push
imul
adc
mov
sahf
movsl
cwtl
sarb
and
add
adc
lds
cld
jnp
rol
popa
ss
hlt
addb
xorb
xor
fldenv
ja
xchg
and
lock
popf
fildl
addb
adc
ljmp
mov
add
iret
dec
mov
rclb
dec
fsubs
adc
jmpw
data16
mov
shrb
push
lods
or
lods
and
mov
in
out
cmp
repnz
add
ret
add
pop
test
repz
dec
paddusb
mov
jl
sti
sbb
xor
shl
sbbl
xor
nop
dec
cmpsb
sub
movsl
repz
fsts
xchg
sbb
jmp
loopne
imul
sbb
lcall
in
and
push
push
outsl
add
adcl
lods
jmp
xor
pushf
and
xor
push
cltd
lock
dec
aad
push
xor
out
xor
hlt
sub
imul
inc
in
fidivrl
out
in
push
push
or
mov
inc
mov
test
adc
pop
xor
mov
daa
or
leave
iret
xor
ficompl
or
jo
fwait
mov
mov
ret
cltd
xor
jne
das
inc
pop
adc
xor
ds
arpl
or
jge
adc
or
mov
xchg
incl
add
sub
xchg
xchg
fisubrl
stos
mov
sti
scas
cmp
mov
stos
cwtl
out
cs
sbb
dec
pop
stos
movsl
xor
push
sub
mov
lret
inc
mov
or
jne
das
mov
aas
push
aaa
pop
repnz
je
xchg
std
ja
mov
stc
loop
lcall
out
fidivs
imul
into
sub
dec
sub
mov
mov
jmp
mov
cwtl
dec
pop
int
ret
dec
sbb
imul
cmc
pop
lds
or
gs
fadds
jmp
mov
aaa
cld
pushf
pop
mov
cld
in
sub
lret
das
add
xchg
xor
mov
cmp
mov
dec
popf
push
adc
pop
stos
shrl
in
add
sti
mov
xor
cld
repz
mov
mov
int
icebp
dec
scas
mov
aad
pop
fwait
imul
aas
lret
push
sub
cmc
dec
push
pop
adcl
xor
enter
fs
inc
sbb
and
mov
sarb
add
pop
gs
fcoml
aad
fidivrs
mov
ja
int3
push
cltd
stc
sbb
fwait
add
lret
jb
sbb
aaa
ja
sub
leave
xor
es
aam
insb
jo
push
mov
sub
dec
mov
repnz
sbb
pop
mov
cmpsl
jbe
aad
inc
std
nop
mov
xor
insl
dec
es
sbb
out
sti
shlb
out
ret
and
mov
adc
add
mov
dec
mov
stos
sbb
sbb
test
jmp
push
fs
repnz
aam
cmp
ror
jp
repnz
mov
jo
mov
fs
fs
pop
daa
sbb
xor
dec
lcall
out
add
jg
lock
and
dec
xor
arpl
or
add
and
cltd
orl
xchg
mov
lods
cltd
pop
jns
cmp
xchg
mov
xchg
and
xor
sub
test
xchg
pop
daa
loop
push
sbb
pop
adc
push
js
add
inc
adc
daa
mov
mov
dec
cmp
or
arpl
mov
push
pop
jle
push
jl
jecxz
or
les
inc
dec
dec
mov
lea
inc
mov
sbbl
pop
ja
mov
fimull
mov
arpl
out
push
dec
mov
adc
pop
rolb
fdivrs
inc
sub
mov
inc
cld
imul
jno
mov
gs
xor
pop
mov
inc
pop
mov
jns
scas
dec
xor
mov
dec
test
mov
fcoml
xchg
jl
out
adc
mov
inc
stos
and
gs
out
outsb
jl
push
pushf
inc
dec
cmpsl
in
push
movl
xchg
mov
mov
push
mov
pop
leave
outsl
sub
xor
jmp
gs
push
and
leave
shrl
ret
or
cli
cmpsl
frstor
add
adc
mov
stc
mov
inc
or
scas
cli
dec
or
fst
jge
popa
adc
sbb
ja
fwait
xorb
in
xor
adc
adc
jno
sub
add
dec
stos
cmpsb
sbb
push
in
push
jbe
sbb
mov
hlt
pop
sub
pop
ficoms
add
cmp
add
sbb
push
cmp
sbb
sbb
mov
ja
shl
and
cmp
int
rorb
insl
das
adc
xchg
push
and
testl
cmp
mov
jb
xchg
iret
push
lahf
addr16
cmc
dec
enter
push
clc
mov
add
out
repnz
mov
outsl
inc
lret
fstl
loop
loop
movsl
xchg
stc
fmull
xor
add
jl
mov
cwtl
mov
les
movsl
hlt
or
mov
push
pop
sub
cmp
mov
mov
ljmp
cmp
mov
or
in
xchg
xor
lds
test
mov
pusha
leave
lds
repz
pushf
int3
lret
dec
out
andb
jnp
lds
ss
sbb
mov
dec
out
fidivrs
loop
mov
xor
or
shlb
lock
fistpl
jo
or
ljmp
pop
test
jno
ss
jge
mov
mov
popf
lret
call
int3
xor
fbld
mov
jmp
ficomps
lret
inc
nop
insl
mov
jle
out
gs
mov
jns
mov
clc
mov
inc
or
mov
lea
mov
mov
movnti
and
cmp
mov
inc
out
jp
dec
mov
jle
fwait
cmc
ret
lods
xchg
shr
out
in
loope
pop
hlt
movsb
nop
in
jecxz
push
pop
pushf
sti
in
xor
les
inc
inc
fisttps
add
jae
ljmp
and
lds
mov
pop
fsubrl
scas
push
add
push
loope
xchg
hlt
xchg
sbb
inc
adc
inc
mov
jnp
fistpll
add
jmp
mov
sbb
cmp
sub
psraw
xorb
icebp
inc
inc
inc
pop
cmpsl
jns
loop
leave
ss
jnp
lret
ja
cmp
inc
push
loop
cmpsb
add
add
pop
xchg
pop
cmp
add
into
mov
adc
out
dec
lcall
lock
sbb
int3
rorl
push
fsubs
mov
dec
xchg
dec
repnz
push
iret
xchg
cmp
dec
test
cmp
stos
or
inc
dec
sub
add
adcb
fcomip
xchg
aam
xchg
adc
shll
mov
dec
orl
aaa
ficoml
or
or
push
rcll
pop
xchg
and
jb
ret
pop
ficomps
inc
cmp
ljmp
lret
pusha
inc
mov
mov
ja
orl
fistpll
popa
dec
shll
sbb
fs
mov
addr16
push
orb
pop
push
and
sub
stc
aad
je
pop
sbb
sarb
es
loopne
cmp
push
adc
add
push
aam
xlat
test
sbb
xchg
into
in
and
gs
dec
jne
decb
jmp
stos
jns
xchg
aad
aaa
pop
cmp
mov
dec
mov
int
repnz
inc
cmp
sub
ror
push
out
xchg
jle
cmp
xor
lds
fnstenv
popf
outsb
ljmp
lcall
mov
lods
dec
mul
aaa
popl
xchg
jno
pop
ret
mov
int3
enter
ret
jg
mov
and
adc
nop
cmp
xchg
pop
xchg
stos
inc
inc
sbb
push
mov
mov
in
xchg
repz
fidivrl
jp
add
and
lret
out
lahf
inc
lahf
or
xchg
scas
cli
inc
sbbl
jecxz
test
pop
rolb
or
mov
jno
mov
clc
lahf
lret
jmp
imul
faddl
ss
push
or
hlt
lahf
xchg
jo
mov
test
dec
popf
shlb
scas
xchg
ret
repnz
adc
pop
out
leave
adc
xor
xor
sbb
xchg
std
addr16
mov
add
cmp
or
in
inc
sbb
and
insb
lret
mov
and
lea
stos
dec
dec
push
or
fiaddl
sti
and
mov
dec
and
mov
aad
testl
mov
mov
orb
adc
imul
pop
xor
pusha
mov
xchg
test
cmp
ss
adc
inc
sub
lcall
cmp
push
std
shll
insl
or
dec
test
xor
sbb
dec
push
imulb
cmp
mov
fbstp
push
push
insb
push
aas
xlat
shl
fimuls
fstp
sub
shll
push
push
cmp
xor
pop
or
dec
rcl
cli
shlb
popf
xchg
movsb
int3
mov
adc
sbb
stos
lret
sti
jae
add
outsl
bnd
insb
xor
inc
jo
arpl
xchg
bnd
test
fsincos
rorb
je
out
dec
fwait
incb
add
fnstcw
and
xor
or
dec
push
and
je
test
ret
loop
mov
loopne
icebp
adc
xchg
aam
testb
daa
pop
dec
fwait
std
fiadds
sbb
jp
mov
ret
or
cmp
jge
sub
dec
or
pop
mov
bound
dec
inc
push
movsb
push
xchg
cmpsb
stos
inc
jno
mov
add
mov
or
mov
lods
rorl
cmpsb
jns
xor
mov
mov
cmp
iret
es
insl
subl
xor
fsubl
sub
hlt
or
or
push
ss
fs
mov
iret
add
and
ret
cmp
jecxz
pop
push
imul
mov
mov
push
stc
je
push
cmp
xor
sub
lahf
inc
or
dec
icebp
add
les
and
mov
arpl
sub
jl
or
cs
ljmp
ljmp
out
in
movsb
adc
int
add
xchg
or
ss
mov
xor
lar
adc
sub
in
jns
pop
mov
ret
inc
jmp
mov
cs
les
sbb
test
cmc
or
xchg
divl
adc
xor
fcoms
sub
int3
popa
fdivs
fmull
loopne
cmpsb
fwait
cmp
push
je
cmp
ds
pusha
pop
in
pop
add
adc
inc
test
or
xchg
push
adc
adc
add
lea
adc
or
sbb
jl
in
mov
bound
insl
stos
xchg
inc
test
jnp
jmp
mov
popf
sub
sub
repz
xchg
ret
pop
sbb
rorl
jg
xor
pop
out
mov
sbb
sbb
aad
test
push
ss
je
sahf
push
sub
mov
jge
lahf
mov
xor
xchg
push
outsl
les
out
arpl
push
hlt
or
and
imul
mov
mov
std
adc
jl
lods
sub
loope
pop
cmpl
adc
and
lods
jo
jg
cltd
cmpsl
lcall
popa
icebp
jge
or
pop
adc
mov
adc
lahf
andl
sub
pop
add
ret
jle
sahf
popf
sbb
jg
and
cmp
arpl
les
add
hlt
mov
popa
mov
xor
mov
and
xchg
inc
loopne
mov
xchg
pop
xor
pop
mov
push
dec
mov
add
outsb
push
fisttps
std
adc
mov
or
fistps
arpl
add
mov
add
add
inc
mov
cmpsb
arpl
xor
xchg
mov
out
test
fcompl
fwait
int
negl
add
pop
sub
enter
sbb
or
std
xchg
jae
hlt
dec
mov
pop
and
xor
lahf
lahf
cmp
pop
std
dec
mov
push
mov
xchg
in
mov
cmp
xchg
sub
push
jg
in
dec
dec
movsl
jne
imull
push
sbb
sbb
and
inc
rorl
mov
and
cmp
addr16
fstl
rol
cmpl
std
sub
or
fldenv
fwait
mov
jnp
je
lods
ret
jg
dec
and
mov
je
jecxz
jbe
add
push
sub
lock
mov
popa
lahf
enter
int3
xor
je
jle
aad
arpl
clc
pop
ret
sbb
xchg
loop
pushf
mov
insb
notb
cli
addr16
sahf
insb
push
push
fs
negb
push
sub
cld
lret
dec
out
cmpsl
cmp
int
pop
or
fstp
xchg
ret
aaa
push
iret
sub
movsl
in
repnz
cmpsl
and
add
outsl
sti
and
arpl
adc
shll
ljmp
js
adc
mov
iret
lods
ret
repnz
out
sarb
roll
xchg
push
lret
cli
sub
arpl
xchg
cmovp
cmpsb
inc
test
iret
push
cmp
insl
mov
mov
shll
cmp
or
mov
lcall
inc
jle
imul
incl
sub
dec
mov
mov
xchg
arpl
lcall
scas
and
cwtl
fsubrp
scas
bound
xchg
dec
scas
pop
lea
sahf
mov
xor
lahf
mov
incb
inc
iret
xor
pop
xchg
xor
pusha
ror
subb
push
push
mov
cld
pusha
ret
mov
je
or
mov
push
stc
adc
mov
or
mov
cmpsl
push
jecxz
cmpsb
xchg
mov
jmp
add
pop
dec
pop
xor
add
aad
cmp
xor
or
out
in
lods
pop
adc
leave
fisubrs
les
cs
dec
lods
xchg
or
daa
sarb
xor
cmpsb
orb
inc
xchg
into
call
mov
push
aad
lret
imul
dec
loopne
mov
loopne
les
fildl
or
pop
leavew
xchg
sub
and
popf
fwait
hlt
adc
add
sbb
iret
test
mov
jae
mov
pop
out
jnp
popa
ficoms
push
loop
mov
mov
dec
cmpsl
rcrb
pop
dec
jnp
mov
pop
lret
dec
jmp
sti
dec
repz
add
mov
mov
xchg
stos
and
fisubs
bound
loopne
inc
adc
add
shrl
outsb
psubw
pop
leave
imul
push
std
into
mov
clc
and
rorb
sbb
cmp
adc
stc
leave
leave
mov
xchg
cmp
jne
fists
jge
push
mov
mov
inc
ja
sbb
popf
or
lea
insl
je
xor
jp
gs
out
add
sub
cmp
dec
cmp
adc
inc
in
divb
inc
jp
repnz
mov
popf
add
sub
filds
into
and
insb
es
testb
popf
scas
andl
ds
in
mov
daa
test
pop
repz
ljmp
lods
imul
aaa
lahf
subb
sub
sub
ja
in
ds
loop
adc
test
test
sbb
jbe
jno
cld
xor
adc
cmp
fcmovnbe
sub
or
pop
pop
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
jnp
mov
pop
jp
cmp
inc
rcr
mov
jl
mov
bound
fnstenv
fstl
mov
dec
lcall
push
pusha
xor
pushf
mov
mov
sub
ret
push
repnz
mov
push
sub
test
mov
push
inc
cltd
popf
mov
shrl
into
nop
cmp
lea
enter
pop
stc
pushw
pop
movsl
test
stos
sub
das
mov
sbb
jp
fwait
imul
mov
xchg
add
pop
push
push
aad
in
testl
pop
cmp
leave
cmp
inc
pop
aas
push
in
imul
scas
inc
in
pop
xor
imul
jb
push
jp
fmulp
mov
mov
pop
mov
sbb
fisubrs
out
rcll
mov
xor
cli
cs
in
dec
sbbb
mov
ds
repz
push
dec
mov
xchg
ret
adc
cmp
insl
out
fisttps
push
lret
and
dec
in
mov
mov
scas
into
xor
ret
fsts
les
mov
push
js
fiaddl
jl
mov
sub
iret
push
test
and
xchg
pop
imul
jns
movsb
dec
xchg
or
and
andl
ds
lret
pusha
mov
pusha
imul
xor
loope
lret
sbbb
mov
sar
sub
pusha
dec
fwait
mov
add
mov
inc
test
mov
mov
shll
jo
call
jne
ljmp
pop
negl
sbb
arpl
and
jmp
fldl
dec
mov
mov
jno
lods
outsb
sbb
test
pusha
in
push
out
rclb
or
cli
in
cltd
clc
and
jbe
mov
ret
push
fsubrs
test
sti
daa
dec
jle
dec
add
adc
and
shl
inc
out
add
fisubrs
cs
and
mov
mov
add
jmp
sbb
stos
cmc
dec
fld
inc
mov
fiaddl
lahf
cmp
cmp
in
xor
jp
dec
notb
jecxz
loop
xorl
sub
push
push
push
adc
mov
int3
fidivs
sbb
push
dec
aas
xor
test
add
ljmp
xor
out
rcl
pop
das
cmpsb
xchg
in
jno
jno
push
push
push
roll
mov
sbb
mov
mov
jo
mov
push
fsubs
aam
loopne
stos
pusha
pop
in
mov
into
or
cmpsb
flds
ficoms
inc
insl
scas
pop
inc
inc
xchg
cmp
insl
inc
stos
xor
sbb
adc
mov
xchg
and
adc
dec
mov
ss
push
adc
imul
jno
int3
pop
inc
dec
pop
test
pop
mov
aas
push
sub
fdiv
lahf
jge
mov
out
lock
or
jp
inc
push
add
jae
pop
jbe
fsubl
shlb
sti
cmp
test
xchg
insl
fwait
xchg
sarl
testb
jns
imul
pop
push
jle
out
pusha
or
sbb
xchg
sbb
ja
outsl
ret
mov
pop
pop
xor
xlat
out
aam
push
in
dec
movsb
or
pop
cltd
cmc
in
jg
sbbb
push
sub
aad
jmp
add
in
sti
pop
movsb
add
xchg
dec
push
fwait
xchg
mov
mov
adc
bnd
xor
enter
jle
bound
pop
lea
mov
pop
gs
aam
inc
shr
jne
fwait
test
mov
cmp
sti
sar
out
scas
sbb
jbe
mov
cmovno
xlat
test
push
imul
aaa
cmpb
shr
add
xor
mov
xor
pop
js
js
cmp
movsl
in
popa
jg
mov
xchg
pop
adc
adc
clc
stos
pop
in
xchg
sub
jbe
lock
adcb
cmpsl
sbb
cli
stos
or
sub
add
or
cmp
inc
inc
addr16
cmp
les
repz
out
lea
and
xchg
lret
mov
imulb
dec
pop
cmc
rcll
rclb
js
fwait
mov
inc
cmp
dec
test
inc
cmp
or
mov
adc
rorl
scas
inc
xlat
shll
mov
adc
ds
jno
pop
jmp
push
mov
in
or
push
and
rorl
int3
shl
icebp
movsb
outsl
mov
push
clc
dec
jp
insl
outsb
adc
imul
xor
stc
xor
test
pop
and
iret
xor
dec
xor
test
inc
mov
out
ss
shlb
js
dec
mov
sbb
xchg
jbe
icebp
jbe
lods
or
test
xchg
into
das
dec
fdivrs
cmpsl
mov
and
add
pop
xchg
dec
mov
jge
push
mov
inc
mov
fistps
arpl
xorl
fimuls
cld
pop
lret
subl
call
jae
outsl
arpl
loop
int3
mov
push
loope
aam
jg
or
cmp
pop
mov
rcrb
mov
ss
movsb
fstpl
fwait
daa
cld
mov
xchg
mov
jb
xchg
fisubl
lret
cmp
insb
push
loope
mov
inc
roll
pop
jl
sahf
dec
filds
push
lcall
xlat
add
iret
in
lock
mov
and
rcll
pushl
xor
fwait
sbb
xlat
repz
insl
mov
inc
sbb
jge
lds
xchg
fs
aad
divb
dec
out
mov
pushf
push
pop
dec
ljmp
not
pop
popa
mov
clc
imul
mov
xchg
mov
xor
push
jne
and
lods
leave
and
out
sbb
dec
or
xchg
rorb
push
cmp
fwait
mov
mov
push
shll
sub
jo
imul
iret
mov
into
sbb
fwait
ss
mov
mov
scas
sub
dec
daa
sbb
jne
pop
int
and
mov
dec
icebp
fs
add
mov
push
and
jmp
out
jae
mov
ss
pop
push
test
mov
rclb
loope
loope
lds
ret
cmpsb
popf
and
push
jb
add
fistl
adc
push
das
imul
sbb
les
popf
aaa
in
in
repz
adc
and
test
outsl
repz
mov
mov
fs
int
push
daa
popf
pop
mov
xor
adc
xlat
jnp
inc
push
int3
cmc
mov
repz
dec
cmp
pop
or
arpl
mov
aas
movsb
mov
push
cmp
xchg
pop
add
sti
mov
repnz
rcrb
mov
mov
inc
test
es
pop
xchg
insl
nop
std
dec
pushf
dec
sbbb
pop
jns
sub
sub
and
cmp
or
cwtl
imul
ja
sahf
lds
jecxz
popf
add
lret
inc
imul
add
pop
sub
mov
mov
ret
ret
cltd
mov
js
rclb
dec
mov
ss
cmp
mov
addb
jbe
adc
mov
in
jp
aaa
jbe
xor
adc
or
ja
dec
sub
movsl
push
jmp
xchg
ret
xor
movsl
mov
ja
and
int3
loop
mov
fisttps
add
in
jecxz
inc
xchg
call
mov
ds
mov
fwait
in
ret
adc
icebp
cld
out
jns
add
mov
imul
push
gs
lods
add
inc
call
inc
add
cmp
mov
test
scas
rcrb
mov
push
and
add
in
add
mov
xchg
and
enter
mov
jae
packsswb
gs
in
in
jp
xor
and
inc
sub
into
push
sub
mov
adc
out
shr
xor
jg
mov
inc
dec
jb
xchg
cld
cmp
adc
pop
dec
or
mov
dec
out
bnd
sbb
ror
scas
scas
mov
push
adc
cmp
jge
in
gs
popa
add
inc
push
iret
cmc
add
inc
cmp
je
movsb
dec
loopne
mov
mov
jno
inc
hlt
test
add
dec
xchg
shlb
rcrw
repnz
flds
mov
divps
mov
jg
or
iret
lock
mov
adc
or
dec
lret
into
iret
out
push
sbb
lcall
mov
scas
sub
inc
lods
lret
xor
ljmp
rorl
xorl
mov
mov
mov
mov
or
ret
xor
mov
lahf
inc
cltd
hlt
or
std
inc
inc
jmp
xor
popf
adc
test
pop
mov
mov
pop
bts
mov
clc
push
inc
sub
sub
mov
movsb
jecxz
dec
sbb
repz
ficoml
xchg
xchg
bound
push
sub
mov
lcall
aad
int
imull
in
pop
popf
fistpll
add
sub
push
mov
sub
pusha
testb
test
mov
nop
into
add
and
xlat
nop
xchg
xchg
scas
xor
xchg
xchg
clc
push
push
sbb
cmpsl
test
lea
jno
dec
pop
and
insl
mov
mov
cmp
cmpl
push
pop
mov
fdivl
fimull
sub
mov
stos
jo
push
mul
call
and
popf
adc
addl
dec
loop
fstpt
xor
inc
scas
ja
cmp
lcall
aaa
add
ss
dec
xchg
movsb
cli
jge
cmpsb
cmp
ja
fsubrl
adc
xor
mov
inc
pop
mov
popf
dec
in
and
daa
inc
lret
fcmovu
imul
lret
lods
stos
adc
iret
ljmp
inc
mov
sbb
mov
inc
loopne
aad
jle
movsb
scas
adc
clc
repnz
loop
xor
sub
imul
repnz
push
notb
mov
lret
ljmp
jge
xchg
xchg
mov
testb
insl
push
lock
xchg
stos
nop
and
sbb
mov
pop
outsl
out
sbb
xchg
shl
adc
mov
adc
mov
pop
jmp
add
or
add
cmp
mov
fwait
jg
dec
cmp
mov
in
loop
adc
push
jb
push
sti
test
movsl
and
mov
orb
and
and
mov
inc
inc
xchg
mov
or
stos
repnz
jae
iret
dec
push
insb
popa
je
dec
adc
mov
or
pop
stos
leave
inc
les
aad
mov
mov
or
in
lret
xchg
xor
mov
dec
add
out
push
popa
cmp
jp
enter
mov
cmp
dec
inc
test
out
jecxz
call
inc
add
mov
loope
stos
jns
ds
jns
in
movsb
emms
cmc
or
adc
and
lds
push
inc
clc
test
jge
notb
cmpsl
mov
jg
out
adc
mov
add
dec
pop
addr16
sbb
sub
adc
addr16
mov
lret
jle
mov
data16
cmp
lahf
and
mov
pop
jmp
sbb
icebp
pop
test
roll
cmp
add
dec
pop
les
test
es
enter
inc
call
xchg
lahf
imul
lock
push
cmp
push
repz
cltd
pusha
mov
cli
mov
or
sub
xor
or
adc
xchg
dec
fsubp
emms
mov
adc
daa
fsubs
gs
outsb
push
in
fldcw
popf
leave
cmp
xor
sbb
and
ss
loopne
cld
adc
and
fnsave
rcr
stos
movsb
push
dec
insl
gs
out
xchg
inc
xchg
repz
jne
fwait
out
es
mov
jne
testl
inc
xchg
add
scas
pushf
pop
loop
data16
cmc
pop
sbb
mov
or
pusha
scas
xchg
cmp
in
cmp
inc
sarb
pop
mov
xchg
shlb
mov
xchg
adc
pop
icebp
xor
repz
add
dec
mov
arpl
test
add
sahf
leave
sar
rol
pop
pop
std
outsl
inc
jp
push
pop
subl
popf
cltd
loopne
mov
dec
push
xchg
xchg
inc
push
dec
lea
bswap
cld
pop
dec
inc
leave
cmp
js
cltd
mov
pushl
pop
push
add
xchg
bound
sbb
xchg
jl
call
test
sbb
sub
popa
call
movsl
jle
fwait
negl
mov
jo
jl
inc
and
xor
out
mov
sub
leave
push
dec
mov
popf
sarl
in
mov
jecxz
cmpsb
xchg
repz
ret
inc
lahf
pop
cli
cs
pop
sub
cmp
xor
adc
pop
mov
leave
ss
scas
popa
pop
add
int
cmp
dec
shrl
jne
xchg
pop
hlt
or
pop
jge
andl
inc
mov
xchg
sub
test
lahf
xchg
shlb
rorb
jbe
testb
stos
shll
mov
outsb
xchg
les
lock
add
ja
aas
outsl
inc
stos
xchg
dec
lea
mov
inc
inc
mov
mov
sub
lds
mov
cmp
sbb
cmp
inc
pop
jle
pop
mov
pop
dec
push
pusha
shll
inc
rclb
mov
mov
xchg
sbb
cmp
jl
pop
xor
jecxz
or
push
mov
xor
cs
rcll
in
xorl
sub
mov
xchg
pushf
rcrl
push
inc
cmpb
iret
cmp
push
sub
mov
jecxz
adc
xor
jmp
jecxz
es
fwait
lcall
sub
leave
test
dec
jbe
or
jnp
gs
outsb
mov
dec
push
xchg
jb
fisubrl
push
cmpsb
dec
dec
je
mov
xchg
dec
mov
jo
cltd
rclb
dec
jns
pop
add
ja
fs
imul
mov
push
jns
push
pop
ss
adc
add
in
add
mov
movsl
or
jg
sub
inc
fcompl
repz
add
cmovl
xor
fs
ljmp
ds
jmp
enter
sub
jmp
mov
test
push
imulb
scas
or
scas
mov
orl
inc
shll
add
fldt
xor
jmp
cmp
push
pop
adc
sti
cmp
mov
enter
mov
fmull
jmp
mov
sub
sbb
or
jecxz
loopne
fisttpl
add
push
lock
cmpsb
jp
cld
dec
jo
push
scas
mov
xchg
jb
sbb
das
inc
ds
in
movsb
adc
mov
mov
cli
adc
pop
imul
or
sub
scas
dec
jge
cmp
outsb
scas
scas
and
inc
pop
inc
xchg
sarl
cli
aad
push
addb
sbb
dec
jnp
mov
fildll
arpl
inc
into
xchg
cmpsb
cmc
and
pop
out
sbb
lcall
add
push
outsl
xor
pop
mov
inc
dec
sbb
popa
frstor
xlat
add
or
jg
icebp
jle
movsl
in
dec
add
daa
sub
pop
clc
loope
aad
mov
xor
insb
jmp
mov
add
cmp
pop
dec
pop
enter
aad
xchg
arpl
ja
mov
aam
lret
iret
jnp
xor
test
add
mov
insl
stos
in
adc
fistl
dec
call
xchg
pop
xchg
add
jge
imul
push
xor
or
enter
imul
add
imul
fdivl
loopne
pusha
push
mov
cmpsl
sahf
popa
insl
aaa
mov
fstpt
int
mov
and
mov
rcrl
outsb
xor
call
jnp
lret
mov
jmp
aam
or
mov
push
fistpll
sbb
sub
and
add
cmc
and
insb
push
test
divl
mov
mov
sub
or
jne
mov
adc
add
adc
fwait
mov
mov
xchg
pop
ret
shr
add
xor
xchg
xor
or
repnz
fs
popa
mov
call
in
sbb
push
cmpsl
or
popa
js
cs
sub
not
push
adc
push
sbb
xchg
mov
pop
push
mov
lret
in
mov
or
aad
leave
push
sahf
and
insb
cmpsl
jb
add
ljmp
stc
and
lea
in
pop
cs
and
int3
imulb
or
leave
xor
imul
js
pop
mov
dec
push
xchg
sbb
xor
mov
insl
pop
inc
repnz
andb
xchg
adc
adc
pushf
and
dec
fbstp
xor
or
xchg
cmpsl
addr16
mov
jb
imul
aaa
or
sti
icebp
rcrl
addl
setno
arpl
cmpsb
push
iret
sahf
cmp
scas
std
es
adc
xchg
ljmp
pop
push
scas
addr16
int
sarl
ljmp
push
pushf
and
and
je
ljmp
dec
lret
sub
lcall
dec
loop
mov
xor
clc
jne
pop
adc
in
push
mov
in
fadds
insb
pop
and
aas
sub
int
scas
pushf
or
push
leave
cmpsl
aas
inc
mull
sub
lret
sbbl
mov
test
cmc
lds
inc
jnp
jnp
cmp
movl
xchg
shl
mov
pushf
lret
outsl
shrl
mov
loopne
xor
repnz
and
test
lea
hlt
andb
call
jne
dec
ja
jmp
mov
in
adc
cmpsb
or
push
xor
subb
ss
dec
adc
dec
push
mov
add
adc
test
pop
push
and
sub
divb
pop
ret
jmp
lcall
in
in
mov
cmc
ret
ja
dec
pop
jae
ret
jns
loope
jg
mov
jne
jp
mov
and
negb
fs
dec
push
add
lret
mov
out
loope
push
xor
inc
sub
push
cltd
jns
sbb
out
sub
lods
push
inc
cld
pop
lods
mov
pop
and
adc
les
imul
les
jnp
cltd
cmp
test
fsubp
xchg
xor
push
mov
js
addr16
xor
mov
repnz
cmp
pop
loop
xchg
mov
lretw
jo
stos
sbb
sti
push
out
jb
push
jmp
or
sub
or
and
hlt
or
pop
lret
test
cmp
fidivs
or
inc
dec
dec
pop
push
xchg
mov
je
sbb
cmp
jns
inc
pop
mov
mov
imul
xchg
dec
sub
inc
xchg
cmp
push
add
fbstp
rcr
push
loop
and
ja
xchg
add
dec
add
and
cmp
imul
les
dec
mov
mov
or
pop
mov
and
jb
test
dec
dec
sti
xor
cmpsl
add
leave
xchg
cmpl
jl
test
leave
adc
cmp
cmpsl
shlb
jbe
dec
mov
arpl
push
mov
push
lret
mov
push
inc
std
into
inc
out
mov
mov
test
fstl
xorb
loopne
or
xchg
mov
sarb
inc
pop
addr16
cmpsl
push
mov
jo
nop
push
subl
xor
pop
sti
std
loop
rclb
insb
sbb
push
lods
cwtl
insb
hlt
xor
sub
xchg
roll
mov
or
mov
adc
mov
mov
jecxz
std
fcoms
or
xchg
pop
xchg
jbe
cltd
mov
mov
mov
into
test
leave
and
and
aam
repz
popa
fnstenv
push
imul
xchg
repz
je
cltd
adc
js
int
push
pushf
and
rcrb
bound
cmpsb
subb
jae
aad
add
dec
pusha
sub
movl
daa
cltd
xor
movsl
cwtl
jae
cltd
xor
mov
mov
mov
cs
std
or
test
filds
clc
mov
jle
repnz
jecxz,pt
mov
daa
inc
mov
pop
push
scas
xor
push
mov
rorl
test
daa
dec
pop
pop
popa
pusha
jge
dec
mov
gs
adc
movsb
and
inc
test
adc
scas
mov
pop
add
add
pushf
fidivrs
add
cltd
or
adc
hlt
int3
xor
loopne
in
stos
mov
jp
out
outsl
xchg
xchg
shrb
mov
mov
bound
cltd
out
pop
jns
decb
sbb
out
lret
dec
xchg
push
es
cmpsb
inc
aaa
mov
and
inc
std
pop
ja
arpl
xchg
sub
pop
mov
adc
aaa
int
jae
push
rcl
inc
fcmovnu
pop
mov
insl
enter
push
das
sbbl
push
outsb
lds
ret
xor
jle
cwtl
cltd
into
je
dec
mov
popa
outsl
cmp
sahf
push
jg
testl
xor
rcrb
xor
cltd
aas
rcl
mov
test
incl
xor
push
cli
mov
sbb
insl
or
in
jb
add
xor
outsl
pop
test
cs
in
ret
sti
fimull
ds
mov
dec
xor
push
or
inc
repnz
pop
sbb
mov
cmp
jp
lods
inc
mov
and
iret
out
sbb
cmp
mov
and
inc
rcll
scas
dec
iret
xor
or
scas
push
jne
lcall
subl
inc
jle
leave
fstpl
loopne
pop
outsb
in
jo
arpl
jb
ret
xchg
in
mov
sbb
inc
cmp
xor
pop
pusha
stos
ds
xchg
movsl
adc
arpl
inc
xchg
mov
xor
dec
or
dec
ret
aaa
add
sub
enter
or
sub
lds
fmulp
push
sub
sub
ss
lahf
jle
push
bound
adcb
pop
ja
push
inc
js
pop
push
push
push
dec
aaa
xor
push
add
cmp
ja
fsubr
push
sbb
cmp
js
xor
push
pop
mov
scas
cmp
nop
mov
cmp
mov
sahf
jbe
sub
pop
adc
xchg
xchg
jo
fs
stc
mov
dec
loopne
xor
movsl
mov
add
xchg
xchg
clc
sti
mov
cmp
pusha
adc
sub
mov
and
insl
inc
pop
mov
shr
push
addr16
fs
cmp
cmpsl
jnp
repz
cmpsl
addr16
xchg
ficomps
scas
std
mov
fildl
fidivl
stos
ljmp
dec
adc
mov
inc
outsl
call
lcall
and
mov
cmpsl
push
pop
xor
fwait
bnd
jno
mov
test
test
fs
mov
les
lock
testb
sarb
inc
and
mov
mov
shrb
jmpw
aam
stos
shll
dec
and
aaa
daa
movsb
leave
cmp
inc
jmp
repz
insb
dec
pop
nop
loopne
xor
ds
mov
inc
inc
hlt
dec
arpl
sbb
testl
stos
aas
and
fbstp
lods
ret
cmp
and
push
jge
sbb
dec
xor
xchg
pop
das
cwtl
mov
loopne
mov
mov
rolb
xchg
xor
cs
push
mov
and
subb
push
push
jne
add
jge
or
fcoml
sbb
mov
mov
or
cmp
cli
hlt
test
ret
and
into
fmull
aas
rol
daa
les
addb
das
mov
xchg
fwait
inc
jl
ret
pop
push
mov
lods
data16
push
in
stc
jl
xchg
ljmp
mov
mov
push
or
ds
cmpsb
push
xchg
lahf
scas
and
cs
push
adc
divb
pop
mulb
mov
mov
xor
lods
push
pop
push
jb
in
xchg
mov
dec
dec
inc
pop
push
jno
ds
push
xor
stc
push
loop
bound
inc
inc
call
lcall
lock
xchg
das
mov
mov
cmp
fistl
xchg
std
or
lret
mov
mov
fnstenv
pop
ja
inc
inc
fildll
jecxz
xchg
ja
rcll
mov
scas
dec
jl
dec
lods
insl
cmp
aaa
dec
std
int3
pop
adc
ljmp
movsb
fcoml
mov
pop
addr16
adc
stos
imul
cltd
cmpsb
push
add
jge
push
dec
cmp
xchg
test
fs
scas
jno
xlat
xchg
add
jg
imul
push
es
jo
add
push
adc
push
adc
pop
call
loop
lret
jge
mov
sbb
ret
cmpb
sbb
movsl
insb
sub
mov
mov
dec
pop
popf
or
xor
xchg
mov
mov
xchg
and
in
outsb
inc
addb
repz
mov
pop
push
cmpsl
inc
push
gs
or
xchg
repnz
jmp
nop
mov
pop
nop
repnz
out
rolb
aad
lret
lods
cmc
rorl
fisttpl
addr16
cmp
call
mov
les
ljmp
adc
std
adcl
call
pop
push
or
sahf
scas
add
ljmp
and
jmp
or
mov
mov
les
inc
outsb
stc
inc
xchg
dec
mov
sub
sbb
addl
lea
bound
mov
stc
ja
gs
pop
ja
lea
mov
lret
pop
into
ret
pusha
call
imul
out
test
mulb
sub
inc
arpl
jge
cmp
ljmp
sbb
scas
jmp
mul
adc
dec
mov
add
in
pushf
inc
or
lret
and
and
int3
jns
bnd
and
and
or
or
pop
lcall
mov
sti
movsb
lret
pushf
ret
xor
jns
js
pop
and
jmp
loop
lock
and
daa
in
sti
scas
adc
orl
adc
xchg
int3
xchg
outsl
jmp
sbb
movsl
popa
push
mov
popa
jno
xor
inc
rcll
ja
sti
sub
cwtl
lret
mov
add
pop
pop
xlat
fwait
into
dec
adc
dec
jb
jl
ret
ds
outsb
rclb
mov
out
cmp
mov
sbb
xchg
inc
mov
out
add
mov
jl
or
cmc
stc
xor
es
cmp
loopne
popf
rorl
push
jne
ficoms
add
inc
push
sbb
xor
and
cli
push
sub
test
imul
bnd
pop
and
push
push
and
dec
jns
cwtl
adc
stc
pop
pop
lds
mov
mov
cmpsb
mov
jecxz
imul
nop
sub
out
cltd
xchg
sbb
mov
das
addr16
xchg
fstl
addr16
add
mov
xchg
jo
or
and
xor
adc
sahf
lret
sub
jge
pop
orl
add
je
outsl
jp
xchg
mov
cmpsl
cmc
inc
cld
mov
movsl
insl
mov
xchg
adc
jge
xchg
xlat
stos
jbe
inc
test
add
iret
add
and
mov
hlt
test
cmpsl
mov
push
int
vdivps
mov
lahf
addb
cmc
push
xchg
lea
dec
push
mov
and
or
movl
xchg
mov
xor
mov
inc
pop
cli
and
nop
cld
shl
xor
out
mov
jb
xchg
daa
cli
mov
adc
jo
dec
stos
and
loop,pn
js
dec
stos
sbb
jae
cld
mov
sub
pop
xchg
stc
push
cmpxchg8b
cwtl
jp
xor
mov
lods
mov
jp
insl
jl
aam
mov
addr16
jne
faddl
push
mov
loopne
cmp
mov
mov
arpl
mov
or
pop
nop
sbb
push
insl
adc
je
mov
lret
sahf
add
mov
lahf
out
test
imul
fnstenv
lods
pushf
movsl
call
cld
das
loope
lcall
fnstcw
xchg
in
scas
mov
jae
mov
insl
mov
test
and
jle
xchg
mov
ljmp
adc
ds
xchg
repz
js
addr16
clc
gs
xchg
mov
add
repz
es
outsb
dec
popf
gs
out
fisttpl
mov
add
clc
lret
jns
fs
push
cmp
mov
mov
jp
lds
adc
mov
lcall
mov
aas
push
pop
mov
xchg
pusha
xor
loop
stos
roll
stc
in
sbb
mov
js
jg
pop
repnz
cmp
cmp
in
mov
scas
sbb
repz
enter
in
rcrb
cld
shr
xchg
pop
cmc
and
jp
xor
jp
in
mov
xchg
jns
in
lock
faddp
xchg
insl
jg
pop
nop
dec
sbb
iret
aas
gs
and
xor
mov
pusha
xor
js
or
add
sub
ja
jp
lea
adc
test
sbb
bound
dec
popa
insb
lahf
lods
test
hlt
repnz
scas
jae
fisubl
pop
mov
loopne
movl
fdivr
decl
or
mov
cmp
je
jmp
jb
or
mov
add
push
jge
or
jp
adc
pushf
mov
scas
popf
lahf
lods
aaa
and
cmp
adc
ja
cmp
in
in
xor
outsb
popf
adc
cmp
xchg
ret
adc
arpl
jne
mov
mov
dec
nop
out
jb
repnz
fistps
cmp
test
mov
les
push
jnp
inc
add
mov
mov
fcmovnbe
jne,pn
nop
add
pop
inc
push
pop
fists
in
cmp
lods
xchg
lret
xchg
jbe
sub
push
sar
repnz
or
lock
popf
ret
rorl
xchg
push
adc
mov
add
sti
dec
sub
add
or
lahf
lea
pusha
xchg
lock
ja
or
dec
imul
pop
mov
or
lret
inc
ljmp
das
xor
cmp
pop
addr16
mov
mov
mov
dec
pop
mov
sbb
cli
xchg
mov
sbb
rcrl
pop
jo
inc
ret
adc
mov
daa
inc
iret
cmp
push
or
test
scas
xchg
hlt
scas
imul
xchg
push
cmc
pop
adc
call
dec
test
push
pop
dec
outsl
xor
mov
push
aad
mov
or
sub
lods
sub
push
adc
js
scas
pusha
test
xor
mov
inc
hlt
pop
fwait
xchg
dec
inc
xorl
out
leave
fidivrs
mov
shlb
cmpsb
xchg
jb
adc
sahf
sub
cmp
lret
jno
dec
out
lcall
inc
dec
xor
js
int3
test
jp
sub
ss
sbb
dec
or
mov
push
adc
iret
outsl
out
pusha
popa
lahf
xchg
sahf
arpl
lahf
in
xchg
inc
lcall
test
push
pop
mov
xor
cmpsb
test
fdivrl
mov
mov
or
jp
aad
xchg
cwtl
xchg
pusha
or
in
inc
or
arpl
orl
mov
jmp
test
lock
adc
lret
inc
dec
out
xchg
adc
add
xor
in
mov
mov
mov
or
data16
popa
stos
xlat
loopne
mov
xor
aam
daa
adc
and
inc
jle
test
jns
ja
stc
in
sub
fs
int3
pop
int3
mov
ljmp
xchg
mov
inc
std
js
inc
pushf
mov
sbb
dec
fs
outsl
std
jbe
rol
fistpll
sbb
int3
es
mov
and
pushl
push
lock
enter
xchg
ja
data16
xchg
push
movsl
bound
inc
stos
imul
cltd
add
das
test
scas
mov
dec
cmp
sub
loop
mov
insl
subl
push
cmp
cltd
mov
cmp
mov
cmp
cli
and
fdivl
rcr
xchg
andl
movl
cmpsb
addr16
lcall
cwtl
inc
mov
inc
pop
mov
or
push
cmpsl
dec
sbb
mov
dec
test
aam
jge
cmpsl
inc
cmc
repz
mov
ror
hlt
scas
call
pop
jno
insb
mov
xor
addb
jge
call
mov
aad
mov
ja
xchg
push
jbe
mov
gs
inc
jo
bound
dec
ret
push
test
dec
ljmp
call
decb
mov
add
sti
jb
xor
adc
mov
orb
stc
lea
push
movsl
dec
loope
cs
pop
cmc
dec
test
std
dec
movsb
inc
into
jb
repnz
sbb
mov
cli
xchg
out
xor
inc
mov
lock
in
jbe
pop
lret
test
mov
fnstcw
or
loop
leave
cmpb
in
fists
push
ja
sbb
inc
scas
orb
xor
add
xor
rol
xchg
mov
test
add
fldl
call
icebp
mov
pop
sbb
inc
add
pop
and
sbb
pop
cmpsb
cmp
mov
cmpsl
test
je
fisubrl
mov
lahf
cmp
imul
aaa
and
fs
add
push
jno
fcmovne
sbb
inc
cmp
mov
jl
arpl
jl
arpl
daa
xchg
jg
adc
scas
mov
xchg
jle
popf
int
movsb
jnp
shrl
mov
and
arpl
add
in
xor
mov
push
sub
xchg
shll
xlat
push
pop
test
loope
pop
int3
sbb
jl
insb
xchg
add
dec
jbe
mov
mov
addr16
andb
jb
xor
and
rcll
xchg
test
jbe
push
fs
test
jle
jmp
aad
push
leave
insb
das
lret
je
arpl
orl
rorl
adcb
mov
notl
mov
loop
repnz
dec
jne
insl
ret
mull
and
jge
xchg
cmp
xchg
sbb
cs
ljmp
popa
inc
daa
xchg
inc
data16
cmp
pop
std
scas
xchg
mov
js
adc
test
sub
enter
mov
inc
sbbb
fcomip
int3
mov
or
inc
ja
mov
imul
xchg
insl
mov
push
xor
lcall
mov
dec
sbb
dec
xchg
jmp
adc
dec
cs
xchg
xchg
aad
xchg
mov
mov
sar
or
add
sbb
sbbb
adc
sbb
fistpl
imul
cmp
sbb
or
mov
jne
lock
pusha
pop
test
push
push
mov
sub
mov
mov
jmp
inc
jp
aad
cmp
xor
xchg
jno
xchg
pop
push
mov
iret
shrb
cmp
dec
in
cmp
push
jnp
fisttpl
jmp
mov
xchg
fistpll
les
popa
out
pop
inc
in
jl
fwait
call
sbb
loope
jl
mov
aad
or
mov
movb
test
roll
cmp
inc
jl
sbb
dec
lret
mov
mov
inc
dec
mov
sbb
or
ja
arpl
xchg
popa
push
into
outsb
fisttpl
lods
xlat
jne
adc
pop
sbb
fldenv
xor
mov
addb
adc
add
cmpsl
in
insl
xor
sub
jp
scas
or
popf
fsubrs
addb
daa
push
mov
int3
nop
jo
imul
stos
stc
xlat
dec
aad
adc
out
xlat
stos
xchg
ret
push
jne
sbb
cmp
iret
shl
sub
dec
popa
sub
pop
int
test
fdivrs
std
xor
sbb
or
out
imul
outsl
and
and
icebp
push
stc
inc
nop
and
test
gs
jge
fdivl
xchg
divl
cli
ljmp
xor
sbb
lds
cwtl
add
insl
popf
push
cltd
lods
test
test
sarl
adc
popf
std
out
push
mov
xchg
mov
bound
push
outsl
mov
xchg
cltd
dec
xchg
inc
adc
xor
dec
iret
out
dec
icebp
insl
cmp
pop
pusha
inc
xchg
sub
push
push
inc
mov
movsl
out
mov
mov
enter
loope
cmp
mov
js
clc
push
rcll
pop
out
dec
push
jmp
sub
rolb
data16
movsb
filds
gs
fcmovnb
loope
hlt
pop
adc
outsb
cmp
cltd
pushf
or
sbb
or
repz
lea
push
mov
icebp
nop
arpl
in
inc
lods
adc
and
sub
xor
or
mov
mov
shrb
out
push
or
sbb
filds
add
je
ret
pop
push
sub
rcrb
sub
rcl
inc
inc
cltd
fildll
inc
sbb
int
push
dec
int3
inc
xchg
cmp
mov
cmpsw
testb
dec
mov
inc
jp
cld
js
mov
orb
inc
outsl
xchg
dec
call
lock
or
ds
test
into
mov
lcall
jp
mov
mov
iret
xchg
adc
mov
xor
xchg
popa
jmp
jp
fwait
out
adc
adc
cmc
lret
testl
cmp
xlat
daa
mov
cmpl
sahf
clc
push
mov
adcl
cwtl
and
adc
or
test
sti
and
aaa
gs
cwtl
jae
fdivl
add
jo
je
cmp
not
sub
pop
ss
cmpsb
inc
mov
xchg
cmpsl
fnstenv
pop
add
js
dec
sarb
or
xor
out
mov
pusha
das
or
out
push
lahf
out
icebp
mov
aas
add
sti
loopne
and
imulb
ficompl
dec
mov
or
mov
adc
xor
xchg
push
jne
mov
push
pop
jne
jne
mov
jge
out
xor
cld
popf
inc
ficompl
lret
daa
inc
mov
out
sub
xchg
cmpsl
mov
movsl
or
sbb
or
ds
jne
popf
mov
shl
or
test
sub
jecxz
int
loopne
pop
shrb
add
mov
mov
into
lret
repnz
testl
push
mov
cmp
aaa
enter
mov
xchg
xchg
scas
int
xor
ret
pop
out
outsl
insb
insb
lahf
int3
pop
arpl
add
in
lcall
es
int
pop
mov
int
mov
jge
cs
fwait
shrb
daa
sbb
je
adcb
lcallw
jl
pop
adcl
dec
dec
fs
push
pop
jbe
mov
pop
jae
add
pop
dec
cmp
mov
dec
into
xchg
push
lock
sub
inc
inc
idivl
dec
jecxz
sbb
ret
jnp
jne
cli
sbb
fidivrl
loop
jl
in
xchg
push
xchg
ficoms
out
ret
mov
lds
pop
adc
add
pop
cs
daa
aas
cs
and
stos
imul
fiadds
jno
mov
and
shll
and
mov
push
cmp
add
jns
jecxz
rcl
xor
mov
out
sub
jns
imul
sar
rorb
cmp
incl
pusha
repz
push
sbb
sub
call
xchg
pop
lcall
add
jno
pop
mov
outsb
xchg
sbb
cmpsl
lods
imul
out
imul
ja
jne
daa
shrb
sahf
inc
adc
add
mov
clc
jmp
lahf
push
cmp
cmp
clc
dec
push
xchg
sub
add
sahf
iret
cmovg
ret
test
push
sahf
outsb
xchg
test
imull
lea
test
push
adc
inc
and
in
notl
cmp
jnp
push
sti
push
fnclex
mov
add
cmpsl
add
dec
mov
sbb
pop
frstor
and
push
fisttps
xchg
das
ja
adc
lods
mov
shl
test
dec
shlb
fs
lcall
dec
cmp
ret
push
and
sub
pop
lock
mov
mov
sub
xorl
sarb
jne
jmp
in
rcll
mov
int
mov
or
dec
out
lcall
in
xchg
das
jge
outsl
mov
push
jno
push
jo
adc
cs
cs
inc
or
jo
sub
xchg
ss
int
inc
adc
mov
cmp
jl
and
out
mov
dec
push
movsl
ds
fwait
cmc
mov
jae
or
xchg
fstpl
jno
jns
mov
insb
push
stc
lock
mov
cmp
cmc
data16
cs
fcoml
cld
repnz
movsb
mov
insl
cmp
pushf
inc
sub
mov
leave
pop
lock
cmp
gs
mov
jp
cmpsb
mov
test
cmp
cmc
and
push
test
xchg
lods
adc
or
cmp
jbe
out
adc
mov
arpl
jo
dec
push
popf
mov
sbb
clc
imul
fmul
icebp
in
pop
idivb
jg
push
aas
imul
inc
stc
mov
and
jbe
lock
mov
mov
cmp
jne
movsb
js
dec
not
in
inc
xor
dec
outsb
push
aam
xlat
fsubrs
rcrb
cld
cmp
iret
mov
enter
mov
jp
loop
les
shlb
fnsave
sub
jo
aad
mov
inc
pushf
lcall
xchg
pop
rcrb
ret
les
out
imul
mov
bound
mov
dec
mov
mov
pop
xchg
sbb
add
out
dec
imul
or
lods
jmp
and
icebp
fcompl
push
inc
call
and
sbb
pusha
jl
push
jnp
sahf
mov
fwait
jge
cs
xchg
stos
or
shll
pop
xor
repz
pop
stc
shlb
fstps
std
push
adc
add
loope
inc
cmpsb
mov
push
rorl
mov
and
loop
dec
jne
ljmp
inc
xchg
mov
subl
lea
xchg
sbb
addr16
cmp
mov
out
sub
movsl
mov
dec
and
xchg
or
insl
jnp
pop
xor
jns
cs
lods
pushf
cwtl
pop
xor
mov
pusha
mov
lahf
cltd
mov
popf
les
in
outsb
fimull
in
or
fwait
popf
dec
and
in
fwait
arpl
dec
sbb
movsl
das
sub
pop
adc
push
out
xlat
push
mov
or
sub
inc
call
mov
mov
pop
cmp
xor
inc
rcll
push
scas
mov
add
adc
jb
mov
loopne
call
pop
xor
mov
in
pop
mov
jecxz
int3
pop
mov
cmpps
xor
int
pushf
sahf
fstps
mov
mov
je
jle
mov
lret
loopne
lds
iret
xor
xlat
dec
sbb
arpl
ret
test
outsl
xchg
xor
out
cmc
push
add
lds
cli
fldcw
nop
push
push
out
push
pinsrw
and
dec
inc
jb
insb
mov
jae
xchg
mov
adc
xor
jbe
call
mov
push
outsb
fs
scas
mov
pop
shrb
outsb
test
out
dec
roll
sbb
out
mov
adc
push
shll
dec
pusha
lahf
jecxz
mov
lcall
xchg
ds
outsb
adc
mov
xor
jno
push
aas
ja
pop
faddl
mov
aaa
fldt
pop
stc
add
add
jl
loop
daa
pop
insb
mov
cmp
clc
enter
jo,pt
lea
inc
xchg
ds
pop
jns
adcb
pop
adc
js
sub
pop
jge
ror
lahf
push
ficompl
xchg
shlb
enter
and
jecxz
data16
leave
loope
jb
mov
or
aas
dec
add
loopne
cld
cmp
dec
cli
hlt
adc
or
sahf
jae
add
fnsave
xchg
or
call
in
pushf
ficoms
out
xchg
movsl
js
je
hlt
sub
and
fdivr
shlb
mov
test
inc
add
dec
in
xor
xor
inc
adc
fdivr
inc
ja
pop
rcrl
fidivl
pop
sbb
fidivrl
and
cwtl
das
xor
dec
cmp
and
add
mov
jmp
das
imul
inc
xchg
mov
int
push
and
in
dec
call
jecxz
icebp
es
iret
pusha
sti
and
leave
adc
movsl
sbb
add
shrl
into
cmp
adc
in
pop
cmpsl
das
lret
lock
loope
bswap
and
or
adc
mulb
movsl
and
repz
hlt
loop
xchg
add
insb
jge
lock
mov
lahf
aas
mov
rep
shll
lds
sbb
fisttpl
dec
fbld
clc
cmp
push
repnz
mov
inc
and
popf
jbe
int3
movb
add
ret
cmpsl
and
addr16
pop
icebp
popa
and
sub
clc
sar
lret
jge
inc
lea
jle
xlat
emms
xchg
int3
xor
imul
stos
inc
lods
loop
daa
cltd
dec
cmp
lcall
xlat
jb
data16
pop
ds
mov
xchg
lea
xor
popfw
shrb
mov
sti
inc
push
and
pop
pop
shl
je
adc
mov
lods
cmpsl
and
enter
mov
stc
popf
repnz
jo
in
cmc
push
lea
jo
int3
leave
inc
add
sbb
leave
rcll
dec
je
fld
sbb
cmp
jg
xchg
push
dec
imul
push
icebp
cld
pusha
push
fcomps
out
jge
jl
inc
pop
xor
adc
push
icebp
andl
shrb
mov
popf
out
push
push
jo
and
cmp
push
sub
outsb
and
sarl
push
cli
push
in
sub
xor
jmp
jmp
push
popa
in
ljmp
and
mov
scas
and
aam
dec
ret
imul
bound
in
pop
cs
das
dec
pop
fistps
shl
mov
add
out
insb
ret
xchg
push
mov
push
pop
add
mov
lret
jl
and
inc
pop
out
clc
or
pop
mov
mov
daa
fwait
popf
hlt
ds
pop
mov
std
push
cmp
sub
icebp
pop
rorb
jne
and
jmp
fstl
mov
sahf
xorl
cld
repz
lahf
add
add
loopne
sub
test
jae
xor
and
rcrb
push
arpl
dec
out
lret
dec
add
in
dec
ljmp
jne
sbb
sub
cs
cmp
test
mov
push
ss
mov
mov
dec
mov
mov
sub
je
shrb
pop
jns
jmp
push
sub
inc
and
or
xchg
xchg
add
pop
sbb
pop
jns
cmpsl
faddl
jmp
pop
lock
movsl
sti
dec
mov
ficomps
sub
outsb
comiss
pop
mov
mov
out
mov
in
xlat
xchg
push
and
jmp
push
flds
imul
insl
dec
enter
inc
clc
push
gs
sub
fsub
out
sub
rcrb
mov
notl
ret
cmp
aas
xchg
rolb
lcall
ret
and
shr
icebp
mov
stos
imulw
pop
jae
mov
sub
mov
xor
cmpsb
loop
xchg
sub
adc
xchg
adc
mov
or
pusha
xor
lods
xor
lret
adc
in
sub
cmp
push
int3
adc
ret
lahf
xor
lret
and
cltd
add
xchg
sbb
mov
js
dec
push
call
mov
pop
cli
repz
mov
bound
xor
out
fwait
les
out
cmp
mov
rorl
in
int3
into
push
gs
push
sub
and
pop
dec
xchg
cmpsl
xor
inc
in
flds
mov
xor
pop
das
xor
sbb
test
and
or
push
push
push
das
imul
sbbb
or
mov
pop
mov
std
push
int
ja
aaa
les
sahf
pop
cmp
cltd
push
mov
sti
pop
stos
cmp
cmp
fildl
jo
push
add
jg
push
pop
xchg
jle
mov
and
fnstcw
lods
add
testb
das
dec
jl
ret
ftst
mov
mov
popf
xchg
loope
loope
fs
xor
mov
mov
out
mov
xlat
rorb
lods
out
insl
cmpl
sbb
xor
fldt
jb
and
mov
jno
and
pop
ja
jbe
dec
push
ds
adc
in
jmp
test
imul
lock
or
dec
jl
stc
mov
inc
and
cmp
aam
mov
cmp
pop
or
dec
inc
pop
xor
or
xchg
mov
mov
int3
in
fldenv
lods
stc
rcl
xchg
shl
out
addr16
or
jecxz
fstps
push
mov
push
xchg
xor
pushf
xchg
jbe
mov
xchg
mov
jbe
and
or
je
push
popf
sbb
insb
mov
mov
mov
stos
push
lahf
fwait
repnz
clc
pusha
pop
and
repz
xchg
dec
or
stos
or
and
mov
pop
mov
lea
add
jo
pop
fucom
pop
push
adc
das
insl
dec
movupd
or
dec
xor
mov
in
repz
jns
and
mov
insb
push
cwtl
es
mov
pop
mov
loop
mov
mov
pop
orl
jp
outsb
mov
and
out
cmp
pop
add
inc
inc
rcl
cmc
imul
mov
and
cwtl
adc
xorl
xchg
adc
leave
movsb
dec
jae
shlb
mov
mov
out
and
lea
lods
lcall
fs
xchg
sub
sub
imul
fdiv
dec
mov
mov
and
jb
lret
add
adc
in
or
cmp
jb
insl
fstpt
aad
aas
jmp
or
push
sub
lret
gs
sub
fs
ret
repnz
loope
dec
mov
add
cwtl
insb
or
call
iret
mov
repz
pop
mov
mov
negl
data16
ja
call
xchg
ja
xor
fnstsw
push
ljmp
push
ret
sahf
out
push
jp
movsl
sub
mov
add
aas
repnz
push
push
pop
push
fnstenv
add
xor
cltd
insl
inc
scas
loope
pop
and
push
hlt
dec
and
in
lock
clc
scas
push
das
pop
repnz
jmp
js
call
mov
sbbl
lahf
jle
imulb
lcall
test
sbb
imul
add
and
xor
inc
jmp
and
adc
adc
pop
cmp
jecxz
aad
push
sub
sbb
aaa
push
fwait
out
jge
pop
adc
push
cmc
inc
sub
jne
notl
mov
xchg
insb
loope
loope
je
adc
inc
ret
int
ret
inc
or
aad
mov
sbb
mov
out
dec
aaa
and
xchg
int
movsl
jecxz
test
jnp
cmp
fs
dec
clc
aad
mov
mov
xor
jp
popa
pop
fcomps
dec
xor
or
pop
ret
jno
leave
and
arpl
pop
out
cmp
dec
pop
inc
mov
jp
sub
out
xor
mov
rcr
jns
cmpsl
lods
mov
outsl
sbb
ret
jle
jecxz
mov
ja
das
cmp
sti
lahf
or
push
mov
leave
jae
ja
insb
aam
lea
dec
repz
sbb
push
sub
in
xchg
movsb
or
scas
adc
popf
mov
shll
fimuls
xchg
sbb
out
std
cmpsb
xchg
fdivl
rol
jb
jnp
jl
or
mov
xchg
xchg
pop
jl
pusha
fistpl
push
sti
aam
mov
lds
cmc
imul
loopne
jnp
into
fisubrl
subl
inc
pop
add
mov
out
mov
arpl
sbb
cwtl
enter
push
sbb
or
les
mov
mov
mov
in
div
clc
mov
rolb
loopne
insl
fstpt
adc
addr16
jno
sbb
push
cs
jnp
cld
out
call
xchg
cmp
ds
sub
shrl
push
addr16
push
in
int3
mov
fisttps
fiaddl
cmp
mov
pop
pop
xchg
add
jns
inc
aas
or
insl
mov
les
cmp
cltd
lahf
in
sub
movsl
xchg
mov
andl
popf
push
xchg
mov
loop
cmp
bound
pop
sub
jb
outsl
outsl
in
push
and
je
call
out
adc
in
jns
daa
xchg
scas
ud1
movhps
rcrl
sbb
daa
lcall
dec
push
xor
xchg
ds
rorl
shl
inc
xchg
lret
push
mov
jmp
daa
nop
sbb
dec
push
xchg
ds
sbb
adc
movsl
cs
cmpl
iret
xchg
in
xchg
pop
cltd
xchg
fstpl
mov
push
xor
jnp
rcrb
sub
lock
das
push
in
mov
nop
cmp
or
cmp
shl
mov
jne
lret
test
mov
je
fnstcw
jge
jg
arpl
add
out
leave
jg
in
out
in
dec
cmp
in
inc
push
jb
lods
dec
out
sahf
inc
mov
pop
mov
insl
xchg
rorb
push
aad
sbb
cs
add
iret
dec
sub
push
cmpsb
stos
push
loope
aas
stos
shrl
jge
es
loop
jb
fidivrl
and
lods
xchg
xchg
mov
std
xor
test
movsb
sahf
std
inc
sti
pop
data16
cltd
and
mov
xor
xor
lret
lret
inc
dec
mov
cs
orb
xchg
inc
repnz
rorb
test
adc
fdivrp
inc
sub
mov
inc
enter
leave
push
pop
pop
push
jnp
fs
out
add
in
fisttpll
mov
mov
dec
cmc
dec
xchg
ret
or
ret
adc
dec
lds
mov
xchg
add
pop
hlt
je
and
jmp
xchg
fcmovnbe
sbb
or
mov
xchg
imul
je
sub
xlat
push
xor
fadd
cmpsl
out
test
add
aaa
ret
imull
clc
inc
cmpsb
pushaw
stos
push
adc
aaa
jae
pop
scas
xor
arpl
xchg
xor
pop
inc
xlat
sbbb
out
mov
adc
shl
jb
mov
shl
pushf
loop
jae
repnz
aaa
iret
push
icebp
push
xchg
fnstenv
sti
dec
cltd
movsb
pop
call
jp
pop
arpl
mov
into
adc
movsl
cmpsl
cmp
fwait
inc
pop
xor
insb
adc
mov
addr16
fnstsw
xchg
mul
mov
aad
pop
dec
fsubl
fnop
or
push
add
mov
lods
jge
stos
or
addb
xchg
aad
int3
pop
adc
lods
xor
pop
inc
cmp
daa
sub
pop
pop
shll
mov
sar
sbb
subb
in
lcall
mov
hlt
enter
daa
cld
mov
add
mov
mov
mov
aaa
out
out
mov
pop
mov
pushf
dec
push
or
mov
and
jb
in
pop
popf
lock
jecxz
xor
andl
inc
mov
cld
and
pop
insl
mov
imul
bound
push
jnp
mov
mov
mov
jb
inc
stos
pop
sbb
cmp
std
inc
repnz
pop
test
mov
clc
aam
adc
mov
aam
adc
dec
repz
pop
test
les
imul
popa
xor
cmpsb
hlt
and
xchg
fistpl
and
dec
rol
dec
gs
or
and
jne
and
sub
cld
arpl
movsl
mov
adc
aam
pop
add
push
shll
jne
mov
leave
aam
fisubrl
mov
loope
xchg
mov
add
inc
aaa
add
sub
adc
jg
mov
push
mov
stc
adc
lock
dec
sahf
faddl
montmul
cmpsb
add
fsubr
loop
call
cmp
out
mov
lret
ret
in
mov
mov
scas
mov
hlt
adc
shll
push
push
aas
es
notb
stos
jl,pn
sub
mov
adc
stos
or
mov
push
insb
jl
imul
cmc
rcrb
bound
fwait
mov
mov
cmp
fs
sbb
add
aas
push
decl
fisttpl
xor
inc
ljmp
cmp
in
mov
xlat
dec
call
cmp
and
call
addr16
adc
pusha
loopne
arpl
jmp
jbe
xchg
sbb
adc
ja
je
xor
lds
movsl
mov
in
enter
sbb
add
add
jno
add
sub
mov
je
pop
and
movsl
pop
out
push
fildll
mov
aaa
scas
push
es
mov
jb
nop
and
mov
push
shrl
addl
and
push
adc
and
pop
js
push
fprem
add
jge
jmp
js
fld1
icebp
dec
inc
sub
or
lret
cltd
push
pop
mov
inc
cli
lahf
mov
iret
mulb
dec
sub
or
ret
loop
insb
popa
sub
add
add
and
dec
ljmp
pushf
stos
jecxz
cmpsl
or
repnz
mov
fcmovne
pop
dec
sub
lret
or
pop
jb
push
js
xor
out
test
out
xchg
and
xchg
dec
ss
addr16
push
test
aaa
fwait
xchg
jb
fwait
sbb
arpl
je
jae
mov
in
aad
and
loop
repnz
bound
insl
test
push
fidivrl
call
out
xchg
fildll
pop
push
into
movsb
pop
pop
sbb
pop
daa
pop
addl
addr16
pop
jne
jp
mov
fsubs
xchg
mov
movsl
mov
sbb
jecxz
push
fsubp
mov
mov
test
add
push
int
xorl
or
arpl
data16
call
outsl
xchg
jnp
jns
lods
xorl
inc
sub
lds
test
xchg
aad
fcmovnb
jno
dec
pusha
mov
add
rcrb
loopne
lods
ljmp
dec
mov
pop
mov
fnsave
jl
stos
xchg
aam
ljmp
pop
lcall
mov
xchg
and
jne
adc
pop
aas
loope
jge
subb
stos
leave
fs
dec
fsubl
adc
push
sub
dec
adc
rcll
push
stos
stos
fnstsw
mov
subl
test
scas
pop
xchg
cld
add
xchg
push
addr16
or
add
push
fildll
dec
adc
inc
fcomps
add
in
jg
rcr
fucomp
jg
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
jo
fidivrs
jge
or
jp
push
pop
jg
test
jg
rolb
mov
popa
sbbl
bound
sbb
add
or
lahf
pushf
mov
sbb
scas
test
lods
mov
pop
jle
ret
pop
or
jae
mov
lea
pushf
pop
pusha
insl
leave
or
loopne
add
push
push
pop
bound
lea
or
add
push
mov
fimull
xchg
in
add
pop
xchg
jnp
subb
aad
mov
data16
call
sbb
xchg
call
rcrl
sahf
inc
add
mov
lahf
push
test
cmpsl
xchg
andb
or
pop
std
pushf
outsl
ljmp
or
add
mov
adc
mov
jg
xlat
aad
fs
or
adc
inc
sbb
sub
insb
jp
lods
adcl
inc
fwait
add
std
or
mov
fistps
dec
jne
sub
leave
cmpsl
mov
cmc
rcll
cld
jb
xchg
ds
clc
cmpsb
sbb
and
aad
pop
mov
cmp
rclb
xchg
jne
jno
dec
aaa
and
and
out
mov
in
test
sub
jno
lahf
pop
call
cmp
sub
imul
data16
xor
pop
and
pop
dec
hlt
int3
imulb
jmp
mov
lret
and
adc
mov
mov
testb
and
inc
adc
cmpsl
ss
in
aam
mov
adc
shll
fstl
fstl
lcall
and
je
xchg
repz
out
fistpl
cmp
xor
mov
pop
int
fbstp
das
mov
cmp
sbb
arpl
cmp
xor
aad
push
cmp
and
jp
sbb
repz
pop
mov
in
mov
jg
repnz
pop
push
xchg
arpl
fwait
ja
int
pusha
dec
fstpt
push
xchg
pusha
arpl
je
xchg
fsub
dec
and
xor
xor
xchg
negl
nopl
push
cmp
repnz
cmp
jno
les
inc
mov
outsb
inc
mov
push
mov
xchg
arpl
fwait
push
or
jae
inc
cli
fimuls
xor
xchg
sub
adc
mov
mov
lret
and
push
rol
andl
pop
fbld
iret
out
ja
pop
add
sbb
stc
mov
leave
lods
clc
clc
push
scas
out
jp
lock
push
adc
orb
inc
lods
pusha
push
icebp
pop
inc
fdivl
mov
fsts
imul
lret
xchg
jnp
jle
jns
pop
xor
subb
cltd
frstor
inc
add
push
cmpsb
insb
mov
mov
jp
jecxz
jle
inc
mov
dec
in
insb
enter
inc
std
add
xor
mov
pop
inc
mov
lret
fcoml
mov
popa
dec
push
js
cmp
pop
sub
mov
pop
cltd
or
and
push
sub
cmp
cmp
pop
adc
fisubrs
xchg
aad
sub
add
loop
jbe
cmc
out
data16
mov
test
adc
xchg
notb
out
adc
xchg
sub
sarl
and
jecxz
mov
or
mulb
fistl
test
xor
fimull
adc
loope
add
push
in
popf
adc
dec
adc
fs
movsl
shl
mov
inc
fstpt
daa
jne
cmp
fcompl
incb
inc
ljmp
insb
rorl
pop
push
ret
xor
inc
aam
or
jns
lods
sbb
xchg
jae
fstp
or
xchg
push
add
push
mov
cmp
push
insl
je
adc
add
divb
mov
test
mov
stc
xor
aad
push
dec
sub
fld
mov
or
loope
inc
jo
cmp
jle
aaa
popa
leave
aam
push
xchg
cli
adc
add
into
das
cmp
fwait
push
sub
cmpsl
arpl
std
aam
mov
aam
sub
push
loopne
pop
stc
fadds
je
fsts
shrb
dec
fbld
aam
leave
in
xor
sti
in
or
aad
jns
daa
xor
je
lods
or
lds
mov
xchg
jmp
mov
aam
push
dec
push
cmpsl
mov
rorl
cli
dec
lods
mov
vaddsubpd
or
xor
pop
mov
adc
pop
push
lret
outsb
ffree
lcall
dec
push
and
mov
cmp
jp
mov
mov
sbb
nop
xchg
call
inc
adc
sbb
lret
cld
insl
push
inc
mov
bswap
rcl
cwtl
jns
mov
insb
push
insb
jns
movsl
jo
add
inc
int3
jno
in
sbb
jo
mov
jbe
popf
inc
xchg
mov
out
icebp
or
lret
bound
xchg
adc
jmp
xor
sub
mov
xor
fs
ss
jle
lock
dec
inc
stc
inc
add
jmp
xchg
push
pop
ret
mov
pusha
pop
shrb
and
hlt
or
mov
popf
test
in
push
adc
out
cmp
in
dec
stos
jnp
test
into
push
cmp
inc
sahf
lods
dec
pop
les
xor
jbe
push
push
sub
adc
pusha
add
je
in
fbstp
sbb
lret
insb
int
mov
pop
mov
shrl
sar
ja
sar
fisubrl
out
inc
cld
inc
es
call
ret
movsb
mov
pop
movsl
dec
cmp
or
lds
xchg
call
xor
mov
inc
fildll
cmp
jmp
in
sub
lods
je
inc
pop
jns
push
test
add
xchg
movsb
andb
test
aas
movsb
cs
insl
sarb
gs
xchg
sahf
push
lcall
pop
mov
xlat
outsl
pop
xchg
or
jb
sarl
mov
sbb
pop
push
mov
div
aas
push
cmc
inc
aaa
lock
or
into
push
out
lods
mov
dec
xchg
sbb
xor
sub
into
cmpb
ja
divl
sub
pop
sbb
lods
inc
adc
in
and
mov
loopne
add
inc
and
mov
xchg
or
sbb
imul
ds
gs
and
xchg
push
add
bound
fldt
fcmovnbe
jne
out
testb
ret
xor
dec
int
dec
mov
inc
dec
insl
jns
jne
sti
lock
adc
cmp
mov
pop
push
mov
sti
imul
jae
jno
and
sub
test
mov
push
out
dec
bound
pop
mov
or
xchg
dec
das
stos
ja
or
sbb
lcall
pushf
int
inc
vpandn
sti
xchg
xchg
mov
sub
or
daa
dec
gs
and
aad
sbb
stos
cld
sbb
loope
sub
mov
mov
jle
in
dec
mov
mov
in
sbb
xchg
aam
loop
daa
repz
mov
dec
pop
rcr
mov
adcl
dec
test
sti
lahf
in
dec
xchg
addb
leave
xchg
push
lods
pop
bound
push
mov
pushf
dec
adc
sub
into
pop
mov
jae
jno
inc
jne
mov
mov
sub
lods
push
stos
pop
movsl
int3
cmpxchg
ficoml
rcrb
adc
pop
inc
mov
mov
hlt
mov
cmp
imul
xchg
pusha
fmul
loop
xor
lret
int
xchg
movsb
inc
mov
lock
push
xchg
daa
imul
sub
std
pop
mov
cld
fcoml
mov
sarl
mov
test
clc
mov
xor
dec
mov
jp
test
into
sub
shrb
xchg
push
adc
imul
sub
xchg
inc
dec
cmpsl
ds
popf
jo
jmp
adc
xor
sub
dec
cmpl
push
sub
xchg
cmc
mov
xor
push
xchg
popa
sbb
push
popf
sub
clc
push
out
dec
sbb
mov
xor
lea
pop
lret
shrl
cmc
mov
xorb
add
push
xchg
push
jmp
lods
push
jo,pn
xchg
jno
mov
jbe
xor
dec
insl
xor
sub
into
fbld
lret
xchg
loopne
mov
add
xor
inc
in
je
and
or
outsl
add
ss
fistpll
or
mov
push
mov
xor
stc
leave
sbb
dec
mov
in
dec
mov
adc
push
jle
arpl
repnz
pop
pop
inc
shrb
cmp
fisubs
jne
xchg
cmp
adc
xor
aad
lea
popf
lret
loope
inc
ret
jmp
idiv
xchg
push
idivb
icebp
into
mov
cmc
sbb
in
pop
cmpsl
iret
add
jge
das
and
mov
dec
xchg
shrl
lret
testb
push
xlat
outsl
adc
stos
inc
fidivl
pop
cmc
xchg
gs
xchg
xor
test
sbb
lret
js
outsl
mov
scas
push
and
dec
jae
lds
insb
rcl
ds
sub
mov
mov
hlt
dec
int
push
xchg
jle
jbe
add
ja
or
add
cmpsb
push
dec
inc
fcoms
push
push
xchg
mov
adc
mov
sarb
lods
out
test
push
adc
cld
pop
in
fildl
ds
mov
sub
xchg
cmp
divb
push
pop
leave
mov
add
lods
hlt
jne
dec
leave
mov
cld
mov
xor
xchg
test
jnp
jmp
inc
and
call
arpl
inc
cltd
call
adc
mov
mov
outsl
xchg
dec
into
push
push
mov
addl
seto
aas
lds
sbb
inc
mov
adc
jnp
in
push
sub
push
xchg
mov
or
aaa
movb
add
push
adc
ds
scas
inc
fnstcw
es
mov
scas
nop
cmpsl
test
mov
jbe
nop
add
sbb
outsb
xchg
rcrl
fcomps
mov
out
or
in
fisubl
lods
scas
cli
and
xchg
aam
out
jno
fsubl
jo
xchg
pop
cmpsl
fnstenv
test
cmp
test
in
rcrb
cld
mov
pop
pop
mov
sub
ja
ret
out
cmp
inc
popf
cvttps2pi
push
and
jmp
xlat
mov
add
ret
and
js
mov
and
pusha
adc
test
sbb
jmp
jmp
jb
scas
jg
fsubl
call
inc
or
and
std
fsubrs
out
mov
shll
scas
sbb
enter
leave
xchg
cmp
pop
push
mov
fadds
xchg
mov
idiv
mov
jnp
push
pop
push
jp
or
sub
cli
mov
in
stc
repz
xor
fdivl
or
int3
add
sbb
rolb
sbb
std
mov
in
pusha
push
ja
pop
pop
into
imul
dec
jecxz
stc
xor
into
adc
cs
push
fwait
mov
enter
not
mov
push
pop
nop
sbb
mov
pop
frstor
insl
sbb
hlt
insl
daa
ljmp
insl
adc
jmp
je
or
test
jg
xchg
js
std
loop
inc
jmp
fidivrl
mov
scas
push
sbb
hlt
mov
shlb
inc
movsb
inc
cmp
sub
add
fs
enter
mov
stc
addl
bound
aad
les
stos
cmpsl
sbb
movsl
shlb
leave
call
in
jno,pn
xchg
jmp
stos
fs
or
cmpsl
loop
sbb
jp
ljmp
pop
pmullw
mov
push
push
or
pusha
stos
sub
sub
into
bound
loop
stc
mov
mov
jne
fsubr
dec
popf
std
push
aaa
inc
inc
sub
pavgb
push
dec
adc
push
mov
adc
dec
popa
sbb
push
push
pusha
pop
and
fnsave
inc
in
sub
add
fisubl
enter
cs
push
or
xchg
into
out
cmp
aaa
sbb
ja
or
movsl
maxps
pusha
xchg
sbb
inc
or
das
cmp
pushf
stos
cwtl
lods
push
int3
ljmp
in
cmp
out
adc
pop
push
int
mov
out
adc
ficompl
popf
sub
sbb
adc
out
mov
push
jns
bswap
mov
cmpsb
lea
andl
enter
inc
cltd
or
fimull
sbb
pusha
sub
push
shll
imul
and
cmpsb
mov
xchg
mov
data16
mov
call
mov
cmp
jae
leave
imul
mov
push
loopne
ds
testb
mov
add
adc
aam
push
shrb
fsubrs
fsubrl
notl
jae
sar
jl
pop
pop
popa
sti
or
pop
sbb
mov
mov
nop
loop
adc
or
xor
pop
push
mov
sub
jns
fcoml
mov
dec
jl
push
add
add
xchg
out
negl
out
pop
push
cmp
rcrb
xchg
arpl
sub
xchg
popf
xchg
lods
add
dec
sti
lock
stos
sbb
cmpsl
movsb
mov
lahf
ret
testb
and
clc
pusha
sti
add
mov
adc
jnp
fstp
js
mov
sub
and
push
sbbl
jp
inc
push
pop
cs
jnp
xchg
lcall
adc
ss
push
or
sub
data16
xor
sub
or
adc
xchg
lock
shl
test
out
cmp
dec
inc
jb
pop
movsb
sub
push
add
call
jecxz
push
lahf
push
jp
pushf
cmp
cmpsb
mov
sbb
call
std
aam
sarl
bound
mov
sbb
push
dec
push
rorl
popa
ret
push
pop
xor
xchg
arpl
pop
and
movsl
aam
clc
xchg
mov
adc
push
mov
lret
jl
sub
cmp
pop
xchg
pop
dec
xchg
add
lds
scas
and
pcmpgtd
hlt
jmp
xor
jge
icebp
aaa
adc
push
mov
jae
ja
mov
pop
pop
add
lcall
xorb
mov
movsb
int3
aam
stos
adc
fisubs
xor
rol
mov
push
mov
sub
or
jg
cltd
sub
mov
adc
push
mov
xor
mov
jecxz
push
out
mov
sbb
outsb
stc
mov
test
je
pop
or
pusha
jb
push
xlat
loope
lcall
aas
adc
and
xchg
push
stos
pop
fists
clc
subb
mov
inc
idivl
jp
fs
or
push
gs
and
shr
mov
mov
mov
int
xor
mov
pop
mov
movsb
cmp
mov
out
or
int3
scas
xor
cwtl
pop
outsl
and
js
mov
pop
nop
psubusw
and
cwtl
xor
mov
clc
ljmp
lret
cli
rorl
fisubrl
inc
or
add
adc
repz
xchg
int
test
sub
dec
repz
daa
cmp
jge
movsb
adc
jg
dec
imul
dec
in
xlat
inc
lods
mov
lds
jae
mov
fidivs
xor
pop
fdiv
js
pop
test
cltd
jns
inc
adc
es
inc
ret
fadd
jae
fs
sbbb
shlb
test
cmp
pop
mov
aas
lea
dec
push
mov
cli
push
insb
shl
xchg
les
sub
dec
xor
sbb
xchg
mov
mov
and
mov
fsubrl
mov
push
lock
mov
dec
sarb
repz
jno
popf
repnz
decb
in
adc
jno
adc
cli
mov
in
aad
mov
test
bswap
arpl
jp
arpl
cmp
dec
filds
or
xchg
push
and
ja
sub
add
adc
sti
fwait
push
mov
or
mov
jmp
xor
mov
int
loope
ljmp
adc
incb
and
and
mov
dec
jp
enter
jno
inc
int3
inc
inc
push
inc
xchg
mul
sets
sub
gs
or
popf
and
mov
mul
repnz
test
sti
mov
rol
push
sbb
insl
push
and
outsb
xor
mov
dec
mov
aas
mov
cmp
movsl
and
nop
push
std
mov
hlt
xchg
cli
out
mov
shrb
repz
imul
ret
xor
dec
ret
or
add
mov
cmp
iret
sbb
out
arpl
dec
pop
mov
mov
jl
inc
cmp
mov
data16
dec
addr16
scas
dec
mov
dec
int
cwtl
lret
ds
outsb
sbbl
fwait
lds
lock
mov
sahf
xorb
lods
pop
push
lret
lret
sbb
inc
push
ljmp
adc
mov
daa
arpl
jmp
adc
enter
movsl
push
paddsb
cmp
aaa
scas
lahf
arpl
adc
lcall
inc
or
mov
or
sbb
push
cld
mov
repz
ror
cmpsl
outsl
mov
loopne
out
cli
cmp
adc
out
imul
jmp
sub
mov
adc
jne
scas
xor
idivb
pop
dec
and
clc
aaa
adc
in
loop
xchg
mov
xor
sbb
push
push
xchg
push
pop
fnstsw
add
in
movsb
cli
test
aaa
leave
scas
in
data16
lret
adc
pop
into
std
aaa
popa
pop
ds
pop
dec
push
iret
icebp
adc
scas
pop
xchg
jbe
mov
daa
adc
or
add
ret
xor
mov
cwtl
or
mov
scas
push
out
dec
xchg
push
out
mov
test
lret
jne
les
ret
loopne
lahf
or
mov
js
loop
pusha
jmp
mov
mov
iret
or
cmpl
pop
or
clc
movsl
mov
cmp
jp
mov
repnz
xlat
out
lods
mov
repnz
call
inc
lret
push
mov
sbb
lods
push
xchg
lahf
cwtl
mov
hlt
ret
sbb
push
sbb
jg
or
movsb
in
daa
mov
jbe
fdivrs
push
pusha
in
pop
adc
in
dec
xor
pop
adc
fwait
xor
andb
pusha
inc
mov
jae
pop
add
repz
push
pop
cmp
adc
add
ja
test
jbe
push
xor
mov
lret
icebp
je
inc
jbe
lret
cmp
add
add
fstpl
mov
push
push
and
inc
xor
cmp
push
stc
cs
sar
out
les
mov
cmp
mov
xor
push
nop
xchg
ja
out
loop
push
ds
jb
stos
data16
add
cltd
adc
mov
push
popa
movsb
and
sti
xchg
test
movsb
sahf
jne
frstor
into
mov
dec
push
jl
xchg
pop
mov
xchg
dec
add
pop
bound
inc
mov
mov
fidivrs
pop
shlb
jge
add
push
rclb
pop
ds
push
mov
mov
add
aad
es
add
shl
adc
repnz
call
xor
clc
add
xlat
push
push
push
lahf
mov
adc
stos
inc
or
jmp
and
and
push
push
rcr
jns
xchg
jmp
pusha
xor
gs
fs
adc
push
and
ss
popa
adc
xor
and
pop
fsubrp
xor
mulb
frstor
push
pop
push
inc
inc
addr16
loopne
dec
les
scas
call
lods
sub
and
addl
or
ret
jp
push
push
pop
enter
dec
add
mov
inc
int3
stc
lock
push
lods
jle
mov
insl
adc
scas
popa
sarl
ret
sbb
fldenv
mov
push
mov
fidivs
loope
jmp
xor
push
ror
push
lock
mov
pop
out
pop
nop
insl
xor
scas
mov
push
scas
rcrl
sub
pop
push
fs
add
dec
jb
xchg
in
repz
push
rorl
imul
fnsave
jbe
cmpl
rcr
add
or
mov
jae
loope,pt
dec
push
adc
sti
and
std
push
shr
pop
stos
jbe
mov
fs
inc
push
mov
mov
leave
cmp
aas
xchg
imul
outsl
movsb
lock
inc
lds
mov
pop
jp
out
and
and
addr16
repz
or
hlt
dec
pop
dec
jl
dec
push
dec
adc
fstpt
in
mov
dec
in
jns
ret
cs
and
in
add
pop
imul
xlat
sub
xor
fstpl
mov
xchg
movsl
mov
jmp
jle
int
dec
add
or
call
sub
cli
fxch
adc
xlat
adc
pop
outsl
cmpb
shrl
negb
in
mov
in
out
dec
push
push
test
in
push
sbb
jno
mov
sbb
sbb
jge
push
daa
lea
xor
xlat
or
sub
out
adcl
scas
mov
insl
in
repnz
mov
mov
dec
pop
dec
aas
jge
rcl
lods
cli
sarl
xchg
jge
ret
js
pop
mov
fs
or
push
add
inc
fstpt
or
mov
xchg
scas
fcoms
push
loop
popa
enter
clc
imul
cltd
add
ljmp
add
jne
pop
pop
and
iret
and
jns
push
int
pop
dec
adc
ret
pushf
scas
loop
mul
xchg
inc
or
pop
in
xchg
dec
les
xor
notb
hlt
pop
mov
mov
push
cmp
scas
ffree
jg
cwtl
push
mov
es
dec
insl
icebp
fisttpll
into
pusha
xchg
push
fmuls
inc
sub
mov
int
sbb
ljmp
scas
sub
mov
and
sbb
sub
push
les
cmpsl
les
jbe
fildl
ss
testl
lcall
pop
sub
sub
lret
fsubl
or
in
cld
dec
ljmp
mov
pop
enter
mov
mov
and
xchg
insl
cmp
dec
and
jbe
adc
pop
add
movsb
cmp
out
lods
or
xor
sbbb
push
adc
inc
out
movsb
fimuls
mov
fldcw
insb
add
xor
out
or
data16
mov
mov
inc
add
inc
mov
subb
enter
out
mov
add
leave
das
dec
leave
sub
ret
sub
stos
movsl
mov
jno
test
mov
xchg
out
mov
mov
nop
fnsave
mov
jmp
jge
jne
in
mov
mov
into
push
and
mov
sub
pusha
daa
imul
imulb
inc
fdivrl
jne
dec
leave
lods
aaa
test
jge
and
icebp
enter
nop
imul
or
mov
bnd
cmp
xchg
leave
jae
sahf
pop
in
xchg
in
dec
xchg
popl
mov
push
add
jbe
xchg
loopne
xchg
insl
xchg
mov
cmp
inc
ss
mov
push
repz
push
and
lcall
aas
or
add
fcomp
xchg
xchg
cs
jne
ja
add
jp
mov
and
xor
test
insl
pop
jae
je
fwait
push
out
jne
lds
jmp
mov
cmp
mov
xchg
push
test
andl
setbe
and
jg
insl
dec
push
scas
push
ret
or
scas
popa
inc
push
xor
inc
loopne
mov
fwait
dec
pop
add
pop
mov
dec
repz
push
push
push
jno
sbb
jl
sub
rolb
adc
pop
mov
cmp
rol
xchg
xor
mov
push
mov
js
out
xor
enter
and
and
mov
insb
addr16
adc
outsl
hlt
hlt
stos
cmp
fidivrl
or
add
sub
fwait
outsb
mov
inc
add
xor
lret
repz
das
icebp
xor
aas
or
sub
jg
mov
ds
xchg
sbb
rolb
lahf
adc
cli
out
xor
mov
push
mov
jp
es
pop
push
cmpsl
push
rcrb
inc
add
rcr
pusha
mov
dec
pop
dec
mov
dec
shrb
cmp
stos
and
sbb
test
mov
inc
adc
movb
and
mov
ljmp
cmpsb
sub
testb
pop
test
stos
int
aas
subb
sub
push
jns
push
xor
xchg
repz
pop
pop
jecxz
push
sbb
mov
push
pushf
scas
add
in
mov
divb
or
adc
mov
cmc
or
sub
xchg
or
lahf
dec
hlt
xlat
add
cmp
adc
mov
test
push
cmp
jne
sub
sub
popf
ds
loopne
enter
xor
pusha
loopne
xor
push
hlt
stos
sbb
out
jge
push
fsts
mov
mov
sbb
test
daa
cs
jmp
ja
icebp
jg
daa
dec
out
mov
jo
mov
call
fldenv
or
lahf
cmp
movb
mov
push
push
dec
cmp
dec
xor
insl
ss
xchg
jns
push
fs
cmp
pop
xchg
mov
sbb
inc
int
sbb
mov
xchg
fimull
jle
popa
lret
mov
popa
add
jmp
inc
in
in
cmp
sbb
push
pop
xchg
mov
mov
jmp
jg
and
jbe,pn
push
stc
xchg
push
loope
lret
addr16
pop
test
sbbb
jns
daa
repz
addb
dec
xor
fdivl
dec
push
mov
test
out
dec
cs
test
idivl
pop
mov
and
jecxz
mov
cmp
insl
sbb
push
ds
mov
push
insb
enter
and
ja
iret
addl
cli
mov
fisttpll
ret
in
fimull
mov
push
bound
aad
xor
jae
sub
mov
inc
adc
bound
bound
cmp
cmpsl
fdivs
lods
add
and
les
mov
mov
push
xchg
movsl
aas
repnz
cs
mov
clc
inc
idivb
mov
faddl
push
push
xor
fisubs
push
pop
in
add
mov
sahf
or
imul
mov
lds
sbb
mov
fs
xchg
sub
xchg
dec
inc
or
sbb
ss
jmp
mov
ror
xchg
shll
arpl
adc
aad
ret
leave
xchg
and
or
aas
mov
cmp
xor
adc
cmp
mov
fnsave
bound
cmp
sbb
filds
push
add
inc
sarb
mov
test
xchg
pop
xchg
xchg
mov
pop
inc
push
push
scas
in
lahf
ljmp
mov
sahf
cmp
mov
mulb
into
xchg
pop
pusha
pop
into
movsl
pop
jecxz
fs
test
stos
mov
lcall
mov
dec
enter
out
or
mov
inc
jbe
jb
jno
daa
jo
scas
sub
mov
mov
imul
sub
jno
popa
push
add
jnp
inc
test
hlt
test
inc
mov
mov
add
push
sbb
in
std
mov
iret
pop
into
adc
mov
mov
push
push
lds
gs
mov
shr
mov
dec
sbb
pop
hlt
nop
cmp
push
mov
aaa
xor
ljmp
ljmp
bound
scas
mov
popa
iret
jo
push
arpl
popf
mov
dec
dec
jge
mov
lret
pop
nop
xor
sbb
xchg
or
cmp
movsb
mov
or
jnp
aaa
int
dec
scas
stc
cmp
adcl
adc
or
adc
cmp
iret
test
mov
decb
daa
out
jb
stos
or
pop
or
hlt
inc
ljmp
push
xor
xchg
sbb
mov
outsl
ds
dec
pop
inc
loop
or
fwait
mov
jns
aam
add
rorw
dec
scas
mov
cs
adc
and
ret
popf
or
pop
dec
jmp
inc
ss
and
in
into
test
data16
in
and
insb
mov
xchg
in
pop
outsb
outsb
and
fisttpll
add
dec
push
push
call
fcomps
mov
mov
jmp
subb
jnp
jo
notb
push
mov
repz
lea
ljmp
pop
pushf
dec
gs
jg
in
scas
push
cwtl
imul
cwtl
repnz
inc
jge
adc
cmpsb
dec
lods
xchg
pop
daa
adc
inc
fimull
xchg
clc
or
xchg
and
jns
cmpsb
or
stc
aas
jmp
add
in
pop
mov
jg
mov
cmp
xor
jno
inc
add
add
pop
aad
int3
rclb
cwtl
jnp
gs
jl
mov
call
mov
or
call
inc
test
outsb
sbb
imul
mov
hlt
test
jmp
scas
test
mov
xchg
jmp
dec
int
inc
jo
aas
cmp
adc
mov
leave
jae
outsl
dec
xor
sbb
xor
sub
xor
mov
xor
rorb
or
pop
xchg
xor
mov
rolb
icebp
mov
mov
xchg
dec
ds
jnp
mov
int
in
clc
movsl
andb
or
or
jnp
xchg
shl
mov
mov
test
xchg
in
inc
repz
stc
jae
jge
sbb
aam
clc
leave
add
mov
pop
add
xchg
push
test
lcall
xchg
imul
je
or
push
rolb
mov
scas
jp
imul
outsl
push
pop
ja
sar
xchg
inc
call
jnp
pcmpgtw
sbb
fbstp
xchg
outsb
xchg
rorl
or
jb
add
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
sbb
xor
jge
or
jp
push
fidivl
call
mov
push
call
outsb
out
inc
call
and
sub
xchg
hlt
inc
faddp
shll
xor
push
into
and
aaa
xor
sbb
cwtl
mov
call
and
gs
mov
ja
dec
das
lods
in
dec
jno
push
pop
push
push
leave
sbb
mov
test
in
lret
inc
xchg
popa
cmpsl
test
xchg
jne
test
int
sahf
or
clc
pavgw
push
mov
cmp
xor
xchg
inc
sti
xchg
jnp
inc
mov
cmpsl
xchg
into
orb
je
add
push
push
in
neg
ret
lea
daa
sahf
xchg
inc
push
in
fcomps
dec
movsb
pop
dec
das
mov
mov
xor
push
mov
mov
jmp
pop
fdivs
xlat
jp,pn
sbb
or
call
int
jne
movsb
xchg
inc
xlat
push
call
fs
adc
adcb
dec
imul
or
stc
sub
lea
push
cmp
pop
insl
imul
sub
cld
jno
adc
xor
or
jae
enter
push
inc
roll
imul
jecxz
or
imul
fcoms
and
subl
cld
cmp
mov
inc
xchg
pop
adc
xchg
rcl
repnz
dec
cmp
cmp
fwait
call
mov
inc
ds
leave
decl
dec
scas
sbb
mov
insb
stos
inc
bound
aaa
jmp
inc
cmc
movsl
xchg
popf
pushf
sarb
adc
dec
dec
les
aam
lock
dec
ficomps
scas
aad
scas
xor
arpl
sbb
inc
cmc
outsb
or
jb
pop
inc
xor
dec
in
and
jno
int
sbb
das
dec
das
inc
xor
neg
inc
imul
in
jne
inc
outsb
mov
hlt
ficompl
push
pop
lea
ret
pop
sub
adc
sbb
lahf
imul
cmp
add
subl
sub
or
add
popa
sti
push
pop
jge
loopne
stc
xor
sub
push
jge
lret
and
pop
pop
cmp
popf
push
and
pop
jae
push
xor
mov
xor
test
add
insl
mov
sbb
mov
cs
bound
loopne
arpl
insl
dec
rolb
or
test
xchg
in
repz
mov
lea
shl
dec
in
push
xchg
ljmp
sub
adc
and
rcrl
push
push
jns
add
xchg
jne
and
pop
push
xor
jo
add
mov
leave
jecxz
icebp
jne
and
or
les
fcomps
lahf
push
lds
or
push
jmp
bound
cmpsb
push
push
cmc
mov
inc
stos
jbe
and
push
hlt
rcll
repnz
push
mov
in
sub
loop
cmp
loope
out
cltd
hlt
adc
sbb
inc
or
mov
mov
sbb
rcll
call
out
in
mov
pop
sahf
mov
add
loopne
lods
dec
add
movsb
push
int
addb
dec
or
pop
or
bound
sti
ret
nop
cmpsb
sub
loopne
out
nop
add
pop
and
cli
test
mov
in
jb
scas
scas
mov
packsswb
mov
mov
inc
inc
mov
jg
sti
push
jp
xchg
xchg
adc
mov
cli
push
mov
ret
pop
cmp
adcb
cld
pop
dec
lds
sub
test
movsl
or
cmp
movsl
je
push
imul
dec
push
cmp
cmp
int
adc
cmc
subb
cmp
add
lahf
popf
rorl
jg
jne
sub
sub
cmp
imul
outsl
inc
pop
arpl
lret
stc
mov
cwtl
enter
mov
push
lret
or
sbbl
mov
loope
movsb
mov
fcomps
sbb
jns
js
cltd
cmc
xchg
fldl
cmpb
leave
mov
or
cmp
xchg
ja
inc
scas
mov
bound
jno
andnps
mov
lods
mov
popf
and
addb
xor
mov
mov
mov
pop
call
cmc
dec
jg
mov
dec
call
cltd
lcall
xor
lret
in
xchg
sub
lret
fadds
iret
stc
and
mov
mov
cmp
daa
xor
roll
dec
or
lret
or
mov
nop
icebp
xor
lcall
leave
fs
sbb
or
jo
repz
jg
mul
mov
fadd
int3
add
fmuls
nop
ret
lahf
mov
enter
add
in
mov
xchg
and
dec
inc
jle
jle
stc
cwtl
mov
jns
adc
or
jmp
jo
xchg
jl
call
test
mov
jae
jne
cwtl
jne
fnstcw
iret
jbe
inc
pop
in
xchg
lret
jle
lods
aam
aas
imul
push
movsb
mov
pop
ds
std
nop
arpl
dec
cli
sub
jecxz
lea
xlat
xlat
mov
cmp
sti
popa
xor
xchg
xchg
icebp
lret
mov
mov
jmp
outsl
xchg
test
pop
push
lret
inc
test
pop
inc
cli
push
incb
jae
xchg
pop
dec
in
in
xchg
enter
mov
sarl
xchg
dec
shrl
sbb
sbb
xchg
fisubrl
scas
fs
push
pop
push
push
stos
inc
push
outsl
mov
cmp
testl
out
hlt
jg
ret
je
or
push
ljmp
sarb
pushf
push
int3
sub
add
and
mov
pop
faddl
adc
and
fst
push
adc
add
sub
pop
stc
mov
xor
subl
jne
lock
cmp
push
lret
cmpsb
sbb
mov
dec
icebp
andb
enter
shrl
or
adc
mov
adc
pop
mov
fdivrl
insl
and
orl
hlt
xchg
jns
add
push
pop
inc
rcrb
js
lret
pop
xchg
mov
outsb
push
or
xchg
aad
scas
push
mov
jecxz
xchg
xlat
scas
mov
out
scas
das
stc
mov
cltd
and
pop
jne
push
lret
xchg
and
das
idivl
adc
repnz
scas
and
mov
push
cmpsl
es
ja
into
cmp
mov
sbb
sbb
pop
jb
cmp
mov
inc
lcall
fucomp
adc
ror
sbb
and
mov
mov
inc
adc
cli
jl
shlb
xchg
xlat
adc
dec
push
pop
xchg
mov
sub
push
xchg
cwtl
inc
jmp
sub
lcall
flds
call
stc
or
dec
push
repz
jl
je
sbb
movsb
in
mov
dec
xor
jae
loopne
sbbl
movb
pusha
or
xor
xor
aad
cmp
adc
lret
lea
or
addl
loop
pop
mov
leave
push
xor
stc
mov
cld
sti
jge
daa
ss
adc
sub
jg
mov
jecxz
dec
xor
lcall
scas
or
lret
lret
sbb
push
mov
pushf
insb
lahf
jne
cs
sub
cmp
sbb
cmp
fbstp
jle
and
int
hlt
test
sub
shll
adc
mov
cmp
test
pop
ret
stos
add
mov
in
not
cmpb
mov
xchg
jo
loope
mov
dec
mov
lret
comiss
cli
inc
push
test
push
mov
insl
push
sbb
cmp
mov
adc
pusha
stos
ret
shl
ss
sub
pop
or
add
xchg
sbb
sub
shl
sbb
mov
and
pop
jnp
xor
mov
fimull
daa
pop
fmull
and
es
add
pop
in
dec
lret
cmp
mov
fistpl
sahf
lock
push
mov
mov
sub
imul
sub
jp
xchg
lahf
rcrb
sub
mov
shl
lods
bound
les
daa
sbb
adc
and
fld
and
sti
xchg
stos
xor
jo
xchg
adc
and
mov
in
add
pop
mov
ljmp
jg
iret
icebp
xor
stos
loope
cvttps2pi
addl
and
mov
sbb
mov
sbb
sub
pop
push
or
into
add
mov
out
inc
or
sub
sahf
pop
sbb
sbb
push
push
out
fsub
outsb
fisubrl
and
aam
jne
dec
lock
idivb
cmc
push
cwtl
mov
xor
push
jecxz
cld
jns
lock
mov
sbb
aad
fisttpll
pop
inc
cmp
xchg
or
or
xorl
lahf
xchg
jns
popa
dec
mov
int
lret
dec
mov
add
arpl
repz
sti
add
xor
pushf
sub
scas
xor
push
loop
pushf
push
mov
in
sbb
xlat
sub
jne
push
pop
jg
jmp
mov
xchg
nop
test
pop
mov
daa
dec
ret
and
add
mov
jbe
lret
jecxz
fstpt
std
mov
leave
push
push
in
mov
pop
push
push
jmp
mov
mov
pop
push
or
jbe
jg
mov
or
out
mov
aam
rcr
cmp
mov
mov
mov
jne
nop
in
lret
lret
dec
mov
or
stos
xlat
stos
mov
xchg
ja
incl
xlat
mov
pusha
xorb
sub
mov
dec
clc
jo
lds
test
push
popa
xor
push
mov
push
hlt
or
pop
sub
pop
mov
aad
ret
jnp
jmp
jle
jno
lret
test
sub
std
xchg
fcoml
xchg
ret
jbe
sub
sub
repz
cmp
jle
incb
lods
fldlg2
xchg
and
fs
dec
notb
mov
xchg
dec
popf
test
sbb
inc
cmp
sahf
es
in
cmp
jb
lret
dec
sbb
test
sbb
cmc
or
dec
cmpb
les
mov
mov
xchg
jbe
ljmp
mov
mov
repz
push
lods
dec
lret
lods
xor
enter
std
sbb
push
arpl
push
mov
and
outsl
lcall
push
mov
or
decl
xor
repz
out
xchg
jp
push
addr16
scas
push
stos
push
xchg
loopne
enter
push
test
xor
mov
clc
repnz
shll
push
outsb
call
adc
popw
or
enter
pop
inc
gs
cmp
pop
dec
test
pop
mov
mov
aaa
mov
xor
push
mov
lea
fmul
adc
dec
or
popf
cmp
pop
push
push
or
mov
icebp
dec
and
imul
dec
xchg
cli
scas
lods
jae
imul
loope
movsl
aad
xlat
fcoml
lds
popa
scas
into
inc
popa
jmp
sub
loopne
push
cltd
sbb
das
push
push
fprem1
in
mov
insb
mov
mov
into
ret
jge
mov
std
jnp
xchg
mov
fnsave
in
testl
shr
ja
das
sbb
gs
push
nop
cld
pop
std
pop
popf
add
inc
imul
xchg
addr16
push
ret
sub
mov
outsb
mov
jae
jo
xor
aas
notl
push
push
in
lret
sub
cmp
or
mov
cs
jl
sub
pop
fwait
std
cmc
lret
daa
cld
adc
pop
stc
cmp
sub
push
les
adcb
inc
mov
push
inc
movsb
mov
imul
push
scas
clc
fdivrl
std
adc
mov
std
shll
mov
or
orb
xlat
xlat
push
clc
xchg
insb
dec
cltd
incl
push
je
pop
push
push
pminub
adc
shll
pop
aaa
jnp
test
dec
mov
cmp
cmpsb
inc
cli
inc
or
jnp
sub
sbb
pop
popf
inc
out
in
xchg
mov
pop
push
das
lret
and
sbb
fisubl
inc
xor
ret
out
and
cld
jmp
or
movsb
shll
jne
cwtl
gs
cmp
lret
jbe
lret
out
xchg
test
ret
mov
inc
sti
mov
and
popf
add
adc
mov
cmp
js
add
or
cs
mov
aad
xchg
scas
clc
not
bnd
fildll
insb
sub
or
push
dec
cmpsb
adc
jno
fmull
into
outsb
sbb
fneni(8087
subb
adc
loopne
es
push
xor
jae
movsl
xchg
stos
and
sarb
daa
lret
mov
or
jle
xlat
lock
aaa
outsb
mov
mov
insl
cwtl
mov
xchg
xchg
mov
sbb
xlat
int3
mov
sbb
lea
inc
mov
test
andb
inc
pop
das
push
sti
mov
pop
jl
fsts
cmp
mov
sti
lret
cmp
shl
push
lret
or
loope
pusha
mov
ja
arpl
divl
adc
cmp
xorb
jnp
clc
push
and
mov
sbb
ret
mov
sub
xlat
cmp
inc
mov
or
insl
in
fs
aam
push
inc
outsb
jae
int3
xor
lods
push
insb
shll
mov
lret
add
je
inc
mov
jbe
rcll
fadds
sbb
hlt
out
and
inc
and
mov
daa
imul
cli
mov
and
and
jmp
jp
mov
cmp
pop
and
incb
sbb
icebp
cmpsl
out
xorb
in
xchg
dec
jne
inc
call
xchg
mov
sub
ljmp
out
jecxz
dec
rolb
or
shrb
insl
rclb
adc
les
or
ret
push
jae
mov
enter
out
push
imul
dec
cmp
inc
and
xlat
xchg
out
inc
rol
loope
jp
test
outsb
adc
cmp
cmc
mov
lods
jl
lock
das
mov
inc
out
sbb
outsl
popa
int3
cmp
ja
out
sarl
addl
cmp
and
mov
mov
inc
test
xchg
enter
mov
push
cmc
xchg
fcompl
movsl
jl
or
inc
loop
pop
mov
cmp
xchg
sub
adc
in
lea
push
int3
insl
xchg
sub
inc
pop
pushf
inc
cmpl
mov
sub
hlt
lods
jmp
inc
mov
jne
push
inc
popa
dec
pusha
scas
sbb
leave
jecxz
nop
movsl
add
enterw
jne
pop
jl
mov
cs
jle
jecxz
cmp
out
cmpsb
test
pop
adc
mov
enter
inc
sub
push
push
xchg
mov
fmull
test
sbb
xchg
pop
rcrl
xchg
in
jbe
jno
negl
inc
cmovg
dec
mov
inc
clc
push
fstps
or
jo
inc
bnd
js
mov
fwait
enter
xchg
rcrl
cmp
xchg
mov
sub
ret
scas
push
xor
pop
jmp
xchg
dec
sub
mov
push
data16
jmp
xor
ds
nop
xorb
das
loope
xchg
dec
loope
clc
mov
gs
jnp
jb
cmpsb
xchg
push
mov
push
cmp
es
shll
cmp
dec
pop
pop
daa
sub
adc
push
gs
pop
cmp
or
cmpsb
push
adc
inc
mov
mov
xchg
pop
aas
jne
add
movsl
notl
mov
mov
push
cwtl
repz
ds
cmp
sahf
add
adc
cmpb
adc
inc
add
cmp
dec
int
add
or
mov
addr16
xor
mov
imul
loope
cmp
and
push
fdiv
nop
dec
add
ret
fbld
ljmp
sbb
js
fcoml
push
pushf
push
ja
jno
mov
add
fwait
mov
push
nop
push
jge
mov
cmpsl
pusha
sahf
sub
ds
inc
rcrl
jg
jecxz
fincstp
xor
pop
and
mov
rorb
fisubl
mov
ljmp
xlat
xchg
push
kmovb
cmpb
sub
neg
negb
subl
sub
adc
js
lcall
lahf
adc
pop
notb
frstor
loope
cwtl
cmp
inc
scas
repz
lcall
mov
imul
mov
dec
add
shr
push
sahf
sbb
test
xchg
lret
mov
or
jns
xchg
aas
sub
xchg
or
addr16
jbe
xchg
dec
xchg
shrl
pop
jg
imul
sahf
inc
lock
dec
adcb
inc
test
popa
or
loopne
shlb
lcall
punpckldq
add
and
or
xchg
add
push
fxch
mov
cmpsb
imul
jo
add
fisubs
jo
cmpsl
loope
hlt
test
aam
repz
mov
pop
fwait
andl
hlt
jge
push
mov
push
aad
jno
arpl
sub
jbe
sahf
addr16
rcl
lods
sbb
cli
loopne
loope,pn
or
mov
fidivrl
bound
stos
push
xor
mov
int
adc
xchg
scas
jmp
push
jnp
dec
push
sti
stc
xchg
test
dec
sub
inc
pop
add
xchg
jns
aam
mov
push
adc
pop
lret
pop
outsl
pushf
enter
cmp
andl
sub
mov
ret
loopne
imul
frstor
pop
xchg
fs
bound
sbb
dec
sub
sahf
out
inc
sbb
daa
lods
mull
in
sbbb
sub
inc
rclb
add
xchg
loop
shlb
add
or
ror
push
mov
aam
push
mov
xchg
icebp
xor
aam
mov
push
clc
xchg
push
dec
aas
fs
cmp
push
xchg
jno
insb
mov
mov
push
mov
rolb
cld
xchg
add
xlat
xchg
cmp
inc
enter
xchg
int
mov
adc
dec
daa
push
mov
repz
cmp
in
mov
jle
sub
bnd
iret
mov
fstpt
fcomps
or
rol
jge
sbb
lods
and
xchg
cmc
insb
mov
lock
xor
outsb
out
pop
dec
jo
cmpb
jle
cli
in
imul
imul
mov
inc
jno
cmpsl
jnp
arpl
and
xchg
rcrl
popa
insb
sbb
out
imul
inc
push
xor
jns
xchg
arpl
outsb
push
dec
sbb
imul
aas
push
jmp
push
enter
push
lahf
in
jnp
scas
lcall
js
xor
mov
sub
adc
into
cmp
cmp
jmp
outsb
lcall
mov
or
mov
adc
mov
leave
dec
out
pushf
sarb
sbb
cmpsl
dec
fldl
clc
sarl
or
dec
leave
mov
sub
fs
js
scas
mov
mov
mov
xor
daa
in
lret
xlat
test
clc
or
lds
cmpsb
push
and
and
dec
jno
add
iret
pop
push
mov
pop
in
lock
inc
out
lods
daa
mov
dec
pop
xor
mov
insb
mov
into
mov
pop
pop
mov
rclb
popa
arpl
test
lods
dec
pop
push
ljmp
stos
mov
cmpb
in
cmp
shl
jbe
arpl
out
jmp
mov
xor
leave
or
adc
xor
repnz
loop
pop
inc
lock
ret
sub
aad
pop
loope
or
adc
mov
das
sbb
xorl
cmp
or
sbb
into
int3
jp
push
sub
in
stos
mov
mov
test
popa
fstpl
stos
or
cmpsl
mov
push
imul
jle
mov
pop
jns
daa
ss
shll
inc
mov
test
and
mov
mov
lret
mov
xor
mov
push
xor
pop
out
or
iret
jns
sbb
and
cmp
divl
or
sti
add
dec
cmpsl
inc
and
add
mov
xor
stos
ss
std
cmp
add
loop
pop
in
cmp
sbb
cmp
nop
sbb
std
std
adc
loope
pop
xchg
cmpsl
jp
add
insb
cld
fucomip
sub
shl
les
cwtl
jne
push
daa
out
adc
stos
ds
xlat
jl
fcoms
mov
pop
pusha
and
test
shrb
inc
jb
arpl
ja
or
dec
cmp
call
inc
pop
adc
daa
out
outsl
pop
call
rorl
notb
arpl
test
push
pop
scas
ret
nop
scas
jp
scas
fstl
mov
arpl
ljmp
pop
repnz
imul
ja
js
or
mov
loope
jg
add
mov
es
pop
add
mov
lret
pop
in
imul
add
sub
xor
cltd
rorb
push
mov
pop
adc
cmp
in
sbb
test
mov
cmp
xlat
jbe
xor
rcrb
adc
jg
push
ret
mov
pop
push
in
or
test
fisubrl
out
pop
mov
mov
adc
pop
mov
fnstenv
add
jne
mul
sub
in
mov
scas
pop
mov
cmp
sahf
cmpsb
mov
loopne
push
adc
gs
lds
jge
out
adc
sub
jno
mov
add
jle
nop
sbb
imul
mov
in
mov
subb
mov
mov
arpl
mov
movsl
mov
xchg
jbe
jae
or
fisubl
bound
out
sbb
mov
insl
xchg
sub
xchg
xchg
stc
xchg
cli
iret
mov
lea
pop
daa
inc
aas
push
jmp
gs
jmp
out
shrl
mov
test
mov
mov
leave
idivl
sub
movd
out
scas
test
xor
dec
xor
in
push
jl
adc
adc
loope
addr16
push
pushf
fdivl
repnz
cmpsb
dec
pusha
push
or
ja
add
sbb
mov
fcom
daa
cmc
add
dec
ret
cmpsl
fists
dec
lea
ret
xlat
and
push
loope
and
dec
pop
xor
xchg
jmp
sbb
xlat
lret
js
jne
push
stc
and
mov
or
lock
add
fsubl
cmp
pop
jp
fs
stos
cmp
inc
je
out
fwait
sete
mov
push
ljmp
popa
cmp
jle
adc
aas
jle
dec
add
xchg
cmp
inc
add
inc
dec
push
inc
fiadds
movsl
mov
fsub
dec
mov
add
out
push
push
sub
jmp
pop
adc
dec
lea
jecxz
imul
mov
pop
sbb
xchg
or
cmp
mov
mov
mov
xchg
outsl
sub
pushf
cmp
mov
into
es
outsb
movsl
addr16
mov
test
xchg
sub
je
cmp
xor
cs
stos
adc
in
ljmp
xlat
dec
enter
dec
lds
out
xor
scas
xor
out
out
jbe
sbb
inc
adc
or
mov
adc
inc
sar
fldenv
sbb
push
jg
pop
cmp
into
lods
sub
xchg
adc
ja
pop
in
cmp
or
xchg
lret
das
out
aad
sbb
mov
add
addr16
sbbl
jp
push
mov
adcl
ljmp
inc
test
jl
in
or
adc
movsb
ss
pop
cwtl
add
lods
jnp
adc
in
lcall
jne
outsb
mov
xchg
xor
sub
test
in
sub
imul
test
std
es
mov
aad
cmp
and
imul
imulb
les
shrl
pop
sub
shrb
mov
movsb
xor
sbb
mov
mov
mov
pop
sub
dec
inc
testl
xchg
and
and
cltd
jg
inc
jge
jae
push
xchg
out
xor
cwtl
icebp
xlat
adc
ljmp
xor
insl
imul
xchg
lret
push
in
stos
outsl
movsb
cli
pop
or
and
inc
xor
and
fwait
push
mov
add
dec
inc
je
in
xor
repnz
sub
lea
lcall
cmp
mov
jg
loope
and
andb
mov
pop
shrl
popf
ret
or
inc
call
mov
lds
testb
adc
pop
sarb
int3
std
imul
les
inc
movsl
adc
or
push
dec
and
mov
adc
rcrl
push
mov
test
and
add
dec
xor
xor
jb
cs
loopne
outsl
sar
mov
fs
aam
sub
repz
mov
pop
pop
filds
rcll
push
into
dec
mov
lret
inc
dec
iret
stos
ret
insb
mov
movsb
cmc
sub
mov
test
push
push
repz
test
cmp
test
sub
enter
std
fstps
add
fcomps
cmp
xor
lds
test
mov
shrb
mov
dec
mov
adc
or
aam
xchg
mov
das
loop
arpl
ficoms
xchg
xchg
scas
ds
in
add
out
loope
xchg
bound
push
loopne
dec
adc
lea
jmp
ror
bound
lods
push
dec
pop
sub
lods
xor
xlat
popf
popf
adc
mov
fists
push
sub
lcall
icebp
ret
or
cld
dec
jg
mov
fbld
dec
cmp
fisttpl
push
xchg
ss
sbb
stc
jecxz
or
jnp
clc
stos
xchg
adc
mov
sub
sub
mov
aas
and
fs
pop
mov
loop
mov
loop
insb
add
test
pusha
jle
fnstcw
mull
fisubs
mov
pushf
push
add
mov
mov
pushf
lods
fisttps
lock
lret
mov
ds
scas
jnp
pop
lods
cmp
xor
inc
mov
mov
aas
mov
xchg
outsb
adc
jb
loope
pop
cmp
mov
xor
xchg
ss
xor
lods
mov
mov
clc
notl
push
sbb
xchg
push
mull
xor
das
arpl
dec
pop
xchg
popf
dec
inc
sarl
stos
inc
loope
fmull
sub
xchg
push
sbb
cld
jbe
cmp
jmp
test
and
cmp
enter
add
sub
test
loope
fsubrs
xchg
jae
or
add
mov
jg
sarl
das
arpl
orb
cmpsb
push
push
pop
mov
push
xor
and
cli
mov
mov
popf
and
add
sbb
xor
sti
sub
adc
repnz
and
pop
dec
mov
outsl
mov
adc
mov
in
dec
je
pop
sub
or
addr16
cmp
dec
inc
and
ds
xor
jno
sub
hlt
mov
push
std
jb
pop
cmp
orb
subl
mov
jecxz
and
hlt
and
dec
cwtl
jne
adc
fwait
inc
xchg
jp
sahf
cmp
lods
xor
cmpsb
nop
mov
cmp
or
leave
cld
ljmp
add
jg
cltd
outsl
cmpl
insl
xorl
sub
clc
int3
fimull
mov
push
mov
xchg
sbb
mov
stos
add
cmp
fwait
add
and
sub
mov
in
xor
mov
dec
scas
mov
and
ret
fcoml
shll
rolb
sarl
sub
sbb
fimull
push
xchg
inc
nop
test
dec
fildl
cltd
repnz
lods
adc
mov
pop
cmp
fcmove
mov
jecxz
fimull
cmp
pop
mov
out
xchg
cmp
sbb
gs
dec
out
insb
mov
dec
ret
mov
xor
das
pop
cmc
movsl
lea
fisttpl
sarb
popa
xor
or
pop
lret
xor
mov
aad
jp
push
sub
xchg
movsl
js
xor
mov
mov
cmp
push
mov
cmc
push
xorb
adc
aas
pop
int
subb
addl
mov
mov
or
pop
push
jo
dec
jge
ja
arpl
ja
ja
mov
stos
int3
jno
or
cmp
push
push
icebp
stos
mov
test
in
subl
movsb
popa
fs
jge
lods
les
push
or
push
push
add
jb
lret
bound
mov
adc
add
imul
mov
subb
jnp
fsubrs
inc
enter
sbb
and
jnp
cwtl
and
rcrl
loope
pop
out
fdivl
cs
lea
xchg
test
dec
cmp
jl
sti
adc
adc
xlat
push
lods
jnp
push
jmp
popf
bound
jg
xlat
jo
push
mov
mov
in
pop
movsl
ds
ret
push
ljmp
push
jb
imul
arpl
sub
inc
pop
mov
lea
jnp
dec
movsl
ret
aaa
push
fwait
sub
mulb
mov
jge
mov
and
loopne
aaa
cmp
aam
icebp
jb
roll
cmpsl
fiadds
jp
insb
fstp
or
in
addb
push
outsb
jne
xchg
cmc
fstpt
push
mov
pop
xchg
xor
loopne
xchg
cmp
push
sbb
sub
movsl
clc
ret
xchg
into
mov
out
das
stos
sub
mov
push
lahf
mov
pushf
mov
in
xchg
cmp
loop
sbb
movsl
dec
xor
dec
dec
test
test
addb
lret
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
push
jge
xchg
loope
jp
pop
jp
xor
mov
frstor
push
mov
out
and
mov
clc
cmp
daa
sbbb
xchg
push
clc
in
inc
xor
cmc
ss
outsb
imull
je
inc
sub
or
fbstp
std
hlt
add
jbe
or
jb
inc
cmc
cli
imul
mov
push
mov
inc
jmp
push
push
out
lods
mov
adc
mov
add
push
jmp
cwtl
xor
push
shl
push
fistpll
adc
loope
insl
dec
or
imul
mov
out
jns
lds
inc
mov
and
jge
add
js
lret
jp
lods
fldenv
dec
or
sub
mov
or
push
push
jmp
je
insl
stos
hlt
add
dec
cmpsl
mov
scas
sub
in
imul
push
imul
mov
pop
pop
das
add
sbb
test
aaa
fsubrl
inc
jmp
dec
mov
clc
inc
jae
sar
adc
pop
fs
pusha
and
rclb
mov
decb
fmul
xchg
out
hlt
sbb
sbb
pop
xchg
js
cmp
sbb
fsubr
xchg
enter
cmc
xor
sbb
dec
and
dec
inc
cs
arpl
push
fs
mov
bound
clc
mov
adc
shlb
push
add
mov
jecxz
push
push
in
cmp
dec
mov
adc
jg
enter
aaa
push
les
loopne
push
imul
fcompl
js
ljmp
mov
or
insl
ss
das
and
fistps
jl
sub
cwtl
ret
jg
push
sti
inc
call
loope
xor
mov
test
lret
xor
dec
or
pop
sbb
push
outsb
inc
mov
fmuls
shl
ret
pop
adc
inc
in
inc
xor
or
ret
xor
mov
pop
xor
cmp
loopne
leave
mov
gs
into
clc
jae
pop
scas
jmp
dec
cmc
xchg
dec
push
xorl
popa
mov
cld
test
jae
je
sub
xchg
sahf
test
jp
pop
inc
mov
pop
scas
dec
xor
adc
insl
mov
fistpl
cmp
dec
mov
jecxz
lret
in
sub
and
jle
stos
and
pop
sbb
out
mov
push
repnz
jns
push
mov
cs
dec
dec
cs
sub
adc
or
imul
push
dec
pop
xor
inc
das
bnd
jmp
jle
pop
jnp
cmp
jne
jle
sbb
adc
jp
inc
stos
mov
cmp
xchg
je
inc
xor
shlb
jbe
xchg
fwait
dec
inc
or
sub
mov
fdivrl
push
inc
push
adc
push
ds
lock
jecxz
mov
sub
push
mov
sahf
cs
inc
cltd
mov
jge
rcrl
imul
or
mov
fsub
gs
mov
loop
lahf
push
psubusb
push
jne
in
cmpsb
sti
hlt
xor
dec
pop
mov
es
sbb
sti
sbb
in
fwait
jb
fs
fnstenv
test
pop
jmp
inc
jecxz
push
test
insb
movsl
push
xchg
jmp
sbb
pop
dec
aas
inc
ds
jl
pop
or
xchg
loop
sub
cmp
or
cmc
int
jle
lcall
rorl
sbb
push
add
dec
xchg
push
lahf
jge
ret
lods
sbb
jl
rcrl
cwtl
mov
mov
mov
jp
xor
cli
inc
enter
xchg
imul
ficoms
imul
les
call
shll
in
and
in
pop
int
fwait
lds
ljmp
rcrb
arpl
push
int
hlt
add
add
sub
or
cld
pushf
or
mov
insl
addr16
jno
sbb
dec
es
lret
addr16
pusha
pusha
jo
stos
daa
out
outsb
int3
dec
fisubs
sub
jl
sub
jns
fwait
scas
loope
fsts
cmp
or
lods
pusha
insb
jne
movsb
mov
rcr
pushf
cmp
push
push
aad
in
add
pop
sti
pusha
into
fisubs
out
loope
dec
mov
fisubrs
cwtl
add
cli
ret
push
subb
std
mov
pop
data16
pusha
mov
loopne
pushf
dec
loop
pop
icebp
fld
cmp
push
cmp
movb
pushf
mov
adc
pop
add
out
push
aad
cmc
outsb
leave
jmp
cli
xlat
leave
pop
pop
fwait
scas
xchg
sub
test
mov
mov
xchg
loopne
xor
mov
stc
xor
xchg
cmp
or
or
fcoms
aas
sub
ret
sbb
jbe
testb
rcrb
pop
add
ja
jl
pop
in
icebp
dec
xchg
push
push
lea
mov
cmp
adc
imul
lret
icebp
fwait
inc
sbb
xor
sbb
push
lea
lahf
rol
daa
cmp
pop
xchg
jle
xchg
mov
mov
stos
inc
jno
push
jl
inc
scas
rorl
inc
fildl
inc
mov
rcrl
nop
enter
rcll
out
pop
mov
lock
push
xchg
into
lods
push
leave
mov
imul
mov
and
imul
xlat
sub
cmp
cmp
shlb
xchg
push
lock
in
jae
lret
xor
or
loopne
cmp
jmp
lret
or
fistl
cmp
cld
xchg
mov
fisttps
push
call
sbb
pop
jmp
cmc
adc
repz
jmp
fiadds
lcall
cs
jo
sbb
rorl
std
push
mov
movsb
mov
jmp
jns
xor
cmp
stos
sub
and
mov
pop
arpl
cwtl
pop
rol
mov
enter
mov
pop
sbb
dec
sub
cltd
cmc
fstps
lds
xchg
call
addr16
inc
xor
cmp
sbb
cmp
pop
iret
mov
in
iret
or
popa
subb
inc
cmp
sub
mov
inc
leave
jle
out
xchg
stos
mov
movntq
fmul
fadds
test
add
inc
test
shll
or
xor
pop
xorb
sub
cmp
sbb
ds
mov
ror
xor
cmc
mov
push
insb
call
or
jge
inc
dec
lret
rolb
stos
inc
mov
addl
sub
sbb
adc
loope
add
push
pushf
xchg
push
dec
scas
add
dec
dec
jmp
js
popf
lds
mov
dec
pavgw
loope
dec
and
add
incl
push
into
or
or
jbe
out
mov
mov
test
test
adc
jns
mov
and
cltd
sub
imul
and
xor
addr16
stos
push
inc
xchg
shll
or
pop
sbb
sub
in
fisttpl
movsl
cmp
imul
fisubl
push
ja
mov
sub
stos
xor
adc
imul
xchg
add
jle
das
push
xor
jb
jp
in
adc
sub
push
mov
mov
nop
addl
rorl
inc
jne
jmp
jg
jp
add
inc
gs
mov
out
stc
rorl
jl
js
arpl
push
sbb
orb
xor
enter
cmpsl
dec
pop
xchg
sahf
dec
insb
jge
push
xchg
jg
rol
pop
sbb
push
repz
adc
xlat
jg
in
ror
mov
dec
out
or
mov
pop
popf
in
xchg
sub
lcall
push
xor
loopne
inc
in
rcrb
cmpsl
mov
mov
leave
pop
push
dec
or
add
rcll
mov
in
repz
mov
pop
rolb
ss
lcall
aad
test
push
sub
xchg
dec
and
les
and
fwait
out
outsl
push
lock
aas
je
jo
inc
daa
decw
xchg
fs
add
xor
jne
fidivrs
je
and
add
and
fistpll
cmp
push
nop
push
out
sbb
xchg
ss
inc
dec
add
ja
pop
or
cmp
arpl
iret
mov
rcrl
in
rclb
or
mov
push
loopne
sbb
lret
xchg
mov
jns
xchg
and
enter
mov
dec
xor
int3
mov
aaa
pop
and
lcall
jb
insb
stos
pop
cwtl
jb
and
mov
pop
leave
jae
sbb
push
lret
dec
stos
pop
and
xchg
flds
add
pop
mov
push
pusha
pop
ljmp
and
rcll
mov
inc
inc
adc
push
pop
leave
mov
adc
mov
lret
adc
mov
lret
imul
das
mov
dec
fnstenv
pop
test
or
sub
das
pusha
icebp
ror
sub
fbstp
ret
jae
rorb
mov
jl
in
aas
lds
loope
or
loope
xor
xor
cmpsl
jp
pushf
insb
testb
rcrl
sbb
adc
or
mov
mov
mov
pop
lock
xorl
mov
loope
and
adc
add
scas
push
adc
xor
cmpl
popa
addr16
xchg
dec
pop
xor
push
fisttps
mov
test
sbb
pusha
pop
adc
psubq
fldl
js
mov
jmp
cmp
test
xchg
jne
sbb
sub
test
jmp
ljmp
sbb
in
pop
insb
push
lcall
dec
shll
sahf
or
jecxz
push
xchg
repz
and
or
and
sbb
mov
fimuls
push
pop
cmpsb
xor
add
iret
fmulp
out
add
jno
sbb
mov
add
and
dec
dec
cmp
movsl
jl
adcl
inc
inc
imul
ret
mov
pop
arpl
lcall
ss
mov
fst
shr
outsl
sub
loop
mov
test
xchg
cltd
leave
stos
push
nop
adc
fiaddl
cmpsl
or
pop
mov
add
mov
out
pop
test
popf
leave
mov
lcall
sub
inc
out
or
dec
mov
cwtl
subb
in
add
and
xchg
pop
hlt
les
cmp
jle
mov
and
fadds
test
sub
mov
out
jge
dec
sub
lds
add
cmp
out
aas
mov
incl
ja
xchg
das
aas
mov
mov
out
push
imul
insb
cmc
loope
sub
sub
cmpsl
pop
cmp
stos
xchg
clc
pop
sbb
movsl
lods
movsb
or
xchg
bound
sbb
cmp
jmp
mov
mov
fnop
in
movsl
les
imulb
dec
add
cmp
movsl
push
daa
cs
fsubrl
rcrl
cltd
lahf
pusha
mov
jo
mov
and
fwait
mov
add
cmpsb
xor
push
cli
ss
ljmp
nop
mov
loop
jmp
sub
push
inc
data16
into
cmc
mov
ja
mov
jo
mov
lods
out
fldcw
movsb
lods
jecxz
xor
push
repz
test
pop
xor
and
xlat
xadd
fbstp
cmp
ficoms
in
dec
jb
aas
filds
das
xor
int
decl
lods
push
dec
adc
pop
loope
test
arpl
jb
enter
lock
mov
shll
pop
mov
rorl
clc
jl
scas
xor
in
mov
sbb
xor
data16
vmulss
adc
jno
ja
shlb
daa
and
shlb
out
pushf
fistps
lret
int
dec
and
rolb
xor
or
daa
cld
in
outsl
adc
xor
incl
mov
out
xor
lret
xor
pushf
mov
fbstp
or
adc
add
popf
pop
test
je
je
pop
push
jae
push
jae
adc
push
rorb
subps
pop
fwait
adc
cmp
dec
jle
dec
enter
pop
test
insl
sbb
mov
es
sbb
iret
dec
out
sbb
movsb
out
xlat
lret
aas
in
inc
je
je
mov
inc
ljmp
mov
jae
push
push
adc
leave
pop
adcl
movsb
arpl
xor
and
aam
jno
inc
cmpsl
or
inc
and
push
jle
out
ss
push
icebp
test
and
push
loope
ss
test
mov
sarb
cs
xchg
push
icebp
sbb
outsb
ret
adc
cwtl
jae
cltd
call
mov
inc
sbb
adc
pop
cmpb
dec
cmp
je
xchg
xchg
adc
cmp
jo
imull
arpl
inc
test
dec
inc
scas
mov
jecxz
sub
clc
ds
ljmp
fwait
je
mov
inc
lods
lahf
jno
loope
xchg
aam
ja
adc
outsb
add
inc
sbb
daa
or
test
sti
popa
leave
insl
pop
and
adc
hlt
or
inc
xchg
or
out
inc
jae,pn
or
jp
cmpsl
call
into
bound
lret
jns
push
popa
xchg
dec
stos
insl
jl
push
pop
jns
add
sbb
dec
shrb
add
aas
inc
sub
push
adc
jg
aam
repnz
bnd
popl
fisttps
pop
into
pop
das
loop
mov
mov
jg
js
inc
or
aas
and
mov
xchg
cli
adc
xchg
push
out
mov
insb
sbb
andb
mov
mov
fidivl
pusha
movsl
sub
ror
cmp
cld
pop
and
mov
mov
popa
dec
nop
dec
mov
idivb
and
fisttpll
cli
sbb
leave
stc
ljmp
xor
and
push
mov
sbb
pop
adc
aam
nop
mov
bound
mov
or
pop
xor
adc
nop
adc
sbb
loop
xor
jae
xor
daa
push
sbb
xor
fstps
inc
mov
popf
daa
pusha
push
mov
push
scas
pop
or
adc
lcall
in
cmp
test
int3
in
inc
pop
xor
or
xlat
fidivrl
cwtl
in
imul
insl
adc
lret
test
xchg
dec
dec
roll
int3
std
ret
xchg
xchg
mov
mov
mov
aam
and
add
push
fs
mov
and
cltd
push
push
inc
cltd
xor
mov
sub
js
mov
aaa
adc
push
frstor
jp
cmp
iret
xchg
mov
pushf
add
es
lea
push
aas
mov
or
dec
out
rolb
mov
mov
bound
sbb
lcall
mov
jp
fwait
mov
stc
pushf
sbb
lea
push
pop
or
lds
mov
inc
scas
mov
je
pusha
pop
in
jmp
ret
arpl
rol
inc
adc
fildll
rolb
das
insb
sbb
adc
push
lods
jge
ja
dec
and
and
pushf
sbb
cs
add
outsb
sub
mov
inc
mov
lret
inc
mov
or
loopne
push
inc
sti
jmp
addr16
dec
cmpsl
mov
ret
jmp
xchg
lds
jmp
inc
mov
scas
fistps
insl
push
dec
setle
pop
js
aaa
stos
xchg
in
imul
fisubrl
push
cltd
lea
or
insl
adc
je
or
adc
repnz
cmp
cmpl
divl
jle
loop
jns
mov
mov
sub
add
out
rorb
dec
fcomps
add
lret
shlb
inc
push
xor
in
sbb
sub
mov
xchg
mov
cld
scas
addr16
arpl
and
test
cmpl
scas
imul
jne
popf
int3
adc
lret
sarl
adc
arpl
jecxz
and
or
icebp
jp
jg
jb
std
jnp
pop
xor
out
sub
mov
cmpsb
fcmove
test
cmp
jo
daa
sarb
addl
rol
rcr
mov
or
addl
pop
or
sti
outsl
mov
cmp
nop
lcall
cmc
cmp
repz
das
lret
push
push
add
mov
insb
dec
dec
cmpb
mov
lds
ret
cmc
mov
inc
xchg
mov
mov
loop
pop
movsb
or
pop
pop
and
imul
pop
adc
imul
imul
dec
adc
xor
cmpsl
testb
mov
xchg
ret
and
enter
and
adc
hlt
ds
inc
lods
jl
mov
ljmp
jo
mov
mov
mov
xchg
movsb
push
xchg
test
jne
adc
inc
jle
pusha
dec
dec
or
jbe
leave
sahf
xchg
inc
es
ljmp
pop
lahf
and
data16
push
loop
inc
or
add
and
mov
mov
adc
mov
jbe
push
das
adc
lods
lods
dec
xor
in
in
mov
mov
std
adc
inc
rcll
jle
lahf
or
xchg
fdivl
mov
test
dec
sbb
test
push
pop
pop
jl
jnp
xchg
push
ljmp
dec
or
ljmp
mov
pop
sbb
es
data16
scas
jae
sub
mov
and
fadd
lret
mov
mov
mov
add
inc
xchg
gs
mov
outsb
push
dec
dec
sub
popl
cmpl
add
pushf
sbb
cmp
mov
mov
ljmp
xchg
sbb
daa
push
iret
mov
arpl
cmpsb
lret
push
jl
sub
add
shl
mov
test
insb
das
xchg
data16
adc
lds
sbb
imul
adc
push
mov
daa
sahf
daa
rcl
lcall
in
insl
sar
sahf
add
cmp
fldl
pop
dec
adc
and
pop
cmpb
outsb
sahf
cltd
ds
fsubrl
inc
mov
insb
ret
inc
mov
stos
mov
push
outsb
rcrl
leave
xchg
lods
int3
pop
in
pop
and
int3
pop
iret
in
mov
push
inc
and
jecxz
xchg
enter
or
fildll
add
sub
pusha
and
sbb
mov
cmpsb
xor
adc
push
test
aaa
sbb
cld
insb
or
sahf
js
das
dec
ja
shlb
cli
dec
repz
jb
out
jp
push
inc
decb
xor
jl
pop
ds
fs
add
aaa
inc
and
jle
push
in
insl
scas
mov
push
ret
push
orl
data16
jle
or
in
shlb
adc
aam
les
or
mov
pop
iret
mov
lock
jae
mov
jns
ret
ja
pop
push
cs
sti
pop
imul
icebp
push
sub
cmpsl
cmp
dec
dec
iret
cmc
iret
add
add
pop
jecxz
sub
test
mov
or
lods
cmp
add
sub
mov
xchg
jmp
cltd
fcoml
dec
ds
jae
es
xchg
arpl
stos
roll
leave
lret
pop
mov
ljmp
adc
rcrl
or
lods
xchg
push
xchg
dec
xor
mov
les
add
adc
or
clc
sbb
mov
push
dec
loop
bound
add
mov
stos
and
icebp
xor
xor
dec
dec
push
lods
mov
in
lock
outsl
fiaddl
sbb
jns
mov
lcall
divb
push
mov
sbb
popa
es
pop
sub
int
aaa
into
jmp
xchg
jno
mov
test
stc
mov
xor
jae
push
mov
lods
aam
jge
mov
aam
and
out
mov
rcr
lcall
imul
sub
lods
mov
mov
xchg
ret
jp
jo
out
scas
dec
cwtl
adc
mov
jbe
aad
loopne
insl
lock
jb
dec
repz
sub
callw
lods
add
pushf
enter
insb
push
xchg
test
add
cmc
movsb
mov
das
mov
push
jne
cmpl
inc
dec
pop
jno
add
out
jo
std
mov
ficomps
mov
ficoml
sets
daa
xchg
mov
jmp
sbb
imul
adc
cli
add
stos
movb
cmc
mov
xchg
jne
test
mov
pop
cmp
std
mov
xchg
ljmp
ret
out
xor
push
lcall
enter
mov
jecxz
adcb
mov
cmp
shl
dec
adc
sbb
push
imul
push
mov
jns
test
xor
inc
test
xchg
xchg
repz
repz
shld
mov
mov
add
aad
inc
adc
xor
jle
fisttpl
push
scas
xchg
dec
cmc
or
xchg
jle
mov
mov
pushf
fisttpll
faddp
push
jno
jge
ja
mov
jns
cmp
cmp
fmull
mov
pop
lret
inc
xor
inc
adc
mov
popa
out
xchg
mov
push
push
fs
pop
out
jl
insl
mov
and
push
aaa
pop
add
sbb
sub
mov
lcall
arpl
popf
je
addw
or
jne
popa
mov
loope
clc
inc
pop
inc
mov
pop
sti
sub
add
add
push
loope
call
adc
mov
add
std
ret
jle
inc
pop
lods
or
sbb
cmpsb
imul
fwait
push
movsl
xchg
push
sub
xor
mul
and
mov
and
sub
adc
hlt
test
pushf
fisubs
mov
mov
loope
je
loopne
pusha
int3
push
fcomi
mov
push
pop
dec
push
push
push
shrl
aaa
cmp
sti
stos
fcmovnbe
mov
mov
xchg
ja
test
xor
ret
clc
dec
jb
or
jno
jl
push
lcall
dec
push
notl
orl
scas
dec
insl
pop
adc
lods
mov
dec
jle
and
jge
inc
pop
sti
xchg
mov
mov
add
mov
movsb
sbb
out
xor
inc
push
pop
sbb
adc
jmp
aam
fdivr
sbb
repz
jne
shl
fistps
push
mov
or
mov
repnz
imul
cmc
testl
sbb
sub
stos
popl
mov
test
mov
lret
jnp
in
and
cmpb
push
nop
int
pop
inc
loop
jmp
jne
rclb
xchg
test
xchg
pop
dec
jno
into
mov
repz
jns
xchg
pcmpeqd
stc
loopne
shrb
push
adc
test
int
faddp
mov
lahf
ds
pop
xor
in
inc
loop
mov
idivl
mov
mov
mov
push
out
add
sbb
or
inc
xchg
nop
out
ljmp
pop
jp
mov
imul
pop
into
inc
addr16
mov
rcll
loopne
test
imul
push
bound
jl
das
lods
pop
addl
xchg
or
cmp
xchg
sbb
push
stos
pop
add
sbb
adc
into
jecxz
dec
jne,pn
and
leave
inc
jno
mulb
pop
or
fidivl
out
call
js
jg
jle
loop
dec
lock
jne
xchg
jno
rcll
add
lea
ffree
ss
sbb
cmp
jno
or
xchg
sub
lods
pop
in
xchg
fisttpl
and
insb
daa
xchg
xchg
or
cltd
pop
ljmp
sbb
in
cli
dec
jp
in
test
push
and
adc
or
inc
cmp
sub
imull
add
or
in
mov
adc
xchg
lea
xor
push
adc
insl
jge
sbb
les
sbb
add
lods
mov
add
dec
hlt
lds
paddd
sbb
jge
movl
lea
mov
je
cmp
mov
adc
les
outsb
push
mov
xor
shlb
adc
out
imul
lahf
das
adc
mov
jle
jo
or
in
mov
shll
push
pop
push
loop
mov
mov
add
sub
fwait
repnz
lods
arpl
outsl
mov
cmp
cmp
fildll
sahf
movb
cli
xchg
test
xor
sbb
mov
jmp
xlat
mov
jg
jne
ja
repnz
xor
inc
inc
das
in
and
cmp
fistpl
jo
cmp
push
inc
scas
ret
jmp
mov
cli
lds
pop
pusha
decb
fsts
out
mov
push
push
aas
dec
movsb
clc
fsubr
adc
mov
jp
lods
or
orl
jecxz
lret
mov
lods
testb
pop
lret
scas
repnz
insb
mov
stos
rcl
ljmp
inc
enter
clc
imul
pop
and
push
mov
adc
or
jbe
test
inc
out
inc
sahf
gs
cmc
lods
rorb
shl
out
xchg
xchg
xlat
pushl
sub
dec
pop
mov
shl
mov
cmpsl
gs
dec
push
xlat
mov
adc
xor
sbb
in
mov
or
inc
cmc
mov
popf
inc
outsl
and
mov
cmc
jbe
inc
mov
add
ss
sar
dec
inc
js
repnz
int3
test
cmp
pusha
xchg
test
mov
mov
mov
xchg
sbb
loopne
jge
inc
scas
out
xchg
fisubrl
xchg
jnp
dec
rcrl
mov
fwait
add
pop
push
insb
stos
test
add
adc
inc
dec
xchg
roll
lahf
jle
test
in
subb
xchg
int3
hlt
mov
inc
lock
push
sub
mov
add
mov
mov
add
dec
cmp
push
xchg
sub
push
or
leave
mov
lret
sub
sti
adc
shl
daa
shlb
es
es
mov
xor
sub
rcl
mov
mov
inc
testl
jp
fs
shrb
or
cmp
lea
mov
sub
cmp
mov
dec
pop
xchg
dec
scas
push
adc
jge
int
aas
mov
in
sbb
lods
xor
pop
jb
xor
movsl
je
mov
lock
hlt
sahf
xchg
add
pushf
imul
push
mov
sbb
sbb
sub
add
inc
fnsave
arpl
lcall
or
and
dec
sbb
sbb
ja
jns
mov
das
mov
mov
or
daa
imul
pop
mov
mov
cmc
sahf
inc
and
jno
in
mov
or
jmp
fldl
je
jnp
stos
arpl
inc
push
jmp
movsb
stos
fdivs
psubusw
sbb
jb
in
mov
fbld
loop
iret
mov
jp
aam
and
outsb
dec
fisttpl
cmpsl
pop
add
int3
jge
cmp
popf
shl
adc
push
fnstcw
dec
inc
pop
adc
lea
fidivrl
push
mov
stos
aam
sbb
lods
pop
mov
and
icebp
mov
leave
popa
ficoms
sbb
loop
loope
xor
into
orl
dec
repnz
pop
xchg
leave
loope
testl
dec
test
sub
jno
jmp
mov
cmp
cmp
jge
cmp
loop
lret
shlb
mov
sub
cmp
cmp
xor
jmp
insl
out
jbe
in
inc
jg
jae
in
cld
repz
test
test
lods
in
scas
icebp
adc
and
or
outsb
lret
mov
inc
pusha
xchg
dec
cmp
outsb
in
lret
jp
inc
mov
adc
push
cmc
adc
mov
xor
aam
imul
add
imul
test
mull
cmp
mov
cmc
js
repz
and
notl
test
lret
out
fstpt
pushf
out
xchg
xor
repnz
push
fcomps
add
push
fstl
addr16
sbb
fnstcw
push
clc
test
jp
xchg
xor
adc
flds
jns
add
mov
fldt
xchg
adc
leave
fisttpll
lods
mov
into
inc
push
lods
jb
shll
dec
sbb
ret
cmpsl
mov
or
xchg
add
bound
sbb
bound
negl
xor
and
out
jl
fdivl
sarb
xor
fdivs
lahf
repnz
aad
push
adc
xor
int
push
test
enter
fidivl
xor
xchg
jp
dec
push
clc
sbb
push
xor
xchg
or
or
std
divb
sbb
data16
xchg
cs
ficoml
dec
mov
cmp
loop
inc
jl
inc
scas
leave
scas
pop
and
and
inc
fdivrl
dec
mov
mov
xor
loopne
shl
push
cmpb
sbb
mov
shlb
jns
xorb
cmp
mov
xchg
xlat
adc
sub
xchg
sub
shll
fdiv
cld
hlt
and
or
icebp
dec
mov
repz
dec
aas
mov
and
inc
dec
shr
popa
cmpsl
data16
inc
out
jge
add
inc
in
and
dec
stos
and
ret
or
pop
cmp
push
xor
jno
xchg
scas
fucomp
imul
xor
movsl
dec
lret
aam
jg
jnp
push
imul
dec
pushl
sahf
push
pop
enter
pop
stos
and
jle
in
mul
add
mov
pop
das
rolb
or
mov
add
inc
daa
lcall
push
in
or
push
pop
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
pop
or
or
jp
orb
xor
adc
xchg
fildl
sbb
sar
je
and
jnp
out
mov
pushl
add
xor
dec
and
jns
push
xor
pop
push
int
popf
rclb
dec
adc
icebp
repnz
push
inc
mov
sbb
dec
or
inc
jp
mov
clc
mov
incb
pusha
xchg
sub
jnp
int
cli
sub
out
pop
lcall
adc
push
push
xor
out
xchg
inc
fdivs
enter
adc
cmpsl
push
or
icebp
adc
insl
inc
rorb
jle
int3
xchg
mov
jne
rcll
or
pop
mov
scas
insb
or
add
call
in
mov
shrb
lahf
mov
pop
and
and
in
lret
mov
push
daa
jmp
inc
fsubrs
call
lret
dec
call
cs
js
cmp
fwait
and
insl
cmc
sub
push
insb
sub
adc
cmp
xchg
push
sahf
ds
fcmovne
jge
cltd
mov
lcall
xchg
mov
add
adc
cwtl
mov
push
mov
std
idivl
fimuls
push
mov
lds
jbe
out
jl
jbe
xor
mov
inc
push
out
or
mov
xlat
clc
bound
xchg
mov
xchg
es
cmp
addl
aaa
adc
insl
leave
in
or
pusha
inc
push
in
dec
xor
mov
adc
mov
jno
pop
mov
outsl
neg
lret
fadds
rclb
lods
dec
xchg
outsl
cli
xchg
pop
push
fmuls
cmp
mov
xor
imulb
jbe
dec
inc
mov
xor
mov
jbe
mov
mov
mov
int
lret
sbb
fsubl
rcrl
xchg
or
out
sbbb
and
xor
xchg
pop
scas
sub
aaa
rorl
push
xor
jnp
mov
sbbb
cmc
add
and
push
push
sbb
std
mov
xor
pop
or
arpl
mov
into
in
imul
pop
fdivl
xor
jnp
jp
mov
lahf
and
push
dec
push
aas
movhps
inc
sub
add
pop
test
xchg
aas
fnstenv
insb
inc
push
icebp
adc
frstor
sub
das
adc
cmpsb
lea
push
das
push
inc
xor
sub
mov
loope
outsl
mov
js
sub
mul
lret
add
xchg
test
mov
add
or
adc
sub
in
inc
out
cld
jnp
sbb
jle
push
jecxz
jb
cli
test
sbb
sub
xor
mov
clc
sahf
ficompl
xor
xchg
movsb
mov
and
shlb
in
jns
adc
jne
in
mov
repnz
out
and
mov
out
inc
aas
int3
inc
cwtl
mov
shll
jns
jnp
out
mov
addr16
fcmovnbe
add
out
xchg
cmc
pop
test
aaa
mov
out
in
push
add
cli
pop
fs
or
cmp
mov
mov
jbe
cmp
adc
add
xor
dec
sub
push
pop
pop
fwait
sbb
pop
inc
fwait
sub
int3
mov
jae
jg
mov
sub
cmp
inc
pop
adcl
fwait
and
test
fst
cwtl
roll
dec
leave
pop
bound
cmpsl
sahf
cld
dec
mov
adc
inc
cmpsl
lahf
push
jbe
mov
or
or
inc
mov
cmc
in
mov
push
lret
test
sbb
repz
pushf
aam
int
jae
push
lahf
sbb
sub
pushf
xor
sti
lods
out
inc
addr16
sbb
stos
lods
nop
pushf
mov
xchg
inc
push
adc
adcb
inc
pusha
jbe
cltd
aam
mov
test
inc
mov
inc
mov
leave
stos
or
jnp
or
sahf
cmpsl
lret
inc
and
dec
push
int
mov
or
mov
shlb
cld
dec
insb
push
pop
out
ficomps
sti
push
lcall
jno
mov
sub
mov
insl
jno
push
pop
mov
cltd
xchg
ljmp
rcl
xchg
adc
sub
mov
dec
cmp
imul
or
rcr
in
int3
aad
xchg
jl
sahf
pop
push
mov
and
test
push
and
iret
jmp
fcomp
push
movsb
xor
add
mov
sbb
outsb
xor
push
push
inc
test
data16
inc
inc
push
jns
test
xor
popf
iret
mov
xchg
inc
enter
xchg
lds
rcr
fsubrl
sub
dec
mov
enter
adc
mov
cld
test
leave
xor
cmp
or
shrl
sub
fnstenv
xchg
sbb
mov
stc
fcoml
orb
lret
test
sub
add
rcl
push
hlt
leave
gs
push
ret
push
imul
out
addl
fimuls
mov
fwait
in
pop
das
xor
or
push
xlat
lahf
push
leave
adcl
jns
es
mov
inc
std
push
dec
pop
lock
ja
jno
ds
outsb
jbe
stc
out
pushf
adc
adc
loopne
adc
in
pop
mov
jle
xor
ds
mov
test
mov
lock
cld
stos
rclb
dec
mov
pop
and
sub
sub
aaa
ja
xlat
xor
stc
add
xor
int
scas
xchg
call
xchg
scas
xchg
dec
stos
pop
repz
pop
lods
or
push
cmpsb
or
jmp
cmp
sub
iret
cs
adc
ds
mov
neg
daa
into
and
ja
pop
push
aad
popf
sub
inc
or
lret
aad
jno
push
jecxz
push
xchg
mov
push
mov
add
pop
int3
in
rorl
mov
jl
fmull
call
jb
xor
inc
repnz
lods
movsl
sbb
daa
lds
daa
mov
pushl
mov
popf
sub
ret
inc
js
hlt
and
ret
out
jne
cmp
cmp
mov
out
sbb
push
mov
sti
testl
adc
pop
jno
pop
aad
cmc
movsb
xchg
xchg
andb
adc
aam
jae
test
xchg
push
inc
sub
and
daa
in
aaa
mov
dec
cmp
outsb
call
jns
adc
mov
pop
jne
dec
and
loopne
inc
in
mov
bound
sbb
orl
arpl
inc
cmp
xchg
xchg
push
add
push
fwait
loopne
enter
nop
xor
cmp
xchg
in
lcall
and
subb
jp
je,pn
adc
push
out
mov
sbb
mov
or
jge
xchg
ret
in
fadds
cmp
dec
push
sub
into
adc
xor
push
shl
lret
and
xchg
xlat
mov
ss
pop
pop
add
mov
pop
add
pusha
mov
mov
xchg
jmp
loope
add
mov
jp
xor
dec
adc
call
movsl
out
dec
dec
out
jl
mov
and
arpl
cli
pop
cmp
jo
and
cmpl
imul
mov
push
sub
mov
out
dec
fs
push
push
inc
jbe
xor
int
enter
arpl
sub
inc
out
or
dec
mov
aad
sub
cmp
rorb
das
in
push
mov
shll
jno
cs
pushf
jo
xor
mov
sbb
in
cmpsl
inc
test
fadd
popa
addr16
pop
sbb
add
aad
ds
xor
dec
cmp
cmp
sub
and
popf
xchg
aam
jl
mov
jnp
jg
or
mov
and
and
mov
xchg
std
fmull
jg
add
testb
sbb
mov
std
or
inc
xchg
aas
sbb
into
sti
arpl
sbb
xchg
and
add
sub
js
imul
in
adc
adc
jge
loope
cmpb
ljmp
scas
pop
cwtl
mov
out
jae
push
scas
imul
mov
fsubl
imul
mov
and
inc
jns
rorb
fs
pushl
lahf
out
jecxz
sti
test
cmp
in
outsb
aaa
and
cli
data16
xor
xor
pop
aam
cmp
hlt
mov
iret
pusha
and
scas
rcll
je
stc
mov
jno
dec
stos
jge
rol
xchg
mov
mov
insl
out
pusha
fcmovne
jl
dec
push
je
rcl
lods
sbb
mov
xor
fwait
sbb
jp
cmp
push
and
adc
loopne
mov
mov
rorl
aas
lds
sbb
cltd
mov
imul
sub
add
dec
push
and
inc
mov
sbb
mov
jmp
sbb
jmp
mov
dec
mov
push
pop
cmp
inc
adc
adcl
out
mulb
nop
xchg
cmp
pcmpeqd
xor
insb
mov
cmpsb
push
cld
nop
mov
mov
dec
fwait
imul
leave
mov
insb
std
jp
dec
push
loop
bnd
fwait
jns
cmp
int
int
int
mov
lds
mov
movsb
sub
cmp
adc
adc
pop
stc
arpl
movsl
lret
lods
inc
outsl
or
add
xchg
xchg
mov
sub
add
cs
pop
je
mov
push
test
push
cmp
iret
sbbb
mov
mov
sbb
fadd
xor
bound
dec
fwait
mov
push
adc
push
mov
cld
ds
push
mov
imul
mov
movsb
sub
insl
add
mov
rcrb
int
aad
jp
fs
jp
or
sti
test
mov
mov
aaa
ret
imul
mov
dec
loopne
lahf
jmp
push
and
repnz
frstor
xor
xor
imul
ljmp
test
mov
mov
xchg
test
scas
aad
or
dec
pop
cwtl
sbb
ljmp
xor
pop
sub
mov
in
test
mov
das
lea
dec
repz
ljmp
xchg
push
mov
adc
dec
jmp
pop
push
inc
push
in
mov
loope
jo
mov
push
addr16
inc
and
scas
fisttpl
xor
dec
add
hlt
cmp
mov
sub
insb
notl
push
pop
in
xorb
mov
cmc
imul
inc
cmc
pop
js,pn
mov
bound
cmc
leave
ret
test
xlat
nop
ljmp
mov
mov
dec
add
enter
cmp
jne
loope
fbld
psubd
sub
sahf
jne
xor
adc
xor
push
int
push
and
sbbb
je
rcrl
jmp
data16
in
mov
pushf
push
cmp
arpl
test
std
adc
xorl
push
ret
mov
int
outsl
call
mov
mov
nop
sub
ds
or
pop
mov
jge
xor
repz
rolb
into
cwtl
push
in
jns
jbe
es
mov
jmp
outsb
adc
pop
dec
mov
mov
jp
call
xor
jg
push
mov
dec
insb
imul
push
push
lahf
lock
lret
mov
xchg
or
fbstp
xchg
xchg
cs
mov
fcomp
lcall
sti
push
adc
stos
mov
dec
insb
jge
mov
push
das
insb
jns
sub
add
mov
fistpl
movsb
jo
inc
add
inc
movsb
jbe
ret
std
pop
in
jbe
xchg
add
fisubrs
inc
roll
mov
or
mov
divl
jno
outsb
push
lahf
clc
sbb
divb
ret
mov
push
repz
rolb
repnz
push
movsb
cmp
lcall
aaa
inc
sub
lods
push
mov
mov
jge
sub
push
mov
dec
aaa
das
adc
fwait
sbb
arpl
in
lahf
aam
mov
cmpb
sub
in
ljmp
cmp
pop
xor
add
jne
add
cmp
lock
gs
mov
out
mov
mov
xchg
pop
test
and
sahf
cmc
sub
push
lahf
imul
int
cltd
je
jae
dec
push
rol
bound
fadds
cmp
mov
jp
orb
mov
dec
dec
sbbb
xor
dec
popa
mov
cmp
xlat
mov
mov
mov
inc
add
push
ret
vmovapd
add
pop
iret
jecxz
push
pop
adc
je
cltd
adc
mov
xchg
nop
fwait
repnz
iret
rcr
mov
add
push
cmp
rorl
sahf
js
mov
xlat
aaa
notb
test
add
mov
hlt
push
mov
mov
ds
lea
xchg
cmpb
xchg
adcb
rcr
dec
cwtl
push
fs
mov
pop
or
add
clc
in
mov
adc
fsubl
pop
lret
imul
loopne
xor
mov
ret
stos
push
loop
xchg
and
pusha
lock
and
push
insl
into
jp
adc
aaa
lret
out
or
in
leave
test
mov
popf
std
sub
negb
repz
fisubl
lock
mov
call
loopne
insb
aas
ret
pusha
enter
push
psubsb
lock
rcll
roll
pop
aad
add
stc
cmp
mov
call
mov
lcall
mov
sub
dec
push
jg
sub
loop
jne
cli
xor
add
or
cmpsb
imul
fidivs
dec
insl
aad
popw
inc
and
cs
xchg
mov
pop
fdivrs
mov
call
pop
lcall
and
sarl
ljmp
xchg
xor
add
xor
or
es
sbb
std
mov
dec
add
imul
inc
or
es
inc
adc
xchg
loopne
in
sub
ret
sub
jb
mov
js
nop
faddp
xor
xchg
jns
repnz
pop
ret
push
push
test
mov
cmp
push
xchg
sarb
and
cmp
add
rolb
mov
adc
filds
test
popf
adc
xchg
xchg
jg
jmp
xchg
jno
das
rcrl
push
call
push
lret
cwtl
xor
out
adc
bound
cltd
addl
pushf
dec
inc
in
pop
or
divb
jle
push
push
je
cmp
cli
inc
jp
rorb
loopne
push
movsl
mov
lods
push
aad
push
or
xchg
fistl
daa
or
je
cmp
mov
add
shrb
lods
out
int3
adc
jae,pn
adc
out
scas
add
mov
fmul
das
sbb
or
mov
push
push
lret
jl
sarl
adc
sub
iret
adc
mov
sbb
fs
sub
xchg
ja
dec
mov
pop
inc
mov
lods
stos
dec
pop
test
sbb
das
mulb
or
jns
push
mov
fisubl
enter
ja
test
xor
add
sub
inc
jecxz
jp
filds
fwait
out
std
jmp
test
in
cli
sbb
inc
mov
sbb
jo
push
xor
cmp
fisttps
mov
flds
mov
repnz
inc
mov
jnp
lret
dec
lds
fucomip
add
shrl
cli
sbb
les
std
cmp
pushf
or
in
adc
pop
push
lret
lea
popa
aam
xchg
push
hlt
aas
fldt
xchg
insl
pusha
cmp
sbb
dec
or
js
cmp
cwtl
inc
arpl
mull
out
loop
and
dec
sti
lods
ds
pop
pop
and
imul
call
ss
cwtl
int
add
mov
jl
jne
int
popf
ja,pn
xchg
jge
sub
pop
arpl
mov
dec
movl
iret
std
pop
outsl
and
sahf
inc
mov
lods
fwait
cmp
out
ret
dec
mov
dec
pop
xchg
cld
jnp
mov
adc
inc
aas
mov
mov
sub
loop
movsl
push
xor
loop
ret
mov
push
test
mov
lock
addr16
lcall
les
inc
mov
pop
cmp
imul
call
and
in
cld
adc
cmp
inc
lret
imul
cmc
pop
aam
lods
cwtl
pop
add
shr
dec
mov
lahf
or
mulb
lds
jnp
loop
pop
into
xlat
mov
pop
aaa
leave
cmp
mov
jbe
gs
lods
hlt
fs
or
xor
mov
and
scas
inc
loopne
fsubs
add
loopne
int3
int3
inc
push
inc
test
xchg
aas
xchg
test
cmpsl
xchg
lret
mov
mov
rcrb
jg
adc
sub
das
fdivrs
fiadds
lret
mov
fimull
jae
test
into
rorl
xor
push
or
movsb
mov
dec
aas
lahf
mov
cmp
int
or
imul
dec
xor
fstps
sarl
std
add
movsl
lcall
mov
daa
lods
lret
addr16
mov
inc
in
pop
or
sbb
ljmp
das
cli
lea
xor
daa
mov
movsl
xchg
les
mov
fldt
cmp
lret
pop
fwait
sub
imul
popf
dec
fldt
daa
lods
popf
xor
in
cmp
dec
out
lret
or
pop
bnd
dec
jns
or
aad
mov
inc
and
mov
loope
test
dec
or
cmpsl
sbb
jae
jp
pop
pop
push
xchg
mov
out
pusha
ret
jp
sub
sub
ret
cmc
or
fsts
or
ret
push
in
enter
add
sub
or
xchg
lea
mov
stc
pop
lcall
dec
loop
push
popf
pop
mov
shrb
pop
xor
lcall
xor
mov
ljmp
ret
aaa
jo
std
sar
aad
or
adc
lea
frstor
sbb
inc
out
or
sub
aaa
jge
rcrl
dec
test
dec
jb
lahf
testl
mov
dec
sbb
shrl
jp
xchg
movsb
mov
scas
ss
pop
aad
push
mov
cs
out
loope
adc
sub
iret
inc
pop
sub
cmpsl
jo
mov
push
out
js
and
in
fldcw
jg
push
andnps
pop
cmp
add
ljmp
andl
enter
js
in
ss
rcll
xor
repz
or
push
enter
add
mov
iret
loopne
add
add
adc
mov
repnz
xchg
jecxz
sarl
xor
sbb
dec
das
mov
add
xlat
inc
lret
mov
lret
mov
repz
out
xchg
or
shr
int3
xlat
fmull
out
test
xchg
jle,pn
pushf
stos
jp
adc
dec
mov
ds
lds
push
loope
add
sbb
shl
jns
sbb
jne
mov
pop
adc
lock
push
sbb
jmp
pop
stc
pusha
inc
jge
dec
jo
movsb
xchg
mov
mov
push
pop
cmc
loop
ljmp
outsb
ja
fdivrs
cmp
or
cmp
imul
hlt
pusha
add
stos
dec
mov
mov
into
lret
testb
pop
out
inc
or
jl
add
sti
ret
fnsave
mov
adc
out
jno
add
inc
or
stos
loop
loope
fstps
inc
pop
jge
pop
inc
sub
adc
sub
js
jmp
lcall
mov
jbe
test
es
imul
sub
fwait
and
jb
je
lret
cwtl
shrl
insl
cmp
lods
mov
gs
cwtl
cmc
shlb
push
and
sub
add
push
dec
imul
mov
insb
cli
mov
jmp
or
dec
aas
dec
jg
stos
adc
sbb
arpl
ja
out
rclb
mov
sbb
lcall
mov
js
inc
or
movsl
add
adc
xlat
jns
fidivs
xchg
sbb
push
das
mov
daa
in
mov
jae
mov
fcoms
insb
xchg
cld
xor
popf
xor
add
adc
hlt
adc
inc
jl
test
mov
sub
jge
push
lret
mov
ret
inc
js
cld
loop
sub
add
out
lret
jb
repnz
outsb
sbb
aam
add
and
xchg
mov
jb
push
mov
pop
pop
inc
shrl
xchg
mov
popa
cmp
imul
xor
jg
inc
push
push
movsl
mov
fcoml
repnz
mov
cli
jle
adc
pop
pop
inc
cltd
shll
rol
mov
andl
cltd
test
add
inc
xor
cs
cs
sbb
dec
and
cmc
or
sub
cmp
xchg
dec
outsl
test
addr16
movsb
xlat
add
pop
xchg
hlt
cmp
mov
iret
or
enter
fldcw
inc
rcr
std
insl
ljmp
xchg
xchg
mov
or
icebp
dec
cld
mov
xchg
call
xor
flds
loop
add
sbb
push
xchg
mov
mov
sbb
les
or
push
add
je
mov
and
pop
add
add
and
loope
cmp
dec
les
pop
sbb
push
and
enter
xor
xchg
imul
add
push
clc
push
pushl
mov
cmpsl
xchg
cwtl
or
xchg
test
xchg
sbb
movl
movsb
outsl
jbe
dec
icebp
pop
fwait
mov
inc
inc
jne
xor
rcll
push
push
ljmp
mov
mov
jge
jg
adc
mov
es
je
jb
mov
stc
and
xor
cmp
lahf
imul
iret
mov
in
push
dec
jo
push
jbe
fwait
shlb
in
inc
ss
or
cmpsl
stos
xlat
inc
in
cmp
cmp
pop
or
add
or
xor
jns
xchg
mov
popa
xchg
sbb
sub
pop
sbb
mov
adc
addl
jns
dec
lret
pusha
cmp
pop
sbb
std
xchg
fbstp
fwait
ret
out
xchg
jb
call
fnstsw
shll
les
mov
jge
pop
mov
in
jb
jnp
cs
add
mov
jns
insl
stos
mov
into
pushf
fwait
add
dec
ds
daa
stos
ja
adc
ja
mov
mov
push
fiadds
loopne
mov
lods
adcb
out
push
cmpsb
adc
jb
mov
dec
pop
movsl
notb
add
stos
lock
jge
adc
mov
lods
filds
sbb
test
jp
popa
jg
pop
pop
imul
outsl
mov
inc
or
xlat
adc
dec
mov
or
sbb
adc
or
jnp
inc
and
outsl
mov
scas
fs
mov
stos
xchg
dec
stos
adc
mov
cs
sbb
sub
xchg
bound
push
pop
add
dec
ljmp
int
test
enter
sarb
pop
insb
xchg
lods
mov
jge
or
add
insb
mov
cmp
lret
loope
lock
inc
jmp
popf
jmp
jmp
dec
pop
push
popa
popa
cmp
push
fists
mov
aas
ret
jns
out
and
in
test
and
mov
enter
lahf
sub
cwtl
inc
dec
mov
shrl
repnz
cmp
adc
jmp
ljmp
jno
xorl
pop
inc
pop
cmp
adc
addr16
jne
out
lds
aaa
cmp
cli
push
in
das
cmpsb
popf
sub
insl
pop
pusha
sub
insb
pop
rcll
rcrb
rcr
pop
push
jecxz
add
scas
xchg
inc
or
add
mov
mov
stc
aaa
jl
add
jnp
pop
adc
fisttpll
cmp
or
adc
adc
in
std
addr16
mov
sbbb
mov
jge
es
inc
test
xchg
pop
xchg
push
and
mov
xor
adc
jge
mov
mov
mov
sbb
mov
imul
jge
mov
mov
addr16
orl
sbb
xor
and
aam
dec
gs
xor
jns
stos
scas
adc
inc
int3
sbb
popf
xchg
cmc
scas
movsl
push
fidivrl
lret
dec
hlt
popf
rcrb
shlb
out
data16
scas
shrl
lods
push
xor
jb
jns
imul
sahf
cmp
scas
loop
jmp
sub
dec
push
sub
xor
push
out
jbe
mov
xchg
pop
mov
lret
popa
push
int3
lock
in
or
imul
mov
inc
fisubrl
orb
mov
jecxz
xor
insb
mov
pushf
cwtl
imul
in
dec
mov
mov
rcrl
lahf
xor
test
or
cmp
add
add
mov
add
sbb
xchg
cmc
add
pusha
cmp
or
call
mov
push
popa
mov
xor
js
adc
push
dec
xchg
dec
inc
pop
push
jns
xchg
fdivrl
cmpsb
mov
inc
subl
cmp
add
pop
icebp
jo
aas
out
addb
jecxz
dec
ret
ds
sub
mov
inc
data16
mov
call
dec
cwtl
stc
cmp
add
cltd
sbb
cmpxchg
mov
pop
cmp
aam
sbbb
arpl
addl
jnp
adc
in
pusha
mov
mov
mov
xchg
jns
leave
inc
fidivrs
cmpsl
fistpl
pop
inc
into
jecxz
fisubrl
inc
lret
sub
pop
dec
fsts
enter
pop
mov
jo
int
sub
dec
and
not
movsl
pop
sbb
push
push
int3
push
movsb
or
in
inc
icebp
fs
adc
out
sbb
xchg
iret
jnp
add
es
pop
test
orl
fstps
outsb
push
sub
mov
xorb
jg
sbb
aas
clc
xor
xorb
dec
mov
xchg
lret
out
push
ret
mov
xor
ds
ss
lods
mov
xchg
loopne
mov
lods
or
lea
scas
mov
hlt
mov
out
test
and
xchg
or
shlb
fisubl
enter
mov
hlt
pop
int
xor
push
cld
pop
out
push
fldenv
jecxz
cs
fldl
jns
or
cld
insl
sub
pop
imul
sbb
xchg
adc
out
sub
pop
or
aaa
cmp
jmp
or
cwtl
pop
popf
xor
test
push
and
mov
jp
mov
add
leave
pop
inc
hlt
dec
mov
or
in
pop
xor
mov
cmc
mov
or
and
sub
bound
je
cmc
sarl
cmp
sub
aas
clc
inc
mov
sarl
jae
pop
mov
in
pop
bound
arpl
mov
mov
int3
ror
xor
mov
sti
cwtl
stc
mov
mov
mov
dec
in
mov
add
add
or
push
mov
mov
lds
out
adc
or
or
sbb
daa
push
je
popf
sub
xor
cmp
insl
cmp
test
adc
jmp
xor
nop
scas
mov
push
dec
adc
push
repnz
popa
dec
adc
lods
mov
das
xchg
lcall
dec
push
mov
aad
ljmp
mov
lahf
lods
fistl
int
dec
inc
aam
negb
xor
push
fisubs
lods
cmp
mov
loop
and
xor
push
xchg
lcall
iret
cld
lods
pop
inc
push
sbb
xchg
add
fs
dec
mov
int3
cmc
ret
mov
or
cmc
mov
sub
mov
mov
and
inc
inc
int3
mov
insl
pop
rcll
adc
xor
sub
xchg
jnp
in
push
dec
xchg
mov
cmpb
xchg
and
mov
push
pusha
adc
imul
js
movsb
lods
adc
into
outsl
xchg
cmpsb
adc
add
pushl
cmp
or
pop
sbb
inc
xchg
xchg
inc
fiadds
das
js
inc
jmp
lods
fsubrs
mov
push
mov
mov
jo
adcb
sahf
jo
mov
jnp
push
ret
or
push
cmc
sub
in
mov
fidivrs
inc
pop
mov
fisubl
shlb
fdivl
add
cs
xchg
lahf
sub
mov
dec
fldcw
xorb
loop
mov
mov
loopne
mov
jecxz
je
jnp
mov
mov
mov
arpl
xor
cli
inc
mov
stc
or
or
data16
daa
inc
pop
jb
push
sbb
dec
cmp
fwait
fisubrs
in
lock
int3
dec
push
jle
adc
cltd
dec
push
ss
push
xor
pushf
xor
mov
mov
mov
aam
cltd
imulb
ljmp
xor
in
frstor
stos
int
dec
out
mov
jmp
mov
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
xor
push
andl
jg
push
into
dec
roll
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
