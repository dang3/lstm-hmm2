push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
xor
insl
cmpb
jle
add
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
jmp
xlat
idivb
cli
loope
sbb
std
in
fld
sti
in
repz
and
out
xor
ljmp
fcmove
sbb
aam
loop
out
fsub
jecxz
sti
lret
adc
xor
xlat
int3
fdivrp
aad
stc
std
out
fdivp
jmp
xchg
jmp
std
fucom
iret
out
fsubp
enter
int
xor
ljmp
test
cli
int3
cmp
enter
or
lock
out
icebp
int
shr
iret
sub
cmp
lret
lret
icebp
test
leave
divl
fcom
std
out
sti
cli
sar
xchg
call
out
cmc
in
fcomi
std
shr
aas
cld
incl
hlt
aam
mov
in
jecxz
mov
out
lret
ss
into
xor
aaa
leave
ljmp
cmp
fstp
lret
enter
fmuls
in
aas
xlat
ror
in
in
fnstenv
repnz
stc
cmp
in
sti
cli
sti
int3
addl
out
aam
cli
out
aaa
fcmovu
cmp
loop
cmc
aas
add
fsub
in
fadd
lock
call
ss
loopne
ror
fdivp
rolb
in
fmulp
ljmp
lret
sti
sti
cld
sar
out
ds
flds
loop
jecxz
cmp
xor
int3
imul
out
loopne
std
into
xlat
int
std
std
cld
roll
mov
leave
adc
neg
jmp
ss
jmp
clc
stc
into
cmp
iret
cmp
call
popl
out
hlt
sub
iret
lock
leave
shr
iret
jmp
aam
test
fdivr
inc
mov
fsts
shlb
mov
cmp
ds
test
ds
loope
jmp
call
out
call
loope
lock
xor
fdivrl
lock
test
loop
std
in
icebp
in
icebp
jecxz
lock
in
loope
les
idivl
sarl
repz
in
mul
xor
xor
in
std
in
ret
shl
xchg
xchg
xor
aad
cli
test
xor
aad
stc
out
icebp
fisttpl
test
iret
xchg
jecxz
lret
cld
in
jmp
cli
hlt
ret
testb
ljmp
hlt
in
int
lret
ror
fstp
faddl
fdivr
in
mov
mov
mov
out
aam
out
rcr
aam
not
les
sar
fsubrp
mov
fsubp
xchg
das
fnstenv
in
cli
cmp
cmc
into
shl
in
xchg
rcl
test
or
xchg
fmul
not
lock
ljmp
xor
std
fdivr
mov
test
aad
in
enter
xchg
xchg
lret
loopne
stc
lock
sarb
cmp
clc
xlat
rcr
mov
fsubr
fsubr
jecxz
int
in
out
into
in
xor
cmp
cmc
loopne
cli
repz
adc
sbb
loop
ret
orb
stc
shr
leave
xor
cmp
ret
cmp
vpmulhuw
fdivr
divl
xor
xor
cmp
clc
lock
aam
out
cmp
fcmovnu
fldl
lret
sub
shll
stc
xor
out
fsubr
fdivrs
out
int
test
aad
clc
in
fstp
mov
in
icebp
in
jmp
sub
fcmovnu
xor
xor
fucomip
xchg
clc
cmpl
in
ljmp
shl
cmc
cmp
hlt
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
add
movsl
add
fxch
into
sarb
test
out
in
rcr
and
xchg
lock
ret
aaa
in
into
std
leave
shl
fld
stc
out
in
aam
les
loopne
rorb
in
lret
std
shl
stc
loope
cmpl
fmull
in
leave
leave
lret
cmp
das
xor
fmulp
out
cmc
stc
repz
aam
fmul
jmp
xchg
in
cmp
cli
xor
add
rcl
cmc
rcr
enter
jmp
dec
test
ljmp
cld
jmp
shr
rcl
into
icebp
repnz
leave
jmp
lret
call
mov
shrl
out
iret
aam
out
lret
ljmp
test
repnz
out
rolb
test
jecxz
lock
hlt
cmp
out
hlt
repnz
rol
xlat
out
fisttps
mov
fmul
in
nop
xor
xor
in
repnz
leave
cmp
into
jecxz
sar
out
stc
ljmp
fildl
rcr
rcr
icebp
rcr
rcr
rcr
cld
rcl
in
cmp
xchg
cld
fcmovnb
test
leave
mov
out
fucomi
in
lret
call
std
cmp
jecxz
mul
adc
lds
in
icebp
ret
cmp
cli
iret
fidivs
lock
aad
and
aas
mov
call
sti
std
repz
in
enter
jmp
icebp
cmp
fsub
in
cli
fcmovnbe
aad
ror
cli
test
out
jmp
rcl
jmp
iret
ss
ljmp
fisttpl
call
repz
loop
test
xor
out
fcmovu
rcl
not
aas
aas
cld
iret
cli
fmulp
ret
sbb
out
cld
ror
rcl
xor
int3
sub
int3
aad
clc
repnz
xlat
incl
fcmovu
lret
loope
ljmp
int3
hlt
call
cmp
cld
test
mov
fmul
addb
in
lock
clc
fdivp
cmp
rcl
ret
sbb
mov
mov
ret
xor
hlt
out
ds
lret
cmp
faddl
fcmovnb
leave
loopne
enter
xchg
adc
out
cmc
cmp
out
leave
ds
add
neg
rcl
mov
into
clc
repz
test
out
into
fnclex
int3
cmp
iret
out
roll
in
fldl
in
stc
aam
int3
iret
repnz
sar
fcomp
cmp
fsubp
cmp
ret
cld
iret
cli
shl
hlt
shl
ret
xor
sub
call
into
not
repz
mov
add
test
fucomip
repz
ror
cs
out
rcl
aad
enter
xor
mov
or
in
xchg
jecxz
enter
cmp
fadd
aam
neg
std
mov
clc
loope
jmp
mov
shr
hlt
ret
int3
repz
hlt
icebp
clc
roll
out
int3
mov
out
out
jecxz
ss
cmp
cmc
aam
cmp
test
test
fdivp
int3
shl
dec
iret
fldl
cmp
fnstsw
cmp
cmp
loopne
ret
std
xchg
adcb
neg
sti
jmp
cmc
ret
cmp
cmc
adc
lret
sti
jmp
xchg
loope
adcl
icebp
out
aas
incb
std
jecxz
add
in
enter
mov
repz
cmc
shlb
iret
sarb
incl
jecxz
lret
iret
add
loop
cmc
lock
sarl
into
aaa
into
out
cmp
clc
rcl
faddp
clc
loop
lret
test
test
enter
xor
cmp
hlt
cmp
cmpb
loope
int3
orb
orb
cmc
ds
ds
rcr
sar
jecxz
aam
stc
lock
mov
sub
call
cli
loopne
repz
aam
roll
stc
mov
int3
aad
into
ljmp
roll
cld
mov
xchg
shl
icebp
ss
call
jecxz
call
neg
call
out
or
out
roll
xor
ss
out
jmp
repz
mov
jmp
fadd
leave
int
bound
inc
aad
nop
xor
jle
movsl
add
sub
cld
rorb
xchg
repz
xor
lock
aad
lret
cmp
loope
lock
lret
testl
icebp
fldln2
ljmp
ljmp
loopne
test
fisttps
repnz
iret
fucomi
cld
rol
jmp
ds
mov
add
xchg
loopne
loope
xor
lret
cmp
repnz
ret
fcomp
cmp
loop
cmc
clc
int3
lret
test
xchg
xchg
xchg
jmp
int3
icebp
lret
sbb
ret
mov
std
sub
mov
fildl
repz
out
call
aaa
sub
cld
cmp
fld
leave
fcmovne
iret
fsub
int
jmp
iret
ljmp
loopne
jecxz
rcr
addl
out
std
loopne
aam
in
icebp
cmc
repnz
rolb
int3
call
iret
out
ss
ljmp
cld
int
out
sarb
lret
enter
out
fstl
repz
cmc
leave
std
xor
out
fiadds
enter
iret
ret
int3
std
xchg
mov
int
hlt
out
aaa
fdivr
aad
sarl
jecxz
rolb
int3
fdivr
iret
ret
test
mov
cmp
leave
in
aad
not
hlt
loope
filds
sti
test
cli
in
fimull
xor
fsubr
aaa
out
ljmp
fdivp
rcr
div
jecxz
sti
jmp
mov
lret
icebp
cs
stc
fistpll
cmp
aam
mov
in
out
xchg
fabs
ror
loop
aas
in
xor
rcr
imul
jmp
loope
xchg
call
sti
int
sti
rorb
xor
les
aam
lret
lret
int3
xchg
icebp
fldl
call
aam
int
fadd
cli
jecxz
clc
hlt
lret
hlt
loopne
fadd
roll
fisttpl
loopne
mov
loop
xor
ss
rcl
int
into
fldl
flds
incl
icebp
jmp
loope
int3
shl
stc
stc
repz
cmc
xchg
enter
mov
repnz
aam
fdiv
cmp
test
cmp
loopne
fisttps
lret
sub
in
aad
repnz
cmp
aad
loopne
movl
fsub
loopne
rcl
xor
cmc
int3
neg
cmp
aad
lret
sarb
in
aam
ljmp
out
xchg
nop
or
repnz
xor
stc
fdivr
cmp
jmp
hlt
fsubp
ds
leave
xchg
cli
std
rorb
xor
int
leave
rcl
out
ljmp
jmp
loopne
stc
test
jmp
lock
repnz
xor
aam
fadds
cmp
xchg
testl
nop
out
into
xlat
fidivl
hlt
lock
stc
iret
dec
fstp
rol
out
clc
hlt
in
fimuls
mov
div
in
cs
fcomi
cmp
sar
aad
testb
iret
ljmp
xor
ss
repz
ffreep
loop
and
jecxz
fcmovb
stc
int3
addl
ret
out
fstpt
sar
cmp
shl
xchg
orb
out
xor
int
cmp
incl
jmp
jmp
mov
fdivr
mov
fsubrp
ror
hlt
call
fcmovbe
lret
rol
loop
jmp
out
nop
filds
out
ret
xor
hlt
out
in
repz
xchg
in
stc
ret
fsubr
leave
call
sub
ljmp
into
and
filds
rol
sti
in
fdiv
mov
iret
repnz
aaa
enter
hlt
aad
loope
test
out
sbb
enter
jmp
mov
aam
int
sti
in
lret
cmp
test
in
in
in
xchg
in
aaa
icebp
divl
cmp
xor
shl
stc
aas
aad
fiadds
xchg
call
in
in
jmp
cmp
in
fstp
shl
fcomp
lea
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
shll
jle
movsl
add
fcmovb
nop
sti
sar
xchg
xchg
ror
cmc
xor
jmp
jecxz
cmp
repnz
cmp
fldl2e
std
mov
xor
fnstenv
cmp
lock
repz
test
xchg
in
int3
jmp
stc
cmp
not
icebp
out
fst
xlat
les
fcomp
out
fcmovu
stc
loop
fiadds
clc
shl
xor
int
idivb
jmp
loop
sti
test
shl
loopne
stc
mov
fucomi
shl
mov
xor
lret
test
fidivrl
fdivp
ret
jmp
xchg
mov
xchg
int3
sarb
ljmp
ror
cmc
cld
xchg
ret
rolb
out
out
or
xchg
ss
int3
sti
fucomip
fmul
lock
aam
loopne
leave
shr
fiaddl
shrb
cs
sar
call
cmp
fadd
aas
mov
rolb
cli
mov
sub
fsub
clc
fucomi
enter
ror
into
loop
cli
in
mov
lea
lret
xchg
hlt
ss
das
out
lock
rol
cmc
loopne
mov
test
ljmp
ljmp
shll
cmp
in
cmp
fidivrs
incl
stc
ds
lret
add
mov
lret
in
cli
ljmp
fldz
xlat
cli
cld
xchg
fstp
rcl
out
and
xchg
cmc
cmc
sub
fnsave
aaa
out
fmul
shl
test
lock
ljmp
mov
in
enter
int3
xor
cmp
repz
test
mov
mov
add
xchg
loop
xchg
out
cmp
aam
sar
fucomip
aam
cld
shl
not
out
stc
fdivrp
sar
loop
std
iret
lock
iret
lret
into
out
sti
ds
cmp
aam
aad
sti
test
clc
out
loopne
out
in
mov
in
stc
jecxz
hlt
out
ss
jmp
repz
aam
lock
fadd
jmp
loope
lret
or
shlb
xor
call
cmp
testl
jmp
test
std
cmc
xchg
in
repz
enter
aam
test
lret
loope
fiaddl
repnz
xor
divl
lds
rcl
aaa
ljmp
hlt
sti
ljmp
rcr
mov
xlat
xor
ret
sub
enter
lock
add
repz
fisttps
mov
repnz
lret
out
aad
shl
cmp
loopne
in
fdivr
in
mov
fimull
mov
inc
in
fmul
xor
xlat
repnz
lock
ss
fildl
lret
std
int3
adcb
jmp
xor
enter
aas
hlt
filds
xchg
out
lret
fidivs
ret
hlt
lock
lret
div
shl
loop
lock
sar
rol
fcmovu
rcr
aad
in
test
xor
cmp
stc
icebp
hlt
in
int3
aam
out
sar
fiadds
fdivrp
fcomi
out
xchg
out
ror
in
int3
out
fsub
mul
cli
in
int
fidivrs
in
test
aad
in
test
into
rorb
fld1
jmp
ljmp
jmp
lret
int
test
lock
in
repz
lret
hlt
cmc
aad
xchg
fstp
testl
idivb
lock
sub
ljmp
out
sbb
aad
loope
ljmp
int3
jmp
in
shl
ret
lret
cmp
lock
adc
shl
and
ljmp
leave
xabort
int3
stc
flds
mul
mov
incl
xchg
mov
xchg
leave
lock
cmp
clc
fdiv
or
cmp
into
std
and
in
loopne
kmovw
mov
icebp
mov
in
leave
lock
call
jmp
fdivrl
icebp
faddp
stc
mov
xor
int3
in
cmp
call
loop
loop
repnz
mov
cld
ljmp
iret
fcmovbe
in
clc
clc
cmp
out
xacquire
leave
iret
int
icebp
hlt
mov
xor
imul
aad
int
iret
aas
out
cmp
xor
mov
mov
jmp
int3
rcl
aad
int3
call
in
push
lcall
jle
fimuls
ret
lock
fdiv
jecxz
ret
sbb
hlt
repnz
lea
int3
icebp
test
sub
jecxz
into
fst
repz
cmp
repz
aam
out
stc
jecxz
mov
xor
jmp
fidivrs
ds
test
repz
loop
orb
xchg
lock
in
cli
jmp
xor
fcmove
loop
rcr
cmp
loope
xor
in
movl
aaa
out
shr
cld
cmc
or
in
in
iret
fcomi
mov
mov
mov
test
cmc
ljmp
cmp
fiaddl
clc
stc
lret
rorb
loope
icebp
fdivr
enter
ds
ljmp
idiv
ret
vshufps
loopne
into
nop
lock
sub
ss
out
div
hlt
test
cmc
fdivrp
fsub
lea
mov
vpxor
clc
shr
sarb
clc
fcmovbe
iret
faddl
mov
repz
fsubr
jecxz
call
cmp
ffree
lds
xchg
in
int
in
mov
fsubrp
xchg
call
xor
leave
aaa
repnz
aas
cld
repnz
fildl
sub
into
decl
jecxz
clc
shl
fucomi
shl
icebp
icebp
loopne
adc
fldl
int
fmulp
shl
ret
hlt
cmp
test
fcmovnbe
in
clc
loopne
rcl
clc
fcomi
aad
out
xchg
out
lret
in
int3
repnz
cmp
divb
ror
out
fcmovnbe
jmp
and
stc
fdiv
loop
hlt
xor
cli
cmp
or
repz
shl
incb
in
into
jmp
repz
sub
ss
divb
xor
cmp
jmp
ret
ret
call
call
lds
xlat
in
cld
int3
ds
sti
aam
icebp
add
lea
fmulp
and
cs
jmp
aaa
out
ret
into
aam
aam
fdivrp
out
loopne
lret
and
sub
lock
iret
xor
cmp
idiv
aad
in
cmp
out
jmp
sbb
jecxz
xchg
jecxz
out
in
xor
ljmp
aam
aas
in
mov
stc
repz
hlt
fsubp
cmc
enter
call
sbb
stc
ret
aas
cli
faddl
lret
jecxz
cmp
test
leave
icebp
fcomip
loope
cli
ret
sti
sar
cld
decl
out
jecxz
shl
cmp
idivl
lret
xor
ret
shl
enter
lock
repnz
lock
div
cmp
fabs
fmul
cmp
inc
test
or
lret
jecxz
sub
clc
enter
xlat
in
cli
cmp
in
hlt
test
lret
in
or
iret
jmp
hlt
out
vpand
fsubr
sti
loop
cmp
into
loopne
loop
cli
jmp
out
lret
xchg
leave
loopne
lret
repz
ret
aad
cli
sti
in
mov
fisttpl
repz
jmp
call
rcl
xlat
fsub
repz
loop
xchg
repnz
out
xor
cmc
jmp
xor
lret
call
out
iret
in
cmc
xor
std
enter
leave
ljmp
xchg
out
lret
xchg
icebp
mov
shr
repnz
xor
aam
int
loopne
out
iret
clc
in
ret
cli
rcl
jmp
out
int3
lret
xchg
rcl
into
in
ss
loopne
repz
add
cmc
call
out
sub
xchg
xchg
int
clc
fcmovnb
fidivl
cmc
in
cmpl
faddl
fcmovnu
call
ror
cli
repnz
std
lret
cmp
in
fxam
mov
jmp
fadd
into
in
xchg
aad
xor
cli
aad
cmp
test
idiv
hlt
loop
xchg
in
ss
lock
fsubr
shl
cmp
test
sar
mov
repz
hlt
test
jmp
cmc
hlt
hlt
ds
fcmovnbe
xor
mov
jmp
mov
jmp
icebp
movl
jmp
int3
rcl
fstp
fldt
add
sbb
adc
jle
cmp
hlt
dec
sti
fdivrl
ret
aam
rol
stc
stc
jmp
int
mov
iret
out
int3
xor
call
jmp
loopne
in
sti
fcmovb
cli
std
mov
fucom
jmp
divb
sarb
cmp
fldl
ret
test
std
xchg
xchg
in
shrb
loop
shr
xor
in
loop
aas
ffreep
and
cmp
rcr
mov
loopne
int
aam
fdivs
stc
stc
fmulp
cmp
xlat
xlat
fdivrp
std
test
in
loopne
leave
mov
iret
jmp
sub
int3
ljmp
in
ret
jecxz
repz
int3
fdivrp
loopne
nop
aam
imull
rcr
repz
fsubrp
cmp
cmp
shl
xrelease
mov
ret
loopne
loop
nop
hlt
icebp
cli
loop
jmp
faddp
cli
fmul
fdivr
leave
rcr
orl
mov
ljmp
in
idiv
ds
ds
rcl
inc
call
in
jecxz
out
rcl
fsubr
out
lret
shl
xor
aad
test
leave
cli
cli
xchg
rcr
rclb
stc
cmc
xor
fsincos
test
hlt
test
jmp
xchg
xor
test
cld
jecxz
out
call
mov
in
out
loope
jmp
fst
xor
xor
xor
cmp
repnz
ffree
repz
cmc
fabs
in
cmp
jecxz
aad
ljmp
jecxz
aad
fiaddl
stc
in
int3
mov
out
cmc
shl
out
aad
ljmp
div
mul
sar
or
xchg
xchg
xchg
mov
rcl
ljmp
hlt
cmp
incl
rcr
mov
xchg
addl
out
out
into
rcl
ds
cmp
out
repz
jmp
test
std
in
rcl
nop
out
lret
div
cmp
leave
ss
hlt
sti
loop
repz
aas
fadd
cli
enter
out
out
lret
jmp
aaa
repnz
ss
sbb
fdivr
in
les
jmp
nop
repz
loope
int3
loope
test
fcmovb
in
jmp
nop
jmp
int
icebp
jecxz
cli
into
enter
jmp
sti
iret
out
loopne
cmp
fsub
fsub
sub
cld
mov
divb
jmp
jmp
clc
cmc
rcl
aad
loopne
in
sub
out
xchg
fsubr
mov
jmp
fucomi
out
ljmp
and
loop
fucomip
fildl
out
icebp
int
std
cmp
stc
lock
lock
repz
in
fimull
shl
xchg
cmc
cs
cmc
ds
stc
neg
aad
fimuls
shl
xchg
test
lock
shl
into
fucomi
cmp
fst
fucom
rol
in
clc
roll
mov
xor
clc
fucomi
cmp
addb
loope
fcmovnu
fmull
in
rclb
stc
xlat
lock
call
dec
in
les
call
lret
into
rcl
ret
shr
icebp
xor
fistpll
add
loope
orl
icebp
in
into
rcr
pause
rol
cmp
fdivr
ror
int3
jmp
cmp
in
fsin
vshufps
fsubr
lret
icebp
aad
call
aad
shl
xlat
lret
cld
std
rcl
sar
loopne
ret
in
out
mov
jecxz
lea
cld
cmp
fcomp
rcl
loopne
aas
bnd
test
xchg
xor
das
ss
icebp
aaa
out
sti
fdivr
push
mul
filds
stc
test
xchg
sar
repz
aaa
xor
cmp
ret
mov
sti
std
test
jecxz
mov
iret
hlt
decl
stc
sti
ds
aas
ror
test
fdivrl
jecxz
in
fadds
mov
xchg
loope
cmp
in
fidivrl
repz
sarl
filds
loop
xchg
fnclex
addl
into
fcmove
cld
repnz
cli
cmp
cmp
loop
leave
repnz
aam
fucomi
int
lock
and
imul
lock
fcmovu
out
xlat
fmuls
loopne
inc
in
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
fwait
cmp
jle
movsl
add
sar
fstpt
fdivp
icebp
repnz
fcmovnbe
lret
lock
leave
xor
xor
stc
cmp
xor
out
rcr
jecxz
in
aad
xlat
fisttpll
repz
in
ljmp
in
into
sarl
cmp
mov
mov
rol
out
in
clc
xor
jmp
rcl
icebp
out
loope
xchg
ret
ljmp
loope
shl
lock
fdivs
enter
std
fld
lock
clc
loope
loope
jmp
loopne
faddl
xor
int3
int
fadd
cmp
cmp
roll
not
cmp
cld
incb
xchg
iret
enter
rcl
enter
rcr
push
aad
jecxz
mov
xchg
out
hlt
rcl
lret
cmp
into
shl
lret
sar
sbb
icebp
fst
cmc
loopne
sub
xchg
repnz
dec
in
loop
sarb
rcl
leave
idivb
lds
mov
fdivr
leave
int
aad
out
cmc
out
into
ss
cli
xlat
addl
xlat
sti
in
aas
jecxz
mov
cmc
stc
enter
enter
in
cmp
aaa
and
ret
cmp
xchg
xchg
jmp
cmp
rcl
loope
cmp
out
xchg
jmp
repz
aad
leave
call
hlt
sar
clc
xlat
addb
in
jmp
out
ss
cmc
hlt
repnz
jmp
fld
fcomi
loop
orl
lret
in
repnz
out
lret
cmpb
sarb
test
lock
jecxz
hlt
decl
xchg
xchg
fcomip
ret
ret
xor
cld
cld
repz
aad
ffree
lret
fst
leave
enter
repnz
call
rcl
cld
in
cmp
aas
movb
int3
mov
xchg
fdiv
xchg
fsubrs
enter
lret
into
cli
shl
lret
add
in
flds
sti
mov
aam
repnz
in
cs
cli
aaa
in
iret
ret
xlat
aas
call
fcmovbe
xchg
mov
out
int3
xlat
ljmp
cmp
cmc
aam
std
sub
fisttpl
rcr
icebp
neg
repnz
xor
jecxz
sbb
mov
int
call
cmc
in
idivb
shl
into
neg
cmp
fmul
iret
in
faddl
enter
fcmove
enter
xchg
sub
cli
shll
out
sti
repnz
sti
loopne
cld
neg
clc
aas
aad
cmc
stc
fcomip
ljmp
shl
repnz
in
cmc
int3
into
stc
int
out
aad
shlb
std
sti
mov
lret
mov
fucomp
call
in
cmp
xlat
int
lret
fsub
idiv
rorl
mov
out
cli
shr
mov
xlat
enter
out
hlt
sarb
clc
cld
repnz
sti
mov
fcomi
xor
xchg
lret
shr
in
loopne
jmp
xlat
lock
add
mov
in
ret
in
roll
vpsubw
cmp
sbb
stc
in
stc
fcomi
add
mov
fucomp
fucomip
cmp
sar
int
aad
repz
rolb
cmp
testb
ljmp
int3
cmc
rcr
into
ss
std
loope
movb
mov
leave
mov
jmp
ror
hlt
xor
shr
call
loop
fcomp
lret
fdivrp
stc
jmp
sub
ljmp
fmul
aad
in
fchs
lret
icebp
int
rolb
cmp
sti
rcr
cmc
aad
sar
or
mov
ret
fcmovu
fcomp
loope
in
call
in
cli
xor
fst
test
shl
out
idivl
loope
xchg
mov
leave
shr
in
hlt
xor
sbb
ret
sbb
cli
leave
jmp
in
testb
ror
aam
in
rolb
rol
jmp
loop
sti
repnz
decl
fcmovnb
xor
fnstcw
stc
cmp
cmc
xor
jmp
shl
mov
xor
call
ds
mov
jmp
ret
aas
ret
aad
aad
mov
push
movsl
add
xlat
addb
out
icebp
addb
xor
std
call
mul
mov
in
in
out
test
shr
not
repnz
cld
fcom
rcr
xchg
orl
call
aaa
in
stc
std
cld
in
ljmp
rolb
fdivr
addb
aam
repnz
aad
icebp
stc
ds
not
lock
jmp
xchg
in
xchg
jmp
out
repnz
in
sbb
in
repnz
sti
xchg
ret
loopne
movb
test
in
rcl
cmp
stc
not
not
fcompp
and
aam
in
xor
in
into
cli
clc
loope
xor
aam
fucomp
jmp
mov
lret
repz
cmp
cmp
xlat
fiadds
jecxz
fdivrp
mov
fmul
sti
mov
xlat
cmp
out
enter
test
loop
mov
out
xchg
mov
out
cli
int3
fimuls
sub
lret
aas
sti
loop
mov
rol
ss
aaa
rol
out
or
fdivp
rolb
stc
ret
fxch
mov
repnz
ror
rol
int3
stc
hlt
stc
jmp
testl
loop
enter
repz
leave
in
ljmp
ret
xchg
aas
idiv
testb
xchg
mov
xchg
xchg
sub
xor
fmulp
ss
loop
sarb
and
jmp
jmp
stc
mov
lock
jmp
out
hlt
aad
aad
in
aam
rcl
in
mov
rcl
shl
divb
leave
in
repz
aad
out
aas
in
repnz
dec
in
into
iret
out
out
fisttpll
jmp
std
out
jmp
aad
in
repz
repz
pop
in
roll
fxtract
sti
int3
sar
cmp
cld
ds
loope
ret
clc
fstpt
call
ljmp
loop
xor
cli
xor
repz
fdivrs
out
test
in
ror
icebp
loopne
xor
hlt
repnz
sar
out
sti
ss
call
repnz
orb
aam
and
cmc
cmp
in
aad
ds
xlat
fimuls
in
xchg
test
mov
in
lret
xor
aas
iret
stc
fucomp
cmpb
sti
sti
test
filds
out
test
call
rcl
fcmove
fst
fstpt
cmp
ret
sti
aas
clc
shr
leave
fsub
ffree
mov
xchg
shl
mov
rol
cmc
cld
ror
stc
test
cmp
fiadds
test
out
in
jmp
in
cmp
call
in
fistpll
div
mul
mov
mov
ljmp
repz
fdiv
xlat
xor
loope
rcr
icebp
lret
mov
iret
shr
in
out
xor
fdiv
repnz
in
xor
lock
int
shl
xchg
cld
in
int
mov
in
out
and
ret
shl
cmp
cmp
in
pushl
clc
adc
mov
cld
cmp
out
out
aad
fcmovu
jmp
fdivr
ljmp
sar
in
call
stc
loopne
fists
in
in
xor
in
ror
loope
ds
mov
clc
faddl
fxch
xchg
xchg
xchg
shl
in
xor
aaa
cmp
xlat
std
clc
fndisi(8087
clc
aam
fxch
aad
xchg
fdivrp
in
xor
ljmp
fdivr
shr
lock
icebp
ret
cld
decl
test
hlt
jmp
ljmp
cli
in
aam
sbb
imul
nop
mov
add
lock
out
ret
cmp
lock
fcmovnu
out
fcmovb
les
fsubrp
mov
mov
out
test
enter
call
loopne
loopne
jmp
mov
fmuls
icebp
loop
rcr
lret
jmp
frndint
div
std
cmc
loopne
stc
mov
xchg
ss
lret
in
icebp
fcmovne
sbb
clc
lock
cmc
jecxz
in
fdivr
fiadds
or
mov
rcr
fcmovnu
mov
fsub
scas
and
movsl
add
fimull
faddp
enter
iret
cmp
sar
fbstp
sti
mov
mov
ret
test
orl
in
xor
fdivl
out
cmp
ret
fdivr
loop
cmp
repz
int
idivl
out
not
ds
fdivrs
icebp
loop
orl
cmc
into
in
cs
rcl
cmp
fcmovne
iret
cmp
xchg
cmc
cld
out
jmp
xchg
cmc
jmp
out
cmp
fcmove
aad
aad
out
xchg
jmp
mov
adc
ljmp
lock
icebp
cmp
cmp
fcmovu
xchg
out
loope
mul
ror
jecxz
out
call
out
ss
int
fsub
test
in
out
cld
call
mov
loope
fmull
out
call
aas
cmp
repnz
icebp
add
ret
cmp
lret
div
loopne
iret
xor
cmp
leave
ljmp
std
ds
ljmp
loopne
out
lock
fcmovnu
lock
aam
leave
loope
jecxz
test
leave
clc
loopne
jecxz
fldl
xorl
stc
add
aas
cmp
stc
stc
fsubrp
cld
mov
test
mov
rcl
shl
cmp
xor
lret
leave
xor
ffreep
bnd
in
orl
xor
rol
enter
loope
fsubr
xlat
hlt
into
iret
aas
cmp
ret
aas
call
xchg
nop
out
xchg
rcl
cmp
cmp
xlat
cmp
xor
aam
fcmovu
fdivr
jmp
mov
std
sub
iret
or
repz
xor
repnz
pushl
div
imul
cli
ret
loope
ljmp
in
xchg
clc
das
xor
in
cs
lock
out
out
int3
out
in
addb
mov
mov
xchg
lret
jmp
rcr
cld
sar
cli
sti
in
out
in
decb
cmc
int
xor
aaa
lret
call
xor
cld
cld
call
test
out
ror
faddl
xor
icebp
aaa
ds
sti
xor
div
sar
sarb
lret
loope
lret
addb
ret
cmp
test
icebp
sbb
filds
ffreep
mov
sar
lea
out
xlat
call
aam
aas
adc
fsub
hlt
xor
test
ret
sub
xlat
clc
out
fcmovne
xlat
cmp
shl
aam
clc
iret
cld
fiaddl
clc
repnz
lret
xor
cmp
shl
incl
jmp
in
mov
in
out
xor
lock
loopne
loope
rcl
cmp
loopne
cmc
fucomip
mov
ror
into
xchg
jmp
ss
in
cmc
test
xchg
jecxz
jecxz
loope
mov
mov
xor
out
jmp
push
cmp
ret
in
xor
ret
in
fsub
pop
loope
idivb
xor
out
lret
in
in
idiv
decl
out
in
call
cmp
aaa
out
sar
in
loop
rcl
aad
decl
test
out
loope
out
cli
std
xor
lock
cmpb
rol
neg
hlt
xchg
cld
jecxz
in
out
cmc
lret
sti
leave
xor
sar
faddl
rcl
loopne
stc
idivl
ljmp
in
cmc
iret
aad
repnz
fadd
testb
mov
enter
in
out
aam
loope
rol
cmp
into
ljmp
shl
cld
cld
mov
aad
neg
in
lock
int3
adcl
movl
fneni(8087
xchg
orl
icebp
ret
jmp
hlt
xlat
shr
xor
in
jecxz
fcmovnu
shr
icebp
sbb
mov
out
hlt
jmp
into
cld
lock
rol
mul
loope
ljmp
cmp
out
das
ret
cmp
cmp
fildl
jmp
call
jmp
leave
xlat
out
out
aas
rcr
ret
aad
add
enter
out
fsub
jmp
mov
jmp
ret
leave
aad
fcmovnu
sub
xor
pop
pop
daa
jle
movsl
add
xchg
icebp
ljmp
fstpt
in
cmp
std
cmp
addl
lret
into
jecxz
xchg
aad
aad
repz
cmp
cli
lock
test
fdivr
lret
mov
std
iret
out
in
ffreep
in
ret
cmp
das
fnstenv
stc
not
fdivr
in
sar
std
sub
xchg
iret
fsubp
jmp
repz
fidivrs
cmp
cmp
filds
popl
out
jmp
loope
lret
fucomi
ds
in
cmp
add
repnz
mov
fnstcw
aaa
cld
shr
aad
leave
fucom
and
incb
nop
jmp
mov
xor
ffree
ljmp
ds
rcl
call
fldln2
mov
lret
cmp
idiv
rol
cmp
in
test
jmp
ds
idiv
enter
repnz
out
ljmp
in
enter
int3
aaa
cmp
mov
xchg
cmc
aad
xlat
leave
in
fimuls
repnz
repz
cmp
fdiv
roll
jmp
icebp
test
ljmp
xor
cmp
xor
cmp
ret
enter
mov
cmp
jecxz
int3
aaa
repz
lret
cmp
jmp
cld
shl
out
xchg
jmp
lret
lock
in
mov
aas
in
cmp
loop
in
fucomp
rolb
lock
lret
ss
call
loop
ror
xor
jecxz
ljmp
in
out
ret
into
in
int
cmc
loop
cld
faddp
lret
mov
lds
mov
cmp
stc
fcmovne
fstpt
cmp
idiv
aad
in
movb
loop
ret
in
adcb
lret
cli
not
test
ds
sbb
movb
shr
out
shll
lret
in
aam
aam
xor
cld
shl
ds
test
xchg
ljmp
ret
call
sub
cmp
stc
cmp
shl
std
fmul
and
loopne
xchg
xchg
dec
xor
in
jmp
cmp
cmp
loop
fcomp
cmp
xchg
repz
into
icebp
loopne
jmp
sar
enter
lock
fdivrp
xchg
xlat
in
loop
in
out
out
out
out
iret
std
in
fadd
xor
xor
rol
div
rcr
rol
fdivr
jecxz
cli
aad
mov
in
test
xchg
aam
lret
enter
lock
loopne
aad
jmp
mov
cld
dec
roll
repz
xor
loop
faddl
in
out
fsubp
add
adc
xor
out
clc
cmp
repz
roll
call
out
mov
out
lret
fsubrp
enter
sar
lret
cmp
ror
sti
xlat
aas
lock
cli
xchg
in
stc
jmp
out
mov
mov
cmp
std
aaa
cmp
lock
icebp
icebp
fneni(8087
sti
xlat
out
jmp
aam
repz
xor
lret
fldln2
cmp
test
in
ret
in
aam
fsub
and
ljmp
ss
ror
xor
fnstsw
in
sar
aad
ret
leave
lret
cli
mov
int3
vpmulhw
out
aad
ss
rcr
fdivr
movb
mov
xchg
in
mov
shl
cmp
rcr
repnz
ret
test
in
fsub
lock
cmc
call
cmp
lock
flds
test
jmp
nop
lret
lret
hlt
fdivs
enter
lret
ds
std
cld
lds
mov
shr
enter
call
ror
lock
cli
in
ret
addb
cli
out
ljmp
xor
sti
jmp
fcmovbe
sti
test
mov
fmul
leave
xor
fsubrs
fdivr
lret
clc
fcomp
sti
jmp
ret
test
cmc
enter
xchg
ret
out
out
ret
fdiv
out
cmp
iret
in
sar
loopne
not
test
std
cli
cld
fstp
mov
jmp
testl
jmp
vaddsubpd
rcr
pop
push
xchg
fstpt
sub
jle
add
sti
in
std
loop
int
ret
sar
cmc
in
test
aam
fdecstp
leave
cmc
aam
loopne
rolb
hlt
out
xchg
fldl
repz
out
iret
rcr
in
repz
flds
ret
jecxz
jmp
fmulp
loopne
mov
into
iret
hlt
fdivrp
icebp
in
loopne
out
leave
cmc
loope
adcb
fsubr
lret
out
in
shr
aam
ret
movb
jecxz
mov
repnz
in
in
in
int3
iret
loopne
aas
shl
fcos
orb
sti
rcl
int3
mov
lock
cli
ss
cmp
clc
loopne
xchg
lret
leave
clc
lea
out
out
sti
rcl
fcmovnb
cld
cmp
or
fnstcw
stc
fst
std
loopne
mov
aam
fxch
shr
rcl
shl
decb
int
enter
icebp
adc
out
aad
fdivrp
in
inc
int
fadds
out
ffreep
or
lock
out
call
push
cli
inc
bnd
aas
cli
enter
jmp
lock
mov
jmp
aaa
clc
repnz
sti
lock
icebp
loope
rolb
into
loopne
fsubr
icebp
mov
clc
in
repz
ss
std
cmp
test
and
jmp
sti
cmc
xor
in
int
fdiv
fiadds
aas
out
neg
cmp
aad
out
mov
ror
cld
mov
fdivs
in
xor
xor
ror
out
fcmovnu
lock
loop
cmp
mov
clc
in
sub
and
sub
std
into
out
fcomi
int3
clc
clc
sbb
shl
addb
fmull
in
shl
sub
repnz
stc
shl
loope
ds
loop
fucomip
aad
cld
call
out
repnz
sub
jmp
cmp
hlt
sbb
mov
jecxz
xchg
shl
mov
repnz
fadd
ljmp
or
rcl
cmc
xchg
ret
shl
out
fdivrp
call
shl
in
ror
std
loopne
loope
in
fidivrs
fstp
aam
jecxz
int3
in
loopne
and
ljmp
enter
iret
into
aam
loope
enter
jecxz
jmp
mov
repz
in
out
lds
clc
lret
in
cld
shr
adc
fldl
fsubrp
lret
orb
loop
xlat
ss
in
into
adc
repnz
cmp
ret
hlt
cmc
loop
sub
fsub
icebp
orb
shl
into
cli
cld
icebp
cmp
cmp
cld
repz
addl
shl
in
fcmove
aaa
sti
clc
fsubr
jmp
fsubp
sbb
mov
leave
adc
in
loop
xchg
aad
jmp
idivl
aad
xor
xlat
jmp
test
loopne
int3
ror
jmp
cli
cmp
int
stc
stc
test
icebp
neg
hlt
out
stc
in
xlat
rol
mov
cmp
jmp
aad
fucomi
cmp
div
loop
clc
les
xchg
test
out
leave
enter
fabs
ret
cld
loop
cmc
cmc
ret
orb
in
mov
int3
xchg
out
aad
idiv
fdiv
hlt
cmp
fldl
loopne
incl
nop
ljmp
loop
jmp
out
aaa
xlat
fdivrl
clc
lret
stc
loop
lds
cli
loop
in
mov
rcr
jmp
lret
cli
loope
sarb
int
ds
loop
jmp
loopne
xchg
lock
xor
xor
fucomp
test
shl
mov
fcomp
cmp
out
ljmp
cmc
jmp
iret
cld
sbb
xchg
loopne
test
jmp
xchg
xchg
icebp
aaa
xlat
xlat
cmc
out
in
jmp
xor
xor
fsubr
xlat
ficoml
out
ror
rcl
fsubr
out
in
lock
div
jmp
xlat
mov
std
test
in
mov
aam
call
fnstenv
loopne
repz
ffree
out
test
or
jmp
in
repz
xor
xor
cld
not
shr
neg
jne
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
int
in
xchg
xor
movsl
add
test
fsubp
ret
lret
cld
mov
ss
in
cmp
enter
lret
cmp
lock
aad
clc
lret
fisttpl
xor
das
shl
aam
fcmovu
into
cli
icebp
into
cmp
out
ret
call
loopne
repnz
xchg
fimuls
fcomi
in
cmp
cmc
addb
inc
in
call
mov
in
xor
cmp
shr
fstpt
cmp
lret
cmp
in
fdiv
cmp
into
mov
xlat
fmul
icebp
aam
aam
loop
out
loope
loopne
jmp
sti
cld
icebp
xchg
xchg
lock
in
in
in
ss
repz
stc
lret
fdiv
ds
cld
hlt
repz
out
loope
loop
rcl
mov
cs
stc
cmp
stc
std
fucomp
icebp
shl
jmp
test
sti
xchg
lock
in
out
in
in
shr
stc
lock
in
in
roll
loop
ret
leave
rclb
jmp
ljmp
xchg
enter
faddl
rcl
icebp
test
stc
leave
hlt
test
out
lock
out
ffreep
test
shl
jmp
icebp
mov
out
out
xchg
out
repnz
ror
cmp
call
vpminub
loope
decb
ftst
in
xor
ljmp
icebp
loope
in
mov
fst
xchg
loope
repnz
neg
out
hlt
fdivr
iret
ds
aas
fcmovnu
out
out
lret
call
xor
enter
aam
cmp
repnz
neg
ret
addl
in
fcmove
hlt
aaa
sarl
aas
repz
jmp
aad
sub
test
xchg
or
aas
rol
cmp
ss
enter
cmp
aam
out
enter
out
lea
hlt
lret
sarl
repnz
ds
lret
hlt
neg
test
xchg
out
lock
shl
das
out
mul
in
cmp
aas
shl
int
hlt
in
lock
call
in
out
test
sub
adcb
iret
leave
call
cli
rcr
bnd
ret
jecxz
call
xchg
in
xlat
xor
in
xor
ljmp
int
loop
cmc
repnz
clc
mov
xchg
out
cmp
ljmp
xlat
ret
fdivrp
cmp
in
xchg
not
std
in
in
fdivp
int3
ret
aam
repz
fucomi
cld
fdivrp
fsubrp
aam
stc
lock
iret
out
mov
enter
cmc
out
hlt
fcomp
ds
repz
aad
jecxz
clc
fmulp
mov
clc
in
jmp
out
call
hlt
xlat
cs
in
shl
cmp
jecxz
mov
ljmp
lret
in
out
loop
in
jmp
cmp
ret
clc
test
cli
mov
mov
enter
mov
test
or
fdivrs
enter
cmp
ds
aam
cmpl
mov
int3
enter
cmp
enter
rcr
cld
repnz
aam
loopne
in
mov
iret
lret
xchg
xchg
mov
ss
out
ss
clc
in
shl
lds
cmc
jecxz
fucomi
cld
out
xchg
adc
fcomip
shl
out
jmp
cli
shll
lds
test
mov
mov
icebp
fimuls
in
lock
sar
fstpt
in
icebp
hlt
repz
std
sti
lret
std
xchg
xchg
jecxz
in
xor
in
cmp
aam
int
rol
mov
xchg
in
out
loopne
in
jmp
ljmp
fdivr
ds
test
aad
jmp
mov
into
stc
ljmp
cld
shr
fld
fdiv
in
fisttps
lret
out
jmp
sarb
rol
rol
cmp
vpaddusb
int3
test
lret
repnz
mov
jmp
fxch
xlat
leave
cmp
rol
xlat
in
testl
mov
lock
ret
cmp
shll
lret
aad
iret
bnd
incl
loop
in
int3
ret
out
out
xor
cld
ss
ds
mov
movb
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
pop
nop
push
xor
jle
in
stc
mov
fsubr
ljmp
xlat
in
into
rol
xlat
fucompp
in
neg
repz
shl
ret
fadd
in
repnz
repnz
out
aam
cmc
fnstsw
xor
jmp
xlat
xlat
out
sbb
loopne
cld
lret
xchg
cmc
mov
ret
rcl
cmp
sar
cmp
loope
rolb
lret
loope
enter
into
lds
hlt
repz
das
fidivrs
call
rol
idiv
test
filds
sbb
addb
cmp
xor
out
leave
aaa
out
fmul
ret
les
jecxz
int
test
test
mov
stc
clc
in
repnz
cmp
jecxz
adc
loop
fsubr
xchg
loopne
lock
aam
repz
fdivp
into
repz
add
jmp
div
loopne
testb
lds
iret
fcmovnb
jmp
clc
int3
fucomi
jecxz
icebp
repnz
mov
test
repz
xor
leave
lock
repz
fiaddl
cmp
cmp
std
fmulp
loopne
ljmp
fcmovne
jmp
rcr
shr
rcl
loope
cmp
ret
out
out
jecxz
std
aad
loope
out
xor
int
fsubp
clc
lret
out
clc
ret
fcomp
aas
stc
fcmovne
shr
out
out
fdiv
xlat
cmp
cmp
cmp
cli
ret
fucomi
mov
lock
out
xchg
hlt
shll
out
repz
ror
stc
icebp
cld
fstpt
fnclex
mov
lock
mov
mov
cmp
in
leave
in
std
enter
int3
ret
jmp
aas
in
lret
lock
fucom
out
in
aad
int
rcr
jmp
jecxz
loopne
ffreep
int3
test
loopne
ficoms
in
jecxz
fdiv
aad
int
icebp
cmp
lock
aad
stc
in
mov
jmp
das
jmp
jmp
cmp
iret
xlat
and
mov
out
xchg
ljmp
in
ror
sar
cmp
call
cli
out
hlt
std
ret
cli
fiaddl
jmp
iret
loop
shl
aad
xor
in
int3
out
int
rcl
std
mov
loopne
rol
out
lock
mov
cmp
repz
cmp
div
aam
rolb
std
sti
out
mov
icebp
repnz
leave
xor
in
cmc
aam
aad
adc
ds
lock
iret
hlt
in
hlt
mov
out
call
enter
sti
out
aad
loopne
jecxz
cmc
loopne
test
into
cs
in
out
xor
cmp
cli
lret
loopne
and
jmp
mov
ret
mov
in
xchg
in
ljmp
into
jmp
ret
loope
ret
cli
fildl
xchg
test
iret
int3
mov
leave
xor
xlat
idivb
in
repz
in
std
cmpb
rol
cmp
loopne
mov
shl
out
aaa
cmp
std
cmp
aad
ret
cmp
int3
mov
test
shll
int3
iret
sti
fstp
call
loop
out
repnz
mov
fistl
ljmp
into
cmp
icebp
sti
int
test
call
call
fldt
lret
clc
shl
into
shl
ret
fcomip
xchg
mov
in
lock
mov
aam
ss
roll
fdiv
mov
hlt
loopne
fld
loope
fiadds
idivb
in
xor
cmp
hlt
out
enter
ret
fisttps
and
aad
out
xor
ss
rcl
faddl
loop
mov
into
decb
iret
cmc
xor
icebp
cmc
sti
ds
fdivrs
in
ljmp
cli
xchg
in
f2xm1
out
neg
cld
jmp
fstp
fsub
leave
test
lea
loopne
in
aam
xor
repnz
int3
out
les
xlat
fdivr
out
mov
out
xchg
in
xor
jmp
shl
test
cmp
rcl
mov
xchg
in
xchg
fcoml
in
in
out
cld
fstp
cmp
ret
neg
mov
in
cmc
test
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
adc
jle
add
in
lock
aam
fucompp
in
cmp
int
shl
lock
cmp
repz
aam
mov
inc
mov
jmp
into
imul
out
aad
fcmovbe
xor
fldz
ret
fcmovb
loopne
fimull
neg
jecxz
shl
orl
cmp
repz
idivl
jecxz
cli
xchg
movb
int
int3
xchg
int
xor
lret
lret
imul
cmpl
xchg
repnz
adc
xlat
int
lret
nop
mov
in
int3
iret
rcl
xor
std
aad
out
rol
hlt
into
sar
rol
mov
lret
jecxz
mov
in
test
hlt
iret
icebp
sbb
fst
shl
shl
loop
in
mov
lock
sub
fsub
repz
cmp
rol
sbb
leave
out
in
jmp
jecxz
shll
sub
cmp
repz
ret
cmc
xchg
fchs
stc
sub
jmp
cmc
fidivl
aaa
repz
sti
sarl
jmp
sar
out
loop
in
loope
in
std
nop
fsubr
cld
repnz
cmc
xor
loope,pt
cli
or
loope
aad
filds
shr
fucomi
cld
out
ror
xor
cmc
call
into
fdiv
ss
dec
out
loop
fadd
fisttpl
lock
out
in
cmp
cli
test
hlt
cmp
cmp
xchg
out
fsubr
imul
test
cmp
rcr
shl
iret
jmp
xlat
jecxz
rolb
in
aam
clc
call
aaa
fsubr
ret
fadds
jmp
int
lock
lock
out
into
rcr
sarl
clc
cli
in
lret
ficoml
out
loop
fcomp
jmp
fnstcw
out
loopne
mov
leave
out
fldl
lret
ret
in
cmp
out
aam
cmp
loope
aas
cmc
xchg
jecxz
aam
ficoms
decl
lock
fdivp
clc
aaa
fcomp
cmp
aad
cmp
out
repz
shl
in
and
jmp
ret
ljmp
cmp
aad
aam
add
out
sti
fcmovb
mov
test
ss
int
rol
in
out
jmp
mov
lock
mov
fdivs
jmp
jecxz
repz
aas
stc
cmp
sar
xchg
sti
ret
mov
jmp
sub
mov
shr
neg
int
repnz
aam
cmpb
in
fcmovbe
and
ds
faddl
sub
in
stc
ret
cmp
fptan
sbb
aad
aaa
in
aam
out
jmp
sti
shl
enter
xlat
out
xor
cli
xor
jmp
xlat
cmc
call
sbb
loope,pt
sar
mov
cld
filds
cmp
xor
call
aas
fcmovnu
cmp
hlt
sti
lret
out
out
lea
ret
jmp
lret
sarl
rcl
repz
hlt
clc
aad
mov
out
add
xchg
cld
out
out
shll
fsin
test
not
in
sarb
in
in
std
cli
cmp
call
loope
cmp
das
jmp
rcl
cld
jecxz
fildl
incl
xchg
repz
fxam
aaa
xor
stc
out
lock
cmp
orl
loop
das
jmp
lret
out
aaa
fprem
out
fdivrs
fscale
out
fcmovbe
aad
addb
in
cmp
jmp
fucomi
out
int
int
repz
clc
test
out
xlat
leave
mov
add
lock
hlt
call
cmp
in
std
rcr
movl
iret
xor
iret
jmp
cmp
test
add
xchg
imul
lret
ljmp
xchg
ss
rolb
faddl
lret
lock
fst
cmc
shl
in
mul
in
in
sti
test
loopne
ret
repnz
jmp
test
cld
repz
fstl
sti
fcmovbe
sti
fmul
fadd
adc
aad
fdiv
les
stc
loope
loop
lock
out
shr
cli
cli
repz
fidivrl
icebp
and
ret
fisttpl
lret
shr
add
add
fcom
fstp
je
xchg
or
and
jle
movsl
add
out
xor
cmp
cmp
ret
fcmovnb
aam
fdivr
nop
stc
mov
loopne
rolb
in
repz
ds
in
icebp
stc
cld
cli
jmp
call
nop
xchg
in
stc
in
iret
cmp
fidivrl
cli
loop
fadds
sbb
idiv
cmp
loope
loope
lea
jecxz
cli
cld
lock
cld
lret
or
loope
lret
filds
mov
aad
fdiv
stc
xlat
in
ljmp
fdiv
xchg
out
enter
cmp
fcmovnu
fcmovb
out
fiaddl
mov
rcll
sub
xlat
in
xlat
dec
cmp
xchg
repz
cli
mov
mov
xchg
xchg
out
ret
aad
lock
repnz
icebp
rcr
xchg
aad
jmp
call
out
fadd
icebp
stc
cmp
std
sub
rcl
cmc
loop
lret
mov
loope
sub
shr
repnz
aad
int
idiv
cmc
cli
hlt
xlat
mov
fadd
xchg
in
loop
hlt
call
xor
int
cmp
loop
aam
roll
out
fnsetpm(287
sti
loope
or
jecxz
clc
aam
xlat
ss
cmp
test
cmp
shl
xlat
out
icebp
std
adc
fsubr
sti
imul
cmp
cmc
repnz
in
mov
loop
xchg
enter
xlat
aaa
cmp
divb
fcomip
ds
cmpl
sub
jmp
test
test
std
jmp
int3
cmp
fcmovb
aad
ds
repz
vpextrw
test
in
int
jmp
cmp
icebp
fdiv
sub
std
rcr
lret
lret
cmp
ljmp
leave
leave
ret
iret
frstpm(287
ss
shl
rolb
fadd
mul
cmc
cmc
mov
mov
cli
int
call
lock
clc
repnz
stc
icebp
loopne
sti
cli
rol
loopne
fsubr
fucomp
xchg
rorb
out
xor
xor
cmp
aas
or
cld
xlat
icebp
xor
loopne
movl
xor
out
iret
xlat
cli
xor
filds
mov
loopne
lret
fsub
mov
jmp
cmp
cld
cmp
ds
jmp
lock
leave
jmp
out
in
in
mov
repnz
ljmp
std
repnz
cmp
lret
stc
aas
fsubrp
in
call
loope
xor
xor
in
fdivr
cmp
fsubr
iret
fcmovu
fld
loope,pt
test
in
out
icebp
in
cmp
sti
icebp
call
fadds
mov
mov
orl
dec
cmc
jmp
aad
xor
repnz
fsub
fsubr
stc
out
xlat
out
mov
lret
xchg
icebp
xor
fcmovne
in
aam
repz
loop
aas
ret
fdiv
incb
out
xchg
jmp
lret
hlt
leave
fdiv
cmc
clc
loop
loope
rcl
loopne
test
xchg
loope
in
mov
fidivs
les
lret
sub
clc
xor
into
fcmovnu
xlat
test
test
leave
xchg
fmull
repnz
cmc
test
fstpt
cmp
rcl
std
test
clc
std
into
xchg
out
iret
xor
in
fdivr
std
idiv
jmp
cmp
repz
fsubr
mov
mov
hlt
hlt
aam
fld
std
ljmp
in
rolb
mov
lea
mov
in
shl
neg
int3
cmp
fcmovnb
out
clc
xchg
jmp
test
int
icebp
jmp
into
cmc
out
ror
repnz
stc
mov
mov
in
test
cmp
ljmp
faddl
int
in
icebp
mov
test
ror
in
aad
xlat
clc
fptan
repnz
sarl
test
fndisi(8087
test
out
mov
icebp
les
loop
aaa
jmp
cmp
std
xchg
loope
test
int
out
nop
in
aad
shr
fnstenv
aam
fyl2x
cmp
clc
rolb
rcl
test
stc
jecxz
int
out
shr
cmp
out
fadd
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
std
inc
ret
jle
movsl
add
ds
sar
cmp
clc
rcr
into
xchg
in
rcll
ljmp
lret
fcmovu
and
or
testb
test
fucomip
loop
repz
out
lret
out
into
call
shl
aad
mov
out
fdivr
xchg
mov
repz
shl
out
xor
out
leave
cmp
iret
sti
clc
incl
aam
loope
jmp
xchg
lock
shll
out
fcomip
int
xlat
stc
into
clc
sbb
fcmovu
enter
std
lds
ss
in
aam
enter
rcr
fcmovu
xchg
mov
xchg
int3
out
lret
ljmp
cmp
rcl
stc
aaa
fdivrs
jecxz
adc
sbb
call
repz
repnz
fnstenv
cmp
int3
hlt
in
clc
addb
test
std
stc
mov
mov
xchg
imul
ret
hlt
jmp
int3
cmp
div
sbb
xchg
adc
out
fldlg2
xchg
loope
mov
iret
rcl
enter
aam
repnz
and
fcmovu
fxch
orb
in
xor
xor
leave
cmp
rorl
xchg
sti
fstp
out
mov
ret
out
out
cmp
into
clc
jmp
cmp
cmp
call
rorb
repnz
xor
int
faddl
fnclex
stc
loope
repz
adcl
lret
jmp
aaa
jmp
not
filds
ljmp
cmc
out
into
xor
out
in
fcmovne
rcr
cmp
adc
repnz
leave
rorb
out
xchg
jecxz
shl
in
in
out
std
loope
mul
sarl
clc
xchg
loope
sbb
in
in
out
call
xlat
lock
fdivs
cmp
lock
std
xlat
cmpb
shl
ret
test
mov
mov
and
mul
rcl
iret
test
cli
cmc
ret
out
cmp
fisttpll
lds
xor
sti
rcl
repz
or
test
cmc
in
in
xchg
call
fimuls
in
clc
fxch
sub
int
fcomp
and
in
test
into
test
fdiv
div
fcmovne
icebp
jmp
out
in
rcr
cld
in
jmp
int3
mov
shl
jmp
int3
xor
int3
fadd
fdivrs
rcr
loop
call
call
test
repz
into
loop
aam
aad
fcmovu
divl
testl
addb
fcomip
das
shl
imul
jmp
cmc
faddp
fdiv
xor
aad
stc
clc
loop
in
xchg
ss
icebp
cmp
cmp
out
jecxz
fst
clc
mov
xlat
out
in
or
xchg
ljmp
idivl
rolb
mov
in
orl
cmc
lock
lock
leave
ret
loop
int
faddl
fdiv
xlat
clc
leave
cmp
aas
in
repz
push
mov
xchg
or
test
jmp
in
lret
not
rcl
fistpll
xchg
mov
clc
cmc
mov
int
lock
xor
rcr
int3
int3
cmp
in
in
sar
in
vpminsw
mov
int
mov
hlt
rorb
enter
jmp
cmc
cmc
ds
ljmp
in
out
lret
loopne
aas
jecxz
int
out
in
cmp
in
loope
hlt
out
shl
xchg
test
loope
cld
enter
shl
or
aaa
ret
int3
cmp
xor
faddl
fucomi
cli
int
addl
clc
xor
cmp
in
std
ffree
xchg
iret
mov
fisttpl
ljmp
inc
fcomip
icebp
in
shl
test
addl
in
mov
xor
repz
cmp
cmc
shr
loopne
iret
iret
fmull
aad
xlat
loop
fucomi
xor
ret
out
int3
xlat
cmc
ds
sbb
repnz
sar
loope
mov
cmp
in
mov
loop
jmp
call
xor
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
pop
ret
enter
add
out
loope
out
fimull
call
ss
ror
sti
dec
aad
cli
fcomp
iret
xchg
cmc
fucomi
loope
ljmp
popl
test
leave
cmp
xor
out
jmp
jmp
loop
call
xor
rcl
filds
filds
cld
enter
std
lret
out
repz
repnz
neg
ljmp
aad
fcomp
out
lds
mov
in
test
clc
hlt
leave
into
fdivp
std
int3
sar
out
fld
xlat
xlat
mov
repnz
stc
lret
icebp
sar
cmc
fcmovnbe
xlat
ds
stc
add
mov
in
shrb
out
fdivs
stc
cmp
or
jecxz
fcomi
clc
jmp
lret
std
xchg
popl
cmc
in
out
cli
int
cmp
testb
lret
addl
xchg
out
xlat
rcr
int
leave
iret
fiadds
xlat
in
icebp
mov
loope
xchg
lret
xor
xchg
into
icebp
lock
fsubr
enter
cmc
cld
cmp
stc
shl
rol
fcmovne
lret
iret
loopne
xchg
sti
out
xor
xchg
add
mov
in
out
sti
xchg
in
repz
sub
div
shl
fcmovbe
shl
pushl
bnd
cmpl
orl
test
shr
xor
loopne
fcmovnbe
stc
ret
jmp
mov
ljmp
fnstcw
rcl
out
lret
sarb
shl
testl
fst
aam
in
stc
in
in
leave
repnz
aas
icebp
cmp
xchg
mov
neg
loope
mov
xchg
jmp
lock
cmc
enter
div
rcl
fiadds
xchg
in
test
in
xor
xor
hlt
cmp
into
rol
cmp
cld
shl
cmp
mov
in
shl
test
lret
xor
out
cld
into
loop
icebp
rol
cmc
std
in
stc
out
lret
cmp
jmp
aad
sti
in
cli
int3
shll
cmp
std
ret
ror
enter
lea
inc
aaa
hlt
cmp
xlat
std
ffree
icebp
repnz
into
jmp
rcl
lock
fucompp
hlt
in
stc
filds
jmp
jmp
icebp
ficoms
jmp
icebp
cmp
int
out
ss
test
out
out
cli
in
out
test
xor
cli
xor
jmp
cmp
cmp
fidivrl
loope
cmc
sar
cli
fiadds
repnz
shr
xor
sti
int
fcmovnu
ret
test
enter
fcoml
into
jecxz
xor
fsqrt
ret
and
cmp
fldlg2
cli
mov
test
mov
loope
aad
cli
aad
repnz
fucom
loope
in
cld
fsub
notb
sub
ljmp
cmp
fimull
out
lret
test
in
leave
leave
fxtract
out
shr
jmp
fucomi
in
in
roll
jmp
mov
into
out
enter
fxch
cli
xor
fdiv
stc
and
loope
ret
in
nop
shr
shr
xchg
shll
int
out
aam
xlat
ret
in
clc
jecxz
in
fsub
and
lret
fsub
in
loop
add
shlb
cs
repnz
sbb
jecxz
ret
fstp
std
int
loop
sar
lock
jecxz
hlt
jecxz
out
sti
aaa
jmp
stc
fchs
test
in
mov
addb
xor
clc
repz
cld
in
cli
jmp
cmp
sar
fmull
in
mov
leave
call
in
cmc
xor
aam
int3
hlt
into
out
rol
repz
fiadds
shr
repnz
jmp
jmp
ss
xlat
out
ds
inc
xchg
fucomip
loopne
out
cld
nop
loopne
cmc
in
aas
loope
icebp
in
out
cmp
sar
rol
shl
and
fucomp
clc
sti
fisttpll
lock
fld
fcmovnu
loop
test
shl
repz
mov
aam
mov
mov
cmp
int
jle
add
fsubp
ljmp
test
jmp
ss
leave
fsubrp
ss
jecxz
aam
call
iret
xchg
enter
xchg
out
xor
xlat
xlat
ret
lret
aam
sar
or
out
ret
sub
mov
rol
test
das
iret
repz
cmp
loope
fnop
icebp
cmc
cmp
mov
in
lret
lret
faddl
leave
call
std
rcl
cmp
fcmovnb
faddp
in
in
out
test
test
lock
cmp
cli
loopne
shr
hlt
fsubr
cmp
xchg
ss
xor
jmp
cmp
ret
cli
aad
repnz
sti
call
xchg
in
addb
rol
cmp
shlb
repz
hlt
icebp
loop,pt
mov
jmp
in
xor
enter
cmc
cmc
sti
cli
fsubr
in
test
aam
cmc
leave
ret
mov
loopne
iret
sar
lock
fdivl
fndisi(8087
fcmovnbe
jmp
jmp
in
mov
xchg
out
imul
cmp
sti
into
cmp
fsubrp
std
cmpb
fmull
mov
out
xchg
shl
in
aaa
xor
ss
out
fcmovnbe
in
repnz
loopne
lret
orb
into
cmp
jmp
sbb
div
loopne
cli
hlt
out
in
stc
in
jecxz
int3
adcb
xor
fchs
fcomp
fdivrp
aas
loope
out
xlat
fisttpl
mov
icebp
int
xchg
in
rcr
repz
repnz
hlt
fcmovb
cmc
incb
call
leave
jmp
cli
xlat
stc
cmp
dec
fst
in
lds
jecxz
loop
xor
rcr
out
shll
loope
xor
cmp
int3
iret
shr
ds
ffreep
fcomip
loop
into
call
xchg
hlt
aam
ret
xor
sar
rcr
lret
addb
loope
lds
mov
call
ss
xor
enter
stc
int3
int
in
clc
not
xchg
cmp
orl
divl
iret
ds
fistpll
shr
cmp
lds
out
into
fmull
leave
out
ss
cmp
cmp
roll
mov
fucomip
rclb
sub
sarl
leave
repz
into
aad
lret
out
test
clc
mov
mov
cld
call
cli
shll
sarl
jmp
rol
and
cli
rcr
vpsubb
xchg
into
xchg
icebp
in
lock
out
into
out
std
into
iret
rcl
rcr
fdivp
fxch
lret
in
cli
test
mov
lock
int3
aad
repz
int3
aas
into
stc
fmull
enter
jecxz
shll
out
xor
aam
shr
aaa
sar
jecxz
fsub
cmp
ret
in
fisttps
cmp
hlt
xor
sarb
fucomp
loope
fmuls
aad
xchg
cld
int3
mov
xor
aaa
cld
icebp
cmc
cmp
rcl
in
clc
ljmp
out
out
out
int3
xor
cmp
shl
sti
aam
sarl
in
ret
xlat
lret
loopne
out
xchg
xor
das
ret
out
xor
xor
rorb
out
rolb
loope
das
cli
call
clc
not
in
mov
sub
icebp
lock
xor
les
hlt
cmp
fstp
cmc
imul
aad
incb
out
clc
cmc
xor
sarb
icebp
or
cmp
in
fdiv
mov
mov
mov
xchg
fsub
repz
sti
hlt
jmp
fadd
ds
shl
mov
fld
xchg
repnz
xor
ss
cmp
sar
sti
cmp
out
out
xlat
jmp
adc
hlt
xchg
rcl
cli
ss
fsub
loope
shl
stc
lds
cli
jecxz
ljmp
in
lret
repnz
cli
aad
sarb
shl
ret
loope
ret
loop
fisttps
in
mov
clc
fmul
cmp
cmp
ds
mov
mov
leave
mov
xor
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
adc
sarl
movsl
add
shl
iret
das
jmp
cmp
out
aam
xor
shr
std
clc
hlt
out
not
int
ljmp
ljmp
xlat
fcmove
adc
vpsubusw
aad
jecxz
xlat
out
iret
sti
sub
xchg
int3
aaa
clc
jecxz
stc
cmp
in
rcr
aam
out
stc
mov
mov
iret
out
xchg
mov
in
in
in
cmp
fstp
clc
cld
cmc
loop
mov
in
mul
leave
iret
std
repnz
rolb
div
leave
fucom
cli
loopne
ret
xchg
out
fcmovne
loopne
iret
cli
addb
out
out
out
sar
lret
fldl
mul
std
orl
nop
xchg
out
test
jecxz
lret
repz
sti
cmp
loope
int3
fdiv
xlat
ret
rcr
jmp
ror
iret
jmp
in
out
div
out
cld
cmp
fsubp
repnz
icebp
fidivrs
in
ljmp
faddl
xor
shr
cmp
cmp
neg
add
aas
cmc
in
out
int
xchg
shr
xor
out
cmp
lret
jecxz
stc
sar
icebp
sti
test
cld
fmulp
xchg
xchg
shl
int
das
lock
jecxz
xlat
xor
cmp
cmp
fiaddl
in
in
stc
addl
fcomi
in
hlt
aam
loop
test
cld
hlt
out
std
nop
loopne
mov
hlt
rol
leave
shr
call
fidivl
fsub
mov
loopne
xchg
repz
vcmpps
xlat
sti
out
jmp
cli
fcmovbe
loop
cmc
mov
aad
leave
out
in
out
jecxz
sub
in
idiv
lret
sti
cmp
imul
fsubp
shl
aam
les
loope
enter
out
fst
repz
call
lock
sti
test
rcr
rcl
aam
xchg
div
in
adc
jmp
xor
div
cmp
jmp
shl
sti
loopne
testb
out
mov
iret
out
ret
xor
out
fdiv
cli
xlat
repz
enter
orb
in
fmul
rcl
std
in
fmulp
shl
loop
cmc
fcmovnu
in
roll
in
in
in
out
ret
das
aam
in
cmc
aad
jmp
test
in
aas
rorb
into
xchg
lret
jmp
in
fcmove
in
faddl
in
sti
aad
call
test
cld
xchg
sub
out
enter
idivl
stc
ds
lock
add
aam
aam
testb
in
in
in
imul
repz
cli
iret
ss
out
ds
in
and
shl
jmp
cli
aad
xlat
into
ss
aas
jmp
aad
ret
lret
sbb
out
enter
in
enter
sar
jmp
fsubr
iret
aas
lock
addl
out
icebp
call
test
lret
sti
clc
lock
out
and
decl
enter
int3
in
test
ror
out
jmp
cmp
into
fmulp
rcr
ffreep
ret
clc
rorb
mov
ret
mov
xor
xor
cld
cld
iret
int3
in
cmp
ret
cli
inc
aam
leave
out
mov
cld
test
loopne
xor
stc
enter
and
loopne
fdiv
enter
lret
clc
adc
loopne
in
loop
lret
lret
cmp
out
xlat
cli
les
ret
call
mov
xor
shl
fistpll
int
repz
ffreep
fnstcw
sar
jmp
or
stc
in
into
mov
in
ss
lock
ss
loop
ret
adc
test
fimuls
xlat
jmp
in
lret
stc
out
aad
shr
adc
fistpll
rol
loop
fmul
mov
repz
add
in
cmp
aad
out
fidivrs
iret
fadds
decb
iret
icebp
xchg
xchg
icebp
rcl
out
out
cmp
int3
iret
into
xlat
fldl
stc
cli
cli
clc
jmp
xchg
loop
jmp
hlt
cmp
lret
div
out
cmp
test
mul
ffree
orl
jmp
out
cmc
fsubrp
aad
ret
aam
sti
clc
clc
adc
call
test
shr
enter
call
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
shr
ljmp
fiadds
test
add
mov
xor
stc
test
idivl
cmp
addb
rol
loop
in
ljmp
ror
repnz
loopne,pt
jmp
addb
hlt
fxtract
jmp
xchg
xchg
subb
xor
out
lret
fst
repnz
fadds
jmp
ljmp
out
clc
xlat
icebp
into
sti
in
repz
idivl
addb
std
idiv
call
test
in
iret
shl
fnstenv
clc
stc
jecxz
in
sar
test
out
mov
mov
out
jmp
repz
loope
cmc
shl
cmpb
nop
xchg
into
lret
iret
xor
fldcw
std
sbb
fptan
fucomp
xchg
fimull
xchg
sub
in
into
fdivr
ss
rol
clc
xlat
mov
mov
int3
int3
mov
lock
aad
ljmp
iret
aad
in
lds
fsubr
fucomp
test
icebp
mov
into
lret
repz
loope
clc
lock
sar
aam
mov
call
enter
in
decb
in
enter
in
filds
hlt
shl
rcl
aad
mov
flds
xor
fcmovb
ss
in
fst
fcmovbe
cmp
jecxz
lret
out
out
jmp
clc
cmp
stc
int
in
int
rcr
shl
into
mov
std
hlt
fisttpll
lret
cmp
icebp
into
int
rol
div
stc
inc
jmp
into
into
into
rcr
cmp
cmc
in
in
fadd
test
out
mov
clc
xor
enter
fldl
lock
test
lock
out
hlt
in
fucomp
iret
loop
xor
xor
lret
iret
xlat
fcom
cli
rcl
fdivr
repz
fisttpl
orb
ret
sar
aaa
shr
jmp
les
loopne
rolb
fucom
mov
out
int
cli
lret
iret
out
repnz
repnz
fistpll
out
lret
clc
test
mov
enter
jmp
iret
shlb
out
hlt
cld
ds
jmp
loope
rcl
stc
std
rcr
hlt
sub
out
nop
icebp
xchg
xor
dec
std
out
out
lret
fcmovu
sar
aad
out
mov
test
call
std
sti
aad
clc
rcl
cmc
aam
clc
rol
fucomip
ffree
int3
call
xchg
into
loop
fcomp
out
sarb
in
in
int3
or
cld
hlt
loop
xchg
fstp
in
out
out
sub
out
loope
shl
out
cmp
cld
rcr
mov
xchg
clc
loop
mov
in
into
or
xchg
shl
ror
xor
call
iret
and
iret
loop
lret
ret
clc
jmp
sub
iret
fmulp
shll
in
sti
into
jmp
ljmp
xlat
loopne
mov
icebp
out
loopne
out
div
xor
in
fcmove
out
xor
test
rol
xchg
in
fucomp
in
lock
out
aam
fxch
aaa
lret
call
clc
cld
jecxz
loope
idiv
int
test
xchg
call
cli
repnz
xor
lock
loop
leave
ret
incb
repz
loopne
ret
xor
out
cmp
out
ljmp
icebp
cld
loop
rcll
jecxz
out
sar
loope
aam
rcr
or
std
test
fldl
xor
xor
cmp
hlt
clc
sti
sbb
loopne
jmp
lea
xchg
loopne
rol
lds
ljmp
fcomi
hlt
cmc
test
div
jmp
leave
loopne
in
fmulp
xor
icebp
lock
cld
test
icebp
aad
addl
xchg
xchg
mov
repnz
hlt
hlt
fidivl
cmp
cmp
roll
ret
clc
jmp
xchg
iret
mov
in
icebp
ror
into
vpand
fsubr
ret
fdivrl
ret
movl
ret
stc
xor
cmpb
loope
rorb
mul
fsub
icebp
iret
icebp
mov
call
test
cmc
movl
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
cmp
jle
add
jecxz
not
clc
loope
out
ret
sub
ret
std
out
ffreep
sub
xor
xor
cli
xor
repnz
leave
int3
xchg
hlt
loop
xchg
xor
fdivrs
cmp
cmc
loopne
in
loope
xor
xlat
out
sbb
test
call
icebp
sarl
cmc
cmp
in
in
cli
lret
sti
test
in
cmp
mov
lock
fidivrl
aam
in
lret
xor
repnz
fiaddl
std
int3
cld
int
mov
out
out
ljmp
pushl
idiv
icebp
cmp
loopne
rolb
mov
nop
out
mov
shl
icebp
xor
aad
icebp
cmp
out
loop
repz
mov
ljmp
rcl
out
loop,pn
int
aam
loopne
out
cli
std
cmp
in
fdivr
aad
xor
in
jmp
iret
ss
lret
xor
not
fsubr
iret
sti
fcom
ret
clc
mov
std
out
shr
cs
into
hlt
cmp
enter
lret
fidivrl
cmp
out
ret
sti
stc
in
fisttps
loope
shr
cmp
ds
rcl
fadds
aas
test
mov
xchg
xchg
shrb
out
in
cmp
rol
sar
jmp
test
int
xor
das
out
ljmp
flds
rorb
iret
fucomi
out
aad
out
xor
cmc
neg
out
fnstsw
stc
stc
ret
out
shl
out
hlt
in
out
enter
out
xchg
jmp
hlt
sub
repnz
leave
fmul
repnz
cmp
xor
vcmppd
test
mov
cmc
cmc
shrb
shr
hlt
fsub
ds
xor
rcr
mov
testl
in
shl
in
xor
aad
adc
icebp
loope
loop
ret
cmc
loopne
clc
iret
out
fucomp
mov
lret
loop
cmp
idivl
repnz
cmp
cmp
sti
aam
mov
enter
out
popl
xor
xor
cmp
iret
out
add
aad
fstp
out
call
mov
iret
clc
jmp
cmp
cmc
neg
cmp
out
loope
call
call
fucomip
call
mul
call
into
cli
stc
shl
lock
sti
jecxz
cli
sti
fucomip
test
xchg
hlt
jmp
out
out
idiv
out
idiv
neg
sarb
loope
fsub
fldl
std
in
xchg
jmp
fucomi
aaa
cld
xor
rolb
roll
iret
xchg
xchg
lea
int
fcmovu
xor
clc
cmp
fmul
out
rorl
fcmovne
out
xchg
in
mov
xor
aaa
fdivr
repnz
xchg
ljmp
test
int
out
stc
fcom
std
lret
clc
cmp
aam
jmp
icebp
test
shll
iret
ss
aaa
cld
lock
hlt
xlat
hlt
fndisi(8087
stc
cmp
stc
mov
call
test
iret
int
cmc
int
sar
hlt
sti
out
cmp
hlt
lock
hlt
jmp
int
cli
in
jmp
test
cmc
repz
out
aam
icebp
int3
into
sar
rcl
mov
enter
std
int3
sar
out
xchg
shr
repz
aaa
into
icebp
into
cld
cld
clc
addl
out
in
ljmp
shrl
xor
out
idiv
loope
loop
ret
loope
loope
xor
int3
nop
fsubrp
test
out
rol
xor
icebp
int
stc
into
stc
aaa
cld
fidivrl
sar
cld
xchg
out
cli
jmp
jecxz
aad
out
das
loope
jmp
ss
flds
cld
in
not
in
xchg
dec
fimuls
int3
sub
shl
aad
loop
cld
sarl
add
in
out
incb
hlt
imul
repz
sti
fadd
cmp
test
clc
std
imul
lret
movb
aas
into
fcom
fldz
icebp
xor
cli
icebp
ret
repz
jmp
test
sub
xlat
xor
xor
fidivrs
rolb
jmp
in
out
leave
cmc
xlat
ret
shlb
jmp
jecxz
clc
shl
cmp
mov
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
ja
pop
mov
jle
movsl
add
repz
sbb
addb
ror
ret
enter
lock
in
in
out
cmp
fdivr
lret
clc
mov
xor
div
stc
cs
sti
int3
lock
in
test
out
ljmp
in
clc
out
ljmp
fstp
shr
addl
fcomi
cld
lret
loopne
sub
lret
aam
sti
sub
clc
ret
fsub
aas
sbb
call
test
lock
loopne
fld
out
xlat
std
jecxz
rol
test
mov
out
std
lea
sub
iret
into
sti
cld
rcr
ret
loope
fucomi
mov
in
ljmp
adcb
call
icebp
hlt
mul
out
sarl
xor
fildl
ljmp
int
xor
hlt
cmp
imul
out
in
call
roll
jmp
call
jmp
hlt
leave
int
ret
hlt
loope
neg
or
fcmovu
iret
out
icebp
ljmp
leave
shl
lret
shll
rcr
aam
out
test
lds
cld
test
out
out
rcl
ret
cmp
ds
std
sar
repz
out
movb
jmp
leave
mov
div
ss
fdiv
fsubrp
or
clc
ffreep
neg
test
fcomip
xchg
loopne
xchg
jmp
jecxz
cmp
sar
cmp
ror
hlt
ret
leave
not
rcl
xchg
rolb
out
out
cmp
lret
filds
loopne
cmp
mov
fsubp
int3
ljmp
ss
ss
aad
aad
xlat
lock
loopne
xchg
cmc
cld
loopne
in
xchg
repz
int
rcr
cmp
loop
rol
ret
out
cmc
out
cld
mov
fisubrs
lret
hlt
vaddsubps
shl
roll
test
stc
mov
in
loopne
jecxz
shl
mov
fdivl
fmul
aas
shr
int
repnz
hlt
in
ljmp
stc
rclb
int3
test
aad
enter
cli
rcl
movb
lret
xchg
icebp
vpsrlw
xor
jmp
enter
out
rcr
div
loopne
fmuls
in
xchg
lret
iret
hlt
call
sub
aaa
aas
cli
add
fdiv
loope,pt
out
clc
leave
into
mov
jecxz
icebp
lret
call
out
int3
ss
shl
shl
sti
jmp
mov
lret
repz
mul
int3
into
ljmp
shr
std
aam
cmp
aad
fst
mov
fcomip
ljmp
fcmovb
repz
jmp
repnz
test
aas
aad
fdivrp
jmp
lret
int
call
mov
or
fcmovu
lock
out
add
cmp
fisttpl
into
mov
mov
out
cmp
in
repnz
ljmp
enter
sti
test
loope
fsubp
enter
aaa
sar
fmul
lret
fnstsw
shl
test
idiv
int
jecxz
rcll
xor
cld
lock
stc
cld
loop
sti
cmp
fidivrl
sti
idiv
test
lea
mov
cmc
lret
lock
loope
icebp
in
ret
cmc
imul
int
xchg
icebp
roll
xor
xor
sarb
in
stc
out
loope
test
xchg
shl
clc
lret
enter
stc
xlat
loopne
hlt
jmp
ffree
in
cmp
orb
loop
out
lret
ds
cmp
cmp
xor
fsqrt
ljmp
shl
loop
out
jecxz
aam
repz
aas
int3
hlt
not
incb
vpsubsb
xchg
sar
pop
leave
xor
cmp
out
out
and
stc
cld
test
mov
mov
shr
idivb
out
fidivs
loop
aad
inc
mov
fdivr
out
cli
flds
hlt
lret
lret
test
fdiv
out
rol
mov
ds
rorl
mov
aad
in
iret
fxch
hlt
loopne
cmp
loope
out
jmp
leave
fmull
popf
add
mov
mov
jmp
int3
enter
lret
int
stos
test
mov
in
jle
add
xchg
mov
call
xor
cli
jmp
loope
cmp
lock
call
lret
cld
out
adcl
aaa
clc
cs
out
cmp
cmp
rorb
call
jmp
in
imul
in
in
ss
loope
stc
xchg
ret
and
loopne
fldl
fsubr
loopne
jmp
fdivrl
roll
fcmovbe
orl
jmp
loop
aaa
rcr
loopne
cmc
fndisi(8087
fst
mul
ret
hlt
enter
movl
cmc
lock
sti
xor
out
shl
idivl
fsubp
repnz
add
fdiv
jmp
repz
xor
aaa
in
out
iret
fucom
jecxz
out
aad
xchg
orl
xchg
ror
ret
les
aaa
ss
out
cmp
idivb
aad
hlt
std
sti
jmp
mov
sar
out
ror
icebp
cmp
ret
icebp
bnd
repnz
test
xchg
out
in
ret
ret
ss
lret
shl
fildl
flds
jmp
repnz
addl
in
out
fildl
fdivr
rcl
fscale
or
out
int
fucom
mov
jmp
shl
fcmovnbe
fnstenv
cmp
xor
idiv
enter
sub
test
loop
shl
rcl
in
ret
iret
std
loop
faddl
aad
ret
out
fdivr
ror
mov
decl
cmp
cmp
fcomip
cmp
int
sti
test
clc
in
jecxz
mov
xchg
call
mov
std
in
lret
add
rcl
xbegin
fmuls
cmc
in
xchg
das
into
idivl
int
int
lret
loop
ret
loope
in
rcr
ljmp
shr
shl
aad
cmc
into
out
iret
xlat
cmp
cmp
lock
cmp
fsubr
test
fisttps
loop
lock
repz
lret
lret
xor
rolb
std
loopne
out
sar
cld
xchg
std
xor
aam
shl
jmp
cmp
aad
ds
shl
hlt
faddl
sub
xchg
nop
enter
jecxz
cld
cli
out
fistpll
fcmovnu
loopne
test
jmp
icebp
int
in
xchg
lock
xor
enter
lret
iret
aad
jecxz
rorl
test
int
or
ret
out
cmp
cmp
fmulp
addb
repnz
hlt
sub
rcl
xlat
into
into
add
jmp
xchg
in
xchg
jmp
cmp
vcvtpd2dqx
imul
out
cld
rol
aas
xchg
fcmove
mov
nop
jecxz
ljmp
sarl
in
icebp
aas
rcl
repz
test
jmp
mov
lret
fisttpll
shlb
aad
int
cmp
cmp
aas
call
test
cld
repz
in
xor
cli
iret
sarb
xor
fcmovnbe
mov
nop
xchg
in
mov
jecxz
out
repz
ljmp
cli
out
mov
fcmovnu
test
mov
out
into
lock
cmp
add
call
in
mov
cli
out
iret
xchg
ror
cs
das
out
int
call
xlat
cmp
cld
loope
shl
clc
xchg
in
out
std
into
lock
into
jmp
sti
neg
lret
ljmp
rol
cli
ror
loopne
addb
xchg
ror
lret
cmp
cmp
aam
fsub
cmp
call
into
cmp
cs
cs
sti
cld
cld
add
cmp
sbb
aad
flds
xchg
call
stc
fdiv
stc
rcr
hlt
stc
into
cli
call
fcomip
sti
enter
in
mov
nop
xchg
into
xor
out
jmp
lret
loope
fcmovnu
cmp
jecxz
ret
cmc
jmp
mov
xor
iret
in
clc
cmp
into
sbb
int
fiaddl
fld
clc
leave
cld
sbb
aas
enter
fst
into
hlt
icebp
fdiv
ret
out
lret
aam
fucom
cli
mov
cmc
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
loop
aam
hlt
into
cmc
loop
iret
xchg
cmc
hlt
sbb
lret
mov
lret
int
xchg
dec
out
test
lret
fidivrs
cmp
aad
cmp
and
mov
xchg
cs
xor
into
into
int
dec
test
sar
aad
out
nop
jmp
xor
icebp
shl
aaa
push
int3
not
sarb
faddp
call
add
out
mov
jmp
fsubrp
loope
fsincos
cmpl
test
rcl
sbb
iret
rolb
in
in
sub
aaa
fldl
iret
cmp
cld
out
call
jmp
fyl2xp1
lock
out
cld
rol
cmp
cld
sbb
mov
std
faddl
in
imul
leave
stc
imul
std
aas
repnz
in
cli
test
stc
out
lock
shr
out
out
xor
ss
lret
std
sar
mov
mov
ljmp
std
mov
lock
call
cmc
aas
fstpt
sti
cli
movl
jmp
ljmp
aad
hlt
repnz
xlat
repnz
inc
lret
ljmp
shl
rcl
ret
shr
shl
ljmp
aas
fdivr
neg
mov
jecxz
xchg
into
ret
lret
sti
std
cmp
ljmp
ds
mov
xchg
xchg
lret
ljmp
cmp
loope
cmp
test
out
vpmaxsw
ret
sar
xor
cld
cli
repnz
ret
in
movl
shll
out
aad
call
aas
rol
fcmovu
xlat
adc
cli
loopne
loop
xchg
mov
mov
xlat
cmp
into
in
cmp
cmp
aas
fstp
out
mov
fmull
clc
fdivr
cmp
xlat
aam
testl
neg
ret
xlat
enter
mov
ror
icebp
xor
lds
out
call
int3
sar
in
and
cmp
out
in
aaa
in
icebp
ljmp
out
icebp
lock
icebp
test
jecxz
in
xchg
addb
cmp
int
std
aaa
cli
into
rcr
sar
repz
aam
cli
enter
int
les
in
hlt
cmp
idiv
out
fdivrl
sbb
repz
leave
lds
out
icebp
mov
adc
hlt
rcl
cmp
in
xor
sti
loope
iret
shr
mov
ljmp
addl
enter
cmp
cmp
add
xchg
xchg
sar
mov
leave
clc
call
mov
fcmovnu
ds
int3
fcomp
out
in
jecxz
loopne
out
test
jecxz
sti
ljmp
jmp
rcr
loope
cmp
cmc
xchg
mul
cli
stc
icebp
cmp
jecxz
cmc
cmc
fnop
clc
cmp
fcomp
rcr
loope
ljmp
in
mov
fucom
aam
xor
enter
lret
xlat
cmp
faddl
lret
popl
shr
loope
shr
ret
in
in
cmp
into
fsubp
test
hlt
stc
xlat
loop
lret
test
out
nop
dec
shlb
lret
fcmovbe
lret
lret
shl
addl
iret
shl
jmp
das
iret
lock
cmc
shl
xor
cmp
std
hlt
fsub
loopne
mul
int
std
shl
lock
mov
jmp
idivb
ds
lock
mov
shr
enter
call
divb
ljmp
lret
cld
ret
icebp
clc
fadds
int
mov
repz
ret
aaa
adc
cmp
out
leave
sti
clc
int
lock
mov
hlt
hlt
jmp
lret
fsubr
cmp
lret
rolb
test
call
in
dec
or
loop
in
aaa
out
cmp
ljmp
addb
enter
out
fucomi
out
sub
cmc
stc
sti
rcl
xor
shl
repz
lret
xchg
test
rcr
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
inc
fisttpll
movsl
add
or
roll
fprem1
in
out
enter
xchg
addl
out
ds
out
bnd
out
lret
lret
out
nop
call
clc
int3
leave
ljmp
fst
repz
add
cld
mov
cli
nop
fmul
sar
out
hlt
xor
ss
xor
ror
jecxz
incb
cli
xchg
in
mov
out
nop
call
jecxz
xor
sti
out
bnd
testl
testl
das
cmp
aaa
jmp
clc
loopne
into
into
out
sti
cld
mov
test
lret
in
fucomp
aad
cmc
in
in
call
int3
aam
repz
cld
hlt
aad
loopne
test
enter
ljmp
leave
aaa
jmp
rcl
cld
sar
fmul
lea
and
lret
cmc
clc
xor
fnstcw
fstp
shr
out
icebp
aam
test
jmp
iret
fmulp
icebp
repnz
ffreep
repz
aam
cmp
xlat
sar
out
cld
hlt
fadd
aad
mov
stc
mov
out
mov
out
in
clc
in
int
lret
fst
loop
in
loope
aas
in
loopne
fdivrp
fsubrp
mov
cld
in
rol
out
in
bnd
cmp
fsub
jmp
loop
iret
loope
shr
enter
lock
enter
in
cmp
ret
cli
fildl
call
shl
xchg
bnd
aad
in
jmp
jmp
icebp
loope,pt
lock
ljmp
out
xchg
xor
fidivrl
cmc
repz
rcr
aam
in
ss
aad
rcl
xchg
cld
mov
jecxz
lret
lret
fcomi
cmp
cmp
lret
iret
int3
hlt
ret
cld
cmc
loope
fcom
clc
call
out
repnz
nop
shl
out
rcr
lret
cmp
loope
sti
xchg
in
mov
into
xor
cmc
xor
cmp
into
fdiv
adc
cmp
out
test
cld
loop
jecxz
nop
das
jmp
test
ror
ror
in
out
ret
loop
clc
faddp
xlat
jmp
loope
add
out
xor
ljmp
jecxz
cmp
hlt
mov
rorb
orb
repz
std
cli
xlat
cmpl
enter
in
clc
iret
fisttpl
leave
shlb
jmp
cmp
xlat
sti
aam
cld
fucomp
stc
in
sti
mov
xchg
mov
lret
jmp
out
repz
sti
rcr
rol
loopne
sarb
in
aad
mov
xchg
rcll
lock
loop
loop
loope
rcl
shr
in
lret
test
std
ljmp
xor
hlt
idivb
fldl
iret
fdivrp
jmp
les
loopne
cmp
rcl
fdiv
rcl
sarb
ret
sar
xchg
fcomp
imul
fmull
into
sar
in
jmp
imul
idiv
ds
rol
add
cld
xlat
out
in
jmp
xchg
rorb
enter
fmulp
cmp
repz
call
sti
mov
fsubr
nop
mov
ljmp
cli
inc
cld
fiadds
loop
jmp
cli
cld
test
call
jmp
call
fucomip
out
in
in
enter
cli
std
loope
loope
jecxz
rol
xor
clc
cmp
fldl
orb
jecxz
xchg
clc
fcmovb
fsubp
int3
cmp
into
in
fst
or
shl
cld
les
lret
out
loop
xchg
lret
out
cmp
repz
jecxz
aas
aam
sti
stc
fadd
int3
jecxz
in
nop
icebp
repz
jmp
xor
stc
aam
or
mov
sti
fcmovbe
testl
cmc
out
out
shr
icebp
aaa
repnz
fadds
repz
in
in
fcmovnbe
std
repz
rcl
xor
xor
hlt
cmp
std
in
icebp
xor
fsub
mov
out
hlt
repz
out
std
jmp
fiaddl
icebp
out
jecxz
xchg
out
cld
rorb
leave
sar
in
cli
hlt
out
fstpt
shr
test
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
mov
bnd
movsl
add
in
cmc
cld
lret
mov
fimuls
xchg
ss
cli
xor
sarl
fsubp
int
repz
test
leave
int
jmp
sti
loopne
mov
aaa
aaa
hlt
shr
cmp
fucomp
mul
ds
testl
ljmp
in
out
out
sar
out
push
aad
aas
int
rcl
vpmovmskb
test
fdiv
mov
xchg
in
ror
in
cs
cmp
int3
cmp
stc
sarl
mov
ljmp
out
sar
call
cmp
in
out
lret
flds
repnz
loope
mul
shl
int3
fdivr
in
cmp
rcr
mov
mov
xchg
fildl
into
in
into
cmp
fcomi
in
in
ljmp
ljmp
in
aaa
clc
cmp
sarb
stc
cmp
lea
call
in
xor
jmp
icebp
shr
cmc
in
in
fcmovnb
stc
xchg
or
loop
stc
out
movb
out
sarl
ds
fdivp
fdivrp
loope
rcr
call
lret
loope
lock
out
loope
xlat
repnz
out
in
fxch
rcr
cmp
cmp
loope
add
fcmovu
lock
leave
iret
out
ror
ljmp
fsubp
shl
out
jmp
jecxz
fimuls
mov
aad
rol
sub
icebp
cmc
lock
aam
xchg
addl
call
in
iret
into
jecxz
flds
sbb
fprem
rol
jmp
call
xor
int3
jmp
shrl
cmc
fildl
cmp
loop
test
sti
fucomi
sti
orb
fdivs
sti
jmp
sti
leave
repz
cmp
in
incb
sub
lock
cmc
int3
fcomip
fsubr
out
in
mov
fucomip
enter
rorb
clc
shr
out
in
icebp
cmp
xor
mov
mov
fnclex
iret
icebp
fiaddl
in
xor
xor
xlat
fidivrs
fcomp
lock
xor
xchg
aad
out
lock
xchg
xchg
test
ljmp
int
fmulp
cmp
cmp
cld
shr
call
mov
xchg
iret
repz
cs
ljmp
ret
movb
fcomp
test
jmp
xor
aam
cld
lret
std
out
cmp
cli
stc
sti
faddl
xchg
orb
shrb
ljmp
fdivrp
aas
icebp
sar
shl
mov
fimull
xchg
xor
jmp
cmp
rcr
out
xlat
aaa
aam
loop
repz
test
cli
test
test
adc
shr
in
fnstcw
ror
fcmovbe
testb
mov
mov
hlt
vpsubd
icebp
in
lret
ljmp
std
xlat
fsubrp
jmp
icebp
mov
xchg
xchg
loope
xlat
int3
xor
int3
out
aad
fistpll
jecxz
rol
xchg
imul
dec
call
fcmovnbe
aad
clc
das
shl
out
lock
std
cmp
jecxz
incb
jecxz
jmp
repz
into
ret
repz
cld
aaa
enter
std
xchg
test
enter
in
fcmovnu
jecxz
shl
xor
lret
repnz
out
lock
in
fistpll
repz
cld
sbb
xlat
out
fabs
out
int3
std
iret
adc
int
stc
ljmp
cmp
repz
repz
out
enter
rcll
jmp
clc
std
xor
lret
clc
stc
aam
in
filds
cld
popl
jecxz
cmp
cmp
roll
aad
in
xchg
fdivr
fnstsw
mov
out
in
icebp
xor
cli
ds
clc
add
rol
loope
sub
mov
cmp
in
aad
fistpll
xlat
shr
aas
cmp
std
in
jecxz
nop
mov
xchg
int
lock
xor
ret
dec
fdivrp
clc
lret
shr
in
fcmovne
cld
lock
cmp
inc
or
or
mov
ror
aad
fldt
sbb
je
jle
movsl
add
test
mov
in
ljmp
and
icebp
aam
cmc
std
loop
aam
enter
lock
rclb
aaa
in
out
xor
out
aas
cli
adc
leave
cmp
std
fld
repz
xchg
or
loop
test
cmc
int3
xor
repz
cld
addb
fdivrp
loopne
out
sar
lock
int
shlb
aad
in
cmp
add
jecxz
out
out
icebp
adcl
out
call
sub
adc
test
mov
sti
fiaddl
call
cld
into
cmp
cli
loopne
cmp
test
in
lret
jmp
fists
cmp
ror
fstpt
cmc
faddl
out
out
fsts
ljmp
in
fcmovnu
stc
ljmp
jecxz
fucomp
jmp
sti
jmp
repnz
fimuls
rcl
lret
repnz
std
cmc
aas
ss
rcr
xlat
test
jmp
fmul
out
mov
xchg
int
out
sti
div
sti
shl
aaa
cmp
ret
into
aad
cmp
stc
ffree
adc
fldl
divl
fcmovbe
in
fcmovne
icebp
aad
rcl
iret
test
mov
int3
cld
xchg
lret
iret
aas
loopne
lret
idivl
lret
cmp
in
filds
repnz
lret
in
out
sti
lock
ror
out
idiv
ret
cmp
lock
in
dec
out
sbb
hlt
into
xchg
ljmp
cmp
iret
repz
rcr
rcl
out
xlat
fstp
loop
loop
mov
addb
into
fdivp
sar
aad
xchg
repz
lret
test
in
out
out
loop
cmp
lret
fnstenv
faddl
xchg
cld
out
enter
in
into
shl
xor
fsqrt
call
lret
aad
rcr
cmp
call
cli
fmul
in
int
not
repz
xlat
rcl
out
cmp
fucom
icebp
call
mov
into
icebp
rcr
and
leave
cmp
xor
cmp
jecxz
ss
lock
out
jmp
loop
xchg
mov
out
xor
ss
stc
addl
sub
fdivr
lret
std
cmp
mov
ljmp
out
ljmp
fst
fldl
repnz
nop
icebp
hlt
in
jmp
sti
out
cli
cmc
xlat
not
cmp
neg
out
mov
clc
movl
in
hlt
out
ds
icebp
into
int
clc
aas
ret
xchg
out
mov
fildl
out
clc
rcl
enter
std
cmp
adc
out
in
jmp
mov
ret
imul
in
cmp
icebp
ffreep
adc
xlat
enter
clc
out
test
cmp
in
std
enter
cld
in
idivb
mul
sar
jmp
out
out
mov
shr
lret
loopne
icebp
xlat
repz
cld
icebp
fdiv
enter
into
aaa
rcl
shl
enter
fstp
addl
lret
enter
sar
aas
sbb
into
in
out
leave
loopne
faddl
hlt
rcl
cld
cmp
cmc
fcompp
fcomp
stc
cli
std
out
in
int
int3
fildl
faddp
jmp
jmp
repz
std
in
hlt
roll
in
iret
out
icebp
orb
aad
in
cmp
int
stc
cld
stc
sub
jecxz
iret
mov
out
iret
lret
out
ljmp
out
xlat
icebp
loopne
xlat
cli
mov
ffreep
in
in
bnd
int
clc
icebp
cli
iret
imul
shl
cmp
clc
xlat
cmc
shl
stc
int3
shr
out
fucomp
lea
rcl
jmp
jmp
roll
fcmovb
test
mov
or
xor
sarl
out
xor
into
cli
in
int
in
fsub
mov
adc
lret
mov
xchg
aas
not
ss
iret
out
in
fdivp
xchg
in
in
xchg
xchg
in
ljmp
cld
imul
aad
cmp
div
test
jmp
fsubrp
call
add
add
jmp
aam
iret
int3
fst
outsl
fmull
mov
cmc
fwait
sti
jle
movsl
add
jmp
jecxz
cmp
int3
out
std
fsubrp
fmul
repnz
cld
loope
stc
fimull
int
int
cmp
leave
jmp
out
out
ljmp
cmp
loope
cld
out
xchg
ljmp
cmp
stc
cmp
ret
ffreep
repz
test
in
loopne
mov
jecxz
lret
cli
out
cmp
xlat
sar
mul
and
cmp
decl
repz
out
in
fcmovnbe
int
icebp
ljmp
ret
xchg
lds
mov
rol
loop
ss
fnstenv
cmp
cmp
dec
cmp
loop
fcom
test
out
mov
mov
xchg
repz
into
cmc
in
icebp
in
aaa
fsub
fmul
sti
loop
xor
loope
fxch
lret
lock
lret
leave
ljmp
lock
out
rol
mul
ret
call
mov
mov
lock
cmp
jecxz
fnstsw
cmp
mul
add
fiadds
sti
aad
cld
orb
not
xlat
imul
call
in
aad
cmp
icebp
call
test
xchg
mov
lret
hlt
mov
cmp
aad
loope
ljmp
fimuls
shl
out
shl
cmp
divb
rcr
loope
lock
iret
and
fprem
orl
das
das
hlt
out
ljmp
jecxz
fdivrl
stc
fsub
out
mov
out
loopne
shr
loopne
ret
xor
xor
iret
xor
aam
rcr
cmp
fadd
sti
xlat
lret
out
in
mov
lret
jecxz
call
xor
call
std
jecxz
div
cld
out
leave
in
fcomip
enter
aam
in
das
ljmp
lock
cli
into
in
xchg
in
adcl
rol
in
shlb
cmp
fadds
xchg
in
rcl
in
std
shl
enter
cmp
shl
sbb
ret
ret
sbb
fisttps
mov
mov
in
shr
enter
aaa
in
cmp
ret
shl
out
cli
aas
addb
loopne
lret
aam
repz
xlat
icebp
lret
std
fiaddl
mov
xlat
in
out
enter
in
in
xchg
imul
loop
cmp
xor
loopne
ror
aad
shl
roll
sar
fucom
rolb
lret
cmp
shl
in
cmp
rol
test
and
orl
rol
out
in
sti
loope
hlt
cmp
clc
incl
call
and
repz
aad
loop
div
ret
test
out
and
mov
call
xchg
jecxz
xor
ss
ss
aam
fprem
jecxz
cmp
enter
xor
rorb
clc
aad
fld1
into
jmp
rcr
shl
hlt
inc
test
sbb
loop
fucom
nop
rcr
shl
jecxz
clc
int3
cmp
incl
ffree
out
fsubp
cli
cld
jecxz
repz
ljmp
out
out
leave
cmp
aad
in
in
rol
in
mov
mov
int
out
out
repz
xor
sti
fpatan
cmp
hlt
test
fucomp
jmp
decl
loope
xchg
in
call
cli
clc
cmp
out
shl
icebp
icebp
repz
loopne
in
mov
lock
xlat
clc
sarb
in
rcl
aam
fmuls
mov
inc
icebp
loope
ljmp
fsubr
stc
addb
in
out
cmp
iret
jecxz
aad
shll
cli
icebp
imul
enter
lret
icebp
in
roll
in
mov
icebp
enter
iret
xlat
fcmovne
sarl
inc
mov
and
fucomip
mov
in
jmp
repnz
loopne
jmp
lret
sarb
enter
push
fildl
cli
inc
fcomi
sub
adcb
cs
icebp
lret
ss
cld
ds
hlt
shl
cli
in
dec
jmp
jmp
in
shr
aad
cli
xor
ljmp
fstp
ret
xchg
mul
loopne
loop
loope
repz
in
lret
sti
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
cmp
movsl
add
out
fstpt
int
cmp
enter
cld
loope
stc
fcmovu
mov
sarl
rcl
cmp
rcr
cmp
ret
sarb
testb
enter
xchg
xchg
call
xor
enter
shl
aas
ds
fsub
incb
xchg
in
cmp
mov
lret
int3
xor
leave
rcr
out
ftst
addb
ret
test
test
in
xor
lret
xlat
repnz
jecxz
shl
mov
cld
test
repnz
leave
fdiv
cmp
cli
rol
std
decb
lock
icebp
xchg
xchg
shr
aam
repnz
repz
int3
loopne
out
ds
rcl
std
jmp
into
call
repz
aaa
rcr
ds
fcmovb
stc
hlt
xlat
div
neg
clc
fsub
out
in
jmp
cmp
in
out
clc
lret
hlt
ror
repz
fcmovnb
cmp
mov
aad
testl
int3
in
int3
div
cmp
cmp
jmp
xor
shl
add
xlat
test
rcll
in
shlb
cmp
iret
int3
shl
in
fadd
in
rol
cld
ffree
out
mov
ror
out
shl
loope
hlt
in
cmp
aad
neg
shr
rcr
aaa
iret
ds
fiaddl
in
cld
std
in
fiadds
xor
jmp
cli
ljmp
mov
into
fsubr
mov
shl
repz
xlat
fsqrt
aad
sub
cld
iret
aam
out
cld
clc
leave
aas
loopne
push
icebp
rcll
out
jmp
cs
ljmp
shl
cmc
fstp
cld
hlt
loopne
out
lret
mov
fisttpll
into
hlt
leave
repnz
cmp
icebp
sar
repnz
sar
in
xchg
enter
sti
cld
orb
stc
in
fst
adc
sar
out
cli
aam
neg
hlt
in
in
loope
or
mov
cs
jmp
ljmp
cmc
out
mov
repnz
mov
out
shl
rcl
xor
in
jmp
enter
aad
into
enter
in
loope
imul
ss
in
aad
hlt
cmp
repz
orb
into
sar
loop
shlb
rol
xlat
fcmovbe
int3
out
shr
cli
rcl
shl
mov
stc
cld
push
lock
test
fsubr
cli
ss
cmp
aam
repnz
fsincos
int3
fdivr
int
fldl
int3
stc
out
in
std
jmp
adc
and
idiv
out
nop
sar
fucomi
xchg
imul
shl
sti
out
fucomip
int3
adc
aad
aam
enter
fists
xlat
int
cmp
std
in
shr
shr
fsub
clc
test
call
in
xchg
out
int3
ljmp
in
lret
lret
loopne
test
fst
xchg
mov
xlat
les
addb
aam
xor
jecxz
aam
cmc
stc
loope
test
sbb
xor
into
cmp
xor
out
loopne
test
enter
in
mov
xchg
shl
lret
notb
ror
call
rcr
in
hlt
lock
aad
test
fsub
ret
and
int3
shl
out
lret
mov
fstpt
int
cmp
sar
rol
mov
mov
mov
rcl
xchg
out
aam
xor
xlat
les
sarl
rol
faddp
repnz
xchg
in
out
jmp
icebp
iret
rol
out
ljmp
sar
fiadds
mov
mov
xchg
icebp
rol
cli
jmp
out
cmp
ret
and
call
lock
repnz
fnstenv
cmp
imul
fcom
jecxz
mov
lret
fcmovnbe
xchg
xchg
lea
xlat
fsubrp
into
fcomip
loope
out
xlat
mov
dec
mov
mul
fadd
ljmp
aas
rcr
xchg
idiv
xlat
xlat
loop
faddl
loope
test
in
repz
icebp
int3
aad
testl
std
sar
xchg
test
out
jmp
aad
add
mov
mov
xor
add
jmp
rol
xlat
int
arpl
mov
cli
int3
add
test
movsl
add
hlt
std
in
ret
call
sub
hlt
xchg
fsubp
rcl
out
repnz
ds
les
loop
clc
loope
mov
out
int
xlat
stc
cli
sar
cmp
cmp
repz
cmp
enter
fucom
leave
int
int
xchg
sub
sti
into
ds
fcom
fadd
ret
cmc
loope
fiaddl
repnz
aad
ret
out
xor
loopne
ffreep
repz
fld
cmc
testb
les
xor
cmp
int
shl
shr
or
jecxz
mov
fldl
fldcw
clc
cli
aad
aaa
fst
cmp
ret
rcr
jecxz
add
lret
sar
mov
in
xor
repz
cmp
loop
in
xlat
fcmovnu
cli
rcr
repz
aas
xlat
out
jmp
ljmp
xor
cmp
loop
in
test
loop
in
mov
clc
aad
aam
aam
cmp
leave
fldln2
stc
clc
rorb
fsubp
repnz
std
ror
sub
lret
in
cmp
in
icebp
cmp
mov
ljmp
ljmp
cmc
out
fnsave
fcomip
shr
in
cmp
hlt
fsubp
cmc
and
ljmp
xchg
jmp
std
ljmp
lock
out
out
cld
nop
cld
adcl
xor
xlat
out
icebp
aad
aaa
loopne
imul
in
jecxz
ljmp
hlt
cmc
xchg
xor
xlat
icebp
call
std
cmp
loop
fcomp
cmc
jmp
test
in
jecxz
rol
sub
in
icebp
sarb
cmc
and
repnz
xlat
jmp
in
jmp
repz
jmp
fmul
cmp
fdivp
decb
fadd
out
loope
or
out
shl
xor
neg
xlat
rol
cmc
ds
mov
loope
addl
sar
ljmp
jecxz
test
aas
fucomi
mov
xchg
lret
not
xor
std
ror
cmp
fucomip
jmp
std
cli
lea
repz
shr
in
std
iret
sar
loop
loope
cmp
sti
testb
mov
xor
cmp
out
xlat
std
cmc
cmc
ret
loope
cmc
cmc
cld
fmull
jmp
sar
repnz
hlt
cmp
xor
call
jmp
sbb
shr
loope
out
repz
fdivr
xlat
into
into
int3
cli
testl
jmp
rolb
call
std
cmpl
not
rol
cmp
mov
cmp
out
out
lret
xchg
ret
cmp
cmp
aam
rcr
out
add
fisttpl
fstp
xchg
aad
out
shll
int3
cmp
int3
in
cmp
addl
ds
fsubrp
into
mov
aad
aas
clc
in
std
aaa
xor
fcmovnb
out
aas
roll
mov
jecxz
cmp
xchg
vpxor
repnz
cli
lret
int3
test
out
loop
xchg
enter
leave
enter
jecxz
repnz
xor
ss
into
cli
shl
not
in
fadds
leave
std
xchg
xchg
shl
ret
hlt
int3
repnz
fcomip
stc
aad
out
mov
int3
lret
nop
ror
rorb
repnz
repz
xlat
leave
fnstsw
cmpb
rcr
ret
ljmp
jmp
call
icebp
lret
in
call
int3
out
fadd
aam
out
icebp
cmc
fdivrp
enter
fisttps
fbstp
fmul
xor
std
test
test
rcr
xchg
ret
in
lret
leave
out
roll
xor
cmp
out
xlat
sti
aas
out
fdiv
out
repz
lret
mov
nop
out
jmp
xchg
adc
fidivrl
jmp
loope
in
loop
sbb
jmp
lock
fsubrs
cmp
idivl
fcos
jecxz
cmp
cmp
jmp
iret
test
in
shr
iret
in
cld
repz
rcl
cmp
in
xchg
call
or
add
add
add
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
push
sbb
nop
mov
movsl
add
sar
in
jmp
movl
fnsave
cli
out
std
out
fidivrl
sub
fst
sti
jecxz
rclb
stc
cmp
in
repz
sar
fcomp
in
call
in
fdivr
mov
lock
iret
in
fcmovnu
fcmovnb
aad
roll
xchg
in
ljmp
xor
out
cli
xor
repnz
cmp
lret
out
cmc
hlt
xchg
int
rolb
jmp
iret
ljmp
cli
hlt
xchg
adc
out
loopne
leave
mov
jmp
hlt
cld
cmp
clc
cmp
rcr
clc
loopne
sar
mov
cli
mov
jecxz
leave
mov
xchg
jecxz
cmp
icebp
in
out
fldln2
repnz
in
cmc
aam
ret
stc
in
loope
lret
popl
repz
xor
fmul
shll
out
repnz
cmc
iret
stc
out
sti
in
loope
test
les
loopne
call
mov
cli
fidivl
fiadds
testb
iret
int
fmull
in
cmp
hlt
cmc
cmpb
clc
shl
shl
fcmove
sbb
decl
imul
fsub
out
shl
in
jmp
int
fdiv
addb
in
fcmove
in
shl
xor
out
cmp
fmul
cmp
aam
loope
fcmovnb
mov
fdivr
mov
filds
loop
stc
fsubrp
cmp
cmpb
test
fiaddl
xchg
in
xchg
mov
in
adcb
repnz
in
loope
cmp
hlt
cmp
mov
std
orl
into
int3
lret
cmpb
test
clc
stc
cli
fstpt
fsub
lock
xchg
icebp
cmc
mov
shlb
clc
fdiv
repnz
aaa
fcomi
fsubr
jecxz
in
in
in
cld
fucom
xchg
shr
xlat
cmp
repnz
in
stc
loopne
shl
test
aad
call
out
call
sub
leave
xor
shl
int
in
stc
lds
std
out
lea
out
jmp
repnz
lock
sarl
std
loope
clc
fcmove
sti
sti
nop
mov
repz
test
jmp
faddl
int3
fldl
lret
fmull
loop
loop
xor
cmp
repnz
stc
call
not
jecxz
std
mov
xor
lea
fsubr
icebp
icebp
iret
cmp
shl
into
lock
lock
roll
into
nop
into
std
loopne
or
aaa
rcr
repz
loopne
stc
cmp
enter
sti
out
mov
out
ret
xor
das
icebp
cmp
fcomp
repz
cmp
out
test
mov
into
leave
inc
fistpll
ds
fdivrl
jecxz
sar
sti
call
fadd
mov
jecxz
or
das
out
clc
cmp
fsub
loopne
loop
cmp
stc
cli
cmc
xor
int
int
in
in
in
in
xor
int3
xor
xor
loop
xchg
jmp
call
cmp
rol
cs
in
enter
int3
lret
in
idiv
test
call
loopne
fcos
mov
nop
mov
cli
cmp
cmp
fdiv
rcr
jmp
int
clc
std
vpsubsw
fsubp
in
sti
shr
out
icebp
ror
ret
in
sarl
lock
aad
div
aam
loopne
loop
leave
rcr
fimull
clc
shrl
sar
lret
aam
out
cmp
fcmovbe
cld
in
std
jecxz
lock
iret
decb
ljmp
cld
adc
cmc
les
cmc
jecxz
cli
in
loop
fists
sub
cmp
fsub
xor
stc
cld
leave
mov
cli
jmp
push
shr
out
xor
iret
std
xlat
aam
rcl
cmp
sub
mov
fimuls
das
clc
cmc
xor
out
lret
repz
rcl
aad
clc
aam
ljmp
xchg
add
out
lock
lret
aas
loop
filds
mov
xchg
rolb
lock
cmp
shl
aam
in
ret
fcomp
jmp
cld
pushl
jmp
int
into
fst
das
inc
aam
sarb
push
movsb
aaa
mov
movsl
add
mov
xchg
xchg
sarb
into
int
fidivrs
cli
cmp
mov
fcomip
xchg
test
icebp
fsubr
lret
rol
xor
adc
clc
repz
in
cli
out
fisttpl
rcr
divb
lret
shl
cmp
fsub
jmp
ljmp
jmp
xor
aaa
fst
repnz
cmp
sbb
xchg
mov
xlat
out
mov
stc
sub
icebp
out
enter
not
loop
clc
repz
jmp
test
sar
fsubp
ret
rcl
aaa
icebp
in
lret
ror
incl
xor
leave
fimull
repnz
out
into
iret
cmp
cmp
lock
leave
not
int
leave
fsub
call
aad
shl
stc
fstp
icebp
aam
in
cli
cmc
test
clc
cli
xchg
into
out
out
mov
cmc
out
lret
xlat
int3
int
call
xor
test
fucomp
jmp
jmp
in
in
cmc
int3
lret
lret
jmp
iret
cmc
in
vpsubsb
sti
testl
xchg
int3
icebp
bnd
cli
neg
leave
shl
cmp
cmp
sbb
faddl
std
in
mov
jmp
repnz
lock
leave
aas
lret
loope
into
fisttps
ds
xchg
out
repz
subb
imul
jecxz
in
lret
ds
jmp
test
rcl
test
cli
fdivrp
call
test
loopne
xor
xor
lock
adc
sar
rcl
fsub
lret
int
rolb
in
divl
call
sbb
std
cli
cmc
and
lret
imul
leave
xchg
int
ficoms
rcl
out
aad
fsubp
jmp
fucom
std
leave
call
mov
out
xchg
call
xor
cld
hlt
cmp
rcl
xchg
aam
test
cld
lret
xlat
fdiv
mov
sti
repz
cs
rcl
sar
iret
iret
rcl
lret
aad
add
out
mov
sub
lret
xchg
iret
das
shll
cli
int3
lock
clc
test
in
out
movl
nop
into
loope
lret
sbb
cld
std
mov
orl
out
testb
cmp
fdivrp
aam
out
std
fucomp
in
cmc
repz
in
xchg
mov
xchg
xchg
xchg
in
int
rcl
cs
xor
iret
cmp
cld
repz
sar
fisttpll
xchg
fisttpll
cli
jmp
lret
out
loop
loop
jmp
xchg
jmp
loopne
loop
jmp
loop
in
cmc
cli
sti
repz
sub
sti
aam
cmc
cmc
cmp
lret
mov
xor
stc
cmp
icebp
cld
loope
rol
ffreep
cmp
mul
clc
ljmp
shl
iret
in
repz
icebp
cmp
sti
flds
fscale
test
xchg
into
in
imul
out
in
ljmp
in
aam
sti
sbb
sti
loope
int
fcmovnu
test
xchg
int3
xchg
shr
cli
divb
cmp
xor
int
lock
aad
call
in
ljmp
repz
icebp
clc
out
into
div
and
xlat
iret
cmc
rcl
cmp
ffreep
test
int
into
enter
int3
faddp
out
iret
loopne,pt
repnz
xchg
xchg
std
xchg
aad
fsubrs
cli
xlat
in
ss
aam
out
cmp
clc
mov
sti
fucomi
loopne
cli
lock
hlt
aam
jmp
repnz
cmp
imul
out
ret
clc
xchg
aam
hlt
jecxz
testb
out
jecxz
xor
leave
int
rcr
iret
in
ror
cmp
orb
enter
into
hlt
into
jmp
jmp
cmp
lret
out
fldl
out
cli
lret
and
hlt
nop
lret
div
enter
stc
fsubr
cmp
hlt
sti
loope
cld
cmc
rorb
movb
shl
in
ret
xor
sarb
push
int3
in
icebp
loop
rcl
iret
test
test
in
lret
test
out
ljmp
shrb
aam
iret
iret
idivl
ror
out
aad
test
out
jecxz
mov
call
call
mov
cmp
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
int
fidivrl
hlt
iret
int3
dec
ds
ret
std
testb
test
nop
out
lock
jmp
ljmp
int
cmp
int
fcmovnu
aad
call
incl
fcomip
sub
shl
repz
lret
stc
xor
ds
shl
clc
fcmovnb
call
nop
xchg
adcb
xor
cmp
cmc
fnstsw
lock
sar
sbb
ljmp
mov
xor
jecxz
out
enter
out
aam
cmp
mov
int3
stc
out
fucomip
call
shlb
call
xor
xor
roll
imul
lea
repnz
jmp
les
aad
filds
int
shl
ss
xor
xor
aad
addb
test
fprem
lock
leave
repnz
ror
sub
lret
les
shll
aad
sarl
div
cmc
vpavgw
mov
int
out
std
lret
icebp
in
shl
cmc
sti
shr
fcomi
fndisi(8087
iret
shr
test
fimuls
fildl
in
clc
jmp
enter
out
out
cli
rcr
neg
cmp
loopne
mov
cmc
rol
xor
xor
aaa
iret
into
clc
cmp
aas
out
roll
out
mov
into
sti
lret
cmp
hlt
jmp
das
cmp
shl
int
jmp
xlat
icebp
rcr
cli
ljmp
call
mov
repz
xor
cmp
std
clc
repnz
fxch
jmp
xchg
mov
fptan
xor
sarb
xlat
fiadds
mov
mov
xchg
cmp
out
aam
sti
leave
icebp
call
cmp
in
cli
cli
sti
out
jmp
mov
ljmp
into
cs
aaa
fadd
stc
cld
in
fsubr
cmp
sti
out
sarl
icebp
neg
out
and
fmul
fst
in
sub
cmp
out
cli
lock
lock
aaa
out
call
int3
aas
into
loope
sti
repz
xchg
xchg
cs
test
out
cmp
stc
or
ds
lds
jmp
jmp
jmp
ror
cmp
xor
loopne
loop
sarl
ret
aas
jmp
in
rcr
leave
cmp
ljmp
ds
fcmovnbe
hlt
sub
mov
notb
cld
std
aaa
cmp
sbb
out
jmp
jmp
fcmovnu
in
mov
jmp
enter
icebp
call
test
fimuls
in
fdiv
ror
cmp
repz
hlt
leave
in
mov
out
xlat
fsubr
stc
repz
in
iret
cmp
shl
imul
cld
fsubp
loope
lret
mov
shl
call
aam
cmp
xor
cmp
fnsetpm(287
xchg
std
fildl
cld
adcl
in
out
cmp
loopne
rol
not
call
enter
into
fsubr
loope
call
xor
fiadds
jmp
jmp
fimuls
lret
call
cld
repz
cmp
loope
fcmovnu
out
lret
fcmovnbe
xchg
lret
call
leave
shl
sarb
int3
shl
rol
ljmp
orb
leave
aam
fadd
iret
into
aad
cmp
out
cmp
aad
mov
mov
and
loope
jecxz
in
cmc
xor
out
cmp
xlat
int
aam
repz
iret
repz
out
nop
fisttps
sar
aad
cmp
in
cmp
cli
into
icebp
aad
ret
loop
jecxz
incb
jecxz
fucomip
repnz
jmp
fcmovne
cmp
shl
xor
adc
fmul
lret
int
xchg
loope
into
jecxz
jmp
idivb
clc
fcmovnu
addb
cld
fmuls
test
test
xor
sar
dec
loop
cmp
leave
fiaddl
out
jmp
and
int3
xor
into
hlt
xor
fxch
enter
jmp
cli
fidivrs
test
sar
lret
aad
out
call
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
adc
push
jle
add
cmc
cmp
imul
cmp
fcmovnbe
icebp
aam
fxtract
fcmove
cld
out
jmp
loop
test
jmp
out
fdivrl
std
jmp
faddp
icebp
aam
cli
ljmp
xchg
jecxz
loope
jmp
lret
leave
iret
fcmovnu
fdivrl
ror
in
xchg
aas
and
fsubp
ljmp
out
ror
in
loope
lock
mov
xchg
xor
mov
sbb
fyl2xp1
cmp
fdivr
loop
loop
std
xchg
fadds
cli
incb
int3
mov
cs
idivl
repnz
test
addl
test
xor
loop
test
icebp
in
aas
out
clc
clc
std
std
loop
orl
shrl
leave
repz
aam
cld
sar
dec
shl
into
ret
rorb
out
int3
test
mov
into
sarb
in
iret
ljmp
hlt
shl
loop
mov
out
loopne
mov
out
repnz
jmp
out
clc
fsubr
in
rcr
test
stc
aas
vcmpps
and
filds
aam
aam
xlat
into
aam
cmp
fdiv
int
loopne
out
icebp
leave
fucomip
aad
cmp
xchg
in
cmc
sar
lret
fdivrl
ss
ds
stc
hlt
iret
loopne
fcmovnu
cmc
out
into
jmp
xor
xor
sti
lret
sar
icebp
fdivr
cld
shl
fsubp
xlat
call
fiadds
mov
ret
mov
sarb
rol
testb
lret
xchg
xor
repnz
cmc
or
clc
iret
fld1
aad
in
mov
shl
hlt
call
aaa
loopne
cld
jmp
fcmovu
fdivp
iret
fsubr
test
vpmulhuw
sar
hlt
iret
leave
neg
clc
fsub
aad
frndint
aas
fcmovnu
add
into
xchg
out
into
in
out
ret
out
in
out
xor
aam
into
and
idiv
testl
shl
das
call
cmp
cmp
cmc
stc
aas
into
in
icebp
fiadds
in
jmp
in
aam
jmp
shlb
lret
sarb
aad
aam
div
stc
test
mov
jmp
lret
sub
out
sbb
out
fst
loop
fucom
fcmove
test
in
test
enter
jmp
cmc
shl
fcmovnb
out
fst
ret
enter
fdiv
loope
lea
cmp
cmp
shll
fsubr
hlt
fadd
out
shl
cli
stc
ljmp
test
aaa
loop
repz
lret
stc
cmp
repz
int
icebp
sar
loopne
loope
xchg
adcl
fcomip
iret
ljmp
addl
into
shl
loop
aad
repz
rcl
cmp
repz
cld
incb
testb
jecxz
int
rol
ljmp
test
sti
in
clc
fmuls
leave
lock
lret
loopne
aad
ljmp
shl
iret
inc
fimuls
leave
in
jmp
fsub
notb
into
in
clc
shr
dec
rcl
lock
rol
cmc
mov
xlat
in
xchg
jecxz
out
icebp
repz
in
cmp
ds
sar
rcl
xchg
in
fndisi(8087
and
fldl
jecxz
test
fdivr
cld
cmp
lock
enter
mov
fadd
mov
mov
int3
mov
ljmp
stc
loopne
loop
not
xor
int3
enter
loop
mov
int3
hlt
imull
jmp
int3
cld
hlt
iret
into
aad
sar
add
test
out
xchg
leave
in
call
int
test
cmp
cli
hlt
out
roll
lret
test
test
aaa
ret
xor
shr
aam
shll
in
out
call
mov
shl
loope
cmc
hlt
ss
cmp
aad
cmp
rcr
cmp
cmp
aam
lea
out
int3
xchg
sub
ret
xor
iret
fdivp
icebp
lret
repnz
jecxz
out
fcmovnb
inc
mov
loopne
loop
mov
out
mov
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
sbb
push
rcrb
jle
out
aaa
xor
fneni(8087
fidivrs
xorl
aas
cli
fcomp
xlat
loope
in
out
leave
ljmp
int3
aam
call
out
xlat
iret
mov
faddl
in
cli
repnz
and
fbstp
imul
int3
ljmp
ret
cmp
mov
mov
fxam
std
fsub
dec
mov
in
iret
ljmp
fdivrs
cli
ljmp
repnz
cld
stc
repz
sarb
in
idiv
loop
jecxz
loopne
in
std
incl
call
sti
xlat
in
fidivs
xor
loope
stc
cld
icebp
and
cld
loope
aas
addb
sub
mov
cmp
out
in
icebp
repz
mov
in
int3
test
lock
loope
int3
mov
xor
xor
lret
icebp
std
fsubp
fcomip
loopne
ds
in
lret
int3
int
call
test
icebp
xor
int
cmc
xlat
imul
shl
ret
xlat
aam
fiaddl
xchg
mov
rcl
xor
in
repz
aad
std
ret
into
into
loop
loope
call
enter
fists
repz
ljmp
int
sti
repnz
hlt
jecxz
orb
shl
xchg
out
das
sub
int3
cmp
fidivrl
lret
rcl
test
xchg
xlat
ret
mov
xor
in
stc
rcl
fidivrl
fnsetpm(287
cmp
test
into
enter
in
test
rcl
fnstcw
sbb
into
sti
shl
test
lret
aas
stc
iret
xchg
test
out
loop
fucomi
cld
in
jmp
out
aad
lock
cmp
jmp
fsub
jmp
loop
repz
sti
aaa
les
clc
lret
aad
cmp
hlt
and
loope
fsincos
filds
lret
aam
fmul
sti
out
stc
testb
test
cld
lds
out
roll
leave
rcr
clc
std
in
enter
xlat
roll
loope
leave
cld
in
ret
shl
orl
cmp
jmp
stc
add
ffreep
repz
ljmp
fucomip
sbb
hlt
ret
fdivr
mov
fst
xchg
iret
int
enter
iret
aaa
lret
loop
clc
stc
vpsubusb
cmc
test
call
into
shr
out
jmp
leave
cmp
cli
out
les
mov
shl
int
jmp
lock
xor
icebp
fdivrp
in
icebp
out
clc
clc
loope
in
les
in
call
sar
aad
aaa
jmp
fmulp
ret
fcomp
ret
cli
loop
mov
int
lea
mov
enter
xor
out
jmp
aas
xor
repz
mul
cmp
lock
into
ss
rcl
jmp
out
fdivr
aad
int3
mov
ljmp
test
leave
enter
lock
sti
rcl
in
loope
std
rorl
sti
in
testb
loopne
repz
in
imul
aam
aas
xlat
icebp
std
aad
adc
into
sti
in
out
test
xchg
xchg
loope
idiv
cli
cmp
cmp
ret
clc
loopne
loope
cmc
sti
int3
mov
jmp
sti
repz
enter
test
mov
in
ljmp
aam
cld
neg
std
sarb
filds
cmp
jecxz
xchg
test
clc
aad
cmc
enter
aam
cmc
aas
loop
enter
int3
in
sti
xlat
in
fcmovnu
xchg
sar
ljmp
lret
cmp
ds
ret
repz
clc
clc
in
sub
icebp
cmc
loopne
repnz
std
fdivp
sti
cld
repnz
sti
adc
aam
mov
fmulp
loope
jmp
xor
shl
icebp
icebp
lret
call
icebp
repz
call
jecxz
orb
iret
shll
clc
cmp
xlat
loope
repz
cmp
movb
enter
xchg
cmc
sub
xlat
ret
cmp
cmp
sti
xlat
aas
into
repnz
mov
sbbl
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
sbb
loope
xchg
test
jmp
jmp
xor
rol
leave
aaa
shr
lock
cmp
loopne
fildl
in
loop
int3
leave
out
stc
out
out
icebp
lret
loop
jecxz
std
hlt
loop
les
fnsetpm(287
cmp
orl
lock
ds
out
aaa
int3
dec
rolb
fcomip
fscale
fcmovb
out
fucomp
fisttpll
cmp
aad
xor
icebp
cmp
xchg
or
ret
clc
jecxz
sub
xchg
in
mov
shrl
jmp
adc
std
in
fdivr
aad
repnz
xchg
xchg
xchg
shl
int
ret
lret
call
idiv
lock
out
rcr
stc
fxam
loope
fsubr
fisttpll
and
xlat
in
cmp
int
int3
add
loopne
ljmp
jmp
ret
les
leave
ss
aam
addb
sar
jmp
jecxz
in
into
loop
enter
ljmp
in
repnz
std
mov
div
cli
int3
out
rcl
repnz
sub
xlat
out
cld
cmp
adc
xchg
fisttps
into
mov
mov
mov
hlt
cmc
shll
repnz
lret
hlt
idiv
ret
fdivr
xor
movb
in
aam
mov
rcl
ljmp
jmp
aad
icebp
mov
mov
in
cld
or
xchg
xchg
shl
xor
call
ds
ror
std
fmul
cli
rorb
xchg
xor
repnz
neg
fidivrl
icebp
fst
sarb
fstp
fildl
in
out
ror
rcl
out
cmp
int
bnd
cmp
sti
test
cli
cmp
and
jecxz
loop
in
out
ljmp
cmc
lock
fmulp
xlat
repnz
addl
nop
leave
mov
ljmp
jmp
loop
rcr
inc
clc
fmul
jmp
clc
mov
fsubrp
lret
repz
xor
icebp
int3
call
rol
cmp
mov
cmp
loopne
loop
aam
icebp
xor
leave
xor
xor
in
shl
fidivrs
jecxz
and
jmp
test
fdivp
xchg
jmp
aaa
ret
div
idivb
cmp
lock
cmp
cmc
repnz
int3
dec
int
decl
rcr
into
lret
std
aam
cmp
sub
rorb
ljmp
in
cmc
aad
jmp
lret
cmp
xlat
jmp
inc
addl
fsubrp
cli
out
lret
fimuls
jmp
ds
shl
roll
incb
call
cmc
xor
out
lret
mul
test
xchg
out
mov
fcmovne
repnz
out
div
rcr
in
out
int
lock
int3
sarb
sti
std
cli
fscale
ljmp
out
enter
cs
ss
aad
repz
iret
test
fneni(8087
std
stc
out
lds
orb
call
fcom
cmp
ffreep
call
mov
mov
loope
rorl
cli
stc
cmp
jmp
repnz
repnz
aas
in
hlt
loop
cli
icebp
xchg
ljmp
cmp
idivb
out
iret
in
ljmp
incb
fiadds
fdivrp
into
loop
xor
das
ljmp
aas
in
cli
aad
lret
sti
aas
testb
cmc
call
ss
int
call
out
cli
cmc
sbb
call
xchg
clc
xor
xor
enter
lock
sbb
aas
aam
lret
sbb
cli
orb
cmc
ret
cmp
cmp
lret
in
bnd
fadds
cli
mov
fdiv
xchg
adcb
cmp
into
cmp
in
in
test
cli
test
lock
and
in
sti
fisttpll
xor
fdecstp
clc
iret
aas
loopne
loopne
test
into
std
sti
lret
ret
aas
stc
std
mov
int
iret
ror
clc
jecxz
in
call
ljmp
cmp
lret
lret
jmp
adcb
sub
int3
cmp
cmc
jmp
cli
cmp
in
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
je
movsl
jle
xchg
add
sar
repz
filds
fsts
ret
in
lock
shr
cmc
aam
int
ds
mov
ljmp
xchg
iret
aad
out
xor
sti
fcomi
aas
idiv
loope
addb
test
cmp
lret
in
ljmp
stc
cld
fcmovbe
aas
out
loopne
xchg
rcr
addl
xchg
repz
out
xor
cmp
cmc
cmp
cmpb
addb
jecxz
in
leave
test
std
testb
lret
ljmp
aam
in
cld
cmc
sti
out
testl
ret
jmp
lock
xlat
int3
cmp
out
rol
std
loop
jmp
clc
clc
std
in
hlt
iret
clc
enter
cmp
xlat
cmp
iret
fdiv
aas
loopne
sar
repnz
in
xchg
in
in
or
aad
lret
sub
loop
ss
xlat
cmp
in
clc
ret
in
sarl
test
jmp
xchg
rclb
xor
out
enter
in
neg
lock
cld
ljmp
sbb
xor
shl
int
std
int
rcl
int
div
testb
xchg
cld
iret
int
in
out
ljmp
leave
hlt
in
xlat
in
repnz
fucompp
leave
fldl
shlb
cmp
repnz
loopne
fdivr
xor
cmc
cmp
fmull
hlt
in
stc
sub
out
out
fsubr
cmpl
out
cmc
mov
ljmp
orb
xlat
fucomip
ss
out
int
cli
rcl
in
lret
mov
sti
into
call
cs
shl
lret
icebp
incb
out
sar
xchg
clc
out
and
imul
int3
lret
fsqrt
vpaddw
loope
lock
sti
cli
icebp
jecxz
repz
stc
test
in
jmp
cmp
ret
cmp
xlat
shl
in
out
in
rcl
fdiv
loop
out
test
in
out
divb
clc
incb
fninit
rcr
shl
idiv
out
cld
incb
into
shl
xor
sarb
jecxz
hlt
jecxz
sbb
stc
fcmovu
stc
mov
jecxz
lock
cmc
rol
in
ljmp
loop
clc
sti
rorl
in
movb
out
shl
repnz
int
cmp
cld
leave
shl
aad
cmc
fcompp
fucomp
in
fiadds
addl
int3
xor
sarl
fmul
repz
cmc
in
into
out
rol
cld
jecxz
cld
jmp
cmc
hlt
faddp
xor
out
shl
aam
ss
out
in
ds
std
neg
sbb
stc
fcmovnu
rolb
int3
fcmovnbe
xor
rcl
inc
xchg
in
enter
mov
in
cmp
lock
fcom
fsub
shl
test
jmp
cli
mov
test
in
repz
ffreep
ret
ror
sti
not
fcmovnbe
lret
int
ret
sti
iret
icebp
in
xlat
filds
ret
in
test
out
jmp
ss
ds
sar
clc
cli
cmc
incb
mov
cmp
xchg
shl
cs
cmp
imul
xor
xor
icebp
filds
test
ror
aam
cmc
rcr
jmp
idivl
stc
hlt
repnz
jecxz
stc
rcr
repz
test
repz
cmp
lret
stc
roll
fcomp
xlat
xchg
repnz
out
aam
jmp
fucomp
in
xor
rcr
ror
loopne
mov
mov
loope
rorb
ret
int
int
fcomip
cmp
fucom
rcl
enter
or
cli
jecxz
shr
lea
ljmp
repz
fldl
fsub
loope
loope
mov
lret
loope
rol
int3
repnz
jecxz
in
shl
out
mov
lock
mov
hlt
aad
xor
into
xor
aaa
aam
aas
aas
stc
ret
fdivp
not
fadd
aad
mov
loope
into
orb
call
cld
cmc
aad
aam
fdiv
sti
test
cmp
xchg
xchg
jecxz
cmp
lock
int3
add
mov
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
lds
jle
xchg
add
jmp
fcmovne
in
jecxz
or
int
loop
in
xchg
rclb
jmp
call
into
cld
iret
fdivr
cmp
in
sti
fildl
leave
jmp
cmp
mul
xlat
fsubrp
enter
test
jecxz
rolb
cli
mov
iret
shl
xor
clc
out
shl
fmul
icebp
enter
fisttps
in
rolb
out
shl
cmp
out
repnz
faddl
xchg
in
mov
jecxz
in
not
fucomi
cmp
lret
hlt
cmp
idiv
and
mov
testb
cmc
int3
jmp
int
cmp
hlt
inc
cmp
std
out
in
ljmp
in
fcmovbe
lret
idivb
fsubrp
loop
cli
cmc
cmc
fisttpll
out
dec
icebp
loope
xchg
sti
out
xor
jmp
test
ds
cld
cmc
mov
call
mov
cmc
out
clc
lret
fcomi
cmp
fsincos
aas
clc
fimuls
out
rclb
ret
rol
into
hlt
int3
cmp
iret
loop
call
xchg
cld
loope
rol
loope
out
sub
aaa
sar
clc
xlat
out
decb
aad
neg
and
std
mov
fxch
fcomi
int
aad
shl
int3
or
repnz
lret
jmp
out
lock
xchg
sub
leave
rol
out
shr
hlt
addl
lds
xchg
shl
xchg
in
int3
jmp
div
cmc
cmp
iret
shl
cmp
icebp
les
int3
xchg
int
cmc
loope
sub
leave
divb
out
cmc
int
lret
cmp
ret
sub
out
mov
nop
div
xor
in
jecxz
rcr
cmp
fiadds
xlat
fucomp
clc
loop
test
test
out
cmp
xlat
hlt
adc
rcl
filds
ljmp
xchg
xchg
not
int
in
iret
xlat
out
lret
cli
stc
in
test
iret
std
fdiv
out
call
repnz
xchg
shl
shr
loop
out
in
fst
in
in
repz
cmc
aam
cld
fisttps
xlat
cli
xor
iret
out
int3
repnz
rol
mov
orb
adc
test
imull
icebp
fcomip
shr
cmp
icebp
aam
sti
loopne
stc
mov
jmp
jmp
fildll
loop
in
cmp
cmp
cli
mov
filds
fcoml
icebp
rol
rcr
lret
cmp
fucomi
cmc
out
in
sub
fdivp
fiadds
loop
repz
cmc
shll
cmp
aad
rcr
aad
repz
out
call
nop
cld
das
out
xor
out
shll
xor
repz
into
in
clc
test
mov
mov
idiv
out
test
out
shl
out
ss
clc
out
leave
xor
test
mov
loope
in
lret
into
int
frstpm(287
loope
aam
out
imul
aaa
aam
fcmovu
jmp
lock
test
xchg
fiadds
popl
rol
call
hlt
out
jmp
int
int
lock
aam
cmc
xchg
fcmove
sti
in
out
aam
lret
jmp
leave
lret
ljmp
iret
xlat
clc
aas
test
mov
fcomip
std
in
jmp
mul
xor
icebp
int
ds
stc
repz
loopne
in
out
popl
rcl
xor
shrl
shl
loopne
loop
xchg
rol
call
in
leave
hlt
icebp
xchg
repnz
jmp
in
not
shr
fadd
sbb
aam
fdivr
cli
test
int
jecxz
mov
xchg
out
clc
shl
shl
imul
xlat
clc
cmp
fsubr
sub
std
jmp
out
test
fucomip
jmp
in
fst
loopne
cld
cld
shl
loope
loope
fimuls
in
in
sub
lret
cmp
call
lock
and
in
in
fimull
hlt
adc
sub
ror
ss
call
neg
not
in
mov
in
test
icebp
decb
adc
enter
add
leave
rol
ret
int
cwtl
stos
cltd
fs
xlat
arpl
add
mov
aad
loop
enter
fdivrl
fistpll
cmp
aas
mov
mov
inc
fildl
icebp
xor
cli
icebp
into
shll
xor
test
in
in
xlat
flds
jmp
nop
icebp
loop
in
ljmp
sti
ret
hlt
out
fiaddl
cli
xchg
mov
rcll
cmp
divl
cli
xlat
flds
cli
int
leave
repnz
mov
out
fcmovbe
call
std
test
fidivrl
add
decl
rorl
xor
sarb
stc
cmp
xor
repnz
loop
cld
in
cmc
cli
loop
in
xchg
mov
rclb
in
jmp
out
pushl
lock
std
jmp
mov
iret
lret
hlt
cmc
xchg
rol
fsqrt
enter
lret
add
xor
hlt
sti
stc
or
test
ljmp
sub
xlat
cmc
cmp
lock
cmp
ds
fucom
fsubrp
lret
iret
loop
lret
aas
lret
xor
leave
cmp
hlt
fsubr
sar
cmp
cli
neg
push
xchg
cld
xchg
loop
enter
in
rcr
cmp
cmp
loopne
sar
in
fninit
fsubrp
fdivrp
mov
enter
aam
vshufps
out
xor
cmp
fucomip
cli
lea
rcr
repnz
out
lret
clc
cmc
out
cmpl
add
out
loop
xchg
aad
jecxz
cmp
repnz
int3
cmc
neg
cmp
fucom
addl
in
leave
orb
iret
cmp
in
repz
stc
jmp
div
jmp
lret
fcmovnu
xchg
xchg
lret
lock
cmp
iret
aad
jmp
test
test
sar
jmp
ljmp
cmp
cmc
test
rol
xlat
testb
mov
lret
fptan
fcomi
ds
cmp
icebp
cli
shl
ljmp
out
jmp
shl
lock
ds
xchg
aad
icebp
fimuls
fcomp
call
jmp
xlat
les
enter
int3
idivb
cld
icebp
rol
testb
fnop
into
jecxz
cmp
repnz
iret
xor
aad
fucomp
fdivl
test
aas
mov
sar
std
ljmp
jmp
out
cmp
ss
cmp
ljmp
fisttpll
int3
out
jecxz
xor
aam
aaa
cmp
repz
loop
loopne
rolb
jmp
sub
xchg
shr
into
icebp
ljmp
sti
cmp
in
sti
mul
dec
cld
loope
flds
out
jecxz
fcom
lock
int
xor
stc
ret
incb
xlat
int3
stc
icebp
rorb
icebp
fsubr
xor
ror
aad
clc
xor
mov
cmc
loop
clc
jmp
jmp
jecxz
loop
stc
enter
xor
ds
loope
aam
xlat
in
fucomp
sti
sti
rclb
loop
sti
out
lret
idivb
cmp
shl
shl
sar
in
cli
out
ret
cld
ljmp
out
out
fdivs
sbb
enter
fcomi
loopne
fcomp
cli
xchg
jecxz
shr
das
lock
clc
lret
lret
xor
sub
fdiv
xchg
orb
div
ss
iret
in
cmc
repnz
xor
cld
faddp
neg
orl
rcl
repnz
iret
stc
neg
aam
repz
sbb
jmp
jecxz
lock
neg
jmp
out
out
xor
ret
loop
rol
shl
sti
enter
nop
loopne
out
test
shlb
push
xor
cmpb
ljmp
out
xchg
rcl
fmul
das
enter
ret
ret
stc
fcmovbe
int3
out
movl
rol
into
icebp
aad
cmp
loope
sarb
std
xlat
rol
loop
addl
xlat
in
aad
sti
ss
rol
icebp
int
in
call
mov
orl
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
mov
jns
aas
add
fsubp
sub
xchg
mov
jmp
aaa
int
sti
not
fsubr
ret
sti
idiv
cmc
hlt
fsubp
in
cli
xchg
jmp
xchg
out
out
lret
shl
cmp
xlat
fsubr
loopne
xor
cmp
cli
xchg
mov
loope
xchg
repz
jmp
cs
into
test
rcr
loope
aad
in
add
stc
enter
xlat
in
and
into
call
xor
cmp
repnz
fsub
fcom
icebp
loop
not
fsub
xchg
cli
fisttpl
sub
out
enter
hlt
lret
out
fcomi
aad
rcl
aam
mov
mov
mov
sub
lret
xbegin
xor
cmp
shl
stc
xor
out
loopne
leave
jecxz
mov
mov
call
xor
cmp
rcr
fadd
fcomi
test
out
in
jmp
subl
not
int3
xor
neg
test
cmpb
call
leave
nop
ror
in
shl
rcl
xlat
jmp
aam
in
loop
clc
ret
fst
sti
nop
repz
nop
out
lret
in
in
cmp
cld
xor
sbb
fcmovnbe
jmp
test
clc
rclb
out
loope
fld
in
aas
xor
test
mov
les
mov
sti
out
jmp
shl
stc
imull
repz
out
std
shl
ds
sti
cmp
ljmp
in
jmp
out
iret
lock
cmp
hlt
fdivrs
fxam
shl
call
cld
in
mov
lret
ljmp
fdivrl
rcr
ds
mov
xchg
int
nop
in
lret
fstl
jmp
cmp
leave
cmp
cmp
cmpl
cmp
fcmovnb
cld
fiaddl
lds
ror
cli
fsubr
aad
aaa
lret
in
aas
call
mov
loopne
xchg
xchg
out
ror
xor
xor
std
into
cmp
sarb
add
xlat
idiv
fcmove
clc
xchg
ror
hlt
loop
sub
cmp
aad
out
into
rcr
filds
rol
out
int
in
loope
repnz
lret
cmp
hlt
std
cmp
stc
div
mov
fcmove
in
fsubr
fst
out
repnz
ss
xor
div
xlat
cld
cld
rcl
idivb
nop
enter
mov
clc
in
ljmp
iret
out
ret
lock
xlat
in
in
fisttps
repz
clc
das
cli
shr
sti
fdivr
fstp
lret
fsubrp
mov
idiv
sub
std
xchg
lret
in
in
repz
jmp
cmp
call
add
fucomip
fnclex
rorl
xlat
aam
cmp
enter
xor
cmp
sub
fadd
in
test
test
out
aaa
xor
clc
jecxz
cmp
fcmovu
roll
dec
xchg
xchg
loope
cli
xlat
fdivl
cmp
aam
iret
ret
loope
rcr
loop
cmp
out
repnz
mov
out
fld
iret
lret
cmp
stc
faddp
filds
mov
jmp
int3
lds
not
cld
in
fcmove
fucomip
repz
icebp
out
aad
mov
test
fcmovbe
in
xchg
aad
cli
int
idiv
test
out
xchg
xlat
fcmovnu
loopne
in
fsubp
out
out
in
xchg
enter
sub
idiv
imul
adc
ffree
loop
aad
ret
fsub
icebp
out
lret
orb
jmp
call
aam
sarl
xchg
fcmovbe
jmp
adcl
aaa
out
xabort
cmp
lock
aad
xor
repz
orl
xorl
into
xlat
out
fcomp
icebp
sti
roll
cld
jmp
in
cld
cmc
mov
xor
shl
xor
repz
std
loop
into
in
rcr
hlt
std
cld
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
int
mov
jle
add
std
in
mov
out
xchg
divb
in
repz
in
icebp
fildl
in
jmp
addb
mov
out
shlb
xor
cmp
imul
push
std
clc
lock
nop
nop
sti
addb
in
xor
loope
loope
cli
out
icebp
call
in
test
test
in
loopne
xor
out
mul
iret
fcmove
jmp
ret
fcmovnbe
ljmp
shl
xchg
repz
into
leave
shr
cmp
sar
shl
rolb
test
mov
repnz
sub
xlat
shl
shl
lock
repz
fdivp
xor
lret
hlt
cmp
into
rcl
icebp
mul
out
xchg
xor
imul
call
enter
fadd
std
fadds
cmp
sti
lret
lock
call
lret
lock
neg
jecxz
sbb
loop
in
ds
fstp
ret
mov
lock
aaa
sti
lds
aam
cmp
or
loop
test
xchg
call
xchg
xchg
ljmp
int3
int3
jmp
fistpll
div
rolb
orb
jecxz
repz
xchg
enter
sub
in
aad
int
clc
sarb
xchg
cmc
vcvttpd2dqx
icebp
test
sub
xchg
leave
xor
rcr
out
lock
xor
call
mov
loope
jecxz
icebp
shl
test
xor
out
fdivr
out
sbb
stc
aam
neg
fiadds
shl
loop
loop
icebp
call
aad
cmp
push
fcmovu
aam
fsub
leave
aas
sti
xchg
loop
fucom
lret
sub
xor
fmulp
jmp
repnz
cli
xlat
mov
iret
in
fsub
ror
xorl
stc
fidivrl
cmc
cmp
cmp
fcomp
ror
aam
rolb
stc
stc
in
int3
mov
rolb
cmc
leave
hlt
int3
in
cmp
in
iret
fldl
mov
into
icebp
enter
iret
int
repz
loop
aam
ds
repnz
jmp
jecxz
nop
or
xchg
out
cmp
in
clc
aam
rol
shr
xor
enter
mov
lock
jecxz
out
xchg
in
imul
ret
shl
cmp
iret
iret
sti
iret
out
clc
cmp
repz
ds
jecxz
inc
orb
lea
shl
out
call
loope
roll
test
fiadds
xchg
lret
out
lret
test
iret
in
int
into
addb
fucomp
cld
mov
iret
jecxz
in
leave
xlat
leave
jmp
cmp
sarl
cmp
neg
hlt
in
xchg
neg
jmp
shlb
xor
jecxz
xlat
fpatan
fsubr
clc
int
idivl
addb
test
in
decb
loope
shl
cld
xlat
fcmovb
aad
std
cmc
imul
in
cli
lds
jecxz
cld
lret
in
loopne
lret
not
in
fdivrp
hlt
icebp
stc
aad
mov
out
ret
xchg
int
mov
jmp
iret
idiv
into
xor
cmp
loop
testb
in
or
jmp
jecxz
stc
int
in
lock
xor
loopne
in
loop
cmp
repz
loope
cld
lea
mov
loop
rol
ret
aad
cli
shlb
aaa
in
in
ds
jmp
ljmp
rolb
sti
ss
rcl
cmp
int
call
cld
jmp
xchg
flds
cmc
loop
xor
shl
call
loop
cmc
fiaddl
fisttpll
rcr
jmp
xchg
out
in
ret
in
jmp
out
int3
into
incb
enter
out
ljmp
shl
out
rol
stc
ror
cmp
jmp
cmp
xchg
loope
les
movzwl
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
fdivl
cli
xchg
mov
jle
call
hlt
in
xor
repnz
aad
into
ds
cmp
fld
stc
test
mov
iret
ficoms
cmp
int3
leave
repz
ds
std
out
fdivrp
mov
std
jecxz
lock
nop
aad
xor
fsubr
in
ljmp
hlt
out
aas
fdivr
loopne
sbb
test
leave
out
lock
xlat
cmp
cmp
cmp
and
ret
jecxz
fucomp
out
loop
int3
xchg
aas
loope
in
rol
idiv
testl
aas
shr
xchg
mov
jecxz
lret
not
fcmovnu
fucomp
xor
out
mul
fcoms
ljmp
xor
int3
addb
iret
clc
rcl
xlat
loopne
fucomp
in
xor
xor
out
cmp
in
repnz
faddp
fadds
dec
into
rcl
xor
xor
icebp
call
out
aad
lock
out
fsubp
fucomp
out
fmull
icebp
enter
test
repz
rcl
add
ret
hlt
ret
mov
aas
test
in
shr
std
shr
xor
out
sti
jmp
fabs
sarl
in
loopne
test
jmp
subl
jmp
jmp
rcl
out
repz
shl
loopne
fxch
in
into
out
xchg
in
xor
cmp
cmp
shr
aad
mov
xor
mov
repnz
fdivr
fdiv
test
sbb
sar
test
test
testb
shr
divl
jmp
sti
cmp
xlat
cmc
ljmp
loope
mov
lret
dec
mov
test
leave
neg
lock
sbb
aad
addl
in
sub
lock
fadd
out
aam
cmp
lret
sti
aam
sbb
stc
leave
flds
sub
fxch
divb
aam
rcl
aas
addl
in
cli
ret
faddl
xchg
enter
aaa
shlb
loopne
movl
loop
in
xchg
rcl
aaa
fcmovne
jmp
clc
sar
test
test
enter
int3
mov
fcmovnbe
jmp
sar
shr
in
fidivrl
lret
fldl
fsubr
enter
test
out
test
cmp
loopne
jmp
out
loopne
cmc
loopne
enter
mul
cli
sti
mov
aad
lret
out
xor
xlat
out
sbb
cmp
out
sti
adc
fadd
cli
idiv
cld
mov
nop
xchg
call
out
fdiv
fmulp
imul
ret
aam
cmc
iret
test
stc
cli
in
int3
out
std
ljmp
in
cli
icebp
out
repz
lret
ret
out
rcr
repz
incl
lds
fdiv
fmul
sti
fst
lock
ds
fcmovu
in
test
mov
stc
iret
stc
lret
fmull
sub
cs
stc
lock
stc
cmp
cmc
xlat
xchg
fcmovnu
mov
in
icebp
shr
icebp
rcr
sarl
repnz
ret
std
xchg
cmc
or
lret
xchg
nop
xchg
into
icebp
cli
lret
xlat
fnstsw
shl
sar
ljmp
mov
xchg
aam
imulb
fstpt
fnsave
fucomp
cld
fucomip
fnstcw
ret
enter
xlat
sti
clc
xchg
call
out
ret
aam
hlt
lret
out
not
ljmp
loope
mov
ljmp
jmp
int3
ss
cmp
into
lret
cld
std
cld
fnclex
mul
leave
xlat
stc
ffree
lea
ljmp
cmp
jmp
cmp
cmp
ret
xchg
xlat
in
decl
int3
in
shr
div
clc
jmp
shl
sbb
loopne
int3
or
lea
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
test
push
aas
add
lret
lock
rcl
lret
fdiv
cmp
mov
jmp
nop
mov
out
into
iret
leave
cld
icebp
fmul
sti
shl
out
rcr
fprem1
shl
mov
std
jmp
fxch
xor
xchg
out
xor
clc
in
sti
xor
out
sti
fstpt
ds
in
in
clc
fimull
out
ror
xchg
lret
mov
fcomp
iret
cmp
fcmovnu
shl
xlat
in
aam
xchg
sti
lea
call
lock
lock
loope
fcomp
orl
in
in
lret
iret
jmp
icebp
cmp
aad
cmp
int
fucom
les
icebp
test
mov
xchg
addl
aad
into
std
fsubr
dec
sarb
loope
loop
out
leave
out
fildl
out
loop
aaa
sti
fcmovnu
in
loope
aam
jmp
std
fucom
loope
loop
push
shlb
fcmovne
out
cli
cli
fildl
cld
aam
jmp
test
in
addl
xor
leave
fst
repnz
cmp
in
fmul
icebp
lock
rcr
aam
test
fxch
xchg
lret
repz
xor
int3
cmc
iret
repnz
in
div
rolb
ret
ret
in
mov
cld
xchg
mov
sub
out
cmp
shl
cld
fcmovnu
iret
aam
fsubp
mov
adc
fsubr
xlat
xchg
lret
lret
call
cmp
cld
hlt
repnz
into
neg
cli
xchg
lret
or
shr
out
xchg
aad
xor
loop
xlat
cmp
xor
cmp
hlt
cmp
hlt
cld
mov
fcomip
lret
enter
cmc
xchg
loopne
out
fidivrl
out
cmp
ds
jmp
and
loope
lock
testb
jecxz
push
shl
leave
aaa
repnz
out
icebp
sar
leave
lock
cmp
xchg
sub
orb
std
int3
jecxz
int
int
enter
add
loopne
std
in
hlt
xchg
std
into
jecxz
lret
xchg
cmp
leave
in
shl
int3
cmp
fadd
into
call
shl
out
xlat
loopne
int3
fimuls
loopne
jmp
fmul
ror
ret
shl
rcl
cld
vpmovmskb
xlat
in
fimuls
jmp
xor
shl
push
dec
in
fneni(8087
loop
test
in
in
iret
int3
test
loop
in
jecxz,pn
leave
enter
jmp
rol
aad
mul
rol
xchg
mov
fists
sub
ss
cmp
into
cmp
filds
leave
fucomip
in
int
lret
fcmovnu
out
hlt
loope
sub
aam
icebp
repz
repz
fdivp
jmp
aad
xchg
fldl
int
in
int
cmp
icebp
ret
fdivp
rcl
sub
into
lret
xchg
nop
test
mov
in
xor
ljmp
stc
jecxz
call
cld
jmp
ljmp
into
clc
fidivs
std
sarb
stc
enter
ret
loop
shr
fists
fcmovne
icebp
call
rolb
addl
call
icebp
stc
int3
enter
faddl
cmc
cmp
vpminub
enter
loope
int3
iret
xor
jecxz
out
ds
in
cmp
loopne
cld
loope
enter
adc
in
xchg
xchg
in
into
mov
fptan
out
out
call
sti
icebp
lock
addl
jmp
les
fdiv
out
call
hlt
std
lret
lret
in
cmp
stc
jecxz
fiaddl
adc
ret
ss
cmp
repnz
fnstcw
leave
movl
xchg
aam
ljmp
fcmovne
sti
cmp
iret
sar
call
fsub
clc
test
xchg
and
rcl
vcvtdq2pd
in
xlat
int
cmp
sti
fdiv
fcmovbe
test
lret
lret
inc
lock
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
cli
stos
inc
sbbl
jle
aas
add
repnz
and
xor
xor
jmp
sub
not
out
hlt
in
xchg
rcl
dec
aaa
xor
enter
iret
in
cmp
repz
fscale
lret
lret
xchg
xchg
out
ror
idiv
xor
in
in
aad
in
aas
cmc
and
mov
leave
aad
iret
sti
xor
add
cld
fildl
lea
mov
int3
int
xor
cmc
out
fcmovbe
clc
jmp
cmp
rcr
xlat
ret
loop
clc
ror
loope
fdivrp
leave
shl
repz
out
out
hlt
cmp
cmp
shl
aad
xchg
clc
std
call
cld
nop
in
repnz
enter
cld
xlat
aas
lret
in
mov
ret
enter
loope
repz
in
in
call
cmp
cmp
cmp
fnstcw
loopne
fdivrs
cli
fstp
std
ljmp
xbegin
rcl
repz
fst
hlt
in
aam
xchg
call
call
iret
aaa
cmp
in
lock
shl
fnop
loope
mov
fadds
in
xchg
mov
jmp
leave
cmp
lock
cmp
ds
fstp
test
mov
filds
out
rcl
xchg
fsubr
sub
shl
sar
enter
cmp
sar
icebp
fcomp
loope
cld
mov
adc
mov
ss
int
xor
rcr
adc
and
fsub
ret
orb
fidivrl
xlat
cmp
xor
hlt
aam
cmp
sti
aad
jmp
lock
ljmp
xor
sti
shlb
in
fdivr
in
in
div
fcmovnb
jmp
int
mov
int3
cmp
icebp
lock
out
int
cmp
ss
call
mov
loope
cld
out
std
jmp
cli
xor
out
jmp
loop
cmp
ljmp
mov
fucomi
popl
in
in
cs
xor
rolb
ret
cli
sti
into
mov
repz
out
std
xchg
lock
fcmovnu
xor
cmp
in
stc
fadd
sti
loope
jmp
mov
fmull
aad
in
in
out
icebp
out
jmp
clc
loopne
aaa
out
jecxz,pt
mov
orl
aam
loope
xor
test
xor
into
rolb
ret
in
loop
filds
and
xor
rcr
icebp
cmp
aas
fidivrs
ret
out
stc
loopne
into
rclb
clc
xor
int
cmp
stc
test
rol
stc
push
stc
lret
call
rcr
jmp
cs
fcomi
div
ljmp
test
leave
fcompp
std
cli
jmp
in
icebp
in
loop
int
rcl
sti
cld
aad
into
repz
mov
adc
or
mov
rol
xor
shlb
incl
std
rcr
in
jecxz
in
jecxz
repnz
loop
sar
fnstenv
cmp
xor
cmp
cmp
lock
ret
rcl
mov
out
lret
shl
into
sarl
enter
in
leave
sti
cmp
loope
idiv
fadd
sar
sti
mov
sar
loopne
std
addl
fidivrs
cmp
jmp
into
jecxz
mov
or
shr
in
jmp
xor
repnz
xor
fdiv
xlat
repnz
cmp
or
mov
lret
jmp
out
jmp
repz
rol
stc
fcmovbe
out
out
in
lock
fmulp
les
aas
enter
mov
xchg
fidivrs
int
cmp
call
clc
push
jecxz
mul
leave
leave
loopne
in
xchg
xchg
in
mov
mov
cld
neg
fldl2t
icebp
std
int3
testl
and
lret
call
fsubr
aad
hlt
aaa
aaa
rcr
into
out
cmc
mul
xchg
enter
sub
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
nop
add
cli
icebp
ss
sti
fiadds
jmp
jmp
in
into
jecxz
xor
jmp
int
test
sbb
fstp
flds
lock
icebp
repnz
in
ds
sub
shlb
aaa
lock
hlt
fsubr
xchg
nop
in
leave
stc
int
idiv
fxch
loope
int
fimull
fprem
dec
int
orb
out
sarb
hlt
test
icebp
cmpl
icebp
out
xchg
out
aaa
stc
repz
enter
sti
cmpb
ds
out
aad
xlat
in
out
filds
test
out
shl
hlt
iret
jmp
shl
out
fiadds
xlat
orb
shlb
rol
xor
cmp
fld
rcl
ds
test
out
test
aaa
call
div
cmp
loope
cmc
out
idiv
fdiv
test
std
aad
or
fcmovnbe
orl
cmp
rcr
repnz
cli
and
xlat
sti
ret
call
mov
xchg
lret
icebp
out
hlt
aaa
shr
in
call
out
cli
std
rcl
fucom
jmp
aad
jmp
nop
in
in
repnz
hlt
xor
ss
jmp
aam
aad
cmp
cmc
loop
test
stc
neg
and
xor
in
repz
fcmovb
clc
jmp
aaa
testl
fmull
mov
stc
cli
cmp
cmc
jmp
ds
add
loop
fiadds
xchg
mov
imul
ljmp
shl
fmul
lret
cld
repnz
stc
mov
int3
fisttpl
sub
out
lock
stc
xbegin
cli
sti
sti
cmp
testl
addl
xor
cmc
rolb
ret
rcr
fisttps
mov
jmp
xchg
jecxz
xor
repz
aam
in
cmp
in
icebp
fnstsw
repz
jecxz
loopne
clc
testl
out
idiv
lock
int
loop
in
cmp
jmp
test
std
in
fcoml
jecxz
ss
cmp
lock
shl
ror
mul
std
stc
out
std
xchg
sar
in
lret
in
call
cmp
cli
mov
fcmovb
fucomi
iret
in
addl
lock
aaa
leave
shl
in
shl
out
std
out
hlt
int
fxch
rorl
aad
fidivl
xor
cmp
fdivr
idiv
test
repnz
leave
in
int
int3
rorb
loope
fdivrl
cmp
in
shl
shl
rcl
aam
fucomi
jmp
out
test
repz
or
fxch
sti
cld
xor
jmp
ds
xchg
addb
cmp
xchg
ror
xor
out
out
iret
clc
sti
rcr
fidivs
fucomp
hlt
std
out
ljmp
mov
int3
int3
loope,pn
hlt
enter
clc
fmul
cmp
cmc
out
loope
xchg
in
out
sub
sti
lret
ljmp
faddl
clc
lret
sub
adc
lock
enter
lock
out
cmp
std
fldl
test
jecxz
cmp
test
int3
cmp
xor
cmp
filds
jecxz
not
hlt
std
lret
in
loop
iret
xorl
in
int3
call
xlat
repz
rol
fcomi
sti
ljmp
xchg
roll
ret
jecxz
xor
ss
cmpl
ds
xchg
fiadds
and
xchg
icebp
leave
enter
enter
lret
aad
xlat
test
out
in
mov
int
lret
jmp
cmp
in
fdivr
stc
ds
or
int3
out
ljmp
or
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
and
aas
add
mov
ret
xor
repz
std
xlat
repz
rol
stc
in
loop
jmp
addl
imul
loopne
cld
addl
rcl
or
lret
call
fld1
cmc
into
xlat
out
shl
inc
test
repz
testl
out
clc
repz
leave
into
cld
fidivrl
shl
cmpb
cmc
mov
int3
std
mov
mov
jmp
shl
mul
lds
ss
std
test
roll
test
loopne
loope
loope
rcr
aad
cld
repz
ror
in
aam
out
ljmp
xchg
sub
out
shl
out
cld
fsubr
loopne
testb
in
loope
jmp
ret
ljmp
into
hlt
xor
cmp
int3
int
out
cli
lock
or
stc
jmp
out
in
enter
cmp
iret
out
cmp
into
int3
cld
ret
in
mov
cld
jecxz
out
fsubr
xchg
int
cs
ss
repnz
xlat
int3
out
into
cmp
fldl
icebp
loope
loop
leave
enter
lock
hlt
enter
lret
idiv
fsubr
hlt
cmp
xchg
in
mov
push
aad
fmul
cmc
call
stc
fsubp
ds
call
sbb
rolb
xchg
enter
cmp
xlat
ss
lret
adc
jmp
stc
fiaddl
xorb
jecxz
xor
int3
cmp
clc
shl
in
xchg
lret
in
mov
iret
imul
ret
fxch
rcr
fldl2e
rol
clc
repz
loope
out
lret
in
in
hlt
fucomip
jmp
repz
jmp
repnz
lret
aad
jecxz
rcr
ljmp
clc
stc
cld
rolb
icebp
ret
aaa
xor
test
in
fimuls
in
jmp
mov
out
ret
leave
jmp
int3
in
ret
in
mov
cmp
fucomip
out
sti
mov
aaa
in
repz
cmp
lret
cld
fcmovu
fsubr
test
aam
mov
mov
addb
das
iret
xor
stc
stc
ds
cmp
fdivrl
std
std
in
mov
or
xchg
in
mov
out
ror
xor
idiv
fcomp
rcr
loopne
aas
rol
mov
loopne
or
out
adc
aad
idiv
cmp
in
cmp
ss
icebp
in
loope
aam
ret
fimull
addb
out
stc
ljmp
in
cmp
jmp
loope
fldln2
mov
shl
ss
out
lret
test
fsubr
icebp
push
out
testb
test
xchg
or
cli
cmc
cmp
shr
stc
sti
cmp
mov
leave
test
rorl
int3
cmc
iret
ss
aaa
in
sarb
cld
cld
lock
push
test
imul
out
mov
cld
fcomip
ljmp
cmp
neg
clc
cmp
loop
shl
ljmp
test
sar
mov
jmp
jmp
fdivr
lret
in
test
ret
xlat
leave
cld
lret
orb
mov
ljmp
sti
fdivrp
fcmovnu
cmc
out
fstp
call
out
lret
sbb
std
in
jmp
cmc
fmul
out
cmc
roll
out
mov
add
ret
mov
out
xor
xor
cmp
xlat
out
rcr
loopne
push
test
into
test
int
ljmp
in
hlt
out
jmp
ret
fdivr
repz
sarb
roll
icebp
fcomi
out
mov
rcl
out
jecxz
out
int3
in
cmp
cld
rcr
xor
in
jecxz
call
hlt
hlt
shr
cs
cmc
aad
hlt
repnz
sar
iret
cld
hlt
fsub
add
fiaddl
xchg
sti
jmp
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
shrl
fstpl
jle
add
out
loop
lret
aam
std
jmp
loopne
out
loopne
mov
test
xchg
in
xchg
into
clc
loop
out
in
shr
flds
sti
cmc
aas
cld
fucom
mov
test
mov
in
lock
lret
aaa
repnz
xlat
sarb
fninit
idivb
into
loop
rcl
jmp
mov
fimuls
int3
fprem1
aaa
shl
out
out
cmp
and
xchg
xlat
fisttps
sbb
lock
int3
sti
aad
aas
loopne
aad
xchg
out
fucom
sti
jmp
fsubp
enter
mov
rol
loopne
fisubrl
cmp
cmp
cmp
out
test
cld
sti
loope
adcl
into
aam
lret
repnz
loope
fdivrs
ss
fadd
mov
decl
lock
loop
les
aam
aad
clc
lock
hlt
idivl
mov
test
jecxz
mov
mov
rcl
sub
out
in
xor
clc
lock
aas
loop
test
mov
in
addb
enter
ss
into
lret
neg
loope
cmp
rol
clc
fxch
mov
test
cld
nop
nop
lret
nop
leave
out
lock
repz
fsub
xlat
aas
sti
std
test
in
test
out
xchg
loop
int3
out
ret
shl
out
out
aas
int3
int
xlat
adc
mov
sar
in
call
orl
lret
ds
rolb
mov
fdivr
fdivp
fcom
mov
ljmp
not
fsubr
cmp
into
cmp
test
cli
std
xchg
mov
test
xor
in
rol
fucomp
loopne
out
fsubrp
call
stc
xchg
int
in
cmc
loopne
icebp
loop
in
out
cld
loopne
cmp
rcr
cli
test
lret
lret
int
aaa
cmp
leave
out
aaa
cmp
jmp
cmp
rolb
fists
cmp
cli
leave
repnz
xor
and
rorb
int
rorb
xor
xor
in
stc
jmp
out
hlt
into
faddp
xchg
fisttpll
fisttpll
in
fcmovb
leave
shlb
cmp
xchg
loope
fld
cli
faddl
jmp
mov
fidivrl
stc
leave
fidivrs
aad
jecxz
mov
ret
adc
xchg
int
in
iret
ljmp
xor
div
std
cld
rolb
mov
mov
lock
enter
cld
out
cmp
sub
cmc
aad
fcmovu
sarb
cli
fisttpl
mov
xlat
hlt
int
fucomp
ljmp
inc
sar
shr
and
jmp
out
cli
out
mov
cmp
sar
aad
fdivr
sarl
lock
rolb
cmc
xor
icebp
call
hlt
clc
fildl
fcomip
jmp
mov
shr
das
xlat
mul
cli
out
ss
ror
neg
incl
mov
mov
in
loopne
ret
icebp
cmp
cmc
rol
ljmp
jmp
ds
test
loop
aad
repz
out
xchg
filds
int3
sub
out
into
int
std
lret
lret
xlat
cmp
xchg
jmp
fucomip
sub
faddl
shr
repnz
cli
xor
clc
dec
fcos
out
sti
cli
in
clc
mov
mov
xchg
in
ror
in
out
fptan
cli
repnz
sti
xor
out
std
cli
jmp
into
lea
hlt
repz
cmp
in
in
cmp
xchg
ret
addb
loop
loop
shr
xor
icebp
cmc
push
std
cmp
into
fsubp
repz
std
mov
leave
std
in
int3
mov
xchg
jmp
test
xor
int3
aad
jmp
incl
xlat
ret
loope
mov
cld
out
xchg
leave
int
mov
mov
jmp
ret
ror
ret
rcl
je
repz
sbb
add
int3
loopne
repz
hlt
in
int3
loope
aam
std
filds
jmp
in
mov
mov
std
xchg
icebp
ret
enter
cmp
xor
testb
sbb
fimull
mov
ss
fnstcw
out
sarl
cmp
cld
xlat
out
int
sbb
movb
out
xchg
mov
xchg
out
call
xor
repz
int
sbb
test
test
and
subl
leave
ret
xor
fdiv
xlat
fiadds
loopne
fiadds
mov
loop
repnz
stc
fdiv
stc
cmp
aam
cmp
rorl
loope
div
divb
ss
std
clc
inc
int
icebp
test
shl
hlt
in
enter
addl
out
out
repz
sub
aam
test
in
clc
fiaddl
int3
xor
shl
hlt
roll
out
loop
repz
out
mov
into
fdivp
mov
fldcw
rol
in
fcmove
jmp
cmp
fnop
xlat
icebp
sti
ret
cld
fucomp
xchg
in
loop
xchg
int
icebp
cli
out
rcr
aaa
cmp
int3
cmp
xchg
ljmp
nop
xchg
in
loop
test
aaa
shl
out
out
clc
cli
in
ror
hlt
fiadds
fsubrp
jmp
mov
rcl
aaa
xor
out
xor
out
xor
test
test
aad
lret
decb
stc
lock
rcl
lock
cld
jmp
hlt
fcmovb
adc
sti
aas
out
lret
test
in
test
int3
out
out
out
xor
stc
aam
cmp
rol
in
xchg
in
ljmp
ljmp
not
enter
shlb
repnz
test
jmp
nop
out
lret
xchg
jecxz
xor
cmc
enter
shl
fnstcw
sar
xor
mov
fcmovu
loopne
iret
icebp
call
clc
les
in
fcmovu
int
cmp
cmp
jmp
out
mov
loop
leave
stc
jmp
fucomi
shl
in
shl
inc
loopne
int3
repnz
cmp
ror
call
xor
icebp
cmc
fcmove
std
out
in
out
rorb
xor
xor
idivl
ljmp
aas
xchg
stc
cld
decb
iret
imul
xlat
int3
jecxz
jmp
aas
lock
iret
shl
cld
lret
loope
mov
test
and
int
call
cmp
aam
aas
adc
mul
loop
movl
xor
test
lret
out
in
stc
clc
addl
loop
clc
test
jmp
xor
sub
cmp
jecxz
xlat
fnsetpm(287
repz
cmp
ljmp
xor
xor
divl
enter
iret
fidivs
jmp
jecxz
xchg
mov
rcr
aad
jmp
in
incl
mov
cld
mov
fcomip
xor
out
int3
aam
xlat
out
ror
fldln2
iret
repz
shr
std
mov
out
fdiv
out
cmp
shrb
out
shl
iret
std
fdivr
std
rcr
cmp
aad
mov
fxam
lea
leave
cs
into
in
fsub
shl
int3
test
shl
ret
aam
test
call
in
aam
lret
jecxz
xor
fdivrl
call
lock
les
sti
test
call
cmc
in
cmc
fstp
loope
in
cmc
ss
shl
icebp
in
cli
jmp
xchg
sar
test
icebp
leave
sarl
fmul
repz
test
out
in
icebp
xchg
xchg
loopne
ljmp
not
std
std
aam
xlat
shl
testb
cli
shl
test
xor
jmp
int
vpaddusw
fstp
pop
mov
outsl
xor
pop
jle
aas
add
xor
cmp
int3
lock
aad
movb
iret
in
ljmp
in
repnz
repnz
aam
hlt
out
in
mov
xchg
test
jmp
shl
shll
div
int
into
cmp
repnz
ds
xchg
test
into
cld
adcl
in
fcomi
loopne
ret
clc
icebp
loopne
rorb
clc
fucomp
into
mov
in
cmp
xor
in
cmp
in
aam
out
repnz
in
xlat
test
mov
sub
fstpt
call
in
in
xchg
enter
loopne
lret
loope
xchg
fdivrp
lock
das
sub
xor
out
fnstcw
cmp
ret
addb
cld
leave
and
fsubr
rcr
nop
mov
repz
enter
aam
mul
cmp
cmp
xchg
ror
sti
nop
icebp
mov
fsubr
xor
std
cmp
into
cmp
cld
fmul
int3
stc
jecxz
xchg
ror
int
lock
loopne
clc
addb
movb
hlt
in
cmc
icebp
lret
lret
xor
cli
sti
aas
dec
rol
movb
out
cld
in
int3
fucomp
xor
imul
xlat
adc
loope
cmp
clc
neg
fcmovb
loopne
out
loopne
test
ss
xor
cmp
adc
lock
repz
cmc
stc
xlat
cld
mov
fucom
xchg
in
shl
cmp
out
lock
fdivr
clc
sbb
sub
loope
iret
lock
fdivp
mov
cmc
shl
shr
in
jmp
out
ss
cmpb
lret
fdivrp
loop
cmp
ljmp
fdivrl
ds
sbb
repnz
and
fisttps
out
jecxz
das
ljmp
cmc
jecxz
div
lock
repnz
mov
iret
sti
mov
jmp
lret
xor
cld
cli
in
aas
and
mov
testb
dec
rol
in
xlat
cmp
iret
idivb
std
fcomp
addl
hlt
and
lret
cld
stc
icebp
test
mov
lock
fdivrp
aaa
shl
fadd
loopne
enter
in
int3
sti
into
shr
out
aam
lret
imul
shl
rol
xor
sbb
ret
in
aad
fld
into
fucom
out
mov
in
enter
xor
aam
xlat
ret
roll
fnclex
leave
mov
test
cmc
fcomip
ss
test
sti
cmp
cmc
fdivrl
ljmp
jecxz
xchg
fsubp
in
cmp
int
stc
ds
rcl
int
adc
cmc
in
ljmp
in
out
jmp
jmp
into
enter
rol
xchg
mov
hlt
fcmovb
rolb
call
int
in
cli
fsubp
repnz
loope
cmp
mov
cld
loope
out
iret
int3
rorb
enter
clc
call
cmc
sti
fisttpll
ret
xlat
addl
aam
cmc
cmp
cmp
into
cmc
out
loope
out
neg
jmp
int
sub
std
adc
shr
enter
cmc
fcmove
fadd
xlat
fcom
out
stc
mov
int
cmc
iret
lock
lret
sar
fsubr
xlat
std
sarl
icebp
clc
cld
loope
ret
fadd
aad
fucomip
xchg
out
repz
out
repz
cld
ss
ss
ret
repz
aam
test
fisttpll
loop
xor
in
jmp
sti
iret
fdivrp
xlat
in
stc
faddl
ret
fstp
enter
rorl
int3
icebp
jecxz
xor
das
jmp
int3
fsub
rcl
cmp
sti
mul
mov
mov
mov
adcb
fdiv
ljmp
fcmovbe
les
fadd
stc
into
in
rcll
jmp
fcom
xlat
push
xlat
outsb
sarb
add
jle
aas
add
das
in
xlat
clc
fnstenv
aaa
rcl
jecxz
ret
stc
jecxz
rol
mov
loop
ljmp
repnz
jmp
in
stc
sarb
lock
stc
in
cld
fadd
in
int3
xchg
and
aam
cs
out
leave
cli
icebp
cli
iret
cmp
clc
loope
mov
fcomip
jmp
iret
cli
loop
enter
aad
loopne
rcl
ret
loop
loop
std
cld
fsqrt
fsubp
xchg
cmc
jecxz
out
hlt
into
hlt
aam
testl
into
lret
icebp
icebp
rolb
call
cmp
in
lret
loopne
loope
in
sbb
fisttpl
mov
vpxor
ljmp
faddl
jmp
ds
int3
sti
fisttps
xor
shr
ljmp
clc
test
stc
sub
call
adc
ljmp
sbb
in
cld
fcmovnbe
in
leave
sti
in
lret
xchg
shl
jmp
loop
xlat
ret
cmc
out
sbb
incl
loop
orb
sub
in
out
ljmp
aas
rol
rcl
ds
stc
repz
ret
incb
out
shl
fcmovbe
out
cmc
aaa
clc
fnstsw
cld
filds
mov
in
mov
lock
aam
hlt
ss
clc
cmc
call
repz
sar
fcmove
mov
stc
xlat
in
test
loopne
shl
aas
fsqrt
into
cmc
jmp
into
xorb
inc
cld
repnz
stc
xchg
fsubr
fcmovnu
fildl
cmc
call
div
std
aaa
and
stc
xchg
neg
repnz
int
mov
std
fmulp
aam
xlat
out
aaa
jmp
loop
fndisi(8087
lret
test
loopne
loope
adcb
cmp
clc
int
loopne
out
repz
repnz
ljmp
out
nop
rcr
xor
loop
hlt
xor
cmp
loopne
in
repnz
loopne
fsubp
in
fisttps
fmulp
out
out
xlat
shl
xlat
rol
fst
xlat
cmp
call
cmc
clc
out
lock
ror
cld
icebp
in
in
out
xor
xor
xor
fincstp
cmp
ljmp
out
call
clc
iret
xchg
icebp
ret
les
lret
sti
repnz
fcmovne
xlat
xchg
addl
xor
cld
lret
aam
shl
loope
in
xlat
faddp
faddp
imul
ljmp
aad
xlat
out
imul
stc
xor
cmc
cmp
div
neg
neg
lds
cli
ficoms
xchg
ljmp
lret
ds
ret
sar
roll
fsubr
xchg
out
fimuls
in
cli
stc
lret
addl
jmp
xchg
in
out
icebp
out
test
in
lret
out
repz
fnstcw
aas
into
lret
ret
addl
rol
in
std
loop
jmp
call
cld
int3
cli
aad
sar
ret
xlat
fxch
fdivrp
jmp
hlt
fdivs
cmc
in
fidivrl
ret
icebp
sti
test
loope
mov
loop
enter
les
aaa
repz
lock
lret
stc
cmc
out
aas
loopne
xlat
stc
mov
xlat
lea
mov
ror
loop
xor
lret
repnz
xor
fcomi
xlat
stc
xlat
mov
sti
sti
aad
jmp
std
fcmovbe
mov
cli
jmp
aad
jmp
cmp
loope
aad
les
mov
lret
out
aas
aad
fidivrl
fsubr
jmp
loope
sti
loope
cmp
orl
in
loop
jmp
jecxz
repnz
stc
iret
jmp
cmc
das
cmc
call
loop
test
and
mov
xlat
xchg
cmp
mov
test
aam
xor
jmp
cld
into
fdivrs
out
orl
repz
bnd
idivb
rorb
test
add
push
push
mov
jmp
rcl
rol
rol
rcl
mov
inc
test
pusha
popa
jle
aas
add
lret
icebp
xor
ljmp
fdivrp
stc
jmp
in
lret
std
fcoms
icebp
sub
mov
lret
flds
lock
int
shl
loopne
xchg
out
ret
xlat
cmp
cmp
shl
clc
out
out
shl
ret
aad
fsubr
out
test
lock
xlat
lret
les
int3
fcomi
fsubrp
div
iret
in
out
testb
jmp
fxch
out
ror
lret
clc
int3
xor
fcmovu
leave
sti
test
shl
xor
stc
ds
int3
xchg
mov
mov
lock
ror
enter
int3
out
out
ret
adc
out
fucomip
mov
sub
lock
aaa
mul
fstp
xlat
adc
cld
icebp
out
xchg
icebp
aas
sbb
rcr
int3
adcl
ljmp
out
jmp
xlat
orl
repz
repz
les
out
hlt
fstp
aad
hlt
ret
cmp
cmp
in
xabort
cld
nop
iret
fiadds
int
cli
imul
int3
enter
ret
idivb
repnz
sbb
leave
clc
xchg
lock
xchg
jmp
fcom
std
cmp
xlat
in
fdivrs
vpavgb
test
ljmp
xor
std
idivl
bnd
and
rcl
test
cld
jmp
or
hlt
mov
repnz
call
repz
cmc
aad
mov
mov
lret
jmp
int3
adc
cs
out
fdivl
clc
in
addl
out
mov
mov
in
mov
in
hlt
mov
cld
int
ss
cmp
aad
out
sbb
mov
int3
leave
in
shll
repnz
rcl
idivb
cmc
jecxz
in
shl
sub
in
xchg
out
test
xchg
int3
ror
in
xor
ror
clc
hlt
aas
fiadds
adc
addb
divb
rcr
call
sbb
fadds
loop
movl
jmp
rol
icebp
cmp
lock
jmp
int
cmp
repnz
in
fdivr
xchg
test
hlt
in
decb
lock
fidivrl
lock
clc
cmp
shr
ret
int
icebp
test
shl
rolb
xor
ljmp
loopne
clc
lock
vpsubusb
mov
and
in
int3
loope
ss
idivb
int3
sbb
fnstsw
test
ret
sub
cmc
int
int3
out
lock
in
sub
hlt
int3
cmp
cmp
fcmovne
cmc
aas
call
jmp
out
in
sti
xchg
xchg
sbb
sar
int3
in
ljmp
out
rol
out
lret
lock
in
mov
clc
xor
jmp
repz
repnz
test
mov
popl
repz
cmc
cmp
in
cmp
aas
loope
into
dec
sarb
cmc
fcmovnu
fucomi
enter
rcl
into
xchg
sub
in
les
xor
fcmovu
aam
ds
jmp
ror
jmp
in
nop
lock
lret
in
in
test
lret
shl
fadd
in
xchg
enter
mov
out
sar
out
into
hlt
std
in
cmp
rcl
ret
enter
rcr
lock
aam
iret
int
iret
iret
out
ljmp
ret
ljmp
lret
sti
out
adcl
xor
fprem
fmulp
cmpl
icebp
aas
call
jecxz
out
out
in
fdiv
aam
das
aam
into
out
xor
fcmovnb
in
out
icebp
testb
and
xchg
aad
in
xlat
rcr
bnd
jecxz
ds
shl
leave
out
lock
aam
ss
in
sar
aaa
and
out
cmp
in
call
mov
fmul
mov
loop
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
inc
scas
in
mov
aas
add
cmp
xor
repnz
dec
ret
jecxz
fldl
lds
fildl
into
aaa
idivl
cmp
lret
in
call
jmp
fadd
xor
iret
aaa
div
repz
loope
loopne
enter
call
xchg
rorb
into
cs
stc
sar
loop
ds
sub
mov
mov
into
shr
xor
enter
rcr
adc
cmp
fadds
iret
loop
jmp
xor
fadd
cmp
fmul
aaa
cli
shl
int
int
repnz
jmp
fimull
xchg
into
int
into
cmp
rcr
cmp
into
fcomi
cli
repz
mov
lret
in
ficoml
call
cmp
iret
lret
int3
fdivrs
stc
cmc
rolb
fucomip
nop
or
test
lret
out
cmp
cmp
fucomp
loopne
loope
rorl
lret
loopne
repnz
iret
lret
aam
out
xor
in
xor
rcr
sar
in
fcom
cmp
in
out
enter
in
out
jmp
fcom
aam
xlat
hlt
xor
rcl
sar
addb
sti
xchg
icebp
shl
clc
xor
ror
jmp
hlt
ret
hlt
xchg
fisttpl
into
in
out
xor
sub
cmp
or
jmp
leave
fiaddl
int
xor
out
aad
std
ror
stc
into
loopne
iret
addb
in
jmp
sbb
hlt
out
shrb
int3
leave
repz
fcomp
cli
xlat
into
aas
in
cld
aam
lock
lret
mov
in
aad
xor
out
icebp
ds
cld
jmp
sar
xchg
cmc
xchg
std
call
shl
cld
mov
in
aaa
stc
shr
xor
cmp
sbb
call
into
in
in
mov
fisttps
lock
iret
jmp
sarb
icebp
aad
clc
std
neg
in
ljmp
loop
sti
out
cld
xor
loopne
cli
and
lret
leave
stc
lea
jmp
out
not
xor
in
xor
aam
loope
aas
addl
rolb
xchg
sarb
lret
leave
int
ds
aam
aad
jecxz
in
stc
lret
movb
cmc
in
in
in
aaa
cmp
loope
cmc
xlat
sarl
test
xlat
into
xlat
stc
nop
out
fsubp
jecxz
jecxz
fnstcw
out
cld
cmp
icebp
into
fadds
call
fsubrp
out
xchg
fisttps
loop
fcmovne
rcr
xlat
out
roll
lock
out
fucomp
nop
xchg
lret
aad
out
jmp
stc
in
clc
clc
cli
xchg
inc
cmc
loope
jmp
cli
lret
mov
cmp
xor
ljmp
mov
mov
jecxz
lret
fmul
rolb
leave
sub
in
jmp
int3
icebp
leave
cli
loope
cmp
mov
div
clc
mov
xor
rcr
sti
div
xor
into
div
ret
test
mov
out
fadds
aam
out
loope
lret
out
fstp
leave
addb
clc
cmc
clc
fst
leave
loopne
out
out
lea
shl
cmp
int3
into
cmp
out
in
sub
in
jmp
xchg
das
hlt
in
xor
aaa
sti
aam
sti
fnsetpm(287
stc
repz
fucomip
fsubp
xchg
in
iret
xor
out
call
fnop
cmp
fsub
out
std
xchg
test
lock
std
int3
aad
fistpll
out
sbb
adc
xchg
test
in
cld
fisttpl
ror
out
std
std
aam
into
iret
out
sar
mov
in
stc
enter
repz
cmc
mov
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
or
jns
loop
jle
aas
add
cmp
sti
repz
cmp
iret
icebp
cmc
rolb
loop
test
fimuls
shrl
in
hlt
cmc
cmp
xor
jecxz
ds
cmp
sub
rcll
xor
stc
int
fcomip
stc
cli
into
ret
xchg
rcr
mov
loop
cld
in
out
xor
call
out
ljmp
rol
sti
clc
mov
fcomp
in
lret
aam
vcvttpd2dq
sti
sti
leave
loop
out
iret
neg
mul
lret
in
out
sub
shl
lock
out
xor
cmp
out
fdivrp
into
rcr
ror
cmp
loopne
mov
fimuls
test
in
lret
lock
aaa
fsubr
cli
stc
cmp
fcom
ret
inc
in
int3
mov
loope
shl
test
mov
shl
lret
lock
into
fcmovu
jecxz
ds
neg
stc
jmp
fiadds
roll
out
in
xlat
imul
icebp
ret
jecxz
mov
mov
aam
shl
in
test
enter
idivb
rol
jmp
add
in
fldl
repz
ljmp
rolb
nop
mov
int
repnz
in
xor
aaa
fsubr
ljmp
xchg
test
mov
cmc
repz
shl
rcl
repz
stc
aad
in
ret
call
call
out
and
enter
xor
hlt
fdivr
out
repz
aam
idiv
enter
in
in
std
in
mov
aad
xor
sti
clc
loopne
fdivrl
rcr
sti
roll
ljmp
aam
fdivs
aad
call
cmp
test
call
loope
xchg
test
cmp
std
ss
fnstsw
shl
in
hlt
orb
mov
in
enter
enter
aaa
cmp
xlat
icebp
iret
test
not
neg
out
cld
cli
call
mov
lret
jmp
cmp
push
ds
into
mov
icebp
call
rolb
fcmovnbe
not
cld
loopne
into
lock
addb
fnstcw
in
out
lret
sar
in
rcr
hlt
add
shr
int3
clc
fcos
hlt
int3
mov
enter
lret
out
fsubrp
loopne
sar
aas
loop
ret
lret
inc
loop
xchg
icebp
xchg
in
rol
xor
repz
cmp
lret
lret
cmp
cli
ret
cmp
mov
out
sub
shr
iret
div
ss
or
loop
adc
loopne
cli
test
cmp
decl
in
std
cld
iret
fdivrp
ds
mul
hlt
aam
std
test
icebp
ficoms
cs
repz
out
fsubp
loopne
out
fld
rol
fldz
mov
incl
xchg
out
xor
xor
ror
in
ljmp
mul
loope
jmp
sub
jmp
out
in
in
sti
cmc
or
fcomp
rolb
mov
repnz
in
cmp
cli
enter
inc
fstpt
cmp
test
out
testb
in
repnz
iret
xor
clc
repnz
loop
fmul
fstpt
xchg
out
cld
sti
adcl
out
fadd
out
testb
addb
and
std
roll
call
fincstp
in
xor
leave
sar
repnz
loop
fcmovu
mov
sub
vshufps
xlat
in
ss
into
cmp
orb
iret
xchg
rclb
int3
shl
out
sti
cld
rcl
std
addl
aad
loop
xchg
jmp
pop
mov
jmp
aam
fadd
fstp
pusha
shl
nop
cld
cwtl
stos
mov
add
ss
iret
iret
imul
clc
test
out
vshufps
icebp
xchg
xchg
in
loopne
cli
iret
cmp
out
ror
loopne
int3
cmp
out
sti
vaddsubps
jmp
hlt
stc
iret
cmp
rcl
clc
sarb
into
ss
rol
fldl
mov
in
clc
lock
lret
jecxz,pt
int3
fnstsw
out
clc
fstp
lret
rolb
in
jmp
repz
enter
rcr
test
rcl
clc
fsubr
std
nop
fcoml
out
in
in
cli
xlat
icebp
ljmp
aam
repnz
clc
clc
call
lret
mov
nop
int
xchg
sub
in
xor
not
hlt
sarl
loop
rcr
hlt
add
std
lret
cld
ficoms
cmc
out
rol
shr
fucom
into
cmp
div
shl
jmp
in
out
into
lock
nop
ficoms
aam
fdivrl
sti
int
cmp
movb
mov
jmp
xchg
mov
sar
out
cmp
xlat
rcl
out
cmp
jecxz
ret
cmp
call
repz
or
shr
cmp
iret
ret
ds
enter
xlat
fisttps
into
repz
aam
call
stc
loope
neg
cmp
loope
test
ret
mov
out
call
in
jmp
std
lret
clc
clc
test
std
incl
aad
aad
not
out
out
sarl
clc
aam
std
out
lea
das
das
int
fsubr
stc
cmpb
ret
iret
jecxz
rcr
idiv
clc
sti
loopne
mov
in
xchg
loopne
mov
in
clc
ret
div
cmp
aas
repz
rcr
fadd
in
incb
aad
shll
cmp
cmp
cld
aad
cld
enter
fneni(8087
rcr
orl
not
icebp
jmp
int
mul
xchg
mov
neg
cld
iret
test
hlt
xchg
loope
fprem1
int
out
out
xor
into
adc
shr
std
repz
in
test
shr
jmp
ss
into
rcl
mov
sti
sub
fiadds
xchg
loope
in
cmp
int3
roll
fiadds
fisttpll
lret
repnz
call
ljmp
into
shl
sti
fdivr
mov
shr
in
mov
loop
xchg
std
adc
test
lret
cmp
cld
jmp
int3
iret
ret
fsub
fmuls
and
loopne
test
leave
aaa
icebp
out
aas
int3
rcl
in
xchg
xchg
in
fcom
lock
mov
mov
das
out
xor
cmp
enter
repz
fucomi
ret
cli
loop
loop
cld
fisttps
rcr
xor
out
sar
hlt
aaa
cmc
in
mov
int
xchg
fmulp
fiadds
fld
aam
in
inc
cmp
loop
clc
xor
cmp
into
repz
sub
shl
xor
cmp
call
jecxz
into
test
cmc
fildl
int
decl
into
in
lret
ljmp
xlat
out
add
rcr
mov
int
jecxz
loopne
orb
out
leave
sti
cmp
in
fdivrl
aam
xchg
repnz
clc
cmp
xchg
jmp
stc
aaa
hlt
cmp
fcmove
aad
neg
std
ret
jmp
xlat
filds
xchg
mov
loope
xor
in
ror
in
lret
ret
std
test
out
out
jmp
icebp
xchg
notb
xor
fcomp
idiv
ret
cmc
rol
enter
addb
std
jecxz
jmp
cmp
icebp
lret
icebp
aad
ret
lock
ret
xchg
xchg
xchg
xchg
into
in
xor
xor
adc
shr
add
add
fcomp
fistps
je
xchg
xor
jb
jle
add
jmp
into
rcl
fld
test
testl
jmp
cmp
iret
iret
stc
jmp
in
test
loop
inc
in
into
int3
xchg
xchg
shl
xor
int3
xor
xlat
cmp
clc
xlat
ds
out
roll
in
fcmovnbe
mov
aaa
shlb
xor
xor
and
incb
call
into
ret
rclb
cmp
aam
cmp
loop
iret
mul
out
test
fsubrp
mov
xchg
mov
xor
in
fdivrl
into
cli
out
shl
loopne
out
cli
loopne
orb
int3
jmp
rol
fld
shl
cmp
cmp
inc
aad
aad
sti
fucomi
fsubr
repnz
orl
lret
fdivrs
cmp
rolb
addl
xchg
loope
cs
sub
cli
cmp
sar
cmp
xlat
neg
mov
fcmovnb
jecxz
test
jmp
out
xorb
vpand
cmp
std
leave
sti
loope
stc
fadds
ljmp
in
int
in
loope
ret
fdivl
cmp
out
rcl
sti
sbb
test
xchg
iret
orb
lret
into
xor
rcl
xor
lret
fcmovu
faddl
cld
sar
nop
jecxz
rcl
jecxz
shl
xor
ffree
ds
fcmove
aam
out
hlt
out
out
call
xchg
and
hlt
aam
lock
cmp
fdivr
fadd
fadd
cli
fcmovnu
loopne
int
int3
fimull
out
lret
loope
cmp
cmp
hlt
std
idiv
cmp
in
cmp
fcmovu
fxch
int
out
fdiv
ror
ljmp
sti
loope
fucomp
shr
in
shr
ret
loope
sti
xchg
into
out
jmp
xor
in
cmc
rol
xchg
xchg
mov
ljmp
rol
cmp
aad
int
in
hlt
mul
cmpl
mov
loop
fiadds
icebp
shlb
and
and
fdivp
xlat
test
test
out
filds
rol
lret
fptan
cmp
shl
dec
loope
iret
call
jecxz
mov
mov
cs
cli
cmp
into
ljmp
xlat
aas
clc
repz
add
fisttps
leave
xchg
loop
cld
in
ss
cmp
iret
rol
ljmp
out
lock
out
shl
in
clc
cmp
aas
fdiv
ljmp
fcmovne
loope
aad
lret
fninit
test
int3
int
enter
ljmp
hlt
imul
xchg
or
loope
aad
iret
div
ffreep
f2xm1
iret
out
out
cld
in
repz
lret
int3
jecxz
lock
lret
test
xor
in
fadds
repz
loopne
jmp
jecxz
test
repnz
fcmovbe
int3
fstpt
out
fxch
ror
cmc
iret
xor
in
call
in
fildll
in
xlat
lds
aam
lret
fnstenv
ffreep
cmp
jmp
clc
lret
std
in
ljmp
clc
cmp
xor
fsub
clc
xlat
test
std
cmp
shr
loop
fadds
adcb
rcl
into
lock
incl
cmp
fxam
cld
repz
lret
aam
xlat
into
iret
std
repz
fcmovnbe
neg
hlt
repz
and
out
lds
mov
loopne
ss
cli
hlt
lock
lock
lock
xchg
std
movl
lret
into
xor
out
out
lret
cmp
test
fimuls
mov
out
nop
aad
call
fcmovnb
lock
cmp
fstpt
sub
in
std
clc
adc
xchg
ljmp
add
add
add
aas
aas
ror
rcl
ret
pushf
mov
adcl
add
fnstenv
cld
test
movl
xchg
out
shll
frstpm(287
jmp
int
rcr
fmul
test
xlat
jecxz
neg
mov
xchg
roll
leave
shr
cmp
iret
shl
loope
cmp
fiaddl
std
jmp
fisttps
xchg
jmp
in
std
icebp
idiv
cmp
fdivr
cmp
mov
in
test
enter
orl
cmp
loope
repz
jecxz
xchg
repnz
ljmp
shlb
call
lock
fcmovnbe
xchg
fstp
jmp
decl
sti
aam
lock
jmp
cmp
lret
in
cli
aaa
out
ds
fsubr
and
rcr
mov
enter
jmp
ror
ljmp
leave
repnz
mov
clc
sub
leave
out
xor
jecxz
cmp
testl
repnz
lock
dec
enter
icebp
int
xor
icebp
cmc
incl
cmc
into
out
mov
leave
in
sub
ss
jmp
out
testl
mov
addb
ret
ljmp
xor
sti
bnd
jecxz
repz
std
enter
icebp
std
mov
in
int
in
sti
icebp
int3
stc
out
xor
stc
aam
addl
sti
cli
mov
loopne
nop
int3
ror
xor
div
in
fcmove
fadd
out
repz
sar
in
call
int3
addb
xlat
cli
ljmp
out
hlt
jecxz
ret
cld
loopne
xchg
jecxz
in
rcr
rol
iret
ror
cmc
fsubr
loope
test
imul
loope
clc
and
in
icebp
loop
cmc
xor
xor
xor
fmul
out
lock
std
sar
ljmp
cmp
aam
out
cmp
cmp
repnz
aas
jecxz
loopne
sti
fsubr
jecxz
cld
lea
int3
xchg
loopne
vcvttpd2dq
ret
int
aam
lret
rolb
xlat
or
mov
out
lret
ljmp
lret
in
std
jmp
cmc
mov
cmc
hlt
int
push
out
test
cmc
jmp
shll
into
test
jmp
test
call
vshufpd
xlat
fmul
int3
fst
cmp
loop
cmc
call
jmp
ffreep
xchg
jmp
icebp
into
cmp
hlt
fcmovnu
cmp
xlat
mov
rcr
mov
in
test
mov
mov
repz
lret
lret
cld
rcl
stc
jecxz
cmp
fcmove
stc
mov
loop
lock
test
rcl
repnz
xor
icebp
cmp
in
test
call
lock
clc
sti
mov
enter
loopne
ljmp
icebp
std
cmp
in
jmp
out
sbb
call
popl
int3
jmp
xor
out
xor
cmp
out
aad
out
fdivr
mov
addl
mov
in
ljmp
fsqrt
iret
rolb
loop
jmp
faddp
out
in
std
in
mov
sub
icebp
fdivp
repz
hlt
aas
xlat
repnz
call
iret
repnz
in
int3
ss
in
cmc
fcom
hlt
fcmovnu
shl
cmc
iret
hlt
lret
aam
loop
out
mov
call
enter
int
out
sar
icebp
ror
aad
out
sti
fcomp
xchg
ljmp
out
in
rcr
out
in
shl
shl
rcl
les
clc
movl
out
in
in
cmp
lret
inc
roll
leave
int3
add
mov
xchg
iret
cmp
not
ss
xlat
cmp
std
filds
out
into
in
std
xchg
jmp
repz
hlt
stc
das
cmp
shr
add
add
rol
aad
pop
pop
movsb
or
mov
and
jle
aas
add
aas
cmp
fcmovb
xchg
ret
leave
leave
call
lock
test
into
into
icebp
repz
std
idiv
fdivrs
sti
ret
out
fincstp
orb
xchg
sub
in
out
int
cmp
repz
cmp
test
sarl
cli
iret
in
loope
out
aam
int3
mov
fnop
out
sarl
aaa
leave
fyl2x
in
fadds
cmp
std
out
fsub
nop
int
xor
out
out
jmp
out
clc
roll
fcmovnu
stc
call
out
repz
cld
shl
fucomi
fnstsw
repz
cmc
jmp
ljmp
mov
in
cmc
icebp
sti
icebp
aas
or
repnz
call
jecxz
ret
ljmp
jmp
xor
icebp
sar
int
shr
rcl
adc
jmp
xchg
mov
in
int3
repnz
xor
in
cmp
clc
std
div
aam
out
test
add
fdivr
mov
aad
out
sti
in
fdivr
out
out
cmp
in
sub
ffreep
leave
out
leave
mov
cmp
aas
out
shl
shll
int
cmc
fcomp
cmp
addb
jmp
loop
fst
dec
leave
out
cmc
xor
sarl
jmp
test
in
mov
in
fmulp
mov
fptan
icebp
xchg
int3
lock
xor
fcmovnu
lret
shl
iret
fcmovb
ret
repnz
lret
ret
std
dec
out
call
decl
std
clc
stc
fadds
hlt
idivb
aad
roll
sar
xor
loop
xlat
cmp
repz
inc
jecxz
fadd
loopne
clc
lret
out
xchg
repz
jecxz
cmc
call
rcr
std
ffreep
ffreep
test
les
mov
adc
lret
aad
fdivrl
int3
std
loope
adc
loop
cli
flds
mov
decl
xlat
cmp
lret
in
in
repz
ljmp
mov
cmpb
xchg
out
into
repz
lret
not
ror
icebp
sub
cld
testl
mov
xchg
imulb
repnz
lret
int
cmp
addl
in
lock
icebp
addl
call
fdivr
loopne
fnstsw
sti
mov
loope
out
lret
das
leave
repnz
in
rcr
sub
in
hlt
lock
sti
out
mov
out
out
jmp
cmp
fsub
sti
hlt
out
jmp
in
in
repz
loope
sarl
lret
std
clc
leave
ljmp
loopne
fucomi
int
call
lret
out
int
cli
sti
call
rcr
cmp
in
stc
fadds
ljmp
hlt
out
hlt
cld
aas
in
clc
fdiv
aam
loope
stc
cmp
test
jmp
int
mov
std
hlt
fdivrs
dec
rol
rol
loop
loope
loope
mov
rolb
clc
xor
cli
clc
fcom
leave
loope
cmp
jecxz
lret
stc
out
jmp
xchg
mul
call
fdiv
cmp
std
test
cli
fcmovnu
aas
fcmovnu
in
test
xchg
orb
int3
cmp
ds
aas
sbb
cld
loop
hlt
in
loop
in
int3
fstl
iret
cmp
jecxz
iret
fdivrl
hlt
jecxz
hlt
fdivr
ds
rcr
faddl
std
xchg
xchg
lret
cmp
xor
lock
in
fdiv
shr
cmp
sbb
jmp
std
std
fcomip
mov
hlt
xor
xor
das
sarl
lret
cld
fabs
cmp
xchg
rcl
loopne
aam
jecxz
in
sar
fucom
hlt
xor
cmp
shl
ror
ljmp
rcr
shl
mov
nop
fiaddl
mul
ljmp
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
std
leave
push
cmpsl
jg
jle
add
fldln2
cmp
ret
loop
sti
idiv
test
lret
orl
aad
aad
out
fscale
fdivr
adc
fildl
mov
jecxz
fildl
in
in
repnz
not
aaa
clc
fidivs
ret
loop
in
jmp
or
lret
int
div
out
aad
ljmp
cmp
out
out
idiv
ljmp
xor
iret
shr
ljmp
loope
in
decb
out
jmp
icebp
in
aad
sub
in
fcmovnbe
repz
ljmp
test
in
cli
in
in
int3
lret
in
shl
div
lret
das
xor
call
neg
test
out
loopne
imul
mov
and
aam
stc
not
in
cmp
enter
rol
loop
addb
imul
clc
std
loopne
xchg
in
sub
cmp
ss
cmp
out
cmp
test
xlat
iret
fists
cs
aaa
ss
stc
fsub
mov
cli
test
loop
fcmovnu
jecxz
orb
xorb
aaa
enter
cli
loopne
loope
fcmovnb
out
cmp
test
sti
rorl
nop
leave
mov
xchg
int
shll
lock
fmul
ret
icebp
not
test
fisttpll
leave
xchg
test
in
xchg
aad
ss
in
lret
lock
in
loopne
jecxz
fcmovne
out
in
ljmp
shl
cmp
cmp
ret
xor
mov
inc
iret
leave
in
lea
repz
sarb
addb
jecxz
mov
sub
jmp
jmp
fcmovnbe
int
rcr
aam
cli
inc
mov
std
sbb
lock
fidivrl
enter
into
and
ret
in
loop
lret
fxch
mov
lret
icebp
loopne
xchg
aad
shr
cmp
cmp
stc
cmp
cmp
rcr
fcomi
mov
enter
into
mov
sub
call
fdivr
into
div
ds
xchg
clc
testb
jmp
das
shl
clc
xor
aad
cmp
rcl
in
call
int
jmp
lret
loop
jmp
xor
jmp
repz
fsin
idiv
test
rol
xchg
in
into
jmp
ror
int
xor
sar
out
ljmp
rolb
and
mov
in
test
nop
das
das
repnz
stc
aad
idiv
fdivrs
in
aas
rol
aam
test
leave
ftst
incl
in
lock
ss
leave
xlat
jmp
out
fadds
ljmp
repnz
xchg
xchg
jecxz
xor
sarb
stc
lret
icebp
sarb
loopne
jmp
ret
test
test
fcmovnu
cmp
cmp
cmp
ds
mov
decl
mov
xchg
in
aad
idivb
in
sar
iret
ds
push
clc
rorl
ret
mov
addl
imull
fldz
cmp
lret
icebp
ret
les
sub
cmc
xchg
mov
rorb
out
xor
lret
lret
aam
test
sbb
cld
int3
filds
lea
ret
ss
cmp
aaa
loopne
fdiv
and
aam
leave
jecxz
mov
mov
lret
test
divl
clc
fnstcw
sti
in
sar
cli
fnstcw
xlat
repnz
in
mov
iret
shl
in
cld
jmp
lock
test
out
cmc
call
mov
rol
sub
xlat
in
int
out
aad
rcr
repz
stc
mov
fxch
or
jmp
in
mov
sar
cmp
out
fcomi
cmp
cmp
loop
xlat
xchg
test
out
clc
icebp
fcomip
ffree
loop
leave
in
int3
sub
rorb
test
inc
or
pop
add
add
fmul
aad
movsb
inc
jb
inc
mov
in
add
aas
add
out
loopne
cmc
stc
clc
mov
loop
jecxz
iret
mov
icebp
sub
aad
lret
in
shl
int3
repnz
fistpll
icebp
cld
lret
mov
fiadds
rcl
aam
xlat
sub
repnz
ss
lret
loop
cmp
aam
out
ds
fucomi
xchg
in
shl
into
fcmovnu
shr
shr
icebp
ds
loop
in
rcr
fldz
in
loopne
addb
sar
lret
loope
sti
test
hlt
lock
roll
in
xchg
lea
in
rol
int
aad
fdivs
fucomi
ror
stc
les
out
orl
mov
in
shl
rol
out
cmp
repnz
faddp
hlt
ds
test
out
out
repz
jecxz
xor
lret
fscale
cmp
sbb
std
sti
in
test
icebp
ror
hlt
xor
xor
iret
sti
sarl
cmp
adc
fiadds
call
in
sub
aad
clc
shlb
fcmovu
vpmuludq
bnd
in
test
mov
cmc
xchg
xlat
lret
shr
iret
call
add
hlt
incb
lret
lret
xchg
loopne
icebp
hlt
lret
int3
in
int
into
not
fucomi
cmp
repnz
push
mov
in
lret
xchg
xchg
xor
fcmovnb
cmc
xor
int
fcomip
lret
in
addl
mov
lock
shl
lds
int3
fdivl
sti
shl
int3
cmp
repnz
repz
fimull
shl
cmc
in
das
ljmp
cmp
test
clc
rol
fcmovb
lret
loop
int3
in
fcomip
loop
ret
shr
xlat
neg
cmp
loopne
ret
faddl
loop
and
call
xlat
sti
iret
loopne
leave
or
out
ret
jmp
mov
enter
aam
in
neg
sar
cmp
fiaddl
cmp
fcmovu
icebp
in
aad
sub
fldl2t
iret
dec
hlt
clc
shlb
iret
fidivrl
test
shr
sti
in
xor
mov
out
xor
int
hlt
loop
out
out
cmc
hlt
leave
cli
fsubp
sti
faddl
in
shl
icebp
clc
ret
std
ljmp
out
in
out
lret
shl
iret
in
out
out
shl
cmc
jmp
std
into
out
sarl
jecxz
enter
fimull
nop
in
xor
lret
cmc
fidivrl
out
cmp
cmp
xchg
test
aad
leave
call
addb
fcmovu
cmc
fdivr
cmp
idivb
out
fcmovnu
mov
out
lock
idivb
xor
cmp
and
out
shl
loope
jecxz
xchg
in
decl
iret
call
aam
out
int3
in
shl
xchg
cld
in
lret
in
test
icebp
xor
cmc
out
rcr
in
aam
cli
mov
fxch
in
mov
mov
rol
in
fstpt
hlt
in
cmp
shl
into
cmp
addb
fucom
mov
clc
aad
out
cld
out
enter
rolb
ljmp
in
ror
out
mov
loope
loop
lock
cmp
out
add
sti
loopne
loopne
cmp
cli
stc
iret
sti
out
jecxz
out
xchg
into
cmc
int
int
rcr
xor
cmpl
lret
fxam
in
mov
test
in
in
xlat
sar
stc
rcl
int3
cmp
not
cmp
loopne
fmulp
ljmp
shr
out
call
cld
cmp
std
std
xor
out
leave
nop
lret
and
lret
sub
ss
iret
int3
jmp
sar
int
fsqrt
jecxz
test
in
imul
orl
dec
cmp
into
jecxz
das
into
fmul
fisttps
jne
mov
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
clc
jns
jg
or
aas
add
cmc
xor
and
fucomp
stc
mov
jmp
xchg
xchg
mov
bnd
sarb
lret
out
cmp
icebp
aas
sar
aas
test
in
loop
call
or
in
icebp
hlt
xor
not
enter
cmc
std
jecxz
dec
roll
fmull
mov
test
jmp
jmp
jmp
cmp
aam
dec
clc
int
lret
iret
adcl
ret
lret
enter
aam
in
mov
stc
int
in
out
cmc
rcr
in
out
cmp
xor
xor
cmp
mov
stc
jmp
add
fucom
out
mov
cld
repnz
cld
clc
fsubp
ljmp
call
stc
clc
fimull
cmc
rol
cmp
aaa
fcmovu
fdivr
cmc
aas
loopne
addl
xchg
repnz
loopne
in
in
cmp
xor
lret
in
in
ret
loopne
fdivr
out
xchg
jecxz
lock
xchg
dec
ror
call
jmp
out
int
cmc
mov
fcmovb
fdiv
cmc
jecxz
xchg
lock
decb
shl
repz
in
xlat
test
addl
in
sti
addb
hlt
xor
cmc
ss
shll
cmp
clc
aam
cmp
fmul
out
icebp
and
shl
xor
out
xor
aaa
lock
cmp
stc
addl
test
ret
repnz
aad
sti
repz
ds
std
fcmovb
mov
cli
fiaddl
jecxz
int
call
in
repnz
rcl
xor
aad
cld
cmp
aam
repnz
mov
mov
out
fbstp
imul
sti
cmp
cmp
in
ror
loopne
loopne
fsubp
fcoml
loop
fmulp
xlat
cmp
loop
cmp
not
ffree
cmc
stc
cli
into
loope
lock
in
or
std
cmc
xlat
cmp
or
std
mov
iret
popl
repnz
repz
int
xor
test
aad
mov
dec
orl
ret
test
cld
jmp
icebp
test
and
out
rcr
jmp
lock
out
aam
xor
icebp
shr
fdivrl
fcomp
idiv
icebp
std
cmp
stc
stc
std
jecxz
xchg
ret
out
lret
lret
out
cmp
test
xchg
in
into
loope
faddl
into
int3
rol
xor
xlat
xor
jecxz
rcl
fdiv
xchg
std
in
lret
fnstsw
sti
mov
div
neg
fsub
aad
ljmp
and
mov
faddl
icebp
shr
enter
xor
aad
hlt
out
repz
in
cmc
mov
orb
std
mov
hlt
out
cs
out
aam
jmp
stc
stc
cmp
loopne
add
out
fucom
fstl
icebp
mul
jmp
sar
cmp
hlt
repnz
lret
hlt
cli
aad
cmp
rcl
lret
mov
icebp
rcll
leave
ljmp
fiaddl
orb
stc
test
lea
xlat
fnsave
xor
ds
cli
cmc
stc
rcr
leave
clc
leave
jmp
out
xchg
in
ljmp
rcl
shr
out
cld
jmp
loope
fcmovnb
fndisi(8087
and
sti
mov
out
fsubp
loopne
idiv
out
ljmp
repz
bnd
out
cmp
nop
icebp
test
cld
iret
xchg
lret
xor
cmp
shl
in
test
loop
hlt
xchg
int3
fildl
in
in
not
lock
shl
stc
aam
incb
sbb
mov
out
jecxz
rorl
ret
fnstcw
enter
cmc
ss
call
cld
fldl
jmp
ror
lret
push
or
mov
add
aam
aad
fstp
movsb
ficomps
pusha
ljmp
jle
idivl
fucomip
addb
in
ljmp
das
ror
enter
out
in
icebp
stc
rcr
in
sti
in
sti
jecxz
loop
loopne
xchg
loop
into
call
aas
cmp
fcomip
sarl
mov
in
test
out
in
fisttps
in
test
icebp
lock
ret
in
clc
rol
leave
call
rolb
xchg
leave
loop
out
lret
icebp
hlt
and
std
in
out
rol
call
in
lret
out
ljmp
cmp
mov
loop
fsubrp
call
in
jecxz
out
xor
out
icebp
sti
repz
loopne
fdivrl
rol
ror
mov
fneni(8087
lock
mov
xlat
ss
std
icebp
enter
into
loop
lock
in
out
loope
addl
aam
sti
jmp
cmp
iret
fucomip
shl
aas
jmp
test
fsubrp
loope
xchg
lea
fidivl
cmc
in
xor
cmc
out
fidivrs
cmp
cli
out
aad
ljmp
hlt
aam
out
test
xlat
aad
sarb
fst
jmp
in
test
icebp
movl
ljmp
xlat
icebp
out
std
lret
out
rol
icebp
xor
loopne
cmp
out
nop
shl
add
jmp
jmp
repz
lret
mov
mov
out
out
hlt
xchg
out
repnz
xor
out
jmp
jecxz
call
jmp
jmp
out
loop
ljmp
cmp
fstp
cmp
std
call
aam
lea
jmp
ljmp
ror
cmp
ret
cmp
shl
in
loop
in
lret
imul
cmp
shll
fxch
aaa
aam
into
lock
lock
sti
lret
std
ror
repz
int3
call
out
iret
out
clc
idivl
cmp
loop
cmp
out
repz
lret
fucompp
jecxz
out
loop
xor
xor
in
clc
xlat
sar
cmp
out
aam
clc
cld
ljmp
int
out
lret
ljmp
cld
fstp
cmp
mov
test
iret
xchg
shll
out
xor
xor
cmp
aas
stc
jmp
int
mov
bnd
in
aaa
ds
ljmp
fcmovu
jmp
int
call
fldz
cmc
out
out
xor
int
out
repnz
ljmp
in
ror
stc
clc
lret
xor
ror
clc
shl
cmp
vpsubq
cld
sbb
iret
loope
in
testb
xor
cmp
icebp
loop
clc
lock
ret
shl
int
int3
mov
loope
hlt
out
in
cmp
shl
clc
iret
add
jecxz
loope
loopne
notl
aam
aaa
in
sti
in
int3
in
iret
fstpt
fmul
div
icebp
clc
xor
xchg
test
rolb
aad
ss
in
loop
jmp
shr
out
aad
orb
ror
sub
repz
dec
int3
mul
fcmovne
aad
loop
cmp
xchg
sbb
jecxz
xchg
loop
in
xor
xor
int
cmpb
std
ret
xor
icebp
fcmovnb
cli
test
mov
fisttps
in
xor
repz
jmp
fsubr
loop
in
lret
in
cli
jecxz
int3
call
vpaddusw
in
in
filds
enter
int3
into
loopne
jmp
fucomip
in
ror
cmp
lret
fyl2xp1
in
addb
rol
decb
test
cmc
jecxz
out
xlat
aam
repnz
hlt
out
hlt
out
fimull
in
xor
xor
leave
std
repz
shr
shr
add
add
lret
enter
int
cltd
movsb
imul
xchg
addr16
repnz
adc
aas
add
cmp
dec
mov
mov
shl
in
out
out
int
lret
fabs
loop
ds
adc
rcl
vmovq
hlt
orl
xor
fdivrs
in
lret
aam
test
xchg
loopne
lret
in
nop
xor
xor
iret
jmp
fnstenv
aas
cli
cld
addl
xchg
in
repnz
aam
out
call
icebp
not
fmul
cmc
test
orl
loop
xor
das
jecxz
cs
sti
fneni(8087
int3
in
xchg
hlt
shl
std
mov
jecxz
fisttps
xchg
lret
xlat
fxam
test
fdivr
repnz
xchg
std
xlat
in
int
nop
call
shlb
shl
xlat
repz
out
lret
cmp
fdivrl
lret
test
jmp
out
xchg
xchg
repz
aad
in
fcomp
cli
lret
loope
into
cmp
sbb
fstl
shlb
shl
jmp
or
iret
cmp
in
stc
xchg
out
in
icebp
in
mov
leave
out
in
aad
cmp
mul
repnz
rcr
mov
in
in
jecxz
call
shl
cmp
in
clc
int3
fneni(8087
in
shl
ffree
xor
ljmp
clc
les
fadd
aad
clc
cmc
shr
cmpb
in
mov
lret
lock
aad
into
int3
cmp
jmp
cmp
test
push
cld
test
mov
orb
ror
stc
lock
int
sar
int3
loop
fidivrl
filds
cli
repz
jmp
jecxz
hlt
jmp
dec
adc
cmp
clc
cmp
lret
fsub
mov
out
fmulp
in
cli
cmp
repnz
fstp
roll
cld
fiaddl
out
rcl
iret
fsubr
sar
aad
jecxz,pt
lock
jmp
lret
rorl
jmp
repnz
cld
xlat
loope
cmp
repz
jmp
mov
fucomi
jmp
mov
ret
lret
xor
cld
jmp
cmp
faddl
jecxz
rorb
rcr
iret
int
into
ss
cmp
loopne
and
aas
repnz
mov
neg
rorb
jmp
out
cmp
aas
cmp
xorb
sti
testl
in
mov
out
ljmp
xlat
out
fidivrs
in
xchg
mov
rolb
jmp
icebp
cli
xor
call
stc
stc
aas
shll
icebp
flds
sbb
loope
ljmp
jmp
cld
shl
int3
in
sbb
jecxz
testb
fstl
stc
cmc
fmulp
into
fcomip
rcl
shl
aas
out
std
cli
lds
and
mov
stc
xor
hlt
enter
in
in
ret
in
in
fcmovbe
sub
out
into
out
into
rcr
fstp
cmp
ret
icebp
call
ret
xchg
test
mov
ss
repz
cld
repz
fstpt
std
icebp
loopne
in
cld
loopne
sti
lret
out
call
cmc
cmc
lock
out
sarb
shl
into
iret
sti
jecxz
xor
ret
fdivrp
in
in
shl
fcmovnbe
rcl
fcom
fiadds
jecxz
loopne
enter
xchg
loope
sub
ljmp
cmp
ret
loopne
mov
std
cli
int3
clc
cli
xchg
roll
out
lret
sti
fucomi
fmul
aas
fst
aas
rcl
xchg
sub
test
call
xchg
aam
out
sarb
ljmp
std
adc
xlat
stc
dec
fsubr
xchg
into
jmp
hlt
cmc
test
jmp
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
cmp
fiadds
mov
out
in
leave
xlat
fdivrl
aaa
cmp
cmpl
ret
ret
ret
mov
xchg
cmp
ror
movl
rcr
fsqrt
mov
iret
test
repnz
cmp
out
cmp
fld1
sti
jmp
test
movl
cli
iret
xchg
xchg
lret
out
enter
shr
xlat
std
ret
rolb
out
enter
addb
std
std
xor
ret
xor
loopne
xchg
test
xchg
nop
out
fidivs
cs
sar
aas
rol
shl
cmc
fcmovnbe
mov
in
filds
xchg
call
rcl
cmp
into
aad
rcr
cli
shl
jmp
int
sar
in
mov
rcl
int3
idivb
loop
rcl
aaa
stc
lock
sti
repz
out
xchg
and
xor
hlt
aas
out
hlt
aam
ds
aas
cmp
enter
cmp
in
shll
lret
sar
out
sti
aam
rcr
fdivrp
orb
xchg
repnz
das
sub
imul
call
mul
out
sar
fisttpl
in
xchg
fst
call
in
into
push
in
cmp
test
jmp
faddp
fcmovnu
neg
cld
fmul
fcomip
loop
sar
repz
xor
aad
enter
clc
add
cmpb
orb
rclb
in
rcr
iret
int3
aam
repz
add
test
sbb
iret
repnz
aad
jmp
shl
bnd
test
std
repnz
loop
vpsllq
int
repz
int3
aas
mov
fldl
xchg
fucomp
test
fldpi
aaa
fidivrl
ss
cli
shl
ret
std
fmul
clc
xchg
fcmovnu
test
xor
sti
aam
fxch
not
ret
loop
test
loop
into
in
in
repnz
loop
out
loope
jmp
ss
jmp
aam
fucom
cli
mov
loop
int3
mov
lock
adc
lock
out
fdivp
fnstsw
ror
clc
neg
push
repz
jmp
sub
ljmp
in
rcr
out
in
iret
sarb
sti
cmc
sti
xchg
loope
stc
into
ror
lret
aam
cs
repnz
icebp
aam
testb
jecxz
nop
mov
in
ss
lret
xor
ljmp
cmc
in
incl
in
iret
xchg
loop
in
shr
leave
sti
out
enter
fsubp
cmp
ret
loop
loopne
faddl
enter
fsubp
xlat
jecxz
aam
fsub
cmp
lock
ror
jecxz
repnz
aad
int
mov
xchg
rol
ljmp
aaa
fdivr
xor
stc
lret
rol
repnz
xchg
shr
cmc
rcr
test
enter
out
jmp
lock
ret
xchg
in
out
xchg
xchg
rcl
in
in
cmp
xor
loop
cli
sub
jmp
loop
loopne
loopne
xor
hlt
stc
stc
cld
xor
std
fst
lock
ds
out
lds
int3
fcmovu
xchg
jecxz
call
lret
jmp
fucomi
lret
loopne
loop
stc
repnz
shl
mov
in
in
icebp
leave
divb
in
in
icebp
not
jecxz
fcmovu
loop
flds
call
fldl
aad
xlat
out
lret
not
sar
ffreep
sti
call
in
fdivr
xchg
ret
in
jecxz
int
out
out
jmp
xor
enter
out
xchg
lret
jmp
div
out
xlat
cld
aam
fidivrs
stc
cmp
cmp
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
mov
sbb
aas
add
rol
cli
repnz
lret
shl
mov
cld
ljmp
idivb
hlt
cmp
cmp
cld
xlat
std
loope
mov
in
filds
in
nop
call
lret
hlt
sar
addl
xchg
iret
in
xchg
sub
xor
cmp
ss
addl
decb
test
ljmp
std
fdiv
cmp
and
shl
mov
fsubp
jecxz
in
iret
int
ljmp
xor
cmp
cmp
out
out
in
xor
sti
out
addb
repz
cmp
cli
adc
cmp
jmp
jmp
decl
cmc
ror
cmc
repnz
enter
int3
in
out
std
ds
not
aam
fdivrp
ror
xchg
adc
out
enter
clc
cli
out
xlat
cmp
rol
aas
xchg
aas
orl
repz
ret
imul
aad
lret
xor
shl
ret
orl
out
in
loopne
rcl
xchg
call
in
hlt
cmp
cmp
add
out
ret
mov
rolb
repnz
rol
cmc
sarl
fld
ret
fcom
call
hlt
fisttpl
call
ret
shl
xor
call
shr
sbb
call
testb
lret
in
rcr
in
xor
repnz
aad
rcr
shl
call
enter
nop
lret
loope
int3
mov
into
ror
icebp
in
int
out
testl
mul
mov
jecxz
lock
iret
clc
loopne
lret
xlat
test
aad
shl
out
fadd
orb
shr
clc
lock
aaa
lock
ror
lret
ret
sti
test
fsubr
ret
test
xchg
mov
jmp
int
aam
cli
into
in
call
int3
repz
aas
repz
shl
lret
call
xchg
fiadds
cmc
sti
ljmp
std
aam
in
aas
mov
rorl
nop
loop
in
out
stc
out
fcomp
repz
hlt
cmp
ret
cmc
mov
std
lock
roll
jmp
div
std
iret
loop
sarl
aam
test
jmp
sti
clc
fimuls
fsub
xor
enter
loopne
cmp
rcr
roll
add
loop
fneni(8087
lock
in
test
shr
iret
cli
hlt
rcl
test
cmp
loope
mov
mov
in
out
test
in
ljmp
clc
loopne
int
sti
test
aad
lret
enter
xchg
hlt
xor
repz
cmp
rcl
out
call
in
stc
enter
loopne
repz
into
ror
fdivl
enter
lret
loop
clc
std
enter
jmp
mov
in
enter
icebp
cmc
ss
lret
int3
leave
fnstsw
fcmovnb
fidivrs
jmp
addb
call
in
std
enter
stc
jmp
jmp
fldl
in
and
ljmp
aam
into
loop
cmp
int
xlat
aas
cmp
cmc
loope
shl
jmp
fmuls
in
out
cmc
int3
les
lock
out
testb
rol
sar
fcmovu
frndint
int
movb
shlb
dec
idivb
cmp
in
xchg
mov
loope
fistl
lret
into
repnz
cmc
leave
int
cmp
xlat
shl
aas
mov
lea
out
rol
lock
ljmp
aam
aas
add
out
mov
xchg
int3
loop
test
in
into
cmp
stc
repnz
jecxz
sti
out
div
leave
fsubr
mov
ret
sti
fsubr
call
in
shl
rorl
add
add
ror
int3
aam
mov
frstor
aas
add
xchg
sbb
clc
decl
adc
leave
neg
jmp
hlt
cmpl
fcomp
les
lock
rcl
repz
iret
in
sar
aaa
cmp
rolb
add
ret
std
mov
out
repz
in
repz
into
out
lret
aas
repnz
jecxz
fcomi
test
clc
out
in
mov
out
in
clc
iret
sti
jmp
jmp
fsubr
in
test
mov
lret
fisttps
in
jmp
shl
jmp
sarb
cmp
cli
xor
sti
in
clc
call
fdivr
stc
ret
in
loopne
or
in
iret
cli
cmp
aas
jmp
jecxz
in
xchg
std
in
lret
xlat
lret
iret
xchg
into
in
aaa
shr
call
mul
cmp
xlat
cli
test
ljmp
in
loopne
repz
adc
out
cmp
lock
xor
in
in
repz
test
xlat
in
loopne
icebp
icebp
in
jmp
div
repnz
sarb
cmc
out
rcl
rolb
leave
fucomp
sub
mov
into
in
lret
ljmp
int3
into
std
aad
hlt
enter
and
stc
out
dec
cmc
xor
cmp
dec
ror
cmp
call
cld
fucomp
fcmovnu
sti
hlt
hlt
mov
shlb
aad
neg
xor
lock
out
xor
std
ret
in
in
in
mov
fucom
aam
cmp
cmp
fcmovnbe
out
stc
sti
aam
cli
shl
aad
in
lret
iret
in
lret
jmp
repz
repz
lock
ret
ret
out
rol
repz
out
in
lret
in
mov
aam
xor
repz
aad
add
hlt
xlat
mov
repz
stc
mov
mov
in
xor
iret
xlat
icebp
xor
and
lret
mov
rcr
mov
ljmp
aad
xor
cmp
loope
sar
cld
orl
loopne
in
out
repnz
ret
aad
cmp
fadds
out
test
mov
in
std
xchg
lret
sub
out
cs
clc
fnstcw
cli
cmp
shl
shl
in
in
incl
nop
in
lret
leave
stc
enter
test
aam
sti
jecxz
in
xchg
xchg
into
jmp
out
out
shl
repz
ret
faddl
sub
in
ficoms
leave
out
jmp
ds
loope
xlat
lock
repz
xchg
mov
xchg
xchg
in
ret
xor
jmp
enter
cld
aam
hlt
in
cmc
loope
ljmp
sub
aaa
lret
clc
cli
clc
rcr
cmp
xlat
icebp
cld
out
out
in
loope
int3
das
fidivrl
shl
lret
cmp
rcl
rol
div
addl
std
repnz
fists
shr
out
out
repnz
cli
aad
stc
clc
xchg
out
mov
push
fiadds
out
jmp
sarb
fdivrp
into
rcr
repnz
clc
xor
mov
xchg
shl
not
cmp
ljmp
clc
out
orl
fmull
sarl
xor
xlat
int
in
cmp
loope
cmp
loopne
loope
jmp
cli
fiadds
out
jmp
sti
out
fmul
fcomp
loop
mul
std
test
loope
mov
mov
jmp
adcb
ror
lret
fdiv
cmp
xlat
rolb
mov
lea
ljmp
out
cmp
sti
stc
in
std
in
aas
in
rorl
jmp
sub
call
out
aaa
imul
fldln2
std
loop
repnz
add
faddp
cmp
lock
xchg
in
ret
sub
fdivs
out
int
aad
repnz
in
ds
orl
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
aas
fcmovne
fmull
orl
repz
ror
addl
mov
out
xchg
in
sarl
repz
ss
fdivp
ret
repnz
icebp
std
lret
aam
cld
lret
sti
jecxz
adcl
leave
lret
cmp
icebp
neg
in
loop
lret
call
repnz
xchg
and
sub
xor
ljmp
stc
hlt
std
hlt
in
call
in
fisttpll
rcl
das
in
ror
ss
out
rcl
in
aas
ret
out
fiaddl
xchg
jmp
xor
cmp
cmp
call
sti
loop
enter
cld
incb
xchg
hlt
call
cmc
in
sarl
cmp
jmp
loope
call
repz
fucomi
lret
cmp
shl
loop
call
out
out
decb
ffreep
in
cmp
into
aam
sar
in
lock
hlt
in
ret
clc
in
sbb
ret
int3
fldl2e
cmp
sarl
cld
lock
cmp
ret
fmul
enter
out
mov
sar
in
fiaddl
sti
aad
rcl
test
mov
out
rolb
out
xor
xor
out
leave
fldz
jecxz
test
ror
addb
lret
int
sub
fdiv
cmc
xor
faddp
ds
fld
lret
fdivr
lock
ret
enter
repz
xchg
clc
in
loopne
and
xchg
repnz
leave
cmp
cmc
cld
int3
loopne
adc
mul
fdiv
ljmp
sub
adc
out
leave
out
cmp
fucom
cmc
fmul
cld
mov
shr
leave
out
shr
test
shr
int
jmp
aas
in
ret
repz
fidivrl
fdivrp
fsincos
fiadds
ret
loop
lock
out
xor
testl
in
lret
clc
lock
out
xchg
fadd
repnz
sti
call
into
hlt
jecxz
repnz
fadds
mov
loopne
in
clc
cmp
leave
ljmp
test
fiaddl
lret
mov
in
lret
lret
jmp
int3
repnz
in
enter
std
enter
rclb
repz
jecxz
lock
in
aam
idivl
fcmovne
loope
cld
std
in
sti
out
shr
sar
rol
aaa
cmp
sar
repz
in
aas
iret
rcl
cmc
lret
fcoml
lret
aam
cmp
call
sarb
hlt
loop
ret
fcos
xlat
mov
out
jmp
ljmp
in
lret
clc
fcmovnu
clc
aad
in
test
xlat
in
dec
test
out
loope
icebp
xchg
loopne
out
fcmovu
in
into
leave
shl
aad
int3
repz
stc
enter
lret
or
mov
clc
call
cmp
repz
test
stc
shl
fcmovu
fisttpl
call
in
call
ds
xlat
cmp
repnz
in
fcos
mov
addb
in
loopne
aad
out
out
call
fdiv
loope
xchg
test
std
lds
lea
leave
cli
cmp
clc
cli
not
loope
cld
ds
shl
cmp
xchg
std
out
fdivp
aad
loop
sti
xor
loopne
hlt
cli
aam
in
repz
cmc
fiadds
out
div
shl
lret
out
out
cmc
cmp
cmp
fiaddl
xlat
leave
mov
jecxz
lret
in
fsqrt
call
cmc
sar
call
in
out
out
mov
call
aaa
xor
vshufps
cmp
int
jecxz
ret
addl
mov
mov
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
lahf
jo
jg
aas
add
inc
loopne
call
ljmp
lock
fsubrs
repz
jmp
shll
call
sar
mov
xlat
test
out
in
xchg
cmc
loop
xor
xor
shl
fcomp
int
xor
rolb
cmc
leave
filds
in
aam
call
fdecstp
lock
fdivrp
aas
jmp
and
or
mov
ljmp
loop
loopne
enter
out
out
shl
std
cld
aad
cld
out
ret
rcl
stc
in
mov
lret
xchg
repnz
xor
cmp
aas
cmp
loopne
ret
repnz
lock
fcmovnu
mov
out
jecxz
iret
in
cld
in
int
call
hlt
xor
sti
hlt
icebp
fptan
repz
out
out
int3
in
test
repz
xlat
out
ret
cmp
cmp
aas
jecxz
in
sbb
jmp
xchg
out
out
xchg
rcl
fsub
cmp
int3
leave
cld
iret
clc
rcl
sub
fcmovbe
leave
out
mov
std
cld
lret
jmp
icebp
hlt
lock
xlat
in
ljmp
rol
clc
neg
xchg
into
std
xchg
out
shl
xor
call
enter
icebp
icebp
lock
lret
loop
lret
jmp
in
loope
std
call
rol
aam
fiadds
ffreep
repnz
int3
xchg
xor
cli
aam
aad
ss
fidivrs
cmp
roll
mov
jecxz
mov
repz
icebp
imul
fxch
std
aad
lock
repnz
cmp
call
repnz
shl
in
cmp
cmp
test
cmp
in
jmp
std
test
and
mov
mov
jmp
cmc
fadd
xor
rol
out
in
mov
fldz
cli
aam
lock
out
xor
lret
out
xor
repnz
out
aas
mov
lret
mov
imull
std
std
int3
call
test
test
out
ret
xlat
out
test
jmp
add
lock
int3
cmp
roll
xchg
repnz
fdiv
mov
enter
in
rcl
fimuls
in
aam
into
aas
cmp
jecxz
loope
ret
loope
stc
sti
lret
fcmovnb
std
lret
fucomi
aam
ror
cmc
int3
shlb
out
int
adc
fadds
enter
in
xchg
in
mov
lock
cmp
aam
fmul
int3
fiaddl
jecxz
fucomp
testb
xchg
rol
in
div
fstpt
aas
iret
clc
cmc
aas
fcmovnu
ljmp
iret
out
in
aam
aaa
lret
xor
xor
clc
aas
out
icebp
fadds
in
fucomi
decb
fnstenv
out
jmp
fadd
cmp
cld
ds
sti
out
lret
cld
mov
repnz
and
rol
xor
sti
cmp
cmp
sti
std
iret
loop
out
stc
iret
loop
loop
int3
in
test
mov
rcll
xlat
jecxz
enter
jmp
hlt
in
filds
cld
or
mov
not
out
cmp
inc
fbstp
xchg
cmc
ret
xchg
lret
in
jecxz
xchg
xchg
mov
repnz
sti
loope
in
addb
loop
fcmovnu
sbb
xchg
leave
fsubp
xor
cld
shlb
shl
repnz
ret
in
iret
faddl
xlat
sti
loop
in
int3
sbb
sub
cs
in
cld
sti
ret
rcr
loope
shl
clc
xlat
xchg
sub
shl
lret
iret
hlt
cmp
fsubrp
lock
cli
sti
test
xchg
cli
testb
fcoml
push
fdivs
out
les
icebp
div
leave
jmp
out
cmp
fsub
imul
mov
and
mov
call
lock
aam
xor
aaa
cmp
xor
test
xlat
sbb
fmuls
fsubr
out
xchg
out
fmul
sub
int3
shr
sar
call
sarb
jecxz,pt
inc
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
cmpb
sub
aas
add
loope
xlat
xchg
in
mov
mov
loopne
hlt
xor
repz
cmc
leave
loope
in
rcr
aam
ret
jmp
in
in
in
in
in
cmp
cli
sar
std
aas
or
loop
mul
fucomi
mov
bnd
shl
out
repnz
call
ret
shl
ret
loopne
cld
nop
or
jmp
jmp
divl
out
adc
test
clc
aad
loope
fucomip
loopne
cld
mov
mov
in
hlt
fst
in
fcom
repz
test
faddl
int
fists
jmp
in
icebp
hlt
in
fsubr
fistpll
shl
shl
in
sarb
hlt
aam
out
mov
out
lret
mov
cld
test
xchg
xor
test
rcl
in
cmp
cli
shl
hlt
mov
cld
ljmp
rcll
leave
fmul
int
std
shl
aam
aaa
jecxz
clc
enter
std
vpsraw
fstl
xor
jmp
iret
iret
icebp
aaa
fnstsw
cmp
jecxz
lds
out
loopne
into
dec
out
in
xor
fnstcw
cmp
cmp
aas
inc
enter
mov
jmp
int
iret
lds
not
stc
fsubr
rcr
fdiv
sar
in
flds
ljmp
ss
fst
loopne
in
loop
fcmovb
rcl
lds
sti
loopne
in
mov
out
jmp
aaa
into
fstpt
aam
out
shl
loope
out
out
out
int3
aam
das
lret
shr
test
adc
std
test
jmp
filds
in
int3
jmp
int3
div
idiv
cmp
in
repnz
addb
jmp
loope
cmp
fsub
int3
aam
fcom
stc
icebp
loopne
aas
fistl
loopne
out
out
int
lock
in
jecxz
div
ret
mov
ljmp
xor
sti
in
aaa
enter
shl
cld
xlat
addl
fmul
xchg
ror
div
out
xlat
icebp
icebp
int3
loope
jecxz
stc
rol
stc
cld
filds
loopne
xor
fmul
xor
clc
adc
mul
enter
movb
loop
aad
ljmp
ljmp
sti
addl
out
xchg
and
jecxz
in
leave
call
cmc
into
fidivrl
stc
loope
repnz
lret
fstl
loop
icebp
hlt
hlt
in
xlat
ds
add
stc
enter
enter
addb
repz
fsubrp
xor
cmp
aam
rcr
roll
loopne
iret
shr
xchg
iret
mov
xor
ret
in
call
in
lret
rcl
div
cmp
cld
xchg
mov
loope
mov
hlt
hlt
int3
jmp
not
test
in
sar
loopne
out
fxch
sti
popl
xchg
out
in
xor
int3
aam
in
repz
loop
fiaddl
std
iret
xchg
mov
shl
test
shl
ret
repz
hlt
into
rcl
roll
fdivrp
fadd
decb
mov
in
rcr
enter
std
icebp
iret
loope
hlt
cmp
sti
in
stc
sti
sti
jmp
mov
loop
jecxz
fmul
stc
aad
hlt
addb
mov
shr
fiadds
aaa
xor
fdivrs
dec
cmp
std
repnz
shr
cli
jmp
loop
enter
out
cld
out
loope
leave
xor
jmp
into
rcr
out
test
ret
mov
stc
jecxz
int3
sub
out
in
int3
call
ljmp
in
neg
mov
mov
out
xor
in
out
aam
rcl
loop
addb
lock
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
cld
cli
lds
int3
nop
xchg
cmp
idivb
out
test
int
aam
in
ljmp
cld
nop
test
int
enter
in
xor
out
sbb
lock
cli
not
fldl2e
fadd
fimull
in
out
out
in
icebp
icebp
stc
repz
fstp
lret
idivl
rcl
ljmp
clc
cld
jmp
xor
cmp
xlat
aad
fdivr
fcmovne
jecxz
shr
call
and
jmp
cld
ret
xchg
ljmp
aaa
lock
cli
cmp
aad
loopne
test
roll
out
int
iret
fucomi
loope
out
icebp
aad
aaa
stc
in
mov
rcr
testb
lret
cli
mov
out
xchg
jecxz
shl
xlat
ret
xor
int3
cmp
cmp
movb
enter
in
xchg
in
repz
enter
ljmp
in
test
test
jecxz
mov
sti
int
cld
in
roll
aad
call
or
stc
lock
loopne
cmp
dec
icebp
test
in
xor
xor
div
fdiv
jmp
loop
cmp
faddl
cld
out
shl
icebp
ror
out
hlt
clc
call
lock
loope
test
shr
nop
iret
repnz
imul
into
cmp
lock
cli
rcl
dec
ds
ds
test
xlat
adc
lret
jecxz
repnz
aaa
aad
ror
aad
in
clc
ljmp
icebp
leave
mov
loop
mov
and
mov
cmp
shr
cld
in
cmc
lret
int3
xlat
shl
adc
clc
mov
in
shl
aam
into
fprem1
cmp
xor
out
testb
cmp
mov
in
lret
test
xlat
test
idivb
cmp
fldl
in
repz
faddl
in
lret
cmc
xchg
in
shrl
xor
sti
xlat
icebp
cmp
not
in
mov
test
iret
lock
xor
cmc
stc
aaa
cmp
in
cmp
sarb
jecxz
fcomip
mul
mov
out
in
out
loope
aam
jecxz
repnz
cmp
xlat
mul
leave
mov
hlt
call
fld
aad
ss
call
std
in
loope
bnd
mov
faddl
xchg
xchg
hlt
hlt
repz
out
lret
cmp
ret
in
out
lock
call
fdivr
out
xchg
xchg
loope
out
lret
cld
fcompp
neg
out
in
stc
cld
fmull
loop
xchg
int
in
aad
jecxz
cld
int3
sti
fdivr
fneni(8087
ret
cli
fnstcw
xlat
repnz
ret
int
mov
sar
xchg
xchg
in
mul
lock
out
shlb
std
cmc
aad
test
rcr
lret
ror
fucomi
lea
out
repnz
cmp
lock
in
jecxz
xchg
cld
std
out
xchg
icebp
xchg
xchg
aaa
int3
ljmp
std
rcl
ds
cmp
clc
icebp
aam
fsubrp
fmulp
fst
lock
shl
ljmp
rolb
out
fcmovu
enter
int3
out
xlat
jmp
enter
aas
loop
inc
out
fsub
loop
fucomip
fsubr
mov
loopne
xchg
shl
into
repz
out
out
std
sti
fstp
clc
cmc
ror
sar
loopne
aad
iret
sub
call
fdivr
int
stc
int3
inc
roll
fcmovu
sbb
mov
mov
in
ljmp
xor
fsqrt
fnstsw
out
stc
cmp
std
ret
fldz
mov
xchg
repz
shr
out
repz
xlat
int
loopne
shl
cli
jmp
sti
lret
out
jmp
call
stc
rcl
cmp
int3
xlat
neg
sar
hlt
cli
repz
sub
mov
out
call
in
enter
lret
fnstcw
out
iret
loope
fdiv
fld
add
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
frstor
jg
scas
add
mov
ljmp
mov
xor
in
in
repz
sar
icebp
sti
xor
hlt
xchg
nop
xchg
jecxz
jmp
cmp
in
cmp
neg
loope
roll
xchg
testb
mov
sar
jmp
jmp
repz
rol
xchg
cld
jmp
loop
shl
out
ljmp
cld
cmp
cmp
cmc
bnd
ret
mov
out
fcomip
xor
repnz
lret
shl
fcmovne
repnz
fiaddl
ror
jmp
iret
out
lret
and
jmp
out
into
fdivr
cmp
aad
fdivr
in
loope
in
dec
test
icebp
inc
aad
lret
call
xlat
loopne
cmp
int
ds
in
in
fsubrp
ficoms
imul
jmp
repz
out
test
loope
xlat
shl
jmp
lret
out
cli
lock
neg
int3
ds
fildl
loopne
call
out
iret
int
jmp
repnz
cmp
stc
fdivrp
cmp
int
stc
clc
ds
out
testb
lret
loope
int
das
ret
enter
ror
repz
int
in
faddl
jmp
sub
into
xchg
mov
cmc
xor
in
fcmovnu
repz
aam
fsubp
repnz
test
xchg
mov
cld
in
out
xlat
xor
in
int
in
and
jmp
cmp
roll
hlt
ret
call
test
imul
divl
int3
or
cld
ret
iret
mov
shl
xchg
fcmovne
hlt
fsubp
call
rcl
rcl
hlt
aad
sarb
xlat
mov
out
hlt
rcr
clc
fcomp
ret
in
cmp
ss
into
cld
ror
ret
cli
stc
call
jmp
into
xchg
in
xchg
mov
shlb
aas
fcmovnu
xor
repnz
mov
test
fcmovnu
out
rcr
shr
ror
sub
cmp
ljmp
aas
loop
in
cmc
ljmp
addl
divb
mul
ffree
shl
in
ljmp
addb
in
xchg
adc
int
sub
lock
cli
shll
int3
aaa
div
jecxz
ret
test
std
lret
in
fcmove
out
ficoms
divb
jmp
cmp
lret
cmp
lret
fdivrp
ds
loop
roll
jmp
ror
out
jecxz
out
testb
hlt
out
test
in
xchg
ljmp
clc
fdivs
iret
lret
aad
fistpll
into
test
sbb
loop
mov
int3
rclb
xor
out
call
aas
cmp
cmp
loop
neg
cld
ret
int3
ror
loope
xor
jmp
shr
fdivp
loopne
clc
icebp
aas
sarb
shl
ffree
enter
test
loope
into
xor
sarl
cmp
fcmovnu
ss
out
hlt
fadds
out
xchg
loopne
aam
vpsrlw
lret
leave
fnstenv
leave
fnstcw
stc
adc
adc
ds
enter
aam
loop
in
aam
cli
in
cmc
jecxz
sti
imul
std
mov
call
fiadds
icebp
out
imul
shll
ss
neg
fdivrp
iret
fcmovu
rolb
loope
repnz
out
les
ljmp
ret
mov
into
in
fsub
lock
out
icebp
lret
xor
rcl
int
xor
addl
ljmp
divb
out
xor
repnz
xlat
ds
xlat
inc
shl
cld
xchg
loopne
in
xlat
int3
out
lret
addl
jmp
cmc
xor
cmp
cli
roll
cmc
testb
in
jmp
mov
in
int
out
cmc
in
aaa
out
cmc
fcmovnu
out
rol
rcr
repz
fadd
mov
in
in
loop
aad
cmc
sar
fninit
in
shl
in
mov
into
rolb
in
out
repz
cld
aaa
jmp
hlt
in
xchg
mov
cmc
out
fldl
dec
lret
iret
call
cmp
int
aas
fcmovnu
aam
xlat
jmp
mov
in
sbb
in
xor
xbegin
and
mov
leave
add
add
rol
rol
or
push
aaa
xchg
push
rcll
jg
scas
add
xlat
cmp
cmp
lret
cmp
jmp
mov
mov
lock
sar
cmp
aam
shll
in
xlat
mov
into
mov
int3
mov
clc
sub
rcr
fnsave
hlt
hlt
cmp
aad
ret
cmp
cmp
enter
test
addl
in
enter
into
xor
in
in
loopne
les
orl
xchg
loop
xor
leave
cli
jmp
cmp
iret
rcr
xor
fdivp
fcmovnu
mov
xchg
rorb
fdivs
iret
aaa
clc
idiv
shl
mov
in
test
fcom
jmp
cmc
out
cmp
lret
mul
ror
fcompp
les
xchg
rcl
mov
ss
ljmp
addb
fcomp
call
call
call
out
cmp
int
lock
fdecstp
clc
xor
adc
jmp
xor
fmul
fld
sti
hlt
ds
cmp
cmp
leave
loopne
fcmovnu
fucom
in
out
ljmp
ror
loop
hlt
cld
cmp
loop
fucomi
in
sbb
fsub
out
sub
xlat
ljmp
rcr
fidivrl
hlt
rol
jecxz
shr
leave
call
in
rcr
rcl
hlt
in
repnz
sarl
hlt
aaa
aas
loopne
fsub
xchg
idiv
sar
xlat
clc
fdiv
mov
lret
lret
aaa
icebp
repnz
jecxz
xchg
shl
inc
mov
iret
out
repz
repnz
out
call
enter
xor
ds
cmp
aam
orb
int
into
int3
repz
into
xor
aam
fmul
sar
fucom
stc
and
enter
jmp
int
ljmp
cmp
repnz
imul
in
repz
out
fmulp
fadd
mov
fcmovb
popl
ret
rcl
stc
cmp
repnz
hlt
mov
in
mov
lret
orb
xor
call
push
aas
cmp
stc
lea
out
int3
repz
cmp
cmp
cmp
icebp
ret
fcmovnu
addb
hlt
jmp
aaa
sub
leave
hlt
sar
fsub
aam
jecxz
fsubrp
mov
int3
fimuls
cmc
cmp
xor
repz
lret
xor
fmul
rol
cmp
in
ljmp
ss
in
rcl
aad
incb
sub
fsubr
fsubrp
mov
orl
xor
xor
ds
lock
in
ljmp
mov
cmc
xor
aaa
leave
xor
ljmp
test
sti
hlt
ret
repz
faddl
ljmp
jmp
out
aam
jmp
cmp
ds
call
jmp
cli
int
enter
repnz
xlat
repnz
iret
ljmp
aad
aas
in
hlt
sti
sti
int3
fiadds
aaa
int
fucomi
in
std
out
out
test
out
hlt
cld
clc
clc
stc
call
call
mov
leave
shl
xor
into
fndisi(8087
lock
ret
aad
fld
jmp
jmp
ret
in
divl
aad
icebp
div
cmp
vcmppd
shl
xchg
call
repnz
clc
dec
xlat
fadd
sti
loope
rcr
loop
lock
fdivrp
loope
imul
lock
xor
cmp
fmul
stc
std
stc
idivl
out
fsub
mov
jmp
out
mov
lret
call
jmp
cmp
xor
in
loop
out
fld
rcr
orl
out
test
ds
out
shr
aam
mov
mov
ror
sub
out
xor
xor
cmp
leave
rcl
loope
and
out
out
lock
loope
dec
int3
aas
lret
fsub
clc
cmp
fidivrl
clc
ljmp
test
rcl
mov
adc
aad
loopne
fcomi
cmp
into
ds
iret
sti
loope
shl
sti
roll
loop
and
ror
into
jecxz
cmp
test
enter
cld
daa
test
add
ror
fxch
shll
or
cwtl
dec
insl
adc
add
repz
loopne
loope
cmp
shl
repz
xor
fsub
movl
repnz
mov
shl
rcr
fcmovbe
cmp
lret
sti
cmp
filds
mov
fadd
xchg
mov
leave
int
in
iret
lret
cld
in
out
ss
cmp
loop
in
mov
lret
enter
fdiv
mov
xor
lock
aam
cmp
rol
stc
cli
fucom
test
repz
cmp
cld
hlt
in
cmp
rcl
loope
ror
into
add
fsub
xchg
loope
jmp
xlat
aad
xor
test
hlt
loope
lock
fcmovnbe
cld
ret
lea
mov
call
out
ljmp
out
out
jmp
test
iret
or
shr
sub
sub
stc
in
not
xor
addl
test
mov
int
xor
in
aam
lock
cmp
in
fdivrp
lds
xchg
leave
clc
mov
ret
test
mov
jmp
xor
aam
xlat
fcmovnb
adc
cmp
cli
fucomip
loope
xchg
imul
loope
ljmp
test
aas
test
cli
test
cmp
loopne
out
test
bnd
sti
into
les
cmp
cld
dec
fbstp
fcmovnbe
ret
fst
cld
icebp
xor
xchg
orb
hlt
out
into
aad
lret
aas
cli
out
fadds
fadds
mov
into
lock
jmp
icebp
lret
ljmp
xlat
repnz
sar
ffreep
jmp
int3
int3
ret
xor
out
ljmp
fdivrl
lock
xchg
enter
lds
icebp
in
enter
out
xor
cld
fcomip
rolb
enter
out
xchg
repnz
in
fmulp
clc
xor
xlat
fpatan
jmp
aad
hlt
sbb
ret
ret
cli
mov
int3
lds
test
in
test
fdivr
xlat
cmpl
faddl
xchg
ljmp
xor
not
idivl
enter
cld
fcmovnb
mov
mov
fsub
xchg
icebp
jmp
shr
iret
test
shl
addl
in
xchg
cmc
fists
in
into
fnstcw
lret
cmp
std
sar
clc
shl
fimuls
call
sar
xor
div
jmp
int3
loopne
xlat
pushl
cmp
adc
fmul
and
ljmp
xor
xor
cmp
loope
cmp
add
cmc
fstp
jmp
call
xchg
aad
hlt
sub
clc
enter
fsubr
fdiv
loop
cmc
iret
sar
and
fcmovbe
fcmovu
fcmovbe
mov
pause
lock
shrl
int3
int
testb
test
roll
lret
rorl
stc
out
iret
aad
jmp
icebp
jmp
fcmovnbe
loopne
and
leave
xlat
fsub
in
lret
in
lock
test
iret
int
iret
out
cli
in
int
in
jecxz
fisttps
nop
mov
xchg
loopne
lock
sti
clc
rcl
fcomi
cmp
jmp
in
test
fnstcw
loop
loope
fucomi
aam
loopne
lret
sarb
sarl
ds
in
sti
loop
rorb
mov
in
xchg
fdivr
icebp
in
repnz
jmp
out
out
aas
add
aad
sti
ret
call
out
fdiv
loopne
jmp
icebp
out
jmp
aas
lock
out
shr
hlt
fnstsw
jmp
jmp
in
cs
in
int3
icebp
bnd
fchs
shl
call
call
test
shlb
hlt
sar
cmp
out
cmp
addl
repnz
shr
loope
test
fcompp
lock
fcompp
into
repz
int3
out
mov
in
xor
loop
xor
aad
into
shll
hlt
lret
cmc
aam
repz
repnz
not
sub
in
sti
decl
aaa
cmp
cmp
lret
leave
rol
int
shl
hlt
xlat
fadds
out
and
xchg
jecxz
in
lret
lret
stc
ds
cmp
jecxz
fcmovbe
stc
clc
fsubr
ret
leave
test
leave
in
nop
xchg
xchg
fmul
fcom
in
in
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
cmp
test
and
shl
loop
rolb
shrl
xor
cli
std
cmp
shl
in
in
mov
out
popl
iret
sar
cmp
int3
lock
repnz
rcl
aam
xchg
lret
enter
mov
iret
mov
rol
cmc
repz
shl
aas
aaa
xchg
xor
enter
enter
loope
push
jmp
xor
clc
fldl2t
std
push
ds
lock
call
add
xchg
xor
aam
divl
sti
out
in
roll
faddl
repz
ror
int
out
in
ljmp
ret
fdivr
jmp
fsub
loop
jmp
call
flds
sarb
inc
cmp
ds
out
xchg
out
out
das
xor
jmp
leave
in
hlt
aas
rolb
enter
add
xchg
icebp
xor
ljmp
stc
shlb
rcr
loope
fiaddl
ljmp
jecxz
xlat
out
leave
xor
in
lock
aam
jecxz
jmp
enter
loopne
sub
int3
cld
cmpl
fidivrl
rcl
call
int
mov
mov
mov
xor
repnz
loope
fdivp
mov
out
in
mov
repz
aaa
not
into
rcl
cli
aad
ror
out
sar
aam
cld
xlat
fildl
xchg
xor
in
test
jmp
fdiv
idiv
cld
rcr
xchg
vpor
xorl
int3
dec
sti
lret
cmc
rcl
adc
cli
mov
xchg
lea
in
rcl
std
ror
into
fdivr
and
aam
sbb
fisttpl
cld
rolb
cmp
dec
not
aad
mul
out
lock
jecxz
xchg
int3
testl
jecxz
aad
enter
lock
in
out
in
les
fsubp
std
jmp
iret
in
iret
fnstsw
shl
in
aad
std
sti
fld1
clc
jecxz
addb
xor
stc
xor
sar
repnz
repnz
shl
repnz
cld
in
mov
call
xchg
in
rcl
shl
hlt
enter
in
stc
fcomip
std
cmpl
xchg
xchg
fucom
fiadds
in
mov
enter
ss
test
repnz
cmc
aad
in
fcomi
xlat
mov
xchg
in
leave
lea
sub
fsin
xor
test
mov
cmc
jmp
in
cmp
xchg
aam
loop
lret
fadd
int
out
cmp
repnz
addl
iret
lret
test
fcomp
sub
cmp
jmp
cmc
not
cmp
mov
out
cld
jecxz
shl
fcom
jmp
fistpll
lock
fiaddl
hlt
mov
flds
test
xlat
jmp
mul
xor
in
fsqrt
ljmp
loope
cld
shr
repz
sub
cld
lock
ret
sti
fcomp
test
mov
lock
jmp
divl
fdivl
cmc
lret
iret
repz
stc
cli
addb
fcmovu
lea
leave
in
aam
xor
rcr
aam
into
cmc
cmp
int
in
rol
std
and
stc
jmp
mov
int
int3
lock
neg
jmp
cld
repz
enter
cmp
in
ror
lock
ror
xor
iret
stc
cld
rcl
and
ret
mov
cld
out
cld
cld
out
lret
ret
int
lret
leave
int
loop
loopne,pt
xchg
stc
leave
jecxz
in
in
jmp
lock
repnz
cmc
clc
out
cmpb
iret
repnz
add
rcr
fadds
lret
mov
lock
icebp
hlt
std
xlat
sbb
aas
iret
jmp
aas
mov
int
int
loope
fidivs
ss
in
hlt
shl
ror
std
cmp
clc
in
fmul
cmc
jmp
mov
out
jmp
into
hlt
aad
les
shrb
leave
iret
fcomip
hlt
std
ljmp
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
loope
xor
jle
add
int3
out
fdiv
mov
lret
aad
rcl
fidivrs
cli
xchg
hlt
mov
mov
ror
into
jecxz
aad
clc
int
leave
stc
aad
flds
out
int3
mov
lret
in
mov
xchg
in
lret
int3
aam
ds
lret
cmp
out
test
in
cld
int3
repnz
cmp
lret
not
cmp
enter
iret
xor
cmc
in
jecxz
fcomp
jmp
adc
out
shr
repnz
mul
or
sbb
sbb
repz
lret
out
jmp
out
in
xor
leave
cmp
int3
jecxz
loopne
lock
ljmp
mov
sub
lret
jmp
clc
shl
cli
fcmovnbe
in
lret
cmc
loopne
lock
sub
jmp
into
std
rcr
sub
xor
leave
fsubr
cmp
leave
fiadds
div
aad
loope
loopne
std
fisttps
jmp
shll
fdivs
cmp
xor
cmp
ret
jecxz
cmp
test
shr
iret
sarb
xlat
out
lret
cmp
aas
cmp
cld
fsub
icebp
cmp
lret
fiaddl
xchg
call
lret
enter
std
shll
in
sarb
aam
inc
ljmp
int3
mov
loop
out
into
sti
icebp
out
xlat
aaa
xlat
out
test
xchg
fcmovnbe
sti
jmp
int3
sti
mov
mov
out
xor
jmp
lret
roll
cmc
cli
in
out
jmp
mov
hlt
out
hlt
aad
ss
aas
cmp
clc
add
loope
leave
idiv
jecxz
jmp
ljmp
cli
cmp
in
xor
and
call
fsubr
rcr
out
icebp
xor
aad
cmp
icebp
aad
idivl
xlat
ret
cmpl
fadd
fucomp
loop
lock
in
mov
out
lea
aad
cmp
rcl
rcr
fdivr
stc
addb
rol
faddl
xchg
xor
fnstenv
repz
ds
int
lock
in
cld
mov
sar
div
in
shl
shl
in
rorl
leave
call
pop
ss
aad
int3
ds
loopne
iret
fadds
fdivrp
loop
out
loope
shl
fadd
hlt
in
cmp
sarl
std
repnz
rol
mov
mov
int
jmp
test
out
in
enter
in
mul
cld
sar
ret
in
cmp
call
lock
ret
iret
cli
ljmp
repz
loop
cld
in
jmp
mov
fst
loop
leave
ss
ror
into
int
clc
in
iret
aas
std
hlt
int3
fisttpll
mov
call
cli
into
aad
in
sti
loop
hlt
lret
idiv
out
sti
rcl
jmp
faddp
icebp
cmp
icebp
iret
out
loop
cmp
testb
neg
dec
mov
out
xchg
in
out
lret
sti
shr
in
cli
ror
jmp
shl
test
test
enter
shl
in
nop
rol
out
jmp
int
cmp
ret
rcl
xlat
cmp
mov
not
iret
loope
out
in
xlat
cmp
cmp
addb
std
out
repz
jmp
fcmovbe
int3
cmpb
aam
test
fdivp
fmul
fdivr
mov
ljmp
loop,pn
les
hlt
into
in
out
jecxz
mov
in
in
iret
or
int
decl
repnz
hlt
lock
in
test
roll
lret
into
out
fucomi
icebp
shr
out
in
repz
ds
cmp
in
loopne
aam
test
lret
icebp
int3
fdivrp
mov
call
shr
fcomip
loopne
rol
iret
clc
xchg
loopne
lret
icebp
in
lret
out
in
int
ret
aam
cmc
cmc
cmp
out
hlt
xor
fcmovu
in
in
test
fcmovu
mov
test
aad
jmp
cld
leave
rcl
fdivrp
test
fdivrp
or
rcl
aaa
xlat
lock
jmp
in
out
ret
test
out
cli
xchg
test
loopne
into
sub
fcmove
fmul
sarl
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
add
jg
scas
add
int3
fcmovnbe
fstp
rolb
sti
ljmp
hlt
xorb
jecxz
test
std
int3
cmp
repz
enter
out
faddl
sar
xor
jmp
cmp
cmp
sti
rolb
loope
in
fisttpll
mov
aam
lret
int3
xlat
out
cld
cmc
sar
sar
xchg
and
xchg
loopne
rorl
ret
sti
xor
cmp
lock
cmp
test
hlt
loop
enter
lret
in
mov
addb
fstpt
xlat
in
fucomi
test
test
xlat
enter
ret
std
jmp
shl
hlt
enter
xlat
in
ret
cmc
fxam
hlt
shl
testl
icebp
aam
shr
test
fcomp
or
test
sar
out
fsubr
out
call
call
cmp
out
leave
aad
in
into
shl
shl
shr
mov
out
out
orb
in
cmc
out
ds
loop
icebp
cld
fdivr
sar
hlt
enter
loop
hlt
ljmp
int
call
fdivrp
out
stc
rcl
fcmovnu
sti
test
iret
out
imulb
enter
hlt
repz
int
aas
into
test
fsubrp
adc
rorb
xchg
ss
cmp
hlt
fsubrs
cmp
push
std
idiv
fcom
fimull
jecxz
in
repnz
xchg
fists
icebp
cli
enter
stc
cld
addl
leave
fisttps
nop
leave
shl
mov
das
cs
xor
aam
iret
aam
div
in
in
test
loope
in
mov
int
iret
lret
loopne
loope
lret
iret
int
jmp
cmp
cld
clc
ret
ds
fcmovnu
in
int
jmp
ljmp
xlat
aam
std
cmp
fdivrp
imul
cmp
fdivr
repz
fadd
in
in
xchg
mov
lock
in
aam
rcl
hlt
fsincos
loope
cli
loope
cmp
jmp
addb
ss
out
in
cmc
fxch
ss
ret
out
into
shl
ror
xlat
mov
in
in
lret
call
int
sarb
sbb
cmc
cli
clc
fisttpll
lret
mov
xor
cmc
ss
fst
aam
fsubr
aam
out
ffree
xlat
mov
int3
in
in
out
vpsadbw
aad
stc
enter
loope
xlat
hlt
stc
call
not
leave
faddl
loop
xchg
int
xor
stc
fmul
out
ds
jecxz
loope
xor
icebp
fcmovu
fmulp
leave
fdivr
loop
in
repz
out
loop
repz
xor
in
int
or
sti
mov
xchg
loopne
rcl
xchg
lock
cmp
cmp
lock
out
aaa
out
std
ret
sbb
test
loop
mov
rcl
lock
clc
jmp
clc
out
loope
fstp
loopne
test
ret
out
fsubr
mov
fsubrs
enter
cmp
fst
out
ret
fdiv
std
jecxz
adc
lret
jecxz
lret
xchg
adc
jmp
das
in
aad
std
in
testl
fcmovu
mov
cld
cmc
int
jecxz
out
in
ror
fnstcw
std
ret
fdivrp
stc
shr
lret
int
aad
sti
lock
fidivs
sti
xor
jecxz
lock
cli
xchg
lret
nop
roll
fucompp
std
cld
cmp
cmp
roll
in
loope
cld
mov
xchg
cmp
out
in
repz
clc
sti
shl
std
icebp
fildl
cli
or
enter
aas
repz
xor
ljmp
fidivrl
mov
icebp
jmp
rcl
shl
cli
leave
icebp
clc
lret
sarl
cli
xlat
xchg
in
loop
orb
mov
leave
cmp
fcomp
fsub
loop
aad
sbb
jecxz
jmp
mov
call
fimuls
clc
enter
shl
jmp
jmp
std
out
xbegin
in
movb
fmulp
ror
aaa
cmp
rol
shl
jmp
enter
in
call
rcl
in
out
fcmovu
cmp
out
test
rcr
lret
int
cli
xchg
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
push
arpl
pop
into
jg
scas
add
or
mov
lret
iret
into
out
call
aad
xchg
repnz
rol
fcoml
cli
ret
leave
cmp
cld
iret
int
in
xlat
clc
in
fcmovne
cld
cli
fmulp
iret
addl
loop
sti
fstpt
call
sarl
call
loop
sar
loopne
test
enter
enter
lret
aas
cmpb
jmp
rcl
mov
rcr
xor
out
cmp
sti
loopne
stc
fdivr
repz
cli
in
loope
nop
nop
xchg
sar
nop
out
ror
xor
xor
xor
cld
cmc
lret
into
fadd
stc
cmpl
jmp
test
nop
add
out
cmp
sti
aaa
lret
in
faddl
fisttpl
xchg
loopne
in
fsubp
stc
ss
cld
sarl
cmp
cmp
test
std
shr
leave
xchg
fsubrp
shl
lock
out
sti
int3
sti
icebp
ljmp
fnclex
ret
xchg
cli
cli
movl
lock
shll
fcmovb
jmp
push
repnz
xchg
cmc
loop
fxam
mov
int3
lret
int3
xchg
icebp
xchg
out
clc
aaa
in
cld
lock
shl
rcl
mul
incl
mov
xchg
cmc
aad
call
neg
aas
out
loope
loope
rol
rcl
and
cld
leave
int
xchg
mov
xor
test
cmp
shr
xchg
clc
cmp
call
fdivrp
xchg
cld
mov
clc
repnz
jmp
not
rcr
in
int3
out
sti
orb
leave
repnz
xor
fdiv
fcom
repz
std
loopne
cmp
hlt
cli
loop
orl
call
iret
stc
lret
ss
in
enter
movl
rcl
call
aaa
call
lock
icebp
test
fcmovnb
test
cli
mov
int3
xor
lret
cmp
not
cmp
cmp
stc
idiv
out
adc
int
repz
jmp
jecxz
out
leave
out
loope
fadd
int
jecxz
faddp
ret
fucomi
loope
in
rorb
shl
rcl
std
fdivr
ljmp
cmc
ret
shl
mov
jmp
mov
out
rcl
shr
call
cmp
sti
faddp
clc
enter
fldpi
test
call
clc
int
xor
fdivr
leave
call
cli
shl
in
lds
ljmp
sarb
lret
aad
int
lret
fcmovnbe
icebp
repnz
mov
out
into
fmul
sti
test
jmp
repz
rol
push
in
clc
call
leave
leave
call
out
imul
out
jmp
int3
jmp
mul
fadds
xlat
xchg
in
aaa
icebp
cmp
xlat
clc
shl
shl
cmc
push
adc
call
out
in
out
shr
lock
out
repz
jmp
std
jecxz
fiaddl
test
jmp
jmp
mov
ret
ss
sti
fdiv
out
out
out
cmp
call
clc
std
cld
ret
out
mov
fmulp
jmp
fxch
ljmp
fcmovnu
clc
mov
iret
xchg
mov
clc
enter
icebp
stc
ljmp
ds
ret
mov
loop
mov
cli
cli
jmp
ljmp
lock
enter
faddl
loop
mov
cmc
ljmp
test
in
in
cmp
xor
cli
lock
leave
loope
sarb
iret
and
std
in
loope
neg
mov
xchg
int
cmp
rcl
jmp
lret
in
fnop
xlat
addl
mov
shr
test
loope
aam
cmp
idiv
icebp
repz
ljmp
mov
shl
out
idiv
fidivrs
jmp
fxtract
ret
hlt
addb
fstl
cmp
lret
aad
lret
int3
repz
cli
in
out
dec
clc
in
rorb
jecxz
loopne
out
hlt
int
fcos
cli
cli
clc
ljmp
nop
xchg
mov
add
xlat
cmp
icebp
repnz
sti
xor
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
int3
jecxz
fndisi(8087
test
rolb
flds
out
out
sti
cmp
cmp
int3
sti
out
aas
int
add
enter
sti
loopne
jecxz
fst
xchg
call
repz
out
out
sarl
rcr
cld
sti
out
rcr
cmp
in
and
int3
ljmp
lret
loopne
rcr
filds
in
in
iret
leave
int3
cs
cmp
out
ss
in
out
aaa
stc
rol
jmp
loopne
jmp
test
lret
cmp
cmp
lret
lret
lret
lock
xor
loop
in
sar
cmp
call
fsubrp
cli
out
in
loope
mov
nop
clc
xor
icebp
fsubr
rcr
fcomp
sub
bnd
in
xchg
out
lret
repz
lock
repz
imul
sbb
fcmove
and
cmp
jmp
in
fldl
int
neg
vshufps
cmc
movb
mov
ret
sarl
enter
enter
and
test
loop
out
out
lock
in
jmp
cmp
loope
cli
int
icebp
fdiv
std
xlat
sti
ffreep
loope
fsubr
out
cld
loopne
mov
fadd
rcr
xor
fnstenv
lock
repz
not
xchg
rcl
neg
lret
cld
lock
xchg
int
fmul
loop
xlat
neg
int
fsub
adc
cmc
std
cli
icebp
cmc
into
lret
fucomi
jmp
xchg
out
shrl
into
idivb
rcr
fidivl
cmp
ffree
fld
clc
fimull
loope
xor
cs
fcom
cmp
cmc
jecxz
xlat
rcr
aad
lret
test
xlat
int
jmp
leave
leave
neg
stc
out
call
out
xchg
test
shl
faddl
cmp
lock
lock
jmp
repz
stc
idivl
in
mov
in
and
aad
leave
hlt
jmp
cli
in
xlat
in
sub
not
call
shl
jecxz
aaa
idivb
cmp
loop
sbb
out
fadds
in
popl
out
aad
repnz
shl
shr
mov
out
lret
mov
adcb
das
loopne
jmp
xor
iret
rcl
cmp
in
fildl
clc
cmp
loop
hlt
cs
aaa
lock
sti
int
in
aam
loopne
xor
jmp
repz
mov
repz
cmp
jmp
call
shl
ds
sti
ret
aad
std
jmp
call
jmp
ror
imul
xor
shl
sub
test
lret
into
aam
enter
cmp
cmp
jmp
fndisi(8087
cmp
frndint
enter
loope
fcomi
jmp
cli
ss
fadd
cmp
xlat
in
out
ds
loopne
test
out
mov
in
icebp
out
in
mov
iret
shl
out
stc
in
shlb
shl
fcmove
loope
nop
out
out
cld
loopne
aad
out
xor
xlat
cld
in
icebp
hlt
call
stc
loopne
jecxz
cld
hlt
lret
test
into
cld
fcmovne
idivl
int3
fistpll
xor
fsubp
and
test
mov
in
test
in
repnz
clc
cmp
out
in
and
cmp
fcmovnb
fyl2xp1
int3
in
nop
sbb
xchg
adcb
fldcw
jmp
aam
loope
cli
clc
aad
mov
mov
fcmovne
lret
lock
imul
clc
repz
cmp
fcom
ss
xlat
std
fdivrp
rcl
xlat
cmp
mov
test
std
and
clc
out
stc
idiv
lret
icebp
out
lock
in
clc
hlt
xchg
ljmp
call
les
leave
out
aas
icebp
lret
div
in
addl
orl
enter
out
fld
repz
cmp
xchg
mov
fsubr
cli
in
out
mov
ljmp
sti
addb
ret
fdiv
and
lds
cld
aam
in
in
repz
rol
cmp
cmp
cmp
xlat
cld
loope
fdivrl
orb
lret
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
jae
shll
jg
scas
add
mov
out
iret
std
leave
hlt
call
cld
flds
fucom
sti
xchg
test
repnz
aam
jmp
aas
cmp
cmp
std
rcl
repz
xchg
fsubp
xchg
imul
jecxz
xor
xlat
fcmovu
in
sar
ljmp
fmulp
orl
enter
aad
and
cmp
call
out
sti
sti
rorl
aam
aaa
fnstenv
into
into
cmp
loop,pt
cld
xlat
repz
loope
ret
mov
nop
out
int3
loop
int3
into
call
stc
fnstcw
fiadds
out
rcr
jmp
clc
faddp
test
out
out
icebp
cli
xlat
cmp
leave
aas
int
aad
in
lock
in
lret
mov
nop
orl
xor
out
stc
cld
fst
std
cmp
aad
xchg
ret
loopne
xchg
in
fsubr
nop
sub
call
icebp
sar
in
addl
in
incb
fisttpl
cmp
icebp
cli
xor
loope
xlat
cli
rol
stc
aad
ljmp
call
out
xor
out
stc
fscale
into
repnz
iret
test
jmp
test
ficoml
rol
xor
out
sarl
int
fcomi
test
cmp
stc
lret
test
in
ret
xor
lret
aad
sarb
cmp
iret
fcmove
repnz
mov
mov
in
cmc
rcll
hlt
icebp
mul
shr
clc
roll
cmp
fsubp
int3
xor
xor
sarl
iret
leave
iret
aad
ffreep
cmp
fcomp
clc
fnstsw
sti
and
call
lret
icebp
ror
jmp
ljmp
cmp
inc
cmc
sar
fisttps
mov
hlt
leave
lds
divb
cmp
iret
fnsetpm(287
xchg
mov
repnz
clc
xchg
jmp
addb
in
fld
leave
cmp
fistpll
cmp
std
jecxz
xchg
int3
sti
ret
jmp
ljmp
hlt
cmp
int3
cmp
inc
shl
loop
ret
rcr
lock
xchg
loopne
lret
fucomi
lret
lret
into
lock
fcompp
xor
out
mov
xlat
out
out
into
aam
repnz
aad
icebp
sarb
aad
loop
hlt
loopne
fucom
jmp
test
mov
jmp
incl
clc
cmp
lock
aam
fninit
test
fdivr
ret
clc
sti
or
ret
rorb
lret
mov
fdivrs
out
dec
aam
test
cld
mov
call
xchg
aad
aaa
cmp
out
cmp
repz
add
test
addb
xor
jmp
loopne
in
out
aam
aad
lret
jmp
ror
push
jecxz
shl
enter
mov
leave
into
iret
out
icebp
xchg
jecxz
into
jmp
ss
out
fdivrl
rcr
int
lock
rcr
fcmovb
cli
and
adc
rcl
call
repnz
enter
lret
fdivrl
in
mov
fsubr
xchg
fmul
fstp
rolb
call
in
ret
mov
out
addb
iret
fcmove
in
sar
int
shl
sti
fld
fld
repz
call
lret
int
xchg
leave
out
xor
fdivrl
cmp
int
shr
out
fimuls
test
fldpi
loop
mov
test
xor
int
shr
loop
repz
cli
ljmp
out
test
aad
hlt
lret
sub
rol
lds
fdiv
loope
jecxz
nop
jmp
jmp
in
xor
xlat
rcr
out
lock
fst
fsubp
aas
shl
fcmovb
fdivr
xchg
xchg
aam
loop
repnz
sub
xorl
std
ffreep
mov
fmuls
int
in
xchg
aaa
loopne
jmp
sti
out
cli
int
fpatan
in
fisttpll
test
lret
int
cmp
faddl
call
sbb
into
fsubp
and
xor
cmp
repz
in
in
mov
jmp
testl
int3
shl
cmp
cmp
fildl
roll
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
fcmovnu
loopne
enter
sbb
xchg
incb
in
cmp
cmp
call
fiadds
repz
incb
fimuls
int3
fdiv
int3
fdivrp
sar
xlat
xor
out
fadd
loop
loop
lret
out
jmp
clc
mov
fiadds
incl
fcmovb
in
ljmp
in
cmc
cld
call
int
sar
fistpll
sbb
std
testl
lret
ror
repz
xor
lret
ret
icebp
fsqrt
cmc
out
sti
jmp
int3
lret
fsubrp
int3
jmp
cmp
call
aam
stc
rcr
std
mov
mov
loop
aam
sti
jmp
cmp
int
roll
and
or
in
loop
mov
iret
shl
int
ror
lock
hlt
fdivrp
ret
out
fildl
jmp
incl
lds
cld
std
rolb
in
cli
mov
fcmovnb
out
fucomi
iret
loop
xchg
repnz
cs
rcl
cld
hlt
repz
aas
aaa
cmp
icebp
std
loopne
fucomip
loopne
orb
shr
and
ret
fldlg2
out
xor
stc
rolb
xor
int3
sbb
decl
int3
repz
stc
enter
sti
test
sti
lock
xlat
dec
std
fld
in
leave
xchg
in
jmp
xor
ret
fldl2t
les
fcmove
in
shl
std
cmpb
xchg
ror
call
cld
call
in
repnz
cmp
cmp
cmp
lock
mov
loope
out
out
in
call
iret
into
iret
sar
cld
rcr
fst
movb
mov
jmp
lock
enter
sti
cmp
ret
movl
rolb
shr
repnz
imul
ds
xor
out
lret
enter
jecxz
mov
std
xchg
test
fcmovbe
call
lret
cli
cmp
aas
cmpl
loopne
out
cld
mov
lock
rcl
jmp
jmp
ljmp
int3
filds
aad
ljmp
int3
out
jmp
repz
clc
lret
cld
shr
aad
sbb
xlat
cld
fucom
in
in
xchg
repnz
jmp
ret
imul
repnz
loopne
loopne
push
into
rcr
cmp
les
call
imul
jmp
cmp
fdivrs
test
jecxz
les
out
int3
loop
jmp
mov
aas
bnd
out
stc
cmp
shl
xlat
out
rol
jmp
ljmp
loop
lret
clc
xor
adc
loop
hlt
stc
fdivr
out
repnz
xchg
shr
xor
int3
test
ljmp
aad
call
int3
jmp
in
int3
repnz
ret
fldl2t
jmp
cld
idiv
cli
cmc
cmp
rcr
std
aad
test
add
jmp
ljmp
ljmp
rol
div
mov
sti
leave
into
incb
out
lock
adc
cld
roll
test
out
xchg
loopne
jecxz
in
xlat
int3
stc
jmp
cmp
testl
cld
sti
jmp
out
into
int
shr
sti
fcmovnu
loope
in
test
testb
jmp
cld
movl
xor
shr
faddl
leave
out
fcmovnu
in
test
fsubp
xor
cmp
ljmp
xlat
ret
cmp
xchg
xlat
test
out
mov
shll
rcl
std
jmp
cmp
lock
out
xchg
test
lret
in
nop
lea
iret
lock
lock
fstp
xor
adc
test
mov
loop
out
out
rcl
decl
sarb
idiv
lock
in
incl
leave
ljmp
xor
cld
lock
repz
ror
into
idivb
repnz
cld
jecxz
int
out
xchg
loop
int
ljmp
cmp
cli
loopne
mov
fimuls
mov
out
mov
jmp
rcl
aad
aad
shll
mov
popf
loope
jle
add
int3
jmp
cmc
lock
sar
lret
xor
filds
stc
call
mov
iret
leave
xor
stc
cmp
fdivrl
addb
aas
ret
mov
cmp
xchg
fists
aaa
iret
in
xor
rol
ljmp
repz
mov
clc
sub
xchg
fsubr
loop
ret
call
shr
neg
test
ret
stc
repz
out
shr
xchg
test
shll
sti
aam
shl
jmp
idivl
cmp
out
fsubp
loope
dec
out
iret
in
shr
int
cli
cmp
ljmp
iret
cmp
out
rcl
rolb
icebp
out
in
loope
clc
leave
icebp
iret
lret
int
xlat
std
cld
shl
cmc
in
lret
mov
fadd
xchg
in
call
call
lret
adc
fcmovnbe
enter
xchg
mov
mov
ss
int3
aam
lret
cmpl
idivl
fadds
aas
clc
mov
loope
aam
loope
out
call
fst
fprem1
fnstcw
ret
repnz
stc
jecxz
in
repz
fists
call
ss
ds
sarl
xchg
test
mov
fmul
cld
and
out
aaa
jmp
cli
in
neg
icebp
xlat
lret
hlt
aad
aas
testl
sti
cmc
fdivrp
out
das
lds
jmp
jmp
ljmp
adc
in
call
not
loop
in
rcl
cmp
aam
shl
fucomp
cmc
inc
in
aam
xchg
ljmp
subb
xor
out
xor
stc
leave
fnstsw
in
rcl
hlt
ret
cli
in
out
lock
mov
out
mov
jmp
in
ror
cmp
cmp
lock
fstp
in
int
xor
ljmp
sarb
into
loop
repz
cli
test
ljmp
iret
out
and
call
icebp
aaa
shl
loopne
sbb
icebp
loop
out
cld
fdivrp
test
dec
mov
fists
repnz
cmp
enter
cld
out
clc
test
ds
cmc
clc
mov
movl
xor
ss
sar
lret
into
push
cmp
in
imul
sar
sti
iret
xchg
jecxz
out
fld1
iret
cmp
fadd
std
testl
nop
out
cmp
lret
in
pop
ret
xor
sti
ret
repz
icebp
test
out
xchg
adcb
ret
aaa
sarb
std
fmul
fdivrl
repz
ret
std
test
ljmp
lret
call
loope,pt
xlat
xchg
mov
or
aas
ljmp
call
out
hlt
repz
out
leave
or
mov
fisttpl
into
shll
fstpt
sti
ds
repz
std
hlt
stc
int
mov
clc
jmp
enter
repnz
sbb
fst
fdivr
icebp
aad
loop
cld
test
ror
lock
aaa
ljmp
clc
icebp
xlat
fsubp
call
loopne
xchg
fcmovbe
not
cmp
hlt
aaa
cmp
fcmovbe
test
mov
sub
clc
out
in
cmp
in
fdivp
ds
cmp
xchg
ljmp
or
out
lret
fnstcw
shr
fyl2xp1
push
fcmovnbe
into
lock
clc
faddp
cmp
into
loope
out
in
xchg
out
loop,pn
out
in
cmp
cmc
aam
loope
sar
icebp
filds
fucomp
xchg
ror
aam
in
shl
std
cmp
iret
ret
std
shl
cmp
fildl
nop
call
int
hlt
in
iret
ss
iret
int3
loope
aas
loope
rol
in
in
xor
cld
call
repnz
out
lock
repnz
call
out
lret
repz
aam
xchg
out
int3
into
ljmp
fst
aam
cmc
xlat
leave
out
clc
call
ljmp
repnz
xor
fld
test
cli
out
fxch
call
out
fcmovb
repnz
test
cmp
mov
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
sbb
out
jle
add
aam
rol
loope
fldl
addb
xor
stc
out
divb
cmp
shl
in
cmp
mov
in
cld
jecxz
mov
fiaddl
jmp
jmp
fidivs
fdivrs
icebp
fmulp
cli
inc
in
int
fucomp
fcmovne
std
xchg
in
sub
enter
cmp
clc
lret
idiv
rcr
repz
stc
fimuls
std
fmulp
xchg
hlt
clc
idiv
iret
in
sbb
in
sar
jmp
mov
xor
ret
aaa
lret
cli
lret
xor
out
mov
stc
aas
vcvtpd2dq
xchg
call
in
out
call
stc
ds
loopne
hlt
xlat
lret
test
lret
nop
fldl
cmp
hlt
fcom
jmp
into
ror
xchg
jecxz
loopne
int3
out
mov
cli
repz
hlt
jecxz
sub
rol
enter
lock
into
out
in
in
cli
jmp
xchg
icebp
xchg
out
stc
lret
aad
out
div
sarb
ds
call
fcmove
iret
rcll
shlb
cld
jmp
stc
fucomi
sar
jecxz
and
loope
enter
jecxz
mov
loope
call
lock
cmp
into
out
cmp
icebp
xchg
lret
loop
out
loopne
hlt
xchg
in
xchg
ror
into
in
in
int
xor
neg
fcmove
ret
loop
fsub
fadds
fxch
shl
int3
cmc
mov
fldpi
sub
sar
cmp
rcl
fidivrl
int
repnz
lds
sub
das
clc
repnz
shr
cmp
iret
loop
fdivrl
ret
sar
aam
test
out
out
ljmp
loop
cli
sar
icebp
rcr
sarl
ret
frndint
clc
std
fdivr
ret
rcr
mov
int
lret
out
stc
rol
fdivrp
xchg
test
loope
sub
out
aam
xlat
sti
xor
out
addb
int3
std
int
adcb
leave
int3
int3
fxch
cld
jmp
aam
sbb
out
into
cld
loop
lret
xchg
mov
xor
cmp
sar
jecxz
fildl
mov
mov
jmp
in
out
hlt
enter
shr
fcmovnu
in
repnz
not
test
fucomip
mov
in
xchg
xchg
xchg
jecxz
adc
aam
jmp
add
fcmovu
adc
out
xchg
enter
cli
cmc
sbb
call
fiadds
loop
cli
into
lret
rol
loope
xor
icebp
clc
idiv
ss
into
cmp
xor
cmp
fdiv
add
in
icebp
icebp
addb
clc
xor
xor
aad
cld
mul
loop
sti
xlat
mov
mov
out
int3
cld
leave
lret
out
cld
test
sub
cli
cmc
into
out
int3
fpatan
xlat
icebp
out
repz
out
in
cli
test
mov
sub
in
aam
aaa
fistpll
ret
loopne
out
ljmp
jmp
mov
xchg
aam
jmp
imul
in
in
aas
loope
cli
int
out
hlt
enter
mov
iret
jmp
cmc
in
loop
leave
cmc
cmp
aaa
xlat
lret
ret
sar
fcos
aas
flds
stc
incb
in
cmc
xor
cmc
jmp
sar
aas
leave
ffree
cli
lret
sub
xchg
repz
xlat
int
int3
fdivl
stc
ds
clc
cli
sub
sbb
int3
int
call
cli
in
lock
cld
cmp
rol
fcmovnbe
enter
or
int3
movb
shl
sub
cmp
shl
stc
aam
idivl
test
out
out
xchg
in
test
call
out
fidivrl
div
cmp
fiaddl
fucomi
ljmp
ss
xor
icebp
xlat
iret
cmp
clc
cld
jecxz
repnz
test
in
cli
out
in
xchg
iret
cs
ss
out
sti
jmp
fdivrl
into
jecxz
icebp
clc
fsubr
flds
fisttpll
xor
fdiv
cmp
xlat
xlat
std
fcmovnu
shl
ret
mov
loopne
test
out
aam
sti
cmp
fucomp
fdiv
icebp
cld
fcmovbe
std
fiadds
jecxz
in
xchg
rorl
or
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
leave
ret
jp
jmp
jle
add
hlt
out
xor
jmp
test
in
fdivrs
test
in
rcr
shl
sub
in
enter
clc
sar
test
jecxz
faddl
out
fsub
ror
into
xchg
xchg
in
int
xbegin
lret
int
shl
out
xchg
loop
lea
dec
xchg
enter
out
hlt
out
rcr
aad
clc
loopne
fcomp
mov
sub
lock
std
std
in
xor
xlat
jmp
sar
in
fld
loope
fiaddl
adcl
jmp
xlat
aas
ljmp
sbb
rorb
mov
xor
iret
cmp
fsubr
ss
ds
rcl
xor
enter
mov
and
test
out
std
incb
test
mov
out
int
in
out
xchg
nop
aam
xor
sti
cli
cmp
clc
into
lock
cld
repnz
mov
lock
in
in
xchg
neg
stc
cmp
leave
hlt
lock
jecxz
fadd
loopne
sbb
in
call
cmp
lret
fistpll
cmp
cld
out
ffree
mov
std
mov
or
shl
jmp
in
idiv
lret
sti
out
out
lds
fcomp
stc
mov
mov
shl
xor
jmp
xlat
cmp
sarb
rol
cli
jmp
hlt
ljmp
fdiv
loopne
shl
lock
into
rcl
loope
xlat
rcr
xor
jmp
mov
mov
out
mov
mov
xor
ss
ss
cmp
icebp
fdivrp
vpaddw
or
ljmp
jmp
ljmp
rcr
cmc
inc
fsub
incl
mov
xchg
sub
out
cmp
ss
sarb
rol
icebp
rcr
mov
loopne
rclb
xor
cmp
fucomp
leave
fcmovbe
rcl
xchg
xchg
filds
in
xchg
mov
rol
fsub
aam
cmp
fldl
stc
in
sti
test
nop
loop
xchg
in
jmp
cmp
out
lock
stc
into
xor
icebp
icebp
stc
test
stc
mov
jmp
or
shl
int3
leave
xor
sub
ret
fninit
aad
fmulp
lret
movb
loopne
shrl
sar
int3
in
fcmovnb
icebp
cmp
into
call
sub
mov
xchg
hlt
loope
in
xor
icebp
fsub
aam
in
shr
jecxz
and
loop
in
loopne
xchg
xchg
xchg
repz
aam
aaa
xor
cmp
cld
fcmove
test
out
ret
sbb
xlat
mov
out
xchg
aas
in
cmp
sarb
fdivr
cmp
test
in
in
xchg
mov
repz
cmp
aaa
filds
fsub
shr
fcmovnbe
and
mov
hlt
out
cmc
int
fucompp
into
das
fiadds
repz
cld
cld
mov
in
out
aad
cmc
sub
fmulp
loopne
lock
int
xchg
ret
fldl
mov
int3
xor
iret
in
cmp
rcl
sarl
fidivrs
rol
cmp
inc
mov
fsub
fiadds
rcr
iret
jmp
ss
cmc
iret
shl
mov
sti
les
mov
ss
repnz
out
not
in
xor
loopne
clc
aam
rcr
loope
and
out
xchg
loopne
ljmp
idivb
cmc
int3
icebp
aas
rol
fucom
ret
jecxz
out
enter
into
jecxz
jmp
repz
into
into
cmp
dec
cld
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
pop
push
cmp
or
jg
or
jle
cli
xchg
clc
test
out
dec
aam
int
sub
int
in
xlat
cli
ds
stc
in
cli
cmp
ret
ret
out
frstpm(287
mov
sub
jmp
test
xor
cmp
cmp
cmp
sar
ret
call
jmp
decb
in
fxch
out
ljmp
clc
shl
sbb
cli
fisttpll
mov
aas
das
les
into
std
std
hlt
ss
ror
aam
adc
jecxz
mov
loopne
loope
in
adc
ror
xlat
fsub
loop
ds
lock
std
loop
cli
in
int
ljmp
lret
repz
clc
ss
cmp
in
in
int3
lret
std
mov
test
lret
out
shl
aad
cmp
fstpt
icebp
idiv
cmpb
clc
jecxz
loop
mov
loop
shl
int
leave
loop
sti
jmp
into
faddl
in
out
icebp
in
shl
out
clc
ret
ret
int
sti
loop
loop
stc
in
fcmovb
cmp
mov
into
lea
lock
jmp
ljmp
stc
enter
addl
rolb
out
in
out
inc
in
into
loope
rcr
faddl
mov
lret
hlt
in
shlb
jecxz
cmp
hlt
push
lret
fsubp
in
aad
ret
cld
xchg
out
loop
jecxz
loopne
xor
loop
lret
cmp
xlat
and
fstp
sar
sar
xlat
mov
iret
mov
in
out
cmp
jmp
in
inc
fsub
enter
mov
iret
mov
out
out
xor
xor
in
jmp
ds
std
cld
hlt
jecxz
jmp
rcr
rcr
aam
dec
out
xlat
call
jmp
test
lock
ret
fucomip
out
out
repz
aam
aas
lret
cld
out
repnz
fdiv
cmpl
call
int3
out
into
fsubp
in
nop
xchg
mov
das
cmc
jecxz
aad
neg
fnstsw
cmp
sti
std
repnz
repz
cli
in
icebp
mov
cmp
ret
lret
cmp
out
clc
fsubr
std
call
aas
cmp
out
fsubr
fmul
mov
shl
iret
ror
out
cmp
sti
int
in
std
xor
cmp
out
testb
call
ror
cmc
int
rcl
cmp
std
out
cmc
sar
aas
mov
loope
jmp
fldl2e
out
fistl
shr
out
in
repnz
adc
stc
fstp
sti
lret
in
out
and
ret
xor
lret
iret
loop
clc
shl
and
jmp
jecxz
call
enter
fyl2x
call
fcomi
stc
cli
call
int
mov
out
in
int3
fimuls
iret
out
leave
in
shl
cmp
sub
jecxz
ret
fmul
icebp
xchg
rcl
out
jecxz
repnz
loop
out
in
fucomp
aad
loop
rolb
loop
xchg
in
int
rcl
xor
call
ds
loope
fdivp
cld
ret
fcomp
out
cmp
ds
incl
mov
test
loopne
shr
out
in
not
in
icebp
repz
loop
cld
out
xchg
call
incl
int
jmp
fmulp
aad
jecxz
lock
fildl
fimull
test
out
in
xor
stc
repnz
rcr
jmp
cli
lret
test
std
cld
int
das
iret
xor
cmp
aaa
xor
rcr
aas
repz
repnz
xchg
in
sti
fsub
rol
cld
lret
enter
in
xor
cmp
ds
aam
mov
idiv
cmp
movl
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
dec
and
jg
or
jle
cmp
cs
in
out
idivl
test
sti
xchg
loope
repz
sti
mov
hlt
in
loop
xor
sti
lock
in
out
aaa
fcmove
in
cld
xlat
fprem
shl
mov
loope
mov
and
mov
std
f2xm1
fnstcw
int
cmp
in
loop
jmp
jmp
xor
aaa
iret
int3
lock
int3
lret
std
in
ds
fadds
lret
iret
rorl
iret
aaa
cld
idivb
rcl
hlt
cmp
shl
rol
sar
repz
add
iret
loopne
mov
out
ret
jecxz
iret
icebp
out
into
aad
fdivrs
rcl
loope
xlat
cmc
cld
loop
fmull
into
icebp
repz
enter
cmp
div
neg
in
in
std
cmp
faddl
xor
out
dec
fstp
aas
aas
ds
out
leave
addl
lock
xchg
loop
fmul
cmc
cld
repnz
out
int3
clc
loopne
div
cli
in
in
stc
in
in
lret
out
aaa
out
xor
int3
aas
stc
xor
enter
sub
in
int
shr
mov
cmp
fst
ss
fadd
cmpb
cmp
cmp
fcmovnb
out
out
xchg
lds
in
aaa
rcl
hlt
cmp
stc
aam
shl
in
test
div
xchg
int
in
xchg
iret
jmp
xor
cmp
stc
sub
std
faddl
aam
ror
ss
cli
call
shr
cld
mov
mov
mov
call
mov
xlat
ret
xor
clc
int3
cli
jmp
loop
in
icebp
fnstsw
in
sti
loopne
loope
out
dec
loopne
loope
shl
out
fcomp
in
leave
cmp
ret
ds
cmc
sar
xchg
xlat
incl
mov
shlb
jmp
sarb
ds
rcr
hlt
sar
stc
call
in
loope
aaa
out
xlat
xor
int3
enter
fcomip
faddl
aam
call
out
call
cmp
cmp
idivl
out
stc
cmc
f2xm1
loop
loope
cld
enter
leave
ljmp
shl
ret
cld
fidivrl
leave
repnz
incb
rol
frstpm(287
xchg
in
call
enter
cli
xor
fdiv
out
cli
std
aam
ret
iret
ret
lret
out
nop
int3
mov
aad
loop
test
cli
cmpb
fimull
sti
icebp
call
in
div
out
das
icebp
enter
cmp
cli
lret
ret
iret
icebp
xchg
lret
in
bnd
in
fdivl
lret
in
stc
rcr
repz
in
sbb
ret
incl
fisttpll
aaa
shr
repz
iret
frstpm(287
fprem1
push
cld
in
jmp
xchg
xchg
xchg
leave
cmp
xor
xor
lock
and
cmpb
shl
ret
sti
jecxz
lock
rcll
iret
cmp
repnz
enter
xlat
shl
fidivrs
ret
cli
sub
fists
aaa
repnz
leave
sti
cli
icebp
loope
cli
rcr
stc
mov
xchg
loope
repnz
and
shll
out
iret
aam
fcomi
loopne
fidivrl
xchg
mul
fcom
cmc
test
xchg
in
mov
shl
aam
xor
lret
xor
int
aam
fmuls
addl
mov
lock
loope
call
aad
sar
test
loop
loope
fucomp
nop
dec
aam
in
sub
out
leave
fnstcw
into
rol
rol
out
aad
sbb
icebp
repnz
test
out
lds
andl
add
adc
jmp
rcl
aad
rcrl
test
and
jg
or
jle
bnd
in
jmp
roll
out
out
in
faddp
cli
in
decb
xor
lret
hlt
in
ss
aam
ret
cmp
mov
std
int
cld
in
call
into
aam
ljmp
xlat
cmp
shl
sar
std
fmul
cld
loope
loop
fldl
imul
in
enter
fidivl
xor
fadds
leave
call
adcl
rcl
xor
out
clc
cmp
ds
fndisi(8087
ret
call
lret
mov
test
in
lock
xor
out
xlat
not
fdivp
test
fdivrp
cmc
jecxz
enter
test
out
iret
das
div
jmp
sarl
fadd
cmp
in
jmp
std
repz
aam
call
call
in
jecxz
rcl
les
shl
leave
loop
into
clc
sbb
fucom
into
out
aaa
iret
xlat
int3
call
add
icebp
enter
in
out
out
in
lock
ljmp
not
in
sbb
jmp
out
icebp
out
mov
nop
les
shr
jmp
ljmp
aas
loop
mov
adc
cmc
stc
call
mov
jmp
xlat
leave
lret
icebp
out
std
in
xor
int
hlt
into
stc
mul
cld
loopne
mov
int3
addb
rol
shl
shll
neg
jmp
fcmovnb
ret
rcl
in
test
fsubrp
jmp
into
fptan
enter
loopne
testb
ret
test
std
into
int
loope
lock
enter
icebp
icebp
loope
cld
rol
mov
sbb
push
aad
into
into
in
into
xlat
in
int3
cli
in
rcl
ds
jecxz
fcmovne
xlat
out
loope
cld
ljmp
in
fstpt
in
fnsave
fst
aas
aas
out
and
cld
jmp
mov
jecxz
in
rcl
sti
sub
fadd
cmp
cmp
in
in
lea
notb
std
cmp
loopne
idiv
adc
test
lock
sti
lret
repnz
fsub
cmp
sti
cld
fldl
in
fcmovne
lock
and
das
cmc
lret
sti
fcmovnu
cld
in
out
cmp
jecxz
ret
xchg
std
int3
sub
in
call
in
leave
repz
in
cmp
ds
jecxz
out
faddl
mov
shl
ret
fcmovne
xor
fincstp
or
loopne
test
loopne
xlat
loopne
lret
loop
ljmp
cmp
std
rcl
hlt
out
cmpb
ret
xchg
and
fcmovnu
out
iret
adcb
repz
loopne
jmp
mov
test
hlt
vpminub
ds
int3
int
repnz
jecxz
xchg
mov
shl
in
mov
xor
jmp
fadd
add
std
int
jmp
das
shll
sub
jmp
test
sti
fcmovb
mov
loope
sub
decl
aaa
int3
ljmp
sar
hlt
fdivrp
repz
in
fadds
mov
clc
lret
lret
aas
iret
hlt
sti
xor
in
test
in
shl
xchg
cs
sarb
shl
icebp
fistpll
cmp
fucomi
ret
jmp
and
int3
rolb
jmp
loope
into
fcmovu
hlt
shl
ror
cli
mov
xor
not
enter
cmp
mov
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
out
cmc
cmc
sub
jg
roll
jle
repnz
in
adc
enter
loope
jecxz
loop
sub
idivl
lds
shl
iret
cli
leave
lret
div
int
repnz
icebp
repz
int
std
fdivr
fcomip
flds
out
jmp
mov
in
call
enter
xor
lret
cmp
cmpb
testl
loopne
into
enter
out
aad
cmp
xlat
repz
sti
jecxz
or
fstp
lock
and
aad
div
sarb
hlt
std
iret
cld
std
not
out
roll
fmulp
filds
lret
not
xor
cli
clc
xor
jmp
ret
icebp
clc
ret
in
xor
mov
repnz
ss
stc
cmp
icebp
cld
cld
test
jecxz
icebp
sbb
loope
sub
xor
cld
xabort
sarb
loop
test
cmc
fadd
xchg
jmp
loop
flds
jmp
in
rcr
xlat
ss
into
out
ret
loopne
clc
enter
fsubr
in
sbb
and
jecxz
aam
iret
dec
std
int3
fstp
addb
call
addb
out
fcmovbe
aam
cmp
rolb
rol
xlat
rcr
in
iret
in
int
jmp
call
cli
aam
cmp
fadd
ret
out
loope
loopne
in
mov
out
stc
faddl
out
aam
into
sar
lock
out
sti
rcl
test
sbb
loope
aas
test
cmp
icebp
into
mov
fsub
loope
hlt
cmc
std
idiv
fdiv
cmpb
ror
fptan
testb
lret
mov
sub
enter
lock
cmp
sbb
xchg
jmp
jmp
enter
hlt
cld
clc
cmp
loop
rol
out
ret
sti
aad
cmc
test
les
cld
int
rol
ret
sarb
out
add
cli
repz
mov
fincstp
aad
xlat
adcb
and
neg
sarb
xor
loope
ss
sar
xlat
rcr
mov
mov
decl
repz
divb
fsub
loope
fsub
xlat
mov
lret
int
icebp
xor
sti
stc
fucomp
sti
int
sbb
cld
stc
rolb
lret
xor
shl
out
stc
clc
cmp
in
repz
sarl
fcmovbe
mul
hlt
icebp
loop
in
ljmp
cld
xchg
icebp
in
aad
cli
enter
clc
shl
sbb
rorl
xchg
call
nop
xchg
cs
in
shll
call
jecxz
adc
stc
aas
fucomp
out
in
int3
mov
icebp
xchg
mov
mov
leave
out
idivb
hlt
sub
fst
fcmovbe
div
std
jmp
jmp
ljmp
icebp
clc
cld
repz
loope
rcr
icebp
loopne
fdiv
lret
jecxz
xchg
fsub
in
out
ss
out
clc
fdivrl
repnz
cmp
aad
sti
adc
ret
ljmp
lock
ret
cs
std
fidivl
rcr
cli
repnz
repz
shl
in
ljmp
fsubp
icebp
stc
cmp
xor
std
cmp
cmp
fstp
mov
ljmp
xchg
shr
into
rcr
lret
cmp
bnd
ret
iret
out
loop
out
loope
cld
aam
test
cli
xor
std
jmp
stc
fcmove
test
xchg
cmc
cli
loop
into
leave
test
into
xchg
xchg
jecxz
ret
ss
xor
cmp
aaa
test
ds
aad
mov
clc
out
test
xchg
xor
stc
call
sti
cmp
hlt
aad
out
jecxz
in
lret
xchg
mov
xchg
idiv
ret
hlt
std
lret
rcr
aaa
loopne
out
fsub
ret
test
test
neg
cmc
out
clc
rcl
xor
push
icebp
out
lock
call
out
into
movl
movl
mov
sub
jmp
mov
fstp
enter
imul
jg
roll
jle
les
xor
rcr
fcom
rcl
fcmovb
or
fiaddl
mov
icebp
loope
ss
fcmovu
fdiv
cld
aam
aas
loop
incl
xchg
loope
lret
loopne
loopne
and
aaa
leave
jmp
adc
repz
cmc
fidivrs
xchg
fmul
rcl
sub
ljmp
jecxz
aaa
cli
aad
repz
int
std
in
and
imul
lock
repz
lret
lret
loope
cmp
std
loope
shl
repnz
cld
jecxz
lock
repnz
fldz
aaa
int
repz
ror
lret
lret
into
stc
fcom
xchg
mov
in
les
xor
xor
ss
xor
out
loopne
fcmovb
ljmp
jecxz
nop
call
shl
jmp
iret
fstpt
iret
lock
addl
int3
out
out
into
jmp
jmp
loope
xor
adc
aam
repz
loopne
leave
cld
stc
cli
jecxz
add
fmul
das
cmc
cld
in
ljmp
cli
rol
std
cmp
mov
sar
jmp
jmp
xor
sar
cmp
ror
loopne
xor
cmp
sub
loop
in
flds
aaa
in
in
hlt
cld
repz
into
jecxz
fdivr
xchg
lret
sub
ljmp
ss
xor
sar
lock
leave
loopne
fdivr
lock
std
out
out
int3
test
out
in
ljmp
out
fdivs
cmp
icebp
ret
cmc
lret
icebp
call
hlt
into
mul
iret
in
cmp
stc
loop
aas
std
filds
test
xchg
bnd
cmp
aad
lock
sub
repz
xchg
out
cld
out
call
jecxz
out
shl
sar
xlat
cmp
repz
sti
in
ret
ret
ret
mov
mov
lock
filds
in
repz
cli
ljmp
out
loopne
repz
fsub
mov
ljmp
fsubr
fdivp
rcl
adc
idivl
clc
xchg
addb
fmul
out
mov
jmp
loope
cli
xor
rcr
loope
rcr
in
hlt
jecxz
in
test
in
loopne
mov
xor
hlt
xor
stc
enter
rcl
sar
div
enter
loop
int3
xchg
out
fdiv
xchg
icebp
das
jmp
in
cs
shll
cmp
ds
fcmovbe
loopne
aam
mov
stc
out
mov
loop
mov
shl
ss
rcr
enter
fcmovbe
sarl
fldl
addb
cmc
repz
aam
fdiv
mul
hlt
cmp
fimull
fmulp
out
xchg
in
shr
repnz
out
lret
ss
cmp
shl
idiv
incb
ret
ret
fdivr
cld
inc
repnz
in
leave
xor
out
ds
cli
aad
xchg
in
lea
mov
xor
repz
shl
jecxz
fcomip
repz
out
ds
jmp
lock
xor
in
idivb
in
inc
rcl
cli
not
aam
fdiv
test
orb
xor
out
ss
fmulp
and
xlat
fadd
iret
aam
mov
aam
mov
loope
out
enter
test
stc
cmp
iret
out
sar
rol
cmpl
jmp
nop
repnz
cmc
jmp
out
repz
cmp
test
clc
sti
test
in
out
cld
int
fsubr
xchg
xor
loope
lock
enter
repnz
cmp
testl
ljmp
lock
cmp
in
fdiv
faddp
frstpm(287
loopne
rorl
in
mov
rolb
ss
jecxz
aaa
xor
aas
fcmove
lock
ds
call
mov
out
or
ror
lret
clc
in
xor
clc
stc
cmp
rcr
icebp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
fcmove
jmp
mov
loop
call
in
in
out
test
test
ds
out
loope
out
in
stc
call
out
vcvtdq2pd
xor
shr
jmp
loope
clc
hlt
repnz
mov
fcmovb
xchg
icebp
loop
sub
enter
lret
clc
cli
not
rcr
fcmovb
aad
test
leave
xchg
xchg
repnz
shl
imul
xor
cli
jecxz
out
mul
bnd
fiaddl
out
lret
out
test
mov
ret
jmp
lret
loopne
jmp
xlat
std
filds
test
cli
out
out
rcr
xchg
xor
ss
out
aaa
rcr
loopne
or
sbb
loopne
mov
cld
int3
in
push
jecxz
out
in
rcr
repz
cmc
ss
div
ffreep
aad
test
out
add
fmuls
icebp
out
xchg
loope
lret
icebp
cmp
fmul
sti
xor
mov
loop
test
iret
lock
xor
sti
aam
out
aad
lret
in
int3
icebp
out
icebp
test
loopne
in
ret
into
addl
in
xor
std
adc
cli
xchg
aas
cli
lret
test
cld
cli
jmp
sti
cmp
in
in
fcomip
sarl
cli
sarl
mul
repz
mov
mov
int3
lock
mov
lret
test
clc
hlt
lret
sti
ljmp
std
cli
xchg
in
in
mov
repnz
ljmp
fsqrt
sti
aam
shr
rcl
sti
out
fmul
leave
int3
mov
decb
aaa
iret
fsub
ss
aaa
int
int
cmp
loop
test
cli
test
test
clc
lret
cli
divl
cmp
loope
push
shl
jecxz
in
fmul
leave
enter
xchg
ss
lret
xlat
ljmp
in
in
rol
loope
clc
out
decb
jecxz
hlt
shlb
out
loope
fmulp
ret
loopne
rcr
loop
lret
loopne
test
shr
xor
lret
enter
xlat
aad
sub
stc
test
out
mov
xchg
int
loope
ljmp
ds
aas
cmp
loope
icebp
test
xlat
addb
in
call
sti
call
sbb
roll
fcmovbe
loop
clc
ljmp
jmp
int
out
in
cmp
push
in
aas
repz
out
decb
xchg
out
cmc
loop
jmp
out
in
loope
cmp
out
shr
fadds
fcmovu
int3
xchg
xchg
rorl
iret
repz
stc
hlt
loop
int3
iret
cld
loop
sarb
std
int3
xor
lret
in
ljmp
rcl
call
in
xlat
cld
jmp
lock
ror
sti
in
cs
hlt
sti
bnd
ffree
add
fmuls
xchg
mov
xor
out
fcmovnbe
aam
cmp
aas
les
mov
sti
mov
fmul
iret
loop
iret
in
cmp
int
aam
cld
aam
stc
icebp
repz
jecxz
mov
loopne
fstp
push
hlt
mov
enter
sub
out
out
cmp
fcomip
not
cmp
ffreep
mov
cld
into
iret
cmc
aas
repz
icebp
aaa
sarl
fdivrl
rol
sar
call
in
cli
in
cld
iret
xchg
cmc
jmp
out
in
cmp
in
repnz
in
into
out
call
ror
xchg
into
roll
lock
enter
sti
cmc
shl
shl
orb
out
ljmp
icebp
repnz
xor
clc
cmc
incb
adc
int
mov
xchg
rcl
xlat
cmc
cmc
out
fcmovnu
aas
testl
ljmp
jmp
iret
aam
xlat
clc
neg
fsub
div
fistpll
loop
loop
std
xchg
fsub
cmp
cmp
aam
xor
lea
movl
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
push
push
test
jg
roll
jle
lock
repnz
fcmovu
in
clc
fstp
mov
fmulp
lock
int3
repnz
sti
jmp
aas
jmp
hlt
xabort
loop
jmp
jmp
test
orb
repnz
into
leave
rol
les
stc
call
mov
rorl
lret
cmp
into
xor
iret
hlt
ret
shl
loopne
cli
stc
mov
mov
xor
ljmp
xor
fnstcw
cmp
aad
fsub
in
in
std
jmp
aas
ret
jmp
leave
idiv
repz
xor
jecxz
xchg
mov
cmc
ljmp
xchg
lds
call
aam
addb
aas
int
fmul
xchg
ljmp
ret
xor
out
sti
xlat
int3
clc
loop
out
addb
mov
adc
in
idivl
shl
in
xlat
lret
iret
loop
repz
add
std
call
ljmp
fidivrl
cmp
xor
fsub
cmp
sub
cmp
orb
loopne
aam
iret
xor
sub
fcmovnb
in
stc
shl
jmp
out
lret
in
hlt
leave
ret
lret
cmp
cmc
cld
sar
test
iret
std
cli
mul
jmp
in
nop
loope
repz
imul
out
lock
test
cmp
shl
test
les
fmull
aad
repnz
shr
fucomip
cmp
fcmovnu
shl
cld
loopne
and
xchg
mov
icebp
inc
in
xor
iret
into
lret
fucomip
aas
aas
in
cmp
stc
out
fsub
in
loope
xchg
rorb
cmc
into
xlat
xor
ljmp
stc
xlat
fxam
cld
stc
fisttpll
int3
mov
xchg
sub
into
cmp
iret
fdivr
jmp
loope
imul
idiv
fld
jmp
out
jmp
jmp
hlt
xor
xor
cmp
out
out
ds
fmul
mov
in
fcmovu
in
loopne
lret
xlat
repz
leave
in
aam
ror
cmp
dec
fdiv
mov
fnsetpm(287
loope
into
shr
aam
not
repz
cmp
cmp
int3
fiaddl
rcl
in
addb
shl
or
int
ret
lret
fucomi
hlt
out
aam
cld
cli
mov
rorl
in
in
and
xor
out
in
enter
in
flds
call
in
loop
and
icebp
int3
icebp
divb
jmp
iret
not
icebp
shl
rcl
cli
fcmovb
mov
test
test
xchg
in
ret
cmp
aam
call
rcr
incl
xchg
into
in
in
in
stc
jmp
in
loopne
lret
cmp
loopne
jecxz
mov
fdivr
mov
rorb
repz
int3
fdivrl
in
xor
test
icebp
sti
out
sar
repz
loope
clc
enter
ror
sar
in
ret
icebp
sti
rcr
hlt
out
sarb
cmpl
loopne
and
mul
out
out
dec
lea
sub
fdivrs
enter
aad
ret
aam
xlat
mov
call
in
enter
mul
rol
imul
cs
lret
shl
sti
aaa
xchg
jmp
mov
fucomp
loope
in
fyl2xp1
rcr
cmp
xor
fcmovnbe
fsubr
iret
ret
hlt
loope
enter
jmp
shl
jecxz
out
call
in
loop
cmp
cld
cli
out
in
mov
flds
cld
xchg
enter
cld
aaa
cmp
lret
jmp
icebp
mov
mov
mov
cld
jmp
icebp
cli
hlt
faddp
xchg
call
fcom
cmp
fcomip
push
loop
fmul
mov
jecxz
int
jmp
xlat
lret
cmp
cld
sarl
ret
into
xchg
out
loope
repnz
mov
ljmp
icebp
ss
cli
aam
cmp
loop
in
loopne
in
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
bound
sub
testl
xchg
sub
xor
aam
in
cmp
cmp
icebp
cmp
fsub
in
jmp
in
loopne
in
nop
cmc
out
idivb
clc
out
ror
cmc
aas
rol
cmp
rolb
xchg
sti
repz
cmc
rcl
aad
lret
ss
xor
out
loop
cld
cmp
repz
cli
enter
popl
shl
ret
into
lock
cli
ffree
out
movb
clc
icebp
fnclex
mov
ss
xor
into
ffreep
stc
mul
xlat
ret
xlat
or
orb
xor
cmp
test
ds
idiv
fidivrl
fprem
test
clc
out
int
in
mov
std
aam
jmp
in
out
cmp
int3
aad
mov
mov
loope
mov
sub
ret
test
sbb
rol
mov
jmp
call
nop
ljmp
idiv
hlt
leave
cmp
xlat
ds
repz
rcl
rolb
sub
loopne
iret
xchg
jecxz
aam
hlt
enter
xlat
aaa
repnz
addb
jmp
loopne
in
test
loop
xor
out
cs
int
int
shl
test
aad
loope
mov
ret
in
loope
jmp
cmc
shl
xor
sti
fmulp
int
ror
cli
repz
cld
shl
sar
ffreep
sti
mov
iret
fucomi
repnz
ljmp
dec
shl
xlat
xchg
loope
fcmovb
aam
ljmp
cmp
leave
lret
jmp
int3
repnz
out
mov
rorl
mov
mov
std
repnz
xor
icebp
ljmp
aas
inc
fninit
in
fcomp
leave
sar
std
fucomp
call
ror
ss
cmp
cld
cmp
ret
cmp
aas
out
xchg
rorb
xchg
ljmp
cmp
leave
lret
int3
roll
rol
leave
lea
loop
nop
into
in
jecxz
loop
ljmp
icebp
ds
out
jecxz
jmp
in
fldz
loope
repnz
std
aad
lds
neg
jmp
xor
jmp
inc
in
in
cmp
rol
roll
in
loope
in
stc
int3
lret
out
fucomi
or
test
ds
mov
testl
sub
cmp
int3
fucomip
lock
test
sarb
loopne
fildl
out
test
out
jmp
rcr
filds
lock
test
out
leave
loop
into
mov
shlb
ror
enter
aas
cmp
clc
out
jecxz
fdivr
lret
enter
in
jmp
shr
cmp
leave
shlb
cmp
lock
aas
mov
xlat
loopne
enter
cld
fists
enter
ljmp
out
mul
movb
out
fndisi(8087
jmp
sarl
out
iret
icebp
clc
std
clc
roll
sar
lret
test
cld
rorl
iret
lret
out
xlat
ds
lock
repz
aam
out
xchg
out
mov
lret
out
ror
lock
fcmove
cmc
aaa
in
xor
fcomi
aam
fcomp
cmp
xchg
roll
xchg
out
ljmp
sar
ret
xchg
loope
xlat
ljmp
mov
adcb
aad
idiv
lret
repz
iret
clc
cli
repz
sbb
in
fsubr
in
lret
xchg
test
cmc
enter
vpmaxsw
int3
fdivrs
jecxz
hlt
cmp
stc
repnz
filds
aad
lret
aad
sub
aaa
aam
enter
sti
out
incl
jecxz
in
sub
aaa
cld
out
out
aam
ffreep
inc
out
shl
xlat
faddp
in
iret
fstp
lea
ret
out
leave
fdivs
hlt
cmp
cmp
xlat
mov
xchg
jecxz
jmp
xchg
int3
xlat
ret
ljmp
orl
aam
enter
aad
cmp
and
push
decb
jg
roll
jle
clc
ds
hlt
in
loop
in
mov
orb
in
aad
xlat
enter
xor
sbb
cmp
enter
out
fmull
enter
xor
aam
shl
idiv
xlat
enter
xchg
call
mov
in
in
sub
in
shlb
into
iret
std
std
aad
clc
aaa
cld
cmp
mov
call
in
stc
xlat
int
cmp
faddl
ret
rcl
repnz
mov
addb
in
lock
ret
int3
neg
fnstcw
ror
call
shl
cld
in
rorb
in
mov
fidivrs
fmulp
iret
out
rcr
and
in
out
lret
xchg
ljmp
shl
out
into
in
fmuls
fmulp
loope
into
loop
in
xor
cmp
fnstsw
rcr
ret
fidivrs
faddl
or
test
aam
in
in
jmp
shl
aad
cmp
not
shl
jecxz
cld
loopne
xchg
xchg
into
in
rol
fdivs
out
leave
call
sar
fdivp
aad
cmc
filds
int
out
aam
out
out
ss
in
shr
xor
out
repnz
cld
fmulp
leave
int
in
out
xor
shl
sti
ljmp
iret
cmp
xlat
sar
test
loopne
in
xchg
jmp
rol
loopne
fcomp
hlt
fst
cmp
loop
aam
fcmovnu
enter
popl
sar
call
stc
lret
out
sti
out
lret
inc
test
leave
mov
test
fsubr
out
iret
fucomp
fcmovbe
out
lret
int3
loop
aam
test
stc
jmp
jecxz
lret
xor
in
xor
dec
fcmove
aas
aam
shl
cmp
test
out
pop
int
sar
jecxz
xor
in
hlt
hlt
fmul
lret
ffreep
in
fiadds
in
loopne
fsubr
nop
orb
imul
lret
cmp
loop
into
adc
test
fsubr
ljmp
int
imul
imul
lret
int
iret
icebp
xlat
lret
cmp
ljmp
jmp
mov
loop
aad
out
ljmp
cli
repnz
repz
rcr
ljmp
out
in
mov
xor
in
clc
hlt
lock
rcl
rolb
jecxz
vpaddusb
xchg
iret
nop
shl
cmp
test
sarb
fidivl
shl
cmp
shl
mov
lret
out
out
int3
ljmp
out
lret
stc
aaa
xlat
icebp
aad
aad
stc
fptan
adc
decb
repz
aad
icebp
jmp
cli
ljmp
aad
clc
xchg
xchg
addl
leave
iret
xor
xor
ror
cmp
rcr
lock
aas
loopne
test
in
call
xor
aad
fcmovnu
clc
fiadds
mov
ljmp
out
mov
aad
sub
cmp
cld
aad
shl
sar
hlt
test
xchg
in
aam
xor
fadd
ljmp
aad
int
aas
test
out
out
loopne
call
hlt
repnz
xor
fsincos
in
lock
fcmovnb
rcr
repz
ljmp
fimull
xchg
repz
sti
aaa
out
iret
out
shr
cmp
shl
stc
testl
out
cmc
cs
fcomi
aad
div
repnz
xlat
incb
jmp
fsubp
in
mov
shr
ljmp
iret
out
lret
cmp
lock
std
test
xor
ljmp
ss
cmp
std
call
test
jecxz
mul
decl
in
mov
ljmp
ljmp
xlat
ljmp
fdivr
lret
xlat
loopne
or
xchg
push
mov
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
mov
call
cmc
sar
ror
div
aaa
shl
in
stc
aas
and
mov
mov
cmp
lret
repz
aad
repz
test
sar
adc
mov
out
fxch
enter
int
ror
cmp
cmp
xchg
shl
fadds
xchg
into
xchg
test
rol
in
ror
repz
cmp
hlt
loop
faddl
fcmovnbe
clc
out
out
jmp
xor
lret
lock
ds
in
cmpl
rcl
in
in
nop
xchg
filds
imul
aad
cmp
aam
and
repz
out
rolb
ljmp
mul
fprem1
fldcw
ds
call
fnstcw
rol
sbb
dec
loope
repz
xor
xor
fucompp
cmpb
dec
testb
flds
shl
loopne
in
int
clc
xlat
xor
icebp
fucomi
aam
call
mov
jecxz
jmp
in
xchg
repz
xchg
test
int3
repnz
idivb
aas
sti
aad
aas
xchg
out
jecxz
test
lock
fcomip
mov
call
out
aad
lock
test
loopne
xlat
hlt
mov
aad
fmul
mov
nop
into
ss
rcl
xor
fidivrs
std
std
lock
mul
ret
jecxz
loopne
leave
lret
loop
fucomi
in
xor
fidivl
icebp
iret
in
fmul
sti
iret
in
rcl
xchg
test
mov
enter
loopne
xchg
nop
xchg
repnz
lret
aaa
aas
int
lock
rcl
aad
hlt
fdiv
out
in
loopne
mov
ljmp
idiv
int
dec
repnz
fcmovbe
shl
div
loop
in
std
icebp
nop
sub
test
rcl
fmul
loopne
cmpl
out
hlt
jmp
decb
repz
ret
ds
cmp
fidivl
lock
mov
xchg
out
in
repnz
les
xlat
out
idivl
jmp
jecxz
icebp
cld
cli
mov
mov
fucom
hlt
iret
jmp
xor
into
ljmp
clc
int
xchg
sti
repz
fsub
lret
test
fsubp
aaa
in
into
ror
cmp
out
icebp
cmp
aam
xor
sti
leave
jecxz
iret
xchg
loop
repz
fcmovb
out
rolb
loope
div
ret
loopne
jmp
xchg
mov
out
ljmp
aas
test
sbb
leave
lret
lock
loop
orl
sar
cmp
sar
aam
shl
fmull
mov
les
loop
lock
aaa
out
aad
cmp
sbb
cmc
mul
lret
test
ror
icebp
mov
in
sub
into
repnz
ljmp
lock
cmp
loope
jmp
test
xchg
mov
cmc
xor
rol
enter
xor
rcr
iret
xchg
aas
jmp
addl
incb
out
in
lret
sti
clc
cmp
shl
fdivp
stc
cmc
fisttpll
fabs
hlt
jmp
fdivr
clc
enter
xor
into
ljmp
sti
loop
shl
loopne
int3
xor
xlat
ror
stc
shl
out
cld
test
out
sti
out
int
loop
fucomi
out
loop
xor
xlat
jmp
shl
icebp
out
sar
ret
cli
fcmovu
hlt
clc
jecxz
mul
test
shl
mov
int3
sub
cmp
fdivr
lret
out
aam
fiadds
lock
add
fcmovb
fcmovne
int
std
shr
shl
leave
hlt
loopne
out
aas
cmp
les
test
hlt
nop
rolb
xor
cmp
loop
in
out
rolb
cli
sub
jmp
stc
int3
shl
call
repnz
adc
in
cmp
enter
jmp
jmp
clc
rcl
out
aaa
out
std
int
test
into
fldl
pop
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
gs
jg
roll
jle
in
fucomip
fdivr
fnclex
cli
roll
cmp
cmp
xor
fcmovnbe
sbb
iret
mov
fdivrp
loopne
leave
imul
jmp
rol
cmc
ror
stc
imul
aas
xor
ds
icebp
xlat
aad
sbb
mov
mov
sub
out
sub
in
int3
cld
aad
stc
fcmovnbe
test
cli
loop
sti
mov
into
shl
aad
leave
aaa
out
icebp
std
cmp
rcr
mov
and
xlat
in
loope
les
out
cmp
divl
cmp
hlt
cmp
int
fdivr
std
aad
fdivrp
enter
out
and
in
out
repnz
aad
rcl
fsub
repz
idiv
std
test
dec
stc
fxch
xchg
xchg
in
repz
cmp
in
out
fadd
les
xchg
call
fdivrs
in
cmp
shr
aam
cmc
repnz
xchg
fsubp
rol
fsubr
sti
into
in
xchg
adc
xchg
sub
out
leave
call
cmp
test
out
fadds
test
xchg
fst
enter
rcr
xor
cli
loopne
fcomi
ret
shl
div
cld
cli
in
lret
call
das
repz
lret
ss
aas
sarl
out
xchg
in
sti
jmp
mov
xchg
shl
mov
call
lret
loope
out
divl
cli
fucomip
test
xabort
adcb
div
ss
sti
aam
ss
sti
clc
addl
jecxz
mov
jmp
fdiv
out
shl
icebp
xor
ret
into
shl
ror
aaa
cmp
rcr
test
xchg
fsubp
out
enter
call
cli
repnz
cmp
stc
loopne
in
ret
mov
mov
cmp
out
sti
out
faddl
repz
cli
mov
call
int
lock
clc
xor
aaa
loopne
icebp
rcr
aam
test
lds
int
xchg
mov
enter
fprem1
int3
fcmovnu
in
fmul
sbb
xchg
mov
ret
loop
lea
repz
jmp
loopne
rcr
in
repz
aas
rorl
xchg
int3
shr
repnz
fcompp
cmp
aad
ret
cld
fucom
or
lds
into
aad
out
icebp
lret
cld
aaa
cmp
shr
aad
sub
rolb
cli
enter
xorl
std
xlat
aad
in
mul
int3
fprem1
sbb
les
ljmp
hlt
fsubr
ret
ret
aaa
jmp
lock
ds
mov
mov
clc
jmp
jmp
ret
loop
jmp
in
out
aad
fdivrs
lret
lock
fstp
mov
mov
in
sbb
in
xchg
addb
out
call
divl
cmp
mov
cli
test
xchg
in
aad
aas
jecxz
fldz
fdivrs
jmp
rcl
cld
aam
hlt
and
icebp
clc
in
in
mul
clc
test
fiaddl
ret
stc
out
sarl
sar
neg
lock
xlat
mov
test
mov
addb
cli
cs
call
int
xlat
shl
cli
out
clc
addl
in
icebp
rcl
out
cmc
cmc
enter
loope
test
jecxz
sti
xlat
and
repnz
sar
xor
ljmp
cmp
flds
int
fcos
xchg
into
jmp
xchg
aaa
lret
repz
cmp
loop
xchg
mov
mov
nop
std
test
jmp
in
sar
aad
cmp
fcomp
in
aam
loopne
fcomp
test
clc
nop
nop
call
out
xlat
loope
fcmovne
cmp
call
in
fcmovnu
loop
cld
hlt
std
fldl
test
xchg
hlt
bnd
out
out
in
repz
rcl
hlt
adc
cmp
xchg
rcr
icebp
into
out
sub
aam
icebp
fdivl
shr
imul
enter
fmul
fnstcw
sbb
inc
popf
jg
roll
jle
fmul
xlat
lret
fsubr
call
cmp
sti
ljmp
fldcw
lret
ljmp
and
in
mov
out
fisttpl
loop
enter
in
iret
cmc
in
aad
rorl
int
fsubr
in
in
rolb
clc
cs
xor
repnz
fdivp
lret
fcomi
xchg
xchg
das
loope
fidivl
fcomi
in
div
cmp
mov
mov
out
loop
shl
hlt
loope
repz
lds
xor
shl
in
cmp
fsub
loopne
rcl
xlat
mov
loopne
loopne
leave
das
loop
clc
test
loope
ffreep
icebp
loop
mov
jmp
fcmovu
nop
call
aaa
sti
lds
out
clc
leave
sar
hlt
loope
call
out
jmp
out
out
repnz
xor
in
shr
std
cmp
icebp
stc
cmp
in
fucom
shl
sbb
cmp
mov
aad
cli
jmp
ds
cld
loop
cmp
fdiv
loopne
clc
loopne
out
loope
shl
out
enter
fcomi
fmulp
lret
std
sti
fadd
repnz
in
lret
jmp
in
incb
loopne
div
iret
fcmovu
jmp
clc
repnz
ffree
cmc
out
jmp
in
test
call
std
std
cmp
cmp
cli
int3
or
loope
ljmp
out
in
loope
xlat
xor
rcr
lock
call
adc
into
ljmp
xor
fyl2x
repz
shr
cmc
in
idivb
rol
repz
leave
xchg
in
loopne
hlt
cmc
rcl
out
rcl
ljmp
xchg
rcr
cld
ljmp
mov
xchg
jmp
xor
in
shr
cmp
in
fdiv
repnz
hlt
call
mov
in
out
loop
cmc
in
fcmove
rcl
repz
xlat
idiv
cmc
enter
in
fmul
idiv
test
shl
leave
out
stc
in
out
cmp
in
call
int3
fcmovnu
call
aad
out
into
aam
std
lret
fbstp
cli
cmp
stc
iret
ds
test
jmp
mov
leave
out
lret
addl
rcr
loop
cmc
loop
sti
stc
cmp
sub
mov
xor
xor
cld
fdivr
fucomp
fstpt
cmp
fdiv
stc
aam
in
std
lock
filds
ror
xor
cli
clc
fdivr
loopne
shl
aad
sar
mov
test
rorb
in
iret
aaa
loop
cld
ss
shr
repz
test
cmp
ret
stc
mov
in
in
iret
mov
out
shl
enter
jecxz
int3
ljmp
ds
filds
fucomi
fucom
xchg
aam
xor
cmc
lret
fmul
ss
loop
inc
aam
loopne
stc
mov
std
xchg
in
hlt
in
cmc
shlb
clc
iret
cmp
cmp
lret
mov
in
xor
cmc
xor
jecxz
cmp
int3
out
call
out
stc
fadd
xchg
xchg
lret
call
out
mov
xlat
das
cmp
repz
xor
loop
test
in
iret
fisttps
fcmovne
out
ljmp
rcl
iret
aad
clc
std
lret
ljmp
loopne
sti
xchg
call
out
nop
hlt
ss
iret
cmp
int
or
call
sti
icebp
jecxz
loope
lret
fmul
mov
loope
lret
ljmp
jmp
ljmp
call
idiv
in
and
das
xlat
iret
cli
cmp
cmp
lret
cmp
aas
loope
cmc
fcmovnbe
fnstsw
stc
lret
out
std
out
cli
fiadds
stc
xor
xor
sti
std
repz
cmp
cmp
fsubr
loopne
cli
filds
aam
shl
xor
aam
dec
cmp
mov
in
lds
adcl
jmp
enter
fst
ffree
and
dec
jo
arpl
push
push
mov
jle
out
std
and
aad
jmp
lret
call
icebp
fcos
cld
cmpb
jecxz
call
incb
lret
icebp
cmp
rcl
in
stc
iret
in
test
call
fcmovu
shl
or
jecxz
rol
lret
ss
out
cmp
jecxz
ret
jecxz
lret
clc
filds
or
loop
xor
jecxz
iret
cli
divb
loope
cmp
jecxz
jecxz
mov
xchg
idivl
clc
shlb
fidivl
cmp
cmp
rcr
jecxz
ljmp
in
mov
fisttpll
out
call
ret
xlat
stc
neg
icebp
fsubp
sub
std
into
jmp
int3
out
out
jmp
aad
das
stc
xor
xor
shl
inc
rcr
enter
in
int3
or
in
repnz
into
into
cld
lret
aas
stc
hlt
aaa
test
not
lret
fimuls
int
ret
out
xor
cmp
cmp
lock
mov
mov
xchg
repz
aam
fstpt
cmp
cli
in
loopne
repz
repz
ret
test
testb
fcomi
rcr
in
sbb
fdivr
loop
rol
xor
testb
mov
rcl
lret
sti
cld
ds
call
mov
mov
out
sub
mov
aas
das
call
int3
test
out
cli
call
in
jmp
in
test
repz
into
in
xor
shr
fld
aam
into
cmp
out
out
rcr
cmc
hlt
aam
mov
lock
repz
xchg
xchg
xor
ret
clc
das
clc
sti
cmp
fdivrs
test
testl
ror
shr
out
into
sti
cmp
loopne
fnstsw
cmp
clc
jmp
std
sti
in
call
in
ljmp
fucomp
loop
in
ret
loop
test
mov
lret
incl
xor
std
jmp
clc
cld
int
sub
cld
orb
in
xor
call
repnz
not
ret
fsub
fcmovnbe
xchg
leave
mov
ljmp
aaa
imul
call
aam
loop
xchg
fst
mov
loop
xor
xchg
mov
rcr
cli
ss
cmc
in
out
std
cld
in
loope
mov
enter
leave
in
addl
into
leave
xlat
out
rcr
fcmovu
cmp
in
rcl
or
call
mov
mov
cmp
fdivrl
aam
out
aad
xchg
cli
iret
fucompp
lret
xchg
lock
int
aaa
xor
aad
in
clc
int
xlat
sti
iret
lret
cmc
xchg
jmp
xor
into
out
cmp
out
loope
cmp
cmp
stc
sub
xchg
int
or
int3
out
aam
imul
enter
aas
std
shl
repz
not
stc
cmp
enter
mov
xchg
lret
lret
stc
cmp
in
repnz
fmuls
loope
icebp
mov
hlt
shl
enter
lret
addl
cmp
mov
fsubrp
fucom
repnz
in
out
icebp
in
out
div
rcl
incl
cli
fdivr
add
cld
mov
repz
out
fmul
icebp
cmp
fidivrs
fldz
loop
fiadds
out
out
neg
jecxz
lret
fdivr
shl
rol
fldl2e
xor
aas
into
cmp
iret
in
fucom
mov
sar
loop
leave
fcomip
xchg
xor
sarb
cmp
std
cmp
int3
ljmp
fadd
les
roll
xlat
sar
cmp
ror
repz
stc
into
cmp
cmp
out
movb
fsubrs
clc
repz
fsubr
fucomp
test
std
loop
rol
in
in
cli
call
roll
cmp
out
aad
int3
cmp
fiadds
add
arpl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
cltd
lret
jmp
add
hlt
cld
cmp
rcr
mov
jecxz
jmp
fcmovne
mov
xchg
shl
sar
fcmovu
fistpll
ror
shr
shl
ds
out
out
in
decl
in
ret
rcl
repnz
cmp
in
lret
cmp
ret
aas
leave
xlat
mov
jmp
jecxz
out
out
cmc
sub
iret
aad
fcmovne
rcr
cmp
sar
rcr
rcl
mov
in
iret
lock
test
jmp
repnz
loop
les
rcl
cmc
ffreep
fnclex
jecxz
clc
int3
in
shl
ljmp
xor
xbegin
cmp
movb
out
in
mov
xchg
filds
idivb
out
out
adc
rcl
cmc
hlt
lret
xlat
cli
icebp
cld
rorb
cmc
fsub
fxch
sar
lret
div
aam
repz
enter
add
repnz
lret
cli
icebp
jmp
aas
aad
cmp
aad
repnz
mov
lea
sti
cli
out
lret
cmp
fdiv
rolb
clc
stc
xchg
xchg
mov
into
nop
fdivp
loope,pn
out
int
out
repz
hlt
in
loop
inc
aas
cmc
or
fcomp
mov
lret
icebp
and
int
divb
leave
test
icebp
loope
cmp
fdivrp
out
lock
inc
cmc
in
lock
out
loop
sbb
sar
and
clc
mov
int3
in
repnz
fdivp
xchg
hlt
out
into
icebp
clc
shr
leave
icebp
cmc
xorl
fcomp
int3
movl
xor
out
fdivl
iret
cmp
aad
fsubp
jmp
mov
fsub
mov
in
xchg
in
jmp
icebp
shl
out
aam
fdivp
icebp
hlt
fsub
loop
loope
xchg
fcmove
test
test
aaa
cmp
leave
adc
cmp
xchg
flds
decl
loop
ljmp
fcmovb
sub
loopne
test
test
mov
jmp
out
cld
fdiv
cmp
sti
fdivrs
out
sbb
clc
ljmp
mov
aam
cmc
aad
not
fstp
hlt
cld
addl
sti
lea
repz
sar
aam
sbb
cmc
loop
clc
aam
mov
in
fldl
aad
fmul
aaa
int
ds
fcmovnbe
sti
cmp
loop
ret
ret
ljmp
jmp
hlt
loope
cli
cmc
cmp
icebp
out
repz
mov
loop
mov
mov
out
out
iret
jecxz
int
xor
out
div
test
icebp
fdivr
cmp
fiadds
fsubp
icebp
test
ljmp
aaa
into
int
fmul
cmp
mov
mov
rcr
in
xchg
mov
out
imul
cmp
xor
xlat
ret
aad
jecxz
jmp
clc
ret
frstpm(287
aad
rcl
not
out
sti
cmc
cmp
shl
shr
cmp
fstp
mov
lret
test
cli
out
mov
lock
jmp
icebp
aaa
std
lret
cmp
in
cli
call
test
int
sub
aam
out
ror
call
aam
not
cmp
mul
loop
aad
test
jecxz
iret
out
xor
rcl
out
lock
xor
out
int
lock
ljmp
out
int
in
enter
stc
dec
fst
in
aad
cmp
icebp
call
mov
flds
in
loope
adc
shll
jecxz
stc
repz
cmp
out
ret
cmc
mov
fdivr
xlat
clc
mov
rclb
in
out
iret
ss
ds
fnstsw
roll
call
fadds
out
loopne
lret
fnsave
repnz
loope
in
imul
movb
lea
xchg
icebp
cld
repnz
xor
jmp
repz
cld
orl
mov
je
movzbl
sub
movl
add
jmp
aas
aam
int3
aad
lret
fstl
pop
jmp
roll
jle
xchg
add
rol
fdiv
stc
cli
xlat
ds
sarl
sar
cld
sbb
xchg
rol
hlt
in
out
out
fxch
repnz
out
fcmovnb
loope
mov
xchg
rcll
cmp
fcmovbe
into
fprem
cmp
int
repz
loope
lret
mov
hlt
xchg
int3
ljmp
sarb
in
test
rcr
leave
aad
lret
jmp
ror
aad
lret
cmp
ds
fsubr
cld
out
stc
xor
addb
mov
out
or
into
fcmovnb
aas
repz
test
test
xchg
int3
xchg
in
out
xor
fcmove
out
vpsubd
hlt
in
fdiv
fdivrs
aad
fadd
aad
flds
or
iret
in
iret
ret
xor
in
ror
ds
rol
cli
std
and
std
stc
loope
jmp
shl
lret
sti
cmp
icebp
in
in
shll
sarl
enter
fucom
in
or
int3
int
xor
fcmove
cmp
loopne
rcl
fadds
aam
loope
out
and
lret
mov
lock
clc
stc
fneni(8087
fst
rol
shl
cld
ret
int
fisttpl
sub
int
divb
aam
sar
lock
test
faddp
ret
fadd
int3
mov
dec
int3
fcmovnbe
aaa
fdivp
hlt
fprem1
test
repz
aad
aas
out
fucomp
out
sub
lret
lret
fidivrl
jmp
shl
loope
adc
lret
fmulp
mov
incb
icebp
loope
fnop
xor
clc
int3
sarb
out
jmp
idiv
fsts
int
out
cld
int
xor
jecxz
not
aam
aas
out
cmc
mov
leave
test
iret
xor
cmc
out
jmp
in
out
in
ror
addl
out
loope
jmp
rcl
fst
aad
lock
ret
mov
iret
int
rcl
fmulp
xor
xlat
out
jmp
sub
shl
fcmovb
sti
fdivrl
stc
mov
loopne
or
xchg
in
ljmp
stc
frndint
cmp
lock
faddp
repz
fadd
loope
out
lea
shl
int
ljmp
hlt
cmp
in
addb
out
mov
ss
fcmovne
shl
clc
cmp
out
lds
fst
addb
int
fisttps
lret
aam
lret
shl
fsub
aam
in
std
out
add
fucomp
nop
fsub
repz
mov
iret
imul
cli
shr
std
ret
cmc
fadds
xchg
sub
not
xor
ret
in
ss
stc
jmp
xchg
cli
rcr
incb
ret
decl
rcr
jmp
icebp
int
jmp
jecxz
loope
fdivr
call
out
into
std
call
lret
sti
into
bnd
fcmovnb
cmp
cli
imul
test
in
fldpi
std
sar
jmp
lret
aaa
in
iret
sbb
xchg
loop
jmp
lock
icebp
out
fsub
lds
icebp
lock
in
xlat
cmp
ret
mov
mov
fucomp
xchg
ljmp
fucomp
out
int
xor
fadds
test
mov
int
in
repz
into
call
icebp
out
rcl
out
shl
loop
out
sti
sbb
mov
ficoms
xor
lret
leave
cmp
out
sarl
cmp
cmp
fucom
stc
fadd
fucomip
out
sar
test
jecxz
in
xor
call
aam
cmp
rcr
rol
test
ljmp
repz
ljmp
rol
cld
test
loop
mul
mov
mov
xchg
loope
out
aam
leave
ss
in
cli
aas
cmp
jecxz
mov
add
add
shlb
adc
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
dec
adc
cwtl
imul
roll
jle
ds
and
in
filds
lret
int3
in
call
jmp
int
into
shl
sti
fadd
leave
ret
cld
in
fcmovne
call
sub
out
xor
std
fdivs
cmc
fucomp
fcmovnb
aam
std
sti
out
in
out
loop
fcmovbe
aad
out
aaa
shl
out
fninit
idiv
repz
ljmp
into
jmp
cmp
lock
cmp
cmp
jmp
cld
clc
rorl
in
std
int
lock
aas
xor
out
fcmovb
clc
into
repz
in
adc
loope
loope
in
sti
jmp
ret
jmp
ljmp
idiv
out
fcmovne
call
mov
out
xor
out
out
cmp
out
ret
mov
jmp
repnz
int
ljmp
xor
lock
icebp
ds
aam
test
cld
loop
loop
fucomi
lock
out
loopne
not
cmp
dec
out
sar
repz
clc
fimuls
out
ljmp
jmp
sar
aad
cld
hlt
lock
vpsubb
out
clc
test
xchg
jecxz
mov
xor
aam
jmp
repnz
ds
int3
cmp
in
in
in
fdivrp
mov
out
sti
shr
call
enter
cmp
ljmp
fucomip
repnz
ljmp
xchg
rolb
ss
aad
rol
lret
ror
shl
xlat
mov
leave
xchg
test
clc
out
into
xchg
dec
mov
fcmovnu
jmp
aad
sti
in
iret
xchg
std
testb
test
out
icebp
nop
rcl
test
sti
loop
repz
testb
lea
mov
ret
ss
cmp
stc
cld
cmc
std
std
aad
loope
fnstcw
mov
clc
in
xlat
mov
mov
out
cmc
xchg
leave
hlt
int3
in
int3
lret
dec
sarb
in
testb
int3
mov
test
rcl
xor
out
into
int
ljmp
in
ret
nop
in
icebp
adc
aam
xor
xor
clc
iret
aad
xor
int3
cmp
loop
fcomi
cmp
fcmove
stc
movb
ret
das
out
xor
xor
ds
sarb
aad
stc
les
cli
jmp
test
enter
ror
inc
cmp
loope
out
rcl
leave
add
lret
sti
xchg
nop
mov
loope
xor
ret
lret
fstp
fstp
hlt
std
fisttps
cld
mov
xchg
sar
int
fst
lock
cmp
rol
xlat
orb
sar
dec
fcomi
ror
xor
in
int
cli
ljmp
ret
jecxz
in
call
fsubr
out
call
shll
out
rol
cmp
stc
in
repnz
leave
hlt
fxch
in
call
sub
xor
ret
fsubr
sar
cmp
or
les
aam
xchg
loopne
int3
neg
fxch
lret
int3
shl
repnz
cmp
mul
in
aad
iret
fdivr
mov
out
jmp
lock
fcmove
into
icebp
add
jecxz
call
jmp
mov
mov
lret
test
out
cmc
sti
xor
out
in
imul
xor
repnz
mov
repnz
xchg
rol
ljmp
aaa
adc
roll
sti
cmp
out
test
shrl
not
cmp
in
clc
sarb
jmp
cmp
or
mov
add
xchg
into
ret
fcmovu
jmp
xor
fidivrs
loope
imul
mov
fisttps
in
rclb
cmp
fcmovnu
ss
sar
test
fdivr
cld
rolb
fsubr
xchg
int3
xor
cmp
cmc
cmp
iret
aas
out
ds
repz
ret
mov
aad
stc
fmuls
fdivp
xchg
test
hlt
fsub
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
mov
jle
add
jmp
mul
into
aam
fiaddl
cli
cli
enter
cmp
adc
iret
fcmovb
sar
fidivrs
aaa
fucomip
ret
out
repz
jecxz
int
out
loope
ljmp
out
into
fnstsw
sarl
testb
xchg
std
addb
iret
enter
idivb
out
aam
fst
cmp
cld
jmp
sub
iret
hlt
xchg
xchg
cs
clc
xor
out
shr
fimull
test
std
jmp
int
aaa
in
ss
cmp
fcomip
cmp
not
in
out
lret
mov
jmp
xor
fidivl
icebp
out
enter
sbb
aad
icebp
rorl
addb
sub
ror
int
div
fsincos
repnz
inc
fsubp
ljmp
cld
xchg
loopne
in
aad
xlat
lret
icebp
call
cmp
mov
mov
cmp
loop
rorl
repnz
stc
aas
ss
hlt
ret
shl
or
aad
in
test
faddp
in
out
repz
into
stc
ret
out
ret
idiv
leave
loop
jmp
icebp
mov
int
rol
aaa
xor
xlat
cli
cmp
ds
xchg
jmp
mov
cld
loop
rcl
loop
int3
repz
idivb
jecxz
into
int3
sbb
repz
aam
repz
fmuls
leave
lret
nop
out
out
shll
jmp
loope
xor
jecxz
rorl
ljmp
test
aam
int3
stc
shl
lret
int3
in
loope
repnz
stc
mov
out
in
into
ret
loope
lds
ss
cmp
std
test
out
sti
cmp
fisttpll
aam
into
aaa
clc
cmp
fnstenv
fcmovne
iret
aad
fcmovb
mov
shl
clc
leave
fninit
lret
lret
loope
xchg
das
loop
ret
xor
shr
lret
flds
aad
cld
clc
test
out
in
sti
loope
lret
test
cmc
loope
ljmp
cmc
clc
xor
fst
test
enter
jecxz
xor
out
ret
xor
cld
stc
fsub
aas
cmp
inc
repz
aad
xchg
out
jecxz
cmp
jmp
xlat
in
iret
out
clc
repz
fmuls
test
cli
clc
lds
leave
leave
aam
fmul
repz
fnstsw
cld
rcl
aam
fdecstp
loop
repnz
rcl
call
jmp
aam
rcl
repnz
rol
stc
int3
jmp
ljmp
hlt
enter
cmp
leave
add
clc
sar
in
sti
stc
out
leave
in
dec
lea
ss
repnz
cmp
in
sar
addb
int
xchg
mov
mov
mov
out
fldpi
into
into
fucomp
aad
in
sbb
fmull
loope
jecxz
xchg
loopne
out
int
xor
jmp
jecxz
div
out
mov
jmp
test
out
int3
mov
in
shr
das
fcomi
in
xor
enter
fsubr
loop
fidivrl
aad
int3
int
in
in
loope
icebp
fmulp
bnd
cmp
fcmovne
xor
loope
fdivr
loope
bnd
faddl
mov
out
idiv
sarb
aaa
icebp
call
ret
stc
loop
out
aad
loop
jecxz
in
icebp
out
int3
aam
out
leave
out
fpatan
cmp
fnstcw
enter
leave
xchg
stc
popl
int3
xor
lret
cmp
xor
sbb
in
aas
mov
icebp
out
ret
fmul
mov
into
lret
mov
sub
aad
lock
aad
adc
loope,pt
les
mov
mov
loop
lret
mov
shll
int
repz
xor
icebp
aaa
aas
hlt
cmc
icebp
sar
mov
mov
mov
stc
sub
int3
cmc
test
lds
xor
hlt
aad
in
pushl
fprem
xchg
or
adc
mov
cwtl
sbb
add
arpl
decl
call
mov
add
add
stos
cli
push
es
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
jmp
or
repz
adc
aad
hlt
aad
cmp
ds
in
aam
fmulp
mov
mov
mov
jecxz
rcr
test
enter
loopne
fucomi
aaa
cmp
hlt
rorl
xchg
enter
xchg
add
fdivrl
lock
fcomi
loope
loop
out
xchg
cli
xchg
incb
jmp
cmp
cmp
in
inc
out
ffree
and
addb
shl
ret
out
int3
ds
into
loope
cmc
shl
shl
out
cld
jmp
fnsetpm(287
addl
lret
xor
test
and
mov
lea
jecxz
loop
lret
ror
leave
repnz
call
iret
sar
call
lret
jmp
jmp
jmp
xorl
loope
hlt
std
call
shlb
lock
in
cmc
mov
into
mov
mov
rcl
enter
iret
aad
sar
out
sti
shl
test
call
cmp
loopne
lret
test
shlb
hlt
call
sti
fmulp
ret
repz
cmp
aad
incl
in
jmp
lret
cmp
fcomp
not
out
fcmovbe
out
out
shl
rcr
faddl
loope
cld
fildl
in
out
cmp
fcmovnu
xor
cli
test
test
clc
out
int
test
lea
out
out
fmul
sarb
imul
jmp
rcr
test
loopne
ds
faddl
test
lock
aas
cmp
fiadds
test
cmp
out
rcr
cld
std
jmp
sar
ss
iret
sti
aam
out
aaa
loopne
enter
jmp
mov
clc
xchg
lret
out
repnz
in
lret
jmp
cmp
shl
ds
std
loopne
mov
iret
loope
std
xchg
jmp
xlat
out
out
lret
fnstcw
aad
jecxz
in
mov
mov
xchg
in
repnz
loope
mov
ljmp
fildl
loope
in
xlat
orl
fsubr
repnz
ljmp
icebp
enter
xor
in
lock
cld
int
test
jmp
nop
std
into
loope
xlat
in
out
aam
xor
cmp
in
cmpb
std
movb
nop
aad
aaa
xor
out
xlat
out
out
sar
fdivrp
in
fldl
in
jmp
and
cld
xchg
div
aaa
leave
cmp
in
cli
icebp
sarl
jmp
shl
rol
fcomip
aad
decb
div
leave
loop
xor
fdivl
sar
aas
aaa
hlt
shl
ret
not
inc
sti
ljmp
xor
xor
int
ds
fiadds
call
xchg
out
mov
out
test
cmp
icebp
fdiv
fninit
cld
fcomip
xchg
idiv
cmp
iret
faddp
xchg
loop
jmp
aam
aad
aad
cmp
loope
lock
in
fsub
out
out
in
mov
into
lret
in
stc
out
cmp
cli
clc
int
hlt
ret
sti
jecxz
sub
cmc
out
aaa
imull
fsubr
cmp
int
lret
int3
ret
stc
repz
nop
loopne
xor
out
xchg
rcl
ss
lret
aam
fldl
test
call
in
out
call
out
aad
mov
aam
jmp
fst
shl
xlat
lock
fxch
mov
ss
out
out
out
cmp
sar
std
lock
aad
testl
in
ret
hlt
cmp
sar
out
into
cmp
lock
hlt
xlat
fsubr
fcmove
sti
into
cli
sti
mov
fsubp
lea
icebp
clc
sti
clc
hlt
das
icebp
int
ret
in
aas
cmc
repz
flds
mov
nop
xchg
fidivs
into
in
xor
lock
cmp
out
aas
fdiv
cld
sti
loope
leave
in
fimuls
mov
rol
clc
aam
xor
aam
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
xorb
mov
jle
shr
cmpb
sti
xor
jmp
test
fcmove
roll
lret
shl
aad
cmp
jecxz
sbb
ds
flds
int3
fdivr
aam
in
in
sub
out
out
fldpi
shl
sub
vpaddd
fsin
fneni(8087
ret
jmp
in
jmp
xlat
xor
into
repz
testl
sub
sbb
mov
shl
lock
sub
shr
out
cmp
in
iret
shl
xlat
fimuls
xlat
or
loop
in
xchg
hlt
lock
ss
leave
fst
cmp
in
xlat
fildl
cld
lds
ffree
mov
jmp
fdivs
leave
aaa
adc
aad
xchg
clc
out
jmp
call
into
repz
ror
lret
lret
in
cmp
aaa
clc
and
ret
out
cld
int
sub
fisttps
lock
rcl
loope
cmp
ss
add
jecxz
in
stc
rcr
ljmp
cmp
leave
lret
cmp
sub
sti
out
mov
mov
lret
ss
jmp
sti
ljmp
aad
fadd
sti
mov
loop
in
shr
aad
ss
out
xor
lret
enter
add
dec
iret
fcmovnu
cmp
fdiv
ret
std
out
int3
jmp
clc
lock
fcmovnbe
push
jmp
ret
aad
xchg
xlat
fcomip
idiv
test
xchg
xchg
aam
xor
xlat
call
cmp
ret
rcl
aad
xchg
jmp
popl
imulb
call
lock
rolb
mov
fsubr
loopne
xchg
iret
das
xor
fsubr
out
ss
out
ret
adc
fcmovne
jecxz
call
repnz
lret
fstp
sub
cmpb
cmp
jecxz
std
repz
mov
in
faddp
in
out
in
icebp
aam
xlat
shl
lret
aam
fsub
into
dec
ds
test
cmp
out
fmuls
loope
mov
cs
shll
call
loope
hlt
fptan
xlat
aad
idiv
incl
icebp
test
lds
in
ror
cmp
clc
xor
fcmovbe
jecxz
fdiv
decb
call
call
cmc
stc
sarl
mov
movl
icebp
xor
xor
leave
cli
fyl2xp1
fcmovne
ljmp
faddl
lret
addl
sub
sti
lret
in
hlt
loop
xor
stc
stc
enter
lret
jmp
jmp
fsub
jmp
shr
cmp
jecxz
xor
jecxz
lret
orl
out
repz
sti
out
fcomip
fucomi
ds
repnz
xor
mov
out
icebp
mov
xor
xor
xlat
clc
test
out
test
icebp
aas
addl
leave
and
loop
sti
cmc
aaa
std
repnz
cmp
rcl
call
fisttpll
xchg
enter
into
shr
cmp
loopne
cmp
sub
in
test
sar
cmp
lret
in
cmp
cmp
filds
out
nop
into
iret
xchg
test
xchg
loopne
leave
in
shr
aad
rcl
shl
xor
faddl
and
xchg
xchg
hlt
imul
lock
hlt
sti
in
sti
repz
cmp
mov
xchg
shl
fistl
sub
cli
in
fmulp
cmc
in
cmc
cli
ret
in
stc
xlat
xchg
in
ret
ffree
shl
jecxz
hlt
lock
cmp
xor
test
cld
jmp
jecxz
div
not
ret
jecxz
test
in
loop
in
div
ss
fmul
xlat
fstp
xlat
repz
sarl
xlat
ds
test
fldln2
into
rorb
lret
not
jmp
jmp
stc
fistpll
aas
aam
xchg
leave
xchg
int
test
sbb
add
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
cmc
mov
cmp
fst
rcr
std
int
fdivp
fld1
test
loope
loope
loopne
xchg
mov
rcl
cmc
subb
in
hlt
std
out
xor
loopne
in
idiv
hlt
repz
mov
rorb
jecxz
enter
in
lret
jmp
cmp
loopne
fst
and
ds
out
roll
rcr
cmp
ljmp
ftst
hlt
fst
ret
sub
jecxz
loope
icebp
cmp
xor
in
rcl
out
ljmp
clc
cmc
mov
int3
cld
xchg
loope
iret
jmp
in
das
xor
call
fabs
loop
loope
ret
movb
ret
incl
xor
clc
loopne
cmp
loop
test
jmp
fucomp
loopne
icebp
rorl
lock
fistpll
clc
aam
sub
cmc
aad
repnz
ror
mov
xchg
out
cmp
xlat
sbb
std
in
test
loope
ret
cli
test
int3
into
xchg
loopne
not
hlt
loop
lret
in
int3
fcmovnu
std
fdivp
addl
xchg
aam
xlat
fdivrp
hlt
stc
fsubr
cmc
aad
hlt
idiv
rol
in
lea
lret
cld
fcmovu
fidivl
leave
clc
sti
aas
test
jmp
loop
cmc
mov
ret
xor
aaa
test
adc
in
repnz
mov
in
ret
clc
clc
hlt
ror
idiv
loopne
cmp
icebp
rcl
hlt
incl
in
and
test
lret
in
repz
stc
lret
xlat
fstpt
push
clc
cmp
int
fdivrp
ffree
loop
xor
into
ss
xlat
repz
rcl
in
rcl
fxtract
cld
fsubrp
faddl
xchg
div
xlat
imul
into
jmp
loope
fdiv
repz
or
fildl
jecxz
ret
stc
int
cld
aad
rcr
xor
vpaddq
call
std
in
test
loope
xchg
sub
xor
aam
in
fdiv
sar
in
aas
repz
idiv
add
into
into
int
adcb
idiv
out
repnz
ss
cmp
filds
decl
xchg
out
icebp
adcb
repz
fstpt
cld
repnz
jmp
stc
xchg
stc
std
enter
mov
icebp
int3
ror
hlt
std
xor
in
loopne
fdiv
in
mov
xchg
shl
aam
shl
in
sti
leave
lret
cmp
fdivr
fidivrs
repz
int
int
int3
mov
xchg
ljmp
into
repz
cmp
hlt
sbb
mov
lea
nop
jmp
rcll
cmc
shr
neg
fldz
xlat
idiv
mov
out
dec
lret
shl
jecxz
xor
into
ljmp
test
fiaddl
mov
out
xor
into
in
leave
sar
sub
cmp
fsub
call
test
jmp
iret
hlt
xor
enter
jmp
lock
xor
enter
loopne
flds
iret
addl
cmp
out
clc
lock
ds
cli
hlt
ds
rorl
out
loopne
in
lret
icebp
leave
xor
xor
cld
icebp
out
fsincos
in
int
repnz
cli
test
out
xchg
int
int
out
divb
xor
enter
repnz
mov
xlat
ljmp
lock
adcb
hlt
les
xor
fstp
int
in
out
shl
clc
clc
aad
inc
adc
xchg
jmp
sub
out
in
cli
aad
cmc
cmc
fnstcw
ljmp
sbb
xlat
iret
fucomi
xchg
shl
stc
enter
test
ljmp
loop
rolb
call
lret
fidivs
fnop
fnstenv
cld
out
int3
sarl
int
mov
mov
mov
mov
xor
add
jmp
ror
rcl
mov
imul
jle
hlt
xlat
mov
fldl
jmp
shr
xor
repnz
jecxz
fiadds
test
jecxz
fmul
lock
rcl
icebp
xlat
lret
aaa
fnop
loop
push
ret
addb
div
loop
rcl
lock
xor
rcr
jmp
iret
aad
shl
leave
mul
mov
fmull
test
ror
xor
lret
out
sar
rcr
test
adc
xlat
loope
loop
in
out
aaa
sub
xor
hlt
aam
fdivrp
out
aam
aad
loop
mov
mov
out
repnz
sub
fsubrp
not
int3
out
cmc
loopne
repnz
in
xchg
repnz
into
cmp
clc
cmp
loopne
ret
iret
rol
in
mov
std
jmp
sbb
iret
test
call
rcr
fnstsw
cmp
cmc
out
inc
in
ror
jmp
call
jmp
rcr
ror
sar
cmc
cli
incb
out
ljmp
ljmp
ror
aaa
iret
ror
in
fcmovbe
cld
ret
jmp
cmc
in
test
xchg
int3
into
std
repz
out
enter
jmp
loopne
lock
loopne
xlat
fstp
leave
neg
xchg
ret
into
aad
imul
aam
aam
out
in
cld
testb
in
testb
nop
call
out
out
repz
xor
sbb
cmc
repz
call
mov
sar
lret
call
ss
cmp
cld
rol
incb
icebp
loopne
out
lret
aam
cmp
fst
lret
aas
icebp
test
cmp
lret
xchg
loopne
repz
fnstenv
cmc
fucomi
fsub
cmpl
leave
mov
ljmp
in
lock
ss
fdivrs
in
int3
xor
lds
int3
add
loopne
into
mov
stc
loop
aam
jmp
call
loopne
iret
fcmovb
fcmovnu
enter
lock
fmul
mov
out
lret
xor
cmp
in
lock
std
test
ljmp
adcl
out
dec
cmp
icebp
ds
testl
sti
into
in
mov
in
lock
ror
cmc
inc
out
fdivrl
idivb
mov
filds
shl
fcmovbe
xor
not
jmp
out
jmp
fdivr
xchg
jmp
mov
rorb
fadd
std
in
fdiv
cmp
aam
aas
loop
mov
orb
mov
fsin
ds
fsubr
adc
loope
aas
cli
ret
lret
xchg
icebp
in
enter
xor
leave
ds
loope
test
addb
loop
enter
xchg
out
aam
aaa
fdivp
jmp
int
fcmovnb
loope
aad
in
enter
fists
aad
xor
enter
fcom
cmc
xor
sarb
rol
sub
fimull
in
xchg
loope
in
cli
int3
jmp
adc
loopne
out
les
filds
lret
enter
cmp
int
loopne
bnd
xlat
sbb
xor
cmp
jmp
fistpll
rcl
ret
out
in
fsubp
int3
lret
rorl
stc
cmc
xor
xor
fsubrp
fdivr
cmp
cli
rcl
fcmovu
ljmp
repnz
ret
repnz
iret
aam
std
clc
repnz
loope
test
fsubr
and
in
popl
shl
jecxz
cmp
into
cmp
std
std
cmp
out
aam
xlat
cld
mov
mov
icebp
in
repz
cmc
in
fsubr
cmp
test
clc
ror
flds
ljmp
clc
lret
movzwl
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
mov
jg
roll
jle
repz
cmp
std
jmp
clc
into
aam
into
out
ret
mov
clc
lret
test
loope
out
shl
out
int
clc
cmp
cmp
lock
out
mov
sti
dec
in
mov
call
ss
aad
ljmp
ror
roll
fdivp
out
jecxz
shrl
das
test
lret
in
ljmp
shl
hlt
enter
into
in
sti
lret
xchg
xor
aam
repz
lock
shl
int
neg
aad
enter
mov
decl
into
aaa
cmp
loope
fabs
rol
aad
ljmp
fisttps
leave
cs
aaa
cmp
fstp
cmpb
stc
ffreep
out
rorl
icebp
repz
cli
xor
shrl
call
aad
into
ds
fcmove
in
jmp
nop
mov
aaa
lock
repz
lock
in
leave
ret
in
loope
rclb
ljmp
call
aam
cmp
out
cmpl
fiaddl
out
enter
out
in
aaa
ljmp
jecxz
idivb
cmc
out
in
in
test
jmp
mov
xchg
aaa
rol
cmc
leave
iret
lock
icebp
filds
rcr
xchg
xchg
xchg
rcr
enter
ljmp
aad
cmp
ret
fadd
int3
leave
out
leave
int
lret
out
iret
cmp
in
xlat
shl
fcmovne
sub
idiv
repnz
fstp
in
mul
fcmovnu
movl
int
cmc
fcmovbe
out
xlat
loop
out
test
movl
out
leave
repz
sti
repz
lock
fdivrs
loope
roll
int
out
lret
cmp
fsubr
fdivrs
shr
cmc
cmp
cli
test
in
out
xchg
fsub
loopne
ret
aad
clc
cmp
ljmp
jecxz
xlat
repz
lea
iret
int3
rorb
repnz
fbstp
cmp
test
std
test
mov
in
xchg
sti
ljmp
shlb
in
iret
fstpt
lret
cmp
fiaddl
cmp
mov
out
iret
orl
sarb
clc
int
aad
iret
sar
cmp
loopne
xchg
loopne
iret
in
loopne
xor
in
shlb
rol
filds
cld
clc
in
iret
out
nop
out
jecxz
hlt
out
cmp
aaa
xor
cmp
xlat
lock
test
xchg
jecxz
stc
mov
jmp
loope
in
out
mul
repz
cmp
cli
sub
mov
xchg
aad
loop
in
fcmovne
icebp
lock
shl
rcr
repnz
aad
hlt
mov
mov
mov
and
repnz
vpxor
int3
hlt
rcr
add
mov
lret
loope
iret
popl
jmp
shr
int
testl
out
loopne
mov
mov
jmp
idiv
cmp
in
in
imul
div
xchg
repz
cld
test
in
lret
shl
cmp
in
cld
lret
out
sar
cmp
xlat
ds
loopne
leave
aam
fisttpl
loope
out
call
stc
sarb
fiaddl
repz
in
mov
mov
out
in
cmp
icebp
rolb
clc
out
cld
ljmp
shl
rcr
aaa
shl
lock
cmp
test
repz
loop
out
lock
shll
out
ds
fcmovnb
in
cmp
rolb
leave
fucomi
sti
repnz
sub
clc
icebp
clc
in
std
loope
xlat
aam
xlat
out
loopne
jmp
repnz
ss
clc
ss
cmp
fcmovnbe
ffreep
fcomi
lret
mov
mov
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
cmp
test
call
repnz
ret
imul
sarb
out
leave
jmp
aas
out
cld
std
sti
test
clc
xlat
int
in
cld
lret
int
repz
cmp
int
into
divb
hlt
flds
xor
test
cmp
out
std
sar
iret
repnz
lock
iret
icebp
out
out
ret
shl
sti
fldl
addl
sub
loop
out
ljmp
hlt
in
iret
fdivp
clc
addl
loop
cmc
in
xor
xor
int3
xlat
std
fdivr
add
add
rcr
jecxz
fildl
in
iret
aam
enter
iret
fmulp
cmp
cmp
loopne
sti
sub
fsub
loopne
repnz
aam
int3
lret
in
fcmovu
fcomi
fdivrl
and
iret
test
test
ljmp
int3
repz
cmc
repz
cmp
stc
cmp
std
test
idiv
ds
fdivr
lret
std
fimuls
fucomip
jecxz
ljmp
aam
loop
xlat
rorb
dec
cld
lds
cmc
shr
fdivr
cmp
std
in
loop
xchg
xchg
xchg
jecxz
div
divl
ror
xor
out
adc
icebp
test
xchg
jecxz
test
addl
xor
iret
aad
rcr
lock
fsub
idivb
icebp
aad
xlat
fadd
out
leave
lock
xchg
icebp
sar
not
lret
aaa
rcr
rol
shll
fcmove
stc
sti
idiv
aad
leave
lret
loope
mov
in
loopne
loop
aad
fst
fucomi
stc
cmp
xchg
cmp
lret
add
fcmove
out
cmp
stc
into
repnz
ret
cld
and
jmp
in
leave
ror
cli
into
clc
cmp
int
cmp
fadd
cmp
std
inc
loop
out
xchg
loope
mov
lock
xchg
repz
jmp
xlat
fcmovnu
aam
clc
sti
in
fisttps
shl
shr
xchg
mov
ret
neg
sarb
aad
fcomp
fcomp
jecxz
ds
call
addb
mov
cmp
rcl
ds
cmp
aad
shl
jecxz
cld
test
int3
out
ljmp
cld
xor
aam
fnstsw
fsub
rolb
mov
fmull
loop
aaa
out
fcmovnb
cmp
adc
lret
xchg
lret
and
xchg
icebp
out
xor
shr
out
cmp
cmp
cmpb
cld
stc
sbb
xchg
mov
sub
lret
jmp
ret
sti
cmp
cmp
cmpb
out
faddp
fdiv
repnz
jmp
popl
das
xor
iret
in
out
cmp
loope
out
loope
aam
ret
lret
call
xchg
in
cmp
sar
cli
repz
out
xor
out
sar
rol
loopne
xchg
repz
test
aam
xor
rcl
divl
xlat
rol
cmp
cmp
imul
neg
jecxz
in
orb
aad
fsubr
call
fcmovu
repz
enter
sub
test
rol
loope
das
clc
lock
aad
xlat
aas
repz
xlat
rcr
sar
call
fiaddl
loop
fxch
xor
stc
rol
ror
shr
icebp
stc
ret
iret
icebp
cld
xlat
enter
fildl
mov
xor
jmp
cmp
lock
repnz
out
out
fadd
addb
test
mov
xor
sub
aad
cld
aaa
cmp
cmp
fstp
cli
fstp
filds
notl
in
mov
in
stc
cmp
out
cmp
cmp
test
xchg
imul
fcmove
jmp
cmc
in
repz
sti
ljmp
rcl
rcl
cmc
in
sti
cld
out
fucomip
sti
xchg
rcl
cmc
out
cmp
faddp
int
out
fiadds
cld
xlat
out
jmp
int3
xor
hlt
enter
ljmp
xlat
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
cmp
shl
rcr
loopne
div
in
in
lret
in
rcr
shr
in
iret
cmp
rcr
fidivrl
cmp
ror
xchg
xlat
stc
jmp
ror
iret
std
ljmp
xor
ljmp
loop
test
jmp
fldl
xlat
cmp
cs
fnstcw
loopne
in
clc
sti
rcl
jmp
stc
in
nop
out
shl
aad
clc
hlt
aam
ss
cli
std
int
out
fldl
ljmp
xchg
ret
out
xchg
xchg
mov
aad
ror
jmp
shr
addl
out
ret
vcvtpd2dq
loope
in
lret
repz
out
ljmp
addb
int
iret
and
mov
ror
icebp
shl
xabort
in
sarl
fdiv
loop
loopne
lret
std
xlat
fdivr
orl
into
rcl
rcr
leave
enter
and
aaa
stc
stc
mov
lret
stc
std
jmp
addb
iret
fnstcw
shr
aas
int
cmp
add
xlat
xchg
out
fdivp
shl
xor
rcr
shl
fsin
aam
int
lock
cmc
aam
jecxz
sub
fmulp
lock
shl
stc
ljmp
mul
shl
xlat
cmc
lea
out
lock
hlt
into
call
int3
in
aas
lret
cmp
sti
fnclex
loope
adc
out
das
ret
xor
rcr
aam
out
std
ror
cmc
fcmovnbe
shr
in
sti
jmp
out
int3
ffreep
lret
xor
cld
rcr
loopne
cmp
ret
ret
jmp
fadds
out
into
jecxz
jmp
fmul
flds
cmp
testl
test
ljmp
clc
cmp
cmc
int3
push
flds
cli
fldl
out
in
ret
das
out
cmp
xchg
loopne
in
cmp
xchg
fsub
std
into
int
subl
iret
div
div
xlat
fiaddl
ret
clc
fmull
jecxz
cld
or
aam
fsub
leave
jecxz
aam
lock
int
shl
call
fldpi
xchg
mov
jmp
into
out
int
int
ror
hlt
or
mov
lret
mov
jmp
faddl
xor
xor
cld
into
loopne
out
jecxz,pt
xlat
aas
aad
rol
ljmp
fstp
mov
fmulp
cs
jecxz
jmp
out
testl
rol
in
testl
xor
clc
clc
cmp
repz
in
ds
out
jmp
in
sub
mov
shl
ret
hlt
repnz
in
aam
out
cmp
xlat
std
shl
adc
test
lock
mov
xor
in
repnz
aaa
repnz
sarb
jmp
loop
sub
cld
orb
cld
repz
in
ret
mov
in
hlt
jmp
jmp
mov
nop
xchg
mov
cmp
into
sti
out
fnstenv
ret
rol
adc
ffree
cld
in
std
in
incb
das
xor
out
aam
fsubrp
loope
jecxz
rolb
ret
fnclex
out
int
mov
jecxz
shrl
in
cld
cli
fidivrl
cld
ds
rcl
out
fimull
std
in
repnz
fiadds
cmp
out
enter
int
cmc
xchg
sar
fldl
loop
jecxz
in
ljmp
fstp
jecxz
fcmovne
fidivrl
aam
aam
into
sbb
shr
sub
std
sar
lock
repnz
fildl
ftst
cli
fucomi
call
cmp
int
repz
clc
neg
and
out
aam
in
test
jecxz
xchg
mov
xor
jmp
fdivr
cli
cmp
icebp
rcl
out
loop,pt
mov
leave
out
mov
decl
add
add
mov
fildl
adc
jp
jg
roll
jle
loope
mov
hlt
hlt
xor
xor
ds
cmp
xlat
idiv
fucomi
in
test
shl
aam
aam
fdivrl
lock
xor
call
out
fistpll
leave
fucom
hlt
call
loope
mov
iret
icebp
in
std
xor
loopne
loope
hlt
cmp
in
sti
in
cld
test
lock
cmp
cmp
rcl
in
mov
clc
sub
test
in
mov
jmp
jmp
in
sarl
std
rol
in
ret
sub
nop
fucomi
in
mov
cmc
ror
stc
ret
icebp
cld
clc
repz
cmp
xlat
loopne
std
push
jmp
jmp
cmc
notb
xlat
aaa
fcmovu
cmp
or
xchg
xchg
ffree
cld
fmulp
loope
int3
shr
iret
int
jecxz
in
int
call
cmp
clc
cli
jmp
cmp
lock
int
fsubr
fmul
lret
xor
sti
cmp
int3
loopne
aam
cmp
jmp
faddl
cmp
in
xor
in
xor
xchg
addl
fucomp
fmul
out
xchg
std
iret
ret
fnstenv
sub
clc
das
cmp
jmp
rcl
test
sti
faddp
mov
mov
loop
out
lock
ss
iret
int3
iret
lret
into
clc
sub
out
sti
decl
out
mov
hlt
in
int
xor
fnsetpm(287
repnz
mov
in
mov
addb
xor
int3
in
xlat
test
ror
sarb
aaa
cmc
std
icebp
fsincos
jmp
loope
mov
lock
ss
lock
fnstcw
lock
sbb
aad
int
fcoml
aad
aam
repz
cli
leave
cmpb
fdivrl
out
out
in
loop
mov
xchg
icebp
call
cmp
fnsetpm(287
fsubr
fdivr
cmp
test
incb
cmc
enter
out
leave
test
cmp
loop
ljmp
nop
loopne
xchg
rolb
rcl
test
ljmp
xchg
cmp
fisttps
sub
leave
fmulp
fdiv
lret
cld
mov
test
cli
testl
in
xor
out
cmc
not
lret
fcmovnbe
iret
std
ret
roll
repnz
fmulp
aas
xlat
rcl
fcmove
aad
ror
cmp
jecxz
ds
shr
xchg
or
xchg
int3
incb
fsubr
enter
int
xlat
into
aam
stc
xlat
mov
xlat
loopne
mov
mov
xchg
rol
enter
repz
hlt
loope
cmp
xchg
call
fucom
in
into
xor
loopne
mov
int3
jmp
clc
loope
cmc
jmp
loope,pt
cmp
fst
loopne
out
test
rclb
xlat
fcmove
fnstenv
f2xm1
int
iret
int3
icebp
push
ftst
test
fcmovnu
mov
cld
xchg
popl
hlt
xor
ljmp
aas
ret
call
xlat
fcmovnb
incl
call
lret
aad
sar
aas
mul
call
out
jecxz
out
xchg
int3
out
ret
fnstsw
aaa
cmc
into
cmp
enter
in
fiadds
popl
aam
aad
cmp
rolb
in
ret
clc
fadd
xchg
mov
in
in
aam
hlt
fdivrs
int3
aad
ds
sar
int
shl
xlat
cmp
ret
xchg
jecxz
cmp
xchg
int
shr
test
repnz
xlat
cli
cmp
cmc
cli
cmp
sar
cli
stc
fmul
xlat
movl
leave
lds
cmp
fdivr
cli
std
mov
and
into
mov
jmp
rorl
xor
cmp
rol
ds
shl
stc
adc
aam
rcl
addl
aam
int
out
int3
fmul
loopne
decl
xlat
decl
call
add
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
out
enter
test
addl
cmc
ss
xor
fdivrl
call
clc
xlat
repnz
cmp
cld
aas
xchg
test
xchg
shlb
int
enter
faddl
fadd
leave
in
jmp
mov
cmp
lret
xor
out
out
out
lret
repz
roll
leave
jecxz
popl
aad
enter
icebp
lret
lret
int3
aad
fucom
sub
sub
jmp
mov
addl
out
ror
call
in
fildl
sti
xchg
jecxz
repz
filds
in
cmp
sti
sarl
sti
hlt
in
aam
ret
lret
orb
out
mov
fidivl
fcom
hlt
in
int3
loopne
aad
and
mov
in
ror
int3
loop
leave
cli
aad
in
jmp
fprem
cmc
cli
addb
out
leave
enter
enter
aad
lret
fnsave
sar
push
into
ffreep
xlat
aas
ret
addl
div
das
hlt
xor
vpmaxsw
fcmovb
aad
repz
in
rcr
out
jmp
lock
or
repz
jmp
cmp
not
sti
in
fldl
lret
jmp
nop
out
xor
out
shl
imul
ret
cmp
mov
fucomi
shl
repnz
loope
enter
stc
cmp
sbb
call
aam
leave
call
cld
loop
xchg
out
shr
ljmp
cmp
hlt
cmp
cmc
shl
std
cmp
fimull
in
repnz
in
loop
test
icebp
cmc
aam
fmul
aas
loop
in
out
sti
out
test
in
in
f2xm1
or
in
testb
shl
dec
in
fcomi
cli
frndint
cmp
jecxz
rorb
aad
hlt
lock
in
clc
fcmovu
sbb
cmp
loope
test
loope
fstp
addb
decb
fcmovne
ss
sar
lret
in
repz
stc
ret
ret
xlat
jmp
loope
out
shl
lret
in
rcr
loopne
ret
aam
enter
lret
sub
clc
xor
cmp
call
faddp
aad
rolb
mov
xchg
xchg
xchg
in
loop
sarl
cmp
xor
xor
test
xlat
test
in
loopne
frstpm(287
cli
stc
repnz
ret
int
leave
xor
cmp
loope
in
int
fldl
out
out
lret
out
mov
ljmp
lret
in
cmp
cmp
aad
cmc
lret
mov
int3
cli
test
mov
out
cs
ljmp
repz
cmp
lret
out
leave
sub
fcmove
lock
in
shr
std
enter
lock
loope
std
xchg
out
ljmp
jecxz
clc
xor
fldz
fmul
repnz
test
mov
test
lret
fsubp
xlat
shl
aad
idiv
fcmovnu
loop
cld
shl
addl
xchg
xlat
aad
xor
ds
ror
in
or
sti
mov
mov
cld
into
test
mov
xor
jmp
rcl
cmp
aam
repz
rcl
ret
call
fimuls
hlt
ljmp
clc
xor
fsubr
sti
ror
icebp
imul
shl
stc
test
mov
jmp
lock
out
int
cli
repnz
rcr
sti
test
not
movl
testb
jmp
jmp
into
mov
loop
in
lock
jmp
into
sub
hlt
lret
aaa
aad
shl
cmp
sar
sti
loop
stc
mov
fcmovne
in
in
fmul
xor
jmp
jmp
sarb
adc
cmc
cli
mov
xlat
loopne
test
fstl
ret
fstpt
sti
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
xor
clc
out
fcmovnbe
cld
out
fcmovbe
rcr
idiv
mov
adc
ret
orb
out
lret
xor
aam
iret
cmp
xlat
fcmovnu
sar
fadd
stc
int
jecxz
cmp
in
shrb
xor
lret
aaa
in
cmp
stc
cmc
leave
cmc
lret
loop
and
and
out
neg
out
cmp
aad
fcmove
idiv
aam
vaddsubpd
std
enter
mov
int
in
cld
xchg
int
jmp
out
cld
xor
loop
iret
out
and
cmp
mov
in
loopne
xor
cmp
aaa
rcr
cmp
sar
out
mov
jmp
leave
iret
icebp
xchg
xchg
xchg
int
aaa
into
not
out
fdivr
leave
int3
rcl
xchg
fstpt
lret
fcmovb
out
lock
loope
in
fcomp
int3
xor
cld
mul
ret
stc
rcr
not
xchg
into
out
filds
loopne
das
sti
out
jmp
into
aam
lock
fdivr
ret
repnz
jmp
lret
xchg
into
mov
xlat
xor
aaa
xlat
or
f2xm1
rcr
test
lret
loope
enter
rcl
lret
rcl
ljmp
fistpll
idiv
cmp
hlt
leave
clc
cli
in
out
ljmp
icebp
test
enter
jmp
xor
jecxz
aam
ret
cld
fsubp
int3
mov
int3
hlt
int3
shll
xor
cmp
cli
aad
cli
fcomi
and
repnz
out
rorb
repz
out
std
int3
clc
cld
ret
std
aad
cmp
xchg
out
xchg
xchg
ljmp
xor
clc
xor
clc
repnz
inc
lds
rcll
shlb
int3
fidivrl
imul
lret
fstp
int3
addl
int
xchg
aad
loop
rcr
in
call
iret
xlat
into
loop
out
ljmp
xchg
fists
fsubr
lock
ret
icebp
adc
mov
out
loopne
test
rolb
jmp
fcmovne
loope
test
fidivrl
jecxz
test
fmul
mov
repnz
loope
stc
cmc
jecxz
cmp
enter
lock
enter
ljmp
jmp
loopne
int
out
fcompp
fucomp
in
cli
loop
out
fdiv
loopne
inc
ret
faddl
out
rolb
shr
into
fmul
leave
ret
out
cld
loop
fcmovnu
aam
mov
clc
out
incl
sub
jmp
ljmp
test
out
loopne
fcomi
out
leave
out
call
inc
fld
jecxz
aaa
fcomp
fucomi
fadds
clc
stc
in
fcmovbe
xlat
testb
rol
into
xor
lock
xlat
repnz
out
clc
out
ljmp
mov
lea
out
cmp
xor
cmp
cli
into
test
repz
idiv
enter
std
in
lret
out
out
int3
jmp
icebp
clc
icebp
hlt
cmp
loop
xchg
int3
mov
sub
lret
shl
xor
ds
icebp
sti
loop
fcomi
std
call
icebp
xchg
loope
icebp
les
lret
out
int
cld
cld
fstp
xor
std
aad
in
call
jecxz
enter
xchg
rclb
cmp
cmp
in
stc
roll
ret
aam
fsub
fsincos
in
out
sbb
in
repz
aad
fxch
in
cmp
cmp
lret
fsubrp
test
in
icebp
in
enter
aad
cmc
sti
in
cmp
hlt
jmp
jmp
xor
iret
icebp
sub
into
clc
call
hlt
iret
iret
and
lock
fdivr
div
lds
sar
into
fbstp
cmc
fidivrl
cmp
shl
int
fcmovbe
int
icebp
ffreep
shl
mov
lret
in
out
lret
icebp
out
fcom
ss
repz
aad
fucomip
test
xchg
mov
pop
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
pop
jae
jg
roll
jle
decb
mov
int
fyl2x
not
cmp
testb
repz
std
fsub
call
fmulp
mov
xor
leave
sarb
enter
int
adc
fdivrl
test
xchg
call
cmc
leave
out
cmp
enter
xor
out
out
mov
fsub
rcr
out
into
aam
call
out
iret
cli
ret
loope
in
xlat
cld
loop
into
in
ljmp
int
enter
cmp
ds
cmpb
cli
out
fchs
mov
nop
shr
in
ljmp
ss
icebp
cmp
shl
rol
ret
out
sbb
add
rcl
aaa
aaa
in
in
std
in
xor
ljmp
mov
leave
xchg
lret
xchg
mov
lret
xlat
fsubr
iret
fmul
xlat
cmp
fdivr
aad
rolb
in
fsub
jecxz
jecxz
repz
cmp
int
clc
std
clc
cmp
out
rcr
ret
lds
in
mov
xor
dec
std
ds
rolb
cli
stc
loope
fadds
mov
out
enter
jmp
clc
icebp
cmp
loope
shl
std
out
or
nop
xchg
jmp
loope
loope
into
ret
stc
xor
hlt
cmpb
sti
rcr
jmp
lea
cli
into
ror
aaa
xor
leave
int3
int3
clc
call
fiaddl
inc
cld
int
sti
mov
roll
ljmp
rcl
icebp
cli
loope
cld
cmc
fildl
mov
loope
cs
in
xor
ljmp
ret
sti
loop
mov
int3
in
in
ror
xchg
faddp
aam
sub
rcl
fdivr
cmp
rcr
into
loopne
repnz
mov
ror
xchg
xlat
hlt
lock
int3
repz
div
loopne
call
loopne
enter
xchg
sub
rcl
sar
aad
out
jmp
cli
rcl
out
ror
xlat
fists
mov
sar
fsubrp
std
cmp
in
rol
cli
call
jecxz
xchg
xchg
nop
aad
cmp
idiv
cmp
clc
aad
shr
cld
std
ret
mov
call
into
mov
xlat
hlt
aaa
into
out
xor
fcomp
repnz
into
ret
sar
sar
lret
out
ljmp
in
cmp
hlt
fadd
repz
rcr
xchg
lds
sti
jmp
jmp
ss
ljmp
xor
sti
out
fsub
sub
int3
lret
in
int
loopne
repnz
aad
loope
shl
addb
cli
repnz
xchg
mov
call
xor
call
ljmp
sti
aad
xlat
int
decl
nop
hlt
shl
out
out
in
fidivrs
cmc
stc
cmp
cmp
orl
repnz
int
fdivs
sub
fldz
cmp
in
cmp
in
repnz
test
xchg
lock
xchg
nop
fst
loop
das
repnz
cmp
out
repnz
in
cmp
fcomi
fcmove
ljmp
in
call
int3
leave
int3
lock
sbb
into
lock
cmp
test
cmp
out
fisttps
loop
hlt
enter
div
idiv
repz
icebp
in
and
fstp
fsubr
clc
out
in
adcl
in
idiv
fstp
cmc
loope
aas
in
sbb
in
in
loop
mov
out
jmp
rcl
jmp
out
in
faddl
enter
jmp
mov
icebp
out
loopne
jecxz
fcmovnu
leave
lret
aam
in
loopne
aad
neg
std
call
fcmovnb
rclb
out
lret
jecxz
fcmovbe
jmp
sub
ret
addl
int
iret
hlt
int3
cmp
cmp
cmp
je
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
ss
addr16
push
add
fcomi
cli
clc
incb
cmc
add
in
test
sub
lret
lock
cld
cmp
not
iret
aaa
jecxz
repz
aam
test
lret
jecxz
mov
std
jecxz
in
ret
icebp
shl
fdivl
hlt
repz
ror
fdivr
loop
fxch
sti
sti
shl
adc
xor
cmp
aad
call
out
xlat
in
sar
std
fcomip
ljmp
in
jmp
fcmove
cmp
fsubr
loop
cmp
sarl
stc
shl
loope
fsts
iret
aad
lret
xor
fcmovb
ffree
cmp
repnz
loop
sarb
xlat
xlat
ret
cmc
loope
mov
test
jmp
rcl
rcl
jmp
hlt
fsubr
fsubp
loop
fiaddl
jecxz
ror
out
aad
ss
aam
cld
shl
xor
lret
cmp
loope
fcmovnbe
call
sti
test
lret
xor
out
xlat
out
int3
xor
xlat
repnz
aam
cld
mov
into
in
and
inc
xlat
f2xm1
repnz
jmp
aam
sti
repnz
cmc
call
loop
orb
in
xor
in
in
out
aaa
ds
icebp
cmp
into
sti
incl
mov
lock
repz
hlt
loopne
repz
cmp
loopne
rol
cmp
sbb
stc
test
xchg
test
stc
in
call
enter
into
jmp
xor
icebp
clc
ljmp
int3
nop
rcr
loopne
out
aad
aad
cmp
leave
cmp
int3
fnstsw
lock
lret
decl
xchg
rorl
lret
stc
fstp
fdivp
testl
mov
or
xchg
xchg
out
lock
jmp
jmp
into
call
vpsubsw
loope
in
fsubp
test
call
shll
idiv
cld
fcomip
aam
lret
int
sti
sar
mov
ds
lock
mov
mov
fdiv
aam
aam
cli
loope
repz
ror
fcomip
stc
jecxz
orl
shr
cli
shl
cmp
out
loopne
aad
fcmovne
test
loop
iret
clc
jmp
imul
std
lret
loop
stc
call
ftst
add
stc
or
xchg
test
iret
ret
das
iret
int3
in
dec
std
fldl2t
int3
cmp
jmp
test
test
iret
jmp
jmp
pop
aaa
aam
out
aam
fdivrl
rol
icebp
cmp
mul
stc
aad
fiadds
aam
jecxz
das
hlt
cmp
lret
stc
iret
icebp
in
mov
cli
xchg
in
xchg
mov
xor
fcmovnu
fdivr
out
loopne
cmc
aas
ds
loopne
cmc
and
mov
cs
shlb
fcomi
icebp
jmp
repz
rcl
loopne
int3
test
ret
out
out
in
ret
xlat
cmc
jmp
sar
adc
sti
out
mov
fcomp
mov
fdivrp
jmp
and
divb
ljmp
lock
loopne
cli
fsub
out
cmc
xchg
int3
rcr
jmp
xor
cld
out
iret
icebp
fneni(8087
fcmovbe
std
loop
test
jmp
lret
ljmp
xor
cld
fdivs
ds
cmc
cli
ret
xor
cmp
test
in
cmc
aad
ret
test
int
stc
sbb
cmc
fxtract
xlat
cmc
call
out
lret
into
rcr
test
lock
aad
cmc
shl
ds
in
ret
fisttpl
shl
cmp
xor
fdivr
into
test
icebp
out
xlat
clc
iret
xchg
fcmovnu
lret
out
out
lret
jecxz
xor
xor
ss
or
add
aad
aas
test
mov
mov
nop
and
enter
cmp
lock
shl
idivb
loop
hlt
enter
int
into
fst
jmp
lret
out
lock
cmp
repz
test
shl
lret
test
test
aad
xor
out
hlt
out
cmp
rcr
cmp
call
add
xor
fdivs
cmc
lock
into
fsubp
xlat
fsub
out
fucom
enter
xchg
icebp
aam
in
aam
ror
iret
jmp
cld
lock
rcl
rolb
call
lock
icebp
out
in
sub
in
ljmp
test
testl
rorb
add
inc
add
add
add
add
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
insb
jg
push
add
loopne
into
xlat
aad
aam
clc
xor
fdivr
rolb
push
leave
test
jmp
icebp
incl
rol
rcl
jmp
div
jmp
cmc
shl
cmc
cld
shl
hlt
xlat
testl
xor
in
int3
ss
sar
stc
stc
iret
fbstp
out
adc
fldl
jmp
jecxz
call
hlt
cmp
enter
jecxz
lock
out
jecxz
xchg
test
ljmp
repz
repnz
aas
ret
ret
jmp
mov
out
or
xor
in
out
cmp
lret
lock
jecxz
hlt
stc
in
dec
cld
int3
in
loopne
aam
cmc
stc
out
jmp
cld
ret
lock
into
in
int3
loop
in
lock
out
cli
ds
std
iret
repz
loope
aam
xchg
std
icebp
sub
mov
aad
iret
fstpt
fadds
out
loopne
loope
ffreep
out
ljmp
mov
hlt
xor
out
ror
leave
fstpt
in
jecxz
idiv
jmp
int3
out
test
mov
out
shlb
int
out
fstp
cmc
fldl2t
shr
std
cmp
add
neg
out
or
xchg
out
fists
in
leave
cmp
sar
addl
ljmp
iret
rcl
dec
loop
enter
icebp
into
cmc
xor
ds
lock
repz
xchg
repz
in
ljmp
leave
sar
clc
into
sti
lock
in
std
ljmp
int3
cmpb
aaa
out
cmp
into
fcmovu
iret
cmp
aad
repz
loope
fdivrp
in
int
fucomip
xchg
rcl
xlat
lret
sub
int3
fcom
addb
mov
mov
out
out
lret
jmp
aam
dec
adc
fucom
sti
fcmovu
xlat
int3
fimull
aad
aad
enter
lret
ljmp
mov
xchg
jecxz
cmp
lret
jmp
clc
jmp
icebp
clc
ljmp
xlat
xor
test
stc
leave
xchg
in
lret
jecxz
leave
xor
aad
icebp
idiv
jecxz
lock
cld
out
lret
mov
cld
xchg
iret
lock
lock
repz
repnz
mov
fimull
out
into
in
rol
int3
in
in
rcl
bnd
enter
addl
ror
shl
ljmp
repz
std
ret
aad
out
ret
int
xchg
fistl
lret
sub
cmp
imul
cmc
std
lret
std
lock
loop
xchg
mov
loope
rclb
jmp
std
hlt
rcr
repz
loop
aas
icebp
fmull
mov
xchg
dec
in
in
xor
lret
out
call
fstpt
loope
clc
in
test
fprem
cli
xchg
xlat
ljmp
lret
cmpb
hlt
cmp
rol
cld
addb
out
mov
int
jmp
fdivrl
repz
cmp
loop
out
aad
mov
cmp
std
loop
loop
imul
xor
repnz
loope
fstp
ds
hlt
and
lret
leave
lea
aas
cs
hlt
cmp
cld
int3
divl
loope
iret
cmp
std
loope
lret
stc
and
mov
fmul
loop
in
shl
out
fcomi
fdiv
cmp
lock
cld
decb
icebp
roll
ss
sub
shl
cli
aas
aam
test
repnz
int
lock
icebp
ljmp
loop
roll
lret
leave
mov
int3
in
test
xchg
enter
cli
in
int3
rol
xlat
aam
bnd
enter
cli
jmp
ljmp
fdivs
cmp
cmp
aam
faddl
jecxz
sub
loopne
cmp
nop
aad
loope
aad
cmp
icebp
sar
rcr
hlt
ds
out
stc
loope
xchg
cld
call
xchg
into
hlt
cli
in
cmp
lret
clc
iret
adc
frndint
mov
sub
mov
lret
shrl
leave
cmp
repz
shl
fildl
xlat
iret
loop
xchg
call
lret
hlt
xor
adc
jmp
sbb
xor
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
jb
jg
push
add
lret
out
sub
cmc
in
out
hlt
sub
loopne
in
cmp
out
xlat
aas
loop
fld1
fadd
loopne
iret
or
int3
repnz
out
out
cs
cmp
into
fucomi
cld
testl
std
jmp
nop
mov
out
mov
lret
out
xor
icebp
lret
out
iret
and
in
icebp
repz
repz
neg
test
lock
repz
call
cmp
ds
incl
adc
sti
mov
rcll
shl
idiv
fcmovnu
ds
loop
repz
fsubr
leave
fsts
ret
lret
into
cli
fcom
neg
std
sbb
stc
adc
enter
int3
out
int3
in
das
in
frndint
fidivrs
cmp
mov
cli
lds
leave
and
subl
in
repz
shrl
cmp
idiv
stc
std
loope
in
loop
aam
or
mov
out
xchg
repnz
fdiv
cmc
out
idiv
cmp
ds
neg
not
out
ljmp
in
call
xor
leave
out
loop
repnz
sar
leave
loopne
jmp
addl
test
test
in
cld
repnz
shl
cmc
fnstcw
out
xchg
in
in
out
aad
cmc
iret
stc
out
not
xlat
call
jecxz
sbb
shl
call
test
in
ret
out
cmc
stc
int3
lock
out
ror
cli
stc
faddl
in
jecxz
jecxz
mov
icebp
cmp
std
jecxz
aam
sar
test
cld
cmc
leave
cli
test
adcb
xor
test
idiv
shl
hlt
out
test
testb
sbb
shl
test
divb
jmp
aas
out
cli
xchg
test
repnz
loope
adc
xchg
into
aaa
jecxz
out
aaa
out
repnz
shl
aam
aas
jecxz
cld
cld
fcmovu
out
mov
test
shl
sarl
hlt
lret
cld
int
rcl
cli
hlt
test
jecxz
in
xor
cmp
ret
out
cld
mov
cmp
sub
call
incb
repz
cli
call
sti
in
shl
call
fcomp
rorl
aad
xlat
jmp
int3
int
int3
shl
cli
shr
ljmp
xchg
fists
aad
fdivl
hlt
cli
aam
lret
cmc
test
loop
test
out
aas
out
enter
cmc
loopne
jmp
in
cmp
xlat
cli
cmp
std
fdiv
repnz
mov
loop
int
incb
cmp
stc
stc
call
out
not
testb
test
call
lret
iret
lret
shl
ret
out
rol
repz
in
xor
jmp
out
loope
repz
sub
aaa
loopne
stc
div
fdivp
aad
cld
in
stc
sti
mov
lea
test
fcmovu
cmp
testl
mov
out
out
ss
fdivl
jmp
jecxz,pt
aad
hlt
adc
mov
cli
cmp
xchg
xchg
div
leave
iret
sar
int
aas
not
int
clc
sarl
loopne
call
jmp
jecxz
lret
call
int3
icebp
cmp
out
fdivp
loopne
stc
repz
rol
inc
test
out
fiaddl
hlt
xor
hlt
cmc
sti
hlt
leave
aas
shl
cmp
repnz
jmp
xlat
ret
shl
out
ljmp
fucomip
rcl
roll
loop
neg
and
std
out
xchg
or
lds
stc
repnz
cmp
stc
aad
aad
xor
add
out
mov
mov
fnstcw
xor
cmp
in
loopne
rcl
repnz
in
stc
mov
out
rcr
fdecstp
int3
xor
shlb
shl
leave
decb
in
xchg
jecxz
ret
cmc
enter
out
cld
shr
rcr
ds
aas
and
in
xchg
hlt
loope
int
fxch
clc
xlat
stc
in
into
cmp
roll
clc
lret
icebp
in
mov
out
xor
loopne
sar
repnz
mov
out
filds
out
shl
das
xor
out
in
out
lock
int3
arpl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
incl
mov
loop
clc
fcmove
jecxz
mov
mov
idiv
fdivr
std
cli
jmp
repz
fdiv
cmp
repnz
test
in
std
jecxz
int3
mov
lret
aam
jmp
sar
fnstcw
fsub
add
xchg
lret
lret
iret
adcb
leave
shl
shr
aas
fadds
std
aas
out
lret
loopne
addb
repz
int
jmp
iret
fdiv
faddp
fcmovnu
stc
ret
jecxz
jmp
lock
imull
cmp
call
stc
ds
xchg
rcr
div
into
fdiv
int
jmp
out
in
lock
aad
in
clc
mul
fldl
fxch
nop
lret
int3
xchg
xor
repnz
leave
enter
sarb
xlat
aam
rcl
rcr
mov
lret
orl
lock
cmp
loopne
cli
xchg
aad
xlat
int3
xchg
out
int3
mov
imul
in
xor
cmp
int3
aam
fsubrp
loop
test
jmp
mov
test
cld
aaa
cli
enter
fcom
cli
rol
fucom
fsub
out
fimull
cs
out
jmp
stc
fcomp
aas
ds
fdiv
xchg
std
in
enter
loope
xor
cli
fdivrs
stc
aad
cmp
adc
not
jecxz
int3
in
xchg
nop
vpslld
loope
stc
xlat
lret
aam
ffreep
fcmove
aas
in
cmp
mov
xlat
in
cli
in
mov
out
leave
int3
call
lret
aaa
int
fpatan
shl
cld
jmp
icebp
dec
out
adc
in
lds
ss
icebp
clc
lret
cmp
div
stc
stc
in
ret
test
lds
fucom
shl
hlt
ljmp
repnz
fldz
loope
ds
xchg
out
out
mov
in
jmp
rcl
call
add
in
or
mov
xchg
call
fdivr
ds
repnz
aas
neg
frndint
loop
ret
jmp
xchg
int
iret
jecxz
icebp
loope
xor
leave
repnz
std
loope
aas
stc
jecxz
rolb
orb
mov
call
in
cmpl
fdivp
sti
incl
xchg
mov
hlt
fmul
xor
stc
clc
iret
fnstsw
aas
ret
rol
ds
mov
out
out
into
xchg
roll
xor
lock
shl
fdivr
stc
stc
addl
xlat
xchg
loopne
test
test
loopne
jmp
cld
les
aam
jmp
hlt
aad
rol
fnstsw
sbb
out
loope
jmp
leave
out
aam
into
aad
shl
cmc
sti
ffree
out
orb
xchg
ljmp
repz
shl
xor
fistpll
fmul
in
faddp
faddp
sar
mov
incb
int
jecxz
in
rcl
jmp
std
in
shl
fstp
shl
repz
jmp
fsubrp
int3
jmp
loopne
fnstcw
cli
in
lret
mul
sub
loop
test
fmuls
xchg
jmp
aad
loope
loope
cmp
loop
ret
in
in
ret
jmp
and
ret
jecxz
xor
sbb
iret
fsub
aad
xor
std
fsub
out
nop
fbstp
clc
fidivl
fcom
cmp
hlt
sar
stc
aam
enter
mov
in
jmp
cld
test
neg
cmp
idiv
cmp
and
sti
jecxz
enter
ffreep
fdiv
int3
orb
shrl
not
aaa
rolb
fcomp
jmp
lret
ljmp
lret
repnz
div
in
ds
xchg
in
rcr
jecxz
in
fildl
xchg
sub
sti
icebp
sti
icebp
out
fsub
mov
loope
cli
out
lock
leave
enter
fucomi
iret
cld
in
in
fidivrl
test
ret
test
in
in
iret
jmp
xor
sarl
fcmovnu
fsub
aad
stc
movl
out
test
into
in
out
int3
std
shl
cmp
add
ffree
ljmp
out
repz
leave
das
iret
ss
int
icebp
lock
out
cli
cmpb
cli
out
cld
or
sti
std
movl
sbbl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
or
push
add
cmc
ss
cmc
divl
cli
aas
clc
fdivr
sub
cli
cld
rcl
add
clc
fcmovu
clc
jmp
icebp
addb
aam
int3
out
call
fsubr
std
xor
in
lret
int3
out
fmul
in
std
xchg
int
xor
cli
cmp
cmp
test
out
lds
mov
xor
ret
in
std
repz
test
lret
neg
clc
fcmovnu
nop
mov
in
hlt
sti
sti
in
aaa
xor
out
ffree
ffreep
leave
ret
idiv
decb
xor
in
cmp
lret
into
cmp
cmp
jecxz
cmc
out
std
test
out
rcl
clc
lret
xlat
out
loope
cmp
fdivr
fcomi
call
jmp
int3
sbb
ror
cmp
cmp
lock
cld
loop
xor
jecxz
xchg
int3
adcl
jmp
cmp
call
fucomp
out
in
fdivrp
cld
loope
fcmovne
lock
call
cmp
rcl
int
loop
sub
xor
xchg
sti
std
loopne
jmp
in
leave
cmp
enter
cmp
int3
roll
ret
test
add
xor
iret
out
cmp
not
icebp
into
sar
sti
fucomip
mov
int
cmp
xchg
nop
aaa
out
aam
into
jmp
cld
icebp
rcl
xlat
rcr
in
fcmovnb
jmp
ljmp
rorl
ss
neg
int3
xlat
cld
out
icebp
cmp
stc
aad
mov
sbb
in
out
aad
call
xor
shr
xlat
out
out
cmp
ljmp
call
xor
das
loop
in
cmp
cmp
sub
mov
test
vpavgw
int
ror
mov
xlat
rcr
cmp
and
out
loope
icebp
mov
xchg
int3
jmp
in
imul
in
in
cmc
fcmovbe
sar
sti
fucomp
aam
incb
mov
mov
aam
cld
out
into
in
adc
ds
hlt
jmp
into
xchg
xchg
test
dec
call
aaa
xor
div
cmc
hlt
fcmovbe
aas
fadds
lret
mov
cmc
in
ss
out
sub
cmp
in
repz
in
ror
shlb
cli
lret
ds
idiv
icebp
jecxz
cli
aam
xlat
cld
leave
xchg
mov
fsubp
repnz
cmp
aad
cli
aaa
aam
cld
sarl
enter
fcmovu
xchg
std
int
nop
out
jecxz
jecxz
cld
sarl
roll
rol
out
xchg
cli
out
std
loope
mov
aaa
shll
in
iret
xor
enter
cli
aaa
rolb
call
xchg
iret
xchg
ret
xor
iret
stc
enter
cld
in
ret
cmc
mov
testl
test
int
stc
rcl
idiv
filds
lret
stc
fisttps
int3
jecxz
ljmp
jmp
cmc
xlat
lock
hlt
leave
lret
xchg
xchg
int3
cmc
int
lds
sar
repz
in
leave
roll
loop
not
fdivr
jmp
in
int
hlt
int3
xor
xor
cld
xlat
in
icebp
test
out
cli
mov
adcb
rcl
xor
iret
repnz
sarl
loopne
aas
in
test
sti
out
cmp
into
mov
shl
in
icebp
shrb
aam
in
cmp
sub
fcmovnb
fld
cmc
mov
fcmove
test
shl
xchg
cmc
xlat
stc
stc
cmp
cmp
idivl
cmc
in
faddl
iret
sub
lret
loop
aaa
cmc
iret
into
call
cmp
cmp
frstpm(287
mov
incl
out
into
hlt
sub
divl
clc
stc
cmp
enter
cmp
cmp
testb
icebp
leave
out
lock
loop
sub
out
iret
fdivr
fldz
clc
fldln2
loop
sar
loope
rorl
repnz
repnz
sti
icebp
aad
rcr
repnz
mov
mov
hlt
addl
repz
out
cmp
cmp
xlat
fdivr
fldl
xchg
xchg
xchg
xor
fdiv
icebp
fcmovnb
cmp
cmp
clc
into
push
std
loopne
loopne
mov
add
add
lret
push
add
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
push
push
adc
push
add
mov
lret
mov
jmp
out
cmc
repz
cmp
shr
out
mul
iret
cli
fcomi
in
in
into
fndisi(8087
in
xchg
jmp
xor
in
hlt
cmp
xor
fcmovnb
shl
mov
stc
cli
filds
shl
in
iret
lret
int3
repz
lock
sbb
test
idiv
lret
test
enter
jmp
std
jmp
aam
jmp
lret
int
ret
aas
fistpll
std
shl
iret
in
loop
xor
loop
sub
shlb
cmp
fnstsw
fldl
out
ret
loopne
lock
neg
in
ljmp
cmp
cmp
adc
in
ret
out
mov
mov
ret
out
enter
loopne
add
fsincos
aam
repnz
mov
call
leave
fidivrl
ret
cld
out
ds
in
loopne
aad
test
aas
out
lock
aam
call
std
xor
cli
stc
iret
fsubp
lret
mov
jecxz
int3
ror
xor
cmp
call
test
test
cmp
mov
dec
and
in
xor
jecxz
iret
cmp
xor
sub
add
xlat
leave
aad
iret
mov
lock
out
enter
idivb
shl
cmp
jmp
fildl
vpor
lret
out
jmp
ljmp
cmp
mov
loope
imul
xchg
jmp
ret
aam
jmp
fcomi
fneni(8087
fcmovnb
shl
jmp
orl
call
ror
lret
lret
fprem
hlt
ftst
rol
shl
faddl
and
out
bnd
loop
std
clc
aas
cld
lret
loop
call
icebp
ror
aad
jmp
cmp
ret
sar
repz
ret
decl
cld
jmp
ss
repnz
cld
out
xlat
loope
fidivrl
push
rcr
call
int
int
aam
rol
cmp
xor
stc
aam
out
neg
loop
fsqrt
mov
cmc
ret
enter
xchg
mov
hlt
jmp
jmp
cmp
iret
loop
inc
fsubr
jecxz
jmp
mov
in
in
hlt
in
cmp
loope
cld
fpatan
add
ret
aas
enter
in
std
xchg
repnz
das
enter
cmp
fcmovbe
addb
repz
mov
mov
loope
xchg
repnz
shl
int
fadd
shl
loop
les
mov
xchg
ret
int3
neg
mov
xlat
cmc
cld
les
in
mov
mov
cmp
in
ss
aas
fstpt
cmc
aaa
out
fldl
in
cli
out
orl
ret
int
fnsave
cmpb
jecxz
out
loope
icebp
mov
xchg
in
in
fcomi
call
in
fsubr
loop
ds
std
out
aad
iret
lock
jmp
rcl
fnstenv
cs
in
into
jmp
loopne
cmp
filds
cld
mov
lea
xchg
mov
shl
xor
xor
icebp
aam
add
cmc
loop
in
sti
jmp
into
fiaddl
shl
aad
fldcw
out
int3
loopne
xor
ret
aas
imul
leave
mov
shl
mov
lret
rcr
out
repnz
int
ret
lock
test
fcmovu
ljmp
in
jmp
fsubr
fsubp
ret
ror
out
adc
rol
out
in
mov
loop
loopne
repz
into
stc
fcomi
jmp
icebp
cmp
in
cmc
mov
add
lret
int3
popl
ret
in
jmp
cmp
ds
shl
add
cli
aam
and
nop
cld
shl
lock
xchg
mul
aaa
in
xor
fucomi
cmp
cmp
sbb
cmp
fneni(8087
xchg
orb
lock
repnz
jecxz
sti
in
aad
shl
cld
hlt
ds
cld
xchg
adc
icebp
xchg
cmp
cmp
clc
int
addl
mov
shl
xor
in
fsubr
repz
iret
hlt
cmp
in
std
hlt
loopne
leave
test
ror
loop
in
rcl
out
not
ss
fsubr
fdivrs
mov
jmp
cmp
jmp
aad
aad
aad
aad
push
push
scas
jno
arpl
add
jle
add
cmp
sub
jecxz
mov
fsubp
loopne
into
in
xor
lret
call
cmp
cmp
in
cld
lret
in
loope
les
shl
leave
jmp
cmp
repz
icebp
add
in
fxch
int3
mov
fcmovne
fimull
leave
jmp
cmc
lret
loopne
out
cmp
in
fucom
sar
cld
lea
shl
lock
shl
neg
cmp
out
fmulp
rcl
xchg
fst
mov
ljmp
xchg
iret
lret
aad
repz
sarl
shl
roll
add
lret
aam
ss
lret
out
stc
enter
jmp
push
and
cli
cli
ret
sti
out
lret
cld
mov
test
clc
lret
in
lock
cmp
fstp
cmp
cmc
testl
sub
idivl
clc
leave
std
into
aad
cmp
xor
out
fucomip
aad
fldl2t
fsubr
mov
das
xor
int3
out
xor
sbb
in
fucom
fcmovu
mov
repnz
in
divl
in
icebp
xor
cld
hlt
clc
fiadds
ljmp
out
in
lret
in
out
sub
out
fcmove
ss
aad
int3
rcr
shl
add
loope
fmuls
jmp
in
repz
ffree
jecxz
xlat
enter
in
mov
leave
in
loope
jecxz
rcl
call
leave
test
fsub
repz
mov
in
fmull
cmp
sti
hlt
enter
div
idiv
aam
test
cmc
inc
stc
loopne
in
lret
icebp
aaa
out
cli
out
into
jmp
iret
xor
out
fincstp
fcmovb
repz
call
out
mov
icebp
leave
ljmp
cmp
lock
loopne
leave
lea
test
ret
shr
xor
aam
aas
in
jecxz
xchg
shl
fisttps
in
call
xlat
enter
ljmp
xchg
fdiv
clc
test
ljmp
icebp
out
xchg
loopne
out
in
in
lds
stc
repnz
sarl
shl
mov
cmc
sub
repnz
jmp
ret
lret
cmp
xor
lret
in
in
call
xchg
fsubr
mov
shll
lds
cmc
xor
int3
in
out
jmp
lret
call
out
shr
cmp
enter
icebp
sub
in
fiadds
aad
fldl2e
lret
loope
mov
repz
hlt
icebp
cmp
in
jecxz
fcmovnbe
mov
jmp
enter
xchg
shr
in
call
lret
idiv
into
icebp
icebp
repnz
rorl
fmull
das
fnstcw
iret
aaa
xlat
repz
fxch
cmp
and
cmp
orb
test
and
call
cli
xlat
fst
div
ss
fdivrp
cmp
std
addb
int3
fimuls
test
sub
aas
loope
cmp
fld
xchg
fld
rcr
les
out
clc
xor
xor
out
jmp
repnz
cld
fdecstp
add
out
loop
cmp
jmp
enter
repnz
xor
cmp
fucomip
and
testb
out
std
out
lock
in
icebp
ss
stc
cli
rol
loop
cli
addb
addb
in
aad
ss
leave
clc
bnd
rol
in
adc
roll
xbegin
xchg
test
cmc
ret
clc
repz
cli
lret
clc
ds
cmp
loope
loop
loope
iret
jecxz
mov
loope
out
out
fdivs
loop
not
sar
cld
fucom
clc
jecxz
ljmp
out
fiadds
ror
ds
int
rcl
push
fmuls
or
xor
enter
incl
cmp
clc
enter
fisttpl
into
ljmp
int3
sbb
in
and
aas
fsub
out
mov
loope
iret
xchg
fsubrp
imulb
in
cmp
fnsave
int3
jecxz
test
out
in
loop
fdivrp
mov
and
icebp
xor
cmc
cmc
clc
xlat
rcr
les
add
popl
test
sbb
add
inc
clc
jmp
aas
into
lret
leave
aam
dec
jo
sbb
mov
jle
add
into
enter
not
jmp
ror
fcmovnu
ds
repz
test
in
icebp
repnz
test
ljmp
shr
cmp
aas
clc
lock
fdivrs
out
mov
addb
loope
xor
xor
loopne
std
sti
adc
cli
mov
fsubrp
jecxz
mov
xlat
in
ljmp
in
test
xlat
in
xlat
out
mov
nop
stc
in
lret
repnz
icebp
xor
cmp
rcr
into
fcmovnu
fcmovnbe
fiaddl
mov
fsubrp
out
iret
loop
out
out
call
in
out
test
and
xchg
int3
in
leave
out
cmp
imul
ss
out
cmp
rcr
cmp
stc
icebp
fcmovu
in
fmul
into
sti
out
lret
call
in
cmp
out
ds
testb
loop
hlt
mov
jmp
lret
xor
cmc
int3
lret
cmp
lret
xlat
cli
jecxz
into
in
lret
jmp
cld
cmp
fildl
stc
and
lret
into
in
enter
ret
xor
hlt
out
idivb
cmp
call
leave
rol
aam
fisttpl
xor
xor
xor
sar
jmp
fstp
icebp
cld
add
cmp
in
loopne
in
loopne
jecxz
test
cld
in
fucomi
call
out
out
aas
mul
enter
cli
sub
in
in
das
out
xor
cs
icebp
xlat
xlat
xor
incb
std
out
mov
shr
lea
xlat
shrl
ss
aam
stc
roll
orl
out
lea
int3
int3
sar
sti
clc
sub
jecxz
cld
lea
hlt
in
xchg
test
into
out
int3
lock
loope
int3
rolb
xor
clc
call
sti
lret
out
aad
int3
jmp
aad
xor
fabs
rcl
into
iret
repnz
std
leave
call
rcr
mov
jmp
rcl
ljmp
fdiv
repnz
fisttpll
in
repz
lret
xchg
fmulp
icebp
imul
shlb
sti
clc
aas
fxch
cmp
out
addb
mov
xchg
xchg
iret
lock
fdivs
repz
ror
int
div
xlat
fucomip
div
out
in
leave
int3
and
xchg
aaa
in
out
cmp
cmp
repz
ljmp
in
xchg
out
int
icebp
jmp
sti
clc
fxtract
idiv
stc
out
decl
rcl
fdivp
in
in
ss
fxch
fdivp
iret
into
cmp
cmp
aas
rcl
mov
iret
orl
hlt
xlat
icebp
xor
cmp
cmp
loopne
cmc
in
cli
out
loope
call
in
adc
loop
xor
bnd
aaa
enter
fcmovb
hlt
fld
rol
clc
push
lret
call
loop
int3
xor
xor
sarb
int
cmp
icebp
cmp
adc
aas
jecxz
sti
addl
out
int
lock
cmc
sar
lret
jecxz
rcr
aam
xchg
out
loope
in
enter
lret
ljmp
ret
fisttps
lret
in
xchg
out
into
ffreep
aaa
rol
sarl
in
cmpl
cli
cld
call
int
xor
cmc
cmp
leave
xor
repnz
int3
fndisi(8087
rol
aam
ljmp
xchg
ror
in
mov
in
out
aad
cmp
lret
icebp
out
loop
xchg
aam
rcl
ljmp
in
aam
repnz
lret
mul
leave
cmp
fildl
in
out
cmc
in
enter
jmp
xchg
shl
aam
xor
ror
call
in
loope
xchg
out
loop
lret
in
in
repz
icebp
repnz
push
loope
int3
and
lock
xlat
loop
filds
in
std
hlt
xchg
enter
in
cmp
sti
aaa
clc
cmp
jecxz
clc
in
mov
jmp
test
call
xor
rcr
xor
cld
aas
cld
in
aam
sar
jmp
ljmp
in
lret
jmp
out
aad
fscale
rcr
sti
loop
shl
aas
sar
testb
in
decl
int3
jmp
hlt
xlat
cmp
lret
repz
loope
incl
sub
push
mov
jmp
int3
ret
int3
int3
sahf
pushf
shufps
cmp
push
add
lret
rcl
loop
xor
sub
fdiv
cmp
test
cmp
leave
xor
fcmovbe
fildl
rol
loope
xor
divb
cmp
fdiv
ret
clc
leave
xchg
out
lret
out
in
in
out
cmp
fsubr
cmc
cld
int
cmp
fadd
sar
test
fcmovne
ffreep
xor
sub
int3
lret
jmp
hlt
cmp
faddl
out
std
iret
mov
leave
lret
xchg
test
repz
out
out
leave
fsubrp
clc
repnz
and
mov
xlat
fmul
fxch
in
in
fimuls
cmc
shl
sar
cmp
call
out
out
xchg
fcmovnbe
in
cli
lea
adc
ss
leave
cmp
fnop
neg
out
in
ljmp
shr
shr
fimuls
out
jmp
clc
clc
inc
int3
rcl
cmc
xrelease
mov
xchg
fdivr
cmc
test
cmc
xor
loopne
or
repnz
jmp
stc
jmp
div
ret
into
sub
aad
fnstsw
in
loop
cmc
xor
fdivr
out
repnz
call
cmp
call
ljmp
faddl
jmp
mov
lea
lret
cmp
ds
cmc
cmp
xchg
fyl2xp1
sar
clc
mov
imul
enter
xchg
dec
ljmp
sub
repnz
shl
fdivrp
loopne
ffree
mov
in
ljmp
leave
aad
jmp
cmp
fcomp
decb
mov
xchg
rcl
out
in
call
loopne
iret
cmp
loop
fildl
and
out
ljmp
lock
aam
rcl
cmc
aam
cmp
mov
ret
neg
cld
fucomp
and
lock
xor
jecxz
cmp
iret
sar
int
ret
fdivrp
aas
mov
mov
cmp
in
cmp
ds
loopne
cld
xchg
stc
jmp
jecxz
lret
mov
icebp
cmp
repz
int
in
repz
aam
repz
orb
int
iret
jecxz
shrl
xlat
xor
fcomp
shl
shl
loopne
call
loope
mov
icebp
rcl
fcmovu
cmp
stc
jecxz
into
test
cld
decb
repnz
loope
int3
out
cmp
fcmovne
call
fdivp
rol
repnz
mov
test
out
leave
mov
loope
cmc
lret
iret
ljmp
cmp
test
adcb
xor
call
repnz
cmp
cli
xlat
int3
lea
lock
icebp
int
icebp
das
sarb
fstp
lret
shl
hlt
cli
cli
aam
loope
std
addl
jmp
aad
lret
enter
fadd
into
into
cmp
fcmovbe
fisttpll
fsubp
lret
mul
out
xor
out
fdivp
std
ss
call
fcmovu
mov
xchg
icebp
rcl
rcr
xor
aaa
stc
call
aas
filds
cli
cmp
int3
ljmp
iret
sub
aad
ss
cmp
sti
stc
repnz
shr
loope
out
call
std
lock
loopne
leave
cmp
sti
std
out
sarl
ds
jecxz
adc
and
jmp
loopne
aaa
fsubr
cmc
in
cmp
out
ror
fdivr
test
xchg
loope
xchg
loopne
adc
enter
xor
ljmp
hlt
test
in
mov
int
xchg
xchg
ret
shl
sti
rol
int
rcr
xor
shl
sti
mov
repnz
xchg
out
iret
out
cmc
lret
loop
repnz
xlat
clc
fdivrs
les
mov
sbb
loope
popl
ror
cmp
fmul
aam
fdivrp
loopne,pt
iret
cmc
rcl
faddl
in
lret
out
in
loop
xlat
in
cli
aam
fdivrs
int
fstpt
repz
clc
sarb
ret
test
ljmp
into
sar
cmc
ss
fiadds
jecxz
int3
sub
ljmp
aam
repnz
int
aas
in
loope
bnd
clc
stc
mov
cli
test
fisttpl
rcr
xor
fldln2
loop
inc
add
jmp
lret
into
fst
fstp
bound
orb
push
add
cli
aam
ds
repz
in
xchg
rcr
xorl
aad
ret
aam
icebp
aas
lret
rolb
out
fdivr
out
into
loope
out
fdivs
xor
cmp
xor
fdivp
lock
jecxz
jmp
loopne
cli
addb
xor
loop
cmp
fcos
loopne
hlt
in
fmul
rcr
fndisi(8087
ror
rcr
in
ljmp
sarl
jecxz
fsqrt
repnz
loopne
std
int3
lret
int
loop
fst
ror
clc
lock
fidivrl
ds
in
fcomip
in
lret
lret
fucomip
xchg
loope
lret
cmp
shr
cmp
addb
jecxz
ljmp
mov
aaa
ljmp
loopne
cmp
aad
ret
leave
add
mov
out
cmp
enter
iret
ror
faddl
jecxz
sbb
loopne
test
nop
mov
xor
ljmp
int3
jecxz
loopne
aam
orb
in
fcmovu
int3
xchg
shl
xor
aaa
lret
stc
repz
cmp
rcr
cmp
mov
loopne
test
jmp
xchg
test
call
iret
iret
repz
aam
test
loope
xchg
icebp
loop
loope
out
repz
loope
jecxz
int3
into
test
in
add
int3
jecxz
cmc
cmc
aas
loope,pn
in
in
int
jmp
vshufps
in
leave
cld
leave
std
repnz
loop
ljmp
cmp
cld
out
clc
not
leave
neg
and
sub
icebp
icebp
loope
xor
xor
fdivp
cmp
rol
clc
clc
in
xchg
into
jecxz
aad
jecxz
rcl
into
cmp
hlt
xchg
or
loopne
int3
ljmp
shll
lret
lock
cmp
clc
incb
jmp
loopne
lret
icebp
xchg
orl
xor
out
cli
leave
ds
cli
aam
shr
sti
fcmovnbe
int3
test
lock
out
lock
bnd
test
cmp
fcmovu
out
xlat
jecxz
xchg
loopne
fsubr
out
in
call
repnz
aaa
out
iret
leave
xor
in
iret
sti
fldl
mov
aam
loop
call
hlt
loopne
cmp
lret
in
ljmp
cmp
lock
jmp
clc
xor
out
xchg
fcoml
sti
sti
xorb
cmp
loop
jecxz
fcomi
in
cld
leave
out
into
out
loop
in
jecxz
ljmp
sarb
call
hlt
hlt
aam
cmp
loopne
test
mov
in
xor
sar
aam
rcl
cld
out
iret
fadd
test
ret
cld
fiadds
out
xrelease
icebp
xor
fucomi
repz
xor
xlat
aaa
icebp
sti
shl
cmc
cli
aam
xchg
fmull
cmc
jmp
lret
cld
icebp
repnz
cld
mul
cld
test
loope
cld
out
loop
rorb
in
xlat
jecxz
cld
repz
sbb
adc
test
clc
imul
mov
int
add
fdivrs
loop
into
hlt
out
lret
ds
cli
in
in
aam
hlt
test
ret
neg
loop
out
jmp
shlb
test
imul
ror
in
lret
sarb
test
ret
shl
cmc
loopne
xlat
test
xchg
cs
in
xor
enter
loopne
loopne
in
cmp
or
cli
jecxz
shl
cmc
cmp
cmp
cld
imul
fidivrl
sar
cli
cli
in
in
aad
addb
aam
lret
lret
int
shr
cmc
into
sar
sti
fadd
shl
mov
loopne
ljmp
aad
rcl
repz
xlat
out
sti
shl
aam
cld
loop
rorl
loop
hlt
std
or
fdivs
jmp
fcom
lock
cmc
rolb
in
in
fimuls
jmp
xor
repz
jmp
fmul
sarb
sar
sbb
sti
les
out
orb
in
stc
jmp
xor
ds
jecxz
cli
out
jmp
stc
xchg
mov
loop
lret
mov
cmp
xor
fcmovbe
ret
mov
xlat
cld
nop
roll
hlt
shl
fmul
loope
ret
clc
fcomip
xchg
enter
mov
loope
fstp
xchg
orl
add
int
iret
rcl
aad
inc
xor
dec
fwait
mov
add
cmp
shl
cmp
fst
fdiv
lock
fndisi(8087
cmc
std
lds
call
int
fdivl
aaa
cmp
int
shl
call
out
in
rcl
out
cmp
xor
into
fucomip
cmp
repz
cld
cmp
not
std
clc
filds
cmp
leave
imull
clc
aam
stc
cmp
loope
loope
xor
ret
loope
mov
jecxz
call
sarl
shlb
iret
ljmp
sbb
leave
test
stc
sbb
shl
repnz
out
cli
out
dec
test
int
fstpt
cmc
shr
mov
in
xchg
fsubp
addl
clc
repz
jmp
cld
aas
out
incl
lea
loop
xor
in
int
lret
lret
repz
cld
shl
out
stc
cld
test
call
in
repz
xlat
in
lock
aas
sti
iret
cmc
cmc
xlat
ds
stc
fdivr
mov
in
icebp
into
imul
ret
enter
stc
not
into
sbb
rcr
call
in
lds
repnz
xor
call
aad
ljmp
stc
mul
fcmove
clc
test
fucomi
cli
mov
stc
int3
in
ljmp
out
repz
loop
call
lret
rclb
int3
out
xlat
fdiv
not
ss
loop
fcomip
fcomip
jecxz
jmp
enter
mov
rcl
stc
in
lret
cmp
lock
out
in
rol
cmc
mov
xchg
rcl
xor
aaa
out
int
fstp
incb
mov
in
cld
sti
in
test
div
xor
lock
in
repnz
in
cmp
ds
test
loopne
std
in
int
in
bnd
xor
jmp
loopne
test
aam
loopne
mov
loop
xchg
rcr
repnz
jmp
icebp
ror
idiv
lret
repnz
hlt
xchg
leave
adc
in
ljmp
ror
in
cmp
std
cmc
repnz
aam
loop
icebp
aas
hlt
jmp
mov
hlt
out
hlt
int
out
cmp
in
xlat
rol
loop
loope
ret
testb
in
fisttpll
in
aam
xlat
hlt
neg
aad
sar
into
loope
mov
cld
loopne
sti
shl
mov
repz
in
lock
fcmovbe
test
sti
mov
fdiv
idiv
out
int3
loopne
sti
mov
aad
ret
jmp
aam
stc
fcomi
int
fdivrp
loope
stc
in
imul
ret
xchg
mov
xchg
repnz
lock
stc
cmp
out
loopne
test
enter
mov
leave
into
xchg
loopne
in
ret
aaa
enter
lock
cli
addl
lret
in
shl
sub
aam
xlat
repnz
cmc
xor
xlat
fpatan
repz
jecxz
orl
jmp
icebp
int
leave
lock
imul
clc
fcomp
enter
int
int3
mov
mov
aad
xlat
ret
cmp
div
into
sti
xor
fneni(8087
ret
fdivrp
ret
faddl
icebp
in
repnz
in
xor
in
int3
div
fdiv
sar
fadds
les
fsub
fmul
in
xor
xor
call
sti
int3
fucomi
fdivr
out
addl
loopne
loop
xchg
mov
call
out
sti
ljmp
sti
cmp
and
leave
fildl
xchg
mov
ret
iret
out
out
loop
fcmovne
xlat
fsub
roll
popl
xor
das
iret
xlat
fcmovnb
xor
sub
fcmovnu
test
test
fiaddl
cli
mov
xor
cmp
leave
lret
aaa
fstp
fsubr
aam
fcom
jmp
mov
mov
lret
ret
in
iret
aad
lock
out
stc
int3
sarl
iret
sti
cmp
mov
int
xchg
jecxz
lock
enter
cmp
stc
aad
cli
xlat
sar
fdecstp
aas
out
loop
test
mov
into
into
loope
stc
out
sarb
fadd
roll
enter
mov
in
rcr
call
ss
les
lret
cli
stc
fcos
cmp
faddl
lock
lock
int3
stc
cmp
cld
lock
addl
call
incl
jmp
mov
fcmovnu
or
sub
stos
adc
push
add
out
out
adc
cmp
out
cmc
cmc
hlt
shlb
repnz
out
out
loopne
and
lret
cmc
std
hlt
leave
iret
lock
shl
xor
cmp
cmc
std
xchg
rol
sti
sbb
jmp
mov
out
fidivl
int3
std
div
out
ds
cmp
call
std
filds
fsubp
int
loopne
repnz
fincstp
aam
sarl
sbb
aad
sar
loope
loope
into
fildl
shr
xor
cmp
ljmp
repz
jecxz
enter
xlat
jmp
xchg
call
hlt
fidivrl
cmp
fcmovnu
icebp
loope
enter
sbb
xchg
out
xchg
xor
cmp
ljmp
rcl
rcr
leave
std
in
add
iret
in
loope
out
shlb
clc
sub
jmp
fcmovne
loope
mov
test
fmulp
shr
xchg
clc
ret
ljmp
fistpll
rolb
call
xchg
addl
in
cmp
into
idiv
cmp
cmp
lock
neg
mov
into
loopne
xchg
hlt
call
fdiv
fmul
loope
aas
hlt
shl
out
loope
loop
in
jecxz
rolb
call
shll
in
ss
int3
xor
faddp
neg
xor
sti
sbb
mov
lret
fcmovnb
jmp
xor
cmp
call
sti
loope
ljmp
std
aam
leave
cmc
fldln2
sbb
repnz
shr
int
cs
repnz
aas
fadds
icebp
out
fmulp
testb
lret
loopne
sti
cmp
and
roll
fld1
out
jmp
xchg
out
cli
repnz
repz
cmp
int3
cmpl
hlt
filds
fucom
into
loope
lock
stc
jecxz
enter
cmpl
stc
ret
test
out
sti
int3
in
cli
test
call
xor
enter
loop
iret
cld
shl
cmc
fld1
call
int
rcl
sar
ret
lret
mul
ds
cld
repz
lea
lea
das
rcr
call
loope
rol
cmp
repz
aad
sti
cmc
ljmp
jmp
xor
cli
and
filds
xchg
fmuls
loop
jecxz
sub
sti
aad
out
cmp
jecxz
repz
idiv
add
cli
jmp
roll
shll
leave
int3
testl
aam
inc
test
jmp
repz
xchg
iret
jmp
aam
cmp
out
aad
ret
jecxz
test
fisttps
in
out
in
xchg
xchg
aam
shll
out
leave
in
shlb
ds
jmp
fcmovnbe
xlat
rorb
cld
fiadds
ljmp
in
aaa
in
clc
fcmovnbe
cmc
cmp
clc
std
cld
cli
test
loop
lret
jmp
out
loopne
in
loop
out
ss
cld
cmp
xor
sti
into
roll
ret
mov
and
shl
aam
loop
cmc
stc
repz
aad
idivb
iret
rorl
test
orl
out
in
cmp
stc
lret
lock
iret
sbb
incb
call
jmp
mov
jmp
hlt
repnz
f2xm1
addl
lret
sti
in
call
repz
rol
loop
cmc
cmp
aad
in
repnz
repz
sar
stc
xchg
test
fisttpll
out
shr
cli
fcomi
cld
ljmp
loope
mov
loope
xlat
out
out
in
out
mov
sub
cmp
push
fmul
xor
fbstp
std
cli
jmp
fdivr
incl
out
icebp
enter
sarb
fsubp
repz
cli
fildl
int3
repnz
int
das
leave
aam
int
adc
loope
loopne
mov
cld
out
jmp
into
mov
in
lret
neg
call
rcl
loope
neg
out
mov
int
mov
fcomp
aad
aad
fst
ret
loope
test
loope
fcmove
jmp
xchg
mov
lock
ror
clc
cld
int
cld
loop
hlt
test
out
xabort
out
std
fistl
divb
aaa
ljmp
cmc
lock
jge
push
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
and
jmp
and
jle
add
xor
jecxz
std
icebp
loope
test
shr
call
hlt
lret
int
repnz
iret
fsub
enter
int
int3
test
int3
xor
out
in
leave
std
sti
fadd
rol
stc
fildl
addl
out
ret
cmp
jmp
in
loopne
not
ret
aas
out
jecxz
int3
or
not
rcl
fildl
aas
out
xchg
ds
cli
mov
fucomp
cmc
call
fsubrp
lret
xor
test
fld
mov
and
mov
out
test
out
in
repnz
ds
repnz
sar
cmp
in
in
xchg
fsubrp
lret
icebp
ror
fstpt
int
idiv
test
int
rorl
lret
enter
in
int
mov
das
in
rol
jmp
aad
jmp
repnz
in
repz
mov
repnz
fstp
in
rcl
lret
ror
fmulp
xor
in
aas
test
lock
cmp
stc
out
jecxz
xchg
call
iret
fnstsw
xor
sti
xchg
orb
jecxz
fsub
cmc
xor
stc
leave
in
xor
out
iret
std
sbb
xchg
mov
int
call
loope
ret
enter
xor
fcmovnu
stc
addb
xlat
int3
ftst
lock
jmp
repnz
int3
lds
cmp
fdiv
lret
icebp
sar
test
leave
lret
jmp
mov
fst
in
aaa
bnd
lock
sar
repz
stc
cmp
sbb
fdivp
stc
jmp
ret
cmp
les
iret
int3
loopne
cmp
rol
aad
fxch
in
out
into
xchg
cld
in
mov
mov
xlat
int3
ret
out
cmp
aam
into
cmp
shl
cmp
enter
cld
mov
cmc
ret
cmp
cld
repnz
cmp
loop
loop
fdivr
jmp
cld
orl
lret
iret
cmp
push
in
jecxz
jmp
and
out
mul
cs
xor
idivb
xor
in
clc
ret
fadds
out
icebp
jecxz
aam
loop
call
out
fcomi
lret
cmp
adc
mov
int
call
repz
in
ss
int
not
cli
out
ret
loopne
ret
jecxz
mov
fimull
rcr
clc
rcr
cli
lret
jmp
icebp
loopne
clc
mov
loope
incl
cmc
ror
test
std
rol
cmp
rcr
addl
nop
mov
in
xor
lds
out
loope
in
stc
cmc
f2xm1
std
mov
not
xchg
out
rolb
ljmp
sti
ror
cmc
into
iret
idivl
in
jecxz
addb
shl
hlt
repnz
lret
in
stc
sarb
lock
rolb
ljmp
ljmp
das
xor
sti
out
aad
cmp
fidivrs
ljmp
mov
imul
idiv
cmp
and
out
cmp
call
mov
rcl
clc
repz
sarb
iret
sarb
repz
add
lret
mov
mov
in
sti
clc
in
iret
icebp
cmp
cmp
aas
mul
ret
mov
in
out
fucomp
ljmp
stc
aam
sti
fcmovbe
div
sti
iret
repz
iret
xchg
addl
ljmp
cmp
aaa
repnz
xrelease
jmp
stc
call
lret
int
fst
sub
loopne
std
out
out
ffreep
in
in
in
nop
test
xlat
int
aad
rcr
aam
into
in
aad
add
and
ljmp
xor
aaa
into
lret
rcl
fildl
out
out
stc
enter
test
fdivp
into
cmc
jecxz
aaa
jmp
aad
fcom
sarl
std
inc
sarl
fsubp
mov
in
out
shlb
rcl
mul
fsin
cli
loop
mov
fdivrp
into
in
iret
xchg
rcl
in
ret
in
sar
loopne
into
icebp
ds
cld
fndisi(8087
fcmovb
repz
mov
xchg
icebp
in
rcl
sti
mov
inc
mov
mov
mov
jmp
enter
int
int3
lret
xlat
ja
fists
xchg
and
add
add
enter
cmp
xbegin
in
movb
cmc
in
stc
loop
fcmovne
aam
fstp
fdiv
out
jecxz
std
in
fucom
ret
incl
in
mov
out
lret
into
cmp
cmc
shr
sar
div
shl
lret
in
ljmp
jmp
shr
ret
xor
xlat
cmp
cmp
cli
in
ffree
fiaddl
decl
sub
sar
cmp
out
ror
cld
cmc
ffreep
aas
and
lds
leave
xchg
fimuls
call
aaa
in
sti
int3
fiaddl
enter
mov
xchg
aad
stc
in
aad
in
aam
fidivrs
cli
cmc
cmpl
hlt
fsubr
into
in
fistl
jmp
into
sub
aaa
sarl
xlat
out
sar
mov
jmp
mov
out
in
ljmp
faddp
repz
cld
testl
int
in
aaa
ret
out
aaa
imul
in
lock
icebp
std
out
cmp
cld
test
sarl
enter
xlat
icebp
cmp
loopne
xchg
ret
addl
iret
xchg
mul
not
cmp
aad
cmp
cmp
xor
clc
fdivrs
rcl
jmp
xchg
loop
call
int
hlt
int
loopne
rcl
rcl
xchg
xlat
jmp
sub
test
mov
sub
lock
in
jecxz
ret
sti
repnz
clc
aas
sti
in
ror
icebp
xchg
in
mov
int3
cmp
fcmovnbe
in
xchg
in
loope
fmulp
xlat
xchg
xor
shl
int3
jmp
xlat
fnstcw
testb
out
cli
addb
in
cmc
into
out
stc
in
rcr
hlt
shl
loopne
xlat
cld
ret
icebp
fucom
out
loop
out
sbb
ror
in
jmp
repz
int
int
stc
xlat
incb
ror
loopne
shl
int3
repz
ljmp
lock
into
ret
xchg
in
sub
repz
lock
iret
cmp
ss
fstpt
fcmovnb
call
ret
repz
fldl
loopne
aam
aaa
fdivs
sti
in
fsubr
call
fsub
cmp
aad
not
cmc
f2xm1
stc
in
lock
into
shr
int3
aad
out
aaa
cli
int3
ftst
out
in
loop
ffree
dec
mov
adc
mov
aad
xor
out
iret
cmp
sarb
in
repz
sti
lock
xchg
lea
into
cmp
ret
lock
sbb
ffree
rolb
xlat
fadds
xchg
xor
cmp
xor
in
rol
rol
ret
mov
fimull
out
mov
lock
sarl
ljmp
fsubr
xlat
cli
aad
loop
jmp
aad
out
bnd
repz
xor
cmc
enter
testl
les
in
nop
out
les
jmp
fcmovu
stc
in
sti
cli
rolb
rol
test
ret
ljmp
hlt
lea
int3
rcl
int
int3
filds
fsubrp
in
in
lret
in
int3
fldl
call
rcr
cld
lock
addl
fcmovnu
xchg
out
lret
shl
cs
lret
cmp
out
incb
jmp
in
loope
icebp
fcoml
aam
out
stc
fdiv
cld
in
fadd
xlat
sti
movl
out
ret
das
icebp
cli
in
cmp
cmp
aam
in
cmc
div
cli
fdivr
loope
fucomip
mov
xchg
hlt
into
cli
test
ljmp
idivl
fdivrp
into
decl
xor
out
fcmove
xor
lock
test
rolb
test
fimuls
mul
enter
into
call
shl
lock
repz
out
loop
out
nop
repz
repnz
out
aas
ds
inc
fnstcw
aam
aad
fildl
in
aam
ror
icebp
cli
enter
fucomip
aas
lret
addl
leave
in
sti
shl
call
fucomp
sarb
sti
hlt
loopne
out
cmp
faddp
testl
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
push
insb
or
add
add
ljmp
rol
cld
xlat
stc
stc
ret
into
loope
xlat
mov
sti
xchg
mov
mov
rol
stc
xor
jmp
loope
call
into
mov
mov
xchg
mov
into
xor
cld
sar
cmp
jmp
loopne
call
xchg
out
xchg
adcl
aaa
in
fnstsw
sar
sti
adc
ret
mov
stc
test
out
in
cmp
into
repnz
loop
in
loop
loop
neg
rol
jmp
and
iret
icebp
cmc
rcl
out
fidivrl
lret
repz
shl
shl
aam
enter
addb
out
imull
lds
lret
int
xlat
iret
jecxz
fdivrl
cli
loopne
enter
mov
lret
ret
test
out
lock
jecxz
hlt
into
cld
repz
ror
clc
out
rcr
fdiv
cmp
out
rorb
leave
loop
call
xlat
jmp
hlt
shl
lret
stc
idivl
iret
ds
neg
jmp
sti
addl
in
int3
xor
aaa
repz
iret
shl
cmc
shl
rorl
jmp
int3
mov
call
fnsave
xor
cmp
inc
in
div
jmp
aad
mov
lret
in
test
in
xor
in
cli
cs
fbstp
ljmp
xchg
sti
fildl
xchg
aam
loope
fxch
lds
int3
leave
rcl
in
div
cmc
xchg
imul
dec
into
movl
neg
cmp
fcomi
stc
fdiv
div
xchg
nop
lret
out
sar
hlt
in
int3
sti
xor
cmc
cmp
iret
dec
fnstsw
mov
shr
test
mov
call
int3
call
loop
leave
in
dec
ljmp
cmp
fucomip
incb
leave
xchg
sub
icebp
xor
out
fstp
push
fdivp
loop
adc
xchg
call
sbb
loop
rcl
xlat
int3
cld
fcmovnbe
sti
fldl
movl
in
lock
out
aad
in
cmp
cmp
out
ftst
test
ds
ret
hlt
leave
cmp
fsubp
mov
rcr
aam
bnd
fdivr
ds
loope
repz
in
mov
out
xchg
or
lret
out
fiaddl
aaa
xchg
ds
loopne
out
into
int
shl
shr
xchg
sub
xor
fdivr
repnz
sbb
loope
out
call
loop
mov
shl
jmp
aad
jmp
add
cmp
jmp
fucomip
ficoml
xor
loop
cmp
shl
shl
sti
fcmovu
in
cmc
test
ljmp
in
int3
ds
int3
loop
xlat
out
mov
out
test
sti
nop
std
in
loop
test
int3
aaa
ljmp
aas
cmp
shl
shr
cld
addb
mov
jecxz
xlat
cli
int3
fdiv
fcmovnbe
sar
add
decb
icebp
cld
fdiv
cmc
sub
int3
iret
enter
sar
stc
repz
leave
fmulp
mov
fdivrp
mov
jmp
mov
mov
loop
in
clc
in
hlt
sarb
iret
icebp
into
jecxz
out
repnz
xlat
fcmovu
loopne
mov
mul
in
xor
cmp
cmc
jecxz
fcomip
sarb
enter
mov
nop
mov
xchg
xchg
xchg
call
cld
aam
out
loopne
fdivrs
not
cmp
enter
mov
icebp
int
test
shrl
repnz
fcmovbe
out
idiv
jmp
cmp
in
xchg
in
fstp
mov
xchg
xchg
xor
jecxz
xor
shl
xlat
cmp
cli
xor
hlt
or
mov
in
aad
stc
das
xor
fprem
cmc
out
aad
shl
test
rorl
leave
in
xchg
mov
enter
aas
xor
iret
in
cmp
ljmp
in
fcomip
in
test
repz
in
fiadds
hlt
mov
aad
fnstsw
aas
fadd
int3
ljmp
sub
aad
fsubp
repnz
ljmp
loop,pt
lret
out
leave
ljmp
int3
clc
mul
cli
iret
hlt
cmp
fstp
ror
lock
call
loopne
in
xchg
enter
mov
repz
fstpt
aam
cmp
idiv
repz
inc
mov
add
add
int
xlat
mov
add
add
cld
cld
out
mov
nop
in
cli
lret
xchg
iret
call
hlt
in
ret
stc
loope
in
shl
cld
cmp
repz
out
in
jmp
into
std
cmp
cld
icebp
out
fcmovnb
sti
fisttps
int
out
xchg
out
xlat
lock
fidivl
into
clc
test
rol
test
fimull
call
cmp
xor
jmp
icebp
rol
out
cmp
mov
stc
filds
mov
stc
out
clc
clc
clc
cmp
loope
in
icebp
fucomp
test
sub
xor
in
iret
lret
in
stc
ret
aam
fcomi
fyl2x
xlat
repz
stc
out
out
out
repz
enter
xlat
icebp
in
hlt
std
into
iret
aas
into
jecxz
aas
rorl
into
lret
out
in
xor
xor
out
out
out
aas
lock
loope
shl
aam
jmp
fsubr
xchg
sub
loope
ret
cld
cmp
sarb
sti
fcmovu
hlt
rcl
loopne
aad
fucomi
fmulp
fxch
ljmp
in
cmp
xor
fcmovnu
xlat
idiv
hlt
fildl
in
aam
int3
mov
addb
int3
aam
xor
faddl
cli
out
addb
jecxz
ljmp
shll
sti
xlat
fildl
loopne
mov
in
sti
in
xchg
test
xor
out
aad
into
cmp
xor
cmc
cli
addl
cli
cmp
mov
in
shl
aaa
into
ljmp
cmp
sti
xor
fst
mov
loope
rolb
xchg
xchg
shr
lret
ljmp
rol
xacquire
in
jmp
jmp
loopne
jmp
out
aam
hlt
int3
cmp
fnstcw
jmp
fucomp
xchg
shl
orb
xor
shr
jmp
jmp
cmp
inc
repnz
hlt
loopne
sti
out
lock
int
repnz
imul
icebp
loopne
ret
aad
lock
lds
int3
mov
in
fsubp
ret
cld
rcr
cmp
aaa
aas
iret
sar
cli
lds
sti
mov
mov
xor
loop
xor
xor
jecxz
test
hlt
aam
call
call
lock
int3
in
in
in
icebp
sti
cmc
leave
shl
fcomi
fdiv
mov
int
fdivr
std
lock
in
enter
in
fadds
xchg
mov
jmp
out
out
xchg
repz
xchg
lret
cmp
loope
loop
rcl
fdivrs
mov
idiv
xchg
jmp
ljmp
xor
lret
fdiv
aas
sar
adc
aad
in
std
call
jmp
in
sarb
fsubr
lret
repnz
fdivr
iret
hlt
cli
xchg
aas
cld
call
jecxz
call
mov
ljmp
fstpt
cmp
int3
icebp
xor
shl
mov
aas
in
cld
sub
lea
in
les
int
cmp
and
in
mov
enter
mov
ret
cmp
icebp
in
shr
out
icebp
in
hlt
loope
clc
cld
fucom
std
lret
lret
loope
in
ror
sub
in
in
cmp
out
xor
shl
mov
ret
xchg
in
mov
enter
into
aam
repz
xlat
neg
out
fcmovbe
cmp
ds
test
cli
std
mov
loop
cli
cmp
out
jmp
neg
jecxz
fdiv
idiv
lret
repnz
out
xchg
repnz
sti
xor
cmp
icebp
repnz
inc
cmc
call
nop
nop
hlt
loopne
hlt
fdiv
fsubrp
incl
xor
call
aas
addb
xchg
shrb
out
aad
sti
ror
cmp
ror
rol
out
loopne
in
stc
filds
loopne
sar
lret
xor
stc
enter
loopne
aam
repnz
idiv
fcom
out
fists
icebp
lret
in
xor
aaa
iret
aam
clc
aam
test
and
xchg
in
out
lock
int
pop
in
in
sti
sar
cmp
cli
aas
aam
fsub
jmp
cmp
pause
adc
icebp
shr
idivl
loope
fdivrp
flds
addl
rcl
out
jmp
cmp
sti
cmc
add
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
and
out
repz
icebp
adc
jmp
ljmp
rcll
leave
out
call
repnz
out
and
sti
roll
fsub
int3
mov
xchg
test
xor
xor
aam
aad
adc
aad
jmp
out
fsub
in
shr
ljmp
in
vpslld
in
shr
fiaddl
fldl
mov
jmp
in
shlb
les
frstpm(287
in
clc
addb
stc
fimull
out
fcmovne
ljmp
aam
repnz
fdivrl
in
add
ds
std
mov
call
xor
in
cld
out
cmp
cmp
repz
cmc
hlt
shl
out
lret
ret
repz
rol
in
xor
rcr
lock
call
mov
jmp
jmp
xor
sub
hlt
leave
roll
lock
cmp
test
lret
repnz
test
aaa
xor
xlat
in
fstp
lret
ffree
aaa
cmp
jmp
stc
fucomp
xchg
mov
xor
in
ljmp
cmp
sar
sbb
int3
mov
test
xchg
loopne
xor
int3
cmp
cmp
xor
adc
std
test
cmp
std
shr
xchg
aad
mul
xlat
icebp
out
std
rolb
sar
leave
xbegin
into
nop
nop
xchg
xchg
std
loopne
aam
lock
cmc
into
out
aam
fucomi
loop
sti
lock
enter
ljmp
ret
xor
ret
int
cli
in
stc
fninit
cmp
test
loop
mov
ljmp
shr
int
jmp
or
test
ret
stc
aad
test
decb
xchg
test
in
cmp
into
in
cmp
shl
fcmovne
aas
lea
in
repnz
cli
cmp
lret
iret
aas
fcmovu
icebp
in
adc
fsubr
loope
rcr
xorb
int3
cmp
xabort
shr
in
jmp
and
xchg
aas
into
in
cmp
fsqrt
cmp
repnz
adc
icebp
in
or
loop
mov
out
jecxz
mov
into
xor
aad
lret
shl
cmp
cmpb
mov
fisttpl
mov
lds
in
int3
call
loopne
shl
in
shl
stc
mov
out
fucomip
call
icebp
jmp
neg
cmp
xor
aas
int3
cmp
rcr
test
iret
ljmp
cmp
shl
cld
enter
sti
stc
hlt
out
cmp
out
push
roll
xchg
in
xchg
divb
out
shr
lret
hlt
cmp
shr
aaa
ret
loope
enter
mov
xchg
jmp
repz
int3
xlat
cmp
cmp
incb
testl
in
lock
ror
out
aam
jmp
and
out
out
jmp
xchg
mov
aad
ss
fst
shl
out
rcr
orb
jmp
xchg
lret
in
into
loopne
in
jmp
adc
hlt
cmp
ljmp
std
out
mov
xor
fxch
xor
loopne
fildl
cli
rcl
loopne
sbb
fmull
stc
aad
in
leave
lret
out
cmp
ror
test
cli
cmp
jmp
mov
ljmp
ss
jmp
cld
int3
cld
loop
aam
aas
lret
jmp
shr
std
xchg
jmp
aam
in
call
aas
xlat
sar
call
dec
ljmp
xchg
call
lret
fcmovnu
jmp
fadds
mov
test
orb
fsubr
lret
aad
shr
dec
fcomip
fcomi
cld
cmp
jecxz
lret
into
loopne
cld
in
cmc
enter
sarl
lock
repz
fcmovb
cmp
fsub
mov
lret
in
std
mov
fimull
cs
int
cmp
shr
fsqrt
loopne
rcl
cli
vpandn
test
in
adcb
stc
leave
leave
ror
shl
addb
shl
fmull
xchg
shr
in
cmc
std
cmp
repz
cli
ret
les
cli
loopne
jmp
shr
in
inc
mov
jmp
aam
ror
fcomp
aam
aas
idivb
cmp
jle
add
jmp
iret
aad
cli
enter
cmp
in
fdivrp
loopne
in
or
rclb
rol
inc
repnz
repz
fcmovnu
fdiv
test
fildl
ljmp
cmp
cmp
fcomip
fprem1
shr
loope
mov
repz
mov
loopne
fst
das
fyl2x
cmp
sti
aaa
idiv
fsubrp
lock
rol
sti
mov
clc
stc
imul
xchg
jecxz
xchg
shr
xchg
in
xor
out
faddp
cmc
out
int3
flds
clc
jecxz
cli
fstp
in
ljmp
les
clc
lret
shr
out
cmp
ret
jmp
out
repnz
jmp
ljmp
jmp
stc
aas
fnclex
rorl
in
jmp
repnz
aam
cld
cmp
sbb
inc
fcom
aam
aad
out
out
test
xor
int
call
dec
in
cmp
in
ret
fildl
lds
out
enter
idivl
out
ljmp
sar
mov
lret
jmp
repnz
fmulp
hlt
jmp
jecxz
enter
cmp
jmp
aam
out
in
ret
in
mov
lret
in
mov
out
aad
shll
sti
cli
fdiv
int
adc
decb
xor
out
lret
ss
icebp
xor
rcr
aad
aam
clc
fnstsw
fisttpl
shl
mov
xchg
div
into
int
std
cmc
sub
fcompp
into
ret
cli
mov
in
mov
push
sar
sub
lret
cmp
out
stc
lret
icebp
fdiv
fcmovb
xchg
out
fxch
lret
rorb
in
xchg
in
shr
int3
iret
ss
repz
std
ret
ftst
rcr
jecxz
sbb
sub
in
test
clc
xor
fdivr
in
in
jecxz
test
fmul
out
std
ljmp
in
sub
cld
iret
lock
sarl
lret
cmp
in
fcom
aam
mov
in
loopne
mov
xchg
xchg
nop
xchg
iret
stc
int3
ss
cli
ds
cmp
ftst
test
mov
out
ss
cmc
std
stc
lret
sarl
shl
loop
aam
loop
lret
lock
fstp
rorl
rol
xor
cmp
clc
std
int3
fadds
cmp
clc
mov
enter
call
out
sti
ds
cmp
iret
shl
fdiv
loope
out
cld
out
or
aam
enter
xor
aaa
cmc
int3
lret
fidivrs
ret
fxam
jmp
aam
fcmovnu
jmp
jmp
cmc
call
jmp
ds
lock
lock
stc
ret
in
loopne
loop
xchg
xor
lret
xor
sti
out
xlat
loope
filds
cmp
jecxz
int
jmp
lret
iret
repnz
aad
jmp
clc
cmp
fcos
cli
sti
decb
in
sti
addb
fdiv
sub
aad
ljmp
test
icebp
testb
stc
test
and
int
xor
int
lock
shr
push
aad
ret
cli
or
test
popl
ror
xor
ret
stc
cs
div
cli
cmp
shr
clc
lock
cmp
stc
fisttps
fucomip
cmp
int
std
fcmove
idiv
xlat
cmp
ret
mov
cli
jmp
rorb
fxtract
out
sti
fdiv
hlt
neg
fcmove
fsubrp
mov
ror
orb
in
nop
iret
lock
sti
fsubr
enter
flds
shl
add
rolb
faddp
imul
leave
rcl
ss
ds
aas
hlt
addb
lret
fildl
loop
aam
jmp
std
cmp
inc
call
out
mov
out
sti
out
loope
loopne
rol
xor
jmp
icebp
ds
call
jecxz
sub
jmp
in
xor
ljmp
out
out
rol
cmp
testb
fstl
aam
iret
ljmp
iret
shl
orl
in
in
call
loop
rol
out
fstp
aam
rcl
in
xlat
cmp
mov
mov
test
fiaddl
shl
cs
idiv
fsubr
fcmovbe
leave
cli
shr
loope
xor
add
push
mov
push
jmp
ret
rcl
aam
ret
sarl
mov
cmp
add
add
std
and
clc
mov
in
int
icebp
xchg
enter
repz
ljmp
lock
vpaddb
iret
xor
call
fst
cmc
iret
icebp
int3
ret
aam
rol
idiv
out
xchg
jmp
xor
call
xlat
test
rolb
sti
in
out
mov
or
repnz
iret
jmp
int3
xlat
in
ds
test
std
decl
fisttpl
ljmp
enter
or
aad
fsub
shl
xchg
xchg
xor
clc
repz
sarb
loopne
cmc
jecxz
mov
mov
fucomi
loope
jmp
leave
ss
lret
adc
div
ret
fsub
in
out
sbb
in
cmp
cmp
cmp
in
aaa
in
int
aam
int
sti
loopne
imul
in
out
lret
xchg
xor
jmp
xlat
repnz
loopne
icebp
fcomip
cmc
out
fld
loop
hlt
loopne
incb
ror
in
aaa
xor
cmp
out
cmp
cld
aam
rcl
repnz
mov
fildl
lret
loop
out
aad
shl
jmp
out
ss
sar
std
aad
rcr
test
faddl
aam
fsub
lret
hlt
shrb
lock
aaa
int3
fistpll
icebp
test
xacquire
sti
mov
in
shl
rcll
repnz
xor
shl
jmp
jmp
out
std
loop
aam
loope
leave
test
lret
jecxz
shl
xor
out
jmp
sar
rcl
sub
fadds
int3
div
shl
jecxz
div
out
rcl
adc
test
shl
mul
in
clc
loopne
mov
out
test
mov
call
ljmp
hlt
stc
cmc
vmaskmovdqu
int
lock
out
xor
clc
repz
xlat
int
test
out
xchg
in
iret
loopne
out
iret
lret
cmc
fcmovnbe
in
aas
aam
ret
jmp
cmp
testl
rol
jmp
ds
cmp
in
shl
testb
cld
out
leave
incb
sti
enter
int3
rol
rol
ds
ret
loopne
icebp
loopne
lock
mov
lret
xor
fdivr
iret
repz
sti
clc
cmp
jmp
clc
mov
repnz
fdivp
stc
aaa
cmp
fprem1
aam
stc
loopne
add
lock
jmp
lret
leave
into
fidivrs
shl
int3
int3
clc
out
rol
mov
cld
mul
int3
in
fmull
out
aad
into
cli
shr
into
xor
ftst
cmp
cli
roll
mov
test
leave
aaa
out
vpaddusb
lret
fsub
shl
std
or
mov
nop
cmp
rcr
out
ds
repz
addl
loope
in
ljmp
enter
out
lret
iret
stc
in
int3
lock
enter
into
int3
jecxz
std
lock
jmp
xlat
fdiv
ljmp
xlat
in
jecxz
vpsubusb
jmp
iret
xchg
shlb
into
shll
shr
shl
fsubr
cmp
cld
incl
out
fmul
lret
fisttpll
shl
in
cmp
xor
in
loop
fcmovne
adc
mov
jmp
fsubr
xchg
fldl
jecxz
jmp
xor
aad
rcl
out
xchg
xlat
jecxz
mov
aad
jmp
cmc
std
icebp
fcomp
out
int
rol
mov
call
in
xlat
xor
xor
lock
int3
cli
test
cmp
sti
jecxz
mov
out
icebp
mov
out
ds
jmp
cmp
repz
mov
mov
in
mov
int3
fxch
out
hlt
jmp
cmp
test
ror
out
leave
fucomp
jmp
mov
test
xlat
out
xor
cmp
testb
fmuls
lea
lock
ret
xlat
aaa
not
clc
div
sbb
ret
cmp
mov
ljmp
loop
jmp
xlat
sub
lret
aaa
cmp
int
shl
jecxz
loop
lret
out
in
int
adcl
in
aad
sarl
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
and
ret
add
add
xor
repnz
clc
testl
into
divb
jmp
ret
cld
enter
xchg
jmp
sub
les
stc
cmp
xor
loope
loopne
in
fcom
std
or
stc
fcmovu
xchg
std
nop
mov
out
out
aam
cmp
fdiv
loopne
hlt
stc
in
test
lds
xchg
out
xor
cmc
repz
std
fmulp
cmc
aad
ds
fcmovnu
repnz
jmp
mov
mov
lret
xchg
add
leave
sti
into
rcr
call
in
loope
in
jecxz
rol
xchg
shr
sti
fsubp
iret
fisttpll
repz
aam
enter
ds
out
rcr
adc
rcl
jmp
leave
stc
int
mov
mov
out
shl
int
call
fstp
jecxz
cld
loop
test
sti
mul
mov
cld
jecxz
rcll
leave
lret
repz
aad
icebp
call
jecxz
jecxz
sub
xchg
neg
lret
xchg
jecxz
out
icebp
or
mov
ss
ror
sar
in
ret
sar
leave
xlat
mov
clc
clc
orl
cmp
repnz
call
in
not
icebp
in
cli
fld
ljmp
fimuls
cmp
fdivrl
aaa
aad
cmp
fcmovu
faddl
stc
jmp
int
repnz
ror
not
out
int
repz
ffreep
mov
test
loope
fdivp
fucomi
rcll
cmp
out
ds
aam
aam
fcmovne
cmp
mov
jmp
loopne
test
in
shr
fcmove
adc
fdivr
clc
aam
fdivrl
cli
shl
leave
std
int3
test
xchg
ljmp
aaa
hlt
int
out
ffree
in
test
aam
fdiv
fdivr
fmuls
lock
ss
cmp
icebp
xor
hlt
decl
xchg
jmp
sar
lock
cmp
cli
ds
add
loope
fucom
mov
in
mul
ret
enter
std
stc
repz
ljmp
mov
ret
int3
test
jmp
out
sti
fsubr
sti
fadds
xchg
out
xchg
fstp
in
in
cmp
in
in
lock
int3
rcr
sarl
loopne
test
orb
fists
loope
add
idivl
ss
stc
aas
cli
fcomi
cmp
in
testl
ret
out
out
xor
std
aas
xor
fcmovnbe
xlat
fadd
cmp
ret
jmp
xchg
test
nop
std
test
xor
ss
aaa
into
div
loop
fadds
mov
clc
cli
xchg
shr
out
int
lret
into
jmp
sti
loope
ret
sti
xlat
mov
lret
out
loopne
cmp
nop
loopne
aaa
das
int3
cli
rcl
sarl
idivl
shr
iret
ret
iret
clc
ret
mul
cli
fadd
out
lret
enter
test
aaa
cmc
cli
iret
out
xlat
cli
cmp
std
lds
in
test
cld
in
loop
in
int
loope
fcmove
out
xor
cmp
loope
shl
addb
hlt
repz
fld1
loop
leave
cmp
in
fnstcw
lock
neg
call
flds
call
call
out
aam
sarb
cmc
out
aam
mov
fdivr
mov
hlt
out
xchg
jmp
into
lock
std
incb
add
out
and
testb
iret
sti
ss
fnstsw
jecxz
ss
xor
call
orl
adc
clc
out
xor
fdivr
movl
aad
test
xchg
leave
fmul
in
call
not
cmp
xor
cmpb
neg
shl
orl
xor
in
stc
into
jmp
loope
std
lock
repz
in
cmp
loop
jmp
repnz
fprem1
in
in
shlb
in
jmp
ljmp
loopne
lret
hlt
enter
ret
iret
jmp
icebp
xchg
repz
repnz
clc
cmp
addb
ret
loopne
enter
in
rol
adc
ret
jmp
aas
fdivrs
rcr
cmp
cld
out
faddp
adc
int
stc
icebp
in
icebp
into
aaa
ljmp
neg
xlat
hlt
loope
icebp
cmp
mov
enter
rorb
cld
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
and
cmpl
jle
add
xor
xor
clc
enter
fmul
cmp
xchg
and
in
rolb
shr
call
loopne
sti
cmp
sar
out
fsub
fdivr
mov
out
lock
fmul
xor
not
cld
xor
xor
out
stc
cmp
fdivr
jmp
into
mov
enter
idivb
lock
sti
xlat
clc
lock
rolb
enter
loop
xchg
xchg
ljmp
mul
cli
cmp
out
out
test
aad
clc
cli
in
loope
fildl
call
lret
loopne
int3
shl
ds
call
clc
stc
loopne
jmp
lds
xor
clc
cmp
cmp
sarb
shl
in
lret
mov
std
lock
aad
lock
xor
xor
enter
fxch
stc
stc
les
cmp
mov
fimull
cmc
int3
in
xor
fsub
aam
cli
idiv
ret
cli
lock
icebp
xchg
adc
aad
out
aam
out
call
in
clc
rcl
fcomip
imul
lret
ljmp
int
fmul
xor
stc
roll
aad
call
addl
incb
sti
lret
fcmovu
xor
iret
shl
sti
fstpt
hlt
mov
leave
xlat
cmp
cli
rcl
aam
xor
out
fdiv
fsub
xor
xor
call
loop
in
enter
ror
int
repnz
aad
dec
ss
int3
fistpll
sti
xchg
fcmovnbe
ret
fucom
lret
out
mov
adc
loope
aad
xor
leave
not
int
fcompp
neg
out
mov
flds
mov
int
hlt
rcr
fsub
div
repz
cmp
test
loop
sti
lret
enter
fldl
aad
mul
aaa
xor
cld
lret
loopne
in
fucom
ret
sar
ret
mov
in
test
jecxz
ss
rcl
fcos
aas
repz
ds
imul
hlt
cmp
in
loopne
out
repnz
jmp
ljmp
repz
incb
lret
in
jmp
rcr
testb
ljmp
sar
cli
loop
xchg
filds
lea
out
rcr
int3
stc
ljmp
repnz
clc
test
and
mov
xor
out
divb
iret
bnd
loope
out
sti
call
loop
jmp
out
in
shr
out
sar
fcmove
in
out
lret
lock
cmp
div
mov
int3
out
in
in
test
addb
lock
xlat
fld
ds
and
rcr
add
jmp
xchg
jecxz
jecxz
fxam
jmp
idiv
cli
test
cmp
rcr
jmp
test
sti
mov
enter
vpaddb
cmp
icebp
int
icebp
aad
adc
jmp
jmp
sub
repz
call
loope
ret
fprem
mov
fadd
cmc
aad
out
or
int
jmp
jmp
out
clc
leave
stc
sar
cmp
neg
orl
add
out
lock
enter
out
fstpt
icebp
jmp
test
fcmovnbe
ljmp
divl
jmp
cli
rcr
and
fcomp
mov
std
fisttpl
in
cmc
xor
in
cmc
not
cmp
leave
cmpb
test
ret
shl
jmp
fneni(8087
in
decl
jecxz
cmp
in
xor
cmp
cmp
rol
mov
mov
in
mov
shl
xor
jmp
fucomi
xchg
in
leave
add
in
clc
mov
fdiv
out
out
cmp
fsubr
cmp
iret
leave
in
ret
hlt
xchg
loop
testl
in
xor
cmp
cld
cmp
cmp
fiadds
hlt
ljmp
fdivrp
ljmp
leave
cld
shr
repz
lret
jecxz
aam
aam
out
int3
call
roll
sarb
jmp
xor
jmp
in
out
div
ffree
neg
fiadds
roll
lock
clc
cmp
rol
dec
ret
fdivp
testl
int
iret
out
jmp
aam
lret
shl
out
cmp
aad
sar
jecxz
jmp
fisttpl
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
inc
mov
add
add
mov
or
mov
repnz
clc
in
cmp
div
ljmp
test
xchg
rorl
stc
sti
icebp
jmp
out
leave
aad
leave
cs
hlt
cmp
xor
aas
les
clc
stc
test
cmc
out
in
stc
cmp
cli
cmp
xor
aas
sbb
mul
xchg
sar
std
xchg
repz
ss
shll
jmp
cli
cmp
cmc
xor
fcomip
mov
fucomp
push
aam
xchg
loope
out
fxch
clc
cmc
fdivrs
sti
cmc
jecxz
and
jmp
int3
mov
incb
jmp
jecxz
fmulp
cmc
loopne
loope
rcl
aas
leave
jmp
test
leave
cli
loope
repnz
int3
call
icebp
cmp
cmc
jmp
jecxz
aas
fcom
cmc
cld
ljmp
mov
out
xchg
sar
in
fcomp
out
jmp
cmc
push
stc
hlt
in
xchg
in
nop
fdivr
incl
in
fmul
aaa
sub
xlat
incl
stc
cli
mov
divl
aaa
xor
repz
int
faddp
filds
fcmovu
xchg
out
ror
jmp
fstp
lock
std
out
loopne
not
test
enter
cld
loop
mov
rcr
int3
fcmovnu
aad
out
rol
shl
xor
call
jecxz
out
into
divb
cmp
in
fucom
into
iret
stc
shl
sti
adc
clc
jmp
out
fldpi
int3
or
icebp
out
xor
xor
stc
in
fdivrl
ljmp
not
cli
lret
cmp
jmp
shl
ret
aad
iret
fdiv
fcmovne
mul
ret
std
call
leave
ret
jmp
jmp
cmc
aam
aam
clc
div
dec
ret
sub
ret
jmp
fsubr
flds
icebp
ret
xor
cmp
ss
jmp
xor
ret
call
mov
xchg
shll
aam
fdivr
lret
xor
hlt
xchg
cmp
xlat
out
decl
repnz
fsubr
sarb
imul
fnstcw
fdivrp
ret
jecxz
in
in
xlat
test
repz
iret
iret
clc
xor
int3
fdivs
leave
fdiv
fucomip
cmp
aam
cmp
test
out
in
xchg
lret
mov
stc
lock
cli
into
cmp
cli
cmp
xchg
mov
in
jmp
xchg
repnz
lock
sti
bnd
test
loopne
repz
out
std
in
mov
lock
out
idivl
int3
out
std
hlt
aam
repnz
aaa
cmp
xlat
imul
movb
out
in
das
sar
cmp
enter
fdivp
shl
cmp
out
fdivr
ljmp
in
out
hlt
call
rcr
fnstsw
sbb
lds
test
shl
xor
icebp
fxtract
iret
xlat
fprem
fucomp
aad
jecxz
ljmp
iret
in
jmp
hlt
call
xlat
aas
icebp
ljmp
xchg
in
in
out
ret
ljmp
in
jmp
repz
out
cmpb
in
fisttpll
xchg
fiadds
cld
in
ss
cld
in
fldl2e
cmp
out
stc
std
fstp
enter
std
loope
call
iret
shl
xor
cmp
xlat
cld
xlat
cmc
fcmovnu
in
stc
sbb
hlt
std
aas
jmp
test
cmp
shr
clc
not
call
fdivrp
ljmp
fsub
mov
aam
stc
xlat
mov
sti
lret
xchg
jmp
lret
fcmove
leave
in
fadd
cmc
icebp
into
cli
cmp
mov
sub
in
sbb
xchg
icebp
lock
fcmovnbe
lock
cmp
sti
repnz
aas
call
clc
jmp
xchg
hlt
lret
cmp
cmp
cmp
in
lret
loopne
std
roll
xlat
addb
xchg
jecxz
iret
in
icebp
cld
fnstcw
aaa
cli
hlt
jecxz
xchg
repnz
ret
cmp
cld
fmull
loop
cld
neg
ss
fdivp
cmp
out
aas
cld
mov
lret
mov
xchg
out
shl
xor
aaa
sar
repz
shl
loopne
adc
jmp
in
fcomip
icebp
lock
hlt
repz
cmp
bnd
in
rcr
in
aam
mov
lock
aad
in
xlat
cmp
pop
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
adc
add
add
sub
in
std
rolb
fcmovnu
xor
mov
xor
clc
out
sarl
lret
neg
roll
inc
in
enter
lret
inc
out
xor
in
in
fcomip
or
cmc
in
call
decb
aad
lret
repnz
into
rol
out
repnz
fmul
xlat
ret
sar
xchg
test
in
lret
jmp
xchg
shll
cmc
shll
hlt
out
std
ss
repz
neg
in
in
jmp
test
jmp
ror
fstp
out
testb
incl
hlt
jmp
stc
in
int
repnz
cmp
fsin
aam
rol
in
out
adc
leave
loopne
ljmp
aam
icebp
xor
iret
clc
loop
jmp
fcmove
enter
in
rol
div
in
fdivrs
fldpi
stc
xlat
jmp
repnz
repnz
mov
jmp
shr
mov
into
lret
aad
in
xor
iret
aad
fldz
rcl
shl
icebp
loope
jecxz
neg
std
mov
xchg
loope
hlt
in
loop
hlt
in
jmp
not
cmp
faddp
in
rorl
in
xchg
out
xchg
mov
lret
leave
ljmp
cmp
cmp
cld
mov
mov
icebp
out
in
test
clc
ljmp
jecxz
xchg
in
mov
cli
jecxz
xchg
shl
jmp
lret
xor
cmp
fucomp
int
hlt
ds
lock
fcomi
mov
aad
orl
ret
out
std
idiv
int
cmc
ret
out
xlat
fst
int3
loope
call
out
cs
fdivr
cs
lret
cmp
clc
ret
fcomi
loopne
adc
lret
cli
mov
xor
hlt
jecxz
das
cmp
sti
lock
rcr
stc
std
lret
les
loope
xlat
cs
aam
aad
int3
out
fcmovnbe
loopne
faddp
sar
mov
lret
leave
test
xchg
icebp
out
lret
stc
fldl2e
cmp
cld
lret
lock
int3
fcmovnu
in
out
test
ljmp
mov
into
out
bnd
fcmovne
fdivp
in
cmp
faddp
idiv
jmp
fxch
cld
mov
cli
in
ror
mov
in
int3
iret
cmp
icebp
cmp
shl
int
icebp
sarl
test
lea
out
lock
xor
incb
in
shl
filds
mov
xchg
dec
loop
leave
lret
ror
icebp
dec
fstp
fnsetpm(287
repz
ljmp
out
xchg
in
aam
xlat
xor
int
in
cmp
std
std
loop
sti
test
aad
xchg
incb
repnz
xlat
cli
stc
enter
xchg
xchg
shr
out
into
into
call
sbb
repz
out
movb
out
xor
xor
cmp
cmp
std
stc
roll
in
lret
jmp
nop
orb
out
icebp
jmp
cmpb
aam
aad
aas
aad
repz
enter
in
rorb
in
repnz
fdiv
sti
ss
rcr
fsub
repz
shl
or
int
icebp
fstl
in
shl
fcmovnbe
in
lret
sar
test
shr
test
mov
ljmp
cs
vpsubw
in
ror
out
fnstcw
std
cmc
fsubr
int
loope
into
mov
iret
xchg
xchg
jmp
into
out
out
cli
rcl
loope
repz
cmc
loopne
fucomip
into
sbb
xchg
call
sti
ror
xor
cmp
and
add
jecxz
mov
fadd
jmp
ror
xor
out
shr
cmp
jecxz
sub
nop
out
fists
icebp
fcmovbe
cmp
int
enter
xchg
loopne
enter
sti
decb
nop
in
lret
xor
sti
in
into
xor
shr
loope
iret
repz
jecxz
int
fimuls
out
loop
in
out
fstpt
cmp
ss
jmp
not
call
test
xchg
xchg
sar
lock
fdiv
ret
jmp
fmul
enter
iret
out
cmp
out
mov
in
in
fists
loopne
fdivs
fidivrl
lock
ss
loop
loopne
in
movb
jecxz
mov
xor
xor
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
filds
add
rcl
out
xlat
repz
cli
lock
aad
fsub
aas
enter
div
lret
shr
out
xchg
hlt
xlat
aad
shll
cld
loopne
cmc
fiadds
jmp
repnz
divl
xor
rol
jmp
repz
fildl
fsubr
cmp
cli
into
adcb
in
in
ljmp
fsubr
loop
out
imul
decb
or
shll
xor
iret
in
div
hlt
incl
out
fdivrp
out
out
cli
jecxz
int
jmp
stc
stc
clc
sarb
ret
fcmovbe
shl
out
fucom
int3
ffreep
test
in
and
lock
iret
fidivl
leave
cmp
dec
out
loop
xchg
lds
xchg
mov
sub
lret
cmc
into
repnz
cli
fucomip
aam
cmp
lds
in
xchg
jecxz
mov
out
xlat
aad
aas
cmp
cmp
aad
out
aad
loope
out
int3
call
loope
fdiv
aam
fidivrl
fcom
cmp
cmp
into
in
rcr
stc
fdivr
in
mov
iret
enter
repz
aad
xor
clc
lret
in
cmp
clc
fldln2
cli
loope
fiadds
mov
jmp
iret
lea
leave
out
stc
repz
aam
jmp
stc
sbb
int
incl
cmp
in
ljmp
repnz
adc
cmp
ret
add
repz
int
addb
repnz
loopne
clc
mov
decl
lret
test
divl
out
fsubr
aaa
out
int
rolb
std
sti
call
xchg
icebp
xchg
xchg
jecxz
fsubrp
icebp
cmp
stc
jmp
stc
adc
xchg
ret
call
movl
cld
clc
int3
fdiv
lock
incl
loope
loopne
iret
enter
jecxz
jecxz
aaa
out
stc
xor
jmp
addl
ljmp
xchg
xor
ret
jmp
repnz
icebp
sbb
iret
loope
rcr
clc
xor
flds
or
shr
shl
cmp
enter
fstpt
lock
rcl
in
adc
hlt
out
aaa
fidivrl
loop
rcr
out
loope
stc
ffree
ljmp
loopne
in
lret
aad
int3
ror
ret
xchg
aad
ljmp
lret
call
clc
xor
out
repz
iret
xor
xor
test
fldl
mov
loope
ret
sub
aad
cmp
idiv
adc
mov
mov
fildl
fcomi
test
ljmp
cmp
loop
test
jecxz
aam
xchg
jmp
into
repnz
xor
xor
fucomp
test
into
repnz
test
hlt
xchg
in
leave
jmp
ror
iret
das
clc
shll
aad
in
call
int
xchg
aad
call
mov
fdivrp
mov
int3
shr
cmp
out
icebp
loopne
rol
fld
aas
int
fcomip
repnz
loope
sub
cmp
into
loope
and
out
repnz
enter
jmp
loope
call
xor
xor
cli
xor
cld
sbb
sarl
test
jmp
orb
jmp
cmc
loopne
int3
jmp
cmp
roll
adc
fst
shr
leave
hlt
test
iret
loope
stc
xor
idivb
call
aam
out
aad
cli
cmc
sub
cmp
xchg
into
mov
shl
icebp
cmp
lret
cmp
testl
clc
sti
out
leave
in
xchg
xchg
repnz
hlt
repz
loop
enter
idivl
ret
fdivrp
inc
aas
ffree
lret
std
fsubrp
lret
fstl
shr
iret
idivb
lret
cmc
ret
lock
enter
loope
stc
xchg
nop
xchg
jmp
mov
out
in
aam
cmp
clc
cld
cmp
stc
leave
fmull
rolb
in
aad
icebp
stc
fdivr
in
cld
hlt
jecxz
std
call
shr
into
loop
shl
xor
cmp
fstp
aam
out
cmc
aaa
sub
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
and
add
add
ds
leave
fld
loopne
sub
test
xor
in
rcr
sar
loopne
mul
shl
aad
clc
shl
cli
xlat
mov
test
test
mov
xchg
loop
jecxz
out
dec
cmp
repnz
inc
loope
cld
enter
loopne
xchg
out
cmp
sarl
aam
ret
ret
test
mov
lret
lock
cmp
cmp
shl
aaa
loope
inc
mov
mov
loop
int3
repz
ljmp
aaa
out
testb
sti
nop
cld
mov
repnz
stc
cmc
not
fidivrs
cmp
rcr
cmc
loop
loopne
xchg
lret
into
adc
aam
leave
call
and
aam
aam
clc
in
out
std
enter
xchg
in
enter
lock
rcr
clc
f2xm1
ret
test
sti
mov
cli
std
and
out
jecxz
lds
enter
ds
div
clc
xlat
xlat
cld
jmp
call
lret
jecxz
xchg
leave
icebp
jmp
lock
xchg
loop
cli
jecxz
mov
out
out
shl
repz
fsubr
repz
hlt
rolb
in
mov
nop
ror
xor
aaa
not
sti
out
cmp
xlat
rolb
repnz
out
mov
into
shlb
lret
sti
aad
out
lock
cmc
in
in
and
std
cli
neg
cli
clc
leave
enter
mov
divb
xor
ljmp
cmp
jmp
sbb
out
int
lock
fcomp
ffree
xor
fsubp
cmp
fucomp
mov
mov
out
imull
icebp
xor
out
cmp
xlat
sbb
test
and
orb
into
in
std
jmp
in
enter
sti
loop
lock
rorb
sti
adcb
into
in
sti
aad
out
cmp
cmp
leave
aad
std
sti
mov
ror
mov
jmp
out
rcl
cmc
lock
sti
loop
loope
mov
fidivrs
mov
out
fldl
xchg
iret
shl
in
out
lret
ds
fmul
add
call
in
loop
cld
lock
in
aam
int3
fdiv
cmp
cli
std
into
cmp
hlt
cld
hlt
in
std
filds
testl
mul
vpaddq
icebp
lock
out
sti
leave
xorb
aam
mov
aas
mov
hlt
repnz
ss
clc
aad
rcr
repz
in
icebp
aam
addl
lock
xchg
not
icebp
xor
icebp
cmp
aam
out
flds
lret
inc
mov
shr
jmp
ss
aad
fdivrs
fnstcw
mov
movl
int3
in
out
shl
lret
in
aas
aas
mul
ss
in
out
fcmovnbe
int3
fucom
mov
in
ret
int
cli
clc
xor
repnz
aad
jmp
leave
neg
lock
repz
hlt
jmp
cli
fidivrs
clc
fdivrp
jecxz
repz
lret
mov
lock
ljmp
enter
std
cmc
test
ret
int3
out
in
mov
out
ror
call
loopne
fmulp
jmp
shl
ret
jmp
cmp
int3
frndint
jecxz
ret
out
hlt
repnz
aad
xlat
ljmp
test
ret
call
nop
fmuls
loope
stc
xor
cmp
faddp
hlt
and
sarb
cli
repnz
rorb
in
xor
aad
aaa
ror
rol
cld
sbb
loop
call
int
xor
ret
out
std
sti
stc
fcmovnb
cld
rolb
out
rolb
call
std
xor
jmp
in
sbb
mov
ljmp
fst
aad
rol
into
int3
cmp
ljmp
xor
jmp
sti
mov
loop
xor
cmc
out
fnclex
stc
sar
out
leave
fcompp
nop
out
inc
inc
loopne
test
or
adc
mov
mov
jmp
lret
ror
rcr
lret
fistl
ss
filds
jle
add
sbb
rcl
in
xor
repz
std
aas
fidivrl
shl
repz
cmp
mov
fdiv
jmp
sub
in
fxch
das
stc
aam
int
fildl
clc
ret
cld
ret
int3
loope
clc
icebp
test
in
call
in
imul
cli
out
xor
cmp
repnz
loopne
fucomp
cld
in
into
test
das
xlat
cli
enter
loope
rolb
testl
in
jmp
ss
stc
out
int3
cmp
sarl
out
in
add
fdivrp
fimull
into
aam
sti
fdiv
cmp
repnz
repz
sti
fisttpll
or
out
ljmp
cmp
into
test
fcmovu
sti
mov
jecxz
in
or
iret
test
fdivr
xlat
loop
xchg
std
hlt
fcmove
xchg
icebp
loopne
test
cs
repz
int
imul
fcom
shl
movl
mov
xchg
ljmp
stc
aaa
fldl
xlat
jmp
ljmp
mov
bnd
ljmp
shlb
repz
aam
std
fsubrp
and
loope
in
xchg
mov
jmp
ljmp
cmp
cld
aad
stc
out
in
lret
in
add
out
xchg
mov
jmp
cmc
in
call
rcr
ret
in
clc
cmc
fcmovu
test
call
xlat
repnz
jecxz
out
cmp
loope
hlt
aas
in
and
fadds
cli
stc
out
decb
jmp
fstpt
in
shl
fdivrs
stc
xor
ror
aad
in
int3
rclb
lock
cld
idiv
hlt
rcl
repnz
stc
fimuls
shl
ss
xor
sti
addl
in
sti
int3
out
and
out
not
into
out
cmp
fidivrl
sar
flds
hlt
mov
cmp
xchg
xor
sar
fcom
lock
in
xlat
rol
xor
jecxz
cli
frndint
cld
out
jmp
ret
into
out
xor
sar
aaa
iret
lret
test
ret
div
mov
fsub
jmp
in
repnz
addb
in
out
call
cld
or
sar
cmc
xchg
mov
call
sarb
lock
cmp
cli
hlt
rcr
fdivrp
call
fdivrp
leave
mov
int
shr
aad
ror
loopne
ret
out
call
loopne
leave
sbb
hlt
jmp
cmc
repnz
aam
cli
jmp
cmp
fucomp
repz
fcomp
hlt
leave
out
mov
fmulp
std
xchg
jmp
aad
sti
int3
std
cli
cmp
imul
in
icebp
and
hlt
ljmp
lock
fists
cmp
test
cli
out
rcr
xlat
fsubp
cmp
or
in
repnz
out
nop
mov
hlt
call
int
fincstp
into
aas
ds
jecxz,pt
xchg
sbb
iret
out
jecxz
xchg
repnz
rcl
cmc
cmp
std
aas
xor
cmp
stc
mov
out
loope
mov
int
into
shl
jecxz
cld
xor
neg
repnz
rolb
repnz
and
mov
test
aas
jecxz
icebp
lock
not
ds
cmc
icebp
repnz
mov
xlat
sti
icebp
in
decl
out
cmp
out
into
clc
in
sbb
lock
sbb
mul
mov
nop
hlt
call
enter
out
fchs
sti
hlt
cmp
fnstcw
cld
jecxz
ret
mov
repz
out
call
xor
cmp
aam
loope
out
ret
sbb
roll
fcmove
fisttpll
leave
ret
fcmovb
xlat
clc
call
faddp
test
fadd
mov
jmp
iret
loopne
clc
xor
repnz
hlt
sar
stc
cmp
ret
or
sti
in
fldl2t
test
out
fucom
cli
fcomip
out
ret
ljmp
xor
xlat
ffree
and
out
cld
int3
in
xchg
in
aam
stc
fdivs
aas
ss
int
out
mul
and
loopne
test
stc
xchg
clc
call
divb
shr
lds
add
enter
int
fnstenv
hlt
aam
xchg
add
add
aad
fidivrs
clc
sar
mov
sar
ffree
fsubp
xchg
xchg
out
mov
in
sub
mul
shl
sar
rcl
ds
mov
mov
adc
aad
xor
out
in
fcmovu
xor
fdiv
int
hlt
iret
aad
sti
rolb
test
leave
repnz
xor
int3
fcomi
rcr
cmp
fiadds
cmp
fsubrp
repz
lret
aaa
xor
hlt
cmp
ds
cmp
clc
test
and
in
cmp
loop
test
lea
cmc
out
xor
rcl
ljmp
jmp
in
nop
out
sub
sub
int3
fdivrl
cmp
in
iret
loop
in
cli
fidivrs
lds
loope
cs
into
repnz
ds
hlt
in
aam
into
shr
jmp
stc
fucom
int3
sti
orb
cmp
in
fsubrp
enter
test
cmc
aas
orl
jecxz
out
jmp
jmp
int
cmp
fdivrp
rcr
shl
fst
fucomp
xbegin
rcr
xchg
in
mov
xor
cmc
int3
lds
sti
idiv
stc
shl
sar
flds
out
int
out
mov
xor
xor
cmp
cmp
clc
cmp
test
in
call
repz
int3
jecxz
ror
out
fucomi
fnstcw
jmp
cmp
loop
aam
vcvtpd2dq
cmp
in
hlt
repnz
in
cmp
ljmp
ret
out
fcom
int
fstl
in
aad
dec
clc
idiv
lock
ret
mov
and
xchg
shl
xor
rcr
cmp
aad
jmp
fcmovbe
rcl
shr
leave
not
jecxz
in
out
fucomip
hlt
jecxz
out
cmp
ss
iret
cmp
loop
fdivr
xlat
ljmp
nop
icebp
test
enter
rcr
fucom
repz
cli
fyl2x
test
sti
cmp
sti
xchg
shr
in
xlat
ror
hlt
in
icebp
ror
ds
in
cmp
sbb
aad
mov
stc
xchg
mov
das
ss
cmp
clc
fisttpll
les
mov
xor
clc
icebp
sti
leave
sarb
loope
cli
sar
repz
stc
mov
cld
lret
loopne,pn
icebp
ss
shl
int3
xor
aas
loope
fdivr
in
lock
xchg
in
shll
out
cld
sti
fdivp
ror
fiadds
addb
cld
mov
int
xor
xor
fmul
ss
or
fdivrp
cli
fldl
out
fldl2e
in
out
xchg
in
lret
fcmovnbe
cmc
shr
loope
shl
test
hlt
iret
test
aam
test
loopne
xchg
nop
shr
shr
clc
test
les
out
cmp
fsubrp
loope
fld
mov
xor
out
xorl
xor
in
cmp
fdiv
loopne
repnz
and
idiv
mov
in
mov
ret
lret
int
sar
rcr
in
lret
cmc
out
test
and
xchg
repnz
into
mov
jmp
out
rcr
loope
cmp
repnz
flds
loopne
loop
leave
lock
jecxz
ljmp
in
cli
cmc
not
fadd
mov
test
jecxz
div
rcr
ror
clc
ds
cmp
addl
stc
in
loope
call
in
xchg
aad
loopne
in
in
xor
clc
aas
flds
mov
loopne
out
hlt
adc
repnz
out
int3
cmp
iret
ds
loopne
aad
popl
mov
in
in
fadd
xor
cmp
int3
xlat
icebp
loope
cmp
div
test
sub
repz
aam
fbstp
aam
in
mul
out
cmc
div
push
lds
test
leave
out
out
out
xchg
int3
loope
aam
in
xlat
sar
xlat
fmul
xlat
xlat
rol
aas
cmp
aam
ffreep
mov
lret
sub
in
das
stc
int3
shr
cmp
jmp
stc
cmc
cmp
ljmp
jmp
mov
ror
cmp
rcr
cld
rcl
std
call
ret
icebp
sti
repz
in
mov
sbb
jmp
ret
fmul
fcom
fdiv
jne
sahf
ret
cmp
xor
add
add
cld
ljmp
loopne
hlt
rol
repnz
sarl
iret
call
vpsrld
shl
fsubr
mov
iret
mov
clc
xor
cmp
loop
out
addl
leave
in
xchg
cmc
shr
call
shl
into
cmp
fcom
rcl
test
repz
iret
shl
lea
idivb
cmp
cmp
icebp
mov
mov
mov
in
adc
icebp
xor
fcmovne
cmp
ss
add
icebp
shl
ffree
clc
sti
ret
testl
repnz
xor
das
xor
lock
sar
fsubr
mov
sub
test
loopne
loope
in
ss
cld
ror
fnstcw
in
repnz
mov
stc
leave
test
loop
call
in
test
idiv
loop
cli
ror
in
rcl
lret
fld
xlat
rcr
xchg
hlt
leave
fdivr
in
ljmp
shlb
in
out
jmp
fucomp
cli
cli
in
xchg
xchg
rcl
mov
sti
lock
xlat
into
testb
stc
decb
mov
jecxz
shll
lret
stc
cli
leave
idiv
fcomi
sti
iret
xchg
decl
in
fiaddl
jmp
clc
fadd
lret
loope
sarb
test
bnd
std
in
xchg
std
xchg
out
fildll
xlat
leave
cmp
out
hlt
lret
fstp
xlat
loope
cli
mov
in
loop
xor
leave
ret
ss
fmul
ds
rcr
into
imul
add
aad
mov
mov
cld
into
mov
rorb
jmp
cld
shr
in
out
neg
out
fxtract
out
xchg
test
leave
into
rcr
clc
cmp
hlt
cmp
clc
shr
aam
mov
incl
lret
loop
out
cmc
xor
sti
cmp
in
rol
ret
leave
fildl
repnz
cld
int
cmp
and
out
not
fiaddl
loope
in
lret
in
ljmp
cmp
sti
aas
into
hlt
cmp
repnz
loope
enter
ljmp
rol
lret
int
stc
cmp
cli
shr
mov
xlat
test
leave
test
int3
int3
iret
rol
fsub
lock
out
in
std
cmpl
ret
in
ret
shl
xlat
iret
shl
fisttps
xor
sar
clc
cld
ljmp
out
std
jecxz
in
ljmp
sub
fldln2
repz
sar
fcmovnb
shl
in
fcmovne
in
icebp
int3
int3
xchg
xchg
loope
xor
fcomi
cli
sti
fsubrp
into
out
icebp
ret
cli
jmp
ljmp
loop
aad
xor
xlat
cmp
fcmovnu
cmc
lock
and
fcom
out
in
test
xchg
out
rcr
ss
jmp
aam
dec
fdivr
filds
enter
filds
shl
mov
mul
int
sarl
cmp
cmp
loopne
test
adcl
sar
repz
leave
fadd
hlt
lock
fadd
mul
leave
clc
jmp
shl
xchg
jmp
in
in
int
cmp
aad
ret
call
test
sti
in
cmp
fcmovnu
lret
lock
cmp
repnz
in
fsubr
rcl
cld
xchg
cld
fucomp
ljmp
repnz
sti
aam
cmp
cli
fucomp
cmp
fmull
clc
loope
loopne
shl
vpshld
rcl
out
jmp
int3
stc
in
mov
ljmp
xchg
int3
int3
call
imul
aam
lret
test
stc
cli
std
fcmovnu
xchg
cld
adcb
int
fidivrs
out
out
repz
aas
vshufps
ret
in
into
fisttps
xorb
out
cmc
in
aad
aad
add
aam
loop
fimuls
clc
fcmovu
repnz
aam
lret
rol
sub
shl
in
cld
fcmovb
shl
fdivr
test
clc
call
loop
xor
ss
call
in
test
test
testb
notb
icebp
loope
cmc
int
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
cmc
out
fdivr
cmp
cmc
loop
fiadds
addl
std
mov
jmp
test
cmc
xor
fdivl
fmul
xor
out
loope
ds
cld
test
rorl
shl
jmp
std
cld
ljmp
and
repnz
test
jecxz
out
cld
ljmp
call
cmp
repz
rol
inc
sti
cmp
mov
test
int
shl
ret
xor
enter
aas
cmp
loop
out
aad
in
mov
out
into
iret
out
loopne
xchg
int3
das
stc
lock
aam
out
loop
fst
test
sti
clc
leave
fcomi
loop
into
jecxz
test
icebp
shr
in
fadd
in
in
enter
cmc
cmp
fiadds
xlat
or
orl
xor
in
cli
stc
shl
rol
into
filds
cld
fcmove
rorb
div
out
xor
into
cmp
aas
cmp
fsubrp
loope
into
cli
cmpb
lret
loop
lret
repnz
dec
ljmp
fxch
int3
cmp
cmc
loopne
cmp
out
mov
out
call
loope
jecxz
cmp
xor
int
cmp
cmc
repz
neg
loopne
fsub
cmp
cs
cld
ss
xlat
fsubr
hlt
cmp
sar
cli
ret
lret
filds
mov
rclb
ret
clc
cmp
cmc
cmp
ret
into
cmp
stc
fdivrp
aad
aad
fldl
std
xchg
loope
repz
jmp
xlat
ds
std
neg
out
xor
enter
mov
out
in
mov
jecxz
out
cmp
aas
in
int
ds
cld
fcmovnb
roll
out
jmp
lret
fsubr
xchg
leave
xor
xor
iret
aam
fcmovbe
repnz
fdiv
vpaddusw
jmp
out
out
div
cld
leave
shl
test
icebp
fildl
mov
std
lret
out
jmp
jecxz
call
leave
rcl
shl
add
mov
xchg
xchg
sti
movb
cmp
fcmovnu
lret
ds
cmp
loopne
repz
dec
cli
loope
out
xchg
nop
dec
in
lret
shl
fistpll
lock
iret
loop
test
jecxz
fiadds
nop
in
fcoml
lret
ror
iret
test
lock
ret
shl
cli
cld
ret
xchg
mov
loope
shl
shr
loope
into
repnz
std
out
ss
roll
lea
out
fldz
out
div
rcr
clc
hlt
xlat
fldpi
iret
std
in
jmp
sbb
shl
test
call
neg
int3
cmp
cmp
cld
out
jmp
lds
decl
in
xor
cmp
ret
cmc
xor
fst
xlat
jmp
cld
ljmp
xorb
aam
icebp
icebp
iret
icebp
fdiv
cmc
aad
cld
incl
xlat
xlat
icebp
lret
in
in
icebp
lea
xor
lret
cmp
cli
ret
or
cmp
loopne
ret
addl
icebp
lea
fcomi
lret
testl
leave
cmc
out
mov
int3
repnz
sbb
aam
in
cmp
stc
int3
cmp
in
inc
loop
aam
xlat
aad
fucomp
out
into
mov
lret
cmp
aam
sarl
fld
rol
xchg
mov
jecxz
in
int3
shl
call
cmp
idivl
cli
incb
xchg
lret
icebp
int3
iret
rolb
cmp
neg
loop
cli
lock
xchg
repz
xchg
repnz
ror
in
leave
hlt
loope
sti
idiv
loope
aam
aam
repz
int
loop
dec
mov
into
int
jmp
fst
test
aas
sti
loopne
movl
aad
ror
xlat
cmp
int3
f2xm1
cmp
repnz
repz
in
out
int3
nop
fdivrp
repnz
jecxz
cmp
sti
fmulp
xor
sar
jecxz
bnd
loope
iret
into
loop
incl
idiv
cld
fdiv
int
repz
sarb
fdiv
in
fildl
fdivrp
fcmove
test
xchg
das
xor
xor
fucomip
clc
aam
cli
cmp
mov
push
add
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
add
mov
add
add
out
addl
std
call
out
stc
xor
lret
loopne
sarb
std
icebp
ljmp
in
iret
fdivp
xchg
out
int
cld
in
icebp
into
lret
ror
addl
stc
or
fdivp
sar
into
repnz
in
in
fnsave
rcl
cmp
cld
xchg
fsubr
out
mov
mov
divb
into
in
iret
sarl
cld
ffree
incb
mov
int
nop
mov
xchg
nop
sbb
lret
cmp
ret
shr
vcvtpd2dq
xchg
jecxz
loope
fucomip
loope
shl
int
xor
icebp
iret
fxch
aas
aad
in
rol
repz
shr
fstp
notl
jmp
int
leave
out
leave
aaa
xor
ds
rcl
jmp
mul
fcmovne
into
mov
or
jecxz
fdivs
cmp
fldln2
loop
fdivrl
loope
fisttpl
out
jmp
xchg
fdiv
lret
cli
xlat
clc
fidivrl
test
cmc
xlat
out
rcr
int3
rcl
loope
in
out
lds
cmp
call
cld
cmp
fcom
loope
mov
jmp
clc
jmp
lret
mov
ret
cld
out
fcomp
ds
clc
hlt
rol
iret
ret
aam
test
std
fisttpll
test
enter
cmp
std
sbb
in
rolb
out
jmp
ror
ljmp
leave
icebp
ss
roll
fcompp
test
in
fisttps
jecxz
enter
fcmove
div
out
cmp
ffree
out
cld
faddl
lock
in
aam
divb
xor
jmp
iret
hlt
rcl
fnstsw
fdiv
out
enter
ljmp
sub
loop
xlat
iret
out
sti
cmp
fsubr
test
ret
rcr
stc
fcomp
mov
test
cld
mov
ror
cmp
call
cmc
sar
cmc
not
hlt
mov
out
cld
rolb
rcr
lock
cmp
fmul
shl
into
test
fcomi
cld
add
iret
in
out
into
in
icebp
xor
lock
fmul
in
iret
icebp
fcmovbe
fcmovnu
repnz
out
mov
xchg
jmp
roll
jecxz
jecxz
cld
icebp
fdivrl
cld
cli
ret
cmp
in
in
rolb
out
int3
sti
lret
in
aam
jmp
fdivrs
ret
clc
div
aas
sbb
jmp
xchg
xor
hlt
stc
ss
aad
sar
fadds
jmp
fcomip
fimuls
and
aad
iret
cmp
shr
lock
sub
lock
stc
out
jmp
clc
int
int
jmp
ret
fidivrl
xor
into
aad
stc
jecxz
ds
loop
repnz
orl
bnd
aad
in
ds
icebp
ret
rol
xchg
lret
incb
xchg
xor
iret
fcmovne
xlat
repnz
aam
mov
filds
mov
lea
neg
repnz
sti
int3
cmp
fst
sti
jecxz
jecxz
mov
int3
or
fldl
xchg
in
xor
cmp
aam
cli
cmp
int3
test
loope
test
lret
filds
hlt
rorl
repnz
jmp
out
fcomi
sar
xor
sar
fcomi
mov
test
enter
xor
fbstp
aad
out
loopne
in
test
in
in
and
jecxz
repz
lret
jecxz
lret
rcl
stc
cmc
jecxz
lock
xchg
int3
stc
and
ficoml
out
lret
jmp
aad
ljmp
rol
cli
ret
out
out
rorb
ss
into
fadds
shl
xchg
cmc
out
cmc
int3
jmp
out
rcl
into
xor
fcmove
neg
stc
cmp
out
into
cmp
shl
lret
in
iret
rcll
cmc
ds
cli
in
cmp
hlt
flds
mov
fdivrp
int3
shrb
hlt
in
shl
out
repnz
iret
sarl
rcr
ljmp
orl
call
icebp
hlt
clc
enter
fptan
lock
leave
jmp
mov
xor
add
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
add
mov
cmp
add
add
xchg
lret
not
sti
adc
in
int3
hlt
std
aam
lock
int
fisttps
in
vpand
std
stc
xor
sar
loope
loopne
movb
cli
lock
mov
in
fimuls
hlt
aad
cmpl
loopne,pt
in
in
loop
out
adcl
fyl2xp1
in
repnz
int
rcr
mov
repz
vpaddusb
lret
xor
hlt
lret
std
aas
jmp
add
call
icebp
out
fstp
rcl
sub
xor
in
ss
jmp
fdivrl
fisttpll
and
neg
lret
repz
xchg
aad
shl
xor
cmp
fst
cmp
hlt
sbb
stc
xchg
repz
lret
sti
out
int3
iret
orl
cli
fmul
sar
ds
les
hlt
test
fmull
ljmp
leave
iret
shl
icebp
rol
adc
xchg
out
rorl
in
int3
iret
idivl
loope
ljmp
aam
int3
int3
leave
in
mov
orl
leave
std
cmc
into
out
in
fldl
test
xlat
sti
jmp
mov
lock
cmp
enter
stc
leave
dec
fstpt
xchg
rol
fmuls
mov
clc
call
repnz
int3
sbb
jecxz
rol
mov
loop
mov
in
jmp
mov
shr
xor
idiv
fucomi
lock
shl
test
fcomp
testb
jmp
in
into
adc
cmp
iret
rcr
out
cmpl
xor
xlat
loopne
fdivr
jmp
loop
out
cmp
icebp
enter
test
fld
cmp
inc
fdiv
std
loopne
movl
jecxz
fcmovnb
aas
xlat
xlat
cmc
repz
jecxz
in
sti
test
xor
jmp
out
int3
repnz
iret
enter
shl
iret
in
add
filds
test
int
ljmp
fsubp
repz
cld
fnstsw
hlt
test
repz
out
fdivr
sub
xor
fcom
fldln2
cli
pushl
jmp
ror
test
enter
out
xchg
xchg
sbb
lret
repz
sti
idiv
fdivr
std
call
loope
dec
in
incb
out
cmp
lret
ror
int
cmp
aas
iret
lock
test
mov
loope
mov
shl
cmp
in
stc
in
incl
call
leave
in
into
aam
xor
into
not
ss
out
cmp
fisttpl
ljmp
mov
mov
fcom
ds
shl
testb
std
in
fstp
out
std
iret
shr
loop
vpaddsw
cmp
cmc
in
cmp
xlat
aad
in
std
in
jmp
icebp
shl
int
ror
int3
out
hlt
call
aas
cmp
out
xchg
cld
ret
ret
mov
in
les
shlb
dec
xlat
or
iret
test
hlt
in
enter
xchg
hlt
call
xor
fmul
ljmp
rcl
and
repnz
out
fucomi
out
lock
fdiv
leave
sti
stc
sub
les
jecxz
out
fstp
ror
sar
test
xor
fld1
out
cmp
cmp
cmc
neg
shl
cmc
leave
fdivrp
aas
inc
loopne
in
out
out
xor
jecxz
xor
neg
fxch
cld
out
cmp
xlat
hlt
call
test
jecxz
repz
leave
aad
leave
call
cmp
rcr
ffreep
ret
lret
mov
mov
sti
nop
sti
out
decl
sub
jmp
into
fcomip
clc
and
leave
in
fucom
in
loop
repnz
out
jmp
in
aad
loopne
fucom
fadd
and
iret
std
fdivp
rclb
ret
ffree
out
out
repz
cmc
fucomip
cli
in
in
mov
iret
int
inc
shrb
test
in
out
loope
aas
rol
call
in
movb
in
jmp
shl
cmp
movl
jmp
ret
int3
rcl
ret
fldl
loopne
push
add
leave
rcl
fildl
leave
jmp
in
fldl
mul
hlt
cmp
leave
enter
ret
jecxz
xlat
clc
jmp
orb
sub
shl
jmp
aaa
fnstcw
sbb
loope
ds
cli
rcl
in
jecxz
loopne
jecxz
lret
in
das
xor
out
int3
fsubr
shl
and
testb
out
fldl
lock
in
stc
xor
int
aaa
div
jecxz
ret
lret
mov
repz
ror
iret
ror
in
fcmovnbe
ror
xlat
out
into
icebp
sarl
mov
sub
mov
xchg
xchg
icebp
rol
lock
fcos
ljmp
sar
in
faddl
aam
aad
lret
ror
aaa
in
ss
cmp
addl
ljmp
shr
mov
aad
lock
leave
into
fmul
icebp
not
ljmp
sbb
repnz
mov
int
lock
icebp
xor
cs
neg
int
ds
hlt
loope
loope
in
loope
std
in
fstp
iret
shl
fdivp
repnz
xlat
vpminub
fcmovu
shl
xlat
loop
ret
fnsetpm(287
into
loope
test
xchg
icebp
jmp
ljmp
lock
jecxz
call
fcmove
mov
in
out
int
icebp
iret
imul
icebp
hlt
stc
std
aam
in
loopne
cmp
addl
xlat
xlat
call
rclb
repnz
shr
jmp
repnz
mov
out
jmp
call
icebp
repz
lret
aas
cmp
fmull
imul
out
loop
lret
in
xor
loope
leave
fldlg2
clc
in
in
loop
cmp
loopne
rcr
enter
out
cld
jecxz
lret
iret
xchg
rol
sub
shl
repnz
lret
aad
cmp
int
addb
sti
in
lret
in
shl
cmc
enter
xor
out
dec
jmp
rolb
xchg
xchg
sub
sar
hlt
repz
lock
loopne
roll
idiv
fsubp
sti
in
repnz
aad
aam
idiv
inc
aam
cmp
roll
aas
jmp
out
int
pop
shl
jmp
aad
xor
shl
fcomip
ret
test
out
lret
in
mov
aad
out
lock
fnstsw
int3
out
cmp
loop
cmp
incb
fstl
test
out
cmc
stc
xor
out
loopne
out
loopne
jmp
lea
ljmp
fidivrs
fldlg2
cld
iret
mov
cld
stc
out
xlat
clc
mov
loop
in
clc
lret
cmp
shl
leave
sarb
iret
shl
hlt
sti
in
repnz
call
clc
enter
int3
xchg
xlat
xor
out
xor
lock
in
repz
cmp
cli
not
shl
jecxz
cld
clc
clc
stc
xchg
aam
in
iret
fisubrl
repnz
cmp
cmpl
mov
ret
std
fsubr
fisttpll
call
or
clc
loope
sbb
lret
in
mov
repz
aad
cli
cmp
rcr
repz
in
xchg
filds
fisttpll
sti
ljmp
repnz
clc
xlat
aas
loope
cli
mov
mov
xchg
ret
int3
in
xor
ss
fucomi
cmp
cli
rol
out
jmp
out
sbb
int
addb
xor
shl
in
aad
repnz
icebp
lret
xchg
out
out
aad
out
jecxz
cmp
out
idiv
ret
rcl
cmp
test
loop
cmp
loope
cld
xchg
xchg
xor
int
ss
leave
repz
and
lds
mov
sub
stc
fiadds
adc
xor
lret
repnz
lock
out
orl
lret
mov
dec
xor
ret
enter
std
cld
xlat
repnz
lds
aam
into
lret
xchg
leave
jmp
das
out
in
repnz
div
repz
addl
ljmp
xchg
xchg
xchg
mov
les
fidivrs
cmp
in
cmp
cmc
rcr
in
clc
test
inc
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
iret
ljmp
add
clc
out
fcmovne
loop
sub
xor
aam
xor
cmp
shr
out
xchg
clc
jmp
shr
in
rclb
out
div
cmp
addb
sti
orb
into
xchg
mov
in
lret
in
in
aad
inc
cli
rcr
ret
cld
jmp
mov
xchg
shr
hlt
into
bnd
cld
call
cld
lock
loopne
enter
loopne
fsts
in
xchg
lret
xor
lock
loopne
and
mov
rcr
std
dec
lock
adc
sarl
in
xlat
fdiv
lret
shl
out
repnz
cli
xchg
filds
cmp
into
das
into
fdiv
xor
cmp
loope
out
cmc
adc
in
loope
fdivrs
leave
jmp
sti
ror
int3
iret
jmp
fbstp
repz
std
cld
jmp
int
cmp
xchg
icebp
ljmp
aam
jmp
loopne
loop
lds
xlat
jecxz
std
or
sub
call
fmul
jmp
div
loop
fnsetpm(287
testl
ror
rol
in
hlt
repnz
fcomp
std
into
fnstsw
loop
enter
clc
fcmovnu
rcr
out
xorb
ret
out
int3
fdivp
fidivrs
cmp
xchg
rol
fcom
ljmp
mov
addl
fcmovnbe
cld
out
cmp
loopne
test
lock
decb
in
std
lret
aam
int
cmp
aaa
lret
ror
idivb
fst
xchg
stc
call
lea
aam
into
int
cmp
imul
ffree
loope
cld
in
mov
ret
mov
xchg
in
int3
out
hlt
cli
repnz
xor
sbb
fisttpll
lret
out
out
into
shl
cmp
xor
stc
and
lock
jecxz
sti
loope
int3
leave
icebp
sub
iret
repnz
aad
fcompp
fmul
inc
xchg
ret
out
movb
cmc
lea
les
xor
fdivrl
int
and
lock
xlat
mov
fsubp
jmp
mov
not
xlat
clc
aam
in
xor
aad
or
hlt
test
jecxz
fisttps
jmp
jecxz
xor
call
sti
cmp
ror
jecxz
cld
mul
ljmp
jecxz
in
iret
repnz
shl
int3
cmpb
roll
mov
std
mov
mov
lret
in
cmp
int3
xlat
int
cmp
sti
cli
repz
sti
rcl
ljmp
cld
icebp
mov
mov
in
out
xor
aam
stc
test
out
cmc
test
sbb
testl
les
aam
int
sar
fnstcw
out
test
mov
testb
out
int3
xor
xor
hlt
cmp
xor
fnstsw
not
ljmp
mov
in
lret
xlat
rcr
shll
in
shl
sub
ret
fdivr
and
test
les
xor
cs
icebp
clc
fcmovbe
ror
add
jecxz
stc
out
sti
in
addb
aad
lret
ds
fdivr
shr
in
ret
call
cld
out
out
out
fsubr
shl
cmp
in
fildl
add
xchg
into
xlat
mov
or
xor
cmp
int
repz
cmp
cmp
jmp
cld
fyl2x
std
in
cli
xchg
hlt
in
loop
xor
repnz
sarl
in
int
cli
iret
in
mul
aas
ret
call
jmp
lret
ret
sti
cmp
out
lret
cmp
adc
in
mov
sti
xchg
cld
xchg
jecxz
out
fstpt
fdiv
int3
ss
test
cli
out
fmuls
rolb
ret
cmp
xor
cli
cli
ljmp
decb
std
clc
enter
in
loop
lock
out
repnz
call
in
cmp
sti
cmp
mov
lret
cli
and
repnz
out
fcom
out
std
out
fdivp
hlt
lock
shl
clc
rcr
xchg
loopne
std
lock
fsubrp
repnz
movl
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
out
and
jle
add
in
leave
std
sarb
rol
rorb
mov
test
loope
test
ss
mul
lock
xor
cli
out
aad
enter
leave
jmp
test
shr
test
fdivs
repz
sti
fstp
cmp
addb
and
cmc
jecxz
ror
rcl
out
out
cmp
cmp
aas
out
call
in
out
mov
lret
in
not
ror
xor
enter
cli
icebp
loopne
loope
repnz
in
in
jmp
addl
iret
jecxz
fyl2xp1
loope
in
incl
fsubrp
shl
into
jmp
loop
out
lret
cld
cmc
hlt
xlat
aam
out
xlat
cmp
sti
and
aas
clc
mov
xchg
int
rol
cli
into
xor
fsub
sarb
ffreep
out
loope
std
enter
mov
xchg
aam
repz
rcl
int3
hlt
int3
loop
aas
loope
fxam
clc
jmp
int3
test
in
leave
frndint
xor
iret
cmp
clc
test
incl
rolb
rcl
aaa
fdivr
out
in
fmulp
out
xlat
lock
xlat
test
fcoml
int3
ljmp
into
xor
xchg
test
out
mov
jmp
hlt
out
xor
sbb
rol
stc
std
fucomi
int3
movb
xchg
int3
in
aad
aaa
out
stc
int3
ss
loopne
fcom
loope
mov
xlat
in
cmp
cmc
addb
xor
jmp
cld
cmc
out
cli
aam
out
out
jmp
rcr
aam
ss
out
xor
leave
in
cmc
test
fnstsw
ds
in
jmp
fst
jmp
in
jecxz
ror
stc
int3
not
out
lock
out
mov
lret
test
nop
loop
out
xlat
clc
stc
out
sar
sti
icebp
in
out
xchg
mov
leave
int
call
hlt
xchg
fmulp
call
cld
imul
rcr
ret
xor
int3
out
call
nop
jmp
fdivrs
aam
hlt
lret
std
sarl
out
hlt
fcmovnb
testl
cs
jecxz
jecxz
stc
hlt
not
fxch
int3
cmc
xlat
jmp
fimuls
mov
rcl
fdivs
out
in
iret
xor
shlb
std
cmp
lock
loop
ljmp
mov
sub
xlat
xlat
sti
in
ss
ss
in
sar
test
fcmovb
faddl
lock
ror
out
xor
stc
out
out
clc
xlat
sti
jecxz
iret
cld
test
cld
loope
fcmovne
mov
lock
iret
out
fsub
ljmp
out
aas
ret
clc
aam
loope
lret
into
in
iret
rol
xor
int
int
stc
cmp
cmc
out
incl
jmp
jmp
loop
lret
ss
hlt
cmp
aam
cli
fmuls
clc
out
jmp
repz
hlt
in
out
into
lock
cmp
cmp
hlt
cmp
mov
test
clc
cld
rolb
test
int3
sarb
iret
cmp
imul
test
neg
icebp
call
mov
int3
out
mov
jmp
in
cld
div
repnz
neg
fcomip
out
mov
idiv
mov
call
lret
repz
leave
testb
jmp
mov
nop
jmp
int
lret
lock
imul
iret
addl
aam
lret
loop
test
out
xor
ss
fmul
in
test
mov
aam
cld
lds
fucom
xchg
enter
shlb
call
cli
cmc
lock
mov
in
jmp
mov
push
out
in
into
jmp
mul
jmp
xor
stc
fdiv
aad
out
ror
cli
std
fxch
sti
mov
into
cld
out
ljmp
fidivs
cld
cmc
int
iret
fdivr
ljmp
xchg
out
divb
repz
stc
hlt
cmp
sub
in
cmc
lea
mov
out
out
jmp
cmc
into
iret
ljmp
cmp
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
adc
add
add
ret
out
imul
in
mov
fmul
leave
sar
fcmovnu
lock
jmp
repz
cld
div
ret
incb
nop
ljmp
das
in
enter
dec
lret
sar
call
faddp
jecxz
icebp
cld
std
xor
out
in
ror
ljmp
xchg
repz
test
fdivr
xchg
mov
jmp
cli
jecxz
in
cmc
out
shr
loope
fsincos
in
xlat
div
mov
ljmp
int3
enter
cld
loop
cmp
loope
aam
or
fcmove
orl
jmp
les
shr
in
lret
rcl
cmc
hlt
test
mov
out
mov
iret
mov
xor
fdivrl
stc
repnz
shl
ret
fildl
call
sti
cmp
in
jmp
into
mul
out
rcr
orb
in
ljmp
in
cli
test
cmp
xlat
out
rcl
cmc
adc
jmp
and
or
fdivs
div
faddp
std
aas
cmc
lds
fcmovnu
cli
mov
incb
loope
out
repnz
lret
idivb
loop
fcom
aam
lret
sbb
call
call
ljmp
rolb
jmp
int
faddl
xlat
out
xor
stc
loopne
cmp
test
xchg
or
out
enter
xchg
aaa
neg
icebp
das
fidivs
cmc
xlat
test
hlt
xchg
jecxz
fadd
xchg
fdivrp
enter
loop
test
in
out
fnstsw
addb
xchg
ret
aad
mov
test
repz
sub
icebp
cli
lret
aaa
cld
repz
hlt
out
fsubrp
loop
xchg
std
iret
mov
xor
call
iret
leave
int3
fucomi
loopne
std
fildl
in
xchg
loop
in
xchg
ret
xor
fstpt
neg
ss
clc
cmp
cmp
rcr
aam
xchg
in
xchg
idiv
clc
out
int3
repnz
clc
aas
ret
out
repz
and
out
sti
test
lea
in
int
aam
cmp
fucom
cmp
fchs
cld
fisttps
mov
out
test
shl
loopne
ret
stc
out
in
out
fsubr
icebp
aam
jmp
loopne
sbb
mov
xchg
sti
lret
in
out
lret
mov
fsub
xor
xor
jmp
icebp
fdiv
test
call
test
int3
cld
std
mov
hlt
ljmp
repz
jecxz
ret
hlt
cmp
out
stc
ljmp
loopne
leave
into
idivb
clc
jmp
aam
cmp
faddp
sti
xacquire
loopne
xor
int3
jmp
fst
shl
in
jecxz
fxam
loope
incl
out
adc
sub
std
lret
clc
int
test
icebp
fstp
aam
mov
in
test
call
iret
xor
icebp
ss
stc
int3
aaa
lock
out
aas
mov
xchg
std
mov
xor
cli
dec
repnz
repz
test
xchg
rcr
cmc
xchg
loopne
call
into
imull
lret
aad
fcomi
testb
aad
out
mov
jmp
ss
aad
leave
aad
int
cmc
in
rcl
xchg
mov
testb
into
mov
mov
jmp
xor
aad
xlat
sarb
fldl
inc
add
iret
mov
int
xchg
aad
int3
xor
jecxz
out
fcmovbe
in
imul
out
add
fisttpl
loopne
icebp
fcmove
fstpt
stc
enter
aam
ffree
icebp
mov
mov
adc
mov
xor
repz
repz
loopne
cmc
cld
call
out
dec
shl
lret
jmp
in
shr
stc
roll
rcl
repz
ret
jecxz
ret
xchg
ljmp
in
out
leave
cmp
cli
in
frndint
test
leave
in
or
dec
test
fildl
jecxz
in
clc
xor
aaa
clc
cld
aad
fcmovnb
std
vpmaxub
mul
mov
in
aam
push
clc
addl
mov
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
pushf
cmc
je
mov
jle
add
in
repz
das
in
leave
leave
out
jmp
out
cli
hlt
mov
loop
mov
cli
xchg
out
stc
cmc
leave
jmp
aad
roll
call
out
out
icebp
mov
aam
fcmovbe
fcom
in
rcl
repnz
out
cmc
mov
into
out
nop
int
lock
shr
sub
out
xor
std
ds
fcomip
fmulp
fst
out
cli
iret
or
cmp
and
stc
repnz
loope,pt
out
icebp
int
out
test
cmp
out
loope
in
lock
ljmp
aas
hlt
in
loopne
rolb
out
or
in
in
rcr
loopne
icebp
in
int3
fdivrl
lock
clc
aas
addb
xlat
mov
cmp
nop
repz
clc
ret
in
cmp
rcl
adc
ds
cmp
xlat
fmuls
in
loop
fnstenv
ret
aad
jmp
xor
fiadds
xchg
fneni(8087
nop
lock
out
test
out
in
sar
call
xor
in
mov
loop,pt
in
enter
and
ljmp
out
fdivrl
icebp
loopne
ret
loopne
idiv
shr
jecxz
fdivr
int
fiadds
call
call
ret
loopne
clc
clc
loopne
ljmp
rol
clc
cmp
xor
xor
cmp
ret
shl
dec
decl
in
repz
xor
fdivrs
jmp
jmp
shl
loopne
mov
fsubrp
cli
leave
in
icebp
icebp
test
xchg
ljmp
aam
aaa
cmpb
cmp
jmp
loope
test
rorb
das
into
cli
fcmovnb
repz
idiv
faddl
hlt
aad
xchg
mov
loope
lret
sub
std
int3
out
ds
fcompp
repz
fstp
movl
xchg
xor
aaa
xlat
xor
lret
hlt
sar
cmc
ljmp
loop
lret
out
out
in
mov
rcl
fucomp
push
rcr
fcmovnbe
fistpll
aam
in
and
xlat
loope
leave
test
std
adcb
lret
aas
sti
fcomp
repz
aam
and
fcmovu
icebp
fcmovne
aam
shl
idiv
test
repz
test
in
call
xchg
mov
xor
fidivrl
sbb
rcr
in
into
aas
shl
loope
fimuls
fmulp
shl
leave
into
lret
cmp
cmp
sti
sarb
out
ret
loop
aam
decl
ljmp
stc
out
fcmovne
repz
cmp
sub
cli
xlat
fiadds
jecxz
xchg
aam
icebp
sub
call
leave
in
int
repz
xor
xlat
call
in
mov
out
in
rcl
cmp
iret
jmp
loop
shl
cmp
clc
clc
fnclex
enter
nop
cmc
in
int3
in
not
cmp
call
faddp
test
enter
aas
testl
icebp
aad
enter
cmp
aad
stc
aas
loop
aad
repnz
sti
cmc
in
stc
addl
aas
xor
stc
sarl
cld
in
cld
cld
in
shl
stc
enter
out
int3
xchg
iret
xor
hlt
xor
ljmp
rcl
ds
faddp
sub
int3
out
into
shr
lret
shll
in
test
in
cmp
out
testl
out
and
loopne
cmp
fucomp
fsubr
loopne
sti
and
xor
in
loope
fcmovne
cmp
loop
cmp
ror
cli
fistpll
cmp
decb
out
in
icebp
cld
decl
shlb
not
sti
aas
rcr
cmp
cld
icebp
iret
xlat
ret
xlat
loop,pt
in
xchg
lret
repnz
clc
fnstcw
int3
fdiv
cld
fcomp
cld
stc
cmp
cmp
hlt
fadd
in
mov
lret
repz
fadd
imul
xor
das
aam
cmp
out
icebp
mov
aad
ljmp
mov
fcom
cmp
stc
aam
cmp
aad
fsubp
jmp
out
sbb
fst
shl
aam
xor
imul
fdiv
cmp
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
idivb
lea
fmulp
xchg
add
add
shr
fcmovnbe
sti
loope
aam
std
hlt
xchg
mov
mov
aam
icebp
ret
out
leave
not
ret
rol
in
call
enter
jmp
fxch
out
icebp
int3
not
faddp
ret
shl
out
fildl
filds
in
aam
aam
xlat
rcl
fdivp
aam
fcmovnu
loop
loope
call
jecxz
sbb
shll
xor
rol
sti
xor
cmp
fadd
test
cld
fdivp
xor
ret
les
repnz
xor
out
cld
loopne
ret
cld
cli
bnd
test
clc
int
addb
cmc
aaa
rol
ror
jmp
cmp
not
ror
ljmp
in
in
in
cs
clc
aad
ljmp
idiv
fadd
out
idiv
mov
mov
leave
addl
aaa
int
sar
cmp
shl
cld
fcmovne
cmp
cli
enter
jmp
das
ljmp
cmp
sarl
cmp
mov
xchg
orl
lret
rcl
fmul
ljmp
xlat
cmp
ret
lret
into
ss
leave
fcmovu
fcmovnu
fdivr
cmpb
inc
cmc
fcmovb
test
fisttps
mov
xor
into
enter
cmp
in
jecxz
fcmovb
incl
test
nop
out
repz
cmc
xor
out
fmul
enter
cmc
sti
ffreep
jmp
in
in
out
in
icebp
xchg
xor
icebp
stc
fdivrl
aas
mul
jmp
jmp
int
xchg
div
xor
lret
aad
fninit
loop
cmp
mul
roll
int
jmp
in
in
call
fmulp
xor
iret
cmp
lret
xchg
iret
xchg
nop
lret
xchg
not
repz
ret
lock
xlat
out
int
ror
ret
xlat
jecxz
std
testl
in
loope
xor
out
sar
sti
int
loop
aad
neg
mov
adc
lret
ljmp
call
icebp
rolb
mov
mov
xchg
fsubr
rorb
cmp
std
hlt
cmp
test
in
hlt
lock
clc
movl
in
shl
out
ljmp
in
cmpb
lret
cmc
sbb
enter
aam
mov
ror
repnz
jmp
shlb
fucom
in
loop
clc
add
aad
lret
enter
into
mov
fcmove
out
shlb
repz
jmp
aam
inc
cli
cli
jmp
fstl
ret
cli
stc
hlt
cmp
stc
sti
into
fcmovnb
rcl
leave
mov
orb
fimuls
sti
das
fyl2x
cmp
aam
out
call
orl
fcoml
in
out
out
iret
cmp
int3
xor
ret
sarl
sti
mov
cld
lret
in
aam
in
aaa
idiv
fsubr
loopne
ret
xchg
fcmovnu
xchg
call
jmp
out
call
int
fcmovnu
cli
xorb
rolb
sti
shr
xchg
xchg
clc
hlt
rcr
std
iret
fidivs
fcmovnb
test
mov
out
jmp
mov
repz
in
loop
xor
shl
fsubr
icebp
icebp
hlt
out
fcmovnu
repnz
mov
mov
xlat
ror
fnop
cli
aam
cli
shl
roll
mov
int
in
fdiv
into
std
mul
ljmp
fxch
ffreep
jmp
out
idiv
loopne
incb
fimull
ret
cli
fucomi
fidivl
std
cmp
loopne
aas
movl
repnz
icebp
xor
sti
xor
std
ds
xlat
fcomi
aam
sti
fcmovnb
cli
ljmp
test
enter
leave
repnz
out
out
ret
icebp
in
loop
mov
sub
ffreep
fistl
hlt
repz
lds
div
cmp
ror
int
cmp
xlat
out
jecxz
orb
mov
lock
cs
imul
out
clc
fidivrs
cmp
cli
xlat
mul
out
testb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
pop
iret
jbe
add
add
fimuls
out
xor
fdiv
in
cld
aas
fcomp
aas
fld
out
sbb
ret
enter
xchg
call
hlt
shlb
cmp
fnstsw
fdiv
fdivrp
or
fisttps
lock
aam
leave
jecxz
jmp
jmp
cmp
jmp
rcr
xlat
push
mov
std
ljmp
out
xchg
into
into
aam
hlt
xlat
lret
out
fsubrp
into
out
cmc
rorb
shl
mov
xchg
rolb
cmp
divl
ljmp
ret
std
leave
test
jmp
mov
test
mov
std
out
cmc
iret
lock
clc
cld
out
cli
cmp
xchg
lock
orb
ficoms
mov
leave
stc
int
sti
aam
ds
sarl
ror
clc
mul
aas
stc
faddl
xchg
xor
xor
enter
xlat
sti
cmp
loopne
enter
out
loop
int
aaa
in
in
fcomi
xor
iret
cmc
xchg
ljmp
mov
call
int
rcr
fdivp
rcr
lret
into
xor
loope
repz
ret
fisttps
aaa
into
rcr
into
clc
repz
out
icebp
sarb
cli
fucomp
int
fisttpll
aad
lret
stc
fdiv
ss
loop
rcl
xchg
repnz
iret
lret
repz
repnz
bnd
repnz
lock
cmp
cmp
vpaddw
in
mov
mov
xchg
out
iret
ror
enter
fstp
sarl
fnstsw
out
decb
ret
loop
mov
fucomp
cmc
fsubrp
call
lret
cmp
cmp
rol
ljmp
push
adcl
out
lock
xchg
mov
out
lret
mov
fsubp
iret
xlat
out
enter
ljmp
sti
mov
loopne
idiv
iret
mov
std
nop
xchg
into
cmc
cmp
call
fiadds
addl
loope
shrb
out
int3
out
lret
cmp
loope
not
loopne
ret
xlat
clc
xlat
int3
ret
mov
aam
lock
ss
sti
out
enter
std
cmc
shr
not
rolb
add
out
xchg
in
repz
jmp
fcmovbe
clc
lds
in
jmp
test
test
in
enter
out
repnz
cmp
addb
rcl
cld
lret
in
repnz
out
leave
jmp
aaa
ror
cmp
fcomi
hlt
fadds
fimull
xchg
into
idiv
jmp
cmp
loop
stc
shl
cmp
shl
lret
loopne
addl
lock
lds
aam
call
adc
ds
addb
in
std
loopne
xchg
repz
xor
in
out
sbb
stc
and
jmp
in
sti
sti
clc
in
mov
cmc
mov
fsub
repz
xlat
lock
leave
lock
movb
sti
mov
in
loope
icebp
ret
out
int
cmp
aad
into
iret
in
fcom
out
int3
test
out
xchg
loopne
repnz
in
sti
cld
clc
repnz
cmc
cmp
cld
aas
rolb
jmp
mov
shl
fscale
call
sbb
hlt
shl
rolb
cli
sbb
ljmp
xor
aaa
ds
rcl
fistpll
loop
xlat
enter
aam
mov
incl
call
cmp
xlat
xlat
aam
loope
fcomp
loope
test
in
not
xor
fucomi
cmp
xor
mov
lea
shl
cld
mov
jecxz
enter
lret
cmp
std
in
out
repnz
xchg
adcl
fidivrl
clc
rcl
div
call
in
fsub
jmp
xchg
out
enter
lret
cmp
les
jecxz
test
ftst
fiadds
lret
cli
cld
int3
clc
xlat
sar
cmp
fcmovu
loopne
fcmovnbe
loop
movl
test
ss
aad
imul
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
enter
cli
hlt
cld
cld
aad
test
loopne
cli
aad
out
in
int3
adcb
iret
xor
cmp
hlt
rcl
lret
xlat
loope
rcl
test
mov
test
jmp
fimuls
jecxz
xlat
loop
aad
ljmp
rolb
hlt
fisttpl
mov
cmp
ss
lret
in
cmp
xor
test
ds
add
out
in
mov
cld
mov
xchg
hlt
ljmp
fdiv
repz
fiaddl
xlat
xchg
jmp
aad
sub
in
ljmp
jmp
test
lock
sbb
jmp
in
loope
cmp
loope
in
aaa
stc
xor
repnz
out
fldpi
into
ds
stc
roll
flds
test
aam
repnz
cmp
in
rcr
sti
not
cmp
clc
cmp
cmc
cmp
int
lret
mov
out
fcmovbe
cld
aaa
ror
in
loope
cli
div
and
xchg
test
jmp
repz
in
xor
test
cld
rol
test
mov
mov
out
cli
jmp
loop
out
lret
xor
cli
cmp
fsub
inc
ffree
mov
stc
clc
frstpm(287
lea
repnz
out
xlat
dec
clc
iret
fstp
ds
jecxz
leave
in
fcomi
fsqrt
xchg
repz
out
lret
ss
lret
sub
in
in
jecxz
in
out
sub
sub
jmp
repz
cli
fsubr
cmp
sbb
fimull
std
iret
out
out
loopne
xchg
enter
cmp
into
in
into
cmp
rolb
and
jmp
out
out
ror
les
aaa
neg
hlt
cld
xlat
cmc
ror
cmp
in
mov
out
fldl
shr
fsubr
not
iret
ds
adc
sti
neg
cmp
jmp
clc
aam
xor
aad
add
cld
out
leave
jmp
xchg
repz
repz
xlat
jmp
cmp
aaa
clc
icebp
stc
jecxz
loopne
idiv
mov
add
iret
in
in
xchg
iret
sub
aam
fucomp
lret
iret
lock
in
test
cmp
enter
lock
jmp
cmp
cmpb
movb
fldz
test
in
mov
fldl2t
divb
loope
rolb
ret
xchg
loopne
into
mov
cmp
cli
fst
fdiv
cli
in
clc
div
testb
int
repnz
shl
jecxz
leave
repz
out
lock
cmc
repz
clc
jecxz
sar
stc
call
fldl
xor
cmp
cld
testb
out
aam
orl
cmc
icebp
hlt
rcl
sub
xlat
out
fxch
jmp
ret
in
sti
ret
rolb
mov
call
cmp
adc
std
repnz
fildl
lds
nop
xchg
out
jmp
icebp
cmc
std
fcom
fistpll
cmp
in
aas
jmp
int3
fdivp
jmp
jecxz
in
clc
jmp
aaa
aam
fdivs
loope
cld
into
std
ds
clc
aam
aam
mov
cmp
lret
mov
xchg
cs
jmp
sti
lret
lret
ret
ffreep
mov
out
in
jmp
out
xchg
mul
xor
rol
repnz
leave
not
fildl
cld
jmp
jmp
out
aam
shl
xor
hlt
shlb
enter
int
std
icebp
rcl
faddp
aad
aas
xchg
fyl2x
int3
std
rolb
cmc
xor
into
leave
in
xlat
cmpl
vpaddd
orl
lock
test
into
shr
cli
sbb
shr
jmp
cli
ret
jmp
sar
divl
idivb
std
in
fdivr
clc
loop
in
aas
icebp
sti
ljmp
mov
nop
fildll
repz
in
cli
loopne
lock
out
hlt
std
xchg
out
mov
rcr
lret
xchg
mov
subl
repz
cmp
cmc
out
aad
aaa
out
shl
shl
clc
leave
jmp
xchg
lea
into
rcl
repz
xlat
out
sti
repz
icebp
clc
xchg
fdivl
rolb
add
add
add
add
sbb
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
shlb
jle
rol
addb
roll
cmp
in
fidivrs
ljmp
lds
test
in
nop
fucomi
in
out
xor
jecxz
cli
repnz
flds
fcmovb
cld
cmc
leave
fimull
out
cmp
ss
cmp
cmc
leave
shl
loop
out
rcr
out
test
mov
or
loope
xlat
hlt
repnz
jmp
cmp
in
icebp
sti
vcmppd
rcr
jmp
decb
int
das
not
fcmovne
fstpt
repnz
cmc
aam
div
cmc
jmp
loopne
jmp
cld
mov
test
into
in
lock
cmp
aaa
ds
roll
clc
cmc
ljmp
int
fmul
cmp
leave
int
out
shlb
xor
movb
xchg
xchg
fcmove
orl
int
rcr
ds
shl
sbb
in
out
fildl
loopne
test
aad
int
jmp
addb
fsubp
in
stc
int3
call
icebp
out
cmp
std
xor
fxch
sar
lret
in
test
loop
int3
std
rcr
div
cmc
out
in
rolb
ljmp
mov
aad
call
cmp
not
repz
enter
fiaddl
int3
cld
xchg
fcomip
jmp
ror
cmp
enter
std
into
les
loop
pop
mov
mov
xor
cmc
into
jmp
cli
in
aam
repnz
aas
fiadds
ret
cld
hlt
mov
repnz
std
shl
xor
into
aaa
loopne
cli
addb
jmp
in
nop
out
out
int3
enter
out
cmp
xlat
loopne
int3
aas
iret
xor
cmc
jmp
aas
popl
lock
hlt
int3
loop
int
out
not
aam
sti
shl
ret
enter
enter
out
addb
idivb
repnz
call
cld
aas
icebp
call
out
cld
into
int
rorb
jecxz
in
jmp
hlt
lock
ds
sar
sti
hlt
sti
fmulp
mov
out
cld
out
ror
ret
icebp
out
in
repnz
in
cld
hlt
decb
sub
xlat
lock
jmp
xchg
not
shlb
fyl2x
jecxz,pt
test
mul
repz
xlat
mov
int3
test
cs
cmp
div
sar
aam
cli
fld
xlat
decl
loopne
roll
lret
out
stc
xlat
iret
fcmovnb
and
fnstsw
rolb
loop
cld
or
out
mov
ret
shl
int3
cmp
fucomp
hlt
out
cld
out
out
fiaddl
out
in
in
test
int3
repz
ret
ror
enter
ret
rolb
cmp
jmp
mov
loopne
int3
cmp
into
cmp
jecxz
fcomp
sbb
ret
xlat
out
xlat
in
test
lret
mov
not
les
leave
aam
neg
cmp
sti
into
les
fisttpl
hlt
xlat
in
cmp
das
cmp
cmp
cmc
sar
std
in
testb
orl
int
lock
int
jmp
repz
rcl
aad
in
ret
jmp
in
loop
rorb
xor
ret
cmp
lock
idivl
xlat
cmp
sarl
xlat
in
std
int3
in
loope
fiadds
aam
cmp
cmp
fneni(8087
xor
ret
xchg
fcmovnb
cmc
test
call
fprem
repnz
xor
out
aam
into
addl
jmp
xchg
ljmp
aaa
fcmovnb
aad
ljmp
test
fmull
leave
aam
shl
not
sti
neg
fidivrs
loop
incb
lret
int3
int
shl
out
icebp
cmp
cli
aas
jmp
push
aad
std
fdivrp
fucomi
xchg
repnz
cmp
mul
rol
cmp
loope
xchg
ret
les
lret
icebp
ljmp
aad
lds
icebp
out
cmp
shr
lock
ljmp
loop
mov
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
and
ret
add
add
in
xor
jmp
fdiv
fdivr
enter
mov
int
loope
xor
das
xor
aad
out
lret
cld
fsubr
rol
ffreep
cld
clc
jecxz
mov
clc
leave
in
iret
aad
cmc
int3
in
cli
sub
jmp
cmp
out
jmp
clc
fdivr
enter
loope
into
aad
xor
jmp
rcr
cli
aas
or
mov
icebp
xchg
in
subl
cld
cmp
jecxz
in
rcl
stc
mov
test
xchg
jmp
cmp
fcmovnbe
fcmovbe
xor
hlt
hlt
hlt
in
fnstsw
ret
xor
ljmp
fld
into
int
cmp
loop
neg
in
cli
ret
mov
nop
ljmp
xor
aaa
stc
lock
in
xlat
rolb
jecxz
call
out
int3
test
in
repz
lock
repnz
test
in
mul
loope
jecxz
clc
call
xchg
xor
xlat
aam
fcomp
repz
aad
test
cmp
clc
loop
xlat
cmp
mov
cmc
les
aaa
out
xor
fsubr
cld
jmp
sti
aad
stc
fcmovnb
out
mov
fstl
xor
cmp
repnz
cmpl
test
fsubr
mov
xchg
into
loope
mov
not
in
fucomi
aam
aaa
lret
shl
clc
fdivp
repz
out
out
in
mov
xchg
in
sub
out
out
icebp
out
lret
xor
aam
fincstp
cld
lret
lret
call
xor
out
shl
cmp
in
into
cmp
in
mov
ljmp
repnz
sar
lret
fcmovu
ret
in
rolb
std
int
int3
call
in
into
hlt
xor
xlat
sar
in
jmp
clc
fcom
cli
ret
test
xlat
fcmovnu
out
jecxz
out
xor
in
ds
out
hlt
lock
idiv
stc
jmp
lock
out
clc
int
aaa
loopne
lock
cmp
shl
testb
out
test
fmull
int3
enter
fmul
aad
int
aam
icebp
cmp
enter
mov
in
imul
ljmp
rol
xor
sti
idiv
sar
cmp
loopne
repnz
ror
jmp
xor
mov
in
int3
fcmovne
iret
cmp
in
sarb
xor
lret
loopne
out
lock
out
out
lret
cmc
xor
in
out
fcmovbe
rcl
cld
sub
loopne
fsubr
loopne,pt
lock
sub
cmp
repnz
into
iret
icebp
shl
cmp
cmp
idiv
cli
enter
sti
cld
xchg
test
xchg
out
leave
out
rcr
mov
cld
ljmp
in
call
or
rolb
in
loop
std
out
not
fucom
faddp
mul
rcl
jmp
lret
or
icebp
das
clc
ss
leave
into
enter
repnz
cmp
filds
jmp
mov
int3
aad
repnz
ljmp
iret
cld
adc
and
shr
mov
sti
in
loope
xchg
aaa
ret
aad
cmp
cmp
in
cli
ds
aas
loop
xchg
lret
stc
in
out
call
adcb
shl
ror
icebp
leave
lock
test
fcmovnu
aam
jmp
jecxz
leave
cli
out
in
out
rcl
aam
test
xor
shl
fcmovb
cmc
ds
test
out
mov
fucom
in
in
test
shll
fsub
rcl
aad
fiadds
shr
loop
out
lret
jmp
fsubrp
lock
sarl
aam
cmp
loope
std
aas
repnz
mov
mov
xchg
fldl
xor
ljmp
cmp
cld
mov
loope
lret
loope
xchg
jmp
cli
xor
out
aam
out
aad
xor
in
fadds
xchg
out
iret
jmp
das
repz
in
fcmovne
fmul
lret
cmp
cli
clc
shl
mul
ljmp
xchg
nop
out
in
vpsrad
leave
xor
cmp
cmp
addb
sub
xchg
mov
loope
shr
stc
cli
cli
jmp
aad
xchg
add
add
or
add
lds
add
leave
aam
aad
aam
sbb
stos
stos
add
add
clc
int
rcr
loop
sar
cmc
xchg
in
sub
sub
cld
rcr
xlat
hlt
cli
xlat
lock
sti
sarb
flds
lret
jecxz
loope
shl
into
xor
int3
mul
and
loopne
sbb
cld
add
fucomi
int3
adc
mov
shl
call
out
out
fdivrl
xchg
clc
aad
adc
cli
out
ljmp
test
int
adc
roll
std
xlat
fdivr
out
loopne
fcmove
in
test
shl
iret
ret
in
repnz
cmp
loope
ret
and
fsub
loope
call
sarb
out
lret
rcl
int
xlat
and
int3
out
int3
call
test
stc
cmp
cmp
shl
stc
fyl2x
hlt
in
cld
fcmovb
in
test
xor
mul
shl
lock
fnstcw
aad
cmp
xchg
int
cmp
out
jmp
xchg
leave
xor
xor
out
fstpt
testb
fdivr
ffreep
aad
mov
rcl
jecxz
xlat
out
cmc
sti
ffreep
icebp
lock
rorb
mov
clc
mov
nop
rorl
rol
cs
in
int
filds
aam
in
aam
lret
loop
jecxz
decl
call
xlat
jmp
loop
sti
test
repnz
enter
loopne
jmp
ss
lret
aam
iret
fdecstp
ret
ret
repz
out
clc
loope
call
call
hlt
ret
ret
ljmp
jecxz
shl
jmp
in
out
ret
fstl
shr
cmp
rcr
jmp
not
aas
cld
fcom
dec
mov
mov
cli
repnz
shr
out
mov
xor
fdivr
add
out
sti
aam
ret
addl
cmp
fcmovne
ljmp
ror
cmp
cmp
addb
loope
fmulp
lret
lock
cmc
idiv
fdivp
int
loopne
out
in
cld
out
in
fiaddl
aaa
loope
xor
jmp
lret
fistpll
cli
ret
fcmovnu
fadd
jecxz
in
leave
sti
repz
test
call
clc
sub
clc
repnz
std
stc
loope
xchg
in
aam
xchg
jmp
out
out
into
aas
ljmp
xchg
mov
dec
nop
iret
iret
fsubr
orb
cld
out
fdiv
cld
std
loopne
adc
mov
mov
jecxz
xor
aam
repz
cmp
ss
fimull
test
jmp
enter
fcmovb
fcomp
aaa
int
cmp
xlat
fdivr
mov
aad
loopne
xchg
out
mov
jmp
ljmp
hlt
cmp
mov
mov
nop
in
iret
mov
ret
hlt
leave
fnstsw
jmp
icebp
shlb
out
mov
test
leave
test
ret
aam
cmc
repz
in
aas
cmp
ret
loopne
call
jmp
enter
out
into
sub
in
fucomi
stc
cli
cmp
cmp
cmp
out
loop
rolb
out
out
mov
stc
cmc
out
cmp
repz
iret
cmp
aad
aad
fcmovu
jecxz
test
incl
in
out
xor
idiv
fsubr
test
icebp
les
cmc
std
loope
leave
stc
mov
out
rol
cli
rcr
std
rcr
loope
cmc
xor
repz
aad
dec
call
rcl
hlt
rcl
icebp
fcmove
xlat
repnz
in
aas
std
repz
mov
fsubp
lea
lret
neg
cmp
cmp
fdivrp
adc
call
in
repz
ljmp
call
test
fsub
out
loopne
in
in
mov
repz
ljmp
cmp
aaa
xor
ret
fidivrs
rolb
in
nop
ror
std
loope
nop
ljmp
std
out
jmp
in
icebp
les
cmp
shl
shl
shll
repnz
divb
rcr
sbb
test
fdiv
cmc
loope
or
std
mov
mov
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
jmp
scas
add
add
in
xchg
orl
rcr
leave
hlt
cld
fdivr
cmp
lret
fstp
stc
pause
aad
les
jmp
cmp
cmp
into
hlt
lock
out
clc
aad
lds
test
out
jmp
call
sar
out
fcmovb
shl
out
cmc
in
lret
out
out
cmc
bnd
ljmp
ljmp
mov
rolb
jecxz
in
xor
fcomp
cmp
loopne
out
addb
mov
lret
out
leave
fisttpl
int
clc
icebp
rcl
fucomi
fmulp
iret
clc
in
and
cmp
mov
jmp
icebp
jmp
shl
cmp
cmp
repz
loop
aad
mov
test
in
fcompp
fsts
in
aaa
aam
repz
fcmovne
fsub
iret
iret
jecxz
iret
ret
out
mov
sbb
enter
out
out
icebp
out
fsub
cmp
cmc
cld
cmp
xchg
xchg
fisttps
cmp
ret
into
cmp
xlat
ss
fsin
out
cmc
std
cmp
mov
xchg
call
xor
sar
loopne
fdivp
in
test
call
lret
mov
shr
lret
in
jmp
icebp
cmp
aaa
loop
lock
repnz
call
fcmovnb
xchg
call
xor
loope
cli
call
aaa
incl
enter
jmp
add
leave
mov
repz
idiv
out
fdivrs
lock
in
cmp
xor
aad
jmp
jmp
test
xor
ss
aas
ret
add
std
dec
imul
cld
in
fildl
out
lret
neg
idivb
jmp
aad
shl
mov
clc
aad
in
xchg
jecxz
xor
aam
fucomip
aad
fdivr
fnstcw
test
test
loop
out
clc
test
cli
ror
mov
in
xor
lret
into
icebp
cmp
out
fcmovnb
cmc
sti
xchg
ret
xlat
jmp
fcoml
in
xor
mov
aad
imul
adc
aam
out
cmp
aad
nop
fucomi
iret
in
out
iret
in
sub
clc
out
into
xor
cmc
rol
vcmpsd
in
fsts
mov
lock
ljmp
iret
icebp
std
into
rol
out
repz
mov
lret
loop
in
call
in
in
ss
out
hlt
fadds
cmp
xchg
jmp
cmp
rcl
shl
cmp
shl
test
mov
fdivr
sti
mov
shll
out
leave
das
neg
idivb
cld
repz
clc
icebp
ret
call
int3
shr
rcll
aaa
fdivr
sar
cmc
jecxz
aam
cmp
lret
leave
xchg
test
xlat
lock
enter
lock
div
aas
sti
icebp
ds
stc
mov
ftst
std
iret
jecxz
xchg
shr
ror
sarb
aaa
fst
in
cmp
int
repnz
sbb
std
ljmp
out
loop
aad
in
xor
xor
repnz
in
cmp
sti
aad
into
out
jmp
loope
loop
out
enter
loopne
fnstsw
roll
fucomip
test
sti
mov
mov
jmp
mov
icebp
cmp
std
stc
sti
cmc
lret
cmp
in
xchg
sti
hlt
lea
out
hlt
int
out
sti
clc
fcmovnb
int
aas
fcmovnb
hlt
iret
aam
fcmovu
shl
repnz
loope
aad
lret
not
clc
aad
aaa
iret
repz
dec
ret
in
cld
ret
cmc
fisttps
mov
jecxz
xchg
rcr
lret
sarl
hlt
jecxz
aad
shl
fadds
mov
xchg
hlt
cmp
enter
aas
ss
sbb
inc
cli
enter
icebp
dec
enter
leave
std
stc
fsubp
idiv
into
test
rol
out
out
fcmovnu
fucomip
fisttps
xor
in
cld
shr
or
aad
icebp
cld
hlt
adc
enter
call
cmp
in
test
cld
iret
sti
out
aam
into
sub
clc
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
