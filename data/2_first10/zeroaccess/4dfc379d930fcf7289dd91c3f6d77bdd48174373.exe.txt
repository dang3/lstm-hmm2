push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
push
mov
sbbl
xor
andl
mov
mov
sbb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
jmp
scas
cltd
and
add
cwtl
int
lret
addl
andl
je,pn
jo
jae
insb
jae
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
mov
xchg
mov
sbb
mov
outsb
or
movzbl
cmpsb
mov
sbb
loope
sub
cwtl
push
scas
cltd
out
xacquire
jo
loop
cmp
xor
cmpsb
sub
out
mov
stc
fistps
lcall
ja
jle
stos
xchg
pop
in
fnsave
test
aas
sbb
aas
ja
hlt
jbe
push
addr16
mov
imul
outsb
dec
pop
push
xchg
cmpsb
dec
jae
adc
inc
sbb
icebp
jae
cmp
clc
and
aas
adc
jl
test
or
sub
daa
pop
fsave
ret
xchg
jne
or
nop
inc
fstpt
inc
shrl
xchg
loope
xorl
int
loop
mov
or
xchg
pop
xor
mov
adc
mov
outsb
stos
ficompl
mov
cld
out
int3
mov
enter
es
imul
cwtl
mov
dec
add
sti
mov
aas
in
aas
adc
iret
add
out
mov
js
mov
cmp
ja
ljmp
scas
testb
pusha
xorl
jbe
pusha
mov
lods
jg
icebp
cmp
lcall
dec
pop
jl
lods
fisubl
push
push
jns
lret
lea
ja
es
fdivl
sbb
jg
mov
push
push
dec
lret
mov
inc
aad
or
lahf
jbe
mov
pop
rcrl
orl
inc
jp
sti
xchg
mov
adc
inc
add
mov
movsl
mov
jmp
push
ljmp
dec
stos
mov
repz
lret
shl
jb
addr16
push
into
outsb
sbb
decl
aam
mov
mov
push
inc
clc
mov
sbb
mov
dec
dec
sbb
push
pcmpgtd
clc
mov
push
shlb
sbb
mov
mov
out
sub
and
add
xchg
xlat
arpl
aam
xchg
test
in
mov
mov
cmp
sub
push
mov
adc
gs
mov
adc
arpl
ret
roll
and
dec
loope
push
mov
mov
pop
je
daa
push
lret
clc
xchg
iret
daa
xchg
repz
or
pushaw
cmp
fbstp
ljmp
pop
push
enter
mov
outsb
push
and
add
xor
push
adc
push
fsubl
aam
aas
mov
and
lret
aam
loop
push
mov
in
and
shll
cmp
addl
jecxz
adc
cmp
mov
add
xchg
fistl
notb
jmp
jmp
inc
jb
aas
fiadds
mov
insb
int3
adcl
pop
ds
or
and
dec
dec
mov
mov
or
xlat
mov
inc
aam
sbb
jns
or
xor
mov
sbb
or
jnp
jne
sbb
and
sub
and
dec
push
lea
mov
stc
mov
pop
enter
lods
in
fldl
push
hlt
jne
xchg
cwtl
adc
xchg
mov
scas
fistl
jae
jne
out
xor
xor
pushf
ret
hlt
pop
pop
insl
insb
sbbb
shlb
mov
push
scas
pop
jecxz
mov
loop
xor
dec
fisubs
fwait
push
in
movsb
mov
jbe
dec
mov
hlt
adc
mov
insl
add
repz
mov
int3
cmpsl
ret
inc
ret
shr
add
cmp
loope
test
sub
and
jo
dec
std
stc
int
mov
xor
adc
out
jnp
loope
cltd
jmp
lret
jae
negb
mov
gs
ret
call
aad
push
iret
lret
imul
pusha
cmpsl
mov
adc
lahf
int3
cmp
loopne
mov
sub
push
divl
sbb
aad
adc
add
jp
movsl
hlt
pop
push
mov
xchg
cmp
cmp
ja
pop
movsb
loopne
push
mov
pop
test
popa
inc
mov
sub
rcrl
loop
mov
into
dec
inc
dec
arpl
inc
insb
jg
xchg
jle
xchg
es
mov
xor
mov
imul
sbb
cmp
push
push
je
addr16
or
xor
push
inc
adc
and
cmp
cmpsl
test
adc
ret
pop
std
sub
mov
pop
test
mov
in
jp
pop
cli
push
adc
dec
lret
xor
out
sbb
mov
loope
loop
cmp
popf
and
xlat
idivl
insl
jae
fsubs
outsb
mov
fbld
push
adc
mov
xchg
in
out
push
xchg
pop
mov
cwtl
mov
jg
dec
sahf
dec
nop
in
pusha
jg
mov
js
sbb
jbe
jmp
mov
pop
faddl
adc
mov
sbb
call
inc
out
add
jae
out
loope
dec
add
dec
sub
std
ja
cmp
out
pop
lea
xchg
jnp
push
mov
mov
xchg
jecxz
sti
shrl
andb
dec
test
out
mov
ds
pop
in
pop
push
add
dec
or
loop
fistpll
lock
xchg
daa
inc
xor
loope
xchg
mov
add
pusha
in
fnsave
inc
lahf
lret
pop
or
hlt
cmpsb
inc
and
stc
xor
cs
pop
lods
xchg
add
insl
xor
aas
data16
or
rcr
in
fs
scas
aad
call
int
lods
cmp
inc
pop
sbb
dec
xchg
dec
pop
test
sub
mov
mov
lcall
push
jnp
add
xchg
es
xor
pop
push
mov
xor
lahf
sti
cmp
outsl
movsl
lds
ret
aad
mov
loopne
add
mov
add
add
sbb
sbb
loope
mov
hlt
xorl
jae
jae
inc
movsl
popf
sbb
psubsw
pop
inc
lea
aas
imull
xchg
mov
or
push
and
jnp
cmpb
cmpsl
ss
pop
dec
sub
roll
lds
inc
mov
dec
enter
cmc
xor
fdivl
test
sbb
xor
mov
or
int3
push
xchg
in
add
sbbl
ficoms
push
fcmovne
jmp
pop
testb
dec
inc
push
or
mov
pop
add
es
jmp
push
lret
dec
bound
ret
sbb
push
and
cmp
adc
fs
fimull
cmpb
jo
push
roll
out
sub
outsb
sbb
push
push
lods
or
xchg
inc
xchg
rcll
test
sbb
sub
xor
xor
cli
mov
fcoms
cmc
popa
in
nop
test
push
pusha
and
inc
outsl
lds
mov
sbb
call
xchg
in
in
or
aas
roll
push
sar
mov
dec
xor
fwait
xchg
imul
out
jp
sub
popa
and
add
out
or
xorb
dec
jp
popf
or
mov
mov
push
add
mov
mov
sub
mull
fistl
add
idivl
mov
push
xor
hlt
push
std
jmp
xor
mov
cmpsl
sti
scas
div
dec
ret
je
into
popf
sub
inc
mov
subb
hlt
xchg
mov
jg
inc
pop
testb
xchg
repz
cmp
dec
divl
lahf
ret
test
cwtl
inc
push
scas
xor
das
mov
xchg
mov
rcrl
and
rcrl
adc
pop
xchg
ja
mov
js
sbb
jnp
aaa
pushf
je
popa
inc
pop
fdivl
or
notl
ret
inc
int
sbb
cmp
lcall
popa
addl
dec
dec
scas
adc
jno
push
ss
xor
test
out
push
sbb
sub
jb
into
call
or
in
stos
push
in
imul
sbb
add
and
inc
ficompl
fs
lea
mov
sahf
mov
mov
stos
decl
jno
test
inc
add
or
sti
loopne
or
call
xchg
rcrb
stc
or
aad
inc
sub
js
imul
lds
xchg
lahf
sbb
mov
pop
test
addl
push
in
pop
mov
jp
jmp
and
mov
roll
pusha
filds
ljmp
ficompl
mov
add
ljmp
repnz
lahf
jmp
insl
js
push
adc
lock
ja
cmpsb
pusha
iret
sahf
mov
imul
sub
pop
test
and
mov
dec
cmp
adc
loop
dec
push
in
push
xchg
jb
mov
inc
in
jmp
jns
out
lcall
and
jmp
adc
enter
and
cmp
sub
stos
jnp
in
shll
push
and
call
fidivrs
lods
movsb
xor
sub
aam
subb
cmpsl
jnp
les
sub
mov
sti
popf
ds
jle,pn
sti
pop
or
xor
pop
or
scas
fs
mov
lds
pop
ja
shrl
ss
pop
fisubrs
jne
mov
fcoms
loop
mov
adc
jnp
sbb
dec
push
lahf
xchg
enter
pusha
cmp
jge
mov
cmp
out
out
das
adc
lea
ljmp
or
aas
lret
push
fsubs
aas
test
out
ja
jmp
mov
adcb
ret
mov
jp
cmc
push
push
bound
loopne
insl
and
add
adc
stos
scas
les
xchg
pop
imul
pop
push
cmp
outsl
jle
xor
xchg
daa
add
xchg
mov
stos
xor
add
hlt
xlat
xchg
xlat
mov
add
add
sub
in
loop
add
shl
xchg
cmpsl
movsb
sub
dec
cmp
jnp
pop
icebp
sbb
aaa
pop
cmpb
mov
mov
and
xchg
stos
lret
subb
push
stos
lock
or
insl
and
andb
xchg
mov
push
mov
mov
and
scas
dec
fisttpll
in
mov
inc
jmp
jbe
xchg
sub
addb
jb
aas
mov
mov
and
hlt
add
sarb
jg
push
mov
imul
mov
inc
sahf
lret
mov
cmp
dec
sub
cmpsb
adc
test
mov
sbb
xlat
out
enter
pushf
add
jmp
test
push
add
xor
mov
push
cwtl
in
sub
sbb
imul
ljmp
cmp
lret
ss
dec
cwtl
sub
inc
pop
nop
rcll
imulb
imul
add
jnp
sbb
inc
pop
and
daa
push
fwait
roll
cmc
insl
push
xchg
lcall
xchg
ficomps
frstor
sub
out
and
bound
xchg
push
iret
dec
push
or
jp
cmp
cmp
iret
icebp
in
or
mov
popf
lods
jbe
hlt
adc
lahf
pop
loop
sarl
pop
add
sarl
mov
loopne
mov
movsl
outsb
xor
add
cmp
or
out
std
int3
xor
enter
movsl
and
inc
enter
fisttps
les
and
dec
pop
leave
test
stc
push
fs
xor
jno,pt
add
xchg
les
aas
xlat
loope
push
imul
mov
popa
call
lret
lcall
sarb
into
out
rorl
xor
mov
mov
xchg
cltd
xor
loopne
insl
sbb
test
dec
push
jl,pn
xor
stos
xchg
jge
cmp
pop
divl
push
cmc
push
sub
test
mov
mov
jno
pop
rclb
fstl
mov
push
mov
subb
lret
xlat
xchg
add
stc
and
stc
and
cmp
inc
jb
notb
fbld
jecxz
push
mov
and
xor
adc
loopne
das
lds
int
mov
insb
lahf
into
cwtl
jo
leave
sub
push
cmp
push
xor
insb
push
std
ljmp
jne
iret
hlt
mov
popa
push
cmc
shlb
cmp
fbstp
push
shrw
mov
dec
into
fisttps
popl
out
loopne
xchg
in
jl
jmp
aam
imul
mov
ror
inc
loope
ja
ficompl
jl
ja,pt
ds
xor
loope
fbld
mov
pop
jbe
js
stos
leave
nop
mov
lods
scas
pop
inc
fsub
jno
add
add
shrl
or
pusha
mov
ret
xchg
iret
ret
or
or
jne
js
adc
lahf
sar
jno
mov
mov
mov
push
jl
fidivrs
jo
sti
outsb
call
decl
cmp
dec
xor
das
rsqrtps
stos
pop
dec
xor
adc
add
push
int3
lock
inc
or
mov
nop
shl
mov
cmp
adc
jmp
lock
das
ss
bound
lock
sbb
dec
and
push
dec
cmp
mov
adc
mov
cwtl
into
iret
adc
xlat
and
lods
mov
jbe
rcrl
or
push
mov
fnsave
mov
push
and
sti
je
adc
mov
call
insl
aas
dec
mov
fcmove
add
push
xor
popf
popf
mov
fmull
add
fcoml
shl
call
xchg
push
ds
lcall
popa
ja
mov
push
ret
jge
mov
test
push
jmp
addr16
pushf
jg
loope
jo
aam
mov
shr
adc
or
inc
push
aaa
addr16
shlb
cmp
mov
xchg
setns
cmp
movsl
mov
and
pop
mov
cwtl
popf
jmp
iret
jecxz
repz
ja
test
es
shl
mov
sbbb
mov
pop
icebp
sub
inc
ss
sub
outsb
push
in
shlb
jl
daa
sub
scas
rol
add
add
mov
mov
in
iret
lods
sub
insl
inc
inc
xchg
lret
xchg
cmp
dec
int
mov
movsb
lock
xchg
into
mov
mov
mov
jp
mov
sbb
xchg
fsubl
inc
lds
orl
xor
adc
mov
push
dec
loop
pop
dec
scas
fisubrl
loopne
repnz
cmpsb
xlat
push
inc
clc
add
and
sti
sar
imul
dec
sarb
add
int3
sti
add
fcoml
arpl
inc
cmp
popa
das
sub
jno
shrb
int3
sbb
or
out
dec
mov
call
mov
jns
mov
dec
cmpsb
cmp
in
jecxz
push
test
mov
mov
pop
jnp
lods
popa
js
fs
loope
cs
fcoml
sub
push
movsb
popf
nop
sbb
popa
in
out
aaa
push
xor
pop
aad
adc
std
push
mov
and
sbb
movsl
xchg
and
out
dec
repz
mov
pushl
les
dec
and
aaa
into
pop
pushf
adc
cmpsl
pop
out
sahf
or
mov
and
loopne
testb
aaa
fimuls
or
test
adc
or
inc
test
pop
mov
pop
or
pop
test
add
outsb
xchg
push
sub
or
lds
jg
mov
and
adc
cwtl
in
dec
dec
xor
mov
sti
sub
add
add
xchg
loop
dec
cmp
dec
scas
cmp
mov
out
pop
andb
and
bound
xchg
jge
cld
jns
idiv
xor
adc
inc
and
mov
and
es
sbb
mov
imul
push
sbb
cmp
mov
mov
repz
push
mov
sbb
insl
and
bound
dec
xchg
inc
andb
imul
add
pop
movsl
and
testl
inc
andl
xchg
lcall
leave
loope
jmp
data16
ror
cmp
xchg
cmp
jne
xor
mov
jno
loope
add
pop
fmulp
repnz
inc
mov
add
or
lret
dec
xchg
jle
and
xchg
xor
mov
dec
sbb
pop
mov
push
xchg
and
xor
shlb
adc
xor
mov
lahf
stos
in
ret
push
sub
stos
and
sbb
push
mov
cmpb
outsb
gs
loopne
xor
lock
fbld
insl
push
add
sub
enter
shll
aas
inc
cmc
out
test
inc
push
jbe
in
inc
add
insl
inc
jmp
jno
xor
fs
adc
jle
mov
aad
push
inc
loope
outsb
mov
and
outsl
out
and
sbb
sbb
xchg
das
inc
inc
cld
mov
push
out
popl
add
outsl
jg
cmp
mull
inc
jmp
pop
mov
adc
dec
or
es
jno
xchg
ljmp
mov
sahf
mov
into
ss
mov
mov
push
jae
inc
js
xlat
inc
dec
cld
in
add
clc
sbb
cmp
inc
inc
int
and
pop
call
insb
mov
xchg
inc
inc
xchg
sub
jge
adc
jno
adc
lret
aas
movsl
xchg
les
pop
jl
je
mov
pop
inc
aas
push
and
dec
in
cmp
cmp
adc
inc
push
sub
dec
push
mov
imul
loop
push
stos
or
push
mov
mov
mov
in
in
lods
lcall
sub
iret
ret
mov
sbb
ficompl
pop
shll
xchg
jno
out
je
ss
test
aas
imul
fxch
jbe
sub
jl
pop
icebp
jp
and
mov
mov
mov
sub
cltd
or
nop
mov
or
imull
gs
ljmp
pusha
dec
dec
or
clc
adc
loopne
lcall
mov
jge
mov
mov
inc
ljmp
mov
in
int
in
mov
push
xchg
dec
in
mov
sbbb
popl
rcll
xchg
inc
mov
into
arpl
mov
das
sub
cli
jle
mov
repz
out
subl
das
testl
lods
jo
mov
aam
and
fs
pop
fisubs
out
push
push
lds
adc
adc
or
in
lock
xor
pop
in
sbb
fsubl
incl
mov
lahf
jb
test
pop
stc
sub
insb
ja
mov
lret
lret
jp
sbb
cmc
jae
lcall
add
jl
outsb
inc
mov
jne
jb
hlt
pop
mov
outsb
repz
mov
jb
mov
int
and
cmc
jb
adc
out
cmpsl
ret
mov
or
shlb
mov
sub
sahf
aam
or
pop
cmp
mov
xchg
test
cmp
mov
cltd
repz
sbb
push
sub
in
imul
jns
lret
adc
les
mov
adc
cmp
sbb
inc
pusha
inc
stos
popf
fs
lret
mov
inc
in
test
in
adc
push
sbbl
dec
fldl
ss
sti
xor
lcall
cmpsb
int3
sub
xchg
pop
test
nop
popf
xchg
cwtl
stos
or
adc
pop
sarb
mov
cli
jno
adc
inc
dec
pop
in
cmp
add
mov
sbb
shl
add
sbb
xor
jb
and
ja
lret
dec
nop
jo
lds
cld
jnp
pop
cmp
aas
std
movb
cmp
in
sahf
inc
push
in
ret
adc
mov
lods
cs
push
rcrb
adc
pop
outsl
clc
mov
cwtl
sub
nop
pop
sub
scas
mov
pop
sub
xchg
ja
dec
sub
ror
js
outsb
cmp
sbb
movsl
dec
add
cmpsl
jbe
xchg
test
adc
data16
adc
cmpsl
fstpl
divb
adcl
dec
add
andl
mov
inc
arpl
shll
jbe
xchg
mov
je
outsb
loop
adc
jb
int
or
dec
or
xor
inc
jg
data16
divl
sub
into
dec
and
or
ficoml
dec
push
shrb
ja
jl
shll
lods
aad
je
sbbl
mov
ss
jb
mov
jno
insb
mov
lods
movsl
mov
mov
or
adc
xchg
mov
arpl
std
scas
test
jge
inc
cld
xchg
mov
push
aam
nop
enter
dec
add
mov
pop
cltd
outsl
fdivs
inc
push
jo
popa
jbe
sub
repnz
out
int
push
loopne
and
dec
in
mov
mov
push
dec
out
dec
inc
arpl
mov
mov
sahf
push
push
loopne
idiv
scas
sahf
cmp
and
sbb
sub
aaa
shlb
pop
das
fisubs
addr16
repz
adc
adc
mov
ret
loope
xchg
fistpl
pop
mov
popa
dec
cs
es
jl
push
clc
out
fisubl
mov
push
je
xlat
and
in
mov
sahf
movsl
imul
pop
in
ja
and
jne
mov
pop
mov
or
mov
cmp
loopne
pop
or
dec
push
sub
xor
push
push
negb
mov
leave
mov
and
push
push
cltd
fwait
jecxz
insb
add
sarl
in
ror
movsl
inc
xchg
rclb
jecxz
inc
into
stos
enter
mov
popa
cli
sub
in
dec
testb
nop
pop
or
and
mov
ja
dec
jbe
aad
pop
jno
fists
push
adc
mov
mov
lea
inc
xlat
sub
movl
or
inc
jl
or
pop
mov
jle,pt
pop
cli
jle
sahf
cmpb
scas
or
sbb
pop
test
jns
or
in
mov
sti
inc
push
daa
sbbl
clc
push
sahf
mov
test
inc
fstl
xchg
dec
lcall
xor
jae
popf
xchg
xor
jns
iret
adc
jno
mov
mov
jns
push
mov
and
cmp
lahf
movsl
jg
aaa
xchg
jg
repnz
sub
pop
loopne,pt
repnz
dec
xor
std
mov
out
dec
inc
cmp
inc
mov
std
or
jecxz
xor
sbb
pop
cmpsl
les
decb
push
sbb
push
aaa
add
dec
test
clc
sub
ret
jo
xor
pop
cmc
insb
or
mov
push
and
mov
cmp
sahf
jp
sahf
jne
xlat
or
or
dec
lahf
stos
adc
cli
adc
jno
test
sub
leave
outsl
jns
out
mov
adc
outsb
mov
inc
add
adc
cmp
lretw
or
sbb
cmpl
roll
mov
dec
frstor
insb
dec
pop
inc
add
dec
test
addr16
and
sbb
push
ret
ret
inc
outsb
mov
fcoml
push
hlt
adc
ss
mov
add
test
sub
sbb
pop
xchg
sbb
add
aaa
pop
ja
shlb
in
xchg
mov
xor
loop
out
and
cmpsb
lea
jb
adc
add
xchg
and
jns
or
imul
and
dec
repnz
cli
ret
loop
mov
mov
xor
out
sub
imul
and
call
arpl
aaa
push
mov
ja
pop
ds
lret
repnz
mov
ljmp
popa
dec
mov
mov
xchg
cmp
pop
xchg
pushf
xchg
outsl
fisttpl
ret
push
in
cmp
inc
pop
inc
in
faddl
xor
dec
clc
int3
sub
out
or
pusha
mov
add
xor
and
icebp
or
mov
andl
mov
test
dec
rol
lahf
rcrb
out
adc
fcoml
add
adc
sbb
or
pop
test
mov
push
aas
xchg
popf
addr16
xor
mov
mov
sbb
jnp
fmuls
imul
lret
add
daa
pop
cmpsl
adc
aas
xchg
mov
ret
fs
mov
iret
xor
sbb
jp
in
push
jo
icebp
add
xchg
notl
sbb
and
cmc
cli
xor
imul
sbb
stc
jecxz
add
insl
jg
call
add
mov
shr
loop
xor
sbb
sbb
lods
lahf
jb
jae
and
popf
adc
aad
mov
int3
sbb
inc
jecxz
jg
ret
xchg
daa
orb
pop
xor
outsb
orb
hlt
sbb
aam
or
push
xlat
dec
fs
ret
mov
test
rcrb
jno
cmpsb
mov
test
push
gs
ret
call
js
sub
inc
and
movsl
mov
in
dec
adc
xchg
inc
add
lahf
cmp
add
fiaddl
push
aam
pop
xchg
bound
into
sahf
aas
and
adc
scas
inc
xor
add
cmpsl
cmp
loope
loopne
notl
mov
shll
jl
sub
jl
lds
jnp
adc
cli
or
clc
mov
iret
int3
push
ljmp
aaa
mov
ds
sarl
fisubrl
ljmp
cs
mov
shlb
outsl
cmpsb
loop
stc
jecxz
dec
mov
lea
or
mov
and
out
dec
or
rorb
out
mov
out
jg
les
or
and
pushl
dec
das
subb
pop
cmp
mov
in
cld
les
pop
pushf
imul
cmpsb
mov
lret
adc
mov
sbb
mov
sub
imul
subl
xor
out
leave
andb
mov
or
jge
mov
loopew
dec
cmp
and
lods
and
incb
and
in
or
add
sub
mov
js
maxps
sub
and
sahf
jbe
je
mov
jo
stc
xchg
dec
ds
pop
jle
mov
mov
mov
xchg
ret
int
sub
xlat
sub
int3
movsl
fnstcw
popa
xchg
test
sub
add
xchg
xlat
cmpsl
pmulhw
icebp
cmp
jne
inc
data16
push
xchg
in
push
inc
sahf
mov
xchg
or
sub
movsb
inc
xor
scas
stos
jg
in
ret
xchg
inc
push
xchg
sub
int
jp
lret
jnp
sub
xchg
inc
lods
in
mov
test
pop
pop
outsl
out
adc
outsb
push
shll
xchg
ja
cmp
add
dec
arpl
inc
jmp
add
jl
xor
dec
lret
popl
and
xor
push
sar
stos
push
mov
dec
in
pop
int3
mov
out
lods
xlat
iret
cs
les
les
xor
arpl
ja
cmp
or
or
pop
or
cmp
and
or
pop
dec
jne
and
into
pop
inc
out
sbbl
xor
daa
and
shlb
jbe
int
fnsave
mov
cmp
icebp
dec
in
add
scas
push
jne
sbb
shlb
dec
pop
and
call
cmp
lock
cmpsb
and
xchg
cmp
xor
testl
stos
std
call
sub
cs
cld
fmulp
fistpll
aad
xor
push
jnp
jp
mov
jo
out
jno
mov
mov
xor
xchg
add
pop
or
push
jmp
sbb
clc
xor
negl
mov
mov
aam
xchg
popa
cs
xor
mov
sub
pop
cmp
std
sub
lea
sbb
aaa
outsl
test
xchg
xlat
fwait
repz
inc
dec
frstor
movsb
cmp
sbb
and
sub
rcrb
sub
mov
xchg
cltd
sub
enter
fnsave
mov
mov
push
aas
xchg
and
dec
mov
jl
test
decl
mov
xchg
lods
pusha
int
push
mov
iret
or
inc
mov
negb
out
fnstenv
jnp
testb
scas
inc
jecxz
pop
push
out
sbb
mov
mov
sub
cmc
std
or
pop
std
int
cmpsl
mov
popa
loopne
pop
xchg
mov
xchg
imul
lods
cld
mov
dec
xchg
push
jmp
push
adc
imul
pop
cmp
xor
xor
ja
notb
loopne
jg
add
inc
pusha
or
shlb
pushf
xchg
push
enter
test
mov
jle
inc
add
add
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
negl
mov
xor
or
xor
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
jmp
or
inc
mov
insl
mov
inc
pop
addl
addr16
or
hlt
pop
and
lcall
aad
cs
in
shll
scas
jmp
mov
lds
sub
sub
stos
push
xchg
sub
sti
cmp
call
inc
pushf
fwait
insl
xchg
adc
out
jbe
push
jns
cli
cli
divl
je
shll
jle
test
and
jp
inc
add
sar
jle
lcall
xor
addl
jns
xor
fstps
ljmp
mov
add
inc
insl
aad
inc
imul
pop
outsb
sub
cmp
pop
dec
roll
xlat
adc
mov
inc
shlb
dec
jp
mov
mov
xchg
mov
jmp
loopne
cmpsb
cmp
clc
aam
pop
jp
rol
popf
inc
sahf
mov
sub
push
jno
loopne
fistpl
and
lret
sti
insl
addl
call
add
add
adc
add
iret
ds
imul
mov
out
pop
jg
push
ja
fiaddl
mov
imul
mov
test
mov
fildll
lret
fisttpl
rcr
inc
mov
je
adc
mov
daa
xchg
dec
out
cli
inc
ljmp
sub
pop
dec
mov
push
fs
lds
xchg
popf
dec
aas
and
cmc
arpl
scas
lds
cli
mov
mov
pop
stc
cmpsl
add
sbb
fldenv
mov
call
or
ret
cld
sub
rolb
lret
cmpsl
cmp
std
mov
dec
in
sbbl
xchg
sti
adc
decl
pop
in
push
ja
push
sbb
cmc
mov
int3
jp
and
inc
jns
mov
or
mov
dec
inc
dec
cmp
jge
push
repz
icebp
xor
cltd
sub
cmp
and
rol
sub
ret
ja
xchg
push
aam
lods
lods
adc
dec
out
adc
pop
add
push
and
pop
ret
imul
and
adc
mov
or
ret
in
inc
out
xor
pop
mov
sub
lcall
dec
xor
outsl
dec
mov
cmpsb
int3
add
in
data16
sbb
lock
cmpsb
fs
int
sbbb
lahf
ljmp
xchg
sbb
sub
cmp
xchg
cmp
pop
mov
movsl
jge
sahf
xchg
or
icebp
test
rorb
and
decb
psubsb
pop
cmpl
pop
nop
fidivrs
ljmp
sub
sbb
jge
adc
rcl
add
push
cmpsl
inc
sub
mov
stc
mov
mov
mov
mov
jo
iret
ret
scas
jo
test
cmp
adc
in
fldt
scas
fcoml
and
push
dec
jge
mov
and
inc
iret
out
rcl
fcoml
adc
aaa
mov
ret
adc
cmpl
or
mov
adc
test
xchg
mov
and
mov
fwait
jb
dec
pusha
xchg
cmpsb
es
fistpll
mov
push
mov
mov
jb
nop
pop
lods
popa
and
sbb
gs
rcrb
lods
and
add
imul
ret
adc
mov
enter
dec
sub
shrl
cmc
add
dec
jle
mov
dec
notl
jns
inc
imul
adc
mov
daa
imul
sar
subb
hlt
cltd
in
xlat
or
mov
test
pop
repz
add
sar
int3
push
add
sbb
movsb
pop
cmp
std
das
adc
push
sbb
sti
dec
fwait
jecxz
or
out
mov
popa
sbb
pop
pop
test
add
inc
or
stos
xlat
sub
mov
mov
movsb
or
cmp
or
ds
cli
mov
cmc
out
inc
jo
je
inc
stc
and
in
cmp
in
shl
repnz
fsubl
inc
outsb
inc
pop
enter
pop
inc
mov
xchg
push
test
sub
jl
outsb
lret
mov
repnz
pop
loop
fcoml
or
dec
adcl
and
sahf
adc
in
mov
loope
ret
adc
mov
aas
fwait
cli
add
add
dec
out
lock
repnz
leave
scas
push
imul
add
fs
jle
iret
pop
add
mov
jecxz
repnz
aas
xor
cmpsb
ret
lods
test
test
pusha
jl
repnz
mov
push
popf
mov
ljmp
jecxz
iret
dec
sub
jns
mov
dec
adc
xor
test
cmp
int3
lods
xor
sbb
aaa
movsl
mov
sbb
and
mov
sub
hlt
insb
xchg
inc
mov
aaa
andl
cmp
push
out
das
rorb
mov
mov
or
push
jle
jne
int3
insb
add
out
pop
push
stos
xor
ret
test
push
into
jecxz
jbe
pushf
adc
fstl
sbb
rorb
and
dec
sub
push
mov
xor
or
daa
add
push
mov
test
cld
repnz
cmp
dec
sub
or
lcall
adc
push
je
pushf
add
fdivl
aaa
cs
sub
aad
les
lods
push
pop
movsl
repnz
enter
lret
fsubrp
push
rolb
push
out
jnp
nop
lods
repz
fidivl
mov
inc
pop
idivl
lods
adc
jg
inc
cmp
out
sbb
pushf
xor
xor
mov
arpl
mov
pop
clc
jle
test
clc
cltd
mov
push
imul
in
xchg
adc
out
sub
rclb
xchg
cmp
add
imul
jnp
popf
mov
mov
jmp
fdivrl
mov
dec
cmpsl
loopne
mov
movsl
jbe
adc
in
adc
jo
imul
jne
jnp
cmpsb
pop
sbb
mov
cmpsl
xor
cmpsl
rcll
cmp
xchg
xor
repz
bound
and
imul
fs
pop
rclb
and
aaa
xchg
icebp
xchg
sbb
aaa
in
sbb
xchg
pop
pop
ret
adc
mov
enter
dec
inc
xor
cld
in
addl
shlb
xor
daa
fiadds
ljmp
push
jns
nop
idivl
in
sub
jae
idivb
jb
out
add
imul
adc
add
loopne
cli
sbb
es
cmp
lahf
mov
aad
and
leave
ss
push
ss
fdivr
push
jmp
mov
adc
jecxz
and
rolb
incl
imul
mov
push
and
and
int
sbb
ds
pusha
aaa
arpl
mov
bound
xor
aas
ja
testl
dec
jo
mov
les
dec
or
push
call
pusha
mov
test
inc
pop
jo
cmp
outsb
into
dec
adc
mov
aas
push
mov
push
mov
jmp
add
jge
push
out
pop
mov
hlt
xchg
lods
jae
mov
aas
into
repnz
or
pop
xchg
xchg
pop
push
push
pop
xchg
xchg
daa
outsl
sbb
leave
jmp
xchg
push
xchg
mov
aam
shrl
jmp
das
stos
jo
dec
es
adc
sbb
jns
lret
or
ds
popa
dec
pop
loop
pushf
scas
daa
push
call
mov
imul
inc
popl
gs
scas
es
andb
fxch
cmp
and
inc
jne
mov
add
cmp
adc
fstl
fistl
or
pop
test
xchg
cwtl
xchg
mov
rorl
ret
addr16
cli
and
lret
mov
outsl
gs
cmp
or
outsb
adcb
inc
sub
bound
jne
mov
call
test
not
lcall
cmpl
push
xor
lret
or
aaa
out
pop
push
std
dec
adc
add
jo
inc
inc
or
pop
in
popa
jae
xchg
imul
lret
sub
shll
mov
jns
cmpsb
psrlw
add
pusha
inc
mov
xchg
outsb
and
mov
mov
dec
push
aaa
rcrl
inc
xchg
faddp
xchg
negl
icebp
adc
mov
nop
pop
xchg
fistl
cmp
clc
mov
ret
sbb
jae
ja
mov
mov
lods
xchg
xor
lcall
popw
mov
loop
out
out
xchg
push
adc
adcb
mov
push
sub
push
or
mov
sarl
push
hlt
aas
aaa
xchg
and
xlat
cld
push
and
cli
hlt
sbb
and
repnz
andl
mov
scas
sbb
ss
sub
ljmp
push
mov
pop
jle
cs
xchg
and
mov
sub
mov
imul
aad
mov
ljmp
shll
push
gs
aaa
xor
les
xor
adc
pop
mov
out
xchg
add
xor
xor
and
ljmp
and
push
dec
pushf
pop
push
lds
sbb
in
mov
out
cmp
dec
test
aas
push
xor
mov
andl
shlb
xchg
lcall
ja
mov
inc
xlat
aas
fidivl
in
and
fisubl
insl
popf
jb
je
and
in
inc
fistpll
loopne
push
leave
sarl
inc
popf
iret
push
adc
daa
mov
inc
out
push
frstor
push
xor
sub
jp
push
mov
mov
insb
lret
lods
aam
rorb
xchg
or
push
inc
das
cmpsl
push
mov
adc
lret
fbstp
scas
sti
adc
subl
scas
sbbl
add
pop
rcll
icebp
sub
test
pop
aas
enter
add
icebp
push
push
mov
dec
jmp
add
sub
xchg
pop
push
push
fld
xchg
pop
enter
std
sub
nop
lret
xchg
add
jge
cmc
orb
enter
jae
sbb
xor
std
and
pop
aaa
dec
and
mov
cmc
cmpsl
cmp
and
in
cltd
mov
pop
test
xor
dec
pop
or
jno
mov
or
mov
outsl
dec
loope
dec
in
out
fs
das
mov
rcrl
js
iret
test
pusha
sub
aaa
clc
push
push
cltd
sbb
and
sub
into
xchg
pop
fs
dec
push
and
mov
ficoms
mov
adc
stos
lods
into
out
shr
fcmovbe
popf
inc
movsl
mov
sub
mov
mov
popf
add
dec
imul
das
jl
iret
daa
and
outsl
in
push
mov
sahf
stos
mov
lods
lahf
pop
xchg
xchg
sbb
push
jecxz
mov
jl
fmuls
mov
xor
push
xchg
mov
sbb
lcall
mov
fwait
jmp
add
mov
and
pop
pop
fucomi
sbb
jle
mov
push
xchg
imul
aas
jl
push
sbb
sbb
jb
popf
inc
xchg
sti
push
das
xor
push
xchg
mov
xchg
mov
xor
mov
inc
jg
dec
xchg
cmpsb
shrb
sub
pop
push
test
xchg
lods
add
jmp
and
jne
push
stos
sub
xor
fwait
test
pushf
iret
mov
das
xor
fsubrl
test
into
and
jo
jne
pop
sub
xor
push
insl
jns
lahf
add
lcall
sub
pop
imul
push
push
mov
dec
sub
xor
adc
mov
leave
add
loopne
jecxz
out
stos
adc
outsl
stos
xlat
sub
mov
mov
inc
pop
push
cmp
mov
add
mov
sbb
mov
jbe
xor
jo
in
xor
xor
xchg
jg
sbb
mov
movsl
push
mov
adc
sub
das
filds
ficomps
orb
sub
adc
mov
jae
mov
sarb
rclb
or
sbb
cltd
mov
jns
std
loopne
pop
sub
std
jae
dec
pop
imul
popa
popa
cmp
test
mov
jne
cmc
dec
pusha
adc
fmulp
pop
daa
cs
rcrl
jge
fstpt
push
fldl
or
std
int3
popf
outsl
addr16
mov
scas
int
std
sub
add
scas
in
fsubl
test
or
repz
test
outsb
fimull
xchg
mov
cmp
adc
test
jmp
ss
mov
das
mov
cmp
and
in
xchg
imul
or
mov
fstpt
mov
aad
pop
cmp
mov
jo
cmp
notb
xor
fucom
lret
inc
adc
in
addr16
ja
xchg
dec
scas
jle
xor
pop
out
imul
lahf
mov
mov
adc
pop
add
test
sub
adc
or
subl
mov
pop
adc
ret
loopne
and
inc
inc
ljmp
pop
sbb
sti
je
orl
sbb
shrb
rcl
push
and
inc
testl
scas
cmp
mov
ret
arpl
sbb
imul
cmp
mov
hlt
out
adc
ret
mov
fmul
mov
data16
out
xor
or
gs
cmp
xor
and
in
or
out
out
aas
or
mov
inc
jbe
fmull
fists
mov
and
test
popa
inc
xchg
push
dec
cli
movsb
test
mov
mov
out
inc
aad
stos
add
test
pop
mov
in
or
mov
jp,pn
mov
insl
call
dec
cmpsb
int3
testl
push
out
aad
mov
or
sbb
mov
push
pop
test
lods
sub
out
and
mov
dec
push
stos
jae
mulb
mov
movsb
dec
shrb
xchg
sbb
mov
cs
push
push
sbb
loope
and
lret
mov
orb
mov
and
mov
sbb
ljmp
iret
lods
fistps
jge
xor
adc
addb
sub
mov
sub
cmpsb
and
jle
das
inc
mov
pop
rcrl
mov
hlt
mov
lods
ljmp
push
fldl
pop
xchg
and
xchg
xchg
sub
stos
inc
imul
ljmp
repz
jmp
ror
or
shrb
xchg
jl
les
mov
xchg
jns
je
mov
jbe
inc
in
stc
outsl
ret
cmp
mov
xor
mov
mov
adc
inc
in
mov
out
pop
popa
pop
dec
xchg
mov
insb
sbb
mov
mov
mov
lcall
lret
add
mov
mov
stc
jb
jecxz
scas
lahf
push
pop
mov
iret
fchs
stos
lret
outsb
dec
sub
xor
xor
roll
xchg
jns
mov
adc
cmp
add
cld
cmp
orb
push
push
jo
pusha
das
push
stos
out
jp
gs
push
shr
jbe
pop
inc
mov
in
and
cltd
pop
adc
das
aam
ds
adc
push
fisttpl
pop
loop
adc
fbld
mov
mov
pop
in
push
sarl
jo
insb
movsb
filds
pop
and
jmp
push
movsb
subb
pop
lcall
xchg
ds
inc
std
loope
out
cwtl
js
pop
jle
rcrl
push
dec
std
cs
xchg
test
dec
jne
cmp
stc
cs
push
inc
push
mov
push
aas
dec
push
pop
push
and
mov
in
ds
je
mov
lcall
push
push
stc
sbbb
test
ds
add
mov
stos
hlt
xchg
push
cmc
cwtl
inc
dec
mov
leave
leave
lock
das
adc
mov
cmpsl
inc
jno
aad
jns
xlat
adc
push
jb
sbb
scas
pusha
testb
cmp
out
cmp
pop
inc
add
roll
dec
outsb
shrl
sbb
addl
mov
aam
inc
cmpsb
sbb
add
fisubl
cmp
js
xchg
mov
jecxz
mov
fnstcw
fdiv
cwtl
flds
jne
insb
call
dec
dec
or
xchg
rclb
add
lret
cltd
cmp
mov
pushf
stc
sub
push
out
inc
inc
lahf
mov
push
mov
sti
or
push
ja
fbld
bound
and
xor
sub
push
popf
sbb
or
ds
sbb
pop
je
adcb
sub
movsl
adc
ror
adc
mov
xchg
out
jg
add
ret
mov
test
nop
xchg
sbb
bound
fneni(8087
rcll
sub
cmp
jnp
pop
or
aas
orb
add
test
and
mov
pop
xor
aas
out
add
push
jecxz
mov
pop
push
sarb
notl
push
sbb
xchg
icebp
dec
adc
cli
dec
jge
dec
lea
leave
jp
inc
mov
test
lods
mov
sub
iret
jo
and
mov
and
sbb
sar
ss
repz
fisubl
loopne
dec
mov
andl
cmc
jbe
pop
jbe
push
int3
sbb
mov
sub
js
ret
scas
mov
ds
cltd
out
jbe
dec
sahf
mov
and
gs
sub
jno
adcl
dec
notb
dec
and
dec
mov
inc
arpl
sub
adc
or
sub
xor
shll
add
xchg
pop
mov
push
mov
int3
in
je
xor
inc
sub
dec
movsb
and
mov
mov
sub
dec
push
pop
lock
je
add
jecxz
jmp
fsubp
push
adc
mov
lea
lcall
lcall
repnz
stc
sub
mov
call
sbb
jge
push
bound
adc
insb
ret
repnz
jnp
aad
dec
inc
out
fmuls
adc
nop
out
xchg
adc
lcall
push
fwait
pop
out
movsl
jnp
xchg
or
mov
inc
std
inc
mov
mov
push
aaa
mov
and
imul
cmp
cmp
jp
cmpsl
in
test
xchg
and
nop
aas
lods
mov
loop
arpl
add
testb
sbb
add
incl
mov
sarb
or
mov
imul
jmp
call
mov
push
test
dec
cli
std
push
pop
std
mov
cmp
test
add
push
in
sarb
cld
insb
int
pop
ret
sub
cmp
enter
xor
das
in
ss
xor
push
sbbl
adc
cmp
int3
dec
aam
ja
test
mov
dec
lcall
mov
push
jbe
inc
inc
jo
dec
in
test
mov
mov
ret
dec
ja
mulb
sub
and
and
cmp
jecxz
outsl
out
mov
pop
jno
xchg
iret
rol
lret
dec
cltd
lcall
cmp
sbb
inc
or
mov
in
in
aad
jecxz
and
jmp
dec
cmp
stos
test
or
out
inc
nop
jno
dec
xchg
add
cmp
in
int3
aam
test
scas
ss
sub
xor
jg
inc
mov
pavgw
outsl
daa
jns
cmp
adc
int
popf
mov
arpl
or
push
push
dec
adc
mov
daa
adc
outsl
push
fwait
ja
je
jp
out
jl
mov
sub
icebp
cmc
jmp
jg
mov
popf
pop
and
adc
cmp
test
xor
das
mov
lock
jb
cld
mov
out
sahf
and
add
adc
shrb
in
fcos
adc
gs
jl
pop
xor
inc
mov
lret
pop
mov
push
add
movsl
mov
mov
daa
sub
add
pop
stos
imull
lret
push
lods
into
fdivrl
mov
fimull
and
in
addr16
lahf
mov
mov
push
fmull
and
adc
jl
dec
in
push
pop
sbb
insl
push
add
mov
sti
or
push
stc
xor
or
mov
xor
mov
pusha
popa
cmp
xchg
rol
sti
jle
jb
xor
popf
shrl
push
orb
pop
mov
add
repnz
dec
pop
mov
cmp
xchg
pop
inc
and
inc
xor
clc
sbb
cmp
push
adc
jo
fcompl
lret
jnp
rol
jo
sub
add
jmp
adc
inc
fists
repnz
cltd
xor
int3
xor
dec
lea
xchg
sbb
icebp
in
xorb
ror
clc
xor
mov
movsb
adc
xchg
mov
mov
jge
mov
sub
popa
repnz
outsb
jne
sbb
inc
iret
add
int3
pop
xchg
mov
pop
cmp
movb
idivl
sbb
aad
aam
das
shrl
push
mov
push
sar
lret
adc
xchg
and
dec
xchg
icebp
lcall
leave
subb
sub
mov
mov
xor
jnp
xchg
adc
mov
lds
or
and
pop
cli
dec
inc
lods
divb
pop
ret
fwait
xlat
je
xchg
rorl
mov
into
addr16
xchg
sbb
jb
sbb
repz
arpl
xchg
gs
test
and
popa
shr
mov
xor
test
mov
and
fsubrp
mov
pop
mov
jge
jmp
fcmovne
inc
pop
jmp
xor
iret
cs
and
mov
jo
and
dec
fs
xchg
scas
xor
ret
cmp
ficompl
or
sbb
xor
pusha
push
les
cmpsb
add
add
bound
mov
or
dec
push
mov
mov
add
cmpsl
pop
or
nop
lahf
push
sub
inc
inc
mov
sar
pop
fldcw
mov
loopne
pushf
dec
fcomps
popa
fisubrs
mov
gs
xchg
mov
inc
dec
jo
cli
jnp
in
mov
loope
cmp
inc
jns
outsl
cli
fwait
out
arpl
neg
jp
insb
xchg
jb
rol
fldt
jb
cld
sti
les
scas
cmp
fsubrs
add
ljmp
fistl
push
shrb
scas
mov
in
xchg
adc
pop
pusha
mov
cmc
cli
loope
arpl
jge
mov
mov
pushf
fld
push
xchg
add
sub
jmp
das
sub
sbb
jle
shll
leave
mov
mov
mov
pop
push
jns
gs
mov
lcall
sub
in
xor
call
push
fldcw
add
mov
xor
dec
mov
gs
pop
scas
mov
xor
daa
xor
pop
ret
lret
and
test
lods
sub
xcrypt-ecb
cmpsl
mov
pop
call
add
fstl
aad
repz
enter
mov
dec
mov
push
cwtl
out
adc
sbb
mov
test
jle
and
test
add
mov
ds
stc
aad
outsl
pusha
popf
repnz
jmp
fsubl
mov
xchg
jnp
popf
adc
or
fdivrs
jo
jns
int
orl
repz
test
push
mov
mov
in
cmp
mov
dec
mov
inc
loopne
imul
cmp
mov
lea
loopne
xlat
or
subb
insl
cmpsl
cmpsb
pop
cwtl
out
loope
pop
lods
lock
adc
cltd
cltd
or
popa
sar
ljmp
add
fucom
mov
in
and
outsb
cmpb
fsubs
outsl
loopne
repnz
ds
sub
cltd
adc
and
and
adc
ret
inc
fisubrs
sub
stc
ss
loopne
adc
fs
pop
lret
pop
test
pop
and
test
adc
add
dec
or
pop
xor
ds
adc
sbb
andb
pushf
jp
scas
pop
and
loopne
add
aas
inc
jmp
nop
mov
xchg
inc
mov
js
pop
int
data16
int3
push
push
inc
dec
arpl
xchg
mov
imul
dec
sbb
push
jl
loopne
push
sbb
jae
loopne
ja
push
test
repz
popa
push
shlb
xchg
xor
fcmovu
jbe
pop
jle
cmp
test
pop
rclb
je
mov
shr
lods
cmp
or
sarl
stc
jno
adc
bound
adc
dec
scas
stos
sub
filds
jne
roll
jmp
dec
repnz
rolb
cmp
das
je
outsb
xlat
lds
dec
cmpsl
sbb
in
sahf
xchg
cmp
iret
xor
andl
xchg
neg
into
ret
iret
pmullw
mov
int3
andl
or
xchg
jne
jns
jno
fsubrs
sbb
and
cltd
push
xchg
ljmp
nop
shrl
loop
cmp
xlat
fists
sbb
and
xchg
int3
dec
mov
jle
mov
push
test
xor
xor
ret
cmp
sbb
adc
adc
insl
jmp
cs
aad
xchg
dec
pop
es
jno
sti
out
push
cld
dec
icebp
sbb
mov
insb
sti
dec
into
fmull
jnp
data16
js
jl
jg
rcrl
and
in
dec
mov
fs
lret
mov
dec
add
dec
push
cmpl
das
mov
jbe
sbb
fdivl
gs
push
pop
adc
mov
jg
jmp
stos
iret
loop
lods
vmovlps
cmp
push
in
cmc
repnz
loopne
mov
push
lret
mov
mov
jnp
das
shll
dec
inc
add
rcl
mov
mov
in
mov
push
popf
loopne
bound
mov
fisttpl
insb
out
and
lcall
sbb
xchg
out
pop
fcom
ss
cmp
lret
pop
xor
int
ljmp
js
ficoml
pop
xchg
fsts
ljmp
scas
xchg
hlt
pop
lret
pop
jle
mov
ffreep
pop
mov
add
mov
adc
mov
mov
mov
xchg
push
sbb
repnz
das
push
test
mov
ds
rorb
ja
sbb
mov
notl
cmp
push
inc
lcall
cld
or
stos
mov
xchg
lock
mov
mov
repnz
or
imul
sti
cmc
cmp
cmp
stos
add
insl
push
popf
push
sarb
mov
xchg
pop
pusha
push
bound
pop
stos
out
cmp
subl
ds
jge
pop
xchg
add
mov
je
subb
insl
lea
cli
adc
jp
jge
xorb
jo
sub
push
insb
mov
dec
inc
es
cmpsb
rclb
rcrl
aaa
int3
arpl
and
arpl
dec
in
inc
adc
dec
sub
shl
or
cmc
stos
rclb
in
scas
lahf
stc
jp
mov
aam
lea
fadds
aad
pop
jae
jmp
cmpsl
pop
dec
push
dec
push
add
or
push
aas
push
xor
xor
xor
mov
sub
cs
lods
and
push
adc
rol
roll
test
ret
cli
jbe
loopne
xor
cld
out
dec
in
sub
xchg
icebp
call
fwait
add
shrb
clc
jmp
shrb
popa
pop
push
fstpl
aam
fwait
adc
mov
cmp
andl
or
aaa
dec
ret
sub
dec
mov
int
test
dec
addr16
iret
push
test
in
loope
pop
pop
je
sbb
lea
cmp
pop
adc
mov
push
or
lcall
test
push
addr16
jle
rcll
rol
adc
mov
insl
pop
cs
cmpl
pop
pop
mov
clc
and
push
inc
sub
and
cmp
testb
push
or
ja
sbb
out
adc
xchg
je
xor
ss
lock
inc
mov
or
xchg
ljmp
jecxz
push
mov
push
mov
pusha
xor
xchg
push
lods
jae
mov
and
add
push
jge
mov
loopne
push
xchg
fisubrs
in
ds
mov
fwait
jmp
js
push
add
sbb
adc
andb
ds
sbb
fs
mov
int
imul
movsl
in
inc
push
rcrb
mov
xor
js
gs
notl
push
dec
cmp
out
push
push
add
mov
adc
fstps
pop
pop
dec
test
sub
adc
jg
fbstp
aad
mov
jno
enter
sub
inc
pop
mov
xchg
lods
dec
shl
push
xlat
jp
push
mov
mov
jns
xor
mov
out
ja
xchg
mov
bound
mov
xor
es
dec
push
adc
inc
cmpsb
mov
xor
sub
or
push
shrb
mov
js
ds
mov
mov
jo
ds
leave
testl
sub
cmp
add
int
sub
lcall
sbb
mov
sbb
in
mov
sbb
xor
fidivrs
pusha
xchg
loope
jno
icebp
and
cltd
fistpl
shl
lret
lret
mov
inc
dec
nop
dec
int
imul
mov
sub
loop
inc
add
movb
cmp
add
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jmp
mov
loope
addb
and
or
cmp
subl
xorb
adc
dec
lret
adc
inc
mov
mov
and
push
sahf
or
cltd
push
adc
cmpl
inc
cmp
loop
insl
sub
popa
push
cld
repnz
neg
add
shlb
push
insb
sub
dec
xor
mov
and
mov
mov
or
in
pop
sub
out
dec
lret
or
sub
out
push
icebp
lahf
inc
mov
and
mov
mov
out
sbb
std
or
cmpb
out
cmp
test
push
shrb
push
adc
cmpb
push
pop
inc
andb
pop
and
sbb
fwait
shl
jo
adc
xor
mov
pop
mov
or
xchg
ds
adc
nop
loope
call
xorl
fldt
test
idivl
out
pop
pop
movsl
mov
loope
adc
push
or
mov
out
mov
pop
jno
xchg
lret
push
pop
push
movsl
mov
push
inc
or
and
mov
movzbl
mov
outsl
sbb
bound
inc
or
push
pop
fsubl
aad
pop
test
ficoml
xchg
mov
jae
hlt
ret
mov
jo
dec
lcall
sahf
add
in
lods
mov
jo
in
push
pop
cmp
jge
or
mov
mov
mov
das
aas
test
jne
mov
cwtl
jnp
add
mov
cli
fdivr
cs
mov
leave
gs
aam
xor
outsl
lods
jnp
les
int3
cld
mov
shrl
iret
dec
add
mov
call
vmovups
jnp
ja
ror
add
cmp
mov
shll
cs
pop
pop
mov
insl
pushf
xor
mov
pop
ret
lds
push
cs
mov
lret
pop
outsb
repnz
cmp
jp
push
jg
int3
sub
or
mov
sbb
mov
fcmove
and
jle
sbb
mov
aaa
mov
mov
add
mov
call
xchg
mov
xor
scas
mov
popa
dec
mov
and
dec
xchg
scas
or
pop
subl
push
sub
fcoms
outsb
int3
mov
out
gs
daa
mov
adc
incb
gs
add
pop
dec
mov
and
jle
rcll
shlb
xchg
mov
mov
out
js
jmp
push
mov
ds
mov
loope
add
xchg
mov
mov
push
or
cmp
rorl
dec
mov
push
inc
sbb
iret
push
scas
lock
jle
jg
sub
ja
or
add
and
arpl
jno
or
pusha
add
push
ret
pop
popf
mov
movsb
mov
repnz
mov
shrb
jmp
push
jp
jmp
bound
or
cwtl
hlt
pop
xor
stos
jno
fwait
xchg
fsub
xchg
fisttps
sub
cmpb
arpl
mov
pop
clc
fs
mov
pop
sbb
push
fisttps
movsb
add
jg
push
mov
sbb
mov
jae
test
in
and
mov
pop
jne
mov
shr
aas
sbb
ljmp
dec
sahf
insl
and
mov
or
jns
sub
mov
pushf
inc
or
ja
test
xor
push
dec
mov
pop
push
dec
add
icebp
test
push
xchg
jae
adc
std
mov
push
das
mov
cmovnp
dec
jbe
call
mull
push
pop
repz
mov
sub
xchg
cmp
jl
jnp
and
push
je
cmp
scas
insl
or
mov
mov
adc
mov
add
iret
ljmp
mov
jae
and
mov
ja
add
mov
sbb
xchg
and
fnsave
push
xor
ret
sub
xor
cmpsl
inc
cs
or
test
pusha
push
pop
mov
mov
call
cmp
pop
and
into
cmp
cmc
sahf
push
xchg
mov
je
ds
popf
int3
mov
cs
mov
xlat
dec
outsb
add
in
mov
sub
push
ret
repz
cmpsb
dec
sub
mov
jne
pop
mov
jns
icebp
clc
lret
push
sub
aam
movsl
outsb
cmp
jnp
sub
xchg
pop
mov
cmc
cmp
mov
or
out
arpl
and
sbb
or
xor
repnz
lret
mov
sub
pop
fwait
mov
adc
inc
and
sbb
outsb
add
ret
push
inc
jmp
mov
std
in
pop
cwtl
pusha
sub
mov
xchg
orl
repz
lahf
sarb
fwait
push
stos
jecxz,pn
pop
inc
xor
cmp
imul
push
inc
mov
jae
mov
pop
xchg
or
sub
imul
add
pusha
cmp
mov
test
test
mov
out
fsubp
adc
std
in
jno
lock
add
jecxz
out
lahf
mov
imul
aam
outsb
lret
xor
push
test
pop
adc
adc
xorl
sbb
js
mov
daa
ds
pop
add
es
or
mov
inc
inc
xor
pop
push
xor
pop
mov
sub
data16
shll
cs
push
cmp
leave
mov
daa
inc
mov
lahf
mov
pop
test
xchg
pusha
outsl
mov
fcoms
xor
je
pop
mov
jg
movsl
imulb
dec
dec
add
push
or
lea
mov
movsb
jle
test
outsb
roll
push
add
aam
dec
inc
clc
out
sysexit
loop
mov
cmpsb
aas
push
repnz
push
jb
sub
inc
aad
fsubs
cli
dec
fdivl
mov
sbb
push
jb
test
mov
leave
mov
jb
popa
adc
icebp
add
and
fisubl
jg
mov
call
sbb
es
repnz
sbb
cmc
mov
pop
int3
lret
or
and
popl
test
sbb
mov
sub
xchg
pop
xchg
xor
dec
add
sub
sbb
enter
xor
jno
xor
add
xlat
xor
push
dec
xchg
nop
mov
fwait
push
jno
xlat
bound
dec
push
xor
push
stc
and
int3
fdivl
ja
lcall
mov
sbb
and
fldenv
xchg
pop
ds
mov
es
mov
gs
jnp
test
imul
mov
movsl
scas
imul
outsb
insb
insl
orb
ret
sbb
xchg
stos
sti
mov
sar
imul
push
xor
fwait
cmp
inc
dec
adc
jno
push
iret
push
int3
jle
mov
or
push
mov
xchg
es
scas
sahf
leave
rep
insb
pop
xlat
in
arpl
cmc
sbb
pop
das
inc
lahf
pop
gs
xlat
sahf
sub
bound
dec
daa
mov
test
dec
shll
add
mov
dec
inc
mov
insb
pusha
lea
jmp
push
mov
and
xchg
or
mov
pop
add
imul
dec
rcrb
dec
jbe
inc
xchg
and
or
and
mov
adc
cmp
mov
xchg
jae
cmpsb
add
xor
inc
loop
je
fsts
jnp
mov
xor
repz
or
insl
mov
mov
xor
rcrb
mulb
je
sub
ja
xor
cltd
outsb
cmp
lds
push
sub
sub
mov
dec
or
iret
jle
or
mov
in
into
mov
xor
repnz
mov
fbld
add
xchg
scas
inc
add
or
loop
jnp
loopne
mov
xchg
jb
idiv
ss
rcrl
push
xor
outsl
add
and
leave
inc
in
cli
xchg
lret
adc
pop
cwtl
push
inc
jle
mov
and
jp
adc
loop
test
addr16
out
inc
sbb
sbb
sahf
mov
pop
leave
jle
xchg
xor
sub
jecxz
mov
add
xchg
xchg
sbb
scas
lods
lods
rep
lret
xchg
lods
jae
ja
mov
popf
jg
mov
mov
fisttpll
sbb
and
insb
fidivl
adc
inc
xchg
inc
imul
jae
sarb
adc
fbld
sbbl
mov
add
pusha
fidivrl
mov
mov
adc
mov
mov
sbb
int
push
ss
insb
adc
inc
jae
pop
xlat
xchg
cmpsb
and
cmc
jae
mov
scas
enter
cmp
mov
inc
cmpsb
fs
or
pop
sub
push
inc
fsubrl
sti
aad
push
cli
shrb
mov
xchg
xor
xor
iret
out
lret
xor
insb
aam
pop
ret
dec
pop
rdpmc
xor
adc
outsb
inc
ret
ss
addr16
clc
pop
add
pushf
push
test
inc
mov
mov
dec
in
clc
scas
ss
lea
or
mov
jno
out
lahf
pop
es
and
cmpsb
push
sbb
sbb
loop,pn
fnstsw
push
xor
call
sar
lcall
inc
stc
push
cltd
js
adc
fcompl
jb
mov
ja
ljmp
mov
pop
jne
mov
add
fwait
jb
cmp
mov
pushf
jle
fwait
cmp
fbstp
icebp
test
rcrl
ljmp
mov
push
or
test
sahf
push
ficoml
idivb
inc
inc
insl
xor
xor
test
sbb
in
cmp
jg
idiv
fisubl
inc
xor
mov
mov
fmul
call
repnz
nop
xchg
lret
adc
dec
jmp
mov
movsb
lods
sbb
inc
ret
adc
repz
test
pop
adc
fxch
in
dec
sti
mov
pop
jl
push
aas
cs
sbb
mov
cltd
call
push
test
loope
xor
pop
or
cmp
das
sub
xor
test
mov
scas
pushf
test
or
jae
pop
out
mov
gs
shll
mov
ret
out
sub
sub
mov
in
cs
xor
std
jge
hlt
xor
out
lock
ret
jbe
bound
lock
les
add
repz
cmp
aad
and
lahf
pop
sub
sbbb
lods
jmp
outsl
lods
mov
in
xchg
cltd
cmp
xchg
movb
lret
inc
mov
inc
lret
fcmovnbe
and
dec
fdiv
ret
cltd
lcall
jnp
xor
xchg
aam
xor
inc
hlt
inc
xor
fstpt
inc
out
push
mov
cmp
and
fs
push
iret
sub
jl
mov
test
scas
movsl
mov
mov
xchg
xchg
mov
push
cmpsl
cmp
test
sub
popa
mov
xor
pop
add
inc
jl
pop
push
dec
adc
fidivl
and
in
dec
daa
jae
mov
arpl
jp
es
push
mov
fnsave
jle
stos
mov
lret
mov
cli
out
push
ljmp
or
in
mov
cmp
lods
pop
xchg
jne
add
inc
ljmpw
adc
pop
aad
mov
adc
adc
jns
aas
or
pop
jo
int3
loope
aaa
mov
mov
int3
rcpps
cmc
adc
adc
and
movsb
push
test
xchg
adc
jo
mov
popa
inc
push
loop
cmp
insb
mov
push
add
movsb
adc
sbb
pop
sti
pop
push
neg
popa
push
push
addr16
mov
notb
jnp
jp
loopne
jmp
pop
adc
jle
xor
inc
sub
cs
push
or
pop
iret
or
jnp
cmp
mov
icebp
ljmp
pop
mov
or
sub
out
mov
call
or
aaa
lahf
daa
jno
pop
or
not
mov
out
add
push
lods
popf
clc
add
mov
or
lock
dec
pop
or
inc
cmc
imul
push
fwait
ljmp
xchg
cld
push
mov
sbb
insb
fiaddl
pop
stos
scas
xchg
mov
dec
into
cs
dec
iret
cmc
decb
test
cmp
xchg
imul
inc
clc
cmp
sahf
leave
cltd
xchg
adc
popa
xchg
jno
aam
scas
xchg
mov
and
lds
mov
cli
xor
mov
repnz
sub
cmp
adc
loopne
push
cwtl
mov
push
pushf
or
fistl
dec
out
and
dec
dec
andb
enter
pop
cmp
sbb
out
subl
fldcw
mov
dec
jo
clc
aam
inc
inc
lods
fiadds
imul
xchg
divl
fcmovu
sub
ds
daa
mov
pushf
adc
sub
adc
test
jb
pop
jno
pop
lods
xchg
inc
push
jecxz
xchg
jle
xchg
xchg
xor
lock
inc
les
add
push
fsubs
jmp
jno
lret
dec
mov
inc
scas
inc
add
and
pop
mov
ret
pop
mov
mov
ja
xchg
les
sub
push
or
xor
adc
dec
mov
add
adc
pop
inc
xor
push
cmp
iret
push
cmc
aaa
ud2
movsl
and
fs
xchg
dec
in
ja
imul
cmp
xor
sub
shr
inc
pop
adc
jl
insl
pop
cmp
sahf
sahf
push
pop
ds
bound
inc
xchg
jge
sub
nop
nop
mov
jge
xchg
and
or
ss
lods
inc
bound
jl
dec
lds
push
inc
jns
ret
adcl
xor
mov
movsl
pop
out
sbb
xor
fdivs
insb
xor
xchg
add
pushf
lret
push
pop
in
mov
pop
insb
mov
cmp
testl
jmp
dec
mull
jle
and
movsl
jbe
cs
xor
or
ds
push
jo
fisubrs
fisubrl
push
push
cmp
test
jae
sub
xchg
and
jle
push
mov
adc
adc
jo
xchg
mov
ffreep
adc
jp
push
jnp
add
mov
inc
mov
or
adc
inc
lahf
dec
add
scas
xor
sbb
pop
inc
dec
add
mov
clc
mov
dec
pop
scas
ss
pop
sub
mov
add
or
out
xchg
cmp
ficoms
call
int
dec
jne
nop
das
sub
inc
xchg
inc
ja
dec
frstor
js
lds
and
ret
pop
push
lret
jecxz
fisubl
adc
fwait
aad
inc
stos
xor
mov
cmpsb
arpl
lret
leave
pop
cmp
mov
add
out
mov
push
and
data16
xchg
sbb
iret
jne
add
push
and
mov
fldl
movsl
xor
jecxz
popa
mov
jbe
dec
aam
mov
lds
data16
jnp
cmc
repz
jbe
loop
subb
pop
mov
lret
fnstsw
push
push
mov
aas
dec
xchg
test
add
push
jle
test
add
adc
arpl
repnz
xchg
fs
xchg
jge
scas
je
pop
dec
dec
fdivrl
pop
mov
adc
cmpsb
orb
je
jl
leave
mov
bound
into
push
stos
mov
jle
movsl
or
hlt
imul
sbbb
inc
and
push
out
jae
int3
and
dec
inc
ret
int
xchg
mov
or
and
int
mov
dec
xchg
push
sub
push
mov
pop
mov
cmp
mov
mov
xchg
int3
mov
ret
leave
xlat
js
mov
mov
fs
jecxz
pop
xor
ja
insl
outsb
aam
icebp
ja
cmp
loopne
cli
mov
mov
mov
fs
je
call
ss
test
cmp
jns
mov
ret
adc
xchg
mov
rcr
repz
loop
cli
mov
fcoms
test
push
repz
mov
adc
push
insl
int3
lret
insl
mov
lcall
xor
ds
dec
lret
sbb
loopne
sbb
mov
addr16
test
sti
fistl
push
adc
fwait
or
stos
sbb
mov
xor
cwtl
jb
push
sbb
xchg
cmc
xchg
stc
sub
push
sub
out
loope
sbb
bound
data16
inc
cs
popf
std
addr16
add
sbb
daa
add
dec
and
ljmp
or
xchg
orl
and
daa
addr16
or
jnp
mov
xchg
bt
lcall
cmp
push
loop
movsl
xor
fbld
shlb
push
lahf
scas
xchg
jle
negl
adc
ljmp
or
rol
cmpsb
in
out
sub
mov
mov
jnp
loop
or
adc
cld
out
xchg
fcoms
add
cmp
xorl
shlb
and
fcmovnbe
jne
dec
nop
mov
out
push
push
cmpsl
add
paddsb
jb
daa
les
cmpl
rorb
sbb
popaw
cmpsb
jg
aaa
xor
rorl
pop
jne
lahf
xchg
or
mov
shl
xchg
ret
orl
fsubp
and
fadd
sbb
test
pop
cmp
mov
xchg
mov
cltd
mov
and
push
and
cmpsl
lret
xchg
xchg
in
mov
xor
arpl
cmp
mov
push
ret
mov
int3
out
cld
push
mov
pop
lret
cmp
mov
in
and
iret
xchg
mov
push
gs
in
mov
mov
add
sbb
int
cmp
je
cmp
shll
add
xchg
cld
mov
add
xchg
clc
push
or
dec
es
pop
int3
mov
int3
xchg
int3
popf
push
mov
rclb
mov
jnp
cmp
xor
push
lods
adc
or
xchg
dec
push
out
lds
cmpsl
into
push
inc
jb
gs
ficomps
je
cwtl
dec
add
test
insb
stos
shll
shlb
push
fcomp
fcmove
lret
inc
rorl
out
enter
adc
aad
movsb
sahf
adc
pop
sbb
dec
mov
test
mov
scas
cmp
xchg
push
notl
inc
jge
cmc
fwait
out
int
nop
push
subl
mov
shl
cmp
mov
push
inc
mov
add
jg
xchg
add
roll
adc
std
enter
in
cs
adc
cmpsl
dec
les
mov
dec
mov
or
xchg
mov
xchg
dec
insl
and
cmp
cmp
push
int3
sub
dec
sub
es
lret
pop
mov
test
inc
xor
push
out
imul
mov
aam
int3
gs
xlat
lret
jge
flds
xchg
in
inc
mov
imul
roll
mov
mov
mov
mov
or
add
jns
stos
add
xor
pop
pop
sub
and
jl
fs
mov
leave
das
shll
cmc
shlb
dec
or
lret
loope
inc
repnz
ljmp
loope
add
sub
sahf
sbb
pop
adc
xchg
jns
out
cltd
mov
movsl
ds
hlt
icebp
sbbl
pop
dec
jecxz
je
cld
jge
pushf
fsts
scas
enter
mov
pop
stc
add
xchg
stos
cli
pop
aad
inc
sbb
mov
mov
jl
fbstp
jb
popf
xorb
cld
cmp
adc
xchg
lahf
push
mov
inc
fsubrl
cmp
inc
jne
push
bound
and
jp
add
sahf
and
push
out
pop
lock
inc
dec
xor
fidivrl
test
and
scas
sahf
mov
lcall
xchg
adc
xor
sti
xor
cld
shrb
inc
add
sbb
insb
call
sub
xor
inc
fisttpll
fisubl
jmp
fldcw
fcompl
outsl
push
sti
cmp
scas
fildl
flds
lock
repz
and
sub
inc
mov
ret
cwtl
jnp
jle
push
adc
pop
sub
push
fstp
mov
mov
push
lds
xchg
out
ror
in
pop
pop
cmp
inc
ja
ret
je
sbb
psubd
es
jns
mov
push
fists
arpl
push
mov
mov
dec
mov
repnz
cmp
xor
xchg
ljmp
sarb
sahf
addr16
ljmp
xchg
gs
inc
lea
lds
cmpsl
int3
fwait
or
dec
cmp
divb
cwtl
add
and
sub
clc
jne
xchg
out
xor
ret
jns
insl
ja
shrl
push
scas
in
jecxz
xor
mov
mov
and
jb
sbb
mov
leave
mov
cmc
inc
adc
sbb
push
xchg
aaa
aam
and
mov
mov
mov
mov
les
xchg
andb
int3
cltd
aam
add
bnd
ljmp
sbbl
add
ret
daa
popa
nop
mov
scas
aaa
adc
std
in
pop
test
les
push
or
fwait
adc
scas
sub
sbb
imul
cmpsb
jl
mov
add
subps
aad
push
cmp
negb
and
je
imul
lret
aam
xchg
xchg
in
xchg
js
jl
pop
lcall
cmp
in
jle
cmpsb
jb
jo
fldt
dec
scas
pop
push
mull
sbb
repz
je
insb
mov
fsubrl
arpl
testl
pushf
jmp
daa
repnz
imul
and
je
test
push
adc
sbb
sti
xor
adc
xor
fcmovnu
scas
lods
mov
fisubl
inc
push
and
jbe
inc
negl
les
cmp
pop
popa
adc
fwait
push
jecxz
mov
mov
bound
loopne
cltd
mov
arpl
sbb
xchg
cmp
ljmp
fmuls
imul
movsb
outsb
in
sti
xor
sub
or
sbbl
daa
xor
add
jge
cmp
test
mov
add
inc
cmp
xchg
jns
dec
fisttps
mov
inc
and
inc
xor
test
mov
xor
add
es
jne
xchg
popa
mov
cmp
cmp
jp
repnz
mov
pop
imul
and
outsb
sbb
or
mov
out
js
rcl
cmp
sub
pop
lahf
andb
lcall
mov
test
add
stos
xchg
movsb
fdiv
ret
sub
push
mov
and
pop
xor
bound
enter
outsl
mov
lret
jg
mov
add
xchg
fcmovnu
fbstp
cmp
push
xor
inc
jmp
inc
loop
mov
xor
mov
or
and
xor
dec
and
or
movsl
clc
aam
dec
jae
dec
test
add
push
push
pop
in
pop
dec
imulb
push
int
stos
mov
rolb
xor
sbb
addb
rep
xchg
xlat
stos
ret
fisubs
js
ljmp
cmpsb
bound
push
cmp
and
cwtl
adc
add
jle
ss
mov
shl
push
in
fmuls
sub
rcr
pop
mov
jp
sub
and
scas
clc
push
outsb
sbb
sub
jl,pn
jp
and
sti
int
into
aam
inc
jns
pop
enter
leave
push
mov
in
push
es
lret
mov
xchg
jnp
mov
push
xor
mov
les
mov
das
scas
es
adc
push
loope
xchg
pop
movsl
sub
push
mov
mov
push
mov
inc
jb
loopne
and
jmp
sbbl
mov
jmp
adc
fcompl
mov
xor
xchg
mul
clc
sub
jle
push
mov
and
daa
jle
scas
into
insb
push
outsl
push
jns
and
shll
ficomps
hlt
cltd
fwait
lods
icebp
pop
ja
mov
adc
jle
scas
test
adc
test
lods
movsb
and
movsl
iret
cmp
mov
stos
test
lahf
arpl
mov
fidivl
xor
in
scas
or
out
mov
popf
push
rclb
mov
dec
jg
lock
cld
or
mov
mov
das
mov
adc
push
adc
lcall
or
stos
inc
sub
aas
push
aad
les
cli
addb
mov
aad
dec
jb
iret
cli
xchg
sbb
ret
insl
ds
pop
add
aas
cltd
adc
aas
aad
jbe
fwait
outsb
mov
sbb
loope
in
add
shl
jbe
mov
loop
data16
cmpsb
enter
lock
loop
outsl
mov
and
sub
push
add
int3
in
mov
dec
sbb
andb
repz
and
push
jmp
outsl
cmpl
pushf
and
sub
and
jp,pn
shrb
dec
jle
jle
movsl
ret
out
cmp
jle
dec
mov
leave
je
cmpsb
out
into
fnstsw
movsb
lea
mov
lods
pushf
push
lahf
pop
jo
insb
cld
adc
sub
mov
lock
jmp
scas
cmp
xor
in
xor
xchg
push
add
adc
dec
or
adc
adc
scas
or
negl
imul
jp
aaa
cmp
outsb
leave
mov
xlat
dec
outsl
mov
inc
pop
xchg
popa
inc
xor
insb
xchg
xor
jb
inc
mov
sub
push
mov
pop
frstor
cld
mov
loope
and
ljmp
xorb
test
jo
mov
inc
cmp
aaa
or
lahf
sar
aas
mov
les
ja
xchg
push
adc
bound
add
out
and
out
movsb
and
mov
out
mov
nop
add
addr16
mov
pop
xor
rorb
insb
push
outsb
inc
sti
jne
adc
sub
aas
xchg
or
cmp
sbbb
fld
add
add
jns
sub
xor
mov
lcall
loop
jp
xchg
dec
aaa
shlb
sbb
mov
divb
pop
hlt
in
ficomps
stos
ret
sbb
aaa
xchg
xchg
dec
or
add
jo
lods
xchg
fwait
mov
scas
pmullw
mov
or
dec
mov
push
pop
popf
addr16
sub
inc
ljmp
adc
mov
clc
hlt
dec
fstpl
mov
loopne
pushf
and
and
inc
sahf
xor
jecxz
mov
mov
cli
divl
movsb
outsl
pushf
leave
ds
movl
leave
stos
add
jp
das
xchg
in
mov
sub
inc
add
cld
or
xchg
fcompl
outsb
je
daa
in
push
cmp
insl
shlb
sub
push
das
add
xor
testl
mov
ds
mov
in
into
cmp
idivb
cmpsb
int3
mov
sbb
loopne
fcmovu
dec
loop
sub
push
push
dec
adc
inc
popf
lcall
sbb
in
mov
stc
mov
push
xchg
addr16
cltd
adc
addr16
in
dec
cltd
sub
inc
pop
jp
cmpl
lcall
cmpsl
dec
repz
cmp
push
xchg
and
in
push
fsubl
sub
test
adcb
daa
push
loopne
or
inc
sbb
notl
movsl
rorb
dec
mov
xor
cmp
jmp
and
scas
sbb
jge
pop
lcall
test
inc
mov
xor
inc
insb
cmc
jnp
ja
js
cmpsb
in
pop
pop
insb
aad
push
cltd
mov
aaa
pop
incb
pop
dec
push
xchg
lea
xor
lcall
pop
sub
or
pop
add
or
sub
dec
testl
out
js,pn
subl
mov
sbb
das
inc
adc
call
pop
andb
inc
mov
sbb
ljmp
sub
les
rorb
mov
je
mov
xchg
mov
pop
aaa
push
push
pusha
pop
xor
push
xor
sbb
cmp
fisubl
nop
mov
in
stos
filds
aas
xchg
mov
mov
ret
or
cmpsb
les
xor
inc
xor
mov
cmp
mov
push
and
enter
push
scas
cmp
addr16
lea
orl
push
cld
lods
shrb
push
out
std
fstl
mov
imul
cli
shlb
ficompl
mov
xchg
imul
loopne
push
fadd
mov
inc
xchg
inc
sub
arpl
xchg
loopne
xchg
jo
lret
shlb
std
pop
in
sub
fistpl
ret
lret
movsb
adc
daa
push
fistpll
add
sbb
or
lods
mov
cwtl
dec
mov
inc
or
jnp
push
test
cmp
lock
mov
adcl
scas
gs
inc
outsl
jbe
lcall
cwtl
decl
dec
cwtl
jg
or
rol
xlat
xor
lcall
dec
cmp
das
push
xchg
mov
mov
add
pop
jg
test
into
andl
add
shrl
mov
and
jb
rorl
jno
and
pop
loopne
add
loope
xchg
adc
mov
mov
addr16
mov
jmp
nop
adc
xchg
xchg
cmc
adc
mov
mov
mov
cmp
inc
dec
scas
idivb
lds
pop
push
jmp
add
add
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
mov
xorl
sub
add
mov
xorl
xor
xorl
sub
addl
ror
sub
xor
xorl
mov
decl
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jb
mov
xor
mov
subl
sub
andl
xor
movl
cmp
movl
jne
add
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
movl
push
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
and
mov
push
mov
subl
xor
push
mov
add
addl
mov
mov
xorl
test
je
mov
adcl
mov
mov
mov
and
mov
xor
adcl
add
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
sub
lea
xor
sbbl
jmp
inc
arpl
and
xchg
sahf
pushf
ja
fstps
pop
mov
adc
orl
subl
rorl
int3
outsb
pop
lods
in
xor
push
repnz
loopne
adc
sbb
scas
lahf
call
xchg
xor
je
dec
cmp
and
pop
fmuls
ficomps
fistl
mov
and
mov
lock
xchg
enter
mov
push
jno
sub
rcrl
sub
in
sbb
pop
in
fiadds
xchg
sbb
sbb
pop
cmc
mov
dec
pop
mov
cmp
add
push
popa
mov
insl
push
push
sbb
mov
call
popa
pop
in
dec
int3
or
mov
xchg
add
cmp
push
push
push
scas
pushf
mov
jo
sbb
jp
cmp
lcall
pusha
inc
sbb
xchg
sahf
add
les
mov
mov
xchg
add
sbb
push
pushf
and
mov
jno
into
push
enter
cmpsb
loop
ljmp
fsubl
sbb
sub
pop
jo
jo
bound
jp
jle
cwtl
mov
cmc
lock
lea
push
jne
mov
inc
out
in
test
sub
insb
sbb
cmpsb
cmp
sbb
fstpl
dec
out
jmp
or
jns
outsb
pop
sub
inc
jo
enter
pop
pushf
cmc
pop
pop
inc
xchg
sub
data16
jmp
dec
mov
jo
nop
test
ss
sub
call
mov
dec
repnz
into
test
nop
xlat
adc
int
xor
lcall
adc
sub
add
add
pop
push
ja
xchg
xchg
dec
lahf
adc
fistpll
and
push
cmp
fdivr
sbb
mov
frstpm(287
mov
les
mov
push
loope
mov
mov
les
lods
xor
decw
xlat
push
mov
andb
or
outsl
cld
xorl
dec
outsb
or
imul
aas
cmp
loopne
sbb
xabort
int
cmp
mov
lret
and
sbb
cmpsb
xor
mov
jnp
stos
sbb
test
ret
jnp
push
enter
xor
or
aas
mov
loopne
adc
mov
jg
int3
nop
shl
mov
xchg
jle
cs
cmp
js
inc
fildl
test
add
add
leave
mov
sbb
movsb
dec
mov
push
cmp
out
es
shrb
bound
mov
push
add
outsl
jge
mov
cli
adc
mov
lahf
mov
int3
or
push
add
mov
push
mov
xlat
imul
xchg
dec
push
adc
and
es
xor
loope
cmpsl
je
ja
das
pop
andb
inc
or
mov
cmp
add
push
add
imul
mov
int
dec
in
mov
lods
addr16
cmp
mov
andb
popa
rcr
xchg
sahf
scas
jo
shlb
push
pop
pop
sbb
or
pushf
cld
and
jo
subb
or
ja
cltd
inc
or
xor
sub
pop
fisttpl
lds
jae
jg
xchg
es
inc
in
loop
rclb
jle
scas
enter
scas
insl
dec
adc
popf
iret
das
cmpb
dec
mov
push
cmp
test
cmpsl
nop
push
lahf
lds
fstl
xchg
jmp
scas
sti
mov
into
hlt
xor
inc
stos
rorb
lods
cmp
data16
and
ficoms
mov
das
xchg
subl
sub
rorb
or
ds
ss
sbb
jmp
call
clc
or
out
sub
adcl
mov
pop
sbb
push
fldcw
push
daa
cld
mov
mov
mov
outsb
sub
frstor
jmp
mov
rcrl
into
mov
stc
cmp
mov
dec
mov
xor
lcall
sub
xchg
jmp
jl
loop
les
rcrb
mov
inc
jge
fisttps
mov
pop
xchg
adc
imul
add
insl
cmp
hlt
ja
loopne
into
lods
shll
mov
pop
xchg
cld
lock
sarl
lret
xchg
loope
dec
lods
or
pop
pop
cmpl
daa
imul
mov
or
je
inc
stos
mov
mov
push
fstpl
inc
pop
les
roll
cmp
xchg
jbe
dec
xchg
sub
ret
aaa
out
in
lea
das
jo
out
inc
cwtl
cs
ss
fwait
pusha
xor
mov
xchg
rcr
jp
adc
nop
mov
cmp
nop
stos
and
aam
hlt
dec
int3
lods
and
mov
imul
add
xor
adc
stc
pusha
leave
test
pop
xlat
sbb
jno
xchg
aad
jb
jo
xchg
mov
pop
jmp
sti
cmp
lods
aad
pop
test
mov
xchg
ss
fsts
mov
imul
or
hlt
rorl
lods
in
dec
sub
ds
xchg
mov
inc
leave
pop
cmc
and
aaa
mov
mov
cld
int
adc
stc
pop
aad
push
out
and
adc
or
mov
push
rcrb
xchg
cltd
shll
popf
mov
push
fstpl
add
add
xor
fwait
dec
and
xlat
add
mov
jp
ret
ret
ss
jl
fcomi
jl
mov
bound
into
mov
mov
stc
or
cmp
adc
lock
and
cmp
or
xchg
or
in
mov
mov
jmp
hlt
in
dec
dec
lods
lcall
repnz
inc
mov
out
or
jg
sub
mov
xchg
into
pop
inc
js
cmc
out
pop
imul
cmp
popa
and
push
movsb
mov
xchg
adc
lods
mov
mov
mov
cmp
dec
add
cltd
mov
jmp
push
in
mov
fadds
out
push
add
mov
ror
adc
mov
fnstcw
clc
cmpsl
fldl
push
mov
mov
mov
pop
sbb
mov
ret
push
add
pop
jno
add
cwtl
das
mov
out
test
aas
sub
fisttpl
adc
inc
pop
loope
in
hlt
push
ja
fimull
int3
pop
xchg
add
jmp
inc
cmc
imul
inc
xchg
jmp
scas
aam
shlb
pop
loopne
imul
fwait
lods
sbb
je
xchg
mov
cwtl
mov
pop
fwait
cld
sub
les
cmp
lock
sub
sti
xchg
xchg
int3
call
sti
pop
and
sahf
or
nop
aam
xor
iret
jne
pop
adcb
bound
and
mov
mov
mov
sub
subb
mov
sahf
movsl
pusha
dec
cwtl
sbb
sbb
insl
lock
adc
cli
pop
rcrl
insl
sbb
push
inc
xchg
or
pop
jge
pop
sub
sbb
ret
in
ljmp
not
and
loope
mov
jno
add
and
rorl
les
dec
addr16
cmp
pop
test
sti
sub
lret
in
push
iret
push
sub
sub
in
enter
jns
aad
xchg
orb
rclb
or
fadds
dec
adc
nop
ds
scas
movsb
leave
test
or
lods
push
pop
jo
mov
mov
test
adc
inc
pop
and
xchg
sub
out
lret
inc
test
push
rolb
sub
jmp
cmp
push
mov
jnp
dec
fldcw
fistpll
ljmp
xor
add
dec
add
test
add
insl
inc
and
mov
pop
sti
arpl
loope
rep
adc
push
cld
jecxz
jb
dec
imul
popa
out
ljmp
test
adc
mov
sti
jno
xchg
sub
dec
lods
inc
in
movsb
adc
cltd
js
adc
mov
sbb
mov
fdivl
xor
stos
add
xor
push
loopne
mov
inc
lcall
or
cltd
mov
aad
dec
bound
push
pushf
sub
and
dec
aad
or
xchg
jp
pop
jle
mov
adc
push
adc
ret
sub
mov
jle
daa
adc
jae
rcr
push
fs
inc
mov
stos
lahf
dec
addl
mov
lahf
lods
adc
daa
xchg
mov
ficoms
push
repz
xor
imul
xchg
cmpsl
sub
mov
pop
xchg
cmpsl
shll
nop
cli
mov
mov
mov
mov
cmpsl
insl
push
imul
xchg
sti
test
jg
mov
sahf
adc
fisttpll
xor
je
les
dec
fstps
mov
adc
jmp
mov
dec
push
dec
xchg
xacquire
mov
mov
add
stc
push
scas
jle
mov
push
ret
test
or
out
xchg
rcr
aaa
push
mov
mov
inc
push
xlat
movsl
xchg
das
mov
cmc
jne
cmp
mov
aaa
or
std
into
mov
test
push
mov
imull
les
daa
sbb
mov
gs
lea
repnz
cmpsb
inc
fldl
loopne
daa
adc
and
cmp
mov
push
test
pop
mov
xor
add
icebp
pmaxub
les
cmpl
mov
ja
dec
stos
add
into
add
xlat
mov
mov
pop
loope
push
movsb
scas
mov
inc
cwtl
sarl
cs
mov
pop
daa
xchg
enter
xor
sbb
ljmp
adcl
lret
mov
lock
imul
cmp
jb
pop
in
sahf
push
push
sub
lods
leave
gs
scas
adc
adc
mov
xchg
ret
push
mov
cltd
dec
jecxz
test
xchg
inc
add
lods
sub
hlt
sbb
imul
movsl
lea
dec
movsb
jae
popf
inc
pop
imul
cwtl
ret
push
bound
xchg
mov
fdivs
xchg
outsb
pop
fistl
lahf
loope
in
in
add
mov
xor
dec
outsb
fisttpl
repnz
mov
mov
lea
fisttps
test
add
sbb
pop
cli
xchg
mov
pop
inc
xor
mov
je
pop
out
ja
lods
jecxz
and
lret
dec
mov
out
push
icebp
push
xchg
pop
cmp
mov
mov
pop
pop
xchg
or
ljmp
mov
stos
pop
adc
jbe
dec
adc
dec
lods
inc
hlt
xor
adc
add
cmp
in
imul
loop
bound
lcall
scas
ss
popf
fimuls
mov
inc
js
mov
sti
arpl
sbb
xor
outsl
out
ja
jl
cltd
jge
sub
popf
jb
sbb
adc
in
movsb
sbb
jb
in
dec
adc
in
das
lret
int3
out
or
jmp
outsl
aad
adc
dec
insb
scas
pop
stos
jb
aad
and
out
ja
mov
pop
and
and
xchg
stos
lret
jae
aaa
stos
test
sub
or
mov
mov
mov
xchg
and
pop
pop
sub
repnz
sub
data16
or
jmp
xor
push
cmp
divb
ja
and
or
mov
sbb
push
mov
sbb
lret
test
xchg
popf
mov
rolb
pop
jmp
scas
out
ror
fbld
xchg
movsb
leave
mov
dec
shll
xor
test
outsb
out
jge
les
lret
inc
xchg
aaa
mov
pop
mov
mov
imul
pop
mov
xchg
sub
lods
scas
loop
xor
mov
mov
pop
fsts
sub
push
xor
inc
aaa
pop
push
sbb
fstpl
dec
insl
iret
loopne
mov
push
les
or
dec
mov
sbb
loop
mov
adc
sub
xor
or
or
ljmp
js
xlat
jnp
fisubs
movsl
sbb
xor
test
adc
and
cmp
js
inc
and
pop
ret
lea
jmp
lock
in
ret
sbb
fdivr
aam
mov
addr16
adc
push
aas
fcompl
sbb
test
in
mov
es
daa
push
out
lods
test
pop
js
incl
outsl
aad
dec
loopne
pop
add
stc
adc
out
out
mov
mov
push
jmp
pop
xor
sbb
stos
icebp
xor
imul
push
jb
loop
in
cmp
stos
in
shl
fwait
pop
jg
add
cmpsl
inc
and
cli
xchg
nop
pop
ret
jnp
pop
iret
in
jl
add
testl
sbb
call
jmp
sub
fidivl
shrl
push
xor
or
push
push
sbb
stos
jbe
jmp
test
add
push
testb
push
xor
jo
dec
sahf
les
cmpsl
rolb
cmpsb
xor
loope
jnp
jnp
ljmp
and
movsl
or
xor
loop
push
pusha
sub
or
mov
shlb
xor
pop
jo
mov
jle
inc
mov
xchg
adc
adc
sbb
in
pushl
int3
sbb
jne
dec
mov
dec
or
and
popl
jp
sub
cmpsl
data16
mov
and
dec
loop
push
aam
or
xor
negl
pop
mov
jb
dec
jecxz
push
and
test
dec
xchg
xor
mov
or
and
mov
sbb
cmpsl
adc
adc
lock
cmp
orl
jg
rorl
add
out
and
xor
out
and
push
loop
cmp
xor
or
pushl
jmp
fninit
xchg
cltd
movsb
jae
jmp
lea
das
adc
ja
and
xor
push
cmp
das
loopne
or
cs
sub
and
pusha
jae
lea
pop
cmp
add
negl
cwtl
ds
std
int
jns
lret
xchg
in
inc
jb
in
push
in
sbb
out
cmc
aaa
inc
hlt
out
outsl
enter
jecxz
push
xor
mov
into
pop
push
es
stc
add
fstp
rolb
inc
insb
xorb
push
je
fwait
sti
lret
pop
push
test
inc
sbbb
leave
adc
jecxz
addr16
lret
push
sbb
xor
and
arpl
stc
and
dec
in
jnp
out
into
lcall
cld
cmp
lcall
xchg
jmp
and
push
scas
popa
adc
sahf
jge
dec
lret
and
pop
cmp
or
adc
arpl
sbb
xor
pushf
sub
sbb
dec
and
rcrb
xchg
xchg
xchg
ja
xchg
lods
dec
sti
hlt
stos
mov
xchg
imul
jle
idivb
gs
scas
xchg
aas
mov
xor
adc
sub
push
mov
bound
and
into
inc
adc
push
push
popf
lahf
cltd
xor
stos
popa
xchg
aaa
ret
xor
adc
mov
imul
pop
push
pop
and
imul
sub
lret
ja
icebp
fs
outsl
sbb
adc
cmpsb
pop
sbb
dec
jecxz
in
outsb
inc
xchg
iret
daa
rcl
fcoml
adc
test
or
jecxz
xor
es
add
mov
cmpl
push
adc
call
sub
cmc
clc
gs
loop
jmp
fnstcw
outsl
in
push
mov
pop
idivl
pop
xor
adcl
clc
fsubs
pushf
into
jle
xor
cmp
xor
push
add
or
mov
cmp
pop
jne
out
push
jmp
cmpsb
pop
std
push
sbb
pushf
mov
push
add
xlat
js
mov
cmp
pop
or
aam
dec
jbe
int3
xchg
roll
movsl
mov
xor
sub
nop
or
adc
xor
test
dec
add
clc
stc
ss
repz
xlat
dec
inc
inc
lods
sbb
add
xor
xorl
imul
test
inc
add
addr16
sub
mov
xor
jbe
mov
loopne
xchg
sub
lahf
dec
inc
cmpsb
sbb
andl
jmp
icebp
xor
xchg
icebp
repnz
pop
fwait
inc
icebp
movsb
dec
cmp
xchg
mov
and
wrmsr
hlt
dec
lock
pop
andl
add
push
out
fnsave
mov
sub
mov
mov
mov
and
ss
sub
arpl
sbb
shlb
fidivrs
mov
pop
adc
adc
xchg
sbb
mov
mov
inc
sbb
mov
in
fimull
or
xchg
lret
inc
jecxz
and
cmp
enter
leave
and
cmp
daa
xor
pop
pushf
mov
lods
jl
dec
xchg
test
leave
xchg
mov
test
jb
add
sahf
fcomps
inc
decl
sbb
add
push
add
mov
xchg
cmp
pop
push
sub
js
xchg
addr16
fisubs
push
ret
subb
ja
pop
or
hlt
loope
cmc
mov
and
in
test
fadds
jmp
dec
jno
jp
add
pop
push
ljmp
fidivrl
stos
orb
out
cltd
dec
out
mov
and
mov
add
in
stc
push
mov
push
out
pop
les
xor
jbe
push
xlat
pop
or
popa
inc
pop
jns
lods
mov
ficoms
xchg
fs
push
sbb
lahf
into
add
lahf
jl
jl
lcall
mov
aaa
shr
or
mov
push
jle
inc
or
mov
inc
mov
mov
decb
mov
mov
pop
and
jnp
repnz
aas
push
icebp
sub
loopne
jle
mov
in
push
or
arpl
sbb
add
sbb
xor
movsb
and
pop
dec
ret
xor
xrelease
js
lcall
sbb
stos
sti
test
sbb
adc
enter
lods
insl
fiaddl
xor
sub
cmpsl
add
int3
mov
mov
dec
pop
jmp
rorl
mov
adc
pop
and
xlat
loope
aad
popf
xor
aad
imul
mov
mov
test
ss
inc
mov
pop
movsb
ja
leave
repnz
sbb
scas
sbb
mov
mov
out
test
out
aam
lock
js
dec
mov
es
in
adc
add
pushf
ljmp
ror
inc
imul
push
aaa
insl
sahf
xor
mov
int3
ret
pusha
sub
gs
ret
loope
adc
pop
jne
fdivl
lahf
jmp
xchg
rorl
mulb
aaa
mov
push
fdivrs
dec
insb
cmp
mov
sub
cmc
xchg
mov
shrl
jb,pn
not
dec
mov
lea
push
rcll
xchg
call
xchg
js
arpl
add
jae
rcr
jp
pop
mov
in
push
mov
ja
and
dec
aaa
mov
adc
scas
jne
lock
std
int
jmp
negb
arpl
pop
repz
in
test
xor
mov
or
or
mov
mov
pop
inc
dec
jb
enter
std
outsb
movswl
js
mov
out
nop
mov
mov
cs
pop
jg
ss
mov
lahf
ret
enter
loopne
jnp
or
ss
or
push
mov
clc
leave
push
dec
pop
outsl
or
inc
mov
and
fdivs
fwait
das
sub
push
and
adc
test
repz
xchg
xor
cmpb
and
ljmp
out
or
mov
cmp
mov
fstpl
adc
lods
xchg
test
daa
inc
jl
inc
mov
hlt
xor
lods
bound
ss
fldenv
dec
idivb
aas
mov
add
mov
sbbl
xchg
lret
adc
ss
test
aaa
cmp
and
sbb
enter
adc
imul
or
jmp
aam
jle
add
pop
out
and
stos
cli
jbe
pop
andb
les
call
or
jmp
sub
push
insl
mov
dec
xor
ror
lret
adc
inc
dec
mov
mov
fsubr
addr16
lret
pusha
sbb
xlat
jae
add
movsl
push
enter
pop
sub
mov
insb
lods
and
dec
cmp
adc
fstps
add
cmpsb
aam
and
pop
xor
inc
jle
nop
sbb
aas
and
mov
leave
loope
lds
push
je
mov
je
imul
jmp
mov
pop
xchg
out
add
das
add
pop
fisubrs
jmp
nop
in
add
mov
nop
xchg
rclb
mov
jmp
xor
fcmovbe
inc
add
sub
pop
and
aas
xor
js
daa
xchg
in
roll
add
fstp
push
dec
cmp
in
loopne
push
shr
shl
xor
push
mov
test
das
xor
xchg
jmp
sbb
lahf
mov
cwtl
icebp
xlat
add
cmpsl
lock
dec
mov
leave
loop
sub
mov
push
int
sub
data16
lock
inc
aas
mov
int3
mov
dec
out
loopne
pop
xor
ds
xchg
inc
lahf
stos
loopne
loope
xor
dec
and
xor
adcl
ljmp
stos
push
cmp
in
sbb
enter
sub
cmp
dec
and
inc
stos
loope
jl
out
aad
pop
and
lds
loop
mov
cmp
ljmp
lods
pop
setbe
push
fmuls
mov
cmp
mov
out
push
cmpsl
cmp
mov
ret
pop
jnp
xorb
jnp
loope
cmp
cwtl
add
sbb
jns
das
lcall
or
fcoms
push
test
shl
jns
hlt
call
xchg
addr16
shrb
mov
mov
xor
jb
dec
in
imul
nop
stos
int3
mov
and
aaa
ds
mov
call
push
mov
adc
inc
jb
sub
jo
xchg
push
jbe
mov
add
pop
push
jae
gs
inc
fucom
add
mov
js
xor
repnz
pmulhw
repz
mov
repz
or
inc
mov
mov
inc
les
dec
dec
inc
int3
cmp
fistpll
stos
loopne
repz
sub
jne
enter
es
pop
sbb
pop
cmp
call
pop
imul
xchg
lock
jo
or
test
sbb
xchg
xchg
repz
cmp
in
lret
movsb
testb
stc
shlb
jl
inc
or
loopne
gs
pop
adc
mov
xorl
add
cmp
push
lahf
push
mov
mov
inc
adc
out
sub
sub
inc
popf
pop
lret
cs
fisubl
stos
adc
addl
and
sub
sbb
pusha
mov
pop
push
cmp
in
mov
cmpsl
arpl
outsb
adc
cmp
jge
sbb
int3
rclb
inc
xor
pop
or
es
aaa
mov
lods
adc
sti
loopne
xchg
jl
int
mov
pop
jns
cmovle
pop
int3
movsb
mov
mov
cmp
mov
pusha
mov
arpl
in
les
mov
xchg
mov
pop
jno
adcl
cmp
jl
daa
aas
xor
mov
inc
shlb
hlt
mov
mov
lea
jne
aaa
stc
add
insb
dec
sbbl
pusha
aam
popa
loop
test
inc
cmp
dec
cmp
and
jae
and
adc
cmp
shrl
pop
iret
imul
add
imul
add
adc
mov
ljmp
pop
adc
mov
popf
push
ds
push
xchg
adc
sarl
in
xlat
inc
js
jge
out
jg
add
cmc
mov
and
imulb
inc
cmp
sti
ret
adc
sub
or
rcrb
push
mov
pusha
jae
pop
jo
cld
pop
sbb
rclb
loope
lods
mov
out
cmp
adc
pop
test
mov
in
add
lea
add
test
adc
add
mov
and
cmpsb
mov
mov
out
imul
lock
xor
pop
push
out
pop
adc
inc
loopne
mov
inc
sub
shr
shll
and
dec
xor
push
jne
mov
mov
add
out
xchg
pop
cmp
cmp
adc
push
adc
push
lods
test
cmovno
cmp
mov
addr16
or
arpl
fldt
sbb
orl
lahf
pusha
call
mov
push
sbb
pushf
in
push
stos
add
fldt
mov
not
dec
stos
rorl
div
scas
fs
pop
pop
xchg
shr
lret
repz
testb
leave
push
xor
lret
arpl
mov
les
xchg
je
and
movsb
cltd
movsl
push
jge
repz
mov
aaa
or
jg
shr
das
cmp
dec
nop
mov
test
ljmp
loopne
adc
fsubrl
xchg
dec
faddl
xchg
lea
notl
popf
push
push
mov
sub
mov
subb
mov
test
adc
pop
cld
je,pn
shll
mov
dec
mov
mov
test
pop
leave
aam
cmpsb
aas
test
mov
test
push
sub
fwait
or
inc
das
mov
and
pusha
jne
pop
jnp
jge
and
push
pop
sbb
fstpt
adc
mov
sub
push
rclb
dec
repz
jbe
enter
adc
scas
test
pop
aad
cmp
leave
mov
lea
divl
out
adc
scas
loopne
and
and
add
cmp
lea
icebp
dec
es
out
or
xchg
repnz
aad
jmp
mov
push
add
mov
dec
mov
out
rolb
ljmp
loope
mov
dec
and
pop
lods
or
cmc
xchg
aaa
mov
mov
mov
push
outsb
lds
inc
push
push
pop
addr16
fldenv
paddq
fwait
jge
insl
std
in
aam
cmpsb
push
fs
adc
sub
lret
fistpl
lods
mov
insl
inc
xchg
sub
shlb
insl
fdiv
cmp
mov
jecxz
enter
adc
inc
adc
mov
inc
cli
stos
test
inc
lds
ja
xor
xchg
aad
inc
jmp
shlb
in
sub
call
push
iret
std
xchg
mov
repnz
cmp
xor
idivl
ret
xchg
shr
fwait
pop
dec
mov
nop
cli
mov
mov
popf
cmp
push
ds
imul
sbb
jecxz
sbb
js
dec
cmp
dec
dec
inc
ljmp
test
popa
sbb
shll
packsswb
in
in
xlat
xor
pusha
ss
or
or
movsb
fsubr
sbb
mov
scas
rcll
shlb
push
ja
cmp
push
cmpsl
pop
inc
popf
andl
lcall
add
jne
pop
addr16
mov
mov
jle
xchg
js
iret
push
and
lds
cwtl
mov
pushf
lcall
and
sarl
mov
lahf
xchg
pop
popa
or
sbb
cld
inc
test
cmp
test
lahf
cli
jo
andb
add
in
sbb
call
push
ret
push
jl
imul
push
and
mov
in
adc
dec
int
fcomps
in
inc
xchg
mov
lods
adc
pop
jo
mov
pop
jge
sbbl
or
mov
sub
pop
loopne
sbb
pop
fldt
jno
cmpl
sub
call
push
sub
out
cmpsl
shrb
inc
daa
decb
addr16
push
add
lds
or
sub
inc
out
push
in
jmp
js
in
push
test
sbb
and
push
icebp
lods
adc
push
jno
jns
pushf
in
adc
dec
sbb
push
jg
addr16
add
movsl
adc
and
movsl
lcall
xchg
dec
adc
inc
dec
adc
sarb
adc
push
xchg
mov
jne
mov
iret
call
out
jge
add
aad
mov
mov
and
sub
xchg
xchg
lret
mov
push
shrl
pop
jecxz
and
je
das
ret
out
mov
fldcw
cmpsb
adc
pop
cmpsb
or
pop
je
push
xor
adc
orl
mov
fisubs
repnz
enter
lahf
in
pusha
xchg
leave
loope
adc
xchg
ds
jl
xchg
fstp
adc
inc
pop
sub
sub
mov
sbb
fistpll
lock
das
test
jnp
pop
push
dec
xchg
mov
xlat
adc
popf
insb
sub
data16
bound
testl
lcall
dec
arpl
add
out
inc
push
cmp
outsb
pop
mov
je
or
jl
movl
es
data16
inc
repz
cli
mov
xchg
mov
in
popf
sub
sbb
fstp
js
loopne
stos
int
inc
test
push
pop
push
lret
imul
inc
add
sub
mov
ds
stos
mov
sbb
sbb
add
ds
scas
mov
push
adc
mov
icebp
popf
or
orl
pop
sahf
js
nop
out
inc
add
xchg
in
lods
add
adc
mov
mov
adc
pop
out
cwtl
mull
lahf
inc
sbb
loope
or
addb
xchg
sarb
lods
movsl
hlt
mov
mov
adc
sbb
pop
push
andl
cmp
adc
int
push
es
push
jne
outsb
fsubs
out
mov
or
enter
leave
jo
fbstp
into
movl
cmp
je
mov
andl
xor
addl
add
cmp
movl
jne
xorl
pushl
call
and
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
add
movzbl
adc
mov
adc
mov
sbb
jmp
test
pop
sahf
andl
les
addl
mov
movsb
ljmp
test
leave
outsl
add
mov
xchg
inc
jb
sub
jl
les
int
mov
inc
outsb
pop
cli
sub
or
jns
jo
test
and
fldenv
fdivl
nop
pop
fs
mov
add
fcmovu
or
cmp
shll
in
mov
jmp
xchg
pop
sar
lock
pop
ret
loope
gs
loopne
xchg
mov
jecxz
sti
push
lahf
icebp
ss
xchg
pop
notb
inc
xor
in
xchg
fsts
mov
ret
mov
incl
dec
and
xor
aaa
fs
add
out
xor
xchg
rorl
out
dec
sahf
mov
mov
ja
mov
popa
aas
cs
call
push
shrb
bswap
dec
fnstsw
cmpsb
mov
sub
xchg
push
add
cli
add
gs
add
inc
ljmp
mov
and
out
inc
imul
xchg
in
xchg
sti
fistps
das
dec
mov
test
into
mov
rolb
cmpsl
notb
adc
mov
sti
adc
mov
movsb
xor
sahf
rcrl
fiadds
cmp
jbe
cmp
rorb
ret
push
inc
ss
cmc
push
cmpsl
jne
ja
scas
insb
insb
repnz
and
fwait
sar
inc
xchg
mov
xor
xor
lea
mov
jae
lock
mov
or
outsb
adcl
shlb
fsts
cli
dec
mov
lods
les
and
and
mov
add
int3
pop
out
jle
push
mov
lock
fmull
mov
jp
jo,pn
mov
imul
push
lret
inc
scas
sub
inc
data16
mov
push
or
jbe
shr
frstor
pop
pop
sub
mov
enter
rolb
std
test
orl
cmc
in
or
icebp
lcall
incb
or
inc
imulb
add
pop
bound
fisubl
rorl
mov
and
jp
or
aam
mov
mov
call
mov
adc
out
insb
imul
push
adc
push
in
xchg
adc
mov
jnp
mov
test
add
xor
cmp
std
into
sub
and
jecxz
xor
xchg
and
iret
push
add
add
lahf
jne
fcompl
push
int3
and
jb
pushf
inc
push
mov
push
nop
xchg
inc
push
jo
or
add
test
mov
sbb
fists
push
add
rorb
push
aas
sbb
subb
imul
jg
xchg
dec
andb
in
daa
pop
add
or
testb
jp
cwtl
movsl
lods
lock
clc
pusha
jne
pop
xor
mov
and
lea
adc
orl
das
nop
mov
sub
jmp
sub
rolb
xor
cmp
jbe
jnp
in
cmpb
bound
addb
fdivp
inc
cmp
dec
lea
lret
in
fistps
ss
mov
movsl
insb
sbb
movsb
or
mov
dec
adc
popa
gs
jns
shll
gs
mov
aas
inc
pushf
pop
or
in
jmp
jb
call
je
cmpsb
ret
in
arpl
iret
xchg
movsl
xlat
push
insb
pop
test
outsb
ljmp
mov
push
inc
mov
mov
shr
pushf
push
aad
shll
shrl
or
call
mov
mov
xlat
std
sub
movsl
insb
push
stos
cli
jo
xchg
call
lods
popa
aam
dec
mov
jae
inc
mov
scas
push
pop
add
clc
xchg
mov
dec
xor
ret
xchg
and
lods
sbb
fwait
jp
add
and
pop
pop
mov
cltd
rcr
or
push
mov
outsb
pop
mov
sbb
call
cmp
jl
loopne
lds
aas
mov
pop
push
mov
mov
add
push
xchg
cmp
mov
callw
push
loop
or
jg
fwait
dec
scas
adc
xor
add
cmp
inc
xchg
addr16
pusha
iret
mov
ret
pusha
xor
add
mov
sar
mov
es
pop
test
fsubrs
push
or
pop
cltd
or
adc
sbb
imul
lods
insb
mov
pop
sub
enter
jp
jno
mov
stos
je
lahf
xlat
cmpsl
adc
loope
xlat
clc
fists
xchg
mov
xchg
lcall
stos
aam
adc
push
and
jp
inc
shlb
lods
push
inc
and
loop
inc
hlt
fnstenv
lret
pop
outsl
jecxz
inc
int3
xor
dec
sub
mov
xchg
out
mov
jge
mov
push
mov
loopne
mov
in
in
or
fwait
insb
nop
leave
jno
push
cmp
pop
mov
xchg
jecxz
sub
jmp
xor
jne
imul
negb
add
lods
pop
arpl
and
pop
sub
cld
inc
stc
and
push
test
mov
mul
cli
pop
xor
in
mov
mov
out
cmc
push
inc
or
enter
cmp
mov
into
popa
es
jo
mov
dec
in
aad
std
ds
jle
daa
cmc
adc
iret
or
out
cmpsb
dec
mov
jb
inc
dec
stc
andb
test
nop
fldcw
mov
lea
pop
jmp
lock
hlt
mov
lock
pop
xorb
mov
jecxz
sbb
mov
mov
imul
cmp
scas
push
pop
xchg
test
inc
gs
into
sbb
or
xchg
mov
push
mov
ljmp
mov
cmpsl
scas
mov
rep
loope
push
lcall
xor
lock
xor
je
mov
bound
lea
add
adc
and
mov
mov
in
std
cmc
clc
sahf
es
and
in
pushf
lds
cmp
clc
jmp
out
leave
loopne
dec
dec
lcall
mov
movsw
lods
cmp
dec
int3
sub
lock
or
or
cmp
insl
jns
sti
sbb
cwtl
xor
mov
jge
mov
jg
into
jns
icebp
scas
faddl
pop
inc
into
andb
adc
aaa
mov
or
push
data16
dec
push
negl
cld
jno
stos
repz
int3
push
rcrb
pop
mov
or
mov
xchg
aaa
sbb
mov
ror
insl
imul
int3
pop
pop
mov
fisttps
loopne
pop
stos
fcom
movsl
mov
lret
xlat
sahf
aaa
mov
push
lock
nop
xlat
sbbb
in
out
movsl
movsl
cmp
push
arpl
cwtl
into
aam
es
decl
add
jo
lcall
fistpl
mov
in
out
and
adc
mov
mov
mov
inc
jno
adc
cmp
out
ja
andb
idiv
shll
cmp
int3
sub
cmp
int
sub
test
mov
lret
sub
push
lock
or
adc
dec
cmp
ss
push
lea
enter
mov
dec
dec
lahf
jmp
add
cmp
jae
push
addb
fsubrl
cmp
ljmp
stc
xor
pop
inc
jno
push
lods
or
test
jg
push
cmp
repnz
mov
out
push
xor
mov
jno
daa
pusha
rolb
jo
sbb
fmuls
cmc
pop
aaa
xchg
add
in
push
aam
hlt
add
inc
cltd
xor
and
cwtl
sub
dec
sbb
xchg
test
inc
ss
inc
fidivrs
les
or
jae
sub
mov
mov
popf
in
rolb
pop
mov
mov
cs
ss
dec
cld
insb
adc
mov
xor
cmp
mov
fcomps
xchg
stos
inc
jge
gs
add
jecxz
inc
imul
push
call
lock
mov
dec
sti
cmpsl
add
xchg
adc
xchg
prefetchnta
sbb
jnp
pusha
mov
in
pop
push
daa
inc
dec
xor
push
cmc
inc
mov
sbbb
inc
sar
stos
push
daa
mov
xchg
gs
sbb
aaa
push
subl
sub
sbb
lret
test
xorl
out
adc
imul
fsubrl
mov
inc
push
sub
and
mov
cmp
lret
mov
call
or
mov
cmp
jecxz
mov
out
adc
ljmp
mov
in
sub
pusha
pop
lds
aaa
pusha
pop
lods
dec
xor
pop
pop
mov
inc
repz
fadds
enter
xor
add
mulb
icebp
adc
sub
or
and
addr16
dec
les
icebp
push
ret
dec
or
push
mov
jnp
fcmovbe
gs
lea
in
lcall
flds
rorb
vmwrite
sub
push
xchg
lods
rorl
enter
lds
mov
rolb
int3
out
call
jno
sub
adc
and
and
jmp
stos
loopnew
arpl
or
mov
add
xor
jle
and
sbb
pop
and
xchg
dec
mov
hlt
pop
push
xlat
push
cmp
xchg
dec
sbb
or
pcmpeqd
outsb
or
aas
adc
inc
push
aam
aad
lods
sub
sub
test
outsb
lods
xlat
mov
push
pop
fnclex
imul
cmpsb
fistpl
inc
int3
and
shlb
arpl
pop
ret
lods
outsl
pop
adc
xor
jae
dec
or
pop
jg
loop
aas
mov
in
push
and
pusha
repnz
mov
jmp
jge
loope
int3
jae
pop
push
xchg
push
popf
lret
pop
push
subb
cltd
dec
aas
outsb
mov
sbb
push
cmp
inc
mov
mov
add
rcrb
dec
xor
sub
jbe
xchg
pop
cmpsl
cltd
mov
fcomi
or
icebp
js
dec
jnp
loop
outsb
sub
jo
cld
ja
xchg
inc
xlat
mov
ss
xlat
neg
test
gs
cwtl
push
adc
mov
cwtl
and
pop
mov
fdivs
nop
jae
add
outsb
and
mov
es
icebp
outsb
push
int
adc
mov
and
adc
xchg
push
adcl
push
sub
js
xor
jo
jae
sub
call
scas
pop
std
inc
mov
popf
pop
stos
in
jg
add
lods
xor
push
jns
xorl
add
lds
push
fcompl
gs
in
xchg
test
jne
std
mov
inc
imul
jmp
add
jns
aad
cmp
adc
jl
gs
enter
aad
rcl
rorb
push
mov
into
repnz
jbe
cmp
ljmp
lods
cmp
bound
pop
out
cmp
mov
mov
into
xchg
insb
ret
clc
lock
jae
div
pop
dec
test
mov
sub
jmp
jl
jns
fldl
jbe
lea
mov
jb
pusha
ret
and
xchg
test
repnz
or
adc
in
shrb
mov
test
popa
js
and
mov
cmc
lcall
aaa
or
jg
push
jecxz
inc
sahf
push
pop
dec
lcall
jle
vmovupd
call
inc
movsl
std
mov
jns
in
mov
cmpb
xor
sub
out
add
xlat
sti
fimuls
icebp
lret
scas
xor
dec
pop
ss
jae
imulb
pop
pop
sbb
lock
fisttps
imul
clc
inc
fldt
cmp
stc
loop
mov
adc
and
add
xchg
push
xor
fidivrs
shrl
fiaddl
ror
jp
cmpsl
sub
mov
mov
inc
mov
push
xchg
loop
fnstenv
ds
out
or
cmp
push
mov
jg
aas
mov
add
pop
pop
test
pop
push
inc
dec
xchg
push
sarl
addl
stos
inc
push
or
sub
enter
rcrl
jno
dec
and
in
fcoml
pop
dec
push
push
sbb
popa
mov
pop
xchg
jne
ret
xchg
or
mov
jl
mov
inc
sbb
fucomi
or
or
cmpsl
lock
je
or
inc
mov
xchg
mov
xlat
add
testl
mov
add
insl
pop
clc
movsb
popa
sarb
adc
arpl
mov
xchg
inc
cmp
cltd
aad
dec
or
stc
jb
popa
out
cmp
jbe
cmp
loop
movsb
dec
sarl
xsave
push
data16
lret
jge
push
add
mov
adc
dec
mov
loopne
sbb
mov
xor
mov
das
bound
mov
scas
pop
cli
sarl
decb
jmp
xchg
cld
mov
mov
mov
xlat
or
imul
aad
xchg
sbb
mov
sahf
add
fwait
cmp
cmp
jbe
outsl
arpl
bound
stc
jg
adc
cli
leave
scas
push
mov
int3
popa
lea
ds
cltd
bound
outsb
sbb
xchg
cli
aaa
add
dec
and
call
in
and
decl
bound
mov
or
lods
xor
jp
push
es
lods
jp
cmp
cmpxchg
pop
mov
stos
adc
dec
cwtl
sub
sub
outsb
adc
out
clc
and
test
jno
mov
inc
daa
insb
mov
hlt
jb
ret
sub
cld
push
aad
and
movsb
sbb
fwait
mov
and
xor
mov
js
fstpt
ja
test
ret
sub
addb
sub
aam
mov
xor
pop
pop
sbb
and
mov
jno
icebp
daa
rcrb
into
mov
dec
pusha
lods
in
or
pusha
xchg
pop
and
orl
mov
in
sbb
and
std
or
pop
adc
dec
sti
lret
divl
inc
push
sub
faddl
xchg
cmp
pop
xchg
test
aad
adc
outsb
push
sub
push
sub
inc
hlt
mov
mov
enter
ret
cld
jmp
fisubl
or
mov
js
sbb
push
mov
mov
xchg
andl
adc
test
jecxz
enter
inc
and
gs
popa
mov
mov
loop
and
negb
rcrb
xchg
mov
addr16
xchg
xor
dec
dec
cmpsl
orb
mov
adc
mov
sub
lock
xchg
sub
pushf
mov
add
subb
and
movsb
adc
loope
mov
add
enter
sbb
pop
cli
inc
jle
subl
xor
dec
push
jbe
fistl
sub
outsb
fcmovb
enter
in
xchg
pop
xchg
and
movsb
outsb
stc
pop
mov
rcl
add
push
inc
push
in
mov
jb
jb
rorl
nop
add
adc
pusha
cltd
jns
test
loop
rep
into
neg
and
xchg
pop
push
hlt
rcrb
push
dec
xchg
notb
or
push
cld
repz
push
fs
sub
stos
arpl
xor
out
adc
clc
scas
jnp
sub
iret
cs
add
or
sbb
fwait
xor
xor
push
aas
rclb
mov
leave
icebp
int3
adc
cmp
popf
and
add
pusha
pop
dec
mov
out
pop
mov
pop
cmp
and
cmp
scas
add
call
push
xchg
clc
stc
inc
aas
mul
loope
push
mov
aas
sub
gs
rclb
sbb
cltd
cwtl
ja
iret
js
mov
pop
xchg
fs
repz
mov
stos
pusha
inc
js
mov
mov
pop
cmp
pop
mov
adcb
scas
cltd
fsubl
mov
inc
rcrb
mov
push
es
movsl
xchg
out
sub
fadds
pop
mov
bound
mov
and
notl
test
aad
fwait
inc
push
aam
push
xchg
mov
add
into
iret
xchg
mov
or
movsb
add
idivl
xor
dec
or
sbb
jge
call
dec
out
push
push
mov
cmp
pop
xchg
push
jl
aam
pushf
cmpsl
je
outsb
rcrb
xchg
subb
mov
mov
sbb
inc
stos
inc
adc
lret
mov
push
test
repnz
sub
bnd
cli
push
cmp
sub
arpl
ljmp
xorb
xchg
cmc
cmpsl
div
adc
in
icebp
jbe
mov
or
or
outsb
pusha
shlb
cmp
ret
inc
mov
out
ret
pop
imul
jl
inc
mov
dec
test
cld
xor
jl
jle
pop
mov
cmpsl
addr16
imul
sub
repnz
mov
scas
test
and
adc
add
fsts
inc
inc
xor
xchg
cmpsb
xor
adc
daa
mov
insb
bnd
cwtl
loopne
dec
push
add
push
cs
test
ds
mov
es
sbb
pop
xlat
dec
sub
cmp
popf
push
pop
cmpsb
jno
pop
and
xlat
pop
subb
lret
sahf
mov
jmp
int
pop
test
test
mov
mov
test
jecxz
in
push
scas
mov
cli
lock
in
loop
shl
popf
jo
mov
push
jle
sub
dec
in
out
mov
mov
push
lahf
fildll
aad
loope
test
pop
ficoml
fwait
jg
into
jp
jle
imul
loopne
imul
scas
jae
sbb
outsl
mov
inc
fcoml
push
lret
mov
insl
jbe
sarl
dec
jne
ds
inc
xchg
lcall
jle
lods
lret
inc
data16
insl
add
cmpsb
push
std
enter
add
cmp
into
pop
push
int
xlat
stc
cmp
orb
into
imul
scas
jnp
sbb
xchg
mov
mov
cmp
shll
gs
lret
xchg
movsb
add
xchg
add
jle
movsb
inc
push
and
add
dec
pop
out
xchg
cmpsb
int3
mov
push
jb
or
or
ret
cmpsb
movsb
popl
shrb
lods
add
and
lcall
jl
rolb
lock
cmp
ficompl
inc
jl
dec
push
add
mov
add
aad
in
lds
popf
loop
pusha
add
cmp
aad
jnp
sub
mov
sub
lods
nop
lret
xchg
aaa
mov
sti
pop
insb
mov
aaa
daa
mov
lds
test
dec
adc
loopne
movsl
scas
arpl
inc
dec
add
nop
arpl
adc
out
xchg
testl
add
cmpsb
add
mov
mov
xchg
push
ds
mov
and
shl
add
addr16
imul
jno
mov
pushf
andb
jecxz
xchg
push
fadds
xor
xchg
shrb
cmp
data16
xor
ret
inc
sub
add
mov
icebp
fwait
jbe
leave
mov
inc
and
adc
cmp
shlb
push
jae
in
jo
hlt
jno
pop
dec
lcall
fxch
sub
aaa
int
and
and
mov
cmp
das
fs
jle
dec
loope
sub
shr
fnstsw
in
hlt
cs
outsb
addr16
repnz
dec
and
mov
arpl
xchg
cmpb
pop
cwtl
adc
jns
sub
int3
addr16
mov
jns
inc
cli
push
add
inc
fistl
dec
push
shl
pop
dec
mov
pop
pop
pop
out
mov
pop
into
std
sub
lods
and
pop
aas
popa
sub
mov
cmpsb
push
mov
add
out
mov
inc
test
mov
lret
and
xchg
or
out
jb
fsubrl
pop
add
lcall
lea
mov
push
sbb
ret
sbb
dec
xchg
aad
xor
iret
movsl
jae
jmp
cmp
fs
lods
push
negl
fisubs
cli
xlat
jbe
xor
adc
adc
add
push
pop
stos
out
add
movsl
push
mov
rcrb
jg
js
inc
imul
pusha
add
out
and
leave
xor
mov
lret
mov
mov
lahf
adc
add
xor
adc
adc
xchg
sti
jp
pop
push
mov
lods
xchg
loopne
movsb
fisttpl
mov
or
push
stc
enter
jo
mov
int3
ror
stos
insl
jg
cmp
cmp
xor
sbb
fs
push
inc
xchg
push
push
inc
addr16
shl
pushf
push
cli
and
ret
mov
jo
sahf
into
jl
jp
in
xchg
jb
mov
adc
lcall
mov
inc
out
jmp
cmpsl
mov
popf
inc
pop
xor
cld
in
insl
mov
imul
cli
cmp
xchg
push
orl
lahf
clc
push
pop
xchg
frstor
jb
mov
es
loop
or
mov
xchg
jp
mov
mov
xchg
pop
mov
cmp
sbb
mov
adc
in
sbbl
sbb
rolb
xchg
inc
repnz
leave
cmp
sub
inc
fcomi
xchg
push
xchg
jl
mov
xor
imulb
pop
iret
adc
ret
mov
sti
or
push
ljmp
add
lret
pusha
cmp
adc
fbstp
jnp
cmc
mov
leave
mov
pushf
es
mov
xor
adc
das
movsb
push
mov
ficoms
cmp
push
sbb
mov
adc
aam
or
repnz
dec
decl
inc
call
jecxz
es
jae
push
xor
jo
icebp
stos
add
xor
stos
scas
mov
pop
xor
movsl
repz
sarl
jns
mov
aas
arpl
add
loop
xor
outsl
mov
mov
pop
adc
mov
pop
rolb
les
and
js
sbb
pop
pop
out
mov
inc
pop
sub
pop
negl
add
cmp
aam
push
pop
jl
decb
push
xor
jb
inc
repz
outsb
sbb
fsts
insl
into
idivb
lea
in
mull
lds
nop
mov
xchg
aam
jno
in
mulb
int
pop
repnz
and
lods
sub
ja
scas
je
sub
daa
mov
or
ss
xchg
loope
fstpl
sub
arpl
fs
into
or
cmp
add
out
mov
and
je
mov
add
fcoms
insb
jo
adc
lahf
sub
mov
inc
xor
xor
hlt
hlt
ja
sub
loopne
push
xchg
fldt
lret
add
out
add
rcrl
add
push
adc
shlb
outsb
mov
outsl
test
testl
roll
scas
ds
lret
inc
mov
cmpsb
pop
insl
cwtl
xor
repnz
xor
int
jno
pop
xor
into
stos
push
mov
mov
sub
sti
cmpsb
push
dec
cmp
push
sti
mov
fiaddl
cmp
sti
leave
adc
ja
popf
mov
push
pop
add
mov
ds
lock
outsl
and
sub
aam
stc
mov
mov
andb
std
cmpsb
pop
inc
sbb
addr16
cli
fistps
adc
test
sarl
mov
and
imul
loopne
xchg
loop
ss
cmpsb
mov
daa
or
repz
les
sahf
jp
sub
fcmovnb
cld
pop
das
push
pop
outsl
into
sbbb
ficomps
jnp
pop
sbb
sbb
mov
jl
popf
sbb
nop
out
stc
xor
aad
lods
leave
jle
test
sarb
aas
inc
orb
scas
enter
or
add
ss
push
and
rorl
inc
and
jp
aaa
std
jmp
jle
cs
setle
xlat
test
sbb
sbb
movsb
xlat
call
das
stc
and
ret
add
jae
push
fldt
sbb
fisubs
loop
xor
lret
add
xchg
inc
leave
in
lea
dec
jmp
sbb
push
loopne
daa
mov
dec
mov
add
mov
inc
pop
hlt
and
dec
sub
xlat
shrb
loopne
sbb
insb
mov
xor
cmpsb
or
inc
sahf
loopne
xchg
push
nop
mov
addr16
cmp
or
sbb
mov
dec
push
hlt
xchg
sub
rorb
jg
or
aad
sarb
insl
paddd
mov
jecxz
sub
popf
vpmaxsw
sub
stos
xchg
cmc
and
mov
test
dec
adc
sbb
cltd
test
inc
or
jae
aaa
xor
adc
dec
mov
push
push
jb
sub
mov
mov
mov
gs
cld
dec
movsl
fs
cld
jecxz
xor
lcall
cs
mov
adc
or
adc
in
sbb
repnz
stc
in
xor
mov
out
daa
mov
pop
lea
xchg
sti
inc
stc
sbb
inc
xchg
rol
popf
mov
dec
fisubrl
aad
jmp
xchg
loope
das
and
es
mov
cltd
jge
std
inc
icebp
scas
inc
test
dec
or
stos
repnz
aad
mov
xlat
jg
xor
mov
outsl
mov
cltd
shr
adc
out
mov
mov
faddl
jp
inc
mov
iret
or
sbb
out
push
sbb
adc
and
outsl
les
pop
mov
pop
into
mov
insl
aad
mov
std
lret
push
mov
mov
xchg
sub
mul
stc
lret
cmp
sbbl
mov
sub
hlt
hlt
jno
jne
xlat
cmpb
mov
sub
scas
jle
fdivl
mov
adcl
push
and
add
add
in
sub
repnz
lods
adc
jge
or
mov
lock
push
ficomps
test
xor
fistpl
jo
daa
movsl
cltd
add
xor
xchg
sbb
adc
dec
cltd
pop
sbb
jp
adc
mov
ss
push
lret
lock
or
pop
scas
pop
loopne
jae
sbb
jbe
xchg
or
cltd
sub
xor
cld
inc
jb
push
insl
adc
std
sti
push
fsubr
mov
int
add
dec
test
pop
ficompl
inc
push
orb
and
repnz
cs
mov
mov
jmp
es
sub
lods
adc
das
das
mov
xlat
lods
lods
int3
sbb
js
mov
cmpsl
mov
mov
fldt
fcomip
idivb
rcll
pop
push
sahf
fcomp
push
add
cmp
sub
jge
and
scas
out
inc
ja
pop
incl
xor
dec
negl
out
pop
jo
ror
ds
mov
insl
push
sbb
int3
daa
leave
pop
repnz
xchg
adcl
push
push
or
test
mov
xchg
inc
lods
xchg
add
add
push
int3
dec
xchg
and
stos
add
jns
mov
mov
cmpsb
adc
jmp
sub
jecxz
roll
sbb
push
push
sub
cld
out
pusha
aas
mov
sti
fmuls
in
cmp
sti
sti
or
scas
push
repz
push
out
out
and
mov
dec
xor
sub
sub
sarl
lods
add
mov
pop
inc
loope
lret
rol
mov
dec
adcb
dec
mov
mov
or
sub
shlb
mul
loopne
jbe
or
enter
cwtl
xchg
inc
mov
ljmp
cmp
dec
scas
mov
sahf
xchg
rorb
push
cmp
jp
sub
js
out
into
sub
xor
test
sbb
push
sbb
or
faddl
je
int
push
inc
cwtl
popa
shrl
loopne
out
ret
outsb
xor
or
ljmp
jmp
jno
xor
inc
std
jbe
mov
jecxz
xor
sub
xchg
ja
cmp
xor
addr16
leave
cmp
pop
loop
dec
sbb
add
pop
mov
xchg
sahf
jle
xlat
and
sbb
lret
sbb
or
and
jecxz
jecxz
cmc
cli
dec
int
sbb
mov
jae
out
imul
iret
adcl
arpl
xlat
sub
push
xor
xor
push
cmp
pushl
mov
mov
adc
outsb
rcll
ljmp
inc
xchg
mov
and
or
inc
mov
and
sbb
add
fmuls
cmpsb
mov
imul
out
xlat
data16
push
mov
fdivr
mov
pop
sbb
jae
push
iret
stc
fcoml
pop
fnsetpm(287
aam
dec
out
or
cmpsb
sahf
mov
movsl
sahf
daa
in
pop
movsl
or
pop
in
shr
fildll
into
bswap
mov
inc
pop
mov
push
stc
out
jmp
in
mov
add
aad
das
fsubs
and
sub
mov
popf
and
pop
adc
sub
shl
and
and
and
jl
fsubrl
sbb
sbb
push
push
mov
pusha
pop
mov
pop
call
pusha
inc
xchg
xor
fistl
mov
clc
jle
jge
lods
lods
adc
mov
push
cmp
sbb
daa
es
lock
mov
mov
ljmp
cs
xor
xchg
arpl
cmp
sub
mov
push
inc
xor
rorl
lret
dec
push
cmc
loopne
xor
xor
sub
scas
loopne
add
aad
inc
sub
sbb
pop
xchg
es
cmp
push
jge
sbb
jnp
cwtl
imul
sub
fisubs
mov
add
mov
or
xchg
lcall
lods
faddl
sbbb
xchg
arpl
nop
hlt
in
js
mov
arpl
and
push
adc
bound
cld
mov
outsb
push
movsl
mov
aas
leave
and
jge
pop
mov
inc
jbe
xchg
sbb
mov
sbb
int3
es
fs
shlb
lret
dec
filds
in
inc
leave
out
fidivrl
cmp
movsl
add
inc
mov
jne
test
cmc
adc
nop
inc
mov
and
dec
mov
jno
cmp
ljmp
sti
pop
jbe
push
ficomps
mov
imul
adc
gs
cmpsl
mov
dec
or
add
mov
and
and
adc
add
in
mov
addl
add
movl
mov
movl
jmp
or
mov
xor
mov
adcl
add
mov
xor
mov
mov
xor
andl
add
movl
cmp
movl
je
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
adc
jl
mov
bound
or
pop
jmp
pop
addl
or
fadds
cmpsb
aad
in
test
add
jnp
outsb
inc
es
mov
pop
cwtl
aad
loope
repz
mov
mov
dec
fsubr
fcoms
hlt
pop
jl
dec
push
adc
sbb
aas
xor
push
dec
loopne
loope
inc
jns
adc
xchg
sub
js
mov
and
add
cmp
xchg
push
cld
cli
aas
scas
sbb
cmp
mov
mov
hlt
push
jg
xor
mov
pop
stos
scas
fistl
sub
scas
push
xor
sbb
lods
xlat
fwait
cmp
xchg
cmc
push
dec
xchg
jge
aam
lcall
lea
xor
loop
dec
mov
lds
pop
pop
rolb
jne
cs
shlb
or
sti
popa
cmpsl
xor
adc
shl
call
mov
rorl
hlt
cmpsb
arpl
mov
xchg
fidivrl
sub
mov
rcl
insb
adc
lea
outsl
dec
dec
push
cmp
and
js
addr16
mov
and
imul
clc
or
pop
dec
xchg
lods
in
inc
and
mulb
jecxz
cld
fisubrs
aam
loopne,pn
repz
adc
test
sub
mov
gs
cmp
jb
lret
pop
sub
sbb
xchg
repnz
test
fdivl
xor
push
fadd
gs
jae
outsb
dec
movsl
leave
jmp
orb
push
add
imull
sbb
ficoms
pusha
jbe
pop
hlt
push
inc
imul
cwtl
mov
mov
push
ds
adc
pusha
or
pop
std
mov
inc
cmpsb
jno
js
adc
test
mov
int
cltd
movsl
repnz
cmp
adc
or
pop
mov
sub
mov
xchg
fwait
pop
pushf
and
leave
jmp
cli
call
sarl
ret
push
popf
pop
inc
inc
stos
mov
js
jge
mov
cltd
stos
push
repnz
mov
clc
jle
sbb
aad
pop
ror
xchg
push
dec
in
pop
adc
gs
mov
add
adc
jg
or
adc
outsb
pop
cmc
or
gs
movsl
add
movsb
subb
es
push
repz
sbb
in
jnp
jo
sbb
jp
outsb
or
jecxz
rcll
mov
orb
mov
aam
adc
daa
push
jns
xor
xchg
imulb
mov
jg
xchg
dec
in
mov
subl
lods
rclb
hlt
cmpsb
cmpl
push
mov
adcl
ret
dec
fwait
js
push
jle
cmp
and
test
xchg
mov
imul
mov
inc
aad
ret
aad
popf
or
cli
adc
xor
dec
xchg
clc
cmp
xor
add
jno
or
dec
mov
mov
mov
mov
jno
sub
dec
testl
jmp
jne
lods
rol
mov
adc
hlt
sub
aaa
stos
inc
cmp
sti
jle
shll
into
ss
scas
xor
fwait
xchg
sarb
mov
mov
les
sbb
fisubl
insb
add
jb
xchg
iret
push
jle
ss
pop
nop
xorl
cmp
out
hlt
jecxz
cmc
out
push
ficomps
out
mov
dec
sub
pop
enter
lahf
mov
fs
aas
xor
dec
bound
mov
or
and
in
ja
cmpsb
loop
cmc
adc
push
adc
lret
fdivs
xor
pop
xchg
int3
out
xchg
lea
lret
outsb
lds
ret
push
clc
enter
insl
inc
test
lahf
sahf
mov
mov
sbb
jle
and
fcoms
mov
and
inc
xor
or
xor
sub
loope
sub
movsl
mov
adc
jmp
mov
es
test
mov
cltd
jp
cmpsb
mov
adc
xor
xchg
push
push
adc
add
inc
add
cmpsb
ja
pop
mov
repz
cmp
cmpsb
jmp
mov
pop
fisubrs
iret
mov
pop
or
inc
pop
in
pop
mov
into
jecxz
mov
sub
dec
mov
mov
cmc
pop
inc
xchg
or
mov
repnz
xor
test
popa
cmp
mov
clc
and
bound
or
sub
mov
dec
fldcw
cltd
pop
adc
notl
push
inc
ds
movsb
jae
stos
adc
into
orps
xor
pop
outsl
clc
adc
std
push
push
xchg
push
mov
sub
pop
imul
adc
setp
subl
and
imul
inc
jnp
sbb
scas
sub
jb
imul
and
sub
fcmovnb
lret
lods
mov
icebp
adc
push
sahf
mov
imulb
call
test
jp
push
sub
sub
xchg
inc
sbb
xor
jmp
adc
xor
sub
sub
and
fldt
jns
and
xlat
shrl
repnz
push
lods
push
add
push
dec
mov
pop
mov
js
sbb
xchg
in
idivl
pop
mov
and
push
xchg
in
add
sbb
imul
mov
pop
sub
sub
js
push
out
inc
push
mov
cltd
mov
fsubrl
pop
test
scas
movsb
and
pop
dec
xor
aam
xor
clc
cltd
xchg
imul
pop
mov
adcb
add
sbb
int
lock
scas
hlt
push
mov
push
xchg
mov
xor
push
adc
xor
lret
cmp
fs
inc
or
stos
mov
scas
rcll
sarb
sbb
loopne
xor
dec
cld
add
jle
call
inc
test
push
mov
pop
push
mov
negb
push
std
cmp
dec
or
mov
inc
add
push
cli
inc
push
lock
xor
pop
inc
inc
dec
adc
mov
sub
dec
divl
cs
loopne
push
in
cli
addl
fwait
inc
push
mov
pop
mov
mov
in
pop
ljmp
fisubs
sub
cmp
sbb
aad
pushf
out
inc
push
repnz
scas
xor
hlt
andl
popf
jo
push
sarb
sbb
xchg
push
test
ficoms
js
xlat
stos
dec
cmp
cmpsb
push
dec
jnp
push
js
mov
mov
or
test
jge
js
fisubs
lcall
mov
mov
xor
popa
sbb
outsb
jno
add
out
lods
jmp
inc
stos
andb
fisubs
clc
or
ljmp
xchg
in
or
xchg
jnp
jb
sbb
std
fistpll
inc
and
aam
sub
dec
jmp
mov
lds
cmp
xchg
jne
dec
test
paddusw
xchg
stos
cmc
mov
ja
mov
lahf
ss
push
dec
lahf
imul
repnz
sti
add
cmp
cmc
sti
and
sub
mov
cmp
insb
mov
dec
mov
test
in
lods
sbb
add
xchg
popf
call
test
jbe
movsl
push
mov
add
lret
std
adc
mov
outsl
jbe
jp
loopne
lahf
inc
mov
pop
dec
mov
pushf
stos
cmp
jle
fnstsw
aam
mov
lret
push
mov
inc
aas
sahf
je
xor
mov
gs
arpl
ret
mov
cmp
and
cmpsl
jp
jle
js
lret
mov
repnz
test
mov
and
loope
pop
push
dec
sbb
das
xor
dec
sti
pusha
cltd
mov
sbb
dec
lcall
mov
scas
lret
shlb
sbb
cmp
or
mov
dec
push
das
sub
fwait
stc
loopne
jg
in
mov
jle
push
lahf
fiaddl
test
push
inc
sub
hlt
jp
cmpsb
fisubl
jae
sbb
jb
push
test
pop
in
sub
orl
xor
cli
pop
adc
pop
call
orb
sub
sahf
sbb
movb
clc
xchg
movsl
out
scas
ja
aam
mov
cld
cmpl
xchg
mov
insl
sbb
mov
inc
sub
xchg
dec
cmpsl
loop
mov
pushf
mov
mov
add
xchg
jge
and
and
frstor
out
movsl
lods
in
cmp
pop
push
pop
aas
jg
cmc
cmp
into
add
js
xchg
mov
call
negb
out
sbb
arpl
stos
pop
mov
adc
inc
lods
test
es
aam
sub
dec
rorb
jle
orl
adc
nop
push
jne
cmp
out
xor
out
dec
sbb
and
dec
cmp
jge
popa
mov
pop
jecxz
shll
ss
mov
mov
in
inc
lds
stos
decl
aad
push
stc
repz
aam
outsl
std
inc
or
rclb
mov
inc
jae
inc
dec
cmp
sbb
xor
xor
sbb
or
fnstsw
mov
lds
iret
ret
sar
test
dec
mov
fcompl
xor
stos
je
je
xchg
addr16
repz
rcrl
popa
bound
add
push
sub
cmp
mov
add
cld
cs
rorl
xchg
es
jb
lods
xor
nop
jle
add
out
test
out
xchg
aad
lods
imul
es
add
mov
jecxz
xchg
popf
leave
xchg
pop
mov
imul
int
loop
scas
pop
movhps
xchg
mov
mov
or
push
cli
dec
cmp
test
cmp
out
sub
enter
shrb
sti
jecxz
add
lret
jb
push
xlat
js
out
incb
cwtl
out
jle
push
nop
in
subl
sbb
xlat
push
mov
out
imul
xchg
test
mov
adc
stos
cmp
push
mov
shrb
push
adc
fmul
xchg
lock
xorb
xchg
cli
stos
mov
inc
dec
arpl
cmovge
and
ja
jg
inc
lock
push
pusha
add
dec
into
scas
add
inc
jae
push
fsubrs
cs
rolb
jo
xchg
movsl
leave
out
test
dec
testl
add
idivl
scas
sahf
add
jp
call
inc
xchg
add
cmp
loop
jae
xchg
mov
lds
sarl
adc
sub
pusha
cwtl
pop
push
xchg
fistpll
jb
testl
icebp
or
mov
scas
enter
mov
or
ret
popf
pop
inc
jno
mov
xor
mov
dec
mov
sub
push
xor
sub
sbb
cmp
jbe
push
jmp
pop
in
rcll
xor
daa
inc
push
xchg
or
add
mov
adc
in
push
and
push
sbb
sub
sub
mov
push
xor
cmp
adc
popa
and
roll
nop
nop
jmp
insb
adc
js
push
hlt
inc
lds
je
sub
jl
add
out
mov
sahf
inc
sub
imull
mov
pop
push
pushf
mov
mov
ds
aam
ss
or
sub
lods
sbb
stc
mov
stos
dec
fistl
or
ds
dec
mov
ficoms
mov
jmp
out
dec
jmp
add
shll
mov
andl
mov
jb
fdivl
mov
pop
add
scas
push
fcmovnu
fisubrs
lock
pop
mov
push
pop
xchg
cwtl
loopne
andnps
mov
mov
orb
jg
xchg
in
sbb
fcompl
xchg
push
dec
test
ret
mov
mov
xor
dec
pop
mov
push
movb
imul
xchg
sti
loopne
mov
add
sub
xor
out
movsb
adc
montmul
cmpsb
add
fdivs
aas
dec
push
inc
mov
dec
push
inc
ja
or
cmp
shlb
scas
pop
outsl
sbb
adc
int3
negl
xchg
cld
bound
cltd
test
das
insl
fisttps
ljmp
std
outsb
jne
mov
data16
dec
sbb
dec
mov
shl
andl
aam
mov
icebp
jb
add
or
cmp
mov
xchg
movsl
dec
mov
mov
mov
fwait
filds
test
inc
ficoml
jle
scas
jl
aas
dec
sub
insl
jbe
pop
or
xchg
icebp
xor
push
push
push
mov
lahf
ficompl
aaa
mov
ret
lret
leave
xchg
outsl
push
fcmovbe
fcomp
dec
or
sysexit
bound
pop
jb
out
out
adc
sub
mov
ja
in
out
fs
inc
lock
push
pop
jae
push
outsb
lods
push
inc
pop
push
in
lea
popf
fimull
lret
add
outsl
xor
sub
cltd
add
ret
add
cltd
cwtl
sub
fidivs
jl
or
insl
cmp
fimuls
cmp
and
shlb
test
xor
test
cmp
inc
lds
lret
adc
xor
fsub
xchg
clts
mov
pop
arpl
push
pop
sahf
mov
add
pusha
mov
fsubl
ss
frstor
sbb
dec
aad
mov
push
pop
xor
jecxz
dec
insl
inc
sub
aaa
scas
mov
in
push
push
test
cmc
shlb
cld
or
cmp
jno
cs
les
int
fadds
mov
dec
or
dec
aad
aas
repz
roll
fidivrs
mov
gs
call
inc
pop
dec
je
lret
mov
ja
fmull
and
cmpsl
pop
insl
out
in
mov
adc
cmpsb
ljmp
jno
jo
inc
push
mov
mov
jp
push
mov
arpl
mov
mov
ljmp
xchg
cmp
and
stos
adcb
xlat
sbb
add
stos
mov
jecxz
sub
icebp
mov
dec
bnd
xchg
sub
inc
jl
ljmp
ficoml
push
std
das
xchg
jg
adc
sbb
mov
int3
lods
mov
sub
cmc
dec
add
nop
scas
cmpsl
dec
jno
inc
sbb
call
aaa
fadd
ret
leave
push
and
push
aam
sub
in
mov
mov
mov
hlt
pop
cltd
or
jo
lcall
dec
push
cmpsb
ljmp
addr16
mov
cwtl
shll
inc
sub
jbe
out
popa
das
pusha
stos
dec
xor
xor
xchg
pusha
cwtl
repz
xor
mov
cmpsl
push
sbb
push
in
aad
movsl
push
mov
mov
in
scas
je
inc
mov
daa
ror
push
xor
pop
call
imul
gs
and
xchg
inc
fimull
push
sub
cld
pop
mov
push
dec
fdivrs
mov
fdivs
inc
mov
mov
or
and
pop
or
push
push
shrl
cltd
outsl
adc
out
ret
jne
cmc
xor
xchg
inc
shlb
sub
xor
and
push
es
cmp
inc
leave
mov
lcall
push
out
adcl
loop
mov
pop
test
jno
in
sub
lcall
out
mov
cmc
call
dec
jnp
in
jb
or
add
adc
jnp
je
pextrw
popf
sub
popf
and
test
dec
xor
sub
mov
sbb
shlb
in
pushf
sahf
cmc
movsb
and
ret
popf
ja
imull
lahf
mov
js
jbe
dec
or
add
imul
cmpsl
and
sarb
mov
cs
sub
mov
cmp
push
jbe
xor
mov
or
std
scas
into
and
addr16
movsb
or
mov
mov
pop
cmp
pop
pop
jae
mov
jl
shll
add
int3
cmp
push
mov
mov
xor
dec
sarb
cmpsl
insb
inc
cmc
and
aam
inc
sub
pop
inc
lea
clc
leave
aad
ds
cmpb
add
mov
xor
repz
xor
out
mov
rcrl
pop
out
adc
xor
dec
sub
out
roll
cwtl
xchg
inc
adc
jge
leave
add
ret
test
out
pop
fsubl
add
sub
dec
xor
fiaddl
addr16
mov
bound
test
lock
imul
out
sarl
adc
stos
jae
mov
sub
imul
int
dec
mov
fstl
adc
rcr
fldt
ret
enter
mov
xchg
lock
flds
mov
cltd
sbb
add
push
lds
nop
push
inc
xor
mov
mov
cmc
nop
dec
mov
hlt
push
insb
ss
and
out
hlt
jb
push
sub
sti
pop
fimuls
inc
push
sbb
ss
cmp
cmp
loopne
push
in
mov
ja
xor
lods
std
popa
and
lret
leave
ret
mov
lret
mov
sub
pushf
and
ret
pop
adc
or
jbe
xor
and
int
nop
aam
inc
xchg
dec
ljmp
repz
lods
clc
push
mov
add
lret
cwtl
xchg
sbbb
lret
dec
mov
adc
cmp
dec
bound
sbb
inc
mov
popa
jle
movsl
sbb
pop
mov
mov
xor
sbb
inc
int
std
mov
mov
fsubrp
andb
add
lds
jbe
mov
xchg
xlat
inc
cmp
cld
sub
jle
std
push
pop
stos
push
scas
cli
iret
cs
addr16
mov
ja
or
pop
cmp
lret
popa
data16
mov
mov
xor
cmpsl
mov
mov
in
out
out
and
ret
and
xor
xchg
jecxz
jg
pop
mov
push
dec
inc
sbb
dec
popf
into
cmp
ret
mov
aaa
pop
sbb
xor
xor
cmp
imull
cmc
gs
fisubrl
repz
push
sarb
popa
movsl
lret
push
sub
call
orb
test
cmpsl
cmpsb
pop
push
inc
sub
dec
daa
pop
das
in
push
xchg
xchg
pop
adc
pop
dec
xor
je
xchg
mov
pop
push
nop
mov
push
inc
int
imul
push
adc
mov
mov
mov
mov
cld
mov
pop
in
push
push
add
jecxz
jbe
adc
into
lock
adc
xchg
pop
call
mov
inc
int
jmp
testl
and
es
xor
test
inc
mov
jle
popa
addr16
push
jg
inc
scas
pop
arpl
mov
nop
out
stos
mov
int
mov
cli
dec
push
sbb
jnp
mov
mov
jae
xchg
pop
inc
pop
imul
mov
dec
add
insb
sbb
mov
into
lea
in
outsb
xchg
loopne
mov
mov
cmpsl
inc
rolb
add
ss
arpl
call
rol
das
jns
xor
push
repnz
dec
leave
add
pop
test
mov
mov
sub
sahf
mov
sub
je
xchg
aas
xchg
adc
test
mov
inc
out
add
cwtl
xchg
jbe
das
fs
subb
xchg
fnsave
out
mov
sbb
das
mov
push
jl
sbb
subl
lods
push
shr
mov
mov
daa
aam
xchg
test
lea
push
pop
into
add
xor
or
lods
gs
cmp
mov
cmp
cmc
mov
fsub
iret
cli
add
mov
icebp
js
imul
pushf
sub
or
xor
pop
shlb
xchg
je
xor
jge
sub
enter
xor
push
mov
fs
ljmp
adc
and
mov
outsl
aad
add
and
jmp
arpl
lea
lds
repz
pop
or
test
fwait
add
mov
inc
or
adcl
movsb
aas
adc
ljmp
inc
xchg
xor
rclb
dec
or
in
sbb
inc
loope
icebp
jecxz
ret
pop
pop
xor
sbb
jbe
add
push
jl
data16
cmp
int3
jb
call
movsl
cld
mov
cmpsb
and
cld
jne
add
pop
fstpt
pop
push
fisubrl
xlat
roll
js
inc
mov
outsl
cmp
sbb
mov
cmp
mov
cmp
test
mov
sbb
xor
xlat
mov
pop
and
stos
sti
or
mov
jl
ret
nop
fnstsw
insl
pushf
shrb
xor
sbb
pop
rorb
lods
dec
je
dec
inc
mov
popa
xchg
cmp
inc
clc
add
rorl
imul
and
clc
jne
out
insl
jmp
roll
push
test
cmpsb
push
sub
jg
sti
ret
inc
inc
sahf
negl
jae
pop
pop
mov
lock
cltd
sti
push
js
xor
pushl
pop
mov
data16
jle
pushf
clc
or
pop
cli
loop
jne
cmp
addr16
fwait
rcr
push
adc
popf
movsb
insb
xor
jne
or
mov
cmp
int3
inc
adc
ljmp
push
sti
mov
xlat
add
and
pusha
pop
mov
in
lea
pop
add
mov
push
mov
or
dec
cmp
sahf
rclb
fbld
jl
sahf
pop
xchg
call
inc
dec
inc
or
lods
jp
mov
xchg
inc
ret
push
cmp
sub
and
xchg
add
mov
enter
arpl
mov
out
cmp
test
push
and
inc
cmpsl
mov
js
xchg
xor
dec
mov
pop
xlat
es
test
sbb
xchg
xchg
movsl
iret
clc
jge
sbb
push
call
icebp
jns
sbb
sahf
dec
jbe
mov
call
pop
jp,pn
xor
sbb
cmp
dec
in
je
pop
cmpsl
push
in
int
push
ja
inc
stc
clc
pusha
daa
inc
test
stc
xchg
sub
cmp
mov
pop
test
mov
jbe
push
std
popf
js
lods
rorb
je
rorl
push
push
imul
and
mov
pop
pop
pop
inc
nop
das
pushf
fnstenv
ret
adc
stos
data16
inc
fcmovnbe
arpl
add
std
outsl
lock
mov
int
repnz
push
mov
fadds
stos
push
sbb
es
out
popa
push
shlb
jns
pop
cmovns
sub
push
mov
scas
pop
je
repz
loopne
mov
insb
loop
xor
jne
mov
adc
dec
mov
mov
pop
sarb
jnp
aad
xorl
cmp
xlat
repnz
mov
rolb
cltd
out
repz
pusha
nop
icebp
dec
jmp
lods
and
lea
adc
sub
mov
arpl
mov
mov
popf
sarl
out
cli
ret
ss
xchg
inc
cs
push
mov
movsl
aad
outsb
inc
mov
out
cmp
or
push
xchg
scas
cmpsl
shll
mov
cmp
sbb
mov
cmc
lods
lret
push
pop
dec
jns
int
add
cwtl
cmpsb
dec
mov
movsb
xchg
scas
cltd
and
pop
lret
push
sahf
fldenv
mov
push
rclb
jno
mov
xchg
cmpsb
cmp
mov
mov
mov
inc
dec
xchg
jne
stc
or
das
jge
leave
or
test
pop
testl
scas
aaa
mov
mov
ror
mov
and
mov
push
test
push
push
dec
test
or
popf
add
cld
adc
sahf
fsubl
pop
push
in
std
or
cmp
mov
dec
cmp
sub
mov
pop
daa
ds
fistl
xor
mov
inc
out
dec
jb
hlt
push
mov
sbb
hlt
pop
inc
sbb
lahf
xchg
into
into
mov
enter
mov
adc
popf
outsl
mov
push
pop
das
dec
mov
jge
sbb
nop
add
popf
inc
das
push
add
aad
in
std
mov
iret
jmp
imul
or
repz
arpl
popf
jl
sub
das
dec
scas
aad
sbb
dec
inc
test
inc
loop
fstl
mov
fwait
gs
fsubl
sub
adc
jb
add
sti
jge
jne
push
fisttpll
cmp
dec
cmp
enter
add
bound
incb
jecxz
sub
or
mov
mov
xchg
and
pop
mov
int3
pop
mov
nop
jle
test
fsubl
pop
pop
cmpsl
cmp
gs
xor
mov
ds
jecxz
aam
ljmp
lods
cmp
mov
xor
pop
push
cltd
lret
sbb
cmp
cmpsb
cmp
movb
inc
xorb
dec
cmpsb
inc
mov
mov
popa
aad
xlat
fwait
shr
dec
or
pop
cmp
scas
je
jbe
js
hlt
sbb
test
jnp
ret
sub
mov
insb
jae
mov
aad
nop
cmc
out
cmp
inc
mov
push
fwait
jbe
shrl
ss
sub
stc
dec
paddusb
pop
push
jae
pop
jmp
xor
in
stc
aaa
push
imul
add
xchg
shll
and
pop
sub
mov
lds
fcom
imul
push
mov
mov
ss
mov
xor
xor
inc
jp
add
sar
imul
fwait
mov
xchg
insl
jb
pop
test
fwait
cmc
jae
sarb
out
xor
cmpsl
imul
and
loop
mov
jns
insb
jmp
nop
fcoms
mov
scas
mov
ret
xchg
mov
insb
xor
loopne
outsl
sbb
scas
divb
xchg
sbb
int3
xchg
inc
jp
sbb
addr16
outsb
cmp
daa
xchg
jmp
mov
pop
jne
mov
sarb
fldl
push
adc
shlb
out
call
ffreep
and
push
xor
std
aam
xor
into
test
rorb
or
jle
es
popa
jp
in
cmp
sbb
dec
add
sbb
sbb
fdivp
cwtl
std
lret
and
adc
add
cvtps2pd
jle
es
and
mov
xchg
inc
rcll
pop
ja
xlat
dec
sub
ret
mov
push
inc
jo
bound
and
ret
mov
icebp
cmp
int3
shll
xor
jnp
clc
push
inc
std
sbb
dec
mov
jmp
xchg
test
sti
fcoms
jg
push
lea
add
je
jne
hlt
push
jo
mov
cmp
hlt
es
fsubrs
sub
movsb
sbb
add
jge
lods
add
test
outsl
push
andl
lret
push
push
xchg
pop
xor
sbb
int
mov
scas
std
push
loopne
cltd
xchg
mov
inc
lcall
stc
test
fcmovnb
sub
test
pop
push
jge
int3
aam
cld
scas
into
or
in
movsl
xchg
xchg
fstpl
scas
or
pop
mov
mov
or
in
adc
jg
outsb
gs
adc
mov
aam
mov
fwait
mov
lahf
iret
iret
negl
jecxz
addr16
mov
inc
insb
add
in
test
dec
iret
icebp
mov
or
ljmp
pushf
mov
adcb
xor
xor
jg
mov
andb
cmp
daa
dec
orl
inc
das
nop
std
shrl
mov
jmp
cltd
cmpsl
pop
inc
movsb
test
and
outsb
out
mov
in
in
inc
jbe
pusha
cs
mov
pop
sbb
cmp
in
aam
sbb
dec
push
mov
xor
add
inc
rep
sub
add
xor
cmp
pop
das
or
push
jnp
cmp
jnp
test
or
fsubp
out
xor
addr16
jno
jp
pushf
mov
sbb
mov
js
inc
dec
loopne
xchg
or
mov
sub
push
lret
lea
je
lcall
cmp
mov
add
repz
fistps
clc
movsl
pop
fs
sbb
sbb
mov
das
ja
and
daa
add
xchg
mov
pop
dec
or
in
add
push
rcll
call
es
sub
jbe
jnp
sahf
push
inc
jle
in
mov
addr16
inc
ss
xchg
fnstsw
daa
jp
lds
pop
sbb
inc
mov
push
rclb
loope
mov
or
sahf
pop
mov
cld
or
clc
pop
push
cmpsb
or
add
ljmp
pop
popf
orb
test
sbb
add
jl
in
fistl
add
lea
jno
push
test
jecxz
dec
push
add
ret
aam
mov
in
inc
stmxcsr
mov
cmp
mov
ret
and
nop
in
testl
movsl
jne
shrb
insl
je
or
insl
sbb
daa
ds
mov
ja
aaa
loopne
fisubs
stc
andl
sahf
dec
jg
in
cmc
js
mov
or
ret
sbbl
xchg
out
orb
sub
add
je
loop
mov
or
mov
push
mov
dec
jnp
ret
addr16
xchg
and
ficompl
int
repz
xchg
test
mov
mov
pop
and
and
cmp
xlat
enter
xor
mov
cmc
mov
cmpsb
xor
sbbb
pop
rcll
push
adc
mov
lea
jo
stc
and
nop
test
adcb
idivl
fiaddl
imul
test
in
jg
ret
inc
and
test
xlat
pop
lea
icebp
push
movsl
lods
pop
sbb
inc
or
adc
loope
shll
fdivrs
mov
pushf
or
lahf
cmpsl
pop
sub
xchg
subb
jle
dec
adc
mov
fisubl
mov
outsl
movsl
nop
ljmp
xchg
dec
mov
xchg
jge
je
subb
add
leave
jbe
dec
xchg
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
jmp
test
jl
out
mov
sti
loopne
rol
cld
jp
addl
jg
out
test
flds
jle
pop
push
push
or
cli
mov
push
lcall
xchg
ja
xlat
or
sub
mov
xor
pop
scas
xor
pop
enter
mov
pushf
mov
mov
mov
in
and
or
popa
jle
js
rolb
pop
sbb
cwtl
cli
or
xor
xchg
cmp
cli
scas
mov
mov
repnz
xor
enter
shrl
and
push
xchg
aad
or
gs
iret
pop
xor
and
mov
lret
inc
imul
xchg
sub
mov
xlat
inc
cmp
test
and
xor
sarb
js
or
lret
dec
enter
test
inc
test
les
sub
lods
or
nop
rolb
xor
pop
and
into
jmp
adc
popa
fsubr
movsb
add
aam
out
pop
fnstenv
push
fsubl
cmpsb
lock
push
pop
cmp
pop
clc
lcall
stos
adc
cmp
imulb
dec
fcmovu
movsl
lods
jge
popa
lahf
adc
dec
or
lret
cmp
pop
in
sti
lods
push
mov
xchg
roll
pop
xchg
das
jle
repz
int3
retw
inc
enter
test
cmc
jno
sti
les
xchg
sahf
and
sarb
mov
lret
sub
rcl
xchg
test
cmp
mov
lcall
jno
inc
sub
pop
dec
data16
ljmp
cmpsl
movsl
dec
inc
adc
or
pop
cli
aaa
cmpsl
ja
pop
and
xchg
nop
mov
mov
jno
xchg
sbb
outsb
cmp
out
rclb
adc
leave
jbe
or
sbb
sbb
xchg
in
gs
movsl
jno
ret
adc
aaa
xchg
popf
lar
popa
repz
nop
xlat
into
xchg
jg
push
cld
inc
in
jl
or
lret
mov
cltd
ficomps
fcmovnbe
shlb
adc
pminub
mov
ss
sub
mov
push
lret
jl
jnp
fstl
xor
or
and
jmp
jge
test
cmp
ljmp
and
addl
xlat
cltd
nop
and
les
call
stos
loop
xchg
mov
std
sub
jl
les
andl
inc
add
inc
movsb
mov
pop
iret
jp
mov
pop
fs
test
lcall
cmpsb
stos
inc
pop
pop
hlt
sbb
sbb
dec
das
rol
dec
mov
add
arpl
mov
cld
jbe
addr16
cmp
mov
sbb
xchg
mul
sub
jo
jno
test
sub
mov
ja
icebp
mov
xchg
je
clc
test
mov
jp
inc
push
sbb
and
lods
or
mov
inc
fiaddl
dec
in
out
out
std
xor
xchg
xorb
test
insl
sub
fildll
imul
pop
and
jecxz
mov
leave
pop
mov
xchg
andl
xor
pop
or
inc
stos
clc
mov
xchg
mov
xchg
xchg
mov
out
lea
sbb
mov
sub
sbb
icebp
fs
mov
js
fimull
mov
dec
push
test
mov
jp
jmp
add
or
push
xchg
jge
xlat
mov
enter
leave
xor
mov
xor
inc
stc
es
ss
push
cmp
mov
push
jp
adc
pop
push
subb
lea
repz
jnp
jmp
aaa
jb
add
por
mov
jl
out
jno
bound
loopne
into
ss
imull
adc
cmpsb
inc
xlat
push
popf
pop
je
xchg
jns
jg
pop
out
jmp
jb
pop
notb
aaa
pop
mov
jge
push
cmp
cmp
stos
sbb
stos
bound
add
aam
adc
mov
rclb
pop
jo
rcrb
dec
dec
xchg
mov
rclb
and
mov
mov
hlt
jb
mov
push
pop
cld
xchg
push
mov
cmp
fistps
mov
and
loop
jg
dec
test
in
aam
mov
xchg
and
add
nop
jg
mov
push
and
scas
out
sbb
cmp
mov
mov
inc
in
sub
push
lret
es
clc
cmp
pop
out
cmp
xor
xchg
pop
sbbl
dec
sbbl
data16
int
fnstsw
xchg
faddl
popf
sbbl
push
iret
into
pusha
pop
jle
mov
xor
aad
sub
add
movsl
stos
repz
mov
lcall
icebp
jbe
sub
dec
or
inc
inc
imul
pop
lods
lods
add
pop
mov
xchg
stc
sahf
call
int
jg
mov
and
enter
iret
mov
mov
out
ljmp
das
xor
sbb
sbb
cmpsl
stos
addb
fs
imul
sub
ss
sub
push
scas
lock
sub
ljmp
sub
mov
inc
mov
std
loope
and
ret
sbb
pop
mov
fdivl
mov
repz
mov
xchg
test
scas
decb
inc
sbb
mov
rolb
xor
mov
jl
sub
pop
cmp
jne
test
js
jmp
cwtl
xchg
push
icebp
pop
adc
lahf
add
cmpsl
xchg
xchg
insl
dec
jnp
pop
xchg
push
jg
dec
mov
cmovns
adc
pop
cwtl
jmp
loop
mov
mov
sbb
push
out
and
jle
fisttpll
out
imul
dec
andl
pop
jl
pushf
mov
movsb
addr16
ret
das
xor
push
rorb
fsubrs
mov
xor
xor
cmp
test
daa
cmpsb
test
inc
mov
movsw
movsb
mov
sarb
addr16
push
mov
or
sbb
xchg
popa
pop
bound
enter
push
pop
test
add
or
pop
push
sub
int3
call
mov
or
mov
fldt
test
shlb
in
fwait
push
leave
and
outsb
mov
jno
test
lods
adc
cs
jmp
imul
push
add
pusha
mov
sub
mov
xor
decl
movl
inc
xor
es
cltd
sarl
jl
fsts
adc
sub
pusha
adc
sub
int3
jne
or
mov
fwait
sarb
dec
pop
jne
pop
jns
mov
cmp
push
xor
scas
rcrb
enter
loopne
sub
insl
outsl
xor
sar
xor
mov
cmp
test
push
jae
rclb
loopne
and
mov
andl
mov
popa
cmc
inc
aad
mov
xlat
jle
out
dec
jge
xor
cli
or
psrld
sahf
loope
push
mov
or
pop
xchg
test
cltd
rorb
xchg
and
or
dec
cmp
aam
inc
data16
jae
jb
jb
call
jge,pn
in
popa
push
xor
push
inc
imul
imul
mov
lds
into
push
mov
push
mov
xchg
jbe
push
add
push
cltd
inc
test
lods
imul
xchg
pop
mov
stos
test
dec
xchg
int3
jmp
out
inc
sbb
test
push
mov
or
cmp
cs
ffreep
mov
aaa
mov
adc
ja
jb
pop
jne
adc
rorb
add
add
movl
enter
leave
jbe
adc
in
mov
pop
cmpsl
cmp
imul
ret
pop
dec
mov
adc
inc
fxch
inc
and
add
xchg
ja
mov
mov
call
iret
cmpsb
lods
xchg
clc
pop
call
push
test
xchg
jno
push
insb
adc
repnz
and
int
rcll
or
xor
ss
pop
pop
adc
adc
or
repz
add
rorb
adc
fidivl
aam
inc
mov
out
lods
test
xchg
jbe
dec
aad
enter
ret
sub
cmp
xor
loopne
inc
xchg
out
lcall
lcall
movlps
jecxz
and
shlb
call
loopne
adc
stc
dec
ret
inc
mov
or
and
repz
push
sub
shll
imul
sub
mov
jg
cmp
or
mov
adc
mov
mov
xor
add
iret
call
mov
adc
sti
imul
movsb
xor
std
mov
sub
inc
call
clc
xchg
rcl
jno
cmp
sub
push
lahf
rcrl
enter
into
and
idivb
mov
in
cmp
and
loopne
add
cs
pop
cmp
test
stos
scas
sbb
enter
and
add
dec
aam
dec
pop
inc
jg
ds
std
outsl
ja
pop
cmp
aam
adc
sbb
or
sbb
cmp
mov
adc
dec
test
jae
mov
pop
das
inc
loope
mov
push
aam
xor
ficoms
cwtl
mov
lds
xchg
jbe
add
cmp
push
xchg
sbb
sub
xchg
add
aam
pushf
aaa
pushf
sbb
sub
hlt
mov
in
outsl
mov
mov
test
sbb
js
or
clc
sbb
xchg
andl
rcrb
sbb
push
mov
push
leave
cltd
sub
cs
push
pop
and
xor
pop
mov
mov
pop
or
mov
mov
lds
cmp
xchg
add
leave
adc
in
dec
cmp
unpcklps
cmp
in
ds
or
push
push
aaa
les
lahf
shlb
add
xor
popa
add
fcoml
pop
push
ret
cmp
inc
out
hlt
imull
fidivrs
sbb
andb
gs
jnp
das
aad
rorl
cmp
cmc
inc
fcoml
or
ret
mov
aad
cltd
inc
mov
mov
jno
or
xor
cld
shll
ja
mov
cmp
insb
push
or
mov
bound
shl
sbb
dec
loope
enter
xchg
cmp
push
test
jo
add
arpl
jl
clc
aad
add
lock
outsl
mov
std
or
enter
pop
lret
cmpsl
xchg
test
push
dec
dec
mov
xchg
sbb
push
js
addl
and
insb
inc
into
ret
inc
into
es
push
aad
adc
jmp
push
mov
mov
das
out
mov
insb
cmpsb
js
and
scas
call
test
sub
inc
addr16
loop
pop
xor
xor
lahf
and
nop
ss
jno
mov
addr16
fldl
addr16
mov
push
rcll
cmpsb
add
out
mov
outsb
add
and
and
jb
js
sbb
gs
nop
mov
mov
inc
mov
dec
mov
mov
push
das
inc
popf
daa
ficoml
or
mov
pop
vminps
insl
imul
aad
add
mov
rcrb
push
adc
xor
movsl
je
int3
adcb
cmp
mov
mov
or
adc
pop
mov
or
and
insl
daa
fwait
lods
outsb
adc
je
out
fs
imul
mov
jne
jnp
add
xchg
cmp
sbb
xor
jp
mov
cs
aaa
jp
mov
in
fcoml
pushf
ror
cmpsl
stos
mov
lcall
dec
xor
pop
jecxz
enter
dec
lock
and
xor
sbbl
adc
in
sbb
jle
dec
adc
insb
adc
mov
gs
mov
mov
mov
lock
fnsave
ret
adc
sub
rorl
jno
fdivl
into
sbb
movsb
outsl
shll
inc
jns
fadds
dec
push
mov
pop
inc
movsb
mov
dec
xor
imul
xor
mov
xchg
mov
fildll
mov
insb
call
sahf
and
and
cld
and
pop
incl
pop
hlt
cmp
fildll
pop
jo
cmpsb
pop
std
popa
cwtl
mov
xor
aas
push
pop
sub
leave
jbe
jg
sti
xchg
fwait
inc
outsl
xor
push
aaa
lods
mov
pop
test
mov
mov
loope
dec
xor
pop
rorl
test
push
hlt
sbb
adc
mov
mov
push
push
push
mov
sbb
push
dec
and
jle
push
push
mov
loop
sub
xor
pop
les
inc
cmp
xor
add
in
out
pop
lret
and
notb
out
dec
outsl
sbb
cs
dec
and
sub
fstps
cmp
repnz
mov
repz
fdivs
pusha
xor
ficomps
out
aad
or
sbb
or
adc
cmp
fistps
push
flds
ret
and
rorb
jmp
les
jge
sbb
out
mov
fdivl
cmp
lds
dec
lods
xor
push
xchg
add
add
xchg
test
xchg
pop
adc
arpl
push
sub
sbb
pop
insl
push
mov
sub
fcmovnbe
mov
scas
lock
push
mov
sub
push
scas
loope
cwtl
mov
sub
xchg
fcomps
fwait
int
add
jmp
mov
adc
inc
iret
and
add
add
add
pop
mov
mov
cmp
pop
pop
popa
mov
mov
adc
fidivrs
idivl
xorl
bound
pop
stos
pop
arpl
inc
ret
dec
sub
addr16
mov
sub
or
sahf
lock
orb
mov
rcl
popa
jae
fwait
cld
push
xchg
pop
fcmovb
ss
mov
ficoms
sbb
inc
mov
pop
xor
add
test
out
add
aaa
dec
out
es
pop
ret
cld
cli
dec
jp
mov
cmp
xor
int
mov
mov
pop
fwait
inc
ret
cwtl
sbb
imull
push
xchg
xchg
inc
mov
mov
gs
mov
out
scas
fdivrl
xchg
mov
popa
imul
pop
sbb
ret
mov
arpl
xchg
sub
pop
test
jmp
xchg
fimull
inc
or
sub
sub
bound
mov
and
mov
inc
lods
sahf
int
stc
gs
xor
pop
mov
mov
sub
sub
sub
pop
mov
sbbb
addr16
incb
inc
dec
jnp
xor
icebp
cli
out
xor
aam
mov
test
test
sbb
mov
fisubrs
adc
jb
repz
mov
inc
sbb
shlb
mov
out
xor
dec
cli
out
push
mov
add
pushf
push
rorl
pushf
mov
enter
push
in
mov
mov
adc
arpl
and
orl
xor
and
dec
ja
sti
call
pop
adc
test
jmp
addr16
add
cmp
and
xchg
popa
mov
jge
stos
fstps
xchg
cmp
jmp
mov
pusha
pop
lods
add
mov
mov
xchg
data16
shlb
dec
fldenv
loope
push
and
jne
sub
push
rorb
in
outsl
mov
mov
sti
and
mov
mov
and
and
ja
sbbl
loopne
push
pop
sub
test
mov
fwait
movsl
push
cmpsl
inc
mov
mov
push
popa
orb
sub
enter
push
push
or
cmpsl
cmp
aam
mov
arpl
test
iret
das
int3
push
pushf
jo
stos
jbe
or
inc
repz
pop
mov
in
in
arpl
adc
dec
pop
xlat
inc
push
dec
dec
xchg
pop
outsl
scas
and
lock
in
cmp
enter
int3
pop
jo
sbb
in
cmpsl
cmpl
int3
iret
lret
test
xchg
int3
push
xor
mov
stos
sarb
repnz
out
dec
jecxz
add
add
andl
push
test
pop
adc
es
call
push
mov
in
inc
or
xor
aas
out
sbbb
inc
repz
fdivrs
leave
in
sbb
mov
ds
cmp
icebp
sub
pop
push
rclb
pop
adc
into
fldl
mov
push
pop
mov
fdivl
mov
shll
push
jp
out
jno
leave
add
xchg
xor
xchg
jg
inc
push
scas
stos
out
call
and
add
es
push
data16
fdiv
cmp
push
adc
in
mov
jo
jbe
sbb
xchg
mov
push
ficoml
fadds
cmp
fstpl
enter
xchg
jp,pn
test
cmp
adc
mov
sub
sbbb
xor
ljmp
sbb
adc
add
aas
adc
dec
jle
inc
pop
mov
mov
pop
push
jno
mov
pop
xchg
scas
cmp
push
xchg
xchg
or
repnz
and
loopne
pop
pop
fxch
fdivrs
out
dec
mov
pop
lods
int
lock
mov
inc
jns
outsl
adc
cmp
fbstp
xor
push
stos
sbb
cmp
ret
jns
gs
inc
shll
xor
xlat
jno
cwtl
mov
add
pushf
push
js
cmp
in
jae
mov
adc
sti
mov
mov
js
mov
push
adc
test
fildll
mov
dec
dec
popf
scas
jnp
jo
pop
mov
xchg
fsubs
insb
mov
cld
cmp
sub
xchg
loop
inc
jmp
es
lods
push
xor
aas
jp
and
ret
sbb
push
mov
mov
iret
push
jl
addr16
gs
adc
es
pop
cld
subl
testb
jnp
pop
jmp
jbe
sub
rcrb
adc
pop
xchg
das
jb
lea
mov
hlt
xor
cmp
jb
icebp
add
dec
adc
mov
xchg
repnz
bound
outsl
push
test
dec
mov
repnz
mov
xchg
jnp
loope
aam
in
pop
mov
into
leave
sub
cltd
xchg
out
xchg
arpl
lods
das
dec
cmp
lret
je
mov
cltd
in
pop
es
mov
adc
jnp
outsl
or
sbb
or
pop
sub
ljmp
fwait
xlat
mov
jno
push
mov
test
subl
das
hlt
and
lret
inc
pop
pop
mov
aas
jmp
push
cwtl
sub
lods
pushf
cltd
cmpsb
push
mov
mov
and
pop
daa
jmp
test
loopne
push
mov
fcomps
ret
ss
xchg
mov
adc
jp
mov
gs
sbb
adc
dec
adc
mov
aas
loop
cs
shrb
andb
push
cmp
loopne
add
mov
or
jne
jne
mov
in
mov
xchg
enter
imul
fsubrs
mov
out
xchg
jnp
push
hlt
adc
xchg
mov
orb
hlt
jae
add
push
mov
inc
inc
lret
addb
repz
pop
sub
add
mov
nop
xchg
jno
aam
adc
nopl
lods
jp
stc
aas
jnp
je
and
lods
xor
fisubrl
aaa
mov
outsl
mov
sub
daa
mov
sbb
addr16
ds
aaa
sbb
cmc
jp
cld
sub
xor
xor
les
and
inc
sti
sbb
mov
movsl
dec
es
jl
ret
jmp
dec
mov
sub
mov
sarb
xchg
outsl
loope
loop
or
or
pop
repnz
pop
mov
movsl
xlat
and
subb
jb
lret
mov
mov
inc
mov
ret
lods
adc
nop
in
or
cs
mov
mov
mov
iret
and
je
and
inc
dec
mov
pop
or
sbbl
sbb
cmp
cmp
mov
jmp
ljmp
mov
push
lret
sub
add
sub
sbb
push
sarb
push
fcoms
loope
scas
int
mov
setae
fsubr
push
clc
outsb
push
scas
or
andl
and
imul
mov
nop
mov
mov
cmpb
adc
in
dec
cmp
adc
mov
ss
test
push
xorl
lock
test
pop
test
insl
aas
adc
imul
and
mov
mov
mov
repz
jmp
pop
call
mov
shll
adc
jae
cmp
pop
popl
scas
sub
lods
out
jae
pop
fdivr
mov
insb
cmp
push
inc
inc
xchg
inc
bound
out
pop
or
mov
out
push
arpl
add
xor
jne
rorb
lods
mov
mov
dec
loopne
add
cmp
jp
leave
test
in
mov
jl
sub
jne
scas
mov
hlt
scas
inc
or
xchg
aam
pop
sbb
cmp
cmp
sbb
imull
test
ror
sbb
dec
data16
out
outsb
enter
xor
mov
pop
xchg
enter
xchg
mov
inc
cld
ds
loopne
pop
xchg
jge
mov
paddsw
dec
into
mov
dec
inc
in
cmpsb
mov
popa
in
cmp
fwait
mov
sbb
into
and
adc
push
dec
inc
or
cmp
aam
in
mov
mov
jbe
out
loopne
and
roll
push
sarb
and
and
dec
ja
sahf
xor
ja
xchg
jle
mov
rcr
mov
scas
mov
bound
dec
fs
push
mov
nop
aaa
mov
or
les
test
stc
xchg
mov
aad
or
leave
xor
lea
das
orl
sub
fcoms
xchg
int3
cli
jb
stos
and
mov
xchg
push
push
sub
mov
push
aaa
ret
stos
pop
inc
jo
pushf
pop
mov
imul
inc
leave
aaa
je
cwtl
sub
sbb
icebp
stc
and
push
mov
sbb
gs
xchg
sub
sbb
insl
xchg
lods
clc
mov
out
mov
mov
jnp
insb
dec
shll
add
mov
xchg
sbb
mov
and
dec
test
dec
jl
outsb
jl
pop
pop
cld
test
test
ss
jns
mov
xor
sbb
sahf
stos
pop
xor
sbb
lds
ret
int
cs
lcall
sarl
xor
dec
and
neg
mov
into
scas
aam
ret
push
fidivrs
xchg
sbb
add
or
lock
sub
loope
pop
in
bound
aas
mov
inc
pushf
cmpsl
jl
icebp
pop
add
adc
cmp
scas
dec
mov
jnp
dec
icebp
enter
lret
cmp
jnp
sub
xchg
pusha
pop
out
jl
lods
jbe
lret
mov
jg
fisttpll
adc
mov
xor
dec
xor
mov
fsts
es
cmc
add
cli
das
lcall
cmp
or
pop
clc
cmp
adcl
stos
add
xor
inc
sbb
aas
cmc
addr16
js
clc
inc
mov
hlt
inc
jge
aas
xor
gs
ds
jno
mov
test
cmp
arpl
popf
pop
dec
ret
add
lret
mov
dec
mov
add
mov
rcrb
dec
dec
icebp
sbb
je
cmp
paddusb
pop
loope
icebp
in
fs
sbb
mov
mov
lahf
jae
xchg
pop
std
or
pop
shr
jmp
out
mov
call
jb
in
gs
out
cmp
add
cmp
scas
ret
iret
dec
dec
out
xor
mov
xor
int3
add
lock
test
cmpsl
cmpsl
pop
pop
lret
cwtl
mul
cmp
push
sbb
sbb
lods
or
gs
inc
inc
mov
dec
jmp
mov
bound
out
dec
repnz
dec
neg
int
out
cld
dec
inc
mov
mov
ja
cmpps
xor
jb
int3
adc
xor
mov
loopne
dec
lea
rolb
ret
mov
inc
sti
mov
test
jmp
sti
or
sub
xchg
fsubl
and
sarb
xor
cltd
cmp
iret
or
clc
sub
inc
je
out
imull
add
shlb
mov
jmp
jns
add
test
jnp
ficoms
aaa
shll
sbb
ljmp
ljmp
fldt
es
push
jns
stos
cmp
xor
fisttps
stos
imul
xor
sub
mov
fwait
push
sub
mov
ja
popa
jno
bound
in
sbbl
or
into
ja
pop
test
adc
cmp
iret
jle
mov
stc
or
cli
jae
push
jg
hlt
mov
xchg
dec
dec
sub
push
sarl
xor
iret
xchg
or
cwtl
pop
sahf
das
pusha
adc
out
inc
add
cmc
pop
cli
aad
rcr
stc
mov
cmp
in
jno
mov
arpl
jo
and
pop
aad
sub
clc
push
insb
xor
inc
inc
jge
cli
jg
dec
loopne
add
addr16
into
cmpsb
in
in
addb
mov
jbe
das
xchg
lahf
or
sti
rolb
xor
outsb
mov
add
cmc
adc
movsl
out
and
xor
test
mov
dec
stos
add
mov
inc
repnz
sub
push
pop
mov
je
arpl
ret
sub
inc
bound
mov
clc
fmull
in
lds
pop
sbb
clc
rorb
iret
in
xor
pop
add
mov
push
jle
xchg
pop
rcrb
push
ror
jle
mov
adc
fisubrs
mov
test
xchg
or
sbb
and
pop
xchg
int3
add
dec
xchg
mov
inc
clc
sbb
sbb
pop
into
xchg
mov
push
dec
test
sub
mov
pop
into
pop
and
push
pop
fxch
mov
rolb
jb
incl
mov
movsl
lret
aas
stc
inc
xchg
ss
in
rcrb
and
shrb
in
cmp
or
cmc
les
lock
sub
fwait
xor
or
sub
xchg
aas
popa
mov
mov
jae
jp
xor
or
sub
fldcw
sbb
xor
xlat
hlt
jne
cmp
mov
pusha
pop
rol
inc
mov
aad
dec
lea
sub
stos
sahf
rcrl
es
aaa
mul
xchg
mov
jecxz
and
lcall
dec
mov
mov
lods
stos
pop
cmp
adc
popf
icebp
jno
mov
xchg
lret
and
inc
mov
bound
int
inc
and
jno
and
shrb
cli
pop
xor
outsl
add
dec
mov
imul
lea
pop
and
inc
and
adc
adc
int3
jno
push
and
and
aaa
and
adc
lret
fsts
cmpsb
jno
sbb
rcll
mov
outsl
mov
mov
mov
push
mov
cmp
xor
dec
sarb
into
pusha
push
push
lock
loop
fcoml
repz
fs
int
sbb
fisubl
mov
push
pop
in
jmp
sldt
out
lea
enter
push
dec
stos
js
adc
fistl
mov
fdivrs
into
data16
bound
fucompp
jmp
pop
aas
sbb
jl
xor
dec
mov
shrl
fistpl
inc
and
push
notb
cmc
data16
mov
pop
mov
pop
jnp
pop
movsb
adc
mov
pop
mov
jg
pop
popa
adc
xchg
int
fwait
sbb
ja
std
loop
and
pusha
push
aaa
lret
das
enter
xchg
xchg
sbb
pop
cmp
out
jns
sbb
test
and
push
test
xlat
inc
mov
movsb
xor
decb
or
sub
jo
xchg
pop
mov
dec
ret
in
mov
adc
push
es
xlat
ljmp
pushw
outsb
adc
rcrl
mov
pop
nop
popa
or
cltd
sbb
jmp
fnstcw
adc
hlt
pop
mov
arpl
je
fsubs
push
pushf
cmp
dec
xor
int
pop
jno
outsl
out
adc
fs
outsb
jnp
add
out
push
mov
push
cmp
mov
cmp
ljmp
sti
lahf
sbb
scas
je
xchg
add
mov
es
add
daa
dec
adc
sbb
sti
mov
test
dec
rcr
enter
fdivrl
jbe
mov
aad
mov
cltd
pushf
pop
loope
mov
imul
inc
test
xchg
add
ljmp
and
xchg
pop
inc
mov
push
pop
fisubl
pop
inc
add
gs
mov
lods
iret
jo
xor
fldenv
xchg
cmp
icebp
stos
push
mov
or
push
aad
cmpsb
xchg
lret
iret
in
bound
dec
mov
data16
decl
jmp
loope
pop
add
inc
out
stc
push
faddl
mov
lds
jg
add
adc
jns
xchg
or
mov
push
aad
mov
in
xchg
call
jmp
movsl
data16
or
pop
mov
sbb
xchg
in
hlt
sub
js
sti
ss
mov
xchg
int
and
jp
push
push
cmpsb
sbb
cmp
dec
in
and
imul
or
roll
mov
bound
int
cmpb
in
jo
pop
mov
xor
mov
nop
in
mov
das
mov
cld
shll
adc
imulb
aam
arpl
je
call
mov
push
xor
pop
inc
xchg
jmp
popf
add
xchg
adc
pop
in
xchg
push
dec
jp
mov
adcl
cmp
push
add
xchg
inc
stos
std
push
sub
inc
sti
test
adc
es
icebp
hlt
xor
xchg
ds
pop
ret
ja
stos
out
movsb
mov
fadds
cld
push
sbb
movsl
xchg
fisubrl
adc
push
repz
jo
push
sbbl
fwait
shlb
push
incl
jnp
mov
or
repz
jl
inc
filds
or
cmp
dec
adc
mov
xchg
loope
mov
mov
in
and
movsb
ss
rcr
test
jmp
in
sub
push
inc
test
and
add
mov
push
rcrl
push
lcall
enter
adc
imul
iret
pop
out
jne
cli
pop
sbb
into
and
pusha
aad
inc
repnz
inc
jo
insb
loopne
lods
roll
mov
cmp
fildl
jo
adc
cmpl
mov
push
loope
cmpsl
inc
test
cmp
sub
notl
sub
ret
push
mov
cmpsb
and
and
or
or
out
jb
add
inc
sbb
aas
pop
ja
stos
adc
outsl
lods
es
out
lahf
add
pop
mov
mov
popf
xchg
cmp
mov
jp
cld
push
xchg
adc
sahf
outsl
out
loopne
in
or
call
adc
mov
cmp
into
divb
je
xchg
inc
mov
or
cmpb
push
jne
push
xor
cmp
mov
mov
stos
std
jecxz
dec
sbb
ds
cmpsl
call
cmpsl
outsb
mov
mov
xorb
enter
mov
scas
dec
mulb
mov
or
add
xor
mov
loop
sub
or
fucom
inc
dec
xchg
mov
or
cmp
enter
cmc
xorb
rcll
push
dec
js
out
stos
shlb
test
addb
mov
leave
in
sbb
in
jmp
mov
aam
mov
xchg
pop
inc
cli
out
rclb
dec
cwtd
popf
or
dec
pop
jge
xor
ret
xor
mov
mov
rolb
stos
jb
ss
nop
mov
cltd
jge
ljmp
fcmovbe
lock
xor
enter
fists
iret
test
mov
xor
xchg
pop
fstl
daa
lods
and
jne
outsb
sub
dec
cwtl
mov
aas
lock
enter
xchg
pushf
fwait
popf
cmp
push
idivb
mov
movl
stos
sarl
jg
lcall
movsl
push
mul
add
mov
loop
adc
xchg
jp
adc
aad
shll
fs
mov
add
sbb
int
mov
imulb
out
sti
xor
out
aaa
pop
nop
test
push
stos
pop
add
shl
add
cli
icebp
mov
sub
xchg
add
js
and
xchg
cmp
sbb
icebp
push
push
fcompl
jnp
sub
lods
add
fcomps
cmpsb
dec
inc
pop
fcompl
popf
push
jmp
fdivrs
dec
xor
xchg
outsl
adc
stc
aas
xchg
xchg
jl
lods
lret
lea
jo
mov
push
add
dec
mov
cltd
mov
jg
jecxz
negb
xor
xor
jbe
xor
push
pusha
push
scas
push
sub
adc
mov
mov
loopne
pop
call
movsb
and
mov
outsb
cmpsl
adc
movhlps
add
add
aas
mov
fwait
adc
sti
or
pop
sub
mov
or
push
sub
ret
mov
push
test
cmp
ljmp
je
inc
jnp
aad
je
cld
fcoms
in
or
ss
sub
stos
add
insb
ret
lods
in
roll
dec
mov
jb
bswap
not
pop
mov
sub
lods
in
push
bound
stc
stc
enter
inc
aam
adcl
in
lea
je
iret
loop
inc
pop
fwait
mov
mov
jge
lds
insb
enter
imul
mov
jl
mov
ud0
push
cld
inc
outsl
in
das
sar
gs
mov
cmp
movsl
pop
cltd
fwait
mov
or
loop
rorl
scas
and
inc
stos
mov
or
jae
negl
mov
jne
test
jmp
push
dec
xor
js
cmp
sbb
rcll
dec
push
addr16
push
sbb
adc
pop
andl
rcll
ds
push
nop
lcall
roll
add
into
insb
jecxz
jnp
inc
ret
fs
inc
dec
xor
mov
arpl
pop
lcall
popa
pop
aad
iret
loopne
sub
xchg
cmp
mov
clc
pop
xchg
mov
shrl
sbb
daa
fisubs
add
adc
pop
loop
adc
push
in
addl
inc
add
adc
inc
shrl
popa
push
cli
mov
test
scas
sarb
divb
leave
into
stos
mov
mov
addr16
cmp
jne
test
jmp
mov
lock
inc
loope
xor
xchg
dec
mov
fimuls
or
je
mov
cmp
push
out
push
lea
mov
cli
mov
mov
lock
jmp
dec
jae
scas
iret
xchg
xor
jbe
aas
add
in
sbb
stos
dec
adcb
into
and
sub
push
add
jnp
out
ss
pop
add
mov
stos
pop
jle
xor
mov
andl
stc
pop
lret
jg
dec
inc
jne
pop
ds
cmp
ds
push
cli
xchg
dec
call
aaa
mov
jb
ss
stc
int3
leave
push
test
adc
adc
jo
dec
jg
jl
or
jl
pop
test
bound
push
jno
push
insb
dec
sahf
shl
ret
push
add
and
dec
loopne
ja
push
leave
jnp
jmp
cltd
mov
pop
mov
ss
pushf
sahf
push
in
lret
push
xchg
out
iret
dec
xchg
sti
icebp
les
dec
in
lods
out
cmp
lahf
mov
xchg
mov
xchg
mov
sub
mov
cmp
add
pop
cmp
fcmovnb
mov
pop
shlb
inc
push
mov
mov
xlat
xchg
scas
test
mov
iret
sub
or
dec
or
sahf
dec
and
push
loope
popa
mov
inc
sbb
inc
inc
and
loop
inc
lret
mov
pop
lods
mov
fistps
sbb
out
inc
xchg
adc
inc
cs
sti
dec
mov
cmpsb
mov
stos
aam
out
xchg
pop
cmp
mov
push
add
xchg
js
mov
mov
arpl
aaa
mov
dec
fsubl
out
cmp
std
cmpl
jo
outsb
jmp
cli
mov
ficomps
in
scas
dec
jnp
mov
inc
or
imul
xlat
pop
sbb
in
cmp
les
lret
shl
mov
popf
cmpsl
stc
daa
xor
fiadds
pop
aam
das
mov
das
mov
add
cmpsl
fmull
add
xchg
add
push
push
mov
ds
inc
mov
cmp
inc
cltd
mov
mov
cmp
ljmp
jg
in
add
add
gs
loope
mov
lock
mov
imulb
jbe
aaa
jo
test
pop
xchg
xor
lods
dec
lods
ret
insb
jecxz
enter
inc
inc
xor
in
sarl
sub
cmp
sbb
aam
pop
pop
push
fsubrl
fmull
mov
and
cs
mov
cwtl
pop
cmpsb
arpl
xor
push
out
in
inc
push
lret
sarl
rorl
fimuls
aas
cmp
fs
sti
cmp
mov
lods
cwtl
jae
sub
xor
pop
pushf
push
cmp
pop
lods
cmp
or
xor
jne
adc
push
mov
add
mov
and
pop
test
mov
adc
lret
and
mov
mov
shrl
xorl
cmp
mov
pop
in
ret
xlat
and
cmc
jle
sbb
mov
ror
rcrb
test
xor
sbb
int
into
push
lods
les
adc
imul
adc
jbe
lcall
fxch
sub
mov
fmuls
sub
or
pop
insb
sbb
pop
test
call
lods
add
pop
and
inc
imul
popa
cmp
jl
pop
fcmovnu
scas
aad
ljmp
cwtl
imul
push
pop
sbb
jb
jge
mov
mov
lea
ret
or
lahf
cmpsb
std
mov
push
hlt
xor
push
je
mov
movsl
cmc
data16
sbb
cmp
test
movsb
jb
jp
das
dec
ljmp
rclb
rol
push
sbb
jno
jns
mov
mov
inc
mov
xor
and
xor
arpl
fildll
push
adc
aaa
insl
in
mov
lret
sbb
insl
ss
inc
int3
gs
stc
data16
repnz
mov
outsl
push
mov
repz
mov
leave
fidivl
add
lods
decb
push
xor
aam
mov
jecxz
mov
xor
or
daa
jp
jns
sub
mov
sub
jl
icebp
insl
lods
mov
test
push
or
cmp
jmp
xchg
pop
dec
and
scas
les
push
mov
push
dec
in
cmp
xchg
xchg
xchg
xor
out
push
inc
xor
je
and
addr16
sub
dec
mov
mov
aam
jne
inc
push
insb
dec
aas
xchg
or
cli
out
dec
testb
add
and
and
leave
mov
adc
in
or
dec
jbe
pop
ret
nop
sbb
push
jg
jbe
mov
push
in
add
sbb
mov
adc
stos
cmp
sbb
or
adc
mov
call
cmp
xchg
jmp
cwtl
outsl
dec
jle
sbb
movsb
and
mov
dec
sbb
cmp
mov
add
inc
jne
dec
push
negb
rorb
sahf
mov
lds
pop
mov
add
push
mov
sbb
sti
incb
lret
roll
dec
test
pop
mov
fistl
repz
nop
repz
xorl
popa
dec
es
mov
ret
out
orl
xchg
loop
adc
and
pop
mulb
sbb
cmp
pop
fisubrs
mov
cmpsl
push
lea
aad
push
inc
xor
jp
and
int
dec
adc
std
cmpl
mov
adc
mov
jg
cld
jp
sbb
and
adc
ffree
test
cwtl
push
jnp
pusha
or
dec
xlat
mov
lods
in
xchg
add
fdivl
das
mov
sti
pop
mov
and
sub
cmp
mov
negb
outsl
cmp
insb
cwtl
push
push
ja
sub
xchg
add
in
jge
cmp
loope
loopne
jl
cmc
sub
lods
aas
pusha
lcall
popf
lds
xchg
mov
push
cmp
rcr
pusha
xchg
sub
jb
das
mov
popl
lea
sub
icebp
stos
jle
dec
cmp
mov
xchg
imul
repz
pop
fisubl
loope
jo
or
mov
ret
test
outsl
xchg
pop
inc
js
sbb
mov
test
xchg
and
jbe
pop
jb
pushf
int3
adc
test
incl
dec
sbb
push
sbb
jp
push
jg
adc
popa
mov
mov
dec
je
loopne
es
das
fcmove
imul
subb
inc
pop
cmp
idiv
aam
insb
push
lret
dec
lret
pop
jnp
sub
adc
pop
sub
adc
jle
mov
addr16
hlt
in
aam
in
and
ret
push
add
inc
xchg
jmp
mov
cs
pop
sub
lods
adc
ficoms
sbb
cmp
xchg
xchg
sahf
jp
xorl
or
mov
mov
dec
sub
test
popa
mov
mov
aas
cmp
loop
xor
cmp
push
push
sub
pop
cs
pop
cmp
gs
xchg
mov
mov
mov
pushf
pop
jno
push
faddp
divb
sbb
imul
shll
scas
jns
xchg
jge
push
sub
cmp
sub
mov
aam
jp
cmp
popa
movsl
dec
loopne
mov
cli
ret
imul
cmpsb
xor
movl
sbb
cmpsl
xchg
sub
sub
in
mov
movsb
scas
sbb
bound
into
dec
movsb
push
ja
dec
mov
cmc
fldenv
sbbb
jbe
daa
dec
push
xchg
test
cmp
lods
xorl
in
in
add
stc
ret
or
in
jne
push
pop
inc
xchg
cmp
cmpl
mov
jle
mov
add
test
mov
adc
call
fidivrl
and
sub
jae
movb
adc
push
sbb
mov
inc
daa
xor
or
inc
push
icebp
xchg
enter
fcmovbe
xor
lret
mov
jb
test
outsl
cltd
mov
ret
mov
dec
mov
add
out
popa
jl
je
pop
stos
mov
xor
or
or
jno
add
adc
jg
mov
pop
xchg
xchg
mov
push
jl
test
sub
cltd
and
push
sbb
push
push
pop
lret
adc
cmpsb
nopl
mov
inc
lods
rol
jp
inc
int
push
mov
mov
mov
or
mov
jno
aam
mull
movsb
je
adc
iret
mov
fiadds
inc
xor
and
jns
xchg
test
mov
fbstp
dec
in
into
addr16
add
mov
cmp
loopne
out
lods
in
xchg
xchg
mov
mov
into
scas
pop
xor
fdivl
xchg
insl
mov
test
sub
pop
and
sub
orl
out
and
mov
sbb
outsb
xor
mov
jae
and
lods
and
jo
cwtl
mov
outsl
aas
rolb
or
adc
jl
xor
subl
inc
jp
in
and
insl
mov
mov
mov
xchg
pop
dec
test
out
js
xor
test
enter
add
inc
lock
mov
arpl
sbb
rcll
in
add
scas
sub
mov
inc
fcoml
mov
insb
shl
fimull
les
icebp
imul
aas
lcall
mov
mov
add
and
sbb
scas
movsb
leave
lods
std
xor
xchg
hlt
adc
dec
leave
add
add
dec
or
add
sbb
out
psrlw
cmp
xchg
inc
stc
js
fstpl
push
ficompl
ja
mov
mov
jno
cltd
int
in
jle
mov
btcl
cli
cwtl
and
lock
fidivs
or
movsb
cltd
xchg
stc
bnd
imul
das
outsl
mov
addr16
push
mov
loopne
loopne
in
jne
or
outsl
das
sbb
mov
fs
mov
add
mov
addr16
call
inc
dec
aad
jne
into
add
jno
adc
enter
pop
push
aas
sbb
test
rol
je
mov
and
cmc
inc
dec
std
incb
lds
pop
test
jl
push
stos
js
ja
xor
pop
repnz
sub
push
dec
pop
or
std
sar
fucom
test
jb
into
addr16
adc
gs
test
scas
and
clc
fs
gs
fidivl
stos
adc
mov
jno
pop
sbb
xchg
data16
cmp
pop
push
pop
add
push
fistl
xchg
sbb
hlt
or
dec
ja
mov
jp
or
imul
dec
je
xchg
jp
sub
xchg
leave
mov
mov
leave
xor
or
fwait
mov
test
xorb
add
addr16
dec
sbb
push
jmp
cmp
dec
and
not
mov
addb
loopne
xchg
sbb
pop
mov
adc
adcb
dec
xor
cmp
incl
bnd
test
mov
ret
test
xor
nop
sub
sbb
ljmp
mov
insl
dec
pop
xorb
jb
xor
inc
out
push
movsl
das
test
push
adc
mov
imul
inc
dec
jo
or
ja
xor
jge
inc
xchg
pop
das
push
imul
loope
out
es
pop
dec
sub
xor
push
sbb
pop
mov
shl
test
push
xor
cmpsb
cmpsb
inc
call
je
cltd
insb
jo
mov
gs
hlt
js
cmp
outsl
loop
sub
ja
lods
jb
subl
xor
stos
dec
imul
inc
mov
mov
sbb
mov
pop
mull
shlb
dec
lods
ret
aad
mov
adc
repz
cwtl
stc
cmpl
or
icebp
outsl
mov
das
xor
add
sub
push
dec
add
sti
pop
mov
or
push
in
out
pop
out
jp
inc
xchg
sarb
pop
or
mov
lcall
dec
std
testl
cmpsl
call
out
scas
push
loop
mov
jae
add
xchg
movsl
repz
sbb
and
adc
push
cmpsb
nop
ficompl
mov
popa
clc
xor
enter
orb
and
fistl
test
imul
sub
in
icebp
mov
jnp
push
adcl
jp
aas
push
bound
cwtl
sarb
mov
outsb
adc
mov
stos
bswap
xor
sub
xchg
add
cltd
aad
inc
cmp
test
cmp
jg
lcall
pop
and
icebp
in
add
cmp
xor
fisttpll
jnp
dec
movsb
movsb
aam
pop
testb
xor
shl
jns
out
xchg
lcall
inc
mov
fistpll
xchg
adc
in
into
adc
xor
cltd
pop
push
xchg
xchg
gs
push
jle
addr16
ret
sbb
add
repz
adc
mov
xchg
insl
sbb
or
mov
sub
cmp
pop
scas
jae
and
popf
nop
or
scas
jno
scas
out
add
dec
testl
push
test
iret
xchg
mov
xchg
cmp
push
ja
loop
jl
mov
rorb
xor
in
stos
nop
xchg
lret
bound
shl
pop
jge
pop
scas
test
in
xor
loopne
jo
cmc
prefetch
ror
lods
lret
sti
ss
insb
addl
inc
jmp
insl
clc
faddl
mov
insb
test
pop
push
mov
out
mov
dec
pop
jne
daa
aad
mov
sub
mov
dec
mov
lea
cli
adc
gs
or
jg
sub
in
out
mov
jnp
inc
imul
sub
movsl
push
inc
call
addl
add
jmp
push
cwtl
rclb
es
xchg
push
cmc
mov
inc
cmp
dec
xchg
lods
inc
unpcklps
in
xchg
idivl
cs
sbb
insb
xchg
xlat
aam
mov
testl
xchg
ss
push
mov
sbb
ljmp
cmp
aam
jno
xchg
mov
stos
in
or
or
inc
sbb
jle
lods
inc
fcmovu
xor
mov
daa
test
scas
mov
sbb
pop
iret
lret
sti
aam
imul
cmc
mov
sub
fdiv
call
push
and
je
adc
outsb
mov
or
lods
sbb
test
pop
rcl
lock
pushf
in
push
lds
sarb
stos
xchg
notl
add
add
movsb
ret
push
imul
stos
and
into
aam
mov
push
add
test
int3
aam
cmc
or
jo
push
cmp
ret
add
push
iret
mov
fsubr
loope
sub
pop
hlt
xchg
loopne
cmc
arpl
adc
rorl
lea
fdivs
dec
inc
inc
cmp
fmul
divb
stc
call
mov
cmpsb
loop
scas
fucomi
dec
stos
xor
add
dec
cli
movsl
mov
inc
inc
ds
sahf
movsl
inc
push
xchg
sbb
jg
xchg
cld
repnz
cmp
ljmp
add
bound
cmp
inc
pop
mov
mov
xor
cmp
andb
rcr
fisubrs
pop
mov
add
adc
rcl
mov
insb
sbb
movsl
insl
or
sbb
jae
mov
fdivrl
cmp
int
sub
xchg
shll
and
dec
incb
dec
orl
vcvtsd2si
xor
int3
sub
cmp
and
ret
out
aam
add
jmp
mov
jl
push
or
gs
or
mov
jg
movsb
mov
push
jmp
push
cmp
test
sub
dec
in
xchg
flds
aam
mov
test
inc
sahf
loope
fiadds
xor
lcall
test
xchg
pop
jmp
dec
xchg
rclb
daa
cwtl
dec
loop
mov
sub
push
movsb
pop
push
push
out
pop
cwtl
stos
mov
orb
adc
mov
cli
iret
add
mov
sbb
and
xchg
push
xor
in
scas
out
jb
or
mov
jl
mov
scas
mov
xor
hlt
in
adc
and
bound
jecxz
clc
or
out
fptan
fwait
sub
jbe
insl
push
push
scas
xchg
push
adc
mov
insl
imul
movsl
xchg
adc
stos
pop
daa
mov
bound
jno
aad
fsubr
pop
faddp
jl
pop
pop
aam
pop
dec
cli
sbb
push
loop
fistps
int3
fwait
jmp
push
or
leave
testb
scas
push
out
cmp
mov
lcall
addr16
enter
fisubrl
ja
push
jp
out
or
and
push
mov
jnp
lret
mov
jmp
add
icebp
and
push
out
bnd
adc
lods
fnstsw
popf
jg
sbb
ds
in
pop
rcr
sub
hlt
popf
push
xor
mov
push
jl
lea
pop
add
inc
and
push
std
mov
jbe
xchg
shll
jo
sub
adc
mov
and
mov
push
adc
into
outsb
mov
fs
cmpsl
loopne
push
stos
cwtl
negb
pop
out
cmp
into
pushf
imul
mov
imul
xchg
call
pusha
inc
jecxz
mov
hlt
mov
dec
lods
push
xchg
xchg
xchg
scas
mov
xor
faddl
dec
movsl
jg
push
mov
dec
adc
sarl
and
shl
pop
pop
cltd
pop
insl
and
lds
clc
ja
hlt
dec
in
push
cltd
dec
and
cwtl
xorb
jae
adcb
into
jmp
mov
xchg
pop
or
fstpt
or
in
push
sub
xchg
adc
ja
outsb
cmp
outsb
adc
cld
add
and
out
mov
adc
xchg
fildll
out
jmp
xor
and
cmpsl
add
sub
add
xlat
mov
addb
jnp
cwtl
fsubs
arpl
pop
fidivs
inc
loopne
push
adc
mov
sti
aaa
jne
insl
aas
mov
cwtl
xor
ja
push
call
ds
out
pop
popl
dec
xlat
mov
mulb
loop
or
into
mov
movsb
inc
mov
int3
fs
and
dec
fcomi
stos
fdivrs
outsl
fs
sub
pop
mov
hlt
mov
mov
cwtl
dec
pop
test
push
shrl
pop
add
pop
ljmp
jp
and
fcomi
addr16
sub
repnz
outsb
mov
mov
test
pop
fchs
adc
adc
dec
cmp
repnz
or
mov
push
pop
aaa
outsb
and
xchg
lret
add
rorb
repz
sub
mov
xchg
or
mov
popf
gs
add
sbb
jbe
orl
or
inc
pop
ja
insb
inc
jb
notb
les
add
dec
add
call
lret
std
shll
pop
cmp
jno
mov
jl
jle
adc
xchg
rorb
pop
push
mov
imul
cmp
pusha
ja
mov
scas
orl
into
inc
out
or
insb
ss
in
xorl
gs
jg
decl
or
shr
dec
imul
fimuls
in
cmp
dec
fucomip
bound
jnp
cs
sub
pop
les
jo
push
xchg
fcomps
inc
push
mov
rolb
cmp
icebp
daa
mov
sbb
inc
and
xchg
int
sbb
pop
aam
jne
loope
xchg
adc
mov
cmp
je
in
xchg
add
fisubs
mov
push
lock
inc
int3
jo
rcll
inc
jge
aaa
adc
addb
adcb
ja
adc
out
int
mov
xchg
imul
cli
sub
mov
ret
into
xchg
sub
xchg
mov
jne
leave
into
or
jns
shrl
xlat
xor
mov
sbb
mov
test
sbb
fwait
inc
fdiv
ret
cmp
pushf
es
sarb
inc
movsb
sbb
lahf
cld
and
and
cmp
cmp
add
dec
cmpsl
lahf
in
lret
inc
fldt
sbb
jnp
pop
movsl
bswap
add
mov
sub
jnp
in
ret
mov
push
mov
mov
out
repnz
sarl
cli
sahf
jle
adc
imull
cmp
es
mov
jmp
jg
sar
jae
mov
repz
test
ljmp
mov
push
imul
ret
or
insb
shlb
loope
lock
inc
ds
jecxz
sbb
iret
cltd
shrl
imul
cmp
pop
jmp
rorl
sbb
aad
mov
sbb
jo
shld
mov
mov
scas
jns
or
sbb
ret
push
cmc
jle
fucomp
stos
lea
pusha
cltd
addr16
pop
and
mov
out
push
icebp
mov
cmp
roll
sbb
mov
out
xor
rclb
aad
xchg
cs
push
into
mov
jo
sbb
jb
jle
cmp
push
cmp
inc
mov
cmp
enter
clc
into
push
push
push
rclb
das
mov
sub
icebp
mov
fcmovnb
cmp
xor
add
inc
imul
jge
adc
cmp
mov
aas
ljmp
cltd
imulb
lret
js
cs
fidivs
std
xchg
scas
sub
daa
adc
out
addr16
sbb
gs
mov
jns
mov
shll
sbb
mov
xor
cwtl
inc
sti
jae
popa
push
add
test
cmpsl
cmp
pop
pop
pop
xor
xchg
cld
leave
and
adc
push
inc
push
mull
or
out
popf
jle
syscall
movsl
pop
lret
and
rcrb
jmp
add
push
data16
jno
into
fcoml
mulb
inc
xor
dec
sub
mull
and
adcb
rclb
adc
lahf
enter
adc
cmp
xchg
or
lret
dec
sub
pop
cmp
push
sbb
sarb
jbe
push
or
nop
fsubrs
xor
icebp
jmp
and
adc
bound
std
aam
sarl
aas
cmp
popa
xor
iret
jmp
imul
std
ja
or
sahf
pop
push
push
xchg
fs
imul
rclb
jl
ret
or
mov
jp
in
adc
add
inc
hlt
add
xor
sbb
or
js
sti
outsl
nop
repz
aaa
lds
pushf
popa
negb
and
pop
leave
popf
and
out
lods
mulb
icebp
imul
les
rclb
test
je
sbb
pop
in
mov
ja
xor
xchg
pop
fs
cmp
jbe
fisttpl
testb
cmp
cmp
add
dec
cmp
inc
rcll
inc
sti
icebp
xchg
or
add
sub
ja
leave
xchg
and
ljmp
sbb
and
push
push
mov
pop
mov
jmp
out
out
fs
adc
or
add
xorl
pop
lods
mov
cmp
sub
in
dec
mov
jge
jg
mov
jmp
das
int3
out
outsl
mov
push
leave
push
fstl
xchg
fiadds
test
call
test
xchg
in
jb
lds
int
xchg
adc
and
out
ja
mov
cmp
ret
loopne
jecxz
mov
repnz
addr16
iret
std
mov
inc
inc
pop
sbb
jb
rcl
pushf
xchg
das
adc
or
add
adc
cli
ds
js
incl
adcb
mov
dec
pop
dec
lahf
enter
inc
push
rcll
jmp
out
enter
hlt
jne
cltd
cli
dec
int3
and
jge
scas
adcb
dec
mov
xchg
cmc
push
fimuls
movsl
aam
mov
xchg
cld
addr16
je
nop
cmpsb
bnd
mov
mov
xor
movl
addr16
enter
inc
cmp
adc
aam
inc
adc
or
mov
call
inc
fiaddl
and
flds
inc
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbbl
add
xorl
mov
mov
and
xor
and
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
push
push
or
xchg
xchg
mov
and
addl
xor
repz
inc
sbb
addb
inc
in
sbb
popa
repnz
popa
mov
loope
push
and
pushf
jge
dec
jl
mov
pop
pop
jp
mov
repnz
lods
cmp
or
mov
iret
cmpsl
jno
xchg
repz
outsl
xchg
or
in
xor
push
lods
xchg
mov
inc
mov
loopne
imul
aas
pop
mov
mov
ljmp
jge
ret
gs
bound
cmp
subb
aas
ja
dec
dec
mov
insb
xchg
push
push
mov
hlt
loope
repnz
mov
mov
jle
test
bound
lods
divb
xchg
inc
add
je
fistpl
jl
test
fdivr
filds
mov
dec
js
mov
or
popa
stos
cmp
movsl
fdivrs
mov
das
lods
lea
push
pop
dec
dec
mov
hlt
in
pop
hlt
rcll
sti
out
cmpsl
jo
aaa
xor
out
addr16
mov
cmc
js
inc
popa
loope
daa
xor
loopne
mov
test
xchg
sbb
or
js
daa
push
sub
cld
rolb
push
filds
int3
mov
in
outsb
sbb
push
mov
xchg
inc
xchg
jmp
shlb
leave
push
and
mov
aad
fsubrs
dec
jecxz
inc
ds
int
mov
pop
fs
fists
adc
dec
dec
sub
popf
fsts
mov
cmp
bound
aas
out
call
pop
out
jbe
cmc
xor
mov
cmpsb
push
ficompl
gs
jb
pop
adc
pop
cmc
dec
bound
pusha
xchg
and
cmp
daa
jle
mov
ficompl
dec
mov
xor
mov
mov
scas
mov
testl
cli
xor
lds
sarl
loop
lret
repz
imul
mov
mov
popa
div
sarb
test
inc
outsl
and
sub
das
jle
mov
icebp
jo
pop
sbb
int
dec
cmpsb
mov
leave
rol
ror
jmp
inc
sbbb
dec
pop
jge
hlt
lcall
push
sbbb
sbb
add
lods
fstpl
xor
sahf
cltd
incb
adc
cmp
scas
dec
dec
insl
mov
dec
xchg
ja
add
ss
test
int
pop
mov
rorl
cmp
cmc
mov
shr
mov
rcll
adc
outsl
test
mov
frstor
xor
in
insl
repnz
push
push
jnp
int3
test
inc
out
jns
push
jnp
adc
push
lret
push
test
adc
aam
outsl
pop
mov
xor
jp
rorb
je
fs
sahf
sbb
testl
add
je
cmpsb
jnp
pop
jae
mov
mov
stos
jecxz
shl
fldenv
mov
dec
lds
sbb
and
repnz
cmpsb
add
repnz
sub
shll
js
enter
sbb
inc
and
pop
cmpsb
push
or
mov
scas
push
call
fistpll
cwtl
mov
pushf
and
mov
sti
idivl
add
push
and
out
out
fsubl
call
pop
fldcw
scas
and
xchg
inc
out
fs
ja
fsts
dec
mov
push
ret
bound
stos
jne
push
xor
sbb
push
and
push
push
les
out
xchg
popa
mov
pop
fcmovbe
and
jne
aaa
andb
or
cli
cmp
mov
jb
data16
or
adc
inc
inc
xor
in
mov
inc
xor
adc
adc
cmp
out
das
inc
inc
fldt
xor
icebp
lea
jae
cli
out
or
jmp
mov
jbe
fwait
mov
lahf
xor
out
add
pop
push
mov
pop
sbbb
mov
or
pop
push
mov
out
imul
dec
movsb
stos
aaa
xchg
cld
mov
dec
loope
cmp
push
xor
mov
add
xor
jmp
dec
std
mov
add
aam
imul
bnd
test
sbb
subl
pop
mov
push
jo
jp
mov
xchg
ret
push
in
or
shll
mov
xchg
mov
loopne
and
pop
inc
push
jle
fnsave
cmp
dec
push
std
std
fsubrl
push
jge
pusha
push
movsl
or
in
mov
fdivrs
and
fs
xlat
pop
test
andl
imul
mov
jecxz
lods
mov
jne
inc
cmpb
dec
loope
push
pop
xorb
add
sub
loopne
clc
cmp
or
sbb
into
insl
mov
jl
adc
sahf
sub
imull
or
lcall
in
cmpl
mov
out
scas
adc
sbb
lcall
sbb
insb
adc
mov
loopne
arpl
rcll
dec
cmp
test
dec
jmp
lds
jb
jge
add
mov
stos
aad
jnp
shll
mov
dec
cli
pop
out
inc
mov
and
bound
mov
fcmovnbe
in
jmp
jge
leave
scas
dec
pop
clc
and
stos
out
adc
xchg
jg
sbb
int3
in
fmuls
jp
jb
ffreep
jo
inc
adc
mov
xor
lret
loop
cmpsb
test
sbb
lds
mov
mov
cmp
lods
add
sub
or
cwtl
dec
ud0
pusha
testb
std
stc
mov
jae
aaa
cmp
dec
jg
lods
cmp
ljmp
inc
mov
test
xor
push
popf
jo
insl
sbb
dec
das
push
int3
in
pusha
jno
dec
testl
inc
jae
fstps
xchg
in
jmp
int3
iret
dec
sub
pop
xchg
repnz
jo
stc
cltd
cmp
and
or
or
sub
mov
std
scas
fwait
mov
fxch
cmp
fcmovbe
mov
pushf
arpl
push
adc
jecxz
aam
mov
dec
jg
movsb
sbb
cltd
add
sbb
idivl
std
add
pop
xbegin
push
pop
adc
shl
ret
rorb
mov
xor
jmp
push
popa
repz
xchg
lret
or
leave
sub
mov
imul
push
sub
jmp
xchg
shrb
xorb
sarb
add
and
or
xor
btc
fs
lock
ds
pop
inc
inc
lds
flds
in
mov
and
int3
pop
loopne
mov
pop
popf
mov
icebp
inc
je
cmp
cld
mov
pop
mov
loop
mov
jge
mov
and
test
inc
or
popf
xchg
mov
test
sbb
sbb
add
jo
int
test
mov
popl
push
cs
dec
out
test
pusha
sub
pop
jp
dec
dec
xchg
mov
cmpsb
cwtl
mov
imul
into
mov
imul
gs
int
xchg
ret
cmc
sub
imul
jne
xor
mov
cltd
xor
sub
jae
outsl
cmp
cmp
xchg
inc
fists
xor
dec
push
dec
int
nop
cvttps2pi
repz
pop
das
imul
jno
icebp
push
stos
pop
mov
lds
movsb
data16
push
jae
sub
out
dec
xor
xchg
adc
and
test
repnz
mov
fidivs
xchg
mov
decb
cmp
sti
lcall
and
inc
push
mov
sbb
cmpsl
cltd
mov
xor
cmp
ljmp
add
std
xchg
pop
rolb
sub
dec
xchg
arpl
cmp
and
insl
inc
mov
mov
test
dec
ss
fcompl
mov
stc
subl
pushf
out
leave
jle
mov
std
int
adc
jb
push
movsb
stc
int3
stos
ljmp
pop
add
popf
inc
pop
push
xchg
movsl
pop
and
mov
popa
or
sarb
xor
clc
mov
daa
fcmovb
xchg
insl
nop
insl
leave
imul
fwait
dec
in
xchg
or
pop
jae
jne
jns
ja
icebp
or
dec
mov
xchg
inc
aad
mov
mov
adc
push
repnz
shrb
mov
or
dec
jge
pop
inc
mov
roll
aaa
out
dec
push
add
mov
call
push
loop
inc
ja
je
or
inc
ret
lahf
inc
add
dec
mov
dec
push
cmp
ficomps
ror
adc
lahf
xor
outsb
dec
inc
jo
adc
iret
les
notl
arpl
notb
jge
inc
mov
mov
jmp
mov
sub
xor
and
aam
es
icebp
mov
sbb
es
adc
jne
mov
xchg
mov
inc
xchg
repnz
mov
push
popa
jl
push
out
call
inc
inc
in
mov
pop
sub
mov
inc
fs
push
repz
and
outsb
mov
in
jle
sbb
and
rolb
mov
push
cmp
add
sar
cvtdq2ps
push
les
aad
call
dec
sbb
stc
fs
out
stos
movsl
lcall
lret
push
and
dec
cwtl
mov
in
add
arpl
cmpsl
xchg
xchg
les
cld
cld
or
nop
fisttpl
jae
inc
sbb
xor
dec
inc
adc
mov
sub
ret
dec
lcall
clc
add
add
fildll
out
inc
lods
imul
dec
in
sub
sarb
repz
leave
lods
sti
sub
xorb
jl
add
jnp
pop
inc
mov
adc
addl
idivl
nop
adc
xor
addr16
dec
mov
rorb
adc
mov
fwait
ss
mov
pop
sbb
es
imull
ret
movsl
mov
and
jle
push
add
movsb
sub
pop
mov
fildl
or
mov
cltd
cmp
jns
add
pop
scas
aaa
std
fldl
pop
lahf
xlat
dec
lcall
stc
adc
xor
clc
test
dec
xchg
inc
in
adc
data16
mov
nop
enter
inc
inc
or
jno
cmp
leave
pushl
shll
push
jmp
mull
inc
cmpsl
flds
cmpsl
push
in
es
push
bound
xor
dec
dec
orl
mov
xchg
adc
inc
jo
mov
sbb
jb
xchg
inc
out
mov
jp
leave
ret
mov
mov
push
cwtl
sub
xchg
es
dec
inc
pop
xchg
in
lret
stos
xor
jg
fildl
fcmovb
ss
adc
xchg
outsb
hlt
clc
and
out
sbb
adc
cltd
fldt
jo
sbb
push
sarl
outsl
pusha
insl
mov
in
xchg
mov
sub
frstor
or
lahf
dec
arpl
ljmp
push
imul
jle
call
icebp
maxps
test
lcall
stos
scas
or
in
xchg
sti
xchg
cmp
mov
sbb
sub
pop
test
roll
cmpsl
pop
sti
insl
xchg
add
pop
and
and
hlt
inc
aam
int
sbb
orb
or
mov
add
mov
test
fnstenv
rorb
nop
mov
xorb
fcmovbe
enter
imul
fmull
test
pop
jne
rclb
xchg
aaa
jb
push
mov
test
dec
sub
imul
fs
cmc
pushf
call
cmp
mov
iret
into
mov
push
sub
popf
mov
mul
mov
sub
divl
pop
int
shll
cmp
jecxz
dec
pop
outsl
sub
repnz
out
repnz
je
fstl
int
or
mov
ficoms
loope
xchg
clc
ja
mov
push
pop
push
mov
inc
push
scas
mov
mov
fsubrs
dec
mov
pusha
insl
mov
cmp
outsb
jp
stos
mov
pop
xchg
mov
fstpl
fbld
push
ret
imul
std
enter
mov
fnstsw
int3
and
cmp
fists
mov
xchg
jnp
adc
push
cmpsb
inc
scas
inc
stc
ret
shlb
negb
test
push
clc
std
lcall
rcll
jbe
cmp
inc
pushf
jl
outsl
pop
xchg
pop
xchg
mov
lahf
push
frstor
popf
loope
cltd
cltd
push
data16
pop
stc
cmp
xchg
or
dec
enter
clc
fs
subl
jecxz
inc
xchg
push
rol
fstpt
inc
jns
push
sub
fsubrs
sbb
or
cwtl
sub
cli
scas
fidivrs
pop
incl
subb
in
dec
dec
bound
dec
pop
in
xchg
call
push
das
out
push
popa
mov
adc
mov
adc
into
repnz
fdivs
in
adc
iret
out
cmpsl
inc
mov
mov
pushf
notb
push
sbb
insl
or
stos
inc
mov
mov
sbb
dec
jg
push
mov
pop
in
and
mov
ror
scas
lahf
inc
push
xor
lcall
sub
cmp
or
dec
lods
mov
sub
or
or
xchg
arpl
in
adc
dec
daa
cmpb
rcrb
push
push
pusha
xchg
push
cmp
data16
addr16
mov
mov
inc
cmp
sbb
aad
pop
sbb
jno
dec
xchg
push
cmp
or
pop
cwtl
and
inc
or
lret
pop
jns
jns
icebp
or
add
cmp
fwait
mov
mov
mov
inc
mov
fstps
hlt
fst
lock
scas
test
daa
insb
mov
dec
xlat
dec
mov
call
cwtl
mov
sti
fisttpll
mov
and
rcll
or
mov
pop
test
bswap
push
cmp
in
imul
jmp
xor
stos
sbb
call
add
loop
mov
xchg
or
imul
ficomps
stos
sti
loop
or
das
or
sbb
xchg
mov
imul
lahf
push
mov
mov
into
decb
fs
decl
xchg
or
int3
push
rorl
mov
loopne
test
push
shl
or
icebp
neg
xchg
repz
out
lods
add
es
adc
mov
sarb
xchg
test
int
inc
add
push
mov
add
cmp
enter
ja
dec
ljmp
mov
cmpsb
aam
ret
movsl
xorl
loopne
pop
or
jb
mov
scas
in
mov
add
mov
and
dec
jmp
in
mov
lahf
mov
sub
inc
push
test
enter
xchg
pusha
dec
add
lds
addr16
lret
sub
rcl
dec
dec
rclb
jg
xor
in
push
add
mov
add
popf
jg
or
pop
jne
xorl
xchg
and
in
inc
shrl
jge
cltd
clc
sub
pop
inc
ret
repz
mov
xchg
mov
cltd
mov
pop
mov
call
cmp
faddl
ja
data16
js
arpl
push
pop
mov
sti
int3
out
sub
stos
cmp
mov
std
cld
cmp
dec
lret
and
mov
push
call
sub
into
mov
pop
stos
aad
out
ds
inc
fldt
push
pop
test
incb
jae
push
xchg
xor
cmp
addr16
pop
inc
dec
sbb
scas
mov
mov
outsb
adc
hlt
cmc
jb
lret
xchg
rcrl
xchg
and
shr
inc
add
fs
lahf
add
or
and
dec
loop
inc
movsb
mov
push
jno
push
arpl
pop
test
jmp
fistps
mov
jg
dec
std
xor
dec
fidivrl
push
jne
testb
inc
add
jns
sbb
int
add
cmp
mov
mov
loop
xchg
or
outsl
ss
xchg
in
nop
mov
cmpsl
mov
and
ret
inc
js
adc
loope
sbb
subl
int3
sub
dec
shlb
or
pop
push
push
loope
in
adc
adc
loope
sub
adc
mov
and
pop
pop
adc
pop
pop
sub
add
xchg
aaa
pop
scas
xchg
inc
dec
sbb
push
or
fprem1
aaa
xor
aaa
ljmp
mov
ret
inc
pop
clc
mov
clc
and
loope
and
stc
insl
mov
mov
dec
or
dec
stc
iret
xor
xchg
mov
xor
mov
inc
fstl
jnp
repz
fisubrl
cli
getsec
jno
outsb
mov
leave
out
stos
in
adc
pop
ss
fwait
mov
icebp
pop
js
iret
jge
inc
xchg
cmp
aad
pop
mov
xor
stos
in
add
test
pop
stc
fcmovu
popa
inc
test
or
lret
jmp
repz
push
je
popa
push
and
mov
ds
pop
mov
rclb
fdiv
mov
out
or
ficoms
add
andb
imul
repnz
lahf
loopne
roll
out
mov
pop
inc
cmp
cmp
push
cmp
je
lret
inc
sbb
lds
sbb
xor
jno
push
pop
js
fdivr
push
mov
cs
hlt
mov
insl
sbb
cli
cltd
dec
stc
inc
call
sub
cmp
iret
jecxz
cwtl
aad
shll
pusha
dec
lret
ret
aaa
sub
mov
push
jl
xor
stos
mov
pop
and
inc
sbb
out
jg
and
fsubrp
push
and
and
addr16
fprem1
inc
aaa
mov
aas
rolb
push
pusha
mov
shll
fildl
orl
in
dec
pushf
mov
clc
rclb
loope
mov
daa
fistpll
sub
xlat
cwtl
adc
xor
dec
sbb
std
inc
bound
dec
lahf
fildl
mov
rcrb
sub
stc
push
gs
repz
mov
sar
jo
mov
inc
testl
xor
cmc
or
sub
or
adc
mov
push
loope
jo
addb
stos
inc
mov
xchg
aaa
fmul
mov
dec
into
stos
out
dec
lret
push
mov
push
outsl
in
xor
xlat
shl
jl
add
mov
push
shrb
pop
push
push
dec
jg
adc
out
stos
rcl
orb
adcl
push
sbb
in
int3
imul
inc
loop
mov
or
push
arpl
jp
pop
jo
popf
push
xor
in
popa
sbb
in
in
pop
push
outsb
pop
push
sub
loope
jno
and
stos
pop
push
mov
lret
mov
ds
mov
outsl
sahf
add
cmp
call
arpl
lcall
mov
add
add
push
out
pusha
cmp
repz
mov
es
enter
mov
fmul
lahf
call
mov
push
dec
repnz
test
mov
mov
ret
clc
stos
imul
jno
popf
aaa
cltd
and
push
push
sub
xor
adc
outsb
in
cmp
mov
cmp
inc
daa
mov
aad
fiadds
cmp
inc
lock
enter
sti
jno
cwtl
dec
mov
aam
cmpsl
jmp
movsb
scas
adc
mov
add
aad
pushf
movsb
cmp
bound
or
pop
xor
add
inc
lods
pop
insl
lea
test
iret
jns
dec
pop
lret
xchg
lret
mov
jae
xor
jo
shlw
dec
imul
sahf
push
mov
clc
adcl
iret
pop
mov
jb
loop
jns
add
fs
scas
xor
fs
in
iret
dec
andl
mov
sarb
std
pop
scas
test
fistl
jne
jmp
popf
imul
push
stos
jnp
xor
in
loopne
popf
jg
add
cmp
jb
call
mov
adc
fdivrp
int3
jb
mov
pusha
imul
pop
jb
pop
lods
hlt
out
push
incl
fcoml
mov
jo
or
sti
scas
xor
iret
fdivs
add
icebp
es
pop
mov
pop
enter
fdivrl
testl
iret
shrb
testl
imul
xor
xchg
popa
xchg
sahf
shll
jnp
aam
sbb
push
mov
or
inc
ret
mov
incb
add
mov
shlb
pop
pushw
mov
push
popa
shlb
cwtl
mov
in
arpl
push
arpl
xchg
mov
scas
cmp
inc
repz
jb
mov
popf
jl
out
outsb
pop
and
mov
insl
or
int3
int3
divb
loopne
sbb
pop
psrad
and
adc
sbb
sub
lahf
pushf
ret
hlt
cmpsb
insl
cmp
cmp
lret
clc
push
es
or
or
add
mov
and
cs
jg
stos
subb
ds
mov
movsb
mov
mov
outsb
push
rcl
cmp
inc
and
inc
scas
push
mov
stos
cwtl
insl
pop
mov
dec
leave
pop
push
icebp
mov
dec
mov
push
outsb
out
xchg
pop
inc
sbbb
push
and
ds
dec
xor
enter
lcall
pop
insl
call
pushf
dec
cmp
xchg
adc
xor
js
ret
jnp
mov
pop
mov
pusha
mov
xchg
pop
or
repz
cmp
jne
xchg
cli
mov
jle
addr16
cmpsb
or
jecxz
sub
addl
fsubrl
sti
pop
sti
sub
adc
scas
scas
mov
out
icebp
dec
enter
aaa
mov
gs
sbb
mov
jmp
int3
sub
cli
jno
imul
pop
ja
add
pop
push
mov
mov
pop
jbe
shl
xor
in
xchg
jb
jecxz
xor
xchg
ss
mov
push
lea
pop
dec
cmp
sub
push
addb
movsl
sbb
mov
adc
lcall
idivl
outsl
mov
cltd
mov
adc
or
sbb
mov
mov
je
cmpl
cmp
and
repz
aas
js
roll
nop
icebp
aaa
adc
nop
out
rorl
bound
jmp
in
xchg
mov
int
jmp
push
fnstenv
mov
xchg
adc
sbb
ds
cmp
or
pop
adc
leave
mov
pop
xor
fs
sahf
fadd
lret
out
fnstsw
sbb
cmp
popf
jmp
push
leave
cli
int
or
ret
shll
stos
loope
dec
stos
test
pusha
cmp
push
xchg
jg
popa
mov
idiv
ljmp
ficomps
mov
xor
xchg
pop
jp
xchg
mov
mov
push
sub
mov
adc
mov
mov
repz
adc
push
or
imul
popa
adc
ror
push
arpl
lahf
lock
test
out
outsl
xchg
movsl
cmp
fabs
inc
test
out
leave
or
inc
jg
push
jns
loopne
pop
dec
mov
pop
daa
pop
movsl
pop
not
arpl
arpl
arpl
adc
je
jo
inc
je
jns
xchg
lret
adc
pusha
movsl
dec
sti
or
std
cmpsb
repz
mov
mov
stc
popa
jne
inc
inc
into
jle
pop
pop
int3
jb
or
subb
and
lret
aaa
xchg
fsubs
jmp
xlat
inc
popa
loope
insl
lds
inc
clc
notl
push
xchg
push
mov
arpl
push
pusha
lock
xor
nop
jnp
dec
dec
adc
test
outsl
into
cmpsb
daa
push
fwait
into
shlb
mov
in
mov
sbb
gs
add
adc
and
enter
insb
jge
jae
out
pop
and
pop
aam
repz
inc
sti
mov
cmp
daa
ljmp
aas
fstpl
je
push
mov
sbb
aad
add
cmp
scas
into
inc
mov
pusha
rol
push
jno
adc
dec
mov
mov
daa
movsl
jp
mov
sub
sub
dec
hlt
fstps
or
jmp
movsb
jp
aam
sbb
mov
and
das
ss
and
sub
mov
mov
sub
xchg
xorb
je
mov
cmpsl
scas
out
int3
inc
xchg
bound
data16
js
inc
stos
lock
add
mov
sub
inc
out
repnz
xchg
cs
or
aaa
cmovs
lods
inc
mov
mov
insl
inc
ret
daa
ret
jb
cmp
fwait
sbb
push
aas
push
pop
push
xor
fistps
jl
dec
cwtl
addr16
rcll
icebp
adc
jb
repz
jecxz
mov
lock
push
push
pushf
mov
movsl
cmp
arpl
idivl
sub
leave
leave
cmpsb
jae
jl
xchg
outsl
sub
sub
ret
ds
adc
leave
les
xchg
stos
mov
jmp
and
jbe
xchg
xor
into
in
es
inc
lods
daa
pop
arpl
subl
aas
cmpsl
imul
push
inc
mov
sub
mov
cs
daa
dec
cmpsl
inc
enter
cmp
sub
push
sarb
xor
xchg
rcll
stos
adc
test
pop
pop
sub
std
jnp
inc
adc
push
pop
mov
es
xor
loop
test
nop
and
mov
out
sub
cs
mov
jb
mov
dec
jg
pop
or
pop
dec
fsubl
sbb
test
xchg
jno,pt
jmp
sbb
clc
icebp
sarl
stos
jb
pop
out
mov
mov
pop
jmp
stc
movsl
sub
pop
push
ret
mov
test
xor
inc
lea
xlat
xchg
inc
sub
or
add
insl
cs
test
inc
cwtl
pushf
jle
lods
inc
push
es
cmpsb
jp
scas
push
and
insb
andb
sub
xchg
sbb
inc
and
fdivrs
xor
or
lock
lock
push
cltd
jno
dec
push
inc
push
sbb
nop
push
popa
push
imul
ja
cmpsl
scas
stos
hlt
adc
loopne
xor
cmp
das
push
daa
aam
xor
je
mov
movsl
fsubs
mov
sub
loop
sbb
cmpsl
or
mov
adc
rcl
mov
mov
jbe
mov
add
mov
sub
lds
leave
xchg
xor
inc
push
xchg
ja
lds
cs
in
cmpsb
fiadds
sub
outsl
sbb
adc
imul
push
ja
and
cmp
shll
icebp
and
das
sub
cmp
in
mov
pop
xchg
jno
pop
mov
inc
pop
mov
repz
daa
add
inc
movsb
xchg
cmp
es
mov
xorl
repnz
faddl
xchg
icebp
leave
adc
addr16
xchg
mov
fimull
mov
shrl
xchg
mov
nop
jge
jb
cmp
insb
push
xor
shrb
sbb
mov
rcrb
cmp
sbb
inc
mov
mov
out
cmpsb
push
xor
std
aad
and
shll
mov
repz
push
popf
popa
scas
pop
push
pop
pop
mov
lea
pop
push
xor
mov
xor
movsb
pop
cmpl
cmpsb
arpl
push
scas
or
arpl
scas
call
orl
pop
fstpl
lret
mov
mov
fs
loopne
jge
pop
data16
cmp
or
or
mov
sub
fnstcw
mov
or
inc
in
movl
sti
test
pushf
push
or
mov
lcall
arpl
inc
mov
mov
sbb
mov
xlat
sbb
sub
lea
aam
mov
adc
out
lock
shlb
dec
cmp
lcall
loopne
insb
iret
iret
mov
ss
mov
lods
add
addr16
xlat
cmp
jle
decb
sbb
pop
into
les
xor
imul
lret
pop
fs
mov
sbb
mov
sbb
movsb
sub
adc
jmp
cmp
inc
mov
push
mov
cmpsb
inc
stos
adc
dec
fists
aaa
sti
mov
pop
andl
loop
mov
and
cmpsb
addr16
xchg
cli
subps
adc
xor
shr
xchg
dec
lret
mov
sub
mov
aaa
jns
mov
popa
mov
fwait
or
out
adc
addr16
and
xor
cltd
jo
fbld
mov
xchg
pop
or
cs
mov
and
stos
jecxz
jbe
adc
repz
data16
shlb
test
cltd
dec
inc
push
jae
and
movsl
das
nop
pop
adc
jmp
inc
idivb
adc
pop
jmp
rcr
lods
sub
cmp
pop
jge
pop
call
jle
add
sub
jne
imul
dec
aad
dec
pop
pop
pusha
jbe
push
jp
adc
stos
repnz
std
addb
lcall
cmc
nop
js
sub
adc
out
mov
mov
repz
in
aaa
fsubrs
push
roll
aas
jecxz
sbb
mov
scas
scas
sub
cmpsl
movsl
enter
movsl
sub
clc
push
push
or
fsts
dec
sbb
fbld
dec
add
ds
out
hlt
iret
test
xor
nop
sub
inc
lahf
clc
in
loop
aas
xor
fiaddl
xor
setle
fiaddl
and
std
cs
jb
shll
pop
int3
push
cli
sub
jle
mov
mov
cmp
mov
int
insl
hlt
xchg
inc
add
pop
std
mov
jge
mov
rolb
jns
fisubl
cmpl
rolb
dec
insb
aad
cmc
adc
mov
popf
popf
or
inc
jl
cmc
ja
shr
or
dec
mov
shrb
xlat
adcb
xor
push
dec
pop
popa
dec
jmp
push
into
adc
inc
bound
jmp
aad
movsl
push
test
dec
or
xor
jl
xchg
xlat
divps
ret
push
mov
sub
or
mov
adcl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
sbb
movzwl
sbb
mov
movb
and
lea
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jge
jmp
call
cmpl
jb
mov
xor
movl
inc
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
mov
push
orl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
addl
add
sbbl
movzwl
andl
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jb
mov
movl
movzwl
xor
add
movl
mov
mov
mov
inc
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
jmp
mov
xlat
and
mov
js
movsb
mov
jl
inc
pop
addl
mov
mov
inc
adc
icebp
or
test
sbb
imul
fs
mov
jle
outsb
adc
xor
ja
es
inc
imul
xchg
sbb
mov
jns
jae,pt
jne
xor
mov
pop
sbb
pop
outsb
sub
and
or
fcmovne
add
cmpsl
xchg
jg
shlb
shll
mov
inc
xchg
xorb
adc
imul
sub
push
fwait
dec
out
mov
or
sub
jmp
or
or
aad
fildll
mov
lods
aas
mov
jmp
scas
aaa
out
lds
push
popf
pop
test
mov
xchg
ss
lods
ds
daa
mov
sarl
or
xchg
mov
rcrb
jno
in
xlat
lahf
call
push
cmp
mov
out
inc
mov
mov
sub
pop
stos
xor
xor
outsb
rol
jns
outsb
inc
mov
aam
jb
mov
push
mov
sahf
hlt
icebp
mov
jl
adc
pushf
in
xchg
pop
test
shrb
mov
rcrl
sahf
imul
shl
inc
dec
fs
cmpsb
orb
int3
mov
cmp
aam
clc
xchg
add
mov
sub
nop
sbb
pop
sbb
mov
mov
call
lret
repnz
push
or
pop
cmc
sub
nop
xor
jbe
cmp
outsl
push
ret
push
sbb
pushf
mov
sub
cmp
test
sbb
leave
xchg
or
outsl
jne
push
mov
fists
mov
push
pop
inc
xchg
test
aaa
loopne
push
cmp
imul
pop
push
sbb
dec
push
inc
mov
enter
ss
loop
lods
adc
xchg
aad
es
loope
scas
int
dec
std
adc
mov
loop
jmp
pop
sub
pop
mov
hlt
adc
jae
stc
in
xorl
jb,pt
sbb
repnz
pop
adc
lahf
push
sub
enter
scas
push
insl
loope
mov
and
xchg
pop
mov
in
ljmp
out
mov
ret
sub
push
mov
cmpsb
es
sub
bound
movsl
jecxz
and
adc
and
hlt
pop
or
fstp
mov
and
bound
nop
and
cmp
stos
xchg
fistpll
mov
jl
mov
out
ret
test
mov
dec
xlat
aas
les
and
sti
aad
cmp
adc
jno
jmp
mulb
repz
jle
mov
sbb
xor
bnd
xor
jl
jmp
ljmp
into
shll
lds
sub
addr16
adc
jbe
pusha
mov
notb
jg
pop
sar
mov
mov
mov
orl
cld
int
fidivrl
arpl
orb
addr16
push
les
mov
sub
cmp
cli
bound
and
inc
sahf
jae
adc
dec
cmpsb
mov
lods
mov
aaa
add
xchg
xchg
repnz
push
cmpsb
data16
pop
popf
sbb
push
ja
fcoml
mov
adc
aas
cltd
mov
xchg
scas
add
fldl
mov
jmp
or
test
fcoms
add
mov
push
adc
inc
jae
xchg
push
jg
ret
fsubs
sbb
mov
movmskps
or
inc
addr16
and
aas
cmp
xor
push
cmp
lcall
sahf
pop
call
hlt
sub
add
and
arpl
cmpsl
sbbb
inc
and
iret
stos
push
and
dec
addr16
mov
push
flds
cld
sub
iret
dec
pop
movsl
sbbb
add
xchg
arpl
mov
pop
dec
push
pop
dec
and
inc
dec
cmp
sbb
pop
push
addr16
nop
enter
ss
inc
outsb
mov
adc
jns
push
hlt
cld
mov
sahf
adc
test
push
cmp
xchg
popf
mov
ret
mov
aas
xchg
je
lea
aas
dec
mov
hlt
cmp
jmp
push
xchg
cli
int
push
sbb
inc
cli
add
test
pop
divb
mov
adc
xor
sub
imul
lds
cmp
mov
int3
int3
inc
iret
decl
out
rcl
out
pop
sahf
xor
dec
dec
pop
decl
add
jbe
jae
out
sahf
xlat
push
or
sub
decb
dec
aaa
mov
sub
inc
mov
fcmovnbe
enter
int
and
iret
cwtl
outsb
xor
push
shr
test
cmpsb
icebp
mov
sub
daa
cmc
pusha
xchg
jg
les
mov
fisubrl
push
and
pop
mov
loop
push
jge
pop
mov
js
scas
pop
in
mov
mov
jae
std
int
lret
mov
xchg
in
call
cltd
jle
mov
inc
repnz
inc
test
mov
cmp
mov
push
fidivl
and
fcmovb
js
adc
clc
jecxz
add
aaa
inc
inc
dec
test
in
or
dec
adc
sarb
pop
cmpb
xor
aad
jns
arpl
nop
lahf
mov
loop
cmp
repnz
mov
sub
inc
dec
pop
dec
xor
sahf
mov
addr16
jb
sbb
ffreep
in
fmull
mov
jnp
and
or
rorl
mov
jb
or
test
mov
rcl
iret
sub
jecxz
push
std
addl
pop
mov
add
push
mov
decl
mov
inc
out
fdivl
scas
jbe
imul
inc
inc
xor
loopne
xchg
into
sbb
stc
ljmp
xchg
push
orb
pop
lea
and
pushf
mov
inc
mull
daa
lods
xchg
out
jecxz
pop
cwtl
mov
fimull
out
popf
xchg
imul
cmc
push
das
inc
mov
push
pushf
inc
sub
sub
fstps
xchg
cmpsb
mov
inc
pop
xchg
push
ss
dec
push
dec
xchg
sub
and
rcll
test
iret
rclb
loopne
mulb
pop
sbb
jmp
outsl
mov
je
lahf
xchg
sub
adc
mov
mov
into
mov
xor
jbe
sbb
jmp
pop
push
lcall
cmpb
jo
adc
cli
data16
cmp
out
sbb
mov
add
push
jbe
mov
out
gs
mov
xchg
adc
das
or
mov
adc
movsl
jl
sti
mov
xchg
or
mov
push
mov
lcall
sbb
sub
mov
popf
jecxz
sub
cmp
mov
data16
repnz
movsb
jl
insb
stos
jo
call
ficoml
pop
ficomps
sbb
adc
repz
test
jp
jbe
and
loopne
xchg
xor
lahf
sub
push
test
testb
mov
pop
cmp
add
jp
dec
dec
nop
rol
pop
clc
ljmp
mov
cs
rcr
cmpsl
repz
loopne
shll
mov
ret
out
pop
pop
push
std
enter
shl
and
sbb
sub
rcll
mov
loop
jbe
pop
cmc
or
movsl
add
pop
stos
push
dec
xor
fcomps
sbb
pop
jecxz
sti
imul
xchg
mov
hlt
pop
dec
sub
push
inc
dec
or
pop
outsb
push
out
cs
in
cli
cmp
xchg
ljmp
insl
imul
sbb
pushf
push
and
inc
add
test
ret
insb
shll
pop
mov
xchg
push
push
pop
xor
and
mov
or
subl
sub
jge
nop
mov
adc
xchg
or
mov
arpl
test
mov
mov
sub
cmpsb
aas
mov
ja
loopne
pop
clc
mov
repnz
mov
inc
inc
int3
mov
mov
xor
pop
mov
jb
and
push
and
das
pop
mov
mov
push
mov
int
cltd
jg
mov
int3
inc
stc
mov
or
mov
out
repz
daa
in
mov
outsl
rorl
xor
xchg
sub
popa
or
mov
out
aam
cwtl
push
or
sbb
sub
out
push
andl
cwtl
stc
or
ljmp
push
cld
jle
push
ss
ror
lea
pop
sarb
adc
leave
mov
ds
inc
cmp
push
fcoms
aas
xor
xchg
xor
pavgb
stos
xchg
movsb
sbb
stc
fwait
inc
ret
stos
inc
lock
xchg
test
or
pop
mov
cwtl
sarb
in
sbb
inc
out
push
dec
neg
into
add
and
outsl
sbb
jmp
mov
push
fwait
mov
pop
clc
jle
dec
gs
adc
jmp
outsb
popf
xor
ficompl
rcrl
push
mov
lea
in
jmp
pop
adc
out
mov
xor
push
lret
add
clc
fidivrs
mov
inc
jns
fimuls
rcr
jb
out
jg
sahf
mov
jl
dec
mov
pop
lods
sub
ljmp
aad
mov
ds
mov
cwtl
bound
outsb
fldcw
out
ret
xlat
out
repnz
inc
sub
jl
lret
shl
sbb
fwait
mov
lds
lds
mov
pop
sbb
icebp
lods
mov
push
jmp
jne
and
sub
pop
int3
and
mov
push
shrb
aad
pop
ja
inc
test
sub
outsl
xchg
xchg
or
xchg
xor
add
xchg
int
sbb
cmp
or
push
outsl
jle
popf
mov
outsb
call
leave
cmp
xchg
lcall
xchg
jae
imul
gs
sbb
iret
pop
cli
je
mov
outsl
out
shll
cmpsl
ja
jae
and
pop
aam
mov
inc
mov
cwtl
pop
inc
inc
in
aas
xor
jb
sub
outsl
adc
popf
adc
fwait
xor
dec
jge
enter
out
stc
fcmovne
dec
leave
mov
and
dec
in
adc
imull
test
or
dec
repnz
lea
lds
mov
add
lahf
sti
push
mov
pop
cmp
flds
addr16
and
rorl
arpl
jo
sub
jle
xor
pop
sbb
mov
or
cmp
dec
subb
bound
testl
xchg
inc
xorl
addr16
rclb
in
stos
adc
mov
jns
popf
repnz
or
mov
mov
add
and
mov
inc
das
jle
movsb
dec
jge
cwtl
push
ret
mov
add
cmc
inc
mov
int3
push
xchg
arpl
adc
xchg
subb
inc
loopne
movsb
mov
int3
mov
fisubl
pop
push
addr16
add
sbb
lahf
ja
adc
cmc
xchg
push
testl
xor
dec
mov
iret
iret
pop
ljmp
fistpl
xchg
add
lcall
mov
and
stos
addr16
mov
fnstcw
cltd
jg
cmpsb
arpl
sub
and
push
push
bound
mov
aam
fsubs
les
pop
jbe
jp
testb
pop
ja
inc
xchg
mov
je
add
push
jmp
xchg
out
dec
sbb
pop
repnz
out
cmpsl
dec
lret
in
cmpb
and
test
out
das
xchg
adc
out
inc
lock
rol
push
mov
loop
mov
inc
or
lret
pop
or
fbld
ret
jns
lret
dec
rcl
out
jae
or
add
mov
jno
cmp
cltd
dec
sub
addl
and
push
and
sub
psrld
xchg
cmc
and
add
and
mov
ret
shrb
xchg
mov
mov
sahf
jecxz
fsubl
dec
sti
cmpsb
xchg
popf
ds
inc
mov
leave
push
push
adcl
sub
xchg
sarb
or
push
insb
ret
inc
mov
jle
out
cmpsl
ljmp
sbb
lcall
pop
clc
adcl
les
add
pop
daa
pop
cmp
in
push
cmp
and
push
stos
call
icebp
shr
xor
mov
push
imul
and
push
xchg
scas
enter
enter
or
sahf
shrb
ljmp
lea
fadd
adc
xchg
mov
xchg
xor
sbbl
mov
test
lock
sub
daa
xchg
imul
sub
push
adc
les
shll
pop
sub
mov
cmp
stos
bound
fdivrs
pop
mov
pop
std
in
fistpl
pushf
loopne
cmpsb
addr16
rcrb
add
cmp
aam
into
mov
lods
dec
test
jecxz
pusha
or
int
xchg
stos
testl
jp
js
and
dec
rcrb
fs
shlb
and
cmc
imul
loopne
or
into
fidivl
fadds
push
jmp
fs
push
cmpsb
xchg
cld
loop
repz
push
jo
mov
cltd
test
jmp
xor
mov
xchg
cmp
ret
inc
xor
and
test
ja
jbe
and
aad
sbb
popf
push
jecxz
loop
dec
pop
push
xchg
in
aad
xor
jg
mov
por
xchg
sbb
and
movsb
and
clc
and
jb
out
xor
orb
and
nop
jg
clc
mov
stc
lret
inc
sub
imul
out
push
inc
mov
mov
scas
arpl
push
fnstsw
add
mov
pop
mov
inc
inc
mov
insl
and
lret
push
int3
pop
stos
adc
adc
cmpsb
int3
cs
mov
fldcw
stc
xlat
inc
daa
repnz
push
aaa
mov
loope
sbb
lret
or
inc
fldcw
cld
ss
xor
stos
xor
dec
jge
repnz
stc
out
dec
or
iret
cmp
push
push
jne
jno
jmp
pop
pop
sub
jo
fs
xor
sub
push
les
dec
push
lods
lret
push
and
xor
aam
and
push
data16
adc
fcoms
push
ds
scas
gs
add
vshufpd
mov
rdtsc
mov
je
inc
push
int3
xchg
mov
test
es
fstps
daa
mov
mov
pop
xchg
iret
lock
sbb
sub
outsl
repz
sub
mov
mov
jge
mov
test
inc
inc
mov
repz
xchg
cmp
lods
ret
mov
dec
add
arpl
lods
sarb
xor
mov
sbbb
jae
cli
mov
insb
pop
add
add
jne
jne
popa
cmovl
xor
mov
add
in
or
inc
bound
mov
scas
mov
or
stos
sub
sub
and
jns
icebp
aas
mov
sti
push
jg
insl
out
push
mov
add
or
enter
dec
mov
lods
andb
aad
int3
and
movsb
inc
add
leave
push
add
cmpl
adc
cmpsb
xorl
pusha
mov
lret
and
aam
out
rcll
inc
inc
sub
jns
mov
push
inc
push
push
movsl
daa
loopne
push
andl
cmp
or
push
test
shrl
xor
stos
mov
jno
jmp
add
ss
xchg
adc
push
xchg
and
jns
and
add
and
fimuls
jne
xor
push
aad
insb
or
shlb
das
mov
cmpsb
dec
adc
lcall
loopne
jmp
aaa
aaa
iret
add
sub
shr
mov
arpl
pop
arpl
dec
cmp
scas
mov
cmpsl
pushf
ret
jnp
dec
sti
fidivrl
and
dec
mov
fdivrs
aam
inc
aaa
out
repnz
lock
sub
loop
repz
and
out
mov
movsb
enter
pop
mul
rorl
enter
pop
rclb
cmp
push
stos
int
push
loopne
outsb
lock
pop
stc
push
cmc
out
stos
out
sub
inc
mov
mov
test
sbb
daa
in
sub
andb
cmp
pop
dec
xchg
cmpb
mov
mov
lods
push
pop
mov
outsb
push
out
mov
jecxz
stc
stos
mov
stos
insb
insl
int3
mov
leave
mov
jo
adc
lock
cli
mov
mov
inc
out
xchg
enter
stos
mov
fldt
fwait
gs
mov
lods
cli
stos
icebp
es
cmc
std
dec
aaa
adc
call
pop
and
cmc
and
xchg
nop
aaa
xor
add
dec
orl
cmpsb
lret
or
cmp
mov
inc
sbb
pop
cmp
std
js
xchg
repz
jg
aad
nop
les
adc
cmpsl
aam
mulb
jl
sti
imul
leave
rol
loope
scas
xchg
push
push
pop
cmp
aam
cltd
cmp
pop
lds
mov
add
adcb
mov
lahf
mov
push
test
fmul
sub
or
cmpsl
or
xor
cli
out
imul
inc
pop
adc
lret
mov
and
lret
push
lea
outsb
dec
jae
jl
mov
outsl
cmp
add
jno
scas
push
xchg
xor
xor
cld
push
mov
push
inc
idiv
aas
insb
test
ret
xchg
mov
mov
push
pop
sbb
loopne
fnsave
aaa
jl,pt
or
lret
adc
std
jae
fcmovbe
inc
add
pop
or
ljmp
repz
add
shrb
imul
cmovge
fildl
mov
sbbl
inc
mov
xchg
or
loope
bound
pop
lret
test
add
mov
adc
aad
mov
fdiv
inc
pop
iret
lahf
xchg
cmp
xor
dec
push
mov
shlb
cmpb
push
add
lds
pushf
inc
frstor
insl
es
stos
sbb
sub
inc
xor
push
sti
xor
xchg
jo
dec
inc
popa
fcompl
imul
inc
mov
mov
repz
jae
addl
movsl
add
inc
js
pop
adc
leave
in
int
iret
xchg
ja
mov
inc
pop
gs
testb
outsb
dec
mov
pop
je
mov
lahf
mov
sub
rclb
mov
ret
iret
mov
mov
fidivs
mov
pop
jb
addl
inc
in
leave
add
or
in
pop
xchg
mov
pop
pop
xchg
roll
loope
push
lret
repnz
jnp
cmc
rcll
shrl
adc
push
and
jmp
testb
fadd
cwtl
xchg
add
jb
push
or
mov
pop
dec
mov
mov
roll
jle
out
fucomi
shl
push
or
leave
bound
in
xor
addb
in
dec
mov
test
mov
cmpsb
fcomi
mov
lods
jp
rcr
adc
repnz
mov
push
mov
pop
xor
push
gs
adc
jecxz
pop
xchg
sub
or
shll
push
mov
jae
lret
xchg
ja
xor
icebp
fs
jle
mov
ss
ret
lret
popf
and
icebp
inc
mov
lods
outsb
push
jle
loopne
mov
nop
sbb
xchg
fs
pop
xor
data16
mov
std
mov
stos
push
std
sub
xor
scas
bound
test
mov
sbb
sbb
xchg
jo
jl
adc
pop
xor
scas
jne
inc
ss
adc
sub
dec
mov
gs
jmp
and
fsubrs
mov
sbbb
xchg
movsb
mov
cmpsl
push
cwtl
xchg
push
xor
pop
jecxz
jmp
ret
bound
pusha
stc
and
ds
gs
lcall
pop
mov
sub
push
out
je
push
outsl
sub
into
push
clc
stc
cld
push
stos
cli
xor
inc
or
push
inc
testl
xchg
insl
add
sub
sbb
mov
mov
test
xor
adc
cmp
sub
jno
sarb
jge
dec
pop
adc
fidivs
lods
gs
movsl
repz
mov
inc
cmp
xchg
push
mov
jp
pop
sahf
in
cmp
sbb
lret
jle
or
fisttpl
int3
xor
enter
loopw
call
pop
add
rep
testb
jp
in
mov
out
inc
inc
add
sub
mov
inc
jp
ret
sbb
mov
in
iret
popf
insb
fcoml
icebp
fsubrs
into
sub
ret
aaa
cld
mov
aas
lret
lds
int
imul
pop
dec
lods
imul
andb
push
xchg
push
mull
inc
cmp
cmp
mov
xchg
sti
das
jnp
shr
mov
jae
dec
mov
cltd
xor
scas
push
xchg
sub
jmp
push
lahf
mov
loope
add
inc
int
out
inc
loope
test
adc
push
sti
pop
cmp
or
lret
ret
sub
loop
mov
pop
jns
aam
jge
xor
xchg
push
adc
cld
and
adc
push
data16
bnd
imul
in
mov
lret
and
xor
js
rcl
int3
imul
ret
xor
cmp
lcall
stos
out
pop
inc
pushf
imul
in
xchg
ljmp
mov
sbb
adc
mov
jbe
jns
pop
add
mov
push
cmc
ljmp
jne
imul
je
mov
add
subb
inc
stos
sbbb
pop
test
mov
and
cltd
xchg
jno
cs
repnz
jb
xchg
jns
lock
hlt
lds
add
jbe
jne
leave
push
adc
fisubs
and
nop
in
cwtl
fwait
jae
cwtl
mov
movsl
mov
push
cmp
iret
stos
inc
push
out
sub
adc
cmp
adc
ret
push
push
pusha
test
addr16
pop
xor
mov
cmp
lcall
inc
lods
sub
jno
es
cmpsl
inc
fists
jmp
lock
loop
adc
mov
mov
negb
xor
xchg
xor
std
aam
jno
test
lods
hlt
out
dec
rol
ss
jl
or
cwtl
jle
imul
sbb
and
mov
sub
or
pop
sub
orb
cwtl
imul
adcl
insl
test
movsb
add
mov
cmp
cmc
xchg
jno
scas
lods
repnz
inc
aam
pop
pop
lret
ss
inc
sub
push
push
pop
outsl
outsb
inc
mov
in
inc
mov
xor
enter
or
xchg
xor
mov
repnz
mov
fcompl
xchg
cmpsb
in
pop
ror
mov
add
ds
lahf
imul
mov
fisubrs
cmp
dec
pop
iret
or
mov
loope
fisubrs
add
outsl
sbb
sub
gs
xchg
test
stos
in
cmp
arpl
aaa
xchg
add
ja
idivb
inc
es
or
add
leave
test
xchg
shrl
mov
mov
mov
lods
sub
cmc
fidivs
loop
jecxz
data16
test
dec
xor
xor
sub
add
fs
sub
push
or
push
mov
adc
leave
mov
inc
mov
das
ljmp
and
and
lcall
in
mov
out
xchg
xor
sub
and
jmp
xchg
xor
fnstcw
lret
sbb
and
int
cmpsb
mov
mov
fwait
and
ret
jae
nop
add
hlt
mov
cmpsb
pusha
rorl
push
sar
push
leave
mov
pop
lods
sbb
cs
dec
pop
mov
leave
xchg
mov
adc
loop
int3
pushl
dec
xor
je
lock
mov
mov
add
cmc
or
mov
addr16
stos
pop
ljmp
test
or
shlb
xorl
call
in
dec
sub
repnz
mov
adc
repz
xor
sbb
xor
popa
enter
xor
bound
stos
cmp
fsubrl
idiv
xor
mov
aad
push
clc
pop
xchg
cmp
das
add
jne
aad
push
sub
pop
jb
add
add
jmp
mov
cmpsl
movsl
mov
push
add
out
inc
std
or
scas
dec
loopne
jl
icebp
jge
dec
imul
movsb
push
sbb
pop
add
and
sbb
adc
push
inc
int
or
mov
mov
jp
sahf
pop
jl
std
mov
jl
cltd
adc
sbb
sub
jmp
shlb
mov
loope
lret
jle
test
cwtl
stos
jge
dec
shlb
clc
enter
or
pusha
mov
sbb
jnp
dec
je
add
jmp
rolb
enter
mov
adc
pop
es
sub
mov
inc
mov
and
jns
aam
xor
ds
push
shlb
enter
fdivl
fwait
sbb
arpl
xchg
adc
mov
enter
jbe
cmp
mov
add
pusha
mov
mov
mov
mov
pop
and
ljmp
and
clc
imull
fsubrs
push
mov
lock
adc
mov
xchg
aad
inc
sbb
outsl
add
mov
or
cmp
lahf
xor
dec
cmp
subb
cmp
jp
xor
jle
je
mov
scas
dec
mov
jne
stos
adc
int3
ret
shll
adc
mov
inc
fimuls
int3
insb
outsl
mov
daa
loop
ja
lahf
jo
push
mov
out
mov
leave
incb
xor
pop
cld
xchg
or
imul
mov
push
nop
ss
mov
mov
sub
dec
out
ja
xchg
mov
loope
inc
std
scas
push
mov
cwtl
iret
push
sbb
and
adc
fldl
es
lea
cmp
dec
fnstcw
and
cs
inc
cmc
je
out
mov
xchg
movsl
inc
insb
aam
xlat
add
push
cmp
or
sub
les
ds
cmp
jp
or
inc
inc
push
daa
xor
mov
pop
pop
fsubr
mov
jecxz
or
outsb
push
dec
xorl
mov
incl
lret
fs
popa
stc
stc
cld
imul
mov
push
or
rcll
xchg
xor
je
ds
sub
inc
loope
rorl
orb
repz
lods
push
popf
lods
inc
aam
xlat
xchg
push
push
mov
fcomp
add
xchg
mov
jg
cmp
sti
jge
sbb
push
test
pop
inc
popf
testb
sbb
pop
cmpsl
add
add
xchg
push
or
stos
test
lcall
adc
ret
dec
lahf
mov
dec
mov
lods
loopne
lcall
dec
xchg
mov
xor
test
mov
push
xor
add
jp
jnp
xchg
ss
aaa
fadd
mov
sbb
jl
insb
rcll
push
sbb
fsts
add
or
mov
pop
loop
cmp
lds
mov
ljmp
stos
cs
movsl
or
mov
or
and
jle
cwtl
lcall
sbb
ljmp
std
push
adc
xchg
or
xchg
popf
cmp
insl
push
push
and
pusha
icebp
enter
stos
imul
pop
cwtl
dec
lock
push
xchg
mov
aas
subl
test
pop
scas
cmp
call
push
scas
pushf
cld
pop
push
out
scas
mov
aam
push
pushf
pop
leave
loop
adc
adc
push
xchg
pop
notl
repz
dec
add
pusha
adc
pop
jne
inc
mov
rorl
jmp
mov
add
int
push
in
and
cmp
jo
add
imul
in
call
sub
cs
out
in
pop
pop
mov
and
addr16
sbb
pop
hlt
xlat
add
rclb
push
mov
sbb
mov
in
jmp
xchg
or
aam
jne
mov
aas
add
daa
movsl
xor
jp
lods
dec
movsb
xor
mov
mov
fstps
push
mov
inc
int
push
dec
pop
sub
and
pusha
inc
xchg
pop
insl
outsb
les
lock
jle
cmp
push
add
jle
cltd
mov
inc
pushf
cld
fmul
lods
imul
push
std
outsb
fidivs
aaa
sub
lret
addb
and
leave
jge
add
mov
pop
ja
repnz
stos
add
inc
push
dec
adcb
sbb
jae
ja
stos
rcr
mov
js
pop
call
shll
cltd
stc
mov
hlt
adcb
cmp
mov
add
pushf
into
in
mov
inc
test
adc
inc
xor
add
inc
mov
mov
outsb
sub
mov
mov
mov
add
rclw
movsl
add
imul
xchg
mov
inc
out
mov
cmp
push
jl
movsl
jbe
sbb
push
cli
push
lret
push
addr16
adc
cwtl
hlt
jge
in
mov
mov
push
and
or
loopne
inc
xor
inc
stos
sub
bound
icebp
mov
inc
xlat
sbb
in
out
jl
popa
cmp
sti
iret
pop
rol
ret
push
fsubrs
data16
loop
dec
adc
cltd
adcl
fwait
mov
js
imull
stos
mov
daa
cmp
rorl
mov
sbb
fdivrs
addr16
test
pusha
dec
inc
loope
xor
fdivrs
scas
std
jns
lock
pop
fcompl
jle
mov
adc
jecxz
push
into
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
mov
mov
xor
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
add
mov
mov
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
xor
sub
sub
sub
sub
xor
adc
mov
adc
jmp
add
testb
and
pop
pop
in
and
inc
pop
addl
cli
fwait
xchg
mov
dec
fnstcw
push
sti
lods
mov
cmpsb
add
mov
movsl
mov
daa
xchg
xor
es
inc
add
sub
xchg
loopne
lcall
pop
sub
rol
lods
rcrb
pop
jno
jne
pop
fwait
rcll
jl
mov
into
mov
or
cmp
xchg
and
mov
pop
and
fwait
jno
jnp
inc
mov
inc
mov
or
dec
popa
jnp
dec
call
lcall
xchg
xchg
clc
ss
jno
adc
and
sbb
pop
adc
outsb
sbb
je
xor
mov
jg
xchg
imul
dec
pusha
imul
dec
out
pop
sbb
lcall
test
inc
dec
sub
lods
ret
mov
mov
mov
jbe
mov
and
in
xchg
xor
push
xor
clc
rorb
lods
pushf
stos
and
mov
leavew
pop
mov
push
mov
inc
js
dec
sti
jp
or
imulb
leave
mov
push
pop
adc
cmpsl
jg
dec
and
mov
mov
jo
xor
mov
pop
inc
cmp
int
inc
outsl
jge
rcrb
sahf
das
or
push
sbb
lds
es
movsl
mov
lods
adc
mov
jmp
cmp
nop
in
push
cmp
xchg
mov
adc
mov
popa
iret
mov
insb
leave
mov
add
adc
inc
fnstenv
pop
lret
inc
popl
cmp
sbb
xchg
and
lcall
add
jl
lods
aam
icebp
das
and
das
movsb
sbb
std
aam
cmp
repz
add
pop
xchg
dec
lcall
sahf
jnp
or
data16
and
aad
push
inc
inc
fimuls
je
addr16
push
xchg
add
xorl
lea
cmp
scas
sbb
es
popa
mov
mov
ds
pop
push
mov
cwtl
outsb
or
aas
movsl
push
xor
jmp
ja
mov
push
pop
xor
xchg
arpl
add
shrl
mov
imul
lahf
mov
ljmp
sub
lods
mov
loop
stos
sti
cmp
popf
inc
iret
stos
out
and
dec
pop
push
int
js
xchg
js
xchg
js
rorb
mov
push
lret
loopne
repz
push
scas
dec
lcall
xor
shlb
jge
xchg
pop
je
rol
mov
scas
lcall
dec
adc
ret
dec
and
cmc
sbb
out
movsb
mov
loope
fldt
imul
movsl
std
stos
push
outsl
xchg
lahf
adc
test
xor
mov
cs
dec
insb
sub
out
lret
jge
xor
aaa
lock
pop
imul
inc
pop
jg
lret
adc
jns
insl
pop
inc
jg
pop
roll
sarl
out
shrb
jae
lods
jle
mull
cltd
mov
add
not
arpl
pop
xlat
jg
mov
sbb
xor
fistpll
mov
inc
or
iret
insb
scas
push
dec
sub
push
sti
mov
iret
and
int3
push
push
adc
fldl
test
iret
jbe
inc
push
cmpsb
mov
xor
fs
mov
lock
insl
cli
mov
ret
nop
sub
pop
outsl
mov
cmp
repz
lods
adc
and
and
add
inc
loop
shlb
in
sub
push
ss
and
jno
repnz
sbb
jo
adc
shrb
add
sub
cli
mov
scas
sbb
andb
insb
sub
pop
inc
mov
in
inc
jmp
inc
dec
repnz
jns
jae
pop
xchg
sub
scas
gs
xor
mov
out
loope
mov
lret
dec
cs
inc
ror
lods
dec
mov
sbb
add
dec
jbe
pop
xor
mov
lcall
dec
pusha
int3
or
mov
add
addr16
nopl
out
sbb
adc
or
mov
jp
rorb
out
sbb
dec
fdivl
xchg
pop
or
push
inc
cmc
data16
push
insb
call
stc
sbb
aam
pop
dec
xlat
dec
cmp
dec
loopne
mov
pusha
xchg
mov
pushf
xor
sbb
sbb
sub
fsubl
xchg
lahf
pushf
pushf
xchg
out
dec
push
inc
dec
mov
cmp
or
lods
push
shl
test
add
pushf
test
stos
stos
sahf
scas
add
mov
fdivr
sbb
dec
add
push
and
pop
cmc
rcrl
xchg
in
mov
xor
rolb
in
mov
call
mov
std
loopne
repz
notb
sbb
loop
rorl
cmp
xchg
sbb
push
je
bound
ret
lea
mul
mov
or
jle
stos
mov
xchg
popf
adcb
adc
pop
xchg
sub
add
or
push
and
sbb
mov
add
sub
xor
in
cmp
popa
xchg
cltd
cmp
push
lea
aas
mov
cpuid
add
and
jno
fimull
lret
jle
xchg
and
repz
mov
or
lock
in
pop
imul
push
xchg
out
clc
jo
xchg
dec
lods
ljmp
mov
xor
sti
lret
dec
and
xchg
xlat
mov
icebp
lcall
xchg
adc
xchg
scas
sbb
fcmovnu
lcall
ja
addr16
and
jno
jnp
mov
xchg
jmp
inc
or
mov
xchg
and
xchg
das
add
push
xlat
jno
ret
jbe
and
stos
sahf
dec
sbb
xorb
xorl
les
push
push
shll
ret
or
mov
ret
cmc
inc
es
xchg
aaa
sub
mov
push
xor
mov
mov
cmp
cmp
xlat
inc
xchg
lret
jnp
mov
sub
and
out
pusha
repnz
out
sub
adc
mov
mov
lods
sbb
jmp
and
mov
data16
fstpt
cs
ffreep
sub
enter
add
and
adc
add
mov
in
or
mov
jle
mov
mov
jb
jb
jg
mov
sahf
adcb
cmpsl
mov
sbb
ret
jg
adc
xchg
test
insb
cmc
xchg
push
stos
xor
jae
sti
inc
cmp
test
push
mov
scas
jmp
sbb
adc
imul
pop
ljmp
mov
adc
xchg
or
xchg
sub
mov
sub
idivb
or
ret
add
cmpsl
xchg
sahf
fwait
lea
les
add
push
cmp
and
sti
mov
ficoml
out
stos
and
xchg
mov
std
inc
mov
jae
aam
add
dec
loop
lret
bound
add
sbb
testb
insb
sbb
sub
loopne
push
out
xlat
hlt
sti
mov
ret
jmp
inc
into
shrl
fnstcw
mov
jno
jge
rcll
mov
loope
or
pop
test
cltd
add
mov
xchg
cmp
data16
pop
movsl
jg
imul
jne
xlat
popf
inc
lock
push
les
enter
das
jmp
fsubp
dec
daa
pop
xor
leave
rcll
inc
stc
loopne
popa
lods
int3
dec
movsl
jbe
jnp
sbb
inc
lods
adc
cmp
movsl
push
jnp
adc
out
push
add
adc
pushf
jns
xor
push
fs
add
and
cmp
insb
mov
in
js
xchg
xor
jmp
aam
int
sub
iret
push
pushl
or
test
or
divb
inc
es
inc
stos
jle
int
popf
or
data16
dec
jns
push
popa
pop
cmpsb
lds
movsb
fs
fisubrl
mov
push
fs
mov
xchg
pushf
cmc
push
xchg
shlb
mov
inc
loopne
daa
mov
into
sti
or
and
mov
int3
pop
sbb
addl
sti
adc
stc
mov
push
rcrb
and
xor
dec
aas
sbb
sbb
pop
outsl
ret
lods
pop
push
sarl
inc
pop
int
gs
and
sub
mov
pop
pop
or
lahf
stos
adc
pop
add
pusha
loope
aas
sbb
lods
sbbb
mov
popf
call
daa
mov
inc
mov
and
lea
repz
push
xor
pop
data16
stos
lea
js
xor
jne
pop
jmp
or
adc
gs
arpl
aad
sub
es
fdiv
imul
int
rcrl
cmpsb
movsl
popa
out
cmp
inc
mov
clc
cmpsl
push
jmp
or
dec
lcall
dec
xchg
or
loopne
inc
adc
int3
out
jbe
shrb
sub
mov
lods
arpl
cmpsb
mov
cld
cmpsl
push
push
or
dec
out
mov
call
loope
sub
or
ret
sub
fisttps
mov
or
outsl
push
jle
inc
pop
add
xchg
pop
loop
testb
idivl
adc
scas
dec
test
xor
pusha
cmpsb
push
fs
ret
lret
lods
jl
mov
jle
sub
lret
mov
fs
inc
push
insl
xchg
xor
sub
pop
mov
sbb
jbe
inc
mov
adc
jb
pop
sub
jg
dec
fwait
sub
orb
stc
subb
idivl
aad
test
gs
pop
mov
fistpll
testl
add
push
adc
inc
test
jmp
sbb
xor
jg
sahf
loop
test
into
fiaddl
addb
jl
aam
xchg
inc
es
adc
dec
or
pop
inc
push
scas
mov
jmp
stos
dec
or
sbb
jl
cs
inc
outsb
mov
std
dec
nop
movsl
jle
rolb
stos
stc
ds
push
ret
test
xchg
ds
mov
and
dec
push
cs
pop
movb
daa
push
mov
lret
lcall
test
scas
addr16
mov
mov
shl
and
pop
test
pop
aam
cmp
jmp
out
repnz
dec
in
jl
loopne
jo
sahf
in
inc
pop
test
mov
dec
insb
ljmp
and
roll
adc
out
adc
sub
jns
or
pop
mov
out
mov
push
rorb
and
sub
rcr
ljmp
lcall
outsb
sub
pop
popf
stos
add
aas
mov
push
subl
lock
adc
aam
or
dec
or
jbe
movsl
arpl
incl
gs
dec
cs
imul
ds
out
das
add
mov
or
fcoms
int
mov
ss
add
mov
cmpsb
push
mov
ret
and
sub
sbb
sub
and
xchg
subb
mov
mov
adc
jecxz
add
jl
jb
add
xor
add
scas
mov
pop
mov
pop
jae
lods
cmc
pop
dec
fucomi
jo
outsb
cmp
inc
mov
rorb
sub
nop
test
enter
inc
mov
outsb
leave
arpl
int
jnp
inc
xor
xchg
add
mov
scas
xor
mov
repz
mov
ss
das
ja
mov
push
jno
or
push
repz
not
mov
jl
push
shlb
mov
mov
into
andb
loopne
pop
sbb
or
push
mov
dec
arpl
repz
inc
mov
push
mov
hlt
fldt
call
mov
stos
sbb
sub
sub
inc
xor
cltd
and
in
sbb
fisubs
daa
bound
in
idivl
push
inc
dec
sbb
imul
insl
cmpsl
xchg
je
mov
lods
or
mov
xchg
es
int3
mov
ss
adc
push
cli
nop
pop
xchg
lahf
pop
pop
das
adc
dec
add
neg
inc
fisubrl
int
adc
dec
fidivl
or
jbe
pop
les
mov
lea
mov
xor
flds
subl
sti
cmp
xor
aas
mul
hlt
pushf
lea
sti
jbe
dec
inc
sbb
sub
jg
js
in
adc
imul
jg
jg
out
inc
iret
inc
cwtl
xor
test
in
and
shll
cmpsb
test
mov
mov
pop
test
inc
sub
test
mov
ss
cmp
jmp
mov
xor
push
aad
loope
push
fwait
mov
sbb
cmpl
jns
out
movl
mov
mov
je
push
lds
rcr
lahf
push
adc
sub
repz
stos
aaa
adc
mov
pop
dec
rclb
rcrl
inc
mov
lret
jns
scas
inc
xchg
mov
mov
and
jbe
push
shlb
xor
cmc
repnz
test
ss
mov
test
pop
cmpsl
mov
or
mov
and
inc
xor
mov
sub
and
cs
and
cmc
sub
outsl
std
xor
jmp
mov
jge
gs
adc
inc
out
cmp
insb
jmp
or
dec
call
xchg
cmp
fnsave
jb
out
call
fisttpl
pop
dec
sti
sbb
in
aad
ret
dec
sub
jg
cmc
loope
push
aas
xchg
das
push
cltd
cwtd
fwait
add
pop
sahf
jb
inc
ds
adc
gs
pop
imul
popf
jl
decb
incl
test
pop
pop
mov
sbb
xchg
or
mov
outsl
push
dec
sbb
ss
stos
inc
aad
in
or
mov
jg
aam
imul
mov
jmp
mov
jecxz
dec
shll
jae
jnp
mov
in
ljmp
rol
leave
jnp
and
mov
mov
dec
inc
mov
flds
xor
cmp
fwait
ds
inc
xchg
pop
sbb
stos
jecxz
or
fld
mov
das
inc
lock
or
push
jnp
repz
xor
xchg
xchg
lods
sahf
leave
fcom
bound
cmc
das
sbb
pop
mov
mov
add
adc
ret
xor
je
out
dec
sbb
push
jg
jns
movsb
mov
loope
int3
es
jno
push
and
adc
hlt
dec
adc
lds
dec
mov
mov
in
aam
fsubr
xor
popw
push
outsb
sbb
data16
mov
loopne
mov
push
sub
cs
cmp
sbb
jbe
cmp
mov
mov
cmpsb
pop
out
insb
sub
adc
enter
ds
or
loopne
cmpsl
into
gs
or
push
pop
push
cltd
arpl
aaa
cmpl
shr
or
push
mov
rcll
movsl
movl
loope
test
mov
sahf
fcomps
push
dec
and
je
dec
roll
pop
test
inc
sbb
and
add
sub
lret
lcall
sbb
fldpi
popf
addr16
cltd
aad
fisubl
jp
dec
push
push
sbbb
mov
addl
mov
pop
sub
add
popa
inc
pop
push
cmp
sbb
inc
stc
fs
push
test
loopne
sbb
cmpsl
xchg
add
dec
fldenv
jge
mov
mov
push
mov
fs
jmp
inc
cmpsl
inc
inc
pop
sbb
and
aad
aas
pop
outsb
rorb
lahf
adc
lahf
xor
mov
lock
push
bnd
push
jecxz
mov
cmc
push
push
aas
inc
subb
mov
cmpsl
mov
xchg
adc
leave
jl
mov
jo
pop
popa
std
lods
subb
les
mov
dec
inc
xchg
hlt
cmp
pop
sub
mov
out
mov
lods
movsb
sub
mov
mov
sbb
cmp
mov
xor
xor
jmp
not
add
das
and
adc
sub
or
outsl
negl
adc
xor
mov
xchg
push
or
jae
aas
add
fwait
lea
mov
or
adc
hlt
out
addl
jp
jmp
stc
cmp
mov
jl
mov
movsb
iret
sbb
mov
scas
push
push
jg
insl
jg
dec
adc
lret
push
js
push
int3
cmpsl
mov
jno
iret
fcoms
or
scas
mov
mov
xchg
mov
mov
add
adcl
daa
sub
dec
pushf
cmp
aaa
mov
out
dec
pop
std
outsl
jne
into
test
outsb
xor
sti
dec
fnstenv
jb
ds
cmp
je
cmp
pop
fnstenv
add
cmp
add
adc
jb
adc
data16
lcall
lea
push
clc
and
into
je
xchg
fcoml
clc
test
enter
cltd
ror
das
inc
call
cmpsl
push
cmp
xor
lret
mov
lcall
fadd
rcrl
sub
and
xlat
cmpsb
and
test
cmpsb
test
sub
pop
out
in
addr16
insb
out
je
loopne
adc
mov
xchg
fisttps
js
and
in
mov
scas
xor
mov
out
inc
dec
fidivrl
ret
inc
cmp
lock
xchg
repnz
cmp
dec
and
pushf
sbb
mov
iret
pop
jmp
orb
cmp
leave
push
inc
lock
addb
leave
test
jo
shll
lock
popl
repnz
rcl
je
stos
sti
test
and
test
das
les
cmc
mov
cmp
int3
pop
in
movsb
mov
scas
xor
jp
mov
dec
stos
cmp
cmp
bound
enter
sahf
int
scas
jb
pop
pop
pop
lea
aas
add
xchg
xlat
xchg
out
fs
test
fcompl
inc
mov
and
push
pop
test
cmc
aam
shrb
fmull
push
mov
add
sbb
xchg
cs
imul
add
out
lods
pop
xchg
push
or
sub
mov
iret
dec
pop
push
popa
push
call
xchg
out
or
push
test
das
xchg
push
and
inc
sarb
and
xchg
es
sbb
dec
imul
or
inc
xchg
jle
mov
loop
sti
adcl
in
xor
cmpsl
push
inc
dec
out
dec
repz
fadd
push
sbb
jg
outsb
les
scas
jo
cmpsl
jge
push
stc
stos
repz
iret
xchg
inc
enter
loop
pop
sub
nop
cmpsl
jmp
data16
inc
test
and
and
test
xor
adc
mov
cwtl
hlt
push
add
ret
sbb
sbb
call
pusha
popf
xor
jp
jecxz
lahf
fildl
je
xor
mov
imul
pop
cmp
xchg
or
fistl
addl
mov
sub
jge
out
fidivrl
and
out
inc
std
push
stos
jns
lods
mov
cmp
test
fimull
pop
adc
push
lods
pop
fidivrl
std
cmc
out
testb
cmp
cmp
dec
fidivrl
push
inc
xor
push
inc
ja
sarb
pushl
sbb
adc
aam
xor
stos
sti
rolb
pop
push
dec
jae
aaa
adc
sub
adc
inc
jno
pop
loope
mov
dec
push
jbe
cmpsl
jecxz
incb
insb
movlps
dec
out
xchg
fstpl
movsl
dec
or
bswap
out
jno
xor
mov
pop
inc
xor
xlat
mov
in
and
ljmp
stc
adc
jae
cmp
hlt
pop
adc
cmp
jne
leave
xor
repz
cli
cmp
jp
pushf
xchg
xchg
pop
ret
cs
xabort
lds
xor
cltd
lods
mov
mov
pop
xchg
push
xor
fs
aas
imul
mov
xor
xor
sbbl
lea
push
mov
loopne
fisttpl
aas
test
sbb
mov
push
out
jl
and
out
cltd
adcl
fildll
and
imul
loope
cmp
daa
mov
mov
and
add
inc
imul
shll
dec
cltd
push
imul
or
je
rorb
jl
int
aad
mov
loop
shll
addr16
inc
nop
or
sub
and
bnd
pop
and
sti
and
pop
push
sti
lcall
add
lods
adc
test
out
arpl
int
add
cmp
sub
cli
sarl
cld
or
in
cltd
out
pop
imul
adc
sti
xor
fmuls
mov
ljmp
jne
or
xor
cltd
fyl2x
add
cmpsl
pop
fstpl
das
repnz
pusha
fdiv
repnz
pop
fisubl
add
pop
clc
jmp
adc
std
rcrb
sbb
stos
push
mov
push
lahf
sbb
xchg
pop
inc
mov
or
push
and
xchg
shrl
dec
lods
mov
in
cmp
pop
or
jo
lods
xchg
aas
scas
mov
mov
adc
repz
dec
movsl
movb
add
scas
xchg
popa
sahf
cmp
call
push
jg
push
pop
cmp
mov
and
push
sti
shrb
fwait
shrl
sbb
lret
fdiv
ret
jno
and
int3
dec
pop
daa
or
inc
mov
xor
or
sti
sti
and
mov
jecxz
popa
add
imul
xchg
mov
and
aaa
mov
mov
int3
sbb
orps
add
jge
mov
xlat
xchg
pusha
and
inc
nop
cs
push
test
mov
roll
subl
push
or
push
fnsave
es
pop
adc
or
shrl
mov
jecxz
aas
jmp
addr16
sub
jecxz
aam
ljmp
cmp
mov
xchg
xor
or
and
out
xlat
and
fnstenv
sbb
xchg
rcr
es
loopne
data16
sahf
negl
pop
push
fs
xchg
jbe
cmpsl
lea
adc
leave
inc
push
dec
mov
push
cltd
xor
mov
sbb
lds
inc
fisttpl
leave
lret
push
add
mov
pop
cmc
mov
inc
add
pop
movsb
ret
aad
xchg
inc
inc
insl
jg
add
cmpsl
adc
xchg
mov
inc
inc
call
aas
mov
ficompl
push
lods
int
test
mov
ja
cmp
and
scas
sarl
cmpsl
add
out
sub
dec
movsb
jne
and
cmp
push
lcall
outsb
pop
loopne
loopne
aaa
add
in
add
xor
mov
adc
pop
fscale
mov
and
jecxz
mov
int3
jg
int
and
imul
hlt
inc
ja
cmp
mov
hlt
nop
hlt
fldcw
mov
add
jmp
push
jns
sub
rcrl
push
or
adcl
shll
add
and
and
je
jnp
mov
and
sbb
sbb
adc
or
jbe
dec
xor
pop
sub
cwtl
xchg
sarl
ret
movsb
imul
adc
mov
cmp
mov
gs
push
lock
jmp
add
inc
shll
sahf
push
pop
jno
data16
inc
push
mov
push
add
mov
xchg
inc
add
insl
aas
stos
cs
or
push
jno
or
shl
or
push
jl
adc
jg
sti
in
mov
push
into
adc
pop
ljmp
scas
ja
pushf
lods
lods
push
aad
cltd
push
push
or
test
cmp
stc
and
xchg
stos
push
pop
dec
push
and
sbb
lahf
out
fwait
adc
loope
push
push
or
fidivs
testb
fwait
xchg
repnz
insl
imul
mov
sub
shll
imul
cmp
std
push
lret
cmp
pop
popa
sub
mov
daa
mov
push
nop
fimull
sarl
iret
mov
sti
dec
or
sbb
adc
lods
ljmp
sarl
xchg
inc
jge
leave
loopne
lea
or
divb
aaa
mov
mov
imul
out
jb
push
addr16
mov
xor
stos
setns
std
mov
mov
call
mov
je
das
mov
sbb
ja
loop
inc
movsl
cmp
mov
outsl
push
add
outsl
fcoml
int
mov
mov
in
dec
mov
aad
inc
dec
aaa
pop
mulb
push
push
lahf
mov
scas
jle
mov
adc
insb
sub
or
fldenv
into
mov
xor
lea
jnp
push
aam
in
data16
cwtl
mov
lock
popf
push
xchg
mov
mov
jae
loopne
push
int3
push
mov
scas
lret
and
mov
rorl
inc
push
xchg
in
pop
sahf
imul
jmp
in
jle
sarb
in
shll
cli
xchg
mov
loope
pop
dec
mov
mov
jg
lock
out
loop
mov
pop
or
sbb
pop
jmp
dec
pop
jp
push
sub
lods
add
mov
lods
ja
xor
cmpsb
enter
push
sahf
cltd
cs
cmc
mov
out
pop
push
insb
pop
jns
xchg
mov
mov
shll
cmpsl
idiv
cld
xchg
mov
xchg
mov
imul
leave
stc
fstpt
inc
or
mov
cmp
dec
and
pop
xchg
flds
jbe
mov
outsb
cs
out
xchg
dec
sarl
mov
adc
mov
add
clc
xor
out
leave
push
lea
cmc
insl
inc
cmc
xchg
imul
add
jne
adc
push
add
pop
mov
fists
jo
lahf
gs
push
into
mov
ljmp
mov
iret
add
sahf
pop
xchg
mov
mov
mov
inc
imul
mov
inc
push
fcmovne
pop
push
in
or
sub
mov
jns
and
aas
out
into
add
cmp
sub
add
cmp
fwait
rcr
mov
xchg
mov
negb
pop
pop
push
pop
lahf
sub
mov
pop
std
std
sbb
jno
pop
fstps
pusha
xchg
call
js
rcr
hlt
push
mov
cwtl
push
roll
fcmovb
out
dec
mov
mov
push
lock
out
jb
cmp
pop
dec
push
daa
enter
out
push
cmp
rcll
sbb
inc
push
sub
dec
ret
dec
je
lods
lods
or
shl
sbb
rolb
jo
adc
mov
pop
imull
push
pop
dec
aas
rcrl
mov
fstpt
jo
jb
push
sub
adc
cltd
xor
fiadds
push
adc
inc
mov
movsb
outsb
pop
push
mov
mov
jp
push
cmp
mov
lods
fisubs
add
fs
das
jmp
jl
dec
jl
sub
mov
test
xchg
inc
dec
dec
cmp
adc
push
fsub
cs
sbb
popf
mov
cmp
mov
js
in
lret
push
adc
mov
iret
cmp
jns
loopne
add
test
jno
xor
add
rcrl
subb
pop
ds
cli
out
mov
cmp
dec
movsw
jecxz
es
stos
push
ds
mov
xor
test
ljmp
ds
and
add
sbb
int
enter
cmp
mov
mov
sbb
adc
jmp
push
pushf
outsb
xchg
pop
fs
xor
test
adc
lds
pusha
mov
mov
push
fisttpll
mov
loop
je
xchg
aaa
in
pop
ss
and
inc
add
popf
enter
movsb
lds
cmp
insb
mov
xor
mov
pushf
jbe
xchg
cltd
ds
inc
adcl
cltd
and
mov
adc
mov
pop
dec
mov
mov
int3
and
add
jp
aas
loop
lods
ret
in
sbb
cltd
arpl
or
orl
mov
jb
add
or
pop
mov
sub
ss
pop
cmp
scas
test
jb
jle
andl
testl
mov
test
or
test
popa
sub
add
pop
into
push
aad
cmpsb
cs
gs
les
stos
lea
pop
jo
subl
sub
mov
or
adc
lock
push
add
out
das
popf
push
jl
scas
adc
fwait
xchg
adc
addl
xchg
cwtl
adc
test
into
xor
pop
fbstp
pop
in
mov
rcrl
out
in
jbe
pop
lahf
es
sub
xchg
outsb
or
lahf
inc
jmp
xor
and
or
call
into
xchg
push
rcrb
popf
stos
in
mov
push
hlt
lods
and
shll
mov
pop
or
cmp
mov
jl,pt
scas
jne
sub
mov
cs
xchg
paddd
dec
imul
outsb
pop
cli
pusha
push
push
lahf
and
test
xchg
push
ret
ficompl
clc
fcoms
outsb
aad
enter
repz
mul
daa
jnp
repnz
fnstsw
js
sbb
jb
mov
cmp
or
sahf
fstpl
or
cmp
sbb
xor
jmp
cli
xchg
test
movsl
js
scas
or
dec
test
out
pushf
outsl
ret
add
xlat
mov
sub
aaa
testl
lea
inc
in
int3
ret
pop
daa
fbstp
push
lcall
subl
mov
inc
ja
loopne
arpl
shll
outsb
mov
or
test
push
stos
add
push
scas
mov
xlat
sti
jg
mul
xchg
mov
loope
arpl
add
lock
and
jle
in
push
ljmp
adc
loope
cwtl
and
lods
fistps
fnstenv
push
or
adc
mov
subl
add
imul
sbb
mov
orl
mov
sub
mov
add
orl
or
mov
mov
sbb
mov
movzwl
sub
mov
xor
mov
adcl
add
sbbl
xor
or
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
jmp
xchg
jmp
addl
mov
jl
inc
pop
addl
repnz
cmpl
push
rcll
loope
push
jbe
xor
jae
loopne
inc
ss
jl
fidivs
mov
jmp
rcl
push
aaa
mov
adc
test
cltd
sbb
xchg
xor
sbb
lock
call
insb
sti
imul
lods
jle
add
bound
mov
mov
xchg
stc
jle
dec
xchg
push
lods
inc
lahf
std
fiadds
gs
add
mov
pop
lea
pop
jmp
or
cmc
push
and
mov
cmp
repz
cmp
jns
fidivl
in
cmp
sbb
sbb
lock
fdivs
into
jnp
test
mov
add
addb
push
nop
push
rcrl
test
shrl
scas
xchg
nop
loop
imul
lcall
leave
mov
jl
jne
scas
fbstp
flds
push
popa
shlb
sub
ljmp
xchg
lds
sub
pusha
mov
xchg
jmp
les
pop
fwait
sti
push
negl
dec
adc
adcl
xchg
loopne
std
popf
out
lahf
add
sub
fcomp
mov
shr
test
ret
stc
sub
aad
mov
push
push
xchg
jo
out
ret
mov
int3
cltd
bound
fsts
fwait
nop
out
xlat
adc
daa
sbb
aaa
add
xchg
sbb
pushf
or
in
popf
push
mov
in
mov
sbb
or
jg
andb
push
and
aas
push
das
pop
cmp
xchg
inc
adc
mov
jmp
jmp
xchg
lret
jo
jge
or
xchg
lock
cmpsl
sahf
mov
aas
jecxz
repz
in
or
dec
or
xlat
xchg
les
jb
cmp
xchg
js
fimull
pop
outsl
xchg
fisubl
jp
jae
adc
imul
mov
pop
cmp
cmp
popf
push
subl
pop
arpl
je
or
sti
repnz
jns
sub
fst
and
or
and
jmp
dec
ret
test
mov
xor
and
fs
out
xor
pop
xchg
sbb
pop
into
imul
in
gs
mov
inc
in
inc
testb
lds
into
or
iret
dec
xor
xchg
aas
sub
and
fldl
gs
push
lods
fists
cmc
mov
xchg
pop
das
inc
add
rclb
iret
and
mov
mov
or
out
incl
movsl
pop
sbb
loop
lahf
nop
and
xchg
mov
shrb
leave
data16
inc
fwait
mov
dec
and
jne
bound
dec
sub
out
mov
mov
xor
pusha
lahf
nop
int3
push
js
into
in
push
xor
xor
or
push
xor
jno
leave
fcomps
add
out
fdivrp
stc
dec
mov
dec
add
out
lahf
in
stc
rcll
mov
and
mov
jo
xor
xor
pop
sbb
imul
out
lret
sbb
xchg
popl
jl
lret
insb
fwait
sbb
pop
push
inc
add
push
xor
stos
and
stc
pop
sub
je
insl
out
scas
sub
hlt
rclb
and
adc
sub
lods
je
adc
shrb
sbb
push
fimull
mov
call
call
cmp
push
add
xchg
mov
sbb
ja
xor
adc
loope
rdtsc
mov
jle
mov
mov
imul
jb
outsl
and
sarb
sub
ret
loopne
fnstsw
add
xchg
hlt
fimuls
xchg
mov
dec
movsb
sbb
out
and
pop
out
fs
movsl
test
add
cwtl
daa
stos
cltd
adc
sbb
cmp
adc
cmpl
push
fisubrl
testl
xchg
sbb
cmc
sbb
xchg
movsl
cltd
clc
fisttpl
add
fldln2
mov
inc
jae
jmp
inc
cmpb
adc
or
das
insl
mov
push
test
clc
sbb
jle
insb
lea
dec
jg
neg
insb
loopne
add
leave
jge
mov
dec
cmp
pop
cmpsl
das
aaa
dec
adc
mov
add
je
sahf
add
inc
and
xor
iret
add
dec
jo
ret
adc
inc
clc
popf
sbb
sbb
ds
call
and
int3
jns
or
fsubs
sbb
mov
jecxz
repnz
scas
cmpsl
dec
aad
sarb
repz
stos
jp
pop
push
inc
add
sbb
push
xchg
int
mov
fidivrs
icebp
push
into
out
jbe
adc
push
hlt
add
push
scas
and
adc
icebp
imul
rorl
adc
enter
cld
leave
arpl
sub
sbb
cmp
nop
leave
in
shr
jmp
xchg
push
push
fwait
sub
or
jge
xchg
stc
ja
cld
inc
stos
mov
mov
sarl
xchg
fidivrs
mov
movsl
shrl
add
xor
sub
mov
cli
push
mov
imul
mov
pop
sti
mov
loope
mov
mov
dec
dec
dec
sbb
les
sbb
rolb
or
sbb
popa
jne
push
mov
lret
pop
loop
jle
mov
andl
fisubs
adc
out
jne
push
or
pop
jne
rcl
fs
sub
jne
sub
lock
pop
push
in
in
test
lret
repz
repz
cwtl
pop
jne
jl
frstor
adcb
pop
andl
data16
cld
cmp
cmpsb
dec
aas
mov
popa
adcb
sub
shll
or
stc
inc
in
fistpl
xor
push
fs
lahf
push
ljmp
adc
leave
sbbl
add
xor
mov
pop
int
popf
into
in
mov
sub
push
xchg
int
hlt
lds
push
fld
daa
xchg
inc
out
ljmp
testb
fmull
fsubp
mov
cltd
fdivl
jns,pt
fists
cmc
arpl
lcall
lea
ja
insl
cmp
loopne
add
in
mov
adc
pop
dec
push
fsts
jl
cmp
sarb
pop
je
nop
popf
jno
xor
cmp
and
ret
loop
outsb
movsl
inc
pop
adc
je
xchg
push
test
addl
fisubrs
repz
push
cmp
inc
mov
loop
scas
xor
xchg
mov
push
mov
jmp
cmp
shr
repz
jbe
inc
ja
mov
pop
cwtl
sarl
mov
call
xchg
mov
mov
mov
fucomip
mov
cmp
jae
pushf
lds
add
lods
loopne
iret
aad
mov
mov
lret
fsubrp
aam
hlt
data16
adc
xor
dec
mov
int
cmp
test
mov
test
push
mov
mov
mov
dec
dec
push
inc
xor
xchg
sbb
fs
incl
sub
lock
pop
aam
mov
cmp
xchg
pop
loop
jle
lcall
mov
push
sahf
insl
inc
adc
in
jecxz
int
lret
in
jge
inc
hlt
xchg
adc
popa
push
mov
fnstcw
repz
mov
insb
cmc
fwait
stos
and
ficoms
es
xchg
dec
dec
xor
xchg
dec
outsl
fs
jae
xlat
fnstenv
pop
in
adc
and
add
adc
xchg
lods
cmp
cmpsl
bound
imul
adc
icebp
sbbb
sbb
xorl
notb
sub
movsl
pop
outsb
cmp
mov
push
mov
dec
cmpsb
and
mov
les
repnz
sti
dec
int
add
push
xchg
xor
and
and
mov
fistpll
loopne
sbb
sbb
mov
sbb
push
int
mov
stos
mov
aad
outsb
jp
add
fsubrp
pop
sub
pusha
fs
push
sahf
mov
or
jno
cli
cmp
pop
call
or
xchg
add
subb
jae
arpl
pop
and
pop
mov
mov
outsb
lret
shlb
mov
stos
lcall
int
int3
push
call
jle
or
sub
cmpsl
dec
mov
xor
ror
aas
xchg
dec
mov
inc
lods
mov
sub
xchg
adc
push
out
fwait
subl
cmp
or
aad
jbe
xchg
repz
jo
test
into
jl
adc
pop
dec
in
mov
sbb
loope
or
mov
jns
imul
mov
lods
push
jle
pop
iret
sbbl
int
inc
or
cmc
aam
sbb
dec
ljmp
mov
fs
mov
repz
dec
icebp
sbbb
sbb
cwtl
sub
mov
int
imul
aam
mov
mov
popa
mov
xchg
push
lods
mov
sub
lods
xor
mov
mov
mov
push
pop
imul
xor
mov
jbe
roll
mov
mov
push
push
leave
xchg
fiadds
fcmovnbe
sbb
or
mov
sub
inc
push
dec
sti
adc
cmc
dec
pop
jmp
filds
js
jo
aad
test
xor
shrb
jo
lock
jne
repnz
cmp
ss
xor
pop
fsts
push
sarb
xchg
stos
mov
jnp
cmp
in
in
or
pusha
jecxz
adc
push
outsl
das
jae
into
jb
mov
cmpsl
cmpsb
cmp
arpl
lods
inc
mov
js
push
pop
mov
cmp
xchg
mov
shll
or
mov
sti
jns
mov
sub
fbld
cmpsb
xor
dec
and
std
in
or
or
inc
pop
or
push
pop
and
shll
mov
sar
cmc
fsubp
sub
xchg
bound
xchg
jmp
push
nop
mov
aam
push
sub
or
cmp
xor
and
movsb
ja
mov
jl
sub
xlat
cwtl
adc
loop
pop
sarl
and
xchg
ljmp
xlat
cmc
aaa
add
in
pushf
nop
ja
jb
sub
testb
push
mov
add
pop
inc
jg
ds
aad
fimull
add
push
xchg
xchg
mov
bound
jl
xor
mov
outsb
and
std
imul
bound
push
loop
fnstenv
and
jnp
pusha
push
jl
jnp
stc
dec
lds
add
test
sub
sahf
movb
scas
lahf
in
rclb
xchg
mov
and
adc
dec
aam
push
dec
test
pushf
addr16
mov
pop
jp
mov
mov
adcl
pop
lret
mov
xor
inc
rcr
cltd
lock
sti
negl
ljmp
decb
out
sbb
fs
cwtl
mov
test
mov
js
ret
fdivr
inc
popf
push
add
sbb
gs
rcll
xorl
sub
cmpsb
adc
pop
sbb
daa
insl
jge
pop
jo
or
add
inc
mov
dec
cmp
add
rcl
in
mov
icebp
cmpsl
outsl
scas
imul
pop
sbb
gs
or
mov
call
sbb
mov
cmpsl
inc
ja
sbbb
add
roll
add
les
lock
std
jno
push
sub
lret
add
inc
insb
xchg
test
lcall
mov
inc
nop
movsl
ds
repnz
adc
xorb
push
pop
popf
lahf
loop
pop
push
hlt
bound
push
ret
adc
shr
pop
data16
lret
xor
int3
push
push
out
imul
xchg
xor
xchg
xor
mov
fwait
leave
or
or
inc
addl
gs
cmpsb
jp
psubsb
lahf
insb
fidivrs
pop
pusha
sbb
and
lret
pop
pop
insb
sbb
push
push
adc
xchg
flds
mov
sub
cld
mov
xchg
fists
dec
push
addb
jb
out
scas
cmp
dec
ffreep
mov
jle
out
jns
sbb
ret
push
ss
es
repnz
sbb
sbb
dec
aas
sbb
push
out
insl
test
call
and
faddp
fcoms
imul
imul
cmpl
xor
cmp
mov
xor
out
scas
cld
and
sbb
xchg
cmp
sub
pop
mov
cmp
or
ret
out
popa
xchg
js
jmp
int
test
out
addr16
xor
mov
test
sbb
mov
incl
es
mov
sbb
in
in
jns
pop
jnp
fcmovbe
cmc
sub
nop
sub
insb
pusha
push
arpl
xlat
lahf
sub
cs
xor
cmc
pushf
mov
lret
popa
sub
sbb
cmp
sub
fsubrl
cmp
cmpsb
les
lcall
aaa
imulb
mov
hlt
cmp
inc
lock
add
fmull
lock
adc
sub
dec
or
ss
push
lods
sahf
push
push
mov
add
cmpl
test
sbb
inc
jecxz
das
sub
jmp
mov
jp
sub
xor
out
ss
clc
cmp
push
xchg
mov
add
dec
sahf
sbb
int
outsl
dec
adc
mov
jg
xor
xchg
hlt
dec
pop
cld
dec
daa
repz
inc
mov
mov
jecxz
jbe
dec
je
add
nop
lar
cmp
mov
loopne
mov
mov
and
bound
dec
xor
add
loopne
dec
push
sub
call
aam
ret
mov
mov
and
loope
test
pusha
aaa
add
and
and
movsl
repnz
sbb
mov
pop
xor
add
clc
sbb
scas
jne
loop
insl
mov
movsl
cld
push
lea
sbb
cmpsb
aam
fs
push
das
out
fmuls
movsb
and
cmp
fidivl
ss
out
jne
dec
out
arpl
sbb
pop
test
es
aam
lret
xchg
imul
push
and
mov
xchg
jb
cmp
adc
cwtl
push
lcall
and
sbb
lock
jae
pop
aas
mov
cmp
xor
mov
fwait
push
xchg
out
xlat
sahf
insb
add
fsubs
xor
jne
mov
andw
lret
negb
outsl
or
fs
ja
imul
push
and
push
mov
fwait
mov
ret
loope
push
dec
xor
and
ret
jecxz
mov
pop
sahf
cmpsl
jmp
movsb
mov
inc
out
jae
pop
sbb
ret
hlt
mov
push
mov
add
in
or
xchg
sub
call
xchg
roll
clc
lcall
lcall
xchg
ret
loop
int3
call
fs
inc
mov
call
into
cmp
sub
popa
mov
mov
mov
out
mov
outsl
iret
sbb
lock
push
mov
or
lcall
or
ss
jb
and
bound
rolb
add
xor
fmul
scas
idivb
mov
cmp
mov
ficompl
sarl
movsl
xor
movsb
call
ja
sbb
xchg
loop
pop
xchg
inc
sahf
xor
dec
or
push
add
fists
add
xchg
inc
jns
je
sbb
pop
aaa
jle
data16
mov
mov
dec
xor
sbb
out
fbld
push
cmpsb
repz
jmp
jmp
enter
push
push
cmp
mov
loopne
adc
cmp
sub
daa
popf
jge
test
xchg
cli
xchg
inc
sub
in
jmp
mov
pop
flds
test
cmp
roll
mov
inc
pop
push
outsb
dec
mov
push
sahf
mov
lcall
mov
jle
mov
stos
inc
pop
jmp
pop
pop
push
jne
jne
xchg
imul
sbb
dec
and
push
xchg
jns
mov
int
loopne
test
insb
sbb
pop
cmp
xchg
ret
aaa
flds
shrb
add
mov
dec
cmc
shll
movsl
push
push
adc
js
inc
or
lretw
push
jnp
stc
sbb
daa
popf
xor
dec
hlt
faddl
daa
stc
nop
dec
adc
shlb
hlt
dec
push
xchg
inc
xor
loop
rcll
dec
push
lock
xor
icebp
xchg
adc
adc
iret
xor
test
pusha
frstpm(287
mov
xor
pop
inc
xchg
scas
xchg
ss
mov
cli
mov
push
rsm
sub
sbb
jmp
int
lret
int3
xor
sub
and
mov
repz
sbb
out
imul
add
popf
je
std
cmp
mov
aad
xchg
out
out
int
daa
gs
adc
shlb
mov
push
push
cmpsb
mov
aam
fisttps
or
jmp
xor
data16
cwtl
cmp
pop
adc
enter
pop
xchg
leave
clc
in
icebp
xchg
sub
cmpsb
pop
out
mov
xor
push
or
mov
popf
or
mov
rcl
xor
test
call
mov
scas
or
mov
fistpl
addr16
lock
jp
cmpsl
cmp
cmp
and
cmp
inc
ffree
rclb
out
out
jmp
call
movsb
adc
pop
xor
iret
clc
adc
adc
dec
les
in
lds
jg
roll
sbb
mov
lods
mul
add
cmc
incb
popa
repz
cwtl
push
es
loopne
or
into
sbbl
xchg
sbb
mov
sub
jne
push
je
call
or
mov
pushf
jp
xchg
into
scas
lods
mov
gs
fld
fwait
jmp
stc
mov
adc
iret
add
popf
jp
jns
bnd
outsl
lahf
mov
mov
jg
or
mov
ds
pop
mov
jp
sbb
fisttpl
xor
xchg
mov
mov
popa
xchg
mov
dec
sub
notl
push
add
out
frstor
cmp
rolb
mov
sub
test
aas
cmp
test
test
sbb
jmp
icebp
jmp
push
sub
in
mov
in
xchg
jno
push
subl
xchg
rorl
inc
mov
pop
je
icebp
jg
mov
dec
lret
test
es
sub
sub
xchg
imul
xchg
cmp
push
aas
push
cmp
mov
cmp
adc
mov
cmpsl
mov
cmc
lock
imul
repz
cmc
outsb
subl
repz
scas
lret
push
popf
loopne
fs
aas
shlb
lahf
out
je,pt
xchg
fidivrl
ret
cltd
mov
test
adc
iret
xchg
cli
arpl
push
xlat
mov
mov
and
and
ljmp
xor
mov
ja
test
cmp
push
mov
jno
in
fs
in
and
scas
scas
mov
imul
jno
sahf
cmp
sbb
inc
and
fimull
adc
mov
jae
pop
fs
idiv
roll
sub
jl
inc
cmp
mov
pop
adc
mov
push
mov
ret
push
leave
in
ret
push
dec
out
movsl
xor
dec
shlb
mov
rclb
orb
icebp
and
or
cmp
stos
stc
lods
xor
fbld
mov
xor
pop
test
jle
aas
cmp
decb
xchg
sbb
call
es
adc
push
aad
add
loope
and
xor
inc
cmp
iret
jo
dec
sbb
aam
lret
xor
push
ja
repz
repz
and
ljmp
into
sub
sbb
and
inc
inc
loopne
filds
xchg
cwtl
sbb
push
xchg
shll
mov
adc
jae
jecxz
pop
mov
jmp
fisubrl
loope
xchg
cltd
jge
or
imul
mov
xor
add
dec
sub
pop
add
ja
data16
fsubs
movsl
add
cs
pop
fmulp
xor
rclb
pop
pop
xorl
jbe
subb
mov
cld
popf
inc
jg
pushf
adc
out
mov
enter
push
jmp
test
insb
adc
mov
mov
mov
scas
push
aad
pop
movsb
jbe
dec
add
mov
cltd
aam
mov
stos
jecxz
adc
imulb
out
mov
jbe
in
negl
or
test
pop
in
dec
sar
dec
dec
test
inc
fucomip
cmc
jl
dec
pop
add
test
sahf
lahf
cmpsb
push
fisttpl
ss
data16
divb
push
sub
jmp
and
add
je
mov
data16
dec
lock
add
push
addb
int
push
or
scas
sub
lret
cmp
testb
inc
mov
or
jae
sbb
cwtl
jns
jno
sub
inc
add
test
fwait
inc
scas
cld
lock
std
lock
dec
add
and
in
xchg
push
jno
imul
hlt
aas
fwait
sub
dec
pop
movsb
rorl
jae
rcrb
repnz
xchg
iret
and
adc
lcall
xchg
xchg
aad
adc
sbbb
and
aam
fidivrl
out
das
mov
mov
dec
mov
xor
sbb
clc
stos
stos
mov
jns
jne
mov
fmul
rcr
fsubrs
xor
outsb
push
xor
push
jne
mov
mov
fs
xchg
cmpsl
push
insb
xor
lea
arpl
or
mov
sbb
rolb
inc
clc
data16
sub
pusha
mov
jno
cltd
inc
enter
shll
enter
sbb
xchg
ret
jo
lahf
push
dec
or
dec
int
and
jmp
sbb
sbb
insl
je
les
pop
out
push
idivb
adc
mov
cmp
movsb
xchg
insl
mov
cld
mov
outsl
jle
loope
add
gs
and
cmp
cmp
lcall
add
lock
cwtl
test
inc
jge
mov
in
mov
jnp
sbb
movsb
cli
xor
pop
fstl
jmp
das
in
int
mov
adc
jae
inc
and
push
jbe
or
cmc
aam
data16
mov
xchg
testb
mov
pop
jecxz
jae
es
mov
jmp
out
faddl
xor
jnp
add
and
in
jg
jae
dec
adc
negb
adc
icebp
ljmp
inc
clc
or
cmpb
sub
mov
mov
lcall
cli
sub
add
cmp
cmp
fs
lock
pop
icebp
mov
ss
cli
jle
xor
popa
outsl
mov
orb
sar
ret
xchg
mov
rol
inc
pushf
leave
fstl
xchg
enter
inc
dec
addr16
pop
pushf
push
jmp
not
mov
and
lock
sbb
pop
ljmp
stos
jne
push
xorl
data16
adc
sti
je
out
mov
popf
ret
jbe
dec
cmp
loopne
dec
jnp
js
mov
fbstp
rorb
test
or
adc
mov
movsl
icebp
sub
pushf
rolb
lcall
scas
push
jo
and
dec
movsb
nopl
fcoms
mov
fisubrl
cmc
dec
aad
idivb
sub
cmpsl
cltd
cmpsb
add
pop
pusha
and
stc
adc
jle
inc
sbb
pushf
push
jp
adc
adc
sbb
jp
inc
lret
xchg
xchg
cwtl
add
ljmp
cmp
sarb
mov
cltd
cli
jp
aaa
lea
xchg
rcrb
xchg
negb
adc
nop
inc
mov
xor
push
test
cmc
adc
push
dec
and
add
hlt
jne
or
cmp
addr16
fcom
lock
popf
xor
add
into
fs
aas
jecxz
or
aaa
aam
test
dec
pop
lea
aam
xor
std
test
cmc
push
dec
leave
cmp
inc
push
aad
push
fistpll
sub
xchg
push
jno
pop
jp
fmull
sbb
mov
in
aad
mov
mov
push
das
lds
push
loopne
subb
jnp
into
sub
cmp
pop
sub
dec
dec
sub
sub
push
loop
lds
outsb
pop
sbb
sub
mov
mov
dec
or
leave
add
stos
jmp
icebp
sbb
addr16
aas
add
xor
dec
adc
insl
rol
mov
addr16
jne
cmpsb
jns,pn
or
mov
and
add
ret
inc
cmpsb
mov
inc
je
mov
pop
pop
xlat
jo
test
cmp
fsubrl
xchg
pop
imul
loop
ret
sbb
cmp
xor
lods
jno
push
cmpsl
mov
cld
jp
adc
push
pop
xor
scas
sub
cmp
orb
add
stos
shr
mov
enter
cmp
sbb
rcrb
imul
and
sar
jmp
mov
push
add
pusha
cmp
les
mov
push
loopne
decb
add
shlb
popf
movsl
jne
aad
orb
loopne
mov
mov
cmp
jp
popf
call
lret
xor
cs
iret
mov
std
ss
mov
lods
jp
ds
adc
stos
sbb
jle
or
inc
movsb
popa
adc
jl
jge
pop
push
xchg
pop
jb
bound
mov
pop
mov
jge
mov
loopne
mov
loop
push
pop
jge
test
push
mov
mov
ljmp
nop
xchg
repnz
decb
fstps
sti
adc
jns
test
adc
sub
mov
mov
push
pop
sub
adc
loope
stos
ret
cltd
add
sub
pusha
and
dec
call
sahf
push
cmpb
xor
inc
out
mov
pop
pop
int
movsb
in
call
or
mov
fcomps
aaa
ret
cwtl
seta
call
sarl
jp
mov
inc
notl
arpl
mov
push
sbb
sbb
mov
mov
cmpps
enter
loopne
sti
sbb
shl
out
inc
and
jae
out
mov
mov
mov
orl
out
pop
das
lea
mov
in
fs
cmp
xorb
cli
out
mov
lret
stos
int
pop
push
nop
lock
fcomps
cmpsb
fistps
push
xchg
adc
xor
mov
or
loopne
scas
fs
add
mov
fistpll
fiadds
adc
pop
imul
pop
loopne
and
mov
add
sub
jnp
fwait
add
sub
adc
xchg
pop
dec
push
pop
ret
testb
add
aas
or
aam
lret
fistps
jae
pop
pop
adcb
pop
jmp
mov
pop
push
enter
inc
push
out
and
mov
jp
xorb
das
mov
sbb
sbb
fs
sub
mov
mov
mov
sub
bnd
inc
rcrb
in
lcall
stc
inc
xor
jne
inc
sbb
bound
pop
mov
add
or
or
out
mov
ret
mov
adc
fidivrl
or
mov
test
mov
fildll
dec
popf
ja
add
push
add
inc
dec
and
xorb
nop
xchg
add
jb
in
pop
lods
sbb
test
das
cmp
jo,pt
xchg
das
and
hlt
mov
mov
aaa
ret
aaa
cltd
push
pop
xchg
mov
or
mov
pushf
pop
mov
lcall
or
lods
ja
xor
int
mov
xchg
imul
or
test
or
cmp
pusha
mov
addl
pop
insb
adc
adc
sti
test
mov
jb
adc
js
push
cmpsb
movsl
fistpll
or
out
roll
ljmp
stos
mov
inc
pop
inc
add
clc
insl
movsb
pop
data16
mov
pop
lcall
hlt
push
sbb
xor
push
inc
push
xchg
mov
in
jo
icebp
andb
je
loope
jns
addl
mov
rol
das
cld
shlb
inc
push
xchg
out
sbb
xlat
fmulp
arpl
bound
mov
repnz
lea
shll
or
jg
std
xor
push
jg
push
inc
ds
jmp
daa
in
out
jmp
lret
cld
jbe
push
jp
lret
sub
add
pop
push
mov
pop
aas
outsb
dec
lcall
xor
movsl
mov
xor
mov
cmp
pop
or
cmp
lahf
xlat
mov
punpcklbw
int
pop
addr16
test
into
leave
ljmp
xchg
movsb
push
cwtl
cmp
inc
add
xchg
mov
sub
lods
push
sbb
dec
mov
in
icebp
ss
das
lret
jecxz
sti
outsl
icebp
cwtl
ss
int
xor
mov
push
inc
cmp
or
aas
pop
xlat
jmp
cld
and
pop
iret
imul
test
jae
sub
js
inc
fidivl
jb
mov
cmpsb
push
shrl
rol
shlb
pop
shlb
or
dec
loopne
sbb
jno
dec
cmp
pop
aas
bound
out
movsl
ret
ret
popf
jnp
fs
jge
rolb
sub
pop
and
lcall
rorl
fdivrp
testl
rorl
shlb
add
mov
mov
lea
mov
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
add
and
mov
mov
subl
xor
adcl
add
movl
jne
jmp
adc
mov
subl
sub
xor
sbbl
mov
decl
mov
xorl
mov
andl
xor
xor
addl
sub
sub
xor
mov
mov
mov
jmp
sbb
mov
sbb
mov
xor
xor
orl
sub
movzbl
sbb
mov
sub
xor
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
imul
mov
mov
mov
add
or
mov
jmp
in
in
xchg
lret
lahf
add
pop
addl
xor
sbb
mov
sub
iret
push
sub
mov
outsb
sub
sbb
enter
sahf
out
inc
mov
pop
dec
lock
and
test
sti
sbb
stc
cmc
call
scas
cmc
out
push
jle
frstor
adc
rorb
or
nop
cli
lcall
jmp
out
xchg
stos
subl
ja
lcall
dec
jp
lret
frstor
and
pop
pop
dec
pop
sbb
ss
ds
xchg
jnp
lret
cmp
sti
jmp
out
das
mulps
push
shlb
aad
cmc
cld
pop
ljmp
push
mov
pop
lods
mov
push
mov
rclb
mov
xlat
pop
cmp
pop
jmp
push
dec
outsl
jp
jmp
repz
pop
mov
inc
bound
inc
loopne
cmp
fidivrs
rolb
into
les
shr
aaa
outsl
jns
mov
dec
or
dec
mov
daa
jnp
jne
fsub
fwait
push
sbb
fidivs
mov
dec
cmp
add
sub
icebp
add
mov
mov
dec
lea
add
pop
cwtl
pop
lahf
jo
cmpsl
scas
xchg
push
loopne
outsb
outsb
mov
js
shll
shrl
addl
lods
hlt
xchg
movsl
int3
js
fstl
js
enter
push
out
decb
pop
notl
cmp
mov
xor
outsb
or
loop
adc
data16
xchg
mov
inc
ljmp
mov
inc
sub
xchg
adc
mov
cmp
xor
inc
sahf
loope
rolb
testb
sub
cmp
pop
push
aas
xchg
ficoms
pop
mov
loope
popf
xchg
bnd
cs
or
sub
faddl
sub
adcb
popf
lret
dec
adc
jge
mov
jnp
ret
and
pop
rcll
mov
aad
fsts
add
ss
enter
push
test
ss
loop
mov
pop
mov
loop
mov
cltd
lock
cmc
pop
sarl
sbb
enter
xchg
mov
incl
or
iret
cmpsl
mov
roll
fmull
push
pop
loop
lcall
pop
pop
addb
mov
pop
lahf
icebp
mov
inc
pop
lods
test
push
mov
cmp
and
mov
loopne
sbb
dec
push
inc
mov
repnz
fsubrs
in
lods
mov
sub
mov
cmp
cmp
sub
push
popl
leave
push
es
lea
jge
and
adc
outsl
movsb
test
cmc
cs
lahf
ret
sub
xchg
inc
fisubs
cmp
vrsqrt28ss
test
cs
rorb
shrl
or
das
push
outsb
xchg
fisubs
subb
dec
mov
mov
sbb
repz
mov
pop
enter
xlat
jp
mov
push
jne
push
add
jns
lds
jns
jge
mov
out
test
mov
call
les
mov
test
jl
or
clc
aad
enter
xor
fucom
dec
in
mov
fistpll
stc
push
push
aas
mov
mov
xor
data16
adcb
jno
add
jb
and
fcos
inc
mov
mov
in
fistpll
xchg
sub
sbb
add
pop
insl
push
adc
adc
sbb
adc
jmp
xchg
ror
xchg
pusha
movsl
int
xchg
mov
inc
cmp
sahf
adc
cmp
pop
arpl
mov
push
jne
jl
mov
rcl
call
scas
pop
push
mov
mov
adc
fistpll
cmp
jae
dec
cmp
pop
inc
ret
lret
adc
cmc
pop
push
cmc
aas
jg
push
lcall
adc
push
mov
shll
sub
lock
add
cmpsl
and
or
push
jmp
pop
inc
lret
sbb
outsb
mov
loop
jp
insb
out
fstl
scas
mov
jae
addr16
addr16
nop
pop
mov
icebp
or
divl
mov
sub
divl
call
ljmp
scas
jmp
pop
add
xor
adc
pop
push
fmuls
cmp
out
jl
sti
sahf
pushf
xlat
test
mov
mov
sbb
sub
pop
mov
insl
sti
aad
pop
aas
js
adc
cmp
mov
rorl
push
loope
xor
adc
jp
pusha
mov
hlt
inc
scas
push
and
push
adc
push
mov
mov
repz
mov
mov
mov
ficoms
outsl
popf
shlb
clc
repz
push
mov
mov
push
and
test
pushf
xchg
rcr
or
push
repz
es
das
xor
pop
aas
mov
dec
xchg
mov
fistpll
dec
enter
fs
fcomps
mov
leave
sbb
outsl
outsl
in
aad
add
ficoms
push
jecxz
mov
call
sbb
mov
rclb
insl
scas
aam
sub
lcall
repz
pop
sbb
cli
jecxz
or
sbb
mov
jo
inc
cmp
inc
ja
and
push
sbb
test
mov
aam
fwait
push
imul
mov
das
jp
lock
add
mov
cld
ficomps
repz
cltd
std
mov
repnz
out
adc
pop
inc
vpsubw
sbb
inc
inc
jle
mov
test
rclb
adc
pushf
mov
adc
xchg
sub
xchg
mov
or
mov
adc
popa
addl
mov
push
cmp
xchg
cmpsb
add
ret
inc
outsl
cli
ret
sbb
xchg
jp
loope
jl
push
jbe
and
addr16
into
scas
inc
xchg
dec
imul
test
jl
arpl
out
xor
push
icebp
out
push
lds
jo
loopne
mov
ljmp
ficompl
xor
lahf
cltd
rcrb
and
jne
arpl
or
push
jnp
and
pop
or
cmpsb
xchg
and
test
leave
add
xchg
out
pusha
cmp
pop
or
das
push
mov
xchg
adcl
mov
ja
inc
lock
shll
or
daa
xor
cmpsb
jge
aaa
inc
cli
imull
sub
pop
scas
pop
js
push
sub
ljmp
mov
sub
push
mov
xchg
push
pop
sub
jp
je
add
negl
enter
cmp
mov
add
nop
lock
sub
mov
in
push
dec
mov
add
rcr
lock
xchg
lret
adc
adc
pop
xor
mov
cmc
call
push
mov
mov
in
xor
mov
dec
or
mov
cltd
int3
js
or
insb
sbb
js
add
sar
cmc
pop
ja
mov
push
push
mov
cli
add
mov
jns
lea
push
in
or
cmpsb
mov
adc
sbb
jne
push
mov
jae
cs
hlt
ljmp
js
insb
aam
or
int
aam
leave
popf
insl
pop
ljmp
sbb
popf
jp
outsl
aam
push
sub
outsb
enter
or
pop
sub
das
xlat
leave
jbe
sahf
stos
bound
xchg
push
rclb
inc
jae
lahf
mov
xchg
outsb
sbbl
nop
dec
xchg
xchg
jp
inc
mov
test
push
mov
stos
arpl
and
xchg
cmp
jmp
cld
sbb
or
ljmp
dec
inc
dec
mov
dec
fistpl
mov
xchg
sbb
mov
js
mov
xchg
dec
push
clc
data16
stos
in
pop
inc
mov
lea
jns
mov
or
mov
repz
je
aam
roll
inc
cmp
test
inc
mov
sbb
mov
jmp
jne
fistl
cmp
jae
adc
jns
int3
daa
xor
ret
xchg
out
js
popf
or
add
mov
mov
inc
push
lret
repz
aaa
push
xchg
lds
inc
jle
repnz
lock
mov
lahf
xchg
push
js
cmpsb
in
xchg
leave
lret
mov
add
jp
xchg
outsb
cmp
call
lock
outsl
roll
jl
sbb
inc
fisttpll
fwait
pop
in
mov
pop
aam
lret
and
dec
test
cwtl
outsl
popa
inc
jne
aas
or
add
xor
sub
pop
cld
lods
xor
jne
scas
out
divb
mov
jae
repnz
pushl
fidivs
push
shll
bnd
loope
loope
mov
and
in
or
lahf
xchg
out
mov
pop
sbb
cmp
cmp
mov
je
andl
fld
lret
mov
xchg
mov
loop
lock
test
xor
push
loope
aaa
cwtl
rolb
sbb
sub
int3
sub
or
cld
sub
inc
inc
jecxz
in
jle
push
imull
push
mov
push
ficompl
popf
pop
fwait
fwait
pop
pop
push
cmpsl
cltd
int3
pop
mov
mov
jae
xor
in
fchs
xchg
fsubrl
jo
dec
sbb
dec
adc
xlat
loop
cltd
jns
js
stos
mov
popf
imul
mov
add
xchg
fwait
or
jle
dec
icebp
mov
push
push
fs
adc
mov
scas
xor
push
lret
xchg
out
stc
leave
adc
icebp
pop
out
pop
movsb
leave
jb
dec
rcll
sbb
xor
dec
jo
imul
sub
inc
jmp
dec
cmp
xchg
pop
pop
lds
xlat
add
adc
imul
out
jl
xor
testl
and
xchg
cmp
add
sbb
imul
out
outsl
add
xor
test
xor
push
push
out
fwait
sarb
sti
jecxz
dec
aad
outsb
pop
mov
mov
dec
fisubl
add
ficoms
rcll
cmp
pusha
repnz
sbb
push
nop
and
adc
add
sbb
or
xor
lea
pop
mov
mov
in
inc
pop
pop
mov
fadds
gs
stos
ret
xchg
aas
push
testb
outsl
divb
xchg
push
cmp
mov
cs
sub
out
popf
or
fdecstp
mov
out
gs
loope
ret
lods
test
call
ss
pop
subb
mov
and
and
and
adc
mov
imul
dec
adc
pusha
ds
pop
out
js
iret
or
cmp
ret
xor
adc
loop
or
or
mov
add
das
stos
imul
jge
xor
or
sub
adc
ret
add
xchg
pop
mov
sti
and
addr16
pop
out
sub
stos
sub
ds
bound
ja
sub
cmpsl
rcll
mov
insb
cmp
sub
xor
pop
movsl
add
xor
fcompl
xor
jg
push
mov
test
sub
pusha
jg
out
add
mov
inc
sub
ds
fistl
sub
push
test
pop
or
in
xor
add
mov
leave
rol
lock
cmpl
int
dec
jle
clc
filds
fs
lods
cmovbe
inc
ja
pop
cmpsb
jle
jb
xchg
push
jne
movsb
mov
scas
sbb
push
mov
das
xlat
mov
mov
insl
lods
lret
repnz
sbb
and
cmp
mov
ss
jle
rcrb
pop
xchg
int3
std
pushf
lds
cmp
scas
sub
lods
ljmp
sub
inc
inc
aas
rorb
mov
mov
lea
sahf
xchg
or
hlt
mov
xlat
or
out
cli
add
mov
pop
lds
sbb
dec
test
lret
sbb
xchg
enter
popf
test
sti
cmp
mov
cmp
inc
cmp
cmpsb
arpl
faddp
mov
scas
rcl
sub
cwtl
cmc
in
sub
jnp
sub
add
ret
je
xchg
repz
fsubrs
xor
dec
mov
aad
push
imul
push
cmpsl
sbb
nop
fldlg2
in
rol
je
xor
mov
jl
adc
daa
cmc
aam
sar
mov
adc
push
cmpsb
sbb
sahf
rol
jle
fisttps
rep
cld
je,pt
jp
pop
sub
cmp
add
inc
shrl
sbbl
mov
cs
pusha
popf
jl
cmpb
out
xorb
aas
mov
jecxz
popa
mov
jecxz
in
adc
roll
imul
enter
int3
ss
add
inc
sbb
add
xchg
adc
mov
dec
outsb
shll
push
or
cmpsl
pop
into
and
add
sbbb
inc
dec
and
sub
push
mov
imul
dec
stos
pop
dec
adc
loop
inc
scas
pop
or
jg
or
xor
fwait
dec
dec
mov
add
cltd
cltd
or
sub
cmp
or
jne
popa
or
inc
mov
inc
jo
jnp
daa
sub
test
pop
adc
scas
pop
out
je
adc
notl
jnp
xchg
mov
and
fcoml
mov
shr
mov
and
aas
cmp
adc
xchg
xadd
loop
rorl
fptan
in
ret
in
icebp
sub
mov
and
mov
in
out
xor
jp
xor
dec
clc
sub
xchg
or
test
ret
dec
call
adc
iret
mov
add
pop
enter
push
jg
out
faddl
into
mov
fsubrs
xchg
adc
mov
scas
in
stos
sbb
addr16
scas
mov
clc
rdtsc
dec
and
xchg
dec
rolb
sub
add
dec
push
repnz
loopne
push
fisttps
cmp
cmp
fucomi
dec
pop
pushl
in
push
lahf
sub
insl
mov
dec
push
mov
and
sub
fpatan
sub
and
ficomps
lcall
ja
xchg
popf
aad
lods
pop
adc
or
bound
enter
adc
fs
clc
adc
mov
adc
inc
aam
pusha
jmp
imul
or
stc
push
dec
rcl
in
mov
jl
jo
xor
stos
sbb
into
pop
cmp
ss
addr16
adc
pusha
jae
and
les
repz
jno
inc
out
jbe
vmovaps
fistps
cmp
cmc
sbb
jp
cmp
rolb
mov
dec
pop
pop
xor
inc
or
add
jns
fdivrl
and
mov
pop
in
icebp
adc
mov
mov
stos
loopne
add
mov
arpl
xchg
mov
data16
cmp
std
movsb
cld
adc
push
jb
je
xor
lock
pushl
mov
in
cmp
pop
add
pop
ja
fs
ret
ror
iret
mov
addb
repz
sbb
aad
mov
fldenv
jmp
int3
iret
mov
add
pop
mov
call
ret
shrb
add
xchg
sahf
loope
orl
gs
testb
popa
xchg
pop
push
test
dec
xchg
cmpsl
xor
xor
loope
push
ss
fcmovnu
imul
sbb
jl
sti
push
movsl
mov
xchg
shll
fisubrl
in
loope
cmp
mov
stc
sbb
mov
cmp
add
scas
or
repnz
nop
ja
daa
idivb
sub
sbb
aaa
clc
xchg
dec
in
sub
sbb
imul
mov
ljmp
ror
mov
push
xor
sti
xchg
nop
in
mov
sbb
and
popa
hlt
push
loop
sbb
in
jb
cld
sub
aaa
xor
adc
pop
cld
push
les
mov
push
lods
jae
sahf
loopne
push
inc
push
sbb
mov
ret
adc
das
idivb
cltd
lods
mov
and
or
jp
mov
call
nop
add
mov
dec
sbb
pop
xchg
lods
incl
lods
mov
rcll
sbb
add
pop
js
mov
dec
out
mov
mov
adc
les
aam
lahf
daa
leave
int
adcl
test
jp
loopne
ret
leave
jge
lahf
sbb
ja
daa
dec
and
cwtl
andb
jmp
jge
gs
mov
outsl
imul
dec
hlt
jmp
xchg
pushl
fstl
popf
leave
xor
loope
mov
mov
adc
pop
ret
jge
imul
adcl
cmc
pop
js
cmp
cmpsl
xor
cmc
add
add
cld
lods
mov
or
icebp
aad
mov
mov
or
cmpsl
je
das
inc
cld
and
iret
adc
xor
cmc
movsl
mov
jmp
jg
dec
sarb
lods
mov
aas
mov
adc
rcll
pop
cmp
dec
out
mov
push
out
jae
test
jnp
aam
lret
adc
addl
adc
cmpsb
or
arpl
cmp
dec
fs
pop
cmpsl
or
add
andl
or
pushf
jle
fdivrl
repz
adc
mov
dec
pusha
lods
xchg
movsb
loopne
xor
movsl
shll
mov
sarl
mov
popf
cltd
out
aad
sub
fs
fwait
ljmp
jne
int
mov
jmp
push
aad
xchg
fildl
xchg
sub
push
repnz
sub
sub
mov
ret
lods
imul
pushf
clc
pop
mov
bound
movsl
pop
dec
jmp
je
cmp
stos
mov
xor
lret
outsl
ljmp
test
fstpl
push
outsb
ljmp
fcmovbe
pop
push
sub
inc
dec
mov
pop
or
or
pushf
fdivl
aad
loopne
inc
mov
sub
out
dec
aas
pop
shrl
xor
shrl
add
adc
testb
cltd
jmp
pop
cmp
popf
sbb
xchg
data16
pop
inc
fistps
jno
das
cmc
push
and
jno
xor
inc
push
mov
std
push
iret
pop
cmp
jno
mov
faddl
dec
ds
iret
stos
repz
mov
mov
mov
popa
cmp
or
pusha
push
outsl
pop
imul
jg
or
out
aam
rol
clc
jp
xor
mov
fs
shl
lods
dec
andl
movsb
shlb
insl
scas
and
mov
or
pushl
in
xchg
outsb
cltd
aas
dec
jnp
adc
cmc
add
push
mov
or
ljmp
xor
mov
cmp
hlt
fstl
mulps
not
xchg
mov
mov
cltd
rorl
push
dec
inc
mov
pop
ljmp
testb
adc
ljmp
cmpsl
scas
cli
pop
jbe
add
xchg
mov
nop
sub
mov
jns
mov
mov
cs
cmp
lock
jge
push
in
aas
notl
loope
push
adc
out
in
xor
lds
jnp
scas
push
fildl
call
pushf
xor
cmp
mov
sub
insl
insl
addr16
pop
lahf
inc
in
outsb
cmpsl
mov
sbbb
je
mov
sub
mov
or
add
xchg
push
cmpl
push
cmpsl
dec
mov
adc
outsb
rorl
push
ds
stos
sbb
test
int
push
jne
rcrl
test
pushf
test
fwait
jl
sbb
bound
mov
mov
clc
push
push
and
sbb
xchg
pop
cld
cltd
and
jne
pop
push
in
mov
dec
pop
negl
cmp
or
inc
mov
sub
and
adc
sbb
mov
fdivs
push
mov
dec
pop
into
imul
adc
rcrl
pop
pop
pushf
jl
add
flds
ret
shrl
pop
and
adc
sub
sbb
inc
pop
lahf
gs
insl
ds
in
iret
scas
jmp
insb
hlt
cmpsl
sub
out
ljmp
xchg
mov
or
pusha
fcompl
mov
mov
sbb
inc
pushf
arpl
xchg
or
je
dec
in
call
push
gs
cmp
decl
cwtl
icebp
jno
inc
or
mov
cmp
cmp
fstpt
cmp
push
movsb
mov
sbb
inc
adc
pop
adc
mov
xchg
jae
mov
inc
mov
jae
xchg
movsb
xchg
inc
fwait
daa
adc
ss
fsts
repz
push
movsb
pop
lret
adc
sub
in
push
mov
push
ret
gs
sub
addr16
add
pop
pop
adc
sub
pushf
out
xor
or
inc
push
push
ficompl
sahf
sbb
inc
imul
popa
push
loop
fs
push
mov
mov
mov
mov
jne
fistl
mov
and
hlt
pop
lahf
pop
sub
sbb
xor
sub
in
adc
fstps
sbb
jge
cs
shrl
inc
cmpsl
fildll
loope
movsb
pop
xchg
stc
int
or
test
xor
mov
jb
mov
iret
pop
dec
dec
mov
push
pop
cmc
add
jo
imul
imull
call
or
xchg
sbb
imul
inc
loop
push
push
mov
ja
mov
sbb
in
out
sub
mov
test
mov
pop
sub
int3
and
mov
sbb
xchg
fst
pop
push
sarb
repz
jmp
sub
scas
mov
aam
das
and
pushf
xor
loop
or
pop
test
mov
ret
lds
cmp
xor
jno
ljmp
insl
testb
into
es
mov
add
into
jae
ficoms
mov
ljmp
xlat
inc
dec
pop
push
mov
pop
mov
fwait
ljmp
xchg
sub
xchg
ljmp
aad
imul
and
mov
inc
out
cmpsb
cmpsb
outsl
test
inc
cmp
outsl
jb
test
pop
mov
inc
sbbl
in
ret
pop
setbe
aad
sbb
cmpl
imul
cwtl
outsb
dec
lret
out
cs
mov
mov
jl
ss
push
push
jns
mov
pop
fnsave
ret
aas
mov
mov
adc
bound
jecxz
adc
imull
jecxz
mov
inc
push
fwait
cmp
jo
mov
xlat
push
fadds
test
std
mov
shll
gs
mov
mov
or
sar
mov
and
adc
xchg
and
inc
lods
pop
lds
xchg
nop
jae
xor
inc
xchg
cmp
mov
sbb
xor
mov
xchg
incb
outsb
fidivs
add
enter
push
mov
inc
push
mov
stos
or
pop
ja
fimuls
clc
or
daa
fildl
div
dec
out
dec
lret
scas
sub
ds
mov
mov
lock
lock
adc
jp
aam
movsb
enter
jno
inc
inc
aad
or
cltd
inc
dec
pop
loope
add
mov
pushf
jge
xlat
dec
aaa
adc
jmp
rclb
inc
sub
pop
mov
insl
inc
and
testb
mov
jp,pt
dec
sbb
fadds
or
shrl
inc
sbb
out
gs
test
mov
fcmovbe
xchg
inc
add
jge
pop
shlb
jno
push
popa
add
out
scas
jl
inc
and
call
inc
scas
add
add
fisubl
xchg
dec
mov
insb
xor
jb
sti
inc
add
sub
popa
jecxz
in
bound
ret
push
lods
pop
or
cmp
inc
pop
mov
mov
xchg
mov
mov
fnstsw
sbb
lcall
cmp
lret
dec
mov
mov
dec
jns
test
ret
push
mov
push
dec
adc
pop
pop
lret
les
or
sub
push
inc
and
cmp
ds
jmp
jns
add
cmpsl
cmp
in
arpl
shlb
stos
dec
mov
leave
imul
pop
inc
pop
push
call
mov
pop
lea
clc
inc
mov
loopne
roll
cmc
ja
arpl
pop
push
pop
mov
sbb
push
inc
xor
es
jb
popf
test
dec
clc
mov
aaa
and
adc
xchg
dec
inc
xchg
add
sbb
mov
bound
enter
lret
cs
jae
negb
mov
call
cmp
pop
push
inc
mov
cmp
icebp
movsl
pop
pop
lret
lea
inc
lods
neg
sub
sub
mov
dec
and
std
mov
repz
pusha
push
clc
cmp
inc
xchg
rol
lret
cmpsb
jg
je
ret
std
xchg
pop
shlb
pop
bound
push
sbb
jne
mov
adc
dec
leave
mov
jno
mov
mov
add
enter
arpl
in
xchg
sbb
popf
repnz
out
data16
inc
mov
add
lea
testb
xorb
sub
adc
cmc
or
sub
inc
repnz
lret
adc
push
push
sbb
stc
inc
cltd
rep
rolb
and
inc
mov
cmp
fcomi
out
addl
xor
lock
mov
ds
stos
int
imul
hlt
pusha
xchg
cld
ret
pop
pop
sahf
mov
mov
xchg
out
aad
fstps
pop
pop
add
push
mov
pop
mov
enter
cmc
repz
roll
xor
inc
shrl
leave
ss
push
mov
add
add
mov
data16
pop
cli
ds
jns
xchg
mov
sbb
or
sbb
or
ljmp
inc
xchg
leave
jmp
xchg
or
and
or
test
mov
or
mov
pop
stos
lods
sbb
jl
jo
stos
mov
rol
mov
ja
mov
fcomps
rol
test
out
ret
cs
dec
rcll
dec
aad
push
js
xchg
push
xchg
aam
sbb
out
lock
outsb
sbb
mov
mov
mov
or
nop
iret
cltd
decl
fsubr
aaa
outsl
outsb
pop
popa
shrb
add
push
and
push
add
mov
dec
inc
and
clc
arpl
sub
es
mov
jae
push
loop
std
add
stos
jl
int
fucomi
scas
pop
inc
xor
popf
cs
nop
data16
int
mov
aas
sub
mov
mov
arpl
xchg
xchg
jle
aad
or
push
mov
aam
je
scas
sub
add
addr16
pop
xchg
push
push
shl
push
cmp
mov
lea
or
andl
jb
mov
sti
cwtl
jl
adc
and
push
sub
xor
out
cmpsb
das
jmp
adc
cmp
push
sub
mull
and
and
int3
bound
mov
mov
jp
fmul
or
pop
test
orb
cmp
inc
push
test
mov
fs
jmp
inc
hlt
add
movsl
cwtl
add
cmovg
jg
add
lods
jg
pop
and
arpl
cmp
cld
jb
in
loope
and
pop
std
push
xorb
inc
repz
test
sub
or
sbb
data16
pop
xchg
pop
mov
add
jno
fsubr
xchg
sbb
fbld
push
clc
fistpll
inc
stc
into
push
mov
ja
rol
mov
mov
and
xor
dec
or
int3
and
icebp
jge
sbbb
fisubs
call
fcmovne
push
loop
xchg
arpl
mov
enter
adc
xchg
jmp
ss
jnp
into
push
push
lea
inc
leave
adcl
fistpll
xor
mov
push
lods
mov
sbb
in
cmpsl
fldl
aam
not
arpl
in
pop
test
lahf
dec
xchg
xchg
or
sti
or
jnp
rorl
xchg
push
mov
sub
bound
and
movsb
in
cmp
push
sahf
mov
mov
scas
mov
sub
mov
insl
insl
and
out
dec
dec
rolb
sbb
rorl
jb
jmp
adc
pop
mov
cmc
cmp
sbb
pop
add
add
pop
in
inc
adc
mov
in
fs
bound
cmp
mov
scas
cmpsl
and
pop
add
dec
lock
sahf
arpl
pop
adc
mov
or
inc
and
xor
ret
add
add
xorb
push
xchg
mov
jecxz
das
outsl
in
pop
das
pushf
imul
pop
scas
jp
mov
in
push
push
mov
inc
xor
andb
lahf
xlat
ss
sbb
push
jbe
loop
push
cmp
cmp
xchg
pop
pop
xchg
sbb
aas
outsb
js
gs
je
mov
xchg
je
mov
mov
nop
mov
fprem
cltd
rcll
imul
xor
loopne
inc
pop
add
aas
push
cmp
sub
mov
ret
repz
or
out
adc
fucom
aam
or
rcl
mov
push
lcall
test
dec
jg
fmulp
inc
mov
push
pop
jmp
sti
mov
fldt
aas
stos
push
rcr
xor
pop
pop
adc
mov
sub
inc
stos
sbb
cld
pop
sti
imul
xchg
push
push
and
mov
adcb
clc
push
sbb
mov
div
movsb
pop
mov
bound
mov
fisttpl
rcr
aaa
pop
dec
xchg
mov
les
repnz
lea
pop
mov
shll
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
jmp
and
mov
jmp
adc
addl
popa
xor
mov
inc
mov
or
dec
rcrb
fcmovnb
orb
insb
leave
jbe
cmp
lock
lock
mov
sub
call
out
push
add
jae
xor
jge
shl
xor
rolb
adc
pop
jmp
pop
add
xchg
pop
xchg
pop
jg
xor
jp
je
pop
scas
adc
bound
sbb
sub
sub
sti
jns
daa
inc
test
pop
test
pop
xchg
mov
pusha
jecxz
daa
mov
or
mov
icebp
cmp
jnp
aas
cmp
js
out
mov
mov
sbb
and
or
mov
jno
adc
sbb
loope
ljmp
inc
push
mov
inc
shlb
ret
mov
cmpsl
ret
mov
das
test
dec
or
and
aad
mov
in
mov
dec
std
fsubrl
ss
push
mov
imul
push
xchg
js
testl
insl
lahf
enter
xor
gs
pusha
lods
out
or
jno
adc
pop
pop
sub
sub
ss
adc
lods
xchg
andb
jae
and
lret
push
dec
loop
and
jp
testb
xchg
aas
sbb
cmp
mov
push
dec
xchg
movsl
jg
outsl
iret
out
insb
lea
mulb
xchg
jbe
add
xlat
scas
js
push
xor
lods
arpl
cltd
out
lds
cmp
ljmp
dec
adc
pop
mov
fldenv
stos
push
fidivl
cltd
imul
pop
js
loope
add
rcrb
movsb
cli
inc
push
sub
xor
or
bound
es
push
jne
dec
mov
adc
add
adc
inc
cmpsb
mov
fisubs
cmp
loop
cli
mov
aad
dec
pop
sub
rclb
imul
in
add
push
movsb
gs
scas
jnp
mov
cmp
popf
fldl
push
shll
mov
or
clc
pop
inc
xchg
cmpsb
lcall
loopne
ss
in
loop
sub
imul
imul
ret
cltd
loop
cli
stos
movsl
std
sub
mov
lcall
in
movsl
adc
iret
mov
iret
sbb
stos
jg
es
dec
jmp
mov
test
adc
sub
gs
or
fldt
pop
xor
out
push
repnz
out
pop
jmp
and
ds
push
inc
pop
call
push
cmpsl
inc
mov
sbb
loop
sub
jbe
mov
add
stos
mov
cmc
push
loope
pop
std
or
push
sub
push
sbb
andb
push
addb
add
cmpsl
bound
scas
enter
mov
dec
stc
stos
pop
adc
iret
xchg
jl
xor
add
sbb
add
test
lods
call
sub
rorl
out
cltd
adc
and
and
jp
pop
jmp
roll
jecxz
sub
shll
mov
ffreep
mov
sbb
enter
int
jle
hlt
icebp
or
ja
cmp
jge
clc
clc
dec
jl
jge
icebp
fcmovb
mov
xor
mov
dec
push
outsb
push
dec
sbb
push
and
test
push
test
iret
mov
push
daa
js
xchg
movl
pusha
jno
ret
icebp
dec
mov
aad
adc
sbb
fsubl
add
andl
icebp
movsl
push
lcall
fistpll
dec
mov
jne
xor
daa
popa
ljmp
push
movsb
xor
sub
sbb
dec
faddl
adc
out
call
jmp
lcall
out
inc
inc
sub
xchg
daa
jae
xlat
repz
jecxz
mov
lods
lahf
aad
xchg
mov
pushl
xchg
iret
bound
mov
jecxz
js
scas
mov
andl
push
mov
and
mov
jns
jp
mov
pop
outsl
pop
js
into
push
mov
imul
push
add
inc
cmpsb
add
lret
pop
xchg
add
jb
fs
xlat
or
leave
adc
jge
or
test
xor
movsl
and
xor
xchg
xor
aaa
xlat
xor
mov
imul
jle
mov
gs
in
mov
rol
xchg
mov
ss
lods
mov
mov
sub
xchg
xchg
test
in
sub
jmp
aas
adc
or
cmp
lret
xchg
incl
dec
daa
sbb
xchg
inc
outsl
dec
clc
cld
lds
arpl
push
jle
mov
dec
shrl
ret
push
int
adc
insb
stc
sti
inc
pop
inc
outsl
arpl
outsl
cmc
rorb
enter
mov
cs
push
sub
loop
push
xchg
sub
stos
inc
or
inc
std
aas
cmpsb
imul
les
decb
mov
push
pop
sbbl
dec
sbbl
fmull
out
out
add
sbb
insl
int3
jb
ret
sub
mov
loop
adc
xor
icebp
jb
mov
sbb
or
add
push
iret
xchg
adc
cltd
ret
sar
sarl
lahf
test
cmp
jb
repz
mov
xchg
fimuls
in
ja
shl
mov
mov
xor
rcr
push
mov
lods
stos
pop
inc
cwtl
sub
or
mov
daa
and
outsb
xlat
testb
insl
ds
insb
jnp
popa
add
in
mov
xchg
mov
out
mov
int3
sub
mov
pop
pop
aas
stos
int
or
jnp
inc
pop
lret
add
mov
cs
cmp
push
pop
out
ss
stos
jge
mov
aaa
cmp
cmpsb
scas
pop
push
dec
sbb
cli
cmp
cmp
jmp
xchg
cltd
or
add
mov
sbb
js
out
ds
add
je
loope
push
pop
mov
into
push
lods
int3
pop
sub
daa
loopne
jecxz
adc
mov
jmp
int3
mov
pop
cmp
sub
mov
sbb
mov
rcrl
xchg
xor
clc
fcomip
add
test
clc
xchg
push
sub
mov
nop
stos
fdivs
or
cmpsl
in
cmp
jmp
inc
enter
sbb
inc
pop
mov
into
cmovb
sub
insl
inc
insb
adc
push
popf
lret
push
sar
xor
push
jecxz
sbb
add
xor
inc
das
outsl
inc
scas
movsl
loopne
sbb
adc
out
pop
cmp
cmp
sbb
xchg
mov
xchg
mov
lock
push
insl
mov
push
clc
mov
lret
pusha
mov
in
sub
push
pop
push
pop
aad
in
in
push
mov
movsl
dec
lea
gs
clc
mov
iret
dec
lods
movl
orb
push
int3
je
fimull
lods
jecxz
mov
cmc
sub
cli
sub
shlb
dec
pusha
addr16
cmpsb
mov
adc
inc
xchg
xor
outsl
sahf
std
bound
ret
ljmp
dec
popa
shlb
ljmp
ljmp
in
popf
pop
push
pop
cmpsb
out
rorl
mov
out
in
sub
es
call
lock
push
adc
add
mov
lods
ss
xchg
call
lret
jecxz
xor
aad
or
mov
shrl
outsb
pop
arpl
faddl
jb
add
sub
mov
ja
jns
xor
ljmp
call
jg
inc
stos
fwait
fwait
jg
pop
stc
mov
cmp
pop
mov
sub
push
lahf
iret
enter
xor
push
cmp
mov
lahf
stos
xchg
addr16
negb
es
or
imul
cmp
divl
jg
pop
andb
test
hlt
fs
fbstp
ja
or
sub
int3
mov
vpunpckhqdq
fst
mov
std
test
aad
sbb
std
loop
add
int3
scas
push
outsb
and
and
pusha
es
sar
jnp
mov
inc
pusha
mov
xor
fdivl
sub
dec
sbb
push
dec
aas
push
adc
add
jae,pt
inc
shlb
adc
pop
sbb
mov
frstpm(287
incb
dec
mov
lret
and
mov
mov
and
mov
lret
inc
dec
adc
xor
mov
mov
adc
cmp
xchg
jmp
push
jp
nop
popf
xor
sbb
pusha
repnz
call
pop
movsl
ljmp
dec
or
in
out
jl
fistps
inc
push
imull
into
mov
inc
vxorps
push
sub
rorb
into
and
dec
dec
sbb
fsubr
cmpsl
sub
pop
shr
or
xchg
popa
mov
stc
sub
in
push
xor
pop
ret
xor
testb
jmp
stos
gs
push
mov
sub
mov
add
daa
mov
sbb
data16
in
outsb
cmp
dec
sub
das
mov
add
add
sahf
push
push
hlt
inc
nop
mov
jmp
stc
push
sahf
lea
and
sub
aad
into
jg
pop
in
dec
mov
lods
mov
aam
lahf
imul
sub
jmp
sub
sub
pop
addr16
shr
hlt
in
jne
and
stos
add
out
out
push
dec
push
test
pop
xchg
jle
scas
dec
cmpsb
add
push
pop
mov
lret
dec
insl
aad
cwtl
loope
jg
in
sub
das
mov
cltd
sub
xchg
push
dec
mov
lret
je
push
mov
inc
inc
out
popf
xchg
out
nop
repz
movsb
adc
mov
in
ljmp
xchg
fistl
inc
mov
mov
iret
adc
sti
int
std
int3
shlb
in
jg
inc
xorb
add
or
loope
js
pop
xor
lcall
or
movsb
inc
jbe
push
lds
lea
mov
sqrtps
dec
xchg
enter
push
jmp
int
test
mov
dec
cmpsl
mov
xor
out
cmpsl
stos
xchg
dec
pop
roll
sub
xlat
jb
aas
push
xor
mov
imul
sub
cmp
popf
lock
mov
jae
xchg
jle
sbb
in
lahf
jg
push
aam
out
std
dec
adc
stos
int
std
loopne
cmp
ljmp
stos
iret
in
in
cmp
jnp
adc
xor
shr
jmp
loopne
test
outsb
shrb
outsb
or
dec
fsts
sub
shlb
repnz
mov
mov
cld
cli
add
shl
mov
pop
cwtl
mov
inc
in
inc
out
test
or
hlt
mov
mov
xor
sbb
sbb
lds
sbb
je
adc
dec
xchg
jecxz
push
mov
jl
pusha
out
push
fisubl
fnclex
cmp
xchg
cmpsb
stos
std
pop
push
insb
arpl
inc
push
jnp
sbb
in
inc
hlt
and
jno
jmp
push
dec
dec
stos
pop
jnp
loop
add
insb
movsl
imul
cmp
in
add
jmp
jae
and
inc
cmpsb
cwtl
mov
sbb
xor
push
movsb
pop
sub
or
push
pop
movsl
cld
movsb
mov
or
add
loop
fdivs
sub
jl
je
aam
pop
jecxz
pop
mov
xor
das
cmc
jae
mov
cmc
cmpsb
dec
push
dec
mov
cmp
imul
pop
add
adc
mov
and
or
and
mov
add
jg
call
insl
js
adc
mov
dec
inc
jge
loopne
outsb
mov
dec
push
xchg
dec
dec
sbb
and
fadd
push
jae
xlat
repz
ljmp
inc
aaa
jno
dec
mov
decb
call
ds
enter
jmp
shr
daa
add
popa
and
xchg
and
inc
sbb
stos
xor
rcll
add
sbb
pop
fmuls
das
xor
add
xchg
cmpsb
mov
jp
pop
add
push
test
das
in
mov
mov
jnp
dec
outsb
test
movsb
mov
dec
jno
xchg
inc
mov
les
mov
outsl
jo
idivl
dec
pop
push
out
gs
xchg
mov
icebp
jns
js
add
xchg
unpcklps
inc
cmp
xchg
pop
push
rol
call
fucomi
test
inc
frstor
aam
and
sbb
in
jmp
sbb
enter
call
fwait
or
xlat
xor
sub
jbe
lret
cmp
cld
xor
mov
repz
pop
add
jns
push
repnz
andl
enter
inc
rcr
cld
sub
cmp
enter
icebp
lret
cld
xchg
pop
ret
decb
das
cmc
inc
add
ja
mov
sbb
rcll
ror
add
in
push
andb
icebp
std
daa
xchg
inc
mov
jne
sahf
inc
pop
sti
pop
or
xor
pop
mov
into
mov
inc
jbe
adc
add
sahf
inc
jno
sub
pop
cmp
cld
iret
or
mov
push
sub
jmp
jle
std
test
xchg
fistl
testl
dec
xchg
aas
mov
inc
push
sub
xchg
popa
imul
aam
xchg
icebp
xor
xchg
cmp
testl
std
repnz
xchg
push
xor
jne
ret
add
sub
lock
test
std
add
stos
fadds
mov
pop
pushf
lret
outsb
cmp
fs
out
fisubrs
xor
call
frstor
mov
jmp
out
idivl
and
jae
add
jl
movsl
ret
xor
pushf
jae
sbb
mov
pop
mov
iret
fdivrl
dec
sub
push
scas
push
icebp
pop
mov
xor
cmp
aam
insb
xchg
and
cmp
jge
xor
pop
fidivs
mov
cmp
mov
or
lret
insb
movsl
lds
stos
pop
mov
es
repz
mov
or
pop
sub
inc
rclb
push
add
stos
xor
loop
mov
mov
sar
stc
out
jmp
add
test
es
aas
adc
push
ror
mov
sbb
adc
andb
data16
jg
loopne
add
cmpsb
add
xchg
mov
cmpb
or
bts
addr16
mov
stos
jl
mov
cmp
lea
js
add
mov
test
in
imul
loope
sub
pop
cltd
push
adc
faddp
hlt
pop
inc
mov
enter
test
mov
rolb
int
bound
icebp
jl
adc
sbb
dec
loopne
or
lock
sbb
pop
pop
sarl
jge
xchg
cmpsb
aad
push
push
jp
push
sub
add
addr16
pop
xchg
scas
imul
mov
sub
inc
mov
int
int
push
fdivl
mov
mov
cmpsl
push
jb
fdivp
or
push
or
pop
add
sbb
loop
orl
clc
and
aad
js
les
cmpsl
shrl
jl
sti
aaa
out
dec
sub
or
call
push
sbb
ljmp
cmp
sbb
push
or
imulb
xlat
lcall
mov
mov
outsl
push
test
cmc
fisubl
adc
cli
jo
or
mov
call
jo
push
mov
daa
xor
mov
imulb
outsb
mov
push
sbb
ds
fstps
jecxz
mov
cmc
lods
repnz
xchg
mov
inc
mov
xchg
mov
mov
inc
sbb
sahf
aaa
sbb
out
jno
andl
aaa
mov
pop
fdivr
sub
roll
adc
arpl
fistpll
mov
xor
push
out
pop
push
out
call
imulb
mov
add
push
xchg
xor
xchg
mov
xchg
loopne
or
push
call
jns
sub
icebp
das
int
adc
pusha
adc
loopne
dec
mov
or
int3
pop
mov
sub
jne
mov
xchg
mov
xchg
vplzcntq
fildll
cmpsb
popf
addl
imul
jae
pop
xor
shl
push
addl
jmp
lds
pop
shlb
in
movsl
adc
icebp
test
xorl
add
or
enter
int
inc
and
cli
sub
xchg
or
mov
inc
jp
push
push
push
outsl
int3
mov
nop
aaa
push
loop
jle
fdivrp
and
lret
lea
xor
gs
mov
sbb
rcrl
xorl
jo
mov
fistl
scas
scas
pop
jo
scas
pop
sub
jno
bound
cmpsl
jmp
mov
add
scas
push
jnp
xor
add
xchg
fcmovb
mov
lods
scas
ja
in
lods
jnp
cwtl
insb
pop
leave
ret
roll
ss
push
int
inc
xor
mov
sub
rorl
divl
dec
fldcw
je
jns
xchg
push
aad
fbstp
cwtl
cmpsb
mov
mov
mov
das
sub
cmpsb
fs
mov
outsl
jle
ret
sub
fdivrp
pusha
fldenv
lock
jge
cmc
insl
xchg
leave
mov
scas
rep
dec
inc
aaa
xor
scas
dec
xchg
inc
mov
fcoml
ja
hlt
cmpsb
or
xchg
shlb
xor
or
daa
pop
inc
outsb
sbb
inc
mov
fst
loope
std
and
xchg
xchg
adc
pop
movsl
cli
push
push
jmp
xchg
push
mov
xchg
mov
jp
cld
add
add
or
cmp
add
gs
ret
add
cmp
imul
adc
mov
gs
push
dec
out
dec
adc
adc
mov
gs
fisttps
mov
and
aaa
sbb
ret
sub
insb
sub
sbb
jno
imul
out
cmp
mov
in
mov
mov
xchg
add
test
sbb
lods
mov
decl
mov
mov
xchg
mov
ja
cltd
gs
and
jp
shll
inc
sbb
inc
jl
aaa
cltd
pop
iret
stc
mov
mov
pop
pop
mov
shlb
sbb
stc
lcall
in
adc
mov
mov
cmpsb
nop
call
pop
jns
mov
push
int
jbe
test
sbb
daa
mov
or
in
jb
shll
lods
jle
flds
rclb
fisttpll
testl
test
lods
mov
arpl
dec
xchg
jg
imul
push
inc
pusha
jecxz
cli
dec
and
scas
xor
leave
mov
or
jnp
jle
add
das
sbb
or
sbbb
cmp
xchg
xchg
sub
and
pop
and
sbb
fdivl
imul
and
pop
sti
pusha
adc
jno
rcrl
inc
jle
cs
lods
pop
add
inc
scas
jmp
faddl
mov
mov
pop
mov
or
fisttps
aas
sbb
pop
pushl
xor
add
mov
xchg
jns
dec
cld
clc
out
cmpsb
mov
test
pushl
mov
xor
mov
jne
inc
cmp
popf
mov
ficompl
std
xchg
cmp
dec
test
mov
or
sbb
out
push
pop
gs
aas
sti
jp
and
out
fdivr
ljmp
push
pop
mov
test
pop
and
inc
dec
mov
inc
lret
or
mov
cmp
add
pop
divb
mov
add
xchg
pop
jbe
repz
pusha
into
sbb
jo
std
cs
sub
or
xlat
xchg
daa
dec
xchg
fldl
repz
cli
jp
fdivs
xchg
sbb
mov
sub
inc
xor
push
xchg
movsb
out
cmp
int
jo
cltd
int
fsubs
rcrb
ds
pop
push
std
lods
shlb
mov
shll
push
movsb
xor
dec
data16
rorb
inc
push
push
lods
jmp
fmul
rcll
push
mov
jns
adc
fldcw
iret
sti
pop
jbe
add
xor
mov
xchg
into
ljmp
jae
rorl
into
ss
outsl
aas
mov
stc
or
sub
negb
das
xchg
push
sbb
sbb
push
and
jne
lret
mov
insl
ds
adc
dec
mov
gs
lahf
mov
cmp
in
dec
scas
pop
les
or
in
aas
fwait
and
pop
inc
mov
pushf
int3
xor
inc
enter
sbb
jb
add
pop
stos
enter
xchg
enter
or
int
je
rcrb
jbe
adc
xor
inc
mov
jg
mov
add
je
push
mov
cli
outsl
push
push
cli
push
sub
nop
pop
mov
jns
aad
roll
mov
ss
arpl
jae
inc
fs
rorb
std
lret
out
divps
push
mov
insb
aam
xchg
push
fisubrl
xor
leave
lcall
cmc
popl
inc
cmc
and
and
push
jb
or
loop
xlat
jb
repnz
pop
and
popa
ficompl
rcrl
insl
pop
sub
fstpt
popf
jle
pop
lahf
mov
in
and
int
fisubs
fsts
frstor
push
mov
fiadds
arpl
mov
sbb
mov
ficoml
pop
daa
cwtl
add
xor
aaa
jecxz
jns
fldcw
sbb
push
inc
cmp
movsb
xchg
lret
pusha
and
sahf
jle
push
aam
xor
and
add
push
cmp
imul
mov
add
xchg
pop
int
pop
inc
jbe
mov
or
mov
ds
out
cmp
or
adc
ljmp
leave
sub
aad
pop
mov
push
push
xchg
jns
sbb
fsubrl
fimuls
pop
out
dec
jns
icebp
or
addr16
pop
mov
cmpsl
jnp
adc
icebp
and
xor
aad
and
xchg
jae
pop
cmp
mov
dec
rcrl
hlt
cltd
jns
cmp
shlb
es
int
sub
cs
dec
jg
sub
insl
test
adc
jp
int
add
or
or
ret
clc
jecxz
daa
stc
and
add
adc
jl
add
in
mov
pop
xchg
fstpl
sbb
lods
icebp
dec
mov
insl
xor
andl
push
je
hlt
into
lds
sub
jmp
js
ret
loope
cli
push
faddl
pop
stc
jmp
std
outsb
lods
inc
adc
out
mov
dec
dec
mov
int
popa
sbb
aas
lods
sbb
mov
movsl
sub
add
enter
xor
and
push
cmp
fidivs
lods
or
or
dec
imul
mov
iret
add
in
jo
jae
jmp
sbb
loopne
fwait
xor
or
adc
mov
insl
sub
mov
sbb
mov
outsb
sar
add
mov
bnd
ret
leave
or
hlt
sbb
xchg
dec
mov
mov
movsl
pop
icebp
lds
ja
ret
in
imul
inc
mov
xor
and
mov
jmp
lea
js
sbb
mov
mov
or
cmc
add
jnp
call
jp
lahf
sbb
mov
mov
dec
fdivp
mov
and
sbb
pusha
push
fidivrs
ret
and
into
xchg
ret
push
pop
push
pop
or
mov
imul
jg
dec
or
cld
mov
cmc
out
inc
cltd
stos
cltd
mov
lods
test
mov
cs
test
cmp
pop
pop
adc
push
add
inc
push
shr
xchg
pushf
clc
pop
shlb
cmpl
addr16
mov
test
pop
test
ret
cmpsl
shl
aad
inc
sbb
lds
push
mov
les
cmp
lahf
arpl
std
mov
sbb
inc
ficompl
cmpsl
daa
frstor
repnz
xchg
push
out
and
jle
dec
adc
add
insl
push
push
mov
pop
push
sub
mov
dec
push
push
adc
dec
lcall
mov
sbb
fcomp
stos
ljmp
sub
dec
inc
in
adc
in
xchg
mov
add
adc
mov
mov
cmc
fdivr
outsb
int
pop
clc
sub
pop
xchg
add
or
shrl
adc
sbb
je
sahf
lds
pop
xor
cld
fs
jae
mov
test
iret
xchg
lds
dec
stos
bound
xchg
cmp
shrl
xorb
and
jne
mov
push
icebp
shrl
pushf
or
xlat
dec
push
cmp
adc
mov
int
push
addr16
jecxz
lahf
rcrb
fistpll
xchg
data16
popa
sub
fcoms
inc
xor
repnz
push
shll
mov
push
push
jle
lock
notl
dec
pop
or
dec
lods
jecxz
push
mov
rcll
cltd
rclb
lock
repz
sti
inc
cmp
inc
push
fsubp
test
enter
mov
xor
mov
js
sahf
rorb
sbb
aad
je
pop
sti
movsl
pop
xchg
rcr
mov
sbb
adc
xorb
inc
push
and
mov
adc
adc
out
mov
cmp
mov
shl
int
pop
ret
xchg
add
xchg
cmp
mov
bound
xchg
mov
mov
mov
xor
ss
jb
sti
adc
aas
and
shll
mov
jae
stos
push
scas
xor
aam
dec
nop
nop
in
sahf
pop
pop
outsl
sub
inc
int
inc
and
into
sbb
add
mov
cmp
loop
rcr
cs
arpl
jg
push
lea
sbb
cmpsl
inc
pop
js
push
mov
call
arpl
or
mov
jp
mov
jne
mov
xor
mov
insl
loope
push
loopne
lahf
add
and
sbb
std
dec
mov
xchg
mov
into
rorl
int
add
scas
in
in
cmp
in
test
jo
jbe
mov
inc
lock
pop
movsb
imul
jp
out
push
in
add
xchg
inc
xchg
push
push
xchg
loopne
jmp
mov
xchg
dec
and
pop
dec
or
loope
sub
jg
push
lds
cwtl
js
sub
popa
cmp
icebp
dec
out
cld
pop
push
pusha
sbb
addr16
sub
loope
adc
push
fs
cmpsb
stc
jo
pop
insl
and
in
xchg
cmp
add
pop
arpl
jmp
imul
jns
dec
enter
xchg
or
inc
clc
aam
lds
dec
hlt
stos
adc
jne
sbb
mov
add
fisubrl
adc
jmp
sub
and
outsb
loop
cld
and
out
into
mov
push
mov
daa
pop
sub
xor
test
jg
jae
movsl
mov
or
lds
jb
lds
jbe
test
stc
movsl
in
popa
lds
ret
cmp
es
xchg
mov
xor
add
mov
mov
clc
mov
mov
dec
mov
jmp
push
cmc
xchg
jmp
test
mov
jne
xor
in
add
jecxz
repz
mov
xor
cmpsl
dec
fdivs
outsb
mov
inc
jb
jae
push
lret
stc
adc
jno
jbe
inc
mov
dec
adc
mov
sub
cmp
or
insl
mov
shl
cmp
lcall
xchg
es
popa
icebp
dec
mov
int3
sbb
inc
add
scas
inc
inc
and
and
add
cmp
fcomps
iret
dec
dec
popf
or
mov
popf
rcrb
dec
imul
xor
lret
sbb
push
test
mov
aas
inc
jnp
incb
test
mov
dec
cmp
xchg
roll
push
mov
dec
stos
pop
or
cmpsl
xor
in
mov
adc
pop
mov
mov
adc
sbb
out
cs
xor
mov
clc
mov
cmp
in
and
mov
or
adc
push
daa
fwait
sbb
and
push
push
mov
inc
cli
repnz
popf
xchg
std
jnp
imul
adc
stos
cmp
ret
dec
mov
lea
mov
or
dec
call
mov
int3
test
rcrl
and
es
pop
mov
cli
maxps
xor
in
adc
arpl
data16
enter
jl
test
jae
push
stos
adc
rcrb
roll
mov
cltd
pop
test
xor
js
pop
jb
mov
inc
adc
xor
mov
pop
xor
call
mov
xchg
repnz
sbb
pop
test
mov
push
push
jne
fucomi
fdivl
push
ds
insl
loop
mov
stos
xor
jl
xor
adc
aad
lcall
sub
push
add
push
cmpsb
mov
daa
dec
std
add
dec
fnstsw
jge
jmp
pop
bound
mov
push
loop
inc
and
pop
fbstp
sar
sub
xor
ret
lcall
cmp
xor
js
lds
cmp
nop
adc
mov
js
xor
insb
cld
inc
fwait
mov
inc
inc
jecxz
scas
mov
pop
aam
das
mov
rsm
in
dec
popl
inc
xchg
fcmovnbe
pop
sarl
jmp
or
cmp
push
mov
scas
sub
into
mov
lcall
push
fwait
push
push
sbb
sub
in
repnz
int
mov
lret
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
jmp
sbb
aam
mov
cltd
push
inc
xchg
icebp
sbbl
xchg
jl
push
insb
addl
mov
call
and
sbb
inc
pop
aam
inc
out
jns
mov
or
lahf
in
sbbb
mov
sub
clc
mov
into
xor
shll
dec
mov
push
push
pop
mov
pop
or
in
test
ret
mov
jp
xlat
mov
test
push
cld
sub
aaa
fcoms
xor
outsb
mov
pop
mov
fwait
or
mov
mov
push
ret
ficomps
fldl
xchg
fistpll
mov
adc
fsub
in
stos
mov
xchg
lock
dec
mov
or
test
xchg
jb
dec
data16
mov
aaa
sahf
dec
and
sub
xchg
sbb
ljmp
lock
xchg
push
mov
sbb
mov
iret
sub
sbb
mov
push
push
shlb
insl
xor
xor
push
lret
mov
jecxz
pop
pop
inc
mov
xchg
test
imul
sub
inc
fimuls
dec
dec
rorb
inc
dec
cmp
add
jmp
mov
shll
roll
adcb
push
fdivl
ret
cmp
es
mov
stos
push
movsl
xchg
jmp
ja
scas
jno
aaa
sub
ret
xchg
cmp
pop
loopne
pop
pop
adc
aas
and
clc
repz
test
push
push
xchg
inc
ljmp
cmp
divl
mov
das
leave
mov
push
or
jle
jecxz
popa
jmp
jecxz
jmp
ljmp
es
call
lahf
es
lea
loopne
das
and
fisubrs
test
movsl
push
ror
push
mov
cmc
mov
inc
mov
mov
cmp
sbb
stos
mov
lods
xchg
add
cmp
mov
lcall
mov
mov
pop
aam
adc
pop
std
cli
in
mov
inc
cmp
pop
xor
dec
add
cmp
cli
arpl
cmp
scas
fs
popa
xor
mov
mov
inc
sbbl
shrb
push
inc
loope
lock
jge
sahf
testl
movsb
insl
mov
dec
fbstp
fcomp
shlb
xrelease
and
adc
cli
dec
push
cmpsb
ds
add
jle
jo
fisubrs
daa
jne
inc
or
xchg
cmp
test
lcall
stos
hlt
out
inc
push
pop
sub
mov
lods
ficomps
mov
jl
xchg
scas
out
push
inc
sbb
mov
hlt
mov
push
cmc
inc
cltd
push
adc
or
inc
xor
jl
xchg
ss
jo
icebp
in
outsl
fcmovnb
iret
cltd
lret
adc
xor
sub
pop
or
cmp
cli
jnp
push
xor
js
cltd
inc
loop
pop
adc
lcall
add
mov
fstpt
pushf
dec
lea
add
jle
shll
dec
cltd
ficoms
sti
adc
stos
enter
mov
cmp
pop
shll
dec
push
jl
add
mov
mov
adc
adc
test
faddl
fisttpl
adc
or
ljmp
jmp
or
push
add
adc
nop
shrl
xchg
pop
lock
adc
shl
xor
pop
or
data16
pop
mov
jmp
and
pop
scas
cmp
bound
sti
fisttpll
clc
nop
aas
lods
mov
and
iret
xlat
and
sub
inc
aad
push
aam
pop
imul
push
outsb
outsl
xchg
stos
jecxz
push
fnstenv
ret
mov
jecxz
sub
xchg
dec
aaa
xor
arpl
rolb
push
mov
sbb
dec
adc
cmc
and
pusha
jecxz
and
nop
inc
iret
shr
divl
xor
xor
addl
jl
loopne
cmpsb
stos
cs
popf
mov
ret
mov
cmp
pop
xor
add
or
cltd
lods
add
mov
xchg
mov
test
pop
dec
cmp
add
movb
repz
rclb
mov
jge
aam
adc
fisubl
in
mov
ss
lret
jnp
ficompl
jns
add
mov
lock
shll
out
push
movsl
ljmp
add
push
xorb
in
ljmp
mov
out
mov
jmp
xchg
cmc
jns
inc
cmp
iret
adc
addr16
mov
mov
mov
push
stc
xchg
jg
jns
in
mov
movsl
test
int
push
outsl
movsb
push
xor
rcrb
pop
mov
sbb
lods
ss
mov
ja
cmpsl
test
call
in
pushl
pop
sub
xchg
sahf
pop
xor
push
sub
jne
jnp
sarl
call
imul
adc
cmpsb
dec
loop
adc
lods
outsl
icebp
dec
cmp
sub
push
add
sub
cmp
adc
mov
pop
ret
into
sbb
outsb
jmp
dec
mov
outsb
into
int3
daa
lret
shll
nop
lahf
xchg
setp
orl
sub
ret
mov
sbb
imul
movsb
in
pusha
popa
in
ret
cltd
subb
push
mov
js
mov
push
lods
sub
cwtl
cmpl
cmp
into
mov
test
into
incb
enter
inc
jno
xchg
mov
pop
movsl
out
divb
push
incl
jne
add
xlat
lods
sahf
push
pusha
ficomps
lds
cmc
sub
je
jo
insl
jge
jecxz
sub
imul
xor
faddl
cli
pminub
cmpsb
push
mov
shl
test
test
xchg
lahf
test
mov
popf
bound
inc
nop
push
add
ds
adc
mov
int
or
push
loop
repnz
push
sahf
xlat
testb
dec
jle
xchg
push
adc
iret
xlat
cltd
sbb
jle
test
or
es
int
push
add
and
sub
fs
inc
movsb
mov
cs
sar
imul
push
ret
dec
jbe
sbb
in
out
cmp
pushf
gs
in
pushf
test
in
push
mov
es
cltd
std
sti
aas
add
push
arpl
push
and
imul
bound
jno
xor
das
cmp
movsb
mov
pushf
scas
icebp
xchg
mov
mov
pop
fwait
fs
sti
cmp
jbe
iret
stos
pop
std
lret
mov
repz
xchg
sbb
mov
repnz
aam
test
mov
adc
call
xlat
jae
mov
jge
inc
mov
stc
sub
mov
dec
push
fildll
cltd
sarb
mov
xchg
xor
std
add
lcall
fwait
sub
jmp
das
sub
addr16
jnp
roll
jns
lret
ss
test
aad
mov
dec
fldenv
mov
int3
cltd
js
stos
inc
lcall
mov
flds
out
stos
cs
pop
and
or
bound
and
adc
xor
xchg
jecxz
mov
in
das
and
and
imul
adc
cmpsl
mov
push
push
lods
pop
sub
jecxz
dec
xor
push
xchg
mov
fdivs
pop
or
popa
and
pop
ds
mov
mov
xor
int3
jecxz
lea
pop
in
je
scas
ret
xlat
and
sti
in
mov
gs
pop
push
gs
mov
stc
xor
fstpl
in
enter
cmp
push
or
sbb
cltd
imul
loope
add
lods
in
ja
or
cmp
jl
pop
inc
divl
and
out
into
cmp
pop
fisttps
xor
adc
movsb
or
test
and
add
add
shlb
push
hlt
test
push
cmp
cmp
and
inc
mov
clc
mov
insl
aaa
push
dec
adc
ret
hlt
xchg
mov
and
leave
inc
popl
loopne
cs
add
inc
dec
cmp
mov
sub
xor
std
adc
shrb
scas
bound
xchg
push
cltd
pop
xchg
orl
mov
in
sahf
insl
into
sbb
pop
adc
mov
cld
pop
cmpb
aaa
test
mov
cmp
mov
test
pop
mov
pushf
ss
pop
test
push
aad
lds
cmc
jmp
add
jmp
mov
and
fwait
and
xchg
xchg
fldcw
push
pop
mov
fdiv
add
xchg
push
xor
jl
mov
scas
loop
les
mov
mov
pop
xor
sti
xor
int3
movsl
popl
ja
repz
out
nop
inc
je
push
mov
adc
repz
sbb
mov
inc
adc
fs
jp
subl
add
out
pop
dec
out
enter
pop
out
fistl
dec
mov
aad
xchg
cmp
push
mov
idivb
pop
sbb
cmp
rolb
jg
fldt
sub
stc
xchg
in
outsl
jp
jo
xor
test
inc
adc
push
cld
std
xor
ss
ret
icebp
outsl
lgs
add
pop
and
je
decb
test
shrl
dec
call
add
cmpsb
hlt
popf
push
stc
push
xchg
cmpsl
test
fcom
ja
inc
inc
push
clc
ja
pop
nop
mov
mov
jmp
fisttpl
test
sub
imul
xor
fwait
dec
xchg
imul
faddl
cld
xchg
jbe
push
out
xor
movsl
cltd
lea
sbb
mov
std
xchg
push
popa
inc
shl
outsl
xchg
add
sbb
inc
inc
mov
leave
testb
mov
add
jo
xchg
xchg
enter
mov
inc
xchg
add
fsubs
xchg
pop
test
pop
cld
scas
mov
hlt
lds
sbb
fcmovnbe
add
sbb
movsl
xor
push
into
cmp
cmc
and
jge
mov
in
inc
pusha
jns
jp
je
cmp
cmp
sbb
test
sti
fs
cmp
or
sahf
xor
dec
mov
mov
inc
mov
rcrb
mov
adc
aaa
lock
out
sub
inc
dec
movsb
push
or
aad
pusha
cmp
aam
cmp
xor
inc
loop
push
or
sarb
mov
adc
xor
fsubp
ret
decb
stos
out
xor
dec
daa
push
repz
pop
push
add
xchg
stos
mov
jmp
lea
mov
imul
ja
push
and
mov
mov
fisttpll
adc
add
addb
mov
sub
enter
ja
shl
xchg
outsb
jmp
mov
add
dec
mov
mov
stos
xchg
mov
jge
movsb
pop
or
mov
mov
sbb
xchg
insl
rcll
nop
pop
inc
cld
mull
pop
stc
shrl
jmp
or
mov
call
xor
stos
int3
inc
add
je
data16
push
pop
into
xorl
int3
mov
mov
adc
stc
or
dec
inc
ds
fs
jle
dec
jecxz
stos
shlb
std
mov
jno
mov
leave
mov
cmc
mov
cmp
xchg
repz
aam
mov
aas
in
out
lret
adc
xor
jp
in
pop
out
in
add
aaa
lods
jae
pop
stos
jecxz
sub
fmuls
or
adc
mov
test
dec
pop
test
call
imul
rcll
out
add
insl
mov
adc
xchg
push
sub
add
ffreep
fisttpl
bound
mov
sbb
subl
shll
pop
lret
popf
in
loope
ret
mov
push
xchg
push
adc
jmp
push
and
loop
pop
lahf
jne
add
and
repz
pop
mov
or
das
stos
sbb
xchg
add
fldcw
xchg
loope
cmp
adc
pop
sbb
jmp
mov
or
lods
sub
lret
xor
imul
addr16
mov
push
data16
cltd
fcmovnu
sbb
pop
push
cmp
xchg
decb
das
lock
stc
push
sbb
lods
add
mov
fdivl
cld
push
and
push
and
idiv
xor
xchg
rcrb
adc
pop
jmp
xlat
ja
shr
sub
or
inc
add
xor
pop
jae
imul
das
inc
out
pushf
cmp
mov
pop
xor
mov
and
pop
pop
les
xchg
aas
xchg
mov
sbb
or
xchg
nop
mov
fisubrs
jnp
mov
fwait
xor
ja
imul
and
jae
mov
mov
filds
pushf
out
and
hlt
jnp
or
push
mov
push
mov
pop
cmp
nop
adc
daa
imul
dec
outsb
pop
jbe
aam
out
int3
test
js
fbstp
cld
mov
pop
out
adc
dec
jg
jbe
les
fstp
and
push
sbb
ljmp
xchg
xchg
push
iret
mov
add
enter
push
inc
fwait
jle
inc
push
mov
sbb
flds
xchg
nop
push
sarl
xchg
cltd
in
rcr
dec
rol
shr
xchg
shrb
mov
pop
adc
adc
mov
xlat
sbb
pushf
aad
or
add
lock
push
inc
ficomps
clc
stc
imul
cwtl
mov
and
mov
mov
int3
arpl
adc
push
lea
imul
cld
sbb
jns
lods
add
cmp
sub
or
and
aas
or
mov
lea
mov
xchg
or
or
gs
mov
icebp
xorb
aad
mov
jno
mov
push
push
mov
push
dec
mov
push
lds
mov
repz
xor
xor
sbb
dec
jge
inc
out
push
cmp
sub
movsb
mov
add
mov
push
adc
aas
nop
or
and
push
or
jb
xor
xchg
test
fwait
or
test
adc
cmpsl
cwtl
aad
jg
push
sahf
das
pop
push
cmp
inc
mov
and
and
inc
roll
aas
and
sahf
mov
popf
mull
inc
dec
lds
test
aam
lahf
pop
push
or
outsb
ds
jns
ret
subl
andl
stc
leave
xchg
sarl
imul
lds
fcomps
pop
jae
aas
mov
cmpsb
xor
lahf
shl
das
jg
adc
inc
pop
mov
push
push
mov
outsb
push
aaa
inc
mov
jecxz
sbb
aas
aam
out
xchg
jge
dec
adc
pop
shrb
dec
into
jp
jae
and
test
cli
jmp
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
sbb
push
adc
mov
incl
mov
movl
mov
inc
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
push
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jg
jmp
call
xor
add
dec
mov
jmp
movl
mov
mov
xor
xor
xor
sub
or
mov
xorl
addl
mov
sbbl
mov
addl
sub
adc
mov
add
orl
adcl
mov
adc
mov
sub
xorl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
adc
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
movl
sbb
lea
sub
mov
movl
andl
lea
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
neg
mov
xor
orl
add
mov
xor
xor
xor
or
sub
sub
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
mov
dec
mov
jmp
mov
adcl
mov
andl
add
push
mov
andl
mov
mov
sbb
mov
xor
neg
mov
add
movl
cmp
je
movl
mov
movl
jmp
sbb
mov
xor
adcl
push
add
add
xor
mov
xor
mov
adcl
add
movl
push
movl
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
xor
mov
andl
xor
add
subl
xor
orl
add
movl
adc
notl
xor
xor
cmp
jne
cmp
jne
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
mov
dec
mov
jmp
add
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
jmp
mov
mov
xor
notl
add
imul
dec
mov
xor
add
cmp
mov
movl
je
mov
add
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
movl
sub
movl
push
push
adcl
push
xor
orl
push
call
addl
mov
sbbl
lea
push
sbbl
push
orl
call
movl
cmp
movl
je
xor
movl
jmp
movl
mov
push
lea
xorl
push
push
push
xorl
push
call
imul
cmp
jne
subl
lea
adcl
push
push
call
movl
cmp
movl
jne
andl
pushl
push
call
addl
mov
or
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
adc
lea
mov
or
mov
lea
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
addl
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
mov
negl
mov
xor
xor
xor
mov
mov
mov
mov
andl
mov
subl
movl
adcl
mov
xor
movl
mov
addl
xor
subl
add
movl
jmp
lea
push
decl
push
adcl
call
movl
cmp
jne
addl
push
andl
lea
push
push
push
push
call
orl
imul
movl
cmp
movl
jne
orl
lea
push
push
addl
call
movl
cmp
movl
jne
xorl
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
pushl
push
pushl
push
push
call
mov
dec
mov
jmp
mov
adcl
xor
lea
push
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbbl
xor
lea
push
mov
pushl
subl
call
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
adc
lea
movzwl
xor
mov
mov
adcl
xor
xor
add
mov
xor
lea
movl
mov
movl
cmp
jbe
or
mov
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
xor
mov
and
mov
addl
sub
adcl
xor
subl
mov
andl
lea
mov
lea
mov
xorl
lea
subl
push
push
subl
call
movl
cmp
jne
push
lea
push
andl
push
subl
push
adcl
push
addl
call
xorl
imul
cmp
movl
jne
lea
adcl
push
andl
push
xorl
call
cmp
movl
jne
sbbl
lea
push
push
call
cmp
movl
jne
adcl
push
andl
lea
xorl
push
subl
push
push
push
sbbl
call
imul
cmp
movl
jne
andl
lea
negl
push
push
xorl
call
movl
cmp
jne
lea
xorl
push
andl
push
subl
call
movl
cmp
movl
jne
adcl
push
lea
push
adcl
push
subl
push
subl
push
adcl
call
imul
cmp
movl
jne
subl
lea
push
adcl
push
xorl
call
movl
cmp
jne
xorl
lea
push
push
andl
call
movl
cmp
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
imul
cmp
movl
jne
xorl
lea
push
orl
push
call
cmp
movl
jne
subl
lea
addl
push
push
adcl
call
cmp
jne
orl
push
orl
lea
push
adcl
push
andl
push
push
call
orl
imul
movl
cmp
movl
jne
adcl
lea
push
andl
push
subl
call
movl
cmp
jne
adcl
lea
push
sbbl
push
adcl
call
cmp
jne
push
movl
lea
addl
push
notl
push
push
orl
push
call
imul
cmp
jne
lea
push
push
xorl
call
cmp
jne
xorl
lea
andl
push
push
decl
call
movl
cmp
movl
jne
xorl
push
addl
lea
push
push
andl
push
push
call
imul
cmp
movl
jne
sbbl
lea
xorl
push
push
orl
call
movl
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
xor
mov
sub
add
movl
mov
mov
sub
or
mov
push
mov
movzbl
add
xor
mov
xorl
push
sbbl
mov
add
cmp
movl
je
mov
and
mov
addl
xor
xorl
xor
sbbl
add
adcl
add
adc
movl
xor
sbbl
mov
incl
push
xor
xor
neg
xor
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
orl
mov
xor
add
mov
sub
sub
movsbl
mov
sub
movzbl
or
mov
andl
xor
cmp
movl
jne
xor
xor
xor
mov
movl
push
mov
adc
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
sub
mov
andl
mov
movl
and
push
mov
or
mov
add
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
add
add
add
add
push
add
lock
add
add
add
push
push
inc
push
and
loopne
call
jg
mov
outsb
sbb
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
