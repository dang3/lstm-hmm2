push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
out
xchg
ja
mov
xchg
les
xor
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
lods
sbb
pop
clc
mov
test
nop
jno
xor
cli
mov
mov
inc
pushf
inc
jmp
data16
scas
hlt
and
int3
xchg
adcb
out
call
jne
mov
sub
pop
adc
in
jns
enter
cmp
xor
xor
scas
mov
in
loop
mov
jbe
repnz
push
sbb
xor
cs
lock
dec
add
push
dec
or
aaa
inc
jg
adc
pop
xlat
subl
xchg
add
je
fidivl
push
cmp
xor
insl
out
or
sub
lcall
xlat
cmp
jb
cmpsl
pop
cmp
push
fwait
xorl
in
cmpsl
fcoms
adc
or
xchg
lds
sbbl
shlb
std
shlb
dec
test
inc
pop
dec
jecxz
sbb
pop
lea
inc
sub
cli
mov
xor
mov
mov
lods
inc
mov
aam
popf
mov
sbb
jp
lea
dec
test
dec
clc
rorb
jl
rcl
fisubrs
fwait
cld
movsb
sahf
pop
fcmovb
std
aas
lcall
xchg
xchg
inc
mov
sti
xor
aad
sti
js
lret
jmp
xchg
insl
mov
jne
xchg
bswap
jb
cmp
ret
mov
mov
or
je
and
outsl
out
int3
ljmp
gs
mov
jo
lods
js
xchg
and
pop
cmpsb
adc
mov
xchg
lds
xrelease
movsb
or
psadbw
aam
pushf
lds
imul
popl
jle
sahf
arpl
xchg
cli
test
in
push
jns
divb
sbb
shrb
aam
xor
cs
pop
jle
mov
mov
test
imull
xchg
in
les
cwtl
pop
dec
mov
mov
xlat
pop
or
imul
pop
add
jo
arpl
stc
outsl
rcl
insl
cmc
mov
mov
adc
movd
pop
mov
pop
mov
aam
push
xor
std
xor
sub
xchg
or
mov
dec
stc
mov
ss
jle
adc
push
jmp
mov
es
ja
push
push
fsub
testb
mov
sbb
pop
push
popa
daa
fucomp
mov
xor
inc
jne
or
xor
push
fstl
enter
in
dec
dec
sbb
push
sbb
xor
adc
lea
clc
dec
subl
in
repz
clc
cld
push
inc
mov
iret
rcll
fbstp
dec
pop
adc
cmp
sub
test
dec
cmp
pop
in
jne
dec
fistps
push
or
jno
jg
sbb
fs
xor
cli
mov
int
lock
lahf
fdiv
mov
sar
mov
push
or
and
add
scas
fidivrs
sbb
cwtl
mov
into
lret
sbb
in
sbb
xchg
xchg
mov
fwait
rclb
cmp
ja
cmp
and
xlat
xlat
addr16
jns
xchg
jns
jne
movsb
inc
cmp
sub
jecxz
jecxz
test
loope
ret
pop
fwait
mov
ret
in
es
mov
inc
nop
in
and
or
add
int
pop
pushf
aaa
sbb
push
fsubl
jmp
int3
es
rcl
dec
xchg
cmpsl
inc
das
pop
xor
jmp
ja
sub
test
sbb
cmp
fbstp
xlat
gs
ss
adc
dec
divb
movsl
push
cld
pop
sub
mov
add
sahf
mov
stos
and
inc
int
sbb
push
daa
cmp
inc
stos
insb
mov
pop
lds
aaa
jbe
out
add
mov
lcall
mov
jle
jnp
cmp
ja
and
mov
lret
mov
shl
xor
aas
sub
test
push
xchg
test
test
loope
insb
mov
pop
xchg
sti
mov
mov
mov
add
fildll
dec
cmpsb
lcall
push
xor
ss
jns
idivb
lods
ds
sbb
mov
fldcw
stc
add
movsb
dec
push
ljmp
in
ljmp
xchg
add
fstl
out
fsubr
and
dec
mov
push
xchg
xor
and
mov
mov
add
dec
jae
cmp
sti
fcmovu
into
es
cmp
insl
mov
pop
fstl
pop
push
imul
cmpb
fninit
jmp
aad
subb
jns
vpxor
jno
pop
stos
adc
in
adc
jg
cmp
nop
adc
nop
int3
mov
push
scas
aad
or
frstor
cltd
xor
int
mov
add
sbb
push
mov
sti
or
push
rcrb
mov
jl
into
into
cmp
jmp
fldt
mov
fwait
lret
das
imul
or
push
sar
mov
jb
scas
loop
fwait
js
sub
and
repnz
lods
mov
pusha
or
test
in
enter
mov
lret
jns
stos
in
and
xorl
mov
and
mov
inc
mov
pmaddwd
cmp
addr16
cmp
sbb
lds
jne
or
xchg
jno
jnp
mov
arpl
cmp
dec
fwait
mov
imul
mov
mov
inc
lds
out
arpl
shl
sbb
push
out
lods
mov
leave
jmp
and
out
xchg
inc
jo
outsb
insb
daa
pop
rcll
les
xchg
mov
jns,pn
test
aas
out
mov
les
jne
sarl
fiaddl
shrb
pop
lock
fwait
jecxz
xor
and
fwait
mov
inc
imul
fnstcw
ja
dec
push
out
gs
sbb
mov
popf
and
dec
iret
sub
push
adc
adc
lcall
sar
mov
pushf
xor
push
js
clc
push
shll
jns
ret
daa
or
inc
and
sub
cmp
adc
ja
std
call
dec
cmpsb
push
and
add
cmp
pop
lods
jmp
pushf
les
cmpsl
xchg
fsubrs
lds
xchg
std
ljmp
dec
lods
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
aas
adcb
cmpxchg8b
pusha
jge
orb
inc
bswap
pop
xlat
xor
push
cmp
add
mul
lret
inc
mov
inc
push
fnsave
push
fs
xor
mov
xor
pusha
and
or
rcr
or
pop
rolb
fbld
xlat
popa
and
leave
sub
pop
imulb
xchg
pop
sbb
and
add
aam
mov
jo
mov
bound
jbe
ret
jb
sub
cmpsl
cs
dec
xor
mov
push
mov
cmp
xlat
jge
inc
enter
addr16
and
xchg
cs
sti
inc
sbb
imull
add
inc
xchg
mov
inc
push
adc
mov
arpl
int
das
outsb
sub
mov
bound
sub
pop
popf
jb
in
jl
into
and
dec
inc
test
mov
inc
dec
cmp
jnp
fwait
int3
outsl
stos
pusha
jp
shrb
cld
mov
aam
loop
or
sub
lock
xchg
in
mov
sbb
jb
inc
leave
mov
imul
test
orb
std
insl
loopne
push
shlb
mov
dec
xor
std
dec
mov
xor
inc
stos
mov
rcl
stos
and
into
xlat
mov
aas
mov
scas
mov
lret
or
pop
xor
mov
push
adcl
stc
call
mov
mov
fisttps
mov
test
xor
mov
mov
andl
in
lods
mov
kmovw
fcomi
cwtl
sarl
int
push
xchg
xorl
std
xor
push
clc
stc
xchg
lods
aaa
push
cmp
insl
adc
jns
and
sbb
jne
pop
push
lods
sub
repz
sub
mov
in
imul
and
aam
xchg
imul
enter
mov
test
jo
aam
mov
les
mov
jb
lods
andb
js
aam
adc
push
xchg
jl
mov
sbb
outsb
clc
inc
popf
out
jmp
pop
and
or
js
push
outsb
or
hlt
stos
loopne
std
dec
shrb
pushf
out
or
and
cmpsl
lcall
adc
lds
inc
fildl
loop
sahf
push
dec
aas
es
arpl
stos
or
push
rcll
mov
xor
mov
int
inc
test
sbb
sbb
cmc
lret
rorb
mov
daa
mull
push
push
iret
ss
push
rcrb
rcrb
es
cmpsl
push
jo
xchg
xor
add
jmp
mov
mov
addr16
pushf
imul
lods
addr16
std
das
mov
push
insl
rclb
adc
aaa
das
pop
cmp
inc
mov
lods
mov
addr16
jo
mov
adc
push
fmulp
pop
sbb
jl
adc
push
cld
test
loopne
mov
mov
jle
fs
jb
shlb
int
and
scas
rolb
add
dec
xor
cld
push
xor
mov
out
or
ljmp
fildl
and
fidivrl
mov
pusha
and
aaa
mov
jl
rorl
mov
in
xor
fs
jae
xlat
cmc
inc
adc
adc
cmpsb
mov
or
xchg
repnz
dec
mov
mov
jl
mov
loop
jp
clc
push
adc
mov
dec
xrelease
xchg
push
xchg
rorl
push
xchg
and
jge
jb
cltd
adc
cmp
out
xor
loopne
in
or
out
push
jg
mov
sarl
shl
sti
pop
dec
xchg
sub
push
add
rorl
movsl
xor
loope
sbb
inc
mov
mov
add
ss
lahf
aad
in
mov
and
repz
and
clc
je
inc
addr16
add
or
or
sbb
addr16
in
jp
out
loope
pop
jns
jne
add
out
stos
add
shlb
add
mov
sub
sarb
rep
mov
jae
gs
inc
adc
push
movsb
cmp
jo
imul
les
sub
lcall
out
dec
mov
push
aam
enter
fsts
pop
jmp
mov
fisttpl
outsb
push
xor
aaa
pop
jp
movsb
sub
mov
mov
mov
mov
imul
sbb
push
lahf
push
add
inc
std
inc
mov
arpl
leave
xchg
push
stos
int3
je
xchg
inc
add
lret
pusha
dec
or
int3
push
mov
or
loope
mov
add
mov
in
jns
mov
cmpsl
pop
jb
jo
push
lods
sub
rcll
fcompl
dec
mov
decb
sbb
sub
push
cmpsl
cmp
cmc
jo
shl
xchg
enter
push
ret
cmp
jnp
inc
int3
dec
cmp
cwtl
jl
mov
fisttps
pushf
lds
or
or
pop
push
jg
scas
test
fbld
pop
xchg
cs
inc
pop
fcoms
outsb
and
cmp
mov
int3
xor
fcoms
cmp
pop
mov
cmp
lret
mov
enter
push
stc
loope
in
stc
dec
push
push
xchg
cmc
popa
xchg
addr16
mov
lret
sub
fisubl
jl
fidivrl
rep
pop
in
mov
sahf
cmp
mov
pop
push
inc
loopne
mov
mov
imul
push
das
xor
and
subl
push
lock
in
add
out
shl
sub
in
iret
and
pop
insl
lock
gs
sbb
cs
enter
xchg
mov
xchg
fsubp
scas
std
xor
enter
push
stc
clc
bound
aaa
lcall
insb
mov
cmp
xlat
xor
and
mov
rorl
jecxz
push
lahf
addr16
cwtl
in
pop
movsb
in
xchg
dec
pop
push
jl
imul
push
adc
fdivrl
and
sub
lods
or
jnp
imul
int3
xchg
jns
cmpsl
jo
stc
imul
mov
imul
add
ds
cmpsb
into
cwtl
fists
movsb
xchg
mov
mov
pusha
mov
inc
or
arpl
es
jb
and
gs
jbe
jo
pop
cwtl
push
call
pop
or
lods
sub
iret
fidivrs
adc
adc
insb
jbe
cmp
testl
aad
jnp
fucom
jno
sbb
int
test
push
lahf
add
insb
xchg
pusha
and
xor
pushf
jbe,pt
loopne
iret
sub
adc
test
adc
into
imul
inc
rcrb
sub
ds
cmp
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
test
adcb
js
mov
shll
jge
mov
and
xchg
addr16
test
ja
test
int3
dec
scas
fldt
call
push
aas
dec
adc
pushf
cmp
sub
lods
in
lock
int3
dec
outsl
mov
je
and
mov
data16
pop
lea
and
mov
in
add
pop
sti
xor
outsl
or
push
jg
xchg
dec
shrl
out
arpl
neg
xchg
arpl
mov
arpl
arpl
sbb
adc
xchg
push
lea
adcb
aaa
xchg
insb
xchg
xchg
out
ret
in
loopne
jae
mov
lret
cmp
divl
cmp
sub
rcl
outsl
fwait
jecxz
ficomps
pushl
cmp
pusha
leave
sub
lods
insb
xor
mov
dec
shlb
test
idivb
xlat
mov
pop
sub
imul
insl
fadds
and
xchg
fwait
xchg
adc
xor
push
push
cld
jne
xor
jmp
sbb
je
mov
movsb
cmp
movsl
into
ficoms
dec
mov
cld
xor
andb
or
fmull
or
jmp
xor
scas
sbb
pop
mov
sub
sahf
add
cmp
cmpsl
push
mov
aaa
movsb
popa
xlat
sahf
fistpll
idivb
add
jb
mov
lea
in
cmp
enter
jb
xor
add
jne
lret
jmp
sbb
jge
mov
or
xchg
add
ss
jg
mov
or
sbb
gs
mov
pop
pop
fldl
xchg
pop
js
fildll
cmc
scas
leave
dec
rcl
inc
add
sbb
and
rcrb
sub
pop
movsb
fidivs
scas
incb
push
cmp
jne
shll
fisttpl
jne
xchg
add
imul
or
xchg
add
xor
xchg
push
inc
cmpsb
xlat
mov
pop
jecxz
movsl
stos
xor
adc
clc
dec
popf
add
jbe
and
imul
xchg
jg
dec
icebp
pop
add
push
xor
bound
push
gs
negb
sub
pop
test
push
cs
imul
push
xor
cmp
pop
stos
push
push
jno
fs
mov
add
xor
out
and
cmpsl
sub
jo
sbb
dec
xchg
dec
and
inc
pop
ss
adc
lea
xchg
sub
xchg
inc
xchg
jo
int
leave
lods
and
gs
adc
enter
out
adc
fwait
je
mov
inc
jmp
adc
mov
add
and
stc
rcr
dec
adc
and
xor
daa
into
sub
fmulp
jb
sub
leave
aas
mov
mov
pushf
stos
movsb
add
lret
lcall
outsb
adc
xchg
cmp
cwtl
inc
xchg
pusha
sub
pushf
xor
cmp
roll
sub
fcoms
jge
sbb
jp
dec
xlat
imul
or
ss
mov
lods
ficoms
or
xor
jnp
mov
push
aad
ss
popa
sub
leave
mov
arpl
xor
add
mov
inc
loop
imul
idiv
pop
cwtl
lcall
repnz
call
add
pop
fcoms
sahf
outsb
jno
adc
mov
xchg
xchg
js
cmc
neg
gs
adcl
lahf
mov
jae
jne
data16
mov
xor
push
mov
shrl
push
ja
bound
lock
inc
add
scas
outsb
std
pop
lods
mov
xor
lds
push
or
xchg
adc
insb
movsb
push
sub
lods
sahf
inc
or
ret
sarb
inc
jnp
lcall
cmp
in
inc
ds
add
adc
jecxz
jno
test
xchg
or
int
scas
fisubs
fcompl
lds
les
call
jmp
scas
push
addr16
out
popa
jno
repnz
enter
roll
mov
sbb
ret
sub
and
pop
jae
xor
testb
inc
sbb
cs
jecxz
imul
dec
aad
jnp
mov
lret
leave
inc
int
mov
jb
mov
pop
aam
sbb
lds
out
iret
lahf
cmp
xor
loop
testb
les
cmp
cmc
cmp
imul
aas
call
push
sbb
adcb
repz
in
pop
cltd
sub
add
in
aad
push
add
orb
lea
cli
mov
in
fcoml
fdivr
int3
jbe
push
push
dec
xor
add
push
jmp
cmp
jmp
mov
call
mov
sub
lods
pop
stc
dec
inc
xchg
sbb
int3
pop
and
js
inc
cli
mov
gs
mov
lcall
stos
pusha
repnz
add
mov
out
data16
aaa
fildl
in
dec
cmpsb
mov
faddl
das
loop
push
adc
mov
fisttpll
divb
sub
mov
mov
sarl
push
jl
jns
repz
adc
mov
add
xchg
addr16
or
frstor
daa
adc
xor
sub
jns
xor
sub
insb
mov
fstps
imul
lods
iret
inc
inc
push
sbb
sbb
cmpsb
pop
lahf
xor
mov
js
push
push
cmp
or
fcoml
int
out
push
add
xor
cmc
or
xor
shlb
cmpsb
rcll
je
jno
mov
sub
adcl
mov
pop
mov
mov
das
cwtl
enter
dec
or
pop
mov
add
push
pop
imul
jl
push
aaa
sahf
pmulhw
push
fiaddl
fidivs
imul
insb
cmp
loop
push
cli
dec
xchg
mov
cld
sahf
adc
or
lock
sbb
int3
jp
adc
add
lods
mov
fistpl
negl
sbbl
adcl
sub
mov
sbb
out
and
and
sub
push
jmp
and
add
pop
jge
adc
jle
nop
insl
mov
repnz
shll
lcall
lds
xorl
repnz
inc
xchg
cltd
pop
pop
sarb
or
dec
and
cmc
xchg
xor
lret
push
mov
inc
add
js
inc
mov
sub
data16
mov
inc
cmpsb
mov
mov
cmc
xor
xchg
cwtl
mov
ret
popf
sub
clc
sub
xorb
sahf
pop
push
xchg
outsl
das
stos
cmp
push
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
leave
sarl
cwtl
out
ja
testl
sub
inc
loope
add
xchg
adc
in
ret
popa
xchg
and
ret
xchg
adc
icebp
addr16
lret
jbe
adc
and
repnz
mov
mov
imulb
cmpb
es
stos
xchg
sahf
out
dec
sbb
and
fbld
push
lahf
adc
push
lock
lods
scas
jnp
xor
mov
jge
adc
push
mov
inc
dec
jo
jecxz
pop
mov
jmp
je
mov
daa
shr
or
inc
std
arpl
pop
arpl
cmp
pop
dec
lock
cmpl
add
xchg
sbb
mov
sbb
cmp
mov
clc
call
push
xor
sub
pop
pop
cmp
jle
andb
xor
stos
ss
dec
sahf
push
jne
fldcw
or
xacquire
jno
lods
mov
in
and
mov
xchg
test
fsts
repnz
jge
xor
pusha
push
dec
cmp
lcall
fnstsw
jp
cltd
fnsave
jge
dec
jnp
inc
adc
mov
sbb
ds
les
xchg
sbb
ljmp
jmp
pushf
insl
and
ljmp
mov
dec
mov
std
adc
pop
add
xor
and
cld
xchg
dec
add
and
aaa
adc
lods
xchg
sub
inc
loop
xchg
and
rcll
mov
jb
and
pop
clts
enter
test
int
mov
call
es
push
add
xchg
push
aad
sahf
and
mov
comiss
jo
inc
add
aad
fistpll
aad
mov
jg
and
jb
push
mov
gs
insb
scas
insb
add
ret
cmp
gs
mov
add
push
mov
stc
jg
rcrl
cmpsb
jmp
rcrl
pop
add
sub
jne
loope
ret
pop
sbb
js
or
and
xor
xchg
push
mov
mov
test
mov
xchg
decl
jo
adc
nop
movsb
cltd
or
lret
fstpl
ret
lods
mov
pop
add
cmp
dec
and
dec
arpl
scas
sbb
inc
and
fdivs
xor
jne
imul
xchg
movsb
ret
inc
sbb
in
or
popf
xchg
xor
jmp
sub
sbbl
or
test
imul
lods
sbb
rcrl
movsl
xchg
pusha
adc
jno
cmp
bound
cmp
jp
aas
xor
mov
or
addr16
push
sti
pop
mov
fwait
dec
sub
cmp
das
jg
xor
add
mov
into
or
push
movsb
pusha
pop
sub
add
nop
push
mov
out
pushf
dec
mov
shl
cltd
roll
jo
sahf
pop
repnz
out
dec
mov
jge
ret
or
idivl
sub
int3
ficoms
adc
push
sbb
in
pop
push
xchg
push
jno
scas
mov
sub
inc
mov
push
mov
outsb
gs
loop
fisubl
inc
mov
pop
fbld
daa
loope
lret
dec
hlt
iret
int3
cmp
xor
dec
push
mov
or
sti
int
sbb
aam
sbb
fmuls
clc
packuswb
mov
pop
je
movsl
adc
cmp
cld
leave
pop
mov
xor
cmp
sbb
rcrl
ljmp
insb
sbb
andb
popa
cmc
push
push
inc
clc
test
ja
sub
int
or
push
add
mov
pop
fwait
and
adc
mov
test
inc
jb
outsl
icebp
xor
rcl
add
pop
push
clc
add
pop
cmc
out
mov
jb
fldenv
aas
cmpsb
sbb
dec
mov
pop
xchg
les
fxch
in
push
push
push
sub
mov
xchg
test
jnp
cmp
mov
sbb
pusha
push
rorb
dec
cs
push
int3
mov
dec
sub
xchg
pcmpeqd
push
imul
sbb
xor
push
addr16
lods
insl
push
mov
call
lret
decl
xchg
mov
mov
sbb
adc
leave
ss
mov
inc
das
push
inc
clc
pushaw
lret
cmp
mov
out
pop
int
out
fwait
imul
aaa
xchg
fwait
mov
sti
psraw
mov
mov
hlt
pushf
mov
adc
dec
ficompl
mov
loopne
or
ficomps
pop
jp
adc
loope
test
shll
data16
outsb
lods
repz
mov
sti
xchg
insl
add
jge
pop
les
adc
sbb
dec
add
and
rorb
push
jmp
push
adc
mov
clc
or
push
sti
sub
mov
into
in
fldt
pushf
cld
push
add
inc
mov
in
rorl
sub
pusha
jbe
dec
mov
ficoml
cmpsl
popf
xor
sbb
push
pop
idivb
sub
shl
add
mov
add
add
dec
jnp
mov
fidivl
fnstenv
addl
jnp
and
stos
sub
imul
shll
cmp
popf
stc
jmp
outsl
sub
sbb
dec
xchg
popa
jle
xchg
or
or
out
iret
sahf
in
cmp
jmp
push
lcall
xchg
mov
in
data16
xor
jle
mov
add
inc
fstpt
push
push
sbb
mov
mov
dec
push
jg
mov
dec
xchg
mov
mov
jbe
test
fldenv
mov
xchg
jmp
repz
push
xchg
aam
cmp
and
sahf
clc
mov
push
lret
cmc
fisubrs
loop
loopne
fmul
xor
shlb
subb
mov
enter
popl
ljmp
popa
xchg
imul
jb
dec
into
push
adc
xlat
rcrb
jno
mov
sub
mov
fs
mov
ret
push
mov
sbb
xor
orl
adc
test
test
ljmp
imul
mov
push
pop
sub
arpl
lods
out
sbb
add
ljmp
pop
adc
push
lea
mov
jge
mov
lret
jbe
sub
mov
sub
add
mov
arpl
lods
push
fldt
mov
mov
test
xor
inc
adc
les
adc
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
xchg
xchg
jmp
das
aam
ja
adc
dec
mov
jns
pop
dec
add
pop
add
sub
daa
and
fs
xchg
lods
jl
push
push
mov
out
fldcw
icebp
sbb
outsb
lea
fs
jne
lret
test
push
rcll
lret
call
push
adc
mov
adc
and
cmc
jg
cmpsb
aad
hlt
jns
inc
push
fs
fistpll
xchg
cmp
aad
jo
push
repnz
mov
or
pop
jbe
and
mov
inc
pop
add
pop
mov
fidivs
test
icebp
out
or
test
and
jo
fs
xchg
push
push
pop
ret
mov
xchg
and
dec
mov
rcrl
push
loop
lret
xchg
or
outsl
fstpt
cs
pop
mov
xor
pop
mov
out
ja
das
ds
out
aam
mov
dec
xor
add
gs
jo
outsl
jg
add
adc
mov
sub
and
mov
test
add
sbb
sub
inc
fistps
xor
arpl
fnstenv
cli
pop
push
rcr
adc
jo
jno
ss
xchg
jge
test
mov
loope
loope
dec
int
outsb
js
jecxz
out
jo
int3
xor
test
jno
daa
cmp
and
cmp
sbb
mov
fcom
iret
dec
ds
jno
aas
ja
popa
in
cwtl
les
in
mov
movsb
test
test
mov
sarb
inc
lret
test
inc
cmpsl
sub
cli
cs
es
out
mov
pusha
xchg
outsl
out
ds
stos
into
lds
and
jb
test
loop
pop
and
fwait
aas
in
cmp
xor
es
xor
sub
std
into
jbe
shr
and
popa
lcall
insw
push
adc
jae
pusha
out
xor
ror
xchg
pop
mov
adc
xchg
jl
push
push
mov
loope
sub
ja
ffreep
outsb
subb
adc
leave
pop
add
ret
ja
pop
pop
jp
in
shll
jo
int
jbe
xchg
mov
xor
icebp
test
aaa
xchg
fs
or
jne
lcall
ret
ret
mov
mov
or
and
mov
nop
imul
scas
iret
mov
cmc
and
imul
xchg
lahf
loopne
add
cmpsb
rorb
dec
aas
mov
icebp
stos
mov
ss
and
inc
mov
aad
fwait
or
push
test
jl
mov
imul
lods
fistl
movsl
cmp
bound
js
jg
mov
mov
or
rorb
xchg
mov
pop
push
xchg
push
es
push
push
es
sub
int3
inc
test
test
lcall
movsb
xlat
jp
lret
sbb
ret
mov
scas
jno
das
push
fidivrs
add
and
push
jno,pn
jae
loopne
push
test
in
lds
insb
cmp
jecxz
xchg
nop
sbb
pop
xor
xchg
mov
sbb
inc
outsl
mov
ret
loop
fldenv
mov
cmp
inc
mov
xor
fistps
stc
jns
les
ds
sub
lcall
ja
popf
enter
mov
repnz
aas
cmc
dec
xor
push
mov
fldl
pop
scas
mov
sbb
and
fmuls
xchg
mov
adc
adc
xor
aad
imul
xchg
ret
pop
enter
subl
or
repnz
in
mov
or
movsb
dec
into
les
movnti
jmp
out
add
and
and
pop
and
std
fisubl
lea
adc
dec
cmpsb
pop
lcall
inc
cmpl
push
and
sbb
jle
in
jmp
pop
sahf
xor
cmp
dec
mov
dec
adcl
rol
xchg
or
test
outsl
inc
sahf
fdivrl
sbb
stos
aam
lea
call
sbb
negb
shlb
int3
sub
and
les
popf
leave
scas
cwtl
cmp
sbb
cmc
movsb
cmp
shl
fucomip
es
loopne
test
cmpb
push
rcrb
pop
lret
ret
les
test
add
movl
hlt
mov
xlat
clc
inc
fidivrs
icebp
sub
lods
cmpsb
xchg
lock
lock
data16
dec
popa
sub
stc
cmc
mov
sub
lret
clc
mov
jle
push
and
jmp
aas
popf
inc
lods
insl
inc
int3
cmp
and
or
xor
mov
std
ds
xchg
sub
hlt
inc
cld
xchg
cli
stos
ret
push
fucom
mov
pop
sub
popf
out
addr16
sti
adc
lret
jne
lea
pop
shl
jno
mov
sahf
mov
cwtl
jge
fldl
cmp
ja
cwtl
or
gs
pushf
jmp
add
pop
mov
push
fistpl
pop
or
mov
mov
jb
pop
sbbl
sub
rcll
dec
xchg
repz
jecxz
sbb
lret
cmp
lret
iret
pop
mov
push
lahf
in
or
xchg
nop
adc
shlb
cltd
pop
inc
mov
push
inc
sbb
jb
mov
arpl
adc
ljmp
dec
mov
and
push
push
xor
or
repnz
inc
inc
stos
pusha
dec
push
xor
push
in
iret
mov
scas
push
dec
loopne
mov
dec
inc
loopne
outsb
shll
sbb
cmp
cs
jmp
adc
inc
mov
push
mov
bound
xchg
mov
cltd
jmp
rcr
inc
hlt
data16
xor
mov
xchg
fisttps
adc
mov
lahf
xlat
mov
cmp
iret
sbb
sub
xor
jmp
lahf
adc
out
jmp
cwtl
add
dec
pop
push
test
push
hlt
mov
jb
pop
sbb
jbe
push
idiv
push
div
pop
push
mov
xor
mov
pop
xchg
pop
cli
dec
in
repnz
xchg
xchg
inc
inc
cmp
inc
clc
scas
hlt
pop
repz
or
mov
mov
fidivl
xlat
cmpl
pop
pop
lods
icebp
dec
outsl
cmp
jo
cmpsb
sub
jnp
loopne
dec
sti
sbb
mov
xor
xlat
repz
lods
and
add
jp
sub
icebp
dec
xor
ret
jl
cmpsl
push
sub
mov
aam
mov
aam
xchg
je
clc
adc
dec
cmp
dec
sub
pop
in
xchg
aaa
pop
xchg
cmpsl
imul
lcall
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
stos
pop
pop
adc
ret
sub
and
xor
and
pop
cmp
mov
mov
jns
add
mov
pop
inc
xor
jge
mov
test
hlt
mov
cmc
cmp
xchg
test
outsl
cmp
dec
hlt
fldl
je
inc
xor
and
hlt
ja
xor
pop
inc
pushf
mov
mov
push
mov
pop
inc
shll
out
sbb
in
xlat
inc
cld
mov
adc
xchg
sbb
std
ja
insl
xor
pop
arpl
mov
mov
xchg
ljmp
or
sbb
and
rcrb
insl
cmc
imulb
and
sbb
rol
dec
sub
in
cmp
push
add
lock
inc
dec
or
insb
lcall
imul
int3
hlt
sbb
test
lahf
push
push
into
jle
out
adc
inc
adc
xchg
sub
xor
addl
sahf
mov
sub
dec
dec
inc
incl
xor
xchg
jge
aaa
sbb
inc
mov
push
sbb
sbb
sub
testl
out
in
inc
inc
add
ficomps
das
std
adc
loope
push
xor
add
jo
cmpsl
loop
shrb
mov
dec
out
fwait
dec
mov
cmp
push
arpl
stos
movsb
in
into
test
cld
aas
pop
or
dec
ja
loopne
or
cmc
mov
nop
cltd
insb
fbstp
or
out
iret
stos
xor
mov
pusha
insb
mov
xor
fwait
push
rorl
xor
outsl
les
sub
dec
mov
roll
cmp
mov
fisttps
rcrl
xor
flds
adc
loopne
inc
xorl
sarl
dec
outsl
push
and
xor
xchg
leave
int3
mov
xlat
push
jge
sub
xor
daa
dec
ja
xlat
mov
rcrb
mov
test
lahf
cs
mov
adc
or
pslld
xor
mov
adc
sbb
push
mov
frstor
or
mov
sbb
mov
inc
push
punpckhdq
mov
push
mov
rclb
pushf
inc
sbb
mov
loopne
lds
pop
and
jb
mov
mov
jmp
cmp
lock
push
and
sbb
out
fwait
inc
xchg
shl
mov
dec
inc
xchg
push
subb
subb
pusha
cmp
js
mov
pusha
pop
fadds
dec
xor
or
stos
mov
int3
push
out
cli
test
repz
or
loop
loop
mov
lret
movsb
cmpsb
fwait
jle
js
inc
imul
movsb
mov
test
aad
mov
mov
sahf
adc
mov
inc
pop
sbb
push
mov
mov
loop
mov
pop
aad
xor
adc
test
aaa
xor
xchg
std
movsb
int
lret
imul
ja
push
addr16
xorb
inc
mov
xlat
or
sbb
ljmp
inc
fisubrs
pop
stc
cmc
push
nop
push
pop
arpl
ja
cmpsl
xchg
arpl
insl
mov
pop
lret
in
jp
aaa
jno
decl
sbb
and
lods
jl
std
pop
adc
xchg
xor
xlat
cmp
inc
mov
adc
mov
jo
push
dec
lret
inc
scas
fidivl
inc
sub
xchg
pop
js
push
sbb
add
sbb
sbb
imul
xchg
cmp
push
lods
data16
out
dec
dec
insb
lock
inc
xchg
mov
push
int3
shl
and
inc
push
gs
inc
imul
mov
idiv
push
enter
or
das
mov
push
aam
adc
jle
jle
sbb
pop
shlb
sub
mov
sub
out
jno
adc
jmp
leave
rcrl
mov
mov
mov
adc
xchg
sbb
jg
imull
dec
icebp
lock
stc
ja
inc
inc
mov
push
add
adc
add
inc
mov
mov
fcompl
push
xchg
leave
imul
inc
repnz
jne
pop
sub
bound
xchg
mov
iret
push
mov
mov
pusha
mov
or
xor
mov
jl
repz
xchg
outsb
add
mov
and
sub
into
popf
or
cwtl
jge
and
sbb
xorps
pop
cmp
jbe
mov
jnp
in
mov
mov
pop
push
pushf
adc
daa
sub
jns
xor
mov
in
es
cmp
pop
mov
lret
cmpsb
pop
fwait
push
addr16
sbb
leave
ljmp
or
mov
movsb
rorb
jecxz
insl
in
cltd
cmp
pop
add
pop
cmpsl
into
adc
mov
cmpsl
mov
insb
adc
mov
loope
xor
inc
into
shll
add
dec
out
out
add
adc
mov
pop
push
stos
sub
fdivl
std
outsl
shlb
dec
push
adc
int
inc
repnz
mov
mov
sub
push
jmp
lahf
inc
cmc
arpl
dec
xor
pop
mov
or
int3
xor
mov
jl
pop
add
scas
sahf
jmp
loop
dec
shrl
in
leave
in
rcrb
shlb
iret
leave
popf
adc
or
rolb
jae
xor
push
clc
xor
and
jge
mov
lods
dec
pusha
pop
push
pop
push
and
cmp
fstpl
enter
es
int
fadds
ljmp
jno
imul
mov
push
jmp
mov
fcompl
outsb
insb
mov
sub
xor
inc
dec
cmpsb
pop
xor
arpl
or
scas
adc
cmp
test
sbb
inc
iret
int
xor
or
movsl
int3
pop
enter
add
mov
fwait
pushf
or
sbb
xchg
lods
lds
pusha
in
mov
pop
lock
test
push
pushf
sub
adc
ds
dec
dec
mov
mov
mov
sbb
lret
dec
inc
adcl
and
mov
mov
popl
cld
pop
jge
popf
test
add
pop
or
cltd
jbe
lods
repz
cmc
xorl
xor
jge
test
mov
js
loop
jg
fs
lock
out
test
scas
in
mov
adc
dec
es
das
scas
insl
mov
add
les
popf
cmp
mov
out
sbb
inc
popa
inc
adcb
mov
or
pop
popa
mov
and
pop
fisttpl
cs
xor
aas
mov
xlat
ret
jge
je
xchg
push
into
dec
and
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
lret
fimull
mov
ja
fcoms
pop
and
outsl
lea
sbb
lods
xchg
or
inc
and
out
inc
inc
fs
dec
xchg
out
outsl
mov
insl
call
outsl
sub
leave
sbb
mov
xchg
andl
adcl
sub
andb
sbb
iret
push
mov
dec
dec
xor
adc
mov
or
aad
push
xor
cmp
fistpll
pop
pop
pop
lods
inc
test
push
insl
xor
push
inc
adc
in
jl
icebp
xchg
pop
xchg
gs
inc
and
mov
pop
inc
pushf
test
pop
xor
mov
aam
nop
push
in
cmc
mov
mov
js
imul
int
jnp
mov
test
repz
dec
repz
or
xchg
sbb
lock
inc
outsl
mov
jnp
lahf
push
leave
cmp
xchg
or
in
fiaddl
jge
adcb
test
push
scas
jnp
gs
jg
into
loop
lea
xchg
jle
fucomi
sub
rcrl
imul
dec
mov
jnp
ficomps
arpl
data16
lret
pusha
mov
shl
push
je
xor
stos
mov
ds
xor
sbb
lahf
add
fmul
outsb
dec
mov
mov
addr16
cld
pop
cli
push
jge
jl
cmp
imul
push
aam
jno
xchg
inc
inc
cs
inc
fcoml
cld
mov
cmp
xor
icebp
push
repz
mov
int3
or
addr16
popa
jmp
inc
ljmp
cli
js
sbb
jl
inc
dec
dec
xchg
push
out
test
xor
sbb
pop
jge
jge
fistps
fwait
dec
lret
sti
gs
in
jae
mov
pop
mov
push
test
sub
cmp
jno
sti
mov
aam
nop
fsubrl
jge
or
fidivrs
adc
test
je
adc
add
adc
test
cmp
outsb
std
imul
jge
mov
and
jmp
hlt
dec
push
jmp
adc
insl
sub
cmp
xchg
sub
pushf
sbb
cltd
inc
psubq
roll
jns
in
movsl
xchg
xchg
cmp
jns
shrb
cmp
inc
das
sbb
dec
out
xchg
inc
mov
push
lret
mov
stos
stos
in
jbe
fcmovne
addr16
ds
test
and
rep
jns
sbb
fnstsw
push
xlat
out
test
mov
mov
ljmp
clc
loop
popf
mov
add
in
jnp
push
and
mov
ret
adc
cmpsb
bound
mov
idivl
sub
mov
in
imull
in
xor
ret
xchg
pop
jbe
or
jg
fwait
out
pop
add
adc
pop
sub
bound
jp
cmc
xor
pop
add
clc
jle
push
jae
lret
ds
mov
adc
into
xor
sub
in
imul
add
les
test
sahf
pop
test
sbb
call
jbe
call
lret
inc
mov
shll
not
mov
inc
pop
clc
pavgw
iret
lahf
cmp
cmpsb
xchg
int3
movsb
hlt
out
mov
xor
sub
insl
or
aas
xor
enter
dec
mov
sub
imul
pop
mov
out
mov
fsts
out
cmp
loope
xor
testb
cmpsb
xchg
repnz
mov
jl
push
xchg
test
sub
nop
cmc
push
push
aas
aad
inc
mov
dec
jnp
pop
je
nop
gs
js
jp
data16
ja
sub
fimull
jnp
sti
shll
cmovs
pusha
jns
rcrb
data16
or
movsl
enter
js
imul
aad
jl
add
stos
and
adc
repnz
pop
and
cwtl
movsb
xchg
sti
mov
dec
sbb
cmpsl
rcrl
pop
mov
fstp
xchg
and
jmp
adc
cld
loop
sub
stos
fdecstp
mov
scas
outsb
pop
mov
sbb
cwtl
fxch
push
cwtl
xchg
mov
jae
daa
lcall
xchg
daa
les
icebp
mov
data16
cwtl
jmp
adc
mov
fs
push
and
fwait
inc
jo
out
sub
loope
das
add
and
lds
pop
cmp
frstor
in
cltd
shr
lods
push
xor
push
addr16
ds
xchg
inc
lahf
imul
pop
adc
ret
xor
sub
dec
pop
mov
lods
adc
and
xchg
and
in
push
movsb
dec
es
fcomip
jg
les
das
dec
pandn
push
pop
inc
cmpsb
std
xor
sub
mov
push
sub
movsl
pusha
sarl
jbe
xchg
or
sbb
inc
jnp
mov
lret
adc
loopne
dec
aam
paddusb
clc
pop
or
scas
call
loop
inc
jns
leave
rorb
pop
cmp
clc
test
iret
jg
mov
mov
and
ret
mov
lods
sub
lcall
and
mov
lcall
sbb
pushf
imul
xorb
add
div
jnp
xor
sub
xchg
pop
popl
idivb
ljmp
pop
vcvtpd2dqy
lods
out
lea
inc
gs
add
sub
add
add
push
or
inc
push
and
mov
fstp
nop
adc
aaa
dec
mov
sbb
pop
push
lods
rolb
sbb
int
movsl
jl
je
xchg
cli
push
fdiv
pushf
das
xchg
cmpsb
cmp
mov
mov
ja
testb
lods
push
push
push
fcmovu
ret
testb
lds
adc
pop
scas
in
pop
cltd
cmpsb
outsb
cmc
daa
gs
dec
jnp
incl
movsw
out
jae
xor
iret
mov
jne
mov
sub
stc
xchg
subb
mov
adc
into
xor
jae
mov
jmp
mov
pop
mov
pop
dec
push
cwtl
pushf
and
mov
inc
aam
das
gs
jecxz
ret
adc
fs
movq
into
push
ds
fnstsw
je
and
adc
dec
pop
mov
clc
js
imul
mov
xchg
dec
sbb
ret
push
sub
nop
mov
loope
pushf
push
cli
mov
push
pop
inc
sbb
adc
scas
call
inc
sub
loopne
clc
shlb
adc
jns
and
in
ret
xorb
mov
and
loopne
test
data16
pushf
push
jo
jmp
push
imul
popf
jnp
les
cmp
out
adc
xchg
pop
outsb
popa
adc
cmp
imul
cmp
jbe
out
fmull
aam
mov
mov
shlb
dec
repnz
add
insl
shlb
inc
sub
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
ds
mov
xchg
nop
mov
in
mov
rcrl
mov
repnz
pop
mov
sub
mov
je
movsb
jge
je
jns
mov
lods
daa
shlb
sbb
xor
nop
lcall
popa
pop
int3
lret
push
or
xor
sbb
jge
or
jg
repz
sbb
jae
in
shll
xor
clc
jle
pushf
push
mov
mov
mov
jg
cs
addr16
jae
pushf
test
sbb
dec
std
cltd
pop
rcll
daa
push
sub
jp
cmpsb
push
adc
in
xchg
out
sbb
push
xchg
jge
fwait
xor
aas
sbb
aas
iret
lock
sub
repnz
cmp
nop
enter
inc
pop
sbb
pop
mov
sbb
nop
mov
push
inc
adc
dec
in
push
push
dec
xchg
cmp
and
mov
or
jns
xor
cmp
push
movsb
shlb
and
sub
push
stos
iret
jmp
sbb
mov
in
mov
sbb
jno
inc
sbb
adc
iret
cmp
lcall
xchg
add
enter
pop
icebp
enter
push
pushl
mov
mov
jmp
lret
sub
cli
shl
mov
cmp
imul
jbe
cmpsl
sarl
addr16
stos
loopne
in
loop
jno
sub
jno
push
cmp
mov
xchg
aam
pop
cltd
add
jo
mov
dec
jecxz
xchg
test
xor
mov
mov
pop
nop
mov
out
hlt
push
push
sbb
xchg
cmpsb
pop
lea
jecxz
cs
push
outsl
sub
or
add
sbb
or
je
popa
orl
and
std
in
lds
mov
ds
sub
adc
test
xor
rcr
inc
popf
in
dec
sub
mov
aaa
cmp
popf
ret
test
call
mov
push
pop
repnz
negl
sbb
xor
or
test
inc
xchg
in
push
pop
dec
push
aam
sbb
mov
cmpsb
and
jnp
out
out
pop
xchg
dec
xchg
dec
lcall
cmp
or
push
inc
fcompl
aam
lock
mov
push
mov
rorb
cld
adc
cld
inc
adc
imul
and
and
mov
testb
dec
adc
push
mov
inc
xor
ret
mov
enter
popa
in
addr16
in
add
push
mov
jno
lret
ss
xor
iret
das
out
adc
cltd
adc
lods
data16
xor
fdivrl
out
lea
dec
enter
loope
mov
dec
jp
lods
lods
inc
or
xchg
mov
fildl
sub
or
cld
aad
and
std
sub
movsl
imul
push
imul
pop
fucomp
lea
roll
mov
adc
cmc
fwait
add
into
inc
push
jl
jb
push
pop
sbb
xchg
lock
jbe
adc
cmp
xchg
xor
movsb
jbe
int
add
inc
or
ljmp
inc
add
xchg
add
jnp
popf
imul
lret
ret
mov
pop
add
pop
mov
mov
js
sbb
pusha
movsb
mov
xor
dec
cmp
fs
mov
cmp
fbld
cmp
cs
push
es
xor
add
mull
mov
xchg
cltd
adc
negb
popf
xchg
std
lods
push
push
les
cmp
icebp
adc
cmp
pop
lods
add
jnp
mov
fidivl
pop
outsb
and
shlb
inc
pop
add
inc
mov
xor
dec
scas
scas
mov
dec
sbb
test
push
lock
pusha
iret
adc
cmp
movsb
movd
lods
cld
je
xor
ljmp
call
aas
pop
adc
cmp
mov
movsb
test
sti
ret
push
les
sti
loopne
into
gs
pop
jge
pop
xchg
xor
in
sbb
xchg
sub
ret
inc
mov
add
movsl
mov
cli
push
jb
mov
into
add
inc
sbb
icebp
mov
ja
push
pop
mov
adc
or
in
adc
pop
sahf
outsl
and
cmp
in
std
ja
mov
jle
mov
icebp
mov
stc
jbe
rolb
lcall
push
aas
mov
adc
pop
pop
pop
cli
push
cmpsb
or
xor
push
jae
pushf
xchg
scas
xchg
fcoms
or
or
leave
sbb
loope
xchg
shrb
mov
cld
es
sbb
mov
inc
and
mov
sbb
xchg
ds
scas
movsl
mov
sbb
mov
pop
jno
sarl
fwait
xor
mov
subb
cwtl
sub
push
sub
je
xchg
shll
xchg
mov
jno
pop
loope
jnp
adc
dec
mov
add
fiaddl
fidivrs
jmp
xchg
jmp
lea
jle
jae
dec
add
cmpsl
fwait
insl
aas
jne
and
jecxz
std
sub
rcrb
mov
cmc
scas
add
sub
popf
push
cwtl
test
xchg
stc
insb
sarb
bound
xor
hlt
cmp
call
sub
mov
int3
stc
pop
mov
test
orb
jge
pop
adc
jns
fstpl
es
and
inc
inc
inc
xchg
rorb
and
jp
jb
sbb
lret
test
stos
sub
sbb
dec
dec
add
pop
test
push
mov
es
mov
xor
out
add
cmpsb
repnz
jg
mov
fwait
das
outsl
jecxz
xor
dec
jge
inc
push
fstl
add
push
push
sub
mov
rclb
jge
sarl
sub
jg
jmp
repz
pop
data16
cmc
pop
push
jle
and
xchg
xchg
ret
sub
and
cli
jae,pn
adcl
mov
mov
insb
or
insb
out
rol
es
lcall
test
jae
std
popf
dec
push
mov
jmp
addr16
rorb
lret
sbb
jbe
stos
jae
push
mov
int
loop
popa
in
fisubrs
cmc
mov
sti
inc
lret
mov
push
fwait
xchg
and
push
sub
addr16
mov
mull
test
in
shll
add
test
jmp
xor
cmpsl
pop
iret
cmp
adc
add
nop
lods
xchg
outsb
ffreep
mov
mov
dec
mov
jbe
lods
push
or
jecxz
daa
pop
adc
outsl
lods
xchg
sbb
or
ja
xchg
stos
or
loop
xchg
cmp
push
imul
dec
in
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
arpl
dec
mov
ja
mov
mov
bsf
int
and
pop
inc
ss
adc
shll
mov
iret
outsb
mov
gs
mov
adc
std
fcoms
leave
mov
adc
xchg
push
mov
adcl
icebp
mov
adc
xchg
jp
push
data16
mov
xchg
in
mov
outsb
out
xchg
pop
push
aaa
scas
clc
clc
pop
hlt
mov
or
in
mov
loopne
jo
push
in
jb
mov
jne
xchg
or
jb
adc
pusha
sub
mov
notb
and
icebp
push
push
mov
in
push
fiadds
test
ret
push
xlat
and
pop
pusha
negl
imul
stos
cld
mov
push
sub
lret
fucompp
dec
or
in
lds
test
or
pop
fadd
roll
popf
and
or
adc
daa
dec
inc
insl
dec
xor
sub
adc
mov
or
adc
sub
idivl
inc
mov
mov
jns,pt
out
xchg
inc
xchg
xchg
jmp
inc
in
cs
sbb
add
dec
pop
daa
mov
mov
add
arpl
sbb
jne
mov
push
push
pop
lcall
jno
sub
ret
push
loopne
pop
jne
movsl
jbe
ficoms
imul
jb
scas
and
ljmp
lret
mov
jne
pop
mov
inc
fadds
adc
or
pop
in
cmc
ficoms
daa
or
cwtl
cmp
mov
pop
testl
pushf
aas
mov
mov
xor
mov
out
or
inc
pushf
gs
mov
rolb
movsb
push
dec
fs
jb
repnz
push
lea
stc
dec
push
test
std
dec
fwait
jmp
lock
movsl
push
mov
call
push
mov
int
cmp
jno
stos
icebp
cwtl
jo
add
mov
aaa
push
aas
loopne
mov
mov
push
cli
loopne
sub
adcl
and
js
sub
jns
sub
sub
in
or
ljmp
dec
sahf
notb
pop
fbld
fs
add
scas
lcall
and
outsl
cmc
adc
testb
sbb
sub
inc
sub
jmp
jnp
stos
fistps
dec
jmp
decl
rcll
std
daa
jp
mov
cltd
cwtl
mov
and
aaa
outsl
xchg
pop
je
mov
lock
sub
mov
leave
adc
and
in
lret
cmp
push
mov
fmulp
popa
cld
into
cltd
mov
mov
call
sbb
sti
sahf
popa
cmp
es
pop
sbb
mov
test
das
mov
mov
cmp
fcompl
mov
mov
xchg
iret
movsb
sub
dec
lcall
xor
mov
jmp
mov
mov
clc
mov
sub
sbb
sbb
jmp
movsb
lods
or
adc
xchg
in
std
js
inc
lret
loop
arpl
xor
jp
arpl
jp
movsl
dec
jmp
add
es
jae
xor
pushf
aad
mov
mov
fbld
jecxz
inc
jo
cmp
sbb
xor
notl
xchg
cld
push
cmpsl
pop
lret
mov
adcb
dec
sub
repnz
cmp
lds
fidivrl
and
enter
fidivrs
xchg
fwait
xor
bound
pushf
nop
push
pop
pop
dec
bnd
pusha
mov
popa
or
ljmp
out
xchg
or
ret
nop
stc
int
xchg
jo
test
mov
outsl
mov
out
xor
push
clc
fs
rclb
and
mov
ret
xchg
inc
dec
mov
cli
idivl
in
inc
pop
sub
mov
aad
aas
repnz
push
ret
and
mov
jne
xchg
outsl
pop
mov
sub
fcoml
adc
ficomps
adc
pop
into
mov
pop
ret
gs
mov
adc
mov
decb
push
loope
leave
inc
push
pop
push
es
inc
repz
dec
jge
fiadds
movsb
je
int
sub
clc
xchg
out
cmp
push
dec
fnstcw
add
mov
xchg
add
adc
push
xchg
mov
arpl
test
push
daa
nop
stos
roll
push
bound
xchg
add
sub
mov
shrl
lcall
jmp
lods
lods
sbb
mov
xchg
pop
lds
inc
add
stos
repz
jmp
shrb
movb
cld
lret
push
sti
repnz
lods
jl
lods
add
in
fnstcw
pusha
scas
notb
cld
mov
xor
sbb
jns
inc
sbb
add
sbb
sbbl
jo
jo
fstpt
adc
cmp
rclb
cmc
aam
add
aad
inc
push
insl
push
stos
lods
jae
mov
inc
adc
test
xor
inc
stos
call
outsl
ror
and
call
push
push
cltd
push
out
xchg
test
add
insl
into
leave
mov
cmp
mov
outsb
or
jne
mov
jp
mov
pop
fldenv
sbbl
arpl
out
and
ret
lret
mov
xchg
bound
enter
dec
jg
mov
jns
call
xor
ss
je
push
sub
add
inc
cwtl
lock
push
or
lahf
lret
sti
cmp
scas
pop
and
seta
je
std
and
pop
jo
or
pushf
mov
jne
ljmp
mov
cmc
pushf
pop
leave
jnp
insb
stos
push
jb
iret
inc
xchg
sbb
test
popf
ror
inc
and
leave
mov
mov
jne
adc
sub
mul
int3
aaa
jl
mov
sub
sarl
rclb
mov
push
fildl
mov
add
popf
mov
int3
jne
fstpl
ja
xor
mov
stc
stos
rolb
int
sub
aad
sarb
popa
and
ss
test
fsubrs
lret
fstpt
mov
and
jb,pt
js
fwait
in
mov
aaa
xchg
pop
clc
inc
jns
stos
inc
ss
test
addr16
xchg
int3
xchg
adc
pop
iret
pushf
sahf
sarl
call
insb
pop
lahf
cmp
int
mov
cmp
jmp
fldenv
push
fistpl
mov
pop
mov
test
mov
fisttps
jg
sti
test
jl
aaa
out
cmpsl
cmp
pusha
inc
jo
mov
es
lret
jb
push
mov
shll
sbb
push
cs
ds
lods
roll
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
loope
and
jp
ja
daa
out
in
jo
sub
inc
cli
int3
add
jg
cmp
push
add
in
scas
sahf
mov
jecxz
add
fmul
xor
mov
add
dec
xchg
mov
test
call
pop
push
cmp
push
adc
mov
jbe
mov
xor
sub
andl
movsb
mov
fstps
xor
push
call
and
popa
popa
in
lcall
mov
mov
cmp
jae
arpl
in
push
mov
ror
into
test
gs
jmp
mov
mov
inc
mov
cltd
mov
ret
sbb
popf
shll
jb
cmp
test
inc
sahf
sarl
or
cmpsb
mov
cmp
ljmp
mov
sbb
xor
xchg
out
ss
mov
pop
jns
fisubrs
std
loop
xor
out
mov
xlat
dec
mov
dec
aad
shll
lock
xchg
es
push
movsl
repnz
ljmp
stc
push
jmp
stos
cmp
mov
dec
or
jmp
call
aaa
lea
sbb
add
loope
call
in
or
dec
mov
pop
and
pop
sarb
mov
push
mov
add
lret
addr16
pop
cmpsb
cmp
jb
rorb
mov
push
mov
ret
mov
mov
xor
int3
mov
subl
sbb
and
cmp
imul
cltd
inc
mov
test
shrl
lds
pop
andl
stc
clc
repz
push
pop
stos
sub
imul
xchg
push
imul
cmp
outsl
xor
loop
sbb
mov
pop
dec
inc
xor
cmpsl
aam
add
add
les
xor
add
adc
pop
add
jb
lahf
in
jle
popa
bnd
jl
adc
mov
mov
push
push
testb
mov
or
lods
push
dec
popf
sub
cmp
mov
inc
cwtl
adc
dec
lcall
ror
push
cs
xchg
les
dec
data16
lods
rolb
in
push
push
out
cmp
xchg
mov
cmp
imul
leave
and
or
inc
cmp
je
jae
cmp
ljmp
in
lahf
pop
shrl
xchg
les
test
scas
mov
pop
xor
sub
cli
aaa
hlt
stos
mov
pop
pop
clc
and
xor
mov
and
sbb
jge
inc
mov
cld
lret
adc
enter
rcll
push
or
dec
jne
jmp
movsl
xor
push
mov
push
stos
xchg
out
loopne
iret
call
xor
and
scas
movsl
add
mov
test
call
test
mov
lds
stc
sub
outsb
push
outsb
dec
cmc
lret
cmc
or
jle
push
js
jae
out
mov
xor
xchg
jne
ret
mov
inc
dec
shr
icebp
lock
xchg
idivb
fdivl
fdiv
mov
aam
aam
jmp
or
out
shufps
pushf
stos
loop
pop
mov
movsb
cmpsl
insl
leave
sti
outsl
xor
mov
jnp
out
xor
mov
rolb
imul
sub
and
pop
shll
pop
out
or
xchg
dec
leave
or
mov
testb
push
ret
test
aad
pop
jno
je
popa
pop
push
add
push
adc
adc
stc
js
mov
or
push
mov
mov
repnz
dec
fnstenv
sti
push
test
or
ret
jns
xchg
push
cltd
sbb
push
loop
dec
or
repnz
mov
or
jnp
fildl
fsubrl
xor
lahf
gs
add
add
pop
cld
push
dec
sti
pmullw
das
dec
out
jae
jle
out
mov
mov
pop
cmp
mov
inc
sbb
mov
sub
in
inc
dec
add
jo
push
and
sub
aam
xor
xor
sbb
push
stos
inc
fcmovnb
call
out
jmp
std
xor
fdivr
xlat
sbb
cmp
jmp
mov
cmp
outsb
loope
and
pop
mov
cwtl
sub
iret
loope
and
lret
jbe
add
sub
pop
movb
push
sub
fildll
test
cs
shll
push
sub
iret
mov
mov
add
xchg
test
ret
les
xor
dec
sbb
adc
mov
fsubs
mov
outsl
sarl
mov
in
mul
cmc
sbb
add
cmpsl
outsl
or
test
daa
test
push
inc
or
push
dec
lods
inc
and
and
jbe
dec
pop
rorb
adc
out
fs
fstps
lret
cmp
sti
adc
in
adc
testl
or
rol
les
mov
pop
inc
dec
icebp
push
movsl
or
out
test
lock
or
cs
mov
lock
test
xchg
cmp
or
dec
xchg
dec
insl
adc
out
mov
lret
mov
stos
xchg
ret
loope,pt
jle
pop
push
inc
rcll
out
cmpsl
in
ja
add
adcl
xchg
xchg
xchg
fdivs
xor
pop
and
sbb
test
jecxz
roll
popa
adc
gs
jnp
movl
dec
fildll
test
loop
les
ja
lret
mov
adc
subl
xor
mov
mov
repz
cli
call
leave
fistps
ja
insb
xchg
adc
rorb
out
shrb
dec
mov
scas
xchg
add
mov
jg
jg
inc
jp
shll
in
pop
stc
or
push
cld
cs
test
cli
call
ss
out
loop
inc
in
out
jle
movsl
push
pop
repz
je
sbb
pop
nop/reserved
lret
lock
jae
scas
fmuls
jg
lods
push
pop
sbb
js
push
cmp
or
stos
pop
mov
xor
out
dec
jge
arpl
push
nop
cs
dec
cmp
push
mov
testl
js
fsubr
push
aas
pop
ficoms
push
mov
ret
cli
je
dec
pop
xchg
stc
cmp
stos
mov
nop
pop
cmp
test
mov
pop
aad
insb
inc
xchg
inc
mov
mov
das
in
fcmovnu
jns
mov
scas
pusha
jmp
add
int3
xchg
repnz
bnd
pop
or
xchg
dec
pop
imul
inc
add
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
dec
jae
mov
xchg
test
sub
test
pop
jmp
ljmp
insb
jle
popa
adc
jnp
mov
jle
test
jp
in
sub
cmp
mov
je
bound
mov
clc
push
lcall
mov
sbb
xchg
addb
xbegin
inc
js,pn
fs
fldt
pop
adc
aam
out
push
inc
cwtl
pop
aaa
shrl
dec
data16
das
mov
dec
sub
push
in
imul
mov
sbb
jmp
out
add
jmp
xor
mov
shrb
iret
incl
push
sbb
lock
mov
bound
jno
stc
sbb
or
sbb
shlb
std
imul
lds
add
mov
clc
dec
add
add
and
frstor
lahf
cmp
mov
adc
stc
push
sbb
xchg
cmpsb
stos
in
pop
push
rol
je
sahf
dec
int3
cmpl
out
insb
jb
fildl
dec
enter
orl
mov
push
inc
in
stos
ja
cs
jecxz
ds
mov
jnp
push
shlb
test
testb
adc
sub
and
gs
scas
hlt
sti
pop
mov
repnz
xchg
fcoms
in
mov
sub
ss
jmp
dec
or
shlb
aas
sub
lds
shrb
mov
test
cltd
fxch
fsubrp
or
int
mov
shll
test
mov
sbb
mov
lock
pop
adc
sub
mov
sub
test
rolb
out
insb
lret
add
aad
push
cmp
lcall
nop
add
mov
es
pop
adc
mov
pushf
inc
xor
pushf
mov
mov
mov
inc
and
jge
lock
in
mov
addl
cltd
pop
int
mov
dec
rcl
and
jge
int
xchg
mov
xchg
lods
lods
ret
mov
add
inc
add
pop
imul
out
outsb
xchg
or
jp
aaa
fwait
sub
jo
inc
movsb
in
rcll
popf
mov
mov
lods
outsl
sub
lods
leave
lahf
filds
jge
xchg
neg
bound
push
lods
add
mov
cmpsl
mov
push
fmull
mov
push
and
push
fucom
and
jp
add
mov
xchg
inc
roll
mov
xchg
scas
pop
jge
lret
mov
push
cltd
or
mov
repz
or
dec
pop
gs
lcall
mov
test
rclb
xchg
in
and
hlt
in
daa
repz
xchg
stc
int3
je
mov
xlat
mov
add
inc
sub
mov
inc
mov
repz
int
push
je
jp
inc
sub
xor
pop
es
cmpsb
push
cs
and
ss
fcoml
mov
add
xchg
in
push
inc
jmp
jnp
or
jg
outsb
fsubr
and
and
mov
rcll
ja
add
mov
sbb
push
pop
leave
cmp
jmp
addr16
push
mov
mov
xchg
mov
movsl
push
dec
add
loop
stos
sub
add
push
in
cmp
xor
in
pop
mov
into
std
add
dec
roll
dec
pop
sbbl
leave
std
xchg
adc
sbb
mov
push
pop
out
test
and
jbe
and
inc
pop
mov
mov
jg
arpl
fisubl
mov
and
and
mov
sahf
pop
xor
arpl
sahf
ds
mul
mov
cli
test
and
mov
ja
mov
push
repz
divb
addl
out
cmp
in
in
pop
inc
dec
roll
psubusb
mov
in
fnstenv
stos
jle
cmpsl
xchg
out
mul
mov
adc
out
sahf
pop
jle
pop
xchg
mov
rorl
lods
lcall
lds
cmp
add
jns
shlb
jl
and
mov
mov
ds
mov
rcr
out
sbb
sub
mov
dec
xor
add
sub
call
cmp
mov
notb
pop
movb
lret
mov
add
dec
push
cwtl
dec
stc
add
sbb
aas
aaa
das
movsl
adc
mov
jne
sub
mov
repnz
add
mov
lcall
ja
mov
or
sarl
sbb
mov
adc
and
les
or
insb
jo
das
sub
out
pop
jmp
add
mov
xchg
leave
out
dec
and
push
out
mov
pusha
xor
pop
mul
jp
pop
pop
xor
cld
lock
lcall
pop
addl
cli
xchg
leave
sbb
test
inc
inc
cmp
cmp
xchg
in
int
mov
mov
or
fs
testb
adc
mov
data16
xchg
sbb
imul
hlt
pushf
adcb
mov
rcrl
mov
outsl
sbb
sahf
xor
sub
pushf
stos
push
aaa
rorl
int
xchg
xor
mov
xchg
outsb
mov
inc
pop
fs
push
and
sbb
scas
inc
or
mov
jmp
pop
fwait
mov
cmp
lcall
mov
or
ss
cmpsb
addr16
adc
aas
sti
adc
mov
and
fstp
mov
shl
jne
popa
adc
and
sub
and
sbb
add
ja
daa
pop
mov
push
adc
xchg
cmp
pop
stos
leave
mov
loopne
and
dec
mov
push
pop
addr16
rcrb
aad
inc
inc
sub
hlt
dec
push
xchg
fnsave
push
xlat
or
inc
popa
cmp
in
aam
or
sbb
ja
inc
test
inc
cmc
mov
xchg
les
in
mov
arpl
adc
mov
out
mov
fdivl
or
dec
and
jae
gs
daa
inc
push
push
adc
popf
out
popl
adc
outsl
loop
cmc
hlt
and
imul
in
ret
add
xchg
mov
sub
stos
fwait
shll
push
cld
cmp
cmpsb
jb
dec
and
int
loope
or
adc
ffree
pop
nop
fwait
imul
in
imul
sbb
push
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
jge
pop
loopne
out
sbb
test
int
push
stos
je
or
mov
repnz
in
mov
or
push
into
leave
je
xchg
sti
cmp
pop
xor
pop
das
dec
bound
push
jecxz
shll
mov
fisubl
cld
or
xor
mov
xchg
lret
fxch
pusha
mov
scas
mov
das
popf
adc
test
jbe
jg
mov
mov
push
mov
imul
ret
adc
scas
adcb
inc
push
xchg
ss
fwait
shrl
adc
push
jo
adc
mov
es
or
mov
loope
dec
loopne
test
or
dec
push
pop
in
sti
repnz
mov
xchg
mov
lmsw
inc
and
das
mov
adc
shll
mov
lods
sub
push
sub
push
dec
repnz
repz
inc
daa
fmull
test
addr16
add
sub
push
mull
or
leave
in
ret
iret
push
sbb
test
xor
cmp
dec
mov
adc
out
cltd
clc
insb
mov
rcl
jmp
in
std
sbb
into
addr16
adc
sub
push
stos
xchg
xlat
adc
inc
mov
test
fstpl
inc
clc
pop
pop
jno
xchg
dec
stos
inc
dec
mov
test
bound
in
imul
inc
addb
clc
mov
jp
test
cwtl
test
imul
jmp
popa
push
xchg
jbe
test
pop
ds
ja
jns
xor
aas
add
stc
test
leave
push
sub
cmp
jne
pushf
fdivp
loopne
jne
fistpl
frstor
and
xor
ret
inc
leave
add
xor
movsl
push
mov
pop
mov
xchg
rclb
mov
sub
movsb
fsubrs
mov
bound
or
cmpsl
jecxz
bound
out
jmp
loope
into
push
xlat
jle
sahf
testb
mov
nop
adc
int3
and
in
movsb
scas
sbb
push
inc
arpl
sbb
mov
test
addb
push
xor
xor
pushf
int3
mov
sbb
ljmp
inc
addl
push
pop
xchg
out
push
xchg
sub
dec
gs
ss
add
into
cmp
insb
sbb
lret
xchg
jne
push
stc
das
mov
imul
dec
pop
lods
sbb
and
push
cmp
xor
xchg
stc
mov
inc
adc
shlb
sub
enter
or
popa
loopne
cltd
adc
std
pop
jle
mov
cwtl
pop
and
scas
sbb
cmpl
and
inc
pop
fistpll
scas
cmp
cltd
push
pop
pusha
in
mov
pop
loope
ja
xchg
mov
xchg
scas
sub
mov
sub
adc
sbb
lahf
mov
or
fcomps
call
mov
clc
xlat
sbb
dec
push
mov
pusha
repz
mov
fimull
cli
popf
ds
aam
sub
adc
loop
loope
ss
iret
push
sub
mov
enter
pop
sbb
xorl
out
push
jbe
sub
es
popa
imul
dec
jmp
or
mov
push
ret
jnp
aam
add
add
subb
cmp
or
mov
sub
rorb
mov
js
sub
cwtl
adc
call
scas
in
and
dec
push
mov
daa
pop
mov
cld
hlt
push
jno
dec
xchg
and
xor
sub
add
xlat
push
mov
and
cmp
mov
aad
subl
jno
pushaw
mov
add
adc
push
add
gs
test
lea
push
sub
mov
stc
ds
cli
pop
sub
call
jg
aaa
jns
xchg
enter
dec
jno
and
cmp
push
xor
and
into
cmp
xchg
cmpsl
jae
or
and
scas
das
ret
adc
pop
cmpsl
in
mov
mov
test
mov
sbb
mov
into
mov
mov
and
mov
movhps
push
out
mov
stc
rcr
pushf
push
fildl
sub
mov
mov
push
mov
cmp
sub
xor
movsl
pop
cmp
rcll
jo
rcrb
lods
push
iret
rorl
mov
fisubrs
adc
mov
in
and
aaa
insb
dec
loope
adc
jle
sbb
les
data16
leave
loopne
shlb
xor
mov
in
ja
in
rcrb
jo
data16
stc
cmp
jns
mov
inc
cmpsb
xorl
pop
pop
imul
xchg
ss
es
mov
jecxz
jns
dec
xchg
mov
test
dec
mov
lock
lcall
sub
push
cs
sub
adc
xor
jb
mov
jl
lcall
rclb
cmp
sub
push
mov
repz
dec
sub
push
xchg
sub
xor
rorl
ret
sbb
push
sub
xchg
xchg
pop
mov
jb
in
or
fisttpll
sub
cmp
ja
dec
adc
fistpl
outsl
out
cmpsb
ds
mov
fdivrs
pop
xor
sahf
pop
cwtl
popf
and
sub
stos
xchg
stos
insl
mov
xchg
or
movsb
mov
outsb
mov
pop
cwtl
divl
dec
rorb
int3
pop
test
clc
dec
aas
xchg
icebp
mov
sbb
inc
xor
cmp
mov
dec
les
push
ret
imul
iret
loope
jb
bound
rdmsr
loope
aam
mov
and
pushf
push
and
lock
movsl
xor
xchg
and
jb
sbb
fs
sbb
cmp
push
cmp
cmp
out
xchg
bound
adc
les
dec
test
mov
and
jecxz
fcoms
lahf
xchg
stos
clc
imul
repz
mov
push
mov
xor
push
imul
mov
push
outsb
mov
mov
adcl
enter
cltd
pop
dec
inc
lea
mov
pop
jne
fsubs
lret
les
adc
sti
and
push
in
out
inc
pop
gs
imul
enter
decl
dec
mov
and
mov
and
xchg
mov
add
mov
or
and
hlt
fwait
or
mov
adc
lds
pusha
dec
sub
sbb
popa
and
sbb
cltd
jns
jge
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
lods
out
outsl
dec
ja
arpl
push
push
cmp
outsl
lea
mov
jmp
add
sbb
fs
xor
adc
push
in
addr16
movb
pop
aam
in
inc
mov
cmpsb
lahf
or
test
cmp
mov
jge
leave
adc
ret
js
std
or
cli
inc
xchg
cmpsb
or
sbb
sub
lret
movsl
lret
push
or
xchg
cmp
bound
or
enter
gs
cli
xchg
or
cmp
jge
mov
ret
xchg
pop
or
mov
sub
je
and
dec
shrl
mov
rcrl
xchg
pop
xchg
inc
sub
loope
hlt
mov
mov
lcall
mov
inc
push
ret
sub
pop
jno
xchg
divl
add
daa
adc
jae
sbb
stos
mov
push
fisttpl
mov
cmpsb
pop
mov
mov
test
mov
mov
pop
rcrl
insl
add
lea
lods
fisubrs
dec
aas
stos
mov
and
xchg
push
push
cwtl
dec
sbb
pop
outsb
popa
mov
data16
cmp
popw
jge
das
idivb
pusha
sbb
push
or
add
jno
aas
mov
xchg
into
rclb
mov
stos
xchg
mov
pop
jo
jo
push
xchg
or
data16
imul
loopne
push
inc
mov
xchg
add
or
outsb
mov
push
addr16
pop
add
or
loopne
jb
cmpsl
cmc
pop
or
mov
out
fsqrt
fsub
cmc
dec
in
mov
fcomps
dec
cs
cmp
xchg
icebp
sbb
mov
dec
mov
insl
out
js
sub
jno
pop
inc
test
enter
jp
or
sbb
sahf
mov
mov
test
pop
arpl
ret
pop
dec
jecxz
pop
cmpsb
test
adc
add
sbb
data16
imul
mov
or
movsl
xchg
cmp
test
fidivs
sbb
sub
stos
cmp
adc
lret
pop
jge
mov
repz
dec
insb
sub
imul
pop
das
popa
int3
push
xchg
mov
subl
je
aas
cs
das
repnz
aad
insl
mov
jl
inc
stos
outsl
mov
and
mov
jecxz
loope
jo
mov
dec
pop
fstps
or
sub
in
or
mov
xor
stc
mov
into
cmp
inc
icebp
sarb
xchg
test
movsb
mov
cmp
movsl
and
pop
jecxz
in
add
ss
xchg
mov
addr16
cmp
pop
xor
aad
cmp
pushf
mov
aam
mov
cmpsl
mov
push
xor
sbb
cwtl
mov
adc
cmp
ret
sub
into
cmp
lods
mov
sub
cmp
cmp
adc
jl,pt
mov
xor
adc
add
xorl
or
outsb
or
aad
sub
into
sub
cltd
outsl
aam
fcmovne
sbb
loop
push
dec
xlat
xchg
out
sub
rorb
out
add
lea
jp
inc
mov
aad
dec
xchg
cltd
cwtl
adc
dec
adc
sti
lret
jae
negl
call
lods
stos
outsl
jae
inc
in
in
js
push
mov
movsl
xchg
pop
sarb
push
sbb
push
mov
jp
das
decb
xor
sahf
stos
adc
xchg
cmpsb
push
notl
sub
cs
mov
leave
jmp
pop
pop
das
insl
fisubrs
and
lock
rolb
cmpsl
push
xor
lods
mov
push
cwtl
push
cli
push
or
add
adc
lahf
mov
push
test
sbb
jecxz
adc
jecxz
mov
push
lret
adc
inc
lahf
loopne
ss
mov
pushf
and
arpl
rcrb
ss
ficoms
gs
fisubs
movsb
test
mov
mov
adc
inc
movsb
movq
jbe
mov
and
xor
lret
xor
mov
sub
test
stos
push
loop
data16
jbe
loop
sbb
test
lock
lea
test
mov
inc
pop
repnz
int
andl
sub
jae
mov
dec
xor
repz
incb
ljmp
lds
stos
fimull
psrld
rcrl
inc
add
ret
loop
pop
lea
push
and
xchg
mov
push
xor
adc
sub
movsl
sbb
lret
jmp
iret
sbb
fstps
lret
sub
adc
cmc
mov
xchg
fisubrs
add
adc
scas
jae
movsl
xchg
push
or
ja
push
sbb
clc
roll
jp
inc
add
out
mov
out
mov
es
adc
xor
icebp
jle
outsb
and
sbb
das
cmp
dec
les
pop
fnstsw
rcl
push
jbe
fldt
rcr
aaa
icebp
adc
dec
fs
adc
inc
xor
mov
jbe
sbb
cmp
inc
xlat
ja
fbld
jb
rcrl
jo
sbbl
cmp
into
sub
adc
and
push
adc
xor
in
mov
inc
leave
add
bound
sbb
pop
pop
js
or
lods
mov
aaa
xchg
mov
pop
mov
flds
cli
and
inc
xchg
pushf
hlt
jne
faddl
and
push
arpl
pop
or
inc
pop
sub
lods
pop
imul
or
lods
push
out
mov
lret
sbb
enter
pop
lock
ss
and
outsl
push
mov
inc
adc
and
add
cmpsl
icebp
pop
and
aam
xchg
repnz
and
cwtl
or
mov
stos
or
dec
mov
shll
sarb
push
mov
xchg
sub
cmp
xor
sbb
hlt
imul
xorl
ds
jmp
mov
fldl
cmp
repnz
movsb
subb
data16
mov
fldl2t
jae
fistl
pusha
cmpl
lcall
push
sti
shll
and
adc
test
sahf
std
cwtl
addr16
fidivrl
into
add
xchg
lahf
sete
and
push
daa
out
adc
mov
rep
jae
aad
jns
es
mov
sarb
lds
mov
mov
hlt
inc
jo
inc
stc
inc
out
mov
inc
dec
sub
int3
cwtl
jae
ss
sahf
repz
fs
lds
lods
cmp
xor
mov
std
clc
shl
and
repnz
cld
pop
xchg
and
cmc
call
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
jge
jp
call
add
jge
std
test
aas
mov
shrl
add
or
cmp
flds
mov
mov
add
das
cs
dec
in
in
jae
repz
cmp
and
fnstcw
push
inc
fstpt
lcall
adc
fs
stos
xor
mov
les
iret
xchg
stc
push
ret
mov
xchg
aam
fdivl
adc
mov
data16
jo
int
lret
xor
add
pop
adc
push
mov
jne
xor
mov
imul
mov
int3
out
or
push
pop
mov
fs
or
xchg
ds
lahf
mov
pop
rorl
fidivrs
cs
push
outsl
dec
inc
mov
je
fs
test
insb
mov
and
test
ss
mov
test
xlat
mov
loop
mov
dec
xor
mov
inc
rorl
idivl
dec
or
dec
or
lock
dec
push
cmp
popf
ret
cmp
roll
call
aas
mov
sbb
sub
xchg
xor
stos
or
cmp
pop
out
stos
xchg
fadd
xor
mov
andb
dec
xlat
sahf
inc
xchg
mov
dec
sub
fwait
out
lds
cmp
push
ds
xor
adc
sub
mov
sbb
jne
mov
jle
fists
lods
rorl
xor
inc
xor
sub
movsl
roll
mov
pop
aas
inc
mov
pop
xchg
cld
add
lret
pop
das
mov
in
cwtl
xor
lret
out
dec
push
stos
jmp
push
xchg
ds
ja
test
roll
add
jnp
daa
dec
adc
dec
ret
mov
mov
jmp
mov
pop
fnsave
ficoml
ja
sbb
push
jmp
inc
out
xchg
insl
data16
stc
shll
mov
iret
sbb
xor
movsb
sbb
mov
cmp
arpl
mov
stos
sbbl
adcb
shl
mov
lock
stos
shrl
out
repz
xchg
cmpsl
push
roll
jb
mov
in
test
cwtl
xor
ljmp
gs
or
stc
je
incl
cmc
and
jb
popf
pop
ror
lahf
icebp
and
push
sbb
in
test
ficompl
std
push
or
jle
jnp
xchg
scas
bound
dec
xchg
and
dec
nop
popa
outsl
sbb
dec
fdivrl
pop
out
mov
lods
mov
call
push
dec
clc
jns
push
notb
fidivl
xlat
roll
sti
stos
mov
rorb
inc
repnz
pop
fucom
or
popa
add
ljmp
loop
cs
repz
decl
cmpsb
sub
stos
aad
sub
sti
pop
in
aaa
popf
ja
mov
and
dec
stos
stc
add
mov
add
test
pop
or
adc
ja
les
adcb
cli
insb
repz
outsb
push
les
jbe
outsl
xor
pop
push
push
cwtl
sbbl
jnp
sub
cmp
nop
mov
mov
ficoms
loopne
loope
lahf
int
dec
jb
xchg
mov
rcrl
aaa
dec
push
adc
mov
jb
jg
or
cld
and
sub
out
lcall
and
movsl
lock
mov
int3
dec
mov
inc
sub
movsl
insb
scas
jl
pop
push
icebp
adc
inc
data16
aad
repz
xchg
and
jle
cmp
pxor
int
notb
push
sub
xor
cmc
js
bound
push
scas
rclb
mov
cwtl
mov
jge
loope
or
shrl
jne
dec
dec
push
xor
cmp
mov
xchg
mov
push
mov
imul
in
cltd
inc
adc
pop
std
repz
mov
push
fwait
lock
fnsave
lods
test
imulb
arpl
test
dec
cmc
xor
add
add
into
sbb
mov
les
dec
not
xorb
mov
sbb
insb
sbb
mov
dec
inc
popa
sbb
stos
mov
xchg
mov
imul
iret
push
jnp
outsl
rorl
xchg
stos
xchg
stc
addr16
or
lret
ljmp
mov
sbb
lods
mov
cli
inc
add
out
pop
xor
jg
jl
in
fstps
fidivl
aad
jg,pn
js
rcl
mov
and
loopne
jne
xchg
test
popf
pop
dec
mov
adc
orl
add
fwait
outsb
shl
and
repz
jge
lret
sub
mov
add
fs
push
xor
and
gs
jmp
popf
cld
imul
lea
aas
fucomip
lret
mov
dec
in
cmp
xorb
insl
sub
xchg
dec
mov
and
mov
sbb
or
dec
lret
leave
sbb
pop
iret
lods
movsb
outsl
icebp
or
dec
push
push
xor
or
ljmp
sarb
aad
push
sarb
pop
push
mov
cld
sti
inc
push
jmp
cmp
mov
jmp
xor
push
inc
add
clc
lret
jno
repnz
and
mov
or
mov
sahf
cmpsb
adc
xor
or
push
or
stos
rcrb
push
decl
inc
pop
fdivs
mov
mov
xchg
ja
jne
push
pop
icebp
int
inc
and
jle
fcompp
xor
cmp
jmp
je
lahf
xchg
jne
cs
scas
pop
fwait
addr16
leave
lds
mov
in
cs
int3
adc
xchg
mov
je
xor
pop
push
pop
shrl
sbb
add
scas
lcall
sbb
repnz
mov
jno
aad
sti
mov
or
shlb
xchg
daa
jno
pushf
fidivrs
push
pop
test
int3
pop
outsb
push
mov
movsl
mov
out
cwtl
ror
lds
and
push
cmp
jae
js
negb
push
imul
and
lods
loopne
cld
sub
xor
xchg
xor
push
lods
dec
jg
imul
lods
fs
insl
inc
iret
cmp
loop
xchg
or
add
ss
mov
sbb
jno
and
test
aad
sbb
test
add
xchg
jle
ja
sub
test
sbb
push
icebp
pop
enter
pop
xchg
sbb
pop
in
mov
test
roll
enter
jp
sub
jmp
dec
aam
adc
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
pusha
cli
adcb
cs
pusha
jbe
fdivs
inc
jp
jmp
test
dec
add
jmp
enter
out
lret
jg
push
jecxz
mov
aas
push
cltd
push
dec
testb
insl
cmp
sbb
mov
mov
fsubl
pop
jp
add
lcall
std
test
shlb
gs
xchg
fdivs
cmp
cltd
insb
insl
or
jecxz
push
mov
aaa
mov
xor
filds
lods
lods
xchg
mov
xchg
movsl
ljmp
mov
out
or
rorl
addr16
fcoms
fmuls
mov
outsl
dec
dec
aad
mov
mov
add
mov
inc
popa
dec
cmpsb
push
shlb
jmp
faddl
fcompl
sub
fiaddl
push
in
fdivl
mov
int
mov
xchg
adc
jge
lods
cmp
lock
and
sbb
xchg
cmc
mov
pop
sahf
loopne
sbb
inc
pop
add
repz
cmp
out
in
push
jnp
mov
or
pop
jno
fcmovb
outsl
out
add
out
repnz
rorl
xchg
enter
xchg
mov
fidivrl
xor
xchg
loopne
rcrb
add
in
insb
je
adc
push
mov
push
leave
or
mov
xor
mov
scas
jmp
orb
jbe
push
daa
add
mov
jecxz
cld
ficoms
xchg
stos
mov
fisttps
push
or
xor
popf
push
aam
mov
add
jle
xor
mov
in
clc
in
clc
pop
and
adc
adc
mov
xchg
sbb
add
mov
mov
jg
dec
cmp
cmpsl
jbe
les
hlt
adc
dec
in
dec
mov
ret
mov
or
push
jb
aaa
mov
jg
icebp
pop
push
mov
inc
mov
into
sbb
xor
mov
pop
push
jle
stos
inc
lcall
loope
filds
mov
jge
sub
sub
mov
in
inc
int3
test
gs
xchg
adc
mov
cmp
arpl
in
bswap
jnp
mov
cmp
sbb
clc
movsb
add
sbb
aad
in
and
cmpsl
add
mov
dec
mov
fadds
es
inc
dec
lret
es
xlat
mov
fwait
mov
jnp
popa
dec
and
mov
or
pop
popa
pop
push
dec
fwait
inc
cmp
xor
es
cmc
cld
inc
jle
push
stos
ret
lcall
mov
fldt
std
adc
inc
rcrl
test
gs
adc
testl
mulb
cmp
subb
sbb
mov
cmp
cmovs
push
xchg
dec
or
push
xchg
cwtl
add
popl
mov
outsl
gs
aaa
lcall
xchg
mov
pop
daa
aas
lds
xchg
push
pop
imul
cmp
loop
sbb
ds
arpl
enter
test
jg
or
repnz
xchg
adc
cmpsl
or
into
outsb
rcll
or
push
push
mov
xor
or
ss
adc
call
sub
dec
add
mov
push
loop
testb
stos
mov
dec
jg
shr
dec
mov
sub
mov
sub
icebp
mov
push
dec
aas
fwait
mov
popf
jbe
out
sti
adc
ds
lods
call
adc
inc
loop
jmp
xchg
popf
cmp
xor
les
pop
and
gs
icebp
jno,pn
xchg
into
adc
pop
and
repz
cmpsb
ds
dec
sti
add
xor
jae
sahf
fdivs
adc
jmp
mov
jno
dec
daa
lea
mov
push
fsts
std
pop
push
std
shll
sbb
in
pop
int3
adc
dec
xchg
pushf
int3
adc
xchg
popa
fsubrl
mov
mov
sub
sbb
in
sti
fildl
movsb
fisttpl
sub
sub
xchg
test
dec
jnp
js
sbb
test
jno
movsb
ljmp
mov
lahf
xchg
enter
sbb
and
ljmp
cmc
dec
xlat
ffreep
call
xchg
xor
xchg
mov
arpl
adc
push
xchg
jp
lods
insl
lcall
addb
push
sub
or
imul
idivb
inc
jno
lock
and
adc
mov
jl
repz
std
mov
add
or
mov
lods
push
pop
lret
xor
push
in
and
inc
mov
in
ret
addb
outsb
sbb
lret
call
mov
rorl
cmp
dec
shrb
es
popf
cmp
and
imul
pop
cltd
dec
sbb
shl
shll
arpl
adcb
or
jo
xor
adc
aam
mov
and
cld
dec
ljmp
mov
jnp
or
cmp
fwait
lods
sti
xchg
addb
lcall
or
pop
mov
mov
or
ds
cmc
adc
adc
xor
or
fs
xchg
push
les
xchg
mov
orl
sbb
out
jns
sbb
arpl
scas
aam
pop
xchg
std
sub
push
and
mov
cli
mulb
xchg
orl
jge
cwtl
xchg
adc
shll
mov
dec
add
sub
ja
sub
mov
adc
fninit
jno
test
movsb
outsl
bound
mov
pop
aam
dec
arpl
fabs
je
nop
adc
shlb
enter
xchg
pop
shll
testb
adc
stos
stos
sbb
aad
pop
xchg
cmp
psrad
out
test
idivl
lret
pop
xchg
sbb
add
add
ficompl
adc
out
adc
or
dec
es
dec
aas
mov
pop
push
out
imul
daa
xchg
push
sub
test
mov
sub
jne
sbb
fwait
xor
mov
mov
les
mulb
push
sbb
out
je
push
mov
mov
popa
jns
stos
pop
cli
dec
cltd
into
pop
mov
cmp
loopne
call
mov
fsubrl
mov
cltd
jo
popa
addb
rorb
lret
add
pop
dec
dec
pop
pop
jno
jbe
pop
cli
jp
fnsave
push
ds
cmp
mov
stos
jmp
out
add
sbb
mov
and
nop
mov
repz
add
pop
or
inc
cmp
pop
dec
movsb
jb
or
filds
xchg
ds
push
push
fisubrl
push
orl
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
in
movsl
mov
xchg
xorb
sbbl
call
xor
xor
outsb
cltd
inc
xchg
fcomps
pop
dec
in
mov
js
push
mov
cmp
lds
push
lret
orb
loopne
pop
shrb
fdivrl
insb
pop
clc
or
mov
iret
aaa
or
stos
and
sbb
test
xor
cmp
or
test
cmp
xchg
push
outsb
mov
lods
adc
pop
imul
add
sbb
mov
sbb
fndisi(8087
shlb
mov
ljmp
xchg
pop
cli
push
lock
xchg
jmp
lock
cmp
jp
cmp
push
and
ja
in
xchg
mov
mov
dec
adc
mov
pop
int
call
xor
push
adc
leave
lock
repz
aas
out
mov
pop
aaa
int
bound
pop
jne
rcr
and
fiadds
cmp
mov
inc
dec
dec
dec
movsl
pop
pusha
out
and
icebp
inc
mov
icebp
es
jne
jge
daa
sbb
orb
jmp
jbe
movsl
arpl
lcall
in
add
mov
or
or
inc
add
es
outsl
mov
ret
aas
adc
lret
push
add
fldenv
xchg
sahf
testl
imul
or
ret
fsubrs
movsl
inc
and
add
and
dec
fstpt
sarl
cmc
int
mov
adc
daa
sub
int3
sub
fimuls
jns
add
inc
pop
mov
sbb
ror
sbb
xchg
adc
fildl
nop
hlt
add
es
imul
imul
sti
cltd
mov
adc
or
insb
jl
testb
lahf
add
push
mov
insl
xchg
and
xor
jge
fwait
inc
leave
fsubs
jo
mov
or
test
push
jns
add
mov
adc
pop
push
mov
jns
jbe
popa
xchg
movsl
stos
out
fnstsw
out
mov
mov
pop
lods
test
jmp
test
push
cltd
mov
push
push
add
jle
pushf
testl
mov
loop
outsl
xchg
mov
jb
adc
hlt
or
shrl
lods
inc
adc
adc
mov
mov
stc
leave
jp
iret
scas
bound
in
call
or
in
xor
scas
sbb
fldcw
dec
push
sarb
inc
cltd
adc
inc
divl
sub
xlat
fsts
jns
ja
mov
mov
dec
jae
ja
mov
outsb
push
movsb
sbb
movd
dec
push
inc
jo
test
jns
bound
outsb
cmc
add
mov
dec
jne
or
arpl
push
in
aad
insl
stos
test
sub
cmpsl
mov
jae
push
loope
rcr
mov
mov
subl
sbb
cld
imul
cmp
scas
xchg
mov
in
push
cmpsb
xchg
jge
les
push
daa
inc
dec
popf
jp
push
pop
shll
inc
sbb
push
jl
dec
xor
mov
mov
or
mov
daa
cmp
push
andl
xor
xor
adc
jmp
add
loop
cli
dec
push
xchg
int
jae
or
and
shr
inc
call
movsl
push
lcall
loopne
dec
pop
test
jg
dec
std
jnp
pop
mov
jp
sbb
hlt
xchg
cmc
jl
ljmp
sub
xor
cmc
mov
cltd
std
mov
out
shlb
fwait
or
inc
push
sub
cmp
mov
divl
jae
stos
out
xchg
mov
icebp
push
cmpsb
daa
into
stc
ret
aam
add
xchg
jge
lds
outsb
and
ja
mov
lret
movsb
aas
and
push
pop
push
push
inc
into
cltd
dec
jae
and
adc
inc
cmpsb
adcl
inc
fst
xchg
mov
push
bound
fdivrl
sub
dec
outsb
in
or
fistpll
mov
jmp
inc
push
push
sbb
pop
inc
test
fisttps
mov
xchg
sub
lods
pop
add
outsb
push
lahf
pop
xchg
leave
jae
sbb
fwait
lret
fdivl
rclb
or
dec
pushl
mov
fists
jae
je
xchg
cmp
rcrl
mov
fsubl
mov
sbb
xchg
fldcw
aad
jb
push
jmp
push
add
ja
cli
sti
gs
or
push
cs
stos
mov
add
rolb
out
jl
jle
dec
push
lea
pop
mov
push
fstps
insb
je
jle
mov
cmp
xchg
or
jb
frstor
sub
arpl
and
insb
or
lahf
popf
pop
dec
pop
xor
xchg
add
mov
jb
test
mov
push
sub
in
fs
sbb
fdivl
push
or
and
aaa
lds
lahf
mov
or
xchg
mov
cmp
mov
push
addr16
cmpl
data16
dec
cmpsl
iret
jnp
outsb
test
fwait
mov
or
push
frstor
push
push
out
cld
sub
inc
int
pusha
mov
loop
ficompl
mov
scas
mov
and
xor
nop
adc
jecxz
ss
adc
in
sti
add
mov
inc
lea
cmpsl
test
sysexit
mov
pop
xor
sub
movsl
xchg
imul
and
mov
ja
jg
cmp
mov
mov
xor
ja
dec
ret
sbb
and
mov
sub
movsl
adc
dec
pop
insb
outsb
mull
mov
add
mov
aaa
lret
in
push
mov
xchg
ret
or
mov
push
lock
inc
daa
lods
inc
daa
mov
add
subb
mov
push
aaa
leave
and
das
push
push
dec
mov
mov
aad
ss
push
dec
mov
mov
shll
pop
xchg
or
insb
cltd
sub
cmc
cmc
ja,pt
sub
jle
dec
stos
pop
pop
mov
out
popw
push
ret
lock
push
add
cmp
sbb
and
repnz
dec
and
push
repz
xor
or
add
outsb
addr16
lret
push
out
add
xchg
hlt
push
xor
pushf
subl
iret
mov
cmp
dec
arpl
pop
mov
mov
sub
xchg
ljmp
int
imul
loop
loope
add
lret
dec
push
mov
in
adc
dec
cmc
push
movsb
notb
xchg
xlat
out
iret
icebp
or
cwtl
cmc
popa
jmp
fistl
jae
sub
in
add
sub
inc
add
loope
imul
jmp
add
or
or
adc
js
push
pfadd
hlt
scas
adc
mov
jmp
cld
and
cmp
cli
out
push
and
dec
pop
cltd
xlat
pushl
das
inc
sbb
and
ljmp
hlt
leave
nop
push
xorb
mov
mov
andl
iret
rcr
mov
hlt
lock
sub
js
pop
inc
subl
push
sub
pop
inc
sbb
sti
cmp
sarb
les
je
xchg
adc
lcall
fsubr
cwtl
mov
inc
mov
push
loop
into
mov
and
in
testb
dec
movsb
cs
pop
xchg
xchg
insl
test
out
rolb
mov
mov
imul
pop
xchg
jmp
push
loope
cmp
add
roll
push
rclb
lahf
sbb
and
in
xchg
pushf
or
aas
xor
fcmovbe
sub
repnz
dec
pop
pop
dec
aam
test
test
add
cmp
jb
test
and
insb
dec
sahf
sahf
loope
test
jmp
aaa
adc
sub
sub
repz
dec
push
arpl
js
fwait
test
pop
cltd
outsl
jnp
sub
fadds
cmc
inc
lea
lret
sub
lahf
fnsave
out
test
test
dec
fidivrs
mov
aam
pop
mov
fimuls
mov
jns
pop
rcrl
stos
rep
push
cmpsb
cld
fisubrl
jno
sbb
mov
and
mov
fistpl
test
xchg
jl
add
fldl
pop
and
xchg
or
sbb
lock
pop
mov
mov
cwtl
stc
in
sbb
dec
sub
dec
arpl
and
jne
subb
mov
jg
hlt
test
xchg
fildll
lods
push
cmp
out
pushf
aam
mov
shl
in
adc
xlat
lahf
inc
popf
or
mov
adc
in
leave
clc
ud2
mov
dec
rorb
sbb
enter
mov
ret
add
push
lods
dec
dec
jmp
daa
popf
cmp
repz
cmp
stos
cmp
push
cmp
pop
loop
ds
xchg
popa
push
push
rcll
xchg
and
or
lock
shlb
push
push
inc
out
push
ljmp
push
mov
cmp
stc
xchg
testb
cwtl
rcr
data16
xlat
xor
nop
pusha
mov
or
data16
lahf
mov
out
pop
push
add
add
mov
dec
pop
loop
push
adcl
cmpb
mov
pop
sahf
movsl
sahf
push
inc
push
adc
or
lahf
xchg
xchg
bound
mov
mov
cli
sbb
xchg
adc
stos
cltd
jmp
mov
std
cld
push
push
mov
push
lcall
mov
jns
sbb
xor
mov
into
mov
addb
sbb
insl
xor
xchg
jo
aas
mov
call
xor
cld
xchg
out
push
stc
dec
mov
popf
stc
xchg
cmpsb
subl
and
cmp
xlat
leave
sub
push
sahf
mov
add
mulb
push
cmp
push
ss
pop
mov
hlt
xchg
je
jb
xchg
xor
cli
leave
imul
les
daa
push
pop
and
add
push
pop
mov
jecxz
pop
les
pop
jmp
loope
push
lea
loop
insb
cmp
stos
loope
lahf
jmp
mov
add
lods
lret
cmp
dec
or
cld
addl
push
jp
mov
add
pushl
mov
cltd
xchg
mov
adc
mov
popf
xchg
pusha
cmpsb
and
jno
fstpt
sbb
sub
pop
jmp
ljmp
jle
mov
adc
push
and
std
cmpsl
imul
cwtl
movsl
pop
xor
mov
adc
out
mov
imulb
repz
xchg
bound
push
js
sti
inc
xor
mov
sub
push
pushf
leave
repz
in
dec
scas
stos
cmp
mov
mov
test
iret
out
test
pop
xor
and
fisttpll
xchg
sahf
cmp
cmp
xor
sahf
xchg
je
jne
dec
imul
and
sbb
jle
movsl
push
cwtl
arpl
pop
dec
jb
push
int3
push
lret
fimull
mov
xorl
icebp
orl
adc
jge
movlps
pop
jp
xlat
mov
std
aad
repz
rcrl
inc
frstor
into
popf
mov
inc
and
inc
dec
push
pop
sub
dec
cmc
pop
icebp
popf
das
loopne
cmpsl
add
mov
dec
lods
add
dec
pop
mov
xchg
into
idiv
push
lods
je
in
push
in
xchg
adcb
pushf
test
jo
pop
or
movsb
es
cld
loop
lret
xchg
enter
je
outsb
xor
stc
dec
popa
xchg
loope
cmpsl
pop
mov
orl
inc
call
pop
dec
lods
lret
push
inc
xchg
loopne
sets
dec
mov
movsb
inc
pop
sbb
mov
xchg
cmp
andb
xor
aaa
rorb
sbb
mov
test
sub
cli
data16
das
lods
js
ret
loopne
jg
or
pop
mov
decb
jbe
movsb
jmp
hlt
push
add
jecxz
enter
lea
movsb
xchg
test
outsb
lret
fwait
mov
xlat
jae
adc
pop
mov
and
rcll
xchg
mov
adc
sub
loop
or
enter
call
int
cmpsb
rclb
mov
jg
adc
cmc
aam
sarl
push
insb
add
push
add
pop
or
sbb
cmp
orb
repnz
iret
call
les
and
fstpt
add
jp
jae
xchg
inc
mov
in
into
and
repnz
outsl
mov
xor
scas
jg
sub
mov
lock
shrb
add
mov
xchg
fnstcw
pop
inc
dec
adc
mov
inc
in
jne
push
bnd
ret
push
je
sbb
mov
mov
prefetch
or
fmull
xor
mov
xor
jecxz
cmc
cmp
lock
cmp
push
aaa
outsl
pop
cmp
fs
mov
and
daa
add
mov
push
adcl
dec
xchg
cs
fcompl
jno
insb
adc
jg
jbe
add
mov
add
add
xor
out
jp
push
xchg
push
in
mov
fucom
cmpl
add
xchg
sbb
inc
jecxz
insl
mov
jge
lea
cmp
clc
cmp
sub
xchg
cmpsb
iret
pushf
mov
adc
cmp
dec
jmp
cld
das
mov
ficoml
adc
test
in
andb
add
subl
or
add
add
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
in
mov
xchg
xorb
and
ficomps
mov
pusha
movsb
mov
or
xlat
adc
push
js
cmp
in
add
inc
divb
mov
jle
xorl
lcall
cmp
int3
movsb
popa
nop
inc
js
inc
inc
movsl
mov
clc
cmpsl
nop
push
ret
jle
mov
sub
mov
scas
cmp
leave
mov
mov
sub
push
subb
dec
mov
out
mov
push
sub
nop
mov
iret
dec
fs
testl
cmc
inc
cmp
insl
imul
xchg
dec
push
dec
pop
xchg
push
ljmp
cs
sarl
ret
imul
mov
shll
sbbb
pop
or
xchg
adc
cs
shr
sbbl
jns
fistl
xchg
out
jp
cmp
pop
repnz
in
lcall
outsl
push
adc
jge
loopne
jg
pop
fcmovnb
jge
fsubr
decb
aad
lods
xchg
jns
scas
mov
mov
cltd
and
jno
aad
cs
mov
ffreep
movsb
scas
insb
jg
sub
sbb
dec
cmp
or
and
mov
pop
mov
xor
sahf
adc
out
sarl
cmp
test
les
cmpsl
arpl
mov
and
xchg
sarl
imul
push
sub
mov
jg
xchg
cs
in
inc
mov
dec
mov
outsl
pop
filds
sub
xchg
and
aam
pusha
shr
dec
shlb
mov
cmpsl
movsl
stos
jle
insl
push
lds
pushf
cwtl
mov
and
data16
lods
xchg
psubw
jle
popa
jge
xchg
subl
mov
stos
fld
adc
jbe
clc
jmp
imul
inc
ljmp
cmp
in
add
jmp
daa
addr16
dec
pop
test
sub
mov
xchg
or
push
into
dec
dec
and
repnz
popw
es
and
dec
hlt
pop
je
sbb
mov
xor
jg
loopne
rcrb
dec
stc
out
adc
aaa
out
popf
iret
adc
js
inc
fwait
mov
or
cmpsl
out
jmp
push
out
inc
arpl
std
fbstp
mov
fwait
mov
push
sub
mov
aad
dec
xchg
das
in
cmp
cmc
lret
or
ss
es
mov
xor
or
repnz
movsb
dec
cmpsl
movsb
in
inc
das
mov
out
popf
mov
sahf
lods
mov
dec
cwtl
mov
and
pushf
nop
fstps
dec
fdivrs
jl
sub
leave
fdivrs
inc
push
jno
ja
mov
dec
sub
std
push
mov
xchg
test
sub
push
popf
mov
mov
cltd
xchg
push
cmp
xchg
adc
in
push
pop
imul
push
xor
inc
sub
push
ror
xchg
inc
xchg
add
dec
or
mov
sahf
or
fmull
fisubrl
dec
lods
loopne
sub
dec
iret
xchg
dec
mov
orl
jge,pt
leave
sub
mov
out
aad
in
in
lods
mov
push
into
aas
xchg
out
cmp
mov
cmpsl
cmp
mov
or
aam
jns
movsl
sub
hlt
mov
outsl
and
mov
loope
jb
pop
js
hlt
lahf
out
cmp
push
stos
adc
dec
ret
popf
xsha1
cmpsb
mov
lea
jg
mov
mov
mov
or
pop
test
not
mov
orb
push
sahf
push
add
pop
jecxz
daa
push
andl
enter
mov
push
test
inc
jns
mul
jp
and
cmp
push
or
push
leave
es
sub
pushf
out
add
into
mov
mov
cmp
cld
imul
xor
in
lea
lahf
lods
mov
inc
inc
mov
and
jno
sub
pusha
aas
mov
out
roll
add
push
xor
in
mov
rclb
push
xor
inc
ret
mov
push
mov
inc
or
and
pop
out
adc
nop
call
out
rcr
fsts
arpl
pop
xorb
mov
mov
shrb
stos
pop
pop
mov
fists
xchg
call
sahf
sub
sub
push
outsb
ljmp
xchg
cmp
nop
or
add
movsl
push
inc
and
or
jmp
push
scas
loopne
add
aad
push
pop
out
cmp
roll
in
rcrb
jns
sbb
outsb
cmp
pop
push
scas
lock
lret
push
stos
push
xchg
bound
push
cmpsb
negb
cs
dec
xorb
push
cmp
ret
mov
cmp
inc
icebp
push
jne
cmpl
jnp
jns
lds
dec
mov
into
dec
cmp
pop
or
sbb
lahf
cmp
rcrl
sahf
jae
in
orl
ret
stos
push
imul
ja
sbbb
push
mov
push
je
xor
clc
and
inc
data16
xchg
jae
mov
cmp
pop
mov
cmp
movsb
loopne
sahf
popf
mov
inc
mov
sbb
mov
ret
arpl
pushl
inc
or
cltd
lret
imul
daa
leavew
push
sahf
cmp
mov
mov
jmp
jecxz
sbb
dec
fmuls
cs
xor
inc
mov
adc
sub
fildll
inc
ret
or
dec
in
xchg
mov
roll
aad
outsl
mov
mov
pop
fstl
xchg
clc
xchg
ljmp
lcall
loope
cmp
repnz
scas
leave
mov
add
daa
or
inc
insb
mov
shll
jne
mov
inc
jno
pop
pop
rclb
jbe
fbstp
leave
and
fisubrs
dec
sub
adc
inc
pop
pop
inc
inc
movsb
sbb
mov
dec
gs
xchg
xor
mov
imul
sub
and
ret
inc
inc
cmp
jb
inc
sbb
dec
adc
jp
mov
jnp
out
pop
in
and
int3
mov
std
pop
add
vpunpckhbw
push
mov
dec
mov
ret
arpl
inc
in
add
push
outsl
mov
mov
int
pusha
leave
addr16
nop
cmp
jge
push
push
popf
pop
pushf
xor
and
xor
flds
imul
paddq
push
jmp
cmp
pusha
clc
xor
xor
xchg
sub
jp
stos
xchg
sbb
push
nop
xor
rcl
stos
xchg
xor
dec
push
out
js
xchg
dec
sahf
sub
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
push
mov
add
pop
popa
inc
lret
jmp
hlt
and
pop
add
sbbb
in
cmpsl
into
dec
stc
rorb
icebp
xchg
pop
int
sub
repz
add
jbe
dec
stos
fcmovu
xlat
cmp
clc
cs
mov
iret
add
adc
ret
dec
es
popa
push
mov
xchg
ljmp
popf
dec
or
sahf
data16
adc
imul
jl
adcb
cmp
mov
xchg
and
ret
out
sub
test
aad
jne
nop
add
loopne
and
pop
dec
jl
lock
int3
enter
bound
and
dec
jp
cmpb
scas
lock
jecxz
test
mov
je
das
or
or
inc
jg
mov
inc
test
dec
pop
stos
outsb
mov
daa
jns
add
jmp
pop
gs
punpckhbw
xor
cmp
push
mov
push
inc
jp
inc
into
cmp
in
sub
and
int3
or
jbe
loop
fdivrs
adc
inc
push
test
in
mov
push
push
inc
out
lcall
mov
xor
pop
icebp
jecxz
cmpsl
icebp
push
in
test
sbb
movsb
outsl
cmpsb
push
call
lds
push
or
jo
dec
ret
jo
adc
int
sub
enter
or
jle
push
mov
pusha
sub
js
pushf
mov
fidivrs
out
mov
lods
mov
cmpb
cmp
out
lret
out
mov
xchg
or
dec
hlt
cmp
arpl
push
insl
ss
mov
mov
fiadds
jmp
mov
jb
sbb
inc
iret
push
pop
sti
adc
push
je
mov
outsl
xchg
mov
xlat
insb
sub
xchg
jge
xchg
sar
inc
aaa
mov
jl
bound
cli
cltd
rcrb
cmpsb
or
dec
push
daa
imulb
and
jno
sub
xchg
adc
insb
xor
push
in
push
jno
int3
out
and
test
jnp
dec
sbb
mov
jne
mov
out
inc
add
int
leave
mov
mov
shrl
psrld
adc
movsl
mov
adc
inc
mov
fsubrs
mov
push
pop
xchg
or
cmp
daa
inc
jo
lcall
jnp
cmp
stc
xorb
das
dec
in
scas
test
rorb
movsl
mov
sub
in
insl
imul
mov
cmp
mov
pop
test
mov
sti
notl
fs
ja
stos
pushf
lods
inc
inc
sub
sti
sbb
decb
xchg
addps
test
popa
dec
data16
les
push
mov
cmp
jae
rcrl
fwait
and
push
jb
mov
pushf
test
cmp
fisubrs
sub
xchg
push
dec
fnstsw
movsb
push
add
andb
cmp
int3
push
mov
out
push
and
inc
data16
in
push
dec
inc
jmp
cmpsl
in
in
mov
xchg
out
and
xor
scas
or
jmp
jge
lds
clc
pop
mov
cs
or
arpl
leave
das
lods
imul
jg
ret
sbb
jl
sbb
les
cld
lods
fsts
push
push
shlb
ljmp
lcall
inc
xchg
cmp
xchg
mov
sbb
push
cmpsb
xor
or
push
test
int3
bound
or
mov
jge
and
pop
cmpsb
pop
sbb
jge
mov
mov
mov
push
sub
push
push
aam
xor
in
ficomps
imul
pusha
popa
xchg
fwait
sbb
pop
xor
scas
xchg
iret
imul
incl
adc
lods
or
push
jns
xchg
pop
ficoms
sbb
mov
push
pop
daa
std
inc
sbb
enter
or
adc
mov
sahf
jle
mov
pop
nop
in
sub
inc
lret
ss
dec
out
add
imul
cbtw
aad
jp
xchg
fimull
push
mov
imul
and
push
jge
jo
inc
add
lret
pop
sarb
std
push
jle
mov
hlt
inc
dec
jo,pn
sub
mov
lcall
cmp
and
push
out
ja
add
push
insb
cltd
sti
ss
push
push
and
loop
cmp
fdivr
enter
add
dec
push
orl
pop
lahf
js
jno
add
dec
adc
lahf
jl
repz
popa
std
lods
enter
mov
adc
push
dec
pop
jns
jo
cmp
fistl
cmpl
inc
in
in
add
fists
pushl
or
inc
scas
adc
add
sub
decb
rol
xor
jo
lcall
nop
pop
sub
adc
fucomip
adc
cmpsl
out
movsl
orl
insl
or
iret
filds
stc
sahf
int3
sub
push
push
imul
aam
add
enter
inc
push
push
in
jge
add
pop
bound
dec
xchg
xor
jmp
repz
cmp
sbb
or
addb
jns
orb
add
xlat
mov
cmp
cmp
popa
jp
lea
pop
push
sahf
shlb
xchg
loop
cs
sub
filds
push
xor
in
xorb
cld
cmp
inc
lcall
rolb
outsl
xchg
loope
mull
cld
and
outsl
lods
inc
ret
jno
push
and
clc
add
lea
ret
adc
popf
pop
out
adc
push
sub
js
xor
mov
pop
or
xor
divl
gs
pop
push
lret
or
mov
xchg
das
inc
mov
xchg
std
push
loope
sar
ds
scas
lods
pop
xchg
dec
cmp
std
add
xchg
xlat
imul
jg
mov
repz
leave
lahf
or
mov
push
outsb
push
jnp
push
mov
mov
jmp
sbb
nop
and
sbb
dec
jle
adc
and
mov
fsts
pop
mov
mov
insb
aad
mov
into
dec
xchg
mov
iret
cwtl
lcall
jecxz
pushf
xor
outsl
stos
mov
sbb
int3
dec
pushf
out
cld
inc
data16
add
test
xchg
ret
aad
fsts
mov
out
shll
pop
inc
jp
pop
push
inc
mov
or
pop
ret
aaa
and
xchg
out
sbb
fidivs
mov
jae
inc
imul
add
mov
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
pop
mov
push
inc
js
cmp
loop
das
add
mov
dec
aad
fisttpl
or
int3
fbld
shrb
adc
xor
push
insb
popf
add
xor
xor
sub
movhps
or
mov
adc
popa
and
test
adc
stc
shrb
dec
das
sbb
xchg
outsl
inc
jle
mov
iret
jb
sti
inc
jge
ret
xchg
xor
rcrb
xor
push
fisubl
jae
xchg
pop
mov
daa
jle
sub
stos
lahf
xor
cld
jo
or
aam
mov
or
repnz
lret
fs
ljmp
repnz
clc
mov
in
shrl
and
cmp
xchg
fisttpll
js
inc
xchg
cmp
icebp
push
iret
shrl
pop
inc
sbb
popf
xchg
and
push
or
testb
insb
repz
push
inc
fucomip
cmp
adc
and
xchg
mov
adcb
jb
sub
push
adc
insl
xchg
ja
add
mov
push
stos
imul
jp
mov
out
or
ret
orl
cmp
adc
inc
into
xchg
or
pop
lcall
lret
push
enter
dec
xchg
clc
push
xchg
push
stos
xor
add
sub
dec
inc
xchg
in
cwtl
mov
push
and
ret
test
movsb
jo
fisubl
and
push
daa
mov
frstor
test
mov
out
lods
sbb
js
fsts
fsub
and
mov
jecxz
jmp
push
jecxz
out
in
add
xorb
int3
jbe
out
xor
fnstcw
push
xor
jl
nop
xchg
cs
mov
cmp
inc
and
xlat
cmpsb
push
sub
and
cmp
iret
ss
dec
fnstenv
imul
cmc
push
adc
pop
add
dec
lea
mov
lods
in
rcrb
bound
cmp
push
push
mov
and
or
jne
mov
or
inc
fpatan
dec
mov
repnz
inc
push
jmp
pop
decb
in
mov
push
inc
mov
cmpsb
jnp
aas
adc
adc
dec
xlat
movsb
pop
inc
add
stc
and
sbb
inc
scas
mov
or
stos
imulb
mov
test
test
out
fwait
loopne
daa
mov
and
dec
add
mov
clc
pushl
mov
popa
scas
mov
push
in
or
adc
mov
xchg
mov
xchg
pop
jbe
outsb
mov
std
mov
mov
cmp
cltd
jne
and
xchg
aad
sbb
out
jmp
ds
popa
test
jl
sbb
dec
andb
andb
movhps
cmp
and
testl
movsb
inc
xchg
pusha
pcmpeqw
stos
inc
or
sbb
sahf
pop
cmpsb
out
push
test
imul
push
mov
push
pop
test
addr16
lret
leave
adc
shll
fisttpl
mov
cmp
xchg
mov
int
repz
loop
push
xchg
pop
and
int3
push
xlat
sub
cmpsl
outsb
mov
cld
fisubs
mov
mov
int
pusha
bnd
push
or
push
popf
jae
xor
cs
jns
jno
scas
test
mov
push
and
pusha
or
bnd
sub
aas
decb
outsl
push
cmp
pop
sub
mov
fists
outsb
sbb
jb
xlat
pop
mov
lds
daa
arpl
xchg
lcall
cmp
cmp
into
icebp
push
scas
inc
pusha
jo
es
dec
jmp
addr16
inc
fisttps
je
daa
pop
jp
test
test
outsl
mov
and
pop
or
sbb
pop
jmp
aad
jbe
aam
out
rolb
lret
pusha
xor
movsb
cwtl
cmpsl
mov
dec
jb
and
fdivrl
adc
lcall
data16
repnz
jne
pop
loope
pop
mov
mov
push
push
pop
loope
mov
in
mov
je
dec
sarb
cltd
mov
ds
jecxz
or
jns
sbb
in
cmpsl
dec
cmp
cltd
adc
loope
aaa
dec
in
bnd
dec
pop
fisubrs
and
pop
dec
int3
hlt
adc
out
loope
xchg
bound
std
stc
inc
sub
mov
adcb
ss
jnp
in
or
mov
jmp
push
cmp
fistps
push
jl
int3
dec
cs
xchg
or
test
imul
movsl
imul
adc
pop
xchg
in
in
mov
bound
pushf
call
fildl
cmpsb
jg
jae
pop
div
inc
ja
sbb
adc
xor
dec
mov
sti
xlat
add
jo
ljmp
ja
movsb
xchg
pop
jo
pusha
cwtl
insb
add
inc
lods
fs
cwtl
dec
xchg
push
int3
sub
or
or
icebp
insb
mov
mov
or
lcall
xchg
adc
rorl
sbb
out
inc
adc
sub
daa
nop
mov
mov
cltd
or
mov
jg
mov
mov
popf
push
mov
ss
mov
arpl
aam
push
cli
xor
ja
incb
add
dec
adc
clc
js
ss
dec
repnz
add
sbb
pop
jle
sbb
inc
cmp
imul
inc
xor
pop
and
mov
das
pop
ud2
add
push
mov
in
push
ds
push
mov
cmp
mov
add
std
ss
lahf
jle
lea
sti
stos
insb
ret
push
inc
mov
or
xchg
dec
push
pushf
xor
jae
test
push
add
xchg
fstp
xchg
fidivl
mov
dec
push
testl
cmp
aam
mov
sahf
js
cld
sbb
cld
sbb
add
pop
xchg
mov
xor
adc
ljmp
and
jbe
lret
xchg
ds
call
inc
pop
addr16
jae
inc
lcall
push
cli
lea
leave
mov
int3
lds
cmp
mov
int3
ss
or
and
test
mov
leave
aad
push
adc
dec
lret
mov
adc
lahf
test
sbbl
arpl
fistps
mov
jae
sub
fisubrl
or
scas
rcrb
inc
nop
cmp
xorl
std
std
es
iret
cmp
xchg
xlat
daa
pop
lea
dec
adc
mov
loopne
rcrb
add
cwtl
xor
and
movsl
in
mov
or
or
mov
mov
lds
mov
or
mov
in
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
jg
scas
lret
ja
push
leave
mov
pop
inc
leave
aaa
lret
sbb
in
hlt
gs
mov
imull
in
ss
popa
sti
push
and
ficoml
repnz
fisubs
es
cld
mov
push
fstpt
mov
leave
push
test
ror
inc
dec
inc
xchg
cmp
sbb
in
call
cmp
adc
push
lret
push
adc
xchg
stos
movsb
or
int3
sbb
leave
jnp
pop
pop
jmp
rcrb
daa
aad
fs
mov
bound
pop
rolb
movsl
jb
push
add
or
dec
xor
cmp
std
jg
call
cmc
adc
xchg
rorl
dec
xchg
jmp
dec
xor
stos
cmc
xlat
addr16
fiaddl
jge
pop
fcomp
aas
add
iret
in
and
mov
inc
inc
mov
jne
in
mov
rclb
sub
ror
imul
cmpsl
sub
cmp
pop
cmp
push
adc
mov
pop
jae
lret
ja
mov
pusha
test
std
mov
xor
icebp
dec
jb
iret
mov
test
aad
mov
jp
cld
cwtl
jno
je
ja
mov
imul
jo
data16
scas
gs
adc
and
sbb
xchg
call
jo
ret
inc
std
outsb
xchg
jbe
push
push
cmc
mov
mov
jo
push
repz
pop
mov
shll
loopne
cmp
outsb
mov
rol
push
fsubrs
lea
sbb
rcl
mov
pop
mov
cli
add
pop
mov
lods
nop
imul
add
push
push
arpl
loopne
arpl
daa
adc
stos
out
inc
jb
ret
scas
cwtl
jo
inc
xor
aad
call
xor
into
sbb
int3
leave
cmpsl
lock
dec
cmp
popa
jae
inc
sbb
fistps
dec
or
scas
rol
pop
inc
push
hlt
and
loope
loop
mov
mov
add
orb
jmp
mov
std
sbb
cmpsl
call
out
cmc
inc
cmp
inc
dec
xchg
mov
xor
mov
ds
stc
fbld
dec
mov
sarb
fistl
xor
and
fists
pop
stos
scas
xchg
pop
push
das
dec
push
pop
lret
repz
mov
or
ja
pop
stc
negb
cmp
fcmovb
push
insb
xchg
and
popf
aaa
add
ret
das
leave
xchg
dec
inc
mov
test
jnp
out
push
xchg
cmpsl
cmpsl
clc
xor
xor
fldenv
in
mov
sub
fldl
or
je
ret
faddl
lea
push
push
outsb
lds
es
or
xor
jae
in
fldcw
aam
mov
outsl
sahf
xor
mov
cli
adc
sub
mov
push
imul
das
or
adc
xchg
push
mov
sahf
sbb
sub
cmp
sub
adc
adc
xchg
lcall
inc
mov
loop
xchg
xlat
inc
icebp
mov
cmp
push
xor
and
icebp
hlt
xor
stos
dec
ss
mov
pop
shrl
cmp
repnz
pop
fcomi
inc
fdivl
es
mov
ss
sbb
and
out
pop
add
jecxz
push
fdivp
adc
lock
fisubs
shl
sub
mov
aas
adc
outsb
and
push
lcall
jle
outsb
aad
sbb
out
scas
inc
and
or
fdivr
imul
fldt
push
inc
add
jo
jg
cmc
push
pop
out
sub
and
sub
pop
repz
es
jns
push
dec
mov
lds
imul
pop
les
xchg
mul
add
mov
outsb
in
dec
cmpsl
call
xchg
cmpsb
fstl
jnp
dec
mov
bound
mov
nop
or
mov
or
adc
gs
pop
in
mov
scas
out
daa
pop
inc
mov
pusha
fsubrl
or
cld
push
popf
jnp
or
xchg
add
sub
ret
pushf
scas
sbb
mov
push
ret
cmp
lahf
inc
or
andl
mov
pop
lahf
sbb
rorl
lods
jge
sbb
or
adc
ret
mov
stos
daa
cmp
or
sbb
into
movsl
cmp
subb
push
jno
lret
cltd
test
sbb
sbb
mov
push
lahf
xchg
bound
sub
xor
dec
imul
dec
and
jecxz
call
pop
cmp
mov
sub
out
stos
bound
aam
xchg
test
ljmp
shlb
cmp
inc
addl
sbb
icebp
push
jp
mov
push
inc
pop
pop
add
jmp
bound
sbb
push
push
xor
and
lods
mov
insl
push
cmp
xor
dec
sub
lahf
scas
mov
fsubr
pop
xchg
sbb
test
xorb
xchg
mov
add
es
and
mov
jbe
aam
cwtl
test
add
pop
jl
insb
mov
scas
xchg
mov
or
jns
into
xor
pop
or
iret
shll
mov
mov
aas
fsubrl
rcll
pop
or
sub
sub
ja
jg
addb
sbb
mov
lods
push
push
cmc
jmp
pop
std
ljmp
pop
dec
adc
jge
mov
ficomps
jo
js
test
mov
adc
pop
test
inc
inc
sti
outsb
mov
fiaddl
push
std
push
cmp
lock
pop
pop
out
jb
pop
out
int
ljmp
mov
int
scas
mov
mov
sbb
jbe
sbb
xor
aam
xlat
dec
pusha
xchg
adc
jbe
shll
mov
comiss
int3
jnp
add
mov
add
pop
and
fs
jae
ljmp
loopne
inc
das
int3
or
cmpsb
fisubrl
shll
mov
and
inc
cmpsl
shlb
sti
add
inc
mov
pop
data16
aas
call
inc
mov
xor
divb
sti
pusha
ffree
pusha
inc
jl
mov
add
leave
mov
int
out
adc
adc
lcall
cmp
cmp
cmpl
xchg
movsl
or
pop
push
pop
mov
jge
or
lahf
and
pop
xlat
ja
adcl
or
popa
inc
mov
sub
xor
aad
ds
pop
add
and
in
cmp
in
rorl
mov
inc
sbb
adc
shrb
sub
jns
testb
push
scas
jmp
addb
hlt
dec
dec
sub
sub
mov
mov
ljmp
sub
outsl
jnp
push
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
xchg
bound
ja
cli
fwait
pop
dec
dec
add
mov
in
fidivs
inc
scas
test
push
cs
cli
add
mov
inc
fbld
rol
rclb
and
loop
sbbl
sbb
cmc
fiadds
xchg
inc
outsb
jmp
data16
jb
jnp
pop
aas
sub
imul
sbb
adc
xchg
jb
adc
outsb
dec
xchg
in
or
or
movsb
dec
jmp
mov
add
xor
cmp
sahf
je
push
push
jae
fwait
or
jecxz
and
mov
xchg
and
ficomps
fldl
pop
jmp
push
insl
clc
data16
push
xchg
lds
icebp
sub
adc
into
daa
sbb
int3
es
outsl
sub
pmaxsw
sti
inc
out
inc
test
xchg
xorb
les
andb
cld
psubsb
pop
popa
ficoms
vmwrite
sub
push
mov
or
add
add
out
xchg
push
or
xchg
shr
mov
push
fstps
aas
adcb
jns
notl
loop
addb
loopne
add
pop
xchg
xchg
jne
sbb
pushf
mov
cli
je
and
mov
call
push
loop
dec
xchg
sbb
outsb
mov
rcl
dec
repnz
scas
arpl
ss
loopne
lahf
in
nop
mov
inc
mov
scas
add
pop
sbb
stc
fwait
add
jle
ja
cmp
test
xchg
subl
aaa
push
cmp
xor
xor
test
sub
lcall
xor
lock
pop
sub
cwtl
aam
and
std
out
sbb
mov
mov
xchg
stos
js
xchg
iret
xor
pushf
mov
rcll
mov
insb
movsl
imul
js
xchg
decb
push
push
pop
repnz
test
xchg
ror
lret
sub
stos
dec
pop
add
dec
mov
cmp
fnstcw
cltd
lods
aaa
outsl
push
dec
mov
out
lcall
ret
mov
movsb
xchg
mov
cmpsl
lretw
mov
mov
xchg
popf
lds
daa
int3
mov
je
push
inc
xchg
cli
pop
pop
insl
shl
popf
out
cmp
jbe
int3
lret
adc
das
fcoml
insb
xor
add
leave
mov
mov
insl
jp
shlb
xor
cmpsl
xor
mov
xchg
jg
test
cmc
daa
jbe
int3
loope
int
enter
adcl
insb
das
dec
aam
sar
clc
pop
movsb
pop
daa
cli
lods
inc
cmp
out
or
jmp
jge
sub
cmpl
cmp
leave
fildll
loope
inc
les
mov
lods
iret
adc
add
sbb
ss
mov
pop
jle
popa
jp
or
cmpsl
std
lcall
fs
cli
xor
mov
xchg
xchg
lret
out
xchg
lods
mov
and
cmp
lret
dec
lods
cmp
gs
mov
or
sbb
aad
lods
arpl
in
repz
scas
pop
das
sti
sub
push
sbbl
fwait
sub
scas
add
cmp
jnp
dec
je
lret
das
cmc
cltd
jb
jmp
sahf
push
test
ret
clc
mov
lret
addl
rol
stos
dec
or
and
push
movsl
outsl
push
ret
in
shrb
iret
shl
cmc
and
mov
sbb
imul
dec
popa
fstps
in
in
jge
out
cwtl
mov
inc
push
xchg
frndint
outsl
xor
jae
jg
lea
mov
or
mov
sbb
or
fs
push
scas
loope
nop
cmp
aaa
or
push
mov
xor
cltd
xchg
push
inc
xchg
xor
push
test
loope
call
in
cmp
pop
and
test
pop
stc
stos
lock
lret
mov
and
fs
jl
inc
pushf
xchg
add
adc
jg
and
add
insl
cmpsl
or
ds
jno
mov
or
sub
repz
lock
stos
sbb
scas
mov
mov
daa
push
pop
test
test
push
in
add
testl
mov
ret
jle
int3
xchg
mov
aas
data16
push
mov
pop
dec
cltd
popa
inc
inc
dec
movsb
fimull
out
xor
iret
test
pop
lea
arpl
push
std
lock
push
pop
dec
cmp
inc
mov
movsl
cmp
xor
xchg
mov
fildll
cmp
dec
sarb
aad
lahf
push
dec
mov
out
xchg
adc
int3
das
adc
sahf
lret
test
or
xchg
push
out
insb
addr16
jp
pop
xor
into
test
jp
mulb
movl
icebp
dec
push
ret
into
and
rol
fildl
or
inc
push
jle
xchg
int
cmp
test
movsl
aam
and
pop
push
ret
fisubrs
fwait
out
xchg
inc
cmp
cmp
dec
in
mov
push
xchg
inc
sub
xchg
fwait
mov
shll
push
data16
mov
aad
cmp
sbb
inc
fimull
xchg
aaa
mov
out
xchg
ss
cltd
or
sti
push
inc
push
mov
cld
loopne
pop
inc
xor
into
into
imul
pop
shrb
push
dec
adc
adc
xchg
jmp
dec
cmp
lods
mov
loope
dec
inc
loopne
xchg
pushf
outsl
push
push
negb
adc
jne
dec
test
ret
nop
lods
sbb
mov
outsl
ficomps
dec
mov
mov
movsb
shlb
daa
loop
sysenter
stos
and
jecxz
cli
jb
lea
sbb
loopne
maskmovq
negl
int
and
scas
mov
aam
roll
fdivrl
sub
flds
outsl
jl
sub
and
imul
rcrl
out
push
mov
jb
repnz
ffreep
fldcw
jbe
jae
cmp
je
add
mov
jl
stos
stos
out
mov
cmpsl
repz
mov
sub
pusha
mov
cmp
loop
leave
cltd
dec
sub
fisubs
rcll
ret
mov
movsl
jno
sbb
mov
mov
mov
sub
sbb
push
shll
scas
xor
pop
sub
cmpl
xor
fs
cmpsl
ds
or
jge
bound
stos
or
adc
push
push
xchg
adc
fldl
mov
dec
adc
fstl
or
outsl
std
sub
fimull
loope
pop
or
push
adc
pop
jo
xorb
ljmp
lahf
movsl
lock
daa
stc
mov
cli
outsl
or
and
test
push
and
sub
repnz
jl
push
jg
gs
pusha
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
movsb
mov
ja
ret
jl
dec
and
adc
adc
stos
test
hlt
mov
push
sbb
push
or
jnp
jle
aas
xchg
dec
ja
outsb
mov
pop
jl
add
dec
std
or
mov
pushf
mov
lock
paddusb
repnz
dec
sbbl
fisubrs
jo
lcall
jecxz
lock
adc
push
pop
in
sarl
in
mov
out
jmp
xchg
xchg
inc
inc
sub
and
call
inc
mov
xchg
xchg
lret
xchg
ret
movb
rclb
lahf
inc
enter
lea
add
sbb
lahf
cmp
jne
sbb
movsl
cld
cmpsl
aaa
fldt
dec
xor
test
aam
mov
dec
sti
push
test
pop
sbb
into
sbb
jl
outsb
push
aad
imul
mov
push
bswap
mov
rclb
in
lret
shrb
mull
cmpsl
decl
mov
cltd
pop
lahf
lcall
pop
adc
xorb
sti
xchg
js
and
adc
pop
mov
mov
sbb
je
fdivs
mov
in
in
inc
mov
lret
cli
sub
push
ret
scas
fbstp
out
stos
shr
pop
pop
dec
ficoml
sub
outsb
cmp
xchg
mov
pop
inc
push
adc
or
push
xorl
and
clc
enter
out
int3
mov
dec
cmpsl
pop
mov
mov
shl
mov
call
and
repnz
add
mov
push
fmull
outsl
sbb
scas
xchg
xchg
dec
jbe
cld
call
pop
jo
movsl
je
pop
test
add
and
mov
test
mov
mov
loopne
leave
fadd
pop
xchg
repnz
jg
ja
mov
sbbl
cmp
mov
stos
inc
mov
ret
fdivrl
int
cwtl
iret
sti
mov
jne
lcall
adc
jne
push
fdivs
jmp
aas
inc
adc
mov
mov
jns
xchg
push
mov
insb
jmp
mov
fcoms
sub
int
imul
jns
and
jne
pusha
mov
jle
and
lret
loop
jmp
jmp
test
adc
inc
jl
push
pop
xchg
cwtl
cmc
mov
or
mov
sbb
add
and
pop
jge
scas
jp
cmp
push
int
push
fimuls
lds
xchg
int3
mov
sbb
mov
dec
xor
test
test
push
aas
push
mov
lock
sbb
mov
andb
jb
mov
loope
sbb
ret
pop
jl
pushf
adc
aad
cmp
mov
cmpsb
movsb
sbb
out
ret
sub
sahf
ficoms
push
les
das
push
xor
scas
adc
outsb
jbe
test
jae
sub
inc
push
jmp
outsb
pop
cwtl
inc
loopne
adc
push
dec
mov
cmp
testl
xor
data16
cwtl
clc
push
stos
gs
mov
xchg
lods
fiadds
out
add
and
xchg
das
jmp
sbb
mov
stc
aas
aas
xchg
jmp
push
push
adc
pop
xorl
mov
data16
in
mov
xchg
daa
scas
js
xor
incb
mov
in
push
cmp
sbb
xchg
mov
jo
aad
fwait
jp
repnz
push
mov
xor
adc
or
xchg
data16
xchg
notb
hlt
cli
mov
pop
imul
mov
xor
cmpsb
outsb
mov
jbe
test
push
dec
icebp
sbb
icebp
fwait
mov
xlat
or
jb
addb
push
pop
lahf
popa
inc
sbb
dec
movsl
dec
sbb
mov
dec
test
push
mov
add
out
jmp
xchg
in
sbb
hlt
jb
scas
sbb
ret
mov
fldpi
sarb
aas
inc
push
pusha
cli
popf
sarl
jecxz
daa
inc
rcl
lcall
xor
inc
xchg
arpl
sahf
pop
ret
popf
arpl
pop
call
repz
incb
jo
jb
lea
cmpsb
mov
mov
aaa
int3
out
jo
and
cmp
push
pop
add
pop
sbb
or
push
xor
push
in
fstl
adc
movsl
cmp
mov
xchg
adc
or
or
int3
adc
push
inc
xchg
jle,pn
jg
push
mov
arpl
xchg
cmp
aad
mov
aam
add
insb
scas
sahf
out
fimuls
lcall
fistpl
addl
fwait
push
shr
dec
pop
dec
mov
shrl
sub
shlb
inc
js
adc
in
pushf
push
mov
adc
insl
add
mov
cwtl
cli
xor
or
negb
lcall
ss
mov
cs
sbb
mov
data16
pop
inc
jb
mov
add
sbb
mov
or
test
in
dec
add
jno
pop
imul
daa
push
mov
addr16
inc
leave
cmpsl
xor
or
push
inc
push
and
and
out
jle
adcb
inc
movsb
pop
dec
lcall
cmp
or
sahf
mov
add
mov
jne
xor
xchg
outsb
sti
stos
lahf
aaa
cld
popl
cs
pop
cld
pop
xchg
adc
enter
xor
add
jg
xor
push
push
push
xlat
mov
stc
mov
sub
xchg
das
lret
je
mov
dec
pop
xor
clc
mov
cmpsl
imul
movsb
xorl
mov
jmp
insb
cld
cmc
jmp
not
add
adc
cmpsl
adc
and
repnz
cmp
addr16
sbb
xchg
bound
mov
jnp
ret
test
inc
pop
xchg
cmpsb
mov
xorb
in
fstps
hlt
test
sbb
pop
mov
cwtl
xlat
xchg
clc
jge
mov
ds
xchg
mov
in
in
inc
scas
sbb
jmp
ret
cmpsb
pop
into
fwait
inc
mov
cmp
or
sub
lret
movsl
frstor
mov
dec
shr
hlt
jnp
jle
fmuls
jns
add
in
hlt
lods
pop
xchg
cmp
ds
out
shlb
sbb
scas
cmp
outsl
xor
iret
sarl
push
outsl
aaa
or
jp
dec
lods
xor
xchg
sub
jb
inc
in
outsl
dec
pop
insl
sti
push
stc
push
jp
jbe
scas
out
xorb
lds
pop
xor
xor
xchg
pop
xchg
pop
adc
mov
in
js,pt
and
sub
add
sti
subl
jo
outsl
mov
mov
shr
mov
inc
dec
jne
jns
sbb
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
push
test
ja
and
test
and
mov
in
mov
in
inc
lahf
cmp
mov
or
fwait
jmp
cmp
xor
xor
mov
push
inc
cmp
sti
mov
je
adcb
ljmp
jno
cmc
outsl
ljmp
pusha
aaa
fsubr
push
mov
imul
xchg
adc
inc
pop
pop
xchg
jbe
sbb
insl
loope
mov
or
dec
je
cmp
in
push
test
mov
fnsave
mov
loope
icebp
inc
les
inc
mov
gs
mov
xor
arpl
or
push
mov
jbe
ficompl
subl
call
test
sub
out
and
test
scas
inc
ljmp
test
sub
mov
shll
fsubrs
lock
andb
or
in
mov
aaa
sub
addr16
jno
ret
mov
dec
outsl
adc
pushf
int
sbb
stos
adc
adc
pop
mov
xor
addr16
xchg
sbb
push
mov
mov
addr16
lds
sub
inc
mov
int
cmp
mov
push
scas
rorb
fisubrl
push
popa
xor
inc
addr16
and
sub
push
hlt
mov
les
fcoml
cmp
or
xchg
ret
aaa
pop
in
or
mov
loope
nop
js
shrb
lods
insl
mov
xor
lahf
fisubrl
push
int
pop
lods
subb
fiaddl
pop
outsl
out
and
loop
sbb
dec
es
push
pop
mov
int
pusha
mov
pop
xchg
jno
jnp
mov
rclb
out
jo
std
lahf
jle
cld
js
xorl
ja
bound
cmpsb
jbe
sbb
stos
mov
lods
mov
filds
mov
movsb
std
fs
sub
jg
stos
aad
adc
pop
jl
negl
push
sub
pop
or
xchg
mov
sarb
out
mov
push
add
loopne
aaa
xchg
pop
popa
mov
xlat
mov
call
xchg
jg
dec
das
sub
add
imul
mov
pop
rol
flds
aaa
mov
in
es
and
mov
fldcw
insl
inc
jb
in
nop
pop
movsl
imul
dec
mov
mov
adc
jno
or
outsl
imul
add
rcr
vmpsadbw
mov
in
jg
es
lahf
jbe
lcall
jnp
add
rorl
bound
loopne
cmc
inc
jnp
push
jnp
sbb
rorb
fiaddl
mov
jno
ja
jmp
aas
pop
adc
je
cwtl
daa
fmull
adc
adc
push
mov
pop
loopne
xor
outsl
aaa
xchg
enter
mov
daa
lods
into
sub
lret
inc
sti
movsb
pop
inc
sub
insb
or
push
push
mov
gs
lods
sti
add
sub
sti
mov
mov
popf
dec
mov
rorb
push
xchg
popf
daa
sub
add
dec
mov
cmpsb
dec
pop
push
in
dec
adc
xchg
roll
push
std
add
mov
cmp
sbb
mov
shlb
mov
pop
fcomps
lods
xchg
jg
inc
rorb
arpl
pop
lret
or
fdivrl
ljmp
or
insb
inc
inc
sarl
negl
and
mov
jae
nop
xchg
push
fisttps
add
xor
int3
jmp
addr16
mov
mov
or
pushf
pop
mov
jl
stos
iret
adc
inc
push
xchg
leave
shr
jno
sbb
cmpsl
lcall
movsl
mov
jnp
lods
test
pop
stos
cmp
repnz
bound
dec
cmp
lcall
xchg
fldcw
cltd
sbb
jb
into
jmp
lahf
dec
loope
mov
mov
das
sbb
xchg
rorl
xchg
orb
xlat
out
cmp
iret
mov
incl
xchg
push
and
jecxz
xchg
aad
pop
stos
mov
out
push
sar
mov
cmpsb
hlt
fisubrl
shll
mov
xor
cmovb
jne
and
shlb
test
inc
and
call
cmpb
jle
popf
incl
imul
ficoms
mov
outsl
jge
jecxz
xchg
dec
in
and
dec
adc
add
dec
jmp
mov
cmp
leave
adc
movsb
xor
pop
inc
xlat
jp
mov
xchg
aad
xchg
lret
xchg
sub
xor
xchg
sub
xchg
or
aam
inc
fidivs
mov
push
push
push
push
pop
dec
pushf
mov
hlt
iret
ret
push
or
movsb
cmp
es
cmp
mov
dec
or
rorb
mov
dec
arpl
xor
xchg
in
jge
stos
add
sbb
xor
adc
adc
sub
add
fbstp
push
jae
or
lret
jge
mov
pop
xchg
jecxz
jae
sarl
jp
mov
test
mov
xchg
sub
inc
sbb
cmp
xor
bound
mov
jl
push
push
stos
ret
jbe
and
lds
imul
je
sahf
adc
cmp
fstps
stc
aas
mov
roll
xchg
push
adc
lds
dec
lds
test
add
movb
xchg
imull
push
xor
movsl
mov
dec
sub
adc
jb
jecxz
cmp
call
sub
xlat
jecxz
clc
and
push
icebp
add
in
fcomps
push
jg
cmp
jbe
mov
ja
sbb
lahf
inc
ja
push
xchg
into
mov
popa
cmc
push
push
mov
lock
jae
dec
push
mov
bound
mov
pop
and
out
and
je
test
jmp
icebp
leave
in
dec
popf
sbb
test
ja
mov
inc
mov
jb
dec
sbb
fiaddl
or
sub
ljmp
lret
std
fdivl
xor
xabort
repnz
push
cwtl
inc
stos
dec
or
scas
insb
push
and
loopne
insb
dec
push
test
mov
neg
or
out
out
test
int
decl
dec
push
xchg
pop
movsb
andl
sbb
mov
pop
xchg
ret
xchg
cmpsl
shrb
and
imul
adc
ret
sti
mov
fdiv
mov
push
inc
jmp
faddl
xchg
loope
leave
pop
mov
sub
cmp
xor
inc
sub
inc
adc
cmp
pop
hlt
in
iret
xor
cli
shrl
sbb
sub
jge
and
cmp
mov
jnp
lock
gs
dec
mov
aas
int
jecxz
xchg
and
cmp
sbb
sarl
dec
adc
inc
jecxz
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
xor
mov
lss
pop
notl
xchg
test
das
aaa
fdivs
add
xchg
cld
sbb
push
push
sbbb
out
inc
push
jns
lods
ja
das
add
insl
inc
iret
cmp
cmp
ljmp
cli
cmpsb
cli
sbb
and
into
into
aas
mov
lret
das
add
adc
or
push
pop
mov
sarl
xor
cli
lret
push
in
test
out
dec
pop
outsl
lods
out
push
ret
adc
in
push
dec
test
mov
sarl
xor
data16
xor
mov
sub
inc
push
out
rcrb
inc
out
mov
stos
pop
inc
inc
mov
scas
mov
jne
fwait
arpl
mov
mov
pop
bound
in
inc
inc
out
jp
sub
sbb
ljmp
bound
inc
mov
lds
jge
or
dec
lret
cltd
xor
cmpb
fcoms
xor
enter
mov
sbb
lcall
pop
adc
popa
xchg
adc
out
out
and
dec
pop
ror
test
sbb
rorl
mov
xchg
addl
faddl
icebp
sbb
mov
pushf
sub
imul
sub
popa
mov
adc
mov
les
push
stc
inc
mov
inc
fidivs
pop
dec
das
fldcw
inc
dec
dec
icebp
inc
jecxz
lea
andb
cwtl
xchg
ds
and
ret
stos
jp
popf
xchg
fmulp
imul
or
mov
cmp
push
into
cmc
inc
sbb
out
out
xor
vhsubps
inc
cmc
and
pop
mov
loopne
add
lahf
out
ljmp
jecxz
scas
inc
rolb
sub
fidivl
cmp
out
out
in
xor
cmpsb
js,pn
mov
dec
in
and
pop
sbb
lahf
or
cltd
cmp
xor
push
lea
movsb
dec
ror
repz
fdivs
mov
mov
lods
cwtl
dec
inc
dec
pusha
jbe
cwtl
add
mov
scas
scas
outsl
lods
xchg
inc
mov
iret
incb
and
push
push
repz
cli
xchg
mov
or
pop
mov
les
or
push
and
mov
cld
adc
push
xchg
jae
adc
and
dec
jb
mov
xchg
jge
mov
jb
lcall
sbb
push
sub
push
inc
add
jbe
movsb
lock
mov
dec
xchg
fidivrs
outsl
dec
xchg
sub
ss
repnz
pop
lock
filds
pop
sub
rol
cmp
cmp
das
pop
mov
jns
rcrb
xor
add
lret
pop
mov
lds
push
sbb
sti
xchg
inc
mov
adc
inc
stos
xchg
add
fcomps
push
nop
dec
mov
stos
mov
sub
and
dec
mov
rol
shrb
inc
arpl
mov
rorb
fcompl
inc
push
aas
hlt
pop
push
fstps
stc
lcall
or
outsb
rcl
xchg
mov
or
inc
sbb
ret
mov
and
add
xchg
mov
push
pushf
mov
cmc
movsb
js
push
movsb
xor
and
fcmovnb
push
in
mov
stc
mov
xor
in
mov
fcmovbe
and
add
fsubr
flds
lods
mov
pop
pop
jge
sahf
xchg
ljmp
out
mov
fsub
adc
shl
jl
lods
jne
fsts
add
dec
jns
loop
pop
pushaw
iret
test
sub
pminsw
xchg
sbb
bts
clc
jp
insl
test
stos
loope
jbe
sbb
dec
pop
movsb
cmp
mov
mov
push
idivl
inc
dec
jl
rcll
jle
lret
ret
and
pop
sbb
dec
cmp
test
push
rolb
lods
stos
loope
cld
shrl
mov
adc
pop
xor
pop
sti
xchg
cmp
fcmovbe
or
adc
fcoml
mov
push
jg
inc
cmpsb
or
and
dec
imul
inc
clc
and
xchg
ja
xchg
sub
jno
add
clc
and
inc
xorb
je
ss
shld
fsub
xchg
js
xor
shll
xchg
imul
loop
pop
xchg
or
pusha
dec
jmp
push
inc
pop
jl
xchg
arpl
mov
sbb
adc
jle
or
jnp
xor
dec
add
sub
fistps
add
out
pop
push
ret
enter
fwait
clc
dec
js
adc
imull
inc
dec
pop
sub
pop
sbb
or
xchg
xor
fs
pop
pop
popa
fldcw
fdivl
orb
push
sub
or
dec
add
loop
es
push
inc
jo
scas
inc
jno
push
lea
sbb
cmp
mov
inc
arpl
lret
jae
xchg
shrb
cltd
inc
push
inc
push
call
sub
xchg
pop
adc
dec
pop
es
cmpsl
inc
sahf
cld
cli
adc
sahf
pop
scas
mov
add
jl
mov
sub
cmovle
xchg
cmpsb
test
jmp
sbb
and
pop
mov
lea
or
fstl
es
sbb
iret
outsb
ja
mov
and
push
fdivrl
mov
dec
test
fcmovne
gs
mov
adc
xor
add
push
sbb
out
mov
xchg
and
fdivr
mov
addl
adc
push
cmc
movsl
push
ljmp
mov
popf
jno
aad
mov
lcall
push
cmp
das
fcmove
inc
fwait
sub
aaa
lret
pop
loope
mov
cltd
add
andb
adc
ds
mov
jbe
pop
inc
ss
decl
mov
sbb
in
aam
fxch
inc
mov
fcomps
jb
and
add
xchg
ret
dec
push
sub
in
stc
jbe
xor
pop
jne
fucomp
pop
call
adc
fs
aad
mov
jno
mov
insl
pusha
sbb
mov
into
cmp
sbb
sub
mov
adc
and
rorl
xchg
repnz
cwtl
callw
fidivrs
pop
out
leave
daa
xchg
sub
adc
mov
mov
test
jno
hlt
icebp
fisttpl
xlat
sub
push
add
xorb
mov
sub
add
insl
mov
and
adc
push
mov
je
out
adc
sub
dec
inc
loop
cmp
push
and
bound
push
mov
into
fcoml
sub
pop
cmp
inc
jp
aaa
rcrl
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
mov
faddp
dec
xchg
ja
iret
int
sbb
or
sbb
pop
pop
negl
mov
ret
icebp
xor
xor
sbb
lret
cwtl
je
xchg
repz
ss
mov
addb
adc
fisttpl
ja
jnp
sub
ror
or
fsts
xchg
inc
cmp
mov
and
bound
xor
setnp
or
adc
xchg
iret
xor
cmp
jno
mov
jl
jae
sub
xor
and
in
or
idivb
je
test
xor
push
pop
jg
lds
ljmp
testb
mov
xchg
out
hlt
fwait
inc
jns
loopne
jmp
incl
imul
adc
lret
out
cmp
bound
negl
add
movsl
sbb
mov
imul
sahf
int
sahf
xchg
jle
in
push
cmp
push
mov
add
push
scas
call
int
jb
leave
jbe
jb
mov
xor
mov
out
jge
rorl
add
insl
jns
in
add
xor
adc
loopne
or
test
cmp
mov
or
dec
je
cwtl
add
inc
mov
call
in
xchg
pop
out
int3
add
dec
loope
shrl
dec
cmp
in
adc
xchg
imull
mov
aad
pop
test
xlat
clc
scas
loope
icebp
andb
pop
mov
pop
lock
ss
mov
xlat
aad
aad
and
lea
jl
pop
jge
insl
dec
iret
push
inc
lods
cmp
jb
dec
mov
adc
mov
jle
jecxz
test
mov
dec
out
lahf
sahf
push
add
outsb
test
mov
lock
filds
ret
leave
test
push
andl
aaa
sti
mov
mov
and
fxch
aaa
insb
fmull
pusha
adc
mov
int3
mov
popf
repz
and
cmp
fisubs
cmpsb
inc
push
cmpsb
inc
pushf
leave
ds
das
adcb
inc
test
nop
jbe
xchg
mov
or
jbe
jp
popf
repz
bound
pop
ficomps
insb
xchg
imul
or
mov
jno
add
ficoml
outsl
or
nop
sti
fcmovb
fildll
aam
inc
mov
bound
xor
add
ds
cmp
lfs
add
dec
sbbb
add
or
push
ret
pushf
test
outsl
jne
bound
ret
pop
xchg
adc
push
bound
push
fwait
popa
push
mov
inc
pop
mov
pop
repz
call
les
push
lods
mov
insl
js
mov
push
test
insb
mov
or
push
cltd
inc
test
and
adc
cwtl
fidivrs
mov
or
inc
jl
aad
ljmp
mov
jl
jmp
sub
mov
mov
xor
aas
adc
inc
dec
fwait
xchg
out
and
shll
fidivrs
inc
pusha
adc
sti
scas
mov
push
loopne
aaa
bound
loope
cmp
scas
sub
insl
dec
inc
xchg
lret
fdivrl
push
fs
jmp
inc
jnp
lds
mov
push
stos
sti
repnz
je
pop
jae
jmp
jle
imul
push
mov
ss
sbb
lret
clc
push
ret
mov
icebp
out
mov
mov
sbb
fxch
pop
clc
adc
xchg
add
mov
leave
pop
mov
and
adc
jge
lret
and
push
cmp
popa
into
test
jge
xchg
xchg
ret
push
out
and
sbb
sbb
dec
inc
xor
cmpsl
xor
mov
xor
push
repz
jnp
push
das
js
mov
enter
lock
lcall
and
nop
test
mov
outsl
lods
mov
push
push
enter
adc
aad
cmovg
loope
insb
mov
mov
mov
mov
pop
cmp
lret
lods
ds
cli
cltd
push
mov
and
jge
pushf
inc
and
stos
sub
test
mov
insb
scas
in
lea
and
in
sbb
insb
invd
les
mov
add
xor
pop
pop
clc
dec
test
cmp
sbb
cmp
insb
sub
clc
div
inc
lds
lahf
sbb
stos
mov
adc
ret
dec
orl
adc
cmp
mov
mov
addr16
pop
test
mov
loope
jmp
ja
mov
dec
lods
push
jge
xchg
push
inc
xlat
roll
push
fcom
xchg
sahf
loopne
mov
in
jl
fs
fistl
imul
dec
sbb
adc
dec
pusha
dec
jle
loopne
add
call
jbe
enter
xchg
mov
idivl
repnz
stc
xchg
mov
pop
or
fwait
pusha
push
outsb
jnp
lock
std
mov
aas
scas
fimull
and
inc
jbe
test
js
push
cld
sub
jo
mov
pusha
sbb
pop
movsb
mov
jmp
cs
jge
xor
push
cwtl
lods
aaa
arpl
jns
adc
loop
adc
cld
rcrl
sti
int
shll
imul
jb
jo
sub
shrl
or
adc
leave
xorb
xchg
pop
adc
lcall
push
xor
xchg
popf
xchg
jnp
out
inc
sbb
notl
push
pop
lods
sub
and
jge
sub
dec
roll
jno
mov
fdivrl
inc
pmaxsw
sub
xchg
push
dec
xor
es
das
sbb
loope
lret
outsl
pop
fstp
sbb
push
in
cmp
rcl
stos
adc
clc
lds
ja
xchg
mov
ss
fwait
pop
sbb
and
xchg
subl
xchg
and
es
orb
int3
movlps
xor
mov
mov
dec
in
dec
in
adc
imulb
rorl
leave
in
mov
scas
jne
pop
adc
pop
push
xchg
pusha
cmc
add
sub
repnz
sub
sub
ljmp
loop
and
ret
mov
pusha
fsts
cmp
mov
movsl
adc
ss
pop
in
dec
xor
xchg
mov
push
jle
mov
enter
adc
pop
push
repz
pushf
outsl
pop
bound
adc
dec
mov
scas
jae
mov
fdivl
cld
int3
loope,pn
or
inc
divl
subl
cmp
ds
mov
std
xchg
je
call
dec
adc
cli
insb
pop
pushf
hlt
jno
mov
jmp
sarl
sti
mov
aam
pop
sub
push
push
stos
aam
sub
nop
push
pop
repz
out
aaa
cmp
mov
or
xchg
sti
cwtl
xor
cmc
ljmp
out
rclb
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
stc
out
loopne
ja
mov
std
pop
pop
dec
or
fsubrs
aas
pop
or
dec
jb
loope
xchg
cld
mov
pop
in
sbb
icebp
mov
jge
popa
decb
pop
mov
int
iret
push
lods
sub
jge
mov
les
scas
mov
lea
sbb
ds
xor
out
sub
movsl
push
dec
sbb
cltd
pop
das
daa
mov
lret
imul
mov
cwtl
jmp
dec
je
es
test
loope
mov
dec
testl
dec
push
pop
pop
xor
rcrl
out
cmpsl
loope
jmp
and
stos
pop
outsl
out
push
das
hlt
mov
loope
in
fcom
sub
repz
or
pop
and
mov
shlb
sbb
mov
inc
sbb
in
or
or
arpl
das
loope
fcoml
call
aad
adc
lock
inc
push
cld
push
gs
add
push
clc
dec
xchg
fistps
jae
cmc
in
pop
test
xchg
orb
xbegin
cli
enter
sub
xor
ret
sbb
xchg
xchg
pusha
sarb
clc
inc
cwtl
ret
sub
or
mov
or
ret
dec
sub
inc
aam
bound
and
outsl
and
leave
in
add
das
sbb
lods
and
fidivrl
imul
adc
jmp
sub
lods
shlb
mov
cmpsl
add
jge
mov
les
mov
jp
push
or
jge
adc
adc
scas
shrl
aas
pop
in
jmp
dec
inc
sti
sbb
cltd
sbb
std
test
call
dec
mov
cmpsl
fbstp
inc
push
inc
mov
movsb
push
sbb
bound
imul
ret
imul
sub
inc
lahf
sbb
xchg
dec
stos
xchg
mov
add
idivb
aam
dec
xchg
je
and
imul
dec
xor
into
cmp
insb
or
pushf
push
vmovaps
xor
testl
nop
pop
adc
fcoms
xchg
lretw
xchg
arpl
mov
lods
add
ds
fs
cs
iret
xchg
mov
sub
push
das
fbld
bound
popa
cmpsl
push
fisubrl
adc
cmpb
popf
mov
xchg
outsl
sub
ret
adc
sbb
sub
push
iret
add
mov
mov
jae
and
int3
dec
shlb
xchg
scas
pop
cwtl
inc
fnclex
and
cmp
cmp
sub
xor
inc
fisttps
pop
fwait
out
mov
jg
add
dec
fwait
pop
jnp
popf
arpl
cmpsl
xchg
pop
cmp
lret
or
fisubrs
push
cli
xor
mov
scas
ffree
fisubrs
dec
mov
fisubl
adcl
cld
or
xor
xor
mov
mov
mov
insb
jle
cmp
or
add
cld
lahf
jae
popa
sbb
es
loope
push
clc
test
jmp
inc
pop
fwait
sbb
int3
push
push
into
mov
aad
rorl
lods
and
ret
nop
jnp
push
and
js
xchg
mov
ss
cltd
push
lods
movb
aam
ret
imul
ds
jl
sbbb
fstl
loope
insb
sub
test
or
dec
call
sbb
nop
cmpsl
xchg
or
add
mov
mov
or
pop
jecxz,pn
dec
inc
loope
or
pop
add
fstps
repz
int
lds
push
dec
jo
mov
cwtl
jns
pop
lock
popf
add
pop
sbb
jns
cwtl
test
data16
dec
pop
mov
sahf
and
xchg
adc
dec
jae
xlat
jg
xchg
out
adc
jbe
cmp
lods
stc
pop
out
int3
sub
cwtl
mov
lahf
movsb
int
imul
adc
or
loop
mov
sbb
stc
cmp
shlb
xchg
insl
xor
push
and
sahf
add
push
aad
sahf
mov
dec
mov
out
inc
fcmovu
adc
outsb
cmpsl
loopne
dec
xor
xchg
mov
pop
pusha
dec
sub
mov
push
push
in
movsl
popf
mov
push
sbb
pop
mov
pop
lock
cmp
mov
push
jno
dec
enter
jge
rcl
pop
pop
mov
lret
jge
int3
or
lds
mov
pop
jge
pop
add
lcall
mov
sbb
outsb
cmp
sub
sub
dec
adc
or
jecxz
xorl
pop
pop
inc
jl
dec
aam
adc
xor
cmp
xchg
into
jle
xchg
outsb
mov
sbb
xlat
ss
in
in
adc
fwait
mov
sub
shrb
pop
xorb
cmp
mov
dec
iret
jp
mov
loopne
push
inc
rcll
div
sbb
das
mov
xchg
iret
fnstenv
fucom
adc
out
sub
mov
dec
mov
mov
daa
leave
lods
insl
loop
xor
pusha
sti
dec
sahf
push
xchg
das
dec
cwtl
xchg
push
xorb
popa
adc
stc
les
jae
inc
jge
jo,pt
cmp
jecxz
out
movb
aaa
jnp
jb
sub
cmpl
push
mov
add
xchg
in
scas
aam
mov
in
mov
jge
sbb
std
repz
fiadds
push
iret
test
xor
xor
sbb
sub
ds
or
cld
jp
sbb
js
fidivs
pushf
mov
or
les
jecxz
cli
xor
push
xor
std
jb
outsl
inc
inc
lods
imul
or
lock
repz
cld
int3
mov
push
stos
cmc
rclb
jecxz
push
add
cmp
jb
dec
mov
out
cmp
je
push
pop
cld
jg
lods
loop
int3
lcall
xchg
rcl
cs
and
insl
sbb
cmpsl
push
int
lcall
push
jge
xlat
jb
pop
push
scas
test
je
jmp
pop
xchg
nop
es
mov
sub
inc
repz
js
pop
push
out
stc
sbb
cmpsl
into
mov
fwait
xchg
pop
jb
xchg
inc
inc
xlat
add
cli
fidivrl
dec
fbld
push
and
test
mov
int3
imul
movsb
cli
and
push
out
ds
mov
mov
mov
cmpsl
sbb
mov
inc
mov
push
inc
adc
mov
mov
aam
sbb
inc
test
in
and
test
sbb
dec
in
add
jp
movsl
pop
stc
dec
cmp
xchg
lods
repz
xchg
pop
mov
lret
and
jb
xchg
inc
or
cmp
stc
jmp
add
pop
pop
sub
or
mov
jmp
aam
inc
test
addr16
add
and
ja
iret
leave
pusha
sbbl
mov
imul
jl
xchg
ss
xor
inc
and
jbe
mov
xchg
and
in
xchg
mov
test
shlb
push
negl
add
jle
xor
outsb
inc
movsl
icebp
adc
adc
in
cmp
fidivrl
lds
push
cmp
scas
and
add
or
lea
mov
clc
imul
mov
dec
cmpsl
mov
inc
lea
mov
inc
mov
loop
mov
or
pop
push
mov
je
aad
mov
jb
popa
mov
test
test
sbb
mov
divb
sub
xorl
cmc
xchg
dec
hlt
rcrl
repz
mov
popa
and
into
mov
call
cwtl
adcb
ds
leave
daa
stc
shlb
lods
and
enter
push
andb
xor
mov
stos
outsb
loope
or
clc
mov
data16
adc
sti
movb
xor
dec
mov
xor
cmp
pop
daa
ljmp
xchg
and
test
enter
popf
das
je
mov
pop
or
push
jbe
sub
shl
lods
dec
in
test
inc
repnz
jp
push
popf
imul
adc
or
xchg
cmp
sbb
fnstenv
push
sahf
mov
adc
arpl
and
xor
outsl
push
pop
mov
cmc
cmp
push
mov
aam
in
stos
loopne
repz
or
sbb
push
enter
push
test
jbe
test
daa
cmpsl
call
adc
ljmp
add
lods
frstor
je
test
shr
jae
or
movsb
adc
out
insl
sbb
or
repnz
insb
jge,pt
sub
or
in
shl
mov
inc
adc
call
sbb
cmpsl
gs
int
mov
mov
xlat
jnp
fadd
jnp
popfw
dec
not
xchg
pop
icebp
rcll
inc
push
fs
push
jge
adc
rolb
stos
sbb
stc
add
xacquire
call
or
movsb
lods
loopne
mov
sbb
lock
rolb
xchg
ficompl
add
mov
pop
lret
push
enter
sub
jo
mov
stc
out
in
dec
or
adc
and
sub
cs
mov
dec
mov
repnz
adc
sub
jne
lret
jae
aas
ljmp
jbe
pop
rorl
push
pop
jbe
jb
aam
mov
call
cmpsb
gs
into
xor
sub
mov
gs
pop
nop
mov
mov
test
fsubrs
fwait
jecxz
sub
cwtl
mov
dec
fnsave
cmpsb
inc
mov
push
lds
add
inc
xchg
and
push
sub
xor
dec
fsubs
sahf
jle
rolb
sub
or
jmp
mov
ret
pop
pop
or
cs
xchg
cltd
push
outsl
lods
xor
aad
cs
lret
js
xlat
xchg
cwtl
add
sbb
adc
push
pop
imul
sub
cmpsl
ss
adc
lds
dec
push
daa
push
add
outsl
xchg
imul
adc
pop
push
arpl
pop
cltd
dec
jb
pushl
movsl
pop
jns
push
out
or
push
fdivrl
in
dec
repnz
add
jnp
test
mov
ret
mov
dec
fsubrs
mov
ljmp
lahf
fcomp
nop
nop
push
cltd
mov
or
sbb
pop
mov
dec
dec
fildll
dec
sahf
sub
stos
les
hlt
jecxz
test
sub
add
cs
push
movsb
jae
les
imul
ljmp
lret
add
adc
testl
add
jmp
es
fstpt
xchg
ljmp
shrb
add
or
cwtl
or
xor
movsl
jp
jns
jno
inc
sub
add
dec
pushf
and
pop
out
jmp
clc
mov
or
or
inc
xchg
xchg
push
testb
cltd
bound
stos
mov
cmp
xchg
lds
mov
push
loop
push
push
ds
jmp
jge
sub
arpl
and
sbb
add
sahf
jb
bound
dec
ljmp
add
pop
pop
push
mov
cmc
loop
aas
or
es
int3
jl
lcall
push
push
loope
fistl
cwtl
push
aaa
or
test
jns
push
mov
repz
or
adc
loop
xchg
test
data16
cmpsb
fistps
mov
rcrb
into
push
popa
or
or
mov
sbb
mulb
mov
or
inc
push
js
mov
out
sub
outsl
xchg
jle
out
int
cmc
fmul
rclb
or
push
and
pop
test
cmpsb
dec
fisttps
outsb
in
shlb
lds
mov
jp
fstp
jp
ret
ret
outsb
scas
inc
in
or
sub
or
gs
sbb
sub
jb
out
imul
enter
sahf
aam
dec
stc
mov
stc
sbb
xor
sti
push
jnp
xchg
xlat
and
add
pop
jnp
mov
lods
ror
mov
fsubp
push
inc
mov
push
mov
jnp
mov
sbb
into
ret
lcall
cmp
mov
es
test
sbb
lods
xor
push
mov
sarl
movsb
or
popf
adc
adc
nop
mov
inc
jp
pushf
out
mov
jg
js
jp
jecxz
pop
jge
or
pop
lret
xor
insb
cmp
push
movsb
mov
mov
add
mov
inc
jle
repz
aad
mov
cmp
pop
arpl
idivb
xor
lock
or
lcall
fs
cld
repnz
or
sub
pop
dec
jno
outsl
adc
inc
comiss
jno
stc
jne
daa
inc
les
mov
dec
hlt
dec
sbb
push
shlb
cld
cs
dec
cmpb
icebp
push
int
cmpsb
jle
inc
test
xchg
loop
push
imul
dec
pop
imulb
imul
push
mov
and
mov
or
aad
mov
imul
pop
fwait
and
xchg
sbb
mov
cwtl
out
push
aad
and
sarb
lahf
jg
adc
add
or
fs
xor
stos
pop
mov
test
xchg
dec
rcl
jae
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
rol
lock
ja
pop
sbb
ss
mov
loop
out
add
packssdw
pusha
ja
je
xchg
cmpl
mov
mov
sbb
movsl
and
jb
scas
int
dec
addr16
cmp
cli
dec
xchg
iret
mov
push
stc
out
cmp
imul
mov
adc
jae
nopl
cwtl
loopne
ret
mov
subl
mov
fsubs
push
les
fstl
mov
in
mov
nop
repnz
mov
cltd
push
inc
lds
data16
mov
mov
fsubrs
push
shrb
sahf
popf
mov
adc
mov
fs
jmp
or
cmp
mov
pop
lods
pop
mov
jnp
mov
mov
aaa
push
add
sub
push
inc
mov
jmp
movsl
inc
ds
sarl
aas
pop
ror
sbb
cmp
gs
test
lea
rolb
cmp
cmp
jo
fcomps
fstps
sti
lds
mov
pop
dec
push
fimull
sub
jae
repz
lea
into
les
sub
add
add
jb
pop
lock
xchg
sub
push
dec
xor
jge
and
xchg
xor
dec
sbbl
pop
gs
sbb
mov
adc
dec
mov
dec
mov
xlat
scas
lahf
pop
push
in
pop
stc
push
rorl
jnp
xchg
add
cld
cs
xchg
sbbl
jae
loop
add
scas
daa
testl
push
cltd
jmp
or
push
shlb
and
aas
mov
jg
push
xchg
lret
cmpsb
sti
jecxz
sbb
jle
ss
es
es
mov
lahf
test
adcl
lods
insl
in
dec
fs
push
mov
mov
push
ljmp
je
mov
call
test
test
pop
inc
cmp
lcall
cmp
in
mov
xlat
call
js
int3
loopne
push
rcrl
mov
sub
cli
inc
push
jg
les
xor
adc
push
jne,pt
xor
mov
dec
push
loop
shlb
adc
daa
cmpb
stc
jb
addr16
or
shl
xchg
mov
adc
sub
jl
rclb
lahf
sub
cmpb
cmovo
out
jmp
inc
adc
aad
sbbl
sub
dec
fs
dec
sbbl
inc
dec
lods
loopne
movsb
aad
scas
lret
sub
jg
ret
xchg
sbb
in
inc
fisubrl
out
jp
mov
dec
jns
mov
push
xor
mov
sub
cmp
fldl
mov
or
mov
frstor
push
aam
push
cli
fwait
out
add
lret
js
inc
adc
outsb
arpl
jbe,pt
xor
lods
add
jo
push
sahf
add
add
sbb
ss
inc
addr16
mov
jle
ret
std
inc
addr16
jl
push
in
adc
and
xor
lcall
mov
incb
mov
rclb
jge
mov
adc
adc
fcmovb
mov
push
addr16
lds
mov
dec
inc
jg
out
cmp
sbb
dec
jne
mov
fisubs
dec
cmp
cmp
add
fildll
or
pusha
aam
jle
mov
cltd
mov
adc
leave
ja
data16
fisubrl
inc
out
mov
test
and
push
cmp
sbb
inc
out
add
cld
test
dec
ljmp
inc
or
xor
xlat
and
xchg
inc
push
xchg
enter
cmp
repz
cmp
and
sub
mov
mov
jp
aas
sub
sub
mov
jnp
mov
mov
sub
sbb
stos
dec
push
sub
cmp
std
sbb
mov
jmp
fisttpl
xchg
shrl
in
sbb
or
mov
or
mov
lods
adc
mov
out
mov
adc
mov
push
or
and
cmp
pop
lret
dec
adc
aaa
outsb
cld
hlt
cli
jno
lock
adc
pop
add
std
imul
xor
vpunpckhwd
mov
push
mov
and
lea
add
ret
adc
jg
xchg
jmp
mov
ja
mov
lcall
dec
lea
aam
je
adc
fwait
and
cmp
into
xchg
jb
cld
jle
cmp
testl
pop
cmp
test
jl
push
xchg
stos
xchg
mulb
cwtl
xorb
jecxz
js
jmp
cmpsb
bnd
fcomps
mov
pop
test
fdivp
and
add
lret
xor
push
xchg
ja
mov
data16
pop
sub
add
nop
lea
mov
push
nop
aaa
iret
cmp
mov
xchg
dec
subl
shll
xor
sbb
test
adc
push
pop
dec
pop
loope
mov
pop
pushf
pop
cmp
je
jl
into
inc
sbb
gs
pop
out
mov
push
ljmp
ret
popf
fwait
das
pop
das
mov
popf
sub
jo
xor
mov
xchg
scas
xchg
add
addr16
push
sbb
sarb
xchg
loope
pop
add
sub
hlt
mov
adc
add
mov
or
fcmovnb
idiv
sbb
jp
js
cltd
push
pop
nop
jl
int
sub
push
mov
pop
pop
je
outsl
pop
in
fsubs
in
or
add
xchg
push
jge
inc
rcll
daa
popf
sbb
mov
rol
cltd
iret
int
and
push
orb
iret
lods
ret
hlt
pop
and
fistl
cmp
sbb
sub
rolb
in
mov
push
xlat
jae
add
inc
and
pop
daa
pop
xchg
lds
out
mov
xchg
aas
icebp
fistpl
pop
cli
or
dec
mov
jb
mov
ja
nop
sub
add
and
aad
push
add
or
mov
inc
sub
bound
push
sahf
test
jns
inc
lock
inc
mov
xor
push
add
jecxz
pop
mov
fdivr
mov
or
mov
cmp
out
dec
and
fildl
jns
inc
mov
std
test
mov
decb
hlt
push
sub
aad
xchg
idiv
push
roll
ret
mov
adc
jmp
cmp
cld
push
sbb
dec
repz
push
xorb
jge
addb
into
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
jns
push
push
add
cmp
push
sub
loop
mov
jo
jecxz
sarl
lds
stc
jnp
inc
mov
xchg
mov
jmp
data16
or
xchg
adc
adc
dec
jo
jecxz
add
cmpl
push
cmpsb
mov
xchg
mov
dec
push
stos
xchg
lcall
sbb
pushf
ds
jne
cli
jnp
mov
repnz
mov
jmp
hlt
xchg
sarb
popf
ret
pop
mov
out
fsub
aad
sti
inc
xchg
and
in
ja
cmp
add
rcl
sub
xor
adc
lahf
cmpl
xor
push
push
daa
jecxz
cmp
icebp
adc
in
pop
fisttpl
les
mov
test
sub
lods
and
out
dec
in
push
sbb
repnz
adc
loopne
adc
sbb
fs
into
pop
adc
fidivrs
push
xor
out
cmp
shl
add
sub
inc
pop
insl
filds
out
mov
cmp
lret
orl
cmpsb
data16
mov
lret
repnz
push
mov
dec
jmp
cmp
ss
lds
sub
out
std
adc
js
or
cwtl
dec
pop
fstp
jl
sti
lret
xor
cmpsl
mov
xchg
ficoms
dec
mov
jb
dec
out
xor
cmp
das
add
stos
dec
fistpll
scas
pop
lock
xchg
xchg
pop
mov
jge
shlb
or
xor
scas
in
xchg
dec
sti
out
call
push
mov
stos
adc
xor
xor
xchg
sahf
in
and
lock
loope
cmp
push
ret
in
pusha
inc
rcrl
pop
shlb
cmp
stos
xchg
jecxz
add
jne
pusha
jae
inc
fbld
push
and
js
jnp
rcll
add
scas
mov
into
mov
fadd
inc
mov
rcll
std
sbb
push
insl
mov
mov
ret
sub
lret
aas
mov
xchg
ljmp
incb
fnstsw
lds
mov
push
aad
push
in
adc
xor
xor
rol
stos
pop
pop
jl
and
xchg
ljmp
or
jmp
and
out
or
andl
and
jecxz
hlt
inc
fisttpll
jne
gs
jp
xchg
jno
or
adc
mov
cmp
test
ljmpw
test
shlb
fs
pop
and
dec
adc
cmp
inc
pop
push
push
fcomps
pusha
mov
add
ss
pusha
dec
fs
pop
or
lock
and
fbld
mov
test
sbb
into
gs
mov
insb
mov
loope
xor
adc
out
repnz
les
lahf
stos
repnz
test
or
cmp
sbb
sub
iret
dec
shll
mov
sbb
inc
mov
push
adc
dec
push
fisubrl
jge
repnz
inc
cmp
in
movsb
sub
and
lods
xlat
cwtl
pop
ficompl
cmp
or
mov
mov
cmpsl
add
fisubrl
adc
add
add
mov
call
pop
outsb
ret
push
fcomps
xor
mov
psrld
and
and
xor
out
repnz
call
jae
cmp
call
mov
in
jp
cwtl
xor
add
and
adc
jo
dec
ret
or
shlb
push
mov
dec
mov
stos
cmp
popf
mov
in
jmp
sub
add
out
inc
or
neg
jbe
mov
loopne,pn
jg
xor
pop
aam
pushf
xor
xor
jns
xchg
rclb
arpl
cmp
inc
mov
ret
push
xchg
call
insl
ss
orl
pop
aas
fsubrs
fdivr
add
xor
cmp
sub
xchg
dec
mov
and
pop
ljmp
xchg
push
push
cmc
push
icebp
iret
add
sbb
cmp
and
xlat
jnp
decb
lods
cmp
sub
rclb
fnstcw
je
hlt
lret
sub
and
and
add
mov
es
pop
jmp
je
jl
pop
xchg
inc
outsl
inc
mov
xchg
ljmp
pushf
pushf
sahf
lret
out
lods
scas
jo
lds
mov
dec
dec
cmp
add
add
fidivrl
mov
mov
jae
pop
mov
fwait
in
mov
sub
sub
sbbb
cmp
xchg
jp
jnp
jo
insb
lods
sti
and
push
or
or
sbb
daa
clc
push
push
pop
push
push
adc
sahf
jl
lds
pop
lcall
movsl
test
mov
iret
addl
jmp
insl
je
jae
or
outsl
js
sub
mov
loope
jg
xchg
push
popl
push
or
mov
add
aad
jmp
xchg
test
orl
jmp
sub
cmp
add
movsl
scas
xchg
out
or
jge
pop
in
fdivrp
pop
sahf
jg
or
mov
inc
add
and
ja
loop
sahf
into
add
scas
lret
push
aam
call
mov
adc
je
or
pop
mov
or
dec
xlat
ret
push
fbld
loope
mov
sub
and
jno
lret
dec
sub
or
sub
loope
mov
scas
bsf
inc
push
bound
push
scas
adc
fldl
test
dec
or
push
out
add
mov
hlt
push
add
call
scas
repz
je
pop
in
jl
imul
movsb
dec
add
cli
add
inc
enter
rorb
inc
pop
jbe
test
pop
out
sarb
lds
xorl
fs
lods
cmp
mov
sti
cmp
sbb
test
rcr
adc
test
push
cltd
aas
add
mov
in
fiadds
mov
pop
dec
dec
stc
cmc
test
aam
pop
lods
das
pop
xchg
jp
movsb
mov
clc
loope
das
mov
push
push
cld
movsb
call
jge
xor
pop
shr
lahf
cmc
shl
popa
and
fdivl
in
inc
sbb
fmull
out
fistl
push
daa
mov
pop
stos
ljmp
ret
inc
sbb
mov
sbb
push
jmp
mov
gs
xor
iret
aad
movsl
jns
mov
pop
mov
push
inc
inc
mov
jmp
popw
and
jbe
xchg
adc
mov
inc
xlat
fsubrs
mov
scas
pop
fisttps
hlt
out
sub
sbb
jl
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
jns
dec
push
aas
ja
inc
lahf
pop
cmp
repz
addb
and
outsb
sbb
test
jp
push
les
sub
adcb
rcrl
jo
xchg
lcall
lcall
mov
cltd
jecxz
dec
mov
jne
imul
adc
adc
jb
insb
push
jne
cmp
arpl
loopne
xor
dec
fnstenv
loopne
mov
jp
addr16
sahf
cmp
outsl
fidivrs
stos
std
sbb
cmp
sbb
in
cltd
mov
lret
test
pop
hlt
mov
daa
add
xor
stos
mov
aad
dec
pop
lcall
jmp
imul
arpl
push
pop
mov
js
scas
push
int3
adc
outsl
mov
pop
dec
dec
sub
cmc
out
add
cmpb
or
and
push
aas
xlat
lods
adc
inc
pop
xlat
add
sub
imul
pop
xchg
push
xchg
ja
mov
jae
inc
mov
in
inc
ds
leave
outsl
adc
dec
push
and
scas
outsb
or
mov
sub
mov
sub
mov
xchg
push
mov
sahf
xchg
dec
fpatan
xchg
pop
les
ljmp
aam
xor
ljmp
pop
mov
push
setnp
aad
loope
mov
pop
bound
mov
pop
aam
ret
mov
pop
pop
mov
cmp
sub
mov
out
sahf
or
cltd
insl
push
call
outsb
mov
sbb
cmp
fdivrs
xchg
shlb
insl
dec
lahf
test
shl
adc
stos
orl
cwtl
lret
mov
cltd
or
jp
addr16
adc
pop
or
sub
cmpsl
jle
sub
ret
inc
push
movl
fwait
dec
sbb
pushf
int3
jecxz
mov
xlat
std
xor
add
add
in
hlt
cs
or
shll
dec
push
pop
mov
mov
insb
mov
push
popf
jmp
push
fbstp
pop
outsb
push
push
or
push
jnp
cli
out
dec
or
adc
and
mov
roll
dec
mov
push
push
mov
jne
inc
ss
xlat
enter
lds
outsb
add
out
inc
lods
fwait
mov
test
shlb
jno
movsb
cmp
or
sbb
lea
push
xorl
aam
pop
jg
clc
dec
into
jbe
call
push
add
mov
push
push
outsb
push
pusha
adc
and
or
mov
pop
rcll
xlat
or
jnp
inc
pusha
rolb
es
push
popa
fstpl
daa
inc
and
sbb
mov
sbb
sbb
push
mov
sub
sub
bound
pop
jp
jge
sub
imul
xlat
jecxz
rolb
pop
mov
gs
sarl
sbbl
int
out
jns,pn
in
jbe
pop
imul
int3
cmpsl
push
jmp
mov
addl
dec
pop
sub
xchg
rclb
push
dec
and
adc
cmp
lret
jbe
dec
bound
out
cltd
sbb
out
cmp
std
xor
sbb
mov
daa
nop
int3
imul
aas
std
sarl
and
push
imulb
insb
push
xchg
idivl
dec
adc
add
mov
push
pop
fidivs
lret
inc
and
daa
leave
imul
fdivl
hlt
les
jno
push
out
in
addr16
stos
fildll
pop
imul
dec
dec
adc
adc
xor
sbb
insb
int
pop
lods
nop
mov
push
adc
jmp
loop
shll
mov
leave
cwtl
cli
in
ja
fs
pop
ljmp
sbb
stos
gs
xchg
shrb
and
xchg
jno
add
insb
popa
dec
stos
push
aas
je
sbb
ja
xlat
dec
loopne
push
enter
aas
push
inc
scas
xchg
cs
jge
inc
and
push
cmp
add
xor
or
mov
dec
xchg
ljmp
ret
sub
shlb
pop
xor
xlat
lods
jle
push
cmp
popf
xchg
jg
fwait
and
out
sub
les
or
call
lcall
bound
sbb
scas
jecxz
in
mov
sbb
fidivl
adc
add
int
push
ja
jnp
sub
adc
out
jle
in
divb
imul
xor
adc
cmpsl
bnd
xor
ss
jb
or
test
adc
lahf
jns
aaa
movsb
sbb
jl
ljmp
and
dec
mov
add
leave
leave
sub
add
sahf
pop
int3
adc
cli
das
and
bound
lret
sbb
les
movsl
cmpsb
or
or
pop
ficompl
xor
roll
lock
nop
imul
sbb
and
push
pop
lods
push
jl
std
dec
mov
dec
idivl
xor
mov
jo
lcall
push
fists
lea
out
stos
aam
mov
dec
jecxz
cmp
aas
pop
cmp
xor
call
inc
fcmovu
push
xchg
cmp
jne
lret
loope
jo
pop
lods
out
call
adc
push
notl
popf
jle
lret
adc
push
fists
and
dec
es
fs
in
fcomip
into
aam
jle
dec
mov
adcl
out
lahf
inc
jbe
insb
and
nop
mov
cmpsl
pop
imul
sbb
bound
push
dec
inc
leave
inc
sbb
mov
gs
sbb
outsl
cltd
cmp
ljmp
repz
sti
fwait
rcrb
es
mov
int3
repnz
push
cli
lods
mov
int3
cld
jl
pop
dec
mov
sbb
adc
cltd
or
cmp
or
sub
sbb
in
movsl
pop
and
adc
mov
push
pop
mov
divl
es
clc
sub
xor
pop
push
mov
rorl
stc
movsb
pop
add
xor
xchg
int3
mov
mov
cmp
push
sub
pop
icebp
out
mov
cmpsl
icebp
rcrl
loopne
pushf
push
push
clc
pop
push
pop
btc
fcmovne
fisubl
aaa
and
stos
jp
pop
sarl
dec
sbb
sbb
add
mov
bound
pushf
mov
sbb
ficompl
fildll
nop
ljmp
jmp
fimuls
add
das
inc
mov
jno
lret
ss
sbb
and
inc
aaa
adc
out
inc
push
dec
cmp
mov
push
mov
hlt
clc
mov
stos
xchg
mov
add
inc
cmp
ret
jno
sarb
andb
les
xchg
mov
test
ljmp
inc
nop
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
add
ja
ja
inc
adc
inc
and
shlb
add
movsl
lods
aaa
dec
outsl
xchg
mov
sub
leave
inc
test
push
enter
push
rcrb
inc
mov
scas
mov
mov
lcall
cmc
mov
lahf
dec
sbb
adc
xchg
insl
aas
lea
pushf
aam
hlt
sub
into
mov
inc
mov
add
fnstsw
adc
push
dec
cmp
out
mov
test
dec
or
aas
mov
adc
fs
sarb
push
and
pusha
jp
out
mull
pop
jg
js
shl
fcoms
pushf
jbe
sbb
in
jne
mov
scas
aas
gs
popl
pop
mov
orb
cmpsb
test
nop
clc
call
add
sub
add
shrl
or
je
dec
xchg
pop
je
das
inc
cmp
dec
jle
lret
lret
push
sub
mov
imul
imul
clc
loop
dec
call
pop
xchg
jbe
and
mov
sbb
rcrb
mov
xchg
push
clc
loop
mov
rorl
push
dec
xlat
ret
sarb
imul
push
jge
arpl
mov
xchg
arpl
test
and
ljmp
ret
sbb
bnd
repnz
push
jp
adc
mov
aam
jl
xor
arpl
aas
push
fiadds
xor
outsb
inc
mov
push
xor
xchg
mov
rcll
cwtl
pushf
pop
xchg
test
xor
lahf
inc
aaa
mov
push
mov
fldenv
cmp
outsb
xchg
xor
data16
jbe
mov
or
shll
ja
xchg
adc
cmp
and
sbb
cmpsl
cli
or
adc
sbb
iret
icebp
push
bound
or
adc
lea
cmp
insl
in
rcrl
loop
loopne
mov
xor
daa
inc
pop
iret
mov
mov
aad
lds
divb
repz
jge
jg
enter
dec
call
movsb
sbb
push
adc
aaa
shlb
push
jecxz
pop
popf
icebp
test
testl
hlt
mov
push
sbb
scas
add
pusha
les
cmpb
mov
test
fldcw
imul
loopne
fwait
sbbb
fstpt
lock
out
xchg
fisubl
xchg
xchg
mov
pop
fstps
aaa
aam
std
pop
xchg
inc
insb
adc
sarl
cmp
push
cmp
add
or
insl
jns
add
add
cmp
mov
add
sub
pop
sarb
sub
lahf
sub
pop
std
shll
stc
sub
push
cld
pop
jmp
je
sub
ja
iret
call
push
xchg
mov
push
js
insl
cmp
or
jle
sbb
mov
jl
inc
imul
pop
fiadds
popa
sbb
dec
jmp
xorl
xlat
mov
pop
mov
fs
add
push
push
pop
movsb
xchg
leave
sub
xchg
sub
push
stos
ror
incb
mov
sub
jae
push
push
mov
sub
pop
sahf
pop
out
ficoms
pop
add
cld
loop
int
xchg
cmc
repz
adc
cli
bnd
aas
insb
push
cwtl
xlat
sbb
insl
pop
test
dec
cmpsb
mov
movsl
fistpl
mov
push
insl
shlb
ja
push
es
jmp
call
mov
inc
push
inc
pop
pop
pop
sbb
sub
or
fistps
cmp
add
pusha
jmp
movsb
push
inc
push
inc
repnz
adc
mov
call
out
pop
xchg
das
addb
jge
stos
mov
mov
cwtl
or
cwtl
lea
imul
mov
mov
mov
test
js
incb
adc
lcall
xchg
pop
adc
outsb
pop
mov
push
or
pop
movsb
fidivrl
dec
inc
pushl
incl
insl
cmp
jmp
xchg
mov
and
fmull
mov
cmc
push
icebp
lods
inc
cmp
pop
inc
xchg
lock
fwait
inc
jecxz
mov
sahf
add
push
mov
xchg
cmp
push
and
loop
mov
xor
stc
outsb
mov
xor
dec
adc
je
jecxz
add
cmp
rol
sbb
push
inc
leave
fisubrl
push
sub
inc
inc
imul
jmp
add
push
xchg
xor
stc
fildl
sahf
push
pushw
cmp
xchg
js
out
sti
das
jg
jnp
out
mov
xor
mov
mov
dec
hlt
lcall
sub
aas
mov
lcall
xchg
orb
shlb
jae
and
xor
or
dec
inc
or
xchg
xor
or
ficoml
aaa
fcmovu
aaa
fistpll
jge
adc
insb
jmp
scas
xorl
add
push
jl
adc
clc
jecxz
xchg
or
das
dec
out
xchg
adc
push
mov
mov
adc
inc
dec
testb
icebp
inc
dec
cmpl
xor
out
cmp
push
sub
mov
out
lcall
xchg
jno
daa
and
xchg
mov
das
mov
add
scas
jb
testb
cmp
or
inc
in
cmpsl
sub
enter
testb
inc
xchg
mov
and
lock
mov
lods
data16
subb
sbb
int
xchg
push
cmp
push
adc
test
mov
rorb
enter
mov
add
jecxz
lret
jecxz
repz
cld
and
test
ficompl
nop
test
fildll
mov
aad
add
int3
pop
add
inc
ja
arpl
cltd
popa
cmp
adc
xor
lcall
mov
push
jno
inc
int
loop
cmpsl
lods
cmc
popf
mov
addr16
adcl
mov
arpl
lds
push
push
das
imul
cli
shll
int3
push
aam
aaa
xchg
dec
in
test
pop
cmp
mov
fwait
add
xchg
insb
test
sub
push
lock
out
mov
and
cltd
insb
out
pop
outsl
dec
adc
xchg
arpl
or
dec
jae
push
ret
stos
and
fs
adc
lcall
add
test
pop
pushf
jnp
roll
mov
call
lcall
dec
inc
mov
or
mov
adc
outsb
test
pop
daa
mov
mov
loopne
aas
daa
stos
fcoms
clc
mov
mov
lahf
iret
movsl
mov
gs
fcoms
test
pop
cwtl
jge
or
out
sbb
adc
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
pxor
mov
cwtl
out
pop
daa
pop
int
push
sub
scas
fistl
pop
jge
jb
push
stos
pushw
pop
mov
push
push
add
adc
cmp
xor
ret
xor
mov
and
mov
mov
rorb
mov
lods
jl
imul
repnz
xor
int3
stos
dec
mov
push
imul
frstor
jo
ds
jbe
sbb
lret
jns
mov
sbb
dec
cs
in
movsl
or
popa
loope
arpl
bound
mov
mov
loop
xchg
pusha
lahf
lcall
pop
stc
es
mov
mov
dec
data16
xchg
mov
cwtl
xor
test
nop
jle,pn
in
mov
pop
ja
pushf
sahf
imull
addr16
stos
xlat
push
push
or
mov
cltd
and
ss
and
sbb
imul
pop
dec
mov
enter
and
xor
aam
mov
dec
push
mov
insl
stc
dec
addr16
pop
and
push
adc
and
fnstsw
cmc
out
call
inc
stos
loopne
cmpsb
gs
xchg
or
repnz
mov
cmp
pop
xor
std
push
dec
ret
aaa
push
sub
int
adc
in
mov
andb
subb
mov
jg
loop
mov
iret
jo
jb,pt
mov
pusha
sub
xchg
ja,pt
xor
adc
or
inc
lods
and
test
xor
scas
push
hlt
xchg
pop
out
mov
lods
enter
cmp
sub
sti
adc
inc
rorl
sbb
or
jo
nop
pop
lods
movsb
cs
sbb
adc
les
mov
xor
jecxz
mov
sbb
adc
stos
push
adc
adcb
lea
adc
orb
lods
cmpl
dec
xchg
pop
filds
sub
sarl
mov
int3
cwtl
adc
sbb
lods
out
subl
jge
movsb
push
pop
subb
xor
mov
sub
js
push
jg
mov
arpl
and
add
cwtl
xchg
sub
shll
rorl
and
and
iret
lret
and
dec
xchg
mov
jg
mov
shll
dec
xchg
xchg
test
mov
lss
dec
enter
xor
push
test
repz
jle
leave
or
or
mov
subb
cmc
outsl
daa
add
mov
adc
mov
pusha
mov
test
iret
or
stos
lret
ret
and
sub
dec
ror
daa
mov
adc
cltd
inc
and
sub
cli
cli
cmp
cld
loope
pop
call
xchg
ljmp
mov
sub
rol
popa
push
test
fsubrp
js
jno
fidivrl
mov
into
jnp
loop
sbb
icebp
xchg
adc
sub
adc
leave
inc
ja
aaa
pop
xchg
xchg
jae
jae
jmp
and
cmp
sbb
insl
inc
push
ss
inc
lret
aad
gs
push
sub
stos
adc
aam
imul
push
mov
out
setg
mov
stos
add
pop
cmp
inc
lock
inc
leave
inc
inc
push
js
shlb
rorb
add
test
int
xor
xchg
pop
loopne
mov
xor
inc
add
or
addr16
xchg
fnstsw
xchg
xchg
enter
pop
mov
aam
cmp
arpl
mov
ja
jp
fstpl
stos
cmp
inc
or
inc
mov
xchg
mov
test
enter
pop
inc
cmp
lock
jb
cmp
cmpsb
inc
push
jo
adc
adc
idivb
xchg
std
add
mov
cmpsl
in
push
gs
pop
pushf
mov
ja
cmp
mov
sub
cmc
pop
push
repz
mov
gs
iret
mov
push
adc
pop
mov
mov
jo
mov
or
mov
mov
in
inc
into
mov
mov
mov
in
shll
and
jmp
add
jnp
jne
idivl
add
adc
xchg
add
stc
shll
and
sahf
vcvtsd2ss
adc
and
into
push
es
fs
mov
cmp
stos
cmpsb
imul
sub
lret
ljmp
mov
pop
sub
outsb
jecxz
movsb
inc
fsubrp
std
pop
mov
push
cmpsl
xchg
das
out
pop
mov
jp
cmp
sbb
jmp
or
inc
xor
pop
push
mov
inc
pop
addb
lods
jns
sbb
jo
jp
les
or
jno
xchg
fstpt
mov
pushf
add
push
in
adc
xchg
or
pop
cltd
out
or
aam
jl
fnstsw
and
xchg
adc
repz
xchg
fisubrs
clc
and
push
inc
scas
insb
daa
aaa
fucomi
out
cs
out
cmp
jl
xchg
shrb
incl
pop
dec
loope
ja
lods
mov
hlt
fsts
out
into
lcall
cmp
in
mov
ljmp
pop
test
sbb
ret
outsb
inc
adc
ds
xchg
lock
pushf
dec
mov
cmp
mov
les
sbb
in
test
fdiv
jae
or
mov
mov
dec
fstpt
xchg
shrb
movsb
cmpsl
or
inc
push
call
adc
cwtl
pusha
push
sbb
cld
mov
sub
roll
js
iret
fmul
and
inc
xchg
js
stc
sbb
cmpsb
and
fsubrp
add
pop
jl
mov
ljmp
aas
das
lret
mov
stc
xor
mov
jle
mov
das
out
dec
fldt
xchg
fwait
mov
lcall
xchg
sub
dec
or
out
xor
adc
mov
stos
fcoms
inc
and
cltd
rol
test
dec
xchg
shlb
mov
fs
adc
icebp
stos
je
mov
or
dec
mov
scas
int3
sub
pop
xlat
mov
mov
jle
mov
mov
sbb
pop
cwtl
aaa
lods
sbb
lcall
in
xchg
addr16
or
fdivrp
test
cmc
jg
into
pop
xor
mov
loope
push
mov
aad
cli
inc
rorb
fisubs
popa
cmc
xchg
xor
sub
imul
jnp
sbbl
mov
dec
pop
pop
leave
lods
test
mov
dec
adc
xchg
sahf
inc
cltd
popf
and
sub
jns
pushl
shlb
mov
jle
pop
call
nop
push
jbe
add
mov
jle
mov
dec
push
dec
stos
mov
movsl
push
lret
mov
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
adc
mov
add
jns
adc
test
jmp
cmpsl
andb
mov
cwtl
xor
inc
push
in
call
pop
add
xchg
and
mov
adc
add
ret
test
sbb
push
fistps
adc
push
dec
jo
xchg
hlt
xchg
lret
mov
push
inc
or
and
jae
mov
and
xchg
xor
adc
jo
arpl
pop
xchg
ds
xchg
lock
add
and
in
jp
jo
mov
cmp
frstor
mov
in
push
cmp
sub
adc
xor
cmpsl
insb
add
sub
or
es
jae
lock
int3
mov
or
int
in
sbb
xor
out
push
and
aas
enter
aam
sbb
add
inc
adc
or
pop
xchg
lods
push
cld
inc
jp
push
xchg
jl
push
push
outsb
rol
or
jbe
cwtl
ret
jg
fdivs
cli
scas
xor
test
mov
ret
and
add
pop
aam
mov
or
fsts
sub
xor
push
mov
mov
push
inc
xor
aam
mov
inc
xorl
int3
bound
xor
cltd
bound
clc
out
push
pusha
dec
adc
iret
es
pop
sbb
ret
mov
sarl
mov
les
push
pop
cli
stos
dec
cs
fstpt
int3
inc
mov
or
fstps
aam
jo
out
sub
jo
push
add
cmp
push
cli
lret
cmp
bound
out
ds
jae
in
jecxz
push
loopne
jns
mov
test
stos
cli
cmp
stc
shl
inc
xor
push
lock
push
jns
mov
pop
cmpsb
loop
adc
das
call
daa
icebp
je
or
add
adc
jbe
sahf
xorb
mov
fisttps
ret
movsb
add
mov
mov
xor
pop
mov
inc
shrd
mov
clc
dec
adc
incb
mov
sub
xchg
sarb
cltd
insb
in
in
jne
sbb
lds
sub
ja
dec
push
dec
xor
sbb
ret
jp
add
loopne
aam
adc
xchg
cwtd
mov
pusha
lcall
xor
clc
or
add
xor
mov
push
xor
push
ds
xchg
jecxz
sbb
into
sbb
lahf
and
in
inc
inc
push
es
xchg
and
push
stos
out
jo
xchg
loope
out
lcall
inc
xor
xchg
and
mov
mov
popf
out
rcll
gs
aam
push
imul
ret
and
lds
sub
cmpsl
gs
mov
or
cmp
mov
int3
stos
addr16
test
push
testb
sahf
fdivl
push
or
push
jne
push
inc
ja
test
or
inc
ds
and
bswap
inc
push
add
leave
adc
movsl
cs
mov
pop
negl
outsl
lock
decb
jecxz
cmp
dec
outsb
dec
xchg
xor
push
xchg
insb
push
jle
xchg
or
rcrb
jmp
dec
bnd
into
stos
andl
jmp
push
xchg
push
daa
sbb
mov
xchg
push
jbe
sub
mov
jle
xchg
mov
mov
sub
lahf
fwait
xlat
stc
dec
mov
xchg
fucomi
fisubl
add
aaa
jns
jl
leave
push
xor
movsl
push
cmp
shlb
pusha
cmpsl
fwait
sbb
xchg
xor
push
test
filds
das
jmp
dec
xchg
lcall
jns
out
or
fucomip
movsb
fxch
adc
or
pushf
pop
push
mov
nop
clc
test
dec
and
mov
push
lcall
ss
fwait
sarl
fdivrs
mov
adc
sub
adc
orl
subl
outsl
cmc
dec
push
mov
stc
jmp
imul
call
and
adc
jmp
xchg
pop
stc
cmpsb
add
sub
movsl
mov
enter
xor
lds
push
lea
pop
sarb
fcompl
and
sbb
stos
rcrl
sbb
cld
iret
cwtl
in
pop
loope
movsl
push
pop
or
push
sub
dec
pop
insl
push
loop
xchg
fwait
adc
lret
nop
negb
add
pop
and
jno
or
cmpl
cwtl
icebp
push
jno
mov
cld
xchg
jmp
sahf
jg
cwtl
push
and
jg
xchg
lods
mov
in
andb
fwait
or
mov
insb
neg
fwait
jmp
pop
fidivrs
rcrl
or
add
popa
mov
or
mov
loope
aaa
aaa
rcr
jle
adcl
pusha
cmpsl
decl
xchg
jmp
aam
xchg
popa
mov
sub
pop
sub
das
rcl
dec
in
testl
jecxz
pop
stc
fldl
xchg
inc
cs
rcr
mov
sub
and
arpl
incb
cmp
push
xchg
cs
push
cltd
aam
les
sub
cwtl
sbb
sub
mov
notl
cmpsl
cli
ljmp
call
cmpsl
cmp
xchg
movsb
sbb
out
push
mov
dec
lock
dec
and
outsl
fsubrl
or
adc
adcb
adc
idivl
and
clc
lea
test
xchg
imulb
in
ror
sub
je
fmull
fiaddl
add
aam
jmp
add
gs
jo
out
xlat
pop
add
js
mov
into
push
out
adc
or
push
cmp
pop
sbb
dec
in
sarl
jno
movsl
popf
in
enter
out
cmc
lahf
sbb
mov
lret
adc
into
lgs
push
cld
push
add
pop
xchg
cmc
cmp
dec
loop
pushf
mov
dec
fmull
or
test
aam
popa
jecxz
add
jp
mov
mov
icebp
xor
and
loop
jae
mov
loopne
xor
mov
mov
or
stos
sub
add
and
push
jb
and
xchg
inc
data16
aam
adc
nop
pop
repnz
stos
loopne
mov
mov
cmp
inc
add
mov
ror
and
cltd
mov
int3
push
inc
pop
jmp
inc
push
sbb
cmp
add
lahf
dec
mov
bound
inc
xchg
adc
aas
jo
mov
mov
push
ret
sbb
jle
aas
jns
je
pop
xlat
push
lds
xchg
mov
dec
rcrl
mov
push
dec
cmp
test
mov
sub
fsubrs
sub
mov
push
adc
xchg
mov
adc
inc
adc
test
ret
or
test
push
mov
mov
mov
jmp
push
mov
adc
xchg
cmp
pop
add
ja
sub
add
outsl
gs
bound
addr16
hlt
adc
or
cmp
inc
add
push
fdiv
xchg
sysret
xchg
loopne
aaa
mov
pop
xchg
subl
jno
call
outsl
les
sub
stos
mov
pushf
push
out
stos
ds
mov
mov
cmp
inc
inc
add
shl
and
sub
out
test
mov
cmp
jmp
ss
imul
sub
in
aam
jne
shrl
sahf
int3
xor
aas
movsl
gs
fisubrs
jns
nop
test
orl
pop
or
sbb
lds
ret
aas
js
cmp
dec
shll
imull
sub
mov
push
or
stc
cmp
mov
lahf
in
adc
jns
test
and
outsb
arpl
push
mov
cmp
faddl
jecxz
pop
iret
outsb
popf
ret
jno
xlat
push
aad
cmp
inc
inc
inc
pop
rcr
xor
jo
js
in
jno
and
mov
test
push
icebp
jbe
idivb
das
cmp
int3
movsl
out
adc
pop
cmpsb
xor
loope
push
add
mov
push
or
pop
movb
and
test
jg
pop
pop
call
mov
jmp
cmp
sub
mov
xchg
arpl
jnp
xor
fmuls
mov
int
xchg
shrb
jmp
mov
lock
jno
fucom
and
mov
fs
arpl
ret
mov
inc
hlt
inc
xor
sbb
out
bound
add
repz
inc
inc
sub
test
mov
or
imul
test
shl
inc
out
dec
shll
dec
dec
mov
mulb
and
jo
pop
and
ds
and
mov
sbb
push
rolb
in
mov
enter
cmp
mov
or
push
sbb
outsb
loope
daa
xchg
rcll
test
stos
cmp
pusha
cmp
pop
pop
inc
data16
push
pop
xchg
adc
call
inc
sbb
int
aaa
push
add
sti
xchg
test
dec
lods
xor
pop
push
cmp
jns
stc
cmp
aad
das
inc
ss
cli
mov
push
sbb
or
push
pusha
sub
out
mov
adc
sbbb
mov
mov
ficompl
xor
int3
add
sbb
call
lret
and
sbb
loopne
leave
test
dec
sbb
pushf
testb
cmp
push
cs
orb
dec
ss
dec
loop
outsl
ljmp
and
arpl
clc
dec
push
int3
addb
dec
leave
or
test
inc
aas
sbb
sbb
pop
xchg
dec
and
xlat
or
icebp
jno
adc
and
or
sub
ficompl
fwait
sub
xchg
adc
mov
inc
out
je
dec
cld
pop
pop
leave
in
pop
sbb
cmpsl
pop
push
ret
xchg
xor
pop
add
cs
dec
lahf
cmpsl
mov
cmpsl
lahf
add
js
movsl
adc
fiadds
sub
shll
mov
dec
jbe
dec
aam
jns
pop
push
fmuls
out
mov
mov
pop
outsl
ret
adc
in
mov
ds
fildl
fcomps
les
add
mov
stos
das
jo
sti
imul
jecxz
insb
mulb
cwtl
dec
popa
adc
mov
mov
xchg
xchg
inc
popf
push
fisttpl
adc
pop
ja
jle
fbstp
test
pop
lods
jbe
test
iret
imul
insl
repz
and
je
test
inc
pop
jae
fimull
push
or
mov
movsb
pop
popa
nop
cltd
inc
adc
mov
jmp
mov
ss
xchg
mov
into
pop
xor
xchg
mov
jp
inc
test
mov
mov
mov
subb
sahf
cmp
repz
bound
xchg
addb
sub
inc
mov
inc
or
inc
mov
imul
fwait
enter
fbstp
dec
or
int3
mov
fst
xor
in
clc
inc
and
mov
and
and
cmp
les
dec
dec
fisubs
pop
out
mov
push
fwait
lock
mov
cwtl
cmpsb
add
js
mov
jne
and
test
inc
es
or
imul
fbstp
mov
stos
add
fucomp
sub
out
mov
adc
push
dec
mov
rcrb
dec
es
arpl
inc
loopne
ljmp
pop
leave
xor
data16
xchg
sbb
mov
cmp
fdivrs
mov
inc
pop
cmp
lock
pop
mov
mov
sarl
sub
leave
aas
lret
jmp
cmp
sbb
cld
in
adc
push
xchg
push
test
negl
dec
je
ss
insb
fdivrl
sbb
outsl
shrb
adc
sti
mov
incl
mov
and
or
cmp
inc
xor
clc
jmp
sarb
loop
cmp
or
sub
push
fisubs
scas
popl
sahf
bnd
cli
mov
fidivrs
fistps
sub
push
and
jne
xorb
pop
push
cmc
adc
cld
adc
jbe
les
or
sbb
popl
adc
test
aam
mov
pop
sub
lea
iret
jmp
xchg
push
sbb
leave
fstpl
fimuls
sbb
adc
lock
sbb
push
mov
mov
loop
xor
mov
xchg
ljmp
add
test
test
imul
and
lea
notb
mov
adc
add
scas
fcoml
les
xchg
push
inc
cmp
adc
sub
ljmp
or
in
sbb
and
push
push
sbb
ds
hlt
inc
cld
xchg
sarb
push
adc
pop
mov
push
imul
sbb
mov
add
es
inc
jl
daa
popa
hlt
dec
sub
adc
and
mov
mov
stos
pushf
jno
pusha
cld
and
mov
mov
imul
fisubs
fwait
and
aad
xor
add
mov
bound
cwtl
outsl
pusha
cwtl
jecxz
xor
mov
mov
mov
sub
ret
test
sub
fwait
leave
ljmp
shll
pop
xchg
sub
inc
push
cltd
push
adc
sbb
insl
leave
pop
sbb
test
shr
pop
add
cmp
adc
mov
test
xchg
repz
xchg
pop
xchg
or
mov
imul
fst
adc
ficoml
jb
out
ret
mov
push
xchg
sti
sbb
sbb
sbb
push
jmp
cmp
ja
cmc
cmp
mov
aaa
subl
bound
sbb
mov
mov
imul
mov
fcompp
adc
rcl
cmc
mov
pop
andb
cwtl
inc
push
xchg
shr
push
ret
data16
sub
pop
jp
mov
in
dec
lock
mov
imul
fistpll
out
xorl
mov
cmp
add
inc
in
pop
insb
fisttps
aaa
sti
mov
cmc
test
xchg
arpl
mov
fildl
pop
ret
mov
hlt
andl
ja
jl
xchg
data16
pop
dec
adc
pop
sbb
cltd
cld
push
repnz
and
testb
nop
sub
movsl
add
cs
push
push
add
sbb
sub
fildl
outsl
add
jns
xchg
iret
aam
loope
mov
fxch
xchg
cltd
pop
push
inc
test
dec
div
inc
test
adc
out
mov
adc
test
lahf
pop
fnstenv
cli
push
into
push
or
pop
inc
repnz
cltd
jo
xor
xchg
fidivs
fisttpl
aad
test
adc
lcall
movsb
repz
idiv
decl
in
mov
push
jge
ja
inc
sub
and
xchg
test
ljmp
cli
loope
shlb
mov
pushf
daa
and
mov
int3
es
fisubrs
sub
inc
sbb
mov
out
xchg
pop
lock
lret
cltd
push
jbe
ja
cmpsb
adc
movsb
or
mov
in
cmp
loop
mov
jb
xchg
cs
mov
das
mov
imulb
lods
pusha
and
sbb
pop
dec
jb
mov
gs
in
or
inc
sub
or
inc
stos
push
jo
mov
jl
icebp
jg
push
repz
in
xchg
test
orb
dec
mov
rclb
hlt
push
lret
js
out
hlt
addr16
adc
or
sbb
sub
sub
in
mov
push
testb
sbb
inc
mov
cmp
xor
insb
cwtl
aas
mov
cmp
cmc
add
lods
xor
scas
out
cmp
mov
repnz
inc
out
sarl
dec
insb
xchg
mov
push
inc
adc
gs
stc
pop
add
lahf
movsl
add
inc
lret
pop
mov
pop
sahf
movsl
mov
jge
and
leave
es
out
sahf
jae
add
int3
ret
mov
jae
push
and
inc
push
push
add
rorl
adc
xchg
mov
fidivrs
pop
mov
pop
int3
push
decb
insl
dec
shlb
popa
sub
test
jnp
addr16
inc
daa
or
pop
stos
xchg
jl
clc
out
mov
das
data16
push
shrl
fsts
mov
testl
xor
cmp
shr
sub
and
cs
xchg
pop
test
loop
andl
iret
jecxz
es
loope
aaa
mov
dec
or
pop
mov
aam
pop
dec
cmc
sub
dec
mov
cmp
fdivp
mov
test
mov
push
add
dec
pusha
fwait
jg,pt
sbb
aas
loopne
sub
cltd
lods
lods
cmpsb
inc
push
inc
hlt
push
pop
mov
js
xchg
push
out
dec
notl
cmp
push
lret
jae
sub
hlt
mov
jg
or
cld
xor
dec
push
jp
pop
pop
push
push
and
cmpsl
add
xchg
push
repnz
mov
add
mov
mov
aam
roll
sahf
sbbb
inc
xchg
sub
and
xchg
iret
cwtl
adc
push
xor
jno
mov
lods
sub
cli
mov
push
cmp
orb
sub
les
xorb
je
sub
sahf
push
xchg
cli
insl
daa
adc
faddp
mov
jns
dec
out
stos
push
jp
fmulp
jo
mov
inc
jmp
fidivs
das
and
pop
out
fldt
outsb
in
dec
je
iret
test
mov
pop
lret
jecxz
mov
cmp
fildl
push
icebp
shrl
jno
es
sbb
int3
les
adc
mov
in
lods
mov
nop
push
ja
push
jecxz
and
inc
data16
mov
repz
xor
and
insb
dec
and
repnz
bound
fdivr
cmp
ss
je
test
pushaw
fstpl
ljmp
push
hlt
shl
push
pop
pusha
push
andb
xchg
pop
imul
in
cltd
xchg
dec
push
cmpsb
sub
jbe
cwtl
fmuls
adc
xor
movl
pop
andl
cltd
mov
lahf
fildl
jge
or
shrb
xor
outsl
pop
adc
jb
dec
fadds
push
imul
mov
or
sub
xor
scas
sub
jecxz
sub
inc
mov
iret
lock
in
xlat
test
add
add
fimuls
aad
cwtl
dec
and
rorb
popa
insl
pusha
pusha
jecxz
loopne
push
popf
das
push
addl
cmc
addr16
jb
hlt
hlt
adc
rclb
loop
orb
cmp
mov
fdivrs
ljmp
or
push
adc
pop
inc
mov
stc
bound
insb
cmpsl
test
add
push
or
int3
add
adc
xchg
mov
cli
mov
jb
cld
outsl
mov
jns
inc
loopne
inc
jnp
and
jg
cmp
mov
adc
sti
aaa
lods
add
nop
aaa
inc
mov
push
mov
hlt
pop
sbb
push
lock
ds
sbb
cwtl
cmc
and
mov
test
sbbl
xor
testl
adc
adc
js
lret
lret
pop
repz
mov
pop
xchg
ss
xor
bound
sbb
sarl
mov
mov
jb
out
mov
lods
imul
icebp
cmpsb
std
arpl
cmovbe
lea
cmp
das
mov
int
das
push
cmpl
jle
mov
mov
dec
or
ljmp
repz
mov
pushf
pop
es
pop
fcoms
cmpsl
je
adc
movsl
push
ss
pop
push
lds
adc
sub
in
cmpl
mov
and
add
pop
xor
loop
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
sub
jbe
nop
xchg
and
ret
bound
or
pushf
aas
dec
xor
xor
push
dec
ss
cmc
xor
sub
icebp
mov
xor
stos
sbb
aam
jmp
fldl
arpl
inc
call
popa
sub
fdivrl
aas
xchg
xchg
xchg
pop
int3
cmpb
lock
mov
repnz
mull
pop
xchg
or
leave
fs
sub
loopne
bound
int
or
imul
repnz
pop
sbb
xchg
test
ss
jp
loop
pop
jno
jmp
mov
adc
lea
cmp
das
sub
sub
aas
in
mov
data16
imul
js
sbb
jnp
sbbb
sub
mov
out
and
js
cmp
in
faddl
pop
insl
lods
cmpl
xor
pop
in
inc
repnz
cmp
hlt
repz
adc
notb
scas
fisubrs
mov
cmpsb
dec
or
add
jl
add
and
test
push
loopne
stos
movsl
dec
hlt
lret
xchg
fisttpll
inc
xchg
cmp
daa
icebp
in
mov
push
jae
pop
arpl
cmpl
lds
xor
rorl
lcall
aam
fnsave
adc
ds
or
jmp
dec
or
inc
jnp
jg
rcrl
dec
popa
xchg
es
cmpsl
inc
push
cmp
mov
adc
or
outsl
gs
or
push
adc
gs
insl
movsb
pop
mov
inc
xchg
adc
shlb
cmp
add
pop
lods
cmpsb
jmp
dec
out
loope
pop
jno
add
inc
xor
ja
ja
add
xor
rcrb
loop
nop
add
pop
push
mov
pop
xor
loope
ja
fisttpl
hlt
jg
xchg
mov
outsl
mov
jge
imul
or
dec
std
cmp
decb
insb
test
adc
lock
in
inc
xchg
sub
xchg
sub
cmp
sbb
and
cli
popf
adc
lahf
insl
pop
dec
sbb
movsb
mov
pushf
fsubrp
add
cwtl
int
inc
ljmp
push
outsl
mov
xor
fwait
mov
int
movsl
sbb
test
push
into
xchg
int
jmp
jnp,pt
mov
shlb
ja
pop
ljmp
dec
fldt
adc
out
iret
stos
cltd
jbe
xchg
xchg
in
mov
jg
inc
cmpsl
fwait
lcall
inc
fs
std
hlt
call
gs
out
imul
and
divl
repnz
iret
inc
imul
insl
dec
or
xor
push
cmc
aas
aaa
mov
xor
xor
cmpsl
xchg
fstpl
repnz
lahf
fmull
mov
and
cbtw
push
push
dec
je
mov
inc
popa
aam
pop
scas
adc
jl
or
aas
jb
fidivl
sarb
outsl
sti
xchg
xchg
cmp
jecxz
xor
inc
sbb
fisttps
out
aad
sbb
jb
aaa
inc
scas
iret
shrl
cmp
push
jge
popa
pop
neg
and
repnz
or
pop
bound
jo
adc
mov
shrb
inc
cli
xor
sbb
add
add
and
aad
xchg
xlat
mov
fdivr
aas
mov
add
sub
stc
rol
mov
rolb
add
sbb
add
pushf
imul
inc
or
into
orl
or
jb
adc
insb
imul
in
in
jge
stos
js
rcr
inc
mov
mov
pushw
inc
call
inc
stc
sbb
mov
jl
out
cmpsl
test
lret
daa
mov
insb
in
addr16
insb
aam
adc
sbb
mov
pop
das
addb
mov
adc
ret
mov
sbb
arpl
aam
lods
test
push
mov
fistpll
adc
aam
int
andb
or
push
int3
dec
lret
push
and
scas
xchg
or
mov
pop
scas
pop
dec
inc
and
ficompl
xchg
aaa
mov
fisttpl
enter
fdivrl
bound
imul
pop
inc
int3
movups
stos
adc
icebp
test
pop
out
leave
inc
add
mov
inc
and
mov
rorl
inc
fs
pop
cmp
in
xor
cmc
jmp
mov
mov
roll
stos
inc
or
push
cmp
ret
jp
push
sbb
pushf
adc
mov
add
cmc
jmp
stos
adc
rcl
mov
cs
lock
sub
xchg
mov
sub
mov
jae
dec
dec
pop
mov
popa
or
in
sub
in
xchg
jmp
in
push
mov
call
jle
mov
cmp
adc
mov
mov
mov
divb
push
mov
fcomps
pop
test
cltd
pop
pop
les
add
jno
cmpsb
pop
sti
sarl
daa
sbb
movsl
pop
fdivl
test
inc
call
nop
xor
ss
pop
pop
arpl
mov
pop
jae
xchg
ljmp
xchg
mov
push
bound
pop
mov
mov
dec
jmp
pop
jb
xor
fs
ljmp
inc
xor
dec
test
push
test
mov
cwtl
push
and
mov
popa
xor
cmp
sbbb
jne
lock
sub
ss
push
mov
fldcw
xchg
cmp
test
addl
push
sub
shll
lret
dec
das
and
ret
jo
dec
xchg
sub
stc
in
mov
lds
add
fsubrs
adcl
lods
pop
jnp
and
jns
fdiv
mov
cmc
loopne
inc
repnz
mov
sbb
lock
mov
clc
bound
mov
ljmp
inc
in
rolb
stos
xor
and
dec
lcall
fsts
lret
inc
and
xor
add
and
xchg
fisubrs
sbb
loopne
jnp
aam
mov
out
sub
scas
xchg
mov
int3
lods
stos
jmp
mov
lcall
dec
add
in
nop
mov
scas
dec
mov
aad
dec
mov
fwait
pop
daa
inc
push
mov
popf
pop
out
pushf
gs
xchg
xor
or
scas
and
xor
sarl
test
insl
mov
stc
sub
xchg
jmp
cmpsb
fldenv
add
jb
xchg
pushf
xor
lret
in
in
sub
jecxz
lahf
pop
xor
shl
cwtl
xchg
pop
test
int3
mov
repnz
sbb
jmp
ljmp
sub
outsl
xor
ja
mov
imul
cmp
pop
lods
cli
cltd
sahf
neg
xchg
xor
xor
int
xchg
sub
push
fimull
pop
mov
das
cwtl
cmp
sub
cmp
sub
lcall
icebp
inc
jnp
lds
and
not
inc
popf
or
insb
cmp
notl
cmp
sti
mov
dec
jne
jecxz
stos
push
mov
ret
xchg
mov
cmpl
push
jl
int3
jno
mov
das
lret
sbb
sub
popa
imul
stos
cs
mov
ret
repnz
sahf
add
mov
sbb
cmp
adc
pop
leave
adc
icebp
je
out
mov
sub
mov
and
daa
lcall
ret
or
pop
lea
add
rcrl
push
jne
add
filds
cltd
cmp
js
rclb
popa
icebp
es
cmp
aad
or
sbb
gs
push
inc
mov
sub
stos
loop
pop
out
inc
jp
inc
inc
movsb
call
es
faddl
push
mov
push
loope
or
fdivrs
adc
outsb
pop
or
aam
cmp
roll
and
cmpsb
test
shlb
insb
mov
jecxz
ds
repz
push
sub
push
mov
shrb
push
cmp
shll
inc
sbb
rcll
fs
jnp
sub
push
sub
stc
les
loopne
daa
jmp
popa
xor
stos
jl
mov
aas
lret
pop
cmp
test
dec
push
insb
push
shr
iret
jecxz
pop
mov
insb
testb
mulb
std
iret
adc
lret
shlb
dec
in
ds
xchg
xor
ja
fsubs
shlb
or
repz
ds
and
jle
sub
rep
movsl
push
add
or
movsl
pop
loopne
call
out
or
data16
sub
push
decl
pop
repz
xor
adc
test
enter
das
ud0
fcoml
stc
mov
push
pop
cmp
jae
das
stos
pop
outsb
push
inc
imulb
cmp
lock
ret
imul
xor
adc
or
es
cmp
mov
ds
xchg
cld
push
push
adc
out
popf
cmp
lret
sbb
pushf
mov
jl
insl
insl
cli
jae
xchg
in
xchg
fwait
mov
pop
cmp
dec
js
je
ret
punpckhbw
sbb
outsb
jmp
fildl
push
fisttps
outsb
and
cli
icebp
push
mov
imul
mov
or
ljmp
lock
xchg
cmp
lret
scas
scas
es
shrb
stos
cmp
cmp
pop
push
cmp
push
sbb
jno
xchg
pop
push
mov
call
jl
jmp
push
jns
xchg
xchg
shlb
xor
cmpl
adc
ja
shl
mov
into
mov
popa
mov
das
mov
lea
pop
mov
imul
xor
lds
vpblendvb
push
sbb
jmp
nop
and
aaa
pop
push
cmp
cmp
pcmpeqw
cmpsb
mov
push
fdiv
sarb
pusha
and
xchg
lods
in
dec
xchg
addr16
vpshufd
in
stos
cwtl
pop
jbe
js
mov
aad
cmpsl
pop
mov
jmp
sahf
std
mull
lcall
stos
push
xchg
mov
sub
stos
push
push
cwtl
movsl
jo
in
addl
loopew
movsl
lret
pushf
cmc
inc
dec
lahf
aaa
ds
aas
mov
push
pop
mov
dec
lock
or
ljmp
push
mov
daa
jns
lcall
inc
in
adc
mov
mov
push
cmp
cltd
icebp
jl
subb
cmp
sahf
shll
add
mov
in
or
rorl
jg
mov
test
leave
cmp
out
jb
mov
jnp
xchg
push
push
xor
aas
lods
xor
dec
pop
sahf
add
jp
mov
shlb
mov
dec
xchg
ja
xchg
push
call
and
cmp
data16
jne
adc
int
fiaddl
xor
test
fdivrl
jnp
out
xchg
dec
inc
jmp
lock
aas
jmp
cwtl
test
inc
lea
pop
sub
jmp
repnz
push
ja
sar
mov
aad
or
hlt
in
add
push
inc
pop
jbe
in
test
insb
mov
lds
push
out
dec
ja
loop
mov
mov
cwtl
rclb
das
dec
out
fld1
xlat
jle
insb
mov
addl
rorl
gs
lret
push
pop
mov
in
fs
push
sbb
pop
or
es
xor
cmpsb
gs
out
out
cmp
mov
or
cltd
mov
lods
faddl
out
movsl
lahf
pop
adc
out
orl
cmpb
xor
in
ror
andb
cmp
das
aas
push
sbb
push
and
lahf
insb
cmp
inc
lret
and
cmpsl
or
push
dec
xchg
sbb
es
xchg
dec
and
or
rolb
dec
mov
bnd
ljmp
mov
jae
or
lock
and
jnp
jne
jnp
mov
add
sbb
fcmovne
cmp
popf
push
adcl
lods
xor
lea
ljmp
xchg
repnz
sahf
push
dec
inc
imul
xor
lret
push
test
popf
cmpsl
incl
call
xchg
add
jecxz
dec
cmp
dec
arpl
lret
adc
add
addr16
popl
xchg
pop
fnsave
mov
adc
mov
mov
fwait
and
in
pop
jle
jne
xchg
or
mov
mov
sbbb
add
push
xchg
popf
clc
jge
pop
lock
adc
aam
adc
shll
loope
jecxz
bound
mov
lahf
loope
int
push
and
sub
fnstcw
sbb
ficoms
add
inc
pop
jecxz
xor
push
js
add
hlt
jmp
int
stc
xor
or
test
xchg
cmp
pusha
mov
or
or
ret
push
int
cld
jns
subl
cmpsl
data16
adc
gs
sahf
adc
and
pop
fstpl
mov
mov
js
cmc
mov
jne
jecxz
mov
and
mov
inc
sbb
dec
xor
adc
mov
adc
dec
les
in
xchg
stc
je
inc
cmp
adc
jmp
nop
ret
adc
das
ret
sbb
fadds
xlat
lret
sub
pop
mov
gs
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
add
mov
xchg
jp
push
xor
xor
imul
or
out
or
iret
dec
stos
add
xchg
test
lods
lret
nop
rorb
movsb
out
out
stos
shl
inc
outsl
loope
pop
lea
pop
inc
xor
or
aas
xor
cs
cmpl
push
fwait
xchg
sbb
arpl
js
loopne
fcomi
daa
mov
inc
adc
ljmp
incl
arpl
rcr
jmp
pop
xorl
inc
dec
inc
jp
mov
jnp
sbbb
add
insl
in
mov
mov
loop
sbb
mov
add
enter
dec
xchg
xchg
and
add
pop
dec
jle
cli
aaa
fimuls
adc
cmp
jge
jle
xchg
ret
add
nop
lahf
repnz
sub
mov
add
pop
gs
pop
jae
imul
out
mov
outsb
adc
jg
movsb
lret
dec
mov
lods
mov
aad
and
sbb
inc
jo
pop
js
and
push
in
dec
mov
subb
push
pop
fwait
aaa
sbb
xchg
inc
pop
shl
fs
cmp
cmp
movsl
jecxz
inc
jle
xlat
mov
mov
clc
mov
ret
cmp
dec
dec
mov
adc
sbb
xchg
mov
push
std
scas
dec
mov
push
lods
push
cs
adc
movsb
mov
xorb
in
lcall
rorl
add
push
jmp
jg
cmp
push
mov
ds
out
xchg
mov
mov
das
rcrb
stos
loopne
adc
jbe
push
push
int
or
in
subb
flds
jecxz
jbe
jne
xchg
or
xchg
sub
fdivs
pop
add
out
adc
testl
ret
das
cmp
push
adc
movsb
sbb
xlat
stos
in
lods
stos
adc
aad
imul
dec
cmp
mov
jns
inc
test
lea
cmp
xchg
mov
lahf
cmp
xor
outsl
mov
mov
or
jo
popf
jno
in
mov
out
cmp
push
push
cli
mov
add
pop
inc
jae
loopne
rol
mov
and
add
add
in
jbe
lods
fldenv
xlat
push
repz
je
out
je
int
cld
subl
ds
lahf
mov
dec
adc
push
push
dec
xchg
cmpl
push
fstps
jbe
mov
xlat
lds
cmpsl
inc
pop
and
sub
pop
repz
cmc
in
das
xlat
rcrl
add
mov
push
inc
push
les
aad
xchg
or
xchg
fdivrp
mov
imul
in
xchg
push
cli
jo
stos
test
fistps
lea
adcl
out
gs
in
mov
rclb
dec
inc
dec
mov
push
and
xchg
in
sub
mov
cltd
loop
mov
gs
jl
mov
or
push
push
mov
mov
cs
ljmp
dec
cmc
dec
out
push
ret
ret
xor
sub
loop
cwtl
jnp
mov
in
or
in
nop
mov
push
dec
mov
cmp
or
out
nop
mov
adc
iret
js
pusha
sub
shlb
scas
mov
mov
inc
jge
js
dec
pop
mov
cmp
cmp
mov
out
sbb
lea
test
leavew
dec
stos
push
ljmp
cld
or
rclb
ror
pop
cmc
push
cmp
lcall
mov
cmp
out
inc
outsb
push
sarb
notb
jns
mov
in
push
imul
ljmp
xchg
dec
mov
mov
or
inc
mov
and
daa
and
in
cltd
test
sub
hlt
sub
mov
jns
ficoms
mov
setb
jmp
lret
popa
dec
xchg
daa
into
inc
inc
inc
and
xchg
leave
shrb
sub
movsl
cwtl
dec
mov
rorl
and
stos
jle
push
clc
jbe
subl
mov
add
mov
xchg
nop
sbb
test
push
in
adc
sbb
arpl
mov
fdivrs
mov
sahf
cmp
lock
add
sti
stos
call
jge
xchg
add
dec
xlat
movsl
imul
imul
or
imulb
push
pusha
imulb
mov
popf
inc
or
sub
sbb
and
insb
cs
sub
cmpsb
push
std
dec
xchg
lds
test
ljmp
clc
dec
pusha
mov
pop
inc
add
aam
dec
loopne
leave
sbb
push
inc
das
lock
mov
stc
jmp
and
leave
repz
sub
cmc
jnp
int
pop
mov
sbb
stos
lods
pop
ja
or
leave
mov
push
and
mov
xchg
aas
test
sbb
dec
xlat
sbb
arpl
mov
in
jg
div
dec
xchg
pop
loopne
adc
in
mov
imul
jae
inc
mov
insl
int3
rcl
ljmp
adc
in
sub
andb
xor
xchg
push
fcmovu
jnp
movb
les
xor
jno
adc
mov
ss
out
inc
hlt
sahf
sub
jne
mov
inc
imul
fsubrp
push
sub
sbb
sbb
out
push
cli
hlt
imul
jb
dec
pop
aad
fcmovnb
inc
jns
adc
lahf
lods
adc
fwait
cmp
cmp
mov
popf
insb
pop
inc
mov
dec
adc
dec
push
jne
and
insl
nop
enter
fldenv
imul
popa
dec
lcall
clc
insb
adc
xchg
mov
aas
jae
outsb
xor
mov
or
test
dec
mov
idivb
loope
ds
and
sahf
mov
outsb
push
sti
jae
popf
jbe
test
out
ficompl
imul
inc
adc
dec
sti
mov
daa
dec
fcmovne
out
xchg
ja
cwtl
push
sbb
push
loope
int
fs
or
pop
mov
add
or
mov
ret
jno
pop
sbb
pop
rol
lock
xchg
jbe
and
inc
sarl
popf
sbbl
mov
stos
mov
shld
js
and
fisubs
mov
imull
xor
dec
pop
xor
mov
mov
sbb
mov
jp
inc
in
lds
add
fsubl
movsl
js
loopne
jle
outsb
jae
popa
sti
notl
and
mov
sbb
mov
shrd
shr
shr
jmp
imul
scas
sbb
xor
cmpsb
outsb
sbb
mov
adc
xchg
mov
or
mov
bound
mov
xchg
out
cli
mov
inc
jbe
je
push
in
out
and
push
lret
cmp
mov
push
stos
mov
test
stc
fstl
xorl
mov
mov
test
xor
push
mov
dec
std
push
mov
mov
push
mov
pop
test
inc
je
mov
ret
shll
jmp
jo
sbb
mov
dec
jns
mov
sarl
mov
stos
inc
aam
jl
adc
mov
movsb
mov
lea
icebp
scas
adc
jmp
mov
or
mov
ficompl
fsts
imul
mov
rcll
jl
sub
ja
scas
daa
popf
jne
add
loop
aam
cs
sbb
stos
and
ret
ret
dec
push
jno
cmpsl
push
dec
inc
lock
sbb
xchg
nop
test
mov
std
notb
mov
cmp
pop
xor
insb
dec
mov
cli
call
fidivrl
mov
inc
pushf
sub
and
dec
ret
sub
icebp
outsb
loop
pop
rcrl
int3
jle
sub
dec
push
movsl
cmove
in
mov
xchg
fwait
lods
shll
mov
rolb
jl
pop
divb
sbb
mov
nop
jns
adc
inc
cmp
cld
dec
dec
popa
inc
push
adc
sub
std
jo
cmpsl
repnz
lahf
add
jb
inc
sahf
rcl
push
stc
test
adc
test
xorb
arpl
cmc
and
mov
ret
stc
in
xchg
lea
arpl
cmp
cs
jmp
cmp
lods
ret
in
jle
jbe
outsb
xchg
mov
jbe
pop
jp
dec
stc
sbb
lret
xchg
mov
xor
imul
jp
adc
jno
pop
lret
scas
dec
int
jnp
pop
jo
lcall
jo
push
shrl
lea
xchg
cmc
iret
cmc
shr
addr16
pushf
shll
xchg
adc
add
in
ds
jp
mov
shrl
push
out
movsb
xchg
and
bound
sub
leave
mov
mov
lods
jnp
jl
fidivrl
jb
push
cmp
lods
mov
mov
shlb
adc
bound
and
dec
imul
sub
cmp
jb
push
ftst
mov
sahf
pop
adc
cmp
popl
leave
fnstenv
and
stc
insl
test
fcomps
jecxz
popa
pushf
mov
sbbb
orl
or
and
imul
icebp
add
mov
in
aaa
lea
sub
repnz
xor
pop
test
dec
adc
jne
in
xor
cmp
dec
push
jb
std
inc
push
mov
xchg
sbb
xor
xchg
inc
out
loop
pop
ss
imul
pop
jecxz
lret
adc
das
in
xchg
and
leave
rolb
lahf
dec
push
xor
test
lods
adc
mov
dec
mov
daa
das
pop
popa
outsb
int
xor
data16
push
mov
xor
push
adc
dec
outsl
xchg
and
adc
rcll
xor
pop
jmp
sub
les
outsb
adc
mov
mov
stos
cmp
dec
das
jecxz
or
dec
into
outsb
push
out
pop
ret
iret
xchg
imul
inc
pop
lret
mov
sbb
and
mov
pop
or
mov
add
inc
imul
fwait
push
push
xorl
add
sbb
inc
iret
ss
mov
lret
idivl
jae
push
lods
xchg
mov
cmp
aaa
rorb
pusha
adc
dec
jno
ljmp
cmovno
pop
jecxz
cmpl
scas
dec
push
push
mov
mov
fidivl
imul
jns
add
pop
in
push
jne
dec
adc
sbb
cli
jp
sub
or
dec
rol
int3
push
scas
aas
push
push
mov
lahf
lret
jbe
jecxz
lahf
jne
or
cmp
push
aam
push
dec
or
xchg
in
jns
mov
movsl
xchg
das
xor
into
test
out
adc
mov
xchg
mov
das
jl
pop
jle
out
jo
clc
out
and
stos
xchg
nop
xlat
mov
mov
rcrl
sub
inc
sub
xor
les
andb
out
push
fstpl
gs
fstl
cmp
jge
pushf
stc
std
mov
xchg
lods
addr16
xchg
xchg
les
rcll
cmp
movl
ret
adc
sub
out
out
xor
repz
mov
stc
or
cmp
cmp
je
insb
test
push
cmp
les
add
aas
sti
and
loopne
ret
cli
add
push
popl
dec
jb
out
dec
fsub
cmp
inc
inc
cmp
out
cltd
sbb
or
adc
ljmp
cmp
mov
mov
and
mov
inc
sbb
cmc
xor
cld
mov
clc
ficoms
adc
mov
dec
adc
fcoml
sbb
xlat
pop
sbb
mov
push
cwtl
mov
add
inc
xchg
popf
stos
imul
sbb
out
insl
repnz
sbb
fdivrl
mov
mov
inc
test
pop
and
mov
popa
mov
mov
stos
and
js
stc
or
mov
pop
loope
push
or
lret
jmp
ja
xor
xchg
icebp
jnp
dec
cmpsb
inc
sub
add
lods
pop
stc
adc
mov
roll
xchg
jp
out
push
icebp
jbe
pop
in
and
xchg
cmp
or
lahf
sub
es
xchg
imul
xchg
cmp
sahf
scas
xchg
cltd
testl
push
add
pushf
mov
in
mov
gs
cs
mov
imul
lock
sub
mov
mov
fiadds
mov
ret
out
cmpsb
mov
inc
mov
push
inc
adc
push
xchg
xor
xor
inc
or
mov
int
or
mov
sbb
xor
dec
popa
mov
shlb
stc
sub
sti
icebp
cmovge
rcr
inc
leave
push
adcl
sub
mov
aad
mov
ret
xchg
push
into
pop
shll
jge
mov
lahf
mov
jne
icebp
push
mov
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
dec
xor
push
lcall
out
mov
or
xor
iret
xchg
scas
mov
pop
mov
lahf
pop
fadd
aad
or
pop
jns
in
jg
repz
push
scas
push
pop
out
push
jmp
aaa
inc
sub
test
rcrl
dec
shl
inc
sbb
imulb
in
hlt
dec
dec
mov
inc
xchg
stos
and
mov
imul
jno
sbb
fiadds
sbb
and
lods
sbb
or
cmpsb
and
popa
fldenv
jae
push
adcl
pop
push
pop
jecxz
jl
add
or
adc
pop
xchg
jle
sti
xchg
call
xchg
pusha
mov
fidivrl
dec
inc
cmpsb
js
test
mov
cmp
stos
mov
mov
inc
dec
in
aam
hlt
rclb
lcall
xchg
dec
iret
negl
xlat
or
add
scas
fwait
repz
sahf
mov
cmp
cmpsl
cmp
mov
mov
aad
or
lods
icebp
cmp
jbe
out
or
jns
or
aam
adc
daa
pop
movsb
pop
in
add
loopne
in
fs
lods
dec
lods
push
sub
fistps
enter
sbb
inc
popa
mov
cli
lret
xor
inc
jbe
fiaddl
fisubrs
test
cmp
push
push
sti
cmpsb
dec
sub
adc
pushf
out
out
data16
test
inc
push
out
add
inc
aas
inc
mov
into
inc
loopne
cltd
ret
pusha
pusha
push
mov
in
scas
mov
iret
adc
lods
mov
inc
xchg
enter
ret
sbb
pop
loop
xchg
lds
sbb
push
sbb
ljmp
jge
repz
icebp
xor
xchg
inc
dec
mov
test
push
sti
mov
mov
mov
xchg
shlb
jae
xchg
jle
sub
pushf
ret
mov
lret
sub
mov
mov
in
cltd
sub
bound
rcll
jl
test
jae
push
mov
gs
mov
cmp
hlt
dec
push
xor
sbb
pop
shl
std
sbb
sarl
xor
dec
insl
and
mov
in
aad
sahf
xchg
fstps
xchg
dec
scas
int3
jp
repnz
std
test
shl
aad
ret
mov
sarb
mov
dec
rcrb
and
fdivs
loop
mov
and
push
in
pop
je
in
push
and
notb
xchg
pop
or
cmpl
mov
mov
shlb
test
xor
lods
jne
push
mov
aam
ret
test
fdivs
lea
mov
sbb
das
mov
lea
lea
in
into
sbb
in
in
jl
pop
ja
xchg
mov
adc
out
push
push
repz
xchg
cmp
flds
mov
fdivl
push
mov
cmp
lds
mov
popf
lahf
in
push
xor
xor
je
and
inc
sbb
pop
shrl
jg
cmpsl
pop
jg
movsl
fdivp
push
data16
mov
popf
sub
cmp
lret
xorl
add
mov
and
pushf
jp
jne
sub
sub
xor
push
mov
scas
pop
stos
pop
mov
shll
mov
cmpsl
jb
mov
jnp
add
leave
pop
push
mov
add
add
add
mov
ljmp
and
dec
adc
sub
or
pushf
push
out
call
xchg
aam
mov
dec
sub
dec
sbbb
jp
cmpsb
pop
inc
sbb
repz
scas
insl
xor
add
les
sbb
fistpl
mov
fistl
fwait
ja
xchg
push
mov
in
pop
shll
pop
pushf
fs
or
fnstcw
pop
ret
mov
dec
and
iret
xlat
mov
and
push
jbe
outsl
push
add
push
aaa
paddq
lret
pop
sbb
fld
repz
cmp
inc
adc
pop
xor
sbb
push
lcall
and
imul
xor
xor
pop
std
aam
aad
xchg
push
inc
out
add
sti
mov
ret
and
cmpsl
ljmp
push
mov
pop
jae
xor
pusha
xchg
enter
inc
jne
lds
or
cmp
aas
inc
or
cmp
mov
pop
lret
and
nop
jno
push
enter
or
xor
fidivl
sub
add
fdivp
loopne
shrl
dec
aaa
lea
mov
pop
adc
sub
fcmovbe
mov
sbb
pushf
mov
sbb
stos
push
test
or
cld
xchg
lret
xor
xor
popa
js
jns
test
or
divb
or
jb
js
mov
test
inc
sbb
add
mov
push
js,pt
inc
and
shrl
adc
je
ja
lock
aaa
stos
xchg
jae
cmp
or
add
push
sarl
lods
xor
and
dec
dec
pop
cs
aaa
pop
jmp
mov
inc
xchg
movsl
outsl
js
inc
into
stos
sbb
push
pop
aas
push
xchg
jae
adc
mov
mov
add
sti
sub
popa
lret
add
mov
pop
div
push
xchg
sarb
ret
loope
outsl
hlt
in
sub
sbb
xchg
xlat
sub
push
or
cs
jns
je
cmp
mov
pop
fcmove
dec
inc
in
xchg
ret
movsl
loopne
or
repnz
push
sbb
mov
adc
call
mov
lret
dec
dec
std
imul
and
jnp
incb
out
cmp
cmp
and
fdivrl
das
test
leave
sbb
stos
push
push
lea
shlb
xorb
pop
test
ret
ja
pop
js
bound
mov
es
xor
faddl
sbb
iret
pop
das
mov
test
sbb
test
mov
cmpl
push
sahf
aas
ds
push
aam
std
mov
ret
cwtl
xchg
jg
out
xor
pop
nop
dec
cli
xorl
sub
dec
add
push
rorb
fsubs
mov
stos
jge
popf
lods
cmp
pushf
rolb
mov
add
ja
pop
and
scas
inc
repz
out
inc
pusha
inc
and
sbb
loopne
movsl
je
sar
dec
and
imul
pop
cs
rcl
or
out
jno
xor
insb
shl
and
inc
inc
jno
adc
cld
jno
jmp
xchg
aad
cmpsb
ds
shll
fs
insl
adc
push
stc
into
jne
insl
mov
mov
inc
cltd
mov
cmpsl
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
mov
mov
ja
stos
add
mov
adcb
sbb
xchg
faddp
xchg
fs
xchg
in
mov
mov
rclb
pop
fcompl
dec
xlat
and
xchg
xor
xchg
dec
mov
lcall
jmp
iret
cli
and
popa
lds
repz
mov
pop
sbb
ds
ret
andb
xor
jp
mov
test
push
imul
mov
inc
rorl
leave
xor
jb
add
sbbb
add
lret
std
cmp
mov
mov
pop
push
and
push
mov
cmp
in
mov
sahf
or
cmp
adc
xor
sub
mov
jmp
std
mov
sahf
inc
dec
test
inc
xchg
xor
pusha
jne
addb
jnp
sub
clc
cmpl
shlb
push
cmp
pop
or
mov
xlat
push
sbb
stos
add
ret
rcrl
lret
in
add
stos
mov
pop
leave
movsl
enter
sbb
jecxz
push
mov
mov
jbe
fwait
movsb
sub
xor
lock
fldl
mov
push
add
pop
push
pop
dec
xor
mov
lret
push
imul
mov
inc
xchg
xchg
adc
loope
jge
dec
inc
mov
mov
inc
leave
sbbl
pusha
push
xchg
int
jo
adc
stc
and
add
push
ret
cltd
ja
mov
movsb
movsb
xor
pop
sub
fisttpll
sbb
pusha
fsubs
pop
inc
ret
inc
push
add
cmp
aad
inc
js
dec
jmp
test
mov
push
inc
mov
dec
into
inc
lds
aaa
push
and
popa
out
ror
mov
push
jae
sub
jnp
mov
mov
mov
mov
xchg
push
std
xlat
lcall
insl
sbb
pop
test
inc
sbb
lret
and
xor
hlt
gs
mov
jae
inc
xchg
insl
aad
mov
dec
or
adc
movsb
mov
push
ds
mov
jmp
inc
and
cmp
cmpsb
adc
sar
jle
jb
rcll
pop
fwait
ss
push
push
push
add
shl
loop
mov
pop
es
mov
mov
addr16
mov
mov
jl
add
loop
sbb
shll
xchg
xchg
cltd
fcmovu
ficompl
mov
aam
shrl
pop
nop
sahf
xor
mov
syscall
push
insb
pop
mov
mov
inc
in
fsubr
out
cwtl
inc
bound
fcoml
aad
xchg
mov
hlt
loope
jne
in
mov
imull
sub
loope
aas
stos
mov
xchg
dec
inc
sbb
popf
mov
jns
inc
mov
rcll
ja
inc
popa
jge
cli
adc
stos
ss
pop
cmp
lods
clc
test
cmpsl
lcall
shl
fcmovb
cli
pop
addr16
ret
loope
movsl
inc
inc
cld
or
fisubrl
int3
mov
push
xchg
enter
xor
jnp
test
jne
and
push
outsl
xor
fneni(8087
sahf
mov
jmp
xchg
cmp
jle
in
adc
incb
inc
pop
insb
jmp
jns
sti
push
stos
sub
outsl
cmpsl
dec
mov
xchg
stc
adc
or
mov
fs
test
fmull
jge
jo
test
out
mov
sub
xchg
xchg
push
idivl
arpl
mov
loopne
lcall
mov
xlat
mov
out
sbb
loope
inc
xchg
rcl
or
imul
jmp
sbb
std
scas
in
mov
in
fs
ss
and
adc
mov
les
inc
hlt
jns
aam
adcl
loope
int
subl
sbb
arpl
sub
and
dec
stos
add
mov
or
push
les
mov
mov
pop
hlt
sub
cmp
mov
cmc
stc
ja
scas
das
out
sub
dec
dec
xor
in
add
adc
cmpsb
push
pop
push
or
pop
movsb
out
push
out
inc
xlat
xor
or
mov
inc
dec
inc
dec
jbe
rorb
loop
sub
test
inc
and
or
cmpsb
jl
add
ss
aad
push
sub
xor
jmp
imul
or
push
rclb
sub
loop
dec
mov
loopne
jg
inc
mov
shlb
sub
aam
gs
xor
mov
data16
stc
mov
jno
pop
outsl
repnz
jl
stc
popf
lret
hlt
mov
adc
mov
ret
jmp
pop
sti
sub
lods
pop
ret
push
loop
xor
cmp
testb
aam
lea
cwtl
aaa
jl
or
pop
push
in
adc
adc
xlat
mov
popf
in
mov
in
fs
out
xor
or
insl
and
ss
pop
jp
pop
fs
in
idiv
cmp
cmp
pop
fistpll
outsb
in
int
imul
hlt
into
insb
pop
out
and
in
das
sub
pop
sti
es
data16
push
imul
aaa
lods
pop
lods
push
cmpsb
mov
sub
inc
mov
loopne
mov
push
jbe
leave
aas
inc
mov
mov
lret
out
jo
push
int
push
sbb
ss
into
fsub
outsb
aaa
lret
adcl
inc
adc
leave
mov
mov
xor
hlt
test
iret
notl
cli
fists
das
jmp
sub
push
fwait
scas
mov
mov
dec
std
mov
fistpl
stos
cmp
dec
test
ja
out
gs
pop
jecxz
xchg
cmp
gs
jns
aam
sbb
pushf
pop
roll
and
notb
aaa
push
stc
std
add
cmp
in
xchg
push
push
cld
aam
js
mov
add
pop
xchg
pop
mov
fisubs
mov
idiv
inc
jp
fwait
cmp
shlb
pop
sub
sbb
test
xchg
lcall
jp,pn
dec
sub
popa
push
sub
jmp
roll
pop
fmul
outsb
and
add
decl
repz
imul
icebp
jb
xchg
sti
adc
in
mov
xor
jo
lcall
sbb
fadds
mov
jg
into
test
jmp
cmc
stos
sbb
arpl
fnstenv
scas
inc
mov
lock
leave
sub
lods
test
sarl
and
loope
cmp
push
inc
jbe
ljmp
xchg
loop
fs
and
lret
or
adc
mov
jbe
and
and
mov
lret
inc
popa
aam
icebp
pop
loopne
daa
xchg
jle
mov
popa
push
mov
sahf
or
add
mov
shr
jmp
and
add
loop
es
pop
js
mov
adc
xchg
add
ljmp
addb
cmp
or
fdivrl
sbb
xchg
into
inc
lock
fucom
aas
test
lahf
mov
lcall
popf
loop
cld
push
inc
cmpsl
imull
mov
mov
dec
sbb
mov
jb
addr16
xchg
adcl
inc
fimuls
sbb
adc
stc
jno
pop
in
and
test
or
sub
rcr
or
lcall
add
pop
sti
imul
mov
leave
jne
call
fwait
lret
xor
test
adc
cmpsl
loop
aad
mov
mov
cmp
push
push
and
in
sbb
dec
lods
testl
mov
repz
cmc
pop
iret
and
inc
mov
inc
jns
int3
jae
adc
mov
xor
std
es
cmp
insl
pop
cmp
jno
subl
int
bound
mov
adc
sub
xor
adc
js
sbb
mov
add
rcll
loope
push
dec
scas
rol
cmp
or
mov
mov
and
mov
push
xchg
shrl
rorb
sub
mov
inc
adc
in
aad
push
pop
test
dec
push
jb
sub
inc
or
lea
jl
sub
out
pusha
mov
dec
pushf
cmp
lret
xor
mov
inc
fwait
into
jae
pop
inc
push
cmp
xor
mov
pop
sbb
incl
aas
lock
js
push
mov
loope
pop
icebp
arpl
sbb
dec
xchg
inc
inc
mov
out
in
mov
xor
add
cmp
xlat
fisubrl
in
jno
mov
adc
in
lcall
imul
or
subl
jmp
push
out
cmp
jge
ret
adc
sub
mov
mov
lods
cltd
jbe
cmp
ljmp
or
sbb
xchg
push
mov
pop
loop
xchg
fildll
and
mov
bound
push
rorb
dec
dec
mov
pushf
push
jae
test
out
add
pop
lcall
add
and
call
mov
imul
mov
jae
outsl
outsb
cli
mov
aad
aaa
pushf
addr16
mov
push
mov
sub
es
add
scas
or
inc
cmc
cltd
sbb
sti
fidivrl
sti
pop
gs
pop
lcall
rcl
jo
add
xchg
icebp
addr16
cmp
pop
mov
fdivs
or
push
xor
dec
loop
jae
xor
fwait
jno
lea
subl
xor
clc
add
inc
pop
jnp
jp
jle
adc
xchg
test
aas
xor
divb
pop
sbb
adc
add
xchg
es
mov
mov
lahf
in
jno
mov
or
sbb
mov
movsb
adc
sub
dec
enter
outsb
sub
lret
test
push
push
mov
mov
pop
nop
mov
mov
adc
ret
pop
cltd
shll
or
pop
jle
adcl
imul
mov
adc
push
sub
imul
sti
sub
push
arpl
in
mov
sbb
inc
push
mov
jno
imul
stos
sub
dec
out
pop
push
sub
mov
iret
gs
and
add
ds
iret
jns
mov
and
mov
sub
in
out
pushf
xchg
fwait
sbb
push
cmp
lahf
scas
push
es
outsl
rorl
out
add
int
and
mov
aad
adc
mov
fwait
inc
jmp
add
or
jmp
movsb
shrl
and
or
mov
push
sbbb
jo
movsb
sub
aam
imul
das
add
xlat
inc
or
pop
shrl
jmp
sbb
xchg
pop
push
nop
adc
xchg
stc
aas
fnstsw
test
std
pop
pop
jl
cli
jl
xchg
insb
mov
mov
inc
das
mov
adc
xor
arpl
sub
pop
inc
cmp
insb
and
push
movsb
xchg
mov
lods
or
rep
cld
sbb
popa
inc
daa
insb
int3
ja
in
pop
push
loope
cmc
aas
psubsw
push
ret
pop
push
mov
and
jbe
or
push
lahf
dec
xchg
xchg
cmp
scas
shlb
int3
sub
sbb
xchg
or
sbb
jae
jecxz
mov
mov
mov
mov
add
lcall
push
outsl
mov
jg
sbb
into
dec
aad
adc
loope
mov
sbb
repz
xchg
ficoms
repz
fbld
imul
arpl
cs
mov
gs
mov
fsubp
cli
andb
jmp
pop
fistl
mov
mov
aaa
xchg
pop
mov
cmp
mov
sub
imul
pop
inc
incl
jb
aas
mov
push
jl
mov
aam
jne
inc
jne
cmp
out
pop
and
push
adc
inc
xchg
mov
inc
adc
mov
and
mov
mov
pop
stc
mov
mov
mov
mov
mov
or
xor
pop
jno
lcall
pushf
adc
mov
stos
cli
sbbb
lcall
sbb
outsl
fwait
repnz
je
jecxz
pop
ret
xchg
mov
cmpsb
iret
xchg
and
sti
imul
into
scas
mov
pop
test
in
xchg
cmpsb
divl
xchg
aas
fisubs
mov
in
sarl
dec
shl
and
stos
or
es
mov
cmp
dec
push
mov
imul
clc
jp
jno
cld
sbb
enter
in
repz
loope
xchg
in
scas
push
mov
fldpi
cld
insl
sti
int3
mov
sahf
iret
xchg
outsb
jp
popa
popf
rcll
stc
adcl
pop
data16
int
dec
lahf
mov
dec
mov
add
sub
mov
mov
ljmp
sub
hlt
jae
inc
cmp
jmp
call
mov
push
xchg
and
mov
mov
sahf
cmp
std
jnp
loop
sbb
push
ss
in
dec
or
mov
inc
or
daa
out
sub
pop
daa
je
cmp
or
add
outsl
scas
fnstcw
iret
clc
adc
aas
dec
fsubp
loop
adc
sub
jl
mov
outsb
leave
scas
addr16
in
sub
cwtl
xchg
fs
cmp
movsl
jmp
mov
xchg
fsubrp
pop
nop
add
sub
xchg
jge
pop
push
inc
xchg
cmp
or
push
or
jmp
xchg
cmpsl
xor
adc
ljmp
or
push
and
cs
dec
xor
mov
fstps
push
or
mov
or
jmp
aam
mov
xor
push
iret
mov
mov
push
movntq
mov
adc
loope
nop
icebp
pop
in
test
cltd
cmp
push
out
fisttps
int3
ret
push
pop
in
inc
rcll
mov
int
out
movsb
xchg
cmp
and
mov
mov
mov
push
ja
mov
jge
and
add
test
out
pop
jle
stos
add
jge
add
sbb
test
add
push
je
dec
or
fdivl
cmp
inc
and
xor
popf
rorb
jl
or
cmc
sarb
dec
sbb
pop
mov
cmc
ss
push
add
les
pushf
je
fsts
ja
aam
ja
xchg
test
out
cmc
mov
aad
inc
mov
in
and
pop
jl
fdivr
les
mov
add
cli
push
rol
xor
loop,pn
pop
inc
rorl
mov
popf
xorl
es
test
mov
dec
addl
jno
mov
dec
push
xor
dec
dec
lret
inc
cmpl
cmp
pop
mov
aaa
add
add
lahf
inc
xchg
jle
ret
adc
gs
into
xor
add
andl
inc
out
mov
pushf
lods
outsl
jmp
mov
mov
adc
push
fisubrs
in
outsb
mov
insb
jmp
push
rcll
repz
mov
push
inc
lret
dec
test
cmp
mov
sbb
add
daa
mov
pop
add
lds
lret
and
xor
sti
cltd
dec
cmp
adc
xor
mov
xor
adc
sar
shrl
inc
into
shrb
push
imul
test
lea
mov
stos
inc
or
in
or
out
jno
stos
pop
mov
push
xchg
push
int
andl
test
call
sbbl
add
push
les
dec
cmp
jecxz
mov
fwait
je
pop
lds
push
mov
xchg
cld
icebp
arpl
dec
pop
shlb
daa
dec
or
inc
inc
adc
xchg
lea
inc
shll
out
push
sbb
shlb
mov
push
test
mov
mov
sub
inc
clc
es
lahf
lret
jg
cmp
aad
inc
push
sub
frstpm(287
outsl
adc
adc
das
lods
in
fisttps
out
std
insw
xchg
xchg
mov
and
sbb
rorl
push
fidivs
sbb
mov
push
iret
icebp
or
push
int
hlt
int
mov
lods
pop
mov
cmp
push
jne
dec
xor
cltd
stos
cmp
sub
adc
pop
and
loope
jmp
testb
repz
and
push
push
pusha
int
push
stos
fimuls
pop
popf
inc
je
outsl
icebp
loopne
outsb
lret
insb
int3
js
iret
js
xchg
inc
cs
outsl
sahf
in
xchg
push
inc
mov
outsl
je
cld
sbb
pushf
lahf
cltd
je
ljmp
pusha
out
xchg
jp
enter
or
movsb
cmp
or
mov
xchg
test
lock
outsb
push
in
out
push
movsb
pusha
pop
jbe
and
jmp
dec
lods
std
mov
mov
add
incb
sub
push
in
test
fdivl
mov
sbb
dec
adc
xor
pop
lods
movsb
aam
xchg
cltd
addr16
lods
lret
cwtl
pop
aad
pushf
xor
push
test
mul
lret
jbe
movl
inc
fsts
ljmp
fsub
mov
outsl
int3
sbb
xor
cltd
push
sarb
iret
and
and
sbb
repnz
ret
int3
inc
push
ret
jbe
push
in
sti
clc
pop
adc
out
stos
or
inc
pop
sbb
stos
sub
fidivrs
dec
lds
xchg
adc
pop
fildll
mov
or
in
xor
mov
stos
mov
sbb
decl
js
cmpb
xchg
xchg
ljmp
mov
in
inc
xchg
fisubrs
mov
ss
xor
push
xchg
add
push
pop
fwait
pushf
sub
push
add
mov
and
sbb
stos
or
push
mov
loop
bound
cli
mov
push
test
and
or
lock
xchg
dec
movsl
loopne
mov
pop
jb
adc
dec
xchg
dec
cs
fmull
or
mov
hlt
insb
int3
in
pop
iret
popa
cmp
xor
jo
popa
data16
mov
icebp
gs
xor
mov
fstl
mov
sub
cltd
out
fnstsw
jbe
mov
add
xchg
fucomp
leave
xor
or
fdivrl
inc
pop
popf
mov
xchg
jg
xor
sahf
addr16
pushf
arpl
pop
cmpb
mov
rcrb
loop
cmp
xor
dec
mov
xchg
cmp
inc
popa
test
inc
sbb
sub
xor
dec
cwtl
push
inc
leave
inc
push
in
cli
and
lret
adc
decb
ficompl
mulb
mov
mov
gs
rcll
jbe
jmp
bound
add
imul
imul
pop
cmpsl
sbb
push
test
xor
rcll
mov
or
adc
arpl
sbb
mov
mov
sub
mov
aam
pop
sub
std
ret
mov
dec
mov
push
lock
push
mulb
clc
lock
js
mov
das
cmpsl
cwtl
push
pop
and
test
sub
hlt
stc
shrl
orl
outsb
dec
test
cs
mov
es
mov
call
mov
sbb
or
dec
xlat
fwait
jnp
into
flds
int3
sbb
cmpsb
and
sub
out
xchg
mov
pop
fadds
rorb
in
out
jecxz
ret
or
cmp
iret
push
xchg
pop
jnp
jb
sti
addr16
jns
leavew
dec
fnstenv
std
or
lcall
xor
aaa
jb
scas
shll
fbld
xchg
adc
ss
das
pminub
lock
cmpsb
xor
je
push
jge
xchg
jae
js
and
cmpsl
push
pop
rorl
pop
test
test
pop
call
mov
test
mov
xor
pop
movb
enter
stc
pop
fwait
or
pusha
mov
adc
test
das
push
jnp
stos
stc
and
sub
stos
sti
pop
cmp
fstpl
inc
jnp
mov
mov
adc
shlw
xchg
push
subb
sub
movsl
iret
nop
mov
push
cmp
jmp
ds
mov
lahf
push
outsb
xchg
jbe
rcr
ret
jmp
filds
ret
lret
adc
sbb
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
cmp
push
pop
addr16
gs
push
xchg
test
dec
cmpsb
out
shr
push
jbe
jnp
subl
mov
add
fdivrl
je
dec
mov
inc
push
pushf
pop
cld
mov
xor
inc
cltd
scas
sbb
xor
in
push
lock
icebp
push
mov
and
dec
test
xchg
out
xchg
emms
aaa
mov
mov
sbb
js
inc
nop
repz
call
mov
leave
push
fistl
or
fistpl
cli
cmc
aad
sbb
jl
jae
cli
mov
nop
xchg
out
jae
cwtl
sub
xchg
adc
ds
inc
test
aas
int
xor
sub
fstpt
xlat
sbb
fmull
mov
jl
mov
lret
mov
xchg
fisttps
add
push
pushf
or
test
sbb
dec
icebp
xor
loop
sbb
cmpl
pusha
and
rorb
sub
shlb
adc
mov
fsub
or
mov
and
xor
pop
pop
xor
mov
icebp
in
lea
das
jbe
addr16
cmp
sub
iret
popa
pop
jmp
mov
out
lea
jecxz
or
or
add
fidivl
dec
icebp
sub
and
pop
cmp
mov
ljmp
sbb
push
push
adc
es
xor
bound
push
fldl
push
mov
jne
hlt
xchg
lret
cld
addr16
dec
cltd
jae
lods
shll
xchg
outsl
mov
pop
stos
mov
add
dec
push
stos
fmuls
mov
adc
sub
or
sbb
add
test
out
or
xor
push
js
inc
insb
add
jmp
mov
jo
outsl
ficompl
mov
mov
adc
or
dec
lea
pop
faddp
jl
and
imul
or
push
loope,pn
and
jo
cmp
mov
dec
test
and
fdivl
add
lret
insb
and
sub
push
aad
and
sbb
and
lret
jne
cmp
insl
push
fmull
xor
push
scas
sti
adc
adc
shlb
sub
sub
adc
lea
jle
mov
cmpsb
in
idivb
push
gs
gs
data16
jne
mov
insl
insl
mov
ss
inc
test
pushf
sbb
sbbl
mov
push
dec
fmuls
adc
push
adc
pusha
push
addr16
pop
sub
popw
adc
or
pop
mov
add
xchg
aam
push
fsub
sbb
adc
xchg
adc
pop
repnz
cmc
and
aas
fs
je
push
adc
ss
stos
addr16
arpl
sbbl
gs
data16
dec
xor
aam
jns
xchg
mov
add
mul
push
lret
out
fnstcw
add
repz
testb
mov
or
int
testl
sub
mov
repnz
ss
jns
xor
mov
xor
pop
push
mov
lods
dec
pop
dec
ret
pop
and
stos
mov
iret
ljmp
mov
push
push
adc
test
sub
stc
jae
jns
rolb
cmp
ficomps
jae
ret
or
mov
popa
pop
gs
sbb
sub
out
fsubrl
pop
adc
sub
pop
pop
xchg
ja
fwait
cltd
ret
cs
loopne
mov
and
sbb
and
les
add
add
ret
pop
sbb
pop
pop
cmc
cmpsb
dec
decb
testb
fwait
test
aam
pop
cmc
jmp
pop
push
lods
fldcw
inc
jp
push
sbb
push
or
ret
leave
inc
and
ljmp
hlt
or
pusha
adc
mov
ja
fsubrs
mov
add
fcomi
mov
xlat
lods
xchg
loopne
popa
mov
aaa
addr16
fwait
mov
leave
push
int3
jl
mov
test
int3
call
rorb
sti
pop
out
in
xor
jge
pop
testl
int
andl
mov
mov
loopne
jmp
inc
jbe
push
sbb
and
xor
int3
jae
popa
dec
out
daa
shrb
mov
inc
xlat
add
pop
adc
push
cmc
js
lea
sti
into
es
out
dec
jg
xchg
push
dec
ja
jle
pop
pop
add
and
mov
flds
add
sub
sbb
dec
inc
dec
push
test
fwait
sahf
lock
call
sbb
xor
jp
repz
mov
mov
add
pop
xor
inc
ss
sub
movsb
test
ret
leave
sarb
rcrl
dec
das
jne
sti
jae
cmpsl
adc
popf
mov
or
addb
cli
push
or
mov
mov
mov
and
jl
sahf
jns
pop
enter
pop
notl
out
inc
clc
jp
inc
daa
mov
xchg
mov
mov
mov
xchg
in
ret
idivl
or
test
adc
hlt
mov
sti
cmp
in
lds
dec
cli
add
jne
mov
adc
mov
divb
sub
movsl
icebp
and
mov
cmp
and
rcrb
rcrl
adc
nop
cmp
aaa
and
es
ror
mov
dec
div
insb
rcl
cmpb
mov
inc
inc
movsb
sbb
xor
aas
ret
sti
mov
repz
repnz
push
scas
ficompl
ret
fcoms
jecxz
xchg
dec
jg
add
cmp
out
add
nop
enter
mov
rolb
js
imul
dec
sahf
aas
adc
sbb
sti
mov
movsl
and
int
test
sub
shl
sbb
and
add
imulb
jmp
sub
daa
ds
inc
and
jmp
into
push
xchg
xchg
imul
loopne
dec
decb
xor
cs
clc
jp
mov
out
rolb
adcb
hlt
xor
xchg
sub
ss
push
test
scas
pop
ret
pop
push
iret
test
daa
in
leave
push
cmpsb
mov
sarb
shrl
adc
mov
gs
mov
je
xor
pop
xchg
push
mov
push
loope
inc
fisubs
mov
or
shl
stos
sub
push
outsl
inc
ret
pop
bound
and
cmpsl
pop
dec
test
rorb
sub
hlt
mov
les
dec
lds
out
inc
and
pop
fiaddl
ss
cwtl
or
sbb
push
pop
in
xlat
int
icebp
and
arpl
addl
std
xor
hlt
jmp
fcomp
jmp
adc
push
push
popa
push
push
xchg
mov
fadds
add
std
sti
sbb
sbb
mov
out
adc
xchg
and
mov
mov
sub
scas
sbb
addb
dec
es
bound
mov
dec
xor
test
pop
jle
sub
neg
cmp
in
jno
jle
roll
nop
jl
cmc
sbb
int
int
shrb
leave
cmp
mov
push
das
int
or
ds
cli
inc
out
inc
pop
sub
cmpsb
xchg
ret
lahf
dec
call
test
adc
rorl
test
aas
add
xchg
jp
inc
adc
pop
rolb
aam
xchg
outsl
mov
xor
mov
les
out
loopne
lods
xchg
xchg
push
pop
outsb
pop
inc
pushf
mov
call
push
cwtl
inc
mov
test
loope
jecxz
cmp
lea
cmp
sbb
outsb
sbb
mov
je
pop
push
mov
insl
adc
cwtl
adcl
xchg
xchg
mov
clc
int
daa
mov
loope
mulb
test
or
push
mov
cmc
push
stc
and
cmc
in
push
adc
dec
or
loopne
push
adc
inc
test
and
mov
adc
test
mov
mov
cmpb
xchg
inc
orb
inc
mov
push
outsl
jbe
dec
in
xor
decl
sti
insl
push
clts
hlt
leave
call
mov
dec
or
fwait
and
in
jp
or
mov
pop
mov
rep
iret
push
shll
adc
into
mov
daa
xor
test
insl
shl
add
mov
jecxz
jno
add
into
inc
fcompl
divb
sub
push
inc
loope
sbb
jl
stos
lea
and
push
push
xchg
sub
sbb
fsubrl
xchg
ljmp
jle
out
fdivrs
mov
aaa
adc
lods
adc
sub
xor
and
sarl
sbb
cmp
in
lret
inc
das
enter
add
pop
or
insb
jnp
mov
mov
fnstsw
adc
cli
mov
and
into
mov
aas
sbb
sti
cmp
push
push
lock
fildl
cmpsl
sbb
or
stos
push
xor
mov
cmp
dec
push
stc
dec
cmpsl
test
xchg
test
cmpsb
jb
imul
or
jmp
int3
aad
lret
arpl
ret
push
sub
sub
fcoms
sub
adc
jo
ja
test
cwtl
sbb
je
mov
and
push
cmpl
mov
js
lcall
sbb
sub
addr16
sub
jns
and
inc
fisttpl
notb
jle
cwtl
sub
push
push
inc
sub
fsubrs
in
push
jo
adc
sarb
ljmp
sti
or
pop
lock
iret
subl
sbb
sbb
mov
out
sub
cwtl
xor
bound
mov
fs
push
mov
pop
imul
xchg
inc
in
xchg
lret
in
outsb
lea
mov
fidivrs
hlt
mov
inc
notl
lahf
ret
push
out
das
fucomi
das
pop
shlb
or
mov
js
popf
or
mov
and
clc
pop
imul
push
fnstcw
mov
jge
sbb
cs
jno
or
hlt
inc
fildl
stc
stos
sbb
jecxz
jns,pt
icebp
push
mov
pusha
sti
ja
divl
sbb
sbb
sbb
mov
inc
inc
xor
scas
mulb
pop
sub
dec
mov
dec
data16
das
xor
mov
and
pop
mov
or
add
sti
and
ljmp
mov
into
dec
sub
mov
cld
adc
js
in
nop
mov
dec
mov
adc
fwait
in
paddq
in
push
or
and
xchg
fs
push
in
push
jb
in
int3
lcall
into
cwtl
iret
sub
lock
mov
add
jmp
xor
dec
movsb
leave
pop
cmp
xchg
stos
es
sti
gs
outsb
adc
xchg
inc
jb
or
sti
cmp
inc
rcl
inc
cli
daa
movsl
mov
xchg
addr16
adc
add
aam
inc
sub
xchg
xor
pop
in
popa
stc
out
outsl
push
cmp
xchg
sti
addl
sbb
pop
imul
mov
or
mov
repz
cmc
outsb
fs
mov
test
pop
push
cmpsb
mov
jb
rorl
mov
cmpsl
shll
pop
add
xchg
mov
data16
ja
pop
mov
mov
or
push
and
das
cmpsb
jae
cwtl
pop
pop
mov
jmp
jnp
add
xor
test
cmpsb
push
mov
rol
loop
mov
popf
cli
mov
inc
pop
leave
mov
mov
pop
xchg
push
popf
icebp
dec
pop
sbb
fs
xor
sbb
out
jnp
cwtl
andb
fs
into
jg
daa
mov
roll
dec
insl
incl
jl
std
pop
data16
push
out
xchg
pop
cmp
in
scas
dec
in
inc
mov
js
or
lods
cmp
add
dec
ljmp
sub
fdivrl
mov
adc
push
or
sub
pushl
shlb
clc
jnp
xor
aad
arpl
pusha
les
xchg
popl
cwtl
ss
mov
nop
add
adcb
aaa
outsl
sub
pop
mov
mov
out
adc
lea
jns
mov
sahf
fcmovbe
and
sbb
and
daa
scas
push
dec
lock
mov
loop
push
stos
psrlw
dec
pop
lods
leave
gs
mov
xor
shlb
xor
push
fs
into
test
pusha
dec
adc
and
and
test
mov
push
sarb
lods
enter
vmovmskpd
movsb
dec
pop
inc
pop
adc
push
and
cmp
push
and
mov
pop
lods
xchg
push
out
jl
xchg
adc
pop
test
ja
aam
mov
cmp
call
xlat
mov
jno
jno
fdivrs
fisttps
mov
fnstsw
repz
push
stc
or
cmp
pop
cwtl
cs
pop
sub
in
lock
stc
mov
xchg
pop
jecxz
addr16
into
dec
cld
cmp
push
cltd
mov
push
and
xor
mov
addr16
cmp
das
out
aaa
das
inc
mov
loopne
pop
mov
hlt
mov
lock
dec
je
lret
daa
test
je
call
pop
insb
sti
mov
inc
lea
or
pop
sub
pop
xor
push
xor
xor
mov
cwtl
jl,pt
sub
jae
int
jae
out
mov
lret
cmc
jno
jno
cmp
dec
dec
in
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
mov
adc
xchg
xlat
mov
int3
repnz
jo
pop
dec
jle
dec
cli
add
or
hlt
ljmp
lahf
mov
and
or
lds
fs
push
xor
push
mov
cmp
xor
fimuls
scas
push
fwait
enterw
pusha
cmp
adc
add
int3
lret
int
and
dec
nop
pop
dec
lret
loop
push
jnp
jmp
subl
push
pushf
repz
mov
lret
gs
in
dec
ret
test
fs
inc
js
jnp
cmp
sub
test
xor
jbe
roll
and
cmp
inc
scas
ss
gs
mov
xlat
xchg
scas
adc
leave
clc
mov
and
cmpsl
sbb
add
jne
inc
sub
xor
push
pop
dec
lods
je
lods
jnp
and
stos
faddl
dec
dec
fadd
add
mov
dec
popf
cmc
or
mov
movl
xchg
aaa
adc
mov
xor
movsl
iret
xchg
mov
mov
stos
mov
xor
xchg
in
pop
xor
mov
ja
mov
pop
sub
repnz
ss
and
std
jbe
leave
adc
aad
loope
and
jge
sbbl
rcrb
loop
cmpsl
jp
shll
into
out
cld
and
outsl
sar
mov
aad
cmpsl
xchg
scas
push
jecxz
cmp
fimull
mov
or
pop
rol
ficomps
fsts
lcall
push
rdtsc
iret
push
scas
call
inc
gs
sub
pop
dec
sbb
lahf
fnstenv
ret
push
pop
pop
in
clc
popa
cwtl
mov
cmp
mov
lock
out
aaa
les
jecxz
sbb
into
sub
bound
pop
out
add
xchg
cmp
lret
rcrb
jecxz
pusha
adc
aaa
dec
jp
mov
cmpsl
mov
fiaddl
leave
lahf
aam
xchg
int
dec
mov
aas
or
add
inc
jo
cs
lret
sub
sbb
lds
jno
fbld
and
imull
cs
push
sub
lock
fwait
daa
dec
inc
and
roll
cmc
cli
stos
inc
scas
xchg
xchg
dec
mov
sub
adc
std
mov
sahf
or
test
push
inc
imull
xor
lret
jns
dec
stos
rclb
sub
loope
push
cmpsb
dec
imulb
add
push
xchg
and
add
gs
pop
aaa
es
push
mov
sbb
outsl
xchg
dec
push
std
sbb
outsb
enter
dec
les
jno
mov
jo
mov
imul
pusha
jmp
inc
mov
pop
shrb
cmp
aad
mov
testb
inc
sub
pop
loopne
or
pushaw
xor
dec
out
xor
pop
les
dec
xchg
sbb
insb
cli
dec
xchg
sbb
fstl
jl
mov
dec
lret
pushf
mov
mov
add
scas
in
adc
movntq
jno
push
cwtl
xchg
pop
inc
mov
pushf
data16
dec
pop
out
inc
fimull
bound
pop
std
repz
cmpsb
fdivl
mov
dec
clc
jmp
mov
enter
jne
fcmovnu
push
icebp
or
test
int3
nop
es
xchg
in
test
lock
popa
es
and
dec
ret
lods
xchg
popa
sarl
mov
mov
push
cmc
add
fwait
xor
xor
and
arpl
and
aam
mov
shl
cmc
ljmp
movsl
das
sahf
pop
lret
in
lods
mulb
pop
cwtl
inc
jb
pop
sbb
mov
jbe
mov
cmp
imul
outsb
cli
sub
inc
popf
ja
dec
rclb
push
scas
cwtl
sbb
mov
ret
jns
xor
jp
mov
xor
pushl
aam
pop
cmpps
add
jnp
les
jecxz
jae
insl
mov
pop
dec
inc
and
xchg
and
jae
pop
jne
mov
subl
inc
addl
das
out
das
jno
sar
pop
mov
repz
mov
dec
enter
nop
mov
ljmp
sti
pop
pusha
xchg
sub
data16
or
stos
sbbb
filds
mov
daa
shll
push
xlat
ret
in
add
lcall
mov
inc
loop
lods
loopne
sub
fmull
xorb
mov
mov
out
jp
js
sub
lock
adc
ljmp
mov
jno
sub
dec
xchg
rcrb
das
mov
fidivl
push
scas
jle
rorb
mov
jo
push
mov
lahf
mov
adc
dec
cs
or
cmp
aam
mov
test
ret
scas
lock
daa
inc
jae
mov
jg
xchg
imull
loop
bound
das
dec
pop
fwait
aam
lcall
dec
inc
int3
leave
fldcw
jge
mov
mov
nop
jp
dec
mov
inc
rolb
jmp
mov
mov
push
lret
pop
jecxz
lcall
out
mov
cmpsb
shll
dec
popa
cwtl
rcrl
jg
push
popf
loop
int
outsl
inc
mov
in
push
js
cltd
pop
sbb
cmp
shlb
mov
scas
or
or
cmp
adc
ja
mov
pop
jecxz
mov
stos
repz
adc
mov
loopne
scas
inc
adc
jnp
pop
sub
dec
jg
mov
mov
push
adc
inc
jmp
and
iret
mov
xor
and
cmp
jmp
mov
pop
stos
shll
lods
ss
mov
mov
mov
mov
jmp
enter
dec
cmpsl
sbb
lods
pop
jg
fwait
mov
call
aas
mov
inc
sub
lods
outsl
sub
push
mov
int
or
mull
enter
ficomps
inc
clc
outsl
adc
xor
xchg
push
xchg
es
fistpll
add
fs
shrl
lods
xor
shrl
mov
popa
xchg
push
push
ljmp
push
dec
inc
stos
push
and
jl
test
push
aas
mov
popf
fldcw
cmpsl
dec
inc
dec
and
or
mov
jl
flds
bnd
mov
int
shl
mov
and
cli
aad
repz
loope
fcmove
in
mov
ficoms
iret
xchg
adc
push
sbb
aam
arpl
push
idivl
gs
adc
sbb
pop
mov
dec
pop
movsl
outsb
outsb
lods
out
fidivrs
add
jbe
and
mov
js
mov
mov
insl
jmp
frstor
movsl
xchg
ds
push
push
pushf
jno
adc
fcmovbe
jne
mov
jnp
and
lret
mov
orl
insb
lea
sbbb
sub
jae
icebp
test
pop
add
xor
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
or
adc
xchg
rcrb
or
xchg
xchg
sub
push
repnz
arpl
cltd
pop
pop
add
fldenv
pop
cli
lret
dec
pop
lock
pop
daa
push
mov
jmp
sbbb
push
cltd
sbb
andb
sub
mov
in
jne
sub
add
mov
jl
inc
mulb
neg
xchg
mov
pop
cwtl
cwtl
cmp
mov
leave
xchg
lods
pop
sbb
out
lret
dec
lods
mov
test
outsl
pop
add
cmpl
sub
std
mov
lock
adc
dec
sti
rol
inc
lret
clc
cmp
mov
outsb
adc
push
mov
push
lahf
mov
xchg
imull
push
fdivl
xor
sbb
and
leave
lods
sub
pushf
fistpl
js
outsb
daa
ret
add
inc
jb
and
lret
setnp
mov
xor
pop
iret
mov
mov
or
push
pop
xchg
inc
xchg
in
jle
call
iret
es
repz
fnstcw
lcall
cmp
out
jno
stos
jbe
cltd
inc
inc
jle
add
pop
add
and
insb
inc
lahf
fidivl
cld
adc
in
push
into
jecxz
cmp
lret
enter
and
cmpsl
dec
std
inc
into
xor
dec
mov
repnz
pop
rorb
push
rclb
mov
cmp
repz
mov
data16
jo
pop
lock
jmp
lds
popf
ds
loope
xor
and
insb
sub
in
adc
call
pop
cwtl
xor
das
hlt
cmp
ljmp
insl
cmpsl
repz
mov
add
dec
dec
pop
ret
insb
shll
adc
cmp
jnp
pop
lret
push
and
shlb
xchg
lock
jmp
xchg
je
and
cmp
lcall
cmp
cwtl
scas
push
movsb
shlb
jle
shlb
push
add
ljmp
xchg
aad
sbb
cwtl
or
cmp
sahf
mov
or
xor
ss
out
pop
xchg
movsb
fxtract
lret
mov
pop
dec
jbe
mov
adc
dec
cwtl
mulb
push
dec
loop
mov
xor
divl
outsb
cmpb
imul
sub
jmp
dec
and
sub
in
mov
scas
lock
pop
pop
notb
repnz
ja
fcoms
fstps
arpl
sahf
cmp
mov
sub
xchg
in
cmp
je
mov
data16
shlb
arpl
pop
mov
add
adc
pop
mov
inc
mov
jle
insb
ja
xor
or
mov
test
nop
into
sbb
pop
mov
push
enter
inc
sub
jmp
pop
push
ret
pop
cmpl
inc
jmp
mov
outsl
sub
sub
sbb
mov
or
xlat
popa
mov
adc
mov
popa
push
aas
pop
inc
push
cmpsl
bound
bound
mov
into
push
jle
cmp
push
xor
in
mov
mov
aam
push
cmp
and
sbb
pavgb
fbstp
lcall
out
in
sbb
mov
leave
repnz
stos
fsubrs
or
push
push
lret
in
cmp
cmp
mov
ret
jg
xchg
adc
outsl
scas
jp,pt
mov
dec
andl
jo
and
sti
ds
bsr
call
push
repz
loope
bound
xchg
stos
sbb
xlat
mov
sbb
sub
fs
mov
or
sbb
push
mov
fcmovnu
inc
insl
cmp
or
pop
dec
fs
fs
out
adc
imul
or
inc
mov
mov
lea
pop
fmull
xchg
xchg
pop
inc
and
pop
leave
and
insl
mov
call
cmpsb
leave
xor
popa
lret
add
std
test
push
push
lret
xchg
inc
and
cmc
push
xor
adc
and
sbb
std
sbb
add
sbb
sub
xchg
adc
sarl
mov
dec
xor
cltd
pushf
dec
fs
loope
lods
mov
daa
push
data16
sbb
xchg
mov
push
and
cltd
mov
dec
aas
mov
imull
mov
repz
stos
push
loop
stos
aad
stos
je
call
imul
jle
fcoms
add
add
punpckldq
cltd
js
xor
sub
arpl
insl
sbb
int3
gs
fcmovb
mov
or
mov
fistl
out
int3
cmp
out
and
jp
jbe
mov
mov
xchg
cmc
hlt
xorl
fwait
in
xor
dec
mov
jle
or
adc
push
data16
dec
ss
mov
out
addr16
xchg
stos
lods
mov
pushf
mov
mov
mov
lods
sub
addr16
aam
jle
cmpsb
icebp
or
nop
add
nop
clc
cmp
jmp
inc
or
dec
leave
popf
cmp
bound
nop
cmovo
or
pop
adc
cmp
jecxz
mov
push
test
nop
mov
insl
push
add
fs
lret
adc
cmp
loope
aaa
sbb
ret
mov
daa
roll
xchg
gs
lock
push
add
je
inc
jmp
pop
or
ret
add
dec
lea
and
outsb
lock
jne
xchg
pop
add
lock
adc
dec
mov
out
shlb
dec
sub
dec
je
mov
je
ficompl
fistpll
enter
mov
sarl
inc
push
add
or
or
loope
pop
in
adc
mov
aam
inc
sub
xlat
or
jl
dec
clc
cmpsl
into
std
subb
pop
xchg
adc
inc
movsb
jae
add
adc
mov
repnz
mov
dec
inc
jecxz
aad
insl
stos
jmp
mov
sbb
aad
dec
fstpt
push
pop
xlat
adc
jmp
rol
loope
test
sub
fiaddl
repz
movsl
jne
add
add
jbe
or
insl
outsb
rolb
add
cld
dec
lock
mov
les
jns
cmp
push
add
jnp
mov
and
rol
shrl
lret
xchg
arpl
das
sub
sub
loopne
mov
scas
mov
rorb
pop
loopne
jp
lcall
sbb
mov
mov
ja
in
leave
lret
repnz
cld
stc
fimull
push
cltd
pop
divb
dec
adc
xor
cmp
lods
mov
dec
or
cmp
xchg
insl
cmp
jno
data16
jo
sbb
test
shr
test
mov
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
mov
lea
adc
or
pushf
dec
push
scas
and
pop
lods
sub
test
pop
addr16
sahf
cmp
nop
es
add
loopne
cmp
push
aas
daa
xor
fistl
in
pusha
lods
test
out
cmc
dec
jb
push
cmp
test
fcompl
shrd
movsb
sub
movsb
jge
int
push
out
and
mov
or
sbb
cmp
out
ret
jo
lods
pusha
and
cmp
cmp
cmp
scas
int3
xchg
jge
inc
xchg
fsubs
dec
xor
dec
ds
jg
ret
jge
daa
test
add
jge
xchg
or
or
and
fadds
mov
mov
sub
dec
test
movsl
adc
pushf
sub
push
lea
stc
dec
fstpt
popa
shlb
aad
scas
adc
sahf
sub
loope
cmp
xor
cmp
lods
mov
sub
shll
test
mov
sub
jne
loopne
push
test
or
int
jecxz
pop
stos
push
cmp
loop
les
aaa
cld
pop
rorl
mov
jb
sahf
sbb
pushf
sub
lea
jle
cmp
aas
js
lods
stos
dec
pop
jmp
dec
bnd
lret
sub
pop
adc
clc
test
popf
aas
jno
cmp
sahf
lcall
xchg
xor
shll
ss
inc
jge
cmp
sbb
call
jae
pop
dec
popa
jo
sbb
pop
lahf
call
stos
shl
pop
adc
addr16
push
outsb
pop
dec
ja
cld
mov
inc
in
or
jecxz
push
lock
jmp
cwtl
inc
imul
es
jg
adc
add
fsubrl
pop
fisttpll
inc
test
mov
icebp
dec
sub
push
mov
jb
subl
mov
and
adc
jmp
pusha
inc
insb
rorl
jnp
push
adc
loopne
mov
shrl
stc
and
mov
push
scas
inc
cmpsl
push
pop
movsb
pop
imul
out
movsb
fs
mov
shll
push
push
imul
mov
xchg
or
aam
pusha
pop
fdivp
sub
loopne
sbb
das
push
mov
sbb
jne
adc
popf
or
pop
mov
fwait
cmp
int
cmp
cmp
mov
push
xor
fisttpll
xchg
cmp
mov
sarl
mov
sarl
filds
sbb
pop
std
adcl
iret
mov
scas
std
jecxz
cmpsb
jne
jbe
pop
mov
fisubrl
int
sub
or
cmp
jnp
xor
fsts
sub
out
sti
in
sub
lds
shll
mov
movsl
inc
and
dec
stos
lcall
add
xor
imul
call
jp
add
push
inc
dec
jno
ljmp
mov
xchg
jne
ss
test
pop
movb
and
and
sbb
cmp
daa
adc
mull
jo
jmp
lock
mov
arpl
cmpsl
cmp
aam
in
sbb
push
fisubl
xchg
push
fs
out
jmp
xchg
xor
sbb
xor
addr16
add
xchg
lcall
call
pop
dec
popl
sbb
test
cltd
fisttpl
rorl
adc
lahf
ss
sbb
sbb
test
or
mov
xor
xlat
lock
lret
icebp
inc
mov
fcoms
jb
add
xchg
mov
lock
fs
adc
loope
xor
sbb
mov
idiv
lcall
iret
jmp
mov
popf
xor
sbb
stos
cmp
in
mov
stc
lret
or
in
out
cmc
cli
add
cmp
shlb
sub
add
sub
pop
in
test
or
push
jo
add
inc
loopne
dec
mov
push
and
fdivrp
bound
mov
inc
xor
sarl
lds
sbb
lahf
xchg
jg
mov
inc
dec
repnz
add
xor
scas
add
jle
xchg
mov
fcomps
arpl
dec
jns
adc
or
cmp
pop
cltd
inc
push
pop
mov
rorb
pop
std
xchg
movsl
inc
inc
xor
inc
aaa
or
mov
xchg
mov
cli
lret
daa
sbb
xchg
fmull
jecxz
jbe
aam
mov
cmp
ss
xchg
xchg
sbb
sub
lret
or
repz
leave
lret
sbb
or
or
push
es
mov
movsl
sub
adc
xchg
mov
jecxz
xor
jb
xchg
fs
adc
inc
cmc
aaa
js
into
pop
mov
cmp
xchg
popa
add
orb
push
jnp
rorb
xor
iret
fcompl
inc
inc
mov
dec
and
jg
stos
pop
inc
out
mov
cmp
or
jns
jmp
clc
addr16
xor
nop
imul
lret
and
dec
mov
fwait
stos
xchg
out
lahf
out
push
shlb
out
xchg
imull
sbb
add
lcall
xchg
adcb
sub
lret
adc
jl
js
and
scas
mov
adc
repz
dec
repnz
out
jl
xchg
sbb
xor
pop
repz
test
cmp
add
jo
adc
inc
iret
mov
fwait
xlat
fwait
xor
test
xchg
testb
sahf
mov
sti
out
fbstp
out
in
cmp
in
stc
add
data16
popa
and
enter
jne
adc
arpl
xchg
mov
sti
outsl
notl
das
cmpsb
shrl
xlat
pop
decl
out
mov
popf
test
xlat
and
jmp
or
stc
add
add
mov
mov
pushf
into
std
rep
sti
insb
adc
cmpb
mov
es
jns
insl
xor
aad
mov
lods
cld
leave
or
aaa
dec
ljmp
test
push
sub
test
sub
fcomps
lods
mov
xchg
mov
and
or
movsb
nop
pop
sub
xchg
sub
xor
aaa
jae
xor
call
fcmovb
sbb
das
faddl
cmp
lds
mov
jecxz
push
dec
pop
xor
nop
int3
sub
cmp
fdivs
pop
mov
lea
pop
in
loopne
and
into
ror
pop
dec
add
fucomp
call
adc
movsl
fsubs
lcall
push
push
or
mov
out
add
ret
imulb
push
sub
into
cmpsl
enter
int
pushf
push
dec
mov
pop
pop
jle
or
mov
jbe
in
ret
mov
aaa
add
pop
aaa
sub
or
mov
mov
shl
shl
mov
mov
jmp
test
fcoms
xorl
pop
or
ja
jp
mov
mov
adc
les
cmp
mov
pusha
push
adc
jbe
dec
fstpt
lcall
rol
add
adc
add
ljmp
inc
aaa
in
jmp
mov
stos
gs
cmp
xchg
pop
das
mov
jg
aad
inc
push
jp
mov
xchg
andb
mov
scas
loopne
sub
pusha
ds
or
shl
pop
inc
add
es
hlt
cmpsl
stos
inc
test
fldl
push
mov
ret
dec
push
test
icebp
xor
and
loopne
mov
data16
mov
jmp
das
mov
movsb
inc
pop
iret
in
mov
stos
adc
scas
decl
popf
xchg
cmpsb
test
xchg
push
outsl
jmp
test
mov
rcrl
cltd
pusha
in
fbstp
lock
addr16
pop
sbb
rcrb
lds
or
dec
xor
inc
pop
rol
and
sub
dec
jnp
aad
inc
scas
inc
scas
js
push
movsl
mov
movzwl
je
cmp
xor
outsl
addr16
jb
fnstcw
in
add
call
test
and
addb
outsb
cmp
and
imul
dec
add
imul
add
iret
call
loope
cltd
mov
orb
lock
xchg
jo
sbb
ret
inc
test
push
push
sub
repnz
xor
lds
mov
mov
stos
fwait
mov
out
aaa
jae
adcb
sub
mov
frstor
pop
lret
or
or
sbb
jp
jb
sbb
fdivr
push
jno
cmpsl
sahf
cltd
and
aam
push
and
stc
xchg
dec
fwait
test
mov
cmpsl
popf
sbb
pusha
pop
sbb
ret
jb
jl
lock
loop
in
pop
pop
jl
sbb
sub
dec
cld
jnp
xor
cld
insl
cli
es
mov
push
mov
div
push
mov
js
or
mov
hlt
add
dec
add
push
fnsave
jne
xchg
ja
je
popa
mov
aas
jae
mov
pusha
mov
mov
jo
pusha
movsl
or
mov
adcb
cwtl
rcll
xchg
jp
pop
lods
das
mov
je
or
idiv
ret
popf
lods
jg
sarb
cmp
ljmp
test
dec
pusha
push
test
in
cltd
test
mov
cli
inc
sbb
push
jmp
popf
mov
jge
shlb
addr16
jmp
lret
adc
fst
adc
mov
sub
cs
arpl
orl
dec
mov
push
and
inc
sbb
lods
ds
fsubrp
ret
cltd
mov
fcomps
shlb
push
and
int
pop
orb
cld
clc
repz
outsl
sbb
mov
dec
push
push
pop
jg
xchg
inc
stos
cwtl
adc
cld
outsl
stc
and
and
add
mov
idivb
out
pop
movsb
pop
push
mov
fdivl
icebp
add
xchg
loop
loopne
adc
adc
stc
mov
movsl
cmp
mov
mov
aas
push
inc
in
xor
les
pop
pop
es
inc
dec
aad
cmpsb
mov
stc
add
jns
sub
push
call
jecxz
lcall
sub
sub
es
inc
fists
jbe
dec
cmpsb
das
stos
mov
xor
jbe
fsubr
insl
mov
int
add
adc
outsl
cmc
sbb
out
pushf
sub
enter
dec
jae
mov
fsqrt
lahf
cmp
sti
aam
aad
test
push
adc
xchg
cmp
fadds
ret
jb
ja
jmp
or
xor
sbb
imul
stos
into
dec
xchg
stos
gs
or
pop
sub
nop
add
mov
int
pop
xchg
sti
inc
jge,pn
mov
in
ss
rcll
out
push
cwtl
in
lahf
push
out
ret
adc
leave
mov
sbb
pop
add
ss
jge
xchg
aas
jmp
mov
or
fistpl
shrl
inc
mov
int3
lret
pop
in
icebp
mov
test
pop
aas
or
addr16
xchg
pop
out
sbb
and
xlat
and
ja
loop
mov
imul
repz
mov
cmc
cmpsl
pop
fstpt
js
push
adc
mov
jge
lret
int3
out
mov
mov
push
and
push
xchg
sbb
pushf
push
inc
or
repnz
sub
and
cmc
in
popf
mov
addb
insl
lcall
sbb
lods
cmp
push
mov
fucom
sub
fwait
sbb
movb
add
test
movsl
lret
leave
bound
pop
sub
dec
xlat
dec
divl
cmp
cmp
mov
ret
jo
sub
faddl
push
sahf
pusha
fcmovu
sbb
push
lock
rolb
sub
pop
push
fcoml
push
ljmp
jnp
cli
inc
dec
pop
lahf
xchg
sub
enter
jp
jb
dec
lahf
cli
cld
sub
imulb
xor
adc
fidivl
jle
scas
out
sub
iret
xlat
orl
cmpsl
cmp
xor
mov
inc
xchg
mov
mov
or
mov
bound
jecxz
dec
push
daa
jle
jns
or
inc
cmp
and
cmp
movsb
fcompl
aad
aaa
scas
int3
or
cmpsb
push
test
stos
mov
push
fnstenv
adc
pop
pop
ret
pusha
adc
in
mov
js
mov
push
xor
jge
and
sbb
int
pushf
push
cmpsl
pop
lahf
cmpsb
test
js
push
mov
mov
jg
stos
iret
push
cmp
push
inc
loopne
pop
inc
scas
jmp
in
sbb
dec
adc
sbb
mov
ret
pop
dec
dec
jmp
mov
cmpsl
loopne
loope
insb
cmpsb
mov
jbe
adc
pusha
cs
mov
sarl
jns
mov
rcl
lods
das
sbb
inc
clc
rcll
pusha
stos
and
out
mov
sub
idivl
dec
mov
fs
movsl
add
daa
insb
sbb
and
nop
test
pop
mov
mov
mov
push
or
mov
fdivs
pop
sbb
adcl
pop
xor
popa
aad
lods
pop
dec
aad
lea
out
mov
adc
and
sub
pop
rcll
mov
je
jg
addr16
je
das
pop
loop
insl
cmp
ret
icebp
xor
adc
push
pop
iret
pushl
data16
outsb
enter
cmp
hlt
adc
les
in
mov
add
pop
jp
xor
push
push
pop
pop
dec
rclb
and
pop
or
and
jb
test
adc
sub
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
scas
into
xchg
stc
pminsw
loopne
xlat
rorl
out
out
fidivrs
outsb
mov
sbb
mov
lea
daa
loope
mov
sbb
vpshufhw
hlt
xchg
cld
aas
jmp
dec
mov
mov
stos
jle
gs
xchg
inc
mov
notl
gs
push
sahf
ds
mov
inc
push
dec
or
movsl
pop
cwtl
cld
dec
leave
sahf
mov
cltd
cmp
add
dec
cs
jnp
mov
or
outsb
xor
cwtl
ret
xchg
push
jb
dec
je
insl
cmp
pop
mov
nop
add
repz
jo
cwtl
cmp
or
icebp
push
rorl
mov
mov
jmp
lahf
push
sub
xor
cmp
xlat
sbb
scas
into
or
sub
sbb
jle
ret
push
adcl
dec
mov
cmpsl
notl
xchg
pop
jg
inc
mov
mov
dec
lds
cmp
dec
out
shlb
aas
addl
sti
lret
pop
or
add
loope
or
add
lahf
jmp
inc
dec
bound
outsb
test
push
inc
into
inc
aas
inc
adc
inc
and
ffreep
sub
and
stc
or
sbb
aas
repz
data16
clc
sti
les
adc
pop
clc
jns
std
sbb
scas
and
imul
jecxz
add
push
sub
cmp
clc
negb
ss
iret
jo
iret
xor
cmp
out
int3
add
mov
shll
enter
xor
bndldx
outsl
jmp
xchg
pop
cmpsl
pushf
jle
mov
stc
adc
push
pop
mov
cwtl
add
jl
fninit
out
imul
adc
addr16
mov
add
outsb
dec
ja
adc
add
sbb
in
movsb
xchg
enter
and
mov
add
int3
dec
sub
sti
inc
ret
jg
push
push
mov
and
mov
cmp
test
fwait
mov
addr16
push
in
lahf
sbb
out
test
jnp
or
in
rorb
xchg
aam
mov
pop
pop
cmpsl
jl
push
pop
and
sbb
stos
mov
test
dec
sub
dec
insb
stos
repz
pusha
cmc
mov
mov
cmp
pop
ja
pop
repz
fcmovb
ret
dec
xchg
jg
jns
mov
dec
mov
lret
push
sub
xchg
movb
dec
cmpl
sub
into
inc
cmp
xchg
dec
jo
dec
test
jae
push
pop
jns
shrl
sbb
aaa
mov
lds
cmpl
in
jle
sub
jns
icebp
iret
jne
dec
cwtl
aam
arpl
sub
pushf
dec
and
mov
cmp
icebp
roll
les
xor
jbe
popa
fcmovbe
mov
mov
push
jae
or
fmull
pop
cmp
in
lret
add
loop
pusha
fs
lret
mov
cmp
mov
xchg
jmp
sahf
arpl
loope
test
xchg
addr16
popf
hlt
add
icebp
test
cltd
mov
fisubl
in
inc
mov
dec
mov
inc
sahf
inc
cmp
rclb
repz
mov
in
jp
fsts
imul
mov
das
pushf
adc
xor
push
test
xchg
and
out
in
imul
movsb
test
add
in
sub
daa
add
add
jmp
les
pop
jae
mov
js
push
push
xor
mov
lods
mov
and
cmp
je
pop
sub
cmp
test
es
mov
jmp
lods
test
sbb
mov
in
cmc
xor
cmp
push
rcrb
add
pop
rcrb
stc
out
mov
push
fdivrl
or
mov
mov
push
ja
jns
inc
add
leave
push
mov
inc
cmp
jno
mov
jecxz
test
popf
not
push
lods
mov
repnz
sahf
adc
clc
fwait
cmpsl
lds
cmpsb
and
mov
dec
dec
test
ret
stos
imul
mov
and
xchg
popf
jae,pt
sbb
adc
in
sub
sub
loop
adc
mov
pop
in
push
lret
mov
xchg
xchg
nop
lcall
insl
outsl
imul
pop
int3
lahf
bound
lea
leave
das
inc
test
and
mov
in
xchg
pop
adc
orl
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
