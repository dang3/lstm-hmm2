push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
and
addl
xor
cmp
cmp
js,pn
je
add
jae
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
sbb
add
jb
jns
ffreep
in
mov
idiv
leave
and
stos
mov
or
out
xchg
fistps
jns
aas
jecxz
cmc
and
imul
jb,pt
out
je
clc
xlat
xchg
dec
mov
cmpsl
push
jmp
xor
bound
pop
orb
or
jns
xchg
pop
and
outsl
cmp
sub
pop
test
add
jmp
push
imull
or
mov
dec
mov
out
and
cli
inc
mov
lock
cmpsb
cmpsb
mov
js
mov
inc
in
jp
shrb
fwait
add
push
aaa
and
lcall
inc
pop
xor
lahf
push
push
xchg
stc
cmp
sbb
int3
inc
iret
jge
lret
push
fistl
jp
xor
pop
or
push
jmp
xchg
mov
add
and
aaa
pop
test
aad
xor
not
pushf
jne
sti
jns
mov
loopne
adc
stc
subb
push
cld
in
cmp
stos
sbb
mov
roll
xchg
jae
cmp
fidivs
je
andl
or
inc
lock
inc
call
rcrb
das
sub
in
adc
push
shlb
sbb
addr16
mov
or
insl
adc
jne
scas
std
aaa
ljmp
cltd
push
into
pushf
fisttpll
mov
adc
adc
stc
addr16
popf
fimuls
dec
insb
add
ljmp
pop
xchg
fildll
mov
fs
mov
and
mov
jns
xchg
sti
inc
leave
testb
ret
andb
fnstsw
pop
andnps
push
iret
movsl
std
pushw
pusha
fwait
pop
pinsrw
xchg
mov
data16
scas
pop
inc
sbb
mov
pop
jle
enter
inc
jnp
inc
and
cmp
jmp
mov
jge
xor
jmp
cli
gs
pushf
enter
sub
inc
out
mov
fbstp
stc
mov
bswap
push
sbb
mov
inc
scas
push
adc
add
or
mov
cltd
imul
gs
mov
and
mov
xor
cmp
jne
gs
movsb
and
or
imul
ss
adc
xor
dec
adc
dec
inc
jmp
inc
push
lcall
add
jge
in
add
shlb
xchg
mov
pop
call
lock
xor
mov
das
sub
lcall
mov
add
xchg
xchg
in
sbb
rcl
pushf
cmp
outsl
sti
lods
mulb
jno
push
cmpl
aad
sub
jg
lahf
dec
repz
enter
lcall
pop
lcall
sub
or
lret
inc
mov
adc
aas
pop
popf
mov
xor
add
dec
sahf
fs
pop
jle
clc
sub
lcall
adc
bound
mov
xchg
push
fsubrp
fstps
push
jmp
jbe
imul
lock
ljmp
loopne
pop
sbb
sahf
sti
xor
and
pop
mov
jp
das
mov
mov
push
xor
gs
add
jb
inc
mov
lret
inc
loopne
es
jl
cld
negb
in
out
in
dec
cmpsl
add
mov
push
mov
aas
scas
jnp
cli
cmc
pop
sahf
test
cmp
pusha
arpl
pop
orl
push
shl
push
jo
inc
push
aas
cmp
scas
push
and
in
or
mov
sbb
pop
bound
les
je
mov
mov
or
pop
addl
shl
aam
xchg
xor
jle
jmp
mov
xchg
adc
in
cmc
cltd
push
js
sub
stos
inc
dec
jle
jge
fs
mov
dec
testl
cmp
push
push
push
repnz
sarl
into
sub
dec
test
pop
popf
push
mov
cmpsb
cs
repnz
fucomp
mov
lea
or
rclb
mov
sahf
int
es
fstpl
enter
jbe
addr16
mov
cld
dec
lods
dec
gs
sub
and
or
ja
add
or
pop
mov
or
inc
inc
mov
push
add
clc
push
inc
sarl
pop
sub
les
mov
push
jp
movsb
and
ds
sub
jmp
add
dec
push
insl
std
fisubrs
jg
jbe
mov
out
andl
movsb
push
test
xchg
fstpl
ss
ljmp
mov
mov
mov
mov
sub
inc
pop
ficompl
adc
xchg
mov
pusha
inc
inc
mul
cmpsb
int3
and
stos
mov
pusha
jnp
test
sahf
sti
loop
arpl
dec
nop
outsl
iret
cld
push
aam
cwtl
pop
pop
test
sbb
in
mov
sbb
insl
leave
inc
pop
fdivrp
dec
add
adc
lcall
or
mov
repz
test
pop
mov
in
pop
xlat
mov
sbb
add
arpl
in
rclb
mov
mov
jae
cmp
jbe
dec
inc
or
inc
imul
dec
hlt
or
fsubr
out
dec
outsb
enter
pop
pushf
xchg
adc
nop
inc
out
lret
aaa
ljmp
cmp
mov
mov
adc
pop
sarb
popl
in
rcrl
and
out
fdivs
mov
insb
idiv
les
repnz
sub
mov
mov
mov
subb
movsb
and
adc
stc
and
add
scas
jae
dec
into
mov
mov
shlb
jle
push
les
inc
fmuls
push
jns
jo
and
and
sub
loopne
data16
idiv
stos
sub
mov
mov
and
cmp
rcr
fsubp
xor
into
and
adc
icebp
xor
aas
pop
aas
inc
cwtl
pop
insl
stos
lret
xchg
pcmpgtd
pushf
lret
sar
push
mov
dec
lods
enter
xchg
add
es
add
mov
and
adc
fisttpll
push
xchg
push
fdiv
push
test
mov
call
aaa
inc
adc
mov
rorl
adc
aaa
dec
jae
xchg
jo
nop
sbb
push
sbb
xor
lods
ss
pop
outsl
pop
roll
mov
add
xor
mov
xlat
dec
dec
bound
pop
jg
jo
pop
lret
movsl
lods
sbb
mov
pop
jg
mov
lcall
jae
lods
stos
lret
or
enter
jo
dec
insl
cli
fbld
or
fnstcw
xchg
test
clc
jo
cmp
xor
mov
ficompl
adc
push
imul
divb
jge
add
mov
ret
adcl
addr16
aam
int3
sahf
jg
dec
rolb
jb
pop
icebp
push
test
cmc
rolb
lods
stc
roll
scas
std
push
test
mov
and
mov
dec
pop
sti
loope
clc
sti
fwait
push
xchg
fs
sahf
wrmsr
xor
out
add
add
arpl
cmpsb
jp
push
pop
outsl
cwtd
cld
mov
arpl
sbb
jo
hlt
push
das
jp
addr16
xchg
sbb
mov
jl
stos
jmp
push
mov
fidivrl
imul
push
sbb
fldcw
xchg
fsubl
fists
xor
xchg
push
mov
cwtl
ja
imul
mov
or
xchg
push
add
dec
mov
int3
mov
add
cmpsl
aas
inc
jb
push
sbb
jnp
cli
mov
lret
mov
xlat
enter
orl
mov
lret
arpl
sub
mov
mov
xchg
adc
aas
addr16
pop
lcall
movsl
cmp
push
push
dec
inc
scas
mov
push
ficoms
pop
xchg
negl
push
in
stos
mov
jmp
mov
jb
in
mov
inc
aad
or
icebp
adc
rcll
int3
repz
insb
insb
dec
lahf
test
stos
les
cmpsb
pop
dec
push
mov
sarl
mov
scas
mov
cmp
pop
ret
mov
stc
je
add
and
xchg
fldenv
pop
int3
add
mov
out
shlb
stos
clts
mov
rcrb
mov
in
fidivl
pop
dec
arpl
rorl
scas
scas
out
cld
xor
cld
stos
mov
std
mov
popl
xor
adc
lea
xor
sahf
loope
sbb
test
xor
mov
inc
inc
pusha
sub
test
cmp
xorb
in
and
hlt
fcmovne
and
arpl
lea
or
test
call
les
push
mulb
sbb
sbb
pop
hlt
loope
scas
sbbl
mov
add
add
pop
sbb
sbb
push
push
aas
xor
ret
xchg
jp
inc
notb
inc
repz
cmpsb
out
movsb
aaa
pop
sbb
outsl
mov
ja
nop
mov
fimull
lods
addr16
push
or
dec
mov
rolb
mov
loop
jp
jbe
leave
arpl
aaa
pop
and
scas
push
cmp
cs
cmpsl
adc
add
mov
outsb
mov
icebp
subb
ds
leave
pop
ret
push
mov
test
adc
movsl
aaa
in
loope
ss
je
and
and
test
sub
or
test
dec
test
pop
scas
xchg
jne
lods
lds
or
repz
sub
adc
xorb
mov
int3
rcll
cmp
adc
outsl
lahf
test
mov
adc
adc
movups
adc
test
lahf
or
cmpsl
mov
mov
mov
push
popa
fdivs
ljmp
add
push
out
inc
test
add
test
push
sub
jae
jbe
fistpl
sbb
xchg
sub
xor
test
jnp
movsb
mov
sbb
and
test
or
jmp
pop
in
push
xor
sarb
inc
es
xor
fimuls
leave
shll
imul
sub
std
outsl
jecxz
and
jnp
pop
push
xor
xchg
sub
daa
pop
loop
mov
mov
adc
xchg
xchg
jae
pop
xchg
push
dec
aam
xchg
loope
pop
in
cli
insb
pop
repnz
pop
icebp
sbb
jl
push
pushf
xor
and
out
jnp
repnz
xchg
and
cmp
sbbb
imull
mov
lock
or
dec
xor
rolb
nop
adc
std
xchg
shrw
or
cmp
mov
mov
sbb
push
or
mov
mov
sub
push
std
dec
loope
out
shlb
dec
pop
lods
jg
imul
xchg
jnp
test
scas
jns
inc
or
call
idiv
inc
lea
loope
fimull
sbb
filds
mov
dec
mov
lret
adc
stc
sub
int3
xlat
sbb
lahf
pop
sbb
sub
jae
mov
lods
nop
in
fadd
cli
mov
jmp
cwtl
mov
xor
into
fwait
mov
in
rcrb
ret
inc
daa
andl
sbb
ljmp
xor
inc
dec
push
mov
ljmp
pop
dec
lods
xor
mull
xor
iret
pop
jle
inc
test
in
rcr
js
ds
push
ret
clc
in
rcll
pushf
jno
push
cmpsb
and
jae
jl
jp
fcompl
mov
inc
lcall
push
sahf
push
cmp
aas
loop
inc
cmp
in
out
xchg
bound
push
fs
jl
inc
mov
or
aad
jecxz
push
cltd
mov
inc
inc
sbbb
daa
fidivrs
mov
insl
jb
shr
push
jp
outsl
lock
mov
mov
cwtl
mov
es
cmp
pop
jp
and
hlt
sub
and
jge
adc
es
arpl
push
fstpt
xchg
sarl
and
icebp
pcmpeqb
mov
lcall
fimuls
jg
shl
jle
cs
adc
sub
cltd
mov
push
jle
adc
jg
mov
dec
shufps
daa
jb
cli
imul
cli
addr16
clc
lods
xchg
sbb
pop
mov
les
push
outsb
dec
lods
inc
push
popa
or
adc
adc
add
push
lock
fbstp
xor
aam
fsub
das
imul
xchg
scas
ljmp
push
adc
out
pop
lret
pop
cmp
into
lahf
mov
xchg
in
pop
lods
cmp
scas
mov
daa
rep
mov
pop
mov
mov
and
daa
jp
add
push
dec
jb
sbb
jp
sub
add
popa
sub
test
bound
mov
call
lods
fimuls
and
pop
stos
pop
fwait
insl
adc
pop
pop
addb
pushf
sar
pushf
rcl
xchg
sub
add
cwtl
arpl
pushf
jb
jno
mov
pop
es
call
ja
movsb
ljmp
outsl
adc
clc
push
push
mov
add
test
and
pop
mov
pop
pop
cmp
xchg
pop
aad
loopne
dec
mov
pop
addr16
pmuludq
cld
cmp
mov
les
dec
addl
sti
cmpsb
pop
push
dec
orl
cmp
inc
push
sbb
sbb
int3
mov
xchg
aad
sbb
pusha
xor
or
inc
pop
int3
addr16
mov
lods
mov
mov
fstl
out
add
fisubs
std
ljmp
mov
and
js
mov
test
cmpsb
inc
neg
pop
adc
out
dec
mov
pop
ret
mov
hlt
and
mov
mov
cmp
test
mov
push
sahf
call
fbld
les
call
push
mov
push
and
xchg
test
hlt
mov
jge
and
cmp
cmp
shlb
fisubl
add
xchg
xchg
in
popf
mov
mov
mov
mov
lahf
xlat
loope
aam
cmpsb
push
in
add
sti
push
ret
clc
scas
or
jge
addb
fldenv
jne
mov
mov
adc
or
push
jae
icebp
fdivl
and
in
pop
xchg
sub
nop
sti
ss
pop
cmc
cli
enter
loope
mov
mov
fisubrl
lods
dec
lock
sub
ret
roll
pop
mov
add
sti
and
je
push
lock
xchg
add
cmp
sbb
pop
pop
movsl
pop
sahf
fcmovnu
dec
xchg
mov
in
mov
data16
fcom
test
add
stc
ds
icebp
cltd
add
jnp
lods
gs
call
inc
imul
pop
mov
sbb
fsub
ss
stos
call
and
inc
shll
cmp
js
mov
aad
lahf
mov
mov
push
or
ds
ficoms
mov
add
mov
or
popa
and
sahf
je
inc
pop
inc
fucomip
xchg
pop
lods
xor
addb
cltd
aam
sub
pop
test
xor
cmpl
out
dec
lods
rcll
je
jo
scas
clc
lock
sub
pop
out
in
and
pusha
pop
adc
test
bound
xor
mov
or
lret
fcoml
add
sbb
das
sti
sbb
adc
xor
xchg
loope
push
lret
mov
imulb
push
sbb
stc
ds
insb
push
dec
arpl
sub
cwtl
add
inc
pop
gs
push
bound
imul
inc
scas
das
jle
aaa
pop
js
pop
dec
jb
lcall
dec
push
add
and
icebp
xchg
jae
xchg
mov
shrl
int3
xchg
add
push
sub
repnz
sbb
enter
jnp
xchg
or
cmp
int3
mov
jge
mov
fsubl
xchg
lret
pop
add
daa
jge
mov
sub
stc
add
insb
fnstcw
mov
xchg
add
adc
ja
push
dec
cmc
je
fwait
pushf
or
adc
cs
lret
ds
popf
mov
out
js
sbb
imul
jo
inc
inc
sub
lahf
cltd
xchg
and
and
inc
stos
mov
jne
test
shl
lahf
pop
ja
jno
enter
mov
divb
jae
out
dec
mov
sbb
enter
jl
imul
aam
xchg
lods
add
jne
aas
shll
jle
fnstsw
mov
push
aad
mov
clc
inc
test
sbb
and
xor
jnp
movsb
lret
loop
addl
ja
cmpsl
or
or
mov
or
xchg
outsl
lods
pop
sbb
lds
mov
je
fcoms
cmp
popf
pop
adc
dec
jae
push
repnz
jecxz
and
shl
sub
inc
push
adc
bound
insl
pop
pop
not
mov
inc
jno
lcall
loopne
dec
sbb
mov
dec
adcb
mov
ja
xchg
and
rclb
rorl
inc
cmp
data16
push
inc
cmpsb
push
cmp
shlb
push
push
cmp
adcb
mov
or
imul
mov
fsubl
mov
repnz
or
sbb
mov
cmp
inc
mov
sti
add
mov
pop
lds
ja
nop
fdivs
popa
std
and
dec
push
mov
aad
inc
dec
jl
or
adc
inc
hlt
sub
mov
pop
cmpsb
mov
pop
leave
jbe
je
mov
mov
push
pop
addr16
lds
aaa
jp
pop
loope
jns
adc
dec
shll
sarb
dec
lea
add
sbb
and
mov
lea
jo
pop
stos
xor
pop
fs
jecxz
cmp
rcr
loop
dec
xor
movsb
cs
es
mov
lds
sbb
mov
push
cwtl
sub
icebp
push
mov
mov
fadds
jmp
and
pop
xor
and
push
and
clc
xchg
mov
ljmp
adc
gs
inc
lods
dec
addl
xor
in
pop
pop
fcomip
add
mov
lods
mov
jl
mov
mov
addr16
fists
stc
jmp
in
fcomps
jae
and
pop
fiaddl
daa
cmp
test
xchg
jmp
mov
cld
mov
movsb
lret
ljmp
sub
mov
mov
pop
fisubl
test
out
sub
shl
sub
inc
je
push
xchg
jb
lret
add
jmp
sub
pushf
cmp
inc
cmp
ret
sub
icebp
inc
inc
cwtl
push
stos
and
rcrl
lret
sar
push
dec
cmp
and
xchg
inc
ss
jno
shll
icebp
xchg
std
mov
mov
dec
loop
cmp
inc
pop
insl
adc
mov
scas
scas
das
mov
or
mov
adc
pop
pusha
xor
dec
lcall
push
inc
movsl
dec
les
mov
loop
pop
jmp
push
jl
cltd
repz
xchg
les
sub
inc
sbb
xchg
add
cli
pop
mov
sbb
out
jo
mov
not
mov
sar
mov
clc
inc
ret
fldenv
push
cwtl
xchg
mov
cld
lods
imul
call
adc
decl
mov
xchg
push
arpl
mov
orb
fiadds
xchg
loop
das
and
xor
xchg
dec
lret
and
xchg
jno
stos
sarl
sub
adc
and
fcomps
mov
call
sbb
push
add
mov
std
mov
jb
outsb
js
ds
andl
bound
cmp
cmpb
sbb
jmp
and
out
mov
adc
jb
nop
sbb
int3
mov
cld
and
jecxz
popa
and
jno
xor
mov
and
jl
cld
sub
dec
dec
fsubs
cmpsb
jmp
repz
push
mov
test
pop
pop
fildl
sbb
push
outsb
jp
inc
xchg
xor
lods
fbld
xor
mov
movsl
stos
jg
notb
aas
xor
fwait
fwait
aaa
xchg
fstps
or
mov
sbb
cltd
pop
fldcw
mov
rorb
mov
xchg
inc
lret
ret
fwait
push
or
mov
movsb
and
lcall
mov
jae
mov
mov
pop
call
fs
loopne
jp
xlat
arpl
or
jecxz
scas
fdivrp
xlat
fsubrs
adc
mov
iret
ljmp
adc
jge
push
loopne
dec
add
dec
and
cmpsl
jo
fadd
dec
jb,pt
push
dec
add
stc
fsubs
xchg
lea
popa
je
mov
push
cmpl
dec
sti
xchg
insl
jmp
and
imul
fisubs
xchg
daa
and
lret
outsb
xchg
mov
lret
movsl
jl
sbb
sub
mov
inc
out
sub
movsl
inc
cli
pop
fucomi
cmpsl
movsl
in
push
insb
pop
inc
mov
dec
cs
gs
shrb
sarb
push
fidivl
inc
test
shr
or
push
test
mov
fcoml
data16
mov
data16
pop
cmp
dec
popa
jmp
outsb
dec
mov
popf
vminpd
pop
push
adc
cmc
loopne
jle
ret
push
cmc
add
ret
es
pop
sarb
add
jp
into
fisttps
jae
arpl
push
repnz
and
lcall
mov
pop
mov
xorb
shll
std
xchg
mov
dec
les
jmp
js
push
test
push
or
into
icebp
mov
mov
or
icebp
xchg
and
dec
dec
jl
imul
shlb
movsl
lds
stos
leave
xor
lods
sub
pop
sbbl
xchg
sbb
pusha
jecxz
data16
mov
in
mov
or
inc
dec
cs
cmc
pop
add
and
jmp
outsl
push
stc
es
imul
mov
push
add
adc
sti
xchg
nop
dec
inc
mov
mov
jl
arpl
sbb
or
pop
scas
test
or
and
xor
ljmp
sub
push
push
shll
lods
cli
xor
pop
imul
pop
jmp
xor
mov
pop
pushf
xlat
mov
xchg
push
repnz
push
fs
out
mov
mov
inc
outsl
mov
in
mov
pushaw
sub
pmulhw
jle
jge
outsb
push
mov
xchg
int3
aam
mov
add
inc
dec
gs
push
fs
shrl
sub
add
icebp
or
jecxz
cli
loope
adc
lods
sbb
mov
insb
sbb
sbb
dec
and
xchg
das
scas
daa
xchg
pop
inc
xchg
sbb
lods
jo
xor
rorb
sub
jmp
xor
xchg
clc
push
loopne
mov
xchg
jp
mov
mov
mov
push
sub
add
or
or
fstl
mov
int3
std
js
aam
xchg
jnp
mov
sbb
cwtl
inc
icebp
imul
push
not
dec
shlb
pop
std
jae
xchg
inc
dec
aad
stos
xorb
push
repz
pop
popa
popf
into
push
sub
fiadds
insb
scas
push
xor
push
cwtl
mul
jl
pop
cmpsl
in
negb
fs
sahf
negl
ljmp
adc
lock
sub
data16
mov
xchg
mov
push
mov
mov
inc
pusha
pop
sbb
sbb
pop
cmp
aaa
xchg
ret
dec
or
test
mov
jp
rcr
sub
loopne
push
dec
add
dec
adc
push
sbb
fcomps
pop
and
sar
fs
lds
test
sbb
mov
xchg
mov
adc
enter
sahf
subb
aam
sub
insl
sbb
aam
jno
bound
jl
xor
xor
mov
rorb
push
dec
pop
icebp
ds
mov
dec
or
cmc
or
push
and
add
push
test
mov
ja
lock
sub
or
insl
std
pop
idivb
fs
aad
or
cmp
rclb
imul
aad
aad
pop
sahf
adc
data16
insl
inc
outsb
sub
jb
push
xor
repz
ret
ret
out
sub
iret
mov
fisttpl
popf
and
xchg
rcr
aaa
sahf
fisubrl
jg
cmp
jb
jecxz
stc
data16
mov
mov
jb
pop
das
enter
or
adc
adc
push
fnstenv
cmpsb
testl
int
cmpl
xchg
pop
jge
arpl
jb
aaa
or
pop
fbstp
pop
pop
mov
cmp
mov
test
mov
mov
gs
imul
fucomi
mov
mov
mov
sub
inc
mov
sub
cmpsw
out
int3
daa
or
test
lret
ud1
sbb
movsb
lcall
inc
mov
push
pop
in
push
lret
fninit
cmp
pusha
or
movsl
aam
movb
outsb
pop
push
sbb
outsl
xchg
cmpsb
lods
mov
push
in
ret
xorl
mov
bound
andb
mov
mov
mov
lret
push
sbb
stc
jns
mov
cmp
jle
dec
mov
cmc
dec
or
push
jns
cmpl
jb
inc
pop
inc
jl
mov
andb
pop
imul
je
adc
arpl
aas
inc
ds
sub
test
loopne
mov
mov
insb
and
mov
dec
rcll
or
push
jge
lret
xchg
out
mov
call
push
push
repz
mov
outsb
les
mov
jp
dec
xchg
jae
xchg
adc
leave
pushf
mov
ja
mov
mov
das
xchg
cmp
push
pop
movsb
inc
daa
scas
mov
jl
adc
push
movsb
icebp
lahf
inc
sub
das
cmp
mov
and
stos
xor
int
in
sbb
dec
pop
mov
rcl
test
lods
mov
shll
pushl
mov
adc
int3
adc
lock
popa
pusha
hlt
adc
push
leave
jo
cli
outsl
rcr
mov
rcll
stos
pop
sub
and
out
lods
add
add
inc
sbb
and
mov
pop
sub
pop
inc
out
dec
or
fnstcw
xchg
cmp
std
stos
and
sub
lds
add
jo
add
inc
insb
adc
cmp
mov
popa
cmpsl
loopne
push
xchg
pop
flds
xchg
add
fidivl
arpl
cmpsb
lret
enter
xor
add
pusha
or
jne
test
jbe
jae
ss
scas
jo
fbld
fcoms
insb
xchg
js
add
pop
sub
xlat
data16
jp
lcall
push
pop
ret
xchg
add
shrl
fisttpl
adc
mov
sbb
les
mov
lcall
sahf
xchg
and
pop
mov
sub
xor
push
ja
cltd
mov
nop
cmp
ljmp
mov
sysret
or
pop
in
cmp
xchg
sbb
stc
jge
mov
cmpsl
fstpt
clc
inc
cmp
js
xchg
push
xchg
push
movsb
sti
int
test
pop
mov
inc
imul
stos
call
add
pop
pop
pxor
inc
sub
lods
les
add
ret
xchg
cmp
mov
stos
mov
cld
jnp
mov
xor
inc
jb
jne
xchg
lahf
das
add
inc
movsl
sub
jl
scas
sbb
push
sbb
std
fistl
push
icebp
aas
lret
testb
divb
adc
rcrb
imul
inc
mov
pop
push
call
inc
push
les
pop
scas
or
dec
iret
push
mov
lret
adc
in
jmp
inc
shlb
mov
xor
andb
iret
and
lods
imul
sahf
sahf
lods
adc
call
inc
inc
adc
push
imul
aas
mov
test
xchg
mov
cltd
dec
sub
xor
push
and
push
mov
std
push
add
xorl
fstp
inc
dec
pop
xchg
pushf
fstps
mov
stos
fiadds
push
fdivrs
xor
in
dec
movsl
es
ror
gs
movsl
mov
mov
push
dec
push
shll
lods
pop
and
push
push
mov
std
jp
popa
lds
frstor
rcl
sbb
imul
push
pop
mov
adc
sbb
fucom
inc
lea
cmpsl
movsb
inc
or
cmp
movsl
push
dec
enter
lret
inc
pop
outsb
jo
ds
adc
xor
jo
clc
out
in
and
pop
lea
fmull
js
cld
xchg
adc
mov
adc
xchg
push
not
movsl
dec
jecxz
inc
out
imul
push
jne
test
fbld
scas
rol
fstp
pushl
and
roll
inc
int3
loop
mov
or
fildll
cmp
inc
aas
ja
inc
mov
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
and
push
dec
pop
addl
sahf
dec
outsl
sbb
inc
or
sarl
pop
cmpsb
je
mov
mov
scas
loope
inc
or
mov
and
mov
in
test
jns
fdivp
lods
xorl
jnp
pop
mov
shll
pop
in
lock
movsl
dec
test
shlb
jnp
fwait
or
pop
adc
loop
daa
outsb
xchg
lcall
mov
cmpsl
jge
xchg
loopne
mov
rolb
jmp
or
sbb
arpl
sbb
aam
push
ja
test
fwait
hlt
into
mov
adc
pop
or
in
fimuls
mov
lds
test
or
fxch
push
mov
cmp
cmp
push
pop
cmpsl
mov
popa
xor
inc
cltd
cwtl
shrl
add
add
mov
push
jg
cmp
jne
scas
sub
pop
cmp
and
pop
addl
test
mov
mov
pop
cmp
mov
jns
clc
cmp
mov
mov
fwait
mov
stos
testb
inc
lcall
sub
xchg
xchg
clc
pop
loop
and
shrb
icebp
test
adc
xchg
jl
jns
push
mov
cmpsb
add
repz
add
and
fistl
outsl
in
pop
sbb
mov
mov
movsb
adc
push
lods
add
mov
test
xchg
add
jo
mov
mov
lock
out
arpl
in
jae
cmp
jecxz
sbb
cmp
cli
inc
mov
pop
xor
pusha
in
shrl
stc
imul
mov
enter
stos
scas
mov
sbbb
xchg
pop
push
imul
addl
les
jb
cli
xchg
lea
out
stos
cmp
subb
and
movl
hlt
in
cmp
push
adc
dec
lods
lds
xchg
cmp
xchg
test
out
sbb
ret
mov
out
inc
sub
mov
xchg
imul
insb
pushf
mov
sarb
xor
cli
sub
or
aam
movsb
and
xchg
sub
test
outsl
stc
add
into
fdivl
push
inc
decb
orb
fs
fldl
dec
out
orl
cmc
mov
mov
mov
daa
out
jl
pop
mov
xchg
scas
sarl
in
dec
hlt
and
iret
loopne
mov
mov
arpl
or
jle
jl
pop
je
lds
inc
xchg
in
inc
bound
stc
push
pop
dec
unpckhps
das
pop
cltd
jge
dec
xor
jp
popa
popf
mov
loop
xchg
push
pusha
daa
fidivrl
mov
pushf
push
sub
mov
jo
shll
and
sti
idiv
or
jecxz
in
push
cld
mov
inc
fiadds
sti
orl
mov
fs
fistl
push
pop
or
sub
mov
add
xchg
data16
js
bound
or
sbb
add
mov
sbb
sahf
dec
test
loope
add
icebp
inc
pop
dec
push
sbb
push
jae
sub
sbb
jns
lds
mov
movsb
stc
loop
cmp
lods
test
or
and
push
mov
mov
aam
fwait
mov
jge
push
rcrb
mov
insl
por
jae
mov
hlt
xchg
pop
test
aas
jnp
mov
xchg
jg
push
aam
jge
cmp
mov
roll
cmp
lds
addb
and
movsb
int3
imul
imull
mov
scas
sbb
cmp
mov
aaa
fstpt
mov
dec
pop
mov
xor
out
sub
mov
inc
mov
or
cmp
sub
mov
push
mov
jmp
inc
ja
clc
jge
pop
cmp
ret
into
pop
and
push
shl
mov
fdivs
xor
ficoms
push
adc
ret
mov
lahf
ja
mov
ret
dec
std
jnp
and
adc
push
and
sub
bound
push
stos
arpl
mov
xchg
scas
rolb
xor
mov
sub
fs
mov
scas
stc
mov
in
sub
test
pusha
jle
inc
cmp
xorb
shr
mov
gs
out
cmp
cld
cs
mov
mov
inc
sub
ficomps
divl
push
int3
sub
adc
std
push
adc
data16
xchg
insb
int
mov
sub
daa
call
pop
lahf
pop
add
mov
mov
mov
aad
mov
popf
jge
sbb
sbb
bound
pop
push
out
mov
xor
movsl
push
arpl
and
ss
sbb
cs
mov
out
in
cmp
jns
mov
add
adc
outsb
mov
mov
ficomps
pop
cltd
add
nop
pop
inc
or
jge
or
sarb
mov
outsl
fcompl
jmp
pop
pop
sahf
add
jo
jno
jo
cmp
inc
sub
into
mov
push
repnz
sub
sbb
mov
lea
xchg
sub
scas
or
les
daa
mov
xchg
mov
mov
mov
out
movsb
iret
repnz
xor
sarb
subl
jge
dec
push
mulb
cs
add
test
arpl
repz
int3
push
out
in
nop
push
dec
loope
mov
mov
and
imul
loopne
test
and
icebp
imul
sub
mov
pusha
mov
jno
cmpsl
pop
sti
ficomps
ja
out
inc
inc
and
arpl
xor
or
or
cltd
andl
cs
mov
cmp
and
mov
sbbl
aaa
lret
leave
popa
into
lods
xchg
imul
add
popa
popl
mov
cwtl
imul
fdivs
out
arpl
xchg
xchg
iret
push
push
lock
gs
add
or
fwait
mov
dec
ss
cvtps2pd
icebp
xlat
cvtps2pd
xchg
movsl
dec
lret
fs
inc
pop
in
andl
push
aas
out
inc
int3
fisttps
inc
push
arpl
and
push
jno
jle
ja
mov
std
push
xchg
sbb
aad
jo
xchg
sahf
jb
push
inc
dec
cmp
mov
aad
dec
dec
sub
jg
mov
dec
je
mov
xchg
pop
call
xchg
push
fcomps
mov
push
mov
adc
mov
fwait
movsl
jl
and
outsb
mov
add
iret
jle
inc
lahf
dec
out
das
les
pop
mov
inc
adc
scas
loopne
sti
jecxz
daa
xchg
in
cli
scas
add
repz
addb
add
cmpsl
jecxz
or
and
push
add
ja
sbb
js
aaa
mov
fcmovne
mov
push
shl
xor
repnz
sahf
mov
flds
dec
sbb
inc
sbb
adcb
xor
mov
jp
lcall
rorb
cltd
fs
mov
out
mov
test
scas
outsl
add
xchg
push
cmc
arpl
ficoml
push
arpl
inc
test
sub
stos
sbb
jb
loopne
outsl
js
cmpsl
mov
stc
sub
cmp
rcl
jp
out
stos
testb
lret
popf
testb
adc
pop
js,pt
in
pop
lcall
repz
repz
iret
fisubl
pop
addr16
push
jno
nop
dec
xchg
dec
ficoms
mov
cmp
fwait
jle
bound
dec
mov
push
call
mov
adc
outsb
and
shr
loopne
sbb
enter
jo
sti
jle
mov
mov
fadd
lods
cmp
add
sbb
icebp
aad
mov
push
mov
fldt
sbb
out
mov
cmp
hlt
xchg
cli
shll
out
repnz
in
dec
cmp
pushf
test
cwtl
xchg
inc
insl
fs
testb
rcrl
push
fs
xor
cmpsl
loope
add
cmp
popa
dec
lds
fwait
ret
into
fcomp
add
or
mov
add
and
sub
fdivr
lcall
ds
mov
mov
stos
clc
pop
shll
iret
jb
xchg
inc
cmp
adc
test
pop
cmc
push
in
or
mov
mov
ret
and
ss
jb
test
adc
pop
sbb
idivl
add
push
jp
dec
shll
popf
or
pop
aaa
adc
add
ljmp
ret
push
add
insl
call
mov
pop
push
xor
aad
aad
pop
icebp
stc
sbbb
pusha
fiadds
jno
push
jl
xchg
sub
jecxz
pop
add
sbb
rcll
shlb
in
and
mov
jle
xor
or
decl
and
and
loopne
stos
shl
xor
out
nop
subb
xchg
adc
and
xor
out
scas
lods
in
adc
ret
mov
push
daa
cmp
lods
rep
inc
inc
enter
jge
mov
mov
outsl
sbb
sahf
jae
call
jo
or
mov
adc
pop
push
mov
leave
xor
push
or
and
out
sub
subl
dec
jb
ficompl
movsl
leave
jecxz
loopne
adc
push
cmpsl
out
hlt
cli
dec
addr16
push
and
add
jno
dec
ficompl
or
mov
mov
inc
pop
mov
idivl
mov
inc
rorl
sbb
mov
ret
add
jl
in
push
out
test
fisubrl
fs
dec
cmp
and
rcl
adc
mov
shlb
pop
xchg
jbe
js
cmp
daa
or
enter
xchg
mov
inc
xchg
movsb
adc
lods
sbbl
ret
fwait
sub
in
mov
test
pop
and
sub
push
scas
fsubs
mov
xchg
rclb
or
shlb
sarb
ja
into
ficoml
stc
scas
loope
sbb
aaa
mov
jle
sbb
dec
inc
sbb
jns
pusha
adc
dec
shrb
sbb
push
rolb
xlat
sub
jp
js
jne
ret
xchg
mov
ljmp
andl
insb
push
lret
rcrb
cmp
out
add
add
mov
test
addl
ljmp
ljmp
lret
outsl
call
push
fnsave
sbb
push
inc
nop
insl
loop
push
out
mov
sti
test
loopne
lret
sub
les
das
pushf
inc
pop
out
push
cs
aas
push
push
ret
or
inc
add
adc
adc
xor
push
lods
push
sarl
pushf
cmpsl
pop
cli
or
mov
dec
xor
es
ja
les
sbb
testl
cmc
and
jle
inc
inc
in
jbe
cltd
dec
ficoms
jo
rcr
lea
or
sbb
cmp
lea
jnp
push
test
cmp
and
xor
das
pop
mul
mov
outsb
xor
inc
mov
rorl
orl
push
addr16
jnp
jne
shlb
mov
mov
and
fld
in
jne
push
imul
pop
fildll
lds
or
or
bound
and
or
xchg
pop
imul
sub
test
xchg
jnp
adc
jg
stos
les
mov
test
scas
repnz
fcmove
sbb
mov
dec
fdivrl
push
inc
add
shr
cs
mov
jg
cmp
jns
cli
leave
push
shl
ret
shr
mov
jecxz
sbb
xchg
cld
fcmovu
std
push
jecxz
dec
shrl
mov
jmp
add
mov
add
mov
rorl
test
lds
mov
jl
push
adc
rcrl
or
mov
add
add
xchg
jb
and
xchg
inc
rcl
mov
sub
int
mov
cmp
fsts
jl
jnp
cmpb
insb
xor
lea
ja
sahf
lock
rcl
cmpsb
enter
repnz
cmp
clc
push
dec
repnz
mov
mov
xor
fisttpl
jg
sti
es
scas
mov
movsl
lcall
add
frndint
push
clc
pop
fbstp
aad
pop
xlat
adc
loopne
sti
rcrl
pop
shlb
dec
dec
test
mov
cli
leave
dec
xlat
fisttps
push
mov
ret
and
mov
jecxz,pt
mov
in
call
push
jl
push
std
into
imul
fists
sti
and
or
lea
dec
popa
popa
ret
cwtl
pop
shll
adc
testb
mov
test
xchg
xor
mov
fwait
push
jge
sub
in
scas
push
mov
rorl
pop
mov
fsubrs
mov
xlat
js
ret
mov
dec
or
and
stos
aaa
sbbb
cmpsl
cld
xor
add
popf
ret
insl
mov
test
pop
aaa
mov
sub
data16
data16
jmp
sti
push
xchg
cmp
adc
pop
cmpsl
mov
or
lock
push
jne
aas
les
scas
jg
rcl
daa
jg
in
add
mov
and
mov
cmp
mov
xor
inc
xchg
jg
or
adc
adc
xchg
leave
sbb
cwtl
pop
js
inc
xor
aaa
mov
or
lcall
push
cli
repz
loop
sbb
sub
mov
dec
ret
out
ss
push
aas
ja
mov
push
jae
pop
push
aas
mov
imul
mov
dec
jno
int3
or
lock
dec
int3
cmp
je
jo
je
repnz
ja
cltd
jae
sbb
sub
and
mov
mov
lcall
pop
jp
mul
popf
fs
sbb
rorb
push
cmc
aam
push
test
push
push
mov
and
cmp
jge
and
or
call
lock
xor
and
fsubs
sbb
mov
shlb
cmp
les
or
jns
lock
adc
or
cwtl
sbb
push
add
fisttpll
mov
rcrb
insl
out
mov
and
or
adc
or
xchg
adc
cli
add
fimull
dec
negl
xchg
fcoml
xlat
mov
int
int
cwtl
mov
icebp
js
lods
sbb
outsb
jno
ss
sbb
je
mov
add
int3
jne
shll
add
rorl
mov
loopne
cmpl
ficoml
in
insb
xor
cmp
shr
and
stos
sbb
and
xchg
sbbb
sbb
cmpsb
sub
pop
pop
sti
daa
xchg
adc
stos
mov
mov
pop
cmp
ja
fnstcw
shrl
lea
std
enter
cltd
shr
lret
outsl
jae
int
fcmovne
inc
sub
popf
sub
int
xor
jmp
jbe
bound
testl
sbb
adc
mov
lcall
ret
mov
push
inc
sub
lcall
jmp
jb
outsb
in
imul
adc
out
jge
inc
xchg
cli
dec
movb
test
repnz
loop
or
cmpsl
fnsave
and
mov
pushf
pop
je
pop
fldt
xor
dec
sub
dec
das
repz
xchg
xchg
dec
add
or
scas
pop
mov
xor
fs
jmp
sbb
cli
mov
pop
add
add
pop
push
ljmp
mov
jp
enter
jns
testl
or
mov
or
push
add
les
lock
adc
jae
xchg
pushf
cmpb
or
stos
xchg
sarl
sub
loope
cmp
xchg
lret
dec
sbb
inc
inc
cmpsl
repnz
xchg
dec
pop
add
mov
js
mov
xchg
outsb
std
nop
mov
shrb
jmp
test
adc
mov
jmp
xchg
cli
jg
mov
hlt
dec
lock
adc
jp
fmuls
cmpsb
mov
in
and
or
push
cmc
rcrl
xchg
push
scas
insb
pop
push
adc
lods
iret
push
mov
or
scas
hlt
fidivs
cmp
test
icebp
sbb
movsb
mov
leave
hlt
sbb
test
ret
adc
lods
mov
popa
mov
add
stos
jg
setle
cmp
xchg
ljmp
clc
rol
dec
sub
ret
add
mov
aam
int
outsb
add
jno
jne
sahf
pop
cmp
push
mov
adc
pop
and
mov
push
cmp
test
rorb
arpl
xor
sub
ja
testb
cmp
loop
mov
jp
addr16
fisttps
int3
pop
cli
inc
nop
mov
xchg
shlb
insl
lea
scas
xchg
and
push
hlt
fidivrl
dec
jae
sbb
xchg
leave
pop
icebp
imul
and
dec
xor
mov
ljmp
adc
jle
ljmp
ja
cltd
xchg
cmp
lods
andl
add
xchg
mov
or
sahf
aaa
dec
aaa
loop
dec
jo
mov
inc
ja
mov
xlat
icebp
xor
sbb
aam
add
mov
mov
outsl
call
jb
inc
in
pop
in
sti
out
xchg
sub
cwtl
std
addl
and
cmp
in
out
xor
push
mov
dec
out
xchg
imul
xchg
test
imull
jne
mov
aaa
push
pop
js
subb
lods
aad
push
pop
mov
mov
inc
dec
mov
ds
pop
cmp
repz
js
sbb
dec
jle
push
xorb
jecxz
jbe
dec
mov
in
cmpsb
and
fldcw
out
xlat
shll
xor
lods
jp
sbb
add
test
xchg
pusha
pop
and
push
or
cli
int3
clc
jmp
in
fldl
push
mov
fadds
lcall
into
out
inc
and
loopne
sbb
mov
inc
cmpsl
inc
lahf
mov
xor
adc
mov
cmpsb
mov
adc
push
stos
insl
mov
cmc
jg
inc
fwait
mov
in
xor
nop
inc
push
mov
cmp
push
add
xchg
sub
inc
outsl
cli
sbb
sahf
cltd
or
mov
add
add
and
dec
jle
std
cmp
jno,pt
cmpl
jecxz
dec
ret
cs
and
and
adc
sub
cmp
iret
dec
dec
jo
jg
push
bound
dec
mov
je
xchg
fmull
icebp
xor
into
or
movsl
cmp
xchg
inc
aas
shll
sti
into
inc
fldcw
xchg
bnd
jmp
push
push
dec
lods
fs
cwtl
cld
cmc
sbb
push
inc
cmp
movsl
mov
data16
outsb
aam
cmp
jae
movsb
xchg
movsl
inc
mov
flds
mov
pop
hlt
xlat
in
mov
jg
adc
out
out
inc
push
or
and
jmp
dec
addb
repz
adc
sub
jb
fs
inc
into
ror
jmp
mov
and
sbbb
cmc
pusha
nop
mov
cwtl
pop
xchg
push
pop
mov
push
inc
mov
and
pop
cli
movsl
cwtl
fisubrl
call
cmp
mov
xchg
or
sarl
insl
pusha
repz
sub
mov
xchg
inc
pop
pop
call
inc
fdivl
mov
xchg
insl
mov
aad
sub
popf
pop
ds
cmp
gs
repnz
xchg
into
jo
or
pop
add
dec
sub
jno
movsl
jae
cmp
cmpsb
in
mov
and
inc
push
test
sbb
test
cmp
pusha
mov
mov
cmp
jne
push
jae
adc
pop
ret
and
loope
pop
push
cmc
ret
and
std
inc
lock
into
cs
cli
pop
mov
lret
pop
push
jns
cmp
jp
mov
hlt
cmp
daa
and
xor
cmpsl
movl
or
push
inc
fsubrl
push
hlt
cmp
fwait
aas
leave
cli
mov
ret
push
mov
out
cld
cld
mov
sbb
push
mov
jge
dec
xchg
sub
cmp
push
add
ss
test
insb
add
das
pop
ds
into
jl
lret
mov
bswap
dec
mov
xorl
jae
ds
fs
aam
lcall
cmp
push
addl
pop
iret
or
pop
add
les
call
jmp
dec
notb
cmpsb
xchg
sub
sub
push
iret
mov
xor
enter
sub
adc
or
test
mov
cmp
push
jle
std
mov
jne
lods
cmpsl
pop
lret
inc
imul
into
push
ja
out
lock
add
enter
mov
mull
jb
cmpsb
icebp
loopne
cs
dec
mov
std
std
clc
bound
cld
mov
xor
stos
outsl
nop
lret
cmp
xchg
inc
pop
adc
push
sahf
lcall
xor
xchg
cmpsb
or
gs
fisttps
ss
xor
or
stos
jno
sbb
or
xor
ss
shll
dec
lods
pop
loopne
aas
sbb
mov
mov
or
pop
adc
cmpps
add
cli
mov
or
out
push
scas
push
fbld
call
ljmp
imul
xor
ja
pushf
scas
int3
in
dec
test
insl
cmpsl
add
push
adc
loope
lods
add
xchg
rorl
inc
in
sub
add
dec
mov
loopne
adc
leave
cmp
dec
in
mov
idiv
jg
out
push
fs
mov
dec
or
je
out
into
sub
mov
insl
scas
mov
in
xchg
sbb
dec
movsl
mov
cs
inc
lcall
aas
cmp
pop
inc
jb
mov
mov
or
jae
ficomps
inc
pop
daa
test
add
cmpsb
cltd
mov
movups
jo
cs
jp
pop
repnz
mov
jae
out
icebp
je
mov
in
mov
xchg
test
push
lds
scas
or
loop
jo
sbb
cli
sbb
icebp
ljmp
mov
sbb
mov
jge
pop
pop
and
adc
rcll
add
dec
inc
and
mov
shlb
and
or
push
push
inc
pop
gs
stc
and
icebp
in
sbb
jle
push
jo
clc
pop
dec
add
and
add
hlt
pusha
cmp
scas
subb
xchg
popf
rolb
bnd
fmul
loopne
add
push
push
popf
outsb
lods
jo
pop
xor
adc
jo
push
jns
push
test
sbb
jae
jecxz
sbb
cmp
movups
aas
xorl
imulb
inc
insb
push
or
fdivrp
stos
out
add
outsb
movsl
and
scas
shl
stc
ds
cmpsl
call
mov
shll
test
inc
inc
ret
mov
popl
insl
mov
jno
adc
addr16
lods
dec
fimuls
lods
sbb
out
mov
xchg
pop
pop
aad
mov
mov
aas
stos
cmp
sbb
test
cli
mov
insl
gs
cmpsl
push
jbe
outsl
inc
pop
stos
adc
lret
ss
mov
push
mov
jno
push
mov
add
outsb
sub
std
cmp
pop
clc
mov
mov
inc
xchg
rcr
jl
jle
or
test
mov
push
ss
cs
mov
in
xchg
mov
pop
pop
inc
nop
enter
sub
push
adc
loope
lods
inc
cmp
and
sub
pop
imul
push
push
movsb
push
fucomip
xchg
mov
aam
pop
add
outsb
imul
loopne
out
pop
inc
cld
lahf
and
adc
fidivrs
rolb
into
in
xchg
lfs
dec
xor
jb
pop
nop
mov
lcall
dec
mov
and
and
imul
mov
mov
push
cmpsl
jg
jle
mov
arpl
add
loopne
adc
add
call
shrb
js
push
insb
out
xlat
mov
fbld
and
mov
movsb
lock
adc
dec
lret
out
les
cmpsl
int
xor
int3
push
dec
sbb
adc
popa
jmp
cwtl
mov
and
std
jge
jl
and
cmp
adc
rep
cmpxchg
mov
push
xor
mov
mov
jecxz
nop
ret
jmp
mov
or
inc
jns
adc
test
dec
js
iret
lods
cmp
mov
add
xor
addr16
test
cmp
rorb
insl
rcll
fcmovbe
pop
dec
xchg
cmp
add
xor
pop
dec
pop
nop
xchg
sub
jg
scas
out
int3
and
cmpsl
inc
es
mov
aam
stos
sahf
es
out
inc
test
inc
data16
or
xor
jb
mov
in
movsb
movsb
imul
mulb
xchg
stos
xor
enter
data16
push
push
push
iret
push
or
out
sub
int
insl
popf
mov
in
cmp
xchg
pop
shl
cmp
xchg
xor
mov
and
and
xchg
mov
dec
adc
mov
insl
sarb
pop
dec
add
push
loope
rcr
fs
add
pop
cs
sub
xor
jg,pt
xchg
fcompl
sbb
cmc
mov
imul
xchg
push
xlat
sbb
or
jne
push
push
dec
lret
adc
frstor
shl
fwait
mov
xchg
jge
mul
lods
push
sub
sub
sar
pop
cwtl
dec
cmp
sbb
out
inc
xor
jg
lret
lahf
cmp
ficomps
ljmp
add
jb
aad
cmp
xchg
lock
mov
pop
shlb
gs
filds
sub
mov
push
pop
or
sub
je
inc
mov
test
adc
xor
les
xor
and
mov
cld
mov
loope
cwtl
ficoml
in
mov
das
faddl
mov
xlat
push
jmp
dec
jne
inc
push
cld
mov
clc
dec
or
sub
divb
dec
sbb
mov
inc
shlb
inc
adc
sub
rol
shll
xchg
fwait
pusha
insb
adc
outsb
mov
in
cs
xor
sarb
imulb
mov
cmc
ljmp
jbe
mov
sub
cmp
rcrb
push
and
out
jno
xchg
add
add
ja
xor
jo
mov
cmp
lahf
in
cmpsl
insb
sbb
add
cmpsb
jno
jle
cs
dec
clc
inc
push
mov
lea
mov
xchg
iret
mov
mov
xchg
push
repz
scas
mov
pop
cmp
leave
jae
stos
fildl
cli
in
popa
ja
xchg
call
stos
cmp
xchg
icebp
imul
call
fs
and
jecxz
inc
add
js
sahf
test
push
ret
inc
mov
xchg
cs
shll
test
jle
push
adc
cmpsb
out
idiv
dec
scas
mov
fildl
mov
inc
ret
lret
call
inc
imul
and
sub
push
ret
les
and
add
push
imul
jmp
sbb
mov
pop
ret
dec
in
sbb
dec
enter
fnstenv
mov
fwait
sub
filds
jbe
iret
iret
movsb
mov
movsb
xor
std
or
negl
fwait
ja
test
fs
jb
or
stc
imul
jno
add
pushf
int3
pop
sub
push
lock
outsl
mov
iret
push
mov
pop
sub
sub
dec
mov
into
rorl
add
test
push
mov
sub
shll
jmp
repnz
mov
push
xchg
movsl
cltd
stc
mov
or
lods
jne
mov
mov
adc
mov
dec
mov
push
or
iret
shl
lods
push
stos
push
sbb
stc
xor
nop
ja
pop
pop
into
in
aad
push
std
cmp
mov
mov
sub
and
add
outsb
push
cltd
lret
loop
or
fs
push
push
dec
pop
loope
xor
jae
xchg
mov
xlat
mov
clc
ret
jg,pt
mov
mov
pusha
or
cltd
rclb
inc
shrb
out
mov
inc
lret
movsl
pop
ds
push
mov
jg
xor
mov
fadd
and
adc
dec
mov
loop
aam
adc
sahf
mov
dec
ja
jp
shl
jp
arpl
das
dec
dec
idivl
sub
in
sbb
cmp
mov
ret
shl
pusha
outsb
imul
jbe,pn
mov
cmp
add
fldt
fdivrl
mov
sbb
lds
jbe
xor
xor
xchg
out
fnstenv
shll
imul
movsl
push
xchg
inc
pushf
mov
nop
jge
xchg
xchg
dec
push
cmp
stos
jmp
cmp
inc
mov
rcr
out
cli
push
xchg
mov
cwtl
sti
andb
fwait
pop
data16
es
test
cltd
mov
mov
movsb
push
push
push
jl
add
mov
aam
jge
stc
xchg
out
add
scas
and
loop
inc
push
push
fmull
testl
outsb
lock
fisttps
pop
ljmp
adc
test
pop
je
cmp
sub
xor
sbb
dec
std
mov
cmpsb
inc
lock
idivb
sub
cmp
sbb
cmp
push
inc
mov
adc
aam
fwait
pushf
mov
std
add
in
xchg
and
inc
adc
ret
sub
test
jmp
fwait
sbb
out
ret
cmp
push
xchg
and
popf
cmc
sub
inc
xor
lcall
pop
mov
inc
push
hlt
or
test
mov
les
and
stos
test
loop
test
mov
cmp
sahf
bound
push
jnp
out
test
jg
enter
sub
shlb
mov
sahf
push
push
sub
sahf
mov
or
repz
add
jle
icebp
dec
mov
jmp
popl
cmp
insl
xchg
enter
mov
call
insl
xor
sub
mov
dec
mov
mov
pop
pop
pushf
add
clc
inc
lcall
loopne
in
jo
pop
lea
add
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
jle
cmp
cmp
addl
xchg
xchg
sti
pop
enter
test
imul
push
imul
cmp
mov
mov
jne
out
cmp
jae
push
lret
lods
push
sbb
inc
xchg
pushl
cmp
xor
xor
cld
popf
mov
in
jns
rolb
ljmp
sub
shr
dec
jnp
mov
lods
xchg
data16
ja
test
jo
and
adc
jbe
pop
je
scas
clc
loop
repnz
test
xor
das
adc
pop
mov
or
data16
sub
push
fs
cld
lret
imul
cmovle
xchg
loop
jnp
push
or
popf
mov
icebp
sbb
jle
imul
sti
jge
adc
stos
adc
mov
insb
das
add
ret
aad
rorl
jecxz
adc
inc
jp
dec
mov
out
sbb
in
cld
rcrl
sbb
mov
cli
lret
sbb
popa
mov
dec
or
aaa
xor
mov
or
inc
outsb
outsl
dec
and
lock
cmp
cmp
and
loop
jl
and
mov
sbb
ja
repz
push
sub
pop
cmp
inc
fldt
aaa
push
and
and
shlb
inc
leave
cmp
js
inc
pop
cld
dec
es
add
and
imul
mov
xor
ljmp
lcall
adcl
adc
arpl
and
or
jae
lea
mov
lods
mulps
jae
pop
lock
lock
mov
dec
sub
sbb
sub
jnp
decl
bound
cmp
fisttpl
xchg
cmpsb
cli
xchg
push
fsubrl
imull
sti
inc
scas
sahf
daa
and
insb
test
in
test
cs
imull
inc
mov
subl
mov
jle
lods
push
xor
mov
into
xchg
pop
xchg
movsl
push
in
mov
es
cmp
or
cmp
adc
add
pop
inc
shlb
sahf
je
or
adc
mov
add
cmp
sbb
sub
test
jl
pop
stos
inc
adcl
sbb
lock
mov
imul
js
sbb
inc
pop
mov
fisttps
dec
dec
add
pop
in
fcom
adc
ja
lock
xor
scas
pushf
xchg
icebp
es
xchg
xchg
adc
sbbl
js
adc
aaa
stos
push
sahf
push
add
xchg
add
out
repz
sarl
sbb
or
cmp
jb
mov
ja
lcall
jmp
pop
and
testl
icebp
xchg
mov
subl
je
int3
dec
outsl
sub
dec
aas
out
dec
arpl
jp
and
dec
or
dec
xor
in
dec
sahf
cld
or
lcall
dec
or
mov
aaa
sub
xchg
jb
aas
in
jp
mov
jg
mov
xchg
inc
pop
jbe
jns
shlb
xchg
adc
scas
inc
bound
push
cmp
jge
std
testb
sarb
cwtl
das
ror
and
add
nop
jnp
push
adc
pop
push
cvtps2pi
push
mov
fidivrs
clc
ljmp
aad
push
dec
popf
gs
in
xor
xchg
out
fimuls
scas
pop
mov
outsl
inc
ja
out
jne
leave
xor
iret
sti
insl
and
rorl
rorb
ljmp
pop
daa
inc
cmp
addr16
js
mov
pop
dec
ljmp
cmpb
movsl
les
paddsw
dec
add
xor
pop
and
lods
push
js
mov
dec
movsb
or
xor
pop
push
mov
mov
inc
fdivrp
mov
out
and
scas
fwait
jns
int
lahf
push
mov
xlat
add
stos
sti
pop
addr16
aaa
pop
dec
cmp
push
push
mov
inc
inc
movsb
add
mov
imul
mov
mov
mov
repz
in
jnp
xchg
subb
push
add
sub
fnsave
bt
int3
clc
enter
mov
xchg
sarb
pop
addr16
xchg
xchg
lcall
mov
jmp
imul
or
and
add
in
aas
push
and
xor
scas
and
ss
pushf
stos
nop
xchg
adc
mov
imul
xor
dec
push
inc
loop
mov
sbb
inc
jb
jle
pop
adc
ret
xchg
das
dec
add
pop
and
push
xchg
jno
sub
jp
xchg
or
mov
xchg
sbb
and
mov
sub
das
or
jno
fs
repnz
lcall
dec
loope
fs
mov
fisubl
movsl
lret
xchg
xor
mov
ret
xchg
sbb
loopne
lds
outsb
pusha
ja
call
dec
int3
loope
mov
jle
xchg
sarl
or
sti
adc
xor
daa
sbb
loop
mov
or
sahf
cmc
jmp
push
mov
jnp
mov
pop
dec
ja
xchg
mov
push
imul
or
adc
xor
inc
add
pop
ror
mov
cmp
and
push
pop
jp
cmp
rcrb
mov
int
jp
sub
pushf
cld
subb
cwtl
addl
jmp
scas
call
lret
fwait
aam
mov
stos
adc
mov
imul
jno
sti
dec
pop
and
test
push
sub
fists
or
and
mov
das
mov
or
or
mov
adc
loope
fs
xor
adc
jns
nop
shrb
mov
jmp
out
iret
addb
dec
mov
lods
push
in
iret
jnp
cmp
fdivrs
enter
sahf
jp
test
or
es
ss
ret
adc
adcb
jl
test
push
mov
shl
popf
lock
mov
jb
lahf
mov
xor
ds
decb
and
out
loop
xor
dec
and
test
test
mov
mov
les
push
xor
push
mov
mov
inc
xor
sbb
push
sbb
add
stos
push
mov
movsl
ret
add
jbe
aad
hlt
and
mov
fmul
mov
xor
stos
mov
outsb
das
mov
shlb
jno
and
ljmp
in
sahf
mov
std
fcompl
cwtl
mov
mov
mov
sbb
das
je
ret
push
pop
cs
outsl
inc
xchg
xchg
in
lcall
popf
cmpsl
or
das
sub
or
shlb
xchg
je
fwait
imul
les
std
or
jno
loopne
je
ret
push
pop
add
sbb
sub
mov
xchg
data16
dec
popf
or
ljmp
dec
add
xorb
inc
mov
test
jg
pop
lods
test
xor
jo
lret
mov
fmuls
jl
mov
mov
inc
add
push
cld
pop
mov
pop
les
addr16
jno
xchg
aaa
sahf
inc
mov
add
out
push
pushf
ss
pop
cli
das
dec
adc
ja
xchg
and
lret
outsb
stos
bnd
xchg
sarb
sbb
inc
sub
inc
pop
lret
aaa
div
and
ret
pop
mov
ror
mov
mov
sub
cmp
sub
inc
push
xor
mov
sub
es
pop
test
out
xor
pop
out
cmp
into
pop
xor
mov
repnz
fildl
sub
mov
lret
fs
add
push
movsb
push
call
xchg
mov
daa
lahf
jb
inc
es
adc
movsl
imul
jmp
dec
inc
fcom
lret
ljmp
adc
shl
mov
daa
mov
es
dec
jbe
outsb
mov
stc
mov
fistps
sbb
cli
arpl
call
popf
jmp
cli
js
dec
add
not
mull
std
test
stc
sbb
fwait
push
xchg
or
out
dec
insb
int
into
cmp
imul
dec
int
or
inc
test
xchg
mov
repz
out
lods
xor
bound
mov
or
mov
mov
out
inc
vmread
mov
cmp
addb
insb
jb
clc
pop
pop
add
push
aam
lds
sub
testl
mov
stc
pop
cmc
test
adc
iret
ss
xlat
nop
mov
outsb
mov
lods
enter
in
rcll
pop
mulb
jmp
clc
sbb
bound
adc
bound
xchg
jle
sbb
mov
fisubrl
stos
adc
sbb
rorb
dec
in
adc
cmp
mov
mov
ret
icebp
stos
inc
ds
lods
and
test
lret
ljmp
and
bound
addb
adc
mov
repnz
lret
adc
shll
push
or
and
popl
xor
addr16
ret
mov
das
add
mov
push
mov
jbe
aas
addb
mov
or
inc
xchg
lds
daa
fnstcw
inc
adc
or
add
lret
les
cmp
insb
cmc
pop
push
sub
and
gs
push
dec
add
cmp
movsb
lock
add
aas
fstps
out
dec
dec
pop
cmp
imul
xchg
rolb
test
enter
mov
fiadds
lcall
sub
sbb
push
or
xchg
and
inc
test
sub
add
cmc
jge
jno
inc
push
mov
push
cmp
loop
imul
arpl
push
mov
cmp
mov
sti
fwait
dec
repnz
adc
in
lds
mov
imul
int
cmpsl
lea
outsl
mov
subl
into
cmc
out
aaa
test
push
daa
icebp
ljmp
in
cld
pop
jns
fwait
xchg
hlt
push
adcb
inc
gs
dec
dec
mov
sub
xchg
fs
push
rcrb
mov
or
cli
arpl
push
cmp
aam
xchg
mov
jge
and
inc
loop
pop
sub
js
dec
cmc
and
les
popa
sbb
pop
shrb
pop
cmp
sub
shl
sahf
mov
dec
test
mov
sbb
pop
dec
sbb
mov
or
fadds
pushl
cld
xchg
dec
push
imul
sub
sbb
mov
sub
xrelease
pop
sbb
and
int
mov
cmp
mov
jmp
mov
mov
sbb
and
popf
push
sub
and
mov
int
sub
mov
mov
xchg
out
sbb
in
and
test
arpl
mov
cmovp
cmp
adc
mov
push
or
icebp
cmpsb
push
mov
leave
inc
lea
aad
xchg
sub
add
xchg
jns
sub
jnp
xchg
jmp
push
adc
sbb
sub
push
dec
test
cmpsb
push
or
aad
add
scas
loopne
mov
xor
repz
and
pop
in
pop
mov
test
inc
jno
and
jl
pop
dec
addr16
and
arpl
mov
fsubrp
xchg
jns
jnp
jns
lret
loop
lret
mov
jg
sbb
pop
adc
sbb
test
es
stos
fwait
sub
into
dec
aas
or
adc
sbb
xchg
add
mull
xchg
mov
push
sti
xor
pop
pop
mov
iret
and
jmp
or
cmp
sub
dec
movsb
cs
push
arpl
inc
test
sbb
xchg
add
jl
loop
push
dec
xor
into
std
in
daa
jecxz
lret
and
push
aas
call
addb
xor
add
jae
mov
nop
pop
or
or
jp
inc
stos
dec
and
or
sbb
jmp
insl
test
mov
sub
cltd
sbb
jb
and
ljmp
cmp
add
dec
cmpsl
xchg
sar
cmc
enter
popa
scas
and
cmp
js
mov
and
inc
mov
cmc
xchg
sbbl
ds
fdivrs
sbb
clc
jne
int
movsb
fcmovnbe
in
sbb
mov
mov
or
pop
xchg
cmp
mov
aaa
lock
lret
xor
push
mov
dec
xchg
dec
cmc
xor
xor
and
jo
cmp
xchg
les
test
xchg
jb
pop
mov
adc
mov
scas
push
xchg
enter
pop
push
xchg
daa
ret
xchg
xor
lods
int
sbb
popf
imul
mov
int3
adc
enter
push
loop
cmpsb
mov
dec
nop
push
cld
mov
pop
clc
sti
jmp
xchg
mov
mov
stos
ficoml
dec
sti
inc
xor
mov
das
loopne
orb
mov
mov
dec
or
faddl
or
and
xorl
jge
je
aad
xor
pop
fldenv
push
inc
test
mov
mov
inc
fistl
daa
enter
in
cmpsb
mov
jge
sbbl
xchg
push
pop
in
xchg
cmpsl
inc
push
push
outsb
pop
lcall
adc
inc
mov
jae
dec
mov
sarl
out
orb
icebp
ret
jb
pop
xchg
out
fisttpll
aas
pop
mov
je
scas
jle
xchg
cmp
sbb
push
add
data16
imul
xchg
insl
iret
sub
pusha
pop
push
mov
loopne
cmp
mov
cmpsl
mov
test
jg
xchg
bound
arpl
int3
mov
pop
mov
mov
dec
mov
repz
jae
push
mov
std
test
hlt
int
incl
shll
dec
sub
sub
adc
ret
das
mov
push
xchg
sub
cmpsb
xchg
xchg
or
ljmp
jae
mov
filds
sahf
jge
cmp
out
push
sti
inc
out
aad
or
add
inc
jp
inc
jmp
cmp
in
ss
or
mov
or
mov
sbbl
ret
or
pop
xchg
sub
popa
aas
jne
sbb
xchg
in
mov
enter
add
push
adc
cld
mov
in
cmpsl
loop
out
jecxz
sub
ljmp
push
push
mov
inc
es
sbb
daa
cwtl
pusha
and
fcompl
xor
out
pop
inc
data16
sbb
jp
push
sbb
iret
pushl
addr16
mov
popa
push
inc
daa
fnsave
clc
test
xor
cmp
arpl
sub
out
push
shl
pop
lods
int3
filds
cmp
mov
out
addr16
sub
pusha
pop
adc
add
mov
sbb
push
mov
imul
insb
sbb
pop
divl
inc
cmc
loop
mov
sahf
push
mov
inc
cltd
call
sbb
fcoms
adc
mov
push
cmp
mov
mov
std
stos
xchg
mov
mov
arpl
mov
sbb
mov
fldcw
xchg
dec
test
xchg
jecxz
cmpsl
popf
xchg
fadd
cmp
das
sti
xchg
sub
adc
sti
and
jmp
xor
xchg
mov
add
mov
and
or
push
jne
inc
pop
pop
jbe
insl
mov
icebp
cs
or
xchg
cmp
movsl
pop
xor
sahf
add
mov
cmpsl
movsb
xchg
add
movsl
mov
dec
lods
cld
cmp
mov
sbb
insl
cltd
dec
pop
and
iret
mov
dec
mov
mov
decb
sti
in
pop
inc
fistl
xor
and
mov
mov
out
mov
dec
std
push
add
mov
lcall
cmpsl
jbe
or
jge
sbb
add
sub
test
das
dec
add
icebp
mov
pop
sbb
jb
mov
addr16
sbb
mov
and
pop
xlat
or
test
scas
inc
cltd
scas
inc
pop
leave
call
jp
aam
jns
mov
into
and
in
movsb
push
icebp
push
mov
dec
cmp
inc
out
mov
sbb
push
loope
sbb
jo
mov
push
int
sbb
clc
stos
xchg
add
cli
push
add
mov
mov
mov
lods
inc
xor
xchg
add
fcoms
jnp
jnp
sahf
loopne
cmpb
data16
xchg
xchg
outsl
ljmp
push
mov
jg
sub
pop
icebp
arpl
fidivl
sbb
jno
shll
mov
mov
inc
jle
les
sbb
rorb
fwait
push
xchg
or
jmp
test
xchg
cmovg
mov
jae
cld
sti
and
insb
int
icebp
rcll
xchg
js
pop
xorl
cld
mov
sbb
int
insl
fmul
pop
push
push
mov
add
mov
dec
fs
out
int3
inc
push
testl
mov
divb
xor
popf
mov
fadds
or
dec
out
jmp
sbb
sarb
sbb
mov
popa
in
lock
push
jmp
daa
outsb
mov
sbb
mov
imul
cmp
dec
pusha
pop
daa
inc
sbb
cwtl
cltd
jmp
ljmp
jno
mov
mov
pop
push
or
fists
insb
int
rcll
movsb
test
lret
xor
fadds
ret
aad
or
adc
popl
shl
stc
mov
adc
xchg
push
or
jge
add
jge
push
cmp
int3
and
mov
push
inc
pop
and
std
pop
adc
repz
movsl
mov
fistpll
rcrb
lcall
cmp
aam
lahf
mov
out
jns
add
adc
and
mov
sbb
or
test
push
dec
clc
inc
stc
sbbl
dec
sbb
imul
popa
push
cmp
loope
lock
inc
cmp
add
inc
adc
js
stos
push
and
adc
mov
inc
test
push
jp
cmp
aaa
xchg
inc
pop
add
cmp
pusha
pop
xchg
mov
lods
icebp
mov
out
xchg
and
xor
or
int3
jae
cmp
pop
add
mov
push
jge
dec
and
cmpsb
mov
mov
sub
clc
push
test
movsl
les
add
or
xchg
ljmp
sti
push
dec
and
add
mov
pushf
es
subl
sar
fdiv
add
or
mov
fstpt
mov
cmpsl
mov
sarl
jp
adc
jmp
sub
loope
adc
push
dec
push
dec
inc
and
jmp
push
jle
xor
fistpll
out
ret
push
addr16
dec
sbb
mov
adc
dec
js
popf
xchg
ja
mov
sti
add
sbb
repz
sub
inc
jbe
cmovp
inc
fmuls
mov
adc
scas
std
sub
xchg
sti
mov
lret
lcall
or
pusha
fwait
lcall
aad
mov
stos
cmp
mov
setb
out
sbb
dec
jbe
lea
or
xor
ror
das
lock
jo
in
repnz
fcomp
dec
pop
mov
mov
xchg
sub
insl
stos
adc
fbstp
xlat
sahf
jp
aam
in
xchg
mov
jne
and
xor
mov
in
jecxz
and
xchg
jle
lods
shll
cmp
repnz
movsb
pop
push
ret
xor
mov
sbb
xchg
sbb
shll
daa
fldt
xchg
or
xrstor
push
test
ss
mov
mov
pop
dec
fcmove
and
xor
dec
pop
lds
bnd
and
sub
sbbl
cmc
add
push
dec
in
je
or
insl
adcl
mov
mov
or
sbb
fsubl
shll
inc
jp
js
mov
ss
std
adc
lods
adc
ret
pop
aaa
push
cmp
outsl
or
cs
outsl
fists
stos
jae
mov
mov
fstps
push
push
xor
lods
or
jbe
les
mov
into
repnz
int
cltd
xchg
daa
push
loope
sbb
push
adc
push
lock
in
ret
adc
jl
adc
cmp
cmp
ret
int
jl
fimuls
sbb
loope
dec
cltd
push
shlb
xor
push
dec
sbb
xchg
or
push
adc
mov
das
add
push
or
iret
jne
sub
sub
add
cwtl
std
lret
aam
pop
push
dec
xchg
into
data16
xchg
push
cmc
inc
ds
mov
das
out
in
daa
daa
iret
jne
jecxz
in
dec
add
push
popa
call
mov
stos
nop
jmp
stos
cld
sub
mov
push
sbb
sub
loope
std
sbb
pop
sbb
loope
cmp
subl
dec
push
xchg
fisubs
sbb
or
cwtl
push
xchg
sub
xor
jg
pusha
add
push
mov
test
and
stos
cmp
inc
cmp
xor
hlt
adc
mov
leave
sbb
cmp
adc
adc
mov
pop
aad
push
addb
mov
out
jae
enter
mov
push
lcall
pop
inc
push
out
cwtl
xchg
int
loopne
and
lds
fcmovbe
sub
ljmp
inc
mov
push
cmpsl
jnp
jne
and
xchg
mov
inc
push
mov
lods
pop
mov
push
aas
mov
push
pushf
daa
daa
nop
push
popa
jo
mov
icebp
es
lret
aad
imul
cmp
pop
jl
clc
je
dec
xor
ret
or
rcl
repz
mov
fsubrs
lret
lods
jp
mov
mov
xorb
xchg
or
push
in
or
repz
ds
jge
sbb
je
add
sbb
popf
adc
and
dec
jne
push
lock
inc
cmpb
ret
add
pop
xor
mov
aam
or
push
jmp
shll
mov
pop
mov
dec
sahf
cmpsl
push
pop
rorl
fistpl
mov
enter
push
insb
cmp
rcrl
loope
push
js
fmulp
loopne
std
int3
jg
aaa
push
out
or
push
loope
lods
cmpsb
hlt
ja
dec
int
fldl
xchg
sahf
lea
mov
into
fdivp
data16
adc
jecxz
lret
mov
push
sbbb
inc
dec
leave
int
clc
pop
mov
jb
mov
bnd
enter
cltd
jae
aam
cmpsb
mov
adcl
mov
mov
test
ret
or
and
stc
aas
jecxz
adc
fwait
mov
aas
flds
mov
out
outsl
push
out
negb
sub
xchg
outsl
push
fs
sub
xchg
inc
into
mov
iret
sarb
decb
test
loopne
loope
mov
xcrypt-ctr
cmpsl
sbb
fs
fists
sbbb
arpl
bswap
negl
data16
jge
mov
bound
cmp
das
in
leave
jmp
xchg
and
rcrl
mov
push
sbb
jg
call
cmp
ret
fxam
fsubs
mov
movsb
sub
int
mov
mov
ficoml
or
int
push
ret
mov
sub
rcl
rep
pop
mov
cld
push
and
sbb
sub
sub
mov
and
pop
push
push
jne
repnz
ror
fwait
adcb
movsl
in
in
dec
subl
lret
rorb
sar
pushf
push
cmp
cwtl
int3
es
mov
push
pusha
call
repz
icebp
mov
pop
test
out
loopne
pop
stos
int
mov
xchg
lods
mov
clc
sbb
mov
fsts
rcll
arpl
and
iret
mov
jp
sub
ljmp
xor
mov
jg
dec
ficomps
pop
jnp
in
xchg
jp
ljmp
pushf
lods
push
xor
loopne
test
shrb
pop
add
sbb
inc
xor
pop
js
jno
cli
mov
lret
call
sbb
inc
cmp
add
test
push
add
xor
dec
mov
inc
jp
sub
inc
adc
arpl
stos
das
es
mov
mov
mov
pop
bound
push
push
mov
rcrl
mov
mov
ss
ss
cmp
std
and
sub
mov
add
mov
insb
sub
sti
add
and
xor
xorl
fwait
push
lds
stos
sub
stc
xor
fdivs
sub
push
cli
xor
test
dec
push
es
jbe
dec
mov
push
and
sbb
test
scas
roll
insb
pop
fisubrl
push
imul
push
push
xor
add
mov
pop
mov
sbb
push
push
hlt
jne
sti
cltd
mov
fwait
or
jnp
mov
push
xorl
aam
pop
push
ret
shrl
dec
pop
lds
cli
ljmp
call
push
pop
ja
add
push
push
or
aam
adc
push
xor
inc
fstps
mov
jno
add
jo
mov
jne
xor
sbbb
mov
jecxz
fadd
adc
mov
lds
test
cmpsl
and
ret
push
shll
and
lcall
jp
xchg
pop
cmp
lahf
xlat
ds
cmp
xchg
lret
dec
insl
lret
inc
inc
push
mov
mov
or
jle
xchg
mov
xor
mov
pop
or
inc
cmp
push
add
int
mov
jp
cs
je
jmp
xor
daa
scas
mov
scas
xchg
ja
adc
dec
rclb
xor
pushf
sbb
int3
mov
js
shll
cmp
lcall
ss
in
gs
mov
xchg
ss
pop
jns
cs
scas
outsl
ss
mov
in
leave
mov
dec
jbe
mov
mov
push
add
xchg
loope
inc
popa
and
clc
and
push
cmp
outsb
mov
or
mov
lods
cltd
push
sahf
fwait
ljmp
dec
jbe
ja
and
lods
inc
lret
call
ret
ja
sbb
repz
jp
inc
lea
sub
pop
or
popf
int3
adc
xor
mov
icebp
pop
test
mull
and
jno
cmp
inc
aad
scas
mov
xchg
adc
add
in
push
xchg
inc
loope
xorb
pop
sub
jmp
jno
pop
jae
mov
add
xchg
pop
mov
test
mov
cmpsl
inc
sbb
xchg
aaa
mov
jg
mov
paddq
rorl
jns
xor
out
enter
jo
add
divps
push
mov
add
sbb
inc
mov
jb
shl
rorl
pop
jno
imul
push
aaa
jbe
pop
aam
mov
cld
push
ret
cmp
sbb
les
dec
outsl
dec
sbb
dec
xlat
sub
jmp
adc
sub
out
mov
mov
xor
adc
xchg
and
sahf
lret
loope
clc
dec
leave
adc
pop
rclb
push
jae
adc
data16
push
outsb
mov
rorl
mov
push
movsl
jno
sub
out
xchg
sbb
insl
pop
sub
dec
cltd
in
out
mov
mov
int3
inc
test
iret
ja
ja
aam
mov
in
into
and
xlat
fsub
arpl
imul
cmpsb
cmp
ljmp
cs
and
fnstcw
outsl
repz
dec
inc
cmp
loopne
fiaddl
push
push
es
sbb
test
pop
xor
sub
pop
cltd
xor
lods
dec
jmp
add
jns
xchg
lods
cmpsl
lods
mov
sbb
inc
pop
jg
mov
mov
pusha
scas
cs
fnstcw
mov
cld
cmp
cmp
dec
or
inc
or
jb
jg
sub
clc
cwtl
ja
sub
add
jbe
mov
cmpsb
mov
ja
je
dec
adc
jle
lahf
nop
adc
aad
inc
xchg
mov
out
and
or
lcall
push
sti
xchg
add
adc
push
bound
inc
sbb
enter
inc
icebp
mov
xor
sub
ds
pop
pop
je
imul
add
nop
mov
xchg
sbb
lods
dec
cld
sub
cld
xchg
xchg
bound
pop
sbb
pop
or
cli
cmpsl
xor
sub
das
les
ljmp
inc
xor
mov
rcrb
negl
pusha
rcr
dec
pop
mov
ljmp
or
cmp
sbb
cli
js
lock
cmp
test
notl
icebp
movsb
fdivs
test
in
aas
mov
js
rol
stos
cld
push
daa
or
pop
movb
dec
leave
sbb
push
ss
cmpl
jne
and
or
xchg
hlt
mov
stos
jb
or
mov
adc
rcr
fistpl
cmp
lods
lahf
push
push
icebp
mov
js
jge
and
lock
negl
pop
or
scas
out
pop
frstor
mov
inc
inc
xchg
das
pop
lret
test
outsl
mov
push
cmp
mov
lea
rorb
sbb
sbb
mov
imul
cwtl
rep
jbe
cwtl
int
sbb
xchg
xor
push
xchg
xchg
pop
aad
into
in
dec
insb
sti
cmpsb
in
fisttps
rclb
fimuls
lods
idivl
ret
es
iret
xchg
jae
mov
popfw
shlb
adc
or
xchg
and
das
rcl
call
lds
pop
xchg
sub
pop
divl
pusha
in
and
and
pop
push
mov
pop
jae
push
popa
cli
inc
int
js
xchg
xchg
cltd
bound
mov
rol
cld
das
popf
mov
lods
out
imul
xor
xchg
jmp
xor
dec
mov
lds
mov
cmp
cmp
aaa
shrb
sub
xchg
sub
sbb
xchg
push
imul
loop
notb
add
cmc
jb
add
hlt
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
je
sbb
addl
sub
daa
sub
inc
cmp
adc
fcmovb
jmp
lea
mov
pusha
les
pop
inc
xchg
xchg
push
in
jne
sbb
mov
mov
add
push
fs
movsb
nop
imul
negl
push
and
pop
cmp
mov
test
call
scas
pop
cmp
loop
in
popf
scas
push
cmp
pop
inc
cmp
lods
adc
call
add
nop
mov
xor
frstor
inc
mov
push
fiaddl
cmp
mov
mov
and
insb
push
push
xor
add
inc
iret
and
inc
sti
fadds
mov
je
mov
cmc
sub
xor
stos
mov
pop
scas
jecxz
sub
mov
and
push
adc
aaa
add
dec
inc
push
daa
call
fcomi
aam
aas
mov
add
ret
sbb
movb
cmpl
xchg
sbb
popf
pushf
pop
mov
popf
cmp
mov
inc
hlt
fdivl
push
or
dec
mov
stos
rcrb
mov
pop
mov
sahf
mov
ficoml
jno
fnsave
cld
push
stos
add
fs
add
sub
scas
push
fiadds
or
into
movsb
and
xor
subb
jle
popa
call
or
mov
popf
jecxz
cmp
shll
mov
sub
adc
inc
mov
jmp
lahf
pop
pusha
mov
jno
insl
add
inc
push
mov
fsubp
mov
sarl
pop
pop
imul
movsl
cmp
pop
and
sarl
mov
push
testb
decl
and
imul
adc
les
sbb
and
cmpsl
mov
jge
sub
push
fwait
loop
enter
gs
push
mov
inc
int3
adc
lods
inc
dec
dec
jb
cmp
or
push
cmp
arpl
loopne
enter
out
loopne
enter
pop
and
movsl
push
jno
arpl
inc
cmpsb
mov
adc
xchg
dec
fstpt
xchg
jb
pop
fadd
call
dec
lock
das
stc
sbb
xchg
pop
jb
inc
andb
xor
pop
in
or
xorl
cmp
ss
mov
add
ret
js
fsts
mov
xor
jmp
int
push
mov
dec
inc
cltd
inc
jno
push
dec
mov
adc
es
jne
cmpsb
mov
cli
insb
les
scas
inc
nop
rcrb
movl
data16
fs
mov
pushf
fst
push
sub
pop
movsl
xor
sti
mov
sub
jge
mov
sub
dec
inc
outsl
fdecstp
or
pop
adc
dec
sub
add
sub
stos
cmc
dec
rcll
insb
jecxz
popa
call
sub
dec
les
jle
adc
imul
cmp
les
inc
cmpsb
int
mov
test
les
lret
mulb
xor
cltd
add
or
imul
dec
xchg
and
jg
mov
mov
dec
cmp
sbb
xchg
jno
fisubrl
pop
ret
test
mov
or
or
pushf
fwait
movsb
mov
cmc
xchg
mov
dec
inc
ret
sti
lods
push
test
adc
scas
sti
xor
add
les
ret
cmp
push
enter
enter
fwait
sub
add
in
adc
or
sub
stos
scas
sub
in
cmp
sub
xor
pop
pop
xor
in
icebp
mov
sbb
jl
sbb
xchg
stc
cmpsb
lret
out
shll
sbb
lret
pusha
jmp
xchg
daa
adc
scas
cs
in
clc
mov
jl
fs
cmp
push
inc
int3
daa
xchg
jne
jne
lret
cmp
jnp
insb
sahf
xchg
xlat
xchg
xchg
aas
shr
mov
inc
jne
rcll
inc
dec
lahf
pop
or
in
movsl
clc
into
lahf
out
pop
jle
inc
out
ljmp
mov
mov
push
pusha
mov
and
loopne
insb
sub
mov
scas
movsl
mov
sbb
push
mov
push
xchg
aaa
push
iret
mull
fmuls
cltd
ljmp
dec
and
ret
mov
fldcw
jmp
fs
call
cmp
or
mov
fsubr
push
sbb
ss
ljmp
fisubl
cmp
sahf
clc
movsl
push
dec
adc
mov
fidivrl
cmc
test
roll
popf
shll
pop
cld
jmp
js
mov
ljmp
sbb
pop
mov
adc
adc
jge
jmp
mov
stos
xchg
ss
jmp
or
cli
sub
scas
stos
jp
test
icebp
gs
jmp
ffree
mov
jbe
cltd
sub
or
shlb
lds
das
xor
mov
xchg
je
adc
shll
dec
jg
dec
fs
or
cld
fs
mov
outsl
subl
mov
adc
dec
pop
jmp
push
les
popa
push
outsl
pop
rolb
aam
lods
or
popa
mov
fwait
mov
cmp
jo
iret
mov
mov
cltd
sbb
lock
jo
add
jae
cmc
add
mov
rcrl
jg
jecxz
mov
or
cmp
push
cs
daa
pop
inc
lret
lods
inc
jmp
jp
lods
popa
and
scas
sub
push
cltd
sub
fists
and
adc
sub
push
ss
mov
xchg
sbb
dec
pop
jo
data16
and
push
arpl
and
add
stc
les
sub
jnp
inc
out
ss
mov
xchg
pop
push
push
outsb
sub
into
dec
xchg
js
pop
push
mov
insl
jb
je
fidivs
sub
cli
cmp
dec
sbb
xchg
flds
and
sbb
mov
pop
sbb
negb
mov
pop
lods
rorl
mov
inc
push
cmp
loope
xor
jns
int
mov
mov
insb
jbe
ret
fldt
push
shlb
test
mov
push
outsl
xchg
adc
adc
insl
cmpb
pushf
lcall
mov
movsl
aas
mov
cmp
pop
mov
rcll
mov
pop
in
xchg
lret
sbb
adc
loope
push
fst
jo
outsl
jmp
xchg
pop
pop
das
or
ljmp
int
and
mov
stc
jbe
shl
jle
xchg
loop
out
sarb
mov
push
and
bound
mov
dec
adc
mov
xchg
mov
xor
xor
fcomps
fists
sbb
or
jg
es
push
pop
fwait
das
repz
into
ss
call
fiaddl
or
mov
test
aam
lret
xor
aas
aas
call
jbe
and
and
cmp
mov
lods
rclb
xchg
sbb
loopne
data16
loopne
test
push
dec
xchg
ss
jnp
cmp
sub
xlat
cs
dec
pop
cwtl
jno
jmp
xchg
js
stos
nop
loope
xor
jb
xchg
jp
inc
insl
xchg
pushf
xor
jecxz
dec
icebp
jae
pop
adc
mov
out
add
inc
loope
cmp
incl
xlat
hlt
mov
xchg
mov
aam
jl
or
mov
imul
jmp
xchg
scas
stos
jne
xor
stos
repz
jb
push
into
fistpl
pop
dec
hlt
xchg
aas
outsb
pop
cmp
sbb
lea
cmc
ret
inc
dec
loopne
cmc
loopne
mov
movsl
mov
stos
cmp
cmp
fucom
jb
mov
roll
sarb
jmp
jl
inc
addr16
xchg
mov
cmp
and
jb
xchg
cmp
les
aas
ret
adc
xor
push
sbb
es
insb
pushf
outsl
push
push
scas
push
inc
hlt
cli
std
mov
jne
pushf
push
xchg
or
jae
xlat
cmp
add
out
xor
jmp
sub
aaa
inc
xchg
jp
clc
sahf
pop
or
push
and
lahf
repnz
jo
je
add
xlat
icebp
data16
out
push
or
jno
mov
jge
js
int
xchg
imul
xchg
mov
lret
pop
pop
fsubr
adc
mov
daa
lea
ds
add
cmp
or
cltd
pop
shrl
pop
dec
jmp
int3
mov
fidivl
and
inc
stos
add
mov
push
or
ds
test
lods
xor
insl
gs
sub
cmp
mov
inc
aas
popa
push
aas
and
cs
jbe
push
stos
mov
popa
pop
iret
cld
shll
insl
outsl
stc
sbb
movl
jg
cmc
inc
fildl
inc
cmp
mov
ret
cwtl
xor
pop
or
and
push
pop
adc
jnp
fwait
or
nop
stos
ret
ss
imul
aad
jp
shlb
iret
dec
jb
cs
push
dec
push
adc
cmp
pop
mov
add
inc
jb
inc
pop
mov
rolb
mov
faddl
push
push
fnstenv
dec
iret
scas
jno
xchg
cmp
insl
xor
sub
call
aad
sub
js
xor
push
fs
or
ss
mov
out
sbb
arpl
fcomp
sub
shl
push
pop
out
sbb
int3
pusha
stc
pop
insb
xchg
stos
ljmp
inc
adc
push
inc
inc
xchg
ds
cltd
xor
lret
jnp
jb
fbstp
jne
jno
andb
imul
in
xorl
fidivrl
jge
call
jge
int
daa
adc
call
mov
xor
pop
xchg
mov
xchg
mov
enter
adc
aad
add
xchg
adc
dec
push
jp
ret
xchg
or
mov
aam
sub
mov
sub
popf
fildl
add
iret
rcll
adc
xor
push
xchg
add
out
adc
imul
sahf
gs
mov
outsl
and
mov
or
or
or
and
out
into
mov
jecxz
adc
into
outsb
fwait
lods
mov
cmpsl
repz
jne
adcl
cltd
rcll
lods
cmpsl
shll
and
test
shl
jae
mov
mov
lds
orb
or
sarl
or
cwtl
mov
mov
jne
push
jl
adc
add
ret
lods
fisubrl
jle
lock
movsb
inc
sub
mov
js
mov
push
push
int
call
mov
xor
outsb
aam
cwtl
aam
jp
stos
loope
mov
test
add
dec
shlb
mov
or
mov
test
popf
xor
sub
inc
outsb
xchg
stos
fsubs
mov
out
mov
and
push
arpl
shll
inc
jno
sub
mov
fimull
dec
jbe
into
jbe
push
movsl
mov
add
mov
push
jae
dec
xchg
testb
pop
test
dec
jle
mov
fsubl
mov
jne
nop
lcall
mov
sub
jecxz
and
stc
or
and
and
adc
or
scas
gs
in
push
dec
outsl
mov
and
addr16
lret
loope
xchg
ds
cmpsb
sahf
push
pusha
adc
lds
or
insb
and
outsb
xchg
sub
sub
fidivs
xchg
xchg
push
cmp
in
and
cmpsb
out
and
movsl
jno
sti
and
pop
sub
adc
sbb
pop
mov
in
mov
cmp
pop
cmp
push
mov
incb
jne
dec
push
inc
pushf
pushf
std
lahf
popf
inc
dec
fcoml
mov
popa
inc
sub
and
mov
push
lock
push
aas
xlat
sahf
out
mov
mov
sub
rep
fldl
mov
fmull
cmpsl
jmp
xor
nop
je
dec
dec
xor
push
outsl
xchg
dec
push
or
mov
outsb
jp
push
lahf
fsub
push
jb
mov
shlb
imul
xchg
in
fs
jbe
std
sbb
xchg
imul
sbb
arpl
mov
sbb
fstps
and
xchg
xor
inc
mov
mov
pop
out
push
fsubs
sarb
lret
add
ss
imul
sub
into
mov
loope
jge
adc
repz
push
sub
adc
int
jg
loop
mov
mov
ret
add
pop
iret
push
cmpl
iret
shl
mov
in
cli
pop
xchg
loope
in
aas
aas
sbb
and
fnstenv
arpl
les
mov
inc
aam
or
mov
mov
es
call
data16
stos
imul
sbb
arpl
sbb
mov
repnz
mov
or
cmpsb
mov
adc
xor
cmpsl
data16
add
js
rep
fwait
dec
inc
cli
cwtl
mov
sahf
mov
and
enter
dec
clc
fcmovnbe
inc
dec
and
adc
out
mov
and
cli
or
pop
jl
stos
outsl
push
adc
shlb
flds
dec
icebp
aad
div
sbb
mul
insb
jns
xchg
and
inc
sbb
loopne
jne
fstpt
sub
adc
stos
sbb
ss
cmc
leave
cmp
data16
pinsrw
test
cmp
idiv
cmc
in
lahf
andb
mov
xorb
cmp
xchg
cmp
mov
lret
mov
add
push
or
shr
jnp
aaa
rcrl
cmp
imul
push
mov
mov
into
dec
jmp
jp
outsb
subl
mov
xchg
mov
pop
jb
dec
mov
adc
pop
or
add
lret
and
xchg
push
mov
ss
jmp
lret
xchg
xchg
sahf
mov
push
jnp
aad
daa
shl
jne
cs
xchg
dec
and
roll
adc
rorl
in
jecxz
into
jnp
pop
inc
fsts
sahf
jbe
push
jge
mov
push
jmp
or
push
jne
xchg
rcrl
call
repz
inc
push
sbb
in
out
xor
imul
stc
js
leave
cmp
cmp
nop
xor
call
nop
mov
mov
sbb
dec
ret
adcb
ja
jge
inc
out
pop
les
in
pop
int3
mov
stc
pop
ljmp
int3
test
les
cmc
add
ds
or
test
pop
mov
xchg
push
pop
push
cwtl
notb
movsl
test
mov
push
adc
aad
mov
dec
leave
movsl
mov
sub
repnz
mov
jmp
les
push
fisubl
jle
push
jecxz
ret
dec
fildll
insl
daa
in
adc
lods
enter
test
loop
in
mov
cmp
adcl
hlt
es
sbb
sbb
scas
mov
mov
add
sti
stos
je
add
and
push
add
ljmp
icebp
or
jle
shrl
mov
push
sbb
xor
pop
jg
pop
aad
push
popf
inc
shlb
mov
add
sti
add
jl
push
leave
dec
push
jmp
xor
mov
jnp
shlb
pop
pop
mov
sub
sbb
jle
dec
dec
shrl
or
inc
adc
sbb
out
or
xchg
push
cli
push
cld
inc
aad
sar
xchg
cmc
daa
inc
ret
dec
fsubs
jmp
push
vmovdqa
data16
or
out
inc
cmpsl
cmpsb
adcb
pop
push
repz
inc
nop
mov
fisubrl
cmp
pop
add
push
adc
sarl
outsb
test
xchg
int3
cmp
xor
mov
rorl
leave
inc
add
dec
and
jae
aas
imul
fsubrs
cltd
push
subl
push
pop
insl
ljmp
or
cltd
ret
push
clc
sbb
add
dec
sbb
sub
push
inc
mov
add
pop
jb
xor
hlt
mov
lahf
push
outsl
insb
mov
lret
sbb
sbb
or
mov
and
add
arpl
stos
jge
jmp
dec
inc
jmp
jp
js
sbb
popf
pop
mov
inc
and
enter
dec
push
lret
push
shll
inc
aaa
push
adc
mov
xchg
out
inc
or
ret
movsb
pop
popa
inc
jne
mov
mov
xchg
imul
sti
scas
mov
or
in
jl
int3
jg
arpl
data16
push
jno
mov
mov
inc
mov
mov
add
jbe
mov
es
mov
addr16
sbb
jbe
cltd
xor
orb
dec
sub
fucom
fbld
pushf
and
movsb
js
insb
mov
or
jl
adc
es
add
in
dec
loopne
push
cmp
push
jl
inc
lret
aas
push
pop
clc
mov
int
sbb
aas
mov
mov
loop
mov
cmpsb
and
pop
mov
sbb
lock
mov
js
mov
call
out
call
xchg
inc
xchg
sub
loopne
adc
lret
mov
shll
cmp
lods
in
loopne
shl
jbe
push
pop
push
mov
and
mov
andl
mov
add
rcl
hlt
jge
ret
mov
test
jp
sub
cmp
ja
dec
sub
lahf
daa
push
pop
or
cld
pop
inc
jg
leave
rol
sarl
add
xchg
jge
lods
jno
jl
call
sbb
pop
aas
addr16
inc
sub
pop
imul
or
aam
add
pusha
mov
aaa
rclb
cli
sub
jl
fmulp
or
jge
bnd
mov
ja
xor
ret
shll
int3
stos
push
jne
pop
out
pushf
insb
add
insb
test
arpl
in
xor
lret
and
mov
clc
mov
lds
xchg
or
cli
in
and
add
fistl
adc
stos
sarb
sti
les
outsb
pop
sbb
lahf
insb
cmp
sbb
mov
lods
xor
lret
xchg
cli
inc
sar
dec
pop
dec
mov
jecxz
out
clc
xchg
cltd
or
inc
dec
imul
or
and
cmc
cmpsb
out
inc
sbb
push
insl
in
fstpt
mov
cld
sarb
scas
mov
rcll
repnz
cmc
add
out
jno
push
insl
or
jnp,pt
mov
dec
out
popa
push
dec
clc
std
fwait
sbb
dec
lds
push
add
int3
cli
inc
inc
jnp
dec
aas
das
jns
fcomps
mov
lods
lock
xchg
pop
xlat
xchg
mov
and
push
cwtl
stos
inc
mov
les
scas
loope
dec
fdiv
and
xor
push
sbb
add
insl
add
cmp
bound
push
lret
mov
sub
push
jmp
push
stos
inc
inc
mov
rcrl
sub
mov
or
std
xchg
int3
popa
lds
lock
pop
ss
dec
fwait
outsb
dec
dec
rol
jnp
repnz
lods
dec
imul
xor
xchg
and
push
rol
mov
jnp
sbb
cmp
scas
fwait
ret
loop
jae
mov
insb
scas
xchg
aaa
addl
stc
push
stos
mov
lods
fdivrs
rorl
dec
sub
jne
inc
xchg
mov
dec
cmp
nop
orl
stc
std
aas
loopne
jns
arpl
mov
cs
mov
sub
dec
in
jo
mov
pop
fwait
cmp
inc
mov
dec
jbe
and
in
lret
xchg
mov
outsb
or
mov
xchg
fdivs
jl
inc
dec
in
nop
push
ljmp
sti
push
push
rcl
inc
jnp
int3
mov
loope
xchg
cmp
jl
mov
lds
inc
adc
mov
jmp
into
push
xor
inc
pop
std
mov
push
or
mov
pusha
in
daa
js
and
push
jno
fsubr
js
movb
dec
add
push
jg
popa
stc
outsb
mov
jl
cmp
test
xor
ljmp
lods
mov
filds
mov
popf
inc
xchg
inc
andl
test
dec
sub
shrl
mov
jg
add
shrb
fisubl
scas
pusha
int3
push
pop
scas
jmp
pop
or
cs
fwait
inc
addr16
adc
jb
scas
pop
aam
js
repz
lahf
or
into
or
pop
inc
pop
stc
jno
adc
jb
push
sarl
rcrl
fisttpl
xor
clc
and
mov
scas
mov
sti
push
mov
fildl
jns
ds
xchg
leave
mov
dec
cmpsl
test
stos
sbb
lcall
popa
adc
aas
loop
sbb
push
mov
adc
insl
sbb
adcb
jp
and
mov
and
jecxz
inc
jmp
cs
jae
rol
cwtl
icebp
aas
je
or
loop
push
aas
xor
cmp
jns
rcll
mov
imul
imul
dec
or
inc
shrl
xchg
mov
daa
lret
and
cmp
scas
sub
add
xchg
ret
sbb
xlat
sbb
rorl
mov
cmpsl
sub
jmp
lods
data16
rclb
inc
push
addr16
insl
dec
or
enter
into
sar
inc
insb
lahf
dec
stos
ljmp
cmpl
adc
fiadds
xor
mov
sbb
je
jp
and
push
adc
xlat
cmp
lods
mov
xchg
shr
inc
or
cmpsb
dec
es
rcrl
sbb
push
sub
adc
dec
aas
mov
mov
mov
or
adc
mov
xchg
xchg
sbb
pop
push
cmp
fwait
xor
or
icebp
mov
dec
jp
imul
pop
inc
ds
ljmp
cmpsb
mov
mov
xor
inc
mov
aas
push
clc
jbe
or
and
mov
stos
xchg
or
out
andb
std
in
pop
push
test
icebp
aad
xor
ss
xlat
jle
std
xor
orl
cmp
cmp
pushf
ficomps
and
rorb
push
sbb
stc
fldl
out
or
and
and
jae
mov
aaa
xor
ljmp
stos
adc
sahf
mov
aam
cli
add
sbbl
pop
popa
js
daa
out
int
test
xchg
into
fnsave
jae
push
mov
cmpsl
out
outsb
or
mov
aam
outsb
jne
lods
lret
mov
outsb
inc
or
dec
fisttps
dec
inc
outsb
cs
aam
pop
int
loop
scas
pop
rcr
fwait
inc
sbb
cmc
lods
stos
adc
ds
inc
lcall
ljmp
sbb
lock
mov
pop
jl
jno
out
cmp
or
lret
stc
sub
ljmp
add
cmpsb
push
jmp
cvtps2pd
pop
out
sub
outsb
sarb
adc
cmc
xchg
cwtl
stc
aas
push
and
shl
jmp
test
push
inc
mov
push
mov
and
sti
inc
mov
mov
jbe
mov
insb
out
xchg
xor
mov
adc
outsb
xor
orb
xor
rcrl
pop
cmp
jle
aaa
jne
and
lds
inc
jb
ss
pushf
outsl
loopne
ds
push
mov
mov
cmp
mov
es
push
std
pop
xlat
arpl
mov
cmp
push
sub
inc
aas
iret
cmp
mov
lret
mov
icebp
lea
pop
mov
xor
jl
shlb
lods
sbb
jmp
pop
mov
adc
call
and
pushf
in
sbb
xchg
push
mov
loope
cmp
outsl
out
sbb
pop
pop
add
adc
scas
popf
hlt
cltd
jecxz
push
jns
push
and
cmc
ss
sbb
mov
and
sbb
nop
vpmovm2b
scas
lods
lcall
pushf
popa
mov
pop
jbe
subps
daa
cmp
lea
pop
xor
inc
cld
outsb
add
cld
clc
mov
jle
mov
cmovs
icebp
adc
and
xchg
dec
pop
insl
in
mov
inc
pop
ficoms
sub
cmpsl
or
sub
cs
fwait
adc
adc
insl
jmp
rorl
ret
lock
add
aas
xor
jne
icebp
xrelease
dec
mov
sub
pop
data16
mov
mov
pop
xor
adc
mov
mov
mov
int3
ds
es
fstl
cwtl
in
mov
dec
add
pop
xor
xor
pop
and
cld
jb
lahf
loopne
aad
fisubl
dec
cmp
loop
stc
ss
pusha
rcrb
mov
repnz
and
xchg
test
mov
lcall
fisubl
stc
dec
and
das
adc
mov
dec
sbb
cli
xchg
dec
dec
cmp
xchg
adc
pusha
out
jge
lcall
adc
push
je
pushf
mov
mov
int3
mov
mov
icebp
add
dec
scas
jp
call
mov
push
jae
mov
adc
adc
adc
inc
stos
sbb
test
arpl
adc
inc
pop
loop
neg
mov
push
sbb
icebp
and
movsb
popa
lea
mov
jge
xor
mov
or
xchg
mov
push
test
negb
jb
xor
xchg
jge
push
xchg
mov
mov
test
mov
clc
jle
or
add
xlat
jge
mov
mov
test
xlat
dec
xor
and
clc
js
inc
shll
filds
imul
xor
out
scas
es
add
mov
push
mov
movsb
inc
aas
shrb
insl
pop
ljmp
push
jmp
jns
inc
lret
pop
roll
jge
mov
cld
mov
push
mov
ret
dec
push
mov
adc
mov
pop
or
or
push
lock
call
pop
sbb
or
les
outsb
inc
mov
pop
sbb
in
rol
ljmp
mov
outsl
aad
ficoms
out
mov
loopne
loope
iret
std
fwait
inc
shl
xor
movl
cld
cmpsl
clc
add
je
shll
mov
xchg
test
bound
movlps
inc
adc
dec
jle
push
lcall
dec
jp
scas
and
adc
mov
insb
xchg
cmp
mov
dec
cmp
add
fistps
test
loopne
xchg
loopne
dec
enter
xchg
and
mov
dec
sbb
sahf
xor
sbb
sub
mov
imul
sar
mov
push
jbe
ret
in
and
cmc
and
mov
call
jmp
pop
cli
cmc
in
pusha
seto
fsts
je
or
pushf
into
push
call
jb
push
adc
imul
mov
sbb
xacquire
outsb
popf
pop
mov
fimull
lea
int
pop
xor
enter
movsl
ljmp
test
mov
out
jnp
push
clc
sub
sti
add
adc
es
fidivl
inc
mov
and
lock
and
xchg
lret
xchg
sahf
movsl
bound
and
adc
inc
stc
sbb
mov
test
adc
pop
sbbl
pushf
dec
addb
xor
inc
cmp
in
add
mov
pop
and
aad
subb
icebp
std
es
jns
cli
cmp
and
lods
outsb
xchg
aaa
push
lods
push
stos
xchg
rorb
fldcw
dec
add
cmp
les
sub
ljmp
sub
jg
jno
jne
mov
cmp
popf
icebp
fdivrs
jge
push
fucomp
loop,pt
dec
push
aad
sti
das
add
fwait
dec
pop
sbb
mov
rorb
mov
jne
inc
push
shll
push
push
aas
out
out
test
jge
sub
mov
out
out
xor
mov
std
inc
mov
sbb
xor
mov
cmp
push
cmp
lock
jns
in
mov
addb
add
pushl
int3
es
fwait
dec
xlat
aaa
insl
xor
adc
mov
imulb
push
loopne
xor
xor
dec
ret
out
les
cmp
jb
lret
xor
std
out
notl
mov
or
pop
cltd
loop
and
jnp
gs
pop
sbb
adc
mov
xchg
xchg
cli
xor
mov
and
out
xor
addb
popl
enter
sti
push
sti
test
pop
xchg
aad
imul
inc
out
push
xchg
mov
jbe
in
dec
jge
sbb
in
push
push
fwait
cmpsb
push
or
jge
cli
add
xchg
add
jne
lcall
pop
sbb
add
mov
xor
leave
sub
jg
dec
mov
cmovs
sub
jp
gs
pushf
movsb
and
mov
push
rolb
movsl
cmpsl
pop
sbb
add
mov
shrl
and
add
nop
xchg
mov
push
loop
lret
fisubs
not
jmp
mov
mov
je,pn
and
int
std
inc
dec
sub
fidivl
xor
cwtl
shr
shl
and
imul
imul
ja
pop
dec
xlat
ds
pop
jecxz,pn
adc
inc
jle
mov
jmp
scas
mov
test
mov
in
popf
cmpsb
pop
adc
or
add
cmp
mov
xchg
les
arpl
addl
stos
push
jne
jno
jmp
pop
or
sub
in
and
std
adc
in
xchg
repnz
in
cmc
pop
mov
jne
dec
jge
pop
xor
int3
pop
lret
cmpsb
in
sbb
dec
mov
ret
push
xor
decl
xchg
jnp
lret
push
ret
xchg
loope
fiadds
mov
std
and
mov
mov
in
mov
and
and
call
adc
ret
mov
or
dec
xchg
outsb
or
push
test
sbb
insb
fwait
inc
cmp
dec
push
cltd
aad
sub
and
movsl
js
xchg
cmc
aad
ret
cltd
mov
xchg
sbb
mov
shll
lahf
nop
int3
in
inc
push
cmc
dec
clc
fisttpl
inc
cld
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
push
lock
addl
dec
cmp
xor
shlb
inc
push
daa
pop
fcmovnbe
and
hlt
and
jne
or
lods
inc
pop
xchg
jge
and
mov
fisubl
out
sbb
ja
xchg
mov
pop
lcall
popf
inc
xchg
sbb
mov
js
aas
sub
inc
sbb
mov
adc
cmp
xlat
test
push
insl
dec
jl
cmp
fmull
xlat
inc
lock
xchg
fnsave
or
ljmp
sbb
adc
xor
xchg
inc
lret
pop
pop
shlb
loope
out
pop
xlat
imul
int3
mov
and
jmp
or
dec
loope
negb
pop
lahf
xchg
fwait
xor
aad
add
iret
xchg
adc
add
jo
xor
inc
fcompl
adc
xchg
out
movsl
sbb
aas
pop
fldcw
sbb
xor
sti
inc
inc
es
std
jnp
sahf
daa
inc
and
mov
mov
adc
mov
mov
cmp
ret
imul
jns
xor
or
dec
xor
std
mov
ljmp
stos
fdiv
cmc
ret
orb
repnz
jns
jle
fnstcw
js
jne
and
xor
jl
push
call
es
pop
loope
lcall
pop
pop
out
popa
dec
mov
enter
loope,pt
push
xor
repnz
and
sub
insb
dec
cltd
push
les
out
aad
mov
repnz
push
sub
fldt
shll
je
dec
inc
cmpsb
inc
hlt
into
pop
stos
mov
mov
mov
cmp
mov
inc
pop
addr16
ss
iret
mov
sub
insl
mov
xchg
push
ljmp
inc
sub
mov
into
sub
idivb
lahf
call
mov
dec
mov
xor
dec
js
out
mov
lcall
add
mov
iret
or
daa
push
xchg
push
inc
add
dec
mov
push
fdivr
add
imul
outsb
and
or
sbb
dec
xor
movsl
outsb
and
mov
pop
popf
mov
loopne
cli
push
jne
sbb
jg
add
mov
jle
dec
adc
lds
addl
mov
fdivrs
nop
repnz
nop
fldt
ret
inc
jnp
push
jl
add
stos
mov
adc
mov
mov
outsb
mov
fldenv
xor
mov
pop
add
mov
stos
push
adc
stos
dec
aam
mov
js
sub
xchg
data16
xchg
xlat
push
mov
test
dec
pop
lods
out
imul
mov
iret
add
cmc
popa
aas
cmpsb
or
xchg
shl
sub
inc
and
mov
push
in
test
outsb
and
and
xlat
mov
in
fstpt
xlat
dec
repz
lea
cmc
cmp
cli
data16
ficompl
stc
jnp
fisubrl
fcmovne
inc
pop
sub
hlt
mov
jae
cmp
dec
adc
jle
jns
cmp
xchg
adc
sub
xchg
cmp
lcall
adc
sahf
repnz
and
xchg
mov
mov
dec
ss
notl
inc
andb
adc
jmp
lahf
sub
or
aad
dec
xlat
push
add
adc
sbb
mov
test
mov
shrl
add
pop
ljmp
jl
dec
aaa
addl
jmp
pop
shll
dec
imul
cmp
stc
add
jle
rep
dec
ja
int
push
stc
and
imul
sub
fisttpll
stos
xchg
or
into
fiaddl
or
cmpsl
push
pop
movl
xchg
cmp
subb
jl
sbb
xor
scas
mov
shll
jae
aad
cmp
lock
sub
xor
leave
mov
daa
push
jecxz
test
jns
adc
mov
push
jp
jnp
vpsrlq
ljmp
xchg
pop
arpl
lcall
repnz
loope
push
test
inc
aas
pop
xchg
test
xor
jmp
mov
jge
mov
xorb
fwait
ret
icebp
cmp
jp
add
andl
bound
mov
sbb
arpl
repnz
pop
push
or
xchg
lds
push
sti
xor
fsubs
jge
aam
xor
mov
cmc
adc
push
push
arpl
std
add
imul
add
iret
adc
shr
xchg
xor
decl
or
testb
shlb
fbstp
inc
mov
dec
cs
adc
push
pusha
jns
jnp
sub
mov
jno
sub
add
leave
repz
fistps
enter
outsb
and
cmp
sub
movsb
mov
rcll
push
lcall
lds
xchg
hlt
insl
sbbl
add
jmp
pop
fiaddl
fldl
clc
inc
sub
push
loopne
lock
cld
inc
pop
lcall
mov
jne
and
aas
mov
or
cmp
ss
rcrb
imul
icebp
jg
inc
lahf
xchg
idivb
pop
xchg
in
bound
xchg
es
push
mov
divb
pop
frstor
daa
hlt
rolb
mov
sub
mov
push
fdivl
jne
mov
aad
cli
addr16
push
jns
mov
adc
jg
push
mov
bound
mov
pusha
jge
popf
sbb
cmpsl
mov
cmp
add
std
mov
jbe
adc
iret
enter
add
call
add
ss
xchg
test
pop
aad
std
dec
inc
push
mov
fwait
sbb
sub
paddq
inc
es
mov
mov
iret
stos
loope
inc
mov
loop
in
mov
movsb
fwait
cmp
add
mov
sub
xchg
and
out
icebp
js
shrl
mov
ffree
addb
and
imul
push
out
xchg
cmc
add
inc
mov
adc
mov
pop
mov
push
out
inc
jge
pop
arpl
inc
mov
pop
jge
mov
mov
xchg
add
repz
das
stos
push
adc
mov
movsl
mov
outsl
lods
loope
mov
and
fs
jg
popa
movsb
cmp
inc
xchg
lock
insl
inc
test
xlat
pop
enter
movsb
mov
add
sahf
push
scas
sub
sub
pop
shrl
out
add
jno
mov
cmp
push
mov
jae
das
jp
ja
mov
pop
shr
add
dec
xor
pusha
cmpl
pop
mov
push
push
inc
adc
jmp
fwait
movsl
pop
or
loope
inc
enter
cld
or
and
pop
mov
lea
add
jg
outsb
xchg
sbb
arpl
xchg
ja
leave
movsl
outsl
repz
pop
adc
lcall
cmp
mov
mov
xor
call
insb
movl
inc
pop
sahf
jle
in
lods
fstpl
xadd
mov
pop
add
in
jno
inc
sbb
sahf
sbb
xor
loope
stos
or
xchg
clc
stos
in
push
movsb
push
xchg
leave
and
mov
fcoml
fcmovnu
xchg
lcall
mov
xlat
add
jmp
ret
aaa
sub
fbld
loopne
in
std
mull
fs
out
outsl
leave
jp
dec
lahf
inc
push
push
and
repz
cld
push
int
cs
sbb
or
inc
jo
loope
adc
mov
dec
and
shlb
or
divb
lods
mov
fs
xor
push
mov
add
shll
jb
xor
xchg
les
and
xchg
inc
jle
xchg
leave
sub
jg
adc
cmpsb
mov
jg
sbb
addr16
fcmove
lahf
pop
jl
cmp
nop
out
test
xchg
adc
inc
insb
ds
outsl
pusha
inc
leave
icebp
mov
test
inc
and
dec
push
notl
mov
ja
push
mov
outsb
mov
jge
lock
xchg
imul
inc
jbe
mov
and
push
fiadds
cmp
lock
clc
or
mov
shl
js
xor
pop
jl
jl
out
jns
mov
aaa
mov
mov
mov
sbb
push
outsb
pop
and
mov
mov
sbb
or
cmpsb
call
test
popl
push
cmpsb
jae
jp
xor
push
xchg
mov
fs
fstp
jge
cmp
cwtl
cli
outsb
sahf
sub
scas
cmp
pop
in
xchg
aaa
test
loop
stos
jmp
or
xlat
into
jge
data16
int3
cltd
fs
jno
clc
test
stos
or
pop
shlb
pop
xor
int
or
jmp
mov
jo
mov
shl
push
cmp
out
sbb
flds
xchg
mov
sahf
icebp
cs
mov
sbb
out
jp
jmp
add
es
or
mov
mov
loope
cmpsl
stos
loope
sub
pop
sbb
jb
pop
imul
popa
mov
pop
inc
pusha
jmp
mov
aaa
jnp
xchg
jns
test
mov
aaa
add
sub
cli
fldt
insb
ds
mov
les
push
add
filds
jl
jmp
shl
lea
sbb
test
sbb
scas
sub
not
or
std
mov
xchg
lcall
iret
sub
sbb
mov
pop
dec
sbb
pop
xor
jnp
adc
icebp
int3
push
push
adc
sub
inc
jno
jno
mov
xorb
xor
sbb
xchg
dec
jge
xor
scas
sub
pop
add
add
xorb
movsl
in
enter
sub
jmp
mov
imul
mov
push
jp
add
lret
mov
mov
jmp
and
pmaddwd
xor
dec
sub
aad
daa
xlat
mov
mov
mov
pop
cmpsb
adc
out
addb
hlt
push
pop
movsl
dec
mov
dec
push
sbb
jmp
loop
inc
pop
cltd
fcompl
xor
mov
adc
push
movsb
fdivrl
call
ret
and
or
or
lds
int
adc
into
cmc
and
cwtl
mov
adc
test
cltd
xor
jmp
mov
dec
out
bound
vhaddps
fcomps
xchg
out
das
pop
add
stc
mov
aaa
repnz
push
pop
in
fisttpll
pop
or
sbb
pop
mov
ror
push
cli
flds
inc
arpl
pushf
cltd
mov
inc
xchg
or
orl
out
or
inc
sti
lock
jns
lock
pop
out
dec
mov
jae
and
or
dec
out
inc
add
ret
cmp
push
xlat
hlt
sbb
dec
jle
mov
push
shrl
jl
jmp
pop
out
dec
popf
jl
fimull
test
aaa
cmp
inc
into
jecxz
cmp
negb
or
mov
addr16
in
mov
inc
mov
mov
cmp
fwait
cmp
fiadds
cli
out
mov
dec
stos
bound
jns
xchg
ss
dec
and
pushf
pop
or
sub
jne
jae
scas
xor
cmp
pop
dec
dec
sbb
pop
aad
adc
mov
add
or
pusha
pop
aam
pusha
mov
je
xchg
shll
sbb
mov
push
nop
push
mov
xchg
cli
mov
out
in
outsl
loop
insb
cli
aaa
ret
jnp
loopne
out
insb
and
sub
push
jecxz
xlat
testl
bound
xchg
cmp
mov
inc
sub
jp
pushf
cmp
cwtl
add
jno
out
mov
cld
sub
sub
in
mov
movsl
sub
fstps
cmp
xchg
xor
mov
jno
cmpsl
out
ret
pop
dec
push
fmuls
aam
xchg
pushl
adc
ret
add
leave
test
dec
dec
shrb
mov
cltd
nop
mov
add
xor
das
mov
cltd
out
cmp
cmc
leave
jecxz
jns
pop
push
mov
stc
cmp
xor
iret
pop
in
adc
xchg
lds
lret
push
xchg
sub
in
stos
sbb
mov
imulb
outsb
push
fdivrs
cmp
ss
cli
ss
mov
pop
insb
cmp
adc
xchg
aad
sub
jnp
sbb
adc
xorb
xchg
fwait
jno
test
add
fistpll
mov
or
xor
and
or
mov
xchg
and
es
fsub
jne
inc
scas
inc
andb
push
les
cmpsl
add
cmpsb
aam
cmc
or
dec
lock
xor
test
fwait
pop
pushf
int
dec
push
pop
add
jp
jne
push
sub
mov
loope
mov
dec
mov
mov
outsb
add
mov
jo
inc
scas
and
les
fadd
pushf
push
idivb
push
adc
repnz
and
das
cmp
cs
cmp
fisttpl
inc
popa
mov
cmc
out
mov
push
rcl
test
jo
push
adc
jg
fdivl
leave
adc
dec
ja
and
insb
adc
icebp
mov
adc
dec
pop
pop
mov
lods
sbb
adc
popf
xchg
lcall
mov
sub
push
incl
outsl
fnsave
add
xchg
fwait
xchg
push
cmc
xor
and
push
movsb
mov
sub
rcrb
mov
arpl
fwait
xor
mov
bswap
cmc
rolb
imul
ja
or
int3
outsl
push
adc
pop
shlb
ror
lret
test
xchg
inc
mov
rcrl
push
rol
dec
pop
xchg
in
iret
in
add
mov
int3
mov
mov
jns
sti
pop
push
dec
mov
or
gs
mov
lods
sar
aam
inc
or
sbb
popf
xlat
fcmovu
push
push
and
sbb
dec
loope
mov
jnp
daa
mov
xor
mov
or
nop
mov
test
gs
xor
and
jecxz
outsb
addr16
and
arpl
out
repnz
fdivl
or
cwtl
pop
fistps
xchg
mov
jnp
adcb
xchg
dec
xchg
pop
fnstenv
mov
loope
outsb
fimull
stc
mov
les
jnp
jbe
mov
je
pop
mov
mov
cmp
mov
cmc
mov
cmp
inc
inc
cmp
sarl
shll
add
add
test
xor
in
push
aas
shlb
out
jl
fsubrl
imul
xor
out
mov
xchg
icebp
cmp
cwtl
jo
sub
outsb
lods
out
cmp
inc
sbb
lahf
mov
fbld
jg
sub
jmp
inc
mov
mov
icebp
cmp
bound
push
push
and
push
dec
and
mov
mov
js
imul
push
adc
mov
scas
mov
push
sub
and
or
mull
inc
mov
orb
mov
mov
stos
push
xor
xor
ds
in
jmp
shlb
test
ds
jmp
in
outsb
fs
fsubrl
loope
dec
sub
das
in
scas
mov
mov
fisubrl
mov
dec
ljmp
pop
call
out
push
cs
jle
mov
mulb
mov
mov
xor
mov
adc
push
sbb
sub
and
add
loope
xchg
push
cmc
push
sbb
pop
adc
adc
mul
pop
scas
arpl
mov
fwait
lret
in
fidivs
and
or
xchg
test
ss
mov
aaa
sbb
test
jg
xchg
loop
cli
sub
fwait
jo
pop
cli
stos
xor
or
lds
lahf
and
dec
data16
jae
xchg
nop
xlat
inc
out
cmp
int3
btc
filds
loopne
mov
subl
cli
sub
pop
movl
lock
addr16
lcall
ds
arpl
ret
xor
mov
fildl
push
or
xchg
pop
into
push
sti
scas
cmc
mov
in
sti
sub
lret
inc
jmp
aas
jb
xchg
adc
xor
add
fnstsw
loop
sbb
mov
jg
cmp
pop
mov
fists
popf
shr
mov
dec
pop
sbb
mov
cmc
add
aaa
stos
movsb
cmp
test
jle
scas
push
je
mov
or
xor
lret
data16
mov
sti
or
aaa
sub
mov
lahf
mov
ret
push
aam
and
add
mov
adc
subl
jp
or
pop
dec
mov
push
sub
and
dec
xchg
test
into
mov
mov
notl
ret
leave
std
push
hlt
cld
je
cltd
pop
mov
movups
cmp
cmp
fildl
add
ret
rorl
lea
mov
rclb
enter
dec
push
sbb
inc
push
jne
out
ss
sub
lock
cltd
std
inc
stos
addb
pop
arpl
lds
mov
xor
cmpl
cli
lahf
mov
pop
scas
hlt
adc
movsb
push
mov
in
shl
fs
out
dec
sbbb
aas
mov
jnp
int3
pop
push
imul
test
sbb
lods
jg
add
and
shlb
cmp
shll
insb
outsb
loop
jne
fnop
inc
push
aas
inc
sbb
icebp
scas
sahf
xchg
pop
jge
imul
push
jecxz
mov
xchg
mov
shl
das
bound
test
sbb
scas
push
mov
cmp
jbe
adc
mov
ret
inc
mov
mov
lods
inc
jo
in
mov
sbb
sub
cmpsb
push
pop
cmp
sub
cld
pop
mov
add
sub
loopne
hlt
sbbl
cmpl
xchg
mov
mov
add
sub
out
test
sbb
mov
jg
push
in
lret
dec
jo
outsb
sbb
cwtl
je
scas
mov
jecxz
xlat
push
aas
inc
andl
jno
fnsave
rcll
lock
in
xor
addr16
mov
stc
inc
jae
jecxz
jbe
es
dec
ljmp
fldcw
cs
inc
stos
push
sbb
imulb
out
or
jns
pop
adc
test
inc
mov
je
and
pushl
arpl
sarl
and
xor
pcmpgtw
sub
nop
jns
mov
cld
outsl
adc
cmp
outsb
cmp
inc
sahf
dec
jecxz
cmp
insb
xor
sbb
out
dec
jecxz
subl
arpl
outsb
and
iret
push
pop
data16
push
arpl
outsb
mov
lock
xor
and
ret
lret
outsb
incb
adcb
dec
cld
lea
dec
mov
dec
cmp
ds
cmp
call
fistpl
je
jbe
dec
mov
mov
popa
pop
scas
repnz
jo
cmp
adc
into
xlat
sbb
mov
hlt
pop
add
lods
pop
popf
fcomps
pop
or
xchg
movsb
push
sbb
hlt
sbbb
ds
ret
cmp
mov
les
jge
addr16
xor
imul
xchg
cltd
mov
mov
cmp
fcoml
xor
mov
xchg
or
sbb
shrl
push
mov
test
jne
mov
mul
neg
cmp
lds
and
add
dec
jecxz
jl
jge
fistpl
aaa
adc
xchg
rcrl
push
movsb
popa
or
adc
add
dec
mov
push
shll
adc
fmull
push
mov
and
popf
inc
in
inc
push
outsb
int3
sub
sar
xchg
and
aam
sbb
dec
push
hlt
out
pop
lahf
insb
cmp
inc
adc
dec
iret
mov
adcl
in
cli
jecxz
inc
scas
cmp
daa
shr
cmpsb
mov
imul
xchg
xchg
cmp
jecxz
stc
sahf
out
pop
addl
sarb
xchg
lds
jge
xor
out
xchg
testb
into
imul
inc
lds
push
movsl
jno
push
mull
lret
jp
add
aas
sub
adc
jbe
in
fwait
cs
mov
mov
cmpb
pusha
and
sub
adcb
dec
shrl
push
stc
adc
adc
mov
cmpsb
sti
jnp
sbb
mov
je
clc
in
out
loopne
xchg
stos
inc
jae
inc
testb
fstpt
mov
xchg
scas
inc
sbb
inc
int
jp
int3
mov
add
inc
fimuls
mov
mov
scas
cmpsb
stc
lret
loope
enter
es
testl
xchg
lds
push
das
outsl
out
jle
popf
mov
out
mov
push
add
loope
sti
or
xchg
inc
rorl
dec
and
push
outsb
push
shll
lods
scas
pop
sub
ja
das
jo
nop
fsubrs
jns
stc
add
pusha
pop
or
lods
push
push
dec
aad
imul
push
mov
popa
sub
sub
mov
push
add
add
jb
dec
pop
pop
pop
mov
mov
jmp
dec
xchg
dec
popf
mov
mov
int3
pop
imul
out
jl
pop
and
cmp
pushf
shlb
dec
mov
into
pop
add
mov
lahf
out
int3
out
xchg
sub
cwtl
gs
and
inc
cwtl
adc
sbb
sub
enter
inc
sbb
or
mov
inc
fmuls
in
lcall
cmpsb
dec
repnz
sbb
adc
inc
gs
adcb
movsl
sub
and
cmp
rcll
pcmpgtd
setbe
lods
addr16
das
cmp
shlb
pop
push
inc
xchg
inc
out
sbb
enter
shr
or
lea
push
in
jle
stos
jg
inc
int3
sbb
leave
sub
imul
stc
pop
cmpsb
pop
and
push
cmpsl
jb
test
popf
dec
dec
push
push
out
fs
hlt
movsl
negb
jno
or
pop
sbb
or
or
imul
test
cli
bnd
bound
inc
pop
mov
repnz
push
dec
xchg
mov
sti
notb
adc
push
add
ret
jmp
inc
mov
loope
cmp
or
push
sahf
mov
xchg
ftst
sbb
cmpsl
sbb
es
sub
das
js
sahf
sbb
rorb
mov
aaa
mov
scas
mov
adc
hlt
inc
cmpsb
leave
sbb
xor
jne
xchg
and
nop
mov
fisubrs
mov
cwtl
movsb
xor
lods
mov
mov
movsl
fcmovbe
insb
inc
scas
push
gs
dec
xor
adc
sbb
mov
add
push
xchg
adc
mov
je
movsb
imul
pop
in
mov
jg
cmp
adc
cmc
cmpsb
ret
fisubrs
and
out
jp
inc
mov
push
mov
fcompl
out
loop
jae
jmp
pop
call
xchg
jg
imul
inc
sub
in
loop
stc
sbb
ja
int3
fcoml
clc
out
pop
hlt
push
test
retw
dec
call
sbb
sub
test
loop
mov
mov
aaa
sbb
pop
hlt
mov
add
add
js
sub
xchg
mov
mov
test
push
lcall
repz
leave
xchg
in
sbb
adcl
icebp
hlt
mov
je
mov
into
cmc
sbb
pop
push
bound
daa
sub
mov
jns
in
nop
mov
inc
movsl
movsb
pop
in
mov
mov
sbb
cwtl
fcmovb
mov
test
mov
sub
mov
sub
and
xchg
subb
sub
popf
lcall
inc
xchg
push
push
out
push
cmp
in
jecxz
das
mov
fists
push
movl
sti
rcr
je
dec
adc
mov
push
dec
fsts
jne
add
insb
mov
mov
int
push
das
mov
cmp
mov
out
or
push
mov
mov
adc
jmp
sbb
pop
pop
scas
cmp
divl
add
lcall
loopne
adc
sysenter
xor
lret
leave
dec
daa
push
sub
in
xor
jge
mov
scas
pop
scas
dec
jle
or
mov
push
adc
clc
mov
inc
cli
mul
sub
adc
sahf
scas
cmp
xor
xchg
or
mov
cltd
in
xor
fisubl
lock
push
out
pop
ss
out
sbb
scas
push
clc
leave
stos
jo
pop
sub
jo
and
roll
dec
xor
orb
leave
push
mov
xchg
shrl
push
cmp
aaa
rcrl
mov
sub
xchg
sub
das
and
rcll
fwait
jge
in
push
pushf
jle
fcoml
out
or
outsl
sub
jnp
inc
lret
sbb
cltd
pop
add
cld
andl
rorb
push
cmp
or
out
xchg
cli
cld
sub
repz
add
sbb
mov
int3
dec
add
dec
cli
aad
ja
lret
pop
pop
xchg
inc
clc
inc
rorb
aam
adc
dec
adc
loopne
xlat
xchg
pop
icebp
out
add
pop
jle
jmp
cmp
cmp
push
mov
inc
call
or
jl
jmp
fistpll
jge
inc
scas
std
sbb
push
adc
test
jne
push
mov
mov
lods
xor
test
imulb
inc
mov
dec
icebp
pop
cmpsl
mov
in
das
cmp
ret
aas
cmp
fdivs
addl
lcall
lret
sub
dec
sbb
sub
mov
dec
mov
inc
fstpl
mov
adcb
cli
arpl
or
pop
inc
cmc
adc
inc
cs
pop
xor
mov
repz
fcompl
mov
ret
xchg
mov
mov
in
push
out
pusha
mov
push
jle
loope
test
ror
in
add
ljmp
push
inc
jg
daa
cwtl
xor
and
test
pushf
imul
gs
aam
fnsave
mov
enter
xrelease
repz
pop
sbb
xchg
gs
aaa
fdivp
adc
lock
jp
xchg
pop
and
mov
pop
lods
sbb
sbb
push
sbb
sarb
inc
add
rcrl
jl
adc
mov
ljmp
loopne
push
inc
aad
js
push
and
andb
push
dec
hlt
inc
sbb
mov
mov
fbld
lock
jnp
gs
sbb
sbb
sub
je
jmp
shrl
test
adc
stc
aam
pop
and
jmp
mov
std
sahf
lcall
ret
jo
mul
scas
xor
lock
dec
push
push
adc
shr
stos
inc
ret
cwtl
cmp
add
pusha
aam
in
faddl
push
jne
sbb
push
inc
leave
xor
and
add
adc
scas
jmp
or
cmp
leave
mov
test
jb
das
push
movsl
sub
sbb
cmp
sub
ss
outsl
pusha
insb
rclb
hlt
popa
int
mov
mov
mov
ss
mov
push
jae
test
out
mov
test
scas
push
cmpsb
test
aam
dec
out
push
or
iret
mov
sbb
pop
mov
test
fldt
mov
rcr
push
sbb
inc
xchg
add
outsb
pusha
pop
xlat
andb
mov
adc
testb
or
negb
fnsave
jmp
mov
dec
pushf
rclb
xchg
cltd
sbb
adc
repnz
cmpsb
mov
xchg
cld
pop
sbb
addb
pop
or
movsl
push
fnstenv
lods
push
mov
inc
in
xchg
inc
jne
adc
scas
and
sbb
je
adcl
jle
xchg
jae
dec
inc
adc
dec
or
loop
push
test
lods
loop
sahf
int3
jbe
ljmp
in
ss
mov
mov
pop
scas
cltd
insb
push
sub
or
addr16
int
jns
cmp
je
pop
dec
notb
jmp
or
dec
inc
stos
rclb
ret
xchg
jg
sub
pusha
lds
cmp
shl
scas
or
jl
mov
sti
popa
inc
shll
dec
mov
fld1
jecxz
dec
sub
aaa
mov
cmp
inc
sub
out
adc
mov
and
pop
or
sub
cmp
sbb
loopne
ss
mov
cmpsl
sarb
adc
lahf
out
pushf
and
nop
sub
sbb
lods
push
pop
cwtl
mulb
into
push
sub
xchg
inc
cmp
lret
hlt
ljmp
negb
push
or
fcmovu
sub
ss
and
test
popa
stc
outsl
jo
iret
mov
mov
call
fadd
fwait
out
or
mov
inc
mov
rcll
js
call
push
int
stc
rclb
popa
sarb
push
inc
pop
push
out
aas
mov
push
repz
cltd
jl
icebp
out
popf
enter
fldt
xor
jp
add
dec
sbb
pop
into
insl
adc
sbb
xchg
fs
and
push
sub
fldcw
imulb
or
fists
jg
fsubp
out
fisttps
cmc
popf
mov
jnp
aaa
add
ds
lods
jbe
cmp
into
dec
sbb
adcb
ret
inc
aaa
cmp
in
xor
test
pushl
jo
jmp
cmp
pop
sbb
pusha
or
jns
ret
dec
fdivs
mov
sarl
jno
das
js
mov
aad
and
loope
repz
pop
mov
data16
or
sarb
lret
pop
in
and
cli
movsb
pop
cmpl
in
fwait
or
cmp
je
add
bound
push
jo
loop
aad
xchg
inc
or
in
les
cvtps2pi
mov
adc
repnz
orb
xor
push
das
dec
inc
lds
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
stos
and
or
addl
mov
or
pop
jno
lds
push
cmp
fs
pop
dec
imull
shl
ret
enter
repz
popa
or
inc
push
loopne
xor
mov
sbb
bound
repnz
test
mov
pop
mov
ds
push
dec
sti
mov
mov
lret
mov
inc
xchg
xchg
mov
inc
jb
dec
popa
pop
mov
nop
lret
inc
mov
cmp
mov
insl
fmull
mov
mov
cmp
mov
mov
hlt
scas
aas
addr16
cs
mov
popf
inc
xor
mov
cld
pop
scas
imul
rcrl
inc
pop
das
pop
dec
popf
jecxz
pop
test
dec
ret
xor
outsl
jp
pop
pop
rcrb
sbb
aam
test
inc
pop
pop
xchg
subb
sarl
imul
jle
push
mov
sub
movsb
sub
and
sub
fs
stc
cmp
sub
sub
mov
out
aam
xor
mov
xor
and
sti
mov
jge
setns
and
ss
stos
outsl
xor
outsl
lock
sbb
lods
pop
sbb
rclb
mov
or
cmpl
xor
jb
cs
jle
aad
jmp
dec
push
xchg
inc
andb
xor
sahf
and
hlt
sub
lea
sub
inc
push
mov
mov
sub
sbb
in
cmp
jno
in
nop
push
popf
ss
repnz
push
sub
icebp
fidivl
push
clc
cmp
out
mov
jae
cld
add
cmp
insl
inc
adc
fcmovnu
addr16
cmc
scas
fistl
mov
in
fs
and
data16
stc
loopne
addr16
rolb
mov
into
xor
sbb
or
and
int
addr16
inc
inc
ret
movl
call
dec
mov
pusha
xor
mov
outsl
push
popf
pop
and
mov
fs
push
xchg
xor
adc
shlb
xor
notl
fnclex
idivl
adc
jle
sti
lret
mov
sub
loopne
ficompl
fistpl
insl
in
push
jl
push
cmc
pop
push
addr16
xchg
aam
push
push
addr16
fwait
cs
daa
ja
fs
loope
jbe
out
idivl
stos
jbe
mov
xor
inc
xor
arpl
jp
jno
xchg
jp
push
mov
les
mov
jae
inc
cmp
sub
int
add
jle
and
pop
mov
ljmp
out
xchg
outsl
and
pop
cmp
pop
push
gs
movsl
push
cmc
sbb
les
divl
push
out
xchg
jo
mov
movsb
mov
outsb
jae
icebp
xor
push
sbb
and
dec
scas
lcall
cmc
jo
add
dec
bound
jbe
movsl
push
and
or
dec
mov
lret
and
and
add
fsubs
cmpsl
lahf
jecxz
lret
push
int
mov
cmp
inc
and
test
aaa
mov
fs
out
push
pop
jg
andb
leave
aas
xor
ffreep
std
icebp
mov
or
push
sarl
out
sub
adc
jecxz
pop
dec
mov
fimuls
cmp
shl
push
push
adc
pop
or
jae
or
lea
bound
cmp
out
jge
test
ja
inc
sbb
aaa
push
xor
popf
adc
out
lahf
and
push
pop
or
test
and
mov
ret
aas
repz
ljmp
test
pop
in
pop
cmp
cld
push
mov
mov
jle
lahf
or
out
lret
pop
and
cwtl
leave
fwait
inc
or
jae
sahf
popf
out
out
scas
sub
sub
out
inc
mov
inc
inc
dec
in
sahf
test
push
and
loop
xchg
jnp
fildll
sub
adc
cmp
mov
mov
push
fpatan
sbb
or
fsub
cmp
jne
jl
out
mov
push
or
imul
mov
pop
sbb
or
xor
addb
cmp
mov
sbb
lcall
push
jnp
mov
or
and
xchg
not
mov
adc
test
push
mov
and
arpl
gs
lret
cmp
in
pop
inc
shll
ja
push
leave
sbb
les
push
cwtl
or
dec
lret
mov
jmp
mov
cmpsb
outsb
and
daa
arpl
stos
xor
sbb
addr16
in
dec
outsl
popf
jle
loop
xor
loopne
lret
jbe
or
add
push
int3
xor
dec
pop
xorb
dec
push
dec
cld
out
pop
insl
dec
sub
pop
cmc
add
int
lock
mov
lahf
ds
mov
loope
stc
sub
cmp
scas
ss
sub
mov
xchg
add
cmovno
cmp
je
lea
andb
out
jb
mov
cmpsl
dec
xor
add
xlat
repnz
xor
nop
sub
push
cmpsb
lods
iret
aaa
incb
or
push
movsl
jns
and
adcl
sbb
mov
mov
mov
cmp
xorb
sarb
gs
jnp
int
and
movsl
test
jae
fstps
jmp
iret
push
repnz
out
sbbb
enter
movsb
xchg
push
sub
stc
sub
insb
mov
jne
cmp
das
aad
jo
loopne
stos
jae
shlb
xchg
inc
sahf
jae
ja
fildll
cmp
clc
adc
jne
pushf
aam
int
jb
les
mov
ret
jae
add
imulb
aam
push
ljmp
addl
jge
fidivs
or
pop
cmpsl
pusha
stc
dec
xlat
mov
xorb
test
shll
push
inc
push
ret
ja
pusha
jmp
adc
fsubr
add
jbe
cmpb
sub
outsl
push
int3
cmpsb
lret
out
lcall
stos
mov
sbb
leave
hlt
mov
sbb
negl
inc
in
and
xchg
js
cmc
es
test
movsb
adc
fwait
mov
sbb
das
movsb
jmp
cmp
sbb
lds
sbb
xor
push
scas
js
adc
stc
inc
xlat
rcrl
lods
nop
or
lret
fidivrs
ss
push
fldl
je
or
out
dec
mov
aas
dec
sbb
lds
data16
add
imul
in
push
jecxz
pushf
movsb
scas
jle
fs
dec
fdivr
dec
inc
call
mov
movsb
push
fwait
leave
in
lea
fnstenv
daa
sbb
jp
cmp
repz
movsw
lahf
cld
jge
xchg
mov
jbe
adc
test
dec
mov
and
xchg
test
or
imul
add
inc
jne
das
cmp
cmpsb
mov
push
fistpl
leave
jecxz
inc
cli
push
xchg
mov
test
addr16
adc
scas
das
loop
test
xchg
sahf
xchg
cmp
cmc
ss
clc
aas
mov
notb
js
xchg
aas
xor
out
adc
mov
into
and
cmp
xchg
loope
lcall
test
pusha
ds
sub
xchg
add
jp
mov
lods
ret
sub
test
scas
pop
sub
dec
dec
bound
mov
test
and
xchg
in
jne
imul
fs
arpl
or
lret
data16
vmwrite
adc
jg
ljmp
test
aam
test
sub
mov
fcoml
jge
loopne
ret
hlt
sbb
push
inc
jge
jp
push
rcrl
mov
xchg
in
mov
subb
idivb
dec
into
jecxz
and
jmp
addr16
mov
mov
arpl
jecxz
or
mov
bnd
mov
data16
jnp
and
decb
jb
inc
test
and
lahf
mov
popa
cmc
xchg
mov
mov
test
cmp
int3
fdivs
call
outsl
fdivrs
push
in
out
cmp
mov
xor
cmp
mov
jmp
sti
adc
jge
jae
rorb
lret
daa
negb
mov
mov
inc
pop
inc
inc
lods
int
aas
inc
add
out
add
jl
pop
pop
adc
ret
inc
and
popa
scas
dec
mov
mov
or
xor
push
testl
sarb
gs
movsb
je
idivl
jnp
sti
pop
les
adc
mov
and
ret
int
ds
sbb
lea
repz
add
and
sbb
lcall
out
fwait
lret
adcl
rcrl
fnstsw
sub
das
fwait
adc
in
sahf
call
pop
sti
cld
je
lea
xlat
jl
inc
jmp
adc
mov
loop
inc
ret
bound
ret
psrlq
lret
adc
xchg
mov
fimuls
jae
js
lahf
jo
ja
inc
repnz
fsubrs
cld
xor
push
mov
shrl
push
jmp
sub
in
add
inc
sbb
push
push
insb
fbld
xor
insl
ljmp
push
dec
jns
mov
dec
jg
jmp
aam
adcb
jecxz
sahf
sarl
rcr
imul
arpl
bound
pop
es
imul
sub
incl
iret
or
stc
xchg
addr16
xor
rclb
inc
divb
ret
push
jbe
or
xchg
rol
aaa
aam
sbb
lock
adc
sbb
jmp
fnstenv
scas
cmp
lret
mov
popf
jns
fcmove
or
frstor
sbb
sub
fldenv
cld
and
jo
inc
cmpsb
add
add
out
push
cmc
adc
lret
gs
xor
inc
lds
jbe
adc
xchg
cli
iret
mov
faddl
and
orb
dec
sbb
dec
ss
sbb
inc
push
fmull
pop
adc
jle
jl
rorl
adcb
mov
sub
lods
sub
scas
push
cs
or
xchg
inc
add
adc
xchg
jbe
add
decb
leave
test
hlt
clc
mov
xor
mov
dec
or
mov
pop
addr16
sbb
ss
pushf
ja
jno
scas
clc
dec
adc
mov
outsl
cmp
aas
daa
sub
pop
mov
test
push
loope
xabort
push
push
orl
mov
lcall
cmc
ret
sbb
xor
mov
inc
cmc
lret
pop
shrb
sub
addr16
orb
pop
mov
jae
or
into
cmp
mov
adc
test
dec
test
mov
enter
popf
aaa
inc
clc
mov
sbb
arpl
xchg
iret
xchg
aam
push
and
push
xchg
xchg
push
xchg
movsb
xor
loop
inc
shrl
sub
inc
outsb
cmpsb
popa
cmpsb
repz
in
dec
rorl
adc
aaa
ja
andl
lock
fistpll
jae
or
cmp
sbb
jns
mov
fs
and
adc
enter
movsl
mov
mov
xchg
mov
mov
es
mov
sti
adc
xchg
sub
inc
sbb
sbb
dec
mov
inc
cmc
sub
in
pop
leave
or
sbb
call
aad
int3
lods
mov
lods
jle
adc
stos
mov
test
das
sbb
into
pop
insl
cmc
fadds
int
mov
dec
int3
add
xchg
add
insb
mov
push
arpl
andl
jne
xor
fcoml
cld
cld
jmp
scas
sub
loopne
xchg
in
fdivr
sub
jbe
in
or
std
add
stos
sub
mov
xchg
add
scas
roll
inc
je
negb
cwtl
lcall
andl
arpl
mov
out
leave
mov
dec
and
ja
outsb
cmpsb
mov
jne
lahf
jmp
aam
push
xor
movsb
mov
shlb
cmp
sbb
push
sub
push
into
cs
subl
pop
cmp
icebp
pop
cmp
xchg
adc
jecxz
dec
jno
testb
xchg
xchg
and
dec
pop
scas
repnz
gs
cmpsl
mov
cli
rcll
sar
inc
sbb
jmp
aam
gs
js
hlt
dec
add
sti
je
push
sub
mov
pop
rorb
pop
sahf
movsb
dec
sbb
ret
sti
mov
inc
xchg
or
jmp
mov
imul
cmpsb
push
stc
mov
enter
outsl
mov
xor
cmp
sub
aas
lret
sbb
ljmp
jno
push
jg
sub
ret
je
ret
xor
add
sbb
jns
and
andl
mov
add
lds
pusha
loope
pusha
mov
add
xchg
mov
fdivs
repnz
pop
imul
sbb
and
cmp
xlat
fdivl
xchg
movsl
in
int
or
imul
pusha
lds
adc
data16
dec
and
enter
jmp
mov
xor
pop
push
push
or
xor
cmpsb
cli
add
clc
insb
in
push
push
cmp
loop
adc
xchg
aas
ret
jbe
dec
inc
jbe
jbe
pop
pop
xorb
xchg
jae
xchg
pop
and
arpl
leave
les
in
aas
ss
pop
add
mov
jbe
pop
sbb
xchg
mov
or
mov
push
je
pop
pop
test
inc
rcrb
mov
movsl
pop
dec
push
push
pushf
push
jg
imul
fdivrs
hlt
movsb
cmp
pushf
sarb
cmp
out
incb
mov
mov
xchg
pop
inc
jle
sbb
or
jg
or
jnp
into
pop
pop
push
rclb
xchg
cltd
ret
test
xchg
mov
adc
xor
xchg
jmp
stos
jge
mov
cltd
lret
cs
mov
jo
cmp
dec
insb
daa
adc
sbb
cmpsl
jl
jecxz
mov
mov
jmp
pop
push
pop
dec
daa
ja
push
sub
popf
jae
jne
cmpsb
loopne
mov
sbb
ror
shr
arpl
lods
int3
mov
or
add
popf
jl
imul
xchg
hlt
std
negl
sarl
rcrb
sbb
aas
sbb
inc
cmpsb
mov
or
push
jno
mov
mov
dec
addr16
push
lods
cmp
mov
xchg
aad
scas
push
cmp
lret
je
pop
jge
fwait
cmc
fnsave
mov
or
xchg
xchg
orb
mov
mov
outsl
or
ror
shl
movb
iret
stos
mov
inc
push
sub
test
mov
mov
sub
push
cmp
call
int3
push
adc
xchg
push
stos
xor
sub
jb
daa
push
jg
repnz
repnz
movsb
add
pop
fadd
js
rolb
lea
adc
es
push
mov
push
xor
add
push
das
mov
jg
scas
test
pop
adc
adc
test
int3
mov
cli
push
imul
repnz
imull
addr16
sahf
sub
mov
push
inc
pop
ret
sti
das
push
enter
insb
xor
adc
out
movb
xor
dec
cmc
and
out
movsb
xchg
xor
and
cwtl
in
fidivrl
mov
loopne
add
and
aad
sbb
inc
inc
pop
xchg
or
push
cmpsl
rclb
loopne
lds
addr16
es
imul
mov
pop
fwait
cmpb
fcompl
mov
and
fadds
jmp
pop
xor
cmpsb
aad
or
jl
addr16
xchg
add
push
mov
loope
nop
dec
dec
dec
cmp
scas
pop
cwtl
sbb
shrl
fstpt
loope
lea
imul
xchg
add
cmp
leave
cmp
pop
ss
rolb
testl
hlt
mov
test
into
mov
and
jge
outsb
mov
loope
sub
ret
mov
add
aaa
mov
push
mov
sbb
rcll
mov
and
jge
push
sub
cmp
andb
je
pop
xor
jb
ret
ret
movsl
cltd
sbb
push
xor
add
mov
movsb
mov
mov
int3
je
ljmp
jmp
xchg
popf
les
aad
cwtl
mov
fildl
outsl
fdivrl
dec
vunpcklps
outsb
bound
ret
pop
fsubrs
das
aaa
lods
sub
sti
leave
jne
mov
sbb
xchg
icebp
or
cmp
jb
mov
outsl
pop
and
add
in
fsubrs
mov
jns
inc
fnstsw
cmp
cmp
das
or
sti
xchg
pop
mov
jp
test
dec
lods
pusha
mov
sub
in
lods
cmc
dec
xchg
test
fidivl
cld
pop
fisubs
aas
insb
and
inc
adc
pop
mov
bound
add
cmp
jge
jecxz
enter
out
stos
xlat
rcrb
inc
sti
cmp
fdivrl
pop
mov
cltd
shl
adc
mov
roll
rcrb
jmp
sbb
rolb
mov
stos
xchg
ret
inc
sbb
lds
sbb
or
sbb
xlat
pop
sub
sub
lds
daa
jne
aad
xchg
imul
insl
dec
out
xor
jno
pop
sub
hlt
gs
add
adc
aad
push
pop
ljmp
mov
jge
hlt
and
test
repnz
or
scas
sub
cli
out
inc
shrl
test
add
fwait
mov
in
dec
cld
loope
mov
int
dec
frstor
xchg
aad
jge
sbb
nop
aam
in
clc
repz
or
dec
sbbl
pop
out
fsubrp
decb
incl
fnstsw
jl
mov
cwtl
lds
push
fiaddl
test
dec
xchg
and
ljmp
shl
dec
add
xor
hlt
int
aam
movsl
cmpsl
xor
mov
loope
dec
jl
insb
ja
insb
test
adc
jg
ret
popf
jmp
leave
mov
mov
imulb
nop
dec
leave
mov
popa
pusha
push
push
lea
mov
mov
xor
inc
ljmp
lahf
jg
in
jo
lahf
mov
cs
mov
dec
and
rcl
mov
mov
mov
sbb
inc
sti
fsubs
xor
mov
jg
jnp
fwait
mov
in
cmp
jns
test
jb
push
dec
push
iret
xchg
inc
leave
sbb
pushf
lods
enter
dec
jns
jb
mov
hlt
adc
mov
inc
sub
add
pop
pop
movsb
mov
shrl
bound
fs
cwtl
movl
fldcw
xchg
fdivr
xor
test
pop
mulb
jo
fldl
sub
out
cltd
ja
and
cmp
dec
jmp
xor
push
hlt
jb
sbb
cmp
adc
dec
aas
int3
add
or
or
cli
ss
xor
and
or
mov
xor
sbb
dec
cli
ss
mov
and
push
sahf
and
mov
out
jnp
xor
lods
jns
cmp
shrb
sub
shll
dec
std
sub
scas
addr16
sbb
or
stos
xor
jbe
mov
and
test
les
outsb
rorl
pop
loope
adc
push
sub
add
lcall
mov
sbbl
add
mov
data16
cmpsl
aas
aam
jne
pop
jmp
movsb
cmpb
push
dec
xchg
aas
push
push
add
sbb
stc
pop
mov
ja
mov
test
dec
iret
fsubrl
negb
mov
jb
test
fidivl
pusha
xor
loope
sub
xor
sbb
mov
addr16
popf
xor
jle
jp
imul
loope
xchg
sub
sub
je
int3
loopne
leave
xor
out
or
fildl
dec
dec
fisttps
push
inc
fcmovnu
adc
adc
lahf
dec
xlat
and
and
out
ss
idiv
and
and
lods
mov
pop
outsb
pop
jge
rcr
and
dec
fwait
aaa
sbb
mov
dec
jge
scas
push
or
out
sub
or
shll
xor
add
mov
sysexit
in
loopne
jp
and
shll
xor
cli
dec
pop
aaa
xchg
mov
out
mov
mov
into
sbb
jnp
mov
inc
js
mov
out
and
or
push
xor
and
popa
and
lods
bound
pop
mov
mov
xor
xchg
push
adcb
and
popf
bound
push
repnz
pop
loop
push
mov
dec
into
stc
imul
jnp
fildll
lods
hlt
mov
cltd
je
cmc
int
sbbb
xor
dec
or
outsl
lahf
lret
mov
push
sbb
test
mov
fidivl
and
es
xor
lods
test
xchg
xor
xchg
adcb
dec
push
lea
ja
fimuls
idivl
enter
nop
sbb
sbb
dec
sub
repz
or
push
pop
cmpsb
lret
popf
xor
dec
addl
fwait
sbb
cld
xor
xor
out
ja
aad
les
cmpb
and
pushf
into
scas
add
add
xor
cmp
loopne
adc
test
cwtl
sub
mov
orb
mov
pop
cmpsl
sbb
inc
sbb
and
lds
stos
xchg
sti
mov
orl
gs
out
or
divl
mov
aam
jecxz
das
xchg
mov
dec
mov
push
xor
lcall
cwtl
out
and
inc
ljmp
test
mov
jge
insb
divl
cmp
jo
xchg
lods
or
data16
add
adc
ja
adc
mov
out
fisttps
ret
xchg
loop
stos
pop
cmp
inc
lcall
leave
call
mov
or
in
cmpsl
pop
sbb
inc
sbb
in
icebp
in
jp
and
push
test
jo
lea
push
ret
mov
fcmovnbe
dec
imul
int3
pop
jbe
mov
out
xlat
or
sub
mov
push
inc
inc
inc
dec
jnp
ret
es
push
pop
dec
lret
mov
fistl
ja
add
or
and
je
sti
cwtl
mov
mov
insl
lcall
lds
scas
sbb
mov
movsb
xchg
lds
out
pop
push
je
mov
inc
gs
pop
lret
cmpsb
adc
jns
pop
inc
stos
stc
lods
jno
mov
cmp
rcrb
jp
mov
mov
leave
xchg
sarl
adc
out
popa
xchg
call
jnp
add
insb
into
sbb
pop
lds
mov
jae
push
fmuls
push
repz
loop
fidivrl
bound
movsb
push
inc
mov
pusha
push
xor
pushf
or
inc
dec
xlat
xor
std
mov
pop
arpl
lcall
int
mov
mov
es
popf
or
aas
xor
test
inc
push
xor
and
cmp
addr16
mov
loopne
pop
iret
rolb
pop
or
leave
and
enter
push
sahf
out
in
jae
push
xchg
jg
test
push
in
xlat
mov
inc
pop
dec
and
mov
aad
jge
clc
fidivrl
add
sbb
push
lods
cmpsl
testb
cmp
inc
cmp
frstor
data16
sbb
cmp
filds
enter
xlat
rclb
nop
xchg
jle
fsts
ljmp
adc
mov
clc
jmp
ret
push
int3
inc
daa
stc
or
je
test
les
add
divl
push
jno
imul
out
xchg
inc
ljmp
push
outsl
repz
or
subb
dec
cli
xchg
push
jns
or
pop
adc
mov
lcall
push
inc
adc
cwtl
xor
ret
in
ss
lret
outsb
les
movsb
test
rol
ficompl
jle
cltd
adc
cwtl
xchg
popf
shll
mov
setp
cmc
push
jo
push
aas
xchg
repz
push
xor
les
or
fidivrs
jb
add
sbb
dec
pop
fs
aas
outsl
inc
ds
and
jecxz
lret
outsb
adc
clc
in
pop
jb
pop
cmc
adc
push
addr16
test
gs
or
sarl
mov
xchg
inc
daa
sub
mov
andb
imul
inc
add
mov
xchg
js
test
and
cmpsb
std
arpl
les
test
xor
mov
and
push
or
pop
sub
into
add
mov
sub
xchg
mov
cmpsb
and
pop
popf
mov
into
adc
or
xchg
shrl
add
call
repz
adc
inc
pop
pop
push
fs
pop
cwtl
pop
nop
xlat
push
sub
xchg
push
in
div
jecxz
outsl
decl
pop
cs
pop
add
popf
ja
in
mov
lret
aas
jmp
sbbl
out
xchg
loope
jb
xchg
outsb
gs
loope
adc
xchg
das
hlt
les
gs
mov
dec
dec
addr16
cli
std
cwtl
stos
mov
xor
mov
jns
icebp
mov
mov
cmp
mov
jae
sbb
or
lea
insl
outsb
subb
xor
shl
inc
jmp
cmp
inc
hlt
sub
or
dec
ja
test
push
push
xlat
or
sbb
sbb
mulb
pop
cs
push
dec
push
mov
xor
xor
out
push
stos
cmp
cmp
movsl
add
out
in
bound
dec
sub
ret
cmc
lods
adc
push
sbb
out
xchg
cmc
leave
jp
sub
push
push
je
fisttpll
dec
clc
ret
jns
or
lret
dec
pop
cs
call
stos
mov
mov
repnz
jae
push
cld
imul
mov
inc
adc
int
ret
mov
mov
popf
enter
mov
aad
or
xchg
pcmpgtw
xor
sbb
fs
dec
inc
mov
or
xchg
push
ljmp
sub
stos
cwtl
mov
ret
shrl
arpl
jnp
outsl
outsb
outsb
sbb
inc
push
ret
or
inc
adc
imul
push
lods
jle
lret
cmp
push
push
jne
push
fcom
lods
adc
ja
out
pop
lret
sub
mov
sbb
cmpsb
subb
or
cmp
out
and
rclb
scas
inc
add
outsb
add
push
ret
xor
repnz
push
dec
cltd
mov
and
fiadds
or
outsb
addr16
mov
addr16
test
xor
out
scas
xchg
test
inc
xchg
mov
nop
test
jge
loope
jl
inc
mov
in
cmp
lods
loop
hlt
out
gs
pop
jnp,pt
jbe
dec
dec
jg
push
dec
push
rcrl
lods
aad
or
mov
sbbl
inc
jp
jnp
dec
jnp
sar
jmp
scas
subl
data16
movsb
or
jno
mov
push
out
adc
fimuls
push
push
sub
or
or
icebp
test
xor
push
fs
dec
movsl
imul
push
cmc
fldenv
das
xchg
pop
push
xchg
jp
ret
push
scas
ss
ja
mov
cmc
add
jl
sti
dec
adc
cli
shrb
xchg
xchg
aam
sub
int
xor
inc
add
inc
icebp
jns
in
imul
out
or
or
mov
or
stos
and
sbb
stos
and
xchg
enter
test
nop
push
dec
dec
lret
xchg
dec
fsubrl
cmp
pop
adc
add
jns
adc
pop
sub
cmc
cltd
mov
into
add
xor
lods
das
push
adc
jne
inc
mov
xchg
hlt
arpl
or
xchg
sbb
pop
sbb
loopne
shlb
lods
fs
mov
cmpsb
xchg
push
popf
push
and
push
pusha
push
ret
scas
sti
add
push
repnz
ja
cmp
addr16
movsb
roll
sbb
adc
hlt
sbb
ret
mov
out
and
lcall
cmp
fists
fcompl
in
js
pop
cmpsb
mov
pop
fstp
idivb
int
test
adcb
push
imul
fidivrs
xchg
into
pushf
mov
sbb
jle
pop
ret
in
and
lock
rolb
cmc
pop
repnz
ret
sbb
add
lods
fwait
addb
xorb
cmpsl
sar
movsl
pop
push
lods
and
mov
cli
popf
push
or
loopne
movsl
or
sub
xor
mov
in
jmp
imul
fcmovu
testb
add
adc
mov
mov
pop
in
push
and
sub
lret
sub
or
mov
jmp
in
and
mov
sbb
xchg
sbb
int3
xchg
out
push
data16
mov
ds
push
into
adc
cmp
stos
addb
jmp
xlat
push
hlt
sbb
inc
jbe
mov
in
cmp
and
pop
push
sbb
sti
icebp
xchg
pop
push
sub
pop
xor
sub
out
push
lahf
add
cmp
fistl
punpckhdq
mov
in
stos
sti
and
sbb
adc
bound
enter
jmp
int3
push
enter
or
pushf
dec
mov
mov
dec
clc
iret
pop
out
push
lret
js
into
lcall
dec
sahf
dec
int
js
dec
cli
pop
push
mov
or
out
lahf
mov
in
mov
dec
cwtl
push
jecxz
sbb
lea
cltd
sbb
loop
outsb
iret
inc
fwait
es
in
rcl
push
jns
and
cld
mov
mov
dec
out
pop
shlb
popf
inc
aam
addr16
lds
add
push
loop
lock
mov
enter
mov
adc
xchg
xlat
add
sub
xor
and
cli
ljmp
or
pop
shrl
sbb
mov
int
test
loopne
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
dec
mov
ds
addl
xchg
mov
daa
sbb
imul
out
sbb
fcmovnbe
shl
pop
dec
mov
popa
cli
sub
sarb
mov
or
popa
xor
cmp
mov
and
or
or
pop
fistpl
loopne
sub
sarb
jl
out
push
dec
xor
setno
add
adc
in
inc
add
cmp
cmpsb
xchg
bound
jl
fmul
or
mov
imul
movsb
cmp
scas
and
sbb
jns
jno
sbb
xlat
in
xor
cmp
mov
outsb
mov
movsl
cmp
in
es
cmp
sbb
inc
jmp
jge
lods
inc
and
test
mov
jp
cmp
mov
movsb
mov
xchg
int
outsb
adc
mov
fs
jns
leave
xchg
imul
pop
and
xor
xchg
mov
mov
imul
out
rcrb
xor
stc
fwait
shlb
pop
fnstcw
dec
movsb
jnp
mov
stos
lret
js
movsb
sahf
lret
mov
cmp
mov
push
das
mov
and
test
lret
add
cmc
sbb
push
mov
push
adc
and
aas
add
ljmp
lcall
test
aad
xor
push
add
jmp
rcl
popa
test
xchg
push
sbb
stos
mov
in
mov
out
pop
xchg
dec
in
into
mov
pop
cld
scas
int3
js
out
cltd
mov
inc
popf
push
push
inc
movsb
mov
xchg
add
mov
inc
rolb
mov
lahf
fisubrl
xor
enter
pop
inc
lret
sbb
fisubs
stc
mov
pop
xlat
adc
or
dec
xchg
jecxz
je
mov
aad
aad
sbb
and
cmp
in
inc
clc
adc
jmp
loopne
adc
and
popa
loopne
sbbl
sub
mov
mov
lahf
jecxz
mov
xchg
adc
mov
lock
mov
adc
aam
aad
aam
xor
out
enter
fs
call
jge
xchg
mov
and
and
outsl
ss
dec
mov
divl
loop
pop
mov
mov
or
repz
sti
outsl
dec
stc
cltd
mov
sub
xor
cmpsb
xchg
arpl
adc
lcall
mov
gs
add
loope
out
fmuls
dec
mov
outsl
adc
cltd
loop
ret
ret
jne
adc
mov
aas
jge
repnz
je
cli
lods
outsb
pop
test
outsl
push
jle
daa
mov
mov
pop
popa
fwait
test
cmp
push
cli
inc
dec
add
push
add
outsb
mov
push
dec
js
gs
jmp
ljmp
imul
scas
add
inc
push
add
dec
cmp
mov
adc
lods
and
mov
js
bound
sub
subb
xchg
shll
fwait
sbb
clc
lock
jp
int3
pop
mov
inc
mov
in
adc
or
add
or
pop
sbb
shlb
cs
popa
andl
cmp
adc
xchg
sbb
ljmp
rcrb
sbb
pop
lods
adc
loope
jge
xchg
sbb
mov
test
sbb
sahf
and
adc
cmp
cld
xor
fldl
mov
lret
inc
insb
adc
popa
xchg
mov
push
into
pop
or
dec
jge
add
int
jo
add
sahf
or
sbb
sbb
sbb
gs
in
sbb
sub
les
sub
mov
inc
imul
xor
mov
cs
pop
aad
adc
mov
fildl
mov
inc
pop
push
pop
sbbb
mov
adcb
fbstp
pop
daa
aas
pop
shll
push
scas
mov
shlb
dec
xor
mov
aad
mov
mov
loop
mov
rorl
outsb
fstpl
add
dec
push
je
mov
inc
fsave
out
cltd
mov
inc
mov
mov
inc
add
jne
or
sahf
mov
iret
cs
mov
dec
sbb
jmp
xchg
dec
xchg
mov
leave
cmc
call
lock
lret
sub
mov
popf
cmp
sub
mov
mov
je
pushf
arpl
fstl
loope
add
mov
pushf
in
sub
cmp
mov
out
dec
xor
fdivrl
adc
or
cli
push
xor
addr16
into
loopne
inc
in
jo
jmp
scas
lret
dec
adc
js
cmpsb
lret
xchg
push
mov
test
repnz
xchg
inc
sub
rcrl
call
xor
jmp
cmp
xor
out
push
in
mov
adc
adc
int3
push
mov
adc
adc
in
sub
repz
iret
loope
mov
ret
pushf
aam
fsubr
and
xchg
in
fldt
xchg
movsl
sahf
orl
loopne
mov
ds
or
mov
cmp
cmp
xor
fbstp
imulb
fisubrs
shlb
adc
or
hlt
inc
mov
adc
sub
movsl
inc
mov
das
adc
mov
cmp
into
jno
out
loop
inc
add
fsubp
cld
daa
sbb
out
sub
jno
or
mov
lods
imul
mov
adc
sbb
and
in
sbb
dec
push
dec
rclb
sbb
dec
sub
mov
xchg
pop
ficomps
sti
xor
data16
popa
insl
leave
xchg
and
mov
test
dec
stc
mov
push
sti
ret
sub
dec
loope
cmp
or
cmp
leave
cmp
mov
in
pop
pusha
test
aas
in
subl
fnstcw
addl
fimull
xchg
je
mov
and
add
mov
sub
rol
ret
int
pop
xorb
dec
loope
mov
mov
xchg
call
mov
mov
mov
pop
inc
arpl
enter
push
iret
jmp
and
xchg
fdivs
insb
ss
test
xor
sarl
imul
ljmp
mov
xor
pop
in
iret
jbe
cmp
sub
rcl
popf
adc
aaa
push
scas
ret
decl
push
mov
dec
arpl
mov
push
pop
aas
and
hlt
outsb
aaa
push
and
ss
pop
ja
sub
cltd
into
shl
adc
cmc
add
lea
pushw
mov
insb
lret
pop
cld
inc
xchg
push
xchg
and
repnz
scas
or
aam
fs
addr16
or
shlb
das
add
leave
in
lods
stc
mov
mov
inc
cmc
aas
enter
je
mov
cmp
mov
mov
fldenv
scas
ja
pop
nop
arpl
daa
aas
pop
ret
pop
stc
xchg
adc
inc
pop
jecxz
flds
lea
and
es
in
add
jnp
pop
outsl
movsb
addr16
add
jmp
and
lcall
mov
insb
push
dec
sub
pusha
pop
loopne
loope
data16
sbb
and
pop
test
inc
arpl
mov
popf
push
add
cwtl
pop
insb
leave
mov
push
sub
ljmp
test
mov
inc
xchg
cmp
jg
jl
push
or
pop
sbb
movsb
jno
or
andl
adc
arpl
repz
cli
bound
sub
stc
xor
mov
push
pop
mov
lea
inc
lods
sub
cltd
jo
in
sub
push
mov
fcompl
clc
mov
and
mov
sub
jle
cmp
cmp
pop
add
push
dec
das
rorl
xchg
out
xor
pushf
cmpsb
mov
push
imul
push
dec
pushf
hlt
bound
adc
pop
bound
je
fildl
fidivrs
enter
cltd
insb
pop
scas
push
pop
or
pop
adc
dec
outsb
loope
clc
pop
xor
jns
jnp
inc
lahf
lea
sti
xchg
jns
andb
xchg
lock
in
xor
loope
xor
jns
flds
hlt
and
shlb
mov
jp
bound
xchg
or
dec
lods
cmp
loope
mov
sub
jae
and
insl
fwait
cmp
xchg
jne
int
mov
test
sbb
imul
in
sti
pop
lcall
push
push
add
ret
ljmp
stos
cmpsl
xchg
xchg
dec
sub
push
pop
push
mov
out
fwait
mov
push
les
lret
and
and
call
pop
jp
ja
mov
pusha
cmpsb
movsb
jae
rclb
ret
into
nop
jns
pusha
push
mov
dec
jmp
jg
mov
bound
in
xor
mov
movsb
out
test
lret
pop
cmp
rcll
cmc
int
stos
mov
pop
jge
repnz
mov
mov
stc
mov
clc
cmp
dec
call
mov
cwtl
jno
adc
idivl
out
pop
mov
sbb
pop
dec
scas
mov
rcr
outsb
push
dec
test
imul
sub
xlat
pop
les
ret
enter
xchg
push
loope
mov
jno
sbb
mov
jmp
inc
jnp
jno
pop
sub
dec
aad
or
pop
or
sub
out
inc
push
dec
mov
or
popf
mov
sbb
fwait
into
pop
jae
adc
adc
pusha
out
incb
add
int
sub
aaa
addl
inc
shlb
ficomps
and
jne
mov
dec
mov
popa
mov
pop
hlt
aaa
ja
or
rclb
jno
into
inc
mov
shlb
cmp
ss
pushf
sbb
pop
cli
adc
push
repnz
xacquire
popa
repnz
add
in
outsb
pop
mov
cli
rcrl
cmp
jb
cwtl
negb
jp
sbb
and
pop
ljmp
outsl
test
sbb
fimull
icebp
int3
je
mov
stos
fisttpl
push
in
jle
test
pushf
pop
xchg
jmp
push
push
sbb
inc
shrl
fstpt
sahf
jmp
ja
aad
rcrb
sub
setne
std
call
sbb
adc
int
and
aad
data16
call
pop
push
aad
inc
mov
sbb
xchg
dec
test
lods
jp
loop
or
insb
ficomps
dec
pop
scas
push
jo
sub
cmp
cmc
add
add
out
test
adc
arpl
test
insl
mov
xor
popf
inc
sub
imul
xor
ret
xor
aad
push
xchg
adc
shll
adc
addr16
and
or
xchg
xlat
dec
stc
in
lahf
mov
andb
push
add
movsl
push
and
clc
sti
in
lds
adc
and
mov
or
mov
cmp
dec
pop
out
dec
push
and
adc
insl
mov
rolb
add
add
jmp
add
lcall
mov
in
mov
mov
loop
mov
in
pop
ss
mov
popf
or
cmpb
sub
mov
loopne
and
nop
push
call
mov
stc
ficoml
add
lret
leave
add
aaa
movsl
es
testl
jb
jl
jne
inc
pop
mov
pop
mov
cs
mov
movsl
mov
fmull
cmpsl
pop
lock
inc
add
xchg
jmp
xor
or
fstpt
adc
mov
sbb
push
adc
rclb
lret
aaa
movsb
ljmp
jmp
fsubrs
or
push
xchg
nop
cmp
test
xor
cmp
xor
xchg
add
arpl
xchg
push
mov
jbe
cwtl
fmul
sahf
jmp
std
pop
inc
iret
or
mov
dec
sub
popf
mov
outsb
pushf
xchg
clc
les
arpl
xchg
dec
sbb
js
inc
testb
std
lds
outsl
clc
js
test
out
mov
inc
outsb
sarl
dec
inc
adc
ds
rcrl
add
jge
lcall
movsb
cmpsl
inc
xor
ja
dec
test
mov
mov
lcall
pop
add
in
cld
inc
rcll
jp
jns
mov
sub
loop
pop
ljmp
scas
add
mov
fwait
ljmp
ljmp
pop
sub
leave
inc
leave
jns
sub
ljmp
xchg
mov
outsl
add
push
mov
sarb
pop
call
push
inc
cmpsb
pusha
pop
imul
fiadds
push
push
push
into
mov
je
test
lret
inc
sub
dec
sbbl
mov
and
inc
fsts
xchg
jb
and
mov
les
popa
and
xchg
inc
fs
jmp
add
ds
and
aam
push
movsb
push
and
fbstp
adc
stos
out
int
xor
mov
jmp
stos
jmp
xor
imul
addr16
ss
outsl
push
fistl
popl
mov
push
sub
jmp
into
sbb
jp
or
jge
and
sub
imul
shrl
nop
out
mov
arpl
add
push
in
xor
push
mov
int3
test
dec
sub
pop
pushf
negb
test
xchg
pop
clc
jno
in
nop
loop
adc
jp
fadd
fs
dec
fsubl
mov
mov
std
sbb
sahf
sub
mov
xchg
jmp
test
paddusw
pop
mov
dec
int
inc
xchg
fldt
iret
movsb
out
ror
mov
mov
lea
mov
pop
adc
movb
subl
dec
fsubr
outsb
bnd
lea
mov
test
add
mov
cmp
fidivs
out
cmp
fs
cmp
adc
sub
scas
in
ret
ljmp
sub
pop
loope
push
mov
mov
cmp
cmpsb
and
xlat
arpl
ret
pop
int3
jbe
fidivs
jp
or
in
dec
cmpsl
cwtl
and
jg
mov
repz
pop
fmull
out
mov
mov
stos
inc
jle
or
fidivs
call
call
loope
inc
int
push
mov
and
std
rol
push
xchg
rcrl
stc
or
out
push
hlt
mov
cli
popa
push
mov
dec
pushf
out
loope
xchg
or
mov
aad
xor
sub
ret
jg
into
cmp
add
xchg
inc
pop
jle
out
xor
in
mov
mov
xchg
add
ret
jns
pop
xchg
test
sbb
sahf
push
ret
mov
fwait
daa
out
jl
rolb
or
icebp
and
dec
dec
shlb
lea
mov
push
push
imul
jle
or
jecxz
or
sbb
gs
sahf
aam
jle
clc
subb
bound
test
push
out
mov
and
xchg
cmpsl
maxps
jno
sub
dec
xchg
sub
cmp
or
fwait
xchg
push
gs
pushf
mov
cmp
addb
lret
mov
je
ret
test
in
pusha
cmc
jl
je
ret
fs
inc
cmp
test
push
sbb
les
adc
mov
ret
push
xchg
add
rclb
cmp
js
jbe
push
lods
xchg
or
jle
pop
je
mov
adc
and
push
mov
push
clc
jnp
mov
lcall
xchg
jns
gs
les
xchg
sub
pusha
xor
pop
bound
cmp
jmp
pop
mov
popa
add
daa
inc
mov
add
dec
cmc
idiv
divb
dec
cld
ljmp
popa
popa
std
es
pop
cmpsb
adc
push
gs
sub
mov
cltd
pop
dec
loopne
jecxz
lock
or
mov
push
pop
call
jge
mov
lods
scas
int3
sbb
das
es
ja
iret
mov
mov
ret
data16
dec
mov
in
popf
and
jno
out
and
pop
xchg
inc
cld
dec
ret
cltd
jl
mov
pop
pop
cmp
aam
dec
ljmp
imul
sbb
movsl
lods
aaa
mov
jae
or
sbb
rcr
stos
add
jo
push
ficoms
mov
mov
pop
fs
leave
or
sbb
lahf
lods
out
lock
subl
cli
mov
sbb
adc
push
ljmp
dec
test
je
mov
or
push
push
mov
xchg
pop
out
jge
xlat
push
jnp
out
shrl
enter
add
hlt
stos
sub
dec
dec
jo
push
xchg
mov
aam
xchg
cwtl
aaa
divl
loop
mov
mov
pop
mov
stos
ret
adc
cmpsl
in
cli
mov
sbb
sysenter
cld
add
call
dec
cld
iret
pusha
lcall
sbb
or
jne
inc
dec
pop
scas
fwait
rorb
in
sbb
mov
sarb
mov
in
cmp
push
jmp
and
jae
cmpsl
in
pop
imul
xor
xchg
jne
jb
stos
mov
pop
sahf
jbe
cmp
adc
push
push
or
imul
nop
popf
repnz
sti
and
add
xor
js
in
daa
inc
xchg
cmpsb
mov
sub
xor
or
inc
jbe
pop
das
push
dec
cli
loope
mov
inc
dec
test
jo
scas
sub
es
mov
fwait
dec
into
iret
test
add
ja
iret
inc
mov
add
lahf
mov
imul
lods
xchg
call
adc
or
add
pop
jnp
fiaddl
and
stc
notb
mov
inc
xchg
push
mov
jne
dec
mov
push
int3
outsl
inc
mov
daa
dec
cmp
xor
adc
push
rclb
mov
xchg
mov
or
adc
into
dec
pop
out
orl
mov
int3
cmpsb
push
in
test
repnz
push
lds
pop
jne
das
sub
leave
mov
shl
dec
sbb
cmp
insb
addr16
jp
mov
test
pop
cs
pop
loopne
mov
test
push
push
mov
iret
test
pop
lods
popa
push
jg
idivl
push
cmp
mov
push
dec
inc
out
cmp
lea
add
out
test
lea
repz
lea
sub
mov
and
inc
cmp
repz
dec
test
shl
rolb
hlt
lods
dec
dec
sub
adc
xorb
mov
pushl
add
es
fcompl
out
mov
insb
pop
add
xchg
xlat
sti
mov
and
lock
xor
popl
int
mov
gs
xchg
clc
dec
xor
into
flds
adc
sub
loope
scas
les
fwait
ret
xchg
shlb
and
je
cld
scas
cmp
push
movsl
push
adc
repz
mov
dec
sbb
xchg
mov
sbb
ss
hlt
cli
push
jae
stc
mov
or
sub
in
push
pop
mov
ret
and
or
xor
loopne
mov
jae
icebp
jne
mov
fldenv
jle
xchg
ret
fmuls
inc
daa
cmc
ret
inc
pop
in
sar
mov
ret
leave
sti
rcrl
repz
mov
imull
pusha
mov
fcomps
sub
mov
es
or
scas
and
push
pop
mov
lods
jl
mov
pop
dec
xor
add
paddsw
jmp
dec
lahf
outsl
mov
adc
or
mov
push
mov
aad
in
push
jo
sub
int3
sbb
orb
test
or
or
repz
movl
fistpll
addl
mov
push
rcll
push
mov
mov
imul
ret
test
inc
lahf
push
insl
loopne
dec
sahf
test
sub
xchg
mov
lods
adc
out
pop
fmull
sub
add
inc
sub
mov
popf
xor
out
sub
fcmovnbe
call
mov
inc
scas
xchg
xchg
ret
dec
dec
inc
pop
mov
lods
xlat
movsb
insb
add
cmp
mov
pop
fcmovnbe
cmp
cwtl
sub
mov
mov
and
test
push
cmpsb
or
sbbb
mov
aaa
dec
aaa
mov
push
xor
les
neg
mov
cmp
ds
or
sub
lock
push
jg
mov
push
cltd
cmpsb
mov
xchg
leave
jno
aad
loop
in
sahf
popf
js
loopne
pop
dec
daa
add
movaps
test
inc
xchg
loopne
aas
push
adc
fwait
pop
cmp
lahf
sbb
inc
loope
leave
out
or
testl
dec
jecxz
sub
lods
out
jle
aaa
push
in
daa
movsl
xor
dec
xor
xchg
bound
mov
mov
xchg
adc
push
cli
shlb
lock
push
adcl
int3
test
and
sub
getsec
ret
negb
pop
cmp
xchg
rcl
mov
mov
mov
xor
out
add
push
xor
test
rcl
andb
data16
push
popf
jg
xchg
add
push
lret
jl
test
jbe
outsl
shl
cmp
rorl
sbb
xor
cmc
cmpsl
xor
sbb
or
pop
test
les
inc
repz
xor
es
mov
lret
mov
push
cld
loop
loop
in
mov
imul
lahf
cmp
add
jl
inc
adc
imul
and
push
dec
add
test
jne
add
cltd
or
mov
lcall
stc
mov
insb
push
ds
pop
mov
jo
clc
sub
call
xchg
or
mov
cmp
fs
pop
mov
and
sbbl
push
push
jb
cmpsl
inc
push
sub
mov
xchg
ds
incb
or
aaa
seta
test
xchg
sub
push
mov
cli
imul
jns
lods
imul
xor
pop
xchg
jb
test
andl
iret
pop
jmp
lods
jbe
test
mov
ds
dec
aaa
notb
sub
or
in
mov
enter
cmpl
pop
shlb
mov
dec
jg
ret
xor
std
shr
pop
divl
jo
cmpsb
mov
cs
xor
scas
pop
je
int
aas
out
fwait
daa
dec
call
test
mov
lock
push
shr
dec
cmpsb
and
orb
ret
push
mov
outsb
sbb
pop
lret
cmpl
xor
push
lods
mov
cmp
mov
in
scas
xchg
or
cmp
mov
bound
sti
aam
pusha
or
daa
rcll
push
fs
or
shrl
lods
test
ss
adc
and
pop
push
pcmpeqb
adc
outsl
das
mov
mov
mov
aaa
inc
lret
gs
push
outsb
jb
xchg
sbb
pusha
mov
in
mov
lods
adc
add
inc
pop
fsubr
adc
cmp
cmp
xchg
or
add
pop
jns
xor
subb
loope
xor
mov
scas
xchg
cwtl
xchg
fdivs
aaa
or
push
fisubrs
and
aas
jge
pop
add
cld
adc
cmp
int
shrl
dec
fbstp
dec
js
xor
clc
mov
addb
mov
mov
inc
mov
test
inc
inc
or
pop
popa
out
fwait
call
fsubp
shl
jl
push
out
std
je
das
pop
pop
imul
lea
push
or
cmp
popf
repnz
pop
push
int3
jns
ss
mov
fadds
in
inc
adc
cli
in
imul
mov
pushf
jge
out
and
cltd
loope
push
mov
lock
data16
lret
lcall
dec
and
lcall
imul
mov
outsb
mov
je
mov
in
insl
or
test
or
inc
mov
loope
add
dec
and
xchg
adc
cmp
imul
nop
xor
xchg
mov
sbb
inc
mov
sub
sti
cmp
sbb
inc
shrb
out
scas
mov
movsl
sub
pop
imul
mov
xchg
fists
andb
in
xchg
cmp
in
lcall
outsl
lods
ret
mov
xor
repz
jne
xor
mov
pop
rcll
mov
mov
clc
clc
mov
ret
popa
push
xor
lret
and
mov
in
or
pop
or
sbb
pop
iret
insb
pop
sbb
pop
pop
nop
sahf
xchg
push
cmc
xchg
and
jnp
cmpsb
daa
inc
loop
jg
fdivp
cmp
lea
add
int
out
mov
mov
bound
adc
testb
sbb
xorl
ret
ret
stc
and
inc
adc
outsl
mov
arpl
sbbl
outsb
mov
clc
mov
scas
inc
fs
sub
pop
push
mov
dec
push
sub
or
movsl
int
in
imul
cwtl
mov
push
or
ret
rclb
push
divl
sbb
add
lcall
in
mov
push
negb
or
loope
mov
subl
pop
testl
dec
das
push
lahf
xchg
les
jmp
mov
lock
or
inc
and
push
js
xor
fcompl
shll
xor
rcl
adc
popf
in
adc
nop
or
movsl
cltd
hlt
idivl
push
ljmp
mov
cmpsb
mov
fcmovnbe
in
icebp
add
cmc
sti
jle
xor
iret
mov
or
dec
out
jle
pop
sbb
ret
mov
daa
std
and
clc
popf
pop
adc
ret
cmp
xor
xor
stc
scas
stos
add
aaa
jo
jge
mov
sub
mov
pop
mov
add
mov
in
faddl
inc
jno
popa
xor
test
mov
ret
add
pop
adc
or
pop
jo
insl
cmp
cwtl
push
jl
leave
pop
xchg
sbb
sbb
das
imul
jg
cld
pop
push
dec
inc
cmpsb
xchg
lods
out
nop
mov
xchg
dec
gs
leave
inc
push
int
add
and
mov
cmp
and
das
fistl
xor
inc
ljmp
rcll
je
js
inc
movl
fnstcw
mov
sub
sub
lods
push
cld
cwtl
outsl
repnz
jns
mov
jmp
stos
mov
cmp
sub
mov
mov
and
daa
repnz
push
mov
nop
stc
cltd
aaa
lods
jne
xor
iret
mov
hlt
dec
pop
adcl
call
out
mov
jge
iret
stos
xor
out
or
inc
push
or
pop
pop
and
dec
aad
sub
nop
dec
inc
adc
lcall
inc
cltd
adc
sub
and
dec
in
sbb
sub
cld
out
cmp
and
xor
adc
mov
aad
or
sbb
or
mov
insl
xor
cmpsb
lcall
loope
sub
ret
mov
push
in
jle
notl
cli
mov
push
ljmp
dec
mov
shrl
push
fistpl
inc
cmp
cmp
filds
mov
cmpl
add
add
scas
mov
pop
push
aam
cmp
sarb
aaa
lock
mov
adc
mov
jp
cltd
mov
pop
repz
pop
xchg
out
test
in
cmp
fimull
sbb
arpl
mov
outsl
or
je
lea
shr
xor
mov
push
out
pop
outsb
jmp
addl
or
lret
sub
in
push
mov
dec
xchg
inc
mov
or
mov
out
and
ror
jae
jmp
adc
aad
lahf
push
lods
mov
push
cli
aam
outsl
stos
daa
repnz
add
jno
sub
clc
inc
ss
lcall
test
inc
dec
push
call
sub
mov
xor
add
push
sbb
rcl
adc
rcrl
cltd
dec
lahf
mov
stc
xchg
mov
inc
xor
rol
adc
stos
jns
mov
push
sbb
mov
shlb
sub
inc
mov
mov
inc
fdivs
int3
frstor
test
jno
cmp
push
cmp
fstps
shl
andl
ror
sbb
movsb
inc
lds
idivb
in
es
xchg
enter
sahf
in
lea
adc
dec
and
into
into
imul
les
decb
xchg
aaa
sbb
jo
mov
mov
push
cs
jecxz
add
shlb
sub
negl
push
jb
jmp
inc
mov
rcrl
inc
fdivrp
adc
pop
push
repz
push
mov
push
pusha
push
pop
repz
add
or
fcmovnbe
sarb
ljmp
js
in
mov
mov
aas
test
es
or
jl
push
ret
rclb
cmp
dec
pop
jmp
in
in
xor
jp
aam
or
jp
or
pusha
sarl
push
xchg
fidivrl
movsb
sub
push
add
int
mov
sub
mov
pop
dec
stos
stc
xchg
mov
add
lret
mov
and
or
in
outsl
imul
fsubl
dec
fwait
push
popf
cmp
shl
push
or
ficomps
add
jp
inc
mov
xor
fstps
idiv
mul
stos
xor
inc
aad
sbb
xor
int
sti
aas
push
pop
std
test
cmc
pop
sbb
mov
js
pop
fidivl
aaa
bound
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
test
jb
cli
mov
adcl
lods
stos
movsb
or
xchg
xchg
or
outsb
or
xchg
sub
popf
daa
cs
mov
jno
xchg
sbb
rcrb
dec
xor
inc
mov
inc
jb
pop
cld
lds
xchg
adc
or
fstpt
in
into
ret
sub
sbbl
xor
cmp
in
sbb
leave
add
andb
mov
out
in
mov
dec
insl
mov
dec
cmp
xor
imul
idivl
repz
sbb
cmpb
dec
lcall
inc
mov
jecxz
xor
cmp
cmc
sbb
cmp
shlb
repz
pop
dec
cld
fsub
ret
lods
iret
or
sbb
xchg
mov
jno
sub
mov
jge
xchg
leave
jecxz
sub
out
je
push
negl
lods
movb
int3
sub
andl
sub
mov
andb
fs
dec
sarl
mov
mov
add
sub
int
lds
xchg
pop
mov
cltd
sub
jae
insl
push
out
and
popf
ds
in
inc
mov
cmpsb
sub
in
sbb
mov
aas
stc
adc
iret
call
jbe
inc
test
in
mov
mov
inc
sub
lret
imul
ret
mov
cmp
aaa
fninit
fistpl
fcoms
cld
mov
dec
popf
and
xchg
inc
cmp
sbb
ret
jle
mov
xchg
mov
inc
adc
pop
subb
xor
int
fcmovnu
addr16
das
cmp
adc
addr16
div
arpl
mov
sbb
sbb
xor
cmp
sbb
arpl
bound
dec
out
add
loopne
arpl
pop
sub
bswap
add
enter
lods
pop
mov
lret
and
lods
or
icebp
cmc
dec
pop
lahf
bound
pop
pop
jb
mov
hlt
fistps
mov
iret
mov
mov
ret
xor
sub
ret
push
cmp
cmp
cli
ret
roll
shrb
add
inc
cmpsl
js
sahf
test
xchg
mov
jl
and
clc
loop
out
mov
mov
out
push
add
pop
mov
and
sti
rol
push
cmp
dec
scas
test
mov
dec
cmp
daa
test
in
mov
in
js
cmp
aam
jnp
sbb
inc
aam
dec
xor
loopne
sub
or
and
rolb
out
loope
fmul
lock
and
xor
pop
mov
push
in
push
jle
test
adc
inc
and
xchg
sub
jmp
adc
xchg
pop
or
jl
and
mov
add
dec
jmp
push
sbb
jnp
pop
mov
mov
xchg
sbb
dec
mov
xchg
ret
cld
sub
in
xor
cmp
xlat
inc
cmc
ret
movl
xchg
pop
and
jp
aad
push
inc
mov
rolb
sub
sub
lahf
lcall
data16
xchg
je
jns
lds
loope
cltd
push
pop
mov
add
cmp
cmc
repz
jp
inc
sub
fdivr
fisubs
loop
lods
ds
test
js
popa
pop
popf
adc
xor
jbe
addr16
mov
in
into
xchg
fidivs
xchg
ret
jl
mov
scas
cmp
push
xor
or
enter
imul
psubb
roll
adc
rolb
jmp
push
jg
incl
test
mov
cmp
inc
adc
sti
scas
sbbb
popa
jnp
add
outsl
push
cmp
jns
arpl
ret
in
call
imul
push
in
xor
stos
xlat
push
std
jo
lods
pop
test
inc
jmp
icebp
mov
cli
cmpsl
xor
stc
add
dec
daa
push
pop
inc
mov
xor
in
xor
mov
mov
aaa
stos
add
bnd
xor
sbb
arpl
imul
lds
adc
or
shlb
inc
das
out
dec
cmp
sbb
outsb
sti
xchg
xchg
test
sarl
push
out
cmpsb
mov
dec
cld
daa
adc
push
cs
inc
xor
mov
sbb
insb
cs
testl
insb
dec
add
mov
outsb
je
lret
std
jl
add
scas
xor
mov
sbb
sub
stc
or
fmull
inc
adc
inc
dec
stos
fs
rclb
pop
in
or
or
cltd
mov
lcall
inc
leave
leave
outsl
cmp
jp
or
jg
in
add
outsb
cmp
mov
sub
leave
fsubs
add
mov
testl
lods
cmp
iret
lock
mov
loope
arpl
lods
rorb
int
push
xlat
sahf
xor
dec
nop
xchg
inc
sub
movsb
mov
xchg
adc
loop
sub
clc
adc
bnd
aad
inc
pop
push
inc
repnz
mov
xchg
icebp
ret
fdivl
aad
lea
cwtl
adc
push
stos
push
cmp
inc
outsb
cs
inc
pop
ret
cmp
fldcw
or
into
stc
inc
mulb
das
cmp
cli
mov
stc
into
rorl
mov
and
cmp
lods
aad
call
or
repnz
mov
mov
outsb
das
hlt
add
push
rcrb
loopne
adc
mov
sbb
mov
jnp
les
xchg
in
cmpsl
xchg
pop
xchg
out
sub
push
mov
inc
gs
xchg
pop
or
or
sti
jle
adc
sub
jl
sti
mov
shll
add
inc
pop
mov
ss
std
loope
andb
push
inc
arpl
pop
push
arpl
adc
test
daa
cwtl
aam
cmpsb
es
or
test
cmpsb
cmp
xor
dec
out
ds
sbb
imul
in
popa
sub
loope
pop
insb
inc
sub
pushf
pop
pop
jl
lods
arpl
fs
testl
push
mov
mov
test
aam
push
in
es
xor
inc
jecxz
jp
popf
mov
cmp
xor
dec
aad
stos
fisttps
mov
ss
cmp
outsl
push
lods
test
leave
pop
mov
stos
pop
push
or
scas
or
pusha
scas
imul
and
jecxz
push
xchg
sti
clc
xor
jl
fwait
xchg
xrelease
fidivrl
xchg
test
add
pusha
mov
cmc
pushf
or
mov
pop
sbb
lock
das
jbe
imul
xchg
sarb
lods
pop
fisttpll
push
cmc
es
push
in
xor
addr16
mov
test
pop
mov
pop
jno
sub
js
sub
sub
shl
mov
mov
sub
push
adc
xchg
pop
inc
aaa
push
icebp
sbb
pop
mov
jb
push
mov
mov
dec
inc
add
aam
jbe
xchg
xlat
fs
xchg
shrl
ret
jns
add
mulb
dec
mov
cmpb
pop
and
jmp
call
xchg
test
dec
pop
xchg
add
das
jl
testb
mov
sbb
sub
not
lea
in
ss
mov
sahf
mov
jne,pn
mov
adc
enter
aam
mov
scas
mov
sbb
jle
sbb
pushl
pop
pop
inc
jae
in
add
enter
add
mov
mov
sbb
cmp
dec
je
in
rcl
hlt
jmp
mov
inc
por
lea
pusha
jae
push
adc
repz
add
push
mov
leave
inc
mov
ret
sub
cwtl
fbld
mov
scas
push
inc
lgs
jne
insl
dec
std
jle
test
in
jae
bound
xor
lods
xorb
push
xchg
fidivl
mov
add
hlt
ficoml
pop
cmp
push
sbb
and
js
mov
add
fldt
push
xchg
lret
lds
adc
fucom
and
dec
shll
sbb
lcall
lds
adc
frstor
mov
sbb
in
xchg
mov
xchg
aaa
cmp
jg
or
test
or
pop
or
lods
xor
sti
nop
xchg
shlb
fnstcw
pop
push
pop
les
fwait
repz
test
sbb
xchg
test
out
out
in
inc
mov
dec
mov
shrl
in
jmp
je
scas
jns
pop
pop
push
imul
jmp
sub
cmp
inc
and
fs
aas
adc
dec
inc
lods
push
jp
pop
pop
pop
and
rcll
mov
testl
sbb
and
xor
lds
loopne
pop
rol
iret
inc
subl
inc
mov
push
pop
cmc
movsl
imul
xchg
add
add
or
lods
mov
mov
sbb
xchg
mov
xchg
outsb
cli
jmp
or
pop
lods
in
js
bound
xor
sub
popf
pusha
std
stos
les
push
sub
sarl
es
in
into
xchg
daa
mov
mov
out
sti
jg
shll
sub
jecxz
add
inc
ds
push
daa
cmp
xor
jmp
pop
dec
pop
mov
jae
xchg
insl
mov
bound
jno
in
jmp
push
je
push
jne
ja
enter
fistpl
mov
in
ljmp
test
push
int
mov
mov
jle
out
imul
mov
push
xor
mov
movsb
push
pop
sub
pop
push
in
insb
outsb
push
jecxz
cmpsb
xchg
daa
mov
daa
es
scas
insb
test
sub
js
jbe
and
push
inc
gs
hlt
mov
push
sub
subb
leave
push
dec
ss
xor
test
pushf
mov
push
icebp
scas
push
push
inc
insl
jo
fldl
sub
fstpt
cmp
int3
jne
leave
add
sub
inc
movsl
xor
sbb
add
mov
mov
cmp
imul
ret
jp
fsubl
mov
out
lock
jecxz
xor
js
rcrl
xor
adc
nop
cmp
sarl
mov
cmp
push
mov
or
mov
sub
mov
mov
test
jne
or
push
add
or
jbe
sub
imul
outsl
xchg
push
lahf
loopne
adc
gs
clc
fiadds
loopne
dec
sub
adc
xor
int
push
mov
loop
jnp
loopne
jge
sub
lcall
sub
inc
mov
mov
pop
cltd
in
mov
shll
data16
mov
push
cmpsb
push
lea
clc
cmp
imul
dec
mov
dec
pop
and
sbb
lret
sarb
push
aaa
mov
or
push
jp
xchg
lahf
cmp
daa
sbb
call
testb
fsubrl
movsb
movsl
inc
stc
stos
or
or
push
lret
and
pop
xor
pop
leave
mov
fildll
jp
pusha
dec
pop
push
test
xlat
jle
jg
popa
cmpsl
pop
jle
push
xor
and
out
gs
adc
fldcw
jge
cmp
and
popf
xchg
cmc
loop
popf
leave
jle
dec
add
insb
je
shll
xchg
ficomps
in
icebp
movsb
xor
xchg
data16
popa
nop
inc
leave
fstl
inc
mov
mov
gs
dec
jmp
add
jle
xchg
or
movsl
pop
dec
stos
cmp
xchg
loop
mov
and
jo
iret
lahf
andl
xlat
xchg
xor
int
jle
out
mov
push
and
ljmp
repz
mov
fadd
repz
jb
data16
sub
pop
xor
push
insl
xchg
mov
add
mov
in
sbb
dec
in
loopne
xor
sbb
std
stc
jl
dec
add
sub
cltd
sub
std
lcall
aas
lea
rorl
mov
push
dec
jecxz
pop
mov
and
pusha
in
js,pn
push
inc
pop
add
and
pop
cmp
xchg
inc
adc
popf
xor
outsl
inc
sbb
inc
out
loope
sarl
imul
mov
das
neg
insl
dec
inc
fmuls
dec
mov
cmpl
xchg
pop
cmp
shrl
push
push
mov
cmp
mov
mov
or
and
jnp
adc
pop
fdivrp
lea
out
xchg
jne
outsb
adcl
pop
sbb
int3
ds
or
push
inc
adc
lahf
xchg
and
add
ss
xor
mov
ror
fdivl
adc
jb
aad
lcall
test
pop
imull
stos
xchg
mov
jne
lock
and
pushf
popf
aam
push
stc
outsb
imul
sub
dec
popa
jmp
das
lret
aam
xorb
or
sti
rcrl
mov
add
test
cwtl
loopne
fyl2x
pusha
fistl
dec
xchg
in
out
pop
adc
in
sub
adc
xchg
pop
sub
sbb
jmp
sbb
mov
cmp
xchg
sbb
jb
mov
and
fisttps
add
loope
push
bound
sbb
sub
ljmp
dec
das
inc
bound
pop
jae
or
mov
sbb
pop
ja
stos
fld
cmpsl
fsubrl
sub
mov
iret
fstpl
or
push
outsl
mov
mov
lds
lcall
jle
cmpsb
test
pop
or
fisubrs
aaa
xor
in
cmp
ficoml
outsb
adc
pop
movsl
pop
outsb
and
dec
fwait
pop
mov
sti
or
dec
add
and
pop
stos
adc
insl
jae
cltd
xchg
popa
fstpl
xor
mov
movsl
jnp
rcl
iret
insl
mov
js
cmpsb
fmull
mov
sbb
cmp
filds
adc
arpl
movsl
sub
mov
adc
push
mov
jp
adc
stos
out
fstpl
mov
jl
adc
xor
fnsave
lret
std
test
push
stc
xchg
shlb
call
jmp
inc
push
notl
out
push
pusha
je
inc
int3
mov
xor
jle
sub
pop
mul
mov
pusha
or
push
mov
pop
and
push
jmp
pusha
sub
or
cmpsl
scas
movsl
fsubs
cmp
add
pop
ret
sub
mov
dec
shlb
jecxz
dec
xchg
jnp
fdivl
xchg
adc
into
dec
sbb
fbld
addl
pop
xchg
pusha
jno
fdivl
js
sar
inc
fdivrs
mov
lret
push
xor
xchg
sbb
lcall
xchg
imul
push
stos
pop
enter
inc
or
inc
popf
mov
adcb
pop
xchg
adc
fiaddl
sbb
xchg
mov
push
xlat
pop
or
call
loope
enter
pop
mov
pop
adc
insl
movsb
jecxz
rol
sub
fidivrs
fidivs
sub
pop
push
jnp
push
mov
inc
sub
pop
outsb
popa
inc
push
lret
ja
test
out
pop
dec
loope
pop
xchg
pop
mov
movl
and
cmpl
mov
adc
aaa
push
cmp
mov
mov
lea
jne
adc
fstps
and
pop
nop
add
pop
lods
xchg
in
and
add
ds
lea
jecxz
cmpsb
xchg
ret
dec
or
hlt
inc
pop
add
les
mov
jmp
js
pop
stos
push
dec
out
loop
jno
testb
test
std
inc
push
test
xchg
fistpll
add
fistpl
cmp
jmp
out
out
inc
adc
xchg
pop
inc
jo
fs
sub
push
stos
jl
sub
xchg
je
fidivrl
les
mov
fwait
je
jmp
imul
cmp
fcom
or
or
int3
or
xchg
jecxz
push
out
sbb
xor
shrb
cmp
mov
sti
call
inc
ljmp
int3
push
inc
xchg
addr16
mov
adc
in
mov
iret
mov
pop
xchg
das
xor
icebp
sub
xchg
in
pop
jg
outsb
cmpsb
repnz
sub
lds
add
mov
hlt
cmp
divl
jmp
aas
loop
movsb
lea
pushf
inc
lods
fs
sbb
mov
loopne
rclb
in
out
fadd
int3
loop
jmp
fucom
clc
cmp
lcall
adc
cmc
or
leave
add
pop
xchg
rcl
jl
sub
push
inc
pop
ret
fmull
das
push
xor
jae
rcr
testl
add
push
mov
jl
repnz
sbb
andb
cmpsb
push
shll
cmp
jns
loopne
dec
movsl
iret
dec
addr16
out
fucom
jge
pop
inc
push
sub
pop
icebp
xor
inc
dec
add
cltd
inc
ljmp
imul
add
mov
icebp
int
orl
data16
cmp
add
xchg
lods
jno
cmp
data16
test
dec
add
mov
shrb
mov
add
mov
xlat
mov
xchg
adc
mov
jae
pop
dec
hlt
fwait
inc
stos
jae
idivb
jp
dec
lret
lds
fcmovnbe
adc
rclb
push
jmp
lods
popf
arpl
nop
mov
sub
push
popa
loope
push
lret
pop
inc
in
mov
scas
bound
add
xchg
mov
push
lret
lock
mov
pop
cwtl
xor
push
ret
jg
insb
and
fnsetpm(287
sub
mov
xor
rcr
push
out
jge
sub
add
loope
fs
xchg
mov
shll
lret
filds
add
inc
jno
cmp
rcll
fidivs
insl
mov
add
cltd
scas
lret
rorl
shl
xchg
and
call
mulb
cmpsl
xchg
pop
loop
stc
mov
mov
cmp
lea
fldl
dec
push
cmp
cwtl
mov
cld
ret
jnp
fwait
arpl
xchg
inc
xor
adc
pop
cmp
sbb
jae
mov
jo
das
fldenv
pop
and
sahf
cmp
leave
data16
popa
xchg
data16
ficomps
imul
nop
jge
mov
in
andl
fsubl
xor
addr16
inc
or
cs
stos
pop
jo
sbb
rorb
xchg
and
into
fwait
pop
push
lahf
pop
sbb
insb
sbb
ljmp
hlt
mov
loop
lret
div
call
and
push
jb
push
stos
fucomi
xchg
mov
lret
adc
sub
outsl
jnp,pn
out
cmp
xchg
ss
jo
enter
popf
mov
adc
sbb
das
mov
cmp
or
je
fmuls
loop
shl
or
jnp
add
sub
lahf
mov
push
movsb
adc
push
dec
push
sahf
and
in
inc
jns
insb
cmp
push
pop
push
stos
int3
jo
faddl
or
cld
mov
cld
outsb
pop
sub
xchg
lock
dec
mov
cld
pop
jno
mov
pop
push
mov
test
imul
bound
cmpsb
arpl
or
jno
movsb
cmp
in
jge
enter
sub
mov
sbbb
mov
inc
adc
inc
mov
int
sub
repnz
sub
aam
rcrb
inc
test
addl
cmp
lock
adc
sbbl
aad
fidivrl
lock
test
cld
mov
sub
push
je
jo
mov
fistl
pop
push
xchg
and
xchg
push
inc
mov
jnp
inc
inc
xchg
push
adcb
les
test
push
test
fildl
dec
mov
lock
jg
loopne
pushl
jne
inc
aam
fucomp
test
scas
xchg
lds
addr16
push
popa
jne
mov
push
mov
push
jp
or
mov
inc
rcll
sbb
push
mov
jp
sbb
les
lahf
xchg
adc
bound
cmp
push
imull
add
push
fsubrl
pop
push
sbb
dec
mov
daa
xor
lcall
adc
enter
rorl
test
inc
and
out
xchg
mov
mov
stos
xor
ret
sahf
inc
ret
jge
sti
cmpsl
xor
cmp
cmpb
adc
cld
outsb
lock
loope
add
mov
out
lcall
icebp
and
mov
roll
fs
fadd
push
ds
iret
cmp
pop
into
xchg
mov
push
mov
or
aas
repz
pop
hlt
js
fsubp
ret
lock
jae
adcl
inc
les
fcom
rol
fisttps
rclb
aad
mov
jl
pop
fcom
mov
dec
fs
dec
mov
pop
pusha
scas
aam
negl
jne
les
in
std
leave
mov
dec
xchg
push
js
and
orb
jl
jb
popa
std
stos
pop
mov
lock
bound
test
cld
xor
dec
test
stos
xchg
cld
dec
sbb
in
dec
stos
adc
pushf
jge
xchg
addr16
xor
sbb
mov
cmp
fists
or
andb
dec
scas
xchg
sbb
sbb
stos
cmpsb
pop
ret
out
xlat
psllq
adcb
decb
add
stc
cs
out
xchg
mov
adc
stos
push
sbb
inc
jg
out
lea
repnz
cmp
cli
test
or
mov
dec
pop
lcall
imul
inc
es
imul
mulb
pop
mov
pusha
lea
and
aad
orb
sub
inc
insb
xor
push
js
cmp
enter
push
mov
mov
push
add
push
jmp
dec
std
push
push
and
std
fidivs
call
inc
negl
je
mov
popa
cmpsb
and
sub
mov
jge
mov
js
mov
test
scas
jb
jb
cmpl
pop
rcll
pop
adc
in
mov
inc
mov
jle
movsb
popa
subb
nop
mov
fdiv
fcompl
andb
add
adcb
arpl
push
test
jmp
in
push
xchg
xor
loop
sub
cmp
dec
adc
in
fcoms
xchg
or
jl
mov
mov
or
mov
out
or
or
test
lahf
mov
dec
les
dec
xchg
jbe
jbe
mov
decl
jl
mov
es
lret
arpl
out
movsl
dec
je
cmc
or
and
fsin
xlat
pushf
pop
xchg
mov
push
leave
jbe
fidivs
ds
push
pop
ja
push
iret
sub
mov
mov
dec
aad
add
lret
rol
cmc
push
push
pop
push
repnz
push
hlt
test
js
jg
mov
aam
sub
outsb
wbinvd
adc
mov
in
jns
dec
outsb
ja
fldl
insl
xchg
or
jae
push
ss
jns
fstpt
ss
shlb
cmpl
out
lds
xchg
inc
jne
push
xor
jb
mov
add
sub
aaa
push
and
cmp
inc
ja
xor
mov
lds
push
inc
push
xchg
dec
mov
xor
test
jmp
les
popa
mov
push
test
test
push
xchg
dec
bound
xor
xor
xor
pop
fcmovbe
xlat
gs
pop
test
pop
mov
sahf
mov
xchg
or
push
arpl
jbe
inc
or
jnp
sbb
jo
mov
pop
mov
jnp
cmpsl
leave
in
gs
jbe
sbb
mov
push
idiv
orl
inc
je
sbb
add
movsl
aas
and
sbb
ds
mov
leave
inc
popf
in
cmp
orl
aad
out
sub
cmovp
jnp
xchg
dec
mov
push
push
pop
ret
inc
icebp
pop
sbb
push
sub
ffreep
stos
mov
mov
pushf
je
stos
mov
ljmp
cmpsl
pushf
mov
add
in
add
repz
repz
rcrb
stos
pop
or
or
cld
jl
data16
adc
cmpsb
dec
paddw
pop
cld
jl
inc
xorb
popf
cmp
pop
cld
adc
push
pop
jbe
jge
test
pop
xlat
shll
daa
jnp
rcll
xchg
aaa
jmp
push
push
in
mov
pop
mov
decb
push
push
imul
lods
cmpsl
push
gs
out
pop
xor
pop
pop
and
push
ret
fs
jle
cmp
inc
dec
mov
aaa
testl
or
push
xor
push
sbb
mov
insl
mov
inc
lds
fimuls
push
cmpsb
imul
ret
xchg
mov
lahf
dec
cli
sbb
pop
test
pop
ljmp
gs
adc
ret
xchg
push
in
dec
ds
push
and
scas
and
jmp
fcmovnbe
or
jae
lods
ljmp
in
push
mov
jb
jl
inc
pop
insl
je
lret
or
rcll
dec
xchg
imul
int
and
xlat
imul
and
icebp
gs
out
fcmove
jne
adc
jl
js
outsb
cld
dec
xor
iret
loope
push
nop
rcll
repz
push
xchg
pop
ja
add
and
xchg
insb
dec
pop
mov
outsb
cmp
ljmp
scas
xchg
push
sbb
xchg
orl
xor
mov
sbb
and
fcomi
in
outsb
jge
xor
popl
xchg
mov
push
mov
addr16
and
xchg
push
addl
inc
xchg
arpl
lea
mov
push
xorb
sub
sbb
cli
xchg
addl
insb
fists
das
xchg
mov
sbb
dec
mov
leave
aas
push
push
and
jp
mov
leave
test
out
xor
repz
pop
dec
jle
add
adc
orb
lock
scas
push
in
mov
mov
es
inc
loop
sub
push
ret
mov
and
add
sahf
scas
adc
mov
data16
dec
jp
inc
and
lds
in
sbb
inc
loop
scas
int
add
outsb
out
js
sarl
xor
lcall
pop
mov
inc
dec
imul
in
bound
dec
rcl
pop
inc
cmp
inc
and
stos
data16
dec
hlt
mov
dec
das
mov
xor
and
dec
jne
out
inc
push
loopne
sbb
ss
xchg
push
arpl
cmp
std
in
sar
mov
and
repz
pusha
movsb
sub
lds
adc
call
cmpsb
shl
xchg
inc
fists
std
loop
lahf
outsl
nop
mov
shrb
loope
cmp
into
andl
insl
dec
xchg
insb
push
lock
lahf
adc
clc
lock
xor
mov
adc
fistl
bound
mov
dec
cwtl
pop
cltd
loopne
push
xchg
es
pop
mov
loope
scas
daa
mov
movsl
int3
add
jne
adc
sahf
addr16
lret
fisubrs
cmp
jecxz
mov
add
daa
xor
mov
lods
fsub
add
fsubrs
fwait
pop
ds
pop
js
cmp
xor
push
jns
or
pop
fisubrs
mov
inc
pop
call
cmpsl
mov
pop
gs
movsl
or
jae
icebp
loope
sub
jo
dec
pop
xor
mov
jnp
iret
data16
add
inc
hlt
dec
xlat
push
test
addb
ret
inc
addl
sub
xchg
cmpl
cmp
dec
mov
in
inc
push
adc
popa
addr16
int3
mov
mov
popf
lods
stos
jo
mov
scas
jns
inc
xlat
jno
mov
cmp
pop
push
sub
fcompl
push
lods
add
xchg
cs
jns
push
lods
cwtl
mov
pop
mov
mov
sahf
ror
ss
add
xor
cmp
imul
dec
push
jecxz
mov
lods
mov
inc
and
test
adc
js
pushf
fiadds
sbb
dec
pushf
inc
adc
and
sbbb
mov
sub
imul
pop
inc
sub
or
inc
fists
mov
sbb
push
push
fsts
stos
lods
push
xor
dec
dec
out
movsl
mov
inc
pop
cmp
xchg
insb
daa
movsl
adc
sub
mov
bound
sbb
call
fcoms
out
sub
mov
jne
std
and
xchg
lret
in
lret
dec
or
push
ss
or
arpl
rcll
scas
imul
pop
mov
pop
lds
add
lret
add
lret
mov
jle
cs
push
or
xchg
mov
jmp
cltd
push
inc
sbb
aam
aaa
fnsave
pop
subb
mov
popf
inc
jmp
and
sub
cmc
sub
dec
jb
gs
sti
outsb
sahf
sbb
add
lcall
out
jge
add
pop
pop
adc
sub
ljmp
dec
sbb
shll
pop
cltd
sbb
imulb
insb
pop
in
adc
mov
adc
int
mov
aam
das
jne
jecxz
popa
mov
mov
xchg
orb
inc
sbb
adc
push
insl
xchg
xchg
mov
pop
jnp
mov
lcall
xor
pushf
nop
pusha
jp
adc
push
fisubs
imull
xchg
test
test
xchg
xchg
xchg
and
jecxz
adc
repnz
xchg
push
mov
mov
aad
add
jl
dec
jne
ds
push
frstor
dec
call
cmc
movsb
lahf
cmp
sti
inc
dec
dec
jo
sub
mov
cmp
repnz
push
popa
inc
sbb
ds
mov
mov
mov
pop
aas
lcall
push
xlat
sbb
test
rcr
push
in
ds
fs
sub
sbb
jne
mov
dec
and
fmuls
cmpsl
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
arpl
pop
jge
pop
aas
jbe
mov
mov
cld
and
jg
in
andb
adc
test
xor
jecxz
pop
roll
dec
cmpsb
or
mov
mov
xlat
inc
cmp
inc
and
cmpsl
pop
mov
xchg
mov
xor
and
ss
push
inc
fpatan
add
inc
lods
inc
decl
add
push
jg
cmp
dec
or
pop
rorb
jno
pop
add
fs
jecxz
imul
popa
ja
xor
mov
xor
rorl
rcrb
mov
inc
add
test
iret
out
inc
cltd
dec
loopew
outsl
int3
xchg
pop
loop
cmp
cld
ret
dec
xor
mov
cmp
dec
jae
jae
xor
push
in
adcl
test
mov
push
imul
rcl
jge
inc
add
dec
out
test
scas
addb
inc
adc
inc
dec
add
out
or
lock
stos
repz
push
mov
cltd
testl
ds
xor
shr
loope
add
adc
cmp
das
imull
xchg
movsb
aam
xorl
or
movsl
lcall
test
adc
pop
roll
fcompl
xor
pop
jne
sub
out
stos
int
xor
pop
sub
xchg
lret
mov
sbb
stos
bswap
push
stos
adc
test
cmp
mov
mov
push
jb
fisttpl
int
push
cmp
sub
fidivs
pop
loop
call
outsb
xor
movsl
jecxz
and
push
mov
data16
push
mov
sbb
dec
jb
push
into
mov
mov
insb
out
mov
dec
and
dec
test
int3
aaa
push
popf
fcom
mov
inc
hlt
dec
cmpsb
ret
hlt
ljmp
inc
sbb
mov
mov
xchg
push
sti
js
dec
xchg
xlat
pop
jb
add
xor
lcall
movsl
cltd
loop
movsb
fdivl
adcl
adcb
adc
dec
xchg
les
mov
sub
movsl
cmp
test
mov
in
push
mov
push
nop
mov
adc
mov
mov
jns
xchg
or
lret
xchg
inc
lods
push
and
or
stos
sahf
cli
adc
mov
cld
pop
stos
sbb
push
js
daa
xor
adc
mov
fisttps
stos
pop
and
movl
test
adc
aas
jb
adc
push
sbb
jg
or
repnz
hlt
cltd
xchg
mov
lods
sbbl
enter
cmp
mov
sarb
sub
iret
adc
shlb
adc
into
js
lea
mov
ds
ss
cmpsb
aaa
adc
sub
mov
push
xchg
cltd
add
mov
mov
out
mov
cmp
rol
test
cmp
fs
rcr
xlat
scas
mov
inc
out
dec
xchg
shlb
pop
mov
stos
push
clc
sub
pop
xchg
fimull
imul
aas
pusha
mov
jle
xchg
or
xchg
jle
fs
ficompl
sar
jg
test
xor
adc
push
mov
in
xchg
stos
int3
fidivs
rorl
jns
inc
imul
clc
jecxz
push
xchg
rol
pushf
or
hlt
cbtw
out
lret
movsb
pop
mov
jbe
mov
dec
mov
push
and
pushf
sub
dec
xchg
inc
and
inc
jno
mov
shrl
rolb
jecxz
out
or
sub
nop
lret
aaa
add
repz
in
pop
lea
lods
inc
and
mul
movsb
mov
ds
jecxz
jns
ja
inc
pop
inc
cmc
aaa
mov
clc
nop
repnz
cmpsl
int
pcmpgtb
int3
add
pushf
aam
insl
inc
pop
in
pop
std
out
push
testb
sub
xabort
jg
push
push
mov
sbb
leave
inc
fcoml
lcall
jmp
adc
int
xchg
xor
inc
lock
push
jecxz
and
sbb
or
add
inc
pushf
cmp
fdiv
jg
pop
inc
loop
scas
ret
sub
push
imul
mov
shlb
loop
sub
shrl
out
int3
jae
push
sbb
movl
ret
movl
subl
leave
jne
xor
push
push
push
pop
add
dec
dec
adc
ret
jb
into
xchg
mov
xchg
jg
push
sub
jp
daa
cmpsb
das
mov
xor
jbe
std
outsb
mov
push
pop
mov
mov
or
xchg
nop
xchg
xorl
dec
cli
jbe
add
shll
scas
add
stc
xchg
inc
dec
inc
inc
repnz
cltd
aaa
pop
push
xlat
cwtl
jg
out
mov
cmp
fildll
test
out
xchg
pinsrw
add
jno
scas
testl
repz
cli
push
xchg
xor
enter
imul
fistpl
jbe
movsl
lret
xchg
add
fcompp
jns
cld
sub
or
ss
insb
daa
mov
mov
sub
inc
adc
jge
push
cmpsb
dec
mov
sub
repnz
rclb
push
pop
lret
cmc
flds
dec
pushl
fldl
cs
shl
inc
out
dec
insl
add
cwtl
shlb
data16
cmpsb
pop
pop
pop
fucomp
fisttpll
xorl
lea
mov
jp
mov
and
dec
xchg
xchg
dec
jmp
push
daa
xor
adc
pop
xor
data16
shrl
xor
inc
sbb
sbb
jmp
jns
aam
push
pop
inc
push
xor
mov
stos
dec
imul
dec
jecxz
int
or
hlt
scas
inc
lahf
pop
rcr
shrb
gs
aad
jge
jno
mov
stos
lret
idiv
and
addr16
cmp
push
sbb
ss
imul
out
push
inc
mov
cmc
sub
mov
inc
lret
inc
mov
clc
mov
aad
les
xor
jne
or
mov
xchg
or
and
and
adc
mov
incb
xchg
aam
dec
fdivr
leave
push
or
data16
out
shlb
stos
inc
adc
push
pushf
mov
out
pop
xchg
xor
mov
repz
addr16
xchg
test
rcll
mov
shll
enter
adc
sub
mulb
inc
nop
ficoms
jbe
add
sbb
not
ljmp
sbb
inc
push
call
inc
fisttpl
fwait
sbbl
test
inc
add
shll
insb
and
insl
jae
mov
mov
repz
arpl
sbb
in
push
pop
pop
xor
mov
jo
testl
stc
addr16
stc
lcall
add
shll
ds
jp
and
lcall
push
insl
jae
je
mov
pop
add
pop
adc
inc
xor
xlat
std
mov
push
ret
lock
rcll
push
cmpsb
iret
jbe
subb
jle
mov
dec
fs
adcl
rorb
mov
mov
stc
xor
movsl
xor
jle
icebp
push
push
jb
mov
adc
mov
lea
or
and
jl
sub
test
into
pushl
push
xorb
rorb
dec
test
cmp
cmpsl
insb
jo
inc
loop
push
sub
or
cwtl
sbb
insl
ljmp
push
sub
lods
fnstcw
outsl
adcl
and
out
ss
pop
push
test
and
mov
xor
add
jecxz
and
jne
ljmp
out
cld
adc
ror
push
jge
or
jae
mov
cmp
push
lea
xchg
insl
leave
int
aas
ja
fwait
pop
sub
cmpb
lods
dec
hlt
fwait
movsl
sbb
sbb
out
daa
lahf
mov
adc
mov
jmp
add
xchg
fwait
bound
js
test
jno
xor
aaa
dec
jg
lahf
inc
fndisi(8087
mov
imul
mov
movsl
mov
ss
or
ljmp
add
mov
sahf
push
out
xor
movsl
mov
push
adc
test
adc
jb
cmp
lret
aam
xor
enter
scas
loopne
or
jle
and
jp
aam
test
pushf
lahf
stos
shlb
fistpl
mov
jp
inc
leave
imul
dec
fisttpl
fbld
mov
mov
gs
mov
mov
dec
jmp
sbb
jge
test
sub
adc
pop
xor
mov
lea
lods
xor
mov
mov
sbb
xchg
shlb
dec
movsl
sbb
mov
inc
in
ret
aam
sbb
sub
test
stos
add
or
shll
mov
push
and
inc
call
xchg
sbb
cltd
inc
mov
and
xchg
stc
jecxz
xchg
mov
popf
bound
orl
jbe
sub
and
rcrl
and
xor
mov
sbb
mov
sbb
mov
inc
cmp
mov
insb
mov
pushf
cwtl
jns
jmp
movb
enter
add
stc
loopne
aad
xchg
mov
lcall
mov
xchg
stos
cmp
lock
fucomi
loope
scas
mov
cmp
xchg
dec
pusha
mov
or
add
pop
jns
dec
mov
repnz
fistps
inc
push
roll
mov
xchg
push
and
mov
jmp
shr
sarl
pop
sbb
cmp
rcrb
sbb
iret
out
out
imul
in
adcb
fiaddl
rolb
push
xor
icebp
fidivrs
push
inc
mov
jae
inc
and
add
imull
and
jl
mov
xchg
je
outsb
test
cmp
cmp
leave
out
leave
inc
popf
push
pushw
lock
pop
pop
fcompl
cmp
mov
sahf
xlat
add
cmpsl
cmp
daa
mov
jae
test
sub
mov
ret
pop
push
addb
mov
sbbb
cmp
sbb
shlb
mov
call
mov
das
jecxz
insb
rsqrtps
ja
cmp
xor
mov
adc
in
push
loopne
push
js
std
test
outsb
jb
movsb
xchg
push
xor
or
lea
mov
fists
inc
and
mov
sbb
xchg
outsl
mov
addr16
cltd
mov
push
gs
sbb
shlb
popa
xchg
jp
scas
and
fs
cmpsl
push
xlat
or
or
cmc
fcompl
cltd
mov
jns
lods
fmull
xor
mov
xor
lods
aad
sub
pop
addr16
mov
add
les
movsl
mov
and
pop
jnp
xor
daa
sbb
inc
fildl
jo
or
cmp
mov
xchg
and
addb
push
mov
dec
jns
scas
shrb
je
jns
cmp
add
shll
mov
cmp
mov
inc
dec
or
es
fmuls
ret
mov
or
and
aaa
push
inc
scas
mov
aam
xor
pop
add
jg
popa
dec
das
cmp
sbb
scas
out
in
pop
rcrb
cld
les
iret
adc
mov
inc
and
jmp
mov
xorl
movsl
in
fldl2e
pop
stos
outsb
and
jbe
jp
scas
popa
and
xchg
cmpsb
dec
jo
xor
lods
pop
iret
test
mov
hlt
dec
scas
sbb
mov
mov
xorb
fnstcw
fsubrl
in
push
icebp
loope
fdiv
iret
xchg
adc
pop
xor
iret
outsb
lds
ret
dec
outsb
das
or
fnsetpm(287
loope
sub
push
mov
jg
dec
arpl
sahf
popf
pop
inc
jb
push
add
out
add
imulb
xlat
fs
pushf
rcr
nop
data16
push
stc
xchg
jecxz
aas
filds
mov
lahf
sbb
test
push
or
mov
sbb
cmp
xchg
jp
loope
and
xor
outsl
inc
movsl
sbb
mov
loope
rcll
add
shlb
jle
inc
andl
dec
sub
mov
sar
inc
mov
sub
add
cmpsb
pop
xchg
leave
sub
mov
dec
mov
fsubs
mov
iret
neg
adc
cld
or
hlt
xor
cli
dec
loope
push
push
loop
push
cmpsl
movsl
call
data16
arpl
or
test
iret
fisubrl
xor
mov
icebp
mov
add
pop
sarb
gs
in
div
sbb
and
mov
xor
mov
add
push
push
and
inc
adc
int3
and
xchg
divl
popf
mov
mov
mov
sarl
sub
or
jo
pop
adc
sub
dec
stos
mov
aaa
mov
jge
ret
push
aad
test
mov
xchg
aaa
bound
push
jp
jmp
notb
pushf
jno
mov
mov
sbb
call
arpl
mov
imul
sbb
sub
mov
mov
dec
pop
or
inc
notl
mov
or
mov
push
clc
enter
xor
fistpl
mov
xchg
rcr
jne
or
xchg
cltd
das
push
in
dec
testl
out
mov
jmp
testb
cmp
ret
fsubrl
jl
mov
jae
inc
sbb
repz
loopne
push
ja
jnp
pop
xor
push
rcr
adc
loopne
sub
sub
push
repz
lock
scas
mov
loope
mov
into
jnp
gs
push
ret
and
push
icebp
jmp
cmp
cli
ror
mov
loope
mov
test
xchg
fmull
and
fimuls
jb
pop
mov
adc
dec
xchg
dec
shlb
cwtl
lahf
mov
inc
pop
nopl
in
pop
jmp
ljmp
test
and
rcll
xchg
add
dec
cwtl
xlat
subb
aaa
movsb
sbb
pushf
cmp
mov
xchg
std
pop
jnp
scas
pop
jg
mov
mov
into
leave
pop
ret
xchg
cmpsb
cmp
or
cmp
sbb
scas
sahf
das
add
mov
popf
and
mov
pop
iret
pop
fistpl
sti
add
add
sti
mov
out
mov
and
sbb
push
cmp
xor
mov
loopne
movsb
and
pop
add
jnp
pop
dec
inc
insl
mov
push
and
loope
ret
mov
ret
inc
mov
dec
icebp
iret
clc
outsl
fwait
mov
insl
push
stc
xor
in
cli
sbb
or
enter
jnp
fwait
stos
mov
outsl
jno
jo
rolb
mov
cmc
pop
push
adc
push
call
jg
jl
clc
aas
test
push
push
into
aad
daa
inc
aam
aad
cwtl
push
lahf
pop
push
lods
push
sbb
and
push
push
pop
add
push
insb
shl
repnz
mov
out
fisttpll
aas
cld
inc
push
in
test
or
add
les
shr
nop
mov
outsl
addr16
push
add
pop
in
mov
aad
pop
mov
pop
pop
andl
xchg
xor
les
popf
test
pop
mov
sbb
mov
cmp
adc
das
xor
sbbb
inc
mov
rcrb
imul
movsl
xchg
es
jae
add
lock
xor
addr16
inc
or
xor
sahf
sbb
xor
arpl
cmp
lods
ret
dec
fstpt
sub
insl
ds
mov
adc
add
sbb
std
xor
xor
cmc
pusha
mov
cmpsb
ja
pop
xchg
imulb
xor
call
out
es
push
sahf
movsb
insl
pop
xchg
mov
mov
cmp
cmp
jg
jp
ficompl
jecxz
push
loop
xor
mov
sub
pop
mov
mov
inc
sbb
jb
push
xor
fs
popf
test
mov
divl
test
dec
jne
mov
cmp
cmpsb
mov
mov
xchg
fsubs
mov
jbe
cld
scas
push
and
jmp
or
xlat
sub
xchg
nop
insb
mov
mov
or
jle
lock
dec
adc
xchg
mov
or
jns
push
cmpsb
mov
icebp
roll
push
jo
mov
ja
popa
cs
outsl
adc
dec
hlt
jo
mov
push
add
or
addl
insl
cmp
jo
mov
mov
in
pop
jmp
pop
add
pusha
jno
push
sarb
mov
sub
xchg
push
xorl
and
lcall
xor
pop
mov
xchg
mov
add
fimuls
xor
mov
addr16
or
icebp
dec
arpl
out
cs
push
cld
mov
pop
add
or
movsb
jno
xchg
push
sbb
dec
pop
pop
cmp
xorb
pushl
idivb
xlat
xor
dec
insl
notb
mov
mov
fs
sbb
clc
les
fwait
in
mov
loopne
pop
jg
popf
fdivl
repnz
cmp
xor
jecxz
out
mov
lods
inc
popl
adc
std
scas
adc
arpl
xor
lock
nop
addl
add
mov
cmp
fistl
mov
std
lods
adc
inc
push
xchg
dec
std
clc
dec
dec
sub
loop
inc
inc
mov
dec
fwait
repnz
idiv
mov
repz
adc
mov
shll
jb
cmp
xchg
sahf
ret
cmp
stos
xor
and
sbb
cmp
out
int3
out
mov
mov
ljmp
xor
mov
pop
neg
insb
inc
xchg
inc
or
fsubs
add
sub
xor
arpl
data16
cmp
rcrb
dec
lahf
into
scas
sbb
mov
sub
pop
test
pop
lds
call
mov
or
fbld
imul
cmp
arpl
cmp
and
xor
leave
xchg
cli
jno
xor
jmp
mov
xchg
and
clc
je
xchg
jmp
scas
fs
or
push
push
loope
push
pusha
cmp
outsb
pop
xor
imul
bnd
mov
loopne
aad
aam
mov
cmpsb
les
lret
repz
pop
sub
test
push
xor
mov
leave
out
outsl
fimuls
jl
jmp
cwtl
int3
xchg
and
lcall
pop
sbb
pop
or
sub
mov
adc
mov
les
in
inc
jg
xchg
inc
shll
mov
pop
ret
inc
inc
add
xor
xchg
iret
adc
lods
xor
or
add
xchg
leave
loop
jg
sahf
sbb
mov
fildl
out
out
clc
mov
fbld
fmull
test
aaa
sti
ret
pop
push
hlt
mov
mov
mov
loopne
sub
jne
enter
xchg
fs
push
fs
mov
mov
mov
inc
mov
push
mov
pop
and
and
loopne
aad
mov
cmc
mov
push
cmpsb
fildll
xchg
outsb
jno
repnz
aas
leave
sbb
movsl
bound
test
sbb
cld
scas
lahf
dec
lret
out
loopne
popa
loop
popf
jne
sbb
aad
sbb
imul
mov
in
fucomp
inc
xor
das
pop
sbb
adc
push
cs
or
pop
jbe
dec
inc
jne
mov
lods
add
dec
dec
push
mov
test
popf
rorl
out
ja
jg
ds
popa
ljmp
mov
cmp
pop
xchg
stos
or
add
add
pop
mov
insl
pushf
jnp
jno
jle
aad
divb
fistpll
cmp
test
or
jbe
in
call
cmc
cmp
push
mov
xchg
jl
cli
adc
xchg
insb
push
push
bswap
add
fsub
call
outsb
inc
pop
je
enter
filds
int
or
sti
adc
mov
dec
push
iret
insb
sbb
sub
in
mov
sbbl
jmp
out
cmp
in
popf
sbb
mov
or
loope
cmp
xchg
loop
xchg
pop
fmuls
dec
dec
aad
add
stc
sub
sub
in
adc
and
dec
stc
ss
das
jecxz
loope
shl
xchg
push
inc
mov
xchg
lea
jmp
lds
ret
addr16
push
test
inc
pop
nop
lcall
jmp
sub
mov
loope
pop
cli
ret
fs
fs
sbb
in
push
xchg
push
jg
fs
shll
leave
mov
inc
push
mov
lock
orl
sti
nop
mov
inc
and
pop
les
mov
ret
stos
cmp
stos
loope
or
adc
jb
fcomip
sarb
mov
into
xchg
mov
push
mov
xchg
pop
xor
sbb
aaa
iret
mov
mov
leave
jmp
ss
cld
dec
enter
xchg
icebp
cmpsb
xchg
dec
addps
jg
pop
cmp
mov
pop
inc
fisubs
dec
je,pt
fmull
push
es
and
popf
arpl
repz
xor
addr16
cld
mov
ja
rcrl
pop
ds
sahf
sti
sub
add
or
sub
jmp
jae
jne
sub
nop
xchg
jbe
add
test
inc
inc
jle
sbb
lahf
pop
sti
fcom
jle
sub
inc
xchg
dec
stc
sub
add
mov
lods
inc
mov
mov
in
js
les
sub
fnstenv
push
sbb
jne
xchg
add
mov
dec
or
leave
mov
push
bound
cli
inc
or
aad
std
addr16
cmpsb
inc
into
test
inc
movsl
sbb
negb
mov
xor
mov
cld
daa
sbb
dec
push
cmpxchg
punpcklwd
jne
iret
push
out
je
dec
sbb
subb
jmp
imul
mov
inc
into
mov
outsb
jnp
xor
ds
jae
pop
fwait
xchg
or
jns
daa
loopne
push
hlt
push
inc
test
pop
add
xchg
mov
data16
dec
hlt
std
ds
adc
test
push
fucomi
push
cmovg
outsb
in
xchg
movsb
mov
xchg
or
fstl
shll
arpl
push
mov
push
movsl
xlat
pop
repnz
inc
notl
push
pop
adc
stos
or
inc
dec
xchg
or
pusha
sbb
inc
sub
pushw
dec
dec
es
add
data16
cltd
inc
and
sub
lret
out
xor
and
or
mov
test
cmc
xor
mov
ret
bound
ret
lods
repz
flds
scas
pop
cmp
inc
aad
pop
fsubrl
push
and
dec
adc
les
pop
leave
aad
out
cmp
cmp
fistps
jmp
xor
daa
adc
xchg
jmp
pop
cmpsl
xchg
call
push
sub
sbbl
dec
pop
test
mov
out
sbb
cwtl
lahf
imul
sbb
fwait
mov
or
into
in
lods
sub
mov
loope
dec
xor
inc
jmp
jb
int
dec
fcomps
pop
inc
cmp
sub
cltd
jl
mov
iret
stc
mov
pop
adc
dec
jp
in
jo
daa
inc
push
cwtl
test
push
mov
pop
lods
gs
and
or
adc
test
push
lods
xchg
inc
testw
lcall
jmp
inc
sbb
imul
pop
xor
sbb
movsb
xchg
andb
ret
jns
xor
and
pop
adc
cmpsl
lcall
pop
cs
out
or
mov
add
push
inc
dec
scas
jae
insb
out
sbb
push
dec
aaa
rcrb
add
push
lret
leave
xlat
push
and
mov
xchg
xchg
and
or
pop
pop
ret
dec
dec
lods
and
cmp
insb
xor
mov
outsl
jle
push
xor
cmpsb
out
mov
or
iret
leave
cmp
in
adc
pop
ljmp
jbe
and
shll
je
mov
hlt
rcrb
test
ja
dec
mov
insl
dec
inc
out
and
add
xlat
std
fcomps
mov
cmpsl
push
cmp
fwait
repnz
mov
push
push
aam
sub
xchg
cs
inc
pop
inc
sbb
movsb
push
dec
cs
ds
hlt
mov
pop
mov
push
es
adc
sub
or
cmc
daa
outsb
add
sub
pop
inc
push
push
fisubs
scas
ja
in
fcoms
sub
or
das
sbb
xchg
dec
jo
call
ror
loop
insl
dec
into
cmp
sbb
jmp
aaa
pop
mov
repz
inc
outsl
inc
mov
or
out
les
add
push
ljmp
ljmp
push
aad
jb
or
mov
movsl
xor
dec
mov
aaa
sti
sbb
xor
rorb
int
iret
push
mov
cmp
xor
aad
gs
mov
or
fistpl
cld
daa
xor
mov
fdivrs
add
dec
mov
pop
xor
mov
insb
addr16
std
lea
adc
fmull
sbb
xchg
pop
imul
iret
rcll
jae
divb
jno
imul
mov
cmp
pusha
xchg
fcmovnu
insl
rcr
sbb
mov
mov
mov
lods
jae
xchg
pop
mov
lret
sti
pusha
mov
in
icebp
dec
ds
iret
inc
les
stc
leave
ficompl
xchg
xchg
faddp
fistl
lret
pop
push
fsubrl
lea
adc
mov
clc
clc
xchg
es
in
sti
pop
inc
insl
test
fs
and
add
xor
sub
dec
cld
enter
or
repnz
sub
push
jae
adc
cmp
push
cmpsl
xchg
test
ja
loope
xor
fsts
push
aaa
pop
repnz
test
pop
arpl
jns
mov
adc
fsubl
push
sub
jle
nop
int3
fwait
lods
and
ror
incl
test
add
xchg
roll
mov
lods
fbstp
out
add
cmp
sbb
imul
mov
mov
es
jg
jae
jbe
aam
adc
sbb
scas
cmp
shr
or
adc
jmp
stos
inc
inc
pop
aas
mov
mov
nop
dec
lods
sbb
xchg
sub
jge
int3
repnz
ret
jle
int3
xchg
ja
mov
xchg
add
mov
add
mov
mov
sub
sbb
pop
enter
fiadds
cli
push
push
out
iret
xlat
sub
jecxz
pushf
mov
in
sbb
adc
and
dec
cltd
inc
jge
into
les
js
pop
es
push
dec
gs
lods
sbb
aaa
adc
hlt
push
adc
mov
adc
insl
adc
cmc
fucomi
in
sbb
stc
test
sbb
loope
cmp
mov
popf
in
lods
xchg
xchg
dec
ljmp
or
jmp
sti
cmp
test
xor
push
push
popf
mov
dec
lret
push
sbb
ljmp
mov
pop
dec
sub
rolb
ftst
sbb
sbb
lds
mov
mov
sahf
in
push
into
rorl
and
and
dec
scas
divb
mov
arpl
cmp
repz
bound
adc
sbb
ret
lret
insl
je
ja
sbb
pop
inc
jle
pop
lods
mov
mov
insb
sbb
jno
je
int3
imul
push
xor
imul
sbb
xchg
out
xor
pushf
push
add
dec
jp
cmp
jno
mov
ret
stc
popa
dec
cmp
inc
adc
cs
xor
outsb
xchg
mov
jb
in
imul
sbb
ljmp
adc
leave
mov
jno
cs
mov
sub
sbb
xchg
fcoms
iret
scas
shlb
aam
xlat
in
sbb
xchg
xchg
pop
mov
fs
fcomi
mov
popa
shl
out
into
cmp
and
fmull
push
or
test
xchg
sub
data16
loop
notb
inc
add
fmulp
mov
sbb
scas
rcr
mov
movsl
dec
lock
scas
mov
xlat
jge
mov
sbb
in
push
stos
push
lds
and
cmp
sub
lret
add
popa
jle
xchg
shrl
adc
enter
cwtl
xchg
dec
mov
aam
lcall
test
stos
repnz
test
in
popl
inc
pop
addl
bound
daa
out
bound
push
loopne
pop
iret
xchg
adc
shl
mov
add
pop
push
cmp
dec
adc
in
jb
xor
cmp
ss
cwtl
dec
test
cmp
inc
mov
inc
stc
xor
cs
fwait
out
in
jg
add
cmc
std
ds
sbb
mov
mov
imul
fisttpl
sub
out
xor
cmpsb
mov
push
jg
hlt
aas
sbb
fcomp
ss
pushf
push
shll
adc
push
scas
pop
in
mov
test
out
jge
or
jo
mov
aad
popl
add
scas
out
enter
xlat
leave
test
pop
sbb
call
and
repz
mov
popa
lds
repnz
or
lock
shlb
or
sbb
push
jl
adc
adc
mov
and
jb
sub
jno
cmpl
push
xlat
push
mov
push
fs
call
dec
daa
out
and
fs
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
dec
ficoms
ds
addl
and
mov
movsl
into
dec
nop
mov
jecxz
xorl
test
in
inc
and
or
inc
lahf
adcl
leave
mov
or
mov
ja
sub
xchg
mov
pop
aas
xchg
dec
jo
xor
and
mov
pop
mov
add
andl
lods
fsubl
mov
lock
push
lret
lock
int3
xor
test
mov
push
stos
push
dec
push
push
jns
and
cmpb
mov
lret
enter
mov
dec
js
add
fld1
bound
movsb
dec
cmpsl
and
xchg
test
mov
push
jmp
or
xor
fmulp
cmp
adc
pop
mov
aas
lds
lahf
test
push
push
ljmp
inc
mov
jne
aam
insb
jge
test
cmp
sub
cmp
mov
pop
insl
rcl
shlb
pop
jae
aad
js
pop
in
push
adc
pop
sub
cmc
adc
cwtl
mov
adc
push
adc
pop
jp
cli
sub
ja
in
fnstenv
in
cmc
test
mov
lods
dec
ret
jae
mov
stc
lods
push
or
pop
sbb
adc
push
js
arpl
xchg
insl
arpl
out
fcmovnb
shlb
mov
cmp
je
add
adc
in
mov
add
mov
sub
int
adc
aaa
dec
cli
jg
ret
mov
js
js
jo
pushf
iret
dec
push
inc
mov
scas
int
loope
adc
adc
cmp
pop
push
pop
mov
es
andb
wbinvd
scas
or
test
push
jbe
lret
inc
in
xor
mov
test
popf
cwtl
dec
mov
repz
jb
inc
inc
insl
jb
pop
je
lret
test
popa
cmpsb
lahf
jb
loope
sub
jb
rolb
mov
std
imul
jbe
imul
loopne
fsubrs
dec
dec
scas
fidivrl
call
jecxz
cmpsl
add
or
test
insb
out
in
loop
and
test
lods
mov
pop
pop
dec
mov
mov
out
push
in
inc
push
xchg
sbb
jae
adc
mov
icebp
insl
int
lahf
adc
mov
aas
push
and
mov
in
xchg
and
mov
adc
daa
mov
cmpsb
mov
test
push
adc
or
dec
in
push
cmpsb
fmul
fists
push
pop
sub
sbb
call
push
mov
mov
push
enter
aaa
or
mov
stos
loop
cli
shrl
and
mov
mov
daa
stos
jb
jle
inc
in
xor
add
loop
in
cmp
les
pop
mov
cmp
js
adc
pop
nop
push
mov
bound
mov
in
cld
inc
jl
iret
andb
loope
repz
out
mov
or
adc
inc
mov
xchg
mov
xchg
daa
pop
nop
jb
jae
out
xor
push
ffreep
cwtl
rolb
add
xor
or
icebp
ja
cmp
and
jl
mov
xchg
mov
and
scas
fcompl
inc
jecxz
scas
sbb
out
xor
sub
push
inc
lret
mov
mov
push
pop
mov
fwait
mov
push
cmp
lret
cltd
mull
in
ret
dec
aam
mov
mov
push
pop
pop
xchg
jno
imul
jnp
lret
push
addr16
xor
pop
ljmp
cltd
or
push
sbb
mov
pop
mov
clc
getsec
mov
jl
mov
inc
insl
fnstenv
icebp
mov
scas
ret
push
popf
test
mov
lods
or
sbb
pop
imul
sub
stc
clc
xchg
or
mov
push
mov
xchg
mov
cmpsb
mov
jg
sub
add
data16
movsl
cmp
repnz
adc
mov
aad
and
sub
xorl
pop
jno
sarb
jg
leave
dec
mov
idivb
and
dec
lret
jmp
lahf
scas
jle
lods
or
loopne
orl
push
xchg
push
mov
xchg
push
push
movsl
lea
sbb
mov
mov
adc
fstp
xchg
push
out
dec
inc
scas
xchg
add
cmp
jae
mov
pop
addr16
adc
jno
xor
push
push
bound
nop
mov
out
enter
into
xchg
cmp
cli
stos
inc
pop
outsl
aas
sub
out
dec
sbb
add
push
mov
sub
jl
jno
jae
xor
call
jnp
addr16
jp
and
movsl
cmp
push
mov
lret
gs
cmpl
das
sub
pop
mov
mov
inc
cmp
pop
xchg
lods
or
push
mov
rcrb
pop
mov
adc
mov
dec
mov
mov
inc
jge
xor
testl
mov
clc
mov
push
mov
push
leave
fstp
subl
or
or
mov
test
or
push
fucom
cld
out
push
cmp
je
xchg
loope
insb
je
outsl
mov
jge
inc
popa
xor
pop
test
sub
mov
dec
or
adc
pop
cmp
mov
mov
das
add
imul
ret
inc
js
add
orl
es
sub
cmc
test
fucomip
out
insl
mov
test
fistps
and
cwtl
dec
lods
mov
les
push
lods
ds
scas
movsl
fadds
in
mov
fs
mov
inc
std
push
xchg
pushf
mov
mov
jae
xchg
in
jl
inc
inc
test
addr16
push
je
imul
bound
movsb
and
jne
fisubrs
fistl
es
sbb
std
cmp
add
cmc
or
pop
scas
inc
mov
lret
sub
std
in
and
movsl
inc
mov
scas
xchg
lods
cmpsb
push
push
cmpsl
sbb
or
mov
loop
pop
sbb
and
movsl
lahf
jo
pop
sub
sub
out
or
cld
mov
cmp
push
into
pushf
pop
fists
mov
adc
jmp
mov
adc
out
aam
add
test
aaa
subl
cmp
lahf
jae
fsubrs
cmc
lret
notl
jle
insl
or
jp
sub
xor
push
cmp
add
fwait
mov
xor
ss
add
in
cmp
mov
test
mov
xchg
xchg
cwtl
outsb
outsb
lods
sub
cmpb
mov
sbb
or
insl
stos
cwtl
cs
xchg
stc
test
ret
jo
out
dec
mov
mov
mov
push
test
leave
stos
sti
xor
inc
push
cmp
inc
cmc
push
jne
js
cmp
sahf
mov
xchg
pop
data16
in
loopne
repnz
sbb
pushf
xchg
rcrb
dec
mov
or
rep
push
dec
mov
xchg
mov
mov
ffree
push
pop
and
mov
into
mov
hlt
int3
outsb
orl
push
dec
test
addr16
add
cmp
outsl
cmpsb
sbb
popf
insl
mov
sub
popf
aas
rep
sbb
test
nop
fidivrl
add
jnp
jg
lods
and
add
in
pop
repnz
in
jg
jle
mov
dec
push
inc
cld
repz
test
adcl
sub
xchg
movsl
or
mov
push
or
fwait
cli
adc
das
xor
mov
pop
int
mov
push
jmp
rorb
pop
fwait
push
cmp
sub
jne
sbb
and
jp
push
mov
aaa
inc
cltd
movsl
sbb
jb
jbe
hlt
adc
sbb
mov
imul
iret
mov
push
aam
cmp
xor
inc
or
notl
xchg
in
inc
and
jb
lea
cwtl
pusha
or
rorl
xchg
test
mov
sbb
shl
leave
push
ret
jae
inc
dec
jo
push
fwait
arpl
sbb
das
add
cmc
iret
pop
popf
sub
jge
imul
add
les
or
inc
enter
test
xor
mov
aaa
stc
pop
mov
jb
repz
imul
xchg
mov
in
lea
stos
imul
cmp
loope
rolb
inc
jle
dec
inc
sbb
in
loopne
inc
push
inc
aad
xor
arpl
and
push
and
fcom
test
xchg
loop
js
outsb
inc
cld
jecxz
ss
and
fsubrs
imull
mov
xor
cltd
fists
icebp
dec
adc
pop
ret
mov
outsb
lahf
pop
jmp
aaa
aam
mov
push
xchg
hlt
test
mov
decb
out
out
scas
and
pop
mov
sbb
mov
popa
and
push
or
dec
ret
mov
mov
ja
arpl
les
int3
fwait
jecxz
call
sub
push
repz
andl
jl
int
orl
ja
jl
data16
cmp
jno
mov
jecxz
cmp
dec
pop
and
cmp
jg
nop
pushf
mov
cmp
fld
jge
data16
test
or
fsubrl
pop
loope,pt
pop
pusha
mov
es
jecxz
es
pop
dec
mov
ret
pusha
lock
dec
divb
jle
or
mov
cs
and
mov
push
sub
mov
sub
jne
fildll
movsb
jmp
jnp
fnstsw
fstl
stos
sbb
jb
idivb
inc
add
popl
cmp
ja
adc
mov
orl
xor
lods
add
xchg
loope
sub
xlat
xchg
out
das
pop
mov
and
push
sahf
popf
cmp
pop
jl
movsb
inc
adc
rclb
add
dec
mov
sbb
mov
test
cmp
test
jl
aaa
fcompl
mov
lods
inc
sub
sbb
ret
lods
mov
jecxz
arpl
jl
cmp
jge
callw
loope
scas
sbbb
and
inc
stos
enter
mov
arpl
enter
rcrb
pop
rclb
mov
mov
or
xor
add
stos
add
sub
fisubl
push
sbb
xchg
stc
dec
hlt
inc
pop
xchg
ja
inc
jge
pop
sbb
push
lds
dec
mov
adc
outsl
testb
rorb
jbe
test
insl
repnz
stc
push
adc
sbb
pusha
jecxz
push
imul
cmp
cmp
sbb
sbb
xor
mov
aam
lock
scas
leave
push
shll
mov
xor
push
fisttpl
or
and
mov
repz
mov
fisubrl
repnz
orw
repnz
pusha
pop
fnstenv
sub
shrl
lds
and
bound
pusha
gs
loope
or
sbb
mov
mov
adc
mov
ss
iret
and
repnz
ss
jns
add
jl
sti
cmp
mov
mov
stos
lock
nop
mov
mov
in
and
xlat
jmp
daa
sub
inc
adc
loopne
loope
repnz
andb
rcrb
jl
sub
lcall
pusha
minps
lods
sysexit
je
cld
sbb
lret
jle
and
cld
popf
push
xchg
scas
mov
sbbb
inc
jb
dec
add
dec
xchg
pop
add
xor
push
std
push
fucomip
scas
repz
cwtl
mov
sub
or
mov
adc
push
push
mov
sbb
mov
xor
inc
inc
gs
imul
jns
iret
inc
cmp
mov
cmc
imul
cli
pop
xchg
or
pop
or
mov
pop
xchg
sbb
shll
fwait
sti
cmpb
mov
cli
mov
dec
loope
mov
fistpll
inc
and
jmp
pop
stos
insb
cltd
pxor
mov
cld
pop
mov
loope
push
adc
outsl
stc
jo
dec
push
mov
cmp
fstl
xchg
int3
pop
jle
cmp
dec
mov
mov
test
aas
cmp
lods
xchg
ficoml
out
in
addr16
outsb
add
xchg
insb
xchg
mov
pop
mov
sti
add
jmp
stos
das
aam
or
pop
into
testb
inc
ljmp
mov
mov
cmpsb
mov
into
or
jno
sub
push
dec
jg
ret
xchg
cmp
xor
push
imul
sub
cli
imul
xor
or
sub
scas
or
push
es
sbb
out
sbbb
das
and
lcall
lcall
mov
mov
and
cs
mov
pop
les
adc
lea
sbb
add
push
addb
mov
rcrb
test
xchg
xchg
and
ret
mov
pop
xchg
xchg
push
jne
push
nop
mov
pop
jne
ljmp
std
test
movsl
mov
jns
int3
jmp
jmp
jbe
imul
ds
push
shlb
or
cmp
and
jo
dec
je
scas
je
mov
in
shrb
and
movsl
and
rolb
stc
sub
or
fidivl
stc
mov
xchg
pop
in
mov
mov
cmp
add
cs
jb
pop
sbb
cmp
or
cld
mov
enter
xor
adc
lret
dec
sub
jo
push
out
or
mov
mov
shll
imul
jne
pop
push
inc
data16
sbb
xchg
aaa
push
jp
ds
scas
adc
lds
ret
bound
xorb
mov
sub
adc
lret
testl
xor
add
jecxz
pop
outsb
and
cmp
call
and
jo
lds
xor
dec
or
jmp
fwait
jle
stos
pushf
cmp
xchg
sub
jmp
jge
jne
std
adc
mov
and
stos
in
repz
shl
lock
sbb
test
in
loopne
aam
aam
add
lds
pop
aas
adc
mov
sarb
jge
push
pop
pop
adc
add
shlb
push
icebp
jns
std
jb
cs
insb
pop
mov
jns
jb
cwtl
out
sub
dec
int3
mov
pop
sub
cmpsl
xchg
pop
bound
ds
cmp
dec
jnp
popl
shlb
adc
xor
fdivr
call
cmp
ja
and
mov
inc
mov
jnp
sbb
adc
out
pop
cs
xchg
fcoml
repnz
or
loop
add
add
xor
cmc
fs
lret
mov
push
cmp
push
in
mull
je
lods
lock
scas
mov
or
dec
sub
jmp
popf
xchg
sbbl
or
dec
out
mov
xchg
mov
pusha
push
cmp
jne
or
dec
loope
mov
sbb
das
cmc
mov
sub
fxtract
scas
ret
dec
leave
dec
loop
pop
cltd
add
jecxz
jl
mov
dec
imul
repz
jg
pushf
sbb
loop
push
int3
push
scas
mov
or
ss
aad
inc
inc
mov
sub
dec
pop
mov
mov
arpl
incb
test
ljmp
ret
movsb
pop
mov
std
repz
xchg
stc
test
mov
orl
and
dec
call
das
shrb
mov
fwait
dec
out
add
sahf
scas
jae
push
bound
and
loope,pt
inc
outsb
add
or
aaa
cmp
lret
test
nopl
stc
add
jno
cmp
cmp
ret
in
addb
aas
sub
cmp
push
mov
and
cmp
ficoms
cmp
pop
pop
pusha
daa
gs
jmp
xchg
ficompl
dec
imul
fldl
push
inc
push
add
inc
data16
bound
xchg
iret
push
sub
ss
jno
mov
fmull
das
cli
filds
sti
clc
cwtl
sub
mov
push
roll
dec
ficomps
or
or
push
pop
mov
push
into
lods
push
mov
jns
xlat
push
and
jnp
push
or
jg
jmp
sahf
adc
xchg
imul
cmc
and
mov
cld
cmp
mov
or
jg
les
mov
lods
out
and
and
je
pop
xor
and
fucom
cmpsb
sbb
cmc
mov
xlat
fnstcw
jbe
sub
mov
imul
sub
mov
xchg
mov
in
pop
jmp
and
and
jne
cmc
loop
add
inc
cmpsb
jl
sbb
andb
and
cmp
bound
pop
out
sbb
jg
jne
add
xor
jne
mov
mov
popa
pop
add
jbe
fsts
lret
xchg
jmp
jbe
pop
iret
mov
test
movsl
mov
or
ret
jb
xchg
push
sub
jecxz
popa
xchg
in
cmpsb
inc
and
xchg
add
cwtl
leave
paddsw
addb
inc
mov
scas
scas
test
mov
hlt
lea
pushf
movsl
fwait
mov
mov
push
pop
out
cmp
add
jae
out
add
das
out
lods
scas
in
or
test
in
and
jno
xchg
or
xchg
push
mov
jbe
stc
pop
jg
enter
mov
cmp
xor
in
inc
mov
dec
sub
in
inc
gs
pusha
jle
inc
push
movsl
cmp
jmp
ret
insb
fsubs
sbb
cmp
dec
movsl
pop
bound
sbb
mov
xchg
arpl
pop
test
int3
jmp
cmp
cmp
std
push
pushf
scas
jge
lcall
adc
lret
call
inc
push
leave
test
jae
push
mov
scas
addl
adc
gs
adc
push
imul
out
xchg
and
daa
cmpsl
xchg
scas
fxsave
in
cli
pop
jecxz
push
xor
mov
aaa
call
bound
and
sub
movb
cmp
lahf
sbb
pop
mov
adcb
fildl
dec
call
ds
scas
jp
mov
ret
mov
cmp
fcomi
rorb
ficomps
jne
mov
pop
push
pop
jl
test
pop
aas
test
inc
lods
pushf
test
mov
jge
rcll
xor
loope
subl
rorl
xor
jp
and
pop
mov
imulb
inc
push
ret
fstps
xchg
mov
push
imul
push
mov
test
mov
or
pop
loop
mov
add
insl
xchg
popf
cmp
lret
imul
jle
jbe
stc
cli
inc
or
xchg
sub
add
inc
outsb
mov
nop
push
mov
ret
int
into
rcll
in
jp
dec
add
push
and
push
push
dec
fdivrl
pop
js
add
scas
push
aas
pop
pop
aam
lods
pop
jo
pop
add
push
imul
ffreep
pushf
bound
movb
bound
mov
and
ror
shrb
imul
mov
cmp
arpl
inc
xchg
mov
add
sub
push
xchg
jnp
sub
sub
dec
or
pop
adc
jno
xchg
push
pop
daa
jnp
mov
push
je
xor
xlat
and
cmpsl
cmpsb
test
sbb
mov
xchg
or
xor
loopne
inc
fmuls
push
dec
or
cwtl
lods
cmc
out
xor
out
cltd
push
jno
out
inc
hlt
push
cld
loopne
dec
xchg
iret
xchg
loopne
dec
sbb
pop
test
insb
rcrl
addr16
inc
fsubrs
insb
xchg
ja
jmp
and
std
add
adc
data16
add
clc
adc
push
std
dec
pop
ds
test
nopl
xlat
sbb
loope
insb
cwtl
pop
pop
in
mov
xor
addr16
pop
cmp
inc
add
cltd
adc
frstor
mov
jo
and
mov
xchg
dec
out
in
dec
sub
dec
cli
xchg
xchg
ret
idivl
add
push
mov
imul
push
in
push
movsb
xchg
pushf
adc
sbb
jp
mov
pminsw
test
add
adc
sub
std
or
cmpb
iret
adc
repnz
vpmaddwd
dec
xchg
in
push
adc
sub
test
stos
out
test
daa
cltd
sub
in
in
or
jg
shl
and
inc
dec
aad
insl
push
icebp
push
mov
inc
loop
and
call
cmpsb
sbb
mov
pusha
pop
jbe
ss
xorl
add
xchg
dec
in
setae
in
cmp
outsb
adc
fs
in
std
xchg
pusha
pop
dec
and
xchg
xchg
add
sub
dec
mov
jno
in
shlb
fisttpll
test
iret
insb
adc
inc
sbb
and
mov
xorb
add
xchg
test
fisttps
nop
add
pushl
mov
test
cmp
rorb
lret
mov
push
hlt
insb
out
arpl
lahf
stos
mov
push
pop
mov
stos
addr16
test
mov
sarb
in
push
adc
frstor
sar
push
push
sarl
mov
lods
inc
cltd
loop
pushf
sbb
xchg
inc
je
addr16
data16
dec
pop
add
pop
addr16
xor
loope
xor
dec
cmpsl
push
cmpl
outsl
xchg
mov
decb
cmp
ljmp
jb
xchg
jnp
adc
cmp
ret
jnp
bound
adc
stos
dec
xchg
cmp
int3
or
mov
mov
cmc
jle
cmpsl
fnstcw
jecxz
jbe
mov
cmpsb
jg
stos
ficoml
sub
cmp
adc
sbb
adc
movsl
stos
xor
mov
mov
scas
rcl
or
roll
outsb
loope
add
movsl
sbb
rolb
hlt
cltd
mov
aad
fiaddl
shll
jns
jmp
mov
xor
cmpsl
stos
stc
jp
fmull
sub
mov
popf
sbb
adcl
les
pop
inc
and
sub
test
cwtl
push
push
mov
add
adc
dec
enter
cmpsb
lea
pop
test
mov
shll
inc
fiadds
push
add
pop
dec
xorb
scas
mov
cmpsb
or
add
lods
fs
mov
ja
cmp
arpl
imul
call
add
mov
call
push
arpl
sbb
fildll
repz
sub
or
mov
jo
xor
push
aad
cmp
mov
cmp
jp
aaa
sar
add
stos
inc
jmp
sub
lret
in
push
push
cmpb
pop
stos
in
psubusb
cmp
push
fucomp
mov
outsl
fldt
stc
shrb
mov
push
push
push
aaa
push
and
push
aam
arpl
mov
dec
arpl
fmuls
icebp
loop
aad
mov
mov
adc
pop
lods
aam
jb
pusha
push
cmp
cld
scas
push
lret
mov
push
sub
aam
jecxz
mov
add
into
push
dec
pushf
shrl
mov
ss
enter
or
fnstcw
cmp
in
adc
inc
xor
dec
or
pop
iret
leave
xchg
arpl
cmp
jae
lahf
push
add
mov
cmp
fdivs
dec
xchg
jge
dec
lods
test
cmpsl
sub
xor
pop
jecxz
outsb
test
and
adc
and
lcall
out
cmpsb
pop
mov
add
repz
push
imul
test
or
xlat
jge
mov
or
push
xchg
mov
sub
and
movl
mov
test
push
adcb
pop
mov
inc
out
fcompl
daa
js
sarl
xor
and
and
js
stos
out
inc
pusha
add
pop
jo
mov
mov
clc
das
inc
inc
cmp
addb
fisubrl
mov
aad
push
cmpsb
dec
xor
mov
movsl
mov
cmp
pop
mov
je
test
push
imul
adc
sbb
mov
movsb
arpl
xchg
pop
outsb
push
int3
fcmovbe
cmp
in
fwait
jae
movl
pop
aas
cmpsb
stc
mov
or
cmp
xchg
hlt
jmp
xor
lods
std
imul
sahf
mov
jns,pt
jmp
pop
mov
or
fcomi
push
jae
jle
loopne
imul
lgs
je
xchg
loope
test
push
xor
sub
sub
cs
push
mov
jb
das
and
rep
cmp
lea
dec
outsl
scas
loop
jae,pt
std
pop
mov
seta
pop
sbb
push
cmp
adc
xor
jo
push
mov
ds
stos
or
and
jg
jmp
lods
mov
xchg
jae
add
sbb
xor
inc
ror
in
incb
add
adc
add
or
xor
cmp
dec
lret
jb
pop
iret
xorb
repz
xor
adc
outsb
test
loope
mov
pop
mov
sbb
inc
xchg
nop
js
stos
or
divl
cmp
push
dec
lret
adc
lds
in
ret
repnz
mov
or
and
hlt
push
cmp
out
xchg
in
jecxz
arpl
outsb
repnz
sub
cmpsl
stos
sub
movsl
xor
int
cmp
push
jg
cmpsb
lea
and
rol
leave
idivb
mov
cltd
mov
mov
jl
dec
test
ret
push
stos
cmp
movl
inc
ss
movsl
jns
mov
pop
test
inc
xchg
es
divb
lcall
mov
jo
dec
mov
lea
mov
loop
inc
shrb
xlat
ja
and
leave
stos
adc
arpl
push
inc
or
cmp
jbe
inc
mov
push
outsl
xor
and
test
popa
jp
add
loop
xor
test
repnz
mov
xchg
pop
ret
adc
inc
in
mov
mov
sub
push
je
loopne
lods
pop
dec
or
sub
or
pop
lret
popa
xchg
jno
int3
adc
push
iret
jp
inc
push
cmp
mov
neg
shrb
sbb
rsm
iret
es
push
arpl
sbb
out
shll
fmull
pop
sbb
loopne
mov
mov
or
jno
and
fidivs
sub
lret
mov
imul
cmp
push
jle
popa
imul
mov
and
outsb
jno
sbb
jo
repz
cmpb
jnp
or
ss
imul
cmpsb
aam
push
pop
cli
lret
aam
mov
or
loope
mov
aam
out
movsl
push
shll
dec
add
xor
or
jp
and
into
jle
and
les
jno
scas
out
out
lret
xor
clc
daa
xor
stc
jne
cmc
stos
call
mov
ret
rcll
xchg
mov
ja
mov
mov
xchg
and
leave
jl
pop
pushf
mov
hlt
xchg
mov
dec
push
call
jno
or
push
push
insl
sbb
es
adc
pop
cmp
in
jecxz
sbb
jmp
push
and
fwait
pop
lcall
pop
testb
or
add
sub
push
jle
add
sbbb
repz
pop
outsb
mov
or
cmp
cs
fbstp
ja
add
ret
mov
aad
out
inc
call
sahf
jb
aad
mov
insb
mov
mov
call
in
cmp
xchg
inc
and
sub
or
jecxz
lahf
add
lods
dec
mov
lods
out
cmp
repnz
mov
inc
out
xchg
or
call
dec
mov
jg
incl
test
aaa
cmp
mov
mov
gs
repz
rcl
mov
gs
lods
icebp
xchg
movsl
inc
inc
xor
dec
cwtl
imul
jmp
adc
pusha
arpl
inc
mov
stos
and
mov
dec
negl
cmpsl
cmpsl
out
or
cltd
pop
cltd
cmp
cmpsl
out
jmp
je
in
xor
test
rcrl
sub
aad
xchg
xchg
fwait
mov
push
loopne
nop
mov
movups
repz
push
mov
rcr
dec
rolb
cmp
adc
mov
cltd
xchg
pop
mov
ret
fnstsw
mov
adc
and
jno
xor
insl
add
test
sub
cmp
ret
imulb
lcall
in
loopne
xchg
push
adc
test
push
jge
sub
dec
sarl
pop
sub
jns
ss
add
push
popf
insb
cmp
cld
imul
call
ds
xor
adc
subb
mov
shl
cmpsl
jae
mull
iret
test
sbbl
stos
enter
mov
cmp
rclb
mov
ret
xlat
mov
fwait
adc
shlb
fistpll
jnp
lods
je
cmpsb
jo
mov
test
sub
mov
cs
cltd
out
adc
xor
call
push
fdivr
shrb
orl
add
icebp
loop
mov
test
dec
mov
out
enter
shlb
aam
pop
iret
xor
js
sub
push
push
sbb
gs
mov
inc
fidivrl
xchg
sbb
inc
xor
sub
or
jno
add
jmp
sub
mov
jmp
popa
cli
push
xchg
fisubs
cmpsb
sbb
cmp
push
mov
push
jbe
insl
cltd
add
push
mov
mov
imul
ds
jb
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
fwait
mov
xor
addb
xor
test
xchg
inc
cmp
outsb
arpl
and
mov
int
dec
cmp
and
insl
mov
rcrb
sub
call
pusha
jb
mov
pop
cmpsb
dec
adc
stc
push
xchg
daa
sub
push
data16
cltd
andl
cmpl
add
pushf
or
cmp
icebp
insl
aaa
inc
mov
sub
sbbb
inc
fs
push
pop
fcmove
xchg
sub
les
inc
mov
xchg
mov
jno
icebp
fs
xor
adc
mov
push
hlt
jbe
push
pop
clc
sbb
jmp
mov
movb
lea
xchg
sbb
jle
inc
and
push
hlt
stos
daa
loopne
and
inc
cwtl
xor
and
add
sbb
aas
popf
mov
je
mov
js
and
js
or
mov
push
je
scas
out
outsl
inc
ljmp
pusha
ret
arpl
int3
scas
enter
fsts
or
dec
je
rolb
hlt
outsl
pop
aaa
xor
mov
outsl
aad
sub
inc
or
xor
sbb
lret
lret
cs
in
pop
test
mov
scas
ja
xlat
inc
aam
pop
aad
add
inc
inc
dec
enter
es
or
mov
in
jg
inc
shll
sbb
aaa
or
and
imul
pop
stos
jae
rol
adc
cmp
push
test
push
jo
ret
loope
cwtl
popl
leave
dec
or
loope
pop
xor
hlt
cmp
xor
rcl
popf
test
push
fimull
das
bound
daa
rcll
cltd
lea
mov
mov
out
fdivrl
loop
popa
mov
sqrtps
sqrtps
enter
lahf
fstl
pop
adc
cmp
shll
pop
into
sbb
mov
dec
out
movsl
cmp
pusha
mov
sbb
and
inc
jae
lahf
lds
jb
pop
lods
stos
ja
mov
mov
cmp
adcl
movsb
sbb
test
popf
jae
lods
sbb
adc
imulb
imul
sub
pop
xor
mov
movsl
test
lea
mov
repnz
xchg
les
cmp
jmp
fcoml
rorb
lcall
rcrb
sbb
fistl
mov
fimuls
mov
pop
mov
or
es
mov
sbb
cmp
das
sti
mov
inc
cmp
mov
jmp
aaa
stc
add
and
pop
inc
ret
cli
push
cli
xchg
stos
faddl
xor
mov
pop
out
fs
ret
bound
cmpsb
lods
mov
adc
cwtd
insl
mov
and
xor
adc
mov
adcl
jno
cmp
out
xchg
fcoml
das
mov
loope
std
xchg
cmp
add
shlb
les
jnp
mov
mov
push
jl
movsl
xchg
shl
insl
mov
inc
hlt
ret
pop
lret
mov
cmp
fwait
shll
fwait
push
push
gs
ja
das
jp
dec
rolb
cpuid
and
adc
cmp
jne
cmp
add
mov
or
imul
or
fdivrl
shr
adc
adc
mov
xchg
data16
jnp
out
ret
hlt
push
jb
sbb
push
push
ret
je
lods
icebp
dec
das
push
jo
push
ret
fisubrl
xchg
cmp
cmp
ror
repnz
rcrb
test
out
sbb
push
sub
add
mov
lret
pop
popf
or
call
push
dec
imul
mov
insl
arpl
pop
sub
jmp
out
loop
loopne
xchg
and
mov
jmp
jmp
cld
div
aam
dec
xor
cmp
cmp
jne
sub
sahf
jp
dec
dec
sti
cltd
cmp
insb
cmp
xor
xlat
cmp
dec
ljmp
leave
or
es
call
ret
loopne
dec
dec
lods
mov
std
std
cwtl
lcall
cmpsb
stos
pop
sub
call
mov
arpl
ret
push
test
ss
jb
aaa
adc
cmp
pop
dec
push
mov
cltd
add
frstor
sbb
mov
clc
mov
jl
sub
mov
jg
hlt
sbb
ret
sbb
out
inc
in
adc
cli
dec
rol
xchg
in
lret
imul
push
mov
mov
dec
mov
mov
inc
xchg
jbe
outsb
shll
div
jbe
fdivl
aaa
jo
lret
into
test
cmp
cld
and
out
sub
mov
in
add
push
mov
outsb
or
mov
movsb
fs
pusha
jne
xor
cmp
test
xchg
jae
adcl
mov
cld
cwtl
ja
mov
cmpsb
adc
sahf
push
cmp
push
stc
cli
stos
mov
enter
push
xor
adc
cmp
fisttpll
out
lret
fdivrl
inc
call
push
add
mov
add
test
mov
es
adc
sbb
inc
mov
mov
inc
ret
mov
adc
jl
addr16
xor
pcmpgtb
adc
pop
test
inc
inc
jno
in
roll
mov
xchg
sbb
mov
and
mov
cmp
mov
lea
mov
inc
inc
je
mov
ljmp
mov
xor
xorb
push
lret
ss
cmpsl
mov
lahf
jb
and
mov
dec
int3
jo
sub
xchg
mov
dec
outsl
out
mov
mov
sub
cmpsl
es
xchg
lods
or
add
add
pop
mov
ja
pop
fucom
call
mov
out
inc
stc
sub
je
jmp
push
add
shlb
cld
sbb
xchg
lock
sub
jmp
cmc
push
cmp
lahf
addr16
or
pop
insl
aam
in
push
xchg
mov
sub
in
xchg
push
or
rcrl
test
add
ja
aas
dec
xchg
je
std
shrb
and
or
inc
push
jge
mov
adc
jl
lahf
and
dec
out
push
cmp
sub
xchg
rcl
leave
popf
push
or
mov
int
andl
cs
xchg
pop
jb
sbb
js
mov
inc
int
sbb
sti
fisttpll
popf
insl
mov
add
sbbl
out
in
xchg
jbe
adc
clc
adcb
lods
daa
push
cs
test
popa
push
push
insb
lock
das
lea
out
cmp
jl
out
pop
pushf
stos
pop
in
pop
and
addr16
or
cltd
inc
seto
dec
rcrl
das
movsb
loopne
inc
dec
push
inc
add
fisubrs
push
push
mov
push
lcall
cmc
lcall
testb
dec
mov
add
mov
das
movsb
fiadds
mov
mov
mov
int
mov
dec
jnp
mov
sti
fisttpll
sti
loop
jmp
shll
add
xor
adc
and
add
in
adc
pop
push
dec
ss
orb
out
ficomps
push
mov
jnp
inc
orl
mov
push
stos
xor
je
or
ja
mov
cli
jae
add
mov
cmp
lahf
lret
pop
push
stc
nop
int
xorl
ja
aam
inc
inc
loopne
dec
out
lahf
adc
repz
decl
cmpsl
lods
sub
call
loope
jl
and
fcoml
adc
stos
ljmp
call
negb
cmp
mov
dec
xchg
push
sub
out
xchg
insl
jmp
xor
push
sbb
sub
mov
pusha
adc
mov
test
fldenv
cmp
jl
stos
imul
testb
jno
jo
cmp
out
pop
xchg
or
ficompl
dec
aam
xor
cld
test
fsubrl
or
insb
sub
mov
sbb
ljmp
sub
repz
mov
arpl
js
jge
loop
or
divb
sub
loope
dec
xor
cmp
jmp
outsl
out
mov
hlt
shlb
pop
pop
stos
add
fwait
xchg
mov
dec
shl
mov
aaa
dec
mov
add
inc
jecxz
xchg
popa
enter
rcrl
loope
or
lods
outsl
mov
out
pop
dec
fstl
incl
arpl
jmp
or
lock
jecxz
aad
insl
loopne
jne
pop
cmp
inc
jmp
xchg
scas
and
mov
mov
lret
pop
sbb
mov
hlt
jnp
stc
mov
sbb
mov
mov
je
movsl
pusha
mov
out
leave
jmp
and
push
xchg
fldenv
mov
cmc
daa
fwait
add
inc
cmp
mov
bound
xchg
fisubrs
sbb
inc
es
in
mov
inc
push
jecxz
in
xor
dec
mov
inc
leave
shlb
xor
andb
imul
sbb
xlat
push
cli
push
es
xchg
xchg
fisubs
ljmp
inc
std
mov
inc
sbb
or
add
xchg
push
int3
dec
or
push
scas
push
lret
repz
lods
mov
inc
mov
sbb
or
mov
int
je
scas
mov
aaa
xchg
repz
out
dec
and
xchg
testb
mov
scas
dec
rcrb
or
aaa
or
cmp
ret
mov
data16
jg
xchg
xor
mov
mov
ljmp
push
dec
pop
loopne
add
push
add
jnp
sbb
sub
test
mov
maxps
cli
push
dec
push
outsl
rcrl
fadds
clc
int3
and
fistl
pusha
stos
mov
std
cmp
sar
inc
mov
cmp
stc
xchg
rclb
outsl
test
inc
pop
and
fadds
dec
xchg
xchg
mov
cs
shrb
mov
push
js
dec
sahf
cwtl
inc
fs
mov
xor
push
pop
sbb
aam
mov
jle
sub
sahf
movsb
mov
mov
repz
into
mov
gs
insl
add
in
lcall
lods
jnp
jge
popf
push
insb
roll
ficoms
push
xchg
enter
std
push
jg
xor
lea
xor
ja
sbb
cmp
lea
push
leave
push
push
dec
inc
sahf
repnz
xchg
mov
mov
add
jecxz
adc
xor
not
das
fsubrl
test
aas
inc
jne
lods
cmp
cmp
push
cmc
mov
data16
es
rorl
push
nop
push
ja
repnz
mov
es
ds
mov
cmp
add
fidivrs
fistl
fcomps
loope
jmp
into
insb
mov
clc
shl
dec
hlt
xchg
sub
and
dec
jl
jle
mov
push
xor
lahf
dec
lea
inc
fmuls
in
jp
adc
faddl
int3
mull
hlt
sub
leave
insb
pop
inc
push
repz
js
adc
push
pushf
sbb
dec
call
incl
inc
test
push
pop
mov
repz
lcall
loopne
or
mov
pop
les
sarl
jbe
xor
lock
adc
in
or
xor
mov
xchg
clc
mov
dec
jae
pop
pop
dec
cmp
arpl
fldenv
andb
shl
rorb
cmp
pop
enter
or
loopne
xchg
bound
mov
adc
jp
aad
int3
push
ljmp
adc
fprem
cmp
lods
in
pop
push
icebp
in
in
fbld
fildl
xchg
fsts
es
mov
pop
imul
into
iret
dec
mov
sub
icebp
xchg
sbb
pop
sbb
int3
mov
sahf
push
pop
lods
or
clc
or
outsb
dec
das
cld
jns
mov
sub
test
pop
push
xor
mov
mov
pop
xchg
lods
push
mov
imul
or
add
jp
loope
inc
out
mov
popf
in
and
cmp
or
cmp
lcall
roll
mov
ret
push
gs
jb
ss
jns
int
xchg
mov
icebp
mov
adc
jns
popf
xchg
hlt
inc
xor
push
lret
add
add
pop
js
add
push
pop
adc
ret
sbb
inc
insb
stos
and
hlt
jp
lods
int
adcl
adc
adc
subl
movsbl
cmp
sub
push
pop
xorl
mov
dec
adc
xor
jo
and
outsl
and
aaa
mov
push
xor
shl
and
rorl
jle
es
push
cwtl
in
imul
lea
rclb
lret
push
outsb
dec
sbb
cmp
in
outsb
fwait
sub
push
fsts
js
cmp
inc
dec
mov
adc
push
out
daa
lret
or
push
outsl
cmp
test
lods
enter
fcomip
sbb
push
xor
std
out
pushf
test
add
push
add
mov
adc
sbb
push
inc
icebp
mov
push
cmp
inc
ficompl
stc
xchg
inc
loop
xor
lods
xchg
aaa
pop
and
push
aas
push
add
jns
into
xlat
pop
punpcklwd
inc
scas
mov
sahf
sub
andl
sub
jp,pn
popa
mov
scas
scas
rcr
push
push
pop
sbb
pop
icebp
push
leave
sahf
add
mov
es
xchg
push
or
call
jae
sahf
insb
dec
test
testl
jo
loop
xchg
stc
or
push
cs
sbb
dec
mov
in
or
cmp
shlb
shll
sub
out
fimuls
adc
cmpsb
test
sbb
aas
mov
lret
pop
subb
mov
jp
push
mov
or
repnz
aam
push
jmp
lock
xchg
mov
mov
out
xchg
fsub
fwait
xchg
and
ja
ljmp
push
aas
and
jle
pop
push
nop
adc
fnstenv
pop
cli
aaa
jbe
mov
mov
jp
loop
dec
pop
add
repz
clc
imul
push
jbe
inc
lods
push
pop
imul
sbb
jns
or
insb
insl
push
or
cmpsb
insb
les
mov
popf
lcall
scas
cmp
xor
cmp
mov
sub
mov
push
pushf
or
iret
test
inc
adc
imul
fsubp
hlt
xor
inc
jno
mov
iret
push
out
cmp
addr16
sti
in
add
test
lret
shll
xchg
sbb
in
xchg
add
mov
pop
mov
push
mov
mov
mov
mov
or
sub
lahf
push
insl
mov
adc
hlt
push
cmpb
out
dec
data16
lea
bnd
out
call
jmp
out
stos
jns
push
notb
add
roll
decl
and
in
stos
mov
jp
lahf
mov
mov
lds
jecxz
sub
cli
xlat
int
lea
pop
je
sbb
sub
fidivrl
cli
loopne
xchg
imul
jecxz
sti
bnd
and
mov
cwtl
out
and
loopne
mov
add
ret
jle
lds
inc
insb
xchg
jo
scas
mov
mov
cmp
lret
cmpsl
push
int
sub
pop
call
mov
and
sub
imul
xor
pop
test
outsl
test
jl
or
mov
jge
inc
ja
repnz
mov
mov
in
in
je
movntps
mov
pop
and
fcmovne
cmpsl
dec
rcl
xchg
push
icebp
movsl
enter
and
inc
sub
jle
and
icebp
in
sub
push
jo
repnz
mov
sbb
je
jmp
sub
daa
in
xchg
and
pop
in
jno
sarb
repz
cli
mov
push
mov
enter
dec
cmp
mov
mov
fildll
cwtl
pop
dec
dec
mov
sbb
iret
js
fcoml
scas
in
sbb
mov
stos
into
mov
loop
aas
jno
or
adc
fmull
adc
enter
dec
inc
cltd
daa
mov
mov
jp
pop
jmp
or
add
in
push
push
in
rclb
mov
outsb
inc
je
pop
sbb
jbe
clc
ja
mov
das
rcr
xor
arpl
pushf
cmpsb
push
jno
ss
inc
lods
cltd
int
es
out
cld
pushf
xchg
add
mov
out
jbe
adc
jno
loope
sub
mov
aam
fmuls
fdiv
add
sbb
jl
test
add
test
xorb
push
push
ds
movb
sahf
loop
or
ss
and
jbe
inc
mov
clc
aaa
and
out
cmp
push
mov
xorb
push
jb
dec
mov
mov
jg
sub
push
pop
pop
xchg
jle
es
clc
sarl
pop
aad
inc
sub
push
ljmp
push
push
addr16
lcall
outsb
ljmp
lods
pop
jp
mov
rcll
sarl
and
popa
icebp
sbb
mov
fcmovne
xchg
xchg
lds
xlat
mov
lret
jo
mov
call
inc
dec
and
cmp
dec
lcall
xor
dec
gs
xchg
imul
xor
and
test
mov
pusha
cvtpi2ps
stos
dec
adc
mov
mov
mov
mov
jae
jbe
cld
xchg
icebp
iret
cli
and
pusha
xchg
movsl
jns
jge
outsb
xchg
subb
mov
paddsb
mov
adc
jae
mov
cmpsb
addb
js
adc
ja
mov
icebp
adc
dec
lahf
add
mov
cmpsb
xor
add
cmovns
ja
js
ja
add
mov
in
jb
inc
imul
rol
push
add
ljmp
shrl
and
xor
xor
and
rcrl
inc
call
daa
jle
mov
dec
cmp
into
and
and
int
push
movsb
pop
sub
or
ljmp
in
jp
jge
mov
mov
cmpl
stos
cltd
popf
jbe
mov
lret
shll
ss
pop
sbb
sbb
adc
lock
clc
jne
test
and
stos
cmp
cmp
lret
inc
loope
push
lds
mov
hlt
mov
xchg
mov
test
dec
loope
aad
xorb
jge
pusha
add
xor
dec
out
sub
test
fnsave
mov
cmpsb
sarl
jmp
loop
pop
les
push
mov
jge
jo
test
jbe
out
insl
or
mov
cmpsl
sbb
add
dec
hlt
xor
inc
xchg
divl
outsl
pop
int3
lods
sub
lret
movups
std
and
xor
addr16
hlt
jae
adc
sub
xor
push
in
je
stc
dec
repz
jg
and
fwait
mov
push
jg
stc
rcrl
ffreep
sbb
mov
out
mov
xchg
push
cmc
das
and
lock
add
or
cmp
outsb
movsl
jmp
pop
cmp
push
xchg
lods
inc
sbb
add
mov
xchg
movsl
lods
cmp
jle
ds
sbb
dec
rorl
and
cmp
xchg
inc
test
pop
jne
stc
nop
popl
mov
repnz
ss
xor
xchg
shll
aam
mov
test
sbb
sbb
push
cmp
sub
cmp
jno
push
ds
ljmp
push
cmp
cld
lcall
mov
movsb
xchg
aam
mov
in
lcall
mov
cmpsb
cmpsb
xorl
loop
xor
jo
dec
shrl
mov
pop
jg
mov
add
jmp
jb
xchg
mov
sbb
adc
xchg
push
shr
pop
jl
pushf
mov
pushf
or
rcll
cltd
in
sub
outsb
les
aas
loope
lods
mov
ss
mov
sahf
fiaddl
dec
or
mov
fnsave
lret
gs
mov
out
or
jg
mov
test
sbb
pop
fwait
insl
fucomip
pop
inc
jmp
push
xor
shl
sbb
cmp
inc
gs
add
mov
adc
inc
push
xchg
cmp
mov
mov
xchg
or
jmp
xchg
fsub
mov
scas
outsb
push
fwait
out
rcrl
dec
mov
push
cmpsl
adc
push
sbb
pop
and
xchg
arpl
push
dec
fwait
cmp
bound
movsb
ficomps
out
cld
jno
push
jg
jns
xchg
decl
push
shlb
nop
jge
ret
cli
stos
jb
in
pop
sbb
mov
pop
jmp
push
or
stc
xchg
lock
dec
lock
test
popa
xchg
stos
js
push
cmp
mov
or
bound
mov
sbb
push
daa
leave
adc
mov
pop
aaa
mov
pop
jg
xor
xchg
lock
lahf
mov
cmp
or
ud0
dec
jge
in
stc
jecxz
scas
mov
imul
push
push
insl
cs
jecxz
push
pop
push
test
adc
testl
clc
jmp
fcmovne
mov
xor
js
adc
jg
mov
mov
inc
dec
rorl
hlt
insb
hlt
aam
in
movsb
lods
psraw
mov
ljmp
push
cmp
add
jnp
sbb
xchg
xchg
mov
enter
addr16
es
cs
jbe
movsb
cmpb
xchg
dec
vaddps
push
in
xchg
push
sbb
lds
push
pop
aad
nop
shl
adc
mov
cmp
aaa
in
xorb
push
mov
sbb
cld
cmp
shrl
xchg
cmp
sti
popf
push
shlb
fistpl
push
jmp
jns
into
jnp
lock
scas
jbe
out
push
xchg
test
bound
inc
popa
std
lds
scas
enter
xcrypt-ofb
cmovnp
inc
push
inc
ljmp
movsb
push
mov
fucom
add
stc
loopne
stos
jae
push
mov
xchg
in
xchg
push
xchg
xlat
fidivrl
or
loop
pop
orb
movsb
sbb
daa
aas
std
add
ljmp
and
xor
pop
mov
stc
xor
pop
imulb
test
pusha
mov
sbb
lcall
std
int
mov
cld
or
mov
jne
cmp
mov
dec
lock
sub
iret
mov
inc
inc
ljmp
push
lcall
mov
loopne
inc
mov
push
lock
loope
xchg
mov
add
fisubl
xchg
jge
imul
push
sbb
in
mov
jmp
or
add
or
dec
shll
stos
sub
adc
jnp
mov
sahf
pop
mov
mov
in
roll
pop
adcb
cs
and
arpl
mov
and
adc
adc
gs
mov
pop
push
fcoms
xor
mov
fwait
imul
pusha
rclb
scas
aad
ss
push
pop
pusha
lods
pop
les
xchg
scas
out
sarl
dec
add
sbb
push
sub
or
movsl
xor
cld
in
push
fs
sets
ret
mov
into
fidivs
pop
sahf
lret
orl
inc
jnp
mov
enter
and
sti
insb
mov
js
mov
mov
or
je
cmc
cmp
loopne
mov
and
jno
test
cmp
mov
add
sbb
xor
mov
stos
jb
addr16
scas
rcrb
movsb
sub
inc
or
lods
out
int3
stos
and
sub
pop
aaa
data16
mov
scas
shl
daa
daa
out
mov
mov
test
inc
iret
lock
js
outsb
pop
xor
in
pusha
add
sub
and
movsb
aaa
cmp
and
xchg
add
mov
xor
xlat
mov
xlat
mov
add
sahf
inc
pop
or
sub
xor
add
push
pop
jp
sub
test
stos
sbb
imul
pop
lea
outsb
lret
jge
ja
add
mov
icebp
femms
test
push
stc
repnz
int3
jmp
pop
cmpsb
push
out
lahf
xor
inc
jmp
ss
xor
pop
imul
adc
nop
in
jmp
arpl
and
cmp
es
inc
mov
xchg
popf
test
sbb
pop
xchg
pop
xor
dec
cmp
aas
adc
and
loop
and
aas
mov
mov
add
jns
fnstcw
hlt
data16
add
dec
push
std
imulb
xorl
ret
sbb
shlb
aas
stc
pusha
movsb
andl
push
pop
mov
mov
out
push
xor
std
scas
gs
sbb
repnz
cmp
cmpb
out
and
mov
adc
aad
dec
pop
sahf
mov
mov
icebp
adc
dec
xchg
ret
cmp
jle
xchg
out
out
in
psubusw
mov
sbb
filds
sbb
sbb
mov
adc
hlt
int3
mov
inc
push
hlt
mov
sahf
sti
jbe
cmp
and
add
xchg
mov
gs
insb
faddl
idivl
mov
and
stos
insl
in
and
notb
cmc
mov
inc
in
dec
and
ds
xchg
les
and
pop
jns
pop
inc
into
mov
test
push
dec
adc
xchg
je
sub
in
fstl
adc
fidivs
push
mov
jb
out
push
push
inc
ss
aas
imull
gs
es
mov
les
inc
lret
cmp
dec
nop
sti
int
loope
stos
and
adc
pop
andl
sbb
and
mov
inc
in
jne
mov
sub
push
push
xchg
mov
dec
jbe
les
push
sub
out
lods
stos
leave
data16
insb
das
test
jg
sarb
arpl
mov
fbld
jno
clc
mov
inc
sub
mov
mov
mov
add
xchg
and
and
inc
les
jg
adc
mov
jmp
ret
and
dec
xor
and
sub
add
div
jb
jecxz
out
jge
cmpsl
mov
mov
movsb
pop
pop
mov
adc
cmpsb
stos
test
js
loopne
bound
push
outsl
add
jns
shll
stos
inc
push
mov
cs
push
shrl
push
sub
fwait
or
hlt
mov
lcall
sbb
call
ret
mov
pop
lret
mov
cmp
mov
mov
outsb
cwtl
mov
lcall
int
add
int
adc
jl
bound
fwait
push
push
pusha
ss
mov
fwait
adc
adc
into
cmp
jecxz
imul
xor
testb
mov
rorb
loop
out
sti
xlat
lret
and
or
shlb
lret
gs
loop
xchg
sbb
jb
adc
bound
sarb
lcall
testb
popa
jnp
pop
in
pop
jae
xchg
push
adc
jns
leave
jnp
test
sbb
fidivrl
repz
lret
mov
add
movsb
leave
pop
inc
aad
and
cli
xlat
fistpl
jge
xor
cmp
in
inc
lret
shll
pop
int3
movsb
pop
add
nop
sbb
not
sti
jne
mov
or
or
test
xchg
inc
jmp
lcall
jb
cmp
mov
sbb
data16
sub
adc
test
and
lahf
sbb
xchg
add
fiaddl
push
xor
inc
push
in
cmp
adc
adc
add
in
rorb
aas
ss
cwtl
push
sbb
and
shrb
and
jecxz
cwtl
pusha
ja
mov
mov
cld
mov
lcall
cld
sbb
ficomps
dec
ret
cli
ret
jl
leave
add
mov
xor
pop
rcrl
push
xchg
loop
mov
loope
imul
aas
mov
mov
lahf
mov
mov
sahf
hlt
ljmp
xchg
arpl
lret
jno
mov
jmp
cs
imul
ret
in
stc
popa
cltd
cmp
adc
lods
and
lods
mov
bound
stc
or
add
xchg
push
arpl
and
pop
cmp
or
adc
aad
pop
and
xor
sbbb
insl
fildl
mov
and
sbb
push
fsubs
adcb
ror
clc
or
stc
gs
out
jg
test
pop
or
jmp
inc
push
out
loop
adc
xchg
cld
mov
hlt
and
mov
mov
insb
add
mov
les
adc
jno
mov
sbb
or
scas
sub
out
in
orb
mov
mov
decb
dec
int
xchg
lods
mov
dec
insl
add
mov
divl
insl
jecxz
lods
push
dec
or
insl
and
push
scas
push
sbb
leave
push
imul
adc
add
push
inc
rorb
pop
pop
pop
mov
daa
push
popf
bound
sub
push
out
and
outsb
cmp
mov
sub
or
cld
xchg
push
pop
bound
ds
fcomip
ret
sub
push
xor
xor
push
ljmp
js
cmp
inc
in
pop
jp
mov
fldl
xchg
into
scas
pop
stos
jmp
bound
icebp
inc
xorb
inc
push
jmp
or
fs
fdivrl
int3
dec
jne
insb
jecxz
ljmp
hlt
cs
dec
sub
lret
cld
adc
sbb
pop
in
mov
dec
sahf
inc
add
movsb
push
cltd
pop
jnp
or
shrl
jno
mov
shll
add
mov
lret
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
xor
fwait
dec
out
incl
addl
je
cmp
add
dec
add
lcall
jle
ficomps
mov
fistl
or
popa
xchg
xchg
mov
cmp
inc
sbb
pushf
aas
xchg
mov
adc
dec
jb
out
addr16
ret
outsb
lahf
xor
inc
scas
cmp
jae
notl
xchg
in
jne
lahf
loop
cmp
lret
inc
jp
inc
jnp
fidivs
pop
mov
ja
addr16
leave
out
pop
jecxz
add
idivb
insl
ss
popf
push
and
sbb
and
mov
daa
mov
mov
int3
sahf
jmp
mov
pop
jp
xor
sbb
fwait
push
scas
push
inc
pop
sbbb
insb
insb
cmp
jge
stc
mov
xchg
add
aad
xor
cs
mov
cli
enter
jb
and
into
xor
mov
cmp
push
scas
pop
jecxz
dec
mov
scas
lret
mov
pushf
ret
pop
ljmp
les
nop
fsts
and
push
pop
push
sbb
out
add
jg
jnp
les
dec
clc
sbb
aas
or
xchg
xor
inc
adc
jmp
lret
jp
push
ret
lcall
jb
es
mov
add
or
fimull
roll
jge
fildl
mov
sub
mov
jns
cli
addr16
inc
push
int
cmc
insb
aad
push
leave
aad
inc
inc
mov
mov
mov
push
mov
push
fcoml
mov
gs
push
cs
sub
popa
in
aad
aam
frstor
shl
sbb
mov
dec
xchg
push
out
pop
mov
fcomi
sub
mov
mov
and
fwait
lods
imul
or
pop
insl
mov
cld
mov
mov
jns
mov
and
insl
iret
testb
adc
loop
arpl
outsl
sub
mov
stos
ss
add
xor
bound
xor
mov
pop
inc
xchg
ror
ret
jb
xor
inc
rcrl
gs
cmc
jno
daa
loope
jns
movntq
pop
xchg
rorl
cmp
add
aas
mov
cmp
inc
popf
imul
cmpsb
mov
jg
in
xchg
pop
and
mov
mov
cltd
xchg
loop
shlb
call
cli
xchg
inc
push
or
add
outsl
stos
lods
mov
adc
cwtl
xchg
popa
pop
cld
xchg
mov
dec
call
in
mov
inc
push
lds
hlt
or
push
movsb
test
adc
mov
out
pop
cltd
lods
pop
lcall
std
push
in
idiv
addr16
jnp
and
mov
jo
sub
mov
sbb
sarl
test
dec
test
sbb
fiaddl
sbb
adc
dec
sarb
cmpb
imul
dec
insl
mov
add
adc
mov
out
fmull
bound
in
fidivrl
adc
and
nop
fsts
sahf
and
mov
or
xchg
jg
pop
insl
jb
mov
inc
fildll
push
and
jno
push
inc
push
lods
pop
cli
arpl
daa
xor
dec
pop
or
xchg
mov
loopne
cmp
mov
inc
ds
and
scas
mov
repz
addl
xchg
cli
cmp
xchg
cmp
push
cwtl
dec
mov
and
sub
mov
sub
dec
sti
lds
jg
and
cmpsl
xchg
sub
cmp
sbb
gs
fisttpll
insb
mov
jp
xchg
inc
cmp
mov
and
imul
int
test
loope
xor
xor
mov
insb
add
pop
shrl
std
mov
push
imul
push
and
mov
cmpsb
loop
js
or
jp
mov
pop
sub
push
mov
sub
cli
add
aaa
pmaddwd
pop
notb
inc
mov
adc
pop
lods
fwait
or
je
rcrl
sub
sbb
add
mov
bound
sub
jmp
in
aam
shrl
jecxz
and
pop
mov
cld
sbb
mov
leave
sub
aad
sarl
jge
xor
movsb
inc
jl
dec
mov
pop
inc
lods
cli
cwtl
cwtl
push
mov
dec
mov
mov
dec
push
fimuls
xor
mov
inc
push
mov
cmpb
xlat
mov
ret
mov
mov
push
inc
ljmp
je
movsb
mov
movsl
les
sbb
mov
lds
mov
jo
or
testb
fnstsw
cli
shll
negl
ljmp
jne
cmp
cmp
sub
mov
in
fcomi
jmp
xor
jecxz
dec
mov
enter
rorl
sub
stos
xchg
pop
stos
sub
sbb
outsl
sahf
mov
cmp
adc
push
fdiv
mov
cmp
mov
mov
mov
aad
mov
mov
mov
sar
in
push
cs
add
pop
mov
push
push
std
push
jge
jl
fcmovne
mov
lahf
adc
sbb
lahf
repz
sub
and
add
pop
adc
in
add
cltd
cmc
or
addl
jns
jl
pop
pop
pusha
mov
adc
sub
lock
filds
aaa
test
mov
push
jne
je
and
stos
std
lea
inc
push
shrb
out
out
fs
and
mov
roll
push
mov
add
repnz
outsb
and
cmpsl
and
xchg
enter
mov
mov
sub
adc
sub
aad
jl
xchg
or
inc
add
cmp
mov
xchg
ret
js
ret
and
xchg
and
fs
xchg
add
or
xchg
insl
add
xor
jns
lods
lret
idivl
dec
sarl
push
sarb
cmpl
and
pop
xchg
cmp
aam
cmpsb
test
mov
or
xchg
cmp
sahf
adc
ret
or
into
fnstsw
pop
sbb
cmp
dec
inc
mov
mov
pop
movsl
ljmp
cmpsl
inc
nop
jnp
leave
fcmovnb
and
fwait
mov
test
lods
lods
mov
mov
mov
sub
dec
call
rclb
lret
sbb
mov
leave
clc
in
mov
cmp
rcrb
mov
or
data16
jnp
cmp
sub
int
jno
mov
leave
xor
cld
repz
setae
add
sub
out
xchg
jnp
pop
mov
sub
xor
add
imul
orb
out
xchg
or
jnp
pop
mov
mov
dec
mov
inc
or
cli
lahf
cmp
in
leave
gs
in
in
push
in
popf
sbb
scas
pop
push
mov
fdiv
icebp
xchg
cmp
flds
or
push
ds
xchg
insb
pop
and
mov
rcrb
sub
in
sbb
js
shll
pop
xor
imul
js
inc
sub
jp
lret
outsb
jmp
cmpsl
push
popl
fmuls
inc
xchg
popa
sub
mov
repnz
mov
and
push
xlat
inc
jmp
in
mov
fisttpl
push
mov
xlat
mov
scas
cmpsb
pop
lahf
dec
add
jo
xchg
insl
mull
xchg
dec
adc
repz
xlat
mov
fs
dec
je
sub
mov
push
xlat
sub
dec
sub
stc
mov
xchg
in
push
movsl
or
pop
inc
les
mov
xor
push
repnz
jg
shl
pop
cmp
rclb
rcrl
sub
das
shrb
cmp
mov
mov
insb
adcl
push
sbb
xlat
rorb
flds
mov
inc
ret
rcrl
xor
pop
test
pop
test
popw
scas
sbb
mov
sbbl
push
js
mov
xchg
cld
and
sub
xchg
adc
fisubrl
sub
xlat
dec
jns
scas
popa
shll
popf
inc
jmp
xor
and
sbb
repnz
cmp
sbb
push
cmp
inc
adc
hlt
in
into
pop
jg
dec
dec
add
mov
xor
js
loop
js
push
xchg
sti
in
test
xchg
sbbl
mov
pushf
xlat
imul
mov
push
mov
lods
or
test
jp
cmc
loope
mov
lcall
ffreep
das
in
outsl
push
jmp
shrb
jmp
or
mov
mov
mov
lods
adcl
jecxz
push
push
push
inc
mov
push
mov
adc
pop
scas
dec
sub
add
repnz
fnstsw
mov
mov
sub
es
leave
lock
cltd
or
lcall
mov
inc
fsubrs
pop
scas
and
nop
subb
sub
nop
test
inc
cmp
jae
xchg
js
or
jns
mov
addr16
and
push
cltd
les
sub
loope
and
loopne
lea
iret
es
lret
scas
incb
outsl
loope
adc
adcb
inc
data16
add
mov
xchg
rclb
add
inc
add
jle
in
movb
jne
push
imul
leave
sub
out
and
xor
pop
sarb
cwtl
lds
mov
mov
jecxz
pusha
stos
jae
sbbb
scas
lret
mov
xchg
xchg
mov
imul
sub
push
mov
sub
jge
or
imul
imul
dec
xchg
xor
das
movsl
sbb
fadd
mov
xor
lcall
insl
sarb
mov
mov
lahf
and
pop
fwait
cli
in
pusha
aaa
arpl
jo
and
cmpsl
mov
mov
mov
aam
push
repz
hlt
rolb
ds
aaa
xchg
cld
pop
neg
fwait
jp
mov
mov
cs
fmuls
mov
fcoms
out
shl
mov
lods
fcoml
loop
lret
rorb
push
scas
and
loop
mov
repnz
mov
fcoms
sbb
movl
fsubp
lahf
push
cs
in
lahf
dec
adc
sti
inc
push
push
or
adc
push
jnp
push
jns
fcompl
fwait
sub
popf
int3
es
out
outsl
mov
hlt
lcall
insb
push
inc
mov
into
adc
leave
mov
imul
inc
sbb
or
jp
push
sub
inc
xchg
addr16
sub
sub
es
push
pushf
rol
adc
dec
pop
add
int
and
cmp
repnz
push
mov
dec
sarb
push
repz
jl
ja
jmp
popf
test
les
sahf
scas
shr
mov
jns
mov
loop
out
inc
adc
imul
adc
lahf
inc
out
adc
fs
ficoms
cmp
adc
sbb
je
into
arpl
popf
jge
push
adc
cmp
pop
pop
pop
sub
mov
cli
push
or
aad
scas
adc
loopne
adc
jg
icebp
add
jl
xor
mov
xchg
and
mov
jno
push
dec
mov
test
iret
repnz
push
ret
mov
add
lods
movsbl
adc
add
cmp
addl
shll
add
add
push
dec
mov
mov
stc
xor
sub
or
nop
roll
hlt
orb
stos
dec
push
movsl
mov
nop
inc
lahf
and
push
jmpw
ret
daa
and
jb
xor
inc
rol
ds
rclb
aam
mov
dec
outsb
jnp
movsbl
xor
push
jne
sub
mov
outsb
cli
pop
pop
pop
test
pop
rcll
xor
sbb
mov
lret
adcb
push
mov
push
lcall
pop
xchg
push
mov
mov
inc
mov
push
std
notb
adc
idivb
out
or
cmpsl
das
aaa
mov
nop
jo
mov
xchg
inc
setb
pop
cmp
loopne
lahf
mov
fsubrl
jl
or
jne
popa
ret
lahf
add
bnd
in
sbbb
outsl
adc
ret
mov
jle
add
lcall
jb
aam
aad
aaa
sbb
imul
je
cmp
lock
fcompl
jg
dec
adc
adc
data16
dec
hlt
ret
ljmp
imul
pop
or
pop
dec
ret
stc
bound
cmp
scas
pop
add
jl
or
xchg
dec
jnp
push
leave
jg
mov
xor
add
out
int
add
ret
mov
jb
mov
xchg
inc
push
xor
pop
mov
inc
push
dec
rorb
out
pusha
xor
mov
stos
jl
gs
in
sub
enter
and
mov
sbb
inc
insl
aas
imul
sub
sbb
adc
push
pusha
mov
or
popa
cmp
adc
and
fistps
sub
data16
xor
imulb
filds
lock
inc
addr16
insl
lock
cmp
cmp
or
push
rclb
adc
push
inc
or
cli
ss
mov
mov
push
ss
subb
pusha
and
mov
int
push
add
je
js
pop
sub
movsb
cmp
inc
pop
push
pop
pop
and
mov
addl
aad
outsb
inc
outsl
mov
in
sub
dec
and
shlb
sub
loop
mov
gs
pop
mov
or
dec
pusha
pop
mov
push
push
push
inc
pop
icebp
jo
stos
sub
imul
in
jnp
mov
loopne
nop
fadds
jle
stc
jb
lcall
dec
push
jns
mov
pop
sub
mov
rorb
mov
push
popa
shrl
ss
jp
imul
icebp
hlt
and
jl
in
and
add
and
jns
mov
les
push
or
inc
pop
cmc
js
nop
gs
push
mov
imul
or
fcmovb
adc
inc
xor
aas
xor
mov
dec
out
pop
dec
add
xchg
sahf
dec
push
push
add
mov
cmpsl
xor
cld
in
mov
lock
aas
push
out
icebp
sbb
xchg
insb
bound
loop
push
insl
inc
and
pop
sbb
mov
std
iret
insl
dec
cmpsl
loop
jg
in
cmp
and
outsl
mov
and
inc
adc
std
ljmp
stos
lods
jo
xchg
push
xor
pop
sbb
movsl
and
jmp
push
js
imul
sahf
mov
stos
jp
cmp
test
push
push
pushf
add
imul
jno
jecxz
sbb
subb
js
xlat
xchg
xchg
dec
add
dec
andb
or
pushf
pushf
xlat
xchg
in
divl
fwait
inc
jbe
idivb
sahf
loope
fdivs
scas
mov
call
rclb
jne
js
jl
shll
pop
and
mov
jae
sub
icebp
adc
cs
lods
aad
fcmovnbe
mov
pop
xlat
cmpsb
xchg
adc
mov
inc
dec
test
daa
jo
dec
mov
pop
shrb
movsb
loopne
or
mov
pop
jge
mull
jg
xor
scas
testl
popl
jle
shll
shl
arpl
iret
adc
fadd
pushf
jge
or
int
ret
pop
out
scas
popa
js
popf
std
jb
mov
jns
jmp
outsb
in
ret
ja
stos
xchg
adc
jmp
fwait
xchg
dec
or
add
pop
incb
cli
lcall
loop
cmp
idivb
cs
call
les
jns
cld
sub
ss
xchg
fdivp
ds
stos
pop
or
add
pop
sub
cwtl
inc
dec
inc
shl
dec
xor
cld
jbe
add
fistpl
mov
lea
add
cld
mov
sub
fistpll
push
dec
xchg
je
int
mov
iret
inc
add
add
sti
pop
mov
lret
sbb
push
into
sbb
cmpl
inc
ds
aas
scas
xchg
push
mov
fisttpll
hlt
mov
lret
orb
xchg
mov
jae
mov
lods
mov
dec
sbb
lods
push
pop
cmp
push
loope
test
dec
sahf
lret
lods
cmpsb
psrlw
xchg
repz
icebp
lds
adc
test
sahf
clc
pushf
popf
pop
sub
mov
mov
xchg
push
ja
jb
inc
xchg
or
insb
stos
les
push
insb
xchg
jnp
mov
mov
inc
jae
fwait
icebp
mov
aaa
daa
imull
leave
jecxz
mov
gs
test
jo
lahf
xor
ret
enter
inc
or
sti
inc
push
icebp
hlt
negb
mov
or
sub
leave
pop
movsl
inc
cmpsl
push
sbb
enter
icebp
sti
jg
mov
inc
lock
loopne
mov
es
notb
xor
sbb
adcl
arpl
add
stc
idivl
das
adc
lds
and
mov
stos
jnp
jg
test
test
mov
xchg
and
pop
pop
cmpsb
test
cmpsb
adc
add
jg
out
and
cmp
adcl
cmp
pop
push
out
jmp
pop
push
lds
repnz
cmpl
jnp
cmpsb
and
loopne
lcall
dec
lret
xor
int
std
jle
nop
add
xchg
mov
out
aam
or
addb
lods
adc
jecxz
das
or
daa
add
popf
inc
int3
dec
lea
outsb
repnz
push
mov
pop
lods
jmp
inc
flds
jne
es
stc
and
aad
push
int3
dec
inc
or
push
cld
loope
mov
push
mov
loope
inc
cmpsl
sti
mov
mov
push
cmp
add
inc
pop
or
popa
xor
adc
cld
aam
gs
add
test
bound
lds
enter
or
jmp
pop
sbb
enter
fwait
nop
cli
dec
test
enter
xchg
iret
inc
test
inc
lea
mov
xor
cmp
mov
and
imul
sahf
inc
fmulp
int3
nop
push
movsb
ja
js
loope
mov
mov
mov
dec
sub
ljmp
dec
sub
es
pusha
dec
mov
dec
test
jmp
lret
or
shll
cmpsl
popa
push
in
mov
xchg
mov
sarl
sti
mov
mov
into
shlb
std
ljmp
gs
data16
cmp
adc
lea
jg
or
sbb
andb
mov
xchg
stc
xchg
pushf
mov
pop
inc
xchg
mov
pop
outsb
daa
scas
ja
test
and
xchg
loopne
push
loop
mov
ljmp
popf
or
ss
negl
pusha
cltd
xchg
dec
std
add
das
add
pushf
pop
loopne
jmp
push
arpl
loop
ljmp
fildll
jno
jmp
lret
sbb
aad
mov
mov
in
xchg
jmp
cmp
lahf
out
push
lcall
jno
je
cmp
sbb
xchg
dec
xor
test
stos
mov
adc
mov
mov
faddl
dec
or
hlt
sub
movsb
xchg
xor
in
mov
mov
rcr
pop
cmp
out
push
in
pop
sbb
push
cmp
or
out
insl
bound
add
fs
cmc
mov
mov
jle
push
mov
and
or
add
dec
mov
push
mov
push
movsl
cwtl
pop
out
pushl
repnz
stos
jne
movswl
sbb
push
dec
iret
and
outsb
in
xor
inc
cwtl
les
clc
stos
rolb
clc
mov
fildll
insb
fimuls
mov
lret
mov
or
adcb
adc
int3
pop
mov
xor
add
pushl
aaa
cmp
hlt
das
push
out
popf
aad
pushf
cmp
clc
jge
pop
ja
std
mov
xor
pushaw
mov
jge
ret
jne
jae
adc
mov
cmp
lods
adc
xchg
mov
pusha
dec
shlb
jmp
jbe
pop
mov
icebp
test
jb
inc
xor
cmp
outsl
adc
lods
mov
or
and
inc
sbb
pop
pop
dec
cli
movsb
out
inc
aas
push
xlat
aaa
pusha
mov
mov
dec
inc
call
loop
push
movsb
push
and
je
repnz
add
dec
pop
test
fildll
arpl
inc
cmpsb
mov
xor
or
jg
in
or
sbb
hlt
mov
dec
in
jge
inc
push
inc
mov
arpl
cmpl
mov
fs
sbbl
iret
les
push
inc
mov
jmp
mov
in
in
lock
rorl
testb
and
loop
dec
icebp
pushf
inc
mov
xchg
push
popf
adc
xor
add
shrb
adc
fnstsw
add
or
mov
jo
pop
stos
mulb
pop
dec
loop
jbe
fdivr
test
sbb
movsl
imul
push
push
jmp
in
repnz
mov
push
aaa
int
int
mov
add
lret
lret
sbb
lahf
enter
dec
mov
mov
faddl
inc
add
fdivrs
jne
xchg
icebp
sbb
cli
mov
pop
inc
jg
clc
sahf
jne
sbb
cld
icebp
dec
cmp
das
or
sbb
push
enter
mov
pop
fwait
lea
fstpl
mov
or
sbb
xchg
pop
or
test
fst
cmc
xor
sbb
push
jle
les
int3
jmp
jne
mov
lds
gs
adc
pop
add
test
int3
fs
mov
nop
jne
push
movsl
insl
mov
mov
loop
inc
test
jge
xor
cs
cmp
mov
bound
dec
xor
cmc
imul
stos
loop
clc
fiadds
js
push
lret
arpl
jp
xor
std
mov
addr16
hlt
jl
xor
cmpsl
scas
ds
popa
shlb
ds
out
mov
es
or
insb
insl
loopne
cmpsb
mov
dec
cmp
xchg
lock
pop
sahf
ds
dec
scas
in
dec
popl
cmpsl
out
push
pop
adcb
push
std
jb
scas
xor
mov
and
jle
ret
and
add
inc
and
xor
stc
pop
pop
and
inc
push
mov
jae
lcall
test
jecxz
sbb
repz
arpl
cmpb
sub
dec
and
xchg
cld
adc
out
xchg
aad
arpl
mov
insl
mov
pop
jecxz
sti
les
adc
mov
cmp
icebp
lahf
and
movsb
adc
cli
aaa
gs
lret
fsubl
pusha
xchg
lcall
push
sbb
mov
mov
pop
sbb
sbb
dec
jbe
jge
mov
push
in
inc
ljmp
xchg
outsb
scas
jbe
mov
jmp
cmc
jmp
jp
push
mov
inc
addl
lret
adc
scas
aam
sub
xor
leave
fidivl
push
out
cltd
enter
sarb
es
out
stos
cld
outsb
cltd
leave
fsubl
imul
xorl
cs
xor
mov
fimull
mov
add
fdivrs
push
popf
fwait
sti
mov
xor
out
icebp
add
jle
sbb
cmp
mov
enter
es
sbb
sub
xor
decb
mov
pusha
lds
xchg
xor
lcall
in
hlt
push
and
dec
jno
cmp
sub
mov
cltd
pop
orb
hlt
add
jmp
cmpsb
jl
lcall
sub
movsb
imul
movsl
mov
and
pop
loope
mov
out
enter
idivb
mov
or
mov
inc
insl
push
test
push
jo
lret
push
mov
push
push
mov
dec
subb
in
cwtl
popf
cmp
fadds
jg
std
test
out
cmp
pop
popf
mov
adc
sbb
push
sbb
jecxz
jbe
std
pop
ja
pushf
inc
dec
sbb
in
clc
mov
xor
ficomps
sbb
int
sti
cmp
sbb
in
loop
jecxz
jno
pop
mov
mov
repnz
iret
sbb
scas
push
adc
jp
cmp
cmp
push
loop
ret
mov
cwtl
inc
mov
mov
pushf
je
pop
scas
stc
pop
pop
pushf
mov
jg
lcall
dec
ret
sub
jmp
xchg
loopne
pop
mov
xchg
or
pop
fisttpl
xchg
push
pushf
xor
xchg
sub
sub
lret
cltd
aam
push
dec
push
adc
mov
push
fbstp
lret
ss
mov
fldt
push
or
je
xor
jne
push
insb
in
stc
dec
cltd
dec
movsb
mov
mov
stos
jl
push
shl
pop
aaa
add
das
push
mov
pop
in
xor
fists
mov
jecxz
rclb
jns
daa
push
std
push
loop
cld
mov
arpl
sti
fsts
es
cmpsl
sub
sub
pop
inc
xchg
cmp
int3
psllq
scas
add
insb
clc
das
pop
test
adc
int
rcll
sbb
or
push
stc
int
mov
subb
aam
adc
xchg
adc
repz
pop
adc
orl
mov
push
mov
mov
push
add
imul
repz
jae
dec
mov
pusha
push
dec
jp
mov
cmpsl
mov
pop
or
mov
cmpsl
jo
inc
fstpl
push
cwtl
lret
jge
fcomip
cmp
cmc
xchg
push
pop
or
cld
mov
mov
fwait
hlt
cmpsb
cmp
push
mov
jge
outsl
imul
les
push
adc
pop
in
adc
mov
jbe
clc
sbb
out
xchg
imul
clc
and
jg
sbb
dec
mov
loop
mov
jbe
fwait
les
inc
or
js
ficomps
add
mov
ror
mov
pushl
sbb
movsl
cld
inc
inc
or
pop
or
sub
sub
cltd
push
lret
lock
mov
dec
adc
lea
and
jg
mov
mov
xor
dec
mov
xchg
mov
iret
in
cltd
lcall
and
inc
rcll
push
xor
rcrl
or
mov
dec
daa
dec
notb
cltd
xor
cmp
pop
leave
and
pop
iret
inc
lds
mov
pop
dec
xor
mov
enter
test
pop
rcl
jmp
sub
pop
incl
pop
or
adc
loopne
lods
jge
mov
sbb
add
loope
pop
mov
push
inc
sub
pop
add
xchg
dec
nop
mov
ret
stc
sbb
inc
scas
iret
test
inc
addr16
cmpsb
movsl
mov
push
mov
cld
adc
std
mov
xchg
xor
test
inc
fisubs
movsl
push
xor
fs
mov
popf
mov
push
pop
arpl
lea
nop
fistpl
push
push
mov
or
xlat
inc
cmp
stos
inc
lods
loop
jg
leave
add
ror
cli
push
stos
das
lock
xor
cmc
iret
inc
lcall
arpl
add
pop
inc
mov
fincstp
or
mov
sub
fiadds
out
idivl
fnstcw
inc
loopne
js
aas
jg
popa
add
xlat
stos
xorb
xor
scas
hlt
test
pop
shlb
mov
pop
dec
or
jge
repz
roll
add
out
and
xor
out
outsl
mov
mov
pop
mov
fiaddl
jle
dec
jle
mov
cs
mov
addr16
stos
daa
push
gs
imull
out
scas
aaa
pop
mov
pop
xorb
enter
idivl
jl
jae
or
jg
fwait
jae
fmull
jmp
pop
fs
jno
sub
inc
inc
xchg
imul
mov
push
sbb
ss
loope
pop
out
fldt
and
mov
insl
bound
adc
sbb
and
push
lret
shr
xchg
pop
jmp
ja
outsb
or
or
stos
push
cmp
fs
iret
xchg
lret
fdiv
adc
mov
mov
lods
add
ds
cmp
or
mov
pop
mov
lds
dec
sub
sahf
cmpsl
mov
jo
pop
aas
shlb
inc
mov
add
inc
push
cmp
dec
shll
mov
gs
mov
sahf
fs
addr16
push
jle
fwait
int
pushf
fcompl
mov
xchg
add
gs
repz
mov
cmpsl
ret
loope
lcall
lods
mov
imul
aas
dec
xor
pop
mov
cmpsl
addr16
ds
inc
lods
mov
in
mov
push
mov
stos
scas
jo
mov
jno
add
cmpsl
jmp
xchg
jecxz
hlt
fbstp
and
sub
pushf
xor
and
hlt
daa
sbb
and
mov
repnz
mov
sbb
cmp
mov
mov
fwait
jne
jecxz
or
jo
add
out
in
mov
mov
sub
pushf
adc
sbb
scas
je,pn
aad
push
adc
sbb
sub
pop
das
movsb
test
inc
out
mov
ljmp
dec
lds
or
rcll
ss
and
jbe
stos
adc
repz
aam
adc
stos
adc
cltd
mov
fnstsw
mov
mov
out
xlat
fwait
xchg
or
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
cs
jp
addb
and
popa
xchg
cld
outsl
ret
jne
lods
loopne
outsl
stos
and
push
sbb
or
sar
lds
xchg
out
es
ljmp
adc
jns
lods
lahf
add
in
addr16
outsl
pop
mov
lock
mov
jmp
push
or
loope
sbb
rcr
mov
jl
xchg
jns
jle
bound
mov
pop
sbb
aas
inc
fdivl
out
xchg
insb
dec
lahf
push
loop
cmpsb
jge
rolb
fists
popf
cwtl
sub
cmp
mov
pop
pop
out
imul
and
nop
sub
sub
lods
xchg
jl
lret
stos
dec
and
sub
addr16
jl
neg
cmpsl
jecxz
cmc
ret
cmp
pop
fmull
gs
popf
scas
jmp
push
jbe
int3
shrl
and
add
jno
sub
test
or
sbb
push
repz
pop
mov
stos
fwait
mov
add
pushl
scas
cmp
pop
jno
cmp
rcll
outsl
shlb
dec
lds
pop
aam
and
clc
out
test
rorl
cmp
push
dec
mov
cmp
cmpsl
mov
sbb
int3
xchg
into
popa
mov
test
adc
mov
std
add
jbe
sahf
jecxz
insl
fs
and
cmp
mov
cli
dec
xorb
cmc
iret
repnz
jb
xor
or
xchg
mov
or
sbb
mov
fadd
fs
cmp
clc
inc
or
and
and
sarl
stos
lods
int3
scas
pop
cmp
push
dec
cli
inc
in
cli
push
sbb
stos
mov
sub
or
jo
or
shl
push
adcb
ret
or
add
lahf
sbb
mov
clc
addl
push
xchg
outsl
or
pop
test
insl
dec
imul
jmp
enter
imulb
xchg
rcrl
je
pop
inc
out
lds
mov
lods
cmp
pop
testl
xor
add
daa
hlt
scas
pop
ss
sub
mov
adc
rcrl
out
jl
pop
in
dec
push
or
es
int3
lods
js
popw
fnstsw
scas
and
mov
jnp
insl
pop
daa
jns
jb
dec
ret
fwait
lea
mov
or
lods
cli
shl
enter
xor
add
loope
and
loopne
inc
xorl
rolb
pop
shrl
mov
jge
push
jns
pop
adc
inc
and
dec
mov
sub
mov
mov
xchg
stos
cmpl
pop
pop
mov
fdivl
shl
fnstsw
dec
leave
mov
gs
add
mov
mov
mov
mov
xor
int
jnp
outsl
adc
add
lds
stos
shll
fcoml
jnp
xorl
and
hlt
dec
and
ja
add
loope
xor
jecxz
lods
add
dec
xlat
xchg
les
and
cli
mov
xor
rorl
add
sbb
xchg
jle
lods
out
insl
cmp
std
push
cmp
cltd
xchg
dec
sbb
add
cmp
jge
push
inc
pop
gs
sbb
fisttpl
mov
test
mov
push
movsb
movsb
addr16
in
push
clc
and
fdivl
push
inc
adc
dec
out
pushf
test
mov
sub
imul
lahf
inc
push
xchg
dec
out
arpl
mov
lret
inc
lret
sahf
jb
test
sub
and
movsb
pusha
rolb
inc
out
loopne
mov
aam
ja,pt
mov
mov
jb
fists
je
jp
imulb
cmp
cmpb
add
int3
std
mov
cmc
add
fisttpll
or
ret
xchg
scas
test
cmp
pop
xchg
ljmp
outsb
adc
test
adc
pop
fstps
xchg
pop
pop
lods
out
aam
loopne
in
cli
ds
pop
push
sahf
mov
and
or
fdivrl
aaa
fwait
mov
push
pop
icebp
add
ljmp
xchg
mov
cmp
enter
dec
daa
fsts
sub
and
popa
popa
xchg
push
inc
in
stos
mov
in
pop
mov
insb
xchg
insl
scas
mov
aam
cmp
test
sbb
orl
bound
push
popf
sub
mov
mov
in
add
out
ss
int
popf
jbe
push
or
cmp
sbb
jge
sbb
cwtl
lods
ret
popf
xchg
push
jl
std
aad
mov
test
arpl
inc
cs
xor
mov
mov
mov
call
add
mov
add
jp
or
popf
adc
push
or
out
aas
dec
lods
leave
clc
jne
rcl
jbe
nop
lods
add
nop
dec
sti
sub
loopne
adc
es
pop
inc
adc
adc
sub
in
in
clc
add
or
mov
jg
push
dec
push
inc
push
xchg
les
scas
js
push
inc
add
push
xor
lret
and
gs
jne
sbb
cwtl
dec
pushf
push
adc
and
pop
bound
and
adc
dec
arpl
lock
xchg
cs
out
js
mov
xor
inc
ficomps
lahf
sub
jp
imul
imul
mov
jne
xorb
push
push
outsb
jno
lods
and
addr16
addr16
loop
outsl
jo
dec
adc
das
loope
ja
inc
push
xchg
fdiv
mov
xor
and
dec
jb
jae
call
int
fcomps
push
xchg
sbb
cmovns
mov
dec
sub
sub
fildl
xor
fsubrl
sbb
push
cmp
dec
jl,pn
xchg
sbb
repnz
xor
mov
sbb
sahf
ja
sti
and
mov
cmp
in
mov
adc
movsb
leave
dec
ret
popa
sub
xor
out
pop
jg
cmp
jp
scas
push
loopne
test
adc
pusha
incl
pop
rcl
out
cmpsb
int
mov
xlat
inc
test
inc
xchg
lds
adc
jnp
cmp
mov
inc
xchg
lods
fidivrs
add
loopne
add
mov
inc
pusha
mov
leave
or
dec
into
or
adc
xchg
lahf
dec
add
inc
xchg
sbb
jle
xor
stos
or
or
fists
cmpsl
das
outsl
cmpsb
cmp
or
and
mov
lret
popa
loop
push
pop
jg
mov
outsb
test
stc
outsb
pusha
stos
sub
adc
fwait
movsb
enter
popf
fidivrl
iret
inc
scas
dec
mov
jbe
pop
and
push
pop
rcrb
scas
dec
faddp
lahf
push
adc
push
sbb
pop
arpl
outsl
aas
push
jle
lock
inc
push
shlb
and
call
jecxz
and
addr16
sahf
push
sbb
repnz
lods
repnz
js
icebp
fs
fsubs
mov
mov
pop
adc
out
subl
cwtl
jp
sub
mov
inc
mov
mov
mov
in
sbb
jae
jbe
leave
cmp
shlb
push
jmp
scas
sub
pop
aas
and
ror
sbb
lea
ss
jmp
ficomps
add
sbb
xchg
popa
test
pop
mov
out
mov
sub
mov
andb
ja
xchg
dec
cld
orl
sub
inc
outsb
pop
mov
pop
xchg
popa
sbb
orl
adcb
lock
bound
aam
ljmp
jg
xor
rclb
aaa
rolb
into
inc
adc
out
fldl
xchg
fnstsw
pop
jge
orb
lds
rclb
fwait
and
xchg
data16
cli
push
repz
lds
and
cltd
jmp
fstpl
stos
loopne
push
pop
ficompl
or
push
test
push
lret
add
inc
dec
or
inc
outsb
cmp
mov
pop
iret
and
cs
stc
add
cmpsl
daa
inc
nop
mov
push
mov
cld
add
jmp
cmp
mov
jns
loope
cmpsb
lea
repz
sbb
out
std
int
mov
popa
pop
inc
out
stos
adc
call
lods
inc
mov
inc
fs
aas
fs
mov
fdivr
movb
mov
loop
cmp
bound
ds
shll
addl
movsb
incl
movsl
test
xchg
pop
inc
sbb
mov
cmp
mov
aam
xchg
lret
call
cmpsl
int3
fsub
fwait
add
xorl
js
pop
jmp
and
rorb
sub
pop
mov
push
add
loopne
cmp
mov
jno
stos
jg
mov
push
addr16
mov
rorl
push
mov
std
icebp
or
mov
inc
in
push
jmp
rcll
pop
sbb
add
scas
in
aam
insl
into
inc
ja
mov
mov
push
movsl
sarb
adc
popa
add
mov
std
jle
inc
adc
andb
stos
mov
push
out
negl
xor
movsb
aam
popaw
ret
jge
lock
adc
fcomi
aad
dec
ret
push
stos
fimull
pop
fcomip
pop
pop
fcompl
lea
jnp
ror
shll
push
gs
jbe
jecxz
or
sub
inc
xchg
in
and
outsb
mov
xlat
jae
push
sahf
push
ret
xchg
sti
stc
xchg
add
sahf
sub
in
pop
je
add
ljmp
jecxz
in
and
cmp
and
fldl
leave
rorb
pop
popa
bound
push
sub
cmp
insb
add
adc
je
or
inc
les
jg
fldpi
add
pop
test
fldt
cmp
imul
shl
fwait
adc
jnp
fcoms
fcmovne
movsb
cmc
arpl
cmc
inc
pop
mov
dec
pop
pop
clc
je
adc
jnp
les
mov
int3
mov
leave
jl
and
test
pop
f2xm1
pop
cmc
out
inc
dec
jae
xchg
push
or
pop
ror
push
push
scas
xchg
sar
sub
jno
xchg
push
pop
or
cmp
xchg
inc
movsl
cmp
mov
lods
flds
fmul
mov
sahf
fwait
push
inc
mov
jnp
fwait
xor
sti
test
jnp
repnz
imul
sub
out
inc
movsb
rcl
push
xor
mov
or
jle
jmp
scas
cld
sub
fbld
insb
ss
imul
add
push
pop
loop
xor
xor
dec
add
popa
daa
mov
push
add
push
cmp
xchg
jg
mov
fwait
adc
fisttpl
add
leave
popa
and
add
stos
pusha
cli
pop
sbb
mov
rdtsc
mov
fwait
mov
mov
aas
sahf
xchg
xchg
in
in
xor
in
mov
adc
and
mov
ljmp
out
mov
scas
jns
push
mov
out
add
pushf
clc
subl
xchg
lods
mov
cmp
aam
push
xchg
loope
push
pop
enter
mov
adc
bound
loopne
aas
je
shl
imul
movsb
push
mov
xor
lock
sbb
and
inc
and
adc
lcall
xor
ja
lahf
andb
imull
or
int3
cmp
imul
ja
scas
mov
add
pop
and
insl
dec
fdivrp
jle
je
out
sbb
leave
add
repnz
hlt
stos
popf
xor
push
mov
xchg
adc
dec
jno
in
orb
outsb
sub
pop
add
push
mov
sbb
pop
cltd
add
outsb
pop
cmp
inc
in
mov
ss
mov
iret
insl
push
xchg
lds
mov
and
sbb
adc
sub
cmp
mov
arpl
or
imul
push
sub
sub
movsb
push
pop
aad
sar
pop
mov
dec
and
stc
mov
dec
cmpsb
push
clc
inc
stos
mov
les
mov
andl
cmp
cmp
repz
jle
loop
lea
push
add
add
std
cmp
xchg
and
cmp
mov
sahf
aam
or
push
flds
sub
lret
dec
stc
fwait
adc
loop
cmp
in
push
sarb
out
ficoml
add
cmpsl
outsl
subl
leave
test
sbb
mov
js
cli
ljmp
std
jecxz
and
or
mov
mov
je
movsl
push
push
loop
cmc
dec
and
push
jmp
adc
xchg
loopne
lods
lcall
outsb
test
mov
shl
addb
adc
jle
inc
cld
outsb
add
add
shll
ficoml
xchg
pop
pusha
sbb
dec
pop
fisubl
lds
cmp
ret
stc
sbb
xchg
ds
loope
ja
mov
push
and
popa
xchg
fdivrl
cld
test
add
adc
fnsave
aad
mov
push
jge
clc
add
repnz
aam
popf
mov
cmp
xchg
test
cld
sub
shr
lock
inc
out
and
push
rcl
cmp
xorl
and
mov
sbb
fwait
sbb
fcompl
out
xchg
sub
jle
fwait
ret
in
push
pushf
in
xchg
ljmp
sahf
sbb
stc
or
in
sub
lahf
mov
outsl
sbb
ret
ss
add
push
push
sarb
xor
addr16
fcmovne
lea
pop
out
lret
dec
std
arpl
sub
cltd
jo
scas
pop
and
jne
sub
pop
mov
adc
ljmp
xadd
mov
push
in
sbbl
add
rcll
mov
mov
ret
mov
mov
xchg
stos
and
jmp
lock
jns
test
cwtl
rorb
push
push
sarb
int
jne
jb
jge
cmpb
and
xchg
ljmp
js
repz
shr
push
mov
push
jbe
inc
add
loopne
clc
arpl
push
popa
mov
pop
jg
dec
jo
pop
xor
jns
adc
dec
sbb
jbe
pushf
aaa
inc
pop
inc
jle
cmp
std
les
push
sbb
ljmp
dec
and
add
mov
mov
nop
adc
add
lret
inc
sbb
lock
scas
mov
lea
hlt
mov
inc
into
pop
out
pop
test
pop
jne
pop
add
mov
out
mov
mov
inc
cmpsl
stos
mov
into
xchg
data16
jb
out
or
add
xchg
mov
xor
xchg
pop
aam
test
mov
pop
push
sbb
in
test
pop
and
ret
jecxz
push
jbe
jmp
inc
jo
in
pop
mov
movsb
inc
pusha
and
mov
or
cltd
sub
inc
jns
rolb
aaa
lret
cwtl
dec
mov
fsub
cs
adc
mov
xchg
mov
dec
or
in
xchg
subl
mov
imul
dec
push
loop
push
lods
dec
xchg
adc
sub
cmp
adc
and
mov
and
into
push
mov
dec
mov
loop
shrb
mov
mov
push
mov
and
pop
mov
sub
mov
dec
shrl
cmc
fnstsw
xchg
out
ss
rolb
pop
push
jne
lods
push
cwtl
cwtl
mov
cmpsb
test
in
stos
pop
mov
inc
sbb
aas
enter
aas
pop
cmp
sub
mov
pop
adc
xchg
add
dec
sti
mov
jmp
ja
das
dec
out
cmp
and
aas
sarl
mov
push
xor
sbb
repnz
scas
test
mov
stc
je
in
gs
jle
inc
inc
dec
pop
add
mov
xlat
xchg
das
jg
inc
add
stos
ret
sbb
pushf
jg
in
scas
or
cmc
jns
daa
cmp
and
int3
push
mov
sbb
mov
test
xlat
jmp
test
mov
aad
fs
add
pop
aaa
lods
loopne
jp
sbb
fldenv
aam
mov
pop
arpl
std
mov
pop
jmp
aam
xchg
jno
imul
cmc
mov
mov
lcall
mov
sub
jns
add
xor
xchg
scas
popf
sbb
fwait
loop
or
mov
adc
sbb
mov
mov
mov
fs
rcl
stc
rcr
out
jne
in
pop
stc
lcall
add
rclb
push
call
arpl
xor
pusha
imul
push
loope
inc
dec
jecxz
jmp
stc
clc
inc
pop
ret
pop
imul
xchg
lcall
mov
mov
push
movsl
cmp
sub
jle
lret
leave
sbbl
xchg
and
pop
lret
cmp
jg
and
xor
mov
mov
jg
repnz
and
cmpsb
push
orb
jns
push
push
mov
jle
mov
and
jle
clc
fldenv
mov
xchg
lret
and
cmp
leave
push
pop
mov
int
xchg
lahf
mov
mov
into
ljmp
cmp
mov
int3
or
and
cli
xlat
xor
or
or
xchg
push
std
mov
lds
cmp
pop
jmp
clc
lds
push
and
dec
jns
iret
stc
aaa
cmpsb
add
sub
popw
ret
sub
repnz
outsl
pop
push
cmp
popf
js
je
lret
pop
bound
adc
mov
push
out
stos
dec
adc
pusha
call
jnp
xor
outsl
subb
loope
lock
leave
cmp
mov
out
jbe
add
push
jecxz
ret
mov
arpl
adc
lcall
pop
ret
jbe
or
cs
loop
rolb
lret
inc
hlt
in
in
xlat
jo
std
xchg
lea
pop
test
int3
cwtl
or
jne
and
ljmp
mov
or
push
je
lret
lahf
lret
push
ljmp
fdivs
and
push
inc
inc
lods
and
push
movsl
mov
fmuls
nop
mov
jge
loopne
int
mov
out
push
and
lods
pop
mov
lret
push
dec
mov
add
outsl
test
xor
or
stos
jmp
adc
test
in
push
xchg
hlt
and
sbb
pushf
xlat
lahf
add
mov
subb
jl
test
in
mov
dec
in
imul
in
mov
mov
dec
out
cli
je
cmp
or
stc
xchg
pop
push
jmp
xor
sub
aad
mov
jge
fsubrs
mov
jo
xor
roll
repnz
loopne
cwtl
push
loope
stos
mov
clc
xor
push
aam
pop
adcb
fwait
push
cmp
ret
jbe
push
cmc
and
ds
push
mov
scas
adc
jbe
les
pop
loop
inc
adc
push
xchg
jbe
or
jbe
xor
cmp
sbb
call
xor
pop
sbb
nop
dec
pushl
cmc
jmp
das
mov
lret
cmp
mov
jmp
adc
xor
cmp
sub
sub
das
jecxz
addb
stos
xor
out
loope
arpl
jne
repz
fstpt
fcoms
pop
cltd
cmp
clc
cmp
insl
jo
test
addr16
sub
cmpsb
cli
aas
inc
or
dec
mov
push
daa
cmp
or
and
xor
shll
cmp
fldl
push
jne
std
lods
sarb
lcall
stc
push
xor
xchg
pop
jo
int3
mov
stos
lods
xor
jmp
xor
stc
orl
mov
push
int3
jae
mov
mov
test
lret
sub
pop
hlt
mov
sti
fsub
mov
push
ljmp
addl
subb
dec
cmp
andl
arpl
jecxz
dec
cmpsl
pop
mov
mov
fiaddl
test
pop
dec
mov
ja
packssdw
sarl
sub
aas
fwait
sbb
cs
aam
jp
sahf
popf
jle
cmp
mov
xor
sbb
mov
data16
mov
fstp
xchg
add
pop
sub
push
ret
icebp
mov
push
pop
add
lods
mull
mov
sti
adc
movsl
sbb
fwait
pushf
inc
sub
inc
call
jecxz
fsubs
dec
xchg
fwait
das
int
bound
jge
add
lods
cmpsl
loopne
std
adc
push
lds
lret
call
jnp
data16
bound
or
jp
push
cmp
jns
sub
fdivl
rorl
cmpb
xlat
popf
mov
mov
mov
mov
xchg
out
jno
clc
lret
into
mov
lods
icebp
call
shl
fwait
xchg
out
js
sub
fs
jg
bound
push
into
sahf
ror
inc
mov
dec
ds
jbe
jp
fsubr
sub
enter
mov
cld
shrl
shll
mov
insb
out
sub
outsb
dec
jb
iret
dec
out
sbb
pop
xorb
xchg
pop
xor
cmpsl
pop
cwtl
in
dec
jle
jg
and
out
xchg
add
xchg
pop
inc
mov
push
sub
fisubs
pop
mov
iret
xchg
add
clc
jb
or
dec
mov
das
loopne
mov
pop
sbb
sbb
loope
test
sbb
adc
push
or
cli
sub
cmpsl
insb
adc
cmp
xor
sub
mov
jb
lcall
fidivl
scas
cld
xor
push
mov
or
mov
cmc
sbb
jp
cs
push
leave
add
cmp
push
jnp
pop
fs
xor
lock
fldl
sub
xor
jecxz
adc
sbb
loope
xchg
push
in
fldl2t
push
mov
sbb
into
dec
out
insl
xchg
outsb
ret
mov
add
imul
mov
xchg
clc
push
lret
sub
inc
gs
sar
adc
push
push
add
fs
mov
cmp
insb
sbb
dec
shr
dec
push
mov
fwait
and
ds
inc
pop
addb
xor
pop
shr
cmp
int3
out
out
addr16
add
push
or
setno
xchg
imul
dec
mov
cmp
fs
popf
xchg
dec
addl
stos
add
outsb
fidivrs
movsl
out
pop
pop
shll
divb
add
pop
and
fidivs
fwait
inc
cmpsb
lcall
and
pushf
xchg
sub
cmpsl
push
sbb
pop
lods
lock
inc
outsl
inc
outsb
adc
imul
inc
mov
lods
adc
jns
rorb
vmwrite
leave
mov
imul
push
inc
andb
xor
xor
mov
xor
pop
movsl
out
lret
rcrb
cwtl
sub
and
xchg
in
addr16
add
loope
lret
enter
arpl
dec
cmp
daa
cmp
cmpxchg
popa
dec
xor
sub
dec
outsl
lea
lods
in
jo
xor
xchg
sbb
cmpsl
push
adcb
mov
dec
jecxz
xor
fcompl
pop
add
sbb
testl
andl
lods
ret
scas
jmp
ss
jmp
adc
dec
ss
lret
faddp
iret
xor
stc
mov
insb
scas
adc
dec
lea
xchg
das
les
shlb
and
adc
push
jne
push
add
cmp
dec
and
inc
shll
push
ljmp
pop
data16
clc
mov
and
and
shlb
or
mov
xor
or
inc
xor
jne
mov
in
movsb
lea
xor
add
mov
and
dec
inc
arpl
testl
cmp
sbb
dec
daa
pop
call
xchg
jno
fidivs
fcmovb
rcr
leave
pop
mov
xchg
sub
test
mov
xor
aaa
xor
dec
inc
movsb
icebp
mov
pop
ret
mov
push
or
bound
sti
sbb
pop
in
in
orb
shr
xchg
xor
mov
es
enter
inc
sbb
mov
jb
pop
inc
and
push
call
or
out
lods
adc
mov
adc
cmp
nop
es
nop
mov
jno
xchg
daa
cmp
bnd
push
adc
jle
fs
fsubrs
ret
insl
mov
sets
gs
mov
jo
push
jp,pt
das
adc
loopne
cmp
lret
nop
adc
cld
adc
add
mov
sbb
push
mov
call
mov
loope
lds
push
jmp
rorb
in
sbb
mov
filds
mov
inc
push
popa
adc
pop
sbb
ljmp
sbb
mov
bswap
arpl
jle
cmp
out
inc
dec
or
xchg
insl
lret
fisttpll
dec
lret
mov
jmp
sub
sub
bound
xchg
cmc
inc
jl
push
pop
sahf
adc
scas
loop
shl
pop
lahf
cmp
shll
jle
and
lock
pop
xlat
mov
mov
mov
push
bound
scas
ljmp
cs
pop
pop
in
out
mov
xor
xchg
and
or
out
scas
int3
lahf
imul
push
adc
out
mov
pop
loopne
pushf
ror
dec
das
xor
pop
lret
sbb
rcr
jo
loope
xchg
xor
fwait
dec
or
enter
hlt
rcll
mov
jle
and
push
arpl
jnp
push
cli
imul
movsb
xchg
cwtl
mov
pusha
push
pop
xor
cmpsl
sub
sbb
lock
stc
jl
in
andl
pusha
jge
fs
push
mov
fcmove
add
cmc
cld
jp
sbb
adc
lods
cli
rolb
scas
sub
sub
cld
and
push
aad
mov
movsb
int3
out
push
int
push
cli
arpl
mov
pop
sbb
roll
push
shr
cmp
sti
inc
sbb
sub
roll
subb
addr16
dec
rcll
imul
sbb
ret
lods
out
sbb
jae
sti
sub
inc
repnz
in
push
pop
jle
and
xor
out
sub
es
cltd
or
ljmp
xor
fsubr
add
or
je
cmpsb
cli
xor
shll
jno
mov
xor
dec
inc
loop
mov
cltd
scas
les
cmp
mov
or
add
push
xor
cmp
sbb
outsb
arpl
push
jecxz
sub
pop
int3
les
popa
xor
ja
add
test
sub
leave
jne
add
sbb
nop
adc
push
ror
push
dec
int3
dec
loopne
out
int
popf
adc
xchg
adc
xchg
adc
or
subl
mov
adc
in
bound
mov
addl
sbb
ret
je
mov
cmp
cmpsb
iret
fcmovne
xchg
imul
lret
sti
scas
fistpl
xchg
clc
sbb
mov
pop
pop
mov
loop
loopne
pop
cmp
xchg
loope
jecxz
sbb
in
aam
pop
repnz
enter
jb
pop
lods
into
sete
insl
xor
cmpsl
icebp
and
pop
outsb
fwait
sahf
movsl
test
jb
cmp
lret
in
ljmp
adc
xchg
rcll
or
ja
lock
push
cmc
add
add
mov
shr
pop
into
scas
clc
mov
inc
call
in
dec
inc
jmp
xchg
rcrb
daa
ss
push
xchg
in
inc
int3
ja
pusha
shrb
rcl
pop
push
jbe
xorl
mov
addr16
stos
cli
add
jne
insl
imul
sub
add
dec
cmp
mov
daa
aaa
out
xchg
pop
aad
pop
mov
inc
cmpsb
xchg
xor
mov
pop
cltd
mov
out
test
add
mov
outsb
mov
sub
fabs
pop
xlat
mulb
or
mov
leave
int3
jg
and
push
push
sbbb
movsl
mov
cltd
jle
dec
and
or
xor
mov
dec
orl
imul
or
sub
push
push
lahf
adc
pop
jno
gs
sarl
adc
fwait
jo
scas
mov
dec
cwtl
add
orb
xchg
inc
fs
dec
jg
ds
pop
or
out
ja
mov
and
mov
cltd
mov
push
sbb
adc
mov
sbb
mov
insl
scas
sbb
xlat
jno
int3
xchg
sbb
flds
or
rcr
mov
shrb
clc
test
pop
or
lahf
sbb
jp,pn
mov
mov
ss
shll
mov
inc
hlt
add
add
xchg
repz
js
adc
add
popf
sbb
add
das
jno
imul
jae
movsl
sub
loop
mov
imul
mov
enter
int
push
ja
mov
adc
mov
insl
out
mov
js
mov
jbe
pop
sub
dec
jle
sbb
pusha
into
test
addl
fs
daa
add
test
cmc
aaa
mov
ror
popf
mov
flds
iret
scas
mov
xchg
dec
mov
xor
std
lea
push
inc
ljmp
cmp
mov
mov
jecxz
mov
or
insl
fistps
mov
fdivr
lods
bound
adc
cmpsb
lret
out
lods
cmpsb
sbb
lea
xchg
outsb
or
sub
mov
movsl
pop
push
stos
out
push
mov
jge
xchg
add
dec
jmp
dec
dec
adc
jecxz
cmp
lahf
inc
push
sub
scas
mov
jno
xchg
stos
jb
in
add
ss
js
mov
aad
loopne
mov
adcb
push
iret
cmp
mov
cmpsb
jp
nop
push
es
adc
jge
cmpsb
dec
sahf
inc
fstpt
aas
mov
rclb
mov
push
xchg
sub
enter
mov
clc
mov
dec
and
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
ss
mov
orl
addl
test
hlt
adc
stos
dec
sti
sub
gs
pop
call
aas
out
adc
mov
lods
add
js
enter
call
jns
dec
lret
mov
fisttps
and
mov
cmc
mov
jp
sti
push
cltd
jmp
mov
ljmp
mov
das
xorl
and
mov
je
or
jnp
mov
out
cs
mov
ficoml
inc
dec
mov
std
in
pop
dec
add
xor
xor
xchg
sub
sbb
pop
sbb
fcmovbe
mov
jp
mov
xor
jp
jb
js
sub
into
xchg
mov
adc
test
jno
push
xor
jno
mov
stos
push
jmp
je
jge
sub
fistpll
hlt
cli
mov
and
call
gs
loop
test
mov
data16
fimuls
jnp
pop
mov
data16
mov
pop
mov
in
push
mov
inc
pop
dec
or
in
lret
bound
adc
pop
push
out
pop
sub
mov
or
pusha
gs
sbb
or
mov
sti
dec
out
lock
xor
sub
fisttps
cld
loope
jae
adc
pop
pop
mov
test
jle
daa
fs
mov
roll
mov
subl
mov
roll
jmp
jl
inc
scas
push
push
lods
cld
pop
mov
inc
lock
pop
sbb
adc
imul
push
add
push
lods
jge
push
jne
fsubl
lret
push
fimull
adc
add
gs
add
in
or
fstl
pop
sub
mov
stc
sti
dec
imul
xor
mov
mov
xchg
push
sti
mov
addr16
mov
and
xchg
test
jmp
or
xchg
mov
insb
in
fs
int
push
mov
js
cmpl
sbb
in
adc
test
fimull
xchg
xchg
andb
and
push
sahf
call
mov
mov
add
jnp
adc
loope
insb
sbb
dec
xor
sbb
je
pop
mov
rcll
push
mov
movsb
sbb
add
aad
xchg
sbb
imul
dec
arpl
mov
fucomip
cmp
lock
jns
lock
xor
jno
mov
mov
xchg
mov
push
mov
or
es
fs
ja
dec
ja
push
push
xchg
sub
adc
stos
add
mov
repnz
add
addr16
stos
addr16
in
icebp
fnstsw
jb
push
or
lret
cmp
mov
mov
repnz
je
insl
nop
xlat
or
mov
shll
jo
mov
in
arpl
roll
push
sbbb
sub
jns
sub
mov
push
aad
bound
pop
in
push
fs
add
or
mov
push
xor
push
adc
insl
xor
loopne
mov
cli
inc
lret
push
pushf
aad
jno
shrl
jbe
loop
cmp
les
aad
jae
push
push
ror
out
push
in
mov
and
popa
fwait
movq
mov
icebp
clc
cmp
mov
and
dec
ret
pushf
cs
lods
mov
int
aam
ds
push
hlt
push
jg
pushf
mov
push
cvtps2pi
in
or
mov
sahf
ss
jg
xchg
adc
das
push
mov
ret
in
pop
rorb
scas
movl
add
lds
aam
cmc
popl
lea
jmp
adc
bound
rol
sub
lods
and
mov
add
mov
lcall
adc
in
rclb
aas
mov
daa
call
inc
loope
push
pop
and
mov
or
mov
mov
stos
cmp
and
push
out
flds
cmp
shrl
add
push
aaa
xlat
dec
mov
cmpsl
sub
sub
je
rorb
repnz
adc
sarb
or
in
leave
add
cmp
cmc
bound
movsl
sub
jae
sbb
add
mov
in
aam
jl
cwtl
insb
xchg
shrb
daa
adc
in
add
daa
push
icebp
jno
ja
dec
xchg
les
imull
add
fiaddl
xor
mov
cmp
xor
mov
loop
int3
add
cmp
push
pop
lret
xor
and
cmp
and
mov
inc
arpl
pop
in
lcall
dec
push
popf
xor
adc
fldt
imul
adc
xor
pop
xor
loop
in
push
aad
jno
das
repnz
stos
sti
mov
fidivrl
push
mov
mov
mov
or
jnp
fwait
xor
xchg
dec
and
imul
jne
and
and
mov
data16
mov
inc
push
mov
arpl
cmpsl
or
add
test
jno
ss
mov
aaa
loopne
cmp
jns
pop
cli
pop
test
out
xor
sbb
xchg
cwtl
imul
inc
test
jp
ljmp
arpl
xchg
out
rorl
mov
adc
rcrb
sbb
loope
por
mov
xchg
fisubrs
and
and
mov
lahf
test
pop
testb
daa
adc
sti
lods
add
and
cld
push
mov
ret
int3
fiaddl
lods
lock
xor
fsts
mov
lods
clc
cmc
jp
cmp
add
pusha
addr16
jno
mov
pop
les
rorl
add
addl
les
dec
sarb
je
bound
or
and
in
jne
fcompl
pushf
xchg
test
xchg
add
aad
xchg
and
aaa
test
xor
orl
sarb
sbb
xchg
xchg
mov
stos
neg
jl
mov
and
cmc
jp
in
mov
inc
xor
pushf
xor
test
out
push
xor
pusha
mov
adc
popf
xchg
cmp
dec
lcall
repz
in
mov
and
sbb
xchg
daa
aas
mov
sbb
cmp
iret
xor
push
jecxz
add
dec
inc
xlat
or
jbe
jl
jo
cwtl
out
test
fcmovnu
in
adc
inc
mov
push
adc
sub
scas
add
cmp
fidivl
xchg
das
inc
adc
inc
cmpsb
add
inc
or
push
cwtl
jp
imul
int3
gs
sub
add
in
mov
mov
jge
fidivl
pop
xchg
mov
xlat
xor
lea
outsl
dec
test
or
sbb
aas
lcall
out
scas
pop
inc
cmp
aaa
dec
cld
cmp
popa
repz
cltd
sbb
mov
and
dec
push
jmp
sub
pop
mov
jbe
pop
sbb
dec
or
out
push
xchg
sarl
fcomps
lret
dec
cli
mov
fwait
in
in
xchg
in
or
or
inc
fucompp
or
add
add
lods
insl
int
mov
sub
insl
xchg
push
adc
out
mov
push
gs
cmp
cmp
int3
in
loop
add
int
mov
mov
stos
xor
out
shl
cli
and
lods
cmpl
testb
xchg
or
sti
insb
push
mov
mov
sub
add
fdivrl
cld
fstpt
add
or
adc
push
jnp
stos
push
sub
jae
mov
pusha
xchg
dec
sub
pop
stos
lock
push
push
inc
or
or
aaa
fdivs
push
popf
leave
out
xor
rcrb
jnp,pt
test
sbb
ret
sbb
shrl
je
fisttps
add
sbb
popf
add
test
xor
cmp
sub
mov
push
icebp
xchg
in
fiadds
test
mov
mov
cmpsb
xlat
ss
mov
push
mov
mov
and
cmp
mov
cltd
pop
mov
push
xchg
or
mov
fstl
sbb
mov
or
cmp
xchg
mov
push
ret
mov
inc
or
pop
inc
leave
icebp
pop
aas
js
popa
jae
xor
jle
icebp
lret
xor
sbb
js
in
sbbl
es
mov
cwtl
pop
addr16
iret
or
mov
into
jne
outsb
sbb
push
int3
mov
rcrl
cli
jge
lea
add
je
inc
inc
cmp
push
xchg
mov
cmp
add
mov
mov
imul
mov
outsb
dec
jae
or
xlat
test
add
imulb
sub
sub
ficoml
shll
push
cmpsb
and
mov
jle
les
cmp
push
int3
jnp
mov
js
xor
and
and
and
lahf
hlt
pop
xor
dec
hlt
bound
jbe
adc
sarb
push
mov
daa
dec
loope
xchg
out
out
flds
mov
cmp
bound
aas
cmp
enter
fdivrs
out
cld
mov
outsl
insb
or
gs
sub
mov
dec
add
or
pop
insb
loope
inc
or
loopne
jo
add
or
cwtl
clc
jbe
and
jl
mov
push
pop
xor
sbb
sub
xor
ret
xchg
shr
repz
push
mov
mov
jecxz
pop
repnz
idiv
repz
jmp
xchg
pop
pop
enter
mov
in
and
dec
into
sbbb
pop
cmp
leave
and
mov
sbb
adc
cmp
repnz
notb
scas
ficoml
mov
mov
sub
xchg
mov
insl
dec
int3
sub
icebp
movsb
cltd
dec
sbb
fbld
push
dec
test
pop
push
adc
push
lods
cmovno
add
dec
test
mov
ret
inc
fs
lods
pop
clc
mov
aam
dec
pusha
mov
rolb
mov
icebp
loope
dec
cmp
lds
nop
ljmp
into
pop
idiv
loope
aad
add
int3
xchg
pop
inc
flds
aaa
inc
inc
scas
pop
ljmp
xchg
in
cmc
out
ds
mov
and
mov
xchg
enter
mov
sbb
in
mov
lret
or
and
aam
jns
jae
push
jo
ret
mov
test
push
dec
orb
ror
mov
insl
inc
bound
mov
inc
ja
mov
jl
cmp
mov
arpl
mov
push
out
pop
dec
inc
pop
or
jle
js
mov
test
shrb
cmp
add
imul
test
subl
pop
test
mov
pusha
lea
mov
lods
xchg
hlt
mov
fisubl
sub
xor
psubd
cmpsb
aas
xchg
mov
mov
nop
mov
cmp
movsb
stos
arpl
outsb
mov
out
add
repz
fidivrl
mov
cvttps2pi
mov
and
out
test
insb
push
sbb
xchg
add
or
pop
mov
mov
jle
adc
adc
jge
out
mov
das
imul
orb
mov
loopne
ficompl
xchg
ds
loop
lcall
aaa
xor
dec
add
rorb
adc
fmuls
stos
push
jmp
test
lds
insl
mov
fstps
or
fdivp
lock
push
nop
mov
sbb
mov
nop
fstps
mov
sub
in
lods
lds
mov
loop
xor
xor
jnp
push
dec
cli
aam
mov
loope
inc
data16
push
hlt
push
shrb
test
fadd
pop
neg
sub
pop
push
pusha
or
pop
sub
repnz
jp
inc
xchg
icebp
mov
cmpsb
lock
dec
bound
pusha
mov
loopne
aas
imul
scas
push
icebp
mov
jo
inc
movsb
rcrb
outsl
cmp
or
je
mov
mov
es
add
ja
out
outsb
xchg
lcall
cmp
pusha
push
mov
xor
xor
mov
cld
inc
mov
adc
mov
inc
push
push
cmp
cmp
enter
dec
cs
jle
lock
scas
pusha
or
adc
into
cs
sub
cwtl
sbb
scas
hlt
sbb
pop
in
adc
mov
insb
and
sahf
ljmp
push
add
pop
dec
arpl
sub
cwtl
mov
stos
or
out
mov
rol
adc
in
dec
aaa
sub
cmpsl
sub
inc
lret
xchg
push
pop
push
loopne
jns
enter
add
jb
aaa
mov
out
mov
jl
jae
and
fcoms
jmp
sbb
in
inc
stos
sub
enter
pop
dec
js
bound
out
std
jle
xor
lods
das
mov
stos
mov
pop
jb
lods
jecxz
enter
es
xor
sub
push
repnz
mov
xchg
movsb
xor
ret
push
dec
mov
rcrl
inc
dec
mov
xor
sub
adc
mul
mov
leave
es
ficomps
mov
adc
push
xor
scas
sbb
loopne
gs
xchg
cld
ja
gs
jp
xor
push
loopne
bound
dec
dec
mov
into
clc
sbb
call
xor
or
imul
mov
and
aaa
out
out
or
inc
adc
movsb
inc
out
xchg
mov
mov
lahf
mov
push
lahf
into
inc
add
dec
pop
sbb
fmull
xchg
out
icebp
sub
add
js
cmpsl
and
sbb
sbb
or
mov
mov
xlat
iret
and
push
xor
push
push
popa
jne
in
pop
lods
orl
mov
mov
aad
jmp
call
enter
push
xchg
ffree
popf
out
std
lcall
mov
sbb
aad
push
jo
test
into
or
lods
hlt
xchg
jmp
loope
scas
dec
pop
lods
cmp
rcrl
ss
setns
and
add
mov
andl
jne
stc
iret
insb
pushf
jl
pop
sahf
lods
addl
adc
gs
lock
push
sub
jo
jg
js
call
out
out
iret
loopne
in
xor
repz
aas
inc
inc
leave
mov
push
push
xchg
stos
push
add
jmp
xchg
mov
cld
lods
push
or
adc
into
add
jno
mov
imul
shll
sub
rcrb
test
xchg
and
fdivrs
cmpsb
mov
roll
mov
sbb
xchg
or
push
loop
mov
inc
pop
imul
das
cmp
jno
add
xor
sti
mov
icebp
pop
jl
inc
lods
mov
fs
leave
iret
jge
lods
imul
scas
sub
inc
fucompp
mov
pop
mov
pop
sub
enter
hlt
shlb
inc
push
gs
xor
push
adc
mov
jmp
enter
outsb
fsubrl
adc
aas
lret
pusha
ja
lock
shr
jno
cmp
sub
addr16
mov
loope
mov
bound
pop
mov
pop
jp
pop
ret
repnz
mov
xchg
fwait
sbb
nop
sti
sub
movsl
lds
lret
dec
icebp
ja
dec
mov
test
sub
out
mov
sbb
mov
or
ss
mov
mov
or
ds
ror
sub
lret
repnz
and
clc
push
repz
repz
scas
jecxz
mov
jg
dec
mov
std
pop
jo
inc
gs
adc
inc
aam
aam
fisubs
cmp
pop
divb
jnp
mov
popf
mov
push
jle
adc
pop
minps
jmp
ja
ljmp
push
xchg
or
test
sub
push
cmp
lcall
xor
push
mov
in
shrb
fs
mov
sbb
popa
add
add
ret
jge
fisttpll
int3
adc
fidivl
xchg
dec
fmulp
xchg
push
or
adc
pop
jg
mov
inc
inc
sub
ss
cli
out
jns
sub
xlat
xchg
xlat
push
decl
fstpl
rcll
jge
sti
mov
roll
mov
jge
mov
or
loopne
repnz
insl
dec
xorl
loop
cmc
cwtl
adc
pusha
jle
call
fldenv
push
lds
xchg
push
adc
sarl
ja
lock
das
mov
jg
mov
insb
clc
xor
add
dec
je
popa
push
jbe
sbb
xchg
out
push
rcrl
iret
adc
sub
bound
stc
and
ds
xor
pop
push
lods
jno
xor
push
lea
and
nop
jge
mov
and
jge
cmp
mov
lcall
pop
aaa
mov
ror
push
push
sbb
out
xchg
push
or
orb
sub
icebp
push
mov
inc
loop
cmp
xchg
cmp
push
inc
cmp
or
aam
test
test
test
dec
xor
mov
mov
fistpll
pushf
lds
repz
cmp
js
cmp
adc
inc
cmp
outsl
pushf
push
ljmp
jno
ja
std
lods
fiaddl
out
lods
repz
mov
mov
push
sbb
push
enter
sahf
fldenv
dec
repz
jne
lods
mov
sub
cmc
inc
into
icebp
shrl
pop
int
fdivrs
or
mov
in
dec
out
push
repnz
push
iret
aad
lock
push
pop
xchg
cmp
loop
stos
or
bound
movsl
inc
aaa
cmpl
movsl
sbb
jl
in
add
inc
dec
push
flds
add
pop
adc
lahf
adc
insb
sti
inc
jle
out
mov
hlt
cmpsb
in
rorb
test
dec
push
pusha
jle
sbb
je
pop
and
out
fwait
adc
mov
stc
xlat
das
mov
mov
xchg
mov
not
fs
ss
add
sarl
mov
xor
repnz
lahf
test
adc
inc
mov
mov
add
clc
xor
outsb
lock
mov
adc
scas
andl
push
add
xchg
cmpsl
adc
test
movsl
ret
out
clc
adc
test
mov
ja
or
lods
aas
outsb
mov
gs
pop
inc
sarb
mov
pop
jle
fsts
jl
mov
popa
lock
sbb
push
mov
mov
cmp
inc
mov
fcoml
adc
loop
es
xlat
das
leave
fnstsw
cli
xchg
andl
sbb
cmpsl
or
and
pop
sti
and
xchg
sarl
cwtl
out
xchg
mov
fnstcw
imul
lds
mov
lds
push
daa
mov
or
iret
cmp
std
adc
es
in
insb
mov
insb
and
sub
repnz
jo
sbb
adc
pop
sub
iret
je
mov
cmp
push
or
in
dec
sti
xchg
jb
aad
pop
arpl
pop
xor
aam
stc
inc
cli
cmp
push
mov
imul
loope
mov
movl
pop
jg
shufps
out
scas
call
mov
mov
xchg
dec
push
jno
std
ret
dec
xchg
dec
leave
dec
jno
mov
mov
repz
cltd
jg
aam
sbb
div
pop
jge
sub
mov
cwtl
leave
sbb
xor
lock
mov
mov
test
xor
js
sarb
xchg
pop
inc
scas
cmpsl
outsb
mov
lock
mulb
inc
lahf
xchg
jl
mov
pop
call
pop
lret
roll
xchg
push
sub
add
cmp
std
add
jmp
sbb
nop
in
cli
or
aad
arpl
imul
jne
xor
div
mov
adc
cmp
lret
fwait
xchg
int3
mov
sub
scas
sub
mov
into
add
and
push
push
mov
fisttpll
xchg
imul
jbe
outsb
shl
sti
xlat
sbb
ficoms
scas
lock
xchg
lret
push
mov
sbb
popf
add
ds
ljmp
fidivl
dec
mov
stos
xchg
jg
gs
rolb
ss
scas
repz
loopne
mov
mov
cwtl
cs
pop
stc
pop
sub
inc
adc
sbb
shlb
stc
and
jne
jb
test
xchg
inc
test
sub
std
pop
gs
lods
shll
dec
sub
iret
push
cmp
or
outsb
xchg
add
addr16
and
jg
xchg
ret
scas
cwtl
dec
adc
mov
xchg
or
mov
jg
cmp
mov
ror
popf
repnz
add
mov
cmp
push
jne
les
mov
int
test
xchg
jne
mov
add
jne
rolb
push
sbb
sti
int
fmulp
xchg
mov
repz
jae
xchg
cmp
mov
push
pop
jae
pop
jle
mov
adc
mov
icebp
sub
repnz
filds
sub
cmp
add
cmp
inc
or
loop
jecxz
pop
cltd
and
mov
dec
cld
js
jp
std
inc
bound
or
shrb
xor
lahf
inc
in
hlt
push
call
sub
mov
xchg
push
js
mov
cli
stc
sub
js
jae
aas
flds
enter
or
add
arpl
hlt
inc
loopne
adc
adc
xchg
leave
aam
dec
mov
movsl
sub
lods
push
in
inc
popf
xchg
add
and
inc
pop
sub
or
pop
sub
orl
scas
pop
mov
cli
push
fwait
and
js
cld
aam
push
in
or
xchg
push
das
sub
mov
push
outsl
pop
push
cmc
jl
sub
lock
ret
outsb
aas
jl
mov
aad
loop
pop
hlt
sti
xchg
push
es
push
fwait
mov
aam
and
jmp
pop
ds
dec
ret
arpl
jl
mov
lret
xor
mov
mov
imul
shrb
pop
xchg
outsb
xor
leave
mov
shrb
lahf
add
in
ret
rorl
pushf
xchg
push
sub
dec
jb
mov
std
jp
jo
test
in
fstl
ljmp
cmp
fsts
sub
dec
gs
rolb
pop
into
dec
push
daa
xlat
addr16
pop
int3
jb
sub
dec
sub
popf
inc
xchg
xor
jle
mov
rcrl
fdivs
pop
in
mov
pop
daa
push
and
push
or
push
pop
hlt
movsb
mov
icebp
nop
mov
and
movsb
cmp
dec
imul
mov
push
out
jge
imul
cmp
dec
imul
jno
xor
sub
mov
mov
xor
stos
pop
ja
cwtl
xchg
shl
fs
stos
mov
in
mov
cmp
leave
stc
out
popf
sbb
inc
or
int3
jne
ret
in
clc
cld
jo
pop
fidivrs
cmc
push
ss
sub
push
lods
ds
add
je
push
shrb
xchg
dec
cmp
xor
xchg
sub
push
sub
dec
fdivrl
or
leave
push
cmp
scas
xchg
sbb
push
and
sbb
imul
hlt
dec
sub
push
sbb
push
aad
pop
loopne
fbstp
xchg
sbbl
inc
pop
pusha
roll
or
and
adc
jne
fwait
mov
sub
adc
daa
psllq
aas
ljmp
inc
dec
mov
xorl
pop
inc
push
fsubrp
popf
pop
loope
sub
inc
mov
pop
jmp
outsl
nop
push
shll
push
push
pop
jg
mov
and
ljmp
sbb
pusha
rolb
int
pop
push
mov
enter
xor
sub
jae
or
in
push
mov
dec
adc
loope
push
in
jmp
std
xchg
pop
into
mov
push
push
xchg
pushf
fucom
xchg
andl
xchg
fs
fcmovnb
cmp
push
mov
stos
cwtl
bound
out
dec
mov
movsl
jmp
sahf
jle
cwtl
mov
sbb
int3
jns
mov
testl
cld
xchg
fs
out
add
lcall
dec
inc
jb
adc
cs
mov
fcomip
movsb
xchg
outsl
sbb
stos
pop
inc
adc
out
sub
mov
cmp
cmp
push
cmp
cwtl
dec
cmc
jg
sbb
pop
xchg
shl
sbb
aas
inc
cli
push
cwtl
inc
push
or
mov
xor
clc
mov
adc
ds
inc
xchg
pusha
popa
sti
mov
in
out
push
inc
dec
inc
jg
fwait
dec
mov
jge
sbb
aad
jp
ds
repz
sbb
pop
sbb
lods
inc
xor
push
adc
mov
lcall
nop
xchg
xchg
cmp
inc
in
in
inc
stos
inc
mov
dec
add
mov
adc
add
clc
shlb
rsm
shrl
xor
inc
mov
inc
inc
es
cs
xor
fs
popa
js
cmp
xor
xlat
hlt
in
shlb
inc
xchg
mov
faddl
jle
aas
xor
pop
sub
mov
push
lahf
aaa
divl
inc
inc
and
xchg
and
and
rcl
push
data16
outsl
dec
push
bound
out
lret
popa
and
mov
lock
xchg
ret
sahf
xlat
mov
xlat
sbb
jnp
mov
test
pop
sub
jmp
or
ds
lret
inc
jae
dec
xchg
and
add
xlat
ss
jl
sbb
inc
bound
push
and
mov
jg
pop
das
bound
aaa
lock
fucomi
or
fisubs
sbb
imul
mov
or
and
shl
sub
lods
push
ljmp
sbb
out
in
es
mov
inc
scas
outsb
adc
dec
ja
xlat
xchg
inc
xchg
lahf
in
int
mov
insl
adc
scas
xor
insb
nop
jg
xchg
xor
jae
nop
pop
repnz
arpl
inc
in
or
in
cmp
xor
jg
cmc
sbb
jl
pushf
pop
mov
cli
inc
in
xor
into
lds
pop
xchg
lret
sub
jnp
sub
add
push
es
gs
aad
arpl
hlt
lods
dec
aad
arpl
pushf
mov
mov
fdivl
adc
aas
inc
into
mov
and
and
out
sub
inc
repz
jns
in
pop
jo
xor
cltd
outsw
mov
xor
mov
movsl
incl
push
iret
cmp
cmp
sti
or
daa
cmp
fistpl
test
mov
iret
in
push
mov
insb
sti
loope
add
pop
int
pop
je
sbb
das
xor
sti
jo
insb
jbe
leave
pop
mov
xchg
testl
lock
adc
seta
mov
sbb
pop
mov
dec
daa
stos
xchg
pusha
sub
sub
xchg
mov
popa
or
incl
lea
pushf
sbb
insb
cmp
stos
jno
enter
mov
fcoml
mov
lret
div
in
iret
jecxz
mov
hlt
repz
pop
xor
pop
adc
sbb
dec
scas
es
arpl
cmp
int3
pop
mov
sahf
mov
popf
lods
xchg
inc
aas
jne
imul
test
sub
enter
inc
test
add
scas
lods
xchg
mov
mov
sub
popf
in
and
movsb
jl
or
or
fnstcw
mov
movsb
sub
jns
enter
mov
inc
push
scas
into
jp
add
in
cltd
mov
xchg
sbb
jns
adc
movsl
cltd
loopne
lock
ret
xor
jg
push
and
insl
lods
out
or
sahf
cmpsb
pop
aas
pop
int
rclb
pop
hlt
mov
nop
pop
mov
xor
cmpsl
pop
mov
xchg
pusha
jae
pop
or
and
push
and
das
scas
ret
int
dec
and
movsl
jle
and
and
into
inc
cmp
sbb
jp
and
xor
nop
xchg
cmc
push
jo
and
add
lret
fwait
push
leave
cmp
mov
dec
fnstsw
ret
mov
fsubl
mov
lcall
fcoml
test
in
mov
mov
push
ds
enter
jecxz
stc
sbb
cmpb
sahf
jg
mov
pop
xchg
in
pusha
xchg
cmp
jmp
pavgw
push
mov
loope
xlat
out
sbb
dec
ss
clc
mov
fnstenv
dec
xor
xchg
test
pop
sub
scas
inc
enter
movsl
sub
lahf
cmp
test
leave
test
sbb
leave
jg
pop
add
bound
int3
dec
xor
jbe
mov
pop
fldenv
fsubrl
lods
mov
in
add
and
and
test
or
fimuls
loope
sub
inc
imul
jbe
les
pushf
into
loope
test
cs
pop
inc
rolb
xorb
bound
in
lods
and
mov
pushf
cmp
js
stos
mov
jo
cmp
xchg
scas
mov
cltd
pop
cs
pop
jb
pop
sbb
call
mov
test
lods
xor
test
jne
cmpsl
das
ret
sub
mov
loope
and
xchg
xchg
and
lcall
adc
or
jns
dec
pop
jbe
repz
sbb
inc
and
leave
cmp
xor
insl
adc
mov
push
int3
adcl
jp
cwtl
mov
ja
insw
push
add
mov
cmp
fldl
std
stos
stos
mov
imul
lock
cmp
imul
mov
fwait
inc
das
sahf
les
dec
xor
xchg
in
jnp
lahf
ja
mov
jno
xchg
out
fsts
mov
adc
data16
imul
cmpsb
and
mov
lcall
mov
scas
and
jne
pop
xor
movsl
add
inc
pop
dec
rorl
sti
mov
enter
icebp
lret
cmpsb
rcrl
popf
sbb
cmp
repz
mov
lahf
outsb
xchg
pop
into
testl
xor
xor
add
jae
movsb
sahf
sub
jne
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
and
sub
addl
sahf
mov
xchg
cltd
out
mov
aas
mov
pop
adc
pop
jecxz
jmp
push
jge
add
jmp
add
dec
shlb
pop
and
cmp
out
jae
push
std
xchg
sbb
out
adc
fstl
ret
insl
sub
ret
icebp
sub
mov
dec
aaa
in
jmp
adc
notb
mov
inc
scas
int
or
ret
jecxz
jns
loopne
xor
mov
mov
stc
nop
sbb
or
movsb
xchg
or
lret
jno
jo
insb
and
cmp
in
mov
addr16
fcomps
stos
sub
lcall
outsl
clc
sub
sbb
lahf
int3
fstpl
mov
bound
sahf
push
and
aas
xlat
rorl
fwait
js
push
cmp
and
shll
sbb
movsb
mov
insl
mov
clc
adc
mov
push
mov
or
cmpsl
inc
movsb
int3
adc
push
xchg
ljmp
jle
sbb
lret
fld1
addr16
push
jg
mov
mov
push
cmp
adc
fisubs
mov
push
enter
out
addl
and
rcrb
bound
pushf
add
es
mov
xor
cli
dec
pop
sub
shll
cmp
cmp
arpl
test
pusha
sub
ja
cmc
ret
cwtl
mov
pop
xor
outsb
out
and
cwtl
push
leave
jbe
add
adc
ljmp
mov
jecxz
andb
mov
call
push
pop
xor
add
jge
mov
mov
pop
test
cmpsl
push
daa
add
push
add
in
hlt
lcall
sbb
inc
mov
jge
fistpl
pop
lea
shl
mov
les
dec
nop
mov
mov
aad
adc
sub
and
fcoml
mov
and
arpl
sub
push
lret
jg
sbb
inc
pop
dec
pop
push
jno
mov
call
ret
jp
or
push
mov
movlps
nop
call
iret
push
pop
out
stc
mov
cmpsb
cld
mov
mov
out
xchg
ljmp
mov
cld
les
dec
adc
sahf
mov
arpl
cli
inc
enter
pop
jb
mov
mov
adc
mov
dec
stc
pop
insl
sahf
dec
imul
push
xchg
lret
or
sahf
adc
jno
cmpsl
loopne
aam
or
pop
mov
std
and
das
fldcw
cmp
scas
jae
stc
ss
add
cmpsb
cmp
js
cli
inc
mov
mov
rcrb
cmc
mov
pop
mov
fists
or
jecxz
inc
or
dec
test
pop
mov
das
outsb
mov
loopne
es
mov
test
xor
jb
gs
sub
adc
loopne
mov
push
out
sarb
lds
mov
cltd
jnp
scas
xchg
cmp
call
out
xchg
jne
or
out
push
dec
jle
mov
fcomi
cld
sahf
xlat
test
ljmp
std
lods
mov
addl
jns
test
push
sti
cmp
loope
movsb
sbb
xchg
addl
push
cmp
mov
out
cmp
enter
out
sbb
rcr
outsl
stos
cld
aam
arpl
mov
jecxz
popa
or
fcmove
jg
cmp
sub
repnz
dec
add
test
leave
pop
inc
and
pop
xchg
aam
and
xchg
cltd
sbbl
cmpsl
inc
inc
xchg
icebp
mov
dec
repz
pop
lds
inc
push
push
cmpsl
sbb
dec
aas
fs
repnz
dec
fdivs
popf
mov
sbb
xor
icebp
lret
and
lret
arpl
jge
mov
push
faddp
pop
pop
jmp
movsl
inc
add
add
test
add
pop
subb
sbb
sub
pushf
pop
fstpl
fistpl
outsb
fsubrs
inc
inc
push
hlt
sbb
fimuls
dec
cmpsb
xor
test
aas
sub
lods
fsubl
push
mov
shrl
adc
rcrl
dec
popa
gs
sbb
adc
dec
jmp
rolb
mov
out
mov
dec
mov
xchg
or
mov
xor
jmp
popf
mov
repnz
cld
push
and
testl
call
in
push
mov
daa
insl
sti
retw
mov
mov
rorb
insb
insl
fdivs
sub
jg
leave
ror
subl
push
call
cmpsb
rdtsc
jp
gs
insl
cmp
fld
cwtl
mov
sbb
std
ljmp
test
movsl
ljmp
adc
sub
popa
scas
lea
mov
scas
mov
ljmp
sub
jg
shl
fs
fisubrl
and
std
push
dec
idivl
push
shlb
js
jb
sub
cwtl
outsl
bound
stos
fldl
pop
je
mov
pop
in
clc
jns
mov
insl
mov
loop,pt
xlat
addb
add
cmp
imul
mov
dec
mov
mov
inc
adc
mov
scas
pop
adc
pop
lret
daa
mov
cmp
jecxz
xlat
jle
add
dec
inc
daa
jl
loope
mov
rolb
popa
sub
sub
add
arpl
xchg
sbb
in
loope
cld
movsl
add
mov
and
mov
and
pop
adc
int
out
ret
aad
mov
dec
pop
test
mov
stos
jo
mov
movsl
and
sub
dec
pushf
dec
out
jnp
lods
icebp
sbb
imul
out
out
icebp
pusha
jns
insb
lds
outsb
xor
pop
dec
push
mov
pushf
or
imul
hlt
stc
mov
lcall
fiaddl
pop
outsl
inc
test
cmp
out
sbb
sbb
lods
hlt
popa
mov
sub
repz
leave
jmp
clc
or
or
subb
sub
and
or
call
jge
loope
xchg
add
sarb
into
push
dec
ret
and
mov
hlt
aad
mov
je
daa
out
or
dec
sub
add
mov
fldt
mov
pop
jnp
out
mov
lcall
mov
test
in
adc
out
inc
inc
insb
ja
push
cwtl
mov
adc
ret
ja,pt
sti
cwtl
push
dec
bound
pusha
arpl
pop
pop
inc
ret
mov
sbb
pushf
pop
aam
in
dec
test
and
ffree
push
cmp
aaa
cmp
jo
shlb
ljmp
cmp
es
cwtl
and
xor
add
sahf
mov
add
push
mov
sub
add
out
jb
mov
mov
insl
jne
pop
adc
test
mov
xchg
into
out
and
sub
pusha
in
in
inc
sbb
push
aad
aas
adc
mov
pushf
pop
insl
push
fnstsw
scas
xchg
adc
cwtl
rcrb
xchg
push
cmp
mov
ja
cltd
jo
cmc
cmpsb
sub
xchg
js
loope
xchg
sti
xor
jmp
jbe
std
adc
inc
push
adc
in
and
inc
aas
push
outsl
xor
outsl
and
sbb
push
sub
pop
leave
sub
cmc
test
mov
pop
mov
jp
pop
mov
pop
lods
ret
add
or
pop
pop
int3
sub
fldenv
push
mov
adc
daa
or
push
addr16
cld
lcall
add
sub
sbb
add
shrl
stos
cmp
test
stos
sti
jnp
sbb
inc
mov
jge
inc
cld
or
push
out
mov
mov
push
in
mov
push
mov
lcall
add
mov
push
cli
adc
imul
jl
icebp
cs
cli
push
jg
fwait
pop
das
mov
or
mov
mov
push
sub
jb
mov
mov
mov
arpl
fxch
rorl
je
xchg
adc
mov
call
sub
add
sub
adc
add
sbb
sub
call
jno
xor
sbb
pop
jb
outsb
leave
jmp
cmp
lock
fisubrs
xchg
shll
mov
loope
xchg
mov
lds
sbb
jbe
pusha
dec
inc
lcall
jmp
pop
scas
jge
add
cld
mov
push
subb
cmp
pop
dec
mov
sbb
and
pushl
test
in
dec
mov
add
scas
jp
jg
lret
rol
or
add
add
pop
pop
sub
mov
sub
dec
xor
xor
dec
xchg
mov
dec
add
adc
cmp
push
cmp
std
shll
mov
mov
cmp
inc
popf
inc
cld
jl
shl
dec
shlb
sar
sub
fdivrp
imul
sbb
repz
mov
mov
fs
test
cmp
adc
sub
push
fistps
pop
daa
stos
pop
mov
push
xchg
out
push
dec
mov
xchg
mov
cmpsl
mov
dec
cmc
xchg
movsl
jmp
clc
fwait
push
inc
int
int3
outsb
pop
int
add
imul
pop
add
adcl
and
dec
into
mov
into
ja
sbb
fdivs
adc
sub
pushf
push
mov
inc
pop
cmpsl
pop
and
jns
or
cli
out
pop
sub
stc
imul
fwait
add
xchg
mov
shlb
jmp
mov
bound
rcrl
xchg
mov
dec
subb
mov
adc
xchg
mov
jbe
and
cli
jmp
jle
sub
cli
and
dec
adc
shl
mov
dec
int
add
imull
or
xor
gs
jge
lcall
outsl
dec
pop
je
push
addr16
sbb
pushf
idivb
pop
and
sub
inc
nop
mov
imul
jb
gs
and
out
xor
xchg
push
cmp
adc
popf
popa
push
cmc
insl
mov
sub
sbb
add
push
lret
fs
pop
cmp
call
pop
or
mov
test
insl
pop
ja
cmpsl
out
adc
push
call
in
loop
adc
aad
or
sbb
adc
push
mov
mov
loop
xchg
dec
aad
or
sti
sub
mov
bound
mov
and
das
out
dec
sub
faddl
cs
or
mov
cli
lahf
arpl
fwait
xchg
testb
enter
xchg
xor
out
scas
xchg
mov
pop
arpl
and
adc
fdivl
mov
nop
mov
add
sbb
punpckhwd
or
cmp
xlat
sub
adc
jle
inc
fnsave
rcl
adc
and
lods
mov
and
or
pop
sbb
sbb
jecxz
push
xchg
pop
xor
cmp
js
test
inc
sar
jo
ljmp
pop
jbe
mov
movsl
sbb
jno
arpl
mov
sbb
add
stc
dec
aas
pop
hlt
arpl
into
sub
cwtl
int3
ret
loop
aad
cmp
mull
rorl
negb
into
add
cmp
cld
loop
into
ds
in
fcompl
mov
inc
mov
mov
adc
xchg
mul
inc
mov
inc
push
mov
cld
repz
dec
pop
sarb
ljmp
pushf
dec
inc
mov
mov
push
mov
lea
int3
inc
jo
sub
aad
jle
adc
out
out
in
int
shl
mov
xchg
lods
in
lock
pop
je
movsb
mov
clc
sub
shlb
mov
fildll
xchg
mov
dec
pop
sub
stc
mov
cld
cs
inc
add
or
pop
insb
pop
and
fwait
sbb
mov
mov
loopne
outsl
std
cmp
push
cmp
sub
lahf
in
jmp
push
pop
sbb
clc
xchg
xor
jp
or
and
mov
add
aam
insl
cwtl
popa
lock
bound
cli
aad
pusha
int
gs
adc
xlat
into
inc
outsb
mov
jecxz
and
movsl
das
aam
jl
jge
shrb
dec
sahf
xchg
xchg
insl
adc
cld
xchg
movsb
jbe
adc
inc
sub
adc
mov
and
ja
mov
jne
sbb
push
ds
sub
lods
xor
scas
pop
mov
bound
push
mov
arpl
movsl
inc
js
xor
push
data16
pop
ret
or
ret
pusha
fbld
mov
sbb
mov
popf
sbb
cli
push
mov
jae
sti
loopne
xor
flds
mov
dec
cltd
imul
stos
add
lcall
mov
push
pushf
icebp
mov
and
lahf
or
shr
mov
xchg
sub
mov
pcmpgtd
ret
test
xchg
rclb
in
push
jge
xchg
inc
pop
push
movsb
adc
daa
sub
std
fcomps
push
loop
je
lds
jg
push
outsl
lea
jle
test
cwtl
and
or
add
or
iret
icebp
insb
sbb
pop
lods
outsl
and
out
add
xor
and
inc
mov
adc
sub
mov
mov
bound
lds
mov
outsl
scas
xchg
xchg
das
mov
pop
xchg
mov
sbb
std
adc
std
aam
pop
add
pop
aad
inc
test
cmpsb
pop
notl
cmp
pop
rcrl
jo
test
into
fstpt
xor
push
cwtl
outsb
ds
sub
push
aam
notl
mov
mov
jns
pop
inc
aas
mov
dec
test
loop
or
adc
orb
lods
mov
jecxz
and
lret
cmc
jne
mov
ljmp
dec
mov
push
scas
push
push
in
xchg
sub
imul
mov
mov
jl
pop
bound
imul
imul
mov
test
add
xchg
lds
xchg
mov
dec
lods
xorb
push
pop
xlat
dec
or
xchg
lret
xor
popf
aas
xchg
xor
push
xor
add
pop
adcl
and
sub
jae
andb
in
xor
pop
jnp
sbb
mov
rorb
nop
inc
dec
or
add
lahf
xchg
xlat
out
push
sbb
pop
lods
cmp
imul
inc
xchg
pushf
lret
inc
jp
loop
cmc
lods
cmp
bound
jae
inc
cmp
cmp
scas
mov
or
sar
test
mov
xor
arpl
push
xlat
shlb
mov
mulb
ret
rcl
iret
cmp
pop
test
add
sub
add
cmp
mov
mov
movsl
cmc
hlt
cmpl
xlat
push
push
popf
dec
xor
mov
fs
dec
stos
mov
inc
stos
pop
scas
adc
call
xor
jns
mov
es
mov
std
mov
cmp
out
ret
lret
push
insl
jbe
xor
ja
into
inc
xor
sub
pop
idivb
xor
ja
stos
stos
and
addl
adc
fwait
js
gs
jp
xor
push
mov
xchg
mov
mov
add
add
mov
in
test
sub
incb
enter
das
sub
test
sbb
lock
or
das
in
iret
scas
outsb
jl
sti
inc
mov
xor
cmp
rcrl
fwait
test
push
mov
jg
loopne
cmp
lock
jne
push
add
ja
dec
push
cmpsl
outsl
loop
jecxz,pn
lret
xchg
push
dec
pandn
xchg
push
stos
xorl
sbb
xchg
sub
push
arpl
shlb
jno
sbb
ds
add
adc
cltd
sahf
sub
enter
cmp
push
push
pop
xchg
int
mov
mov
or
dec
add
ret
or
add
cmp
gs
mov
daa
pop
stc
xor
push
mov
jl
mov
push
push
pop
pusha
mov
adc
ss
addr16
mov
push
ret
pop
push
pop
sub
cmp
fcmovu
adc
rorb
inc
movsl
pop
mov
inc
push
push
jno
push
fcomip
decb
mov
inc
pop
dec
call
imul
ret
add
pop
adc
scas
push
rcrb
inc
jns
push
fwait
addr16
xchg
pop
ret
repz
ror
stos
mov
and
aas
jo
scas
fwait
pop
lock
ss
adc
sahf
jnp
fidivl
in
jno
es
mov
push
mov
testl
dec
loope
inc
movsb
xor
mov
andl
mov
pushf
cmp
fsubl
adc
mov
push
pop
mov
add
push
ds
cmc
ja
mov
cmpsl
leave
icebp
jbe
push
and
jne
push
in
push
push
mov
sbb
andl
mov
dec
mov
addr16
push
lret
ret
push
in
mov
shlb
enter
repz
mov
loop
pop
dec
js
push
mov
fmuls
sub
cmp
cltd
test
pop
movb
mov
pop
push
adc
test
xchg
ja
mov
add
ret
jecxz
lret
sbb
inc
outsl
push
lods
iret
stos
ret
adc
pop
xchg
lock
es
cli
add
lock
cmp
jge
add
sbb
fildl
aas
iret
add
into
add
hlt
push
sub
out
xchg
jge
lret
call
pop
add
push
std
mov
pop
inc
leave
jp
cmp
popf
popf
cmp
repnz
dec
cmp
pop
xchg
sbb
mov
lahf
sarl
or
lcall
popf
and
cltd
dec
dec
push
inc
push
push
jmp
push
push
and
sub
mov
cmpsb
orb
sub
sti
xchg
sbb
mov
xor
mov
sub
push
xchg
cmpsl
push
adcl
jp
enter
popa
in
mov
pop
mov
xor
repz
pop
pusha
inc
arpl
cli
inc
pop
or
sub
add
pusha
iret
sbb
jno
xor
hlt
insl
rcll
cwtl
and
hlt
jb
xchg
xchg
jle
std
rol
xlat
insb
cmpsl
cmp
push
cmp
cli
cmp
aad
cltd
iret
push
jp
mov
mov
mov
jb
pop
cltd
fxch
es
mov
and
mov
mov
cli
jg
clc
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
cmp
dec
add
add
add
add
add
add
pop
add
add
add
add
add
inc
push
xor
in
adc
xor
cmp
add
add
pop
push
jns
and
and
outsb
pop
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
