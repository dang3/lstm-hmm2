push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
lods
inc
mov
ja
pop
sbbb
xchg
les
adc
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
mov
ret
cmp
ja
imull
aad
test
lea
les
jns
push
pop
jno
sbb
outsl
push
in
cmp
xchg
repnz
cmp
fildll
mov
cld
mov
xlat
push
cmp
insl
cltd
mov
lods
jle
imul
mov
mov
jbe
repnz
in
mov
pop
lods
xor
in
fildl
push
stos
sbb
xchg
test
outsb
xor
btr
xor
cmp
jno
pop
movsb
js
out
cmc
cmpsl
inc
outsl
testb
push
mov
in
enter
sub
pop
add
outsl
jge
movsb
lock
inc
adc
fwait
push
push
or
mov
nop
rcrl
daa
sbb
or
xor
dec
cmpsb
and
mov
push
das
mov
stos
cmp
daa
mov
jmp
sbb
lock
mov
push
xchg
dec
fs
sub
fs
ds
lods
mov
cwtl
lock
dec
shrb
movsl
lods
dec
push
xchg
lret
loopne
xchg
shr
pushf
add
jne
faddl
sub
push
push
pop
jge
xor
bnd
jge
mov
je
sti
mov
cld
cltd
loope
dec
pop
loopne
cld
loope
inc
popa
cmp
xlat
jmp
dec
and
imul
bound
xor
inc
inc
jno
ficompl
push
xorb
enter
jg
push
aam
pop
loope
cld
hlt
ret
js
sbb
adc
mov
lret
shl
icebp
cmc
ds
add
scas
clc
js
jno
push
inc
or
xchg
add
imul
sub
push
inc
nop
testl
stc
mov
dec
pop
cmp
xor
pop
call
lret
jmp
pop
xor
cld
lret
pop
rcrl
xchg
jb
into
pop
jno
push
jmp
outsb
shl
ljmp
dec
jge
scas
lret
insl
loopne
add
sub
and
and
fstps
push
and
notb
dec
pop
jge
ror
and
xor
inc
leave
and
ret
dec
xchg
das
xor
out
fnstcw
loop
aas
sub
ja
test
call
push
xor
mov
inc
sub
mov
mov
pop
adc
or
lahf
iret
loope
xor
sub
into
rclb
mov
sub
add
je
shll
jmp
mov
inc
adc
mov
stc
scas
jg
mov
push
daa
mov
mov
mov
cmp
sti
aad
push
scas
fmul
and
mov
repz
shr
jmp
mov
dec
cmp
and
jo
imul
sbb
outsb
in
sbb
pushw
std
xlat
xor
jge
daa
mov
test
std
inc
sub
inc
outsb
push
jmp
fsts
adc
pop
inc
call
int3
outsl
cmpsb
push
mov
xor
xchg
sub
push
addl
loopne
xchg
pusha
xchg
repz
mov
xchg
pop
cltd
sub
into
and
sub
in
fcoms
test
mov
jb
neg
mov
hlt
adc
bound
cwtl
mov
jae
xchg
lds
out
popa
jne
dec
inc
loopne
adc
imul
stc
push
xchg
div
mov
inc
mov
test
adc
addb
cmp
sbb
fwait
add
je
mov
push
lods
in
loop
jb
lods
inc
lods
or
sahf
sti
or
sub
cli
lret
stos
mov
pop
divb
inc
in
jmp
cld
pusha
pop
or
adc
movsl
arpl
jns
fcoml
adc
mov
lret
sbb
xchg
mov
sbb
mov
je
adc
lcall
lcall
jmp
in
push
or
sbbl
sbb
mov
mov
lret
mov
sub
gs
mov
pop
sbb
sub
out
lods
scas
pop
iret
test
loopne
lods
push
outsl
adc
rcr
cmc
rcrl
pop
outsl
adc
bound
inc
push
push
mov
fwait
cwtl
pop
mov
dec
lods
out
scas
sarl
sub
jbe
imul
jno
xor
xor
cmpsl
mov
xor
sbb
add
mov
icebp
push
sbbb
or
mov
mov
push
mov
mov
cmpsl
scas
add
fxam
shl
add
xchg
pop
stos
push
mov
and
jno
inc
std
or
mov
add
add
add
ficompl
pop
adc
imul
aad
mov
fcmovnbe
pop
pop
sahf
mov
pop
pop
ljmp
mov
clc
testl
js
or
sbbb
pusha
sahf
dec
sbb
daa
imul
roll
cmp
das
jmp
push
mulb
adc
mov
xchg
ljmp
fs
in
mov
mov
out
xchg
jle
rcrb
out
push
test
psraw
push
xchg
fcompl
xor
mov
movsl
jns
mov
lods
imul
dec
loope
mov
adc
jecxz
pusha
push
push
outsb
pushf
inc
jmp
xor
test
int3
xchg
mov
gs
nop
sbb
enter
inc
push
push
sub
inc
jg
push
cmp
mov
cmp
out
adc
loopne
xor
jne
into
jecxz
cmpl
fwait
xor
xlat
push
insl
je
xchg
xor
mov
pop
dec
adc
or
adc
sahf
mov
mov
aas
pop
cs
cmpsb
int
fdivl
out
lock
pop
add
inc
xchg
cld
jmp
lcall
xchg
and
cs
test
mov
push
dec
inc
xlat
test
jno
pusha
mov
mov
rclb
mov
adc
fwait
lea
lea
push
jnp
pop
inc
dec
dec
pushf
cmpsl
sahf
bound
cld
jno
pop
mov
cli
lock
adc
jo
dec
or
cmp
add
jne
xchg
inc
fwait
fwait
xchg
sub
jle
mov
in
inc
jecxz
sbb
mov
stos
ds
inc
xchg
ss
sub
icebp
lcall
nop
out
pop
pop
sbb
jo
pop
mov
sub
dec
lods
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
sbb
movb
pfrsqrt
sbb
ljmp
inc
add
les
jecxz
aad
div
adc
imul
xchg
mov
xchg
jne
sub
cmc
jle
xchg
fld
xorl
sub
sbb
mov
mov
xchg
mov
test
loop
sub
jg
rcll
jmp
dec
pop
xchg
xor
lds
pause
and
mov
fsts
mov
xchg
jb
jmp
imul
dec
inc
sbb
xor
stos
adc
xor
xchg
call
mov
sbb
lock
xchg
jno,pt
outsb
adc
js
xchg
or
daa
fnstsw
scas
and
mov
lret
inc
push
rorb
and
push
mov
xor
pop
fcoml
testl
xor
mov
mov
int3
stos
test
jnp
mov
push
mov
pop
mov
inc
cltd
int
out
jns
pop
push
inc
or
mov
out
cs
insl
cmpsb
sbb
pop
loope,pn
mov
pop
in
fistpl
lahf
popa
xchg
pop
fldenv
adc
sub
or
out
cmpsl
out
push
inc
decl
mov
and
dec
je
pusha
xor
add
adc
dec
lock
arpl
pop
fsubrs
lods
add
imul
push
push
xor
mov
repnz
xchg
mov
jns
test
clc
lock
cmp
add
sub
shll
sbb
daa
clc
js
out
sub
mov
add
push
mov
inc
pop
lret
shrl
fwait
dec
pusha
sbb
sub
cmpl
lods
inc
sub
test
out
fidivs
inc
dec
xchg
arpl
sbb
insl
jno
add
psllq
cltd
mov
cmp
mov
cmpsb
push
pushf
sbb
cwtl
add
xchg
push
cmpsl
lock
cmp
or
out
mov
into
sete
cmp
loope
sarb
into
push
mov
in
xlat
pop
gs
popa
shl
xor
into
stos
pop
pop
das
cli
pop
xchg
rclb
dec
xor
cmp
stc
inc
pop
xchg
and
push
xchg
cmc
mov
adc
cltd
mov
ret
aad
sbb
fstpt
push
push
fdiv
fdiv
sub
adc
incl
dec
xor
out
out
testb
outsl
ret
aas
jo
inc
pop
bound
xchg
sub
loop
add
fidivrl
rorb
inc
mov
gs
dec
add
fucomip
call
addr16
outsl
aad
xchg
out
or
or
mov
mov
mov
es
sbb
cmc
adc
inc
xor
lea
sahf
ja
rcl
rcl
mov
cmc
insl
out
xor
bound
daa
cmp
sbb
mov
int3
mov
sub
xchg
repz
sbb
push
jl
pop
and
insl
out
fiaddl
repz
das
sub
das
fisubl
mov
or
jbe
pmaddwd
popf
ret
fcmove
in
cwtl
fidivl
fwait
dec
icebp
xchg
out
je
jg
fcmovnu
daa
dec
mov
mov
or
push
sti
mov
vhsubps
mov
and
mov
xchg
cmp
cmp
add
mov
loopne
mov
fnstcw
loopne
sbb
movsl
cmp
or
inc
dec
test
mov
or
inc
mov
pop
mov
test
lods
rorb
add
mov
xor
hlt
loop
xchg
mov
sbb
push
and
lock
int3
adc
inc
cmpsb
xchg
push
mov
xor
xor
pop
imul
pop
adc
outsl
xor
adc
out
mov
pop
idivl
fcmovnu
int3
and
sbb
sbbb
push
mov
sbb
test
nopl
clc
dec
fldcw
jle
or
jmp
pusha
cmp
frstor
lret
into
add
shl
xorl
mov
andl
pop
int3
in
or
pop
mov
cmpsl
imul
xor
stc
mov
repnz
cwtl
mov
arpl
loop
and
push
hlt
xchg
inc
in
cmp
xchg
sbb
lea
dec
in
or
cld
movsb
cwtl
inc
shr
leave
mov
lods
neg
mov
jne
push
rcll
shrl
lods
inc
inc
mov
into
pop
fisttpll
in
dec
pop
out
pop
repnz
sbbb
pop
cmpsl
jo
and
xor
adc
jno
lret
cltd
dec
les
rclb
mov
jg
xchg
mov
cmp
and
lock
test
cs
push
xchg
shl
nop
jnp
cwtl
lods
push
daa
sub
sbb
mov
mov
sti
and
into
adc
imul
fcomps
cltd
inc
dec
mov
mov
inc
pop
fwait
jae
ret
inc
int3
fistps
enter
or
mov
insb
sahf
in
rcl
clc
dec
and
xchg
xlat
addb
adc
lret
inc
cmp
mov
dec
pushf
jns
enter
out
jo
kxorw
lahf
andl
popa
mov
ret
bound
sbb
insb
mov
cltd
cmp
scas
int
cmp
aas
ret
push
jnp
add
cmp
daa
cmp
scas
hlt
pop
rclb
mov
xchg
push
push
notb
jl
mov
and
jb
cli
test
adc
pop
sbb
mov
and
mov
mov
xchg
iret
dec
pop
push
push
sti
pusha
fldcw
leave
out
add
je
ror
js
push
es
stc
movsl
fisubl
pop
jnp
arpl
lods
int
or
inc
jl
sub
negl
jp
or
test
xor
ret
mov
push
in
push
mov
xchg
cmp
mov
lret
cmp
fs
jl
xor
aad
adc
adc
sub
sbb
sub
cmp
test
xchg
xor
add
lods
xchg
subb
or
push
fisubrl
cmp
xor
mov
push
xchg
mov
mov
loopne
and
push
inc
or
inc
loopne
std
pushf
and
subl
rolb
fwait
repz
rol
jb
mov
or
scas
adc
add
ljmp
loopne
push
iret
and
dec
lea
test
in
nop
xchg
inc
data16
sub
mov
ret
fidivl
arpl
pop
inc
sbb
gs
fistl
ret
insb
push
fcomi
xor
sub
aas
mov
sti
imul
sbb
mov
les
inc
jae
setns
fwait
out
mov
mov
shrd
adc
shr
mov
jmp
mov
lock
popf
mov
inc
mov
mov
xchg
js
xchg
add
push
adc
add
push
push
adc
jl
push
jl
lahf
fs
imull
pop
and
aam
daa
adc
sbb
fdivrs
fsubs
inc
das
movsb
mov
mov
push
lods
std
lret
es
mov
pop
cli
in
add
out
clc
in
out
lock
and
and
ljmp
cmpsb
bound
xchg
outsl
push
xor
and
xchg
adc
stos
cmp
or
add
mov
pop
mov
mov
lea
cmpsl
ja
bound
jae
out
in
pop
popf
add
push
repnz
or
and
gs
jae
insb
sub
cmp
icebp
mov
pusha
sahf
jp
lcall
mov
imul
add
rcrl
ret
ret
push
stos
out
out
sub
xchg
test
popa
test
or
jbe
sbb
jp
sbb
sbb
div
jbe
cmpsb
and
mov
xchg
out
cs
leave
ret
or
cmp
fisttpll
nop
inc
xchg
idivl
imul
jge
or
fbld
push
rorl
dec
inc
loope
mov
sti
incl
adc
scas
lds
sbb
or
xchg
jl
pushf
mov
mov
jmp
adc
roll
jmp
faddp
dec
in
imul
pop
inc
adc
cld
into
out
jb
cmc
push
inc
ret
fstpl
cmp
stc
in
fldcw
popl
aaa
ja
mov
pop
sub
cmp
addr16
adc
hlt
sbb
and
js
lret
popa
test
inc
xchg
ret
pop
mov
pop
ret
inc
pop
aas
ret
std
test
addr16
add
in
enter
pop
mov
roll
mov
loopne
shrl
jb
mov
and
ficoml
cmp
or
addr16
scas
jg
fldl
and
daa
lret
loop
cmp
cli
sarb
add
mov
pusha
jne
inc
mov
ret
pop
test
add
sbbb
sub
add
cmpl
fimull
inc
sbb
mov
js
mov
sarl
mov
adc
jmp
sub
mov
add
bound
shl
out
sub
int
jnp
stc
xor
fcompl
push
pop
jnp
mov
xor
mov
mov
and
sub
ret
jle
in
dec
adc
sub
sbb
xchg
sub
sub
int
and
cmpsl
outsl
js
push
cld
and
mov
lods
dec
movsb
icebp
xchg
mov
cmpsl
inc
mov
lds
adc
and
mov
into
xchg
mov
adc
fadd
inc
add
sub
mov
jecxz
jecxz
cmpsb
mov
cmp
fwait
mov
adcb
cmpsb
sub
addr16
scas
in
pop
rcr
cmp
jnp
inc
inc
ret
test
sahf
ret
call
test
inc
sub
les
and
xlat
and
jecxz
fs
adc
call
xchg
sbb
cltd
adc
dec
ret
dec
subb
mov
dec
outsb
aas
enter
and
aad
push
mov
or
mov
mov
pop
stos
dec
enter
pop
push
outsl
adc
push
add
xchg
ljmp
test
jbe
sti
imul
or
push
das
jl
mov
movsl
loopne
shl
or
sbb
movsb
pop
insb
loop
fldl
fldl
idivb
mov
fwait
jns
es
icebp
or
stc
addr16
mov
std
fildl
mov
int
jmp
es
jbe
fwait
mov
inc
jecxz
adc
inc
aad
cmp
mov
sbb
or
sbb
cmp
add
ficompl
repnz
jecxz
or
pushf
jle
iret
adc
sbb
mov
in
je
lret
pop
dec
mov
jnp
in
pop
xor
addl
loop
add
add
pop
ljmp
das
data16
mov
fsubrp
jbe
push
cmp
ds
push
stc
push
and
dec
clc
stos
std
push
leave
push
rorb
int3
andl
dec
or
mov
xlat
jns
nop
dec
jb
push
cs
sbb
add
mov
out
pop
cs
mov
xor
jnp
js
inc
xor
dec
jg
xor
mov
push
addl
push
ret
and
push
mov
ds
out
add
sbb
dec
mov
test
orb
repnz
pop
stos
dec
lcall
fdivrs
test
mov
cmp
jnp
jae
push
clc
lods
ret
xchg
or
rorl
clc
pop
aad
fidivrl
jnp
and
or
test
call
and
cmp
arpl
inc
mov
adc
jmp
fsubl
hlt
xlat
inc
gs
lods
aas
insl
jmp
mov
sahf
lcall
sub
stos
movsb
mov
xor
in
cmpsl
test
aam
and
jmp
movl
ret
pop
sub
hlt
pop
sbb
setnp
xchg
mov
mov
xchg
out
mov
jne
scas
inc
push
mov
mov
daa
pop
mov
ds
mov
rolb
xor
inc
int3
sub
aaa
sub
js
lock
dec
popf
mov
pushf
mov
sbb
ja
mov
fdiv
cltd
pop
mov
push
jno
sarb
lea
mov
lahf
or
shlb
cltd
repz
mov
push
hlt
sbb
ret
add
sub
popf
lods
sub
jp
addl
in
int3
pop
sub
jp
lods
stc
cmp
xor
hlt
insb
mov
daa
xchg
push
mov
jne
xor
test
loop
mov
push
fisttpll
popa
sbb
sbb
sub
mov
inc
mov
sti
mulb
je
inc
call
test
rcl
fsubl
cltd
sub
lods
sti
jle
mov
inc
dec
cltd
sahf
idiv
and
pop
cmp
mov
adc
aas
cmpsl
or
es
dec
mov
dec
sbb
add
add
aas
ficomps
gs
fsubrl
hlt
push
jmp
pop
jmp
mov
loop
sbb
ficoml
aas
pop
xor
add
and
lret
jo
push
mov
xor
and
sbb
jb
movsb
pop
fnstcw
out
dec
mov
or
jne
xchg
addr16
jne
fstps
sahf
adc
aam
and
cli
pop
bound
lea
push
add
dec
pop
jb
dec
fmull
andl
xor
adcl
xor
or
cmpl
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
pop
cmc
in
cwtl
out
ja
jle
pop
in
sarl
ljmp
fstl
aaa
dec
xchg
pop
xchg
test
push
adc
xor
inc
pop
xorl
mov
mov
adc
leave
xor
outsl
outsl
dec
inc
notb
mov
push
out
cmp
cltd
push
dec
sub
sub
sbb
and
inc
ljmp
repnz
inc
pop
and
sbb
and
or
xchg
mov
imul
das
add
imul
sub
fidivl
xchg
lock
and
mov
inc
cld
jae
adc
jecxz
in
lahf
in
or
js
rclb
pop
xchg
movsb
pop
or
jmp
stos
inc
insb
pop
lahf
dec
xchg
dec
adc
repnz
sahf
jge
dec
mov
xor
lods
sahf
xor
fldcw
out
mov
add
movsb
lock
mov
idiv
lods
cmp
or
jbe,pn
fwait
xchg
xchg
and
pop
test
mov
rolb
push
mov
xchg
mov
loopne
loop
mov
fs
pop
lods
inc
loop
jnp
cmpb
pusha
or
fidivs
push
inc
push
sbb
cmp
push
add
sahf
stos
push
push
mov
scas
mov
pop
cmc
mov
or
dec
xor
mov
sbb
scas
in
xchg
jg
mov
in
jp
iret
mov
cmp
xchg
mov
out
test
sub
arpl
insb
jno
test
leave
subb
xchg
lcall
nop
outsb
leave
icebp
add
mov
jge
or
push
inc
je
and
icebp
xor
clc
mov
pop
push
in
fmuls
mov
inc
cmp
sub
pop
add
mov
test
scas
pop
dec
mov
cmp
iret
mov
rcll
bnd
dec
xchg
mov
cld
mov
or
icebp
jle
sbb
wbinvd
sub
adc
in
ficompl
mov
dec
dec
ss
and
sbb
dec
adc
xchg
je
jecxz
dec
dec
push
js
add
shlb
sti
xor
iret
fadds
cmpsl
xchg
or
sub
mov
mov
push
adc
or
inc
sbbb
pop
mov
or
adc
sbb
jmp
out
and
add
aas
push
repz
lods
cwtl
mov
push
add
push
enter
mulb
mov
sub
dec
cwtl
xchg
iret
xor
xor
mov
ret
std
imul
das
inc
xchg
jp
sub
mov
push
faddl
mov
jbe
jecxz
xchg
adc
insb
xchg
pushf
push
adc
mov
xchg
inc
add
pop
inc
test
hlt
testl
dec
test
xor
jo
lock
cmpsb
mov
inc
sub
sub
cmp
and
xchg
lock
mov
or
pop
fldl2t
aad
mov
pusha
mov
and
adc
das
push
loope
jl
adc
sub
call
aad
push
orb
mov
cwtl
std
popf
and
jnp
pop
xchg
insb
imul
adc
in
and
sbb
jp
daa
jnp
into
cmpb
stos
mov
mov
popf
push
lret
outsl
push
popl
repnz
ss
loopne
mov
dec
enter
xchg
imul
jns
mov
mov
insl
mov
movsb
xchg
xchg
jge
outsb
mov
and
stos
push
inc
js
pop
pop
stos
ds
dec
ljmp
inc
pop
mov
daa
jo
sbb
or
pop
and
sbb
sub
xchg
rcrb
mov
xor
test
fmuls
movsl
jbe
jae
adc
push
sbb
dec
aam
pop
add
imul
jae
sarl
and
jne
jge
ja
jns
push
and
push
je
cmp
xchg
cs
xor
aas
push
dec
shrb
mov
push
jp
cmp
out
inc
xchg
pop
sbb
hlt
or
mov
cmpsl
mov
repnz
inc
lods
cld
mov
mov
add
outsl
sbb
inc
insb
mov
cmp
lahf
int3
mov
sbb
inc
add
fdiv
std
movswl
cmp
lret
loop
inc
dec
mov
out
jmp
mov
lahf
sbb
lea
insl
or
ss
cli
mov
cmp
je
cwtl
jmp
arpl
xchg
pushf
fdivl
icebp
scas
pop
pop
mov
shlb
mov
cmp
in
sbb
aas
pop
mov
fldt
lret
lea
adc
loopne
pushf
mov
sbb
imul
xchg
es
outsl
ret
loopne
push
push
fistpll
dec
jne
lock
andb
xchg
inc
fidivrl
mov
ljmp
pop
sbbl
lahf
xchg
jae
cmp
js
insb
sbb
outsl
dec
roll
sub
ficompl
loope
imul
rorb
pop
fsubrp
pop
fcoms
leave
shl
cmc
or
push
das
shrb
inc
call
js
pop
adc
adc
aaa
sbbb
mov
push
mov
cmp
cmp
dec
push
aas
cmp
jmp
fstl
mov
fimuls
and
out
xchg
sti
jo
or
jns
cwtl
loope
loop
movsb
pop
mov
icebp
aam
negb
scas
out
or
push
cs
in
dec
adc
mov
jg
ja
jl
cmc
xor
jno
dec
xchg
cld
pushf
push
mov
rcrb
shrb
lea
push
add
dec
sahf
push
and
hlt
push
aaa
sti
or
rcrl
js
sbb
insl
cmp
mov
push
mov
mov
popa
std
cmp
jae
lock
loopne
xor
aaa
lahf
ljmp
jb
mov
push
mov
stos
pop
loop
addr16
push
fdivrp
or
xor
xchg
inc
pushf
lret
adc
push
pusha
inc
cmpsl
jl
in
or
fbld
pushf
lock
sarl
popa
jo
adc
imul
rcrl
xor
push
pop
jmp
jge
popf
adc
orl
mov
push
jnp
lock
aas
pop
imul
sub
call
xor
inc
movsl
outsb
scas
orl
data16
lock
inc
lcall
ret
mov
sahf
nop
movsl
pushf
mov
jbe
loop
adc
pop
imul
xor
sbb
out
loop
jbe,pt
out
mov
dec
loopne
xor
mov
outsb
cli
xor
inc
sbb
dec
inc
mov
mov
pop
lcall
inc
add
push
les
adc
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
loopne
pop
js
aam
ja
dec
push
scas
xor
adc
sbb
stos
sbbb
add
pushf
cbtw
mov
pop
sub
in
sub
jb
stos
jnp
in
js
sahf
ror
cmp
enter
cmc
push
pop
lods
js
cmpb
xor
adc
cmp
mov
insb
test
stos
testb
out
in
jb
mov
xchg
xchg
xor
pop
lods
xlat
dec
test
inc
mov
jae
mov
insb
pusha
hlt
xchg
mov
lock
test
pop
es
bound
in
aas
jp
lock
nop
movsl
aaa
sbbl
fs
adc
inc
add
or
mov
popf
outsl
cmp
cmp
add
cmp
iret
addr16
leave
pop
adc
inc
or
xlat
adc
and
imul
xor
cmpsl
xchg
mov
addr16
push
pop
sub
std
dec
cmpsb
sbb
rolb
xchg
adcl
cmpsl
mov
ret
adc
in
mov
add
aas
jg
rclb
and
dec
adc
movsl
push
xchg
rcrb
cld
stc
jge
jno
jo
cmp
outsl
jmp
js
sbb
inc
popf
ja
icebp
xchg
aaa
stos
out
std
in
jae
fwait
stos
lods
dec
in
add
in
fcomp
lahf
arpl
mov
or
xor
cmp
out
cmpsb
and
fiaddl
pop
stos
mov
dec
mov
icebp
inc
add
or
and
cmp
mov
gs
fiaddl
cmpsl
lods
fiaddl
hlt
and
xchg
fnstsw
movsl
stos
dec
bound
xchg
repnz
sbb
and
popf
in
mov
cli
pusha
ja
and
mov
xchg
fmul
push
dec
fimull
sbb
sub
je
cmpsb
or
idivb
xor
and
push
shrl
and
inc
push
xchg
pushf
aaa
into
push
xlat
cmp
lock
cmp
and
negl
repz
sub
and
adc
je
mov
dec
pusha
push
pop
xchg
dec
loop
rclb
arpl
jae
test
jg
xchg
cmp
sub
dec
stc
out
insl
xchg
lret
pop
icebp
xor
fmul
pop
pop
and
mov
idivb
lea
dec
jno
mov
xor
test
adc
gs
lret
and
push
push
pushf
fucom
enter
inc
es
cwtl
xchg
sti
mov
and
mov
loopne
jo
stos
cmp
xchg
int
rcrl
call
mov
pop
xchg
lea
pop
cmp
data16
fs
test
loop
mov
xchg
loop
sahf
sti
mov
xchg
dec
sbb
add
cmp
adc
lcall
sbb
xor
fs
js
scas
sti
xor
or
pop
or
jmp
adc
lret
mov
jl
shrb
inc
stos
imul
xor
xlat
mov
fs
sarb
das
jp
sub
sbb
sahf
daa
jmp
mov
push
mov
rol
int3
xor
lock
mov
cmp
adc
sti
repz
cmp
pop
mov
adc
mov
push
testl
sub
cmc
clc
idivb
iret
dec
jno
sub
mov
add
jnp
test
std
push
orb
xchg
pop
lahf
mov
xchg
or
pop
arpl
scas
aam
mov
sar
rcrb
add
inc
mov
pop
pop
sahf
fnstenv
pusha
mov
lcall
dec
mov
or
push
fs
ret
mov
cmp
xchg
and
mov
add
mov
call
test
jmp
lods
add
lret
inc
das
xchg
out
std
xchg
sbb
or
repz
mov
sbb
adc
fcoms
or
jecxz
cli
sbb
into
fs
mov
ljmp
fidivrs
xor
orb
stos
js
dec
nop
pop
insb
in
push
repz
rclb
dec
nop
jmp
xor
inc
stc
dec
xor
or
jmp
and
rclb
hlt
std
testl
test
mov
movsb
stos
lret
dec
mov
mov
mov
jg
pop
add
and
adc
jbe
popf
repz
addb
and
jmp
or
cmp
mov
clc
adc
sbb
jae
adc
movsl
stos
test
jg
ljmp
xlat
pop
xlat
and
jnp
movsl
or
loop
and
cmp
bound
push
scas
push
and
and
pop
iret
or
scas
dec
cmp
adc
sub
xorb
iret
and
xchg
pop
jb
fcoms
inc
test
push
jo
aaa
cmpsl
lea
add
mov
adc
sbb
cld
mull
sbb
fildll
mov
cmc
inc
hlt
movsb
xor
outsl
ss
shlb
icebp
fdivs
pop
std
pop
push
mov
lret
scas
ficoml
outsw
ljmp
add
adc
pop
mov
push
hlt
push
jb
mov
scas
das
pushf
outsb
push
insl
mov
aas
mov
gs
jo
jno
dec
cli
jmp
or
push
int3
lret
xor
sbb
sbb
lret
add
push
in
dec
call
idivb
into
mov
xchg
pop
bound
ss
inc
adc
popf
test
dec
xchg
mov
mov
stos
cmp
inc
jge
mov
jmp
subl
adc
mov
cltd
addr16
pop
mov
jmp
ljmp
pop
rep
loopne
lods
jno
sti
stos
mov
sub
or
dec
popa
leave
dec
arpl
test
cld
mov
sub
xchg
or
shrb
inc
jecxz
pusha
dec
inc
inc
xchg
lret
mov
or
je
push
out
mov
sahf
stc
lret
popa
jg
push
cmp
or
push
inc
mov
aam
add
sbb
push
das
xchg
cmp
push
sbb
mov
addr16
or
aaa
jae
inc
iret
mov
les
xchg
mov
mov
mov
es
sti
cmp
not
sarl
mov
shll
cmp
push
leave
fdivrl
mov
and
popa
lea
cmp
cmp
outsl
jl
rorb
das
sbb
xor
cmpsl
andb
xchg
push
jmp
loopne
ret
popa
loop
mov
jae
fbld
call
xor
xor
jne
cld
repnz
ret
sub
xor
dec
push
cmp
fstpt
pop
inc
movsl
mov
inc
xor
jnp
jl
leave
or
movsb
xor
xor
xchg
inc
imul
inc
aam
push
add
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
daa
scas
sbb
subb
ror
or
lcall
or
cli
dec
aad
lods
mov
xchg
sahf
daa
mov
adc
aas
inc
dec
push
fsubrs
mov
mov
xchg
sbb
popl
cltd
std
sbb
arpl
test
pusha
push
dec
mov
pop
sbb
dec
neg
pop
jg
outsb
hlt
adc
shlb
add
call
jecxz
loop
xchg
cmp
lret
add
push
sbb
repz
fucom
jp
repnz
hlt
scas
cld
sbb
xchg
loope
sub
ficoms
mov
fldcw
subb
nop
pop
mov
call
jns
inc
xor
stos
push
repz
mov
fdivrs
xchg
adc
push
mov
and
cld
imul
sub
stc
pop
mov
pop
or
mov
xor
cld
in
fbstp
dec
jb
dec
mov
add
dec
nop
loopne
inc
inc
and
int
jecxz
sbb
cltd
fiaddl
add
fucom
jmp
mov
push
in
add
mov
fcoml
adc
jne
or
in
arpl
cs
das
call
sub
add
ljmp
gs
add
int3
addl
mov
xchg
ljmp
lock
outsb
push
or
shll
jmp
pop
popa
subl
orb
mov
sub
cwtl
mov
rcr
sub
adc
sarl
lods
scas
sub
shlb
test
pushf
ljmp
cwtl
daa
jmp
mov
pop
shll
xor
out
lret
roll
ja
je
lahf
adc
int3
cmpsb
adc
mov
aaa
aad
scas
jge
rclb
out
pop
inc
scas
clc
cs
lods
fstl
fsubr
adc
aas
aad
popa
lock
faddl
mov
ja
cmp
and
jnp
cmp
mov
push
mov
xchg
pop
mov
mov
xchg
fildll
cmpsl
shlb
jo
push
xchg
fnstsw
xlat
dec
push
fistps
xchg
xor
xchg
rcrb
repnz
sub
int
add
mov
mov
js
insb
adc
je
sub
fs
xchg
outsl
rcrb
test
imul
scas
cwtl
mov
pop
aad
ss
stc
cmp
dec
pop
jns
into
fcoms
jecxz
push
sbb
cmpsb
clc
pusha
outsb
push
jb
cli
stos
fcmovu
repz
push
mov
in
xchg
inc
push
push
sub
jecxz
mov
sub
pop
stos
xchg
pop
push
fmuls
imul
nop
and
es
dec
lahf
jne
mov
test
cltd
test
inc
imul
add
cmp
push
xchg
clc
or
jmp
add
mov
fisubs
lcall
jns
js
daa
dec
and
repz
aam
xchg
inc
aam
add
inc
dec
leave
cltd
rcl
xchg
xchg
sub
les
jge
sbb
dec
std
jmp
in
ret
xor
divb
jle
stos
sbb
mov
mov
or
cmp
xchg
or
inc
jecxz
cli
lret
adc
jmp
sub
xchg
rcrl
dec
insl
jae
jmp
sti
aaa
loop
ret
add
test
adc
add
push
sub
jns
and
insb
cmp
addr16
jae
sbb
imul
jnp
fidivs
icebp
fldt
add
fwait
lahf
cmp
push
and
or
xchg
adc
mulb
fcoml
fists
mov
xlat
xchg
push
and
push
nop
mov
movsl
mov
sub
ja
idivb
push
je
mov
lret
sbb
push
add
add
mov
sub
mov
xchg
scas
enter
and
js
pop
jnp
inc
hlt
insl
stos
ret
lds
push
push
mov
insl
mov
scas
shr
xor
pop
das
cmp
ret
loope
clc
imul
adc
jecxz
out
pop
pop
or
sub
cmp
sbb
pop
dec
lcall
push
pusha
or
mov
or
fsubrl
loopne
sub
cld
pop
add
pop
push
ret
pop
mov
xor
cltd
js
int3
mov
sbb
aas
daa
lock
repnz
mov
ljmp
in
stos
js
and
iret
dec
into
je
jl
shll
add
dec
leave
push
lods
jae
repz
nop
pop
jle
jnp
cmpsl
dec
daa
and
decb
add
mov
lret
pop
mov
insl
insl
xchg
sbb
adc
dec
scas
rep
pop
gs
cmpsl
mov
mov
xor
mulb
and
pop
jecxz
sub
popf
lret
pop
je
mov
lods
jbe
jg
push
or
cmp
xor
cmovp
repz
stc
mov
xlat
sti
pop
rcrl
inc
in
lcall
sbb
sbb
dec
ret
movsb
lock
scas
pushf
push
std
or
cli
repz
dec
jae
jnp
sti
popa
repz
sbb
test
dec
daa
mov
sub
xchg
insl
jo
mov
and
adc
jecxz
fstpt
mov
xchg
out
xchg
pop
xor
mov
inc
sbb
sub
cmc
scas
icebp
aas
data16
jl
iret
mov
adc
add
shlb
sbb
clc
rclb
int
stos
jge
lret
adc
ja
filds
sarl
mov
fwait
mov
rorb
hlt
xor
pop
adc
cmpsl
jae
das
daa
mov
nop
adc
insb
jns
sbb
in
pop
cmp
lret
pop
outsb
sbb
adc
mulb
sub
adc
inc
roll
int3
push
mov
cltd
xor
inc
add
loop
cs
push
sub
fsubr
inc
push
lods
addb
ss
pop
movb
jb
cltd
pop
int3
sub
out
push
pop
repz
adc
test
add
sbb
push
mov
xchg
dec
popa
adc
test
leave
sbb
inc
test
dec
xor
pop
push
inc
dec
adcb
mov
out
and
mov
mov
mov
sbb
into
jae
pop
push
xchg
imul
xchg
xchg
cmpsb
rcll
pushf
dec
inc
dec
pop
xor
out
icebp
int
das
outsb
adc
inc
fsubrs
out
and
jle
xlat
popa
shlb
into
inc
sub
jae
jp
incb
dec
pop
hlt
movb
stc
ret
mov
jecxz
int3
pop
pop
out
mov
cli
mov
mov
nop
mov
and
or
nop
mov
pop
fdivl
xchg
addr16
inc
jo
sub
cmp
push
adc
jno
xlat
daa
sub
popa
lods
les
std
adc
xchg
sbb
shl
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
je
inc
mov
ja
adc
scas
rcl
or
xor
adc
aam
or
ja
xchg
or
je
lret
dec
mov
cmp
or
repnz
leave
xor
adc
test
dec
loop
add
rcl
cltd
or
ss
aas
mov
jge
xchg
sbb
push
mov
jbe
jbe
sahf
dec
mov
shll
in
adc
std
in
inc
pushf
xchg
fistl
add
xor
cmp
jp
sbb
in
adc
dec
stc
jge
mov
push
fcmovnb
add
loopne
out
or
mov
shll
adcb
movsl
or
cmp
loopne
adc
jmp
mov
mov
cmpb
repz
mov
dec
sti
cltd
shl
enter
mov
jnp
insl
fidivs
pop
fstp
fistl
pop
outsl
cs
and
ret
push
xor
imul
std
ss
cmp
js
jg
aaa
ja
sub
sub
push
into
dec
lret
in
xor
scas
dec
mov
dec
pop
cmpsb
repnz
rorb
inc
popf
fcoms
inc
jae
mov
cmp
xor
mov
lds
sbb
add
std
xor
xchg
jecxz
fdivl
imul
sub
pop
pop
jno
sti
cmpsb
ss
jbe
dec
cmp
push
std
cmovl
push
dec
out
sahf
add
mov
adc
lahf
adc
fcomp
cs
and
in
or
fldl
int3
shr
test
pop
mov
xor
shr
leave
in
rorl
mov
dec
ds
std
adc
dec
orl
sub
xor
xchg
pop
fwait
cmp
sti
pop
outsl
or
mov
jl
jae
xor
push
les
das
ret
enter
jmp
mov
inc
mov
sub
test
int3
and
add
cmp
inc
in
loopne
mov
les
push
mov
aad
sbb
inc
jmp
es
mov
mov
pop
inc
push
jle
xor
push
in
sub
movsb
pop
enter
mov
add
rorb
das
adc
int3
test
leave
pop
pop
adc
sbb
pusha
push
push
mov
lock
sub
adc
add
dec
adc
mov
sbb
inc
jecxz
insb
cmpsb
pop
mov
mov
adc
pop
push
or
scas
cmp
mov
cmpb
or
lahf
cld
jge
mov
or
outsl
pop
scas
push
or
test
fs
xor
sarl
out
dec
pop
ficoms
clc
add
push
es
pop
fstpl
push
inc
mov
and
fimull
mov
cli
test
nop
stos
shlb
hlt
popa
push
lds
gs
inc
inc
roll
push
inc
test
test
cmp
xchg
mov
sub
gs
and
jne
aam
push
fisttpl
and
scas
movsl
loope
testl
jno
cli
sub
dec
push
and
ds
out
nop
mov
sub
inc
ja
fildl
and
outsb
sub
cmpsb
popf
push
test
mov
sbb
push
movsb
addr16
inc
das
shlb
int
cmpsb
sub
inc
lret
push
insl
fsubs
adc
pop
cli
fwait
gs
adc
sbb
jecxz
mov
adc
sbb
dec
arpl
addb
inc
movsl
loope
and
push
in
jg
jl
aad
or
mov
sub
cmc
shl
cmp
or
or
cld
sbbb
push
cwtl
inc
imul
or
sti
jmp
mov
sbb
test
fsubrl
outsb
xchg
out
push
lea
movsb
es
ret
ds
xor
enter
add
sbb
push
jg
xlat
scas
and
xor
addr16
push
xor
cmp
pop
jb
pop
xor
jno
mov
push
push
int
or
sbb
dec
and
mov
sahf
ret
mov
fcoml
fcomi
add
mov
push
pop
sbb
jbe
add
cltd
pop
sub
ret
xor
lds
mov
in
push
fistpl
aam
cmpb
mov
jle
add
inc
outsb
cmp
outsl
lods
adc
lods
imul
mov
xor
or
cltd
mov
mov
cltd
cmp
mov
sbb
pushf
cmp
adcb
outsl
movsl
add
mov
int
lds
lahf
aad
push
repnz
mov
mov
loopne
cwtl
adc
sbb
pop
sub
lods
push
or
mov
mov
push
xor
into
pop
sti
hlt
mov
lock
pop
jge
imul
and
imul
add
inc
jo
push
test
jne
shl
cmp
in
lods
fcomip
cmpsb
sub
iret
inc
stc
repz
test
lahf
stos
bound
dec
dec
and
sbb
add
stc
loop
xchg
sub
scas
inc
mov
das
int
xor
mov
sub
or
fisubs
scas
cmc
leave
xchg
jbe
and
push
push
shll
sahf
adc
mov
inc
lock
fstps
outsl
and
mov
adc
pop
sub
shrl
inc
gs
xchg
aam
sub
add
jp
rcll
jmp
or
pop
sub
nop
mov
sub
inc
or
in
lds
mov
mov
test
cmp
gs
cmovno
cwtl
inc
and
cmpb
cmp
aas
clc
xchg
inc
push
out
fwait
in
das
add
mov
inc
lret
or
or
cmpsb
adc
mov
jge
dec
loope
cmp
add
js
adc
and
aas
sub
add
jno
outsl
mov
repz
shlb
cmp
mov
add
xchg
call
push
out
paddd
rolb
scas
push
mov
adc
jns
aaa
inc
arpl
pop
addl
pop
test
mov
fidivs
adc
notb
xchg
sahf
popf
stc
sbb
call
xchg
adc
pop
xor
scas
jne
jo
addr16
repz
mov
stc
inc
add
push
daa
cli
or
mov
push
iret
in
adc
loop
imul
dec
adc
lea
outsl
ss
int3
sahf
xchg
and
jne
xchg
jecxz
or
sarl
push
xchg
xor
negl
adcb
test
mov
loopne
dec
mov
int
sub
aaa
jle
lods
xchg
xlat
in
dec
or
out
pop
sbb
out
fiadds
lods
sbb
xor
es
or
fsubs
adc
das
andl
mov
scas
imul
fisubs
das
ljmp
idivb
sub
push
lods
adc
repnz
rorl
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
fs
insb
xchg
mov
add
adc
adc
cmpsl
pushf
push
imul
xchg
push
xchg
pop
inc
outsl
into
clc
mov
cmp
bound
popf
mov
rol
and
adc
xor
adc
push
mov
push
or
sub
sbb
mov
adc
les
sub
mov
sbb
xchg
jl
xchg
imul
mov
out
shl
mov
incb
xchg
or
xor
jbe
out
jg
sbb
inc
test
into
das
popf
adc
push
stos
push
sarb
fisttpl
adcl
xchg
aas
mov
stos
in
mov
sahf
pushf
cmp
lods
popa
inc
hlt
in
andl
mov
dec
in
xchg
inc
push
inc
and
add
or
jmp
mov
or
cmpsl
stc
mov
mov
and
out
push
mov
xchg
or
test
dec
add
add
mov
loop
sub
sbb
aaa
inc
test
push
aaa
lock
sub
or
adc
xchg
scas
cli
test
pop
inc
imul
push
leave
pop
dec
xchg
xor
stc
pop
scas
sbb
popf
aad
mov
movsb
or
lock
pop
sar
cld
cmp
loop
cmpsl
shll
in
xchg
mov
jl
jl
outsb
addr16
fidivrl
out
ss
mov
or
cmp
fadd
cld
loopne
lea
push
jno
fisubrs
mov
je
push
add
stos
pop
fmuls
fcmovnb
loopne
sub
insb
mov
mov
pop
xchg
ljmp
cli
cmp
loop
out
xor
pushf
xchg
out
lret
xor
or
push
subl
inc
dec
sub
inc
sub
scas
lds
mov
cmp
aas
ljmp
loopne
mov
fidivl
jmp
in
dec
pop
pop
inc
mov
call
cmp
mov
jo
mov
insl
lods
aas
push
stc
inc
mov
ljmp
mov
sub
mov
mov
mov
xor
clc
popf
ret
popf
or
and
xor
daa
aas
lret
add
lret
jl
and
arpl
mov
ret
lret
xor
cmp
pop
add
or
pop
sahf
lods
ljmp
stos
jb
xor
add
add
popa
cmp
je
ljmp
jb
pandn
dec
mov
and
leavew
pop
jno
jns
mov
inc
xor
mov
cmpl
xchg
imul
stc
sbb
dec
int3
fs
xor
cli
lock
cli
leave
adc
fadd
scas
add
cltd
pop
pop
sub
repz
dec
daa
shrb
out
jp
jg
sahf
movsb
pop
out
cs
jp
add
lds
test
jne
loopne
xchg
cmc
out
add
test
cmpsb
adc
sub
call
jmp
pop
cvtpi2ps
leave
dec
fdivrl
push
cs
out
xchg
mov
pop
fxch
js
push
inc
sub
jno
mov
inc
lods
dec
inc
scas
and
mov
sti
in
push
and
push
jecxz
xor
cmp
adc
mov
repnz
sbb
mov
pop
movsl
mov
pop
or
stos
hlt
push
inc
sub
cli
sub
pop
shll
xor
adc
cmp
xlat
pop
dec
jbe
add
fcoml
fadd
aas
sub
jmp
out
mov
aas
arpl
push
insb
fdivs
cmpsb
and
std
aad
leave
das
push
test
adc
mov
mov
fdivp
pusha
loop
pop
mov
adc
test
pop
inc
push
orb
cwtl
hlt
arpl
ret
mov
jmp
xor
push
pop
out
fucomi
or
mov
sub
or
mov
add
in
mull
inc
popa
lfs
out
jmp
lret
leave
jno
clc
addb
mov
mov
add
movsb
xchg
pop
stos
aad
xchg
mov
cltd
push
mov
out
ret
icebp
mov
push
xlat
mov
adc
inc
adc
stos
mov
push
inc
int3
mov
popw
jmp
aam
sahf
lods
dec
insb
pop
call
clc
jmp
pushl
fistps
rcll
mov
outsl
add
int3
ds
test
mov
sbb
ss
les
je
jp
push
adc
dec
scas
or
lcall
pop
inc
and
fisubrl
in
loop
push
icebp
add
andl
in
mov
cmpb
sub
inc
test
les
mov
daa
push
lods
fnstsw
scas
pop
pushf
incb
cltd
daa
iret
cmpsb
xor
js
scas
add
outsl
movsl
fnsave
cmp
dec
mov
dec
and
inc
jmp
add
dec
pop
pop
lret
sbb
shll
sub
stc
in
fwait
popa
xchg
mov
jno
mov
xchg
and
push
ds
pop
mov
dec
test
and
fucom
imul
jp
mov
enter
mov
ficoml
jg
cmp
adcl
xchg
dec
xor
cmp
mov
pop
or
mov
pop
dec
mov
add
mov
jecxz
dec
jb
inc
jne
repnz
sbb
mov
andl
dec
push
movsl
push
cmp
aas
xor
mov
cmpsb
add
ljmp
and
inc
call
mov
push
in
xchg
push
push
or
mov
inc
push
inc
cmp
setns
lds
mov
xchg
imul
insb
cmp
int3
inc
pop
sbb
ja
fimuls
adc
or
int
dec
add
cmp
ds
and
les
pop
dec
bnd
lret
xor
jmp
int
push
jne
jb
mov
xor
mov
sbb
mov
adc
jg
adc
mov
sub
mov
ljmp
in
inc
loope
bsr
lock
popf
dec
outsb
cmp
xchg
dec
mov
xor
xor
sar
inc
stos
lret
inc
pop
push
cmp
jno
xchg
sub
popw
leave
int3
push
outsl
sbb
in
frstor
icebp
outsb
test
dec
and
mov
loope
jnp
rcrl
cwtl
jg
gs
int
dec
pusha
jo
leave
in
mov
mov
les
mov
jb
movsb
xchg
and
cmpsb
orl
loopne
xchg
pop
lret
iret
pop
dec
push
adc
push
loop
sbb
add
lcall
inc
rcrl
mov
or
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
xor
dec
mov
ja
mov
xor
pop
stos
jno
into
pusha
xor
fstps
pusha
push
dec
adc
xor
mov
push
nop
faddp
lock
push
pop
jbe
xor
or
lret
jae
sub
dec
and
in
outsb
push
push
add
addr16
mov
fmuls
lds
inc
mov
push
not
scas
stos
or
mov
mov
or
hlt
cmp
jle
inc
mov
sarb
pop
push
dec
adc
rcll
lods
push
lret
sub
dec
sub
movsl
pop
js
repz
xchg
fs
lods
lea
xchg
add
jecxz
rcll
enter
fadds
data16
outsb
scas
and
push
icebp
sti
ret
in
xchg
adc
push
loopne
jmp
sbb
out
and
dec
xor
cs
adc
pop
test
inc
or
mov
cmpsb
dec
fdivl
or
mov
jne
xchg
loop
xor
xchg
jns
sahf
or
mov
es
pusha
jle
loope
mov
mov
in
mov
fstp
movsl
and
xchg
jns
adc
dec
or
add
or
pop
jl
mov
int3
mov
cs
ss
sub
mov
ja
mov
fisttpll
gs
inc
outsl
data16
mov
sbb
xor
jnp
jae
lret
xorl
mov
cld
mov
pop
hlt
adc
sahf
das
or
mov
xor
in
or
mov
and
push
fs
sbb
in
mov
and
inc
pop
lods
sbb
iret
jns
mov
orl
inc
das
push
dec
mov
cmp
mov
pushf
xchg
pop
lahf
push
mov
dec
fsts
pushf
mov
cmp
adc
aam
cmp
not
icebp
jp
std
mov
xchg
cmp
pop
add
dec
stc
xchg
sub
ss
dec
jne
push
dec
repnz
ss
pop
adc
pushl
movhps
dec
lock
filds
repnz
and
sbb
rol
add
negl
cmp
add
sarl
jno
cld
lcall
aas
add
adc
mov
push
mov
inc
cmp
mov
add
and
or
pop
cmpsl
push
xchg
pop
sub
outsb
faddl
pusha
dec
lret
rorl
test
test
dec
add
push
sub
xor
and
jbe
and
imul
std
dec
int
aam
pop
mull
aas
lret
call
loope
test
mov
push
pop
adc
hlt
int3
jb
aad
mov
fstpl
mov
jno
test
fs
xlat
test
dec
loop
in
movsl
lods
push
mov
or
lea
inc
rolb
popf
inc
fnstenv
push
aaa
inc
pop
loopne
and
outsb
mov
gs
cli
pop
jg
adc
and
mov
loopne
rcrl
mov
inc
roll
push
jmp
stos
add
inc
daa
repnz
lahf
mov
in
out
bound
mov
pop
push
and
xchg
scas
push
add
mov
pop
push
or
sbb
mov
ja
or
inc
aad
jno
mov
mov
std
in
stc
arpl
pop
xor
bound
xchg
std
test
outsb
mov
ja
shlb
aam
out
pusha
mov
and
cld
stos
shll
std
xchg
test
mov
jnp
movsl
cmc
mov
add
or
stc
mov
inc
or
int3
test
decb
imul
jl
jge
sbb
fdivrp
add
add
cld
adc
xor
in
adc
cmp
stos
stos
imul
add
stc
arpl
and
jg
mov
mov
aad
cmp
add
in
mov
sub
int
lcall
cmp
out
inc
loop
in
push
xchg
hlt
inc
ret
add
jbe
pop
aaa
lahf
cli
sbb
jmp
mov
fsubrl
aas
outsl
mov
test
das
gs
lds
push
lret
fwait
add
scas
add
mov
ja
ljmp
sbb
dec
ja
dec
mov
inc
leave
outsb
lods
fsubr
bound
std
dec
or
and
std
mov
cmp
mov
sbb
aad
xor
dec
stc
jmp
ret
rorl
test
mov
add
arpl
add
call
push
jno
mov
adc
cmp
xor
mov
and
xlat
cs
out
jl
xor
filds
filds
mov
sub
adc
testb
xchg
cli
sbb
daa
push
pop
aad
pop
testl
jmp
test
mov
lods
ret
pop
jmp
add
xchg
outsl
mov
lock
sbb
inc
adc
xor
ret
orb
pop
js
ljmp
mov
jbe
fbstp
push
movsb
and
test
xchg
test
scas
popa
adc
mov
mov
inc
cmp
cwtl
data16
add
rclb
in
and
test
in
ficoml
cld
in
xor
cmp
push
xchg
pop
push
fs
mov
cld
fidivs
pop
test
adc
xchg
cmp
popa
adc
and
mov
jns
inc
inc
inc
mov
mov
mov
dec
mov
addr16
rorb
mov
inc
and
dec
or
orl
repnz
jl
gs
scas
mov
dec
movl
lret
adc
push
or
popf
mov
dec
mov
mov
push
test
sti
rorl
ja
xor
shll
std
int3
repz
imul
inc
add
xchg
movsb
dec
mov
jge
cmpsb
mov
xchg
dec
pop
inc
stos
xchg
pop
and
lods
or
outsb
adc
dec
add
sbb
inc
shlb
mov
nop
mov
xor
rcll
in
rcrb
aas
or
and
shr
dec
pop
movsb
mov
add
test
cmc
push
scas
adc
into
pop
jecxz
test
and
and
popa
cmp
add
pop
xchg
xor
les
cwtl
jo
test
push
and
and
fcmovu
in
inc
popa
cmpsl
sub
leave
xor
inc
fwait
add
out
push
out
mov
test
idivl
push
cmp
arpl
or
add
aad
mov
iret
mov
xor
std
and
shrd
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
movb
cmp
jp
ja
pop
push
xchg
cmp
mov
subb
loopne
push
mov
clc
test
inc
or
mov
cmp
xor
mov
xchg
ficoms
cmpsl
mov
dec
cs
pop
sub
dec
arpl
cmpsl
iret
sub
mov
mov
or
sub
dec
fdivr
pusha
loop
aad
xchg
sub
lcall
mov
mov
int
movsl
cwtl
and
mov
enter
fldenv
jns
push
push
cmp
mov
divb
jns
or
xchg
add
negl
fisubrs
testl
pop
loop
out
or
fimull
xor
jp
push
adc
popa
jle
in
xor
xchg
addb
dec
push
lahf
jecxz
cmc
push
stos
mov
xchg
mov
inc
pop
cmp
cmpsb
out
add
push
insl
push
mov
faddl
in
stc
loop
js
stc
adc
xor
jns
stos
pushl
iret
xchg
xor
roll
xlat
mov
dec
add
loopne
popf
pop
jl
pop
cmpsl
dec
sahf
add
push
out
dec
inc
mov
fdivl
push
push
and
or
lea
push
lahf
mov
sbb
jbe
jg
nop
sub
mov
mov
fdivs
cmp
aam
aaa
divb
jmp
shlb
hlt
xor
mov
in
dec
scas
sub
call
mov
mov
test
lds
push
dec
aam
mov
punpcklwd
dec
xor
or
sahf
shll
jg
pop
or
gs
xchg
jb
loope
icebp
sub
cli
addr16
or
push
cltd
xor
flds
mov
fimull
popf
mov
and
int3
sbb
leave
mov
sbb
clc
cli
jne
lcall
xor
push
jl
xor
loope
sbb
fstl
aad
pop
mov
in
mov
iret
stc
pop
loopne
xchg
lret
inc
cwtl
and
lods
add
add
pusha
or
rclb
inc
mov
iret
pop
pop
cmp
or
or
loop
jmp
adc
fimuls
sbb
inc
cmp
fdivrs
repz
or
ret
inc
cmp
xchg
or
cwtl
xchg
insl
xor
mov
dec
loop
fnstenv
fwait
je
ret
xor
sub
mov
mov
mov
pop
shr
and
sub
inc
test
test
fmul
mov
movl
insb
mov
out
cmp
dec
cmpb
fsubr
jo
jle
psrld
fsubrs
jl
inc
mov
test
call
pushf
out
mov
sub
or
jns
and
enter
mov
mov
add
cmp
mov
pop
in
sbb
mov
test
xor
popa
addr16
inc
dec
inc
movsl
arpl
mov
mov
das
mov
subps
pop
push
cmp
mov
stc
repnz
addl
into
in
ds
stos
mov
xchg
and
pop
lea
inc
jno
pop
out
xor
cmp
sbb
repnz
dec
jl
fdivl
hlt
or
mov
stos
pusha
enter
subb
dec
hlt
std
dec
scas
mov
in
outsb
je
push
xchg
hlt
in
sbb
inc
push
sub
pusha
pusha
das
cmp
shll
mov
js
push
sbb
pop
mov
popa
mov
cltd
in
sub
mov
cltd
testb
push
sbb
cli
xchg
mov
je
dec
inc
dec
and
data16
xor
pushf
stos
js
mov
push
fisubrl
aad
fcmovnu
sub
or
mov
sbb
push
lock
cltd
fcmovnb
or
fisubrl
push
xor
loope
mov
or
movsl
xchg
add
imul
test
mov
aad
and
mov
imul
lcall
jg
xor
pop
lods
pop
dec
ret
movsb
pop
addl
call
or
jnp
add
jle
adc
data16
push
cmc
add
mov
iret
test
arpl
cmpsb
inc
push
repz
sbb
mov
inc
ret
dec
and
js
and
add
test
inc
scas
jge
jae
outsb
sub
jcxz
xor
mov
arpl
jecxz
sbb
pmulhuw
sub
iret
mov
sub
rorl
insb
fs
sbb
nop
xchg
mov
mov
mov
mov
loopne
movsl
or
adc
jg
mov
dec
fldt
cld
cld
mov
add
adc
pop
cmp
or
xchg
add
es
dec
ds
push
sub
pop
jbe
lahf
or
sbb
or
ds
mov
outsl
lock
pop
ja
sbb
add
lret
mov
xor
xchg
aaa
pop
or
shlb
mov
cmp
sub
hlt
cmp
lret
xor
cld
jle
mov
loope
jno
cmpsb
push
jmp
adc
sub
jge
pop
clc
jp
rorb
pop
das
sub
cltd
fsubl
cli
and
pop
pop
sbb
mov
into
dec
or
push
push
cmp
dec
frstor
lods
xor
sbb
jo
cmp
push
sahf
idivb
imul
dec
mov
dec
in
dec
leave
ja
cmpsl
add
xchg
call
mov
and
lret
jo
push
xchg
push
out
ja
push
fisttpll
fisubrs
xchg
cwtl
psubw
adc
out
mov
ss
repnz
xchg
test
jnp
aad
mov
fisubrl
sbb
sbb
ret
movsb
fisubl
push
xorb
xor
pop
sbb
pop
xor
lods
enter
mov
fs
mov
xor
pop
xchg
les
test
in
test
xchg
jns
jg
loope
xchg
inc
and
mov
inc
mov
aad
cmp
pop
dec
jbe
roll
pop
xchg
adc
in
xchg
lods
fisttps
cwtl
jle
testb
movsl
sbb
xchg
or
jmp
and
ss
xchg
jne
or
jns
mov
mov
jae
fs
sahf
fcoml
jns
jnp
inc
push
fucom
adc
dec
in
sbbb
or
cmp
movsb
inc
jecxz
xchg
cmp
fdivl
add
and
inc
pop
inc
lock
repnz
adc
out
outsb
mov
cmp
push
je
mov
loope
lahf
rolb
cmpl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
mov
js
push
ja
loopne
scas
pop
xchg
movsl
movsl
ds
shr
xchg
shrl
add
lcall
jg
sbbb
dec
mov
fwait
add
dec
sarb
pop
sub
xor
or
adc
dec
lret
dec
or
scas
and
dec
int3
int
mov
sbbl
jne
xchg
push
pusha
ret
loop
adc
mov
cmp
jne
jbe
dec
push
inc
jmp
push
icebp
testl
movl
or
mov
mov
aad
pop
inc
out
add
insl
push
jo
test
cmp
bound
js
roll
sub
push
ret
dec
bound
inc
mov
out
mov
jae
sub
mov
cmp
rcl
inc
rcrb
fwait
loope
out
pop
es
fs
ja
sti
nop
mov
scas
sahf
stc
out
fistpl
cmp
and
xor
mov
xor
shll
cmp
add
vcvtdq2pd
xchg
xor
jbe
and
rorb
xchg
outsb
fs
jb
scas
in
mov
scas
inc
mov
or
inc
mov
push
jno
scas
scas
out
push
pop
loope
xchg
loope
pop
fidivs
push
xlat
pop
mov
pop
mov
clc
add
out
movsl
rolb
imul
imul
mov
int3
pop
mov
fs
push
shr
shlb
jae
or
push
mov
mov
out
jns
and
ljmp
out
xchg
negb
xchg
addr16
and
jbe
ss
imul
or
xchg
mov
outsb
shrb
push
or
data16
cmp
sbb
inc
cmpsl
mov
imul
in
sub
outsb
imul
imul
mov
movsl
cmpsb
mov
mov
imul
cmp
jl
jg
push
pop
std
loop
inc
rcrb
add
rclb
pop
daa
repz
inc
lods
testl
sub
pop
jmp
mov
sarl
out
sbb
xchg
or
iret
cli
sbb
mov
pop
cmp
xchg
sbb
pop
dec
sbb
insb
jge
pop
and
mov
lret
repnz
and
adc
ja
jmp
dec
adc
testl
xorl
data16
jmp
movsl
push
shrb
lret
es
mov
das
cli
xor
pop
and
jecxz
dec
add
inc
repz
sbb
cmp
jne
and
aad
adc
test
fs
and
or
mov
push
shlb
push
mov
jae
inc
out
in
sarb
sub
out
push
fisttpll
pop
or
ror
jg
loop
iret
or
xor
xchg
sarl
sub
jne
mov
andb
popf
loop
or
sbb
test
cmp
pushf
rcl
xor
dec
pushf
sub
aam
xchg
jae
lahf
lea
into
add
push
and
pop
sbb
pop
outsl
cmp
outsb
ret
mov
jne
adc
inc
sbb
sbb
or
minps
inc
inc
sbb
and
xchg
pop
out
dec
mov
lcall
xchg
mov
in
fiadds
out
xor
out
enter
pop
xor
js
movsl
mov
jecxz
rclb
in
xchg
scas
or
adc
mov
and
orl
adc
test
enter
leave
mov
cltd
add
push
lods
mov
pop
sub
cmc
into
xor
and
mov
push
jns
idivl
roll
test
push
jne
mov
mov
xor
mov
mov
mov
in
adc
sub
push
push
outsb
daa
xor
addr16
jnp
mov
jmp
movsl
push
in
cmpsl
push
cltd
stos
lods
mov
cmpsb
and
loopne
daa
pop
loope
addr16
mov
jnp
scas
or
lods
aaa
lcall
sahf
lcall
pop
mov
and
ror
outsl
ficomps
xor
data16
ficomps
or
lret
mov
xchg
jae
push
mov
sti
xorl
pusha
sbb
xor
je
sbb
xchg
push
xchg
test
xchg
pusha
xchg
gs
test
mov
lds
jno
mov
add
fwait
cmp
nop
shrb
xchg
inc
xor
and
out
lahf
inc
pushf
sbb
rcll
and
mov
cmpsb
fisubrl
jns
mov
ss
cmp
bound
push
jb
dec
pop
popf
and
mov
jno
mov
dec
xchg
aaa
mov
cmp
mov
and
popf
inc
add
mov
mov
pop
inc
pop
divl
cmc
mov
sub
or
push
pop
dec
bnd
clc
jl
inc
jno
push
push
pop
mov
std
mov
movsb
sub
and
gs
popl
sahf
adcb
pop
mov
inc
sub
out
call
add
or
xor
adc
testb
in
cmpsb
mov
pmulhw
push
xchg
and
popf
cli
inc
jbe
lret
mov
sub
iret
xchg
negl
in
test
ja
cmp
push
mov
aad
pop
fs
jl
outsl
jno
xor
jne
into
loopne
sub
mov
or
repz
cmp
push
cld
jmp
mov
and
xchg
jg
sub
lods
mov
ret
push
test
les
mov
cmc
leave
sbb
cmc
jno
xchg
test
xchg
pop
sub
addl
sub
aam
out
shll
fs
fsts
dec
repnz
sub
clc
cmc
cli
adc
stos
add
jnp
xlat
mov
mov
dec
ds
dec
jmp
add
and
pop
cmpsb
mov
adc
pop
shlb
and
push
hlt
sub
adc
push
fsub
aas
inc
sahf
in
pop
idivl
mov
std
enter
mov
std
lcall
in
dec
push
xor
jg
cmp
das
cmpl
test
jne
pusha
pop
mov
aam
pop
nop
pop
or
adc
mov
xor
sahf
pop
rol
insb
xor
jmp
sbb
cli
popf
lcall
arpl
inc
dec
loopne
jno
cld
mov
dec
insb
arpl
or
lcall
mov
fs
rcrl
add
cltd
mov
sub
add
mov
mov
int3
flds
dec
cmpsl
xchg
lock
in
jb
aas
inc
rclb
test
dec
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
je
mov
pop
ds
gs
movsb
push
dec
ljmp
xlat
or
pop
int3
jg
add
cli
movsl
xchg
cmp
mov
ss
and
jb
inc
cmp
orl
pop
shl
cld
in
cmp
hlt
and
xchg
jns
xchg
in
sbb
data16
jle
inc
out
xchg
xchg
push
clts
imul
dec
jmp
daa
push
call
cmc
cwtl
test
mov
pushl
insl
push
xchg
mov
xor
cmc
out
mov
mov
pop
ja
mov
loopne
fdivs
int3
movsl
cltd
sbb
std
int3
sub
loop
das
enter
push
inc
lods
aas
cmpsl
pop
xor
mov
push
inc
push
dec
mov
jl
iret
cltd
aaa
loope
loop
adc
repnz
hlt
xchg
cwtl
aad
popf
adc
xor
sub
pop
sub
sub
negl
cmpsb
fs
dec
add
shrb
pop
js
mov
dec
jge
add
add
sub
or
push
pop
mov
cld
sub
and
mov
imul
std
dec
pop
or
adc
stos
dec
ret
mov
into
adc
mov
xor
jl
mov
xchg
jae
mov
mov
scas
mov
fidivl
lods
mov
pop
xchg
popa
in
jb
mov
cmp
lea
mov
mov
dec
mov
cmp
push
inc
and
xchg
pop
sub
lret
jnp
mov
mov
out
mov
lcall
imul
in
pusha
fdivrp
movsb
cwtl
mov
stos
dec
mov
mov
das
mov
and
mov
adc
sbb
test
popf
test
sub
rorb
xor
out
push
or
xchg
inc
mov
sbb
cwtl
xorb
std
dec
mov
into
loope
dec
mov
mov
lahf
sub
fldl
ret
inc
push
mov
pushf
bound
addb
jle
shlb
xchg
insb
pusha
repnz
loope,pn
mov
cmpsl
std
sbb
push
in
imul
push
cmp
or
pop
ss
push
popf
dec
jl
enter
mov
dec
or
push
fs
movsl
push
lret
push
lret
sbb
mov
leave
jl
sbb
cmc
mov
dec
cmpsb
pusha
sbb
dec
ficomps
jmp
add
outsb
cmp
cli
fiaddl
test
cld
addr16
mov
insl
pop
push
ja
je
mov
add
pop
add
sti
ss
add
mov
lds
adc
push
fldenv
xchg
mov
in
jl
and
jg
xchg
jno
jo
and
pop
xchg
inc
xlat
aam
mov
xchg
fldenv
outsb
subl
sbb
ds
pop
mov
lods
xchg
jo
sahf
dec
mov
mov
xor
dec
xchg
mov
jp
sbb
das
mov
mov
insl
in
xchg
jle
out
push
cmc
mov
out
cmp
sub
xlat
cld
adc
push
aas
repz
fcomi
scas
mov
imul
xchg
jmp
sub
incb
cmp
call
in
leave
pop
xchg
lret
pop
mov
divl
notl
pop
push
in
jge
dec
out
push
outsb
aaa
ljmp
xor
push
loope
imul
inc
addr16
mov
xchg
fidivrs
inc
js
ss
xchg
push
inc
inc
iret
xchg
or
sbb
pop
mov
mov
mov
repnz
repz
int3
std
add
cmp
mov
sub
push
xor
mov
addl
dec
jge
inc
or
cwtl
add
mov
out
lret
pop
ror
cmp
outsl
daa
dec
movl
adc
packsswb
mov
adc
xlat
dec
adc
ss
pop
loop
adc
lahf
mov
inc
and
jno
repnz
into
add
imull
pop
inc
mov
sbb
sub
filds
xchg
inc
insl
jmp
stc
imul
cmovl
decl
xor
push
mov
ret
loop
xchg
ret
xchg
push
inc
pop
outsb
push
cmpb
jo
add
sub
insl
rcrl
cmc
xor
fcoms
sbb
cs
xor
push
or
adc
test
das
mov
add
insb
test
mov
cmpsb
sbbb
adc
xchg
cli
pushl
daa
push
adc
data16
adc
data16
xor
dec
pusha
sub
ja
pop
xor
ror
iret
shll
cwtl
mov
fs
fldenv
cwtl
mulb
add
ret
sub
xchg
cmp
repz
push
lock
iret
fstpl
sbb
fcom
dec
inc
in
jecxz
adc
cmp
push
xor
sbb
mov
insb
hlt
mov
mov
fs
mov
ret
in
sub
sub
icebp
test
cmp
out
fdiv
and
sbb
test
mov
outsb
xchg
dec
mov
divl
repz
dec
sbb
push
mov
movsl
xorb
adc
sti
jge
int
push
aaa
lahf
aad
dec
mov
aas
adc
mov
push
int3
or
cwtl
pop
adc
inc
push
ds
lahf
lock
iret
and
push
add
jne
pusha
mov
inc
cli
and
adc
popa
pop
push
jne
mov
jno
adc
out
mov
out
cmp
adc
xchg
cltd
cmp
std
cmpsl
jae
mov
jecxz
mov
adc
movsl
outsb
daa
aad
loopne
jns
xor
cltd
call
sub
loop
int3
mov
or
insb
mov
das
mov
mov
repz
adc
dec
rcrl
mov
mov
std
sbb
xchg
adc
scas
js
inc
push
mov
sbb
cmc
movsl
dec
enter
lods
cmc
xor
mov
lea
out
movsb
fstp
sahf
lahf
icebp
add
aam
rcrl
jns
mov
mov
cmp
leave
sbb
rdpmc
push
sbb
or
cmpsl
dec
das
xchg
sbb
or
in
xor
inc
jae
dec
inc
add
mov
sbb
xchg
add
mov
add
cmc
sub
mov
pop
es
xor
mov
test
cltd
mov
inc
shrl
cli
rorl
or
mov
lcall
loopne
mov
mov
pop
in
xchg
pop
out
out
xor
sarb
sti
or
jns
cltd
stc
mov
lahf
aas
xchg
jecxz
mov
cmpsb
imul
ret
push
xor
enter
in
dec
jl
vpsllw
addr16
sti
and
lret
mov
int
insb
pop
add
add
mov
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
fadd
xchg
outsl
dec
pfrcpit1
and
jg
lods
xchg
mov
or
inc
push
and
xor
test
inc
sarl
mov
loopne
jbe
jl
jo
mov
mov
insb
jb
aas
pop
in
loop
push
lahf
adc
jmp
movsb
add
sub
xchg
sub
pop
fwait
xor
divb
mov
aad
ds
in
cli
sub
daa
in
int
pop
inc
imul
dec
push
pop
sub
inc
adc
mov
inc
setb
fwait
jnp
ja
outsb
addl
xchg
push
jne,pt
lret
lds
imul
dec
mov
lret
jbe
stc
push
cmpsb
adc
mov
mov
jl
mov
fistps
shll
xor
mov
cmp
pop
aaa
add
test
adc
cmp
xchg
sahf
adc
mov
mov
in
xor
jo
pop
faddl
aam
mov
dec
mov
in
inc
pop
shlb
out
aad
fmuls
jb
outsb
mov
out
xchg
fmull
shlb
testl
pop
out
stc
push
push
mov
or
ds
sub
cmp
cmpsl
repnz
add
call
popf
pop
mov
pop
test
into
into
imul
xor
in
or
inc
sbb
mov
cmpsl
andb
push
add
pop
jae
in
dec
fs
divl
lahf
popf
test
lock
push
dec
pop
or
jae
dec
sbb
mov
mov
aad
lcall
mov
shl
sub
xor
in
fistpl
stos
xchg
dec
mov
pop
loop
fidivs
pop
call
push
jmp
sub
jg
mov
dec
push
push
fdivrp
dec
cmp
push
into
movsb
jecxz
fidivrs
xchg
test
xchg
mov
movsb
inc
sub
fldl2t
dec
and
sti
push
sbb
lret
or
sub
dec
ficoml
in
jg
stc
jp
lahf
mov
pop
or
es
cmp
imul
add
cmp
cmp
or
and
test
dec
sbb
inc
icebp
int
jmp
cmp
jns
pop
popf
aaa
inc
dec
lahf
push
inc
cmc
and
scas
and
mov
add
into
mov
rcl
lahf
cld
lret
in
mov
add
movb
adcl
push
fldl
shrl
mov
pop
sarl
adc
xchg
mov
xchg
arpl
mov
stos
push
jb
or
jbe
add
pop
loopne
dec
js
subl
fsts
xor
adc
mov
xchg
inc
out
push
or
insb
mov
push
xlat
repnz
pushf
inc
call
cmp
cli
jle
pop
popa
and
iret
mov
xchg
nop
lret
aas
push
je
insl
add
xor
xor
ss
and
and
insl
cmp
mov
adc
or
sbb
push
mov
sarb
xchg
inc
xor
fildl
jp
insl
ja
xor
lcall
dec
ss
add
lods
dec
cmp
xor
popf
mov
inc
aam
out
iret
xchg
sbb
outsl
adc
xor
fldt
cmovae
lods
ret
enter
jnp
mov
and
out
add
aam
or
or
push
inc
lahf
pop
or
sti
lret
cld
mov
dec
xchg
mov
jo
enter
push
js
mov
into
jecxz
lea
mov
mov
or
jo
and
decl
vpunpckhwd
call
adc
xlat
sbbl
and
cmpsb
mov
loop
xchg
or
fdivl
cwtl
imul
push
xchg
lds
push
int
imul
jns
inc
sub
push
mov
push
fcompl
in
lret
sub
push
jne
pop
divl
jg
push
pop
or
js
lea
push
sub
xchg
add
in
cld
or
jg
mov
dec
xor
ds
fsubs
adc
dec
insb
insl
into
mov
and
cmpl
jg
in
sbb
jmp
cmp
xchg
inc
mov
daa
cltd
or
jl
loope
es
in
add
in
rorl
push
xor
and
enter
mov
mov
aaa
xchg
jecxz
loop
and
push
jbe
and
lcall
jns
sbb
jae
xchg
es
sub
dec
adc
in
jmp
mov
daa
mov
jp
mov
dec
push
in
mov
inc
or
call
cs
outsl
sub
or
pop
add
pop
addr16
and
in
pop
mov
ljmp
dec
aam
enter
jnp
push
cmp
xchg
jl
or
and
pop
pop
add
and
sarb
xchg
xor
add
ds
xor
ja
xchg
jno
mov
cmp
test
repz
lea
popf
and
pop
jmp
cli
xor
js
mov
mov
adc
clc
int
outsl
in
mov
xor
aam
add
xchg
adc
mov
dec
cvtpi2ps
in
xor
and
jl
sti
rcr
add
and
sub
out
ffreep
sub
in
repnz
movsl
adc
aas
adc
pop
cmc
call
lcall
mov
or
push
sbb
insb
addr16
dec
scas
sbb
insb
cmc
lcall
test
xchg
inc
ret
cli
xchg
jne
push
xorl
jl
jo
add
sub
jo
gs
notb
mov
cwtl
mov
loopne
movsb
adc
push
enter
add
and
push
int3
dec
mov
fisttpl
cs
dec
imul
inc
subb
mov
clc
out
inc
jp
das
pop
stos
mov
jo
inc
push
cmp
arpl
and
sbb
mov
sbb
adc
orl
mov
and
and
jne
sti
iret
mov
jne
mov
fcmovbe
dec
leave
xor
roll
mov
pop
dec
push
call
xorl
mov
mov
mov
mov
jp
notl
mov
and
mov
addr16
shrl
shlb
mov
push
out
and
lret
popa
xchg
imul
andl
loope
adc
mov
ffree
xchg
mov
inc
jmp
cs
or
orb
mov
xchg
jge
daa
push
sbb
cmpsl
xchg
push
inc
dec
aam
mov
std
pop
dec
cmpl
roll
pop
je
or
cmp
enter
push
cmp
jne
scas
popf
jl
fimuls
stc
into
and
lock
imul
je
addb
mov
jns
and
or
pusha
lahf
cltd
jo
loope
mov
andl
shrd
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
jl
or
xchg
pop
ja
jmp
out
pop
mov
cmp
and
enter
jmp
push
xchg
stos
les
bswap
shll
ljmp
jl
lods
add
mov
jae
dec
pop
orb
arpl
push
xchg
stos
push
lods
insl
stc
outsl
push
inc
sub
cmpsb
bound
test
divb
cwtl
inc
sahf
pop
xor
and
dec
mov
mov
ss
loop
cmp
sbb
dec
adc
mov
mov
xchg
adc
decb
js
pop
insl
dec
mov
cs
pop
mov
sbbb
xor
data16
adc
and
inc
fwait
push
inc
mov
mov
pop
out
and
loope
aad
aas
jl
rcll
das
xchg
mov
sbb
xchg
push
fisubrl
xor
push
xor
jmp
xchg
jae
push
loop
cmp
in
ljmp
jp
push
sbb
divl
add
lret
sahf
ja
scas
xchg
ja
fisttps
cmpsl
inc
or
mov
jae
push
decl
mov
cltd
pop
sub
pop
adc
push
push
ss
ficompl
pop
add
add
jno
arpl
out
or
or
dec
xchg
jae
movsb
adc
jle
adc
sub
sbbb
test
jb
inc
jmp
clc
jecxz
mov
fs
xlat
xchg
bound
dec
cmp
in
add
push
jno
aad
decb
das
and
sbb
or
lock
or
jno
jne
sub
mov
sub
jg
push
inc
lock
scas
lds
sub
rorl
mov
pop
pop
es
dec
scas
mov
adc
ljmp
divb
add
jmp
jl
jno
clc
sar
aaa
sub
bound
or
fbld
jo
xor
mov
or
imul
pusha
adc
cltd
jb
lds
and
popa
mulb
sahf
loope
cltd
jb
fld
lock
and
outsl
sbb
insb
push
hlt
repnz
or
leave
push
push
adc
fdivrs
fistl
ficoms
xchg
xor
cli
hlt
aam
xor
enter
push
dec
xchg
mov
icebp
rorl
jnp
repz
je
andb
enter
imul
xchg
cs
das
or
mov
mov
cld
pop
and
cs
jg
mov
movsl
sub
jbe
clc
push
rol
push
call
out
sti
xchg
inc
imul
sub
mov
sub
clc
fisubrl
sub
inc
dec
adc
ret
loopne
out
sbb
jns
dec
inc
fmuls
push
out
pop
push
xor
shll
std
and
jne
jno
mov
push
ss
pop
mov
out
adc
jae
ret
push
xchg
push
sub
adc
mov
rcl
subb
and
fstps
std
loop
call
mov
inc
enter
jg
lret
fidivrs
mov
mov
mov
xchg
je
push
sub
xchg
mov
lods
and
jmp
mov
js
mov
add
xchg
cmp
loope
outsl
jb
push
mov
xlat
pushf
es
js
xchg
rorl
xor
idivb
into
andb
call
mov
iret
dec
imul
and
push
mov
imul
fsts
xchg
es
xor
das
data16
orb
xor
mov
jns
sub
push
mov
sbb
stos
adc
jge
xchg
xlat
scas
add
and
xor
lods
inc
popa
mov
jns
mov
pop
cmp
cmp
or
and
mov
repnz
bound
sti
stos
dec
cmp
dec
fs
cld
xor
daa
mov
add
push
jg
negb
ljmp
sbbb
xchg
rcrb
fst
xchg
dec
ret
fs
imul
push
and
loop
std
jne
jbe
add
add
fsubrl
mov
dec
fbstp
mov
mov
sarl
or
add
stos
pop
out
dec
xor
cmpsl
aaa
xchg
mov
dec
mov
inc
mov
pushl
mov
rcrl
sub
fstl
div
gs
insl
sbb
in
pop
imul
daa
pop
or
les
and
lret
test
jp
mov
xchg
lods
mov
and
dec
loopne
fwait
andb
ss
lret
test
jmp
movsb
or
mov
and
std
or
jge
aad
ds
jg
pop
daa
int3
add
ja
push
and
outsb
mov
scas
mov
fimuls
icebp
add
xchg
out
rcrb
cmpsl
xor
outsb
or
clc
or
idivl
in
das
std
sbb
outsl
test
inc
and
xchg
ret
ffreep
adc
aam
sti
jbe
inc
aad
push
js
jecxz
adc
inc
or
mov
call
mov
mov
adc
sbb
mov
adc
adc
mov
dec
xchg
and
cld
ss
and
movsb
xor
dec
cs
mov
push
cltd
jb
xchg
push
mov
into
in
inc
loope
mov
push
and
test
mov
xchg
xchg
pop
cmpsl
push
and
sti
jae
popf
sub
pop
pop
imul
in
cld
icebp
in
sbb
push
sarb
mov
inc
sbb
aas
je
pop
popf
aad
loopne
mov
ja
shlb
add
notl
mov
stos
sub
or
addr16
cmp
aam
mov
nop
repnz
les
ja
decb
fisttpl
aaa
jg
ficompl
call
das
mov
shll
dec
ds
sti
push
xchg
iret
cmp
adc
dec
movsb
shlb
adc
iret
je
nop
jecxz
orb
gs
jp
loopne
in
imul
lcall
in
inc
adc
xchg
push
mov
add
push
int
jnp
or
iret
in
fucomi
sub
and
sub
scas
sbb
sub
and
repz
xor
cmp
mov
mov
add
addr16
xchg
sbb
mov
pop
daa
nop
jbe
lcall
pop
mov
inc
or
mov
add
cli
lcall
mull
and
pop
orb
pop
rcrl
aam
dec
into
out
adc
jns
jo
adc
sbb
jp
inc
add
adc
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
repnz
std
xchg
add
popa
mov
cli
adc
push
push
loopne
insl
push
sub
add
jmp
es
and
mull
xor
sub
inc
int3
ss
in
test
ds
es
or
add
cmp
push
add
pop
fs
jne
mov
sub
add
mov
sub
cltd
into
imul
mov
mov
and
jmp
fildl
push
mov
add
mov
cmp
cltd
cwtl
add
push
pop
adc
int3
xchg
or
loope
xchg
sbb
repnz
adc
xchg
insl
fimull
sub
jnp
fs
inc
arpl
mov
cmp
mov
test
dec
inc
mov
dec
roll
jnp
pop
sub
pop
add
sub
mov
xchg
popf
pushf
lods
inc
jns
jb
jl
pushf
lcall
out
mov
stc
ja
push
sub
adc
enter
sbb
sbb
add
sarb
test
sub
inc
cmp
addr16
jmp
jns
xor
jne
adc
push
add
rorb
add
or
jp
push
mov
add
out
or
imul
lds
insb
pushf
xchg
add
clc
jl
jle
sub
call
sbb
jge
lods
sbb
or
insb
outsb
fidivrl
pop
mov
insb
ret
scas
lret
push
cmp
mov
xor
mov
cmc
cli
sbb
xchg
push
sbb
mov
cmp
rcrb
dec
jle
in
movsw
sub
or
xchg
or
mov
pop
fucomp
jle
sub
and
in
cltd
lock
mov
jb
cmp
sbb
test
xchg
mov
lret
ret
jmp
hlt
sahf
push
cs
sbb
inc
mov
adc
xor
mov
divps
add
push
push
incb
cmp
xor
push
sbb
ljmp
pop
ret
dec
addl
stos
pop
pushf
lock
mov
pushf
cmp
mov
in
add
mov
pop
and
add
mov
cmpsl
xchg
pop
or
inc
push
pop
add
ljmp
jecxz
sbb
push
push
dec
aas
iret
mov
cmp
sbb
cmp
cmp
movsl
out
jnp
scas
lret
mov
std
or
adc
out
push
cltd
jmp
jecxz
lock
leave
popf
jle
sub
add
adc
fisttpl
and
iret
clc
inc
push
and
aaa
inc
out
sbb
mov
popf
push
add
bound
xor
iret
pop
inc
jbe
rorl
xor
sub
fistps
cld
xor
jae
mov
into
in
test
xchg
push
cld
in
sbb
in
mov
pop
dec
inc
test
into
das
cmp
int3
or
ds
shr
xchg
mov
jno
push
push
inc
scas
xor
xchg
aam
fstpt
lahf
pushf
aad
xlat
xchg
jmp
in
jp
sti
shll
rcr
and
inc
cmc
jo
rcrl
inc
mov
push
aam
mov
dec
adc
pop
leave
or
inc
pushf
incb
mov
sbb
popa
xchg
idiv
cmp
pop
push
mov
and
dec
stc
in
rolb
cmpsl
cwtl
js
daa
in
in
cld
mov
fcmovnbe
popa
jae
sbb
xlat
dec
fwait
pop
xor
mov
mov
push
xchg
push
les
push
int
movsb
dec
jecxz
sahf
dec
mov
in
and
cmp
nop
adc
inc
and
mov
xor
jb
sub
mov
leave
mov
and
in
push
out
in
rcll
shlb
mov
push
sub
outsl
adc
out
inc
aad
xchg
dec
jl
bound
mov
push
adc
test
hlt
sub
and
sbb
dec
ror
out
mov
and
repz
loopne
leave
mov
ret
push
ljmp
adc
mov
and
adc
pop
lds
xchg
mov
mov
or
jnp
aad
dec
jmp
jle
movaps
mov
add
mov
lahf
inc
xchg
push
mov
int3
mulb
je
sbb
loope
add
pop
mov
xchg
inc
pop
ljmp
cmp
mov
cmp
jle
dec
fisttps
mov
pop
pop
repnz
aam
jne
loopne
shlb
imul
das
sub
mov
push
aad
pop
mov
inc
std
inc
or
rclb
mov
sahf
push
bnd
jbe
inc
or
xchg
aad
cmp
pop
scas
pop
push
mov
sahf
push
flds
push
test
enter
push
in
add
jmp
mov
in
xorps
subl
adc
stos
mov
iret
cwtl
mov
sbb
scas
out
mov
mov
or
pop
andb
leave
mov
push
out
xlat
add
and
test
pop
inc
inc
jge
leave
adc
das
dec
jp
out
xchg
dec
jo
ss
sub
cld
scas
shrb
and
ljmp
sbb
cmp
loope
sbb
cmpl
mov
push
xchg
mov
je
lret
xor
std
push
stos
insb
or
arpl
xchg
add
xchg
push
and
dec
xor
lahf
or
fmull
sbb
sub
sub
xor
mov
nop
jp
sbb
lcall
insb
test
in
cmp
pop
mov
shrb
orl
mov
and
loope,pn
movsl
and
dec
test
and
int3
in
fsubrs
mov
sbb
es
dec
sub
add
mov
jo
fsubrs
and
mov
mov
enter
lahf
mov
sub
mov
xchg
inc
test
jae
and
sub
cmc
jne
insl
xchg
mov
jnp
loopne
arpl
js
lcall
lods
sbb
cmpb
popa
mov
pushf
psubq
fildl
jmp
mov
insl
pop
fidivrs
jbe
mov
pop
roll
pop
xor
xor
or
pop
add
cmp
out
in
outsl
mov
cltd
lcall
cmpl
outsl
ret
mov
push
dec
xchg
ja
pusha
mov
pushf
out
lcall
dec
ret
adc
dec
inc
and
int3
cwtl
mov
lahf
xor
mov
out
jge
or
xchg
sarl
ljmp
mov
into
fnstsw
stos
mov
push
pop
ja
sbb
add
aam
cli
shlb
mov
push
sbb
xor
cmp
add
jge
subl
jmp
scas
popa
inc
jge
sbb
cs
daa
push
or
xchg
mov
mov
lret
sub
lds
sub
and
orl
and
cli
inc
xchg
jae
or
test
hlt
cmc
daa
stos
test
je
pushf
orl
sub
repz
xchg
jmp
loop
arpl
das
inc
call
flds
fdivrl
ficoms
lock
or
dec
lock
pop
movsbl
orl
lods
shl
add
inc
add
stos
inc
sub
in
sub
sbb
push
push
jae
call
loope
ss
mov
inc
xor
push
xchg
mov
mov
mov
lds
shr
jg
enter
add
and
jnp
adc
add
push
testl
adcb
cmp
sbb
push
inc
gs
int3
pop
jae
divb
aaa
shlb
lahf
inc
jae
pop
mov
push
inc
cmp
dec
fsubs
pushf
lods
flds
rcrl
test
call
lods
mov
pop
fnstenv
adcb
mov
imul
inc
aaa
cmp
fiadds
out
xor
cmpsl
cs
push
cmp
call
or
mov
mov
add
call
and
add
xchg
fwait
dec
aaa
xor
fidivrs
out
adc
lods
cld
adc
lods
lret
rcr
push
xchg
mov
pop
scas
mov
or
mov
add
mov
or
inc
add
ljmp
xchg
mov
test
pop
scas
rcr
cmc
pop
mov
sbb
shll
jae,pn
into
pop
andb
call
jecxz
mov
rorl
sbb
push
push
cmpsl
dec
rcrb
sub
sub
lods
outsb
or
mov
mov
rolb
mov
leave
sbb
lock
mov
dec
and
loopne,pt
sbb
push
mov
adc
mov
xor
xorb
orl
daa
sub
add
dec
xor
js
pop
aaa
sbb
cmp
popa
xor
test
ret
stos
mov
lcall
scas
push
fs
fistpl
enter
insl
sub
movsl
mov
es
xchg
xchg
les
idivl
pop
shrl
scas
jbe
push
fisttpl
jb
xchg
scas
outsb
fbstp
mov
enter
xchg
mov
fs
movb
daa
sub
pushf
in
push
cmp
push
or
into
cmpsb
in
jno
xchg
or
sbb
or
rolb
insl
inc
pushw
fwait
mov
jae
cltd
mov
sub
mov
das
jo
arpl
lods
lcall
mov
mov
repnz
out
das
xor
cmc
fdivl
aaa
mov
mov
mov
pop
fistl
push
or
and
mov
je
sbb
mov
in
push
movsl
insb
fldenv
addr16
int3
sbb
jo
lret
ja
loop
xchg
movsl
pop
xor
push
jmp
or
xchg
push
test
jmp
pop
sub
push
insb
jo
clc
push
jp
lds
out
cmp
dec
in
mov
sub
add
fsubrl
pushf
mov
into
push
xchg
cmp
pop
loop
aas
icebp
mov
enter
cli
repz
pushw
aaa
xlat
add
inc
jbe
inc
xor
adc
and
icebp
xor
inc
and
pushf
sbb
fildl
lcall
xchg
imul
cli
push
adc
jo
lret
daa
std
outsb
pop
out
fdivrl
sub
aad
sbb
aam
add
int3
mov
jp
lahf
das
sbb
xrelease
in
sub
rcll
cmc
pop
sub
xor
iret
inc
push
and
jnp
xor
sbb
jmp
arpl
pop
mov
mov
mov
jg
adc
mov
dec
lret
mov
xchg
sub
or
push
jo
lods
push
in
mov
inc
ljmp
pusha
mov
or
dec
mov
sahf
addr16
and
scas
push
lcall
cmp
jp
mov
xor
push
inc
ljmp
iret
fmull
int
sub
fisubl
sbb
cmpsb
mov
dec
repnz
int
mov
psrlw
add
aam
leave
ss
jno
jle
pop
cld
jp
stc
mov
cld
insb
mov
push
mov
jle
je
sti
out
movsl
and
pusha
pusha
push
ds
loop
sbb
adc
js
add
xorb
in
sub
movsl
fs
dec
lea
xchg
xor
mov
fldt
rcrb
push
dec
hlt
sub
sbb
out
xchg
es
in
and
fstpl
lgs
and
adc
les
nop
ret
imul
mov
push
and
in
lds
idiv
pop
and
out
or
aas
rolb
mov
cmc
pop
push
stc
lahf
jbe
out
jo
cmp
scas
mov
int
es
cmpl
pop
rorl
or
pop
loopne
jg
pop
test
insb
mull
inc
and
enter
imul
cmpsb
outsl
cmc
mov
pop
decl
mov
gs
jne
iret
outsl
repz
dec
dec
shll
incb
push
add
jae
ds
mov
lds
mov
out
and
ret
jmp
and
pop
jb
mov
dec
dec
test
and
cmp
movsb
arpl
jo
push
add
and
inc
fistps
test
sarl
inc
imul
outsl
rclb
in
jmp
xchg
mov
or
pop
inc
aaa
cmpsb
jle
sahf
push
inc
imul
lea
sub
aam
push
mov
push
ja
adc
rcrl
aam
dec
and
test
arpl
roll
jno
scas
xlat
frstor
push
sahf
test
in
dec
or
xchg
ja
addl
arpl
in
mov
push
sbb
jnp
and
lret
sub
jle
push
fnstcw
pop
enter
outsb
dec
icebp
cmc
into
lods
in
mov
xor
test
movsb
inc
stc
xchg
fdivrl
rclb
cltd
inc
les
inc
test
ljmp
psrad
mov
enter
bound
xchg
fisttps
inc
lods
into
shrl
xor
and
aam
ret
sub
xchg
push
and
adc
or
test
out
into
xchg
cmp
add
into
jecxz
decb
add
data16
rcrb
mov
popf
js
lret
movsl
cmp
cmpsb
adc
pushf
cmpsb
in
adc
sub
leave
mov
rorb
push
in
add
sub
add
loope
imul
jmp
add
or
or
adc
xchg
push
ja
jae
pusha
cmpsb
xor
sub
mov
mov
pusha
push
lods
cmp
jge
sbb
push
mov
test
add
or
cltd
jne
push
mov
mov
add
jge
shlb
jb
lret
inc
hlt
pop
ds
xor
sbb
and
sbb
sahf
outsb
sub
lods
dec
addb
mov
xlat
sahf
roll
and
shll
pusha
add
push
jge
leave
and
sub
neg
testb
js
xor
aaa
add
dec
sub
lcall
push
push
ds
push
add
bound
dec
mov
xchg
mov
jge
xchg
mov
mov
pop
arpl
adc
out
out
dec
add
dec
arpl
add
push
pop
inc
xlat
lret
xor
inc
ss
push
adc
cltd
xor
pop
mov
aaa
jmp
sbb
mov
mov
or
mov
jecxz
insb
insb
xor
adc
xor
repz
test
xor
test
loope
adc
cmp
nop
pop
ret
sub
in
punpcklbw
jl
inc
fcomps
pop
dec
rolb
and
push
push
pop
mov
jecxz
mov
lahf
ret
fildl
push
repnz
dec
rorl
fs
jecxz
sub
xor
test
cmp
movb
jecxz
mov
mov
imul
or
jmp
adc
in
fcomps
aaa
push
enter
cmp
dec
outsl
mov
aam
sbb
adc
jge
xor
add
jg
addr16
push
lods
add
mov
mov
mov
cmp
sahf
sub
cmpsl
lret
mov
in
lea
mov
inc
dec
pop
ja
imul
repnz
lods
shrb
addr16
int
and
cmpsl
xor
xor
cmp
mov
popf
pop
pop
ds
sub
xlat
repz
ret
cmp
mov
push
fcoms
loopne
mov
sub
ljmp
mov
rclb
popf
add
jne
dec
mov
pop
pop
jg
icebp
mov
cwtl
movsl
cmp
sbb
jns
push
sahf
fcoms
mov
mov
adc
or
out
cmp
pop
pop
xor
mov
mov
dec
jg
enter
jmp
mov
dec
sbb
sbb
add
push
cmpsb
mov
xchg
cli
adcl
add
in
jno
mov
jecxz
mov
jnp
out
scas
std
repnz
xchg
adc
in
cs
jae
xchg
mov
dec
inc
sub
adc
jns
shll
pop
in
mov
add
dec
jns
movlps
lcall
test
outsl
mov
rcrb
ss
rcll
inc
int3
pushf
ret
or
mov
xchg
in
loop
repnz
mov
leave
adc
repz
xchg
mov
and
testl
xor
loop
push
jg
sub
sub
in
ret
add
mov
lahf
cmp
sbb
mov
stc
jo
mov
pop
pop
inc
pop
dec
mov
popa
pop
das
inc
xor
cs
lea
out
pop
mov
jle
mov
negb
imul
fldenv
pop
inc
sub
pop
mov
clc
ret
push
fcomp
xor
adc
popa
loopne
inc
aaa
add
dec
add
jb
idiv
popf
ret
negb
int3
mov
cmpsl
xor
cmc
popa
sbb
jns
int
adcl
mov
mov
cmpsb
push
movd
hlt
sbb
mov
dec
cmp
or
xor
pop
popf
cltd
mov
loop
daa
cli
or
inc
stc
out
xchg
and
movsb
insl
xchg
sbb
or
add
mov
xor
sbb
sub
in
aaa
push
repnz
hlt
cs
sub
out
in
ja
scas
fdivl
jno
mov
stc
inc
jmp
out
inc
xchg
shlb
sarl
or
test
inc
out
adcl
outsl
dec
or
adc
xchg
push
push
iret
xor
fnsave
add
fldcw
stos
add
in
jge
imulb
jnp
add
pop
jmp
push
sbb
lret
dec
jbe
out
sbb
push
shl
cmp
and
aas
pop
imul
mov
mov
popl
rclb
pop
jne
sti
cs
mov
test
ljmp
psubq
sub
mov
pop
int3
out
divb
pop
mov
mov
xchg
adc
mov
add
repnz
sbb
imul
insl
data16
adc
inc
insb
xchg
mov
icebp
out
setnp
adc
arpl
cwtl
popf
in
and
pop
test
pop
cmp
push
iret
int3
cmp
and
in
cmp
push
faddp
ret
je
lahf
pop
lahf
and
and
add
sub
push
lahf
cmp
jnp
jle
imul
cmpsb
xchg
and
inc
cmp
pop
fs
adc
or
cmc
sbb
ja
int
pop
stos
jmp
dec
sbb
push
cmp
mov
add
lret
cmp
push
fwait
dec
mov
pop
mov
test
out
mov
sbbl
and
and
push
pushf
xchg
out
sbb
and
xor
mov
cmp
cmpl
sub
out
jno
dec
xor
dec
lcall
nop
ja
fidivs
push
shll
sti
dec
mov
jo
push
dec
ljmp
pop
push
pushf
sbb
hlt
movsl
testl
shr
cs
jb
and
jmp
call
lds
shl
mov
and
mul
aaa
pop
insb
push
cwtl
cmpsb
mov
adc
push
rcll
js
imul
hlt
push
add
mov
dec
mov
out
xchg
in
xor
lahf
pop
fsts
mov
xchg
add
inc
push
mov
jp
aaa
sarb
or
xor
jne
loopne
xor
inc
xor
mov
mov
add
push
mov
xchg
insb
push
pop
mov
rol
mov
jecxz
inc
imul
xlat
outsl
push
subl
and
jle
cmp
cmpsb
sub
rclb
dec
clc
stos
mov
shlb
ss
pop
ss
xor
and
mov
shrl
test
xchg
shrb
sub
mov
xor
cs
loop
das
jo
push
push
fwait
sbbb
iret
xor
cmpsl
cmpsl
mov
add
nop
mov
push
nop
xorl
cmp
dec
xchg
lahf
push
pop
add
xchg
jbe
inc
das
in
push
mov
xor
cmp
stos
enter
inc
jmp
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
or
mov
decb
ja
pop
sbbb
cmp
ret
mov
scas
fstl
xchg
mov
and
inc
testl
addr16
inc
lcall
xchg
leave
cmpsb
lock
sub
xorl
popa
xchg
ds
movl
sbb
clc
lcall
sub
dec
mov
fs
aam
cmp
bnd
mov
jp
orl
jbe
arpl
jmp
dec
loopne
sbbl
mov
aas
and
psrad
insl
push
in
in
xor
add
test
lock
shlb
sub
in
jno
jecxz
shrl
lods
jno
push
push
mov
cmpsb
repnz
fsubrs
or
add
inc
mov
dec
adc
hlt
and
inc
cmp
pop
sub
push
stc
mul
dec
sarl
mov
fdivrs
mov
aad
lcall
leave
add
lahf
mov
arpl
sbb
sbb
bound
mov
adc
lahf
out
xchg
ret
mov
jno
shl
nop
mov
pop
popa
mov
hlt
out
mov
sbb
mov
mov
mov
mov
sbb
add
mov
mov
pop
or
data16
or
pop
mov
sbb
daa
push
rep
lea
nop
inc
in
stos
outsb
lret
push
pop
arpl
push
cmp
adc
mov
adc
dec
mov
lock
jne
adc
or
inc
pop
inc
les
cmp
subb
mov
jbe
ficoml
mov
lods
mov
add
fists
cli
dec
in
mov
pop
scas
sub
push
mov
mov
cmpsb
or
jmp
mov
xchg
or
cmpsb
out
mov
cmpsl
rcrb
lret
sti
in
mov
cmp
je
push
enter
jecxz
repz
imul
push
and
push
decl
pop
mov
jne
and
pop
leave
sbb
clc
or
mov
dec
cltd
jne
pop
add
dec
aad
enter
add
fs
mov
nop
jmp
les
push
sbb
adc
daa
icebp
mov
mov
hlt
mov
aaa
aad
insb
xchg
jmp
mov
push
bnd
cmp
jle
mov
xchg
ret
in
into
cmp
inc
xor
rolb
xchg
orl
ficoms
enter
aas
jge
mov
mov
out
std
je
mov
push
leave
test
popf
or
cmp
pop
outsb
fwait
add
cld
push
xchg
push
dec
lods
dec
icebp
movsl
dec
aaa
push
jnp
jl
sub
sub
mov
cli
loopne
sahf
ds
push
sub
adc
lods
in
sub
xor
cwtl
cmp
call
repz
dec
ds
pop
mov
fs
mov
lret
or
mov
add
mov
add
enter
into
shl
popa
pop
sbb
push
roll
icebp
mov
xor
ja
xchg
cmp
cs
or
add
fcomps
fimuls
iret
push
inc
movsl
fwait
mov
and
jo
mov
in
je
rcll
sub
vpsubw
stc
jmp
movsl
add
mov
dec
xchg
ja
cmp
jmp
add
mov
ret
mov
pop
xchg
rolb
js
sbb
push
jnp
mov
sub
or
mov
sbb
inc
dec
sub
decl
inc
lret
mov
rorl
dec
sbb
insl
ljmp
mov
sbb
js
addl
jmp
aas
xchg
loop
inc
jne
fcoms
mov
inc
lods
ret
inc
addr16
mov
mull
in
daa
test
fstps
out
bound
xchg
scas
jl
mov
dec
ljmp
cmp
fldenv
in
bound
iret
bnd
test
push
mov
or
les
mov
minps
loopne
xchg
cmp
mov
nop
out
lods
mov
andl
ja
mov
adc
dec
mov
adc
out
or
mov
rcr
shrl
cld
mov
and
jns
sub
fs
or
sub
pop
jno
lods
out
inc
push
sahf
sub
mov
jne
and
add
jae
aas
lods
test
sbb
nop
nop
stos
sbb
filds
mov
and
int
jo
bound
in
jb
and
jge
test
sbb
lea
inc
inc
data16
jae
xor
push
into
dec
inc
xchg
adc
xor
gs
sub
hlt
aaa
push
enter
lret
mov
dec
subb
push
mov
call
adc
and
stos
mov
and
out
jmp
sub
cwtl
sub
dec
sar
push
xchg
sbb
je
adc
cmpsl
mov
push
or
sbb
fildl
xor
adc
mov
insb
lods
mov
jno
inc
out
test
adc
cmp
push
push
test
ljmp
inc
test
frstor
sub
jmp
xor
mov
sbb
mov
int3
lods
in
jnp
sbb
aad
clc
mov
dec
jb
and
jbe
mov
jo
cmc
push
add
mov
xchg
push
jno
shrl
and
and
pop
in
adc
ficoms
flds
mov
test
and
cmp
bound
nop
cli
mov
fwait
insl
or
test
in
add
mov
sub
dec
jae
lret
inc
cmp
ret
setno
dec
mov
es
in
add
pop
scas
dec
and
mov
sub
ret
mov
roll
fsubrs
jecxz
or
or
cmp
inc
push
push
xor
pop
stos
scas
or
daa
mov
scas
mov
sbb
cli
push
jp
xor
lahf
ja
lock
mov
pop
gs
mov
test
xor
fcmovne
jne
or
dec
sahf
clc
mov
arpl
mov
push
jp
push
xchg
pop
mov
mov
dec
sbb
imul
stos
fidivrs
push
lret
addr16
out
jmp
xchg
push
lea
mov
inc
lds
negl
cs
sub
movzwl
int
or
sbb
mov
in
into
js
lock
cld
cs
jg
cli
mov
xchg
push
and
imul
in
pop
jmp
stc
test
iret
repz
in
mov
fcoml
or
repz
incl
cli
pop
add
jecxz
xlat
lahf
sub
and
cmp
repz
jbe
pop
je
sbb
stos
arpl
push
cmp
dec
jge
xor
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
dec
mov
add
aas
pop
and
loope
add
es
out
mov
jle
ljmp
sub
mov
mov
mov
jne
lret
sahf
inc
ret
push
mov
lods
out
pop
jnp
popa
xor
inc
fmull
stc
adc
jns,pn
psllw
cld
or
fs
jg
shrb
jecxz
call
imul
mov
jns
cmpb
sbb
and
cli
inc
loope
push
adc
incb
std
xor
xchg
xor
xchg
sbb
sbb
iret
push
dec
jge
fs
jno
pop
subb
pop
cli
mov
or
faddl
cltd
inc
mov
lea
mov
icebp
dec
scas
pop
je
fistpll
bound
inc
pop
ret
adc
call
adc
xor
enter
inc
lods
xor
hlt
fs
aam
stos
fidivl
insb
lcall
test
repz
movsl
cmp
pop
pop
push
pop
call
ljmp
xor
push
icebp
shrl
inc
in
jb
mov
dec
lea
outsb
add
jne
lcall
jecxz
into
cmp
adc
shll
div
pop
adc
mov
dec
in
in
sti
cmc
fiaddl
rcr
inc
cmp
xchg
fildl
call
out
dec
jb
sub
and
sarb
roll
idivb
dec
jb
adc
sbb
popf
int
sub
push
dec
cmp
pop
int
iret
push
push
jecxz
jns
test
dec
sbb
xchg
cmp
push
xor
sub
sub
push
repz
stos
sbb
add
mov
popa
imul
stos
push
mov
push
pop
inc
mov
aam
lcall
sbb
lret
jae
das
shr
fstps
jmp
out
repnz
loop
xchg
or
and
pop
and
in
and
scas
and
jo
mov
mov
or
shlb
mov
sub
or
push
movsb
pop
mov
push
out
divb
mov
in
jg
dec
and
and
xor
hlt
lcall
sahf
mov
adc
scas
xor
dec
xor
or
mov
push
adc
into
dec
pop
std
repz
xor
jns
loope
clc
int3
aam
insb
outsl
int3
sub
insb
cs
rorl
and
mov
cs
jge
gs
xchg
jle
and
ljmp
pop
cmp
int3
mov
fldt
ret
cmp
mov
hlt
mov
out
xlat
pop
push
ror
fwait
pop
jge
fsubrs
fnsave
das
loop
mov
fs
stos
sub
cmpsl
inc
jns
pop
xor
pop
stc
xchg
xor
push
bound
xor
push
jmp
out
sbb
mov
mov
adc
ret
jb
dec
jl
push
fdivl
add
or
xchg
scas
sub
ja
inc
mov
gs
and
inc
cltd
push
add
mov
sub
xlat
sub
mov
mov
add
cli
les
sbb
in
sbb
cmpsb
shll
cmp
push
imul
jmp
inc
push
mov
mov
in
inc
xchg
jg
or
cmp
xor
lds
imul
into
std
mov
ret
mov
out
xor
insl
adc
leave
or
arpl
fildll
das
mov
jb
scas
outsb
adc
jnp
or
dec
adc
adc
jg
out
vmread
fisubrl
pusha
adc
js
cmc
fsubrl
lahf
lea
pop
mov
xor
loop
iret
xor
addr16
mov
fdivrl
jno
testl
ror
jae
mov
stc
and
scas
pop
sbb
adc
fbstp
mov
jae
push
sbb
les
jns
fs
mov
jnp
jnp
dec
and
push
jae
jno
jo
inc
xorb
push
fmul
imul
test
add
mov
xor
and
sarl
inc
bound
rol
dec
xchg
pop
mov
cmp
clc
jb
or
pop
addr16
lods
cmp
jle
xor
es
pop
and
ret
mov
and
ds
lret
inc
xchg
cmpsb
bound
shl
aad
lcall
pop
mov
dec
pop
xor
out
xorps
nop
pushf
mov
push
mov
in
int
test
push
mov
jno
cld
sarl
imul
test
out
popf
cmp
pop
data16
sbb
hlt
pop
xchg
jle
pop
sahf
mov
dec
xor
pop
jmp
adc
iret
push
enter
clc
ret
arpl
lret
cli
push
push
pop
xorl
imul
les
mov
movsl
sub
xchg
lahf
or
xchg
nop
and
rol
ret
xor
or
insl
movsb
andb
pusha
mov
dec
test
cmp
xor
into
ficomps
dec
push
and
ja
push
adc
out
dec
jp
aam
add
enter
mov
lcall
lods
js
cltd
jbe
inc
dec
pop
insl
sub
pop
sub
jge
std
sti
mov
jo
std
add
das
inc
popf
dec
es
mov
scas
xor
mov
jp
mov
and
mov
loope
je
leave
adc
jg
fs
out
hlt
sahf
push
shl
jns
rcll
mov
adc
loope
add
push
dec
rep
mov
jo
ret
pop
mov
mov
cmp
ds
push
fdivs
call
cmpl
or
mov
insb
arpl
xor
fimuls
ljmp
cli
stc
arpl
ja
jnp
enter
ucomiss
sub
shll
jae
adc
cmpl
inc
int3
pop
repnz
cmpsl
sub
push
xchg
xlat
mov
fsts
dec
push
stos
xor
pop
cmp
and
xor
mov
inc
jb
sub
sub
jno
lcall
jp
xchg
lahf
pop
add
and
cmp
js
out
jecxz
cmc
out
adc
jle
subl
mov
xchg
into
je
adc
adcb
bound
push
fcoms
mov
dec
jmp
xchg
xlat
fstp
leave
push
fwait
jns
or
sbb
push
ret
sbb
xor
insl
pop
jo
jecxz
jb
dec
sub
aaa
enter
xchg
sub
mov
popa
mov
jle
outsb
xchg
popl
pop
xchg
sub
ficoms
push
mov
out
or
popf
push
cmp
sub
mulb
or
dec
mov
pop
int3
inc
inc
jle
sbb
inc
hlt
movl
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
loop
pop
push
mov
mov
cmp
adc
mov
push
sub
rolb
dec
dec
or
cmp
adc
sub
cmp
xchg
stos
ds
pop
mov
test
push
fdivrp
inc
mov
push
add
out
xchg
cltd
push
outsb
cmp
call
adc
pop
das
add
scas
scas
ficoms
jl
mov
push
ficoml
push
fwait
jae
daa
cmp
fwait
cmpb
cmpsb
int3
in
aas
into
or
scas
ds
cmpsl
fcoms
lods
mov
mov
or
mov
xchg
xor
sbb
in
pop
outsb
fisubrl
in
enter
rolb
adc
xor
xchg
jg
mov
in
and
or
cmp
stos
std
call
pop
jl
leave
ss
sub
into
fildl
push
jge
loopne
and
shrl
inc
stos
in
jmp
mov
mov
fldcw
and
out
sbb
mov
int3
aam
adc
sbb
sbb
mov
push
xchg
iret
xchg
into
lds
xor
push
xchg
vunpcklps
subb
fstl
scas
fildl
aam
inc
shlb
js
xor
leave
push
cmpsl
xchg
pop
mov
inc
fs
xor
jb
push
out
push
test
mov
cmc
daa
push
sub
jno
fcomps
leave
imul
add
and
movsl
lods
into
mov
addb
sub
xchg
rcl
add
test
pop
jno
sbb
cli
sti
xor
pop
inc
or
inc
jno
mov
add
jne
out
and
sbb
xchg
sub
movsl
xor
xchg
mov
fwait
push
xchg
push
mov
cmp
pop
fidivs
pop
lret
pop
xchg
jno
popf
aaa
fadds
sbb
ret
test
pop
cli
sahf
imul
sub
sub
add
push
xor
pop
call
stos
xchg
or
jae
sbb
jnp
add
jecxz
je
push
lock
into
and
cmp
int
pop
adc
ficoml
mov
mov
and
or
xchg
fstl
movzbl
xlat
movsb
xchg
push
out
add
xchg
movsl
push
jns
and
sbb
push
mov
fs
cmpsb
inc
orb
aas
dec
fucomip
repz
sbb
inc
inc
in
xor
push
pop
pop
mov
jo
jns
sti
dec
mov
add
lea
xor
jmp
fimuls
jb
cmp
dec
sbb
sbb
ret
stos
adc
xor
in
mov
cmp
leave
dec
mov
movsl
aaa
les
repz
mov
pop
push
jb
mov
mov
mov
push
aad
imul
fimull
adc
pop
sub
fnstcw
mov
sbb
jae
or
cld
mov
lods
cmp
pushf
insb
lods
insb
loope
jmp
aas
add
jno
sub
repnz
sbb
cmpb
lods
adc
sbb
pop
lods
xor
fdivrs
add
xchg
inc
jg
pop
mov
mov
repnz
push
push
lret
jnp
pusha
fsubp
push
cld
push
sbb
or
gs
out
jns
cmc
pop
test
sbbb
inc
fstps
pusha
and
stos
enter
adc
repz
mov
not
sub
ja
clc
dec
mov
stos
cli
inc
bound
xor
push
mov
out
mov
call
pop
out
cltd
mov
mov
out
repz
xchg
cs
add
cltd
lds
test
and
pop
sub
mov
xor
pop
mov
rcl
mov
mov
mov
jmp
mov
shlb
mov
enter
inc
lock
aad
inc
push
jmp
ss
les
and
sub
mov
loopne
shlb
fwait
add
jge
int3
push
pop
lds
sub
mov
roll
xchg
adc
fwait
xor
mov
mov
xchg
push
stos
adc
outsb
lds
scas
insl
imul
pop
es
cmp
fisubs
add
sub
out
cli
ret
dec
test
adc
ljmp
and
jne
cmc
sub
cwtl
push
jecxz
inc
push
movsb
out
jbe
add
fidivl
into
xor
inc
sbb
lret
mov
xor
jecxz
mov
pop
xchg
scas
cwtl
mov
push
sub
xchg
cltd
in
rol
cmp
or
push
mov
mov
jnp
jbe
hlt
fcmovb
push
sbb
aas
movsb
mov
pop
test
mov
pop
jnp
jp
fimull
das
rcr
sbb
jle
adc
cmp
add
push
mov
loop
add
loope
sbb
jo
ror
cmp
or
xchg
loop
mov
js
pushf
repz
sahf
pushf
pop
push
push
es
lods
arpl
jl
rcrb
in
jmp
and
adc
mov
mull
and
dec
arpl
pop
adc
and
mov
xorl
sub
es
roll
and
or
fdivp
jo
mov
pop
fsubrs
enter
daa
sub
pop
mov
mov
aas
test
leave
xor
push
stos
movsl
mov
jno
push
mov
pop
and
ror
jmp
rclb
out
fdiv
cs
mov
test
xor
mov
rorl
adc
pop
add
pop
stos
cmc
push
and
xchg
pop
into
das
cmp
mov
sbb
repz
or
push
frstor
sahf
jae
dec
cmpsb
push
insl
test
sahf
sub
rcll
dec
or
fidivs
nop
rcrl
stc
or
call
daa
outsl
dec
or
dec
shrl
xor
call
jb
jne
clc
ret
lods
and
lret
xchg
test
jns
lcall
test
adc
inc
mov
xor
gs
test
push
pop
sbb
xchg
ret
sbbb
in
rorl
push
mov
adc
mov
std
or
jmp
in
jno
andb
arpl
mov
hlt
jle
jp
cli
pop
jns
scas
sarl
lea
roll
or
pop
jl
adc
pop
leave
je
add
mov
jle
xchg
jecxz
sub
sub
into
and
aaa
cmp
loope
lods
sub
cmpsb
lahf
and
sub
lods
sub
add
xor
xor
nop
movsb
mov
pop
popa
es
test
mov
je
jg
pop
imulb
mov
rorb
mov
inc
rorb
enter
pop
add
add
dec
push
adc
call
push
repz
scas
lret
pi2fd
sub
mov
fyl2x
stc
test
mov
movsb
xchg
mov
in
xor
cmp
xor
test
outsl
mov
inc
enter
shlb
jge
stc
pop
cmpsl
sub
rolb
inc
inc
jno
mov
xchg
rorb
mov
rorl
jle
and
inc
jne
fisubl
sti
dec
mov
mov
das
fildl
sbb
dec
jl
fildl
push
icebp
pop
pusha
fnstenv
and
and
in
fisubl
cmc
scas
imul
js
dec
push
das
int3
jns
mov
cmp
or
or
push
negb
mov
push
sbb
add
xor
adc
in
add
arpl
mov
scas
pop
data16
jne
jnp
adc
icebp
ja
mov
test
xchg
test
loop
cltd
jne
out
and
cmc
aad
mov
pop
pop
hlt
scas
daa
mov
bound
repnz
pop
mov
das
push
rolb
jne
xchg
dec
out
les
cmp
and
outsb
inc
fwait
dec
out
adc
add
nop
pop
ss
xor
mov
pusha
mov
inc
aas
push
fsts
cmpsb
aas
ret
sti
ljmp
mov
lahf
dec
out
test
repz
and
rcr
imul
mov
jae
inc
cmp
std
or
lods
test
ret
das
popf
shlb
xor
cs
and
add
ds
xchg
inc
imul
fcomip
jecxz
in
cmpsl
es
sbb
fs
stos
or
adc
add
jbe
scas
test
mov
jb
das
repz
fsubrs
add
mov
call
and
or
sbb
ljmp
lds
jecxz
pop
fcoml
lods
ret
ret
sti
xlat
push
icebp
lret
xchg
fnstsw
and
jno
sahf
out
jl
or
pop
jge
xor
sub
decb
or
inc
repnz
pop
enter
dec
adc
stos
repnz
mov
daa
xchg
sahf
push
stos
add
add
fnstsw
dec
cmp
loope
sahf
in
shrl
pop
std
xchg
test
sub
shl
daa
push
scas
lret
jmp
dec
and
addl
or
xor
ja
jns
cmpsl
fistpl
add
push
sbb
rcrb
ret
into
cli
pusha
mov
test
push
dec
dec
pushf
inc
jbe
sbb
std
mov
ret
jp
pusha
xchg
data16
mov
out
stos
cmpl
and
divb
mov
and
fistps
not
scas
and
fs
push
in
pop
pop
mov
push
test
mov
jns
gs
out
in
ds
inc
mov
pop
mov
xor
outsl
adc
fisubrs
test
mov
clc
dec
cmp
cltd
int
aad
andb
fwait
jb
fsubr
sarb
or
and
xor
lret
sub
jecxz
mov
aas
lret
pop
scas
adc
xchg
push
addb
cmp
sub
adc
fsub
test
or
mov
fists
repz
jl
add
inc
cmp
movsb
fiadds
lods
mov
push
xchg
push
sbb
pop
inc
or
inc
fisttpll
push
inc
adc
sub
movsb
and
inc
out
mov
inc
ret
cmpsl
or
imul
sahf
adc
int
xchg
popf
loope
in
test
and
sbb
mov
orl
aaa
mov
sti
mov
or
xor
je
xor
mov
inc
push
arpl
xlat
js
jecxz
pop
pop
xlat
idivl
imul
add
add
fisttps
cmp
push
add
insb
pop
cmp
inc
rcl
fistps
xchg
and
jo
push
xchg
adc
fisubrs
mov
inc
arpl
inc
jle
pop
cmpl
cmp
je
and
sahf
xor
and
ds
mov
mov
mov
push
push
cmc
out
outsb
fsubrs
inc
insb
outsb
jno
ss
jl
dec
jl
sti
add
inc
mov
cli
mov
frstor
bound
outsb
iret
and
push
andb
or
pop
mov
bound
repnz
mov
out
lods
fldcw
push
in
xchg
cmp
add
fs
pop
sub
fisubl
stos
popf
inc
cmp
fimuls
push
std
nop
xchg
fadd
nop
xor
daa
hlt
mov
sub
insl
popa
jge
cmpsl
loope
pop
scas
inc
je
mov
rol
cld
cmc
scas
cmp
pop
adc
fnsave
daa
jge
xor
jae
scas
lahf
push
xchg
mov
cmpsl
aam
xor
dec
cltd
jno
out
push
sbb
or
icebp
mov
arpl
test
scas
aam
fucomp
xchg
test
lods
cmp
mov
sub
jle
daa
out
pop
cltd
mov
mov
nop
xchg
jg
aam
cwtl
sahf
jmp
or
pop
cmp
lret
or
and
sub
jne
xchg
or
loopne
or
jns
shr
sbb
lods
jge
mov
jp
add
popa
push
xchg
sub
imul
jle
inc
mov
mov
inc
jle
sbb
mov
mov
into
mov
iret
ret
loope
lea
add
mov
jl
or
dec
pop
xchg
filds
xlat
xor
insl
fcmove
push
dec
mov
mov
pop
int3
adc
xchg
dec
loope
cmpsb
dec
stc
loopne
xlat
sub
shll
mov
mov
inc
pop
pop
pop
bound
xchg
ljmp
add
push
mov
out
mov
and
inc
hlt
hlt
mov
xchg
xor
scas
shl
pop
push
inc
pop
lds
fistps
sbb
and
push
push
imul
and
shrb
mov
in
outsl
cmpsl
stos
stos
imull
dec
cmp
movsb
hlt
cmpsb
xor
enter
fiadds
dec
xchg
bound
push
pop
push
imul
jae
mov
pushf
adc
test
sbb
sub
ss
imul
or
int
xorl
stc
inc
ljmp
testb
sub
dec
xchg
ficoml
fadd
sahf
gs
lds
and
dec
mov
adc
ret
inc
in
push
mov
mov
mov
mov
jg
iret
mov
dec
jne
data16
or
in
inc
sbb
sub
and
sub
add
rolb
leave
sbb
cmp
negl
jae
out
cli
fistpll
dec
jg
inc
xor
add
shrb
lds
xchg
out
adc
mov
pushf
enter
jmp
clc
add
in
int3
ljmp
ss
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
sub
mov
comiss
pusha
and
imul
inc
es
sub
cmpsb
jg
mov
mov
push
ja
push
jge
lock
mov
mov
cmp
scas
ja
sub
shll
dec
inc
call
inc
xchg
ret
int
test
dec
sub
xchg
out
sub
jge
mov
push
mov
ret
loopne
and
push
stos
cmp
xchg
push
and
cli
mov
push
ss
jo
sbb
nop
push
jmp
xor
insl
and
xchg
fistps
xor
lcall
std
pop
rcll
rclb
scas
jo
in
fmuls
push
cmp
mov
lret
or
ret
in
mov
jmp
mov
xchg
inc
inc
pop
movsb
jmp
cmp
dec
test
fisubrs
or
sub
xchg
mov
mov
pop
xchg
pop
mov
dec
push
sar
cwtl
insb
test
dec
sub
or
aad
rcrl
jecxz
mov
cmpsb
or
in
xchg
in
and
rcl
out
lahf
adc
xchg
pop
les
mov
outsl
fcomi
cmp
imul
shrb
sub
adc
push
mov
jno
jp
shll
jbe
sub
jp
mov
xchg
std
mov
sbb
inc
cmp
inc
mov
push
and
loop
fdiv
sub
mov
adc
daa
js
ss
mov
movsl
adc
push
pop
sahf
pop
mov
mov
xchg
les
add
icebp
in
fistpl
arpl
xchg
and
mov
shr
xor
xor
add
rcll
sbb
add
add
outsb
lods
xor
mov
lret
fdivs
pop
push
mov
cs
jno
mov
enter
mov
lcall
and
arpl
pop
jae
sub
pop
and
xchg
int
and
adc
stos
daa
movsb
inc
fdivr
repz
sub
push
std
jp
sub
xor
pop
into
jg
mov
int
out
xorb
xchg
xlat
cmp
ret
xor
and
add
and
data16
insl
movsb
mov
js
daa
or
add
mov
xchg
add
xchg
cs
sbb
jmp
ljmp
stos
pop
in
out
push
sub
push
adc
xlat
loop,pn
sbb
inc
or
incb
divl
pop
fidivl
out
inc
js
push
jp
test
mov
jno,pn
stos
push
sub
fldl
jne
cmp
outsl
jg
inc
imul
flds
iret
out
popl
mov
call
into
lahf
sub
xchg
int
cs
jb
into
dec
inc
adc
pop
xchg
adc
add
pop
cmc
pop
jns
testb
and
pop
mov
jb
out
stos
mov
mov
sahf
pop
adc
enter
dec
lret
test
push
scas
icebp
push
inc
push
add
lahf
pop
sbb
jg
sub
subl
mov
movsl
fbstp
push
and
sbb
fadds
shll
pop
xchg
in
and
mov
stos
pop
roll
mov
xchg
out
adcl
test
jmp
jb
in
push
es
sbb
add
mov
pop
sbb
sbb
filds
push
xor
out
mov
aam
jne
push
dec
cli
lds
mov
cwtl
push
shrb
add
add
addl
int3
mov
das
adc
ret
pop
xchg
xor
jns
lock
ss
dec
mov
mov
or
or
lret
mov
push
fs
fnsave
mov
jae
daa
ret
lret
push
cltd
push
push
mov
mov
mov
in
push
xchg
cmp
clc
fcmovb
and
in
sbb
aas
insl
adc
lret
sub
push
fnstsw
pop
inc
inc
fwait
arpl
add
jno
int
inc
push
push
scas
loope
les
or
les
pop
mov
mov
cmp
pop
dec
outsl
fdivrl
loope
stos
loop
daa
sbb
push
gs
idivb
push
fimuls
dec
mov
mov
jecxz
adc
jl
loope
js
push
mov
add
fists
fcmovnb
stos
mov
iret
sahf
lods
std
push
sub
js
adc
ja
inc
or
mov
pusha
jcxz
std
mov
mov
loop
fstl
in
js
pusha
push
xchg
or
std
mov
push
pusha
push
adc
aaa
popa
mov
inc
fs
mov
imul
mov
sbb
push
cmpsl
insl
mov
enter
clc
mov
out
xchg
outsb
in
or
push
cwtl
push
repnz
hlt
dec
ret
dec
dec
lock
repz
lods
out
scas
fisttpl
or
ret
dec
sbb
adc
mov
mov
leave
dec
xchg
repz
pop
jle
fxch
add
jo
mov
xchg
call
call
cmp
xchg
adc
iret
lds
pop
insb
mov
push
jo
inc
sub
and
loope
lcall
mov
cmpsb
sbb
cmp
std
jno
cmp
mov
mov
mov
aaa
pop
mov
popf
loopne
or
sbbb
cwtl
and
cmpsl
mov
out
jo
push
mov
aas
push
and
mov
jae
shrb
cltd
push
inc
jbe
push
xchg
sbb
and
push
jnp
dec
and
pusha
push
sbb
cmp
lcall
and
pop
in
jmp
or
cli
imulb
mov
das
sbb
push
in
cmc
scas
orl
inc
lods
arpl
inc
test
test
push
fcoms
mov
addl
adc
xchg
stos
jge
popa
in
jecxz
or
xchg
pop
shlb
in
xchg
jp
sbb
scas
scas
in
popf
or
or
lret
adc
enter
repz
mov
dec
add
push
aad
or
cs
xor
xchg
aam
xlat
enter
call
mov
imul
cmp
pop
repnz
imul
inc
push
xchg
sti
clc
jbe
mov
cli
mov
mov
xor
mov
inc
bound
cli
test
mov
adc
push
imull
inc
outsl
fimuls
int3
test
cmc
cmpsb
xor
or
push
popa
mov
shl
aam
inc
xor
xor
aas
push
daa
stos
add
or
xchg
mov
fimuls
out
les
aas
ja
icebp
pop
imul
aad
inc
scas
sbb
arpl
cmp
mov
add
jle
inc
sbb
push
cmp
mov
adc
movsb
call
xlat
pop
xlat
das
out
mov
subl
cmc
xor
lcall
shl
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
jne
mov
xchg
mov
sub
pop
pop
or
jp
adc
xchg
mov
sub
add
sub
je
scas
into
xor
data16
jns
out
mov
mov
arpl
mov
mov
fsubr
fsubrl
pop
mov
imul
bound
iret
and
add
popa
push
mov
sub
dec
dec
or
testl
lock
inc
dec
pop
mov
push
inc
fimuls
je
xchg
mov
cli
test
mov
pop
cltd
int3
dec
xchg
xchg
aas
add
mov
movsb
into
sub
pop
push
xor
lahf
fs
out
fwait
dec
mov
mov
pop
mov
ljmp
pop
iret
lods
adc
mov
pop
jne
sub
fs
cmp
mov
loop
jge
sbb
push
mov
shlw
add
xchg
jg
out
pusha
mov
nop
mov
ret
dec
test
mov
int3
in
cmp
rolb
mov
inc
or
data16
adc
pop
shll
je
mov
shll
ret
sub
mov
in
push
arpl
lods
push
inc
cmp
imul
mov
lret
pop
mov
jecxz
jnp
push
mov
in
dec
mov
and
add
xor
shl
std
inc
mov
pop
or
popf
cs
lock
stos
push
dec
std
and
mov
mov
mov
pop
mov
push
dec
or
es
xor
sub
xchg
mov
jmp
mov
inc
out
mov
dec
mov
jl
clc
xor
cmp
aad
push
adc
cmp
test
mov
inc
out
mov
xor
mov
decb
jnp
lret
aas
xor
pusha
or
repz
arpl
shlb
js
dec
bound
in
xor
dec
ja
fsts
cs
add
mov
dec
fwait
xchg
scas
mov
mov
stc
ror
out
sti
subl
stos
arpl
out
hlt
aad
bound
sbb
or
xorb
xchg
mov
mov
jmp
and
out
addl
mov
xchg
inc
scas
xchg
adc
pushf
jmp
ret
sub
rorb
adcl
test
mov
addl
stos
inc
pop
cmp
push
in
popf
fsts
cmpsb
cmc
mov
out
sbb
dec
aad
popa
push
jmp
adc
rcl
dec
loopne
pop
mov
int
cli
loope
ds
jbe
dec
test
inc
icebp
ret
or
dec
js
notl
negb
testb
iret
sbb
lods
sub
xor
jge
aam
in
xorb
cli
lea
cmp
adc
add
nop
and
adc
push
sarl
mov
adc
movsbl
outsb
pop
mov
sub
pop
jl
add
mov
jge
mov
ss
ds
les
pop
movsb
dec
and
arpl
les
imull
inc
movsb
dec
and
xor
icebp
jmp
pop
adc
inc
xlat
and
mov
jo
jge
pop
jle
stc
jmp
xchg
cmp
xor
lds
bnd
cmp
adc
pop
lcall
movsb
repz
mov
dec
enter
ljmp
cli
movb
mov
xor
mov
push
sub
imul
fsubl
lcall
jge
add
out
xchg
push
jne
movsb
adc
add
cmpl
hlt
inc
fcomps
stos
push
shrb
xor
ret
rolb
cmp
sbb
pop
mov
ljmp
add
or
or
les
mulb
sub
jg
repz
dec
xor
mov
or
mov
or
or
and
je
popa
fists
movsb
jo
das
cs
gs
lcall
mov
and
pop
enter
repz
mov
es
mov
jge
lds
ja
mov
mov
mov
std
aaa
mov
or
cmp
adc
movsb
inc
pop
sahf
or
dec
pushf
pusha
repz
push
ret
mov
imul
int3
js
rcl
push
cmp
es
sbb
jne
out
dec
mov
stc
xor
sbb
mov
sbb
scas
jl
jl
ljmp
sti
add
inc
mov
push
or
aaa
and
cltd
dec
repnz
sahf
and
std
inc
inc
jne
add
vmovntps
sbb
push
add
cmp
scas
jle
push
push
sahf
adc
sti
mov
outsb
scas
cwtl
add
rcrb
mov
ds
dec
imul
dec
hlt
inc
mov
sbb
xchg
mov
jmp
addb
adc
js
ret
lcall
fisttps
inc
std
test
ret
in
jmp
inc
cmpsl
cmpsl
jge
es
gs
cld
outsb
out
lahf
es
cmpsb
pop
inc
cmp
mov
jp
scas
sbb
inc
sub
pop
mov
push
jbe
jmp
fidivrs
or
fs
fmuls
xchg
mov
lea
jmp
and
dec
sti
mov
mov
cs
xlat
inc
xchg
mov
push
push
js
int3
gs
jno
mov
repnz
lds
cli
cmp
bound
imul
jbe
xchg
enter
hlt
xor
and
push
mov
imul
pop
pop
loop
sub
mov
fsts
adc
jnp
lcall
test
pop
cmp
cmp
daa
adcb
jne
das
das
into
into
orl
pop
and
mov
dec
pop
push
lock
mov
enter
nop
les
subb
mov
mov
fnstenv
inc
ret
pushf
hlt
imul
sbb
cmp
inc
cli
mov
jno
arpl
in
loopne
jbe
stos
push
out
rcrl
jg
push
add
jp
xchg
dec
into
lods
dec
cmp
lock
dec
mov
adc
mov
adc
inc
jo
mov
dec
xor
adc
cld
and
sub
push
lods
push
insb
in
xchg
enter
aad
mov
stos
mov
xchg
or
in
lret
pusha
sti
stos
jbe
ret
mov
xchg
in
xor
mov
iret
fwait
xor
and
jnp
inc
jae
and
or
push
pusha
sbb
dec
pop
jne
xor
sub
mov
orb
pop
sub
mov
lahf
test
dec
lahf
xchg
jne
add
jno
scas
mov
out
sbb
aas
cmp
cmpsb
adc
xlat
sub
xchg
pop
repnz
xchg
andl
push
out
data16
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
sahf
leave
mov
aaa
mov
ja
jmp
bound
mov
mov
ds
test
mov
fwait
push
mov
push
mov
pop
sub
pop
inc
imul
push
insb
xor
outsl
out
push
push
in
nop
icebp
xchg
mov
or
cmpsl
std
out
cmpsb
ret
movsb
icebp
leave
lds
mov
or
sub
xor
and
mov
rorb
outsb
push
dec
inc
cmp
ret
pop
cmp
cmp
aam
test
jge
inc
loop
pop
fcmove
mov
mov
adc
lea
fsubr
ss
insl
push
sti
fldl
imul
push
jp
mov
aaa
mov
test
dec
sub
push
sysenter
aam
add
shl
inc
ret
outsl
mov
xchg
xchg
adc
mov
xor
repz
imul
cltd
les
hlt
stc
pusha
call
xchg
rclb
and
mov
jno
sbb
test
inc
addr16
rorl
addb
pop
fcmovne
and
mov
and
in
jno
aaa
lock
and
ret
or
jge
or
push
test
mov
fwait
in
fildll
dec
push
dec
cmp
cltd
adc
das
pop
into
loopne
test
sahf
repz
shlb
adc
jmp
push
dec
jmp
xor
aad
fstps
xchg
rorb
mov
imul
pop
and
sbb
xor
lea
hlt
fisttpll
mov
shrl
js
sub
stos
dec
shrl
scas
push
jb
sbb
test
adc
mov
out
mov
cltd
cmpsb
cmp
stos
fwait
sub
in
test
mov
cltd
pop
outsb
shl
jno
and
cmp
inc
xor
sbb
add
pop
or
lcall
in
xor
or
mov
xchg
cld
rclb
aad
divb
jl
mov
aas
mov
or
loop
lahf
mov
loopne
pusha
jns
outsl
js
sbb
in
pushf
push
dec
mov
ficomps
lods
insb
mov
data16
push
jge
cmp
shl
sub
fldt
xor
fadds
or
stos
sti
jmp
insb
ret
rclb
cli
inc
mov
xchg
or
popf
aam
and
or
jge
lods
ret
add
mov
stos
push
dec
jne
in
iret
iret
pop
pop
fldz
testl
xor
or
mov
in
and
test
aas
mov
outsl
addb
adc
or
adc
mov
shlb
xor
and
into
lret
repz
lret
adc
cmp
lret
sbb
mov
mov
insl
and
jmp
mov
ss
sti
jg,pt
and
outsb
xor
inc
sbb
stos
push
xchg
mov
insl
js
pop
mov
xchg
stos
int
push
mov
jbe
cltd
sbb
mov
xchg
scas
ror
cmc
mov
push
es
hlt
mov
sti
xchg
shll
fcomp
rcl
add
mov
jmp
inc
xorl
push
mov
jb
idivb
sarb
lea
fdivrl
cmp
scas
shll
test
cmpsb
push
test
loope
mov
stos
lods
in
xlat
dec
mov
mov
notl
repz
jg
into
pmovmskb
and
cmpsl
jmp
icebp
outsl
mov
pcmpeqb
push
jecxz
nop
mov
cli
jns
addr16
aad
repz
adc
bound
or
je
add
mov
push
pushl
loope
flds
test
push
cmp
mov
xchg
clc
sbb
aaa
mov
cmp
jl
mov
cmc
mov
sub
jmp
pop
gs
rcl
rcl
inc
in
movsl
das
imul
hlt
pop
cs
jns
sbb
out
call
cltd
sub
pop
cwtl
mov
pop
mov
mov
push
push
fs
xor
aaa
pop
cs
push
or
mull
mov
arpl
repz
push
je
test
jmp
aaa
or
cmpl
fildl
fst
mov
adc
cwtl
jbe
xor
and
add
adc
sub
add
imulb
mov
adc
movsb
ficomps
das
popf
add
push
mov
push
and
sbb
sarb
cmp
rol
mov
jno
leave
pop
mov
add
push
inc
dec
jne
mov
push
sbb
out
add
adc
mov
inc
jl
lea
sarl
sbb
cmc
and
bound
cwtl
fbld
adc
adc
or
mov
mov
lods
pop
mov
xchg
lea
inc
pop
push
xchg
mov
jno
lret
or
add
jg
outsl
filds
fstpl
je
and
imul
icebp
and
test
dec
ficoms
test
fisubrs
popf
and
es
imul
jo
xchg
mov
mull
and
pop
hlt
xchg
mov
in
cmc
push
mov
pop
aam
mov
xchg
add
es
mov
or
inc
adc
mov
sub
or
or
icebp
sub
pop
dec
mov
fldt
rorl
mov
rolb
mov
shlb
cwtl
insl
pop
fcoml
sub
pop
int3
fiadds
js
pop
sbb
dec
mov
push
pusha
stos
jae
mov
push
int3
int
push
fstpl
cmp
push
addb
or
in
pop
cmpsl
rorb
dec
gs
push
jg
jnp
loopne
push
mov
nop
insl
xchg
dec
ljmp
adc
xor
push
and
inc
insl
into
mov
movsb
out
test
jg
xchg
inc
push
popf
lret
addr16
cmp
movsb
fnstenv
rcrl
jne
test
cmpsl
xchg
shlb
int
xchg
out
jecxz
shlb
jne
jb
test
repnz
mov
idivl
scas
sub
movsb
dec
inc
cmc
vcmpsd
xchg
gs
in
lret
inc
push
sbb
sbb
hlt
dec
sarl
dec
xchg
mov
sahf
aad
pop
xchg
xor
scas
jp
jno
xchg
bound
int
sub
rcrb
jnp
pop
mov
cmp
lret
mov
cmp
lahf
shlb
xor
lea
mov
push
adc
lret
push
cmp
stc
popa
or
add
pushf
in
sbb
rcrb
cltd
les
enter
cmp
ret
push
push
enter
fidivrs
hlt
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
decb
ja
lock
pusha
or
arpl
sub
mov
fdivs
or
and
jnp
cld
pop
pop
cltd
out
lods
or
jno
sub
pushw
clc
aam
adc
dec
or
movsl
sub
push
adc
push
popa
push
call
add
mov
sbb
lret
insb
xchg
testl
test
add
ljmp
sbb
jno
repnz
sbb
imul
dec
mov
bound
div
js
ds
call
and
movsb
out
mov
mov
fcomp
shlb
aas
add
out
iret
into
ss
jecxz
lret
dec
dec
insl
mov
test
fldenv
dec
pop
mov
mov
notb
sbb
sbb
cwtl
cmpsb
scas
sub
pop
mov
cld
mov
js
aaa
mov
sub
sub
xor
out
sub
pusha
fwait
or
mov
into
lcall
test
inc
or
dec
mov
ja
and
int
push
aas
fisttps
and
or
xchg
incl
cli
bound
jbe
jl
fbstp
pop
gs
stos
inc
gs
inc
scas
pop
xor
cmp
push
vhaddpd
inc
scas
jae
shll
and
push
loope
mov
sub
lcall
cmc
das
imul
imul
sahf
mov
mov
xchg
pop
cmp
adc
fidivl
add
xor
mov
pushl
iret
push
or
rorb
adc
imul
nop
mov
out
dec
mov
jmp
test
sahf
popa
jb
jae
cmp
mov
sbb
shlb
call
sti
mov
cmp
pop
jp
push
xlat
jae
je
shll
sbb
mov
addr16
outsb
mov
fmull
int
mov
mov
dec
mov
mov
ss
adc
ret
ficompl
push
xchg
mov
sbb
outsl
sub
mov
dec
cmp
sbb
call
mov
sbbl
clc
mov
lods
mov
in
lock
cmp
sub
stos
xor
scas
insl
imulb
dec
enter
es
divb
or
ficompl
sti
push
hlt
add
ret
dec
push
sarl
add
test
sahf
clc
xchg
mov
add
bound
rcrl
es
inc
and
cmc
lret
sbb
xor
sahf
jmp
inc
cmp
shrb
sbb
aam
and
add
inc
mov
ds
mov
mov
int3
xor
or
movsl
pop
mov
jns
adc
adc
hlt
mov
loopne
fwait
shlb
lcall
insl
jmp
insb
sbb
movsb
pop
inc
pop
es
mov
dec
dec
inc
je
lahf
rorl
pop
xchg
dec
dec
jne
dec
lret
into
mov
shrb
iret
loopne
mov
movsl
ja
fadds
push
test
das
sub
js
cmp
stc
mov
outsl
cmc
add
mov
sbb
decl
xchg
hlt
inc
out
sub
imul
sti
jae
jle
xchg
inc
lods
push
bound
jb
and
in
mov
jl
rol
inc
test
cmpsb
mov
data16
movsl
fwait
mov
sub
sar
ljmp
inc
jp
sbb
xlat
jge
sti
ret
xchg
in
sahf
loop
loop
hlt
repz
push
xchg
push
pop
mov
xor
push
sub
dec
in
or
test
mov
into
mov
xor
mov
and
mov
popa
arpl
and
jecxz
ds
sub
dec
xchg
test
push
sbb
data16
shll
and
dec
popf
or
cmp
loope
dec
cmp
dec
insl
pop
rcrb
or
xchg
sub
das
mov
push
stos
aad
rolb
lock
pop
adc
fidivs
inc
push
aad
mov
add
or
cld
adc
aad
andl
cmp
add
sbb
bnd
fs
adc
cmp
cli
mov
cmp
stos
std
jge
ret
xor
outsb
daa
push
dec
jg
nop
dec
ljmp
jecxz
and
or
xchg
repnz
daa
movsl
mov
mov
adc
sub
cltd
xlat
ret
cld
in
aad
add
pop
sub
inc
call
clc
dec
inc
subb
fsubl
stos
mov
jne
xor
call
enter
repz
fwait
push
push
mov
ja
cmp
push
ret
pop
lcall
movsb
stos
sbb
cmpsl
pop
enter
aas
xor
rcl
add
sub
decb
inc
push
scas
popa
leave
fwait
sub
test
pop
pushf
into
loop
fsubl
scas
ret
and
insb
insl
inc
aam
scas
sub
adc
or
cmpsl
rclb
mov
xchg
imulb
push
jns
mov
add
mov
lahf
xor
cltd
fdivr
das
nop
jecxz
mov
shrb
mov
mov
imul
jb
je
fcompl
push
enter
xchg
icebp
lcall
xchg
ss
pop
jb
cmpsl
ret
dec
shl
jmp
inc
mov
push
push
pop
and
repz
test
cmp
pop
test
inc
xchg
sbb
test
loope
sub
or
dec
nop
add
mov
sbb
inc
mov
data16
outsl
test
flds
inc
in
inc
sbb
or
pop
xor
fldz
aaa
ds
inc
mov
inc
inc
test
inc
imul
inc
mov
dec
vphsubsw
add
in
adc
call
pop
mov
xor
imul
cltd
enter
jbe
xchg
ret
jne
jne
pop
jo
push
aam
adc
push
aas
pop
push
cli
frstor
sti
mov
bound
pop
sbb
in
or
cmc
std
sbb
scas
notl
cmp
fistpl
lcall
out
movsl
popf
imul
push
mov
inc
aad
arpl
dec
test
in
push
sub
cwtl
jmp
fnstcw
mov
dec
arpl
mulb
or
repz
dec
mov
pop
loope
sbb
pop
sub
dec
dec
jb
outsb
and
cmp
jecxz
scas
lret
lods
jmp
push
cmp
cmpsl
inc
push
bound
lods
mov
sub
popa
mov
xchg
mov
inc
popa
mov
adc
inc
inc
lds
push
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
inc
imul
rsm
outsb
pop
pop
pop
fisubrl
mov
push
aaa
cwtl
xor
pop
adc
sbb
nop
mov
push
pop
push
jb
cli
mov
mov
out
mov
repz
pushf
inc
shl
fsubs
cmc
xchg
cmp
push
xchg
les
pushf
rcr
xorb
test
aas
dec
scas
std
fldt
setno
pop
icebp
push
into
mov
mov
push
and
add
aam
sbb
lock
mov
sub
lahf
sti
cwtl
pop
sbb
xchg
addl
push
adc
repz
adc
stos
pop
inc
fists
mov
mov
cmp
inc
ss
mov
test
push
mov
lcall
loop
xor
sub
jae
add
fisubrl
pop
and
xor
lret
mov
push
out
in
push
push
fistl
mov
out
mov
dec
stos
push
sar
mov
sbb
dec
pop
adc
sti
lahf
jp
or
xor
jbe
mov
mov
pop
movsb
adc
mov
xchg
rcll
aad
xchg
mov
inc
lods
pop
mov
xor
inc
add
and
sti
mov
mov
mov
outsl
xor
dec
xchg
testl
repz
jno
lahf
cmp
jmp
in
sub
js
aaa
pop
in
cmp
push
jecxz
arpl
mov
xor
xor
popa
pushf
mov
push
mov
ret
sub
sbb
sbb
inc
adc
mov
xor
cmp
ret
subb
dec
idivb
repnz
jb
jb
jp
pop
scas
cli
adc
mov
aam
sahf
cli
mov
das
roll
iret
mov
icebp
cmpsl
hlt
cmp
stc
sub
nop
mov
loopne
cmp
test
cs
xor
daa
or
into
xsha256
cmpsb
pop
test
inc
inc
andb
test
es
out
adc
pop
les
dec
mov
das
fldcw
les
out
mov
inc
rolb
lret
lret
scas
cwtl
scas
inc
jecxz,pn
jmp
push
mov
pop
mov
iret
mov
or
adc
lods
cmpsl
out
aas
lock
cmp
jmp
popl
dec
aas
xchg
std
loop
mov
pop
fldcw
cmp
push
jp
adcb
or
jg
fistpl
mov
daa
mov
xor
push
jge
sbb
test
dec
push
fyl2x
xor
lret
setg
push
insb
repz
sub
repnz
cmc
js
xchg
popl
sahf
out
shll
jae
cld
pop
cmp
in
test
ret
in
mov
sti
push
into
fstps
push
pop
add
or
sbb
cmp
inc
mov
lock
mov
std
dec
call
into
imul
dec
and
mov
pusha
push
scas
sbb
pusha
icebp
das
sbb
popf
sub
mov
fwait
in
sub
push
outsl
jmp
je
pusha
add
and
int
dec
add
add
sbb
imul
aam
mov
es
or
lock
jne
push
cli
rol
daa
repnz
aas
push
xchg
test
cmp
pusha
sbbl
dec
jle
jecxz
rorb
cwtl
pop
xchg
insl
xchg
or
sti
pop
pop
push
sti
push
adc
in
push
sbb
test
adc
shl
imul
stos
mov
popf
dec
mov
rcll
fists
mov
mov
movsl
inc
add
xchg
lahf
insl
mov
mov
mov
adc
mov
stos
mov
cmp
fisubrs
fsubrl
add
cmp
movsl
cmpsb
xchg
mov
xlat
fcmove
jmp
test
sub
xchg
jo
xchg
sbb
ror
mov
lock
jns
gs
adc
int
and
les
dec
mov
in
xchg
repz
nop
mov
jmp
cmp
loope
mov
arpl
xor
out
lock
mov
icebp
mov
in
out
stos
xchg
imul
pop
xor
orb
inc
dec
in
dec
mov
adc
push
push
inc
test
jle
or
jnp
xor
add
mov
xor
push
mov
out
rcrb
cmp
mov
in
add
insl
mov
fists
les
movb
xor
movsb
icebp
jecxz
imul
pop
scas
and
adc
sub
mov
ret
jecxz
out
int3
into
insb
mov
outsl
xchg
int3
inc
sbb
inc
js,pn
jbe
nop
cmp
xor
cld
jne
iret
push
cmpsb
xchg
push
ret
mov
test
aaa
or
lret
addr16
int
loop
and
sahf
out
inc
in
sbb
jnp
clc
inc
push
arpl
int
mov
xchg
loop
fadds
pop
adc
das
outsb
aam
fisubs
sar
aas
push
or
mov
in
and
push
leave
jns
inc
jne
cmp
lret
dec
shll
mov
lret
mov
es
sbb
clc
andb
jmp
hlt
xchg
enter
into
or
cmp
leave
lock
or
and
popa
lods
cmp
cli
mov
sbb
pop
add
xchg
sbb
add
fidivl
das
insb
ja
enter
rolb
mov
mov
mov
mov
push
pop
inc
mov
jno
push
sarb
mov
or
ret
in
bound
mov
mov
jp
pop
mov
adc
xlat
out
mov
pop
aam
inc
ret
adc
xchg
xor
dec
sub
cmc
test
jbe
leave
jmp
mov
xlat
xchg
cmpsb
cli
sti
imul
dec
dec
cltd
adc
jmp
mov
add
jg,pn
xchg
push
mov
mov
dec
mov
sbb
cmpsb
mov
add
push
aad
xor
xor
test
shlb
pop
hlt
or
sbb
inc
ret
mov
pop
insl
shl
dec
cli
fs
aad
mov
shll
mov
lods
add
xchg
test
pop
cld
inc
mov
sti
ja
imul
pop
xchg
jbe
setbe
xor
fcmovnu
lret
or
in
adc
xchg
sbbl
jb
in
lahf
stos
mov
pop
dec
xchg
inc
mov
mov
imul
mov
icebp
inc
mov
xchg
fld
dec
pop
xchg
out
pop
cli
loop
dec
lea
or
xor
gs
fsubrl
dec
sbbl
add
nop
cltd
cli
stos
push
mov
arpl
add
mul
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
sbb
inc
mov
orl
vmread
fildl
inc
mov
cwtl
out
sbb
xlat
add
lea
push
jmp
mov
xchg
mov
jg
and
inc
cmpsb
ret
push
add
addl
std
jo
popa
dec
daa
pusha
sbb
cwtl
pop
popa
lea
test
subl
pop
sbb
mov
mov
xor
mov
pop
scas
arpl
mov
ret
and
cmp
out
scas
mov
addr16
jnp
cli
ljmp
or
int3
pop
and
movsb
adc
mov
mov
adc
stc
mov
outsl
lea
sbb
add
test
pop
lods
mov
jns
xchg
cmp
scas
sbb
shll
and
adc
and
cmp
je
test
inc
cmp
cmp
call
sbb
push
int3
popf
push
addr16
fimuls
inc
aaa
cwtl
imul
lds
fcmovnu
mov
insb
mov
cmp
cwtl
jb
hlt
inc
aaa
xchg
jl
cmp
adc
sti
jl
adc
push
popl
into
scas
mov
jmp
push
call
mov
cmp
and
cli
dec
idivl
dec
jmp
or
pop
fimuls
cld
and
jmp
shrl
adc
mov
jp
out
add
mov
and
fwait
jl
pushl
repnz
adc
test
jp
adc
cmp
aas
xor
sub
stos
dec
push
data16
shl
mov
pop
sbb
insb
insl
jmp
adc
lahf
mov
inc
sti
inc
pmullw
shrl
shr
mov
or
jno
xor
addl
repnz
jg
inc
pop
pop
lods
or
rcl
pop
dec
pushf
bt
mov
flds
cmp
jno
dec
inc
rcrb
fistl
jmp
orl
daa
inc
mov
fsubrl
pop
xor
xor
push
rorb
fldl
sub
pop
dec
dec
out
imul
pop
pop
cld
or
sbb
mov
jecxz
mov
mov
xor
shlb
mov
addr16
push
pop
aaa
jbe
jb
xchg
hlt
jmp
into
add
xlat
inc
stos
pop
insb
push
push
mov
int3
testl
pop
xor
push
mov
imul
inc
scas
inc
dec
dec
jp
sarb
repnz
sbb
ljmp
gs
int3
and
jb
scas
test
into
maxps
mov
cwtl
jae
lahf
fldcw
dec
cmc
sar
std
int3
add
cltd
aam
andb
pop
xor
stc
sub
push
sub
psubsb
cmpsb
nop
ror
es
lock
ret
aam
cs
xchg
or
or
gs
adc
xorb
push
jbe
inc
and
xchg
xchg
arpl
rcll
fwait
loopne
dec
and
in
mov
les
ret
or
ret
mov
mov
xor
cltd
lea
addr16
adc
mov
mov
paddusb
lods
add
dec
ror
loop
sahf
pop
frstor
lods
xor
cmc
mov
mov
gs
lods
aad
lahf
rcrb
add
fildl
bound
enter
xor
push
mov
cmp
lret
outsl
movsb
xlat
sub
fsubrl
lds
rcr
cmpsl
les
enter
sub
xor
cmc
call
mov
insb
sub
dec
rol
orb
fistl
xchg
dec
adc
mov
pop
jp
lret
fldcw
repnz
ljmp
pop
cmpsb
and
fdiv
js
mov
mov
aaa
fs
imul
mov
aaa
iret
mov
jle
push
stc
pop
inc
rolb
add
sub
cmp
shrl
test
gs
ret
dec
iret
sub
aaa
pop
lods
dec
dec
jmp
jl
jno
xchg
repnz
stc
cmc
xchg
xorb
xchg
pop
sbb
adcl
cmp
mull
dec
xor
test
mov
popl
mov
mov
repz
outsb
lea
rorl
and
xchg
sub
and
ja
sub
inc
mov
into
mov
xchg
xchg
mov
sti
mov
pop
sub
and
xchg
es
xorb
cmc
pusha
jno,pt
subl
popa
mov
lea
jns
outsb
xchg
lahf
jmp
dec
push
mov
xchg
gs
jo
into
call
add
es
mov
les
push
dec
jecxz
mov
in
sub
imul
xchg
int3
cwtl
in
out
inc
pop
sbb
lcall
inc
test
mov
mov
xchg
int
and
icebp
inc
cmp
pop
push
mov
fdiv
call
imul
std
roll
add
pop
mov
rcrl
rclb
inc
mov
mov
icebp
loope
cmpsl
or
ss
or
pushl
out
mov
pop
test
cmp
pop
arpl
mov
mov
out
push
mov
int3
dec
or
je
ljmp
adc
inc
mov
imul
imul
stos
cmp
mov
add
mov
or
mov
lods
in
cmp
push
xlat
pop
aam
fldl
sti
xlat
sub
push
cld
dec
js
cs
rcl
sahf
mov
sub
and
or
push
je
test
shr
out
sub
insl
adc
aad
gs
pop
movsb
test
adc
mov
pop
fisubs
and
imul
stc
popa
fwait
push
in
sub
and
pop
pop
in
fdivrs
sbb
aaa
mov
adc
cwtl
xorl
paddsb
pusha
dec
sti
sahf
in
jne
cmp
mov
mov
insb
stos
sbb
sub
xchg
push
sbb
gs
xchg
mov
aaa
xchg
dec
xor
rcrb
lock
fisubl
ret
xchg
scas
mov
and
jbe
or
shlb
or
data16
sbbb
pusha
push
inc
and
clc
add
sbb
sub
pop
test
lds
jmp
dec
mov
adc
jnp
xchg
mov
pusha
std
sbb
mov
dec
pop
fstl
dec
push
loope
dec
adc
dec
push
inc
add
ds
imul
jge
outsl
ljmp
out
or
stos
aam
dec
lret
mov
xorl
dec
mov
pop
test
and
jne
mov
divl
sahf
inc
xor
xchg
xor
fcoml
and
stos
pop
or
adc
rcrl
sub
mov
fdivl
sub
fwait
push
rcrb
xchg
sti
cltd
mov
mov
mov
jmp
aam
inc
test
addr16
add
jge
ss
push
outsl
ja
adc
jae
ss
mov
and
inc
popa
loopne
in
lds
push
pop
fildl
mov
xor
lret
faddp
jb
pop
addr16
mov
ret
mov
pusha
inc
push
lret
data16
sbb
fucomip
jo
lods
mov
std
insb
hlt
fwait
jns
sub
add
cli
and
mov
outsb
push
das
lahf
fsubl
lods
in
insl
mov
or
xchg
xor
or
mov
jnp
fwait
pusha
push
inc
sub
das
xchg
push
fistpll
daa
in
pop
push
and
xchg
sahf
insb
cmc
xorl
jecxz
loop
sub
push
pop
mov
repz
movsb
adc
movsb
inc
mov
aaa
push
pop
push
mov
add
out
insl
cli
dec
lret
loopne
mov
push
dec
cld
xor
and
inc
ret
sbb
popa
adc
cld
or
nop
std
and
cmpsl
ljmp
arpl
push
in
aam
adc
sbb
add
push
divl
jl
sub
arpl
outsb
or
xchg
push
sbb
jl
add
sar
dec
loope
jp
mov
sub
pop
xor
mov
mov
jge
and
hlt
inc
out
popa
cmp
mov
dec
dec
cmc
int
mov
mov
stc
mov
jns
xchg
scas
pop
xor
loop
dec
mov
pop
cld
arpl
scas
jp
pop
int3
push
and
bound
in
adc
sbb
nop
xchg
mov
outsb
sbb
int3
popf
notl
push
idivl
mov
adc
mov
xchg
stos
fwait
jne
and
xchg
cmp
lods
je
and
cmp
lret
outsb
adc
je
sbb
cmp
jae
test
xor
pop
pop
dec
mov
insb
fistpl
mov
cld
cmpsb
out
out
arpl
stos
adc
sbb
or
adc
mov
push
pop
cmp
scas
jp
aaa
push
repnz
hlt
subl
ss
pop
pop
jb
iret
nop
cmp
idivb
loope
inc
adc
test
dec
loop
adc
pop
dec
pop
sbb
jns
or
pop
jl
test
or
adc
sub
mov
push
addb
not
pop
adc
xor
rolb
or
or
mov
jno
cmp
add
lods
je
mov
fidivs
ljmp
test
pop
andl
dec
jae
cmp
fwait
out
imul
aas
shll
mov
sub
adc
push
aaa
or
outsl
pop
inc
mov
scas
ds
jl
loopne
sub
jl
gs
adcb
outsl
ljmp
sub
imul
mov
push
cmp
xor
mov
jle
dec
mov
cmp
gs
mov
pop
incl
insb
les
sbb
and
icebp
mov
pop
pop
jns
xlat
pop
sbb
mov
adc
mov
dec
gs
stc
call
dec
idiv
add
aad
push
insb
mov
movl
shrb
cmp
dec
push
mov
pop
daa
push
icebp
adc
gs
ret
xchg
xchg
jo
call
adc
cmp
clc
nop
loopne
mov
sbb
dec
hlt
hlt
scas
sbb
das
dec
imul
jle
mov
mov
push
pop
inc
call
ror
cltd
insb
imul
jge
push
pop
fldl
cmp
insl
ja
gs
les
adc
cld
xchg
or
push
je
aad
fiaddl
repz
shrl
mov
mov
das
fdivl
add
ljmp
lds
repz
mov
jb
out
push
mov
mov
jle
jnp
rol
xor
mov
push
inc
inc
or
mov
xlat
repz
popa
fisubl
inc
stc
data16
mov
pop
imul
add
in
sub
iret
loop
pushf
mov
or
dec
shll
rcr
adc
push
mov
xor
jl
add
cmc
sub
divb
int
fwait
fs
cmpsb
enter
mov
add
idivb
icebp
test
popf
adc
movsl
xchg
out
push
aaa
mov
add
add
imul
push
cmp
addl
cmc
pop
push
in
stos
or
sbb
nop
xchg
movsl
inc
shl
movsl
pop
cmovns
out
mov
sbb
mov
pop
stc
sub
hlt
mov
inc
scas
xor
and
lds
outsb
dec
add
addr16
and
mov
xchg
lods
test
stos
jne
push
mov
or
loope
sub
jae
sarb
fnstenv
jp
test
sbb
mov
sahf
push
ljmp
shll
movsl
daa
negb
add
leave
lret
jp
mov
nop
orl
decl
jb
int3
test
dec
sub
test
xchg
fadds
xchg
or
dec
pop
pushf
add
jne
add
and
push
add
mov
jb
lret
inc
dec
movsb
das
cmp
enter
mov
adc
loope
nop
add
xlat
in
test
fcomps
mov
aad
fiaddl
inc
sub
add
repz
push
xor
adc
mov
pop
or
and
inc
inc
or
and
movsb
arpl
popa
inc
shlb
or
lods
imull
sbb
jno
xlat
mov
jo
mov
in
add
leave
sbb
add
mov
mov
mov
fnstenv
pop
push
mov
icebp
jmp
sub
test
fdivrl
push
repz
sbb
sub
dec
cmp
jmp
xchg
sarb
add
sub
mov
mov
int
mov
mov
push
test
mov
aad
data16
jne
psubb
sbb
bound
adc
sbb
aam
push
ds
fisttpl
sbb
pushf
pop
jmp
or
mov
xchg
push
pop
out
xchg
sub
jb
lret
pop
and
or
pop
stc
cmc
mov
cld
cmc
inc
xor
add
push
test
je
xchg
sbb
add
cmp
les
adc
out
jge
inc
xor
xchg
out
xor
or
cmp
sbb
dec
mov
lret
fmull
inc
ljmp
sub
pop
sbb
imul
and
pushl
push
and
sbb
out
dec
xor
pop
push
mov
ret
adc
fs
loope
fisubs
inc
sbb
push
mov
pop
inc
push
popa
cmp
shrl
mov
or
add
xlat
mov
test
movsb
xor
add
pop
pop
add
sbb
or
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
outsb
xchg
lock
ja
iret
or
mov
pop
or
add
dec
in
cmp
outsb
sub
xchg
add
add
adc
fstpt
and
xlat
cltd
cwtl
xchg
cmc
in
ret
xchg
add
iret
setle
jmp
fsubl
cmpsb
faddl
jg
jp
jno
cmp
jno
xor
xor
and
mov
or
xchg
push
sbb
inc
cmp
dec
les
jo
cs
xor
mov
jp
sbb
fwait
movsb
pop
in
mov
popf
adc
daa
hlt
icebp
and
jg
sahf
jns
xor
cld
xchg
or
arpl
test
outsb
mov
es
cmp
lcall
repnz
and
lahf
shr
dec
call
cld
bound
mov
fistl
mov
mov
mov
pop
sbb
push
rclb
adc
xchg
jle
outsl
in
inc
orl
lods
dec
loopne
inc
dec
xchg
dec
pminsw
adc
std
and
push
rorb
adc
outsl
jle
sahf
xchg
pop
dec
sahf
sbb
xor
testl
mov
sar
sbb
inc
mov
sbb
fidivs
xchg
leave
xchg
je
or
dec
test
loope
push
les
enter
xchg
popa
sbb
aad
sbb
xor
sub
lea
xchg
push
testb
push
call
xor
dec
mov
add
inc
and
adc
dec
ljmp
push
addr16
push
xor
lods
and
outsl
push
mov
xor
mov
fdivrs
cmp
fwait
cmp
push
fsubrs
adc
add
or
inc
jae
mul
mov
je
jo
jp
pop
cmp
scas
sbb
sti
or
push
pushf
mov
xor
neg
or
jge
sbbb
dec
out
in
xor
dec
jge
dec
push
stos
cwtl
cld
jbe
mov
inc
mov
addr16
xchg
jb
scas
das
push
or
jbe
or
pop
jle
leave
mov
push
mov
adc
jge
test
mov
ljmp
loopne
shl
xchg
jns
int
rcrl
adc
aaa
jge
int3
lea
in
lods
fimuls
jbe
xchg
pop
dec
adcb
mov
seto
push
push
fdivp
xchg
mov
aaa
mov
insl
loopne
ret
sbb
mov
xor
mov
mov
xchg
rorb
mov
ljmp
out
push
test
dec
scas
adc
and
inc
loop
pop
pop
mov
sub
push
xor
notl
adc
out
or
or
adc
or
shlb
test
mov
jnp
adcl
and
js
push
shll
xor
mov
pop
movsb
adc
jb
out
push
push
push
xchg
idivl
xor
popa
movsl
or
jb
dec
or
sub
lahf
sbb
cwtl
sub
ret
jecxz
repnz
pop
test
dec
mov
cmpsl
notl
dec
mov
dec
data16
notl
pushf
dec
aam
pop
xchg
nop
dec
add
aam
adc
xlat
mov
xor
outsl
xchg
xchg
mov
dec
sbb
lea
mov
add
sbb
mov
test
out
sbb
pushf
into
add
loope
pop
iret
ret
ds
mov
cmc
dec
in
push
adc
adc
sub
push
inc
or
pop
jb
inc
mov
push
push
jle
jmp
pop
je
addr16
pushf
mov
push
mov
adc
adc
adc
mov
int
fwait
enter
adc
or
dec
cmp
stos
jns
test
mov
mov
push
cli
das
and
in
adc
loopne
cmp
push
sub
outsl
lret
and
lods
loope
inc
sbb
addl
mov
sbb
shrb
enter
cltd
dec
test
bound
inc
loope
pop
pop
push
in
cmp
pop
lods
xor
cli
arpl
testl
sbb
aaa
mov
jnp
in
ds
push
inc
dec
out
mov
lret
cltd
jl
lahf
push
out
loope
subb
js
out
test
inc
or
fimull
sbb
addr16
fwait
imul
or
cmpsb
dec
mov
out
shll
jle
aas
into
repz
or
jge
mov
int3
daa
dec
xor
iret
vfnmsub231ps
mov
imul
dec
add
add
sbb
xlat
dec
lods
pop
sbb
fisttpll
and
pop
pop
in
xor
fimull
inc
pop
cwtl
in
or
push
das
jl
test
cmpsl
cmc
pop
pop
pop
add
and
movsl
mov
push
out
lods
lahf
dec
adc
out
dec
ret
sbb
jne
dec
lods
and
dec
out
push
inc
pop
js
subb
outsb
ja
adc
add
sahf
fidivl
movsl
cmp
push
test
movsb
sub
out
cmc
in
adc
push
data16
mov
divl
cmp
mov
popa
jns
mov
notb
sub
push
jmp
rorl
mov
int
mov
jne
cli
fnsave
in
xchg
pushaw
in
cmp
mov
out
ja
lods
out
data16
es
outsb
xchg
pushf
dec
xchg
flds
fstpl
cmp
lahf
nop
add
out
dec
dec
stos
cmp
xchg
ja
cwtl
lods
and
or
push
dec
xor
sahf
lcall
adc
xchg
lock
cs
push
inc
dec
loope
cmp
xchg
imul
sbb
ret
jg
ljmp
in
dec
push
mov
int3
jns
mov
clc
fbld
mov
popf
ficompl
inc
mov
in
or
fyl2xp1
decl
mov
insb
test
sbb
scas
addl
mov
movsb
cltd
push
repnz
and
dec
mov
sbb
and
cmp
sbb
mov
cmp
sub
mov
ror
mov
adc
lahf
fdiv
scas
clc
mov
imul
ja
push
mov
mov
jecxz
sub
and
pop
jo
xor
mov
or
mov
nop
bound
push
dec
push
movsb
xor
mov
cmp
pop
cmp
xorl
push
sub
dec
inc
addb
clc
inc
xor
aam
pop
mov
adc
sar
push
iret
fistl
loope
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
sbb
xchg
ja
sub
shrb
rcll
xor
testl
movsl
jnp
mov
inc
ja
adc
fmul
mov
lods
adc
push
xchg
adc
sub
test
rorb
cltd
push
repnz
icebp
sti
lcall
aas
insl
outsb
mov
jmp
cs
push
rolb
pop
stc
shll
mov
add
cmpsb
cmpsl
das
and
push
scas
add
clc
ret
in
iret
adc
mov
cs
jb
and
nop
cmc
int3
mov
or
inc
pop
lret
jecxz
daa
inc
mov
mov
fcmovnbe
sbb
adc
jg
or
xor
sub
dec
ret
dec
addr16
stos
jge
sbb
mov
out
orb
push
mov
pushf
lods
cmc
jle
sub
jbe
mov
mov
mov
inc
popa
xor
sahf
into
pop
cmp
mov
jno
xchg
sub
nop
jp
in
sub
push
leave
pop
adc
fidivrl
cmp
in
xchg
push
dec
hlt
jno
arpl
mov
dec
subl
or
or
popf
fs
pop
ja
xchg
push
mov
jmp
sbb
cmc
clc
mov
xchg
jp
jg
outsb
mov
leave
fcmovb
xchg
jnp
fiadds
insb
fidivl
adc
stos
loope
pop
sub
and
mov
dec
rorb
xor
sub
cmpps
cld
push
add
int3
movsb
les
sbb
iret
inc
pmullw
out
pop
mov
sbb
mov
sub
jecxz
lahf
imul
xchg
scas
xchg
sub
xor
sub
lea
lret
xchg
mov
cltd
ss
and
push
add
pushl
sbb
jle
dec
jno
or
mov
cmc
or
fs
shlb
loopne
inc
mov
jp
fwait
cwtl
add
rcl
jmp
lret
repz
add
inc
and
icebp
jnp
pushf
stc
es
mov
lods
push
pushf
pop
ja
dec
sbb
pop
inc
push
add
inc
jge
inc
cmp
loopne
loope
jnp
pop
pop
inc
ss
pop
lods
int3
and
pop
inc
outsl
fnsave
movsl
xchg
dec
mov
imul
sbb
cltd
roll
push
push
pop
roll
sti
idiv
dec
es
test
gs
pushf
xchg
jmp
lahf
lret
js
cmp
jmp
in
jne
mov
inc
cmp
lea
inc
rorl
mov
negl
stc
sbb
and
pop
dec
sti
orb
js
inc
pushf
adc
div
pop
roll
mov
mov
sub
or
cmp
adc
es
inc
outsb
in
lock
push
out
repz
mov
push
or
mov
pushf
mov
mov
fs
mov
pusha
cmpsl
jmp
popa
xsaves
subb
xchg
lahf
fsubrp
jmp
mov
push
shll
dec
xchg
and
push
ja
ror
sub
cltd
inc
cmp
fld
js
dec
lcall
jb
nop
or
mov
mov
test
or
add
push
jne
sub
dec
jbe
std
sbb
sahf
cmc
in
movsb
or
push
pop
jne
sub
std
loope
xchg
inc
cmp
js
mov
cmp
cmp
int
jmp
scas
fisubs
fbstp
push
xlat
push
cltd
in
mov
stc
pause
bound
push
stc
pop
or
push
mov
sub
push
fisttps
sbb
mov
in
mov
nop
cwtl
xchg
nop
nop
into
adc
rcll
mov
roll
xor
mov
fsubrs
int
push
imul
cmpsb
fwait
sub
fidivl
xorb
out
ljmp
repnz
and
les
aam
xor
sbb
fs
pop
icebp
xchg
dec
xlat
push
mov
sub
mov
out
je
sbb
push
xchg
icebp
fs
jae
cmp
sub
loopne
sahf
jne
sub
aas
pop
out
pop
push
adc
inc
in
test
testb
bswap
mov
shl
aas
orb
lods
fdivp
movsl
push
dec
pop
nop
and
das
repnz
push
mov
mov
inc
push
inc
push
leave
bound
aas
jno
mov
adc
sub
mov
fildll
push
mov
rcl
sub
call
pop
pmuludq
mov
outsl
pop
in
es
and
xor
or
leave
jmp
jno
scas
xchg
sti
mov
addr16
jmp
inc
adc
subl
sub
addr16
ret
enter
out
inc
sti
inc
adc
mov
inc
lods
mov
testl
test
inc
ljmp
mov
jns
repz
and
mov
add
imul
out
loope
data16
mov
adc
data16
xor
imul
stc
stc
in
and
pusha
std
iret
dec
pushw
insl
adc
xchg
pop
inc
test
divb
out
pslld
ljmp
sbb
repz
push
sub
pop
push
rcrb
xlat
adc
sbb
mov
mov
mov
repz
inc
adc
push
sub
xor
inc
dec
rorb
pop
and
aad
test
cmp
push
jecxz
outsb
leave
pop
xchg
cs
push
sarb
into
mov
mov
in
addr16
loopne
fdivs
mov
lret
push
movsl
adc
stos
cli
pop
in
jno
cld
sub
cmp
imull
xor
sbb
push
gs
xchg
jl
jno
xchg
in
sub
push
mov
push
hlt
stos
out
push
mov
xor
jg
lret
int
mov
push
in
adc
icebp
das
xor
test
cltd
loope
or
repz
roll
pop
jl,pn
pop
push
or
pop
test
adc
sbb
cmp
xchg
call
cwtl
sbb
mov
sbb
pop
mov
into
xlat
sbb
stc
inc
insl
add
push
xchg
pusha
jne
fisubrl
mov
xchg
iret
test
es
lret
test
jno
add
cli
cs
sub
imul
out
data16
push
scas
arpl
mov
iret
dec
loop
cmp
sub
insb
shr
fidivrl
mov
xor
or
ds
adc
jbe
xchg
scas
mov
insl
std
adc
mov
lods
jmp
xchg
jo
aad
jne
and
stos
shrb
or
rol
push
mov
idiv
mov
cmp
decb
jl
fidivl
mov
mov
sti
sub
mov
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
sarb
xchg
aas
ja
sub
xchg
enter
sti
fcmovnbe
push
out
in
cmp
xchg
js
xor
cmp
pushf
xor
cmp
es
pop
mov
sub
or
test
aas
lods
std
adc
mov
arpl
sbb
aad
mov
pop
out
push
mov
call
mov
loopne
mov
cmc
ret
mov
push
arpl
push
lahf
out
sub
icebp
orb
or
sbb
push
xchg
js
out
jb
mov
mov
loopne
sahf
push
in
push
or
mov
jns
push
fprem1
and
outsb
lcall
fabs
mov
roll
cmp
jp
mov
cmp
cli
test
test
jbe
xchg
cmp
lods
cmp
xor
fstps
insl
dec
or
mov
in
cmp
mov
pushf
inc
out
inc
add
mov
mov
das
lahf
push
int3
pop
rol
fmull
jb
pop
clc
sbb
pop
adc
ret
ss
pop
fistpl
clc
loop
jg
andb
daa
adc
cmp
mov
imul
sbb
mov
data16
cmp
xchg
fstp
jmp
repz
roll
stos
push
push
jl
xorb
test
push
cmpsb
or
clc
stos
mov
inc
es
cld
mov
push
sbb
lds
es
mov
js
xor
xor
jae
out
mov
fidivrs
test
loopne
mov
movsl
clc
mov
addr16
mov
incl
and
std
sub
popa
jb
dec
orl
sbbl
lcall
or
lds
sarb
push
mov
cmp
mov
sub
jnp
daa
jbe
aam
fcoml
mov
fstl
push
ja
sub
pushf
or
shl
jp
sahf
lods
cltd
shl
cltd
push
add
neg
push
insb
fadds
mov
and
stos
pop
fists
imul
jne
sbbl
dec
or
xchg
pop
jle
mov
jne
stos
push
fstps
sbb
and
pusha
enter
rcrl
jno
xchg
pop
jecxz
mov
mov
sbb
mov
pusha
mov
dec
push
push
push
jbe
adc
hlt
xchg
and
inc
popa
lods
cmp
and
fsubp
loope
inc
je
xlat
or
cmc
mov
and
mov
push
jnp
ror
push
sbb
mov
sub
pushf
cmp
popa
cmpsb
lods
test
clc
pop
pop
dec
pop
xor
leave
xchg
pop
sub
mov
ret
mov
ja
jmp
nop
add
dec
jle
add
in
pop
dec
fstps
mov
stos
daa
shll
push
nop
scas
inc
cmpsb
mov
mov
fsubr
js
push
ljmp
lods
inc
sbb
rclb
je
mov
imul
xchg
pop
popa
dec
mov
cmp
adcl
mov
mov
dec
xchg
add
in
inc
imul
out
repnz
out
cld
mov
ret
or
cld
popa
movsb
pop
mov
pop
xchg
and
inc
adcl
sbbl
cltd
das
cmp
or
cmpsl
jae
movsl
mov
ds
rolb
xchg
and
mul
inc
xor
scas
push
mov
mov
pop
stc
sbb
sbb
fimuls
inc
lret
in
repz
mov
and
inc
sar
add
pop
flds
push
add
xor
in
nop
or
jnp
int3
xlat
sbb
add
cwtl
sbb
in
ror
mov
cli
sub
mov
lea
sub
mov
arpl
mov
mov
cld
jns
adc
test
stc
int3
out
sub
inc
push
inc
dec
loope
cmp
shrb
mov
sbb
push
dec
push
popa
scas
and
xchg
enter
sub
cmp
sbb
imull
icebp
stos
pushf
testl
jb
sar
xchg
insl
ss
jmp
test
lea
inc
jge
aad
bound
mov
mov
inc
jnp
push
sub
pop
movsb
lock
and
cltd
and
and
out
push
fldenv
arpl
filds
outsl
gs
gs
cmpsb
adc
sbb
nop
iret
movsl
push
xlat
push
outsl
lret
cmpsb
das
and
jge
xchg
cmp
lds
sub
cld
mov
cld
xorb
aad
stos
push
movsl
mov
jg
sbb
call
data16
push
sarl
icebp
scas
inc
ret
mov
lret
mov
gs
add
push
mov
or
xchg
adc
cmp
call
jecxz
cs
sbb
insl
jl
xchg
nop
test
arpl
int
xchg
inc
scas
and
xor
icebp
scas
imul
mov
iret
js
loop
push
pop
cmp
push
pop
aas
ljmp
addr16
mov
pop
jge
stc
add
andb
repnz
call
xchg
xor
mov
inc
pop
xchg
sbb
outsb
xchg
ljmp
pop
lret
adc
sti
and
test
gs
fcmovnu
inc
popf
mov
sbb
mov
mov
imull
xor
ret
xchg
cmpsl
xchg
jb
idivl
dec
lahf
mov
test
popa
iret
jg
in
mov
xchg
xchg
pusha
lods
repz
jl
mov
sub
xlat
lods
xchg
lods
sbb
pop
aas
mov
pop
imul
xor
push
mov
cmp
mov
pop
or
mov
daa
dec
inc
pop
popf
xor
mov
sarb
lds
mov
aas
mov
push
jle
push
ljmp
jge
addb
ret
scas
sub
xor
cwtl
cmp
xchg
cmp
mov
ficoml
mov
ja
insl
add
mov
pop
repz
repz
push
test
in
inc
loop
in
and
xchg
clc
out
jb
movsb
or
jmp
push
inc
mov
test
dec
sub
push
in
dec
inc
loop
out
mov
ret
inc
adc
xor
cwtl
pop
rorb
sbb
mov
dec
push
out
push
pop
mov
mov
ret
clc
push
mov
in
or
sub
xor
imul
or
pop
fnstenv
lcall
jbe
sarl
jo
xor
imul
mov
cmp
movsb
mov
jmp
pop
mov
aad
in
add
iret
es
pop
or
and
das
loop
or
out
jns
pop
mov
loopne
and
pop
xchg
addl
into
repz
sub
shr
dec
add
push
dec
jns
lea
inc
hlt
sbb
adc
inc
jnp
fmull
mov
jl
cmp
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
cmpsb
jmp
ja
mov
push
or
xlat
loopne
add
jecxz
mov
jle
pop
fidivrs
movsl
scas
pop
test
push
into
sar
ljmp
out
orb
xor
dec
jle
in
mov
stos
adc
iret
mov
or
sahf
jl
in
lea
rcrl
aad
inc
cwtl
push
out
sub
stos
lahf
stos
pop
fisubs
add
loopne
sbb
shl
fdivl
push
xchg
xchg
sahf
xor
jbe
inc
pop
sub
and
mov
dec
mov
xor
lods
inc
add
stc
dec
insb
or
pop
pop
ljmp
in
loope
stos
cmp
dec
pop
repz
int3
xchg
dec
out
mov
in
or
cmpb
sub
mov
jl
mov
ljmpw
or
dec
fisttpll
dec
pop
in
mov
pop
push
jnp
clc
xchg
jbe
jo
or
lret
int3
or
pop
xchg
push
push
hlt
outsb
repnz
out
pop
inc
mov
push
jecxz
andl
xchg
ds
mov
stos
fbld
and
pop
hlt
xchg
dec
mov
icebp
pop
adc
int3
sbb
xor
out
in
inc
testb
addr16
xlat
sub
and
orb
fcmovnu
orb
shll
xor
fwait
shll
sbb
add
ss
cmp
ljmp
mov
fnstcw
out
fcom
sbb
movsb
xchg
test
in
mov
dec
dec
pushf
inc
test
sbb
enter
lret
push
and
es
cltd
mov
fwait
sub
mov
sbb
sub
mov
pop
into
ja
cmc
std
push
scas
scas
mov
pop
ret
jo
dec
bound
mov
sub
imul
lock
xchg
mov
pop
pop
sahf
cmp
js
jp
subl
cmpsb
lahf
mov
mov
rcll
lcall
lods
pushw
mov
jo
sbb
lods
push
imul
xchg
dec
mov
lods
decl
arpl
xchg
sub
sbb
push
push
lock
xor
insb
xlat
lods
out
aas
and
mov
mov
test
aad
inc
sbbl
mov
cs
jg
rorl
fwait
pop
repnz
sti
outsb
xchg
movsb
xor
sub
inc
pop
dec
insb
roll
dec
push
out
xchg
loop
jne
pop
js
imul
outsl
xor
lds
aad
lcall
or
loope
lcall
sahf
cmp
inc
iret
add
cmp
mov
dec
mov
cmpsl
xchg
sbb
ret
mov
xchg
push
add
bound
jnp
push
mov
xchg
cmp
xlat
mov
jge
rorb
pop
jp
aad
xchg
sbb
fldl
and
cli
test
xchg
fbstp
into
inc
mov
pop
and
idiv
sbb
sbb
add
add
lret
insl
je
subb
loopne
sahf
add
and
fsubrp
xchg
and
lods
arpl
outsb
mov
out
jle
and
jns
cmc
push
and
sub
push
and
pop
push
lahf
rorl
icebp
fsubrp
in
mov
and
jnp
orl
dec
jne
mov
mov
lret
jl
addr16
mov
fidivs
add
mov
insb
leave
rcpps
inc
xchg
outsb
xor
adc
jle
ror
xchg
mov
push
loope
cs
or
push
cwtl
or
cltd
roll
cmp
mov
ja
popa
jnp
fdivrl
inc
pop
xor
xchg
daa
dec
xchg
div
mov
rsqrtps
out
hlt
ja
mov
jno
test
loop
pop
out
push
repnz
outsl
mov
xchg
sbb
leave
pusha
mov
inc
jmp
loop
adcl
push
cmp
insb
pop
sub
repz
push
sub
push
inc
ret
scas
out
ds
lahf
shll
pop
cs
xchg
dec
jno
es
mul
xor
mov
adc
pop
lock
pop
andb
fwait
in
fsubs
jmp
push
sub
cld
js
shll
out
dec
repnz
ja
cltd
pop
push
pop
daa
mov
jae
movsl
cmp
dec
pop
xor
pop
aad
fstps
test
outsb
jne
mov
mov
push
xchg
jno
jne
mov
xor
or
mov
mov
mull
test
inc
movsl
jb
xchg
popf
inc
ret
ja
cli
fwait
push
jecxz
addr16
sbb
outsl
sbb
int
iret
addr16
jns
aaa
in
clc
sbbb
cld
mov
jb
in
or
lods
loop
push
and
test
in
inc
fisttpl
xchg
sbb
xchg
mov
mov
loope
jmp
stos
push
push
icebp
in
jmp
xchg
call
cld
xchg
movsb
cmpsb
pop
popa
lods
mov
es
repnz
scas
pop
mov
imul
or
xchg
scas
fs
popf
cltd
sub
mov
std
mov
dec
lock
and
sbb
jmp
ljmp
mov
addr16
loope
jmp
js
jl
int3
dec
cmc
cld
pop
lods
sbb
mov
dec
ss
or
pop
ret
loopne
and
add
iret
and
ret
es
xchg
out
add
sub
cld
push
pop
and
lret
pop
and
jbe
out
hlt
push
ret
inc
or
or
inc
enter
cs
test
dec
adcl
jnp
pop
test
jle
cmp
push
xchg
push
repnz
pop
orb
pop
stc
roll
in
lods
loop
mov
push
rcrl
cmp
into
jl
mov
lea
jo
mov
jne
adc
pop
push
sbb
pop
dec
adc
ficompl
stos
mov
push
xor
pop
sbb
inc
stos
mov
insl
leave
int
push
add
popa
insb
cmp
cmp
sub
pop
int
mov
mov
adc
or
scas
je
bound
arpl
pop
int3
fs
push
sti
lods
stos
addr16
jb
pop
jecxz
adc
out
mov
iret
mulb
xor
fs
pop
push
ljmp
push
dec
jo
xchg
rorl
ljmp
adc
and
andb
int3
out
imul
xchg
bnd
jp
push
add
cmp
fiadds
push
and
loop
loop
stos
aaa
ljmp
pop
mov
out
pop
cmp
f2xm1
clc
inc
aas
pop
dec
stos
scas
jb
cs
jne
push
or
jo
call
gs
cmp
cmp
or
fnstsw
lea
push
les
add
fwait
jecxz
push
int3
pop
sub
mov
adc
lds
insb
shlb
in
das
mov
mov
adc
xor
or
mov
cmp
push
lea
dec
adc
test
ljmp
add
inc
adc
ljmp
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
cmpxchg
daa
test
add
pusha
test
cmp
imul
lea
shrb
adc
out
or
movsb
ljmp
jg
cmc
pop
dec
jl
inc
in
xchg
jmp
mov
test
dec
push
addps
cmp
loope
ja
addr16
adc
jl
adc
mov
xorb
cli
sub
lds
xchg
ret
push
push
cld
sti
xchg
repz
ds
mov
scas
nop
pushf
xchg
arpl
fs
add
xor
push
ss
dec
fcomip
rol
mov
jo
jno
stc
mov
shll
xor
stos
mov
jo
incb
std
and
cli
out
sbb
je
mov
mov
pop
jge
mov
push
and
das
mov
mov
sub
dec
je
in
cmp
dec
mov
and
outsb
jnp
cltd
dec
dec
dec
aaa
push
addr16
call
cmp
call
cmc
mov
inc
into
fnstcw
aam
fucomi
outsl
xchg
inc
mov
fiadds
test
int3
jecxz
pop
xor
dec
jmp
cmp
in
mov
inc
jge
inc
dec
aad
fimull
imulb
int
lods
cmpsb
add
push
adc
leave
or
push
pop
scas
inc
dec
push
mov
ficoms
std
cmp
jmp
mov
ss
xor
pushf
mov
lods
mov
je
sahf
ja
xchg
dec
std
pop
int3
sbb
mov
pop
cmpsb
int
cmp
jnp
iret
aas
jbe
mov
lea
cmpb
jg
ret
in
fsubrp
xor
add
in
mov
mov
lods
jecxz
jl
cmc
sar
and
test
fsubr
enter
adc
cmp
repnz
pop
cmp
inc
std
sub
and
push
enter
pop
lret
negl
jo
xchg
dec
test
mov
mov
testl
fcoml
adc
mov
jns
jp
stc
pushf
mov
sbb
xchg
out
loop
lret
dec
pop
mov
das
xlat
mov
repz
mov
cmp
sub
sub
pop
sub
add
shl
push
mov
or
addr16
mov
je
inc
rcpps
repz
sbb
xor
and
mov
jmp
mov
stos
shlb
das
add
mov
cmpsl
sub
dec
push
ficoms
je
xor
iret
mov
sub
out
out
mov
push
mov
and
jns
push
cmp
cmp
jae
movsb
xchg
cmp
outsl
mov
or
lret
inc
lock
cmpb
adc
jne
cmp
mov
insl
push
lds
inc
mov
fcoms
repz
roll
mov
or
es
xchg
pusha
jno
pop
mov
or
std
dec
mov
lcallw
out
xchg
cli
xchg
mov
and
mov
add
inc
mov
mov
dec
add
loopne
fwait
hlt
inc
cltd
lods
sbb
clc
mov
test
cld
imul
jo
dec
loop
imull
fwait
sub
pop
pop
int3
aad
fmuls
adc
mov
stos
push
test
cmp
jo
ret
xorb
pop
stc
cmpsb
mov
rcrb
es
iret
inc
and
jge
dec
hlt
mov
or
pushf
xchg
fsts
std
jae
sarl
int3
xchg
adc
sar
mov
fmull
bound
movsl
pop
incb
sbb
push
aaa
cmp
push
stc
jl,pn
dec
mov
in
xor
mov
pop
lahf
push
ds
movsb
inc
imul
xor
in
mov
ror
add
dec
inc
push
loopne
cmp
pop
clc
mov
mov
jne
cmc
or
ja
mov
movl
lret
movsl
fs
je
dec
add
inc
call
cmc
cld
std
inc
loop
fisttpl
test
and
nop
and
popf
or
mov
sub
dec
imul
sbb
pusha
dec
shlb
test
stos
dec
dec
out
sahf
jb
pop
jmp
dec
mov
lahf
dec
fs
add
sub
outsb
cmp
inc
dec
jl
jne
sub
and
sub
pusha
fadds
jnp
cltd
cmpsb
daa
push
fistps
mov
dec
imul
aad
int3
and
ja
in
mov
xor
sbb
ficomps
adc
mov
loop
push
mov
mov
insl
push
loopne
ror
ret
push
pop
push
dec
test
and
inc
jno
lods
or
loopne
adcb
jmp
dec
in
lds
pop
loope
sub
xor
mov
push
xor
cmpsl
std
push
in
std
or
mov
shr
in
or
adc
mov
sahf
jmp
jo
fcompl
add
xchg
ljmp
jae
mov
dec
sbb
pop
call
jl
xorb
adc
inc
xor
gs
orl
dec
xor
cmp
rclb
push
scas
dec
jle
or
xor
testb
iret
jg
cmp
inc
pop
or
cmc
mov
out
mov
sub
jl
imul
pop
mov
cmp
pop
rclb
pop
popa
ljmp
mov
and
mov
push
sub
out
mov
lea
movsb
mov
cmpsl
jo
mov
mov
hlt
jle
mov
incb
pop
negb
fsub
adc
inc
ds
sub
cmc
mov
push
lods
push
and
mov
lret
sub
rorl
mov
jle
mov
sub
gs
push
push
test
jb
mov
jge
fsubs
in
xor
and
push
xchg
xchg
sub
mov
les
mov
ljmp
xchg
mov
push
sbb
xor
aam
inc
adc
mov
out
mov
jp
loop
daa
xchg
nop
mov
xchg
jns
jle
dec
cwtl
inc
aas
fs
movsb
mov
lds
or
pusha
mov
sbb
adc
lret
clc
xchg
mov
das
cmp
sbb
cli
not
mov
jecxz
inc
xor
ret
cltd
fsubrl
or
dec
aad
std
dec
std
mov
jl
shrl
mov
inc
xchg
push
out
cwtl
hlt
mov
adc
sub
push
add
repnz
adc
mov
aam
mov
scas
jne
pop
sbb
xchg
push
mov
sub
mov
cltd
in
lret
loop
adc
mov
out
fs
add
push
pop
push
mov
cltd
push
insl
icebp
lret
sub
mov
push
jnp
sahf
push
loopne
movsl
aam
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
xchg
outsb
out
mov
wrmsr
pop
in
sahf
or
imul
lret
jle
mov
xchg
mov
or
clc
or
hlt
sub
mov
jmp
add
xchg
outsl
jae
sub
adc
dec
mov
pop
jecxz
push
dec
pushf
insl
test
scas
test
sbb
js
cmp
fistl
inc
jg
adc
outsl
dec
and
test
scas
jb
les
adc
dec
lret
loop
test
loop
xor
cmc
xchg
lahf
cmc
pop
jg
arpl
pop
imul
inc
mov
xchg
mov
xor
pusha
jl
sar
sub
mov
mov
mov
scas
pop
lock
mov
cmp
jae
jbe
in
fisubrs
jg
test
xchg
sti
mov
fimull
ror
data16
stc
and
stc
nop
out
test
lret
push
push
imul
pop
cmp
inc
sub
jb
pop
in
jecxz
adcb
mov
mov
testb
xchg
pop
and
stc
mov
adc
pop
scas
pop
xchg
das
clc
icebp
pop
add
scas
adc
cltd
into
fnsave
cs
xor
shrb
sub
adc
mov
pop
or
xbegin
pop
push
mov
and
sbb
adcb
xchg
fisubl
jmp
lret
jle
roll
inc
pop
xor
mov
jns
fidivs
push
xchg
sarl
pop
les
pop
ficoms
xchg
cmp
jb
inc
xchg
push
cmc
mov
mov
jns
push
subl
into
sti
jp
rcll
clc
test
js
sbb
push
out
push
push
and
dec
fstpl
or
addr16
div
add
jns
test
add
sarl
jl
shlb
jo
fsub
sbb
je
or
ja
repz
in
js
std
pop
mov
loop
mov
xchg
sti
jmp
insb
les
cmp
movsb
and
ffreep
lods
std
sub
js
jle
xlat
fdivl
adc
jno
push
mov
std
scas
and
xchg
cmp
mov
jns
js
and
adc
shl
jmp
add
pop
xchg
popa
mov
rcrb
gs
xchg
xchg
jns
pop
addl
push
mov
adc
add
mov
in
sbb
je
adc
and
push
out
out
adc
mov
popf
push
faddl
xchg
scas
and
xlat
jae
sub
push
pop
cmp
cli
xchg
or
repnz
js
jbe
and
fisubs
jl
int
lea
out
dec
test
inc
inc
xlat
or
ret
sahf
adc
jl
inc
inc
lea
loopne
xor
push
gs
sbb
push
sbb
adc
push
cmp
outsl
add
or
inc
cmp
push
or
cmc
mov
and
adc
xchg
add
xlat
push
adc
scas
or
push
dec
aas
mov
stos
js
imul
fstl
push
rolb
dec
hlt
mov
fsts
add
andl
test
jbe
or
ljmp
mov
shll
sbb
or
mov
sahf
mov
and
cmp
xchg
sti
or
faddl
xor
test
jbe
mov
mov
or
hlt
movsb
xchg
push
cmp
xchg
pop
scas
ret
mov
jb
movsb
adc
jg
lret
push
add
scas
mov
mov
fisubrs
lcall
sbb
test
fistps
dec
push
mov
icebp
jns
xchg
mov
lods
lret
inc
je
test
mov
les
mov
jbe
pop
cmp
xor
and
test
add
mov
and
xchg
das
mov
ljmp
pusha
xchg
nop
lret
push
mov
imulb
sbb
sbb
jge
adc
outsb
sbb
mov
lds
push
js
sbb
out
lcall
add
std
cmpsl
xchg
add
rcr
push
push
pop
pop
push
xchg
mov
xchg
das
mov
jle
sbb
lret
in
xchg
dec
es
lods
jns
pop
mov
cmc
gs
xchg
sbb
push
push
into
into
repz
test
je
jmp
push
sbb
push
pusha
mov
jbe
and
dec
ror
lcall
inc
mov
mov
out
test
scas
popa
mov
xchg
lahf
push
aaa
sbb
icebp
aad
dec
xchg
sets
adc
dec
loop
or
sbb
jge
arpl
scas
in
imul
adc
popf
add
or
out
fists
fs
mov
mov
jmp
xor
mov
xlat
mov
jg
ficoml
mov
unpckhps
or
pushf
cld
mov
add
pop
jle
aaa
cmp
cmp
pop
popf
scas
sbb
sub
ret
lds
push
cwtl
jmp
and
mov
lahf
test
leave
mov
dec
mov
add
cltd
mov
dec
ret
divb
adc
lret
call
imul
push
cwtl
mov
mov
xor
fdivs
in
loop
icebp
xchg
push
mov
mov
std
pop
mov
addb
aam
cmp
notl
clc
movsb
dec
jge
or
mov
cmp
sbb
adc
mov
mov
xor
icebp
ja
js
jle
mov
dec
movsl
fst
fldl
in
and
repz
xchg
push
clc
fistps
mov
cli
cmpsb
es
cwtl
add
pop
icebp
pop
mov
stc
pop
mov
mov
cltd
daa
pop
pop
cmp
cmpsb
or
out
inc
jnp
repz
popf
jle
cmp
imul
rcll
and
fs
test
mov
mov
xchg
aam
jnp
fsub
dec
mov
aam
shrb
and
lods
lods
in
cwtl
sbb
dec
jmp
popa
ds
dec
cmp
sbb
aad
pop
dec
mov
mov
incl
test
and
icebp
jbe
adc
cmp
or
nop
repz
lcall
pop
jecxz
mov
adc
sbb
test
adc
fmuls
repz
shll
subl
xchg
jge
pop
or
sbb
aaa
pop
lods
aaa
std
daa
adc
xchg
pusha
in
sbb
xchg
out
sbb
pop
xor
test
aas
mov
cmpsl
popf
loope
mov
std
mov
mov
cs
jnp
mov
dec
mov
repz
lahf
mulb
jle
nop
push
cld
mov
loop
cmp
push
fcomps
push
jecxz
mov
xlat
scas
mov
nop
adc
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
add
ja
arpl
xor
mov
mov
loope
les
ljmp
sub
std
and
js
xchg
dec
and
fisubs
cmp
ficompl
shll
or
add
jp
mov
jle
popa
sbb
mov
dec
xor
xor
or
xor
cmpsb
mov
test
aam
mov
je
sub
pop
dec
in
frstor
cmc
enter
sbb
ljmp
cltd
dec
pop
scas
dec
push
int
cld
jle
int3
and
lea
roll
out
add
sub
or
adc
ret
inc
cmp
int
enter
push
sti
mov
mov
stos
lahf
or
mov
dec
push
hlt
fldl
lods
push
std
fiadds
jge
sub
mov
cmpsb
pop
mov
iret
sbb
sub
fdiv
inc
out
mov
sbbb
adc
outsb
insb
sti
xchg
movsb
aas
ds
cmp
outsb
add
pusha
push
dec
test
rclb
lret
push
popa
jne
pop
inc
jecxz
aad
cwtl
fsubs
imul
push
sbb
or
jg
jbe
movl
aad
jbe
adc
mov
xchg
insb
addl
mov
pop
rcrb
std
test
stos
push
adc
push
xor
shlb
loopne
xor
and
stos
pop
dec
lahf
mov
sbb
jle
xchg
repz
or
and
jmp
inc
pop
hlt
jns
jp
pop
and
sbb
push
fsubrs
add
mov
scas
xor
jo
push
sub
ds
pusha
inc
in
dec
nop
xchg
rclb
hlt
mov
jl
mov
addl
icebp
jecxz
mov
arpl
out
out
lcall
jns
repnz
jns
push
out
mov
add
xchg
inc
adc
xchg
sbb
sbb
jecxz
cli
pop
std
jno
xchg
adc
ljmp
dec
lahf
dec
add
mov
test
loop
mov
sahf
mov
sub
in
loopne
fdivl
insl
fwait
dec
xchg
cwtl
test
lods
mov
xor
push
pop
imul
add
xorl
xchg
es
repz
or
push
mov
and
xchg
xacquire
xchg
xchg
lds
xorl
xchg
adc
mov
mov
push
dec
inc
inc
push
xlat
xor
inc
std
push
xchg
scas
mov
test
pop
or
sbb
pusha
pop
outsl
cmc
js
xor
subl
iret
lahf
or
addr16
adc
xchg
lret
or
cmpsl
sub
xor
jg
sbb
pop
mov
into
sbb
inc
roll
sub
stos
dec
lret
or
imul
push
cs
gs
push
or
stos
loop
jmp
in
fnsave
aam
ret
sub
xchg
mov
dec
or
iret
movsb
int
mov
add
fwait
add
cmp
gs
and
orb
outsl
pop
pop
mov
rorl
mov
sub
xor
popf
sbb
and
popf
in
test
fsubs
sbb
js
adc
fcoml
xor
in
or
test
cmp
out
inc
loope
dec
loopne
xor
inc
jo
loope
loop
lcall
mov
mov
xchg
sub
pop
push
mov
fld
push
ss
push
iret
ss
cmp
movsb
pop
imul
mov
mov
xlat
sbb
add
push
sub
jno
jle
mov
mov
enter
jge
mov
in
sbb
int
jno
rorl
or
inc
cmpsb
inc
iret
inc
movsb
mov
inc
maskmovq
imull
dec
fisubrs
imul
mov
fcompl
mov
mov
repnz
mov
in
sahf
pop
push
pop
lret
mov
lods
mov
js
outsl
cmp
pop
push
jnp
pop
pop
add
mov
xor
and
jl
pop
movsb
popl
js
pop
inc
ja
cld
or
cwtl
lds
push
movsb
les
mov
mov
sub
imul
test
fnsetpm(287
jp
dec
pop
outsl
testl
mov
cmp
fistpl
jne
in
sub
pop
loope
sbb
pusha
add
push
push
in
push
mov
xor
mov
out
cmc
mov
sbb
or
mov
adc
xor
cwtl
mov
or
scas
lds
push
jp
icebp
dec
xor
xchg
outsl
mov
in
rclb
lods
aam
repnz
xor
test
add
gs
cmp
dec
lds
in
mov
out
jmp
jmp
loop
cld
roll
fisttpl
add
jne
xor
in
je
sub
mov
mov
lock
sbb
dec
movsl
cli
mov
add
and
je
cmp
xor
pushf
adc
pop
push
cmp
and
cmpb
mov
int
fcoml
sahf
jmp
mov
mov
scas
mov
sub
jp
jl
dec
mov
push
mov
xchg
pop
jg
push
dec
in
mov
bound
aad
imul
push
pop
jbe
outsb
dec
test
xor
add
push
out
lock
aaa
pushf
lret
es
sub
stos
fs
mov
jg
in
ljmp
rol
mov
pusha
or
push
cmc
cmc
vorps
cld
or
mov
lds
jb
scas
loopne
scas
push
stos
mov
mov
push
pop
les
paddsw
pop
cmc
pop
sub
add
std
jae
dec
jne
pop
fidivl
int
pop
mov
or
lods
xor
sub
jb
lret
mov
push
push
push
hlt
and
dec
lods
sbb
stos
into
sub
rorb
ret
sbb
mov
inc
dec
rcll
dec
rolb
fisubrs
ja
pop
mov
outsb
lods
dec
xchg
xor
fmul
sub
daa
sub
pop
sub
cwtl
inc
leave
mov
mov
negb
sbb
enter
iret
movsl
fmuls
outsb
jecxz
and
and
jmp
xor
enter
jnp
mov
aas
push
add
pop
mov
mov
push
test
push
jne
adc
es
add
ss
mov
outsb
xchg
dec
sub
sbbb
cmpb
sarl
call
out
idiv
lds
jecxz
sbb
sbb
ret
dec
push
push
mov
and
sub
sbb
inc
and
xchg
sub
mov
popl
repz
dec
dec
sahf
fsubrs
and
lcall
repz
cwtl
dec
sub
rcrb
leave
jmp
lods
mov
cmp
xchg
insl
push
push
sbb
mov
xor
jmp
cmp
adc
mov
test
xchg
repz
xchg
mov
xor
nop
dec
mov
mov
push
fwait
insl
push
jns
mov
fsubr
mov
cmp
xor
push
stos
ja
lock
loop
bts
sbbl
popa
mov
pushf
or
sub
in
mov
cmp
aaa
jns
loop
leave
daa
push
out
and
add
push
outsl
inc
enter
sahf
popa
inc
insl
test
dec
pushf
insl
push
mov
outsb
in
xor
jbe
xchg
cmp
xchg
fcmovb
xor
adc
push
ss
out
dec
rcrl
cmp
lods
jnp
add
out
push
push
xor
push
test
jnp
ja
incb
push
addr16
aas
and
aas
jmp
push
mov
jl
mov
sar
addr16
mov
or
jg
jae
sbb
arpl
daa
xchg
pop
cwtl
cmp
mov
pop
stos
aas
lods
adcl
lahf
cli
xor
sbb
movsl
dec
addr16
lods
inc
pop
xor
xchg
pop
lea
add
lods
fdivs
cmc
mov
mov
sub
mov
lret
in
insb
mov
fnstcw
mov
test
ja
mov
mov
and
xor
ljmp
and
cmpsl
cmpsb
jl
xor
add
xchg
lahf
mov
in
add
cmp
push
inc
in
loopne
mov
shlb
mov
xlat
xor
rcrl
out
repz
sbb
sub
dec
jmp
fst
push
outsl
pusha
aad
clc
sub
sbb
mov
mov
xchg
pop
dec
pop
js
pusha
aaa
flds
dec
add
add
iret
icebp
sti
out
repz
mull
push
cmpsl
xchg
in
fninit
dec
gs
ret
sbb
loop
sti
in
push
mov
lods
inc
lea
mov
cli
xchg
leave
mov
xchg
fs
subb
ja
cmpsl
out
sub
in
adc
dec
in
jg
sahf
mov
mov
lds
inc
or
aad
mov
sub
cld
or
es
ds
ljmp
sub
data16
data16
test
or
test
imul
ja
in
hlt
mov
daa
push
pop
bound
mov
add
pushf
hlt
js
pop
jno
sahf
and
push
cli
out
jle
mov
outsb
sahf
mov
cli
daa
sbb
mov
bound
push
popa
pop
jae
das
cld
cmp
shlb
not
adc
in
shrl
cmp
lret
jl
xchg
adc
and
xchg
hlt
aam
xlat
push
jbe
lea
lret
pop
jo
inc
das
stos
push
xor
ja
out
je
cld
cwtl
jge
ret
outsl
movsb
in
ljmp
jo
xchg
aam
lahf
sbb
and
mov
mov
std
and
and
xlat
movsl
mov
xor
sbb
sub
xchg
cmp
push
aaa
adc
jl
mov
aaa
add
push
adc
cmp
cltd
stos
push
mov
inc
pavgw
pop
fnsave
lock
pop
dec
iret
dec
inc
les
cmp
cmpsl
or
aad
dec
jecxz
leave
fistl
mov
stos
xor
rcrb
inc
shll
or
adc
xor
push
push
mov
xorb
mov
push
leave
dec
dec
jbe
mov
add
jecxz
inc
jmp
mov
outsb
xor
in
mov
rcrl
bound
mov
add
dec
lds
cwtl
fldl
fidivrl
test
loope
add
add
and
or
jge
xorl
enter
clc
jno
jne
adc
rolb
mov
fisttpl
jnp
jmp
insl
sub
xlat
dec
rorl
jns
fisttpll
bound
adc
insb
out
pop
negb
and
xor
inc
aad
cli
jo
test
std
pop
dec
ljmp
out
in
fstpl
dec
int
inc
stos
xor
or
stos
imul
cs
inc
dec
popa
adc
mov
xor
les
sbb
aas
sub
test
inc
cmp
sbb
jbe
push
loopne
icebp
sahf
sub
push
sbb
clc
push
rcll
pop
push
stos
jg
leave
xor
push
jecxz
mov
xor
das
mov
ret
ffree
adc
mov
es
jg
incb
out
lret
cltd
out
fnstsw
push
inc
sbb
imul
cmpsb
sbb
test
jo
call
pusha
loop
loope
cli
je
adc
movsl
or
leave
arpl
je
add
rorb
push
pushf
add
gs
mov
jae
jbe
cmp
jbe
cmp
or
sti
gs
shrl
jmp
sub
xor
push
add
mov
rorl
xlat
sub
adc
jnp
ss
sbb
cmpsl
int
inc
int
inc
adc
sbb
lcall
inc
iret
addr16
es
pop
and
jns
jge
test
in
xchg
adc
cmp
push
inc
jle
cmp
std
mov
jmp
xor
sbb
add
or
push
xor
xor
bound
fwait
rolb
loop
stos
int3
cmp
adc
mov
xchg
repnz
mov
cmpb
add
xchg
in
adc
and
ret
bound
sbb
movsl
out
inc
imulb
mov
int3
mov
std
mov
out
jo
lret
cs
xchg
test
sbb
jg
ret
scas
add
cmpsb
dec
adc
lret
add
inc
push
pop
cmp
inc
lcall
into
inc
in
xrelease
repnz
out
jo
adc
push
cwtl
into
popf
pop
out
fs
inc
or
stos
out
mov
jbe
ja
mov
std
dec
sar
cmpsl
xor
mov
xor
lret
jb
xor
popf
lea
aam
adc
rcrl
mov
into
ss
add
mov
mov
lds
lods
lret
inc
in
cmpsb
out
loopne
inc
xchg
xchg
insl
and
rcrb
in
jo
ret
mov
ret
mov
pop
fmuls
hlt
inc
mov
sbb
jne
ror
sbb
cmp
sub
icebp
call
scas
ja
push
scas
jne
imul
hlt
sar
jle
mov
pop
dec
jle
adc
cmpsl
shl
xor
adc
mov
xchg
scas
sub
xlat
cmpb
dec
sub
jl
dec
jmp
and
leave
out
scas
dec
int
fninit
push
lahf
stos
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
push
mov
repz
mov
gs
rorl
pop
aas
syscall
mov
push
push
addr16
lods
ljmp
adc
scas
mov
xor
scas
adcl
jp
fimull
or
sti
push
push
pop
sub
or
dec
push
cmp
movsb
push
es
ljmp
or
or
cmp
push
adc
mov
jp
cwtl
cwtl
fsub
cmc
out
pushf
jae
push
mov
xor
or
jle
mov
jmp
mov
jb
mov
popa
pop
andb
xchg
mov
pop
cmpsb
into
and
fwait
arpl
sti
scas
pushf
add
in
mov
lret
xchg
mov
shlb
fcmovbe
and
mov
lret
sbb
mov
pop
shll
cmpsb
cmp
pop
lcall
xchg
dec
sub
mov
cs
push
imul
rcrb
jne
pop
cs
jno
push
jmp
or
and
cli
push
inc
mov
shll
repz
dec
pop
test
push
sbb
mov
dec
popl
imull
cmp
dec
imul
xchg
mov
pushf
xchg
mov
lahf
mov
in
es
dec
sub
jbe
std
adc
mov
or
xchg
add
dec
insb
mov
rcl
in
cwtl
cld
xchg
xchg
pop
or
dec
lods
insb
and
pop
outsb
stc
repz
cs
and
int
shrl
jl
aaa
in
mov
push
ret
sbb
cli
stc
les
add
adc
and
fcoms
pushl
mov
jae
loop
pop
mov
pop
xchg
mov
xchg
mov
rorl
popa
xchg
or
fs
inc
ret
shrb
xor
adc
es
and
xchg
xor
push
mov
vmaxpd
cmpsl
out
je
jl
xor
loope
test
shl
popa
mov
nop
jb
xchg
mov
outsb
pop
nop
shlb
addr16
jp
in
ret
dec
mov
push
repnz
push
shlb
out
mov
cwtl
cmp
cli
cmc
loopne
push
mov
mov
push
mov
push
lds
add
sbb
in
aad
pop
ret
add
lods
jmp
cmp
rclb
and
push
mov
add
sti
mov
loop
xchg
jnp
cwtl
xlat
mov
iret
push
shll
sbb
fcomps
dec
lret
or
popa
les
cltd
sti
cwtl
pop
bound
es
sbb
cmpsb
iret
sub
aad
xor
rcrl
clc
cli
or
movsl
cmc
jl
jp
mov
sub
pusha
and
cmp
push
in
pop
lods
mov
call
xchg
call
push
lods
add
cmp
data16
aaa
ds
mov
out
mov
pop
xchg
outsl
mov
lret
pop
add
mov
popf
les
pop
sti
int
add
ss
sbb
inc
xor
jne
imul
data16
mov
inc
mov
xchg
jp
mov
mov
mov
pushf
test
cmp
pop
dec
jle
jge
shll
and
fs
lock
cmc
push
cmpsb
adc
jb
push
mov
ss
xor
popa
insb
mov
addr16
rorl
cmp
and
mov
gs
mov
mov
add
push
mov
shll
pop
push
jae
movsb
repnz
repnz
cmp
fstpt
arpl
testb
in
push
int3
fwait
imul
orl
das
xor
icebp
jns
push
xor
xor
icebp
in
imul
in
xchg
std
std
dec
scas
mov
insl
and
inc
les
mov
and
in
repnz
loop
repz
in
jbe
repnz
mov
insb
inc
ror
mov
filds
scas
rol
incb
movsb
ficoml
or
rcr
inc
add
jp
xor
cmp
shlb
adcb
sub
jno
nop
xchg
mov
repnz
sub
les
aas
lcall
push
and
in
repnz
rorl
bound
rclb
jbe
ss
add
fcomps
fcomp
repnz
fisttps
loopne
icebp
das
int
mov
cs
hlt
std
adc
call
inc
mov
pop
lret
sahf
std
sbb
mov
mov
neg
pop
arpl
movb
scas
dec
sbb
add
cs
add
mov
mov
or
jl
dec
dec
push
popa
cli
mov
add
pop
dec
je
ss
push
mov
cwtl
pop
push
xor
sub
push
fisubrs
cmp
dec
call
sbb
fsubrs
int3
add
pop
sahf
subb
jmp
int
mov
sub
cmpsl
aaa
out
lds
add
sahf
jbe
pop
ror
imul
or
sub
mov
scas
negl
popa
pop
or
push
iret
mov
test
push
sub
mov
div
mov
and
push
pop
imul
dec
xchg
xchg
subl
jne
and
aas
pop
sbb
lods
sub
mov
shlb
lods
cltd
outsl
sahf
xchg
inc
nop
xor
cs
jl
aas
adc
jmp
inc
rcl
outsb
loope
xchg
xchg
xchg
mov
push
xlat
imul
xor
mov
cltd
pop
sbb
int3
dec
add
nop
fldl
andb
pop
clc
cmp
test
pop
or
into
nop
lcallw
cltd
push
xor
push
xor
roll
aas
cmp
cmp
jnp
or
inc
loopne
and
and
push
sbb
xor
xchg
and
aas
outsb
arpl
sub
pop
aam
sbb
xchg
loop
push
sub
pop
mov
push
popf
in
push
mov
je
xchg
aaa
adc
add
pushaw
mov
mov
inc
loope
xlat
mov
nop
dec
mov
stos
pop
aam
repnz
push
mov
dec
push
out
and
in
test
rorb
or
pop
inc
mov
sub
ret
sub
lahf
add
cmpsl
mov
push
shlb
pop
in
dec
or
dec
rcr
push
daa
xor
push
sub
jle
pop
mov
gs
ja
inc
push
pop
inc
sti
sub
test
cmpsb
lea
out
clc
mov
inc
sub
add
lea
or
inc
pop
push
rcll
cmp
or
stos
xor
cmp
rclb
cltd
lcall
in
icebp
fdivs
loop
jbe
inc
cmpsl
dec
shl
je
cmp
loop
jb
xchg
aam
test
lock
iret
icebp
sub
mov
jmp
aaa
or
std
dec
fcmovbe
scas
loopne
lods
adc
mov
push
sub
sbb
jmp
ljmp
sub
out
push
lret
aam
ja
add
pop
pop
enter
or
add
mov
out
rcrl
xor
mov
test
jge
inc
packuswb
push
inc
idivl
das
cli
push
add
lahf
xchg
add
cmp
mov
xchg
rol
xchg
fisttps
cmp
inc
js
ficoms
fldl2e
jecxz
adcl
mov
testb
rcll
pop
fadds
js
jno
cld
fists
rol
adc
pop
sub
mov
shrl
sarb
cmpsl
mulb
out
mov
sahf
imul
dec
mov
mov
mov
pop
movsl
insb
repz
rcr
lcall
sub
pop
cli
or
movsb
add
inc
cmpsl
mov
or
cmp
cmp
loopne
popa
lock
les
sti
cmc
data16
ret
xchg
xchg
enter
idivl
sub
cmp
xchg
testb
mov
call
jecxz
inc
push
ficompl
xor
and
fwait
loopne
movsl
imul
pop
scas
mov
dec
popl
add
test
in
or
insl
mov
lcall
clc
sub
in
sbb
bound
adc
pop
stc
push
jle
dec
rclb
jecxz
and
dec
popf
lret
inc
shl
stos
jg
lret
rclb
repz
lret
es
jmp
cli
iret
ret
imul
jg
adc
cmp
imul
lret
pusha
js
lahf
shll
fmull
xchg
mov
pop
mov
and
and
mov
insb
fidivrs
fiadds
pop
fscale
sub
test
xchg
out
push
insb
or
ja
cmc
insl
push
add
jb
xchg
jle
inc
icebp
dec
inc
mov
and
inc
jne
int3
lea
lahf
sbb
pop
negb
cmp
jp
push
icebp
xchg
mov
mov
mov
lock
dec
jmp
mov
arpl
mov
movsb
js
mov
inc
mov
fs
lahf
sub
outsl
stos
sar
bound
sahf
inc
push
nop
cmpb
sbb
jnp,pn
inc
pop
mov
sub
js
jmp
lret
adc
xor
mov
jno
andl
cmp
fdivs
ss
xchg
test
mov
jmp
and
aaa
push
add
insl
inc
dec
outsb
lods
into
jnp
mov
push
jecxz
stc
lods
fiaddl
dec
fisubrs
pop
mov
xchg
cli
mov
cld
mov
cltd
rorl
fisubl
mov
xchg
lods
orb
jnp
dec
adc
aam
xchg
scas
stos
sub
fistl
adc
loop
add
mov
stos
dec
adc
in
out
mov
jmp
jnp
repz
insl
movsl
inc
dec
movsl
dec
pop
pop
cmpsl
mov
cmp
adc
out
xlat
ds
and
xor
or
cmpsb
lret
mov
sub
cmpsl
aam
push
mov
sbb
enter
mov
adc
mov
movsb
cmp
inc
pop
mov
sbb
fiadds
xchg
jp
add
cli
sbb
hlt
es
bnd
jmp
xchg
shl
sbb
shll
into
or
adc
sbb
adc
int3
leave
rclb
mov
outsb
data16
dec
iret
bound
je
fs
add
push
inc
fsubrl
fs
into
pop
add
xchg
or
pinsrw
ss
into
je
lock
jno
jg
jle
sahf
mov
icebp
iret
scas
icebp
scas
and
ja
in
cmp
mov
sub
mov
rcll
push
scas
or
xor
push
dec
js
call
andb
and
push
lahf
mov
clc
hlt
in
inc
fucom
jne
fmull
xchg
cmpsb
test
mov
xchg
mov
jmp
daa
shr
jg
pop
sahf
mov
insl
repnz
inc
push
xlat
adcl
pop
cmpsl
xor
test
and
sub
xchg
ja
cmp
sbb
or
sahf
pop
mov
mov
xor
push
sub
push
push
inc
sub
in
mov
idivl
sub
xor
addr16
jbe
xchg
inc
adc
lcall
sub
je
mov
shl
mull
nop
and
sub
push
adcb
repnz
lds
inc
lahf
xchg
xchg
adc
sbb
push
orb
push
push
xor
out
arpl
mov
cli
fwait
sub
scas
pop
test
ret
outsb
fnstcw
out
or
icebp
mov
adc
mov
mov
cltd
push
es
sub
inc
fcoms
dec
outsl
pushf
pop
inc
cmp
movsb
lods
mov
mov
jo
jmp
ljmp
xchg
add
call
les
movsl
fdivr
stos
jmp
cmp
repz
in
cmp
rol
out
cltd
mov
or
push
jns
cmp
pusha
enter
add
inc
ja
push
push
dec
test
xchg
jb
jge
movsl
je
xor
xchg
ja
pop
jle
mov
addl
clc
leave
inc
sti
xchg
sub
aaa
dec
sub
test
insl
jae
int3
out
shll
pop
shlb
push
dec
sbb
xchg
fdivrl
mov
sahf
jns
dec
mov
ret
pusha
xchg
mov
out
and
mov
out
inc
and
inc
outsb
std
shlb
adcb
aam
push
pop
mov
jae
push
sbb
jg
cli
xchg
out
in
loope
sub
dec
mov
xchg
sahf
pop
mov
testl
dec
mov
stc
cmp
jns
cs
pop
ja
mov
cmpb
push
adc
pop
or
pusha
jge
xor
push
mov
pusha
daa
repz
lcall
movsb
cmpsb
mov
imull
xchg
ret
test
mov
lret
push
mov
jo
xchg
xor
add
pop
adc
mov
jb
sbb
mov
inc
inc
ds
xchg
jle
or
jae
int
and
mov
ret
rcr
je
cwtl
adc
jno
cmp
xchg
inc
pop
aam
mov
push
sub
pop
adc
das
dec
pop
icebp
push
mov
xchg
loop
or
jmp
cld
cmp
inc
loope
mov
je
xchg
sbb
add
push
sti
ret
sub
scas
sahf
sbb
das
jge
push
push
clc
mov
lods
sbb
xchg
jg
icebp
ret
mov
shll
shlb
aaa
mov
mov
or
cmp
pushf
jno
and
shll
xchg
or
daa
cmp
aam
prefetch
or
in
dec
loop
adc
mov
push
call
mov
gs
mov
add
push
pushl
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
lcall
ja
jnp
mov
xor
mov
cmp
and
fiaddl
mov
sarl
outsb
and
adc
shlb
pop
in
andb
test
pushf
repz
mov
jbe
jnp
mov
clc
pop
outsb
stos
push
or
add
orb
cli
outsl
cmc
jg
xchg
rcrb
pop
pusha
clc
push
mov
jp
addr16
das
cmp
xor
inc
jne
or
imul
arpl
mov
mov
sbb
sbb
mov
lret
test
dec
dec
jmp
daa
xchg
xchg
mov
out
cld
ds
push
add
std
repz
sub
cli
orl
dec
mov
mov
mov
lds
into
imul
int
add
sbb
jbe
sbb
mov
cmp
outsl
lds
decb
lret
test
add
push
clc
test
test
cmc
jge
jae
stos
cmp
arpl
inc
outsb
ret
sbb
test
jns
mov
push
sub
xor
ljmp
shl
iret
stos
xchg
or
mov
inc
mov
loope
lcall
xchg
lds
divb
jb
les
mov
cli
testl
dec
or
sub
dec
mov
sete
negb
pusha
push
mov
aaa
dec
bound
xor
sub
xchg
sbb
fistpll
mov
test
pop
sub
popa
inc
push
adc
cmp
xor
jmp
out
cltd
sub
and
mov
push
pop
stc
dec
lcall
scas
ret
jl
xchg
in
xchg
fldcw
pop
in
inc
sbb
inc
out
test
outsl
cmp
mov
fldt
mov
cmp
sub
or
mov
movsb
rcll
or
xor
fs
cmp
dec
dec
and
test
fadd
xchg
xchg
xchg
xlat
pusha
mov
xor
cmp
jmp
mov
in
mov
repnz
popf
mov
or
jmp
xchg
mov
shlb
or
outsb
mov
or
aaa
jb
mov
push
mov
lock
jmp
movsb
daa
dec
cmp
xchg
mov
or
add
imul
add
mov
push
jo
push
cmpsb
sti
push
jno
je
leave
or
dec
adc
pop
inc
in
sub
push
mov
lret
pop
jp
push
ret
or
sarb
fadd
mov
icebp
fs
adc
subb
mov
ss
jecxz
sbb
dec
xor
call
xor
adc
imul
xor
jnp
enter
xchg
cmp
pop
or
in
outsb
repz
mov
aas
inc
enter
xchg
aam
pop
test
lods
imul
xor
outsb
rorl
int3
pop
sub
jns
shlb
fs
in
lret
jno
push
push
jbe
pop
testl
out
pop
dec
mov
and
imul
mov
jns
xor
mov
popf
mov
mov
insb
or
push
sbb
mov
pushl
pop
jge
imul
aad
dec
scas
inc
sbb
cs
and
loop
mov
sbbb
xor
pop
cltd
xchg
adc
add
cmc
aaa
mov
test
lods
lea
ror
add
and
xchg
jecxz
mov
xchg
adc
mov
lds
xlat
stos
push
scas
ror
mov
and
cmpsl
arpl
mov
xchg
push
icebp
jecxz
in
ds
cmp
imul
xor
sbb
aad
jg
push
inc
insb
mov
sbb
push
sbb
mov
sbb
jl
jae
mov
icebp
addr16
sub
sbb
inc
inc
mov
pop
out
fnstenv
scas
mov
mov
loop
in
push
mov
jns
je
fldt
pop
adc
mov
ljmp
adc
scas
nop
aam
hlt
sub
pop
mov
push
rorl
and
mov
mov
int
bound
arpl
cmp
daa
jnp
cwtl
pop
lods
add
jbe
pushf
fwait
lahf
loop
insl
incl
push
xor
pushf
repnz
repnz
das
adc
sub
add
and
fs
fsub
popf
mov
int3
cmpsl
xchg
dec
add
lds
sahf
outsl
push
sub
pop
push
repnz
mov
inc
mov
aas
outsb
test
scas
call
jecxz
pop
popf
xchg
aaa
fisttps
lcall
push
pop
imul
mov
adc
mov
cmp
cmc
sbb
push
test
jae
or
enter
ljmp
in
dec
xor
inc
test
call
in
fldl
dec
sbb
ret
mov
mov
ficomps
insb
jge
into
jb
lahf
call
hlt
test
adc
and
mov
adc
ds
stos
jmp
mov
imul
mov
add
and
lds
lahf
xor
jl
cltd
popa
mov
fisubl
mov
outsl
sbb
into
enter
daa
mov
push
fcomps
mov
fs
pop
bound
aam
jecxz
and
pop
call
divb
aad
jns
push
inc
pusha
testb
in
push
sbb
mov
gs
mov
adc
cmp
nop
adc
lcall
xchg
inc
adc
pop
cltd
lods
scas
into
xor
pop
outsb
inc
lds
ret
loope
sub
xlat
xor
out
push
aad
subl
adc
lea
cmp
aas
lods
xor
icebp
dec
ja
jns
jo
pop
fwait
xchg
mov
dec
push
pop
insl
loope
cmp
jle
mov
adc
nop
loope
in
push
cmp
movsb
je
mov
push
dec
inc
nop
loopne
ret
jno
pop
sub
or
inc
jp
adc
jecxz
lods
rorb
lods
pop
or
inc
mov
inc
bound
mov
jns
sub
clc
ret
mov
int
sub
ret
leave
sub
fwait
mov
add
pop
leave
mov
fcmovbe
mov
leave
xchg
inc
dec
outsb
insl
jg
das
mov
cli
fnstcw
jb
cmp
xlat
insb
outsl
in
mov
lcall
pop
movsl
mov
into
inc
mov
popf
push
and
jle
test
stos
loop
iret
repz
aad
mov
dec
jns
loope
popa
addr16
cli
push
mov
cltd
and
pop
cltd
adc
bnd
push
cmp
mov
testl
inc
cmpsl
les
inc
stos
hlt
loope
fcomi
lds
dec
fs
mov
mov
xor
or
sbb
dec
xchg
ret
clc
push
jmp
push
jbe
lods
mov
lahf
ja
mov
insl
icebp
cwtl
sub
xchg
ja
xor
testb
add
jmp
jmp
imul
scas
sbb
xor
test
push
mov
adc
xchg
mov
nop
jnp
das
inc
out
adc
rol
ja
cmp
mov
roll
aaa
xlat
cmp
adc
jge
decb
fiaddl
fistl
add
imul
and
jge
inc
sub
mov
stos
add
stos
imul
adc
xchg
stc
jbe
inc
mov
out
fildl
cmpl
cld
inc
ja
rcrb
sub
jge
clc
xchg
mov
push
outsb
out
outsl
movsl
jge
sub
addb
fucomi
sub
dec
cmpsb
adc
shll
inc
lods
mov
scas
sub
xor
add
mov
inc
sub
cmp
movsl
inc
or
or
jo
mov
in
ja
aad
jae
mov
pushl
jbe
fdivs
ret
jo
dec
stc
push
mov
sbb
mov
in
mov
in
aad
fisubrs
jo
rcrl
inc
pop
add
rcrb
loop
cs
mov
fwait
mov
dec
inc
xchg
aaa
das
pop
scas
out
adc
xchg
pop
xchg
aad
add
lret
jmp
std
js
or
xchg
scas
mov
dec
rcll
pop
pop
fwait
pop
icebp
addb
cmpsl
daa
xlat
test
sub
push
sub
mov
mov
cld
dec
cs
popf
adc
scas
jmp
mov
int3
inc
jbe
js
xchg
lock
fldl
mov
sbb
jb
fcmovnb
sbb
xchg
jl
mov
mov
mov
stc
call
fdivr
add
es
pop
lods
push
inc
js
ja
stos
rolb
pop
push
pop
lods
std
inc
inc
pushf
add
pop
andl
jne
aaa
scas
mov
push
stc
cltd
inc
cli
test
jae
sbb
jl
and
orb
sbb
mov
pushf
mov
jecxz
pop
and
mov
inc
sub
jl
xor
into
and
adc
jno
or
fdivr
push
lds
imul
mov
andb
popf
ret
imul
cmp
sarl
repnz
scas
jge
sbb
insb
push
xor
sub
loopne
add
aaa
in
test
jp
popa
shll
jo
cmp
pop
shll
push
leave
pop
leave
mov
push
popa
repz
push
icebp
xchg
xchg
scas
scas
cmpsl
cmpsb
divl
stos
nop
push
int
and
and
pop
jmp
add
pop
cmp
shlb
sti
xor
cli
ds
inc
xor
mov
aaa
mov
dec
fs
add
int
cmpsl
andl
or
inc
xchg
adc
je
jl
xchg
inc
popa
cmp
xor
jecxz
and
pushf
je
cmc
sub
gs
push
popf
xchg
push
outsb
add
jae
outsl
or
push
xchg
test
mov
arpl
addb
jnp
cmp
dec
inc
fcoms
jp
mov
inc
insb
jae
mov
ret
sbb
scas
aam
xor
hlt
cmpsl
pop
dec
call
les
sbbl
mov
push
push
roll
cmp
sbb
cmp
in
mov
fsubrl
dec
std
mov
ja
ret
icebp
lret
push
fwait
data16
and
sbb
rcll
cmc
mov
insb
cmp
mov
pop
sbb
mov
pop
lods
movsl
in
jns
push
cld
cmp
dec
out
int
in
imul
sub
or
sub
xlat
decb
test
adc
sub
add
popa
push
and
movsb
mov
push
dec
ss
cs
push
jmp
xchg
xor
mov
fisubrs
sub
fimull
je
cmp
sti
xchg
or
in
push
out
xor
xchg
in
jl
mulb
cli
push
jns
loopne
jle
mov
rorl
pop
aas
mov
jo
cltd
in
cs
mov
sub
cmpsb
adc
cmpsb
add
aas
out
sbb
scas
jne
sti
jle
loope
sub
xchg
cmp
sub
loop
mov
loop
js
gs
fs
cmc
outsb
mov
andl
sbb
adc
jge
add
push
rolb
lret
jbe
mov
lea
add
inc
in
insl
dec
mulb
mov
xchg
iret
lret
movl
add
and
adc
mov
loope
enter
mov
xchg
cltd
sub
sub
sub
mov
sahf
movsb
sub
test
mov
xor
cmp
and
in
and
xor
ds
rcr
add
in
adcl
popf
xor
fsubs
cmpsb
xchg
repnz
fcoms
inc
push
out
insb
sbb
push
and
fisttpl
int
mov
mov
dec
lcall
adc
fwait
mov
mov
das
add
pop
jnp
invd
fcomps
mov
push
or
and
pop
lods
rorl
gs
imul
jmp
fildl
pop
scas
cli
dec
xor
push
ret
jge
bound
inc
mov
jo
in
ret
lahf
cmc
and
pop
adcl
mov
push
or
ror
mov
aaa
mov
mov
cmpb
test
lods
mov
shlb
cmp
jae
fidivs
mov
insb
pmaxsw
rolb
jae
cld
xorb
sbb
test
mov
jb
push
adc
loop
icebp
out
mov
gs
lret
mov
push
cmpsb
cld
xchg
sbbl
loopne
jge
test
test
pop
roll
pop
int
aaa
hlt
call
shlb
lret
cld
cld
xchg
ja
pushf
aad
call
out
sub
xor
hlt
test
sub
and
cmc
or
fs
subl
mov
js
ss
ret
jb
pop
in
cmp
lock
mov
jmp
icebp
adc
mov
aaa
cmp
loopne
mov
ja
out
adc
insl
loop
push
push
cld
js
xchg
sub
mov
add
or
cmp
cmc
movsl
clc
je
add
je
add
stos
xor
xchg
imul
xchg
mov
xchg
addr16
cmp
repnz
push
cmpsb
xor
and
pop
call
daa
aas
mov
sbb
pop
mov
mov
xchg
ja
sbb
adc
leave
adc
mov
jno
pop
push
rcrl
jl
mov
in
sbb
in
aaa
sbb
fdivs
sbb
cs
mov
ljmp
out
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
cs
dec
push
lcall
rcrb
iret
lahf
ljmp
jle
call
ret
arpl
call
dec
push
bts
cmp
gs
sbb
adc
out
negl
test
roll
addr16
jl
faddl
push
fwait
mov
loop
ljmp
aad
fldz
cmp
movsl
icebp
push
dec
loopne
sbb
pop
mov
xor
jecxz
mov
xchg
test
dec
or
ffreep
les
push
inc
divl
push
jb
dec
mov
jp
jae
je
add
in
test
adc
mov
cmc
negl
das
pop
add
adc
inc
ror
lds
mov
cmpsl
jae
data16
xchg
imul
add
or
sub
shll
adc
jmp
bnd
int3
sysexit
inc
idivb
lahf
xlat
fstl
mov
sub
pusha
jbe
sysexit
aaa
sahf
int
xor
push
jp
xchg
cld
mov
test
jnp
sbb
scas
hlt
movsl
das
lcall
sbb
dec
jl
jbe
addr16
std
mov
dec
pop
add
dec
dec
and
push
popa
pop
jb
pextrw
test
mov
imul
mov
inc
ret
and
outsb
dec
adc
mov
fwait
std
mov
out
out
or
rcll
andl
out
outsb
imul
push
arpl
ret
dec
rclb
xchg
push
mov
xor
and
push
cld
lock
cmc
push
adc
and
xor
push
test
lods
aaa
xchg
sub
jbe
and
jp
addl
pop
fimull
cmp
push
lahf
mov
xor
adc
daa
sbb
sti
xor
pop
cmpl
push
xchg
lods
mov
lcall
cmp
addr16
fiadds
inc
mov
xchg
mov
ficomps
punpckhbw
ds
stos
jge
sahf
ret
pop
js
addl
jge
xor
cwtl
mov
jl
int3
add
leave
pop
pop
imul
mov
dec
fcmovu
mov
ret
pop
imul
inc
mov
scas
mov
arpl
adc
cmpsl
adc
mov
sub
ret
xchg
lretw
test
inc
pop
sbb
xchg
lock
lods
mov
gs
pop
daa
dec
xchg
cmpsb
andb
dec
nop
inc
and
cltd
mov
pop
push
pop
push
out
aad
out
and
test
jmp
imul
ss
or
inc
daa
mov
dec
xor
ja
mov
lret
jbe
fidivrs
push
mov
js
mov
shll
cmc
out
fadd
or
mov
ret
xor
or
lcall
and
mov
inc
mov
imul
xchg
dec
daa
in
mov
jge
loop
mov
xor
mov
adc
daa
xor
and
jo
jge
xchg
xchg
cmp
cmp
push
xchg
push
aam
je
sar
outsb
jbe
jns
fmuls
push
mov
fnsave
leave
xor
mov
out
lock
out
jle
jb
out
mov
cmp
mov
dec
jb
test
mov
jo
push
push
fbstp
add
pop
dec
shl
mov
cmp
dec
xchg
mov
sarb
dec
addr16
mov
mov
dec
mov
mov
xchg
std
xor
xchg
enter
push
shll
test
sbb
adc
ret
mov
lret
insl
dec
cs
dec
iret
popf
insb
scas
mov
adc
aas
jmp
push
mov
enter
aas
das
sbb
adc
fidivs
lods
dec
test
jbe
pop
cmc
lcall
xor
mov
fs
cmc
pop
push
dec
jo
and
or
xchg
insl
ljmp
std
jge
std
enter
loope
cmpsb
mov
push
mov
inc
pop
sub
add
loopne
insl
imul
in
push
daa
in
inc
add
aad
sub
bound
add
push
mov
jecxz
jno
cmp
mov
mov
xchg
adc
inc
or
loop
setb
pop
sub
lret
cmp
mov
pop
loop
cmp
pop
mov
das
aad
clc
in
xor
sti
fdivrl
out
test
push
lret
sub
imul
popa
or
lea
push
rcl
int3
inc
jle
mov
imul
mov
loop
sbb
fstpl
push
and
xchg
shr
insl
pop
mov
fbstp
xchg
and
icebp
push
push
ss
adc
fsubl
int
jb
pop
cli
jb
sbbl
insl
iret
mov
or
cli
xorl
add
jns
repnz
int
jo
xchg
es
out
lret
push
jmp
lods
sub
lock
ds
lds
pop
ss
rorb
popf
and
cmpsl
lock
pop
aad
push
add
ret
out
rcrb
add
push
loope
psraw
cli
xor
fchs
push
push
sbb
push
mov
nop
imul
and
jp
or
push
or
mov
jb
imul
lret
ret
and
xchg
push
imul
pop
clc
xchg
mull
in
outsl
sub
xor
fst
jb
push
imulb
xor
xchg
add
subl
sbb
or
xchg
mov
das
push
and
lds
mov
cmc
dec
loopne
sti
adc
fsubrp
inc
mov
sarb
jo
push
movsl
mov
addr16
imul
xchg
int
push
xchg
shll
mov
add
repz
inc
stos
loope
ds
xchg
stos
incb
xor
fwait
adc
push
insb
mov
movsl
pushf
and
hlt
sub
sbb
sbb
sub
inc
add
lret
out
ljmp
rorl
push
testb
and
jle
mov
insl
orb
jne
xor
mov
shr
test
mov
lcall
daa
orb
dec
ret
testl
xchg
jbe
jns
mov
xchg
adc
shll
jo
adc
cmp
lea
adc
pop
out
pop
fistl
dec
push
pop
jle
fidivrs
cmp
incl
mov
pop
xorl
insb
cmpsl
fwait
add
xchg
jge
mov
cmp
push
divl
mov
dec
test
jmp
int
test
aas
stos
decl
or
or
andb
sti
mov
mov
ds
js
out
test
fistpl
stc
hlt
dec
je
push
adcb
dec
loope
or
mov
fstps
int
addr16
sub
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
and
js
mov
ja
lret
sbb
push
xchg
add
add
movsl
cmp
shrb
xchg
repz
dec
sar
insl
iret
sbb
lret
xor
cmpsb
mov
push
mov
pop
ret
mov
outsl
xor
inc
shrb
jae
and
shr
in
aas
cmp
pop
sti
sub
shll
iret
cld
cld
shl
add
push
outsb
arpl
dec
insl
xchg
ret
sahf
fnstenv
icebp
sbb
jnp
mov
or
sub
xchg
lods
cmc
push
sub
add
sub
xor
scas
mov
pop
xchg
inc
jo
das
dec
stc
mov
mov
xlat
lret
mov
lret
mov
popf
jns
ljmp
mov
mov
mov
mov
repz
adc
gs
push
mov
aas
cmpsl
imul
sbb
sbb
jmp
pushl
jle
stos
xor
das
bound
repz
xchg
jg
movsb
dec
arpl
pop
mov
call
jno
mov
popa
and
adc
mov
add
xorb
sbb
sub
pop
add
sti
fwait
fs
lods
jo
iret
rcl
je
bound
imul
cmp
pop
and
xlat
loope
inc
or
pop
hlt
mov
je
mov
jl
rclb
jae
lahf
cmp
mov
addr16
ja
or
in
push
push
push
or
dec
jecxz
test
push
mov
xchg
xchg
lret
mov
neg
call
rcrl
mov
test
fcmovnu
int3
pop
ja
add
ret
js
xor
leave
int3
pusha
xor
repnz
nop
xchg
ja
xchg
cmp
lahf
movl
rclb
es
loop
sub
ds
mov
xchg
mov
mov
jbe
mov
shl
mov
testb
mov
or
push
cmpsl
lret
int
lods
shrb
aas
mov
dec
fcmove
push
lods
cmc
shll
adc
mov
pop
repz
fld
pusha
outsl
icebp
xchg
sbb
xor
cmp
stos
adc
mov
in
jo
inc
adc
fistpl
xlat
and
xorb
shl
hlt
cs
dec
popf
dec
das
add
pop
cld
xchg
jbe
sbb
je
or
jecxz
icebp
mov
out
test
or
jl
enter
rcl
mov
sbb
mov
ficoml
test
shll
jb
mov
jmp
jns
ret
stos
push
and
idivb
sub
fidivrl
rcr
mov
jp
add
hlt
sub
and
or
pop
pop
insl
and
jbe
jp
add
insb
and
test
int3
sbb
int
mov
pop
xor
ss
or
cmpsl
mov
aad
rolb
push
cwtl
bound
mov
xchg
in
xorl
mov
mov
cmpsb
cltd
test
rcrl
imul
lods
ret
adc
out
pop
mov
ret
rorl
loop
cmc
rorl
addr16
cmpsl
mov
jle
pushf
subl
fnsave
das
and
inc
cmpsb
outsb
and
aas
push
inc
mov
insl
jg
xor
fstpt
push
pop
loopne
stos
lock
fwait
mov
jo
mov
aam
andl
pop
scas
pop
push
out
test
xchg
dec
clc
or
rolb
sbb
imul
sub
out
add
and
add
dec
mov
pop
add
incl
test
test
jae
iret
arpl
jle
lret
mov
mov
cmc
fwait
dec
mov
lahf
sbbl
cmp
cmpsb
push
cmp
idiv
mov
cmp
popl
push
iret
imul
fdiv
add
out
and
hlt
sub
enter
cmpsb
mov
outsl
jecxz
lock
call
movsl
add
gs
pop
or
push
xchg
xor
mov
popa
jl
and
add
jp,pn
out
enter
mov
add
enter
stc
mov
xor
in
dec
mov
cltd
mov
test
roll
lea
clc
pushf
sub
addl
ret
loopne
repz
cli
mov
movups
inc
pop
fs
sahf
sub
mov
ds
jecxz
and
dec
dec
xchg
fwait
nop
es
lods
sub
es
mov
mov
jno
xor
push
mov
fstp
sub
movsl
test
xor
mov
adc
bound
pop
lret
jle
push
xchg
sub
ja
xor
cs
mov
cwtl
fcoms
or
lahf
inc
leave
jbe
or
add
sbb
dec
pop
sbb
pop
xor
stos
out
xchg
nop
pop
enter
outsl
mov
push
shl
or
lea
hlt
adc
in
cmp
cmpsb
rclb
pop
jmp
sub
or
pop
fdivrl
cld
iret
aas
cltd
ss
dec
or
jmp
outsl
mov
popf
out
dec
orb
xchg
jecxz
mov
in
test
dec
je
or
sub
push
xchg
stc
mov
rcrb
notb
dec
sahf
inc
mov
mov
rorl
pop
cld
pop
or
jl
movsl
sahf
out
aaa
xor
or
pop
or
and
cltd
jae
std
mov
cmp
je
add
out
bound
lods
fwait
insl
push
es
stos
push
xor
dec
mov
adc
cmpsb
imulb
lods
loopne
push
fs
pusha
insl
scas
fnstcw
dec
sbb
adc
insb
push
xchg
mov
lea
cwtl
and
out
mov
scas
mov
cmp
mov
rclb
fnsave
jnp
out
sub
push
and
push
mov
mov
jb
jns
outsb
je
mov
stos
or
out
repnz
bound
les
adc
out
mov
cmp
test
add
pop
add
cmpsb
mov
popf
je
mov
mov
pop
ss
pop
lret
xor
das
add
sbb
js
jle
dec
lcall
adc
lahf
push
mov
popa
addl
insl
testb
adc
into
jb
lock
incl
leave
or
pop
insl
popa
inc
push
push
and
jo
push
mov
movsl
imulb
fisubrs
stos
loop
test
fcoml
inc
xor
sti
cs
je
sub
mov
adc
pop
aad
loope
mov
mov
enter
inc
pop
or
pop
pop
add
call
mov
notl
cmp
inc
mov
lea
stos
movsb
sub
sahf
pushf
xor
gs
cmp
outsl
adc
sub
sub
add
jmp
add
and
add
loop
es
pop
js
je
pop
js
ja
jp
mov
imul
sbb
subb
mov
sahf
subl
icebp
mov
les
pop
inc
jl
sub
and
test
movsl
fsubrl
and
movsl
jnp
mov
js
or
jecxz
cmp
movhps
ret
add
imul
pop
ficoml
lret
xchg
loope
frstor
nop
ljmp
mov
dec
mov
xor
cmp
in
in
negl
cmp
xchg
stos
inc
cmp
mov
mov
jmp
je
loopne
cmpsl
or
sbb
lods
lods
push
sbb
enter
jge
sub
shlb
lock
lcall
inc
lods
adc
push
fildl
repz
mov
jl
fildl
ljmp
jno
imul
test
out
add
adc
add
popf
push
sub
rcr
sti
add
xchg
out
fdivrs
loopne
ljmp
xchg
pusha
shl
pop
pop
jg
loope
into
add
loope
loope
mov
mov
outsb
jae
mov
cmp
jne,pn
ret
insb
push
xchg
lds
pop
stos
mov
out
aaa
xchg
les
sti
pop
pop
ror
cmp
std
fldenv
xchg
test
fstpt
pop
dec
in
jnp
mov
adc
ds
ficompl
mov
movl
push
fidivs
xor
pop
fs
adc
sbb
mov
ror
ds
inc
sub
sub
or
jne
inc
fadds
shrl
mov
xchg
inc
xchg
dec
xlat
std
jno
ja
pop
pop
mov
int3
add
jo
push
push
mov
sub
xchg
jae
pop
int3
mov
ds
xor
add
and
push
aam
mov
dec
pusha
repz
sarb
shlb
jno
add
mov
aas
std
int
xor
cmp
lea
sti
xor
inc
scas
loop
fstpl
or
shl
ds
push
dec
push
and
jns
adc
jmp
add
popf
jo
int3
popf
cmp
lcall
pop
xchg
out
movsl
jle
pop
cmp
push
mov
mov
mov
test
test
dec
mov
mov
xchg
js
lcall
pop
add
jns
or
popf
inc
sbb
inc
inc
mov
xor
jno
push
test
ja
aas
mov
stos
ret
and
xor
jo
loopne
int3
push
xchg
xchg
or
or
lods
pop
pop
movb
nop
stos
xchg
xchg
dec
dec
addr16
inc
mov
xchg
pop
es
popa
mov
jnp
sbb
fsubrs
pop
mov
int
adc
cmc
dec
pop
mov
xlat
lock
aam
cmp
inc
xchg
mov
cs
lods
xchg
push
lea
jns
lods
int
cli
cld
sbb
or
dec
adc
cmp
cltd
lock
push
nop
test
testl
inc
ja
lret
dec
cmp
add
rcll
adc
cwtl
xchg
in
inc
cmpsb
xchg
sub
scas
insl
pop
hlt
sbb
cmp
enter
push
and
xchg
dec
xchg
xor
jae
clc
orl
xchg
fdiv
sub
mov
xor
jecxz
or
push
cmp
inc
xor
call
in
push
fs
sbb
bound
pop
dec
fstps
add
or
jg
nop
call
cli
stc
mov
cmp
ficoms
mov
inc
cmp
rcrb
add
nop
jmp
sbb
xlat
outsl
pusha
xchg
mov
push
push
in
mov
ret
push
pop
push
sbb
jmp
sbb
jp
mov
mov
shll
das
push
add
xor
insl
nop
sbb
rclb
pop
adc
je
or
xor
call
adc
add
cmp
int3
sub
sti
jnp
imul
add
mov
mov
mov
jo
hlt
fisubl
gs
and
or
mov
pop
int
mov
push
or
xchg
xor
pop
in
mov
in
aad
mov
cltd
jl
call
inc
cmp
jg
inc
sti
jb
mov
mov
mov
dec
movntq
pop
sub
fistpll
fnstsw
lret
test
int3
mov
cmpsb
out
test
fucomip
jp
push
ja
mov
jg
inc
add
adc
aad
aaa
insb
add
xor
jle,pt
lods
fdivs
mov
mov
mov
cmc
rol
jmp
popa
dec
jb
jge
insl
mov
cwtl
or
frstor
mov
outsb
shrb
sub
lcall
sbb
in
push
ljmp
sub
addr16
mov
jbe
fistl
repnz
pop
aad
gs
push
addr16
mov
in
cmc
int3
in
clc
mov
scas
leave
add
movsl
dec
mov
pop
aaa
insb
sbb
test
sub
jp
mov
aad
pop
sahf
imul
aad
mov
mov
int
clc
mov
pop
mov
or
das
mov
sub
adc
pusha
xchg
xchg
test
pushl
adc
rorb
cld
gs
jl
or
mov
ja
cmp
jae
into
push
mov
ja
iret
inc
lods
xor
bound
in
adc
cwtl
test
test
add
dec
jmp
fildl
outsb
sub
push
add
xchg
push
int3
ja
out
js
test
je
cli
mov
push
jl
and
push
stos
mov
push
es
and
pusha
and
mov
jle
aam
mov
sti
inc
mov
adc
add
call
fistl
adc
or
int
sub
and
imul
inc
mov
stos
fisubrs
or
je
cs
lods
jne
aas
cmp
subl
add
pop
dec
jbe
repz
fsubp
pushf
jne
lods
push
add
jo
and
loope,pt
mov
fidivrl
add
std
jecxz
push
mov
inc
pop
cmp
xchg
push
xchg
int3
in
mov
aad
sti
xor
or
enter
lds
pop
mov
mov
push
sub
and
roll
popa
repnz
insl
testl
dec
insb
call
cmp
std
add
int3
sahf
test
cmc
arpl
test
dec
decl
test
pop
repnz
lds
enter
mov
sub
addr16
cs
sbb
inc
nop
int3
cmc
sbb
jge,pt
jbe
mov
loopne
mov
in
inc
xor
out
push
mov
cld
mov
push
dec
ja
sub
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
or
push
rsqrtps
scas
jecxz
sub
cli
jmp
daa
ret
and
mov
lods
dec
icebp
jge
fidivrl
pop
rcrb
je
fadds
sbb
adc
add
incb
hlt
jg
adc
call
push
push
cmpsb
sbb
cmp
scas
xchg
mov
outsb
or
add
popf
addr16
push
jbe
xor
aad
rcl
mov
sub
sub
xor
gs
call
mov
fnstenv
mov
jl
cmpl
leave
or
mov
inc
cmc
push
push
rol
push
shll
or
imull
shlb
jae
mov
lahf
xor
mov
test
add
lods
sbb
inc
xchg
jno
jmp
mov
mov
stos
pop
xchg
dec
mov
inc
dec
std
dec
xor
sbb
xchg
ret
sbb
sbb
and
pushf
mulb
xchg
test
mov
sub
shrl
and
mov
xor
cmp
sub
aad
dec
push
outsl
inc
cmp
nop
cwtl
pop
adc
popa
in
jg
hlt
popa
movsl
int
fstps
scas
adc
leave
int
or
mov
shrl
jge
mov
adc
sbb
ret
mov
xor
push
sub
push
jnp
pop
sub
push
ja
rclb
mov
push
jg
jle
jle
mov
dec
iret
test
jbe
jge
daa
test
add
or
imul
setg
or
shll
xchg
dec
lods
fdivrl
and
cltd
adc
xchg
roll
subl
test
movsb
stos
mov
loope
jecxz
cmp
jns
aam
dec
pop
test
in
aam
jb
rcrl
scas
js
ds
test
xlat
xchg
decb
lcall
jb
adc
push
arpl
xor
cwtl
sarl
mov
pop
cmp
and
jg
out
mov
std
sub
xorb
pop
or
pusha
mov
lods
mov
add
mov
mov
xchg
pop
adc
scas
sub
imul
or
adc
andl
das
in
push
inc
test
mov
jbe
ljmp
jnp
cmp
movsl
jae
xchg
in
sbb
adc
loop
jb
and
xor
in
fs
pop
iret
jae
xchg
jecxz
push
std
ljmp
outsl
sub
cmp
lods
sbb
bound
pop
popf
subl
cmpsb
pop
fildll
and
mov
xor
mov
add
fnsave
bound
aam
cmc
pushf
xchg
dec
mov
ret
in
fbld
inc
jbe
lcall
aad
push
fisubrs
icebp
jno
test
jge
mov
loopne
jb
dec
and
rcl
pop
pop
shl
xor
push
dec
in
ljmp
test
loop
jnp
add
das
dec
ret
cmpsb
rcrl
or
push
js
dec
add
in
xchg
push
cmp
push
fadd
adc
add
xor
bndldx
sbb
pusha
test
enter
push
pop
movl
icebp
add
int3
pop
addr16
lret
pop
test
cmpsl
xor
mov
sbb
mov
lods
xchg
fimull
fidivl
or
lods
in
jle
push
lahf
jnp
fdivrl
movsb
ss
fcoms
pop
lods
jmp
mov
and
in
adc
mov
pop
mov
jecxz
mov
test
cmpsb
cmp
cli
divb
sub
jle
fadds
pop
imul
or
jmp
test
sbb
jo
sub
mov
inc
out
sbb
pop
dec
leave
jl
jmp
imul
ds
mov
out
sbbl
adc
test
popa
mov
data16
aaa
call
push
pushf
cmp
mov
nop
jmp
dec
scas
jbe
in
push
fmuls
std
sbb
mov
jne
add
jecxz
xchg
mov
out
cs
and
mov
into
mov
ja
adc
cmpb
lods
sbb
and
dec
mov
mov
into
scas
inc
jecxz
in
pop
xchg
ds
adc
xchg
cmp
insl
cmp
mov
bound
and
test
imul
adc
stos
nop
aaa
sub
pop
out
sbb
fistl
add
ret
cmp
aas
mov
cmp
int
fs
cmp
ja
xor
mov
and
sub
xlat
adc
jbe
fwait
gs
iret
es
push
and
repz
movsb
repnz
test
cli
dec
inc
jae
mov
in
add
dec
or
lock
mov
ret
add
or
push
fiadds
mov
sub
lods
dec
pop
push
movsb
sub
aaa
fimull
jle
es
enter
scas
stos
mov
jb
dec
stc
mov
bswap
bnd
cli
std
xor
scas
js
sbb
lods
add
cmp
jbe
jmp
mov
popf
mov
mov
pop
cmp
jb
push
xchg
adc
les
enter
bnd
mov
adc
daa
packsswb
cmc
out
dec
ss
dec
pushf
add
dec
divl
cli
in
cmpsb
fnstenv
lret
push
jo
movsb
insl
sarb
pop
adc
mov
dec
xor
stos
xchg
loope
xchg
jnp
addl
leave
int3
repnz
push
scas
out
cld
lret
test
fwait
daa
std
xor
in
dec
cmpsb
pusha
cld
jg
or
test
fstpt
adc
cmp
push
iret
clc
cmc
push
clc
filds
or
push
xor
add
xchg
fsubrs
add
push
mov
in
push
mov
rol
das
dec
incb
enter
loopne
je
cli
arpl
data16
mov
out
cmp
sbb
in
std
mov
into
pop
mov
xchg
jmp
jle
inc
stos
mov
pusha
cwtl
or
inc
add
rorb
rcrb
stc
js
dec
ss
adc
icebp
ja
jne
clc
cld
scas
outsb
popa
dec
sub
inc
pop
and
inc
inc
movsb
iret
xor
imul
ret
sub
movsl
cltd
mov
fisubrs
lock
jne
shll
les
push
sbb
inc
xor
daa
rcll
test
test
dec
loop
mov
cmp
dec
xchg
outsb
clc
sarb
xor
mov
pop
jne
rclb
push
mov
test
or
jecxz
repz
dec
add
add
or
pop
inc
or
and
jo
adc
xchg
jge
mov
rol
inc
cmp
lcall
mov
cmp
push
cmp
andl
and
dec
push
mov
testb
enter
lcall
mov
or
mov
cmc
cmp
out
sbb
or
int3
dec
mov
call
ja
ret
xchg
cmpsb
adc
jae
mov
or
jnp
ds
and
pusha
fcomip
daa
xor
pop
push
push
sub
inc
ljmp
fidivrs
repz
or
hlt
iret
xor
mov
xchg
shrl
jo
insl
insb
movsl
mulb
push
outsb
pop
mov
adc
cltd
add
jb
lea
mov
bound
mov
jle
nop
push
dec
xor
adc
das
mov
ret
lock
mov
es
pop
ret
xchg
mov
push
push
adc
outsl
jbe
ret
addr16
cmp
or
jp
mov
or
pop
xor
in
ror
iret
fs
call
cmp
sbb
dec
mov
sub
push
push
push
lock
add
push
daa
dec
test
xor
add
mov
lods
je
iret
loop
jno
xchg
dec
test
sti
and
jne
cld
push
cltd
jge
aad
jg
inc
ljmp
adc
adc
dec
xchg
cld
pop
xor
imul
out
inc
lret
push
adc
adc
jae
fst
pop
inc
mov
dec
shlb
jecxz
adc
lds
stos
mov
push
imul
insl
xor
cltd
pop
inc
push
mov
pop
out
or
push
jge
cmp
push
mov
add
daa
inc
out
push
jmp
jecxz
test
dec
icebp
dec
cmpsb
int
ja
adc
xor
std
pop
je
aas
cld
add
fwait
in
sbb
sar
jne
dec
dec
arpl
popf
inc
mov
ljmp
lcall
pop
push
or
scas
mov
mov
cmp
mov
jge
and
dec
enter
leave
bound
and
or
andw
notl
and
hlt
add
push
lock
adc
xor
pushf
int3
push
jle
add
imul
sub
jp
or
sbb
sub
jecxz
mov
xchg
xchg
sub
in
repnz
pop
addr16
inc
imul
cmpb
mov
movsl
xor
scas
test
mov
mov
inc
icebp
add
sub
and
idivl
xchg
aas
mov
xchg
outsl
lods
push
pop
mov
std
fs
in
push
push
in
out
cs
cmpsb
adc
or
dec
int
xchg
jno
dec
or
mov
icebp
jmp
fstps
mov
push
int
rorl
icebp
and
int
loop
lock
jno
fsubp
fisubrs
iret
stos
jl
jge
insb
jb
testl
mov
cmpsb
repz
dec
add
mov
xor
ja
clc
icebp
sub
mov
xchg
mov
lods
aaa
and
data16
and
lret
imul
push
test
jb
inc
pop
pop
sub
and
add
dec
push
imul
pop
pusha
out
aaa
push
pop
mov
mov
jmp
xchg
dec
mov
shlb
fcoms
xor
les
push
inc
mov
cmp
aaa
leave
loop
xlat
insb
xor
adc
jle
mov
js
mov
jno
push
jge
lock
mov
pop
xchg
jecxz
inc
dec
movsb
mov
pop
add
sub
push
xor
shlb
adc
in
push
mov
mov
hlt
into
rcll
jb
loopne
nop
dec
outsl
dec
aam
jno
fidivrl
into
inc
mov
daa
gs
cmp
test
fildl
ljmp
xchg
jl
mov
add
xor
cmpsb
or
inc
rolb
pop
sbb
pop
xor
and
popa
mov
in
mov
jle
add
int3
cmc
xchg
add
pop
ret
outsb
popa
cmp
push
test
es
ds
mov
sub
pop
movl
outsl
ljmp
movsl
and
add
push
popa
jecxz
ja
stos
push
sbb
aad
dec
xor
mov
loope
cmp
mov
jmp
in
jne
outsl
pushf
stc
fwait
cmp
jno
sub
insb
popf
and
jmp
cmp
jbe
mov
mov
or
sbb
inc
cmp
inc
pop
in
sbb
bound
fwait
dec
cmp
sbb
add
xor
imul
pop
das
jb
das
outsl
bound
jl
cmp
test
clc
sbb
adc
stos
repz
sub
mov
add
negb
punpckldq
mov
inc
dec
insl
xchg
mov
pop
jl
pop
in
negl
into
movsl
lcall
xchg
add
int3
xchg
scas
dec
data16
or
pop
adc
jne
push
imul
xchg
out
add
push
mov
mov
push
loope
fistl
xor
jo
cld
fistpll
ljmp
pusha
mov
test
push
and
add
cltd
sub
jp
leave
loopne
mov
ror
clc
cmp
sub
or
int
inc
mov
sti
scas
cmp
pop
xor
or
adc
sub
test
ss
movsb
ja
dec
call
std
add
push
jo
cmp
mov
pop
adc
xchg
sub
in
sbb
sbb
enter
scas
aad
adcl
sub
pop
pop
mov
jne
ficompl
data16
inc
inc
loopne
pop
jne
test
and
repz
jns
or
or
dec
inc
stos
shll
cmp
pushf
clc
pop
roll
lret
ret
movsl
dec
std
jle
lahf
adc
pop
dec
adc
jbe
mov
arpl
shrb
scas
fs
add
cmp
stos
out
or
lret
lock
sbb
pop
xlat
mov
ljmp
mov
loopne
push
mov
mov
inc
cmp
icebp
into
imulb
jno
sbb
xor
inc
mov
push
xchg
mov
mov
adc
xchg
repnz
and
movsl
inc
mov
rolb
push
xor
add
mov
in
fdivr
add
and
incb
testb
aam
fxrstor
into
arpl
arpl
and
xchg
ret
in
jo
scas
test
xor
je
xchg
mov
out
pop
imul
call
into
push
mov
mov
data16
jle
iret
leave
dec
mov
mov
adc
fadds
add
std
sti
sbb
sbb
mov
out
adc
xchg
test
dec
xor
jp
ss
setb
pop
enter
inc
ret
pop
sbb
sub
jecxz
push
inc
loop
sbb
test
cmpsb
sti
test
movsl
sub
lea
sbb
cmc
jns
in
mov
mov
fistps
popf
jmp
push
pop
jle
imul
clc
add
dec
xor
xchg
int
loopne
jbe
stc
shll
mov
mov
movsb
repz
cli
mov
cmp
push
bswap
pop
insl
adc
ja
inc
out
jbe
lret
jno
ljmp
jne
outsl
fnstcw
mov
bound
lret
leave
cmp
test
fidivs
and
mov
shrl
popl
dec
sub
fnstenv
popa
sbb
jns
inc
cmp
xchg
enter
fwait
das
pushl
dec
loope
or
pop
cwtl
out
push
jp
arpl
pop
push
push
mov
gs
pop
int3
lahf
bound
pop
jno
scas
sbb
repz
int
pop
inc
xchg
stos
cli
sbb
orl
jge
dec
cmpsl
fs
iret
jmp
inc
out
in
cmp
inc
inc
mov
dec
cmp
dec
cmp
cld
xchg
sbb
clc
or
loopne
lods
pop
xchg
xlat
mov
test
loopne
push
mov
push
imul
push
mov
shrb
adc
lods
xchg
shll
aad
insb
mov
nop
andl
push
cmp
daa
iret
cmpsb
sub
cmpsl
jle
sar
clc
stos
sbb
fisubs
or
or
push
xchg
add
push
clc
cmpb
outsb
in
mov
push
insl
and
rcrb
das
lret
pop
in
inc
pusha
xchg
scas
insl
jp
adcl
shrl
or
jmp
clc
sub
xor
ljmp
outsl
dec
add
mov
push
sub
dec
movsl
sub
dec
hlt
movsl
adc
jne
cmpsb
adcb
enter
cld
jne,pn
dec
mov
divl
dec
adc
mov
adc
xchg
push
adc
adc
test
and
ljmp
and
lods
adc
pop
jge
inc
mov
pop
fldt
pop
xchg
jno
mov
or
jbe
sbb
or
push
xchg
push
je
orl
mov
shlb
flds
je
rcl
mov
flds
mov
xchg
dec
shl
iret
jne
js
movsb
fnsave
sbb
mov
test
add
ljmp
xorb
or
lea
popa
dec
jb
and
push
xchg
cmp
add
adc
sbb
call
cli
inc
inc
add
or
mov
jge
mov
pusha
outsl
jl
fildll
es
inc
outsl
mov
jns
sub
push
jecxz
dec
xchg
adc
insl
ret
sarl
mov
daa
stos
movsl
push
jle
sub
fwait
rorb
shll
rolb
call
jbe
clc
pop
ret
imul
popa
xchg
in
aad
add
mov
xor
ljmp
test
mov
and
fs
in
add
or
pushf
shlb
dec
add
sbb
lds
data16
fadds
pop
fcoml
aad
dec
in
scas
xor
inc
xchg
lods
cmp
xor
push
pop
fldlg2
push
mov
pusha
dec
ja
loopne
add
pushf
fsts
mov
or
jae
rolb
lods
sub
mov
pop
ljmp
stc
ret
in
jnp
fstpt
dec
imul
loope
lret
into
ljmp
js
paddusw
aaa
sbb
sub
sbb
mov
add
jae
lcall
out
jle
dec
lret
mov
xor
add
in
and
mov
lret
mov
cmp
xor
mov
dec
mov
pop
lret
in
inc
fstl
add
jae
repnz
mov
movsl
or
insb
cltd
mov
iret
aam
ret
sahf
movsb
shlb
leave
enter
adc
fdivr
mov
out
loop
pusha
or
sub
push
test
adc
xor
push
aas
xchg
and
and
in
fidivrl
or
stc
rcrb
jae
pop
and
dec
fdivs
mov
test
mov
pop
mov
icebp
jecxz
mov
imul
cmp
sub
dec
insl
xchg
and
push
dec
outsb
xchg
xchg
int
pop
out
adcl
push
movsl
jbe
push
push
sbb
sahf
lahf
pop
and
xor
pop
cmpl
rcrl
loopne
xchg
stos
or
int3
jge
stc
xchg
cltd
aam
or
mov
cmpl
xlat
jle
sbb
mov
fistpl
je
aas
cmpsb
xchg
xchg
sbb
in
mov
imul
lds
mov
fwait
mov
ja
dec
xor
std
pop
aam
push
in
cmp
mov
pop
mov
cmpsl
pushf
mov
jl
dec
push
add
cwtl
cwtl
inc
movsb
cwtl
pop
test
aad
push
mov
mov
mov
adc
dec
aam
icebp
mov
std
ret
xlat
roll
ftst
push
pop
sbb
lret
fisubrl
adc
pop
filds
sti
filds
mov
cmp
or
aam
loope
sahf
test
andb
jl
jle
add
jg
mov
pop
lahf
scas
push
sbb
pop
xor
jbe
ret
jg
adc
lret
xor
in
mov
test
cs
push
push
sti
mov
test
pop
cmpsb
xchg
inc
test
repnz
dec
push
jne
jmp
outsl
popa
aas
inc
rcll
adc
sub
daa
popa
cmp
or
subb
addb
add
inc
or
push
or
in
pop
push
push
lods
jne
rcl
mov
push
inc
sbb
aas
sbb
loope
jno
dec
mov
std
icebp
inc
in
pop
dec
add
mov
ret
in
out
xchg
mov
sub
pop
shll
subb
ficoml
fidivrl
out
lock
das
pusha
push
inc
pop
fldenv
xchg
movsb
add
sbb
negl
scas
inc
test
in
xchg
lret
shll
add
and
fistpll
mov
test
js
idiv
jle
pushf
push
jmp
adc
fisttpl
cmp
pop
and
lcall
jns
cs
sub
mov
dec
jo
cmpsl
js
add
push
mov
movsb
leave
sub
adc
add
incb
push
lahf
and
add
pop
xor
lods
jge
mov
lcall
and
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
or
sbb
adc
xchg
adc
fisubl
leave
arpl
jne
pop
push
ss
test
std
jae
xor
stos
movsb
js
adc
pushf
ja
in
mov
mov
out
xor
iret
dec
push
mov
aas
xor
arpl
lcall
daa
mov
adc
gs
xlat
stos
ja
call
scas
rclb
in
mov
leave
mov
addr16
adc
or
call
pop
pusha
and
mov
iret
pop
andl
in
cmp
out
dec
push
push
negl
lret
and
mov
push
push
jb
lret
pop
xchg
dec
sub
pop
push
xorl
xchg
push
add
mov
or
test
repz
pop
xor
adc
mov
push
int
bound
pushl
xor
dec
sti
push
push
das
stos
push
test
jecxz
popa
clc
add
cmp
js
jno
movsl
inc
sahf
cmp
inc
cwtl
jnp
fwait
daa
mov
xchg
sub
es
mov
in
cli
jecxz
stos
add
outsl
das
push
sbb
jno
pop
mov
cmp
loope
addr16
pop
pop
and
and
notb
subl
mov
mov
xchg
cmp
mov
popf
mov
cltd
adc
xlat
jmp
fbstp
mov
mov
mov
test
add
divl
xor
dec
adc
cmp
repnz
test
mov
icebp
int
ds
popa
jb
sbb
lods
popf
enter
xor
inc
movsl
add
les
pop
int3
lahf
mov
dec
mov
or
icebp
xchg
push
inc
pop
mov
std
ja
sbb
enter
aas
in
shlb
xchg
jae
in
jno
adc
dec
js
or
test
push
sub
stos
mov
and
and
out
push
lods
jns
push
sahf
fstpl
xor
cs
ljmp
pop
inc
cmp
shll
pop
clc
push
dec
mov
jg
add
int
dec
xchg
adc
dec
ror
jp
sarl
jb
inc
cmc
jb
dec
jp
clc
shl
xor
xchg
xor
std
out
cmp
popf
ss
ds
sub
jns
or
ljmp
mov
xlat
cmpsl
rcl
or
js
push
cld
bound
stos
dec
sbb
and
leave
sub
sbb
xchg
mov
mov
push
stos
insl
decb
loope
clc
in
add
mov
inc
dec
sarl
pop
mov
pop
xchg
mov
sub
and
mov
push
andl
aad
or
mov
stos
sub
lea
cmc
mov
add
xor
jp
ds
and
jl
movsl
xor
push
inc
call
lret
mov
xchg
adc
push
jno
pusha
arpl
loope
int3
and
jns
insl
das
cli
lods
mov
mov
jmp
sarb
add
pop
xchg
pop
sub
pop
test
test
cmp
addr16
lcall
das
jb
mov
xor
imul
pop
jmp
push
sub
into
cli
or
add
inc
and
outsb
gs
cmpsl
testl
pop
add
or
shlb
dec
rorl
fsubp
in
repnz
std
subb
mov
pop
mov
or
inc
xorl
jmp
xor
adc
imul
rorb
adc
inc
add
cs
iret
movsl
cmpsl
sub
inc
push
pop
adc
xor
mov
mov
icebp
icebp
mov
add
adc
mov
mov
clc
cli
cmc
cmp
mov
repnz
xorb
test
or
inc
push
adcb
push
dec
xor
repnz
insl
orb
bound
popa
push
inc
movsb
and
fisttps
test
sub
inc
cs
lds
aam
pop
ret
push
inc
shlb
pop
xlat
pminub
je
out
xchg
xor
cmpsl
lret
or
vorps
xor
mov
pop
insb
jmp
xor
fwait
or
aad
cwtl
ffree
mov
loopne
shlb
sub
cmpsl
xlat
pushf
jno
dec
push
pop
scas
cwtl
xchg
cli
int3
test
xorb
or
lcall
clc
cmpl
mov
bound
or
jbe
ds
in
ret
mov
cmc
xor
jge
lcall
cmp
push
std
mov
in
xchg
push
jge
add
mov
pushf
ret
fidivl
inc
addb
rolb
sub
or
fdivrl
xchg
ss
adc
xchg
push
push
movsl
mov
test
sahf
sub
jns
jae
push
enter
mov
mov
loop
mulb
cmpl
insl
push
jnp
daa
jle
out
inc
push
mov
out
scas
cmc
imul
jg
xchg
adc
xor
xchg
mov
jle
icebp
push
flds
out
xchg
adc
mov
iret
mov
stos
jb
out
sub
xor
or
sbbl
sbb
out
xchg
shll
dec
lock
dec
testb
inc
xchg
inc
or
adc
outsb
xchg
outsl
cld
scas
outsb
inc
jae
sahf
mov
adc
data16
call
inc
mov
clc
jmp
add
dec
filds
test
mov
es
fwait
dec
cmp
sub
cmp
cwtl
movsl
pandn
inc
add
ret
xor
fsubr
lret
enter
xor
lret
loope
cmp
xchg
jbe
sub
test
rcr
ja
mov
xchg
incl
ret
sub
int3
pop
out
jle
mov
dec
jle
popa
shlb
shll
iret
push
adc
test
pushf
push
xchg
fidivrl
sbb
jmp
lods
scas
or
sbb
iret
inc
xor
ret
sbb
inc
mov
scas
call
fstps
enterw
mov
jbe,pn
imul
scas
mov
std
arpl
testl
mov
mov
xchg
mov
mov
rorb
mov
pusha
fcompl
jg
jns
dec
call
fstl
stos
adc
sbb
xor
pop
in
fistps
pop
or
rclb
xchg
testl
inc
out
cmp
cmp
pusha
inc
mov
prefetch
adc
pop
cmp
fscale
out
jp
sbb
bound
test
jmp
cmp
out
popf
push
rorl
push
inc
fwait
push
ret
je
clc
lods
mov
push
cmp
cmp
xor
aaa
adc
xlat
mov
mov
add
pushf
mov
dec
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
xor
push
clc
adc
xchg
push
popa
shrl
stc
es
ret
pop
mov
movl
and
mov
das
and
push
mov
pop
push
mov
or
maxps
xchg
faddl
and
cmp
sbb
adcl
xchg
dec
hlt
mov
pop
daa
inc
mov
daa
in
mov
mov
mov
std
and
xchg
popa
fldl
out
xchg
aaa
or
fcmovne
mov
in
clc
test
push
int3
scas
mov
movsbl
adc
jns
je
mov
pop
push
add
in
cmc
lea
mov
lret
movsl
dec
addr16
add
add
fiaddl
or
pop
adc
jp
adc
add
aam
lcall
addl
flds
xor
push
insb
dec
mov
ret
aas
or
mov
sbb
aaa
fistps
cmp
ljmp
cmc
lock
and
insb
jmp
push
loope
aaa
push
iret
mov
out
dec
cltd
cmp
dec
dec
mov
outsl
out
mov
scas
pushf
cmc
pop
xchg
mov
arpl
sahf
mov
mov
aas
add
scas
push
mov
mov
dec
mov
cmp
out
test
out
repz
lock
push
mov
test
data16
cmp
mov
jb
mov
sbb
lods
pusha
inc
rol
xor
fisubl
fsts
std
lret
dec
mov
or
addr16
xor
sub
xor
test
mov
imul
jle
stos
rcrl
popa
jno
mov
dec
cwtl
xor
push
xchg
out
push
aad
sub
pop
aas
loop
jg
mov
inc
pushf
pop
subl
aad
fs
sbb
pop
push
add
pop
pop
xchg
or
pause
ja
jl
xchg
sub
bound
mov
dec
push
sbb
scas
pop
jo
bts
push
roll
jl
in
push
in
inc
pop
in
out
dec
jo
pop
push
jbe
movsl
movsb
add
sbb
sbb
cld
xchg
hlt
push
mov
cpuid
cmpsb
in
mov
dec
or
test
out
stos
add
dec
and
xchg
pop
xlat
lods
ficompl
aas
or
imul
shlb
in
idivl
cmpsl
cmp
jb
and
pop
int3
push
pop
in
popl
add
out
push
hlt
pop
jle
sub
inc
inc
jb
loopne
std
mov
gs
or
push
jl
jmp
cmp
xor
or
sub
add
les
pop
subl
push
mov
xlat
std
lea
pop
loope
nop
jle
xor
fisubl
mov
mov
mov
das
fisttpll
mov
bound
mov
mov
test
and
xor
dec
mul
and
into
stc
xchg
inc
jnp
lock
cmp
jg
ds
cmp
aad
ds
and
jbe
mov
adc
scas
adc
inc
add
dec
and
sub
dec
ds
xor
push
inc
dec
sbb
xchg
lahf
fcos
jmp
movsb
rcrb
and
int
jbe
aam
lods
pop
pop
sbb
inc
inc
push
inc
xchg
fsts
push
lods
and
or
pop
ds
test
arpl
mov
sub
loop
cmp
cmpsl
mov
popa
xor
jp
or
pop
insb
mov
sub
loopne
jmp
fisubrs
pushl
mov
mov
jno
jns
push
sbb
and
rorl
adc
add
mov
les
fadds
bound
dec
cmp
out
mov
dec
lret
fadds
lea
test
sub
pusha
bound
int3
pop
mov
cmp
in
ret
jno
sub
cmp
inc
push
in
add
addr16
or
xchg
enter
cwtl
popa
or
mov
and
add
test
jmp
jbe
mov
stos
add
pop
enter
inc
fdivrl
adc
xor
jge
lcall
mov
mov
jne
test
out
loope
pop
int
xor
adc
mov
sub
into
add
fidivs
les
mov
cmpsb
xor
jnp
es
testl
cli
sbb
push
enter
fstpt
stos
xchg
or
pusha
cmp
dec
cmp
mov
ffree
or
push
ret
xchg
xor
imul
mov
jl
xchg
inc
scas
cmp
iret
push
lods
mov
mov
pop
iret
jmp
pop
mov
jne
xchg
pop
dec
mov
sbb
push
xchg
cmp
and
sub
jb
es
sbb
test
outsl
mov
out
dec
dec
gs
mov
or
repz
sti
das
dec
jne
inc
aad
shl
out
mov
or
shr
xchg
mov
insl
push
loop
dec
sub
or
mov
pop
fdivrl
jecxz
ret
xor
icebp
lret
loopne
ficoml
pop
outsb
xchg
nop
ja
lods
jno
sbbl
jno
fcomps
cwtl
push
sub
and
shl
xchg
xchg
aam
faddl
add
mov
pop
or
jbe
in
cwtl
test
sahf
ja
hlt
cmpsl
mov
or
stos
mov
dec
mov
in
fwait
lret
dec
push
pop
inc
test
fisubl
inc
lods
dec
pop
std
imul
mov
ja
imul
add
dec
aam
mov
xchg
pop
scas
into
sub
pop
and
and
cmpsl
aam
pushf
inc
xchg
mov
inc
in
mov
and
lret
lret
and
popf
cmp
data16
enter
arpl
aad
and
mov
aad
jo
inc
dec
jo
dec
lock
outsb
shll
fdivrs
icebp
adc
rorb
call
push
popa
mov
inc
flds
jno
and
push
xchg
mov
popa
pop
or
xchg
fdivrs
mov
loope
push
popa
xor
inc
xchg
ja
or
hlt
mov
in
scas
movsl
or
int
repz
jl
sbb
jge
test
mov
rcrl
fs
push
dec
adc
roll
jb
gs
out
or
es
shrl
mov
mov
repz
add
lods
add
ds
fsubl
aaa
sub
jge
add
dec
scas
sahf
jmp
jo
xchg
shr
xchg
loopne
push
adc
faddl
outsl
push
scas
and
cmc
or
cmp
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
lock
pop
mov
sbb
mov
push
jge,pn
leave
xlat
dec
cs
inc
insb
mov
xchg
arpl
fidivrs
dec
adc
or
add
adc
ds
nop
adc
xchg
roll
rolb
out
xor
add
and
call
arpl
or
inc
ret
xor
pop
sbb
or
mov
sub
xor
mov
jns
jns
pop
add
popl
orl
or
pop
test
and
dec
das
jg
mov
mov
xor
mov
pop
aaa
aam
jb
adc
jbe
cmpsb
ja
push
pop
push
in
clc
idivb
adc
packuswb
ror
not
xchg
shr
clc
je
dec
jno
push
cwtl
testb
cli
cltd
inc
cwtl
push
mov
inc
out
push
js
outsb
out
push
cmp
pop
daa
loopne
pop
loopne
in
adc
xchg
lret
inc
pop
add
imul
xlat
sub
mov
js
mov
mov
jp
pop
xorl
loopne
mov
outsl
outsb
jg
adc
mov
adc
dec
ja
out
or
push
jo
pop
mov
inc
pop
xlat
jl
push
or
dec
jmp
nop
mov
test
xchg
xchg
fs
add
lock
or
sbb
nop
lds
nop
outsb
loope
das
mov
mov
lret
cmp
insb
lret
sbb
mov
dec
cs
aaa
push
jle
fwait
pop
insl
loopne
pop
je
pop
shrl
fdivp
xchg
pop
jle
and
repnz
and
lods
mov
push
fdivs
mov
mov
aas
cmp
mov
dec
mov
lret
int
dec
inc
scas
add
sbb
movsb
lcall
cltd
xchg
mov
xor
push
xchg
in
mov
lea
fsts
adc
cmc
pop
push
pop
jl
push
sbb
in
into
mov
xlat
data16
or
sbb
jle
cwtl
loope
mov
scas
xor
gs
lock
mov
cli
mov
movsb
or
fdiv
divb
ret
push
jo
add
inc
pop
cmpsb
push
jno
cmp
fdivr
test
not
inc
out
add
push
push
shl
add
ffreep
sbb
pop
jo
fcoml
sub
add
or
shrb
repz
addb
inc
cmp
sbb
mov
mov
je
dec
loop
xchg
iret
divb
aam
cmp
inc
sbb
xor
cltd
and
push
push
call
repz
pop
lret
push
mov
fs
xchg
fdivrl
pop
das
outsb
out
mov
rcll
imul
xor
aas
test
std
and
adc
scas
xchg
cmpsl
adc
xor
pop
int
out
loopne
aad
xor
lods
pushl
jmp
mov
ljmp
mov
mov
cmp
pop
add
jb
iret
push
cwtl
jb
xor
inc
in
and
jbe
jl
xlat
push
mov
xlat
inc
jo
jmp
add
pop
sub
mov
and
test
fcoms
rorl
xor
xchg
fisttps
decb
je
outsl
aad
mov
loop
push
orl
add
xchg
loopne
sbb
adc
cltd
or
pop
jo
lock
stos
js
lods
js
mov
out
js
push
and
movsl
push
cmp
dec
es
mov
inc
cmp
aas
inc
sub
dec
ja
mov
push
loope
and
jg
orl
int3
xchg
cmp
xchg
cli
push
push
push
cmpsb
push
pop
cmpsb
jnp
movsl
lods
xchg
xchg
pop
imul
adc
arpl
aam
cmp
mov
rorl
out
inc
mov
xor
cmpsl
subb
hlt
pop
lock
jno
push
roll
outsl
push
mov
mov
jno
out
loope
mov
out
inc
xlat
or
addl
push
mov
pop
jp
sub
imul
fisttpll
cmpsb
pop
enter
or
dec
movb
pop
pop
cli
daa
or
push
xor
or
out
out
imul
mov
scas
sti
out
mov
lods
ret
sub
xchg
xor
lahf
ss
inc
cld
imul
ja
dec
mov
xchg
fsub
jae
xor
mov
push
cmpsb
daa
clc
mov
jne
xchg
xor
data16
hlt
add
popa
into
mov
inc
xchg
call
mull
ja
std
mov
inc
fstpt
mov
cs
js
pop
cwtl
adc
adc
pop
negb
push
je
push
add
jg
mov
lcall
ss
ljmp
xor
jmp
lret
bound
mov
imull
fidivl
xor
hlt
inc
insl
xor
nop
lods
decl
lahf
dec
pop
loope
jo
movsl
cmp
jnp
adc
push
inc
mov
shll
testb
mov
ja
fcoms
or
or
shlb
test
lcall
push
sub
and
or
mov
push
pop
xlat
pop
rcr
add
pop
popf
data16
jae
or
mov
sarb
jnp
pop
sbb
xor
ss
popf
dec
or
ljmp
push
inc
mov
sti
loopne
fwait
enter
mov
out
xchg
pop
repz
call
inc
daa
pop
pop
dec
daa
jle
sbb
fiaddl
stc
xchg
imul
cmpsl
in
incb
imul
or
sub
ss
mov
cmp
mov
cmpsb
xchg
xchg
cmp
aad
orb
pop
out
mov
inc
subl
sbb
mov
pop
stc
in
jae
mov
push
or
cs
mov
or
nop
insl
dec
stos
mov
or
sub
insl
push
sahf
sarl
sub
jbe
jo
add
fcmovbe
cmp
pop
mov
fmull
rcll
sbb
cmc
or
fisubrs
into
call
push
mov
pop
scas
stos
pop
test
imul
push
mov
pop
test
xor
push
pop
xor
mov
jle
aam
xchg
or
mov
push
xchg
imul
ret
add
shrb
movsb
xchg
sahf
pusha
pop
dec
addr16
jnp
pop
mov
aam
daa
pop
sub
lods
xor
pop
jmp
pop
sub
jae
cmp
sub
and
lock
mov
fimull
sub
inc
imul
shrb
jp
and
or
or
shl
shl
mov
mov
jmp
test
fcoms
jge
sti
xchg
or
ja
or
divb
mov
daa
lea
add
mov
enter
rcll
push
xchg
add
test
in
arpl
outsl
xorl
into
out
fdivp
fldt
sar
push
cli
mov
push
popa
lahf
sti
lret
or
jne
cmp
gs
add
push
loop
int3
jb
aaa
std
jns
test
push
push
dec
sbb
inc
js
mov
sub
stc
or
and
loope
push
test
int
xchg
xchg
add
xchg
loop
cmp
sbb
xlat
xor
push
lds
fnstsw
pop
dec
sbb
xchg
ret
adc
mov
addl
add
dec
cmp
jb
inc
mul
mov
ficoms
das
ss
push
dec
dec
inc
sub
sub
aad
or
ljmp
mov
add
popf
loop
mov
sbb
out
scas
fistpll
cmp
cmp
ljmp
sbb
mov
loop
mov
lret
or
or
ficoml
xchg
arpl
cmp
sub
stos
addl
fbld
or
fbld
movsl
xchg
data16
lcall
add
and
int
pop
loope
sbb
add
jl
sbb
xchg
pop
clc
xchg
fists
jl
nop
inc
fadds
sbb
push
adc
nop
test
stos
mov
lods
addl
mov
enter
fstpl
mov
sbb
in
cmp
xlat
mov
stos
in
dec
pop
jecxz
mov
gs
push
pop
dec
mov
xchg
pop
push
pop
mov
and
call
pop
pop
cmp
cmp
lods
sti
std
rolb
test
int3
sbb
out
cmp
cs
xchg
clc
mov
mov
mov
jbe
flds
repnz
inc
subb
adc
rolb
dec
addl
push
ljmp
mov
push
cmp
inc
mov
sahf
lds
lods
and
fnstcw
push
sub
pop
das
adc
daa
nop
sub
push
je
push
fdivrl
or
inc
adc
push
or
xchg
je
cmpb
gs
dec
inc
mov
leave
xor
xor
jns
scas
mov
pop
hlt
mov
lahf
sub
push
sub
out
lds
dec
mov
repz
test
adc
pushf
inc
divb
push
inc
xchg
cmpsb
xchg
dec
or
pop
icebp
iret
ja
mov
sub
mov
hlt
push
fs
fsub
dec
nop
out
xor
nop
out
mov
add
ret
push
stc
xor
dec
xlat
cmp
mov
jns
ret
bnd
xor
lods
push
cmp
or
and
dec
inc
fwait
popa
vpsadbw
pop
repnz
sub
shlb
jg
cmp
cli
fs
ss
test
enter
add
mov
inc
stos
xchg
mov
xchg
lret
jl
pop
mov
and
lret
inc
sub
pop
dec
lret
jecxz
shl
dec
hlt
test
xchg
in
cmp
dec
pop
jmp
cmp
add
dec
out
adc
mov
sti
pop
inc
scas
add
mov
fisubs
enter
test
and
dec
xor
sub
add
pop
inc
mov
jb
push
lcall
dec
or
xor
mov
cwtl
js
mov
mov
jp
jo
fadds
mov
sbb
std
ret
fcoms
mov
xchg
adc
fldcw
lcall
or
cmpsl
mov
xchg
scas
adc
adc
pushf
cmc
pop
gs
mov
sbbb
stos
pop
dec
jae
xor
adc
insl
in
xor
xchg
cmp
in
stos
rorl
xor
hlt
jmp
sbb
or
mov
test
lret
mov
rorb
scas
xor
inc
in
int
lret
cmp
add
mov
sbb
sub
jno
aad
xor
js
push
and
enter
or
mov
aas
pop
jmp
inc
iret
nop
adc
fnstcw
lods
xor
dec
loop
inc
cwtl
stos
fidivrs
xor
je
mov
shr
adc
clc
out
outsl
xchg
sbb
ljmp
int3
adc
jp
mov
out
fistps
dec
ljmp
bound
insl
pusha
add
nop
enter
ja
ljmp
or
mov
rorl
enter
jo
jmp
bnd
or
into
sahf
inc
es
mov
xlat
jge
ret
pusha
imul
cmp
call
jle
jge
push
dec
popa
jb
dec
in
cmp
xor
daa
inc
test
ret
insl
and
pop
fcoms
fiaddl
adc
mov
mov
mov
daa
add
jmp
mov
mov
jnp
cmpsl
push
mov
rcll
stc
mov
jecxz
test
adc
fwait
jns
cmp
insl
test
int
mov
mov
iret
pusha
cmp
mov
daa
cmp
sub
xchg
mov
comiss
push
arpl
ds
ret
dec
ljmp
and
cmp
push
add
rcll
cmpsl
cmp
sbb
jnp
xchg
ret
mov
xchg
mov
sbb
lret
out
sub
sbb
out
jno
flds
shlb
in
push
dec
mov
push
cmp
mov
mov
sub
das
in
icebp
nop
sti
adc
push
dec
or
nop
mov
xor
nop
les
cltd
jmp
cld
sub
scas
fdivs
mov
or
xlat
mov
movsl
pop
mov
outsl
sbb
jmp
test
and
cli
call
xchg
dec
xchg
jecxz
aas
pop
push
aas
xchg
movsl
add
mov
mov
int3
fs
mov
add
rcll
add
lret
adc
mov
fwait
and
and
mov
fsub
in
sbb
out
mov
addb
xor
xor
pushf
sbb
loop
mov
popf
insb
xlat
and
cmp
ficompl
and
in
mov
adc
imul
xor
js
jp
and
test
inc
leave
sub
sub
je
aas
push
inc
fwait
cwtl
add
jne
push
movsl
cli
inc
test
mov
inc
in
dec
loop
and
xor
into
fcmovb
out
js
sbb
stos
xchg
jbe
out
ds
movsl
push
lret
dec
xchg
loope
movsb
in
faddl
fs
dec
jge
movsl
outsb
inc
cmc
repz
jno
jp
fst
ret
or
push
dec
jb
xor
addr16
cs
cmp
sbb
push
in
jmp
sti
jns
mov
stos
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
movsb
outsb
xchg
lahf
cld
adc
aaa
testl
pusha
jb
lret
xchg
cmp
pop
pop
jg
mov
fs
xchg
adc
fmuls
icebp
dec
test
scas
sbb
pop
add
xchg
test
repz
into
mov
sbb
into
leave
mov
fcomip
out
adc
pop
test
xchg
test
icebp
das
push
mov
jl
sbb
mov
mov
cmp
test
dec
stc
or
sbb
sahf
and
ficomps
mov
repnz
pusha
lret
lret
jne
lahf
fnstcw
bound
out
push
mov
out
xor
popf
push
and
sub
mov
dec
dec
dec
sbb
and
shlb
and
scas
push
pop
jbe
xor
jo
push
or
inc
xor
std
loope
insb
rorb
pop
mov
daa
rorl
dec
or
repnz
jge
into
outsb
sub
push
dec
push
shr
cs
add
mov
mov
cmpb
cmp
mov
imul
ja
xor
inc
mov
rorb
sub
adc
ret
repnz
ret
dec
ljmp
mov
push
sbb
clc
mov
mov
ret
ds
imull
stos
xchg
int
mov
jmp
mov
insb
je
add
sub
stos
fldl
jge
sub
sub
std
mov
leave
mov
lret
aas
fcmovb
js
and
pop
mov
jp
add
mov
xchg
jb
fs
ret
xchg
test
cmp
add
ret
pop
ret
jle
fsubr
add
push
gs
ja
adc
cli
pop
mov
add
mov
stos
xchg
mov
mov
add
mov
sarb
push
add
lret
cltd
sub
jnp
dec
pop
fimull
jb
jl
push
add
cmpsb
ja
or
rol
add
mov
add
mov
inc
scas
leave
push
aad
ja
mov
push
sub
imul
int
add
ds
jp
ljmp
push
xchg
lret
xchg
mov
sub
mov
ret
dec
pop
sbb
dec
aas
popl
or
hlt
das
add
out
adc
mov
xchg
dec
jmp
push
sbb
jle
sbb
stos
outsl
mov
loopne
push
sbb
jae
mov
out
rcrb
pop
ja
out
jle
out
jno
lret
mov
lret
in
or
xchg
xchg
jmp
arpl
outsl
icebp
movsl
outsl
sbb
ss
jg
mov
mov
inc
leave
xchg
pop
add
dec
pop
outsb
test
je
stc
adc
xchg
popa
push
fwait
lret
or
push
insl
xchg
push
cmpsl
into
out
fstpt
adc
das
pop
inc
or
daa
cmpsb
pop
ret
jno
xchg
pop
out
ja
mov
arpl
xchg
add
aad
or
pop
popa
sub
js
and
inc
xchg
dec
sbb
push
js
insl
and
aas
fisttpll
lods
hlt
in
push
leave
cmpsl
cmp
dec
push
in
xchg
inc
lods
adc
mov
pop
push
xlat
mov
idivb
gs
nop
push
adc
repnz
pop
mov
dec
add
mov
pop
mov
jb
cmp
sub
adc
addr16
xchg
out
cmp
inc
dec
jl
adc
aaa
fsubs
inc
aaa
inc
cli
jp
add
jns
sbb
mov
pusha
jnp
fwait
aas
fsub
jmp
mov
sub
mov
xchg
push
cwtl
pop
jge
mov
or
or
bound
mov
mov
scas
mov
push
jnp
lret
and
fsubr
ret
lahf
es
mov
cltd
jns
cmp
mov
testl
lea
ja
push
sub
lcall
mov
pop
lea
arpl
insb
cli
stc
leave
cli
mull
jl
dec
jl
adc
fnstenv
push
or
enter
mov
mov
ret
mov
pop
or
or
int3
jecxz
push
adc
jae
lock
xlat
xor
or
pop
insl
popf
outsl
jae
mov
jnp
imul
ja
cmp
jb
inc
mov
bound
imul
es
mov
jl
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
