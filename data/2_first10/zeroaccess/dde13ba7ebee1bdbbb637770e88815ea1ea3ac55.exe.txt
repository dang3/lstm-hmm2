push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
jp
lods
adc
adc
int
adc
inc
rcll
xor
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
jb
add
push
imull
fimuls
std
imul
addb
mov
outsl
loop
out
scas
pushf
mov
cwtl
icebp
jp
push
movsb
cmpsl
mov
lods
rorb
into
dec
cmpsb
rclb
dec
push
out
jae
mov
sub
es
arpl
mov
jecxz
cmp
jbe
jb
jne
push
pop
pushf
subl
das
or
nop
mov
cmp
adc
testb
cli
into
stos
lret
or
mov
inc
inc
xchg
pop
mov
mov
xchg
mov
dec
xor
aad
jle
or
jle
loopne
add
pop
fs
es
mov
clc
pop
or
js
adcl
xor
sub
cmc
mov
inc
jmp
xchg
sub
lds
jno
push
sub
gs
ss
repz
ja
fwait
xor
mov
hlt
loopne
loop
je
mov
jle
out
push
add
outsb
cld
sbb
dec
mov
lea
mov
xor
xchg
cmp
cld
xchg
rclb
in
xchg
outsb
pop
push
push
loopne
pop
scas
lock
jmp
int
mov
jo
fadds
or
add
jnp
inc
push
sbb
int3
xchg
jmp
push
jp
xchg
in
fstl
andl
cmp
push
insl
out
repnz
rcll
or
jecxz
arpl
mov
mov
inc
mov
cmp
adc
sub
ljmp
pop
out
dec
int
fmull
inc
xchg
inc
adc
sarl
in
enter
imulb
push
test
dec
out
mov
enter
std
clc
js
sbb
sub
dec
dec
fildll
popf
xchg
popf
fwait
shrb
push
movsb
push
mov
icebp
pop
push
mov
inc
adc
jle
cs
push
mov
jb
cli
pop
into
fmull
mov
or
inc
add
shlb
sub
xchg
mov
loope
pop
jge
test
ja
sbb
mov
sub
or
das
jle
sarb
minps
xchg
adc
mov
push
iret
add
or
xor
icebp
filds
out
xchg
popa
pop
mov
rolb
pop
push
push
add
out
sub
cmpsb
xchg
mov
jmp
sbb
pop
pop
mov
insb
pop
mov
sahf
jb
icebp
pushf
jecxz
cld
ljmp
or
inc
inc
lahf
leave
fs
inc
aas
loopne
jmp
fsubr
xchg
lret
push
cmc
pop
jl
into
or
sahf
xchg
mov
inc
and
jmp
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
subl
int
adc
cltd
scas
aad
sbb
mov
xchg
cld
loope
negl
xor
cmpsl
into
cltd
mov
lods
xchg
mov
inc
mov
xor
repz
mov
mov
outsb
stos
push
sbb
push
xchg
loope
xchg
stc
inc
inc
mov
push
dec
ds
cmp
int3
mov
jmp
mov
xor
aaa
aam
xchg
xor
mov
daa
gs
mov
jl
jb
leave
mov
ds
inc
in
sbb
mov
shlb
pop
push
jo
rcl
sbb
or
mov
out
lcall
jp
clc
sbb
arpl
lds
or
mov
and
sysexit
mov
mov
not
mov
mov
xchg
or
stos
or
lods
in
jecxz
std
aad
or
mov
xchg
imul
mov
sbb
fildl
mov
jno
add
subb
lock
sti
jmp
xor
pushf
cli
repnz
lahf
fstl
mov
push
ljmp
cmp
stc
push
sbb
pushf
pop
mov
or
push
adc
sub
push
push
cmp
mov
cmp
jno
sub
jle
shlb
or
sub
ds
fcompl
inc
mov
or
sbb
hlt
pop
sbb
and
inc
mov
imul
fildll
int
pushf
inc
std
mov
cmp
in
cmp
nop
sub
fsubrs
movsl
dec
xor
fistpll
rolb
push
hlt
sahf
jle
or
stc
stos
enter
outsl
inc
leave
mov
xor
ficoms
xchg
lret
pop
jmp
cmp
enter
sub
mov
fmull
inc
daa
xchg
pushf
add
mov
subb
jne
mov
pop
mov
or
push
fs
jecxz
repz
jnp
cmc
jg
add
mov
pop
jle
fisubrl
jmp
adc
lahf
add
and
fisubs
pop
dec
and
dec
daa
insb
addr16
fnstcw
add
aaa
out
pushf
pop
xchg
cmpsb
mov
jecxz
sahf
push
inc
out
add
daa
cltd
push
mov
mov
xor
inc
xor
daa
fbstp
push
flds
fnstcw
in
sub
sbb
mov
nop
pop
cmc
xchg
mov
mov
incb
dec
jb
dec
cmpsb
pushf
xchg
test
sarl
into
push
mov
or
test
ret
and
insb
jo
fwait
mov
xchg
sub
test
dec
fldcw
aas
call
shrl
dec
cmp
inc
inc
and
add
in
add
in
sbb
test
jl
push
push
test
sbb
fildll
cwtl
in
jmp
jne
scas
mov
jecxz
test
add
mov
insb
add
notrack
or
out
int
xchg
in
adcb
gs
pop
mov
xor
mov
push
imul
mov
aas
lcall
fildl
cmp
fldenv
jp
mov
xchg
test
inc
dec
push
fimuls
loope
inc
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
stc
mov
adc
int
adc
iret
shrb
outsb
dec
xlat
mov
jle
mov
cmp
fldcw
repz
inc
inc
inc
xor
mov
push
icebp
fisubs
hlt
call
outsl
aam
insl
ljmp
pop
fidivrs
loope
insb
test
push
out
mov
mov
popa
and
cmp
jl
jp
fstpt
push
xchg
negb
leave
test
cmp
js
mov
pop
or
rorb
jne
add
fsubrs
loopne
addl
shlb
xchg
leave
dec
jmp
sub
subl
repnz
imul
pop
mov
inc
cmp
dec
test
jecxz
jns
out
ja
stos
inc
jae
insl
icebp
outsl
cmp
cmp
insl
jb
cld
push
insl
push
xorb
cmp
and
dec
or
popf
mov
dec
addb
sub
add
aad
mov
mov
pop
xchg
push
lds
jl
dec
dec
or
jg
v4fmaddps
ret
lcall
cmp
inc
or
mov
push
or
xchg
stos
cmc
psubq
jns
jne
xor
arpl
fs
ja
jns
andb
lods
push
jne
dec
lret
push
es
mov
adc
movsl
adcb
mov
mov
imul
xor
arpl
xor
and
stos
out
mov
xchg
cwtl
ss
daa
xlat
mov
inc
das
subb
xchg
add
stos
aad
pop
shrl
stos
inc
shlb
dec
orl
lahf
les
hlt
jge
push
mov
sub
sbb
inc
or
sti
dec
jmp
insl
mov
rorl
jno
jns
jne
inc
cmp
dec
sub
pop
mov
hlt
sub
cmpsl
outsb
xchg
push
addr16
xchg
repz
xchg
insl
mov
das
loop
cmp
mov
in
adc
or
fisubl
inc
jle
icebp
cmp
pop
pushf
jecxz,pn
inc
mov
jmp
inc
sub
loop
sbbl
dec
pushf
xlat
hlt
adc
aas
popa
jp
scas
nop
lock
inc
hlt
inc
dec
sar
orl
jns
sbb
push
mov
pop
pop
lahf
cmp
dec
and
mov
lock
ss
in
test
sbb
sub
sbb
jb
jae
rcrb
imul
shl
movsb
clc
sti
or
adc
aad
mov
icebp
inc
pop
pop
xchg
outsb
sbb
cmp
sbb
push
subb
insl
cltd
sub
mov
or
xlat
jmp
inc
jae
les
inc
cmp
add
add
mov
or
inc
add
cld
jle
gs
sbb
fildll
aad
jle
shr
aaa
sbb
loop
sub
cmp
aam
mov
mov
pop
outsl
add
popf
xchg
push
adc
dec
xor
fnstsw
inc
imul
lahf
fimull
gs
mov
pusha
inc
mov
mov
and
test
mov
loope
and
xor
jp
sbb
push
jnp
inc
fldenv
ss
lcall
sbb
lret
pop
out
mov
cmp
test
cs
decl
jno
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
js
pushf
sbb
lcall
dec
leave
leave
and
xchg
pop
mov
fldenv
adc
or
mov
inc
ficomps
jnp
jno
jns
pushl
cmp
mov
jmp
push
push
xchg
shl
or
jne
popa
fwait
aad
pop
xchg
inc
mov
aaa
adc
jns
sbb
xor
jp
cmpsl
and
pop
lea
add
xor
ja
cmpsb
repnz
repz
inc
push
scas
inc
mull
jmp
xor
inc
into
xor
imul
adc
mov
lds
insl
fildll
push
loop
jmp
adc
aaa
and
arpl
icebp
push
inc
fistps
xchg
ret
lods
mov
add
into
add
sub
add
in
jo
shlb
jge
lods
les
jne
or
mov
lock
mov
cmp
cld
inc
mov
into
pop
mov
in
sbb
jge
stos
or
ds
jbe
pop
mov
arpl
inc
inc
mov
mov
push
cmpsl
mov
mov
leave
jae
sbb
scas
iret
mov
mov
je
pop
jl
xchg
sbb
leave
das
jno
pop
ss
adc
jge
lods
iret
jo
mov
xchg
pop
inc
or
pop
inc
inc
mov
jg
sarb
mov
rcrl
insl
cmp
out
or
mov
cmp
rcrb
jns
dec
out
xor
mov
and
ret
pop
and
push
push
lds
and
adc
inc
sbb
mul
cmpsl
pop
cli
dec
mov
mov
pop
je
aad
mov
leave
js
ja
sub
cs
dec
cltd
dec
adc
out
lea
repnz
mov
pop
sbb
inc
jne
mov
cld
push
outsb
lods
jge
mov
dec
bound
adcb
xchg
adc
test
fwait
test
test
mov
dec
aas
sub
jae
insb
xchg
pop
dec
dec
pop
daa
pop
int3
dec
push
inc
pusha
push
call
xchg
mov
or
jno
xchg
div
mov
popa
lds
out
gs
push
mov
cmp
xchg
jle
jge
jl
popa
ljmp
xchg
jne
orl
inc
jb
sbb
xchg
fsubr
fiaddl
xchg
ror
test
out
fcmovnu
repnz
mov
movsb
daa
mov
mov
jbe
push
mov
pop
sbb
sbb
repnz
or
mov
lods
data16
hlt
adc
lcall
dec
gs
ret
mov
rep
test
mov
cmpsl
dec
push
mov
cli
inc
adcb
dec
nop
jl
push
push
inc
pop
pop
pop
adc
mov
fcoml
xor
and
cld
inc
push
fs
and
fdivrs
inc
xchg
lret
jmp
fwait
sbb
adc
fidivs
adc
lods
pop
or
cmc
xchg
and
pop
mov
cmpb
xchg
ja
xchg
inc
sete
lea
push
in
jmp
jo
aaa
mov
inc
sbb
jns
push
sbb
add
out
out
mov
mov
xchg
pop
sar
pop
inc
filds
mov
out
cmp
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
js
insb
in
notl
adc
adc
adc
lret
subl
fmull
xchg
flds
sub
inc
das
arpl
cmp
cmp
mov
push
xchg
inc
pop
sahf
adc
mov
shrl
cmp
sar
test
pop
push
sub
andps
xor
xchg
cmp
or
xor
or
and
mov
loop
dec
jo
stc
pop
push
push
xor
sbb
add
insb
add
roll
add
jge
xlat
sbb
ljmp
sub
sub
fstps
lds
fstps
fimull
jp
sti
movsl
loope
dec
arpl
push
fimull
adc
clc
std
xor
xchg
mov
adc
sub
flds
jecxz
mov
int
push
inc
in
ljmp
mov
lock
dec
xor
hlt
out
sub
aas
cmp
std
adc
mov
add
int
xlat
punpckhbw
inc
repz
test
out
push
ljmp
clc
pop
out
divl
lea
out
dec
jnp
xor
mov
cmpb
rol
jl
sarl
out
pop
xchg
bt
cmpsl
and
aaa
mov
fcmovb
add
jno
mov
add
xor
push
enter
cmc
xchg
push
int
adc
and
and
int3
inc
xchg
xchg
fldz
sahf
sub
cmpsl
clc
fbstp
pop
cmp
push
pop
imul
movsl
iret
mov
sub
dec
cs
mov
movsl
xchg
pop
sahf
add
push
push
xor
outsl
jno
push
push
stos
xchg
xor
in
iret
pop
daa
cmp
ror
sbb
xchg
insb
int
push
jno
mov
or
or
jge
lret
pushf
adc
and
test
mov
xchg
ja
inc
jae
cmp
jl
lods
jns
xchg
sbb
adc
inc
iret
dec
les
out
push
out
xor
int
mov
cmp
fs
ja
push
subps
mov
imul
sub
aaa
ret
mov
sbb
scas
arpl
xor
decl
call
dec
dec
xchg
mov
std
cmpsl
xchg
orb
and
sub
mov
jge
pop
pop
xor
and
mov
xchg
icebp
or
testl
out
and
arpl
push
pop
aas
xchg
push
pmaxub
nop
sbb
enter
add
sbb
jae
mov
repnz
lea
push
and
das
mov
adc
push
insb
xchg
adc
iret
sbb
mov
mov
negb
jno
adc
dec
enter
pop
xchg
in
lods
out
mov
push
push
cmp
or
cmp
or
fmuls
in
shrl
bound
xchg
loopne
inc
push
and
sbb
push
mov
or
inc
jg
lahf
ja
jge
popa
add
ret
popf
das
xor
loop
roll
test
cmpsb
mov
jecxz
xchg
cli
push
in
or
xchg
mov
imul
sub
push
cmp
sub
rol
cli
sbb
popf
out
add
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
or
xor
int
adc
or
sahf
sbb
adcb
mov
aaa
mov
mov
push
xchg
lods
mov
adc
ficoms
in
dec
jo
mov
stos
out
mov
das
jnp
lea
add
sub
xchg
mov
mov
jg
ds
mov
xorl
jge
fnstenv
fmuls
pushf
sbb
add
cmpsb
cltd
mov
lcall
mov
jo,pt
je
or
rorb
inc
and
or
dec
rolb
mov
pop
inc
test
shrb
into
sar
nop
jge
gs
loope
lods
mov
mov
cmp
cmp
call
sahf
into
mov
fisttps
in
adc
outsw
push
and
enter
test
lods
dec
push
mov
and
les
ficoms
adc
sbb
pusha
mov
outsb
sub
mov
call
or
add
scas
imul
pusha
jp
jnp
dec
les
pop
jg
popf
repnz
ja
mov
pop
cmp
imul
and
push
sbb
out
push
js
inc
stos
mov
ljmp
jae
out
cmp
sbb
fs
sti
xchg
outsl
xchg
adc
scas
pop
pop
sar
das
outsl
or
push
es
sub
call
mov
movsb
pop
clc
sub
inc
pop
test
cmp
cmp
inc
dec
xchg
in
imul
mov
xor
andl
adc
popa
fsubp
call
adc
xor
fwait
jbe
mov
mov
fsubrl
mov
stos
pop
push
mov
data16
rclb
inc
mov
push
jns
sub
adc
push
xor
out
pop
adc
adc
popf
mov
arpl
test
and
mov
push
jne
sbb
jmp
test
out
or
xor
clc
popf
jg
jno
lods
jge
ret
mov
outsl
mov
lahf
aad
and
mov
outsb
lods
jae
rsm
out
roll
sub
pop
aad
fidivrl
test
fcomip
adc
xor
adc
imul
and
mov
push
cld
jp
or
mov
jge
adc
movsb
js
in
mov
loope
shrl
mov
dec
add
movsl
inc
sub
pop
cmp
jae
inc
lcall
fiadds
daa
out
mov
jp
sbb
or
jecxz
and
pop
enter
pop
aad
aas
sub
sbb
and
mov
adc
pop
add
sbb
adc
xor
outsl
dec
test
jo
add
stos
xchg
hlt
adc
shl
dec
push
mov
xchg
repnz
stc
pop
cmp
push
sahf
xchg
fimuls
xor
jo
or
mov
mov
inc
ret
hlt
mov
dec
pop
xor
cmp
cmpsl
js
pop
mov
ud2
sbb
mov
neg
jb
dec
outsl
jns
push
lods
out
mov
ss
ljmp
sahf
mov
cld
jbe
jmp
call
cmpsl
jns
add
or
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
popa
test
push
in
adc
int
adc
xor
in
add
push
frstor
pop
scas
push
outsb
pop
cmp
setl
xchg
and
outsb
and
cs
arpl
xor
mov
pop
jbe
or
push
inc
hlt
mov
shlb
cmp
dec
fstpl
pusha
lea
push
ret
sbb
jne,pn
test
jne
repnz
addr16
cltd
jo
cmp
dec
push
in
mov
cmc
clc
jge
push
popf
jg
scas
add
das
ret
jnp
jno
jp
shrb
xor
popa
mov
shll
pop
cmpsl
in
add
out
xor
mov
mov
xchg
cli
push
jns
xchg
or
pop
loope
sbb
imul
cmp
inc
popf
mov
xchg
fldenv
mov
jle
add
sahf
push
add
mov
ret
rclb
mov
cmp
call
maxps
xchg
lcall
jae
mov
xor
into
inc
xchg
jae
test
lods
push
dec
mov
inc
aad
sub
pop
ret
stc
cli
loope
jl
cmp
push
jns
and
fcomps
rcrl
pop
push
fildll
mov
jge
fwait
mov
xchg
mov
mov
xor
cmp
pushf
cmp
mov
sbb
and
sub
or
sbb
sub
orl
popf
sub
idivl
cmp
mov
add
imul
repz
cmpsl
jns
xchg
insl
and
adc
push
cmp
mov
xchg
aam
jle
and
push
inc
out
cs
out
mov
imul
xlat
lret
push
addr16
dec
aam
pop
enter
ljmp
repz
add
add
jno
dec
pop
dec
sub
mov
call
xchg
push
arpl
aaa
fdiv
das
dec
ss
dec
inc
mov
cli
call
fnsave
pop
hlt
les
fiadds
inc
jmp
mov
push
cmp
xchg
iret
or
sarl
leave
cld
arpl
mov
loop
mov
stc
cld
sub
enter
and
imul
daa
push
sarb
mov
pushl
test
xchg
sbbl
cmp
stc
and
aaa
cmp
xchg
imul
sbb
jb
mov
push
test
mov
inc
js
and
pop
les
arpl
movsl
mov
stos
lds
movsl
scas
pop
inc
dec
push
aam
insl
push
jbe
mov
stos
jecxz
xchg
pushf
or
rcll
mov
iret
mov
and
and
cwtl
or
sbb
jne,pn
das
xchg
dec
cmp
and
aas
popf
lret
pop
mov
sub
lcall
in
sti
pop
inc
pop
push
xchg
cmp
adc
outsb
cmp
xchg
and
xor
xor
mov
sub
add
mov
imul
cmp
adc
in
push
mov
leave
mov
lods
ja
mov
std
ffreep
jo
clc
jge
xor
sub
in
and
xchg
xchg
dec
je
insb
scas
xchg
setnp
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
mov
or
adc
adc
adc
push
ljmp
cmp
mov
sbb
in
jmp
aas
lock
in
repz
add
mov
in
push
add
and
xchg
xor
inc
jbe
outsl
jle
push
lods
movsl
and
sbb
xchg
xchg
cs
testb
popf
cmp
fwait
in
dec
mov
adc
cwtl
lea
icebp
jl
sbb
sub
shll
push
cwtl
jo
jne
pop
shll
fcoms
xchg
mul
push
add
aaa
out
mov
push
cwtl
idivb
pop
jne
mov
mov
je
xor
dec
dec
jbe
pop
ret
sbb
mov
sbb
call
and
jb
das
adc
jl
iret
adc
xor
lret
fsubp
cmp
daa
sbb
sub
dec
sub
mov
or
mov
pop
mov
and
iret
mov
in
adc
test
outsb
sub
popa
icebp
dec
imulb
push
call
sub
idivl
sbb
rorl
xor
pop
sub
pop
mov
xor
dec
xchg
les
pop
roll
insb
int3
data16
pop
popf
cmp
lahf
orl
loopne
xor
aas
push
cld
loope
cmp
cmpsb
in
mov
mov
ret
cmp
sahf
je
popf
push
loop
insl
xchg
push
xor
inc
bound
imul
push
adc
dec
mov
sub
fcomip
es
dec
icebp
inc
sub
mov
mov
push
in
sbb
mov
push
sub
pop
pop
add
cltd
dec
or
dec
loopne
push
insl
fistpll
std
or
adc
mov
adc
mov
jno
shll
mov
in
cmp
sahf
shlb
jno
add
bound
fdivl
sbb
shll
stos
mov
aas
fstl
and
mov
les
cmp
test
lds
pop
fbstp
push
mov
or
pop
add
insl
sbb
add
sbb
sti
ss
and
imul
loopne
xchg
int3
mov
imul
cltd
xchg
sbb
sub
aas
lds
insb
mov
add
xor
sbbb
cmpsb
test
adcl
loope
frstor
in
std
dec
add
pop
pop
mov
scas
mov
mov
addr16
push
lcall
xchg
fmuls
into
test
cmpsb
mov
aas
jne
std
mov
inc
adc
adcb
insl
sub
adc
ret
subl
lret
jecxz
add
add
mov
xchg
pop
jge
ds
xchg
jbe
pop
inc
shl
sbb
gs
or
out
push
repz
xchg
shl
repnz
cmp
out
insl
fisttpll
xchg
push
or
sub
mov
fs
mov
xchg
inc
xor
mov
add
and
out
push
adc
sub
mov
jnp
in
jl
mov
xchg
and
mov
add
in
icebp
mov
adc
xchg
push
mov
fmul
clc
and
rcll
push
xor
test
sub
sbb
mov
call
test
push
dec
lods
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
pop
add
mov
int
adc
sub
test
pop
cwtl
data16
mov
ret
push
pop
mov
inc
dec
jecxz
lds
insb
jmp
sub
inc
fs
sahf
xchg
mov
pushl
add
xchg
push
lcall
or
addr16
push
dec
or
scas
inc
mov
xchg
mov
add
nop
jp
popf
mov
das
cmp
push
cmp
push
or
subb
pop
mov
popa
jmp
dec
mov
adc
xlat
daa
sbb
in
das
aaa
jb
les
leave
das
or
aam
inc
rcl
cmpsb
or
cmp
inc
push
ja
inc
das
std
jle
cmc
je
fs
aad
inc
cmpsb
xor
lret
int
icebp
ljmp
je
pop
jmp
push
lock
adc
out
leave
test
in
mov
aas
out
xor
js
push
clc
lock
dec
push
fsubrl
dec
out
push
dec
inc
mov
js
fs
jmp
icebp
or
not
pop
mov
shll
iret
sub
sub
and
lock
cli
cmpsl
dec
and
fsubs
sub
or
inc
mov
push
mov
int3
and
enter
into
dec
push
jbe
repnz
pop
mov
test
loopne
pop
and
sub
mov
stos
inc
test
pop
xchg
ja
jp
movsl
pop
push
mov
neg
int3
mov
jnp
mov
mov
ror
jl
inc
lret
subb
mov
pop
insb
call
fcoms
outsb
pop
idivl
jno
push
pushf
mov
out
out
lret
rclb
pop
ja
leave
popa
lret
mov
loop
or
int3
cmp
pop
imul
push
loop
mov
rolb
add
or
push
mov
or
loopne
mov
or
pusha
lea
out
or
sub
pop
fdivrs
fwait
in
or
pushf
mov
enter
pop
sarl
fmul
iret
addr16
adc
sbb
xlat
filds
dec
xchg
jp
rcr
pop
xchg
in
push
sbb
mov
dec
repz
fsubr
ret
xchg
fildl
pop
fstp
or
dec
sub
pushf
pop
or
inc
xchg
adc
xchg
mov
pop
das
inc
adc
sub
lret
sub
pop
cld
xlat
hlt
jo
jno
xor
mov
adcb
jge
jns
scas
orl
aad
and
xor
push
jbe
jmp
movsb
sub
cmpsb
xchg
in
fs
add
or
and
inc
jecxz
repz
pop
jnp
lea
arpl
fwait
aaa
lcall
daa
jbe
mov
push
jae
mov
push
mov
xlat
add
movsb
mov
incb
xchg
xchg
andb
xor
xor
xchg
stos
xor
mov
xchg
int3
int3
cli
jo
fnstcw
xchg
mov
mov
push
icebp
stos
shlb
dec
sub
and
xor
mov
push
cmp
adc
lds
pop
or
jge
mov
ja
jno
movsb
lahf
sub
aad
lret
push
daa
stc
andb
jmp
mov
shl
jmp
fmuls
sbb
dec
iret
xchg
js
aam
adc
adc
adc
ljmp
sbb
add
jo
pop
and
push
pop
cltd
shr
imul
ret
xchg
sub
fldcw
or
pop
xor
imul
or
loopne
cmc
push
mov
jge
movsl
leave
in
cmp
or
icebp
je
push
aad
into
shlb
int
and
adc
mov
push
fs
jo
cmc
jae
xchg
and
call
inc
int
lods
hlt
loopne
fisubs
adc
xor
or
cmp
push
iret
pop
push
add
andb
add
dec
addr16
push
aam
test
xchg
jo
mov
aad
stos
pcmpeqw
mov
insl
lret
jo
jbe
sub
sbb
xchg
stc
ss
pop
les
stc
lret
sahf
xchg
in
stos
nop
fs
jo
and
mov
and
add
hlt
xor
or
sahf
shl
push
xchg
jecxz
fmul
inc
mov
lods
adc
shl
or
push
adcl
pop
cmp
mov
into
mov
sub
pop
pop
pop
aas
adc
into
je
jl
std
mov
mov
arpl
mov
clc
dec
push
aad
mov
or
mov
xchg
int3
dec
ret
cmc
xchg
inc
push
push
lock
arpl
dec
push
adc
jp
adc
pushf
cltd
sub
xchg
lods
jbe
jne
mov
mov
mov
mov
inc
in
jnp
jno
jb
mov
mov
test
adc
or
fwait
addl
xchg
mov
fnsave
push
pop
shr
aaa
and
mov
in
jl
in
mov
adc
shrl
mov
fdivp
or
loopne
dec
out
xchg
add
add
xlat
stc
test
sub
fs
ret
jno
pushf
mov
mov
ret
jg
jae
xchg
fisubs
in
adc
adc
mov
mov
or
pop
stos
test
add
stos
gs
add
inc
dec
insl
movsb
loopne
pop
inc
mov
loope
cmc
and
mov
and
dec
gs
int
jmp
xchg
fs
ja
mov
jecxz
fsts
out
or
loop
cmpl
mov
mov
aaa
out
imul
enter
mov
adc
inc
mov
shl
push
out
xchg
add
ficomps
push
lcall
les
imul
pop
sub
push
subb
adc
outsb
jle
cmpsl
mov
jb
xor
lds
mov
or
pushf
mov
test
push
and
mov
mov
inc
lock
jnp
or
jne
pop
test
icebp
mov
dec
enter
out
mov
inc
ds
repnz
inc
adc
mov
lods
std
adc
mov
clc
in
repz
aas
and
sysret
aam
mov
addr16
inc
insb
xchg
mov
rol
mov
lds
aam
subb
dec
in
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
inc
movl
int
adc
pop
or
fidivs
jbe
pusha
push
add
in
push
fwait
jns
mov
inc
add
mov
mov
call
adc
mov
and
stos
andb
jns
adc
adc
push
push
xor
ss
outsl
push
pop
scas
dec
sti
gs
mov
mov
cmp
mov
sub
filds
sbb
lret
xlat
ret
in
or
loope
test
scas
aas
cli
adc
scas
ja
adc
loop
ffree
inc
insb
pop
and
xchg
decb
dec
xchg
cmp
scas
mov
lret
mov
push
lock
mov
xchg
pop
push
push
std
aad
mov
imul
and
push
testb
adc
inc
and
xchg
adc
inc
lds
mov
popf
clc
push
lcall
sbb
sbb
nop
mov
add
adc
xchg
repz
aas
pushf
jo
cld
mov
mov
neg
add
and
sti
es
cmp
cmovle
js
into
into
sbb
sbb
outsb
loop
mov
cmp
xor
or
je
xchg
sbb
iret
adc
xor
or
repnz
sahf
fcomi
pop
push
push
push
push
push
pop
sbb
das
insl
test
notb
dec
fistpl
adc
mov
inc
stos
mov
aam
repnz
sub
jmp
call
push
sub
popf
jb
jge
mov
jge
fistpl
gs
repz
xchg
inc
cmpsl
xor
stc
outsb
pop
sbb
jle
xor
out
fmul
rorl
movsb
cwtl
out
lds
jae
sub
test
sub
popf
sbb
push
in
cmc
ficoml
or
cmp
movsb
mov
inc
sub
jo
mov
cmp
and
xchg
out
jae
mov
inc
shrb
negl
sti
sbb
clc
not
xchg
clc
push
or
add
pop
enter
cli
jg
imull
sbb
gs
mov
sahf
imul
pushf
mov
in
pop
lds
ds
pushf
fdivp
pop
movzwl
sbb
inc
add
dec
push
jae
adc
pop
xchg
in
push
pop
push
add
dec
fwait
jne
push
lahf
add
adc
sbb
inc
fmull
data16
push
sbb
test
jb
push
adc
jb
inc
clc
or
sub
jmp
xor
lods
icebp
mov
outsl
and
stc
cmpsl
adc
lahf
push
leave
or
add
pop
push
mov
loop
repnz
test
jns
or
pop
rorl
xlat
test
xor
pop
xor
pop
clc
jle
imul
xchg
repnz
push
add
push
sbb
push
test
and
ljmp
call
paddq
testb
mov
push
arpl
fcmovu
dec
adc
jg
mov
lret
add
popa
cmp
sbb
int3
sub
sbb
push
pop
arpl
ret
pop
mov
push
add
jmp
inc
sbb
sub
inc
xchg
ficoms
dec
sar
popa
mov
add
test
ret
stos
rol
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
popf
addl
ljmp
adc
cmp
mov
outsl
push
lods
insl
add
mov
mov
mov
add
andl
cmp
inc
push
xor
sti
or
jnp
add
lret
das
pop
mov
in
mov
adc
mov
enter
cli
cmpsl
jmp
xchg
push
xchg
enter
push
dec
stc
mov
js
fwait
jbe
mov
cmp
in
push
pop
xchg
lods
jp
push
adc
ficomps
int
sub
mov
xor
mov
sahf
and
cltd
mov
dec
fwait
mov
add
dec
mov
adc
leave
or
pop
iret
inc
loopne
pop
pop
popa
in
ljmp
xchg
dec
mov
stos
je
xor
adc
clc
push
cltd
pusha
lea
mov
jmp
ficoml
in
adc
inc
push
call
ret
in
rcrb
mov
mov
sbb
lds
popa
fnstenv
inc
rorb
movsl
pop
push
cmp
insb
inc
push
fs
imul
adc
mov
jne
movsl
inc
add
jb
adc
dec
jnp
shll
fisttpll
cld
dec
out
jmp
imul
icebp
mov
mov
and
popa
int3
stos
ja
jmp
stos
sub
inc
add
jno
xchg
jmp
imul
stc
mov
insl
mov
jb
hlt
or
cs
mov
mov
fisubrl
jge
and
arpl
mov
mov
cmp
xorb
insl
stos
rcrl
cmp
aam
adc
mov
push
into
outsl
dec
sub
mov
inc
rcr
jecxz
jg
mov
cwtl
or
dec
popa
mov
mov
xchg
imul
xchg
mov
sti
shll
inc
lods
pop
sbb
mov
xor
stos
leave
lods
js
fidivs
test
jbe
jg
inc
jns
push
fnclex
mov
scas
pop
dec
fiaddl
loop
dec
loopne
dec
loopne
inc
stc
xorb
cmp
mov
pop
xor
icebp
mov
sbb
repnz
icebp
sbb
jp
pop
fidivl
mov
jbe
sbb
jne
mov
test
mul
xchg
cmpsb
push
mov
mov
in
ficoml
dec
jge
je
mov
test
cmpsl
inc
test
dec
push
and
xchg
bnd
lods
jo
xchg
xor
inc
mov
or
mov
addl
sbb
rolb
fidivl
and
xlat
push
movsl
sbb
inc
lcall
jns
cmp
lret
pushf
cmpsb
jp
fdivrl
insl
pop
shrb
in
mov
mov
add
cwtl
int3
jle
and
push
inc
in
push
add
leave
or
movsl
aad
push
mov
pushf
sub
bound
imul
stc
movb
mov
cmc
jno
cwtl
xorl
loope
shlb
cmpsl
loop
daa
loop
jp
fistpll
shll
push
sbb
mov
jg
imul
dec
ljmp
sbb
mull
nop
lret
push
mov
arpl
add
ret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
pop
push
inc
stos
fwait
ret
int
adc
or
insb
sbb
mov
sahf
pop
mov
jle
enter
pop
lds
lods
push
aaa
or
jl
clc
push
pop
jns
int3
js
inc
jb
pop
mov
cwtl
mov
je
shl
subl
cwtl
ret
vcvtsd2si
or
lock
push
sbb
xor
das
xchg
aaa
movsb
mov
pop
nop
test
addr16
test
pop
test
lea
mov
inc
cld
iret
aad
mov
lret
mov
mov
mov
fbld
aam
popf
mov
test
and
pusha
jmp
mov
lret
mov
xchg
mov
push
call
or
or
fcoml
movsl
cmp
mov
sahf
pop
mov
imul
jp
outsb
scas
sub
iret
arpl
cmp
je
sub
dec
cmp
or
iret
sub
testl
sub
inc
cmpsb
add
loope
adc
ja
mov
add
sub
cmp
ljmp
xor
jno
jne
mov
ja
stc
mov
cld
test
sub
or
jb
test
lea
xchg
imul
ss
jne
dec
push
inc
mov
mov
dec
leave
dec
dec
daa
jnp
sbb
addr16
mov
sahf
push
jmp
fstpl
dec
into
xchg
ja
sub
pslld
aas
xor
js
adc
rcrl
lret
int3
ficompl
cld
stc
sub
incb
pop
xchg
jg
filds
subb
pop
out
das
test
mov
mov
mov
jmp
adcb
jp
xor
dec
dec
scas
jb
mov
fbstp
mov
pop
push
movsl
movsl
push
xchg
into
call
cmp
cmp
xsha1
cmpsb
dec
sbbb
out
add
rolb
sub
ss
sub
in
and
mov
or
rolb
and
out
je
icebp
test
rolb
pop
stos
pop
in
jmp
lock
push
cmp
mov
out
pop
cmc
cltd
inc
cli
jmp
insb
cltd
ret
xchg
out
outsl
pop
mov
cmp
or
test
adc
cmp
inc
pop
sub
pop
int
movsl
adc
adc
jo
pop
mov
jecxz
add
gs
pop
popa
inc
sub
scas
fs
es
jecxz
mov
mov
dec
mov
xchg
mov
cmc
or
jae
mov
add
sub
mov
pop
sub
mov
xchg
outsb
or
ljmp
aas
fcmovu
call
pop
sbb
add
and
and
jne
mov
stos
push
dec
mov
xchg
fbld
push
jecxz
pop
push
xchg
scas
cmpsl
popf
sti
mov
sbb
pop
test
jg
or
fmuls
movsl
inc
scas
scas
pop
out
xchg
imul
stc
push
push
xchg
pop
adc
and
nop
call
jecxz
pop
adc
dec
out
mov
icebp
mov
push
inc
cmpsl
mov
dec
mov
inc
out
clc
or
jmp
cli
jle
insl
inc
sbbl
or
sbb
xor
pop
mov
cwtl
fmuls
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
clc
fs
mov
adc
test
fimull
dec
cmp
push
mov
mov
mov
xor
shll
mov
xchg
inc
and
push
cmpb
fs
push
negb
enter
outsb
cltd
xchg
pop
loope
ljmp
or
mov
sub
or
or
mov
add
adc
cmp
xchg
sahf
jmp
inc
pop
int
lods
cmpb
or
push
enter
mov
test
dec
xor
xchg
ljmp
ds
jle
jnp
das
mov
cli
leave
mov
mov
mov
mov
imul
inc
mov
stos
fsubr
movsl
adc
daa
or
push
fbstp
pop
mov
lods
js
pop
mov
pop
int
push
negb
sti
add
lea
and
or
shlb
and
loop
xchg
cwtl
and
or
test
xchg
in
push
lock
ds
pusha
scas
add
xor
int
in
jno
pop
scas
jp
add
cmpsl
push
sahf
mov
sub
and
cmp
je
xlat
imul
push
repz
inc
inc
int
int
shrl
xchg
fldcw
inc
mov
mov
jno
fcmovnbe
test
push
in
stc
push
mov
mov
dec
das
dec
pusha
mov
pop
adc
test
in
lods
movl
cmpsb
ja,pn
out
in
loopne
aad
xor
xor
out
mov
cwtl
jns
adc
pop
xchg
fstpl
aam
mov
sarl
jp
jo
inc
stos
pop
push
add
ja
imul
add
lods
mov
repnz
jmp
gs
arpl
dec
pop
sbb
rolb
sub
inc
xorl
jge
mov
rolb
mov
push
lea
push
stos
sub
ret
or
xor
inc
pop
cmp
lods
movsb
xor
hlt
mov
popf
sbb
cmpsb
cmp
in
adc
addl
shlb
popf
ret
mov
es
enter
into
mov
insb
and
mov
cmp
mov
sahf
or
jp
bound
test
mov
jo
xchg
ss
add
jge
mov
lahf
inc
std
hlt
stos
sti
ficomps
std
mov
aad
popa
mov
stc
xor
cmpsb
sahf
cmp
ret
and
jmp
repz
outsl
mov
leave
lret
mov
sbb
dec
jb
mov
mov
jno
add
and
push
dec
jge
xchg
push
pop
fadds
mull
mov
nop
fisubrl
sbb
fwait
mov
xor
movb
hlt
or
lods
pop
int
hlt
bound
test
test
imul
lcall
add
loopne
sub
push
in
out
mov
pop
test
repnz
rorl
and
and
jb
mov
out
clc
jo
cwtl
movl
mov
push
dec
pop
and
jns
cmp
movsb
in
movsb
cwtl
mov
imul
xor
aas
pop
push
js
inc
mov
or
call
test
inc
in
mov
jecxz
movsb
dec
jl
sub
push
inc
push
dec
int
iret
fsubrl
push
add
fmuls
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
paddw
int
adc
out
inc
xor
adc
mov
or
xor
jno
jp
aas
pop
lods
or
pushf
addb
test
imul
mov
sbb
int3
sbb
test
jg
andl
adc
cmp
jp
cmp
ljmp
scas
std
inc
dec
adc
pop
xor
inc
add
cld
nop
mov
rclb
das
xchg
pop
test
in
enter
pushf
cli
jmp
push
adc
xor
arpl
icebp
ljmp
pop
jl
or
push
lcall
cmpsl
mov
jno
in
insl
mov
cmp
out
std
aas
push
pop
push
lret
inc
cltd
lcall
adc
imulb
dec
mov
fldcw
or
repz
flds
jnp
mov
js
pushf
ljmp
adc
std
cmp
push
mov
add
imul
out
xchg
icebp
in
jnp
jg
xor
dec
int3
pop
adc
bnd
cmpsl
call
lahf
jns
or
call
jecxz
rcr
fisubrl
hlt
pop
pop
xchg
iret
push
into
push
insl
mov
mov
xchg
test
sbb
pop
fmuls
mov
es
stc
adc
cld
sub
xchg
cmp
je
in
mov
imul
cltd
mov
xor
lods
add
xchg
or
fldl
fsubr
and
mov
dec
or
data16
push
icebp
mov
mull
sub
xchg
or
dec
aas
jns
xor
push
in
in
mov
inc
pop
scas
addb
loop
xor
xchg
cmp
leave
lods
and
out
mov
dec
sbb
ss
push
mov
sub
mov
pop
dec
cli
sub
inc
lods
push
dec
jmp
in
mov
xchg
call
sti
mov
div
aas
xchg
pop
daa
sub
or
xor
adc
mov
loop
fsubrs
push
mov
data16
inc
ja
les
ljmp
mov
fnstsw
imull
idivb
mov
pop
fld
mov
xor
cmp
fidivrl
pop
sbb
subl
in
xor
cli
lods
test
lcall
jb
push
fildll
cmp
push
jno
mov
adc
cs
lcall
incb
callw
in
pop
int
lret
jmp
loope
std
pushf
idivb
and
dec
jecxz
test
das
and
mov
jo
and
add
lea
mov
pop
repnz
mov
loope
add
mov
xor
push
inc
adc
cmp
mov
test
xor
in
jmp
subb
pop
adc
xor
adc
jnp
pop
xlat
mulb
inc
push
jmp
sub
lret
inc
subb
imul
cld
enter
rorb
sbb
xchg
adc
outsl
jnp
ljmp
scas
dec
mov
inc
scas
jno
push
xor
jle
dec
sub
lahf
mov
jbe
adc
stc
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
jmp
adc
int
adc
out
adc
dec
roll
fnsave
xchg
xor
imul
in
xchg
sub
dec
sbb
fwait
dec
les
lds
and
in
xchg
mov
push
push
dec
sarl
inc
push
inc
mov
enter
add
sarl
add
mov
stc
sub
cmpl
dec
sahf
ja
imul
push
lahf
mov
mov
xlat
fstl
dec
add
repz
dec
aas
cmp
fwait
lcall
and
xchg
adc
insb
std
jb
mov
outsl
inc
outsb
cmp
or
xchg
mov
pop
xchg
xor
mov
fucom
ret
inc
js
pusha
jge
dec
mov
cmpsl
adc
dec
jecxz
loop
or
in
sbb
dec
sub
xor
aas
dec
or
mov
sahf
cmp
jg
loope
hlt
xlat
popl
aaa
shlb
xlat
aad
ret
je
es
mov
test
xchg
push
mov
adc
push
out
dec
mov
sbb
aaa
enter
mov
mov
mov
cmpsb
or
lea
mov
pop
gs
mov
shlb
out
xchg
iret
or
jp
xor
test
clc
pop
outsl
xor
dec
sub
cmp
aas
inc
jae
xor
cld
aaa
xchg
sahf
inc
movsl
lret
jg
dec
jge
ljmp
lret
cli
es
aaa
hlt
mov
mov
movsl
jle
es
mov
sbb
daa
scas
xor
mov
adc
jl
pop
mov
xchg
mov
les
testl
or
adc
add
lock
subl
cmp
pusha
add
jg
push
ja
xchg
ficoms
fs
call
ljmp
in
or
pop
rcl
and
inc
sub
call
ja
ja
out
popf
pop
lds
out
fstl
push
aam
or
repz
sub
mov
push
imul
pop
mov
cwtl
push
sbb
sub
push
inc
adc
scas
jl
inc
jne
lods
sahf
inc
out
dec
mov
test
bnd
lret
daa
mov
ljmp
fldl
pop
dec
into
mov
das
adc
iret
dec
insl
adc
inc
mov
ss
sbb
sbb
js
lcall
int
push
fsubr
enter
movsl
sbb
mov
mov
pop
sbb
or
mov
std
lret
sbbb
mov
jno
daa
in
in
xchg
ja
pop
repz
inc
push
cmpsb
jnp
inc
add
addr16
mov
pop
pop
sarb
xchg
mov
push
cpuid
loopne
enter
in
scas
mov
and
movsl
sbb
jae
and
in
push
jp
cmp
sub
hlt
push
sub
adc
fistpl
in
stc
and
nop
ds
test
jo
sbb
cwtl
pop
cld
lcall
adc
adc
pop
cmp
push
inc
lea
xor
call
pop
dec
gs
jo
jnp
inc
adc
ret
in
cltd
sbb
xchg
hlt
pop
xor
aas
adc
sbb
nop
icebp
mov
jns
add
int
andl
jmp
fadds
sbb
lea
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
and
adc
int
adc
xor
pop
sbb
xor
lcall
pop
add
imul
int
icebp
xchg
sub
adc
lret
mov
sub
mov
mov
lods
stos
fbld
lret
gs
and
adc
aad
xchg
mov
enter
jge
xchg
dec
insb
dec
in
xchg
sub
add
mov
lret
adc
jno
ficoms
mov
dec
and
xchg
jae
popa
ja
dec
xor
cs
cmp
mov
fimull
push
in
enter
cmp
cmp
xlat
aam
mov
mov
lret
cmpb
xchg
js
fimuls
pop
idivl
orb
jno
mov
xchg
pop
repz
mov
mov
mov
xor
push
lret
out
push
jl
ljmp
std
fistps
mov
stc
inc
cmpsb
ret
inc
pop
fwait
ds
fucomi
cwtl
sub
add
pop
repnz
out
aad
mov
outsl
lods
dec
xchg
sub
repz
lret
pusha
sbb
or
adc
sbb
inc
mov
aas
popa
adc
mov
jno
or
stc
aas
js
fidivs
jg
push
xchg
jne
data16
mov
popa
cmp
mov
cmc
cltd
xchg
dec
inc
leave
xor
cwtl
add
mov
lret
sti
dec
mov
sbb
sar
or
outsl
pop
cmp
mov
dec
push
rorb
outsb
inc
ret
stos
xchg
out
cltd
ljmp
scas
mov
mov
lcall
xor
sub
jge
xlat
sbb
std
lods
jge
filds
jg
and
stc
out
or
out
call
lods
inc
mov
int3
and
jno
jmp
mov
sub
mull
add
mov
xor
xchg
sahf
test
aas
xchg
je
ss
imul
inc
inc
adc
mov
sub
rcll
out
adc
pusha
sahf
icebp
bound
inc
fmull
iret
mov
pop
sub
jo
in
and
inc
jno
lock
stos
movsl
pushaw
fnstenv
pop
mov
addb
aam
insb
and
aam
jne
mov
xchg
test
daa
ljmp
out
fimuls
loop
pusha
and
adc
mov
sbb
jmp
and
imull
adc
xlat
mov
and
and
fistpl
int
jecxz
jb
mov
xor
das
and
mov
adc
cld
inc
sub
sub
cltd
fcomi
add
jge
push
xor
ret
gs
ficoms
call
ds
ret
in
lea
mov
pop
fldt
test
jle
clc
push
mov
inc
inc
loope
dec
in
add
inc
pop
pusha
outsl
in
cmpsb
xor
mov
sbb
cmp
mov
lea
push
or
sub
lds
enter
jp
xchg
add
mov
sub
jmp
mov
popa
jo
push
dec
sub
adc
aad
dec
test
jle
ljmp
cmc
sbb
xchg
lds
mov
in
imul
push
add
ja
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
outsb
jp
sub
adc
adc
mov
adc
popa
and
iret
data16
std
dec
out
popf
iret
dec
cmp
dec
mov
test
stc
lods
leave
mov
arpl
mov
cmc
in
testl
push
mov
in
inc
dec
int3
jmp
mov
loopne
fldcw
sbb
and
lds
out
imul
testb
push
xchg
dec
or
inc
xchg
out
sub
adc
or
sbb
ret
repnz
adc
loopne
in
jl
adc
xchg
shrl
in
sub
aaa
stos
dec
xchg
pop
js
xchg
push
ds
mov
stos
mov
sub
pop
pushf
or
cmc
loop
aad
jns
in
jb
cmp
xor
sbb
and
cli
mov
cs
jl
dec
shlb
sti
mov
pop
fiaddl
inc
push
cmc
ljmp
mov
stos
sub
cwtl
inc
push
dec
lock
rcrb
test
cmpsb
std
jmp
loop
pop
leave
xchg
push
shlb
jbe
dec
ret
cmp
add
pop
sbb
cmp
add
popfw
hlt
lds
aas
mov
xor
sarb
andb
pop
dec
aaa
xchg
inc
push
mov
sbb
push
inc
daa
xchg
xor
mov
adc
in
scas
pop
fdivl
ss
xchg
test
nop
bnd
dec
inc
or
mov
xchg
jb
in
jmp
aam
adc
mov
das
sbb
mov
jno
push
xchg
push
or
call
ret
ja
pop
lods
push
mov
mov
sbb
in
inc
pop
push
ja
mov
mov
inc
pop
pushf
cmc
pop
daa
add
pop
lock
insl
les
test
movsb
popa
sbb
stos
fmuls
and
add
pusha
sub
mov
shll
push
shlb
mov
cmp
push
leave
lds
cmovg
cmp
xchg
ret
outsl
imul
cmp
mov
add
pusha
pushf
push
sbb
dec
lret
clc
xor
stos
inc
andl
xor
add
cmp
fnstcw
dec
mov
loop
dec
xlat
loope
out
sti
shlb
mov
add
add
push
fdiv
mov
xor
pushf
in
mov
arpl
adc
jmp
xchg
cmp
inc
mov
mov
inc
push
mov
negb
or
jnp
in
popf
inc
je
fistl
cmp
stos
outsb
jns
ss
ja,pt
and
paddw
into
mov
mov
cmp
adc
jg
cmp
jae
dec
ss
les
mov
lds
stos
adc
inc
xchg
adc
pusha
test
cmp
bound
dec
mov
incl
mov
je
sub
jo
andl
xor
movsl
arpl
pop
sub
stos
inc
bound
rcll
add
lret
pop
mov
push
std
aad
sbb
stos
lods
push
sar
sti
dec
pop
add
out
sub
dec
adc
les
andb
dec
push
mov
lcall
stc
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
ja
fwait
sbb
hlt
lods
shr
jl
ss
xchg
sub
movsl
loopne
scas
leave
xor
pop
or
cmp
adc
and
push
and
adc
xlat
jmp
or
je
rorb
jge
dec
sbb
test
inc
lret
cld
xchg
mov
sub
jge
sub
xchg
add
and
mov
jp
cltd
mov
fisubrs
cs
lds
pop
mov
sbb
dec
and
xchg
sti
mov
sbb
push
lock
icebp
outsb
sti
pusha
or
pushf
xor
cmp
aas
pop
inc
add
sub
pop
stos
shll
and
lods
inc
clc
not
ficoml
xor
shrb
cmp
add
fnstenv
shrb
cmpsl
rorb
jae
bound
xchg
sbb
rcll
xchg
inc
mov
xor
stos
sub
adcb
pop
cli
out
lods
movsb
pop
hlt
push
push
fstpl
lret
adc
mov
movhps
mov
or
sbb
roll
push
rcll
inc
lret
xchg
jo
das
push
clc
incl
je
inc
decl
cmp
fldt
or
push
or
in
popa
jle
cmpsb
jo
mov
pop
and
arpl
xchg
jge
or
and
sub
mov
fwait
cmp
enter
repz
stc
or
rorb
cmp
loope
cmp
xchg
int
dec
cwtl
mov
cmpsl
inc
popf
mov
scas
out
sarb
mov
cmp
ret
push
lret
xchg
mov
mov
mov
xchg
inc
cmp
pop
rorb
and
inc
loop
or
fcoml
mov
dec
in
mov
sbb
js
out
out
popf
shrl
or
and
pushf
jmp
mov
outsl
mov
iret
adc
sbb
pushf
movsb
jp
shl
or
and
push
inc
call
lds
std
or
sbb
jle
mov
lcall
xchg
jecxz
cmpl
mov
mov
sahf
inc
pushf
adcl
sbb
je
icebp
or
cld
ret
xchg
mov
dec
adc
mov
push
cld
aam
subl
fdivs
imul
test
pop
scas
push
jle
pop
lea
loopne
add
shlb
imul
icebp
inc
and
sub
pop
dec
dec
enter
jge
add
loope
sub
cmpsb
gs
sbbb
jns
push
push
add
pusha
shll
stos
orl
test
xchg
mov
orl
push
adc
xor
fiadds
loope
dec
pop
sbbb
or
divl
sbb
cmpl
mov
rol
jb
and
dec
lcall
loop
pop
hlt
pusha
cmp
pop
fsub
cmp
fidivl
lcall
sbb
add
sub
sub
test
jnp
lret
and
and
mov
pop
push
or
cs
loop
inc
lods
call
cmpsl
lods
outsl
sub
out
stos
and
ss
jne
dec
mov
inc
jbe
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
xchg
js
mov
adc
adc
adc
xor
mov
cmpsb
xchg
jle
jbe
lods
pop
push
loope
movsb
bound
cmp
mov
into
mov
ret
loope
je
loopne
fildl
add
dec
inc
or
loope
stos
out
pop
inc
xchg
sbb
xor
lock
sbbl
pop
fstpt
pop
jmp
cwtl
or
mov
mov
sti
es
arpl
or
rcr
out
or
shll
hlt
andb
mov
std
or
mov
and
xchg
in
jo
jae
sbb
adc
push
mov
jmp
sbb
fistps
lahf
or
outsl
pop
mov
js
push
inc
pop
add
dec
or
xor
divb
jp
xlat
cmp
sarb
dec
icebp
in
scas
mov
ret
dec
inc
push
insb
sub
jb
leave
repz
xchg
sbb
push
ja
stos
sbbb
inc
mov
mov
repz
out
mov
insb
mov
or
mov
scas
mov
pop
pop
das
test
idivl
xor
movups
mov
mov
in
in
push
fs
push
inc
xchg
dec
aaa
adc
sahf
stos
lahf
push
xor
cmpsl
inc
dec
in
clc
mov
inc
jmp
sbb
aad
and
add
or
out
jp
cld
inc
xor
sbb
adc
adc
movlps
ret
add
cs
in
xchg
fldcw
inc
mov
dec
addr16
nop
das
imulb
scas
jo
shr
sbb
adc
add
icebp
inc
pop
jmp
and
nop
std
mov
push
push
and
push
subl
fstl
pop
imul
out
pop
in
imul
jle
inc
test
subl
insl
dec
cmp
inc
icebp
fmuls
ret
sti
push
lcall
add
jbe
pop
outsb
iret
out
dec
mov
cmp
aam
fwait
push
dec
out
jle
repz
mov
xor
xchg
xor
jp
sub
and
push
mov
popf
xchg
pop
out
loop
loop
lds
int3
mov
push
adc
stos
inc
test
sbb
mov
in
addl
mov
or
xor
mov
mov
add
in
pop
cltd
or
cwtl
jne
push
xchg
and
icebp
cmp
mov
popa
mov
jecxz
pop
les
loop
aad
and
dec
enter
push
jge
movsl
dec
outsl
mov
cld
cs
shrl
flds
inc
cmc
lea
sub
roll
stos
ljmp
inc
lds
in
cltd
scas
stos
loope
push
mov
sbb
adc
inc
cmp
push
sub
mov
cmp
push
iret
leave
and
dec
shl
stos
push
and
xor
sarb
jns
adc
dec
and
lcall
lock
call
js
jp
in
loop
mov
sub
imul
xchg
sahf
rcrb
add
test
icebp
nop
mov
mov
mov
and
bound
mov
cltd
add
push
mov
lcall
int3
add
ret
pop
mov
pop
sub
pop
mov
xchg
dec
mov
or
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
xchg
push
jle,pt
test
adc
adc
adc
icebp
xchg
out
repz
test
sbb
jne
jbe
push
leave
xchg
push
and
mov
dec
push
or
cwtl
jo
push
or
stos
jne
ljmp
outsl
sbb
push
rcrl
lret
and
xor
pop
test
push
cmpsl
dec
shr
mov
xchg
adc
lds
sti
repnz
jb
pop
push
hlt
lahf
adc
out
stos
in
stos
lods
loope
add
sbb
push
adc
mov
pop
or
clc
daa
int3
jmp
int3
arpl
jno
xchg
push
mov
aam
mov
add
test
test
and
add
push
sti
sahf
push
daa
leave
push
pop
cmp
aas
dec
clc
lds
js
mov
rcrb
xor
dec
gs
enter
and
mov
xor
ret
sub
jmp
dec
in
inc
int3
pop
es
mov
pushf
add
mov
iret
add
xchg
inc
sbb
gs
fbstp
pushf
pop
pushf
push
adc
pop
movsl
jp
int3
xor
jo
shlw
jmp
dec
sbb
dec
movsb
mov
stos
rcll
lcall
cmpb
jl
mov
decl
sahf
cs
or
cli
fistl
lods
sub
add
pop
mov
ret
dec
cli
jnp
adc
loop
adc
nop
pop
movsl
outsl
into
jbe
and
cltd
jle
xchg
inc
cmpsb
clc
in
mov
xchg
aaa
xor
mov
out
fiaddl
and
lea
adc
xor
stc
inc
popa
ret
incl
adc
sub
or
iret
sub
mov
dec
mov
xchg
test
mov
int
or
clc
repnz
in
lahf
sub
xchg
lea
or
pop
in
mov
or
fistpll
xchg
repnz
jae
test
js
mov
outsb
out
add
jo
mov
scas
and
cmc
mov
fcmove
in
repz
repnz
dec
xor
and
movsl
or
lcall
loop
push
clc
cwtl
jge
mov
cmp
insl
vcvtdq2pd
repnz
pop
hlt
cmp
inc
adc
sar
pop
test
ds
repnz
jae
fildl
xor
xor
jmp
dec
lahf
mov
outsb
jl
mov
int3
add
or
xchg
and
pop
mov
sub
cmp
dec
cwtl
sbb
rcrl
cmpsb
sar
insb
or
fbld
fisubs
lock
stos
icebp
cmp
or
in
sbb
push
mov
std
decl
rsqrtps
sbb
xchg
scas
stos
add
into
enter
jns
jo
aam
cmpsl
mov
lret
and
cmp
and
out
inc
leave
rolb
adc
iret
enter
rclb
add
fbstp
xor
sub
nop
push
xor
pushf
loope
mov
and
sbb
sub
dec
push
adc
dec
nop
ss
hlt
xor
shrb
insb
mov
sub
or
adc
std
dec
dec
mov
and
ror
inc
and
mov
daa
inc
mov
ret
arpl
sbb
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
add
adc
int
adc
scas
mov
push
ret
dec
call
popf
pop
pop
mov
fwait
mov
aad
test
cltd
add
sub
sbb
shll
out
pushf
xorl
jle
rcll
and
jns
out
aaa
mov
shl
cmc
cmpb
push
pause
pop
adc
pop
gs
pop
sti
jae
sahf
jle
inc
or
loop
and
test
hlt
sbb
test
jmp
inc
xor
aas
jns
cmp
inc
aas
ja
repnz
loopne
xchg
or
sbb
leave
xlat
loopne
sti
lcall
movsb
out
test
das
pop
cmp
or
ds
mov
test
add
jmp
lods
push
mov
xor
daa
inc
lock
inc
test
fstl
cmp
or
sti
int3
lds
jns
push
pop
jb
or
xor
jge
inc
push
jnp
adc
pop
cmp
xchg
fldenv
ret
out
dec
inc
jg
int
fsubrs
leave
iret
inc
jne
sbb
lret
repnz
add
and
cmp
xchg
inc
loop
mov
addr16
pop
xchg
mov
mov
inc
push
ret
inc
insl
inc
push
mov
mov
arpl
xor
aam
inc
mov
ja
insl
cmp
inc
sub
sub
lret
push
dec
adc
ja
and
mov
sub
loopne
xchg
xchg
fwait
jecxz
mov
cld
sub
add
scas
xlat
fst
inc
xor
xchg
cmp
cli
inc
xor
in
sub
ret
push
jne
stos
pop
popa
xor
adc
data16
add
inc
xor
sbb
andb
xor
pop
and
test
add
cmpb
mov
aaa
rorl
push
and
jnp
ffree
in
add
xchg
push
mov
mov
and
outsl
iret
push
enter
and
xchg
adc
sbb
jmp
ds
inc
int
mov
mov
or
bound
adc
daa
xchg
lds
jmp
mov
mov
and
call
jmp
push
sbb
lods
nop
scas
push
iret
pop
pop
inc
xchg
add
subb
lods
rcl
mov
mov
add
ret
add
mov
in
mov
pop
push
sub
mov
xchg
ja
xchg
xor
mov
dec
fstpl
stc
ds
inc
popf
int
inc
cmp
push
mov
lret
dec
add
fildl
mov
cmp
fisttps
xor
push
mov
add
pslld
xchg
pop
dec
mov
or
cmp
lods
or
and
ss
je
lcall
call
cmp
int3
sbb
add
mov
div
push
arpl
lods
dec
push
in
shll
repnz
push
mov
cmc
push
leave
inc
mov
mov
fstl
ljmp
cmpsb
dec
push
gs
cwtl
sti
aam
push
inc
aam
xchg
hlt
fsub
jecxz
addl
sbb
pop
pop
jae
sbb
fdivrs
incl
adc
mov
adc
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
sub
mov
adc
adc
add
pop
movsb
mov
cmp
imul
fidivs
cmpsb
xchg
in
ljmp
pushf
icebp
shlb
ljmp
cmp
jae
sub
aaa
pusha
test
loop
mov
adc
pop
jae
pop
stos
test
in
jecxz
in
insl
outsl
mulb
mov
xchg
movsl
push
outsb
lahf
pop
nop
dec
arpl
lds
inc
jb
hlt
cltd
fsubp
sarb
flds
pop
jmp
mov
cmp
mov
sub
test
mulb
mov
push
mov
inc
adc
ja
mov
mov
loope
mov
ret
out
adc
jge
out
xor
push
test
mov
mov
mov
data16
dec
sahf
fsubrp
mull
loop
dec
inc
mov
sbb
ds
mov
daa
cmpsl
mov
jne
or
adcb
push
cld
sbb
sahf
pop
aaa
mov
lock
std
mov
loope
mov
fstpt
push
push
xor
dec
imul
mov
pop
fstl
lcall
mov
out
lea
dec
sbb
sti
js
lds
dec
push
call
add
add
mov
sbb
in
inc
sub
bound
mov
sub
inc
es
xlat
test
cmp
xchg
stos
cltd
inc
rcl
mov
adc
lds
lcall
andl
add
mov
test
fmull
adc
jb
imul
out
shll
jle
push
sub
popa
xchg
cmpl
aas
jle
imul
cmc
jno
cmp
push
mov
and
and
push
lock
push
fwait
or
fsts
pushf
cmp
inc
and
rorl
in
sub
pop
add
jnp
addb
ss
mov
fcmovne
cmp
addr16
movsb
push
mov
pop
test
les
adc
mov
inc
in
test
ds
and
data16
daa
mov
xor
sarl
ret
ss
mov
or
imul
mov
xor
push
ljmp
in
and
loopne
test
loopne
jbe
sbb
in
xor
mov
jp
sub
hlt
cli
in
shlb
mov
jb
sbb
pop
ljmp
rorb
mov
lahf
jns
cmc
enter
dec
mov
and
rcll
jl
sub
jne
jge
stmxcsr
xlat
mov
mov
decb
movsl
push
cs
and
adc
or
enter
lock
xor
leave
dec
mov
cld
fs
dec
mov
jl
ds
sub
pop
and
jbe
push
adc
jecxz
mov
ret
sbb
xchg
jl
dec
mov
or
js
cmp
call
xchg
adc
or
sbb
adc
jg
push
and
out
arpl
lock
adc
jl
pop
inc
mov
xor
inc
adc
jg
push
sbb
in
push
mov
push
lret
sub
into
addr16
jl
test
and
mov
sti
add
scas
imul
add
ss
xchg
mov
add
gs
shrd
jmp
ja
jle
sub
xchg
mov
jge
js
jno
adc
int
adc
shrl
nop
testl
jno
jne
pop
cs
stos
and
inc
cmp
in
mov
pop
jne
fmull
ljmp
and
mov
dec
loope
out
shlb
xchg
negb
dec
call
popa
ds
adc
or
jae
xchg
xor
sbb
pop
xor
cmp
ficomps
pop
push
into
sub
fistpl
cmp
shl
add
xchg
iret
jbe
rcl
fdivrl
data16
push
mov
jle
fdivrl
cmp
xchg
dec
push
out
ja
fwait
clc
loope
inc
dec
dec
sbb
inc
es
adc
pop
pop
test
fdiv
jne
sbb
pop
stos
jbe
pop
iret
mov
fiaddl
shll
push
jle
xchg
lret
xchg
add
xchg
je
mov
movsb
add
mov
lret
popa
insl
cmp
repnz
or
push
sbb
adcb
mov
mov
xor
fstpl
roll
mov
jmp
aam
sbb
mov
shr
in
cmp
fcomps
loopne
jmp
xchg
xor
call
test
sbbb
repz
leave
outsl
aas
mov
add
pushf
stos
mov
popf
scas
jge
jo
data16
xchg
or
add
into
xor
pop
mov
decl
pop
jle
mov
dec
mov
add
mov
sbb
test
mov
inc
stc
xor
cs
push
sub
mov
mov
mov
pop
scas
call
xchg
pop
sbb
add
std
stc
dec
jmp
add
jle
add
xor
dec
das
mov
aad
mov
mov
xor
xchg
leave
hlt
add
mov
pop
loop
test
add
lahf
jmp
sub
add
in
pop
or
push
push
add
lret
aaa
pop
ljmp
mov
leave
mov
mov
or
xchg
jae
sub
hlt
fs
mov
push
sbb
fwait
int3
int3
push
ror
imul
dec
push
sbb
dec
xchg
ljmp
push
sub
js
stos
ja
outsl
add
fs
std
test
std
push
into
pop
jne
sub
mov
xlat
jo
mov
aam
inc
xor
push
mov
int
mov
push
mov
cs
int3
das
xchg
fs
test
dec
nop
mov
pop
sbb
mov
movsb
lcall
mov
sub
sub
jns
clc
sbb
setae
or
sbb
xchg
add
test
push
int
addr16
xlat
dec
fwait
jecxz
test
aas
cmp
lods
or
cmc
add
out
jb
adc
sbb
sub
sarl
sub
push
dec
notb
es
sbb
and
pop
js
fsubrp
and
out
mov
test
loopne
test
inc
lahf
shlb
rcrl
dec
stos
fstpl
jp
jo
jge
out
repz
jae
repz
fwait
xchg
xor
insl
fnsave
dec
stos
out
ret
or
ret
push
dec
je
out
mov
lods
ficompl
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
stos
lea
and
adc
int
adc
jp
push
pop
addr16
xchg
xchg
push
inc
dec
fdivp
push
ss
cmp
mov
jo
jle
lock
push
out
add
rcrl
push
cmpsl
xchg
jge
adc
jmp
nop
push
or
and
mov
hlt
xchg
lcall
xor
loopne
adc
loopne
out
shl
out
xor
cs
jg
jne
shlb
xor
cmp
enter
popa
inc
lds
adc
ja
xchg
mov
jl
xchg
nop
pop
and
lret
imul
push
arpl
popf
into
mov
add
inc
das
sti
out
leave
push
data16
das
mov
cs
lret
lret
push
sbb
mov
push
jecxz
cmp
mov
jl
push
aas
nop
scas
add
mov
dec
push
ret
add
test
mov
fbld
subb
mov
cmpsb
ljmp
or
push
xchg
add
ja
cmpb
ffreep
xchg
in
fwait
mov
push
test
sub
mov
rorb
mov
or
dec
xor
int3
mov
mov
xor
cmpb
arpl
dec
cwtl
pop
nop
cmpsb
insb
or
int
iret
pop
imul
ret
cmp
imul
mov
sbb
or
sbb
je
jb
jl
ss
or
arpl
jmp
into
sub
pop
pop
inc
mov
inc
mov
sahf
das
sarb
xor
aaa
xor
pop
pop
out
mov
orl
fstpt
push
jno
and
test
cmc
mov
fmull
push
adc
and
jb
jo
mov
jl
mov
cld
pop
out
fwait
sbb
cmp
imul
loope
and
add
mov
movsl
lcall
sub
mov
jo
push
adcl
in
adc
outsb
or
fld1
fsubs
sbb
sbb
into
sbb
mov
popa
iret
loop
push
push
sub
add
xchg
lds
dec
sbb
pop
xor
cli
jecxz
or
adc
xor
xadd
mov
test
jno
adc
push
out
or
adc
dec
xor
xchg
or
or
loopne
or
fwait
cwtl
leave
mov
adc
outsb
push
mov
dec
jnp
mov
negb
negl
leave
pop
pop
pop
pop
or
push
loop
and
jecxz
jae
fistpl
jae
movsb
aaa
mov
add
mov
mov
gs
inc
mov
lock
in
pop
addl
cmp
sbb
mov
clc
pop
das
mov
mov
push
fsts
nop
adc
loopne
or
std
add
mov
scas
pushf
sarl
adc
sti
lods
cmpl
pop
xchg
repnz
or
packuswb
adc
jg
xchg
lds
lahf
addr16
xlat
pop
call
pop
xor
lahf
adc
fildl
and
pusha
push
mov
jge
mov
or
sbb
cld
inc
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
fldlg2
jb
fisubs
adc
adc
dec
jnp
loopne
or
outsl
xor
movsl
xor
push
loope
xor
or
cs
rolb
or
mov
push
inc
lahf
fwait
je
mov
movsl
pop
inc
mov
xchg
mov
pop
sbb
mov
jmp
fwait
or
cmpb
sbb
add
cltd
mov
outsl
ja
jg
iret
or
adc
xor
leave
jp
or
sub
dec
pop
dec
lods
cli
sar
xchg
iret
sub
shrl
add
clc
out
mov
sbb
les
lods
and
lcall
mov
fcoms
sbb
mov
es
cmp
sub
dec
ficoml
hlt
loopne
cmp
aad
hlt
xchg
dec
adc
cmp
rcr
ljmp
mov
loop
mov
xchg
pop
or
lahf
mov
pushf
push
xor
loopne
lret
pop
pop
mov
pop
pop
adc
xchg
mov
icebp
movsl
movsb
in
cwtl
jmp
inc
cs
mov
jle
lea
ret
cmp
repz
test
aas
pop
mov
mov
or
mov
adc
aaa
pushf
cs
into
cmpsl
fmull
sub
adc
adc
fstpl
pop
cmp
aad
or
push
jno
mov
push
stc
pushf
popf
mov
aam
mov
mov
test
roll
push
lcall
ja
cmp
call
or
outsl
push
es
jecxz
sub
lds
mov
scas
pop
jmp
shll
xor
lahf
clc
xchg
sub
mov
mov
mov
xor
inc
ljmp
inc
mov
call
inc
pop
pop
and
addr16
mov
cmp
dec
lret
mov
pushf
add
push
mov
pushf
and
mov
cmc
push
xorb
cwtl
adc
or
out
int3
addr16
repnz
mov
lar
mov
jg
imul
push
push
ja
mov
ret
jbe
inc
jns
pop
sbb
aam
sbb
cld
stc
js
mov
jecxz
icebp
fwait
lea
jbe
movsb
imul
ret
xor
mov
add
scas
fldt
jns
inc
sub
outsl
aad
xchg
inc
jno
push
fdivl
movsl
mov
rcr
clc
sub
aaa
movl
pop
lds
xchg
push
jle
mov
or
test
and
jo
cmp
fstl
adc
xor
movsl
mov
fsub
mov
inc
cmc
dec
dec
daa
xor
mov
cmp
and
ljmp
xlat
ds
icebp
inc
pop
cmp
jnp
dec
jo
xlat
inc
clc
push
cltd
push
sahf
push
pushl
lods
pop
sahf
cld
pushf
mov
cld
lret
xchg
jg
push
aad
dec
ljmp
call
jmp
negb
and
arpl
sbb
xchg
mov
lods
repz
xor
ret
je
hlt
jb
push
add
int
add
xor
pop
add
loope
cs
aam
or
xor
xchg
lock
fsubp
insl
scas
mov
mov
rcrb
push
push
jns
ja
or
cld
shl
pop
icebp
stc
ds
hlt
std
mov
in
inc
mov
loopne
sahf
inc
push
mov
and
lods
rol
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
mov
pop
adc
xor
adc
xor
jns
addr16
mov
inc
and
pusha
roll
push
hlt
lock
add
fnstsw
xchg
repz
dec
adc
cmpsl
insl
lods
fstpl
aam
scas
repz
push
in
mov
add
stc
int
xchg
jmp
push
rcrl
bound
jg
xorb
mov
xor
pop
test
cltd
clc
lcall
popa
push
clc
xor
hlt
int3
jns
pop
sbb
mov
insb
xchg
jnp
mov
pushf
roll
mov
les
mov
jne
or
cmp
push
das
and
sar
mov
add
xchg
gs
jge
sbbl
dec
dec
int3
adc
out
mov
insb
jl
and
inc
sbb
mov
push
in
inc
loope
sahf
jnp
push
inc
fiadds
sbb
jnp
mov
das
orl
mov
outsl
hlt
pop
jb
xchg
mov
cmpsl
bound
aam
adc
nop
sti
ret
mov
dec
sti
jmp
adc
vpunpckhbw
sub
push
outsl
bswap
cli
leave
jl
fsubs
into
test
dec
jne
push
out
jg
and
das
pop
jnp
out
sub
or
dec
jae
mov
jo
cmp
ftst
inc
test
out
add
xor
rcl
and
out
mov
call
mov
popf
push
mov
ss
xor
adc
jb
jecxz,pn
jmp
lret
les
data16
cmp
xor
stos
jbe
mov
mov
add
and
lods
add
shll
inc
arpl
sub
in
pop
fsubrs
push
adc
push
mov
mov
loope
push
push
adc
sub
push
jmp
xchg
mov
popf
push
adc
fisttpll
cld
or
repz
add
or
clc
das
pop
fneni(8087
pop
movsb
cmp
xchg
adc
jns
int3
or
mov
or
out
pop
and
xor
jnp
rcrl
pop
dec
daa
cltd
scas
adc
mov
out
push
xor
or
mov
movsb
sub
fadd
push
jbe
mov
test
adc
xor
popf
and
sub
je
in
push
fmuls
mov
cmp
popa
sbb
sahf
ficoml
ds
por
pop
dec
aaa
mov
mov
inc
dec
adc
add
xor
fs
dec
fisubs
jb
lahf
cmp
mov
mov
add
aam
insb
fsubrs
mov
add
pop
push
mov
stos
jp
rcrb
jns
test
lahf
and
sbb
stc
adc
aam
mov
xchg
aam
and
hlt
fidivs
sbb
scas
es
test
jecxz
movsl
inc
push
fwait
mov
mov
and
jl
xchg
pusha
sub
insb
xchg
stos
sbb
add
push
dec
out
or
inc
int
xchg
push
cli
and
pop
ret
cs
cli
daa
add
pushf
dec
fldl
push
cmc
js
mov
mov
scas
sbb
sub
mov
fmuls
jae
and
nop
inc
ja
ljmp
call
outsb
lret
mov
dec
cmp
cmp
pop
cmp
cmc
cld
pop
xor
outsl
jbe
push
adc
imul
mov
mov
add
pop
jnp
ja
mov
fstl
imul
fs
mov
cwtl
movsl
lcall
jmp
int
shrl
cmp
cwtl
outsl
jb
pop
mov
cld
mov
stos
decb
add
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
sarb
push
adc
xor
adc
mov
add
xchg
adc
sar
add
sbb
sub
lock
jb
icebp
pop
rorl
push
ror
lret
outsl
mov
shll
mov
adc
movsl
mov
and
xchg
mov
pop
test
xlat
cmpl
xlat
jnp
mov
hlt
or
add
divl
or
in
es
movsb
rclb
push
arpl
jns
mov
je
int3
cmc
push
std
pop
in
aaa
pop
stos
jb
es
xchg
push
xchg
adc
in
push
sub
inc
xchg
jno
adc
addr16
pushf
fdivr
push
mov
add
mov
xchg
inc
add
push
sbb
rcl
xchg
pop
aad
jnp
in
adcb
jns
lcall
mov
pop
sub
cltd
loopne
jnp
mov
lcall
pop
lods
sbbb
aaa
ljmp
jne
stos
shrl
loop
pop
pop
inc
icebp
and
sub
adc
and
cmp
and
lods
dec
inc
cmp
aam
nop
cmp
or
adc
mov
out
inc
mov
adcb
inc
cmp
push
xchg
mov
movsl
jmp
leave
insl
lods
mov
mov
popf
mov
bound
fs
dec
mov
lea
adc
roll
daa
add
inc
stos
enter
mov
cmp
pop
xor
fcmovbe
pandn
arpl
insb
mov
mov
and
push
mov
pushf
mov
pop
fcmovbe
pop
mov
addr16
outsb
jns
adc
cmp
inc
out
imul
mov
adc
adc
aaa
out
sbb
xchg
ret
push
mov
jae
xchg
push
aam
mov
inc
inc
xlat
ja
cmp
cmpsb
out
adc
or
fcoml
test
hlt
call
stos
sti
es
inc
xchg
sbb
push
and
push
or
in
das
aaa
pop
pop
int3
aam
aam
into
sbb
ljmp
inc
shr
repz
xchg
jp
pushf
pop
mov
push
adc
or
jns
cld
jl
mov
pusha
outsb
inc
jg
mov
dec
sub
xchg
movsl
mov
sub
daa
sbb
push
faddl
sub
mov
xchg
aad
mov
mov
pop
call
ret
enter
gs
sbb
mov
lods
lock
sti
mov
rcrl
roll
bound
pop
repnz
or
lret
fwait
xor
adc
fldenv
loop
cli
stos
adc
sbb
jmp
js
lock
js
sbb
sub
push
jmp
jo
push
lahf
sti
mov
mov
outsb
xor
xor
ret
mov
roll
notb
pop
movsb
daa
xor
out
pop
dec
mov
ds
mov
and
les
adc
stos
cmp
ljmp
clc
add
ret
jmp
or
push
adc
pop
add
stc
fisubrs
data16
outsl
sub
dec
mov
mov
push
scas
jne
rcrb
aam
lahf
lcall
cld
rorl
lds
aad
sti
cmpsb
or
out
fsts
aaa
push
xchg
and
push
mov
lea
rcrl
adc
sbb
bound
stos
mov
xor
xorl
sahf
jecxz
popf
pop
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
fwait
cmpb
adc
adc
pop
loopne
xor
inc
cmp
push
out
mov
mov
mov
sbb
mov
push
inc
sub
push
mov
stc
imul
mov
int
sub
stos
andw
fstpt
mov
xchg
adc
jno
outsl
movsb
imull
stos
xchg
push
sub
adc
sbbl
loope
add
cmp
ss
jb
pop
ret
push
lods
sub
xchg
sbb
and
adc
cmpsl
push
mov
pop
mov
and
sub
pop
push
xchg
cmp
orl
cmp
int3
xchg
aaa
into
or
ret
sbb
lods
insb
mov
dec
test
dec
or
push
jmp
mov
xchg
clc
into
inc
inc
lcall
mov
imul
cmp
popa
mov
ja
cli
and
cmp
mov
cli
jns
cld
fidivrs
shrl
adc
test
cmp
add
or
xchg
fisubrs
xlat
jmp
jmp
fidivrl
jbe
sbb
insb
xor
mov
pinsrw
daa
dec
aam
aas
xchg
out
sub
out
mov
lods
cs
sbbb
in
fidivrs
mov
push
in
aam
sub
pop
jae
xchg
repz
cmpsl
jb
lret
push
cmp
cmpsb
cmc
in
jno
pushf
xchg
ljmp
sub
cmp
in
xchg
int3
mov
pushl
push
arpl
insl
adc
mov
test
dec
pop
inc
jp
ret
inc
and
roll
aad
js
outsl
pop
imul
inc
fbld
push
fistpll
xchg
shll
clc
hlt
inc
xlat
xchg
push
add
sarb
inc
test
cmc
cmp
sub
or
cmpsb
outsl
insb
push
hlt
rcrb
sbb
mov
or
ds
xchg
ficomps
mov
stos
mov
ret
lahf
pop
lods
inc
and
rorb
adc
push
or
loop
jo
test
fnstsw
push
xchg
clc
dec
repnz
jle
add
sbb
sub
bound
loop
sbb
test
adc
cmc
mov
xchg
jns
icebp
mov
sub
test
les
sub
mov
cli
xchg
insb
inc
std
add
push
or
jne
int3
jl
sbb
dec
xchg
adc
mov
push
dec
in
into
mov
jecxz
mov
xor
je
pop
push
or
sarb
sub
pop
pop
ss
jnp
and
adc
stc
imul
sub
mov
and
adc
shrb
shlb
fcomps
xchg
dec
addr16
cmp
jle
mov
loop
pop
test
adc
xor
out
push
outsb
andl
lret
cmp
or
sbb
jg
loopne
lods
mov
stos
out
leave
mov
add
sbb
scas
out
add
dec
pause
jecxz
imul
lods
cmp
clc
and
pop
adc
and
ss
stos
out
and
addb
sub
dec
pop
or
movb
out
scas
inc
test
cld
scas
sahf
pop
test
push
aad
into
ds
mov
jecxz
xor
sub
pop
push
push
daa
xchg
fmul
or
imul
in
jl
orl
f2xm1
or
punpckhdq
cwtl
add
jae
bound
js
dec
pop
dec
xchg
test
arpl
call
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
pop
and
ljmp
jecxz
arpl
lods
and
adc
cs
int
cmp
xlat
pop
jb
pop
cmp
add
out
popf
xor
mov
inc
lea
imul
bound
cmp
pop
adc
pop
mov
ret
push
xchg
arpl
jne
jmp
mov
faddl
roll
mov
mov
dec
jmp
push
pop
ja
je
fucomp
mov
mov
sub
xor
pop
pusha
fwait
adc
pop
das
shlb
loop
stos
fldcw
cwtl
sub
sbbl
adc
and
stos
hlt
mov
cmp
cs
xchg
in
popf
or
sbb
jne
inc
stos
test
cmp
rorl
fs
popa
mov
cs
hlt
sub
push
ljmp
out
inc
lods
mov
test
daa
push
scas
inc
pop
cmp
sub
xchg
push
cwtl
mov
inc
test
stos
fisttpl
xlat
sar
imul
mov
in
ss
inc
aaa
add
mov
movl
push
push
ss
adc
mov
insl
mov
mov
xchg
outsl
mov
lahf
scas
jecxz
and
mov
xchg
mov
xchg
lret
add
dec
lcall
add
jge
pop
xor
daa
push
or
aas
sbb
xchg
xor
pop
pop
aad
xchg
xor
je
mov
xor
mov
adc
in
jns
push
sarb
sub
clc
add
or
cmp
int3
sbb
adc
push
cli
outsb
test
sub
int
mov
xor
pop
pop
sub
ljmp
xchg
shlb
pop
out
pop
mov
out
pop
push
cli
popa
popf
mov
sbb
pop
sub
addl
addr16
or
add
sbb
es
lahf
inc
mov
inc
enter
pop
jmp
insl
inc
add
push
mov
les
and
out
movsl
mov
xor
pop
mov
mov
mov
arpl
pop
repz
inc
sub
lock
dec
hlt
lods
or
stos
cwtl
cs
xor
inc
mov
jl
cmp
and
xchg
dec
dec
xchg
addb
adc
loope
jecxz
xorb
and
cmc
loopne
fstpl
stos
testb
jmp
adc
jl
imulb
es
dec
mov
ss
test
dec
loopne
pop
xchg
or
dec
testl
cs
dec
sar
and
xor
mov
mov
xor
add
dec
sub
mov
push
test
jnp
faddl
xchg
cmpsl
pop
sbb
sub
mov
push
fstl
push
lds
bswap
xchg
jb
mov
add
into
or
test
mov
xor
orl
xchg
in
xor
mov
xchg
mov
dec
xor
test
scas
fdivrl
mov
lods
cmp
xchg
lods
push
insb
fs
adc
mov
lret
int3
bound
cmpsb
test
inc
dec
scas
add
mov
enter
pop
iret
in
adc
xor
mov
mov
xchg
and
jl
sub
and
bound
sbb
xchg
xchg
xchg
out
sub
and
or
gs
mov
lock
imull
mov
jle,pn
ljmp
in
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
int3
lods
jnp
adc
xor
adc
adc
dec
xor
outsb
repz
push
je
cmc
ret
lods
mov
mov
imul
into
into
rcrb
stos
das
mov
adc
call
sub
mov
stos
vmwrite
cmpsb
int
sub
or
cwtl
adc
movsl
adc
sub
ffree
scas
lods
sbb
mov
jo
cmp
cmpsb
repz
sbb
repnz
loope
sbb
jnp
xor
mov
cmc
jno
iret
push
sbb
add
mov
clc
sarl
and
fwait
lock
lret
and
pop
cli
inc
stc
push
add
loope
mov
pop
or
fisubrl
in
mov
xor
xchg
movsb
push
mov
pop
insl
rcr
fstl
jbe
out
xchg
rcll
rorb
in
pop
std
sahf
fstp
inc
dec
pop
shrl
jmp
mov
push
xchg
mov
adc
mov
xor
dec
jl
inc
push
mov
iret
bound
js
inc
xor
jle
jbe
jg
sub
icebp
rorl
ror
jl
xor
and
mov
movhlps
adc
jno
shll
dec
addl
inc
out
psubq
loopne
dec
push
pop
xchg
leave
fildll
pop
shll
push
rcr
sbb
cmp
mov
or
test
jge
lret
rcr
xor
repnz
inc
inc
push
lea
lret
jbe
xchg
cmc
in
mov
sbb
mov
xchg
lds
sub
cmpsl
fstps
arpl
mov
sbb
dec
jo
sbb
jecxz
and
icebp
scas
lock
cld
dec
cli
push
dec
cmp
arpl
and
sbb
jbe
add
and
fsts
xor
and
mov
pop
adc
popf
mov
ds
jae
mov
ljmp
inc
adc
xor
leave
insb
sub
imul
shl
in
sbb
clc
adcl
scas
movsb
dec
mov
jno
insl
adc
cmc
adc
dec
dec
jg
fstpl
pop
shl
push
int
cmpsl
jp
jbe
xor
add
lock
fwait
rcrb
cmp
outsb
cmp
into
es
or
lea
cld
dec
test
jg
push
mov
and
rorb
or
fbstp
jbe
jb
aad
gs
jae
sti
and
nop
mov
xor
mov
das
add
pop
dec
dec
jl
roll
pop
fisttpl
mov
mov
xor
outsl
sub
jmp
lret
shlb
dec
std
jne
roll
dec
cwtl
in
and
mov
push
js
jge
dec
pushf
cmp
gs
fadds
stc
cmp
and
ret
and
fidivrs
or
push
ret
xchg
and
jne
or
dec
loopne
jmp
adc
das
inc
inc
out
cmp
or
inc
mov
add
das
addr16
mov
mov
or
adc
movsl
stos
sub
xchg
fistpl
pop
mov
pop
add
or
fcmovne
jae
aad
jnp
test
adc
inc
lret
js
sar
cmpl
shrb
nop
and
adc
mov
mov
loopne
imul
jle
sbb
pop
mov
insb
mov
pop
xlat
ljmp
test
loop
loope
mov
adc
fsubp
push
and
sbb
jo
mov
mov
xor
insl
loopne
pop
cmp
sbb
jno
mov
in
lods
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
std
add
out
lahf
mov
mov
out
rorl
sub
nop
iret
xchg
push
dec
cs
jg
dec
sbb
cmp
pushf
push
xchg
mov
inc
xor
ljmp
test
mov
add
cltd
or
aam
arpl
adc
loop
xor
xor
fdivl
add
dec
decb
cmp
or
mov
cmp
loopne
shlb
mov
xor
in
push
jl
mov
aad
test
cmp
addb
add
cli
leave
xchg
mov
push
jge
popf
add
int3
lcall
lret
jb
pop
pop
pop
imul
mov
ffreep
in
data16
mov
outsb
mov
lods
jbe
xchg
pop
jbe
lods
and
test
sti
add
pop
xchg
cmp
div
leave
loop
mov
cmp
cld
hlt
xchg
repz
dec
xchg
inc
ret
data16
sub
sbb
fcomps
xchg
pop
push
arpl
cmpsl
int
sub
push
dec
mov
pop
xchg
xor
adc
bound
mov
cmpl
push
sub
pop
icebp
repz
mov
lret
cltd
loop
sbb
mov
test
xchg
ret
aad
xchg
jg
negb
es
cmp
call
imul
testb
hlt
test
push
pop
pop
fstl
fiaddl
test
dec
iret
sbb
xchg
xchg
and
jg
mov
mul
push
outsl
rorb
in
push
aam
scas
inc
aaa
je
lret
filds
push
mov
sub
xchg
out
mov
lahf
cmp
or
sahf
xor
cmp
and
das
mov
mov
xchg
mov
inc
pop
sub
adc
adc
aaa
lds
ljmp
mov
aam
adc
icebp
jecxz
insb
lcall
addb
push
cs
mov
sbb
adc
cmpsb
vcvtps2ph
insl
sahf
mov
je
mov
cwtl
in
pop
or
adc
outsl
mov
xchg
sub
cltd
jg
or
scas
cmp
sub
push
sub
mov
loopne
lret
in
jnp
and
dec
push
mov
jge
mov
pusha
push
add
fmuls
arpl
mov
mov
push
and
pop
leave
imul
ret
hlt
fmuls
std
or
mov
jns
inc
sahf
leave
stc
lret
xchg
sti
mov
and
movsl
hlt
dec
mov
or
movb
out
or
aas
pop
out
cld
pop
aaa
add
sbb
mov
jne
test
pop
jmp
fcmovne
pop
xchg
into
std
add
dec
adc
adc
cmpb
shrb
mov
out
add
iret
int
dec
sbb
jns
cltd
pop
negl
jae
roll
fnstcw
mov
xchg
int3
imul
int3
hlt
shrl
push
outsl
enter
mov
sbb
ret
dec
mov
push
xchg
popa
jno
addb
xchg
test
les
test
out
fidivrs
mov
xchg
lock
xsaveopt
or
dec
ss
aas
pop
imul
imul
and
pop
out
sub
add
cmp
xor
add
cmpsb
push
xor
shlb
add
xor
xchg
in
or
pop
ret
sub
negb
in
pushf
or
jbe
xchg
shr
pop
mov
sysret
mov
xchg
pop
jp
pop
cmp
jne
cwtl
sub
and
jge
aas
jno
push
in
shrd
xor
jmp
mov
popa
lcall
out
mov
xor
adc
decl
or
sbb
mov
dec
xchg
jp
js
stos
inc
xchg
mov
test
insl
movsb
sub
or
cmpsb
mov
mov
sahf
lcall
je
xor
push
dec
mov
push
loope
imul
xor
movsl
fs
out
adc
sbb
or
nop
addr16
leave
jbe
cmp
aam
mov
std
xor
pop
mov
dec
mov
jmp
out
leave
sub
cmpsb
mov
inc
jp
pop
and
or
and
push
cltd
push
xchg
jbe
adc
out
jmp
andl
cmpsl
aad
push
imul
lods
in
mov
xor
dec
pop
andb
xchg
mov
je
pop
loop
icebp
popf
les
xor
or
sbb
pop
insb
xlat
adc
or
xor
repz
dec
adc
mov
sub
xchg
jnp
loop,pt
mov
mov
sub
aam
jb
pushl
mov
lahf
xor
and
jbe
rclb
pop
mov
adc
xchg
flds
arpl
mov
add
aas
jae
leave
push
repnz
inc
adc
cmc
mov
pop
mov
in
cltd
xchg
xlat
idivl
fmul
je
mov
xchg
repz
mov
das
inc
je
scas
cmp
pusha
repz
in
repnz
aas
sbb
sub
scas
mov
lahf
cmp
bound
insl
mov
xchg
cs
ret
xchg
fcomi
pop
or
add
adc
jno
adc
dec
lcall
aas
cmpsl
test
jne
push
fmulp
sbb
fidivrs
cltd
loope
cmp
mov
imul
adc
pop
rolb
frstor
mov
sub
jns
nop
repz
or
loop
xor
mov
mov
xchg
outsl
xchg
outsl
sbb
jle
cmp
jecxz
adc
jle
mov
jns
sub
push
test
mov
push
in
xchg
mov
lds
or
mov
mov
rcrl
xchg
xchg
jo
adc
push
mov
adc
and
adc
cmpsb
sub
sub
inc
xchg
pop
cmp
movswl
and
lahf
popa
xor
rcr
cmpb
mov
fdivrp
push
mov
or
insl
adc
add
push
aas
mov
inc
es
sbb
jo
jmp
mov
jecxz
mov
sub
add
nop
add
popf
cmpsb
stos
cmc
pop
lret
enter
adc
xor
jmp
insb
push
outsb
repnz
test
loop
xchg
and
mov
jns
outsb
or
mov
mov
push
loopne
out
int
ret
lcall
std
xor
push
leave
adcl
xor
lahf
lcall
into
xorl
ljmp
mov
push
inc
pop
arpl
jbe
popa
mov
test
xor
stos
cmp
lds
popa
mov
stos
xor
dec
mov
das
insl
and
adc
pop
cltd
into
scas
adc
pop
scas
dec
dec
sub
in
jae
lods
loop
adc
ss
sub
mov
inc
aad
pop
push
rolb
cli
in
pop
dec
xor
mov
arpl
pop
push
fcmovbe
sub
les
rclb
ds
movsb
shufps
rclb
and
mov
push
bound
inc
popf
orl
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
pop
jmp
int
adc
fmull
adc
mov
int
adc
cli
xchg
cmp
mov
sar
and
sbb
jl
push
jns
adc
ret
ss
insb
add
test
das
jno
ret
xchg
or
mov
lret
icebp
lds
movsl
or
jbe
dec
negb
daa
add
imul
xor
dec
dec
sub
roll
xchg
lods
mov
enter
ljmp
loop
mov
jno
outsb
or
jno
add
jmp
jno
test
aas
ret
bound
mov
loopne
ja
jge
push
cltd
mov
hlt
data16
je
fisubs
mov
adc
pop
in
inc
stos
mov
mov
jle
fiadds
aam
inc
inc
adc
add
shlb
cli
fnsave
mov
pop
sahf
pop
test
inc
ss
sbb
xor
jns
mov
pop
push
inc
lds
sbb
dec
xchg
imul
outsl
outsb
mov
xchg
sbb
dec
push
popf
adc
dec
jbe
jl
roll
cmp
mov
lods
mov
xchg
dec
mov
mov
das
push
pop
sti
mov
pop
test
loop
jae,pt
ret
aaa
call
stc
pop
daa
std
iret
out
les
aad
pop
outsl
add
cmp
repz
outsb
inc
pop
arpl
popa
fsubs
pushf
std
and
clc
pop
xchg
testl
jmp
call
mov
jns
fmul
mov
push
fsub
jle
out
xchg
xor
int3
icebp
pop
or
rorb
popa
jle
inc
nop
pop
sbb
std
enter
fs
cmp
sub
sahf
daa
xor
divl
lods
jbe
mov
mov
in
insb
cli
testl
and
jo
pop
jb
add
xchg
test
or
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
xchg
pop
xor
xchg
sbb
adc
movlps
lock
js
push
mov
jmp
test
out
xor
out
mov
pop
adc
outsb
xchg
inc
add
pop
cmp
push
loopw
xlat
aas
pop
xchg
in
loope
mov
lods
mov
shlb
adc
adcl
enter
daa
push
cmp
jb
outsb
lret
jbe,pn
jmp
pop
popa
test
push
fsts
jp
cmp
fsubrs
daa
sarl
push
das
inc
mov
roll
jge
adc
lcall
cmpsb
test
add
cli
je
or
add
sub
addr16
pushf
xchg
pusha
rorb
ret
das
cmp
and
mov
lret
pop
adc
rcr
mov
scas
push
es
in
mov
push
int3
sub
mov
xor
orl
iret
push
ret
test
test
icebp
in
xor
cwtl
bound
cs
sub
addb
je
jnp
ficoms
pop
or
or
sub
inc
sub
or
pop
cmp
sub
push
stc
inc
xchg
pop
xchg
std
and
sti
cli
fildll
dec
pop
mov
sbb
mov
inc
cmp
dec
mov
dec
stc
sub
fisttpll
rcl
out
or
adc
div
ret
iret
roll
push
mov
pop
mov
jg
outsl
nop
mov
movl
data16
xchg
aad
push
pop
mov
jp
and
pop
push
xchg
inc
int3
je
jne
sub
imul
arpl
pop
daa
dec
outsb
stos
adc
mov
push
in
pop
xchg
in
je
outsb
fbld
cmp
into
cld
in
push
cwtl
aas
popa
hlt
cmc
push
cmp
adc
repz
fsts
inc
and
xlat
mov
in
or
pop
je
enter
cld
pushf
out
mov
fidivrs
loop
jae
stos
lahf
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
cltd
or
adc
movlps
dec
push
push
ljmp
in
xchg
decl
xchg
or
mov
or
sub
stos
bound
aaa
pop
jmp
push
loop
stos
inc
andl
jo
xchg
fiaddl
aas
insb
icebp
ds
and
pop
lods
scas
loop
pop
icebp
aaa
xchg
out
add
cmpsb
ja
cmpl
pop
or
scas
cmc
push
cmpsb
cli
mov
fcoml
jo
or
adc
dec
repz
test
repnz
pop
hlt
mov
jnp
out
in
dec
popf
push
cmpsl
out
popf
sarl
pop
fimull
js
clc
loope
loope
sahf
cmp
insb
mov
iret
or
aam
and
leave
gs
movsb
pop
lret
sbbb
gs
stc
cltd
jge
adc
push
int3
lea
inc
sbb
pop
push
loopne
jae
jae
lcall
inc
stos
popa
adc
mov
outsl
adc
jecxz
add
pop
imul
es
mov
popf
out
jmp
add
shll
or
push
adc
dec
jle
push
xlat
fs
adc
jbe
mov
jmp
ds
clc
xor
cli
lcall
push
cmpsl
cmpsb
mov
push
and
aad
push
jbe
xor
or
mov
lods
call
dec
mov
sub
jmp
pop
push
lret
mov
push
js
pop
xor
ja
add
sub
iret
inc
adc
add
jge
outsl
iret
xchg
sbb
jecxz
add
fsubp
cmovnp
mov
and
faddl
and
pop
push
xor
sub
gs
push
std
icebp
test
mul
ds
notl
fs
dec
sbb
mov
inc
add
pushl
data16
loop
ljmp
adc
jp
jb
push
add
add
cmp
xchg
idivl
fsubr
lods
xchg
or
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
add
stos
and
movlps
add
pushf
push
or
aaa
sub
aas
test
arpl
fnstsw
or
sub
leave
cli
jmp
scas
ret
dec
aad
cmc
push
pusha
movsb
xor
mov
pop
mov
dec
call
rol
jge
lds
pop
mov
cmp
in
jne
push
fnsave
mov
int3
lcall
lock
sub
push
leave
inc
subl
mov
jns
sbb
repz
pusha
mov
mov
and
adc
outsb
pop
negl
push
pop
mov
xchg
jbe
sub
dec
or
lret
xlat
sti
pushw
push
xchg
jecxz
pop
pusha
sete
xchg
pop
fidivs
sbbl
fistpll
negb
jge
push
cmp
decb
scas
jns
sub
ds
les
jp
jmp
rcll
xor
jo
scas
rorl
inc
and
pop
leave
xchg
sub
sbb
cmc
pusha
das
and
adc
mov
add
xchg
pop
daa
cld
lcall
pop
add
push
mov
sbb
jae
jle
or
call
cmpsl
hlt
ror
into
cwtl
imul
adc
dec
lret
pop
sub
loope
clc
mov
jge
jl
dec
mov
push
out
sbb
mov
xchg
popf
stc
xlat
mov
fcompl
pop
imul
loope
ds
imul
outsb
add
bound
jle
and
inc
test
loope
incl
cmp
roll
jns
mov
pop
fldcw
out
nop
or
shll
adc
lds
test
nop
pop
xor
push
xchg
imul
fisttpl
adc
imul
jbe
ja
jl
xchg
test
xchg
mov
es
add
adcb
sbb
inc
inc
push
subl
sub
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
xor
js
adc
adc
movlps
cli
pop
icebp
loope
mov
aas
pop
cli
ss
or
mov
icebp
or
sub
test
insl
cmc
shrl
fdivr
outsb
popf
das
xchg
sub
into
or
fcomps
inc
int
mov
push
popa
adc
out
movsb
out
xlat
mov
pushf
mov
mov
cmpsl
cld
mov
or
rorb
int
add
insl
shrb
push
inc
imul
xchg
jo
lcall
cmp
cmc
bnd
add
jge
pop
sbb
or
xchg
adc
cmp
mov
out
mov
loop
dec
mov
and
sbb
pop
scas
or
fstpt
mov
das
mov
stos
call
enter
and
push
in
nop
push
sbb
and
push
or
mov
mov
mov
xlat
or
xchg
scas
xchg
int3
adc
jle
cmp
pop
aaa
je
and
or
testl
adc
imul
mov
cli
les
inc
inc
jecxz
popf
scas
cwtl
xchg
xchg
sub
scas
or
fdivrl
and
cwtl
shl
loopne
cli
nop
pop
sbb
mov
pop
xor
inc
mov
fs
inc
jne
jnp
and
lcall
popa
adc
sbb
xchg
cmp
fidivrs
cmpsl
std
ljmp
lahf
dec
jp
sahf
and
jg
jns
mov
int
sub
xor
jns
push
aad
scas
add
mov
xchg
aam
int3
pop
fisubl
xor
sub
sub
xchg
mov
addb
adc
pushf
daa
cmc
cld
in
sub
insb
jle
jae
popf
cmp
aad
ljmp
ror
test
pushl
push
data16
int3
hlt
stc
adc
daa
xchg
test
mov
subl
jg
sbb
mov
adcb
testl
roll
popf
xchg
fidivs
or
add
add
push
sbb
loope
jae
mov
mov
adc
fmull
adc
pop
jb
xor
sub
inc
cs
test
mov
stos
fwait
jo
sbb
out
or
mov
mov
into
adc
jge
movsl
mov
out
and
sub
mov
dec
in
movl
inc
aas
cmc
cmp
leave
push
jbe
leave
repz
and
sahf
mov
xor
jo
or
loopne
sarb
sbb
in
inc
popf
cmp
pop
mov
mov
dec
fisttpl
mov
adc
nop
push
push
xchg
mov
adc
sbb
sbb
add
loop
mov
not
xchg
mov
mov
dec
xchg
mov
sub
push
and
mov
cwtl
add
arpl
das
adc
mov
test
insb
adc
adc
aam
rclb
rol
sub
ljmp
fldcw
mov
aam
daa
mov
mov
pop
sub
cmc
popl
mov
das
mov
pop
test
cwtl
sub
bound
add
sbb
pop
ljmp
fldcw
repz
adc
lahf
dec
rep
inc
pop
mov
xor
sub
lock
icebp
dec
orb
lahf
mov
add
es
inc
push
outsl
in
mov
push
sub
int3
dec
lret
scas
sahf
dec
fsub
xor
jne
aaa
pop
xchg
gs
fbld
mov
icebp
xor
ret
js
jne
push
jge
sub
cmpsb
push
pop
adcl
dec
ja
cli
or
adc
aam
das
cltd
scas
add
jb
aad
movsl
ficompl
aad
call
xchg
pop
movsb
loop
sarl
add
sarl
pushf
jle
mov
jae
inc
dec
inc
pop
push
mov
xlat
cmpsl
add
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
popf
dec
mov
fmull
adc
daa
inc
push
call
sub
xchg
xlat
arpl
icebp
adc
or
and
les
ljmp
test
xchg
out
cmp
jb
cmp
popa
sarb
jb
dec
cmp
call
pusha
jge
out
loop
cmp
inc
add
outsb
add
lret
pop
clc
imull
mov
jmp
lods
pop
fldl
and
out
ret
and
and
out
in
dec
in
fsubr
xor
inc
fnstenv
inc
jge
add
jbe
cmp
outsl
inc
fcmovnbe
jne
cwtl
shlb
rcl
xor
jo
jmp
mov
loopne
mov
jl
cltd
sahf
daa
sbb
push
push
call
jecxz
stc
scas
cmp
out
in
mov
pop
movsb
out
loop
repz
sbb
stos
sub
sub
movsl
dec
xchg
jge
sti
lea
adc
std
jne
call
jmp
jl
mov
jg
testl
jo
out
add
or
and
cmp
mov
push
mov
int3
mov
pop
xchg
loop
and
pop
je
mov
out
fisttps
mov
test
roll
pop
dec
enter
and
daa
jg
jne
in
roll
lods
data16
jnp
push
lea
xlat
cmp
sti
cwtl
xlat
dec
loopne
andb
aad
mov
mov
mov
fadds
adc
push
leave
in
push
pop
xor
cmp
mov
mov
mov
outsl
mov
sub
cmp
dec
es
stos
cld
dec
sub
add
insl
sbb
fistpll
dec
mov
popf
bound
mov
sbb
insb
cmp
stos
adcl
jmp
jnp
mov
xchg
jns
cld
enter
jmp
dec
mov
push
popf
inc
adc
test
or
test
add
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
repnz
sbb
test
sub
icebp
xchg
cmp
orb
add
push
add
dec
sub
adc
ffree
aam
stc
stos
dec
add
push
not
clc
ret
out
insl
cmp
iret
out
cmp
inc
xchg
xor
cmpsl
and
add
jae
addr16
clc
stos
fucomi
sbb
cmp
and
rorb
jp
cmp
call
nop
fdecstp
sbb
leave
push
in
fwait
ss
les
mov
mov
cmp
int
jns
inc
sbb
insl
sbb
adc
lcall
xor
dec
in
cwtl
pop
and
test
ja
pushf
jp
ljmp
pop
ret
loop
and
stc
icebp
inc
pushf
subl
add
cmp
fs
pushf
imul
mov
movsb
add
mov
rolb
mov
cmp
or
push
mov
es
adc
xlat
repnz
addr16
or
mov
lea
test
xchg
movsl
xchg
jno
loop
cs
imull
jge
fldcw
xor
sbb
sub
jge
mov
sbb
inc
je
dec
test
iret
cmp
xor
mov
xchg
popa
fs
lods
adc
addb
cmp
mov
stos
lcall
add
movsb
jecxz
xchg
pop
scas
lock
pop
sbb
mov
push
xchg
dec
mov
sahf
es
daa
sahf
cld
in
sbb
shlb
testb
xchg
sub
pusha
jle
push
add
and
sar
jp
and
pop
pop
test
das
sbbl
push
xchg
inc
sbb
int
mov
cmp
push
jnp
adc
mov
cmp
mov
mov
xor
ds
pop
jb
addr16
push
mov
je
fcmovnbe
repz
and
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
mov
jb
push
xchg
mov
xor
lock
sub
lcall
xchg
xchg
pop
xor
cmpxchg
xchg
dec
mov
xor
shlb
jmp
mov
adc
stos
add
add
inc
add
ss
pop
add
cmpsl
popa
bound
cmp
xchg
stc
push
push
sub
cmp
outsb
cli
dec
adcb
xor
mov
mull
mov
dec
ret
xchg
ja
in
cwtl
stos
adc
aam
sub
lret
dec
fsub
ret
xchg
in
xchg
gs
sti
inc
scas
repnz
push
and
loopne
icebp
lcall
mov
or
insl
stos
test
xchg
int
nop
sbb
jnp
loop
add
ja
stos
cmp
push
mov
int3
test
jmp
mov
fadds
test
popa
jb
cmpsb
sub
loop
sub
or
call
adc
rcrb
mov
cmpl
jb
or
jmp
dec
pop
mov
xor
mov
fcoml
push
fistps
notb
into
rclb
into
inc
adc
int
lahf
out
fmul
rol
call
dec
in
mov
sub
cmp
aaa
push
mov
push
push
fists
test
dec
xchg
xchg
das
mov
sub
pop
xor
int3
shlb
loop
xor
xchg
dec
fucomi
inc
push
jl
sub
sub
es
push
xchg
mov
shl
movsb
mov
dec
pusha
push
dec
cmpsb
mov
arpl
pop
jle
jbe
sub
into
ljmp
xlat
lods
sbb
pop
cs
in
ficoms
sbb
mov
add
lahf
push
cmpsb
dec
adc
fdivrs
jnp
pop
adc
loopne
push
add
sub
das
je
bound
out
pop
cmp
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
into
das
stos
insb
aad
adc
fmull
adc
add
xor
xchg
shlb
mov
inc
pushf
sub
pop
popf
sbb
insl
mov
push
outsl
xor
mov
imul
pushf
into
lea
fwait
sub
test
aad
push
or
inc
movsl
adc
xlat
sahf
call
jl
cwtl
fildll
push
rclb
lods
mov
sti
lret
fstl
arpl
mov
pop
loopne
into
or
movsl
dec
lods
rcr
adc
xchg
or
in
add
aam
xor
pop
out
hlt
adc
outsl
test
mov
jnp
pop
add
fiaddl
rcr
test
cmp
in
insb
push
push
les
fildll
xchg
mov
push
lret
dec
aaa
vmwrite
cmpl
rolb
ja
jne
push
push
out
enter
les
or
or
or
popf
mov
inc
in
pop
out
out
ja
lods
sub
ret
pop
lods
into
lret
fbstp
adc
popf
aam
scas
adc
loopne
sbb
stos
repnz
ljmp
mov
ljmp
push
les
jmp
inc
push
repnz
lahf
adc
out
fbstp
inc
shlb
ficomps
pop
cmc
jp
jle
inc
mov
rcrb
push
icebp
add
in
mov
aaa
mov
push
out
add
inc
je
mov
dec
xorl
mov
std
cmpsb
mov
sbb
adc
lahf
push
mov
sbb
stc
xor
out
sbb
inc
xor
bound
inc
xchg
push
mov
adc
out
faddp
pop
scas
stos
jno
push
lahf
movsb
or
out
pop
je
inc
cmc
fs
cwtl
fcoml
push
add
jnp
outsb
dec
inc
adc
dec
dec
add
cmpsl
stc
int3
insb
push
fldcw
push
out
mov
lock
mov
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
sti
arpl
adc
movlps
mov
jne
mov
sub
and
fiaddl
scas
xchg
xchg
ljmp
xchg
js
sbb
mov
adc
jo
pop
mov
aam
jle
lcall
sahf
adc
cmpsb
cmp
inc
inc
fimull
nop
xchg
sub
mov
gs
test
lock
pand
das
mov
out
loopne
dec
push
divb
scas
cwtl
mov
cs
adcl
xor
mov
push
sbb
cmpsb
pop
push
push
ret
add
js
adc
les
push
inc
mov
sub
flds
dec
aaa
mov
sbb
jg
mov
into
inc
xchg
aaa
and
adc
inc
jae
mov
negb
daa
ja
mov
sahf
cmp
xorb
mov
pmulhuw
sub
and
popa
nopl
inc
int
jmp
xchg
in
cmpsb
mov
sbb
mov
xchg
cwtl
adc
jecxz
jmp
dec
push
jnp
inc
jl
or
cs
daa
sub
jg
scas
push
aaa
inc
into
cs
inc
xchg
ljmp
call
inc
into
push
push
cmpsb
icebp
aam
jp
in
outsb
jg
lock
xchg
pop
shrb
jno
mov
lea
jae
ja
jmp
pop
pop
pop
insb
sbb
mov
sub
in
cltd
mov
fldt
jae
movb
pusha
and
add
add
sub
arpl
mov
xchg
lock
movsl
insl
imul
mov
inc
es
xchg
dec
xor
xor
inc
adc
sub
fildll
fistpl
inc
fwait
hlt
pop
xor
ja
or
insb
loop
jp
xchg
sub
and
mov
stc
adc
loope
call
jp
mov
push
in
xor
xor
pop
jnp
iret
inc
repnz
ficoml
or
outsb
xchg
inc
sti
mov
test
aas
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
std
jno
stos
notb
adc
movlps
mov
in
test
jb
popf
loopne
popl
ret
addr16
add
hlt
bound
xor
xchg
rcll
sbb
sbb
out
stos
out
sti
inc
xchg
adc
aam
cmp
ljmp
cmpsl
xchg
imul
subb
test
divb
out
adc
push
jge
push
fisubrs
mov
push
xchg
enter
shll
ds
mov
inc
setp
push
shll
inc
xor
pop
bnd
pop
lcall
aaa
stos
leave
add
ss
ds
adcb
sbb
mov
jno
les
rcl
jmp
sbb
aad
xchg
sbb
incl
mov
mov
cmp
mov
call
insl
icebp
jecxz
adc
test
push
sbb
add
iret
xor
loopne
jg
pop
stos
lds
xorl
fwait
loope
inc
dec
cmpb
orl
jmp
adc
cmc
dec
ret
repz
xor
mov
jmp
data16
mov
xchg
xchg
pop
jno
push
scas
fs
pop
sub
sbb
adc
in
std
adc
int3
test
xor
add
dec
fadds
fildll
cs
in
add
stc
xor
std
fstpt
cmpl
xchg
cli
cs
test
jecxz
pop
mov
into
movsl
jb
out
mov
adc
iret
insb
dec
add
je
pop
xor
aas
or
push
mov
test
push
xchg
or
loopne
in
and
or
sbb
roll
aas
jmp
pop
or
pop
test
xchg
adcb
push
sub
fidivrl
add
repz
jnp
sub
mov
pop
push
repz
fidivl
dec
fidivrl
hlt
mov
subl
jecxz
push
cmp
jecxz
add
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
inc
pusha
sbb
cli
ja
aas
test
icebp
jp
fs
bound
repnz
and
inc
sti
xchg
cmp
inc
test
ret
mov
dec
xor
gs
push
sub
addr16
push
sbb
roll
xor
push
lods
cmp
sub
pushf
pop
loope
push
sub
loopne
xchg
add
pop
ds
xchg
push
mov
mov
push
popl
repz
mov
sbb
push
cld
shrb
push
sbb
mov
xchg
add
movsl
inc
add
addb
sbb
out
inc
and
push
pushf
xor
fildll
popf
jle
dec
sti
cmc
cwtl
clc
dec
or
mov
xchg
aad
loope
mov
rcrb
ljmp
lods
push
mov
rorl
daa
jge
mov
movsb
dec
shrb
mov
mov
rolb
mov
gs
xchg
xor
jo
mov
ffreep
movsl
in
fisubl
sub
cmp
je
push
inc
icebp
dec
xor
shr
xor
nop
stos
rcl
faddl
cli
cmp
cwtl
add
push
mov
mov
push
icebp
jg
nop
sub
test
arpl
lcall
jmp
adc
in
popf
ljmp
pop
stos
pop
mov
sub
xchg
and
jmp
mov
insb
and
adc
testb
das
mov
in
pop
xor
jb
fidivrl
jle
mov
mov
stos
loope
or
push
add
pop
xchg
leave
loop
and
cli
je
cli
mov
xchg
adc
add
mov
addl
imul
aad
mov
out
loope
popa
jmp
jno
xor
mov
mov
push
pop
mov
movsb
mov
sub
push
popa
repz
addr16
jnp
mov
mov
xor
cmp
jmp
daa
sahf
loopne
fucomi
ficoms
ud2
xchg
cmp
addl
cmp
roll
loop
cmpsb
xor
lods
subl
push
xchg
lahf
xchg
pop
inc
lcall
cmp
jns
nop
icebp
fdivr
xchg
loope
inc
out
xor
sbb
movsl
xchg
sbbl
pop
inc
add
push
add
in
xchg
loop
xchg
ret
add
or
pop
aad
mov
sub
or
loope
jg
cmp
pop
repz
and
out
jl
jp
cmp
lcall
cmpsl
mov
xor
mov
jle
xorl
mov
sti
cmp
push
shll
in
mov
xchg
cmp
fmul
push
loopne
adc
sub
fcompl
or
mov
iret
cmp
jle
push
js
cltd
and
aad
daa
nop
adc
push
cs
push
mov
into
movsb
jae
divl
in
push
rcr
inc
dec
inc
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
es
stos
mov
adc
jo
adc
xlat
mov
ljmp
or
and
mov
pop
jle
and
cmc
iret
lds
mov
ja
dec
into
insl
test
out
shlb
sbb
aas
xchg
inc
and
dec
mov
sbb
adc
push
adc
push
aad
adcl
xchg
adc
mov
mov
pop
and
jmp
push
lea
inc
push
enter
fmul
ret
mov
repnz
mov
xchg
pop
pop
cmpsb
addr16
into
lock
fcompl
sub
ds
lahf
cwtl
mov
add
jge
add
mov
inc
aas
in
ds
roll
loop
insb
rcrb
ds
cs
loope
dec
in
push
xor
fnsave
mov
std
aas
cmpsl
mov
sti
and
mov
dec
mov
addr16
cmp
in
mov
mov
test
pushl
mov
sahf
out
fnstcw
in
mov
push
sti
adc
jnp
inc
lcall
das
popa
mov
add
and
mov
push
arpl
xor
loope
ja
mov
and
lahf
hlt
ss
sbb
push
int
add
in
jae
add
inc
es
xchg
out
jecxz
cmp
sub
in
pop
jo
dec
daa
cmpsb
pop
ret
xchg
sbb
mov
jbe
int3
lret
lahf
fists
add
fwait
lds
fwait
lea
add
loop
xor
mov
add
in
cmp
test
xchg
dec
xchg
mov
inc
cli
sub
je
and
pop
lds
arpl
inc
pop
jg
std
mov
mov
adc
ret
cmpsb
fildll
fwait
sbbb
std
stc
cmp
mov
jmp
mov
repnz
loope
out
fwait
call
pusha
and
in
sub
mov
sub
jae
sbb
sub
push
sbb
push
popa
int
sahf
pop
xchg
push
mov
js
lock
mov
pushf
lock
fists
push
loopne
outsl
xor
push
push
test
in
dec
ja
sub
dec
sbb
pop
xchg
stos
subb
fisubs
mov
mov
cmc
lcall
int
out
jno
adc
dec
add
mov
and
decl
jb
insl
sti
mov
cwtl
add
add
xchg
xchg
loop
pop
rorl
mov
sarb
loop
popa
cmp
cmc
cmp
icebp
pop
add
mov
lock
sbb
in
in
stc
xchg
leave
push
or
inc
test
into
stc
cwtl
arpl
inc
fwait
inc
popf
jmp
ret
shl
push
pop
dec
jg
out
pop
shl
jmp
nop
sub
dec
pushf
lock
mov
mov
pop
and
dec
aam
js
mov
out
rorl
ffree
mov
aam
outsl
xor
sub
dec
xchg
notl
pusha
dec
popf
adc
xchg
enter
xchg
mov
mov
inc
mov
inc
nop
fcompl
dec
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
imul
adc
xchg
pop
loopne
int3
mov
sub
jo
jae
aas
pop
sub
or
ljmp
pop
ret
fsubr
jbe
mov
adc
int
jb
inc
icebp
ljmp
inc
orl
xchg
aas
push
out
shr
sbb
mov
shll
push
pop
lods
mov
test
pusha
adc
jp
add
or
pop
mov
cltd
xchg
adc
subb
rclb
out
rcrb
cwtl
sbb
stos
push
imul
data16
push
mov
mov
push
or
sub
bound
out
sti
adc
fmul
xor
lret
loope
out
pop
mov
mov
sbb
xlat
dec
rcr
loop
out
sbb
popa
in
ret
adc
cmp
icebp
pop
dec
hlt
push
scas
push
dec
jp
lret
insb
ja
sbb
sbb
mov
dec
lahf
push
loop
js
fs
cli
arpl
adc
inc
sarb
mov
ror
jecxz
inc
les
test
popf
jmp
fnstsw
addb
test
inc
das
mov
adcl
adc
cmpsl
fadd
add
int
lcall
nop
ss
outsl
rcrl
rcrl
rolb
inc
mov
xlat
push
aaa
cltd
sahf
pop
insb
mov
pop
mov
mov
punpcklbw
loop
mov
dec
insl
push
push
pop
sbb
test
js
add
jb
adc
jae
insb
jmp
cwtl
orb
pushf
imul
or
pop
test
fldcw
xchg
pop
or
jae
aaa
popa
rolb
incb
rorl
shrb
jmp
push
mov
add
fldcw
std
roll
add
add
push
setbe
cltd
jmp
mov
pop
cmp
sbb
mov
outsl
outsb
xchg
aaa
test
sub
mov
push
pop
loope
adc
loopne
xor
std
mov
mov
push
mov
cwtl
insb
rcr
cltd
dec
out
jo
cmp
hlt
push
inc
dec
pop
xor
jp
mov
cmp
repnz
lcall
loop
push
mov
jp
or
ret
je
sub
and
fcmovb
mov
jnp
inc
stos
add
sub
daa
lcall
mull
sbb
fs
out
pop
inc
or
mov
or
aam
cmpsl
mov
mov
dec
jb
mov
and
insb
mov
aas
lcall
cmp
mov
ss
jle
inc
jo
push
int
jb
sbb
cmp
fisttpll
bound
fists
cmp
aas
out
cmp
sbb
lea
push
jae
stos
jno
jg
sbb
and
idivb
in
es
movsb
mov
inc
notb
lahf
xchg
mov
xor
in
gs
and
pop
cmp
fidivl
std
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
fsubp
push
fstl
adc
adc
and
sbb
mov
jge
movsb
mov
xchg
xor
cmovp
add
stos
les
jg
mov
fst
leave
push
or
in
nop
sub
xor
dec
adc
es
pop
add
xor
push
imul
xchg
jbe
fisubs
jp
movq
nop
xor
mov
cwtl
icebp
cli
int
lock
je
push
mov
adc
mov
in
push
mov
clc
pop
adc
stos
lds
sub
mov
inc
pushf
addl
leave
jo
les
fdiv
dec
push
cmp
add
movsb
mov
les
fnsave
fs
fistps
imul
mov
mov
addr16
add
rcrb
jno
notl
fs
jae
and
sub
mov
test
and
stc
dec
dec
mov
movsl
pop
test
loopne
xchg
jl
jmp
fs
sub
shlb
movsb
mov
xchg
mov
jo
xchg
sub
das
cmp
in
repnz
adc
hlt
jno
mov
sub
push
int
mov
scas
pop
mov
add
pushf
mov
push
es
dec
pusha
lahf
addr16
stos
leave
mov
mov
mov
rcl
sbb
xchg
jmp
arpl
lret
js
shrb
in
scas
fs
jne
movsl
ret
mov
and
push
push
sbb
xchg
call
movsl
out
aas
sbb
dec
mov
xor
rcl
ds
rol
add
or
inc
sbb
adc
push
mov
and
xor
xlat
imul
add
fimull
pushl
mov
arpl
sbb
aaa
add
xor
or
fdivs
pop
out
adc
lahf
push
mov
aas
bound
jno
xchg
mov
dec
pop
mov
movsb
jl
cmp
and
insb
adc
lret
mov
ljmpw
xchg
dec
jg
das
addr16
xor
imul
xchg
push
pop
adc
cmp
popa
outsl
inc
pusha
cmpsb
jecxz
xchg
xchg
pop
nop
lret
cmp
lds
mov
out
sbb
xchg
add
hlt
sub
es
nop
imul
push
mov
lds
mov
cs
nop
movsl
sbb
mov
ss
out
lea
outsb
xor
and
mov
jle
cmc
xchg
ds
mov
xor
mov
pop
and
inc
xchg
xor
push
mov
ret
lods
mov
and
push
fwait
mov
repnz
jnp
icebp
popf
cmp
icebp
and
shrb
pop
sbb
shl
dec
adc
push
push
inc
push
lods
ja
adc
outsl
loope
fisttps
aam
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
fldl
sahf
aad
adc
adc
inc
pushf
loope
pop
mov
es
in
adc
mov
mov
add
mov
out
fmuls
hlt
fimull
fwait
jle
aad
pop
cmpsb
jmp
push
mov
divl
ficomps
ljmp
outsl
inc
adc
pop
dec
enter
mov
sbb
mov
popa
stc
xor
lahf
movsb
cmc
sbb
js
mov
arpl
mov
cld
iret
cld
adc
push
mov
cmpb
cmpsb
pop
mov
mov
idivl
imul
ja
ss
mov
shrl
scas
jno
shl
loopne
in
dec
cld
xor
inc
xchg
pop
iret
adc
imul
daa
idivl
pop
aas
enter
xchg
mov
in
cli
mov
add
iret
and
sub
xchg
mov
lods
cmp
and
lret
sub
std
faddl
lock
xlat
fsubrs
xrelease
add
mov
fstpt
stos
shrb
inc
adc
mov
dec
fadds
pop
loop
popf
mov
and
arpl
pop
sub
aas
push
loope
pop
lds
adc
cmp
scas
mov
sub
dec
add
pushf
xlat
lret
push
cmp
fiaddl
xchg
sbb
mov
stc
sbbb
inc
xor
mov
sub
jmp
mov
cltd
adc
cmp
xlat
push
jb
psubb
in
ljmp
inc
inc
jg
stc
sbb
lahf
add
jle
sahf
mov
movsb
sub
ja
cld
cmc
jmp
repnz
mov
cmp
sub
jns
push
mov
or
scas
pop
aad
pop
leave
inc
jns
pop
dec
push
aas
ljmp
xchg
and
test
sete
cmp
je
test
out
pop
pop
cld
inc
nop
sub
push
stos
sub
jl
and
fiaddl
sbb
xchg
lock
les
stos
leave
mov
jge
and
add
pop
repz
fwait
mov
sbb
loope
addl
or
lods
addl
push
fsubrp
ja
and
je
mov
sar
jg
cs
out
xchg
out
jge
mov
pushf
push
out
cmpsl
out
mov
dec
pop
xchg
repnz
cmpsb
xchg
jle
loop
addb
push
jbe
mov
mov
pop
mov
lods
xchg
or
cmp
in
ds
push
jl
xlat
lcall
mov
aaa
loop
sarl
cmp
inc
insb
inc
xchg
jb
movsl
ret
outsl
mov
gs
cmp
xchg
das
or
xor
repz
xchg
inc
pop
cmpsb
lds
pop
adc
loopne
or
setbe
sbb
xor
or
pop
xchg
xor
adc
push
mov
pop
fcoms
jo
jmp
lahf
cwtl
sbb
cmp
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
mov
adc
jo
adc
mov
pop
push
sub
mov
sbb
enter
bound
add
and
js
psllw
cmp
ficoms
cmp
enter
movsb
cli
jne
stos
xchg
sar
jge
mov
loopne
mov
cs
push
nop
std
mov
scas
or
dec
lcall
ret
out
test
lahf
add
ljmp
dec
fstl
pop
icebp
sbb
push
fimull
ja
mov
sub
xchg
dec
xchg
sub
shll
pop
push
dec
repnz
xor
cmp
and
outsb
mov
adc
dec
das
cmp
dec
lds
push
movsb
stc
adc
pop
les
sahf
xor
push
jp
cltd
mov
scas
and
sti
test
xchg
lcall
lea
xchg
cmp
pop
imul
in
popf
iret
ljmp
mov
push
pop
xor
add
jae
xchg
add
xchg
lret
sub
pop
pop
inc
push
repz
xchg
in
movsl
jl
inc
mov
int
stc
push
inc
imul
adc
or
xor
sti
ret
cli
les
std
out
and
or
mov
inc
adc
jnp
dec
mov
sub
sbbl
sbb
int
fs
lret
notl
shlb
test
adc
jle
xor
pop
cmp
mov
jle
or
pop
scas
mov
xor
cmp
pop
jo
push
daa
pop
pop
lock
cmp
leave
sbb
addr16
xor
stos
sub
in
insl
fimuls
cmp
sbb
adcb
mov
sarb
mov
adc
sub
xchg
into
fsts
in
xchg
scas
push
jae
out
mov
jo
gs
jmp
or
xchg
mov
xor
adc
dec
mov
add
jns
push
jae
dec
push
xchg
movsl
mov
mov
push
xchg
add
dec
cs
pop
adc
dec
cltd
add
pop
std
lds
mov
push
pop
or
fidivl
sub
scas
inc
movsb
fwait
jg
mov
cmp
push
mov
cld
jg
pop
jmp
ret
mov
mov
push
test
je
and
xchg
sbb
push
int
cmp
sbb
daa
inc
pop
arpl
in
mov
dec
adcl
ret
xor
mov
fwait
sti
je,pn
hlt
xchg
sbb
aam
inc
ljmp
cmpsb
add
lock
int3
mov
pop
subl
mull
out
leave
jno
jnp
sahf
leave
aaa
mov
stos
mov
lahf
adc
ljmp
jl
xchg
sub
push
push
add
in
leave
and
nop
inc
xchg
push
idivb
or
cmp
dec
cli
push
shll
mov
stos
sub
int3
jp
dec
or
push
and
pop
les
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
mov
inc
or
loope
ds
mov
ja
mov
aaa
rcr
daa
add
push
push
push
mov
mov
sub
pop
cmc
rcr
jle
insl
in
fisubrs
and
shr
scas
les
test
fistps
or
mov
dec
mov
xchg
in
addr16
add
lods
pop
mov
ljmp
pop
daa
stc
repnz
push
les
lock
test
in
test
pop
pop
xchg
adc
jbe
mov
ss
lahf
cmpsb
xlat
daa
xchg
es
es
mov
pop
jb
mov
scas
and
mov
lods
mov
repz
xchg
or
jmp
lret
xor
xchg
cmp
pop
into
fnop
jge
push
test
and
or
mov
aad
mov
or
aas
dec
fucomi
lods
push
mov
ds
insl
xchg
cmpsl
xlat
mov
push
fdivrl
std
and
fmull
fcoml
aaa
std
sbb
jmp
jecxz
icebp
sbb
jae
test
add
mov
jo
stos
out
and
pop
mov
add
bound
jnp
vmwrite
insb
dec
xor
jnp
jge
out
aas
cltd
test
pop
out
aad
ds
frstor
into
daa
pushf
jge
xor
mov
push
rcl
cld
push
dec
in
roll
mov
mov
int
mov
jno
push
and
add
cmpsl
sbb
push
daa
jle
sbb
loopne
shll
sarl
inc
push
mov
addr16
push
mov
shr
scas
sbb
stc
and
xchg
insl
scas
dec
ljmpw
addr16
out
jbe
repnz
out
xchg
sub
pop
testl
add
sbb
hlt
mov
inc
sbb
daa
jle
lret
lret
xor
or
in
adc
cmc
sub
jbe
pop
shl
jge
idivl
lret
rcll
mov
mov
ja
lds
test
inc
push
inc
clc
in
inc
lcall
clc
sub
jae
daa
and
cmp
test
push
xor
pushf
movsl
inc
cwtl
mov
rorb
jnp
sub
fstpl
fs
fldt
jmp
inc
hlt
add
dec
xchg
mov
jle
sub
jg
mov
or
pop
xchg
ficoml
cmp
mov
pushf
xchg
test
cmp
mov
fildll
das
mov
fcmovbe
ds
or
test
in
out
leave
push
mov
inc
xchg
adc
inc
pop
xchg
scas
enter
es
pop
adc
ss
das
or
mov
pop
stos
push
pop
movsb
mov
je
lret
mov
repz
jns
mov
push
jns
add
insb
insl
cmp
mov
pop
dec
scas
hlt
pushf
push
call
aas
cltd
je
stos
idivl
call
sub
faddl
cwtl
bound
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
cmp
mov
mov
adc
jo
adc
enter
aad
iret
pop
jmp
icebp
movsl
xor
rcrb
ja
or
ljmp
pop
dec
dec
mov
or
xchg
std
fadd
in
inc
sbb
mov
mov
iret
xchg
lea
shll
cmp
cmc
xorb
push
int3
push
xchg
rcrl
adc
ja
ret
loope
aad
pusha
jae
loopne
sub
pop
shlb
stc
data16
inc
out
jmp
and
sbb
std
leave
inc
daa
mov
mov
stc
cwtl
cmpsb
shlb
mov
into
out
pop
ret
loop
mov
lds
add
mov
in
movsl
repnz
lock
nop
mov
adc
dec
xor
mov
into
imul
lods
das
mov
int
lcall
xchg
jge
bound
add
xchg
jo
fisttps
fdivrs
iret
popf
push
pop
int3
lods
loop
iret
xor
fcompl
les
ret
test
and
mov
lea
hlt
shll
test
pushl
outsb
movsb
lds
and
mov
push
mov
fildll
fstpt
mov
mov
in
aam
sub
leave
in
gs
sti
shrl
or
pop
cmp
stos
xlat
shrl
push
sub
fwait
push
push
pop
mov
jge
jns
das
arpl
jo
fsubrs
out
dec
add
xor
adc
test
nop
popa
mov
repz
movsb
pushw
sbb
mov
jns
pop
push
push
inc
push
or
and
ret
movsb
pop
jns
or
sarl
mov
cmp
sbb
les
fwait
sub
insb
jo
inc
jp
lods
pop
push
mov
shlb
sarl
and
inc
xchg
or
xchg
mov
inc
and
and
inc
push
pop
lods
testl
lock
cwtl
into
sarl
or
test
lcall
mov
sbbb
fdivl
inc
cmp
adc
stos
ljmp
andb
lahf
xor
faddl
out
sub
pop
xor
sub
add
dec
cmp
shll
sbb
pop
jne
cltd
push
cmp
mov
inc
mov
scas
lods
pop
fdivrp
mov
sub
ja
out
or
add
inc
cmpsb
sub
pop
xor
aas
inc
pop
xor
outsb
inc
xchg
hlt
pop
cs
adc
mov
mov
mov
int3
push
sbb
les
inc
loop
xchg
pushf
push
cli
test
push
mov
mov
loope
xor
mov
sbb
jb
jle
push
mov
movsl
push
cmpsl
into
out
repnz
adc
add
jl
out
ret
jle
mov
jle
ss
xchg
xor
inc
and
call
cltd
in
imul
in
out
repz
and
aad
mov
out
xchg
adc
adc
add
jmp
mov
aam
sbbb
pop
scas
xor
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
rcl
pop
mov
jo
adc
fcomp
aaa
ljmp
add
imul
push
out
hlt
dec
inc
and
mov
cwtl
ljmp
xchg
mov
push
jae
cmc
stos
fdiv
out
pop
adc
push
in
stos
aaa
lea
fnstenv
mov
out
inc
dec
std
sbb
ret
pop
xchg
xor
cmp
xchg
jmp
mov
ds
jp
outsb
mov
movsb
out
andb
xor
hlt
mov
jle
out
stos
mov
xchg
movsl
xor
mov
xchg
adc
imul
xor
cmp
inc
jge
pop
fnstenv
sbb
adc
outsb
sahf
or
xchg
mov
rcrb
test
xchg
jge
loope
pop
loop
cmp
pop
cmp
shrb
mull
out
out
test
add
stos
insl
test
inc
icebp
test
cmp
sub
inc
mov
aam
lea
icebp
adc
mov
jne
mov
cmp
xor
inc
mov
or
xchg
dec
fsubr
push
sub
xchg
xchg
mov
mov
sbb
jmp
adc
out
cmpsb
jbe
fucom
ds
add
shl
mov
adc
jae
mov
and
sub
out
cmp
jmp
mov
pop
adc
hlt
jge
inc
int
into
data16
jbe
bnd
cs
es
cmp
jmp
and
pushf
int3
dec
and
in
scas
mov
das
insl
pop
adc
push
clc
xor
xchg
das
in
push
incb
add
pop
mov
pop
pop
sub
mov
iret
xchg
fs
mov
or
or
sbb
inc
jl
fidivl
mov
aam
pop
dec
xor
out
nop
push
jmp
fstpl
adc
adc
pop
add
scas
xchg
jb
push
adc
mov
mov
xor
shll
xchg
aas
adc
in
loopne
fldl
cwtl
lock
andb
cmp
mov
pminub
adcb
cli
divl
stos
or
inc
or
in
into
lcall
rcrl
movsl
jl
pop
in
fidivs
xor
bound
cmp
lret
shl
sub
jl
out
jnp
mov
cmp
jmp
jecxz
sbb
aas
mov
call
into
mov
ret
insl
das
lcall
adc
lcall
push
call
loop
jns
or
jecxz
gs
mov
xchg
push
jb
mov
mov
sbb
ror
add
jb
bnd
idivb
mov
jle
mov
mov
cli
std
insb
and
jle
inc
xchg
push
push
lcall
adc
dec
lock
movhps
sub
xchg
ror
call
mov
sbb
push
ds
enter
gs
cmp
adc
pop
shlb
pop
xchg
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
cmc
pop
sbb
jle
xchg
jbe
pop
lock
mov
pop
sbb
cmp
or
repz
and
in
inc
aaa
js
inc
inc
jle
sub
adc
pusha
mov
inc
pop
or
popf
dec
rcrl
mov
jo
adcl
sbbl
push
rclb
mov
fisttps
das
jae
sbb
push
xchg
cltd
cltd
lods
mov
adc
lahf
cmpsb
fcmovnu
cmp
jb
ret
cmp
int3
mov
pop
mov
xor
pop
xor
lods
mov
jecxz
subb
push
dec
jbe
stos
push
inc
ss
xor
mov
scas
movsl
jge
cld
push
xor
inc
aaa
cs
or
out
lds
or
cmp
loope
xor
push
test
mov
cmp
jo
outsb
and
xchg
mov
in
cltd
cmp
push
sti
test
test
insl
cmp
mov
shll
cmp
jle
dec
push
mov
lds
shll
pop
xchg
ret
scas
pop
ja
test
fmul
cli
push
mov
mov
add
add
push
test
mov
adc
fwait
sub
outsl
dec
pop
js
adc
lcall
ss
xchg
xor
gs
jno
gs
sbb
shll
sub
out
pop
testl
xor
cmc
mov
xor
adc
stc
scas
inc
and
std
inc
mov
adc
mov
mov
fsub
rcr
jnp
int
aas
sub
loopne
faddl
jno
pop
xchg
and
xchg
loopne
pusha
lahf
or
jnp
scas
jo
lret
fstps
test
pop
pushf
mov
lods
arpl
jb
cmp
lahf
xor
add
jno
mov
pop
sbb
int3
in
adcl
subl
les
add
in
rorl
push
add
push
jmp
push
pop
push
js
push
adc
stos
movlps
loopne
cmp
mov
adc
sbb
jp
add
ret
and
jno
sbb
les
stos
pshufw
add
pop
leave
imul
and
xchg
pop
insb
dec
into
in
mov
test
xchg
pop
mov
mov
jbe
mov
push
testb
mov
into
inc
out
xor
push
dec
js
jmp
test
and
xchg
scas
outsl
mov
test
lret
push
mov
jne
mov
out
out
adc
xchg
fucomi
lret
sub
shl
mov
dec
xor
ja
jmp
jmp
push
sti
pop
fs
call
and
pop
lea
clc
sahf
aam
xchg
mov
sbb
pop
jp
xchg
push
jge
movsb
leave
adc
xchg
rcrl
xchg
jne
mov
xor
mov
imull
inc
sbb
scas
lds
ret
jae
pop
lods
pop
mov
mov
jmp
adc
subb
adc
in
out
and
fisttps
bound
sahf
pxor
int
jle
inc
push
mulb
add
nop
xchg
jl
add
repz
jns
xor
addr16
mov
lea
js
sahf
or
jns
and
test
adc
ljmp
adc
xor
lret
sub
mov
jg
icebp
sarb
mov
in
out
or
pop
inc
xchg
jge
or
cmp
es
movsb
fsubs
leave
sti
fildl
idivl
mov
scas
or
mov
xor
out
push
adc
jp
pop
push
test
aam
sbb
cmp
pop
scas
jns
jle
sbb
fidivs
xor
mov
cmp
das
mov
sahf
setae
push
xchg
clc
inc
out
cmp
imul
cmpsl
sbb
add
jge
fadd
sub
sub
cmp
and
dec
daa
aam
enter
fists
and
mov
jmp
cmp
add
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
testl
adc
mov
fadd
jg
lcall
dec
inc
jo
mov
jg
testb
xchg
jne
lcall
aad
enter
enter
movsb
into
inc
hlt
jnp
aas
cmp
iret
fsubrs
adc
mov
outsl
push
clc
cwtl
xchg
or
scas
es
xor
mov
xchg
fwait
xor
mov
negb
leave
ret
in
add
cmp
repz
je
push
lock
cmpsl
inc
aaa
nop
pushf
sbb
fcomip
jge
popf
cmp
xor
push
imul
adc
inc
icebp
mov
nop
and
scas
xchg
in
cmp
cli
mov
jmp
clc
cld
ret
test
push
push
sub
or
std
mov
jmp
stos
push
int
loop
sbb
push
cwtl
rorl
mov
decl
dec
xchg
pop
les
lea
int
out
cmp
inc
pop
out
test
mov
pop
cmp
mov
nop
mov
leave
ffreep
cmp
lahf
add
jge
dec
and
cwtl
jne
inc
mov
fmull
test
in
das
xchg
imulb
jne
dec
and
outsb
mov
dec
hlt
or
mov
adcl
push
add
in
insb
or
cmp
mov
pushf
sbb
lds
jns
push
mov
lods
std
das
sahf
push
and
scas
ret
xor
loope
jecxz
pop
cmp
or
jl
pop
insl
pop
pop
test
xchg
adc
adc
cwtl
xchg
pop
outsl
jo
cmp
xor
mov
xor
outsl
or
push
outsl
dec
lcall
loope
mov
jmp
inc
jbe
pop
add
inc
dec
sub
faddl
cwtl
mov
scas
dec
sbbb
cmp
jg
push
fidivl
call
jno
aas
and
shlb
stos
pop
jbe
xchg
and
insl
lea
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
incb
inc
stos
sbb
adc
stos
movlps
mov
sahf
je
in
jle
jp,pt
bound
and
nop
shlb
or
jne
dec
dec
mov
sub
lea
pop
and
pop
mov
push
sub
subb
aam
pmulhw
cmp
stos
push
popf
sbb
in
push
lods
sbb
xchg
fldl
dec
mov
out
lods
sub
daa
xchg
push
mov
inc
inc
daa
clc
insb
cmpsl
pop
pop
mov
dec
data16
mov
push
sub
vminps
dec
in
into
xchg
fldt
cwtl
pop
push
cmp
mov
testl
jge
pushf
mov
mull
test
imul
add
adc
mov
ret
outsb
ljmp
les
jno
ret
jns
in
je
push
adc
imul
add
mov
or
sahf
pop
rcr
fldt
lcall
push
adcl
mov
adc
loop
call
fcom
push
adc
mov
cmp
jmp
xchg
inc
xchg
sbb
call
xor
pop
lret
call
xorl
bnd
push
int
add
mov
repz
add
mov
std
push
bound
subl
jnp
out
lock
mov
dec
daa
dec
mov
cmp
ss
mov
pushf
rcr
xchg
stos
adc
into
int
in
test
dec
leave
mov
bound
dec
nop
cltd
lds
les
or
cmpsb
jnp
cmp
mov
sbb
push
sbb
ret
sar
cli
into
jp
push
aas
ljmp
nop
mov
adc
jnp
pop
js
arpl
push
cmpsb
mov
jmp
inc
stc
dec
out
or
push
sub
sti
mov
jns
sub
jle
int
jge
js
aas
push
and
insl
fcoml
mov
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
sub
lods
mov
adc
stos
movlps
nop
std
adc
xchg
repz
out
and
cmpsb
pop
pop
das
icebp
cmp
iret
push
sub
enter
test
mov
cld
jmp
sub
inc
mov
and
je
lods
hlt
fcompl
and
or
repz
cli
push
lods
xchg
push
ss
mov
out
lods
jnp
sbb
pop
xchg
xlat
nopl
scas
fwait
les
sub
push
add
test
test
imul
sbb
lcall
test
push
es
pop
mov
dec
jnp
sarl
add
and
cli
add
out
xor
rcrl
lret
int
lcall
jmp
and
push
in
sub
mov
mov
push
sti
repz
cmp
les
in
mov
sbb
cli
xchg
xchg
ja
test
push
mov
sub
mov
pop
mov
js
or
aam
mov
mov
setne
add
lret
out
sub
sbb
cmc
mov
xor
es
iret
cmp
scas
cmp
js
and
dec
jnp
push
into
xchg
push
ret
test
roll
add
je
cmc
and
dec
outsl
mov
popf
inc
cmp
mov
cld
lret
icebp
gs
push
imul
or
mov
xor
clc
lret
popf
inc
cld
xchg
pcmpgtd
jge
pushf
aad
aad
sbb
or
subl
xchg
orl
adc
push
xchg
push
sub
pop
jns
loop
pop
jo
pop
push
cmp
jmp
jg
xchg
cltd
fstpt
shr
insb
adc
mov
jb
pop
fdivrl
pop
dec
fsub
cltd
sbb
xchg
mov
test
cmp
xchg
or
int3
cmpsl
jmp
xchg
pop
xlat
lret
push
add
adc
mov
jb
mov
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
pusha
pop
clc
xor
stos
mov
loopne
sub
ds
xchg
rorl
test
mov
mov
dec
inc
adc
mov
fs
cmp
mov
js
pop
gs
cmpsb
mov
inc
js
test
jne
std
xor
sub
addr16
inc
lock
pop
cmp
data16
orb
sbb
out
scas
sub
cltd
shll
add
cld
out
push
decl
mov
gs
mov
arpl
pop
test
je
sti
and
add
add
es
outsl
sbb
or
xor
fsubs
adc
incl
mov
dec
inc
sub
sar
jbe
dec
cmp
cmp
mov
ljmp
cmp
and
ja
lock
or
mov
pop
sub
arpl
call
inc
and
lret
jbe
cltd
out
adc
jl
lds
add
pop
aad
inc
sbb
adc
std
insb
cmp
inc
push
adcl
xchg
cmp
arpl
push
jmp
int
inc
adc
dec
out
fcmovbe
cmpl
add
ret
fnsave
ja
xlat
inc
mov
daa
out
mov
adc
mov
xlat
outsb
adc
push
xchg
lret
adc
iret
xor
adc
xchg
ja
cwtl
dec
push
adc
lods
push
es
adc
and
bound
int3
xchg
add
sbb
cmovo
imull
mov
sbb
ja
ds
popl
adc
out
mov
inc
mov
mov
cmp
mov
movb
pop
mov
jg
ja
ljmp
rcll
test
mov
pop
mov
mul
mov
cli
mov
fidivs
inc
bound
sub
push
jle
outsl
cwtl
call
and
sub
lea
rol
jecxz
lods
imul
divl
adc
es
xor
xlat
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
ljmp
js
xchg
and
cltd
inc
mov
in
push
inc
icebp
fwait
int3
call
bound
ds
jo
mov
scas
std
adc
xlat
xchg
sbb
mov
adcl
mov
js
inc
or
xlat
pop
pcmpgtb
gs
add
mov
xor
scas
mov
push
inc
jmp
insb
adc
in
imul
aas
std
aad
iret
sbb
jb
imul
xchg
mov
jp
or
cmp
pop
sbb
daa
inc
lahf
pop
jle
mov
mov
sti
gs
jo
out
push
adc
push
lret
mov
in
sub
ljmp
stc
add
or
iret
sbb
scas
or
cmp
inc
mov
cli
xchg
and
push
call
jge
jno
mov
inc
roll
dec
ret
popa
je
dec
inc
fildll
jae
sbb
lcall
out
aad
xor
stos
into
mov
les
inc
aad
int3
or
jp
test
mov
es
dec
jo
ss
sbb
xchg
mov
insl
pop
xor
and
fwait
add
pop
lods
sub
or
fwait
lods
or
push
cmpl
loope
inc
scas
cmp
mov
cmc
out
add
gs
fcmovnb
mov
or
inc
lcall
push
and
into
mov
inc
pop
dec
add
push
int3
pop
dec
cltd
mov
fwait
pusha
mov
push
movsb
dec
mov
or
cld
fdivrl
sub
xor
adc
rclb
and
mov
leave
out
lods
mov
shlb
pop
add
adcl
add
push
jnp
mulb
xchg
xchg
insb
jbe
ljmp
jno
testl
add
mov
xchg
mov
pop
sbbl
mov
add
push
in
out
sbb
bound
mov
pop
dec
stos
mov
adc
aaa
ret
out
xor
cmpsl
loop
movsb
roll
pop
and
test
pusha
mov
arpl
jecxz
jns
imul
push
cltd
sbbb
jns
shlb
lock
fwait
ret
mov
inc
add
mov
fiaddl
pop
add
mov
insl
mov
ret
mov
outsl
jb
jl
pop
enter
mov
dec
loop
jno
call
mov
push
call
ljmp
or
lods
mov
jl
adc
xchg
fists
dec
add
cmp
iret
add
rorb
xchg
pop
mov
insl
xorb
lret
mov
mov
add
xor
jnp
ds
repz
mov
mov
filds
pushf
and
inc
mov
cli
jb
or
jecxz
inc
adc
out
loop
sub
adc
adc
cmp
scas
cmp
frstpm(287
adc
jge
inc
xchg
xor
and
addr16
lock
add
enter
aad
adc
cmp
ljmp
scas
mov
dec
std
outsl
stos
dec
jl
int3
movsl
sub
push
jnp
push
xor
repnz
cmp
cmc
movsl
stc
aas
sub
sub
dec
push
movsl
mov
rcr
imul
int3
xchg
fmul
adc
cli
xor
lret
js
addl
mov
sahf
dec
and
mov
jp
icebp
lcall
cwtl
mov
push
mov
mov
imul
or
cmovno
sub
xchg
pusha
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
jp
lods
loop
adc
pop
adc
adc
cmp
xor
mov
das
mov
lret
iret
icebp
subl
and
sub
and
lcall
fadds
popa
aam
add
xchg
addr16
mov
dec
mov
lock
or
cmp
xchg
pusha
lea
dec
test
sub
test
stc
jne
stos
mov
pop
scas
insl
std
enter
inc
xchg
or
out
and
int
lods
mov
popa
mov
cmp
jmp
fldt
lret
and
add
movsb
outsl
jbe
xor
jbe
push
mov
add
mov
pusha
aaa
aas
outsl
cwtl
sbb
into
sbb
jp
pop
cmp
sbb
outsl
inc
push
fwait
aaa
mov
mov
adc
mov
mov
mov
daa
movsl
add
mov
jge
inc
dec
out
sbbb
in
mov
push
decl
add
mov
imul
dec
add
sub
cwtl
pusha
rol
xchg
mov
pop
loop
pop
fildl
negl
push
insl
rorb
xor
mov
rorb
mov
cli
dec
jp
mov
jmp
mov
and
pop
pop
dec
sti
mov
adc
imul
jae
std
int3
mov
push
dec
data16
mov
jl
sub
sub
and
xchg
popf
pop
pop
or
jmp
subl
mov
nop
add
push
mov
dec
mov
cwtl
fcomip
add
jge
mov
inc
test
test
push
add
fcmovnb
call
jle
out
adc
shrb
loope
cld
add
pop
stc
fisubl
rol
mov
fnsave
test
movsl
mov
cmpb
sbb
das
outsb
push
imul
out
or
das
xor
mov
sbb
lods
pop
mov
pop
cwtl
aas
pop
xchg
mov
or
shl
adc
mov
sbb
lret
mov
add
fnstcw
inc
iret
xchg
and
rol
stc
inc
fnstenv
and
mov
data16
sub
pusha
pop
mov
test
cmp
cwtl
clc
out
inc
pusha
mov
inc
sub
adc
mov
fwait
sbbl
fs
sub
jne
sbb
mov
das
hlt
mov
jb
jno
fbstp
shll
xchg
clc
icebp
pushf
out
cmpl
jp
out
sti
je
in
test
push
fcmovnb
in
std
pop
jle
sarb
jno
data16
jne
stc
xchg
cmpsl
fcomps
dec
out
sbb
stc
mov
push
mov
les
push
sbb
ficoms
insb
in
jcxz
stos
cwtl
sub
pop
hlt
fnsave
push
mov
repnz
mov
sub
xor
pop
out
sub
xlat
cmpl
fiadds
das
xchg
inc
mov
sub
popf
test
jb
inc
xchg
xchg
pop
insb
push
or
push
jp
neg
cmp
mov
fwait
cltd
mov
push
mov
std
das
sbb
inc
scas
loope
mov
in
mov
adc
nop
adc
lods
mov
xor
fimull
out
mov
mov
cwtl
pop
movsb
adc
xor
ljmp
mov
daa
dec
ret
push
dec
xchg
stos
jecxz
add
das
mov
inc
movsb
jns
rorb
sub
in
push
ss
cmp
ljmp
pop
imul
lahf
push
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
fs
adc
and
adc
pop
xchg
adc
pop
rcll
mov
adc
cmp
cmp
clc
ficoml
push
fistps
icebp
add
xor
add
cmp
fstps
lret
lret
push
xchg
shrl
sub
test
mov
cmp
sub
aad
aaa
lods
xor
pusha
adc
adc
jl
and
lds
dec
inc
xchg
jmp
dec
sbb
ds
lods
inc
scas
shll
daa
bound
push
mov
sbb
negl
adc
sbb
xchg
dec
das
jne
fs
adc
les
inc
es
rol
push
or
insb
mov
fcoms
or
push
adc
or
fisubs
stos
dec
ss
adc
imulb
push
pop
stos
lahf
dec
sarb
xor
sub
sbb
xchg
jg
ss
jae
inc
aad
cmp
aam
mov
cld
or
push
mov
mov
stc
pushf
jne
dec
addr16
cmpsb
dec
clc
mov
shlb
lods
stos
mov
or
push
into
imul
rol
mov
fisubs
xor
sub
jns
xchg
fisubrl
aas
pop
sub
sbb
adc
call
out
negl
je
fsubs
test
loop
test
movsl
inc
jg
sub
testl
mov
xchg
outsb
mov
cli
cmpsl
std
lods
sbb
ret
mov
stos
inc
mov
sbb
imulb
imul
enter
fs
andb
mov
dec
daa
insb
sub
dec
add
sub
xchg
push
pop
xlat
fwait
add
repnz
lret
inc
std
dec
loope
dec
push
pushl
das
jp
scas
lahf
cmp
jp
jl
stos
iret
aam
rorl
cltd
sub
cmpsb
lcall
ret
iret
stos
mov
add
push
aam
jo
adc
sub
xchg
xor
mov
and
in
inc
sub
xchg
inc
stc
mov
adc
inc
xchg
dec
mov
test
xchg
fistps
test
movsb
enter
popa
push
pop
mov
aam
adc
cmpsl
adc
call
clc
mov
in
jp
mov
dec
inc
js
mov
cmp
inc
lret
rorl
fcmovb
fldt
mov
mov
mov
fdivrs
fidivrl
add
xor
mov
loopne
loope
ja
int
into
int
ficomps
mov
sbb
jae
fldenv
js
and
adc
xor
cmpsb
ret
xchg
sbb
mov
sub
jmp
insl
dec
popf
sbb
jmp
push
pop
cltd
shr
mov
add
bound
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
or
fistps
cmp
mov
nop
mov
stos
int
jb
out
mov
xor
lahf
sbb
cwtl
push
xor
push
cld
clc
je
xor
cmp
cmp
push
cmc
mov
gs
aas
mov
lcall
jne
inc
pushf
paddsw
ds
jo
sub
add
sbb
cwtl
jecxz
push
xor
cmp
subb
jbe
nop
xor
xchg
sbb
dec
mov
sub
jge
xor
aaa
movsb
out
loopne
test
arpl
ret
hlt
dec
jmp
push
mov
pop
sbb
sub
stos
test
push
or
xor
jg
rcrb
cmp
insl
test
lods
in
mov
jecxz
add
push
jbe
or
cld
sub
aad
sbb
das
sbb
mov
das
jmp
xchg
adc
push
sarb
sub
mov
out
mov
inc
xchg
jno
fs
in
rolb
in
lods
adc
mov
or
dec
sbb
mov
adc
or
leave
add
push
outsb
inc
mul
pop
pop
pop
adc
fs
jbe
inc
imul
repnz
leave
cmp
xchg
repz
pop
es
in
add
cmp
sub
and
dec
test
loop
sbb
adc
cmp
pop
je
jecxz
xorl
mov
notb
adc
push
vxorps
xor
jmp
and
loope
push
or
repnz
aam
add
mov
sbbl
dec
test
or
int3
mov
dec
mov
std
ja
test
xor
movsl
bound
sbb
jp
inc
push
xchg
cmp
jg
mov
lahf
mov
hlt
ret
int
jbe
imul
stos
mov
sbb
push
inc
mov
jns
shll
xorb
std
out
xchg
icebp
pop
jo
nop
xchg
sahf
push
in
fmul
popa
fsubs
pop
adc
addb
pushf
mov
fs
sbb
cmc
xlat
popf
data16
daa
sarl
cmpsl
out
sub
test
iret
movsl
add
mov
mov
pop
mov
ret
pop
sti
decl
push
out
inc
mov
data16
cmpsl
lcall
push
cmp
test
xor
fstps
dec
xchg
shl
xchg
push
fwait
jge
push
mov
push
push
int3
jno
js
dec
add
xchg
pop
outsl
dec
nop
cmpsl
outsb
cwtl
xor
xchg
cli
mov
add
fs
xchg
sub
sbbb
or
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
cmpsb
js
jge
adc
movlps
mov
loope
jno
lock
lret
xor
mov
mov
cs
mov
lcall
pop
aam
aas
push
fcmovnu
push
add
lea
fildl
adcl
fs
add
mov
ret
ret
into
jl
xchg
pop
add
cld
fnsave
cmp
into
xor
and
jnp
jmp
mov
bnd
xor
push
xchg
xor
mov
inc
je
xor
out
imul
test
jl
rcll
jl
incb
mov
mov
idivl
inc
jns
cmp
rorl
fwait
data16
jp
cmpsb
inc
cld
pop
scas
ljmp
subl
pop
push
mov
fadd
mov
test
out
int3
dec
dec
xchg
xchg
out
rol
ret
add
arpl
jl
sbb
fs
fstps
outsb
add
scas
js
addb
jae
adc
cli
and
mov
inc
jo
js
dec
cli
bnd
and
add
repz
or
aam
jp
inc
pop
test
mov
jbe
sti
sbb
xor
sub
insb
xchg
mov
in
cmp
shlb
sub
jo
lcall
xchg
or
outsl
sbb
jns
mov
int3
mov
jb
pop
js
push
mov
cmp
mov
pop
bound
iret
cmc
fwait
inc
test
push
ljmp
mov
and
mov
or
pop
repz
or
mov
test
jmp
pop
clc
mov
mov
aam
movsb
and
sbb
imul
cld
pop
adc
add
sqrtps
xchg
xor
lods
jne
mov
sub
idiv
adc
cmp
push
cmp
mov
aam
mov
sahf
ja
int
mov
jge
xchg
dec
ss
mov
loopne
into
jno
mov
cmc
in
punpckhdq
popl
cs
xchg
adc
in
push
std
sub
std
shll
mov
mov
cld
sbb
cs
lret
pushf
cmp
psrad
pop
push
jne
aas
fwait
in
clc
addr16
jne
cmp
int
push
add
sub
jns
inc
inc
and
aad
or
sbb
pop
mov
pop
dec
pop
adc
insl
int3
out
pop
dec
ljmp
insl
jb
mov
xor
push
notl
leave
cmp
icebp
mov
movb
pop
xor
cs
push
pusha
xlat
hlt
stos
das
out
push
in
mov
std
push
aam
pushf
sbb
jecxz
cltd
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
dec
push
cmpb
adc
adc
dec
pop
loopne
int
pop
aad
cmpsl
addl
out
or
es
nop
sub
mov
subb
xor
xchg
or
dec
adc
mov
or
int
push
adc
sahf
and
xor
sbb
arpl
pop
or
call
movsl
xchg
inc
sbb
out
ljmp
mov
shrl
ds
sti
insb
push
cmp
fnstsw
aam
jne
xchg
mov
pop
subl
pop
push
mov
jl
clc
xchg
jmp
sti
aaa
loopne
pop
xor
pop
sub
das
push
and
lcall
stos
shll
mov
sbb
addr16
mov
jb
mov
pop
int3
push
not
xchg
pusha
fbstp
lcall
xchg
cmc
xlat
lcall
repz
jge
leave
mov
pslld
hlt
pop
sbb
push
xchg
decl
sahf
in
sub
or
les
enter
pop
or
mov
mov
mov
mov
push
lea
sahf
inc
push
jp
loop
lock
sub
sub
pushf
fcompl
jecxz
jo
mov
or
frstor
and
scas
ljmp
mov
add
mov
sub
lcall
push
mov
cmpsl
xchg
mov
ret
lods
mov
lods
mov
mov
js
mov
inc
mov
lret
ja
unpcklps
inc
jle
mul
adc
movsl
adc
lcall
or
add
mov
sub
jecxz
out
sub
scas
iret
and
std
xor
out
bound
push
mov
sbb
les
sbb
add
xchg
test
push
mov
push
pop
push
in
xchg
imul
sbbb
int
inc
inc
pop
std
lret
cmp
lcall
and
xchg
cmp
or
inc
ljmp
pop
loopne
mov
fsubrp
dec
mov
icebp
jo
push
movsl
push
mov
push
jge
mov
cmpsb
and
test
clc
pop
ja
imul
mov
jnp
cmpsb
push
sarb
jae
ret
iret
cmpsl
pop
pop
daa
andb
or
inc
mov
out
mov
nop
dec
pop
jle
pop
repnz
popf
js
fcoms
pop
xor
dec
aam
insb
frstpm(287
icebp
out
adc
ret
das
add
icebp
insb
jecxz
pop
in
cmpsb
stc
pop
lret
int3
dec
mov
xor
inc
jecxz
inc
cmp
xchg
push
push
pop
xchg
xchg
mov
dec
pushf
pop
andb
xor
or
mov
sbb
xor
xor
sub
ss
jo
cmp
hlt
nop
aam
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
xchg
xchg
jb
pop
cmp
and
mov
out
mov
or
xchg
repz
je
daa
cwtl
fistpl
mov
dec
xor
xor
jmp
clc
insb
arpl
push
push
mov
lahf
loop
add
in
pushf
jl
and
fldl
push
add
incl
movsl
lcall
mov
mov
rcll
ss
fdiv
push
dec
vmovaps
stos
data16
xchg
pop
jmp
mov
push
rclb
mov
push
enter
xor
xchg
push
shrl
cwtl
or
cmpsl
lods
stos
pop
popf
mov
adc
cmpsl
cltd
dec
in
aad
fwait
insb
inc
mov
test
push
ljmp
lds
mov
test
lods
out
jmp
mov
out
call
lcall
pop
sub
xor
xor
mov
in
or
push
ficoms
xchg
dec
jbe
inc
xchg
cmc
and
push
pop
int3
adc
sub
stos
inc
lods
mov
imul
dec
dec
in
xor
pusha
xor
xor
or
out
push
dec
sub
sub
pop
mov
or
ss
xchg
xlat
pushl
mov
ficompl
les
and
push
insb
add
jl
cwtl
fisubrl
push
fadds
inc
aad
push
pop
addr16
in
sub
stc
int3
fbld
pusha
or
pop
mov
negb
and
xor
push
dec
shrl
push
lcall
fisubl
jge
sub
dec
in
jge
pop
cli
out
es
pop
pop
nop
mov
xor
fstps
dec
push
jns
icebp
pop
cmp
in
xor
insl
inc
mov
lret
inc
add
adc
sbb
and
mov
jbe
cli
or
or
sub
pop
push
mov
dec
adcb
mov
ror
ds
mov
stos
stc
pop
lods
rep
scas
inc
add
jmp
pop
lds
add
loop
xchg
insl
hlt
loope
dec
sbb
sub
mov
lahf
mov
fwait
pop
popf
cwtl
pop
movsb
mov
icebp
or
test
in
sbb
cld
js
inc
jg
dec
lods
out
arpl
lahf
mov
bound
xchg
shl
jg
es
loopne
xchg
and
testl
sarl
push
movl
jne
mov
notb
push
lods
adc
roll
mov
repz
cld
jno
mov
sbbl
aad
imul
lock
push
fstpl
outsl
shr
mov
movsl
sbb
jl
out
stos
popa
lahf
inc
adc
addr16
std
imul
aas
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
rol
dec
mov
or
lods
dec
call
or
xorl
cli
outsb
test
js
andl
ret
pop
add
mov
out
hlt
add
cltd
mov
cmp
xor
scas
idiv
das
lahf
mov
and
inc
or
adc
cld
mov
aam
jns
imul
cmpsb
jg
loop
mov
adc
cltd
jbe
and
in
lods
pop
push
mov
lock
sahf
sub
adc
and
jbe
data16
cmp
js
fadds
data16
pop
sbb
inc
mov
shll
rcrb
xor
pop
cmp
nop
add
dec
pushf
cmpsl
pop
mov
sub
mov
icebp
push
imul
in
shlb
xor
dec
sti
fwait
stos
xchg
lock
loopne
hlt
popa
mov
jae
sarb
pop
cmpsb
add
inc
mov
gs
jg
add
sbb
fidivrs
in
bound
adc
test
jg
movsb
inc
loopne
mov
mov
ljmp
into
in
cmp
jo
pusha
cmp
stos
dec
dec
in
xor
ret
stc
ljmp
sbb
mov
cmpl
nop
pop
cwtl
mov
pop
mov
decl
jl
and
add
fs
cwtl
xor
fbstp
cmc
jbe
lds
idivb
mov
pusha
pushf
jne
push
out
jmp
xor
popf
xor
xchg
rolb
dec
or
add
into
fbld
mov
fwait
popa
pop
outsl
daa
cmpsb
cmp
cmp
add
xchg
sti
ret
les
fs
inc
inc
inc
popa
adc
or
mov
fwait
insb
popf
fdivrs
pushf
cltd
xor
je
in
sbb
mov
add
inc
xchg
cmpb
rorb
add
ret
mov
in
add
cmp
sub
pop
cmp
xor
subl
jb
push
adc
test
aad
adc
jnp
cs
xor
or
lods
and
mov
data16
aam
add
mov
ja
pop
mov
bound
test
dec
and
mulb
cmpsl
jle
cmp
push
push
sbb
and
sbb
icebp
add
xchg
inc
pop
pushf
ljmp
or
push
cmp
or
stos
inc
loop
add
ljmp
xchg
test
enter
pop
enter
pop
push
xchg
jp
pop
pop
or
mov
xchg
jns
mov
ret
les
pushf
shll
xchg
lahf
sti
lods
pop
fnstenv
sub
frstor
or
js
xchg
into
xchg
adc
gs
mov
xor
inc
xchg
scas
jae
mov
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
mov
pop
andb
adc
pop
cmpsb
enter
popf
movsl
and
test
imul
inc
mov
xchg
lahf
mov
add
leave
out
jp
aas
jg
cmp
jo
movsb
nop
sbb
mov
hlt
mov
les
sahf
addr16
jae
add
cmpsl
jle,pn
inc
jle
outsl
mov
icebp
inc
cwtl
fcompl
mov
sbb
pop
push
sbb
inc
movsl
cmp
xchg
test
push
out
xchg
aas
dec
sbb
sbb
jbe
cld
mov
mov
dec
mov
mov
xor
sbb
sbb
xor
pop
sub
sbb
xor
bound
andb
ss
ss
cmp
jmp
sub
xor
dec
dec
hlt
loop
or
divb
mov
shrl
data16
cltd
stc
test
or
sbb
add
inc
repnz
lock
jno
inc
pop
sub
cmpsl
push
add
outsb
or
jae
xchg
fmul
sbb
pop
jg
int
push
in
push
mov
or
push
push
push
iret
fsts
cld
and
xor
lcall
lock
xlat
and
mov
sub
data16
mov
shrl
pop
sub
orb
data16
xor
inc
pop
sub
dec
shlb
adc
cltd
loope
loope
clc
shll
jecxz
mulb
lret
mov
sub
or
adc
shll
gs
push
test
sahf
jl
stc
incb
loop
mov
loope
mov
icebp
mov
jo
cli
or
gs
or
push
outsl
addl
jnp
jecxz
gs
sub
inc
cmp
and
xchg
addr16
cld
sbb
or
in
scas
fistpll
xor
jmp
enter
aad
aaa
aam
push
push
cmpsl
imul
mov
out
cld
sbb
xchg
mov
and
push
xlat
decb
insl
inc
loop
dec
lods
jo
scas
mov
dec
in
sbb
sahf
mov
addl
repz
lahf
hlt
stos
lock
sbb
sub
popf
xlat
adc
xchg
push
outsb
jbe
shlb
jno
cmp
lret
in
push
repz
xchg
rcrb
out
rcrl
cmpsl
xchg
dec
fsubr
xchg
bound
lock
repz
ss
sub
pop
mov
nop
mov
jecxz
adc
xchg
or
add
or
dec
mov
jecxz
push
bound
sbb
adc
les
pop
pop
jns
je
lods
clc
cmp
outsb
out
cwtl
popf
push
or
mov
jne
xchg
sbb
rorb
outsb
divl
fsts
mov
push
leave
adc
pop
sbb
mov
cmp
dec
and
inc
lret
cld
sbb
fwait
lea
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
iret
nop
dec
mov
jp
adc
call
imul
outsb
adc
add
enter
adc
xchg
jl
jp
push
cmpsl
sarb
incl
shlb
pop
sub
leave
and
call
imul
push
out
out
dec
cmp
hlt
lock
push
push
decb
lret
pushf
or
adc
dec
push
inc
scas
cmp
push
xchg
pcmpgtd
scas
adc
xchg
lds
mov
jbe
push
cmpsb
outsl
nop
outsl
push
jno
pop
icebp
push
mov
nop
add
cmp
jecxz
sbb
jnp
stos
pop
insb
mov
sbb
in
mov
xchg
cmp
data16
adc
lea
dec
mov
js
scas
icebp
fsubr
and
loope
loopne
or
dec
lods
mov
bound
aas
pop
cs
or
xor
rcrl
cmc
notb
ss
jg
jmp
cmp
xor
aad
sub
mov
out
add
out
scas
cmp
mov
fwait
and
xchg
inc
dec
cs
dec
add
or
sbb
push
leave
push
mov
ret
or
jb
xchg
daa
stc
add
nop
mov
sub
pop
rcrb
xlat
rcrb
ret
xchg
jp
iret
leave
in
mov
lds
jo
cmpb
xchg
push
pmulhw
dec
mov
loope
pusha
inc
dec
dec
push
and
rcrl
fnstenv
movl
test
jae
sub
orb
sub
flds
add
test
stc
lds
inc
adc
fdivs
mov
inc
or
dec
mov
sub
int
push
js
stc
dec
mov
xchg
cwtl
pop
jle
pushf
sub
sub
inc
mov
jecxz
inc
dec
jbe
pop
mov
inc
adc
subl
ja
aad
mov
mov
insl
xchg
call
int3
jle
mov
cmp
push
or
xchg
test
xchg
loop
sbb
mov
ss
xchg
inc
stos
mov
mov
cwtl
inc
pop
in
shrl
mov
ja
push
add
cld
sub
adcl
fcoml
hlt
ret
es
fidivl
and
out
sarl
jbe
ljmp
mov
xor
ficompl
adc
push
jmp
ret
pop
ret
or
aas
ret
das
add
divb
mov
out
aad
aad
inc
push
sbb
repnz
mov
sbb
push
or
les
xchg
idivl
mov
stos
insl
push
sub
insl
lahf
jge
jno
mov
popa
and
add
shr
inc
mov
fsubrl
push
adc
fcmovnbe
push
daa
adc
std
mov
cmp
jp
repnz
loopne
xor
pop
inc
or
mov
push
std
inc
ljmp
push
push
int3
push
pop
push
les
inc
cld
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
movsl
aaa
cmp
pop
adc
jp
adc
and
jle
arpl
testb
rorb
mov
or
fildll
mov
ret
addl
push
push
divl
push
lods
out
xchg
mulb
mov
xor
inc
scas
icebp
ja
adc
int3
into
push
add
jmp
push
cmp
mov
jecxz
dec
xchg
shl
js
or
mov
call
ret
aaa
inc
push
xchg
adc
and
mov
lcall
adc
xchg
out
out
in
adc
daa
or
lret
ret
sahf
mov
push
andb
pop
cld
out
fucomi
dec
aas
orl
jmp
jle
add
sub
sub
dec
sbb
das
mov
push
popf
push
subb
or
fsubrp
sbb
sbb
int3
push
cmp
shll
in
push
xchg
test
fadd
sub
sti
mov
lret
mov
ljmp
xchg
insl
aas
xor
dec
xchg
pushw
mov
cs
ret
xor
mov
rorl
jno
inc
cmpb
jae
dec
xchg
add
inc
test
push
pop
shl
enter
int3
cmp
mov
outsl
mov
xor
adc
xor
mov
movsb
jno
mov
addl
xor
jns
shrb
xchg
rcrb
setne
lds
inc
in
arpl
xchg
mov
repnz
sub
outsb
pop
xchg
mov
lret
leave
and
les
insl
pop
inc
xor
sbb
adc
add
add
cmp
fcmovb
mov
sub
and
pop
jbe
rcl
icebp
pop
add
sbb
xlat
pavgw
fwait
sub
push
dec
fwait
mov
aaa
add
fldt
sbb
jmp
test
jno
mov
xor
lea
add
push
std
fwait
outsl
call
mov
mov
outsb
push
push
pop
and
sub
pop
adc
ffreep
out
push
or
sbb
add
or
stc
mov
and
mov
cmpsl
rcrl
fidivl
jge
scas
cmp
inc
sbb
xchg
ljmp
imul
pop
lret
or
je
imul
outsl
jno
loope
jg
lods
mov
movl
add
add
aam
adc
in
lahf
mov
pop
jnp
int3
fcoml
aam
or
inc
jecxz
ret
mov
dec
arpl
mov
cmp
mov
xorl
fcmove
loope
rorl
inc
jae
mov
push
adc
xlat
nop
sbb
add
cltd
into
idiv
mov
scas
cwtl
in
dec
stos
scas
loop
sbb
jge
shrl
fadd
jge
les
int3
dec
ds
cmpb
repz
lahf
out
in
xchg
pop
lods
arpl
sub
jo
mov
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
movsb
js
push
adc
jp
adc
adcl
jnp
das
stos
jmp
bound
hlt
push
cmp
mov
jb
and
call
es
fildl
and
insb
push
adc
subb
fnstenv
gs
xlat
out
mov
daa
fsubs
mulb
dec
jl
fadds
icebp
mov
add
xchg
inc
outsl
pop
fisttpll
and
mov
mov
aaa
rol
mov
inc
or
inc
cmp
mov
dec
clc
pushf
ds
fbld
pop
pop
fstpt
jbe
sbb
ror
sbb
adc
lods
or
jne
lods
lock
or
sub
aad
mov
mov
pop
movsb
testb
test
lret
cmp
pop
push
rcrb
loope
cmp
add
int
push
mov
push
jl
inc
or
mov
inc
ficomps
movq
mov
xchg
pop
pop
pop
or
std
das
sbb
or
or
cs
mov
and
aaa
leave
clc
stos
cltd
push
sarb
and
inc
lahf
pop
leave
lahf
inc
mov
dec
xor
fs
mov
push
pop
loope
jne
lcall
sbb
mov
fs
push
xor
int3
aam
insl
rolb
jae
rcl
or
lods
xchg
movsb
xchg
popf
mov
push
aam
sbb
xchg
dec
mov
test
imul
inc
loop
nop
out
pop
cli
loopne
xor
lds
xchg
inc
add
or
inc
cwtl
jg
frstor
ds
sbbb
scas
push
lds
popa
pusha
notb
fiadds
mov
sub
adc
push
mov
and
mov
jno
loopne
pop
ja
jne
dec
pop
mov
jbe
push
inc
movsl
push
sub
inc
xchg
sub
insb
or
cmpsl
jg
and
imul
push
mov
cmp
int3
lret
adc
ja
call
adc
cmp
pop
jmp
adc
cli
out
fsub
mov
push
jmp
cmpsl
call
sahf
mov
adc
and
xchg
fsts
mov
inc
ss
sbb
rclb
jecxz
into
jecxz
sbb
dec
mov
xchg
pop
in
xchg
and
in
and
jp
xor
mov
aaa
pop
mov
xlat
call
cltd
fildl
or
pushf
push
mov
pop
jbe
push
adc
add
imul
push
fisubs
test
mov
push
loopne
cmp
pop
push
pop
fbld
sbb
ret
push
cli
aam
pop
inc
mov
ljmp
add
ret
inc
js
ficompl
pop
fsubr
add
aam
and
add
sub
mov
lahf
out
aam
dec
and
orl
lods
cmp
dec
xor
sub
jge
stos
out
call
pop
dec
icebp
jmp
adc
fsubr
das
in
inc
pop
jle
mov
mov
mov
lret
insb
enter
fstl
push
inc
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
in
stos
outsb
inc
adc
lea
adc
sbb
leave
lods
xor
pop
add
roll
rorl
cmc
adc
lret
jp
call
jb
cmp
aam
insb
cltd
and
test
je
imul
movsb
inc
int3
xor
aad
adc
sbb
cmp
test
and
ja
push
add
mov
pop
fdivl
in
jnp
xchg
jnp
push
outsb
adc
sbb
lea
dec
lcall
outsl
imul
sbb
ret
cld
pop
popa
xchg
test
cmp
jno
dec
sbb
insb
push
mov
pop
shll
iret
push
mov
cmp
mov
loop
or
inc
jg
shrb
sub
frstor
call
pushf
mov
std
fwait
mov
pop
test
cmpsb
test
jl
add
outsl
mov
xchg
mov
dec
pcmpgtw
js
sbb
in
fstpt
xchg
daa
and
xor
or
int3
pop
or
xchg
in
fs
mov
lcall
cli
jne
lods
dec
les
mov
and
aas
test
dec
mov
mov
test
add
pop
pop
orl
jmp
fdivl
sti
sub
inc
fwait
rorb
ret
fnstsw
adcl
xor
push
adc
call
cli
cld
ljmp
xchg
pop
sub
stos
xchg
cmpsb
nop
subb
idiv
push
dec
outsb
mov
pop
add
xor
cmp
insb
inc
mov
ljmp
mov
test
push
mov
out
jns
and
out
enter
lret
xor
pop
lahf
rolb
push
roll
popf
push
ja
fwait
xor
dec
movsb
mov
popa
rorl
pop
adc
or
cmp
and
mov
daa
xchg
jle
shrl
iret
pop
lods
test
repnz
mov
mov
inc
into
jge
xor
in
arpl
sarb
sbb
movsl
sub
mov
dec
insl
mov
repz
mov
sub
fimuls
xchg
adc
sub
repz
xchg
fs
call
call
mov
addr16
mov
xor
aaa
imul
cmc
pop
test
repz
mov
or
inc
dec
sarl
mov
push
out
sahf
les
shlb
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
push
popa
lahf
mulb
addr16
jbe
bound
repnz
insl
and
mov
xor
nop
shrb
sbb
jbe
push
or
lahf
pop
clc
shl
insb
pop
rcll
jp
adc
pop
sbb
cmp
xchg
idivl
imul
ud0
push
sub
adc
or
test
mov
xor
sub
xchg
fwait
push
int
aaa
aas
mov
dec
mov
fs
andb
pop
push
pop
cmp
stos
jle
pop
test
mov
push
pop
ret
and
scas
inc
cmpsb
in
or
xchg
mov
sbb
inc
pop
xchg
pop
fisubs
pop
in
cld
sub
cmp
mov
test
imul
pop
fiaddl
sbb
pusha
adc
sbb
sub
insl
pop
in
push
iret
addr16
into
pop
adc
xchg
inc
scas
xor
ret
into
jno
mov
jb
repz
sahf
fisttps
sysexit
je
popa
mov
dec
movsb
addr16
push
cmpsb
cmp
outsl
mov
repz
dec
mov
cmp
fdivs
inc
repnz
scas
cs
lcall
adc
jecxz
ret
enter
fisubs
outsb
addl
jno
aas
sti
xorb
push
push
bound
fistpl
addr16
in
popl
mov
les
lea
mov
call
cmp
arpl
outsb
pop
fimuls
into
fwait
push
xchg
cmpsb
mov
stc
fdivrs
hlt
push
out
sbb
pop
test
test
cltd
pop
icebp
rcr
inc
or
pop
pusha
mov
scas
adc
lret
pop
mov
mov
imul
xlat
pop
or
repnz
cmpsb
ss
call
inc
fldcw
sbb
pop
add
jle
out
and
xor
mov
fcompl
xorb
pop
cwtl
xor
fs
mov
add
sub
sbbl
out
or
out
fs
pushf
dec
xchg
movsb
cmpsl
push
lods
dec
out
cmc
jbe
fsubr
mov
mov
mov
mov
and
adc
subl
lret
cli
xor
cmp
test
mov
mov
mov
ds
push
icebp
mov
or
out
or
add
dec
jge
mov
jg
jmp
adc
adc
or
xor
adc
nop
add
mov
in
movsb
inc
dec
fidivs
faddl
xor
lcall
scas
cmpsl
jmp
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
fcmovu
out
loope
fists
in
cmp
test
jns
add
add
call
xor
xor
sahf
add
pop
out
mov
inc
out
testb
xchg
ret
sub
adc
aas
sub
xchg
loop
cli
and
pop
nop
cmpsl
in
data16
jmp
inc
mov
repz
imul
inc
mov
dec
add
mov
je
mov
ret
jne
mov
nop
ret
js
out
subb
es
fsubr
push
inc
or
xchg
ja
dec
mov
mov
mov
jmp
mov
push
jl
scas
iret
pusha
fwait
jo
add
xchg
mulb
gs
and
hlt
inc
mov
push
dec
out
cs
xor
cld
stos
cmp
jge
lds
adc
jge
outsb
ffreep
lret
push
test
add
pop
xchg
jp
pop
mov
mov
in
mov
je
jl
nop
movsb
pop
cmpsb
lds
fmull
les
aam
fwait
lods
stos
je
mov
cld
jno
js
mov
lcall
mov
dec
aas
inc
push
sub
push
lock
dec
sub
sbb
add
add
shll
jmp
add
and
xchg
jno
loopne
test
mov
enter
push
dec
adc
data16
xchg
push
jo
in
cmp
int3
insl
jne
cmp
push
outsl
leave
add
stc
or
shlb
mull
jb
lods
xor
leave
dec
ss
lret
and
inc
pop
jle
push
cmpsb
sbb
repz
push
xor
fildll
lcall
ja
pop
bsr
outsb
xchg
inc
dec
fnstsw
pusha
outsl
es
loop
stos
in
mov
xchg
dec
movsl
push
xchg
je
gs
daa
mov
sbb
mov
sub
adc
insb
lock
cli
jge
cmc
dec
add
hlt
arpl
jmp
nop
cmc
and
xchg
inc
pushf
or
xor
push
lods
pop
mov
mov
loop
cmpsl
iret
in
push
sti
imul
jge
push
daa
cmp
jbe
jbe
nop
fimuls
push
sub
mov
or
sbb
add
dec
je
sub
aaa
mov
or
mov
inc
sub
push
ffree
mov
icebp
dec
pop
sbb
shl
jns
int3
jl
cli
inc
lea
repz
movsb
mov
xor
adc
inc
mov
or
xchg
stos
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
pop
sbb
lret
aaa
adc
lea
adc
dec
push
movsl
loopne
fistpll
adc
rclb
xchg
pusha
movsl
test
jo
inc
sbbb
cs
cmp
jb
lret
jns
mov
xor
or
xchg
push
mov
xor
add
jmp
jne
outsl
mov
bound
aam
hlt
adc
sbb
mov
fcmovnb
push
xor
hlt
out
pushf
mov
xor
jbe
cmp
test
adc
ja
mov
add
jno
pop
lock
movsl
shlb
cli
in
sub
pop
stos
and
xor
ds
mov
int3
xchg
je
pusha
adc
pop
pusha
or
jmp
mov
mov
shlb
push
fldt
cli
lret
enter
rcr
pop
ret
adc
mov
push
in
add
clc
mov
pop
fcoml
push
mov
nop
lcall
dec
add
addr16
dec
jns
add
push
int3
divl
push
pusha
out
jbe
jp
scas
pop
or
std
add
aaa
outsb
divb
lahf
test
rorl
xchg
mov
cmpsl
pop
pop
mov
ret
dec
idiv
inc
xchg
mov
das
add
sub
out
pop
rorl
and
dec
sub
pop
sub
les
into
imul
sti
jmp
dec
cmp
mov
rclb
roll
dec
cmp
jne
shrb
jge
shll
mov
add
clc
mov
cmp
mov
fimuls
mov
or
ficoms
cltd
cmp
lahf
cmc
idivb
dec
les
popl
xchg
mov
loopne
mov
push
stc
xchg
add
sub
incl
in
dec
cwtl
sti
in
pop
or
dec
or
push
cmp
push
pop
inc
outsb
push
out
ror
in
stos
setge
nop
push
bound
jae
pop
insb
imul
jb
adc
sub
int
int3
mov
sahf
out
mov
stos
xchg
insb
pop
fbstp
push
fnstenv
pop
pop
ret
push
push
jae
and
js
popa
mov
cmp
and
ret
jmp
mov
push
cli
adc
pop
sbb
adc
in
cmp
or
scas
xchg
or
dec
mov
adc
add
pusha
lods
les
jbe
mov
add
icebp
xor
test
dec
inc
cmp
xor
and
sbb
xchg
and
cmp
outsb
jnp
das
dec
jns
mov
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
xchg
adc
push
xchg
xor
popf
mov
call
dec
aas
cmp
add
sub
xchg
push
xor
int3
jnp
cmp
mov
xor
mov
mov
xor
cmp
mov
xchg
arpl
sub
es
sub
out
xor
pop
or
inc
int3
leave
xor
test
or
xor
mov
gs
rcr
pop
int
loope
pop
xor
clc
das
fidivl
sbb
int
mov
pop
lcall
lret
sbb
bound
adc
mov
push
sbb
mov
xchg
test
pop
pop
xchg
mov
add
push
je
test
loop
and
mov
aam
push
adc
sub
into
stos
push
add
push
xchg
insl
and
mov
xor
jecxz
sub
inc
or
or
xchg
jo
lret
shrb
sbbb
sbb
loop
hlt
int3
aas
mov
je
jae
mov
jne
out
icebp
ljmp
arpl
stos
ss
test
mov
mov
and
sarl
sub
aam
jg
mov
mov
pop
pop
pusha
push
push
popa
shrl
mov
push
aaa
mov
lds
mov
xor
mov
pusha
mov
movsb
mov
mov
mov
scas
repz
jb
mov
test
and
mov
cwtl
addb
xchg
sbb
mov
stos
push
add
mov
pop
jge
lret
mov
in
shll
mov
lahf
mov
add
out
push
xor
testb
xchg
imul
jns
xchg
movsl
sub
rol
fstl
cmp
jmp
stos
mov
repnz
cmp
xchg
pop
aas
dec
mov
lahf
iret
fs
lock
lcall
jle
sub
adc
enter
outsb
jecxz
int3
lret
fistl
sarb
lcall
xor
in
roll
divl
xrelease
cmpsl
leave
jg
js
stos
mov
sub
jae
push
outsl
mov
mov
mov
pop
sbb
outsb
pop
gs
enter
lods
inc
sbb
push
ss
pushf
pop
sbb
sbb
sbb
lock
fld
outsl
outsl
or
fisubrs
or
push
cwtl
inc
or
mov
mov
outsb
mov
mov
mov
xchg
jo
stc
lods
js
push
adc
std
sti
clc
sarb
sbb
sbb
popa
je
ja
mov
or
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
fildll
adc
sub
xor
out
jno
rol
lret
sub
out
pop
dec
cld
ljmp
jno
mov
call
pop
add
xchg
leave
rclb
mov
pop
push
lds
pop
pop
imul
jge
stc
add
loop
es
decl
ja,pt
dec
loop
xchg
mov
pop
cmp
jo
lret
imul
lcall
repz
fbld
lea
mov
inc
rcrl
push
test
loop
jecxz
add
mov
jp
fisubl
in
inc
repnz
in
mov
cmpl
in
frstor
jecxz
or
cmpsb
jl
not
bound
jl
fs
imul
mull
push
dec
push
in
mov
aam
sti
push
repz
popa
in
das
xchg
cli
jecxz
or
xlat
jl
mov
mov
fldcw
adc
leave
mov
cwtl
lahf
repnz
add
jmp
and
mov
dec
test
xchg
cmp
out
pop
js
lds
insb
sbb
push
add
stos
jne
mov
xor
pop
pop
in
movsb
sbb
jmp
scas
push
push
mov
mov
in
sub
rorb
xchg
mov
push
loop
xchg
adc
or
aad
jns
ret
xchg
sub
mov
cli
dec
cmpsb
jle
mov
adc
sub
mov
sub
bound
icebp
das
dec
mov
pop
jle
ret
jge
fwait
jle
stc
push
es
adc
test
sub
loop
mov
jp
rorl
shrb
out
and
pop
lods
aam
pop
xchg
pop
push
xchg
popl
add
ret
sti
xor
iret
sahf
call
cmpsl
adc
lcall
or
ret
push
dec
sbb
int
jno
jmp
jo
inc
mov
jge
or
pop
pop
xlat
push
enter
pop
mov
leave
aas
adc
pop
pop
or
dec
adc
out
loope
xchg
xchg
cmp
and
lret
mov
lea
sbb
movsb
jo
rolb
and
dec
sbb
adc
push
repz
push
mov
dec
pop
pop
je
call
mov
sbb
or
movsb
mov
aam
xchg
xor
or
iret
test
cmp
ret
sub
sub
push
das
hlt
cli
shrl
dec
pushf
js
cs
mov
xor
pop
out
repz
mov
xor
xor
or
push
add
jmp
and
lods
and
js
mov
adc
lea
adc
out
inc
ljmp
cmp
int3
test
cmp
gs
data16
push
jmp
cltd
mov
pushf
into
into
les
jno
nop
sbb
jbe
push
mov
pop
xchg
mov
cmc
outsl
xor
mov
inc
cmc
push
andb
cli
push
mov
push
xchg
out
sbb
ret
iret
subb
adc
sti
xor
xlat
push
cmp
in
xor
stc
lea
int
xorb
xchg
bound
and
aad
sarl
or
call
testb
inc
xchg
sbb
fadd
dec
test
loopne
out
in
xorl
roll
pop
lock
mov
mov
and
add
out
xor
in
es
lock
cs
and
mov
rclb
aam
arpl
inc
xchg
in
sti
pusha
addl
repz
adc
inc
adc
dec
xor
dec
jbe
ljmp
push
pushf
inc
pop
dec
rol
adcb
cli
jne
movl
or
xchg
mov
cli
les
popf
fdivrl
mov
pop
pop
out
xor
fisttps
lea
sbb
mov
pop
push
test
dec
mov
sub
ret
leave
das
xchg
loope
imul
push
cli
jb
and
ret
loop
cli
jmp
lods
sbbb
incb
jbe
push
xor
testl
inc
mov
or
sbb
jecxz
aad
test
scas
int
cmp
in
icebp
addr16
mov
pop
shll
mov
aaa
mov
and
xor
icebp
pushf
pop
pop
enter
mov
hlt
pop
pushf
aad
pop
and
sub
pop
shll
les
sub
pop
dec
or
mov
inc
cmp
inc
xchg
cmp
sbb
mov
out
inc
sub
adc
cmp
xor
fiadds
xor
mov
pop
xorl
adc
mov
fwait
push
lahf
ljmp
dec
into
js
pushw
jg
repz
push
scas
inc
jnp
popa
loope
rclb
pushf
inc
pop
pop
sub
orb
xorb
popf
out
and
push
jle
insl
xchg
addr16
and
jnp
mov
dec
push
add
cmc
and
subb
jb
and
push
pop
imull
jnp
cmp
les
mov
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
fcomp
push
xor
movsb
sbb
jmp
pop
push
pop
fcomps
inc
jae
fists
and
in
adc
inc
or
jecxz
push
ja
mov
icebp
sub
inc
jle
dec
pusha
or
push
mov
pop
adc
stos
movsb
stc
add
popa
dec
sbb
mov
ja
jo
dec
mov
dec
inc
xchg
stos
testb
dec
std
sti
orb
push
xor
imul
sub
cmpsb
repz
js
lahf
insb
adc
cs
dec
sbb
test
iret
arpl
fwait
int3
xchg
loopne
cmpsb
out
dec
cmc
inc
out
push
push
pop
lods
or
es
ret
xor
mov
pop
pop
fs
gs
ds
or
cmc
nop
or
mov
push
sbb
push
aas
and
add
mov
jp
dec
inc
loope
out
aaa
xchg
movsb
pop
pop
sbb
fwait
ficomps
popf
cmpsb
push
in
sbb
inc
jecxz
dec
sub
arpl
sahf
pop
push
adc
xchg
or
sub
addr16
orl
call
adc
addb
jl
jp
call
xor
aad
test
sub
sub
cmp
pop
enter
setbe
scas
pop
lcall
int
jnp
inc
add
lods
inc
loopne
ljmp
mov
mov
lea
jbe
aas
cs
mov
and
test
sbbl
loopne
ss
sbb
repz
addr16
sbb
cmp
jp
pop
mov
es
aas
popf
mov
cmp
push
lods
cmp
mov
mov
ljmp
dec
xchg
pop
ret
repz
mov
test
testl
out
dec
xchg
data16
aam
cmp
stos
fsubl
cmp
mov
mov
or
sub
xlat
xchg
add
ss
jne
push
push
push
and
cmc
pop
in
ss
in
addr16
insl
je
std
adc
jns
shrl
xchg
call
sub
sbb
xchg
movsb
mov
test
addl
jmp
jle
orps
jnp
hlt
xor
test
shlb
aam
sarb
jg
adc
out
or
dec
xchg
cmp
das
movsl
jmp
or
push
sbb
xchg
popf
dec
push
inc
sub
fadd
std
stc
orl
ja
jp
ja
pop
lds
and
pop
bound
insl
cld
cmp
jmp
sbb
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
test
push
sbb
adc
add
push
add
addr16
es
je
mov
test
or
mov
xor
push
xor
sbbb
jg
rcr
pusha
add
enter
scas
xchg
jp
pop
xchg
aad
pushf
dec
mov
xchg
xchg
cld
outsb
movsb
mov
mov
push
xor
neg
addr16
out
in
loopne
loope
adc
int
icebp
int
sub
data16
ret
push
push
mov
xchg
out
mov
lods
popl
lret
add
shlb
jecxz
mov
leave
lods
movsb
sub
in
dec
add
inc
lret
imull
imul
lcall
push
not
aas
pop
ja
clc
add
and
icebp
xchg
dec
cltd
je
push
sbb
add
test
pop
icebp
icebp
mov
iret
mov
insl
xchg
pop
pop
pushf
loop
fbld
aad
fwait
xor
sbb
cmc
out
dec
sub
sub
pop
xor
mov
lds
cmc
sub
or
xchg
ss
push
xchg
cmpl
aad
js
xor
inc
mov
cs
dec
imul
adc
test
out
aam
jg
jb
sbb
lds
mov
mov
add
mov
dec
aad
shl
pop
adc
jge
or
sbb
test
cmpb
in
inc
inc
js
testl
or
xchg
jbe
orl
cmp
mov
ss
xchg
int3
repnz
lea
cld
stos
inc
stos
sub
in
data16
popf
sub
insl
mov
add
in
adc
lock
bound
int
cld
or
sbb
scas
jnp
add
outsb
ljmp
push
jno
movsl
push
mov
fnstcw
pop
cld
cli
test
mov
sti
cmp
subl
xorl
cli
cmc
pop
push
stc
xchg
ret
jnp
push
mov
pop
push
xchg
jne
andb
mov
xor
aam
jge
pop
test
mov
push
jo
clc
daa
movsl
xor
stos
xor
jp
mov
bound
cwtl
xchg
jae
push
aam
cmpsl
pop
jae
cmpps
xlat
sbb
xchg
fs
mov
sbb
ljmp
or
mov
jo
jle
call
push
inc
loopne
adc
roll
mov
mov
xchg
fucom
xor
loope
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
pushf
mov
adc
mov
xor
pop
sub
jnp
pop
push
scas
xchg
push
or
addr16
mov
popa
xor
mov
jp
push
pop
frndint
fnstenv
ret
mov
xor
mov
sub
fsubl
lret
mov
incb
pop
push
add
sahf
rcrb
xorb
push
xor
xor
or
push
fcompl
jne
jge
shll
bnd
div
and
inc
and
dec
les
xor
cmp
jl
adc
data16
dec
fwait
insl
cmp
repnz
push
add
and
or
mov
jmp
push
cmpsl
sub
test
aad
mov
and
dec
clc
xor
dec
in
jns
stos
xchg
pop
pop
jge
adc
mov
pop
mov
test
xchg
push
out
idiv
push
inc
mov
jge
andb
pop
adcb
dec
mov
mov
add
fildll
shll
xchg
xor
aaa
xchg
dec
jmp
dec
out
jb
divl
aam
nop
int
mov
outsl
sbb
subl
cmp
insl
xor
mov
lds
pop
xorl
xchg
adc
in
jmp
in
pop
pusha
scas
scas
jg
notb
mov
push
push
cmp
cmp
mov
je
ficoms
mov
in
mov
pop
mov
mov
push
loopne
mov
xor
cmp
mov
xor
sub
inc
pop
sbb
mov
cmp
push
push
or
and
mov
imul
decl
cld
imul
mov
mov
sahf
clc
mov
das
ds
pop
push
icebp
iret
call
aas
inc
sub
outsl
fdivrl
mov
sbb
and
cmp
xor
call
sti
and
mulb
call
adcb
pop
adcb
testl
nop
je
pop
xor
pop
ss
outsb
cmp
fs
les
pop
aad
jns
cmpsb
popa
insl
sub
jne
and
sbb
idivb
pusha
jge
clc
out
psubusw
xchg
adc
xchg
or
fstl
jnp
fs
sbb
ds
lea
adc
xlat
sub
aaa
pop
inc
push
adc
adc
mov
xchg
and
cmp
sub
sub
loopne
cli
fcmovnu
rcll
popa
jno
cmp
jns
stos
or
dec
cli
inc
popf
and
lock
dec
test
xchg
fadd
in
daa
mov
sub
mov
outsl
sbb
push
sbb
imul
push
push
cmpsl
xlat
push
push
cmp
sbb
call
pop
cmp
jb
sbb
or
inc
mov
jae
mov
dec
scas
mov
pop
fstpt
mov
lods
sbbb
lds
in
test
lcall
mov
adc
aas
cwtl
test
xor
fcoms
jns
xchg
cmpsl
add
cli
popf
xchg
arpl
jl
push
mov
sarb
sbbl
test
fmuls
lret
ss
ss
jle
cmp
fiadds
ss
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
mov
aaa
unpckhps
mov
cld
push
pop
mov
lds
and
sbb
mov
rcl
les
xchg
and
aas
mov
and
inc
es
adc
push
add
iret
pop
iret
pop
lods
dec
insb
jp
xorb
lds
aad
dec
push
push
xchg
lret
inc
movsl
fs
adc
repnz
xchg
cmp
mov
mov
jnp
pop
and
out
ficoms
jg
xchg
pop
push
push
mov
std
popf
mov
xchg
xor
cld
rcl
fcmovnu
push
and
sarb
imul
adc
jbe
out
jecxz
icebp
hlt
add
imul
add
fisttpl
sbb
inc
ljmp
call
lahf
div
aad
push
mov
jle
dec
mov
insb
push
jnp
add
pop
arpl
in
adcb
or
mov
push
imul
xor
xchg
shlb
repz
ds
std
sub
mov
iret
inc
gs
cmp
and
rclb
sbb
cmp
or
mull
scas
xchg
fstps
xchg
pop
rorl
aas
ja
fstpl
or
or
insb
cmpsb
cmp
push
mov
push
jp
inc
cmp
xchg
enter
sbb
xor
xor
sbb
jnp
mov
aas
inc
cmpsl
push
rorb
arpl
jne
lcall
jp
xchg
in
data16
repz
scas
roll
or
mov
in
popf
and
subb
das
mov
lock
mov
ficoml
mov
lea
lret
and
andl
std
lock
or
xlat
or
mov
loopne
aas
pop
inc
and
pushf
out
movsl
lcall
dec
testl
add
lcall
xor
lret
je
jae
add
rorb
xor
inc
adc
xchg
test
jbe
outsb
arpl
mov
mov
inc
push
js
out
pop
mov
ja
stc
sti
pop
test
mov
jo
insl
adc
loopne
movb
out
push
pop
out
xor
push
xchg
mov
mov
mov
mov
mov
push
lahf
add
jecxz
push
ja
or
push
add
inc
imul
in
loopne
sbb
leave
jns
dec
push
leave
and
fnstenv
sbb
inc
cli
add
loope
lock
mov
jecxz
negb
daa
shl
add
sbb
push
shrl
or
or
shr
data16
mov
cmp
jle
or
leave
mov
loop
add
mov
daa
fnstenv
lea
add
movsl
test
xor
adc
fs
or
sub
sahf
testb
jmp
hlt
push
mov
fsub
cld
repz
jg
movsb
jbe
rolb
bound
or
cltd
lds
shlb
in
or
xor
sar
ror
xchg
mov
insb
lods
mov
mov
cmpsb
pop
fs
dec
xchg
push
inc
xchg
pop
push
xor
fdivrl
stc
les
por
push
add
mov
std
jnp
and
push
dec
test
daa
xchg
push
xor
jb
add
mov
out
or
data16
sub
sub
cmp
ljmp
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
les
ret
mov
mov
stc
inc
pop
addr16
jl
shl
pop
je
cmc
or
enter
outsl
and
arpl
mov
je
dec
xchg
loop
xchg
and
call
cltd
lcall
popf
dec
inc
inc
and
dec
mov
das
inc
adc
sbb
pop
lods
pop
or
dec
sub
push
in
mov
add
and
out
mov
les
test
rolb
mov
push
or
in
or
jl
mov
dec
add
sub
mov
or
jno
dec
pop
out
sbb
mov
das
or
mov
xor
jmp
or
fwait
xchg
dec
lods
scas
pop
sbb
and
lds
fistps
in
sbb
mov
adc
fdivs
fidivrl
mov
push
mov
stos
jne
shrb
lock
cmpsl
mov
push
cld
fs
cli
cld
mov
push
nop
jge
ret
les
lds
adc
xor
adc
movsb
femms
fildl
xor
movsl
nop
mov
xchg
adc
in
cltd
out
pop
test
sbb
clc
pop
fildll
xchg
pop
inc
mov
test
shrl
mov
outsl
andl
sub
leave
sbb
shr
sub
pop
cs
add
shrb
mov
push
sahf
out
xorl
daa
imul
xchg
sbb
imul
mov
cwtl
lret
mov
cltd
nop
jne
mov
dec
mov
outsb
jae
mov
int3
enter
mov
dec
enter
inc
pushf
sbb
loope
adc
int
ret
xchg
add
daa
adc
out
xchg
mov
mov
pop
sbb
cmpsb
aam
xchg
insl
sub
dec
aad
inc
xchg
aad
fisttps
cli
dec
cwtl
jns
loopne
xor
push
dec
fxch
sbb
mov
outsb
xchg
inc
je
and
jge
mov
adc
imull
mov
fsubp
cmpb
pop
sbb
dec
pusha
test
mov
push
out
mov
lcall
sub
movsl
out
stc
xchg
movsl
test
aaa
xchg
fldcw
and
popa
and
cmp
aas
imul
jo
adc
dec
push
enter
jno
loopne
mov
add
into
push
mov
inc
pop
mov
jno
xor
or
mov
push
iret
xor
fcmovnb
ret
adc
int
xor
add
inc
inc
push
pop
xor
ficoml
jae
xor
xchg
idivb
js
push
sbb
pushl
fnstsw
and
clc
mov
lret
push
test
movsb
andb
inc
jge
sahf
mov
or
cmp
fdiv
xor
fcompl
ss
jns
movsb
sub
nop
or
fsubs
loop
mov
jo
mov
dec
xor
jmp
sbb
pop
int
adc
enter
outsb
repz
jbe
lcall
inc
xor
push
xchg
adc
aas
or
stos
test
xor
icebp
jmp
sub
aad
rolb
adc
lods
dec
lea
pop
inc
lods
cli
dec
imul
pushf
dec
into
dec
add
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
into
push
jmp
mov
adc
adc
call
int3
mov
enter
push
dec
push
push
mov
jne
orb
leave
mov
test
jne
or
imull
xchg
insl
sbb
xor
adc
nop
jo
inc
inc
hlt
add
jge
in
pushf
dec
aad
sahf
xchg
pop
xchg
test
cmp
dec
leave
mov
mov
pop
lods
bts
arpl
imul
outsl
ds
movsl
ja
rclb
mov
push
inc
ja
add
scas
push
or
dec
cmp
jmp
xor
inc
int
hlt
jo
xchg
mov
push
dec
addr16
cmp
inc
fwait
jne
fistpll
pop
xchg
leave
sub
xor
sbb
cmpsb
imul
stos
sbb
aam
lahf
jns
jae
cs
lret
xor
xchg
inc
subb
clc
pop
inc
xorl
in
inc
push
ret
pop
mov
pushf
or
jmp
pmuludq
mov
pop
cmp
es
dec
and
filds
ja
loop
hlt
cli
pop
imul
adc
movsl
imul
dec
loop
inc
mov
jno
ret
mov
pop
popa
imul
and
in
cmp
lret
lret
sbb
adc
xchg
push
daa
neg
xchg
xchg
dec
mov
push
and
and
push
or
pop
movsb
and
out
shlb
ret
loope
fcoml
xchg
mov
fs
cmc
cmp
inc
or
mov
xchg
ret
xchg
pop
decl
ror
repnz
and
jo
mov
pop
sbb
cmp
sahf
pop
stos
outsb
leave
hlt
xor
inc
sub
mov
mov
addb
scas
pusha
cltd
insl
imul
rcrl
xchg
ret
sub
sbbl
xchg
lcall
mov
inc
sti
aas
mov
andl
aas
mov
mov
mov
adc
ljmp
hlt
mov
stc
or
xchg
add
and
andb
mov
or
dec
mov
and
fs
jmp
rolb
mov
ret
add
pop
out
inc
mov
fnstsw
inc
outsb
shll
mov
and
or
mov
push
mov
mov
xor
jnp
push
fidivrs
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
bound
adc
xor
xor
jne
fsubrs
scas
imul
push
aam
cmp
and
mov
xchg
out
addb
out
lret
leave
xchg
pop
jae
jecxz
roll
sbb
lcall
xor
pop
and
jecxz
fmul
xor
into
fisttps
ret
rclb
movsb
in
les
test
ljmp
mov
xchg
pop
sarb
adc
add
cmp
iret
rcr
lahf
cli
aaa
mov
clc
dec
add
sbb
jns
xor
aaa
jno
iret
rorb
sbb
push
loope
and
scas
pop
jno
inc
mov
lods
dec
adc
pushf
icebp
in
push
mov
mov
pop
push
icebp
popa
dec
aaa
lods
fadds
mov
out
jnp
add
sub
lahf
adc
mov
or
jbe
ljmp
pop
test
rolb
imulb
pushf
push
inc
rorl
xchg
std
xor
pop
in
mov
lahf
xor
jb
repnz
pop
les
or
push
pop
daa
inc
mov
cmp
mov
leave
movsb
sub
mov
clc
sbb
or
adc
je
insl
add
int3
mov
push
test
lret
push
mov
icebp
dec
icebp
mov
pusha
and
adc
adc
popf
and
inc
iret
xchg
pop
lods
push
cmp
sub
cmp
insb
pavgb
mov
lods
push
push
pop
pop
cmpsl
bound
jb
nop
cltd
pop
out
jae
nop
sti
imul
xchg
push
inc
out
leave
push
xchg
orl
jg
hlt
or
imul
fiadds
mov
das
sbb
adc
cltd
shr
push
add
je
mov
aam
push
pop
mov
xchg
cmp
mov
rcr
imull
lea
incb
cmp
in
and
gs
or
les
leave
int3
leave
int3
pop
pop
movsb
mov
xchg
and
scas
shr
mov
stos
fsubl
aam
push
insl
mov
jmp
fs
imul
sbb
cmc
push
mov
inc
in
push
lahf
shlb
pop
mov
outsl
lods
gs
loope
std
jo
cmp
xor
jl
jnp
push
dec
cltd
sub
insb
pushf
cld
jge
sub
fwait
cmp
mov
mov
stos
jo
jg
daa
es
clc
push
dec
and
push
dec
adc
repnz
out
out
das
mov
push
cs
fbld
std
xchg
mov
outsb
add
or
add
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
lret
pop
lods
cmp
adc
stc
add
test
xchg
daa
js
xlat
inc
jmp
mov
inc
movsb
jno
repnz
xchg
insl
ss
xor
into
nop
lahf
cmp
cmc
nop
daa
addb
ljmp
filds
popf
mov
lods
imul
mov
ljmp
sub
repz
popa
adc
cmp
lods
daa
cmp
pop
cs
lahf
and
cltd
sbb
sub
add
add
inc
js
cmp
inc
fildll
scas
add
xor
add
pop
sbb
fwait
xchg
ds
pop
jle
dec
push
xor
cli
sub
ljmp
and
push
sarl
cmc
stos
cmp
xor
push
xchg
std
mov
out
cs
fcoml
and
into
mov
ficompl
mov
insb
mov
push
inc
imul
push
xor
push
call
mov
or
mov
fildl
aad
std
mov
fnstsw
mov
sbb
fistl
lret
or
xor
pushf
xorl
or
in
push
clc
test
mov
or
dec
inc
loopne
std
pop
out
ss
dec
mov
xchg
mov
int3
cld
adc
cmp
jle
popa
orl
and
xchg
sbbb
call
xor
mov
jmp
jo
jmp
sub
dec
in
mov
cmp
aaa
idivl
insl
sub
jbe
xchg
in
movsl
mov
push
xchg
adc
push
and
es
jl
divl
sahf
popf
mov
inc
pop
fwait
lret
pop
into
sub
je
sub
rolb
test
pop
xchg
call
jno
into
pop
push
leave
popf
test
popf
push
out
dec
xor
push
aam
push
fbld
dec
adc
in
jb
jbe
aam
and
in
pop
in
outsb
shlb
dec
cld
jmp
in
shrl
out
xor
push
aad
ljmp
dec
xchg
add
call
mov
xchg
bound
add
jb
xor
test
xchg
jmp
cld
add
inc
jae
repnz
out
insb
enter
push
test
outsl
lea
clc
mov
inc
mov
dec
fcompp
mov
lcall
xchg
jp
mov
inc
mov
ss
arpl
pushf
out
add
cmp
mov
lds
imul
jg
divb
pop
insl
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
adc
stos
push
out
adc
adc
mov
push
mov
fnstenv
popa
xchg
push
rclb
test
lahf
int
cmp
push
xor
rclb
push
sub
call
pop
orb
dec
push
movsl
sarl
jo
addr16
adc
or
nop
xchg
mov
sti
xor
push
mov
in
adc
out
xor
loope
add
xchg
int
pop
in
mov
or
push
jno
lds
pop
mov
nop
sub
or
or
movl
inc
adc
push
jmp
cli
lea
xor
mov
dec
xchg
lea
mov
std
mov
mov
lds
js
std
scas
jne
add
lods
mov
cli
gs
pop
addr16
jnp
sti
mov
scas
addr16
sub
sbb
inc
push
aad
lret
sahf
gs
in
movsb
pavgb
dec
imul
mov
fidivl
jae
inc
lahf
xchg
fbstp
pushf
cmpsb
or
add
cmc
jae
test
cmp
jmp
and
mov
fs
xchg
jns
sbb
or
fisttpll
outsb
addr16
cltd
les
imul
lret
adc
and
mov
add
adc
cmp
lds
fldcw
fbstp
loope
xlat
lods
movsl
pop
addr16
jns
sbb
and
outsl
es
fisubrs
imul
fcmove
aaa
iret
xchg
rcr
mov
dec
cmp
js
adc
cs
cmpsl
cmp
stos
and
call
out
push
call
scas
bound
sbb
and
repnz
ds
xor
loopne
out
push
cs
lods
push
push
fimull
ficoml
outsl
int3
aaa
scas
cmpsb
jb
in
jo
mov
mov
mov
jb
js
mov
test
mov
nop
jne
nop
lock
xchg
ret
pop
popa
mov
cmp
out
push
adc
imul
fmull
js
mov
nop
mov
or
ds
cmp
cmp
shlb
or
mov
jp
lock
scas
add
add
hlt
stos
push
popa
and
adc
and
jns
shlb
or
mov
fs
dec
jcxz
xor
pop
incb
lret
shlb
sub
or
cmc
aad
and
xorb
movsl
inc
in
call
clc
mov
lea
push
inc
dec
push
and
or
out
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
mov
lcall
movlps
pusha
xchg
add
dec
xchg
xorl
lret
stc
ret
aaa
int3
push
xchg
and
mov
cwtl
inc
out
stc
int3
scas
cmpsl
int3
mov
inc
inc
mov
ja
jne
movsl
add
pop
push
iret
sarb
fadd
pop
push
fdivrs
fimuls
std
aaa
mov
inc
adc
jae
mov
or
dec
in
sbb
out
icebp
mov
into
push
rcl
push
shll
sub
mov
int
lds
out
lret
mov
fwait
push
mov
xorl
or
sub
pop
mov
rcll
lea
pop
pop
push
sbb
mov
adc
xchg
dec
cmp
fildll
dec
jle
xor
adc
mov
xor
cli
das
xor
adc
jo
cmp
add
sbb
sbb
pop
cmp
icebp
fwait
mov
push
scas
jecxz
sbb
mov
push
clc
mov
call
jmp
test
daa
sub
add
das
push
pop
lret
inc
mov
lea
js
fidivrs
dec
mov
inc
out
adcb
mov
mov
scas
jae
mov
lods
movsb
subl
pop
fdivl
nop
sarb
out
add
dec
testl
mov
sub
sbb
adc
mov
mov
cmp
fisubl
adc
outsl
xor
stc
out
popa
xchg
jmp
gs
in
jecxz
fnsave
cmpsl
push
mov
inc
push
out
mov
neg
movsb
lcall
sahf
xor
mov
mov
cltd
call
cmp
std
jno
inc
lret
je
add
dec
or
xchg
sbb
inc
out
imul
pop
scas
inc
cld
push
lret
outsl
nop
pop
adc
test
cmpsl
lret
int3
stos
add
pop
fldz
inc
in
push
ja
pop
or
dec
fisubs
pop
ljmp
xchg
jae
cltd
imul
mov
outsb
scas
movsl
sbbl
cmp
jl
push
pop
adc
add
ss
dec
inc
dec
inc
jle
adc
push
add
int3
outsb
xor
cmp
push
dec
jo
adc
xlat
imul
icebp
mov
mov
fwait
adc
and
mov
das
fldenv
pushf
sbb
adc
sub
cmp
ret
mov
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
ja
and
in
adc
mov
pop
lret
dec
mov
andb
popa
or
icebp
aaa
sbb
addb
aad
in
xchg
icebp
je
imul
push
cmp
inc
mov
sub
aad
pop
push
arpl
repz
sub
jnp
out
or
das
mov
aas
aaa
outsl
xlat
sbb
lcall
sbbl
stc
imul
jnp
push
loope
outsl
sti
lock
or
shrl
push
fisubrs
xchg
dec
addr16
mov
pop
cmp
pop
lahf
in
xor
xchg
pop
flds
mov
push
adc
loope
xor
push
les
xchg
mov
adc
clc
mov
adc
push
das
cmp
ss
in
sti
inc
fnstcw
out
sub
cld
dec
push
and
shrb
mov
lret
pop
dec
loope
leave
mov
cld
hlt
xchg
cmp
insl
mov
in
mov
jmp
jno
dec
test
fdivs
test
shrb
mov
sbb
xchg
mov
fwait
lret
les
incb
or
xchg
xor
mov
gs
mov
adcl
xchg
mov
dec
hlt
in
ret
mov
adc
scas
and
sbb
sti
iret
lds
push
loopne
sbb
shlb
mov
fisttpl
add
mov
jnp
stos
pop
loope
or
insl
inc
xor
stc
push
ds
int
mov
pusha
xchg
add
xor
ss
cwtl
aad
repz
aad
jg
pop
std
dec
lods
adc
arpl
out
lcall
mov
je
es
jle
cmp
adc
test
ljmp
jo
adc
int3
mov
aaa
mov
lahf
ja
std
in
dec
int3
dec
out
pop
push
mov
cmp
test
xchg
test
repz
push
pop
or
cmpb
adc
dec
loope
xlat
push
xor
scas
sbb
shll
xlat
lods
mov
fs
inc
or
mov
push
loopne
mov
sub
cwtl
xor
xchg
and
pusha
rolb
scas
cld
hlt
test
pop
into
adc
rorl
or
test
dec
jbe
mov
ficompl
push
nop
fwait
ja
insb
imul
xor
jae
repnz
stc
pop
xchg
mov
mov
loope
xor
xor
cmp
adc
push
fists
lds
pop
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
jmp
loopne
jnp
adc
adc
jg
xor
cmpsb
ja
cmp
insl
xchg
nop/reserved
dec
jae
aad
mov
push
enter
cmc
fsubl
fiadds
dec
and
mov
adc
jne
or
pop
or
inc
add
lret
pushf
xor
fmuls
cltd
pop
das
test
subl
outsl
subb
jnp
addb
mov
ds
lods
sub
add
jp
stc
pop
pusha
sbb
mov
or
xchg
imul
insl
ja
lahf
aad
sub
cmp
push
icebp
cli
sbb
jne
mov
cmpsb
fwait
pop
in
imul
inc
push
cmp
sahf
insl
or
pop
scas
popf
lret
jno
jecxz
cs
adc
incl
jmp
dec
fsubp
out
scas
rorb
xor
repnz
out
lret
out
sti
test
sbb
rclb
in
cmp
daa
fst
xchg
and
mov
jecxz
xor
push
lret
push
shl
jno
cmc
aaa
xchg
ss
pop
xor
pop
xor
xchg
push
mov
pop
movsl
leave
mov
inc
xor
lret
rclb
adc
mov
inc
in
xchg
sbb
dec
sub
sub
and
dec
iret
sbb
pop
mov
lcall
ljmp
mov
push
push
aaa
xchg
lret
fists
xchg
push
add
cmpsl
push
mov
scas
or
xchg
scas
add
add
std
push
cmp
sub
mov
adc
inc
ficomps
xor
or
inc
or
mov
dec
das
aam
imul
outsb
icebp
dec
and
adc
cmp
ljmp
aas
cmpsb
or
into
popf
jo
cmc
pop
out
sub
out
test
mov
mov
sub
faddl
lock
sbb
sbbl
pop
ret
scas
push
jae
bound
fld
andl
add
cmp
mov
rorb
cltd
cmp
mov
inc
mov
jno
pop
jo
insl
sub
jge
cli
jecxz
mov
loopne
out
and
out
cmpsb
stos
data16
arpl
lret
js
xchg
xchg
push
pop
loop
jmp
arpl
scas
call
inc
aas
cmp
and
movntps
call
repnz
pop
inc
outsl
xchg
push
mov
mov
bound
dec
xor
add
jp
sarl
xchg
sub
daa
inc
inc
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
insb
ficoms
adc
adc
sub
inc
into
jo
lahf
dec
in
xor
add
jl
inc
inc
call
sbb
out
push
xchg
sbb
mov
inc
popf
pop
inc
ja
mov
xchg
and
test
jnp
in
inc
movsb
or
adc
mov
mov
orb
jb
mov
and
cli
icebp
and
mov
inc
clc
in
mov
je
mov
mov
cmp
pushf
imul
add
jl
lcall
stc
cmp
pop
fidivrs
aam
mov
jecxz
cmc
jns
xchg
pop
push
dec
pop
rorl
nop
inc
ret
cwtl
fists
jle
jo
pop
pop
mov
or
movsl
mov
testl
xchg
nop
jecxz
popa
xlat
mov
xlat
jecxz
and
nop
add
andb
mov
push
adc
mov
push
jne
int
outsb
orb
sub
xchg
sbb
aas
sti
sub
cmp
push
lcall
cmpsl
cmp
sahf
jbe
adc
lahf
repnz
cmpsb
dec
add
out
stos
ds
lock
or
subl
sub
mov
shlb
jne
push
test
add
loopne
stc
ret
insb
cmpl
mov
xchg
jbe
mov
push
rcl
test
mov
jbe
adc
shrl
ja
fnstenv
aam
push
sub
sub
add
sbb
pop
les
or
popa
push
lock
add
mov
jmp
and
lock
inc
jmp
or
xchg
popf
xor
pop
loope
push
icebp
adc
jae
mov
filds
sar
ret
mov
jns
mov
cltd
jle
call
xor
lcall
push
jo
sarb
mov
inc
sub
jl
add
cmpsl
xor
das
sbb
divb
push
jge
das
cld
xorb
repz
adc
and
push
fcomps
xchg
push
clc
aas
xlat
aaa
lahf
subb
xchg
add
cltd
out
mov
inc
daa
add
pop
xchg
or
pop
divl
pop
adc
mov
scas
arpl
jns
decl
add
cmp
iret
dec
insb
and
sub
jb
jns
loopne
dec
sbb
lcall
aam
adc
or
xchg
lods
mov
scas
inc
mov
popf
push
test
test
add
hlt
mov
stos
shlb
cs
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
outsb
sub
xchg
movlps
jg
insl
loopne
mov
or
jmp
test
mov
cmp
out
in
cmp
cmc
popa
fistpl
xor
sbb
lahf
mov
scas
sbb
je
test
cmp
dec
pop
pushf
sarl
shlb
pushf
and
mov
fs
pop
xchg
xor
call
xor
icebp
and
adc
rcr
pop
dec
push
cmc
insb
shll
adc
testb
cmpsb
inc
sbb
adc
jl
jnp
xor
clc
mov
push
je
out
push
sbb
xchg
add
mov
inc
pop
or
outsb
cmp
mov
xor
sbb
imul
cmc
jmp
jns
mov
loopne
xor
dec
test
adc
jle
jl
lcall
lods
int
je
lret
cltd
dec
sbb
jmp
hlt
movsl
int
loope
les
inc
push
xor
xor
bound
ficoms
les
jle
push
js
add
cwtl
rcrl
int3
adc
fistl
jns
mov
push
lcall
jecxz
adc
fld
mov
out
sahf
testb
in
shll
into
cmp
and
lret
incl
and
outsl
sbb
or
adc
outsb
shr
jno
shlb
sub
mov
add
sbb
stc
and
pop
fs
loopne
jne
js
nop
sahf
mov
and
xor
adc
clc
lea
xchg
pop
movsb
xchg
jne
push
shrl
cs
adc
sub
decl
xlat
inc
mov
dec
data16
rclb
cmpsl
xchg
int
mov
push
js
add
xor
xchg
int3
das
mov
jge
loopne
addb
popa
and
lods
pop
or
inc
divl
or
popl
jmp
push
add
mov
jne
adc
lcall
mov
jmp
sti
jb
stos
mov
jge
mov
xchg
fistl
mov
sbb
test
xchg
xchg
ds
cmc
scas
test
bound
xchg
and
mov
pop
sbb
jo
shll
xor
pop
push
enter
je
sahf
mov
cmpsb
push
aam
add
add
jg
bound
dec
outsb
test
inc
in
stos
xor
mov
add
rorb
out
or
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
push
sbb
aad
adc
mov
and
mov
lcall
lods
jns
xor
dec
lock
xchg
cs
insb
xor
mov
das
fnsave
sbb
mov
push
sbb
push
in
arpl
pop
xor
movsb
push
mov
ljmp
cwtl
cmpsb
dec
aad
das
push
pop
rorb
mov
xchg
sub
dec
jne
dec
pop
imul
stos
aam
jp
gs
and
jo
xchg
leave
sahf
dec
loopne
inc
leave
xchg
cmc
jg
shrb
xlat
dec
pop
faddl
jnp
leave
jle
push
mov
and
out
and
in
xor
cmp
movsb
lods
mov
pop
fildll
dec
mov
adc
mov
shl
shrb
dec
std
leave
xchg
insl
mov
scas
inc
add
mov
lods
gs
pop
mov
dec
sbb
lds
mov
mov
jmp
pop
rdtsc
xor
clc
and
iret
hlt
pop
subl
jbe
in
pop
dec
aas
mov
xchg
test
cltd
sub
repnz
jns
stos
pop
mov
add
jb
cmpsb
cmp
adc
jne
pop
jg
je
ljmp
cltd
and
aaa
fldenv
movsb
pop
nop
bound
sbb
jb,pt
popa
in
add
sahf
in
loopne
cmp
gs
test
mov
jae
or
dec
jmp
repz
jle
jne
lock
add
xchg
icebp
lcall
fbld
dec
addb
fsubrl
fnstcw
clc
sbbb
lahf
jno
addr16
inc
xor
lock
addb
jo
cmp
add
rep
sbb
insl
adcb
xchg
jae
filds
jne
clc
int
add
bound
add
repnz
push
adc
arpl
out
out
mov
and
out
negb
push
dec
or
xor
out
or
add
out
sahf
xchg
pop
sbb
inc
or
aad
and
leave
inc
je
add
incl
add
call
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
leave
or
adc
movlps
out
adc
imull
mov
xchg
and
mov
jb
in
loope
dec
jbe
gs
nop
pop
clc
cmp
inc
jne
mov
insb
sbb
mov
adc
inc
cltd
cmp
xor
adc
lea
sbb
xchg
cmpsb
xor
mov
stc
test
mov
xchg
sbb
stos
adc
xor
cltd
imul
adc
iret
push
adc
divb
dec
int
and
adc
push
stos
adc
mov
fcmovnu
dec
repz
push
mov
mov
mov
in
inc
or
cltd
jl
lods
in
cmp
outsl
xchg
mov
push
cwtl
inc
pop
loope
adc
jbe
xchg
mov
outsl
adc
ja
mov
jecxz
mov
pop
push
cmp
jae
or
mov
cltd
ja
popf
leave
pop
es
sahf
sti
mov
xchg
push
nop
mov
out
mov
fstpl
sub
adc
adc
push
or
inc
mov
xor
xchg
outsb
push
scas
iret
mov
mov
pop
or
lock
xchg
jnp
jge
cmp
push
sub
orl
cmp
stos
loopne
push
adc
cmp
fldcw
push
incb
movsb
lret
loop
jge
pushf
add
push
pop
pop
add
add
cld
lret
dec
add
pop
jmp
push
or
add
sbb
shll
imul
mov
xchg
mov
or
aad
push
inc
xchg
sbbl
fdivr
add
adc
sbb
add
lock
push
jg
jns
lds
adc
sbb
test
ljmp
jo
jbe
xchg
jge
jecxz
mov
and
loope
push
sub
adc
cmc
mov
xor
push
xchg
icebp
jae
dec
and
mov
sbb
test
inc
add
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
cmp
ss
lret
enter
rcrb
mov
mov
in
adc
mov
in
xchg
jb
ret
test
xchg
arpl
out
jecxz
leave
or
loopne
and
loopne
cli
mov
enter
pop
push
fidivl
cmp
or
add
aas
cmp
xchg
sbb
enter
fbld
mov
pop
ja
and
mov
out
push
mov
cmpsb
mov
ret
mov
ja
and
ljmp
sahf
dec
xlat
out
push
add
subb
lods
bound
fnstcw
outsl
xchg
lret
add
mov
mov
cmpsb
shll
sub
mov
xchg
scas
imul
fst
xchg
aam
loopne,pn
pop
cmpsb
xchg
cmc
loopne
add
adc
adc
loopne
push
add
daa
and
scas
jmp
shrl
aam
cmc
hlt
mov
mov
aas
xor
iret
xchg
push
add
hlt
sar
dec
and
sub
jle
rorl
mov
mov
leave
addr16
mov
push
dec
stos
andl
cltd
addr16
sbb
push
arpl
pusha
pop
in
sbb
mov
lcall
jns
outsb
sub
stc
push
fincstp
or
xor
mov
mov
test
inc
adc
mov
loope
add
insb
sahf
sbb
sub
cmc
xor
lahf
out
xchg
insl
or
sbb
and
xchg
insb
inc
push
insb
fmull
mov
xchg
lock
daa
sbb
mov
lcall
out
jg
shl
ljmp
stos
pop
cld
xchg
add
outsl
pop
xchg
cli
xor
test
or
add
lds
and
adc
add
adc
notb
jecxz
sub
adc
mov
fistpl
pop
cwtl
cs
pop
xchg
push
jp
mov
xchg
flds
insb
bnd
push
inc
sti
push
mov
gs
subb
inc
popa
in
shlb
sbb
incl
add
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
js
jle
adc
adc
jp
loop
arpl
pop
push
cmp
or
test
popa
adc
inc
and
scas
movzbl
jge
shll
jbe,pn
xor
popl
xchg
or
xchg
lea
ficoml
push
push
nop
or
ror
pop
por
idivl
and
js
cld
and
popf
xchg
cli
cmpsb
cltd
add
movsl
push
mov
mov
jmp
fcoms
pop
fistl
cmpsl
inc
add
xor
push
rcrl
int3
fmull
dec
inc
add
cld
loop
pop
jmp
bound
mov
into
repz
loop
loopne
mov
inc
mov
and
lss
fsubp
lock
imul
in
outsb
mov
stos
mov
mov
insb
call
inc
es
aaa
xchg
jge
ror
and
or
mov
mov
adc
push
jne
cmp
dec
adc
inc
mov
mov
lods
rcr
das
sar
mov
cli
imul
lods
inc
enter
call
adc
push
xchg
xor
push
stos
add
ljmp
sti
push
xor
sub
or
mov
lcall
xor
dec
dec
mov
dec
dec
mov
sbb
mov
cmp
clc
outsb
jp
xchg
push
push
jp
ret
out
mov
sub
mov
sub
xchg
iret
es
sub
into
jne
clc
jns
cmp
orl
push
xor
ja
ret
sbb
leave
das
jns
sub
mov
insl
cmp
pop
in
jne
add
test
testl
stc
sti
test
jmp
push
dec
cmp
leave
pop
xchg
pop
lds
nop
int3
mov
test
xlat
repnz
pusha
mov
cld
out
push
pop
cmp
cmp
outsl
mov
push
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
push
sti
jle
ret
enter
addb
jmp
sbb
out
sub
mov
rcrl
test
mov
out
aaa
jae
xchg
enter
movhps
mov
iret
leave
clc
add
cmpsb
push
xor
mov
sahf
pop
sbb
sub
pushf
cmpsl
sbb
and
icebp
jle
es
or
adc
nop
ja
mov
nop
or
imul
rorl
mov
sbb
punpckhbw
and
in
pop
fcoms
testb
and
xor
cli
or
jmp
popf
mov
lcall
das
sub
shll
decl
in
push
push
xchg
bound
je
add
xor
adc
xor
fstps
dec
mov
or
call
and
mov
rol
loopne
lcall
pop
mov
dec
mov
sbbb
push
inc
mov
pop
dec
shl
lret
sbb
leave
into
std
xchg
push
xchg
insl
cmp
test
mov
out
dec
test
sahf
scas
jp
dec
cmc
mov
insb
scas
inc
adc
enter
sbb
aaa
dec
jo
ljmp
cwtl
mov
out
push
dec
pop
pop
cmp
fidivs
dec
ljmp
neg
std
sahf
test
jno
mov
sti
inc
sbb
cli
sub
out
dec
cmp
jl
xor
repnz
xor
mov
lcall
mov
cmp
fsubrs
insb
jl
mov
sbb
mov
pop
sbb
test
aas
rol
push
push
pop
js
cld
mov
test
imul
ss
testb
ret
cmp
xchg
lret
jmp
stc
lcall
fadds
aam
inc
ret
imul
lock
mov
adc
bound
cmp
ror
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
or
jle
mov
adc
inc
adc
jmp
js
sub
popl
mov
dec
fistps
into
call
mov
movsl
iret
cmp
rorb
jp
mul
out
hlt
or
lret
insl
sbb
shl
negl
cmpsl
inc
xchg
mov
comiss
cmp
push
mov
lcall
add
pop
lods
pop
push
cwtl
mov
add
mov
mov
subb
pop
js
imul
mov
pop
das
jae
push
shll
add
fidivrl
in
ret
push
clc
in
mov
pushl
stc
dec
inc
sti
xor
adc
popa
fldenv
int
movsl
pop
or
mov
mov
pusha
jle
push
pop
cli
jnp
stos
mov
imul
nop
in
and
aaa
insl
mov
out
popf
mov
das
pop
push
jmp
add
repnz
ja
xchg
mov
repnz
inc
fmuls
imul
mov
push
pusha
add
cmp
push
xchg
es
xchg
cld
xor
clc
mov
jge
xchg
add
sbb
dec
xchg
inc
xor
adc
inc
mov
mov
dec
push
cwtl
test
dec
xchg
popf
outsb
xchg
std
repz
mov
sbb
pop
loop
sti
add
xchg
sbb
fcomi
add
xor
xor
aas
fistl
rol
addr16
daa
add
aad
test
lret
mov
jmp
xchg
jne
test
out
lods
aas
or
push
xchg
xchg
mov
or
mov
test
pop
push
stc
cmp
xchg
imul
dec
pop
pop
arpl
fidivl
fimuls
loope
mov
mov
roll
out
repz
ljmp
cmpsb
lahf
cmpsl
enter
arpl
push
js
dec
xchg
rcl
add
push
mov
jno
decl
inc
xor
negb
imul
ss
test
incl
testb
adc
test
cltd
out
add
mov
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
xchg
js
mov
adc
loope
xor
movsl
outsl
sub
int
sub
mov
les
ret
idiv
fbld
add
sarl
mov
mov
push
inc
push
sbb
loop
xchg
pop
out
xchg
add
pop
stos
pop
or
jge
data16
aad
adc
int3
pop
inc
fidivrl
cmp
insl
cmp
push
out
jnp
scas
rcrl
cmp
out
or
mov
push
inc
mov
mov
add
mov
lods
sub
pop
std
stos
out
or
mul
or
insb
jg
outsl
cmp
cmp
mov
sbb
clc
cmc
cli
sahf
dec
imul
sbbb
add
out
imul
cmp
out
into
in
pop
gs
out
dec
jmp
movsl
pop
les
or
mov
data16
pop
das
mov
stos
jno
pop
mov
mov
mov
xor
nop
fld
jne
dec
movsb
xchg
ret
popf
push
mov
insb
or
popa
rcrb
mov
mov
or
push
add
stc
jne
pop
adc
in
mov
imul
mov
cmp
dec
jo
cmp
test
sbb
sbbl
push
mov
stos
cmpsb
cltd
mov
fildll
imul
idivb
sub
movsb
lret
test
jmp
jl
xchg
and
mov
sahf
push
test
fstps
add
lea
std
outsb
ja
mov
fucomp
lret
dec
les
xchg
inc
xor
jg
sti
aam
pusha
push
aam
test
popa
ds
mov
or
test
xor
push
mov
mov
lods
dec
add
push
xchg
repz
mov
shlb
pop
sub
sub
scas
in
mov
das
pop
lea
adc
dec
xlat
movsl
out
sti
mov
fdivrs
mov
mov
pushf
xchg
inc
ja
xchg
mov
sbb
insb
imul
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
fmuls
out
adc
adc
dec
inc
call
pop
mov
stos
movsl
cmp
rclb
sbb
lahf
and
stos
ret
push
mov
push
xlat
int3
lret
leave
aaa
mov
shl
ret
inc
je
mov
lds
fdivl
xchg
rorb
ja
mov
fdiv
mov
fsubrs
and
mov
and
test
ficompl
out
dec
push
and
int3
mov
out
aas
mov
xchg
xor
inc
inc
mov
testb
fstps
movsb
hlt
mov
mov
xor
cwtl
into
arpl
and
in
jmp
clc
repz
push
mov
xchg
dec
mov
fmul
popa
mov
mov
xor
pop
push
jbe
rcrl
jae
cs
bound
addr16
sti
lahf
push
cmp
xchg
es
xor
out
popf
xchg
shlb
inc
movsl
xchg
ds
in
cmc
sub
push
jae
lret
jp
and
jo
pusha
jge
add
pop
dec
sbb
fxtract
mov
push
xor
lea
fists
and
movsl
mov
addr16
stc
adc
jb
lret
add
insb
mov
sbbb
sbb
outsl
sub
pop
inc
sub
sbb
jecxz
push
jl
cs
add
dec
xchg
and
jp
lea
push
out
sbbb
das
stos
or
in
jg
jbe
bound
push
sbb
test
enter
test
mov
movl
fcomps
lcall
iret
fisubrs
xchg
movsb
popa
jge
sbb
cmpsb
lods
xor
dec
idiv
xor
sub
rcrl
sub
push
jo
cmc
sarl
jg
inc
fnstcw
sub
fisubl
mov
loop
mov
es
cld
and
je
pop
xchg
test
sub
aaa
push
xor
sahf
es
sbb
xchg
mov
jl
repnz
fdivr
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
inc
in
mov
enter
mov
fs
daa
into
lahf
stos
push
sbb
mov
jp
mov
adc
mov
lds
inc
jp
repz
xor
or
decl
xor
cmp
jp
push
lahf
pop
pop
add
lcall
cmp
mov
inc
mov
add
orb
in
into
push
test
push
jns
mov
pop
or
adc
lret
push
or
lret
mov
xor
jg
push
flds
or
sub
push
or
sbb
subl
mov
pop
jb
movsb
inc
jnp
mov
movsb
xor
hlt
mov
sbb
inc
test
lods
movsl
or
lods
ror
push
inc
pop
fimuls
fldln2
fldcw
imul
jne
push
int
dec
scas
inc
pop
jns
pushf
scas
iret
lods
lahf
xchg
add
or
xchg
push
pop
cmpsb
xor
dec
outsl
or
cld
addr16
or
dec
xchg
das
sbb
pusha
xor
sarl
mov
sub
cs
mov
jo
mov
dec
stos
mov
mov
fsub
arpl
mov
jae
fbld
inc
or
fsubs
test
imul
push
test
icebp
xchg
sub
pop
mov
xor
fistpl
mov
shlb
ljmp
mov
mov
dec
orb
inc
stc
mov
icebp
or
xchg
lods
mov
icebp
mov
or
inc
arpl
not
dec
adc
push
cmc
push
loope
gs
ljmp
cs
enter
test
dec
mov
push
dec
std
cmp
mov
arpl
out
inc
pop
pop
mov
xor
jmp
add
and
mov
or
dec
push
or
sub
clc
fdivr
shlb
das
test
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
imul
stos
dec
test
adc
movlps
ja
test
xchg
pop
jbe
jmp
dec
push
mov
inc
inc
pop
push
outsb
and
xor
mov
pop
mov
mov
stos
xchg
dec
gs
and
jg
arpl
out
in
pop
pop
repnz
rolb
jmp
sub
insl
push
push
and
mov
xor
xchg
insl
push
out
push
cmc
sahf
push
inc
sahf
and
pop
repz
lcall
repz
lret
adc
test
mov
xchg
jbe
jnp
or
in
sbb
fnstsw
std
pop
adc
mov
fbstp
inc
or
call
sbbb
cmp
dec
jmp
ja
testb
and
sub
mov
inc
and
xor
ss
orb
mov
mov
scas
mov
in
push
or
inc
dec
mov
imul
sbb
sub
out
das
mov
mov
fbld
mov
mov
jae
adc
repz
adcl
dec
rorb
shll
fists
out
fstpl
sahf
cmp
cmpsl
in
lock
cld
sbb
pop
push
clc
mov
je
sbb
or
dec
nop
enter
cmp
out
mov
push
add
xor
xor
enter
sahf
push
sbb
dec
stc
mov
int
adc
lds
mov
push
call
adc
popf
dec
or
fistpl
fiaddl
and
cs
pop
mov
adc
jge
rcll
and
sbb
pop
dec
pop
es
iret
loopne
mov
cmc
or
sahf
mov
int3
push
pop
not
or
jl
mov
lcall
jg
jge
popa
adc
leave
pop
push
daa
insb
hlt
cmp
iret
mov
faddl
subb
and
inc
add
das
adc
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
movsb
mov
add
adc
pusha
popf
outsl
push
push
jmp
fsubrs
add
in
add
repz
pop
sbb
das
scas
and
jno
or
adc
in
orl
pop
inc
lahf
pop
push
xchg
pop
xchg
xchg
xlat
ja
fnstsw
push
es
test
lds
ss
sbb
enter
int3
adc
push
xor
cld
mov
pop
inc
add
mov
add
push
clc
mov
xchg
mov
cmp
stos
imul
adc
data16
mov
arpl
fs
adc
mov
mov
outsl
cs
dec
adc
pop
and
cld
mov
cwtl
push
and
pop
cmc
mov
add
out
mov
push
dec
mov
popf
mov
lahf
fdiv
test
pop
dec
lcall
hlt
aam
add
aam
fiadds
inc
cli
lods
xor
push
lcall
rolb
test
cmpsb
add
enter
mov
adc
xor
xchg
inc
lods
jmp
push
test
push
sub
xor
pop
fstpt
jae
xchg
push
jge
and
cli
sbb
and
imul
mov
stos
out
das
mov
mov
xchg
in
sti
push
mov
or
pushf
cmp
mov
xchg
jp
std
daa
icebp
cmovge
aas
pusha
pop
movsb
incb
xlat
push
cmp
and
mov
fcoms
js
sub
push
ja
sbb
jg
jecxz
mov
lods
and
and
mov
or
cmpsb
icebp
pop
jnp
fiadds
pop
xchg
push
aas
mov
push
movsl
sbb
jnp
jb
push
mov
fcom
push
jbe
xor
ret
lods
jl
sahf
outsl
sbb
push
push
add
test
adc
clc
push
pop
inc
sub
gs
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
xchg
pop
lods
mov
adc
adc
fisttpl
xor
cwtl
sahf
aad
dec
adc
dec
fsubp
imul
mov
xchg
cmp
popf
push
fwait
jae
cwtl
leave
jae
pop
inc
inc
dec
pavgw
cld
jg
xor
mov
fisubl
or
out
iret
dec
into
adcb
flds
push
scas
dec
lock
je
cmp
cmp
bound
mov
enter
add
leave
out
sub
jg
cmp
mov
mov
testl
and
xor
insl
mov
mov
pop
and
out
mov
jmp
clc
cmp
hlt
gs
mov
ds
mov
or
out
loope
aaa
mov
inc
out
shr
dec
out
mov
es
mov
imul
adc
inc
mov
or
xchg
push
sbb
or
and
ret
popa
nop
outsl
dec
push
subl
mov
rorb
pop
cli
mov
inc
out
lret
mov
jns
ljmp
jp
ret
push
and
sub
rcr
pushf
xchg
pop
mov
jb
adc
aam
lods
adc
mov
jno
dec
add
nop
cwtl
jnp
xchg
daa
es
pop
pop
jno
in
lds
mov
pop
inc
daa
fiaddl
sbb
test
cmp
add
fs
adc
push
pop
jnp
and
or
add
aam
fdivrl
pop
xor
push
pop
pop
repz
int3
and
arpl
adc
mov
mov
call
cmpsl
stos
mov
pop
jmp
sub
das
pop
and
sub
cmp
lea
aaa
xor
jns
mov
mov
pop
jmp
sbb
fwait
and
addr16
mov
mov
sub
and
sarl
adc
movsb
push
xor
mov
nop
dec
imul
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
jle
pushf
adc
adc
sbb
mov
filds
test
dec
popa
sbbl
add
arpl
or
pop
icebp
xchg
xchg
pop
dec
mov
aam
mov
cltd
xor
lods
xchg
cmp
ficoms
mov
outsb
mov
sub
je
cmp
in
xchg
in
jb
outsb
mov
insl
or
and
dec
pop
mov
test
int3
shrl
enter
dec
pop
ja
mov
scas
cmp
adcl
clc
cltd
test
stos
pop
mov
int3
cld
imul
sub
push
sbb
mov
aaa
pop
pop
sbb
xchg
jge
mov
push
shrl
std
xchg
js
aad
clc
push
in
sbb
daa
push
hlt
hlt
test
aam
pushf
adc
sarb
add
push
insb
ds
pop
dec
ljmp
dec
rclb
dec
daa
mov
mov
ds
cmpl
stc
or
cs
aaa
xchg
stos
hlt
mov
stos
add
mov
and
push
lea
xchg
push
movsb
loopne
cmp
das
add
sbb
jno
or
cmpl
js
shrl
mov
inc
inc
or
lds
sarb
clc
inc
inc
insl
aaa
inc
xchg
data16
iret
dec
loope,pt
out
add
subl
mov
repnz
icebp
mov
inc
xor
sbb
fs
cmpsb
call
mov
int
lea
rclb
and
jb
fs
cmp
jae
mov
incl
lock
shl
js
sub
popa
push
stos
adc
mov
icebp
xchg
pop
cmpsl
cmp
and
imull
popf
mov
ja
mov
sub
cmp
sub
aad
es
fsubs
ss
mov
leave
add
mov
fldcw
jge
ja
int3
adc
stos
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
xchg
jle,pt
cwtl
adc
adc
repnz
out
ja
jbe
mov
cmc
inc
push
adc
mov
cmp
and
shld
dec
imul
aaa
mov
jae
push
rcrb
js
outsl
cmp
sbb
mov
xor
add
dec
and
repnz
inc
push
mov
fcmove
repnz
arpl
jge
cmpsb
aas
int3
jb
leave
adc
xchg
jmp
fmuls
imul
push
ds
push
and
cmpsb
movsb
lds
and
pop
jns
mov
cld
test
lods
or
dec
mov
mov
push
jp
xchg
or
hlt
xor
fisubrl
in
arpl
mov
sarl
mov
jns
out
repnz
jnp
movsl
sbb
arpl
or
cs
jb
lcall
sbb
mov
lahf
out
jno
mov
push
mov
mov
cltd
or
hlt
sti
negl
cmpsl
jb
in
cmp
jmp
insb
xor
lret
inc
insl
cmc
stos
clc
xor
dec
daa
repz
jae
mov
lea
pop
adc
lret
fnsave
lret
lock
or
mov
adc
int3
cmp
pop
adc
jnp
push
add
les
daa
dec
decb
cwtl
cmp
leave
or
sub
popa
jle
sbb
stos
sub
js
dec
jae
into
stos
ret
repnz
rcll
push
lret
stos
mov
cmp
xchg
data16
cmp
ffree
pop
inc
mov
out
mov
iret
mov
add
ss
aas
loop
stos
jb
lock
jecxz
addb
push
xchg
fdivs
mov
shl
mov
ret
jp
iret
lods
sub
addr16
arpl
imul
cli
sbb
sbb
pop
bound
and
xchg
ljmp
inc
jno
sub
popf
mov
add
loop
pop
add
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
lret
rclb
adc
inc
adc
aaa
pop
pop
jns
sub
lea
es
mov
enter
or
lcall
xor
rorb
ja
pop
rolb
incb
push
dec
shrb
mov
fidivs
test
dec
das
mov
and
lods
jo
aad
in
arpl
xchg
sbb
push
test
daa
jno
scas
jge
and
cmp
or
sub
fcomp
pop
ja
insl
leave
sub
out
cltd
jo
shlb
shl
insl
aaa
sub
sti
in
adc
jl
shlb
sti
xchg
daa
aam
push
xor
pop
loopne
mov
fstpl
popf
mov
pop
insb
adc
pop
sahf
xlat
in
pop
dec
repz
sub
adc
arpl
push
sbb
gs
fsubl
es
sub
push
fs
std
sbb
sbb
shl
nop
jg
int3
scas
lea
icebp
mov
inc
jl
sbb
loope
mov
mov
cmp
mov
xchg
aaa
mov
cltd
mov
xchg
adc
push
and
cmc
or
incl
lahf
jp
in
pop
mov
repnz
sub
inc
mov
shl
mov
mov
pop
popa
add
mov
stos
ret
xchg
or
cmp
stos
aas
sti
adc
xchg
fbld
lret
jecxz
inc
add
popf
loop
mov
addb
sbb
repz
das
adc
dec
sbb
in
pop
xor
aas
push
fistpl
inc
or
xlat
loope
push
fcomps
call
sub
lahf
mov
or
sarb
fdiv
push
mov
ss
dec
xor
imul
popa
lods
rcrl
notb
xor
push
push
inc
add
lahf
js
xchg
data16
cmc
pop
mov
or
dec
gs
mov
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
repz
xchg
adc
jmp
out
adc
arpl
pop
in
fxch
outsb
dec
mov
aam
data16
or
fmulp
fcomps
push
rorb
loopne
jmp
ljmp
inc
cmp
dec
push
push
sti
pop
sbb
fstps
cmp
sbb
das
stos
xor
jnp
jmp
clc
jne,pt
cmc
push
sub
lcall
lret
sbb
std
and
jl
hlt
push
shl
dec
push
adc
stos
pushf
outsb
sti
and
insl
arpl
or
popa
sbb
test
mov
push
fmulp
rcrb
mov
outsb
inc
mov
mov
jecxz
or
aad
movsb
inc
xchg
mov
fildl
push
push
in
je
in
je
ret
add
cmpsl
shl
add
push
and
cmp
jecxz
xchg
xchg
jecxz
lcall
or
mov
lea
pop
das
adc
icebp
mov
sub
in
test
mov
jo
cmp
addr16
ret
lods
push
addr16
hlt
repnz
lahf
fsubs
pusha
cmpsl
push
divb
inc
push
insb
push
lea
dec
out
push
mov
jp
dec
sub
jge
clc
sbb
lcall
ja
pop
rorb
in
push
and
les
ja
in
mov
sub
inc
push
dec
mov
scas
das
ret
cmp
mov
popf
sahf
test
stos
lcall
xchg
test
jne
lds
add
cmp
push
add
fidivrs
sbb
dec
or
xor
add
aam
push
icebp
test
insl
mov
push
pop
pop
sub
or
push
mov
xor
or
clc
stc
mov
jl
or
in
hlt
sahf
xlat
iret
jnp
fsubrs
or
mov
testb
lods
xorl
cmpsb
sub
jp
insb
mov
adc
inc
cmp
jb
jmp
imul
mov
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
and
insb
cmp
adc
xor
jp
std
fbstp
aaa
loop,pt
or
sbb
add
sub
mov
out
fwait
bound
mov
cmpsb
xchg
loopne
and
inc
sub
imul
stos
xchg
jne
pop
dec
aaa
adcl
jbe
sbb
in
cmpsb
xchg
push
push
stos
addr16
mov
push
rcll
rol
imul
adcb
mov
lret
int3
leave
push
es
mov
sbb
out
mov
jp
mov
xor
imul
or
pop
push
sbb
iret
lret
jle
stos
pop
mov
inc
aaa
or
out
test
and
xor
pop
mov
lock
xchg
lods
cld
xchg
cld
push
popa
jbe
les
outsb
xor
int3
fisubrl
push
sub
out
in
dec
ss
int
pusha
shlb
inc
xchg
cld
pop
jg
inc
enter
sbb
adc
add
push
mov
icebp
xchg
mov
xchg
stos
sub
roll
mov
and
in
aas
pop
aad
add
cs
scas
lds
sub
movsb
popl
or
int3
add
cmpb
push
sbb
sub
fcoms
repz
dec
jl
clc
movsl
andb
mov
hlt
in
jmp
pop
mov
push
adc
fwait
xchg
sub
adc
loope
cwtl
fmuls
xor
sarb
xchg
sub
incb
notl
nop/reserved
add
mov
fstpt
movsb
pop
stos
mov
xor
aas
into
push
xchg
or
call
popa
cmp
outsb
jmp
mov
mov
sub
ds
mov
mov
outsb
clc
test
or
cmpb
dec
pop
push
jo
xor
adc
xor
aad
bound
test
jbe,pn
out
mov
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
test
sbb
clc
je
push
fldt
jno
cld
clc
pop
mov
pop
outsb
push
jnp
sbb
xchg
cmp
stos
or
imul
push
js
pop
je
movsb
push
pushl
add
xchg
cmpsl
outsl
adc
push
leave
test
stos
and
xor
push
cld
or
and
xchg
and
adc
loope
fsubl
add
test
movsl
out
into
mov
loope
mov
pop
mov
adc
lods
ljmp
aas
scas
movsb
in
dec
rcl
mov
push
or
scas
mov
mov
mov
inc
adc
jg
ja
adc
pop
and
xchg
clc
aas
out
jl
negl
and
lods
sbb
mov
fldt
dec
fmull
ds
pop
mov
addl
mov
cmp
add
and
sub
arpl
les
fistl
dec
or
sahf
inc
in
jecxz
imul
cmpsl
pop
xchg
test
int3
imul
addl
push
lahf
lea
fs
sarl
inc
jmp
scas
xor
test
pop
or
mov
lret
mov
adc
sbb
js
lret
aad
dec
sarl
fadds
std
icebp
dec
inc
xlat
test
mov
mov
add
in
adc
mov
adc
pop
lods
call
ficoms
filds
xchg
push
mov
fisubs
or
adc
and
popf
jae
pop
push
fidivrl
aam
mov
mov
pop
inc
lods
and
dec
lds
adcb
mov
or
xlat
imul
push
div
xchg
pop
test
rcrb
push
and
or
xchg
push
pop
imul
fsubrp
insl
pushf
mov
inc
pusha
sbb
adcb
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
ss
outsb
insb
mov
movlps
bound
add
rcrb
loopne
mov
in
pop
adc
pop
ljmp
addb
nop
inc
test
call
mov
lea
jp
lahf
out
arpl
jmp
insb
push
or
dec
jmp
sbb
mov
add
xor
adcl
lods
jne
call
sti
and
cmp
push
ror
mov
inc
mov
and
fsubr
int3
ret
out
xchg
or
cld
push
dec
xchg
cmpsb
or
mov
std
cmpsb
inc
out
or
pop
loopne
ja
cmp
sub
rcll
push
test
inc
jae
mov
idiv
das
xlat
jmp
xor
cli
jp
pushf
clc
dec
fisubl
push
shl
lcall
fidivs
sub
test
pushf
push
mov
cmc
dec
into
jmp
aaa
scas
arpl
sbb
out
xchg
push
dec
sub
cmc
ds
jns
fsubrs
cmp
xchg
aaa
pop
dec
mov
mov
call
dec
sub
pop
and
jno
js
lret
jp
cmpsb
xchg
xchg
jg
adc
mov
ja
mov
icebp
and
pop
ljmp
fs
mov
jno
addr16
ficomps
mov
pop
insl
test
cltd
dec
mov
xor
mov
mov
mov
add
inc
push
sub
jne
mov
xor
mov
sub
loope
test
xchg
or
insb
add
cwtl
aas
sbb
int3
dec
shrb
imul
mov
add
clc
pop
inc
pushf
das
mov
jns
mov
lock
je
movsl
stc
repz
push
lret
stc
adc
daa
lea
mov
cmp
scas
clc
out
out
lahf
jb
mov
les
jbe
mov
push
scas
jl
xlat
or
sti
push
pop
push
cmp
pop
pop
daa
ficoml
lock
mov
sbb
cwtl
sbb
and
decl
pushl
xor
mov
call
or
jmp
mov
or
mov
push
push
fcmovnb
mov
enter
scas
aaa
pop
loop
pop
sbb
mov
xor
mov
outsl
add
pushf
xchg
pusha
lock
or
negb
mov
jle
sub
mov
notl
scas
cmp
inc
cmp
xchg
sub
or
add
or
iret
jbe
mov
test
adc
cmp
arpl
cld
xchg
pop
mov
loopne
add
lds
add
jg
xor
sbb
xor
adc
ja
arpl
and
fs
inc
scas
fiadds
into
inc
aas
jae
mov
push
jno
fisubrl
jmp
cwtl
push
lods
in
dec
sbb
aaa
cli
mov
cli
xchg
pop
inc
out
or
adc
mov
daa
imulb
mov
push
fs
and
lods
jae
int3
cmp
cli
sub
out
imul
inc
hlt
out
or
outsb
or
cmpsl
add
push
popa
xchg
xchg
sbb
pop
ret
std
cmp
addr16
movsb
sub
shlb
imul
out
and
incb
ja
inc
shrb
cli
cmp
cwtl
lcall
arpl
addr16
mov
mov
outsl
gs
pop
push
push
sbb
push
je
fstpl
js
testl
notb
clc
or
xor
icebp
cmpsb
popf
cmp
cmp
test
mov
sub
es
adc
mov
cmp
adc
sbb
leave
lahf
xor
mov
inc
xchg
leave
movsb
xor
outsl
mov
aaa
test
scas
push
lahf
add
mov
push
mov
cmp
dec
andnps
leave
out
test
rcr
mov
xchg
mov
dec
in
fimull
pop
test
push
repnz
in
cmc
sahf
fcoml
xchg
cmp
stos
cmpsb
shlb
xlat
int3
js
push
push
shlb
mov
imul
es
or
cli
fs
xchg
sub
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
movsb
daa
cmpb
movlps
sbb
pop
imul
cmpsb
dec
in
mov
cmp
in
out
idivb
cmp
jg
xor
test
in
and
fists
dec
fldcw
lahf
loopne
xor
stc
cli
sub
imul
test
adc
fmull
mov
dec
push
xor
jb
sub
push
mov
fwait
sub
enter
ror
sbb
fbstp
lret
mov
jg
push
mov
rorl
mov
xor
aaa
lods
inc
fcompl
mov
shr
mov
mov
stos
in
mov
sbb
stc
jno
jl
loop
movsb
push
mov
inc
jo
test
fwait
xor
mov
out
mov
xchg
push
mov
xor
dec
cmp
jecxz
xchg
sub
xor
in
popf
mov
pop
mov
int3
movsb
or
adc
cmp
and
push
outsl
or
sub
mov
mov
call
aad
add
push
sub
stos
jbe
xchg
cmp
icebp
fs
sub
pushf
lds
mov
cmp
movsb
gs
jle
int3
add
call
ja
dec
adcl
jae
adc
enterw
aad
cmp
in
shrl
stc
std
push
clc
into
push
mov
ljmp
cli
adc
jp
int3
imul
ljmp
shr
mov
mov
cmp
fs
imul
mov
mov
out
or
lcall
mov
insb
mov
in
or
andl
pushf
loopne
test
pushf
xorb
popf
movsl
fbld
push
xchg
push
nop
or
ja
and
fcomip
xchg
arpl
fabs
je
push
out
push
repnz
push
sub
sahf
mov
mulb
adc
add
adc
mov
xchg
rcrb
movsb
sbb
mov
aam
add
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
push
mov
enter
xchg
jmp
loop
arpl
xchg
mull
xor
add
shl
or
insl
adc
and
mov
cli
mov
fs
sbb
xchg
inc
jb
pop
filds
fcomps
dec
mov
jl
test
xchg
pusha
dec
xchg
fwait
push
iret
ss
jne
sub
inc
fisubrs
mov
pop
sbb
mov
push
lock
rcll
inc
out
lds
adcl
es
outsb
stos
aas
js
pop
sbb
pusha
cwtl
sub
test
rcr
xchg
mov
push
dec
loope
je
shll
fsubs
mov
movsl
cltd
adc
enter
outsl
inc
mov
push
imul
popl
sbb
shrl
adcl
xor
push
sub
dec
inc
fst
lods
enter
repnz
fwait
sbb
shlb
mov
mov
lds
mov
decl
int
pop
and
add
vmovupd
inc
dec
lret
and
mov
pop
test
jbe
loope
nop
ret
in
mov
mov
and
or
xor
cmp
or
mov
mov
jns
adc
xchg
dec
and
push
xor
xor
icebp
and
mov
stc
js
repnz
push
sbb
xchg
psllw
lods
notl
mov
adc
lcall
imul
gs
cmpsb
pushf
xchg
sub
xor
xchg
xor
sub
loop
test
shlb
cmp
outsb
pop
xchg
mov
jae
add
mov
loop
mov
push
gs
lahf
out
xchg
xchg
push
inc
xor
into
imul
cwtl
pop
enter
push
mov
into
int
sahf
leave
test
lret
mov
fwait
mov
add
jne
adc
mov
mov
testl
std
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
enter
jo
adc
movlps
mov
cmp
sub
lods
xor
fstl
xlat
insb
in
mov
aam
test
daa
fnstsw
cmc
jle
push
popf
rclb
dec
mov
sti
femms
leave
mov
adc
mov
stos
lods
sbb
adc
adc
out
ljmp
sub
sti
mov
cmpsb
inc
sub
jmp
push
xor
or
pop
mov
add
adcb
test
in
xchg
dec
test
int3
mov
lret
popa
std
pop
add
jp
dec
jg
inc
mov
mov
push
xor
dec
xchg
pop
loop
pop
fidivrs
sub
out
test
scas
int
aaa
push
xor
and
imul
int
cmp
out
inc
xor
xchg
cmp
out
sbb
inc
lcall
xor
and
dec
push
in
inc
sbb
mov
inc
adc
fs
sub
adc
or
add
push
xchg
mov
sbb
xchg
fisubrs
sub
out
lret
xor
sbb
stc
adc
mov
hlt
pop
loopne
stc
and
inc
add
and
popf
pop
jl
std
push
ljmp
test
mov
jns
sub
addr16
and
xchg
fbstp
mov
and
rcrb
inc
daa
mov
movsb
push
xchg
in
sbb
dec
add
addl
push
mov
dec
xor
dec
cmc
call
add
dec
add
frstor
repnz
jno
cltd
inc
mov
pop
and
push
add
mov
mov
test
xorb
pop
sbb
xchg
dec
ljmp
jmp
jp
ret
cmp
ds
call
adc
je
mov
cwtl
sbb
lock
out
pop
pushf
fucomi
fbld
jge
outsl
mov
stos
shll
jno
sub
xchg
add
cli
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
or
punpckhdq
insb
adc
adc
rcrl
sbb
and
lahf
add
pop
fcmovnu
loopne
lods
sub
push
clc
stos
xchg
stos
jle
push
cmpsb
lods
testl
pop
sbb
or
adc
pushf
push
jnp
clc
in
mov
xorb
mov
and
cli
push
outsb
loopne
mov
ss
fsub
mov
and
cmp
cmp
pop
addl
pop
jnp
and
dec
neg
add
sub
imul
and
mov
adc
dec
push
adcl
push
xorb
pop
push
jge
cli
mov
in
leave
add
add
pusha
inc
addb
jbe
jmp
incl
adc
xchg
pop
cmp
out
jae
inc
sub
lahf
inc
inc
sbb
pop
mov
pop
cltd
sarl
pushf
test
popa
or
pop
insb
repnz
cmpsb
mov
outsb
cmp
out
insl
add
rol
imul
cltd
inc
in
jl
iret
mov
hlt
adc
inc
inc
xlat
sti
adc
fsubrp
jns
add
sbbb
movsl
dec
mov
aaa
jp
pop
jl
dec
add
ds
call
sbb
and
loopne
mov
mov
cmp
or
mov
ret
lret
lods
je
xchg
xor
cmp
nop
pop
aam
sbb
fs
inc
nop
call
aaa
cmp
test
cmp
push
popa
pop
inc
mov
or
jge
stos
xchg
addr16
xchg
dec
aam
or
roll
in
ret
cmp
in
dec
inc
or
push
dec
shll
add
mov
scas
adc
add
gs
lret
mov
bound
mov
inc
stos
popf
lds
xor
push
aas
or
stos
pop
das
adc
adc
fwait
xchg
subb
mov
pop
out
xchg
hlt
jge
ficomps
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
loopne
es
push
adc
sub
icebp
pop
xchg
hlt
mov
sub
jle
pop
dec
and
push
mov
fs
fisttpl
ljmp
fwait
push
cld
es
and
mov
pop
in
pop
cmp
mov
lods
mov
inc
out
sub
scas
push
mov
rorl
test
decb
mov
jo
sbb
sar
enter
mov
adc
push
loope
inc
mov
jnp
push
jo
inc
das
scas
push
mov
in
fdivrl
outsl
notb
or
leave
in
sbb
mov
out
cmp
xchg
inc
movsb
add
jns
lcall
mov
fwait
scas
jle
inc
hlt
orb
jg
adc
stc
je
push
sbb
ss
hlt
test
cmp
rol
insb
rcrb
leave
mov
hlt
mov
add
push
inc
enter
push
mov
sarb
sub
lret
sbb
pop
andl
cmp
outsl
mov
mov
stc
xor
lods
das
pusha
dec
inc
rcrl
mov
cmpsb
mov
pop
es
xor
pop
stc
in
test
xchg
outsl
cmc
insb
sub
fisubrs
and
cld
push
stos
sub
adc
lret
mov
jb
and
adc
pop
lcall
xlat
push
or
test
addr16
mov
adc
ss
pop
lret
jmp
les
or
add
push
outsl
dec
jns
into
xchg
mov
inc
jbe
mov
or
les
shrb
in
add
pop
movsb
mov
jecxz
mov
sub
dec
mov
imul
subb
shl
sub
in
mov
push
xor
test
mov
stc
xor
hlt
clc
or
bnd
add
push
pop
mov
ljmp
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
fidivrs
enter
test
adc
sbb
sub
jmp
push
jl
and
std
andb
shll
mull
cs
pop
jbe
in
mov
add
xor
or
scas
pop
add
aaa
popf
pop
ss
test
add
push
movsl
fisubrl
cmp
stc
test
inc
repz
pop
mov
dec
out
roll
jnp
ror
outsl
int
sbb
loope
cld
xor
loopne
adc
or
std
xor
imul
inc
push
cmp
repnz
nop
jb
xchg
cmpsb
adc
cmp
scas
mov
cmp
adc
outsl
in
sbb
pop
imul
xchg
jmp
nop
adc
cltd
clc
jno
hlt
add
inc
in
lock
pop
fistpl
sub
scas
jo
lahf
adc
inc
lock
xchg
mov
mov
inc
adc
cmp
dec
adc
das
dec
xor
mov
inc
or
cli
imul
or
aad
adc
repz
sbb
icebp
mov
cmp
enter
adc
pusha
cwtl
aam
ret
push
fs
push
push
out
and
sarb
and
jge
pushf
jp
out
pop
fadd
sub
add
xor
call
je
mov
jb
lds
shr
pusha
cltd
mov
cld
jne
xchg
mov
jnp
nop
lods
cmpsb
mov
dec
xor
enter
mov
push
dec
imul
fistpl
cld
sub
out
das
and
sbb
adc
pop
push
jp
mov
leave
pop
scas
lret
mov
into
ljmp
cmp
push
inc
inc
lret
push
push
xor
jmp
aaa
sbb
iret
fistps
push
adc
cmp
sahf
sbb
mov
inc
and
mov
or
mov
rolb
xchg
sub
outsl
mov
ljmp
mov
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
adc
daa
mov
jge
sbbb
jl
jb
xor
rcrb
call
mov
dec
nop
cmpsl
jb
push
push
pusha
jg
das
fmuls
outsl
test
cmpsb
in
pop
ror
cltd
iret
lret
cmp
stc
dec
pop
jnp
xchg
or
shll
cmp
cmp
out
xchg
mov
pusha
jp
add
out
mov
push
lods
repnz
mov
jmp
inc
lds
sar
stos
pop
lock
bound
push
and
jno
sahf
adc
jnp
inc
jg
mov
jo
cmc
popa
xchg
sbb
sbb
push
test
pop
incl
outsl
fsubrl
inc
or
rcrl
and
jno,pt
sub
push
ror
or
cmp
sbb
dec
outsl
movl
stos
add
stos
lcall
dec
repnz
and
ljmp
aas
sub
shrl
pavgw
int3
movsb
fs
popa
les
fs
jl
cmovp
insb
fisubl
xchg
in
xor
xchg
cmpsb
test
test
enter
enter
pop
and
leave
pop
push
pushl
pop
in
js
int3
call
push
shlb
repz
stc
div
adcb
xlat
jb
mov
pop
lret
pop
loope
mov
mov
xchg
xchg
pop
add
ds
and
fisubs
cmp
jne
mov
dec
cmp
xchg
dec
add
lcall
lods
lods
adc
ds
cmp
sub
pop
arpl
in
mov
lahf
shlb
loop
sbbl
aaa
outsl
stos
dec
mov
loopne
xor
lcall
sbb
xor
push
adc
inc
xor
mov
out
and
jl
dec
add
nop
jg
es
xchg
xor
movl
sub
mov
movl
jmp
adc
add
jnp
bound
ss
sti
sbb
cmc
pop
adc
adc
pushf
push
popf
xchg
sub
ljmp
test
sub
sahf
mov
pop
mov
sbb
sub
adc
ficomps
inc
inc
loop
scas
rol
jmp
inc
int3
inc
add
add
jne
stc
xlat
in
adc
cmp
dec
and
jp
xorl
push
mov
xor
test
jg
mov
fwait
icebp
sbb
inc
mov
imul
mov
or
dec
add
adc
stc
addl
add
add
add
mov
push
sarb
adc
out
loopne
inc
jbe
fldt
aaa
into
pop
xlat
adc
jl
arpl
daa
cmp
push
inc
mov
cmp
gs
xchg
cwtl
fs
sub
push
in
mov
fxam
push
ljmp
dec
jge
scas
mov
popa
scas
or
or
push
gs
movsb
push
hlt
sbb
mov
repz
ret
insb
shl
insb
inc
jmp
mov
aas
mov
xor
pop
mov
mov
lods
mov
lea
enter
shll
inc
push
in
adc
mov
xchg
cmp
shrl
test
mov
ja
fstps
test
outsl
dec
pop
in
lods
icebp
pop
mov
mov
jge
mov
fidivs
mov
or
sbb
mov
mov
and
pop
fnstcw
jnp
ljmp
cmp
hlt
loope
cwtl
add
xor
add
mov
loopne
sbb
push
pop
pop
push
jp
mov
mov
push
push
aas
les
jo
mov
icebp
lock
mov
clc
scas
and
pop
pop
cmovge
pop
rcr
shlb
adc
xchg
or
xor
or
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
sbb
stos
pop
adc
adc
sahf
mov
sbb
test
cwtl
negl
loopne
fwait
ljmp
adc
stos
mov
pushf
jge
xlat
call
mov
jbe
add
inc
dec
test
fnstsw
ja
jns
mul
hlt
int3
mov
out
mov
add
in
gs
repz
call
and
push
arpl
and
mov
test
pop
cmpb
loop
adcl
push
gs
out
xchg
push
jns
sbbl
xor
bound
xor
inc
fbstp
mov
mov
cmp
clc
cli
or
test
aaa
jmp
mov
xchg
in
inc
mov
cmpsb
sbb
mov
cmp
scas
pop
sub
andl
dec
loopne
cmp
sub
dec
test
jge
jo
add
cmpsb
scas
icebp
mov
popl
sub
addl
test
jne
leave
movsb
sbb
jo
xor
and
jb
inc
sbb
stc
pusha
scas
out
inc
mov
loop
mov
pop
clc
imull
in
ss
cmpsl
iret
test
aam
sahf
or
or
jo
xor
jne
xor
mov
ret
and
adc
dec
sub
fmull
xchg
xchg
in
ss
sub
testb
add
sarl
sbb
fildl
sub
cmc
stc
jg
xor
call
jnp
mov
mov
jp
pop
xor
imul
cmpsb
or
dec
lret
cmp
xchg
push
and
sub
push
xor
dec
fadds
jl
lret
std
dec
pop
loop
pop
jb
jp
adc
jb
xor
sub
pop
push
xchg
leave
sub
fidivs
dec
or
into
xchg
imul
mov
lcall
rorl
push
xor
push
jecxz
adc
or
shlb
ljmp
lods
cmp
insl
sub
call
cwtl
add
stos
scas
into
enter
adc
aas
jle
movsb
push
mov
ja
dec
push
pop
jno
fmul
daa
sub
dec
lds
test
and
push
xchg
sub
lret
mov
nop
pop
cmpsb
add
in
jns
sbb
pop
cmpsl
cmc
dec
push
dec
cmpsl
cmp
push
xor
pop
mov
movb
stos
cmp
lea
in
adc
or
sbb
stc
sbb
and
data16
lret
fwait
inc
fiaddl
push
xchg
mov
inc
push
popa
lret
or
divb
sbb
cltd
or
add
inc
and
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
insb
push
adc
adc
jp
enter
inc
dec
cmp
adc
inc
fnstsw
repz
daa
cs
push
fsincos
lds
and
jbe
cli
call
outsl
pop
add
jne
pop
push
insb
lea
xor
outsl
adc
xchg
mov
mov
pusha
add
sub
inc
adc
iret
mov
in
pop
pop
jbe
loopne
jns
lea
and
iret
jbe
pop
sbb
and
mov
mov
cwtl
adc
push
test
leave
jo
push
lcall
dec
add
jae
cmp
lods
jnp
sub
mull
lds
mov
and
or
jbe
in
inc
jno
xchg
adc
inc
adc
orb
inc
sub
lock
add
xchg
sbb
cmpsb
cmp
and
xchg
push
ficompl
loopne
and
call
cs
inc
jno
lock
push
rorb
pop
mov
xchg
sub
push
imul
jns
and
dec
mov
hlt
fwait
das
or
adc
xor
mov
dec
xor
mov
sbb
dec
fisttps
in
fadds
pop
cli
and
pop
lcall
push
shrb
push
dec
push
sub
scas
rcr
xchg
push
dec
movsb
sbb
ss
adc
cmp
sub
lret
aam
call
inc
mov
and
push
clc
decl
sbbb
add
test
cmp
out
scas
cwtl
mov
mov
gs
mov
mov
dec
sbb
sti
stos
in
inc
xchg
mov
jno
insb
push
or
mov
outsb
mov
add
stc
xchg
and
pusha
test
addr16
enter
inc
fiadds
sahf
sbb
mov
cmp
and
pop
rcrb
jbe
cmc
cmc
mov
ljmp
fsubs
cmpsl
cs
cli
mov
aam
xor
lods
inc
imul
call
cmpl
sti
mov
lret
es
dec
addr16
mov
insl
push
pop
popa
lock
scas
mov
hlt
call
adc
xor
repnz
xor
mov
pop
mov
or
jb
and
cs
repz
jg
and
fwait
inc
mov
push
inc
popa
fbld
subl
fwait
push
ds
push
dec
pop
pop
jg
loop
cmp
pop
inc
outsl
sarl
add
daa
push
repnz
inc
mov
dec
cld
mov
inc
ja
mov
mov
addr16
xor
pop
and
loop
jne
dec
out
xchg
int3
loop
xchg
pop
add
adc
and
movsl
aad
push
push
dec
repz
addb
sbb
repnz
inc
lahf
movsl
ds
dec
mov
or
lods
das
insl
mov
mov
mov
mov
pop
add
pop
repnz
jnp
jg,pn
cmpsb
repnz
cmc
lds
fisubrs
jecxz
cmp
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
