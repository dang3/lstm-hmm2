push
mov
sub
mov
mov
jmp
adcb
shrl
insl
jle
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
and
pushf
sub
mov
dec
fcmovnu
xor
add
push
js
cmpsb
mov
out
ss
mov
jb
leave
sbb
push
rcrb
ret
aas
aas
pop
dec
mov
dec
enter
mulb
adc
mov
xchg
xor
jp
shll
in
adc
add
movsb
sbb
or
test
test
idivl
inc
cli
mov
das
jne
xchg
sub
dec
sub
rolb
faddl
inc
movsl
mov
mov
and
cli
adc
int
ds
mov
aas
rcrb
rorl
jae
or
push
orl
sbb
or
sub
jecxz
mov
pop
fwait
test
jb
fwait
xorb
in
mov
lea
mov
jns
out
rorl
adc
popa
jne
cmpsb
imul
add
xchg
add
loope
adc
xor
or
in
out
fwait
out
pop
cmp
addr16
pushf
jge
sahf
add
popf
xor
pop
cltd
rol
mov
push
mov
jp
xchg
dec
orb
mov
repnz
scas
cmp
ret
lods
mov
mov
sbb
popf
add
xor
push
cmp
lret
mov
imul
loope
loop
xchg
movsb
sub
or
iret
lret
incl
cmp
mov
and
cmpsl
sbb
negl
repnz
xchg
inc
imul
and
js
sbb
aad
push
into
stos
aad
dec
repz
test
sbb
dec
aam
mov
add
daa
mov
inc
pop
pop
sbb
mov
sbb
scas
loop
mov
int3
add
jp
dec
imul
xchg
fs
hlt
pop
daa
push
or
xor
pop
and
push
idivl
mov
mov
cmp
mov
adc
lcall
ret
daa
mov
xor
fstpt
mov
mov
movsl
pop
push
cmpsb
dec
adc
jnp
popl
lods
das
jno
sti
out
jbe
mov
jecxz,pn
mov
cmp
xchg
mov
xchg
psubw
lds
enter
xchg
shll
aad
lock
jle
add
sub
dec
adc
in
mov
mov
mov
leave
jo
repnz
pop
fsubs
icebp
insb
ficoms
xlat
push
inc
shll
sub
pop
or
pop
push
push
sbb
jl
scas
arpl
jp
aam
pop
xchg
insl
sub
jg
enter
int3
mov
test
insb
shrb
adc
iret
shll
scas
leave
gs
cmp
pop
fnstsw
push
les
mov
lret
sahf
mov
testl
xchg
mov
leave
jae
jle
pop
cli
pop
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
hlt
xor
outsl
jge
jle
mov
enter
fcompl
sub
sub
cmp
ret
lds
imul
lea
divl
xchg
jmp
lcall
xorb
in
pusha
xchg
ds
pop
fdivrl
lahf
jns
sub
sbb
xor
add
inc
push
rol
cmp
pop
shl
cwtl
je
push
sub
in
adc
ror
jns
icebp
aas
mov
pop
xor
add
mov
push
xchg
sub
and
jg
lods
push
dec
pop
mov
xchg
aaa
sub
mov
scas
hlt
pop
repz
lcall
dec
jb
test
fnstcw
shl
scas
dec
and
sbb
pop
cmpsl
jno
stos
mov
inc
sbb
lods
inc
aad
test
into
sbb
loope
out
insb
stc
and
sub
adc
mov
jne
aam
sub
cmp
scas
repz
add
mov
mov
outsl
int3
lds
push
pop
repnz
sbb
gs
push
incl
push
or
pushf
call
dec
xchg
cmp
outsl
jge
imulb
or
cmc
test
rolb
into
ja
jb
dec
inc
mov
dec
fdiv
andl
cmpsl
sub
cmp
dec
in
cmp
out
scas
or
jne
sbb
test
jmp
jnp
adc
adc
xchg
sbb
xchg
loop
loope
xor
mov
cmc
fildll
xlat
hlt
sbb
stos
mov
adc
cwtl
jo
cmp
push
popf
imul
and
dec
aam
test
cmp
aad
fidivrl
jg
outsb
jo
incb
and
imul
fnstenv
rolb
sbb
add
xor
sbb
cmp
fisubs
push
test
ja
dec
in
mov
cmpsl
hlt
xchg
aas
pop
imul
jne
jp
xchg
insl
mov
push
hlt
pop
ja
out
lea
fs
inc
or
xlat
jno
and
sbb
mov
pushl
into
gs
mov
fwait
jns
push
nop
andl
aaa
in
inc
xchg
xchg
fwait
sahf
cltd
mov
xor
or
js
xchg
sub
aas
and
into
fwait
mov
roll
leave
sbb
cld
xor
loope
jp
add
xor
loope
jmp
inc
test
cmc
jmp
jb
loope
inc
and
loope
in
lds
in
dec
inc
pop
jge
sbb
shrb
and
in
push
push
push
push
or
nop
lods
cmp
shll
xchg
movsb
push
and
mov
lock
jp
nop
cmp
loope
shlb
fdiv
dec
shld
enter
mov
lds
add
mov
das
pop
lahf
mov
sbb
inc
xchg
cltd
cld
fadd
ficomps
pusha
outsb
std
cmp
xor
stc
iret
scas
clc
pop
fnsave
jg
out
scas
ret
subb
push
xchg
sub
rcl
icebp
hlt
das
and
test
or
test
lret
aaa
repz
mov
stos
jae
popf
ret
cmp
sbb
cmp
test
mov
call
jge
inc
add
in
sub
pop
mov
dec
cmp
push
ja
sar
dec
xchg
js
cltd
pop
daa
loopne
jb
jo
cmp
addb
loopne
add
sbb
inc
fistl
pop
push
xor
shlb
adc
mov
mov
sar
repnz
aaa
cltd
les
movl
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
push
mov
jns
jle
jge
jle
jbe
leave
inc
dec
sbb
sahf
cmp
stos
dec
fadds
popf
add
add
jnp
shll
sub
stc
mov
mov
mov
sti
or
lcall
push
xchg
pop
repz
testb
xlat
ss
js,pn
sbb
in
test
mov
lds
or
lret
mov
cltd
aad
mov
or
mov
add
daa
in
test
pop
lret
dec
dec
in
insb
js
arpl
roll
jp
sahf
add
sub
jle
push
lret
repz
jmp
fs
ss
aaa
jns
scas
orb
cmc
xor
mov
repnz
adc
dec
cmp
fisttps
neg
inc
xchg
test
and
mov
pop
sbb
jl
stc
test
dec
lea
ret
cld
fistl
fidivrl
jnp
flds
cmp
imul
dec
sti
fdivs
jns
insb
or
sbb
insl
sub
test
pop
jecxz
adc
sub
repz
push
lea
xor
out
cs
testb
or
push
add
outsl
shrb
add
pop
xchg
pop
loop
xchg
sub
mov
daa
stos
repnz
xchg
out
into
push
insl
xchg
ret
addr16
jge
push
in
in
cmp
pop
dec
cld
dec
gs
stos
push
jo
jae
cmp
jg
pop
mov
ja
jg
mov
sbb
lea
mov
mov
nop
and
fidivrs
out
int3
mov
sub
in
mov
loope
addr16
jecxz
cmp
loope
test
sbb
int
outsl
dec
mov
lods
or
or
xchg
inc
xor
jecxz
pop
aam
sbb
mov
sahf
int3
or
negl
mull
cmp
test
aaa
lret
add
and
imul
data16
popa
mov
and
mov
fsubl
mov
add
pop
arpl
pop
cmp
jns
pop
push
test
push
lds
sar
jns
inc
cmp
and
mov
dec
push
add
out
cmpsb
jbe
and
rolb
out
adc
push
clc
pop
lret
out
addr16
xchg
jge
push
imul
mov
mov
bound
pop
in
popf
mov
stc
jnp
arpl
imul
jnp
sub
jmp
aam
dec
jae
sub
push
adc
dec
jge
shlb
sbb
pop
adc
addl
stos
lods
mov
and
jge
nop
les
repnz
cmp
cmp
adc
gs
adc
sub
jge
cmp
sub
sub
add
icebp
popa
or
mov
dec
jo
in
out
mov
adc
rcrb
sbbb
stc
aaa
lret
inc
and
cmpsl
aam
pop
xchg
daa
xor
fmull
dec
lcall
or
cmp
mov
imul
ret
imul
cld
mov
xchg
ret
pop
sub
jecxz
dec
push
aas
imul
inc
mov
rolb
mov
mov
aad
mov
outsb
xchg
out
mov
int3
sbb
sbb
pop
xor
cmp
scas
or
mov
int
adc
fucomip
aas
lsl
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
scas
push
scas
mov
jle
outsl
jge
jle
sti
stc
imul
add
stc
incb
mov
xlat
rol
pop
scas
fstpl
pushf
xor
shl
ficoms
dec
jo
imul
xchg
pop
aas
or
inc
sti
insl
out
mov
xor
lret
cltd
jbe
cmp
push
and
insl
popf
pminsw
lds
lods
sub
and
js
sahf
push
daa
repz
sub
dec
outsb
inc
and
les
jnp
ljmp
cltd
lret
or
dec
jmp
add
jecxz
dec
dec
xlat
and
gs
aad
pushf
add
mov
in
fisttpll
pusha
popa
ret
movsb
mov
fs
mov
or
test
movsl
pop
int
jae
mov
cmp
popa
xchg
call
cmp
push
decl
pushf
mov
das
ficoms
ss
or
dec
lret
adc
es
mov
aas
sub
repnz
sti
lahf
jo
sub
push
sbb
lahf
dec
cmpsl
inc
dec
mov
es
or
adc
pop
add
cmp
std
sbb
js
pop
mov
gs
mov
data16
push
jne
test
mov
enter
js
jns
repnz
rcr
idiv
daa
pop
aam
call
mov
push
jl
pop
cmp
mov
pushf
fwait
jp
jg
fsubrl
std
aad
lea
lahf
pop
mov
adcb
push
andb
insl
lods
add
shll
mov
add
cltd
xor
sub
mov
cmp
pop
in
sub
cs
or
xchg
stos
int3
add
cli
inc
jge
jne
ret
cmpsb
arpl
repz
ret
xor
xchg
fistpl
fisubrs
mov
dec
sub
or
subl
es
push
or
dec
loop
adc
lret
cmp
dec
pop
iret
mov
out
ljmp
inc
xchg
movsb
or
aaa
test
inc
or
xchg
in
mov
outsb
js
aas
mov
out
xlat
cmp
aam
div
stos
add
enter
or
dec
divb
ret
jne
cmpsb
movsb
cmp
stos
lods
es
fxch
or
inc
sbb
mov
fwait
mov
jge
mov
scas
andb
cs
mov
cmpb
je
xor
jmp
inc
mov
stc
add
stos
je
push
inc
aaa
cwtl
andb
cmp
xlat
test
push
jbe
cld
sbb
cmpsb
into
adc
dec
pop
xchg
xchg
bound
xor
popf
adc
push
es
cld
mov
cld
lods
out
xchg
cmc
pop
jnp
lret
or
xchg
xchg
inc
sub
cs
mov
push
pop
fmull
jl
mov
stos
aaa
ljmp
mov
aas
xor
mov
jnp
adc
jmp
shl
fdivp
lret
and
push
inc
lods
or
stos
fisubrl
test
mov
sub
sti
cmc
sub
mov
add
jmp
mov
add
xcrypt-cbc
cmpsl
nop
leave
das
pop
inc
out
dec
std
fldl
fistpll
mov
mov
cmp
adc
add
lahf
hlt
addr16
dec
lea
or
aas
pop
and
imul
xor
daa
loopne
and
test
shl
inc
ja
push
ret
inc
je
inc
addb
push
push
fldl
sbb
xchg
jg
sub
test
xor
and
lea
inc
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
mov
mov
jge
jle
int3
jne
dec
out
shlb
es
jnp
stc
mov
enter
cmp
mov
push
pop
mov
jns
cmp
add
testl
push
pusha
xlat
nop
call
les
pop
add
or
mul
xchg
mov
in
jnp
or
pushf
repnz
xlat
fldl
cmpsb
adc
inc
leave
mov
xor
jbe
ds
pop
pop
inc
add
lods
adc
push
xchg
xor
shrl
out
and
push
mov
std
add
cmp
sti
leave
cmp
repnz
iret
and
add
jge
stc
cltd
push
lods
lds
mov
shlb
and
jbe
in
dec
out
outsb
mov
or
sub
inc
adc
pop
andb
arpl
pushf
aam
mov
mov
adc
mov
xchg
xchg
lahf
push
test
mov
pop
test
and
dec
cld
or
les
movsb
sub
faddl
jl
rcll
cmpsl
or
xchg
adc
push
adc
aad
jbe
cld
push
jo
fsubrl
dec
or
or
loop
loope
xchg
cmc
xor
je
sbb
add
cld
mov
xor
sbb
negb
mov
aas
and
imul
stc
or
push
test
sub
push
adc
sbb
pop
lret
mov
cmp
mov
mov
lret
std
repz
movb
xchg
lcall
rcrl
js
xchg
imul
in
test
lods
das
push
in
scas
and
cmc
xor
fldenv
rolb
sub
sbb
ret
mov
cmc
hlt
mov
xchg
push
cmpl
add
popa
ret
out
dec
ljmp
outsl
mov
outsb
cmc
xchg
clc
dec
xor
sub
imul
sbb
push
out
add
fsts
mov
mov
xor
clc
mov
inc
dec
push
scas
jae
aaa
dec
push
js
inc
inc
fbstp
pop
sahf
ficoms
push
ja
cmp
cmp
out
jae
cmp
inc
or
inc
sarl
or
fsubr
mov
cmpsb
sahf
lret
xchg
adc
and
int
mov
int3
mov
jg
fiadds
nop
inc
fnsave
call
jmp
jbe
popf
cmp
in
jp
inc
xchg
jl
mov
cmp
jmp
ja
sub
jo
repz
mov
ljmp
fadds
cmp
inc
mov
push
xchg
sbb
mov
add
ss
inc
rcll
insl
inc
imul
pop
gs
mov
mov
test
inc
push
sbbb
insb
lcall
subb
mov
xlat
sbb
push
jg
movsb
rcrb
cmp
and
push
mov
out
or
sub
outsb
rcrl
imul
jmp
pusha
fmull
sub
xlat
into
push
or
iret
sub
loope
xchg
inc
cmc
fisubrs
cmpsb
xchg
out
mov
push
movsl
popa
mov
inc
cmc
mov
inc
or
push
pop
into
cmp
inc
ljmp
out
and
xlat
into
dec
call
es
lock
jb
outsb
and
lahf
lcall
dec
jle
jbe
sbb
push
xchg
fadd
outsl
or
xchg
jmp
dec
aam
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
mov
out
dec
out
xchg
or
in
outsb
jbe
mov
in
mov
fs
pop
roll
repz
nop
or
adc
xchg
sbb
stos
mov
or
pop
out
icebp
mov
lcall
fdivrs
mov
outsb
lock
enter
sub
inc
test
cmp
adc
push
or
das
std
mov
aam
mov
rol
xchg
repz
push
jo
lods
mov
iret
pushf
mov
les
pop
loop
nop
int3
inc
pop
or
iret
mulb
push
adc
add
mov
pushf
mov
inc
pop
dec
xor
sub
mov
jb
out
lds
jecxz
lret
movl
sbb
xchg
pop
ficoms
xchg
sub
pop
add
jmp
pushf
jbe
hlt
jmp
dec
loope
in
es
insl
loop
mov
sub
in
hlt
rol
hlt
xchg
pushf
jns
sub
dec
cltd
sub
test
jl
clc
mov
sub
fs
inc
mov
jl
insl
inc
idivb
sub
lret
adc
ret
je
push
jns
pop
lock
js
jo
jl
sub
popa
mov
movsl
fadds
and
pop
ja
inc
mov
jp
cmpsl
adc
lcall
loope
mov
popa
insl
inc
stc
lret
push
sti
stc
lock
mov
popf
loop
stos
int3
dec
xor
pushf
or
cltd
push
rcrl
imul
js,pn
stos
jns
push
movb
xor
int3
or
adc
js
cmc
inc
iret
stos
adc
leave
daa
add
test
add
jge
add
xchg
movl
std
cld
cmp
cmc
out
pop
mov
loope
in
add
leave
dec
js
pop
mov
dec
xor
orb
or
or
pop
jge
arpl
or
jae
jbe
xor
pop
xor
mov
jecxz
imull
test
pop
or
xchg
mov
inc
ror
lds
movsl
and
daa
xor
jp
stos
xor
inc
push
out
inc
sub
pop
rorb
lahf
adc
mov
push
aaa
stos
ret
aad
adcb
fiaddl
lahf
movsb
mov
sub
xlat
pop
mov
fsubrs
adc
lds
push
aas
mov
pop
inc
pop
sub
xchg
and
fnstsw
or
loop
push
mov
cli
repz
pop
cmp
xchg
xchg
daa
test
fs
and
repnz
push
push
int
push
mov
jnp
push
sub
xchg
ror
fisttpll
cs
lahf
stc
push
xorl
insl
insl
lcall
jne
inc
subl
pop
push
std
pop
push
add
sbb
addr16
sbb
pop
cmp
jmp
jo
popf
or
lahf
stc
add
test
or
subb
in
push
adc
or
mov
movsb
lret
or
out
add
sub
mov
jmp
sbb
mov
push
in
sbb
mov
repnz
std
or
jecxz
inc
rol
das
stc
cltd
adc
push
sar
push
int
aaa
insl
pop
jmp
jmp
movsb
in
cmp
insb
mov
dec
or
cmp
leave
xlat
icebp
nop
jmp
fwait
xchg
push
pop
mov
imul
iret
sbb
mov
repnz
cltd
add
cmp
dec
dec
pop
pop
fsub
add
cmc
hlt
adc
add
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fldcw
cwtl
or
outsl
jge
jle
repnz
pop
mov
fdivs
pushf
scas
cmp
pop
lods
hlt
mov
cmpsb
aas
sub
cs
dec
mov
add
sti
icebp
push
and
adc
les
mov
pop
cmp
push
push
in
or
movsb
jns
push
xor
rcl
scas
mov
movsl
jb
imul
sahf
arpl
xchg
shr
sub
es
and
fs
or
mov
cwtl
sub
inc
mov
cmp
les
mov
lods
dec
xchg
sub
test
call
pushl
inc
add
sti
sub
mov
sbb
adcl
movsl
stos
pop
xchg
flds
pusha
outsl
adcl
xchg
adc
cmpsl
dec
xchg
xor
fwait
lea
pop
cmp
mov
in
mov
pop
hlt
ret
inc
fidivrs
inc
adc
adc
jne
and
lds
cli
push
xor
fs
shl
jnp
sbb
idivl
jmp
adc
jb
lds
fdivrs
inc
dec
ljmp
aas
xor
int3
xchg
xchg
xor
dec
jo
sub
cmp
sbb
sbb
test
or
sub
ss
jle
popa
insl
push
test
into
pop
jae
push
rcll
pop
cwtl
inc
mov
dec
inc
push
dec
jp
jae
cmpsb
notb
adcb
sbb
test
in
dec
pop
xchg
sub
stos
dec
jnp
mov
fstl
cld
aaa
mov
adc
andps
cmp
iret
xchg
adc
rcr
les
jmp
dec
push
scas
mov
sub
sbb
in
andb
in
negb
std
mov
das
addr16
iret
fs
pop
xorb
pop
mov
dec
pop
sub
xchg
andb
into
out
mov
and
lods
dec
sbb
adc
leave
setne
out
sbb
iret
jo
cmpsl
jg
cld
gs
push
shr
sar
add
xchg
out
es
rcll
aam
data16
and
in
cmp
pop
bound
inc
daa
push
mov
repz
clc
es
or
lret
pop
sti
xlat
cmp
pop
mov
ja
xchg
les
loop
fiaddl
jae
add
loopne
jge
xchg
pop
mov
cmp
dec
mov
fucomip
movsb
es
arpl
pop
aad
mov
and
repz
fildl
dec
adc
cwtl
jmp
mov
add
outsb
fisubs
push
xchg
pop
pop
scas
push
jge
dec
mov
adc
cli
adc
je
sbb
nop
shll
push
das
rcll
pop
xor
fnstenv
pushf
xor
sbb
notb
pop
and
dec
sahf
repnz
sahf
pushf
xor
push
fnstcw
cmpsl
icebp
es
out
and
testb
std
pop
hlt
pop
enter
sti
sbb
aas
fs
sbb
add
stos
push
insb
fbld
pop
mov
inc
mov
sarb
jae
jle
xchg
dec
xorl
repz
push
nop
and
adc
xor
mov
clc
icebp
lret
popa
lcall
inc
jmp
js
enter
jne
add
ja
addr16
scas
imul
in
mov
sub
call
in
int
outsb
lahf
jl
imul
loopne
insb
popl
daa
xchg
jge
dec
repnz
mov
add
lods
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
cmpsb
repnz
mov
jle
xchg
lret
pop
data16
and
gs
add
cltd
jp
sub
add
ficompl
add
das
sbb
adc
into
aas
cmp
ds
popa
fucomip
cltd
jno
inc
ret
push
ss
hlt
loopne
cmpsl
sub
push
shl
xchg
call
or
cmp
mov
cld
ss
push
dec
sahf
push
jl
and
mov
cmovae
sub
loop
insl
inc
or
add
stos
xor
jns
mov
andb
push
int3
data16
lea
and
mov
mov
pop
add
cmpsb
xchg
scas
add
pop
cltd
sub
popa
push
mov
ljmp
bt
mov
das
clc
nop
loopne
movsb
cs
adc
daa
push
or
mov
xor
loope
inc
je
jp
adc
mov
outsl
add
cmp
xchg
divb
es
js
mov
add
mov
lcall
inc
pusha
stos
sub
or
inc
cld
dec
jge
mov
push
imul
jl
fisubl
sbb
test
scas
lret
pop
and
jae
push
push
jecxz
les
ss
es
loope
sahf
dec
sub
mov
js
fildl
imul
lahf
repz
sahf
adc
iret
add
stc
cs
daa
loopne
mov
mov
jmp
cmc
jp
je
xor
jnp
loopne
in
mov
jne
xor
pop
xchg
push
hlt
test
push
cmpsb
mov
jmp
frstors
cmp
jle
inc
dec
iret
jb
mov
das
jp
scas
pop
push
mov
test
rorb
add
mov
add
lret
jle
push
jns
pushf
clc
inc
adc
sub
and
inc
xor
mov
cmp
jge
lods
mov
sbb
mov
decb
les
pop
clc
jmp
mov
jmp
repz
jge
pusha
pop
pop
aas
fs
jmp
pop
mov
shrl
add
cmp
xchg
test
jno
pop
cmpl
pop
or
push
jle
cwtl
push
cmc
cmp
lret
push
cld
jmp
inc
add
mov
movsl
adc
jns
sahf
inc
test
adc
xor
add
inc
stos
sub
das
aaa
inc
out
sbb
clc
pop
aad
push
cmpsl
jb
out
jnp
call
push
push
ljmp
jbe
dec
jnp
mov
les
or
dec
cmp
jmp
mov
cmpl
rcl
cmp
rcr
jne
sbb
in
mov
sub
inc
movsb
dec
imul
jnp
leave
sahf
jns
mov
sub
je
and
shrb
stos
in
in
mov
cmp
add
cmp
push
or
inc
popa
ds
mov
cwtl
in
movl
ss
mov
cwtl
pop
arpl
scas
popa
xchg
xor
mov
xchg
lret
mov
and
xchg
stos
sbb
or
mov
or
jge
lcall
mov
and
push
push
mov
and
inc
jae
pop
repnz
pop
std
mov
jb
mov
stc
arpl
dec
mov
push
push
add
cmp
cmp
jbe
mov
cmc
cmp
mov
in
dec
repnz
sti
jb
sbb
lods
fstps
mov
dec
add
test
shr
cmpsb
outsl
pop
or
mov
inc
adc
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
push
adc
outsl
jge
jle
mov
mov
mov
cli
pop
xlat
mov
pop
mov
push
mov
mov
inc
add
in
mov
pop
shrb
mov
loop
pop
insb
lods
cmp
jmp
sbbl
cltd
loope
rol
inc
add
shl
pop
dec
adc
xchg
icebp
mov
lahf
jg,pt
inc
enter
lods
jo
iret
sbb
add
dec
je
test
jne
jp
or
sub
inc
ffreep
xchg
adc
and
adc
hlt
daa
nop
pop
push
loope
sub
rcr
iret
ficoms
mov
xchg
pop
test
mov
sti
sarl
or
testb
es
ds
call
popa
xchg
test
ds
jmp
push
cli
add
mov
jmp
cmp
lods
push
dec
je
pop
inc
test
fnsave
sbb
adcb
inc
xadd
mov
scas
add
and
fsts
push
and
pop
mov
push
movsl
sub
lds
mov
cmp
out
pop
lods
add
rolb
loop
nop
out
ljmp
push
repnz
insl
adc
adc
adc
in
add
mov
cmp
dec
lock
hlt
push
xchg
and
xor
int3
jbe
dec
push
out
mov
les
xchg
shlb
gs
sbbb
xchg
or
in
pop
jae
test
jge
inc
data16
aad
fsubs
repz
mov
xor
inc
hlt
arpl
cmp
leave
call
sbb
dec
mov
cli
ja
xor
fdivrp
or
loop
and
or
sub
or
dec
dec
orl
rcrl
cli
subb
inc
jb
stc
ss
fcmovb
fdivs
jno
push
out
cmp
mov
xchg
xchg
in
les
or
jp
lock
arpl
xor
push
dec
adc
dec
push
mov
loop
xlat
adc
pop
stos
xchg
insl
mov
repz
mov
mov
cmp
fwait
pop
xchg
fnstenv
adc
fs
mov
sub
mov
bound
jl
or
and
push
mov
loopne
mov
jnp
enter
jp
int3
mov
jp
pop
bnd
sub
fwait
je
nop
aas
xchg
ljmp
adc
add
aaa
adc
push
pop
les
add
push
shlb
andl
mov
cwtl
pop
and
sbb
push
jg
cmc
std
xlat
push
mov
xorl
jmp
lds
ja
lret
sbb
addr16
mov
jmp
sub
and
dec
mov
jle
gs
cmp
dec
dec
pushf
hlt
add
repnz
test
push
stos
and
in
out
scas
std
mov
cmp
sahf
shlb
pop
add
fisttpll
shl
fcoml
cmp
mov
in
fstl
mov
arpl
int3
incb
cmpsb
fisubrl
cmp
xor
pusha
mov
add
jnp
or
cwtl
cmp
enter
and
aad
jbe
add
ret
add
aaa
not
mov
and
repz
add
mov
pushf
jns
addr16
push
sti
pop
push
les
ja
shll
xchg
loope
or
push
icebp
inc
enter
lock
in
jae
cmpsl
test
mov
pop
rcrl
pop
sbb
aad
xchg
and
mov
mov
jb
rorb
ss
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
sbb
jle
outsl
jge
jle
push
jae
adc
and
insl
cmp
lret
and
in
xchg
popf
lcall
iret
fs
ds
jmp
movsl
and
faddl
push
in
outsl
cltd
stos
popl
sub
pop
push
sti
add
push
add
montmul
cmpsb
add
and
dec
inc
inc
xchg
mov
pop
jnp
mov
inc
incb
mov
data16
addr16
pop
ret
push
mov
mov
fadd
stos
inc
cwtl
sub
mov
gs
mov
xor
imul
fld1
aam
and
sahf
sbbl
and
fwait
and
sbb
push
push
movsl
scas
ss
jp
push
xchg
sarb
ret
ljmp
jne
add
lea
es
inc
insb
es
cmp
push
mov
imul
aad
test
or
add
mov
cltd
inc
sub
sbb
cmpsb
mov
jae
mov
loope
push
xor
push
sbb
popf
test
xor
pop
adc
in
outsb
jae
int
adc
jb
sbb
scas
pop
mov
fstpl
inc
bound
js
loopne
outsl
scas
jl
inc
test
cltd
or
push
inc
or
adc
mov
mov
xchg
xchg
mov
aaa
xlat
inc
icebp
lods
lods
and
test
les
inc
ja
testb
adc
stos
push
xor
xchg
in
xchg
jnp
mov
pop
loopne
xchg
test
xchg
ud0
ss
push
mov
xchg
lods
addr16
mull
push
call
fisubl
pop
xchg
jnp
dec
cmp
inc
lds
sti
dec
add
dec
add
xchg
cmp
dec
mov
xchg
adc
insb
and
dec
pop
bndstx
mov
xlat
or
call
sti
pop
and
insl
imul
flds
mov
stos
shrb
imul
js
or
jle
push
lods
in
add
adc
mov
cltd
loop
add
jne
in
inc
pop
in
mov
dec
cmp
arpl
fdiv
imul
add
adc
adc
andb
dec
imul
cmp
movsb
fistps
jg
cmp
ficoml
cmp
iret
and
adc
in
xlat
cmpsl
fs
js
ffreep
xchg
xchg
or
xlat
adc
repz
cmp
mov
je
jmp
ljmp
mov
and
cmp
cmp
ja
repz
inc
or
inc
outsb
add
lahf
aad
lcall
ret
hlt
ds
mov
push
adc
sbb
push
in
mov
sub
pop
adc
jmp
sbb
ds
jg
sub
mov
xchg
jge
ret
hlt
pop
outsb
dec
out
shl
mov
jge
dec
cmpsl
mov
add
int
dec
fists
xor
push
sub
stos
fstps
cwtl
pop
mov
lock
mov
cs
paddq
sub
arpl
es
inc
gs
xor
mov
xor
pop
fidivrl
stos
xchg
adc
mov
orb
or
scas
pop
orb
ljmp
in
loope
in
xchg
les
mov
das
ret
push
dec
cmp
jle
adc
mov
fwait
pop
mov
mov
movl
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
jmp
jle
outsl
jge
jle
mov
adc
cmp
sbb
xchg
outsl
pop
push
mov
mov
imul
sub
in
sub
lahf
in
movsb
stos
sub
or
mov
hlt
and
outsb
popa
pusha
std
or
push
pop
adc
pop
push
shrb
icebp
out
cli
aad
loope
test
xchg
or
lret
cmpsb
enter
ret
fwait
cmpsl
in
sbb
jmp
push
lock
cltd
and
cmp
xchg
ret
mov
ret
lret
incb
lock
adcb
jecxz
mov
enter
mov
dec
dec
je
dec
ret
bound
push
in
test
mov
shl
repnz
je
mov
mov
sub
cli
jbe
mov
mov
in
dec
sub
cmp
or
mov
mov
imul
xchg
add
or
jle
inc
cmpsb
js
sbb
icebp
jae
adc
cmp
insl
fadds
mov
lea
imul
pop
cwtl
mov
in
or
hlt
stos
mov
clc
adc
sbb
movsl
inc
fdivrs
pop
jae
movsb
xchg
mov
push
inc
cmpsl
jmp
pop
js
jmp
dec
and
in
int3
xor
adc
fs
sahf
stc
and
jmp
stc
xchg
dec
in
push
cld
aad
push
lea
mov
insl
add
inc
cmc
into
test
mov
cmp
pop
les
enter
cwtl
popa
mov
lret
xchg
xor
sub
mov
inc
scas
outsb
mov
nop
xor
iret
mov
test
mov
aad
frstor
fiadds
cmp
jo
test
xor
das
push
cmc
or
xor
cli
lahf
out
shll
inc
scas
cwtl
bound
ret
insl
xchg
pushf
lret
xchg
popa
loope
popa
cmp
sub
jge
lret
frstor
loop
pushf
adc
add
test
lcall
stos
les
rcr
inc
pop
jp
sub
sub
daa
push
stos
xchg
lods
xor
scas
push
xchg
into
dec
push
test
cltd
jl
stc
arpl
popa
je
pop
xchg
mov
ss
xlat
cmp
jmp
pusha
adc
cmp
push
add
sbb
aad
xchg
push
xor
push
inc
subb
pusha
pop
mov
inc
cld
lahf
cmp
enter
push
pop
inc
sub
rcrl
and
mov
inc
cmc
aas
mov
mov
dec
pusha
mov
nop
push
int3
std
int3
das
jns
pop
adc
inc
adc
pop
movsl
lods
pop
mov
add
mov
sahf
mov
pop
fwait
and
adc
xor
mov
xchg
jle
popa
shrl
push
lods
jae
lock
push
in
lock
jo
cmp
imull
or
sub
arpl
adc
add
add
push
testl
and
js
dec
sbb
cld
insl
clc
fcompl
cli
shll
ret
xchg
insb
add
stc
and
jge
outsb
mov
push
lea
movsl
jno
sbb
nop
mov
dec
mov
and
or
cltd
daa
aas
push
push
push
pop
movsb
clc
inc
xchg
leave
in
call
lcall
pop
aad
movsl
cwtl
bswap
in
aad
es
dec
mov
mov
mov
cmc
xchg
push
cmp
test
insl
pushf
push
sub
or
inc
imul
inc
mov
in
push
sbbl
mov
cmc
push
pop
cmp
mov
aaa
insl
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
shrb
and
jle
mov
sarb
cltd
imul
std
inc
add
data16
xor
jne
jns
mov
pop
xor
cmovo
mov
pop
mov
cltd
xchg
imul
xchg
pop
xchg
inc
lret
sub
inc
lods
cmpsl
adc
and
pushf
nop
pop
and
dec
cli
pop
sub
cmp
push
inc
push
rcrb
push
sub
test
xchg
inc
cltd
xchg
sbb
jns
adc
sub
repnz
sbb
mov
xor
cmpsb
or
inc
iret
cli
xlat
adcb
adc
sub
adc
and
pop
mov
and
repz
data16
popa
xor
mov
dec
cmpsb
mov
loopne
rorl
lcall
out
inc
sub
imul
fst
or
in
shll
lock
nop
or
inc
mov
imul
push
jo
xchg
popf
xor
mov
cmp
popa
push
mov
test
mov
incl
pop
push
pushl
pop
lods
jno
adc
xlat
dec
jge
test
aam
leave
movsl
add
mov
cwtl
aad
cmpl
inc
iret
dec
loopne
mov
fwait
adc
sub
bound
lahf
cmp
pop
data16
mov
inc
adc
xchg
pop
out
popf
push
and
hlt
pop
repnz
mov
mov
cmpsl
push
outsl
mov
sbb
push
mov
popa
jmp
pushf
pop
xchg
and
add
shrl
xor
push
mov
lret
sbb
leave
mov
daa
stc
faddl
push
andb
inc
popa
shl
int3
mov
mov
xor
lea
std
adc
add
repz
fwait
mov
mov
cmpsl
mov
scas
push
cmc
orb
rcll
xchg
loope
subl
push
and
test
cmp
addr16
sbb
xchg
rolb
jg
lcall
cmpsl
jle
test
jne
stc
add
inc
or
sbb
add
sub
dec
xchg
rsm
movsb
test
mov
test
inc
ljmp
and
fistpl
test
js
int3
cmc
pop
movsl
fiaddl
dec
stos
jno
jne
ret
int3
sub
daa
scas
imul
mov
or
jne
mov
in
int3
subps
pop
dec
ja
fdivs
dec
rcr
push
fstl
jns
fwait
iret
imul
inc
xor
test
adc
pop
movsb
mull
in
daa
pop
es
jmp
repnz
and
cmp
sub
or
icebp
lods
jno
cmp
movsl
mov
frstor
mov
hlt
sub
jo
pop
xchg
jns
sub
mov
iret
mov
mov
ds
and
subl
add
pop
out
arpl
dec
jp
mov
mull
stos
pop
mov
xchg
xchg
cli
adc
mov
xor
out
jl
xchg
jno
dec
test
ret
ds
ret
repnz
loop
jl
arpl
mov
out
out
rcl
xlat
fs
imul
mov
bound
js
test
popf
jmp
cli
jns
pop
sub
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
stos
ret
jle
jge
jle
xorb
lea
lret
cmp
shr
scas
adc
pop
mov
stc
dec
movsl
jecxz
push
sbb
fldenv
into
cmpsl
jmp
xor
push
jb
adc
test
add
cwtl
push
add
in
cli
pusha
fnstsw
xchg
and
std
roll
inc
cmc
subb
int
imul
sbb
adc
daa
lret
mov
std
add
push
mov
fidivs
adc
push
cli
xchg
and
mov
sbb
jno
cmpsb
jnp
mov
fdivs
clc
shr
jg
adc
clc
dec
fisttps
inc
and
test
fstpl
pushf
push
test
push
pop
xor
sbb
adc
lea
add
push
dec
jbe
cmpsl
movsl
ret
jns
addr16
mov
dec
mov
shrl
xchg
dec
lods
loopne
roll
test
jno
sbb
ja
push
ds
xor
push
rorb
inc
adc
sub
jo
mov
inc
xchg
pop
iret
aam
int
icebp
adc
dec
das
mov
aad
xor
sub
andb
jae
scas
pop
add
xor
sbb
xor
mov
sti
out
repz
stos
push
sti
loopne
ret
ficompl
mov
sbb
dec
xchg
sbb
mov
jbe
xchg
xor
cltd
inc
in
ror
cmp
dec
sub
outsl
mov
test
in
cs
imul
mov
sahf
sub
dec
cs
ja
cwtl
iret
sahf
rorl
xchg
scas
mov
push
push
cwtl
les
inc
jns
sub
leave
test
rcrb
push
repz
int3
insl
and
int
rorb
sbb
xchg
adc
out
pop
cmc
shrl
jnp
pop
sub
test
mov
jle
cmp
mov
lock
in
out
gs
out
adc
push
adc
mov
push
adc
jecxz
les
mov
adc
test
push
icebp
dec
fistl
push
push
mov
jb
push
cmpsl
aad
jae
in
and
les
push
scas
pop
les
push
dec
adc
decl
aaa
ror
or
les
add
jp
mov
data16
xchg
imul
add
into
mov
insl
in
adc
sbbl
rcr
inc
inc
sub
mov
fcomps
mov
cwtl
cmpsb
jp
xor
scas
out
fcoml
je
enter
cmpl
and
push
imul
test
arpl
add
mov
cli
enter
mov
dec
into
sub
mov
jle
lcall
pop
loopne
sub
xchg
popa
or
rorl
inc
inc
movsl
inc
lret
sub
ja
jmp
jle
stc
mov
or
ret
das
test
incl
sti
outsb
dec
push
rcr
insb
js
fisttpll
inc
mov
inc
insb
pop
jne
mov
mov
push
push
sub
mov
adc
jbe
mov
lds
cli
jl
fs
sahf
xor
andb
jl
push
push
out
jne
adc
icebp
arpl
pop
mov
dec
sub
mov
add
push
bound
sbbl
sub
aaa
sub
lea
adc
inc
sbb
dec
mov
rcrl
sbb
popf
jo
orb
mov
mov
push
sbb
pop
sub
gs
clc
jo
test
dec
das
icebp
mov
mov
xchg
int3
push
mov
mov
int3
stc
pushf
inc
out
jecxz
mov
mov
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
push
xchg
andb
add
jl
jne
out
mov
repnz
add
push
stc
shlb
pop
sub
dec
push
lahf
test
inc
lock
xchg
stos
shlw
cmpl
lret
movsb
lret
adc
lret
or
or
test
jnp
adc
mov
cld
adc
mov
pop
pop
xor
jmp
xchg
stos
fs
mov
movsb
lret
mov
mov
ret
jmp
scas
fdivrl
ss
dec
inc
lcall
popa
mov
in
jo
loope
cmpsl
xchg
cmp
mov
mov
mov
pop
cmc
loope
push
jno
push
pushl
outsl
fisttpl
pop
pop
lods
out
js
mov
mov
out
pop
inc
push
push
sub
jno
push
xrelease
inc
dec
push
xor
mov
leave
out
out
outsb
pop
in
decl
imul
or
inc
xchg
fwait
jbe
inc
out
leave
pop
xchg
xchg
loop
or
xchg
mov
mov
sub
inc
nop
mov
inc
call
pop
mov
xor
stos
xor
rorl
and
inc
mov
pop
outsl
sldt
aad
pop
std
mov
xchg
sub
pop
popa
idiv
mov
cmp
orb
pop
decb
lahf
roll
fnstcw
jg
jne
js
jae
xchg
push
cmp
mov
mov
add
ret
shll
jo
insb
inc
jge
mov
test
mov
add
pop
and
test
xor
mov
aam
xchg
insb
or
aad
jne
cmp
fs
and
test
fnsave
aam
je
lds
movsl
push
pop
add
pop
dec
ror
mov
orb
or
hlt
pop
cmc
jno
xchg
rol
frstor
pop
and
cmp
lds
mov
push
or
out
frstor
pop
aam
adc
das
cld
in
ja
push
mov
and
dec
xor
addr16
sub
sbb
cmpl
inc
xchg
xlat
pop
lock
mov
mov
jmp
out
test
mov
adc
lahf
ja
jl
dec
out
xchg
arpl
and
imul
xchg
jne
int
add
mov
push
pop
aaa
jae
lea
jns
lcall
jbe
adc
xor
adc
add
mov
ret
ret
sar
mov
cmpsl
pop
in
push
mov
aad
inc
jl
js
movsb
mov
sbbl
fwait
jecxz
es
dec
push
inc
pop
fwait
push
lods
push
stos
and
inc
lock
adc
test
xor
sarl
jno
loopne
fisubl
cmpsl
loopne
adc
pop
or
mov
adc
add
cli
sub
and
sbb
int3
jnp
loopne
push
push
es
add
lock
fsubrs
or
add
or
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
jmp
sub
xor
jle
push
xor
fwait
inc
push
lods
pop
xlat
jne
jl
jns
sbbl
fcoms
sbb
jb
and
jecxz
dec
mov
mov
mov
popf
mov
arpl
adc
aas
aaa
jle
nop
stos
push
xchg
or
mov
out
ja
mov
lcall
inc
int
fisttpll
movsb
cmpsw
mov
std
sub
loop
cmpsl
xor
pop
test
js
mov
rclb
hlt
stos
scas
imul
popa
mov
cwtl
jmp
dec
mov
outsl
std
out
or
or
mov
scas
pop
call
push
push
cmc
arpl
test
test
shlb
cmp
fwait
sti
ret
sbb
cmp
call
push
mov
fnstcw
add
aas
sbbb
movsb
pushf
mov
pop
jle
hlt
pop
xchg
mov
insl
jne
pop
push
arpl
mov
dec
aas
je
and
movsb
mov
ret
and
pop
mov
cmp
nop
inc
and
mov
xor
lods
mov
jmp
jge
test
sti
loope
repz
addr16
mov
adc
std
jecxz
dec
push
sub
add
cwtl
xchg
lods
and
mov
push
cmp
mov
jmp
arpl
sub
cs
addr16
xchg
mov
or
add
insb
cmpsl
popa
dec
call
fldt
pop
mov
mov
push
movsl
out
stos
cwtl
or
enter
loopne
call
rcr
outsb
mov
mov
rorb
mov
dec
shlb
icebp
cmp
nop
pop
adc
mov
pushf
loopne
leave
add
jno
repz
std
add
loopne
add
rcrl
adc
or
hlt
mov
into
xor
mov
push
dec
aam
add
pop
pop
aad
sbb
pop
outsb
xor
cmp
lret
or
ret
scas
fnstsw
int
push
daa
cmp
jae
push
mov
dec
jo
push
mov
jnp
std
or
jge
nop
mov
mov
inc
xorb
arpl
ljmp
addr16
js
pop
mov
mov
pop
stos
xor
mov
enter
sbb
incb
call
xor
fldenv
sub
std
pop
hlt
inc
adc
xor
clc
add
mov
mov
shl
int3
aam
jno
push
jbe
xor
filds
mov
jo
sbb
cmpl
mov
pop
inc
cmp
test
adc
xchg
push
ret
lret
mov
pop
sahf
prefetchw
insl
xchg
pop
mov
mov
sub
push
ret
or
fbstp
mov
push
inc
ficoml
mov
xchg
sbb
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
add
xchg
mov
fldcw
fcom
repz
xchg
xor
test
xchg
out
cltd
mov
fwait
nop
xchg
add
mov
icebp
repnz
cmc
lock
jno
ds
imul
add
push
mov
xor
push
mov
xor
rcrl
dec
bound
out
mov
push
inc
lock
stos
sub
cld
jmp
sbb
push
jnp
push
lea
mov
icebp
insb
jmp
add
int3
pop
sahf
push
test
mov
iret
xchg
aad
sbb
movsb
and
pop
fistpl
cmpsl
jo
shlb
cs
sbb
inc
call
bound
or
ror
cmp
xchg
ljmp
cmp
cmpsb
or
pop
xchg
adc
bound
pop
sti
clc
pop
mov
xchg
add
push
out
andl
xor
and
frstor
fsubrs
lods
dec
rolb
inc
iret
pop
hlt
inc
shr
jne
add
xor
in
mov
insb
sbb
dec
repnz
push
jae
sbb
push
add
cli
mov
fcmovnb
cmpsb
xor
lods
cld
push
pop
std
jmp
je
mov
je
xor
movsl
inc
cmp
fsubp
dec
repz
in
mov
lret
dec
add
jecxz
js
jmp
mov
mov
jb
or
xor
push
imul
lcall
aam
imul
jae
fldt
push
popf
gs
pop
pop
inc
pcmpgtw
lea
roll
cmp
cs
lds
sbb
xor
push
bound
push
das
or
and
dec
leave
sub
sti
int
dec
push
into
xchg
cli
aam
inc
mov
xchg
or
mov
arpl
call
push
and
jo
cmp
adc
iret
fists
mov
iret
pop
xchg
or
sti
int
dec
out
fldcw
mov
in
cmp
add
push
push
loop
clc
dec
mov
pop
cs
xor
adc
mov
ficoml
mov
or
sub
fs
rcll
push
fdivrp
pop
stos
mov
and
or
in
pop
lea
test
xlat
jge
daa
and
and
int3
frstor
out
push
add
cmpsb
mov
daa
dec
push
fistl
bnd
shlb
lods
imul
adc
movsb
pop
enter
fdivrs
ds
test
ja
idiv
mov
rolb
xor
dec
adc
xchg
dec
lock
imul
mov
sub
sbb
lock
or
mov
daa
mov
pop
or
or
inc
xor
insl
pop
nop
mov
add
insb
cs
push
ret
out
sbb
pop
xchg
fimull
fimuls
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
loopne
mov
xor
xor
jle
push
ret
mov
jg
cmp
repz
mov
mov
cmp
mov
pop
mov
push
push
inc
dec
in
sbb
lea
imul
push
pusha
popa
aad
lcall
ret
mov
mov
jg
scas
stos
cli
scas
in
cmpsb
mov
outsl
popf
mov
push
jbe
add
das
add
fwait
aad
mov
or
sub
push
add
mov
test
loop
cmp
rcrb
mov
insb
loope
clc
pop
into
inc
js
testb
std
mov
movsl
inc
pop
mov
fcoms
mov
mov
ret
arpl
push
lods
jb
and
mov
push
jle
and
fcoms
mov
movlps
mov
inc
out
push
sti
cmp
xor
or
loope
xor
push
es
cmp
out
cmp
cli
jns
cmp
add
xor
data16
jmp
push
mov
inc
ret
arpl
adc
inc
scas
mov
xchg
repnz
loopew
mov
aad
fwait
inc
cmp
loopne
or
or
xor
mov
sub
jmp
push
iret
pop
ja
xchg
dec
lea
mov
mov
mov
mov
pop
outsb
in
xchg
sbb
mov
cltd
jecxz
sti
jnp
decb
dec
std
xchg
jae
mov
aam
mov
push
insb
sbbl
jb
mov
pop
adc
push
out
sbb
adc
and
dec
dec
imul
and
adc
push
jge
adc
dec
pop
outsl
pop
xchg
mov
mov
and
add
cmp
in
shl
das
and
adc
sbb
ret
and
sbb
mov
cmp
lret
shrb
mov
pop
les
inc
xchg
dec
jmp
cltd
add
jge
adc
lods
das
add
leave
push
stos
mov
aad
lods
jnp
ljmp
jbe
or
pop
cld
dec
dec
push
pusha
fistpll
fldenv
lods
lods
adc
inc
sub
pop
dec
clc
sub
pop
rol
cmp
push
mov
pop
add
jo
dec
inc
inc
fldenv
aas
pop
addr16
pop
mov
iret
ret
add
cmc
jg
sbb
mov
je
decl
das
xor
sbb
jle
jo
orl
mov
mov
mov
das
pop
dec
cs
mov
sti
insl
pop
lcall
inc
iret
int3
inc
xor
jecxz
arpl
loope
inc
in
lret
push
aad
andb
movl
jecxz
das
mov
dec
jns
sahf
add
push
iret
gs
out
mov
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
ret
jl
jle,pt
xor
jle
jns
cmpsb
jp
xor
mov
stc
ja
in
pop
cmpl
xor
push
xor
cs
insb
adc
sbb
pop
popa
and
stos
add
adc
xchg
add
das
push
insb
cmp
inc
inc
xor
pop
jne
fdivl
lea
jg
sub
aas
mov
enter
sub
mov
mov
movsl
fldl
repz
sub
pusha
push
clc
fmuls
sbb
out
ja
loop
popa
xor
lahf
ja
cmp
fisubl
sbb
call
mov
and
jg
mov
aad
push
js
pop
inc
ret
add
and
xor
pop
pop
gs
std
clc
movsl
inc
aaa
xor
icebp
jbe
or
jg
out
mov
mov
adc
shll
mov
fimull
mov
xchg
mov
jp
mov
sub
ljmp
add
subb
and
push
pop
xchg
xchg
sub
add
addr16
outsb
lock
outsl
out
push
push
ss
cli
je
jae
out
xchg
sbb
loop
mov
push
clc
ret
insl
call
vrsqrtps
pusha
and
fsubp
pop
aas
or
jecxz
mov
cmp
imul
lods
pop
je
out
test
cmp
addr16
out
pusha
xchg
popa
fisubs
mull
mov
test
sbb
fisubs
stc
jno
lea
pop
pop
add
adc
sarl
and
mov
push
sbb
adc
mov
xchg
test
lods
add
out
mov
cld
add
out
xor
mov
aas
push
cmp
iret
mov
adc
int
or
xchg
shrb
jne
add
add
hlt
cmp
movsb
iret
iret
ret
jg
stos
inc
mov
mov
lret
outsb
jecxz
cmp
inc
jmp
pop
jnp
icebp
and
ss
in
leave
xchg
cmp
clc
mov
dec
subb
xchg
jecxz
push
jno
repz
mov
fidivrs
out
lahf
sbb
cmpsl
jns
xchg
xchg
dec
and
lods
addr16
rorl
leave
dec
fs
sub
inc
div
mov
xchg
dec
insb
in
movsb
sub
lods
jmp
mov
mov
xchg
in
cltd
scas
movsl
lods
subb
stos
iret
sub
cwtl
popa
jne
sub
ffree
fimull
sub
fisubs
mov
or
cmp
push
js
shll
mov
iret
test
out
add
xchg
and
shr
pop
mov
daa
daa
push
inc
jb
xor
scas
into
divb
push
xchg
pop
jb
repz
out
xor
imul
into
mov
lods
fsubp
jnp
out
push
mov
dec
add
insl
cmpb
mov
jmp
test
jno
ja
shrb
or
lcall
jle
jmp
lea
jb,pt
xchg
adc
push
pop
push
jo
fdivrs
stos
shll
adc
ljmp
das
xchg
or
xor
jmp
push
mov
cs
push
fsubrs
xor
in
data16
adc
stc
mov
shrl
xor
cmpsb
lahf
out
jge
jne
shrb
movsl
aam
mov
mov
popf
stc
xor
jle
fsts
sarl
loope
adc
mov
push
dec
or
mov
inc
adc
int
int
imul
cmp
fisttps
lods
test
jmp
add
repnz
sub
mov
push
je
popa
sub
xchg
cmp
pop
pop
fwait
mov
test
push
mov
xchg
int3
fidivl
mov
mov
insb
ds
jno
lods
sti
mov
inc
fwait
sbb
mov
pop
cmpsl
or
insl
fidivrl
subb
inc
mov
mov
outsl
xor
iret
push
pop
mov
sbb
sub
pop
push
popa
test
jnp
add
stc
int3
xor
inc
ss
xlat
ret
jns
repz
mov
test
sbb
xlat
dec
movsb
mov
adc
push
jle
push
loopne
jns
addr16
push
loopne
testl
mov
xchg
sbb
mov
mov
cmp
inc
lds
stos
and
into
fiadds
outsl
fisubrl
fists
icebp
pop
shlb
pop
push
clc
cmpsl
pop
fdivl
mov
lcall
xchg
mov
xor
xchg
cs
mov
pop
sbb
ja
jb
xchg
cwtl
shrb
sub
imul
add
adc
loope
xchg
jns
bound
pushl
shrl
jns
mov
inc
mov
pop
push
mov
push
inc
fisubs
inc
and
cmc
jecxz
pop
repz
add
xchg
jo
xchg
int
ret
inc
ds
loope
icebp
aaa
mov
fwait
lret
mov
lahf
pop
lret
std
sarl
pop
adc
fwait
dec
lret
out
sahf
sub
arpl
popa
push
rolb
cwtl
push
dec
mov
imul
mov
dec
les
mov
mov
das
jno
xlat
out
imul
shrb
pop
in
popa
inc
mov
rcll
out
outsl
or
int
jp
xor
es
push
adc
xor
insl
insl
data16
mov
push
pop
pusha
rcr
mov
fisttpll
fmull
jbe
out
aaa
sbb
xchg
mov
int
mov
jbe
inc
add
push
mov
rcr
adc
aad
cmc
in
mov
cmp
stos
sub
jle
lret
or
shlb
sub
clc
stc
xchg
dec
lock
pop
mulb
outsl
dec
and
pop
and
xchg
ss
in
push
int
dec
loop
sub
sub
mov
out
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
jecxz
cltd
mov
cmp
xor
jle
adc
and
or
mov
clc
inc
sbb
idivl
push
mov
lods
dec
lock
cmc
fcoml
adc
mov
orl
mov
jbe
shrl
and
push
dec
int3
adc
mov
mov
lahf
sub
repz
cmp
outsl
sbb
stos
mov
adc
ds
mov
mov
ficoms
jmp
test
or
jge
mov
pop
sarl
sub
ret
adc
mov
mov
insl
pop
mov
and
jne
mov
leave
sbb
add
push
fwait
sub
adc
movsb
stos
popa
rcl
cwtl
sub
xchg
in
lcall
loopne
mov
mov
jle
pop
mov
cmpsb
cltd
fistpl
fs
leave
aaa
mov
pop
jne
ss
es
iret
cmpsb
push
inc
inc
dec
mov
call
mov
bound
and
dec
popf
stos
mov
call
dec
mov
shlb
iret
sub
cmp
andb
dec
mov
aaa
mov
jns
add
mov
adc
aaa
ret
jo
pop
out
mov
gs
push
loope
out
cs
adc
into
xlat
popf
cwtl
jne
and
fnstsw
inc
clc
das
pusha
sbb
cmpsl
push
mov
mov
sub
mov
mov
lret
xor
dec
cmp
dec
pop
jae
add
dec
add
loope
inc
xchg
add
lods
popf
sbb
fwait
add
ds
jne
stc
test
hlt
imul
jmp
xor
outsb
sub
lret
outsb
mov
jl
or
push
xor
lret
leave
cmc
mov
lods
sub
inc
jle
xor
lret
adcl
inc
mov
sbb
xor
pop
push
decb
cmp
xchg
ror
in
test
mov
cld
das
mov
push
pop
inc
xor
push
fiadds
cmpsb
in
add
ret
sub
out
and
in
add
and
jne
mov
xlat
add
jo
pop
in
lock
jnp
out
out
jp
movsb
in
shl
jns
scas
push
pop
stos
add
pushf
mov
push
hlt
push
sbb
push
sub
movb
sub
pop
or
mov
jae
mov
pop
add
mov
imul
cmpsl
xchg
fwait
loope
nop
push
fadds
add
or
cmc
or
xlat
cmpsb
xchg
popa
lret
rclb
cli
sub
aam
cmp
sub
dec
enter
mov
mov
add
das
sbb
repnz
push
aam
fdivr
and
aam
or
cmp
pushf
inc
notl
mov
dec
cmp
mov
pop
popl
imulb
mov
push
cwtl
imul
das
or
pop
xchg
hlt
fcmovnu
inc
sbb
cltd
ja
das
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
popa
out
xchg
data16
jle
fistpll
adc
or
ret
push
pop
test
movsl
mov
push
sub
lahf
insb
in
rol
mov
punpcklwd
lret
and
ja
mov
mov
or
mov
pushf
lret
lods
dec
ret
enter
mov
dec
xchg
std
xchg
fnstsw
mov
addr16
push
adc
adc
push
nop
xorl
jg
addr16
cwtl
aas
push
xchg
add
and
xchg
add
xchg
scas
xchg
fildll
pop
daa
fisubs
push
mov
fadd
cmp
into
jecxz
jns
xchg
push
lret
rclb
mov
int
idivl
cmp
or
lods
loope
popa
dec
clc
dec
xor
cld
cmp
int
jnp
or
mov
and
add
sub
lds
negl
cs
cmp
in
stos
enter
xorl
add
mov
loopne
cmpsb
push
pop
adc
lea
fstl
sub
jo
imul
push
xchg
fs
iret
mov
pop
rcll
xor
cmp
mov
mov
dec
mov
aas
loop
push
int3
cmp
pushf
push
lret
movsb
mov
popa
pusha
and
test
xchg
mov
xchg
mov
outsb
mov
fcomps
sub
adc
push
lahf
mov
in
cmp
sub
inc
testb
push
or
mov
sbb
movhps
inc
xchg
sub
xorb
icebp
out
or
mov
adc
fstpl
mov
jge
addr16
cs
pusha
shlb
insb
call
stc
inc
pop
mov
mov
xchg
out
shrl
das
xchg
sub
ljmp
pop
call
sbb
mov
mov
sarb
or
cmp
imul
mov
test
dec
daa
xor
mov
pop
cmp
sbb
jp
repz
into
and
test
and
ficomps
push
ljmp
pushl
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
hlt
xor
ret
fistpll
pusha
mov
mov
shlb
dec
and
into
fmull
fld
adc
sub
push
scas
inc
pusha
scas
testl
dec
in
addr16
lds
inc
mov
nop
mov
xchg
xchg
in
jns
xchg
fs
sub
jmp
sub
dec
out
call
or
std
dec
bound
or
adc
push
dec
in
xchg
inc
pop
pop
cld
jae
cs
gs
ljmp
test
inc
pop
fists
loop
imul
xor
lock
dec
push
xor
cmp
xor
lods
add
adc
loop
shll
jg
pop
mov
lock
test
lret
jnp
push
mov
sub
and
push
push
aam
popa
lahf
and
or
add
jg
mov
sti
pop
adc
pop
ss
pop
jmp
lret
add
mov
mov
aad
lahf
pop
test
stc
out
popf
cwtl
fdivr
pop
push
sub
adc
jp
pop
xchg
xchg
rclb
je
cs
or
arpl
int3
mov
jnp
popf
scas
test
hlt
adc
lahf
pop
cmc
pushf
and
loope
mov
shll
repnz
ljmp
cmp
xchg
ret
rsm
add
pop
inc
push
cmpsl
es
call
dec
xchg
loopne
xor
inc
test
xchg
mov
dec
std
jl
test
es
js
sti
sub
mov
pop
mov
inc
shll
fldcw
aaa
ret
jmp
mov
add
push
pmaddwd
into
cmp
sahf
test
int
cli
mov
inc
cld
scas
mov
test
or
pop
fwait
cmpb
jo
inc
and
sbb
aam
adc
shll
test
repnz
push
test
icebp
mov
int3
outsl
insb
pusha
push
daa
or
add
sbb
push
pop
jbe
das
adc
xor
inc
inc
and
ret
cltd
push
cmpsl
add
icebp
scas
pop
jl
aam
xor
ljmp
lahf
js
pushf
stos
repnz
adc
inc
adc
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
xchg
sbbl
jge
jle
add
dec
ret
or
mov
lock
hlt
in
aas
fisubs
push
stos
jmp
sub
stc
fsub
inc
in
out
test
cmpl
push
sarl
jno
sub
mov
icebp
in
dec
loopne
sbb
or
xor
sbb
xchg
fsub
outsl
xchg
into
mov
mov
pop
aam
and
mov
inc
jae
dec
negb
pop
or
insl
push
mov
mov
in
pop
cmp
mov
mov
pop
mov
inc
sub
into
sbb
mov
lea
push
iret
daa
cmp
jp
aam
cmp
pop
iret
outsb
xor
lret
pusha
xor
mov
lock
aaa
ud2
add
inc
sarl
inc
inc
sbb
push
cmp
inc
push
adc
imul
jo
test
insl
push
add
push
pop
aaa
inc
cmp
lock
sarb
push
cwtl
push
ret
push
pop
ljmp
cwtl
ja
test
rcr
sbb
pop
insl
subb
pop
sbb
roll
inc
fstl
rolb
adc
push
sub
pop
mov
jb
cli
inc
mov
cmp
loopne
dec
clc
inc
lret
add
rolb
jb
mov
add
xchg
fcmovnb
fistpl
inc
dec
les
jp
adc
xor
and
xor
xchg
call
push
gs
jnp
test
mov
aad
cmp
jbe
mov
sub
icebp
pop
mov
insb
pop
xor
out
aaa
sbb
dec
push
jle
ss
or
iret
in
sti
lds
mov
gs
adc
mov
xchg
adc
daa
xchg
fildll
imul
or
lret
fdiv
mov
adc
mov
xchg
rcrl
pop
push
loopne
cmp
inc
add
pop
sbb
add
adc
adc
xlat
and
add
inc
add
ss
jl
sbb
dec
out
mov
adcl
mov
divb
mov
push
out
dec
mov
sahf
mov
pop
in
rcrb
pop
fs
sahf
adc
add
aad
dec
jne
and
push
mov
xchg
icebp
in
jno
movsb
aaa
and
adc
jecxz
xor
mov
mov
fwait
add
out
iret
dec
stos
mov
test
adc
lcall
push
inc
rorl
scas
sbb
add
daa
rorb
test
and
gs
movsb
mov
cltd
pop
test
outsb
jg
scas
adcl
inc
add
out
movsb
lock
cmp
out
jle
push
ds
jnp
es
xchg
inc
mull
aad
mov
jne
xor
mov
pop
out
ss
fcom
fimull
jecxz
dec
cld
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
subb
jle
jge
jle
stos
add
dec
or
out
out
cmp
xor
lds
dec
inc
fcmove
add
xor
mov
mov
pop
mov
jbe
push
lcall
cmp
push
sbb
in
jl
jb
insl
arpl
popa
cs
add
aam
cltd
imul
icebp
repz
sbb
dec
aam
ja
mov
dec
and
movsl
ja
mov
daa
and
push
sbb
jb
dec
or
stos
in
cmc
pop
sub
repnz
sub
mov
mov
sub
dec
pop
loopne
std
mov
lods
std
inc
dec
ror
jo
mov
ljmp
push
mov
faddl
test
push
jb
stc
outsb
or
aad
pop
repnz
cli
lea
and
jl
or
sbbl
mov
inc
adcb
outsb
fldcw
jb
xchg
push
mov
les
pop
addl
mov
cmp
mov
aad
mov
xor
imul
push
cmpsb
rcll
ret
sub
fldt
imul
pop
mov
mov
xor
mov
xchg
add
jae
mov
mov
mov
pop
adc
das
mov
dec
fsubr
push
add
add
popf
sarl
les
add
jno
and
push
sbb
test
icebp
pop
mov
scas
movsl
mov
adc
and
fwait
sbb
push
jecxz
test
lret
unpcklps
sbb
rol
ss
fistps
dec
add
sub
out
mov
arpl
jae
flds
fcomi
das
into
clc
subl
pop
repz
adc
neg
sbb
jge
loopne
movsl
add
imul
test
jmp
inc
leave
jg
add
cmp
test
mov
mov
stos
cmp
sub
pop
orl
int
out
push
je
xchg
imul
jo
bnd
mov
xchg
jne
imul
sub
ret
cmp
cmp
in
data16
fdivl
sbbl
repnz
inc
fsts
es
xchg
aaa
or
xor
add
mov
xor
outsl
ret
xchg
daa
rorl
or
mov
add
adc
cltd
in
in
cmpb
aam
add
js
mov
stos
xor
repz
call
sbb
jno
test
inc
push
inc
fdivrp
sbb
out
xor
negb
dec
rorb
bound
cmp
jle
pop
pop
adc
popf
mov
or
ret
imul
sbb
sbb
cmpsl
cmpsl
mov
mov
icebp
push
jno
test
and
loop
and
outsl
test
mov
pop
inc
mov
pop
mov
pushl
jbe
push
bound
enter
add
add
inc
clc
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
ljmp
and
jle
les
orl
or
adc
jecxz
mov
test
cmp
or
and
cs
enter
js
fbld
push
out
inc
xchg
mov
out
cmp
gs
and
pop
js
push
out
xchg
xchg
sbb
pop
pop
cwtl
or
mov
outsb
std
cld
sbb
push
ss
pop
in
pop
arpl
mov
adc
pop
enter
fdivrp
cmp
imul
scas
hlt
imul
int
mov
add
or
ljmp
arpl
cltd
ja
adc
jge
adc
scas
pop
inc
inc
dec
fmuls
inc
lock
imul
and
xchg
xorb
mov
std
mov
sbb
mov
cmp
inc
out
scas
fldl
adc
jmp
add
frstor
stos
adc
mov
jl
fistpl
int
iret
test
inc
adc
rcrb
sti
sti
lock
adc
push
xchg
mov
test
or
shlb
jecxz
jmp
fdivs
aaa
mov
loop
test
mov
push
sti
cmp
aaa
xchg
cmpsl
push
dec
mov
sub
aaa
push
hlt
adc
out
xchg
cmpsl
xchg
mov
add
xchg
jae
xchg
inc
mov
fsubs
cmp
mov
out
push
dec
jne
cmp
and
call
cmp
adc
inc
pextrw
cmp
jg
inc
add
mov
xor
pop
jmp
cwtl
lea
cwtl
orl
out
jmp
clc
int3
cmp
push
mov
jecxz
sti
sub
stc
sbb
lock
stos
fsubl
cmpsl
add
insl
pop
xchg
push
in
xchg
dec
cs
and
mov
cs
push
gs
xchg
orl
mov
dec
sub
lds
in
out
push
movsb
lods
rorl
pop
add
add
pusha
jl
pop
ret
and
xchg
in
xor
out
cmc
rep
leave
pop
es
loope
iret
popf
int
lret
inc
or
cmp
pop
inc
mov
push
stc
rol
sbbb
mov
movsl
inc
mov
push
dec
mov
data16
cmc
cmp
lcall
sbb
xor
test
push
outsb
dec
mov
stc
es
fbld
shll
imul
fistl
mov
mov
dec
and
adc
call
fnstcw
ja
dec
xor
ret
nop
enter
jge
push
fadds
sub
ljmp
lea
adc
jo
xor
cmp
pop
outsb
nop
mov
inc
jne
ss
mov
addb
fnsave
dec
xor
or
pop
call
pop
ret
adc
in
iret
movsl
and
mov
sub
cwtl
mov
jae
subl
jne
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
xchg
dec
rolb
in
jle
les
xlat
out
pushf
repz
xchg
fs
repnz
add
lret
xor
jns
adc
xchg
leave
lea
cmc
ja
loop
mov
mov
push
push
std
and
or
xchg
js
out
movsb
out
push
into
jnp
and
insb
movsl
jae
aaa
imul
pushl
jp
outsb
cmc
xchg
lea
shll
xor
stc
mov
jnp
push
vcmppd
xor
and
add
push
mov
pop
mov
mov
jnp
pop
out
les
iret
jle
leave
int
aam
cmp
mov
orl
cli
aam
adc
pop
icebp
iret
mov
sahf
daa
and
out
push
xchg
rep
push
inc
mov
xchg
xor
cmc
adc
roll
mov
popa
movsb
jns
push
xor
shl
test
bound
cltd
cwtl
push
in
sbb
in
xchg
dec
fdivl
movsb
push
or
dec
sti
xchg
or
pop
cli
into
fistpl
test
imul
in
pop
push
cwtl
in
cld
test
xchg
out
jl
aam
sbb
popa
and
std
inc
add
sbb
imul
cwtl
jbe
sbb
fcoms
shrb
hlt
dec
adc
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
pop
nop
xlat
jle
in
jle
js
xor
mov
movsl
lds
imul
xchg
fs
push
xchg
adc
pop
inc
sti
imul
sbb
sub
sub
ds
les
les
jns
test
gs
and
cmp
rcrb
cmpsl
dec
cltd
pop
lahf
mov
adcl
xchg
stos
fs
push
jle
dec
jecxz
mov
inc
cs
popa
cltd
ret
dec
add
mov
insl
push
or
and
mov
xchg
sbb
xor
hlt
xor
inc
mov
sbb
cmc
clc
xor
add
or
and
inc
mov
dec
sbb
out
and
enter
ljmp
lcall
add
jp
repnz
shr
scas
cmp
std
das
fistl
lret
mov
mov
incb
scas
adc
aam
cli
or
mov
and
xor
arpl
mov
jl
lods
gs
xchg
test
pop
mov
fmulp
sub
push
imul
pop
rorb
test
lret
sbb
jnp
pop
loope
outsl
xor
divl
cmp
repz
mov
fisubl
aad
xchg
inc
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
aas
imul
in
pop
sbbb
out
jp
out
xor
sahf
cld
outsb
test
cmp
pop
xorb
fcoms
xchg
daa
dec
adc
sahf
pop
pop
outsb
shll
rcl
lret
or
xchg
mov
es
xchg
cltd
fmulp
subb
fucomi
add
int3
mov
repnz
frstor
in
pop
sub
insb
push
fs
aad
pop
xchg
xorl
mov
pop
leave
rcrb
iret
insb
loopne
test
cmpsl
and
add
rcrl
pop
mulb
xchg
ss
push
xorl
inc
mov
jp
and
mov
jmp
sub
xor
js
movsl
popl
xor
sbb
push
fildll
dec
enter
scas
lock
test
and
lock
mov
pop
cmc
flds
jg
repz
mov
sub
shll
in
neg
lea
jns
and
mov
pop
loope
pop
jbe
adc
hlt
cmp
xlat
jns
out
imul
es
imul
jbe
daa
out
das
ror
push
inc
sbb
push
int3
mov
mov
and
data16
fnsave
mov
add
es
cmp
dec
or
fsubr
sbb
ret
je
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
clc
gs
daa
in
sarb
in
jle
clc
pop
sbb
mov
mov
notb
sbb
add
addr16
shrb
adc
lock
cmp
sbb
sbb
cmp
pop
pop
scas
and
xchg
in
clc
bound
mov
shr
or
stos
dec
and
fs
popa
insl
jle
jno
mov
lock
into
cmp
mov
mov
and
push
outsb
dec
sub
das
and
icebp
fldcw
adc
js
jp
cmc
cmp
push
jmp
loope
pop
adc
clc
lods
int
push
dec
mov
pop
jbe
fdivl
je
insl
cmpsl
push
xor
xlat
out
in
bound
shlb
pop
xor
adc
pop
scas
dec
jno
sbb
pop
mov
mov
sbb
loope
push
mov
loop
pop
xchg
std
add
shlb
adc
and
pop
pop
ret
insb
aaa
jge
into
push
cmpsb
dec
mov
pop
push
push
fcomip
iret
lds
popa
dec
sbb
shl
aam
xor
mov
sub
imul
jne
mov
movsb
push
cmp
repnz
imul
sbb
push
mov
mov
xchg
pushf
adc
test
mov
mov
js
add
sbb
mov
roll
jmp
adc
test
or
sarl
in
jle
fidivrs
movsb
in
pop
adc
adc
fisubs
adc
xchg
in
leave
jp
xchg
push
cmp
cmpsl
sub
in
inc
roll
xor
pop
cltd
mov
push
jmp
sahf
iret
ret
push
pop
cltd
jge
stc
jbe
sbb
in
and
insw
popf
mov
cmp
icebp
pop
jo
push
cltd
mov
ja
push
mulb
into
arpl
orb
inc
cmc
pusha
adc
cmp
das
mov
add
repz
in
jo
or
xor
js
repz
pop
xchg
imul
aas
repnz
in
sahf
testb
mov
lods
and
push
push
dec
dec
or
add
mov
iret
and
adc
mov
dec
mulb
mov
xchg
test
push
insl
xor
sub
dec
pop
leave
jb
fwait
jmp
mov
and
mov
cmp
lods
aam
fld
pop
lea
mov
lds
jecxz
repz
sbb
cmc
insl
xchg
pop
out
dec
test
sarl
cltd
rcr
fcmovnb
pop
mov
jbe
xor
loop
dec
push
adc
mov
sbbl
ficoml
jb
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
push
xlat
cmp
jle
in
jle
xor
hlt
aad
jnp
jno
mov
cltd
dec
adc
lahf
std
and
mov
adc
js
pop
out
ss
in
jb
adc
sahf
fmul
jg
js
in
lret
cmpsl
ret
int
ss
jo
movsb
sbb
imul
xchg
jg
jge
enter
std
shll
pop
cmp
mov
jo
push
push
dec
xor
in
lock
sub
divl
xor
data16
jecxz
stc
xchg
jge
sbb
fs
aas
add
call
mov
adc
adcb
xchg
push
adc
pop
xchg
jb
add
rcll
hlt
or
jge
lods
jecxz
shl
dec
rcrl
dec
push
ljmp
mov
dec
pop
pop
movsb
incl
les
repz
into
xchg
lcall
lods
push
imul
or
out
adc
stos
lds
mov
out
adc
dec
xor
jmp
adc
lea
ret
sbb
and
fldt
push
ja
rol
jo
mov
in
jmp
ljmp
mov
pop
fwait
sbb
int3
std
jns
aaa
movsb
clc
fdivrs
sbb
rcrl
add
push
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
push
sbb
scas
fidivrs
in
jle
pusha
adc
imul
in
jl
gs
add
pop
out
xchg
into
repnz
and
mov
xchg
popf
cmp
jae
bound
cwtl
mov
mov
mov
cmp
mov
xchg
ficompl
inc
pop
imulb
out
rolb
inc
mov
loop
mov
mov
and
idivl
inc
test
mov
or
loop
ret
incb
xchg
iret
pop
ljmp
pop
cmc
mov
inc
jmp
shll
pop
jae
test
xchg
xchg
or
daa
movsb
xchg
cmpsl
lock
mov
sbb
mov
sub
xor
roll
mov
jp
adc
mov
mov
cmp
enter
mov
ret
rcrl
add
xchg
pusha
mov
xor
in
lock
adc
ss
fildll
into
xchg
mov
and
xchg
or
mov
adc
xor
jg
inc
jo
push
adc
push
movsb
insl
jge
sbb
lahf
fs
xor
je
jecxz
xorl
dec
mov
dec
push
xor
mov
pop
cmp
mov
popf
cld
jbe
sbb
fnsave
fnclex
sub
push
cmp
push
rorl
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
das
cmp
mov
jle
in
jle
xor
mov
in
sahf
loop
xchg
mov
lock
and
hlt
adc
test
mov
lcall
xor
scas
xlat
and
inc
int
pushf
push
sbb
push
lods
das
aad
int3
mov
sub
jb
dec
sbb
arpl
lods
cmpsl
js
inc
cs
cmp
pop
mov
addr16
mov
hlt
cmc
lods
and
rcrb
test
add
add
jle
popa
and
out
add
mov
push
dec
jmp
das
inc
cli
mov
pop
sub
into
add
push
lea
mov
jo
and
cmpsl
imul
push
xchg
cld
jns
scas
mov
rorl
popa
or
or
inc
or
rol
jle
dec
loopne
or
xchg
mov
fcoms
sbb
dec
xor
test
lcall
aaa
mov
cmpsb
xor
mov
adc
lock
enter
rolb
cli
test
movsl
mov
push
push
int
adc
and
pop
repz
into
in
mov
ror
xor
ljmp
aam
addr16
inc
lcall
out
test
pop
sbb
ret
dec
lods
pop
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
inc
or
dec
adc
lret
fists
xchg
mov
mov
adc
je
push
test
cmc
add
cs
subb
jge
mov
xor
out
aaa
inc
lahf
aaa
js
mov
mov
mov
or
repnz
cmp
or
xor
or
idiv
push
inc
lret
or
cmpsb
mov
inc
push
arpl
test
push
ljmp
push
in
xchg
xchg
xchg
in
mov
jp
repnz
push
shrb
pop
inc
scas
test
std
jg
scas
jp
jmp
pop
pop
sbb
pusha
mov
sbb
or
mov
jmp
mov
and
push
dec
jno
int3
int
xor
outsb
sub
ja
sub
lea
inc
popf
leave
xchg
cld
cmp
xor
adc
or
jmp
and
and
push
lret
ficoms
addb
adc
imul
cli
jmp
test
add
aam
or
push
scas
inc
mov
out
std
pop
mov
dec
cmp
pop
leave
fcomps
enter
in
pop
outsl
movsb
sbb
rcll
xchg
lret
adc
dec
mov
insb
repnz
scas
push
fildll
mov
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
and
fldenv
jle
jp
jle
cmc
pop
aam
jp
sub
lret
mov
xor
and
mov
mov
sub
popa
jno
mov
shrb
xchg
out
stos
add
jg
insb
cltd
mov
int
ficompl
mov
ffree
mov
xlat
cmp
add
pop
mov
vshufps
fimull
mov
test
sahf
loopne
or
out
dec
dec
and
mov
pop
ljmp
test
fidivl
mov
mov
popf
fs
ja
mov
jecxz
mov
cmp
or
xchg
repnz
xchg
jecxz
arpl
xchg
sbb
dec
pop
xchg
mov
div
pusha
outsl
mov
icebp
sub
in
push
fld
das
movsl
stos
or
xor
test
pop
cwtl
xchg
repz
fldt
movsl
push
jp
adcl
xchg
or
aad
jb
daa
scas
icebp
sub
mov
subb
cmp
mov
sub
cmp
lahf
push
rorb
xchg
test
adc
idivl
fcmove
mov
aad
xchg
out
xor
out
add
sbb
xchg
pop
sub
imulb
and
or
out
loopne
aad
xlat
daa
cmpsb
jle
cmp
rorl
jb
sub
fbstp
add
pop
add
into
gs
ret
mov
daa
test
push
inc
mov
pop
pop
push
jge
jg
aad
or
xlat
add
pop
xchg
mov
sbb
pop
js
inc
mov
cmp
mov
inc
nop
aad
cltd
mov
dec
stos
sub
call
imul
pop
mov
push
outsb
adc
movsl
fwait
loopne
sbb
xacquire
mov
pop
hlt
mov
addr16
stos
aam
xchg
je
jg
adc
pop
scas
xchg
sbb
out
enter
pop
imul
sub
add
dec
in
mov
push
loope
popa
fimuls
in
leave
and
mov
inc
cltd
or
dec
es
and
or
addr16
xchg
mov
jge
insl
fs
jmp
push
fimull
hlt
lret
clc
xor
fisubrl
xchg
inc
jno
sub
out
push
stos
add
xor
jns
jne
xlat
or
pop
les
cmpb
push
cmc
push
jnp
mov
and
xchg
iret
sahf
fisttps
sub
cmpsb
cld
add
cmp
aas
ljmp
mov
pop
sbb
incb
scas
push
in
clc
mov
jne
add
push
orl
xchg
fisubs
rorl
in
int
addl
lret
add
adc
push
and
out
ror
movl
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
aaa
insb
fnstcw
jp
jle
aas
inc
and
mov
inc
push
in
sahf
test
xor
push
cmp
pop
mov
add
ss
sbb
xchg
fcmovnu
call
cmp
inc
or
loopne
and
sub
xor
daa
ss
imul
mov
cmp
and
or
or
dec
xchg
repnz
loopne
jmp
pop
leave
imul
sbb
fnstsw
add
arpl
sbb
gs
xor
sbb
insl
and
fistpll
rcrl
jae
inc
repz
mov
push
call
mov
adc
pop
cli
dec
dec
mull
fstpl
mov
adc
push
push
scas
xor
aam
inc
movsb
lods
mov
push
jge
xlat
pusha
in
aaa
fwait
and
mov
push
mov
mov
xlat
lahf
in
xchg
add
xchg
ja
es
lea
mov
push
test
mov
inc
cmp
ficompl
loopne
xchg
mov
das
insb
xchg
dec
outsl
and
popf
inc
sub
nop
ret
scas
pop
cmp
lds
shll
cmp
mov
movsl
push
sbb
cmpsb
sub
pop
pop
shlb
adc
out
rolw
adc
or
dec
fiaddl
xor
loopne
cmpsb
je
les
push
sti
aas
iret
push
add
mov
dec
incl
mov
ja
insl
pop
xor
xor
xchg
idivb
inc
popf
dec
fbld
in
fs
xor
xchg
mov
ficoml
adc
sbb
daa
push
jns
cmpsb
pop
push
sahf
jns
lods
roll
xchg
pop
addl
or
loope
pop
test
xchg
pop
fwait
lahf
mov
mov
and
or
mov
inc
pop
das
daa
push
shll
xchg
mov
icebp
xor
adc
jns
jmp
das
icebp
jno
scas
int3
aam
adc
add
and
testb
xor
add
mov
outsl
mov
scas
scas
pop
es
add
in
movsl
pop
lds
xchg
sarb
push
mov
ljmp
rolb
and
mov
das
or
push
ljmp
push
xor
mov
rorb
mov
insb
lret
xchg
and
adc
inc
roll
or
add
mov
fmul
sahf
les
and
ret
inc
mov
pop
insl
pop
jmp
into
or
dec
jp
add
add
mov
add
orb
sbb
sbb
mov
out
xchg
loope
xchg
bound
aaa
test
and
mov
mov
nop
rcrb
cmp
icebp
popa
clc
inc
jbe
mov
les
pop
pop
addr16
inc
gs
mov
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fstpl
mov
jle
jge
jle
or
pushf
lods
movsb
xorl
fcmovne
cmp
xor
mov
sub
sub
mov
sbb
jo
xchg
sbb
cs
mov
outsl
xlat
push
jg
addb
pop
xor
xor
jmp
loopne
lds
outsl
xlat
cld
aas
mov
sbb
ljmp
or
dec
dec
in
iret
xor
movsl
dec
xchg
loop
adc
inc
sbb
dec
or
jns
sub
test
mov
pop
push
push
inc
jns
aaa
inc
xchg
adc
nop
xlat
rolb
lahf
add
sbb
shlb
cmpl
adc
xor
pop
dec
mov
push
insb
sti
out
sub
lahf
xor
out
ja
and
adc
aas
or
lret
push
outsb
sarb
sets
scas
jge
and
aas
inc
mov
xchg
jecxz
inc
pushf
add
or
aaa
inc
pop
bound
inc
ja
call
mov
test
or
pop
es
xor
mov
xor
sub
jecxz
cmp
daa
in
mov
repnz
in
sbb
outsb
cmp
divb
sbb
cmc
ds
rcr
inc
adcl
call
mov
xchg
push
fwait
mov
fld
outsb
cmpsl
adc
out
mov
push
call
pop
xchg
fiaddl
into
mov
mov
pop
push
push
idivb
icebp
sub
orb
out
jmp
test
mov
push
lea
sti
iret
cmp
stos
enter
data16
or
mov
test
mov
in
adcl
xor
sbb
ret
mov
leave
xor
pop
int3
mov
test
mov
and
jge
jnp
sub
add
push
push
or
mov
or
lds
ds
je
push
ljmp
movsb
es
dec
sahf
mov
cwtl
push
sbb
or
push
mov
or
mov
push
jmp
scas
pop
pop
or
jp
sub
sub
sarl
lock
sbb
mov
lds
movsl
lret
sbb
loop
test
cmp
sub
or
pop
xchg
xor
popf
test
mov
mov
arpl
xchg
imul
lock
movsb
sbb
cmc
mov
sbb
mov
inc
dec
add
mov
or
daa
pop
imul
mov
cmp
scas
inc
les
cmpsl
push
dec
and
movsb
push
inc
rcrb
fnstsw
cmp
movb
add
call
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
xor
int
je
jle
jp
jle
scas
jl
daa
mov
or
stc
dec
addl
loope
adc
jl
repz
cltd
and
xchg
jne
sub
xlat
mov
flds
jb
in
cmpsb
mov
dec
sahf
data16
pushf
add
outsl
pop
sbb
stos
scas
pushf
pop
je
xchg
cld
andl
stc
mov
mov
pop
cmpsl
lods
stc
jp
cmp
lret
jbe
scas
inc
std
fwait
cmc
lret
xchg
pop
out
test
gs
pop
mov
and
cmp
repz
jg
lcall
imul
push
adc
pop
adc
adc
repz
das
iret
addr16
test
daa
cmpsl
sub
mov
cmp
jmp
insb
mov
cld
xchg
out
nop
cmp
push
sub
mov
sub
push
iret
xor
lea
in
lahf
inc
and
sub
adc
push
ja
lock
stc
sarb
jbe
xchg
rorl
sar
sbb
gs
es
xor
mov
shll
mov
fwait
mov
cmp
lods
mov
pop
cmp
testl
pop
add
mov
dec
out
jae
fnsave
stos
xlat
in
mov
pushl
push
mov
cs
jmp
loopne
mov
pop
mov
mov
cmp
jbe
dec
aad
daa
lahf
imul
testb
and
adc
or
scas
insb
dec
xchg
sub
inc
ja
insl
ret
inc
dec
xlat
ret
rcrb
mov
xchg
in
mov
dec
dec
pop
dec
xor
jge
scas
filds
cs
add
repnz
out
mov
mov
sub
imul
jle
shl
ja
mov
test
dec
xlat
and
xchg
out
in
sbb
add
sarl
arpl
xchg
adc
or
mov
stc
pop
shlb
ret
mov
pop
jg
xor
mov
cmp
add
inc
or
cmpsb
adc
test
aad
mov
adc
lahf
push
inc
bound
mov
push
cmp
fldl
icebp
jns
fnop
ds
pop
sbb
cwtl
imul
inc
cmc
or
adc
adc
mov
stc
and
inc
jno
loopne
sbb
lcall
shrb
popa
jmp
fstpt
dec
mov
lahf
in
addr16
inc
push
out
adc
ds
cltd
call
pop
and
cmp
mov
icebp
cmp
or
jle
pop
sbb
push
adc
mov
jmp
movsb
sub
enter
cmc
pop
add
push
insb
icebp
aad
int
ds
dec
lock
add
mov
mov
mov
jmp
enter
enter
sbb
mull
shl
test
jle
jp
jle
scas
cmpsl
data16
mov
fisttpl
cmp
jne
or
mov
imul
xor
mov
pop
sub
xchg
out
outsl
pop
dec
sti
test
test
adc
mov
push
push
insl
cmpsb
ja
test
jmp
jp
mov
movsl
insb
stos
aad
lret
jbe
adc
adc
jo
xchg
mov
jmp
arpl
add
or
xchg
add
std
decl
lret
mov
sbb
cli
mov
mov
fwait
in
pop
stos
bound
arpl
arpl
push
sub
sub
addr16
dec
dec
es
sub
adc
xor
cltd
std
or
pop
inc
and
dec
gs
testl
fs
rol
and
fsts
outsb
popf
push
add
or
lods
add
sub
jb
adc
enter
lcall
mov
mov
idiv
add
pop
xlat
aas
inc
scas
fisttps
mov
mov
xlat
movsb
add
fcmovu
stc
sahf
lcall
sub
xchg
mov
adc
std
sti
in
ret
stos
clc
ljmp
movl
mov
out
jnp
mov
enter
fsubrl
add
std
cmpsb
inc
jmp
nop
or
icebp
insl
popa
inc
cmpsl
push
scas
popf
push
and
pop
repnz
ror
outsl
fsubrl
adc
add
jo
call
jl
pop
push
pop
stos
xor
jp
fstpt
jno
cmc
pop
andb
xor
lcall
cwtl
out
in
jne
incb
shr
bound
push
pop
out
jl
sub
and
or
cmc
das
cltd
leave
popf
mov
add
movsb
sbb
lret
add
push
xor
mov
sbb
cs
je
hlt
sahf
aaa
dec
dec
cmp
push
das
xchg
add
stc
or
push
ret
mov
push
mov
call
stos
adc
in
es
sub
mov
je
push
adc
fbstp
rol
ret
xor
les
es
add
or
clc
sti
or
jbe
into
dec
push
cmc
cld
sub
inc
in
movsl
sub
stc
fwait
xor
cmp
sub
jns
sub
fcoml
cmp
jge
call
adc
and
iret
pop
arpl
rorl
loope
in
repz
lds
shll
mov
inc
in
mov
cmp
mov
dec
cmc
xchg
jne
mov
push
ljmp
stos
lods
jle
and
js
and
ljmp
testb
and
pop
orb
xchg
or
mov
pop
in
xor
adc
insl
add
mov
fiaddl
int
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
xor
jl
jle
jp
jle
test
cmpsl
insb
cmp
mov
int3
cltd
aam
sub
daa
inc
test
lea
mov
xchg
xchg
xor
sarb
pusha
fmul
xchg
test
push
jno
fsubrs
push
push
je
arpl
sbb
sub
push
dec
mov
mov
mov
scas
add
jb
data16
mov
std
hlt
or
cltd
add
mov
popf
and
push
inc
fcoms
test
in
push
inc
out
pop
sbb
outsl
xor
xchg
jle
popf
mov
xchg
popf
pop
sti
cmp
jbe
mov
addr16
jecxz
ds
aas
xchg
sub
dec
imul
out
pop
stos
add
je
xor
aam
add
ds
test
popa
cli
pusha
adc
sti
dec
adc
inc
popf
sub
add
cmp
or
inc
sub
pop
mov
mov
rolb
pop
dec
outsl
jmp
movsl
rorl
addr16
and
data16
pop
and
and
js
or
rclb
outsl
push
shrl
cs
ds
rcll
push
xchg
movsl
pop
fisubrs
mov
lret
push
mov
out
xor
cs
inc
sub
pop
dec
shrl
jecxz
adc
repz
inc
into
sub
xchg
xchg
gs
imul
test
mov
out
ja
aaa
and
pop
sub
push
push
std
xor
psubw
mov
ror
repz
shll
in
ds
sub
pop
cli
int
xor
stos
js
inc
push
out
in
popa
fnsave
out
sbb
dec
jne
mov
ret
int
fmull
sarb
sahf
lock
in
out
lret
sub
add
jo
mov
fiaddl
cmp
aaa
xor
cld
sahf
mull
movsl
mov
cmc
jbe
ret
dec
jmp
add
stos
mov
mov
jno
shlb
push
ja
dec
mov
inc
lock
or
jle
js
flds
xchg
push
sahf
add
xchg
sbb
mov
mov
xor
adc
jo
and
nop
cmp
dec
enter
mov
incl
das
jmp
js
mov
lds
jl
shl
jne
out
push
loopne
idivl
test
iret
lea
insb
ja
dec
xchg
incb
mov
jg
int3
add
mov
sbb
iret
inc
mov
push
cmp
dec
pop
cmc
pop
fwait
pop
adc
bound
test
sub
out
lds
xlat
pusha
or
xor
sub
mov
scas
mov
dec
xchg
inc
jmp
and
dec
inc
or
outsb
stos
insl
sahf
xchg
lret
and
add
add
xchg
notb
sub
lods
flds
js
jle
jp
jle
xchg
mov
lods
scas
cmp
les
dec
in
hlt
cmpsl
xlat
pop
sbb
pop
fnstcw
mov
add
popa
aad
js
push
push
and
ret
sub
xchg
and
mov
or
enter
movsb
pop
scas
sti
lods
xor
sub
shll
fs
push
pop
sub
cltd
xchg
xchg
mov
arpl
jmp
lea
negb
cmp
out
dec
ja
jmp
cmp
sub
or
push
or
push
push
adc
sub
mov
and
or
aad
mov
push
dec
sbb
sub
jp
scas
pop
cmp
push
stos
dec
push
jne
rcr
inc
mov
or
mov
cmpsb
adc
mov
stos
jno
jg
fidivrs
xchg
fwait
pop
push
or
and
xchg
xor
out
adc
je
push
dec
inc
in
lret
dec
stos
adc
inc
imul
push
clc
push
pop
mov
lods
sub
xchg
xchg
fcmovnbe
add
xchg
xchg
sub
cs
pop
mov
rorb
icebp
outsb
fs
push
sbb
std
jge
out
mov
mov
adc
xor
sti
stos
clc
mov
lock
test
pop
ja
out
cmp
xchg
adc
adc
rclb
filds
je
mov
push
fs
out
ret
xchg
out
push
rol
adc
pop
cmpl
adc
jl
and
in
fst
ss
int3
mov
mov
inc
outsl
mov
rol
pop
jno
jg
mov
push
icebp
test
mov
mov
push
out
ficomps
popa
push
sub
or
sub
pop
pop
lcall
mov
cmp
mov
cmp
fwait
clc
dec
sub
jge
mov
sti
iret
ss
ja
scas
gs
adc
xlat
dec
xlat
adc
xchg
es
push
push
out
lret
fs
add
xchg
add
inc
pop
push
add
push
or
add
jp
add
ds
lret
out
sub
push
pop
jnp
mov
mov
push
inc
repz
out
mov
and
or
testl
sbb
aam
fisubs
or
pop
call
mov
loopne
pop
dec
push
mov
bound
lock
fbld
sub
xchg
movsl
test
mov
test
xor
pusha
inc
loope
mov
xchg
stos
or
out
jl
pushf
adc
dec
es
push
mov
cmpsl
lock
inc
and
shl
mov
scas
inc
sti
jb
jbe
mov
pusha
cmp
push
xchg
movb
lods
je
and
cmp
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
hlt
jle
jp
jle
aaa
mov
leave
jmp
jmp
lret
fwait
lods
push
call
pop
je
loop
shll
in
call
ret
in
addr16
pushf
push
pusha
inc
aad
cmpl
into
fwait
clc
jp
subl
divl
ljmp
adc
xchg
mov
int
adc
mov
jb
add
or
wbinvd
and
roll
mov
push
add
and
repz
xchg
and
lcall
sahf
scas
and
loope
ja
cmp
cmpsb
outsl
push
mov
jo
out
jp
jb
mov
call
sub
adc
sub
jge
pop
xchg
stc
ljmp
add
ret
and
jb
add
dec
pop
inc
add
lret
xor
dec
lock
cwtl
das
lahf
scas
fidivrs
xchg
cmc
scas
out
sub
sti
xchg
xor
dec
xchg
push
les
fbld
mov
enter
int
xor
and
scas
mov
sbb
pop
push
repz
jbe
adc
xchg
int
jae
adc
cli
lods
fisubs
inc
std
hlt
jae
fdivs
lods
ds
leave
in
adc
inc
adc
sub
fdivrs
enter
mov
cwtl
push
fcoms
pop
cmp
into
int
iret
cmp
adc
ret
div
cmp
xlat
popf
out
pop
ret
lds
lods
rorb
repnz
sub
test
dec
scas
loopne
or
jo
mov
jno
cmp
pusha
add
sbb
out
in
out
sub
mov
cmp
mov
cmpsb
jle
repnz
mov
fs
dec
fiaddl
push
aad
ds
sub
rcrl
push
pushf
jb
sti
outsl
xor
sbb
and
ret
mov
sbb
out
iret
and
and
je
andb
push
in
fcomi
add
xchg
xchg
decl
ds
outsl
daa
and
out
fmulp
adc
mov
mov
mov
pop
pop
ss
xchg
aaa
fld
add
xchg
aas
mov
mov
mov
pop
stos
lret
push
pop
sahf
pop
dec
jne
mov
rcl
pushfw
fildll
inc
or
cmc
fcmovne
cwtl
fs
add
nop
dec
push
jecxz
dec
push
xor
adc
std
ficomps
push
pop
cs
stos
jle
dec
in
repz
sbb
call
ret
ss
dec
cmc
cld
arpl
cmpsb
jae
lahf
stos
or
das
call
pop
paddd
or
aad
shll
cmpl
jbe
lret
mov
push
mov
mov
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
stc
add
jle
jp
jle
or
add
jge
or
pop
add
jg
inc
mov
xor
ss
out
lahf
fists
ds
mov
pop
ja
pusha
sti
push
sti
mov
popf
sbb
and
mov
xor
or
mov
cmp
jp
aaa
mov
js
xor
cmpsb
hlt
and
lds
dec
outsb
jnp
add
mov
js
mov
xchg
cmp
or
dec
xchg
data16
sbb
aam
lods
mov
xor
mov
pop
fcmovne
adc
fnsave
mov
imul
push
sbb
mov
adc
scas
adc
into
adc
sbb
inc
aaa
sbb
lahf
andb
or
jge
clc
loope
or
push
dec
and
cmp
fisubrl
sub
jl
and
sbb
mov
cmp
out
nop
cmpsl
push
fdivp
nop
sub
test
rorb
xchg
shll
cmpsb
mov
in
inc
cli
jge
jmp
enter
ficompl
js
adc
xchg
sbb
xchg
pusha
jmp
add
xchg
sbb
mov
xor
out
dec
push
add
iret
enter
je
in
testl
iret
fs
or
inc
testb
and
sbb
pop
nop
call
insb
lret
test
ds
cmp
and
out
aaa
and
cmp
inc
add
sub
pusha
inc
sbb
jle
add
inc
divl
sbb
aad
inc
or
push
jo
es
sbb
sahf
pop
outsl
xor
jno,pt
loope
lods
mov
js
jge
ror
int
cmpsl
sarb
movsb
ds
mov
xlat
sahf
or
jmp
jmp
jb
into
call
mov
adc
pop
mov
mov
sub
movsb
movsb
ret
sbb
sbb
aad
ja
rcrb
push
out
in
adc
cmp
pusha
frstor
sbb
mov
dec
push
imul
push
mov
and
push
or
lock
mov
mov
jl
jns
mov
les
nop
inc
test
outsb
pop
xor
sahf
cwtl
adc
push
mov
shlb
sbb
std
inc
jp
adc
out
cmp
lret
insl
mov
pop
pop
mov
out
adc
repz
or
imul
xchg
gs
push
icebp
movl
mov
xchg
pop
cmp
mov
and
sub
das
fs
sar
test
mov
lock
outsl
jns
cltd
into
dec
lock
mov
mov
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
push
xchg
mov
or
jle
jp
jle
inc
xor
icebp
jl
cmp
outsb
inc
mov
add
jl
in
gs
lock
hlt
movq
sbb
sub
pusha
mov
inc
loop
push
add
jg
adc
mov
cmp
mov
push
pusha
sub
out
xor
cli
int
ja
std
cltd
ret
mov
mov
fbstp
and
nop
sub
scas
inc
shll
fcmovnu
lods
cmpsl
push
repz
sbb
mov
mov
cmp
std
mov
lods
xchg
jmp
push
fisubl
pop
xchg
mov
xchg
or
insl
inc
aaa
pop
mov
mov
xor
ret
jae
jp
inc
inc
jge
jno
mov
or
inc
sbb
imul
icebp
imul
mov
pop
cmp
and
icebp
adc
xchg
mov
dec
pop
mov
jle
cmp
rolb
jg
add
mov
xor
or
lods
push
jbe
jl
cld
out
int3
dec
dec
repz
es
xor
sub
flds
lea
popf
std
push
jae
ljmp
add
cs
fcoms
scas
iret
mov
enter
inc
push
mov
imull
out
sahf
add
ja
je
mov
repz
push
mov
mov
jno
lahf
mov
jecxz
scas
movsl
jae
movsl
jg
or
aad
aad
mov
adc
outsb
sti
jbe
lods
add
adc
ss
clc
daa
pop
add
mov
scas
fsubrs
jb
fiadds
stc
pop
out
mov
aas
les
rclb
xor
adc
mov
dec
cmp
stos
xchg
mov
fmuls
scas
iret
push
out
rorb
pusha
xor
dec
movsb
pop
mov
pop
mov
mov
mov
add
sub
stos
ret
push
outsl
aad
aas
leave
xchg
cmpsb
dec
pop
jb
sbb
aam
adc
dec
test
cmc
test
jge
icebp
hlt
daa
in
lods
std
fidivl
data16
bound
xchg
xor
xchg
sub
and
xor
int3
and
mov
xchg
lcall
repz
clc
mov
mov
setno
dec
out
icebp
sub
stos
sti
rcrl
push
daa
repnz
cmp
cmp
and
clc
or
in
outsl
cli
sub
loop
sbb
leave
add
cmp
cmp
inc
or
mov
fsubrp
or
je
push
sub
lahf
rolb
imul
test
add
jp
mov
je
sub
inc
test
push
xchg
sti
or
or
inc
or
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
cmp
jo
xchg
or
jno
adcl
hlt
test
xchg
sbbl
and
fcomps
enter
push
inc
pop
xor
jl
push
arpl
gs
adc
insb
repnz
je
repnz
sahf
xchg
ror
cmp
or
push
lcall
sahf
test
mov
and
test
jmp
shlb
shr
adcb
or
stos
pop
movsb
iret
mov
subb
add
inc
rcr
jbe
cmpsb
dec
addr16
mov
and
mov
or
out
aas
mov
fistpll
ljmp
ret
inc
xor
idivl
push
add
arpl
pop
sbb
ret
or
sbb
das
push
js
mov
cmpsl
das
dec
xor
dec
xor
in
fbld
fwait
mov
enter
jle
mov
movl
js
pop
movnti
sub
aas
fs
testl
jne
sahf
cmpsl
das
ficoml
push
test
adc
adc
insl
fiaddl
cmpsl
mov
and
push
movsl
leave
push
nop
sub
cli
outsb
incb
pop
inc
or
cmp
subl
popf
icebp
mov
fisttpl
xchg
jmp
enter
push
add
adc
xchg
sub
cwtl
lret
cltd
out
enter
and
dec
push
jecxz
add
imul
mov
jecxz
mov
cmp
andb
mov
push
fildl
or
int
mov
push
add
inc
push
repnz
push
xor
fsubrs
xor
push
cmp
push
ficoml
into
fwait
sti
pop
mov
mov
mov
test
push
cmp
cmpxchg
jmp
and
mov
xchg
movsl
mov
fcoml
push
or
push
jle
hlt
or
loopne
test
xorb
shlb
sbb
xchg
mov
inc
sub
pop
mov
dec
imul
aas
pop
out
sub
pop
push
adc
adc
std
xor
pop
push
pop
lods
daa
mov
test
xor
int3
mov
insl
test
pop
cmp
ret
test
cmp
repnz
icebp
sbb
sbb
pusha
sbb
fxch
mov
xchg
cmp
test
dec
sub
push
xor
mov
push
fs
mov
imul
int3
sbb
flds
loopne
pop
or
xor
adc
lock
mov
sub
inc
sbb
push
cmp
add
xchg
add
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
clc
jle
jp
jle
orb
ret
roll
pop
aas
out
mov
call
push
pop
out
xor
cs
cltd
add
test
out
ss
mov
mov
fwait
outsb
dec
andb
push
rolb
imull
sub
into
lcall
pop
ud2
into
pop
fstpl
xor
push
xor
mov
lea
pop
pop
popf
ljmp
push
out
nop
nop
fcom
cltd
iret
xchg
in
pop
stc
pushf
xchg
scas
add
cmp
cmp
ljmp
nop
out
push
mov
or
test
scas
jg
std
add
push
jbe
inc
enter
mov
mov
sub
and
cmp
cmc
push
js
jmp
and
xchg
repnz
ret
mov
mov
ss
sub
or
mov
sarb
dec
in
stos
movsb
fiaddl
test
and
or
ss
lock
push
arpl
dec
and
lods
outsl
fidivl
adc
shrl
es
pop
les
jbe
jle
movsl
arpl
test
jg
mov
je
mov
xchg
push
inc
dec
mov
lock
scas
pop
mov
inc
out
int
and
lds
push
cmpb
fdivrl
cltd
outsb
push
sub
add
outsb
test
push
scas
cmc
adc
es
mov
iret
jmp
loope
dec
popl
setb
lds
push
das
pushf
push
hlt
cmp
mov
lcall
jle
in
pushf
fisubl
mov
inc
inc
xchg
fcoml
or
ds
mov
lret
add
xchg
sbb
test
sub
jmp
push
pusha
dec
mov
or
mov
scas
mov
ljmp
or
push
or
jg
mov
mov
push
fistpll
mov
sub
dec
aaa
aad
les
enter
dec
in
rcr
lcall
dec
inc
icebp
inc
pop
enter
sti
mov
fcoms
lret
add
or
cltd
push
sub
aaa
push
sahf
rcll
dec
in
mul
pop
add
cmovs
test
xlat
int3
lret
pop
adc
icebp
inc
push
aam
pop
dec
repnz
in
in
push
sbb
subl
clc
dec
sahf
pop
pop
add
aad
mov
pop
push
pusha
pop
cmp
iret
addr16
or
mov
movsl
pushf
in
mov
xchg
push
fisubrl
loope
fidivl
enter
je
sub
test
movsl
imul
mov
jo
sub
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
push
cmp
xchg
jp
jle
adc
mov
xchg
fucom
adc
xchg
pop
sub
dec
dec
sahf
out
sahf
cli
test
push
cmp
inc
js
cwtl
mov
cld
jl
in
mov
in
mov
adc
movsb
and
xchg
adc
mov
mov
dec
and
addl
sbb
mov
addr16
enter
ss
push
fidivs
cmp
sub
jno
push
pop
repz
or
pop
jecxz
mov
push
add
mov
enter
cli
jmp
pop
sbb
push
in
js
pop
pop
cmp
push
xor
pop
xchg
xor
mov
repnz
lcall
js
mov
sub
adc
mov
dec
push
sub
pusha
sarb
movsb
push
pop
xchg
into
in
icebp
push
cmp
pop
sub
sub
sbb
cmp
loopne
loope
test
mov
xchg
or
cmp
fs
xor
mov
pop
mov
mov
fs
aaa
or
dec
test
lock
aaa
sub
or
out
ror
mov
push
jl
jg
dec
inc
mov
jb
pop
cmpsb
jo
in
xor
adc
mov
mov
mov
inc
out
or
mov
mov
jno
popa
lods
shrl
cmp
lea
sbb
push
mov
hlt
cmp
pop
jl
or
sarb
or
leave
mov
call
push
js
inc
mov
mov
jp
or
fs
pushf
cmpsb
loope
in
in
std
mov
sbb
out
dec
dec
xchg
jae
test
adc
jbe
and
adc
bound
cs
jo
shll
mov
inc
test
rcrl
popf
leave
xchg
int3
loop,pt
xor
xchg
jp
cmp
mov
cmp
pusha
sub
aam
cmp
jge
pop
cmp
push
test
test
jne
fs
test
mov
getsec
cmp
and
ret
add
idivb
mov
push
fcmovnbe
xor
xchg
das
pushf
inc
lahf
jno
add
cmp
jne
out
jns
hlt
repnz
mov
jge
dec
mov
decl
inc
push
dec
popa
iret
fmulp
mov
dec
or
push
imul
jns
push
mov
paddusw
ds
dec
movsb
ret
hlt
sub
dec
or
fbld
pop
pop
push
push
scas
mov
mov
dec
or
lock
popl
daa
test
cmp
sub
adc
pushf
jl
pop
sub
pop
arpl
lods
sbb
xor
mov
frstpm(287
mov
sbb
or
cs
sub
adc
xchg
jge
push
les
adc
jmp
out
xor
mov
loop
into
xor
xchg
dec
lds
jp
jle
mov
rcll
out
int3
push
or
pop
add
mov
insb
iret
push
je
stos
jmp
daa
or
pop
addl
cmp
je
mov
xor
mov
jo
pop
mov
cmp
into
movsl
cltd
outsb
mov
rcrl
push
add
pop
mov
cmp
int
and
das
jo
inc
hlt
data16
das
push
out
sub
inc
test
out
repz
mov
stos
mov
cmp
xor
xor
xor
loope
data16
mov
adc
clc
add
in
insl
mov
fs
mov
cmp
loope
clc
mov
aam
hlt
and
insl
mov
hlt
shl
dec
jbe
or
cmpsb
push
adc
pop
mov
xchg
das
das
pop
int
std
roll
mov
shll
mov
in
jl
xor
jns
out
in
mov
outsl
mov
fldcw
cmp
rcll
or
mov
gs
push
popa
sub
xor
test
mov
outsb
pop
loope
pop
subb
xor
lods
lods
pop
jecxz
fiaddl
jp
jo
pop
mov
test
in
mov
scas
jl
inc
mov
mov
and
cli
pushf
jo
rcl
push
sub
ja
and
repnz
push
sub
ret
xor
xchg
jne
sahf
mov
fiaddl
pop
pop
dec
xor
ret
lods
mov
mov
jle
xlat
cli
cmp
pop
mov
and
in
xchg
mov
unpckhps
xchg
mov
jns
movsb
ds
test
mov
mov
fmul
notl
sbb
pop
xchg
and
call
xchg
add
push
mov
outsb
jnp
fadds
and
sbb
push
cmp
jnp
xor
mov
cmpsl
mov
push
ljmp
dec
or
and
jecxz
fdiv
or
push
jle
cmp
repz
sub
in
in
imulb
ret
repnz
and
fadds
add
aad
cli
sbb
addl
add
dec
sub
sub
clc
pop
pop
cmp
shlb
mov
ja
xor
ret
sbb
xchg
decb
mov
jp
aas
mov
rolb
sahf
inc
jge
enter
gs
push
lds
sub
lret
mov
push
xchg
or
pop
add
mov
mov
jmp
test
pop
pop
cli
std
push
js
icebp
pop
push
in
mov
repz
or
sbbl
and
jae
add
xchg
cwtl
inc
fldt
jg
dec
mov
inc
or
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
mov
jle
jge
jle
js
xchg
icebp
out
testb
push
mov
xor
jmp
imul
bound
jecxz
lods
xchg
repz
das
or
iret
pop
jp
jle
scas
in
aas
xor
popf
fmuls
xchg
in
pop
jge
cmp
int
scas
rcll
test
repnz
add
pop
add
and
and
orb
sub
cmp
dec
dec
xchg
ret
lret
jg
movb
or
xor
cmp
int
add
dec
mov
push
add
imul
bound
mov
pop
mov
push
insl
or
jbe
push
popf
add
ficoml
jb
cmp
fistl
xchg
stos
dec
or
lret
lods
movsb
sub
insl
aaa
jno
sub
imul
dec
movsb
xchg
mov
icebp
fwait
cmp
stos
cmpsb
rclb
fcomps
jne
pop
xchg
clc
pop
aad
or
cmp
notl
inc
ss
test
rclb
das
sarl
ret
sbb
inc
xor
into
xchg
aad
fisttpl
inc
mov
bnd
adc
mov
sbb
icebp
xor
add
jle
popa
mov
and
ret
aaa
mov
fldl
mov
jne
mov
out
pop
push
int
lcall
insb
cld
add
jbe
int
pop
pushf
movups
inc
fadds
sbb
leave
bound
add
cli
push
int
push
push
test
dec
pop
dec
cmp
cmp
bnd
xorl
rcrb
xor
scas
je
push
in
push
add
jp
xchg
jecxz
lods
push
pop
inc
out
and
dec
aam
outsl
sbb
add
mov
push
push
shll
jmp
rcrl
dec
push
lcall
add
jmp
add
hlt
test
lea
add
pop
in
mov
jecxz
clc
adc
lcall
add
xor
jecxz
cmp
xchg
ret
or
dec
adc
mov
int3
hlt
aam
push
dec
and
aaa
dec
add
push
pop
inc
insl
rol
or
dec
pop
adc
dec
dec
mov
mov
jl
in
mov
fildll
pushf
dec
mov
inc
ss
xchg
fcmove
jne
jbe
rorb
cmp
xchg
or
pushf
aam
shlb
enter
dec
lret
rol
test
mov
out
adcb
jg
xlat
cmp
push
outsb
ret
cltd
addl
mov
lea
das
js
mov
in
mov
mov
cs
adc
hlt
stos
loope
or
sbb
mov
mov
mov
and
sub
add
pop
mov
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
mov
mov
jge
jle
insl
mov
test
lret
xchg
add
add
mov
push
jb
mov
fwait
rcr
mov
push
jne
scas
xor
sahf
and
add
shlb
cmp
jne
xor
inc
cmp
rcr
aas
in
inc
movsl
inc
pop
iret
in
push
shrb
xchg
fimull
inc
aam
xchg
movsl
push
xor
adcb
pop
subl
or
test
ret
outsb
lret
add
je
xor
mov
fistpll
sti
cmpsb
lret
loop
mov
push
jle
xor
xchg
xor
and
mov
insl
es
xchg
sar
cwtl
inc
call
push
scas
sbb
xchg
les
stos
dec
repnz
dec
addr16
out
mov
jle
aad
adc
jl
js
repz
inc
mov
mov
movb
inc
loop
xchg
mov
adc
mov
sbb
lock
pop
push
jnp
fld
cmc
xor
adc
cmc
shrl
push
add
fidivrs
push
jge
fidivrl
pop
and
in
je
pushf
std
clc
mov
sub
jb
shl
test
push
pop
imul
subl
test
or
dec
mov
fcompp
cmpsl
adc
xchg
addl
ror
and
xchg
test
fmul
dec
xor
add
loop
inc
xchg
divb
cli
into
pop
nop
mul
xor
je
cli
sub
maxps
xlat
pop
xor
popa
icebp
repz
xchg
cmp
pop
jb
das
cmp
sbb
test
aad
mov
dec
outsl
xchg
mov
aad
test
enter
leave
mov
sub
mov
inc
jne
push
mov
rcr
out
sbb
xchg
std
fwait
mov
xchg
out
xlat
int3
arpl
cmp
rorl
lods
xchg
sbb
das
subb
xchg
ljmp
sahf
popf
xchg
mov
cmp
shlb
and
pop
ljmp
in
outsl
dec
addl
cmp
xchg
xor
int
lods
cld
sbb
stc
scas
fwait
xorl
fnstcw
rclb
into
out
adc
int3
pop
push
cs
fisubs
jbe
nop
push
mulb
push
pop
xchg
add
cmp
notl
add
lock
adc
gs
mov
jbe
cmpsl
insl
dec
bound
xor
cld
cmpsl
dec
add
pop
pop
insl
je
xor
fcompl
xchg
mov
or
inc
popf
scas
jl
jno
aaa
xor
in
mov
lods
fstl
dec
add
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
or
ja
ret
pop
and
cmc
dec
test
je
mov
push
sub
mov
lods
ss
mov
mov
pop
addl
test
ljmp
outsl
dec
jmp
jl
cmc
mov
jecxz
loope
sbbl
ret
iret
xchg
leave
jns
pop
jns
cmp
imul
pop
ljmp
fisubl
mov
loopne
add
cmp
sbb
xor
in
cld
sbb
test
pushf
aas
aaa
mov
lea
push
mov
mov
lahf
repnz
nop
popa
sub
inc
stc
adc
out
mov
roll
push
cltd
out
into
xchg
mov
or
cmp
lea
addr16
sbbb
cmp
cmp
sub
pop
shr
mov
xor
cmp
push
in
loop
addl
dec
fwait
lahf
mov
shrl
test
inc
outsb
xor
fbstp
sbb
es
sbb
dec
jecxz
pop
dec
inc
jg
stos
xor
cmpsl
add
lods
xchg
incl
mov
fstps
adc
icebp
lcall
mov
xor
push
lds
shrl
int
dec
ret
test
in
fldt
aam
mov
mov
insb
and
add
dec
fldcw
mov
xor
clc
cmp
jl
mov
jle
and
sti
cmp
icebp
pop
xor
fsub
loope
and
dec
xchg
ret
and
push
add
mov
sbb
inc
sbb
jmp
int3
cltd
dec
dec
and
lods
sbb
popf
lret
pop
stc
mov
xchg
mov
ja
addl
jnp
fdivrs
fdiv
xchg
das
pop
lea
test
insl
lds
mov
mov
aad
mov
push
mov
clc
sub
add
jnp
push
mov
aaa
adc
fbld
xchg
dec
mov
addr16
fcmovb
and
cltd
cs
jb
mov
jp
jno
lret
bound
or
lcall
ret
or
lret
sbb
fldt
lahf
xor
xor
cld
out
xchg
adcb
xchg
les
xchg
jmp
iret
fiadds
push
mov
sti
imul
ds
data16
int
and
addl
xchg
es
outsl
dec
cmp
pushf
int3
sub
fstpl
ret
test
pusha
sbb
jl
test
ja
lods
movsb
push
lods
rorb
outsl
adc
mov
mov
mov
movsb
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
insl
jnp
and
jle
jns
jp
mov
adc
jae
mov
mov
mov
pop
lcall
jle
imul
mov
test
lret
push
mov
push
pop
movaps
test
mov
jnp
adc
pop
pusha
in
dec
fdivrs
pop
or
cmp
sbb
push
mov
dec
mov
fstp
imul
shll
subl
mov
mov
add
xorl
sti
xchg
pushf
movsb
lea
popl
jno
inc
in
and
inc
loopne
sub
and
lea
mov
cmpsb
push
mov
push
test
or
and
lods
lret
loop
not
test
das
sub
cli
dec
pop
push
jne
pop
jb
jae
outsb
mov
xor
jmp
mov
test
repz
mov
in
push
lods
jl
fwait
cmp
loopne
xor
cwtl
int3
loope
daa
inc
scas
jg
cwtl
lahf
inc
stos
sbb
gs
xchg
push
mov
ficompl
and
mov
sub
xor
mov
test
test
add
mov
daa
or
int3
push
cmpsl
sbb
push
mov
mov
cmpsl
ficoml
in
mov
cs
and
mov
pushf
das
cmp
gs
fdivrp
add
popa
jl
pop
loope
adc
fmul
stos
repz
stos
sub
cmp
test
jge
sub
jne
loop
xlat
jno
mov
je
adc
mov
test
mov
iret
xor
or
jle
sub
lods
jns
leave
dec
fs
adc
inc
adc
sub
imul
adc
and
lock
fiaddl
inc
xor
repnz
xor
xchg
jge
or
inc
lods
divb
push
sbb
cmp
jge
inc
pop
cmp
lock
das
push
mov
lcall
push
adc
dec
dec
es
mov
xor
pop
jg
hlt
mov
popa
xor
lock
out
dec
mov
outsl
sub
push
enter
jbe
imul
or
push
lahf
cmp
sub
pop
sti
int
mov
pop
push
or
and
shll
fnstcw
push
int3
and
ret
insb
mov
out
pop
push
cmp
stos
negb
and
lods
jbe
jg
xchg
cwtl
mov
fdivs
lods
sub
pop
xor
mov
int3
or
in
loopne
or
lea
push
add
js
mov
xor
stos
and
dec
push
rorl
jbe
arpl
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
cmp
xchg
jle
jge
jle
cwtl
sub
int3
jo
int
add
dec
sbbb
jnp
lods
movsl
sbbl
pop
cmpsl
jnp
clc
cmp
ret
sub
dec
jns
jb
mov
mov
mov
ljmp
xlat
and
hlt
push
jno
or
sbb
fstps
lcall
xor
in
push
in
dec
scas
sbb
push
call
jbe
mov
rorl
je
ret
iret
mov
pusha
sub
cli
das
and
roll
sub
imul
dec
ss
aad
sub
add
mov
push
inc
dec
out
mov
push
test
icebp
jmp
pop
ss
mov
mov
pop
cltd
dec
clc
cmpsl
lea
add
xchg
ficoml
and
rolb
or
cmp
stos
xchg
pop
or
or
testl
in
and
aas
jo
sti
mov
push
pop
mov
jecxz
sbb
sbb
outsb
dec
ja
xchg
lret
add
adc
std
xor
adc
mov
xor
popa
lahf
add
pop
jmp
inc
cwtl
popf
shrb
jle
jbe
mov
ds
lret
mov
es
mov
sbb
scas
inc
nop
outsb
loop
bound
cmp
jl
dec
pop
xor
jo
mov
sbb
mov
push
sub
adc
push
insl
inc
mov
loopew
bound
mov
cmpsb
xchg
xor
xchg
push
jl
ds
mov
add
mov
cmpsb
data16
fisubrs
push
dec
adcl
or
lds
and
dec
dec
xchg
outsb
mov
xchg
shrl
xchg
jo
std
cmp
aad
dec
daa
jbe
popa
ficompl
mov
shl
xor
jnp
jg
addr16
roll
hlt
xlat
pop
dec
sub
push
pop
mov
inc
inc
fst
aas
gs
mov
jmp
mov
jo
xchg
iret
movsb
or
in
mov
cmp
roll
push
inc
dec
mov
dec
xchg
adcb
mov
push
fistl
cmpsl
addb
push
mov
in
in
mov
pop
movsl
jae
ss
dec
pop
inc
sub
andb
jg
cmp
mov
pslld
cmpsl
pop
xor
rorl
icebp
iret
iret
sbb
adc
rolb
jmp
out
std
add
cmp
test
ja
or
out
mov
mov
lret
cld
negb
repz
and
push
fcmovnb
daa
inc
jge
in
dec
pop
cltd
popf
fucomp
clc
cltd
js
and
push
jmp
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
in
xlat
sub
jle
rcr
cmp
repz
pop
mov
inc
xor
cmp
and
pop
out
mov
push
pop
sub
test
and
jnp
jo
rol
into
lret
push
xor
or
aam
aad
inc
into
daa
mov
dec
sarl
push
aaa
jmp
pop
adc
pop
mov
int3
lahf
cmp
mov
test
icebp
mov
das
shlb
movsl
adc
cmpl
icebp
inc
imul
inc
mov
push
addb
pusha
inc
pop
lds
cmp
std
das
testl
mov
dec
xor
aad
sub
mov
stos
addb
mov
in
inc
xchg
pop
cmpsb
lods
rcrb
in
movsl
xchg
pusha
cltd
inc
pop
jns
sub
xchg
mov
lea
mov
cmpsl
add
cmc
lods
push
xchg
idiv
fsubs
sar
movsb
je
inc
jbe
clc
mov
or
dec
sub
daa
ret
sub
das
mov
jns
dec
rcrb
lret
push
popa
lcall
fldt
loop
out
int3
mov
mov
and
and
in
xchg
lock
dec
mov
mov
mov
pop
rolb
filds
ljmp
adc
sbb
push
jecxz
sbb
and
xchg
fistpll
or
insb
xor
xchg
packssdw
lret
xor
xor
inc
stos
fidivs
rorl
jnp
mov
js
push
popf
xor
add
mov
xchg
js
repnz
shll
rcr
push
jo
inc
adc
in
add
dec
nop
sbb
call
in
in
pop
push
nop
xorl
repnz
sbb
sub
dec
aas
inc
scas
mov
push
pop
or
lds
inc
ljmp
aam
into
xchg
pcmpgtw
mov
int3
pop
lahf
hlt
adc
lea
jb
jmp
lods
inc
cmp
notl
icebp
cmpsb
pusha
lea
dec
imul
shlb
hlt
or
ljmp
popa
int3
cmp
adc
fbld
mov
popa
dec
push
cmp
xchg
adc
cmp
dec
scas
hlt
push
add
insl
insb
jl
pop
inc
mov
idivb
cmp
fmul
mov
push
imul
bound
out
jecxz
fadd
daa
mov
sbb
fsts
movl
movsb
aad
mov
insl
das
xlat
gs
shlb
stos
or
mov
jg
adc
mov
mov
sub
scas
xor
hlt
out
aas
and
xor
lea
jmp
das
subb
mov
xor
sub
adc
ss
jle
jge
jle
imul
push
mov
test
xor
inc
in
pop
fnstcw
mov
sbb
lea
hlt
not
cli
adc
call
xor
xor
jecxz
pop
testl
in
pop
aad
inc
filds
xchg
sbb
cmpb
sbbb
shl
in
fistl
jp
ret
leave
mov
cmp
jmp
dec
push
fs
mov
testl
pop
shl
push
movsb
cmc
rdpmc
and
xchg
push
iret
mov
push
mov
push
or
daa
push
add
hlt
out
scas
fsubl
in
ljmp
xchg
jle
xchg
out
icebp
adc
inc
push
and
mov
adc
int
mov
mov
iret
sub
movb
cmpsb
scas
mov
push
data16
dec
dec
mov
sbb
or
pop
jnp
and
or
sub
ss
and
dec
sub
pusha
sub
pushf
popl
ja
jle
mov
pop
cmp
mov
lock
mov
in
or
and
repnz
icebp
and
imul
aaa
test
iret
push
inc
pushf
push
dec
outsl
pop
in
out
and
inc
std
je
call
fucomp
cltd
ljmp
js
push
ror
and
bound
cmc
dec
outsl
stos
test
mov
fimuls
jnp
jb
jnp
mov
pop
das
test
pop
daa
aas
std
adc
mov
inc
and
mov
sbb
inc
and
outsb
cwtl
sub
aad
inc
or
pop
mov
leave
int3
mov
out
subl
xchg
xor
adc
push
int3
add
sbb
inc
add
add
mov
dec
xlat
dec
out
mov
out
dec
stos
les
dec
mov
sbb
clc
fcomps
aas
adc
cltd
push
dec
dec
sub
xlat
leave
dec
dec
pop
leave
xchg
sub
fs
push
loope
clc
fs
jnp
imul
cmp
push
xor
push
icebp
mov
cmp
sbb
push
repnz
mov
loopne
pusha
scas
push
out
pop
ret
pop
out
pusha
push
mov
sub
cmp
pop
xchg
and
data16
jp
dec
pop
test
jns
ds
mov
sub
es
les
daa
mov
cmpsl
cmp
mov
push
cmp
add
mov
movsb
fs
inc
inc
call
imul
or
stos
or
loope
js
sub
imul
xor
jno
fsubs
jecxz
and
sub
dec
ret
leave
ds
int3
and
mov
or
ret
xchg
outsl
mov
mov
jmp
repnz
adc
aad
fcoms
inc
push
xor
jge
jle
loopne
push
in
and
out
dec
pop
punpckldq
and
stos
shrl
jno
lods
fs
push
mov
not
mov
jae
pop
mov
test
sbb
in
sahf
push
push
jnp
cwtl
mov
mulb
mov
in
mov
nop
push
inc
xlat
es
lret
shll
inc
cmpsl
js
pop
out
push
add
cmpb
dec
mov
mov
inc
jle
sbb
rclb
mov
pop
sti
int
out
xlat
inc
rcl
jecxz
add
je
sub
dec
out
js
es
or
loop
xchg
in
cs
adc
push
dec
ret
sti
mov
dec
bound
lret
std
xor
add
cmp
mov
or
imul
test
mov
mov
faddp
lods
pop
cmp
push
inc
xor
jp
shll
add
xchg
imull
mov
adc
xor
daa
xchg
xlat
xchg
test
fistpll
sub
push
pmaxub
or
add
dec
mov
cmc
ret
sbb
cmp
das
out
xor
jg
pop
pop
fimuls
adc
jmp
mov
jne
mov
or
sub
insl
cli
stc
lods
lret
dec
mov
mov
js
push
fnsave
cmpsb
ljmp
rcrl
fisttpll
cmpl
iret
jmp
jae
dec
jae
adc
out
sbb
in
mov
sbb
mov
popf
cmp
jbe
mov
loopne
xorl
stc
call
mov
or
movsl
daa
jnp
inc
dec
and
cli
loop
hlt
in
call
pop
sub
jecxz
insl
bnd
es
lahf
movl
cmpl
mov
cmpsb
dec
dec
mov
sub
adc
scas
add
movsl
xlat
push
adc
lret
js
dec
je
cmpsb
xchg
push
xchg
scas
mov
fwait
cld
fidivrs
shlb
arpl
dec
scas
sarb
xor
pop
ss
push
add
mov
subl
sub
imul
mov
fucomp
test
and
mov
ja
lcall
nop
dec
xchg
mov
pop
mov
mov
test
cmp
fldenv
push
dec
rcll
pop
decl
inc
int3
mov
pop
aam
insb
outsb
dec
arpl
negl
ds
add
sbb
test
and
insb
ja
push
lahf
xor
outsl
sti
push
loopne
cmp
lock
or
mov
or
dec
adc
pusha
mov
icebp
cmp
mov
add
cmp
clc
pop
inc
xchg
dec
mov
loope
loope
adc
inc
fisttpll
call
rorl
add
call
roll
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
das
aas
std
xor
jle
inc
jl
mov
test
sub
daa
dec
xor
pop
mov
in
or
pop
cli
fmull
out
mov
xor
xchg
test
mov
sbb
int3
sahf
and
dec
jmp
mov
xchg
and
jmp
jns
rolb
das
lds
dec
xlat
sbb
icebp
pop
nop
sbb
iret
xchg
shrl
repz
jb
ljmp
pop
mov
les
adc
lods
jmp
and
xor
call
cld
in
xchg
stc
rcrl
ret
jb
mov
push
jne
scas
gs
xor
je
adc
aas
push
mov
imul
cmp
pop
mov
sbb
mov
jbe
int3
ficoms
mov
cmp
rep
mov
popa
test
lock
clc
gs
cmc
mov
xor
add
mov
jno
in
dec
cmpsl
push
imul
and
pusha
push
pop
pusha
shrb
cli
negb
pop
jbe
shlb
and
mov
jl
loop
jecxz
jae
dec
mov
xchg
pop
aad
addb
lds
cs
fsubrs
scas
daa
inc
adc
stos
cmpsb
mov
mull
mov
pop
outsl
cltd
push
pop
in
add
mov
lock
or
orl
and
cmpsb
fadd
dec
sahf
push
add
xchg
stc
push
cwtl
mov
adc
in
and
mov
mov
push
mov
jb
mov
push
add
mov
push
stos
aas
ds
shl
dec
arpl
fidivl
aam
addr16
outsb
xor
xchg
or
pop
or
test
lods
mov
pop
cli
inc
sbb
sub
dec
mov
jg
sub
cmp
clc
jmp
mov
lcall
and
xchg
adc
push
jo
mov
adc
xchg
cmpsl
mov
shlb
push
sbb
pop
adc
movsb
cwtl
sub
or
lret
pop
mov
fsubl
add
movsl
or
jo
dec
cmp
andl
imul
lret
rolb
imul
sarb
rcr
dec
stc
push
shl
fwait
imul
rorb
xor
sub
jne
jo
repnz
add
mov
daa
xchg
pop
scas
xor
push
filds
jo
xor
stos
popf
shr
mov
sub
dec
xchg
aam
jbe
movsb
sub
add
sub
xor
jl
adc
jle
dec
data16
jbe
jmp
xchg
lods
dec
xchg
adc
jg
mov
and
mov
cmpsb
cmp
std
shlb
fistl
xor
and
push
outsl
decl
pusha
sahf
jg
fisubl
adcl
int
push
aaa
add
js
cwtl
test
xor
pop
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
fldl
out
aas
movsb
jle
push
jg
jle
adc
add
sbb
repz
lds
jae
sti
cmp
dec
loop
dec
imul
pop
cwtl
into
mov
fwait
jb
pushl
xchg
push
aas
pop
mov
aam
lods
mov
pop
push
cs
xchg
sti
enter
cli
xor
sub
mov
scas
lock
or
fdivl
aad
pop
je
xchg
sub
insl
in
push
mov
mov
repz
or
pop
loope
xchg
mov
test
sar
sub
mov
jne
add
ss
das
les
push
xor
inc
xchg
sbb
and
lds
pop
jge
test
scas
lds
cltd
sbb
mov
in
jg
sbb
fwait
out
mov
inc
push
jmp
inc
push
mov
shrl
cmc
shrl
push
mov
adc
cmpsl
sbb
ljmp
fildl
popf
adc
roll
pop
adc
pusha
xchg
push
outsb
cmc
inc
ret
jle
sub
sub
push
sbb
test
add
add
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
loope
iret
movsl
jle
push
jg
jle
jecxz
adc
je
jle
fadd
sub
daa
outsl
inc
lods
pop
jne
xchg
outsb
loope
inc
dec
and
or
mov
and
xchg
cmp
call
fldenv
mov
loop
push
mov
add
test
addl
cli
mov
xchg
or
inc
lret
sub
sub
les
enter
shr
data16
shl
adc
pop
push
fsubl
dec
test
ret
stos
call
insl
cmp
fsubrl
test
cmp
inc
xor
stos
daa
lea
sub
dec
sub
popa
aam
ja
rcrl
inc
push
adc
mov
ret
push
scas
sub
stc
rcrl
sbb
push
mov
test
cmp
mov
xchg
or
xor
leave
mov
pop
repz
mov
out
push
mov
or
popa
jge
xchg
testb
fldt
in
inc
cld
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
bound
push
jg
jle
and
mov
push
adc
cmc
mov
lods
sub
mov
mov
fsubl
inc
push
int3
sub
das
adc
mov
push
rclb
cs
mov
lods
outsl
cmpb
movsb
and
fsubrs
mov
sub
icebp
or
mov
stos
daa
xchg
js
jbe
das
push
lret
imul
ds
movsb
xor
add
xchg
sti
xchg
imul
aaa
xlat
mov
sbbl
sub
rclb
xor
xchg
pop
mov
jnp
pop
bound
lods
push
test
daa
add
movsl
stos
mov
xor
aad
sbb
orb
push
lea
std
jg
mov
inc
add
daa
xchg
js
in
sti
pop
leave
loope
loop
in
pop
out
xor
mov
shr
movsb
mov
xchg
jp
inc
cmp
mov
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
hlt
cwtl
adc
push
jl
jle
ja
out
inc
inc
push
jae
mov
in
fldt
xor
sbb
pusha
adc
mov
cltd
mov
imul
mov
outsb
pop
test
ret
jae
dec
std
mov
pop
stos
cmp
mov
je
adc
lds
repz
jbe
adc
jo
cmp
and
scas
inc
pop
mov
rorb
and
iret
and
adc
js
ljmp
test
popa
insl
enter
lods
xchg
cmp
lret
xor
arpl
sbb
mov
mov
das
jb
inc
in
sub
outsl
jecxz
pop
jnp
mov
cmp
imul
add
cmp
loopne
xor
adc
jle
lret
jno
cmpsl
mov
xor
sbb
sbb
fsubl
push
dec
imul
test
mov
ret
adc
push
mov
cmp
jecxz
jle
add
les
stos
adc
loop
aam
cmp
aaa
cmp
bound
jecxz
sarl
scas
push
lret
mov
add
inc
stos
or
mov
sbb
cmpsb
jne
mov
imul
jmp
mov
and
mov
xchg
push
jmp
nop
jmp
aam
inc
notb
mov
es
ljmp
xor
out
jg
addl
push
out
daa
cmpl
jmp
push
adc
cmpsb
mov
push
aam
les
sbb
xchg
loop
test
pop
xchg
cmp
push
mov
sahf
or
ss
idiv
in
adc
adc
dec
scas
fmuls
jb
gs
jae
sub
cs
jb
mov
mov
mov
dec
es
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
jecxz
cmp
or
sbb
daa
sub
push
xor
test
and
fisubrl
jge
mov
rorl
sub
insb
insb
fsubl
dec
sbb
push
dec
aam
mov
push
test
push
mov
insl
hlt
mov
ljmp
adc
xchg
adc
add
imul
xchg
aaa
jb
stos
pop
out
adc
push
pop
dec
and
add
ljmp
cmpsb
jecxz
rep
push
ret
mulb
clc
or
add
pop
dec
pop
mov
or
cmp
les
mov
dec
dec
or
out
mov
mov
mov
adc
stc
int3
pop
pop
sti
mov
inc
pusha
cmpb
push
add
add
ficomps
cmp
mov
push
ret
cmp
es
sub
int3
jg
aam
mov
outsb
lea
aad
inc
les
xchg
aaa
dec
in
out
into
stos
daa
sub
xchg
sti
push
je
pop
outsl
cmc
outsb
sub
popf
push
aad
pushl
out
ficompl
sub
cltd
jl
sarl
xchg
ret
mov
mov
push
insb
push
jp
dec
fwait
mov
pop
mov
add
pop
movsb
pop
push
jecxz
fs
xor
xchg
lret
js
and
jne
cmp
inc
sbb
nop
sub
cmc
mov
fisubs
testl
or
arpl
ljmp
xchg
lahf
xor
sbb
fstl
cmpsb
mov
mov
movsb
sbb
sahf
movsl
jle
iret
inc
fcmovbe
inc
mov
lret
ds
push
lret
push
cwtl
ret
cltd
ss
dec
push
test
mov
mov
dec
ds
movb
lds
jge
jo
lahf
dec
sub
mov
dec
cmp
sub
test
loop
jne
cld
loope
mov
ds
jno
shr
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
bound
stos
lcall
repnz
popa
inc
dec
enter
stos
es
mov
rcrb
and
or
dec
lret
jae
or
into
sbb
pop
mov
mov
cmp
imul
insl
cmp
jbe
sar
sbb
cmp
mov
movd
out
addr16
fsubrp
pushf
mov
gs
xchg
mov
cmp
sbb
sti
cmp
out
jns
xor
cmp
push
out
leave
mov
lods
pop
xor
and
in
cmpb
xchg
cmpsl
nop
cmp
xchg
pop
push
jle
xor
push
in
aam
fwait
andps
xchg
into
ficompl
lods
dec
sub
popf
out
jp
adc
sbb
nop
stos
pop
mov
stos
pop
and
or
sarb
aas
daa
add
inc
xchg
insl
xchg
mov
inc
fcomp
and
orl
lock
xor
cmp
sub
adc
xchg
addr16
imul
push
or
adc
push
cwtl
pop
sub
sub
addl
fadds
mov
inc
mov
pop
out
sti
icebp
push
sub
incl
out
cwtl
inc
xchg
stc
sar
mov
jae
daa
and
sti
aas
lock
push
mov
out
xlat
imul
adc
push
cmpsl
rcrl
fs
xchg
jb
xchg
stos
roll
sbb
lods
shlb
cmovae
jo
pop
jne
popa
inc
fcomp
orb
xchg
daa
mov
imul
jne
push
mov
cmp
sub
or
test
mov
ljmp
ljmp
out
cmpsb
mov
sti
pop
jo
stos
sbb
dec
ds
clc
nop
sbb
xchg
ja
inc
pop
std
adc
repz
daa
cmp
add
add
test
add
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
mov
stos
mov
xor
shlb
fstl
jl
xchg
pop
je
sbb
jb
dec
xchg
add
mov
movsl
insb
add
push
rcrl
mov
jb
movsb
imul
scas
lods
sbb
mov
movsl
cld
mov
xchg
pop
mov
sub
or
dec
xchg
xor
pop
sbb
sbb
lods
std
xchg
nop
add
es
ds
insb
or
and
cltd
dec
or
arpl
mulps
andl
lds
or
mov
pop
push
mov
inc
add
bswap
mov
pushf
or
lcall
js
jb
imul
fsts
jmp
dec
ss
pop
fisubs
mov
xchg
cmpsl
cmp
mov
push
popa
push
dec
ret
fs
pop
push
mov
fwait
insb
pop
xchg
and
in
pop
je
lods
aas
sbb
push
test
ja
fbstp
sbb
sub
daa
xor
xor
sub
adc
add
dec
sbb
cs
push
aam
cmpsl
xchg
and
fwait
daa
daa
fs
sbb
xchg
lcall
ljmp
das
inc
jne
fprem1
in
pop
dec
ljmp
push
jge
ja
das
or
push
cltd
sahf
rorl
inc
rcr
sbb
lock
mov
sbb
fistps
call
xchg
sti
scas
fisubs
fldt
pop
pop
mov
xchg
jno
jb
mov
push
divb
movsl
jbe
pusha
inc
cmp
jns
pop
cmp
std
loop
and
pop
sahf
es
mov
adc
popf
pop
or
arpl
inc
jg
lahf
add
inc
lret
out
xor
test
fisubrl
js
pop
mov
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
fucomp
jno
scas
stos
jle
lods
jl
jle
out
sar
dec
dec
or
pop
lods
push
sub
jo
cmp
and
pop
adc
cmpsb
fmuls
out
cmpl
shlb
out
inc
std
pushf
mov
jb
out
rorl
stos
inc
pop
ljmp
rolb
inc
cltd
sbb
or
pop
fldl
mov
mov
lret
mov
test
mov
push
lahf
dec
pop
mov
js
ss
xchg
shll
stos
les
inc
mov
xchg
lock
pusha
das
mov
out
xchg
pop
ja
pop
stos
cmp
dec
mov
mov
jge
lret
and
out
cmp
int
fmull
scas
aad
adc
xor
mov
std
pop
call
inc
test
cmp
inc
filds
enter
les
in
mov
scas
push
fmul
add
push
and
push
mov
imul
inc
pop
pop
lods
sbb
sti
jnp
adc
nop
ret
fs
mov
in
jo
sbb
cmp
dec
mov
jnp
mov
in
pop
outsl
nop
pop
adc
dec
loop
rolb
inc
imul
call
cmp
int3
push
aas
ss
jmp
das
sbb
aas
mov
in
and
les
test
addr16
test
dec
mov
push
xchg
pop
call
shll
mov
pop
std
inc
lahf
shlb
xchg
lock
cmp
cmpsl
pop
cmp
adc
add
jg
push
aam
sbb
inc
fiadds
iret
jb
xorl
inc
in
test
cmp
fstpt
fistl
push
jle
xchg
sub
lret
dec
mul
call
adc
cld
outsl
cmp
fsubr
outsl
cmp
ja
fsubrl
negb
gs
fnstenv
cmc
pop
mov
int
ljmp
cmp
clc
fs
subps
cmp
sbb
sbb
out
mov
mov
mov
shll
test
inc
sti
push
xor
add
fbstp
push
cmp
into
push
sbb
mov
jb
mov
lret
jecxz
mov
push
aas
mov
pop
mov
inc
mov
push
scas
cmpsb
outsb
enter
inc
cltd
inc
xor
test
movaps
int
xor
xor
mov
ret
mov
leave
mov
mov
clc
mov
mov
and
testb
ret
jl
pop
mov
ljmp
pushf
clc
subl
mov
addl
jmp
insb
xchg
xchg
in
or
mov
cmp
mov
jle
jl
jle
pop
jo
shl
cmc
filds
mov
popf
imull
jg
cmpb
or
movsl
fadd
lcall
loop
popa
mov
jae
lret
xor
pop
or
pop
mov
test
stc
or
adc
pop
lahf
cmp
inc
fucomip
pop
push
inc
or
adc
push
outsl
shll
lods
orb
dec
in
push
push
xor
xor
enter
sub
lahf
and
add
movsb
sahf
dec
aad
outsl
filds
lock
inc
jo
adc
xchg
cld
data16
sub
xchg
and
pop
rcll
xchg
loope
rclb
lret
sbb
sub
xchg
out
test
mov
mov
mov
dec
in
xchg
add
inc
test
and
push
or
inc
popf
aad
push
repz
fcoml
imul
scas
xchg
sbb
js
jge
fistpl
outsb
loopne
pop
lods
xor
in
sbb
dec
jnp
xchg
mov
rorb
cmp
dec
js
js
pop
into
out
push
adc
adc
rcr
fmull
inc
int3
test
test
sbb
jb
mov
xchg
call
mov
popl
lret
lahf
sbb
shll
popf
xchg
dec
test
orb
push
orl
push
gs
or
faddl
pop
daa
shrb
add
in
inc
add
es
fcoml
jl
loop
ljmp
adcb
cwtl
jo
jae
addr16
pop
jne
mov
sahf
dec
aaa
push
jp
loopne
pop
mov
movsl
cmp
inc
mov
clc
shll
scas
test
sbb
and
mov
sub
fwait
mov
pop
add
jbe
aad
sub
mov
push
rcrb
arpl
xchg
lret
or
test
inc
push
cmp
jmp
inc
ss
scas
enter
enter
mov
bound
out
in
xchg
movsb
cwtl
mov
lods
jg
lret
xchg
jg
push
nop
insl
jp
sbb
jmp
inc
mov
sub
stos
test
lret
int
scas
sbbb
cld
stos
bound
scas
or
inc
xchg
jns
inc
out
cmp
push
xor
inc
jecxz
adc
push
push
out
ljmp
jae
icebp
sub
pop
fstpl
sub
mov
ljmp
shlb
ss
add
or
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
dec
loop
ud2
mov
jle
jl
jle
aaa
shll
ljmp
sub
insl
xchg
test
or
fdivrl
dec
in
jae
push
daa
push
jne
ficoml
xchg
outsl
sbb
std
jl
addr16
sub
mov
out
ds
jns
out
mov
xchg
mov
adc
sbb
call
inc
push
inc
mov
addr16
leave
orb
jns
lret
fnsave
mov
scas
add
rcrl
xor
pushl
pop
pusha
sbb
adc
hlt
push
sbbl
jmp
rolb
rorl
push
loope
mov
ret
dec
xchg
sbb
pop
mov
andb
or
xor
cmp
clc
lods
mov
enter
dec
xchg
xchg
jge
xchg
outsl
call
je
sbb
push
rcrb
jl
push
ret
sub
out
add
cmp
out
xchg
shrb
jecxz
mov
test
push
pop
sbb
and
jns
rcl
push
mov
mov
lret
mov
popf
lock
loop
push
and
inc
mov
mov
add
jne
sbb
sub
movsb
mov
nop
xchg
push
loopne
lock
or
push
daa
lods
dec
pop
cmp
mov
imul
dec
cmp
icebp
pop
icebp
lock
dec
ret
cmp
popf
iret
pop
pop
dec
push
fcmovne
test
mov
jbe
gs
mov
rorb
outsl
mov
test
mov
arpl
and
enter
and
xchg
adc
mov
xor
xor
testl
call
dec
push
sub
sbb
inc
jle,pt
push
cmp
sub
fcomps
jns
pop
add
sub
mov
cs
xor
dec
shll
ljmp
mov
jb
pop
xlat
sbb
push
or
mov
mov
push
and
jnp
les
out
lahf
sub
leave
loop
pusha
cmp
push
xchg
xorl
ja
mov
std
in
xor
push
or
pop
inc
cmp
shll
or
rorb
push
cmp
adc
sti
popa
cmp
or
cmp
sub
int3
add
popa
ret
ds
into
or
shl
adc
pushf
jl
sti
dec
outsb
adc
enter
push
mov
data16
aam
notb
in
and
stos
movsl
addps
loope
add
aaa
cmp
fs
xchg
add
add
jmp
lock
arpl
sub
scas
ret
rorl
lret
jle
lods
jl
jle
gs
gs
inc
dec
xchg
jo
jb
nop
and
fisubrs
sub
sbb
enter
adc
loope
mov
repnz
push
sbb
cs
loop
andl
imul
adcb
mov
inc
icebp
pop
out
xchg
dec
jnp
xchg
frstor
jmp
jno
popf
dec
pop
test
insl
movsb
insl
dec
xchg
repz
insl
xor
inc
pushw
jae
push
into
pop
pop
rcrl
xor
es
ljmp
inc
clc
cmp
insb
mov
enter
and
xor
enter
mov
lret
jle
lahf
int3
sti
sub
xchg
lods
imul
xchg
mov
imul
or
fistpll
pop
mov
jb
mov
adc
fxch
iret
out
xor
int3
std
or
mul
pushf
faddl
sbb
pusha
inc
mov
cmp
and
ret
out
and
dec
lret
insl
bound
or
jno
test
mov
mov
fs
icebp
in
subb
dec
push
inc
icebp
stos
cmp
pop
cmp
dec
jmp
mov
sub
stos
ja
repnz
adc
pop
mov
sub
dec
sub
mov
sbb
jns
sub
cmp
xor
lcall
jae
inc
mov
jle
cs
or
aas
push
cmp
jp
hlt
xchg
arpl
push
mov
mov
or
mov
inc
mov
cltd
xchg
adc
fldl
call
mov
adc
sbb
inc
cld
sar
jae
insb
imul
xchg
adc
lret
rorl
ficomps
xchg
pop
xlat
adc
fnstcw
ud0
xchg
idivb
outsb
iret
xchg
inc
scas
pop
mov
icebp
sti
fistl
mov
cmpsl
xor
lea
int
loopne
dec
mov
or
adcb
jg
es
ret
xor
jno
push
jne
scas
insl
or
pop
inc
repz
loope
movsl
mov
dec
outsb
shlb
addr16
or
inc
lret
test
js
mov
bound
ret
mov
mov
or
loope
outsb
pop
jl
dec
sahf
mov
aas
loope
rol
mov
addb
jg
pushf
loop
mov
and
imulb
pop
sahf
jae
xchg
mov
movsb
inc
adc
scas
js
ljmp
push
dec
pop
adc
dec
out
and
scas
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
dec
jmp
lods
jl
jle
inc
and
mov
dec
and
stc
insb
addb
mov
in
ljmp
xlat
fcomi
xlat
les
xchg
insl
xchg
daa
incb
in
je
push
stos
cmpsl
ds
xor
jno
dec
and
sti
push
cld
xchg
adc
fs
into
nop
or
dec
add
dec
mov
addl
xchg
test
test
stos
es
pop
and
pop
mov
mov
push
pop
popf
sbb
das
es
fbld
iret
adc
dec
orb
sbb
enter
ja
adc
loopne
in
and
adc
pop
jge
xlat
xor
jns
jae
std
je
sbb
in
mov
add
cmp
or
shll
aas
clc
mov
cltd
push
test
jge
adc
pop
inc
roll
in
or
jg
mov
cmp
mov
hlt
lret
addl
mov
icebp
lods
xchg
dec
push
and
xor
adc
movsb
call
push
push
shlb
jbe
inc
in
stc
cmpsl
iret
xchg
cltd
das
or
jb
inc
jle
or
jmp
mov
push
lret
cmpsl
mov
dec
dec
xor
test
dec
xor
dec
sub
cmp
jmp
shrl
in
adc
pop
push
icebp
lahf
xor
xchg
aad
add
push
sub
std
imul
sbb
adc
sbb
fistpl
adc
pop
lea
lahf
jmp
pop
fdivs
xor
movsb
cmp
cli
xor
sarb
gs
pop
loop
mov
mov
out
xchg
fmul
push
stc
ss
in
movsl
and
jle
add
mov
jp
fs
shlb
je
divl
in
inc
leave
xchg
push
mov
push
mov
push
icebp
adc
loopne
jle
sbb
pop
pop
fdivrl
or
arpl
and
cmpsl
sbb
xchg
or
jge
enter
aaa
sarb
movsb
pop
inc
adc
mov
xor
sti
lcall
mov
fisttpl
sets
jge
orl
sbb
stos
jle
xor
fwait
gs
jae
call
jnp
pop
push
test
lds
xchg
insb
pop
mov
lds
adc
sbb
push
sbb
jbe
xchg
cmp
in
jne
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
pushf
mov
push
mov
leave
les
push
imul
or
adc
cmp
xlat
hlt
mov
data16
mov
shr
arpl
fildl
adc
notl
pop
jae
inc
push
aam
sbb
sti
sbb
push
cmp
or
cltd
inc
cmp
sub
ret
xchg
and
daa
cli
cwtl
jge
pop
jnp
daa
and
or
fwait
and
test
adc
mov
rclb
decb
pop
sbb
outsb
outsb
test
fsubl
addr16
lock
pop
sub
add
out
lods
or
inc
xor
cmp
push
push
out
sbb
dec
shl
dec
dec
scas
sahf
push
jcxz
cmpsl
mov
push
pusha
loope
dec
sub
add
inc
adc
out
xchg
pop
mov
jp
add
out
jo
mov
or
insl
xlat
test
adc
jns
xchg
cld
cmc
imul
adc
std
mov
rcll
imul
or
push
ss
cld
punpcklbw
pop
pop
js
push
sub
int3
cmp
mov
in
and
bound
out
pop
cwtl
fnstsw
pop
testb
sbb
call
lock
mov
in
jne
std
mov
mov
cmpsl
adc
hlt
insl
push
stos
testl
mov
imul
xchg
ret
adc
pop
mov
lahf
std
fisttps
mov
pop
dec
popa
sub
push
int
pop
sarb
sub
cld
sbb
pop
xor
mov
ja
repz
sub
push
mov
mov
or
stos
and
mov
inc
test
mov
stos
leave
lods
mov
ja
dec
pop
pop
pop
aam
mov
pop
aas
das
sahf
cli
hlt
sahf
jecxz
xchg
daa
fs
incl
insb
aad
push
std
pushf
ljmp
xchg
push
jns
enter
insl
leave
roll
dec
mov
cld
std
cmpsb
mov
pop
scas
jbe
lcall
pushf
dec
imul
mov
adc
cli
cltd
push
stc
inc
or
jl
xchg
jmp
xchg
test
push
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
cmpsb
push
xchg
jle
ljmp
mov
add
and
sbb
push
fldt
dec
nop
jl
gs
or
sbb
sub
xchg
xchg
mov
outsl
push
ret
es
enter
sub
pusha
pop
fldln2
pop
mov
movsl
mov
fidivs
adc
push
fidivs
lret
push
xchg
es
int3
or
shrb
andl
push
xchg
and
jg
enter
push
pop
cltd
cwtl
mov
rorb
push
jg
jle
pop
add
pop
cmp
xor
bound
imul
movsl
pop
addr16
hlt
js
sub
inc
icebp
cmp
incb
in
cmp
fidivrl
aad
shlb
sbb
dec
xchg
ja
ret
dec
dec
out
and
add
int3
adc
orl
int3
notl
mov
shl
add
dec
lods
ja
mov
adc
stos
cmc
adc
stos
es
adc
outsb
pop
daa
mov
push
call
out
int
std
push
iret
pop
sub
dec
movsb
mov
dec
movsl
out
jo
add
das
mov
in
mov
fidivrl
fcmovbe
xchg
test
add
jno
dec
inc
push
mov
xor
add
fidivrl
inc
les
lds
and
fwait
mov
mov
push
add
enter
xchg
or
repnz
icebp
leave
push
lcall
mov
fwait
lahf
xchg
mov
test
mov
jle
ffreep
fisttps
cmp
or
arpl
repnz
xchg
adc
repz
jnp
lea
cs
inc
push
hlt
and
mov
je
push
mov
out
shlb
jbe
inc
imul
cmp
push
push
adc
faddl
inc
cld
lock
adc
jae
add
sbb
cmp
std
jp
xlat
pop
and
mov
test
inc
mov
ret
fnstenv
xchg
jecxz
stc
mov
push
leave
testl
adc
push
test
fmull
mov
fidivs
stos
pop
sub
fdivrl
xacquire
rcll
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
pop
sbb
stc
or
jg
jle
mov
lock
addr16
and
inc
lcall
jns
les
arpl
repnz
push
mov
fsubrl
adc
addl
add
mov
inc
inc
xlat
push
out
sbb
fisubl
aaa
lock
jge
pushf
sub
int3
ret
sbb
fwait
movsl
mov
popf
pushl
add
push
pop
vprotq
out
ljmp
fdivrs
mov
shrl
loope
mov
mov
mov
xor
mov
pop
addl
call
cwtl
popf
sub
cmpsl
xor
lahf
ror
testl
add
mov
repnz
outsl
fptan
jo
push
stos
dec
lea
push
add
xchg
ret
pushf
push
imul
sbb
lds
xor
les
sarl
bound
mulps
mov
push
lahf
int3
cmpsl
adc
cmp
and
sahf
popa
lea
sti
shrb
push
xor
pop
dec
dec
adc
sbb
add
rcrb
mov
cld
pop
lret
pop
xchg
push
xchg
sbb
xchg
mov
adc
xor
jae
mov
outsl
inc
jno
scas
cmp
sbb
cmp
movl
or
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
test
scas
mov
jle
jg
jle
aas
dec
data16
rorb
insb
mov
xor
mov
mov
add
mov
push
mov
enter
ljmp
dec
aas
and
iret
mov
add
add
xchg
jbe
in
pop
test
and
mov
mov
clc
mov
inc
scas
mov
xor
adc
cmc
fidivrl
jnp
push
push
jmp
popf
test
negb
div
insl
or
jb
outsl
jbe
mov
push
lcall
in
cmpsl
test
sbb
idivb
lea
stos
arpl
pop
popa
ret
data16
outsb
shrb
push
dec
jg
inc
popa
or
push
outsl
cmc
shlb
imul
cmpsb
call
out
inc
in
mov
je
xor
bound
incl
enter
adc
or
insb
lea
xor
fs
leave
sub
xor
fcomps
dec
push
in
mov
push
in
cmp
mov
int3
rclb
inc
jnp
sub
mov
test
popa
mov
test
test
jg
and
sub
aad
mov
lods
jge
xorl
cmc
aas
jecxz
cmp
ja
fwait
insl
dec
push
jbe
xchg
lods
testl
fabs
rcrl
bnd
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
add
jle
icebp
jg
jle
inc
pop
xchg
add
adc
addr16
jg
adc
fistpl
lcall
adc
mov
sub
jb
daa
push
dec
aam
mov
bound
jge
sub
lret
xchg
adc
pop
divb
and
sahf
lds
adc
cmp
push
rcll
outsl
mov
or
sbb
and
pop
push
gs
test
sbb
pushf
test
jmp
push
adc
in
aam
cmp
xchg
jg
inc
xchg
in
inc
xchg
lds
mov
mov
test
lret
xchg
outsl
sbb
ret
test
pop
inc
or
mov
fdiv
xor
xor
xor
mov
lock
mov
in
add
out
cmc
push
cmp
sar
andb
out
jne
xchg
xchg
and
loope
sbb
add
xor
pop
add
rolb
stos
sbb
repnz
cmp
pop
out
xchg
push
stos
std
dec
aaa
test
scas
or
xchg
dec
cmp
cmp
inc
popf
xchg
in
push
lret
je
cmpsl
stos
sub
xor
das
fcomps
and
stos
lock
mov
cmc
xchg
xchg
push
gs
push
pop
inc
loope
sub
ret
stos
scas
or
inc
sub
lds
test
or
add
add
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
cmp
mov
jle
jg
jle
repz
jb
leave
mov
int
outsb
sub
and
iret
pusha
dec
dec
ljmp
out
je
sub
dec
mov
adc
aaa
jb
inc
jnp
cmp
cmp
push
rorl
cmpsl
pop
adc
scas
dec
adc
jne
cwtl
or
xor
test
aam
mov
rcll
lret
test
adc
in
jnp,pn
or
icebp
subb
out
in
leave
push
les
add
aaa
shl
cmp
dec
out
xchg
push
adc
push
ljmp
mov
daa
xchg
shrb
dec
clc
out
or
scas
sarb
popa
pop
jle
jbe
cs
adc
cmp
pop
in
sbb
scas
mov
push
aam
pusha
push
xor
iret
push
rcrl
add
or
test
push
sub
mov
pop
ss
pop
push
sbb
dec
mov
add
pushf
std
mov
mov
inc
push
dec
imul
add
xor
pop
mov
jns
pop
push
ja
adc
sahf
and
xchg
wbinvd
sbbl
add
add
fisubrl
sub
pusha
jb
inc
mov
cmp
xchg
aad
adc
mov
jp
ja
ljmp
out
sub
jns
jmp
push
dec
sub
es
nop
rcrb
mov
loopne
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
icebp
add
jle
jg
jle
xchg
lea
imul
ja
mov
cmp
mov
sub
lea
js
leave
adc
mov
call
rcl
or
fcom
fwait
addr16
jmp
add
sbbl
push
pushf
cltd
push
popf
jge
pop
pop
or
jb
stc
imulb
test
imul
and
dec
lods
xchg
xchg
mov
sahf
pop
sbb
xchg
cmpsb
dec
pusha
inc
es
sub
jg
sahf
mov
sbb
xchg
mov
aam
std
jecxz
xchg
imul
sbb
jl
or
mov
jnp
gs
jg
out
lock
fcoml
sbbl
lret
add
inc
add
inc
inc
or
pushf
mov
aam
jne
inc
daa
sbb
mov
fimull
jbe
xor
cmp
cmp
aas
pushf
push
xchg
dec
jbe
dec
inc
xor
out
pop
xchg
imull
xor
int3
fisttps
or
lock
dec
ficoml
js
xchg
or
lahf
mov
push
inc
test
pop
or
cld
xor
cmpsl
aad
cmpsl
push
jle
jno
subl
and
add
sub
mov
shrl
movsl
dec
cltd
cmp
fisubl
mov
cmp
stos
sub
dec
dec
or
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
addr16
xchg
icebp
jg
jle
daa
iret
xor
mov
or
xor
das
addl
lahf
xor
mov
xchg
sbb
jnp
sbbl
mov
mov
mov
nop
jns
out
out
sbb
cmp
sub
insl
mov
repnz
clc
repz
aad
loop
shrl
mov
ret
sub
push
xchg
mov
sahf
jne
rorb
cwtl
out
push
js
xchg
pop
mov
mov
dec
ss
nop
adcb
inc
sahf
pop
mov
lret
adc
jle
stc
jmp
or
ret
cmp
xchg
push
orl
mov
hlt
repnz
jge
add
pop
adc
or
call
ss
lds
cwtl
enter
insl
and
and
and
add
arpl
icebp
pop
jge
cltd
dec
ret
aad
push
sbb
gs
inc
jge
fcoms
jl
pop
enter
and
fs
and
dec
sub
idivb
dec
fsubrl
inc
fucom
mov
fs
ss
cmp
insl
jne
mov
mov
jmp
clc
mulb
mov
stc
pop
push
jae
jb
jle
xor
jg
dec
subl
icebp
cmp
pop
xor
adc
cli
sub
clc
gs
mov
adc
add
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
or
inc
bound
adc
aam
jnp
fmul
fincstp
ret
mov
bound
js
je
rorl
sti
xchg
mov
push
inc
mov
cmpsb
jae
movsl
or
jp
jo
scas
insb
lret
add
jb
ja
or
jmp
sub
ret
jle
cwtl
cmp
ja
pop
mov
enter
xlat
jno
mov
ret
cli
fsubrl
out
dec
mulb
stos
add
and
out
ficoml
in
out
pop
mov
push
xchg
and
jge
inc
sti
or
popf
ret
mov
enter
cltd
sbb
and
arpl
cld
cmp
cli
pop
pusha
add
push
and
mov
mov
sub
dec
adc
add
das
loopne
je
xchg
mov
jnp
or
repz
cmp
and
bound
adc
call
lret
fcoms
pop
jge
inc
int3
lret
pop
pop
mov
mov
rcrl
sbb
ds
dec
popa
mov
jae
and
xchg
andl
cmp
add
inc
sub
pushf
outsl
pop
mov
sub
aaa
sub
mov
dec
pop
xor
cmp
mov
imul
int3
dec
movl
loope
inc
sbb
fnstcw
push
push
mov
imul
mov
push
cltd
push
dec
jns
mov
inc
incb
mov
loopne
outsb
ret
jb
mov
and
or
daa
lahf
movb
sub
xor
cmp
or
mov
hlt
mov
rcll
loope
or
push
jl
cli
and
outsb
mov
xor
js
dec
lret
jmp
sarl
and
dec
pop
les
decb
mov
popa
mov
pop
and
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
dec
sbb
jl
jle
and
mov
cmpsl
loope,pt
xchg
ss
ljmp
inc
mov
mov
jmp
in
or
jge
lret
in
sub
addb
shl
cld
and
aad
push
sub
mov
iret
mov
popf
hlt
xchg
adc
mulb
mov
xchg
or
sub
pop
test
xchg
nop
dec
and
push
call
add
insl
aam
mov
ljmp
jnp
push
cs
xorb
insb
xor
rol
test
pusha
jmp
in
shll
dec
sub
xor
adc
xchg
and
add
mov
ja
lock
and
or
icebp
aas
dec
test
and
xor
pushf
mov
iret
xchg
mov
add
ror
out
mov
daa
pop
int3
pop
call
ror
xchg
push
sbb
push
push
test
in
je
imull
xor
jecxz
push
jne
int
enter
rdtsc
lods
xchg
pop
fsts
adc
inc
jle
push
ja
jmp
test
add
aam
lods
lret
fnstsw
pand
icebp
popf
ror
jg
mov
sub
test
repnz
mov
lods
push
or
imul
out
rcrb
and
shlb
pop
lahf
out
dec
mov
repnz
mov
inc
lea
jmp
cmp
sub
in
mov
xchg
aad
popa
fildll
std
or
icebp
les
mov
mov
xchg
lret
mov
aaa
jbe
push
sbb
ljmp
ficompl
sub
or
in
cmp
ds
add
pop
ror
in
dec
cmpsb
jmp
sarl
jbe
or
pop
xchg
fistps
lret
sub
dec
jmp
insb
and
push
adc
enter
dec
pop
and
lcall
lods
sub
dec
cli
inc
aas
push
ret
jne
mov
add
jmp
mov
imul
mov
jle
adc
in
xor
ficoms
adc
into
or
les
test
shl
mov
popa
rcr
std
aad
fcmovnbe
add
or
pop
xchg
xor
sahf
movsl
cmpsb
mov
xchg
inc
out
aad
ljmp
dec
arpl
xchg
and
inc
xchg
gs
push
movsl
xor
push
mov
mov
scas
add
jle
cwtl
enter
cmpsb
pop
and
test
mov
cs
sbb
icebp
mov
std
sub
loope
loopne
jne
fisubs
dec
xchg
push
aad
or
sbb
ficoms
xor
fmuls
cmp
mov
pop
or
or
or
data16
mov
push
ss
cmp
mov
jae
imul
addr16
mov
or
lcall
in
sub
lea
dec
in
fadds
inc
cld
pop
cwtl
loopne
mov
jb
in
push
aas
rolb
mov
sbb
lds
hlt
jmp
xor
cld
mov
pusha
jo
xorl
negl
cmpsb
fldl
inc
xchg
cltd
xchg
lret
or
xlat
dec
xor
mov
insl
dec
dec
hlt
push
dec
inc
adc
mov
fs
sub
jl
xor
push
push
and
mov
in
add
adc
mov
clc
push
jge
add
xchg
inc
xlat
push
or
out
sub
aad
sarl
out
ja
mov
lock
adc
rcrl
lcall
mov
sub
aam
pop
imul
shll
imul
mov
inc
inc
outsl
outsl
and
inc
mov
sbb
push
adcb
stc
cmp
negb
xor
jne
in
inc
stc
and
testl
mov
das
pop
jbe
fisubrs
mov
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
test
add
jp
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
jge
jp
xlat
add
add
add
aaa
jl
mov
in
push
adc
add
pop
imul
xchg
aaa
leave
or
mov
xchg
fisttps
inc
int3
xchg
pop
pop
arpl
in
shlb
lcall
inc
sahf
xlat
fdivl
fidivrl
test
scas
rorb
xor
sub
imul
ljmp
push
adc
xchg
inc
addr16
mov
test
inc
lds
sub
push
or
xchg
clc
test
mov
adc
imul
or
clc
int
and
pop
xchg
fcoms
mov
mov
mov
mov
mov
pop
stos
adc
dec
jg
pop
dec
fwait
sti
inc
repz
repz
pop
testb
or
jle
or
and
dec
mov
or
pop
pop
ficoml
in
jle
lcall
mov
fadds
add
add
add
jne
adc
loopne
test
test
fidivl
add
lcall
clc
in
mov
mov
out
jmp
sub
loop
jg
mov
mov
and
insl
movsb
mov
leave
data16
dec
pop
xchg
data16
pop
xlat
imul
test
out
jecxz
adc
push
insb
cld
pop
iret
mov
jnp,pt
ror
jno
sub
outsl
xchg
jbe
aad
jle
je
shr
xchg
insl
dec
sub
scas
mov
je
jnp
mov
fstpt
or
daa
test
cmp
sbb
ljmp
add
fld1
repz
adc
push
addr16
xlat
adc
pop
lds
rorl
adc
icebp
lods
or
fwait
jno
xchg
dec
int3
or
cmc
inc
icebp
xchg
sub
dec
push
jl
in
and
add
add
add
mov
push
imul
mov
add
add
es
dec
xchg
add
dec
sbb
inc
out
stos
mov
movsb
xchg
jae
xor
std
movsl
and
in
xchg
and
inc
int3
push
dec
and
pop
mov
mulb
xor
push
cmp
push
jmp
xchg
lahf
xchg
cs
mov
sub
fiaddl
jnp
mov
push
rorl
out
push
xor
in
and
ret
test
enter
push
pop
in
cwtl
jge
add
xchg
add
cli
inc
pop
mov
mov
das
cmp
or
add
shr
jne
adc
xchg
pop
lret
clc
stos
aad
mull
jmp
ret
movsl
sub
sbb
repnz
jmp
jno
std
push
xor
cmpsb
mov
fwait
lock
mov
jae
mov
popa
sbb
std
das
xlat
push
fldt
scas
xchg
into
dec
popf
jae
fcompl
add
add
subl
roll
loope
fiaddl
add
add
add
add
ss
ja
arpl
enter
mov
adc
pop
lret
and
movsb
ss
push
out
xor
clc
or
movsb
xor
loopne
jno
or
loopne
fidivs
ret
sti
xor
cwtl
cmc
adc
pop
ret
add
push
sahf
in
sbb
sub
xchg
sbb
push
xchg
in
cmp
fsubrs
inc
fmull
mov
push
dec
dec
add
imul
loope
repz
mov
cld
dec
ja
push
addr16
inc
mov
sub
xor
pop
js
addr16
jnp
imul
adc
inc
jno
arpl
pushf
xor
mov
jmp
xor
loop
sbb
xor
inc
jg
aad
lock
fisttps
inc
push
pop
cmp
sub
mov
insb
push
pushl
push
aas
sbb
xlat
lcall
fadd
fisubs
add
add
inc
or
pop
dec
or
mov
mov
add
add
dec
int3
sahf
jno
xchg
inc
mov
pop
cli
mov
pushf
iret
call
ret
add
mov
cs
sbb
mov
push
xchg
iret
lods
fadd
and
mov
mov
sahf
adc
ret
mov
push
movsb
jns
push
fcoml
ret
lods
fstpl
mov
and
mov
sub
bound
cmpb
adc
insl
repnz
popl
stos
into
iret
cltd
jae
test
sbb
xchg
aad
gs
jbe
cs
pmulhuw
in
stos
xor
mov
icebp
xchg
lcall
inc
cmp
sbb
rorl
bound
mov
rclb
dec
mov
ljmp
jmp
lahf
insl
test
ret
xor
fcompl
pusha
push
jge
inc
mov
mov
inc
dec
xchg
aaa
fdivrl
nop
pop
jg
cmc
insl
cmc
out
lcall
enter
out
in
faddl
add
add
add
into
aam
rcl
dec
rcrl
jmp
clc
hlt
stos
gs
fistpl
arpl
sbb
cmp
rcrl
push
lahf
add
lcall
jge
dec
lcall
cmp
movsb
arpl
sub
cmc
jp
test
in
inc
movsl
scas
mov
je
sbb
cmp
fisubrs
notl
push
fnsave
xlat
repz
inc
mov
dec
stos
cmp
mov
inc
xor
stc
fmul
xor
stos
dec
fnstcw
mov
jmp
lods
and
mov
jmp
push
movsl
out
ret
inc
call
enter
dec
xor
adc
adc
je
push
call
fdiv
ljmp
pop
xorb
pop
add
popa
ds
or
dec
mov
xchg
sub
ret
je
jnp
movsl
popa
jecxz
mov
pusha
inc
jle
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
test
or
addb
adc
lret
xchg
arpl
push
jle
add
out
mov
xchg
mov
inc
jmp
push
jg
adc
adc
jae
cmp
xchg
cmp
movhps
loop
inc
lock
jge
sbbl
sbb
aas
and
cmpsb
repnz
mov
xor
loope
cmpsl
gs
or
jle
cmp
scas
out
add
xchg
jb
push
cmpb
insl
fnstcw
out
adc
fwait
sti
int
popf
cmp
inc
pushf
fadds
mov
inc
inc
lahf
mov
clc
xchg
es
sbbl
rol
xor
rcr
sub
repnz
cmp
mov
mov
sub
adc
mov
xor
mov
dec
inc
outsl
data16
repnz
lcall
ljmp
out
jg
addr16
pushf
xlat
subb
dec
movsl
xchg
mov
or
and
scas
sti
jle
pop
push
pop
xorl
fiadds
add
add
add
or
andl
rorl
and
subb
push
lret
xchg
mov
adc
arpl
repnz
xchg
adc
push
loop
add
add
cmp
fidivrs
ljmp
mov
push
xchg
or
nop
dec
dec
insl
jp
cmp
dec
test
sbb
fldl
xchg
inc
bound
cmp
mov
scas
inc
ret
and
fistpll
add
mov
mov
gs
std
cmpb
push
jae
mov
jl
insb
sbb
inc
inc
sub
mov
aad
sub
mov
xchg
gs
push
sbb
arpl
cmpsl
add
nop
sbb
enter
xor
xchg
movsb
sub
lock
sub
outsb
out
or
push
push
fs
inc
mov
push
pop
jo
sbb
cld
jb
mov
movb
lahf
fnstcw
ss
lahf
stc
bound
adc
filds
add
add
add
dec
and
hlt
xchg
inc
push
in
jae
mov
cs
in
ljmp
add
jp
xchg
mov
sub
cmp
adc
incb
mov
cmp
xor
les
mov
mov
dec
loop
imul
movsl
pop
adc
stos
pop
adc
andl
mov
in
push
jb
rorl
xchg
mov
popa
add
sub
lcall
andl
push
cmp
sbb
aaa
cs
pop
divl
cmpsb
rcll
ljmp
je
outsl
or
jo
roll
stos
mov
push
aam
rcl
mov
dec
jnp
into
test
mov
in
or
mov
jne
stc
ljmp
adc
cmp
in
es
popf
je
cmp
add
add
push
jl
jle
insb
out
adc
loopne
add
add
add
and
gs
sub
xchg
adc
push
inc
cmp
sbb
les
add
xchg
es
icebp
pop
test
pop
cltd
into
sarb
sbb
mov
push
cmc
pop
mov
mov
cmp
data16
pop
xchg
lahf
inc
sbb
shr
add
push
cltd
pop
jne
addl
or
dec
mov
pop
xchg
adc
push
inc
mov
or
sbb
in
ljmp
pop
data16
inc
fcoms
xlat
and
lret
div
jle
cmp
push
push
shlb
pop
xchg
lret
or
bound
test
adc
in
adc
cmp
insl
fnsave
scas
ret
and
ret
imul
and
movsl
je
adc
mov
add
cmpsb
lahf
add
push
outsb
dec
pop
sbb
mov
adc
in
xor
adc
loopew
add
add
add
cmp
push
sbb
rolb
lds
push
cmp
jg
xchg
ss
jne
xchg
mov
inc
mov
pop
mov
mov
std
jmp
adc
pop
in
inc
jo
das
sti
pop
mov
xchg
fsub
xchg
cmpsb
movsl
std
popf
lods
pop
icebp
pop
pop
mov
mov
dec
cmp
cmovae
fldcw
jns
dec
or
adc
mov
imul
or
outsl
ljmp
xchg
hlt
pusha
fistpll
das
out
push
js
mov
sub
mov
adc
fildl
or
std
stos
jmp
mov
xor
pop
stos
lret
mov
lret
pop
add
mov
cmp
sbb
arpl
or
ds
lret
mov
out
pop
fucomi
addl
add
add
data16
jne
mov
lcall
add
add
add
pop
dec
jnp
rclb
cltd
jp
lcall
cwtl
ja
dec
lret
xlat
push
dec
clc
jp
dec
inc
ljmp
mov
cmp
dec
lds
loopne
mov
loope
and
inc
shl
cmp
jmp
adc
xchg
jge
rorb
cld
and
dec
stc
sub
xchg
and
int
lock
sub
enter
mov
out
test
nop
pushf
mov
add
lret
xchg
rolb
jne
icebp
loope
inc
mov
add
pop
add
jb
adc
sbb
jbe
pop
into
std
adc
lds
dec
or
scas
sbb
xchg
inc
xchg
ret
and
stos
lret
dec
mov
sub
ret
xor
cmp
cli
lods
inc
insl
mov
lret
mov
xorl
or
add
add
add
jnp
sti
xchg
lahf
mov
sti
adc
add
add
add
and
mov
repz
mov
stc
adc
shlb
xor
jbe
and
test
out
sbb
ret
xor
jecxz
dec
dec
inc
fstps
adcb
inc
testl
dec
adc
in
jbe
sarb
shrb
fadd
loope
add
test
inc
scas
inc
dec
dec
inc
adc
loopne
add
push
dec
aam
cmp
dec
or
pusha
lods
inc
arpl
hlt
std
xchg
cmp
cmp
and
insb
mov
movsb
sub
sub
cmpsl
or
inc
sahf
sub
das
lret
push
mov
incb
gs
cltd
push
fwait
sbb
lret
clc
or
cmp
outsb
fisttpl
decl
mov
repz
lret
add
and
lods
jb
pop
mov
enter
mov
iret
or
add
add
pop
sarl
mov
shlb
add
add
add
sbb
and
scas
pop
add
push
xchg
cmovs
leave
mov
loopne
pop
mov
clc
mov
rcrl
pop
lcall
fisttpll
scas
fcom
pop
dec
sbb
xchg
dec
adc
jge
and
and
js
push
je
xor
stc
aas
inc
xchg
xor
loopne
cmp
into
cld
dec
xor
push
xchg
test
mov
ss
iret
jg
add
in
int3
in
lret
jbe
push
push
ficompl
xchg
data16
test
out
sub
lds
fwait
js
mov
push
jno
insb
and
jne
lret
les
out
std
sub
addr16
and
sub
repnz
xor
adc
fst
xchg
addb
ljmp
dec
es
testl
cmp
dec
repz
fbld
outsl
dec
sbb
scas
js
fwait
pop
bnd
insl
lock
std
repz
cmp
add
add
add
jge
fs
outsb
fldenv
push
adc
mov
add
loop
lcall
xor
and
add
iret
cmc
adc
mov
mov
in
add
out
negb
or
jl
sub
xor
mov
cmpsb
outsb
jp
pop
pushf
jg
out
lcall
mov
jg
jo
movsl
fdivr
gs
sub
insb
stos
rol
mov
push
lea
dec
mov
mov
rcrb
sub
and
mov
ja
pop
xor
call
inc
and
fldt
rcrl
hlt
mov
push
jb
insl
outsl
gs
push
dec
in
mov
scas
pop
jge
cmp
js
repz
dec
ja
std
sub
jmp
lods
adc
arpl
cmp
pushf
test
mulb
sbb
pop
fucomi
movsl
cltd
adcb
add
add
lock
cmp
arpl
je
aaa
or
addr16
add
add
add
jae
lahf
adc
xor
jecxz
mov
icebp
sub
popf
repnz
dec
les
push
arpl
mov
mov
imul
daa
sub
xchg
pusha
push
mov
jl
add
add
xor
pop
in
andb
subl
fnstcw
repz
xor
pop
andb
jne
mov
adc
ficomps
ret
shrl
sbbb
mov
movsb
out
je
jge
leave
sbb
and
enter
in
sbb
dec
jno
aam
or
shl
push
mov
lret
xor
sbb
xchg
sbb
call
int
negb
adc
pop
bound
data16
push
ljmp
mov
pop
mov
pop
cmc
add
dec
outsl
stos
and
fnstcw
ret
push
fucomp
insl
lcall
mov
inc
sub
insl
xchg
addr16
add
add
add
or
and
iret
xor
insb
mov
pop
and
clc
pop
cmpsl
hlt
jae
mov
test
add
jbe
loop
push
test
in
pop
into
repz
mov
xor
not
cmc
dec
adc
shrl
fildll
push
lret
add
jno
popf
fcomp
dec
enter
outsb
jmp
cld
jmp
push
pop
addb
and
jl
mov
ds
pop
aam
dec
cwtl
and
push
cltd
outsl
pop
imul
or
insl
and
fstpt
pop
cs
shrl
dec
add
shll
xor
adc
cmc
add
out
xor
movsb
add
divb
jno
out
ret
add
sub
repz
leave
or
fs
mov
outsb
shl
jecxz
sbb
dec
add
mov
push
push
cltd
insl
outsl
fstpt
or
pushf
mov
add
lret
xchg
in
mov
incl
ror
icebp
push
ljmp
add
jmp
cmp
insl
divb
mov
test
mov
lods
dec
loope,pn
or
cmp
int3
sub
mov
add
jno
lods
mulb
cmp
mov
inc
and
cli
fs
mov
xor
mov
loop
fstps
mov
add
jl
loope
lret
add
push
fwait
pop
xchg
xlat
iret
cmp
mov
sub
scas
addr16
sbbb
ja
fsubr
or
daa
xchg
stos
or
ret
outsl
jmp
mov
sarb
pusha
js
mov
dec
arpl
fcmove
pop
push
and
testl
fimuls
dec
stos
push
cmp
or
sbb
xor
or
jle
loop
mov
mov
sbb
ret
out
jno
sti
jns
in
xor
xchg
xchg
ja
dec
push
stc
or
sbb
mov
pusha
scas
push
mov
gs
add
add
sub
in
negl
sub
movsb
pusha
mov
add
add
add
pop
jmp
stos
push
out
shlb
mov
insl
gs
pop
aam
push
outsl
das
inc
jg
mov
xchg
imul
xlat
imul
inc
push
pop
inc
xor
mov
lock
sub
movsb
mov
das
mov
ds
lret
xchg
imul
jnp
mov
ljmp
scas
fsts
bound
sbb
pusha
adc
imul
sbb
setge
dec
aad
loopne
fwait
mov
rcr
mov
ss
testl
out
outsl
into
lods
pop
jb
push
shll
sbb
cmc
fwait
cmp
cmp
or
cmp
and
stos
inc
cmpsb
insl
in
mov
int3
dec
fcomps
js
enter
in
or
gs
rolb
inc
pop
js
xor
cwtl
jmp
fistpll
stc
dec
push
fdivrl
sbb
add
add
iret
iret
imul
aam
inc
sti
jl
outsl
pop
xchg
adcl
xchg
in
jne
test
adc
push
sbb
jnp
loopne
imul
cmp
adc
in
push
jmp
outsl
shlb
out
sahf
xchg
sbbl
rcr
jae
mov
into
into
fbld
insb
inc
ljmp
out
mov
xchg
lods
pusha
sub
pop
mov
mov
sbb
or
cmp
scas
mov
mov
scas
add
sub
gs
jne
jo
add
pop
pop
mov
dec
push
movsl
add
addl
push
shl
adc
popf
add
push
test
movsl
cmp
fstpt
adc
je
adc
loop
out
push
add
mov
std
jecxz
rorl
in
sub
dec
xorl
mov
scas
movsl
adc
add
add
adc
push
push
push
mov
test
add
add
jle
sub
jle
push
cmp
xchg
pusha
cltd
cmpb
test
shrl
push
popf
mov
fldt
or
ljmp
lods
outsl
pop
jmp
xchg
popf
neg
lea
in
sbb
sbb
leave
popf
pop
jo
idivl
out
cmpsl
outsl
dec
out
insb
jno
jp
mov
cltd
sbb
js
push
inc
sub
xchg
add
sbb
fsubr
fwait
xchg
inc
nop
add
and
dec
test
int
or
into
mov
movsb
ja
cmpsb
adc
or
aad
cli
ret
dec
jp
sub
pop
addb
cmp
ljmp
pushf
adc
js
fists
enter
or
lock
lahf
mov
rcr
jmp
movsl
int
pop
cmp
mov
mov
mov
xchg
rcr
or
out
repnz
add
pop
lcall
les
xor
in
addr16
add
add
add
mov
lods
inc
adc
mov
mov
test
shl
pop
imul
mov
sbb
pop
sarl
test
add
in
adc
addl
pop
fmull
leave
or
dec
push
repz
jle
pop
cs
ljmp
test
movsl
movsb
sbb
xor
int
leave
sub
add
roll
andb
in
xor
jmp
mov
inc
adc
imul
xchg
iret
xor
dec
popf
mov
xchg
xor
gs
mov
push
inc
jp
test
or
pop
mov
jl
cmpsl
or
js
mov
je
mov
lea
movsb
hlt
cmp
mov
popa
lret
add
push
aam
fdivrs
dec
pop
loope
hlt
fadds
dec
daa
sbb
call
inc
call
test
jo
or
inc
add
sub
cmp
pop
mov
push
decl
in
aas
add
add
add
sbb
push
pop
xor
inc
xor
add
add
lcall
or
mov
mov
sbb
mov
notl
inc
mov
imul
push
push
pop
leave
stc
andl
dec
sbb
xchg
and
inc
dec
mov
sub
subb
mov
pop
cmp
sub
jb
pusha
cld
mov
sub
mov
jb
adc
fisubrl
cmp
data16
out
adc
into
in
jp
lahf
repnz
add
xor
mul
xchg
mov
jns
cmp
sub
sbb
rorb
in
loope
cli
xor
or
inc
icebp
adc
test
out
cwtl
xor
rolb
aam
push
or
lods
jmp
into
mov
repz
hlt
mov
mov
push
call
cmp
pop
dec
and
cmp
sti
fsubp
inc
push
sub
jg
out
add
add
add
or
out
lods
shlb
in
adc
int3
jbe
pop
int
xchg
dec
fadd
and
xchg
jp
inc
out
mov
push
lret
inc
pop
testl
sub
and
cmpsb
jg
imul
add
and
fcomps
mov
sbb
sub
cmpsl
ja
and
cvtps2pi
xchg
sti
xchg
addr16
add
inc
adc
pusha
and
sti
lods
mov
mov
add
xor
jge
sbb
xor
or
mov
pop
xchg
int
fwait
imul
or
add
movsb
ret
push
je
pop
xor
pop
xchg
ja
and
mov
mov
rolb
inc
ret
rolb
xchg
lds
mov
ss
aam
jo
cmpsb
mov
jbe
adc
ret
adc
inc
cmp
xor
mov
add
push
std
and
and
mov
lcall
out
add
add
add
jns
inc
pop
dec
or
mov
mov
in
push
dec
imul
mov
jb
or
mov
mov
mov
cli
aam
les
fmulp
mov
sub
addr16
add
inc
scas
and
inc
pop
ja
loopne
mov
mov
pop
pop
push
pop
add
ficoml
icebp
loopne
jl
test
cld
adcl
in
arpl
inc
jmp
jl
insb
das
jmp
push
xor
dec
loop
pop
mov
or
pop
je
stc
xchg
sbb
jmp
xor
incl
xchg
jne
mov
shll
inc
lock
mov
ret
mov
cld
push
out
pop
les
filds
push
repnz
jnp
std
adc
add
and
xchg
sarb
mov
sub
lahf
shlb
lret
ja
test
rcll
and
mov
add
add
inc
ror
lock
jnp
xor
xchg
sbb
insb
xchg
lock
add
add
cmp
sub
test
das
pop
or
jmp
rcll
out
das
mov
fidivrs
sub
jge
fs
testb
js
dec
lea
or
add
fistpll
je
xchg
mov
ja
push
fidivs
sub
inc
lahf
xchg
scas
push
adc
mov
adc
xor
pop
sub
outsl
inc
pop
add
fiadds
push
mov
inc
imul
mov
test
repz
mov
scas
lods
mov
and
mov
sub
xchg
sbb
fwait
clc
dec
and
mov
pop
fmull
inc
int3
ficoml
push
fs
cld
xchg
out
shlb
and
adc
js
push
out
inc
or
bound
in
repz
int3
or
mov
fwait
addr16
icebp
repz
push
ljmp
popf
and
repz
fisubs
cmp
mov
icebp
add
add
add
rclb
bound
mov
and
push
fwait
icebp
popa
cli
mov
les
les
cld
xor
add
cmp
push
xchg
out
ret
dec
aam
enter
loope
mov
cwtl
dec
push
sub
je
lds
sbb
or
push
aas
stos
and
ret
jge
sbb
pop
inc
daa
mov
ret
xor
ds
imul
sarl
cwtl
fcomps
pop
cmp
adc
stc
enter
vpunpckhdq
mov
mov
add
data16
call
add
inc
pop
sub
push
imul
inc
ljmp
and
push
lods
pop
pop
push
jle
mov
outsb
stos
pop
mov
push
dec
xchg
mov
add
outsl
jmp
pop
ljmp
aaa
daa
inc
popl
jo
andl
add
out
sbb
int3
and
sbb
add
add
add
dec
repz
sub
lret
mov
hlt
xchg
adc
shll
mov
adc
and
out
adc
mov
sbbb
or
iret
or
inc
ss
dec
insb
inc
fs
mov
push
xlat
push
inc
xlat
sub
or
call
jp
sub
test
les
dec
sub
out
mov
add
out
call
xchg
xor
fldenv
push
lret
orl
repnz
iret
adc
mov
mov
dec
add
jne
xchg
nop
or
mov
fcoml
in
pop
cmp
jne
mov
inc
add
popa
enter
mov
cmp
and
adc
pop
xchg
adc
aam
test
aad
insl
aam
cmc
or
fdivl
out
mov
enter
pop
push
add
inc
popa
shrl
cmc
scas
sub
mov
repz
add
add
sbb
lahf
lods
dec
push
add
les
rol
mov
add
stos
sahf
xor
jns
fistl
lock
pusha
jp
in
or
shl
xlat
add
or
mov
and
xor
sbb
inc
sahf
pop
in
push
outsb
lock
jmp
mov
scas
xchg
push
outsb
rorb
xchg
jns
cmp
fistpl
pop
movsl
data16
mov
in
shll
xor
jae
pop
out
xchg
mov
movsl
jp
mov
jae
das
cmpsb
dec
dec
js
fs
jo
addl
and
jg
cli
jb
or
mov
test
dec
xchg
mov
lret
dec
push
and
shlb
and
gs
sbb
adc
xchg
pop
xor
push
push
in
add
sbb
add
lea
nop
test
xchg
adcl
push
dec
or
add
add
add
pusha
rorb
cmpsb
mov
xor
addr16
add
add
add
repz
lcall
and
cmp
push
stc
mov
mov
mov
adc
cmp
dec
mov
mov
lea
stc
jecxz
js
leave
jg
testl
inc
cmp
and
sti
jl
rcrl
out
stos
gs
and
inc
jns
faddp
sbb
adc
inc
dec
test
xor
xchg
jo
cmc
out
rorl
mov
inc
pop
inc
not
rorl
mov
lock
ja
imul
fwait
std
test
test
sbb
push
imulb
scas
xchg
pusha
xor
leave
mov
ja
mov
je
ror
int3
nop
filds
loop
out
aam
movsl
adc
js
fwait
std
sti
pop
test
push
xor
fcmovu
push
mov
fiaddl
cmpsb
ret
sub
test
nop
inc
cmp
sarl
jecxz
push
testl
push
jge
cmc
add
add
add
xor
frstor
dec
push
dec
int3
mov
lock
leave
lock
xchg
dec
scas
jecxz
pop
enter
mov
sbb
xchg
push
jbe
ds
in
fstl
andl
fistpll
cwtl
push
insl
mov
fstpl
in
pop
insb
mov
aam
pushf
popa
jnp
jne
jno
shll
inc
dec
add
jnp
popa
sub
stos
dec
inc
push
sub
dec
xor
push
sub
mov
mov
push
pop
ljmp
and
jno
sahf
idivb
call
jne
out
sbb
sbbl
xlat
jle
dec
mov
and
jae
push
ja
push
mov
mov
hlt
dec
in
jnp
push
repnz
in
add
sub
sbb
push
dec
add
lahf
sbb
adc
cmpsw
jo
popf
pop
or
push
xor
fcmovne
jns
sbb
add
add
xchg
mov
mov
pop
das
icebp
movsb
cld
pop
testb
add
add
dec
aaa
lret
jnp
flds
mov
imul
lods
jo
dec
scas
jo
mov
idivb
cmpsl
and
sub
or
sahf
jle
ja
push
push
push
into
pop
fwait
dec
cmpsl
sbb
mov
cmp
mov
shrl
xchg
out
pop
jge
cli
imul
push
pop
in
jno
shll
pop
jge
lret
xchg
mov
xchg
cmpsl
rorb
lret
nop
es
pop
xchg
int3
mov
vrsqrtss
pop
hlt
mov
insl
sbb
push
jge
xor
scas
fstpt
mul
push
xlat
stc
and
mov
jne
ljmp
lret
pop
jno
cmp
cmp
aaa
iret
iret
mov
pop
negb
jb
dec
fcomps
adc
roll
adc
insl
mov
int
mov
sbbb
mov
fucomi
xor
jns
testl
add
jbe
xchg
xor
out
inc
mov
fwait
inc
hlt
enter
std
fistps
mov
sub
shl
or
ffree
sbb
and
lahf
and
sbb
es
xor
lea
lret
ffree
dec
pop
iret
pop
jp
fistl
inc
inc
sub
sub
mov
push
std
adc
push
test
inc
ja
imul
and
mov
je
pusha
nop
jbe
clc
add
jecxz
mov
clc
loope
sub
test
test
fldl
and
xor
pop
std
out
notl
shll
daa
mov
add
clc
sbb
shrd
popf
add
bound
ret
adc
cmc
sbb
mov
cmc
push
add
in
int3
shll
mov
pusha
inc
add
stc
iret
adc
sti
pop
lahf
mov
dec
and
mov
test
jbe
push
inc
pop
jns
aas
loopne
sub
push
xor
add
add
add
ss
enter
outsl
cli
xor
lods
pop
jl
cmpsl
aas
mov
out
xchg
adc
lahf
jb
scas
addr16
popa
loopne
pop
push
or
xlat
push
inc
xor
add
add
ret
and
pop
call
dec
lret
je
inc
outsb
js
out
sub
jmp
cmp
mov
sarl
or
incl
or
sub
sti
push
shll
stc
lods
out
outsb
andb
rorl
xchg
push
jb
inc
inc
iret
ret
cmp
pop
iret
js
mov
add
mov
sarl
ret
dec
sbb
pusha
mov
aam
sub
sbb
leave
jl
arpl
mov
sub
cmpsb
jnp
xchg
packssdw
sbb
xchg
push
jg
ljmp
add
add
jnp
mov
out
mov
add
add
add
and
xor
pop
inc
repnz
scas
dec
inc
inc
push
into
xor
hlt
insb
and
inc
and
jle
or
xchg
sbbb
adc
icebp
imul
movsl
pop
dec
movsl
and
fs
xchg
xor
sarl
lahf
popl
test
and
jmp
pmulhw
aam
loop
imul
subl
bound
mov
addl
std
fwait
icebp
shl
gs
cltd
xchg
add
inc
mov
out
dec
jo
divb
adc
or
mov
xchg
inc
popa
arpl
inc
cli
and
fbstp
dec
icebp
adc
addb
test
jne
sbb
dec
mov
dec
mov
cmp
insl
mov
pop
pusha
jnp
pop
add
xor
dec
adcb
add
fistpl
sti
pop
fiadds
add
add
xlat
pop
xlat
jg
mov
dec
rcll
addr16
add
add
add
ljmp
aad
jmp
out
jo
dec
sarl
push
inc
cld
dec
popa
out
dec
adc
je
add
jecxz
divl
mov
js
movsl
les
out
jg
adc
lahf
fiadds
cli
jle
jae
mov
jmp
add
xchg
decb
les
subl
inc
push
jle
dec
xor
movsl
stc
jmp
les
sub
jae
outsb
mov
sbb
mov
or
and
inc
mov
xor
add
jg
popa
into
cmp
jno
shlb
and
faddl
xor
shlb
out
mov
in
mov
pop
xchg
aam
in
lret
pop
dec
pusha
and
cmp
push
addr16
test
ret
xor
push
xor
in
sub
mov
xor
xchg
imul
sbb
cmc
pop
mov
ljmp
daa
loope
mov
add
add
fdiv
mov
cld
jl
iret
addr16
add
add
add
arpl
push
mov
sti
xchg
sbb
or
and
dec
dec
mov
or
stc
and
mov
and
mov
mov
ficomps
aaa
jno
push
movb
std
or
lods
int
jne
mov
mov
iret
mov
js
mul
xchg
pop
aaa
iret
mov
incb
imull
ds
xchg
rorl
push
push
cli
scas
mov
out
inc
loope
mov
ss
dec
out
ror
stos
pop
jnp
mov
xor
sbb
enter
test
push
and
imul
stos
cmovbe
pop
lret
or
in
movsb
mov
jge
ret
std
fstpl
sub
xor
bound
stc
cld
jb
sarb
pop
jns
pop
push
cltd
mov
xor
adc
fstl
lods
popf
mov
pop
test
lret
or
icebp
fwait
test
add
add
mov
fimull
cld
add
add
add
inc
mov
xor
std
dec
stos
pop
movsl
mov
gs
cmpsb
sbb
cmp
out
cmpsb
cmp
mov
std
movsl
push
adc
popf
cli
fimull
xchg
addb
outsb
jae
mov
or
mov
and
mov
jae
mov
stos
or
push
mov
jge
ret
pusha
xlat
jno
or
push
mov
and
sbb
xchg
sahf
cmc
jbe
movsb
pop
loope
and
jecxz
push
scas
out
int
sbb
test
fldcw
sbb
pop
subb
dec
fucomp
mov
ljmp
push
inc
cmc
in
jbe
mov
out
dec
leave
xor
or
es
and
inc
jle
shll
lock
push
loopne
lds
jb
repz
and
repnz
sub
es
test
jns
sub
adc
movsl
movsl
adc
jb
adc
nop
fcoml
jmp
imul
lahf
repnz
xchg
jno
je
std
add
add
add
ffreep
inc
fidivs
jo
sarl
xchg
arpl
pop
fdivp
inc
cmp
repz
adc
pop
mov
dec
in
lods
xor
jg
sbb
iret
ficoml
xchg
jge
and
je
outsl
adc
pushl
pop
das
mov
shrl
mov
lods
insl
enter
and
cmc
loopne
scas
fistpll
iret
and
mov
xor
jl
stc
aad
xchg
and
sub
push
lret
movsl
add
addr16
insb
mov
sbb
lcall
add
dec
or
insl
mov
and
push
sbb
xchg
cs
ja
sti
inc
adc
xchg
add
mov
loope
stos
sbb
or
fucom
in
adc
jo
out
xchg
xor
xchg
mov
cmc
xlat
add
fsubl
dec
es
jns
add
in
xlat
push
clc
dec
fimull
out
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
cmpsb
xchg
cmp
add
add
dec
mov
add
add
andb
cmc
fwait
sbb
inc
pop
push
pushf
cld
subl
inc
add
push
and
fisubs
jmp
add
xor
xor
cli
cmp
jne
arpl
jno
je
sbb
movl
push
inc
jmp
int
pop
roll
dec
neg
add
push
cwtl
add
adcb
cs
je
inc
cs
push
jl
pop
inc
pop
pop
push
jmp
adc
imul
in
out
adc
add
dec
add
jle
dec
sbb
das
add
in
scas
and
xchg
mov
adcl
push
das
cmp
push
xor
add
adc
lret
ds
jge
push
mov
scas
xchg
cmp
hlt
ret
lds
divl
ja
jl
add
pop
bound
inc
jno
xor
push
sti
mov
das
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
adc
repz
xlat
add
lock
pop
xchg
dec
pop
sarl
xor
dec
cmpsl
idivl
mov
clc
inc
clc
setle
lock
xchg
push
adc
push
adc
inc
jo
and
scas
dec
xchg
arpl
mov
rclb
call
shrl
and
in
mov
stos
pushf
cwtl
sub
mov
or
pop
mov
cmp
in
cmp
mulb
je
fucomi
adc
jb
inc
data16
subb
movsl
pushf
push
test
stos
xchg
test
push
xor
rorl
or
outsl
icebp
mov
clc
push
lods
pop
jmp
mov
xor
sub
cmp
enter
clc
mov
add
insl
ja
adc
rol
push
dec
addr16
mov
mov
sahf
push
cmp
adc
idiv
scas
xlat
aas
mov
jg
loope
mov
nop
test
aam
int
aaa
das
aam
cmp
add
add
add
add
adc
pop
loop
sub
inc
popf
push
lods
and
dec
push
cli
aaa
push
push
dec
jno
adc
mulb
and
or
cli
mov
stc
jns
sbb
or
mov
les
loope
push
cmp
sbb
jg
xchg
bound
sub
or
cmp
push
lcall
rcrb
test
push
lods
inc
or
push
dec
mov
or
sub
iret
mov
cld
pop
dec
sahf
pop
mov
movsl
mov
fs
adc
xchg
iretw
dec
shlb
jbe
and
or
mov
fisubrl
in
mov
and
fidivs
lods
adc
fisubrs
in
add
in
lret
enter
mov
xchg
dec
jp
out
pusha
popf
cltd
je
push
lcall
sti
call
xor
gs
mul
imul
add
add
arpl
addr16
sub
mov
jae
add
add
add
add
stc
xorb
lcall
sub
jge
rcrl
adc
mov
mov
outsl
push
test
pop
mov
repnz
push
add
loope
dec
xchg
jo
das
js
stos
xor
or
mov
lret
sub
scas
jns
in
jle
mov
inc
ljmpw
add
xchg
fcompl
push
inc
jae
ljmp
xor
sbb
stos
sarl
pop
mov
xchg
int
sahf
and
mov
testb
cmp
shlb
sub
ret
push
or
outsb
mov
mov
jmp
mov
popf
loope
push
arpl
cld
or
out
and
cmp
pop
lods
xchg
inc
sbb
or
sbb
data16
mov
mov
aam
dec
movsl
jo
iret
mov
add
add
out
out
pushl
xchg
xor
fidivs
loopne
add
add
add
add
lret
test
jecxz
mov
and
cmpsb
in
rol
pop
add
lods
sbb
pop
test
sbb
scas
dec
adc
push
scas
or
popa
shll
ret
jp
sarb
jmp
or
in
popf
ss
movsb
xchg
repz
and
sub
js
or
sbb
pop
mov
jo
out
inc
nop
xor
adc
mov
insl
imul
pop
mov
rcll
push
orb
or
outsl
lahf
inc
js
add
cmp
add
lcall
ds
inc
aaa
rorl
mov
inc
lds
xor
push
stos
push
or
or
clc
pop
call
cmp
xor
sbb
or
call
adcl
ret
scas
ds
jae
fcoml
lahf
sarb
std
je
jle
pop
push
in
test
push
scas
mov
jno
adc
add
add
add
add
stos
sub
aam
sbb
dec
push
cmp
lret
xor
fcomip
fwait
pop
js
pop
fnstsw
sbb
push
psubusb
aad
stc
add
inc
loopne
push
xchg
cwtl
and
jno
popf
push
sbb
dec
jno
mov
dec
mov
add
neg
cmp
gs
pop
add
int3
mov
mov
xor
sbb
pop
sti
ret
inc
insl
mov
rcll
and
dec
imul
pushf
jns
sbb
cmpsb
cs
push
stos
mov
push
addb
cmc
mov
mov
ja
into
adc
mov
std
mov
stos
jecxz
je
pop
xchg
push
bound
dec
mov
loop
fiadds
or
and
sbb
sbb
dec
test
pop
ds
and
aaa
xchg
and
movsl
mov
mov
mov
repz
add
add
gs
xor
xchg
stc
adc
movsb
jmp
cli
mov
xor
dec
jmp
leave
js
stc
pop
cmp
or
sub
aaa
xchg
adc
das
jmp
sbb
orb
mov
movsb
sbb
fucomip
xchg
pop
cs
sub
les
xor
pop
xlat
aam
pusha
xchg
sub
xor
loop
aam
out
fs
push
sti
mov
data16
jbe
push
inc
or
dec
sbb
cmp
xor
inc
and
arpl
filds
ret
adc
rorb
push
and
mov
mov
aam
cld
insl
test
cmc
inc
mov
mov
mov
and
imul
aaa
pop
jb
or
inc
call
out
out
jp
sub
test
dec
inc
shll
out
xchg
mov
fdivl
mov
mov
add
add
add
stos
rolb
xlat
cs
test
addr16
xor
and
pop
or
and
insb
ljmp
iret
jp
ret
pusha
mov
lock
je
xchg
subb
sbb
fnstsw
xlat
sub
inc
mov
cmp
lret
cmp
into
mov
adc
imul
mov
sub
enter
ja
pop
movsl
je
jae
cmpsl
and
sbb
inc
or
stos
lret
rcl
das
push
test
xor
fisubs
push
cmp
xchg
pop
push
cltd
test
cmpsb
and
mov
and
xor
pop
or
inc
add
arpl
fmuls
sbb
push
dec
xor
fisubs
xor
mov
rorl
in
add
out
sbb
mov
mov
adc
pop
mov
sbb
xchg
inc
stc
mov
mov
lods
imul
push
push
add
add
add
jmp
adc
insl
aam
mov
aas
sahf
fldt
push
push
lock
cmc
push
sti
sub
test
xlat
xchg
mov
ss
pop
sti
mov
out
in
sbb
ret
andb
jg
cs
and
and
or
jne
cmp
arpl
leave
lea
xor
adc
dec
mov
cmpsb
push
stos
mov
cmp
mov
or
dec
and
or
xchg
ds
shlb
pushf
ja
push
fnstcw
and
outsb
mov
jle
mov
push
ficoml
into
out
or
inc
dec
sbb
arpl
push
cmp
mov
mov
loopne
sub
inc
call
xchg
pop
cld
jp
or
mov
sub
push
push
lcall
mov
ss
pop
dec
pop
adc
xchg
sub
scas
or
cmp
pop
bound
cmp
add
add
add
movnti
jp
sub
and
inc
mov
rcrl
jg
pop
bound
xor
and
dec
jge
inc
jg
mov
add
ds
les
dec
cmp
mov
ja
std
mov
and
pop
scas
shlb
or
add
stc
xchg
inc
push
cs
shrl
push
jbe
mov
or
out
loope
xor
mov
repnz
sbb
jle
cld
or
leave
jp
pop
adc
dec
leave
scas
cltd
jns
jl
cmp
push
add
mov
mov
imul
push
add
fcmovu
fidivrs
pop
ret
test
pushf
sub
loop
fildll
mov
sbb
or
mov
or
mulb
cmpsb
addb
inc
fisttpll
mov
cld
or
sub
add
add
hlt
fbld
lods
cmp
add
add
xor
push
xor
pop
mov
jb
pop
into
xchg
daa
inc
jne
lods
stos
xor
mov
and
clc
les
fmull
adc
mov
xor
add
bound
fbstp
sub
cmpb
lods
mov
outsb
dec
cmp
outsl
jo
lods
outsb
stos
sub
loope
cmpsb
ret
xacquire
xor
sbb
and
scas
mov
adc
movsl
push
test
scas
xchg
jmp
pop
stc
xchg
dec
and
jl
imulb
daa
cwtl
sbb
test
pop
push
mov
adc
jge
inc
inc
mov
jge
and
es
loope
mov
ljmp
jnp
sub
pop
imul
dec
dec
das
lods
cmpb
out
mov
push
pop
sub
mov
out
mov
mov
in
cltd
pop
fst
pop
mov
outsb
data16
out
fcomp
mov
add
add
into
fwait
add
mov
addr16
add
add
add
aad
int
xchg
mov
pusha
lret
adc
sub
xor
fninit
movsl
xor
rcll
mov
xchg
mov
nop
pop
mov
scas
mov
pushl
jg
scas
lods
mov
jl
pushw
cmp
dec
gs
testl
adc
xor
cmp
cmc
dec
gs
pop
cltd
shl
or
icebp
or
leave
jnp
cmp
daa
test
test
mov
pop
sub
inc
jg
sbb
cmp
add
movsb
insl
loopne
sub
xor
shll
jle
sub
inc
xchg
add
xor
mov
stos
ret
mov
das
mov
movsb
adc
mov
mov
cmpsb
xor
das
dec
daa
movsb
int3
lret
xchg
lret
rcrl
sahf
xchg
dec
nop
stc
inc
jl
test
out
mov
pop
sarb
in
or
loopne
or
add
add
add
mov
test
repnz
popf
xchg
nop
push
loopne
divb
je
std
mov
dec
arpl
mov
test
dec
add
popf
lcall
add
inc
sub
xor
lds
mov
pop
jae
add
ljmp
jbe
sbb
rcll
in
push
out
xchg
mov
xor
aas
add
xchg
in
xchg
cwtl
dec
mov
sti
sahf
loope
xlat
in
lods
mov
sldt
ja
jmp
scas
add
pop
inc
and
sbb
outsb
sarl
inc
repnz
div
mov
das
bound
push
in
push
idiv
idivb
fwait
popf
ljmp
sbb
inc
jno
in
cmp
daa
bound
loop
jnp
movsl
imull
mov
mov
cs
lods
int
jecxz
dec
jno
and
sub
lods
jo
jg
xor
add
sti
inc
out
aas
mov
shlb
shl
or
add
add
add
shlb
sub
rcll
cmp
popa
dec
stos
pop
push
xchg
and
or
pop
idivl
push
int3
stos
xorl
fadd
cmp
jb
push
mov
mov
add
jbe
mov
xlat
sti
loope
mov
inc
jbe
push
repz
jbe
add
call
mov
pop
test
push
sub
xchg
push
lods
xor
pop
pop
push
int
rclb
int3
loope
arpl
mov
mov
adc
xchg
xor
mov
inc
dec
pop
cmpsl
xchg
xor
lods
jno
dec
push
pushf
or
add
imul
adc
shrb
mov
cli
mov
add
jno
xchg
sub
in
push
enter
addr16
and
pushf
leave
jb
cmp
mov
adc
jg
xchg
subb
test
add
bnd
dec
leave
and
pop
push
push
addr16
add
add
add
fldenv
incl
mov
arpl
fistl
test
imul
push
add
cmp
fs
fstpl
xor
jo
jnp
mov
dec
in
scas
stc
jg
cmpb
cmp
lods
xor
stos
cmp
loop
fldenv
shll
in
mov
fldenv
popf
jle
test
imul
fnsave
movsl
sahf
adc
mov
popf
mov
aam
imul
mov
punpckhbw
subl
js
mov
sub
xchg
aas
loopne
mov
aam
js
adc
xchg
xor
xchg
xchg
xchg
inc
cmp
jmp
outsb
lds
dec
sbb
add
sbb
or
push
lcall
xor
mov
xchg
int
popf
jp
outsb
or
add
testb
mov
add
in
out
ja
filds
mov
in
addr16
add
mov
fdivrl
xchg
push
sub
cs
mov
inc
fmuls
mov
and
outsb
pop
orb
sbb
xchg
dec
lock
call
cmpsl
sbb
add
shl
cmp
stos
cwtl
ret
hlt
jmp
ja
xchg
pop
ficoml
aas
cmp
xor
inc
fcmovnb
shll
push
aad
xchg
add
idiv
sahf
ret
xor
lock
popf
cmpsl
call
mov
add
jmp
xlat
loopne
mov
push
xchg
mov
xchg
sbb
mov
sar
mov
in
mov
mov
fidivrl
inc
mov
mov
push
gs
adc
mov
dec
jp
add
xor
or
jge
mov
push
outsl
lcall
lds
jns
pop
dec
jmp
pop
jg
test
jne
insl
xor
outsl
bound
add
add
pop
in
inc
push
or
add
add
add
cwtl
movsl
inc
mov
icebp
mov
cld
fwait
mov
or
in
mov
mov
mov
xchg
xchg
imul
jne
pop
sub
sbb
mov
jns
out
and
inc
push
scas
pop
fildll
pusha
into
mov
xchg
into
cltd
mov
jp
loopne
xchg
fistpll
jmp
pop
push
inc
cmp
adc
add
mov
daa
movsl
pop
sub
mov
dec
push
ja
out
jge
xchg
aaa
mov
pop
xchg
xchg
sbb
and
fdivl
inc
pop
mov
dec
add
lods
pop
mov
int3
aas
fsubr
cmp
xchg
clc
mov
push
xchg
mov
sbb
in
mov
out
jle
lds
shl
out
jp
je
xor
repnz
pop
aam
sbb
ljmp
leave
ljmp
xchg
sbb
mov
jp
stc
jecxz
push
inc
loope
add
add
jg
neg
pop
daa
inc
mov
dec
sgdtl
add
add
mov
clc
cmpb
insl
push
inc
mov
and
xchg
xor
popa
inc
sub
or
insl
push
mov
sbb
cmp
pusha
fnsave
dec
les
fldl
pop
mov
dec
inc
mov
fnsave
je
sahf
pop
cs
xor
xchg
mov
mov
cs
xor
mov
push
dec
popl
xchg
add
mov
inc
into
ss
and
adc
xchg
pop
mov
push
rcll
cltd
mov
mov
sub
stos
xor
cmp
sbb
mov
xchg
ja
ficoms
les
rcll
sub
pop
ss
bound
das
xchg
lret
cmp
sub
bound
insl
mov
push
test
mov
int
fidivrs
sub
xchg
pop
and
cmp
sti
jg
cmp
je
fldcw
cwtl
adc
add
add
add
add
mov
outsb
jo
xchg
push
fwait
or
mov
jns
mov
cmpl
clc
lret
pop
call
iret
adc
loope
out
out
data16
ja
data16
mov
mov
test
xor
lret
pop
lret
arpl
cmp
mov
jp
xlat
xchg
and
stc
test
inc
push
xchg
cmp
lahf
outsb
add
loopne
arpl
test
sub
sub
es
gs
js
mov
mov
sbb
fcmove
adc
cmp
mov
int
adc
scas
push
imul
xor
fs
or
and
rol
je
cmp
sub
imul
push
or
push
js
lret
pop
test
xchg
mov
aad
hlt
ret
xchg
ja
iret
scas
aam
jnp
fstp
fcompl
sub
adc
add
add
add
sbb
dec
les
dec
xchg
cmp
pop
popf
cld
lods
inc
ds
cpuid
stc
shrl
sub
dec
or
and
push
push
jno
sub
pop
loop
inc
mov
sti
dec
or
xchg
jbe
xor
pop
lret
js
inc
push
cmp
xlat
jmp
test
jne
mov
popa
mov
or
cld
adc
cmp
xchg
lods
jae
scas
xlat
sbb
push
inc
push
hlt
lcall
sub
aam
cs
fnsave
cmp
jle
mov
lock
jge
xchg
aad
fbld
pushf
jg
sbb
mov
insb
loop
dec
cmp
push
idivb
pop
jns
adcl
lea
mov
jne
out
pop
imul
imul
loopne
ret
and
dec
mov
stos
rcll
cmpsb
pop
mov
jno
std
outsl
mov
add
aad
hlt
adc
add
add
add
inc
xchg
xor
int3
hlt
xchg
outsl
xor
pop
mov
adc
daa
cmp
les
mov
xlat
mov
mov
xchg
xchg
int3
adc
jge
cmpsb
xchg
lods
add
ja
push
and
insl
jg
mov
push
ficoms
in
fnstenv
sbb
or
inc
add
jl
ss
add
cltd
add
out
out
add
movsl
shll
mov
cmpl
movsb
pop
fnstcw
sahf
jne
shll
push
sub
fmuls
pop
out
daa
je
ljmp
addl
pusha
push
inc
push
test
pop
xchg
loopne
or
andl
jle
inc
xor
dec
pop
inc
or
inc
push
add
mov
mov
test
mov
sub
pop
mov
arpl
fwait
pop
add
xchg
lods
and
jno
lock
xchg
insl
aam
sbbb
loope
jmp
fnsave
sub
adc
add
add
add
or
shl
mov
imulb
pop
aaa
sub
ret
addr16
adc
scas
ss
pop
sbb
fwait
loop
push
arpl
jg
and
fidivl
lahf
mov
ficomps
mov
stos
movsl
dec
daa
pop
daa
adc
push
or
pop
adc
cmp
push
cs
jecxz
aaa
add
in
sub
jle
xor
add
cs
scas
pop
loope
stos
cld
push
sbbb
lahf
rcrl
jecxz
shr
jmp
shlb
push
leave
sub
test
mov
jl
call
inc
push
ss
mov
test
test
bsf
push
out
sbb
mov
inc
aad
pop
dec
movsl
fsubl
pop
inc
xchg
dec
inc
lock
sbb
ret
cmp
into
mov
imul
adc
lret
push
xor
mov
add
add
xor
test
add
add
add
add
cmpsb
fdivp
push
cld
ds
sub
inc
mov
xchg
iret
ret
xchg
lahf
push
test
leave
cmp
outsb
outsb
jp
nop
push
cltd
mov
xchg
outsb
jnp
mov
mov
jp
ret
fstpt
dec
mov
pushf
sahf
mov
andl
pop
pop
push
sub
rcr
mov
or
repz
loopne
int3
dec
stos
mov
psubusw
adc
shlb
add
cmp
jmp
mov
jg
aam
add
mov
or
stc
sbb
and
mulb
push
adc
fucomi
push
pop
sub
popa
add
sbb
dec
aas
js
push
mov
les
dec
orb
out
ret
push
mov
jmp
jb
adc
testb
cmp
fisttpl
adc
jne
dec
pop
aad
scas
repz
test
aad
sbb
jae
aas
mov
popf
dec
cli
inc
jg
int
xchg
lods
or
mov
jb
adc
add
int
pop
fcoms
pop
cwtl
adc
mov
sahf
shlb
inc
sbb
mov
les
sbb
iret
mov
daa
std
fwait
movl
neg
mov
rolb
imul
leave
aaa
adc
out
int
dec
push
fadds
rclb
jmp
mov
lods
fldt
mov
cmp
push
xchg
jmp
daa
iret
jne
inc
cmp
mov
xor
xchg
sub
es
or
push
inc
int3
rol
movd
test
sub
inc
adc
orb
add
cmpsl
jl
in
push
mov
das
stc
or
inc
cmp
xor
or
pop
loope
hlt
sub
ds
mov
mov
push
scas
sahf
and
fildll
push
adc
push
lret
pop
sarb
sub
test
lock
std
cmp
jle
fistpll
ss
aaa
push
mov
add
add
add
inc
and
push
in
out
jae
cltd
pop
in
sbb
or
pop
sub
lds
cmpl
push
mov
push
ljmp
sarb
ret
add
out
and
insl
xchg
mov
je
or
mov
sbbl
icebp
js
mov
ud0
xor
pop
inc
cmp
xor
xchg
fimull
sub
ret
add
mov
fildll
icebp
lahf
jne
cmp
jecxz
xorb
jl
pop
jbe
in
int
xchg
mov
test
ljmp
mov
mov
or
pop
mov
xchg
adc
pop
out
xchg
call
shr
inc
scas
idivl
repz
or
aaa
movsl
lods
xor
mov
dec
cltd
add
xchg
leave
incl
add
add
iret
xlat
ficompl
inc
movsb
addb
addr16
add
add
add
sbb
scas
mov
lahf
mov
mov
push
xchg
mov
push
jae
push
je
push
mov
fs
pop
js
xchg
mov
aam
in
shl
jmp
inc
in
cmpsb
inc
push
fld
ror
sbb
mov
cmp
xchg
loopne
xlat
cltd
pusha
mov
or
sbb
cli
mov
into
xchg
pushf
cmc
ret
sub
mov
inc
stos
sbb
lock
mov
pushf
aas
loopne
mov
int
int
cmp
fs
pop
fsts
data16
imul
cmpb
sub
jge
jmp
fdivrp
push
push
sahf
in
xchg
cmpsb
inc
adc
fistps
add
push
xchg
and
lds
sbb
xchg
fdiv
les
xchg
mov
int3
push
cli
sub
dec
popa
shrb
cmp
sbb
int3
gs
dec
dec
dec
out
outsb
lret
jmp
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
out
xor
add
add
add
sbb
dec
rcl
je
mov
test
push
hlt
push
std
ret
fildll
in
sarb
inc
pushf
sti
out
lret
xor
push
xchg
int3
mov
xorb
and
mov
ja
fiaddl
sbb
jle
aad
add
sti
test
movsb
movsb
rol
repnz
aad
jp
nop
enter
ret
stos
shr
lcall
sbb
sbb
mov
cs
movsl
ret
sbbb
sbb
xor
inc
loope
pop
jb
negb
inc
mov
cmpsb
inc
es
sbb
sub
int
fmull
or
cmp
ret
mov
lods
push
out
dec
out
push
das
dec
cmp
jecxz
adc
and
shrb
jge
stos
adc
sub
and
pop
cmp
xchg
rcll
rolb
sub
cwtl
xchg
enter
in
aaa
mov
sbb
std
sbb
stc
cld
or
addr16
add
sbb
add
add
add
cmp
inc
cld
dec
mov
cmpsb
in
lods
adc
mov
sbb
xor
cmp
enter
es
mov
xor
out
loop
cmp
call
add
fst
adc
test
push
stc
test
js
cmp
fwait
inc
mov
fsub
ret
lods
push
adc
dec
xchg
loope
test
dec
cmp
xor
cmpsl
inc
icebp
mov
divb
neg
mov
push
inc
pop
call
call
inc
and
dec
es
frstor
test
jge
jmp
cmp
loop
in
mov
xorb
fidivrl
pop
pop
push
repz
pop
enter
lcall
mov
jecxz
sbb
xchg
es
popa
test
jno
cld
nop
xchg
cmp
sub
xchg
sub
mov
add
negl
adc
pop
xchg
cmpsb
mov
pop
out
sbb
add
add
add
imul
cmp
add
lds
gs
inc
fcmovnb
das
jecxz
addr16
je
loop
cmp
mov
or
push
fsubp
adc
pop
jb
jp
sbb
push
lods
jb
insb
cmpsb
mov
int3
pop
fbld
ds
rcll
add
mov
ret
cltd
xor
inc
lret
cmp
push
ret
xor
push
test
leave
jge
xor
sbb
push
push
lods
ffree
iret
mov
sub
mov
adc
mov
jecxz
xor
stc
inc
and
cmpsl
ret
shll
push
cmpsb
ja
xchg
gs
ss
repz
pop
mov
inc
sahf
cmp
xchg
jmp
xor
add
mov
idivl
into
sub
sbbb
cmp
sti
cmp
test
ja
inc
add
adc
stc
cli
push
mov
dec
pushl
out
incb
sbb
add
add
add
shll
ret
jne
cld
mov
mov
add
fcmovnb
iret
out
ja
add
xchg
int
push
inc
cmp
sbb
scas
jg
inc
cmp
dec
dec
mov
or
or
out
or
add
xor
cwtl
rcr
imul
sub
das
lods
mov
fisttps
mov
mov
lret
cli
xor
jno
rcll
arpl
push
lods
pop
or
jo
outsl
ret
inc
sahf
add
add
push
xchg
mov
sbb
mov
inc
out
xor
and
jle
mov
sbb
test
outsb
je
insl
lret
mov
jecxz
cmpsb
push
fsubp
dec
jne
dec
ror
call
jb
and
mov
test
jmp
inc
daa
jnp
js
jmp
dec
repz
add
mov
push
les
dec
sub
fdivs
pop
sub
inc
ja
pop
aas
dec
push
sbb
addr16
add
add
add
rcrb
pop
fildl
and
push
xlat
sub
mov
adc
scas
cmp
cld
out
pop
in
or
dec
mov
cs
dec
xlat
xor
mov
or
mov
daa
bound
or
fists
xchg
jl
fbld
stc
pop
js
jb
sbb
je
mov
lret
push
mov
in
mov
ret
xor
mov
pop
inc
mov
push
lods
xchg
xor
out
dec
fistl
mov
add
cli
xchg
pop
cs
dec
mov
ret
dec
imul
enter
inc
aad
push
cs
in
xchg
inc
xchg
shlb
loopne
jnp
imul
sub
or
sub
loop
sub
pop
fistl
daa
cmp
mov
jbe
mov
pop
inc
or
xadd
arpl
sbb
iret
rcrl
dec
sub
leave
lock
repz
jae
ja
div
mov
cmp
add
add
add
and
xchg
or
cmp
mov
lahf
sub
jecxz
lcall
lret
or
mov
shrb
push
test
int3
test
jp
ret
xor
fstpl
mov
mov
insl
ja
cmp
repnz
add
dec
lahf
jmp
mov
push
inc
cmp
adc
pop
pop
dec
int3
mov
imul
and
pusha
bound
outsb
insb
lahf
pop
clc
cmc
stc
loopne
sbb
push
shll
scas
dec
fwait
jl
andl
pop
nop
icebp
push
cmp
inc
repnz
xchg
mov
stc
imul
cmpsl
sbb
cmp
xchg
int
push
push
icebp
mov
adc
sbb
test
pop
lea
inc
je,pn
mov
sub
pop
cmp
movsb
xor
cli
std
jg
push
pushf
dec
pop
add
addr16
add
add
add
dec
dec
add
out
push
imul
shrl
lock
jb
out
push
pop
inc
inc
xor
test
es
push
or
lahf
xor
mov
add
mov
push
cltd
mov
jnp
adc
sbb
movsb
imul
cmpb
mov
enter
inc
sub
iret
popa
cmp
lock
pop
loope
and
mov
jnp
ret
cmpsl
in
adc
adc
lock
inc
roll
aam
xchg
jbe
pop
cmp
les
ja
sbb
push
mov
cmp
lret
stos
movsl
fbld
and
pop
aam
jae
mov
int
gs
mull
xor
inc
jo
test
je
fsubp
or
mov
std
sub
fadd
out
jns
ret
jns
mov
push
pop
imulb
test
or
orl
dec
out
sar
divl
add
add
add
mov
std
incl
sbb
insb
mov
add
add
add
fs
sbb
jo
cmp
and
cwtl
xlat
push
gs
sub
xchg
movsb
mov
pop
and
jge
xchg
addr16
lods
mov
dec
pop
inc
repnz
lock
xlat
sub
mov
jg
stos
pop
lcall
mov
enter
lods
data16
jecxz
cmp
test
and
test
push
sub
or
and
lds
and
add
xchg
xor
sub
pop
mov
orb
cmc
adc
mov
add
fsubrs
mov
movsl
js
mov
loop
cmpl
lret
sbb
test
sbb
pop
rolb
dec
pushf
out
jge
into
jl
cmp
push
repz
cltd
mov
add
imul
imul
jb
fs
pusha
insl
rcll
xchg
lock
sbb
push
es
jg
pop
or
xor
popl
add
add
add
cld
mov
jae
mov
inc
loop
jne
sub
mov
jge
push
cmp
pop
cmpsb
push
test
and
dec
hlt
stc
pop
jmp
mov
fildl
cmc
or
hlt
cmp
push
mov
mov
popf
movsl
rol
or
jns
loop
mov
jg
inc
repz
in
iret
arpl
aas
into
push
xchg
test
std
cli
pop
dec
push
mov
pop
sub
adc
jb
fs
insb
imul
testl
ds
js
jmp
push
pushf
cmp
stos
push
lret
xor
outsb
out
pop
sbb
loopne
cltd
cmp
leave
repnz
jl
shlb
ret
dec
sub
inc
inc
sti
and
or
pusha
push
mov
in
push
jmp
icebp
int
jne
scas
xor
pop
lahf
mov
mov
push
clc
or
dec
push
cmp
and
add
add
add
cs
or
mov
xchg
push
pop
xor
iret
sbb
cmp
add
sub
pop
jbe
adc
iret
sbb
mov
sub
sarl
sbb
sub
add
jl
push
cli
or
mov
sti
out
mov
pop
and
out
pop
dec
sbb
cmp
xchg
mov
fldt
fcoml
and
int
pusha
mov
adcl
cmp
int3
int3
int
mov
push
mov
xchg
jecxz
inc
lcall
stos
push
std
adc
or
andb
popa
xor
clc
jp
cld
pop
add
int
xor
fmuls
std
jg
sub
insb
pop
cwtl
or
les
fisubl
ret
mov
add
adc
cmp
push
pop
js
test
in
jb
iret
rclb
xor
sti
test
scas
aad
add
add
stc
lods
xor
mov
rcl
and
add
add
add
xlat
lock
cmp
mov
and
js
dec
movsl
movsl
outsl
movsl
scas
cwtl
xor
lock
inc
push
and
stos
jae
mov
cmpsb
popf
bound
adc
stos
lret
cmp
xchg
push
fmuls
push
jle,pn
dec
sub
fstps
push
cmpsb
nopl
xor
aas
js
add
mov
sbb
dec
sub
sarl
setbe
inc
adc
lods
mov
adc
sub
repz
arpl
test
in
dec
mov
jbe
jp
stos
sbb
out
lods
test
cli
jno
push
push
outsb
ljmp
outsl
push
pusha
mov
dec
fidivs
push
test
pop
add
xchg
cmp
sub
inc
test
test
ss
xor
imul
imul
add
add
ficoms
stos
sbb
call
mov
and
add
add
add
int
pushf
lcall
ja
stos
adc
adc
jl
arpl
ret
enter
adc
int
testb
mov
insl
fs
mov
pop
add
xor
jp
jbe
mov
orl
loop
xor
repz
inc
adc
cmpb
movsl
testl
pop
iret
push
outsb
xchg
sub
outsb
mov
out
sahf
loop
lret
mov
mov
les
enter
lret
or
scas
mov
insb
sbb
mov
jg
popf
add
push
adc
sbb
adc
jbe
push
cmp
ret
insl
repz
leave
das
jg
xchg
xor
mov
popa
mov
mov
mov
insl
jb
inc
scas
or
mov
dec
dec
sub
adc
and
fistl
mov
lods
push
insb
mov
out
stos
jge
or
and
add
add
add
ret
push
dec
das
or
sarb
xlat
sbb
sar
jp
bound
out
push
mov
iret
inc
add
add
es
ljmp
jecxz
cmp
out
lods
movsl
dec
push
cmp
add
mov
add
xor
sbb
pop
push
push
divb
fwait
mov
jbe
jle
int3
pop
stos
cmp
orb
mov
sub
loopne
mov
in
pop
cli
stc
ja
jle
out
mov
cld
cs
xor
pop
cmpb
jmp
call
mov
mov
sub
lea
clc
cmp
mov
push
cs
out
ljmp
cmp
cmp
cwtl
test
pop
inc
faddp
in
xor
add
cmpsb
xor
mov
xlat
cmc
shrl
and
pop
or
cmp
add
add
sbb
out
xchg
iret
push
aas
movsl
lock
add
add
add
hlt
shll
cmp
nop
pop
adc
add
mov
inc
xchg
push
popf
mov
hlt
loopne
push
push
sbb
mov
fnsave
shll
push
aad
and
xchg
jl
xor
mov
cmp
mov
mov
pop
adc
test
popf
shlb
jecxz
mov
sub
js
mov
std
sbb
fcmovu
cmp
and
mov
out
mov
mov
insl
push
lret
in
mov
xchg
shlb
rclb
adc
lods
lea
dec
cmp
mov
pop
std
mov
xchg
lds
adc
in
jmp
outsl
sbb
rolb
aas
mov
jno
fsubl
ss
daa
out
push
cwtl
lret
sub
es
jbe
mov
push
int
pop
cli
push
ret
adc
pmaddwd
daa
pusha
add
fisttpll
das
aam
add
cmp
out
loope
jns
in
push
imul
add
mov
loope
mov
or
xor
mov
push
jbe
mov
adc
xchg
push
push
lds
xchg
mov
popa
lret
jmp
cmp
dec
inc
insl
and
inc
mov
dec
mov
gs
out
arpl
stc
ljmp
mov
notb
push
sahf
call
cmp
jg
xor
pop
imul
pop
add
xor
push
lods
cltd
dec
jecxz
inc
pusha
fst
or
xlat
sub
js
mov
mov
into
pop
iret
and
cs
data16
adc
scas
stc
and
daa
gs
jmp
dec
mov
sbbb
andl
mov
sahf
mov
xchg
dec
lods
nop
cmp
inc
aad
addr16
lcall
sub
in
aam
add
mov
insb
sbb
pop
cmpsb
xlat
ret
mov
call
enter
lock
in
test
sbb
sti
push
mov
int
sub
daa
add
add
add
paddq
sar
pop
enter
pushf
idiv
mov
push
mov
mov
dec
out
pushf
iret
mov
pop
fildll
jb
mov
and
rcrl
aaa
cmpsl
popf
sbb
xor
pop
adc
xchg
loop
int
out
push
adc
imul
dec
sti
ror
lea
jo
in
or
push
push
dec
push
mov
cwtl
or
pop
push
inc
shr
cmp
xchg
pop
ja
cltd
inc
push
movsl
mov
enter
mov
rcrb
dec
jecxz
in
jp
xchg
jl
shll
les
jmp
jmp
cmc
ficoms
xchg
ja
adc
ret
xchg
add
iret
mov
jp
ja
cs
inc
push
cmpsl
jl
jnp,pn
fwait
cmp
sub
pop
in
cmp
mov
les
jbe
push
pop
lods
jge
lret
inc
outsb
add
jo
lods
dec
mov
dec
idivl
cld
ret
add
sub
scas
sub
add
add
add
dec
add
shl
cmp
sbb
out
outsl
shlb
popf
js
or
jmp
call
push
pop
add
inc
fdivs
sbb
movsb
inc
mov
cs
jae
test
dec
pop
cmc
push
mov
and
notl
fiadds
mov
outsb
push
movsl
icebp
out
ds
pop
shl
sbb
mov
cld
fldcw
sti
sbb
cmc
dec
add
cli
xor
jmp
mov
cmp
jg
add
jp
rclb
js
sub
dec
das
dec
stc
sti
or
cli
push
add
sub
into
sub
push
add
aam
nop
jge
pop
fmul
sub
repz
and
aad
cltd
stc
dec
jp
lea
scas
mov
scas
adc
mov
mov
xor
mov
jnp
cmp
sbb
es
adc
ret
mov
iret
mov
shll
into
packuswb
add
add
add
inc
push
je
mov
das
in
pop
mov
sbbb
ficompl
aas
cwtl
push
shld
xchg
dec
cmp
mov
xchg
pusha
push
shrb
mov
push
push
jl
and
scas
or
cmp
add
lods
vaddps
push
add
movsb
mov
loope
lea
shll
icebp
sub
mov
sbb
push
imul
sub
fstpt
bound
stos
pop
add
add
lret
ljmp
xchg
sub
sahf
sub
xchg
shll
jp
sub
mov
mov
cmp
xlat
xor
leave
in
pop
rcrb
add
mov
push
mov
inc
jnp
fcoms
pop
push
inc
sub
ds
jbe
test
fs
and
cmp
shll
les
or
jg
arpl
jb
in
sub
add
add
add
in
lahf
or
sbbb
mov
pop
test
mov
jnp
xchg
inc
cld
sub
pop
lret
aas
cmp
jge
leave
popa
test
lock
xlat
add
out
ljmp
ret
inc
xchg
pop
mov
into
sbb
adc
mov
lods
pop
and
jcxz
or
pop
int3
jle
push
int
mov
sbb
push
in
aas
in
lea
cmpsb
add
rorl
dec
xchg
je
loopne
xchg
inc
les
mov
or
mov
add
xchg
aaa
pusha
sti
mov
idivb
inc
call
stc
and
orl
call
imul
add
test
test
add
daa
int
les
shlb
mov
lret
iret
ret
add
xor
xor
int
jmp
add
add
xor
clc
cli
clc
sarb
sti
mov
jge
sub
add
add
add
or
pop
sar
pop
xchg
ljmp
sar
sub
and
lahf
jns
jae
sub
xor
in
xchg
push
xchg
fsts
adc
xchg
cmp
jne
outsl
mov
ds
stc
inc
lahf
lahf
xchg
pop
and
and
mov
push
pop
call
fistpll
bound
arpl
aam
aam
xor
mov
inc
sahf
aad
sahf
mov
cld
lss
push
inc
cmp
imul
fwait
pop
pop
cmp
addr16
sarb
orl
dec
cmp
iret
push
loop
test
ret
imul
pop
xchg
pop
jg
loop
shl
jo
fxtract
ret
fsub
mov
lret
cmc
leave
or
shlb
jb
or
js
mov
mov
jl
push
adc
scas
addr16
xchg
sbb
fbstp
and
mov
pop
scas
test
imul
mov
jne
addr16
add
add
add
sarl
inc
sbb
cmp
stos
out
sub
xor
mov
enter
pop
or
sbb
jns
test
dec
xlat
sbb
jecxz
and
add
inc
push
jle
rorb
cltd
lcall
and
in
repnz
fstpl
or
cmpsb
mov
and
aas
inc
mov
outsl
dec
clc
jecxz
inc
cltd
out
cmc
movsl
icebp
sbb
pop
pop
aad
and
push
jo
cmp
lock
mov
adc
mov
push
ret
les
mov
popa
imul
or
aam
inc
sub
dec
push
mov
in
jle
jbe
aad
iret
jnp
int
mov
push
lret
pusha
dec
ret
jnp
cwtl
lret
mov
dec
lods
out
stos
addb
mov
xchg
into
inc
mov
in
cmp
incl
or
pop
out
fs
es
data16
insb
daa
mov
xchg
mov
add
add
add
das
es
jmp
jmp
inc
loopne
mov
sbb
scas
and
test
in
fldenv
int
inc
jno
mov
add
mov
lea
pop
cltd
movsl
clc
jle
cmc
sbb
mov
inc
xchg
jg
ret
cmpsb
outsb
inc
inc
xchg
sahf
mov
inc
lds
jnp
or
subl
adc
dec
sbb
mov
mov
add
rcl
dec
ja
into
adc
cli
out
cwtl
jmp
bound
sub
push
shlb
aam
pop
cmp
movsb
xchg
dec
and
pop
mov
add
cs
loop
sbb
loopne
insl
test
xchg
test
pusha
mov
cli
cmc
inc
fistps
or
leave
mov
call
popa
lahf
push
inc
decl
fistpll
das
push
mov
clc
mov
fldcw
add
fldenv
add
add
add
fisttpl
dec
jbe
adc
push
fadd
fimuls
mov
or
rorl
arpl
pop
inc
cmp
addr16
push
add
lret
call
pop
xlat
test
mov
push
pop
and
test
sbb
test
test
daa
dec
xchg
push
pop
push
cmpsl
jmp
cmpsb
scas
xor
mov
ret
or
sub
shrl
and
push
lea
rcll
rcr
fisubs
jae
cmp
mull
hlt
and
fwait
call
cs
add
mov
cmp
cs
inc
push
stos
push
and
push
sbb
sbb
andl
xchg
jne
push
fistpll
cmp
ret
call
xor
pminsw
retw
std
lret
mov
fs
jbe
mov
inc
pop
cmp
and
iret
or
cld
hlt
data16
add
repz
push
sti
cmpsl
enter
mov
pop
inc
addr16
add
add
add
fisubrl
scas
pop
push
cmp
pop
fdivrl
sub
ds
add
inc
sub
mov
push
xor
imul
xchg
pushf
dec
fistpl
inc
mov
adc
xchg
cmp
sub
mov
xchg
mov
repnz
fstpl
mov
mov
jle
arpl
inc
sub
leave
insl
jns
gs
xchg
push
sub
shll
out
mov
lret
cmc
scas
test
rclb
sarl
jb
push
int3
mov
xchg
xor
stos
sbbl
or
and
imulb
idiv
popa
adc
cld
call
ret
jge,pn
sub
adc
pop
pushf
sbb
jnp
mov
shll
xchg
push
gs
fdivl
mov
lret
adc
adc
sbb
sub
pushl
mov
add
push
and
std
mov
dec
push
inc
lods
xchg
inc
xor
add
add
add
imulb
pop
cmp
mov
jno
mov
test
mov
xor
sahf
orb
sub
mov
movsb
or
push
imul
sub
mov
fucomp
jb
les
mov
xor
cmc
mov
mov
or
out
test
rcr
addr16
dec
mov
popf
cwtl
test
jl
fldln2
add
xchg
sbb
int
or
jne
dec
inc
jl
jge
mov
mov
dec
sub
push
push
pop
cmp
ds
pop
inc
sub
repz
scas
fsubrs
mov
mov
add
mov
in
or
fmuls
inc
enter
roll
loope
inc
mov
enter
cltd
out
into
out
inc
pushf
xchg
into
jecxz,pn
mov
scas
test
add
loope
stc
fildl
lds
xchg
and
inc
and
lcall
add
add
add
mov
mov
test
mov
cmpsb
mov
cli
xchg
mov
repz
xchg
pop
fcmove
movsb
jo
mov
je
xor
push
aas
xchg
mov
mov
inc
adc
leave
push
inc
and
icebp
call
arpl
andl
andb
cmp
jmp
nop
cmc
mov
or
in
inc
test
push
ds
sbb
mov
ficompl
frstor
cld
std
and
iret
lret
out
push
repz
xchg
push
sub
es
pop
stos
cmp
dec
and
cmpsb
insl
push
sub
fs
pop
cld
push
jns
lcall
push
mov
std
inc
aam
out
cmp
fcoml
ljmp
mov
dec
xor
inc
xchg
push
jns
insb
sbb
jns
inc
arpl
xor
in
sub
inc
or
lea
mov
fiaddl
ret
ficomps
cmp
lahf
or
popf
js
xor
add
add
add
cmp
or
in
dec
pop
xchg
dec
stos
aad
and
inc
jne
in
add
mov
lcall
iret
andb
movsb
adc
pop
mov
cmp
jae
outsl
pop
popa
pop
push
sub
gs
cmc
lea
dec
repnz
mov
inc
out
jnp
lret
mov
mov
and
jb
imul
sti
pop
jne
xor
test
pop
pop
shlb
sub
push
xchg
adc
dec
mov
mov
jecxz
mov
jmp
xchg
movsl
repnz
push
jb
mov
imul
xchg
in
xchg
ja
sbb
jne
sbb
aam
mov
mov
mov
pop
loope
add
push
mov
je
jbe
dec
pushf
adc
lock
iret
sub
sarl
sub
mov
into
inc
insb
arpl
ja
sub
add
lds
add
add
aam
nop
das
cmp
xchg
sbb
punpckhwd
fsub
add
push
bswap
shrb
push
out
or
inc
sbb
xor
jge
in
mov
fiadds
mov
sbb
and
jle
pop
leave
sub
rorb
ja
cmpsl
and
pushf
lcall
sub
in
or
xor
dec
test
dec
iret
sbb
mov
pop
repnz
daa
bound
and
fldl
in
pop
cmp
sbb
jmp
and
lret
sub
pop
sbb
repnz
mov
inc
cmp
lods
iret
arpl
sbb
push
test
call
mov
mov
or
clc
loop
shll
mov
add
add
inc
cmc
fldcw
jno
cld
testb
add
lock
mov
or
sahf
xor
cltd
addr16
add
add
add
popa
or
inc
sbb
add
add
inc
pop
lcall
bound
dec
pushf
xchg
inc
xchg
jno
pop
inc
sbb
mov
movsl
and
mov
out
ret
mov
mov
lods
cmp
cmpsb
sub
ja
ss
pop
sub
or
js
jno
inc
outsb
jo
subb
add
les
icebp
aaa
xchg
xchg
iret
add
push
or
mov
lds
mov
icebp
andl
add
inc
mov
mull
arpl
xorb
add
cs
loopne
das
add
outsb
ja
jb
push
lods
ret
xchg
sub
inc
adc
cmpsb
enter
or
jno
mov
loop
cmc
push
mov
andl
pop
mov
incb
lcall
sbb
sub
sti
pop
jge
neg
hlt
add
push
addr16
add
or
sub
mov
mov
dec
xor
repz
adc
out
xlat
add
mov
dec
subb
decb
lret
daa
popa
ja
push
gs
mov
dec
movsb
fnstenv
sub
popf
inc
sbb
test
mov
push
mov
imul
dec
or
nop
jle
sti
cmp
mov
ds
inc
sub
jbe
or
jno
cmp
mov
rep
imul
inc
xor
push
cmp
mov
fldenv
or
out
jb
pop
or
sub
sbb
inc
jl
loop
pushf
mov
sti
mov
xchg
sub
add
dec
push
ror
cmpb
rcll
test
or
outsl
cld
js
jo
mov
fnstenv
xor
push
fstpt
pusha
cltd
fsub
std
in
popf
in
stc
jmp
xchg
mov
add
add
add
aas
and
fimuls
vcvtsi2sdl
dec
pop
scas
lds
out
in
popa
sub
cwtl
pop
push
out
sbb
nop
inc
inc
jb
jo
cmpsb
and
push
jne
test
in
mov
je
test
pushf
daa
xchg
xchg
mov
movsl
jnp
cwtl
adc
mov
cmpsb
stos
xlat
or
jne
cld
push
ret
loopne
not
mov
xchg
ljmp
xor
mov
aam
pop
jnp
icebp
es
dec
out
pop
dec
fdivrl
in
mov
pop
cmp
inc
aas
xchg
mov
lods
out
jnp
pop
ret
xchg
push
pop
jg
push
add
inc
push
lds
add
popl
les
shlb
inc
mov
or
cmpsl
push
adcb
xor
add
jo
out
rclb
cltd
mov
loope
push
mov
out
add
add
add
jp
jnp
sti
xchg
jle
jp
lods
pop
mov
test
add
add
push
pop
mov
sub
xor
mov
je
mov
mov
cmpsl
ret
cld
push
sub
jo
pop
insl
inc
ja
les
imul
mov
enter
movsl
mov
mov
sti
ljmp
das
aas
jae
sbb
sti
mov
adc
push
jg
dec
ljmp
cmc
fidivrl
popa
mov
call
dec
push
inc
mov
lret
dec
fldt
fcmovnu
xor
mov
adcb
ljmp
cmpsb
das
or
or
push
loop
std
mov
and
and
lods
sets
arpl
aam
and
mov
or
jge
push
mov
scas
and
ror
mov
popf
adc
xchg
lods
in
mul
fcoms
add
in
mov
push
sti
decb
mov
leave
cmp
add
add
add
sub
sbb
jb
lock
push
rorb
into
call
cmp
mov
shll
mov
and
push
das
sbb
fucomi
call
shlb
jae
dec
mov
pop
rol
push
inc
cmp
dec
je
pop
movsl
mov
pop
stc
je
lahf
adc
stos
das
push
std
test
sahf
cmp
pop
and
push
cmp
movsb
pop
into
mov
xor
pop
arpl
aas
xrelease
push
or
adc
sub
ljmp
sti
add
clc
stos
and
or
inc
sub
add
arpl
imul
es
jb
fcomi
jo
mov
adc
xchg
fcomi
ds
push
adc
pusha
cwtl
int3
subl
add
nop
rcll
adc
mov
in
push
ret
cmp
xor
hlt
sahf
lret
fistps
cmp
add
add
add
adc
jp
push
xchg
adc
inc
inc
dec
xchg
add
pop
rclb
rcrl
stos
pushl
iret
outsb
ret
sbb
mov
push
shl
jecxz
cld
dec
sahf
nop
xor
pop
and
repz
addr16
movsl
mov
sbb
cmc
xor
aas
inc
pop
stc
leave
fdivrs
jmp
mov
out
cld
or
mov
and
out
loope
ja
fisubrs
into
sbb
xlat
cmp
mov
aas
jnp
inc
mov
cmp
lret
leave
dec
push
adc
xor
cmpsl
iret
stc
or
dec
mov
add
loope
insb
pop
dec
int
sbb
or
pop
mov
test
repnz
lret
incb
jns
subl
leave
in
xchg
mov
jae
cmpsl
or
push
mov
mov
jae
mov
inc
cmp
loop
sbb
pushf
or
mov
add
incb
ljmp
fldl
add
add
add
add
mov
dec
pusha
or
std
inc
rcrb
inc
adc
sbb
cmc
push
sub
and
xor
add
mov
cmp
adc
add
pop
pop
rol
out
and
test
loop
add
adc
mov
cmpsb
aad
xchg
mov
cltd
adc
sbb
mov
xchg
push
and
gs
mov
ret
mov
test
loop
mov
push
movb
loope
pop
imul
mov
push
xor
adc
loopne
lahf
ljmp
adc
popa
arpl
and
jo
pop
mov
decl
xorl
adc
jae
sub
dec
clc
stc
aaa
pushf
iret
push
out
mov
loopne
push
mov
mov
es
daa
push
xor
out
sbb
loope
mov
movups
fldl
cmc
or
imul
sub
add
add
rclb
nop
lcall
cmp
add
add
add
mov
sbb
pop
or
test
pop
iret
jno
inc
sbb
es
xor
adc
ftst
pop
jo
test
pusha
es
push
or
pop
inc
dec
imul
push
es
ret
repnz
jae
nop
lret
mov
nop
data16
or
push
cmp
icebp
add
sbb
cwtl
dec
and
leave
fcoms
xor
push
outsl
mov
jmp
push
adc
adc
lret
lods
xor
lods
movsb
enter
jo
loope
xchg
pop
sub
pop
mov
lcall
pop
dec
out
mov
mov
inc
and
push
pusha
dec
push
mov
pop
fwait
cmp
inc
pusha
mov
jge
fwait
fwait
push
repz
divb
adcl
fs
mov
aam
lods
mov
cmp
cmp
int3
jne
add
add
jl
dec
jbe
idivl
or
ds
addr16
add
add
add
xchg
sub
and
sub
cli
pop
ja
cltd
jge
xor
push
lret
gs
inc
sti
push
sub
sub
aas
sbb
or
jp
fs
fstps
pop
stos
mov
mov
cmp
adc
ss
cli
pop
mull
shrb
outsl
sti
es
ljmp
scas
jg
inc
xlat
rcrl
pop
fidivs
jge
fimull
mov
dec
xor
fucomi
mov
loope
sbb
sbb
mov
or
push
push
jbe
cwtl
inc
fidivl
mov
bound
inc
lret
pop
lahf
add
pop
hlt
enter
push
in
pop
add
xchg
dec
ret
mov
or
mov
sbb
mov
data16
aas
jae
leave
and
cmp
xchg
andl
insb
sbb
pop
call
add
outsb
sub
stos
fs
jmp
leave
aas
inc
dec
fwait
and
add
add
add
xchg
adc
ja
pop
or
popa
mov
and
cmpsl
inc
insb
ja
cmpb
jo
or
add
sub
lods
lods
pop
inc
aas
fcmovnb
mov
test
sub
inc
nopl
mov
inc
pop
adc
jecxz
sbb
sub
add
mov
inc
daa
jae
ret
sbb
push
arpl
adc
cmp
sub
test
dec
ljmp
psubb
pop
fs
bound
testl
into
cmpb
xor
dec
rclb
push
mov
out
mov
clc
xor
shrb
and
cmp
ljmpw
in
jae
mov
iret
stos
fisttpl
std
jecxz
rcrl
cmpsl
ljmp
xchg
cmp
push
pop
jge
or
jl
add
add
insb
pop
pushf
scas
fistpll
outsl
fnsave
add
add
add
repnz
mov
sbb
push
xor
std
xor
mov
and
mov
mov
loop
sub
mov
in
scas
push
pop
test
mov
jg
dec
cld
scas
mov
mov
daa
sub
inc
in
sbbb
xor
imul
push
pushf
pop
aad
daa
out
xchg
orl
sub
call
and
and
cmpsl
inc
or
das
push
add
inc
andb
mov
lahf
xchg
pop
cmp
notb
or
sahf
and
paddsw
cmp
or
scas
or
les
jne
sbb
lret
lods
adcl
pop
sub
shrl
cmpsb
and
xor
aaa
inc
jb
jmp
test
jnp
loopne
movsb
mov
jo
in
cli
rorb
mov
data16
add
sbb
jnp
jnp
cmp
movsb
push
sbb
pusha
cmp
aas
add
add
add
and
inc
xchg
mov
bound
lret
adc
mov
js
jp
jno
out
jb
loop
adc
cwtl
dec
jmp
and
lahf
pusha
jl
jle
pop
cmp
cmpsb
ja
cmp
mov
ret
mov
sbb
fs
jg
mov
dec
fiadds
push
cmpsl
lret
lcall
and
cmp
inc
and
dec
es
sbbl
push
pop
sbb
lock
adc
popa
mov
sahf
sarb
and
pcmpeqd
jno
bound
jp
lds
rolb
mov
cmp
adc
sub
xchg
cmp
xchg
sbb
popf
or
out
insb
mov
pusha
push
xorb
lcall
sub
mov
push
push
xor
pop
and
xchg
push
pop
adc
dec
fisubl
fisubrs
sub
push
pop
imul
add
adc
jmp
out
sub
add
add
add
je
ljmp
sub
andb
fwait
loopne
inc
neg
lahf
iret
cwtl
stos
push
xor
cmp
fadds
out
bt
jb
leave
stos
jg
inc
stc
cmpsb
out
or
push
pushf
lods
outsl
test
addr16
mov
shll
rorl
push
sub
sub
mov
test
imul
xor
jmp
nop
in
mov
mov
adc
std
add
push
xor
mov
xor
mov
notb
or
mov
push
jo,pn
inc
mov
hlt
jo
cmp
jg
cmc
pop
pushf
jl
stos
adc
add
push
scas
mov
sbb
push
cs
pop
cmpsb
jl
adc
and
int
xor
or
xchg
pushf
jge
xor
mov
adc
mov
rorb
in
cmpsb
push
gs
jae
enter
aaa
cwtl
sahf
push
ss
add
jae
and
das
cmp
lods
repz
mov
and
push
addr16
add
add
add
xchg
imul
inc
pop
mov
adc
sub
jg
push
mov
sahf
sbb
or
dec
int
in
or
or
scas
xor
push
call
xchg
insl
jb
or
adc
mov
mov
lock
shll
mov
jg
shlb
pop
rolb
mov
jnp
rcll
imul
sbb
dec
jo
sub
fdivrs
mov
pop
mov
mov
icebp
mov
inc
pushf
and
gs
cmp
out
or
sub
push
jo
jle
push
sti
jb
jno
xchg
imul
insl
cmpsl
pop
adc
rcrb
rorb
sti
cs
dec
fs
push
mov
movsl
icebp
clc
test
xchg
je
mov
clc
int
push
mov
mov
push
jg
dec
add
add
aas
daa
push
cld
push
std
jmp
dec
push
popf
jnp
inc
add
add
add
xchg
pop
iret
icebp
xchg
mov
jp
imul
xor
push
int
cmp
shrl
inc
inc
sti
pop
push
add
outsb
push
adc
jno
aam
movsl
xor
orl
ret
in
and
adcb
or
pop
shrb
cwtl
adc
push
test
ret
add
push
outsl
lds
pop
xchg
mov
mov
fwait
xchg
clc
shll
and
or
xchg
arpl
push
scas
jp
in
mov
nop
xor
aam
xchg
push
mov
sub
and
mov
mov
xor
mov
xchg
push
negb
xchg
gs
sub
adc
fisubrs
pop
ficompl
std
sub
aam
lea
outsl
js
fstpl
jnp
and
and
adc
es
xor
negl
adc
dec
sti
lahf
jmp
clc
add
jg
dec
push
add
sbb
dec
push
out
aad
dec
inc
cmpsl
adc
add
add
add
out
inc
and
leave
in
inc
lock
jmp
adc
push
insl
in
psraw
lret
aas
lods
add
push
sbb
sub
ljmp
shl
sbb
xor
push
jmp
mov
repnz
xchg
adc
mov
mov
jmp
pop
pushf
pop
push
cli
pop
dec
lock
shr
in
jl
and
outsb
cmc
imul
orb
imul
sarb
insl
cmp
adc
loopne
cmp
adc
insl
cmp
je
into
sub
enter
leave
rcrb
mov
add
push
pop
mov
psubusw
xchg
jns
add
les
sbb
xor
mov
ljmp
xor
outsb
repnz
sub
scas
mov
data16
xchg
push
mov
mov
xchg
add
xchg
mov
xchg
jns
enter
stos
add
push
mov
or
mov
add
add
add
adc
sub
leave
ss
dec
sub
insb
js
sub
mov
mov
mov
inc
inc
pop
jmp
bound
cbtw
in
push
movsb
jbe
inc
mov
jp,pn
mov
fnstsw
jnp
mov
or
dec
stos
movsb
int
addr16
push
addr16
xor
jne
and
mov
shl
test
push
pop
pop
filds
gs
ds
mov
adc
cld
outsb
out
or
mov
push
cmp
lret
sbb
mov
insb
addr16
and
test
popf
and
or
lea
sub
in
ret
and
pop
jo
xchg
rolb
cld
iret
jmp
sti
pop
scas
divl
push
subb
out
lea
cmpsl
mov
idivl
call
insl
in
or
ja
sbb
sbb
add
mov
ja
jg
xchg
orl
lcall
add
mov
imul
mov
in
sbb
out
in
in
ret
mov
enter
test
data16
addr16
in
inc
adc
push
xchg
push
xor
jmp
ja
inc
arpl
xor
iret
fbstp
adc
dec
into
jne
push
popf
dec
cs
pop
push
fistpll
xor
pusha
inc
dec
mov
daa
loop
push
sbb
lcall
mov
iret
mov
sbb
or
sub
push
pop
lcall
sbb
sbb
push
jge
inc
dec
sti
cmp
test
xor
push
test
leave
jle
adc
shll
jnp
cmp
repz
cmp
sub
lcall
jl
adc
pop
jo
movsl
jle
xchg
push
pop
xorb
pop
sub
mov
and
inc
add
pop
roll
jl
test
sbb
and
dec
lret
jmp
imul
aaa
je
pop
punpckldq
add
add
add
xchg
cltd
xchg
dec
jp
xor
lahf
scas
or
adc
cmpsl
adc
sub
xor
mov
popa
mov
mov
adc
rorl
insb
inc
pop
movsl
adc
rcl
mov
sub
dec
xchg
sub
push
push
and
rol
mov
clc
mov
push
cmp
xlat
ja
les
jnp
or
les
xchg
inc
mov
cmc
clc
mov
int3
xchg
inc
lods
arpl
inc
and
mov
jo
push
or
je
or
pop
pop
inc
cwtl
pushf
ds
popa
sub
pop
adc
xor
arpl
loop
mov
sub
aad
in
sbb
out
mov
xchg
xchg
fdivrl
mov
or
mov
or
lret
cmp
or
dec
mov
adc
scas
dec
inc
test
mov
inc
in
pop
rolb
shll
cmpsl
sbb
hlt
adc
add
lds
cmc
cwtl
xchg
push
sub
ss
addr16
add
add
add
shl
inc
call
add
fldl
addr16
pop
mov
xchg
sbb
jge
xlat
in
push
push
push
fsincos
jp
mov
fildl
inc
popa
cld
popa
icebp
out
stc
es
std
mov
xor
leave
lret
std
aas
mov
ficomps
mov
repz
xor
pop
in
arpl
sub
cmp
lock
sub
jne
mov
or
push
pop
pop
xor
jecxz
cmp
mov
int
push
and
mov
ss
les
xchg
pop
mov
sbb
jb
mov
xchg
imul
add
movsl
rorl
mov
or
sub
hlt
leave
jb
fildll
jnp
in
pop
and
scas
jne
jg
rolb
xchg
sub
mov
incb
sub
adc
movb
push
int
imul
bound
sub
jns
xor
jg
mov
add
add
add
sarl
jae
movhps
cmpsl
insl
mov
repz
xlat
ds
iret
or
jp
dec
cli
xchg
aas
fwait
xchg
out
mov
sbb
xchg
test
gs
mov
xchg
js
and
jne
or
dec
scas
nop
aas
rol
fistpl
add
mov
pop
movsb
out
inc
dec
or
mov
sub
mov
imul
imul
and
xchg
xor
jnp
pop
xchg
cmp
mov
pushl
jns
leave
outsl
enter
data16
push
daa
lcall
xlat
jne
push
push
lock
xor
lods
dec
loop
cmp
cmp
cmpsl
add
xchg
and
dec
stos
sbb
iret
mov
in
cmp
xchg
dec
aad
clc
xchg
mov
xchg
xor
mov
xchg
dec
test
cmpsb
or
add
add
ret
jg
decl
rol
in
or
add
add
add
xchg
mov
fcompl
xor
fcomps
and
gs
xor
cmpl
es
lock
fdivp
pop
loop
rcrb
xchg
dec
fistpll
xchg
jo
fwait
pop
xor
rorb
xor
jge
push
shll
adc
mov
je
add
das
jle
and
mov
push
add
das
adc
mov
lds
ds
enter
or
adc
dec
push
cmp
xchg
and
push
mov
cmpsb
adc
ja
jecxz
mov
push
mov
push
imul
test
flds
mov
popa
scas
mov
xchg
in
fdivrs
cltd
cwtl
mov
nop
and
mov
mov
outsb
out
sub
mov
pop
mov
xchg
sub
add
je
gs
and
mov
test
lds
adc
mov
out
aad
sbb
aas
addr16
add
add
add
mov
int3
cmp
movsb
movsb
jmp
pop
sub
pop
je
rcll
lods
cmc
inc
les
popf
scas
movsl
sbb
rorb
imul
push
loope
data16
pop
or
push
mov
and
push
or
push
xor
and
repz
pop
int3
fwait
pop
mov
push
sbb
adc
cmc
imul
xchg
scas
fcmove
push
add
pop
pop
out
in
mov
jg
push
push
mov
negb
mov
mov
nop
int
add
push
xchg
js
jle
sahf
shl
cs
ror
sub
xor
sti
pop
cmp
add
or
add
sti
adc
cmp
cwtl
jb
popf
movsl
pop
daa
add
rol
out
lret
xor
and
or
sub
xor
mov
cwtl
mov
push
and
add
add
hlt
gs
dec
adc
pop
pop
addr16
add
add
add
daa
and
jle
sbb
sub
xorb
cwtl
cmp
popf
jns
adc
cmp
test
loopne
pop
adc
fidivrs
cmpsl
xchg
jmp
mov
les
cwtl
pusha
mov
pop
xchg
jbe
push
adc
lret
mov
das
jge
inc
pop
cwtl
ret
sub
xchg
pop
popa
scas
negb
int
and
xchg
rcr
lea
add
enter
movsb
les
push
mov
imul
iret
ljmp
jns
cmc
in
mov
fcomip
int
sub
jbe
jb
mov
mov
sbb
push
rol
fbstp
jo
shlb
xor
cmp
out
or
mov
or
popa
movsb
sti
iret
lea
shr
mov
addr16
test
sbb
shl
cmp
sbbb
lret
dec
leave
sbbb
fisubrl
dec
sbb
add
add
aas
gs
pop
repnz
dec
add
add
add
sub
dec
scas
in
dec
ret
shr
repz
cmpsb
out
pop
sub
xor
xor
ljmp
cwtl
scas
mov
jge
lret
outsl
inc
jp
mov
clc
int
ss
and
push
mov
push
jne
rcll
push
mov
push
push
vmovntpd
cli
ja
mov
test
fnstcw
xchg
xchg
jne
push
ja
mov
cmp
ss
mov
or
pcmpeqw
cmpsb
leave
int3
stos
out
mov
dec
jp
push
imul
rcrl
and
cltd
push
xchg
cltd
xchg
sub
xchg
xor
lock
fstps
lcall
insb
adc
mov
mov
xchg
scas
icebp
aaa
enter
mov
cltd
rcl
mov
mov
dec
mov
xchg
lahf
int
mov
pop
inc
bound
jg
imul
outsb
mov
out
fisttpll
lock
add
add
add
adc
int3
xchg
inc
cmc
cmp
fnstsw
push
sub
fsubl
mov
xor
test
loop
xor
pop
rorl
iret
sbb
int
cmpb
xchg
fdivl
test
mov
in
or
push
adc
lcall
test
lahf
sbb
sub
js
inc
lea
cs
pop
iret
xlat
icebp
lock
cli
mov
jl
xor
mov
cmp
push
movsl
pop
xor
sbb
or
and
in
mov
xor
mov
movntq
out
xlat
sub
and
pop
outsl
je
es
jne
or
test
inc
in
jno
aad
mov
jge
jae
cmp
clc
icebp
push
out
inc
fucomip
xchg
sahf
push
cli
or
stc
je
jge
fwait
mov
pop
dec
or
imul
inc
inc
push
jge
outsb
in
or
sbbl
fildll
mov
ljmp
add
add
add
jb
insl
xchg
mov
icebp
and
fdivrl
popf
jp
mov
add
fisttpl
repnz
dec
mov
mov
scas
sub
or
jmp
mov
push
imul
pop
ljmp
das
aam
jle
sbb
ja
ret
mov
enter
lret
mov
mov
mov
push
dec
xor
aam
xorl
jle
subb
in
stos
cwtl
or
xchg
out
dec
das
clc
imul
fwait
sub
aaa
jne
jbe
loopne
inc
fdivrp
sbb
pop
xchg
xchg
jae
lret
cmp
sahf
sbb
loop
jecxz
sub
sti
mov
daa
mov
push
cmp
lret
in
lret
dec
mov
mov
mov
loopne
iret
adc
inc
aaa
pop
lods
lcall
divl
imul
sbb
cmp
mov
loop
ja
inc
test
les
add
jmp
out
aas
jo
sahf
jb
fisttps
addr16
add
add
add
ss
dec
pop
pop
pop
cwtl
dec
ds
js
sub
mov
test
pusha
test
jne
es
cmc
rorb
std
add
push
inc
fdivs
or
sbb
or
xchg
mov
inc
mov
add
sub
lds
std
sub
lock
jmp
cltd
dec
inc
rorb
sbb
out
dec
lds
cmp
stos
test
pushf
mov
adc
mov
rorb
out
xor
movsb
sub
sub
mov
cs
push
xor
sbb
or
shrl
lock
and
mov
insl
iret
out
xchg
mov
cmp
sbbl
xor
testl
mov
test
cmp
imul
out
mov
mov
or
jnp
push
add
add
add
push
xchg
enter
mov
mov
shrb
test
pushf
dec
cmpsl
adc
arpl
rcrl
adc
repnz
xlat
in
or
push
push
js
inc
adc
shll
inc
ficoml
inc
pop
test
outsl
add
sbb
mov
push
sbb
and
mov
dec
push
nop
out
dec
loop
push
fmull
shrl
cmp
jae
fs
les
adc
or
mov
adc
rorb
push
or
inc
push
rorl
stos
lds
fs
or
movsl
dec
xchg
es
dec
push
imul
out
arpl
push
mov
loopne
adc
mov
push
push
sub
mov
call
shrb
mov
or
and
fiadds
fistpll
add
add
add
dec
stc
mov
ljmp
addr16
add
add
add
ficoml
into
mov
or
mov
fdivrs
call
scas
cli
jg
push
jle
insb
lahf
mov
or
mov
push
push
mov
add
cmc
or
or
cmp
rcl
int3
jb
xchg
mov
rcl
mov
lcall
sbb
jbe
out
adc
jnp
xchg
inc
in
popf
dec
ret
nop
lea
divl
bound
xor
hlt
ds
lret
cmc
lcall
neg
fwait
loope
jle
jecxz
cltd
jmp
rolb
cli
fs
jmp
fwait
rcll
dec
sarb
int3
les
movsb
in
sub
push
mov
addl
loope
xlat
and
lods
addb
pop
sbb
pop
shr
in
leave
inc
outsl
xor
fs
dec
sbb
or
inc
fs
ljmp
add
add
jg
cld
lcall
dec
addr16
add
add
add
aad
sub
push
jns
jae
sti
testb
xchg
fists
pop
add
movsb
imul
cmpsl
imul
pop
inc
push
jp
xor
test
roll
xchg
fiaddl
xchg
sbb
mov
mov
jnp
sti
push
xchg
push
ret
mov
mov
mov
adc
sub
mov
jne
pop
push
fsubp
and
adc
movsb
fnstcw
lea
imul
and
mov
jp
mov
out
addr16
adc
dec
je
jne
push
mov
sarl
xlat
lcall
mov
pop
in
jae
push
xchg
js
mov
add
jge
lcall
cmp
xor
dec
push
and
andl
sub
push
jge
mov
mov
pop
sbb
aaa
dec
leave
xor
lea
pop
js
les
mov
cmp
mov
xchg
mov
pop
add
jmp
add
add
add
xor
stos
icebp
mov
and
cld
xchg
lock
out
and
dec
sbb
mov
repnz
ret
push
int3
xchg
pop
or
insl
xchg
mov
and
movsb
and
scas
fstps
mov
xchg
dec
push
fldl
loope
pop
mov
dec
pop
and
inc
xor
lods
movsl
test
cmpsl
addr16
enter
and
iret
fistl
andl
in
fldcw
mov
cltd
aad
cmc
dec
and
or
jge
hlt
dec
lods
fstl
or
mov
pop
xchg
inc
mov
fdivr
jno
js
push
adc
cmp
and
ret
rorb
call
les
lret
jge
loopne
sub
cmp
pop
popf
shr
loop
sbb
cmp
lock
loope
push
add
movsb
xchg
rolb
xor
mov
rolb
add
or
mov
and
adc
addr16
add
add
add
push
testl
sbb
adc
adc
mov
cmpsb
daa
add
push
stos
stos
js
cmp
or
xor
fcompl
inc
dec
jle
push
cmc
cmp
dec
loope
insl
jmp
or
and
xchg
inc
push
je
shll
bnd
push
adc
dec
add
adcb
ljmp
outsl
sbb
mov
mov
and
jne
ljmp
add
adc
insl
cmp
pop
fldl
test
pushf
push
cmc
pop
nop
or
mov
insb
pop
cli
pop
les
popf
mov
push
mov
in
lret
mov
pusha
lahf
icebp
pop
mov
add
sbb
mov
xchg
push
popf
dec
pop
out
outsb
pop
or
int
or
dec
scas
jb
mov
mov
and
mov
xchg
pop
xor
push
rolb
add
add
sub
cmp
ret
or
pop
std
fcmovu
addr16
add
add
add
out
xchg
loopne
mov
in
jecxz
push
jmp
outsb
push
je
arpl
out
jne
movsb
adcl
cli
stos
loope
adc
ficoms
sub
mov
xor
addb
shlb
out
sub
adc
sub
cmpb
cmp
mov
sbb
mov
hlt
dec
nop
popa
jmp
mov
rcrb
adc
push
sbb
clc
inc
cld
or
jecxz
pop
pushf
fwait
xor
sbb
sbbb
xchg
adc
xor
mov
jb
lret
push
mov
cmp
add
push
stos
or
fimull
cmpsb
lret
inc
mov
pop
cmp
repnz
add
inc
mov
mov
sbb
pop
or
sbb
push
push
mov
sbb
mov
lods
push
or
push
shll
out
pop
pop
pushf
push
push
push
add
add
add
mov
and
push
adc
mov
mov
jle
xor
mov
and
shl
lea
addr16
xchg
push
push
jbe
xchg
lcall
sub
je
clc
movsb
aaa
mov
cmp
mov
pop
cmp
cld
or
mulb
or
cmc
adc
loope
sbb
aam
arpl
test
pop
dec
jle
add
and
outsb
xor
aas
jne
dec
mov
mov
lods
inc
mov
xor
add
adc
shll
push
adc
filds
lods
imul
mov
jmp
inc
movsb
adc
inc
push
and
cs
cmp
push
out
in
inc
push
loop
mov
in
pop
test
pop
aaa
and
mov
shll
test
ret
mov
sbb
insl
aas
xchg
bound
add
out
lcall
hlt
mov
pop
pop
lock
add
add
add
sbbb
mov
call
mov
cwtl
jae
dec
sahf
sub
movb
or
xor
inc
add
add
test
cmpsl
pop
sbb
inc
decl
stos
push
ret
mov
lds
fmuls
mov
and
lods
shll
rorb
jg
pushf
jae
iret
std
mov
add
pop
fpatan
mov
adc
cmp
imul
loope
jge
mov
mov
sar
clc
xor
mov
clc
mov
mov
cmpsl
loop
sbb
lcall
psubq
sbb
push
jne
ss
pop
mov
mov
lahf
gs
mov
fwait
inc
dec
mov
fcoml
mov
in
fsubl
inc
in
sbb
or
xchg
addr16
dec
nop
pusha
sub
clc
mov
aad
jg
jo
and
cmp
pop
bound
imul
or
add
pop
add
add
add
and
xlat
jns
inc
push
xor
lods
mov
nop
pop
adc
mov
ss
adc
bound
sbbb
sar
lret
ljmp
data16
int3
add
mov
jmp
loop
test
das
mov
xor
outsl
mov
inc
mov
addr16
cmp
dec
push
adc
xchg
jmp
sbb
sti
leave
pop
inc
jg
testl
xchg
aam
outsl
jmp
in
nop
out
daa
jno
push
aaa
inc
fiaddl
add
mov
sub
dec
lcall
cmp
mov
test
out
lret
xchg
in
imul
insb
inc
out
out
xor
imul
push
adcl
push
fdiv
jns
mov
loop
xchg
inc
fwait
sub
sub
pop
pop
and
mov
clc
bsf
add
jae
fwait
cmp
stos
sarb
addr16
add
add
add
mov
xchg
push
mov
outsb
push
and
mov
cmp
or
xor
sahf
push
sahf
fwait
add
icebp
popa
add
pop
sbb
out
push
sbb
lret
icebp
xor
mov
push
pop
lock
cli
arpl
hlt
or
mov
dec
or
mov
insl
pop
jmp
out
icebp
lock
into
in
cld
aad
sbb
cmpsl
int
or
iret
mov
and
nop
push
in
mov
mov
aaa
pop
loope
nop
adc
jne
mov
mov
push
add
mov
aam
les
test
add
aaa
scas
nop
loop
outsb
and
cli
jp
mov
mov
xchg
inc
jecxz
inc
ljmp
sar
rolb
push
pop
loop
je
add
test
lods
fimull
lahf
pop
inc
push
clc
mov
and
hlt
jl
addr16
addr16
add
add
add
sbb
jle
push
popa
ja
out
cltd
jns
repnz
lea
cltd
add
mov
cli
ja
push
lret
dec
mov
lret
lods
jle
cmp
push
je
cmp
xor
mov
sub
movsb
repnz
adc
iret
jmp
add
cmp
fsubl
pop
mov
and
mov
mov
mov
aaa
fwait
or
xchg
dec
test
sub
ret
out
sub
pop
and
imul
xchg
aam
adc
sbb
test
jle
shrl
pop
jmp
jns
fildll
adcl
enter
sbb
stos
out
cwtl
popf
ja
aam
mov
ds
repnz
inc
lret
adc
xor
sbb
sbb
outsl
mov
ret
lcall
rcll
scas
xchg
push
adc
out
mov
adc
jmp
add
add
dec
sub
xchg
xchg
xor
outsl
es
xor
sahf
sub
pop
push
shll
lahf
sbb
lret
mov
sbb
faddl
push
es
lret
xor
repz
int
cmpl
or
jle
sub
js
nop
sahf
mov
xor
inc
inc
in
dec
loop
or
scas
lret
stos
or
or
fwait
cmp
jbe
mov
pop
cmp
inc
adc
cmp
cmp
cmpsl
mov
insb
pop
enter
mov
mov
daa
xchg
and
and
sti
lcall
in
cmc
cmp
dec
push
pop
adc
mov
imul
insl
xorl
iret
out
leave
inc
gs
cs
scas
cmpsl
orl
push
ljmp
push
stc
out
fs
orb
xchg
test
or
fdivs
std
xor
into
addr16
add
add
add
add
sbb
jp
adc
in
xor
dec
or
jo
shl
ja
jl
ds
mov
add
inc
call
outsl
test
pop
xorl
jle
mov
leave
mov
movsl
fisttpl
cmp
les
sbb
add
xor
lock
popf
fnsave
enter
dec
adc
stos
xchg
mov
push
xchg
dec
inc
mov
js
das
ja
scas
push
jne
sarl
pop
movsl
ss
inc
imul
xchg
add
sbb
push
je
inc
cli
or
ss
loopne
lods
push
std
shrb
xchg
fmuls
sbb
push
mov
mov
std
clc
add
mov
add
pop
sub
mov
and
push
mov
and
push
imul
mov
sbb
add
add
mov
pusha
out
sti
int
pop
add
add
add
sti
mov
lds
cmpsb
lret
aas
xor
cmpsb
lcall
subb
adc
cmp
sbb
sub
mov
push
xchg
inc
dec
mov
cmp
cmpsb
adc
jbe
jg
pop
aad
stos
call
xor
jns
into
mov
xchg
mov
je,pn
pushf
dec
loop
cmp
mov
js
sub
fsubp
or
add
out
jbe
push
repz
jl
popa
mov
mov
cli
xchg
in
jae
js
call
add
lock
lds
clc
andb
xor
outsl
in
mov
ret
adc
mov
cli
and
mov
insl
push
lret
xor
rcr
push
popa
xor
xchg
inc
push
imul
repz
xor
repnz
push
icebp
jle
dec
in
pop
bound
mov
add
fsubl
mov
ja
mov
je
mov
pop
add
add
add
aam
inc
into
movsl
mov
ret
vmulps
test
push
mov
add
sahf
movsl
mov
scas
xchg
imul
jbe
sbb
mov
out
nop
fstl
add
sub
mov
aad
adc
xchg
imul
out
inc
sub
mov
or
jecxz
js
add
sbb
xchg
push
ds
mov
inc
sahf
xchg
das
fucomp
add
test
clc
or
ss
pop
dec
shl
fiaddl
cmp
xorb
idivb
adc
int3
jge
add
xor
out
inc
rcrl
xchg
xchg
cmovs
add
inc
pop
cs
sahf
mov
test
nop
dec
mov
fnsave
arpl
add
fdivs
nop
gs
addr16
sbb
cmpl
movl
mov
or
mov
fbstp
scas
adc
lahf
xlat
out
cld
mov
pop
add
add
add
xlat
and
shlb
dec
mov
pop
fwait
out
lret
xorb
mov
or
jb
out
cmc
sbb
jl
data16
stos
dec
cmpsl
cli
sbb
lcall
or
push
insl
cltd
std
push
dec
inc
dec
push
push
and
xor
dec
je
or
and
sarl
add
daa
lea
xchg
mov
cld
adc
and
out
std
dec
adc
adc
ss
and
imul
leave
mov
movl
shll
sbb
pop
call
out
stc
fisttpl
and
loope
and
or
mov
outsl
cld
movsl
push
push
jns
int3
mov
push
movsb
and
add
pop
enter
xor
xor
popa
movsl
hlt
std
loopne
mov
lea
inc
jge
mov
and
lods
dec
jo
mov
mov
in
lahf
xchg
into
addr16
add
add
add
into
jnp
cld
jns
pop
push
add
shrb
sub
jne
lcall
fcoms
lahf
dec
dec
call
sub
push
push
sub
jle
cwtl
dec
daa
sub
or
cmpb
les
jnp
adc
jne
mov
addr16
cwtl
data16
rol
pop
and
and
popf
in
or
mov
into
lcall
sbb
dec
cli
fnsetpm(287
lahf
cmp
mov
cmp
mov
fisubs
adc
std
int3
insl
sbb
dec
push
inc
cmc
adc
dec
out
or
mov
sub
sbb
shll
mov
icebp
pop
stos
shlb
scas
ljmp
jle
int3
outsl
ja
cmp
scas
lret
push
jnp
loopne
pop
lret
lock
push
mov
mov
cmpsb
aas
adc
popa
in
push
in
mov
pop
or
inc
xor
mov
out
into
push
push
inc
lahf
mov
addr16
add
add
add
mov
and
fidivs
lock
popf
adc
icebp
lds
ret
mov
hlt
mov
imul
pop
sub
push
arpl
jg
xor
xor
push
add
jg
xchg
ljmp
cltd
shlb
mov
fwait
iret
mov
nop
idivb
inc
push
aad
idiv
lcall
fwait
js
add
dec
mov
add
xor
mov
mov
adcb
add
ss
addb
sarb
inc
jecxz
push
pop
fs
lds
sbb
sbb
test
sahf
push
inc
je
std
add
mov
dec
inc
aam
fdivs
push
dec
and
aas
hlt
call
std
mov
movl
dec
cld
mov
mov
jg
popa
adc
scas
add
add
add
xchg
inc
shl
xlat
mov
jg
or
bound
add
add
add
add
push
adc
pop
mov
mov
sub
inc
sub
shrb
ljmp
out
imul
sbb
adc
pusha
xchg
int3
pop
test
mov
insb
nop
popf
jl
or
divl
xchg
inc
push
xchg
jp
in
cmp
jp
adc
stos
sbb
jl
shll
pop
lahf
pop
ret
sub
testb
and
jp
add
mov
imul
push
iret
repz
sbb
sbb
repnz
jp
insb
push
mov
sub
sbb
add
xchg
mov
jmp
and
clc
aas
insb
test
pop
loop
das
mov
mov
sete
sbb
xchg
out
outsb
aam
jb
inc
fcmovnbe
dec
lea
jmp
or
call
add
lahf
pop
cmpsl
jne
mov
cld
and
arpl
add
add
add
jge
sbb
jg
ret
dec
setl
or
fs
outsl
push
dec
jle
dec
aam
enter
movsl
mov
lahf
xchg
sbb
xor
adc
xchg
mov
jo
popa
das
pop
jno
sbb
adc
paddsw
pop
sti
sahf
cmp
jno
scas
leave
loopne
out
mov
js
mov
xor
insl
mov
sbb
lds
jb
push
leave
shl
outsb
sbb
test
clc
inc
out
ret
out
sub
out
fimull
lcall
std
stc
in
mov
sahf
aam
xlat
add
xchg
and
les
mov
fildl
or
pop
inc
enter
sbb
aas
and
pop
bound
add
push
add
pushl
dec
fsts
sbb
sub
mov
mov
data16
and
add
add
idiv
jg
sub
les
add
add
add
movsl
mov
mov
push
adc
enter
mov
pop
sar
ljmp
sbb
inc
insb
outsl
arpl
insb
push
adc
jno
fcoms
dec
jno
out
dec
movsl
cmpsl
test
adc
popa
fstpt
repz
lods
int3
or
aad
fnstcw
rcr
adc
pop
dec
mov
jmp
into
xchg
fisttpll
iret
in
stc
push
in
js
ficomps
jae
movsb
das
xchg
pop
add
mov
fistps
mov
les
pop
aas
pop
insl
out
push
mov
adc
jb
es
push
in
and
cmc
stos
xchg
mov
push
shlb
mov
aaa
test
cwtl
fimuls
loop
loopne
add
adc
fdivrp
cs
ds
push
xchg
in
add
rorl
mov
inc
pop
mov
fstps
das
mulb
add
add
add
test
lock
add
outsl
int3
pop
and
pop
and
pop
or
dec
std
xchg
test
mov
mov
xor
hlt
pop
pop
adc
std
mov
sub
inc
mov
cmp
fldcw
pop
jl
ret
lods
pop
push
push
push
xchg
push
dec
psubsb
jp
sbb
ljmp
stos
in
in
adc
je
add
lods
xchg
mov
divl
lahf
inc
adc
call
and
cs
mov
push
jb
push
sbb
imul
ss
dec
adc
jmp
fucomip
add
mov
cmpb
mov
lahf
lock
cwtl
xor
gs
push
cwtl
mov
mov
mov
hlt
fsubp
into
mov
aaa
jge
lret
or
add
xor
or
add
push
int
aad
mov
rolb
stos
mov
cmpsl
imul
xchg
cmc
outsb
pushf
out
xchg
mov
repnz
movsb
jle
arpl
outsl
add
add
add
add
movd
xchg
dec
insl
jne
inc
leave
inc
nop
xlat
pop
or
jne
push
or
inc
sub
jo
or
sub
sub
inc
xchg
jge
mov
mov
hlt
mov
test
cmpsl
sbb
and
imul
mov
or
jl
das
ss
mov
push
mov
mov
cmc
jae
je
inc
popf
xchg
out
popa
addr16
xor
lcall
cmp
ljmp
fnstenv
cmp
daa
sub
xor
jle
test
fucompp
loop
fcomip
test
or
lcall
mov
test
push
leave
or
wbinvd
rcrb
push
add
add
mov
sbb
popa
adc
lret
mov
lea
fldt
sbb
setne
subl
insl
mov
add
add
jmp
sub
cmp
add
add
add
fstps
and
inc
mov
push
mov
cmp
mov
subb
repz
sbb
sbb
js
and
mov
sbb
lock
mov
mov
push
test
imul
add
out
adc
or
ret
xchg
adc
adc
je
into
ficoml
inc
gs
add
shll
js
sbb
pusha
insb
cmpsl
leave
fdivr
int
mov
and
in
sbb
jns
clc
fdivr
push
das
es
loop
jp
aaa
mov
inc
xchg
repz
mov
pop
decb
xorl
push
lods
fstpt
outsl
repnz
das
das
sahf
repnz
sbbb
arpl
xlat
mov
test
jmp
maxps
das
sahf
pusha
xor
push
mov
cld
inc
push
es
popf
push
ja
mov
inc
pop
mov
iret
loop
shll
fnstenv
pop
dec
adc
addr16
add
xlat
and
adc
pop
dec
pop
inc
pop
mov
sub
pop
mov
repnz
outsl
lcall
cmc
ret
mov
pop
test
jg
ret
shlb
cmp
frstor
movsb
fdivrl
fldl
sub
lret
sbb
fsts
mov
dec
add
dec
fadds
push
push
into
mov
roll
cli
cld
xchg
int
add
adc
scas
add
push
hlt
xlat
popa
stos
push
push
cmp
std
mov
adc
out
lods
cmp
mov
js
cmpsl
xor
and
in
cmp
jp
xchg
pop
mov
xor
ret
sbb
jns
mov
bound
aas
xchg
cmp
push
lret
xor
imul
mov
or
ja
dec
cmp
loopne
fstpt
ljmp
xor
aaa
outsl
fs
insb
movsl
cld
je
jbe
jns
sbb
mov
stc
imul
add
cmp
xchg
pop
flds
mov
jbe
scas
dec
pop
cmp
sub
jmp
lea
xor
xchg
dec
mov
xor
data16
push
popa
jle
sbb
and
insl
xchg
jecxz
rorl
rorb
cld
sbb
pop
cltd
cmp
mov
mov
lahf
jne
lcall
sub
lods
adc
hlt
fs
cmp
ljmp
mov
mov
rorb
and
dec
pop
mov
int3
xlat
andl
loop
mov
add
mov
mov
jnp
and
mov
cmp
mov
dec
or
lods
icebp
sbb
outsl
notb
push
or
lcall
out
mov
cmp
test
adc
sub
movsl
imul
ljmp
repz
xchg
cmp
inc
adc
loop
pop
push
cltd
jmp
fildl
or
push
add
add
add
inc
shlb
faddp
ret
mov
mov
addps
and
in
jmp
jecxz
and
cmp
jo
add
xchg
lcall
ret
xor
mov
add
mov
repz
ljmp
or
stos
cmp
cwtl
xor
or
and
stc
adc
int3
mov
add
nop
sub
mov
cmp
in
xchg
sbb
jl
pop
mov
lods
xor
lret
fsubrp
or
and
stos
push
dec
lds
rol
in
mov
or
push
imul
adcb
repnz
mov
mov
stos
cmp
and
ljmp
push
call
pop
xor
les
sub
inc
and
unpcklps
scas
mov
fildl
add
add
push
jg
dec
xchg
dec
inc
inc
push
pop
imul
add
add
movsl
ja
inc
add
clc
add
fucomi
sub
out
das
mov
pop
mov
adc
pop
cli
ljmp
cmpsb
sbb
jl
and
adcl
sbb
sub
adc
sti
pop
test
mov
pop
jbe
xlat
xchg
pushf
push
inc
mov
nop
movsl
insl
sub
rorb
cmp
stos
adc
xor
cli
cmpsb
push
fidivrl
and
pop
cs
dec
shlb
loope
dec
adc
roll
loopne
fsubl
inc
arpl
stos
xor
inc
jl
dec
repz
add
daa
pop
test
lods
dec
add
paddb
sbb
pop
xor
cmp
std
push
mov
push
xor
test
in
mov
jbe
mov
test
movsl
xlat
ret
lds
cmp
ficoml
jne
loope
push
xor
inc
or
mov
inc
mov
adc
iret
mov
fucomip
push
insb
xor
scas
xchg
das
mov
add
add
push
iret
repz
jne
pop
je
sub
cmp
mov
push
data16
std
pop
add
cli
outsb
andl
loop
push
jnp
jae
fbld
add
movsb
sbb
inc
push
loop
scas
cli
mov
sub
imul
mov
aam
mov
js
mov
movsl
or
inc
mov
pop
nop
mov
stc
push
mov
pop
sarl
mov
nop
insl
in
push
sub
into
jge
push
mov
mov
ss
cmpsb
fldt
ljmp
repnz
push
xor
sahf
inc
adc
fisttpl
pop
jae
xor
add
in
cmpsl
pop
cmpsl
clc
cmp
push
and
inc
cmp
and
fimull
cmp
adc
xchg
pop
xlat
mov
mov
mov
cwtl
dec
pop
jmp
pop
fwait
mov
cmpsl
sbb
push
cmp
sarl
sbb
add
dec
out
iret
jmp
aas
in
push
data16
add
add
add
gs
add
sub
mov
icebp
fnstsw
das
adc
jne
and
ljmp
dec
mov
sbb
and
cli
rcl
fldcw
or
jl
push
outsl
sarl
push
pop
adc
sbbl
les
stos
adc
enter
sbb
inc
xlat
jo
repz
or
ja
repz
nop
sub
idivl
insb
roll
mov
push
imul
mov
rep
jecxz
aad
add
adc
lds
ljmp
adc
adc
lret
in
jge
in
repz
data16
pushf
aam
jecxz
daa
hlt
and
popf
pop
fstl
ds
mov
add
in
clc
adc
dec
stos
adc
or
xorl
fsubs
in
jo
leave
cmpsl
ja
mov
ffree
fmulp
fcompl
mov
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
ljmp
add
add
inc
fdivs
or
jb
xchg
imul
fmull
loope
pop
lock
jnp
or
cld
or
push
jno
pop
into
adcb
add
clc
daa
mov
push
xchg
xchg
lods
dec
fidivl
fwait
pop
fwait
aaa
add
mov
push
cmpsl
outsb
pop
leave
mov
mov
or
mov
cmp
dec
xchg
or
xchg
mov
adc
sbb
leave
pop
enter
cli
sbb
inc
push
dec
adc
xor
inc
repnz
notb
pusha
aaa
int
or
hlt
sbb
xlat
arpl
sbb
sahf
fucom
fs
inc
xchg
jmp
decb
mov
std
cmc
movsl
mov
in
xor
push
mov
jg
gs
jg
pop
mov
mov
mov
dec
call
xchg
or
cld
aaa
cmp
add
mov
cmpb
mov
fisttps
jp
js
mov
cmp
add
add
neg
std
sub
dec
or
das
popa
outsl
add
add
add
loope
or
daa
ja
cmpsl
xor
cmp
sub
icebp
or
repz
jp
shlb
faddl
ret
leave
mov
and
sub
and
maxps
les
cs
rcr
pushl
mov
lahf
xchg
das
jge
push
push
idivb
pop
dec
out
inc
or
push
cwtl
aam
add
inc
inc
sbb
scas
mov
movsb
mov
pop
ljmp
mov
fwait
shl
stos
in
dec
cwtl
and
mov
cmp
hlt
addr16
pushf
jge
cmp
add
add
rcrb
jae
dec
lahf
repz
std
adc
mov
push
sahf
jg
jl
rcrl
jmp
ffree
xchg
out
xlat
xchg
sub
sbb
pusha
cmpsl
xchg
jne
xor
pop
setg
ljmp
ret
lea
adc
add
add
cs
xor
cltd
sub
movsl
addr16
add
add
add
jecxz
and
aam
xchg
popa
lret
sub
ljmp
mov
dec
or
out
mov
out
into
in
mov
and
cmp
idiv
rclb
mov
sbb
aam
rorb
in
lea
push
adc
cmp
mov
mov
push
rcl
jle
nop
lock
out
add
fildll
scas
cmpsb
sahf
add
rorl
fimull
call
xchg
mov
test
jp
mov
sbb
mov
mov
jl
lock
testb
add
mov
in
lcall
lret
jne
data16
lock
out
cmpb
push
roll
mov
xchg
xor
or
pushf
inc
aaa
jo
jns
ljmp
mov
es
in
push
xchg
xor
and
adc
mov
add
add
ja
out
sbb
addr16
add
add
add
push
mov
adcl
pop
mov
adc
inc
push
repz
xor
lret
leave
out
dec
loopne
dec
xor
sbb
pushl
pop
cmp
leave
add
mov
cmpsl
inc
aam
add
sqrtps
sub
jmp
dec
dec
jo
es
push
loop
or
or
aaa
es
imulb
out
dec
mov
in
or
into
sarb
or
fnstcw
std
je
inc
sub
js
cmp
test
dec
mov
repz
call
sub
addr16
xorl
xchg
push
pop
fstl
xchg
movsl
sub
push
fs
inc
shll
inc
ds
sbb
pop
cmp
lcall
dec
push
push
out
xchg
cmc
lds
or
shrl
or
push
and
fs
shl
push
aas
sub
jns
add
add
sub
ja
mov
sbb
jo
jb
add
add
add
leave
popfw
add
jmp
and
imul
fidivs
clc
adc
dec
cmp
xor
shl
in
jl
push
sbb
ret
rcl
scas
je
adc
pop
ret
jg
fcompl
jle
sbb
stos
jmp
aam
scas
push
pop
mov
pop
pop
ja
orb
hlt
cmp
ret
inc
jae
lods
add
mov
mov
cli
mov
les
fadds
pop
adc
jne
and
mov
sub
cmc
das
inc
add
hlt
enter
pop
mov
js
mov
into
pop
mov
dec
movsl
dec
cld
adc
xor
adc
loope
and
lcall
jnp
xchg
xchg
push
aaa
inc
sbb
xchg
jmp
mov
les
xor
iret
dec
cltd
fwait
cmp
or
incl
push
push
int
mov
jnp
outsl
cmpsb
loopne
mov
add
add
add
cmp
push
imul
loop
jp
inc
and
inc
sbb
or
xchg
cmc
and
in
inc
in
sbb
lock
dec
pop
imul
mov
loope
sbb
jnp
cld
and
add
lods
dec
and
shlb
imul
pop
jne
test
inc
adc
js
cltd
inc
insl
adcl
push
stos
cwtl
xorb
mov
inc
mov
adc
inc
inc
iret
in
out
lret
fs
stc
push
pusha
ja
adc
xlat
fistpl
pop
jo
movsl
inc
lret
addl
cld
push
lea
mov
adc
sahf
sbb
xlat
add
test
push
nop
jecxz
bound
lea
mov
movsl
in
arpl
js
das
sti
int
jns
jb
mov
fldcw
mov
call
leave
movsl
xor
dec
pop
ret
push
xchg
push
mov
cli
xchg
jle
push
je
cwtl
loopne,pn
addr16
add
add
add
bound
jg
repnz
mov
adc
das
repnz
addr16
or
dec
mov
mov
cwtl
mov
sub
imul
imull
sub
and
mov
xchg
mov
push
out
scas
lcall
pop
enter
leave
cmpsb
out
mov
arpl
and
sahf
mov
jb
sbb
mov
or
push
mov
xchg
xor
inc
add
idivb
xor
fs
jb
xchg
mov
std
stos
xchg
mov
inc
cwtl
cli
psrld
mov
mov
cltd
push
into
mov
je
xor
popa
pop
loop
cmp
sbb
lds
dec
cmp
dec
dec
lret
sub
adc
ja
xor
jp
nop
ret
call
mov
or
cli
push
xor
add
add
fwait
jnp
aad
sbb
mov
add
add
add
pushf
inc
hlt
mov
inc
fiaddl
pop
decl
push
inc
push
xchg
nop
push
lods
ror
or
jno
test
repnz
inc
mov
loope
sub
xchg
js
jae
xchg
or
sahf
gs
insl
xchg
jb
mov
hlt
int3
pushl
fdivrl
dec
addr16
xor
mov
out
mov
mov
hlt
push
aaa
mov
jl
daa
or
sbb
fld
aaa
jecxz
mov
mov
jns
adcl
mov
in
dec
xor
shrl
sub
mov
mov
in
jae
mov
xor
aas
repnz
icebp
pop
push
and
iret
cs
test
ss
lcall
flds
lods
dec
leave
nop
push
add
jge
cltd
mov
fwait
dec
xor
mov
lahf
xorl
add
mov
std
mov
sub
jle
addr16
add
add
add
adc
in
mov
xchg
ljmp
mov
out
sti
int
clc
mov
cmpsl
add
imul
and
pop
cmp
cmp
mov
jecxz
jnp
sub
mov
or
and
popf
fs
pop
cwtl
nop
cmpsl
aad
aam
ret
jnp
xchg
out
and
pushf
xor
fidivrl
cltd
inc
fmuls
inc
cltd
sbb
fucomp
jmp
cld
dec
add
addr16
loope
test
xor
adc
inc
inc
dec
das
out
in
movsb
sbb
jbe
inc
add
add
popa
mov
cmp
adc
sub
push
aam
int3
cmpsb
xchg
dec
bnd
dec
fdivrs
rcll
mov
shrb
hlt
mov
xchg
or
adc
test
jnp
cli
or
rcrb
fcomip
std
loopne
push
leave
imul
xchg
nop
pop
sub
add
add
fstl
lret
mov
addr16
add
add
add
add
mov
jp
xchg
fisubs
cltd
arpl
ffreep
fstpt
mov
fstl
dec
push
sbb
add
lock
mov
call
push
lret
or
pop
fcoms
jnp
and
jmp
sbb
int3
dec
jl
pushf
xchg
pop
es
cmp
jne
lret
insl
jno
add
dec
xlat
xchg
pop
hlt
lret
xor
jno
lds
ret
cli
or
adc
cmp
lock
aam
aam
out
jp
imul
adc
jecxz
rorb
in
les
push
das
push
out
je
inc
xchg
loopne
adc
data16
lret
cmpsl
rcrl
pop
push
xchg
fmul
mov
movsb
sub
gs
lret
mov
jecxz
jp
or
gs
aam
mov
out
das
iret
xlat
int3
inc
in
mov
mov
out
sub
sbb
js
add
add
add
push
sahf
xchg
add
clc
mov
sbb
leave
mov
lret
mov
rorl
sub
daa
test
lds
sahf
adc
and
or
jne
inc
xor
loope
test
mov
sbb
jmp
mov
cltd
jne
addl
hlt
mov
jecxz
mov
sub
cs
inc
inc
dec
push
mov
inc
adcb
xchg
outsl
add
inc
daa
out
jbe
mov
cmp
loop
mov
das
sbb
add
mov
fistpll
xchg
mov
insb
jmp
clc
pop
dec
mov
dec
xchg
stc
cmp
fdivrl
mov
lock
and
pop
and
std
jae
or
add
iret
loopne
lock
mov
clc
inc
cli
pop
dec
xlat
or
mull
mov
add
divl
in
sub
addr16
add
add
add
mov
or
andb
cmp
shlb
mov
imull
je
shlb
push
lods
dec
or
sarb
nop
jle
outsl
push
jle
ret
shll
les
push
jns
push
hlt
sbb
jmp
push
jb
mov
sbb
cmpsl
stos
aaa
add
ljmp
scas
jno
dec
gs
popf
insb
cld
xchg
cmc
push
mov
jbe
scas
scas
or
cld
mov
out
sub
and
fcoml
xor
lahf
fcomps
rcll
dec
xlat
mov
or
xchg
fsts
sub
aaa
inc
in
fst
sbbl
or
jge
xchg
jnp
xchg
or
movsb
mov
mov
jne
nop
or
pusha
adc
add
cmp
sbb
mov
mov
cmc
sbb
dec
nop
fcoms
paddb
fldt
jns
and
clc
fisubs
mov
mov
and
jp
add
add
add
xchg
add
mov
sbb
fadd
jae
mov
sti
gs
int3
dec
sub
inc
jmp
into
pop
loope
daa
or
sti
fsubrs
jne
push
push
pushf
jae
add
decl
xor
push
mov
jbe
mov
adc
or
outsl
lcall
adc
push
fimuls
or
mov
adc
movsb
or
lods
push
fstps
test
sbb
jl
imulb
xlat
xchg
std
cmc
pop
aaa
jmp
pusha
testl
stc
mov
vpperm
mov
clc
mov
or
push
mov
rcll
xor
inc
jnp
bound
push
sub
lret
and
ror
lret
ljmp
cmpsb
out
mov
inc
cmp
cld
mov
rol
idivb
rol
test
cmp
jnp
push
in
cmp
add
add
mov
outsl
jne
ljmp
xor
add
add
add
shlb
fcoms
sbbb
cmpsl
mov
cwtl
adc
pop
cmp
or
in
xlat
es
fsub
mov
mov
add
or
cmp
testl
push
rorb
xchg
das
mov
out
and
jbe
add
rcll
dec
lcall
bound
mov
mov
adc
sti
mov
cmp
loope
mov
pusha
or
jo
cltd
xchg
sub
jns
mov
inc
push
and
cmc
lds
ljmp
aad
lret
sbb
mov
jmp
lods
inc
loopne
pop
or
mov
mov
mov
jge
xchg
push
mov
lods
adc
push
push
lock
jae
test
hlt
cmp
jmp
and
adc
mov
push
orl
dec
icebp
jae
orb
ljmp
jl
push
mov
jl
add
add
add
ss
addr16
hlt
cld
jmp
mov
add
xchg
or
in
fcoms
imul
enter
mov
mov
loopne
and
pop
push
xor
push
stos
or
mov
cmp
sub
lods
cmp
mov
js
cmc
and
xchg
std
jg
scas
or
mov
popa
xor
movsb
scas
dec
adc
lock
push
mov
lret
mov
or
and
jae
lds
mov
arpl
sbb
jae
push
bound
call
andl
lock
adc
loop
dec
jecxz
jmp
mov
dec
fcom
mov
cmpl
jle
dec
inc
pop
mov
lods
aas
cld
loope
sbb
xchg
cmpb
fdivrs
pop
push
xor
pusha
es
xlat
and
sub
add
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
add
xor
mov
mov
scas
push
push
rcrl
xor
aas
addl
pop
cmpsl
pop
ja
aam
mov
test
out
xchg
mov
push
fdivrs
sub
mov
add
lret
sbb
imul
das
out
leave
orb
jge
xchg
inc
in
sub
inc
pop
lcall
xchg
movsl
cmpl
rcrb
and
adcl
mov
stc
gs
fcmovu
test
jb
mov
inc
icebp
movsb
xchg
dec
cmp
and
fcmovnu
sbb
daa
lret
ficomps
xor
inc
xchg
aas
jo
add
enter
popf
out
pop
cmp
movsb
test
std
mov
sar
dec
filds
iret
rclb
xchg
mov
mov
aaa
iret
or
mov
xchg
jge
hlt
es
add
add
cmpsb
push
sbb
test
jle
add
add
add
cmpsb
xor
xor
mov
sbbl
sti
mov
inc
ss
cmp
push
fmuls
cmp
push
or
repnz
cmp
adc
aas
cli
shrl
rcrl
adc
repz
test
jne
out
xchg
xorl
lret
test
fdivrs
mov
xor
pop
pop
call
into
lods
xchg
adc
xchg
sbb
sub
inc
mov
cmp
iret
push
sti
xchg
cli
pop
jbe
dec
call
inc
test
add
outsb
inc
incb
aad
divl
mov
cmc
repz
mov
imul
arpl
sbb
fcoml
push
cli
cmc
insl
leave
mov
mov
enter
imul
sti
lret
xorl
ja
mov
add
cmp
cli
mov
scas
cmc
and
add
add
add
pop
jle
ficomps
mov
mov
fdivs
sbb
movsb
mov
jo
andb
leave
sahf
xor
adc
test
pop
and
pusha
pusha
inc
dec
scas
call
push
fwait
enter
in
dec
subb
pop
pop
out
loopne
scas
pop
pop
lods
push
in
iret
push
dec
push
flds
cli
dec
mov
jne
cmc
mov
outsb
or
jb
mulb
sbb
pushl
xchg
inc
push
sub
pop
sbb
ss
inc
mov
clc
fisttpl
or
dec
insb
cmpsb
cmc
gs
out
inc
mov
sub
xchg
mov
fsubl
inc
or
jge
mov
dec
ljmp
or
mov
push
cltd
and
cmp
xchg
cmpsb
push
inc
jge
sub
jmp
loop
int3
sbb
or
scas
push
xchg
std
test
lcall
scas
push
addb
add
add
xchg
mov
test
xchg
sbb
roll
pop
jp
loope
xor
push
mov
xchg
pop
movsb
mov
ret
pushf
mov
push
call
sbb
xchg
jae
mov
dec
push
mov
test
sub
jb
je
or
popf
stos
fistpl
pop
jle
adc
rcrl
jno
js
mov
xor
test
arpl
cmp
cmp
loopne
xor
mov
inc
cwtl
into
fildll
cmpsl
sarl
mov
sub
ret
add
sub
xor
mov
cmp
sub
and
adc
outsl
popf
in
push
mov
and
cmp
jge
adc
repz
xchg
inc
rcrb
orb
lea
ffreep
dec
xorl
pop
out
jbe
xchg
mov
pop
sub
test
iret
shlb
add
add
xchg
xchg
jns
jmp
mov
addl
add
das
test
xchg
stos
cmp
fisttps
cltd
push
or
ds
ss
push
adc
daa
pusha
aaa
icebp
and
test
das
dec
xor
in
jge
push
lods
add
mov
xchg
test
pushf
push
or
jmp
int3
int3
xchg
sbb
fs
pop
or
xchg
imul
sets
in
xlat
fistl
sub
movsl
mov
icebp
add
stos
enter
adc
mov
jmp
push
cs
cmpsb
popa
cs
or
push
fldl
cmp
add
loopne
mov
test
lock
mov
scas
popa
or
fs
insl
and
lahf
inc
ftst
cwtl
add
stos
shrl
xlat
lret
push
adc
stos
into
test
and
adc
sar
imul
scas
lcall
adc
sbb
sbb
fisttpll
addb
add
add
xchg
pop
hlt
pop
lods
xchg
push
pop
sub
cwtl
push
inc
test
pop
cmc
cli
arpl
jno
iret
dec
out
lret
fildll
cmp
nop
sahf
mov
push
pop
jnp
push
test
popf
cmp
inc
dec
xor
push
xor
push
loop
mov
add
leave
push
and
sbb
mov
ret
cs
sbb
sbbb
subl
add
adc
push
lcall
call
dec
and
add
xchg
cmp
dec
sub
adc
loop
dec
clc
jle
ja
imul
sbbl
inc
lret
in
push
mov
inc
out
xchg
and
lds
cmc
push
aam
loop
mov
sub
jge
sahf
cld
aam
out
loopne
sub
aaa
inc
push
jmp
int
push
or
loop
and
mov
lahf
fldenv
mov
adc
das
xor
jl
cs
idiv
jne
iret
imul
addl
add
add
out
test
gs
ret
rorb
xchg
cs
xchg
lods
fistl
movsb
ret
pop
add
mov
loopne
add
cli
ficomps
cs
enter
ss
insl
ljmp
sbb
xchg
mov
movsb
popa
sarb
sahf
sub
popa
xorl
pop
test
lds
or
addr16
lock
adc
test
sbb
inc
in
cmp
add
fstps
out
jne
dec
fmuls
inc
stc
std
inc
jecxz
in
sbb
jno
and
pusha
pop
mov
in
rcll
in
pop
sub
xor
push
jg
cltd
adc
xchg
pusha
mov
mov
dec
add
or
stos
loop
mov
movsb
rcl
sub
push
bound
inc
jle
cmp
cmpsl
cmp
push
sbb
int
stos
pop
xchg
xchg
xchg
pushl
sub
iret
add
add
add
add
test
or
pop
pop
lods
sbb
cmp
out
rcl
lods
lods
fcmovbe
nop
aaa
fists
movsb
jge
xchg
pop
stc
cltd
mov
push
xor
jo
push
sbb
sbb
and
xchg
data16
sbb
sysret
xchg
lret
xorl
lret
push
pop
fwait
aas
pop
hlt
sbb
mov
test
jne
aad
ds
setp
insb
dec
fst
das
add
push
mov
daa
lds
outsb
xchg
in
sbb
push
inc
fucomip
xchg
int
std
sub
mov
inc
jo
jp
in
mov
add
and
mov
mov
shrb
das
push
push
mov
xchg
add
mov
jbe
xor
add
push
ja
aad
push
xor
pop
shlb
jnp
and
add
lret
call
lahf
call
lret
out
shrl
mov
jge
std
sti
iret
ss
push
jno
test
test
add
add
add
xrelease
gs
icebp
lds
sbb
or
adcl
push
call
xor
repnz
dec
inc
push
std
or
fildl
lock
and
je
push
ror
sub
popl
ljmp
fstps
andl
adc
fildll
mov
jo
push
dec
into
inc
mov
dec
int
cld
imul
test
ja
and
sub
lret
rolb
pop
aam
fnstcw
fidivrs
xor
aaa
test
pop
push
sbb
ficompl
add
sub
push
xor
jnp
pusha
aaa
mov
push
popa
pop
mov
adc
and
jg
xchg
pop
imul
addr16
mov
adcb
in
sbb
and
sub
add
cmpl
cmc
dec
fcomps
stos
popl
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
fcmovbe
arpl
add
add
add
and
xor
or
testb
sub
into
xchg
aad
mov
xchg
and
xor
filds
dec
repnz
mov
adc
add
daa
fidivs
jno
inc
and
push
test
push
jns
add
inc
push
push
mov
cmp
xchg
rorb
ret
mov
inc
push
mov
int3
sub
test
or
sti
loopne
in
mov
scas
rol
fadd
stc
jmp
add
inc
xor
add
shll
mov
mov
sbb
cmc
fdivrp
xchg
cmp
rcll
aam
cs
inc
push
dec
sahf
inc
sbb
or
jmp
cmp
lahf
shlb
or
ret
dec
jl
or
cmc
sub
pop
iret
inc
add
mov
inc
sub
or
loop
lods
mov
add
add
mov
mov
mov
pop
lods
stos
xchg
add
add
add
rcr
push
pcmpeqd
jge
mov
aaa
push
xchg
roll
add
lods
lock
sub
mov
out
cmp
pop
aam
inc
insl
or
or
add
rcrb
and
arpl
xchg
or
jnp
out
jnp
inc
push
faddl
imul
xchg
sbb
push
out
jnp
jecxz
rclb
mov
lret
mov
push
lods
inc
cld
insb
stos
mov
jge
inc
imul
in
in
scas
sbb
xchg
cmp
mov
cmp
dec
lock
adc
shlb
sub
mov
dec
inc
cmp
dec
and
imul
adc
adc
cmp
insb
xor
call
pushf
dec
cli
pop
ja
jo
inc
int
pop
call
imul
mov
jns
fisttps
jl
pop
mov
and
out
ljmp
lock
xchg
jnp
push
mov
add
add
cmp
xor
subl
xchg
add
pop
jno
xchg
test
dec
pop
inc
daa
lcall
jge
into
push
mov
jae
dec
mov
mov
or
add
out
push
pop
inc
aaa
sti
mov
add
dec
push
out
dec
das
sbb
adc
push
bound
sub
fwait
dec
mov
unpckhps
cmpsl
das
dec
jnp
sbb
js
mov
and
sbb
push
pop
mov
pushf
aad
dec
mov
mov
sbb
cmp
inc
sbb
jge
mov
movsl
cmp
jno
adc
imul
aaa
lcall
inc
subps
sbb
jp
int
int3
xchg
out
movb
push
sbb
jg
ds
ds
aad
xchg
leave
xlat
xor
and
lods
mov
inc
or
and
xchg
imul
push
jnp
sbb
push
xor
add
add
add
cmc
ja
or
insb
pusha
or
jo
das
sub
mov
movsb
cmpsl
les
aad
sub
leave
xrelease
inc
insb
es
mov
mov
in
hlt
xor
lds
loop
les
cmpsb
js
aaa
cmp
dec
arpl
push
mov
mov
xor
dec
lcall
pop
movsb
repnz
xchg
mov
xchg
xchg
ja
out
mov
and
notl
jnp
ss
mov
mov
pop
subb
loop
jecxz
mov
dec
xor
xor
pop
or
push
loope
in
dec
mov
rcrl
jo
pop
xchg
mov
mov
fwait
arpl
fidivs
mov
cmpsl
sub
xchg
dec
pop
sub
lods
cmc
dec
jne
push
insl
mov
mov
loope
insb
xchg
aas
repnz
sub
cmp
mov
loope
mov
add
add
aas
or
mov
shrb
add
add
add
test
clc
jno
js
pop
jae
rcrb
add
nop
jae
jmp
dec
aad
xchg
xchg
lcall
lods
mov
testb
jns
push
sbb
daa
jae
push
sbb
dec
arpl
mov
cmp
bound
sbb
aaa
test
enter
mov
fldt
fwait
pusha
mov
add
cmp
arpl
dec
xchg
push
stos
dec
cmp
push
rcrl
ss
pop
sbb
aad
sub
push
cmp
jmp
mov
sub
shll
fstpl
mov
rolb
add
cwtl
push
ficomps
sbb
dec
aam
lret
sbb
xchg
push
sbb
jns
xor
push
jmp
pop
xchg
rclb
xor
jmp
cmp
or
push
add
inc
test
xchg
sub
jb
test
pusha
cmp
add
add
push
outsb
fisubs
test
dec
int3
rol
mov
add
add
add
fucomp
leave
mov
sbb
stc
lea
leave
cmp
mov
and
inc
daa
push
outsl
jecxz
or
adc
push
lahf
sbb
fsubr
adc
pop
push
mov
mov
and
pop
ss
scas
mov
cltd
cmpsb
loop
inc
pop
loope
pop
mov
or
ret
cmp
dec
sbb
lret
jmp
sub
mov
fsubrs
dec
mov
js
sbbl
fsts
push
stos
push
xchg
adc
ret
pusha
in
dec
outsb
xchg
dec
add
sub
mov
es
push
loope
dec
xchg
dec
lock
cs
pop
push
mov
inc
por
sbb
loope
mov
dec
mov
pop
out
in
mov
mov
dec
stos
inc
sbb
cmp
push
adc
test
xchg
movsl
mov
std
leave
lret
cmp
mov
jns
and
add
add
add
pop
push
test
test
sbb
add
mov
mov
negl
repnz
pop
push
xor
jno
xchg
or
inc
test
mov
dec
pop
dec
das
mov
dec
mov
add
test
pop
movsb
sbb
ljmp
push
aam
out
shr
roll
ss
fistpl
les
shrb
es
and
mov
lods
subl
adc
push
in
ja
and
sub
cmp
dec
and
push
out
stos
jl
xchg
test
add
mov
jge
cs
lahf
fwait
negl
pop
es
pop
sarl
dec
mull
addb
repnz
std
xor
outsl
mov
mov
ror
pop
cmp
lock
imul
xchg
pop
shlb
loopne
insl
jge
sahf
pop
dec
fnsave
nop
push
push
add
xchg
dec
pusha
outsl
stos
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
out
inc
pmulhuw
add
add
add
mov
outsb
sbb
jno
adc
imul
push
repnz
xor
les
add
xchg
mov
push
and
in
jp
mov
leave
xor
dec
in
inc
xor
add
popl
test
bound
xlat
or
jl
js
adc
pop
inc
dec
and
int
mov
mov
std
mov
hlt
out
outsb
shr
lahf
rcll
jno
sahf
cmp
arpl
scas
mov
les
push
mov
dec
and
fwait
sbb
enter
test
rorl
and
fs
inc
mov
incl
xchg
or
mov
and
xor
test
adc
add
push
stos
jb
shl
stc
add
shlb
rolb
add
add
adc
std
out
ljmp
mov
add
add
add
and
jle
jne
inc
movsl
jo
fistpl
clc
or
add
cmp
or
fs
cmp
call
lods
and
and
inc
add
int
stos
pushf
mov
cld
mov
push
fcoms
pop
xchg
and
lock
mov
clc
lods
cmp
push
es
test
addl
mov
and
daa
xchg
cwtl
xor
fidivl
lock
sahf
push
and
or
hlt
movsb
dec
decb
sbb
xchg
push
pmullw
out
add
iret
mov
rcll
int3
popf
push
lds
pop
mov
stos
dec
mov
cmp
pop
mov
and
cltd
cmc
ja
lods
bound
and
lods
loop
push
push
and
add
mov
adc
or
add
out
add
daa
mov
add
add
mov
icebp
dec
xchg
jae
popl
add
add
add
stos
add
jmp
outsb
fs
divb
sbb
mov
add
add
cli
insb
outsl
adc
into
fwait
mov
ss
and
sub
aam
orb
cmpsb
xchg
jb
jle
mov
fisubl
pop
jmp
lcall
bound
push
inc
dec
inc
lods
sar
arpl
mov
or
insl
push
mov
mov
daa
cmc
fistpl
fldt
aas
movsl
inc
jp
ret
or
iret
xchg
mov
jmp
aad
decb
adc
enter
xor
test
lods
fiadds
pusha
mov
cmp
sarl
jae
sarb
or
mov
data16
scas
ljmp
xchg
jg
dec
js
int
pushl
int3
cmp
push
and
mov
xchg
out
insb
mov
add
mov
testb
add
inc
or
test
fcomps
add
in
addr16
add
add
add
shl
sub
adc
jmp
mov
xor
aad
in
loope
jae
imul
loopne
push
repz
or
rcrl
jne
xor
addr16
insb
fsubrl
push
xchg
jae
gs
scas
push
data16
ret
mov
xlat
mov
jnp
rorl
daa
inc
push
cmp
cld
mov
jle
xrelease
in
daa
sub
das
sub
daa
ds
mov
sbb
pushf
adc
loope
addr16
adc
cmp
outsl
js
inc
cmpsb
pop
fistps
inc
push
imul
ret
lahf
push
test
ljmp
pop
fs
and
add
xorb
pusha
dec
pop
aad
pop
bound
dec
sub
mov
cwtl
jg
xor
mov
outsb
add
inc
and
jo
add
add
ljmp
dec
mov
push
addr16
add
add
add
dec
shll
mov
jno
aam
imul
ret
add
and
and
pushf
aas
or
ljmp
push
icebp
icebp
aam
adc
sub
xor
add
out
lea
fwait
mov
xchg
fsubrs
mov
mov
lds
addl
inc
or
mov
fsubl
out
jo
ret
mov
fidivl
test
xchg
push
adc
test
sbb
push
insb
inc
fldl
lods
sub
mov
jmp
lret
out
inc
clc
push
daa
repnz
hlt
pop
jo
mov
fsubrs
sti
dec
dec
popf
js
daa
mov
test
jae
push
inc
lock
inc
mov
rcrl
movsb
sti
xor
dec
fisubrs
dec
pop
fisubrl
inc
sahf
ret
mov
aaa
shlb
cmc
div
testl
push
add
add
jbe
aaa
rcr
dec
pop
das
loope
mov
xchg
jmp
pushf
out
loop
mov
clc
sbb
push
gs
xchg
mov
popa
mov
inc
lds
rcrl
jg
sub
lock
add
pop
lahf
out
adc
je
push
inc
lock
ds
lret
outsb
lret
stos
jl
mov
or
notb
mov
xor
push
and
mov
fs
and
and
scas
stos
mov
pop
movsb
mov
fiadds
lea
lea
jg
sbbb
pop
jp
out
mov
imul
bound
lcall
mov
mov
rorl
xor
fsubl
hlt
insl
inc
pop
pop
cmpb
sub
mov
jge
push
setne
cmp
xchg
and
scas
push
out
jae
into
aad
add
add
push
sahf
rcr
pop
adcb
std
insl
fs
addr16
add
add
add
in
sti
inc
mov
pop
repnz
adc
mov
mov
pop
cltd
std
sub
call
filds
push
push
sti
xor
sub
cs
jns
in
addr16
lock
jns
daa
lahf
add
xor
addr16
out
insb
ss
sbb
ret
ficomps
ds
sbb
roll
jle
in
dec
insb
jg
in
enter
cld
push
je
mov
andl
cli
dec
adcl
cmp
pusha
sub
cmc
cmpsb
jae
aaa
ret
mov
cmpsb
push
ja
sbb
dec
imull
int3
lea
mov
mov
or
out
dec
dec
push
clc
jge
push
fldl
cmc
pop
mov
sarl
sbb
dec
sbb
insb
lret
imul
adc
dec
scas
sbbb
mov
adc
and
inc
pop
mov
sub
in
stos
pop
ss
pushf
shll
cmpsb
jcxz
fimull
addr16
add
add
add
pop
and
test
in
jae
lret
add
xor
sarl
inc
add
dec
mulb
mov
push
daa
add
jb
mov
jnp
dec
adc
cli
xchg
xchg
fstps
sub
repnz
clc
test
rcl
or
add
int
xchg
fprem
cmp
loop
sbb
cli
mov
xlat
fstpl
cld
or
js
inc
movsl
add
stos
fisubl
bound
add
push
aaa
xchg
negb
mov
into
cmpsl
jno
call
mov
sbb
popa
pop
push
xor
dec
leave
cwtl
jge
adc
pop
xor
and
bound
orb
or
daa
addr16
jbe
xlat
jae
add
pop
sar
cmpsb
cmp
push
popf
xlat
outsb
mov
aaa
outsb
test
mov
pop
es
imul
je
sbb
and
and
mov
into
pop
sbb
add
add
clc
jnp
jg
in
cli
enter
inc
test
xchg
addr16
add
add
add
out
dec
jl
pop
imulb
jp
add
orps
ret
movsb
pop
mov
push
rol
pop
inc
add
inc
xchg
xor
pop
cmc
push
dec
mov
mov
push
enter
fbld
ret
arpl
push
push
mov
lock
xchg
fbstp
or
mov
mov
adc
mov
lods
ds
fstps
aaa
mov
push
adc
push
push
insl
add
dec
jne
add
insb
repz
push
push
jbe
cmp
shll
loopne
sub
or
jns
xor
inc
mov
repnz
mov
and
mov
in
jmp
dec
sub
pop
pop
aam
sbbb
daa
pop
cltd
push
fs
push
test
pop
push
or
pop
mov
fildl
sbb
scas
lret
adc
mov
add
ljmp
cld
gs
mov
addr16
add
add
add
cld
push
shlb
rol
push
fs
dec
pop
inc
lret
xlat
lds
adc
cmc
inc
mov
push
cmp
fcomp
xor
sbb
jb
push
xchg
gs
xor
add
sub
call
scas
xlat
sarb
and
clc
testl
xchg
cli
bound
pop
add
push
in
fs
fisttpl
pop
dec
jle
push
add
cmp
inc
call
inc
cmp
push
mov
adc
jg
call
repnz
test
sahf
jae
push
ljmp
sbb
sbb
das
lret
sbb
das
mov
iret
addb
adc
mov
popf
mov
aad
rorl
fstps
jp
ja
cmc
sbb
mov
xor
inc
mov
mov
xor
mov
jb
rclb
jl
sar
std
jle
pop
popf
scas
jae
mov
addr16
add
add
add
out
mov
mov
lret
pop
jmp
enter
icebp
mov
pop
cli
mov
shll
jecxz
jmp
stos
jne
xchg
pushf
outsl
lcall
inc
mov
in
enter
scas
mov
and
add
xor
shr
cmp
js
jecxz
jne
fdivp
enter
and
sbb
lahf
inc
adc
mov
cmp
mov
subb
and
mov
or
pop
push
jno
xchg
lret
repz
jg
or
xchg
jo
test
loop
loope
mov
xchg
cli
cmpsb
push
loopne
or
mov
pop
mov
cmp
call
divb
add
inc
stos
mov
fnsave
mov
enter
sub
and
xchg
ljmp
mov
icebp
xor
pshufw
inc
push
mov
mov
ja
dec
ret
cmp
cmp
in
shll
pop
addr16
add
add
add
sub
test
jecxz
pusha
dec
mov
repnz
xchg
fucom
sti
testb
loopne
mov
jne
inc
add
push
pop
in
les
scas
lds
adc
push
add
data16
enter
cmp
xor
lret
mov
jecxz
jns
push
sbb
inc
mov
repz
lea
xchg
fcomip
popa
pop
or
mov
fcmovbe
push
pop
push
or
or
fnclex
mov
add
outsl
imul
aam
lock
add
mov
fisubrl
sti
xor
xchg
out
jg
inc
enter
cmp
clc
aad
adc
fistpll
xor
and
add
in
jg
sub
jecxz
lret
lahf
cmc
in
loopne
movb
int
cmpsl
and
push
mov
bound
cmp
xchg
call
imul
mov
pushf
jecxz
xchg
pop
rcrl
inc
fwait
and
popa
mov
xorl
addr16
add
add
add
adc
pop
pop
cmpsl
cmpsl
andl
stos
inc
lock
incl
xor
push
shlb
or
jae
jbe
hlt
outsl
pop
xorb
or
jnp
inc
andb
mov
clc
mov
xor
xchg
xchg
hlt
mov
pop
pop
mov
rcll
into
cmp
pop
mov
pop
mov
rol
xchg
xchg
aad
pop
jl
and
insl
jp
xor
test
data16
aaa
call
cmp
repz
push
add
push
pushf
inc
in
call
ret
sysexit
pop
test
pop
lock
pop
call
inc
mov
and
je
popa
mov
out
imul
xor
pop
jge
and
enter
sti
sbb
stos
and
test
shr
lock
add
push
and
xlat
aas
dec
sbb
or
addr16
cwtl
arpl
or
in
je
push
icebp
adc
mov
insl
and
dec
push
nop
inc
pop
dec
mov
repnz
aaa
movsb
cmp
cwtl
dec
stos
into
in
call
mov
sub
shl
sarb
outsl
in
loop
ja
inc
inc
test
pop
scas
or
stos
fldt
cmp
push
cmp
jns
jge
sbbb
stos
loope
stos
sbb
sahf
lds
in
cmpsl
clc
adc
in
mov
push
mov
cmp
cmpsb
or
mov
sub
push
nop
cmpsl
sbb
mov
out
push
test
movsb
outsb
push
pusha
cmp
je
push
push
dec
inc
lret
pop
jne
inc
xchg
mov
mov
cmp
js
jmp
add
test
jnp
jmp
jns
pop
sub
cltd
data16
mov
popa
or
add
add
mov
mov
jmp
test
lock
add
add
ds
jmp
lock
push
push
sahf
and
test
mov
xlat
pushf
jmp
mov
jno
addr16
rcll
mov
sub
mov
pusha
mov
out
out
test
fcompl
sub
dec
push
cmp
inc
jns
inc
xchg
incb
ja
out
aad
mov
daa
decb
lds
xor
dec
std
and
pop
and
xor
cmp
add
and
jp
mov
sar
lcall
js
stc
inc
arpl
fstl
cld
or
pop
push
dec
mov
mov
data16
jne
js
or
sti
inc
push
mov
ret
sarl
push
and
mov
int
pop
das
mov
pusha
fwait
lahf
arpl
and
mov
into
mov
cmc
inc
sub
jmp
and
lret
pop
adc
or
loop
aad
lods
sbb
add
lret
sbbl
popl
js
addr16
add
add
add
mov
fistl
sbb
out
dec
inc
pop
pushl
inc
push
xor
iret
insb
jg
pop
aad
xlat
and
mov
mov
xchg
dec
repnz
push
lahf
adc
pop
cltd
rcl
pop
sbb
aam
insl
mov
or
rorl
push
das
pop
loop
mov
dec
adc
push
xchg
xchg
ds
mov
pop
cmp
sbb
jb
scas
or
or
adc
push
push
mov
addb
clc
xchg
nop
mov
jbe
loope
repz
ficomps
int3
out
shl
or
xchg
clc
clc
roll
cmc
inc
lahf
fcoms
sbb
pop
test
push
jb
es
inc
jae
leave
ret
sbb
repz
xchg
adc
mov
or
adc
mov
mov
push
ja
push
mov
imul
movsb
and
dec
pop
dec
das
addr16
add
add
add
fmuls
pop
sub
cwtl
fwait
cmp
mov
xor
addr16
dec
sub
xorl
je
push
movsl
lcall
sbb
nop
and
arpl
pusha
inc
and
arpl
xchg
in
push
imul
adc
xchg
icebp
xchg
movsl
imul
sbb
jns
mov
int3
arpl
jle
push
jge
cld
adc
push
mov
out
fwait
test
pushf
repz
es
les
inc
pusha
mov
xchg
xor
push
mov
push
daa
jmp
icebp
xchg
sub
inc
mov
int3
ds
dec
popf
fists
mov
loope
pop
std
mov
mov
push
loopne
mov
outsb
lea
notl
push
mov
add
or
mov
das
loope
clc
add
pop
call
call
add
jbe
mov
stos
push
xor
fbstp
int3
rorl
imul
mov
jge
jg
ljmp
in
lahf
mov
jl
addr16
add
add
add
subb
mov
stos
pop
stos
cwtl
cli
or
pop
mov
ja
add
outsl
sbb
std
xchg
sub
and
jae
adc
movsl
dec
imul
push
mov
ljmp
jbe
sub
jns
and
cmp
jle
fisttps
cmpsl
xor
ljmp
movb
mov
lods
jle
clc
inc
imul
mov
and
icebp
ljmp
lock
jnp
fidivrs
test
out
sub
arpl
adc
in
cmc
push
aam
xor
mov
push
inc
pop
mov
mov
jp
hlt
js
in
jp
pop
call
mov
divl
add
ret
in
test
inc
xorb
je
dec
lret
stos
fistps
leave
mov
mov
shrb
add
cltd
sub
out
inc
sub
or
out
sbb
add
add
add
mov
inc
push
cmpsl
add
add
mov
das
push
cmpb
mov
inc
lahf
cmp
out
xor
stos
mov
mov
icebp
jb
pop
rcrl
ret
sub
adc
roll
adc
cmp
xor
jmp
push
mov
mov
push
rcll
inc
jb
gs
clc
jp
pop
movsb
xor
movsl
push
sub
pop
mov
pop
mov
insl
stos
ljmp
shll
jae
enter
aad
sbb
mov
test
push
sub
jnp
out
lret
cmp
xchg
loopne
pusha
xchg
mov
outsl
out
jge
mov
xchg
cmp
mov
xor
clc
das
jp
add
aaa
jg
out
int
sbb
sbb
lcall
or
in
jecxz
xor
ss
pop
aaa
dec
outsl
inc
fcmovb
jno
mov
loop
test
mov
cld
mov
addr16
add
add
out
cmp
cmc
xchg
sub
test
cs
test
xchg
jne
fsubs
or
aad
test
cmp
push
xchg
xlat
xlat
mov
in
in
bound
cli
pop
outsb
adc
mov
xor
dec
bound
ds
mov
mov
mull
insb
cmp
or
sub
cmpsb
les
pop
int
dec
lea
clc
xor
aaa
idiv
jp
adc
stos
pushf
mov
jns
sbb
cmp
test
lock
enter
in
shl
cmp
sub
int
testb
mov
sbb
lds
mov
idivl
fbld
pop
fsub
out
call
adc
pop
sub
xchg
push
pop
or
mov
jmp
sbb
out
fsubrs
push
cmpsb
aaa
adc
shr
mov
mov
sti
jns
or
lcall
idivb
addr16
add
add
push
push
cmp
ret
out
inc
or
mov
xor
and
repz
jne
sbb
sahf
adc
mov
push
xor
cwtl
mov
cmc
jne
sub
rolb
mov
push
or
mov
mov
lahf
loopne
cmp
int
push
jge
dec
mov
shl
xchg
pop
cmp
iret
fsub
cmp
outsl
out
cmpsb
test
fiadds
fwait
add
or
cmpsl
cmp
or
pop
sbb
push
push
cld
pop
movsb
jno
and
loopne
cmp
std
jae
inc
push
xchg
mov
aaa
mov
xor
popa
pop
loope
mov
sub
xor
add
ja
je
stc
jb
scas
pop
sbb
jns
je
out
pop
adc
sbb
data16
mov
mov
xchg
or
push
sub
inc
jmp
jno
inc
aaa
xchg
jmp
add
add
mov
inc
inc
add
mov
add
cld
and
mov
xor
jg
int
push
jecxz
mov
dec
mov
ss
out
xor
das
aam
cs
xchg
cmp
mov
adc
arpl
push
jb
loop
sbb
inc
idivb
mov
iret
mov
inc
inc
mov
mov
mov
stc
adc
pop
cmpsl
hlt
jo
add
outsl
daa
add
cmc
dec
stc
dec
out
rolb
dec
dec
push
cmp
cmp
mov
sbbb
cmp
cmpsb
xchg
mov
jb
in
cmp
fwait
aas
clc
addl
pushf
rorl
mov
jge
out
mov
add
lock
aaa
test
fwait
in
lds
dec
push
pop
in
in
add
dec
daa
mov
push
ljmp
mov
xchg
and
jae
stc
and
pushf
int3
xchg
xor
lods
in
fistpl
faddl
sub
push
or
sbb
inc
mov
addr16
add
mov
out
push
sbb
iret
lods
mov
sbb
shrl
mov
cmp
and
test
mov
out
xor
jbe
xchg
sti
in
mov
pop
mov
repz
or
inc
sub
jb
repz
xchg
out
inc
xorl
jg
iret
add
test
sbb
push
or
aam
imul
and
push
xor
sbb
lock
fcmovb
dec
dec
popf
pop
notb
pop
je
cli
in
jge
sbb
mov
jb
xor
aad
aas
cmpsl
addr16
mov
add
xor
mov
jb
pop
loopne
xchg
inc
jbe
cmp
pop
out
xchg
push
and
and
rolb
gs
shll
add
add
inc
fdivl
push
dec
mov
movsb
add
add
add
loop
mov
stos
out
push
xchg
out
sub
xchg
pop
leave
lock
mov
jo
jmp
mov
adc
in
daa
lahf
addr16
loopne
mov
pusha
fnsave
push
mov
std
out
xor
sahf
mov
gs
mov
das
ds
add
shl
jp
sub
into
in
enter
push
adc
cmp
imul
jo
jne
mov
sub
mov
push
mov
out
lods
mov
jecxz
fdivl
sub
cltd
cmpsl
stos
in
das
bound
jp
scas
stos
lahf
xlat
jge
mov
push
mov
test
outsl
cmp
je
xchg
btr
cmpsb
cmpsb
and
aam
inc
dec
pop
jle
ret
pop
lret
sti
cmpsl
repnz
cmp
jbe
stos
inc
or
aaa
cld
les
lods
aad
in
ret
popa
lds
or
test
add
sbb
mov
sbb
ja
into
movsl
add
add
add
loope
add
push
push
arpl
and
std
or
jno
rcll
or
cld
repz
mov
pop
inc
inc
ljmp
push
ds
jp
mov
inc
sahf
popa
push
fs
xchg
cmpsb
xchg
fistpll
hlt
cmpsl
mov
cmp
jmp
enter
cwtl
fwait
js
xor
push
push
jo
mov
adc
nop
ja
ret
out
flds
mov
fmull
add
mulb
jnp
les
out
mov
outsl
cmp
sub
mov
ret
cmp
addr16
iret
imul
stos
fistl
jne
pop
push
pop
stos
frstor
pop
sub
stos
insl
stos
mov
ret
cltd
out
js
xchg
or
pusha
cli
loope
pop
and
pushf
pop
adc
clc
adc
test
subb
lret
lahf
cmp
inc
push
add
adc
pop
test
stos
hlt
jmp
cmp
jbe
pcmpgtd
cmpsb
add
add
add
shll
enter
cwtl
pop
fs
and
mov
movsl
repz
stos
push
push
rcll
sbb
sbbl
add
push
mov
pop
pop
pop
pop
inc
sub
pop
xchg
sbb
sub
sbb
test
je
lods
arpl
aas
mov
jmp
add
sti
mov
pop
cmc
xchg
sub
sub
jge
adc
jmp
repz
adc
pop
insl
cmpsl
dec
or
jo
scas
cmpb
icebp
sbb
addl
dec
loopne
daa
adc
inc
bound
ljmp
mov
fcoms
imul
pop
mov
push
test
mov
push
mov
mov
jg
dec
sub
in
popa
add
ret
mov
and
ss
jae
ss
add
add
push
nop
out
xlat
out
jg
in
xor
fldenv
fwait
or
cmpsl
add
add
add
add
aad
mov
clc
mov
adc
sub
push
mov
stos
sahf
jge
push
jbe
mulps
sbb
ret
fwait
inc
lds
pop
xor
mov
or
loopne
xor
add
inc
ret
lock
inc
mov
ljmp
data16
jmp
jle
pop
mov
popa
mov
outsb
mov
fld
or
out
shrl
aas
fildl
add
mov
daa
mov
in
sub
add
mov
lcall
push
xchg
mov
cmpsb
fdivrl
imul
je
fwait
mov
not
rcr
jae
xor
adc
jl
push
pop
xchg
sbb
add
mov
mov
mov
sbb
loop
or
xor
jo
or
add
lea
into
icebp
sub
sbb
shrb
imul
add
mov
inc
fwait
lds
jo
fldl2e
xchg
call
add
add
add
loopne
flds
inc
scas
addb
inc
xor
int
or
dec
xchg
in
cmp
enter
pushf
sbb
or
mov
nop
mov
and
inc
xchg
leave
inc
int
shlb
mov
mov
imulb
and
addr16
sub
jle
movsb
adc
cmp
cltd
push
jne
insb
movsb
lods
mov
mov
xchg
xlat
and
out
and
test
cmp
fld
gs
jbe
push
cli
cmpsb
dec
out
movsb
add
mov
cmp
or
out
sub
jecxz
out
sbb
enter
aam
mov
mov
push
mov
int
push
bound
jg
iret
jb
xor
fstl
iret
xchg
and
add
imul
test
xor
ret
rorb
sub
fildl
add
add
mov
fadds
addr16
add
test
sbb
lea
pop
push
and
mov
add
jmp
testb
fcmovbe
sub
inc
rorb
imul
dec
aas
std
or
mov
movsl
pop
adcb
mov
jns
push
push
mov
xchg
outsl
push
test
jo
xchg
cmp
mov
xchg
in
sub
pop
add
inc
and
cmp
jno
cmp
test
adc
sbb
xor
xchg
pop
adc
xchg
or
sbb
pop
add
ljmp
and
sbb
int3
adc
sbb
dec
push
mov
or
mov
lret
xlat
xchg
fdivl
pop
dec
pushf
xor
mov
in
cmc
push
fadds
jnp
sub
xchg
lea
rcrl
test
mov
jae
aas
fmuls
loopne
lock
jb
sbb
mov
push
inc
stos
mov
lret
jnp
sti
jmp
push
mov
negb
stos
add
add
add
or
out
cmp
mov
adc
pushf
cmpsb
mov
dec
out
leave
push
xor
mov
outsl
jae
lret
out
jbe
dec
and
or
je
fcomps
in
and
or
mov
cld
and
mov
loope
mov
dec
jbe
shrb
out
movsl
cmp
mov
loope
jae
push
outsl
push
std
add
cmp
pop
and
ljmp
mov
int
cmp
scas
rclb
mov
shl
mov
xor
sbb
test
xchg
adc
lahf
pop
std
cmp
mov
cmpsl
fcomip
jo
mov
outsl
jmp
mov
insb
lods
clc
and
rcl
jp
fldl
jp
leave
gs
mov
cld
mov
out
outsb
push
pop
aas
jge
pop
lds
xchg
xchg
sub
stos
jns
dec
jnp
push
addr16
decl
mov
jecxz
lock
into
pop
stos
add
add
add
cmpsb
sbb
dec
and
push
iret
push
inc
adc
inc
xchg
stos
and
or
sub
add
sbb
out
shll
jns
popa
sbb
or
or
rcrb
pushl
mov
pop
or
cwtl
adc
scas
or
je
daa
pusha
out
pop
push
shlb
sub
and
fs
fcmovnbe
dec
mov
lock
bound
lds
mov
inc
jmp
int3
cli
js
cmp
out
lret
sbb
sbb
jb
data16
fsubrs
and
pop
mov
test
jno
pop
loope
mov
pop
mov
icebp
ret
sti
ss
loopne
fsubs
imul
jno
hlt
push
and
mov
lea
add
outsb
test
and
cmp
insb
cs
pop
je
cmp
dec
and
iret
mov
cld
mov
leave
dec
inc
adc
add
add
daa
loopne
mov
push
hlt
adc
sub
xchg
push
fldenv
cmc
push
arpl
dec
pushf
mov
call
pushf
wbinvd
ret
pop
cmp
sub
stos
jmp
mov
lret
mov
fsubp
mov
push
jle
cmp
mov
aam
dec
cmp
bound
pop
pop
push
xchg
add
push
adc
xchg
push
add
xlat
loopne
push
xor
inc
and
pop
lret
pusha
sbb
adc
and
sub
gs
lret
leave
jmp
push
fstpt
out
add
mov
mov
jb
lret
int3
cli
test
mov
pop
test
sub
inc
ret
mov
arpl
xor
cmpsb
inc
bound
int
sub
lret
adc
dec
pop
mov
xlat
cmp
arpl
mov
dec
das
pop
out
cmc
mov
js
add
lods
add
add
add
aad
lds
mov
adc
push
dec
add
cmp
inc
cmpsb
sbb
dec
int
ja
addb
or
sub
fs
leave
push
sub
jp
and
push
or
std
lods
inc
xchg
mov
stc
dec
call
addr16
loope
xor
ds
add
or
push
bound
mov
cmpsw
mov
pop
mov
test
in
cmp
movsb
mov
mov
pop
sbb
sahf
aas
pop
adc
cmp
je
in
mov
popa
dec
repz
adc
insl
movsl
xchg
jl
jno
enter
inc
out
ret
sub
push
movsl
or
lods
mov
stos
inc
rcl
imul
jnp
daa
inc
icebp
pop
scas
xor
cmp
pusha
popf
mov
adc
jb
push
addr16
cmp
mov
pop
gs
dec
xor
mov
mov
fucomip
std
dec
std
pop
lcall
xchg
pop
push
xchg
xlat
ret
scas
add
add
add
rolb
jmp
inc
test
sbb
je
pop
xchg
cmp
jg
xor
test
insl
addr16
aas
sti
push
mov
hlt
add
inc
in
rcrl
sub
or
and
push
movsb
jno
push
adc
mov
int3
push
mov
cs
add
ret
and
in
in
mov
sar
loopne
mov
pop
popa
and
imul
cmp
pop
xchg
mov
cmp
cmpsb
rcl
sub
dec
jp
lock
out
fadd
ret
xchg
repnz
xor
pop
jp
out
aas
pop
mov
mov
jg
jns
sub
int3
or
mov
mov
jge
xorl
sub
inc
sbb
sub
shrb
out
mov
add
mov
mov
jecxz
and
fidivs
loop
ljmp
cmp
scas
add
add
add
loopne
mov
mov
xchg
pop
test
subb
stc
or
sbb
sti
push
in
dec
mov
jne
pusha
inc
mov
js
repz
sub
aas
loop
out
sbb
lds
mov
jae
lret
or
mov
adc
or
insb
dec
jmp
vpsllq
xorl
movsl
xchg
or
dec
mov
addb
aam
frstor
mov
repz
inc
hlt
jbe
dec
loopne
shll
and
fs
jl
or
enter
xchg
sbb
fstpt
and
inc
sbb
xor
shll
lods
and
es
xor
pop
dec
push
and
out
mov
push
outsb
mov
adc
pop
mov
jp
imul
aad
mov
push
xchg
jg
jmp
std
mov
sub
add
add
add
xor
mov
sbb
sbb
adc
pop
jmp
scas
data16
add
pop
inc
adc
lret
lret
inc
xchg
xor
outsb
sbb
lret
pop
popa
xchg
add
sub
pop
sahf
loope
or
jnp
nop
push
clc
push
add
cmpsl
bound
sbb
xor
jbe
divb
neg
sbb
jne
cmpsb
or
sarl
pusha
xchg
and
fcomps
addb
insl
mov
mov
push
dec
pop
dec
shlb
dec
sbb
rolb
lea
lcall
mov
pop
je
cmpsb
sbb
sbb
cmp
add
mov
movsb
push
push
dec
push
push
nop
mov
jg
pop
sbb
xchg
cmp
add
push
divb
inc
mov
xchg
xor
add
add
add
inc
aam
addr16
or
mov
sub
out
mov
mov
cs
flds
cwtl
cmp
loopne
ficoml
cmpsl
jl
rorl
xchg
cmp
sbb
push
pop
cli
and
xchg
loope
jp
mov
cmp
sub
fs
sbb
popf
int3
sub
sub
or
sub
fdivl
push
comiss
jecxz
test
imul
or
ds
mov
dec
inc
rsqrtps
mov
cmpsl
cmp
idivb
dec
sbb
stos
adc
sub
mov
push
stos
push
adcl
dec
xchg
mov
das
or
xchg
scas
add
mov
pop
and
in
nop
scas
test
sbb
pop
int3
sbb
lret
add
sbb
adc
lds
addr16
dec
aaa
pop
pop
push
pop
xor
cmp
inc
call
aaa
addr16
add
add
add
ljmp
xor
jg
cmc
push
cwtl
scas
pop
loope
pop
loopne
div
divb
outsb
adc
lods
push
mov
dec
add
mov
shlb
mov
loopne
lret
mov
mov
pusha
mov
cmp
daa
pop
aam
mov
xchg
adc
xlat
aad
mov
dec
shl
pop
lods
cmp
cmp
out
int3
inc
popf
xchg
and
lea
mov
fsubrl
xchg
faddl
in
idiv
call
mov
or
imul
outsb
jns
lret
iret
retw
addb
aaa
fistl
pushf
pop
icebp
loop
dec
mov
sbb
sbb
xchg
mov
mov
mov
mov
repnz
xor
mov
mov
enter
pop
test
repz
jl
dec
mov
es
les
mov
arpl
fisttpl
addr16
add
add
add
cld
push
jno
xor
aas
push
mov
outsb
or
scas
test
jle
cmpsb
mov
fwait
das
shr
add
fsubrp
and
pop
add
sbb
lds
adc
cmpb
xchg
adc
sbbl
or
incl
jg
stc
sahf
imul
sbb
orb
or
pop
add
orb
cmc
mov
adc
mov
push
jns
outsl
rclb
push
fcmovnu
int
sub
adc
and
jo
ficompl
jbe
adc
popf
sbb
dec
es
sbb
sub
cmpl
adc
in
mov
repz
adc
in
mov
movsb
jne
jg
push
add
stos
mov
mov
xlat
lea
xchg
inc
rcl
cs
adc
xchg
mov
lcall
add
dec
or
pop
stc
out
push
pop
bound
packuswb
add
imul
dec
enter
xchg
leave
jb
xlat
sbb
mov
xor
fcoml
xor
je
ja
sub
rorb
iret
xchg
cwtl
push
adc
xchg
jle
jns
cmp
in
mov
add
shr
inc
sub
pop
in
pop
jmp
push
mov
or
mov
and
lds
dec
sbb
scas
mov
leave
cmp
cld
loop
and
rep
stos
mov
loop
push
or
sbb
mov
imul
jle
sub
jns
pop
addr16
dec
repnz
int
lea
inc
jge
test
cmp
or
into
adc
clc
sub
pop
in
push
inc
inc
repz
pop
loopne
rcll
mov
adc
pushf
or
jb
xchg
xchg
std
decl
xor
xchg
jmp
xchg
cmp
int
add
add
push
mov
lcall
push
addr16
add
add
add
and
popf
adc
mov
xchg
mov
mov
push
dec
pop
add
sbb
cmovne
jmp
pop
add
or
mov
pop
test
add
cmpsb
xchg
lds
xor
popl
pop
sub
popa
aaa
scas
adc
jp
cld
add
add
mov
das
jmp
mov
sbb
lds
add
mov
inc
add
mov
sub
push
in
aam
sbb
push
in
mov
and
xchg
adc
inc
jmp
fsubs
dec
ret
mov
adc
lods
call
push
adc
cmpsb
addb
mov
es
sbb
push
shlb
lds
pop
pop
push
jb
rcrl
push
test
xor
popa
add
push
mov
add
xorl
insb
lret
mov
addr16
add
add
add
xlat
dec
pop
add
xor
add
mov
push
insb
or
aam
mov
fldz
pusha
mov
stc
ds
or
xor
aas
lahf
xor
rol
out
out
out
cmpsb
lods
push
push
inc
popa
lahf
shrb
inc
pop
jns
ja
pop
adc
xlat
jnp
cmp
loop
cwtl
jno
xchg
cwtl
cmp
enter
sub
in
loope
adcb
cmp
adc
inc
mov
lcall
mov
mov
lods
nop
jg
pop
xor
aam
testl
fbld
pop
sub
mov
jp
jno
pop
push
sbb
mulb
adc
pop
lcall
inc
mov
lea
push
roll
push
into
and
mov
cmpsl
loopne
cmp
repz
sub
sub
jl
adc
mov
inc
jb
mov
popf
pop
and
jno
dec
pop
pop
sbbl
fstp
rorl
xchg
add
add
add
xchg
sti
imul
out
jge
pop
dec
sbb
mov
xchg
les
fldl
ss
cmpsl
je
cmp
pushf
je
inc
and
xorb
xor
and
cltd
push
rol
xchg
mov
sub
adc
jbe
bound
arpl
sbb
inc
out
das
or
mov
pop
xchg
clc
dec
popa
inc
cld
movsb
mov
push
leave
imul
cmp
out
fsubl
cmpsb
inc
mov
cmp
addr16
sub
pusha
inc
ds
jne
push
jecxz
sti
pop
mov
fs
pop
iret
push
mov
xlat
divl
lahf
sub
dec
mov
push
dec
pop
cmp
sub
push
pop
xchg
std
cltd
mov
mov
sub
pmaxsw
popa
call
enter
and
jp
loope
mov
jecxz
out
mov
inc
xor
addr16
add
sub
ret
adc
xchg
ljmp
sbb
push
mov
jecxz
icebp
mov
ja
sub
jle
pop
pop
dec
adc
adc
fs
dec
xchg
cmp
negb
into
pop
lcall
pop
jle
push
sub
repnz
or
outsl
mov
push
lods
and
in
in
mov
cmp
inc
sar
in
inc
dec
add
popa
scas
cmp
xchg
xchg
adc
add
scas
fldenv
pop
sbb
pop
sbb
daa
mov
adc
mov
test
lcall
adc
aam
in
jns
in
into
mov
jns
in
inc
fs
std
stc
nop
xchg
fiadds
shrb
mov
test
dec
popa
fwait
in
scas
mov
inc
mov
add
add
std
test
jg
into
lret
orl
add
add
cld
cmpl
hlt
scas
mov
and
adc
cmpsb
or
inc
dec
loope
jb
sub
xchg
inc
and
jge
inc
test
hlt
push
pusha
jge
or
xchg
ret
shll
push
or
pop
cmpsb
lret
push
mov
insl
xchg
in
jp
cltd
dec
das
push
mov
or
mov
mov
fwait
push
adc
jle
pushf
out
fsubs
aam
xor
daa
cmp
jge
cmp
mov
call
out
xor
xchg
push
mov
mov
sub
lock
std
xchg
stc
maskmovq
mull
dec
dec
xor
loopne
es
push
mov
lods
inc
sbb
addl
lret
jg
fidivrl
mov
hlt
aas
inc
orl
adc
lods
stos
shlb
xor
inc
jae
outsb
xchg
mov
xchg
fwait
mov
push
dec
jmp
rolb
mov
arpl
test
add
adc
in
lcall
jae
dec
mov
nop
movsl
loope
mov
add
jbe
es
cs
mov
test
repz
lahf
inc
iret
mov
out
mov
jae
inc
or
test
cs
xchg
fisttpll
lods
jb
adc
les
add
inc
enter
movsb
sub
jg
mov
add
sahf
xchg
add
xchg
daa
popf
push
rcrb
mov
sub
loopne
add
lea
loope
loope
arpl
bsf
xchg
or
sti
dec
rclb
and
fstps
cmp
push
lods
add
call
out
or
movsl
outsb
mov
test
xsavec
pusha
loopne
jp
jle
push
repnz
lcall
int
mov
pop
jo
add
dec
ret
fstps
in
pop
xor
das
aaa
adc
rcrl
jl
dec
das
pop
sbb
xchg
ja
mov
mov
out
or
lahf
dec
mov
dec
or
jg
dec
arpl
shlb
add
add
add
and
ljmp
je
mov
xor
movsl
pop
cmp
jno
leave
sub
rcl
outsl
sahf
mov
sbb
mov
mov
pop
je
iret
cld
lret
add
adc
lahf
cld
leave
jge
sbb
lahf
out
lcall
pop
into
adc
jb
push
pop
push
movsl
xchg
xor
add
or
jl
mov
push
into
mov
pop
cmpsb
fimull
roll
sbb
repz
inc
jae
lods
bound
cmp
push
mov
xor
xchg
pop
ja
jmp
shrb
lods
outsl
jo
mov
dec
lds
sub
or
in
pop
pop
jbe
jg
fisttpll
jl
mov
cmpsb
push
push
inc
stos
push
idiv
repz
and
fimuls
jmp
in
cmp
test
repz
cmp
sub
dec
pop
cmp
dec
aad
and
add
out
idiv
outsl
mov
jns
lahf
aaa
addr16
add
or
mov
popa
or
mov
add
push
or
mov
std
xchg
loop
jp
shl
imul
stos
xchg
aam
iret
mov
inc
out
adc
loop
outsb
jo
sbb
mov
dec
pop
aas
cmp
jae
out
sbb
sbb
mov
fsub
ljmp
xchg
jns
jp
cmc
sub
xchg
mov
gs
pushf
jg
mov
shrb
insb
mov
sahf
fnstsw
xchg
xor
jl
hlt
mov
fwait
mov
inc
mov
sbb
sub
addr16
adcb
mov
lret
xchg
xor
add
add
sub
mov
add
neg
test
mov
add
xor
push
push
test
lcall
outsl
mov
add
jnp
xor
mov
pop
or
inc
mov
mov
add
repz
hlt
sub
cmp
movsl
daa
pop
add
je
mov
pavgb
aas
pop
xlat
jns
repnz
ljmp
in
add
xchg
push
call
pop
jns
pusha
push
sarl
sti
or
and
xchg
out
test
inc
xchg
rep
fnsave
subb
sub
int
dec
inc
mov
xlat
mov
jb
arpl
into
daa
jbe
sbb
and
popf
movsb
adc
outsb
lahf
into
ja
pusha
popf
dec
xchg
fwait
insl
adc
jne
mov
idiv
jns
cmp
mov
js
pusha
adc
cli
orb
stos
jb
push
test
or
pusha
lcall
outsb
inc
add
cmp
data16
es
addr16
push
repz
pop
push
insl
sbb
mov
add
stos
cmpsb
inc
sbb
bound
add
push
push
call
push
addl
mov
add
xchg
xor
xchg
mov
loop
push
outsb
mov
or
pop
sbb
cmp
mov
cltd
fstps
jno
aad
cmp
and
jp
addl
add
pop
xchg
test
inc
mov
icebp
or
scas
incl
negb
fbld
and
pop
or
jg
pushf
jle
xchg
or
mov
lods
sarb
or
test
test
xchg
outsl
add
mov
clc
pmulhuw
jmp
aad
enter
ret
lcall
cmp
sbb
mov
xor
cld
add
xor
dec
xchg
mov
inc
xlat
or
lret
fsubrl
lahf
fistpll
and
leave
fs
sbb
pop
aad
jg
cmpb
lea
je
and
sub
cmp
aaa
push
in
mov
mov
subl
call
scas
dec
or
adc
mov
pushf
xchg
sub
out
test
jl
into
std
sti
leave
sti
iret
jmp
scas
fwait
cld
addr16
add
stos
xchg
pop
xor
enter
jae
pop
popf
dec
push
stos
loope
mov
or
mov
inc
xor
sub
imul
jecxz
sub
jge
loope
pop
imul
leave
mov
repz
and
pushf
or
jp
adcl
adc
pushl
or
dec
mov
mov
sar
push
sbb
cli
sarb
sbb
orb
mov
cmp
sub
mov
out
xor
test
mov
sbb
xchg
and
es
jo
mov
cwtl
and
mov
dec
pop
in
xchg
mov
ljmp
push
fnstcw
or
mov
lods
out
pushf
and
int
push
xchg
jmp
arpl
jl
pop
adc
scas
jecxz
mov
add
mov
mov
xor
push
lcall
add
add
inc
xchg
xchg
pop
dec
pop
inc
stc
cmc
pop
movsb
mov
xchg
or
test
mov
sub
or
scas
sbb
push
xchg
pop
pop
jmp
jns
lret
aaa
mov
xchg
test
inc
sub
fidivrs
jno
lahf
push
sub
lods
in
add
jb
shll
inc
fstps
mov
pop
lret
jecxz
or
cwtl
mov
je
dec
test
push
push
sub
push
ficompl
ret
jle
inc
lds
cli
add
ds
sub
mov
ljmp
out
icebp
scas
mov
jmp
inc
and
or
xchg
and
lcall
fwait
mov
sub
add
movsl
jl
ret
cli
inc
arpl
xor
or
lahf
rcrb
mov
lods
inc
negb
punpckhwd
mov
dec
movsb
out
pop
sub
add
jg
mov
sahf
loop
sbb
ja
roll
add
add
inc
loopne
hlt
jae
xchg
xlat
mov
clc
lock
lds
push
sub
mov
sbb
mov
or
and
xchg
or
mov
mov
or
or
lods
out
adc
insl
mov
stc
mov
pop
xor
pop
jp
cmpsb
mov
mov
adc
clc
sbb
shl
outsl
aad
adc
jae
mov
pop
ret
loopne
lcall
shlb
mov
or
clc
mov
sub
fisubrl
or
dec
andl
sbb
mov
in
bound
bound
sbb
lahf
jbe
dec
out
cmp
fs
fcomi
sahf
das
mov
das
aam
in
mov
push
mov
cmp
jle
data16
cs
adc
lret
xchg
ja
lods
cmp
cmp
outsl
add
pushf
xchg
mov
mov
dec
pop
aam
test
add
inc
enter
pushl
cld
sbb
addr16
add
add
jnp
xchg
rcrl
je
lcall
push
pop
pop
jnp
cmp
outsl
mov
inc
inc
pop
stc
rcrb
inc
mov
xchg
jnp
sbb
fildl
jg
insb
xor
pop
stos
cltd
call
inc
or
shlb
xlat
int3
sub
lds
push
jle
cs
inc
sub
xor
mov
xchg
lret
add
aas
out
imul
push
mov
fdivl
shlb
mov
out
mov
insb
mov
dec
setns
lds
cmpsb
pop
and
insl
fiaddl
popa
sub
lea
lret
loop
ljmp
pushl
les
in
mov
mov
cmp
fstpt
shrb
imul
in
sbb
stc
xor
adc
cmp
mov
sti
fs
sbb
adc
jmp
pop
xchg
jmp
testl
add
add
pushf
shrb
lcall
cld
outsb
push
push
addr16
add
add
add
subl
and
push
inc
xor
cmp
sbb
int
cmp
adc
xor
hlt
fmul
xchg
xor
inc
jb
cmp
ss
repz
sbb
ror
test
mov
stc
cmpb
pop
orl
mov
cmpsb
rcrl
sub
push
incb
mov
or
lods
xor
sub
pop
add
popf
mov
ret
es
xlat
aaa
outsl
inc
inc
xor
cmc
loopne
aas
jb
jno
sub
and
jg
mov
out
pop
imul
daa
test
lock
pop
dec
xchg
out
push
inc
xor
int3
rorb
adc
cmp
mov
or
add
push
fs
and
pushf
lret
jns
es
fucomip
aas
xor
xchg
gs
call
loop
out
push
cmpsb
dec
insl
ss
jae
add
add
test
mov
aas
scas
fnstenv
loopne
les
add
add
add
jle
push
stc
dec
addl
sarl
jns
mov
decb
jle
shr
sahf
lret
sub
pop
push
xor
cs
sub
lods
loope
pop
and
stos
out
add
or
cltd
push
jmp
loopne
popa
roll
inc
sbb
or
dec
nop
mov
out
pop
cmp
sub
sti
pop
jle
or
iret
lea
testl
int3
adc
jo
cwtl
mov
repnz
fwait
mov
test
or
test
stos
mov
pop
imul
pusha
pushf
mov
cmp
out
imul
pushf
mov
into
pusha
push
sti
add
in
and
and
cli
mov
dec
pop
pushf
mov
sub
adc
jo
scas
and
xor
sub
inc
adc
jecxz
cld
gs
and
xor
pop
pushf
popa
xchg
outsl
jbe
js
add
add
jne
jne
jg
loop
mov
and
add
add
mov
movsl
lret
je
fmuls
movsl
inc
pop
addr16
jl
aad
ret
in
std
psrlq
push
and
std
das
inc
or
aad
adc
dec
or
or
sahf
mov
out
mov
cmpsl
jmp
xchg
xchg
lret
test
daa
xchg
arpl
xor
out
dec
rclb
and
mov
xlat
jnp
mov
mov
mov
pop
fyl2x
pop
cmp
sti
repz
sbbb
call
push
mov
outsl
movsb
mov
test
repz
xor
cmp
fistl
stos
cmc
fistpll
or
mov
xchg
imulb
je
sub
cmp
or
jmp
and
sarb
scas
gs
in
cs
js
mov
decl
pop
fs
hlt
jb
add
shrl
enter
add
add
dec
pop
mov
cmc
mov
movb
add
add
leave
mov
std
andb
pop
scas
adcb
and
fwait
clc
shrl
loop
int
shl
jno
add
cmp
jg
sub
jbe
or
sbb
lock
shrl
add
enter
sub
in
fisttps
adc
cli
mov
cltd
add
sbb
pop
hlt
out
sar
das
loope
dec
lock
nop
and
cwtl
pop
cmp
jmp
insl
test
mov
add
addr16
and
clc
push
imul
icebp
xchg
mov
push
sbb
arpl
push
inc
cmp
inc
movsl
jmp
mov
inc
lcall
repnz
pop
push
ret
and
pop
mov
push
add
test
in
mov
jmp
cwtl
notl
fnstcw
lock
cs
and
outsb
jle
lods
testl
movl
add
jecxz
and
sbb
and
mov
inc
daa
into
inc
out
je
rclb
cld
jg
notb
adc
mov
nop
insl
clc
add
flds
inc
cmpsl
mov
outsl
data16
mov
idiv
shrl
push
xor
enter
xor
jge
xor
cwtl
das
pop
jge
xor
test
aas
test
mov
fwait
jbe
cmpsb
inc
mov
mov
sbb
in
or
lahf
mov
add
orb
sub
ljmp
mov
pop
sub
push
lret
sub
push
jae
xchg
psrad
lahf
or
mov
in
push
dec
je
in
mov
adc
xchg
jnp
mov
dec
pop
aad
sbb
pusha
mov
xor
adcl
jecxz
push
mov
mov
add
dec
ljmp
add
mov
mov
rorb
bound
imulb
cwtl
cs
ss
dec
mov
add
dec
xchg
mov
hlt
bound
outsb
cmp
gs
jmp
mov
sub
cmp
int
jmp
js
shll
popf
sti
cli
mov
stc
cmp
js
imul
adc
inc
add
jg
jae
out
jge
mov
scas
mov
frstor
sub
into
xchg
ds
fs
inc
xchg
mov
ficoms
lahf
mov
out
inc
mov
pop
mov
xor
cmp
jnp
mov
adc
mov
add
aas
pusha
int
xchg
push
daa
test
aaa
in
jle
flds
movsl
push
mov
rorb
lods
int
fldcw
hlt
das
aam
mov
shll
xlat
rcrl
pop
add
sub
mov
xchg
adc
add
out
sti
xlat
in
aad
in
mov
add
add
add
cwtl
pop
sbb
stc
lret
outsl
dec
into
mov
mov
jae
test
and
in
mov
cld
imul
add
cmc
mov
xchg
or
cmpsb
aaa
xchg
xchg
mov
dec
adc
mov
icebp
or
adc
fldl
pop
push
mov
bound
mov
es
jecxz
mov
dec
lods
cmpsl
dec
mov
int
mov
scas
leave
xchg
test
xchg
push
or
sbb
xlat
add
mov
jns
push
loopne
xor
ss
shlb
sub
data16
movsl
dec
add
and
data16
jle
jnp
pop
popa
pop
and
clc
in
aas
mov
arpl
xchg
mov
xor
test
mov
dec
enter
push
mov
push
test
xchg
mov
les
pop
sarl
sbb
and
ljmp
add
ds
sub
cmp
jg
and
mov
pop
stos
fwait
xchg
addr16
add
add
shr
pmulhw
shr
xchg
mov
mov
pop
addr16
jae
jbe
clc
mov
or
mov
shlb
movsl
mov
pop
cli
add
or
sbb
or
enter
loopne
xchg
bound
xchg
mov
cmpb
mov
sahf
inc
cs
pop
push
pop
dec
repnz
jnp
sub
inc
sub
cmp
pop
push
daa
ret
mov
mov
xor
test
xchg
cmpsl
cmp
loope
push
pop
adc
mov
inc
jbe
shrl
cli
test
outsb
pop
packuswb
popa
xchg
jecxz
push
lods
or
rol
aam
cli
cmp
push
cmp
ljmp
jne
xorl
xchg
fsubrl
mov
mov
inc
dec
iret
scas
lcall
xorl
fs
add
jmp
ds
repz
fcoms
cltd
shlb
lret
add
add
add
in
out
jnp
bound
xchg
jne
out
shlb
out
or
loope
outsb
xor
jno
ss
in
adc
sub
adc
pop
iret
sub
cmp
mov
dec
jns
arpl
push
in
mov
adc
add
xor
test
mov
cs
dec
mov
mov
inc
js
mov
aaa
pop
pop
adc
gs
pop
les
dec
cmpsl
out
sbb
adc
mov
outsl
mov
mov
lahf
pop
sub
or
sub
into
clc
pop
imul
jl
pop
inc
rorl
sub
cmp
pop
shll
test
sbb
into
lods
imul
call
aam
mov
inc
xchg
push
movb
adc
inc
mov
ss
pop
dec
sub
mov
sbb
cmp
outsl
add
add
mov
mov
mov
push
ret
jl
addr16
add
add
add
fisubrs
inc
mov
fisubl
or
loop
iret
mov
pop
jp
fwait
movsb
inc
leave
js
adc
ljmp
or
enter
mov
pushf
je
xor
mov
popa
sbb
cmp
ljmp
in
mov
bound
lock
mov
lods
fldcw
outsl
ja
jbe
test
je
fisubrl
outsl
inc
mov
jns
cmpsb
fcomps
add
fbstp
xchg
mov
roll
sub
xor
orb
rolb
loopne
inc
shrb
loop
adcb
jle
data16
mov
jmp
pushf
fidivrs
sub
mov
xor
pop
loop
repnz
sub
push
xchg
mov
ljmp
xor
push
xchg
inc
add
fwait
mov
out
fistpll
xor
pop
stc
enter
in
sbb
push
inc
jg
outsb
jge
int
add
add
add
and
cli
outsb
scas
sbb
xchg
ret
xor
call
leave
call
add
icebp
loopne
adc
mov
lret
mov
cmpsl
mov
daa
insb
rorb
inc
shlb
jns
sahf
mov
mov
mov
inc
insl
mov
sbb
mov
jns
jb
mov
or
jmp
jns
int
vfrczsd
xchg
sub
inc
sti
mov
call
adc
and
adc
int
jmp
lret
jno
jmp
mov
test
aaa
pop
in
inc
jb
addr16
ja
push
push
cwtl
gs
lcall
jbe
nop
pushf
inc
jg
daa
and
push
mov
pop
cmp
inc
test
push
cwtl
or
mov
jns
push
sub
pop
out
in
cltd
sbb
mov
push
sub
add
imul
cmc
call
inc
push
popa
cmp
add
add
add
test
xor
add
ja
js
sbb
ss
dec
mov
xchg
xchg
insl
dec
mov
ja
in
test
fwait
cmp
xchg
mov
int
mov
dec
mov
cmc
daa
shll
icebp
ljmp
lret
add
aas
mov
sub
push
es
mov
sbb
adc
lods
call
shrl
addb
sub
dec
mov
and
and
imull
loopne
sti
lret
pusha
and
loope
enter
adc
mov
mulb
aam
fisttpll
push
test
cwtl
xor
fwait
mov
call
mov
push
fisubrs
cwtl
push
pushf
cmp
sub
mov
je
testb
add
mov
pop
fdivs
xor
add
add
ja
iret
sub
mov
add
add
add
lcall
or
mov
sahf
or
pop
bound
jno
xlat
adc
inc
dec
fstpt
add
mov
sbb
xor
pop
push
pop
or
jge
dec
mov
adc
lret
pop
push
inc
lret
rorl
jo
mov
int3
push
ss
in
jne
in
mov
xor
call
dec
push
mov
jnp
ds
pop
lods
sub
pop
loope
sahf
or
pop
fucompp
jmp
cmc
cwtl
dec
stos
pop
stos
and
repz
sub
ret
repnz
lret
popa
jnp
cltd
mov
je
cmp
into
lock
loop
fcomps
fildl
pushf
aad
dec
jge
sbb
jmp
sbb
rcl
pop
dec
and
stc
aad
subb
sbb
cmp
sbb
add
add
out
into
gs
cld
test
rolb
add
add
add
push
jg
movsb
cmp
into
and
jp
xchg
loope
mov
and
fbstp
jecxz
rclb
sbb
outsb
sti
dec
addr16
mov
sbb
mov
mov
mov
std
cmp
jno
call
fisubrl
mov
xor
xor
ret
push
pusha
cmc
pop
cmp
arpl
sbbb
cmp
clc
push
test
cmp
insb
je
movsl
sub
repnz
push
out
xlat
jae
fcoml
clc
imull
adc
data16
or
in
sub
or
ja
cmp
shl
and
cmc
cmp
mov
call
sbb
mov
imul
sbb
add
cmc
mov
jbe
xchg
ret
push
push
gs
fiaddl
movsl
cmp
cltd
test
inc
cmp
mov
cli
daa
out
in
call
or
add
push
loopne
and
je
out
mov
mov
repnz
roll
add
add
add
pop
cs
or
mov
lea
aad
mov
movsb
cmpsb
je
cwtl
ficompl
enter
cwtl
addl
mov
adc
sbb
lods
test
or
sbb
aad
aam
cmp
add
and
inc
ss
jb
ret
fwait
and
xor
dec
les
pop
fmuls
sbb
insl
pop
daa
xor
rcll
xchg
inc
out
repz
inc
push
xchg
stos
sub
int
ret
in
push
mov
dec
push
mov
mov
je
jnp
add
js
insl
pop
addr16
ret
pusha
sub
adc
mov
ret
jno
lods
scas
mov
inc
cltd
fdiv
enter
and
xor
test
bound
icebp
arpl
fs
aad
icebp
mov
dec
leave
iret
xor
stc
xchg
xchg
sbb
int
mov
or
add
add
dec
daa
dec
das
outsb
imul
push
xchg
mov
push
in
rolb
add
add
add
lea
push
mov
pop
and
xorl
fdivrl
je
call
sub
inc
mov
mov
jae
push
inc
dec
lds
cmp
mov
inc
sub
cmp
add
xchg
ja
sti
test
push
xor
je
dec
imul
cli
sub
lahf
ret
fcom
movsb
outsl
pop
jle
mov
lcall
iret
and
and
jecxz
sub
mov
xchg
out
das
test
add
jnp
das
in
in
sub
sbb
mov
cmp
cmpsl
lcall
inc
mov
cmpsb
sub
shr
es
and
mov
cli
push
sub
dec
xor
xchg
mov
andb
ljmp
jg
mov
sub
sbb
pop
adc
clc
pop
lock
push
mov
call
out
lahf
ret
or
inc
aas
roll
add
add
add
addr16
decl
xlat
xor
mov
or
jmp
ja
cmpsw
jnp
fcomps
fcoml
popa
add
subl
fxch
into
mov
out
out
popf
test
icebp
fdivl
pop
dec
lock
xor
cli
hlt
into
loopne
mulb
and
or
add
fxch
pop
out
ficoml
outsb
sbb
or
dec
data16
cmp
or
sbb
sbb
ds
ret
adc
pop
or
arpl
loop
mov
stc
add
enter
icebp
and
mov
loop
lods
push
test
shr
xor
mov
mov
jo
imul
bound
jmp
je
or
and
xchg
aad
pop
fisttpl
bound
or
inc
or
pop
add
or
pusha
js
mov
mov
dec
cmp
add
mov
mov
mov
pop
xchg
or
sbb
add
add
add
mov
add
adc
jle
movsl
add
mov
xlat
xchg
daa
in
or
bswap
jmp
cmp
push
jb
decb
push
cwtl
and
inc
jae
push
repz
xor
out
cmp
dec
out
aam
movsl
jmp
jns
cmc
xchg
inc
mov
xchg
inc
andl
pop
inc
notl
cltd
xchg
add
inc
clc
mov
into
push
cmpsl
cld
xchg
jae
ss
pop
xor
sarl
pop
aas
and
and
hlt
add
cmpsl
les
out
mov
xor
mov
add
test
jecxz
sub
sahf
ja
push
cli
add
inc
pop
xchg
lea
sti
aas
popf
popa
mov
out
sub
xorl
out
xchg
xchg
jae
sub
test
leave
cmpsl
lods
loope
inc
insb
testl
add
add
add
sbb
sub
dec
cmp
scas
addr16
add
add
add
ja
bound
mov
xchg
or
stc
aas
daa
imul
pop
mov
inc
outsl
loope
xchg
rolb
das
push
mov
cmp
icebp
xchg
ja
imul
sub
call
fisubrs
lea
pop
pop
adc
or
ja
sbb
mov
xorps
xchg
dec
outsb
daa
mov
stos
jmp
mov
cmp
outsb
ds
cmp
push
pop
sahf
jae
pop
jae
push
sub
lods
push
cmp
fadds
daa
pop
lock
addr16
sub
cmp
adc
loopne
rcl
ss
movsb
mov
xchg
out
pavgb
inc
hlt
jecxz
fisttps
popf
shrl
xor
mov
scas
push
loope
mov
mov
or
scas
xor
cmp
sbb
mov
mov
xchg
jle
mov
xchg
mov
pushf
adc
ds
jae
xchg
pushf
cltd
addr16
add
add
add
pop
ja
add
popf
orb
dec
int3
push
mov
repnz
addr16
pop
repnz
pop
scas
insl
lahf
pusha
cmovg
push
ret
dec
fs
xor
ss
add
sahf
imul
add
jb
shl
sub
aad
or
push
mov
xchg
shll
pop
inc
out
jne,pt
mov
popl
scas
int
ja
negb
cmpsb
pop
in
scas
sub
std
push
daa
or
push
into
dec
stos
js
sbb
fists
ds
xor
insl
pop
int3
lods
cmc
and
cld
adc
sub
inc
pop
test
and
sbb
bnd
fsubl
cmp
jns
rorb
dec
pop
xchg
mov
xchg
xchg
and
out
dec
ss
lock
ds
stc
mov
cmp
mov
repz
iret
jmp
enter
out
mulb
and
pop
cmp
icebp
negl
cld
cmp
mov
vmwrite
add
add
lcall
jnp
jp
mov
add
add
add
mov
xor
fsubrs
pop
lcall
xchg
cmpsb
inc
dec
xchg
xor
cmp
not
jnp
or
xchg
test
or
xchg
testl
imul
inc
mov
adc
aaa
fidivrs
push
mov
mov
pop
and
in
out
clc
lods
inc
aad
addr16
lret
mov
lahf
mov
dec
sbb
jns
cli
mov
orb
push
dec
cmp
sti
or
adc
jl
mov
cmpsb
mov
xchg
mov
lcall
dec
stos
test
testl
out
mov
cli
and
bnd
and
sub
adc
hlt
ja
mov
fwait
xchg
jmp
std
dec
jns
ds
sahf
cmp
add
and
dec
xchg
dec
cmp
push
das
add
sub
cmp
jg
leave
or
adc
push
das
fadds
add
add
add
jp
push
imul
cmp
pusha
movsl
xchg
dec
test
fstpt
add
hlt
mov
push
addl
mov
stos
cmc
sbb
cltd
popf
notl
push
mov
in
mov
xor
in
push
push
fdivrl
dec
popa
push
jmp
cmp
xchg
mov
or
test
xor
push
andb
insb
mov
dec
jne
mov
bound
xor
ret
or
mov
out
adc
cmp
adc
mov
xor
inc
push
cmpsb
stos
pop
add
xor
adc
cwtl
and
or
stos
xchg
push
rcl
repz
inc
sub
fwait
mov
scas
scas
sti
fisttps
mov
add
rolb
jge
push
ret
xchg
rcll
out
and
imul
xchg
movsb
lcall
add
add
add
rcrb
ret
dec
dec
add
fsubl
aas
aad
lahf
push
push
sub
push
sub
sti
lods
jnp
mov
int
movb
and
cmpb
out
fildl
rcrl
sub
jg
sbb
xor
add
in
gs
pandn
pop
icebp
add
stc
lds
add
jnp
lods
rcrl
mov
into
jmp
pop
icebp
rolb
fadds
cmp
fimuls
add
jne
and
int3
cwtl
sbb
jle
dec
dec
ret
jecxz
jl
mov
xchg
and
out
xor
cmpsb
mov
cmc
mov
xchg
fisubrl
cmp
jmp
rol
push
jle
cmpb
roll
dec
pop
dec
pop
inc
xchg
mov
xor
or
lcall
out
loop
push
sti
inc
pcmpeqd
cltd
std
out
insl
clc
imul
out
out
fldcw
push
in
sub
fsubs
add
add
add
push
stos
in
enter
pop
pop
cld
or
sbb
push
xorb
cltd
scas
repnz
rcll
xchg
mov
data16
xor
pop
popf
fcom
pop
jmp
es
rcrb
add
fsubp
insb
je
inc
pusha
pushf
and
ret
hlt
and
mov
sbb
nop
sbb
in
mov
jne
scas
dec
inc
mov
arpl
mov
rorb
movsl
fcoml
sahf
xchg
rorb
test
push
push
out
gs
sub
aaa
jmp
dec
cld
xor
orb
icebp
xchg
or
push
mov
add
cmpl
sti
sbb
adc
ljmp
rcrl
xor
lods
and
popa
cli
or
cmp
push
dec
push
mov
loop
xchg
xor
fcmovnbe
outsl
sbb
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
add
fildl
add
add
add
mov
loopne
sub
shlb
adc
ret
xor
int
sbb
push
inc
fdivs
adc
insl
push
data16
rcrb
imul
add
std
cwtl
push
mov
data16
cmp
out
and
jmp
jne
popa
outsb
cltd
push
add
mov
lret
xchg
fcompl
xchg
inc
or
cltd
sti
sbb
xor
aas
or
cli
sub
xchg
xchg
inc
mov
cmp
pushf
adc
pop
ljmp
repnz
cs
movsl
test
movsl
in
sbb
push
cmp
jbe
mov
lea
call
rcrb
movb
cmp
out
jl
fcmovnu
mov
insb
xor
jp
into
fildl
mov
pop
dec
dec
cmp
sub
dec
mov
fistl
in
pop
push
or
cmc
pusha
call
pop
repnz
add
pop
dec
jle
jg
std
fstpt
pop
add
add
add
add
rclb
pop
lock
push
mov
dec
xchg
sti
push
popf
out
das
cmp
xchg
sub
push
test
ds
pushf
lock
push
nop
insb
sbb
stos
mov
fisubl
int
arpl
and
pop
aam
ja
nop
xor
lahf
stos
int3
test
sub
push
jmp
ds
xchg
test
outsl
cld
faddl
mov
pop
sub
jnp
into
popf
out
cmp
xor
ljmp
sub
and
loopne
push
outsb
clc
outsb
clc
xchg
dec
ss
imul
mov
mov
and
cmp
mov
cmp
popf
cmp
sbb
mov
leave
jnp
repz
add
sti
in
push
sbb
es
pop
arpl
mov
lahf
shlb
cmp
mov
push
cmp
ljmp
jge
call
add
add
add
addl
mov
jmp
jne
add
ss
ret
xorb
pop
lret
xor
movb
jmp
test
inc
in
cld
bound
aas
sub
adc
xor
push
addr16
mov
ja
jae
adc
push
mov
out
jge
mov
imul
push
test
xchg
out
fisttpl
lret
jmp
sbb
subb
loopne
mov
push
repnz
sub
pop
adc
cmp
sbb
push
mov
push
in
aam
lock
and
sbb
stos
pop
xchg
jno
or
mov
fnstsw
cmp
neg
push
fsubrl
ljmp
popa
mov
icebp
outsl
lods
cmpsl
dec
rcrl
inc
and
rcr
dec
mov
daa
push
cld
add
or
dec
idiv
pop
jg
mov
pushf
call
add
adc
leave
jmp
scas
inc
call
fiadds
add
add
add
mov
jo
in
js
jbe
xchg
adc
dec
or
inc
pop
cs
or
loop
sub
scas
adc
shll
test
xor
mov
mov
xchg
jb
mov
mov
xlat
mov
in
xchg
out
add
bound
inc
xor
inc
inc
out
dec
mov
out
mov
pop
bound
mov
mov
cmp
rcrl
out
rolb
sub
push
push
mov
cli
xchg
pop
orl
inc
jne
sti
jmp
fs
xor
xor
mov
lret
out
pusha
je
into
mov
mov
mov
sbb
xlat
nop
cmc
fnsave
add
sbb
sbb
xchg
je
lods
pushl
adc
movsl
push
insl
mov
subl
mov
pushf
mov
pushl
fs
cmpsl
fimull
faddl
jno
filds
add
add
add
push
imul
notb
idivl
addr16
addr16
imul
and
push
out
fistpll
adcb
and
lret
push
mov
pop
gs
out
xchg
xchg
neg
cltd
ja
test
repz
insl
xchg
popa
aad
adc
lret
or
lods
call
and
sahf
or
mov
xorb
sub
addps
cmp
iret
ss
aas
jno
xchg
push
or
gs
loope
push
xchg
push
and
mov
stos
mov
xor
int3
pop
or
mov
pop
roll
sbb
out
cmpsl
mov
xor
sbb
inc
push
push
push
fnsave
ljmp
or
lds
popa
mov
push
sbb
add
stc
push
adc
add
add
mov
lcall
fisttps
or
loopnew
add
add
add
ficoms
bound
or
mov
dec
pop
test
mov
adc
jnp
ror
les
xor
in
loop
mov
icebp
lcall
xor
adc
loop
adc
mov
mov
jb
dec
in
xchg
in
push
mov
mov
jne
sarb
mov
pop
inc
mov
mov
fisubs
fnstsw
repnz
sbb
mov
in
cmp
cmp
jmp
leave
inc
jno
and
mov
sub
fsubl
cmp
jmp
out
and
push
sub
into
or
xor
cmp
add
loope
mov
in
dec
nop
dec
rcrb
add
cmp
les
lds
jp
mov
xchg
push
pushf
and
ljmp
fmuls
cmc
cmp
sub
mov
jb
inc
fldenv
test
sbb
jns
xchg
xchg
mov
sbb
out
loope
add
add
add
mov
aam
in
aad
push
clc
dec
sub
mov
jns
outsl
stos
xor
or
push
inc
inc
sbb
and
inc
sbb
idiv
loope
ffree
sbb
jns
lds
ds
jp
std
dec
pop
xchg
dec
xchg
out
mov
adc
out
cs
mov
clc
cmp
fsubl
les
and
mov
aam
lret
lea
pushf
iret
roll
je
push
lock
or
in
sbb
hlt
mov
loop
jns
and
repz
cmpsb
pop
aad
jge
aam
out
ss
je
stos
inc
mov
jg
jge
int
sbb
addr16
mov
jbe
jnp
nop
call
mov
repz
jno
inc
ret
aas
sbb
mov
movsl
pop
mov
les
mov
inc
shrb
jae
fadd
fsubp
jnp
or
cld
les
inc
rclb
add
add
lods
mov
sub
bound
jbe
and
adc
xchg
and
pop
adc
sub
loope
jbe
add
addr16
sbb
jg
mov
imul
pop
mov
pop
xor
mov
repnz
and
cmp
negb
incl
inc
pop
xor
or
loopne
popa
inc
gs
fdivl
jne
es
mov
out
xchg
xchg
and
in
mov
out
cld
out
insb
movsl
fdivrs
rcrl
sbb
sahf
cmp
fidivrs
ljmp
jge
inc
jae
aad
mov
lret
mov
lea
add
sub
sub
sbb
stos
jbe
pop
xchg
enter
sub
repz
inc
lock
dec
jl
imul
bound
std
dec
xor
push
cmp
sub
cld
cli
jle
dec
nop
xor
ja
jcxz
add
add
add
int3
movsl
and
mov
loop
jg
cmpsb
sbb
sub
std
mov
rcll
jno
and
testb
sub
push
jb
lock
data16
lods
andl
lahf
sub
incl
rorb
cmpsl
jae
int3
or
leave
and
dec
aam
loope
out
or
xor
fsubrl
add
sti
xchg
in
iret
mov
stos
cmpsb
mov
cli
adc
mov
adc
push
inc
aad
mov
mull
mov
addr16
mov
push
iret
push
push
shll
loopne
adc
ret
roll
out
pop
jb
push
or
inc
outsl
sub
mov
divb
in
cmp
push
mov
pop
dec
mov
jne
mov
out
lods
sub
cld
popf
les
push
push
inc
pop
in
testb
mov
mov
jo
mov
pop
sbb
mov
sbb
out
imul
add
ja
sti
aaa
out
ja
mov
jno
in
add
add
add
aaa
idiv
pop
lret
les
pusha
sahf
jl
or
mov
xchg
adc
sub
mov
add
pop
pushf
cmp
inc
in
inc
cmp
mov
jp
xchg
pop
mov
into
pop
loopne
pusha
in
out
sub
cltd
fcomps
fldt
or
push
mov
mov
in
mov
xor
inc
arpl
sarb
cmp
cmpb
mov
pop
inc
or
ja
xchg
les
in
push
repz
sbb
jb
sahf
dec
mov
ror
lahf
aaa
lds
repz
push
adc
pop
pop
pop
shlb
jge
int
adc
scas
push
out
imul
out
frstor
addr16
cmpsb
jns
cmpsb
dec
je
xor
mov
mov
xchg
enter
pop
pop
mov
int3
xchg
add
sub
sub
push
aad
jbe
jp
add
add
into
arpl
pop
xchg
aaa
pushf
inc
arpl
add
add
add
dec
nop
adc
and
sub
sbb
jecxz
imul
mov
or
and
jg
mov
mov
pop
gs
xchg
mov
push
push
call
mov
or
pushf
jae
mov
sbb
push
dec
shr
ret
addr16
or
int
das
add
inc
mov
stos
stos
pop
lods
jmp
adc
jg
rclb
outsl
xor
jno
insb
fidivrl
sbb
and
mov
imul
int
fidivrs
shll
add
nop
mov
cmp
ja
push
sub
test
fsub
xchg
xchg
loop
lcall
jle
fdivr
sbbb
push
negl
lds
dec
call
cs
mov
test
std
and
add
add
cltd
cmc
adcb
fcos
pop
mov
adc
add
add
pop
jl,pt
fsubs
subl
les
and
fisttpl
adc
inc
imul
fisubs
xchg
xchg
inc
xchg
add
jge
inc
or
cmp
arpl
inc
sbb
orl
cld
loop
dec
scas
or
into
es
repz
add
dec
jnp
jb
and
cwtl
dec
scas
ror
rcr
aas
push
xorl
adc
cmp
gs
adc
cltd
in
mov
out
sbb
sbb
fidivl
rcl
push
jle
xchg
push
je
repnz
in
ss
xchg
mov
cmpsb
imul
cli
jecxz
sar
int
rcll
arpl
rol
in
test
aaa
inc
daa
movsb
push
mov
iret
sbb
daa
mov
dec
sbb
dec
or
pop
mov
xchg
inc
mov
add
repz
lock
jg
in
and
jae
jno
out
add
add
add
iret
jnp
sub
arpl
jne
ljmp
xchg
dec
fists
xor
push
or
shl
ljmp
dec
repz
fwait
mov
or
pop
sarl
adc
sbb
shlb
inc
pusha
sub
cmp
mov
sbb
das
mov
test
stos
cmp
dec
sar
cwtl
sbbl
and
cmp
mov
repnz
adc
cmc
fwait
push
push
mov
mov
fstpl
sbb
or
movsb
cld
add
lret
pushf
jno
ret
inc
stos
ljmp
cmpsl
jno
sub
lods
and
daa
cltd
in
fnstenv
ffreep
push
jne
orl
es
enter
xchg
pop
in
sub
and
fsub
test
mov
hlt
xchg
cwtl
jbe
addr16
sbb
je
out
sub
push
adc
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
inc
mov
add
add
dec
test
lret
sbb
cli
adc
lret
mov
xchg
dec
or
andb
add
xchg
mov
jmp
stos
jl
or
dec
sub
or
and
test
jae
icebp
push
xchg
add
iret
loope
and
add
xchg
stos
popl
call
push
ficoml
lds
pop
mov
jp
outsb
leave
cmp
mov
xor
jnp
std
jge
add
inc
cmp
push
ret
push
pusha
xchg
pop
xchg
inc
jb
imull
push
inc
nop
xor
mov
lea
xchg
dec
iret
mov
dec
adc
pop
push
jns
sbb
push
sahf
mov
scas
push
cmpsb
xchg
call
dec
icebp
lods
popf
xor
sbb
mov
push
test
and
or
cmp
pmulhuw
ljmp
daa
push
pushf
popa
dec
mov
cmpsb
insl
test
stc
mov
dec
js
stc
mov
dec
int
insl
into
imul
add
add
and
or
jbe
xor
rorl
push
cmpsl
jg
stos
arpl
adc
pop
adc
cmp
xchg
ss
xchg
cmp
and
cwtl
outsb
dec
or
push
cmp
pop
scas
js
pop
icebp
pop
lahf
adc
fisttpll
or
and
adc
stos
test
cmp
push
cmp
mov
cmpb
loop
into
inc
push
mov
jae
pop
adc
fcomp
mov
stc
lahf
mov
jae
dec
dec
add
mov
xchg
loop
ret
pop
mov
cwtl
cmpsl
push
outsb
arpl
sbb
jp
dec
sub
outsl
mov
lcall
cmp
scas
jns
adc
insl
pop
fadds
jg
outsl
out
pusha
add
cmp
arpl
out
mov
push
adc
jo
xor
lds
iret
out
lcall
push
mov
pop
insb
fildll
fwait
jns
jns
mov
add
add
add
lea
inc
jne
xchg
sbb
xchg
test
mov
jmp
fsubrl
inc
cmpsb
and
jb
jg
jns
imul
and
or
jb
pop
xchg
dec
fisubrs
cmp
das
xchg
addr16
sub
pop
push
cs
pop
cmpsl
jae
mov
jp
and
fs
cmc
push
mov
pop
adc
cs
push
or
xor
in
in
sbb
ja
sub
dec
xchg
idivb
std
mov
sbb
lret
lods
mov
add
movsl
dec
icebp
xchg
mov
out
mov
xchg
repz
mov
xchg
xchg
in
xchg
sub
rcrl
xchg
xor
cwtl
push
push
add
xor
lret
push
adc
mov
or
ret
and
repnz
xchg
jle
lock
or
pop
or
sbb
mov
mov
cmp
jnp
adc
jne
popf
pop
adc
jmp
add
add
add
push
cmp
and
push
mov
xor
and
sbb
ret
movsb
pop
data16
out
aad
addr16
mov
ror
and
xor
repnz
dec
pop
sbbb
repnz
pop
mov
push
or
jae
and
dec
shlb
lock
out
sbb
and
add
push
cmp
scas
int
adc
je
dec
movsl
push
inc
cmp
ss
lods
pop
and
das
orl
sti
stc
sub
stos
pop
cli
mov
xor
pop
cli
fsubrs
add
in
sub
in
jl
std
or
xchg
cmp
cmpsb
insl
sbb
or
outsb
xchg
add
mov
jo
xor
and
xchg
push
jge
sbb
jp
mov
orb
mov
fsubl
test
in
scas
dec
push
mov
jb
in
test
mov
or
nop
out
lods
xor
aas
xlat
fistl
das
xor
test
in
add
add
add
iret
or
sub
push
ret
movsb
xor
pop
push
imul
push
and
mov
ds
hlt
or
xchg
push
cmp
data16
fidivrl
in
pop
mov
dec
movsb
mov
fidivrl
push
outsl
dec
imul
push
loopne
negl
and
stos
push
rorb
imul
repz
cli
lcall
arpl
subb
xchg
mov
xchg
sti
mov
aaa
pop
mov
std
pop
add
mov
xchg
scas
jl
mov
movsl
and
add
xchg
movsb
imul
je
mov
pop
stos
inc
pop
push
inc
cmp
insl
pop
enter
movsl
sbb
add
inc
jb
lret
mov
jmp
adc
incb
inc
and
push
popf
xchg
push
lods
lcall
fdivs
add
add
jb
scas
decb
fisttps
jo
xchg
addr16
add
add
add
inc
hlt
jnp
in
out
and
cmpsb
jae
das
lcall
mov
lret
push
into
std
xchg
add
pushf
push
jge
loope
nop
icebp
mov
mov
add
mov
out
cmpl
subb
icebp
gs
sub
xchg
xlat
push
pop
push
popa
pop
fnsave
test
xchg
xchg
and
aam
inc
jne
add
lea
add
add
sbb
icebp
sarl
fcmovne
insl
scas
icebp
push
push
sbb
dec
inc
lods
mov
inc
aaa
movsb
out
pusha
ja
push
sbb
inc
mov
cmpsb
clc
jle
sbb
xchg
fldl
inc
cmp
cmp
sar
pop
inc
or
sub
xor
inc
adc
sahf
dec
aas
xchg
lret
jecxz
daa
push
jnp
adc
imul
pop
push
in
lret
stos
cmp
add
add
xlat
mov
xchg
mov
xor
addr16
add
add
add
dec
stos
je
push
cmp
inc
in
and
pop
ret
push
hlt
push
test
push
das
xchg
cmp
out
ja
shl
adc
add
xchg
ret
jmp
fbstp
movsb
dec
mov
jmp
xlat
lods
sbbb
cmp
push
mov
int3
mov
daa
jg
shll
mov
jg
pop
cmc
je
ja
stos
je
sub
pop
mov
repnz
out
mov
pop
out
add
and
dec
mov
xchg
jp
push
js
cwtl
mov
push
cmp
jl
pop
ja
mov
loopne
inc
or
rclb
fwait
lock
ljmp
pop
lret
insb
sub
push
cmp
push
cltd
mov
pop
sub
ficompl
xchg
jecxz
rclb
repnz
loop
xor
insb
add
mov
lods
cmp
lods
aas
mov
mov
add
add
add
sub
pop
mov
aaa
jae
xor
inc
xlat
cld
and
insb
add
push
cmpsb
fwait
loop
adc
or
push
out
add
nop
cwtl
repnz
rolb
or
orl
mov
and
push
dec
xor
adcl
jl
out
outsb
inc
sbb
cld
leave
xor
sti
adc
cli
xchg
test
bound
shl
movsl
adc
ja
cli
dec
push
loopne
mov
inc
outsb
mov
dec
xchg
mov
cwtl
ds
aam
les
push
lds
cmc
jge
std
cwtl
sbb
sbb
and
sbb
push
and
stos
push
stc
push
icebp
test
cli
cmpsb
adc
push
cld
cmp
inc
ja
mov
movsb
pop
out
pop
dec
ja
jnp
xor
ret
into
pop
add
andb
pop
sub
mov
mov
jb
imull
add
add
mov
sti
mov
insb
cs
in
lock
add
add
fbld
jecxz
adc
bound
mov
in
pop
mov
arpl
aas
test
aas
xchg
add
pop
cmp
cmp
push
fstl
ret
popa
enter
pop
add
pop
enter
jns
out
jle
mov
or
jne
es
mov
sub
sbb
jbe
bound
imul
loopne
xchg
xor
clc
add
sub
lret
bswap
add
sub
jb
fistl
mov
cmp
sbb
xor
push
insl
and
jmp
les
ja
cmpl
adc
jae
je
or
rclb
icebp
scas
sbb
dec
in
fcoms
fidivrs
or
inc
imul
sub
jno
mov
movsl
gs
inc
and
cmp
add
shll
mov
push
sub
mov
add
push
cmp
adc
neg
jge
xchg
jns
repz
icebp
add
add
add
sub
mov
push
je
push
pop
pushf
fs
fmull
xchg
cmp
js
sub
ret
stc
add
mov
icebp
rcl
ret
cli
jmp
xchg
and
xchg
push
loop
scas
jae
out
push
xor
js
mov
stos
adc
cmpsb
xor
xorb
adc
sbb
icebp
adc
adc
inc
scas
pop
sahf
pushf
aam
push
dec
cmp
sahf
stos
xchg
inc
mov
sub
xchg
inc
mov
in
sbb
and
dec
int3
inc
imul
bswap
dec
lds
jbe
outsl
pop
dec
gs
std
aad
iret
inc
fidivrl
cmpsb
lods
mov
scas
lods
pop
ret
add
mov
insl
nop
sbb
push
pushf
aaa
lea
aad
ror
cwtl
mov
popf
pop
loope
cmp
clc
push
jno
jecxz
in
addr16
fistps
fadds
sub
dec
push
fcomps
xor
xchg
lret
jae
in
pop
pop
cmp
outsl
jg
jg
sub
fcmovbe
and
push
repnz
add
add
mov
sub
cltd
add
pop
adc
popf
popf
lcall
cmp
sahf
sbb
mov
xchg
aad
js
int3
and
rcl
hlt
aad
mov
repz
sbb
jnp
clc
mov
fdivs
sub
inc
xchg
icebp
mov
pop
mov
cmp
js
inc
fcmove
or
pop
std
xchg
adc
xor
in
insl
push
xlat
repz
repz
sub
sti
lds
jg
cli
dec
test
push
and
fld1
dec
dec
jg
sahf
leave
out
pusha
mov
sti
mov
out
sti
out
mov
scas
mov
sbbb
push
push
fidivs
xchg
push
pop
push
mov
pop
iret
jecxz
jns
mov
mov
or
notl
inc
in
push
lcall
add
scas
xchg
push
mov
sub
icebp
insb
jmp
ret
ja
and
aaa
divl
inc
cli
dec
repz
add
add
int3
sbbl
push
and
sbb
stc
inc
pop
pop
or
pop
out
or
loope
loopne
sahf
inc
add
mov
adc
lock
adc
pop
sbb
dec
jmp
jge
ss
jns
in
mov
jne
xor
cltd
rol
mov
mov
xchg
mov
mov
add
cmp
mul
stos
notl
sub
movsb
mov
fildl
sub
aaa
daa
sub
lea
mov
jae
xchg
popa
adc
push
fmuls
fisubrs
and
js
mov
adc
lret
xchg
push
sbb
mov
push
rorb
cmp
mov
fldcw
loop
cmc
xchg
inc
data16
pop
mov
into
lcall
js
xchg
out
cwtl
and
mov
ret
push
xor
nop
pop
mov
in
xchg
jecxz
jmp
mov
push
mov
addr16
add
add
add
in
inc
pusha
jmp
inc
in
cmpsb
sub
sbb
out
cmc
push
xor
mov
add
mov
push
std
pop
or
out
xchg
addr16
or
pop
adc
lret
scas
int
cwtl
shl
mov
push
inc
clc
add
lcall
dec
stos
xchg
sbb
mov
push
fisubrs
or
xchg
push
push
adc
shlb
scas
jl
sti
sahf
aaa
jl
xor
fsubl
cwtl
adc
lods
inc
shll
or
aam
xor
repz
sbb
jp
adc
jno
dec
pop
push
arpl
cmp
sahf
sbb
pushf
movb
adc
inc
loopne
push
jmp
dec
adc
and
repnz
add
sbb
test
sbb
mov
adc
mov
jno
lods
cltd
pop
add
jne
pusha
popf
pop
cmp
cmc
add
add
add
and
ja
xor
mov
cld
adc
cmpsb
inc
xor
mov
iret
push
int3
outsl
out
out
lcall
cmp
and
bound
pushf
xchg
call
and
fldl
inc
or
xchg
mov
popf
aaa
pmullw
sahf
adc
push
pop
mov
adc
repnz
and
pop
add
xchg
aad
aad
movsb
sbb
enter
test
adc
adc
jo
jae
cmp
jmp
xchg
push
cmpb
lahf
dec
int3
les
fimuls
jb
mov
pop
stc
loope
das
mov
cltd
ss
fs
call
or
rorl
inc
cmp
inc
gs
mov
and
ss
pop
inc
jl
lds
cmp
pop
push
dec
lret
lods
roll
mov
shl
loop
sub
scas
fdivr
fnstcw
jecxz
test
testb
add
add
mov
mov
fsubs
pop
mov
pusha
inc
adc
or
lock
mov
pop
cmc
mov
xchg
mov
pop
mov
test
jle
ret
mov
stos
push
in
push
pop
lea
mov
aaa
data16
stc
out
loopne
ss
cmp
jno
cmp
aam
xor
push
lcall
imul
addr16
cs
mov
xchg
sub
and
stos
sub
cld
and
pusha
lahf
and
inc
and
les
mov
jnp
or
and
add
xchg
pop
mov
std
add
lahf
dec
mov
sbb
cmpsb
idivb
ror
push
sbb
cmp
adc
push
movsb
push
jbe
out
sbb
xor
lods
shll
sbb
shlb
jae
jecxz
push
jb
xor
imul
int
inc
divl
add
ret
add
xor
jb
jae
mov
shl
testl
add
data16
jne
mov
add
xor
adc
int3
fdivrs
pop
ljmp
das
adc
out
inc
into
outsb
push
pop
or
lock
stc
aaa
aad
and
cmp
cmp
out
std
xchg
ss
mov
mov
sti
jae
sub
sub
out
test
push
sbb
add
fiadds
pop
sub
dec
or
inc
cmp
ret
pop
sub
dec
lret
cs
dec
pop
test
cmpsb
adc
pop
lret
xchg
adc
imul
jns
icebp
xor
cld
iret
pop
pop
dec
mull
or
sub
xchg
insb
addr16
xchg
mov
cmp
dec
ds
sbb
pop
fcmovnb
insl
cmp
idivb
push
fdivl
adc
cmc
stc
sub
pop
push
jp
in
xchg
enter
test
bound
fdivrs
sub
aaa
pop
lods
std
dec
or
add
mov
add
adc
int
in
idivl
js
mov
cmpsl
dec
mov
add
add
inc
ficoml
push
or
dec
ds
mov
leave
mov
mov
icebp
cli
movl
xchg
cmpsl
lods
jno
dec
sbb
scas
cmp
add
inc
mov
mov
or
test
mov
call
push
and
and
addr16
lret
lods
shll
shll
fldcw
fistl
movsb
loop
xor
xchg
sub
in
stos
cmp
addb
cmc
insl
xor
gs
and
out
jle
xor
and
shlb
ljmp
lcall
sub
xchg
popa
lahf
push
mov
mov
cmpb
stos
inc
subl
jecxz
xchg
adc
push
mov
out
mov
pop
sub
inc
xchg
push
les
xchg
push
negl
or
jmp
cli
mov
pop
es
inc
cli
aas
into
lret
scas
stc
inc
dec
addr16
add
add
add
mov
adc
cli
cmpsb
inc
ljmp
icebp
insb
stc
sub
sbb
int
mov
mov
xor
clc
cmp
and
cli
outsb
push
mov
jbe
xchg
mov
mov
test
jmp
adc
fildl
sbb
imul
jns
add
and
daa
idivl
movsb
rcll
mov
adc
lods
rorl
fs
insb
xchg
sub
push
mov
call
out
xchg
lock
test
out
std
add
pop
int3
add
jo
arpl
cmp
and
movsb
mov
mov
scas
imul
mov
stos
test
jl
idivb
jnp
sbb
pop
es
mov
dec
and
fmulp
fstpl
add
add
add
lcall
orb
addr16
add
add
add
xor
adc
cmp
insb
dec
cmc
xchg
or
aad
movsb
sbb
test
imul
in
popf
fisubrs
repnz
mov
dec
jne
cmpsl
xchg
adc
and
and
sub
fisubs
data16
jl
fcmovnb
lahf
pop
inc
jne
add
cmp
stc
mov
xor
mov
aas
lock
cs
pop
subb
scas
mov
loope
xchg
fsubrl
and
cmpsl
fld
jno
ja
mov
filds
test
pushf
xchg
and
or
xor
inc
jmp
mov
fstps
rcl
lret
and
mov
ss
cltd
sbb
int3
inc
sahf
cmp
pop
dec
jns
adc
jecxz
adc
aad
pop
insl
mov
dec
mov
xchg
loop
mov
ds
int
icebp
cmpsl
mov
scas
aaa
jae
cltd
dec
mov
jno
sbb
adc
add
add
sub
sahf
mov
rclb
push
sbb
lret
test
add
xor
or
mov
aam
xchg
sbb
outsl
cli
fadd
adc
lods
cmp
aaa
or
xor
xor
shrd
lea
movsb
sub
mov
rolb
lret
xchg
jno
mov
push
mov
add
dec
mov
mov
jmp
xor
jo
fsubs
lock
sbb
lea
fs
xchg
cmovg
popf
fstpt
pop
into
mov
fisubl
ret
dec
lea
and
add
test
inc
aam
sub
lock
and
inc
ret
dec
or
js
lahf
outsb
ret
dec
push
repz
stos
sahf
inc
mov
dec
cltd
lods
xchg
and
test
lcall
pop
sub
xchg
imul
cld
sub
shll
sarb
bound
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
adc
add
add
add
sub
mov
into
mov
mov
push
punpckldq
ret
add
ja
xchg
and
mov
push
es
mov
adc
sbb
insb
dec
addr16
loope
das
lret
cmc
lcall
mov
cmp
add
pop
inc
imul
js
push
popf
sti
and
fnsave
out
xchg
fnstcw
or
sub
inc
jmp
cmp
push
add
inc
jge
mov
mov
pop
push
sbb
mov
movl
mov
leave
fsubr
lods
push
loopne
mov
scas
sub
inc
adcb
mov
xor
fstpl
hlt
aam
mov
pop
scas
xor
aam
out
push
test
inc
pop
fisttpl
add
repz
lret
sub
sahf
cmc
call
cmp
mov
jno
test
jg
push
pop
push
mov
addr16
add
add
add
push
dec
mov
jg
and
jmp
pop
mov
loopne
mov
mov
xchg
lcall
push
stc
sahf
scas
push
rolb
lds
mov
sub
arpl
mov
stos
mov
dec
cmpb
inc
inc
or
insl
mov
loope
mov
sub
dec
mul
mov
imul
lret
adcb
pop
xor
lret
sub
dec
outsb
ret
dec
mov
lods
sub
loopne
xlat
fs
mov
das
imul
adc
out
jmp
orb
fstps
fwait
pop
jp
mov
or
clc
insl
cld
add
mov
out
into
les
dec
icebp
aam
cmpsb
pop
push
mov
cli
xchg
outsl
iret
jb
mov
jnp
leave
dec
fidivl
std
push
xor
hlt
jb
sbb
dec
sub
jp
adc
jmp
add
adc
movsb
push
in
cmc
jne
sbb
js
jge
shlb
add
add
add
jo
xchg
xchg
ds
pop
ss
sub
xlat
sub
or
push
cs
jge
stos
sub
jnp
jmp
into
addl
xor
das
mov
jle
sub
sar
cmp
ret
les
and
imulb
mov
insb
jge
jbe
mov
push
ficoms
outsb
sarb
xchg
scas
call
jo
mov
add
cwtl
jo
add
sbb
jb
sbb
add
and
dec
sbbb
push
push
mov
jbe
mov
cmp
lret
jecxz
fldcw
cmp
out
out
out
adcl
pop
adc
rorl
aas
cmpb
push
push
push
sbb
scas
dec
push
lcall
addr16
sub
push
testb
sub
sub
sbb
shlb
aas
out
int3
mov
sti
jge
and
add
add
setae
lea
cli
aas
cmpsl
lret
jb
cli
dec
ret
pop
lcall
mov
hlt
clc
fnstenv
cli
xchg
sti
mull
xchg
mov
fildll
les
jne
fwait
dec
movsb
push
inc
loopne
mov
and
adc
imul
outsl
pusha
inc
and
push
sub
stc
fcmovbe
sarl
repnz
hlt
mov
jbe
inc
dec
sbb
iret
dec
std
leave
loope
ljmp
or
movsb
rcl
mov
scas
fldl
adc
aaa
mov
fisubrl
mull
sub
fildl
adc
jl
xchg
cmp
cmpsl
dec
mov
ror
into
mov
xchg
push
mov
pushl
inc
js
repnz
sub
mov
sbbl
jmp
push
push
iret
lahf
popa
sti
jno
xchg
sub
inc
outsl
push
jae
lcall
or
mov
and
xor
add
add
add
lahf
cmp
xor
jne
mov
and
fs
out
test
outsl
mov
fimull
and
pop
je
push
cltd
jo
add
inc
shll
loopne
movsl
ret
xchg
xorl
xor
or
ds
jge
sub
sub
xchg
aaa
je
mov
shll
fwait
mov
fidivrs
hlt
inc
mov
aaa
scas
jge
loope
in
jle
andb
out
pusha
rorb
gs
rclb
je
cs
pop
hlt
xchg
inc
lcall
mov
jnp
insl
xor
dec
xchg
into
dec
scas
loopne
inc
clc
add
push
data16
fucompp
push
inc
pop
lds
fstpt
add
out
enter
movsl
push
neg
inc
mov
and
pop
add
imul
leave
xchg
pop
xor
push
dec
popl
add
add
ret
bnd
cmc
inc
stos
repz
outsb
mov
add
add
add
add
int
pop
enter
sahf
inc
inc
out
push
scas
popa
mov
xchg
cmpsb
sbb
mov
xor
push
mov
adc
cmp
xor
push
jg
insb
sbb
sbb
or
adc
xchg
aad
fsts
imul
mov
mov
jns
sub
syscall
sub
cli
fmull
xor
fisubrl
or
cltd
jo
stos
mov
dec
push
mov
outsl
adc
addr16
fidivrs
add
mov
es
fstps
mov
dec
add
sub
adc
icebp
stos
pushf
in
xlat
frstor
or
out
push
imul
imul
aaa
int
int3
mov
lret
lds
inc
mov
sbb
inc
sbb
aad
adcl
das
ret
add
add
std
aaa
mov
shll
jg
add
add
icebp
pop
dec
stos
push
test
xchg
sub
insl
add
mov
and
sbb
push
jge
lcall
mov
fsubr
rcr
xor
stc
pusha
jp
adc
mov
sub
int
and
inc
mov
hlt
jl
mov
scas
into
fsubrl
arpl
push
je
add
cmpsb
mov
pop
sub
cmp
jb
dec
xchg
in
push
pop
jo
add
xchg
xchg
lret
jl
mov
out
mov
sbb
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
ss
add
ss
add
ss
add
ss
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
aaa
inc
add
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
aam
cwtl
adcl
inc
xchg
mov
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
