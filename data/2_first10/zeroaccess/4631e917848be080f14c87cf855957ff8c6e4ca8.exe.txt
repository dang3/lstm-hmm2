push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
test
jnp
pushf
jnp
ror
aam
ret
add
xchg
mov
xchg
test
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
dec
sarb
js
jl
add
test
jbe
sbb
cmc
and
cli
xor
mov
cmpsl
mov
sub
dec
fcomps
adc
stos
inc
add
xor
fcoml
or
dec
aaa
or
jae
in
cmp
or
imul
cwtl
dec
in
and
push
ljmp
push
int3
and
dec
loop
adcb
or
outsb
cwtl
fistpll
dec
mov
xor
mov
cmp
mov
or
xor
mov
test
test
add
pop
cwtl
inc
addb
xchg
movsb
and
sahf
pop
inc
adc
inc
imul
add
inc
aam
sbbb
or
cmpsl
jbe
adc
add
gs
jp
xchg
enter
push
inc
inc
movsl
pop
pushw
lock
lret
rclb
sbb
sub
das
out
xchg
push
popf
sbb
cmpsl
pop
sbb
mov
push
mov
lds
in
jl
sbb
addr16
mov
adc
and
dec
lret
sbbl
repz
jg
sbb
mov
shrl
repz
outsb
jmp
jge
push
sbb
cmp
cmpsl
or
xchg
pop
inc
mov
xor
xor
inc
fbstp
stc
out
imul
inc
xor
and
mov
rorl
xchg
pushf
xor
nop
scas
cs
mov
xor
incb
and
sti
cmpsb
rclb
adc
loope
mov
add
or
int3
jnp
xor
out
je
mov
lods
xchg
stos
inc
ret
pop
jno
cmp
mov
stos
or
imul
movsl
aaa
dec
sbb
push
add
sbb
sbb
pop
mov
icebp
je
loopne
andl
and
fs
push
jle
add
movsl
daa
push
mov
pop
fs
xchg
cmp
sti
xchg
jbe
movsl
mov
daa
adc
pop
xor
jl
inc
or
stos
addl
or
xchg
fisttps
cmc
test
add
jge
pushf
ja
xor
imul
enter
ret
stos
addr16
lock
es
sbb
xlat
xor
pop
mov
mov
fcoms
xor
inc
hlt
loope
mov
sahf
lret
add
mov
out
xor
loope
bound
jo,pn
pusha
cmpsb
insl
mov
push
sbb
inc
lret
jnp
stos
cmpsb
sbb
outsb
testl
mov
lods
js
inc
pop
nop
fwait
xor
mov
adc
lock
stos
cltd
inc
pop
mov
push
cwtl
sbb
ljmp
leave
imul
out
ficomps
adc
sbb
push
xor
xchg
gs
shl
icebp
dec
inc
test
rcrl
stos
imul
imul
lret
ret
nop
inc
xchg
or
leave
mov
adc
and
shlb
xor
fxch
popa
imul
push
lahf
jmp
andl
jmp
pop
ror
jb
imul
cld
popf
or
jb
sub
pop
jl
sbbl
mov
clc
push
outsb
cmp
imulb
push
mov
stos
cmp
mov
cld
js
add
aad
mov
push
add
mov
mov
pop
and
or
imul
inc
mov
inc
adc
clc
lcall
cmpsl
addr16
cmpsl
lock
out
cli
jmp
in
mov
leave
and
jo
xchg
sbb
cltd
int
fs
outsl
cmp
adc
mov
fbstp
mov
pop
jmp
test
push
mov
popa
add
mov
mov
push
push
shlb
xlat
mov
cs
lcall
out
sbb
pop
cs
mov
add
jns
ds
popf
lds
fs
push
inc
xlat
dec
icebp
or
xor
inc
mov
xor
adc
in
add
and
mov
nop
fcompl
xchg
scas
in
adc
nop
cmp
or
cmc
out
sbb
sub
test
mov
ljmp
dec
in
push
inc
daa
scas
jmp
sti
mulb
fstl
insb
mov
lds
adc
out
push
mov
test
dec
push
test
cmp
push
shr
test
and
pop
sub
push
mov
shll
xor
out
es
stos
inc
out
add
pushf
lock
out
pop
xor
push
push
push
jecxz
popa
sub
aaa
jne
push
inc
fidivl
ret
or
jne
lahf
sub
pop
cmp
push
iretw
pop
fcoml
mov
ljmp
cmp
inc
scas
mov
push
or
xchg
or
mov
jno
int3
sbb
es
push
add
arpl
imul
mov
and
pop
jb
xor
cltd
lcall
sub
pop
xchg
or
imul
test
xor
cmpsb
cmp
hlt
int3
inc
sub
shlb
vpsubb
cmp
data16
stos
and
add
pop
mov
out
push
cmpsl
adc
sub
je
out
push
out
adc
cmp
adc
lods
sub
xchg
push
mov
push
dec
jl
mov
daa
jbe
sarb
xor
stc
js
push
movsb
cmpsl
icebp
fwait
inc
cmp
in
xor
sub
faddl
cmp
pusha
inc
jno
mov
daa
fwait
hlt
inc
lret
xor
fwait
leave
cmc
adc
pop
adc
shlb
and
dec
sub
or
lds
pop
mov
popf
aad
out
aad
dec
fdivrp
sar
adc
jle
cmpsb
inc
and
mov
xchg
iret
fstpt
pop
es
or
into
cmp
xor
and
fisubrs
mov
pop
test
cli
mov
sarl
push
scas
into
mov
gs
mov
jl
mov
sub
out
cmc
inc
nop
int3
rcrl
ror
pop
lcall
enter
jo
inc
gs
pusha
mov
testb
xchg
and
xor
setne
loop
cltd
fadd
call
outsl
fcom
add
daa
cmp
cmp
add
aas
cmp
jmp
std
jne
jle
pop
add
les
mov
jmp
gs
push
imulb
scas
imul
gs
jns
xor
mov
mov
jmp
and
xlat
data16
sbbb
pop
mov
mov
ss
xchg
int
inc
jne
aaa
cmp
and
popa
add
pop
add
stc
sub
mov
ss
loopne
sub
mov
jge
xor
iret
in
mov
pop
pop
loop
inc
cli
ret
fldenv
in
fcoml
fiaddl
and
sbb
movsb
int3
popa
sub
sahf
and
icebp
sub
cli
aam
push
mov
sub
xor
mov
and
sub
fistpl
mov
sub
jp
test
hlt
test
lods
mov
jbe
loopne
mov
sub
adc
das
xchg
lock
test
in
xchg
cld
mov
jl
sub
cmp
xor
jno
ficoms
mov
jne
push
out
jmp
pop
add
dec
push
inc
inc
orl
mov
mov
mov
mov
fsub
clc
insb
xor
dec
in
xchg
in
sbb
adc
pop
cmp
jb
fcmovu
ret
xchg
lock
sub
inc
orb
sub
pop
cmpsl
jnp
jno
or
push
outsl
cmp
lock
fst
les
xor
mov
test
cwtl
sub
test
push
mov
push
ljmp
iret
dec
lahf
sarb
add
add
push
mul
or
inc
xlat
stos
xchg
mov
push
push
adc
cmpsb
pop
push
aas
mov
sub
shll
sub
mov
jle
inc
aaa
xor
mov
mov
xchg
sbb
les
jmp
sti
add
and
pusha
data16
xor
mov
add
rclb
xchg
loop
push
and
dec
dec
rcr
cmp
fldt
dec
and
push
add
push
js
sub
cmp
stos
fildl
in
stc
scas
clc
xor
jb,pn
or
in
pop
mov
sub
jbe
aas
mov
push
push
hlt
popa
adc
lret
push
rcll
dec
or
fs
jl
and
movsl
lds
call
dec
push
add
push
jg
movsl
hlt
daa
cmpsb
add
xchg
jle
stos
sbb
adcb
scas
xor
cmpsb
push
loope
lret
xchg
daa
dec
mulb
sahf
out
dec
jge
lock
cmpsb
paddw
push
daa
test
jns
sub
add
xor
pop
cmp
inc
std
pushf
aam
lods
inc
mov
ljmp
xor
mov
orl
mov
mov
adc
push
and
gs
dec
sub
xchg
jnp
jmp
and
push
loopne
mov
adc
aaa
fimull
aas
sahf
js
or
je
ljmp
lahf
ret
sbb
mov
outsb
jb
into
or
pop
cmp
mov
pop
sbb
pop
ss
push
ret
mov
push
push
xor
ret
mov
and
mov
popf
leave
mov
imull
stos
int
in
lods
inc
call
xlat
pop
sarl
out
sahf
mov
data16
test
xchg
cmpsl
iret
xor
jecxz
aas
sub
pop
inc
xchg
mov
sbb
cmc
jmp
sub
or
sbb
outsb
iret
sbb
push
stos
push
call
mov
int3
mov
test
mov
jns
outsb
mov
inc
std
mov
cwtl
scas
add
xchg
xchg
xor
sub
shrd
jg
sbb
sbb
push
push
inc
and
cmp
sbb
adc
testb
jo
lret
ja
add
sbb
pop
popf
add
sub
push
mov
mov
pop
push
insb
arpl
mov
jg
addr16
xchg
sub
or
adc
imulb
cmpsl
add
push
popf
dec
sti
dec
rcrb
lea
orb
mov
testl
cli
add
mov
push
pop
sbbl
cmpsb
fisttps
daa
mov
hlt
repnz
cmc
imul
push
sbb
lret
dec
and
in
gs
stos
insl
jle
std
xor
fldl
xlat
lcall
mov
fisubrl
decl
int
lock
clc
xor
or
sbb
xchg
lcall
aas
or
in
inc
sbb
pop
jo
aaa
adc
adc
adc
mov
sbb
loop
clc
cmpsb
push
lcall
fs
std
push
subb
aam
xchg
cmpsl
insb
adcb
xchg
fnsave
xchg
out
test
loop
ljmp
ds
push
sub
scas
mov
hlt
mov
out
pop
push
jbe
or
test
sahf
mov
adc
xchg
fisttps
adc
aad
mov
fisubs
jbe
scas
ret
dec
das
fimull
fiadds
std
scas
std
scas
sbb
pop
mov
icebp
sbb
add
adc
jbe
mov
fnsave
xor
cmc
mov
dec
mov
sbb
mov
xchg
outsl
cmp
iret
les
push
jle
add
pop
push
cltd
xor
in
fsts
xor
aad
jg
mov
mov
ja
sarb
dec
xor
mov
mov
rcll
aaa
int3
sub
xor
lahf
lock
pop
mov
lods
lods
es
mov
lret
popa
xor
sub
mov
and
jno
sbbl
fwait
out
jmp
aaa
mov
xor
inc
xor
jge
out
insl
lods
shl
je
sarb
jg
addr16
test
mov
mov
adc
leave
cwtl
jno
add
jnp
test
vpmacssdqh
arpl
in
jb
mov
jno
scas
mov
insb
xor
not
mov
rorb
sub
pushf
xchg
dec
xor
in
rolb
push
and
mov
sbb
mov
pop
inc
addr16
cmp
add
out
sbb
dec
mov
xor
sbb
and
fildl
sbb
dec
mov
push
ret
scas
or
stos
jl
sub
lods
in
cld
scas
mov
cmc
inc
dec
sbb
push
mov
mov
jecxz
and
data16
push
jno
mov
je
inc
ss
in
xchg
jl
and
decb
es
xlat
jb
sahf
sahf
ss
jg
stos
ja
fmul
cld
in
or
lock
mov
enter
stos
nop
aaa
sbb
or
dec
pop
movsb
sbb
fidivs
xorb
pop
fimuls
std
ljmp
inc
mov
imul
repz
pop
ljmp
pop
cmp
mov
inc
pop
push
call
mov
cs
loop
push
call
fcmovnbe
sar
lahf
or
adc
scas
inc
lcall
add
insl
sub
inc
pop
pop
jo
sbb
add
scas
or
cmc
jg
xlat
repnz
mov
addl
sub
adc
sbb
mov
xchg
ret
repnz
iret
testb
mov
xchg
les
ficoml
lret
xchg
xchg
sbb
or
pop
ds
xor
sub
cmpsb
loopne
sbb
andl
mov
insb
and
iret
sbb
dec
mov
pcmpgtb
dec
mov
mov
fwait
push
or
cmp
inc
mov
xchg
inc
ss
cld
xchg
fwait
repnz
sti
fistps
cmp
push
xor
lahf
inc
fadd
inc
shrl
decb
mov
jle
sahf
jo
mov
in
loopne
and
push
std
or
push
add
addr16
xlat
add
aam
orb
stc
shr
push
pushf
test
push
jbe
sbb
clc
push
sbb
cli
loop
or
mov
jp
jne
and
sub
mov
sub
inc
push
loopne
icebp
xchg
das
dec
cltd
fs
push
sub
daa
les
dec
mov
mov
loope
push
rcrb
pusha
mov
mov
pop
mov
mov
adc
or
jae
pop
lcall
sti
je
jecxz
push
testb
insb
popa
sub
xor
mov
mov
jns
cmp
cmp
push
sub
xchg
in
push
loopne
cmp
sarb
aad
pop
pop
dec
mov
jp
dec
sahf
jge
or
in
pushf
js
out
push
and
sarb
xchg
xor
js
xchg
or
inc
bswap
pop
gs
pmaxub
fstpt
inc
lods
insl
subl
mov
xchg
mov
shll
mov
push
xor
ds
aam
inc
in
test
mov
push
std
push
frstor
fs
out
xor
in
es
inc
xor
mov
sbb
jl
gs
adc
imul
mov
inc
jb
scas
xor
stos
sbb
sbbb
sbb
pop
aad
inc
fwait
sub
lret
jae
scas
leave
mov
sub
sbbl
and
xchg
jge
mov
out
loop
lea
cmp
scas
mov
mov
jp
loop
jae
pushf
insl
xchg
stc
in
xchg
loop
mov
repnz
mov
arpl
and
xchg
pop
fs
cmp
jae
iret
test
pop
cmpsb
inc
dec
mov
jl
xchg
std
arpl
popa
pop
insl
jp
xchg
jbe
jmp
cmp
bound
dec
and
out
lods
divb
pusha
addr16
in
aaa
or
jmp
sub
in
fwait
dec
or
out
cmpl
push
jecxz
push
or
xor
into
xchg
mov
rolb
es
sarb
xor
xorb
add
xchg
cmc
or
mov
outsb
jo
aam
xchg
mov
cld
sbb
data16
not
add
pop
push
nop
jmp
xor
pop
fcmovne
mov
enter
nop
aas
sbb
push
dec
fmulp
out
icebp
push
inc
or
xor
adc
inc
or
outsb
xchg
push
jo
add
int
fimuls
dec
inc
push
fisttpll
pop
sbb
inc
push
jnp
lds
inc
ss
hlt
stos
and
mov
dec
jne
mov
std
into
lahf
push
mov
pop
xchg
cmp
jnp
xor
sahf
sbb
mov
int3
aaa
mov
jmp
test
pop
fimull
and
dec
fstpl
pop
xchg
and
clc
cmp
pushf
aas
aas
inc
out
dec
push
fcmovbe
flds
in
pop
aaa
out
in
push
push
adc
lret
arpl
js
mov
cmp
sub
ljmp
rorl
data16
cmp
out
or
int3
lea
ljmp
repnz
loopne
lods
enter
out
jle
sbb
xchg
aad
sub
mov
fisttps
mov
nop
push
fs
jae
inc
mov
adc
sub
gs
cmp
js
push
mov
mov
sbb
das
insl
loope
sbb
xchg
lahf
inc
cmp
adc
jno
cmp
nop
hlt
and
aaa
insb
popf
pop
negb
pop
seto
push
mov
callw
ret
mov
add
mov
nop
sbb
jnp
cwtl
sbb
shll
mov
repnz
xchg
xchg
jo
movsl
xor
stc
rcl
mov
push
jle
mov
sub
push
fs
xor
fisubl
push
sub
pop
pop
sti
pop
sbb
push
int
in
push
data16
sbb
pop
cs
mov
outsl
push
push
lret
or
repnz
fcomi
pushf
or
aas
sub
adc
sub
xchg
div
outsb
jp
fwait
dec
shll
push
adc
jge
daa
das
cmp
dec
mov
loope
xchg
cs
jmp
arpl
mov
dec
fdivrl
pop
push
sbb
pop
data16
mov
pop
int3
adc
fsubrs
push
jns
cmp
xor
mov
mov
icebp
inc
mov
mov
inc
push
mov
inc
cs
jge
ret
and
out
ja
gs
xor
mov
lahf
add
sub
jge
fdivrp
lret
stos
test
mov
aas
adc
xchg
add
xor
sbb
aas
nop
addr16
mov
fiadds
mov
in
aam
xor
and
sbb
rorb
jg
xor
push
mov
in
fsts
sbb
dec
repz
clc
jg
add
ljmp
jno
scas
in
fs
jle
ret
faddl
scas
fwait
scas
hlt
xchg
addr16
ss
jl
inc
nop
pusha
mov
xchg
mov
lcall
jno
fdivl
insb
cmp
std
jl
xor
addr16
cmp
push
jbe
inc
dec
loopne
push
mov
mov
fcmovne
lods
cvtps2pi
fists
or
add
sbb
jo
mov
icebp
inc
mov
jns
sarb
test
repz
fs
inc
loop
push
mov
cmp
roll
push
loopne
enter
cmp
stos
ficoml
mov
pushf
arpl
test
sar
mov
cmp
in
pop
adc
mov
mov
ds
adc
lcall
mov
test
cmp
decl
int3
xchg
int
rclb
add
popf
cmp
lahf
das
push
out
mov
inc
jge
in
inc
mov
adcb
push
pop
inc
mov
out
leave
mov
jge
out
das
xchg
inc
andb
xchg
js
or
fistl
cmp
inc
pushf
outsb
mov
push
add
mov
cmp
push
popf
movsl
and
jmp
xchg
sti
push
fisubrl
inc
xor
out
lods
mov
je
test
popl
adc
jne
dec
divb
aad
sub
or
mov
cmpl
jge
dec
std
lcall
push
or
or
push
push
sbb
dec
or
adc
daa
sub
out
push
rcrl
mov
into
jb
sti
xor
mov
dec
fildl
jne
scas
dec
adc
inc
popl
pop
and
push
stos
pop
movsl
outsb
cmp
fldcw
repz
sbb
cmpsl
jmp
or
xchg
adc
push
sarb
mov
and
push
xchg
sbb
lret
push
push
les
scas
pop
outsb
rcrb
in
push
mov
mov
in
negb
sbb
mov
xor
lds
fisubs
insl
jl
es
adc
test
push
dec
or
aam
inc
sbbl
jg
fidivl
adc
xlat
inc
or
xchg
dec
inc
test
push
call
leave
testb
add
push
sbb
dec
icebp
push
outsb
add
jns
fwait
push
ret
in
xorl
or
test
fisubs
or
mov
mov
pop
ljmp
mov
or
push
inc
lret
lea
mov
xchg
push
push
or
and
jne
test
rcr
mov
jmp
pusha
roll
or
cmp
sbb
pcmpgtb
add
xor
sbb
xchg
ja
xchg
test
jo
icebp
add
or
sub
mov
mov
push
cmc
fwait
out
xchg
sti
mov
adc
add
gs
in
and
in
dec
push
and
adc
std
add
pusha
test
dec
inc
adc
jo
jns
mov
fcoml
stos
or
pop
adc
lret
mov
rcr
aam
pop
dec
xchg
push
cld
gs
xchg
lock
sbbb
test
adc
dec
andl
inc
jbe
sub
bound
jb
xchg
daa
sub
adc
lcall
dec
addr16
insl
pop
push
xor
and
enter
lock
fucomip
add
adc
cmp
push
stos
iret
aam
mov
inc
lret
call
sbb
ret
inc
xchg
mov
jp
call
inc
push
xor
jno
jg
dec
xchg
xor
jne
iret
inc
cltd
dec
jle
pop
xlat
mov
cli
adc
mov
mov
in
jmp
mov
mov
popf
push
arpl
imul
xchg
push
adc
insb
adc
sub
push
insb
sbb
in
cs
rcll
mov
insb
add
orl
push
arpl
xchg
bound
inc
repz
add
and
sbb
aaa
cmp
int
push
in
push
mov
bound
adc
stos
xor
mov
lahf
xchg
decb
ljmp
stos
jo
cmpl
mov
outsl
ljmp
int3
mov
mov
mov
ljmp
jb
movsl
pop
mov
lahf
imul
dec
adc
pop
pop
popa
sar
lret
dec
xor
inc
sti
or
xchg
popf
addr16
xchg
and
cmpl
int
adcb
call
incl
and
adc
out
mov
lret
int
dec
cmp
and
lea
cmp
jne
lret
push
push
xor
mov
dec
aas
lcall
push
ljmp
mov
pop
mov
imul
adc
and
push
sbb
mov
adc
leave
xchg
lcall
sbb
repnz
ss
mov
std
aad
mov
mov
or
incb
loopne
cmpsb
mov
jne
js
push
push
loopne
inc
mov
fwait
gs
stos
fdivr
fmull
mov
or
sbb
ljmp
xchg
ret
and
sbb
cmpsb
push
insb
jl
sti
xchg
adc
ja
out
push
movsl
jnp
add
fsubrl
pop
add
fwait
add
fidivrs
push
or
jmp
les
popf
and
ss
jne
addr16
imul
mov
js
rclb
push
push
push
cld
jnp
outsl
sub
ljmp
adc
cs
adc
mov
inc
adc
or
and
xor
adc
dec
jmp
adc
stos
xor
fisubrl
rolb
xchg
xchg
fnsave
icebp
lea
jmp
pop
xchg
and
lret
dec
xor
mov
push
lea
mov
xor
jb
out
daa
jo
inc
xchg
mov
pushf
add
loopne
addr16
test
in
jge
icebp
outsl
je
pop
ret
mov
xchg
sbb
scas
jo
movsl
std
inc
push
push
sub
cmc
cwtl
push
inc
out
cmp
xchg
mov
pop
push
loopne
xchg
cmp
test
loop
push
push
mov
push
and
or
imul
mov
push
jne
ret
push
call
mov
idivb
fidivl
aaa
pop
sarl
xchg
shll
mov
test
add
jle
lea
mov
repnz
shl
xchg
mov
les
sub
mov
pop
lds
lcall
icebp
or
jmp
std
cmpsb
test
pop
out
and
mov
jecxz
cmpsb
xor
sbb
mov
xchg
pusha
mov
mov
jge
adc
sbb
aad
xor
lds
and
or
mov
loop
out
sbb
loopne
jbe
ret
data16
aam
std
dec
rclb
imul
orb
jmp
insl
imul
mov
js
es
xchg
fs
sub
daa
jno
sbbl
push
lahf
sar
pop
pop
push
gs
aad
jbe
jp
movsb
into
sahf
jnp
mov
mov
adc
test
jne
jg
sti
rclb
add
cmp
ret
inc
sub
mul
pop
mov
xchg
xor
daa
mov
fs
cmc
and
cli
xchg
inc
icebp
inc
dec
mov
push
jo
je
arpl
aam
lods
sub
inc
iret
in
js
dec
dec
cmpsl
mov
fidivrs
test
push
jmp
fsubl
xchg
std
jl
and
pop
fcoml
sbb
xchg
gs
repnz
test
loope
mov
data16
sbb
cs
jb
mov
dec
incb
outsl
push
xlat
sti
daa
cmc
shrb
lods
push
sbb
jmp
dec
sbb
test
mov
sbb
ret
data16
sbb
and
or
xor
inc
and
inc
push
cmp
cwtl
nop
cs
cld
js
jns
inc
lret
popa
ret
push
mov
xchg
aas
pop
inc
cs
xchg
mov
daa
imul
inc
mov
rcrl
dec
test
out
xchg
sbb
mov
test
mov
aad
inc
int
arpl
lock
push
inc
bound
push
into
ficoml
icebp
cmp
add
pop
cmp
movsl
arpl
mov
xchg
sahf
push
xchg
mov
xor
cmpb
or
incb
push
or
jnp
push
cmp
or
pop
mov
pop
sub
ds
imul
jge
ss
and
aad
mov
inc
out
stos
insl
dec
lods
mov
sbb
jecxz
lea
mov
std
insl
adc
cmp
cwtl
lahf
ja
push
xchg
dec
aam
lea
xor
cmp
fsubl
aad
xor
sub
mov
cmp
out
jns
popa
and
cmpsl
push
stos
scas
push
sbb
sbb
test
xchg
decl
pop
xlat
mov
xchg
mov
xchg
add
js
movb
cmp
sbb
pop
mov
mov
mov
xchg
mov
enter
adc
repnz
xchg
fistpll
call
leave
shrb
push
xor
cmp
cmpsl
pop
popa
cmp
cmp
mov
js
roll
jbe
ficomps
outsb
push
out
push
xlat
xchg
lds
gs
adc
or
lcall
arpl
jnp
ja
or
in
fdivrl
lea
das
or
in
imul
push
adc
insl
mov
iret
mov
clc
insb
stos
sbb
cmp
fcompl
mov
call
and
out
fidivl
mov
mov
and
sbb
cltd
push
nop
push
cmp
sbbl
mov
outsb
push
cli
daa
popf
xlat
popa
dec
loope
push
aad
pop
sbbl
push
ffree
imul
mov
cltd
scas
cld
mov
bound
in
rorb
fnstcw
data16
jle,pt
out
lahf
push
mov
sahf
fs
pop
pop
lret
mov
fists
and
nop
aam
in
jp
push
adcl
stos
xchg
cmpsb
inc
sahf
mov
mov
pop
movsl
xor
or
loop
lock
sub
loope
and
cwtl
and
sub
push
and
mov
adc
cmp
jecxz
add
sbb
push
push
insl
mov
add
sar
mov
jae
lods
cltd
repz
jnp
jo
cmp
jo
jnp
repnz
mov
aad
mov
mov
mov
sub
dec
push
push
cmpsb
dec
je
jno
jge
fcompl
cs
rcr
cwtl
lcall
jg
jmp
arpl
cmp
psrlq
imul
dec
adc
sbb
test
fmul
repnz
stos
in
mov
std
mov
and
sub
adc
cwtl
mov
cwtl
and
mov
scas
jge
dec
add
inc
ret
out
addr16
cmpb
aam
fdiv
or
and
ret
out
add
sti
es
mov
subl
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
nop
jo
hlt
pushf
jnp
hlt
pushf
jnp
test
test
aam
jnp
adc
mov
or
js
cmp
pushf
shrb
sbb
stos
addr16
push
dec
in
cmp
mov
mov
add
adc
xor
sub
outsb
in
sti
adc
rorl
jns
fisubs
in
sbb
imul
mov
jge
pop
sub
xor
jo
rcll
xor
scas
mov
or
xchg
sub
fs
jb
gs
dec
xchg
push
adc
mov
outsl
xor
fcmovnbe
adc
mov
data16
ret
push
inc
or
imul
jp
pop
aad
xchg
sti
xchg
push
push
cmp
rolb
xchg
lock
decb
xor
std
outsb
lret
adc
call
jns
loope
jnp
ja
inc
or
movsb
pop
add
sbb
mov
imul
dec
adc
ljmp
in
shl
cmc
into
sahf
xor
pop
je
dec
imul
dec
mov
sbb
and
adc
sub
cmpl
icebp
and
sub
add
addb
lret
mov
imul
mov
int3
shl
popf
sarl
sbb
ret
pop
sahf
vphaddudq
lods
pop
xchg
pop
adc
pop
fdivrl
loopne
inc
mov
xlat
xchg
jle
cwtl
mov
iret
dec
pop
sub
xor
adc
hlt
dec
mov
stos
out
jle
mov
xor
cmp
cmp
mov
dec
add
cmp
xchg
aas
sub
dec
data16
cltd
jne
jno
adc
pop
and
or
adcb
pop
mov
movsl
push
sub
jno
arpl
cwtl
clc
xchg
sub
xor
fnstenv
adc
sbb
xor
sub
or
sbb
push
aaa
inc
dec
negl
mov
int
push
jbe
cmpsb
in
rcll
je
leave
fwait
fwait
adc
fs
xlat
pop
fdivp
ljmp
enter
push
mov
mov
pop
jo
outsl
mov
xchg
popa
sub
adc
adc
dec
inc
cmp
pop
inc
pop
or
and
in
in
lret
sbb
jg
lods
sbb
add
sub
pushf
jecxz
xor
mov
dec
or
and
jp
pop
pop
movsl
cmpb
mov
push
pop
mov
leave
mov
mov
das
or
mov
aad
mov
add
pop
cs
mov
pop
xchg
cmpsl
jmp
sbb
sbb
aam
mov
pop
in
pop
dec
ja
sti
mov
sbb
mov
andl
jns
out
std
and
dec
out
inc
pop
add
dec
sti
inc
lret
sti
jae
ljmp
js
sti
aad
in
imul
aam
add
fs
mov
adc
divl
xchg
cmp
inc
stos
fidivrl
mov
push
mov
xchg
shll
mov
adc
pop
pop
fbstp
negl
int3
adc
inc
mov
mov
fwait
jecxz
sbb
push
mov
sahf
mov
sbb
pusha
stos
and
inc
shrb
mov
sbb
xor
push
xchg
fsts
test
add
sub
in
in
mov
in
lods
shlb
jle
pop
jne
xor
jns
push
sbb
lcall
cmp
cmc
sbb
mov
gs
in
mov
into
lods
push
add
pop
push
or
jecxz
ret
dec
jmp
aad
sbb
cmc
daa
clc
pop
inc
pushf
sub
sti
jns
add
push
mov
out
cs
cltd
orl
and
insl
pop
sub
data16
or
mov
dec
mov
sbb
adcb
dec
mov
fadds
sub
loope
pandn
sbb
jae
addr16
cmp
cmp
mov
in
clc
test
out
fwait
xchg
xor
dec
aad
in
push
movsb
lcall
fcoms
ljmp
aas
rclb
bound
ds
push
cltd
in
cmpl
pop
jle
sbb
mov
inc
pop
push
jecxz
mov
jae
je
dec
in
sbb
insl
jle
inc
test
into
xorl
aad
push
fidivrs
mov
in
push
lea
popf
repnz
jp
jo
dec
xchg
sub
inc
add
cmp
inc
sub
inc
fmuls
sbb
iret
enter
push
add
mov
in
add
andb
mov
mov
dec
sbb
xor
jge
std
adc
sub
pop
loop
mov
sbb
mov
or
rolb
push
or
dec
mov
aas
inc
jmp
cwtl
insl
rcrl
sbb
int
pop
lret
test
stc
sbb
data16
jae
push
mov
repz
aad
mov
ret
in
or
orl
adc
das
cltd
or
sbb
insb
pop
adc
js
in
test
adc
jg
mov
add
clc
add
lret
fisttps
scas
nop
arpl
iret
clc
and
scas
shlb
fcoms
mov
sbb
xchg
xchg
mov
cld
mov
push
xchg
mov
mov
mov
jae
mov
out
fcomps
jp
jno
and
and
enter
mov
bound
mov
jnp
push
push
sbb
jg
test
jo
mov
push
mov
in
sbb
movsl
je
sub
mov
pusha
sarl
daa
mov
and
test
fisubl
aad
ljmp
mov
dec
test
jle
aad
mov
xchg
add
imul
aas
xorl
out
cs
les
mov
dec
daa
and
and
inc
negb
outsl
and
out
xor
lret
cli
and
cmp
adc
inc
jo
xchg
add
and
and
jl
idivb
and
cmp
mov
mov
int
addr16
pop
cmp
push
ret
xchg
ficoml
xor
into
mov
movsb
mov
mov
dec
call
xchg
jnp
push
or
push
cli
or
sbb
int3
xor
inc
and
lret
fucom
je
js
push
inc
lahf
push
mov
aaa
insl
icebp
push
cmpsl
repz
adc
in
loopne
in
scas
jns
adc
out
aad
sub
xor
xchg
inc
add
xchg
xchg
leave
repnz
cmpsb
sub
pop
mov
sub
dec
adc
mov
int
jg
lahf
inc
push
repnz
mov
scas
pop
push
adc
iret
inc
or
push
adc
les
and
mov
push
mov
enter
xchg
sti
mov
sub
pop
xor
or
lahf
adc
push
push
out
fmul
and
cmpsb
dec
sub
sub
neg
nop
mov
sub
jb
fmuls
leave
in
cmpsl
outsl
aaa
lods
jno
mov
popa
push
cli
dec
in
popa
outsl
imul
std
push
jae
and
add
shll
es
es
shll
leave
lods
in
hlt
inc
out
jns
das
adc
mov
cmp
push
inc
push
pop
or
std
sub
cmpb
xchg
pop
nop
mov
xchg
in
popf
lock
xchg
push
xchg
sti
push
fidivrs
xor
stc
fcoms
xchg
and
pop
jo
gs
xor
mov
mov
xchg
lcall
mov
jbe
hlt
inc
xorl
dec
mov
inc
scas
movsl
cmp
cmpsl
ret
xor
sbb
cmp
lock
sbb
outsb
mov
sub
es
test
xchg
xlat
ja
or
mov
daa
cli
idiv
xchg
test
pushf
shrb
sbb
cltd
push
adc
inc
mov
inc
loop
push
pop
ss
add
int3
xor
jg
push
fcomi
jae
lret
shlb
cmp
xor
clc
out
nop
push
lods
ss
xchg
filds
xor
les
lods
jg
lret
aas
xchg
fsubl
mov
xchg
testb
lods
negb
sub
push
and
cmc
pop
pusha
imul
bound
aam
test
decb
int
and
adc
and
enter
and
xor
iret
xchg
inc
movsl
pop
repz
and
scas
cmc
ja
data16
inc
divb
pop
outsl
pop
lcall
jp
inc
mov
lock
in
leave
ljmp
fwait
cmp
pop
sub
push
pop
inc
add
std
inc
xchg
cltd
mov
cmc
repnz
mov
jae
out
xchg
call
sarl
mov
mov
sti
cmpsb
pop
test
nop
add
add
cmp
sub
xchg
sub
push
and
adc
cwtl
sbb
mov
out
loop
mov
ljmp
scas
mov
ror
jne
adc
xchg
in
pop
dec
enter
lods
sub
test
dec
je
cmpsb
add
hlt
call
xor
jns
lods
mov
dec
shlb
mov
pushf
fsubl
ret
loope
ljmp
dec
xchg
pop
and
adc
inc
pop
nop
scas
fdivs
imul
in
sbb
dec
movsb
mov
mov
push
sub
pop
mov
ljmp
or
ja
orl
push
test
call
orb
dec
xchg
mov
mov
cwtl
jle
xchg
dec
pop
and
xchg
loop
pop
rcr
es
mov
xor
sbb
ds
inc
mov
xchg
fmul
inc
inc
pop
enter
dec
jnp
rorb
push
call
xchg
iret
xchg
adc
jl
or
dec
xor
push
xchg
lea
xchg
jbe
fists
cli
cmp
in
frstor
xchg
xchg
xchg
sub
jmp
movsb
cmp
or
push
push
cs
into
or
pusha
movsl
dec
xor
test
mulb
adc
mov
movl
ret
scas
sbb
es
and
mov
in
sub
or
adc
dec
mov
sbb
das
cmp
dec
xchg
sbb
sbb
es
jmp
mov
xstore-rng
cmpsl
add
mov
mov
lcall
enter
mov
iret
fdivl
sbb
outsl
mov
inc
dec
inc
mov
xor
or
fistl
jnp
inc
icebp
dec
test
mov
out
lock
add
jne
adc
lea
jnp
mov
lods
pusha
sbb
push
lret
ret
test
test
sbb
or
std
test
adc
jle
cmp
ja
adc
ljmp
lods
jge
inc
add
or
jae
pop
daa
xchg
sarl
cltd
cld
test
cmp
adc
lret
movsb
clc
rclb
pop
jno
lock
jl
sarb
fistpl
adc
xor
fldenv
in
inc
mov
mov
jmp
push
sbb
out
lods
jl
cld
sub
pop
decl
fcoml
leave
jge
and
sub
setge
cwtl
add
mov
inc
loope
push
push
jge
inc
addb
test
sbb
or
inc
popa
rcrb
daa
mov
gs
popa
jge
shll
sbb
inc
push
mov
mov
inc
mov
enter
scas
xchg
push
adc
push
leave
sti
iret
and
xchg
mov
rol
scas
fcoms
mov
testl
xchg
jg
pop
sub
xlat
lock
cmpsb
mov
dec
xor
xor
in
inc
cmpsb
cmp
out
inc
sub
mov
sarl
aam
mov
sbb
mov
iret
dec
insl
notb
xchg
jge
add
cmp
adc
and
mov
cmp
pop
xlat
sbb
jb
std
adc
imul
mov
xchg
in
or
leave
and
dec
outsb
clc
iret
out
mov
xor
sub
xchg
bnd
push
jnp
arpl
out
push
outsb
xchg
movsb
jbe
mov
inc
xchg
pusha
sbb
xchg
icebp
call
cmp
daa
ljmp
mov
adc
add
loope
fsts
clc
fimull
das
fcmovbe
jmp
adc
jecxz
inc
push
shr
subl
fwait
enter
xor
jecxz
dec
sbb
into
jne
or
inc
xor
test
mov
push
pop
scas
shl
mov
dec
adc
and
pusha
in
loopne
rorb
mov
dec
push
add
movsb
sbbl
pop
sarb
sbb
jo
xor
out
jae
jmp
rolb
cmp
mov
lea
mov
sahf
js
gs
and
pusha
fldcw
dec
pop
jecxz
pop
flds
jge
daa
cmp
sbb
test
push
cli
sarl
mov
add
or
rcrl
mov
sbb
orb
ljmp
jge
cmp
repz
dec
mov
in
mov
or
test
mov
xchg
cmpsl
mov
or
xlat
push
test
out
sub
mov
pop
stos
lcall
std
pop
jae
fwait
cmpsb
mov
flds
fimuls
icebp
testb
popf
pop
inc
xor
push
addr16
loopne
add
mov
test
sub
sub
or
pushl
mov
push
inc
in
push
call
aam
push
js
add
jge
pop
mov
popa
shrl
jbe
addr16
push
iret
cmp
cli
xor
lods
stc
call
inc
mov
dec
icebp
mov
mov
mov
jnp
aas
mov
cwtl
cmpsl
ret
pop
jno
inc
or
mov
pop
lods
cmpl
std
popa
and
popa
loop
jge
ret
sub
sub
sbb
mov
push
negb
test
jg
lock
cmp
shll
dec
ds
popa
jg
push
repz
xor
sbb
sbb
stos
out
jne
mull
sub
dec
gs
dec
xchg
pop
test
popa
push
xchg
jbe
ficoml
rclb
fistpl
nop
adc
and
ds
repz
pop
add
push
int
mov
xor
fidivs
push
aaa
xlat
mov
xor
add
scas
push
pop
fidivrl
pusha
icebp
mov
or
ficoml
push
mov
mov
cli
adc
mov
mov
mov
loope
int3
adcl
mov
lods
clc
xor
pushf
sbb
mov
jae
inc
xchg
cwtl
inc
ror
jnp
xchg
das
cwtl
lods
movsl
daa
cltd
subl
inc
movsb
div
stos
jp
addr16
cmpsb
mov
ja
ja
push
mov
aaa
jge
test
int3
inc
outsl
mov
xchg
inc
fwait
in
push
cmp
test
out
or
out
xchg
fisubl
adc
fldt
mov
jg
inc
pushf
jnp
sub
hlt
lret
sub
xchg
jp
push
pop
dec
popl
mov
fistps
push
fnsave
xchg
notl
xchg
insl
insl
dec
std
popf
fistps
call
mov
mov
cmp
test
jns
mov
mov
fstpt
sbb
imul
cmc
mov
stos
or
mov
sti
ljmp
aas
testl
stc
xchg
jno
xchg
pop
std
mov
mov
les
movsb
push
add
dec
inc
cmp
xor
dec
sub
sbb
stos
jno
stc
adc
aaa
push
push
inc
mov
aas
push
pop
pop
je
sub
xor
mov
add
sbb
pop
cwtl
mov
add
nop
shl
sbb
mov
loope
gs
out
in
pop
sbb
les
sarb
sbbl
jne
cmpsl
cmp
mov
sbb
fsubrs
insl
dec
add
jno
mov
sbb
mov
out
in
pop
jae
fwait
rcrb
ficoml
dec
aam
lods
fwait
es
fs
insb
dec
jno
dec
lret
lcall
jl
inc
jmp
mov
dec
lret
outsb
cmp
adc
xchg
mov
mull
mov
scas
test
mov
out
out
add
fidivs
push
mov
and
mov
mov
gs
nop
sbb
sbb
pop
jmp
shrb
fs
jnp
subl
sub
fucomp
inc
outsb
adc
adcb
pop
pop
push
dec
mov
int
add
mov
arpl
scas
pop
enter
push
xor
cs
int
xchg
imul
or
lea
mov
jmp
push
push
sub
fisttpll
fyl2x
stos
or
hlt
cmp
in
sbb
lock
xor
xor
xor
lock
fucomi
jmp
push
insl
insl
fisttpl
cmp
iret
push
inc
add
jb
outsl
mov
mov
fstp
cmp
inc
loop
mov
inc
add
mov
es
loope
sahf
je
push
xor
or
vpcmpeqd
out
pop
sti
jbe
pop
movzwl
or
mov
cmp
pop
sub
pop
jmp
xlat
dec
enter
jne
fwait
jno
sbb
inc
lretw
pop
or
rcr
popl
repnz
inc
add
and
popa
fcoml
mov
dec
cltd
pop
pop
icebp
aam
test
push
pushf
ja
out
fsts
inc
subl
ret
pop
jecxz
adc
pushl
sub
mov
jb
cwtl
bound
lds
fdivr
mov
mov
jb
imul
mov
imul
les
mov
arpl
inc
mov
xchg
aas
pushf
lahf
fucom
in
mov
cmc
fwait
push
adc
loop
test
lods
pop
sub
pmullw
fisttpll
leave
enter
xchg
int3
ret
clc
dec
mov
repnz
fwait
jmp
push
dec
out
cmp
jp
xor
and
cmp
fnstcw
jne
jmp
into
repz
fimuls
adc
imul
jecxz
xor
push
inc
sbb
sub
pop
cmp
fs
cmp
mov
dec
jp
jb
mov
das
sbb
push
imul
inc
aad
es
int
lods
push
cmp
fs
inc
mov
sbb
cli
je
or
repnz
lahf
xchg
cmp
xor
sti
in
lea
mov
insb
shlb
jmp
shl
cmp
ffree
lds
jle
xchg
adc
jmp
mov
pop
push
xchg
sbb
and
adc
mov
and
ja
loop
fcmovnbe
aas
xor
mov
push
imul
lods
or
and
fldt
mov
ja
pop
or
dec
iret
dec
shlb
push
sbb
outsb
pusha
lahf
xor
mov
fcoms
mov
rcrl
inc
push
adc
adc
pop
aaa
mov
gs
sub
push
pop
sub
xor
cld
inc
push
mov
add
fildl
cmc
pop
in
or
ss
xor
repz
dec
cltd
mov
adc
dec
dec
jp
repnz
fcompl
and
add
cmp
push
stos
xor
sub
mov
pop
or
lcall
xchg
xchg
int3
jp
int
lsl
inc
mov
data16
test
out
add
or
mov
daa
loopne
xchg
dec
inc
gs
clc
cmp
daa
pop
repnz
lcall
xchg
jb
popf
ljmp
mov
stos
xor
adc
cmp
and
fdivrl
and
cmpsb
data16
sti
leave
lock
idivb
dec
jmp
test
add
sbb
inc
mov
xchg
push
xor
ljmp
sub
fildll
pop
test
into
dec
jb
les
mov
xchg
insb
or
gs
cmp
scas
cmp
aad
pusha
fwait
mov
outsl
ja
sub
dec
daa
insl
std
xchg
push
mov
pop
inc
lcall
adc
mov
ljmp
out
dec
adc
push
pop
and
sbb
test
dec
iret
push
mov
xor
dec
push
cli
or
fs
xor
jb
sub
xor
outsl
push
jecxz
cs
mov
xor
add
adc
aaa
push
fs
mov
pushf
rolb
popf
data16
outsb
sti
sub
clc
jne
call
stos
paddq
inc
in
fcomp
jo
shrb
cmp
and
test
in
jecxz
pushf
mov
cmpsb
rcl
lea
movsb
xor
fs
pop
dec
stos
push
inc
mov
loop
scas
lods
push
inc
mov
ss
xor
inc
fwait
aas
jns
mov
mov
lcall
xchg
mov
jecxz
mov
jp
andl
add
pop
sbb
iret
add
mov
rorb
inc
add
add
loope
sub
jle
call
inc
out
lods
std
or
or
pop
in
popl
adc
mov
ss
cmp
add
dec
addr16
and
fldenv
jge
xor
dec
xchg
xor
pop
add
out
mov
insl
or
andb
mov
lods
daa
shll
push
inc
inc
cmc
lcall
xor
into
je
push
aas
leave
push
cmpsb
lret
enter
jg
das
and
sub
sub
add
mov
inc
cltd
adc
mov
popa
pop
lcall
fstl
mov
pop
jle
and
sti
jle
rorl
xchg
repz
xchg
dec
jmp
dec
popf
loope
jecxz
movsl
or
lcall
in
dec
aad
pop
mov
xchg
jecxz
xor
aas
subl
mov
aaa
rcrl
sbbb
aas
cs
shlb
aas
adc
sbbl
aam
push
dec
mov
daa
es
addl
inc
cmp
out
xchg
ljmp
lock
lret
push
xchg
ret
fistl
cmpsl
fcmovb
out
add
nop
rcl
stc
mov
mov
mov
sti
idivl
in
ret
shl
mov
xchg
mov
push
loope
and
mov
add
fwait
repz
xchg
addb
ds
sbb
notl
daa
xor
pop
cltd
inc
loope
lods
mov
icebp
mov
popf
push
push
into
push
and
dec
pop
jmp
lret
out
cli
jg
jecxz
cmpsb
sub
notb
ljmp
loope
jne
gs
cld
fwait
loopne
das
loope
fcoml
stos
push
loop
and
bound
orl
sarl
shlb
popf
nop
add
push
mov
hlt
andl
jmp
mov
pushf
iret
std
pop
push
mov
cs
mov
and
pusha
adc
xor
ljmp
es
mov
dec
pusha
inc
xchg
cmc
fisubrl
imul
push
pop
js
mull
leave
clc
xor
sub
loopne
ss
push
ret
pop
inc
jnp
shll
mov
cs
mov
in
inc
aas
inc
add
dec
push
push
mov
xlat
mov
les
xor
ret
std
bound
dec
add
xchg
js
ljmp
clc
jmp
repnz
xlat
sbb
or
adc
dec
jbe
out
push
mov
outsb
push
leave
add
mov
flds
xor
sahf
jmp
test
jecxz
add
iret
jae
in
xchg
sahf
rcrb
mov
loopne
icebp
adc
mov
xchg
xchg
mov
add
push
rclb
or
or
jb
push
mov
add
jno
sbb
and
xchg
push
popf
jns
sahf
aaa
inc
ret
jne
or
stos
out
adc
pop
subb
dec
pop
out
test
cli
je
push
into
jg
add
cmp
jg
icebp
adc
lret
enter
mov
fisttpl
das
lret
mov
lcall
insb
into
pop
xor
dec
jo
cmp
lods
mov
jo
push
loope
mov
dec
into
lahf
push
bound
sub
fimull
mov
xchg
push
sub
nop
or
jno
fsubr
scas
dec
mov
repnz
push
fwait
test
fbld
lcall
mov
test
enter
push
push
push
cmc
dec
les
push
xlat
lea
call
addr16
nop
and
xorb
mov
mov
ljmp
or
jecxz
sbb
xchg
divl
daa
lret
dec
movsl
int
mov
dec
jnp
iret
out
or
adc
inc
out
pop
daa
sub
pop
int
mov
lret
pusha
scas
adc
mov
out
jns
cmpsl
mov
and
orb
mov
lock
in
std
jb
push
push
mul
pop
add
xchg
mov
mov
enter
fcomip
lods
push
push
cmp
or
je
faddl
pushf
add
cmp
pushf
rcll
xor
lods
dec
lcall
inc
push
out
test
lods
in
ror
outsb
xchg
roll
pop
cs
sbb
test
xor
mov
adc
jge
cmp
stc
mov
dec
pop
pop
xchg
xor
sub
mov
push
xchg
jmp
sub
push
pop
and
fs
jne
mov
hlt
or
pop
cld
rol
dec
movsb
rolb
cmpsb
dec
mov
and
clc
popf
and
out
out
pop
test
lcall
rcll
out
jg
jge
pop
pushf
idivb
or
mov
xchg
mov
imul
push
cld
mov
mov
ds
stc
dec
mov
jecxz
insl
pop
xlat
adc
cmp
pop
hlt
jp
or
adc
push
xchg
out
outsl
push
and
push
orb
jno
sub
into
fimull
push
inc
sbb
jmp
sbb
and
out
push
aaa
popf
add
into
ficomps
push
sbb
aad
fidivrs
test
xchg
je
adc
insb
out
sbb
xchg
enter
out
cs
dec
xchg
mov
jmp
sbbb
mov
mov
add
push
xor
adc
lock
std
ss
cmpsb
enter
sub
add
mov
std
adc
jnp
scas
xchg
add
xor
fcoml
repnz
lahf
mov
lcall
adc
cmc
jb
jae
int3
ss
mov
addr16
ds
jp
jge
inc
mov
mov
std
add
and
aad
mov
fistpll
sbb
inc
sub
fisttpll
dec
adc
adc
iret
and
sbb
and
jg
inc
aas
xor
mov
dec
js
xchg
icebp
shl
pop
jae
daa
xchg
int3
cmp
daa
test
sub
rol
push
sub
cmp
idivl
inc
mov
js
in
stos
movsb
push
addr16
xlat
scas
arpl
fmulp
repz
xlat
sti
addr16
hlt
enter
outsb
jnp
outsl
ret
lods
outsl
mov
xchg
test
pop
push
adc
sbb
das
fisubrs
sub
enter
mov
fdivrl
pushl
or
je
stos
ret
jle
push
dec
jae
cmp
icebp
jb
enter
test
xchg
mov
es
add
inc
call
sbb
and
scas
xor
jb
repz
add
test
int
clc
mov
rolb
cmp
hlt
mov
leave
icebp
repz
sbb
pop
call
mov
or
jnp
outsb
cld
fsubl
js
sti
add
mov
jg
in
cmp
jecxz
mov
xchg
nop
ss
and
stos
xchg
iret
add
push
push
adc
dec
adc
lret
pusha
sub
dec
or
pop
add
mov
pop
cli
jae
add
je
sbb
hlt
test
and
jae
aam
xchg
xchg
sbb
out
push
xchg
mov
sahf
pusha
pop
xor
pop
fstps
gs
out
xchg
adc
scas
cwtl
dec
cld
nop
dec
outsb
and
fadd
jmp
mov
gs
mov
inc
dec
sbb
loopne
flds
fcomp
dec
cmp
lods
or
loope
sahf
jnp
movsb
cmp
movsb
stos
test
arpl
das
sbb
push
cli
mov
dec
mov
imul
ljmp
in
pop
pop
adc
xchg
sbb
das
sti
bound
in
loop
push
call
sti
cwtl
ficomps
dec
mov
mov
jo
lahf
xor
or
fsubrs
and
pop
push
cmp
ja
xor
mov
sbb
mov
sub
iret
add
add
mov
mov
in
inc
pusha
and
or
cmp
repz
xor
clc
push
fists
pop
daa
fimuls
xchg
jae
enter
andb
ljmp
pop
aas
fxtract
cmp
bsr
divl
aas
mov
nop
mov
je
rorl
cmpsb
add
lea
adc
push
fisttpll
test
push
arpl
and
je
push
mov
out
loope
and
mov
scas
jecxz
pop
lock
push
mov
addr16
push
movsl
pop
fcomps
inc
pop
frstor
xchg
sub
iret
jne
mov
mov
pop
cltd
xor
andb
fs
fsubrs
in
cmp
adc
fsubrl
repz
xlat
bound
sub
or
add
push
xchg
daa
dec
pop
push
popa
out
stos
and
inc
or
jb
hlt
xchg
or
lods
add
cs
add
cmp
jmp
cmpsl
cmp
out
iret
dec
xor
mov
jbe
pop
inc
addl
cmp
ja
cmp
dec
pop
jb
or
jns
jns
cmp
enter
adc
mov
push
loop
mov
cld
push
xchg
mov
call
and
cld
mov
cwtl
outsl
mov
xchg
cld
ret
sub
nop
sbb
xor
xchg
add
out
aas
inc
jmp
dec
scas
mov
test
mov
cld
inc
push
icebp
mov
jle
push
fcoml
add
shll
cmp
mov
mov
push
rclb
sbb
pop
pop
add
push
fisubl
orb
or
xor
xchg
pop
nop
jae
push
lahf
and
lcall
leave
scas
mov
fiaddl
xor
sbb
in
dec
es
xor
inc
test
rorl
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
push
sarl
pushf
jnp
push
pop
jbe
pop
test
add
dec
push
inc
fmuls
rcll
xor
cmp
or
fcomi
outsl
je
shrl
push
cwtl
push
in
rorb
scas
ret
xor
idivb
aas
xchg
cmp
mov
into
pop
fidivrs
in
ss
addr16
add
repz
incb
add
sub
push
fsts
insl
out
mov
or
jle
cwtl
xorb
sbb
pop
stos
repz
call
hlt
out
leave
xchg
movsl
inc
nop
stos
repnz
jno
cld
in
stos
jp
insb
cmp
mov
mov
inc
fldcw
sarl
jb
pushf
int
xchg
push
in
inc
in
in
and
inc
jns
mov
inc
mov
adc
dec
mov
shl
fistpl
lock
cmp
jnp
rclb
outsl
mov
mov
loop
incl
cmp
sbb
loopne
cmp
icebp
repnz
dec
inc
sub
push
adc
das
push
jg
mov
sbb
les
lods
insl
cmp
xchg
aam
dec
mov
and
imul
in
arpl
pop
in
add
and
sarb
add
data16
inc
and
addr16
cmp
xor
pop
push
inc
jge
shll
outsl
adc
or
lds
cltd
dec
insb
out
mov
add
adc
sub
leave
bound
mov
lahf
pop
fcompl
jae
cltd
inc
lret
adc
add
lds
insl
pop
das
sbb
sub
arpl
jae
bnd
testl
mov
adc
clc
call
pop
pop
mov
jb
push
xchg
repz
or
xchg
jbe
jb
mov
mov
jmp
nop
or
or
fldenv
cli
bound
add
lahf
hlt
inc
or
mov
loopne
loop
negb
into
mov
push
cmpsb
cld
mov
push
xor
in
jb
popa
dec
mov
inc
sti
sub
cli
cmp
lods
cmp
into
int
xor
bound
dec
stos
xor
gs
leave
mov
sbb
xor
adcl
xchg
jno
and
aaa
xor
lret
js
cli
pop
mov
dec
dec
xchg
lods
rolb
loop
inc
jl
lods
adc
xlat
dec
mov
in
neg
push
mov
dec
jmp
inc
push
daa
mov
arpl
push
dec
mul
aad
pop
rolb
adc
loop
xchg
mov
out
lock
out
insl
jmp
scas
inc
ja
adc
pop
cld
repnz
shll
andl
insl
push
cmp
xor
fwait
add
rorl
jg
ret
cmp
push
rclb
rcr
int
ficoml
add
das
xlat
aas
dec
cmp
out
fistpll
stc
push
sahf
mov
cmp
outsl
ds
jge
rorl
scas
stos
rcrl
mov
in
mov
es
icebp
and
scas
jne
popf
mov
xchg
in
stc
test
or
adc
movsb
leave
sub
and
jle
subb
sub
bound
iret
lahf
lock
and
jb
mul
sbb
mov
mov
pop
test
mov
imulb
dec
insb
cltd
xchg
pop
scas
sbb
push
inc
mov
insl
insl
es
sub
mov
stos
add
xlat
dec
push
stos
cmp
into
inc
js
cltd
cld
mov
data16
jmp
loope
sbb
dec
lret
jle
push
addr16
shlb
cs
cmpl
cmpsb
out
and
out
idivb
xchg
cmpsb
fdivrp
cmpsb
sbb
leave
sbbb
xor
ficomps
call
repz
lret
jae
out
pop
or
cmp
in
nop
jns
mov
repz
and
shlb
dec
add
out
fisubrs
dec
sbb
dec
shrl
xor
push
mov
lock
mov
cmp
jl
lcall
push
es
dec
xchg
inc
fstps
adc
jne
cmp
fscale
add
xor
push
push
fidivs
rcl
inc
xchg
cmp
xchg
arpl
cli
jo
mov
out
aam
pop
decl
paddsw
pop
xchg
fcmovb
les
leave
xorl
ss
cmp
add
mov
sarb
xor
push
lods
pop
test
xchg
jge
push
cltd
call
pop
cmpsl
xchg
push
pop
lock
adc
xchg
pop
pop
mov
add
mov
push
or
push
add
xchg
rolb
mov
dec
push
cltd
sub
cld
mov
push
fists
mov
test
pop
push
cmp
movsl
shrb
fisubs
mov
xchg
mov
jg
mov
wrmsr
stos
push
lock
xchg
fwait
and
inc
mov
rclb
repz
je
add
cmc
lret
sbb
in
inc
testb
je
out
faddp
adc
push
lds
into
in
or
cvtps2pi
imul
pop
les
inc
xchg
xchg
xor
cmp
into
jle
and
sbb
xor
push
xchg
addb
sub
pop
ds
and
aad
dec
jmp
xchg
cmp
inc
clc
jns
cmp
fildl
es
shrb
dec
jg
adc
insb
sbb
sub
adc
pop
out
fcmovnu
lret
cmp
push
add
cmp
dec
push
and
mov
fistpll
movsb
xchg
adc
cmp
and
cmp
adc
sbb
cld
push
or
xlat
add
loop
ret
xchg
mov
scas
or
cs
and
mov
mov
fsubrs
jle
pushl
inc
cmp
xchg
dec
dec
mov
popf
xchg
jl
imull
adc
cmp
stos
fwait
lret
sti
sbb
loopne
add
push
js
aad
stc
ret
lock
in
adc
psrlq
pop
test
sbb
cltd
iret
cmc
mov
loop
rcr
or
mov
into
lcall
sti
arpl
stos
sub
add
sbb
fldenv
lret
dec
data16
js
decb
mov
cmpb
inc
in
popf
hlt
mov
lds
jnp
dec
push
add
les
in
pop
push
std
xchg
mov
sub
cltd
daa
add
and
push
pop
sarl
dec
out
nop
repnz
bound
ljmp
lret
imul
hlt
push
pushl
popa
xor
rcl
lds
dec
add
shr
xor
mov
sbb
and
xor
inc
aam
aad
mov
sub
adc
fdivr
sub
rorl
add
cld
insb
push
out
or
mov
data16
mov
push
push
dec
shll
jae
and
in
mov
packssdw
outsb
xchg
dec
fsubs
mov
jae
addr16
cmp
adc
adc
inc
mov
loope
fnstsw
mov
mov
inc
js
xchg
jbe
arpl
cmp
cli
inc
sub
push
out
adc
cmp
mov
mov
add
push
mov
mov
or
xor
dec
repz
dec
mov
dec
cld
xchg
lods
mov
sarl
aas
int3
iret
orb
das
dec
ja
stc
shlb
shlb
pop
adc
and
ret
cld
and
stc
cmpsb
mov
mov
mov
jmp
shl
in
orl
and
or
pop
rol
in
lcall
sbb
cld
cs
dec
mov
xchg
xchg
test
push
push
iret
repz
cld
das
mov
xor
imul
ret
scas
fmull
add
xchg
fimuls
mov
les
push
dec
sahf
push
dec
daa
out
pop
adc
mov
in
dec
jge
sub
dec
add
cs
fs
jp
inc
movsb
insb
xchg
mov
dec
pop
cwtl
clc
mov
mov
mov
add
pop
in
cwtl
out
xchg
mul
in
shrl
pop
mov
inc
movsb
push
or
out
xchg
cmp
mov
mov
pop
push
pushf
rcrb
cmp
inc
ret
sbbb
xchg
xchg
dec
jg
mov
ds
sbb
out
fcomp
test
pusha
and
inc
mov
lds
push
mov
insb
push
int
mov
dec
ja
sub
push
cmp
jno
cld
or
test
out
test
or
call
sbb
sub
cmp
xor
xor
pop
sbb
lret
cmc
and
sub
sub
es
dec
and
adc
test
fnstsw
mov
adc
out
mov
mov
fsts
hlt
shlb
push
xor
cwtl
dec
in
stos
or
pushf
xchg
inc
sbb
scas
sub
sbb
and
push
adc
lods
sub
jg
into
mov
sub
xor
lret
jo
mov
loopne
push
dec
into
mov
mov
lret
sbb
inc
mov
mov
dec
xor
fisubrl
mov
daa
or
push
arpl
mov
fs
aaa
cs
sub
addl
push
popa
ret
mov
sbb
stc
xchg
lcall
clc
xchg
das
add
xor
push
xchg
xchg
inc
dec
bound
std
jb
mov
imull
jmp
mov
xchg
out
pop
push
or
mov
cs
adc
push
shlb
jl
mov
aaa
out
or
lcall
push
rcl
les
pop
test
dec
and
lods
adc
push
jne
clts
shrb
mov
aas
icebp
rolb
mov
fmuls
movsb
pop
je
lahf
push
pop
js
push
xor
iret
cmp
jno
shll
rep
insl
iret
iret
cs
add
mov
orb
push
adc
cmp
out
mov
movsb
shr
cmc
fldenv
cmp
aam
leave
push
aad
mov
lret
es
jbe
push
js
and
out
mov
popf
icebp
sub
mov
flds
mov
jmp
pop
lods
int
or
add
jb
test
push
push
repnz
xchg
sbb
in
pop
mov
loop
cli
lds
pop
mov
cld
xchg
xchg
sbb
inc
adc
mov
shrl
and
xchg
mov
mov
fwait
and
inc
mov
cli
inc
adc
arpl
test
imul
test
cmp
imul
test
dec
push
push
add
push
mov
into
jo
rolb
in
pop
je
mov
jecxz
out
ficomps
addr16
imul
clc
fbld
das
xor
outsb
jo
shlb
pop
aaa
clc
jbe
sahf
jns
mov
pop
fidivs
test
jae
ss
lcall
stos
ret
push
mov
cli
adc
ret
push
or
lret
nop
sub
jmp
jg
out
jge
dec
test
jnp
mull
subb
and
sar
push
out
pop
icebp
ja
jg
xchg
jmp
pop
out
stos
cmp
xlat
push
mov
mov
mov
sub
dec
cmpsl
call
and
imul
loope
call
mov
push
sbb
push
mov
cmpsb
lods
test
ljmp
orl
mov
sbb
push
lahf
dec
xchg
inc
jb
mov
call
stos
orb
test
adcb
cmp
mov
push
xchg
adc
fwait
out
insb
out
mov
sbb
inc
inc
sti
push
xchg
cmp
sub
pop
and
mov
icebp
shll
pop
jmp
jge
or
in
sbb
gs
aam
jecxz
xchg
sbb
idivb
pop
mov
into
scas
xlat
pop
inc
inc
xor
inc
enter
popf
cmpsl
xor
ljmp
iret
jbe
lret
jl
adc
mov
push
push
je
mov
lret
dec
mov
pop
push
leave
subb
dec
jecxz
movsb
mov
mov
sub
dec
int3
xchg
sahf
lret
sub
cltd
es
in
test
fwait
pop
sub
jns
dec
scas
inc
push
cs
sub
arpl
out
popf
adc
dec
mov
push
xor
xchg
pop
sbb
jb
imul
add
loopne
xchg
in
adc
ja
outsl
in
lods
ret
inc
inc
pop
hlt
inc
hlt
rcll
aaa
sub
add
aam
fmull
push
insb
mov
mov
jae
push
cmp
mov
push
ljmp
mov
mov
sbb
xchg
xor
out
call
ljmp
mov
or
lea
push
iret
movsb
test
push
ja
lods
insl
mov
dec
shll
add
jmp
and
fld
push
mov
arpl
lods
into
push
iret
jl
jp
jns
mov
sub
push
add
mov
js
icebp
mov
cmp
out
imul
addr16
cmp
stos
sbb
xchg
jnp
pushf
in
jecxz
xor
in
movsb
std
aad
xchg
cld
add
adc
leave
ss
jl
insl
lahf
loopne
hlt
jae
je
pop
cmp
in
leave
cmp
ror
ss
adcl
pop
add
jb
adc
outsb
xor
mov
mov
aad
xchg
cmp
push
mul
cmp
psubd
jp
lock
xor
nop
adc
mov
adc
enter
neg
lcall
dec
and
jge
orb
ret
outsl
stos
iret
loope
mov
xchg
inc
or
add
xchg
sbb
cmp
rclb
insb
lcall
mov
jmp
stos
ftst
jge
mov
inc
and
dec
sub
aaa
cmp
les
jb
xlat
push
mov
int
out
inc
xchg
rcll
mov
sub
add
imul
iret
test
fs
divb
icebp
scas
sti
add
mov
mov
mov
add
dec
adc
gs
jg
das
cli
dec
jo
jne
and
out
jbe
xchg
ret
bound
jo
fmull
fnstcw
jmp
mov
and
add
cmp
mov
inc
inc
push
jg
cmp
loopne
movsl
dec
add
pusha
imul
push
dec
or
adc
test
fwait
mov
lods
ret
cmpb
xor
clc
mov
and
cmp
push
dec
xchg
pushl
dec
lock
mov
out
imull
loop
pop
add
xor
lcall
inc
mov
call
aaa
push
pop
fnstenv
sbb
cmp
mov
je
xor
push
clc
add
cltd
xor
pop
in
cmp
xchg
sbb
and
or
push
inc
repnz
pop
push
jg
dec
leave
jecxz
push
jbe
sbb
mov
mov
dec
and
daa
and
bound
xlat
out
sub
imul
or
push
sub
xor
popf
negl
cmp
add
in
mov
aam
iret
adc
ds
movsl
popf
stos
adc
add
shlb
outsb
aad
inc
adc
sub
addr16
ljmp
ret
push
fcomip
mov
shrl
push
in
imul
je
mov
out
add
sub
inc
mov
mov
outsl
dec
add
xchg
ljmp
jle
mov
mov
jle
pop
dec
xchg
dec
stos
fisubrs
push
pop
dec
add
stos
lds
cmp
mov
jp
lea
out
jmp
mov
mov
std
daa
cli
negl
scas
test
test
xchg
push
cli
push
movsl
shlb
mov
xlat
sbb
into
cwtl
push
dec
dec
sub
mov
cltd
ret
jg
mov
cli
outsb
into
test
loope
stos
int3
scas
imul
push
push
cmpsb
call
cwtl
out
mov
jae
mov
mov
test
mov
push
cs
int
outsl
jo
imul
sbb
or
xchg
fmuls
xor
sahf
jecxz
shlb
sub
imul
sbb
arpl
gs
clc
sub
sub
cmp
adc
pop
push
inc
jge
ljmp
sbb
stos
adc
aas
push
test
jns
addb
xchg
mov
shlb
jb
pop
clc
dec
dec
fcoml
push
mov
fiaddl
sub
cmp
mov
iretw
cmpsb
mov
inc
fidivl
scas
mov
gs
or
testb
int3
adc
popf
pushf
std
xchg
stc
js
out
adc
pop
xchg
xor
mov
int
mov
or
aaa
stc
cld
dec
mov
outsb
addr16
mov
js
in
fsubl
dec
mov
inc
cwtl
adc
imul
sbb
lret
mov
xor
xchg
xchg
jge
cmp
push
xchg
bound
mov
icebp
mov
mov
pop
std
mov
dec
jp
gs
adc
cmp
fnsave
std
mov
mov
cmc
movsb
aad
jecxz
inc
mov
lea
xor
and
inc
das
shrl
add
cmpsb
cmp
rorb
movsb
fldenv
dec
push
nop
sub
sbb
loop
ficoml
sarl
jmp
cmp
or
aaa
fwait
dec
and
jge
pushf
push
add
loopne
inc
das
pop
mov
fiadds
push
out
outsl
pop
ss
cs
mov
in
not
cmp
mov
dec
add
mov
mov
xchg
sub
pop
arpl
sarl
xor
mov
pop
cmp
sub
fidivrs
frstor
jae
mov
cltd
dec
push
bound
push
in
inc
lret
leave
fsts
sub
aas
pop
insb
mov
dec
roll
jg
gs
int3
les
or
xchg
xchg
jle
lea
add
cmpsl
xchg
out
jno
or
cltd
lahf
aaa
pop
or
cmp
dec
outsl
call
ja
adcl
xor
or
imul
mov
mov
out
sub
mov
inc
data16
nop
push
or
sbbb
dec
into
jl
lods
mov
adc
sbb
or
jle
mov
pop
mov
lods
mov
out
push
add
aas
stos
jae
pop
or
add
loop
or
jp
mov
in
lahf
push
sbb
mov
clc
bound
loope
cs
dec
test
and
mov
in
adc
cmc
leave
push
ds
mov
imull
xchg
mov
mov
rorb
icebp
mov
fdivrs
outsl
or
popa
jnp
sti
filds
or
arpl
cmpsl
cmp
ljmp
stos
adc
testl
std
add
fwait
std
inc
or
mov
out
roll
aaa
lds
mov
roll
mov
mov
cmpsl
roll
std
mov
and
sbb
pop
fsub
push
sti
and
push
js
push
stos
mov
popa
int
and
bound
jo
push
inc
fnstenv
daa
jbe
cltd
fs
xor
mov
ljmp
jb
pop
insl
inc
jmp
aas
or
xor
mov
mov
cltd
ret
cltd
cmpsb
mov
mov
adc
clc
or
sbb
ret
mov
xor
cmp
nop
or
push
push
sub
dec
das
fstp
mov
rcr
push
pop
jb
jmp
push
stos
insl
push
enter
xchg
adc
cld
nop
jbe
xchg
mov
pop
xor
xor
popa
pop
movsl
vmwrite
mov
dec
test
addr16
adc
lret
jle
pop
add
andb
mov
or
push
dec
xor
cmpsl
out
test
pop
cmp
les
mov
ja
imul
inc
imul
ret
decb
cld
dec
stos
and
or
test
cmp
mov
jo
addr16
or
popf
shl
dec
xor
cmpsb
push
jae
jp
jno
repz
dec
sbb
out
inc
daa
adc
sbb
andb
fcom
movsb
sub
xchg
push
jg
into
adc
mov
imull
mov
push
jnp
pop
xor
in
sub
adc
ret
sbb
orl
xchg
mov
mov
xchg
scas
or
mov
jns
lds
xor
fadds
xchg
push
pop
sbb
jg
lods
andb
dec
addr16
rcrb
or
insb
lret
push
cmpsb
jnp
sti
sub
sub
out
int
lods
sub
push
hlt
cmp
std
repnz
jae
pusha
insl
fstl
lret
push
dec
or
cmpsl
mov
inc
fbld
sahf
adc
xchg
dec
enter
jbe
mov
int
insb
call
xor
ljmp
dec
test
sahf
ja
xchg
jae
out
jns
icebp
aam
or
sub
mov
pop
jb
cmp
pushf
and
arpl
test
aas
out
push
add
mov
or
and
inc
lea
push
mov
fsubrl
lret
lcall
clc
aas
xchg
xchg
fdivl
jne
int
subl
ja
push
inc
arpl
fisttps
mov
jg
fsubl
fimuls
mov
dec
or
mov
jge
inc
xchg
lea
pushf
cli
lods
inc
test
or
out
lahf
lods
clc
bound
adc
mov
mov
ss
xchg
imul
scas
pop
xor
adc
inc
or
and
sbb
push
adcl
cld
adc
add
fisubrl
push
jle
aaa
mov
lock
popf
bound
icebp
lds
stc
cmp
fsts
adc
inc
xchg
enter
xor
nop
mov
test
insb
add
push
test
or
dec
push
repnz
and
fidivrl
out
scas
cltd
lcall
cmp
xchg
cmp
aaa
inc
push
imul
out
testl
call
mov
add
cmpsb
std
xlat
sub
sub
or
insl
inc
sti
scas
adc
jl
ljmp
inc
xor
jmp
mov
fucomip
xchg
xchg
mov
sub
loopne
xor
repz
pop
mov
push
in
mov
subb
jmp
int3
jl
outsb
in
pop
test
jnp
push
sub
rcrl
pop
mull
cmp
test
pop
and
lcall
shll
loope
testl
push
pushf
cld
fisubrs
adc
cmp
dec
sti
scas
out
jb
rcrl
daa
mov
nop
jno
xor
lret
icebp
mov
cwtl
rorb
or
pop
enter
std
jmp
cmpsl
jb
xor
es
xor
xchg
sti
iret
push
lret
mov
std
aad
adc
sbb
jne
shl
leave
mov
dec
hlt
sbb
mov
mov
inc
mov
lods
cltd
ror
mov
insb
add
jo
jns
sub
stos
mov
adc
les
pop
mov
inc
adc
int3
outsl
jp
jmp
imul
dec
pushf
clc
leave
mov
test
xchg
cmp
ljmp
dec
bnd
fmuls
mov
lock
add
mov
fisttpll
data16
and
ja
cmp
ret
mov
fcoml
xchg
mul
loope
ror
dec
sbb
out
out
ss
lret
sbb
scas
lods
fidivrl
adc
cmp
push
mov
add
mov
mov
xor
ljmp
cmovbe
or
or
pop
enter
fsubp
lock
loop
cltd
cli
aam
xor
mov
push
adc
fs
outsb
lret
mov
pop
and
mov
negb
ss
pop
fildll
xor
popf
fsubrl
xor
insl
cltd
out
stos
dec
jbe
je
jb
sub
clc
fcom
lret
sub
sub
mov
mov
int
sub
add
add
outsl
push
test
pop
popa
adc
imul
popf
pushf
inc
outsl
test
xor
in
inc
in
jmp
fistl
popf
sti
add
outsb
mov
mov
pop
int
inc
icebp
outsl
and
xor
xor
push
or
push
and
or
ficoml
jb
popf
ret
das
pop
push
inc
or
fmuls
pop
or
je
and
adc
test
fs
xchg
sbb
xchg
sti
shll
and
js
out
push
outsb
xchg
jo
add
loopne
and
mov
adc
jmp
je
popf
fcmovb
clc
mov
bound
and
mov
jnp
daa
in
ljmp
cmp
inc
jp
cmpsl
loope
cmp
arpl
inc
mov
gs
nop
into
arpl
int
icebp
int
xchg
adc
jbe
and
mov
ficoms
aam
push
inc
out
decl
sbb
sub
lds
stos
xchg
pushf
mov
pop
ljmp
push
aad
mov
or
xor
push
and
xchg
mov
and
aam
xchg
jmp
js
jnp
pop
lock
mov
mov
bound
xor
fnstcw
ror
popa
sti
dec
in
iret
aad
in
push
or
lock
rol
add
push
inc
ja
stos
imul
push
data16
les
fsubrl
jecxz
cwtl
xchg
or
push
clc
lods
hlt
aaa
inc
das
add
xchg
sahf
cwtl
dec
leave
push
mov
sbb
jmp
mov
mov
mov
and
sub
fwait
and
mov
add
xchg
add
aas
jl
leave
int3
push
adc
scas
pop
jmp
ret
pop
loope
mov
push
or
movsb
sahf
mov
cwtl
int
xlat
ret
rol
xchg
sbb
outsb
and
sbb
jnp
jne
scas
pop
ja
insl
push
imul
and
fwait
mov
repnz
into
lods
push
clc
arpl
push
cs
inc
sbb
sbb
insb
clc
lea
mov
sbb
pop
add
test
and
dec
push
inc
mov
add
mov
jne
sahf
in
daa
pop
push
out
shrb
jmp
or
xor
sub
mov
into
or
ficompl
icebp
addr16
cmp
mov
negl
sbb
push
mov
sbb
jns
jo,pt
and
pop
pop
nop
pop
out
lret
cmp
test
int3
in
mov
xchg
sbbb
in
sahf
sub
es
std
xorl
popf
lds
outsl
mov
int3
insl
jg
pushl
lret
or
movsl
inc
cmp
inc
inc
push
sbb
je
pusha
inc
or
add
stos
outsl
test
rcrb
insb
mov
xlat
mov
push
js
push
outsl
repz
incl
out
push
mov
push
dec
js
pop
mov
xlat
xor
fucomip
pushf
xlat
stos
xchg
test
lahf
adc
or
mov
push
pop
adc
in
inc
lods
lods
cld
xchg
aas
push
pop
dec
xor
imul
dec
cmpsl
mov
fs
push
insb
ja
in
mov
rolb
pop
pop
pop
leave
fimull
imul
test
sub
mov
mov
sahf
mov
imul
jne
sub
add
dec
inc
xor
dec
kmovw
enter
push
movsl
push
mov
rorl
pop
imul
dec
in
insb
sbb
and
jle
sub
push
inc
pop
outsb
cmp
or
adcl
stc
adc
fwait
add
mov
fists
das
bound
lcall
pop
cmc
and
mov
mov
jge
adc
stc
arpl
imull
mov
jne
add
inc
shll
in
sti
mov
dec
mov
and
adc
int3
mov
pop
sahf
sbb
movsb
jnp
cld
mov
lret
dec
mov
ja
fisubrs
out
hlt
lret
push
sub
loope
dec
in
shll
aad
data16
iret
mov
push
mov
ds
into
daa
push
scas
xchg
or
xor
nop
jo
test
add
daa
cwtl
aaa
add
imul
add
movsb
mov
out
in
xchg
in
and
dec
push
daa
test
xor
sub
push
cli
sbb
cmp
fwait
push
mov
dec
sbb
push
xor
mov
mov
cs
lods
or
aas
sbb
bound
add
insb
es
mov
data16
div
iret
jo
jb
pop
decl
mov
fcomps
lret
sub
mov
push
sbb
insb
cmpl
xchg
ja
pop
rcrb
dec
nop
fistps
mov
and
dec
push
cmp
rclb
jmp
pop
imull
jnp
jnp
jae
inc
in
xor
and
push
dec
pop
icebp
push
push
or
pusha
in
mov
cltd
inc
adc
shll
inc
and
dec
aas
mov
imull
add
mov
ret
mov
lret
inc
inc
inc
push
xchg
lahf
xor
cmp
xor
cmpsb
add
mov
outsb
sub
sub
jle
dec
repnz
mov
fidivrs
jl
pop
xchg
pop
mov
jle
adc
or
mov
es
stc
aas
sub
arpl
sbbb
call
mov
mov
xchg
rclb
inc
sub
icebp
xor
jb
fidivrl
rcll
lcall
leave
pop
pop
bound
test
stos
nop
das
icebp
lods
sbb
and
out
mov
mov
call
arpl
xor
mov
call
or
jnp
iret
push
push
cmp
enter
mov
or
add
adc
mov
or
or
mov
fdivp
js
adc
mov
lea
add
dec
into
push
add
bound
cwtl
sahf
movsl
cmp
aam
repnz
test
ret
inc
sbb
push
lahf
js
adc
mov
mov
fistpl
or
mov
ds
js
push
inc
es
es
repnz
sti
sub
mov
leave
cmp
sub
mov
inc
adc
cmp
mov
dec
pop
shll
movsl
repnz
fwait
shl
jecxz
ret
in
pop
cmp
dec
dec
push
daa
subl
add
idivb
sub
push
lods
xchg
imul
imul
data16
cmp
int3
leave
iret
sub
mov
les
mov
int3
ss
jge
lods
fcmovb
int3
xchg
mov
mov
daa
out
xor
sub
inc
mov
enter
cmp
shlb
jns
enter
inc
push
sub
ret
in
sub
int3
int3
push
movb
fidivl
adc
mov
xchg
repnz
lret
lahf
adc
dec
push
loope
fs
inc
es
jmp
xchg
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
pop
cmp
in
jnp
pushf
jnp
ljmp
push
gs
scas
jns
pop
mov
jns
and
push
dec
pusha
mov
push
pop
jns
stos
dec
popa
fidivrl
push
loope
push
pop
pop
ret
jns
mov
sbb
xchg
mov
cmp
xchg
shll
andl
out
cli
push
pop
add
cs
sbb
loop
inc
xchg
dec
jo
repnz
and
push
int
cmp
out
pop
mov
mov
and
and
test
add
mov
hlt
or
mov
mov
mov
mov
cmp
jg
xchg
sbb
inc
mov
pop
xchg
mov
cmp
out
movnti
out
jno
imul
add
int
fstpt
sbb
outsl
or
push
adc
pop
jl
das
dec
mov
in
hlt
push
scas
jnp
ds
js
loop
pop
mov
cmc
in
mov
scas
es
or
sbb
and
insl
loopne
leave
dec
pop
fnstenv
xor
mov
jns
popl
xchg
or
push
and
inc
stos
sbb
jg
stos
outsl
mov
push
sub
mov
mulb
adc
adc
mov
ss
adc
mov
fcmovne
inc
fsubl
push
mov
out
popa
push
data16
lahf
xor
mov
and
pop
sahf
pop
fcompl
stos
push
jmp
fs
outsl
mov
jg
sbb
pop
jl
pop
shlb
cld
gs
cmp
scas
xchg
sbbl
cmpsb
faddp
out
test
ds
insb
insl
xchg
dec
adc
out
movsb
or
or
sbb
pop
jno
cmp
lahf
push
jecxz
push
mov
push
sbb
fwait
mov
xor
lock
jge
lods
icebp
xor
mov
push
mov
cltd
test
jae
xchg
data16
cmp
dec
cmp
les
incl
adc
movsb
pushf
sub
lods
cs
push
les
sahf
int3
adc
sbb
jg
icebp
call
lcall
cmp
pushf
sub
xorl
call
rcl
aaa
cpuid
movsl
imul
or
sub
mov
mov
push
insb
clc
mov
clc
jle
outsb
xchg
add
cmp
dec
add
xchg
adc
negb
stos
loope
pop
mov
lcall
add
push
test
cli
adc
xchg
jecxz
in
in
int3
loopne
jg
push
cmp
aam
or
movsl
push
lock
xchg
dec
pop
push
adc
sub
or
and
aaa
into
cmp
dec
sub
outsl
or
cmp
addr16
ja
icebp
adc
add
idivl
in
cmp
imul
aam
mov
jno
sar
mov
push
mov
mov
rcll
xlat
imul
sbb
mov
sub
ss
mov
sub
pop
dec
or
imul
mov
mov
xor
mov
scas
and
data16
push
lret
out
in
pop
mov
jge
mov
cmpsb
stos
enter
into
mov
cmp
fidivl
xor
mov
pop
inc
lcall
jl
push
mov
sbb
or
rclb
pop
inc
or
sahf
pop
adc
adc
xchg
icebp
cmpsb
insb
or
and
xor
jns
inc
lcall
xlat
stos
push
pop
popf
jmp
mov
ds
jmp
stos
push
push
sbb
gs
dec
push
pop
test
add
cmp
repnz
scas
jno
pop
dec
shl
xchg
jmp
test
test
fildll
icebp
adc
ljmp
pop
push
call
sar
in
inc
lods
jnp
add
xchg
int
int3
sub
clc
mov
pop
mov
call
mov
pop
pop
and
ss
cli
pop
inc
mov
gs
imul
jne
aad
dec
movsb
js,pn
dec
mov
lcall
test
lods
mov
nop
pop
mov
daa
lcall
movsl
lea
lock
loopne
mov
jle
cwtl
cmp
mov
xor
adc
adc
inc
mov
mov
shr
fbstp
je
pop
scas
cmp
fwait
call
scas
out
stc
fiadds
mov
test
mov
pushl
sbb
jle
or
aaa
and
mov
lea
loopne
in
popf
mov
testl
mov
add
mov
mov
xor
pop
pop
mov
mov
fimuls
and
in
inc
frstor
mov
fmull
lods
aad
inc
pop
shl
fcompl
je
sub
jg
add
mov
or
mov
add
outsb
repz
hlt
rcl
mov
mov
or
cmpsb
popf
movsb
hlt
leave
mov
lea
outsb
sbb
sar
push
ret
ret
mov
xchg
mov
pop
inc
lret
int3
mov
testb
push
add
cli
ljmp
fldt
sahf
add
jnp
jp
and
adc
xchg
fisubrs
or
fwait
je
sub
jp
psllw
or
lret
in
int3
ret
leave
add
pop
in
mov
dec
addr16
push
lcall
inc
imul
pop
and
and
mov
mov
scas
out
mov
dec
inc
inc
lret
js
mov
fxch
les
mov
sbb
mov
roll
insl
jne
pop
mov
rep
or
iret
mov
pushf
lds
icebp
test
pop
loop
sbb
jmp
fisubs
dec
dec
repz
daa
js
jmp
ja
stc
pop
jae
xchg
sbb
jb
sub
and
test
in
add
stos
xlat
lret
sbb
test
and
dec
inc
aam
adc
and
lahf
ret
dec
jnp
out
pop
xchg
sub
dec
and
das
xchg
inc
cs
inc
lcall
insb
xchg
sub
out
pop
outsb
xor
lea
xor
jo
jae
jl
iret
enter
cld
jge
add
out
lods
push
adc
sbb
lods
lea
jge
push
mov
repz
jl
or
sbb
add
test
cmc
rol
loope
adc
pop
loop
inc
mov
lcall
sub
daa
mov
bound
inc
jecxz
and
push
mov
sub
lcall
lret
sub
fcompl
pop
out
and
mov
xor
jbe
shlb
xor
cmp
sbb
scas
xor
imul
js
or
stc
xchg
and
xor
mov
ret
jle
out
hlt
jmp
push
out
cltd
mov
adc
fmulp
fisttpll
jb
in
add
and
push
mov
scas
dec
mov
and
jle
out
xchg
add
jl
push
movsb
push
das
cmp
inc
mov
shll
adc
scas
lods
sbb
add
adc
and
scas
psllw
popa
jecxz
sub
dec
sbb
jnp
or
mov
leave
std
xor
pop
ljmp
gs
test
loope
dec
sub
cs
sarb
cld
and
inc
in
scas
arpl
cmp
adc
pop
int3
push
cli
gs
test
pop
push
mov
or
xchg
imul
mov
add
jge
cmpsl
cmpsl
or
js
mov
mov
pop
pop
fwait
ljmp
loopne
sbb
shl
mov
stos
xchg
daa
in
dec
jg
push
push
int
inc
sub
icebp
mov
stos
pop
xchg
lahf
aam
pop
out
jae
push
cmp
repnz
mov
fsubs
jo
xchg
fbld
pop
lret
out
mov
stos
aad
ljmp
pop
jbe
dec
fistps
leave
xor
pop
daa
out
push
jnp
mov
jl
jmp
cmp
push
dec
test
add
fisttpll
aaa
pop
mov
in
mov
sub
or
loopne
loope
cltd
mov
cmp
lahf
movhps
cli
push
sub
and
das
or
rol
xchg
mov
aam
and
imul
outsl
pminsw
imul
aas
loope
outsl
daa
dec
push
popf
pop
add
push
cmpsl
ss
imul
ljmp
shlb
xchg
notb
dec
sub
dec
sbb
inc
ds
addr16
dec
cmp
push
shl
dec
hlt
loop
and
movsl
in
shrb
pop
adc
sub
and
lcall
xchg
mov
and
repz
mov
mov
sti
mov
jmp
call
mov
inc
fwait
and
mov
or
and
jle
lret
fbld
insl
jge
ljmp
sarb
aam
add
orb
in
rcrb
ficomps
rclb
addr16
and
out
inc
iret
and
jl
pop
into
or
inc
lret
mov
mov
push
add
js
leave
pop
lret
inc
xchg
loop
pop
lds
ficompl
nop
sub
pop
aas
fisttpll
pop
xchg
sub
jmp
lret
ljmp
sarb
and
loop
and
mov
jmp
mov
out
cli
fcompl
dec
mov
or
mov
mov
orl
pop
cli
sbb
loope
add
push
fildl
adc
and
add
loope
aas
pop
mov
rclb
mov
ljmp
pop
xchg
jb
add
fcoms
pop
push
and
push
dec
pop
xor
mov
xchg
xchg
je
xchg
testb
outsb
cwtl
jne
std
aad
out
mov
outsl
fsubs
loop
or
imul
fs
cli
mov
fimull
cmpsb
and
pusha
mov
mov
inc
loope
xor
cs
imul
push
int3
clc
pop
jl
dec
jo
mov
mov
jo
gs
inc
mov
incb
fwait
ret
cmp
sahf
gs
inc
jp
mov
mov
cmp
mov
scas
sbb
sub
cmpsl
test
lods
arpl
xor
and
xchg
rcll
loopne
cmpsl
add
lds
sbb
shr
sub
fadds
call
adc
push
ds
insb
or
shll
jbe
pop
popf
into
inc
movsl
jns
cli
fnstsw
and
jnp
fmull
jecxz
ffreep
jle
dec
out
rcrl
in
in
decb
imulb
mov
cmp
ljmp
ds
addr16
inc
xchg
dec
in
loope
sub
sbbb
xchg
notl
aam
in
cmp
lock
adc
dec
cmp
das
clc
inc
mov
push
and
cmp
and
fldcw
sbb
mov
paddusb
mov
hlt
outsb
mov
push
and
xchg
lods
std
dec
pop
and
mov
fwait
mov
loop
or
test
out
mov
pushf
cmp
sbb
ja
das
add
call
jb
xchg
mov
lds
push
or
ljmp
ret
dec
fs
and
repz
cmp
popf
icebp
ret
push
mov
or
xor
fidivs
ret
test
sbb
popl
mov
pop
or
mov
icebp
in
repz
cmp
sub
push
sub
xor
nop
aam
xchg
mov
repnz
and
xchg
and
mov
nop
faddl
cmp
popf
jns
jg
xor
mov
add
xor
sub
cmp
mov
mov
inc
fcom
pop
mov
push
repz
bound
push
testb
xchg
cmp
or
gs
and
xor
or
push
push
sub
xor
add
fstl
in
inc
cmpsl
imul
xchg
sub
fstpt
dec
pop
pushf
stos
sbb
pop
pop
jnp
xchg
mov
pop
mov
mov
mov
mov
insl
mov
pop
inc
cmp
mov
cs
hlt
cmpl
int
and
add
mov
imul
sbb
ret
loopne
sub
dec
jge
cmpsb
rol
in
call
mov
daa
mov
test
sbb
mov
rorb
gs
jmp
aas
loope
mov
cli
mov
cmp
cld
les
inc
jne
fst
adc
mov
mov
movsb
cmp
out
mov
test
stos
jecxz
popa
adc
push
add
lods
mov
xchg
pop
push
test
in
cmp
out
jne
ret
pushf
and
or
dec
gs
dec
fwait
xchg
out
jecxz
jbe
jno
repnz
xor
push
dec
xchg
jge
jno
sbb
adc
pop
inc
imul
adc
or
mov
pop
and
outsl
hlt
aaa
or
cmpsl
xlat
jg
insl
push
xor
outsb
scas
push
scas
dec
in
sbb
mov
mov
dec
sub
adc
cltd
mov
shlb
xchg
enter
xor
iret
stc
mov
lcall
cmc
stos
mov
push
mov
jns
jb
or
ror
add
cmp
jle
shrl
inc
pop
sti
sbbb
lret
ret
jge
cs
fstl
cltd
jno
dec
pusha
outsl
sub
inc
iret
adc
mov
pusha
insl
out
ljmp
or
xchg
sbb
lret
sarl
aad
mov
imul
push
ss
or
or
imul
loop,pt
fdivr
icebp
jne
jno
fbld
xor
pop
pop
jecxz
fwait
inc
pop
leave
insl
xchg
adc
lcall
xor
sub
test
mov
mov
xchg
das
psllq
sbb
sub
js
inc
dec
lahf
xchg
arpl
xchg
shll
lfs
inc
or
incl
leave
mov
icebp
xchg
rolb
int
jbe
and
sub
dec
add
xor
pop
xchg
scas
mov
pop
adc
fs
push
push
cmp
insl
dec
subl
icebp
idivb
xor
fcmovne
push
push
imul
jbe
loop
or
je
mov
xor
jle
fisubl
cli
out
je
fs
pop
bswap
mov
mov
cmc
int
mov
iret
fwait
mov
ret
shlb
les
dec
repz
dec
shll
mov
mov
push
stos
inc
or
push
xchg
mov
scas
sbb
shrl
and
inc
cwtl
adc
xor
mov
mov
fisubrs
or
sbb
push
dec
mov
outsb
imul
or
cld
mov
xchg
add
enter
pushf
mov
sub
mov
loopne
lods
mov
mov
stos
push
hlt
dec
sub
ror
int
xchg
push
cmp
fimull
outsl
fldl
popa
fistps
cmpb
mov
or
push
rcr
push
lds
bound
loope
or
xor
cmp
fmuls
out
mov
call
cltd
repz
enter
push
jg
inc
jns
clc
xor
mov
cmp
add
lret
pop
ljmp
jl
dec
add
xor
addb
daa
xchg
in
test
fnsave
adcl
fnsave
mov
xchg
rclb
outsl
dec
mov
push
pushf
mov
into
mov
neg
rcll
pop
sbb
addr16
mov
hlt
mov
add
mov
mov
or
rorb
out
js
and
or
jle
repnz
xlat
arpl
addr16
adc
jecxz
imul
jl
pop
xchg
push
cmp
jp
jecxz
dec
std
xchg
enter
jl
add
or
add
cmc
adc
addr16
inc
adc
pop
call
xor
test
pop
adc
xor
inc
cltd
sbb
pushf
cmp
int
dec
gs
cmpsb
cli
popa
xchg
mov
adc
popf
push
mov
mov
adc
cmp
sti
outsb
insb
dec
mov
mov
imulb
push
leave
xchg
stos
mov
mov
add
daa
push
add
dec
test
inc
pop
mov
in
cmp
xchg
bound
xor
hlt
insb
jl
add
stc
insl
das
andl
mov
pop
pushf
aas
nop
cmpsb
dec
pop
movsb
inc
and
iret
negb
jns
subl
shlb
pop
cmp
in
mov
add
jbe
jne
mov
mov
mul
pop
dec
mov
xor
scas
add
mov
push
add
adc
adc
ljmp
xchg
xchg
les
pop
mov
lea
inc
mov
sub
pop
mov
inc
aad
pop
aam
ja
call
cmc
test
jo
out
jns
notl
add
jge
inc
pop
add
inc
inc
add
bound
add
icebp
cwtl
cmp
xchg
lret
int3
adc
push
pusha
dec
fdivs
pop
lahf
sbb
aas
incb
scas
mov
mov
jecxz
iret
pushf
lock
jnp
hlt
jae
cltd
sahf
pop
mov
call
rcrl
arpl
inc
mov
jno
lcall
pop
ds
daa
cmp
out
scas
outsb
sub
inc
outsl
xchg
out
cltd
push
std
insb
sti
jg
jecxz
cmp
in
push
dec
add
shl
leave
cmp
test
dec
jne
pop
dec
leave
push
pop
and
popf
sub
scas
or
xchg
in
xchg
sbb
and
call
fmull
stc
jp
and
xchg
lret
mov
cli
xchg
mov
repnz
cmp
inc
shrb
xchg
sub
mov
jp
rorl
arpl
push
hlt
inc
test
jo
push
lods
icebp
roll
sub
and
mov
lods
xor
insb
lahf
std
mov
call
out
fdivrs
jge
rcr
movq
call
and
sub
jno
pushf
adc
sarl
lods
sti
jmp
leave
push
js
fcmovnbe
dec
bound
sar
cmp
fisttps
or
sbb
jp
out
push
ss
in
push
sub
pop
pop
ss
stos
mov
shrl
scas
sub
cmp
orb
jnp
xchg
cmc
and
xor
test
adc
pop
push
jno
mov
mov
mov
adc
icebp
jb
mov
inc
ficoms
jecxz
imul
out
arpl
jno
and
iret
fdivs
loop
jno
xor
dec
adc
ja
clc
sbb
pop
lds
push
or
js
mov
and
jnp
mov
ljmp
inc
pop
jne
cmpsb
push
scas
sahf
cwtl
lock
xor
dec
jo
xor
push
shrb
lret
fmuls
push
insb
in
sbb
stc
out
xor
outsb
ret
aas
cmp
mov
inc
jns
jle
cmp
cmpsl
das
fs
stc
shrl
popf
fnstenv
push
int3
mov
adcl
jne
into
xor
fdivrl
into
mov
xor
lret
mov
push
clc
arpl
jge,pt
adc
std
push
lods
mov
cli
adc
xorl
inc
cmpsl
shll
mov
and
aas
xchg
lahf
mov
xchg
lret
cmpsl
and
repz
mov
or
sti
dec
inc
xorb
mov
add
out
fdivrs
dec
jl
cld
cs
pushl
sbb
sub
jmp
push
xor
mov
test
hlt
mov
xchg
int
cmp
jo
lock
rcl
lret
mov
enter
lret
xchg
cmp
mov
imul
cmpsb
out
out
sub
imul
int3
and
in
jge
xor
cmpsb
aad
clc
lea
movsl
mov
lea
movsb
inc
les
jne
frstor
xor
pushf
inc
into
leave
dec
and
cs
pop
mov
in
xchg
loope
das
or
or
sti
mov
xchg
xor
pop
xor
popf
fidivrl
dec
mov
imul
cmp
dec
imul
push
test
mov
enter
lahf
stc
inc
pop
loop
xchg
push
out
testb
inc
std
ret
or
push
cmpsb
icebp
in
pop
push
sub
inc
mov
pop
xor
test
cltd
aaa
dec
mov
and
jb
js
xor
clc
lock
inc
mov
insb
or
xor
mov
pop
rolb
or
lods
or
cmp
andb
je
pop
out
push
fistpll
lcall
lret
and
pop
pop
dec
push
sbb
aaa
adc
add
jns
rcr
mov
xor
outsb
fldt
adc
fisttpl
mov
push
push
leave
lahf
imul
and
arpl
pop
int3
mov
or
cltd
xchg
inc
dec
aam
mov
in
dec
inc
add
js
mov
dec
loopne
mov
add
mov
mov
mov
ja
test
mov
daa
hlt
fildl
loope
cli
das
add
fildl
sub
jl
sarl
xor
inc
popf
dec
leave
add
jecxz
adcb
aam
jmp
cmp
push
loopne
or
xorb
adc
lods
mov
rcl
hlt
stos
xor
mov
clc
fmull
mov
stos
add
inc
dec
cmpsl
pushf
inc
xchg
dec
adc
cmc
xchg
sbb
xchg
dec
and
cli
or
cmp
add
cmp
jge
lret
imul
jmp
fdivrl
pop
push
lods
loop
sbb
or
scas
mov
lcall
fcmove
in
push
dec
adc
cmpsb
outsl
xor
movsl
sub
mov
sbb
push
in
popf
adc
outsb
inc
popa
rorl
inc
fsubs
inc
sub
sbb
jle
jne
loope
mov
cmp
jnp
jb
jbe
inc
out
movsb
jb
lds
mov
sub
lods
and
in
ja
out
movsl
insl
push
ret
cli
sub
cld
jl
mov
or
xor
outsl
idivb
push
nop
rcll
mov
les
adc
mov
insl
jg
push
mov
mov
and
push
cmpl
pop
daa
outsl
cmpsb
mov
test
call
add
ret
mov
inc
call
pop
xchg
cmpsb
sahf
lcall
mov
fidivrl
lea
iret
mov
xchg
incb
cmpsb
rcrl
mov
xchg
sbb
stos
xor
mov
dec
int
sbb
cmp
test
popa
mov
pop
cmc
or
repz
rolb
jmp
jp
lds
cmp
pop
or
cld
xor
dec
packsswb
loop
pop
cwtl
sarb
xchg
jno
inc
shlb
dec
mov
sbb
mov
inc
mov
mov
lret
scas
push
sub
mov
ss
push
push
add
xor
out
xchg
loopne
stc
es
mov
push
stos
mov
fiadds
jns
cltd
xchg
dec
dec
sti
shlb
xor
out
gs
or
xor
jmp
sbbb
adc
addr16
inc
jl
in
mov
or
pop
cmpsl
loop
and
cmp
jae
fildll
data16
inc
pop
jbe
shl
jmp
mov
xchg
push
gs
fldenv
imul
inc
rclb
push
enter
jae
inc
sub
push
inc
ficompl
jecxz
push
jbe
adc
jge
rcrb
test
cmp
cwtl
xorb
xor
dec
lods
push
mov
rcrb
mov
jmp
cmpl
or
stos
sbb
mov
sub
xchg
stos
xchg
ret
mov
fstps
mov
ror
cs
xor
rcr
adc
stc
fldenv
pushf
mov
push
repnz
and
pushw
loope
add
imul
sbb
insl
std
mov
scas
bound
mov
ret
ret
inc
lss
or
loope
cmp
ljmp
int
arpl
test
mov
fdivr
inc
mov
xchg
loope
out
push
jmp
cli
dec
hlt
pop
in
mov
repnz
out
adc
mov
xchg
add
inc
mov
div
dec
and
inc
movsl
pop
dec
outsl
mov
fs
movsb
sbb
scas
sar
sub
mov
out
inc
arpl
lock
mov
lea
andb
cmp
sbb
lods
hlt
or
test
jbe
scas
pop
or
ret
out
or
mov
adc
xor
cmp
xchg
jno
insb
adc
sub
int
arpl
pop
fnstsw
adc
ss
xchg
and
cli
adc
mov
rcl
nop
insb
scas
mov
add
push
shll
dec
bnd
or
ds
loope
mov
daa
aaa
lds
or
mov
dec
inc
cltd
cmc
and
rcrb
adc
clc
hlt
mov
fnstenv
loop
cld
in
xor
inc
arpl
imul
ds
sbb
xchg
inc
into
test
movsb
rcll
pop
lret
mov
scas
fidivs
popa
repz
add
sar
xchg
cs
sbb
jne
inc
add
cld
xchg
cmp
xor
in
mov
lret
or
cltd
sub
xchg
out
rorl
cmpsb
xchg
mov
rcll
cmp
aas
pop
cli
stos
or
cmpb
xor
xorb
jae
ret
cmp
int
xlat
dec
lahf
mov
fsubs
xor
mov
test
and
adc
or
pop
mov
data16
cmp
ret
adc
xchg
adc
bound
push
fisubs
lcall
jg
cmpsb
mov
iret
lea
aad
mov
inc
mov
shrl
jbe
loope
adcl
mov
push
fiadds
jmp
shlb
pop
int
pop
mov
rcl
push
mov
subl
jnp
daa
xchg
push
fmuls
dec
les
mov
jb
mov
test
inc
push
jno
adc
xchg
sbb
andl
clc
addr16
mov
jle
les
ret
mov
dec
stos
xchg
test
insl
sarl
mov
mov
out
rorl
ret
inc
xchg
leave
lcall
mov
movsl
mov
daa
int3
xchg
xchg
adc
mov
rorl
add
pop
add
pop
xchg
xchg
push
sbb
in
jg
dec
add
jg
lods
mov
xchg
mov
out
push
xor
data16
fisttpll
xchg
sub
mov
cltd
fs
xchg
push
je
cld
xchg
js,pn
sub
push
fs
clc
cmpsl
push
mov
push
inc
dec
dec
and
test
test
mov
xchg
and
cmp
clc
mov
mov
movsl
jbe
xor
inc
sub
outsb
popf
jmp
push
push
pop
mov
mov
in
popf
pop
push
dec
xlat
push
pop
imul
inc
out
daa
mov
and
decb
jmp
in
jb
or
xchg
fldcw
mov
roll
ret
insb
sub
stos
xor
loop
jbe
scas
pop
sbb
inc
xchg
jecxz
loopne
ret
pop
jbe
and
and
adc
sti
mov
jnp
insl
mov
adc
add
push
aam
mov
fwait
hlt
and
test
pop
hlt
xor
stos
and
mov
sub
pop
test
xchg
mov
into
pop
pusha
popl
dec
pop
repz
sahf
pop
ret
dec
hlt
sub
adc
and
fs
es
dec
popa
pop
pop
insl
mov
jb
ja
repnz
test
clc
pop
pop
add
cltd
imul
loope
into
jbe
sbb
push
loope
push
pop
stos
fisubl
sub
outsb
into
sbb
xchg
fcmovne
mov
dec
dec
pop
cmpl
add
pop
outsb
add
jl
cwtl
ss
stc
out
cmovp
jp
push
cmp
cli
pop
es
xchg
ss
popf
je
jg
cmp
dec
adc
test
sbb
ficompl
lods
push
pop
cwtl
pop
lcall
mov
out
adc
ret
fdivrl
dec
das
fbld
mov
stc
adc
inc
cmp
jo
push
cmp
sarb
leave
sti
cli
mov
fisttpll
loop
inc
mov
enter
adc
cltd
in
xchg
fwait
enter
clc
push
bound
sub
mov
bound
out
or
pop
jge
or
cmp
ss
inc
sbb
xor
aas
push
int3
test
jp
or
pop
mov
icebp
mov
xchg
or
movsb
fsubr
or
jne
add
mov
lods
imul
cs
popa
shll
ds
push
xor
and
jno
ds
popf
jb
inc
ret
xorb
add
mov
test
ds
in
mov
fwait
lods
xchg
push
xor
xchg
out
push
lds
push
cmc
mov
cmp
fistpll
fwait
dec
in
xor
adc
outsb
daa
dec
jns
sbb
incl
test
cltd
lret
pop
loop
test
in
test
or
sarl
jge
cmp
aad
mov
sarl
xchg
add
and
inc
inc
repz
xor
jmp
shll
xchg
push
insb
fs
sahf
cmp
lahf
mov
js
pop
ljmp
sarl
stos
stos
mov
sbb
daa
xor
jns
mov
nop
cmpsl
inc
add
sbb
or
jmp
add
jb
outsb
jns
mov
pop
push
fstl
fcmovu
mov
jo
xor
mov
loope
mov
pop
lcall
and
aad
xor
aaa
mov
sbb
outsb
aam
adc
adc
ret
inc
loopne
lea
pop
xchg
rcr
add
cld
sbb
xor
orb
mov
mov
jmp
xchg
movsb
rorl
in
xchg
cmpsl
fisttpl
mov
into
imul
inc
jge
pop
nop
jmp
pusha
mov
outsl
mov
fsubrl
rorb
or
imul
pop
ljmp
sub
sbb
dec
dec
lcall
xchg
lods
sub
sbb
test
insl
jge
popf
enter
and
out
mov
out
loop
sti
or
pushf
jle
xor
shrl
lret
lcall
mov
cli
inc
xor
hlt
cmpsb
adc
push
cmpsl
lahf
enter
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
arpl
orb
jnp
pushf
jnp
and
fcmovnbe
pushf
pop
xor
push
sub
enter
pop
mov
and
out
inc
xor
aad
jle
mov
jne
pop
jns
and
cmp
push
mov
and
xor
push
pop
jne
add
hlt
test
sub
dec
and
mov
je
scas
pusha
cs
mov
adc
sbb
jg
fisubl
mov
sbb
enter
and
jle
data16
cltd
mov
test
mov
push
stc
push
outsb
pop
mov
movsl
mov
xor
ret
xchg
xchg
push
data16
or
pusha
sahf
inc
aad
jb
and
cmpsl
negb
lahf
shl
adc
jle
or
push
mov
stos
pushf
cmc
pop
adc
lret
stc
scas
repnz
outsl
mov
mov
adc
and
in
mov
dec
xchg
and
cwtl
out
andl
hlt
adc
sub
scas
push
and
dec
cmp
loop
xlat
or
shll
movd
aam
cmpsl
push
enter
outsl
lods
mov
imul
dec
lahf
cs
loopne
cmp
jo
mov
es
movsl
or
push
inc
push
andl
xchg
sbb
aas
mov
fwait
cmp
repz
fadds
mov
inc
aam
mov
iret
stos
xchg
pop
ret
xor
adc
imul
dec
test
jb
inc
insb
scas
sub
sbb
dec
sbb
and
fiadds
cli
adc
repnz
jp
pop
rep
pop
js
xor
idivb
in
jle
sahf
inc
sub
mov
out
dec
xchg
cmp
shrb
scas
dec
add
push
insl
insl
orb
push
mov
out
popf
mov
add
xor
cmp
jb
xor
ja
mov
xor
in
mov
jne
outsb
cmp
movsl
pop
mov
dec
adc
dec
mov
sahf
fists
fiaddl
pop
sti
pusha
push
stos
or
cs
push
cmp
pop
test
xchg
inc
jne
pushf
push
sub
out
repz
adcl
add
adc
aaa
mov
add
pop
mov
fsubs
cmp
dec
inc
into
add
outsb
fdivs
lods
mov
movsl
xor
inc
pop
out
jae
xchg
cmp
cmp
lods
sub
inc
mov
notl
jmp
jne
lahf
push
push
aas
inc
jmp
add
jne
in
sbb
adc
andl
sub
mov
mov
in
xor
insl
jg
jp
outsb
std
mov
rcr
sar
cmp
lds
call
popl
fld
stc
repz
mov
shll
push
jg
insb
cmp
jno
pushf
bound
or
adc
cmp
icebp
mov
xchg
out
mov
lahf
jne
dec
arpl
sub
loope
mov
adc
cwtl
adc
mov
dec
pop
inc
in
cld
xchg
movsb
pop
jae
stos
cmp
or
test
jno
adc
cmp
inc
dec
inc
jl,pn
shlb
les
jp
ds
push
or
arpl
cli
stc
pop
iret
movsb
push
xor
sub
insl
clc
jmp
fstps
push
dec
jno
xor
insb
sub
inc
pusha
dec
stos
mull
aas
rcll
lods
loopne
clc
ljmp
arpl
je
ljmp
inc
negl
adc
adc
jae
pop
mov
push
ret
aaa
xlat
pop
and
cltd
and
in
xchg
push
bound
ja
cmp
jb
jnp
sbb
aam
dec
out
fsubrs
icebp
jns
aaa
stc
lret
sahf
inc
push
mov
jb
xor
or
ret
enter
push
pop
mov
adc
fidivrs
out
test
and
mov
js,pt
les
das
sbb
adc
outsb
repz
or
mov
mov
adc
sbb
mov
sbb
push
cmpsb
push
sbb
sbbb
pop
fstl
cmpsb
es
in
ja
xor
lahf
pop
dec
sbb
fimull
cmp
and
aad
xlat
aaa
adc
add
jae
pushf
sarl
pop
pop
imul
xor
fwait
push
xor
add
scas
int
stc
fwait
sub
xchg
jb
push
out
cmp
in
scas
jge
stos
lahf
push
add
dec
and
add
fs
repnz
outsb
pop
addl
inc
gs
cmp
cmp
sarb
mov
and
xor
jb
dec
and
jecxz
push
ds
adc
fld
pop
xorb
fdiv
mov
jnp
or
jno
fs
sbb
fs
rorb
cmp
xor
and
jno
pop
mov
and
icebp
sub
adc
adc
das
rclb
test
insb
pushf
cmpsb
pusha
ljmp
ffree
inc
fxch
push
mov
push
cs
lcall
inc
mov
mov
push
call
ljmp
pusha
data16
mov
lcall
mov
test
cmp
loop
xlat
fdivl
or
aas
add
cmp
sbb
mov
add
jg
mov
mov
inc
stc
mov
cmpsl
jae
popa
rcrl
lea
mov
cli
sahf
mov
fcompl
mov
sbb
xchg
stos
cld
jno
or
jl
adc
and
mov
iret
inc
inc
dec
leave
dec
push
or
dec
test
xchg
pop
sub
cmovbe
icebp
pop
jae
mov
pop
lods
notl
or
mov
cs
pushf
push
fsts
pop
pop
in
add
loop
stos
jl
int3
push
inc
into
xor
sub
lock
mov
cmpl
imul
mov
jmpw
orl
jmp
outsb
sub
push
out
shlb
xchg
insl
and
mov
sbb
sbb
sti
sub
adc
mov
jp
mov
cs
jl
jmp
enter
je
iret
in
sbb
xor
mov
mov
and
sti
popa
out
add
cmp
add
sbb
fmuls
or
add
inc
cmpsb
les
shll
popf
aad
cmp
add
gs
jns
sarb
not
ljmp
fildll
frndint
mov
pop
rcr
les
mov
mov
jne
in
std
push
dec
das
dec
mov
inc
xor
pushf
inc
sbb
fldt
push
cmpsl
fcomps
rorb
popa
scas
fisubl
arpl
jg
out
fstps
pop
mov
mov
cmp
roll
sbb
es
fldcw
movsb
or
add
pop
pop
xchg
xchg
sbb
jae
and
ficomps
mov
cmpl
jae
imul
and
ss
lcall
mov
in
clc
js
addr16
mov
add
xor
jnp
and
xchg
outsl
xlat
jp
aad
mov
imul
fimuls
xchg
cmp
call
cli
mov
movsb
push
ret
mov
mov
mov
jbe
pop
push
mov
cmp
or
and
sub
mov
or
jp
ds
jb
sahf
mov
push
movsl
xchg
repz
jp
and
cld
inc
mov
popa
sub
add
outsl
fistpl
xor
pop
push
out
and
cwtl
pop
mov
in
pusha
or
push
jg
clc
adc
outsl
test
add
mov
cmpsb
lods
iret
lahf
and
push
dec
mov
dec
jne
jns
aas
mov
js
shll
mov
imul
mov
dec
xchg
or
repnz
pop
sub
lock
loopne
mov
popa
sub
ficoms
pop
ss
popf
mov
data16
aas
in
xchg
lea
ja
push
test
push
jg
xlat
sbb
icebp
in
lea
adc
mov
testb
xchg
mov
enter
pushf
mov
mov
or
jl
sti
push
scas
push
add
cmpsl
push
pushf
jge
dec
jo
xor
leave
sbb
xor
jmp
push
je
inc
add
cs
jmp
mov
dec
or
imul
je
lret
sbb
add
ficompl
inc
inc
mov
push
xchg
add
xchg
cltd
fadds
pop
inc
jecxz
popfw
pop
loop
add
lds
dec
out
aas
cli
or
mov
ljmp
shl
pop
jb
imul
bound
leave
xchg
clc
jo
aas
mov
sbbb
sub
cmpsb
cltd
and
sub
pop
add
push
lgdtl
and
sub
xor
mov
ficompl
pop
or
fstps
jp
inc
andl
push
cmp
dec
subl
rclb
xor
dec
and
pop
testb
cs
jmp
sbb
lods
jne
sarl
es
xchg
cmp
xchg
or
in
adc
fdivr
dec
ljmp
fldcw
ja
xor
add
sar
std
std
jg
mov
jno
les
ds
cs
push
mov
rcl
sbb
adc
cmpsb
mov
mov
add
lds
pop
aaa
lret
push
xor
gs
push
movsl
int
cltd
dec
sahf
in
inc
push
cmp
dec
jnp
push
xchg
xor
test
lods
jg
push
cmp
inc
mov
dec
lret
mov
xchg
and
pop
push
inc
adc
paddsw
loop
pusha
mov
stos
adc
or
mov
shr
mov
adc
lea
les
add
xchg
inc
into
icebp
lea
push
rcll
pop
or
dec
scas
xor
xor
outsl
and
gs
bound
adc
arpl
movl
repnz
push
mov
pop
sahf
insb
and
ljmp
pop
repz
inc
mov
inc
and
sbb
leave
mov
or
sbb
pop
mov
adc
popl
inc
inc
jns
and
xor
push
inc
sar
adcl
mov
out
or
lcall
and
test
das
mov
sbb
iret
xlat
push
jg
jb
mov
sub
and
xor
jmp
mov
enter
dec
pop
mov
fs
int
mov
lahf
shl
inc
fadds
sub
push
mov
sbb
test
ja
jp
inc
test
adc
enter
mov
push
mov
movsb
pop
xchg
lds
scas
gs
push
inc
lret
or
mov
push
sahf
scas
iret
imul
mov
add
xchg
leave
pushf
mov
stc
out
movsl
sbb
sti
cld
mov
inc
fistpll
add
xor
or
std
sbb
mov
das
jp,pn
push
movl
sub
sub
or
push
lret
mov
stos
or
sbb
jl
lock
sbb
aam
push
and
lods
dec
jbe
mov
add
mov
outsl
and
lods
adc
jo
cmpsb
scas
xor
sub
xor
paddsw
ja
fnstsw
movsl
push
arpl
imul
pop
pusha
push
xchg
iret
inc
mov
push
jle
fsubrl
pop
xchg
js
repnz
push
cld
push
mov
xor
sbb
jge
or
xor
loop
jmp
dec
or
mov
jg
dec
call
push
das
ja
mov
push
adc
mov
jle
insl
jb
incl
add
insb
mov
mov
add
scas
movsl
rclb
in
cmpsl
sarb
or
and
nop
adc
loopne
fidivl
pop
jmp
mov
mov
jmp
andl
cmp
jecxz
add
sar
and
mov
and
adc
xorl
xchg
aad
and
cmpsb
shr
sti
add
push
aad
xchg
and
les
into
and
dec
mov
jbe
ds
sub
fsubrs
fs
ds
fstpt
dec
mov
lock
out
mov
jg
insb
push
pop
mov
or
sbb
sub
mov
bound
push
inc
lods
test
jo
data16
das
fs
sahf
and
jnp
ljmp
sub
fisubrl
cli
xchg
lea
and
mov
mov
inc
test
fidivrl
subb
xchg
inc
lods
jp
or
mov
adc
and
leave
push
lcall
cwtl
insb
dec
fstpl
jo
stos
lods
push
jp
add
and
push
cmp
mov
xor
or
stos
fs
sbb
movsb
adc
daa
fmull
les
jecxz
or
jns
push
cmpb
int
mov
pushaw
cli
arpl
dec
cmp
mov
cltd
imul
sbb
aad
pop
push
xlat
push
ja
mov
push
jbe
in
jle
cmp
roll
inc
inc
addl
dec
mov
mov
xor
mov
gs
fcmovu
mov
pop
adc
das
popf
rcrb
push
mov
mov
test
clc
push
mov
daa
jp
orl
and
out
add
adc
leave
xor
mov
ret
or
jbe
in
lret
fld
test
pop
lds
fldt
fnsave
aam
jl
xorb
jge
sahf
mull
cmp
or
mov
fs
or
jl
and
call
xchg
push
sbb
scas
aam
lea
fisttpll
faddl
and
shrb
addr16
jl
imul
movsb
pop
dec
mov
inc
test
lcall
cmc
mov
sub
pop
dec
jl
ficompl
mov
popa
dec
xor
jae
aam
test
adc
add
fidivrs
out
inc
push
into
lds
adc
cmc
stc
call
jno
mov
xchg
inc
cmp
mov
jbe
out
cwtl
rorl
in
pushf
stos
mov
lahf
push
int3
push
call
adc
ljmp
pop
lock
enter
xchg
mov
adc
cmp
mov
pushf
mov
push
xor
push
pop
mov
je
sbbb
fadds
mov
cmc
lret
adc
adc
call
gs
sbb
mov
call
jnp
jns
repz
fs
int
cltd
andb
ss
pushl
fwait
pop
dec
stos
mov
std
mov
xor
xorb
enter
xchg
test
gs
maskmovq
divl
cmp
jno
add
inc
sub
adc
aas
xchg
sbb
fwait
adc
sub
and
test
inc
or
mov
xchg
dec
call
stos
jmp
pushf
test
cmp
push
daa
sub
mov
ret
shrl
and
mov
leave
mov
sarl
lahf
in
mov
push
les
sub
insl
adc
push
mov
call
sub
nop
and
in
je
ja
cmp
sarb
pop
pop
lret
loop
int
and
clc
fldcw
pop
cmp
sbb
mov
int3
addr16
les
divb
maxps
sbb
jmp
xor
dec
or
hlt
pop
and
jnp
and
sbb
scas
rorb
xchg
pop
jmp
xchg
push
cwtl
clc
xor
mov
mov
insl
arpl
stos
lcall
mov
xchg
cld
sbb
xor
in
xor
add
fwait
xchg
cmp
xchg
imul
ljmp
mov
lcall
dec
out
ds
bound
negb
sub
mov
mov
shl
add
daa
mov
sbb
pop
test
adc
aam
mov
cmpsb
sub
lea
jp
sbb
dec
mov
sahf
mov
dec
test
std
xchg
insl
iret
lcall
or
jne
pop
or
dec
xor
test
push
call
jge
mov
add
vmwrite
lahf
pop
cmpsl
xchg
in
cmp
and
fisubl
jp
lods
fs
cwtl
mov
lcall
or
das
iret
mov
repnz
imul
loopne
sbb
repz
les
shrl
adc
and
and
mov
fidivrl
or
vpunpcklwd
ret
cmc
cmpsb
rorl
sbb
xchg
cmp
lcall
xchg
mov
mov
xor
cwtl
mov
cmp
push
push
ficompl
rcl
lods
sbb
je
cs
dec
jmp
inc
pop
add
or
mov
inc
jb
and
psubusw
je
loopne
test
test
or
es
movsl
fwait
in
xor
add
mov
sti
clc
jg
out
jno
test
cli
imul
rolb
mov
mov
shl
popf
aam
dec
lcall
or
and
pop
shrl
sbb
outsb
mov
xchg
mov
mov
sahf
ret
dec
mov
lcall
mov
cmp
pop
gs
bound
mov
sub
adc
clc
popa
cmp
mov
pop
popf
cmp
mov
ljmp
mov
cmp
shll
js
jle
cmp
loop
push
dec
cmp
dec
jae
loop
pmulhw
pop
inc
push
outsl
mov
mov
jmp
ret
in
shll
mov
jo
push
stos
sarl
stos
fists
jl
imul
xor
les
mov
sub
insl
dec
stos
mov
sbb
pusha
loop
int3
xor
in
or
push
pop
mov
movlhps
jae
xor
add
cmpsl
pop
sub
mov
push
movsl
mov
pop
jp
mov
xchg
imul
out
or
adc
push
dec
pop
lock
sar
adc
dec
or
inc
repnz
clc
adc
dec
lods
les
rcl
jle
and
pop
adc
lret
test
js
jmp
mov
jl
loop
ss
cmpsb
nop
mov
pop
pop
std
push
pop
push
popf
repnz
and
xchg
mov
and
aad
pusha
iret
mov
add
push
xchg
or
cmpl
dec
out
push
cwtl
jno
and
lcall
or
xor
push
fldt
lcall
fldcw
xchg
daa
call
fistpll
stc
lock
dec
fstl
push
push
clc
mov
retw
rcl
add
pause
outsb
aam
pop
add
pop
shl
bound
cmc
jnp
jo
xlat
add
insb
or
push
pop
popa
mov
xor
jbe
mov
stc
adc
and
fadd
cmp
sbb
sub
roll
fwait
inc
fistpll
movsl
xchg
int
push
dec
mov
mov
pop
mov
push
xchg
shlb
jle
jo
repnz
jle
xchg
imul
jmp
or
jo
out
in
int3
icebp
add
push
push
mov
pushf
ss
xchg
add
inc
add
xor
xor
insl
scas
mov
inc
jae
jns
cmpsl
mov
push
or
fisubs
add
jb
mov
hlt
imul
mov
add
pushf
push
sub
inc
gs
jmp
xlat
push
add
les
add
push
lret
xchg
int
dec
enter
movsl
imul
mov
add
inc
xor
ljmp
jae
decl
leave
leave
in
xor
mov
and
sti
shl
scas
xlat
test
sahf
jmp
xchg
ror
andl
xchg
jge
xchg
inc
insb
sub
dec
xlat
lcall
push
jae
sub
cs
sub
lds
in
mov
add
xlat
or
sub
ret
aas
cmpsb
sub
data16
add
sbb
mov
add
insl
fildll
push
or
mov
out
fiaddl
pop
cmp
adc
in
lods
fdivl
pop
mov
ss
sbb
mov
xchg
mov
adc
jne
es
pop
dec
adc
cld
cmp
addr16
inc
xchg
inc
cmpsl
out
pop
aad
cs
je
xlat
decl
mov
inc
lcall
push
adc
inc
in
popa
xchg
aaa
outsl
cmp
add
dec
mov
out
mov
insb
mov
insl
loopne
dec
jo
mov
xor
sahf
jmp
and
cmpsb
ficoml
pop
sbb
lret
pop
mov
andb
mov
cmp
mov
xchg
loope
cli
jnp
inc
inc
lcall
push
stos
jmp
testl
push
add
jae
outsb
cltd
loope
out
sbb
lcall
xchg
xor
and
aam
testb
mov
imul
scas
mov
mov
rcrb
adc
or
xor
insl
pop
adc
and
sub
hlt
pop
jmp
jmp
incb
add
cltd
test
xchg
dec
add
xor
jbe
pop
mov
cltd
mov
fiadds
inc
cli
leave
test
mov
mov
jge
xor
sbb
jbe
cmp
ret
cmp
loop
sbbl
adc
add
pop
mov
scas
sbb
sbb
cmp
mov
movsb
jge
fistl
push
ficompl
or
aam
pusha
pop
or
cmp
out
mov
mov
dec
es
adc
insl
adc
and
mov
dec
test
pop
mov
sub
ja
incb
es
xchg
xchg
cli
pop
sub
clc
sbb
repnz
scas
mov
in
imul
dec
icebp
es
popa
xchg
imul
jno
adc
dec
mov
pop
xchg
hlt
ficompl
mov
or
push
cmpsl
ljmp
outsb
adc
andl
sar
adc
and
jg
lock
mov
mov
fstl
mov
inc
mov
fcoms
ljmp
mov
mov
push
cs
orb
dec
push
xor
pop
out
pushf
cmp
pop
pop
clc
hlt
mov
xor
lds
xor
mov
gs
das
push
mov
cs
pushf
jmp
mov
push
jo
sub
loop
jnp
mov
aas
adc
inc
movsl
xorb
inc
gs
iret
cmp
hlt
test
rorl
adc
adc
dec
jmp
xor
mov
sub
ja
into
into
fs
pop
sub
adc
push
inc
dec
out
dec
mov
dec
add
imul
and
push
pop
ljmp
in
jl
ds
dec
mov
add
subl
sbb
jg
pop
mov
idivb
fisttpl
add
ret
add
push
pop
jne
mov
cmp
add
push
test
loop,pt
dec
or
ret
fscale
movsb
pop
mov
scas
push
mov
jle
or
ja
add
mov
cmp
popf
or
jae
aad
push
fcompl
rcll
stc
xorb
fsub
out
imul
push
pop
gs
push
push
inc
xor
lods
push
es
mul
addl
int
jne
cmpsb
popf
mov
xor
ret
pop
add
cmp
xor
adc
popa
ficoms
mov
jbe
bound
cli
clc
xchg
cmpsl
mov
cli
test
fsub
addr16
imul
and
dec
int3
and
adc
pop
int
out
sub
lds
jns
xchg
xor
popl
movsb
mov
xchg
in
mov
mov
lds
jns
test
cmp
mov
xchg
ds
shll
dec
movb
aaa
lcall
mov
add
push
lods
add
jp
mov
sbb
mul
jns
incl
push
push
pushf
dec
lret
push
cltd
mov
mov
push
mov
movsb
sub
and
out
push
cmp
notb
les
adc
add
mov
ja
leave
dec
dec
insl
mov
ja
mov
cmp
sub
push
xor
xor
lea
jns
push
lods
sub
jns
bound
mov
clc
cmp
subb
mov
movsb
mov
jmp
imul
nop
cmp
push
jno
xchg
scas
inc
xchg
xchg
dec
mov
mov
pop
lds
dec
push
insb
shlb
inc
imul
pop
cmc
shrb
mov
jmp
push
cltd
into
push
push
add
jno
rcrl
out
nop
add
imul
mov
std
jo
ds
cmc
mov
iret
loopne
or
sbb
jmp
jecxz
shrl
and
dec
push
cmpsl
sti
sub
dec
lods
icebp
push
xor
lea
xchg
mov
push
pop
in
jb
lret
ss
xor
adc
cmp
pop
adc
ljmp
xor
and
inc
pop
and
xchg
jp
pop
fs
jp
negl
jl
cmp
adc
sub
popf
mov
jg
mov
lods
and
pop
mov
lcall
sbb
inc
shrb
adc
xchg
pop
popa
or
dec
and
push
mov
add
rdtsc
mov
sub
push
mov
adc
xchg
loop
js
lock
cltd
int3
mov
mov
sbb
add
sub
daa
cmpsb
pushf
lock
jmp
xor
mov
add
jl
test
push
dec
adc
loope
adc
add
inc
loop
mov
int
rcrl
dec
in
mov
xchg
mov
push
sub
dec
clc
mov
push
test
mov
push
stos
popa
push
and
sbb
in
mov
push
sub
jl
cmp
push
add
div
lret
dec
leave
js
cmp
sub
cwtl
and
in
fcoms
xchg
dec
mov
cmp
iret
jnp
in
push
sahf
dec
jnp
fdivp
ss
lds
std
mov
int3
mov
out
roll
or
fucomp
insb
jmp
adc
roll
mov
xchg
xchg
lahf
push
pop
fdiv
jae
mov
in
mov
push
inc
inc
ret
push
aas
adcl
mov
push
divb
pop
int3
lods
out
test
mov
and
movsl
mov
pop
mov
pcmpgtb
fidivl
cmp
inc
hlt
aam
mov
cs
aam
push
jb
push
xorb
insl
and
aad
xchg
bound
mov
repnz
rorb
add
imulb
mov
dec
fistl
add
ret
test
stos
roll
icebp
xchg
mov
repz
mov
mov
jns
sysret
dec
psubw
and
cmp
xor
addr16
dec
repnz
roll
not
adc
xorb
aad
in
or
push
imul
out
and
stos
mov
mov
repz
in
jmp
cmp
add
adc
in
xor
add
mov
aas
lahf
loop
cmpl
arpl
fs
pushf
xchg
scas
mov
test
add
jae
jp
shl
push
outsl
popa
pop
fwait
je
fstl
nop
imul
add
js
hlt
add
xlat
push
xchg
lret
sub
sub
xchg
hlt
and
mov
xor
addl
dec
outsl
xchg
xor
les
push
pop
aam
xor
inc
pcmpgtw
fwait
mov
movzwl
sub
cmc
push
les
scas
pop
sbb
pop
push
sbbl
cltd
mov
or
loopne
imul
out
std
shrb
jp
push
pop
vfmsubps
jno
les
dec
mov
lods
cmp
ss
dec
and
pusha
cmpsl
adc
jbe
stos
sbb
jg
out
pop
push
in
pusha
sub
orl
ret
ja
mov
mov
pop
testl
outsl
aam
dec
dec
xor
dec
addr16
shlb
mov
inc
arpl
mov
and
push
stos
pop
push
and
sub
lock
fldl
push
cmp
movsb
push
out
mov
lret
jmp
jl
xchg
addb
add
jbe
inc
mov
mov
inc
stc
insb
mov
and
push
pop
sub
xchg
adc
ds
push
gs
pushf
das
lahf
divb
fsubl
mov
push
xor
orl
dec
push
mov
scas
out
rcll
imul
xchg
idivb
rcll
orb
insb
add
mov
and
es
mov
sub
mov
rcr
mov
and
cmpsb
out
lcall
fsubrl
into
out
lahf
icebp
mov
add
and
ret
push
jg
out
push
mov
pcmpgtw
inc
sub
push
add
ret
mov
leave
and
add
aaa
xor
mov
aam
les
pop
iret
xor
jge
push
insl
or
fwait
pop
push
nop
rcrl
daa
gs
mov
dec
mov
fcmovnb
outsb
pop
cmp
or
xchg
out
aad
xlat
xchg
das
negl
sbb
cmp
ljmp
notl
out
jg
push
push
or
adc
jo
dec
fsubrs
pop
lret
fstps
mov
aas
fs
sub
stos
cmpsl
js
mov
test
mov
outsb
fidivs
jecxz
scas
jb
jl
dec
push
mov
add
jge
sarb
inc
lods
jp
mov
cmpsb
pusha
leave
enter
stos
hlt
orb
lret
test
mov
sahf
xchg
enter
mov
out
out
int3
and
cmpsb
arpl
lret
adc
xchg
es
inc
rcrl
add
repz
mov
add
mov
insb
push
pop
jbe
aad
fdivr
cmp
mov
dec
jno
mov
cli
and
ja
sbb
in
dec
fimuls
cwtl
sbb
push
pop
adcb
outsl
ds
outsl
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
ja
out
sub
clc
pushf
jnp
leave
sbbb
ret
test
dec
push
fcoml
imul
push
popf
pushf
mov
sbb
leave
mov
dec
xorl
adc
xchg
adc
movb
mov
cmpsl
cmp
adc
cmp
push
add
dec
dec
fwait
or
addb
or
pop
icebp
mov
sahf
jg
pop
fstpt
sub
mov
adc
dec
cmpsb
lods
std
sahf
out
and
into
dec
fstl
dec
or
jb
insb
and
and
movsl
xor
xor
mov
test
push
mov
sub
cs
test
clc
jb
sti
imul
cmp
and
bound
ljmp
xor
imul
aad
notl
inc
xorl
xor
pop
or
outsl
lret
aas
mulb
out
dec
divb
or
addl
push
cmpsb
ljmp
js
push
lcall
xor
repnz
aas
push
sbb
in
into
cld
add
rorb
roll
popa
cwtl
adc
add
mov
push
mov
cmpb
xor
xor
mov
shll
cld
cmp
cmp
gs
xor
notb
ret
pusha
vcvtps2pd
jbe
xchg
pop
dec
lcall
push
in
rcl
mov
movsb
fwait
jae
and
ds
xchg
bound
xor
adc
xchg
lcall
mov
pop
mov
jbe
sbb
pop
scas
sbb
xor
or
fldenv
cmpb
dec
in
pop
testl
nop
les
xor
sub
shll
push
fnsave
sbb
sarl
adc
lods
xor
mov
add
data16
and
clc
dec
push
jnp
fidivrl
xchg
xor
and
fidivrs
loope
inc
rep
gs
mov
jns
std
imul
roll
cltd
pop
in
xchg
adc
push
push
jp
or
into
lods
xchg
pop
fdivl
bound
ret
inc
add
mov
lahf
dec
dec
inc
hlt
pop
into
f2xm1
out
mov
xor
xchg
mov
das
mov
out
les
jo
mov
inc
fidivl
mov
lods
sbb
loopne
mov
push
fcmovbe
mov
adc
sarl
pop
neg
popa
js
imul
and
push
push
sahf
lcall
mov
and
mov
sbb
adc
jno
mov
addr16
hlt
xor
jb
jge
aam
sub
cmpsb
fs
daa
xor
popa
inc
mov
sub
xchg
mov
or
cmp
sbb
loope
popl
adc
repnz
jne
and
negl
pop
stos
lea
mov
add
imul
imul
div
insl
outsb
push
push
mov
adc
xlat
jb
push
fimuls
and
inc
hlt
mov
inc
push
mov
jnp
sbb
and
stc
push
jne
repz
pusha
insb
hlt
sub
cmp
pop
pop
and
push
dec
mov
sub
sub
lods
or
cli
cwtl
fnstcw
xchg
xchg
pushf
mov
inc
in
cmp
pop
movsb
insl
in
xchg
fbstp
or
inc
and
push
mov
cmp
or
mov
in
inc
out
xchg
jg
push
or
test
cmp
sahf
notb
pop
sub
mov
mov
sbb
or
pop
push
dec
cmp
lds
adc
push
mov
mov
pop
data16
dec
mov
xchg
icebp
mov
mov
lods
sub
clc
add
icebp
mov
jnp
incl
mov
cmp
or
and
leave
out
add
ret
lods
adc
xchg
or
mov
out
mov
xor
xor
push
out
sub
pop
jo
clc
lods
fs
je
jo
jge
adcl
jmp
mov
adc
xor
mov
dec
repz
rcrl
orb
mov
fidivs
adc
push
push
insb
xor
jmp
push
inc
fwait
aad
outsb
dec
inc
xchg
cmp
mov
cmp
sbbb
daa
mov
in
idivl
sahf
mov
sub
into
ljmp
add
aaa
and
jmp
jns
cmp
daa
mov
pop
std
fisubs
mov
mov
jp
push
dec
add
fadd
jg
xor
outsl
jo
xchg
dec
lcall
pop
stc
push
pop
push
test
lock
loopne
jp
shll
mov
std
xchg
jo
arpl
push
and
xchg
in
adc
jmp
lods
pop
fldenv
sbb
add
sub
dec
adc
into
fs
sub
cmp
dec
clc
cltd
push
jl
rol
xor
arpl
adc
test
ret
sti
pop
mov
push
lret
and
dec
cwtl
daa
add
cwtl
test
pop
mov
pop
icebp
jge
jp
mov
lods
dec
cmp
xchg
test
jecxz
aam
shrl
sub
jns
and
lahf
xchg
dec
push
out
push
test
das
cld
stos
dec
call
mov
add
sbb
xor
mov
rclb
cmpsb
popa
and
mov
jmp
sbb
push
incb
pop
clc
inc
xlat
test
sbb
and
mov
dec
push
xchg
sub
lods
adc
lds
loop
imul
inc
adc
popa
sub
lods
adc
add
imul
out
into
ret
mov
mov
fwait
iret
mov
rdseed
mov
xchg
movsb
mov
sti
daa
int
decl
ficoms
jge
mov
sbb
or
daa
fstps
outsl
out
lret
sbb
loope
and
enter
mov
jb
lret
mov
in
outsl
jmp
dec
das
fwait
mov
loopne
aam
mov
lds
mov
push
cmpsb
int
popw
pop
mov
pop
push
jle
jno
shl
cwtl
je
jmp
call
xchg
add
inc
xchg
out
cmp
stos
jb
addb
mov
lcall
insl
test
testl
aas
mov
and
dec
adc
bound
test
dec
and
fwait
mov
mov
and
push
hlt
test
and
sbb
adcb
shrl
add
mov
lods
repz
pop
add
mov
mov
xor
or
shrl
fsqrt
add
scas
out
cmp
imul
std
jle
lods
scas
dec
xchg
sbb
jns
adc
adc
jb
sti
leave
cmc
fcmove
stc
icebp
mov
jns
inc
push
xor
and
addr16
cmp
fldpi
mov
dec
jbe
cli
flds
xchg
dec
xchg
xchg
add
lods
je
sbb
lret
fdiv
dec
mov
insb
inc
xchg
insl
jle
test
adc
aaa
xchg
xor
jnp
push
xlat
leave
inc
mov
js
sbb
loopne
sbb
lret
movl
neg
add
lock
pop
dec
pop
andb
xor
xchg
xchg
stc
pop
in
pop
dec
mov
push
mov
sahf
cmpb
fwait
sti
sub
jne
into
and
cmp
inc
ret
js
into
or
cmp
pop
idivb
add
xor
nop
stc
push
xor
inc
lds
test
aam
inc
subl
scas
ja
dec
sbb
add
pop
xchg
js
push
test
pop
pop
xchg
ret
pop
aas
push
mov
jecxz
test
inc
daa
xor
pop
lods
fwait
add
xchg
or
jbe
sbb
mov
add
outsl
rorb
insl
out
mov
or
push
inc
mov
and
inc
add
popa
push
into
xor
scas
mov
mov
sbb
xchg
in
loopne
into
mov
sbb
mov
incl
sub
jecxz
mov
xor
xor
mov
lret
add
adc
xchg
in
mov
fstpl
ja
sbb
sti
fwait
jo
int
ror
cld
lods
xor
lahf
ljmp
and
cmp
dec
aaa
sbb
cltd
add
ds
cmp
adc
or
bound
xor
push
outsl
inc
jnp
push
pop
pop
ljmp
ds
sbb
fiadds
xchg
mov
js
or
dec
jle
incl
adc
jno
dec
lret
stos
cmp
arpl
dec
mov
repnz
pop
data16
mov
cmp
xchg
cmp
fistl
inc
jle
push
loopne
dec
mov
ss
sub
gs
push
inc
dec
mov
test
mov
rorl
int
add
daa
jmp
ss
das
roll
push
cltd
mov
jg
jmp
push
jno
mov
xor
mov
out
jle
stos
mov
out
aaa
sub
sbb
lock
roll
and
add
mov
inc
or
imul
pop
dec
fdiv
iret
push
dec
mov
aas
les
test
test
mov
addr16
aam
xchg
push
or
sub
pop
dec
cmp
mov
lds
insl
or
jmp
ficoms
and
rcl
shl
mov
mov
jo
shlb
ljmp
push
imul
lods
ja
cmpsl
push
and
xlat
and
xchg
sub
push
std
xchg
sbbl
mov
icebp
js
loopne
sbb
addr16
push
push
cmpsb
push
xchg
and
inc
xor
jmp
lea
dec
shl
xor
mov
push
lea
pop
adc
outsb
sbb
ja
xor
repz
xchg
test
jbe
test
or
es
fsts
jmp
ss
jns
or
pop
mov
fld1
cltd
js
pop
popa
cld
loop
push
js
lahf
push
push
rcll
in
mov
sub
es
lods
xchg
cmpl
and
lods
roll
mov
adc
aam
stos
repnz
jo
movsb
mov
bound
xor
xor
addb
shlb
icebp
xchg
ficomps
mov
inc
jp
popf
call
sbb
mov
xor
data16
jmp
adc
sbb
loopne
xchg
mov
ljmp
or
sti
lds
push
in
pop
int3
xorb
inc
cmpb
mov
push
test
in
test
lods
or
out
in
push
mov
mov
arpl
clc
testb
dec
adc
fucompp
out
sarb
mov
pop
rorl
fwait
mov
xorb
sbb
adc
and
cld
pop
mul
repz
mov
flds
out
pop
data16
pop
aas
jp
aas
outsb
dec
inc
push
aad
repz
pop
jmp
adc
adc
jle
or
inc
stos
mov
mov
filds
adc
add
sub
jmp
lds
scas
inc
mov
add
or
xchg
lcall
push
pop
pop
mov
mov
push
push
pop
pop
pop
loope
jne
int3
jnp
xor
gs
enter
sbb
sbb
sbb
xor
lea
les
insb
mov
xchg
xchg
xor
andl
jp
ds
in
clc
popf
sub
in
or
pop
iret
addb
pushf
or
mov
ljmp
lret
mov
cmc
xchg
add
sahf
dec
pop
sub
test
cs
sbb
ds
fsubl
pop
cs
adc
mov
xor
mov
ret
popa
cmp
repnz
sbb
dec
jae
sub
and
push
jns
dec
iret
adc
cmpsl
mov
adc
sbb
popf
sbb
dec
aas
lock
add
or
cmp
add
fdivl
out
inc
cmp
sbb
cmp
push
gs
sub
xchg
xor
popf
mov
or
add
das
movsb
jo
push
jecxz,pn
cmpsb
js
add
xor
xor
addr16
les
popf
xchg
fs
inc
xorl
mov
mov
add
paddsb
fisttps
xor
cwtl
xlat
xlat
mov
jno
test
sbbb
test
jo
add
mov
dec
xchg
push
mov
add
test
push
push
push
adc
mov
push
mov
out
hlt
xchg
loope
add
mov
loopne
mov
pop
ljmp
add
xor
repz
jp
cmp
fists
or
adc
les
stos
dec
leave
pop
push
xchg
mov
xor
in
push
mov
cli
out
inc
stos
xchg
rcr
sbb
jmp
cmp
loopne
ja
mov
stos
and
cltd
cmp
mov
jno
inc
xor
ss
add
cmp
cmp
dec
add
dec
sbb
popl
icebp
adc
xchg
subl
jl
mov
movsb
xor
cmpl
mov
cmp
or
xor
lahf
add
ljmp
cwtl
cld
jp
mov
dec
es
push
ss
fists
jns
mov
jmp
or
cmp
adc
cld
sub
push
push
mov
sbbl
mov
xchg
xchg
mov
int
das
scas
movsb
iret
stos
dec
pop
lea
outsb
mov
out
clc
jl
xor
in
dec
je
scas
mov
loopne
adc
xchg
dec
imul
shlb
cwtl
mov
sub
cmp
fwait
xchg
rol
out
xor
mov
cmp
imul
cltd
icebp
aad
push
push
sbb
mov
xchg
adc
mov
cmp
icebp
inc
fldt
ja
mov
ds
inc
ret
sbb
cmp
xor
adc
or
inc
mov
lret
lea
pop
inc
cmp
pop
or
add
bound
adcl
sbb
cli
insb
push
mov
push
mov
mov
mov
rclb
and
sub
pop
sub
sub
ret
hlt
push
scas
jbe
push
shrb
xor
xor
mov
lret
mov
lods
daa
or
lods
fwait
mov
sub
adc
inc
movl
and
cmpsb
ret
sub
and
cltd
lods
add
frstor
xchg
pop
push
mov
pop
outsb
aas
cmp
fs
scas
xorl
xor
xchg
stos
and
jge
insb
jb
inc
adcl
sbb
fadds
mov
mov
ljmp
push
movsb
outsb
add
cmpsl
push
jle
sbb
movsl
sahf
mov
mov
imul
mov
jno
push
stos
jge
cli
add
shl
ret
mov
cmp
fisttpll
inc
mov
stos
xor
fsubr
lret
or
adc
rcll
and
dec
mov
jne
add
inc
and
fs
push
mov
inc
jle
xor
sarl
aad
xchg
push
mov
repnz
xchg
or
pop
insl
mov
stc
mov
mov
outsl
jl
jo
adc
or
sbb
sub
bound
jns
mov
pop
das
scas
dec
fwait
test
xchg
cmp
mov
mov
mov
dec
nop
movsl
pop
mov
mov
sub
in
leave
and
cmc
clc
cmp
push
andb
pop
sub
mov
sbbb
adc
outsl
repz
mov
notl
push
daa
jbe
inc
aas
sub
pusha
int3
xchg
ret
fs
repz
pop
stos
loop
ret
adc
inc
jmp
je
mov
ret
popa
call
stos
iret
push
ja
mov
inc
sub
mov
stos
cmpsl
mov
aad
cmp
sub
in
mov
mov
mov
pop
mov
outsl
clc
bound
in
jne
xchg
inc
ds
jg
popa
inc
xchg
ror
mov
lods
inc
cli
es
and
add
jecxz
and
sub
mov
add
add
push
jg
xchg
cmpsl
cmpsb
jb
lea
test
cli
stos
or
pop
push
and
and
int3
orl
ds
std
xor
jb
adc
ror
leave
adc
xchg
xor
and
test
rolb
test
sub
sbb
out
ds
jmp
in
adc
jecxz
jnp
mov
loop
jmp
sti
sahf
aas
dec
dec
cli
push
fistpll
lods
jae
xlat
mov
pop
in
or
arpl
bnd
stos
mov
pop
std
lcall
jg
rorb
push
xor
shll
aam
jnp,pn
xor
mov
enter
pushl
xchg
or
lahf
test
inc
in
push
mov
int
xchg
pop
nop
movsl
jg
mov
mov
test
cmp
divl
push
gs
mov
add
push
clc
int
cli
mov
pushf
out
push
into
jg
add
push
pop
nop
adc
movsl
cli
les
xchg
pop
jl
jmp
jae
cmp
mov
dec
cli
mov
push
add
std
loope
mov
dec
xor
mov
xchg
dec
insb
sub
or
inc
mov
xor
dec
mov
fld
jnp
cli
ljmp
mov
jae
or
and
hlt
outsl
test
cmp
mov
outsl
sub
mov
adc
xlat
ret
pop
push
cmp
adc
sub
pusha
inc
pusha
cs
push
mov
icebp
int3
addb
stos
aam
or
jnp
mov
loop
ss
adc
data16
dec
xor
in
or
out
loop
push
cmpsl
inc
les
xor
add
jnp
test
add
fdivrs
insb
shl
aam
icebp
addr16
lock
dec
dec
mov
outsb
or
mov
xor
adcb
fmul
xchg
push
shll
ficoml
inc
xchg
clc
or
pushf
lea
incb
inc
dec
sub
insb
jnp
fbstp
add
loop
aaa
fs
loopne
int3
mov
jns
pop
cli
jmp
push
fisubrl
mov
lods
mov
jmp
inc
xchg
add
jae
lret
or
xor
mov
push
xor
cli
xor
xor
mov
dec
aas
xlat
xchg
nop
and
sub
or
add
xchg
jo
adcl
mov
or
jl
xchg
push
xchg
ss
or
imul
dec
xchg
ret
enter
in
mov
or
loopne
cld
adc
outsb
and
enter
or
pushf
rolb
shll
or
mov
adc
and
aad
sbb
and
inc
dec
addb
xlat
add
mov
xlat
mov
repz
movsb
dec
faddl
lret
lock
out
lea
je
jbe
in
movsb
fstpl
fs
mov
mov
push
adc
inc
mov
mov
mov
add
ds
cmpl
mov
call
stc
imul
dec
lahf
sbb
jno
inc
mull
lock
push
mov
test
xor
cmp
fst
insb
cmp
dec
add
test
lds
jp
sub
inc
call
cld
out
in
cs
inc
sbb
jle
sub
addr16
mov
jecxz
sarb
cltd
jecxz
stos
mov
push
mov
xor
push
scas
lahf
jno
sahf
xor
les
out
jno
adc
cmp
sbb
push
mov
mov
jne
xorl
jl
sahf
out
sbb
inc
push
daa
sub
push
pop
gs
or
jo
sbb
inc
mov
sti
pop
in
loope
in
push
loope
outsb
icebp
jp
subl
lods
loop
test
push
sbb
jecxz
pop
mov
add
xchg
jb
push
mov
mov
inc
and
scas
add
mov
cmc
bnd
xor
xlat
out
xor
dec
and
cmpsl
mov
popa
adc
adc
fimull
mov
aas
push
shl
push
xchg
inc
inc
dec
cwtl
sub
scas
aam
jbe
push
sbb
push
jo
shl
mov
cmp
and
imul
xchg
xchg
push
push
add
adc
std
imul
aaa
mov
flds
stos
repz
movsl
mov
mov
jns
daa
jb
shl
push
stc
loop
dec
stos
outsl
adc
push
mov
dec
cld
mov
and
pop
push
and
mov
mov
adc
pop
jp
jo
in
shl
aad
aaa
jge
imul
xchg
push
dec
lret
or
outsb
inc
mov
jb
push
mov
push
lea
sahf
xchg
inc
loop
push
mov
sbb
cmp
out
shl
subb
inc
stos
test
sub
in
into
sub
jns
mov
inc
iret
xor
cmp
addb
jne
xchg
pop
sub
test
pop
js
loope
rcrl
mov
notl
dec
cmpsl
push
jne
mov
push
nop
rclb
push
jne
pop
outsl
jge
xchg
sub
adc
cwtl
cltd
jne
aam
mov
ja
and
cmp
movsb
out
ficoml
push
and
aam
sub
jle
int3
test
call
fisttpl
out
mov
stos
clc
sbb
outsb
add
fwait
xchg
mov
sbb
jg
jle
data16
xlat
fstpl
adc
mov
xor
jns
call
lods
jno
test
pop
jns
add
pop
aaa
jg
fisubl
adc
or
sub
and
mov
movsl
or
fists
pop
dec
inc
push
lret
xchg
or
ret
insb
movsl
ffree
shlb
sarl
mov
outsb
xchg
cwtl
mov
jl
xchg
dec
movsl
std
f2xm1
mov
data16
shrd
imul
mov
mov
dec
hlt
sbb
rcrb
nop
fimuls
xchg
gs
and
jno
sub
insl
xchg
cmp
sahf
jns
fildl
jecxz
cmp
fstps
fimuls
sbb
mov
into
sub
jne
pop
arpl
shll
push
jbe
sub
sub
sbb
pusha
jecxz
jl
arpl
fdivl
mov
js
cs
dec
in
lcall
iret
imul
xchg
jno
ss
cs
cwtl
pop
mov
add
das
xor
or
push
fsubrl
popa
inc
jno
push
sbb
mov
xchg
inc
push
adc
negb
ja
dec
clc
clc
sbb
lahf
leave
andb
int3
subl
test
mov
mov
ss
rcrl
adc
rorl
xlat
xchg
xor
movb
pop
mov
add
xor
fisubl
insl
sbb
sub
xchg
and
xchg
shrb
mov
cltd
out
das
lds
sti
xor
in
lret
jmp
lds
and
clc
roll
jp
push
inc
mov
xchg
fisubl
push
lods
mov
xor
fcmove
or
idivb
adc
bnd
mov
movsl
mov
xor
stc
adc
sbb
or
sbb
ret
insb
xor
fisubs
test
aaa
arpl
cmpsl
rcll
lock
ret
mov
jae
inc
pop
sub
repnz
pop
lahf
add
mov
mov
add
jns
sub
ds
hlt
inc
and
xchg
inc
push
test
sbb
inc
cld
addl
ficoms
ljmp
aad
mov
xor
and
jmp
push
fs
add
inc
into
fnstenv
call
gs
xchg
cmpsb
jle
hlt
push
mov
rorl
or
cmpsb
or
inc
stos
and
mov
sarb
xchg
negl
jl
and
dec
es
sbb
lcall
int
pop
or
mov
or
sub
inc
int
add
sbb
int3
jnp
sti
into
in
sbb
mov
jo
je
mov
add
fisubrs
mov
outsb
mov
popa
mov
jne
sarb
jge
leave
popa
mov
mov
sub
mov
test
data16
aam
jge
ljmp
cmp
repnz
jnp
push
test
push
cmp
dec
stos
sbb
cmp
xchg
mov
push
dec
or
ret
lods
lods
stc
arpl
adc
xchg
cmp
mov
std
adc
iret
mov
xchg
jl
adc
fadds
popa
in
cwtl
mov
jge
push
push
adc
ss
sbb
jecxz
adc
xchg
add
mov
add
cld
arpl
shll
pop
pusha
inc
jp
cli
pop
pop
sbb
sbb
cmpsl
pop
sub
ljmp
ret
out
mov
lcall
ss
or
test
push
data16
fnstcw
xchg
mov
dec
aas
data16
les
xor
and
shrl
push
dec
sub
xchg
jno
pop
push
movsb
hlt
xor
adc
fstpt
ficomps
imul
stos
or
push
popa
inc
outsl
and
cld
lcall
xor
push
pop
pop
fcompl
inc
mov
push
clc
sbb
arpl
aaa
insb
or
inc
ret
sbb
imul
int
jmp
jmp
test
or
das
sub
icebp
adc
adc
cmp
add
or
fsubrs
cmp
and
add
stos
lea
jne
mov
pop
sub
hlt
test
mov
mov
cmp
mov
or
mov
push
mov
das
lret
icebp
mov
sbb
stos
shr
xor
outsb
int
lods
jae
and
ja
hlt
mov
fscale
or
call
cs
mov
add
pop
lods
outsb
xchg
pusha
inc
jns
flds
push
jle
mov
mov
dec
imul
push
xor
shrb
ret
push
xlat
cltd
gs
test
aad
cmp
fldcw
and
js
xchg
dec
push
adc
add
pop
mov
loope
ret
addl
xchg
sub
stos
cltd
fidivl
pop
jp
inc
jo
mov
cwtl
fistpll
int
addr16
dec
xchg
xor
jns
xchg
pop
mov
mov
sub
nop
pop
xchg
movsb
lahf
or
inc
outsl
cmp
cmp
sbb
loope
in
pop
dec
inc
popa
nop
or
les
out
test
js
cmp
jbe
mov
xor
test
push
or
outsl
cld
loop
stos
ja
cmpsb
inc
jae
rolb
shrb
stc
sahf
jg
sub
fcompl
push
xor
xchg
cs
fistpl
pop
dec
clc
xor
adc
fmuls
pushl
mov
fildll
lret
pop
sub
loope
add
cmp
fwait
ret
jo
scas
iret
jp
push
ret
aaa
mov
pushf
loop
arpl
push
iret
inc
push
adc
in
lods
inc
fs
popa
imul
mov
js
lock
data16
repz
pop
mov
mov
jle
cmp
mov
pop
cmpb
das
aas
cmc
in
mov
jns
popa
call
push
xlat
lods
mov
dec
xor
jp
or
adc
stc
imul
outsl
arpl
adc
loop
jne
jmp
xor
movsb
or
sbb
movsb
dec
scas
mov
xlat
es
jno
data16
jl
addr16
push
xor
cmpsl
into
fcompl
addr16
icebp
lea
in
lea
daa
mov
stos
les
dec
hlt
ljmp
lds
lods
sub
inc
lret
mov
iret
add
stc
fsubs
dec
jge
mov
rorb
mov
aaa
or
lock
cmp
sub
in
mov
nop
sub
mov
rcrl
pop
and
ds
jae
mov
popf
mov
icebp
mov
dec
dec
insl
js
aam
gs
lahf
adc
int3
xor
fiaddl
push
and
add
mov
mov
mov
stc
dec
adc
leave
std
fnstcw
jle
xchg
inc
cwtl
mov
and
neg
imul
fisubs
ja
dec
xchg
jbe
mov
lret
call
in
stos
inc
popa
xor
loopne
push
pop
test
sbb
jo
add
aad
lcall
jp
bound
pop
hlt
clc
add
xor
mov
pop
jg
str
xchg
mov
and
cld
fdivl
std
inc
imul
das
xor
lds
aad
imul
imul
test
lret
ffree
or
pop
mov
push
adcl
jbe
mov
int3
movsl
push
pop
xor
imulb
fcmovnu
mov
enter
fwait
pop
sbb
inc
push
cmpsl
xchg
movsl
cmpsb
popa
push
lock
negl
xor
pop
push
mov
lcall
pop
mov
lcall
daa
sti
ret
popa
repz
adc
test
push
xchg
push
je
xor
mov
jmp
lret
add
test
aaa
push
stos
aam
hlt
data16
outsb
pop
rcll
mov
in
xchg
aaa
pop
rcrl
dec
lock
int
pop
add
icebp
in
or
sarl
lahf
and
mov
cwtl
cmp
cld
das
jp
aad
std
sbb
pop
dec
ds
xchg
frstor
push
or
cmp
and
out
popa
ljmp
adc
in
fnsave
subb
repnz
movsl
int3
sarb
xor
ss
xor
xchg
mov
orb
add
filds
push
adc
mov
divb
movsb
add
into
hlt
int3
mov
xor
shll
rclb
pop
test
hlt
cmp
ljmp
xchg
repz
mov
jnp
bound
aam
xchg
sub
sbb
js
inc
mov
inc
mov
jg
mov
scas
cmp
xor
dec
xchg
pop
mov
jle
imul
xchg
adcl
lret
mov
adc
loopne
popf
leave
xchg
push
in
in
xor
push
and
xchg
adc
iret
ds
inc
and
scas
sub
imul
jle
movsl
sbb
ja
pop
mov
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
daa
push
ret
cmp
jb
les
out
xchg
shl
fwait
daa
aad
pop
mov
jno
cmpsb
sbb
jge
mov
jmp
pop
movsb
adc
int
xor
aas
xchg
orb
fidivl
scas
clc
mov
into
adc
lods
aaa
aad
bound
mov
aas
sub
and
fwait
mov
popf
or
jge
outsl
push
leave
adc
mov
xor
stos
inc
fidivrl
mov
insl
push
xchg
orb
and
hlt
push
push
sbbl
adc
loop
leave
cmpsb
xchg
mov
out
sbb
adc
mov
pop
jne
arpl
decb
fidivl
mov
sahf
xchg
in
pop
inc
push
int3
sbb
push
mov
xor
push
cs
sub
into
movsb
je
fbld
cmp
adc
xchg
pop
sub
addb
dec
cmpsl
sbb
dec
cmpsb
mov
aam
cmp
lods
cmp
push
cmp
mov
fldenv
leave
xorb
mulb
repnz
arpl
cli
adc
add
pop
xor
dec
add
push
inc
sbb
pop
dec
and
and
ret
pop
fs
mov
lahf
mov
push
lods
mov
imul
inc
stos
bound
dec
sbb
out
push
jmp
repnz
repnz
leave
or
mov
loop
jmp
or
loop
jbe
add
mov
cmpsb
push
test
pop
adc
pop
push
mov
mov
test
pop
orb
sahf
movsl
mov
mov
ret
std
stos
imul
lcall
dec
inc
mov
lods
fcmovnbe
xorl
notl
cmpsl
in
inc
xor
insl
ds
push
out
or
mull
mov
stc
mov
sub
pextrw
or
adc
js
ret
js
outsb
pop
lret
add
out
xchg
mov
inc
sub
addb
mov
mov
xlat
xor
sub
les
adc
sahf
pop
jnp
idivl
cmp
mov
adc
sbb
imul
mov
in
and
sub
jge
xor
test
jbe
mov
sbbl
push
test
adc
ljmp
cld
mov
xor
leave
fadds
imul
mov
cmp
insb
sbb
cmpsb
inc
push
sbb
xchg
shlb
insb
fldl
js
xlat
insb
mov
sar
sti
data16
rcll
dec
mov
adc
outsb
jmp
dec
daa
out
cmc
ret
shll
les
dec
into
sub
push
aad
cmp
and
push
mov
lds
into
out
jp,pt
sahf
push
notl
mov
push
data16
mov
sti
out
sbb
pop
aam
fcmovbe
xchg
fistl
clc
loop
cmp
dec
shlb
enter
add
lahf
add
jecxz
lods
push
das
mov
lds
loope
outsl
mov
std
test
leave
pop
pop
outsb
sbb
js
imul
fisttps
dec
out
cwtl
xchg
mov
dec
mov
jbe
addb
push
sti
rorb
sbb
es
cmp
inc
es
mov
inc
in
in
cli
mov
adc
mov
adc
mov
mov
adc
sarb
in
push
cmp
call
add
cmc
nop
lock
xor
sbb
pop
mov
pop
xchg
in
cltd
in
dec
push
push
mov
out
jno
je
add
and
and
loope
pop
in
sbb
xchg
add
or
or
lcall
stos
stos
dec
and
lock
jo
cmpsb
inc
out
repnz
xor
or
add
repnz
stos
js
mov
sbb
xchg
mov
daa
fsin
dec
int
sub
fs
sub
cmpb
imul
or
cld
in
mov
xor
fldenv
pop
adc
or
or
push
add
pop
arpl
shl
inc
or
mov
sub
xor
xor
and
adc
cmpsb
sbb
pop
cmp
call
decb
jge
ss
pop
jnp
push
xchg
out
adc
push
dec
out
pop
push
push
iret
test
popf
xchg
mov
mov
in
addb
lds
test
into
lret
pop
mov
movsb
ljmp
loope
push
les
aaa
push
cmp
clc
jle
insb
push
or
pop
or
int3
shlb
testb
lcall
in
std
wrmsr
and
adc
sbb
and
subb
sbb
in
xor
pop
inc
sbb
repz
mov
mov
pop
or
mov
push
mov
jbe
or
xchg
cld
aaa
fistl
jmp
add
sub
mov
aas
lahf
test
pop
adc
xchg
push
cmp
in
mov
xchg
shr
int3
jle
cmp
push
fldenv
xlat
ret
add
les
lcall
sarl
out
aaa
rolb
les
and
push
jmp
jl
out
outsb
or
and
arpl
xchg
out
jp
add
cs
or
das
mov
push
pop
test
or
sbb
cmp
lret
push
popf
xchg
dec
rorl
jecxz
fimull
or
xor
les
iret
in
xchg
pop
stos
loopne
xchg
int
mov
inc
ret
mov
sbb
xorl
push
fsts
lock
cmp
jle
std
repz
inc
dec
dec
dec
inc
loopne
fldl
mov
jne
xor
lcall
jg
call
inc
adc
add
lcall
fxch
cwtl
xor
push
cld
mov
call
lods
in
sub
ret
movsl
mov
rcll
pop
xchg
mov
gs
mov
push
or
xor
decb
jl
and
mov
xor
inc
data16
fldcw
sub
stc
out
enter
or
fiaddl
add
and
or
jg
ljmp
lret
repnz
pusha
push
repnz
in
dec
loopne
ret
push
pop
or
mov
dec
mov
adc
dec
lock
stos
dec
adc
cmpsl
mov
pusha
aas
cmpsl
repz
mov
mov
pop
inc
nop
add
es
inc
dec
int
orb
lds
sarl
repz
lret
mov
cmc
clc
push
leave
js
fs
shlb
add
cmc
inc
fst
cmp
pushf
adc
and
in
or
fsubl
lahf
adc
mov
jo
fs
push
adc
imul
das
jne
adc
push
jns
gs
mov
rorb
dec
xchg
vpavgb
pop
mov
push
in
movsl
cmpb
daa
and
ja
lret
mov
adc
aam
hlt
adc
xchg
add
push
and
pop
cli
aam
scas
pop
xchg
cs
xlat
adc
in
aam
sahf
mov
insl
pop
scas
mov
gs
ret
pop
mov
add
mov
pop
jg
xor
mov
xor
outsl
xchg
push
sarb
aad
inc
and
rorb
fsubs
pop
sub
stos
clc
pusha
div
pop
mov
ficomps
test
sub
mov
push
pusha
movsl
mov
mov
jno
adc
loopne
ss
mov
pop
gs
hlt
push
dec
clc
sub
dec
aam
mov
sub
into
out
mov
int
icebp
lods
and
sbb
aam
cmp
outsl
ret
outsb
mov
scas
and
adc
in
xchg
jne
push
int
negb
nop
cmp
add
lret
sbb
test
lretw
call
test
imul
int
jmp
mov
pop
lods
es
scas
dec
mov
divl
mov
mov
cmp
mov
and
js
xor
cmpsl
lret
lods
iret
popa
fs
jnp
dec
jnp
cmp
das
inc
movsl
outsb
push
rclb
and
or
cmp
or
stos
cmp
add
push
cmp
sub
mov
pop
xor
in
ds
xchg
scas
and
xor
pop
and
aad
popa
rcl
call
es
lock
mov
jmp
into
movsb
jmp
jbe
cltd
mov
add
in
sbb
mov
jnp
stos
and
lods
orb
loop
les
push
out
mov
ljmp
test
push
out
mov
orl
xchg
push
dec
xor
xchg
inc
loop
xor
sbb
pusha
insl
sub
xlat
and
loop
dec
add
into
or
push
hlt
sahf
cmpsl
in
push
mov
mov
out
push
xor
mov
test
adcb
push
jmp
or
arpl
push
xlat
dec
sbb
test
pop
aad
cmp
sub
jp
dec
xor
mov
outsl
je
xchg
inc
icebp
push
push
movsl
cmpsl
out
pop
ficomps
or
lcall
popf
cli
lret
iret
clc
xchg
in
out
and
in
mov
lret
ljmp
pop
cmc
sub
data16
cmp
sbb
mov
test
mov
mov
ja
push
cltd
fwait
jb
sarl
xchg
jle
mov
out
cli
add
repnz
je
inc
lret
mov
hlt
add
mov
cmc
daa
mov
hlt
sbb
std
out
outsb
movl
std
xlat
aaa
movsb
push
addr16
imul
dec
mov
mov
or
mov
loope
inc
push
lret
test
mov
imul
in
pop
pop
clc
es
mov
inc
aaa
in
cmpl
mov
mov
ja
xor
adc
jo
ja
mov
add
and
inc
push
mov
aas
sbb
hlt
call
fnstsw
sub
and
lods
push
fs
loopne
mov
inc
xlat
out
sbb
and
jno
dec
movsl
or
ret
inc
mov
mov
lods
das
fwait
pusha
out
daa
mov
inc
std
add
push
test
in
push
js
pushf
lods
cmp
fildl
pushf
shll
jne
int
mov
cs
aad
or
ja
push
add
bound
and
pop
push
pop
jecxz
xor
gs
and
mov
mov
sbb
in
sbb
nop
pushf
xchg
jb
sbb
gs
icebp
call
and
nop
scas
cmp
stos
ficompl
mov
and
ljmp
nop
mov
or
or
dec
les
pop
mov
jnp
cmp
mov
ror
popa
pop
adc
mov
out
pop
and
sahf
ret
stos
pushf
call
push
mov
push
popf
jmp
mov
xor
ss
adc
push
je
sub
pop
and
cwtl
mov
cs
inc
jae
loop
and
inc
mov
hlt
xor
shlb
dec
movsb
xchg
fimuls
das
dec
icebp
fstps
jne
push
arpl
mov
cli
out
pushf
xor
mov
xchg
scas
in
fdivrs
mov
repz
jl
mov
fwait
jl
xor
dec
jmp
int
push
js
dec
call
arpl
dec
cs
jbe
xor
push
add
cwtl
inc
pop
mov
roll
out
ss
or
ds
mov
lcall
dec
inc
lret
addr16
and
jge
movsb
pusha
dec
insb
mov
xchg
pushf
outsb
add
xchg
outsl
test
add
push
push
inc
mov
cld
sarb
push
int
dec
bound
in
mov
lods
mov
mov
pop
scas
or
cmp
adc
es
or
sahf
xlat
jb
pop
out
cmc
xchg
mov
fisubrl
xor
loop
std
push
dec
inc
fldt
daa
add
sti
jb
adc
xchg
inc
sub
xchg
and
cmc
stc
out
imul
stos
aas
mov
push
cmp
imul
and
clc
inc
fwait
sbb
xlat
cs
add
out
sub
pop
sbb
sbb
and
in
cmp
mov
in
pushf
add
sbb
stos
sbb
es
test
mov
jge
lret
mov
jp
mov
xchg
sub
popf
mov
fld
in
outsb
push
push
in
fcmovbe
sbb
mov
dec
stos
and
xlat
lret
sahf
repz
lcall
mov
inc
sbb
and
and
cltd
push
mov
jbe
aaa
push
aam
icebp
ret
jo
fucomi
test
inc
fcom
inc
pop
pushf
cmc
pop
jmp
add
sbb
mov
cld
mov
leave
xchg
bound
dec
lret
xchg
je
xchg
pushl
adc
inc
push
dec
inc
test
xchg
scas
dec
ds
mov
jge
jge
jo
popf
push
fs
iret
inc
jb
loope
jl
mov
pop
cli
popf
sub
and
test
flds
xlat
cld
cli
loopne
movsl
dec
dec
int3
sti
sbb
movsb
sub
jecxz
test
nop
mov
lahf
mov
jmp
mov
xchg
dec
and
jg
xor
int
arpl
or
pop
js
movsb
cmp
push
inc
sub
imul
dec
push
xor
shll
mov
or
mov
add
add
les
sub
xchg
sbb
imul
mov
test
add
in
cmp
mov
nop
data16
xor
cmc
imul
mov
inc
mov
cmpsb
push
out
in
adc
add
addb
mov
cld
dec
jle
mov
imul
sub
outsl
adc
pop
xor
mov
or
pop
jg
adc
scas
les
mov
mov
dec
cmp
dec
pop
mov
lcall
ss
aaa
lods
sbb
iret
push
out
push
or
cli
sbb
push
lds
push
xlat
sahf
push
test
jl
ficoml
inc
stos
pop
mov
dec
popa
and
inc
cs
movsl
mov
mov
jge
int3
and
push
sti
push
cld
dec
lods
movsb
pusha
sti
not
cltd
mov
or
sub
loope
out
fimull
les
mov
pusha
mov
mov
xchg
inc
out
push
cmp
push
sbb
sbb
ljmp
dec
popf
shrb
cwtl
test
pop
xlat
std
stc
lods
lahf
and
lret
out
cmp
out
stos
pop
sbb
fcmovu
shrl
ficomps
jne
call
std
cs
imul
xlat
jecxz
xor
pop
jge
es
call
sub
or
inc
sti
out
cmc
sbb
aaa
mov
adc
test
lret
or
ljmp
pop
inc
sub
mov
pushf
cmp
and
fstps
inc
ds
cmpsb
pop
cs
jmp
aaa
inc
sbb
fdivs
imulb
in
jo
adc
jmp
adc
xchg
lods
or
pop
ds
push
xor
mov
cmpsl
dec
mov
dec
xor
add
lods
fildll
enter
mov
pop
cld
repz
stos
sub
cmp
mov
mov
jo
scas
movsl
and
jno
mov
xchg
sbb
rcrb
es
ds
nop
inc
mov
add
jp
aaa
push
sub
js
inc
add
clc
fmull
loopne
mov
pop
adc
ds
pushf
insl
imul
lods
cwtl
outsb
stos
cmp
icebp
pop
popa
ljmp
cli
pop
aaa
xchg
mov
dec
cli
push
mov
mov
jns
xchg
pop
cmpsb
fidivrl
aas
repz
fisubs
jb
rcl
xor
pop
mov
mov
sbb
cmp
iret
shll
adc
out
jns
push
xchg
dec
cmp
insb
test
scas
arpl
push
xor
mov
mov
push
inc
mov
mov
aaa
lock
dec
in
jb
fbld
jbe
ret
cmp
xor
xor
inc
ret
shlb
data16
in
aaa
ret
arpl
pop
cld
cli
adc
lea
push
push
popa
loop,pt
mov
cmpsl
xchg
cmp
scas
mov
orb
jle
repz
fcomip
mov
or
adc
cwtl
jns
mov
push
cmp
or
shlb
cmpsl
loopne
jecxz
stos
repnz
lock
inc
add
fstl
push
daa
enter
dec
repnz
jmp
imul
sbb
ds
out
or
loopne
loop
testb
xchg
sbb
cmpsb
mov
js
pop
bound
pop
mov
adc
sahf
testb
movsb
pop
jns
pop
addl
ret
xchg
push
jno
scas
push
cmc
and
mov
adc
mov
leave
pop
lahf
jle
push
lock
xchg
pop
mov
mov
adc
xchg
aam
cmp
test
js
pop
popf
dec
orl
push
inc
out
jae
dec
ljmp
cwtl
mov
jno
repz
push
adc
xor
mov
mov
aam
sbb
outsl
inc
xlat
movl
scas
or
adc
and
pop
loop
jl
test
push
rcrl
test
sbb
loop
outsl
dec
fnsave
mov
xor
xchg
adc
sub
fisubs
out
mov
loop
inc
pop
addb
pop
arpl
inc
shll
in
outsb
push
add
frstor
loopne
sub
stos
bound
lea
mov
sbb
pop
in
out
lds
lret
sub
lea
cmpsl
imul
nop
out
adc
rolb
into
sbb
imul
out
mov
stos
xor
cmc
shrl
jecxz
jmp
rcrb
loop
and
cmpsb
inc
jne
mov
test
loope
out
mov
arpl
cltd
mov
cmpsb
imull
xchg
cmp
fcmovnu
or
fstps
ss
sub
pushf
int
xchg
mov
mov
jmp
ss
cmp
in
xchg
out
jnp
fst
sub
cmp
in
push
hlt
xchg
repnz
sti
int3
fsubl
pop
pcmpeqb
dec
cmpsl
pop
cmp
nop
add
jmp
std
lcall
cmp
cmp
jecxz
dec
enter
mul
test
pop
push
sub
repz
popf
cwtl
sarl
adc
dec
jle
imul
leave
mov
fldcw
das
dec
outsb
push
push
adcb
mov
clc
xor
orl
xor
test
cli
ficoml
and
outsb
jecxz
or
das
pop
lds
cmc
jl
aam
dec
nop
or
cmc
sbb
sub
pop
inc
inc
push
pop
ds
mov
divl
cmp
test
outsl
mov
int
xchg
add
push
jns
test
jne
aas
add
add
and
lock
scas
shrb
mov
int3
dec
add
adc
imul
clc
xor
mov
icebp
in
icebp
mov
loopne
cmpsb
stos
pop
dec
lea
push
fists
ret
fisubrl
lret
fucompp
push
test
mov
stc
push
movsb
es
shlb
sbb
icebp
lods
xchg
sti
pop
call
adc
mov
pop
mov
sub
jl
pop
scas
xor
pop
xchg
out
push
dec
iret
pop
enter
call
mov
jbe,pn
cli
inc
iret
jge
mov
mov
insb
cmp
fdivrl
sbb
jg
jnp
mov
jno
icebp
cmpsb
fs
pop
int3
xacquire
das
es
dec
gs
inc
pop
add
mov
pop
or
push
imul
shrl
add
inc
or
mov
enter
inc
mov
pop
mov
adc
xor
fwait
sbb
bound
scas
push
int3
loope
add
je
jno
mov
sbb
repz
jb
outsb
mov
inc
loope
or
lods
cmpsb
out
fnstcw
pop
pushf
mov
push
pop
ss
out
call
jg
cwtl
jge
mov
jecxz
rcrl
lods
roll
push
jno
movsl
mov
mov
pop
in
sub
lds
fwait
cmp
add
out
push
scas
xorb
lahf
jmp
insb
and
test
popf
pop
leave
mov
iret
insb
mov
jmp
imul
cmp
push
xchg
jbe
mov
insb
or
in
pop
sub
lcall
xchg
inc
xchg
push
xor
jbe
popf
adc
dec
ja
or
mov
ret
ret
push
mov
xchg
js
sahf
hlt
cmp
mov
es
imul
ja
and
arpl
pop
shll
jo
pop
and
adc
mov
jle
cltd
dec
popl
dec
std
pop
lock
lahf
inc
les
jno
mov
gs
push
inc
int
cmp
fcoms
les
mov
ret
mov
in
jo
ljmp
push
jp
xchg
xor
outsb
ficompl
in
xor
fs
adc
mov
insb
cmpsb
mov
test
repnz
dec
xchg
jno
sbb
or
jge
dec
popa
and
jle
outsl
out
mov
rolb
mov
push
lods
push
inc
repz
mov
jbe
lret
or
ljmp
cmp
mov
mov
pop
in
pop
test
das
mov
jo
imulb
add
daa
in
movswl
xchg
sub
nop
cld
or
cwtl
js
out
jecxz
jns
lret
pop
jns
test
ja
ror
cmpsb
popf
mov
cmp
sub
incb
negb
lret
cmp
stos
push
out
cmpb
loopne
repnz
pop
mov
pmaxsw
test
sbb
popa
push
out
pop
lahf
jl
and
or
lahf
sub
mov
pop
pop
sub
pushf
repz
jb
pop
add
mov
jge
test
jno
pusha
bound
int3
lea
inc
pop
xor
mov
or
push
adc
stos
je
iret
daa
pop
stos
mov
leave
les
movsb
movsl
les
inc
lcall
das
mov
add
dec
sub
ss
sbb
xor
xchg
pop
xor
mov
mov
sub
mov
push
cli
scas
push
ret
or
mov
and
test
xchg
js
inc
dec
jle
cmp
and
in
jl
and
pop
sub
aas
out
inc
cmp
cld
dec
xchg
sub
push
sub
push
sbb
fisubl
std
push
testb
js
xor
or
imul
sub
adc
adc
jecxz
sbb
repz
cld
add
push
xor
mov
push
xchg
std
push
sub
scas
mov
mov
push
inc
movsb
jne
in
mov
cli
jo
cwtl
jle
dec
rcl
pusha
jmp
add
jae
cmp
xchg
les
cld
repnz
mov
add
mov
outsl
pop
call
hlt
and
sub
in
pop
jae
lahf
test
xchg
cli
push
cwtl
aam
cwtl
rcll
out
inc
sbb
pop
hlt
jo
cld
filds
jg
mov
pop
movsl
mov
cmp
jno
fs
fsubp
cmp
dec
sbb
mov
frstor
xor
loope
rcrb
jno
rcrb
pop
jnp
lea
add
add
push
mov
push
rcll
cs
cmp
movsl
mov
sti
leave
and
inc
imul
adc
adc
pop
lret
jmp
js
lock
div
lods
arpl
xchg
lods
lds
popf
sahf
out
lods
jl
dec
pop
rclb
sub
pop
sub
jae
movb
cmp
dec
jns
repz
fsubrs
out
dec
pusha
fwait
add
mov
jns
or
or
data16
scas
pop
pop
getsec
xchg
ret
leave
xchg
pop
sub
pushf
test
in
xchg
stc
pop
sarb
push
adc
mov
lcall
js
rorl
sbb
ss
mov
rorl
test
push
jb
push
stc
cmp
add
notl
cmp
fstpt
push
stc
inc
punpckhwd
mov
lods
insb
scas
addb
push
pusha
and
imul
pop
and
pop
mov
outsl
mov
adc
into
imul
addr16
lock
cmp
ret
jno
outsb
ret
jl
dec
push
test
mov
pop
aaa
dec
in
stos
or
inc
push
mov
push
int3
jne
movsl
xchg
fs
cli
scas
jmp
insl
imul
fcmovne
sbb
ljmp
xorb
or
jmp
loopne
imul
cmp
mov
xlat
adc
xchg
cld
sbb
enter
pop
cs
out
sub
cmpsb
xor
in
mov
imul
inc
stos
test
pop
dec
adc
inc
inc
mov
sti
jnp
cmp
pop
xchg
fidivl
int3
std
jo
sub
fisubs
gs
mov
push
jle
inc
push
ss
cmp
roll
adc
mov
inc
cmpsb
cwtl
shlb
sbb
out
jecxz
imul
jns
enter
rcrb
movsb
or
movsb
push
test
test
repnz
pusha
ss
jae
stos
push
pop
mov
mov
jecxz
push
mov
xor
xor
scas
xchg
push
sbb
push
mov
inc
xchg
adc
daa
mov
cmp
pop
push
xlat
stos
xchg
daa
push
addr16
popa
mov
shr
xchg
data16
aas
add
mov
fwait
pop
js
aam
std
mov
sub
lahf
loopne
mov
add
jb
in
adc
mov
and
lret
pop
xchg
add
xchg
xchg
mov
mov
lods
cmp
adc
aas
aaa
lock
push
cs
arpl
icebp
test
xor
addr16
push
pop
push
popa
mov
jnp
push
xchg
movsl
mov
xor
fbstp
and
ja
and
xor
and
xchg
iret
cmp
clc
repz
or
cs
into
or
arpl
jno
test
mov
sub
fmull
jnp
cltd
mov
and
aas
iret
xchg
loopne
imul
cmp
xchg
mov
jmp
dec
mov
mov
call
push
xlat
je
and
or
aaa
clc
scas
call
adc
stos
ficoms
jbe
ret
mov
sub
es
lock
inc
mov
cwtl
int3
push
les
push
out
xor
mov
in
ljmp
cmpsl
lcall
mov
add
in
aas
xchg
and
addl
lea
mov
jmp
fidivl
movsb
jae
imul
dec
xor
sbb
mov
jmp
into
test
test
xchg
inc
fdivrs
push
lret
jl
xchg
sbb
and
mov
sub
hlt
jbe
pop
mov
push
sbb
mov
into
ret
xlat
mov
jge
es
adc
adc
dec
xchg
or
dec
cmp
pop
ja
pop
in
sub
sub
jno
push
test
xorl
dec
insl
sbb
fwait
shr
xchg
xchg
pop
sub
jne
popa
jmp
mov
cltd
stos
adc
cmp
sub
leave
test
fisubs
or
inc
dec
cmc
jle,pn
insl
jmp
or
inc
push
out
jb
sbbl
ljmp
jmp
int3
stc
stos
lea
pop
arpl
stos
mov
cmp
shll
sbb
jns
cmpsl
lods
adcb
mov
into
mov
mov
push
jae
rep
or
jl
sbb
or
cmc
inc
fldenv
jecxz
push
outsb
push
out
sbb
into
movsl
xlat
and
aam
cmp
xlat
cmpsb
stos
inc
dec
mov
jp
mov
jae
lahf
pop
dec
movhps
pop
mov
adc
in
outsl
mov
jl
mov
jnp
jae
and
loope
inc
and
and
shrl
clc
mov
jp
xchg
xchg
mov
sti
addr16
out
fcomps
mov
ret
test
add
xchg
andb
mov
ror
inc
leave
pop
and
std
push
fs
imul
jne
sub
test
inc
sti
xor
ds
dec
stc
sarl
lods
cltd
mov
pop
xor
pop
push
ja
iret
pop
je
mov
sub
mov
lds
mov
dec
stos
shl
cmpsb
adc
sub
and
xor
scas
notl
in
rorb
mov
repnz
lea
jl
lret
icebp
xchg
fmull
pop
cs
ret
mov
clc
mov
and
mov
lods
xor
jne
out
mov
push
fbstp
and
push
inc
andb
push
fnstcw
sub
xor
in
push
jnp
movsl
je
subl
jmp
mov
dec
notl
dec
fsub
test
cmp
pop
adc
movsl
pop
cmpsl
outsl
or
in
jbe
dec
inc
test
pop
in
pop
push
rcll
pop
cmp
push
push
pop
bound
loopne
mov
iret
push
inc
inc
inc
in
mov
push
mov
add
mov
mov
setne
test
mov
outsb
cmp
jmp
push
hlt
or
push
xor
fwait
dec
or
ss
out
fsubl
test
cmp
xlat
pop
andb
ljmp
mov
cmp
inc
mov
xor
adc
test
jmp
out
fdivrs
push
inc
pop
roll
out
cli
sbb
push
cmp
jg
out
js
test
adc
mov
mov
mov
mov
pop
bound
inc
add
mov
mov
jno
adc
cmp
xor
incb
mov
iret
mov
jp
push
xor
aam
cwtl
cmpsb
loopne
jns
mov
stos
icebp
int3
les
cs
xlat
lds
pop
push
scas
sbb
add
xor
xchg
push
cmc
inc
sarl
push
sub
and
sbb
imul
pop
sub
jno
jge
cmp
out
cmp
xchg
mov
add
dec
adc
and
add
xchg
insb
aaa
imul
push
ret
jmp
jecxz
out
decl
aam
sub
sbb
sub
cmpsb
movl
shrl
xor
outsl
loope
loopne
add
cmpsb
sub
imul
pop
cmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
jb
sbb
jnp
pushf
jnp
ror
sbb
jae
cmp
lds
inc
mov
dec
and
xor
in
loope
jle
iret
in
inc
loop
cmp
ret
cmp
ja
cmp
and
mov
call
movsb
imul
ret
sub
mov
cmp
mov
jo
pop
sbb
sbb
je
mov
xor
sbb
lock
leave
stos
nop
mov
mov
sub
pop
mov
and
dec
icebp
call
test
mov
push
ret
jp
mov
add
cmp
xor
aad
int3
pop
cmp
sub
or
add
adc
push
sub
jns
cli
in
ret
pop
sub
es
jecxz
je
jno
ret
lea
xchg
jp
push
cmp
cmp
test
lret
test
js
or
arpl
loopne
aam
cmpsb
jp
lret
in
inc
into
pop
pcmpgtw
sahf
shl
in
dec
shlb
lcall
jg
adc
push
out
inc
sbb
xor
loop
or
rorl
insl
gs
cltd
dec
jg
push
test
icebp
ja
fwait
shlb
subl
pop
adc
movsb
cmp
adc
arpl
lock
out
pusha
lret
lret
popf
leave
sahf
test
in
mov
sbb
in
xorb
in
and
ret
sub
add
add
push
dec
int3
pop
ffree
jmp
sub
mov
pop
jg
sbb
lret
adc
fcoms
and
mov
daa
pusha
push
ds
push
xchg
stc
aam
pop
pusha
mov
xor
outsb
sub
mov
ljmp
jge
fstl
aas
mov
sbb
andl
hlt
adc
notl
mov
xor
fdivrl
dec
data16
rcrl
repnz
cld
push
push
add
jmp
xchg
ret
xorl
adc
lods
push
sahf
push
pusha
iret
push
es
cwtl
movsb
sbb
add
pop
adc
scas
fucom
std
xor
scas
mov
loopne
push
and
push
dec
fldenv
lods
push
push
pop
fmull
pop
pop
daa
jne
cli
mov
lret
add
mov
sub
repz
push
in
orb
hlt
imul
notl
iret
test
mov
mov
repnz
adc
jns
fs
lgdtl
jmp
jbe
shrl
imul
sbb
and
lret
push
pop
inc
mov
adc
imul
aaa
xor
and
or
lahf
add
fisubl
push
fdivrs
std
push
ljmp
fistps
or
test
jmp
dec
sub
outsl
ljmp
push
dec
xor
pop
mov
popf
stc
jne
or
orl
cmp
insl
mov
testb
scas
dec
push
pop
in
add
into
clc
xchg
sbb
aas
jmp
dec
in
mov
push
mov
test
mov
ret
pop
int3
sub
outsb
fidivs
ja
xchg
pop
lock
orl
stc
push
pop
mov
xchg
arpl
mov
pop
jae
movsl
jp
ja
and
dec
test
inc
mov
andb
jmp
mov
inc
lea
jge
fs
fistpl
in
cmpsb
push
scas
jmp
aaa
mov
xor
mov
daa
out
xlat
je
inc
ljmp
push
stc
icebp
outsb
out
jno
sub
outsl
jbe
mov
mov
cltd
mov
push
dec
sahf
in
xchg
cmp
pop
sbb
test
mov
adc
lods
cmp
cwtl
sub
add
outsl
gs
mov
fmull
pop
jno
sbb
iret
int3
mov
jo
lock
fidivl
xchg
fisubrs
sub
fwait
dec
dec
pop
and
arpl
int
xchg
and
negl
gs
stos
mov
daa
movsb
or
and
and
pop
mov
lahf
aas
mov
into
add
ja
pop
or
push
push
dec
inc
jo
jmp
decb
add
andl
popa
cs
jg
aas
faddl
popa
int3
dec
mov
dec
mov
xchg
fwait
aaa
popa
jns
jp
icebp
out
add
sub
lret
jnp
jnp
dec
fimull
dec
pop
xor
testb
clc
or
lods
dec
stos
bound
mov
iret
sarb
cmp
pop
leave
jae
iret
cmpsb
push
addr16
sahf
inc
shll
pop
imul
sub
in
imul
cmp
mulb
sub
push
int
mov
ja
pop
arpl
sub
mov
push
mov
cmp
stc
jae
sub
je
out
jecxz
cmp
out
incb
mov
movl
xchg
push
shlb
sub
jg
imul
insb
repz
push
in
adc
jl
je
jl
jno
jns
jns
sub
add
ret
push
rorb
pop
int3
sub
xor
fcompl
cmpsb
add
andb
add
lds
js
sbb
jno
cs
gs
pop
xchg
loop
in
inc
test
jle
mov
add
sbb
mov
fdivs
inc
in
adc
add
push
mov
fbld
jnp
dec
pop
sti
loope
mov
mov
ret
dec
test
pop
adc
adc
xchg
stos
sub
int
sbb
cmp
cs
push
xchg
inc
inc
lret
or
pop
mull
fxch
cmp
cmp
incb
ficompl
addr16
inc
or
jp
arpl
adcb
outsb
stos
rcrb
add
daa
in
imul
push
push
cmp
xor
mov
movsl
or
xchg
subl
mov
mov
mov
sub
inc
lret
sbb
cmp
xchg
dec
mov
rcll
push
hlt
dec
and
mov
daa
xchg
shll
cld
lahf
ret
fwait
sbb
xchg
cmp
ds
pushf
test
xchg
push
lods
into
push
jmp
jl
les
sbb
or
fnstsw
xchg
addr16
mov
pop
cvtps2pd
lds
pop
shll
push
test
into
cld
mov
aad
jb
mov
mov
sar
outsb
pop
pop
mov
hlt
fcoms
loop
inc
clc
repnz
sbb
clc
sbb
xor
stc
push
add
sub
sub
gs
test
arpl
scas
xor
cmp
enter
add
jl
xor
lahf
mov
add
cmp
or
mov
dec
inc
lret
test
jmp
mov
loop
dec
test
enter
mov
fidivs
test
xor
jge
fmull
inc
fwait
add
cmpsb
adc
mov
xchg
mov
and
mov
bound
inc
orb
sti
sub
mov
test
xchg
movb
lcall
and
push
sub
addr16
arpl
sbb
mov
iret
cwtl
xchg
insl
nop
push
dec
dec
les
lds
fwait
jno
xor
aas
andl
mov
adc
lods
test
sub
and
sbb
jno
shll
mov
je
dec
xchg
sub
inc
stc
jb
addl
xchg
cmp
jle
pop
sbb
xor
imul
daa
or
orps
adc
gs
dec
clc
lret
dec
xchg
psubb
adc
add
mov
mov
add
inc
mov
and
arpl
stos
xchg
mov
shll
inc
and
rcl
sub
mov
cmp
insb
loopne
je
ja
xchg
cld
fsubr
xchg
jge
rorb
dec
repnz
hlt
jo
inc
movsl
xor
imul
cwtl
sahf
jmp
pop
xorb
fs
sub
mov
jbe
pop
adc
lods
fsts
cmp
in
push
jne
add
cmp
dec
enter
aaa
jge
in
ret
out
and
push
pop
outsl
gs
add
mov
add
mov
sbb
or
mov
into
adc
adc
pop
push
mov
out
push
mov
std
xchg
aaa
push
std
mov
testl
mov
dec
aas
test
xorl
sub
cld
dec
ror
sub
inc
xor
lret
pop
sbb
pop
arpl
jbe
aaa
add
lock
ss
mov
test
stos
xlat
shll
sbb
jle
pop
cmp
xor
data16
hlt
dec
jmp
push
movsb
push
insb
sarl
pop
arpl
test
or
iret
mull
insb
jo
pop
das
ret
push
mov
jl
push
movsb
imul
adc
mov
outsb
inc
fs
inc
mov
aaa
inc
gs
cmc
dec
mov
or
jge
push
mov
jns
enter
inc
inc
sahf
ja
jo
xor
jle
imul
cmp
dec
testl
cli
pop
add
daa
sub
test
mov
clc
shr
les
sub
shrl
aad
fimuls
aaa
xor
stos
mov
scas
sbb
inc
ret
leave
push
clc
rcll
insl
std
mov
xor
mov
in
jp
push
repz
lock
mov
pop
pop
sub
mov
insl
cmp
lods
mov
outsb
out
jae
test
das
lods
inc
test
add
sarb
out
push
inc
pop
mov
ds
daa
push
adc
dec
inc
inc
lret
mov
cmp
jg
jg
cmpsb
inc
sub
push
add
addl
imul
cltd
push
dec
mov
lods
cmp
imul
mov
add
xchg
mov
add
mov
push
js
jecxz
cmp
arpl
and
adc
jmp
loopne
lds
mov
mov
aad
pop
arpl
test
mov
inc
xchg
xchg
xchg
mov
cmp
pop
adc
test
jae
dec
daa
popf
out
pop
ja
ret
imul
cmp
xor
into
repnz
repnz
lea
xor
or
xlat
fdivp
mov
ljmp
jl
std
or
repnz
inc
mov
and
rcrb
or
insl
or
into
mov
dec
add
aas
pop
aas
mov
inc
addb
lock
xor
pushf
add
or
outsl
add
rclb
call
clc
jp
mov
ds
insb
lods
add
fnstenv
imul
adc
sub
push
sti
cmpsl
sub
jl
jns
jb
inc
xlat
das
xor
outsb
movsl
sbbb
cmp
mov
enter
xchg
leave
jp
hlt
adc
add
in
sbb
mov
adc
lcall
in
movsb
push
and
in
adc
jae
out
xor
lock
inc
aas
xchg
add
mov
add
stc
lahf
sti
push
loop
mov
loope
adc
inc
push
gs
push
ret
stos
out
fcompl
jne
pop
add
leave
lods
add
jge
test
pop
mov
xchg
inc
sbb
cmp
or
mov
mov
sub
arpl
pop
jne
cmp
leave
sbb
jb
fcompl
lahf
lock
cmp
icebp
fucomp
xchg
into
cmpsb
pop
clc
insl
in
mov
test
cmp
leave
cli
imulb
push
int3
pop
xchg
insl
push
clc
sub
fdivp
in
mov
inc
outsb
iret
adc
xor
xchg
pop
test
mov
push
jl
cld
insb
mov
ljmp
fisttpl
jl
inc
in
inc
cmp
fisttpl
ljmp
mov
mov
pushf
sbb
nop
mov
cmp
jbe
push
inc
xorb
aas
fisubs
xchg
adc
fwait
push
hlt
dec
xor
ret
inc
scas
sbb
fisubs
jle
pop
xlat
call
jae
cmpsl
in
aad
stos
cltd
lds
adc
and
test
mov
jns
shl
lds
push
cld
mov
movsb
or
jg
sbb
cmc
cmp
js
mov
mov
fstp
sub
imul
enter
adc
adc
enter
fmull
in
add
mov
push
inc
out
cltd
insl
cmp
sub
in
jmp
push
mov
mov
sbb
loop
test
cmpb
jl
iret
aas
popf
in
fnstcw
aam
leave
jne
mov
outsb
dec
std
lds
jle
mov
loop
inc
andb
pop
nop
pop
dec
aas
add
stos
pushf
jp
cmpsb
icebp
jne
push
inc
push
aad
dec
lret
push
xlat
insb
sub
xchg
add
loop
fisttps
mov
and
or
cmpl
and
je
fnsave
sbb
mov
in
sbb
sbb
mov
out
mov
mov
adc
xchg
cmc
dec
mov
stos
xor
pop
psadbw
xor
ret
xor
mov
imul
cli
mov
mov
push
jnp
inc
sbb
cmp
bound
fisttpll
add
cvtps2pi
xchg
int3
psllq
aam
dec
aam
jnp
xor
mov
aad
xchg
icebp
sub
mov
loopne
xor
in
ss
xor
and
std
jmp
or
insb
xchg
mov
out
push
test
pop
enter
icebp
mov
rorl
mov
jecxz
jnp
popf
orl
addr16
sub
xchg
mov
inc
xchg
movsl
jmp
fwait
cwtl
dec
je
push
rcl
arpl
sti
push
inc
mov
in
mov
test
dec
stos
mov
stos
jno
dec
hlt
jmp
adc
in
stos
and
xor
fcomi
insl
sub
cld
lods
popa
and
inc
das
rcl
mov
and
xchg
loope
lock
les
popa
in
add
mov
xchg
dec
or
pop
pop
sbb
push
repz
lahf
adc
imul
jecxz
inc
jecxz
fsubs
shlb
mov
pop
cmp
data16
add
sbb
fsts
out
in
ficompl
lods
cmp
pop
sbb
xchg
jl
and
outsb
loop
je
lcall
pop
sbb
pop
cmpl
push
repnz
lods
les
cmp
vmovntps
sbb
fdivl
jns
gs
int3
jle
mov
test
inc
iret
jmp
sti
cmpsb
mov
mov
jmp
mov
dec
dec
xchg
jp
or
cmc
push
sbb
jp
scas
and
jbe
sub
les
sbbl
in
out
xchg
push
hlt
mov
cltd
pop
sbb
or
adcl
adc
xchg
sbb
xchg
notl
loopne
inc
sub
sbbl
es
test
cwtl
dec
loop
mov
adc
pop
jmp
mov
xor
ja
into
in
jge
mov
inc
lret
adc
popf
test
shlb
xchg
add
push
jl
ret
lock
adc
xchg
push
adc
mov
jg
and
insb
inc
out
cmp
mov
lret
repz
aam
dec
and
or
push
mov
lds
lea
ss
pop
int
add
mov
inc
and
add
mov
outsb
adc
mov
push
aaa
scas
sbb
push
xchg
stos
push
addr16
stc
dec
dec
sar
int
loope
push
sbb
int
add
hlt
mov
test
adc
aas
dec
xor
add
cmpsl
shll
in
jbe
leave
cmp
test
popa
mov
dec
jno
out
test
mov
adc
test
sbb
xchg
jecxz
inc
jnp
aad
pop
inc
ljmp
add
add
jae
aas
push
adc
lret
mov
adc
lcall
mov
shll
cmpsl
and
mov
lods
cmp
add
jns
loope
xchg
mov
push
leave
push
pushf
xor
mov
or
call
inc
fstps
pop
fildll
loope
bound
leave
loopne
les
push
rorl
testb
inc
jb
jmp
pop
mov
bound
lcall
mov
rcll
dec
call
pop
mov
push
mov
cs
jne
mov
shr
in
imul
add
and
push
mov
repz
cmp
jb
sub
fdivrl
ret
hlt
inc
pavgw
aas
outsl
leave
nop
in
push
and
sub
inc
add
dec
sahf
jo
mov
or
inc
pop
jae
roll
mov
repz
mov
xor
imul
mov
cltd
cmpb
fwait
jns
fadds
inc
scas
fstps
and
cmp
push
rorl
xchg
out
jno
and
jmp
fists
mov
outsb
mov
pushf
jecxz
cmp
add
mov
xchg
and
push
iret
es
in
xchg
inc
cs
adc
inc
outsl
jnp
xchg
dec
aaa
imul
lds
and
and
push
sbb
lret
push
fisubl
mov
jecxz
sub
or
adc
inc
enter
mov
ss
and
mov
mov
xchg
adc
inc
xor
cld
and
js
cli
icebp
ljmp
mov
add
cmpsb
leave
movb
or
pop
fldl
out
negb
xchg
bndstx
xor
push
push
shrl
test
xor
adc
rorb
adc
fcomip
push
add
dec
aaa
dec
jns
add
ss
jnp
fstl
and
cld
popa
pusha
fsubl
lret
push
adc
push
fsub
push
loopne
int
daa
stos
mov
and
lods
mov
mov
aad
sbb
or
cmp
enter
les
cmp
hlt
adc
pop
sbb
fsubrs
sbbb
je
xlat
sbb
xchg
pop
cmpsl
mov
in
dec
popf
inc
cld
and
cmp
jg
clc
test
mov
push
and
dec
mov
pop
dec
inc
int3
cwtl
int3
imul
and
lea
and
cmpsb
push
add
inc
out
mov
aas
js
lods
testl
lods
sbb
mov
in
arpl
fwait
push
icebp
dec
pop
cltd
call
sub
xor
outsl
sbb
mov
lock
fwait
cwtl
aam
orb
jmp
popf
lret
iret
mov
mov
out
mov
pushf
mov
hlt
mov
sub
fidivs
js
adc
cld
aaa
sbb
sti
mov
xor
or
test
pop
mov
add
and
mov
fsubl
dec
stc
cmc
repnz
jb
xor
and
mov
wbinvd
leave
mov
xor
gs
sbb
sbb
repz
call
jl
iret
ja
ljmp
ds
dec
ret
jmp
adc
sarl
jbe
mov
es
mov
push
push
pop
lods
and
pop
ds
jp
fisubl
mov
jl
lret
gs
jne
test
out
push
pop
jg
dec
arpl
and
add
sub
push
cli
inc
dec
fsincos
add
inc
outsl
lret
in
push
dec
inc
xchg
cld
icebp
push
ret
les
int
shrl
testb
add
int3
lock
mov
inc
dec
mov
std
mov
lea
ss
fidivrs
cmp
push
pop
repz
cmp
xchg
xchg
xor
mov
pop
push
pop
rdpmc
or
je
in
ret
test
into
cs
test
or
xchg
sub
mov
ficompl
movsl
shll
andb
lods
dec
inc
or
sahf
jne
hlt
push
inc
repz
or
fwait
mov
mov
outsl
and
je
cs
inc
out
and
and
pop
std
xchg
sbb
mov
jmp
add
jo
mov
pusha
test
cmp
ret
mov
add
dec
add
dec
enter
mov
loope
ret
push
hlt
mov
lods
test
pop
dec
cmp
xor
or
mov
mov
and
xorl
fwait
mov
scas
jnp
outsb
pop
or
xchg
out
push
push
push
sbb
lret
ds
pmaddwd
fimuls
jle
adc
test
mov
mov
arpl
push
mov
jne
test
shll
inc
pop
cli
inc
push
fcmovu
inc
or
sub
xlat
cmpsb
mov
ret
cmp
sti
pop
ljmp
push
xchg
ljmp
mov
test
in
sub
inc
jno
lcall
test
pop
add
shr
arpl
jmp
jmp
pop
cmp
adc
dec
fwait
push
daa
dec
cmp
insl
clc
jg
sbb
jne
into
mov
jge
jecxz
push
out
ljmp
into
js
xor
into
sar
adc
addr16
push
aaa
push
les
push
or
mov
xchg
push
jnp
pushf
outsl
lret
xor
jno
pop
shr
jae
leave
jae
xlat
aas
in
adc
ret
mov
mov
sbb
lea
in
cli
ljmp
lahf
push
movsb
insl
mov
imul
pop
enter
xchg
inc
out
lods
adc
mov
call
dec
out
pop
cmpsl
in
mov
cmc
andl
in
or
rcr
xlat
cmp
inc
cmc
dec
adc
push
mov
add
outsl
repnz
popf
dec
mov
pop
addl
sub
scas
int3
rcrl
lea
push
stos
pop
pop
enter
lods
decl
loop
mov
jecxz
sbb
add
clc
mov
dec
imull
xor
xchg
xchg
push
and
push
aad
xchg
ds
push
push
cwtl
les
add
and
mov
sbb
in
sub
in
rorb
pop
mov
jbe
xchg
xchg
or
lret
stos
add
ja
mov
mov
mov
dec
sub
xchg
movsb
daa
add
xchg
mov
popa
inc
cmpsb
or
jns
mov
adc
mov
ss
xor
stos
mov
test
or
aam
and
xchg
mov
inc
movsb
out
movhps
test
mov
inc
stos
sub
pop
jp
sbb
xchg
fstl
dec
xor
cld
call
pop
cmpsb
add
pop
frstor
push
push
xchg
sub
cli
je
mov
mov
mov
jnp
pop
sub
in
andb
pop
out
sub
sbb
das
mov
cmc
jecxz
pushf
sti
jo
daa
fsubrl
stos
inc
into
lods
mov
fwait
mov
stos
incb
ja
mov
gs
rcll
xor
sub
in
cld
dec
mov
pusha
mov
fwait
add
daa
adc
cmpsb
mov
vdivss
test
out
out
jecxz
lea
inc
xor
or
test
xor
xchg
test
cmp
mov
mov
push
test
sahf
mov
std
adc
or
fwait
repnz
push
aam
xchg
cmpsl
fwait
inc
pop
cmp
aad
push
pushf
sub
and
ss
ljmp
mov
out
std
push
leave
dec
cmp
sbb
icebp
in
sbb
les
mov
mov
flds
mov
dec
inc
notb
sar
arpl
ss
inc
xchg
mov
mov
leave
jb
sti
ljmp
repnz
pop
cwtl
pusha
or
lcall
cmp
sub
and
jge
jmp
bound
lret
iret
inc
data16
xorb
in
outsb
cmp
xchg
push
je
push
push
pop
mov
les
cmp
imul
jmp
popa
jne
repz
mov
sbb
out
inc
xor
or
scas
push
lcall
cs
pop
iret
push
adc
popf
outsb
push
xor
dec
fdiv
and
mov
pop
stos
dec
out
pusha
or
ljmp
adc
mov
sub
xor
out
or
cmp
daa
repnz
icebp
loop
inc
les
mov
or
push
ret
mov
aam
xchg
movsl
aas
pop
mov
outsb
popa
loopne
aam
out
rcll
lret
add
cmp
mov
mov
dec
adc
cmp
dec
out
je
not
inc
mov
test
in
ss
aaa
add
pop
xor
fistpll
pop
clc
jmp
fs
mov
sub
sub
inc
mov
jno
or
lods
gs
cmpsb
jbe
sarl
rorb
into
inc
push
cmp
arpl
jl
sbb
dec
adc
sti
xor
lret
movsl
or
xchg
aas
movsb
es
xchg
jbe
mov
dec
test
test
std
add
call
daa
mov
jecxz
arpl
in
xchg
mov
lahf
or
lock
lcall
ds
xchg
inc
jmp
rol
fwait
dec
xor
mov
in
ja
in
sub
mov
or
mov
sahf
mov
jno
popa
mov
ds
pop
jnp
mov
pop
push
cmp
pop
and
sub
sub
js
es
adc
insl
inc
or
pusha
xchg
and
addl
mov
mov
aas
ljmp
or
pushf
mov
push
enter
adc
fwait
or
test
cvttps2pi
push
fisttpl
lret
test
xchg
subb
into
lea
adc
test
cs
inc
sub
mov
mov
imul
and
pop
popa
mov
mov
jge
lcall
ss
add
fwait
mov
or
outsb
xor
dec
test
xor
push
std
out
popa
pop
cmp
or
cli
popa
cmpl
cwtl
cmp
dec
pop
das
fsts
in
out
daa
and
jp
pop
dec
cmpsl
repnz
fistpll
cwtl
pop
add
data16
mov
lret
or
mov
jl
jb
sub
cli
inc
insb
pop
inc
cli
inc
dec
push
clc
cmp
pop
mov
jo
and
xor
int3
inc
ss
pop
push
jbe
shlb
push
in
dec
xchg
arpl
add
cmc
in
in
insl
and
jmp
push
jmp
cs
jae
fstpl
out
insl
lret
ficoml
movsb
lods
outsb
pop
ror
adc
mov
xor
loopne
push
repz
push
xchg
es
fsts
push
pushf
dec
pcmpgtw
jp
jmp
jge
scas
subl
fisttpll
sub
fwait
or
jle
xorb
fcmovnu
cmp
cltd
aad
inc
cmc
std
push
cmpsl
arpl
ss
inc
ds
fisttps
fcmovu
xchg
addr16
push
pusha
xchg
je
or
jnp
test
sbb
call
inc
mov
cwtl
hlt
mov
lret
repnz
pop
popf
add
push
js
xchg
xchg
std
pop
popf
pop
cltd
clc
cs
jnp
xchg
lret
aas
in
hlt
xchg
test
push
sub
add
push
cmp
sti
mov
jp
cmp
dec
add
outsb
mov
jb
pop
sub
lock
dec
lock
aas
sub
mov
pop
jne
mov
sbb
pop
dec
mov
xor
jmp
loope
sti
loop
mov
push
xor
inc
js
cmpsl
add
push
mov
xchg
adc
fwait
or
mov
xchg
sbb
cmp
test
jne
out
nop
ss
pop
mov
pop
cltd
cmpl
sti
sbb
cmpl
pop
add
jge
adc
xchg
bound
mov
fdivl
xor
insb
stc
shl
stc
add
xor
and
inc
cmp
push
cmp
aas
pop
inc
jmp
mov
push
pop
jmp
sahf
es
cld
jle
arpl
jl
pusha
push
loope
xchg
inc
inc
push
xor
andl
inc
mov
jg
pop
pop
cwtl
mov
or
sub
sub
xorl
mov
shll
jne
cmp
mov
jbe
push
xlat
pop
mov
sub
pop
mov
or
add
add
inc
jae
and
jae
pushf
dec
and
sbb
cmp
es
ret
mov
add
fidivl
loop
cmp
xchg
sub
inc
out
adc
cltd
mov
push
adc
outsl
xlat
cmpsl
imulb
loope
mov
leave
aas
sbb
cmp
xchg
ja
jb
cltd
inc
cltd
adc
inc
test
std
shl
fmuls
push
popa
mov
ret
inc
ret
lret
stc
push
pop
cmpsb
dec
lock
xor
ds
push
aam
aam
adc
mov
xchg
movsl
mov
cs
enter
shll
cmp
xchg
and
xchg
xor
test
xlat
arpl
sbb
xor
xlat
or
jle
sbb
ljmp
loope
lods
imul
mov
je
push
lods
and
add
push
outsl
in
add
fcomip
xchg
outsl
stos
add
adcl
imul
mov
je
mov
and
inc
inc
mov
mov
jo
and
or
pushf
lods
push
jmp
test
adc
mov
dec
or
imul
leave
jp
mov
outsb
cmc
mov
loopne
jp
or
movsb
pop
or
fisubrl
movsl
stos
mov
int
fdivl
imul
mov
inc
rorb
daa
adc
push
mov
lock
jecxz
ret
ja
mov
and
fwait
repnz
clc
lea
mov
cmp
inc
test
push
jbe
push
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
sbb
jp
mov
jnp
jo
dec
std
lock
xor
xchg
dec
sbb
out
stc
aas
push
mov
movsb
fs
mov
push
shlb
test
inc
and
and
cmc
clc
daa
push
jmp
mov
cmp
repnz
push
aaa
sbb
mov
or
fisubl
or
xchg
dec
out
cmp
shrl
repz
xor
lret
outsl
or
mov
sbb
push
sub
out
xor
sahf
leave
aaa
xchg
fucom
mov
movsb
int3
xchg
push
adc
rorb
xor
flds
mov
mov
ljmp
pop
mov
jo
mulb
or
ljmp
xchg
loopne
mov
dec
ret
mov
je
mov
jnp,pt
hlt
mov
aam
and
mov
and
xchg
adc
fwait
jbe
out
jae
xor
sahf
xor
jnp
les
push
xor
add
testb
dec
pop
jno
mov
shll
inc
xchg
mov
mov
clc
mov
fdivrl
rclb
inc
sub
sbb
sarl
inc
sarl
jno
sbb
into
out
daa
jo
mov
into
or
pop
aaa
mov
lock
scas
jo
sti
testl
or
in
adc
or
ja
lcall
mov
mov
jno
divl
adc
adc
rcrb
movsb
dec
movsl
or
sbb
loope
add
dec
or
adc
pop
pop
hlt
js
dec
or
movsl
adcb
pop
std
lcall
inc
jmp
lret
imulb
push
sub
pop
movsb
mov
incb
jno
ja
pop
sub
jo
mov
xchg
jae
dec
or
pushf
xor
mov
out
push
insl
out
lret
ss
fisttpl
lcall
jns
movsb
stos
cltd
push
popa
cli
stos
lods
iret
out
das
rcll
push
jge
test
jb
mov
stos
pop
movsl
repnz
cs
dec
ds
adc
mov
jle
jbe
push
add
dec
pop
lock
lcall
rcrb
pop
in
mov
es
push
je
scas
lods
adc
ds
cmp
mov
or
shlb
outsb
cmpsl
push
xor
fmulp
adc
sub
push
mulb
orl
pushf
sti
out
sub
ret
sub
loop
ljmp
xchg
fldcw
call
pusha
cwtl
adc
sti
lds
mov
mov
and
push
in
xchg
push
add
push
push
shll
add
mov
inc
insb
movsb
inc
sarb
in
sub
lds
into
das
faddl
andl
fisubs
ja
stc
xor
add
shl
mul
pop
jle
pop
cmpxchg
fcmovbe
in
add
test
push
lahf
push
push
adc
xchg
dec
inc
sub
sti
jbe
test
pop
jle
xchg
mov
mov
into
jmp
push
mov
not
cltd
push
rolb
xor
cltd
inc
mov
xor
cmp
push
inc
mov
dec
popf
xor
lea
in
into
xor
fnstcw
andb
mov
push
out
fcompl
sbb
jne
mov
sbb
pop
push
cs
insb
insl
jle
out
stos
ss
test
daa
cmpsb
call
jp
add
mov
into
or
loopne
stos
mov
push
lea
inc
cmp
pop
sub
test
ljmp
lods
mov
jae
negl
push
or
cmp
mov
jle
or
sbb
je
or
inc
jne
sarb
cmp
sub
leave
js
ja
aaa
dec
xor
fucomi
mov
and
aas
adc
xchg
fldl
sbb
shrb
sbb
cmp
fistpl
and
xchg
nop
pop
sahf
mov
cmp
loop
inc
cli
xlat
inc
js
adc
lock
cs
mov
rolb
add
dec
jmp
mov
sub
int
loopne
jae
jb
or
call
inc
xor
ja
push
loopne
add
fstpt
movsl
mov
loop
jmp
push
push
out
xlat
sarl
jl
repnz
inc
pusha
mov
aad
in
out
loope
lret
jo
mov
sbb
ljmp
push
cmp
cmp
sbb
xchg
rcrb
mov
push
and
in
daa
adc
ds
sbb
je
inc
ja
pop
fcmovnu
or
mov
sub
movsl
fwait
aam
sub
push
adc
cmp
popl
test
sub
fsubl
std
loopne
aam
sbb
test
mov
sub
jo
js
mov
test
out
insb
or
testb
dec
cli
mov
sbb
xchg
lahf
enter
inc
cmc
pop
sbb
xorb
sarb
dec
cwtl
pusha
out
mov
es
jnp
mov
adc
mov
add
lods
inc
sub
cltd
rcrl
mov
lea
mov
and
adc
insl
leave
cmp
cmove
xchg
xchg
sub
mov
imul
loop
lods
testb
aas
xor
jmp
cmp
ja
jecxz
es
movsb
test
jle
mov
jg
pop
movsb
out
pop
jcxz
lds
jle
add
movsl
sub
outsl
je
fdivr
jb
push
enter
mov
sbb
jp
dec
sahf
inc
nop
repnz
push
addr16
push
in
rcrb
sti
mov
jbe
aam
nop
fwait
mov
push
mov
dec
sti
ret
daa
mov
xchg
jg
push
xchg
lods
jno
xchg
fstpt
xchg
pop
cmp
jg
arpl
or
xchg
push
into
arpl
call
push
rolb
dec
or
mov
mov
out
jg
je
mov
and
lahf
push
insb
xor
jo
and
pop
fists
scas
out
jmp
fbstp
sub
andb
dec
ja
sarl
outsl
les
lret
add
cmp
cld
cmpsb
gs
adc
dec
pop
loope
xchg
mov
cmc
pushf
mov
jecxz
mov
stos
mov
call
aas
idiv
outsb
sbb
adc
push
lods
stos
and
pop
adc
out
imulb
lods
mov
lahf
sbb
ret
sti
or
shll
fcoms
mov
outsl
jne
enter
jge
cmp
fwait
popa
lret
movsb
icebp
dec
decb
pop
repnz
push
je
push
es
sbbb
inc
mov
push
sub
loopne
int
or
orb
xlat
inc
cmpl
movsl
test
or
push
mov
stc
sti
dec
pop
int3
iret
test
ss
push
sbb
les
mov
mov
adc
cli
test
inc
inc
lret
mov
nop
outsl
jo
and
push
push
cli
imul
add
js
ljmp
mov
sbb
cltd
aaa
adcb
bnd
fwait
int
pop
push
jae
or
test
inc
orl
inc
rorb
ficoml
mov
mov
rcrb
mov
and
insb
cltd
sti
cs
cwtl
xchg
rorl
data16
fs
jo
and
xlat
jle
inc
int3
pushf
enter
mov
aad
fiaddl
insb
dec
mov
ficompl
push
xchg
hlt
xor
mov
mov
inc
lahf
shlb
je
ds
xchg
shrl
dec
pop
pop
sbb
push
pop
loope
imul
insb
shrl
imul
fs
test
js
aam
nop
loope
xchg
and
pop
std
push
ja
pop
pop
jb
cmpsl
sbb
jns
lock
or
in
pop
lods
std
mov
inc
dec
hlt
mov
mov
jl,pt
sbb
ret
add
in
cmp
add
je
jno
loope
arpl
cli
cli
adc
xadd
fs
or
cmp
aas
fcmove
mov
cmp
mov
pop
mov
stos
mov
pop
xchg
mov
loopw
iret
shrl
add
std
push
adc
lcall
pop
je
aas
lea
das
pop
cmpsb
push
cmp
test
test
or
xor
fsubrs
pop
xor
and
push
ss
and
sbb
mov
pop
sahf
subl
xchg
jbe
dec
das
lods
fcmovnbe
pop
pusha
scas
std
sbb
mov
pop
mov
jae
jae
clc
repnz
aaa
outsb
dec
div
add
cld
push
pop
lcall
push
repnz
xchg
jae
cs
daa
sahf
dec
jecxz
inc
xchg
and
icebp
repz
xchg
aaa
int
mov
sahf
jno
add
incl
mov
out
lods
je
repz
out
popf
fimuls
cmpsb
sbb
and
cli
inc
lret
and
leave
les
frstor
jno
push
jge
mov
push
jnp
sbb
mov
and
xchg
jb
dec
ss
cmpsb
dec
cmpsl
jle
dec
inc
das
in
sbb
cmp
loopne
cmp
or
fildl
cwtl
jmp
sub
test
xchg
push
bound
aaa
mov
shrl
mov
rcrl
inc
dec
sbb
sbb
out
repz
loopne
dec
or
sbb
and
insb
push
inc
xor
fs
les
add
loop
push
test
mov
add
add
pop
inc
cmp
push
stos
push
sbbl
sbb
imulb
add
leave
nop
xor
dec
sbb
lret
sub
xor
xchg
xor
out
dec
xchg
pop
imul
bound
addr16
mov
sahf
clc
in
inc
lea
pushf
fwait
pop
test
jge
or
mov
popf
iret
rcll
and
out
dec
or
out
stos
jle
cmp
xor
jg
into
add
xchg
cmpsl
xchg
inc
mov
inc
arpl
mov
or
das
or
out
daa
ljmp
dec
sahf
cmc
xor
ljmp
xchg
lods
sbb
repnz
jo
push
lods
inc
xor
test
into
imul
in
repz
pusha
mov
mov
cltd
repz
inc
push
xchg
pusha
jp
fwait
lret
add
das
pop
dec
hlt
pop
fcompl
daa
pushf
fildll
add
int
out
stos
mov
ret
repz
and
pushl
sub
dec
push
movsl
ljmp
jecxz
adc
cmpl
loopne,pt
aam
jnp
pop
mov
js
adcb
dec
imul
idiv
outsl
lret
mov
and
aaa
rolb
adc
popa
sub
mov
hlt
and
sbb
or
fists
mov
cs
mov
lret
pushf
mov
fsts
bound
enter
cmp
or
and
and
pop
ja
jle
jg
fcompl
addr16
mov
or
ret
mov
sub
lea
inc
adc
pop
aas
sarl
mov
push
pop
jno
adc
mov
aad
pop
popf
in
xorl
push
add
fsub
lods
mov
mov
rcl
es
xor
test
jl
fiadds
and
pop
add
xchg
xchg
mov
outsb
mov
inc
sub
mov
xor
fdivrs
popf
add
ret
jb
in
outsb
mov
sbb
jns
jg
test
aam
mov
jne
or
or
jnp
lock
inc
inc
fdivr
lock
mov
inc
das
pop
lds
popf
sub
cld
push
mov
pop
rcll
sub
mov
adc
rcrl
lret
xchg
mov
inc
aam
dec
jae
jecxz
mov
enter
mov
add
popf
sub
push
or
insl
fidivs
loope
xchg
sub
mov
pop
aad
cmp
push
sub
jnp
or
mov
addr16
in
das
jo
and
xchg
cmp
roll
mov
adc
xor
or
test
jmp
mov
repz
inc
scas
out
or
jb
or
lea
int
mov
jmp
xchg
sbb
adc
cmpsl
test
lret
aad
lcall
outsl
scas
pop
sbb
push
dec
lret
adc
inc
jle
jle
adc
or
test
jp
pop
adc
pop
mov
cmp
add
inc
jle
mov
add
pop
jg
mov
mov
jne
sbb
mov
and
mov
jne
sahf
test
jbe
sub
loop
adc
sub
xchg
pop
in
add
daa
lds
mov
add
xor
sub
into
push
mov
and
insl
inc
jae
sti
mov
push
pushf
xor
jmp
dec
sub
stos
mov
mov
adc
xor
xchg
mov
inc
insl
push
jns
dec
cmp
xor
cli
mov
loop
add
and
cli
cmc
xchg
loope
push
cli
or
and
mov
jmp
add
lock
cmp
clc
push
aaa
inc
or
jno
cmp
arpl
sar
fwait
in
jle
adcl
call
mov
add
xchg
std
testl
mov
mov
leave
sub
fstl
insb
or
add
dec
push
mov
adc
push
push
mov
mov
mov
jnp
adc
sbb
hlt
repnz
mov
cmpl
gs
sub
popf
imul
inc
mov
sti
mov
iret
pop
stos
les
testl
mov
out
sub
in
inc
dec
addr16
cs
movl
jnp
sar
adcb
ret
xor
imul
insb
in
data16
push
subb
lahf
dec
out
sub
mov
lret
dec
imul
mov
das
nop
das
jg
jle
ljmp
pusha
fmulp
cmp
imul
andl
push
adc
or
inc
mov
or
xor
jns
inc
outsb
jns
out
cmpsb
jmp
rorl
fwait
inc
rorl
into
rcr
dec
loopne
scas
pop
jae
repz
cmp
inc
sub
adcb
sbb
out
mov
sub
insl
leave
es
sarb
cmp
adc
lock
inc
inc
cmp
add
fcomps
jmp
leave
int3
jp
imul
shr
push
fmull
pop
mov
mov
popa
mov
push
jge
popf
int3
shrb
sbb
and
rcll
adc
pop
jbe
icebp
mov
out
mov
inc
cmp
cmc
popa
sub
daa
stos
loope
xor
dec
je
add
jle
and
je
jbe
lea
adc
xchg
idivb
into
lods
and
dec
enter
cwtl
pop
sub
jl
push
icebp
shl
mov
dec
fwait
and
dec
mov
icebp
test
int3
in
pop
sets
scas
js
jmp
es
or
xor
mov
shl
mov
in
ret
aam
jnp
jmp
rorb
pop
jp
or
or
xor
pop
cmp
xor
into
push
dec
adc
lds
jbe
leave
mov
test
sbb
xchg
inc
fistl
pop
popa
mov
movsl
test
and
lret
out
lcall
test
cmpsb
mov
subl
sub
push
adc
iret
hlt
or
in
rolb
std
in
dec
or
sub
inc
mov
out
jge
xchg
rol
sbb
addr16
test
dec
push
stc
adcb
push
push
sub
insb
stc
pop
std
sarl
jno
adc
imul
jo
out
aaa
in
pop
sarb
lret
repnz
loop
or
xchg
cltd
mov
cmp
jae
cmc
pop
push
mov
lds
mov
aaa
pop
push
ret
inc
aad
imul
mov
sbb
ret
dec
ljmp
xor
cmpsb
cli
sub
cmpl
dec
outsl
dec
cmovno
cmpsl
lea
fs
popa
xor
inc
and
lods
inc
fwait
ds
loop
lods
movsb
mov
aaa
jge
sub
dec
jae
and
cmc
push
jb
imulb
dec
inc
xchg
jle
push
jge
in
jbe
xchg
rcrb
shr
mov
js
fists
lahf
jmp
mov
sub
xor
in
pop
mov
ret
mov
dec
cmp
inc
clc
push
mov
ss
addr16
pushf
scas
out
sub
dec
test
stos
int
sbb
orb
mov
sbb
push
cld
jecxz
clc
int3
call
clc
bound
inc
pop
jnp
gs
jmp
xlat
pop
inc
movsl
push
dec
and
push
outsl
push
jle
js
mov
sub
aas
jmp
in
leave
jle
cld
les
mov
dec
push
ror
mov
xchg
jl
hlt
and
sbb
or
es
inc
aad
mov
cltd
les
repz
mov
xchg
frstor
jle
pop
loope
pop
movd
add
and
adc
aas
pop
inc
or
aad
js
fs
jmp
das
insl
sti
and
or
sbb
das
dec
lahf
sub
int
daa
out
popf
jecxz
sub
mov
or
sbb
orl
out
adc
mov
cmp
loopne
pop
ja
inc
leave
inc
mov
aam
sahf
mov
and
test
lea
lret
cmp
mov
push
pop
ret
das
iret
dec
in
dec
xchg
out
pop
pop
xchg
add
mov
out
xchg
push
ss
lahf
cld
pop
jge
je
jg
aaa
xchg
icebp
pop
ljmp
les
pop
push
xchg
cmp
and
into
outsl
add
sarb
xchg
pushf
enter
loopne
mov
sbbb
fildll
fsubrl
push
jmp
leave
clc
sub
mov
push
aam
cmp
xor
ljmp
sbb
mov
call
stc
pop
inc
dec
mov
aam
leave
cwtl
push
js
sbb
cmp
mov
xchg
sbbl
cmpsl
es
mov
mov
cli
popf
add
push
pushf
push
sbb
jp
enter
mov
test
sbb
aaa
dec
inc
sub
outsb
jecxz
in
mov
movsl
loop
cmp
jle
lahf
in
jbe
mov
sub
mov
jae
cmp
pusha
inc
fnstcw
jnp
jecxz
negl
dec
outsb
addl
ret
mov
xor
push
or
pop
xchg
push
sub
pop
fcomps
insl
inc
sub
neg
push
xchg
fwait
push
cs
and
add
add
push
rcr
mov
mov
add
push
push
jmp
ret
mov
add
pop
shl
inc
aas
shl
pop
xor
and
sahf
arpl
jae
jg
inc
or
sti
cwtl
xchg
mov
push
divb
jno
xor
lret
cmp
fmul
push
and
ljmp
loop
pop
outsl
mov
fimuls
xor
addl
push
xor
movsb
sbb
or
aad
push
xchg
mov
mov
ljmp
xor
xchg
jl
call
dec
in
jno
push
dec
and
cmpsl
jns
dec
push
icebp
test
add
and
loope
bound
inc
and
loopne
lds
xchg
outsb
test
xor
pop
test
mov
lret
andl
mov
jno
mov
cmp
popf
adc
pusha
xchg
lret
and
aad
sbb
cwtl
lret
push
arpl
in
in
jecxz
xor
push
sahf
cmp
mov
mov
and
into
scas
scas
sub
imul
mov
mov
cs
and
mov
inc
mov
test
or
sarl
pop
nop
cmp
xchg
add
imul
scas
jo
lods
and
test
xchg
stc
cld
das
fwait
leave
mov
aad
and
cmpsl
adcb
ficoml
jo
ds
mov
push
push
stc
inc
jp
fistl
pop
sar
iret
mov
mov
mov
sahf
mov
mov
mov
push
daa
sbb
stos
imulb
imul
movsb
pop
arpl
pop
mov
inc
add
cs
mov
jne
xchg
cs
sub
into
sub
in
push
mov
xchg
xor
in
movsb
xor
into
aaa
data16
sub
dec
mov
popf
push
mov
push
cs
loopne
add
add
dec
mov
push
jae
stos
lea
xlat
push
sahf
fcompl
lahf
mov
stc
mov
pop
jne
insl
push
out
xor
jge
ror
xchg
push
decl
lahf
cmpsl
jo
mov
jmp
jo
iret
inc
pop
sahf
lret
fchs
ret
or
fidivrs
cmp
repnz
xchg
enter
cmc
cmp
mov
push
mov
inc
stos
inc
mov
dec
mov
pop
sub
repz
dec
fstps
jb
pop
xchg
in
movsb
in
ss
ja
pop
notb
jne
movsl
cli
arpl
jno
iret
les
out
mov
jle
fiaddl
adc
jns
xchg
mov
push
or
pop
and
cmovae
pop
sbb
test
stos
insb
ds
xchg
jnp
loope
mov
dec
in
push
jecxz
icebp
xchg
jle
stos
push
out
xlat
clc
xchg
mov
stos
cmpsb
iret
cmp
data16
popl
test
push
push
mov
mov
ret
jl
jmp
add
dec
adc
adc
dec
inc
dec
in
mov
daa
fistpll
xchg
jne
arpl
push
jne
or
repnz
adc
insl
sti
sub
mov
adc
push
aaa
mov
test
cltd
cmpsl
movsl
pop
pop
data16
cmpl
xchg
repnz
xchg
mov
inc
movsl
adc
int
fcoml
sbb
es
std
push
xchg
in
dec
xor
pop
aas
ret
push
jge
lret
divps
lahf
imul
lods
data16
sbb
pop
push
pop
pop
andl
dec
add
adc
mov
mov
or
dec
sbb
ret
clc
scas
pop
push
jmp
daa
inc
loope
add
mov
sbbb
xor
add
sub
lcall
inc
or
add
pop
daa
and
and
pop
aam
into
adc
cli
aad
mov
inc
ds
mov
jnp
nop
rcll
inc
xor
dec
es
mov
scas
jge
fadd
mulb
jg
fiaddl
push
adcb
into
xor
in
cmp
scas
call
dec
lods
mov
pop
js
xchg
lret
jl
mov
push
cmpsl
movsl
sbb
add
pushf
bound
ret
mov
gs
out
adc
ds
shll
or
aas
xchg
add
inc
out
xor
inc
ljmp
or
ljmp
pop
xchg
mov
pop
decb
clc
sahf
fcomp
mov
jo
gs
repz
pusha
push
push
mov
nop
fprem
xchg
sbb
xchg
in
fdiv
mov
push
in
jmp
mov
lds
xchg
mov
mov
lods
inc
push
inc
aas
mov
pop
movsl
adc
inc
dec
jbe,pn
test
fidivrs
addl
add
fiaddl
xor
cwtl
mov
xchg
mov
pop
icebp
cmpsb
add
xchg
push
lahf
insb
pop
cmpl
lods
adc
fucom
cmp
cmc
sbb
popf
push
mov
mov
aam
pop
insb
push
add
int
and
int
movsb
mov
adc
cmp
cmpsb
mov
add
cmpsb
sub
jmp
fcoml
je
xor
mov
pusha
xor
stc
out
ss
frstor
jg
test
push
and
scas
insl
jmp
mov
adc
mov
push
jmp
lcall
out
mov
mov
jle
mov
pop
and
test
scas
ret
sub
dec
or
xchg
inc
pop
lcall
cwtl
lcall
repz
mov
scas
js
imul
lds
fbld
enter
js
je
ret
bound
dec
je
and
scas
andb
pushf
sbb
jecxz
push
enter
movsb
mov
repnz
cmpsb
adc
jecxz
sbb
je
js
aaa
xchg
mov
aam
out
jle
iret
add
divl
inc
mov
ret
or
outsb
ljmp
xchg
jmp
push
fiadds
mov
add
gs
loop
pop
add
dec
jnp,pn
rclb
push
pop
push
push
mov
pop
or
mov
popf
sbb
xchg
pop
sti
jns
xor
xchg
jns
jae
sbb
push
fdivrs
int
in
ds
rorl
xchg
xchg
clc
fsubrs
push
sub
stos
call
insl
adc
int3
imul
out
add
sub
std
sbb
adc
icebp
out
stc
cld
cli
push
imul
jne
push
js
inc
cmpsl
mov
add
mov
mov
ss
stos
sbb
test
loopne
mov
sahf
dec
scas
ja
cmp
inc
arpl
roll
xor
mov
pusha
sti
scas
insl
xor
xchg
ret
xchg
adc
mov
xchg
test
das
sub
popf
and
shll
mov
mov
test
popf
out
lret
cwtl
mov
xor
mov
cld
les
dec
lret
add
push
jno
out
add
imul
les
sub
sbb
xlat
mov
push
mov
loop
or
mov
outsb
out
aas
adc
out
add
cmp
push
sbb
loope
sub
jle
mov
mov
jno
adc
js
sahf
inc
sub
sahf
cmp
scas
les
mov
jns
adc
int3
and
fdivrl
adc
xor
xor
test
jnp
and
or
scas
lret
lret
mov
inc
push
out
jge
pop
pop
decb
lret
xchg
mov
fmul
in
test
or
cmp
mov
aad
sbb
push
mov
inc
clc
pop
sbb
dec
jne
cwtl
clc
and
iret
push
pop
lds
jns
loope
std
js
lds
push
insb
in
ret
mov
and
sub
fs
mov
rclb
das
sub
test
add
rclb
ss
mov
cmp
mov
bound
ret
sbb
and
mov
xchg
push
mov
mov
in
jns
std
fwait
lret
in
es
call
fisttps
ret
cmp
ret
imul
or
aad
mov
jmp
in
inc
xchg
push
adcb
shrl
or
sti
ds
int
bound
mov
mov
les
fnstcw
int
int3
std
pop
xchg
inc
lahf
fs
or
push
inc
mov
adc
mov
and
ret
inc
fnstsw
pusha
pop
std
mov
jl
pop
adc
in
rcll
push
lret
aas
mov
push
test
movsb
xchg
xor
add
cmp
jb
test
imul
ficoms
sub
sahf
iret
mov
arpl
dec
outsb
mov
or
dec
je
mov
add
jns
add
cmp
push
mov
mov
mov
add
leave
hlt
in
xchg
add
movsl
rcrl
mov
add
je
out
loop
cmp
clc
stos
inc
loope
ljmp
loop
push
sbb
sub
add
andb
pop
jo
rolb
nop
adc
leave
inc
fildll
cld
hlt
mov
pop
mov
pushf
xchg
or
push
mov
dec
dec
mov
icebp
push
lahf
or
cmp
scas
push
js
add
mov
cmp
push
std
jecxz
cmpsl
std
dec
inc
inc
or
add
addb
into
fwait
sbb
enter
inc
and
lds
mov
mov
loop
pop
jle
jne
dec
push
sbb
in
dec
jle
cmp
fstl
push
dec
xor
clc
adcb
jmp
clc
movsb
or
pop
push
pop
sbb
jae
add
shlb
xchg
cmp
arpl
mov
mov
stos
mov
mov
push
imul
ds
mov
cltd
sub
pop
pop
jmp
and
pop
shrl
lret
inc
mov
or
xor
mov
or
mov
shll
inc
sub
or
imul
mov
cltd
clc
mov
xor
push
sbb
cli
jecxz
mul
mov
cmp
in
addl
in
push
outsb
jp
jle
xchg
push
repz
mov
test
inc
cmp
leave
out
xor
jbe
xor
cmp
sbb
int3
ret
shrl
lahf
aad
pusha
push
daa
push
dec
cld
dec
adc
push
and
xchg
add
mov
leave
mov
out
sub
insl
mov
pop
int
jne
imul
sub
lods
push
inc
mov
add
mov
jl
push
push
gs
out
movsb
xor
les
das
iret
cmpl
mov
sub
fidivl
out
jmp
cmp
sahf
bound
sub
scas
iret
in
repnz
or
or
das
test
test
push
jmp
aad
enter
ret
sbb
aad
or
push
scas
cltd
lods
cmp
rolb
mov
sbb
jnp
lock
in
push
out
jmp
das
clc
inc
mov
testl
adc
fwait
sub
jo
shr
sti
popf
xchg
ret
mov
sbb
jnp
jge
daa
mov
dec
dec
pop
aaa
mov
xor
jecxz
and
pusha
mov
outsb
mov
test
loope
push
es
outsl
or
js
sbb
ja
mov
sbb
adc
loope
imul
add
out
adc
sub
call
cmpsb
mov
xchg
inc
and
fdivl
inc
or
pop
inc
enter
arpl
test
imul
stc
or
dec
pushf
jl
jecxz
dec
fisttpll
sbb
jae
gs
jg
or
pop
fs
orb
shrb
jle
or
movl
pop
clc
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
loop
mov
jnp
xor
int3
inc
ror
popf
les
sub
push
push
hlt
addr16
sbb
pop
inc
xchg
and
loop
adc
push
mov
jno
loopne
or
xchg
cmpsl
mov
and
push
xorl
adc
out
rcrb
aam
inc
nop
ljmp
inc
xchg
mov
insb
or
incl
jge
shll
sub
and
add
jl
fs
pusha
sub
or
stos
aad
jecxz
mov
pop
pmuludq
les
or
decl
jmp
pop
loop
repz
jp
adc
sahf
scas
cmp
int3
jb
mov
cmp
in
sbb
gs
xorl
les
cmpsl
in
jae
xchg
ss
push
add
adc
pop
xchg
xchg
fmul
pop
mov
dec
push
out
insb
inc
or
in
pop
imull
xchg
cld
lcall
xor
popf
xlat
outsl
mov
and
test
in
cmp
aaa
out
adc
test
in
movsb
xor
rcll
or
jnp
xchg
cwtl
shrl
fistpll
adc
xchg
test
adc
jmp
xchg
sbb
aam
sub
cmp
lret
and
push
aaa
les
add
movsb
adc
je
inc
sbb
adc
nop
cmpsb
inc
fs
xchg
cs
adc
or
cmpsl
testb
mov
ja
add
pop
inc
pop
dec
out
sub
rolb
sub
divl
data16
and
adc
sahf
aas
popf
call
out
enter
or
out
call
sub
shl
adc
pop
movntq
adc
add
dec
clc
int3
pusha
dec
dec
ficomps
push
push
sub
call
push
mov
notb
sarb
sub
xor
xchg
mov
insb
or
cmpl
and
xchg
sar
jae
adc
call
fwait
push
adc
jae
mov
xchg
or
mov
adc
sub
pop
cmp
lods
push
movsb
dec
or
rcl
pop
dec
fcmove
mov
addr16
mov
sbb
cmp
outsl
xchg
into
jle
mov
movsb
rcrl
jbe
jl
pop
push
out
sbb
adc
mov
inc
xor
jnp
mov
add
jb
and
add
adc
fwait
xor
lock
mov
lcall
jns
inc
stc
pop
ficompl
adc
ss
and
push
push
pop
aam
sbb
jmp
lods
movsl
jmp
sub
or
imul
sub
out
cmp
rcll
fldcw
xor
jmp
cmp
and
inc
mov
pusha
xchg
mov
mov
fldcw
in
push
popf
fwait
push
push
pop
fcomps
pop
aam
adc
xchg
mov
test
stos
sub
xchg
xchg
into
adc
push
into
xchg
and
cwtl
add
or
mov
mov
mov
jecxz
inc
and
mov
sahf
sub
xchg
enter
int
mov
idivb
xchg
loope
js
add
out
cmc
shrl
outsl
mov
pop
call
sbb
mov
das
cli
rcl
cli
sbb
insb
gs
vrcpps
out
sbb
out
jecxz
cli
mov
loopne
test
out
in
xor
lret
add
stc
sub
insb
fisttps
stos
push
dec
adc
movsb
pop
push
enter
dec
pushf
inc
push
mov
mov
repnz
sub
addr16
repnz
es
sbb
jge
cmovg
rcr
aad
stos
cmp
xchg
mov
out
mov
sbb
inc
xchg
aam
pop
je
mov
lock
jle
push
in
xor
jns
leave
arpl
or
dec
cmp
push
pop
dec
xlat
daa
xchg
fiadds
insb
sub
or
test
mov
push
xor
pop
mov
and
outsb
mov
or
sti
ds
sbb
call
adc
jo
push
xchg
mov
add
cs
test
cmp
ficoms
xor
cmp
and
and
sub
movsl
mov
sbb
out
mov
popf
shrb
int3
mov
enter
jp
outsb
cmc
cld
mov
daa
lret
in
test
pop
shrb
ss
js
push
adc
adc
aaa
cld
mov
loop
out
imul
or
je
xlat
mov
sub
repnz
lods
inc
lods
jne
fmuls
repnz
push
xor
pop
dec
adc
cltd
dec
mov
ljmp
add
cs
scas
lea
sbb
add
mov
jo
cmpsb
add
push
shll
inc
mov
rolb
aam
sbb
in
mov
scas
arpl
jmp
adc
cmp
sbb
loop
xchg
repnz
xor
int3
call
inc
clc
aad
jge
or
loope
or
fwait
mov
cmp
cli
xchg
or
imul
out
repz
pusha
mov
xchg
cld
push
inc
popa
out
push
fwait
xchg
mov
inc
ret
cld
mov
scas
dec
push
outsb
jne
or
das
jge
testl
insl
push
ret
cmp
add
movsl
sbb
mov
lods
cmp
out
mov
and
or
mov
push
test
jl
dec
repnz
fdivp
es
push
dec
dec
xor
jno
jae
push
mov
push
inc
push
mov
pop
sahf
rcrb
sarb
or
jne
clc
jle
ficomps
movsb
incl
enter
inc
mov
cmp
xchg
repnz
dec
aam
lods
dec
inc
iret
pushf
daa
xorb
sarb
inc
push
sub
xchg
add
xchg
gs
fs
fstps
cmpsb
jecxz
sub
and
sub
xchg
add
rorl
adc
das
cmp
mov
xchg
mov
sub
inc
cwtl
xchg
mov
fiaddl
idiv
imul
repnz
outsb
fcomip
fisubl
clc
inc
fidivrl
adc
xchg
adc
repz
adc
ret
test
out
stc
rolb
xchg
jae
adcb
mov
push
dec
loop
loopne
sbb
mov
das
add
cmp
in
pop
lret
xchg
mov
fildl
inc
push
dec
dec
xchg
and
int
dec
mov
push
sbbb
lret
imul
out
add
movsb
lret
sti
repz
out
inc
out
pop
shrb
out
xadd
in
or
xor
repz
sbb
xorl
out
sti
enter
dec
mov
dec
push
paddq
enter
jmp
mov
insb
jae
aad
push
push
jbe
push
mov
sbb
jmp
ja
faddl
imul
clc
dec
rclb
imul
std
subb
rol
fs
pop
push
arpl
stc
pop
dec
aaa
push
dec
pop
add
xorl
mov
jne
pop
lods
int3
repnz
mov
adc
dec
push
stc
dec
ficoml
lret
inc
loopne
adc
xor
nop
nop
filds
shr
inc
call
lods
mov
out
inc
mov
sub
mov
xor
jno
mov
pop
xchg
loopew
movsl
sbb
iret
nop
xchg
loopne
repz
push
dec
dec
push
and
int
xor
mov
jle
adcb
in
je
cwtl
adc
push
popa
test
mov
dec
test
fdivl
cmp
sub
xor
stos
test
int
sub
int3
pusha
call
out
testb
xchg
gs
out
fsubs
xor
test
jns
push
in
fwait
pop
lahf
cltd
mov
ja
pop
xorb
xor
lock
dec
inc
js
call
test
lods
mov
jl
inc
aas
movsl
pusha
lods
cmp
ds
mov
ret
jo
clc
xor
sbb
cmp
cli
adc
push
jge
mov
lret
adc
fldenv
push
mov
push
imull
divl
inc
mov
adc
bound
mov
cmp
fistpll
push
xlat
xchg
ljmp
jne
sbb
add
cmpl
fstpt
inc
cltd
cmpsb
jmp
inc
mov
ss
add
inc
fcmovu
lds
push
mov
inc
jnp
ss
and
sti
iret
cmp
out
mov
or
xor
ret
jne
inc
sbb
aaa
add
aam
inc
dec
sub
ds
cwtl
call
popa
add
dec
imul
aam
lahf
ret
fcompl
hlt
ret
adc
mov
xchg
cmpsl
scas
rcl
rcr
int
xchg
insl
hlt
dec
sub
testb
mov
xchg
xchg
cs
add
pop
pop
shlb
imul
push
pusha
xlat
sti
mov
lret
outsl
ss
mov
jp
cmc
jbe
mov
sub
mov
fwait
inc
rorl
add
and
pop
js
inc
push
fs
xor
inc
sbb
lcall
sub
and
cmpsl
sub
mov
jns
ret
xor
pop
test
xchg
pop
sub
into
push
or
inc
aas
jb
sahf
sub
xor
frstor
test
push
mov
add
imul
scas
test
dec
jg
aam
push
inc
mov
arpl
dec
iret
in
xlat
ljmp
mov
xchg
sub
cmp
inc
pushf
aad
test
std
rcr
pop
mov
imul
ja
xor
or
cwtl
jno
dec
xchg
jo
fs
mov
pop
sbb
dec
roll
or
ja
xor
xor
cli
lods
in
or
sbbl
ds
std
hlt
fsubp
stos
je
jp
repnz
xor
jb
push
mov
and
push
sti
rcrl
in
nop
leave
xor
inc
call
incl
mov
jp
inc
mov
sub
out
pop
or
pusha
xchg
and
out
cwtl
fsubp
cmp
jb
ljmp
in
loop
jecxz
mov
cmp
dec
xchg
cmp
nop
jb
loope
ret
pop
repnz
loope
adc
sbb
movsb
or
cmp
lret
sub
pop
lcall
loopne
out
data16
dec
fs
stos
outsl
add
je
shrb
mov
aaa
add
movsl
dec
pop
mov
repnz
cmp
inc
rorl
pop
call
frstor
in
in
sbb
daa
or
push
sub
mov
inc
loop
mov
cmp
testl
rcll
int3
adc
sbb
mov
stos
je
fisubl
cmp
mov
sbb
mov
mov
or
or
das
iret
aaa
lods
in
insb
xor
int3
add
outsb
stc
leave
xlat
jae
scas
mov
loope
inc
in
fidivrl
stos
out
adc
mov
push
xchg
icebp
sbb
jl
sub
lea
subb
arpl
push
or
in
sarl
leave
mov
into
dec
pop
mov
or
mov
cltd
dec
fadds
outsl
cltd
push
aaa
fdiv
sub
mov
cld
pop
jbe
mov
sbb
fcmovbe
js
out
mov
fildl
lods
or
iret
jne
jmp
shr
xor
shrd
scas
aas
push
push
in
aaa
inc
gs
mov
cli
add
mov
push
xchg
xor
jle
loopne
cmp
mov
pop
outsb
xchg
jmp
jbe
jno
or
add
jl
jo
cltd
pop
stos
mov
scas
push
adc
testb
popa
movsb
scas
mov
and
mov
mov
sbb
xchg
or
add
add
or
jb
movntpd
and
mov
out
jne
dec
loopne
adc
mov
jno
in
out
bound
ficomps
jo
xchg
arpl
or
or
arpl
sub
add
push
xchg
cmp
repz
ds
sbb
sbb
ljmp
test
insl
sub
mov
aaa
pop
dec
fists
loop
test
sti
call
cmc
xorl
jp
or
jb
push
push
insb
lahf
dec
adcl
in
jmp
pop
dec
lea
inc
xchg
inc
popf
mov
outsl
popa
or
bound
pop
push
xchg
or
adc
push
dec
inc
call
cmpsl
fxch
pusha
mov
pop
sub
sub
repnz
call
sub
xor
sti
or
push
movsb
or
xchg
aaa
or
and
and
or
rol
xorb
lock
sti
jno
loope
insb
jg
or
arpl
jecxz
sub
sbb
inc
push
mov
movsb
inc
clc
mov
outsb
repnz
cwtl
in
pop
push
int
fimuls
push
mov
inc
jne
xor
bnd
jmp
inc
loope
das
pop
or
mov
adc
std
aad
mov
aam
loop
popa
mov
sub
or
imul
and
push
into
aad
in
out
in
ss
in
out
and
sbb
inc
popf
mov
into
pmulhw
xchg
adc
mov
adc
popf
push
sub
insb
add
sbb
cmp
push
mov
ret
clc
decb
in
cld
out
jle
push
dec
mov
jg
sbb
ret
lcall
shl
pushf
push
lea
leave
inc
xlat
imull
stos
dec
push
mov
mov
shrl
enter
mov
sbb
daa
cmp
shl
bound
cmp
movb
iret
pop
orb
popa
pop
jmp
mov
std
sbb
call
mov
iret
leave
popa
mov
adc
sub
mov
fildl
mov
jge
int3
push
in
pop
shlb
fcoml
xlat
pop
into
fucomp
pop
sub
sarb
or
push
pop
out
idivl
cmp
imul
dec
dec
and
repz
push
xor
push
adc
add
push
inc
pop
ret
mov
push
sbb
sub
shlb
and
fnstsw
int3
in
sti
pop
adc
inc
cmp
sahf
or
xor
and
push
sbb
enter
xor
pop
pushf
and
add
ss
mov
mov
or
mov
cmc
cld
js
fcomps
mov
or
aaa
mov
jb
adc
lock
and
fdivrl
and
fdivrs
ret
jo
arpl
pop
hlt
in
leave
cmp
adc
adc
and
inc
mov
adc
cmp
cmpsb
adc
cwtl
dec
xchg
xor
lahf
pop
aad
mov
jno
push
lods
jmp
jnp
scas
sti
sub
xor
fcmovne
in
pop
mov
hlt
push
fstp
push
inc
xchg
cmpsl
xchg
push
fdiv
mov
test
inc
dec
insb
and
data16
in
mov
adc
xlat
gs
mov
jg
mov
loopne
lods
jb
in
stos
xchg
mov
sti
or
and
stc
mov
mov
inc
xor
adc
xchg
fwait
jecxz
and
lcall
cmp
test
dec
cli
movsb
in
ficoml
std
push
dec
push
jae
daa
mov
xor
jecxz
divl
inc
out
rcll
sub
bound
js
cmpsb
jmp
inc
scas
fcom
dec
jns
fidivl
data16
imul
sub
icebp
fmull
pop
lahf
data16
into
andl
pop
push
lods
lahf
sub
lret
cmp
in
shll
sti
mov
push
mov
jo
das
into
dec
fwait
test
pushl
adc
pop
cs
sub
ret
test
mov
bound
push
scas
pop
outsl
les
leave
adc
sbb
jb
xor
mov
stc
xchg
insb
and
jno
mov
sbb
fxtract
add
xchg
inc
iret
dec
scas
and
pop
mov
loop
adc
int3
sub
and
outsb
pop
cmp
or
loop
lar
das
mov
jnp
popa
push
sub
jnp
jne
xor
movsl
cvtpi2ps
add
xor
scas
jecxz
adc
mov
int
push
movsl
pop
push
inc
jne
cmp
inc
push
cmp
xchg
xorb
adc
or
adc
jle
and
lcall
and
adc
sub
xor
push
popf
lret
ficoml
dec
xchg
mov
cmp
in
mov
cmc
orb
add
outsl
xchg
cmp
rcl
push
hlt
mov
pop
out
mov
leave
loopne
movsb
pusha
pop
dec
push
mov
shl
outsb
rcll
lahf
dec
mov
jge
mov
inc
shr
sbb
mov
imul
adc
push
push
fidivrl
xchg
insl
cmp
inc
cmpl
xor
xchg
sub
movsl
pop
xchg
jne
cmp
xchg
test
pop
push
gs
repz
cs
sti
mov
aas
enter
adc
xchg
lcall
lods
addb
mov
mov
ja
test
mov
in
lret
jns
cmp
push
sahf
cmp
cmpb
gs
add
lret
mov
aaa
cli
push
add
mov
data16
and
and
paddb
clc
jns
icebp
ljmp
jb
fwait
cmp
add
pop
push
iret
loopne
test
lock
sbb
jge
jo
jne
testl
lret
lahf
mov
les
push
cmpsb
lea
nop
adc
cmc
sub
imul
imul
mov
and
dec
dec
lahf
in
in
lcall
lea
rcr
addl
stos
pop
or
repz
mov
push
and
outsb
jb
lock
popf
cli
dec
int
mov
sbb
or
stos
cmpsl
push
insb
jp
lock
es
cmc
pushf
lea
dec
pop
cwtl
repz
mov
imul
cmp
pop
les
xorl
aas
cltd
sub
fsubl
test
repz
mov
sbb
scas
adc
push
inc
dec
outsb
mov
cmp
nop
mov
aam
and
push
push
test
cmp
mov
loop
dec
lds
bound
mov
adc
cltd
imul
adc
mov
dec
sarl
inc
fcomps
xlat
jne
mov
xor
out
adc
fisubrs
jne
aas
leave
sti
fmuls
dec
xor
and
push
sub
jbe
cmpsb
orl
fstl
iret
mov
ss
adc
cmpsl
sti
adc
xchg
mov
sub
insb
sarl
inc
pop
jg
pusha
sbb
repnz
adc
jge
cmp
out
and
daa
in
xor
push
mov
addl
push
sub
xchg
repnz
dec
fimull
mulb
sbb
fiaddl
je
sbb
xchg
push
fucomi
push
sub
aas
outsl
cmp
pop
js
mov
mov
lcall
sahf
rcrb
sbb
mov
testl
in
out
shll
sub
gs
inc
insl
jns
outsb
pusha
es
sub
incl
pop
pushf
in
int3
push
mov
leave
in
sbb
push
out
jae
sub
jns
dec
fistl
xchg
add
xor
std
sub
jno
stos
js
flds
jecxz
jge
cmp
dec
jno
mov
inc
xchg
mov
adc
mov
dec
ficomps
mov
mov
adc
pop
xor
pop
fcmovnb
js
pop
mov
roll
inc
scas
mull
flds
jo
pop
clc
repnz
xchg
push
adc
push
aas
test
loopne
fs
mulb
les
ja
inc
cld
or
and
jle
and
mov
mov
inc
mov
push
adc
mov
test
lahf
mov
sub
aad
call
sti
repz
push
out
movsl
jmp
rcrl
mov
clc
hlt
or
out
mov
jne
mov
bound
je
push
and
xchg
jne
mov
nop
fists
ja
pop
dec
mov
xchg
js
cwtl
xchg
mov
cltd
jb
push
mov
push
dec
jecxz
cmp
shl
scas
adc
bound
sub
cwtl
lret
das
dec
push
mov
mov
mov
popf
loopne
mov
sub
mov
inc
dec
fs
int
jno
sbb
or
aaa
mov
and
xchg
dec
mov
inc
sbb
push
push
out
ja
addr16
dec
pop
push
fs
fimull
cmp
jnp,pt
call
fsubs
sar
jecxz
shrl
dec
or
les
xchg
inc
into
xchg
dec
add
push
sub
adc
push
push
adc
out
or
sub
lods
xchg
cmp
cld
push
fs
jns
mov
leave
sub
js
sbb
mov
xlat
dec
popa
add
jmp
mov
xlat
int
cmpsl
lret
test
lret
pop
push
filds
insb
add
xchg
sbbl
xor
inc
xor
mov
inc
icebp
mov
sbbb
cmpl
or
in
outsb
mov
fisttps
sbbl
aaa
ja
adc
mov
in
cmpsb
mov
push
mov
inc
sbb
sbb
shll
popf
cli
scas
fs
add
in
cmp
shlb
aas
jecxz
iret
outsb
sub
xchg
js
fxam
fisttpll
mov
arpl
pop
lea
push
mov
pop
mov
xchg
or
mov
xchg
in
jmp
test
leave
outsb
xchg
cmp
cmp
stc
fs
ficoml
mov
inc
sbb
jmp
mov
loopne
and
mov
jge
mul
adc
cld
pop
loop
lock
push
cmp
sbb
adc
cmp
loopne
push
push
jae
fnsave
jae
cltd
mov
mov
leave
test
jb
adc
pop
out
mov
push
adc
pushf
sbb
sbb
jl
jl
pop
loopne
test
pop
subl
inc
pop
or
ljmp
mov
xchg
fsubrs
or
int
add
call
mov
test
add
cld
std
or
sbb
neg
or
clc
jno
mov
or
inc
aam
lret
fs
mov
shr
adc
lods
out
fisttpll
sub
mov
ss
cmp
inc
mov
cmpsb
andb
test
test
loop
cmp
sbb
popa
xchg
mov
scas
and
addr16
pusha
pop
mov
lods
addl
pop
or
test
xor
outsb
repnz
sub
fcomi
sub
jecxz
lods
cmp
pop
out
ret
xchg
stos
jmp
xchg
lea
pop
into
bound
push
jl
cmpsl
shl
xchg
jne
push
pop
movd
sti
jmp
mov
outsb
jne
cmc
mov
dec
loop
mov
dec
add
cmp
in
mov
arpl
mov
fwait
mov
faddp
insl
jmp
jge
lods
je
rorb
push
pop
ret
lahf
lock
cmp
movsl
mov
sub
test
ret
mov
out
sub
insl
into
add
push
cld
push
sbb
mov
idivb
test
sub
mul
icebp
mov
movsl
iret
pusha
jns
js
rolb
aam
pop
iret
pop
shll
addr16
lahf
dec
je
addr16
aam
xchg
jmp
jae
add
or
repz
mov
out
sbb
xor
sahf
mov
in
lea
mov
mov
sub
test
inc
pop
mov
test
dec
dec
imul
mov
movb
shl
gs
setp
shlb
mov
mov
icebp
add
inc
aas
fnstsw
cmpsb
sub
mov
js
pop
sbb
mov
xor
iret
test
pop
loop
out
adc
inc
pop
xchg
es
mov
jle
loopne
sub
mov
outsl
je
test
xor
sbb
in
pop
lods
testl
sub
mov
sub
sub
push
sbb
popf
mov
ss
push
dec
mov
mov
shrb
fdivl
test
xor
movsb
cmp
or
adc
xor
adc
xlat
addr16
cmp
push
popf
cltd
test
outsb
xor
mov
roll
mov
mov
push
daa
xchg
or
mov
mov
mov
adc
cmp
or
sbb
push
push
testl
pop
jmp
sarb
add
sbb
mov
dec
cmp
inc
sbb
add
add
mov
jns
mov
in
pushf
fadd
sbbl
out
pop
test
rcrl
cltd
ss
ds
jle
ret
hlt
mov
cmpsb
call
out
adc
out
in
loope
loope
jns
push
push
pop
add
sahf
pop
mov
lret
mov
mov
out
or
cld
iret
push
add
push
add
out
fsincos
push
adc
movb
jmp
mov
mov
xor
pop
cs
or
shrb
mov
or
push
stos
ret
mov
jecxz
test
repz
int3
push
nop
xor
imul
lds
push
lods
mov
shrl
pop
sbb
jbe
insl
mov
jne
adc
mov
enter
arpl
subb
outsb
pop
outsl
stc
mov
jg
hlt
into
inc
cmp
or
mov
in
ret
std
mov
imul
or
inc
or
push
invd
cli
jmp
outsb
sub
xchg
xchg
xor
dec
pop
push
aas
push
or
xchg
lcall
xchg
xor
cmp
fldenv
inc
jge
cmc
movsl
jp
sub
fidivrs
xchg
and
sbb
inc
sub
pop
pop
jae
mov
jno
nop
and
dec
push
sbb
dec
sbb
insl
incb
lds
sbb
mov
hlt
std
mov
subl
mov
sbb
decb
lock
pop
stos
mov
lods
arpl
ja
leave
repnz
sbb
xlat
jg
popf
add
lods
mov
in
cli
mov
mov
mov
cwtl
insl
mov
test
loop
test
inc
jl
inc
jg
mov
and
cmpsl
sub
and
or
shrb
jno
aas
in
popw
test
add
dec
lds
inc
rcl
mov
push
mov
mov
pop
imul
sub
das
pop
xchg
outsl
aad
test
repnz
jge
sbb
mov
and
mov
cmp
mov
pop
scas
push
subl
pop
xchg
movsb
sub
inc
ss
adcl
outsb
inc
fcmove
pop
scas
lods
add
sbb
shrb
cmp
pop
nop
imul
mov
push
stos
xor
jg
inc
ficompl
fisubrs
lods
shr
fsubr
or
xor
loop
push
sbb
jnp
pop
mov
dec
and
cld
jo
cwtl
lea
rcr
aaa
clc
sub
insb
cmp
cmp
jle
jbe
lds
cmp
addb
xchg
cld
mov
mov
push
cs
xor
pop
shrl
sub
push
lcall
push
pop
out
arpl
or
push
push
ss
adc
mov
push
in
mov
pusha
out
dec
xorb
imul
cmp
mov
dec
lods
jns
and
fisttpll
sub
mov
add
xor
dec
pop
inc
out
pop
leave
inc
mov
mov
subb
or
clc
push
mov
push
mov
icebp
scas
sbb
jmp
push
push
cltd
push
cmpsb
out
xor
push
orb
call
dec
popf
test
repnz
dec
xlat
mov
adc
das
jae
int
lcall
das
sbb
fisttpl
mov
cltd
aas
cli
les
sbb
and
adc
cmpsl
iret
outsl
fwait
jmp
das
mov
into
lret
fildl
push
push
or
cmp
les
sbb
cwtl
aad
pushf
xor
mov
idivl
insb
fprem1
pop
outsl
xor
leave
out
add
mov
adc
mov
pop
mov
inc
repnz
jmp
int
mov
sarb
mov
and
or
mov
inc
push
jb
outsb
std
lahf
addr16
es
jle
sub
dec
enter
inc
lret
insl
call
sbb
sub
jg
xor
jmp
pop
les
in
mov
sub
mov
add
push
sub
mov
orb
jno
pop
pop
dec
mov
mov
jecxz
repnz
push
inc
xor
cmpsl
movsb
mov
data16
jb
adcl
aam
aad
sbb
adc
ret
xchg
int
push
pop
cltd
sti
test
out
out
xor
mov
inc
mov
fidivl
sarb
push
add
cmp
or
adc
insl
les
insl
hlt
sub
cli
aam
shll
pusha
cs
jg
pop
sub
shr
fidivs
lds
pop
test
push
shr
xor
push
mov
pusha
mov
test
cli
pop
dec
dec
or
mov
dec
pop
arpl
mov
xor
sub
push
inc
lcall
nop
jae
sti
adc
inc
dec
add
xor
inc
setnp
xchg
push
ss
ficoml
mov
or
or
sahf
fnstcw
or
js
idivb
ror
popf
rolb
fwait
mov
cld
pop
xchg
mov
mov
pop
lahf
leave
xor
mov
int
loop
mov
or
pop
add
xor
lret
pusha
and
jg
push
sbb
xchg
mov
int
mov
scas
mov
ret
jno
out
aas
pop
jg
repz
dec
ds
xchg
inc
pop
mov
test
mov
fstps
xchg
jae
mov
jecxz
lods
loop
or
pop
mov
xor
cmp
and
pop
fmuls
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
xor
cmc
fnstsw
call
adcl
mov
rorl
jle
aam
jnp
xor
cli
imul
mov
dec
icebp
sub
movsl
xchg
jp
sahf
ret
cmpsb
imul
mov
jecxz
movsb
aam
dec
orb
cmc
sbb
cmp
popa
daa
fisubrl
add
and
es
xchg
xchg
test
ljmp
mull
sbb
push
sahf
jmp
mov
mov
in
add
inc
je
clc
xlat
jb
adcb
adc
je
xchg
cwtl
fldt
push
mov
ret
add
xor
pop
test
lret
ret
in
pop
andl
jmp
mov
mov
push
add
sbb
mov
popa
mov
pop
add
xchg
pusha
andb
push
cmp
jge
call
mov
enter
dec
outsl
mov
outsl
and
pusha
dec
sbb
mov
insb
lcall
cmp
aam
lahf
cmpsb
sarb
mul
and
movl
jl
cmpsb
sub
jmp
or
xor
mov
test
pop
jecxz
add
pop
mov
negl
fwait
and
push
cmp
jno
leave
pop
fwait
int3
data16
push
dec
xchg
std
shll
dec
inc
fadds
jl
cmovg
mov
dec
ret
push
cmp
roll
aaa
sbb
sbb
popa
out
push
sub
pop
jmp
sbb
mov
mov
lret
sub
mov
out
xor
push
pop
dec
xor
jle
adc
mov
stos
pop
aam
gs
lds
add
mov
out
roll
xor
cltd
cwtl
xchg
outsb
mov
cs
cld
test
mov
mov
out
cmpsl
lret
mov
popa
cwtl
dec
push
movsb
xlat
dec
inc
jl
cmp
stc
jae
push
insl
push
rolb
scas
aaa
icebp
ja
or
lock
mov
pop
ds
sub
pop
mov
les
dec
mov
lahf
or
in
pop
fmuls
and
lods
rep
sub
jbe,pn
popa
mov
cmp
daa
jmp
sbb
xor
daa
lea
jb
sub
add
inc
jp
push
ret
xlat
fdivr
jecxz
popf
inc
mov
aad
sub
ret
dec
ljmp
pop
js
xor
fdivs
test
xchg
pop
ficoml
jne
pop
dec
pop
stos
pop
push
sub
push
enter
mov
xor
mov
cwtl
adc
imul
rclb
mov
xchg
dec
jmp
pop
or
pop
pop
leave
rcrb
push
pop
rcr
les
dec
pop
movsl
dec
test
push
ret
outsl
cmp
rclb
cmp
cmp
iret
stos
push
stc
inc
adc
jg
push
shrl
fwait
xor
cmpsb
insl
out
sbb
push
mov
cli
pop
mov
imul
lock
out
cmp
fcompl
adc
or
js
aam
clc
clc
pop
mov
inc
icebp
mov
lcall
lcall
jb
pop
call
mov
jp
aad
xor
jae
outsb
xchg
dec
pop
push
fists
lods
or
mov
or
hlt
rcrl
fsubrl
lods
sbbl
xchg
inc
mov
inc
push
xor
test
rcrb
inc
testl
mov
in
add
pop
mov
cmpsb
push
aas
aaa
neg
popf
stos
dec
sub
pop
mov
inc
mov
stos
ret
ss
hlt
aaa
xchg
mov
mov
or
push
rolb
loop
or
sbb
mov
ret
mov
push
inc
cmc
fucomi
jmp
jle
xchg
in
pop
sub
or
jg
add
mov
xchg
rolb
outsl
fistps
xor
fwait
push
adc
loope
sti
pushl
sar
loop
insl
mov
sbb
and
movswl
adc
inc
or
mov
adc
push
mov
psrlq
cmp
rcr
jmp
xor
or
orb
fs
add
rclb
imul
movl
or
and
aad
push
add
lahf
mov
addr16
fsubr
push
rep
mov
mov
sbb
scas
rclb
or
pop
fidivrl
cmp
push
push
xchg
rclb
fxch
out
mov
sbb
add
frstor
rcrb
sub
or
loop
ret
call
jmp
inc
mov
mov
out
xchg
push
jnp
mov
stc
movsb
xor
es
bnd
push
xchg
mov
scas
inc
cltd
jno
je
pop
and
pop
test
gs
adc
gs
leave
std
cmc
dec
pop
arpl
inc
test
arpl
mov
dec
hlt
frstor
mov
fisubs
and
fldt
test
setns
mov
mov
xor
aam
aaa
dec
mov
ss
adc
sbb
aaa
xor
sbb
jmp
pop
sub
dec
daa
xchg
sub
shll
stc
mov
push
xchg
add
popa
and
leave
repz
lret
mov
in
or
pop
pop
ret
out
xchg
bound
dec
push
call
shrb
mov
adc
or
pop
outsb
inc
movsb
fistl
pusha
cmp
movsl
mov
pop
arpl
stos
xor
lcall
mov
lret
ret
mov
jmp
jg
cwtl
jnp
mov
and
mov
pushf
dec
add
adc
ss
fiaddl
repz
inc
dec
push
sahf
pushf
insl
push
mov
iret
push
adc
and
leave
push
sbbb
cmp
cmc
std
or
or
dec
test
mov
clc
out
push
adc
xchg
mov
int3
mov
inc
outsl
cld
push
or
in
lods
stos
lret
mov
adc
jno
arpl
mov
mov
cld
sbb
cmp
mov
xchg
xor
xchg
push
test
or
sbb
cmpsb
jmp
lods
lea
adc
jae
cmp
add
insl
push
out
fidivrs
subb
add
and
and
stos
or
adc
leave
sub
xchg
shl
inc
mov
daa
daa
dec
and
jo
mov
daa
call
or
sbbl
and
or
jecxz
and
call
add
xchg
lea
ds
sbb
inc
scas
jno
xchg
mov
decb
jl
insl
imul
pop
xchg
and
mov
imul
stc
js
jbe
mov
idiv
sbb
jmp
mov
mov
inc
out
repz
loope
lahf
lds
lds
mov
xor
fwait
mov
iret
xchg
rcrb
sbb
sahf
or
mov
loopne
je
sbb
add
mov
test
repz
push
push
aaa
dec
mov
mov
pop
enter
add
cmp
fldt
lds
fistpl
lcall
mov
aaa
inc
fmuls
add
push
gs
jecxz
das
loope
mov
mov
outsb
out
dec
mov
push
scas
pop
sbb
add
cli
mov
rorb
iret
sub
bswap
sub
popf
or
xor
xchg
push
dec
push
mov
cs
loope
cld
pop
ljmp
aam
adc
psrlw
dec
nop
dec
inc
stc
pop
or
and
fsubs
ficomps
sbb
dec
or
mov
fnstsw
add
ret
test
ds
pop
dec
adc
mov
lahf
or
mov
lds
sub
fnstenv
notb
inc
jnp
ret
sbb
mov
loop
add
sub
out
fisubrs
das
cmpsl
ljmp
mov
sbb
repz
cltd
mov
mov
push
int3
or
mov
xor
fxch
xor
mov
gs
adc
es
pop
xor
add
and
mov
sbb
pop
xchg
cmp
mov
popa
fcmovne
push
push
pop
push
adc
fnstcw
push
or
jne
cmp
push
stos
or
arpl
inc
out
gs
sbb
mov
ror
cltd
repz
inc
movsl
jno
adcl
mov
jl
add
cmp
mov
inc
scas
add
sub
aam
jne
xor
pop
scas
jo
cmp
inc
xor
mov
sbb
lea
add
add
lret
in
cli
xor
sti
ljmp
fsubr
cmovge
shrb
enter
cmp
jnp
push
jbe
je
mov
pushf
sbb
cmpsl
xor
add
addl
out
es
es
xor
add
clc
mov
inc
xor
and
xor
jbe
jno
sub
or
mov
int3
jl
sub
xor
stos
mov
enter
je
pop
icebp
xchg
es
das
enter
roll
aad
and
xchg
sub
shl
push
adc
lahf
dec
fstps
cmp
lret
cmp
fsubr
inc
aas
push
insl
add
sub
insl
cmp
scas
push
popf
out
mov
sub
push
cs
ljmp
push
xchg
and
xlat
xchg
cwtl
mov
sub
popf
rolb
lds
xchg
addl
out
pop
lahf
sahf
mul
add
mov
test
sub
ljmp
mov
in
repz
movsl
out
out
into
sub
jl
xlat
xchg
scas
loope
sub
stc
jb
cmp
or
popa
outsl
pop
pop
outsl
fdivp
fwait
sbb
fsubl
and
idivb
bound
xchg
movsb
mov
call
hlt
out
test
and
or
test
int
lret
cltd
cmp
pop
sahf
call
jp
in
mov
or
hlt
scas
lock
or
adc
dec
push
es
jmp
fldl
xor
dec
in
stc
lret
push
cmpsb
sbb
nop
jns
mov
cmp
out
jmp
into
dec
xor
hlt
push
mov
dec
int3
scas
out
scas
jp
in
jnp
dec
pop
adc
lret
in
fcompl
or
fcoml
and
pop
adc
or
test
rolb
dec
xlat
dec
adc
push
leave
leave
adc
lahf
cmpsl
aam
mov
sub
lods
aad
inc
xlat
mov
fs
arpl
outsl
dec
mov
into
inc
mov
cmp
je
clc
out
pop
sbb
imul
xor
sbb
insl
imul
ljmp
mov
dec
push
data16
jbe
cmpb
cmp
cltd
fildll
mov
adc
inc
ret
scas
shll
jl
repz
cmpsl
pushf
cmp
pop
rolb
inc
out
ret
repz
stos
mov
loope
jns
ds
pop
js
iret
inc
cmpsl
stos
outsb
sahf
fbstp
fisubrl
add
das
arpl
add
jecxz
mov
pop
or
sbb
inc
push
outsb
push
push
cwtl
adc
mov
mov
lods
xchg
xchg
push
adc
into
inc
inc
out
cli
mov
push
push
mov
call
pop
lods
ljmp
out
or
and
stc
ror
xchg
lods
out
cli
push
mov
or
iret
xchg
cld
gs
mov
xor
xchg
or
into
das
test
and
xchg
xor
xchg
push
test
or
or
loop
xor
sbb
cwtl
push
and
aas
jae
ja
lock
pop
ds
xchg
ret
or
stos
stc
mov
enter
inc
or
xchg
andl
pop
addl
scas
xor
shll
cmp
pop
loopne
out
clc
outsl
add
mov
sbb
xchg
push
bnd
cwtl
rcl
cld
xchg
out
mov
leave
pusha
mov
enter
icebp
rorl
sub
or
pop
daa
pop
clc
dec
sbb
jb
xor
negb
pushf
adc
fdivp
sbb
sahf
jg
and
jno
sub
movsb
xor
sarb
lret
nop
fwait
adc
cmp
out
add
cmp
jae
sahf
sarl
imul
mov
leave
int
repz
jmp
pop
or
aas
in
push
add
movsl
sub
bound
or
mov
in
push
xchg
mov
jnp
in
mov
enter
out
mov
mov
xchg
sub
jo
iret
iret
jg
xlat
push
mov
pushf
cmpsl
push
repnz
andb
loope
jo
in
jl
inc
pop
lcall
mov
retw
lret
and
pop
adc
stc
dec
cmpsb
mov
lds
and
or
add
rorb
push
testb
outsb
movsb
pop
outsb
je
lock
cli
jbe
jb
lea
rolb
pusha
adc
lretw
ds
sbb
fsubs
testl
nop
mov
testl
pushf
xchg
aad
cmp
out
insl
outsb
push
outsl
cwtl
movsb
loope
mov
cmpsb
mov
scas
cmp
sub
jp
cltd
rolb
jno
fisubs
xchg
test
dec
hlt
push
fistpll
daa
gs
lret
and
out
mov
std
xor
mov
ss
pop
pusha
pop
sarb
lock
push
mov
outsl
es
ds
nop
or
and
dec
jg
inc
inc
xor
push
push
inc
fwait
lret
add
jle
std
xchg
jo
popa
ret
push
bound
jne
ret
mov
jl
lahf
push
sti
or
getsec
lahf
cmpsb
mov
mov
push
leave
outsb
sbb
in
in
popf
cmp
sbb
pop
mov
dec
shr
pop
loope
fisttpl
movsl
inc
xchg
test
cmp
mov
adc
aaa
jne
and
cltd
stos
pop
cmpsb
pusha
fs
loopne
leave
fs
sub
inc
hlt
iret
stos
xor
insl
insl
lahf
shl
sbb
push
push
xchg
das
xchg
call
adc
cmp
adcl
pop
jae
pop
enter
fistpl
mov
pusha
in
sbb
mov
sahf
nop
sti
ret
jmp
xchg
js
lret
lods
mov
and
std
jge
nop
xor
add
vpandn
cmpl
push
fnstenv
in
cltd
dec
pop
mov
push
in
test
icebp
mov
jmp
es
stos
in
les
leave
lds
push
mov
in
push
stos
lret
aas
nop
in
inc
inc
pop
je
enter
xchg
imul
insb
pop
xchg
jb
aas
les
push
enter
or
les
lods
pop
imul
adcl
add
mov
andb
and
cmpsl
cmp
roll
negb
sub
mov
mov
les
incb
pusha
int3
outsb
xchg
push
stc
cld
cmp
nop
test
add
xchg
test
and
lea
xor
cwtl
jne
push
mov
sarl
cwtl
daa
js
sbb
adc
int
ror
cmc
jae
pusha
jmp
adc
fmull
dec
push
inc
push
xor
adc
mov
dec
xor
cltd
ret
add
dec
dec
adc
bound
pop
push
or
out
pop
mov
mov
ds
std
jge
test
jl
adc
mov
mov
cmpl
pop
ret
jge
xor
pop
fisubl
cld
cmpsl
pop
dec
mov
push
sahf
push
mov
dec
mov
adc
test
jns
inc
dec
in
shlb
enter
jp
mov
mov
sbb
shr
mov
in
mov
sti
cwtl
add
out
pop
or
cmpsl
gs
jg
sahf
xchg
fildl
inc
inc
repz
orl
mov
pop
loope
pop
mov
popa
aad
adc
mov
in
sahf
scas
inc
sub
mov
dec
cs
and
and
int3
roll
scas
mov
dec
fnstsw
mov
mov
aad
adc
cmp
mov
js
ret
xchg
std
pop
jg
cmp
sbb
mov
jno
sbb
mov
cli
push
xchg
jnp
je
mov
mov
arpl
mov
cmc
int
cs
xchg
popa
daa
shll
ja
jecxz
xchg
dec
and
or
mov
pop
xchg
fldenv
cs
in
jl
pop
sbb
rcr
sbb
test
scas
bound
pop
sub
ljmp
mov
inc
xchg
xchg
jo
push
stc
rcrl
jle
cmp
lcall
sbb
xor
mov
lock
in
inc
inc
jns
test
ja
cmp
stos
pop
inc
xchg
insl
mov
insl
fbld
mov
test
ret
mov
int
xchg
lret
push
clc
imul
ljmp
push
inc
inc
mov
adc
inc
jp
mov
lock
sti
mov
dec
fcom
xchg
inc
sub
xor
int
dec
mov
test
fbstp
push
and
cld
popf
fbld
mov
or
int3
or
pop
mov
fadd
jecxz
adc
call
ja
cmpsb
rcrb
pop
aaa
or
xchg
pushf
hlt
mov
fcmovu
das
je
lret
push
mov
cmp
mov
test
sub
jl
push
lea
add
imulb
fisubl
xchg
xchg
cmp
adc
mov
mov
dec
outsl
jne
xor
rcl
stc
xchg
ds
sbb
xlat
mov
ja
cld
sbb
ret
in
cli
push
mov
dec
scas
mov
fs
iret
rorl
pushf
dec
xor
loopne
mov
mov
xchg
dec
cmpsb
jne
sbb
xor
xchg
sub
mov
nop
cmp
testl
push
lret
dec
add
icebp
jp
jo
out
and
xorl
adc
testl
ret
or
in
les
pop
sbb
ljmp
mull
or
jae
sahf
ljmp
xchg
stc
sarb
add
jle
out
dec
mov
mov
sub
int
stos
cmp
mov
push
adcl
popf
loop
add
inc
dec
adc
lods
pushl
push
loopne
and
or
jecxz
mov
test
dec
mov
xchg
jns
jae
jo
xchg
inc
sti
sbb
cld
pop
sub
jecxz
mov
mov
xchg
jb
call
jno
adc
mov
in
lahf
and
xor
je
inc
jmp
outsb
imulb
mov
add
fwait
or
inc
mov
lock
mov
mov
call
jae
inc
lret
pop
cmpl
sti
sbb
sub
arpl
lret
xchg
lahf
jns
mov
popa
imul
es
test
inc
lds
inc
cmp
hlt
ja
and
jae
les
shll
sub
push
sbb
mov
imul
pop
cmp
in
rcll
sub
inc
setbe
les
sbb
mov
imul
pop
sub
lret
jne
cmpsb
pop
mov
dec
cwtl
jle
mov
stc
rcr
push
clc
aam
in
stos
lods
fldcw
mov
xchg
sub
je
dec
dec
xchg
clc
rolb
cmp
jp
pop
mov
mov
adc
add
and
push
xchg
shl
push
cmp
cld
or
imul
jge
xchg
int3
bound
rcll
dec
mov
hlt
loop
ret
mov
lret
add
ljmp
bound
ret
push
popl
xor
cmc
inc
xor
push
shr
rcrl
xchg
pop
repnz
cwtl
add
adc
sti
cli
sbb
inc
adc
dec
pop
push
xor
add
push
pop
push
arpl
xor
aam
and
cli
sarb
pop
push
sar
sbb
sbb
fcoml
cwtl
hlt
jbe
push
sbb
pop
fisttps
sti
or
fadds
ficoms
shlb
sti
and
cli
jl
lret
xchg
or
leavew
mov
push
xchg
jge
mov
sbb
jecxz
jb
xor
sbb
xor
je
imul
out
sub
dec
das
fidivrl
sub
push
imul
mov
jg
add
push
hlt
dec
xlat
push
xchg
int
jge
cmp
xor
subl
cmp
outsl
pop
mov
mov
addr16
std
aad
out
sbb
scas
dec
cmp
scas
dec
xchg
mov
addr16
imul
sub
out
rclb
imul
loope
mov
adc
lods
push
and
xor
push
divl
sahf
imul
dec
or
mov
and
data16
add
cld
scas
pop
xlat
pop
xor
hlt
outsl
insb
dec
add
iret
sub
adc
cltd
jl
aas
sub
int3
and
cmp
mov
fcmovu
nop
loopne
cwtl
ljmp
sahf
ds
test
mov
int
cmp
repnz
fwait
jnp
push
cmp
xchg
or
cmc
inc
xor
push
mov
cmpsb
fwait
pop
in
jae
aas
sbb
das
je
and
sarb
adc
fcmovne
mov
pop
mov
mov
push
cltd
cmc
pop
loope
lcall
call
sub
push
addl
outsl
std
test
lods
pop
mov
or
mov
xchg
mov
out
test
pop
adc
xchg
call
and
jecxz
cmp
sbb
rclb
mov
sbb
mov
xchg
sbb
clc
sbb
cmp
aaa
xchg
xchg
inc
xchg
cmp
xchg
ljmp
push
push
xlat
imul
js
xor
xchg
sbb
test
testl
xchg
mov
repz
out
mov
xorl
rcrb
inc
lock
loope
xor
std
pop
aad
push
ret
sbb
mov
push
imul
mov
test
fstp
add
dec
lods
or
ret
pop
arpl
dec
inc
call
movsb
addr16
cmp
jle
mov
push
nop
es
xor
fnstenv
cmpb
adc
movsb
jl
leave
mov
je
inc
call
mov
cli
lods
into
inc
ljmp
cmp
inc
subb
jb
popa
cltd
mov
push
test
pop
jb
aam
push
pop
mov
pop
aam
outsb
sti
rcrl
movups
popf
in
push
xchg
insl
test
movsb
jae
stos
pop
sub
lock
insl
int
pop
xlat
mov
sbb
cld
cltd
jne
jge
rolb
leave
xchg
insb
hlt
decb
mov
push
test
insl
dec
imul
lds
test
jb
or
mov
sub
test
xor
lret
jno
adc
arpl
orb
sbb
add
sub
xchg
rcll
mov
bound
repnz
sbb
data16
imul
ret
leave
loopne
xor
xorl
inc
hlt
shlb
pop
inc
xor
xor
pusha
rcrb
adc
mov
sbb
sbbb
and
fimuls
mov
das
ljmp
push
jns
or
or
andl
xchg
out
jg
mov
insb
mov
mov
hlt
mov
xchg
lock
push
iret
fmulp
ljmp
cmp
mov
fldcw
outsl
push
inc
aas
ror
push
sbbb
cmp
and
or
dec
lahf
lods
out
xchg
inc
xchg
inc
ret
sbb
and
dec
loopne
fidivrl
pop
cmc
dec
and
repz
shl
shll
xor
inc
cmpl
pop
lock
ds
sbb
insl
hlt
inc
cmc
leave
dec
inc
xchg
adc
sub
leave
sbb
lds
or
mull
add
push
sbb
loop
fidivs
insb
negl
push
fnsave
adc
xchg
mov
sub
sbb
lea
sarl
jecxz
gs
mov
jp
mov
jns
mov
notl
test
repnz
jmp
jmp
mov
or
push
out
sub
push
xor
cmpsb
mov
neg
lea
leave
sub
iret
lret
aas
jnp
cld
sub
pop
jp
mov
inc
dec
in
xchg
into
scas
mov
jmp
dec
cli
fiadds
cmc
inc
push
mov
pushf
mov
pop
mull
xchg
or
sub
aam
pop
ret
add
mov
addr16
or
sarb
xchg
adc
lods
enter
ja
pop
push
cld
inc
jmp
lret
add
mov
jbe
movnti
pushf
inc
pop
sbb
mov
sti
lock
jo
or
iret
mov
inc
lcall
cmp
push
mov
and
jns
int
mov
outsl
jns
and
ret
mov
repnz
bound
cmp
sbbb
jne
pop
sub
push
pop
xor
inc
xchg
daa
fcmove
pop
add
jp
add
shrb
mov
scas
imul
dec
subb
pop
or
aad
mov
xchg
mov
loope
int
clc
sub
or
data16
mov
lods
insl
push
jg
enter
xchg
jns
add
stc
bound
push
inc
mov
data16
popf
or
lods
arpl
mov
enter
dec
sub
or
cmp
mov
andb
jae
mov
dec
popf
and
or
xchg
mov
push
jo
adc
fists
rclb
push
repnz
mov
cmpb
mov
sub
or
test
sbb
call
dec
scas
pop
fldl
push
fwait
dec
cwtl
adc
daa
jecxz
mov
lret
mov
push
stos
pop
insl
pop
and
pop
xchg
pop
mov
adc
adc
dec
in
mov
mov
inc
jg
add
jl
xor
mov
stc
push
mov
fisubrs
jns
adc
mov
push
mov
clc
add
or
and
jl
fcomp
leave
push
or
cmpl
push
push
jmp
or
mov
test
mov
mov
pop
push
mov
jb
aaa
adcl
xchg
push
movsb
inc
pop
add
lahf
adc
xor
outsl
lea
je
mov
sub
jb
out
push
int3
push
rol
pusha
jbe
mov
mov
xchg
call
push
bound
scas
add
mov
push
mov
inc
lret
scas
cmp
sbb
scas
xor
sub
insl
or
fwait
cmpsb
adc
lods
lcall
imul
jge
hlt
mov
pop
jmp
outsl
rcrl
mov
pop
mov
outsb
pop
cmp
fisubrl
pop
sbb
mov
lahf
or
push
lea
mov
pop
adc
loope
adc
ficoms
inc
push
imul
ret
in
sti
inc
sub
sbb
mov
mov
movsb
pop
push
imul
rcrl
inc
pop
divl
cld
or
pop
push
bnd
pusha
lahf
and
daa
stos
in
cmp
gs
lock
lods
adc
arpl
pop
inc
sti
lods
sarb
dec
int
arpl
lds
sti
sub
jmp
das
cmc
test
sub
and
adc
push
lods
cmpsl
mov
scas
and
cwtl
jg
push
movsb
notb
mov
imul
repnz
add
loopne
or
call
mov
xchg
lahf
data16
daa
pop
push
in
adc
fstps
loopne
or
mov
mov
push
inc
fs
push
pop
aaa
xor
push
andb
js
aad
scas
jbe
sti
sub
mov
mov
cli
lret
popa
add
push
leave
mov
aas
xchg
insb
jp
fwait
negl
adc
sbb
dec
sarb
aaa
mov
fidivl
test
mov
push
mov
in
mov
ds
mov
jne
je
sub
mov
shrb
pop
pop
add
cli
in
cmp
aam
jns
push
outsl
adcb
lahf
xor
jnp
test
cmpsl
jne
or
cli
cli
lea
imul
mov
test
out
pop
mov
adc
clc
sub
sbb
xor
sub
cmp
lods
aas
mov
add
les
mov
inc
sbbb
push
cwtl
sub
scas
xchg
inc
test
repnz
xlat
dec
mov
aam
sti
out
test
rclb
clc
outsb
mov
cmpsb
push
dec
cmp
sbb
ds
scas
add
mov
xchg
imul
rolb
xchg
mov
ja
push
addr16
sub
sarl
jge
arpl
cmp
pop
fldt
fiadds
sbb
stos
mov
int
popa
leave
cmp
int3
pushf
mov
setnp
pop
push
fwait
stos
adc
push
daa
ror
mulb
mov
roll
mov
loopne
mov
stos
xor
mov
cmp
in
cld
addr16
or
push
imul
sbb
sbb
sbb
stos
lock
je
lret
or
nop
ret
sbbl
xlat
dec
add
pop
insl
sti
mov
jo
mov
insl
cmp
mov
loopne
aad
cmp
notb
shl
pop
sarb
pshufw
sbb
sbb
shr
inc
adc
mov
push
push
pop
jno
fs
mov
mov
pop
pop
loopne
hlt
cmpl
in
in
repnz
cs
ret
lahf
push
test
adc
xchg
in
push
orb
ror
sarb
mov
sbb
clc
jb
pop
mov
and
mov
xorl
into
fidivrs
stos
pop
pop
mov
rolb
pushf
adc
lods
repnz
and
or
jo
sbb
fcompl
jge
test
loop
enter
das
push
mov
xchg
ljmp
or
popf
addr16
jns
xchg
and
pop
popf
mov
das
mov
fmull
insl
sbb
push
add
and
inc
jl
xchg
sbb
push
adc
out
mov
mov
jno
or
fs
push
lret
movsl
fistpll
fbstp
inc
sub
jbe
dec
call
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
and
jp
rcrl
sub
pop
jo
xchg
push
jne
addr16
outsl
aam
mov
aaa
mov
jecxz
adc
push
cmpsl
lcall
push
loop
fmulp
dec
push
iret
jo
or
add
and
fmull
fsts
jns
sub
pop
pop
add
in
shlb
sub
xchg
jg
add
and
jne
xchg
add
push
and
xchg
cmp
add
mov
int3
movsb
mov
jae
xor
cmp
lods
mov
jns
push
cmpsb
push
push
mov
mov
sub
imul
inc
testb
in
jo
jno
pop
les
leave
loop
movsb
movsl
xor
je
jne
add
sarb
insb
add
mov
jbe
loop
addr16
sub
adc
dec
outsl
mov
pop
adc
js
sti
cmp
and
leave
fdivrs
jno
cmp
adc
sti
leave
shll
pop
fs
dec
xchg
in
lods
test
mov
popf
mov
fisubrs
movl
pop
mov
jp
out
movsb
mov
push
dec
lea
daa
stos
mov
aam
and
loopne
dec
mov
pop
daa
in
loopne
lock
xor
mov
cmp
fwait
add
jne
or
scas
mov
or
and
add
mov
arpl
sbb
and
jae
fs
insb
cli
iret
xor
cmp
mov
fstpt
push
add
loop
adc
movsl
inc
xlat
pop
or
push
push
out
push
mov
inc
ss
inc
inc
imul
nop
sahf
mov
jbe
dec
fidivs
jae
lds
cmp
enter
lcall
and
sbb
int
subl
hlt
out
es
xchg
test
push
aad
add
xor
fwait
int3
or
and
pushf
mov
push
mov
js
mov
dec
dec
into
int
test
inc
movb
mov
call
mov
sarb
cmp
cmovb
cmpsb
add
movsb
imul
mov
test
leave
cmc
test
movsl
mov
adc
and
out
inc
add
addr16
mov
mov
cmp
sti
add
inc
and
push
add
add
jnp
mov
into
mov
pop
and
xchg
js
scas
es
loop
test
sbb
xchg
outsl
dec
or
mov
mov
push
jecxz
out
add
inc
push
js
inc
popa
in
lods
and
mov
inc
iret
pop
xor
int3
inc
and
mov
or
bound
in
ror
lret
nop
aam
scas
pusha
pop
and
popf
sbb
mov
out
daa
inc
sbbb
in
mov
jecxz
pop
ret
push
adc
cmpsb
aam
addl
fisttpll
stc
sbb
mov
sub
jg
insl
or
jae
mov
or
scas
inc
ds
lahf
dec
inc
add
adc
push
cmp
cmp
mov
xor
out
int3
add
pop
and
movsb
dec
test
mov
mov
jmp
lahf
ja
inc
cwtl
and
fcoml
fwait
clc
rcr
mov
mov
je
sub
or
imull
or
jmp
jle
rolb
pushl
hlt
shll
mov
or
mov
dec
xchg
cmp
dec
jbe
fnclex
inc
cmp
es
aaa
loopne
repz
dec
fidivl
les
sub
mov
cs
pop
repz
lahf
pusha
sbbl
cmp
mov
lret
pusha
aam
flds
mov
es
dec
cmc
inc
jo
mov
adc
xor
xor
inc
cmp
clc
xor
xchg
pop
adc
adc
adc
or
imul
push
cmovl
and
or
mov
jns
je
fisttpll
mov
and
imul
sub
mov
bound
cmp
push
lds
scas
xor
fsubs
dec
stos
sub
mul
pusha
jge
ret
pop
sbb
es
jne
lods
mov
lahf
cmpsb
incl
pop
fs
lcall
lea
pop
in
mov
bound
xchg
and
mov
arpl
xchg
inc
push
mov
or
jle
and
cmp
mov
les
dec
sbb
push
dec
or
loop
out
sbb
cli
cs
adc
jp
fdivrl
inc
inc
nop
mov
nop
pop
nop
and
inc
sti
or
cmp
cwtl
pop
mov
lods
cld
push
cwtl
mov
push
addr16
pop
mov
sub
insl
hlt
cmpsb
lds
push
leave
lcall
mov
shll
shlb
mov
lds
mov
and
cmp
aad
les
mov
enter
popa
out
xchg
lret
movsl
in
add
dec
mov
outsl
inc
fmuls
aaa
or
ss
cmp
lods
repz
movsl
cmpsl
mov
scas
ror
sub
mov
lock
fisttpll
mov
dec
fidivrs
sahf
stos
leave
subb
push
fs
dec
cld
shll
aam
dec
cmp
lcall
filds
std
sub
ljmp
in
mov
int3
pop
popa
aam
aas
xorb
les
mov
jecxz
xchg
ret
test
push
hlt
dec
rol
and
movsb
outsl
aas
sbb
pop
mov
out
rorb
jmp
shlb
ds
movl
mov
adc
pop
jbe
cmc
add
sbb
xchg
push
and
clc
mov
mov
cld
pop
jg
leave
dec
inc
fadds
xor
leave
xor
mov
rol
scas
imul
push
fdivl
jg
arpl
xchg
ret
bound
or
mov
xor
adc
push
mov
ja
push
lret
aas
nop
out
mov
call
sbb
cmp
test
call
sbb
fcomps
mov
mov
ret
int
call
cmp
mov
scas
dec
lahf
or
dec
pop
lret
popa
ljmp
ds
insl
mov
in
jl
xchg
enter
fldcw
mov
into
aad
or
add
imul
call
sbbb
add
sub
pop
cli
add
dec
insb
adc
in
adc
test
adc
push
cmpb
mov
lcall
sbb
daa
and
push
call
ja
jle
cltd
int
jle
xor
push
repnz
push
mov
add
rcrb
sti
sahf
and
push
pop
ret
push
clc
jns
jmp
push
fmul
xor
fsubs
mov
dec
adc
in
inc
pop
insb
insl
aaa
mov
sub
mov
mov
movsl
jb
repz
stos
jae
cwtl
mov
aaa
int3
adc
jl
mov
cmp
pop
mov
je
mov
imul
pop
stc
mov
mov
rcll
popf
mov
js
pop
inc
jge
subl
mov
cmc
xor
inc
add
jg
fisttpll
mov
stos
add
fstps
inc
push
adcb
rcll
and
movq
cwtl
adc
jae
fistps
cmp
movsl
sti
ljmp
sub
stc
dec
fs
pop
mov
lret
sbb
jg
inc
bnd
js
mov
sub
sbb
push
dec
mov
or
int
orl
ret
or
add
not
inc
adc
lock
mov
jbe
sub
fnstenv
in
ret
fs
cli
dec
cmp
leave
xor
mov
aaa
in
xor
sub
jmp
fsubrl
mov
xor
mov
xchg
fldl
fisttpll
push
mov
cs
push
fmull
push
pushf
out
mov
pop
iret
insb
pop
push
push
mov
rolb
pop
mov
leave
xchg
jp
mov
jae
outsb
loope
rorb
lret
mov
push
outsb
adcl
int3
cmpb
mov
mov
push
xchg
test
dec
pop
shll
cmp
mov
cwtl
mov
movsb
sub
mov
push
inc
jnp
leave
enter
push
addr16
aas
add
sub
shrb
sbb
mov
or
xchg
mov
pop
stos
rol
xrelease
push
int3
mov
mov
cld
mov
sub
pop
cmpsb
adc
xor
inc
cmp
sti
pop
movl
inc
loopne
jne
js
insl
test
jne
mov
cmp
int
aam
add
pop
scas
xor
dec
mov
int3
stc
sub
rcrl
data16
sbbl
mov
lea
xchg
lods
mov
push
pop
clc
fsub
mov
cmpsb
lods
cmp
lret
dec
aad
xchg
les
cmp
mov
xchg
pushf
shr
cltd
clc
dec
mov
xor
aam
sbb
jmp
insl
add
push
test
jne
adc
add
out
imul
xorb
dec
push
cld
repnz
lret
stos
test
jns
je
pushl
js
push
dec
loope
pop
sti
mov
gs
jnp
mov
mov
mov
xchg
dec
adc
insb
sub
dec
sbb
sub
pop
fadd
dec
int3
xchg
lods
mov
pushf
int3
sub
lods
push
in
inc
cmp
sahf
ja
movsl
push
js
addb
ret
mov
jecxz
adc
cmp
scas
fdivl
xor
mov
dec
pop
sbb
mov
xchg
cmpsb
test
sub
add
xlat
bnd
cli
adc
mov
fs
cli
inc
test
mov
and
or
fldt
sbb
out
xor
cltd
in
sti
ja
cli
test
das
mov
xchg
repz
jns
pop
leave
sub
dec
jns
mov
cmp
cs
jne
test
idivl
ret
pop
shr
mov
cmp
cs
cmp
mov
jl
xor
call
mov
insl
sti
rcr
int
push
test
push
xlat
or
xchg
push
in
loopne
pop
adc
sbb
dec
test
fists
into
mov
adcb
cmpsl
lret
cmp
xor
mov
sub
pop
or
push
stos
jns
xchg
cmp
add
add
mov
cmpsl
out
add
sub
adc
insl
sbb
mov
ret
inc
mov
les
pop
repz
fistl
pop
mov
pop
xor
inc
hlt
inc
es
scas
shll
call
and
push
loopne
addr16
cli
sub
loopne
movsl
out
dec
or
in
push
jb
inc
pusha
enter
gs
int3
je
push
imul
lock
adc
adcw
loope
adc
inc
mov
lcall
sub
ret
sbb
mov
popf
imul
jae
in
insl
imul
ficoml
and
jle
xor
sbb
jbe
mov
ss
aad
push
jp
xchg
and
add
scas
pop
loop
fistl
repnz
or
stos
lock
fldenv
sbb
push
aaa
popa
test
jbe
cmp
movsl
or
push
mov
xorl
lahf
fidivl
pop
add
cmp
cmpsl
rcrl
jns
cli
imul
stos
cmc
or
xchg
scas
inc
fnstcw
add
mov
dec
repnz
in
pusha
aad
ss
jnp
sub
sbb
fdivrs
pushl
aaa
mov
lds
or
rcll
cmpsl
int
sub
mov
sub
subl
adc
inc
or
insl
pop
addr16
in
cld
cmpsl
xor
stos
sbb
cmp
dec
pop
ja
lret
clc
mov
ss
icebp
inc
stos
mov
insb
add
sbb
ljmp
and
cli
repnz
cmp
mov
mov
xchg
or
movsb
or
loope
push
sbb
and
lds
cli
pop
xchg
mul
loop
sbb
popa
sarl
testb
and
ss
lods
sub
arpl
cli
call
xchg
out
jnp
xlat
rorl
mov
loop
inc
outsb
mov
pop
push
or
insb
sub
adc
inc
push
mov
xchg
lds
test
or
add
jne
mov
adc
xchg
shlb
rolb
xor
xor
dec
cmc
lods
mov
rcrb
lcall
enter
pop
add
pop
imul
rol
in
xchg
cmp
adc
and
xchg
and
bndldx
arpl
jae
test
fisttps
mov
xor
xchg
mov
push
movsb
outsl
and
push
mov
insb
lock
mov
jp
les
sub
mov
lret
mov
pop
xchg
push
xchg
and
popf
jns
test
jge
fisttpl
push
and
into
or
ja
push
add
xchg
pusha
adc
inc
sub
inc
cmpsb
out
imul
add
dec
dec
mov
out
or
pop
js
cli
push
int
xor
dec
xchg
xchg
push
filds
mov
mov
imul
hlt
inc
aam
scas
lds
xor
hlt
cmpsl
adc
sub
xchg
subl
mov
js
jl
das
mov
dec
stos
push
pushf
mov
sbb
cmpsb
or
jbe
mov
lahf
or
xchg
mov
pop
xor
lea
push
push
jb
lock
push
sahf
and
test
jecxz
push
insl
jmp
pop
mov
imul
fs
mov
or
popa
subl
push
or
movsb
shlb
pop
call
add
mov
sbbb
xchg
leave
mov
outsb
and
push
jmp
in
lahf
mov
xchg
lock
roll
fsub
dec
mov
mov
jo
inc
sbb
das
insl
pop
and
sbb
roll
push
cwtl
cmp
xchg
mov
imul
out
lods
pop
push
test
cli
jns
sbb
xchg
jmp
sar
test
or
mov
orb
dec
stos
or
mov
lret
inc
icebp
sbb
push
int
mov
xchg
imull
test
repnz
lods
or
dec
or
dec
xchg
mov
push
scas
gs
fldt
les
sub
push
jge
xor
add
and
cmp
lcall
pop
add
cmp
push
aad
jl
inc
ret
mov
lods
push
movsb
mov
aaa
insb
rolb
cwtl
inc
ret
loopne
mov
xchg
dec
mov
in
clc
bound
fdivrs
mov
sub
xchg
pop
push
cmp
clc
scas
cmp
mov
jne
add
adc
sub
idivb
xchg
imul
sbb
jmp
mov
test
ss
int
dec
adc
es
push
dec
sbb
sbb
mov
sbb
cmpl
inc
out
jbe
adc
test
sub
test
mov
je
stos
fidivrs
outsb
dec
dec
scas
cmp
out
ss
jp
stos
cmpb
sbb
jno
push
lcall
daa
bound
mov
aam
sub
rolb
lods
adc
cmp
push
call
xor
int3
adc
mov
and
in
push
into
sbbl
jmp
fmuls
xor
mov
adc
stos
dec
push
data16
xchg
cld
out
and
imul
rorb
add
jmp
lods
js
dec
cmp
rcrl
inc
mov
insb
push
mov
mov
push
jl
repnz
ljmp
out
dec
and
outsb
adc
std
es
xchg
fcmovnbe
subb
pop
cmp
adc
stos
cmpsl
enter
xor
push
outsl
jno
push
rclb
xor
sub
mov
into
mov
pop
das
push
pop
js
fst
int3
mov
adc
scas
scas
pop
ja
movsb
push
leave
fs
and
cmpsl
fistpll
lock
mov
lahf
neg
push
lds
inc
iret
movb
mov
sub
and
rclb
repnz
dec
jne
arpl
ret
ljmp
insl
xchg
into
imul
xchg
xchg
sti
mov
lcall
add
inc
inc
enter
aas
jl
xchg
and
std
in
lods
int3
jg
ljmp
xor
and
cmp
fidivl
bound
dec
fcoml
mov
imul
pop
or
jmp
push
nop
push
sti
fcmovnu
xchg
scas
mov
mov
push
xchg
xchg
mov
addr16
xchg
std
stos
int
sbb
addr16
cmp
hlt
fidivrl
fsubrp
push
xchg
imul
jmp
fldenv
inc
pop
mov
xchg
lcall
and
insl
mov
adc
lea
rcrl
scas
jnp
repnz
cli
fucom
push
xchg
dec
pop
jle
clc
sub
add
lock
jbe
pop
ds
int3
out
lahf
adc
jne
mov
push
out
add
mov
mov
inc
mov
mov
fisttps
or
xor
mov
rep
popf
inc
sarl
sub
test
push
adc
orl
inc
faddl
jns
pushl
mov
rorl
loopne
xor
jge
loope
add
stos
loopne
out
or
aad
xchg
test
std
xor
in
in
inc
mov
outsb
sub
popa
imul
xchg
mov
repz
stos
lea
les
movsl
mov
mov
enter
dec
js
cmp
or
enter
std
aam
xchg
cld
repz
shl
sbb
mov
pop
iret
pop
rorl
popa
pop
icebp
mov
inc
jecxz
lret
cwtl
es
inc
mov
push
movsb
mov
add
mov
dec
mov
mov
jae
into
push
imul
fdivrs
inc
add
xchg
and
add
pop
aam
jp
adc
pop
or
idivl
sub
push
movsl
lods
std
call
dec
jp
pop
dec
jns
int
fsubrp
push
dec
xor
sub
in
stc
or
fildl
loop
int
sub
imul
cmp
mov
jno
addr16
jnp
outsb
stos
sub
movsl
and
cs
imul
scas
stc
cwtl
pop
hlt
sbb
test
fisttps
cmpsl
jg
out
or
mov
jl
sub
dec
and
cmc
pop
jbe
push
pop
ss
stos
cltd
gs
inc
ljmp
popf
push
mov
push
imul
int
mov
inc
inc
cltd
mov
xchg
adc
mov
icebp
push
adc
imul
outsb
insl
lea
jne
pushf
dec
xchg
inc
ffreep
inc
mov
pop
xchg
lahf
lds
mov
pop
cmp
data16
addr16
jp
jno
xchg
jb
outsl
xor
or
pop
scas
pop
dec
addr16
xor
cmp
xor
stos
mov
mov
lret
addr16
add
push
cmp
mov
rcrl
test
aas
adc
icebp
inc
adcl
js
js
call
push
mov
xchg
mov
nop
xchg
cmpsb
jle
mov
daa
cltd
xchg
add
xor
dec
lret
push
aam
mov
dec
loop
shrl
std
adc
subb
inc
jnp
popf
sbb
jecxz
lret
fldl
pusha
nop
mov
lods
xor
lock
fs
push
mov
jbe
jbe
fcomp
dec
cmp
lret
or
outsb
cwtl
call
mov
adc
fsubl
fldln2
stc
in
add
in
inc
test
pop
insb
imull
enter
ljmp
outsb
andb
int3
rorl
in
mov
scas
jmp
mov
aad
xor
adc
decb
out
popf
cld
jge
push
jge
cld
mov
fcom
jg
push
mov
cmp
xchg
xor
sbb
movsl
adc
and
xchg
jp
das
dec
iret
std
mov
mov
pop
nop
and
jl
lea
sbb
jne
dec
enter
mov
sbb
in
cltd
roll
dec
add
stc
dec
enter
adc
add
inc
ud0
icebp
bound
ficompl
inc
and
push
dec
test
xchg
pop
xchg
xchg
add
mov
clc
adc
fwait
shll
dec
cmc
xor
xorl
data16
je
dec
iret
call
dec
or
xor
imull
int
leave
xchg
dec
jae
mov
xchg
fisttpll
inc
mov
xlat
aas
out
mov
loope
cmc
fnsave
lret
add
xchg
xor
mov
aad
xchg
dec
stc
sub
inc
xchg
cmp
sets
js
enter
dec
jg
mov
jp
mov
mov
sarb
jb
popa
adc
rclb
data16
call
gs
aas
sub
int
mov
add
ss
or
jmp
stos
mov
inc
cmp
outsl
add
mov
je
fildll
xchg
notb
xor
adc
into
mov
daa
adc
xchg
fst
fwait
popa
fmuls
movsb
lea
imul
repnz
or
and
pop
xchg
popl
cmp
in
jnp
or
adc
mov
xor
ret
jp
aad
mov
sti
ja
aas
dec
mov
jae
dec
cs
mov
mov
xchg
icebp
jl
daa
xor
pop
and
mov
adcl
stos
out
sbb
stos
in
test
pop
movsl
add
mov
in
clc
mov
push
cmp
pushl
lret
adc
cltd
data16
out
jge
pushf
pop
mov
xchg
mov
mov
ljmp
ret
in
mov
add
and
push
fldcw
les
icebp
cmpsb
hlt
mov
jns
roll
in
in
jnp
rclb
mov
and
in
bound
cltd
xchg
xchg
imul
sbb
push
or
imul
nop
xchg
cmc
loope
cwtl
sbb
addr16
in
push
movsl
dec
loopne
xchg
ljmp
jle
loope
xchg
pop
jecxz
mov
xchg
or
pop
xchg
or
push
test
das
mov
in
leave
push
in
cmpl
in
fxch
ud1
call
icebp
repnz
loop
ds
xor
shlb
addl
or
lea
bound
test
mov
jmp
jl
call
fsubr
xchg
adc
in
nop
fsubs
mov
xor
jnp
xchg
adc
int
mov
cmc
jg
aas
repnz
xchg
scas
outsl
and
and
movhlps
sti
push
dec
mov
jle
popf
cmp
les
fimuls
jecxz
xor
add
cmp
mov
and
inc
add
lock
jecxz
movsl
inc
pop
js
xchg
inc
or
pop
pop
dec
or
lods
call
pop
cmc
push
or
push
mov
sub
rclb
xchg
test
dec
mov
adc
insb
push
push
add
sbb
push
xchg
xorl
fst
cmpsl
adc
or
dec
push
mov
pop
mov
mov
mov
adc
mov
xchg
scas
sahf
and
pop
xor
push
test
insb
js
cmp
adc
mov
clc
movsb
in
test
cli
stos
pop
push
add
adc
mov
adc
test
lret
sub
insb
push
jl
mov
outsl
test
cltd
xor
mov
jne
fisttpll
jb
add
lods
mov
mov
mov
and
or
test
leave
sti
pop
dec
cmp
dec
push
cmp
cs
jbe
pushf
sbb
push
jne
stos
xchg
ja
or
push
in
inc
push
and
inc
mov
ds
push
loop
push
dec
xor
push
loopne
lock
lods
cmp
fmul
clc
adc
andb
jp
xchg
sub
push
daa
sbbb
fcomp
insl
cli
out
jl
imul
mov
lret
or
rcrl
push
clc
dec
push
lcall
sub
mov
sbb
arpl
leave
sub
sub
mov
and
fcmovbe
mov
mov
cmc
in
jo
addr16
xchg
aaa
rcll
lret
stos
or
sahf
lret
pop
push
xor
test
cli
xchg
jle
fbld
cmp
aam
push
mov
sbb
jmp
out
xchg
leave
jo
dec
daa
xchg
push
xchg
fcomip
std
repz
xchg
mov
popa
out
dec
das
xor
sbb
mov
push
sub
cltd
sub
stos
push
loope
dec
push
scas
pop
bnd
out
push
in
out
jne
ljmp
push
pop
enter
in
and
mov
xor
cltd
sbb
xlat
or
or
cld
jmp
inc
lcall
enter
or
pop
jbe
push
sbb
test
sti
test
adc
mov
movsl
mov
push
ja
rorb
lcall
push
std
arpl
add
in
sbb
cwtl
xchg
cwtl
aam
int
outsb
sub
clc
jmp
hlt
xor
loop
cmp
lret
je
mov
dec
cwtl
orb
add
pop
add
add
js
xor
sbb
pop
hlt
loope
mov
push
shrb
add
mov
mov
mov
clc
xor
sbb
adc
in
inc
push
or
sarl
mov
ljmp
adc
sbb
repz
pop
xor
cmp
bnd
pop
out
lods
je
push
mov
sbb
pop
inc
je
aaa
lret
push
jo
movsb
mov
dec
in
test
push
xchg
sbb
fwait
push
mov
icebp
push
call
repnz
push
out
sbb
mov
ds
imul
cmpsb
sub
repnz
inc
jbe
adc
outsb
xchg
in
out
insl
insb
xchg
or
les
xor
in
aaa
mov
mov
pop
icebp
lock
fwait
test
lahf
movb
mov
and
shll
pop
xor
fdivp
mov
inc
daa
mov
ds
dec
mov
xchg
push
pop
mov
fiaddl
xchg
push
je
insb
int
cld
mov
or
pop
pushf
cmp
inc
mov
pop
mov
hlt
fldenv
dec
lds
stc
dec
ret
les
test
bound
not
pop
mov
dec
rep
clc
lods
cmpsl
leave
int
sub
aaa
xor
inc
dec
add
sub
call
mov
stc
out
pop
xor
fstpt
add
pop
mov
jbe
and
sub
mov
js
mov
mov
addr16
movl
adc
into
xchg
add
in
adc
mov
inc
nop
lds
pusha
and
fwait
dec
jg
std
in
repnz
mov
stos
fists
mov
gs
negl
mov
dec
cli
inc
jp
ret
movsl
and
cmp
xchg
mov
or
subb
xchg
or
jp
hlt
mov
fscale
ret
cs
cmp
cmpsb
js
jmp
pop
adc
lret
jmp
shlb
nop
decl
mov
adc
cmpsb
and
rcll
sub
mov
dec
pop
stos
dec
cs
jns
cltd
xchg
pop
mov
repnz
fsts
push
pusha
rorl
loop
loope
fwait
jnp
les
add
mov
cmp
mov
out
mov
sub
mov
loop
cwtl
stos
in
or
rcrl
pop
cwtl
mov
push
or
or
push
ficoml
push
add
mov
loope
imul
loopne
xchg
popf
jo
shl
mov
fs
mov
ss
scas
pop
jo
cmpl
sbb
cmp
jno
je
jbe
out
cmc
jne
stos
cld
mov
fadd
mov
fwait
mov
adc
or
pop
jl
loopne
jne
xor
mov
imul
sbb
lcall
mov
nop
mov
into
sbb
daa
jmp
xor
je
xchg
lods
pop
in
pop
jecxz
and
or
sub
bound
out
or
dec
inc
pushf
mov
lret
dec
mov
jmp
jbe
or
mov
data16
lds
xchg
stos
xchg
fisttpl
movsb
inc
cwtl
cmp
push
jnp
mov
fdivr
jge
out
add
ret
adc
test
add
nop
pop
mov
and
mov
xlat
push
pop
shlb
xor
or
gs
adc
mov
jo
mov
packsswb
mov
dec
lret
sbb
stc
adc
enter
testb
imul
and
xor
ljmp
mulb
mov
je
insl
test
add
push
sub
sub
dec
aad
leave
sbb
xor
xchg
ljmp
hlt
or
iret
push
pop
and
jg
adc
jno
mov
testl
sbb
cli
add
xor
in
in
mov
add
jno
jmp
push
das
and
fadd
push
daa
cmp
out
cwtl
inc
inc
adc
andb
pop
sub
les
cmc
imul
cmc
xor
push
mov
xor
shlb
not
loopne
push
inc
fcmovu
cltd
test
jecxz
rclb
adc
ljmp
pop
jmp
xchg
fidivl
dec
mov
pop
jae
cmp
inc
mov
sbb
fsubs
into
fmull
cs
shlb
dec
pop
lods
xchg
xchg
jg
es
jnp
test
inc
movsb
jbe
pop
sub
jl
aaa
les
imul
xchg
xchg
sub
jp
mov
stos
lret
ljmp
adc
adc
mov
das
cmp
xchg
inc
aad
mov
sub
xor
dec
insl
mov
jl
mov
in
in
leave
lahf
ljmp
aaa
mov
xlat
pop
icebp
insb
mov
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
pop
cwtl
insb
jecxz
hlt
push
dec
mov
push
dec
cmpsl
cmpsl
enter
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
