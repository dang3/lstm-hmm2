push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
pop
push
and
bound
fstpl
bound
sub
pop
add
pop
jne
pop
test
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
pop
mov
dec
sub
rorl
jg
inc
stc
mov
cltd
pop
adc
out
mov
push
adc
inc
clc
das
xlat
aam
cmp
ror
xchg
cltd
pop
lods
mov
jp
pop
loope
popa
jae
fildl
cmp
push
mov
pop
or
cs
fisubrl
orb
adc
jne
test
mov
and
out
out
sbb
fdivrl
add
sti
fcompl
inc
jne
mov
xor
mov
inc
lret
cmc
mov
push
mov
int
aad
loope
dec
cmp
jmp
cmpsl
daa
into
cmc
cmc
lock
bound
mov
jmp
mov
xor
sub
jmp
fs
arpl
fwait
mov
adc
daa
mov
bound
push
iret
mov
outsl
and
je
inc
sbb
pushl
popa
stos
jo
aas
mov
cmp
mov
inc
fistpll
adc
add
or
xchg
add
jecxz
addr16
das
std
arpl
xor
in
xchg
addr16
pop
push
push
xchg
cs
outsl
dec
lds
pop
mov
out
lret
mov
fldcw
adc
in
rol
inc
in
push
sub
mov
or
nop
clc
out
jle
inc
adc
inc
int3
and
xchg
mov
data16
cmp
and
mov
lods
icebp
popf
lds
pop
out
int
cld
mov
mov
int
pop
cwtl
aaa
push
inc
mov
call
orb
cmp
out
lret
jne
sbb
sub
movsb
xor
mov
rorl
xlat
jmp
rolb
adc
push
or
inc
bnd
icebp
xchg
add
push
lea
sub
aas
dec
enter
cli
in
test
sbb
push
add
movsb
nop
xor
xchg
jne
sub
jno
inc
mov
and
cmpsb
xchg
mov
sahf
fwait
popa
sahf
cltd
pop
cmp
cmp
je
les
ds
loop
push
je
jl
push
add
fwait
inc
and
pop
jle
adc
std
aam
pop
sti
xchg
jmp
test
mov
jle
out
mov
and
xor
pop
sarl
dec
push
dec
mov
push
cld
sub
cltd
pop
test
add
pop
cmp
push
fs
fs
mov
jle
mov
loop
mov
adc
test
pusha
mov
out
jnp
pushf
popf
jp
pop
lret
stos
mov
loope
push
les
sti
pop
add
sub
aaa
int3
inc
jo
xchg
mov
ja
mov
das
incl
push
xor
pop
mov
icebp
decl
inc
mov
das
int
fisttpll
xchg
stc
andl
mov
iret
mov
pop
mov
jns
jge
repnz
add
mov
cli
inc
scas
mov
mov
xchg
fwait
movsl
in
insl
scas
sub
and
push
div
ja
xor
mov
sbb
stos
cmp
xchg
rolb
ljmp
or
mov
sub
mov
fucomip
xchg
out
sbb
mov
movsb
xchg
ret
sub
loop
loop
xlat
or
rcl
sbb
sbb
pop
mov
cmp
mov
mov
dec
leave
xchg
ss
sub
xchg
xchg
mov
pop
inc
movsl
aad
mov
and
xchg
cmc
lods
mov
out
arpl
lcall
xor
cltd
adc
dec
jno
lahf
shrb
stos
test
jl
mov
push
fistpll
push
call
inc
notb
daa
pushf
cltd
repnz
fcoms
pop
mov
or
and
cmpsb
or
ret
xchg
bound
and
cmc
test
mov
sbb
xchg
jno
push
dec
xor
cmpb
test
add
adc
inc
push
push
out
ret
gs
stos
fdivl
repz
xchg
push
add
inc
inc
inc
imul
ljmp
pop
pop
arpl
test
lea
mov
and
jge
insb
dec
rcll
pushf
aad
icebp
ret
lcall
repz
pop
fwait
je
int
sahf
add
mov
cmp
mov
andb
imul
push
xor
xor
mov
rcl
inc
xlat
push
xchg
mov
inc
subl
add
add
lock
stos
jp
jecxz
dec
in
xchg
sbb
add
jnp
lret
flds
pop
jg
mov
lock
adc
imul
pusha
and
mov
mov
xor
inc
lar
pop
test
stc
jmp
mov
arpl
adc
lret
jmp
mov
pop
in
icebp
jp
cmp
loope
gs
xchg
rorl
jns
repnz
pop
fs
mov
mov
or
das
dec
cwtl
jae
out
mov
mov
mov
lods
mov
jnp
mov
sti
pop
ss
fisttps
mov
cpuid
jbe
cltd
stos
mov
sbb
mov
or
mov
scas
lahf
xchg
fs
rclb
mov
cmpsb
rep
inc
push
scas
mov
and
cltd
fisubl
daa
mov
mov
mov
jmp
cmp
xchg
jp
pushl
in
lods
int3
stos
push
lods
xchg
mov
out
xchg
into
sbb
add
push
inc
sbb
out
sbb
in
cmp
scas
mov
fidivrs
jno
repnz
hlt
pop
sub
push
and
pop
pop
pop
inc
xor
mov
into
out
adc
das
mov
jne
daa
shrb
inc
cli
add
xchg
mov
scas
lret
dec
clc
les
jg
leave
std
inc
in
mov
loope
mov
mov
mov
outsb
add
cmc
push
xchg
aaa
mov
pop
scas
out
inc
out
lock
push
pop
fisubrs
mov
mov
in
lock
call
out
lcall
shll
mov
adc
jns
sar
nop
movl
sub
popa
push
add
mov
cs
in
pop
xor
mov
push
pop
sarl
xchg
xchg
es
adc
adc
subl
testl
daa
aad
loop
pop
jb
out
arpl
fstl
nop
push
jle
test
push
jae
fs
cs
mov
popa
jo
cli
pop
inc
inc
or
sbb
jno
xlat
mov
mov
dec
and
jg
or
and
jmp
xor
push
rcr
mov
adc
movb
or
push
lret
pop
repnz
pmullw
stos
call
outsb
clc
inc
sti
fsubrp
push
pop
aam
scas
sbbb
hlt
mov
out
lahf
aad
roll
add
cmc
adc
add
jp
pusha
shll
mov
cmpsb
mov
sbb
xchg
repz
dec
inc
cmp
and
jge
dec
es
and
leave
aam
nop
sbb
xchg
lock
mov
sbb
xchg
lret
pop
sarl
jp
xor
mov
and
push
or
das
dec
enter
push
jbe
iret
in
inc
xor
fisttpll
incl
sbb
sub
sbb
mov
mov
jo
das
lret
pop
icebp
pop
iret
mov
pop
addl
ret
ret
icebp
and
outsb
ss
inc
lcall
int3
call
add
lahf
mov
aas
test
pop
stos
xchg
dec
mov
sbb
sbb
fstl
cmpsb
sbb
add
push
inc
mov
inc
imul
aad
jmp
in
inc
or
mov
sbb
sub
daa
test
push
mov
insb
leave
rorl
orl
jae,pt
push
mov
mov
fiadds
sbb
ljmp
dec
ffreep
mov
test
lahf
xlat
cwtl
lock
imul
clc
mov
fistl
mov
clc
aas
inc
pop
iret
lea
fbstp
arpl
xchg
cltd
xor
cmc
icebp
xchg
mov
cmp
mov
cld
dec
stc
je
xor
adc
mov
mov
test
addr16
cs
je
daa
xor
mov
test
popa
push
xor
and
sub
fwait
cmpsb
jp
cli
lock
imul
mov
sub
mov
inc
mov
cmp
mov
mov
jl
dec
aam
hlt
sbb
mov
sbb
inc
xchg
lds
inc
push
es
icebp
mov
cmp
mov
icebp
sbb
push
and
and
leave
or
mov
fisttpl
icebp
in
cmp
or
sub
pop
mov
xor
cmpsb
in
fsubl
push
add
lea
lahf
pop
sub
fisubs
cld
sub
test
pop
shlb
ja
jg
xchg
adc
fbstp
push
popf
fdivrp
pop
mov
mov
jnp
pop
jle
and
dec
xlat
dec
sub
add
fldenv
loop
rcrb
jb
mov
ret
test
sub
das
stos
ret
push
xor
push
and
loope
sbb
lea
mov
sbb
orb
sarb
lods
inc
inc
repz
in
lret
dec
mov
and
mov
outsl
adc
aam
sub
xchg
sub
cmp
gs
lods
mov
push
cmp
nop
imul
adc
fwait
into
mov
inc
das
dec
inc
rcl
jle
add
mov
aam
xchg
call
mov
loope
jb
test
mov
repz
lret
or
incb
jmp
out
mov
popf
dec
mov
out
getsec
push
and
lea
or
adc
cli
mov
xchg
cwtl
fs
out
jae
aas
sbb
adc
cmp
inc
jl
add
outsl
enter
popa
lahf
hlt
fidivrl
inc
or
int
or
jns
fdivs
int3
xor
cwtl
xchg
push
lods
cs
shlb
inc
fldenv
not
push
addr16
mov
ret
dec
mov
in
xchg
adc
add
out
cmp
mov
sar
loopne
or
sbb
cmpsl
push
cmp
mov
pusha
xchg
jg
push
add
push
adc
inc
mul
leave
arpl
rorl
inc
mov
jae
jmp
adc
jge
ret
sub
arpl
add
aam
stos
sub
pop
addr16
pop
ret
pop
out
movsl
pop
gs
adc
mov
mov
shlb
mov
mov
and
jg
dec
sub
or
mov
ficompl
dec
imulb
fadd
sahf
repz
mov
mov
int
decb
es
popa
push
add
mov
test
pop
fstps
fsubrl
sbb
cmp
call
add
repz
sahf
dec
pop
mov
pop
add
cmp
push
pop
pop
and
gs
sahf
xchg
std
xor
test
mov
pop
fcoml
and
xorb
cmp
sub
ja
cmc
enter
xor
in
mov
shll
pop
jp
jl
adc
js
fwait
pop
sub
adc
sub
xchg
or
push
test
push
mov
aaa
daa
enter
es
or
icebp
push
cld
push
mov
lcall
cmp
fsubs
or
loopne
cmp
dec
fidivl
add
outsb
ja
add
add
jnp
aam
aam
cmc
or
data16
pop
idivb
rcll
cs
stc
pop
jmp
lcall
adc
pop
pop
or
movsb
and
in
xchg
inc
call
sbb
dec
out
add
subl
cs
mov
lods
cmp
sub
mov
push
mov
cld
std
sbb
jno
adc
jo
pop
das
popf
inc
pop
arpl
fstl
pop
mov
les
sub
pop
hlt
or
movsl
hlt
mov
test
sub
mov
sub
inc
jnp
int3
push
mov
sbb
loope,pt
pop
add
aad
jge
push
jae
gs
mov
lock
movsb
imul
in
imul
mov
push
orb
daa
adc
icebp
lods
add
cli
inc
mov
jmp
in
ficoml
cwtl
fsubrl
mov
ja
inc
mov
nop
mov
in
add
sti
jo
call
mov
pop
mov
pop
arpl
stos
sbb
aas
aaa
imul
jnp
outsb
arpl
xlat
lret
xchg
leave
test
in
or
movsb
sub
inc
cltd
out
jmp
aaa
push
subl
mov
cltd
in
in
jge
dec
inc
in
cmp
jne
jne
mov
test
pop
mov
mov
adc
test
outsb
pop
xor
scas
push
fisubl
arpl
call
and
insl
pop
test
push
outsl
bound
sbb
cs
movsl
bswap
push
pop
inc
pop
test
out
out
sub
xchg
in
sub
pop
inc
pushf
insl
push
movsl
into
js
daa
xchg
je
testb
ficompl
mov
sub
fldl
dec
nop
sub
test
push
inc
pop
sub
vandnps
and
imul
dec
pop
sahf
out
xchg
js
dec
push
test
jns
add
mov
add
outsl
stc
fdivrl
repz
into
call
nopl
mov
mov
dec
and
mov
xchg
or
add
cltd
scas
popa
mov
hlt
cmc
pushf
lds
cmp
mov
movsb
jge
mov
loopne
jae
lea
mov
jle
mov
jmp
stc
add
mov
int3
add
popa
add
jle
int
push
sbb
push
mov
mov
jmp
ror
add
lret
into
out
adc
adc
jno
cmp
cmc
mov
cli
pop
clc
sub
aad
adc
pop
xor
xorl
addr16
mov
jmp
and
pop
loope
xchg
pop
cli
mov
pop
mov
sbb
mov
mov
lea
jge
cs
loop
dec
dec
sbb
cwtl
mov
test
add
in
cmp
nop
ds
loopne
lods
push
mov
xchg
or
sbb
test
stos
mov
and
push
jb
add
aad
adc
and
mov
xchg
cli
and
call
test
mov
mov
es
out
add
fxch
shr
es
test
cmp
fs
add
xchg
insl
insl
adc
movsl
adc
movsb
mov
jnp
ret
bt
mov
mov
cmpsb
xchg
lock
imul
mov
addr16
int
sub
xchg
xor
lret
cmp
xchg
and
and
dec
lods
mov
fnstenv
xor
rolb
shlb
mov
ret
insl
adc
cltd
je
out
xchg
scas
ret
test
lods
ret
pop
push
sbb
fistpll
out
jmp
xor
idivl
int3
cmpsb
cmpsb
add
pop
cmp
call
jbe
fmul
cltd
sbb
push
dec
cbtw
cltd
pop
popf
les
pop
lret
stos
jp
dec
ja
scas
call
out
sub
xor
nop
mov
and
mov
jg
jmp
mov
subl
es
xlat
in
mov
or
dec
xor
jb
sub
xor
mov
cmpsl
adc
test
mov
sbb
fidivl
cmp
and
fidivl
rolb
mov
enter
dec
mov
daa
pop
mov
aaa
pop
jb
es
icebp
aam
mov
mov
popa
jnp
es
mov
lods
roll
outsl
mov
pop
sbb
adc
test
enter
int
pop
sahf
in
mov
jns
sbb
rolb
int3
pop
and
in
inc
jp
stc
mov
inc
xor
insb
scas
xlat
push
bound
std
jp
mov
add
push
cmp
adcl
or
cmpsb
or
test
in
mov
lods
cmpsl
mov
cld
scas
jno
pop
nop
and
and
dec
cwtl
shl
cmp
mov
mov
stos
mov
jo
mov
arpl
inc
mov
sbb
adc
and
clc
pop
gs
movsb
cmc
dec
lcall
and
stos
xlat
aas
xchg
inc
or
lcall
dec
outsb
bnd
pop
push
mov
adc
mov
out
repnz
mov
cmpl
mov
add
pop
lods
movsb
icebp
and
decb
mov
inc
lds
xor
ror
shlb
out
out
adc
mov
ss
pop
xchg
addb
jnp,pt
and
and
pop
sbb
addr16
imul
daa
rorb
adc
jae
add
clc
sub
inc
add
daa
dec
addr16
mov
loop
btcl
cmpsb
int3
add
sarb
cmpsl
adc
inc
out
lods
mov
inc
jecxz
jne
jecxz
cmp
and
cmp
mov
sti
fnstenv
push
repz
popf
cmp
in
and
mov
orb
push
jae
mov
mov
in
test
stos
xor
xchg
pop
std
daa
add
aad
mov
lods
mov
dec
lods
lods
mov
add
mov
cmp
pop
ds
mov
pusha
lods
or
cmp
inc
jge
ret
or
clc
shrb
adc
rcll
sub
or
lods
mov
aas
pop
mov
ds
jl
lods
pop
sub
loope
mov
fistl
fimull
mov
sub
xor
xor
cli
std
sub
adc
push
pop
leave
mov
es
scas
ret
lea
pop
into
stc
sub
fildl
stos
aad
and
adcb
lds
das
and
jno
ja
push
fwait
cmp
icebp
out
or
test
pushf
xchg
sbb
aad
in
mul
cltd
and
mov
and
fstpl
adc
bound
addr16
sbb
push
lret
std
adc
push
cmp
clc
ds
jmp
mov
adc
aam
push
repz
mov
shll
adc
rolb
xor
mov
or
call
cmp
cld
xchg
xor
push
stos
repnz
mov
bound
dec
call
adc
rolb
dec
mov
jmp
add
clc
xchg
loopne
push
xchg
cmpsb
fstps
mov
cmp
enter
pop
and
add
insl
jae
rclb
sbb
cmp
rorb
and
std
sbb
cmp
jmp
xor
add
test
popa
mov
mov
call
cmc
icebp
mov
and
jb
lock
das
fwait
out
sub
add
xchg
aaa
or
scas
dec
sarb
rorb
or
lds
jno
lods
in
jns
push
cwtl
mov
stos
push
pop
push
das
push
fwait
push
lock
pop
sbb
mov
in
xor
jle
sbb
xchg
enter
lret
mov
or
jge
scas
jno
call
xor
out
lods
andl
sbb
ljmp
aaa
hlt
mov
jo
mov
fs
mov
pop
insl
xchg
xchg
out
int3
jp
inc
loop
dec
mov
lcall
xchg
xor
sahf
repnz
call
push
or
stos
movsb
jp
cmp
fcompl
test
mov
pop
mov
test
and
out
lret
aas
xchg
rclb
or
loopne
push
pop
push
jl
mov
imul
call
mov
lds
imul
sbb
test
push
mov
push
in
mov
sub
mov
xor
add
cmpsl
mov
and
sbbl
clc
clc
or
mov
sbbl
lcall
and
aad
add
xchg
je
push
adc
add
clc
clc
xchg
mov
clc
cmpsb
jae
jg
inc
ret
cs
out
out
xchg
ja
xchg
iret
xchg
dec
and
xchg
int3
cmp
mov
cmp
cmc
mov
ja
jp
test
pop
mov
rorl
push
rclb
loope
imul
fisubrl
or
out
xor
cmp
mulb
jecxz
jmp
mov
mov
leave
rcrb
imul
ret
jae
les
out
adc
mov
je
ljmp
mov
shlb
jbe
gs
cmp
repnz
xor
sub
lea
xchg
cmp
add
dec
jb
sub
pop
out
loope
add
cmc
leave
mov
sbb
orl
sbb
cld
dec
mov
mov
push
leave
je
aam
push
mov
jb
cwtl
push
push
test
loop
imul
insl
push
sub
adc
and
add
int
adc
test
sahf
jg
stos
lcall
arpl
mov
push
out
insb
pop
cmp
adc
inc
les
dec
gs
jns
lret
orl
xor
je
cmp
dec
pusha
aaa
sahf
and
xchg
cld
fcoms
lret
adc
add
popa
fwait
and
fcmovb
pop
test
sarl
xor
leave
enter
fnsave
out
outsb
xchg
out
xchg
iret
and
mov
lahf
rolb
cmpl
int3
scas
sbb
xor
cmpsb
or
sub
and
aaa
mull
and
pop
addr16
sub
mov
sar
daa
push
sub
inc
dec
ljmp
mov
xchg
sub
sbb
pop
rolb
aaa
insl
xor
outsl
mov
mov
mov
in
loopne
pop
push
repnz
xchg
pop
mov
leave
add
repz
pop
ret
inc
aad
inc
xchg
and
xor
cli
fidivrs
dec
aad
xchg
or
jbe
shll
addl
in
cmp
aad
dec
pop
nop
mov
sbb
pop
sub
fs
add
mov
pop
outsb
sbb
cmc
push
shl
icebp
sub
ja
dec
sbb
ret
mov
jp
in
dec
rclb
scas
jns
mov
xchg
test
pop
push
imul
test
mov
rol
mov
jo
fsts
pop
xor
and
addl
gs
mov
ja
cmpsb
stc
into
shlb
mov
adc
adc
shl
xchg
adc
cmc
popf
test
cmpsb
mov
addb
xlat
mov
cs
cmp
sbb
jbe
fstpt
mov
test
fwait
adc
push
add
sbbl
xchg
pop
ret
movsl
jb
jmp
inc
stos
divl
mov
xchg
mov
fsub
add
jg
xchg
push
pop
push
mov
lock
xor
aas
cs
in
in
lds
or
add
data16
jb
bound
jl
inc
loopne
fdivrp
and
enter
jecxz
lret
push
inc
adc
test
jo
das
fs
out
popa
lods
xor
xorb
int
imul
mov
push
out
or
cmp
fistl
int3
mov
mov
mov
lret
dec
enter
outsl
add
andl
and
enter
out
cmc
bound
gs
int3
xor
cltd
mov
data16
or
xchg
sbb
ds
addr16
or
loop
jle
cs
dec
lea
js
fnsave
aad
test
nop
addr16
dec
xor
nop
cmp
jno
mov
fs
xor
jge
lret
rcrl
shl
inc
mov
shrl
es
mov
xchg
cmc
das
mov
xchg
cwtl
arpl
xchg
shlb
xchg
pushf
sbb
pushf
ss
ret
sub
pop
jmp
in
cmp
sub
sbb
pop
push
jnp
movsl
add
scas
rcrl
imul
mov
sub
and
jge
jnp
fnstsw
aaa
or
or
loope
insl
sub
jno
daa
pop
imul
int
loop
adc
inc
loope
xor
fldt
and
mov
ds
lcall
jp
or
in
mov
lds
mov
mov
fwait
xchg
in
lahf
adc
or
movsb
xchg
xor
dec
roll
jb
xchg
add
inc
jl
and
inc
daa
lcall
enter
aam
or
pop
cmp
and
inc
imul
rorl
stos
ljmp
xorl
mov
loop
ds
int3
push
pop
xchg
jp
cmpsb
subb
das
inc
sbb
in
push
jno
lods
mov
pushf
repnz
into
pop
int3
scas
cmp
jns
add
xchg
fcompl
cmpsb
adc
jp
add
xorl
and
out
add
leave
mov
xor
inc
push
mov
push
push
push
cld
aad
push
mov
nop
push
or
pop
shl
fisubrs
test
lahf
pop
out
lods
xchg
pop
xchg
std
xor
jge
repz
and
imul
dec
les
xchg
sbb
lcall
jg
sbb
out
gs
cmp
hlt
sbb
inc
sbb
mov
mov
test
mov
jnp
sub
jg
in
jmp
and
test
mov
mov
negb
cmc
aam
jns,pt
adc
inc
inc
test
test
stos
push
test
sbb
gs
int
push
jg
lea
jne
rolb
fwait
pop
shlb
cld
and
in
xchg
sti
cmp
cli
leave
test
pop
push
dec
and
push
xor
dec
mov
mov
loopne
mov
sbbl
je
jo
inc
and
cmp
test
loope
call
pop
je
mov
xchg
fs
mov
xlat
popf
rcrl
mov
adc
push
cmpsl
in
inc
out
xchg
sbb
inc
mov
mov
push
sub
das
jl
cmp
mov
push
and
mull
outsb
mov
imul
shlb
jae
or
out
dec
xor
mov
cld
push
arpl
jbe
adc
fs
push
adcl
push
mov
jl
mov
add
sbb
mov
dec
fldcw
xor
adc
jl
fisubs
jae
call
xor
lcall
push
push
xor
cmc
pop
sub
push
adc
mov
sub
adc
push
pop
sub
inc
lea
xchg
jne
cmp
stos
lods
movl
cvtpi2ps
xlat
inc
inc
sbb
jle
repnz
jbe
lods
ret
mov
ljmp
xchg
movsl
fisttpll
pop
mov
cwtl
push
dec
scas
and
and
leave
cmp
les
popf
push
sbb
daa
icebp
roll
jne
arpl
jmp
shlb
jo
sub
or
mov
es
mov
shll
mov
and
mov
push
mov
push
icebp
mov
push
popa
pop
cmp
inc
mov
outsl
push
fdivrp
stos
jno
aam
add
cmpsb
pop
cld
sub
adc
jb
lahf
iret
xor
jnp
xor
mov
add
mov
cmp
mov
fnstcw
jo
cmp
sub
and
add
inc
sub
fdivr
jb
fsub
and
xor
sbb
gs
jno
push
lods
adc
or
mov
inc
and
push
aas
or
push
cmpsb
push
dec
idivl
xchg
stos
add
inc
lea
xchg
push
xchg
cmp
andb
sbb
mov
cmpsl
xlat
fisubrs
addr16
jg
dec
mov
xchg
shl
dec
jmp
xchg
sub
fbld
aam
in
scas
jl
mov
push
js
add
dec
hlt
mov
push
bound
loop
cmp
jb
shll
mov
js
ret
xchg
add
stos
out
or
frstor
in
negb
push
mov
popa
xor
mov
dec
mov
and
xchg
push
popf
push
or
cmpb
mov
mul
cwtl
pop
fwait
dec
xor
xor
rclb
xor
add
pop
cmpsl
clc
loopne
sub
cs
rorl
sbb
mov
mov
xchg
jnp
push
jmp
and
dec
mov
add
mov
add
in
orb
movsl
aad
lret
cmc
inc
mov
gs
add
lret
pop
inc
into
jg
jo
xchg
outsb
jb
mov
xchg
cs
jne
xchg
cmp
pop
or
movsb
cmp
fxam
stc
xchg
jns
ret
cltd
leave
mov
sbb
add
xchg
int
int3
mov
or
xchg
fildl
mov
add
sahf
testl
inc
out
stc
cmpsb
mov
push
loope
adc
jge
out
roll
jecxz
xchg
sbb
xor
imul
daa
cmp
jmp
imul
aaa
out
lods
pop
jmp
add
inc
jecxz
mov
inc
xchg
cmpsb
dec
arpl
cmp
imul
pop
or
lds
pop
imul
or
mov
pop
stos
rol
mov
and
addl
rcrb
aas
addw
test
sub
mov
shll
mov
sub
xor
mov
cmp
inc
pop
pushf
ljmp
in
cmpsl
mov
lret
andps
xchg
adc
adcb
add
adc
cmp
inc
ret
mov
mov
cmc
mov
int3
hlt
push
divl
ja
inc
out
hlt
call
cmp
pop
push
sbb
popa
cmp
inc
sub
dec
push
scas
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fsubl
into
fstpl
fstpl
bound
xor
cmp
or
scas
pop
jge
fists
out
scas
sub
push
pusha
xchg
add
lret
int3
fiadds
push
test
mov
mov
lds
test
pushf
xor
dec
sahf
test
and
pop
in
and
cmc
add
repnz
mov
mov
flds
xchg
shrl
cmpl
jg
jne
push
xorb
imul
xchg
jge
add
xchg
mov
push
xor
or
push
mov
sarb
xchg
jae
push
es
cmp
push
nop
pop
pop
fldl
xchg
xchg
cmp
pop
xor
stos
icebp
aam
test
mov
ss
push
jecxz
pop
insb
jmp
in
adc
add
sti
pop
dec
rorb
push
std
sbb
adc
lock
cwtl
xor
imul
out
jno
mov
movsb
daa
inc
or
in
dec
cmovae
add
push
mov
arpl
ds
add
pop
in
sub
sbb
jmp
sbb
xor
pop
push
cmpsb
fstpl
std
sub
test
stos
fimuls
icebp
inc
stos
call
fwait
out
insb
xor
clc
and
add
jae
xchg
jno
sub
clc
insb
movsl
mov
enter
aaa
call
test
add
sbb
ret
les
out
jo
loope
aad
xchg
into
sub
or
inc
xor
fnsave
jl
push
cmp
loop
vcvtdq2pd
pop
sub
dec
cltd
xchg
mov
fs
fidivs
scas
stc
lock
gs
aad
or
add
xchg
lcall
inc
mov
sub
xor
push
test
mov
js
test
jmp
inc
cmpsb
mov
aaa
push
out
fsubr
pop
mov
repz
in
add
xor
loop
clc
mov
int3
lret
jecxz
jb
out
outsl
jecxz
xor
xchg
out
lret
push
loope
sahf
lods
sar
adc
push
fsubrs
dec
sub
push
mov
out
int
jae
ja
sbb
loopne
movsl
xchg
loopne
test
or
mov
adc
outsb
and
xor
std
jl
out
flds
sbb
dec
popa
pop
sbb
ret
cs
ret
scas
lret
pop
out
fbld
push
adc
repnz
mov
ret
fs
mov
inc
fldenv
aad
popa
push
mov
jecxz
pop
xchg
fdivl
pop
fisttpl
pushf
sub
int
clc
les
shll
stos
loop
mov
stc
pop
jecxz
add
lret
popf
scas
jnp
lods
aas
or
popf
inc
xchg
jb
inc
fdivrs
mov
addr16
clc
push
or
inc
xchg
iret
or
loope
ret
cs
adc
mov
in
scas
or
xor
sbb
lods
push
fidivl
test
arpl
cmpl
jecxz
jg
enter
sbb
mov
jle
ds
add
lods
sub
fimuls
popf
dec
mov
outsl
int
dec
test
pop
jl
jmp
jecxz
in
xchg
incb
adc
jno
mov
xor
nop
cmpsb
imul
aaa
or
sub
jp
lods
shl
ss
shll
insb
ficoml
cltd
xchg
mov
adc
fldenv
inc
or
mov
xchg
jmp
sub
lods
sbb
in
pop
lret
shll
addb
mov
xchg
sbb
jo
sbb
aam
jnp
mov
bound
pushf
push
xchg
fildll
dec
or
pushf
cmp
outsl
add
push
sbb
lahf
dec
xchg
iret
iret
lret
pushf
movsl
add
lock
mov
inc
int
sti
fmull
arpl
hlt
bound
push
daa
dec
jle
divb
push
mov
dec
int
sar
cmp
jp
add
mov
mov
mov
xor
xor
adc
gs
cmp
adc
dec
xor
fistl
dec
mov
pop
sub
fwait
out
push
xor
push
xchg
mov
dec
xchg
cwtl
hlt
scas
call
ret
icebp
mov
xor
in
jg
in
lds
push
dec
jecxz
int3
xor
add
addb
push
pusha
ror
jne
lods
mov
aad
mov
cltd
xlat
loop
jb
shl
iret
mov
aaa
sub
and
jecxz
fsubrp
cmp
jns
pop
and
pop
pop
js
dec
sub
fmull
add
sbb
jl
call
call
dec
pop
inc
ss
inc
and
mov
push
ss
inc
mov
call
sbb
loop
pop
xor
pop
lods
jl
xchg
mov
sub
inc
jmp
enter
js
sub
sub
fs
bound
rcll
xchg
xchg
loope
imul
cmpb
or
cmp
cs
mov
add
pop
push
mov
mov
or
cmpsl
cmp
call
pop
subl
xchg
and
cmpb
sbb
in
xor
lea
in
in
dec
shlb
add
test
cmpsl
gs
pop
add
push
xchg
mov
imul
mov
test
mov
mov
nop
daa
push
movsl
ja
std
xchg
leave
and
cmpsb
fadd
iret
shll
mov
cmc
sbb
mov
fstl
cmpsl
outsl
cli
aaa
or
push
stos
fbld
movsb
lahf
sub
scas
shlb
mov
das
jl
mov
xor
push
dec
pop
fistpl
subb
sub
cwtl
std
mov
push
xchg
push
pushf
ss
add
stos
push
shl
mov
push
testb
insb
int3
fxch
pop
pushf
shrl
mov
adc
subb
jecxz
adc
in
out
sbb
loopne
dec
cld
cmp
iret
or
test
sub
scas
test
xchg
xor
not
es
sbb
out
add
or
jle
xchg
adc
mov
push
add
jne
jnp
mov
xchg
adc
pop
xor
mov
mov
jl
loop
sarl
lret
fisubs
mov
int3
mov
lahf
mov
push
pop
mov
ficomps
push
xchg
mov
add
and
and
out
push
push
adc
cmp
add
adc
dec
push
scas
mov
push
inc
add
or
ret
inc
mov
shll
incb
nop
cmp
xlat
cmp
jmp
push
hlt
add
clc
outsb
mov
lods
jno
push
lahf
cmp
xor
test
aam
sbb
lahf
push
out
or
stos
mov
or
xor
push
mov
mov
jl
das
cwtl
nop
dec
mov
xchg
es
stos
cmpsl
lea
cs
sbb
loopne
adc
adc
xchg
inc
iret
je
xlat
cmpsb
rcrb
out
pop
mov
push
sbb
int3
and
and
std
iret
push
sti
int3
imul
int3
sub
outsb
mov
hlt
xlat
inc
stos
xchg
xor
loop
repnz
stos
rcr
jns
scas
lock
and
and
out
push
mov
rcrl
mov
push
stos
mov
leave
outsl
sub
dec
les
movsb
aas
ret
cmp
divb
xor
adc
leave
lock
int3
jg
add
sarb
ljmp
inc
sbb
jno
dec
sub
in
movsl
sub
xchg
mov
shrl
incb
adc
inc
xchg
scas
aas
cmp
mov
js
cli
outsl
test
dec
sarl
ds
lcall
pop
add
sub
pop
cs
in
je
jo
xor
clc
testb
out
ret
jbe
shl
xor
adc
pop
stos
imul
data16
jo
xor
std
cmpsl
icebp
xchg
jg
dec
repnz
or
inc
push
cmp
cmpsl
test
std
mov
jg
or
outsb
add
scas
rcl
ljmp
and
ja
arpl
or
mov
jnp
jne
test
mov
repz
rclb
add
mov
dec
sbb
and
sbb
xchg
ret
sub
cmpl
aaa
dec
xor
sbb
dec
sub
cmp
pop
mov
push
scas
test
stos
popa
cmp
push
cli
sub
mov
lods
pinsrw
jb
mov
jb
mov
out
push
mov
fldl
sub
lcall
pop
lea
dec
xor
pusha
pop
push
in
pop
mov
add
aad
hlt
push
push
ds
sub
mulb
outsl
xchg
dec
xchg
leave
test
and
mov
jge
mov
add
jecxz
imul
push
inc
dec
out
sub
testl
ljmp
out
jae
aaa
clc
movsl
add
mov
daa
adc
cwtl
mov
dec
inc
loope
shrl
xor
sahf
ljmp
mov
cmpsb
aad
test
sbb
cmc
sbb
aad
test
je
and
je
xor
mov
in
push
adc
add
pop
add
mov
cmp
mov
fcmovb
cmp
stos
popf
add
cli
inc
adc
fwait
outsl
cld
dec
push
pushf
add
xchg
lods
xor
or
cmp
shlb
dec
mov
leave
and
pushf
sbbl
mov
lods
hlt
outsb
push
pushf
mov
adc
imul
push
icebp
cmp
mov
pop
mov
lea
lcall
int
xchg
outsl
pop
mov
call
cltd
mov
mov
push
daa
fsub
stos
loopne
jl
adcb
pop
into
icebp
inc
sti
psubw
pushl
movsl
xor
int
clc
push
xor
cs
mov
mov
cmpsl
dec
lahf
leave
sahf
jmp
mov
lcall
mov
sbb
repnz
sahf
call
adc
xor
dec
out
push
jb
sub
adc
mov
dec
xchg
dec
icebp
xchg
sbb
mov
jns
bswap
jmp
loop
push
test
addr16
add
xor
inc
jl
movb
cmp
fsubs
xchg
fsubs
iret
clc
mov
ret
movsb
fcmovne
push
enter
jge
mov
xchg
push
pushf
mov
int3
ficoms
adc
inc
lcall
cli
inc
sti
sbbl
dec
push
daa
mov
js
mov
pop
and
sbb
inc
pop
dec
mov
and
icebp
cmovnp
pop
add
ret
movsl
in
lret
cmpsl
insl
test
fxch
inc
jp
lds
test
insl
xchg
out
imul
xchg
push
cmpsb
dec
std
sbb
imul
enter
jnp
call
arpl
jns
adc
sti
lret
sbb
mov
hlt
mov
sub
pop
jns
sbb
stc
or
int3
adc
cmp
dec
dec
jno
pop
push
fsubl
sub
jmp
dec
xchg
mov
xor
lds
popa
pop
fldl
mov
dec
cmp
mov
data16
cmp
jnp
adc
insl
xor
pop
push
xor
adc
adc
push
push
pop
test
dec
pushf
je
jge
pop
jp
mov
jmp
movsb
dec
repnz
or
inc
lret
mov
sbb
adc
sub
cmp
sub
cmc
add
xchg
shll
inc
aaa
and
push
pop
cmp
das
jo
es
leave
mov
jbe
jns
pop
rol
clc
cmc
adc
lret
pop
pop
pop
xlat
add
fdivl
outsl
pusha
jge
xchg
xor
or
mov
insb
outsl
lcall
mov
or
rorb
fnstsw
sbb
das
xor
bound
mov
or
inc
lret
pop
inc
inc
adc
xchg
push
js
cli
cmc
fnstenv
xorl
cwtl
inc
mov
rorb
and
or
xor
popf
movsb
or
jns
jg
jb
xchg
fisttpll
scas
inc
jmp
and
mov
add
mov
mov
cmp
pop
leave
xchg
pop
xchg
pop
lds
stos
xchg
jg
out
in
cltd
hlt
andb
lahf
fbstp
cmpsl
xlat
and
mov
or
dec
dec
adcl
es
push
ret
adc
movsb
dec
mov
je
es
aam
cltd
mov
ds
lea
push
mov
rcrl
jae
sbb
stc
inc
pop
aaa
jmp
into
inc
pop
xor
dec
nop
cmovp
fadds
lds
insl
gs
sub
arpl
in
ret
mov
rcl
out
mov
mov
scas
jmp
or
jb
or
enter
test
insl
add
sub
mov
pushf
ret
loop
or
adc
push
lods
sbb
outsl
xchg
pop
mov
xchg
inc
sbbl
jnp
loop
pop
mov
mov
icebp
jb
mov
pop
jb
mov
dec
xchg
std
xchg
std
add
in
mov
adc
fcmovnu
cmp
les
xchg
push
jno
addr16
xchg
mov
test
popa
jmp
int
xor
lret
daa
xchg
loop
dec
inc
and
clc
mov
pop
and
roll
adc
loopne
aaa
push
fsubr
les
je
mov
jp
inc
inc
aam
inc
push
pusha
sbb
leave
test
pop
lock
cmpsl
mov
sub
or
xchg
je
pop
lret
adc
les
imul
shrl
pop
sbb
xor
lds
push
out
data16
adc
aaa
hlt
sti
xchg
jp
in
push
add
repnz
mov
dec
xor
iret
lods
andl
adc
adc
arpl
adc
ja
or
scas
add
pop
jecxz
lcall
and
sbb
ret
adc
cmp
sbb
inc
sub
cs
mov
xchg
cld
je
sub
and
enter
lods
iret
inc
scas
pop
ds
inc
dec
hlt
mov
les
xchg
arpl
jp
mov
daa
mov
mov
mov
adc
pop
mov
mov
mov
xchg
sbb
inc
insl
dec
int3
lods
out
xchg
jmp
or
test
pushf
lods
xorl
mov
aam
daa
lods
mov
xor
mov
ljmp
daa
test
push
dec
adc
insb
mov
pusha
jle
push
dec
imul
or
xchg
jg
cmp
movsl
lods
test
das
rcr
dec
lods
or
mov
sub
nop
inc
cs
aam
or
xor
lret
or
and
xor
adc
mov
cmp
cmp
xchg
subb
movsb
and
mov
or
mov
dec
sub
test
xchg
test
outsb
test
pop
pop
dec
arpl
sub
jmp
int3
insl
es
sbb
aaa
insb
inc
sbb
xlat
jmp
xchg
into
mov
ret
push
imul
stos
rolb
leave
ja
insl
insl
push
mov
repz
roll
adc
xor
movsb
andb
mov
aam
mov
ret
xor
pop
sbb
cmp
push
es
mov
fwait
sbbl
add
xchg
cmovge
dec
sub
jl
add
adc
and
arpl
or
cs
push
add
repz
jb
and
insl
stos
ret
loop
sbb
pop
pop
push
loope
push
sbb
xor
repz
lahf
and
cmp
into
add
pop
pop
xchg
into
cli
and
enter
inc
cmp
jmp
rcll
xchg
in
test
mov
lahf
enter
lods
push
scas
insl
inc
repz
mov
sub
and
sar
mov
lahf
rcrl
paddq
adc
xchg
cmpsb
add
pop
sbb
in
shufps
push
and
dec
fisttpl
pop
or
fdivr
je
xchg
inc
jle
movsb
sub
cmpsl
adc
sbb
je
push
stos
push
xor
movsl
push
sub
dec
xchg
xchg
sbb
inc
les
push
push
cli
pop
std
in
and
inc
in
pop
jge
dec
and
push
jns
dec
xchg
and
and
subb
sub
jo
popl
xor
jge
rorl
lcall
mov
ds
inc
pop
shlb
inc
test
out
or
or
int
sub
xchg
dec
mov
jo
jge
adc
adc
cld
jg
fsubr
inc
rcl
mov
push
andb
icebp
out
ret
dec
and
inc
adc
jecxz
push
idivb
dec
mov
fdivr
sbb
out
adcb
jp
das
aaa
pop
mov
or
push
jge
out
sahf
sub
or
rclb
adc
lods
mov
pop
nop
rolb
and
and
in
cmp
int
lret
test
sub
pop
jno
xor
jl
cmp
mov
in
aam
xchg
or
push
popf
mov
push
mov
inc
loope
pop
fsub
cltd
cmp
or
push
and
dec
push
andl
pop
mov
mov
pop
fwait
ja
roll
push
add
push
pushf
jns
cmp
fwait
ret
adc
fistpl
fs
clc
sub
jle
aaa
jle
pop
dec
and
pop
nop
rorb
insl
xor
mov
out
in
jno
lock
fwait
icebp
push
inc
gs
test
pop
out
in
aad
in
roll
jbe
inc
je
std
cld
jbe
mov
xchg
push
sub
test
cmpsl
imull
out
dec
cs
pop
cmpsb
out
bound
in
and
jnp
mov
mov
idivb
jbe
iret
addl
out
sub
in
jnp
iret
jbe
jmp
imul
sahf
xor
sub
sahf
ss
aad
repnz
mov
in
mov
aaa
jge
aam
repnz
lret
xchg
into
xchg
icebp
cmpsb
jl
subl
arpl
xor
test
xchg
test
ret
filds
xchg
xor
inc
gs
xchg
popa
mov
dec
in
mov
flds
loop
inc
mov
mov
xchg
jns
jg
sbb
dec
jg
push
jnp
add
or
lods
loopne
dec
shll
aad
gs
adc
sub
or
scas
push
lock
sbb
jl
cmpsl
push
outsl
mov
int
fmuls
daa
fmull
and
mov
shrb
mov
subl
mov
add
inc
ficompl
pop
sbb
loop
xchg
adc
mov
cmc
rcrl
add
xor
and
repz
mov
sub
in
sbb
inc
stc
add
jae
mov
lahf
xor
mov
mov
mov
sbb
aaa
scas
cmp
fwait
or
ret
xchg
hlt
aam
lods
pop
in
cmpsl
scas
and
roll
sbb
mov
pop
dec
dec
hlt
adc
rcrb
and
out
cmp
rol
rolb
std
mov
pop
add
repz
cmp
dec
push
seta
bound
push
jno
dec
mov
dec
test
dec
jb
mov
fistpll
cmp
mov
sub
lods
or
fldcw
jl
stos
idivb
mov
dec
ficomps
cmp
iret
out
test
inc
lahf
xchg
lea
cmpl
imul
adc
insl
adc
popf
xchg
push
fisubrs
xor
dec
cwtl
or
jg
or
mov
adc
cltd
cltd
jg
mov
lret
inc
cmc
inc
push
cld
pop
inc
mov
rcrl
gs
les
shrl
xchg
insl
mov
jmp
loope
mov
mov
lods
lret
int3
incl
pop
or
in
push
adc
xor
mov
xchg
fwait
xchg
push
jne
sbb
sub
movsl
fs
insb
ljmp
push
sbb
sbb
adc
in
stc
mov
or
cltd
cmp
sbb
jmp
movsb
mov
xor
xor
test
and
sbb
xor
out
adc
iret
inc
inc
fistl
out
aad
enter
enter
insl
or
adc
ja
jge
movb
movsb
faddl
sub
pop
into
adc
inc
pop
cmp
adc
ljmp
aad
push
mov
dec
sub
jo
enter
push
mov
push
fsubs
pop
lret
sbb
inc
push
xchg
jmp
lods
gs
out
or
fisubs
push
xor
outsl
xchg
mov
ja
push
imul
arpl
dec
insl
test
mov
adc
xor
sub
xor
hlt
pop
sbb
icebp
in
and
ss
and
in
mov
pop
stos
and
dec
out
xchg
xor
add
xchg
arpl
ja
mov
mov
popf
int
pop
pop
loope
inc
cmpsb
imul
rclb
cli
enter
cld
or
push
cmp
iret
cltd
jo
mov
shrb
pop
push
and
dec
fcompl
loopne
sbb
mov
xlat
loop
xor
pop
jle
mov
mov
mov
loope
fdivrs
jecxz
popa
pop
pop
pop
push
test
fwait
out
push
xchg
inc
cmp
fstpt
call
rcrl
lcall
data16
out
call
movsb
data16
call
mov
sti
ret
jb
sub
cmc
pop
xlat
int
pop
mov
xchg
shlb
adc
pop
jmp
insl
sti
and
cmp
sub
xchg
inc
sti
outsl
orb
pusha
push
enter
xchg
jne
jl
into
cmp
lahf
enter
jns
movsl
xor
mov
outsl
pusha
mov
scas
test
xor
loopne
inc
clc
push
insl
or
sbb
lret
sbb
iret
rcrb
sbb
fadds
adc
stos
repz
lea
in
xchg
fiadds
or
sub
test
ljmp
cwtl
adc
movl
mov
and
call
inc
ficomps
or
scas
scas
fsubs
mov
cld
movsb
xchg
jmp
movsl
jge
aas
mov
cld
xor
adc
jne
adc
jp
sub
addb
xchg
data16
push
das
xchg
pop
push
or
mov
and
push
pop
inc
hlt
call
inc
es
and
cwtd
xor
notl
outsl
leave
out
push
addr16
stos
dec
inc
mov
call
xor
sub
xchg
loopne
push
sbb
or
int
pop
xchg
lock
xchg
xor
inc
int
imul
in
sub
xor
in
aam
jae
sti
sti
fdivrl
sub
cmp
xchg
std
mov
inc
sub
sbb
std
pop
lcall
rorl
push
in
insl
jg
cmp
repz
fwait
iret
dec
divb
loop
in
and
sbb
dec
jno
sub
mov
jp
or
inc
adc
leave
ss
lahf
into
fildl
xchg
dec
clc
mov
fs
aad
and
in
jbe
add
fstpt
or
jne
add
adc
sub
aad
jbe
fstl
fwait
push
cld
jecxz
inc
mov
add
mov
adc
push
test
inc
sbb
cwtl
pop
movsb
or
dec
lods
mov
mov
testl
lahf
enter
push
outsl
lock
push
pop
inc
out
xor
mov
sub
daa
cmpsl
test
pop
scas
xchg
inc
sahf
loop
push
jp
test
pop
lret
testl
pop
mov
movzwl
out
or
fwait
bound
adc
popf
roll
lret
push
mov
add
shl
std
sbbb
xchg
mov
pop
adc
mov
dec
adc
dec
mov
mov
jle
push
push
lock
std
mov
mov
push
jb
int
lret
iret
pushl
nop
sub
pop
cld
stos
rorb
dec
jmp
mov
mov
mov
jg
testl
sbb
or
mov
arpl
and
lds
aaa
out
hlt
push
dec
pushf
mov
sbb
sbb
or
cmp
cmp
nop
pop
sub
inc
mov
lret
jge
stos
addr16
lds
fisubrl
and
idivb
aaa
adc
mov
cmp
mov
pop
lret
sbb
and
testb
ja
adc
es
test
addb
jo
mov
call
lock
add
mov
loopne
gs
cli
xchg
sbb
jg
inc
into
mov
roll
inc
clc
mov
stos
mov
out
cmp
popf
jae
arpl
jle
and
mov
cs
popf
addr16
xchg
dec
sbb
popa
loop
mov
lea
cld
movsb
jb
add
imul
test
mov
cmp
ss
pop
pushf
in
aaa
add
int
movsb
lcall
jb
add
mov
sub
andl
jbe
iret
xor
cwtl
sub
xchg
cmp
ja
lahf
inc
pop
push
loopne
or
inc
jnp
iret
jg
pop
sbb
aam
lods
jno
rcrl
adc
mov
rclb
aaa
in
in
shrb
insb
hlt
sahf
push
add
mov
mov
xor
sbb
out
ds
cmpsl
test
orb
fdivr
dec
pop
lahf
fadds
push
lcall
negb
fwait
es
int3
xchg
in
xchg
cwtl
cmpsb
xchg
sub
or
inc
outsl
loopne
jge
cwtl
xchg
imul
rclb
sahf
and
adc
mov
in
ja
or
aaa
daa
fdiv
sub
inc
jb
stos
mov
stos
test
test
je
stos
push
mov
add
scas
repz
out
rorb
hlt
into
loope
imul
xchg
or
xor
lret
fwait
sbb
adc
jle
add
sub
bound
aad
pop
bound
movsl
jae
pop
adc
lret
scas
rcr
int
mov
add
out
push
cmp
xor
adc
pushf
pop
mov
lret
je
pop
pop
rorl
in
adc
inc
cli
fstp
gs
mov
add
or
insl
int
das
ljmp
es
ja
daa
inc
add
push
cmp
lret
sbb
in
mov
sahf
shrb
push
fdivl
pop
fisttpl
stc
cmpsb
cmc
push
dec
jbe
mov
fcompl
pushf
das
inc
jne
dec
cmpsl
and
add
into
jne
mov
rcrb
mov
aaa
cmp
mov
andb
scas
cmpsb
push
adc
mov
xchg
lcall
rcrb
push
jge
xchg
adc
aaa
xor
loop
sarb
bound
adc
ljmp
cmp
cmc
jl
lahf
inc
or
int3
push
sbb
xchg
stos
lret
xor
pop
sbb
pushf
sub
dec
addr16
push
sub
jno
mov
mov
ret
jle
inc
das
mov
cmp
popf
aad
in
repnz
insl
icebp
loopne
adcl
stos
ljmp
push
insl
pop
in
jmp
xlat
cld
pop
or
call
adc
add
pop
ja
jmp
mov
pop
push
loope
pop
sbbl
sar
jne
mov
movsl
mov
inc
mov
js
cmpsl
mov
test
xchg
call
imul
mov
push
or
mov
lcall
ficompl
lret
mov
fbstp
xor
add
cmp
add
cmp
stos
sbbb
cmp
stc
pop
fistpll
fcomp
sbb
cmpsb
sti
shlb
dec
pop
in
repnz
jle
arpl
push
scas
loope
push
mov
outsb
push
sarl
test
xchg
jmp
in
dec
mov
mov
pop
lds
mov
push
icebp
xor
or
push
or
jno
arpl
mov
pop
push
outsb
push
mov
mov
mov
fistpl
mov
adc
sub
icebp
adcb
or
jmp
xor
repnz
shl
adc
aas
in
leave
pop
in
pop
lret
and
int
or
ret
push
jg
mov
sbb
sub
ret
in
mov
xchg
divb
aad
cmp
dec
loope
xchg
sub
mov
shll
mov
movsb
int
dec
push
sub
pop
hlt
adc
stos
outsl
dec
or
xor
mov
sbb
sbb
cmp
mov
ds
push
mov
sub
cmp
outsb
mov
fldt
mov
mov
jl
sub
sbb
cltd
push
sbb
repnz
out
dec
fldenv
mov
shrb
dec
dec
andb
sahf
jg
dec
push
in
icebp
notl
xchg
xchg
das
rclb
pop
lret
xchg
cmp
aaa
mov
mov
cld
sbb
inc
fabs
in
mov
xor
popa
clc
imul
jp
sbb
dec
lahf
xchg
or
addr16
repz
cli
call
pop
jmp
cmp
stos
mov
js
mov
pushf
adcb
inc
addr16
add
cli
aaa
mov
fisubrs
test
mov
mov
mov
push
iret
jle
jg
inc
sbb
push
inc
adc
jmp
push
xchg
outsb
adc
xchg
into
cltd
jle
notl
and
test
leave
pop
popa
push
imul
imul
xchg
sbb
jae
stos
sarb
clc
mov
ret
sub
or
inc
inc
and
jle
outsl
pop
add
mov
pop
jge
push
les
js
sbb
mov
mov
sbb
cmc
or
fistl
add
push
mov
mov
mov
popa
mov
mov
xchg
cmp
std
jge
jbe
adcl
push
jmp
jne
or
rcrl
out
aas
loop
or
mov
pop
pop
mov
int3
mov
lods
std
inc
push
mov
jecxz
or
sub
mov
xor
push
pop
ret
adc
and
pop
scas
movsl
movsl
fldl
js
jge
call
xor
fistps
push
inc
xchg
jbe
mov
pop
xor
adc
ret
fdecstp
fisttps
mov
pop
ja
jne
cmc
into
insb
and
test
out
push
lret
inc
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
out
cld
jno
cmp
adc
bound
cmp
sbb
popf
sbb
and
lock
mov
mov
cltd
dec
popa
cli
mov
jno
inc
ljmp
fwait
dec
scas
orl
stos
in
nop
mov
into
cltd
xchg
mov
or
shlb
pop
loopne
lds
or
ljmp
adc
fsubr
adc
sti
in
sahf
jae
scas
sub
jl
mov
outsb
loop
iret
mov
or
pop
cwtl
jae
das
adc
sbb
inc
add
je
add
jne
push
mov
cs
pop
cld
fwait
scas
out
mov
adc
movsb
arpl
daa
mov
pop
rcrb
outsl
lea
je
insl
fs
fbstp
enter
mov
idivb
pusha
push
jp
ja
cmp
mov
inc
into
sub
out
push
push
rcl
mov
outsb
xor
inc
leave
and
sbb
mov
aam
fidivrl
call
push
mulb
stc
mov
pushf
push
dec
push
test
test
pop
movsl
jl
mov
mov
push
or
mov
in
aam
repnz
push
sti
js
dec
pop
jle
mov
mov
dec
decb
js
mov
scas
addr16
lods
cli
push
fistpll
repnz
push
out
xor
jbe
insb
sub
faddl
stos
push
mov
jmp
or
int
sub
jmp
aaa
mov
aaa
lret
je
mov
aaa
jg
popf
jno
imul
test
or
notl
sbb
icebp
movsl
aad
out
int
jg
mov
sbb
lret
dec
jl
inc
pusha
nop
int
dec
sbb
cmp
lahf
cwtl
pop
in
popa
fisubl
aad
inc
adc
popf
lds
add
xchg
in
shrl
loopne
mov
jno
cwtl
push
jne
xchg
push
lods
mov
clc
jne
adc
push
inc
fstpl
jbe
xor
loop
sub
sbb
ljmp
sub
cmp
js
ror
xor
sub
and
sbb
fs
rclb
stc
in
stos
je
dec
ds
inc
or
les
and
in
cs
fs
iret
mov
pop
fistpl
ret
adc
pop
dec
mov
mov
xchg
dec
testb
mov
sub
lock
adc
outsl
xchg
jle
or
and
or
dec
cmp
cmp
in
repnz
nop
dec
jmp
ret
pop
stos
outsb
lret
xor
clc
cmp
ret
xor
and
jmp
loope
and
and
push
push
jle
out
mov
adc
adc
repnz
add
cmc
dec
pop
gs
loope
in
xchg
xor
inc
inc
dec
es
ja
adcb
lea
idivb
sahf
adc
les
dec
hlt
xor
and
cmp
pop
and
sbb
mov
cmp
imul
ficompl
arpl
arpl
fs
addr16
mov
inc
xor
cmp
daa
dec
int3
xchg
cmp
lods
les
jnp
daa
ret
lds
push
mov
pop
pop
sub
call
jge
addr16
dec
pop
sub
fsubl
jbe
cltd
cmp
call
loop
mov
pop
fstpl
jne
shll
cmp
in
hlt
outsl
push
stc
iret
jge
stos
or
add
jo
inc
movsl
push
inc
mov
jl
mov
or
pop
movsb
pop
clc
aad
add
popf
sub
dec
sbb
out
ss
cmp
ret
mov
cmp
cltd
cltd
add
lock
sahf
aam
in
adc
iret
inc
inc
jno
inc
xor
or
mov
jae
push
mov
cwtl
insl
cmp
inc
lods
scas
xor
es
movsl
dec
cmp
stos
xchg
repz
xor
xor
sub
cs
cmp
mov
push
mov
mov
fwait
into
out
mov
fistpl
push
push
ficompl
or
and
inc
dec
pop
pop
arpl
xchg
push
mov
jae
pop
push
lock
push
sub
inc
pop
sbb
dec
mov
pop
scas
cmpl
js
mov
insb
add
xor
dec
mov
sbb
push
ret
fisubs
fst
into
mov
clc
push
pop
call
js
testl
or
fxch
shll
or
mov
push
sub
jno
mov
cwtl
sub
or
dec
es
in
arpl
inc
repz
mov
push
inc
push
pop
movsl
fadds
mov
pop
xchg
dec
and
and
mov
in
rcl
inc
ret
stc
gs
xor
mulb
ja
out
mov
mov
and
dec
popa
dec
sub
mov
iret
and
and
fimuls
push
outsl
int3
dec
scas
and
movsl
mov
movb
cmpsb
add
sub
addr16
sar
cwtl
mov
popf
sbb
xchg
stos
sub
mov
add
dec
dec
arpl
inc
or
cmc
std
bound
add
nop
scas
xor
jge
test
inc
jae
ret
mov
pop
sub
add
repz
pop
sub
mov
movsl
inc
pop
inc
pop
sbbb
and
icebp
push
in
jmp
call
mov
inc
or
push
mov
pop
repnz
push
hlt
sbb
push
clc
es
orl
frstor
mov
sti
into
cmp
dec
sub
iret
xlat
iret
out
ja
inc
nop
fdivrs
xor
or
repnz
or
mov
xor
mov
enter
jns
pushf
jns
inc
insb
push
stc
add
popf
ja
inc
cmpsl
iret
dec
test
outsb
fadd
inc
dec
and
pusha
lahf
xor
div
shl
xor
dec
inc
jecxz
data16
add
popf
mov
jecxz
push
add
xchg
cmp
sbb
cs
adc
jge
and
mov
dec
imul
dec
adc
push
inc
xchg
fdiv
es
adc
inc
dec
mov
bound
pop
rcll
leave
sub
std
or
jne
in
mov
mov
icebp
and
jae
pmaddwd
push
lods
rorl
push
loopne
push
repnz
shlb
push
nop
pop
lret
or
ret
jne
push
jae
nop
loop
xchg
inc
sbb
call
pop
push
es
icebp
addr16
xchg
sahf
out
out
xor
cmp
cmc
sbbb
das
cs
jg
sub
imul
jno
inc
das
mov
aas
sub
jle
push
movzbl
sti
mov
out
sub
inc
mov
and
sbb
sbb
scas
jo
lcall
ret
push
int
lret
sub
cmp
mov
scas
adc
fidivrs
and
test
push
or
mov
cmp
mov
mov
mov
mov
xor
push
sub
add
dec
in
and
into
movsbl
in
xchg
mov
dec
inc
lahf
xchg
sarb
mov
sahf
xorl
or
pop
fucomp
std
test
dec
dec
pop
ljmp
dec
rcrb
enter
xchg
mov
clc
pop
gs
fld1
imul
xor
dec
jb
fwait
sbb
cmc
jmp
and
pop
mov
scas
lds
popf
xor
bound
addr16
shr
push
into
cmp
jns
inc
hlt
mov
jge
mov
inc
outsl
stos
sbb
out
je
xchg
lock
sbb
aas
pop
das
loop
popf
cmpl
insb
pop
insl
xchg
dec
sbb
inc
inc
and
pop
xchg
pop
push
jno
ja
jne
movsl
mov
sbb
sub
ljmp
xchg
out
repz
mov
ror
pusha
adc
ja
cltd
jle
out
imul
jno
ret
mov
jg
loope
pmuludq
into
mov
pushf
mov
mov
dec
or
movsb
pushf
scas
cmc
mov
stc
shl
xor
xchg
aaa
mov
push
mov
stc
test
push
into
pop
ss
jbe
fstps
pushf
adc
hlt
xlat
test
data16
mov
or
mov
cld
or
jle
mov
pop
shrb
cli
je
lcall
incl
sbb
mov
xchg
pop
in
pop
jbe
xchg
mov
cmp
les
mov
fcomip
mov
jmp
jecxz
sbb
and
xor
jge
add
adc
and
mov
sub
out
shlb
int
xlat
or
sbb
sbb
lret
sub
iret
cmpsl
int3
mov
out
or
dec
stc
xchg
leave
stos
sti
fdiv
int3
mov
jge
sub
test
int
push
insb
jb
fisubl
or
sbb
xlat
gs
xchg
pop
xchg
or
jp
cmp
repnz
or
ja
cmp
cmp
icebp
pop
mov
orl
mov
mov
stos
ja
adc
or
dec
sub
leave
xchg
out
jne
fdivrl
clc
push
stos
negl
xor
shlb
dec
gs
push
test
or
sub
lahf
ds
pop
fs
cmp
in
xor
test
mov
or
lret
aam
pop
in
pop
hlt
sbb
jmp
jge
mov
mov
loope
sub
out
or
and
push
shl
sub
sahf
cmpb
nop
jmp
test
push
rorl
clc
psrlw
jns
fiadds
mov
lret
mov
out
sub
cmp
pusha
and
xchg
call
aas
js
cmp
xor
negl
lock
jge
mov
lods
test
dec
ja
pop
pop
add
cli
jmp
stos
jmp
je
pop
xchg
xchg
orb
jno
call
cltd
xor
out
dec
dec
inc
into
shrb
adc
sbb
pop
jae
sub
push
sbb
jle
mov
cmp
jne
lea
test
mov
pop
out
daa
add
pop
das
jecxz
cs
jb
and
mov
mov
lods
js
mov
cld
add
mov
int
cli
pop
pop
ds
and
pop
xchg
mov
int
jl
icebp
dec
lret
ja
enter
lock
lret
sub
scas
hlt
xchg
loope
je
imul
inc
xchg
sarl
lret
les
rol
push
aas
cmpsl
sub
mov
or
sti
loop
cmp
pop
cli
inc
jg
hlt
flds
sbb
inc
push
xor
cmp
stc
js
into
xlat
cmp
mov
ljmp
dec
sbb
ret
push
icebp
cli
add
rolb
mov
loopne
cmc
mov
aas
es
mov
dec
or
xchg
cmp
dec
push
add
call
or
and
lret
cmp
mov
lret
shll
cmp
pop
incl
mov
xchg
add
push
add
push
lods
add
and
inc
xor
jo
push
bound
imul
sbbl
es
repnz
cli
jge
xchg
jno
mov
adc
lahf
in
imulb
pop
and
jne
dec
mov
ja
es
mov
popl
bound
mov
mov
lret
test
cmpsb
mov
jo
dec
mov
adc
jne
clc
mov
dec
enter
arpl
pop
icebp
sbb
cmovg
outsb
push
ss
fbstp
xorl
or
mov
fistpl
mov
lret
and
fs
fbstp
push
adc
add
xchg
cmp
xor
xchg
mov
cld
ficoms
mov
mov
fwait
xor
in
xor
adc
dec
fisubrl
jp
add
mov
addl
mov
xchg
xchg
loop
or
cmp
lods
mov
iret
sub
or
les
push
cmp
push
hlt
iret
stc
pop
fstps
mov
inc
jg
fdivr
call
push
sub
sub
inc
ja
cmpsl
add
adc
or
lods
pop
push
repz
filds
mov
punpckhdq
aaa
stos
fs
dec
xlat
mov
ja
out
jge
push
push
scas
push
sahf
jp
imul
ds
jle
std
sbb
mov
rcr
fs
mov
cmp
fldt
clc
dec
lock
inc
and
shrb
imul
push
or
sub
pop
jg
mov
rclb
push
push
lods
jl
lods
jg
testb
int3
int
cmpsb
lods
cmp
repnz
movsb
cs
and
adc
fistps
aas
jmp
jne
cltd
insl
scas
inc
jle
add
ja
mov
movsl
test
test
sbb
sbb
lods
outsl
loope
push
popl
push
jg
lahf
mov
std
loope
inc
add
mov
mov
sbb
push
pushf
sarb
je
jge
sub
sub
push
addr16
sub
loopne
aaa
fmuls
outsb
aaa
stos
mov
dec
loop
push
mov
fdivl
jne
cli
subl
mov
cmp
sahf
rorb
or
leave
fneni(8087
push
inc
scas
jns
xorl
xchg
xor
and
jbe
jne
notb
jns
xlat
xchg
mov
insb
int3
adc
lret
and
pop
ret
xchg
test
fldenv
jl
loop
add
cmpsl
or
std
ret
xchg
loopne
negl
xor
rcr
jb
fs
sub
pop
out
lcall
out
rcrl
mov
jmp
add
test
mov
into
adc
mov
add
cs
adc
ss
xor
xlat
orb
xor
fwait
decl
sahf
or
cld
jb
xchg
int
pop
out
mov
int
dec
testl
cmp
and
dec
add
mov
pushaw
mov
pop
cltd
jns
rolb
dec
dec
out
shlb
ds
notb
andb
int
enter
ljmp
aad
mov
fimuls
xor
push
imul
subb
cmp
je
or
fildl
cmpsl
dec
addr16
cltd
mov
adc
insb
push
rolb
lahf
pop
push
ror
push
movsl
xor
fnstcw
or
mov
dec
jp
push
js
pop
mov
mov
jmp
jecxz
jns
sbb
loop
ret
and
mov
dec
sbb
cli
fistl
faddl
cmpsb
xchg
inc
adc
int3
fcoml
je
mov
push
jbe
or
sbb
das
pop
in
sbb
pop
dec
xchg
iret
mov
int
push
mov
inc
ret
or
inc
jb
xor
sbb
jae
lods
in
adc
test
cmp
jns
inc
mov
into
out
pop
imul
movsl
cmc
clc
jmp
cwtl
add
dec
mov
mov
inc
adc
clc
std
cmp
scas
jle
or
push
call
sti
inc
xchg
or
ret
sbb
es
lock
lock
fs
pop
nop
sub
inc
ror
pop
and
fwait
sub
mov
cmp
cvttps2pi
ljmp
add
pop
repz
mov
jecxz
xchg
sub
dec
scas
mov
movsb
test
add
jo
cmpsl
push
icebp
js
stos
or
test
pop
imul
stos
jae
push
mov
pop
imul
mov
pop
pop
rcr
cmp
cmp
add
daa
xor
lods
shlb
andl
movsb
pushf
push
repnz
mov
mov
icebp
addr16
repz
outsl
fs
aam
shlb
in
jnp
add
mov
push
leave
ds
in
xor
addr16
sub
js
add
loope
in
outsb
mov
out
push
adc
pop
or
mov
pop
inc
cmp
cld
jno
add
es
adcb
fsub
mov
xchg
add
mulb
mov
sub
test
leave
enter
mov
outsb
insl
pop
sarl
mov
mov
lret
mov
ja
mov
loope
pop
mov
mov
mov
out
jg
lcall
adc
cld
dec
int3
mov
std
or
xchg
cld
and
mov
iret
orb
out
fimull
push
cmp
mov
pop
pop
jne
cmp
inc
mov
and
in
ljmp
iret
jae
stc
xor
jmp
mov
ss
enter
arpl
test
rcl
or
adc
daa
cmp
inc
out
mov
mov
ds
lahf
imul
or
fnstsw
jp
pop
clc
shrl
lcall
lds
mov
add
popf
push
add
mov
jne
stos
xor
push
xor
and
or
mov
xchg
rcll
sub
xchg
adc
popa
cmp
jnp
into
in
nop
aad
ret
sti
repz
mov
or
pushf
and
sahf
test
xchg
insl
fnsave
cwtl
jae
andb
cmp
jmp
pop
xor
cmpsb
repnz
mov
mov
je
cwtl
and
subl
cltd
adc
push
sbb
test
adc
fnsave
lret
leave
inc
shl
sbb
sub
sbb
cmp
stc
push
cli
or
aam
andl
add
out
out
and
nop
in
das
popf
jp
mov
call
fs
lods
into
cli
sub
jmp
pop
stos
imul
cli
push
sbbl
xor
popf
pusha
pop
loope
xchg
aad
pop
decl
mov
cmp
adc
push
and
lods
test
rolb
sbb
mov
fwait
push
ljmp
inc
sbb
gs
adc
xchg
add
and
xor
fisubrl
push
pusha
jae
xchg
cmpb
dec
insb
aaa
sub
inc
inc
inc
cli
cmp
cltd
xchg
pop
push
xchg
push
push
sbb
pop
sub
setge
test
aas
jnp
add
cmp
cli
pop
mov
xchg
jb
pop
sarb
add
add
jne
add
cmp
bound
mov
sub
pop
ds
dec
mov
scas
jno
pop
pusha
pop
jg
sub
rcll
push
mov
cmpsb
mov
mov
lock
or
push
mov
hlt
stos
jne
sbb
ret
outsl
dec
xchg
or
in
or
popf
inc
test
imulb
jecxz
iret
fadds
movsb
push
outsb
hlt
ss
ret
popf
push
bound
filds
inc
mov
adc
pushf
sbb
mov
bound
cmpsb
scas
les
ficoms
psrlq
clc
push
lock
adc
gs
cmp
sbb
cld
mov
and
xchg
ljmp
xchg
aaa
adc
sub
jp
xor
pop
mov
mov
cs
not
mov
cmp
mov
aaa
ror
sbb
sub
les
cmp
ljmp
jns
movsb
std
adc
xor
aas
xlat
jmp
mov
sub
mov
jne
mov
push
adc
push
lahf
mov
jmp
add
or
clc
mov
mov
push
test
jne
test
mov
jecxz
add
repz
inc
lods
lods
dec
cmp
cmc
inc
pop
push
pop
shll
fwait
jno
pushf
add
aas
cmp
cmp
and
int3
add
mov
test
enter
in
mov
mov
lcall
push
jmp
or
fidivs
into
test
add
xchg
sbb
fildl
idivl
out
dec
aaa
sub
fdivr
adc
mov
jmp
arpl
mov
dec
pop
mov
add
movsl
cmp
nop
pop
fucomip
je
outsl
push
jmp
and
call
jne
push
aaa
mov
cmp
push
sub
xchg
in
xchg
gs
das
inc
and
sub
sub
mov
in
sbb
std
dec
cmovnp
lock
and
dec
ss
push
sub
aam
xchg
repz
and
sbb
stc
aad
hlt
xor
sarl
inc
mov
iret
pop
push
ficoml
stc
or
mov
dec
cld
inc
mov
dec
scas
out
loope
cld
or
add
jne
dec
fcoms
test
ljmp
pop
out
cltd
fs
push
repz
out
mov
stc
jns
shrb
jp
pop
jno
loope
insb
xchg
adc
ds
fs
rorb
dec
mov
lock
dec
in
add
pop
push
cmp
and
pushf
sarl
out
shrl
jmp
xchg
iret
loopne
xorb
and
inc
jp
xor
lock
push
sbb
es
mov
adc
add
loopne
mov
repnz
mov
push
pushf
adc
fldl
and
fidivl
push
test
jnp
cmp
cld
xor
add
aad
jmp
mov
and
jns
inc
pop
enter
int
jae
dec
repnz
or
dec
mov
in
sbb
or
cmp
inc
outsb
rol
and
jne
dec
aad
or
clc
xchg
mov
push
pop
repz
mov
inc
pop
jns
pusha
xchg
xchg
shrb
sar
scas
aam
sbbl
in
outsl
or
in
sbb
outsb
in
mov
push
mov
cmp
lods
jne
pop
push
add
scas
sti
jmp
mov
mov
ja
aas
sub
pop
cmp
rolb
or
js
aad
xor
mov
xchg
adc
outsb
mov
pop
nop
sub
scas
sbb
pop
or
push
mov
das
jo
pop
in
jle
or
inc
imulb
xor
pop
and
jmp
jp
mov
sub
xchg
std
daa
add
sub
je
push
mov
jge
push
das
and
into
sbb
add
or
arpl
xor
or
in
js
mov
mov
pop
fidivrs
xor
out
and
mov
jmp
lods
adc
dec
add
add
xchg
fdiv
mov
inc
jle
xchg
jecxz
xlat
sub
mov
xchg
loopne
xor
scas
jmp
stc
test
movsb
mov
or
shrb
sbb
xchg
xchg
dec
gs
fsubr
into
mov
mov
cmp
out
cmp
xor
testb
fimuls
pop
jbe
dec
subb
addb
notl
filds
lods
fdivp
jl
loop
inc
popl
in
lret
rolb
cs
add
pop
in
sub
out
nop
lahf
cmp
add
jno
add
adc
ret
push
or
mov
mov
sbb
int
enter
test
push
gs
or
xchg
insl
xchg
rcrl
jnp
insb
jg
pop
mul
out
add
cwtl
stos
pushf
pop
mov
xchg
gs
jo
rol
dec
aas
sbbb
mov
movsb
push
mov
daa
dec
lahf
stos
lods
shrb
mov
sahf
xor
add
mov
and
aam
mov
sti
push
sahf
clc
dec
push
and
testl
xchg
inc
movsl
cmp
or
test
jp
xchg
xchg
mov
int3
in
es
ss
in
cltd
pop
iret
sbb
mov
sbb
jno
inc
pushf
add
aad
or
mov
mov
push
movsl
xchg
lock
out
mov
in
js
data16
add
adc
arpl
push
push
sub
adc
pop
popf
ss
shll
xacquire
into
mov
out
mov
jbe
mov
ljmp
mov
ret
mov
mov
fs
insl
test
fldcw
arpl
jp
dec
mov
or
ret
adc
fwait
in
mov
push
inc
aas
inc
pop
jmp
xchg
js
out
add
cltd
fists
not
ss
into
pop
and
repnz
xchg
dec
dec
cltd
xor
ja
jg
loop
and
mov
imull
mov
ret
mov
cs
push
scas
fwait
cmp
orb
mov
sub
mov
jnp
mov
push
push
pusha
jl
rcll
addb
add
and
aaa
sub
lret
and
sahf
in
cmpsl
icebp
inc
add
add
dec
push
in
lret
testl
mov
lds
cmp
mov
shr
xchg
pop
cld
xchg
jno
inc
cmp
pop
mov
test
lsl
ss
mov
mov
stos
icebp
jl
cmc
lea
das
lret
and
nop
ja
aad
lods
imul
test
bound
sbb
adc
cli
jl
dec
inc
push
jb
push
imul
jecxz
jbe
mov
mov
data16
js
pop
mov
or
mov
int
pop
mov
pop
pushf
stos
fisubl
sbb
ror
das
pop
add
jle
sti
mov
icebp
movsb
mov
cmc
push
mov
out
test
mov
les
loop
add
dec
shll
xor
dec
xchg
or
fisubrs
or
sbb
mov
int3
mov
inc
ds
sub
sub
enter
test
adc
push
dec
bound
test
adc
in
call
sahf
mov
stos
lahf
mov
xchg
mov
cli
int
inc
adc
push
push
pop
inc
fbld
dec
jne
sub
ds
jno
xor
sbb
cmpsl
mov
jno
jmp
aad
push
pop
scas
int3
add
xchg
cmp
sub
dec
test
leave
fidivs
andl
inc
notb
notb
xor
sub
pop
adc
enter
xchg
mul
adc
jae
sbb
fmuls
jecxz
lods
in
adc
xchg
jb
dec
test
mov
jle
fwait
stc
inc
add
popf
ljmp
add
out
inc
xlat
mov
or
xor
mov
mov
out
adc
inc
int3
push
jecxz
push
and
mov
loopne
jmp
pop
and
loop
dec
mov
lock
xor
int
xor
inc
push
and
sub
fidivrs
sbb
dec
js
mov
cs
push
into
test
loopne
inc
hlt
insb
adc
jb
jnp
jge
dec
in
inc
mov
movsl
sti
cmpsl
scas
or
dec
mov
lcall
adc
mov
pop
fwait
outsl
loopne
movsb
inc
or
sbbb
cmc
arpl
adc
jp
mov
dec
sbb
pop
mov
fsubrl
mov
sub
aam
push
cmp
cltd
xchg
mov
shlb
push
clc
adcb
sbb
adc
pushf
js
mov
ds
sbbb
in
inc
int3
mov
int
pop
mov
push
les
sbb
pop
out
and
sbb
outsb
leave
mov
lea
outsl
dec
mov
mov
in
inc
cmp
insb
jg
movsl
rol
rorl
pop
cmc
loope
mov
cltd
mov
mov
adc
ret
or
or
pop
fimuls
cmp
cs
xor
add
stos
out
mov
test
xrelease
mov
and
dec
jecxz
adc
adc
ljmp
xor
pushf
sub
mov
mov
add
mov
es
mov
call
cmp
stc
push
insb
add
sub
and
push
sbb
icebp
xor
cmp
or
push
push
rorb
push
mov
xor
mov
rol
inc
sbb
push
sub
dec
push
adc
aam
mov
inc
mov
jb
int
fldcw
dec
incb
and
pushf
and
jp
mov
mov
fidivl
roll
xchg
lahf
sti
cmp
nop
sbb
stc
scas
bnd
add
or
pushf
in
cmp
mov
xor
or
mov
addl
jbe
mov
fnstenv
inc
add
sbb
lods
sub
repz
icebp
xor
sbb
sbb
mov
je
jnp
fnstsw
shlb
aad
ds
xchg
dec
add
fldenv
mov
mov
pushf
pop
loopne
leave
xor
push
in
pusha
sahf
sub
decb
stos
inc
std
dec
sbb
loop
scas
push
push
cmp
test
sbb
adc
pop
dec
jp
es
test
push
inc
cmc
jl
mov
insb
xlat
lock
jbe
scas
aam
test
repnz
cli
jge
arpl
pop
negl
jecxz
mov
std
mov
test
in
dec
in
repnz
sub
loope
movl
add
xchg
ficoml
pushf
jnp
cld
mov
mov
mov
popa
dec
movl
outsl
and
fs
fildll
ss
and
lret
inc
dec
jns
cltd
divl
dec
xchg
xor
cmp
insl
xor
pusha
addr16
sbb
test
pop
mov
push
cld
mov
cli
lds
sub
mov
mov
cmp
jp
mov
dec
out
xchg
dec
pop
hlt
lods
jns
cwtl
rorb
aaa
out
and
popa
pushfw
insb
dec
xor
pop
jbe
test
sbb
mov
mov
clc
int3
test
iret
adc
and
or
icebp
or
insb
insl
cmc
jae
or
xchg
popa
xchg
pop
adc
cmp
and
pop
push
pop
lcall
inc
int3
adc
pop
xor
int
mov
test
mov
ljmp
outsb
sbb
mov
sbb
fmul
jnp
sub
mul
filds
jbe
sbb
jns
cmp
cmp
lock
pop
pop
adc
stos
aam
mov
aaa
test
pop
lahf
mov
out
out
nop
pusha
xor
mov
sbb
enter
push
mov
push
cmp
adc
add
add
sub
pop
aaa
fdivrs
jno
test
int3
cs
mov
adc
outsb
jle
loop
cmpsb
int3
xor
push
jg
cmp
fidivrs
insl
fs
dec
test
out
mov
pop
add
lods
xor
add
lds
int
rcr
xor
out
inc
push
mov
pop
dec
std
shll
jmp
mov
dec
cmp
xchg
fisubrs
andl
xchg
cmp
cmpsl
insb
push
filds
sub
sarb
mov
xchg
in
mov
mov
stos
lret
push
je
in
test
inc
xor
shrb
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
cmove
arpl
cmpb
xchg
rorb
dec
movsb
sub
mov
addr16
stos
inc
adc
lcall
movsb
jb
dec
jo
inc
scas
xorb
push
test
test
add
push
enter
movsl
push
xchg
mov
ja
pop
lcall
jl
mov
out
sub
xchg
push
jae
jns
lods
hlt
dec
inc
adc
in
stos
lret
mov
mov
jbe
jnp
aam
dec
xorl
sahf
sbb
sbb
mov
imul
or
imul
lock
adc
aam
add
shl
aaa
xchg
cwtl
shll
mov
sub
mov
rorl
push
mov
add
mulb
test
dec
shl
int3
sub
pop
sbb
xlat
xchg
aaa
je
xchg
pop
and
lret
mov
pop
and
jmp
jbe
cltd
sbb
iret
fnstsw
ret
loope
out
add
stos
int3
subl
adc
and
fwait
dec
loopne
je
push
imul
icebp
cmc
jmp
aad
leave
or
xor
lods
rclb
stc
xor
jl
pop
mov
lahf
mov
shll
xor
push
push
enter
mov
popf
sub
mov
cmp
mov
sub
cmp
lret
mov
pushl
jne
mov
mov
xchg
test
mov
jb
cld
insb
and
and
push
cmp
dec
inc
hlt
mov
scas
push
xor
and
and
xchg
jo
xor
jbe
lock
xor
adc
add
sbb
push
mov
mov
mov
push
scas
lods
mov
std
out
stc
orb
dec
std
in
jle
dec
mov
icebp
clc
push
cmpsl
ds
sub
xor
movsl
sbb
leave
out
mov
mov
xchg
fnstcw
mov
hlt
push
xchg
int
push
test
out
mov
popf
xchg
adcl
push
hlt
fdivrl
push
ljmp
fdivrs
push
mov
jno
xchg
gs
clc
pushf
enter
push
adc
xor
cmc
icebp
jle
push
mov
insb
jecxz
ljmp
or
and
jl
mov
aaa
arpl
shrl
icebp
ds
lahf
mov
insl
or
jp
cmc
sbb
mov
addr16
mov
je
rcrb
jno
mov
adc
dec
repz
sub
bound
fadds
addr16
dec
pop
shlb
scas
jne
lds
test
xchg
jae
sbb
call
mov
ljmp
xor
scas
adc
jne
cmpsb
stos
sub
inc
jge
out
or
pop
loop
mov
repnz
test
inc
cld
lock
test
cmp
xor
and
or
movsl
cmp
bound
mov
push
sbb
sub
jle
jecxz
shlb
mov
into
inc
subl
shlb
dec
sub
dec
cmpsb
scas
testl
dec
mov
dec
pop
clc
xchg
jp
pop
bound
repnz
mov
repnz
jb
and
pusha
das
mov
jge
or
dec
ss
push
aad
add
fdiv
inc
jge
mov
fnstcw
orb
pop
fsubrl
push
pop
and
xchg
mov
mov
dec
add
in
out
cmp
inc
jno
cmp
insb
inc
fistl
cltd
jbe
inc
nop
cmp
scas
mov
out
mov
sahf
rcrl
bound
dec
fwait
popf
arpl
push
adc
lret
mov
sahf
pop
jbe
notb
adc
mov
mov
xchg
mov
imul
pop
cli
in
mov
les
adc
fisttpl
xchg
gs
and
pop
data16
ss
test
stc
popa
aaa
sbb
stos
cmpsl
sub
fs
icebp
std
mov
ds
cmc
fimull
xchg
cmp
pop
stos
aaa
loopne
insb
lods
pop
push
and
arpl
sub
jecxz
pop
xchg
dec
iret
sub
or
int
test
mov
test
movsb
push
mov
jns
add
fdivs
arpl
inc
mov
popf
lcall
mov
dec
mov
divb
int3
and
int3
jno
add
in
push
sub
jno
inc
popa
sub
add
mov
jno
idivl
jbe
insl
popl
mov
outsl
add
in
xchg
insw
ret
pop
bound
inc
mov
arpl
dec
cmpsb
pop
aas
lods
fiaddl
fildll
push
int
sti
mov
mov
jb
lret
inc
mov
and
es
in
dec
dec
in
sub
pushf
xchg
sbb
pop
mov
rcrb
pop
cmp
jne
mov
or
sub
adc
mov
xor
aam
push
jmp
push
mov
dec
rolb
sbb
lock
nop
test
jns
fisubl
movsl
ficompl
lea
sub
and
popa
outsb
mov
fisubl
or
and
push
sti
adc
sbb
xor
mov
add
mov
sbb
insl
add
push
pop
and
inc
sub
mov
movsb
ror
push
or
mov
and
inc
mov
movsl
cs
mov
cwtl
rcll
insl
add
add
adc
pop
in
sub
clc
scas
jo
ljmp
cmova
xor
jecxz
or
cmp
push
insl
in
cmp
out
push
sti
sub
bound
das
notb
push
push
int
aaa
inc
fisubs
test
push
loope
scas
sahf
sar
cli
mul
out
or
cli
push
stos
es
add
jnp
adc
xlat
or
mov
push
std
and
or
stos
aaa
loop
jl
repnz
andb
sbb
ss
sbb
clc
sbb
push
lea
add
push
inc
test
rcll
cltd
jne
push
jg
cmc
js
mov
push
in
pop
mov
lret
enter
gs
fimull
sbb
xchg
push
sub
add
shrb
inc
dec
enter
and
iret
std
or
cmp
stc
xchg
jp
mov
xor
xor
inc
mov
push
movsl
add
imul
lds
mov
mov
or
pop
dec
pop
dec
daa
pop
loopne
push
sub
outsl
jge
sub
cmp
jb
mov
pop
jbe
and
sbb
cwtl
cs
cmp
jnp
pop
inc
dec
test
inc
push
lret
mov
stos
sbb
int
pop
mov
jno
jmp
or
adc
dec
hlt
mov
mov
cmp
cwtl
push
pop
xchg
mov
mov
pop
outsl
out
mov
xchg
push
aaa
je
push
add
xchg
sbb
mov
enter
out
mov
leave
push
mov
push
sub
jno
mov
sahf
push
fwait
call
test
loopne
movsb
les
mov
mov
mov
xchg
xlat
mov
popa
test
jmp
jo
cmp
mov
cld
fwait
add
sti
dec
dec
xchg
or
aaa
cmc
in
push
pop
xor
pop
sbb
add
leave
or
icebp
out
loopne
imul
and
pop
adc
sbb
out
xchg
test
mov
mov
aam
popw
loope
and
test
and
xor
popf
add
fcoml
jno
pop
xchg
lds
adc
and
push
lods
xchg
test
imul
fildl
fs
pop
push
stos
xor
xor
sub
outsb
mov
push
orl
aam
fs
enter
sub
pop
fisubl
sub
data16
movsl
clc
add
lret
adcb
adc
sti
inc
xor
lods
orl
pop
dec
sti
dec
int3
cli
sub
in
xchg
icebp
jb
insb
leave
fmul
xchg
cmpsb
mov
sbb
push
mov
fistpll
inc
mov
mov
packsswb
push
lods
push
mov
fadd
pusha
xor
fs
mov
inc
cld
aad
sarb
jo
adc
add
cld
ror
ljmp
in
sarb
mov
adcl
cmp
mov
add
je
dec
ficoms
adc
or
pop
inc
sbb
pop
dec
gs
stc
and
mov
leave
fcoms
aas
lahf
inc
outsb
push
xor
ficoml
stc
jne
pop
ret
dec
pusha
xor
aad
cld
mov
mov
enter
fs
mov
loop
imulb
rorl
pop
in
inc
sub
cmp
cmpsl
and
jge
sub
sbb
inc
fisubrl
icebp
in
pop
jb
xor
xlat
push
and
setns
pop
jns
movsl
cwtl
cmpl
jne
sub
cld
push
xor
pop
and
xor
test
lds
popl
or
and
mov
jg
cli
pcmpeqw
dec
movsb
mov
scas
xchg
jmp
jl
imul
scas
xchg
xor
out
andl
xchg
or
repnz
dec
loope
push
loope
sub
pop
scas
mov
adc
lods
jmp
mov
data16
mov
cmc
pop
out
push
out
jnp
xchg
ret
les
stos
mov
mov
sbb
loope
frstor
lea
adc
aas
scas
mov
cli
xchg
or
rolb
jns
xchg
lds
je
jge
cs
shlb
scas
mov
cmp
inc
and
mov
xor
add
sub
sbb
loopnew
std
pushl
sub
sbb
es
xor
mov
adc
xlat
pop
adc
xor
call
jl
clc
call
mov
adc
xchg
mov
add
pop
pop
rorb
mov
and
dec
imul
xchg
dec
rolb
je
mov
mov
scas
push
pushl
dec
sbb
xchg
call
cmp
mov
loope
test
iret
call
jb
and
imul
cwtl
lds
jmp
inc
mov
mov
fisttpl
fisttpll
mov
cmp
cmp
mov
jg
xchg
and
out
bound
mov
cltd
mov
push
daa
cmc
dec
test
xchg
ljmp
adc
movsl
scas
loop
xchg
xchg
xchg
dec
xchg
mov
jb
xorl
and
push
push
inc
dec
push
pushf
and
mov
jg
inc
pop
xchg
clc
sub
out
movsl
and
adc
ja
adc
sbb
clc
int
mov
sbb
test
pushf
push
cmpsb
xchg
add
mov
rclb
xor
mov
push
jo
out
mov
ror
and
aas
mov
sbb
cld
sub
and
or
pop
xchg
mov
and
repz
scas
jmp
and
idivb
outsb
test
pop
js
xlat
pop
add
stc
or
inc
outsb
push
mov
and
shlb
incl
int
cmpsb
lahf
mov
clc
dec
mov
mov
sub
lods
mov
pop
xchg
push
mov
cmp
sarb
sub
sub
dec
jmp
out
inc
cltd
jo
mov
int3
mov
dec
popf
pop
movsl
jmp
mov
repnz
jne
mov
cmp
pop
or
dec
fwait
mov
test
or
test
fucomip
jl
pop
mov
push
inc
add
sub
fistpll
mov
aam
sub
iret
add
mov
dec
xchg
lret
adc
pop
jecxz
rolb
xchg
cld
add
inc
pop
stos
dec
cmp
lods
inc
mov
dec
pop
mov
jne
movsb
test
clc
loope
aad
mov
arpl
fld
add
mov
testl
popa
arpl
cmp
jne
lods
or
daa
ret
jmp
ss
mov
pop
push
pop
xor
jmp
dec
call
xchg
xchg
xor
in
imul
mov
and
aas
dec
int3
movsb
jl
fwait
jnp
int3
pop
jae
add
pop
push
test
pushf
adc
push
mov
call
pop
test
iret
pop
stos
jae
in
ds
test
adcb
mov
xchg
pop
insl
fldenv
adc
lock
xchg
les
mov
lcall
push
xor
pushf
stc
bound
xor
movsl
iret
repz
mov
lcall
lcall
push
xor
sbb
sbb
jp
fdivs
mull
in
shll
std
inc
pop
inc
lods
out
xchg
mov
popf
or
ss
cltd
shrl
xchg
ss
pop
jmp
adc
xlat
clc
push
mov
in
fcomps
xchg
mov
fisubrl
push
fucom
cmpsl
pop
add
mov
adc
mov
lea
movl
push
sbb
pop
das
repnz
pop
js
lea
les
inc
mov
xchg
jae
popf
pmaxub
add
sarb
fistl
sbb
jno
mov
sbb
mov
dec
test
dec
ss
or
mov
lods
outsb
dec
add
cmp
das
or
outsl
fs
pop
movsl
jb
repz
mov
cmp
out
nop
sahf
sub
pop
xor
lock
sbb
fildll
xor
xlat
cmp
rclb
loope
stos
dec
sbb
shrl
cmp
aam
sub
subb
mov
cmp
cld
push
and
add
inc
push
ret
push
dec
or
mov
and
cmpsl
pop
fsubs
dec
pop
das
sbb
popf
xchg
inc
arpl
sbb
or
mov
mov
mov
lds
push
mov
dec
mov
out
cmp
mov
cmpsl
pop
or
sar
pop
adc
sarl
imul
mov
pop
push
adcl
push
decl
notb
fs
roll
movsl
hlt
mov
cmpb
xchg
std
push
dec
stc
sbb
aaa
out
pop
es
std
xchg
push
mov
out
sub
insl
mov
cltd
adc
mov
or
mov
cltd
popa
pusha
and
adc
add
or
out
and
dec
adc
cwtl
xchg
sti
inc
mov
repnz
out
mov
sbb
roll
inc
div
lcall
push
aad
mov
sub
jbe
in
jg
and
loope
cmp
cmp
lret
clc
jp
repz
fincstp
jle
ret
hlt
cmp
arpl
mov
adc
jbe
lcall
xor
leave
in
pop
fbld
and
sbb
mov
push
test
mov
add
das
arpl
inc
sti
pop
jo
cmpsb
sbb
pop
mov
push
xchg
loopne
inc
int
ss
or
sahf
pop
shlb
fidivrs
and
ljmp
lcall
iret
rcl
and
lahf
adc
push
xchg
fistpll
push
mov
inc
or
imul
loop
loope
push
shlb
out
call
push
adc
jne
ja
push
cmpsb
incb
hlt
fidivs
sbb
lds
inc
xchg
cmp
test
data16
add
popa
mov
jbe
adc
testl
adc
cmp
mov
jp
stos
cmp
mov
in
mov
xor
jnp
pop
and
xor
xchg
cmpsl
pop
stos
sbb
lods
push
sub
cli
cs
out
adc
and
enter
mov
mov
lods
mov
insb
jp
adc
testb
xchg
xchg
xchg
pusha
cld
stc
push
scas
adc
push
test
jns
sbb
testl
jns
add
mov
cvtps2pd
xchg
fucom
sarb
sub
cmp
jp
orb
jecxz
adcb
pushf
es
lret
pop
jmp
rcrl
leave
hlt
dec
mov
shl
push
inc
lret
sahf
popf
sub
in
xchg
leave
sarb
or
repz
fcomps
stos
xor
cmp
sarl
or
dec
mov
jle
sbb
dec
lods
xor
loope
add
sbb
push
mov
repz
and
dec
pusha
cltd
imul
adc
mov
push
jne
and
jle
aas
xor
out
adc
fistpll
jns
icebp
std
jle
push
mov
pop
push
gs
push
inc
js
movsl
out
adc
push
lock
sub
dec
fwait
sub
sub
cmp
andl
sahf
sahf
cmp
lods
fcmovu
and
lock
js
mov
push
shr
mov
mov
int3
pop
xchg
in
cmp
lock
ja
mov
mov
jp
mov
aaa
stos
jnp
clc
lods
pop
movsb
clc
cmp
mov
aas
pop
add
insl
leave
loop
sbb
clc
ljmp
pusha
repnz
lods
pop
in
imul
adc
dec
adcb
adc
ret
mov
adc
divl
icebp
movsl
cmp
jmp
xchg
adcb
clc
jmp
jnp
std
fdivl
jl
inc
mov
mov
subl
es
loop
push
pop
fninit
and
in
in
inc
mov
push
clc
test
pop
sub
je
insb
test
add
cmp
xchg
mov
mov
xlat
call
jecxz
jp
incb
scas
jg
inc
insl
dec
xor
xor
pop
and
pushf
mov
ss
clc
fsubl
sub
in
mov
cmp
dec
add
mov
fstpt
or
fbld
xor
mov
test
cli
push
leave
inc
xchg
clc
mov
lahf
cmp
inc
jg
imul
sbb
inc
push
cmp
mov
daa
shlb
push
xchg
push
xchg
xchg
in
testl
mov
nop
dec
insb
jg
shlb
adc
lds
aaa
and
push
imul
cli
and
mov
sbb
dec
in
fadds
movsb
add
sub
rcll
in
push
stos
lds
shlb
mov
mov
movsb
nop
mov
insb
andl
aad
mov
aam
outsl
xchg
lcall
ror
addl
shufps
loop
repz
stc
jg
ret
dec
loope
lods
in
mov
or
leave
jno
xchg
incb
shll
push
shrl
push
out
loop
mov
loop
ljmp
inc
mov
mov
dec
mov
ret
adc
dec
arpl
push
aas
fwait
ss
dec
sbb
adc
fucom
mov
jmp
jbe
test
adc
nop
enter
or
push
push
pop
pop
stos
icebp
mov
or
mov
sub
mov
jae
pop
mov
or
jns
mov
out
mov
in
jns
es
daa
imul
add
cwtl
sub
int3
outsl
scas
filds
cmp
dec
sub
test
pusha
fisubrl
rcrl
movsb
sub
pop
stos
fwait
inc
std
dec
adc
mov
jle
fdiv
jge
orl
sti
pop
es
testl
push
xchg
inc
add
add
lret
and
insb
out
ds
add
sub
sub
mov
fwait
mov
or
add
sbb
xchg
cmp
mov
and
adc
sti
scas
add
adc
jecxz
pop
lds
mov
push
mov
xchg
lret
mov
and
lods
pop
dec
inc
mov
and
js
nop
pop
xchg
movsl
mov
fwait
les
jl
sbb
dec
dec
add
cmp
mov
icebp
dec
sub
push
pop
inc
mov
add
jb
mov
ljmp
lahf
add
pop
nop
paddb
lods
pop
frstor
fdivs
popf
sbb
add
mov
sub
cmc
repnz
pop
lahf
jle
dec
ds
adc
mov
test
mov
fistpl
jb
push
jp
sti
fldcw
bound
sbb
movsl
in
mov
insl
push
cmp
shrl
inc
sub
popf
adc
divl
pusha
xlat
inc
fistpll
ret
ss
push
sbb
ljmp
sbb
xchg
int
jnp
xchg
addr16
fwait
pop
lock
pop
rcrl
cwtl
out
test
add
push
fnstenv
int3
vmovq
xchg
push
mov
pop
lret
dec
cmc
push
ljmp
mov
sub
or
test
or
push
and
out
push
bnd
stc
sbb
jle
jle
fwait
xor
dec
aad
nop
sbbb
dec
repz
jmp
mov
mov
cltd
addb
out
in
push
push
pop
insb
cmp
sbb
flds
test
pop
xor
test
and
cli
cmc
and
lcall
stos
adc
cmp
mov
or
add
or
cmp
notb
jl
mov
mov
dec
minps
xor
in
scas
lret
add
push
pop
add
pop
inc
add
sub
fwait
xor
mov
stos
adc
inc
fldt
sarb
cmp
or
mov
pop
push
mov
push
in
enter
cmp
sbbl
xor
xchg
aad
jmp
xor
sbb
push
sub
cwtl
sub
jmp
inc
test
mov
xchg
jle
arpl
nop
pushf
jl
cs
mov
sbb
sbb
cmp
adc
dec
cmc
ficomps
mov
pop
sahf
pop
jg
repz
and
out
nop
mov
or
es
lods
jno
mov
push
mov
imul
sub
dec
scas
inc
jo
aaa
in
inc
sahf
ret
jl
mov
dec
adc
pop
and
out
loop
outsb
mov
add
adc
fstps
test
scas
xor
push
and
inc
push
push
roll
in
mov
adc
mov
movsl
sbb
cs
xchg
push
pusha
mov
cmp
nop
outsl
xchg
and
xchg
int3
jg
inc
sub
add
mov
sbb
pop
push
bound
pop
je
in
fistl
scas
xor
cltd
or
inc
call
push
stc
pop
or
add
push
adc
pushl
xchg
sub
mov
enter
jnp
insb
dec
call
arpl
loopne
push
fimuls
cmpsb
mov
fcmovbe
mov
jle
daa
js
frstor
stos
mov
test
or
andb
lock
push
popa
stc
sbb
sub
mov
cmp
adc
stos
ja
and
rcr
mov
mov
push
mov
inc
pop
adc
jno
clc
in
popa
lahf
ss
cmp
ret
jp
push
in
push
lahf
jge
les
ret
jge
call
push
insl
mov
dec
lods
andl
sub
subb
scas
loope
movb
inc
and
ja
mov
xor
cli
cmpsl
aam
sti
lods
out
jl
adc
adc
push
inc
dec
jle
dec
jecxz
adc
pop
xlat
orl
ss
dec
lods
out
negl
test
add
gs
lds
sahf
adc
xchg
loope
aaa
push
arpl
pusha
or
cmc
dec
jo
adc
push
sub
in
sub
in
pop
push
dec
cs
aam
mov
dec
inc
jmp
inc
ss
test
pop
jns
cld
shll
mov
icebp
ljmp
stos
stos
mov
dec
lock
fiadds
lea
mov
rcll
mov
dec
push
mov
outsl
pop
xchg
add
jae
inc
cmp
inc
cltd
xchg
adc
stc
adc
clc
xlat
faddl
pop
adc
jp
inc
mov
fisttps
mov
in
call
nop
adc
lahf
inc
scas
enter
lahf
push
dec
jne
aad
pusha
popf
cmp
or
insl
sahf
incb
lret
pop
fmul
or
fldcw
mov
imul
sbb
cmpl
mov
mov
in
adc
pop
push
sbb
loopne
lret
xchg
pop
cmpsb
add
test
jnp
add
lret
and
mov
stos
lcall
and
in
mov
repz
push
mov
mov
push
flds
adc
test
fmulp
xlat
jecxz
ret
test
movsl
std
fstpt
mov
cltd
sub
add
mov
and
jns
push
mov
pop
ljmp
jge
push
inc
or
push
movsl
aam
rolb
mov
data16
loop
cmp
scas
scas
pop
bound
xor
mov
inc
cmp
cltd
sub
mov
inc
fwait
adc
push
xor
jnp
mov
bound
rcrl
adc
jge
cmc
lret
fs
cmpsb
jne
push
shll
jle
into
cmp
xchg
mov
leave
inc
sbb
sub
dec
test
aad
adc
pop
inc
int
xor
push
cltd
imul
lds
mov
fstpl
imul
xchg
mulb
stc
mov
mov
hlt
xor
or
and
cmp
aad
adc
int3
push
orl
xorl
and
test
xor
das
jo
cmp
enter
stos
fimuls
xchg
mov
movsl
xchg
ss
cli
mov
inc
sbb
ret
les
out
lcall
movsl
mov
loopne
int3
or
pop
sbb
add
push
xchg
fimuls
es
scas
push
push
sbb
aad
add
cmpsb
movsb
push
xchg
aaa
pushf
mov
fsubrl
jp
adc
pushf
leave
jmp
nop
jle
loop
ficompl
test
lods
icebp
pop
mov
imul
mov
test
add
outsl
addr16
pop
fdivl
stos
pop
cmp
je
mov
mov
xor
push
lret
imul
push
jo
in
fisttps
subb
push
ja
test
outsb
fucomip
js
inc
in
fsubs
push
popf
mov
jo
jmp
pop
dec
pop
fimull
aad
cld
and
push
add
test
push
je
dec
cmp
fisttps
jmp
mov
sbb
pop
pop
insl
repz
pop
cmp
add
loope
mov
xchg
or
rcrl
jo
push
xor
repz
clc
outsb
dec
loopne
or
push
lret
lea
lea
jle
fidivs
mov
loopne
in
testl
hlt
and
dec
insl
push
lods
xchg
xchg
or
pop
xor
mov
dec
mov
cld
ljmp
pop
les
push
ja
jle
push
lcall
lea
push
mov
xor
mov
add
mov
xor
adc
imul
mov
sub
ret
cmp
loop
je
cmpsl
test
movsl
cmpsl
bound
in
fstpl
popa
xchg
in
out
push
fldenv
popa
pusha
lcall
sbb
and
out
mov
or
mov
outsl
divl
mov
mov
fisttps
xchg
dec
clc
stc
out
add
sti
cmp
push
jns
sbb
jmp
push
xchg
xchg
cmp
cmc
lcall
or
aad
gs
pop
or
loop
fwait
adcl
add
lcall
jbe
mov
cmpsb
jae
jbe
daa
pop
and
mov
in
sbb
insb
aas
les
push
cmc
xor
or
jle
sub
sbb
or
sbb
lahf
adc
mov
add
mov
push
sbb
adc
mov
popf
aas
test
cmc
dec
pop
or
stc
sbb
rcrb
add
sbb
xor
mov
xchg
aaa
in
and
mov
mov
dec
jmp
movsb
lcall
mov
fs
rorb
mov
bt
inc
push
fldt
pop
add
push
addl
push
fldenv
ret
xor
and
xor
movb
sub
inc
xchg
lods
pop
fndisi(8087
mov
hlt
enter
es
mov
fsubs
mov
sub
je
les
shll
dec
pop
mov
push
fldcw
sbbl
or
sub
fidivs
jp
mov
mov
test
xchg
ja
in
xor
sbb
cmpsb
enter
aad
sbb
adc
stos
das
ds
es
xor
ss
inc
mov
int3
das
mov
rolb
in
cld
xchg
movsb
jmp
or
pop
or
mov
mov
or
xchg
mov
xlat
push
int3
frstor
out
dec
xor
cmp
push
jle
cmp
lahf
pop
or
push
lahf
hlt
push
aaa
fisttps
out
fwait
pop
loopne
add
lcall
xor
xchg
in
pop
sar
sub
stos
xchg
lcall
stos
stc
scas
loope
negb
pop
push
sbb
sub
push
pop
cwtl
fsubl
and
or
sbb
push
cmpsl
into
push
or
jp
cmp
adc
cmp
scas
imul
add
das
push
mov
jle
pusha
xchg
loope
mov
aad
ds
aad
rolb
in
lds
sub
xchg
mov
jecxz
jecxz
jp
movsb
dec
adcb
adc
lds
fildl
adc
fldl
data16
and
xchg
cmp
or
fwait
aaa
cmp
push
push
and
insb
pop
add
adc
jb
lds
xlat
roll
iret
xorb
sub
jg
and
cld
data16
pop
xchg
sahf
lret
inc
xchg
imul
scas
jp
cmc
xchg
and
push
lods
addb
mov
mov
fwait
xlat
adcb
test
dec
fbstp
mov
push
xchg
cmp
cmp
add
sbb
jecxz
lock
nop
in
inc
mov
into
inc
popf
test
mov
sbb
inc
xor
adc
mov
push
pop
clc
cli
xor
loopne
hlt
mov
jp
push
inc
xchg
lock
loopne
out
test
add
sub
nop
push
add
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
mov
bound
pop
bound
pop
mov
xlat
sbb
xchg
es
dec
jne
cmp
idivb
sub
mov
in
push
cli
dec
in
int3
xchg
das
stc
movsl
and
jnp
pusha
add
xor
and
inc
clc
jp
jmp
lret
fcoms
rcr
ss
mov
ret
rolb
fwait
xor
sub
negl
jge
scas
push
xchg
push
add
jns
les
nop
cwtl
int
mov
rol
cmp
jle
test
movb
xor
adc
jne
std
mov
sub
cmpsl
lods
ret
xor
cltd
pop
out
adc
jnp
fsubrp
and
rcrl
cmc
sbb
mov
mov
push
idivb
mov
fcmovnbe
cltd
hlt
push
push
imul
or
mov
negb
push
push
cltd
add
shll
insb
in
imul
ret
ss
subb
shrl
mov
imul
pop
mov
push
sub
insl
arpl
addr16
lret
mov
mov
popa
adc
add
aaa
push
push
arpl
nop
std
cmp
jno
or
in
out
cmp
xorl
cmpsb
nop
je,pn
pop
popw
mov
mov
cmp
add
cs
inc
jecxz
push
mov
mov
outsl
adc
cmp
sub
mov
lds
fisubrl
rol
test
cmp
mov
mov
mov
shlb
mov
mov
mov
lahf
movsl
mov
in
nop
insl
adc
inc
dec
xchg
mov
cmpsl
push
cmpsb
cmp
dec
sti
inc
mov
cmp
or
xor
inc
push
jbe
add
rcll
or
pcmpgtd
dec
cmp
popa
pop
cmp
lret
mov
inc
or
fadds
ret
iret
call
add
gs
aad
lods
imul
test
addr16
popf
sub
sub
stos
scas
aad
mov
rol
xchg
popa
and
xchg
shll
ror
cwtl
adc
insl
xchg
jns
jge,pn
inc
inc
jne
mov
mov
addb
cmp
mov
imul
xor
or
sub
mov
mov
xorl
sahf
pop
loope
mov
mov
sti
pop
mov
mov
stos
jae
fisttpl
pop
es
in
add
icebp
sbb
xchg
and
daa
jnp
mov
mov
movsl
lret
loope
fsubp
imul
repnz
pop
xor
scas
xor
xchg
lret
xchg
pop
mov
push
xor
call
loopne
mov
rol
adc
xchg
xlat
scas
mov
push
mov
xor
sbb
movb
and
cmpsl
jmp
xchg
in
push
hlt
mov
les
cmp
nop
xor
mov
mul
movl
sub
fwait
push
sub
sbb
mov
cmp
ret
dec
cmp
push
lods
inc
mov
mov
sbbb
lret
cltd
mov
fisubrl
sub
call
inc
and
inc
sbb
xchg
decl
cwtl
adc
inc
lock
xchg
out
inc
dec
mov
xor
js
inc
jno
xor
in
out
jae
pop
adc
mov
jno
or
or
cmp
loop
aaa
mov
mov
into
cmp
xchg
dec
or
mov
inc
cld
stos
mov
dec
xchg
out
ficoms
sahf
aaa
out
jecxz
ficoms
mov
lods
pop
add
jb
jg
add
pushf
sbb
push
fisttpl
pop
mov
sub
int3
pop
dec
and
in
fs
xchg
cld
ret
icebp
ret
lahf
repz
mov
mov
add
fsubrs
inc
jle
and
js
sub
movsl
fbstp
jge
popf
adc
xchg
and
stos
push
xlat
test
lock
ret
in
cmp
mov
mov
daa
enter
xchg
pop
aam
sub
add
pop
insl
jns
cmp
call
aad
xlat
mov
pusha
push
pop
sub
cmp
xchg
popf
jge
fwait
adc
dec
pop
test
and
jbe
adc
xor
out
pop
or
clc
stos
adc
adc
test
dec
push
or
icebp
mov
jns
call
out
push
mov
bound
daa
adc
or
lods
rcrb
cmpsb
dec
mov
xchg
mov
xchg
mov
dec
xchg
lret
cmp
xor
adc
stos
lcall
ret
cmp
shlb
jbe
mov
adc
ljmp
sub
sub
sub
fildl
jg
rcl
jnp
ret
jns
add
sbb
nop
xchg
out
sti
xor
jp
mov
jno
call
mov
pop
dec
and
xchg
or
sbb
dec
jle
adc
pop
lods
xchg
lahf
pop
aaa
outsl
fnstcw
adc
loope
sub
add
dec
flds
dec
push
rorl
dec
test
mov
ss
andl
in
push
mov
imull
xlat
cmpsl
xchg
pusha
hlt
mov
xchg
test
pop
aam
aaa
mov
mov
sub
adc
push
cmp
xor
adcl
cld
sti
loope
mov
mov
out
cmc
movnti
xor
mov
xchg
push
mov
jmp
sub
add
cs
popa
imul
punpckhdq
clc
into
push
adc
jne
popf
cwtl
sbbl
push
ret
outsl
cmp
fimuls
adc
clc
in
cwtl
leave
xor
and
je
push
mov
rcrb
mov
enter
lods
test
test
or
mov
push
mov
test
jns
jmp
mov
sub
cltd
pop
push
push
xchg
mov
pop
or
fmull
push
mov
sub
cmp
pop
clc
lock
mov
mov
icebp
mov
fstpl
rorl
push
popf
mov
push
sub
mul
cmp
cwtl
adc
pop
in
lcall
push
mov
ret
dec
aaa
push
sub
pusha
lcall
repnz
adc
imul
dec
pop
sub
push
je,pn
aaa
popa
add
inc
mov
cltd
and
bound
xchg
xor
mov
adc
lock
fsts
sub
mov
mov
sahf
loope
jbe
xchg
dec
xlat
std
mov
fldl
jle
dec
mov
in
push
add
loopne
mov
hlt
mov
ljmp
loopne
test
sub
xchg
loope
mov
in
push
clc
xor
stos
jae
rcrb
mov
addr16
or
incb
add
lahf
xchg
pop
lds
jmp
cmpsb
xchg
movsl
imul
push
mov
mov
js
xor
mov
sub
movsb
sbb
int
adc
ret
data16
rorl
adc
xor
lods
and
inc
sbb
or
loopne
loope
fimull
ret
sub
mov
push
aam
ss
and
fnstcw
push
sarb
dec
jmp
add
cmpsl
mov
cmc
jb
cmp
and
aam
pop
je
into
pushl
inc
in
push
aad
mov
imul
movb
pop
fs
mov
add
lahf
jl
adc
adc
ss
mov
dec
mov
cmpsl
fxch
sub
sbb
js
jae
cs
fwait
sbb
mov
xor
and
scas
mov
cmp
fstp
jg
xor
cld
fstps
push
adc
jnp
in
and
pop
dec
adc
jmp
add
out
pop
sbb
stc
jle
in
pop
es
leave
or
xchg
pop
and
mov
pop
xor
insl
mov
push
int3
jle
dec
inc
dec
pop
inc
test
and
icebp
jmp
js
dec
adc
inc
pop
out
dec
pushf
aad
mov
dec
sahf
and
imul
in
in
lret
ret
rcrb
sbb
xchg
add
sbb
cmp
dec
jbe
aam
pop
arpl
xchg
stos
enter
test
sbb
and
add
sub
jno
xchg
dec
test
mov
xor
call
shrl
lock
pushl
data16
out
add
std
sub
sahf
and
jns
jecxz
push
movsl
mov
xchg
dec
aas
ret
andl
sti
xor
lcall
pop
shlb
mov
sub
lock
adc
push
inc
add
ds
aaa
sahf
lahf
adc
inc
xchg
or
pusha
sbb
ret
stc
inc
mov
push
in
mov
and
mov
inc
or
or
rorl
pop
push
adc
mulb
imul
adc
mov
sbb
sub
movsl
addr16
jne
sti
add
sbb
popa
xchg
mov
cmp
mov
cmp
mov
add
mov
mov
lahf
and
out
je
push
cmpsb
test
sbb
iret
mov
mov
movsb
icebp
adc
xchg
mov
aaa
clc
and
sub
jae
repz
into
int3
xchg
dec
cmp
adcl
sub
dec
fldenv
add
arpl
sti
cmp
cli
lret
ficoml
dec
xor
mov
xor
mov
xchg
subb
mov
in
or
mov
adc
lock
mov
ja
mov
inc
outsb
mov
into
imul
sbb
mov
testl
pop
out
mov
sub
repz
fbstp
mov
leave
mov
pop
aam
flds
test
pushf
popa
test
adc
je
ljmp
lock
icebp
fst
push
cs
outsb
push
hlt
mov
stos
pop
test
loopne
or
pop
xor
mov
pop
mov
out
pop
mov
xchg
daa
dec
adc
lds
sub
adcl
xchg
mov
mov
mov
addr16
or
sbb
rcrb
test
sub
sarb
push
sub
hlt
add
cwtl
mov
clc
mov
stos
arpl
out
scas
mov
mov
cmp
outsb
mov
pop
xchg
popf
push
cmc
mov
sbb
sub
sub
jbe
cli
mov
xchg
icebp
call
test
adc
lret
pop
fcmovu
xor
add
fbstp
fiadds
push
scas
inc
les
pop
push
ret
testl
mov
pushf
pop
fidivrl
or
dec
popa
sub
and
push
js
mov
inc
xchg
mov
adc
aam
mov
jne
lahf
xor
dec
add
cmpsl
repnz
add
cmp
imul
jns
mov
or
sub
scas
out
mov
orb
dec
adc
pop
negl
movsb
pop
sarb
lods
xchg
jo
xchg
cmpsb
ret
jb
aam
push
rorb
dec
inc
push
stc
les
enter
inc
repnz
dec
inc
les
mov
out
mov
and
add
xor
xchg
mov
loop
push
adc
into
outsb
sbb
cmpsl
test
shlb
fidivs
pusha
push
aaa
les
cltd
orl
movaps
pop
in
stos
jo
sub
adcb
sti
int
fstpl
add
call
sbb
xor
mov
dec
rcr
dec
jle
fs
out
mov
aas
pop
enter
lcall
push
imul
das
push
mov
xchg
jge
scas
hlt
push
jecxz
test
mov
or
adc
or
fimull
daa
xchg
pop
inc
stos
push
lock
clc
xchg
sbb
and
add
mov
mov
xor
repz
addb
mov
out
loopne
sahf
mov
xor
push
dec
cmp
daa
enter
ja
pop
in
aam
data16
testb
sub
mov
notl
push
std
jae
mov
mov
test
add
pop
ret
cmpsl
and
mov
and
into
fdivr
pop
cmpsb
push
inc
aad
or
add
in
insl
pop
mov
adc
or
jo
ja
pusha
xchg
gs
jmp
sub
testl
pushf
sub
stos
imul
pop
push
les
test
js
insb
cmpsb
cwtl
xchg
jbe
push
lds
sti
sbb
fdivl
ljmp
popa
orl
sbb
orb
hlt
xor
in
aam
pop
adc
fsubp
jb
lahf
dec
jmp
outsb
fs
outsl
adcl
adc
aam
lret
ret
cmp
mov
mov
insl
add
cmp
int
add
scas
adc
mov
xor
js
stos
jg
xchg
enter
roll
stos
pop
imul
ja
push
inc
and
push
movsl
out
subl
mov
imul
sbb
lret
rclb
idiv
push
push
mov
jle
xchg
cmc
in
xchg
or
loop
sbb
mov
jecxz
pusha
cltd
sub
or
or
push
pop
adc
cli
mov
insl
or
insb
cmp
fs
ljmp
rcll
xor
nop
js
sub
adc
pop
xchg
push
cmpsb
pop
stc
arpl
int
jnp
push
adc
insl
cmp
push
pop
dec
xchg
test
ljmp
pop
adc
xchg
ss
adc
lret
in
or
push
adc
hlt
fdivs
adc
lods
test
fcmovb
mov
fimuls
cwtl
nop
lds
test
arpl
and
xchg
jo
or
lods
mov
dec
aaa
sbb
dec
sbbb
fidivrl
or
lret
push
pusha
push
testb
jge
push
ds
xor
xchg
cli
enter
mov
leave
fisttpl
pop
cmpb
enter
jae
mov
jnp
mov
mov
jae
add
je
sahf
fmuls
or
or
mov
inc
jo
mov
mov
dec
sub
shl
ja
push
mov
jne
popa
sarl
jl
test
mov
test
scas
sbb
pop
mov
cmp
lock
xchg
jg
jo
pop
and
jne
cld
in
sha1msg1
pop
leave
das
push
push
out
mov
pop
adc
fidivl
lret
shrb
insb
adc
mov
rcll
push
dec
mov
push
dec
fnstcw
mov
jg
imull
pop
je
rcr
popf
mov
data16
dec
mov
imull
xor
in
inc
pop
stos
mov
ss
mov
xor
and
in
fwait
adc
mov
inc
mov
mov
std
lcall
mov
dec
subb
sbb
out
xchg
lcall
xchg
das
mov
mov
pop
mov
sbb
sbb
dec
inc
sub
bound
data16
cmpsb
or
repz
push
or
and
jb
test
jns
and
cltd
or
jge
loop
mov
lods
push
cmpsb
enter
sub
shlb
jecxz
lods
in
testb
mov
mov
push
aaa
xor
enter
add
jmp
stos
xor
mov
mov
cmpsb
cltd
lret
adc
sbb
and
lods
das
and
outsl
sbb
add
fs
mov
daa
push
in
sub
jmp
pop
cltd
out
or
adc
or
inc
cltd
out
insl
fcmovnu
xchg
and
imulb
mov
mov
jb
sub
cmpsb
lea
push
outsb
lcall
mov
add
scas
pushf
push
sub
cmp
imul
icebp
stos
and
les
test
and
aaa
mov
in
mov
jne
add
imul
cmpsl
inc
dec
test
xor
jmp
adc
ret
adc
add
jmp
xchg
icebp
pop
xchg
sbb
fistpll
fmuls
mov
pusha
test
pop
adc
stc
add
adc
jecxz
push
sahf
ret
test
std
loopne
xchg
sbb
testb
cmp
in
sbb
inc
mov
stc
les
fs
add
mov
mov
push
daa
xchg
clc
shrl
push
imul
push
or
push
sahf
test
gs
or
jno
sar
dec
loope
mov
nop
pop
mov
mov
xlat
dec
ljmp
cmp
lods
fisubrl
outsl
xor
rcr
mov
push
ret
cwtl
inc
orl
cmpsb
push
aas
aam
rclb
leave
adc
xchg
push
lods
mov
ds
and
or
cmp
aas
mov
cmp
xor
push
imul
ss
lahf
aad
fwait
daa
push
hlt
push
adc
adc
mov
mov
in
fsubs
daa
push
pop
jns
xor
mov
inc
xor
int3
negl
push
stos
stos
ficoml
push
scas
iret
xlat
or
test
mov
leave
outsl
adc
and
push
mov
jg
out
jecxz
dec
and
xchg
inc
daa
aaa
rcrl
fdivrs
and
mov
cs
dec
xchg
outsb
shrb
lods
add
rol
pop
test
mov
and
cmp
cltd
lods
push
sbb
outsb
inc
imul
inc
sbb
xorb
cmp
xor
adc
std
aad
mov
inc
push
jno
inc
jle
sbb
js
out
and
inc
arpl
mov
out
arpl
enter
xchg
xchg
lods
lret
mov
leave
repz
dec
popa
mov
orb
inc
add
mov
jge
jl
mov
pop
mov
repz
dec
or
lds
jae
sbb
mov
lahf
push
xchg
test
fistl
out
adc
movsb
idivb
movsb
adc
pcmpeqd
cmpsl
loope
inc
add
adc
ja
jne
daa
push
push
jae
mov
jg
pop
mov
xchg
andb
inc
dec
repz
pop
mov
nop
cmp
fstpl
xor
xchg
aad
sbb
aad
je
and
xchg
push
xchg
mov
cmp
adc
decl
es
fs
ss
jb
fisubs
push
xchg
les
fwait
and
loope
push
pusha
push
test
bound
dec
ss
shlb
pop
mov
lret
adc
lock
gs
sbb
inc
adc
xor
and
dec
push
fcmovne
std
pop
out
cmp
fwait
test
mov
call
sbb
loope
test
inc
fs
fsts
cs
imul
imul
aas
dec
fadds
xor
cmc
mov
fidivrs
outsb
and
lock
cmc
stos
cmpsl
add
shlb
cmp
int3
arpl
movsl
sarb
xchg
push
inc
jecxz
nop
mov
push
fwait
rorl
imul
inc
pop
adc
adc
pavgw
cmp
loope
les
lds
xchg
packuswb
jns
add
cmp
inc
and
push
sub
add
icebp
out
test
sub
xchg
xchg
xor
std
lret
or
imul
and
push
jg
decb
xor
push
dec
ret
repz
xchg
cs
push
cmp
fwait
outsb
jb
or
mov
repnz
sahf
inc
fwait
mov
and
vfnmsub231ps
and
loopne
lea
out
fidivrs
jecxz
test
xor
sub
cs
je
mov
movsb
inc
inc
adc
mov
sbb
push
movsb
push
fucomp
cmp
cmc
imul
ss
dec
xor
inc
mov
outsl
dec
inc
ljmp
fucomi
dec
bound
mov
ret
int
push
or
pop
rcr
xchg
mov
inc
adc
dec
mov
push
and
mov
fmull
data16
data16
popa
popa
mov
inc
push
push
outsb
xchg
mov
pop
sbb
cmpsl
and
mov
xor
aas
push
adc
sbb
les
and
or
loop
dec
dec
popa
insl
inc
mov
fstpt
pop
aam
push
sahf
jecxz
dec
inc
enter
xor
push
subb
pop
sub
pop
aas
ljmp
xchg
shl
push
xorb
enter
and
in
xchg
into
inc
jp
pop
inc
xor
sub
mov
add
or
xor
mov
dec
test
loop
cmpl
xchg
mov
sbb
adc
fcomps
faddl
push
pop
lods
push
dec
sbbb
std
stos
pop
xchg
movl
fucomi
mov
push
inc
add
sub
test
add
sbb
andl
cmp
fcompl
fcmovbe
pop
gs
and
mov
mov
aaa
fidivs
xchg
fnsave
push
jno
adc
jne
inc
add
push
int
insb
imul
lds
push
notb
xchg
mov
int
adc
movsb
mov
fidivl
stos
mov
fstp
jg
xor
rcrl
call
fsubrl
xchg
aaa
xor
sbb
test
xchg
insl
adc
push
mov
scas
movsb
addr16
inc
imul
inc
cmp
push
jg
test
mov
add
shll
dec
js
fstpl
dec
xchg
adc
mov
lock
cwtl
enter
mov
xchg
sti
out
add
xchg
xchg
cs
shll
subb
and
cmpsl
add
or
mov
xchg
pop
rcrl
push
sub
xchg
dec
inc
push
in
fxch
stos
js
sbb
sbb
in
cld
in
xor
in
bound
xor
mov
inc
xchg
insb
push
jg
jnp
test
hlt
and
mov
cmp
test
dec
pop
lods
push
incb
dec
mov
cmp
mov
fldt
test
test
fwait
mov
hlt
aas
and
outsb
in
pop
inc
ret
jnp
jo
mov
fisubl
clc
xchg
or
dec
fcmovbe
adc
add
push
xchg
das
cltd
stos
gs
mov
xor
push
out
outsl
cmp
jnp
sub
xor
mov
je
lea
xlat
call
push
ja
xchg
stc
cmp
or
shlb
pop
mull
cmpsb
xchg
push
jle
leave
mov
cmp
jecxz
push
push
fcmovnbe
sub
xorb
and
push
xchg
andb
pop
adc
xor
xorl
jp
enter
inc
push
and
lods
outsb
or
mov
sub
mov
ret
std
or
in
mov
adc
imul
pop
fnstcw
pop
std
into
mov
cmp
dec
fwait
cltd
mov
mov
jae
fdivl
aaa
push
dec
cmp
fcmovu
ljmp
inc
jb
ja
jg
mov
mov
js
ss
pop
lock
sbb
enter
push
loope
xor
jg
lods
scas
iret
repnz
cmp
adc
xchg
xchg
pop
adc
dec
test
pop
mov
imul
int
and
iret
sub
sub
iret
mov
xchg
pop
mov
imul
pop
mov
xchg
lret
cmp
pop
pushf
popf
les
aaa
aad
inc
xchg
push
xorl
add
push
jg
sub
mov
dec
and
jbe
sbb
mov
sub
mov
call
sub
cmpsl
and
ret
out
inc
pop
or
adc
popa
loopne
pop
mov
inc
filds
les
in
mov
rcrl
loopne
outsb
mov
subb
rcrl
inc
pushl
daa
ficoml
or
lret
hlt
mov
sbb
mov
xchg
mov
cmp
shr
test
and
adc
stos
xchg
mov
les
fwait
lds
rol
fdivrs
pop
sbbb
sub
inc
ljmp
cmp
lods
mov
out
pop
xlat
lretw
push
pop
sbb
sbb
and
fs
out
ret
add
lds
push
imull
xchg
movsb
stc
jb
mov
in
sub
xchg
jbe
gs
ss
adc
jecxz,pn
ret
xchg
jge
jle
fbld
add
out
pop
adc
nop
sbb
aaa
insb
repz
dec
in
popa
cmc
inc
jge
stc
sub
ss
sbb
cwtl
push
scas
sub
and
mulb
insb
pop
inc
lahf
cmp
push
lods
push
push
testb
rep
jp
xor
jecxz
into
jl
cmp
jne
int
xchg
ss
lods
outsb
cmpsb
in
inc
leave
in
mov
fidivrs
jge
aad
sbb
lock
or
adc
lea
inc
mov
dec
mov
imul
fdivr
inc
insb
push
cmc
pop
inc
arpl
pop
ret
inc
ljmp
xor
cmp
push
scas
mov
cltd
cmp
loope
bound
cltd
adc
sbb
adc
aad
mov
ss
xor
popf
lret
sub
imul
mov
jmp
cmp
hlt
inc
and
icebp
cmp
lea
das
fcoms
fsincos
psrad
out
dec
xchg
cmp
hlt
shl
mov
xchg
clc
into
outsl
cmp
xchg
and
sti
sub
aas
or
in
dec
stc
stc
aam
rcrl
pop
push
pop
test
mov
mov
and
xchg
xor
imul
xchg
lods
and
mov
and
xor
outsb
pushf
das
js
lock
mov
push
adcl
lock
pop
dec
idivl
in
pop
adc
jbe
test
popa
cmp
xchg
aad
ja
ja
dec
adc
xor
popa
call
xor
decl
cltd
sbb
inc
xor
pop
add
ss
add
push
push
in
cmpl
xor
cmp
jno
cmp
add
xchg
pop
testl
xor
test
pop
lret
daa
xchg
cmc
movsl
out
push
sarl
mov
test
mov
adc
sti
ret
jg
pop
frstor
je
aam
ljmp
jo
dec
add
outsb
inc
test
jne
mov
cmp
int
xchg
addr16
xchg
push
test
lea
icebp
ret
lcall
and
sub
iret
jge
push
sub
daa
aam
hlt
jg
inc
repz
movsl
into
clc
or
or
pcmpeqw
inc
adc
or
xor
ja
sbbb
loopne
and
mov
push
lcall
jge
loope
add
hlt
mov
aaa
arpl
mov
setl
push
fstpl
repnz
cmp
push
outsb
out
push
sbb
cli
jae
pop
jbe
inc
inc
faddp
jcxz
insl
ja
dec
rclb
cwtl
aaa
call
jno
or
ljmp
data16
cmp
or
orl
enter
xchg
in
dec
insl
mov
xor
adc
inc
xlat
loope
fstl
outsb
imul
xor
call
sbb
lods
add
movsb
xchg
jne
mov
push
mov
out
insl
mov
inc
mov
test
clc
mov
insb
cld
rcl
mov
imul
add
pop
cltd
in
jg
push
mov
dec
fcom
pop
in
inc
xor
jl
rclb
fs
and
leave
scas
clc
sub
mov
pop
mov
pop
mov
stc
push
mov
push
push
sub
cld
cwtl
insb
mov
sbb
mov
push
xchg
pop
xor
jo
fisubrl
shlb
inc
cmp
lock
push
pop
mov
cmc
xchg
je
notb
xor
cmp
xlat
push
std
hlt
pop
push
shll
inc
std
jmp
jge
xlat
js
leave
dec
in
insb
add
in
xchg
test
call
lahf
xchg
push
fsubs
push
cmpsb
loope
call
jge
mov
stos
xorb
scas
fcompl
push
decb
popf
and
cltd
xorl
xor
sbb
mov
rcll
cli
dec
jo
divl
mov
xchg
enter
popf
out
xchg
les
push
sahf
and
add
sub
fwait
dec
in
or
cli
jecxz
inc
arpl
les
mov
pushf
sti
sub
stos
test
xchg
iret
mov
into
cmc
add
in
aam
push
xor
sub
movsb
gs
in
loop
xchg
sbb
clc
push
xlat
sub
int3
mov
iret
lods
aam
mov
mov
arpl
es
pusha
pop
addl
dec
stos
les
jne
sub
pop
mov
lret
js
add
xchg
stos
mov
icebp
dec
lahf
sbb
jecxz
cmpsl
gs
jb
pop
xor
clc
fldenv
mov
aad
repz
mov
cmp
enter
mov
mov
in
or
xchg
jb
jne
inc
clc
sub
lret
pop
xorb
data16
in
popa
xor
out
fidivrs
notb
cltd
outsl
fbstp
fwait
aaa
sti
jo
lock
std
cmp
inc
xchg
shrb
sub
jle
sti
inc
insb
dec
scas
cmpsl
scas
ret
dec
adc
das
xchg
hlt
lea
insl
mov
mov
cmpsl
int3
jecxz
xor
cmpsl
cmp
mov
fstl
push
in
ss
mov
jo
xor
push
jmp
mov
cli
fprem
mov
gs
enter
stc
iret
fisubrl
jb
ljmp
stos
int3
jg
aam
mov
das
fsubrl
dec
repnz
dec
test
inc
cld
pusha
jle
mov
adc
int
lcall
sub
dec
lret
sub
into
jmp
push
inc
inc
pop
jmp
scas
xor
roll
pop
rcrl
xor
inc
insl
fs
js
pop
adc
in
sbb
fwait
popa
sti
sub
imul
adc
dec
or
int
xor
cmp
push
xor
cli
and
leave
add
jne
sub
and
sbb
fisttpl
pop
mov
imul
jge
mov
sbb
int
jl
jne
out
dec
mov
rcrl
fwait
xlat
fs
sarb
pop
inc
mov
mov
cltd
xchg
out
movsl
pop
ficompl
jbe
insb
out
packuswb
loope
push
pop
or
bound
push
pop
mov
jmp
out
nop
ss
incb
adc
push
jge
repnz
ret
fs
into
shr
dec
mov
inc
bound
pop
pavgw
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
loop
inc
sub
jmp
bound
sbb
xchg
ror
dec
cmpsb
xchg
xor
ja
sbb
loope
lds
hlt
dec
leave
notl
push
stos
out
inc
pop
mov
ja
mov
xlat
push
nop
jecxz
mov
xchg
outsl
test
out
push
push
rcll
mov
xchg
cltd
and
es
xor
inc
mov
setg
cmp
vpmacsswd
cmp
or
lcall
lock
xor
jae
xchg
lea
push
jl
addr16
test
xor
or
lret
fcompl
add
stos
and
out
insb
bound
imul
push
lock
in
fucomp
out
dec
test
scas
mov
movsl
adc
cmpsl
and
lods
sbb
sbb
icebp
movsl
adc
ja
sub
pop
rolb
jns
inc
js
es
in
nop
in
pusha
inc
inc
cmc
xchg
lcall
xor
out
cmp
ret
jmp
std
loope
mov
push
pop
adc
or
dec
inc
mov
and
dec
xchg
push
mov
dec
fcoms
lcall
push
fisttpll
adc
sbb
or
fsubl
mov
mov
movsb
dec
sbb
jecxz
inc
mov
sub
lds
notb
mov
adcb
sbb
imul
dec
mov
xor
adc
mov
jge
cmp
pop
mov
mov
shll
stc
sbb
lds
or
cmp
roll
adc
sahf
mov
push
fwait
mov
sub
xchg
mov
icebp
leave
mov
lods
pop
or
mov
ret
cmp
loop
bnd
imul
orb
lahf
xchg
mov
adc
jno
sbb
mov
and
xchg
imul
mov
fcoms
jl
add
xor
insl
xor
test
out
repnz
movsb
push
xchg
push
jmp
fcmovbe
add
ss
and
jmp
xchg
mov
cmp
test
mov
aaa
rcl
mov
sub
lock
pop
stos
neg
and
mov
or
pop
xchg
scas
pop
sbb
and
stos
mov
pusha
pop
in
sbb
cltd
in
nop
shll
adc
insl
add
test
pop
pop
xor
xchg
popf
inc
shlb
cmp
mov
sbb
jg
in
add
xchg
mov
add
push
fstl
jmp
mov
mov
rcrl
out
lret
popf
jnp
inc
aaa
subl
fsubrl
rcl
adc
enter
mov
and
lret
xlat
subl
xor
in
loopne
popa
fmull
outsl
pop
ds
dec
lods
push
jae
repnz
mov
fnstsw
push
inc
xchg
push
cmpsl
call
adc
inc
xchg
mov
mov
leave
outsl
pop
pop
jmp
ficoml
push
xor
adc
mov
outsb
cmp
and
loope
inc
shll
cmp
and
icebp
inc
ret
dec
nop
scas
mov
les
cmp
aaa
add
sub
sub
adc
das
jne
data16
mov
iret
pop
into
pop
jae
call
jo
push
out
xor
inc
subl
in
mov
fdivrl
bound
push
jg
leave
sbb
psubd
mov
mov
imul
rcrb
hlt
lret
and
cld
into
sub
fnstenv
sub
xlat
sahf
or
pop
jbe
dec
stos
push
jo
daa
test
adc
lods
push
leave
movsl
sahf
xor
imul
test
std
sub
sbbl
mov
fidivs
shll
pop
insl
sbb
sub
rcrl
xchg
fadd
add
imul
roll
call
pop
mov
cmc
lret
movsb
dec
sahf
jmp
xchg
ljmp
mov
stc
adc
enter
push
sub
xchg
mov
jbe
add
jnp
inc
pop
pop
jns
jo
push
pop
ja
and
repnz
xchg
mov
leave
xlat
jae
lods
xor
push
dec
dec
jle
je
adc
scas
push
adc
and
test
dec
hlt
push
outsb
imul
cmpsl
or
jp
xor
aaa
pusha
fistpll
imul
mov
inc
movl
pop
add
lret
jo
repnz
das
mov
push
lods
add
lock
insl
mov
push
jnp
das
mov
mov
es
je
and
cld
adc
mov
scas
pop
xor
mov
push
pop
sub
aas
jl
mov
sub
mov
orl
add
mov
pop
or
push
jb
das
inc
xor
push
mov
les
clc
lahf
fmuls
xor
adc
lea
pop
and
jnp
bound
inc
and
bnd
out
aaa
and
jge
cmp
ss
xor
dec
dec
or
adcl
aaa
jge
cmp
aas
lods
insb
xchg
stc
not
inc
push
shrb
sub
aaa
mov
cli
je
loop
adc
in
or
mov
sub
pop
push
es
test
push
in
je
pop
push
cmp
and
xchg
inc
push
mov
mov
and
rcr
aam
push
fcmovnb
jl
pop
loop
pop
pusha
int
jns
adc
mov
in
bound
jbe
movb
push
idivb
sub
int
hlt
ret
pop
or
sub
sbbl
divl
jnp
loop
fcoml
or
add
jle
pop
and
adc
cltd
imul
sbb
cmp
inc
test
and
and
jnp
es
mov
mov
popa
jbe
orb
jge
or
mov
stc
cs
insb
mov
pop
int3
pop
mov
dec
mov
jbe
test
adc
rorb
das
jg
pop
adcb
cmp
cmp
mov
cmp
in
cmpsb
mov
ds
sbb
sbbb
fcmovnb
popf
sbb
rorb
lea
cltd
xchg
cltd
cwtl
push
fisubrs
fs
xchg
lret
push
and
mov
ret
push
std
std
cmp
inc
fwait
jae
pop
mov
cwtl
jecxz
insl
das
stos
clc
xchg
test
sbb
int3
insl
out
popf
rcl
pop
or
in
test
das
push
xor
add
into
loopne
push
pop
andb
sbb
mov
xor
or
rorl
adc
dec
bnd
cltd
fists
sbb
rcr
or
stos
mov
call
inc
insl
icebp
adc
out
fisttpll
mov
pop
mov
add
ficoml
pop
jns
icebp
or
xorb
adc
test
lcall
xchg
mov
int3
xor
inc
jno
mov
inc
lock
and
inc
add
pop
cmpsl
and
ret
push
pop
stc
dec
arpl
mov
mov
das
ret
dec
aad
shll
push
aam
cmpsl
push
ds
xchg
xchg
xchg
mov
les
dec
adc
push
push
pusha
cmp
add
or
cmc
iret
int
test
pop
dec
mov
lahf
imul
jp
xor
mov
aam
xchg
adc
mov
in
sbb
pop
dec
das
cwtl
icebp
sti
cmpsl
rcl
roll
movsl
insl
clc
mov
or
bound
mov
and
xchg
lahf
stos
xor
in
adc
jmp
stos
rorb
jb
sub
mov
sub
push
jno
call
adc
ja
lahf
mov
pop
rorb
mov
rorl
inc
mov
test
daa
jmp
in
movsb
outsl
mov
push
mov
push
jb
jge
cwtl
xchg
icebp
add
dec
adc
scas
cwtl
mov
imul
in
mov
push
cmp
xor
in
push
add
jae
aaa
pusha
cmp
cmc
pop
jnp
repz
aas
inc
jb
clc
mov
jbe
out
cmp
cmp
sub
shlb
cmp
jo
les
jb
hlt
cmp
lods
out
rol
out
cmp
ds
adc
icebp
push
cmpsl
mov
jnp
mov
cwtl
dec
fs
scas
sub
push
dec
ret
stc
xor
stc
xor
dec
xchg
lods
pop
and
xchg
cmp
mov
dec
ficoml
aaa
sub
mov
xchg
loope
sbb
jp
out
jle
mov
cltd
jnp
cmp
mov
mov
and
adc
ljmp
fsubrl
rcll
xor
clc
cmpsb
and
repnz
inc
mov
pusha
jmp
or
ja
ss
or
sbb
jecxz
push
adc
jnp
or
roll
outsl
add
mov
das
movsl
push
push
aaa
mov
jae
out
mov
pop
mov
faddl
mov
lock
mov
push
rcrl
and
cmp
mov
lock
stos
xor
jp
jne
sub
sub
imul
aaa
fcoml
ljmp
xchg
in
sbb
and
inc
idivl
xchg
jns
mov
xchg
xchg
shrl
loop
repnz
test
and
and
inc
xchg
faddl
dec
mov
gs
mov
leave
push
adc
cmp
sbb
or
jg
pop
mov
nop
pop
xchg
imul
rorl
rolb
insl
fimull
jmp
or
push
xchg
loop
mov
mov
xor
rorb
in
test
add
adcl
and
dec
sub
lahf
jmp
mov
cmp
loop
out
jae
mov
ds
movsl
shll
and
imul
cmpsb
scas
lcall
ds
or
ror
rclb
lahf
outsb
test
xchg
ds
xchg
out
mov
sti
rolb
pop
sar
dec
xchg
sbb
outsb
jmp
push
fs
xchg
imul
xor
dec
pop
subb
mov
adc
mov
pop
shl
sbb
sbbl
dec
and
vshufpd
scas
imul
xchg
cmp
lahf
rcll
and
sti
stos
mov
sbb
cld
push
int3
aas
jae
push
sub
jl
mov
jnp
and
add
adc
inc
xor
xchg
adc
test
enter
in
mov
fsubl
push
dec
push
enter
out
js
test
or
in
test
mov
lret
rolb
sbb
or
pop
push
cmc
mov
mov
test
loop
imul
and
sub
ret
jmp
movsb
push
leave
mov
fidivrs
scas
dec
fadds
fstpl
pop
je
adc
mov
mov
js
push
daa
inc
out
in
in
xadd
mov
mov
adc
add
hlt
and
adc
loope
pop
in
ljmp
js
sub
dec
cwtl
dec
popf
lret
rcrb
xchg
adcb
insb
filds
pop
call
push
in
rorb
sbb
stos
into
mov
dec
aad
in
stos
sti
mov
lahf
inc
pop
push
cmpsl
sub
sub
xchg
mov
fldl
or
call
ljmp
jbe
pop
mov
mov
aam
xchg
insl
jle
xchg
in
mov
jmp
sahf
ja
add
mov
ds
lds
jb
sub
dec
enter
add
mov
pusha
pusha
popf
cmp
jne
push
add
mov
fildll
popa
push
insb
xor
imul
mov
bound
xchg
mov
mov
sub
cltd
icebp
mov
mov
sbb
fisubrl
mov
fldcw
or
outsb
and
push
out
adc
aam
xchg
push
jno
sub
cwtl
iret
mov
pushf
lahf
jge
jmp
loop
or
xchg
inc
in
out
inc
add
xor
xchg
dec
mov
dec
int3
mov
mov
sbb
mov
mov
cld
cld
push
add
adc
push
out
scas
cmp
jno
mov
jl
cs
xchg
les
cmp
or
or
pushf
jg
jo
popa
fcomi
push
aas
mov
das
mov
xorl
in
xchg
or
or
sbb
cmp
jno
test
cli
cmp
mov
js
popa
jo
inc
xor
ret
mov
clc
sbb
xorl
daa
mov
pop
mov
repnz
fisttpl
jo
clc
out
cmpsb
mov
pop
icebp
icebp
in
loop
call
cmpsb
push
xor
pop
rol
pop
aad
popa
je
dec
push
cmpsb
xor
pop
sub
jns
bound
xchg
add
pop
mov
adc
inc
add
xchg
cltd
jne
sub
push
mov
jle
and
sub
mov
mov
ret
push
shrl
leave
shll
xchg
xchg
push
mov
test
mov
fld
pushf
pop
add
mov
cmp
cmp
loopne
adc
mov
mov
fistpll
loop
fsubrl
sbb
push
mov
scas
push
loopne
test
xchg
fs
shrb
mov
mov
push
rclb
mov
movsl
sbb
mov
xchg
xor
iret
xchg
icebp
xor
jne
xlat
jo
ret
lcall
jp
push
adc
inc
xor
test
jne
push
xor
xlat
daa
leavew
lahf
jge
notb
cli
sbb
adc
push
cmp
sahf
push
fimull
adc
add
ror
pop
adc
mov
lcall
lret
sub
addr16
and
lahf
test
adc
pop
lret
mov
sbb
mov
fbstp
pop
lcall
add
ds
mov
mov
or
mov
mov
fisttpl
push
repnz
or
mov
data16
or
add
repnz
dec
addb
adc
pushf
pop
adc
push
leave
xlat
pusha
in
push
in
scas
scas
shrb
iret
repz
leave
dec
js
cltd
push
add
add
btrl
jnp
dec
cmp
loop
inc
dec
in
jmp
cmp
inc
es
cli
dec
add
xlat
pop
rorb
addr16
jno
mov
xchg
stos
or
mov
das
nop
fsubrp
adc
scas
adc
lds
lea
lea
sub
mov
iret
and
sbb
sub
or
pusha
lods
and
lea
jge
out
and
into
in
pop
les
pop
lret
add
inc
insb
insl
popa
adc
mov
push
out
andb
lds
fwait
cmp
push
xchg
out
jg
aas
jnp
push
sub
lods
sub
lods
or
mov
cwtl
inc
push
mov
lret
jb
mov
mov
fisubs
decb
in
sbb
or
cmp
movsl
lea
lods
sub
js
or
js
jg
rcll
inc
leave
scas
enter
push
push
inc
lods
add
push
hlt
fwait
movsl
push
push
popf
mov
mov
xor
fidivs
cmpsl
add
loope
mov
fwait
xor
cmpsl
std
sub
add
testl
das
pop
adc
xchg
mov
xlat
adcl
sahf
jge
cld
ret
push
sbb
jge
add
scas
mov
pop
pop
rorl
mov
jnp
call
jne
sub
out
xchg
mov
pop
adc
inc
jo
add
stos
leave
mov
add
les
jg
leave
and
jnp
jge
cmc
fwait
cwtl
cmp
mov
pushl
repz
and
mov
ret
xor
movsl
xchg
or
scas
xchg
pop
jge
mov
mov
mov
stos
je
add
and
dec
movl
inc
jno
icebp
adc
inc
imul
cmc
outsl
iret
add
mov
sub
mov
or
outsb
sbb
jl
test
das
sbb
or
mov
mov
mov
mov
jo
repnz
xchg
test
xlat
mov
pop
add
inc
or
test
sbb
test
repz
mov
and
inc
lret
jmp
jo
fcmovnb
cmp
fists
out
adc
pop
dec
adc
outsb
loope
aas
incl
mov
outsl
xchg
jle
pop
cmp
push
out
xchg
add
aaa
push
lret
add
pop
mov
xchg
movsl
aas
addr16
clc
bound
enter
cmp
lods
fsubrl
les
jns
pop
scas
push
cmp
sti
mov
adc
push
mov
push
add
jmp
iret
repz
jge
sbb
mov
cmp
stos
cmp
icebp
sbb
cmp
mov
lahf
nop
dec
jno
ja
test
push
stos
arpl
testb
jle
lods
push
adc
inc
ret
stos
xchg
mov
pop
jne
mov
add
cld
loopne
xchg
inc
pop
mov
mov
and
pop
dec
push
xor
out
or
sub
xor
adc
mov
aaa
out
outsl
int3
mov
mov
adc
fstp
jmp
pop
shll
int3
clc
dec
xchg
repz
xor
loope
dec
insb
xchg
repz
xchg
mov
jo
sbb
cli
xchg
pop
das
data16
xlat
pop
and
cmp
jb
push
arpl
into
in
into
jb
mov
jmp
outsl
sbb
add
fidivrl
fisttpll
inc
push
cmp
or
xor
das
add
xchg
fldlg2
xlat
cmpb
and
mov
sub
fs
in
out
sub
jle
pop
insb
movl
pop
cmp
cmp
aam
shlb
addb
inc
xchg
pop
andb
or
cli
jecxz
cld
popa
cmc
pop
fidivl
in
xchg
lods
pop
xlat
dec
testl
xor
int3
mov
das
pop
insl
jbe
sub
mov
xchg
inc
sub
push
outsb
pop
jo
jmp
shr
insl
or
leave
ss
or
jle
insl
insb
insb
or
xchg
pop
cld
push
sbb
in
ljmp
into
into
xor
in
icebp
out
push
mov
daa
mov
scas
shlb
rclb
movsb
jg
sbb
roll
xor
out
bound
pop
cmp
test
int3
imul
pop
int
inc
shlb
sub
out
sbb
cmp
mov
push
sti
mov
insl
ja
repz
xchg
sti
js
daa
inc
pusha
fcomps
dec
andl
ja
inc
mov
pop
xchg
mov
xor
loopne
lret
rclb
push
dec
mov
sbb
xor
fildll
mov
cmp
fldl
jmp
stos
data16
cmpsb
push
pushf
fisubs
dec
inc
xchg
mov
imul
imul
loopne
mov
xchg
adc
mov
sub
push
cld
mov
mov
stos
mov
lahf
lret
dec
sub
test
hlt
sub
popa
cli
mov
adc
mov
mov
imul
lret
or
xchg
cmp
sbb
pop
negl
fwait
mov
push
popa
cli
xor
mov
sub
add
dec
jnp
out
lock
dec
dec
ljmp
pop
sub
mov
nop
mov
popl
dec
dec
push
popf
mov
lea
dec
jb
and
adc
and
xor
pop
dec
out
scas
add
pop
sbb
xchg
dec
repnz
jo
adc
aad
andl
fwait
xlat
and
jb
push
cmp
pop
lods
int
daa
cmp
test
adc
jnp
enter
in
dec
test
xchg
dec
mov
rclb
pop
loop
mov
dec
or
fdiv
sbb
insb
outsb
cld
sbb
rcl
xchg
bound
stos
es
mov
addr16
sub
push
sbb
dec
adc
xor
in
ss
loopne
mov
xchg
mov
stos
adc
addr16
fstpt
adc
adc
addr16
lock
push
xchg
inc
or
inc
xor
stc
call
rorl
xchg
and
add
pop
pop
stos
stos
mov
repnz
mov
push
cmpl
push
xor
xor
fsubr
pop
adc
arpl
mov
sub
insl
sbb
dec
mov
or
das
lea
sarb
mov
mov
insl
sbb
mov
or
jmp
push
popl
ljmp
ljmp
xchg
out
lret
xor
movsl
iret
fidivrl
xor
movsb
stos
arpl
mov
icebp
iret
dec
adc
out
mov
and
fstpl
cmpsb
mov
xor
dec
pop
shrl
mov
pop
mov
jno
lcall
mov
and
push
pop
jg
xchg
arpl
dec
int3
movl
push
cltd
inc
repz
andb
push
ss
lds
cmpsl
fsubr
aas
ds
cmpsb
xchg
das
cwtl
arpl
rolb
cmpsb
ror
push
imul
scas
fists
ja
mov
and
sti
arpl
mov
mov
mov
out
cltd
push
repz
mov
rclb
jge
add
addr16
test
and
push
xchg
stos
aaa
fsubrl
faddl
fnsave
push
ds
movsl
mov
movsl
test
mov
gs
pusha
sbb
mov
pop
fiaddl
jl
lea
lcall
and
das
out
mov
pusha
outsb
and
add
aaa
mov
and
dec
es
and
out
push
dec
aam
cmp
jb
imul
adc
dec
stc
mov
xchg
jb
icebp
pop
mov
lock
inc
lods
in
cmp
push
fwait
imul
mov
add
lods
jl
ret
ret
dec
subb
aam
aam
jns
pop
ljmp
xchg
lea
clc
jbe
mov
mov
adc
mov
test
lds
stc
pop
mov
add
xchg
rol
xchg
or
mov
xchg
mov
and
pop
sub
pop
xchg
rolb
sub
jmp
aam
out
movsl
mov
aas
dec
xor
push
push
push
test
mov
in
in
adc
sub
aam
insl
xchg
inc
addr16
inc
mov
mov
imul
xorb
cli
and
imul
int3
fistpl
fsts
mov
mov
xchg
sbb
mov
int
fmull
shr
push
xchg
popf
fimull
mov
sbb
cmp
fsubs
negl
jg
xor
mov
jb
mov
push
dec
xchg
push
std
jbe
or
rol
adc
sub
sbb
es
or
in
mov
aam
or
ljmp
mov
mov
jno
ja
and
or
imul
movsl
mov
iret
fldt
les
and
mov
mov
ds
sub
popf
in
or
cs
fisubrs
inc
lea
inc
aaa
inc
loope
test
xchg
ficompl
aaa
sub
add
mov
jns
mov
jae
test
cli
data16
pop
shr
xchg
mov
push
dec
jecxz
arpl
inc
filds
push
addr16
xchg
lock
ficoml
outsb
dec
inc
into
je
out
and
fldcw
lods
cltd
lret
js
sarb
mov
add
movsb
pop
sub
inc
push
pop
gs
mov
sbb
into
jnp
lock
sub
push
cmpsb
fildll
add
ss
dec
inc
aas
outsl
push
arpl
mov
imul
outsl
movsb
adc
mov
cwtl
ljmp
sti
dec
jne
jne
in
jl
repz
addr16
inc
cmc
dec
les
in
sbb
push
adc
add
aad
aas
xlat
xchg
jg
cs
cmc
add
inc
adc
or
fildll
hlt
in
and
xor
hlt
iret
daa
hlt
test
xchg
jbe
mov
sbb
imul
loope
pop
movsb
add
sarb
gs
push
dec
sarl
jae
mov
push
aam
mov
cmc
mov
rorl
xchg
add
pop
adcb
popa
jne
xor
insb
add
icebp
adc
arpl
inc
pop
mov
jns
adc
mov
push
cmp
rolb
lods
ljmp
stc
and
or
dec
mov
sbb
pushf
psraw
rolb
std
hlt
jnp
and
in
nop
out
adc
fldcw
pop
pop
arpl
stos
xchg
addr16
and
mov
sti
jns
leave
pop
and
out
mov
sub
lock
add
bnd
in
f2xm1
jb
data16
jmp
fdivrs
int
dec
mov
and
outsl
int
mov
jecxz
mov
imul
test
dec
mov
leave
jl
add
out
inc
cmp
bound
mov
popf
jl
xor
fistpll
shrb
stos
pop
and
pusha
jne
out
pushf
mov
mov
or
decb
adc
lds
std
xor
fcoml
sub
mov
sahf
jecxz
jno
xchg
outsb
jg
out
rcrl
jmp
xchg
push
sub
fsqrt
ss
xor
cltd
nop
jo
adc
in
lods
and
dec
jg
mov
add
pop
fs
int
addr16
jecxz
or
xchg
js
xchg
push
movsb
jb
cmp
es
mov
mov
lcall
pop
push
mov
test
out
pusha
mov
divl
lds
cmp
mov
lcall
aaa
inc
add
imulb
es
jge
pusha
sub
jno
jmp
outsl
cmpl
int
sub
xchg
mov
push
adc
sub
and
sub
push
mov
mov
movsl
lds
dec
push
or
imull
pop
sub
or
mov
pushf
test
adc
ret
in
mov
sahf
call
mov
rsqrtps
jmp
les
insl
decb
adc
mov
in
lret
cld
mov
xor
lds
loopne
or
aaa
jmp
bnd
inc
push
mov
popf
dec
movsb
lods
inc
fadd
mov
and
js
push
jge
out
out
add
mov
shll
lods
jle
test
rclb
sub
mov
xchg
shrb
je
rorl
movsl
ret
sbb
fdiv
sahf
jnp
leave
fistpll
inc
dec
mov
sarb
cmp
aas
bound
push
rcrl
mov
sti
adc
imul
mov
ja
imul
dec
cmp
jmp
shll
mov
lods
std
out
fwait
xchg
fsts
cmp
push
xchg
and
pushf
ja
and
sbbl
movsl
and
push
aas
push
dec
or
fsubr
add
leave
or
inc
mov
or
bound
dec
sar
cmp
mov
xor
roll
mov
add
sbb
js
fnsave
and
xchg
inc
out
jnp
mov
xchg
add
sub
push
mov
mov
pop
sbb
fucomp
int
inc
xor
mov
ret
imul
xchg
mov
pop
or
sub
ficompl
inc
and
daa
push
nop
call
pcmpgtw
inc
sbb
push
pop
fidivrs
lret
rcl
cmp
or
fcmovnbe
lcall
lock
sub
jbe
jmp
cs
push
sbb
push
imul
loopne
leave
mov
mov
mov
jae
mov
dec
icebp
mov
push
test
mov
push
pop
mov
push
imul
sub
movsb
jnp
ret
pop
dec
and
ror
movsl
sbb
ljmp
bnd
push
add
or
mov
xchg
sar
jb
inc
mov
ret
leave
out
testl
or
mov
cmpsb
xor
iret
xlat
cmc
add
int3
xchg
lds
mov
dec
loope
cmpsl
insb
push
cli
idivb
or
addr16
subb
inc
les
iret
jne
mov
mov
sbb
aam
cli
rcrb
into
fnsave
out
lcall
fstp
jnp
mov
clc
fmull
pop
cmp
and
add
outsl
fisttpll
add
push
imul
mov
pop
cmp
cmp
aad
fs
xchg
cmpsb
dec
insl
or
mov
pop
xchg
inc
int
imul
pop
xor
and
xor
aaa
das
adc
jp
int
jae
jmp
repnz
jne
je
lds
xor
cmp
aam
inc
outsb
fs
fiaddl
mov
in
in
sbb
fildll
dec
icebp
sarl
stos
ds
rorb
stc
mov
stc
movsb
lret
mov
jmp
xchg
sub
sub
mov
into
pop
adc
adc
sbb
mov
sub
fisttpll
or
cwtl
jo
data16
fiaddl
cltd
pop
adc
aam
int
ret
into
xchg
mov
pop
jne
xchg
jo
stc
and
mov
test
icebp
imul
ror
dec
sub
sbb
add
cli
adc
push
mov
jns
out
enter
aaa
insb
es
mov
fistpll
xchg
loop
sbb
inc
je
xor
jns
lock
sahf
add
pop
pop
push
push
inc
repz
ret
ja
mov
repnz
dec
jne
lret
sti
sub
inc
in
pop
sub
or
insb
mov
sbb
jno
or
xchg
popa
sub
icebp
mov
jno
inc
xchg
dec
add
orl
decb
inc
xlat
pop
mov
jg
int
fdivl
pop
movsb
mov
aad
push
inc
popf
sbb
push
cmp
leave
sarb
into
sub
push
idivb
enter
ret
pusha
mov
adc
fs
rcrl
data16
divb
out
push
push
add
dec
push
mov
or
fsubs
fists
adc
in
test
add
xchg
mov
shrl
fcompl
xchg
inc
xchg
xor
pop
adc
insl
aad
fisubl
int3
or
push
add
mov
jnp
insl
mov
rcrb
add
xor
rcrb
add
pop
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
rcr
cmp
dec
lea
jmp
bound
lods
test
dec
adc
and
into
rorl
mov
or
xchg
push
rorl
lahf
andl
scas
dec
jns
cli
out
scas
mov
xlat
popa
imulb
jb
cld
out
test
loopne
and
lahf
and
out
add
mov
and
push
cmpsl
popa
movsl
or
imul
inc
fstpl
sti
outsb
push
sti
adc
mov
das
push
xchg
int
pop
jmp
inc
imul
mov
add
jo
mov
lret
mov
cmp
popa
lcall
test
and
dec
imul
pop
push
mov
pop
inc
pop
push
sti
aad
cmpsl
cmp
call
adc
lret
fwait
mov
mov
imul
xchg
add
jg
xor
mov
aad
push
gs
jnp
cld
jmp
inc
mov
sbb
mov
test
push
subl
dec
lcall
pop
pop
scas
scas
into
sbb
enter
hlt
and
bound
incl
jbe
mov
mov
mov
popf
dec
pusha
pop
insb
mov
adc
xor
jge
in
pop
sbb
sub
sub
rcrl
clc
or
pop
pop
pop
insb
and
mov
fimuls
jmp
imul
mov
jmp
xchg
inc
mov
cmp
mov
inc
sub
cmp
outsb
psubsw
add
dec
mov
xchg
push
sbb
push
xchg
jg
out
ljmp
pusha
loope
add
jle
and
sub
pop
inc
leave
jae
mov
push
ljmp
les
shlb
cmp
fdiv
add
sbb
jle
xchg
xor
xor
jbe
xchg
jecxz
sub
sbb
scas
shll
movsb
jge
inc
loop
fmul
adcl
cmc
stos
out
jb
test
xchg
add
ss
scas
inc
push
clc
cmp
std
movhlps
les
inc
shr
cld
mov
pop
push
push
rol
scas
cmp
test
push
lock
push
aaa
popa
call
xchg
xchg
ficoms
or
ds
repz
mov
pop
push
cmc
push
xor
imulb
jns
dec
and
lahf
leave
shl
cmp
je
popl
gs
insl
fidivl
movsl
cwtl
sub
iret
mov
das
xchg
in
mov
add
and
scas
sub
lret
pop
dec
cmp
scas
push
into
cmp
bound
and
mov
shlb
mov
ret
or
mov
fisubrl
fists
inc
lcall
mov
fwait
inc
cmovg
jmp
inc
aam
loope
in
stos
push
shlb
jge
sbb
fsubs
sbb
popa
push
jae
push
inc
sub
push
scas
fidivl
es
dec
out
ficompl
and
test
inc
ficompl
mov
or
add
or
out
adc
test
daa
cmp
test
das
sbb
inc
jnp
jmp
push
int
xor
aaa
sbb
dec
adc
ficoml
cld
add
mov
xchg
sub
std
push
cmp
test
push
lret
daa
or
outsl
xlat
mov
pushf
sub
cmpsb
ljmp
fnstcw
jo
mov
jl
sub
xor
sbb
or
scas
sbbl
imul
mov
mov
repz
outsb
inc
hlt
mov
orb
in
dec
mov
in
sbb
dec
xchg
mov
gs
stos
sti
xchg
clc
pop
jno
jmp
push
push
pop
inc
sbb
sub
sarl
fldl
rcrl
ret
xchg
inc
fadds
idivl
imul
clc
sti
add
push
enter
aam
jo
mov
daa
jnp
jbe
jns
out
popf
cmp
fimuls
mov
cltd
sbbb
cltd
popa
sub
lods
lock
jmp
repz
sbb
or
pop
dec
sbb
add
test
mov
inc
imul
out
xchg
lods
lret
icebp
rcrb
insl
inc
xchg
sub
adc
adc
mov
fwait
pop
inc
lret
mov
aas
lea
adc
bound
sbb
adc
mov
adc
flds
mov
or
mulb
das
or
dec
in
pusha
movsb
mov
or
jbe
mov
xor
inc
inc
or
pop
popf
mov
mov
into
arpl
adc
outsl
aam
fs
mov
popf
sbbb
and
xlat
jbe,pt
adc
je
add
decl
mov
add
and
jl
aas
xchg
jmp
sbb
dec
insl
pusha
mov
xchg
ds
cmp
cmp
pop
fisttpll
jbe
sub
mov
pop
test
sub
iret
sahf
out
lea
shrl
jne
lret
inc
cwtl
jne
xor
mov
sar
lods
fsts
lahf
jns
out
push
add
pop
sub
fcoms
cmp
pop
mov
das
inc
jge
xchg
push
into
push
addl
dec
xor
or
fldenv
ret
stos
cli
cmp
xchg
add
mov
jecxz
shl
mov
adc
mov
leave
and
and
and
outsb
lds
rorb
cmp
mov
insb
push
cmp
mov
js
jmp
imul
inc
lds
inc
inc
sbb
jnp
test
mov
mov
cltd
aas
cmp
stos
int3
adcl
or
ja
int
push
ror
mov
es
mov
orb
fdivp
lds
cmp
mov
sub
pop
jecxz
sbb
or
nop
sub
push
mov
add
outsb
aam
inc
aaa
shl
xor
sub
xor
pusha
mov
clc
jo
testb
das
mov
cmp
les
phaddw
dec
adc
andl
jmp
and
xor
lock
popf
adc
xchg
pop
add
lcall
repnz
push
sbb
f2xm1
clc
cmp
lock
imul
out
jbe
fsubs
mov
push
fnstenv
adc
ret
inc
push
sarl
mov
ss
mov
pop
mov
sub
fs
mov
imul
loopne
test
outsb
stc
mov
mov
xchg
add
jnp
pop
lret
inc
pushl
push
add
push
push
sti
in
ds
cmp
sti
jbe
sbb
orb
xchg
icebp
loope
int
cmpsl
enter
loopne
mov
movb
lahf
mov
mov
je
nop
aam
xchg
dec
mov
push
jo
andl
fwait
jb
aad
repz
out
mov
call
dec
sub
arpl
orb
xor
jg
imul
inc
cmp
loopne
lcall
insb
inc
jmp
and
pop
sub
adc
and
xchg
xchg
arpl
inc
and
rcll
mov
sub
pop
lret
xchg
pop
lcall
test
idivl
test
and
mov
lcall
test
lcall
cmp
sbb
lock
test
jb
jbe
cmp
ds
mov
push
xorb
sub
rep
mov
jnp
pop
pop
jne
or
gs
fstpt
testl
aaa
test
mov
pop
stc
mov
loope
dec
pop
out
test
cli
mov
shlb
sahf
int
cs
shll
dec
lret
mov
outsb
jg
xchg
jno
popa
adc
or
stc
inc
scas
or
enter
in
add
push
jne
leave
push
mov
loop
sbb
or
scas
int
pop
cmpb
mov
mov
mov
sbb
out
and
lahf
fisubs
mov
sub
mov
inc
out
stos
jl
xchg
jecxz
sbb
ficoms
cmp
sbb
jno
outsb
mov
ficomps
decb
adc
xor
outsb
add
int
popf
pop
into
jo
popa
cmp
stos
popa
popa
cmc
add
push
ja
push
stc
push
shlb
xchg
push
inc
cwtl
pop
sbb
adcb
xor
cmp
jmp
dec
xchg
test
imul
sub
gs
adc
jg
push
push
adc
fisubrl
jns
lret
or
dec
ret
scas
cltd
xchg
jp
sbb
push
mov
pushf
sti
ss
sbb
loop
add
dec
xor
sbb
cmpsb
ret
mov
add
push
movsl
lcall
fcompl
xlat
fsubrp
or
jnp
lods
jb
push
mov
aaa
push
lret
cs
pop
xchg
divl
in
lret
xor
push
lock
jmp
es
push
ds
xchg
mov
sub
nop
inc
pop
enter
inc
mov
dec
jle
mov
cmp
jle
adcl
push
mov
sti
test
xor
stos
cmp
jecxz
fstps
push
out
pushl
adc
lods
jo
xchg
xchg
cld
leave
pop
mov
dec
ss
cmp
ficomps
outsl
jbe
jl
cmpb
xor
enter
jae
movsb
lods
leave
out
sbb
pop
imul
out
aas
dec
sti
sbb
jmp
subb
pop
xor
aad
loopne
add
push
or
scas
push
inc
sub
es
cltd
ljmp
flds
icebp
imul
dec
push
mov
inc
xchg
dec
cmpsb
or
fwait
xor
add
mov
pop
inc
in
adc
hlt
push
xchg
dec
push
adc
cwtl
in
mov
push
ja
fs
cmp
mov
mov
daa
mov
inc
dec
xchg
or
stos
mov
rcll
in
mov
or
shll
mov
inc
pop
push
in
inc
repz
adc
cld
das
arpl
adc
pop
pause
test
into
sub
cmpsl
in
jle
dec
leave
outsb
out
in
fdivp
gs
into
outsl
into
mov
cmp
loopne
int3
nop
lret
jae
push
stos
cmp
aas
iret
sub
cli
ret
jmp
pop
adc
out
stos
mov
fistl
add
aas
fldl
pushf
dec
in
push
addb
call
dec
cmpb
rcrl
add
fisubrl
push
pusha
imul
cmpsb
lahf
in
imull
int3
or
and
jno
mov
popa
add
aaa
leave
les
adc
and
mov
bnd
sahf
xchg
mov
enter
dec
xchg
mov
repnz
jl
sub
mov
ja
shlb
movb
add
adc
or
pop
add
lret
test
subb
lods
jmp
int3
mov
fdivr
outsb
sbb
mov
mov
repnz
xchg
fadds
mov
jmp
dec
mov
fwait
inc
push
push
mov
push
jle
or
push
jge
movsl
xor
and
xchg
or
inc
push
add
mov
loope
je
add
cmpsl
inc
shl
movl
mov
mov
mov
jns
into
popa
sub
push
fs
xchg
pop
dec
bound
aas
sahf
dec
xchg
dec
jbe
pop
inc
push
outsb
jl
es
cld
repz
repnz
shll
mov
cmpsl
dec
test
mov
mov
inc
pop
fadds
popf
inc
movsl
mov
pop
mov
lods
mov
mov
adc
repz
mov
popa
hlt
mov
mov
pop
je
subb
or
addb
or
rorb
sbb
pop
repnz
push
js
mov
dec
inc
aaa
jle
push
jecxz
arpl
mov
push
outsb
sahf
dec
mov
imul
add
data16
pop
in
stos
sub
fwait
decb
push
test
les
add
sbb
mov
aas
mov
push
push
das
lods
ret
fidivs
lea
call
push
sbb
lret
push
xor
sub
mov
mov
push
sbb
loop
push
lret
arpl
mov
push
sub
jo
jno
cmp
arpl
out
fwait
in
mov
shll
push
push
jge
insb
or
xor
lock
sbb
jo
shlb
insl
js
sti
out
xchg
add
int3
je
dec
mov
mov
out
call
inc
in
inc
inc
scas
dec
xor
add
mov
in
daa
push
sbb
jnp
je
push
push
in
inc
jnp
rcll
daa
cmpb
in
repz
mov
mov
lret
enter
je
mov
mov
jle
mov
lret
push
xchg
aaa
in
xchg
stos
inc
xor
add
push
or
pushf
sbb
xor
rcrl
or
stc
and
shlb
xchg
dec
test
lret
or
in
in
lods
jbe
sti
jns
cmpsb
sub
or
push
clc
xchg
pop
push
cli
jge
fucom
movsl
dec
movaps
jae
stc
jns
or
and
xor
sahf
arpl
mov
ss
rcll
insl
ljmp
inc
int
fdiv
push
ljmp
cs
xlat
testb
jp
jns
loope
and
adc
subb
sub
aas
xchg
js
cmp
pop
shl
inc
fistpl
repnz
sti
sub
jne
ss
cltd
fiaddl
das
jg
outsl
jns
insb
cmc
dec
les
bnd
mov
cld
add
inc
fistpll
cmpsb
rcl
jle
sub
xchg
and
inc
in
std
inc
jns
xchg
mov
int
mov
mov
ds
adc
std
addr16
lahf
mov
pop
prefetch
or
inc
mov
xchg
std
xor
sub
lret
mov
dec
mov
inc
cmpsb
xchg
pop
pushf
stos
push
lcall
sahf
imul
arpl
std
lahf
cmpsb
repz
push
aaa
xchg
sub
inc
inc
mov
mov
data16
loopne
dec
or
push
xor
test
ja
pop
add
mov
pop
ret
pop
in
lods
lock
aas
xchg
adc
jne
jo
outsl
adc
ljmp
in
pop
pop
xlat
fstps
jg
call
les
dec
sbbb
cmp
outsl
loop
push
inc
jge
clc
jnp
dec
cmp
loopne
cmp
mov
mov
sbb
lds
addl
lahf
sarl
scas
stos
push
mov
push
inc
dec
pop
jl
das
in
adc
push
fnsave
xchg
ds
filds
dec
lea
mov
cmp
jge
pop
lods
or
push
jns
xchg
out
ret
inc
arpl
dec
arpl
add
nop
pop
jge
fwait
or
adc
fs
xchg
push
in
rclb
mov
scas
inc
sbb
loope
lret
nop
pop
icebp
jae
sahf
aas
xor
loop
sbb
cld
mov
dec
pop
cmp
outsl
add
mov
sbb
cltd
dec
jno
jge
jnp
inc
cmp
pop
lret
fisttpl
leave
test
fistl
das
pop
sub
xor
adc
push
fldt
sub
fistpl
dec
xor
jno
push
inc
sub
ret
or
negl
sub
cltd
enter
loop
or
mov
push
jmp
jg
mov
cmp
pop
mov
scas
fldl
cmp
arpl
ja
jmp
add
sub
insl
adc
cmp
xor
in
rcl
fsin
and
jmp
test
dec
cmpsl
aam
or
lret
imul
in
repnz
cli
cmp
ja
fs
inc
xchg
xor
ret
outsl
lahf
out
add
data16
xor
fs
in
pop
fiadds
lcall
and
test
fld
cmp
loopne
mov
jae
gs
and
dec
sub
lret
jnp
xor
outsl
mov
mov
notl
shlb
mov
jo
lahf
je
std
sbb
mov
mov
inc
cmpsb
push
rclb
adc
sub
xor
and
mov
jnp
add
xor
add
mov
sub
jle
outsb
inc
clc
adc
jge
jnp
pop
pop
xchg
repz
shl
adc
retw
xor
mov
pop
les
lods
ret
dec
leave
push
add
dec
pop
mov
pusha
ja
pop
adc
insb
jbe
testl
sbb
je
adc
fisubs
aaa
adc
pop
sub
xchg
adc
xlat
ds
scas
ljmp
ja
push
je
outsb
mov
add
dec
or
ds
push
sbb
dec
jb
pop
nop
imul
flds
mov
das
loope
cli
inc
fistl
pop
insb
das
icebp
test
mov
fcmove
and
sbb
sbb
mov
add
lahf
fisttpll
mov
enter
int3
xor
outsb
imulb
mov
loope
pusha
inc
scas
je
pop
int3
cmp
dec
cmp
or
sbb
notb
rcr
arpl
out
mov
ret
dec
push
dec
mov
loopne
pop
sub
push
out
cmpsb
mov
cld
push
decl
and
test
bound
jns
leave
rcr
sub
fcomip
sbb
out
dec
scas
shlb
adc
add
dec
fildl
mov
pop
popf
fdivrs
cmpsl
xor
mov
adc
pop
add
in
pop
dec
out
dec
push
imul
enter
pop
adc
add
sub
testl
negb
dec
test
pop
test
push
push
rcr
pop
cmp
mov
inc
xchg
mov
lret
and
add
ljmp
xor
decl
clc
mov
fdivrp
loopne
ljmp
jle
test
sahf
mov
mov
loopne,pn
lcall
cmp
dec
or
mov
popl
lds
jae
mov
xor
xchg
lds
adc
movsl
mov
clc
ficompl
add
mov
hlt
mov
je
xor
data16
jnp
mov
rcl
mov
daa
div
or
sub
arpl
and
adc
sahf
in
cwtl
clc
jns
mov
jecxz
cvtps2pd
mov
cmp
lock
js
ds
jo
mov
mov
xchg
mov
fucomp
in
dec
jb
pop
push
add
pushf
sahf
stc
and
stc
addr16
icebp
out
les
cmp
cmp
cmpsl
xor
xchg
adc
jmp
adc
addb
stc
xor
ds
sub
mov
mov
inc
mov
mov
add
mov
xor
or
sub
cld
cmp
daa
por
in
dec
jno
push
or
xchg
jo
stc
dec
mov
cmp
xlat
mov
and
pop
dec
divl
mov
rcll
and
and
or
xchg
or
pushf
jecxz
out
inc
inc
lods
pop
mov
and
stos
jnp
dec
dec
fadds
sub
shlb
ds
inc
insl
sbb
lcall
add
mov
add
push
mov
push
dec
aas
push
movsl
mov
jl
jnp
sti
cltd
repz
pop
insl
lods
jnp
cli
xor
xchg
sub
lahf
adc
fwait
jbe
insb
jb
ljmp
xor
arpl
mov
movsb
add
push
cmp
add
outsl
pop
xchg
lods
dec
pop
mov
dec
push
push
in
bound
sbb
pop
jnp
dec
cwtl
in
sbb
inc
sbb
jp
pop
xchg
ficoml
es
in
loope
push
outsl
jo
pushf
and
cmp
inc
pop
outsb
xchg
out
pop
jmp
enter
or
icebp
xchg
cmpsl
addl
jle
push
dec
lahf
call
ss
push
push
sti
out
or
dec
ja
mov
dec
sti
mov
daa
pusha
pushf
test
push
in
fs
movsl
add
mov
and
pop
cmpsb
vxorps
pop
or
xchg
and
jp
jnp
fimuls
rorl
ret
gs
mov
popf
pop
inc
jne
stc
data16
shr
inc
popa
or
sbb
dec
out
xor
mov
rcrl
daa
inc
std
aad
mov
sub
out
jns
fstpt
add
fdivrs
jbe
icebp
aad
inc
insb
lahf
mov
cmp
dec
mov
add
dec
daa
mov
xchg
jg
cwtl
scas
popf
int
jne
mov
push
cmpb
fstpl
lea
bound
shll
xor
andl
outsl
shlb
scas
loop
push
dec
pop
jmp
xor
jge
clc
mov
xor
pop
enter
xor
in
das
lret
adc
push
push
pop
cmp
xchg
cld
inc
fcoml
rcrl
and
push
pop
jnp
pusha
test
xchg
mov
lcall
test
pop
inc
push
shl
inc
movl
pop
mov
push
push
sahf
test
sbb
xchg
and
imul
and
ja
cmp
leave
jle
mov
cmp
outsb
loope
jge
scas
repnz
dec
or
jb
lods
mov
pop
push
movsl
sbb
sub
or
mull
sbb
lahf
stc
loopne
mov
pop
mov
arpl
dec
inc
jmp
add
es
and
js
rolb
in
hlt
out
jb
cmpsl
popa
js
inc
loopne
and
jle
jae
iret
jge
dec
sbb
inc
cmp
xchg
data16
loope
out
sbb
popf
rorl
neg
inc
push
nop
inc
mov
push
cmc
push
sbb
shll
and
popa
cmp
dec
int
rolb
mov
inc
cmpsb
push
inc
inc
cmp
lret
out
push
pop
dec
shlb
or
inc
outsb
dec
xchg
jl
inc
inc
jno
push
xor
xchg
lods
or
andb
scas
aam
xchg
pop
jb
das
mov
iret
fwait
sub
pop
fldenv
push
loope
in
push
repnz
xor
and
sti
jl
mov
icebp
cmp
in
cmp
insl
or
push
dec
push
jns
add
fwait
int
call
lock
push
daa
push
xorl
pushf
mov
sub
fisubl
pop
roll
stos
mov
lret
add
pop
cwtl
inc
mov
dec
mov
inc
ds
stos
pop
orb
insb
push
das
sub
xor
pop
jo
xchg
dec
pop
in
mov
imul
aas
movsl
icebp
and
push
add
cmp
loop
fs
xor
xchg
bnd
insl
push
out
outsl
mov
cmp
leave
and
mov
jae
mov
jmp
out
xor
mov
sbb
add
push
mov
shlb
mov
int3
call
enter
loopne
pushf
xor
mov
scas
call
dec
call
mov
inc
rcr
xchg
xor
cmpsb
jl
mov
add
rorb
and
mov
movsl
aaa
xchg
jecxz
insl
je
shl
notb
sti
xchg
cmp
ficoml
sub
jo
ret
ss
mov
popf
cwtl
loop
cmpb
or
mov
jl
sbb
fwait
jno
jge
cli
test
sub
cvtps2pd
cmc
push
mull
dec
fwait
addb
cltd
dec
add
mov
cmp
push
push
jbe
or
test
and
lret
dec
loope
mov
cmp
popa
sbb
jo
push
cmc
notb
mov
sub
je
aam
push
lahf
in
std
int
fs
jg
mov
adc
and
scas
fstps
pop
xchg
ljmp
pushf
xor
mov
loop
rcrb
sub
hlt
xor
shll
jnp
fldl
sbb
adcl
in
lcall
popf
leave
fidivl
push
popa
mov
sbb
lods
cld
cmovg
roll
lods
push
mov
popa
xor
loope
push
ret
ret
xor
cmp
xor
inc
sub
jns
and
stc
inc
mov
push
cld
dec
push
insb
clc
outsl
cwtl
push
adc
xchg
call
cli
inc
das
xor
fmull
rcll
testb
hlt
imul
lea
jo
mov
fwait
insl
hlt
mov
mov
testl
jno
dec
push
ret
push
jne
cmc
jle
cmc
and
movsl
mov
sar
push
xorb
dec
xor
inc
add
aam
cld
and
xor
fidivl
addr16
sarb
cmp
cmp
inc
xchg
inc
mov
or
xor
push
xor
mov
sbb
cmc
jnp
jae
fs
insl
popf
lret
xchg
orb
imul
es
mov
cltd
inc
xchg
xchg
popf
adc
push
lahf
mov
or
ret
inc
pushf
pop
pusha
or
loope
or
xchg
sbb
sahf
adc
subl
xor
mov
ds
sub
cmp
mov
mov
adc
test
or
lock
testb
jnp
add
roll
jmp
cmp
mov
rcrl
mull
cmp
sub
cmp
cs
cmpsb
and
mov
fidivl
jge
mov
fstp
and
and
xor
aam
jno
test
mov
std
test
cmovbe
mov
flds
das
out
pop
arpl
mov
mov
lret
or
das
out
pop
int
mov
popa
cli
cmpsl
sub
popa
add
int3
xor
lock
lret
push
sub
push
mov
setp
mov
les
pop
pop
push
in
adc
sub
je
clc
ret
adcl
mov
xor
xor
into
sbb
fistps
push
add
fmuls
call
repnz
jnp
jg
int
mov
call
pop
sub
add
pop
cmp
jo
ja
shrb
inc
inc
sbb
lock
repnz
pop
push
cs
enter
lret
ds
mov
xchg
ja
mov
add
mov
hlt
xor
inc
sub
movsb
pusha
arpl
cmpsb
adc
cmp
push
mov
rcrl
jne
mov
add
sbb
andl
mov
mov
add
pop
ds
pop
sbb
jns
icebp
or
daa
stc
aas
fs
je
pop
les
xchg
push
loop
enter
adc
shrb
adc
scas
pop
sub
lahf
lods
jle
sub
popf
inc
xchg
mov
jns
sahf
sbb
sahf
lea
orl
sub
jb
cltd
pop
ret
test
out
leave
pop
test
xchg
mov
out
lahf
imul
push
popf
das
or
lods
jmp
fistl
jge
in
inc
inc
addb
addl
cmp
add
nop
xchg
push
push
push
xchg
push
mov
mov
sub
push
out
adc
add
es
push
dec
add
out
rcll
push
out
shl
pop
jg
pop
inc
mov
movsl
cmpsb
cmp
mov
push
push
cmc
enter
xchg
cmpsl
lods
or
inc
cs
arpl
aaa
sti
insb
inc
push
xor
adc
insb
xchg
mov
repnz
xchg
es
jp
sbb
daa
dec
dec
and
inc
or
adc
pop
lds
and
dec
sbb
ret
jle
call
in
nop
test
pop
into
rcr
jnp
push
jbe
fwait
test
cmpsb
in
xor
out
pop
dec
xchg
pop
cmp
cwtl
pop
inc
xchg
ret
shl
clc
aaa
mov
jo
clc
js
adc
sub
movsl
loop
in
lods
popf
xchg
and
and
and
adc
push
mov
mov
sbb
out
test
in
or
sarb
jo
mov
icebp
data16
add
jecxz
ljmp
aam
popa
add
adcb
mov
out
inc
lcall
pop
xchg
push
sbb
jecxz
or
ja
pusha
dec
xchg
pop
sbb
subb
ret
repz
jmp
mov
mov
mov
inc
imul
xlat
add
pop
ljmp
xchg
insl
dec
push
cltd
ret
pushf
lea
push
jae
and
int3
nop
fmul
testb
lret
xchg
pmaxub
popw
adc
jb
sbb
arpl
fstps
les
pop
mov
ss
lock
or
xchg
ss
lock
pop
push
mov
stos
mov
xchg
push
out
sbb
test
popf
dec
xchg
and
rcll
pop
jne
push
push
cwtl
cli
adc
mov
and
xchg
dec
dec
rclb
call
cmp
jecxz
test
cmp
fistpll
jb
pop
cmp
sub
xchg
push
das
fldl
or
xor
aaa
xchg
xchg
lods
push
imul
jno
mov
push
faddl
bound
push
sbb
icebp
cld
pop
adc
xchg
lods
xor
inc
jl
pop
adc
rol
cltd
inc
cmpsb
cmpsb
aam
xorb
sub
test
pop
pop
sbb
out
or
inc
and
push
mov
add
ss
mov
xchg
mov
mov
sbb
and
jl
test
sub
enter
scas
xor
and
inc
call
sbb
fcmovbe
xchg
mov
mov
in
jae
repz
fdivs
xchg
pop
pop
lret
movl
cmp
add
and
xchg
jne
add
cmp
insl
je
jno
pop
pop
shrb
ja
fstp
insb
cli
sub
and
pop
sub
in
xor
or
daa
iret
ja
sarl
lret
inc
in
insl
imul
in
scas
push
xor
mov
xor
and
insb
stc
mov
lret
movsb
dec
mov
mov
cmp
or
mov
fidivs
sbb
popf
sbb
addr16
sbb
popf
push
adc
cmp
fisubl
push
sti
mov
insl
shlb
xor
mov
sbb
js
sti
inc
pop
jp
out
scas
mov
jns
pop
xchg
outsb
dec
cmp
push
cmp
test
test
rsqrtps
xor
and
in
sbb
xlat
and
mov
add
cli
pop
sbb
and
add
repnz
or
and
xchg
ja
mov
lea
pop
mov
xor
pop
adc
outsl
or
popf
lcall
jnp
push
lods
pop
mov
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
sub
jmp
bound
xor
insl
test
mov
divl
out
or
mul
addb
adc
sub
out
mov
loopne
jbe
xchg
shlb
dec
pop
popf
daa
outsl
cmp
adc
mov
adc
push
lock
sbb
repnz
sub
jl
and
and
filds
adc
xlat
mov
mov
mov
xchg
out
test
mov
int
rcrb
mov
gs
stos
sarb
adc
and
or
and
data16
push
pop
push
adc
lea
popa
pop
pop
mov
add
enter
ss
enter
adc
pushf
pushf
mov
mov
cmp
cwtl
xchg
mov
cmpsl
xor
jb
movl
lea
test
imul
test
mov
xlat
jge
dec
pop
test
add
in
out
fdivs
loopne
pusha
sbb
add
in
mov
into
iret
push
pop
out
sub
push
loop
es
scas
daa
adc
fcomps
aaa
cli
or
or
push
inc
xchg
push
pop
daa
mov
insl
loope
aad
mov
repz
jecxz
jg
daa
cli
pop
add
push
inc
or
loopne
jg
in
sub
jp
pop
test
jl
push
push
lret
inc
aam
in
sahf
xchg
cld
ss
fwait
cmpsl
imul
inc
xchg
movsl
insl
lcall
out
enter
out
psllw
push
cli
fstps
scas
xor
orl
cmp
and
mov
and
fldcw
fstps
fdivs
pop
xor
lret
push
sbb
sub
push
mov
cwtl
in
dec
jno
and
mov
lahf
mov
push
pop
repz
lea
xor
out
fwait
sub
inc
push
push
outsl
shr
loopne
js
loope
cmp
movsb
inc
fmuls
pop
sub
xor
dec
pop
in
test
dec
fmul
fsub
cld
into
mov
pusha
mov
aad
jl
xlat
mov
jge
outsb
inc
lds
movsl
daa
dec
adc
pop
loope
mov
jmp
push
adc
mov
xor
inc
mov
mov
out
fbld
or
arpl
inc
xchg
inc
pop
aad
mov
inc
xchg
xchg
mov
out
imul
es
jae
cmpsb
int3
sti
test
push
ds
outsl
xor
out
mov
jecxz
dec
push
inc
add
sbb
mov
xor
sub
jp
fsubr
test
clc
adc
mov
sub
mov
testl
sub
call
adc
bound
dec
gs
push
fsts
adc
mov
imul
je
xchg
sub
ret
repnz
inc
sub
stos
push
je
or
les
xor
imul
test
aad
adc
jl
xchg
inc
xor
out
in
inc
xchg
adc
sub
push
ficompl
fmuls
cmp
push
sbb
cmp
mov
xor
gs
std
aaa
or
push
or
pop
ret
xor
leave
mov
xor
jns
sti
pushf
sub
pop
jnp
hlt
cmp
cmpsl
jno
or
mov
pop
inc
lods
cwtl
pop
cmp
fisubrl
nop
loop
inc
sti
sub
xchg
dec
xchg
repz
clc
loopne
psubusw
dec
inc
and
imul
mov
fnsave
inc
adc
clc
mov
adc
shlb
popa
add
xchg
test
cmc
mov
mov
leave
loop
cwtl
jne
loope
ljmp
add
push
cmp
dec
xchg
mov
and
cmp
xchg
ffreep
xchg
insb
jl
xchg
movsl
test
push
push
aaa
sbb
push
rorl
and
dec
mov
mov
or
jb
mov
inc
mov
and
push
or
sbb
test
aad
arpl
daa
dec
pop
lock
repnz
push
and
pop
in
adc
mov
mov
fwait
insb
jo
cld
mov
movsl
out
negb
fcmovbe
pop
out
sbb
or
and
sbb
fdivrl
cmp
cmp
shlb
test
and
movsb
mov
out
pop
popl
sub
push
insl
leave
adc
repnz
jg
adc
sti
push
cwtl
inc
push
mov
cmp
mov
mov
mov
popf
cmc
rorb
jno
mov
dec
dec
jmp
lahf
daa
push
repnz
mov
fwait
shlb
mov
jp
and
mov
aam
pop
pop
sbb
jns
mov
and
pop
test
addr16
insl
sti
stos
jmp
enter
mov
sti
pushf
xchg
sti
push
bound
test
sbb
fldt
js
sbb
push
fisubl
mov
ret
dec
xor
dec
xchg
add
lods
pop
mov
movsl
and
and
cld
addr16
test
je
mov
or
sti
cmp
daa
pop
mov
sahf
and
addr16
dec
rorb
insb
adc
dec
and
fiadds
stos
cltd
xor
cltd
jo
xchg
pextrw
into
jno
xor
fisubs
dec
test
into
jb
adc
push
mov
fs
orl
cmpsl
cwtl
cmpsb
jmp
cld
cmp
aam
ret
pop
push
scas
sti
popa
xchg
lods
in
repz
out
pop
xchg
test
scas
dec
mov
mov
or
pop
inc
xchg
test
loop
xchg
ret
cmp
jae
pop
fs
pusha
pop
or
loop
inc
lret
scas
movsl
aam
sub
mov
mov
sar
dec
mov
dec
sarb
and
dec
cmp
lea
jl
in
add
aas
mov
inc
adc
in
test
push
ja
mov
pop
mov
test
push
shl
push
jg
sub
gs
cmc
cmp
cmp
jge
fnsetpm(287
ret
mov
mov
loop
ljmp
xor
es
xor
jb
push
ret
add
rcrl
mov
outsl
out
lds
imul
int3
push
mov
xchg
mov
loop
jae
xlat
in
cmp
jg
loope
repnz
push
aad
iret
jle
push
xchg
out
lds
xchg
fcmovu
test
jg
xchg
mov
fs
jmp
xor
nop
mov
pop
out
lea
jge
sarl
pop
lock
stos
data16
xchg
outsb
inc
inc
pop
pop
inc
je
jae
push
xorb
addr16
jge
jbe
add
inc
loope
sbb
orl
sahf
xor
dec
shrl
jmp
lret
mov
out
aaa
mov
jns
jmp
js
fs
ss
cmc
dec
mov
mov
mov
daa
mov
cmpsb
pop
gs
dec
subb
sub
inc
repz
in
testl
outsb
jp
outsl
cmpsb
pop
jge
fnsave
add
or
lock
sbb
sbb
dec
into
out
jmp
pop
movsb
mov
xorb
push
mov
pushf
lcall
push
push
cmpsb
inc
pusha
pop
or
adc
mov
cmp
cmp
pop
adc
rcrl
lock
fcomp
imul
in
push
popa
das
test
and
adc
push
loopne
xlat
aam
cmp
push
cmpsb
sub
mov
dec
int3
cmp
push
imul
or
pop
divl
fstpt
lcall
push
or
push
xchg
fs
sub
pop
pop
mov
hlt
xchg
sbb
loop
pminub
js
dec
jmp
notb
mov
incb
loop
shlb
cld
pushf
lock
mov
adc
imul
fisttpl
pop
ds
popa
js
lods
fnstenv
mov
out
push
sub
scas
dec
push
mov
movsb
sti
cmpsb
cmpsl
mov
outsl
outsl
inc
ficomps
imul
pop
das
push
out
and
fidivs
mov
add
test
push
ret
xor
dec
movsl
daa
push
or
test
imul
out
mov
aas
inc
pop
cmp
aad
rep
push
jo
adc
inc
movb
mov
or
pop
mov
lret
aad
jmp
cmp
leave
cmpsl
add
imul
rcl
xchg
ret
push
lock
sahf
decl
jo
lds
xchg
sbb
mov
sbbb
cmpb
insl
sbb
negb
out
sbb
xchg
cmpl
add
insl
mov
fmuls
fstps
popa
and
negb
js
movsl
clc
mov
imul
insb
js
out
cmp
dec
out
push
fcoml
mov
pop
cltd
nop
mov
jl
jg
or
into
out
cmp
daa
lret
cmp
jmp
ficoms
adc
repnz
dec
xchg
adc
jp
js
inc
mov
insl
mov
outsl
xchg
mov
dec
lcall
ljmp
lret
sub
pop
adcb
xorb
adc
mov
cmp
mov
dec
in
lahf
bound
jne
sbb
ja
outsl
xor
jmp
lock
xchg
jno
loopne
dec
and
mov
and
mulb
add
movsb
roll
xchg
sbb
mov
sbb
jo
jb
leave
dec
push
lcall
sbb
test
add
cs
cmc
mov
lods
or
insb
aas
adc
decb
or
cmovae
add
cmpsb
xor
mov
cmp
cmp
lret
mov
jne
out
stos
push
pop
cmp
je
in
push
pop
cmpsl
lret
enter
scas
loope
sbb
pusha
int
aaa
xor
fldcw
mov
in
xor
in
pop
arpl
add
xor
imul
cmp
add
insl
xor
ret
imul
add
and
popf
adcb
pop
add
ret
jno
enter
pusha
aam
jle
insl
push
js
in
stos
or
ror
fsubl
mov
xchg
push
fistps
ds
xchg
sub
push
mov
addr16
bnd
mov
push
sbb
je
pop
in
movsl
lods
repz
clc
push
jo
icebp
xchg
jl
inc
fnstenv
push
cs
jge
xchg
aad
scas
insb
out
rorb
pushf
cli
sti
cli
leave
push
inc
jbe
and
jg,pn
es
ss
xchg
jle
ljmp
faddl
mov
push
fadds
sahf
int3
fwait
adc
sbb
mov
je
jle
xor
cli
inc
stc
sub
in
adc
cli
mov
adc
lods
or
xor
pop
mov
pusha
add
insb
iret
sbb
push
gs
mov
movsl
iret
movsl
push
out
ret
and
xor
aam
mov
xor
mov
scas
push
xor
enter
lret
push
pop
mov
icebp
sub
fidivs
lcall
sbb
loope
lds
xchg
jg
shlb
test
lds
push
or
clc
sub
dec
dec
xor
or
jg
sbb
xor
mov
and
daa
adc
into
adc
ss
mov
pop
cmp
flds
test
shrb
inc
jb
lock
push
mov
cmpsl
cmp
jae
shr
loopne
jmp
sbb
or
push
mov
add
adc
out
dec
arpl
lahf
gs
jne
loop
aad
js
mov
push
and
out
mov
insb
and
aas
push
mov
push
outsb
dec
xor
cmp
and
arpl
std
sbb
int
insb
xchg
mov
std
inc
pop
xor
cmc
and
sbb
mov
mov
cmp
xchg
pop
sbb
fimuls
sub
jmp
push
cs
xchg
mov
adc
mov
fisttpl
lods
int3
adc
push
mul
add
jnp
inc
mov
adc
or
xlat
dec
test
push
enter
cmp
daa
inc
mov
lcall
push
shrb
in
lds
loop
fisttps
dec
cmp
push
xchg
adc
fistpll
xor
pop
mov
mov
mov
mov
call
add
and
cli
push
jmp
dec
popf
sub
inc
push
pop
cld
adc
fmull
in
fsubrl
inc
xor
popf
mov
sub
and
sub
nop
dec
sub
lret
mov
push
outsl
out
mov
push
shrl
cli
inc
mov
push
push
pop
xor
pop
scas
fisubrs
lahf
and
xchg
mov
hlt
out
out
xor
mov
sub
jge
jg
inc
in
fs
rcll
stos
ret
clc
push
stos
ds
popa
and
imul
dec
js
in
sbb
and
jg
add
xor
cmc
dec
inc
or
mov
neg
or
dec
mov
lret
xchg
rolb
insl
enter
mov
cld
xchg
sbb
dec
lret
in
daa
orl
mov
in
test
add
push
mov
test
lds
pop
pop
push
sbb
shll
xor
lahf
or
outsl
outsl
cmpsl
imul
inc
mov
scas
fstpl
xor
mov
fstpl
pop
add
add
add
xor
push
pushf
pop
sub
sub
jo
mov
pop
mov
int
mov
imul
leave
pop
shll
mov
or
test
xchg
mov
cmp
cld
inc
lock
mov
pop
push
lea
dec
stos
add
inc
dec
lods
adc
ret
mov
push
pusha
outsl
in
add
mov
sbb
andb
data16
add
jae
sbb
xor
stos
mov
sbb
sub
inc
test
mov
fadds
and
dec
mov
or
sub
cltd
xor
dec
shrb
roll
das
mov
dec
ljmp
mov
jno
js
mov
sub
dec
add
stos
mov
mov
mov
lds
sub
icebp
lret
mov
adc
adc
add
popf
or
adc
push
cmc
mov
iret
xor
inc
lock
push
daa
cmp
imul
hlt
je
rclb
jg
les
es
jge
push
jno
aas
mov
mull
fmul
addr16
cmp
in
lods
mov
push
xchg
out
mov
out
mov
jb
loopne
mov
mov
cmp
inc
enter
call
push
sbb
or
fnstenv
jmp
xchg
fsts
adc
mov
add
push
sbb
sub
jl
or
cmp
leave
sbb
cmp
mov
xchg
repnz
mov
sbb
fidivrl
xor
mov
xor
push
test
xchg
pop
das
dec
sub
add
sti
imul
or
lret
stc
je
mov
jle
inc
or
out
pop
sar
mov
loopne
push
lock
push
rolb
out
and
pushf
jmp
lods
aaa
ret
aam
jno
dec
and
mov
rol
out
loopne
jp
in
xchg
push
mov
mov
dec
xor
mov
mov
sub
cmp
inc
push
inc
das
cmp
push
add
ja
rcr
cmp
jmp
repz
popa
mov
pop
fs
addr16
adc
adc
lock
fldenv
sbb
or
cmp
xchg
aad
repnz
orb
out
sub
xchg
scas
fisubrl
push
pusha
gs
cmp
cmp
jmp
insb
pusha
lcall
pop
mov
jb
jnp
repz
sbb
mov
lea
in
icebp
lea
cmp
xchg
lock
mov
sbb
inc
jge
push
pop
aaa
mov
pop
enter
lds
orl
jo
sbb
test
out
ficoms
loopne
fdivr
or
cld
fildl
pop
dec
loopne
ficoml
or
loopne
jne
push
nop
jne
cmp
les
imul
jmp
rorb
andl
mov
stc
xor
inc
je
xchg
lods
mov
fcoml
push
jle
shrb
push
sbb
jne
jbe
and
data16
mov
pusha
lret
or
xchg
jp
int3
add
mov
pusha
or
pop
sbb
sbb
mov
push
pop
jo
pushf
cmp
daa
lock
dec
repnz
pop
xchg
push
sub
std
and
das
fsts
lcall
mov
mov
bound
xchg
or
cli
add
cmp
rcrl
push
inc
test
jmp
sbb
cmp
cld
mov
popa
jno
xor
lahf
sahf
lret
test
call
cli
cmp
dec
adc
mov
fs
dec
mov
pop
pop
mov
mov
jne,pt
dec
arpl
sbb
pop
outsb
arpl
mov
mov
nop
fmul
push
mov
mov
outsl
jle
mov
jp
sub
arpl
hlt
dec
inc
and
in
lods
mov
adc
in
cltd
sti
out
jns
jle
stos
sub
inc
dec
sbb
lock
out
and
in
nop
adc
sbb
stos
dec
subb
insl
sub
dec
xchg
iret
xor
inc
daa
ss
cmpsb
out
outsb
arpl
sub
insl
mulb
xchg
pop
mov
pop
cmp
je
aad
mov
sti
lods
xlat
dec
nop
aaa
xor
dec
sahf
out
mov
jnp
push
xchg
out
test
jl
das
ds
jb
inc
inc
jmp
pop
pop
je
xchg
xor
je
sbb
adc
enter
cwtl
sub
das
sub
and
adc
lcall
pop
aad
lcall
clc
cmp
nop
push
jecxz
mov
cmpsb
xchg
js
jno
dec
ret
mov
decl
and
insl
arpl
ja
push
inc
adc
aas
pop
outsl
rorb
or
clc
mov
pop
les
push
andb
pop
lret
bound
loopne
fimuls
inc
and
nop
sbb
div
inc
jg
ja
mov
popa
or
or
in
int
sub
stc
push
fisttpll
pop
std
jne
out
test
ret
inc
and
outsb
inc
adc
mov
dec
cli
addr16
add
pop
inc
add
sub
sub
sub
ss
movsl
dec
fdivrs
dec
pop
ret
xchg
jle
stos
adc
inc
ja
mov
fldt
iret
inc
mov
enter
adc
call
ja
idivl
adc
mov
stc
out
mov
sub
jge
and
cmp
lret
lds
call
jl
into
insb
cmpsb
cltd
outsb
fiaddl
in
cltd
inc
lret
testb
push
lods
les
push
push
movsl
movsb
dec
sbb
xchg
mov
fadds
mov
push
pop
pop
ss
xchg
adc
dec
popa
sbb
nop
scas
das
mov
add
dec
xchg
mov
rol
mov
inc
cld
cmpsl
jb
xor
xor
push
dec
jp
cmp
in
icebp
ss
leave
add
mov
outsb
int
lods
pop
or
pop
sbb
add
adc
and
push
je
bound
int3
fdiv
mov
in
mov
adc
jns
xlat
mov
cmp
pop
popa
jl,pt
sbb
push
pop
insb
mov
add
jae
xchg
mov
xor
insl
mov
xchg
adc
jne
or
stc
mov
sahf
cmp
sub
std
xor
or
jl
mov
xchg
mov
dec
mov
dec
in
sub
mov
cmp
ror
bound
xor
jmp
dec
inc
xchg
cmc
ret
or
data16
mov
scas
mov
jb
inc
popa
aaa
xor
push
sub
and
xchg
test
loopne
mov
push
jnp
jnp
or
pushf
and
push
movsb
inc
cli
fldcw
scas
fdivl
cmp
add
sbb
push
gs
cs
aam
jmp
xchg
cmpsb
cli
call
xchg
jns
mov
cmpsb
or
in
xorl
sahf
mov
int3
dec
aaa
movsb
lret
out
mov
xorb
sbb
sbb
or
xchg
xchg
iret
jns
stos
xchg
mov
ds
popa
rolb
std
inc
bound
cmpb
push
pop
inc
jmp
add
int3
int
sahf
popa
mov
mov
push
jmp
cmp
das
jae
mov
repnz
loop
sbb
sahf
mov
rolb
sbb
shrl
fistps
xchg
faddp
icebp
mov
test
outsb
rcl
lods
sub
mov
mov
sti
push
dec
push
adc
add
cld
out
cmp
pushf
repz
sbb
shl
push
sub
popa
push
gs
sub
xor
mov
inc
mov
inc
add
scas
shll
push
enter
call
dec
movsl
cmovno
xchg
jmp
jno
mov
inc
test
fistps
bound
inc
enter
and
pop
loope
testb
ss
push
lods
test
lahf
pushl
xchg
outsb
mov
xchg
aam
dec
cmp
testb
pop
int3
out
pushf
xor
xchg
dec
mov
sti
icebp
mov
and
enter
lods
out
cmp
hlt
outsl
sahf
into
std
pop
xchg
adc
sbb
adc
adc
fmuls
inc
fnstcw
das
jns
out
lods
mov
nop
sbb
popa
jl
andl
cmp
jge
jnp
xchg
mov
fstps
lret
cmp
lock
and
xor
add
sub
into
mov
fnstcw
loope
jno
inc
sbb
insl
dec
imul
or
cld
es
dec
or
xchg
push
and
les
and
sbb
pop
dec
jbe
pop
ds
xor
dec
mov
hlt
insb
mov
aas
or
mov
sbb
mov
dec
sbb
call
mov
les
or
mov
lods
insl
call
xchg
mov
add
pop
cmp
pop
mov
jecxz
rcrb
inc
hlt
fcmovne
popa
mov
mov
jb
test
imul
push
cmc
rcrl
data16
rorb
mov
lods
pop
adc
repz
stos
mov
and
das
xor
sbb
out
test
jmp
jge
lcall
lods
pop
jbe
pop
jae
and
or
test
xchg
add
arpl
mov
cli
lahf
cmp
fs
mov
ret
in
or
out
fiaddl
sbb
leave
or
xchg
pop
push
pushf
push
test
inc
dec
push
call
adc
adc
inc
push
and
inc
xchg
lret
in
sub
insb
insl
mov
jge
cwtl
ret
pop
cmp
and
sub
xchg
push
mov
push
addr16
xor
inc
pushf
int3
dec
sti
stos
aam
pop
xchg
or
or
sub
jne
iret
and
jnp
mov
mov
addr16
push
outsl
mov
push
inc
lods
lahf
and
and
mov
jl
and
lret
mov
push
jnp
filds
hlt
aaa
lahf
repnz
inc
inc
jmp
aas
add
sbb
jnp
ljmp
xchg
sbb
pop
mov
test
in
fstpl
arpl
jo
pop
add
mov
cltd
cmpsb
jo
and
loope
sub
mov
sahf
movsb
pop
sarl
dec
pop
or
jmp
mov
xor
cmp
jno
insb
mov
xor
cmp
pop
aam
popa
xchg
aad
ja
outsb
xchg
mov
push
xchg
mov
push
sub
dec
sbb
mov
cmc
out
sti
popf
hlt
outsb
rorl
sbb
add
pop
xchg
pop
imulb
inc
lock
adcb
add
cmpsl
shr
data16
out
lahf
mov
inc
rolb
gs
fdivl
test
inc
mov
inc
add
jge
clc
adc
pop
pusha
jb
push
or
adc
push
inc
lahf
inc
dec
scas
mov
dec
into
pop
nop
xchg
xlat
jmp
xor
pop
xor
loop
jg
sub
fidivrs
arpl
lret
pop
lahf
leave
mov
imul
mov
out
push
sbb
pop
pop
cmp
xchg
lock
mov
test
fst
push
add
rcrb
lods
pusha
sbb
pop
out
pop
pop
mov
mov
movsb
xor
fs
pop
test
cld
push
fsubrl
pop
push
pop
mov
loopne
pop
cmp
lds
hlt
arpl
or
fadd
sbb
lock
cli
shll
mov
notb
adc
cltd
outsl
mov
mov
leave
stos
je
cmp
mov
rolb
mov
xchg
ljmp
fmulp
insl
lcall
ficoml
xor
test
int3
inc
and
or
xchg
dec
pop
mov
lcall
add
out
fwait
lea
cmpsl
daa
dec
jmp
xor
push
mov
nop
mov
je
sub
repz
aas
dec
push
out
sub
mov
popf
pusha
daa
sub
mov
enter
mov
xchg
inc
lods
cwtl
inc
jne,pt
inc
loopne
ss
pusha
xchg
shrl
push
pusha
sbb
ds
out
add
mov
push
lret
jb
sub
addl
jno
fwait
jne
addr16
stc
call
jb
lds
hlt
xchg
rcll
cmp
mov
sub
je
jg
push
mov
sub
and
lds
sub
mov
xor
lds
fisttps
fidivrl
add
mov
mov
and
pushf
mov
leave
lods
inc
loopne
xchg
sbb
loope
test
jo
outsl
int3
js
xchg
xchg
add
stos
pop
xor
or
push
pop
outsb
sbb
jbe
gs
lock
cmp
push
cmp
pop
out
sti
add
sbb
mov
loop
add
stc
jl
mov
and
jbe
and
icebp
sbb
in
shll
ss
gs
mov
mov
in
icebp
jo
xchg
lods
jp
and
push
leave
movnti
and
sub
call
cmp
and
or
and
and
and
mov
or
add
movsl
adc
mov
cmp
fsts
pop
push
cmp
pushf
jecxz
jge
stos
nop
lret
fs
jle
or
rcrl
mov
and
lcall
lds
mov
jae
ljmp
dec
push
inc
loopne
add
das
xor
adc
push
jne
inc
mov
dec
sbb
test
dec
jb
pushf
mov
xchg
jne
repz
push
mov
xor
mov
cmp
mov
dec
fcoms
cmp
xchg
les
inc
xor
scas
or
lds
clc
add
rcll
mov
xor
fisubrl
jo,pn
sahf
push
xor
out
lret
sub
fisubrs
adc
ss
das
imul
sub
fstpt
add
xchg
in
ffreep
rcr
popf
pop
movsb
lea
sub
jmp
shrb
data16
mov
insl
cwtl
mov
dec
aas
lods
ss
jg
sbbl
jbe
mov
pop
adc
lods
sub
fldt
clc
sbb
or
cltd
pop
loope
dec
ret
int3
cmp
fmul
push
cmp
into
ror
pop
shlb
stc
cmpsl
pusha
xor
mov
mov
mov
test
insb
insl
fcos
sbb
sbb
outsb
mov
and
js
lds
mov
cmpsl
repnz
in
pop
not
add
push
les
dec
dec
sbb
cmp
xchg
loopne
push
in
mov
cmp
push
fistps
mov
mov
frstor
push
fs
adc
sahf
xor
xchg
out
aas
and
cli
pushf
pop
xchg
shll
movsl
cmp
pushf
dec
addr16
dec
loopne
cld
js
test
lcall
nop
xchg
testb
testb
inc
les
adc
int3
aad
out
test
xlat
cltd
or
xor
mov
ljmp
in
or
fisttps
int
jne
add
dec
mov
xor
add
adc
cli
repnz
les
loope
sbb
push
xor
jns
out
mov
std
neg
insl
rcl
je
mov
mov
sarb
pop
xchg
in
aam
jnp
inc
fsubl
mov
push
stos
xchg
shlb
mov
lcall
or
cs
data16
test
mov
jae
mov
jb
pop
or
lods
rcll
or
fadd
les
aam
push
push
out
cmp
mov
outsl
lret
push
adc
jno
sbb
movsl
lret
xchg
sbb
or
daa
mov
cmp
mov
test
mov
insl
ljmp
negl
loopne
mov
mov
xlat
nop
jns
jmp
lock
cmc
fmuls
scas
test
inc
lock
xchg
iret
sar
insb
adc
es
xchg
popf
mov
jg
mov
sbbl
mov
adc
mov
jge
out
inc
in
inc
sub
nop
dec
cmpsl
roll
jno
icebp
xor
mov
xchg
adc
sub
subps
loopne
dec
jno
inc
jo
add
dec
xor
jb
push
mov
lret
xor
push
fiadds
cltd
outsb
jb
dec
mov
inc
xor
data16
and
cmp
sarb
mov
fldcw
lret
dec
fdivrs
cmp
mov
repz
fsubs
push
into
loop
mov
adc
pop
push
dec
dec
add
in
pop
xchg
call
inc
mov
movups
sahf
sahf
mov
out
push
iret
jne
fwait
scas
out
mov
repz
sbb
lret
xor
adc
imul
ret
xchg
into
das
dec
pop
scas
adc
xor
test
pop
push
jle
inc
ja
movb
aas
cmc
shrb
mov
lcall
pusha
js
aas
push
daa
stos
aam
jp
shrb
push
es
cwtl
push
mov
xor
hlt
cld
nop
inc
arpl
mov
in
sub
cmp
push
lret
iret
scas
mov
testb
pop
push
lret
sbb
into
cmp
jae
out
imul
push
cmp
mov
cmp
mov
push
sti
cmpsb
mov
imul
rorb
clc
xchg
xor
stos
nop
cmpsb
push
fwait
adc
lret
cmp
pushl
rolb
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
dec
jmp
popa
rcrb
or
prefetch
or
jmp
mov
cmc
inc
add
pushf
inc
mov
aaa
pop
movsl
mov
push
into
aam
or
arpl
std
stos
or
push
mov
push
mov
mov
pusha
sub
and
push
sar
cmpsb
insb
stc
jb
xor
fwait
cltd
std
or
insl
test
pop
cmp
cmpl
inc
testb
pop
add
push
push
ret
jl
add
sahf
insb
aad
repz
xor
xor
test
popl
pushf
sahf
arpl
into
clc
add
mov
push
adc
pusha
push
movl
or
andb
cmp
test
xor
mov
sub
or
xorl
push
cmpsl
test
shll
popa
xor
xchg
mov
popa
inc
mul
push
jle
lods
pop
imul
aad
dec
fdivs
out
sahf
jle
cmp
shl
sahf
add
int
in
pop
or
xchg
pop
pop
pop
mov
lea
mov
loope
mov
add
or
cld
mulb
and
shrl
push
fimull
int
xor
lea
sbb
dec
mov
inc
jae
mov
roll
mov
or
dec
gs
imul
into
mov
dec
ret
inc
inc
or
or
push
popf
pop
in
pop
mov
into
incb
mov
jne
lret
mov
mov
dec
or
scas
fdivrl
lret
stos
add
jecxz
popf
sub
scas
shr
out
shl
add
mov
mov
outsl
test
mov
dec
sbb
jo
mov
jb
fxch
mov
sub
add
outsb
inc
sbb
jle
fdivp
mov
neg
nop
test
scas
adcb
movsl
sub
mov
mov
shl
aaa
pop
sub
imul
adc
add
fwait
and
out
push
mov
mov
cwtl
fdivrs
xchg
sub
push
adc
imul
outsb
jle
mov
movsb
ja
addl
pop
cs
mov
sbb
cmpsb
xchg
ljmp
mov
add
and
sub
or
movsb
ret
xchg
sub
ja
pop
mov
xchg
cld
mov
js
mov
rcr
push
mov
loop
xorb
shr
aam
sub
movsb
subb
sbb
iret
jne
dec
dec
inc
inc
outsl
fmuls
or
add
sbb
dec
ljmp
pop
and
and
sub
xchg
cmp
mov
cs
add
pushf
repnz
jb
std
push
lcall
cmp
mov
lods
inc
out
inc
jno
inc
cmp
cmp
hlt
call
dec
daa
aad
sbb
and
cmpsl
add
jecxz
popa
das
sub
fwait
cmpsl
mov
mov
mov
icebp
inc
jae
inc
mov
jl
add
push
pop
mov
mov
push
sbb
pop
xor
mov
ja
test
push
pushf
push
jecxz
aam
xchg
mov
pop
sti
mov
jbe
mov
fstpl
sub
cmpsb
rcll
stc
loope
sub
xchg
dec
sahf
aaa
jg
lock
lret
ret
cli
mov
cmc
mov
jmp
lea
imul
cmp
movsb
cwtl
inc
test
pop
cmp
jle
mov
fs
jle
cmp
inc
in
push
xor
push
das
lahf
test
leave
fsts
fdivl
ss
jg
ret
sub
jg
jecxz
inc
test
fldenv
imul
inc
mov
cli
cmp
ja
pop
dec
mov
sbb
inc
ds
pop
or
dec
stos
jp
pop
xorb
hlt
daa
and
push
sub
outsl
xor
jp
aam
mov
mov
enter
cwtl
test
inc
cs
mov
dec
dec
push
mov
jb
fs
cmp
pop
orl
xchg
sub
lods
add
mov
cli
lock
imul
fiadds
scas
in
sbb
mov
clc
pop
mov
cmpsl
add
dec
sub
push
imul
lods
or
mov
cmc
dec
adc
jl
repnz
or
xor
stos
add
daa
xchg
mov
test
outsl
inc
xchg
mov
jae
or
cmpsl
pop
cs
test
jbe
xchg
mov
out
out
mov
or
push
mov
mov
sub
add
adc
ret
aaa
push
sub
inc
mov
or
adc
icebp
ja
out
leave
pop
movsb
filds
add
and
cs
push
sbb
mov
ret
lcall
je
fldt
jnp
ds
aaa
add
sub
mov
xor
sbb
or
cmp
pop
popf
fidivl
xchg
xor
fildll
je
test
mov
cmpsl
test
adc
jmp
push
add
jns
cmc
lds
and
js
cwtl
pop
sbb
mov
les
jge
scas
arpl
cmpsb
mov
scas
mov
mov
in
and
cli
push
lock
into
jno
adc
xor
adc
in
testl
dec
push
adc
mov
xor
loopne
cmp
mov
xor
dec
add
mov
nop
inc
jo
cmpsl
stc
sbb
inc
adc
push
inc
push
pop
clc
loop
jno
push
push
mov
mov
adc
mov
sbb
mull
mov
mov
cmpsl
mov
pushf
fimuls
cmp
or
cmpsl
or
fs
mov
jnp
arpl
xor
sbb
cld
push
out
ja
les
loopne
out
cmp
pop
inc
mov
xor
xorb
jo
cmp
ret
ss
and
adc
jno
sbb
dec
scas
sbb
ja
stos
sub
pop
mov
arpl
fidivl
mov
pop
inc
and
push
lahf
pop
sahf
jmp
je
add
repz
mov
sar
pusha
jecxz
ret
out
cmp
addb
mov
fsts
ret
sbb
lret
jae
shlb
loope
fnstsw
inc
daa
mov
lahf
inc
hlt
arpl
out
jecxz
sbb
sbb
addr16
lods
ja
lods
inc
fcompl
loope
rolb
push
aam
pop
and
pop
mov
jnp
lods
ja
xchg
xchg
push
in
xchg
mov
lret
js
mov
iret
mov
jge
jg
imul
push
fiadds
dec
aad
xor
shlb
mov
add
stos
mov
es
testl
aaa
shll
outsl
lret
rorl
xchg
mov
cs
adc
clc
xchg
lods
push
pushw
mov
and
xor
mov
sbb
int
jo
les
xor
lret
xlat
pop
mov
addr16
jge
push
out
fidivrs
arpl
mov
repnz
xchg
mov
stos
stos
in
int3
mov
push
stos
mov
push
push
pop
xor
inc
aam
loop
es
pop
xchg
fbstp
data16
fs
mov
mov
data16
loopne
jmp
ja
pusha
mov
inc
xchg
fmull
jno
fildll
addl
lahf
ret
xor
fs
ja
pusha
inc
nop
pop
nop
push
xchg
popf
sbb
in
mov
movsl
lods
pop
les
push
dec
cltd
test
shl
dec
fmull
lea
dec
dec
lahf
and
imul
stos
popa
cmpsl
cmp
es
sub
cmp
out
pop
mov
mov
cmpsl
fsubl
or
stos
push
push
js
cmp
je
hlt
mov
add
mov
inc
in
imul
cmp
les
mov
enter
bound
adc
push
pop
dec
mov
data16
clc
push
scas
cmpsb
and
jp
pop
xchg
mov
sub
stos
dec
sbb
adc
mov
das
cltd
inc
mov
mov
lcall
movsb
loop
jns
ret
mov
cmpsl
mov
test
jae
cmp
ds
or
xchg
add
add
int3
cmp
or
pop
push
inc
sub
cmp
test
mov
push
sbb
pop
mulb
in
push
jmp
or
ss
je
icebp
jns
cmpsl
xor
ret
mov
pop
out
cmpsb
cld
push
adc
out
sub
push
imul
mov
das
inc
jnp
sarb
and
jge
inc
popa
add
int
mov
push
adc
test
pop
sbb
or
dec
cmp
scas
jno
je
push
test
push
inc
cmpsl
adc
push
repz
into
mov
enter
inc
mov
les
pop
shlb
push
enter
push
inc
lds
js
das
outsb
dec
xor
jp
pop
jno
mov
pop
cmp
in
adcb
add
sbb
inc
mov
leave
cmpl
pusha
pop
lods
cmc
addr16
push
rol
cld
ret
mov
jae
mov
push
xor
jbe
fmull
xchg
adc
mov
scas
jb
lret
and
movsl
ja
pop
pop
daa
add
fistpll
push
pushf
jg
imull
bnd
add
sarl
movsb
test
push
mov
adcb
gs
cmp
leave
add
shlb
and
pushf
adc
dec
shlb
daa
imul
sahf
lea
popa
aaa
mov
sbb
pop
add
outsl
movsb
xlat
mov
push
add
pop
shr
push
insl
cmpsb
out
cmpsl
in
lock
pop
inc
cmp
sub
xchg
push
pop
lahf
pop
outsb
scas
in
popf
jnp
test
mov
push
imul
mov
dec
mov
xor
inc
inc
loope
inc
adc
enter
mov
fildl
int
test
into
or
out
pop
loopne
lock
inc
jnp
add
in
pusha
sbb
movsb
lret
pop
les
mov
nop
fwait
lea
add
jmp
jae
fsubl
or
mov
xor
jge
cwtl
xlat
pop
cmpsl
shl
jecxz
dec
mov
mov
lock
popf
loopne
add
hlt
pop
inc
in
in
xor
lds
out
push
pop
jmp
dec
push
sub
adc
push
jle
sbb
jp
pop
xchg
mov
mov
inc
mov
rcll
jle
mov
inc
and
fwait
cli
aaa
shlb
stc
out
call
iret
inc
int3
fistl
xchg
or
ret
pop
jbe
dec
cmp
je
pcmpeqd
in
outsl
flds
cltd
pop
xlat
xchg
jp
cwtl
sbb
hlt
push
bound
mov
aas
inc
rorb
mov
loope
or
cmpsb
aam
sbb
pop
lods
aaa
xchg
aad
int3
mov
test
mov
fnstsw
mov
inc
mov
es
add
out
in
dec
cmp
cmp
sbb
jl
ficoms
push
or
outsl
dec
jmp
addb
stos
addr16
ss
clc
aas
jb
push
dec
insl
sub
shlb
mov
mov
std
data16
mov
xlat
rol
repz
xorl
xchg
push
mov
lock
xchg
mov
add
idivb
adc
inc
sbb
xor
pop
adc
mov
pop
or
cmp
adc
cmp
nop
cmpsb
ja
and
pop
aad
adc
mov
inc
push
lods
lret
fisttpll
mov
xlat
fnstenv
jae
mov
mov
in
sub
gs
dec
pop
cmp
daa
adc
mov
jns
mov
mov
mov
fadd
ss
pop
jl
jne
out
mov
aad
shll
sbb
shll
xchg
sub
push
test
stos
dec
cmp
rcrb
add
pop
inc
inc
int3
xor
out
int
pop
xchg
fmul
int
inc
push
sub
scas
int3
pop
xchg
sub
jbe
mov
xor
loopne
loope
or
aaa
pushf
mov
sub
insb
jp
and
sub
lods
adc
popl
add
lods
fsubs
fstl
repz
xor
sub
scas
shll
sub
pop
add
cltd
ss
dec
int3
lret
mov
fwait
add
lcall
sbb
pop
cmp
cmc
movsl
bnd
adc
xchg
pop
lods
mov
sahf
movsl
fwait
lock
out
and
inc
lret
sahf
push
lods
js
lret
sub
sbb
cmp
jp
push
push
mov
jne
dec
xor
sbb
daa
repz
jne
scas
inc
dec
je
bound
dec
mov
rorb
repz
dec
dec
sbb
ss
ljmp
push
and
xor
mov
mov
xor
sbb
pop
xlat
push
cmpsb
fstpl
fldl2t
dec
or
mov
jae
inc
push
sub
sub
das
and
pop
mov
pop
dec
cmp
repnz
pop
aas
mov
loop
or
negb
testl
cmp
ret
sahf
lret
mov
incb
cwtl
pop
xchg
mov
cmc
fisubrs
xchg
mov
faddl
icebp
push
mov
mov
loop
xor
in
jmp
mulb
xchg
ficompl
mov
inc
test
leave
cmpsl
nop
sub
mov
clc
popa
stos
cmpsl
fnstsw
pop
lods
fwait
iret
mov
jmp
pop
pusha
adc
mov
xor
hlt
push
sbb
jmp
jle
ljmp
jb
in
scas
insl
mov
notb
mov
rcl
dec
mov
jb
xchg
aam
in
lret
mov
dec
xor
mov
dec
mov
xor
mov
mov
push
jo
jl
dec
loopne
pop
sbb
sub
cwtl
lret
and
mov
in
cmp
insl
clc
xchg
xor
lea
adcl
mov
pop
mov
fmul
incb
ja
mov
push
sar
xor
addr16
cmp
cmp
adc
clc
mov
scas
cmove
aas
xchg
out
sti
cmp
push
xchg
sbb
roll
cmc
aad
scas
adc
jo
and
in
gs
xchg
loopne
fsubrs
lcall
aaa
inc
and
popa
call
sub
mov
shlb
mov
aam
add
push
cmp
sub
sub
sub
mov
push
sub
adc
lahf
cmp
pop
xchg
mov
out
or
dec
fiadds
movsl
xchg
xchg
add
outsb
out
js
adc
xchg
inc
xchg
mov
shlb
outsb
movsb
xor
dec
cmpsl
ret
pop
lds
mov
xchg
mov
push
sbbl
movl
xchg
push
cs
dec
ret
xchg
mov
sub
mov
sbb
call
inc
loopne
jns
outsl
test
adc
sub
pop
imul
add
cmp
mov
jbe
call
push
pop
sub
loop
test
imull
call
push
sbb
adc
add
sahf
inc
loopne
mov
adc
shlb
insl
mov
repz
scas
inc
push
ret
test
sub
mov
jae
iret
sbb
dec
iret
rclb
sub
movsl
inc
jb
in
mov
sbb
sub
loope
sarl
push
mov
cltd
xor
in
jo
xchg
shll
jbe
es
pop
fdivr
aas
into
das
jmp
add
mov
dec
decl
push
jnp
mov
jno
xor
loope
xor
iret
push
or
sub
icebp
sub
into
int3
sub
inc
in
pop
jecxz
fwait
xchg
stos
mov
aad
das
jae
sub
frstor
punpckhdq
push
andb
pop
cmp
loope
fwait
movsb
out
xlat
inc
cwtl
sbb
add
fidivrs
push
push
test
shrb
popa
mov
xor
hlt
nop
loope
aam
inc
fxch
movsl
xor
repz
nop
outsb
sahf
popl
jo
adc
pop
xchg
stos
cmp
jno
push
mov
xor
mov
adc
fstpl
push
inc
mov
outsl
pop
or
sub
push
sbb
cmpsb
and
sub
call
sbb
dec
mov
leave
adc
and
inc
mov
and
leave
adc
sub
push
fdivl
jae
sbb
inc
movl
addr16
inc
mov
loope
xchg
insb
cmp
pop
dec
add
mov
mov
add
nop
lret
fucom
xchg
outsb
and
into
or
push
pop
jae
mov
gs
jge
mov
sahf
addr16
and
dec
inc
and
cltd
cmpb
je
rorb
in
in
pop
sbb
dec
aam
push
jecxz
scas
pop
out
loopne
xor
push
jbe
xchg
adc
mulps
jae
mov
loop
mov
filds
shll
sub
inc
fstpl
jae
fwait
jle
cli
mov
lock
shll
and
jmp
andb
add
aaa
icebp
cltd
inc
mov
imul
and
inc
sahf
sub
sub
jno
rcrb
inc
js
aam
dec
mov
fidivrs
movsl
loope
rclb
push
repnz
sub
pop
mov
rclb
xor
sbb
nop
fidivrl
xor
jle
cmp
test
mov
mov
mov
sbb
ret
sbb
and
fcmovu
and
call
in
data16
in
xchg
cli
mov
push
mov
mov
movsl
xchg
repnz
out
ret
inc
xchg
int
stos
add
push
xchg
sarb
xor
xchg
push
xor
lea
lcall
push
loope
jno
mov
fidivl
outsl
push
rcr
mov
sbb
aad
repnz
adc
ljmp
xor
add
call
stos
sbb
popa
mov
lods
dec
jns
jb
mov
push
inc
orb
ds
outsb
in
pop
inc
xlat
sarb
cltd
jb
stc
cmc
imul
xor
and
lcall
push
push
rorl
fwait
sbb
rolb
inc
movl
ss
xlat
outsb
lods
or
sarb
jg
stc
pop
hlt
pop
daa
mov
pop
push
sbb
sub
xchg
movb
int3
mov
or
fidivl
shlb
mov
rorl
push
out
xor
fildl
or
jb
mov
incb
adc
fsubrl
pop
mov
mov
adc
mov
mov
or
inc
pop
je
jp
cld
jle
pop
repz
addr16
mov
push
and
hlt
ss
int3
jl
decl
sar
inc
xchg
xchg
repz
ficomps
mov
mov
sbb
xor
jns
cld
mov
and
and
inc
and
add
std
scas
lcall
aam
into
mov
sub
popf
inc
inc
mov
mov
mov
sbb
pop
add
cli
jl
xchg
push
xchg
scas
adc
in
pop
jae
dec
insb
sbb
or
xchg
mov
pop
jl
jb
mov
jle
sub
lcall
push
in
ret
aam
ds
mov
movsb
mov
movsl
enter
fnstenv
ss
add
shlb
sbbl
dec
mov
out
mov
mov
lock
mov
adc
andl
lret
jmp
jbe
movsb
sub
aam
in
mov
in
sub
js
sbb
in
xor
in
mov
flds
xchg
push
adc
xchg
imul
call
mov
or
push
scas
fsubl
dec
push
mov
dec
fistpll
scas
mov
xor
mov
mov
cmp
loop
add
aaa
nop
xor
das
sub
and
imul
and
adc
dec
dec
push
mov
repz
mov
mov
sub
shll
je
insb
out
stos
xlat
push
subl
push
nop
loop
add
repnz
push
aas
pop
aad
pop
lds
shr
mov
cmp
mov
mov
cld
dec
into
mov
fldenv
int
aam
sbb
xchg
pushf
movsl
fidivl
xor
outsb
xchg
fnstenv
js
xchg
shlb
rcrb
pusha
jno
pop
out
fisttps
inc
in
and
push
xor
divl
pop
sbb
ficomps
xchg
push
cmpsb
xchg
pop
imul
cmp
fsubrl
or
mov
dec
inc
lods
cs
mov
pop
imulb
xorl
out
adc
xchg
mov
int
pushl
hlt
inc
fwait
pop
cmp
or
inc
cwtl
and
adc
cmp
je
enter
mov
fwait
xchg
sbb
cltd
sbbb
sbb
aas
test
mov
dec
ljmp
popa
cmp
out
jne
nop
pop
jl
mov
imul
inc
movsb
shrl
pop
cmp
cmpsl
mov
jb
inc
aaa
mov
dec
xlat
jg
in
pop
mov
pop
push
inc
repnz
loope
rol
jae
hlt
inc
inc
inc
mov
pushf
inc
mov
pop
xor
adc
ss
dec
bswap
popl
incb
dec
out
movsb
mov
push
pop
loop
cmp
cmc
mov
pop
pop
lret
dec
data16
and
adc
or
pop
adc
push
arpl
loop
or
ret
cmp
mov
ficoml
bound
jle
jne
cwtl
inc
sub
mov
in
jge
lea
xor
pop
cmpb
xchg
mov
add
mov
sub
dec
xchg
stc
sbb
add
push
add
fldt
mov
mov
jne
lahf
cmc
mov
push
or
mov
jp
jp
dec
pop
out
lret
insl
enter
mov
rcl
negl
mov
sti
sbb
sbb
cld
push
xchg
push
mov
push
cmc
xchg
filds
and
and
repnz
stos
mov
shrl
cwtl
fidivl
inc
jle
inc
cmc
incl
fs
repz
push
iret
addb
cmpsb
dec
addr16
mov
jl
push
sub
sahf
xchg
and
dec
pusha
xchg
dec
rcll
ficompl
imul
test
sub
push
outsl
fcompl
repnz
xor
stc
scas
inc
mov
clc
sbb
jae
xchg
xchg
mov
cmp
and
push
inc
adc
mov
inc
add
push
or
sahf
mov
ret
pop
enter
ret
add
cmp
or
fsubr
mov
dec
fwait
loopne
je
js
fsubrs
pop
pop
vpsadbw
push
pop
inc
mov
shrl
mov
notb
int3
enter
jmp
repz
or
pop
jcxz
outsl
xor
lock
xchg
push
test
sahf
aaa
fwait
add
stc
mov
movsl
jns
lods
inc
and
rcrl
dec
and
push
push
jmp
dec
lret
fcmovnbe
cmp
push
lahf
xor
inc
out
xor
out
aam
call
les
jne
and
and
cmpsl
out
es
jecxz
maxps
pop
push
rorb
sub
mov
pop
cmc
cmp
jns
cmpsl
cs
movaps
dec
ret
movsb
into
xchg
or
xor
int3
cs
pushf
add
je
push
adc
mov
iret
pop
push
ficomps
jno
cs
sar
jp
adcb
call
sbb
lcall
xlat
adc
pop
in
push
push
sub
pop
insl
addr16
popf
notb
pop
mull
rcll
popa
sub
loop
int3
cmp
popf
popa
pop
push
xor
mov
cmp
mov
mov
mov
addr16
repz
sbb
mov
aam
arpl
aad
xor
cltd
mov
pop
push
add
xor
popf
pop
into
js
xor
addr16
mov
cld
push
push
and
cmpsl
js
in
adc
cmp
pop
mov
push
mov
cltd
jmp
call
push
and
lods
stc
add
cli
pop
addr16
adc
ja
pop
add
pop
xchg
in
push
xlat
pusha
dec
xchg
lods
jnp
cli
jge
ja
and
or
jnp
mov
sbb
adc
out
test
out
out
inc
insb
xchg
push
cmc
loope
icebp
cmp
pop
mov
sub
shl
ret
fdivs
sub
in
xchg
adc
in
push
pop
enter
movsl
jp
shlb
sti
test
cmp
inc
mov
lea
ljmp
mov
xor
adc
int3
pop
inc
jae
imul
aas
repnz
test
push
adcl
push
ja
aad
jg
cwtl
jg
mov
push
lock
push
subb
fwait
cmpb
clc
fcoml
mov
xor
daa
pop
popf
mov
loopne
inc
mov
inc
ret
iret
push
nop
rolb
push
xor
out
add
xchg
sbb
mov
sbb
sahf
pop
std
imul
insl
add
xchg
add
jl
xchg
sbb
je
jo
int
jmp
lcall
int
mov
in
popa
jge
ret
cmp
sub
aam
cltd
pop
pop
aas
rorb
or
dec
xchg
subl
std
je
pop
sti
sub
aam
lret
shrl
mov
or
mov
aas
das
in
xlat
iret
loop
inc
xchg
add
insl
push
fldl2e
pop
jge
mov
iret
ljmp
cmp
push
mov
cmp
add
cmpsb
adc
pop
jmp
sbb
fcmove
daa
mov
popa
icebp
shlb
jp
lret
xor
out
bound
adc
mov
jg
mov
xchg
mov
xchg
out
sbb
lods
or
jbe
popa
xchg
jbe
dec
xchg
add
rclb
lock
dec
mov
ja
lahf
push
fs
cmpsb
mov
call
imul
ds
mov
mov
clc
jne
xor
xchg
push
cli
xchg
pop
jecxz
test
pop
rolb
scas
pop
in
jns
int3
ret
cmp
jne
mov
jb
lods
mov
orl
xchg
mov
mov
and
xor
push
cmpsb
mov
jno
outsb
pop
push
and
ds
mov
cmpsl
push
outsb
call
adcb
mov
test
mov
int
inc
cmp
ss
mov
mov
mov
jae
mov
jb
inc
test
inc
pop
rcrl
sahf
rcl
adcb
jge
sbbb
lret
test
dec
sbb
xor
movsl
xorl
mov
je
jge
nop
and
cwtl
add
gs
cli
inc
push
stos
in
push
mov
jne
push
add
dec
aad
push
push
je
cmp
out
push
dec
cmp
push
cwtl
popf
mov
dec
xchg
inc
dec
inc
dec
push
mov
cli
sub
imul
and
mov
mov
hlt
pop
pushf
or
cmp
pop
lcall
pop
lds
sbb
ja
insb
rcrb
movsl
jecxz
or
ret
test
sbb
in
dec
lods
push
fdivrl
cmpsb
les
into
mov
rorl
pop
idivl
mov
cltd
mov
int3
add
xlat
insl
or
add
test
push
mov
insb
leave
popf
outsb
scas
xchg
iret
push
push
mov
ja
mov
out
shll
adc
jo
inc
mov
mov
out
add
imul
sbb
mov
in
pop
dec
out
xchg
sar
mov
popf
sti
ja
inc
scas
push
cmp
push
or
andl
push
fsubl
nop
setb
sub
test
dec
xchg
lods
in
cmp
push
or
fwait
sub
mov
ja
ds
ficoms
xchg
xor
pop
repz
test
xchg
mov
jmp
and
push
repz
xor
cmpsb
jae
into
out
or
mov
sub
hlt
mov
std
push
adc
out
xor
mov
enter
xorl
fildl
out
push
pop
pop
adc
mov
mov
aaa
leave
cs
in
or
xchg
call
sahf
or
std
fists
jp
daa
mov
adc
cltd
xchg
clc
jnp
pop
sub
jmp
sub
in
ret
repnz
mov
cmpb
jmp
fdivrs
xchg
inc
rcrb
fdivr
or
mov
cmp
add
stc
jg
add
out
aaa
imul
insb
cmp
cmp
clc
sbb
adc
sub
sub
fsubs
mov
xor
mov
inc
rcrl
fdivl
sub
push
mov
les
jae
sti
mov
loope
mov
dec
rorb
fstl
fstp
mov
ss
jae
divl
or
pop
mov
pop
jbe
cmp
pusha
or
sub
repz
mov
adc
out
pop
mov
outsb
push
mov
popa
pop
mov
jns
mov
ljmp
lock
cmp
lods
icebp
imul
mov
mov
add
call
cli
fcmovnbe
push
pand
xchg
pop
jp
gs
dec
jl
scas
xor
icebp
dec
cmp
mov
sbb
scas
pop
clc
dec
mov
rolb
or
cmpsb
xor
cmp
out
xchg
rol
xchg
aam
or
out
push
arpl
pop
add
inc
adc
lock
data16
out
inc
test
adc
insb
jne
gs
dec
icebp
scas
ret
testb
mov
shl
add
cli
movsl
sbb
outsb
pop
pop
lock
jge
cmpsb
ror
inc
cmp
pop
mov
fs
sub
sbb
cltd
adc
cli
xor
int3
adc
xchg
mov
and
sbbb
mov
leave
mov
repnz
lret
int
xchg
pop
adc
pop
mov
arpl
dec
mov
repnz
ret
lock
hlt
rclb
mov
cmp
lahf
push
xchg
rcrl
out
dec
inc
jle
clc
sti
repz
mov
loop
jmp
sbb
jbe
fistl
cmp
jo
notl
iret
mov
scas
aad
popa
or
decb
cmpsl
sub
push
punpckhbw
mov
leave
fistpl
dec
sbb
mov
call
sub
mov
or
sub
jecxz
mov
enter
mov
cwtl
jae
sub
sub
scas
sub
cmc
xchg
fwait
lret
scas
sub
push
shll
les
mov
ret
xchg
mov
inc
xor
xchg
dec
sub
mov
and
add
pop
pop
repz
das
and
cmpsl
dec
push
and
xchg
movsl
add
push
inc
test
scas
sub
mov
jb
cli
add
aad
repz
add
dec
push
out
xchg
std
frstpm(287
orl
scas
lods
jb
xor
pop
dec
mov
fildl
jg
test
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
sub
rcrb
jge
push
sub
and
adc
inc
fdivrs
xchg
or
imul
dec
push
adc
sub
and
test
in
les
je
add
out
sbb
mov
xchg
pop
inc
xorb
js
push
gs
mov
sbb
testb
sub
ds
pop
loop
loope
data16
or
jmp
adc
pop
jl
iret
mov
dec
movb
sub
ja
jno
test
rol
mov
pop
in
mov
inc
fcompl
or
mov
loopne
cmp
out
iret
leave
jle
enter
mov
movsb
mov
cmp
into
pop
lds
jnp
push
jge
leave
push
cmp
scas
sub
leave
mov
xchg
out
out
js
jp
dec
loopne
add
nop
inc
lds
test
adc
xchg
repnz
insb
ret
xchg
inc
push
sahf
int3
lahf
adc
cmp
push
sub
dec
aad
das
or
das
or
mov
test
pop
xlat
dec
adc
shrl
shrb
pop
xor
ret
sub
scas
add
insl
xchg
and
mov
test
jge
sbbb
xchg
loope,pn
jns
lret
push
push
scas
jmp
repz
stc
mov
sub
mov
dec
inc
inc
sub
inc
sbb
scas
lds
jo
xor
push
out
push
ss
mov
push
push
aad
cmc
mov
aas
push
mov
enter
sarl
sbb
adcl
stos
ret
and
fucomi
jmp
dec
sub
in
inc
mov
adc
mov
fcmovnbe
add
aam
scas
mov
xor
dec
mov
cmpl
pop
add
pop
and
pop
ljmp
inc
insb
sbb
dec
cmovnp
dec
mov
push
lods
sub
xor
jmp
mov
push
pop
sbb
cmpsl
and
imul
mov
dec
hlt
mov
jg
sub
or
dec
dec
xchg
hlt
jb
add
mov
mov
aas
mov
mull
ret
xchg
fildl
fs
cmp
mov
test
cltd
sbb
scas
cmp
in
test
dec
push
int3
lcall
lahf
stos
fisttpll
mov
or
pop
mov
pop
lret
push
ret
pop
cld
mov
mov
loop
mov
das
rcll
sub
clc
mov
xor
stc
pop
aam
cs
sub
lcall
xchg
repz
popf
loop
insl
bound
pop
pop
scas
jb
mov
pop
pop
xchg
aaa
jno
call
mov
sbb
cmpsb
out
fs
shl
pop
jb
push
sub
bound
jmp
sbb
aad
mov
repz
xor
cld
ljmp
inc
adc
aad
iret
in
pop
addr16
sbb
scas
fbstp
jg
in
test
imul
jecxz
mov
push
or
mov
cmc
xor
sahf
orl
push
fs
je
testb
jl
sahf
dec
fimuls
pusha
sub
in
cmp
cmpsl
lds
jg
ja
scas
enter
cltd
push
mov
jo
and
xchg
lcall
xchg
add
jb
hlt
pop
cld
pop
mov
stc
insl
aad
pushf
insl
sub
mov
jle
movl
and
stos
scas
bound
ret
pop
inc
inc
sbb
xchg
or
lock
enter
jbe
mov
jle
insl
insl
jge
mov
sbb
mov
or
mov
mov
mov
push
mov
jne
aas
in
es
imul
call
push
ja
or
mov
pop
cltd
cwtl
mov
pop
pop
sahf
fs
es
lds
jae
add
addr16
jmp
xchg
inc
mov
cmp
sbb
pop
loopne
push
cmp
mov
mov
pop
fdivr
or
leave
mov
xor
mov
fucomp
into
push
and
push
push
mov
push
sahf
add
sub
ret
cmp
test
and
mov
stc
enter
sbb
outsb
jle
je
stos
add
dec
jp
xor
test
mov
inc
adc
jg
ret
mov
outsb
dec
aas
mov
jo
js
mov
sub
nop
mov
aas
outsb
xlat
add
sbb
hlt
je
and
inc
and
lock
stos
inc
xchg
int
xchg
xor
fmuls
ljmp
push
or
mov
out
clc
or
or
xchg
add
mov
pop
mul
add
lret
dec
mov
adc
mov
push
cmc
inc
mov
pop
repz
and
imul
mov
jbe
inc
jmp
mov
pop
sti
popa
mov
aas
xor
lret
mov
outsl
test
lahf
inc
lock
dec
dec
add
out
das
fucom
dec
test
xchg
out
sbb
mov
roll
ret
pop
xchg
dec
movb
jge
mov
cmc
andl
jg
xor
pushf
and
sub
pop
aam
xor
into
fnstsw
mov
mulb
xor
sarl
das
push
xchg
xchg
sbb
lea
enter
lea
fs
push
loope
xchg
test
adc
icebp
idivl
push
lods
push
mov
xchg
mov
mov
popf
xlat
shl
push
pop
cmc
add
mov
jae
push
push
push
mov
ret
iret
sub
sahf
aam
lods
jecxz
iret
cmp
in
fs
fdivr
sub
cmpsb
cs
cmpsb
movsb
js
loopne
fisttpll
push
pusha
add
xor
cmc
notl
les
pop
mov
jnp
mov
inc
in
adc
es
int3
inc
dec
les
and
pop
push
mov
jl
dec
mov
orl
add
mov
sbb
daa
pop
xor
lret
sbb
sbb
scas
mov
push
das
dec
jbe
mov
gs
push
std
or
cld
pop
push
orl
or
adc
mov
adc
aam
pop
xor
dec
mov
addr16
aas
push
cmp
sti
sbb
inc
aad
lea
aaa
inc
aaa
es
in
es
push
add
pop
sahf
add
fildl
xchg
daa
xor
aam
pop
push
push
sbb
mov
xchg
rcrb
push
and
test
fcmovnbe
or
packuswb
lds
inc
lret
sub
or
or
imul
adc
or
jge
test
loope
inc
fstl
xlat
sub
sbb
out
adc
shll
movsb
jnp
data16
mov
xchg
dec
mov
ret
test
and
jle
xchg
sub
adcl
cmp
aad
mov
pop
fxch
insl
xor
ja
addr16
jge
pop
outsl
cli
mov
mov
and
dec
daa
push
dec
xor
jmp
subb
mov
fistl
enter
or
adc
adc
adc
mov
sbb
femms
out
jl
out
mov
dec
and
dec
dec
test
pop
repz
cltd
jno
jmp
in
inc
xchg
movb
jae
push
push
or
mov
fcom
js
in
add
ljmp
mov
add
scas
imul
pop
push
rorl
stc
popa
pop
bound
xor
pop
test
jns
mov
lret
orb
leave
fwait
mov
pop
lods
push
jno
pop
mov
push
imul
sysexit
cmpsb
mov
pop
add
xorb
xor
and
fucomi
ljmp
sarb
popa
mov
mov
xor
test
pop
xor
leave
inc
shrb
das
test
mov
loop
popa
test
inc
inc
push
xchg
aas
stos
xchg
out
cwtl
ja
scas
xlat
adc
test
xor
scas
cltd
or
adc
adc
adc
subl
rol
outsl
sti
pop
imul
movsb
sbb
sbb
xchg
xchg
mov
lcall
and
mov
es
mov
arpl
cs
stc
addl
mov
mov
push
jo
mov
subb
add
cmp
or
stc
je
mov
sahf
add
adc
cmp
in
mov
pushf
fcoml
lods
in
popf
mov
adc
pusha
xlat
leave
and
xchg
xchg
fsubrs
push
sahf
aad
gs
add
xchg
rcll
fs
mov
iret
lods
cmpsl
and
jbe
test
fwait
xchg
or
mov
and
mov
adc
push
xchg
imul
sub
xor
neg
fsubl
or
rcrl
cmpb
mov
rcr
movsb
scas
mov
lret
push
call
adc
test
mov
ret
and
fstpt
and
dec
jno
cwtl
in
mov
adc
lods
shll
sbb
out
mov
mov
fldt
jle
xlat
fs
lds
sub
sub
bound
jecxz
jbe
mov
stc
mov
xchg
movaps
int3
das
inc
mov
lret
pop
push
in
stc
mul
sbb
and
inc
fnsave
out
push
lcall
dec
mov
es
pop
jo
mov
jmp
stc
sbb
cmp
push
mov
jno
jl
out
lods
hlt
mov
cmp
inc
repz
sbb
dec
ret
mov
mov
jmp
add
inc
out
mov
xchg
mov
jl
or
sarb
cmc
mov
movsb
imul
lods
mov
stos
inc
cld
push
xor
lock
lret
push
cmp
cmp
lret
adc
nop
push
mov
sarb
aad
scas
pop
inc
shl
jnp
sub
pop
xchg
std
cmp
xlat
out
mov
leave
es
jnp
lods
int
or
lret
jns
push
hlt
aas
fistps
mov
cmp
ret
call
and
lds
mov
and
cmp
cmp
dec
push
sub
out
rcrl
jmp
lods
iret
rorb
push
inc
das
loope
int3
push
sbb
rolb
mov
test
push
mov
fstps
xchg
out
sub
and
sahf
mov
leave
push
outsl
test
jmp
push
mov
mov
pusha
mov
pop
cmpsl
in
cltd
dec
or
loope
pop
lret
or
inc
dec
mov
psubusw
mov
adc
cld
aaa
cmpsl
jp
addr16
mov
in
pop
dec
add
mov
pop
lds
in
mov
sbb
jmp
push
outsb
inc
std
xchg
fs
pop
out
adc
sbb
push
lea
scas
pop
repnz
ret
in
cld
mov
or
jle
sbb
sahf
aam
mov
dec
pop
mov
out
push
fwait
loope
mov
and
mov
ss
dec
fwait
push
pop
fwait
mov
push
jne
xor
in
inc
sahf
sub
inc
lret
addr16
leave
add
orb
adc
mov
cmp
fimuls
jbe
and
add
in
xor
dec
lea
xchg
call
sub
cmp
aas
notb
nop
mov
int3
mov
arpl
push
lock
xchg
dec
cltd
test
rcll
lods
daa
dec
cld
sbbb
push
mov
cmp
aas
in
pop
fisubs
arpl
clc
outsb
sub
test
sub
out
mov
jae
sub
fs
push
out
cmp
xchg
mov
sti
scas
mov
add
ret
mov
into
icebp
dec
cld
mov
cmpsb
jge
in
inc
jns
loopne
adc
mov
out
es
sbb
jnp
sub
test
lret
add
lret
jge
sti
in
iret
ss
inc
lods
shrl
lock
pop
jbe
movsl
jl
lret
xor
mov
lds
lea
test
jnp
push
imul
fldt
cmp
dec
push
in
into
dec
xor
jb
test
and
dec
sahf
adc
imul
cld
ss
test
jp
lods
mov
arpl
cmpsb
mov
fcoml
sub
sub
imul
cli
test
cmpsb
sbb
sub
xchg
mov
leave
jns
cld
dec
lods
test
mov
clc
jno
out
and
mov
add
test
and
loopne
shlb
in
add
pop
data16
mov
sti
ret
test
xchg
jb,pn
aas
test
stos
xor
inc
arpl
mov
pop
out
cmp
cmp
pop
xchg
inc
xchg
and
push
adc
push
cmp
loopne
fwait
imul
dec
movsb
sbb
xor
inc
adc
insl
into
xchg
ror
lahf
or
xor
mov
push
cmp
dec
test
rcr
sbb
push
xchg
mov
inc
mov
les
xor
in
nop
inc
lret
int3
mov
mov
in
jl
inc
jno
les
pusha
int
imul
sti
pop
ss
pop
sub
mov
jg
aad
das
iret
xor
or
mov
mov
ret
mov
push
fs
daa
jmp
sbb
jp
dec
insl
push
xchg
inc
push
pop
xchg
push
push
mov
xchg
push
lea
pop
in
repnz
lods
mov
cs
sarl
sub
mov
or
subb
pop
xlat
inc
fldl2t
jae
cmp
in
fimull
loope
push
lock
popf
aad
orl
or
repnz
lock
or
mov
dec
dec
in
push
xchg
sub
popf
adc
and
lds
xchg
in
mov
hlt
out
xchg
push
and
cmpsl
cmp
inc
lret
gs
loop
push
sub
fisubrs
shll
mov
jmp
mov
jl
mov
mov
jg
mov
ret
das
push
push
jg
cld
xchg
insb
cmc
loopne
ja
dec
popf
or
ret
adc
jno
shll
out
popa
xor
or
mov
and
daa
cld
jns
outsb
rclb
xor
ds
test
inc
daa
outsb
xchg
jae
aad
cmp
push
sub
mov
or
mov
xchg
push
push
cltd
test
and
cltd
xor
xchg
insb
imul
dec
ljmp
subb
mov
icebp
mov
mov
scas
cmp
xchg
sbb
das
cmp
cmp
or
lret
adc
repz
add
mov
or
or
sub
pop
inc
cmp
adc
jecxz
cmp
hlt
push
sub
and
das
mov
addb
pushf
or
or
pop
adc
int3
pop
or
push
sbb
pushaw
fldt
test
ret
or
loopne
jg
into
cltd
cltd
push
cmp
push
add
test
or
cmpsb
rorl
mov
push
add
out
pop
scas
int
sub
pop
rcrb
imul
stos
test
lret
cmp
inc
pusha
inc
xchg
dec
push
daa
outsb
lock
clc
int3
lea
cmp
push
jle
fbstp
aam
or
fsubrl
rorl
jnp
inc
or
mov
aad
jnp
xchg
sub
mov
scas
and
dec
mov
leave
mov
or
mov
or
pop
jnp
adc
adc
call
roll
dec
das
mov
dec
mov
fscale
mov
push
mov
jp
xchg
inc
push
jge
adc
mov
jns
add
test
push
xchg
push
rcl
arpl
leave
int3
xchg
push
sbb
stc
and
outsl
test
repz
popa
push
adc
bound
push
scas
mov
fsubr
inc
fsubr
xchg
sti
lea
cld
jo
cld
jnp
pushf
or
sub
in
lds
inc
xchg
movsl
inc
fisttps
jg
je
xor
pop
mov
rorl
lret
cmp
mov
imul
push
lahf
mov
test
nop
dec
add
jnp
clc
inc
test
fstpl
shl
into
pop
dec
imul
outsl
inc
shrl
imul
repnz
mov
or
sub
mov
xchg
sbb
loop
push
enter
jge
mov
pop
pop
int
shrl
mov
or
and
xor
sbb
cmpsl
mov
pop
push
outsb
fstp
fstp
out
cmpb
pusha
xchg
cmpsb
cmp
loop
sbb
insl
xchg
jge
adc
sub
push
jae
adc
xchg
or
testb
sbbl
cmpsl
xlat
ret
or
cmp
cmpsb
insl
xchg
sbb
std
pop
out
pop
mov
xor
mov
dec
jp
mov
push
mov
ficoml
jo
popf
hlt
sbb
inc
stos
mov
out
jp
sub
imulb
dec
pcmpeqw
sbb
pop
mov
lods
mov
inc
popl
jle
fistl
and
xchg
mov
das
inc
mov
mov
jle
xlat
imul
mov
in
hlt
mov
lret
daa
lret
cmp
mov
je
dec
daa
sbb
jge
pop
leave
ljmp
ljmp
xorb
cmp
add
insl
mov
dec
inc
hlt
orb
jo
jl
mov
cmp
mov
dec
cmp
mov
mov
es
shll
push
loop
or
ret
xchg
cmpsl
lods
xor
adc
aad
scas
jmp
dec
xor
mov
add
and
scas
mov
test
mov
fldcw
jno
xchg
stos
mov
push
add
and
jbe
cmp
sbb
mov
cld
mov
fcomip
lret
stc
call
lods
fisttpll
gs
and
sbb
scas
xchg
or
cld
aaa
xor
int3
adc
iret
int3
jbe
rsm
xlat
add
push
iret
inc
lea
and
mov
mov
in
enter
stc
adc
es
mov
push
jp
ds
aas
lcall
mov
cli
adc
jbe
ljmp
fmull
mov
jne
adc
inc
mov
pushf
in
sbb
aam
xor
xchg
add
lret
mov
loopne
dec
lret
insl
mov
int3
stos
js
xor
iret
call
mov
mov
jle
add
aam
ret
int
les
addl
push
push
dec
or
mov
mov
test
xchg
mov
pop
jge
or
inc
mov
push
jmp
dec
inc
push
imul
jge
adc
test
sub
pop
js
inc
pusha
cmp
and
in
test
shlb
faddl
fcmovnb
lds
fdivrs
imul
int
xorb
ret
leave
jb
adc
inc
imul
add
sahf
pop
xchg
out
fstps
fabs
fld
jo
push
adc
mov
add
fdivrs
addr16
repz
insb
jbe
gs
or
xchg
jle
inc
ja
fstpl
sub
sub
decb
xchg
rcll
push
cwtl
into
ret
jecxz
dec
adc
loopne
mov
push
dec
dec
jle
push
add
xor
jno
adc
stos
add
mov
aaa
fcomps
fs
std
xchg
mov
aad
test
mov
mov
test
mov
sbb
add
test
rcll
test
daa
inc
dec
cmp
cmp
mov
iret
dec
add
sub
sbb
dec
mov
push
mov
in
xchg
sbb
fdivrl
fsubrs
push
aaa
lds
sub
jne
cmp
in
push
sub
in
js
mov
sub
lcall
sbb
sub
sbb
loope
or
mov
sub
cmc
jne
adc
int3
mov
xchg
outsb
sbb
cmpsb
lahf
insl
or
jge
adc
inc
add
ss
xor
sbb
mov
dec
enter
jns
mov
leave
sub
jne
arpl
inc
mov
pop
outsl
ret
ret
out
push
enter
hlt
add
jb
lahf
andl
test
arpl
add
in
pop
inc
je
jecxz
pop
imul
imul
push
and
lret
stc
icebp
sbb
iret
js
xor
stos
test
out
cmp
subl
sub
repnz
cs
xor
in
stc
and
aam
pop
mov
test
pop
and
or
pop
dec
xchg
inc
push
pop
sub
cmpsl
stos
outsl
into
fnsave
cmp
adc
bnd
jmp
sarl
adc
dec
stos
inc
push
ds
popa
shl
imul
add
or
sub
add
add
insb
mov
jnp
daa
call
mulb
jnp
dec
dec
xchg
adc
hlt
test
lea
cs
cli
imul
lods
loopne
cmpsb
mov
pusha
stc
mov
in
push
sahf
jmp
in
sub
je
scas
movsl
test
out
xor
push
sbb
sub
jno
test
xlat
test
rorl
sub
xchg
in
inc
cmpsl
xor
mov
fisttps
xrelease
mov
gs
fnstsw
dec
pop
das
fistps
jnp
cmpsb
imul
mov
movsl
movsl
or
dec
int3
loop
test
sub
cwtl
lds
xchg
jnp
inc
mov
shll
sbb
push
jnp
adc
ljmp
xlat
mov
jg
sbb
inc
fcmovu
dec
push
sub
cwtl
mov
mov
outsl
shlb
pushf
pop
mov
sbb
jmp
rorl
mov
dec
inc
orb
mov
cmp
ss
arpl
nop
mov
stos
ja
movsb
vfrczps
out
imul
jbe
in
loope
jl
repnz
iret
lret
cmp
fsts
xor
mov
xor
outsl
clc
ja
mov
testl
fs
mov
das
push
and
in
bound
enter
pop
sbb
sub
inc
xlat
fwait
mov
adc
push
jo
dec
sarl
dec
sub
add
mov
faddl
ret
shlb
xchg
jle
test
loopne
adc
int3
xchg
into
sar
jno
lret
lock
test
lahf
lods
adc
sub
jnp
mov
cmp
add
fmul
and
in
xchg
xchg
xor
xor
or
adc
bound
adc
incb
repnz
nop
pusha
psllq
fs
test
inc
sub
dec
mov
out
subb
cmpl
and
and
imul
je
push
stc
xor
mov
inc
dec
inc
mov
mov
xor
mov
dec
jp
lret
fcomps
stc
and
jl
int3
sti
inc
add
pop
popf
mov
push
adc
cmp
aas
xor
sub
scas
ror
jmp
int
xorl
inc
or
inc
stos
xorl
movsb
repnz
fldcw
jg
mov
sub
pop
fstl
fisttps
fstps
xor
mov
push
jecxz
mov
mov
add
cmp
psubsb
fs
xchg
outsb
sbb
rorb
sub
mov
cmp
xor
lcall
mov
fnstsw
inc
add
pop
sahf
xorb
xchg
ja
cld
mov
stos
xchg
jle
jge
sub
out
xor
and
push
sub
push
mov
xchg
stc
movsl
mov
cwtl
jmp
jbe
jmp
lret
adc
cltd
xchg
jle
mov
mov
mov
fcomp
aam
xchg
mov
sahf
jmp
mov
xchg
jmp
push
icebp
je
movb
jmp
fsubrp
neg
scas
push
lret
outsl
adc
xorb
into
xchg
sub
into
pop
add
lock
dec
adc
stos
or
imul
push
sub
pop
test
and
and
out
sbb
sub
xlat
cmp
sub
les
jnp
jo
add
iret
and
cmp
push
leave
sbb
sbb
cmp
pop
sbb
rep
sarl
jl
cmp
fiaddl
sbb
movsb
adc
mov
cmp
lahf
nop
mov
faddl
mov
shll
xor
out
mov
adc
pop
mov
mov
dec
sub
inc
pop
push
mov
sub
rcrl
dec
xchg
mov
in
daa
sub
adc
int
int
mov
mov
ret
loopne
aam
inc
sbb
xchg
and
repnz
pop
mov
cmp
or
add
cmpsl
leave
sub
and
fistpll
gs
pause
std
dec
cwtl
aad
ljmp
inc
gs
push
lahf
or
xlat
jl
out
fyl2x
pop
mov
jecxz
pop
mov
out
and
rclb
ja
scas
test
popf
sub
in
es
insl
dec
push
lgs
and
outsb
jecxz
and
or
scas
pop
fdivrs
loope
movsl
dec
jne
stos
maskmovq
in
lods
test
cmpsl
out
les
adc
loop
sub
mov
shr
push
inc
jnp
mov
test
mov
ljmp
ljmpw
push
sbb
gs
sbb
cmp
fiaddl
inc
aad
fdivl
or
xchg
jp
das
fsubrl
push
or
imul
jno
and
mov
loope
mov
xchg
xor
add
dec
leave
sbb
mov
and
ljmp
hlt
jb
push
push
sbb
fildll
push
mov
in
lds
testb
aas
or
leave
lcall
and
mov
sbb
push
outsl
mov
fs
pop
jns
mov
cwtl
hlt
push
mov
sub
iret
cmpsb
jbe
repz
mov
xchg
push
add
shl
cltd
push
xchg
pop
loop
mov
jbe
push
pop
inc
pop
int3
cmp
xor
stc
jae
xchg
mov
outsl
mov
push
lcall
jl
sub
addr16
xchg
jno
aaa
jnp
and
mov
lock
cmp
mov
jecxz
push
jl
or
xor
add
and
and
imul
inc
dec
fwait
ss
add
repnz
sub
pusha
push
ret
jmp
arpl
and
fbstp
loopne
mov
loopne
xchg
out
jbe
lret
jmp
push
repnz
xchg
divb
dec
lods
arpl
outsb
sbb
push
popa
sarb
aad
loop
pop
mov
mov
pop
add
fstpt
es
repnz
xor
mov
mov
lahf
jo
jmp
movsb
jne
ds
push
mov
subl
lcall
mov
ja
adc
scas
ds
jmp
jg
push
mov
pop
dec
sbb
cmp
cmpsb
sbb
subl
jnp
loopne
add
movsb
mov
lcall
jmp
mov
cld
dec
andb
shlb
push
je
ret
ror
negb
adc
pop
lahf
jle
mov
or
xchg
mov
jno
enter
sbb
push
xchg
jo
sub
fisttpl
shrl
push
jno
mov
pop
std
or
sti
xchg
push
lcall
xor
daa
mov
sub
sub
inc
or
sub
test
inc
inc
jbe
adc
cld
decl
add
push
mov
mov
pop
add
mov
in
mov
shll
push
andb
cmc
ja
jo
sahf
test
mov
mov
jns
jnp
pop
dec
outsl
adc
pop
loop
xor
pop
hlt
loop
cmp
xor
out
adc
into
push
inc
mov
dec
sub
mov
out
in
dec
inc
cmpsl
fstpt
test
setg
mov
xchg
inc
in
aam
popa
push
lods
xchg
and
and
fwait
addl
insl
inc
aaa
push
pop
repnz
orb
or
dec
sbb
lcall
adcl
mov
and
push
pop
push
jge
mov
mov
mov
and
xor
jae
sub
bound
lods
jne
inc
lods
lret
add
cs
cmp
or
movsl
inc
cmp
push
ficoml
mov
shl
push
push
pushf
nop
push
ret
ror
repnz
outsb
adc
leave
add
jmp
or
insb
adc
push
pop
adc
pop
pop
xorl
add
xchg
and
lret
int3
push
xchg
rcrb
je
bswap
xor
movsl
fucom
push
jg
xchg
lock
rolb
loopne
loope
cmp
lret
into
ja
je
andb
cmp
or
push
out
shll
add
lock
push
adc
outsb
rorl
push
int
push
cmp
push
cltd
andb
jl
jp
inc
mov
sub
imul
rorb
xor
aam
ret
xchg
insl
add
mov
jmp
pop
add
sub
lret
jecxz
arpl
pop
test
out
xchg
sbb
repnz
in
pop
cmpsb
add
or
xorb
xor
pop
sbb
xchg
or
insl
push
std
xor
push
xchg
ds
ljmp
popf
pop
lret
shufps
scas
les
cmc
clc
sub
lret
and
repnz
js
lods
popa
and
fbld
lds
mov
pop
sub
mov
inc
or
enter
mov
cmp
aas
add
outsb
pop
movsl
mov
mov
cmp
push
xlat
into
cmp
out
lret
mov
mov
dec
cmp
movb
adc
or
dec
pop
shll
push
in
or
mov
inc
mov
loopne
pop
sbbb
out
sarl
cmp
test
popa
das
fcomps
in
cltd
pop
xor
jmp
push
adc
jmp
add
adc
xorl
sub
test
ret
pop
jmp
cwtl
jl
mov
jl
lods
adc
inc
lds
test
sbb
les
and
aam
gs
int
adc
imul
mov
pop
insb
ja
ds
inc
cwtl
insb
int3
lahf
addr16
mov
or
shlb
or
mov
pop
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
push
jae
cmp
popa
rcrb
fs
sub
ja
fstps
push
call
xchg
inc
in
and
dec
jg
ret
cmp
iret
and
in
jns
xchg
movsb
rorl
outsl
rcrl
inc
dec
jo
repnz
pop
pushf
or
xor
jp
lcall
test
xchg
hlt
xor
icebp
jg
pushf
mov
pop
xchg
roll
in
pop
mov
subb
mov
fstpl
jbe
aas
aam
adc
notl
hlt
loopne
push
add
jg
xchg
mov
dec
decb
aam
daa
xchg
push
lahf
jb
cmp
cltd
rclb
fbstp
imull
or
mov
sbbl
daa
test
rcll
sahf
dec
bound
mov
and
dec
in
jbe
pushf
add
dec
add
sbb
rorl
in
dec
ret
in
cli
jg
sub
mov
repz
ja
add
adc
lods
push
bound
and
rol
push
mov
pusha
das
jl
push
das
ds
push
xor
jne
hlt
push
jg
mov
add
and
pop
stos
aas
dec
lahf
jl
mov
mov
sub
push
mov
and
rolb
mov
aas
testl
in
aas
adc
mov
xchg
inc
lret
or
loope
mov
stos
sarb
std
repnz
popf
out
insb
mov
pop
in
lods
pop
int3
int
loopne
stos
add
insb
push
insb
fwait
dec
inc
call
cmp
pop
je
enter
int
push
jl
je
sub
and
and
inc
xor
aaa
in
leave
fs
cmp
xor
mov
lret
mov
mov
frstor
mov
js
xchg
in
xchg
test
push
ss
sbb
cmpl
add
and
cltd
psrad
mov
xchg
clc
mov
mov
test
clc
arpl
mov
xchg
and
dec
sti
sbb
or
cld
xor
xchg
xor
shl
add
xchg
mov
je
push
leave
sahf
push
lea
xor
mov
xchg
int
insb
pop
lods
or
sti
fs
addr16
sub
test
dec
out
jnp
lods
xor
test
xchg
stos
dec
lods
mov
xchg
shll
xchg
jb
fwait
fwait
out
xor
shlb
pop
int
lahf
mov
and
int3
push
inc
dec
jg
das
adc
sbb
dec
inc
xchg
cmp
push
sbb
pop
mov
pusha
ret
mov
arpl
divb
rcr
xchg
mov
aaa
mov
mov
xchg
jge
pop
jno
stos
hlt
xor
rcrl
aad
mov
test
or
dec
jb
mov
add
movsb
in
push
jg
cltd
leave
test
ret
lcall
push
outsb
pusha
xor
pop
dec
outsb
cwtl
xchg
or
mov
mov
or
inc
mov
inc
push
imulb
and
mov
out
ficoms
mov
push
xchg
outsl
or
fwait
cmc
adc
xlat
mov
dec
pop
inc
or
or
sbb
mov
xor
pop
ss
outsl
mov
rcrl
daa
mov
cmp
lret
mov
sub
pop
xorl
std
orl
mov
jb
js
mov
push
ror
or
sarb
mov
xchg
xor
into
jmp
into
lock
enter
pop
jno
inc
xchg
sarb
and
nop
dec
xchg
sbb
inc
dec
fdivrs
push
xchg
jp
push
movsl
xor
incb
sub
lods
fisttps
dec
and
mov
out
inc
andl
sbb
popf
ret
sub
mov
fwait
mov
mov
push
fnsave
movsl
xor
ret
repz
sarl
rorl
fs
mov
sub
and
xchg
into
push
jbe
mulb
jne
cltd
popf
repz
stos
inc
push
lret
loope
dec
adc
jo
and
jecxz
data16
xchg
sub
cld
sub
sar
sbbb
aam
data16
adcb
mov
movsb
push
mov
mov
lds
js
jne
push
in
dec
imul
push
adc
mov
rcr
fwait
jbe
jecxz
test
jns
fcomi
mov
xchg
mov
sbb
add
mov
fdivl
mov
fiaddl
sahf
loopne
sbb
ss
in
sbb
addr16
scas
sti
pop
adc
jp
daa
repnz
hlt
mulb
push
xchg
push
ljmp
mov
out
xor
clc
dec
xor
movsb
mov
dec
mov
in
mov
pop
cmp
fidivrs
subb
hlt
movsl
stos
cmp
in
hlt
loop
inc
stos
pop
outsb
push
push
mov
or
sahf
cmp
pop
mov
lock
sub
jb
in
inc
xor
test
dec
nop
jl
les
pop
fwait
push
lea
or
les
mov
inc
mov
movsb
push
sbb
pop
cmp
ja
and
sbb
jae
les
pop
rcrb
mov
mov
mov
nop
dec
popf
mov
dec
dec
test
outsb
jmp
sbb
gs
inc
aam
fisubrl
sub
rorl
movsb
ffreep
lret
lret
mov
sub
adc
adc
daa
lds
and
sbb
or
mov
aaa
sahf
incl
xchg
xchg
inc
sahf
movsl
inc
xchg
dec
cmp
jnp
or
sti
mov
call
cmp
push
sub
add
mov
rol
pop
into
sahf
clc
out
cwtl
dec
inc
push
lcall
push
out
scas
adc
add
bound
popa
adc
or
aaa
cld
cmp
cmc
push
cmpl
mov
mov
jp
or
push
mov
lods
push
dec
orl
ja
jb
jo
imul
outsb
clc
pop
ja
xchg
jb
aas
rol
jecxz
pusha
inc
test
fdivrl
inc
fwait
and
add
fisttps
mov
and
jl
push
add
pop
ret
ja
rorl
lock
scas
jmp
in
jno
or
or
fisubrs
add
or
jne
incl
add
icebp
jbe
cmp
push
lret
or
scas
mov
mov
sub
xor
ret
imul
orb
pusha
push
cwtl
cmpsb
jle
in
aaa
mov
cmp
out
jo
adc
xchg
cld
cli
enter
push
orb
xchg
or
iret
sub
popf
test
mov
sarl
das
pusha
inc
mov
push
push
pop
ja
mov
lret
jge
mov
adc
and
ret
sub
in
roll
fsubrs
cs
inc
sti
push
aaa
aaa
movsb
dec
mov
inc
rcll
mov
das
mov
mov
xchg
pop
add
mov
addr16
sub
aaa
lret
ja
xchg
mov
mov
sti
lds
sub
hlt
inc
sbb
and
pcmpeqw
imul
jecxz
push
cli
adc
mov
das
add
add
decb
jae
lret
test
aas
sbb
pop
push
pop
mov
pop
int3
pop
mov
movsl
incb
mov
call
mov
lret
rcrl
push
icebp
sti
cmp
jne
cmp
push
jae
decl
stc
data16
mov
inc
outsl
pop
roll
fildll
ficoms
and
fidivl
dec
pop
mov
ret
jl
xor
stos
xchg
scas
adcl
mov
js
push
mov
mov
fiaddl
ret
or
pop
mov
xchg
xor
out
inc
fadds
mov
js
daa
cmp
jge
sub
pop
dec
repnz
pop
jno
pop
adc
sub
fwait
je
ja
push
stos
push
push
les
mov
add
push
mov
push
je
push
cmc
or
mov
xor
xor
jg
frstor
add
fiadds
mov
popf
test
dec
sub
ljmp
clc
pop
aad
gs
push
loope,pn
push
lahf
jbe
cld
xchg
mov
pop
push
aam
xchg
lahf
mov
loop
push
aas
jmp
int
mov
lock
mov
das
jmp
add
mov
cmpsb
inc
cwtl
enter
shrb
cld
add
and
jbe
out
adc
pop
popl
loope
pop
stc
out
in
es
mov
xor
pop
mov
test
enter
test
in
jg
mov
arpl
or
pop
mov
fbld
out
test
pop
fidivl
lcall
addr16
test
dec
xchg
dec
cmpb
push
mov
mov
pop
dec
sub
test
sahf
lret
test
lock
lods
push
orl
outsl
cs
aas
aam
xchg
insb
imul
sub
test
xor
sub
or
sbb
insb
push
sti
aad
out
pop
xchg
mov
push
call
sub
lea
in
ljmp
test
scas
xor
ret
xor
mov
add
push
iret
adc
imul
dec
pop
mov
lods
add
pop
cs
inc
mov
inc
inc
shr
inc
pop
xor
rcrb
fwait
stos
cmpsb
mov
nop
stos
imul
add
mov
adc
xchg
movsb
aad
movsb
clc
pop
fs
cmpsl
adcl
cmpsb
test
test
pop
mov
fidivrl
ror
inc
cwtl
stos
inc
mov
inc
leave
leave
xchg
es
push
adc
add
add
in
push
jnp
pushf
push
xchg
sub
fdivs
dec
add
lret
cwtl
aaa
lret
cmpsb
jne
xchg
lcall
jg
roll
push
xorl
aam
testl
in
jne
inc
loop
out
inc
rcll
nop
jbe
lock
das
ret
adc
nop
daa
lret
sarb
aad
push
fcmovnb
or
xorb
adc
leave
mov
lds
in
jns
outsb
xor
ds
pop
dec
out
jl
mov
dec
mov
arpl
push
push
inc
xchg
dec
mov
out
sbb
pop
pop
arpl
hlt
pop
aam
xchg
ss
pusha
mov
mov
sbbb
inc
cltd
lods
loope
cwtl
pop
lea
fbld
mov
es
subl
mov
or
mov
push
insb
push
out
add
in
dec
outsb
cs
xchg
dec
sbb
js
dec
cltd
lea
push
lretw
lret
pushf
int3
xor
and
nop
inc
jo
test
push
xor
inc
outsl
xor
cs
insl
sarl
sub
adc
push
in
adc
mov
sahf
fstpl
xchg
lea
xor
adc
sbb
dec
pusha
jle
mov
testl
xorb
xor
cmp
mov
mov
push
xchg
leave
cmp
rol
sbb
xor
call
iret
fistpll
xchg
sarl
pop
mov
jecxz
inc
add
mov
and
mov
and
xor
sbb
or
aaa
mov
mov
outsb
gs
jae
lods
leave
dec
clc
pop
mov
mov
insl
hlt
movsb
sbb
in
jo
mov
xor
pushf
mov
divb
jnp
jecxz
sbb
popl
push
xchg
mov
mov
sub
jmp
cli
insl
xor
jae
rolb
cmovle
pop
popf
test
orl
push
xchg
mov
dec
not
outsl
push
movsb
adc
pop
shr
inc
cmpsl
aam
and
mov
and
inc
mov
enter
stc
xor
jnp
mov
daa
add
rorl
cmp
pop
sbb
sub
cmp
or
fisubrl
adc
repnz
je
out
or
int
shll
push
pop
mov
fadd
sar
xor
or
cmpsl
aad
sub
push
in
mov
xchg
int3
popf
std
sbb
xor
mov
ljmp
inc
sub
mov
push
inc
cmp
pop
mov
fistpl
adcb
inc
mov
adc
mov
stos
pop
lds
mov
lock
cmp
pushf
fbld
jl
pop
or
inc
jbe
dec
enter
rcll
push
sub
sbb
arpl
push
cmp
imulb
movsb
pop
js
xchg
jb
mov
sbb
into
push
enter
icebp
stc
mov
mov
dec
ljmp
ss
inc
push
fs
pop
lahf
lahf
adc
xchg
jbe
fdivrl
xchg
pop
lea
jo
inc
out
pop
jle
push
sbb
mov
sub
push
cs
js
xchg
push
enter
jae
mov
dec
aam
cmp
lods
sti
push
into
or
jb
int3
fs
cmp
iret
sarl
xchg
xor
jecxz
xor
es
jecxz
cmp
push
xchg
and
into
cmc
pop
ja
fsts
ret
jle
pop
add
sbb
mov
jbe
enter
inc
in
mov
sbb
cmpsb
and
sbb
lds
jg
push
mov
pop
cltd
decb
cmp
es
lcall
in
jnp
push
es
dec
shrb
push
into
add
rol
dec
loopne
mov
cltd
rcl
ds
mov
jbe
out
insb
xor
lds
xchg
jbe
mov
dec
cmp
or
push
lahf
es
xchg
mov
mov
jp
cmp
push
pop
adc
pop
fidivl
sbb
popa
dec
in
mov
hlt
test
pop
inc
sub
sbb
addr16
ret
jb
dec
outsb
leave
popf
mov
nop
xor
sbb
outsb
inc
add
icebp
sti
insl
sbb
and
and
or
mov
enter
out
add
push
jmp
daa
cmp
sub
punpcklwd
jb
xacquire
pop
int
jp
das
bound
cltd
loopne
mov
cli
movsb
fmuls
jbe
xchg
sbb
push
sbb
hlt
xor
dec
ss
daa
lahf
andl
pop
fcmovnb
test
jo
xor
movsl
mov
fistpl
push
dec
pop
xor
jns
push
push
pop
jecxz
lds
imul
dec
hlt
pop
adc
jns
xlat
jbe
hlt
movsl
incl
dec
std
adcl
je
sahf
out
sti
or
ficoms
sub
arpl
mov
clc
js
in
shrl
out
daa
test
pop
inc
ret
sarl
inc
ficoml
fcoml
dec
fsubrl
xchg
idiv
mov
imul
mov
dec
jecxz
fucomip
in
xlat
mov
das
in
je
in
inc
jle
call
imul
and
cmp
in
xchg
push
pop
icebp
repz
sub
inc
gs
mov
fucom
mov
pusha
icebp
out
fstp
xlat
stc
mov
mov
into
sbb
out
mov
js
push
mov
stc
inc
fists
mov
jno
xor
bound
pop
loope
add
sbbb
cli
add
mov
mov
out
std
jl
xchg
xchg
pop
loop
pop
dec
aas
push
push
and
mov
sbb
addl
jnp
mov
sbb
push
outsl
dec
pop
outsb
dec
add
imul
aam
test
fisubl
jbe
es
jecxz
subl
call
out
xchg
sub
outsb
xor
lret
and
mov
or
mov
push
push
xchg
push
orl
xorl
in
out
js
mov
push
cmp
enter
daa
dec
les
sbb
int
dec
int
aas
cmc
sbb
xor
jge
mov
add
dec
push
pop
scas
push
std
sub
subl
add
sti
std
dec
push
adc
xchg
shrl
in
xchg
mov
sti
in
adcl
jg
sbb
cmp
jl
stos
mov
jmp
xchg
inc
in
mov
pop
ljmp
icebp
imul
rol
fsub
cltd
push
adcl
hlt
mov
push
and
dec
sti
inc
rcl
mov
in
xchg
pusha
xor
adc
lcall
mov
lods
clc
inc
imul
fadd
mov
mov
xor
stos
adc
xchg
pushf
outsl
mov
pop
fcomip
cmpsl
dec
sub
cmp
push
imul
mov
inc
cli
ljmp
inc
push
jb
pusha
cmp
mov
adc
xchg
jecxz
inc
cmp
dec
popf
fisttpll
sti
mov
add
adc
mov
and
sub
pop
cmpsl
jne
out
stos
enter
jae
dec
fsubl
fwait
cli
mov
pop
sub
inc
orl
jg
cld
mov
inc
test
sub
push
mov
and
pop
push
mov
xlat
fdiv
in
loope
sbb
sti
xorl
lea
pop
add
je
icebp
jb
fcom
add
rcll
sbb
mov
pop
xor
sub
adc
call
mov
arpl
aaa
xor
idivl
inc
arpl
cwtl
cmp
int3
fs
incl
out
mov
jmp
imul
pop
xchg
mov
jmp
push
xchg
push
xor
fiaddl
in
inc
pop
lods
imul
test
mov
jle
loop
in
jo
imul
pop
in
pop
sbb
loope
lahf
pop
xor
out
enter
leave
enter
dec
ds
je
aaa
inc
in
decb
jmp
xchg
pop
mov
jae
scas
adc
push
inc
or
push
jmp
mov
inc
adc
lods
xchg
daa
fidivrl
sub
cmp
mov
push
call
cmpsb
mov
and
fwait
xor
sub
xchg
jg
jmp
and
xor
cmpsb
mov
add
stos
subb
push
push
xchg
sti
jp
test
icebp
addr16
lds
in
lret
sub
shr
fimuls
in
lea
in
push
loopne
sar
cli
jb
leave
pop
pop
mov
adc
cmp
push
in
clc
lds
subl
xchg
lods
arpl
rclb
in
icebp
sub
repnz
mov
inc
testb
pop
jbe
int3
cmpsb
sbb
mull
adc
sahf
hlt
loope
jge
jno
arpl
inc
jo
js
lcall
push
lea
jb
add
stos
out
jbe
insl
movsb
sbb
fcoms
mov
mov
inc
lcall
movsb
or
insb
pop
clc
or
xchg
rol
mov
mov
push
pushf
xchg
into
scas
pop
inc
cld
pushf
sub
inc
int3
outsb
out
lahf
xor
mov
sub
gs
lods
dec
push
mov
mov
pop
inc
mov
inc
xchg
loope
xchg
jbe
loope
jo
outsl
insb
lcall
mov
or
adc
mov
ja
push
ret
xchg
enter
mov
scas
xor
sbb
and
push
test
mov
stc
pop
fbld
lret
sub
int3
add
jae
cmp
movsl
xor
sub
pop
jo
push
cmp
dec
frstor
add
sbb
clc
jge
cltd
test
mov
mov
add
es
test
mov
stos
sub
fdivp
add
pop
adc
stc
and
repz
push
inc
xchg
xchg
lahf
adc
bound
push
pop
into
data16
nop
push
lcall
pop
push
xchg
int
lds
adc
cld
aaa
push
mov
xor
sbb
mov
sub
test
popf
pop
das
outsb
leave
mov
mov
xchg
cmp
loope
jecxz
out
mov
push
icebp
xorb
mov
cli
int3
lods
pop
cmc
out
mov
stos
sbb
jne
xchg
push
outsl
jmp
push
sub
fisubs
xchg
stos
add
and
xchg
mov
add
out
jl
sub
into
aaa
aad
adc
aad
jnp
add
sahf
and
xchg
cmp
sub
adc
mov
dec
mov
adc
inc
sub
sbb
add
mov
out
je
pushf
jle
data16
cmpsl
mov
mov
test
xchg
in
mov
mov
add
cwtl
roll
add
fwait
jg
sbb
mov
adc
inc
push
hlt
faddl
sbb
cmp
orl
push
pop
hlt
fbld
rcrb
add
xchg
out
insb
sub
shlb
mov
out
cmc
push
aaa
stc
clc
jle
mov
xchg
inc
xor
lret
mov
pop
daa
loop
xchg
cmpl
dec
xchg
scas
mov
mov
das
fistpl
les
enter
xor
ret
ljmp
cmp
mov
push
incb
je
in
sbb
arpl
push
jge
xor
cli
les
xchg
push
dec
pop
loope
mov
out
pop
inc
cmp
push
mov
xchg
pop
clc
jns
rclb
repz
out
jp
cmpsl
adc
cltd
out
test
outsl
jb
iret
pop
mov
lds
pushf
out
mov
adc
gs
cmp
adcb
xchg
nop
pop
cli
fs
stos
shll
int3
bound
jne
lret
xchg
loop
ljmp
push
inc
push
lret
jnp
fistps
popf
std
leave
cmp
cmp
adc
sbb
rorl
mov
sbb
xor
and
mov
mov
in
clc
jle
fstpl
cmp
fstpl
push
je
xor
xchg
cmp
test
dec
pusha
and
xchg
mov
jmp
rcrb
or
dec
aam
nop
mov
int
js
xor
repz
sahf
aaa
and
insb
xchg
mov
dec
pushf
cmp
mov
or
pop
adc
daa
out
aas
pusha
inc
cmpsb
fwait
outsl
int3
mov
pop
push
pop
neg
ret
rcl
dec
data16
pop
pop
inc
scas
mov
call
lahf
daa
cmpsl
fcmovb
mov
enter
mov
mov
daa
inc
test
or
daa
stos
sbb
shl
or
iret
and
sub
in
imul
cmc
adc
push
and
lods
daa
or
sarb
lahf
pop
cmc
adc
xchg
cmp
pop
jmp
and
and
lock
adc
xchg
sbb
addr16
mov
movb
gs
movsb
xchg
xor
fs
xchg
dec
inc
call
mov
dec
add
es
lea
pusha
jo
dec
cmp
mov
lock
cmp
mov
leave
lea
inc
subl
cmp
rcll
jb
insb
adc
lods
movsb
shrb
cltd
sub
cmp
pop
jo
iret
ret
in
push
mov
push
pop
fcmovnb
and
mov
fcmovu
push
and
mov
cmpsb
push
std
xor
push
js
hlt
and
call
jle
aad
inc
aam
or
sub
loopne
fldt
pushf
pop
sbb
lds
cmc
int3
push
mov
lahf
adc
out
xchg
pop
inc
fldenv
cmp
xchg
shl
lock
inc
gs
movsb
jmp
mov
cwtl
popa
push
cld
movswl
jb
jmp
sub
pop
cmp
daa
cmp
outsb
xchg
xor
pop
push
outsl
pop
add
mov
push
adc
pushf
dec
pop
inc
das
jmp
stos
fidivrl
pop
call
mov
subb
or
scas
rcrb
rorb
sbb
lds
jp
adc
ss
pop
jp
push
lcall
aam
scas
xchg
pop
jno
or
push
out
fmuls
pop
xchg
loope
shl
pop
or
loopne
mov
adc
mov
adcl
push
jo
adc
es
int3
cmp
pushf
ficompl
pop
sahf
cmp
iret
adc
les
or
adc
push
push
fdivr
pop
pop
imul
and
arpl
sbb
or
scas
sub
mov
lea
jne
add
bound
xchg
inc
adc
or
push
movb
std
lret
scas
jle
in
ss
inc
je
ficomps
jp
fldcw
rcrl
shrb
push
rclb
movsb
jecxz
xchg
jmp
ficompl
out
in
jno
daa
test
pop
and
xchg
xchg
sub
mov
inc
xor
xor
out
push
push
sub
xchg
dec
cld
into
scas
scas
mov
call
leave
xor
inc
ss
push
ds
in
mov
mov
push
mov
rdtsc
testl
cmp
movsb
stos
xchg
cwtl
mov
cmc
mov
jae
clc
mov
ret
pop
mov
shrb
iret
aas
sub
and
dec
xor
iret
inc
mov
clc
xor
and
pop
add
orl
stmxcsr
xor
pop
cltd
data16
mov
test
lcall
xchg
bound
xor
mov
fwait
or
fs
cmpsb
and
dec
in
add
push
mov
jns
decb
xor
pop
fsubrl
fldt
out
mov
fimull
fadd
push
or
jp
movsl
dec
call
jmp
mov
notb
sbbl
fimull
mov
sub
dec
cmp
dec
fs
jmp
and
cmp
int
push
lods
sbb
test
out
mov
daa
mov
icebp
shll
out
imul
gs
xchg
pop
xor
dec
mov
cmp
cmp
jle
mov
pop
xor
xchg
sub
pop
or
add
push
push
xchg
test
movsb
sub
aas
add
mov
push
ljmp
idivl
outsb
frndint
sahf
or
shll
or
insl
dec
push
push
inc
lds
add
mov
repnz
lret
loopne
fidivrs
lret
inc
mov
or
int3
movsb
ds
pop
aad
mov
mov
mov
or
add
enter
shlb
xor
es
and
data16
xor
mulb
inc
add
lret
popa
mov
jbe
pop
cwtl
xchg
mov
fcmove
aam
movl
hlt
imul
mov
jbe
sti
idiv
sub
or
sub
xchg
cmpsl
adcl
adc
jo
sub
xor
or
out
add
mov
lods
mov
mov
imul
sbb
call
jb
loop
and
inc
push
cmpsb
mov
in
aad
ret
mov
in
xor
jmp
popa
inc
into
gs
pop
mov
push
dec
xor
mov
xor
sub
cltd
fsts
cmpxchg8b
jg
add
repnz
sub
leave
in
sub
sbb
cltd
and
fs
popf
pop
es
xchg
popl
and
add
imul
cmc
adc
out
cmc
je
lods
cli
xchg
les
sub
mov
leave
lods
sbbl
repnz
adc
jo
mov
xchg
xchg
sahf
cmp
and
push
and
dec
ljmp
stos
hlt
add
mov
dec
aaa
sbb
loop
mov
je
jb
jl
sbb
fsubl
or
and
addr16
lret
jnp
pop
jo
lahf
sub
adc
aas
pusha
lahf
fisubs
pop
push
das
adc
lret
scas
gs
xor
fisubs
mov
push
bound
push
out
dec
stc
adc
into
inc
cmpsl
cmp
cmp
incl
cmc
cmp
rorl
sub
rclb
imull
jge
push
cld
xor
mov
loope
xor
pop
sar
out
xchg
daa
push
push
xor
xchg
push
les
push
lods
rorb
mov
pop
sbb
mov
mov
fiaddl
push
adcb
pusha
mov
addb
bound
xchg
mov
lods
xchg
or
mov
sub
jle
ja
and
in
xchg
repz
je
dec
cmc
pop
cmp
fwait
loope
push
lahf
xor
and
or
inc
lods
fsubrl
lret
mov
mov
jo
or
imul
loopne
lret
das
add
and
in
mov
fucomip
mov
divl
cmp
shrb
fmul
stc
imul
jns
cwtl
inc
addr16
aad
pop
mov
push
xor
xor
gs
add
xchg
fists
imul
lcall
test
sub
jl
and
ret
adc
orl
pop
jmp
push
or
mov
mov
sbb
in
sbbl
pop
lea
cmc
inc
jmp
mov
rcrl
mov
arpl
les
mov
imul
sbb
xchg
mov
fidivl
rcr
mov
lods
cld
cmp
clc
mov
mov
jmp
xchg
insb
jmp
mov
ds
mov
jp
aaa
mov
xchg
mov
add
jbe
stos
adc
popf
push
mov
jmp
push
int
roll
xor
mov
jge
adc
lds
clc
jbe
shlb
xor
cmp
enter
test
pusha
xor
push
hlt
sti
push
imul
adc
pop
or
push
mov
fsub
dec
jl
sbb
push
and
cs
pop
or
psubq
lahf
lds
inc
test
mov
daa
sub
push
mov
rcrl
push
push
dec
into
or
xchg
mov
dec
inc
out
out
jb
std
rorb
mov
repz
cltd
cmc
ss
arpl
hlt
data16
or
xlat
adc
or
loope
dec
test
cmp
test
push
clc
sbb
lret
mov
xchg
mov
push
cwtl
int
lods
pop
outsl
add
sbb
imul
push
push
les
sub
cltd
sub
mov
testb
mov
sub
stc
push
addb
sbb
outsl
pop
lcall
xchg
mov
sbb
mov
scas
out
jg
in
push
and
mov
mov
mov
lds
xchg
cld
iret
test
jecxz
jl
aaa
clc
test
mov
cmp
ljmp
sub
mull
pop
or
cli
dec
stos
mov
arpl
mov
mov
or
clc
inc
xchg
jne
push
std
and
int
pop
pop
fistpll
mov
jno
mov
shlb
or
in
adc
mov
add
adc
sti
dec
imull
mov
dec
mov
lahf
cmp
insb
enter
mov
sbb
xorl
cmp
mov
sti
lock
pop
jg
fs
js
insb
dec
dec
fsts
pushf
test
inc
fs
bound
in
mov
aaa
bound
mov
pusha
dec
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
test
popa
bound
bound
xor
repnz
dec
push
rcr
inc
cmp
je
mov
and
ss
adc
jg
fnop
xor
inc
mov
jmp
rorb
mov
xorw
pop
fcoml
inc
sub
mov
out
pusha
dec
mov
scas
or
outsb
or
cmp
div
jae
mov
and
out
sub
loope
jb
jmp
mov
xchg
sub
mov
push
xor
push
cmpsl
jge
jb
fiadds
fmuls
je
sub
repnz
inc
addr16
sub
test
mov
or
mov
out
mov
mov
push
clc
cmc
jecxz
fidivrl
adc
xchg
push
pop
rcll
js
or
aam
mov
rorl
sti
nop
inc
cmp
and
repnz
cmp
inc
fdivrl
push
dec
dec
mov
push
ret
mov
int3
clc
fsubrs
xchg
fadds
mov
lods
repz
adc
mov
bound
test
icebp
push
hlt
mov
cmp
std
outsl
shrl
mov
sbb
sahf
leave
push
mov
test
sti
xchg
aam
mov
pop
sbb
mov
and
xor
and
outsl
cmpsl
push
and
sub
das
or
pusha
imul
sub
or
sbb
enter
jp
push
test
pushf
xchg
es
jb
pop
jl
shrb
sbb
cltd
andps
popf
mov
int
mov
xor
add
cltd
and
xchg
out
and
pop
clc
mov
pop
adc
push
sub
sbb
push
push
sub
cmp
mov
ret
cld
jo
movsl
jae
mov
xchg
push
repnz
mov
mov
pop
pop
orl
lods
xchg
jae
int
mov
popf
jno
mov
jp
shl
imul
pop
dec
sbb
mov
out
cmp
sbb
pop
mov
imul
xor
addb
je
imul
and
jbe
sub
andb
push
xor
adc
sbb
and
xchg
adc
adc
ret
fnsave
test
adc
nop
movsb
xor
cltd
jbe
fiadds
adc
or
inc
in
mov
add
mov
in
sbb
jle
cmp
test
mov
fdivrs
push
insl
mov
loopne
jae
jmp
insl
jecxz
jne
jb
xor
mov
nop
pop
push
js
mov
or
les
mov
insl
fst
push
je
out
mov
ret
jle
push
pop
lret
ss
es
push
or
xlat
dec
mov
mov
aad
xlat
out
cmpsl
add
push
or
sub
pop
inc
xor
pop
ja
in
xor
mov
lret
inc
mov
mov
les
lret
lods
popf
xchg
pop
pop
mov
lock
fs
out
mov
xchg
xchg
fwait
scas
cmp
ja
push
je
sub
pop
xchg
inc
mov
pop
cmp
lret
sbb
sti
push
test
lret
pop
push
pop
dec
adc
arpl
fldcw
push
ja
clc
or
ss
into
pop
xlat
out
mov
mov
sbb
jae
sub
push
fs
cmp
enter
dec
dec
xchg
vmovd
stos
mov
xlat
mov
cmp
jns
pusha
dec
and
mov
jecxz
in
mov
es
jns
test
in
jne
xor
sbb
out
add
push
int
pop
mov
fwait
std
jecxz
fstl
pop
push
xor
and
lods
incb
movsb
and
sub
push
jecxz
mov
mov
cmp
call
inc
xor
xor
push
add
ss
cld
or
and
cmp
push
out
jbe
repnz
and
or
or
out
addb
movsl
cmp
sbb
dec
jl
mov
add
fmull
icebp
pop
out
xchg
xchg
dec
rcll
mov
sub
pop
mov
xor
sub
rorb
xor
cmp
and
or
sbb
std
nop
je
mov
inc
or
jae
out
pop
mov
or
out
gs
sub
lret
add
subb
or
gs
jne
add
loope
cmp
jmp
xchg
jnp
iret
inc
mov
dec
mov
daa
lahf
fwait
pushf
push
aam
inc
rolb
inc
adc
pop
jb
fldenv
dec
add
cmc
add
in
aaa
inc
xchg
pop
call
xchg
inc
xor
inc
call
sbbl
push
mov
and
jnp
mov
jb
adc
sub
xor
push
dec
test
fwait
into
stc
mov
xor
push
or
outsb
leave
lods
mov
sarl
mov
dec
aam
mov
ds
and
adc
jae
daa
jg
scas
call
inc
dec
sbb
jne
shrb
pop
mov
rcrb
enter
or
jb
cmp
xor
in
lahf
ret
mov
cli
arpl
arpl
mov
rclb
sub
js
fs
cmp
xchg
cli
std
aaa
mov
fsubrl
aaa
outsb
or
ljmp
inc
push
int3
pop
sbb
arpl
ret
mov
inc
pusha
call
dec
aas
sub
lods
aas
leave
ja
lods
test
out
mov
xchg
leave
shlb
mov
lock
imul
push
loopne
test
insb
xchg
aam
mov
inc
aas
xor
xchg
jmp
and
adc
je
sub
xor
xchg
jle
nop
fistps
ds
inc
dec
mov
mov
addb
das
mov
sarl
loop
lahf
and
push
cmp
mov
mov
cs
jl
test
mov
or
repz
repz
jmp
arpl
sbb
rcl
push
in
or
and
lea
pushf
jmp
shll
cli
dec
sbb
mov
mov
js
xchg
lcall
repz
pop
std
loopne
push
mov
fsubrl
sarl
and
testl
xchg
daa
insb
pop
or
ljmp
outsb
dec
setp
mov
or
mov
pop
sbb
mov
lods
sbb
clc
jno
inc
add
sub
jle
mov
cmp
cs
inc
cmpsb
mov
data16
jo
fcom
iret
jne
pop
jb
call
movsl
in
mov
dec
outsl
dec
imulb
sub
shlb
jg
cld
fwait
cmp
lock
push
jns
sub
mov
inc
sbb
push
ljmp
xor
gs
outsb
fwait
jb
mov
daa
fnsave
pop
lcall
fildl
cltd
stos
movsb
push
xchg
test
mov
dec
divb
mov
nop
into
stc
jnp
pop
xor
fisubrs
jno
jl
stos
mov
insb
or
xor
mov
inc
mov
popl
enter
sub
jae
in
add
xor
mov
mov
jns
outsl
pushf
mov
mov
jle
sbb
sahf
mov
mov
jle
sbbb
jge
or
push
gs
mov
test
cmp
mov
xor
popa
inc
sahf
sub
fcmovnbe
fwait
stos
repz
mov
or
ss
push
dec
das
cmc
xchg
mov
cwtl
ds
mov
mov
mov
lret
dec
xchg
or
pop
jge
dec
sub
fimuls
or
into
ret
inc
add
or
enter
mov
jl
adc
lea
pop
lds
mov
or
ret
mov
ljmp
xor
cmp
xor
inc
scas
aad
mov
leave
fst
mov
push
fcomip
mov
dec
scas
adc
pusha
or
dec
add
xor
cli
loope
stc
jb
sbb
mov
sub
imul
ljmp
lods
sahf
pop
in
jp
add
std
mov
mov
adc
lock
icebp
stc
mov
scas
push
inc
add
jp
daa
xor
push
jbe
adc
hlt
add
push
add
pop
cltd
fstl
sub
or
sbb
pop
int3
cmpsb
pop
or
or
gs
pop
lcall
add
cmpb
in
das
cltd
and
adc
or
or
mov
jecxz
xchg
mov
sub
xor
lret
sub
cmp
mov
aam
ret
or
addr16
dec
imull
push
mov
rcl
faddl
sub
mov
xor
ljmp
sub
add
or
jbe
pushl
ss
adc
mov
sarb
test
scas
les
das
jg
adc
adc
fmuls
cltd
mov
inc
add
or
jle
leave
cmp
push
mov
push
dec
push
mov
and
shl
stc
nop
ret
cld
sub
sarl
adc
popf
jo
aam
pop
enter
push
add
fistps
mov
mov
les
push
xor
jo,pn
cmp
mov
lret
shl
push
and
ret
dec
dec
das
push
rcr
inc
cld
inc
cmc
push
sbb
pushf
pushf
or
jle
jge
outsl
mov
jmp
mov
jl
adc
jecxz
or
movsl
jecxz
test
std
cwtl
lret
ss
xor
lret
jp
xchg
lock
mov
adc
popf
mov
aas
dec
setl
jmp
or
xchg
push
push
sbb
imulb
loope
mov
push
test
sbb
mov
mov
cltd
dec
mov
xchg
sbb
fadds
push
ret
jbe
lret
imul
xor
gs
and
mov
test
leave
jp
add
xchg
sahf
and
jae
adc
fadd
mov
sahf
and
or
cmc
lahf
xchg
repz
in
jno
nop
mov
sahf
sahf
fstl
pop
push
or
push
lods
xchg
push
mov
cs
inc
jnp
imul
dec
or
xor
add
or
je
push
mov
cwtl
add
and
xchg
into
push
js
xchg
ret
stc
test
rcr
cmp
fnclex
add
xlat
dec
in
in
adc
sbb
call
enter
scas
mov
push
mov
jb
inc
stc
negb
mov
xchg
mov
or
jbe
push
addr16
mov
ret
repz
xor
adc
sub
cmp
repz
xlat
clc
fs
inc
push
or
lock
mov
leave
jne
call
inc
sar
popf
xor
jbe
cmp
push
or
pop
negl
or
loope
cltd
pop
test
das
cmp
sbb
mov
mov
xchg
inc
leave
dec
aad
ds
nop
push
mov
orl
sarl
clc
sub
mov
into
scas
dec
mov
fsubrp
inc
jmp
arpl
repz
and
faddl
mov
popf
scas
aaa
jnp
sbb
fisubl
xorl
push
iret
in
mov
push
push
dec
xchg
add
daa
out
mov
imul
and
test
inc
movsb
or
out
stos
in
pop
jne
mov
dec
add
jo
enter
or
push
or
dec
negw
xchg
dec
cmp
mov
pop
push
push
fucom
mov
lods
adc
daa
mov
adc
cmp
jmp
cmp
inc
dec
cmp
mov
push
sub
jmp
pusha
dec
cmc
xorl
cs
cmp
test
pusha
icebp
xor
icebp
push
pop
mov
xor
les
mov
xor
add
mov
inc
mov
inc
out
mov
inc
ret
jmp
cmp
cmc
fwait
into
mov
mov
inc
inc
xlat
movsl
in
add
stos
addl
push
popa
xchg
pushf
test
aam
popa
cmp
das
aaa
xor
cwtl
repnz
push
mov
xor
dec
aaa
sbbl
sbb
jmp
repnz
jmp
add
or
mov
add
out
inc
insl
aam
xchg
pop
push
lds
cmc
das
mov
pusha
pop
pop
jp
rcll
or
mov
rorb
mov
nop
mov
jo
xchg
addb
scas
jl
add
mov
mov
aaa
stos
cmp
and
fxch
jb
or
cltd
mov
mov
cmp
test
je
shlb
mov
fstps
and
loop
into
mov
dec
into
mov
out
mov
sbb
cmp
xchg
cs
mov
jo
inc
sub
hlt
movsb
clc
mov
mov
push
mov
add
lea
sub
sbb
sbb
xchg
mov
outsb
outsl
mov
in
push
outsb
adc
or
repz
cli
mov
xchg
or
inc
lods
pop
arpl
mov
mov
mov
cwtl
sub
into
cli
mov
adc
dec
int3
rcll
xchg
mov
jns
mov
mov
in
sarb
and
into
hlt
jno
sub
mov
test
ljmp
jb
adc
mov
and
lods
pop
mov
adc
cmp
push
mov
push
mov
pop
inc
or
sub
fnsave
scas
push
cmp
ret
cmp
dec
lds
push
movsl
push
adc
gs
ds
lock
ds
pop
add
pop
ljmp
adcl
out
test
lahf
lret
fnstenv
fsubl
or
fs
pop
pop
mov
mov
nop
push
dec
cmc
mov
inc
xor
push
xor
mov
and
out
aam
test
jecxz
mov
push
orb
and
outsl
repz
jnp
mov
adc
pop
testb
mov
enter
lea
adc
mov
push
sbb
mov
and
mov
mov
push
je
inc
lcall
test
jge
sbb
cmp
cmp
dec
imul
push
pop
stc
cmpsb
popf
outsl
loop
cmc
mov
test
addr16
into
or
or
jb
stos
xchg
shll
pushf
add
jmp
pusha
mov
push
pushl
lea
sbbb
jge
mov
fwait
mov
insb
cmpsb
insl
shlb
sub
mov
movsb
fstps
subb
stos
mov
es
add
and
inc
nop
arpl
add
jnp
out
rcrb
js
push
lock
lret
pop
int3
adc
cmp
mov
push
or
dec
aaa
sub
iret
cltd
mov
ficompl
xor
rol
jo
pop
adc
in
jbe
rorl
ja
push
xchg
sahf
loope
add
fldenv
movsl
adc
xchg
adc
lea
fnstenv
dec
or
or
int3
add
mov
in
shlb
nop
push
vmulss
std
outsb
mov
jo
push
push
lret
mov
loop
mov
enter
dec
cmpsb
lcall
pop
inc
mov
sbb
ds
jl
dec
lods
pop
sbb
arpl
addl
iret
cmpsl
lods
xchg
mov
stos
lods
ficomps
pcmpgtd
test
call
inc
push
mov
sub
inc
test
mov
loope
jg
inc
push
or
dec
shrb
inc
int
je
in
jnp
mov
push
mov
cmp
scas
add
outsl
xchg
lret
and
iret
mov
lcall
loopne
mov
cmp
test
add
mov
jle
rorl
or
inc
mov
push
in
or
push
add
cmpsb
mov
cmc
fmuls
cmp
adc
mov
mov
sbb
sti
std
adc
je
ret
outsb
in
scas
push
mov
aam
decl
xchg
xchg
leave
sub
push
out
fadds
mov
jle
push
mov
mov
lcall
gs
mov
dec
fnstsw
jmp
xor
loopne
dec
aam
in
mov
inc
lret
xchg
stos
aad
movsl
inc
cmp
inc
leave
xchg
int3
push
inc
addr16
into
jbe
dec
dec
jge
mov
outsb
xchg
pop
dec
lods
dec
push
test
cmc
movsb
mov
pop
dec
cmpsl
mov
insl
xor
pop
mov
mov
in
or
cli
lds
push
sub
lock
xor
sbb
ror
push
sub
cmpsl
lods
and
mov
rcll
stos
jg
xchg
lcall
cmpsb
xchg
adc
subl
or
pop
fldenv
lds
mov
mov
es
clc
stos
cmp
mov
into
ret
push
mov
fwait
add
cld
in
and
push
or
mov
fldl
in
fistps
loopne
dec
fsubrs
ficoml
mov
jbe
mov
mov
push
into
pop
out
adc
clc
mov
xor
jmp
jne
ret
leave
jle
sarl
or
adc
out
pop
das
fistps
mov
shrb
out
mov
and
fs
mov
push
xchg
cwtl
mov
cmp
push
mov
icebp
popf
add
jb
inc
nop
jno
rclb
or
in
dec
mov
fistl
push
std
out
pop
js
outsl
loope
pop
aad
das
push
fnsave
outsb
in
jl
jns
jp
mov
mov
sahf
sub
fisubl
or
mov
movb
dec
nop
xchg
int
pop
aam
mov
push
sbb
push
dec
adc
imul
lea
hlt
mov
mov
lods
ror
jb
mov
inc
rclb
sbb
test
shl
sbb
cld
addb
insl
stc
in
sbb
stos
jnp
or
aas
pusha
add
fdivrl
pop
leave
jns
outsb
push
xor
mov
mov
insl
in
adc
sarb
and
jmp
fucomi
data16
int
insl
jns
jbe
icebp
out
lods
hlt
lret
js
outsb
jb
ret
in
es
lahf
outsl
push
push
popf
out
mov
cld
aas
movsl
xor
dec
ja
out
fidivl
rorb
imul
pop
xchg
dec
test
mov
xor
inc
hlt
sub
daa
mov
mov
dec
push
fwait
test
into
jp
fmulp
push
in
outsl
pushf
fldl
xor
imul
inc
mov
xchg
imul
sti
cmp
xchg
pop
dec
mov
xchg
lods
in
xor
into
inc
imul
push
ret
imul
div
fdivrl
outsl
iret
insb
push
mov
in
rorb
add
lds
arpl
ja
add
sub
lcall
add
dec
shlb
cld
push
push
xor
and
out
xor
mov
dec
sahf
in
int
mov
jns
xchg
and
lret
pop
lock
xchg
adc
jmp
and
cmp
insl
inc
push
pop
movb
fmul
scas
mov
push
inc
aas
wbinvd
addr16
cvttps2pi
outsl
sub
jmp
adc
fcoms
iret
aam
jge
adc
mov
sbb
rorb
adc
shrl
and
adc
cmp
enter
jno
test
jae
ds
push
stos
scas
xchg
mov
push
dec
inc
into
xor
ja
jbe
mov
jnp
lretw
and
out
push
xchg
mov
cmc
jnp
notl
daa
popa
ljmp
dec
out
sbb
sbbl
pop
idivb
adc
fwait
test
push
icebp
mov
jmp
inc
cli
int
sub
loop
callw
repnz
std
sbb
adc
or
or
push
xchg
sbb
pop
or
adc
inc
mov
aaa
aas
push
repz
and
into
xor
out
push
adc
test
js
lea
xchg
push
loopne
mov
mov
popa
scas
and
out
cmpsl
ret
cmp
push
loop
es
cltd
out
push
cmp
sbb
clc
mov
pop
cs
push
xor
and
and
mov
out
pushf
pop
push
hlt
add
mov
mov
sbbl
push
mov
pop
xchg
gs
mov
aaa
mov
rorb
cld
insb
in
pop
insl
add
xchg
fistpl
lcall
mov
adc
jbe
lcall
jae
pop
xor
addr16
mov
or
jp
into
pop
inc
cmpsb
jmp
fists
jmp
push
mov
and
mov
fsubl
sbb
arpl
cmpb
cli
xor
lcall
inc
aad
mov
stc
test
in
sub
imul
shlb
cmp
jg
jno
mov
enter
inc
adc
push
or
pop
adc
out
rcrl
nop
ret
add
aas
push
push
lods
push
jmp
repz
mov
sbb
mov
sub
jge
xchg
rclb
sbbl
xchg
movl
les
jg
xchg
jo
cmpsb
inc
loopne
lret
sbb
pushf
or
imul
int3
cmp
ds
and
lcall
icebp
mov
dec
loopne
or
out
mov
dec
lds
jno
enter
dec
mov
xor
in
xor
mov
cmp
push
andl
loop
shr
mov
aam
data16
mov
lods
inc
cli
add
outsl
mov
cmc
mov
cld
dec
jae
xor
push
shrl
mov
adc
xchg
inc
xchg
xchg
sti
pop
sbb
dec
fisubl
lods
mov
add
rcll
scas
movsb
mov
and
ret
xor
xlat
jno
or
ret
pop
in
add
pop
inc
adc
mov
sbb
dec
xchg
pop
dec
mov
cmpsb
gs
pop
out
int3
mov
jecxz
gs
daa
sbbb
cld
cmp
and
popa
cmp
lods
xchg
mov
in
cli
and
mov
lea
sahf
xchg
push
nop
xchg
enter
movsl
not
push
in
stos
js
and
dec
mov
aaa
mov
add
dec
cmpb
addr16
mov
adc
xchg
movsl
js
and
push
movsb
mov
xlat
and
mov
pop
pop
rolb
in
cmc
into
mov
cmp
inc
nop
add
repnz
sahf
jne
insl
cwtl
cmp
imul
push
xchg
ret
loopne
pushf
cmp
int
xor
int
les
test
xchg
adc
mov
je
shrb
mov
pop
mov
push
and
inc
nop
sub
sbb
into
mov
xor
divb
mov
leave
lods
pop
mov
lahf
cmp
bound
out
push
push
mov
sbb
mov
pop
push
jne
pop
add
sbb
rol
sub
int3
test
mov
mov
jne
xchg
mov
jmp
std
and
jns
mov
loopne
mov
jae
mov
push
sbbb
fadd
and
add
mov
sub
push
push
push
adc
xor
rcr
stos
xchg
in
cmpsl
enter
jo
push
mov
mov
mov
mov
cmc
mov
dec
movsl
movsb
fsubs
add
sub
mov
sbb
mov
sahf
add
xor
fwait
jo
adc
scas
sbb
dec
insb
leave
lods
xchg
ret
out
lds
mov
adc
xor
ret
mov
push
xor
sub
pop
push
je
add
push
scas
popa
mov
aad
lds
js
xchg
dec
fs
and
jecxz
xchg
icebp
stos
push
imul
mov
push
mov
and
daa
stc
xchg
subl
cmpb
adc
rcl
int
mov
cmp
jp
xor
test
sbb
lds
cmpsl
enter
jecxz
push
mov
sbb
jae
sti
test
sub
leave
fnstenv
pop
daa
fwait
sar
jle
test
and
mov
jg
push
sub
lock
cmp
ficoms
out
pop
stc
sub
and
rorb
movsl
mov
aad
jb
push
xchg
ret
pop
mov
shll
xchg
test
dec
int3
out
pop
movsl
push
mov
in
xchg
mov
idivb
mov
arpl
arpl
pop
test
mov
loope
lock
ja
dec
lcall
push
jg
mov
jb
push
lret
nop
fisttpll
and
in
mov
out
movsb
push
pop
jnp
sahf
cltd
shll
jnp
dec
mov
ret
fdivl
xchg
fistpll
mov
fs
and
and
and
sub
jg
ret
push
shrl
sbb
add
cmc
pop
aas
cwtl
mov
inc
sbb
pop
xor
stos
das
xchg
push
bnd
sarl
pop
adc
cmpsb
cltd
fs
push
stos
loope
ss
lret
cwtl
mov
xchg
push
mov
xor
arpl
addr16
jp
adc
mov
dec
mov
xor
es
mov
insl
mov
inc
outsl
or
xorb
pop
daa
sub
dec
xchg
les
sub
dec
lds
in
xor
ss
adc
jb
test
jnp
pop
sub
or
pop
jecxz
ljmp
aad
mov
add
jnp
mov
movsb
das
enter
pop
fists
stos
push
scas
pop
mov
aas
rol
pop
lret
movsb
adc
mov
daa
jne
loopne
xor
les
rcl
ss
bound
imul
jge
push
xor
popf
int3
fwait
int3
in
jmp
das
outsb
inc
inc
int3
cltd
daa
sarl
mov
shrb
inc
xor
lret
lds
scas
cld
leave
cmpsl
pop
mov
inc
andb
jge
sub
inc
leave
out
movsb
das
add
test
mov
insl
imul
push
xchg
push
cmc
bound
daa
aas
addl
int
jecxz
sbb
jl
scas
xorl
ret
cmp
sub
push
fimuls
pop
ret
cmc
fisubl
jno
arpl
scas
push
jl
push
test
sub
add
mov
dec
mov
out
xchg
mov
cld
fs
push
cmc
mov
and
int
pop
adc
shll
pop
pop
test
xor
insb
add
dec
dec
sahf
jg
add
mov
push
sbbl
mov
fwait
dec
out
hlt
imul
pop
push
mov
lea
bound
sbb
push
sub
icebp
popl
mov
pop
in
vsubsd
mov
mov
enter
or
cwtl
int
aad
mov
push
out
pop
out
xor
jo
fnstsw
cli
not
int3
outsl
push
jge
ffree
in
and
sub
shr
mov
ss
dec
jnp
cmp
lcall
daa
fcmovu
daa
cltd
ret
js
scas
call
pop
push
js
xor
sbb
addl
cmp
jecxz
push
imul
shlb
inc
adc
stos
or
mov
lea
aam
xchg
cmc
icebp
fadd
arpl
mov
pop
lds
pop
in
xor
rcr
in
cmp
lods
mov
add
push
pushf
fimull
jne
cmp
sub
scas
mov
jge
sub
pop
inc
jl
sti
xor
ret
mov
mov
mov
mov
mov
aaa
and
or
mov
ja
jns
pop
call
mov
lods
dec
or
mov
and
incl
jl
cltd
call
sbb
repnz
jecxz
ret
insl
bound
cmpsl
les
cld
call
or
fsubr
jl
nop
inc
jg
mov
mov
fdivr
xor
sbb
xor
mov
call
sub
enter
js
loopne
xor
stc
push
sub
adc
push
jmp
daa
popf
xor
cmpsl
inc
sarb
mov
dec
cmpsb
mov
jecxz
cmovge
push
add
aam
clc
fs
pop
pop
psadbw
aam
decl
adc
push
mov
push
outsb
dec
rcll
dec
fcomps
jbe
fwait
sti
mov
aas
ret
sbb
mov
arpl
lods
std
jns
mov
jno
push
shl
test
imul
pop
enter
push
sbb
cli
fdivl
inc
add
dec
xor
pop
sbb
das
iret
scas
mov
loop
lahf
adc
pop
aaa
inc
loop
dec
push
mov
fnstsw
jno
test
and
loopne
cli
aaa
adc
pushf
sbb
shrl
or
mov
xchg
mov
and
ljmp
ret
addr16
mov
or
lret
add
rcll
mov
push
or
jb
jle
pop
add
mov
sar
addb
daa
mov
gs
adc
inc
adc
stc
shl
mov
out
cmc
inc
dec
pop
sahf
arpl
loop
dec
jnp
out
mov
sub
push
mov
rclb
jnp
jmp
loope
jno
jg
mov
push
and
mov
andl
push
xchg
xchg
dec
call
stos
xchg
push
mov
xlat
push
stos
insl
cmp
into
fnsave
push
fistpll
adc
and
adc
push
mov
xchg
mov
es
daa
push
cltd
xor
cmc
loopne
in
jp
add
cld
sub
xchg
jnp
lock
sub
sbb
out
bound
push
adc
mov
sbb
cmpsb
xchg
add
adc
jbe
clc
ror
stos
insb
outsl
sub
test
das
mov
dec
xor
cmp
nop
dec
cmp
push
mov
mov
shrl
mov
in
cmp
repnz
mov
jne
les
fdiv
add
add
cs
adc
and
faddl
bnd
aaa
sbb
push
enter
aaa
jnp
inc
sub
pop
xchg
movsl
popa
fdivrl
pop
inc
pop
shrb
mov
jbe
dec
adc
mov
pop
test
jo
daa
pop
push
test
push
jp
shrl
add
cmp
icebp
and
out
movsl
das
push
aas
aaa
sbb
and
adc
lea
shrb
add
adc
gs
mov
lcall
enter
test
decl
or
sub
dec
or
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
cwtl
jle
fsubs
cmp
bound
cmp
dec
add
xchg
adc
mov
cwtl
push
lcall
xchg
scas
inc
les
cli
faddp
jno
sub
and
test
imul
bound
iret
xor
add
and
mov
pop
add
arpl
aaa
ficoml
ds
mov
sbb
pushf
aas
cltd
lock
aad
sbb
push
cmp
pop
mov
sub
mov
adc
sub
inc
lods
pop
dec
pop
fistpll
idiv
lds
jno
fisubrs
add
pushf
cmp
in
xchg
dec
arpl
inc
sahf
pop
outsl
outsb
std
int
sub
add
or
pop
cmp
aam
inc
pop
lcall
pusha
or
in
pop
sbbb
cmp
and
pushf
cmp
clc
fnsave
aas
mov
mov
ds
sbb
lahf
rorl
cmp
cli
add
test
xchg
rorl
push
xchg
cmp
aaa
xor
call
sbb
xorl
aaa
mov
jge
gs
lret
jo
add
mov
xchg
scas
jnp
ret
js
fucomi
jmp
mov
stos
or
ret
rorl
dec
arpl
sbb
gs
mov
add
xchg
in
and
call
or
fidivs
ljmp
jae
cmp
lret
fldt
and
out
cltd
subl
pop
test
outsb
loope
dec
sbb
ret
push
cmc
into
push
stc
imul
fidivs
xchg
mov
mov
sbb
cs
stos
xchg
cmp
jmp
push
fiaddl
rclb
fdivl
jl
pop
add
fmulp
mov
adc
movsb
fisubrs
xor
jle
inc
enter
add
inc
lea
stc
cmc
jo
pop
out
lret
outsb
mov
sbb
dec
pop
xchg
aaa
dec
sub
sub
std
loope
xor
sub
cmp
mov
xchg
add
rolb
repz
xchg
out
adc
dec
xor
call
push
mov
ret
sahf
cmp
mov
xchg
jae
or
ds
mov
aam
bound
or
inc
pop
dec
shrl
mov
pop
rcll
jle
ds
sub
mov
mov
and
adc
mov
or
inc
or
add
fnstsw
lahf
ret
jg
and
cmp
dec
vaddss
xor
push
xor
insb
rdpmc
push
pop
mov
int3
sbb
test
cmpsb
stos
scas
add
hlt
imul
or
mov
push
sahf
fld
push
cmp
or
adc
add
mov
mov
mov
mov
add
outsl
leave
cmp
stos
xchg
in
jle
out
out
add
push
adc
pushf
pop
aaa
in
fbstp
mov
push
add
mov
aad
xor
mov
xchg
test
gs
lods
out
scas
xchg
lea
mov
idivl
dec
call
jmp
lret
xchg
dec
sub
sub
aaa
fwait
adc
or
jp
dec
adc
mov
xchg
idivb
mov
dec
arpl
lods
sub
push
mov
push
add
int
and
cmp
xchg
push
insb
pop
sbb
push
iret
ljmp
inc
in
jmp
dec
pop
insl
pop
lds
js
and
jo
in
cli
adc
loop
add
scas
xor
stc
lods
pop
sub
cwtl
std
popf
mov
inc
je
jne
cmp
pop
add
movsl
inc
movsl
add
inc
les
stc
ss
inc
sahf
and
test
cmovp
imul
pop
insl
enter
jns
int3
jns
ja
or
or
rcr
push
fld
lea
sub
fildll
arpl
aas
cmp
or
in
pop
in
push
ret
stos
dec
call
mov
insb
pop
insb
in
and
lock
cmp
sub
adc
lcall
and
mov
cmpsl
imul
mov
xchg
push
ucomiss
or
movsl
sub
loopne
data16
cmpb
sbb
add
lahf
add
insl
pop
sub
xchg
mov
jp
sahf
jo
js
shl
scas
add
lods
jnp
sbb
leave
pop
int3
pop
add
push
cltd
jb
mov
test
ud2
and
pop
scas
push
and
idivb
mov
pop
enter
xlat
jb
push
in
cmp
ret
mov
clc
shlb
adc
test
and
daa
xchg
pop
pushf
jg
insl
adc
jp
jge
repnz
cmpsl
mov
sbb
imul
inc
inc
scas
ret
in
cli
adc
dec
mov
aaa
pushf
dec
dec
adc
mov
lods
dec
jnp
loopne
xchg
faddl
into
inc
ret
popf
push
notb
jp
sahf
mov
add
out
lea
dec
cli
xchg
add
adc
outsl
push
shr
inc
xor
aad
jb
pop
xchg
mov
int3
lcall
dec
xor
ret
lahf
mov
dec
adc
mov
lahf
shrb
std
fisubrs
jecxz
sbbb
aam
mov
adc
data16
lods
lods
or
jg
jbe
and
addb
gs
ret
lea
add
rcrl
scas
jl
imul
js
call
push
add
stos
and
das
push
sbb
clc
stos
lret
lcall
in
dec
in
sbbb
mov
cmp
insb
gs
mov
xchg
mov
repz
jne
sbb
mov
add
hlt
sbb
fsts
cwtl
cmp
inc
xlat
cmp
dec
jns
fbld
rclb
xor
xor
dec
mov
mov
inc
pop
jae
xor
xchg
aam
adc
cmp
aad
popa
rol
das
jb
mov
jns
hlt
movsb
xor
pushl
mov
fwait
pop
arpl
in
sub
mov
jae
mov
inc
cmp
lahf
inc
mov
cmp
mov
mov
push
dec
sbbb
jecxz
int3
les
pop
shrb
mov
add
fiadds
jns
daa
xor
pusha
add
sti
xchg
ss
cmp
push
lret
pop
sbb
inc
jb
push
stc
loopne
ret
popf
and
push
lahf
adc
in
jns
push
cltd
lds
mov
inc
or
into
cmp
push
jge
xchg
mov
push
cmc
jae
popf
adc
pop
mov
jge
mov
or
mov
add
ds
test
or
xchg
jecxz
sub
loopne
nop
push
mov
inc
imul
xchg
fcomip
lds
rcl
and
addr16
adc
adc
mov
jecxz
fsubrs
mov
cs
cmp
lock
push
in
jbe
ljmp
nop
jg
lds
arpl
xor
mov
clc
outsb
push
push
repz
pop
jge
lods
xchg
aaa
scas
push
cmp
fyl2xp1
cmp
and
lea
mov
adc
jae
add
jecxz
dec
cltd
mov
pop
mov
dec
pop
sbb
aas
add
jmp
or
add
daa
pop
int
fnstenv
inc
loope
mov
ja
and
cmp
int
movsl
loopne
sbb
mov
xorl
mov
test
int
je
or
push
inc
mov
sub
arpl
mov
jmp
push
lock
and
push
mov
cmpsb
mov
fldcw
out
cmp
into
in
jmp
test
in
jge
xchg
orb
imul
or
cmp
int
imul
cwtl
mov
jmp
test
js
pop
ss
jmp
insb
subl
loopne
out
sti
push
fimuls
adc
mov
jp
ja
and
jecxz
mov
add
sarb
mov
in
jp
outsb
mov
das
call
test
rcll
inc
sub
jae
mov
outsl
mov
fcmove
adc
mov
nop
jp
jnp
negb
mov
fdivrs
mov
fstpl
fnstsw
aad
cmpsb
jmp
mov
push
js
inc
loopne
add
ljmp
repz
or
fistl
bound
pop
shrl
mov
xor
movsb
push
sti
push
sahf
js
cltd
pop
lret
push
mov
fcoml
daa
scas
rorl
lods
cld
fiaddl
sbb
stos
xor
jmp
mov
push
pop
imul
cs
lret
movsl
les
xchg
push
shr
jecxz
xchg
jno
dec
sub
push
xor
pop
out
sbb
jge
xchg
je
lock
mov
ficompl
pop
and
pop
fs
mov
inc
test
cmpsb
mov
fdiv
aaa
add
mov
ficoml
in
cltd
push
into
clc
xorb
and
or
insb
pop
sub
adc
mov
sub
sar
clc
mov
out
stos
adc
fldl2t
data16
xor
enter
mov
jne
cmp
pop
incl
addr16
jge
push
iret
popfw
and
dec
insl
jbe
xchg
aaa
xor
ret
cmp
les
les
dec
stos
xorl
push
or
emms
dec
cltd
outsb
xchg
lcall
mov
mov
cmp
pop
mov
push
lods
lret
mov
pop
xchg
sar
jb
icebp
sbb
pop
lods
push
inc
mov
stos
scas
movsl
or
sbb
cmpb
es
fwait
stc
and
ljmp
mov
popa
dec
subb
adcl
pop
inc
xor
jae
jge
call
xor
add
adc
xchg
pop
jno
jecxz
mov
add
out
jnp
mov
std
in
inc
daa
scas
pop
div
or
aaa
mov
je
je
test
mov
xchg
push
adc
mov
pop
lret
int
xchg
adc
xchg
and
mov
jl
in
arpl
in
pusha
ret
jl
cltd
out
testb
jecxz
cld
xchg
mov
mov
mov
mull
jecxz
lcall
lock
sub
xchg
int3
sub
sub
adc
stc
jmp
loope
lret
je
and
cmp
into
enter
sar
ret
mov
jnp
push
sub
popa
pop
pushf
sub
sbb
mov
mov
shl
or
adc
push
inc
or
and
lds
cmpsl
mov
test
idivb
xchg
jl
lods
scas
add
ja
xchg
faddl
test
push
mov
movsb
jne
outsl
les
cmpsl
cmp
je
jno
sub
sbb
xor
int
aas
outsb
and
shrl
aaa
shrl
jmp
into
pop
and
xchg
add
ret
pop
ja
inc
dec
jns
test
xor
sbb
in
sti
inc
jns
xchg
ss
jmp
jle
shl
mov
lahf
adc
mov
add
stos
fiaddl
repnz
pop
push
mov
pop
sarb
or
popl
sahf
mov
pop
inc
and
shlb
cmp
nop
inc
push
pop
hlt
fcmovnbe
loope
scas
iret
pop
push
push
push
cwtl
movsb
inc
xor
popf
arpl
add
cmpb
mov
push
cmp
lret
mov
in
bswap
xor
push
dec
xor
cmp
xchg
les
xor
popa
cmpsl
pop
pop
jp
repz
out
imulb
xchg
aas
fucomi
scas
loop
mov
dec
xlat
pop
lahf
cmp
jle
inc
cvttps2pi
pop
jecxz
jae
mov
jl
jp
mov
imul
add
adc
test
xchg
les
mov
pop
or
add
xchg
scas
lret
mov
cld
push
xchg
test
ss
sbb
sbb
pop
mov
xchg
stc
lods
in
outsl
stc
jmp
jbe
mul
enter
adc
movsl
inc
inc
mov
dec
outsb
int
push
mov
and
lcall
repnz
mov
aam
dec
hlt
jge
and
cmpsb
fstps
fcoml
add
repnz
adc
mov
outsb
add
mov
adc
pop
pop
pop
in
add
repnz
loope
out
mov
xor
mov
mov
add
cmc
cmc
adc
mov
sbb
ds
in
xchg
mov
repz
jmp
aas
mov
out
je
loopne
inc
and
imul
add
dec
mov
and
sbb
or
cmp
xor
jge
test
icebp
pusha
mov
jne
ljmp
jns
hlt
data16
cmc
mov
aad
push
jecxz
popf
shlb
leave
mov
sbb
ds
ror
push
decl
adc
pop
in
sahf
push
sbb
adc
push
xchg
push
cmp
out
mov
cs
lock
xor
xchg
rorb
ja
repnz
push
pop
adc
cmp
scas
sahf
lods
fdivl
iret
lods
and
sbb
push
ss
dec
ja
cmpsl
rorb
sbbl
into
lahf
mov
jmp
mov
and
or
xlat
add
ja
es
jmp
or
pop
mov
insl
mov
add
mov
cmp
ja
out
scas
ss
fwait
pop
cli
jmp
out
enter
and
xchg
scas
fwait
imulb
movsb
adc
xchg
mov
mov
int3
popf
dec
aam
mov
pusha
push
add
rcl
inc
xchg
ss
push
adc
sub
sbb
cmpsl
pop
imulb
pop
adc
push
in
mov
shr
xchg
push
adcl
lahf
shlb
add
cltd
pop
mov
movsl
lahf
pop
sahf
int3
push
dec
sub
mov
in
repnz
inc
inc
into
push
int
cmp
fbstp
cs
or
insb
mov
test
xchg
or
jmp
int3
xorb
aam
add
lea
mov
xchg
xchg
xchg
or
std
cwtl
mov
add
sub
popa
inc
lahf
mov
jnp
jp
shrl
aam
rcr
sarb
sbb
inc
aas
jecxz
in
ret
xchg
or
sti
mov
clc
lret
es
in
lahf
xchg
and
out
mov
pop
pop
cltd
arpl
sbb
inc
nop
ficomps
push
in
ja
jge
jae
pop
test
adc
stos
fldcw
enter
mov
pop
scas
mov
xchg
mov
add
pop
hlt
repnz
test
push
aad
aam
cmp
out
sbbl
cmp
hlt
fimull
jl
sti
aas
xchg
iret
push
mov
imull
into
inc
adc
add
mov
sbb
andl
and
and
pop
lods
push
jnp
mov
testl
adc
jne
add
sub
cmp
popa
or
xor
pop
mov
adc
xchg
cwtl
push
dec
jecxz
cs
xchg
jmp
decb
out
enter
cmp
dec
test
or
imul
mov
and
push
pop
movb
add
jg
pop
fdivrp
xchg
std
sbb
mov
add
out
nop
mov
xor
lods
sub
mov
call
lds
or
lods
and
ror
call
push
pop
sbb
pop
add
and
nop
mov
repz
xor
cli
adc
or
and
dec
imul
das
push
addr16
outsl
mov
inc
sub
adcl
int3
push
pop
inc
xor
pop
dec
fisubl
sahf
dec
xchg
popa
mov
pop
into
jecxz
cwtl
orl
and
cmp
pop
jle
out
jge
mov
mov
jmp
int
int
pop
in
dec
or
lock
js
ret
push
pop
push
andb
dec
scas
push
or
sahf
lret
cmp
cmp
iret
fcmovnbe
aaa
adc
pop
out
and
movsb
mov
in
and
or
jae
lret
dec
dec
mov
scas
or
jae
jo
cmp
rolb
jmp
mov
lcall
jb
cmp
sub
jg
lahf
in
lret
inc
in
nop
cmp
or
aad
or
cmpsl
cmp
jns
dec
mov
add
and
mov
sub
in
push
imul
pop
xor
add
sbb
inc
daa
push
jmp
cs
rorl
inc
xchg
imul
popf
fmul
xor
xchg
sub
or
cmp
lret
cmp
dec
ret
ljmp
inc
mov
jae
mov
sub
push
int
or
filds
inc
test
test
jl
aaa
or
cltd
sub
fisttps
fadd
mov
popa
sbb
mov
xchg
push
lahf
rcll
xchg
add
pop
add
adc
push
pop
xor
test
mov
dec
data16
scas
pushf
into
xor
cwtl
inc
pop
sbb
scas
test
sub
pop
mov
mov
sahf
push
insl
loop
adc
or
aaa
push
movsl
and
stc
insb
movsb
sti
and
in
jmp
mov
xchg
xlat
shrb
pop
cmp
push
mov
mov
aam
jle
das
mov
pop
loop
out
data16
inc
and
mov
insb
stc
sbb
adc
xor
jo
ja,pn
pop
das
cmpsl
ja
push
andl
jo
rorb
pusha
daa
xor
iret
xor
dec
fadd
jns
jge
lcall
notb
xchg
out
outsb
inc
xor
or
imul
xor
test
add
mov
test
outsl
lahf
leave
pop
rcr
je
lahf
out
mov
stos
iret
dec
adc
mov
lret
inc
inc
imull
jb
loop
aam
in
cli
pop
andb
mov
mov
mov
rorb
or
sub
shr
iret
jmp
push
mov
cs
push
xlat
jns
dec
dec
inc
stos
xchg
jecxz
xor
das
mov
shrb
pop
jp
cmpsl
pop
xlat
push
outsb
mov
movsb
pop
mov
fstl
aad
das
adc
call
mov
and
adc
jnp
sbb
repnz
dec
pop
xchg
addl
cmc
add
pushf
jl
in
xchg
inc
movl
es
cmp
lock
negl
inc
push
pushf
mov
or
push
or
movsbl
out
push
xchg
in
dec
in
cwtl
inc
test
pop
add
lret
out
inc
pop
cs
sbbl
test
cwtl
push
pop
cmp
orb
int
lods
or
xor
pop
inc
out
pushf
jecxz
pop
outsb
inc
dec
hlt
add
pop
mov
divl
push
out
pop
enter
popa
mov
fcompl
adcb
call
mov
ror
mov
add
cli
outsl
pop
xor
adc
in
fbld
push
int3
push
out
out
xchg
loopne
jo
out
mov
or
push
add
pop
add
testb
xchg
sbb
or
rcll
in
clc
adc
sahf
scas
pop
imul
sub
aas
arpl
shrl
in
ret
and
and
daa
dec
icebp
or
iret
daa
xchg
out
xchg
pop
mov
push
cmc
insl
cs
out
lahf
mov
dec
add
wbinvd
enter
push
pop
aaa
push
loop
hlt
push
jne
push
imul
mov
cs
jl
mov
sub
outsb
dec
mov
popf
jo
and
add
sub
or
test
cmp
les
adc
and
shl
jg
dec
cltd
icebp
xor
push
sub
xlat
ret
pushf
cld
xchg
mov
dec
mov
cld
shrl
push
shll
or
dec
stos
xor
test
cmp
hlt
mov
adc
pop
pop
ss
sbb
mov
cmpb
imul
mov
cmpb
pop
cmp
decl
mov
add
fdivrl
xor
or
div
cltd
dec
lcall
cmp
push
adc
mov
or
int
loop
xchg
adc
dec
jmp
adc
sbb
and
xorb
ja
push
mov
mov
dec
inc
jecxz
loopne
les
test
test
rclb
pop
jae
mov
stos
xor
xchg
in
stos
aaa
mov
sbb
aaa
loopne
les
mov
out
sbb
addr16
mov
loopne
fcoms
les
hlt
ret
les
jmp
dec
bound
cli
leave
xchg
push
jle
out
sbb
xchg
inc
mov
inc
push
sar
push
add
rcrb
mov
int
sbb
sub
pusha
jmp
jae
bound
or
pop
outsb
jns
xchg
inc
repnz
movsb
adc
pop
jns
mov
shlb
lods
shl
mov
and
push
loopne
sbb
shlb
shl
stos
not
hlt
fisttpll
mov
jle
or
stos
lods
sub
mov
scas
rol
lret
addps
cmpsl
mov
imul
xchg
pop
xor
call
imul
cmp
loope
cld
dec
out
dec
add
jb
mov
cmp
mov
push
cmpsb
xchg
cmp
test
lcall
outsb
sbb
cmp
out
imul
out
test
nop
mov
inc
sbb
les
je
cmp
pusha
adc
sub
jg
icebp
in
std
loop
aas
mov
inc
xor
cmpsl
dec
inc
inc
pusha
std
or
clc
es
sub
xchg
xchg
mov
lcall
push
sbb
out
out
inc
stc
nop
and
xor
addr16
js
nop
dec
mov
pop
and
push
stc
aad
sti
adc
roll
fnstcw
xchg
inc
dec
dec
into
xchg
aas
cmp
cltd
inc
call
add
or
jne
repnz
shlb
dec
sbb
mov
int
idiv
popf
stos
or
mov
cmp
sbbb
test
lods
jl,pn
rcrl
pop
ja
dec
mov
pop
cmp
outsb
xor
mov
cmp
sub
lods
pop
dec
push
cmpsb
fs
imul
add
movsl
xor
aas
call
call
lahf
ljmp
outsl
popa
shlb
jl
xor
ljmp
adc
sbb
push
sbb
inc
aas
xor
test
pop
stos
fwait
sahf
xchg
sub
sbb
dec
adc
arpl
jg
jnp
jl
sub
push
push
call
fstps
cmpl
stos
sub
lods
jo
insl
and
dec
lods
icebp
cmpsl
xchg
icebp
fsubp
push
int
stos
mov
push
mov
jno
dec
packsswb
push
pop
leave
jbe
popf
aam
ret
sbb
cli
mov
ds
xor
adc
test
das
movsl
fs
lods
or
stos
pusha
imul
sub
add
mov
ret
test
push
cmpsl
sub
fcmove
and
rcrb
adc
in
int
mov
mov
dec
adc
mov
push
jne
xor
shll
inc
sub
jae
mov
sub
sub
mov
dec
aas
mov
pop
add
lods
inc
aam
push
movsl
or
es
lahf
xchg
push
or
adcl
jge
fadds
mov
mov
sahf
scas
outsl
mov
sub
call
xor
jnp
dec
mov
cli
mov
and
and
push
lods
adc
imul
iret
fsubs
jge
gs
mov
dec
jecxz
xchg
gs
xor
cmp
jne
test
xchg
in
mov
lock
push
test
and
jnp
add
sub
fistpl
adc
loopne
cmp
pop
inc
sub
push
loope
out
dec
out
sub
pop
sbb
loop
in
in
sbb
xchg
fnstenv
and
lahf
cmp
sti
jbe
lock
xor
shrb
push
rorl
mov
cmpl
xchg
inc
xor
jecxz
jb
lret
icebp
outsl
jge
jle
mov
pop
shlb
mov
cmp
int3
ja
mov
testb
test
std
fdivrs
call
in
inc
pop
add
sbb
test
add
loope
divb
in
out
ret
loop
scas
push
out
cs
pop
inc
pop
loopne
dec
leave
mov
pushf
xchg
add
inc
sti
pop
adc
ljmp
pusha
pop
dec
cli
adc
pop
gs
mov
sub
sbb
mov
fistl
mov
jecxz
pop
mov
and
add
sbb
lret
pushl
scas
jg
shlb
jmp
int3
jno
leave
jb
cwtl
sub
das
or
xor
fchs
inc
imul
mov
add
xchg
in
fsubl
dec
adc
jmp
in
mov
in
mov
fcoms
and
inc
clc
das
xrelease
sbbb
fs
cmpsl
cmp
jae
add
mov
arpl
out
inc
lods
mov
in
sbb
inc
xchg
cmp
shrl
insb
shll
mov
test
inc
loopne
cmc
inc
mov
cmpsb
adc
iret
test
mov
sub
sub
inc
pop
std
adc
popa
repnz
and
xchg
and
jg
or
leave
in
adc
adc
outsl
jge
cmp
pop
iret
cmp
cmpsl
aaa
inc
in
cli
xchg
fstpt
je
cmp
jle
adc
test
lock
loope
scas
cmp
adc
xchg
inc
rol
mov
adc
lret
in
ds
cmp
lock
xor
inc
inc
les
mov
mov
sub
pop
pop
movsb
enter
xchg
inc
mov
nop
imul
mov
orl
pushf
addr16
nop
jnp
and
cmp
out
add
dec
add
mov
sub
stos
or
mov
inc
cltd
pop
movsb
out
pop
cltd
pop
test
arpl
ret
cmp
jbe
mov
fucomip
push
stos
jbe
xchg
cli
lcall
xor
out
and
jmp
clc
xor
scas
and
pop
dec
std
mov
cmp
test
cmpsb
xor
mov
add
sbb
inc
into
sub
js
imul
rcrl
inc
lods
rcll
in
call
lods
mov
test
pop
test
jecxz
jno
cmp
mov
mov
fucom
jecxz
sbb
insb
mov
out
popf
test
push
push
dec
insb
jmp
sti
lock
add
fsub
sahf
ds
inc
pop
repz
mov
icebp
pop
sbb
xchg
outsb
std
jge
cli
push
xor
push
cwtl
pop
mov
push
aaa
jp
loop
dec
lea
add
ror
push
rolb
push
push
pop
adc
mov
dec
mov
aaa
pop
outsb
push
test
int
daa
xchg
daa
jge
repz
mov
nop
cmpsl
ljmp
fcoml
sub
lea
es
fidivrl
or
and
push
movsb
fsubl
cmp
jecxz
jae
inc
jge
das
dec
jo
xor
mov
dec
pop
dec
int3
sti
or
loopne
lods
sub
dec
inc
push
or
test
lcall
dec
push
sbb
scas
int3
mov
mov
insb
push
lock
sbb
add
push
sahf
jmp
dec
lea
movsl
jmp
test
sub
test
shll
repz
jno
mov
repz
xlat
sub
roll
pop
mov
sbb
jns
pop
adc
xor
jg
mov
stc
int
add
jb
scas
dec
adc
cmp
fisttpll
sahf
push
push
cmp
jo
jo
les
xchg
inc
fbld
enter
test
ret
push
int
pop
rorb
mov
insl
mov
ds
mov
mov
mov
inc
gs
and
outsl
pop
pop
ret
and
loop
ljmp
push
xlat
pop
shlb
fwait
imul
jle
iret
sub
mov
sbb
popa
dec
xchg
cmc
sbb
mov
andb
or
in
mov
mov
scas
fstpl
inc
fwait
pop
cli
mov
testb
xchg
fsubs
sub
xor
fbld
jb
sub
in
mov
bnd
leave
push
roll
ret
jl
sahf
aam
test
xchg
push
mov
addb
insl
pop
xor
fcomi
mov
icebp
jbe
mov
xor
jmp
xor
mov
scas
test
popa
imul
pop
mov
out
pop
fmull
adc
dec
fcompl
add
imul
rcrb
fstl
test
pop
cwtl
outsl
sub
or
push
scas
imul
lods
pop
fisttps
and
in
sar
cmpsb
pop
faddl
xchg
bound
pop
or
mov
mov
fdivrp
and
sbb
cs
in
int3
xor
jno
xor
cmp
mov
dec
mov
repnz
enter
mov
mov
cwtl
rclb
ljmp
sbb
out
pusha
or
mov
dec
into
shl
cli
sub
icebp
xor
in
fld
cmp
mov
lds
jge
adc
lret
repnz
js
ret
sbb
mov
cmp
scas
and
sti
stos
xor
fbstp
cli
inc
test
test
push
jg
adc
and
and
dec
daa
push
clc
shrb
mov
aas
cwtl
push
push
or
adc
push
xor
outsl
cmc
in
call
cmp
fiadds
mov
movsl
arpl
mov
jno
lods
jne
push
mov
in
push
inc
or
cmc
pop
add
jmp
cmpsb
adc
sub
xchg
mov
lahf
sbb
sub
jle
xchg
mov
cmpsb
ficomps
push
stc
mov
xor
adc
int
sub
test
stc
test
movsl
call
imul
xchg
xchg
imul
xchg
jecxz
int
ret
les
int3
aam
inc
lret
fdivrl
inc
push
mov
mov
imul
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
sub
ja
add
pop
add
add
lods
ss
fcomps
ss
out
xlat
fwait
out
addl
incb
cmp
fucomip
ljmp
leave
and
push
cmp
dec
push
test
lahf
or
sbb
mov
loop
dec
js
stos
mov
notb
mov
dec
add
lods
or
add
shrl
adc
cmp
out
pop
xchg
push
aam
add
pop
add
add
sub
nop
and
jne
and
xchg
xchg
shlb
aad
dec
or
shlb
mov
mov
lret
icebp
bound
jb
add
movsb
inc
icebp
fstl
enter
cs
lock
js
outsl
dec
out
test
test
sub
cmpsl
and
pop
sub
sub
addb
into
add
pop
add
add
addr16
and
mov
adc
mov
xor
push
mov
xchg
rcrl
lods
arpl
jp
pop
jnp
out
shlb
fucom
movnti
imul
inc
cmp
sarl
or
and
or
lock
dec
call
add
add
das
and
aam
aam
ljmp
je
dec
lds
into
add
pop
add
add
and
imulb
mov
out
add
or
aad
insb
cmp
aad
in
sub
pop
les
add
test
dec
imul
inc
repz
mov
sahf
xlat
lods
roll
add
in
xor
add
add
add
add
mov
sti
cmpsl
mov
dec
mov
jmp
add
pop
add
add
xchg
sub
lods
femms
test
clc
jl
push
sbbb
mov
cmpb
fistpll
loope
insl
add
je
mov
jb
dec
dec
call
subl
sbb
pop
jge
jae
mov
fs
out
lods
cmp
stc
stc
push
loop
test
pop
add
add
in
daa
cmp
ficompl
es
cmp
ljmp
sbb
mov
iret
mov
lods
aas
fbstp
in
xor
xchg
sbb
scas
int
jp
jl
push
dec
mov
and
adc
jno
jnp
and
mov
dec
lcall
out
shlb
add
std
add
add
inc
gs
aaa
push
fisubl
imul
gs
adc
jno
nop
dec
dec
pushf
pop
ret
pop
in
push
mov
or
test
lcall
shrl
push
loopne
inc
cmp
in
push
push
lcall
add
xorb
call
push
outsb
xor
mov
shl
pop
jle
test
add
adc
push
adc
cwtl
out
push
add
add
pop
add
add
adc
roll
cmpsl
jno
xlat
dec
push
lret
popa
iret
popf
pop
mov
sub
cmp
bound
out
shrl
int3
fsubp
mov
push
add
clc
xchg
pop
lock
fwait
shll
cmp
ret
js
repnz
ja
insb
push
fidivl
add
add
add
add
sub
das
jle
jg
imul
repnz
nop
inc
iret
loope
add
add
jg
mov
out
pushf
scas
jne
push
testb
imul
pop
mov
jno
mov
out
sub
mov
fists
pop
jmp
scas
arpl
rcr
push
dec
mov
aam
push
out
imul
push
cmp
js
add
add
and
mov
mov
scas
repz
add
pop
add
add
inc
inc
add
ja
mov
lahf
jns
xor
popa
inc
imul
lods
mov
or
xchg
jns
call
sub
xlat
js
lods
xchg
shll
and
neg
pop
cmpsb
mov
mov
popa
jmp
mov
mov
pop
adcl
add
ret
or
ret
lods
sub
mov
inc
mov
add
pop
add
add
stos
popf
loop
scas
inc
sti
cmp
push
jne
mov
dec
xlat
cmp
stos
flds
adc
jmp
insb
in
cld
imul
xchg
and
aas
push
out
pop
pushf
jns
lock
pop
aaa
dec
and
mov
lods
shrl
pushf
test
xchg
xchg
movsb
cltd
pop
and
add
add
add
add
ret
pop
iret
fst
enter
dec
mov
mov
loop
add
add
fwait
mov
pop
dec
pop
rcr
shrb
imul
cmp
js
fcoml
dec
stc
notb
and
xor
imulb
xchg
pop
mov
push
das
es
mov
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficomps
inc
add
sbb
add
sbb
add
sbb
inc
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
cs
inc
add
test
loop
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
into
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
ret
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
je
inc
dec
mov
add
pop
add
add
push
mov
mov
adc
hlt
mov
sahf
pop
mov
sub
mov
inc
push
cmp
loopne
mov
popf
jg
dec
pop
mov
xchg
aam
adc
adc
ffree
pop
push
dec
cmc
sbb
incb
inc
stc
std
sub
fcomp
push
add
add
mov
push
mov
xlat
push
mov
add
pop
add
add
mov
lea
movl
push
out
out
lods
jb
loop
in
in
outsl
mov
xor
xor
mov
fs
dec
out
popf
mov
xlat
shl
test
ret
lock
lds
mov
gs
cmp
aas
push
dec
inc
xor
pushf
cmp
add
add
stos
pushl
xchg
push
sub
add
pop
add
add
and
js
lock
push
jg
cmp
ljmp
adcb
lea
test
and
push
sbb
or
sarl
push
pop
mul
lahf
stc
ljmp
mov
jno
cmpb
xor
xchg
sahf
cmc
popa
cmp
bound
in
shll
add
add
add
cmp
cmp
in
fimuls
xor
add
add
lahf
ljmp
sbb
repz
mov
mov
xchg
add
loope
imul
or
mov
mov
pop
jae
fs
test
xchg
and
jecxz
and
mov
mov
leave
mov
sbbb
daa
loop
es
lea
aaa
xchg
add
add
mov
sbb
std
negb
sub
mov
fs
pop
add
add
inc
movsl
repz
jecxz
fdivr
push
data16
cmp
sbb
add
sub
leave
icebp
push
add
in
mov
mov
xchg
imul
push
dec
imul
sub
sti
ret
fsubrl
popf
gs
jae
push
addb
adc
cmpsb
out
pop
shll
mov
add
fidivl
xchg
mov
scas
fbstp
inc
mov
and
add
pop
add
add
dec
or
fldt
aas
das
ja
cmp
pushf
jecxz
push
aam
xchg
mov
dec
jmp
xchg
into
jo
ret
jmp
loopne
pusha
pop
pushf
jecxz
cmpsl
pop
popa
jns
xor
ret
push
and
adc
adcl
xchg
mov
hlt
jae
mov
sub
dec
add
add
add
pop
sub
and
add
add
dec
addr16
or
test
ja
call
popa
and
pop
addr16
je
and
adc
stos
data16
cld
xor
adc
inc
dec
cli
rclb
sarb
movsl
cmp
mov
in
xchg
movsl
enter
jae
sti
call
add
adc
aam
fcmovne
push
movsl
pop
inc
xor
add
push
add
xor
jb
insl
xor
and
pop
flds
add
add
adcb
cwtl
ljmp
imul
mov
xor
mov
push
pusha
adc
fldcw
fidivs
and
push
mov
jmp
push
frstor
inc
jae
or
push
leave
xor
fcom
out
arpl
ret
push
cmp
dec
lret
mov
dec
adc
shll
incl
add
cmp
add
mov
out
roll
xchg
je
add
pop
add
add
ss
cmp
add
and
push
and
rorb
roll
into
shlb
push
cmpsl
cs
mov
dec
enter
les
push
das
jge
gs
dec
sbb
or
jp
hlt
fmul
ss
aam
test
push
idivb
add
push
sub
pushf
mov
add
add
add
add
mov
jmp
fimull
aad
jle
rcr
add
pop
add
add
push
pop
pop
push
data16
push
icebp
sub
xchg
dec
sbb
xchg
pop
je
imul
repz
stos
lret
dec
filds
bound
push
movsl
cli
fnsave
xchg
pushl
xlat
imull
mov
fs
xchg
lock
pop
popa
fs
je
and
test
add
add
pop
iret
pop
aad
ss
dec
les
data16
add
add
xchg
int
movsb
test
push
test
fdiv
xor
in
mov
imul
inc
adc
insl
and
ss
popf
and
iret
pop
aam
imul
sbb
negl
lods
jns
cmp
jge
orb
cmp
fcmove
in
push
test
aad
add
fwait
test
jg
cmpsb
push
add
pop
add
add
mov
jge
pop
aas
call
call
fmul
push
mov
mov
lcall
es
jns
movsb
jae
repnz
les
or
xchg
pop
dec
push
es
sbb
cmp
in
sub
push
xorb
daa
pop
push
jge
test
add
add
add
outsb
jae
lret
jle
repz
aas
cmp
fiaddl
add
add
cmpsb
scas
jb
arpl
sarb
daa
lret
jge
inc
xor
andl
xor
xor
test
fdivrp
and
andl
push
jne
sub
mov
xor
inc
test
mov
ficoms
cmp
outsl
adc
dec
add
add
adc
adc
mov
lds
inc
fildl
add
add
int
add
in
inc
mov
pop
mov
or
popa
decl
xchg
and
mov
stc
enter
loope
inc
lea
jg
add
jb
fsubl
inc
daa
push
in
push
aam
lret
and
test
inc
packsswb
xor
pusha
cld
icebp
dec
scas
fwait
stc
adc
lea
iret
mov
add
add
add
add
mov
lock
mov
shl
and
fildl
add
add
aam
cltd
dec
add
pop
dec
dec
cmp
jg
and
or
or
cmp
mov
stos
xor
cmpsl
push
sub
cmp
or
adc
mov
sbbl
hlt
mov
sahf
inc
faddp
inc
rcll
cmp
stos
lret
in
add
ror
add
loop
mov
or
in
add
add
sqrtps
cmc
das
sbb
xchg
iret
iret
xor
add
add
mov
pop
pushf
mov
mov
or
mov
in
faddp
sbb
mov
scas
dec
jl
lret
mov
mov
and
test
xchg
jae
into
xor
jne
add
es
lcall
fildl
cli
loopne
das
cs
add
add
sub
fildll
in
lcall
add
add
xorl
add
js
xchg
jmp
mov
push
mov
and
mov
testl
push
jns
icebp
movsl
pop
mov
pop
and
stos
mov
sbb
inc
filds
subb
mov
mov
pop
iret
lods
mov
mov
add
fs
testl
add
add
add
and
sbb
add
jbe
test
jp
add
mov
inc
mov
xchg
inc
stos
nop
loope
add
dec
scas
aad
mov
push
ds
sbb
test
xlat
pop
cli
or
cmp
mov
mov
test
mov
movsl
out
adc
add
add
jne
jg
clc
cs
push
add
add
pop
add
add
mov
lcall
shrl
sahf
loop
aam
or
inc
shrb
fmulp
adc
jo
push
push
xchg
pop
cmc
test
mov
les
jnp
inc
adc
jge
addr16
sarb
test
hlt
push
cmp
movsb
sbb
mov
test
add
or
dec
mov
je
lcall
add
pop
add
add
addl
lret
js
fnsave
mov
test
xchg
js
addb
mov
jne
ret
mov
popa
adc
je
mov
cld
loopne
cmp
out
jae
or
mull
popf
gs
push
mov
and
aad
add
fists
dec
mov
xchg
adc
and
lcall
add
fiadds
mov
add
int3
loope
mov
mov
movsl
mov
adc
jne
pop
dec
cmp
and
xor
test
leave
notb
loopne
out
std
pop
mov
shl
movsb
repnz
add
sub
dec
push
decl
aaa
nop
scas
int3
nop
xchg
inc
mov
adc
add
add
fisttps
push
jnp
outsb
push
sbb
add
pop
add
add
adc
movsl
test
push
push
cli
push
adc
jmp
fwait
int
ljmp
test
addr16
bound
std
xor
push
or
or
dec
mov
mov
adc
xor
jbe
rcrb
stos
or
je
push
jecxz
dec
mov
lods
mov
add
add
jle
out
sbb
mov
roll
add
add
cmp
inc
xlat
jbe
sarb
sbb
shlb
rcl
lods
push
push
pop
jmp
xorl
mov
inc
sub
je
or
bound
sbb
imul
pop
shrl
sub
scas
mov
jo
or
mov
jbe
mov
dec
xchg
jae
inc
or
add
add
and
cmp
stc
jge
rcl
add
pop
add
add
test
lock
mov
fsubs
and
cmpsl
xor
push
xchg
inc
inc
loop
add
push
mov
gs
aad
andl
jle
popf
pop
adc
mov
mov
inc
add
scas
adc
add
push
xchg
xor
fstp
xor
add
add
xchg
nop
ffree
popf
aam
cmp
xor
add
pop
add
add
push
lods
test
imul
jecxz
into
scas
cld
jb
test
xchg
bound
popf
xor
adc
cmpsb
lds
leave
sbbb
cmc
mov
andb
mov
std
jnp
je
fs
push
call
pop
subb
add
add
add
add
mov
jbe
hlt
mov
and
cmpsb
pop
mov
add
pop
add
add
jmp
or
in
out
add
jl
aas
push
push
fbstp
jmp
mov
mov
test
es
loop
mov
arpl
cwtl
addr16
and
in
mov
test
add
rcr
lcall
add
ror
mov
sub
out
cltd
into
push
sub
rolb
add
add
adc
and
mov
mul
push
in
inc
leave
repz
les
adc
rcll
int3
and
subl
xor
insl
hlt
rcrl
adc
xchg
push
xor
pop
mov
lret
dec
pop
sar
mov
mov
adc
add
fucomi
outsb
and
pop
mov
inc
roll
add
add
add
out
mov
movsb
lods
mov
mov
outsb
scas
jb
fdivrl
cwtl
les
ss
cmp
xchg
lods
cmpsb
repnz
js
or
pop
decl
xor
fistl
cltd
dec
js
mov
jecxz
in
xlat
sub
add
pop
cmp
add
add
mov
and
iret
movsb
roll
add
add
pusha
idivb
aas
gs
pop
sahf
sbb
insl
xlat
sub
pop
mov
sbb
mov
push
out
iret
jb
jne
mov
int3
js
sbb
and
sub
ss
adc
mov
mov
icebp
pop
xor
and
jle
shl
and
rcrl
add
mov
and
jg
call
into
inc
mov
jo
rcrb
pop
add
add
pop
imul
mov
aam
ja
dec
fidivrs
daa
jl
fwait
pop
inc
jmp
push
test
cmpsb
sahf
cli
loopne
pop
inc
fidivrs
sbb
push
cltd
sti
sbb
xchg
fidivrl
cltd
fwait
loop
loop
xchg
jns
das
insb
cwtl
lret
mov
dec
das
xchg
or
jle
jbe
push
add
add
sub
sub
cli
adc
add
add
lds
mov
mov
pop
mov
je
lods
data16
in
mov
sub
inc
movsb
mov
mov
hlt
jge
ljmp
sub
out
bound
mov
out
push
push
jbe
pop
xchg
cltd
aas
stos
les
sbb
mov
add
dec
aas
int3
sbb
out
loopne
lods
sahf
mov
add
pop
add
add
mov
filds
xlat
mov
punpckldq
enter
push
fstps
aas
int
push
int3
mov
movsb
test
or
sub
jne
xchg
lahf
mov
and
ret
leave
or
bswap
out
mov
lods
mov
call
pop
into
add
add
test
fildll
push
inc
sub
sbb
add
pop
add
add
and
push
lds
mov
pushf
sti
lret
xor
lds
out
pop
xchg
pop
jmp
lahf
insb
aas
pop
cmp
lds
sub
mov
enter
cltd
mov
insl
loopne
in
int3
xchg
aas
cmpsl
les
pop
ficompl
mov
mov
les
add
fwait
loope
sub
sarb
add
aad
add
add
mov
and
adc
and
cmp
lock
push
shrl
pop
movsb
or
mov
sub
or
cli
or
mov
inc
mov
pop
inc
adc
xchg
xchg
mov
push
enter
jmp
or
cmp
loopne
out
mov
int3
push
mov
cmpsb
cwtl
ljmp
rclb
fiadds
add
or
ja
dec
cmp
dec
adc
xlat
icebp
rcl
add
pop
add
add
call
add
pop
mov
add
ret
or
push
mov
jns
mov
mov
sti
idivb
push
jno
pop
dec
test
dec
xchg
sarb
out
sbb
sbbl
sub
push
mov
fnstsw
call
add
arpl
jge
mov
daa
jns
push
das
das
add
pop
add
add
push
pop
test
loopne
cmp
fcomip
push
int
and
out
mov
dec
test
jb
lahf
push
sarb
cld
inc
or
pop
ds
pop
inc
and
sbb
movsb
mov
sub
mov
insl
sbb
imul
sbb
jbe
std
inc
fstps
inc
jp
push
lods
dec
add
add
push
imul
sub
jle
push
fldl
add
add
aas
popa
lods
xchg
scas
dec
lea
popf
pop
mov
in
popf
nop
pop
dec
dec
clc
inc
jo
push
pop
stos
popa
mov
add
addr16
cmp
neg
stc
push
fstps
test
mov
sub
popf
insl
dec
sub
add
add
xchg
out
loope
repnz
add
adc
fildl
adc
add
add
ss
xor
and
enter
add
pop
add
add
rol
aaa
and
call
mov
push
push
dec
cli
sahf
sbb
inc
dec
and
jle
push
inc
js
addr16
fisttps
hlt
sahf
cld
ret
sub
dec
mov
leave
shlb
push
cld
addr16
jb
mov
in
dec
xchg
mov
outsl
pop
add
data16
cmc
sbb
add
add
add
add
out
mul
aaa
cmc
xchg
lcall
rcr
add
pop
add
add
inc
xor
dec
outsl
jge
mov
or
sub
push
push
adc
sbb
inc
scas
cmp
lret
or
std
sub
inc
loope
sbb
fsts
ja
jb
pop
cmpsl
imul
and
ja
fimuls
lods
push
fisubrs
cmc
ja
lods
dec
sub
push
aad
out
fucomip
ss
cmp
ja
sub
add
add
ljmp
pushf
fcomps
aad
shlb
sti
push
mov
mov
lahf
popf
stc
and
fs
repnz
and
push
adc
dec
je
cmpsl
dec
xchg
hlt
jns
push
inc
jns
sahf
mov
mov
inc
int
sbb
js
jl
enter
idivl
sarb
jp
mov
pop
sbb
pop
add
add
in
cld
fisubrl
sbb
pusha
inc
mov
add
pop
add
add
xchg
cmpsb
dec
mov
test
push
sub
insb
out
push
or
cmp
insb
lret
mov
cmp
xor
inc
mov
hlt
daa
push
std
sub
or
inc
fmull
mov
push
sahf
in
inc
xor
stc
add
add
push
les
in
lahf
sti
ja
rcll
daa
out
add
pop
add
add
insl
cli
cmp
ds
jb
ja
add
jns
or
adc
sti
fists
dec
out
push
inc
stc
cmc
mov
fucomp
or
xor
lahf
popa
sub
mov
int
aad
es
add
xor
push
sub
xchg
cmpl
push
loopne
lcall
add
pop
add
add
scas
cmp
mov
es
stc
outsb
mov
mov
daa
je
outsl
lods
ret
xchg
dec
add
pop
pushf
xchg
loopne
cmc
jp
roll
push
mov
jb
or
or
xchg
or
addr16
test
insl
dec
cmp
je
sbb
fwait
rcrl
lcall
sub
add
test
and
pop
dec
mov
filds
add
add
shll
in
lahf
dec
sbb
sbb
js
and
insb
mov
xor
clc
repnz
pop
insb
mov
jg
push
mov
pop
xchg
jg
shl
push
repz
orl
pop
jmp
jbe
insb
inc
xchg
rcr
out
cmp
insb
jecxz
add
outsl
mov
jmp
push
fcmovu
in
ds
filds
add
add
stc
sahf
and
pop
sbb
jbe
into
mov
std
sbb
out
aad
push
cmp
iret
repz
xchg
sbb
jecxz
int3
pop
cltd
add
cmp
test
xchg
dec
mov
or
pop
add
ret
push
imul
sbb
hlt
hlt
in
add
add
sbb
inc
jecxz
mov
sub
add
pop
add
add
inc
or
lret
xchg
add
push
js
into
mov
in
push
mov
mov
cmpsl
mov
xor
imul
xchg
loop
xor
out
inc
and
xchg
aad
leave
adc
adc
add
dec
ljmp
mov
scas
add
add
add
add
add
mov
icebp
and
icebp
popa
mov
add
add
jp
jo
aad
pop
xchg
sub
xchg
adc
insl
call
pop
cmp
pop
mov
xor
mov
mov
fs
neg
xchg
adc
mov
shrb
rol
push
add
jge
cmpl
dec
add
pushf
cmp
xchg
or
mov
scas
adc
adc
repz
das
cli
fists
dec
es
lds
loopne
loope
add
add
inc
aad
push
cmpsl
xbegin
inc
stos
cmp
inc
adc
sub
scas
fiadds
add
and
and
ljmp
test
arpl
adc
inc
test
lcall
jae
xchg
je
das
mov
dec
jl
fsubrp
fisubs
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
add
add
add
add
add
add
add
add
clc
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
