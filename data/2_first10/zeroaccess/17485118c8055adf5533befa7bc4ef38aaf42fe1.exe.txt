push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
jl
jl
jle
jl
xlat
cmp
ffree
pop
push
add
cmpps
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
dec
add
stc
cmp
jle
test
pop
sub
jp
jl
rcrb
cmpsl
test
jbe
add
mov
out
test
loopne
sub
mov
iret
in
adc
sbb
data16
mov
xchg
mov
mov
push
mov
js
pop
push
adc
idivl
shr
int3
and
push
sub
mov
popf
nop
ja
rolb
jne
mov
jne
inc
jns
pop
es
and
in
jno
cmp
enter
pop
sahf
testb
call
mov
xor
test
jge
adc
pusha
std
add
push
sub
inc
addr16
mov
data16
mov
lds
aaa
idivb
inc
push
inc
lahf
test
ffree
sub
rcll
inc
inc
add
or
push
movsb
cmpb
mov
add
add
inc
insl
sahf
lcall
xor
popf
cwtl
es
xchg
add
gs
idivb
mov
insb
into
popa
sub
and
sbb
sbb
jb
daa
sbb
shll
cs
push
test
xchg
test
pop
push
or
or
ss
inc
imul
dec
movl
sub
xchg
ret
loop
roll
jg
and
negl
andl
call
cmp
xchg
mov
push
gs
lea
rcrl
jg
hlt
lret
sbb
push
inc
js
jmp
call
mov
mov
test
setp
mov
ret
dec
push
das
pop
xchg
testb
sbbb
sbb
imul
jb
cmp
adc
hlt
add
mov
mov
cmpsb
or
sarb
test
stos
ss
aas
shrb
mov
popf
xor
repnz
jb
aad
pop
fcoms
outsl
in
xchg
xchg
out
mov
inc
or
adc
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
aad
in
addr16
jl
jle
jl
mov
insb
cmp
es
adc
fdivs
sti
inc
cld
adc
aad
pusha
in
mov
ficompl
scas
jge
and
push
imul
fdivrs
std
mov
imul
mov
cmc
or
jp
jb
in
decb
sarl
test
popa
dec
push
rcl
xor
pop
sahf
push
cli
bound
adc
pop
lret
pop
test
cmp
pushl
int3
loope
sti
add
std
incb
mov
hlt
sub
xor
imul
xor
idivl
rolb
pop
push
push
mov
mov
xor
or
out
jmp
lea
jae
push
std
xchg
xchg
pop
bound
or
movsl
jle
fbld
adc
xor
pop
je
stos
mov
xchg
jge
jle
shl
add
mov
jo
add
or
dec
arpl
push
mov
mov
stos
lret
out
sbb
inc
jg
mov
ja
push
cmpsb
mull
push
or
ficompl
lret
mov
pushl
mov
mov
push
and
and
stos
sub
add
push
push
loop
cmp
andl
pop
movsl
cli
lods
adc
sub
add
sub
push
or
xchg
xchg
ficoml
xchg
push
mov
lahf
add
jge
jecxz
sub
dec
scas
into
cmp
mov
test
hlt
jg
insl
xchg
mov
test
iret
mov
loopne
add
dec
xorb
and
sbb
bound
xorl
sbb
test
push
add
cmpsb
cs
stos
xor
imul
mov
dec
or
push
mov
push
inc
lcall
rol
xor
cmp
jns
cltd
adc
dec
lods
in
inc
pcmpgtd
daa
stos
into
xlat
stos
bound
jp
or
and
imul
sbb
mov
or
in
cmp
adc
and
daa
push
int3
cmp
ds
or
clc
xlat
or
mov
xchg
scas
jl
enter
xchg
sti
dec
push
mov
inc
mov
inc
mov
mov
test
xchg
mov
out
mov
mov
insb
imull
mov
shlb
inc
loopne
xchg
gs
pop
mov
xor
mov
mov
loop
es
mov
and
or
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
aaa
sbb
dec
dec
jnp
jl
jle
jl
sub
les
sahf
fwait
sub
mov
add
sub
fwait
mov
sub
xchg
mov
mov
adc
jb
push
in
pop
scas
mov
mov
mov
inc
or
fisubrl
mov
push
mov
jmp
or
xchg
xor
test
mov
scas
iret
sub
call
ret
imul
dec
mov
adc
ja
jbe
out
xor
inc
mov
out
daa
xchg
xor
adcb
pop
iret
lahf
sbb
shll
cmpb
aaa
mov
sub
xchg
pop
into
shlb
mov
test
movaps
int3
out
xchg
cmc
mov
std
sbb
cmp
sub
out
pshufw
dec
rolb
enter
lcall
mov
es
sbb
cmpsl
jecxz
movsb
xor
sbb
ja
jo
jge
frstor
dec
lcall
push
or
int3
pop
mov
adc
outsb
out
dec
mov
outsl
cmp
and
outsl
loop
xchg
fsubr
cmpw
push
out
clc
cmp
mov
mov
aad
xchg
dec
gs
push
or
lcall
add
addr16
cmp
mov
testb
les
rcr
aam
sub
dec
push
push
push
das
sub
test
int
mov
and
hlt
and
nop
pop
stc
movsb
adc
mov
clc
push
and
mov
lcall
cmp
push
push
or
add
iret
xchg
xlat
jmp
mov
inc
orb
xchg
fstpl
cmp
mov
pop
adc
adc
rcll
xchg
pop
sub
inc
es
sbb
mov
in
or
les
lods
dec
dec
xor
test
sbb
cmpsl
xor
pop
in
ss
adc
std
gs
ljmp
cmp
mov
cmp
cwtl
nop
jb
pop
stos
inc
ss
aas
pop
out
scas
mov
scas
dec
test
sbb
shrb
ss
mov
fdivl
out
jne
test
inc
out
lea
and
mov
mov
xor
cmp
inc
push
stos
xor
jg
cli
repz
aas
jnp
subl
out
fbld
mov
sbb
or
sbb
jne
aad
gs
adc
bound
and
adc
ss
sub
xor
adc
ss
loop
data16
popf
sub
sub
int3
aaa
xchg
jne
jge
xor
mov
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
push
sbb
loop
xchg
leave
dec
cld
add
gs
and
and
dec
mov
push
mov
testb
mov
push
fisubs
aam
cmp
sub
jmp
push
fwait
jecxz,pn
mov
push
ljmp
stc
out
lock
into
mov
inc
pop
push
int
or
xor
sub
dec
in
mov
hlt
rcll
push
push
jmp
mov
and
test
sub
add
cld
mov
iret
orb
adc
stc
cmp
dec
test
rcrl
xor
in
push
lcall
fs
and
jle
jp
repnz
mov
jmp
mov
js
shrb
pop
leave
push
cmp
xchg
xchg
inc
mov
xor
sub
gs
das
daa
jg
aam
add
int
shl
pop
pop
bnd
cwtl
ror
jbe
test
push
test
jnp
cmpsb
addr16
cwtl
mov
sub
fst
leave
fs
js
hlt
out
inc
pop
lods
xor
jb
js
or
sub
or
testl
xchg
imul
add
jne
mov
clc
notb
inc
mov
outsl
lock
data16
cmc
push
mov
cwtl
test
js
shl
adc
popf
sahf
xor
scas
lock
cli
mov
jg
add
dec
mov
cwtl
js
sbb
push
pop
jne
push
dec
stos
cmp
cmp
pushf
and
loope
faddl
cmp
pop
adc
jo
nop
jbe
aad
cvtdq2ps
outsl
icebp
and
dec
mov
mov
cli
sub
ret
cmp
popl
popf
sub
repz
mov
mov
and
das
stc
xchg
int3
aad
rcl
dec
arpl
out
lds
or
pop
lods
in
icebp
pop
imul
push
out
sub
jmp
loopne
adc
add
nop
imulb
mov
insl
and
cmpsb
adc
js
out
test
popf
ret
inc
inc
cwtl
mov
in
shlb
xchg
lods
aad
arpl
out
push
jle
shl
pop
cld
mov
dec
jmp
dec
or
aad
bound
jno
lods
or
dec
xchg
leave
mov
fisttpll
mov
divb
dec
dec
inc
and
je
and
inc
pusha
xor
cs
cmp
xchg
into
ret
data16
and
dec
insb
inc
inc
stos
cmp
push
in
repz
and
dec
xchg
dec
aad
orb
cmp
inc
add
cld
movzwl
add
mov
mov
jmp
adcb
pop
andl
fcomps
jle
jl
pop
pop
sub
add
inc
pushf
push
aaa
mov
jno
xor
mov
and
out
test
cmpsl
inc
jecxz
push
fdivl
sbb
add
scas
andl
push
jl
mov
rcrb
enter
imul
rolb
cmpsl
stos
mov
inc
adc
adc
pusha
in
push
std
add
lret
sbb
mov
pop
nop
cmp
outsl
mov
movsl
cmp
mov
sub
mov
mov
leave
outsb
clc
xor
pop
push
xchg
mov
ja
clc
inc
pusha
sbb
aas
push
into
in
outsb
imul
or
out
or
je
inc
repz
sub
cmp
add
dec
fcomi
sahf
fld1
pop
loope
fmul
push
push
jns
jmp
sarb
shrl
sub
out
hlt
push
mov
ljmp
lods
mov
cld
mov
mov
cmp
movb
or
inc
pop
ret
loope
xchg
js
sbb
mov
jns
cmp
lods
push
xchg
xchg
out
shlb
lds
xchg
jns
fsubl
aam
addr16
adc
pop
jne
pop
adc
lds
jecxz
or
adc
cmp
xor
imul
cmp
sub
dec
dec
mov
jle
jnp
cmpb
or
cmpsl
lcall
inc
mov
lcall
test
mov
jo
stc
sub
arpl
jns
mov
cmp
push
mov
ja
cmpl
sub
loope
rol
stos
out
inc
and
mov
adc
pop
imul
mov
das
rcrl
cmp
div
cli
movsb
in
jmp
inc
aad
shl
xor
dec
clc
or
push
stc
loop
sub
jo
xchg
mov
sbb
pop
in
popa
jg
xchg
add
sub
xchg
outsl
popa
add
fwait
inc
mov
addl
mov
pop
call
and
in
subb
pop
adc
xchg
xchg
xor
shrl
inc
int3
mov
jge
outsb
movsb
and
cmp
jae
pusha
decl
test
fld
push
cmpsl
loope
mov
and
jge
popa
or
ja
adc
xor
pop
fcmovnb
mov
movsb
or
xchg
test
xchg
jnp
xchg
insl
xor
xchg
rclb
jle
fstps
ret
test
repnz
jns
cmp
scas
xchg
clc
ss
daa
sti
rorl
xchg
and
leave
mov
lcall
shrl
cmp
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
pop
add
sti
mov
jnp
jg
repz
jmp
jno
std
push
repnz
jae
xchg
jo
js
xor
aaa
in
add
pop
dec
jne
and
pop
mov
fisubs
pop
mov
loopne
dec
addr16
xor
inc
inc
dec
pop
sbb
xchg
adc
pop
add
cmpb
xor
adc
sbb
lds
and
sub
xor
fs
cmp
jmp
iret
fs
es
pop
sbb
leave
scas
or
or
das
and
mov
in
pop
mov
fs
mov
mov
in
pop
jl
jbe
or
sbb
aas
lea
and
mov
dec
mov
stc
mov
mov
pop
push
xor
inc
add
pop
inc
adc
xlat
lock
sub
sub
aas
std
mov
addr16
mov
adc
push
mov
stc
xchg
pop
iret
sbb
sub
mov
and
xchg
imul
push
fcompl
xchg
cmp
ret
mov
rorl
pop
pop
ret
jns
cmc
hlt
cmc
xor
rcrb
mov
mov
mov
ret
xor
int
cmp
jno
out
cmp
push
scas
ss
xchg
out
movb
sarb
add
mov
mov
aaa
out
sub
or
ret
nop
xchg
sarl
out
inc
push
jnp
mov
pop
iret
fwait
mov
push
imul
xchg
pop
push
adc
xor
xchg
dec
aaa
xor
jbe
sbb
aaa
mov
bswap
mov
stc
ja
inc
lds
sub
inc
fldenv
in
inc
cli
dec
push
cmpsl
jp
ret
popa
ret
ss
pop
xchg
bound
add
aas
jmp
pop
mov
mov
rclb
imul
inc
mov
iret
xlat
ss
mov
inc
push
push
fbstp
std
mov
addl
push
hlt
sub
or
stos
jge
push
jg
xor
dec
xlat
std
pop
and
aad
in
mov
aad
sarb
pop
lahf
mov
ss
add
sbb
xchg
push
cmp
xchg
test
aaa
pop
adc
sub
jle
das
mov
lods
jp
inc
pop
xor
sub
jne
adc
mov
adc
mov
cmpsb
push
outsb
add
loopne
dec
fistps
lahf
mov
imul
das
jno
pop
and
sbb
cmp
pusha
je
or
push
mov
movsl
jmp
pop
mov
xor
lea
mov
mov
cmp
jmp
mov
jne
adcb
xchg
enter
jl
jle
jl
xor
mov
shlb
sub
push
pop
daa
imul
je
cmpsl
scas
mov
mov
mov
fadd
mov
into
loopne
insb
mov
daa
jp
add
js
sbb
xchg
fldcw
dec
cwtl
sbb
dec
sub
fsts
and
jb
inc
mov
mov
sub
push
jne
stc
pop
mov
or
adc
add
cmpb
mov
add
fisubs
inc
xchg
and
ss
sub
cmpl
iret
jmp
sub
cmp
enter
mov
jbe
mov
scas
inc
jnp
mov
fstl
ljmp
push
addr16
dec
fidivl
stc
repz
cmp
sbb
or
jne
imul
gs
fcomi
cmpb
or
xchg
lret
or
pop
bound
sub
and
add
and
in
push
inc
pop
dec
dec
imul
pop
inc
movsl
aad
push
pop
je
rcrl
icebp
fistpl
pop
outsl
sbb
mov
inc
push
jl
pop
mov
lock
orl
inc
stc
adc
sub
hlt
inc
stos
sbb
sbb
out
cmp
dec
pop
into
xchg
in
mov
sbb
xchg
bound
ret
xchg
cld
and
or
int3
and
or
mov
dec
addr16
add
push
jge
nop
pop
gs
cmpsb
cmpsb
icebp
pushf
dec
enter
ret
mov
cmp
dec
push
ds
mov
jnp
mov
adc
pushf
cmp
mov
inc
pop
pop
stc
adc
sti
jmp
push
push
or
pop
pop
mov
xchg
popa
sub
xchg
ds
mov
cmpsb
in
add
xorl
fwait
pop
pop
stos
stos
stc
sbb
test
cmpsb
adc
sub
push
cmpsb
sub
jae
add
jmp
push
icebp
in
xor
mov
sbb
das
daa
dec
adc
sub
xchg
outsb
mov
in
in
test
mov
push
gs
mov
lahf
dec
sub
sbb
cli
xor
xor
pop
cmpsl
lock
sub
dec
push
jmp
mov
sti
xor
inc
lods
push
dec
popa
inc
and
inc
sbb
lret
or
jge
cmp
shlb
dec
mov
cmpxchg
mov
in
jmp
movsb
dec
lods
push
inc
sub
mov
pop
cli
test
sbbl
mov
insl
rcr
jo
mov
shr
xchg
xor
out
mov
sbb
hlt
ja
pop
lods
aad
scas
xlat
dec
xlat
bound
sbb
push
add
add
lea
xor
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
rcrl
fisttpll
jl
addr16
jl
push
into
fadds
in
out
roll
cmp
decb
pop
mov
pop
cmp
test
pop
dec
mov
inc
jae
jo
hlt
pop
es
push
cmp
and
mov
pop
xchg
push
stc
xchg
movsl
lcall
loope
jmp
jge
lret
push
lcall
mov
jl
add
pop
insb
xchg
clc
inc
cmp
in
fdivrl
incl
sbb
fisttpll
mov
aas
es
push
repz
pop
sbb
lods
and
les
stos
push
iret
outsl
xor
fidivrs
cmp
xor
mov
out
cmp
jmp
outsb
icebp
sub
or
push
pop
shll
pop
cmp
push
jno
test
jns
es
imul
call
or
test
add
dec
test
icebp
jns
cld
das
xchg
sahf
or
sahf
shlb
daa
pushf
stos
das
jmp
xchg
jge
insb
xchg
adc
mov
sub
popl
adc
fldenv
add
cmp
cmp
cmpsb
lcall
cmpsb
jns
fldenv
test
mov
out
mov
icebp
xchg
xchg
ljmp
inc
mov
repnz
sub
sbb
insl
sub
in
add
outsb
movsl
or
and
idivl
xchg
sub
xor
ss
popf
add
aad
in
movsl
push
insb
dec
add
pop
adc
mov
xor
std
insb
loopne
rcll
gs
fdivs
mov
pop
cmp
rolb
addl
lcall
mov
fistps
dec
jbe
outsl
fwait
movd
scas
in
pop
sahf
and
push
push
xchg
inc
insb
dec
cli
ss
dec
dec
dec
mov
sub
mov
cmp
out
lock
in
inc
fisubrs
adc
xchg
orl
sbbl
incl
cltd
dec
dec
stc
push
les
or
in
pop
ds
aaa
mov
test
xlat
clc
out
sub
pusha
xchg
jp
mov
cmp
xchg
add
jecxz
mov
insb
push
shlb
pop
push
nop
cs
jbe
cmp
jns
imul
scas
push
cmpsb
lods
sahf
sbb
jns
aam
push
jns
fs
nop
jp
sub
sub
fnstenv
add
bnd
test
arpl
in
pop
push
bound
add
jne
clc
lahf
shlb
and
and
loope
loope
mov
in
shl
xor
mov
pop
mov
push
jae
in
jbe
fbstp
sbb
imul
mov
js
inc
cmp
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
ret
push
or
adc
jl
sbb
mov
push
pusha
mov
inc
xchg
sti
dec
test
lret
frstor
out
cld
jecxz
cmp
adc
mov
loopne
and
insl
fnstsw
es
and
xor
jne
lds
lods
jne
cmpsb
xchg
dec
movsb
jmp
adc
and
notb
addr16
test
jns
xchg
mov
xchg
js
push
or
ret
dec
rcll
pop
lods
jb
inc
dec
shrl
push
imul
mov
les
loope
ret
lea
lret
in
ja
mov
outsb
add
out
insl
sbb
iret
cmp
imul
clc
and
jle
push
push
jp
pop
icebp
and
cwtl
fisubrl
out
push
mov
fcomi
daa
out
data16
ljmp
out
mov
mov
and
fwait
jne
cli
out
mov
js
jge
and
mov
add
notb
dec
cmp
mov
mov
cltd
cmp
inc
jecxz
mov
inc
jge
bound
das
jne
push
jno
pop
mov
fsts
mov
loope
es
es
sub
xchg
das
dec
xor
sub
je
cmp
push
in
imul
or
push
adc
pop
out
xlat
vorps
or
and
xlat
jbe
push
mov
push
dec
inc
hlt
hlt
lock
sbb
push
fwait
loope
or
leave
addl
cmp
imul
mov
inc
imul
lret
and
imul
dec
fst
sub
xchg
loope
xor
sub
push
clc
dec
lods
push
and
xor
mov
mulb
inc
adc
lahf
fwait
xchg
inc
cmp
mov
mov
xchg
jecxz
hlt
adc
cli
add
pop
sbb
adc
push
mov
pop
sub
fimuls
cmp
xor
lret
jb
mov
push
mov
loop
inc
inc
xchg
adc
cli
lret
ljmp
push
call
aaa
daa
xor
mov
mov
addb
push
or
dec
lods
dec
push
clc
push
pop
mov
call
sub
sub
pop
adc
cli
mov
scas
inc
stc
loop
test
sub
dec
fsubs
cmp
mov
and
adc
jo
das
push
push
mov
inc
jmp
das
jl
adc
rcll
test
fdivr
xchg
std
mov
push
mov
jne
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
pop
jl
push
jl
addr16
jl
mov
mov
mov
in
fidivl
mov
gs
popa
aam
lds
je
inc
xor
cwtl
push
data16
imul
mov
loopne
sub
push
pop
jns
loop
inc
js
xchg
dec
sbb
pop
add
outsb
aaa
lods
cmp
add
div
nop
add
xchg
loope
pop
add
or
and
or
aaa
adc
mov
sahf
arpl
clc
dec
dec
stos
push
push
ret
cmp
arpl
outsl
out
divb
and
into
scas
int3
mov
jbe
ret
mov
or
cmp
mov
inc
jmp
imul
sub
mov
fwait
addl
inc
inc
jg
aad
cmpb
roll
push
adc
mov
adc
repnz
insl
dec
imul
add
ljmp
pop
sbb
and
jl
inc
push
xor
or
rcll
xlat
js
jo
xorl
out
ret
ljmp
mov
or
shrl
or
mov
aaa
xchg
movsb
adc
dec
mov
xchg
jne
rcl
sub
lods
xchg
xchg
sub
sbb
mull
sarl
pushf
and
das
inc
mov
mov
and
dec
lcall
mov
lcall
pop
or
loopne
and
and
jae
insb
movb
xchg
incl
mov
mov
cmpsl
fildll
aaa
mov
and
add
ret
gs
mov
push
add
das
cmp
pushf
je
cld
aas
ret
cmovs
push
add
push
mov
cmp
xor
xchg
movsl
test
adc
mov
or
inc
enter
add
inc
sub
ret
cmpsl
add
push
pop
dec
mov
or
push
out
dec
push
xor
inc
pop
fimull
or
push
rcll
iret
rorl
stos
sbb
inc
shll
int3
mov
push
hlt
sahf
push
inc
jge
mov
loope
js
and
das
dec
clc
std
sub
lcall
lea
jbe
lret
into
jecxz
xchg
jp
sbb
adc
lock
adc
and
lea
sbbb
and
sub
sahf
inc
fidivrl
cmp
inc
loopne
pop
out
stos
or
pop
in
mov
pop
adc
xchg
fisttpll
or
stc
ja
push
mov
pop
sub
mov
ja
push
shrl
out
test
gs
mov
roll
xchg
mov
sbb
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
fistl
jl
insl
jg
jl
mov
mov
frstor
in
clc
clc
xchg
pushf
stc
pop
xor
jecxz
not
stc
daa
shlb
dec
jb
inc
xchg
sub
mov
add
cmp
fwait
std
adc
das
or
scas
sub
pop
and
push
pop
aam
and
cmpb
pop
lea
cwtl
inc
into
xorl
scas
in
push
fidivrs
dec
test
xor
sbb
pop
mov
lods
out
jecxz
mov
outsl
into
std
data16
stos
mov
in
pop
jbe
jp
adc
adc
cld
or
sbb
std
adc
icebp
les
sbb
and
imul
clc
inc
cmp
inc
mov
loop
dec
imul
popf
push
inc
ljmp
add
jmp
sub
sarb
xor
andl
pop
mov
mov
push
or
push
push
xchg
mov
les
jle
notl
pop
aas
sub
sarb
in
xchg
mov
push
movsb
lock
lcall
add
lods
inc
dec
mov
mov
cmpl
mov
inc
mov
out
test
rclb
adc
dec
nop
pusha
insb
jbe
into
inc
imulb
ret
idivl
mov
pop
add
jl
xchg
cmp
stos
test
insb
mov
mov
mov
movsl
imul
jle
aas
mov
inc
leave
jns
mov
inc
add
jmp
xchg
je
call
cmpsl
out
stos
adc
push
cmp
popa
adc
sahf
jg
fildll
add
lods
mov
cs
outsl
aas
cmp
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
out
sbb
jl
jns
inc
clc
adc
ret
push
call
inc
nop
fcomps
outsl
in
adc
rcpps
dec
into
test
jnp
mov
pop
out
mov
bswap
divb
push
pusha
xor
lret
sbb
repz
cmp
xor
sbb
int3
enter
pop
push
push
sub
jl
stc
call
mov
push
push
or
xor
mov
xchg
pop
lods
in
mov
movsb
or
lcall
hlt
lds
dec
mov
pop
add
xchg
cmpsb
cmp
repz
ljmp
rcr
cld
dec
cmp
stos
int
ja
and
cmp
inc
test
jle
inc
sbb
test
xor
xchg
je
mov
cmpsb
mov
and
pop
xchg
mov
rorb
xchg
jle
insl
nop
pop
and
pop
int
xor
in
inc
push
xor
mov
stos
shrl
xor
std
xorl
je
icebp
mov
jle
mov
mov
ss
les
cli
inc
cmpsl
scas
fisttpl
imul
cmc
jo
sahf
nop
mov
call
mov
lds
push
or
adc
repnz
add
adc
ret
cmpsl
mov
cmp
nopl
pusha
gs
out
int3
jb
pop
pop
push
out
inc
mov
cmp
mov
ret
mov
sbb
in
cmpsl
push
dec
dec
xor
mov
adc
lods
add
mov
pop
lods
aad
and
shll
pusha
xor
inc
and
lods
mov
dec
mov
mov
mov
scas
dec
popf
mov
imul
mov
lcall
add
add
mov
sarl
hlt
add
sahf
je
jl
insl
jg
jl
add
cmp
add
js
sbb
bound
sbb
cmc
dec
and
push
sarl
adc
test
repnz
sbb
fisubs
jo
rolb
pop
cmp
inc
sub
adc
das
sbb
lea
fnstenv
mov
mov
subb
jno
cli
add
adc
testl
out
jmp
xor
jae
out
jno
xchg
sub
scas
push
sub
xchg
movl
adc
stos
inc
les
insl
pushf
out
movb
lock
jae
lds
repz
xchg
hlt
push
dec
adc
mov
testl
push
test
xor
jmp
sbb
scas
cltd
xchg
mov
mov
inc
cs
hlt
mov
cmp
push
out
roll
adc
mov
aam
hlt
insb
mov
movsb
icebp
inc
leave
jge
leave
cld
dec
pop
fwait
in
mov
stos
inc
sbb
sbb
in
fnstcw
cli
jg
jne
pop
sub
mov
xchg
push
mov
sbb
push
dec
push
xchg
sahf
add
ror
mov
pop
push
mov
xchg
cmc
bound
mov
scas
iret
push
dec
clc
or
aam
fdivrl
dec
jecxz
dec
pop
sub
out
loop
mov
in
inc
leave
add
adc
jne
cltd
push
clc
push
ss
jge
and
iret
and
dec
add
shlb
inc
adc
data16
test
inc
xlat
es
add
js
xor
in
xor
mov
leave
inc
mov
jle
sub
cmpsb
xor
fsubl
jae
stos
mov
aas
jns
jp
leave
pop
loop
push
dec
mov
jmp
addr16
or
arpl
aas
cwtl
pop
aad
and
gs
jl
insl
jg
jl
mov
push
pop
jl
movsb
lods
push
test
lcall
xchg
ljmp
js
aam
mov
arpl
pop
mov
sub
or
mov
jb
dec
cmp
pop
loopne
jg
roll
in
loop
push
sub
xchg
mov
cltd
mov
roll
aam
jno
rcr
jecxz
repnz
popf
lahf
mov
sbb
cmc
jecxz
lret
inc
sub
jg
jno
sub
or
pusha
lcall
push
cmpb
pop
call
je
jno
or
scas
xchg
addb
adc
mov
mov
sbb
out
in
mov
jmp
lret
ret
jns
or
shrl
and
xchg
mov
mov
mov
sahf
divl
gs
jae
sbb
xchg
loopne
out
inc
enter
nop
dec
cli
dec
test
pusha
inc
in
loop
ror
dec
sub
in
jp
fsubrs
inc
daa
jb
aas
pop
dec
xlat
xor
cltd
add
jns
inc
stc
in
dec
cmp
das
mov
addr16
sbb
call
adc
sbb
jecxz
dec
sub
mov
into
cli
leave
or
ja
js
loop
jp
enter
cld
mulps
lock
push
cmp
in
in
mov
mov
mov
stos
xchg
negl
pop
shr
sbb
dec
add
aas
xchg
js
popa
pushfw
in
fisttps
mov
inc
lahf
cmpsl
jnp
fisubrl
dec
rol
mov
dec
lret
bound
pop
inc
push
inc
adc
mov
cmp
aad
hlt
jecxz
xor
push
mov
cmp
mov
dec
pop
or
sub
shll
dec
aaa
enter
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
cmovp
jl
insl
jg
jl
fstps
fwait
push
or
imul
xchg
push
stos
cmpsl
and
negb
shll
jg
dec
jmp
jl
daa
dec
subb
and
lahf
push
aam
cmpsb
xlat
sbb
mov
pmaddwd
test
xchg
call
push
cmp
in
iret
pop
push
loop
mov
pop
add
or
cltd
insb
not
les
std
push
daa
shl
jecxz
mov
and
in
jno
cmp
inc
push
sub
sbb
aam
clc
in
adc
int
insl
jl
orl
sbbl
mov
ret
xor
sbb
lds
xor
scas
cmpsl
mov
jmp
repnz
popl
mov
sub
in
fldl
inc
adc
movsb
sub
mov
imulb
or
xlat
xor
cmp
xor
fcoml
rclb
nop
jmp
xchg
pop
mov
fnstenv
mov
jp
mov
jnp
pop
sahf
jp
loop
gs
push
mov
fnstcw
fs
xor
sti
push
addr16
sbb
cmp
and
fs
sub
inc
push
sub
sbb
clc
mov
lods
jns
pop
mov
and
pop
dec
fadd
xorl
mov
shl
push
mov
xlat
add
mov
mov
jbe
rorl
shlb
sbb
adc
ja
cmp
cmpsb
xchg
pop
push
in
xchg
scas
cli
in
xchg
mov
sbbl
push
sbb
xor
pop
jne
add
aas
sbb
lea
lock
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
mov
faddp
or
aam
pop
push
and
dec
inc
inc
popf
outsb
push
cwtl
push
loopne
inc
push
arpl
xor
and
cmpsl
jno
sbb
add
cmc
or
imul
shlb
fistpl
mov
mov
jge
scas
push
lret
and
sub
clc
test
adc
loope
or
dec
repnz
mov
cmp
push
scas
orl
sti
push
lds
out
das
div
pop
gs
call
lods
inc
enter
push
jns
jno
mov
and
jno
add
or
push
add
push
push
jnp
dec
adc
mov
shlb
cli
pop
sarb
fbstp
jb
addr16
outsl
adcb
je
or
jb
insl
push
out
sbb
push
imul
jp
inc
xor
jb
adc
pop
shrb
jo
shrl
adc
inc
mov
add
mov
mov
cmc
mov
scas
shl
lahf
pop
into
in
lea
cld
sub
ljmp
mov
daa
cld
stos
fcmovu
xor
push
ds
push
dec
inc
lds
cmp
jecxz
lcall
push
arpl
pop
dec
ja
adc
or
imul
xchg
dec
add
loope
dec
in
je
push
mov
insb
mov
rcll
pop
pusha
test
sub
inc
movsb
xor
addr16
and
enter
nop
test
movsb
test
mov
lock
mov
js
ret
cld
fmull
fiadds
dec
dec
jae
adc
inc
repnz
or
mov
pop
ret
push
mov
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
inc
loope
sbb
jg
jl
ret
clc
scas
mov
out
std
std
call
ret
pushf
popa
clc
std
ret
mov
aas
fwait
outsl
sub
jo
lock
cmp
sbb
xchg
outsl
jnp
xchg
fidivs
pushf
sbb
push
add
das
bnd
incb
mov
scas
sub
mov
add
inc
adc
inc
and
inc
mov
sub
mov
jmp
adc
cmp
enter
pushf
mov
cld
xor
pop
push
sahf
xchg
jecxz
aaa
pop
das
js
fsubp
repnz
or
jns
out
inc
test
inc
sub
in
aaa
push
xchg
jmp
js
and
mov
out
dec
test
out
imul
or
mov
push
cli
cld
mov
cmpsl
jmp
mov
mov
mov
movsb
es
xor
je
mov
lret
adc
xchg
clc
xor
jnp
fidivl
into
and
fstps
jnp
data16
inc
pop
mov
add
inc
push
fwait
int
jae
dec
gs
aas
adc
ficoms
outsl
int3
adc
mov
dec
mov
inc
shrb
adc
mov
jle
int3
push
and
into
sbb
cmpsl
jle
int
jecxz
rcrl
jae
lret
outsb
mov
lret
outsb
and
lcall
fadd
mov
sbb
sub
push
xor
mov
negl
mov
in
jae
call
orl
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
mov
pop
or
stos
jg
jl
shrb
sub
cmpsl
pop
xor
aad
aam
sub
js
cmc
imul
iret
and
mov
mov
inc
pop
cld
xchg
adc
pop
xchg
cwtl
and
jb
jmp
dec
test
rorl
loope
ljmp
dec
stos
je
adcb
or
xchg
addr16
cs
push
enter
push
daa
mov
pushf
cwtl
scas
cmpsb
sub
or
xchg
lods
cltd
je
pusha
gs
xchg
adc
hlt
iret
inc
lahf
pop
mov
icebp
sub
push
dec
sub
sbb
shlb
subw
rcrl
dec
inc
xchg
adc
enter
push
fdivrl
ret
test
pop
in
test
mov
aam
sbb
sbb
jnp
mov
and
mov
xchg
aam
adc
mov
sbb
cmpsl
mov
nop
in
cmc
outsl
mov
mov
icebp
loop
jbe
lret
repnz
and
push
mov
dec
xor
or
ja
cli
jg
dec
ja
adc
and
arpl
adc
and
dec
aaa
pusha
gs
es
dec
inc
lods
cld
shll
mov
mov
testb
and
adc
and
in
adc
adc
mov
xchg
sub
ljmp
lea
push
shrb
mov
sub
data16
ficompl
add
add
add
bound
add
push
ss
add
sbb
add
int
add
roll
push
aad
ror
mov
cmp
jl
stos
jg
jl
adc
ljmp
stos
mov
mov
loope
arpl
pop
fstpl
mov
jge
mov
test
pop
lret
rcrl
jle
xor
jmp
mov
js
mov
and
cmp
mov
mov
movsb
xchg
jge
xchg
addr16
rorb
jo
repz
or
pop
add
lds
pop
cmpsb
test
sti
sarl
call
iret
xchg
ss
dec
push
int3
jo
leave
inc
adc
lret
and
and
dec
pop
stos
xor
fwait
push
addl
je
fimuls
adc
fimuls
jo
fs
add
mov
push
mov
sub
push
das
jp
outsl
jl
push
sar
adc
call
imul
fcmovu
cmp
cmp
in
xchg
mov
inc
adc
jmp
jl
mov
ret
cmp
cmp
clc
std
push
pop
sti
pop
fcmovne
add
sarl
js
and
gs
imul
mov
push
xchg
out
ret
jno
fcomps
cmp
btc
cli
sarl
xchg
inc
out
std
sub
arpl
cltd
lods
insl
iret
outsb
sarb
adc
sbb
pop
xor
pop
jnp
fildl
cs
inc
adcb
loope
adc
push
in
push
add
stc
inc
sbb
mov
push
mov
jbe
les
popa
jp
xchg
xchg
clc
lcall
jne
sbb
outsb
xor
mov
dec
idiv
out
movb
aaa
push
cmp
push
add
dec
ss
add
or
inc
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
mov
and
jg
jl
cmp
cmpps
aam
push
clc
aas
add
and
cmc
fstpl
jmp
jnp
pop
inc
adc
nop
popa
mov
push
pop
aas
sbb
cs
add
sarb
push
jb
iret
add
cmp
or
lds
call
dec
xchg
ja
lret
cmpsb
mov
shll
aas
pop
xchg
and
xor
mov
out
movsb
loope
mov
xor
xchg
push
mov
in
inc
imul
cmp
stc
adc
pusha
fidivrl
jmp
jmp
pop
pop
pop
push
insb
or
adc
lahf
cmp
and
push
jmp
add
stos
sbb
or
sub
daa
mov
dec
push
fiaddl
mov
fs
mov
sahf
or
mov
into
push
xchg
cmpl
sbb
lock
add
fiadds
jns
mov
push
test
mov
jg
pop
in
mov
imul
xor
adc
mov
in
or
cmp
pop
adc
je
loope
xchg
mov
mov
xor
pop
sub
dec
movsl
inc
dec
insb
mov
or
loope
and
push
mov
pop
aad
jno
popa
pop
outsb
push
popf
add
hlt
or
cmpsb
push
stos
inc
fwait
sub
push
andb
and
sbb
pop
fsubrl
cwtl
inc
push
test
mov
mov
iret
push
sbb
divb
scas
cmpsb
lea
in
and
loopne
cld
pop
xor
lods
inc
mov
mov
or
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
les
test
jl
inc
lahf
jg
dec
sbb
shr
outsb
mov
insb
loop
xor
cmp
mov
sub
mov
push
xchg
jle
mov
add
inc
mov
push
je
fcmovne
add
sti
fsts
dec
pop
mov
inc
sub
mov
pop
sub
fs
aas
mov
pop
push
out
xchg
mov
aaa
or
jo
inc
loop
cltd
loope
das
lret
add
mov
ficoml
inc
ret
fwait
imul
mov
jg
aas
ret
sbb
lods
and
imull
cmp
cld
mov
lcall
adc
aas
movsl
pop
dec
daa
data16
adc
pusha
add
pop
loopne
shl
mov
pop
cs
mov
xchg
clc
xor
shlb
std
out
les
fcomp
add
cmp
dec
ret
xchg
ljmp
jmp
adc
mov
in
xor
add
lret
lods
mov
shrb
frstor
dec
push
dec
xchg
or
push
pop
rcr
scas
popa
push
xchg
dec
int
mov
jns
pop
enter
push
lret
popf
loop
rolb
and
imul
leave
loope
dec
push
mov
pusha
sahf
cltd
arpl
out
lret
xchg
dec
push
hlt
nop
add
and
jl
popa
push
repnz
inc
pushf
ss
and
mov
out
imul
or
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
aam
test
jl
jg
jl
jl
xor
push
inc
pop
inc
mov
call
mov
popa
xor
pop
mov
call
mov
fistps
dec
and
push
sub
xchg
and
dec
or
clc
push
lds
mov
sub
jbe
xchg
loope
out
in
cmp
pop
cmp
shll
fistpll
lahf
and
dec
nop
xchg
mov
scas
cmp
cli
enter
fmull
push
aas
jg
dec
enter
mov
dec
test
test
outsb
mov
aaa
pop
movsb
mov
int
mov
cmp
xchg
lods
lret
insb
orl
jmp
icebp
jne
adc
clc
pushl
push
xchg
daa
in
fdivrl
das
mov
or
roll
outsb
sbb
sbb
xchg
fadd
xor
or
xchg
out
push
xor
pop
jo
mov
sbbb
xchg
push
pop
dec
add
and
lock
lea
jle
push
mov
jmp
xor
jns
pushf
aas
jge
lahf
lcall
sbb
push
fstp
push
lods
xor
xchg
stos
cmc
inc
loop
in
aam
pop
dec
cltd
fstpt
stos
adcb
shll
es
addr16
hlt
jno
jmp
xchg
cmp
sub
cmp
enter
popf
xor
sub
sbb
pop
test
loop
aaa
sub
mov
xor
add
aam
or
aad
aad
mov
mov
cmp
jne
mov
mov
movsbl
xor
jmp
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
xchg
add
stos
push
outsb
hlt
loop
cli
cmp
es
dec
hlt
push
orl
mov
lods
ret
mov
out
jb
out
mov
push
lea
fwait
dec
jbe
mov
outsb
jne
lods
bound
inc
mov
scas
imul
inc
jnp
mov
inc
fildll
pop
dec
inc
or
aaa
xchg
sti
push
xor
shll
jns
out
mov
je,pn
or
cmpsb
dec
js
stos
jb
sbb
iret
xor
xor
aaa
rol
xor
test
push
scas
adc
or
aaa
ljmp
mov
cmp
int
es
lcall
lock
sbb
out
ja
jae
faddl
les
pop
cli
cwtl
mov
in
cmpl
fwait
sarb
mov
push
aaa
pop
adc
xor
loop
bound
jns
mov
xchg
cmpsb
pop
sbb
rclb
adc
ja
sub
or
push
xchg
sub
inc
lods
dec
in
arpl
outsb
mov
stc
lock
and
mov
sub
cmpsb
push
dec
mov
dec
jbe
ds
dec
push
jo
and
xchg
xchg
xlat
push
jg
jecxz
mov
in
mov
in
dec
lods
adc
and
cmp
add
inc
les
jb
pop
insl
fists
adc
dec
mov
scas
fistl
test
cmpsb
ret
mov
fiadds
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
ret
movsl
sub
jg
jl
cwtl
cmp
ja
xor
fsubs
lret
and
iret
jg
mov
ss
xor
repz
mov
mov
daa
hlt
aas
je
or
cmp
and
mov
outsb
mov
lahf
push
popf
mov
sbb
pushf
or
sbb
movsl
push
cmp
add
in
rcrl
outsl
daa
pop
xchg
add
call
rorb
xor
rcll
pop
repnz
sysret
dec
pop
push
in
pusha
pop
xchg
or
ss
mov
test
movsb
mov
repz
lcall
xor
add
mov
cs
jns
clc
pushf
stos
sbb
ror
les
mov
push
popf
addr16
gs
loopne
sbb
imul
inc
add
mov
jbe
push
or
outsl
pop
fisubrs
push
xchg
negb
stos
cwtl
loopne
push
repz
cld
sub
hlt
and
inc
insl
insb
daa
fs
cmp
mov
ss
aam
test
movsl
mov
mov
dec
ja
xor
outsb
jno
aaa
in
lcall
cmp
lods
ja
lods
loope
xchg
notl
scas
xlat
roll
ffreep
test
outsb
outsl
add
cmp
fisttpll
loope
jmp
push
negl
cmp
sbb
scas
fimull
adc
dec
or
dec
insl
aad
inc
add
mov
push
sub
std
push
repnz
mov
aad
cld
push
subb
mov
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
cld
mov
jl
mov
jl
inc
popa
aam
pop
cmpsl
mov
sti
jno
add
xchg
fsubl
insb
cli
push
lea
adc
push
je
lds
jns
dec
dec
add
lods
jmp
xchg
dec
or
clc
pop
xchg
fcoml
sub
lea
mov
xor
cmc
jae
inc
mov
leave
fisubs
lret
and
gs
lcall
ds
mov
add
pushf
push
mov
ss
inc
push
push
or
push
xchg
jle
inc
xor
xchg
movsl
xchg
pop
push
ljmp
adc
mov
pop
pop
fadds
push
scas
or
out
push
cmp
push
add
js
cmp
xchg
cmc
arpl
dec
inc
push
rclb
adc
and
ja
arpl
mov
movsb
pop
push
ret
jmp
pop
inc
adc
mov
inc
pop
gs
pushf
dec
imul
pop
out
push
sub
push
lret
jp
mov
popa
jl
loopne
xor
call
xchg
shll
pop
sbb
xchg
dec
arpl
jb
mov
mov
cs
and
adc
jns
nop
stos
mov
inc
mov
test
js
test
aaa
test
ret
int3
scas
fcmovbe
into
push
call
shrl
rorl
dec
mov
mov
dec
sbb
mov
inc
xor
or
mov
push
sub
and
imul
ret
test
jecxz
pop
jl
ret
enter
cmpsl
sbb
outsb
nop
popf
lods
mov
sbb
adc
pop
inc
ds
sbb
movsl
adcl
cmc
fsubr
xor
js
test
popf
jp
push
insl
daa
jns
xchg
xchg
lret
push
ja
mov
mov
jb
sbb
xchg
xchg
dec
dec
mov
movsb
push
test
arpl
cld
add
push
push
int
cmp
sbb
pusha
cwtl
mov
cmp
dec
fsub
adc
jns
add
loopne
jnp
ljmp
mov
xor
add
cmpb
out
sbb
pusha
fsub
or
mov
sbb
adc
fimull
and
into
mov
scas
mov
inc
rorb
in
fcoml
cmp
ja
leave
mov
fisttpll
pop
sub
sub
aaa
scas
inc
mov
movl
insb
fstl
pop
pushf
sbb
mov
jmp
loop
adc
push
push
sub
lods
mov
push
outsb
mov
rcrb
scas
and
push
daa
jo
negb
and
test
outsl
nop
stc
pop
dec
add
fidivs
dec
pop
std
jno
dec
mov
adc
jbe
nop
xor
sbb
xlat
outsb
xlat
lret
dec
mov
insl
push
xchg
iret
cmp
cwtl
mov
mov
shrl
aad
iret
dec
add
push
imul
push
sbb
mov
dec
popf
sbb
push
mov
xor
inc
mov
in
mov
shr
cli
repz
insl
ja
cmp
dec
lock
or
test
inc
fstl
sbb
int
sar
push
jmp
xchg
xchg
cld
xchg
jge
cli
xchg
shrb
add
fucom
das
testl
lahf
xchg
stos
mov
inc
jbe
or
xlat
push
mov
fidivrl
imulb
arpl
inc
add
add
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
pop
lcall
mov
jl
jl
call
mov
subl
cmp
testl
repz
test
sahf
repz
adc
ljmp
jmp
adc
xchg
sti
add
xchg
cmp
insl
pop
rcrl
loopne
je
or
cmp
sbb
jae
sub
fadd
test
mov
or
adc
test
sahf
add
insb
sbb
mov
cmpsb
or
gs
mov
shll
sub
mov
xor
xor
inc
xchg
mov
mov
sub
xchg
xor
mov
leave
out
lret
mov
adcb
into
movsb
test
sub
dec
xchg
sarl
adc
loop
iret
mov
inc
insb
cltd
outsl
or
mov
fidivrl
movsb
rcrb
test
loope
rorl
in
data16
dec
cmp
xchg
aad
jnp
adc
hlt
rcrb
stc
mov
jp
stos
mov
inc
outsl
cmp
mov
popf
xchg
xchg
frstor
mov
push
xchg
or
lods
dec
aam
mov
jne
and
dec
xor
fiadds
in
int3
pusha
shlb
dec
sarb
xchg
ud0
inc
pop
adc
pop
lahf
xor
inc
xor
jmp
or
xchg
scas
fldt
cmp
cmp
aad
inc
lds
in
loop
bound
push
lock
cmp
dec
mov
mov
js
out
into
or
sti
pop
dec
out
leave
incb
sub
jge
pop
cmpxchg
xchg
insl
in
fs
mov
sbb
push
push
rorl
cmpsl
adc
ja
repz
mov
mov
test
ljmp
cltd
rclb
rorl
jmp
adc
loopne
mov
and
movsl
xor
xchg
insl
pop
xor
rclb
or
jg
repnz
es
popf
leave
cmp
push
insl
mov
xchg
jle
or
in
fs
cwtl
call
stos
cmpsb
incb
cld
jecxz
dec
cmp
fs
adc
mov
inc
inc
pop
cli
sti
xchg
loope
int
cld
push
mov
mov
sub
xchg
adc
jnp
pop
addr16
mov
hlt
pop
sbb
shll
bound
pop
and
arpl
rolb
push
cmp
pop
xchg
lds
aaa
mov
mov
jnp
test
pop
addb
xchg
in
mov
iret
cmp
arpl
pop
sets
cltd
adc
mov
sahf
mov
xchg
sbb
mov
dec
test
pop
sub
push
adc
lock
push
sbb
in
in
and
adc
orb
mov
or
push
mov
icebp
shrb
xor
cwtl
push
shlb
or
cmpsb
add
shll
and
popf
mov
cli
mov
push
xor
cltd
jg
dec
xor
add
mov
popa
icebp
pop
add
jo
pop
test
and
mov
fs
add
push
jae
lret
mov
mov
cmpsb
sti
xchg
jb
xor
out
lock
push
imul
push
mov
test
inc
add
outsl
aaa
inc
add
adc
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
xlat
and
stc
and
pop
insb
xor
or
add
lret
push
push
cs
dec
xor
mov
add
mov
outsl
lods
addr16
push
dec
cmp
je
fsubrl
push
inc
iret
xchg
mov
or
aad
adc
addb
dec
mov
jnp
lret
cmp
xor
push
push
stc
out
or
outsl
sub
pop
ljmp
pop
insl
mov
cmpsl
xor
lds
data16
outsl
adc
dec
adc
test
les
loope
insl
nop
pop
out
int
adc
sbb
lods
mov
lds
int3
xchg
imul
xor
clc
push
or
pushf
inc
push
fwait
xor
in
bound
xlat
stc
lods
sub
andb
aad
ds
mov
stos
roll
gs
js
repz
bound
loope
mov
dec
es
sarl
mov
cmpsl
push
les
addr16
shl
xchg
pop
outsb
repz
lods
aad
mov
push
popf
inc
mov
xchg
and
adc
jae
jb
inc
and
hlt
push
sub
add
sbbl
and
jo
adc
pop
dec
arpl
popf
or
mov
and
shrb
mov
data16
sarl
lahf
aas
scas
mov
mov
lret
dec
mov
das
das
or
imull
mov
pop
xor
inc
mov
cmpsl
mov
cltd
jg
pop
push
sbb
daa
pusha
mov
and
loopne
xor
loope
jle
cmp
int
jbe
cwtl
jno
fldcw
mov
ljmp
aaa
pusha
adc
mov
lods
sub
inc
mov
call
add
lds
pop
pushf
xchg
ja
pop
xchg
in
mov
push
add
or
loope
mov
mov
jae
rol
dec
mov
inc
and
add
nop
jmp
jecxz
dec
insl
and
dec
jbe
repz
or
cltd
stos
popf
xchg
pop
cmpsb
aad
lcall
lahf
push
pushf
mov
imul
das
scas
xchg
les
xchg
mov
insl
cmp
jmp
ja,pn
add
jns
fnstsw
imul
outsb
jb
dec
jo
cwtl
sub
aaa
stos
sbb
shl
daa
or
dec
and
icebp
imul
inc
lret
or
jp
out
mov
ffree
outsl
test
ss
outsb
mov
shl
cmp
lock
lret
lret
adc
lods
sub
xor
push
ret
inc
xor
push
ret
dec
dec
int3
push
and
rorb
push
mov
sbb
mov
mov
cmp
lahf
push
xchg
push
or
cld
das
and
mov
sahf
loopne
push
loope
test
mov
out
stc
popa
jg
insl
inc
insl
subb
outsl
enter
sbb
lods
jecxz
cs
dec
mov
out
dec
scas
mov
or
pop
call
icebp
adc
fldenv
out
loopne
lahf
adc
mov
or
xor
inc
sti
test
dec
and
lret
jae
jae
jg
inc
into
pop
cmc
popa
sbb
inc
cmpsb
dec
pop
mov
in
das
mov
lock
scas
xor
popf
pop
bound
movsl
adc
mov
icebp
dec
int
add
sub
shll
aam
sahf
outsl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
cmp
xchg
outsb
mov
dec
push
xorl
xor
jnp
xor
jo
pop
inc
xor
mov
or
stos
retw
cmp
mov
jbe
into
lds
add
jg
push
movsl
divb
lea
push
sub
shr
xor
shl
vrsqrtps
xchg
mov
ret
es
cmp
pop
xor
sub
jge
aam
pop
xchg
lahf
orb
fwait
es
out
mov
xor
inc
push
pop
inc
cmp
jecxz
dec
jl
xchg
popa
xor
jne
or
jno
les
xchg
adc
in
jb
stos
push
jne
mov
cmp
sbb
out
jmp
ljmp
lds
or
in
jmp
push
sbb
jne
push
out
imul
pusha
js
imul
aas
xchg
jo
test
ds
push
sbb
jg
xlat
mov
fwait
shrb
fistl
lcall
and
mov
push
sbb
and
fsubrl
loope
movsl
imul
push
mov
icebp
lret
pop
sbb
inc
lock
xchg
cli
dec
push
data16
test
dec
dec
scas
daa
iret
lea
pop
and
adc
xchg
imul
sbb
lock
aaa
stos
popa
daa
sahf
mov
add
repnz
daa
inc
pop
in
cmp
cmc
idiv
mov
into
ss
push
inc
mov
push
mov
sti
in
mov
test
cltd
inc
loopne
sbb
push
add
push
pusha
imul
les
mov
jno
cmp
add
bound
mov
roll
inc
pop
jns
cmp
andl
sbb
fsubl
and
pushf
sub
rcr
jo
jnp
icebp
insb
sub
hlt
stos
mov
sbb
mov
lret
mov
call
dec
sub
mov
outsl
push
mov
loop
sub
out
add
mov
jmp
movsb
loop
lret
mov
add
lock
push
mov
decb
add
sahf
fldt
xchg
data16
xor
pop
mov
inc
push
stc
repz
pusha
mov
pushf
inc
jns
ret
rclb
inc
imul
roll
out
jns
mov
rcl
into
xlat
cmp
aas
cmp
fwait
fwait
and
push
cmpsl
xor
inc
cmp
jl
in
mov
jo
fldenv
cmp
scas
or
push
adc
addr16
pusha
xchg
lcall
jnp
mov
jae
scas
lock
mov
xor
aaa
adc
test
push
jb
ret
or
lea
jae
int
std
pop
or
rcrl
mov
je
or
pop
cmpsb
push
dec
mov
popf
or
subb
sbb
mov
jnp
repz
sub
out
mov
and
insb
mov
mov
fistl
out
inc
outsl
data16
xchg
inc
cmp
pop
adc
test
sub
clc
aaa
in
mov
mov
insb
dec
cmp
ds
jne
pop
data16
lods
xchg
adc
pop
jo
xlat
scas
test
xchg
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
pop
lahf
mov
jl
xor
jl
std
pop
fxch
push
jo
sbb
push
sar
in
pop
ds
mov
orl
mov
js
stc
les
fisttpl
lret
xchg
out
mov
push
xchg
cmpsb
roll
lds
inc
xchg
pop
mov
js
insl
xor
ljmp
mov
loopne
jle
add
pop
fidivrl
sub
cmp
sub
hlt
push
inc
jg
jne
test
insb
out
push
xor
ficoms
add
mov
inc
loope
and
lret
or
lock
cmp
jbe
out
mov
fimuls
dec
inc
test
hlt
mov
dec
mov
icebp
sub
popa
scas
jb
mov
sub
mov
inc
mov
mov
sub
aad
mov
jl
testl
push
orb
jae
xor
xlat
mov
shl
mov
sarb
dec
mov
mov
inc
push
inc
jmp
aam
addl
sub
adc
add
xor
xchg
sahf
cltd
inc
adc
scas
pusha
jno
test
dec
cmc
mov
push
lods
xorl
insb
and
sub
xchg
inc
xor
enter
xchg
sub
inc
and
adc
popf
xchg
stos
sti
sahf
movsl
ljmp
xchg
mov
pop
test
imul
add
mov
add
std
lds
mov
adc
xor
lret
loope
xchg
add
mov
sub
paddsb
fwait
sub
std
xchg
jmp
enter
std
dec
lods
into
lea
test
fs
hlt
sub
and
stos
shrl
push
lret
cld
jmp
ffreep
test
sub
cld
lock
mov
or
movsb
push
shrl
mov
push
lock
clc
fstpl
push
inc
stos
mov
outsb
adc
mov
mov
fs
jne
sbb
imul
mov
mov
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
cmp
jl
xor
jl
push
push
rolb
jb
push
lret
xor
xchg
fidivrl
add
push
mov
lods
cli
mov
push
mov
fisttps
mov
je
push
cmpb
nop
dec
ret
pop
mov
inc
fs
cmpsl
outsl
push
shlb
push
in
dec
xchg
aam
sub
xchg
popf
adcb
adcb
jno
stos
mov
mov
mov
mov
loopne
lretw
jnp
sub
or
mov
add
cltd
outsb
or
add
push
insb
lcall
insb
std
lahf
jp
cmp
cmpl
or
mov
mov
das
in
mov
pop
jmp
xchg
addr16
dec
dec
add
ret
call
int
push
mov
cltd
mov
pop
andl
mov
ret
mov
xor
andl
rol
les
int3
mov
mov
mov
sbb
cmpl
popf
shrb
xchg
push
mov
adc
negl
dec
mov
ljmp
cmpsl
cmpsb
outsl
popf
sbbb
lret
pop
push
test
aas
mov
arpl
arpl
push
adc
xchg
and
cmpsl
xor
mov
push
jo
gs
shr
jge
cmp
mov
cmp
adc
das
out
pop
mov
xchg
cmpsb
imul
ja
lock
pusha
xlat
stc
lods
dec
inc
fistpl
xchg
or
cli
push
jbe
dec
or
repz
clc
movhps
test
in
xor
xor
mov
iret
or
mov
idivb
pusha
test
or
xchg
arpl
dec
xor
ss
or
xchg
dec
and
mov
cwtl
cmc
sub
inc
cltd
repnz
pushf
push
mov
xor
rolb
cwtl
mov
push
out
out
daa
fs
cmpsl
mov
mov
mov
rorl
insb
dec
mov
add
jmp
or
mov
jo
xchg
jmp
push
test
mov
jl
xor
jl
jge
popa
rorb
dec
cmpsl
dec
out
adc
aaa
sbb
push
test
aad
lds
pop
ret
aas
pop
call
cmc
or
test
repnz
mov
addb
in
repz
sbb
dec
push
inc
jb
lods
sahf
out
loop
adc
dec
rorl
mov
push
push
iret
repnz
mov
xlat
insb
out
fsubrs
add
dec
dec
iret
imul
adc
mov
pop
lret
dec
cmp
and
js
std
mov
movsl
inc
bound
inc
jp
xchg
ja
pop
adc
pop
decb
fdivrl
mov
xchg
jle
add
rcll
or
xor
bound
jo
dec
fmuls
push
adc
fsts
sahf
jno
popf
fs
mov
mov
sub
cmpsl
rolb
popf
movsb
icebp
dec
xlat
divb
faddp
in
das
or
push
gs
lods
mov
jnp
cmpsb
sbb
jnp
cmp
movsl
jmp
arpl
fwait
cli
inc
xchg
hlt
push
sub
fst
cmpsb
mov
cmc
mov
jb
enter
mov
pop
adc
cmpsb
mov
fisttpll
cs
mov
jge
ljmp
mov
in
jne
push
add
hlt
sbb
test
push
aad
mov
xchg
jl
mov
rcll
xchg
and
stos
jno
ret
or
imul
mov
fdiv
dec
lock
stc
and
cmc
shlb
repz
aas
fnstenv
xchg
add
xchg
sbb
popf
cmc
test
jg
cmp
xor
sbb
jbe
fadd
inc
xchg
sub
push
inc
sbb
jb
push
imul
or
fimuls
jl
addr16
ret
ds
push
clc
xchg
jo
xchg
pusha
push
push
mov
mov
stos
ss
and
inc
fsubs
icebp
mov
inc
imul
sbb
mov
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
mov
pusha
sarl
jl
scas
loope
outsb
loope
cmpsb
arpl
jbe
pop
popa
and
stc
sub
adc
or
sub
jle
dec
jp
add
pushf
outsl
mov
les
popa
and
adc
mov
adcb
inc
mov
sbb
loope
jecxz
cmp
xchg
sarb
dec
stos
pop
in
aas
js
xlat
fcomps
adc
cmp
pop
adc
push
mov
dec
shlb
mov
mov
sub
adc
push
inc
mov
test
in
mov
and
mov
lahf
pop
in
clc
hlt
xor
aaa
sub
clc
mov
mov
sbb
push
leave
dec
lock
pop
pushf
and
enterw
push
fnstsw
call
cltd
ljmp
cmp
ss
test
js
cwtl
cmpsl
dec
aad
decl
and
jp
pop
inc
push
incb
call
dec
pop
xchg
mov
test
push
xor
lret
push
add
ret
mov
xor
aam
xchg
mov
or
arpl
enter
or
sbb
scas
sbb
push
rolb
fsubs
mov
nop
sbb
cmpsb
nop
fbld
cmp
jne
arpl
or
mov
xchg
and
mov
inc
jno
movsl
dec
push
call
mov
out
adc
mov
sbb
adc
mov
lret
scas
sub
int
icebp
push
sbb
fs
pop
das
test
push
push
mov
mov
sbb
pop
ret
std
xor
out
mov
dec
cmp
add
mov
scas
lea
mov
in
fildl
mov
inc
lahf
jp
pop
inc
aad
mov
xor
imul
rcrb
sbb
mov
mov
cltd
sbb
out
dec
fnstenv
push
ljmp
fwait
pop
fs
cmpsb
insb
pop
push
in
scas
mov
xlat
mov
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
mov
ret
xlat
jns
jl
dec
test
cs
repnz
std
daa
in
and
xchg
cmp
pop
clc
xor
insb
jmp
std
push
mov
test
add
xor
add
hlt
pop
in
loopne
xchg
push
adc
rcll
mov
insb
cmp
pop
cmpb
cmp
jbe
xor
nop
sub
jge
flds
or
incb
xor
push
shl
es
jo
sub
or
repz
sbb
mov
or
sub
ja
sti
fdivl
adc
mov
push
lcall
mov
add
imul
cli
sub
xlat
lcall
gs
push
push
movq
dec
dec
bound
inc
or
pop
cmpsl
sub
adc
dec
mov
in
push
push
dec
push
mov
xor
xchg
clc
xor
sbb
js
mov
imul
and
xor
xchg
pop
cld
add
cli
push
insb
test
push
fcomps
mov
rcl
mov
dec
mov
xor
pop
xor
push
and
stos
into
sbb
hlt
inc
popf
lock
repnz
mov
mov
in
test
stos
mull
loop
inc
xor
jge
ret
push
repnz
push
push
aas
loopne
inc
push
dec
mov
mov
or
in
scas
hlt
inc
fst
xchg
lret
aam
jmp
jg
pop
aas
fsubrl
inc
push
mov
aam
repz
jne
int3
fstpl
mov
or
push
xchg
cwtl
xor
faddl
push
mov
pop
enter
push
les
inc
ds
mov
mov
mov
std
negl
push
sub
adc
sub
pop
mov
cwtl
lcall
out
sbb
cmpsb
xlat
rolb
or
add
int3
sbb
pop
shrb
hlt
sbb
xchg
loope
rcll
mov
sbb
sub
imul
les
xchg
lods
xchg
inc
push
lahf
dec
jae
adc
call
popf
fcomi
mov
mov
loop
ja
or
sbb
lea
inc
inc
imul
inc
sub
repz
mov
inc
test
mov
xor
xchg
fs
push
xor
dec
jno
and
jle
insb
test
out
scas
or
push
cmp
sub
mov
mov
xchg
insb
and
bound
sub
sbbb
sub
jno
dec
sarl
aad
imul
js
imul
movsb
and
cmpsb
sub
imul
jle
out
adc
addr16
stos
insl
mov
push
xorl
xchg
insb
inc
or
push
pop
xchg
xor
pop
mov
cmp
pop
push
push
aas
and
aaa
dec
idivb
hlt
sahf
in
jge
sbb
lcall
movb
push
adc
andl
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
ljmp
jb
iret
jl
xlat
jns
jl
add
and
daa
lods
cmp
mov
in
mov
rolb
pop
js
arpl
lea
pop
fmuls
dec
jns
lret
dec
xchg
fildll
mov
lods
pushf
add
push
imul
jle
inc
dec
cwtl
push
rol
aas
mov
gs
subb
jmp
mov
push
cltd
aas
mov
aad
xor
aam
data16
cwtl
mov
push
or
fwait
jno
cwtl
push
icebp
xor
pop
inc
ret
cmove
add
push
push
mov
outsb
bound
orb
outsb
loop
sbb
jmp
dec
mov
jb
pushf
pop
and
clc
fcomps
std
mov
int
dec
gs
pop
lods
ror
xchg
aas
fimuls
dec
clc
mov
fwait
jp
adc
inc
inc
int3
gs
jl
ficoms
inc
lods
ljmp
add
add
mov
sub
pop
rcl
push
in
add
sbb
xor
in
fs
sub
and
mov
aad
pushf
frstor
sub
jge
out
movsl
dec
aas
mov
call
daa
cld
jp
into
imul
cs
dec
sbb
les
and
adc
rclb
adc
cli
add
jge
ja
or
mov
data16
int
out
sbb
movq
xorl
cs
sub
jns
in
inc
aad
imul
cli
dec
pop
fs
loopne
mov
dec
xlat
je
js
les
and
out
push
or
gs
ljmp
inc
and
lahf
xchg
mov
out
or
pusha
and
imul
imul
inc
sbb
fisttps
sub
mov
repnz
or
int3
decl
xor
daa
aaa
mov
lock
incb
out
mov
outsb
stos
jne
loope
inc
push
mov
mov
aas
inc
fldcw
sub
and
aam
add
dec
fbld
jns,pn
and
pop
sub
pop
sahf
iret
cmp
mov
xchg
inc
and
js
negl
jp,pt
adc
add
mov
in
pop
ljmp
clc
dec
je
popa
shll
in
jecxz
adc
sbb
or
dec
mov
std
cmpb
inc
test
add
jmp
lret
lret
movsl
xchg
rcrb
jo
cmp
test
cmp
lods
and
cld
ret
jns
mov
cmpsb
gs
xor
xlat
jle
or
xor
movsl
addr16
and
pop
mov
daa
pusha
and
fcmovbe
xchg
xchg
xor
dec
push
pop
lds
push
dec
sub
xchg
xchg
mov
addl
in
jno
jo
lock
add
mov
sahf
loop
push
hlt
sub
imul
rcrl
xchg
js
push
mov
out
sti
fucomp
xor
loopne
cmpsl
mov
jmp
mov
std
das
icebp
ljmp
gs
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
imul
jl
xlat
jns
jl
pop
pop
lret
fs
cs
mov
das
push
adc
xor
ret
ljmp
jge
cmp
sbb
mov
pusha
and
add
push
pushf
sub
adc
push
xor
addl
insl
push
sub
jmp
cmp
pop
mov
xchg
adc
push
sbb
pop
shll
inc
ficoml
push
mov
shll
shll
pop
inc
movsl
lcall
cmp
out
cmp
add
cwtl
stos
mov
pop
incl
sub
cmc
leave
cmpsb
lods
rol
dec
fistl
jmp
jne
xor
ret
subb
pop
sbb
stos
dec
add
xchg
pop
cmp
or
insb
inc
dec
test
and
jae
mov
lods
cltd
pop
dec
add
mov
sub
stos
mov
xchg
int
repnz
pop
mov
jb
push
add
adc
dec
pop
into
mov
inc
fisubrl
data16
push
sbb
sti
out
xchg
jecxz
movsl
pop
add
shr
mov
stos
or
xchg
add
fidivl
inc
jmp
movsl
push
push
xor
cmp
fs
fwait
lods
inc
imul
inc
fcomp
mov
xchg
jae
das
cmp
xchg
into
dec
xchg
inc
lods
xor
in
std
andb
loopne
mov
jp
iret
test
out
fwait
movsb
mov
pop
std
ds
clc
fwait
ret
xchg
adc
sbb
or
pop
lds
push
jo
push
clc
sub
inc
dec
sahf
jo
shll
fcompl
cwtl
outsb
ljmp
pop
gs
nop
and
xchg
mov
aaa
pop
int
sub
cmp
je
jnp
add
cld
or
test
push
dec
push
ljmp
pop
push
stos
gs
cltd
xor
popa
push
mov
mov
mov
sbb
ds
sbb
fbld
or
nop
mov
lods
adc
add
sub
loop
sub
sub
in
movsb
inc
or
insb
call
push
pop
outsl
sbb
pop
outsl
inc
mov
int3
pop
imul
mov
dec
sbb
pop
sbb
fsubrl
aam
mov
lods
insl
data16
dec
inc
or
fcmovbe
xor
xchg
push
aad
in
das
cltd
in
adcl
jns
imul
push
fcmovne
jl
icebp
xor
push
and
cmp
mov
pusha
loope
add
jnp
scas
or
daa
mov
pushf
stos
lods
dec
lahf
adc
dec
inc
mov
xlat
cli
data16
dec
jo
pop
fmuls
cmp
or
jns
shl
or
inc
std
sub
mov
jb
sbb
inc
xor
dec
or
aaa
add
xchg
int3
outsl
aaa
pop
xor
popf
sbb
jecxz
dec
xchg
jmp
test
loopne
jbe
pmulhuw
pusha
or
dec
cmc
testb
lock
test
nop
mov
outsl
push
push
jge
adc
mov
cmc
arpl
mov
lahf
mov
pop
inc
imul
jge
push
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
aam
jl
jns
jl
push
popa
lock
lcall
sahf
vmread
and
sub
xor
enter
aaa
lock
adcl
jae
xchg
push
dec
clc
insl
fcmovbe
mov
cmp
aas
iret
loope
leave
repnz
mov
jl
fld1
pop
and
cmc
lea
inc
sbb
scas
jmp
pop
in
sub
jne
sub
popf
xor
popf
xchg
jno
enter
push
dec
test
add
sbb
mov
aaa
addr16
cmp
mov
negb
add
fcoms
ss
mov
shll
cwtl
cli
mov
sbb
mov
pop
cmp
mov
sub
imul
push
jae
jns
cltd
pop
add
sub
dec
xchg
mov
add
mov
shlb
mov
xor
mov
jo
jp
jno
ds
fnstcw
inc
push
repnz
test
xchg
add
icebp
push
lods
fdivrs
add
out
fnstsw
repnz
daa
add
aam
push
shrb
scas
xchg
inc
mov
stos
lock
fldenv
add
test
push
jbe
mov
dec
test
shr
dec
es
gs
or
adc
lea
adc
fs
add
cmp
cmpsb
push
loope
dec
and
push
lods
jmp
out
xchg
jo
loopne
rcll
test
jb
test
aas
scas
jg
fwait
pop
sub
dec
loopew
push
stos
and
test
lret
enter
jne
dec
jmp
les
outsb
push
mov
sbb
out
push
push
push
or
rol
subl
andl
call
dec
cmp
outsb
mov
jae
aad
inc
addr16
mov
xor
lods
or
cld
jecxz
mov
xor
push
mov
and
push
test
arpl
ss
pushl
sub
aaa
into
pusha
jg
popf
mov
dec
jg
cmp
in
xor
popf
mov
movsl
or
cmp
inc
jmp
cmp
into
jecxz
scas
fnstenv
test
jnp
rcrb
mov
mov
pop
mov
pop
push
fs
sbb
das
add
mov
jo
or
mov
jbe
pop
xorl
add
out
lahf
outsb
insl
lret
cmp
mov
jae
sbb
ret
stc
outsb
shlb
fwait
dec
lods
adc
pop
jae
sbb
movsl
push
imul
push
push
stos
mov
pushf
dec
lds
cs
inc
push
push
testl
loop
dec
mov
subl
mov
ficoms
inc
imul
outsb
sbb
fisttpl
fiaddl
mov
iret
push
les
out
xchg
aam
mov
push
icebp
bound
cwtl
inc
lods
sbb
icebp
sti
pop
jecxz
scas
mov
mov
adc
imul
mov
mov
cmp
jmp
cwtl
mov
mov
or
mov
xlat
jns
jl
cmp
inc
or
pop
dec
jbe
leave
sbb
js
pop
xor
hlt
push
stos
mov
loop
loope
adc
add
cmp
test
pop
xchg
jmp
cs
fldt
jno
or
push
subl
rcrl
das
cmp
mov
and
cs
stos
sahf
mov
cs
jmp
xchg
sbb
fdivr
in
mov
sub
adc
mov
das
clc
mov
push
add
lret
mov
popf
ds
cmp
jne
cmp
lret
or
icebp
add
cmp
insb
push
aad
ds
sub
cmp
pop
pusha
cmpl
mov
or
push
push
push
movsb
cltd
and
fwait
pushf
loope
gs
enter
sbb
int3
mov
outsl
mov
cmpsb
pop
push
xchg
mov
xchg
cld
cld
in
test
mov
push
subl
imul
jmp
imull
js
mov
test
adc
test
xchg
fiaddl
in
push
inc
pop
sbb
clc
into
les
repnz
jno
and
sbb
xchg
loope
mov
ja
faddl
sbb
fwait
mov
scas
pop
mov
ret
mov
lods
cwtl
rorl
mov
sbb
rclb
bound
clc
lock
and
mov
aam
test
rclb
sti
gs
sbb
popf
xchg
mov
flds
mov
dec
pop
mov
dec
in
icebp
icebp
icebp
out
mov
mov
adc
dec
test
add
imul
mov
xor
push
repz
fwait
jnp
fstl
fcoms
mov
ret
cmp
stos
incb
loop
xor
loope
adc
xor
pop
pshufw
fcmovnbe
fucomp
lock
mov
insl
out
add
cmp
cmpsl
jno
adc
and
mov
and
scas
adc
rcll
cli
rol
sbbl
xchg
inc
push
jnp
mov
cmpsb
int3
sub
pusha
and
push
fimull
mov
pop
sbb
push
std
loope,pt
lock
loope
and
cmc
cwtl
mov
fcompl
mov
mov
subl
ret
sbbb
imul
mov
mov
pop
cli
or
add
mov
icebp
xchg
test
scas
leave
sbb
outsl
sub
xchg
movsb
push
or
rcrl
out
and
sub
push
inc
bound
repnz
dec
adc
nop
push
test
cmpsb
outsb
inc
pop
sub
popa
lds
std
dec
inc
xchg
xchg
fs
cltd
xor
aad
fsubl
pop
adc
pop
movsl
inc
add
das
inc
repz
push
insl
cmc
dec
push
jmp
pop
add
test
js
enter
xchg
fldcw
mov
mov
push
cmp
int3
mulb
pop
xchg
push
sub
je
mov
orl
jmp
pop
jns
fs
add
push
sbb
sarb
jns
jl
pop
or
jecxz
test
out
cs
pop
push
lods
out
ljmp
xor
mov
cmc
dec
in
outsl
sub
jnp
insb
mov
icebp
jo
scas
repnz
xchg
mov
cli
mov
xchg
adc
pop
and
jl
adc
jbe
and
push
fistps
fildl
icebp
xchg
push
dec
pushf
daa
cmp
sub
hlt
mov
popa
mov
test
hlt
sub
rcl
out
mov
mov
loope
pop
sub
dec
pop
cmpsb
mov
mov
and
rcrl
mov
mov
add
mov
lret
int
xor
sbb
xchg
xorb
fbstp
daa
or
cmpsl
daa
push
mov
gs
push
inc
lret
test
sbb
fistpll
mov
pop
fldl
mov
sub
loop
push
shll
pusha
dec
pop
adc
in
pop
mov
mov
mov
aad
enter
mov
je
inc
adc
sbb
adc
aam
popa
sub
xlat
test
incb
xor
mov
push
fidivs
sahf
jmp
or
fsts
adc
andb
mov
jle
pop
pop
out
sti
cs
xor
mov
loopne
out
fnstenv
xchg
push
mov
xchg
jae
shrl
jne
fidivrs
mov
loopne
iret
jecxz
push
test
je
jecxz
xchg
adc
pop
movsb
xcrypt-ctr
cmpsl
pop
mov
dec
scas
mov
mov
pop
push
jnp
pop
lahf
lods
ljmp
stc
pusha
mov
popf
leave
std
jbe
pop
ss
mov
addr16
sbb
arpl
loope
mov
aas
rorb
icebp
xchg
cmp
add
sti
and
xor
into
mov
dec
xchg
mov
lods
add
sarb
imul
sbb
dec
pop
cmp
mov
jg
sti
sar
sar
add
iret
or
jno
add
xchg
xchg
lret
fildl
jmp
and
out
dec
out
and
xor
out
xchg
xchg
adc
imul
cmp
cs
test
mov
repz
adc
dec
mov
sbb
test
pop
cmpsb
push
add
leave
mov
and
xor
mov
cwtl
pop
testb
pop
andl
popa
mov
out
fsubrs
push
cli
adcl
mov
xchg
fidivrs
pop
mov
mov
push
sub
fcom
popa
add
jmp
lret
stc
decl
adc
push
rcrl
inc
or
pop
subb
mov
movsl
sahf
movsb
sti
jnp
sbbb
sbb
push
xchg
mov
cmpsl
lahf
sub
pop
pop
mov
jl
xorb
mov
test
ljmp
add
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
mov
les
fidivrs
jns
jl
neg
cwtl
adc
add
jp
aam
std
arpl
stos
hlt
lcall
and
xor
or
mov
sbb
call
and
jp
dec
and
int3
sub
xor
inc
ds
je
lret
mov
sbb
js
roll
mov
mov
or
sbb
push
lods
mov
jns
loopne
mov
movsl
cwtl
in
ja
sbb
sub
xor
popf
aam
ljmp
rcll
xor
in
dec
idivl
mov
xchg
rcrl
sub
mov
cmp
ret
cli
ja
int
push
pop
dec
movsl
mov
loopne
ret
mov
insb
xchg
adc
test
jg
jae
mov
pop
bound
lods
cld
push
mov
inc
mov
cvttps2pi
lret
push
ss
push
out
repz
or
sbb
inc
xchg
ror
push
pushf
out
aaa
xor
jo
test
in
mov
jmp
fwait
dec
jmp
cmp
cmp
fcmovnu
outsl
icebp
gs
mov
aam
ljmp
or
push
xor
xlat
push
shl
or
pushf
sub
mov
enter
and
jge
mov
mov
sub
cmc
in
and
test
sti
xchg
xchg
mov
jg
mov
rolb
in
dec
and
loopne
jecxz
mov
lods
or
jle
sahf
add
ja
sti
inc
cmpsb
dec
mov
cs
cmpsb
jae
popa
ss
adc
addb
mov
inc
enter
into
or
xor
inc
ljmp
nop
or
out
enter
inc
mov
repnz
pop
and
shrl
dec
sahf
inc
jbe
xor
xchg
pushl
pop
mov
sub
dec
lea
inc
aas
mov
push
mov
sti
data16
pop
fwait
sti
cmp
and
fsub
cmp
xchg
int
ja
mov
sub
ja
mov
xor
dec
into
cmpb
dec
test
push
cld
xor
cli
xchg
cmpl
sub
dec
cmp
pop
lcall
adc
jb
and
outsb
ret
xchg
add
push
jecxz
icebp
ret
fsubrp
push
lods
lods
push
aad
mov
cmp
je
test
sbb
or
fisubrs
js
cmpsl
mov
loop
popf
mov
dec
pop
mov
adc
add
adc
mov
push
fs
inc
mov
pop
push
jne
movsb
adc
notl
enter
outsb
mov
int
sbb
pop
xchg
rcll
jmp
insb
jle
sub
xor
gs
add
add
and
jae
bound
in
aad
mov
jl
les
loop
xor
std
lock
dec
test
int
fisubs
xor
cmp
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
repnz
xlat
xchg
fstpt
jns
jl
inc
leave
cmp
rol
movsb
jae
cli
push
and
sbb
sahf
aad
lahf
dec
cmpsl
jo
and
push
ja
mov
sub
mov
or
add
pop
mov
xor
movsb
data16
inc
jmp
mov
dec
out
sub
dec
mov
dec
inc
mov
insb
sbb
jg
mov
mov
push
dec
push
jne
or
xor
inc
lcall
pop
aas
push
loopne
stos
aam
je
into
shrb
pop
xlat
sub
or
lods
cli
xchg
in
and
pop
outsl
sbbb
mov
dec
add
xor
and
push
push
es
das
mov
inc
int3
repnz
inc
movsb
sub
sbb
mov
dec
out
dec
mov
push
int3
mov
addl
inc
jle
cmc
mov
in
sbb
loopne
popa
mov
cld
mov
jno
adcl
mov
popf
xor
mov
dec
repz
test
lods
iret
or
pop
sbb
fsubrl
jae
rcrl
pop
push
popa
popa
ffree
pop
mov
fnstsw
mov
insb
aam
out
mov
scas
cmp
in
dec
add
mov
jle
fwait
loop
push
dec
push
push
mov
fwait
jecxz
or
fcompl
adc
jno
jae
fstps
loop
pop
fdivrp
arpl
push
inc
adc
pushf
push
xchg
arpl
popa
ffree
hlt
scas
sub
cmpsl
gs
iret
adc
enter
or
scas
push
dec
fnsave
push
dec
jl
fmuls
into
fcmovb
pop
xchg
pop
iret
std
outsb
jae
imul
mov
mov
lds
adc
popa
lcall
and
dec
inc
cmp
xor
out
pop
dec
or
hlt
pop
inc
jge
xlat
ret
outsb
inc
xchg
in
mov
movsb
and
pusha
pop
out
push
lea
dec
aam
out
iret
jge
mov
pop
jp
sbb
cmpsb
jns
jbe
pop
xchg
xchg
or
push
xor
jmp
pop
leave
mov
fwait
decb
sub
dec
repnz
dec
rol
stos
sarb
nop
inc
out
push
add
popf
in
and
or
lahf
cmpsb
push
jae
sbb
cmpsl
js
repz
leave
push
jmp
jbe
mov
lcall
add
ja
out
stos
call
lds
inc
imul
mov
out
mov
mov
idivb
pop
cmpl
int3
dec
or
mov
mov
adc
mov
add
mov
sbb
lods
xchg
or
jmp
fadd
jg
jecxz
pop
test
jb
out
hlt
jge
cli
shll
lret
fdivrl
jecxz
fnstcw
sub
or
dec
or
jnp
mov
cmp
xchg
mov
mov
mov
xor
jmp
inc
pusha
sub
sub
cmpsl
daa
mov
insb
in
jl
jns
jl
and
mov
jns
ret
lret
mov
outsb
test
rcl
pushf
xor
rorl
insb
push
iret
jp
push
lahf
push
add
jbe
push
sub
std
add
enter
pop
stc
daa
mov
mov
mov
popa
dec
push
loope
sbb
and
fildl
mov
jecxz
xchg
mov
sbb
mov
sub
xchg
jg
enter
push
sti
jecxz
or
adc
mov
cmp
xchg
das
gs
stos
orb
dec
pop
adcb
mov
mov
xor
mov
ss
cs
loop
repz
in
push
out
pop
or
jmp
xor
enter
dec
push
das
rolb
xchg
push
sbb
cmp
fwait
xor
dec
subb
lds
shll
mov
or
fistpll
mov
and
aad
decb
adc
insl
add
mov
cmp
mov
mov
xchg
stc
push
push
lds
inc
sbb
adc
or
push
loopne
adc
push
inc
insb
cli
int
in
data16
sub
push
mov
cli
push
fmul
fmull
dec
inc
mov
mov
and
insl
mov
fldcw
jo
std
movsl
cmpsb
dec
or
jne
push
sbb
repnz
imul
sub
rcl
pop
fs
lret
pusha
push
push
push
stc
cmpsb
scas
xchg
pop
mov
ds
fistl
sub
ljmp
jns
sbb
int
xlat
pop
adc
xlat
movsl
mov
cmc
fnstenv
test
xor
in
add
or
stc
jg
sahf
sub
mov
sbb
lret
xor
or
shlb
xor
insl
cli
mov
scas
xlat
sbbl
inc
out
arpl
cmp
jb
xchg
mov
push
add
imul
sbb
xor
les
inc
in
fisubrs
add
insl
rcr
mov
test
movsb
push
fsts
pop
or
mov
int
aaa
insb
out
cmc
add
fiadds
xor
pop
outsb
data16
push
filds
adc
shl
repz
cmc
ret
adc
loope
add
into
mov
mov
inc
movsl
fs
loopne
mov
cmp
sub
cmp
xchg
mov
push
rcll
in
mov
push
stc
pop
adc
mov
and
xchg
pop
jecxz
mov
ret
mov
lret
popf
cmpsl
or
mov
aaa
rcrl
aaa
mov
lock
xchg
and
xchg
jmp
sbbl
ja
xor
push
fistl
lods
imul
dec
fst
enter
loop
xchg
popf
sbb
mov
and
imul
sub
jmp
or
jb
mov
push
sbb
fs
loopne
jl
jns
jl
mov
in
adc
les
add
mov
sbb
mov
inc
inc
mov
popl
jnp
sub
mov
out
or
lret
fcmovbe
jecxz
push
fsubl
leave
sbb
into
ret
addr16
arpl
aaa
and
xchg
xor
cltd
gs
out
lods
mov
or
in
pusha
xor
out
xchg
icebp
mov
lret
scas
and
or
lods
popf
sub
repnz
cmp
leave
scas
sbb
add
into
adc
sbb
movsl
aam
mov
lods
testl
adc
insb
test
into
pop
jg,pt
xor
js
mov
xchg
sub
mov
icebp
inc
jmp
fs
xor
push
andl
xchg
out
cli
into
nop
jp
ret
push
or
insl
xor
mov
jae
push
repnz
mov
int
jl
add
int
mov
mov
stos
ja
xchg
outsb
movsl
lret
pop
add
popa
ret
xchg
dec
jae,pt
jns
mov
mov
stc
inc
test
lods
scas
pop
xor
lock
mov
jecxz
mov
test
outsb
and
loopne
movsl
add
push
or
jmp
shl
iret
pop
inc
das
add
dec
dec
ds
dec
or
pushf
xchg
fadds
stc
cmp
hlt
or
pushl
std
push
and
loope
out
aam
sbb
lods
pop
vmread
in
jae
add
lret
into
shlb
mov
mov
mov
test
mov
nop
dec
and
pop
in
or
imul
je
pushf
jns
mov
xchg
jne
push
xor
test
pop
mov
jns
add
insl
jmp
cld
and
outsb
dec
pop
adc
outsl
dec
in
cs
push
imul
sub
lcall
loop
or
sbb
sub
es
inc
and
xchg
push
sahf
shrl
lret
cmp
jge
lock
addl
popf
or
std
jl
mov
jns
push
js
xlat
push
shll
jns
test
sbb
jb
lods
mov
ja
cmpb
lea
movsb
repz
clc
mov
pop
inc
fwait
cs
mov
das
mov
cli
push
mov
mov
mov
sbb
ja
inc
lds
push
jg
adc
cld
push
stos
ret
adc
mov
sbb
adc
repnz
test
dec
and
or
movhps
fidivl
pop
cld
jae
icebp
fimull
xor
sbb
in
shlb
jns
test
sarb
push
movsl
xchg
xor
jg
test
xor
pop
inc
lret
push
into
add
fisubs
stos
inc
xchg
mov
mov
push
repz
xchg
push
call
push
fisubl
mov
in
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
les
in
jl
adc
lods
push
mov
ss
pop
jl
jmp
leave
xor
adc
jo
xchg
push
sbb
repz
dec
mov
mov
cmp
xchg
test
mov
shlb
das
mov
pop
xor
push
filds
xor
mov
push
push
dec
xchg
xchg
cmp
rcll
adc
jl
in
mov
mov
push
rclb
subl
loope
test
push
pop
jle
out
dec
pusha
xchg
repz
fistps
daa
push
arpl
push
scas
es
aad
fcmovu
xchg
outsl
leave
inc
icebp
lahf
int3
mov
or
repnz
xor
fdivl
mov
adc
mov
push
iret
adc
imul
pop
pop
xchg
cmp
sub
dec
pusha
dec
loope
jecxz
daa
in
add
test
mov
lret
mov
fucomi
loop
mov
loop
stos
mov
stc
iret
mov
into
gs
aam
dec
negl
pop
mov
orl
push
adcl
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
mov
mov
jl
adc
insb
pushf
cs
mov
cmp
inc
sbb
mov
cmp
cmc
mov
or
cmp
add
sbb
mov
pop
pusha
and
inc
adc
inc
rorb
pop
lcall
mov
push
jcxz
sbb
outsb
push
jecxz
mov
fcoml
mov
dec
jmp
movsb
cmp
mov
mov
test
in
das
add
cmp
mov
push
pop
xor
pop
ret
push
cmp
fsubrs
dec
lods
mov
lods
out
xchg
add
lods
cmc
cld
or
hlt
pop
sub
aaa
push
mov
jae
mov
call
add
cmpl
push
sti
fadd
repz
fisttps
ss
lods
add
push
sbb
add
push
sub
mov
jo
mov
xchg
cs
int
xor
notl
aaa
fimull
lret
pop
sub
mov
cmp
movl
jne
andl
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
xchg
or
ja
out
jl
adc
rolb
cmpsl
fnsave
jo
mov
xor
inc
mov
lfs
sbb
lock
pop
xchg
repz
pop
rcl
mov
mull
movsb
js
mov
add
sub
xor
push
cmp
jnp
daa
jmp
cwtl
sarb
sbb
jne
stc
leave
movb
test
stos
mov
test
cmpsb
jg
out
fdivl
lods
les
imul
in
mov
loopne
fucomi
and
add
dec
jecxz
rcrl
cmpsl
in
pushfw
push
icebp
and
out
pusha
shll
lcall
notl
sub
xlat
add
jmp
dec
or
stos
addr16
xchg
push
inc
adc
and
mov
scas
jmp
aas
or
das
pop
jl
mov
push
rclb
xor
in
push
or
popf
mov
hlt
or
mov
bound
je
and
mov
in
sub
icebp
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
out
jl
lret
jl
negl
push
ljmp
push
mov
lods
in
icebp
movsl
sbb
dec
cmovns
push
and
inc
sbb
loopne
shll
cmp
and
push
mov
mov
hlt
dec
popa
and
adc
xchg
lahf
dec
adc
lods
add
sbb
pop
jo
jge
cmp
pop
lods
and
mov
push
in
push
pop
ds
mov
test
xchg
aaa
imul
out
rclb
out
mov
fimuls
xchg
sbb
sbbb
enter
xchg
and
insb
aam
fisubrl
mov
and
pop
movsb
out
push
pop
adc
subl
inc
sub
iret
adc
leave
fs
jl
imul
xor
and
ss
andl
and
adc
push
mov
mov
fiadds
in
mov
cmp
fwait
push
adc
stos
cs
push
aam
push
and
sbb
push
mov
adc
fucomip
jl
popa
cmp
and
mov
jns
loop
mov
mov
jno
cmp
jp
in
jno
dec
cld
cmp
in
xchg
pop
sub
sub
inc
sub
pop
mov
lret
or
cs
pop
mov
push
mov
mov
inc
xchg
xchg
dec
push
shlb
outsl
pop
pop
into
lods
int
les
test
clc
push
mov
inc
fcmovu
jnp
add
dec
sbb
pop
push
push
outsl
mov
jbe
lds
aas
and
xor
lret
scas
shlb
add
movsb
mov
cmc
or
repnz
and
cmpsb
in
push
xchg
push
and
pop
add
test
xlat
sub
in
xor
xorl
cli
and
adc
fiaddl
dec
xchg
inc
pop
pop
xchg
divb
pop
pop
mov
dec
mov
int3
pusha
and
add
mov
arpl
sti
rcrl
shrl
pop
jne
push
jmp
sbb
mov
sbb
jae
xchg
je
lret
pop
or
and
pop
inc
adc
test
sbb
pop
mov
xor
lahf
jns
add
lods
addl
inc
adc
in
clc
inc
push
sbb
ds
out
bts
mov
mov
xor
addr16
rorb
jmp
mov
sub
cli
test
cmp
cmpsb
mov
cmp
cmp
add
xchg
call
adc
mov
idiv
mov
mov
adc
mov
test
xchg
mov
sub
cmp
shlb
fsubrl
pop
xor
add
scas
cmp
jbe
insl
pop
jge
add
xlat
cli
mov
das
mov
out
adc
pushf
jnp
pop
mov
xchg
enter
iret
aam
mov
sahf
lods
cs
cmpsl
cli
pop
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
mov
ljmp
call
inc
out
or
sub
jae
dec
mov
lods
mov
xor
ret
inc
add
inc
iret
fdivl
je
shll
xchg
sbb
add
fdivrs
mov
dec
dec
jb
add
jle
or
insb
out
sbb
mov
imul
fstpt
cmp
push
sub
cmp
aam
pushf
or
jae
inc
push
mov
inc
xor
imul
nop
dec
xchg
sbb
mov
pop
adc
push
pushf
sub
and
push
adc
xchg
in
push
lds
and
jbe
xchg
jae
fcmovnu
dec
sub
jmp
outsl
call
inc
jecxz
in
scas
mov
cmp
fs
gs
pop
pop
mov
hlt
pop
imul
ja
and
popf
xor
sbb
test
and
or
stc
data16
pop
cmp
inc
enter
out
mov
mov
lea
pop
sbb
add
and
dec
addl
icebp
lret
imul
cwtl
ja
ret
hlt
adc
sti
fildll
insb
and
mov
test
mov
jae
lret
shrl
into
xor
xchg
js
imul
daa
in
jbe
xchg
add
inc
loope
fidivl
lds
and
mov
inc
dec
sub
out
dec
sar
jns
mov
pop
sbb
add
jmp
adc
inc
push
stc
ja
mov
stos
iret
icebp
mov
movsb
loop
fcom
inc
cmc
pop
sub
dec
outsl
mov
cmpsl
arpl
icebp
mov
lahf
mov
mov
test
push
repz
add
push
enter
inc
and
sub
cmpsb
ret
jae
fists
xor
ja
sbb
out
or
or
imul
or
pop
aas
xor
lret
test
dec
jg
push
idivb
fs
mov
mov
cmp
inc
enter
xor
test
test
push
jno
rorb
jmp
dec
pusha
push
mov
mov
stc
repnz
sub
ja
mov
fcoms
icebp
rol
sbb
pop
adcb
pop
inc
fdivrp
iret
outsb
xorl
jecxz
lods
and
loopne
aas
iret
add
pop
aad
faddl
lea
loope
cld
inc
sbb
push
hlt
push
popa
dec
inc
inc
sbb
movsl
scas
shl
push
sbb
out
cltd
ret
inc
in
pop
test
mov
pusha
or
mov
adc
adc
jno
cmp
mov
add
in
scas
jle
sbb
push
mov
xorl
inc
sbb
lods
and
push
push
popaw
cmc
scas
and
cmp
or
mull
loop
mov
push
add
jp
pushf
mov
cld
addr16
clc
outsl
mov
mov
sub
lock
sub
rolb
add
aaa
inc
add
rol
add
shrb
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
dec
mov
jns
jl
mov
out
dec
cmc
out
mov
xor
ret
adc
clc
dec
cmp
adc
mov
sub
movl
sub
xlat
repnz
xchg
repnz
mov
insb
in
aaa
cmpsb
test
mov
les
in
enter
fwait
cmp
xor
jno
and
cmp
sbb
xchg
rorb
push
and
aaa
mov
sub
mov
pop
lds
not
out
jmp
sbb
mov
pop
dec
mov
jns
cld
imul
pop
loop
and
inc
paddb
or
scas
mov
jmp
lret
ficoml
out
out
pop
or
or
mov
lret
movsl
inc
insl
push
mov
push
ret
adc
insb
sbb
sbb
mov
repnz
sbb
addr16
es
push
out
pop
pop
and
pop
mov
lods
es
out
cmp
aam
inc
push
mov
aaa
pop
rclb
push
mov
pushf
push
in
insb
ffreep
and
jge
sub
das
mov
insb
push
jae
repnz
jp
scas
adc
jge
inc
or
inc
mov
iret
cmp
ja
sub
je
scas
gs
mov
test
xchg
adc
adc
shrb
cltd
jle
and
out
insb
adc
cmpsb
inc
ds
jmp
xor
imul
imul
adc
push
lds
jne
sbb
xor
and
es
enter
xor
repz
xchg
out
push
leave
dec
ds
mov
mov
loop
pop
xchg
sub
stc
adc
in
fmull
and
pop
cmpsl
stos
fbld
les
test
or
ja
mov
inc
leave
movl
cmp
mov
rcrb
testb
push
jl
fistpl
adc
enter
and
in
iret
xor
mov
sub
sti
sbb
fnstcw
mov
add
mov
or
jmp
xchg
icebp
mov
ficoms
push
push
arpl
mov
add
mov
mov
rorl
fimuls
pop
and
cmp
cmpsb
sbb
add
pop
mov
jp
xchg
push
fs
xor
fcmovnb
loopne
pop
push
stos
xchg
cmp
jecxz
fidivrl
mov
cmc
sbb
test
movsb
dec
aas
insb
lcall
in
cltd
sar
mov
adc
outsl
sarl
jl
pop
leave
sahf
fisttpl
dec
out
std
std
and
sbb
and
mov
popa
call
loop
stos
sub
ds
inc
add
test
xchg
adc
mov
pop
push
shll
sub
cwtl
cmc
sbb
or
hlt
scas
repnz
and
sti
jbe
push
movsl
es
out
jb
cltd
dec
sbb
hlt
mov
mov
push
cmp
fdivrp
aaa
jb
sbb
dec
imul
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
inc
jge
push
addr16
lret
jl
dec
add
and
jo
sub
es
mov
push
adc
icebp
mov
mov
les
sub
mov
inc
mov
add
dec
pop
mov
arpl
adc
xor
in
and
pop
cmp
call
push
icebp
cmpsl
out
jp
mov
lock
imul
sbb
popf
dec
push
pop
fisttpll
into
into
inc
mov
divl
or
pop
adc
shlb
adc
pop
je
sahf
add
jle
pavgw
fst
les
adc
sbb
push
jmp
pushl
mov
lods
mov
inc
jge
addb
mov
pushl
movsl
iret
jp
pop
sub
popa
ffreep
dec
lahf
inc
lock
xor
lds
mov
add
lcall
adc
lods
repz
mov
jecxz
leave
stc
test
arpl
mov
push
add
xor
jbe
packuswb
enter
je
popf
xchg
cmp
mov
xor
xchg
add
add
fidivl
inc
inc
movsb
push
lea
xchg
pop
mov
push
cltd
inc
cmp
cmp
nop
and
push
inc
cmpsb
adc
mov
pushf
je
xor
pop
addl
xor
lret
sub
jbe
imul
lock
xor
sub
inc
out
out
sti
dec
cwtl
test
adc
gs
jmp
fadds
push
inc
test
xchg
std
sbbb
inc
insb
fdiv
fcmovne
fnsave
pop
clc
mov
push
nop
iret
fidivl
stc
sub
fistpll
add
dec
xorb
pushf
in
dec
mov
lcall
push
pop
push
mov
rorb
xchg
sub
fildll
aam
lea
popa
shlb
sub
adc
xchg
push
push
imul
test
clc
and
inc
xor
jmp
and
mov
cmp
cltd
test
mov
push
and
inc
lret
mov
pop
les
sub
dec
dec
orl
sbb
pop
mov
loope
aaa
xlat
sub
add
test
lock
dec
or
popf
add
mov
pop
fdivrs
int
push
inc
aaa
cmpsb
mov
int
mov
jmp
sub
enter
rorl
pop
push
mov
jecxz
dec
popa
sbb
shll
sbb
jbe
xor
out
mov
xor
stos
mov
jmp
sub
int
stc
or
cmp
cltd
xchg
push
inc
repz
lea
rcll
aaa
and
inc
dec
jl
out
add
xchg
fdivrl
sbb
pop
or
add
cs
in
fistps
outsl
and
popf
scas
inc
icebp
xor
jns
mov
adc
xor
lret
in
xor
pushf
in
push
popf
popa
fdivrs
popf
fstps
cmpb
out
xchg
xchg
cmp
adc
test
and
imul
mov
jmp
icebp
cs
ja
jno
mov
jb
cmc
cmp
jns
jl
sbb
xor
mov
rolb
add
jnp
add
add
fcmovbe
shll
dec
cli
push
xor
mov
mov
sti
add
mov
xor
jns
sarl
mov
inc
mov
jo
sub
mul
add
and
dec
xchg
xor
insb
aas
pop
loop
adc
and
out
inc
push
testl
aam
lds
popf
daa
xor
add
rcrl
cli
int3
repz
les
sub
inc
xchg
mov
lods
adc
jbe
inc
fsts
mov
jb
insb
jmp
scas
aad
pop
shl
sub
mov
add
and
rcrl
mov
adc
je
xor
ljmp
fstpl
mov
into
test
add
mov
mov
sub
mov
jmp
mov
jmp
sahf
xchg
ds
es
divl
fwait
mov
out
pop
sbb
out
fsubp
ror
aad
adc
xlat
pusha
js
adc
xor
clc
std
out
pusha
xchg
dec
data16
dec
sbb
and
sar
pop
xchg
dec
pop
test
dec
bound
adc
stos
inc
push
push
inc
jno
das
pop
ret
add
in
inc
hlt
lods
adc
push
jecxz
jge
xor
out
lret
lret
aas
add
adc
aas
add
test
dec
or
js
dec
daa
jb
ret
or
mov
test
repz
das
or
inc
jnp
fiadds
std
andl
jmp
aam
test
sbb
stc
jo
and
loopne
test
xchg
push
dec
mov
dec
xor
sbb
ret
xchg
xor
adc
jmp
stc
fsubrp
xor
int3
popl
mov
dec
adc
lea
aas
dec
push
inc
add
pop
stos
cld
negb
pop
nop
cmpb
cmp
in
or
jbe
in
inc
cmc
cmpsl
loopne
lret
stos
xor
fnstenv
push
js
movsl
lahf
push
push
outsb
cltd
addr16
ljmp
xchg
sbb
cwtl
out
fldt
into
fsubrp
xchg
cmp
mov
mov
push
mov
out
aad
fsubp
push
add
hlt
push
push
leave
test
xchg
jnp
pop
aas
in
jmp
mov
push
push
mov
inc
testl
mov
xorl
mov
mov
xchg
fisubl
cld
add
mov
push
pmulhw
inc
iret
sahf
roll
cmp
lret
dec
stc
outsb
imul
loope
sub
mov
mov
iret
mov
jp
movsb
push
rcll
mov
jnp
jmp
inc
popf
mov
lock
ret
push
sbb
orb
and
mov
or
popa
jecxz
imul
shrl
push
jo
cmovs
push
cli
insb
add
pop
mov
cmp
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fcoms
stc
jl
lret
jl
sub
mov
mov
lock
sub
fsub
out
pop
in
push
icebp
or
add
test
arpl
stos
bound
or
and
addl
mov
out
repz
int3
insb
popf
fwait
popf
je
inc
scas
dec
lods
movsb
fsubrl
pop
mov
sub
sub
and
dec
movl
push
sbb
dec
inc
cmp
jbe
pop
aad
in
adc
cmp
jmp
jns
xor
lahf
push
repnz
jb
sarb
mov
negl
sbb
push
adc
repz
jbe
or
push
xor
loopne
loop
in
jg
ret
adc
mov
mov
cmc
cli
or
inc
lods
mov
mov
mov
xchg
dec
mov
movsb
mov
add
mov
das
mov
jb
loopne
dec
inc
xchg
or
sbb
fs
pop
enter
fsubrp
mov
cs
sbb
add
xchg
cmp
clc
idivl
jae
xchg
xlat
mov
popa
cmp
jne
sbbb
xchg
fwait
adc
inc
push
xchg
and
mov
jbe
fstpt
jae
jne
push
ret
or
push
pop
iret
xchg
call
lods
cmc
insl
pop
mov
es
in
push
fsubs
xchg
mov
jnp
ja
stos
out
or
sarl
mov
jno
mov
inc
sarl
mov
mov
shlb
sarb
fisttpll
mov
stos
inc
outsb
test
cltd
rcl
add
idivb
pusha
les
sub
mov
ss
cmp
int
xor
lret
xor
pop
fisubs
in
dec
mov
sahf
loopne
clc
sub
mov
push
push
in
in
loope
popf
jge
mov
test
pop
inc
mov
cs
adc
pop
outsl
leave
adcb
push
xor
aas
lds
dec
pop
aam
pusha
sbb
lahf
loop
stc
orb
into
in
push
aas
lock
repnz
cmp
mov
nop
lds
adc
push
shl
leave
cmpsl
xchg
jb
out
popf
out
ret
movsb
enter
arpl
ret
ljmp
int3
push
mov
xchg
adc
pop
mov
andb
mov
sub
sub
es
aaa
out
enter
mov
jge
pop
inc
xchg
mov
addl
cs
scas
mov
movsb
sti
test
lods
sub
dec
fs
mov
and
mov
icebp
loope
imul
pop
rcrl
dec
mov
je
mov
xchg
insl
test
shll
lods
dec
decl
dec
cli
pop
inc
sub
insb
sbb
xor
cld
mov
sub
cli
arpl
je
mov
sbb
lods
dec
cmpsb
std
mov
fimull
xchg
add
add
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
push
loopne
pop
popa
cli
jl
lret
jl
push
xor
jge
inc
jle
in
incl
pop
scas
daa
hlt
ret
movsl
xchg
cmp
out
pop
mov
adc
push
or
and
mov
pop
aam
lods
xor
std
int
fmuls
stos
add
loopne
cld
or
lods
mov
std
scas
mov
sti
rcll
xabort
push
scas
pop
aaa
or
mov
cmc
mov
fldcw
daa
icebp
stos
jecxz
or
add
cmpb
rep
mov
jne
push
dec
repz
sub
xchg
je
shlb
test
into
add
test
xor
cs
aaa
test
jp
aas
pop
stc
movsl
pop
jecxz
aad
cmp
xor
cmp
cltd
cmpsl
xchg
push
scas
movsb
or
hlt
gs
dec
dec
and
mov
jo
xchg
xchg
rorl
in
out
and
ret
pop
adc
sub
lret
shll
outsl
mov
add
dec
sub
jb
gs
sbb
sbb
adc
aad
lods
mov
mov
fiadds
stos
xor
pop
cmc
sub
mov
in
jmp
push
fldenv
inc
repnz
pop
sahf
xlat
xor
dec
fcmovnu
mov
lock
sbb
sub
pop
push
push
pop
addl
and
pop
jns
out
inc
jo
xor
outsl
test
ror
mov
out
ret
mov
jns
mov
adc
stos
outsl
addr16
xchg
sbb
ljmp
jl
ljmp
mov
lods
and
add
ret
loop
xor
jle
and
mov
and
dec
lock
imul
sar
pop
mov
arpl
pop
xor
adc
lock
push
xor
sub
or
inc
cmpsb
cli
mov
inc
ss
pushf
xor
or
ja
stos
in
ss
cli
xor
push
jns
fsubp
push
dec
je
sub
lcall
mov
add
add
lea
jmp
int3
xchg
dec
lcall
cmpl
hlt
jno
dec
dec
mov
shrb
ljmp
pop
cwtl
push
sub
test
leave
ja
popa
fiadds
insb
and
cmp
ror
adc
in
xchg
or
lods
imul
in
xor
push
mov
cwtl
cs
repz
or
stos
es
fs
out
push
sub
and
or
lock
push
fcompl
insl
or
fldl
push
jl
or
out
sbb
lock
aas
jae
xor
push
inc
jae
inc
jl
jle
xor
lods
das
icebp
xor
xchg
cmp
xchg
sbb
sub
jge
push
in
jo
xchg
pop
rorb
mov
faddl
andl
loope
push
push
jge
call
loope
xor
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
dec
int
aas
xchg
jns
jl
and
pop
dec
xchg
sub
pusha
add
sbb
push
inc
ret
push
push
lock
jl
les
dec
lds
jg
orb
mov
and
stos
cmp
dec
loopne
stos
mov
and
js
daa
sbb
pop
cmpsb
mov
setns
push
and
inc
jmp
lods
orl
jge
inc
pop
dec
cli
pop
pop
inc
mov
in
jae
je
dec
xor
loop
xor
test
aas
sbb
call
mov
stos
sbb
orl
pop
mov
in
in
in
lea
iret
dec
cmp
int
xor
and
mov
lcall
outsb
out
adc
sub
int3
test
dec
add
popf
mov
xchg
sub
repnz
lods
or
adc
cwtl
pusha
ret
xorl
pop
xchg
loope
ja
push
cmpsl
cmp
jno
fisubrs
fisubl
and
lods
pop
dec
or
or
jnp
sub
adc
push
pop
mov
jecxz
xchg
sub
stos
mov
add
or
sub
mov
mov
adc
data16
andb
fucom
mov
out
shrl
addr16
divps
leave
add
xor
cwtl
jb
push
push
sbb
lahf
pop
aam
xor
cmpsb
jno
idivb
xor
cmp
in
pop
mov
or
xchg
mov
jne
jb
lahf
outsb
adc
sub
add
inc
or
dec
and
jle
jae
je
cli
sbb
pop
test
out
aaa
sbb
mov
lock
neg
fadds
clc
dec
or
xor
mov
std
stos
aad
mov
stc
es
ss
out
movsl
hlt
pop
mov
or
mov
cmp
jecxz
add
mov
popa
pop
jb
xor
bound
divb
pop
es
push
xor
leave
inc
aad
inc
push
aad
or
mov
lahf
xchg
clc
iret
in
mov
pop
lods
or
iret
lock
in
mov
xchg
addr16
outsl
push
adc
insb
or
scas
gs
imul
outsb
and
enter
xchg
push
adc
mov
inc
inc
add
jno
sub
inc
fadds
push
jo
sbb
inc
std
repz
lret
adc
jp
mov
cmpsl
add
inc
loop
mov
pop
aam
cmp
in
push
jno
jno
add
mov
adc
pusha
fnsave
mov
mov
mov
mov
shlb
jle
out
sbb
into
dec
out
inc
pop
outsl
ja
xchg
sbb
icebp
movsb
repnz
xchg
push
and
xor
jo
add
gs
into
sbb
mov
loopne
xchg
movsl
stos
dec
mov
sub
pusha
pop
push
outsl
jbe
and
inc
mov
push
les
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
arpl
sub
cmpl
jl
pop
fs
mov
push
ds
add
sub
std
aam
sbb
cmp
mov
dec
lcall
push
adc
mov
xchg
mov
jns
daa
push
mov
dec
xchg
imul
lahf
ret
data16
xchg
add
jb
mov
xchg
pushf
lds
pushf
push
in
mov
in
icebp
in
push
cmpsl
mov
data16
leave
mov
orb
icebp
ss
negl
mov
mov
push
dec
andl
xorl
mov
aas
stc
sub
pop
cld
mov
dec
push
les
enter
add
xchg
pop
nop
shlb
aad
fldl
xor
xor
lret
adc
aam
jb
ljmp
fidivrl
push
mov
pushf
stc
sbb
addr16
or
stc
loopne
inc
pop
lret
dec
sbb
jle
js
push
mov
scas
add
sbb
jno
push
aad
lahf
ljmp
sbb
mov
loopne
dec
cld
jmp
mov
inc
insb
in
jp
sub
scas
push
or
mov
loope
divb
stos
jb
mov
push
jns
and
and
jnp
and
popf
xchg
mov
daa
and
fidivrs
jnp
or
cmp
mov
ljmp
dec
ljmp
dec
idivb
rcrl
filds
insl
inc
and
mov
xchg
dec
ljmp
shll
ja
xchg
scas
mov
lods
mov
enter
adc
sbb
sbb
and
pop
pop
cmp
lods
sti
xor
dec
das
sub
mov
sbb
sub
pop
inc
jns
push
cli
add
adc
rcl
outsl
scas
fadd
inc
mov
mov
add
jmp
inc
repnz
fcompl
mov
inc
mov
dec
push
lods
test
sbb
ljmp
pop
mov
in
sbb
fsub
xchg
clc
adc
andb
dec
sub
mov
adc
cmpsb
movsb
in
icebp
inc
aaa
push
cmp
cltd
pop
movsb
jg
incl
jbe
and
mov
dec
pop
ret
clc
test
addr16
bound
jle
das
cmc
xchg
push
xor
cmpsl
sbb
pop
add
fadds
clc
test
adc
mov
cwtl
inc
jg
dec
imul
loopne
mov
adc
es
add
pop
test
lret
cld
bnd
aas
leave
and
in
mov
repz
in
jo
loopne
call
mov
leave
sbb
push
das
scas
jno
push
ret
sbb
pop
fsubl
lock
cltd
loope
movl
repz
cmp
push
jae
call
cmp
sub
sbb
mov
or
mov
jb
outsl
mov
dec
mov
adc
in
mov
and
xorl
xchg
ja
outsl
stos
fisubs
mov
mov
add
movl
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
sahf
in
xchg
push
arpl
jl
mov
shll
mov
rol
mov
loopne
adc
fstl
fdivl
ljmp
sbb
loopne
lods
push
stc
inc
icebp
les
movsbl
add
jne
mov
cmp
cmp
das
aad
and
and
jne
addr16
lret
inc
fdivr
mov
mov
mov
sub
orl
int
adc
test
and
lret
sbb
shlb
lahf
xlat
aaa
pusha
fisttpll
insl
pop
mov
shlb
in
popf
sar
pop
mov
and
push
rclb
jp
int3
inc
test
add
add
add
divb
mov
popf
and
cmp
std
mov
lock
xchg
lock
ds
popf
in
sbb
xchg
pop
ljmp
call
movsb
aad
adc
pop
or
and
xchg
jle
sub
mov
pop
and
int
mov
inc
jecxz
push
xor
test
repnz
ret
mov
add
je
mov
inc
jne
jmp
inc
mov
insb
push
xor
mov
xchg
clc
out
mov
pop
rolb
cmp
popa
mov
es
imul
sub
cli
and
jns
mov
mov
fidivrl
iret
fnsave
out
rolb
aas
xchg
xor
sti
cmp
rorb
sbb
das
pop
jge
mov
orl
enter
scas
sub
sub
arpl
add
jae
adc
xchg
sti
push
add
in
cltd
aaa
outsl
in
jge
adc
or
stos
inc
lret
push
mov
fldl
aad
push
data16
nop
pop
outsl
movsl
push
adc
stos
hlt
mov
mov
in
psubusw
xor
loope
mov
mov
repnz
mov
adc
idivl
hlt
daa
pop
add
out
push
rorb
mov
lahf
xchg
and
push
popa
test
sub
xchg
and
pop
jmp
pop
or
aad
xchg
fmuls
pop
and
sbb
mov
mov
pop
xlat
push
mov
lcall
sbb
jp
aad
into
fsubrp
pop
add
or
out
leave
push
insl
loopne
scas
bound
lock
xchg
and
je
dec
xchg
iret
pop
pop
mov
popf
mov
dec
sbb
cld
mov
daa
rcll
bound
add
cli
adc
mov
mov
dec
lcall
lods
insl
jge
ret
cltd
pop
repz
jnp
sti
cmp
adc
mov
or
jle
mov
test
ss
inc
xchg
ret
jb
loopne
dec
dec
ja
adc
sub
inc
test
fidivrl
add
lret
aad
cs
push
push
jo
mov
add
cltd
idiv
mov
ja
push
cmpl
add
push
shrl
incl
shr
rorl
add
outsb
add
add
daa
inc
imul
xchg
popf
pop
aad
jmp
mov
jns
jl
pop
jmp
sub
and
into
mov
ljmp
hlt
jno
xchg
push
setne
jge
jae
orl
aaa
push
jnp
sbb
xchg
lret
push
dec
leave
push
std
fs
mov
ljmp
repz
xchg
mov
mov
push
outsl
jecxz
stc
mov
mov
mov
sub
xor
cwtl
test
mov
push
jg
out
push
dec
push
cmc
adc
sbb
cmp
inc
pop
movsb
in
mov
cltd
xchg
sbb
scas
dec
imul
pop
test
enter
jbe
mov
rclb
pop
mov
xor
ret
pop
cmp
inc
pop
mov
sbb
add
mov
mov
or
mov
pop
fwait
jno
nop
and
and
insb
int
in
movsb
mov
mov
popf
nop
aam
adc
mov
out
xor
dec
or
dec
lds
pop
or
mov
xchg
jo
scas
cltd
cmp
adc
sar
cmp
and
jmp
shll
aad
insl
rclb
xlat
adc
inc
xor
std
insl
loope
jecxz
aam
mov
out
jnp
popf
inc
loopew
add
mov
pushf
out
pop
jns
scas
imul
mov
pop
jecxz
clc
and
adc
push
loope
loopne
xchg
adc
add
jne
rol
jp
and
ret
stc
fsubrl
lcall
movsb
aaa
sbb
loope
jp
pop
mov
lods
cmp
push
divl
xchg
xor
int
pop
mov
dec
and
lods
push
pop
cli
inc
or
push
jg
add
in
inc
out
xor
cwtl
cs
dec
mov
adc
push
inc
cmp
xor
sbb
cmp
pop
int
imul
movsl
xor
arpl
xchg
cli
xor
movsb
inc
out
into
inc
jle,pt
mov
cltd
leave
add
mov
sbb
push
sti
lret
inc
cmp
popa
subl
loop
loop
ret
add
inc
aam
clc
cmp
sbb
lods
push
shll
dec
sub
pop
subl
int
adc
xor
adc
push
scas
test
pop
std
xchg
in
mov
lahf
int
cltd
sub
int3
outsb
pop
loop
inc
dec
jle
rcl
mov
mov
daa
sahf
jne
mov
fcomip
daa
mov
push
pop
push
xchg
push
mov
lea
cmp
bound
std
mov
loopne
cmpsl
cli
outsb
and
xchg
jle
ret
push
sub
adc
pop
fcmovbe
ds
mov
sbb
lods
mov
sub
add
pop
jle
pop
mov
nop
sub
cmp
jecxz
int
negl
bound
popa
ja
fwait
xchg
push
rolb
repnz
jecxz
jmp
cwtl
pushf
and
inc
dec
or
add
cmp
cmp
push
repz
mov
xor
add
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
imul
jl
fwait
and
xchg
popa
cmp
sub
inc
xor
movsb
adc
cmpsl
sub
adc
dec
push
inc
mov
or
jg
and
notb
cmp
std
shlb
cmpsl
mov
push
push
sbb
lret
ret
push
mov
push
lret
pusha
xlat
fldt
add
jmp
cmpsl
repnz
fstl
and
sub
test
lods
cmp
pop
fcom
in
imul
push
mov
iret
and
lret
fists
hlt
aam
mov
pop
imul
jnp
jae
popf
dec
mov
add
dec
inc
ror
lahf
popa
mov
xor
shl
je
jb
push
loopne
jp
lcall
cld
test
mov
movl
js
inc
xchg
icebp
imull
movntq
dec
mov
test
stos
xorb
jne
fsub
xor
sub
int
sti
sub
xorl
pop
mov
mov
fadd
xchg
addr16
cmp
jno
ljmp
inc
add
pop
aas
sub
pop
add
aas
adc
add
dec
or
loope
lock
push
jns
inc
imul
or
add
imull
lds
mov
bnd
test
mov
mov
js
xchg
xlat
imul
adcl
inc
mov
faddl
push
jmp
call
stos
jmp
mov
fiadds
fwait
and
inc
loop
ret
sbb
pop
push
and
adc
shlb
enter
mov
imul
test
testb
xchg
icebp
outsl
xchg
mov
xor
mov
hlt
sbb
inc
cwtl
out
dec
or
loopne
repz
or
xchg
mov
imul
adc
or
pop
and
pusha
fs
jp
mov
mov
fldt
mov
cld
fiaddl
sbb
fisubs
bswap
bound
stos
cli
xchg
xor
inc
lcall
xor
dec
call
adc
enter
ds
lods
add
daa
jns
fisttps
push
or
out
jnp
or
or
or
add
jecxz
add
popf
inc
xor
das
xlat
enter
sub
dec
jmp
mov
pop
ja
mov
sbb
pop
jbe
ficoms
jmp
loopne
int
loopne
loopne
js
dec
push
xor
pop
jp
cmpsl
stos
fcoml
jmp
jge
dec
push
cmpb
inc
mov
and
xchg
inc
insl
cld
adc
addl
cmp
mov
push
repnz
sub
insb
sbb
jmp
xor
inc
int3
cmpsb
fsubr
and
mov
loope
lock
add
or
jb
add
hlt
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
and
das
lret
jl
lret
jl
mov
fmuls
sub
xchg
mov
sub
jb
aam
int3
push
int3
add
cmp
pop
dec
pusha
das
cs
loop
dec
fwait
xor
in
test
lods
movsl
inc
jae
fimull
mov
jp
divb
cs
and
pop
inc
cmp
std
imul
rorl
cli
or
movsl
rcrb
sub
mov
push
or
xchg
inc
lea
ja
mov
sarb
stc
adc
jmp
rcr
into
cmpsl
mov
aas
lods
pushf
mov
sarb
xchg
sub
sbb
fsubp
fs
test
pop
cmp
mov
out
dec
test
rorl
mov
xor
clc
sub
loop
cmp
jl
mov
jmp
push
mov
jns
or
cmp
jo
pop
out
clc
mov
and
popf
xchg
imul
pusha
cmp
repz
bound
mov
fbld
sbb
popa
push
js
enter
cmp
push
cltd
shll
mov
sub
adc
or
stos
xchg
popa
movsb
lods
sarb
dec
lret
sub
inc
inc
xor
rcrl
iret
sub
ret
sub
rol
hlt
fsubr
lods
cmp
btr
pop
mov
xchg
jp
nop
out
mov
jp
repnz
mov
fdivrl
popa
mov
dec
fcmovnb
push
std
outsl
mov
into
pop
notl
js
pop
ret
inc
insl
cld
loopne
loop
jnp
shll
jbe
inc
or
lahf
in
loop
and
jno
mov
daa
pop
lret
push
sub
lcall
push
loop
push
xchg
xchg
jp
loopnew
inc
add
int3
andb
dec
jo
push
or
xchg
cmp
jge
push
scas
and
outsl
lcall
rol
push
mov
aas
fildll
cmp
adc
mov
sti
cld
enter
and
out
xchg
inc
fistpl
mov
ret
ret
ss
pop
cmpsb
mov
addl
roll
fwait
nop
movsl
std
push
jmp
bound
push
cltd
pop
testb
mov
sti
lds
ljmp
loop
cld
mul
sub
xchg
mov
mov
and
xlat
in
pop
rolb
mov
ss
push
push
xorl
jnp
cmp
sub
add
fsubs
test
js
cli
cmpsb
ja
mov
inc
pop
or
in
mov
mov
pop
repz
mov
fimuls
call
insl
out
mov
add
jo
vshufps
ficoms
push
out
and
jne
add
inc
sahf
xchg
imul
inc
push
rcrb
xchg
or
out
ret
push
adc
push
jge
push
inc
sbb
adc
cwtl
int
sbb
xchg
iret
jo
mov
lea
jnp
mov
mov
add
add
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
mov
push
mov
lret
jl
aaa
mov
aad
adc
daa
addr16
ljmp
popa
and
adc
mov
push
adc
xor
push
jne
jb
bound
xchg
sub
leave
or
das
inc
lds
gs
cmc
adc
add
ja
test
push
pusha
adc
jle
hlt
jns
sbb
sbb
push
fisubrs
rol
push
test
mov
out
sub
cs
dec
loope,pn
adc
lods
pushf
cmp
xor
push
loopne
in
shlb
and
xor
and
mov
adc
data16
ss
fsubr
cmpsl
dec
shll
sbb
dec
mov
sbb
scas
lahf
fbstp
inc
mov
inc
in
imulb
outsb
pop
fistpl
mov
stos
mov
scas
dec
repz
call
loopne
cs
insb
and
sbb
ret
pop
cmp
and
ret
sub
faddl
xchg
add
dec
pop
pop
frstor
enter
pop
lods
movsb
imull
cli
mov
cs
fwait
push
int3
jae
stos
sbb
scas
es
add
frstor
and
cmpsb
inc
cs
cltd
and
dec
outsl
das
or
xor
sahf
jns
mov
and
xor
push
push
cmp
fiadds
mov
xor
mov
and
push
xor
arpl
sete
mov
faddl
cmp
out
push
cmp
pusha
sti
sub
mov
dec
js
test
sub
adc
pop
test
imull
push
add
movsl
xor
rolb
mov
movsb
data16
lods
in
cmp
push
jp
ss
loopne
sub
fstpt
arpl
fbld
lret
fisubl
fucomip
mov
les
sub
fldl
fisubl
pop
adc
mov
xchg
sbb
jg
mov
sarl
gs
xchg
jbe
add
nop
int3
pop
icebp
js
adc
ja
lret
and
in
jbe
gs
fwait
scas
jne
jecxz
fbstp
fstl
repnz
in
and
sub
nop
mov
outsb
lcall
jg
in
test
mov
nop
maxps
adc
jb
ret
out
ret
arpl
xchg
mov
aaa
nop
lret
sub
cmpsb
push
divl
inc
ljmp
mov
imul
jbe
out
loope
push
pusha
inc
out
pop
sti
scas
jne
push
andb
mov
pusha
inc
frstor
mov
ja
mov
mov
and
pop
lock
mov
adc
sti
push
ret
mov
adc
xchg
sar
xchg
cmp
aaa
xor
sbb
in
lret
mov
in
dec
sbb
add
int
sarl
jb
xor
shrb
fisubrl
pop
adc
sub
jbe
dec
sub
popa
cmp
in
loopne
sub
or
and
sbbl
aam
cltd
mov
and
cld
mov
mov
loop
xchg
and
fldl
imul
jge
xor
add
imul
jmp
lret
jo
or
jmp
sahf
xor
insb
std
test
jl
lret
jl
filds
or
fisttpll
cmp
pop
sub
lods
daa
mov
shll
ds
or
inc
add
cmc
sbb
icebp
stc
out
cmp
inc
hlt
and
out
dec
inc
jmp
lods
inc
mov
pop
cli
out
mov
int3
add
push
sti
jno
ja
cmpsb
shrl
in
and
xchg
push
pop
jns
rcrl
adc
or
adc
jbe
jne
pop
sbb
mov
and
arpl
dec
hlt
mov
inc
cld
icebp
test
test
mov
stos
fildl
aam
addl
sub
pop
outsb
sbb
cmp
mov
mov
je
hlt
or
mov
pop
inc
push
cmp
hlt
aam
add
sarb
stc
fadds
mov
pop
nop
fstps
and
jae
or
cmp
loopne
int
es
test
shlb
rcrl
ds
in
stc
jg
cmp
sbb
inc
lahf
out
xchg
cwtl
pop
jb
inc
imul
cmp
js
and
xor
add
push
xor
or
aaa
pop
ljmp
or
ja
sbb
dec
pop
dec
subl
sbb
shrb
test
cmp
hlt
repz
aas
clc
and
arpl
stos
mov
out
adc
adc
int3
ficomps
and
cmp
ljmp
xor
inc
jge
and
sub
test
add
mov
sub
mov
and
popf
popa
inc
push
in
scas
out
hlt
fnstsw
or
mov
ljmp
test
xor
adc
sti
mov
or
dec
xlat
rclb
or
jno
cmp
fildl
in
or
xor
in
jecxz
loop
dec
jle
fwait
dec
insb
inc
add
sahf
dec
in
or
xor
test
xor
invd
mov
incl
lret
inc
mov
jmp
pop
pop
scas
movsb
int3
andl
mov
or
call
into
pushf
ljmp
sbb
stc
xchg
and
or
push
mov
sub
pop
pop
bound
aam
aas
jecxz
sub
cmpl
stc
stc
mov
gs
jo
pop
sub
xchg
arpl
cmp
mov
or
outsb
jl
scas
jb
ja
scas
mov
test
or
pop
xchg
xchg
jns
pop
and
fiadds
mov
pusha
and
xlat
int
arpl
add
clc
inc
pop
fwait
in
ret
sub
adcl
jnp
addb
orb
or
jo
scas
and
popf
and
fsts
adc
mov
push
aad
mov
jl
ss
int
fwait
push
pop
fldenv
or
test
xchg
cmc
jbe
into
popf
push
mov
jl
shr
icebp
movsb
movsl
fwait
cmp
push
notl
mov
hlt
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
mov
mov
jl
jns
jl
pop
inc
and
adc
out
cwtl
out
jnp
and
scas
xchg
mov
add
fwait
stos
or
pop
and
push
popa
sub
mov
stc
adc
movl
sub
lods
stos
out
inc
or
cld
pop
cmp
cmp
xor
fisubl
or
ret
out
dec
aam
jno
cmp
ja
cmp
lcall
repnz
mov
pop
shl
xor
adc
fcmovnb
pop
aaa
mov
sti
cmp
stos
sar
add
and
pop
cltd
outsb
stc
xor
out
fisttpll
xorl
stc
jle
push
jno
fdivp
aas
cmp
mov
stos
imul
xchg
mov
xorl
test
xchg
hlt
js
push
mov
lds
data16
cs
or
lea
pcmpgtb
adc
sbb
addb
xlat
call
insb
addr16
int3
mov
aad
add
gs
cmp
and
mov
loopne
cs
clc
std
arpl
scas
adc
pop
xchg
sbb
inc
dec
mov
flds
mov
mov
xchg
add
nop
into
add
leave
inc
jne
mov
xorl
daa
dec
jo
mov
adcl
push
mov
xchg
inc
and
dec
mov
push
nop
xor
insl
dec
icebp
and
ficomps
mov
sbb
and
add
adc
hlt
mov
mov
fisubrl
push
in
and
push
pop
cmpsl
imulb
add
call
clc
addr16
push
cmp
cld
sub
rdtsc
cmp
cmp
cmpsb
fadd
pop
cmp
push
mov
cltd
movsl
push
inc
jmp
popa
pop
das
aam
shll
movsl
adc
cmp
stc
push
ds
inc
xchg
in
cmp
lahf
mov
jns
push
inc
xorl
outsl
loope
daa
mov
stc
and
jp
das
mov
inc
sub
jecxz
cmc
in
repz
xor
mulb
xor
fcompl
adcl
ds
dec
mov
sti
jae
add
cmc
jecxz
adc
sub
fs
ret
ds
pop
adc
fnstsw
mov
push
add
jecxz
jge
add
mov
xchg
mov
out
pusha
test
pop
int
dec
pop
mov
jge
mov
cmp
cs
mov
movsb
xor
int
sbb
repnz
sub
and
je
clc
add
push
inc
adc
stos
out
ret
lods
lret
mov
les
jp
cmc
insb
mov
xchg
in
sub
icebp
inc
jl
inc
outsb
les
or
dec
pop
hlt
ds
add
jle
testb
and
mov
subl
andb
mov
ds
adc
push
or
scas
outsl
in
and
in
adc
mov
jo
fdivl
mull
stos
jge
dec
jne
xor
or
push
dec
and
mull
xchg
sub
add
or
fdivrp
mov
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
mov
lds
jl
pop
mov
lahf
fildl
or
movb
sahf
pop
inc
add
mov
or
cli
push
lahf
adcb
lods
int
and
aas
add
push
dec
dec
outsl
sbb
push
sbb
out
out
mov
repz
sbb
add
push
inc
jne
scas
cmpsl
adc
ljmp
ljmp
xchg
lods
and
inc
bound
xor
cmpsl
sub
cmp
mov
outsl
mov
push
outsl
ret
jns
mov
cmp
xor
mov
pop
jge
inc
sbb
pop
cmc
ss
mov
or
aaa
nop
sub
imul
dec
mull
push
scas
pop
outsl
add
adc
add
das
dec
xor
call
xchg
xor
cmc
push
pushf
mov
mov
andb
xlat
je
cmp
jbe
inc
mov
adc
mov
in
mov
mov
addr16
and
dec
jae
mov
cmp
and
rorl
inc
or
jl
mov
cmp
shrl
nop
out
aam
cs
jne
lcall
and
sub
fldenv
dec
mov
dec
popa
xchg
xchg
adc
hlt
pop
dec
mov
mov
shlb
or
ss
or
test
fisubl
jge
mov
ret
insl
xchg
mov
test
adc
jb
push
stos
dec
dec
push
xor
inc
ret
sbb
ret
xor
adc
xor
mov
adc
cli
stos
xor
cmp
xchg
outsl
ja
dec
jp
pop
in
jmp
loop
or
mov
or
into
inc
inc
lret
xchg
stc
xchg
ljmp
xor
cmp
aas
pop
push
dec
inc
cmp
mov
cwtl
push
scas
mov
orb
shlb
loop
mov
jb
std
ljmp
pop
cld
fwait
cmp
sbb
mov
push
mov
in
push
lret
sbb
or
dec
pop
loop
xlat
int
mov
imul
jns
push
mov
sub
jg
data16
inc
dec
mov
sbb
sahf
cli
push
loop
cmpsl
mov
fnop
adc
cld
out
cmp
cmpsb
and
mov
push
stos
popf
negl
sbb
dec
fs
aaa
in
loope
or
cmp
and
data16
lods
std
clc
pop
neg
mov
xor
lods
into
lods
mov
pop
pushf
jns
and
xor
xor
push
scas
pop
lock
cmpb
xchg
mov
movsl
inc
add
xor
jp
stc
ss
repnz
or
sti
stc
inc
aad
jae
sbb
pop
push
mov
sbb
mov
xchg
ljmp
mov
mov
push
rclb
nop
in
xchg
jl
push
cmp
loopne
in
mov
fisubrs
push
movsb
ds
imul
scas
mov
inc
sbb
in
repz
and
paddd
mov
mov
jo
test
pop
int3
pop
sub
adc
shll
jmp
scas
das
aad
mov
sahf
ljmp
sahf
jae
push
sub
jecxz
outsl
iret
sub
sbb
xchg
in
fldt
cltd
sahf
cmp
xor
sbb
add
roll
add
push
aam
jns
int3
aad
insb
mov
jl
fdivrs
pushl
ljmp
es
test
andb
aad
rolb
movsb
sbb
shll
fnsave
add
sub
dec
xorb
jg
cli
ja
pop
push
scas
pcmpeqd
lods
xchg
roll
hlt
xchg
cmc
mov
cmpsl
mov
out
mov
lds
mov
jg
mov
cmp
in
pop
imul
aam
fdivs
sahf
jle
inc
lahf
or
or
mov
daa
dec
shld
push
mov
lahf
dec
sub
idivb
or
xlat
xchg
dec
stos
sets
or
or
rclb
ficoms
sbb
fcmovnb
addr16
sub
sahf
lods
fsts
adc
sub
pop
scas
pop
mov
cld
lahf
push
arpl
dec
dec
sub
add
inc
add
aaa
stc
push
push
adc
xchg
inc
in
push
sbb
dec
movsl
xchg
and
push
sbb
adc
and
stos
loop
pop
pop
adc
cmp
push
loopne
inc
fadds
mov
cmpsl
pusha
pop
sbb
stos
in
pop
sbb
jb
cmovb
in
loope
dec
aad
in
inc
bound
negl
scas
rcr
jp
push
cmp
jns
outsl
scas
mov
mov
leave
or
outsb
pop
std
enter
cmpb
popf
or
inc
and
shlb
nop
adc
popf
aad
add
arpl
lcall
std
shll
lods
sub
jmp
jno
sarl
adc
xchg
cmp
mov
or
aas
test
arpl
cmpsb
mov
fcmovnbe
loopne
inc
jg
hlt
adc
mov
jg
ds
pop
cmpsl
xchg
cmp
push
into
addr16
sbbb
jp
dec
mov
mov
ja
or
cmp
leave
add
push
shrl
std
gs
call
es
jbe
jne
sub
das
xor
xor
adc
sub
dec
out
add
pop
mov
jl
xchg
fdivl
inc
mov
sbb
call
lret
add
jb
cwtl
jo
call
ljmp
mov
pop
jl
lods
or
or
movsl
int3
sbb
mov
and
sub
sbb
mov
es
add
pop
adc
adcb
rorb
pop
push
dec
add
ds
push
mov
lock
xchg
mov
das
pusha
test
addr16
cmp
push
repz
push
lret
add
scas
cmp
xlat
es
arpl
xor
out
push
mov
mov
sub
ja
out
lret
sbb
aam
sti
aad
test
pop
mov
scas
jl
addl
xor
inc
xor
cltd
jmp
int
mov
sub
js
shlb
mov
push
aas
inc
in
mov
add
roll
bound
test
sub
aas
sbb
pop
push
push
jge
out
mov
fstl
stos
cmp
adc
mov
mov
jmp
fildll
lahf
sbbl
inc
popf
std
mov
sti
pusha
pop
push
push
mov
loop
inc
clc
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
bound
sbb
jns
jl
mov
fwait
pop
or
cs
nop
sub
testb
cmp
out
inc
lahf
xlat
jle
pop
sub
mov
mov
int3
jo
and
fcoms
ljmp
test
out
push
cltd
lea
fidivs
data16
aas
mov
cmp
call
sbbb
lret
popf
sbb
insl
pop
cmpsb
loopne
aaa
rorb
mov
pusha
lds
sub
xor
cmc
or
sbb
aam
shll
dec
mov
scas
lahf
mov
imul
dec
jp
xchg
adc
mov
jmp
dec
jnp
dec
mov
jbe
dec
pop
mov
xor
and
mov
lret
inc
stos
arpl
enter
push
push
xor
sbb
xlat
or
push
out
rcl
loope
xchg
pop
mov
pop
aaa
rcrb
movsl
push
pushf
jl
sti
adc
mov
pop
xchg
xchg
mov
mov
xor
shrl
sub
jno
inc
and
lock
je
ficoml
add
pop
insl
lods
pop
sub
das
cmpb
lock
insl
xrelease
jne
and
js
sbb
hlt
popl
test
mov
and
xor
mov
lock
aad
push
push
sub
mov
js
jo
pop
fsts
mov
inc
lock
inc
or
popa
loop
in
popf
das
scas
mov
push
push
push
cld
dec
test
jmp
sub
loope
aam
test
sbb
jp
sub
hlt
into
cmp
pop
imul
scas
xchg
jecxz
fsubl
pusha
adc
mov
or
loope
jae
aad
out
mov
jno
lock
mov
adc
cmpsb
jmp
repz
bnd
hlt
adc
jae
pusha
popf
movsb
push
pop
insb
inc
jmp
shlb
cmp
movsb
fimuls
lret
jne
push
mov
sbb
lods
scas
std
mov
pop
jb
xchg
out
sti
in
out
add
ljmp
jecxz
adc
pushf
or
lcall
shll
dec
sub
mov
and
aad
outsl
pushf
shl
in
adc
xchg
add
xchg
scas
popa
pop
arpl
cmp
sub
or
das
adc
cld
dec
scas
pushf
dec
xchg
iret
movsb
pop
aam
imul
int
testb
sbb
jecxz
cmp
pop
add
loop
or
pushf
je
jo
mov
xor
hlt
xchg
mov
jne
add
pop
xorb
fwait
jle
pop
sub
mov
jg
mov
cmp
and
push
mov
test
aaa
jo
add
inc
xchg
pop
loop
aam
stc
loope
mov
lcall
jecxz
pop
cwtl
js
adc
push
ss
push
into
stc
xchg
rsm
icebp
idiv
and
out
ss
nop
test
jns
add
insb
xor
add
stos
lahf
sub
sbb
fsubl
mov
jne
mov
sbb
inc
fists
scas
test
test
outsl
cmpsb
jl
mov
addr16
daa
out
inc
sbb
push
mov
lcall
xor
add
mov
jmp
push
mov
test
fnstsw
cmpsl
ds
jl
out
divb
mov
sahf
or
mov
aaa
cwtl
jl
and
jmp
xlat
xchg
adcb
mov
push
popf
je
enter
lretw
pop
xor
cwtl
sbb
jg
pop
pop
mov
jo
xchg
fstpl
loop,pt
call
addr16
dec
mov
pop
mov
dec
andl
ja
out
mov
jns
fs
push
mov
pop
jp
popa
or
xor
aaa
push
orl
xchg
mov
inc
call
sbb
and
loopne
xchg
loopne
inc
push
aaa
xor
mov
sub
fbld
sub
add
sub
lods
mov
sbb
sub
in
mov
inc
or
pop
negb
arpl
xchg
push
ficomps
insb
inc
shl
add
call
lea
mov
add
inc
jbe
add
fidivrl
dec
mov
mov
adc
rolb
cmp
daa
dec
xchg
dec
subb
out
in
fistl
cmpsb
dec
mov
fidivrs
mov
xchg
push
mov
sbb
das
push
cs
test
xor
cmp
inc
pop
cmp
loope
push
cmpsl
mov
mov
inc
loopne
fldenv
cmp
mov
sub
fsts
push
jno
mov
sbb
lret
sbbl
je
sub
imul
cmp
in
cwtl
testb
sarb
popa
push
es
push
pop
dec
sahf
insb
lcall
cmp
xor
iret
ret
popa
lret
xchg
mov
sbb
jle
imul
cs
cmp
add
lock
push
mov
inc
fbld
mov
pop
or
clc
or
dec
add
imul
adc
pop
js
mov
add
xchg
test
mov
pop
pop
icebp
leave
ret
mov
add
ljmp
push
es
jae
cmp
sti
inc
rep
sub
jnp
lods
popf
int
movsb
mov
sbb
xchg
sbb
dec
mov
out
mov
movsl
jmp
out
js
int
jmp
stos
mov
or
xchg
pop
loope
push
cmp
in
cltd
push
icebp
cmp
aas
jmp
mov
aaa
scas
mov
mov
fnstcw
inc
fdivs
push
jge
jge
cmpsb
xor
adc
lea
lret
clc
rcrl
rol
js
or
sub
cs
test
mov
aaa
dec
loop
mov
out
jns
mov
iret
call
dec
lock
cmp
mov
rorb
repz
add
sub
lods
cmp
rorb
nop
lods
in
enter
dec
nop
das
ss
xchg
pop
jne
sbbb
stc
jb
jno
push
push
dec
cli
je
daa
cmp
hlt
jmp
mov
add
xor
test
hlt
cli
lea
lea
ficoms
add
outsl
jae
sub
and
ss
mov
inc
out
shrl
dec
jmp
cmp
jge
add
test
mov
stc
dec
imul
mov
sti
inc
xor
push
push
and
clc
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
mov
cmpsl
jns
jl
cmp
sbb
prefetch
or
in
cmc
insl
jo
mov
in
inc
sub
mov
cld
adcb
test
or
rolb
out
mov
jnp
jae
inc
jnp
pop
ret
rolb
cmp
popf
ficoml
mov
daa
lret
xor
sub
daa
sub
pusha
arpl
mov
pushf
addr16
xor
adc
xor
ds
push
out
addr16
ljmp
sub
mov
je
pop
mov
dec
clc
addr16
lret
inc
mov
push
ds
xor
xchg
not
mov
xchg
mov
stos
mov
fmulp
int
in
loop
mov
xor
icebp
sub
mov
inc
in
pop
push
push
test
and
mov
sahf
dec
es
out
mov
and
addr16
jecxz
lcall
mov
xor
into
repz
inc
adc
out
outsb
push
call
adc
out
aad
fwait
sbb
and
lock
mov
jl
es
dec
or
pop
xchg
loopne
scas
mov
xchg
das
pop
xchg
push
jl
xchg
mov
imul
xor
idivl
aam
cwtl
sbb
gs
arpl
sbb
aaa
les
adc
lretw
push
arpl
dec
pop
btr
mov
popa
adcb
xor
test
into
pop
mov
jmp
pop
je
nop
sub
xor
sub
fisttpl
sub
sub
fwait
xor
xor
popl
jne
jecxz
xor
inc
push
out
insl
ficoml
jno
inc
mov
xchg
mov
or
inc
lods
nop
add
pop
nop
cmp
popf
mov
cmpsb
mov
sti
adc
mov
rcrl
hlt
rorb
aad
xlat
sbb
outsl
lds
int3
mov
inc
nop
fisubrs
cld
push
cmp
outsl
orb
xor
jae
cli
adc
push
inc
fsincos
int3
sahf
js
sub
mov
fldl
adc
repz
pop
jge
fwait
push
sub
and
push
outsb
mov
mov
inc
xor
cld
shrl
add
sub
jb
fldenv
mov
dec
fistpl
push
fs
fimuls
inc
push
pop
sbb
sbb
mov
sub
cmc
cmp
dec
adc
mov
xchg
cmpsl
inc
push
push
icebp
sbb
or
dec
lahf
cmp
mov
aaa
rclb
push
push
xor
mov
mov
add
mov
loopne
ljmp
jecxz
pop
stos
pop
inc
hlt
movl
test
xor
sub
push
dec
inc
out
sub
sbb
into
or
out
sbb
xchg
fdivrl
cmp
mov
std
popl
mov
shrb
mov
ss
int3
insl
ret
frstor
inc
ror
call
fisubrl
jae
or
ss
and
lock
ja
das
adc
movsl
fildll
pusha
inc
call
add
in
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
or
jnp
and
inc
daa
inc
jb
dec
jne
enter
xchg
push
inc
jae,pt
add
shr
test
stc
xor
leave
add
push
into
cmp
and
push
cmp
add
roll
mov
and
xor
pop
in
sahf
xlat
cmpsl
lcall
rolb
cmp
das
jecxz
shrb
fs
inc
mov
subl
mov
mov
and
fsts
ficoml
adc
ret
mov
jle
movsl
jae
inc
mov
sub
xor
mov
mov
lods
dec
sbb
loopne
cmp
test
cmp
or
movsb
lea
add
bound
xor
and
mov
or
mov
adc
push
cmp
loopne
sub
xor
mov
dec
cwtl
rorl
in
clc
mov
je
aam
pusha
inc
jl,pn
mov
mov
fbld
pop
fsubrs
xchg
inc
leave
nop
mov
inc
lds
ja
xchg
dec
jbe
inc
js
mov
aad
xor
or
test
xor
sarl
inc
mov
pop
cmpl
push
or
jecxz
pop
adc
dec
fdivrl
es
adc
cmpsb
cmp
cwtl
stc
sbb
rcll
sub
sub
push
dec
fwait
dec
xor
jb
popf
push
out
in
jp
xlat
daa
out
cmp
add
fcompl
ja
pop
int3
sbb
xor
addb
inc
push
jbe
cmp
mov
test
xchg
int3
loopne
cwtl
push
cmp
imul
inc
inc
lods
int
ret
add
movsl
nop
mov
mulb
insb
and
add
push
test
lds
mov
push
fidivrs
cltd
and
pop
sbb
mov
fdecstp
and
lds
mov
push
adc
dec
sub
shll
in
movsl
aas
sub
daa
and
xchg
mov
insb
jo
gs
or
subl
push
lea
dec
push
aaa
mulb
jmp
adc
and
imul
pusha
cmc
repz
xchg
and
jle
xchg
movsl
jne
inc
cmp
cltd
stos
inc
call
push
mov
and
cmpsl
ss
add
addl
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
mov
jl
scas
jle
jl
dec
movsb
negl
inc
pusha
xchg
and
push
mov
mov
jmp
fsts
jns
mov
nop
push
jbe
lahf
mov
fyl2x
adcb
sub
imul
push
mov
lahf
and
xchg
inc
ret
andl
dec
in
cmp
scas
ljmp
dec
sub
inc
mov
std
xlat
push
bound
push
mov
dec
es
jbe
enter
cmp
fcmove
fsubr
xchg
jae
or
mov
repz
cld
dec
stos
aas
in
jp
out
xchg
ret
mov
mov
pop
sbbb
addl
dec
repnz
push
imul
out
rcrl
dec
les
pop
add
pop
mov
leave
push
adc
das
add
cmp
mov
cmp
dec
push
mov
ss
xlat
out
lahf
scas
lret
inc
jbe
out
mov
or
xchg
or
push
xchg
push
scas
fimuls
mov
punpckhbw
lret
xchg
or
pushf
or
iret
testl
xchg
mov
or
mov
mov
cwtl
ss
sbb
idiv
movsb
test
adc
jne
xchg
xor
sub
cmp
xchg
jnp
jmp
scas
pushf
push
mov
inc
jo
cmp
sbb
cmpsl
xchg
mov
xor
cmp
out
jns
xor
loopne
stos
int
dec
test
xor
fcmovne
add
mov
jno
xor
bound
in
pop
mov
arpl
mov
cmp
into
fstl
push
xor
fs
cmpsb
or
and
int3
add
xorl
in
mov
mov
repz
cmp
push
push
test
lods
inc
fstps
cmpsl
out
lods
scas
cmpsb
into
inc
or
sub
incl
xor
rclb
mov
mov
mov
or
dec
adc
cmp
imul
inc
push
dec
add
fucomi
push
sbb
push
xchg
or
xor
bound
mov
imul
mov
and
int3
sub
dec
lods
sarb
ds
pop
jmp
rclb
call
insl
out
mov
xchg
adc
test
adcl
pushf
sbb
repnz
adc
insb
push
or
mov
add
std
mov
adc
mov
mov
add
mov
mov
jmp
in
jae
jge
bound
out
int3
inc
outsl
mov
jl
test
repz
mov
sub
xchg
daa
mov
lret
addr16
test
lock
jl
fidivs
xchg
jmp
fdivp
mov
xor
pusha
in
test
add
dec
or
xchg
push
xlat
dec
bound
mov
jnp
mov
inc
das
add
mov
jo
ret
and
pop
xor
insb
mov
inc
out
add
mov
lea
jbe
scas
cmpsl
xchg
rcl
int3
loope
jne
mov
movsl
out
mov
jb
or
dec
movsb
fwait
ja
add
mov
dec
sarl
cmpb
push
rol
outsb
repnz
mov
pop
jl
nop
aas
addl
lcall
and
in
adc
or
and
es
sbb
test
mov
mov
and
push
das
imul
movsl
stos
xchg
in
int
in
xchg
add
push
imul
movsb
popl
sti
jecxz
out
mov
xor
leave
cld
stos
pop
sub
shrb
and
or
fbstp
cmp
shrb
xchg
int3
jmp
or
imull
test
push
lods
cltd
sbb
lcall
inc
sti
jg
push
add
mov
enter
shl
inc
jp
pop
fsubr
mov
dec
sbb
sub
and
faddp
mov
sbb
pop
sbb
lock
je
jge
loope
or
sbb
rol
xlat
or
js
aas
rorb
out
les
outsl
les
xchg
jns
outsb
push
cs
mov
test
pop
xchg
rcrl
adc
dec
loop
or
mov
jnp
aaa
hlt
cmpsl
je
loope
add
jmp
movsl
in
lds
cmp
jns
pop
push
popa
mov
cmp
sub
adc
das
cmc
cmp
pop
push
fistpll
sti
shrb
int
lea
insb
arpl
ret
call
adc
das
mov
mov
adc
stc
cmp
in
jnp
sub
icebp
cmpsb
inc
xchg
fs
or
cmpsb
xor
push
lods
repnz
in
pop
lahf
pop
lret
lret
pop
and
call
loopne
jnp
xor
in
popl
push
push
imul
jne
inc
adc
rorb
push
add
add
xor
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
negl
sub
jl
jg
jl
adc
scas
std
insb
cmpsb
les
int
outsb
jl
sub
fsin
scas
xor
int
movsb
push
xchg
andl
add
cmp
add
pop
gs
xor
sub
imul
cmp
test
mov
jge
ret
xchg
clc
sbb
adc
mov
xor
in
and
jne
mov
sub
adc
aas
rcr
and
pop
sahf
fs
imul
repnz
mov
ja,pn
fsubr
rcl
fildl
and
aad
dec
dec
push
cmp
insb
in
out
test
jae
mov
push
mov
int
and
daa
pop
xor
dec
xor
in
aas
std
dec
inc
pop
push
call
sarb
inc
aam
imul
add
jp
dec
mov
mov
rcrl
pop
xchg
xchg
dec
jmp
mov
push
and
jne
iret
lcall
and
mov
out
mov
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
dec
outsb
mov
jg
jl
aaa
mov
fimuls
mov
movsb
bound
test
and
out
push
cmpsb
imul
andb
andl
stos
and
nop
repnz
sub
ss
mov
sub
mov
pop
in
mov
cltd
sbb
daa
push
or
xor
in
and
xchg
clc
xchg
int
fidivrs
add
jns
call
and
mov
sbb
adc
dec
das
and
or
shl
jle
add
xchg
push
and
addr16
rclb
test
bound
mov
idivb
or
xchg
out
daa
test
add
ds
mov
mov
aaa
cmp
mov
xor
and
imul
sub
out
lahf
mov
jl
jle
lcall
jmp
enter
lret
mov
xchg
mov
xor
mov
not
test
and
lahf
adc
or
ljmp
adc
jb
mov
lcall
addr16
add
movb
dec
ss
add
ret
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
cmpsl
dec
pop
mov
jl
fsubl
jl
mov
inc
pop
dec
and
nop
rcrl
rcl
sub
shlb
xor
mov
leave
and
jbe
inc
jmp
xchg
loope
in
and
hlt
out
xor
push
inc
outsb
popf
ljmp
jno
cld
add
leave
and
fcomps
lock
ljmp
pusha
push
sbb
and
cmp
jge
mov
test
adcb
aas
out
mov
sbb
cmpsl
int3
loop
rol
bound
insl
mov
cmp
insl
mov
daa
repnz
mov
jb
dec
lahf
adc
sbb
out
ret
hlt
mov
ja
dec
pop
push
inc
sbb
jmp
mov
mov
dec
inc
fdivl
loope
pop
cli
in
andb
jp
sub
cltd
xor
bound
sti
mov
ljmp
or
outsb
sub
int3
cmp
pop
push
mov
sbb
and
xchg
inc
cld
dec
lods
cli
es
lahf
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
mov
jl
adcb
xchg
jo
popa
fcoms
orl
loop
dec
subb
add
hlt
dec
sub
push
xor
mov
iret
fisubrs
jg
cwtl
xchg
fimull
ss
dec
xlat
movsl
in
cmp
aas
pop
xor
cltd
push
push
cld
out
cmp
pop
pop
leave
xor
ljmp
cli
aam
cmp
pop
scas
sbb
bound
iret
and
in
out
push
cmpsl
cmp
stos
lret
aam
adc
rolb
mov
cmp
mov
mov
pop
jns
test
xor
xor
sub
push
icebp
fisttpll
mov
lds
shl
inc
jp
jmp
push
fiadds
and
cmp
testl
shl
sbb
mov
inc
push
jmp
sub
aad
ffree
add
adc
jnp
pop
cld
push
lock
not
arpl
add
sbb
out
arpl
int
pop
jl
and
sub
scas
mov
cwtl
cmp
mov
mov
test
je
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
fsubl
jl
adc
jl
lret
xchg
bound
clc
xchg
jnp
sbb
push
mov
repnz
pop
jnp
inc
jae
fxch
mov
rcll
out
out
hlt
jmp
repz
pop
lods
fs
iret
fcomps
jge
dec
mov
add
jno
enter
lods
lds
aaa
jo
mov
push
cmpsl
shrl
imul
test
fnstenv
movsl
sub
xchg
dec
and
push
push
lea
mov
and
dec
es
cwtl
rorb
pushf
fcmovne
mov
and
jae
xor
lret
dec
add
cmp
fsubp
test
insl
stc
jmp
lock
xchg
fs
xchg
cmp
or
je
adc
lds
dec
adc
cwtl
test
jecxz
fisubl
div
or
imul
push
sbb
mov
dec
pop
xor
sbbb
out
aam
idivb
and
jns
mov
std
xchg
fnstcw
shrl
in
js
mov
test
aaa
dec
dec
insb
xchg
das
movsb
lahf
add
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
or
inc
jl
adc
jl
call
loop
lahf
jecxz
mov
mov
cmp
lea
xchg
ljmp
mov
test
mov
mov
out
jmp
cld
jp
je
xchg
mov
aad
das
dec
mov
and
js
cmp
inc
dec
ret
xor
jb
js
out
fdivs
or
std
insb
scas
fildl
fsubrl
dec
sub
out
subl
adc
into
rcrb
rcrl
and
mov
into
sub
jb
popa
roll
pop
rcr
and
pop
cmp
jns
cs
outsl
jns
mov
xor
iret
cmc
cmpb
inc
out
xchg
push
lret
xchg
imul
enter
sub
cmpsl
xchg
add
and
and
mov
sub
jbe
mov
int
mov
sbb
arpl
mov
mov
pop
das
test
mov
or
shl
dec
andb
cmp
pop
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
js
inc
jl
adc
jl
pusha
fs
mov
stos
lahf
xlat
aam
dec
adc
sbb
jnp
sbb
iret
std
js
lds
loopne
in
addb
or
loope
mov
inc
sub
out
xchg
pop
popf
clc
xlat
fwait
lretw
ds
add
mov
mov
jbe
pop
mov
mov
jmp
dec
pushf
and
sbb
xchg
jae
iret
jecxz
and
aam
push
mov
stos
fbld
pop
cmp
mov
xor
inc
xchg
or
mov
cltd
jnp
ret
inc
and
mov
xchg
push
push
repnz
aam
filds
fisubrs
sbb
pop
push
cld
rorl
mov
orb
sub
cli
cmp
xchg
in
mov
push
pushf
push
sub
scas
sub
addb
mov
jmp
mov
rcll
sbb
dec
setp
je
stos
mov
xchg
sub
movsb
cmp
or
sbb
xor
scas
add
mov
jmp
pop
shlb
mov
cmp
ljmp
jl
jg
jl
jge
sbb
or
cltd
xchg
mov
mov
out
add
out
out
mov
std
and
insl
lcall
sub
insb
xchg
adc
pop
adc
jo
fsubr
enter
shll
fidivs
push
dec
neg
pushl
lock
rorl
pop
or
mov
stc
sub
mov
xchg
pop
cld
mov
scas
ljmp
xor
and
sbb
hlt
inc
cwtl
lock
or
pop
and
ss
push
sbb
jge
push
nop
adc
jl
xchg
pushf
pushf
pop
repnz
aad
ret
imul
inc
or
cmc
dec
sti
xchg
scas
pop
loopne
popf
rcll
push
lea
xlat
push
xor
sub
testl
or
decl
nop
out
pop
sub
cld
stos
subl
xor
ja
jne
nop
in
dec
mov
fdivs
mov
push
fs
sbb
inc
je
mov
lcall
test
sti
decl
add
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
hlt
jo
xchg
mov
jl
jg
jl
out
loop
sar
aas
pop
mov
pop
xchg
mov
add
lea
aam
push
add
add
cli
mov
gs
push
in
ret
mov
lahf
lret
in
mov
sub
sub
sti
xorl
gs
arpl
push
mov
jns
out
testb
in
adcl
ljmp
push
add
mov
outsl
pop
sub
ds
popa
sbb
inc
movsl
rclb
sbb
add
icebp
nopl
call
mull
mov
mov
sahf
mov
pop
sbb
scas
pop
cmpsb
or
addr16
sbb
in
js
in
test
ja
jo
mov
sahf
mov
lahf
stos
pusha
sbb
shll
in
maskmovq
imull
add
push
dec
jae
or
cli
mov
mov
jle
pop
pop
inc
xor
stos
imul
pop
lret
lea
sbb
lods
popf
sub
mov
sbb
shll
fildl
pop
adc
test
add
xchg
jmp
push
fsubr
imul
enter
cmp
scas
inc
jl
adc
jl
ljmpw
sarb
jnp
xchg
jae
xchg
xchg
or
inc
test
cmp
mov
lret
das
xchg
xchg
cs
out
icebp
inc
ja
inc
sbb
and
xor
lret
cmpsl
push
and
imull
out
bound
or
stos
push
sti
lock
pop
pop
les
lods
inc
pop
popf
pushf
lds
push
add
pop
sahf
sbb
mov
and
xchg
jecxz
or
cs
repz
adc
imul
mov
cmp
ret
les
imul
jns
test
pop
xchg
out
stc
clc
movsb
lods
repnz
fcmovnu
cmpsb
inc
cmpb
dec
sbb
xor
cs
pop
lods
out
dec
imul
in
das
sbb
jecxz
xchg
and
and
loope
cmp
jle
mov
adcl
in
or
xor
cmp
jne
aam
test
mov
ds
xlat
dec
clc
fcompl
scas
mov
out
adc
insl
pushf
insl
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
and
inc
jl
adc
jl
enter
dec
lock
ljmp
aam
pop
cld
mov
add
jae
mov
push
push
push
jle
jo
repz
adc
mov
into
and
sbb
xchg
or
jg
push
out
xchg
inc
out
fs
out
shl
and
push
fwait
and
lods
mov
shll
sbb
fstl
repnz
pop
sbb
jp
cld
jb
das
out
in
shlb
sbb
idivb
push
test
xor
ja
xor
addr16
xchg
jmp
cs
arpl
cs
cmp
hlt
xchg
repz
out
popa
fbstp
insl
stc
repz
cmp
sub
cmp
sub
test
sbb
dec
xchg
add
jns
pop
jl
mov
roll
inc
scas
pop
mov
repz
repz
cmp
idivb
fcomip
or
push
mov
pushf
push
pop
fwait
add
adc
je
adc
xor
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
cmp
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
push
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
cmp
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
cld
out
in
into
add
pop
add
add
inc
or
and
iret
jl
in
fs
inc
add
mov
add
or
cld
mov
jge
outsb
lret
add
mov
jo
lods
or
fistl
mov
push
push
xchg
pushw
xchg
lret
sub
movsb
in
movb
and
dec
mov
fstps
cld
icebp
fimull
ds
jne
cli
dec
test
jmp
cmpsl
jl
pop
arpl
cmpsb
cmp
inc
stc
insb
clc
shrb
xchg
imul
pop
scas
jno
and
ret
jle
adc
ret
ret
int
mov
xchg
adc
jp
push
sahf
lock
dec
mov
movsl
out
push
test
add
cmp
pop
nop
stc
ja
and
pop
cmpsb
lods
xor
aas
into
dec
pop
jo
xlat
adc
cltd
fildl
in
clc
pop
test
inc
test
roll
pop
ficoml
in
jle
mov
cmp
mov
iret
add
pop
add
add
inc
dec
cmp
sbb
dec
shll
in
das
push
xlat
cmp
mov
sub
ljmp
jp
mov
push
jne
cs
xchg
stos
lods
jp
or
inc
aam
add
or
call
pop
and
cmp
xor
push
dec
movsl
or
or
dec
dec
out
sti
mov
sbb
jne
push
inc
push
push
xlat
inc
andl
adc
jle
std
insb
pop
push
or
int3
fistps
or
sbb
jp
dec
cmc
jl
stc
enter
sbb
dec
out
clc
daa
sbb
lds
popa
rclb
dec
push
testb
ljmp
mov
clc
dec
push
jae
sub
in
jmp
inc
cmp
mov
mov
notb
mov
or
adc
push
fcomps
inc
add
cmp
mov
sub
ds
insl
clc
scas
push
push
mov
add
add
push
add
sar
add
pop
add
add
pop
aaa
mov
xlat
in
push
int
bound
dec
jecxz
lahf
jmp
mov
adc
cld
cli
ljmp
rolb
push
inc
push
hlt
add
jp
fdivr
and
cmp
aad
pop
call
jl
fidivs
imul
test
pop
das
out
adc
sbbl
setae
adc
aam
xor
cmp
or
sub
shrb
jnp
dec
and
hlt
std
cmp
pop
xor
inc
lods
aas
push
inc
dec
fst
sbb
xchg
push
fnstsw
pop
xor
fcmovne
xchg
dec
mov
xchg
daa
pop
inc
xor
testl
mov
push
je
sbb
int3
mov
jae
mov
xchg
push
movsb
cwtl
mov
sarb
pop
movsb
test
or
cwtl
sbb
dec
mov
jmp
sub
in
fs
into
je
add
fs
sbb
jle
and
add
subl
idivb
mov
add
add
pop
add
add
cmpsl
xor
dec
jge
add
pop
mov
adc
and
adc
add
fs
enter
ja
pushf
or
loop
subl
notl
jg
jmp
mov
sub
movswl
cmp
inc
sub
aad
into
jmp
cmp
xor
pop
rolb
fldcw
xchg
pop
popf
or
aam
pop
ja
xor
data16
dec
jecxz
je
cmpsb
stc
jno
addr16
mov
mov
clc
push
mov
out
pop
fnstenv
jne
push
or
movsl
xlat
aad
pop
fisubl
popa
in
neg
push
pushf
mov
jmp
bound
stos
lret
dec
movsb
xorb
mov
mov
xchg
mov
lahf
mov
mov
test
cmp
popa
into
add
mov
mov
cli
fistl
popf
flds
pop
jae
or
ss
pop
xchg
rcll
add
pop
add
add
data16
inc
pushl
ficomps
fsubrl
pusha
sub
lds
punpckldq
dec
or
push
cmp
pop
pop
in
sub
negb
or
sub
pop
inc
push
xchg
fwait
in
sub
loop
fldt
stc
jnp
jle
out
push
sahf
rcrb
add
test
xor
push
cld
add
push
xor
pop
adc
or
popf
lds
jge
pop
call
in
mov
sti
or
and
dec
xchg
cmc
out
dec
insb
push
pop
sub
lret
adc
das
and
std
negb
lock
lcall
aad
push
mov
mov
dec
cli
test
push
pushf
in
add
out
cld
pop
sbb
out
popa
das
sbbl
cmp
add
fiaddl
dec
push
add
cmc
insl
cmc
out
lcall
mov
fcomps
adc
add
pop
add
add
mov
ret
jns
insb
mov
mov
stos
test
sub
fdivrl
ja
jp
pop
movsw
and
pop
adc
adc
add
std
mov
out
push
adc
es
pop
cltd
bound
dec
lcall
mov
test
fdiv
fmuls
mov
jge
stos
mov
lods
jbe
mov
mov
int3
aad
outsb
pop
dec
inc
dec
fistps
pop
or
bnd
aam
test
lcall
test
jmp
arpl
mov
mov
les
out
xlat
and
lods
xchg
pop
sbb
cmp
sub
jge
push
mov
daa
jecxz
aaa
adc
neg
sub
rolb
je
nop
inc
xchg
hlt
daa
mov
popa
mov
mov
mov
add
add
push
inc
push
or
mov
xchg
setnp
adc
pop
rolb
push
out
sahf
add
stos
mov
add
add
add
outsl
jle
aam
aam
mov
shlb
pop
aad
add
add
add
jmp
int3
loope
cmp
xor
and
mov
sbb
and
mov
adc
mov
popa
jns
vmovaps
dec
gs
aas
inc
adc
popa
idivb
xchg
xchg
inc
outsl
cmc
jp,pn
xchg
mov
pusha
fdivrs
cld
mov
mov
sub
outsb
sbb
popa
popa
andb
shll
jbe
add
cld
sbb
dec
xchg
ljmp
adc
inc
in
mov
mov
inc
inc
dec
out
add
lret
mov
push
arpl
adc
sub
outsb
jne
movsl
dec
idivl
push
adc
fisubs
or
pop
cld
mov
movsb
mov
jns
arpl
and
and
out
lret
xchg
xchg
or
fstp
cs
adc
pusha
pop
xor
or
cmp
outsb
dec
inc
fs
dec
add
jle
and
scas
sti
jle
sbb
pop
add
pop
add
add
ljmp
adc
ljmp
repnz
xchg
jo
push
loopne
shl
addb
mov
fs
mov
push
or
adc
add
data16
cmpsl
shlb
jmp
ror
mov
pusha
inc
mov
sub
lret
pop
cmp
jns
movsb
imul
and
fidivrl
das
ja
aaa
loope
or
lret
xor
fadd
or
in
jbe
sub
push
add
roll
rcr
push
ljmp
repz
add
lea
jae
fcoms
jp
sub
inc
lock
inc
mov
sub
pushf
sub
jmp
cmp
sub
push
fwait
add
adc
jmp
mov
movsb
pop
stc
xchg
jle
jmp
xlat
jb
aad
in
add
negl
sbb
sbb
je
xlat
add
pop
add
add
and
and
mov
lods
mov
inc
jae
sahf
ljmp
adc
xchg
and
sarl
jo
cli
dec
mov
rcrl
jnp
mov
pusha
lods
mov
cmp
imul
std
inc
mov
orl
std
sub
jmp
adc
test
push
shlb
movsl
adc
pop
lret
pop
dec
js
repnz
mov
cmp
arpl
popf
out
mov
enter
mov
inc
push
add
fildl
std
in
in
imul
icebp
or
mov
les
xor
mov
int
dec
lock
rsm
mov
push
imul
mov
sti
into
data16
or
int3
sbb
lods
test
leave
jns
pop
xchg
addr16
jmp
icebp
pushf
iret
jbe
push
add
cmc
and
add
xor
push
jl
jle
insb
inc
xor
push
loopne
xor
fadds
add
add
add
jmp
mov
push
push
rcr
movsl
mov
add
mov
negb
notb
and
pop
roll
sarb
sub
mov
es
ljmp
inc
stc
sub
adc
mov
xor
or
mov
rorl
mov
rcll
popa
cltd
add
rorl
je
stc
cmp
lret
in
std
xor
rcrl
or
data16
sub
cmp
push
cmpsl
jmp
ficompl
enter
adc
bound
mov
scas
or
mov
addl
rolb
in
xlat
sub
lret
mov
out
mov
cmp
popa
mov
aaa
and
jbe
dec
mov
sbb
lock
orl
dec
icebp
vmovdqu
pop
jmp
ret
in
gs
add
fwait
mov
sbb
les
xor
add
pop
add
add
jle
mov
mov
test
sbb
pop
outsb
dec
jbe
xor
test
mov
mov
cwtl
lret
lock
movsl
sub
sbb
xor
add
lahf
int3
popa
cmc
adc
jecxz
repnz
mov
addr16
pop
lods
inc
in
push
mov
or
jl
lds
jno
popa
xchg
scas
in
leave
dec
and
jge
xor
mov
inc
andb
xchg
jmp
jne
mov
adc
stc
inc
xor
dec
loopne
cs
jbe
pop
data16
outsb
xchg
outsb
test
out
sub
std
test
icebp
aas
ret
ret
fs
gs
movb
jns
xor
cmc
push
and
fnstsw
lcall
aas
lods
and
stos
and
inc
cmpsl
and
add
in
mov
xor
push
aas
jne
loop
push
inc
add
aaa
data16
jne
mov
xchg
jae
in
xor
fiaddl
add
add
add
dec
mov
scas
cltd
loope
in
fcomp
insb
sub
mov
add
pop
cmp
add
pop
pop
jge
or
xchg
enterw
and
aam
pop
mov
add
cmp
lahf
cmc
adc
pop
and
andb
pop
cmp
xor
sar
xchg
xor
ret
lock
cmp
cmp
jne
or
pop
cmc
mov
pop
pop
icebp
cltd
mov
das
arpl
jae
push
andb
fisubrl
sub
stc
xchg
push
add
pop
stc
ljmp
adc
out
test
out
insl
test
repnz
pop
pop
inc
push
popa
inc
dec
mov
adc
pop
pop
jo
add
outsb
fnstcw
testb
push
inc
jg
test
mov
shll
clc
popa
xchg
or
cwtl
aaa
int3
sub
jg
insl
or
sub
rcll
cmpsl
xchg
mov
jnp
cmpsl
iret
outsl
dec
jnp
jns
and
jnp
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
out
lcall
cmpsl
dec
cmp
mov
push
test
mov
sub
sbb
fwait
xchg
or
jg
mov
mov
lock
jge
cmp
adc
push
cmpl
mov
in
push
sub
out
xor
loope
xor
rorb
add
pusha
and
icebp
push
pushf
mov
mov
mov
popa
imul
popl
loopnew
outsl
xlat
jae
call
sbb
loopne
lret
adc
cli
mov
mov
mov
pop
sbb
sarl
jnp
aas
iret
data16
dec
shrl
das
pop
push
push
xchg
or
repnz
pop
sbb
leave
sub
imul
lahf
mov
aam
test
dec
xor
or
dec
inc
int3
inc
insl
negb
jg
jmp
sbb
sub
pop
sarl
lods
std
mov
lea
add
add
add
adc
pop
sub
xor
cmpsb
loop
jo
adc
mov
mov
mov
inc
add
push
leave
pop
repnz
stc
push
push
mov
push
lock
inc
clc
clc
ja
cli
and
icebp
test
dec
sbb
push
fwait
std
mov
xchg
movsb
pop
and
dec
fdivs
jecxz
test
push
cs
cltd
daa
cmpsl
pop
outsb
adc
lret
movsb
fistps
sahf
imul
sbb
int
rolb
scas
fsubrl
mov
mov
js
adc
xor
jle
mov
xor
cmpsb
aaa
dec
sub
jge
data16
fldcw
xchg
or
mov
dec
cld
rclb
aad
dec
adc
lods
mov
jne
push
cmp
jecxz
and
lret
push
sti
lea
pop
pop
stos
mov
aas
or
and
imul
add
add
repz
std
repz
pusha
in
dec
fldl
add
add
add
mull
add
mov
fsubrp
bound
iret
pop
add
xchg
sbb
dec
sahf
sub
mov
dec
mov
sub
lahf
enter
mov
cmp
xorl
and
test
jp
subl
jg
sbb
rcrl
xlat
sbb
push
add
xor
cmp
arpl
add
test
jg
mov
inc
aaa
pop
into
mov
icebp
push
sti
add
pop
cmp
addr16
pop
imul
pop
sbb
inc
xor
sbb
jbe
loop
mov
gs
inc
cmp
jle
xor
push
dec
mov
sbb
mov
mov
shlb
xor
mov
insl
inc
add
int3
sar
leave
sbb
adc
jae
or
cmp
nop
mov
adc
negb
out
nop
daa
enter
push
pop
jecxz
push
or
in
sub
cmp
cmp
pop
repnz
ljmp
add
add
xchg
outsb
pop
mov
decl
fimuls
insl
push
and
and
cs
imul
stc
adc
push
lret
jle
rorb
add
lods
adc
mov
mov
xchg
popa
jae
insb
imul
outsb
dec
les
popf
jo
xor
inc
lds
ja
cltd
lods
nop
fbstp
push
fwait
cmpsb
adc
inc
mov
clc
test
hlt
in
and
icebp
ljmp
xor
mov
idivb
out
sub
add
mov
mov
daa
les
xchg
xchg
xor
xor
pop
into
push
out
xchg
jae
loop
data16
icebp
iret
addl
daa
xchg
lahf
bound
test
add
jmp
lock
adc
fldenv
mov
xchg
gs
pop
push
out
add
mov
mov
jae
mov
add
add
add
push
cmpsb
imul
mov
jle
leave
jo
push
jb
notl
fmulp
jmp
dec
cmp
mov
lret
inc
push
sbb
pop
mov
rcrl
mov
aas
test
or
pop
lret
cvtps2pi
add
aam
xchg
jnp
adc
outsl
dec
xlat
inc
and
ja
arpl
and
movsl
mov
xor
enter
aad
xchg
in
jmp
testl
xchg
or
pop
les
push
arpl
jae
jg
xchg
add
inc
sbb
dec
insb
rcl
fisubl
mov
arpl
xchg
xor
mov
rcl
adc
add
cmpb
insb
jnp
or
mov
fbld
notl
fs
cmp
mov
int3
inc
xor
pop
mov
repnz
adc
or
cmpsb
push
jo
add
xchg
in
mov
incl
in
xor
pop
add
add
out
outsl
pop
in
sbb
inc
xchg
add
repnz
and
lret
testl
pop
pop
sahf
mov
ss
lds
iret
je
xchg
jecxz
call
mov
test
xor
mov
cmc
hlt
pop
fisttpll
fiaddl
mov
sbb
pop
orb
mov
or
or
stos
xor
mov
xlat
ficoml
jae
out
adc
sbb
mov
push
jmp
insl
ret
bound
xchg
jo
xchg
rcrl
paddusw
dec
mov
push
dec
int
inc
xlat
ds
sbb
sarb
push
scas
dec
push
and
ljmp
jb
pop
repnz
pusha
adc
sar
pop
cmp
push
dec
orb
pop
lods
mov
enter
lds
jo
push
mov
sti
xor
iret
loope
and
pop
jecxz
add
jp
inc
lret
cmpsb
js
push
cmpsl
stos
negl
lahf
push
add
sub
in
negl
es
int
enter
loope
add
add
add
add
std
lock
jmp
jb
adc
aas
cmpsb
mov
pushf
mov
pop
jb
xchg
push
test
ds
mov
xchg
sbb
std
add
test
pusha
push
sub
xor
cmp
outsb
jo
aad
xchg
call
or
push
adc
pop
sbb
adcl
std
sbb
xchg
ljmp
pop
mov
sub
cmp
add
ja
fstps
inc
fldl
mov
lods
outsb
imul
mov
sbb
xchg
stos
mov
cwtl
popa
decb
push
ret
mov
imul
pusha
decl
in
lcall
xchg
call
fs
fnstenv
add
in
jg
push
pop
call
jecxz
jae
and
sub
mov
push
enter
jo
push
insb
add
mov
jge
nop
mov
jb
add
pop
add
add
and
sbbb
rorb
cmp
jno
push
mov
outsb
mov
sbb
mov
dec
or
rol
push
mov
push
add
or
xor
repz
ss
jnp
icebp
cld
sbb
mov
pushf
sbb
fstl
jp
popa
ret
mulb
jg
loopne
mov
fists
push
mov
push
in
mov
mov
dec
inc
dec
idiv
inc
ret
movsb
bound
dec
rcll
dec
lock
mov
pop
into
sbb
inc
xlat
xchg
and
mov
cmpsl
mov
sbb
inc
or
out
add
lahf
call
xor
jns
xor
xchg
test
lret
shll
stos
popa
es
xchg
and
and
push
movsl
sub
rolb
jg
cmc
int
mov
jmp
mov
or
dec
xor
push
sbb
cmp
fistl
add
add
adc
push
jno
mov
dec
jns
add
pop
add
add
dec
add
jae
dec
pop
sarl
aas
adc
inc
cmp
pop
mov
pop
out
in
aad
jno
adc
mov
insb
fidivrl
or
sub
pop
lret
aam
jge
inc
pop
lods
sbb
out
jmp
mov
and
hlt
fsubrs
cwtl
imul
push
cld
fldcw
ljmp
ljmp
pushf
movsb
enter
jg
in
cmc
in
cmc
push
sbb
data16
cld
push
repz
jp
and
cmc
cmp
fldt
in
dec
lcall
rol
rclb
sbb
gs
pop
xchg
stc
mov
fs
xor
push
cmp
pusha
test
inc
cmp
cltd
mov
jl
inc
je
mov
mov
add
and
mov
and
adc
out
repnz
add
pop
call
mov
inc
sbb
pop
add
add
xor
and
push
push
or
sub
repnz
push
adc
and
neg
outsl
xor
daa
add
mov
rorb
out
cmp
pop
orl
push
das
addl
inc
scas
out
pushf
leave
pusha
outsl
push
in
imul
outsb
cmp
mov
xor
cmc
pop
js
mov
sub
popa
cli
aaa
imul
xor
push
lea
outsl
push
push
mov
into
sbb
pop
cltd
in
sub
aas
icebp
popf
pop
aam
xchg
cli
imul
std
mov
jae
push
je
sbb
jns
pop
mov
out
mov
mov
push
mov
pop
or
xchg
insb
dec
sub
hlt
cwtl
cltd
mov
out
sub
cmpsb
les
xchg
adcl
iret
push
adc
cmp
idiv
insb
cmp
out
je
loop
out
arpl
leave
cmp
clc
int
aam
dec
sbb
add
mov
push
decl
cmc
iret
pop
daa
xchg
add
pop
add
add
addr16
sub
inc
iret
nop
movsb
dec
or
and
dec
xchg
mov
nop
js
rcrb
inc
out
pop
or
jecxz
aaa
sbb
jecxz
notb
adc
sub
and
mov
vandpd
add
leave
dec
lock
aam
repz
fldcw
push
fwait
outsb
pop
push
movsb
mov
or
and
psrad
ret
and
inc
sbb
jo
ffreep
push
ffree
fisttpl
stos
pop
cmp
sub
xchg
adc
int3
dec
sbb
push
adc
push
ljmp
inc
and
stos
mov
push
push
ds
sbb
mov
cwtl
jnp
movsb
inc
cmp
lock
sub
mov
mov
rorl
std
fsubl
rcr
rorl
lods
hlt
mov
out
aas
xchg
neg
mov
fsubrl
or
add
jmp
in
and
xchg
sub
add
add
dec
push
jne
pop
fs
out
and
mov
mov
scas
or
jl
gs
cmp
loope
and
add
or
fsubrl
xor
xchg
and
lret
loop
jge
loope
in
in
push
vfnmadd231pd
icebp
xchg
xchg
andb
sbb
jns
push
insl
jo
std
mov
lods
cmp
insb
and
xor
jle
fwait
lods
in
push
adc
sbb
popa
push
aas
lahf
addr16
xchg
push
push
dec
ret
adc
insl
ret
mov
push
sub
cmp
cmp
jmp
inc
sub
mov
lret
sub
mov
cmpsb
push
push
ret
sub
xchg
and
push
sub
scas
int3
sub
ljmp
mov
dec
push
jge
mov
rclb
cs
data16
test
jl
adc
add
outsb
xor
test
loope
xchg
out
add
add
add
ds
xor
dec
and
mov
scas
call
cmp
in
dec
or
icebp
stc
fisttps
pop
je
sbb
aad
or
mov
push
xchg
adc
add
dec
out
sbb
and
stos
adc
push
pop
and
sbb
dec
loop
mov
and
scas
ret
icebp
xor
out
dec
loopne
daa
in
les
fidivrs
iret
push
in
xorl
movsl
pusha
bound
pop
xor
ds
sbb
dec
je
add
and
xchg
add
push
in
and
pop
inc
pop
sbb
push
imul
pop
dec
fisttpll
mov
sbb
dec
mov
xor
aad
mov
jo
aam
pusha
adc
pushf
dec
adc
mul
add
inc
ror
lock
jnp
xchg
cmp
pushf
call
add
xchg
inc
sti
sub
mov
mov
cmp
repnz
and
cwtl
sub
out
out
gs
aad
cltd
jle
daa
sbb
jp
push
ret
lcall
std
mov
sbb
pop
pop
cmp
es
inc
int3
loopne
xchg
or
gs
adc
nop
pop
mov
lcall
xor
test
jae
add
nop
inc
xor
inc
inc
mov
xor
jmp
jae
inc
leave
or
fisubrs
std
cmp
mov
and
cmp
gs
shl
ret
mov
cmp
jl
popf
add
repz
aaa
and
inc
repnz
jnp
int
jbe
pop
push
int3
ljmp
sub
and
pop
cld
clc
popa
sub
pop
es
or
jne
clc
dec
jns
cmp
push
mov
mov
jle
mov
mov
add
mov
adc
std
mov
xor
mov
add
and
repz
fisubrs
jno
cld
je
mov
add
add
jp
push
dec
je
inc
pushf
mov
es
mov
test
scas
nop
xor
out
mov
mov
ret
lahf
push
add
push
lcall
or
jecxz
dec
pusha
call
bnd
dec
add
dec
aaa
sub
inc
push
mov
xchg
sub
out
jae
jbe
xchg
stc
mov
lods
and
xchg
mov
aaa
cmp
test
in
lcall
imul
es
jb
testb
repz
imul
and
outsl
insb
ds
push
in
cld
sti
cmp
pusha
std
lea
int
cmp
insb
jne
dec
dec
mov
out
test
gs
in
push
sub
or
xlat
test
xchg
movsl
sbb
lods
dec
addr16
cli
jns
jno
add
cld
scas
cmpl
add
out
mov
mov
out
dec
cmpsl
ja
ljmp
mov
cwtl
mov
lret
xchg
add
cmp
loope
sub
inc
xchg
mov
cmpl
pop
jecxz
mov
arpl
ljmp
daa
pusha
frstor
dec
mov
ja
sub
mov
test
mov
mov
xchg
push
mov
push
lds
adc
insb
sbb
mov
pop
loop
mov
jno
pop
adc
and
js
sbb
sub
mov
and
scas
and
popf
adc
mov
sub
jb
sbb
in
mov
lods
cmpsl
sub
lods
sbb
xor
outsl
inc
mov
xchg
in
mov
cmp
das
xchg
movl
pop
push
adc
push
out
jns
loopne
adc
cmpb
jecxz
sbb
jmp
mov
stos
mov
les
shrl
cmc
scas
cwtl
sub
repnz
mov
add
add
add
cmp
or
dec
push
outsl
mov
mov
sbb
aaa
cmp
xor
inc
loopne
sbb
and
aas
loopne
jg
mov
out
pushf
add
loop
xchg
mov
stos
sahf
fmul
sbb
dec
sahf
and
xchg
xor
sbb
cmp
and
jb
or
sbb
or
mov
and
mov
cld
test
dec
push
inc
jo
in
ficoms
xor
lds
jp
cli
sarb
orl
dec
and
inc
leave
cmp
cmp
lahf
ficoms
or
sub
adc
dec
add
loopne
pop
ljmp
xchg
ss
adc
adc
fcoml
ljmp
add
in
mov
insb
xor
sbb
push
cmp
lahf
nop
mov
add
jmpw
aam
lods
sub
lret
pusha
rorb
enter
sbb
add
pop
add
add
cld
cmp
jns
out
push
xchg
sub
xchg
les
sbb
cwtl
cli
iret
mov
jp
lock
divl
aas
test
pop
sbbb
movsb
and
mov
lret
jno
rcl
jp
mov
sub
lahf
mov
addb
loop
pusha
int3
gs
cli
cmpsl
mov
mov
mov
loop
push
adc
pushf
cmc
orb
inc
jl
and
iret
repz
push
sub
and
fisttpll
push
jns,pt
pop
dec
fistl
xchg
js
push
sbb
xor
in
push
xchg
jp
push
addr16
mov
or
adc
test
rcrb
lret
mov
gs
fdiv
fstpl
and
icebp
aad
imulb
adc
sbb
enter
mov
js
jecxz
nop
ret
cmp
into
repz
sbb
cmc
add
movsb
xor
xor
lret
xchg
sbb
aas
es
add
push
outsl
push
lahf
das
or
insl
mov
add
gs
testl
jno
sbb
add
add
cmp
sarl
insl
lea
mov
push
xchg
lret
xchg
iret
adc
inc
inc
call
pop
outsl
leave
sbb
xor
dec
or
jle
jb
pushf
add
cmp
mov
dec
repz
fnsave
pop
arpl
insl
gs
out
lcall
icebp
xchg
out
mov
icebp
xor
bound
cwtl
mov
stc
ljmp
sub
inc
addr16
in
rolb
cmp
and
into
cmpsb
or
cmpb
mov
mov
mov
imul
sub
in
cs
fwait
ss
es
fsubrp
jmp
mov
in
cs
in
popf
movsl
xchg
les
cwtl
push
fdivr
jae
mov
hlt
and
or
sbb
test
push
fdivrl
and
cli
hlt
gs
test
jo
sub
push
pop
popl
int3
push
clc
lea
and
daa
lahf
or
stos
jne
out
add
pop
add
add
imul
push
push
mov
dec
cmp
insb
scas
inc
or
push
cmp
ljmp
xchg
loop
lahf
in
push
mov
stos
mov
push
push
inc
adc
and
jp
mov
pop
in
fwait
mov
in
jno
and
aaa
shrb
rcrb
jno
mov
lock
out
add
cli
cs
xor
les
push
pop
jbe
jge
sbb
repz
ret
jp
add
in
xor
pop
mov
icebp
xchg
push
leave
xchg
stos
cli
int3
xchg
sub
cs
and
xchg
xor
xor
dec
xor
push
mov
adc
mov
and
mov
and
into
fmuls
lock
in
xchg
mov
addr16
xlat
orb
sub
insl
sbb
les
hlt
fs
ret
aad
xor
mov
and
mov
fstpl
int
add
pop
add
add
leave
xor
xor
cmpsl
adc
fstps
dec
sub
or
adc
sub
je
or
frstor
lcall
insb
jmp
repnz
hlt
cmp
sbb
rcpps
and
sub
add
icebp
dec
add
mov
movsl
and
and
rorl
out
sbb
ss
cmp
popa
sbb
pop
or
jmp
cli
rcrb
aam
jb
sub
in
mov
negb
add
es
jb
cmpsl
mov
aad
pusha
ss
add
scas
push
aam
xchg
adc
xchg
cld
shlb
mov
jne
mov
adc
xlat
arpl
push
loope
loopne
sbb
dec
mov
inc
shll
mov
jmp
in
insb
xor
pop
in
fs
cmp
add
jbe
push
inc
pop
jns
aas
lods
fmull
arpl
fs
aam
add
pop
add
add
mov
fdivl
push
ret
add
call
sbb
daa
in
and
dec
leave
lods
xchg
inc
movsl
adc
sbb
mov
mov
ror
xlat
mov
mov
jmp
cwtl
cmp
mov
inc
pop
mov
sbb
in
sbb
mov
xchg
imul
push
or
cwtl
fiadds
cwtl
imul
sar
iret
not
inc
xorl
jne
scas
mov
xchg
mov
push
jbe
out
inc
fldt
clc
iret
inc
mov
mov
shl
clc
add
pop
dec
xlat
lods
je
push
inc
adc
fistl
cmpsl
inc
xor
repz
cwtl
test
jle
loope
ljmp
imul
stc
push
outsl
pop
and
xorl
mov
cmp
insl
mov
fwait
lods
add
mov
std
and
add
jnp
mov
mov
mov
pop
add
add
jne
sub
adc
pop
push
pop
ljmp
jge
scas
gs
push
int
xor
add
push
sahf
loopne
pop
jno
mov
pop
push
jns
jnp
or
or
in
pop
mov
jns
cmpl
fidivl
adc
repz
fs
addr16
xchg
cmpsb
xor
pop
test
cltd
sbb
int3
lret
and
imul
cltd
fldt
sbb
sbb
xor
data16
in
add
xor
stos
push
ror
in
push
cmp
add
mov
jp
lret
rcrb
push
lock
dec
cwtl
mov
nop
mov
es
jb
lcall
sarb
std
dec
push
fisttps
mov
imul
dec
rcrb
adc
daa
dec
add
xlat
pop
xlat
jg
mov
adc
mov
loop
add
pop
add
add
sahf
cmc
xor
add
call
movsb
adc
leave
push
pop
je
inc
jno
rorb
sbb
aas
sub
lcall
call
sub
push
jbe
jno
push
inc
sub
pop
mov
fcoms
xchg
out
popa
sbb
stos
les
pop
dec
jg
bsf
rcrb
push
adc
rcll
cmpsl
mov
xorb
sub
test
insb
sarl
out
mov
dec
fimull
xchg
dec
pop
movsl
cwtl
data16
dec
leave
xor
cmp
imul
testb
leave
sub
xor
lret
jno
xchg
orl
std
or
xor
std
clc
shrl
jno
rorl
pop
orb
mov
dec
pop
addl
aam
push
jne
jp
sbb
pusha
pop
mov
sbb
add
dec
or
imul
add
fdiv
mov
pop
test
inc
jmp
add
add
xor
mov
dec
push
rclb
and
mov
pop
call
int
rolb
push
jns
mov
movsb
dec
pushf
mov
mov
cli
mov
lods
push
and
xchg
sbb
test
lock
inc
mov
and
std
dec
je
rolb
xor
sub
cld
pusha
je
jns
dec
negb
pushf
rcrl
pop
out
aas
test
sahf
stos
pushw
test
jo
in
call
int
ret
lea
mov
pop
fisubl
add
mov
add
jbe
or
addr16
and
mov
dec
testl
xchg
push
punpckhbw
xchg
arpl
std
mov
sbb
imul
js
mov
ja
and
sahf
sub
rcrb
stos
mov
cmpsl
mov
mov
and
scas
adc
scas
push
jns
jno
jl
cld
lret
test
mov
fadds
hlt
add
pop
add
add
sub
push
pop
add
or
aaa
xorl
addr16
cmp
loop
xchg
mov
loop
push
push
pushl
sub
out
mov
aas
pop
push
mov
cmp
xchg
leave
or
adc
ss
mov
inc
xchg
jle
ljmp
dec
lock
xlat
movsl
shr
jbe
sub
push
dec
cmpsb
or
cmp
cmc
cmp
push
adc
sbb
paddq
mov
push
fmul
out
insb
arpl
add
lods
sbb
ficoms
sub
sbb
aam
shll
push
xchg
shl
fdivr
aam
sbb
inc
lds
sbb
xor
dec
adc
adc
mov
mul
in
ja
push
data16
push
cld
xchg
adc
jmp
movsb
cli
stc
cmp
mov
stos
pop
xchg
ja
aad
pop
sbb
lods
das
lock
mov
test
jmp
imul
mov
jmp
jmp
pop
call
pop
add
add
jo
icebp
sbb
lock
loopne
aas
das
push
loope
xchg
rclb
das
jmp
popf
cmc
mov
popa
popf
mov
mov
add
nop
push
je
ficomps
psubq
ret
in
xchg
jp
inc
adc
push
xor
ss
lahf
or
xchg
jmp
xor
lret
jecxz
test
xchg
mov
pop
rorl
daa
loop
dec
clc
mov
dec
push
inc
es
movsb
sbb
in
push
inc
movswl
adc
jns
pop
stos
fwait
jbe
test
mov
push
dec
mov
jle
daa
inc
lds
and
adc
sbb
mov
movsb
sbbl
push
and
cmp
cs
outsl
mov
xor
in
mov
call
lret
stc
sub
aaa
sub
cmp
inc
push
push
cmc
test
test
fwait
in
push
adc
push
popa
add
pop
lods
pop
cli
cmc
mov
mov
add
pop
add
add
cltd
cmp
arpl
adc
cmp
xchg
mov
fnstenv
cltd
push
icebp
xor
dec
or
ret
and
add
sbb
arpl
filds
and
lahf
cwtl
mov
mov
sub
call
cltd
jnp
cmp
stc
or
rcl
push
stc
xchg
xor
adc
mov
inc
cmp
jbe
adc
add
mov
xor
pop
mov
fdivrp
outsl
into
call
stos
dec
mov
mov
fisubrs
sbb
mov
push
in
xor
repz
jns
inc
pop
sbb
das
mov
in
pop
lock
mov
cmp
shl
lds
adc
jae
shl
mov
mov
mov
mov
dec
mov
fdivr
loop
iret
xor
bound
jne
aad
push
inc
xor
and
aaa
test
push
in
push
add
das
stos
cltd
inc
popf
jae
out
pop
dec
add
xchg
mov
add
add
add
repnz
dec
sbb
xor
xor
push
cs
lods
push
in
pop
add
sahf
sub
xor
push
cmp
mov
cmpsb
or
sbb
mov
and
mov
bnd
jl
int
movsb
jmp
or
jb
pop
imul
or
add
mov
xor
adc
clc
int
pop
xchg
sbb
out
jp
lods
jae
and
and
cmpsl
sahf
in
xchg
sub
push
push
leave
lret
out
push
mov
rcrb
mov
pop
test
lods
push
push
sub
dec
bound
push
and
push
pusha
aas
cmpsb
and
sub
mov
or
sar
sub
mov
call
adc
sub
mov
pushf
sub
flds
mov
xor
pusha
push
movsb
adc
sub
lods
jne
mov
mov
insb
dec
sbb
pop
idivl
mov
pop
dec
xor
or
mov
xor
fidivrl
mov
add
aam
int
mov
mov
xchg
movsb
or
add
pop
add
add
jno
loop
dec
and
pop
cmp
imul
pop
mov
xor
pop
add
or
sub
sbb
out
lahf
or
jmp
or
lret
test
incl
imull
pushf
jmp
xor
imul
loopne
pop
es
rclb
and
movsb
sbb
nop
xchg
xchg
xchg
xor
js
enter
inc
xor
cmp
jne
mov
loopne
pop
xchg
push
mov
ds
cmpsl
push
inc
ss
add
aam
cmpl
lods
mov
dec
mov
push
icebp
pop
dec
fstpl
xchg
popf
xchg
popa
dec
insl
jl
inc
leave
movsl
jae
in
cmp
aas
sub
push
and
das
pop
cmp
jecxz
and
sbb
enter
rcr
or
dec
ret
fsubrl
xor
je
jge
cli
mov
popa
je
out
mov
popf
xor
loop
mov
inc
je
mov
add
add
arpl
addr16
add
mov
dec
outsl
dec
adc
add
pop
add
add
sbb
push
cmpsl
aas
xchg
push
fdivs
ja
das
not
xchg
lret
sbb
xchg
adc
adc
ja
dec
mov
add
lcall
js
daa
jns
loop
mov
ret
add
sbb
lcall
lods
inc
ljmp
loope
lds
popf
into
mov
sbb
ss
add
inc
cmp
and
test
inc
pop
sbb
cld
mov
fs
xchg
xchg
mov
mov
fcomps
ljmp
sahf
stos
sbb
sysenter
xchg
ja
lods
lret
add
popf
push
xchg
pusha
movsb
inc
ss
stos
test
out
leave
xor
or
movsb
mov
push
mov
mov
pop
jge
sub
rcll
pop
in
mov
mov
popf
jmp
subl
test
or
lock
dec
mov
pop
lods
sbb
out
adc
add
out
out
pushl
ja
shr
insl
fs
add
pop
add
add
ja
leave
or
sbb
adc
das
dec
loop
ret
stos
xchg
fwait
bound
int3
cmp
data16
out
dec
mov
cmp
cmpsl
jmp
outsb
or
pop
xchg
loopne
fisubl
test
rcrl
daa
push
fistps
pusha
sub
sub
mov
mov
imul
jl
mov
sub
and
mov
mov
sbb
mov
rcrb
loop
xor
sbb
adc
add
pop
jmp
pop
pop
mov
xchg
push
fcmovne
inc
fwait
dec
int3
add
test
clc
mov
mov
cmp
outsb
lcall
add
call
pop
mov
aas
sub
addl
rcrl
xor
push
shlb
mov
xor
inc
notl
mov
add
push
scas
decb
insl
mov
add
add
add
imul
add
jge
mov
pop
daa
cld
mov
rorl
fmull
negb
lahf
lahf
push
test
sub
adc
aad
outsl
imul
mov
faddl
out
insl
jmp
out
mov
push
je,pn
cmpb
lahf
push
jmp
mov
into
repnz
jg
inc
sbb
jmp
out
push
jp,pt
shll
fistl
loopne
mov
lea
pop
scas
mov
push
popa
outsb
cmp
mov
jne
push
loope
in
pop
cmp
call
test
xlat
sarb
loop
mov
subl
mov
xor
sub
shll
push
mov
nop
ficoml
loop
lcall
adc
pop
clc
cmp
lret
and
sbb
std
cmc
xchg
ror
inc
lea
test
xchg
out
fs
xchg
addr16
add
aaa
xchg
and
movsl
mov
mov
mov
lds
add
add
add
and
aas
icebp
lret
repz
sbb
and
dec
movsl
gs
mov
stos
cmpsl
sbb
shrb
mov
inc
in
xchg
std
xchg
add
push
cwtl
jo
cld
pop
mov
lcall
mov
mov
loopne
push
xchg
sub
and
xchg
lods
pop
pop
push
cltd
xor
lret
mov
lahf
pusha
pop
adc
out
shr
inc
movl
pop
ds
inc
inc
pop
inc
fwait
push
adc
push
out
in
pop
or
pop
add
add
cmpsl
fldl
and
xor
in
stc
dec
mov
mov
push
mov
mov
sbb
das
mov
mov
ljmp
outsb
ljmp
and
sub
movsl
inc
faddl
push
sbb
in
inc
jmp
aam
inc
add
insb
ja
adc
ficoms
add
and
subl
fdivl
mov
shrl
add
pop
add
add
cmp
les
push
and
dec
aad
dec
into
iret
ret
dec
and
pushf
in
test
movsb
jne
dec
inc
mov
and
es
ja
push
fwait
jne
add
dec
lds
fwait
in
ss
addr16
cltd
icebp
movsl
mov
mov
lahf
dec
xchg
jno
ret
fldt
sbb
push
test
loope
rcrl
inc
aad
sahf
inc
test
imul
addl
or
mov
and
mov
adc
xor
int3
jle
mov
bound
pop
das
push
ljmp
mov
popa
or
push
jns
or
jecxz
fmuls
xchg
adc
imul
lods
leave
je
adc
gs
leave
sub
in
test
xchg
xchg
js
fidivs
jmp
jo
dec
cmpl
add
mov
mov
xchg
mov
incl
add
add
add
xchg
sub
rcrl
push
pop
sub
leave
cmpsb
add
int
or
inc
es
stos
fstps
mov
or
mov
inc
les
xchg
pop
data16
and
hlt
add
pop
dec
add
or
cld
push
sbb
mov
in
mov
sbb
push
pop
pushf
out
dec
push
je
push
mov
pop
mov
mov
and
aaa
ss
or
adc
int3
push
inc
movzbl
inc
mov
sub
adc
outsb
loopne
clc
int3
pop
in
mov
mov
aam
pop
mov
add
cmp
jne
and
jno
rorl
ffreep
stos
outsb
aad
xor
insl
jle
ljmp
inc
cmp
dec
or
adcl
dec
xor
lret
sub
cs
sub
jo
mov
in
mov
clc
iret
fdivrs
dec
stos
subl
push
add
mov
xor
cmp
add
add
sub
or
sbb
incb
mov
jp
repz
cmpsb
sahf
daa
dec
js
movsb
aas
pop
pop
dec
xor
xchg
sbb
adc
adc
gs
jecxz
and
addr16
jbe
pop
dec
cld
lods
push
dec
pop
movsb
xor
lods
pop
or
and
sub
leave
add
pop
sub
mov
inc
mov
insb
add
testl
mov
xchg
test
mov
mov
ljmp
int3
adc
and
cmp
sbb
loopne
or
sti
insb
outsl
jecxz
xor
adc
jle
arpl
mov
push
push
call
sub
dec
inc
fisttpll
sbb
mov
sub
mov
dec
sub
dec
pop
dec
in
dec
das
or
adc
pop
sbb
and
pusha
sbb
fsts
sub
add
xchg
enter
push
fisttps
test
jno
inc
add
add
add
add
call
xor
cltd
mov
or
inc
mov
dec
push
jge
mov
sub
ficompl
sbb
ret
cwtl
and
inc
xor
push
in
lret
loopne
xor
or
fildll
sub
pop
or
ja
push
cmp
cmp
fistl
pop
subb
mov
pop
pop
cmp
inc
shr
lea
push
imul
jne
jp
or
dec
or
cmpsl
out
sbb
xchg
loope
cmp
repz
and
sbb
lret
mov
mov
pop
push
rolb
lret
out
xlat
testl
mov
cmp
fstps
cmp
test
gs
push
in
sbb
in
cmp
push
xor
add
push
in
lock
sti
les
dec
jo
addb
xor
pop
mov
popf
pusha
out
cwtl
xor
push
add
into
fwait
cmc
pop
sub
dec
add
add
add
add
repnz
cwtl
and
mov
inc
dec
icebp
andl
test
fidivrl
icebp
xor
mov
jnp
ret
dec
and
lea
loop
jbe
call
adc
inc
xor
sbb
pop
dec
or
mov
test
adc
xchg
cli
mov
inc
fwait
inc
iret
loop
jmp
jo
dec
pop
inc
push
enter
or
into
dec
in
dec
aas
ljmp
adc
mov
mov
xchg
jns
scas
jo
cmpltps
lahf
pop
scas
sub
fbstp
in
xchg
dec
shrb
sbb
movsl
ds
add
repnz
and
mov
inc
cld
std
addr16
fists
shlb
dec
test
inc
aas
ljmp
cmp
xor
jl
outsb
hlt
and
and
push
sub
int
roll
orb
add
xor
mov
pop
mov
jne
in
add
add
add
add
mov
mov
stc
inc
ror
jmp
inc
xchg
imul
cmp
shr
mov
mov
int3
and
jecxz
fbstp
and
cmp
dec
push
inc
push
adc
dec
jmp
inc
insb
dec
mov
mov
shl
pop
mov
xchg
sbb
popf
adc
in
pop
xchg
outsb
or
and
cli
orl
mov
inc
jbe
push
or
cltd
lea
lods
or
and
mov
fcmovb
cltd
ljmp
repz
andl
push
cmc
mov
fsubrs
adc
xor
dec
mov
pop
arpl
push
push
int3
sub
and
lea
imul
push
and
orl
fists
test
popa
aad
pusha
push
cltd
add
cmp
in
xchg
out
jp
sti
inc
out
aas
mov
scas
adc
add
add
add
add
dec
mov
mov
jbe
mov
xor
adc
xchg
mov
test
jb
iret
call
icebp
pop
xchg
mov
xchg
adc
gs
adc
mov
fidivrl
push
or
inc
push
lea
incl
int
imul
xchg
cmc
xchg
push
repz
das
lret
pop
push
imul
inc
test
gs
and
and
stos
popa
xchg
std
in
add
jno
jne
es
mov
ret
sahf
arpl
jle
jge
test
setl
xchg
add
imull
cwtl
xchg
dec
mov
inc
mov
pop
outsb
das
rcll
jp
pop
mov
divb
stc
mov
sbb
sub
call
dec
je
int3
addr16
xchg
adc
lret
pop
xchg
push
push
leave
mov
pop
mov
pop
loope
add
bnd
jl
movsb
mov
pusha
add
add
popf
pop
push
dec
jb
and
xchg
fdiv
loop
mov
mov
inc
adc
cmp
push
mov
adc
cmp
pop
les
sti
inc
sbb
mov
fnstenv
jae
lock
sbb
in
jmp
xor
aaa
and
icebp
insb
mov
sub
mov
dec
stos
xchg
rcrl
adc
pop
and
test
mov
mov
ja
pop
ret
je
cmc
cmp
aas
cmp
fs
mov
movsl
or
test
xor
add
mov
data16
pushf
inc
loopne
mov
adc
gs
pop
pusha
jae
mov
fldcw
ds
dec
jmp
mov
adc
and
bound
xor
mov
test
sbb
mov
adc
lock
sbb
in
out
ja
fists
pop
outsb
and
add
pop
add
add
dec
xchg
cmpsl
fs
sbbb
mov
cmc
ret
icebp
mov
push
out
imul
outsl
add
mov
mov
int3
pop
mov
aaa
movsb
xor
mov
adc
insl
jg
mov
repnz
push
inc
mov
lcall
leave
dec
mov
xor
js
insl
nop
adc
lcall
out
rorl
jb
aas
xchg
pop
divl
xchg
or
push
xchg
movsb
fmuls
xchg
dec
jo
or
xchg
and
xor
mov
andl
cmp
test
mov
out
jae
push
xor
arpl
mov
bound
xchg
dec
pushf
in
decl
adc
lret
xorl
cltd
or
out
and
in
popa
cmp
xor
jmp
int
mov
push
aad
in
cwtl
imul
add
add
pop
in
daa
jle
add
xor
outsb
pop
add
pop
add
add
shl
dec
rcrl
lret
cld
sub
add
js
add
pop
xchg
add
mov
pop
pop
jl
test
sbb
fidivl
jle
call
adc
xchg
mov
inc
jg
inc
pop
aaa
popf
add
mov
cmpsb
xor
mov
movsl
dec
push
dec
ucomiss
in
adc
xor
xchg
fcomps
jecxz
in
xor
rorb
daa
push
dec
jbe
lcall
add
pop
pusha
ljmp
inc
fnstenvs
sub
rcr
adcl
xchg
popf
cmpb
insl
sahf
xor
pop
xchg
out
xor
aas
mov
je
lea
out
pop
and
pop
subl
mov
pop
call
scas
fchs
jne
ficoml
sarb
add
and
fsts
mov
shlb
mov
jg
idivl
mov
adc
add
pop
add
add
loop
mov
mov
add
jmp
mov
sbb
fldt
inc
arpl
mov
adc
pop
mov
pop
or
push
fwait
jns
sbb
inc
test
bound
mov
and
sti
adc
jmp
pop
and
lar
adc
cmp
xchg
loop
aaa
mov
aam
or
icebp
mov
dec
jo
jo
test
jnp
xchg
jb
lcall
nop
cmp
lods
inc
sub
push
jge
jmp
add
lds
lret
std
push
lods
mov
nop
jle
pushf
sbb
pop
jg
jl
lahf
roll
sub
pop
sub
pop
ja
sbb
movsl
dec
mov
popa
orl
ss
jmp
lahf
lock
mov
incb
enter
lods
int
and
imul
inc
pop
fwait
mov
nop
lds
ret
and
xchg
add
push
xor
cmp
sti
jg
les
mov
pop
add
add
mov
dec
popl
mov
pop
call
add
call
mov
push
clc
sti
icebp
xchg
xchg
or
sahf
mov
jl
inc
cmp
lods
cmp
and
jnp
fcomps
sbb
adc
pop
mov
bound
aas
fstp
mov
outsl
inc
inc
ja
out
inc
jb
jle
les
divb
aad
lcall
adc
lock
and
xchg
cmpsl
insl
cmp
shlb
mov
fsts
dec
pop
jle
int
or
scas
ret
mov
dec
sbb
or
loope
rorb
mov
jne
xchg
cmc
pop
push
leave
test
movsl
mov
jge
das
mov
mov
jl
cltd
and
arpl
iret
lcall
jmp
xchg
or
xor
jo,pn
inc
and
scas
aam
jnp
fnsave
xchg
mulb
and
lahf
orl
add
add
add
dec
dec
and
mov
lods
jns
pop
imul
or
sub
pop
js
add
fiaddl
push
stos
add
sti
cltd
or
mov
popa
add
or
cmp
lret
push
mov
fwait
dec
sub
test
loopne
notl
lahf
std
jns
mov
enter
sbb
pop
movsl
xchg
xchg
adc
fildl
orl
and
mov
jo
jecxz
cmp
fadds
fs
inc
sbb
push
inc
cmp
mov
xchg
inc
les
rcl
dec
xor
pusha
pop
inc
fsub
or
mov
jns
jne
jge
std
les
jle
inc
out
mov
jne
mov
jecxz
inc
in
in
fnstsw
mov
jle
xchg
inc
mov
push
or
mov
iret
xchg
xor
pop
xchg
xchg
cmpsb
push
mov
dec
xchg
stos
xor
movsb
cmp
mov
add
outsl
mov
inc
loop
dec
incb
mov
add
pop
add
add
mov
xorl
pop
sbb
lret
int3
and
lea
and
fildll
sbb
jecxz
movsb
mov
into
cmp
sarl
jl
pop
xorl
inc
es
out
or
ds
movsl
adc
sarl
push
add
mov
sub
hlt
xchg
sti
cwtl
loope
in
xchg
cmp
mov
and
jno
xchg
jg
mov
shlb
repz
rcll
or
imul
and
dec
sbb
test
xor
rcll
cmp
or
lea
add
pop
loope
dec
rorl
sbb
pusha
icebp
and
pop
inc
pop
mov
jbe
movsl
icebp
inc
punpckldq
xchg
mov
loope
sub
icebp
test
push
stos
sahf
shlb
dec
pop
adc
fsubl
popf
mov
add
jmp
fcmovu
push
mov
xchg
or
add
add
add
cmc
ljmp
mov
sbb
cmpsb
inc
out
int
in
and
or
mov
push
xchg
xchg
or
cmpsb
or
stos
arpl
mov
cmp
and
inc
push
push
jmp
xchg
xchg
sbbb
ffree
mov
inc
pusha
sub
subl
sti
jae
mov
mov
rorl
dec
sub
xchg
and
test
sub
xchg
stos
add
sbb
xor
adc
jmp
inc
das
jmp
xchg
jbe
aad
scas
push
xchg
fnstcw
decb
xchg
hlt
test
mov
and
dec
add
xor
and
test
adc
jbe
cmc
addr16
ret
test
movsl
mov
jg
negl
jle
add
xor
negl
mov
das
cwtl
or
add
xor
imul
shll
push
mov
std
sbb
test
and
dec
or
cmpb
les
out
fbstp
ficoml
sub
inc
pop
jo
mov
mov
ljmpw
ja
dec
sti
or
ja
sbb
imul
stc
pop
add
mov
outsb
outsb
std
pop
push
mov
imul
dec
pusha
and
fidivrl
xchg
xlat
imul
test
dec
and
cmp
mov
sarl
pop
or
sbb
mov
outsl
adc
out
pop
jns
pop
stc
push
cmp
icebp
out
rorb
in
stos
int
les
mov
dec
mov
adcl
dec
jecxz
mov
mov
les
xor
pop
cmp
dec
jge
pop
out
sub
mov
jnp
fdivrs
dec
cli
inc
jg
int
cs
ds
dec
repz
push
add
pop
add
add
fwait
sahf
xorb
mov
mov
in
or
pop
sbb
jp
jle
and
sub
and
xor
pop
dec
jmp
clc
sbb
cmp
add
and
mov
sub
sbb
or
push
and
xchg
in
hlt
jb
mov
jns
or
scas
repnz
add
cmpsb
mov
mov
cltd
outsl
out
mov
inc
fs
inc
icebp
test
cld
mov
js
adc
leave
push
popa
xchg
jmp
pop
es
dec
cmp
scas
pmullw
pusha
jg
lret
icebp
pop
jmp
mov
push
movsb
sub
cmc
sub
pop
mov
and
mov
xorl
sub
pop
xchg
mov
xor
xorl
jbe
into
call
sub
push
in
scas
jnp
xor
or
fisttps
popa
cwtl
into
cmp
dec
add
xchg
std
cmp
jle
fistps
push
jnp
cmpsb
sgdtl
pop
add
add
mov
mov
xor
js
mov
push
and
jle
add
add
cmp
xchg
testb
pop
jmp
loopne
adc
insl
outsb
lret
stos
mov
aaa
js
scas
imul
adc
cmp
dec
sub
add
xchg
lcall
loopne
andb
cmp
sbb
les
pop
xlat
or
jo
or
mov
loope
aaa
test
sti
lds
xor
pop
dec
push
ret
fsubrl
ret
add
inc
pushf
cmp
je
add
fwait
pop
dec
out
or
data16
movsl
push
inc
ficomps
dec
pop
xor
lahf
push
pop
fwait
or
adc
stos
mov
insb
push
sarb
cld
daa
mov
lods
outsb
jecxz
jle
fiadds
mov
xor
les
jecxz
jb
inc
dec
mov
into
add
out
data16
rolb
xchg
pop
lds
xlat
fimull
xchg
add
add
add
ror
in
cmp
dec
ja
in
out
lcall
xchg
add
adc
test
add
mov
inc
mov
aas
imul
or
add
jge
out
mov
add
xorb
push
adc
sub
xor
int3
sbb
ret
cmp
fbld
pop
cmp
shll
gs
jnp
cmp
ljmp
mov
addb
push
sub
jo
iret
scas
jecxz
cld
jns
aaa
xor
or
fidivrs
into
push
mov
loope
insb
xchg
fwait
sbb
icebp
xchg
dec
adc
or
adcl
mov
out
jmp
rorb
jo
fstpt
mov
push
pop
xor
xor
scas
mov
dec
mov
jg
ss
in
jp
shlb
daa
pop
inc
inc
fdivs
fcoml
int3
add
sub
iret
outsb
jmp
in
pop
outsl
imul
add
pop
add
add
pop
outsb
cmp
add
push
std
cmp
mov
pop
push
aas
mov
sbb
rolb
minps
movsb
fldcw
dec
jmp
cwtl
mov
mov
and
hlt
xlat
faddp
xchg
push
sub
sbb
test
jecxz
sbb
gs
repnz
inc
mov
pop
push
mov
shrb
xchg
and
push
loop
and
stos
xchg
into
pop
ja
mov
sbb
jns
pop
das
jmp
in
sub
add
cltd
inc
xchg
leave
roll
mov
iret
xor
or
push
inc
push
jb
mov
and
push
std
mov
sub
out
movntps
pop
cmpsb
loop
cld
xchg
mov
inc
lahf
in
adc
or
out
fwait
cmp
xchg
jle
add
popa
push
test
jae
jle
sti
lds
mov
or
arpl
inc
fsubrs
pop
mov
sar
loop
or
add
std
sbb
stc
cld
or
sub
add
pop
add
add
adc
xor
inc
push
inc
push
sub
pusha
lret
enter
push
add
dec
pop
mov
vminss
test
call
xchg
or
inc
test
out
mov
dec
pushf
inc
scas
add
hlt
fcmovnb
cmpsl
mov
sub
inc
test
aam
test
jne
adc
add
sarl
mov
hlt
jl
lods
lds
lods
push
add
mov
pusha
dec
ret
call
aam
adc
xor
sbb
fadds
inc
jg,pn
xor
in
sub
and
aad
iret
jb
mov
sub
imul
sub
sub
push
sti
test
sbb
xor
adc
insl
add
mov
movsb
jp
inc
push
sarl
ljmp
mov
mov
cli
jnp
push
or
push
cmpsl
mov
and
jae
mov
clc
loope
add
pop
test
scas
repz
cld
arpl
shll
adc
add
add
add
addl
loope
or
jle
sub
cs
inc
jo
scas
push
pop
pop
push
add
pop
push
sub
cmp
ret
and
sbb
aad
sbb
or
addr16
or
fiaddl
add
adc
shlb
fs
fsts
lret
cmpsb
mov
fs
dec
cmc
xlat
inc
scas
imulb
push
add
imul
in
xor
aas
pop
nop
pop
xchg
pop
das
cmc
aaa
dec
incl
lods
push
jl
movsb
jge
dec
adc
call
and
call
nop
je
test
stos
rcl
daa
jecxz
nop
sub
repz
push
jp
lcall
imul
aas
les
dec
icebp
sub
je
jmp
jno
lods
push
jl
adc
sbb
outsl
insl
pop
mov
je
and
fidivs
mov
jns
sar
pop
aaa
jae
fists
add
dec
pushl
out
cmp
leave
adc
add
add
add
fmul
dec
out
mov
cmpsb
pop
fmuls
into
pusha
inc
push
lea
lods
xchg
in
adc
xchg
rcr
push
dec
repz
push
or
pushf
test
and
sbb
adc
xor
imul
jl
nop
movsb
test
xchg
jo
jno
cmpsl
rcrl
pushf
out
lcall
push
mov
jbe
hlt
jnp
inc
pop
imul
movsb
ljmp
popa
insl
sub
cs
fldcw
leave
rcrl
aaa
int3
and
aam
bound
pop
mov
fwait
test
fdivr
fnsave
cmc
adc
xchg
xor
pop
push
add
repz
pop
jbe
and
adc
das
stos
lret
sahf
push
shrb
or
push
add
das
loop
rcrb
adc
push
out
ds
test
outsl
jo
xor
pop
sub
inc
ja
pop
aas
pop
jmp
mov
rclb
add
movsb
sahf
loop
mov
mov
jns
decb
adc
das
enter
scas
aas
adc
test
cwtl
vpperm
dec
lods
xchg
inc
pusha
pop
xchg
add
lcall
pop
sub
jne
jle
cmp
add
sbb
icebp
aad
pop
loop
int
ret
dec
mov
clc
inc
sbb
jg
sub
xchg
aaa
call
sub
push
jp
std
xor
xchg
push
jl
cmp
lret
mov
rorb
add
test
and
push
fsubl
and
out
int3
mov
and
xchg
jl
xchg
je
pop
aaa
cmp
cmp
daa
xchg
aam
mov
stos
fnstenv
and
adcw
shrb
mov
in
clc
lock
fs
sti
ss
jl
cmp
sub
enter
add
fs
sti
insb
pusha
add
add
xchg
jae
ja
div
fisttpll
ljmp
add
add
push
xchg
sbbl
dec
mov
jne
and
stos
add
int
clc
mov
je
or
out
dec
lcall
xchg
and
lods
dec
mov
xor
pushf
mov
adc
push
daa
xor
pop
lcall
inc
mov
sbb
inc
jae
jge
cmp
frstor
mov
enter
pop
pop
enter
dec
lea
rcl
clc
jnp
cmp
out
lmsw
icebp
int
roll
js
scas
jp
cld
push
shl
fsubs
in
repnz
mov
jo
mov
and
mov
cmp
dec
jns
fstps
cmp
push
in
jae
mov
ret
pop
mov
sbb
out
push
nop
lods
cmc
pop
push
imul
pop
in
lahf
shl
push
xor
mov
inc
inc
pop
or
fs
cmpsl
dec
push
addl
xor
cli
std
jg
mov
push
hlt
ficoms
add
pop
add
add
sahf
cmp
pop
mov
xor
andb
cwtl
insb
mov
testb
pop
adc
sbb
aad
insl
mov
cmc
jb
lock
stc
jg
sbb
xchg
dec
adc
je
mov
lea
mov
fsubrs
cli
ja
les
ds
lock
mov
mov
pop
and
mov
popf
sbb
rcr
insl
mov
cmpsb
and
push
mov
sbbl
enter
push
mov
push
add
adc
daa
push
popf
cwtl
cmp
jo
aam
xor
mov
jl
mov
inc
mov
notl
sub
dec
imul
jp
or
dec
orl
cmp
xchg
movaps
mov
xchg
push
ret
cmp
sbb
xchg
adc
xor
cs
es
and
add
add
mov
std
incl
mov
jnp
in
add
pop
add
add
mov
ja
xchg
test
into
fisubrs
divb
mov
inc
je
or
xlat
dec
fstpl
xor
mov
mov
xor
mov
test
mov
mov
out
dec
cmpb
mulb
sbb
fldcw
inc
cwtd
rcrl
adc
mov
push
pop
dec
sarb
pop
imul
or
mov
mov
sub
popf
and
ret
jp
iret
push
dec
in
jp
jp
sub
loope
mov
adc
es
lods
test
int3
out
sub
cmp
and
xchg
mov
jp
adc
xor
mov
fldl
loopne
adc
pop
sbb
push
mov
xor
pop
insl
test
or
jns
outsb
xchg
jl
outsl
or
sahf
jg
int
lods
outsb
mov
nop
xchg
sbb
adc
add
es
jg
pop
pop
mov
cmp
in
sbb
add
add
add
push
icebp
movsl
cmpsl
lret
dec
hlt
push
ljmp
sbb
inc
pop
mov
popa
mov
test
jae
lcall
push
pop
xor
ja
xorb
xor
sub
sbb
mov
xor
imul
add
sti
cwtl
in
xchg
xorl
fnsave
adc
scas
das
mov
sbb
xor
jle
pop
call
jp
xchg
mov
sbb
and
call
mov
daa
dec
lret
js
pop
push
out
push
js
or
mov
push
test
out
cmp
js
jbe
push
jp
sub
push
ljmp
stos
mov
or
jmp
fsubrs
push
movsl
jl
mov
ud1
js
add
fyl2xp1
repnz
xor
sbb
jmp
aam
sbb
pusha
jp
sub
std
add
or
mov
add
xor
pop
add
add
push
xlat
imul
jp
shll
mov
and
push
add
jae
fisubl
shll
push
mov
dec
jb
pushf
mov
sbb
xorl
aas
idivl
sti
movsl
sub
xor
jnp
push
cli
sbb
xchg
mov
stos
adc
jae
mov
xlat
push
addr16
jecxz
leave
in
and
out
jp
add
mov
scas
mov
jb
sbb
divl
jne
sub
xlat
dec
lods
jne
cmp
daa
and
pop
sub
cwtl
mov
mov
fwait
outsb
mov
repz
daa
stos
call
adc
test
push
loope
int
mov
xchg
dec
repnz
mov
mov
sahf
sti
loop
test
gs
and
popa
sub
and
jg
mov
xchg
push
loopne
insl
adc
sub
add
stc
lods
xor
xor
loop
lcall
pop
add
add
out
push
arpl
punpckldq
jnp
fdivr
fisttpl
in
sbb
loopne
imul
in
js
or
add
mov
test
pop
sub
and
jno
push
lods
shl
mov
cmp
jl
enter
shlb
lcall
cs
push
mov
xchg
lods
nop
out
shl
aas
adc
mov
ds
imul
pop
ret
or
out
fdivrl
xor
mov
dec
mov
sbb
mov
out
jne
mov
fsubrp
dec
std
lahf
or
adc
pop
pusha
mov
sbb
mov
mov
mov
lea
sbb
pop
test
fimuls
push
lods
sti
add
call
shr
in
xchg
cmp
ficoms
stos
sbb
jmp
ljmp
push
add
add
fwait
aaa
call
pop
add
loopne
push
jg
push
divb
stc
mov
mov
jle
push
cmp
insb
xchg
nop
inc
pop
data16
mov
rclb
out
mov
jl
xchg
pop
lods
aaa
fistpll
imul
pop
mov
ret
movsl
cmp
std
popa
dec
stos
cwtl
into
fmuls
cmp
shll
loop
mov
sbb
cmp
push
pop
mov
into
jnp
rcr
cmp
filds
mov
fidivrs
and
xchg
cmp
in
jo
dec
neg
cmp
jae
sbbl
into
roll
testl
repz
out
rcl
pop
out
jle
lods
jb
xchg
btr
sub
inc
decl
mov
push
ds
jo
bound
xchg
loopne
enter
jns
inc
or
in
and
cs
add
in
out
arpl
aas
xor
popa
xchg
or
add
pop
add
add
lds
and
fdivrs
cmp
out
lahf
push
arpl
cwtl
loop
xchg
iret
jg
mov
sub
push
lret
inc
cltd
sbb
stos
dec
xchg
add
fcmovnu
sub
mov
add
test
js
mov
fcmovne
scas
dec
fildll
out
adc
mov
xor
xchg
cltd
decl
lock
arpl
jae
into
pushf
and
test
hlt
mov
iret
mov
icebp
push
rcrl
add
mov
mov
xor
inc
add
xor
int3
mov
push
inc
adc
fisubs
test
mov
in
mov
pop
xchg
mov
mov
add
add
jecxz
mov
and
dec
out
dec
testb
cmp
adc
cmp
aaa
push
ljmp
ljmp
rorb
add
dec
or
out
cld
mov
out
gs
pop
add
add
jno
inc
jbe
fdivrl
imul
xor
mov
cld
dec
xchg
xchg
jge
sub
fnsave
fs
arpl
les
dec
jle
sbb
adc
movsl
or
cmp
lret
bound
icebp
loopne
jle
ds
insb
pop
push
add
jne,pt
cmpl
push
imul
aad
or
mov
push
xchg
xchg
add
xchg
cmp
sbb
pop
scas
sbb
cmp
insl
ljmp
mov
imul
cli
in
push
add
add
dec
ljmp
xchg
test
add
imul
xchg
adc
sbb
int3
adc
ficoml
orl
xor
jo
pop
ds
pop
push
push
ss
negb
scas
cmp
rcrb
leave
xchg
push
push
pop
sar
and
push
xor
js
and
dec
push
jo
lea
push
add
in
add
cmp
out
lock
pop
rcrb
add
add
add
rcl
leave
mov
sbbb
mov
add
rol
aam
filds
loop
jbe
jbe
xor
lcall
push
push
int
inc
add
scas
dec
cmp
jnp
xor
mov
push
and
dec
fisubrs
push
push
and
push
adc
sbb
std
loope
pusha
dec
jb
scas
cmp
clc
mov
and
sub
idiv
lods
jbe
push
jp,pt
cs
pop
addr16
rcr
jecxz
fldcw
jbe
movsl
sub
idiv
sahf
adc
sub
adc
stos
dec
movsl
repnz
jg
filds
daa
and
or
dec
fdivrl
push
ljmp
push
push
xlat
and
mov
nop
inc
cmp
pop
into
les
int
into
jle
jb
call
insl
mov
dec
add
nop
fnstcw
adc
icebp
jae
or
dec
or
test
sbb
cmp
rolb
cmp
add
pop
add
add
sbb
sbb
rcr
in
les
data16
mov
fmuls
in
ja
loopne
int3
flds
cwtl
cli
pop
xchg
icebp
adc
xlat
mov
ljmp
or
repnz
mov
rorb
and
iret
inc
dec
push
add
es
or
fistpll
jecxz
mov
mov
pop
or
jg
out
repz
fldcw
pop
popf
and
incl
ljmp
inc
ljmp
gs
and
and
lret
fsubrs
mov
cld
sar
adc
mov
mov
iret
into
or
xlat
xchg
in
bound
xorb
subl
push
sbb
pop
push
jb
inc
ja
mov
mov
pop
popa
mov
xor
lock
add
outsl
dec
imul
pop
add
stos
inc
and
incl
push
lret
dec
jg
lahf
cmp
inc
fwait
mov
xchg
sub
push
xor
add
jg
cld
fcmovbe
out
pop
jmp
pop
add
add
not
mov
jle
je
xor
jbe
les
xor
fcoms
sbb
ret
nop
sbb
inc
fidivl
in
rcrl
push
shll
xor
cld
pop
fdivp
addr16
movsb
dec
sarl
sbbb
jl
fisubs
push
lods
int
jl
mov
fmull
lret
clc
repz
lret
mov
sti
mov
addl
fs
repnz
pop
scas
cmp
scas
xchg
aas
add
adcl
jp
cmp
nop
mov
add
cmpl
xor
lea
shrl
insl
pop
jg
test
and
movsb
pop
call
add
xor
into
je
cmpsb
outsl
mov
loop
and
arpl
sbb
out
daa
imul
add
add
mov
iret
mov
xor
add
pop
add
add
bound
lods
pop
outsb
inc
mov
loop
iret
out
sahf
in
ljmp
jp
aas
ret
rclb
jbe
out
lret
xchg
xor
push
popf
cmp
js
sahf
das
roll
cltd
xchg
flds
es
mov
xor
sub
mov
jp
xor
outsb
mov
inc
cmpb
push
jae
repz
aaa
movsl
adc
mov
xlat
test
push
aaa
mov
faddp
loop
jecxz
sub
call
push
test
js
stos
sbb
sbb
xor
rcll
add
test
mov
arpl
sti
sahf
xchg
xor
adc
inc
xor
jbe
dec
call
cmpsl
add
adcb
push
test
mov
filds
add
xor
sbb
ror
rcrl
pop
rcrb
mov
mov
sub
or
lahf
and
cmpsb
das
movsl
shll
add
pop
add
add
push
daa
jb
add
jae
mov
jg
ret
sbb
mov
jno
push
pop
mov
popa
mov
cmp
lahf
testb
lcall
das
enter
mov
inc
scas
int
mov
mov
inc
into
mov
fwait
arpl
dec
add
jne
pop
insb
sbb
outsb
scas
xor
dec
xor
add
jae
inc
dec
jl
mov
adc
in
pop
data16
or
mov
lods
orl
andl
sbb
pop
insl
test
test
xchg
stc
clc
dec
add
pop
and
loope
and
imul
fs
fisttpl
mov
ds
lahf
cmp
or
out
sbb
cmc
sarl
scas
fadds
sbb
pop
mov
leave
push
push
pop
iret
and
shlb
cli
clc
cli
clc
sarb
js
fsubs
add
add
cmc
xchg
and
sub
mov
sbb
xor
mov
xlat
aam
or
fildll
aas
sti
out
int
into
inc
mov
dec
popf
jmp
pusha
insl
push
xchg
push
pop
dec
jnp
sbb
outsb
fcmove
jecxz
imul
fadds
call
inc
push
fists
dec
daa
mov
jmp
mov
aaa
imul
adc
scas
fcomps
test
outsb
xchg
mov
ja
pop
imul
lret
jno
jbe
inc
repnz
or
nop
push
inc
sub
orl
fsubrp
lret
push
dec
aaa
adc
push
sti
andl
enter
sbb
aam
inc
lcall
or
pop
mov
inc
arpl
dec
xchg
cltd
mov
int3
mov
ret
lods
jno
fnstsw
insb
divb
mov
dec
int
fsubrs
mov
add
jnp
out
add
push
push
mov
add
pop
add
add
sub
jnp
mov
adc
mov
pushf
stos
xor
mov
jmp
dec
pop
cmp
push
ret
ja
adc
imul
ss
dec
dec
fiaddl
mov
push
out
inc
push
scas
es
sub
out
mov
test
insb
and
clc
fidivrs
in
push
addr16
test
push
fcoms
insb
mov
adc
pop
or
jne
test
mov
mov
mov
repnz
xor
jg
ljmp
or
push
sub
nop
dec
scas
and
or
xor
rcll
jecxz
sbb
mov
jbe
dec
arpl
mov
or
jmp
cmp
aad
aam
fcmove
jmp
xlat
or
xchg
xchg
ficompl
sarb
jecxz
fs
es
data16
pop
sub
daa
mov
daa
add
pop
add
add
push
mov
sbb
jl
fdivr
and
roll
fistpll
lock
dec
fwait
sbb
imul
fidivrs
test
movsb
mov
mov
je
loope
xor
pop
jb
movsb
push
pop
fstps
sbb
ret
pop
mov
adc
jbe
push
add
mov
and
pop
xchg
mov
insl
pcmpgtb
jecxz
ja
fisttps
lret
ljmp
out
mov
aam
int
dec
insl
jae
xchg
mov
sbb
icebp
mov
jbe
stos
ljmp
xchg
mov
xlat
dec
shll
sbb
cmpsl
sahf
test
stc
out
fmuls
sub
jmp
out
xor
repz
jle
int
testl
cmp
lods
daa
cmpsb
jle
insl
rcrb
and
xorl
pushf
or
nop
mov
test
add
dec
mov
imul
clc
cmpsb
repnz
popa
dec
sub
add
add
add
fs
cmp
das
push
divl
add
add
shlb
adc
cwtl
roll
jmp
lods
push
cwtl
cmpl
jp
fldl
xor
jg
gs
aad
pop
call
cmp
stos
and
imull
xor
lea
notrack
ret
mov
faddl
push
jp
jno
mov
icebp
es
jno
data16
mov
mov
inc
inc
mov
cmp
dec
ja
repnz
mov
sbb
cmp
dec
push
xor
outsl
pop
rcll
cld
pusha
adc
pop
dec
sbb
jecxz
push
mov
fs
dec
mov
adc
pop
imul
sbb
into
outsb
jg
cmovp
roll
mov
ficomps
jnp
fwait
or
addr16
and
inc
stos
jl
mov
pop
add
add
add
and
push
sti
cmpsl
push
mov
int3
adc
add
add
add
and
cmpsl
fwait
jne
sbb
push
dec
clc
ja
cmpsl
inc
pop
mov
fldcw
test
dec
push
mov
ja
add
sub
iret
dec
dec
or
lods
push
aas
push
movsl
jne
mov
cltd
add
in
adcb
cmp
mov
mov
scas
test
xor
push
addr16
int3
aaa
iret
nop
fwait
xchg
popf
or
push
iret
mov
inc
mov
call
adc
jne
and
xchg
test
push
mov
sub
jmp
and
das
mov
dec
into
jns
sti
mov
clc
shll
in
idiv
push
cmp
fcomps
loope
outsl
and
or
add
jp,pt
loopne
inc
scas
xor
mov
sbb
test
popa
push
push
addr16
inc
stos
adc
mov
lods
out
mov
adc
add
mov
std
mov
ljmp
sarb
sub
add
add
add
mov
dec
aas
mov
cwtl
sbb
test
jne
out
jns
mov
mov
mov
sbb
mov
add
das
push
xor
jmp
push
cmp
sbb
sahf
inc
push
lock
mov
inc
jge
add
xchg
call
in
or
pop
bound
fidivl
int
mov
or
sub
jo
cvtdq2ps
out
dec
jo
mov
sub
add
push
cmp
jp
push
pusha
sbbl
xor
imul
and
out
and
shrb
test
push
outsl
inc
stos
pop
jbe
iret
pop
inc
fdivr
pusha
mov
ret
dec
dec
and
add
adc
cmp
adc
lea
add
lock
mov
push
icebp
jmp
and
jle
pop
addr16
jecxz
repnz
outsb
inc
xor
addl
add
add
and
jecxz
push
stc
push
pop
clc
dec
arpl
add
pop
add
add
mov
and
lock
add
daa
pop
xchg
mov
out
mov
mov
popa
sub
inc
repz
mov
jg
fsubp
shl
das
inc
loopne
mov
xchg
pop
xchg
mov
push
add
aaa
lret
orl
pop
negl
into
lret
push
pop
mov
call
cmp
inc
add
pop
imul
je
mov
fidivs
pusha
sahf
xor
mov
das
shld
or
cmp
cmpl
fmuls
fmull
push
pop
sbb
and
das
pop
ret
jg
jns
rclb
push
cmp
mov
push
and
scas
push
add
clc
dec
aas
adc
aam
mov
adc
push
sbb
rcrl
incl
jbe
adcb
sbb
ret
push
and
int3
lds
mov
mov
mov
push
nop
in
xchg
push
sbb
push
rcrl
pop
xrelease
fiaddl
ret
ficomps
cmp
sbb
or
push
add
pop
add
add
xchg
repnz
xchg
or
lcall
dec
mov
xchg
sbb
sub
leave
xor
dec
bound
cmp
add
add
push
loop
out
shlb
stc
cmp
adc
fmul
cmp
test
popa
into
arpl
js
insl
scas
inc
mov
lods
jle
aas
cmp
popa
scas
or
xchg
in
popw
xlat
insb
dec
lahf
inc
cmc
inc
cmp
bound
aad
xor
xlat
mov
mov
jle
xchg
jae
mov
mov
sti
out
rol
out
aam
fwait
inc
sbb
adc
sbb
or
inc
mov
mov
imul
dec
mov
out
jmp
xchg
mov
outsl
add
or
lea
ret
jle
mov
push
test
bound
popa
mov
mov
add
lods
xor
mov
js
mov
jne
jno
add
pop
add
add
xchg
jp
mov
cmp
cmp
adc
push
sti
ret
out
jno
push
stc
scas
fisttpll
mov
jecxz
or
cwtl
or
inc
pop
outsl
dec
dec
aad
sub
pop
xor
jne
mov
out
bound
mov
repz
in
sub
and
xchg
lcall
mov
inc
test
ljmp
jecxz
inc
outsl
adc
inc
jle
pop
inc
and
pop
shll
mov
imul
mov
jne
push
mov
std
pusha
add
test
sbb
mov
in
mov
loope
ret
adc
fidivl
jb
out
pusha
add
cwtl
cmp
push
cltd
adc
lock
addl
add
add
lret
mov
sub
test
js
add
pop
add
add
fs
sbb
leave
mov
popf
sahf
xchg
xchg
adc
pop
dec
mov
insl
punpckldq
das
mov
xchg
fcomps
sbb
jp
cmp
fistpl
ja
add
lea
dec
lret
andl
pop
inc
inc
xchg
sub
adc
sub
sub
or
loop
dec
push
xor
pop
jbe
add
mov
push
imul
cmp
int
adc
lret
daa
jmp
popf
inc
fwait
aas
stos
pop
imul
fs
cmpsb
inc
loope
add
or
fs
icebp
mov
repz
xor
out
mov
nop
or
xchg
enter
fimull
and
pop
dec
and
push
adc
dec
arpl
jbe
mov
push
lcall
jecxz
cmp
fcoms
pop
cmp
xchg
cmp
sub
sti
pop
jge
divb
fadds
add
add
add
xor
cmp
xchg
nop
and
adc
outsb
mov
xchg
movsb
xchg
mov
pop
into
adc
cmc
jnp
adc
mov
mov
add
xor
jb
cmp
dec
outsl
or
addb
iret
aad
push
lea
shr
push
pop
popa
cs
in
addr16
mov
out
in
mov
or
mov
es
clc
xor
dec
mov
pop
dec
lret
imul
in
call
pop
dec
sbb
lea
lods
movsl
push
pop
pop
mov
in
dec
fdivrs
cmc
std
inc
or
jecxz
in
mov
int3
in
insb
ficoml
and
xor
adc
loop
push
add
popa
lea
cwtl
outsb
jecxz
inc
mov
shll
pop
pop
fdivs
popa
dec
cmp
int
sbb
xor
jecxz
test
pop
enter
loopne
jge
jmp
and
add
add
fsub
std
in
popf
dec
int
hlt
mov
sahf
out
xor
add
add
add
cmp
scas
jnp
xor
jb
pop
add
dec
add
adc
push
cld
ds
mov
xchg
cld
cmp
es
aaa
dec
insl
push
leave
test
movsl
fstpt
gs
pusha
fnsave
push
addr16
call
insl
or
adc
inc
ds
add
xor
repnz
mov
dec
cwtl
rcll
popa
or
dec
ror
jecxz
add
movsb
sbbb
mov
imul
xchg
sarl
testb
lcall
inc
mov
je
ss
stos
and
call
inc
xchg
jnp
sub
jge
pushf
pop
and
mov
lret
lret
adc
mov
fiaddl
cmp
xchg
jp
jo
or
ljmp
push
sti
pop
movsb
push
mov
pop
jae
cs
lods
add
addb
add
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
test
ja
cmp
ret
divb
sarl
lss
scas
inc
jne
decb
cs
rorb
jns
sbb
hlt
test
fnstsw
sbb
mov
in
stos
xchg
movsl
add
lahf
jmp
mov
jl
mov
std
imul
jbe
jmp
pusha
lods
call
mov
sbb
and
add
or
aas
hlt
jp
outsb
loope
xchg
jno
jge
mov
popa
jl
incb
in
push
fwait
repz
push
or
and
jo
movsb
movsb
sbb
out
enter
cli
jbe
push
sub
adc
sub
in
jbe
jnp
incb
mov
sbb
fcoml
sub
iret
push
dec
push
inc
ds
mov
sbb
fnstenv
add
jg
popf
sbb
xchg
test
repnz
pxor
jnp
mov
ret
jae
int3
or
mov
push
sti
das
ret
lods
daa
out
and
add
pop
add
add
data16
xchg
les
push
cmpsb
leave
xchg
mov
pop
sarl
add
lcall
shl
xchg
xor
pop
test
xor
fdivrl
daa
mov
mov
popl
or
fimuls
lds
pop
push
mov
clc
or
bound
dec
cli
xchg
rclb
xlat
aad
js
pop
ljmp
lods
sbb
cmc
out
pushf
inc
xchg
sub
jg
pop
mov
inc
popaw
js
mov
addr16
sti
sub
mov
pop
imul
mov
push
sub
hlt
push
shrl
dec
cmp
sarl
sti
jo
pop
sub
mov
repz
out
aam
add
mov
pushf
dec
js
icebp
xchg
dec
pop
not
adc
mov
mov
stos
mov
jge
xor
push
mov
out
out
out
or
add
int3
mov
gs
or
xor
je
lods
add
cmp
sti
aad
loopne
jge
movsb
fwait
xor
add
add
add
scas
jb
mov
aam
testb
push
sti
std
enter
sti
push
add
xor
add
outsb
sbb
push
in
pop
lds
repz
inc
pop
addr16
adc
dec
outsb
insb
cld
loopne
sbb
mov
int3
out
shlb
js
stos
out
and
xor
jmp
out
les
leave
cwtl
faddp
jge
rcll
lods
and
jne
dec
ljmp
xchg
rorb
cmp
js
pop
xchg
leave
add
jo
out
insl
sti
lods
outsb
and
dec
sub
mov
jp
repnz
cmpsl
push
popa
cmpl
mov
lds
cmc
aaa
add
inc
dec
push
mov
cli
jecxz
cmp
jmp
mov
lea
or
mov
mulb
mov
jmp
add
stos
rcl
adc
js
adc
dec
pop
jl
sbb
jg
mov
loope
test
mull
enter
add
incb
ljmp
jecxz
jb
mov
add
add
shlb
pop
das
lahf
or
shr
or
cmp
aad
popf
inc
adc
fidivrs
inc
sbb
add
ja
test
aad
stos
lahf
iret
icebp
mov
xchg
lahf
xor
mov
adc
push
jl
ja
push
lcall
cli
lret
daa
or
and
loop
adc
leave
mov
mull
mov
mov
enter
xchg
mov
scas
fldt
inc
push
adc
mov
xor
jb
sahf
dec
repnz
fidivrs
cld
push
xlat
inc
pop
dec
cmp
cmc
and
jb
or
fiadds
mov
xor
int
paddw
insb
jmp
sub
mov
xor
inc
or
xor
xchg
mov
rcl
shlb
dec
popa
jb
mov
aaa
inc
test
shrb
inc
mov
or
sahf
xor
and
and
and
out
dec
hlt
push
add
rclb
fwait
aad
mov
xor
add
jno
cmp
jnp
lret
mov
adc
mov
add
in
leave
push
pop
xor
in
lret
aas
popf
adc
mov
cs
inc
sub
fistl
inc
pushf
adc
jle
idivl
movsl
push
xor
jns
cwtl
push
aas
cmp
sub
mov
mov
fidivrl
out
imul
or
mov
es
loope
clc
sbb
icebp
cwtl
scas
negl
and
and
out
mov
and
jmp
in
xor
in
sbb
lea
lret
lahf
sbb
pop
mov
iret
inc
and
dec
jnp
cmp
push
stos
out
or
inc
pop
addl
and
sbb
loop
jge
push
mov
rol
mov
div
or
rolb
push
in
sti
cli
andl
jl
dec
jbe
idivl
mov
leave
push
mov
add
pop
add
add
insl
or
test
gs
xchg
test
lret
inc
aam
inc
xchg
lahf
fdivr
out
mov
popf
xor
jge
shr
in
cmp
xor
adc
iret
lret
xchg
mov
movsl
mov
or
ljmp
add
or
mov
ret
xor
mov
or
loop
adc
mov
loope
lods
test
ss
adc
lcall
sub
jae
inc
xchg
add
sub
movsb
mov
pop
xchg
popf
mov
rolb
pop
adc
mov
push
rorl
enter
pop
sbb
push
dec
xchg
lock
push
xchg
test
xchg
icebp
dec
test
push
shlb
inc
pop
xchg
jne
popf
dec
sub
inc
cmp
xchg
sub
ljmp
cld
in
pop
xor
mov
add
outsb
sub
stos
fs
push
pop
or
mov
hlt
mov
add
pop
add
add
stos
inc
unpckhps
jb
xchg
loope
test
dec
sub
xchg
out
sahf
mov
push
mov
fiaddl
pop
mov
insb
scas
loope
ficompl
xor
fdivs
leave
test
sbb
mov
repz
aas
mov
adc
adc
fildll
pop
daa
push
add
pop
sub
push
jge
or
subl
push
xchg
dec
sbb
dec
add
addr16
jne
xchg
outsl
add
into
xchg
scas
xor
dec
leave
inc
sbb
repnz
call
push
xor
lcall
pop
pop
push
mov
xchg
jle
add
inc
sbb
xor
mov
loopne
mov
add
dec
sub
cmpsb
xchg
push
in
add
mov
add
lahf
or
movsl
mov
nop
push
mov
mov
daa
push
popf
sub
add
les
scas
fistpll
inc
ljmp
add
pop
add
add
pop
shl
lret
inc
shl
mov
cmp
sub
push
mov
mov
das
dec
cmpsl
sub
or
inc
in
mov
test
in
mov
mov
fcoml
gs
or
lods
int
add
dec
jnp
lea
ss
add
or
add
push
loope
xchg
jno
loope
daa
xchg
sbb
xor
sub
cltd
push
lds
dec
push
mov
movaps
or
daa
hlt
cmp
mov
daa
push
ret
popf
in
lret
hlt
push
mov
jl
push
mov
in
out
inc
mov
and
xor
sahf
popa
sbb
jle
cld
and
fs
fcoml
jae
mov
add
dec
shll
mov
push
fsubrl
mulb
lret
push
cmpsl
shr
jp
loop
ret
insb
and
mov
std
mov
pop
mov
pushf
add
cmp
out
lahf
push
pop
xor
cmp
add
add
add
mov
sbb
in
lahf
and
mov
xchg
out
xor
fidivs
bound
jns
outsl
inc
std
adc
sbb
js
les
repnz
mov
out
mov
sahf
dec
stc
iret
mov
inc
xchg
dec
stos
sti
jne
inc
jae
mov
cmp
xchg
fcmovu
dec
cmpsb
and
sub
adc
out
xchg
push
jg
sub
ds
scas
std
lods
xor
movsl
imull
sub
jae
call
gs
out
int3
fidivrs
std
add
dec
iret
push
sti
xor
pop
mov
scas
iret
pop
mov
arpl
inc
mov
fmuls
je
pop
xor
mov
push
sub
clc
cmpl
je
add
xchg
mov
cmp
cmc
sub
fcompl
rolb
sbb
cmp
loop
out
mov
into
ljmp
jnp
outsl
lret
mov
out
dec
ja
aas
jae
ja
int3
cmp
add
add
add
jmp
lods
rorl
jl
sti
movsb
lahf
aaa
xchg
test
in
mov
sub
test
repnz
ds
rolb
xor
xor
daa
inc
mov
scas
adc
enter
xor
lock
sbb
jp
push
cmp
into
cmpsb
repz
cmp
psllw
test
jp
sbb
loope
hlt
jp
loopne
lret
adc
ja
jbe
add
stc
lret
xchg
mov
jne
sub
xor
mov
or
xor
mov
fnsave
aam
push
addr16
mov
into
fs
jmp
js
dec
push
push
fisttpl
lods
fwait
aas
out
mov
mov
pushf
mov
inc
or
aaa
shlb
jo
enter
mov
mov
mov
rcl
sbb
inc
shlb
sahf
int
movsl
pop
sub
dec
mov
or
inc
or
in
xor
mov
dec
add
repz
cmp
lods
repz
push
inc
dec
sarl
add
pop
add
add
fdivr
jle
xchg
or
out
push
int
sub
push
hlt
dec
sar
xor
cs
rol
jecxz
pop
cmpsb
aas
fsubr
xchg
xor
push
jnp
fsubrs
and
cmp
xchg
sub
repz
push
shrl
mov
sbb
fcmovne
hlt
adc
or
in
repnz
fwait
xor
mov
mov
nop
lods
mov
mov
sub
ret
popf
and
push
lahf
mov
xchg
adc
pop
scas
or
push
jne
arpl
push
cmpsl
pop
pop
dec
and
xchg
inc
fwait
xchg
adc
pop
sbb
out
pop
push
into
out
je
pop
mov
mov
add
inc
mov
push
jle
pop
mov
jne
xor
jp
and
xchg
mov
dec
add
cmp
loopne
inc
movsl
repnz
and
jp
imul
pop
push
cmp
add
daa
push
cld
push
std
jmp
pop
adc
out
fidivrl
add
add
add
inc
push
push
sbb
sub
push
push
or
dec
mov
stc
and
div
mov
jmp
out
aad
mov
lret
and
mov
add
or
out
stc
mov
shll
and
ret
loope
xor
xchg
stos
dec
mov
cmp
cltd
test
xchg
loop
xchg
out
daa
loope
cmp
ss
and
jno
add
in
and
pop
cmp
mov
shll
scas
xchg
sbb
add
mov
daa
jmp
push
pop
xchg
orl
sub
sbb
sub
jg
inc
in
in
fistl
sub
mov
in
test
test
push
push
adc
sti
out
mov
sahf
or
test
std
and
push
test
xchg
out
dec
stc
and
dec
push
add
sbb
dec
push
out
jge
push
pop
into
xor
pop
add
add
cltd
xor
es
adc
test
clc
mov
aas
ret
fwait
repnz
shrb
push
sub
bound
mov
fsts
push
nop
scas
sub
mov
add
and
mov
cs
xor
imul
int
ja
clc
sub
iret
push
popl
imul
arpl
add
es
loop
xchg
inc
inc
sub
mov
lods
ss
xchg
lcall
ljmp
jne
pop
sub
jb
or
inc
call
lcall
outsb
add
enter
jbe
nop
jno
mov
pop
dec
push
fildll
adc
dec
jle
jns
jns
cmpl
inc
sti
or
xchg
lods
mov
out
mov
mov
sbb
fnsave
cmp
mov
lock
ds
add
idivl
mov
mov
add
pop
add
add
cmp
loope
int
inc
mov
pop
xchg
data16
call
int3
add
into
push
lahf
scas
push
pop
cmp
mov
push
repnz
pusha
pushf
incb
push
pop
jno
cmpsb
push
and
incl
rcrb
hlt
bound
inc
or
lods
lret
arpl
adc
jmp
sub
adc
jnp
push
stos
repnz
jmp
aaa
xor
test
push
pop
sub
mov
push
filds
std
stc
rcrl
cld
sub
jb
pop
rorl
enter
arpl
pop
incb
outsb
and
fcmovu
cmp
mov
hlt
jns
insl
cmp
frstor
xchg
or
int3
mov
cmp
movsb
or
sbb
aad
repnz
and
jne
outsl
rcll
mov
popf
icebp
out
ljmp
mov
mov
dec
loopne
dec
ret
adc
mov
ja
jg
xchg
cmp
pop
push
out
aas
add
pop
add
add
adc
mov
ds
xchg
mov
loope
xchg
xchg
push
mov
sbb
loop
push
add
mov
push
mov
adc
fiaddl
add
cmp
xchg
mov
jecxz
mov
push
out
testl
cmp
adc
jns
int3
clc
cld
test
add
pusha
enter
hlt
and
ljmp
aam
lods
add
mov
sbb
jns
adc
sbbl
cwtl
sahf
out
xchg
pop
push
scas
rcrl
mov
repnz
mov
dec
sbb
lea
mov
xor
cmpsl
call
aaa
test
mov
adc
jb
jne
xchg
cltd
xchg
das
movsb
fwait
pop
adc
sub
clc
push
int
roll
lds
xor
inc
leave
ds
add
shrl
cwtl
je
rorb
push
rolb
and
dec
lret
jmp
imul
push
lret
mov
add
pop
add
add
mov
in
movl
mov
movsb
sub
loope
mov
xchg
enter
fdivrp
jns
test
test
cmp
out
pop
sub
loopne
scas
push
sub
add
mov
mov
hlt
and
and
jg
test
xor
sub
or
xchg
cwtl
lret
mov
jg
orb
add
dec
jle
sbb
in
inc
push
xchg
cmpsb
xlat
and
mov
sbb
lods
add
ljmp
mov
aaa
ret
gs
sub
imul
stc
in
aaa
mov
sbbb
rcrb
mov
mov
or
into
push
xlat
add
mov
xchg
popa
ficoml
orb
add
pop
add
std
jb
fstl
lea
fldl
jl
insb
mov
xchg
sbb
dec
shll
adc
pop
dec
cltd
cld
lea
lds
cmc
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
sbbb
sbb
pop
lcall
xor
shll
les
jge
in
lods
and
aad
ja
js
fwait
cmp
inc
mov
fsubrp
in
aas
sub
mov
hlt
mov
mov
jg
mov
pop
bound
in
int
in
sub
mov
jbe
aas
enter
xor
fmuls
pop
cli
nop
test
mov
mov
scas
repz
imulb
inc
popa
push
or
jne
jp
fcmovne
cld
fs
sub
inc
add
hlt
daa
icebp
and
adc
gs
addl
leave
jo
fstpt
sbb
pop
inc
inc
lea
cltd
pop
loop
mov
push
jb
dec
popa
scas
lds
mov
or
pop
jle
xchg
jo
push
cmpsl
mov
outsb
pop
and
or
loope
imul
jno
xchg
fistpl
iret
pop
adc
sub
jns
imul
pop
js
add
add
pop
add
add
popf
xor
dec
inc
mov
inc
xchg
mov
cmp
das
test
jne
pop
jno
daa
xor
pusha
and
jo
lds
int3
call
or
in
sub
sub
inc
push
sub
fisubrl
cwtl
test
aam
jne
sub
cmp
scas
mov
push
test
sahf
rorl
xor
push
jecxz
push
mov
sbb
aas
ret
sbb
jge
je
scas
mov
sub
outsb
cmp
aam
rcr
aam
into
mov
mov
inc
cltd
jbe
push
pop
add
adc
es
je
out
and
jmp
out
dec
jo
icebp
push
insl
inc
rcl
adc
rcrb
adc
xor
add
jle
lock
xor
mov
add
es
cmpsl
insl
xor
pop
add
pop
das
cwtl
add
ret
jg
jmp
repnz
aam
lea
pop
add
add
rorb
pop
push
jmp
jp
pop
into
xchg
mov
je
test
push
shlb
cmpsb
icebp
addb
jb
mov
xchg
or
imul
inc
bound
iret
mov
in
ret
adc
test
xchg
pushf
fadds
ja
lcall
lods
test
xorl
out
nop
out
cmp
loope
xchg
out
or
ret
mov
push
inc
dec
fnstsw
repnz
out
ss
roll
mov
scas
add
test
loope
fnstcw
mov
stc
out
in
daa
jae
jl
cmp
repnz
xor
lds
inc
call
insl
xchg
fcoms
fldt
es
jo
pushf
and
xchg
shlb
mov
sub
jp
bound
mov
xlat
sbb
mov
add
das
mov
and
fldpi
addl
pop
add
add
sub
mov
or
out
inc
inc
xor
rorb
mov
cmp
dec
fdivs
add
in
idiv
mov
in
xor
or
xor
rorl
ss
or
cmpl
sub
inc
jmp
mov
cmp
xor
sub
loope
adc
fidivrs
out
movsb
mov
sub
adc
ja
mov
mov
lods
sahf
cltd
in
jns
popa
push
mov
fwait
add
repnz
mov
mov
mov
cmpsb
xor
pop
push
lds
into
xchg
std
rorl
adc
jp
jbe
jg
xlat
inc
xchg
scas
aad
das
pop
hlt
lock
inc
sahf
les
addr16
sti
outsb
insl
push
pop
and
ljmp
push
lret
and
jae
mov
push
add
hlt
gs
adc
ficoms
push
inc
add
pop
add
add
mov
lds
out
xchg
jg
aam
sbb
loop
dec
sti
call
sbb
push
dec
in
in
push
clc
dec
xchg
cs
and
and
scas
cwtl
dec
mov
or
jle
sub
xchg
pop
rorb
stos
stc
mov
rolb
mov
pop
mov
pop
cwtl
lods
mov
inc
int3
jecxz
push
xor
negl
xchg
or
or
mov
mov
xchg
lahf
jo
xchg
xor
push
aam
push
sahf
test
xchg
mov
fxch
or
out
test
in
jg
jge
shl
push
lahf
movsb
mov
mov
xor
dec
fildll
jno,pt
jmp
std
mov
sub
mov
call
add
icebp
xchg
jb
int3
pop
xchg
xor
fiaddl
lock
fsubrs
push
push
push
sbb
pop
sbb
fstpt
jle
fdivl
fstpl
inc
repz
pop
jecxz
jns
add
aas
gs
mov
orb
and
add
add
add
fsubrs
mov
add
and
scas
jo
arpl
js
js
adc
scas
repnz
mov
xor
mov
xchg
pop
repz
xchg
test
ds
sbb
shll
out
int
jo
mov
popf
xor
jl
scas
mov
adc
popf
cmpl
cmpsb
jecxz
dec
and
add
enter
fcoms
fdivs
push
arpl
adc
aam
jb
ljmp
insb
push
adc
pop
rorb
push
nop
pop
les
inc
mov
imul
cmc
subb
sub
or
stos
scas
les
jb
inc
fsub
mov
in
cli
mov
mov
shrl
mov
dec
in
mov
inc
lret
sub
add
loope
ja
and
or
lcall
jecxz
faddl
push
sub
inc
fs
jb
mov
int
test
mov
out
fnstsw
mov
daa
dec
add
pop
add
add
lods
jp
popf
adc
loope
push
orb
adc
adc
insb
sub
int
call
add
dec
dec
jp
jae
lock
mov
les
mov
rcrl
rorb
aad
cmp
inc
cmp
push
lds
cwtl
scas
mov
sbb
mov
dec
xlat
jmp
fnstenv
push
mov
stos
jae
adc
jp
sub
popa
mov
call
add
inc
jge
adc
mov
xchg
xchg
not
gs
cmpb
inc
mov
and
inc
repnz
enter
cmpsl
push
sahf
cmp
cwtl
je
dec
stos
clc
sub
dec
testl
iret
cmp
xor
cld
mov
sub
test
dec
pushf
fsubrs
imul
in
int3
mov
popf
or
dec
inc
xchg
sub
icebp
xor
dec
xchg
aad
or
insb
inc
mov
fildll
mov
sub
cs
add
pop
add
add
orb
mov
int3
decb
push
push
sub
sub
xor
ficoml
push
cmp
mov
push
and
inc
xchg
or
jecxz
adc
fisttpl
add
mov
jl
cltd
and
lret
xchg
ret
iret
adc
add
cmp
shrb
mov
loopne
jnp
lds
pop
pop
inc
repnz
mov
sub
dec
jle
adc
pop
xor
pop
lcall
scas
xchg
sub
add
int3
loope
mov
inc
sti
or
ja
dec
cmp
jne
xor
in
scas
mov
sarl
cwtl
ja
sahf
dec
and
inc
loop
pusha
mov
fidivs
jp
or
sub
int
push
adc
pop
cmc
inc
dec
xchg
aaa
ficoms
movsl
outsl
in
or
test
in
push
data16
inc
inc
out
adc
lods
adcl
sbb
outsl
pop
add
jmp
out
aas
push
xor
xchg
arpl
add
add
add
sbb
dec
in
push
dec
test
cli
mov
adc
les
cwtl
lcall
jae
int3
mov
fnsave
out
test
adc
pop
mov
adc
stc
cwtl
cmpsl
ret
lret
sbb
xchg
mov
or
pop
ficompl
lods
push
test
and
pop
pop
iret
dec
unpckhps
xchg
ljmp
in
push
clc
stc
xor
inc
ret
jo
call
sti
add
mov
push
adc
rorb
pusha
fbld
fwait
pushf
push
js
mov
cs
bound
pusha
int3
lods
cmc
xchg
push
into
lcall
lea
sbb
push
rorl
fsubl
cmp
jecxz
js
mov
ja
push
fadds
xchg
aam
sar
jns
mov
int3
test
mov
adc
cmpsb
lods
jmp
divb
movsl
fidivs
pop
fs
mov
scas
pop
push
add
bound
cmp
imul
out
mov
xchg
lahf
or
mov
add
pop
add
add
stos
dec
rcrb
xchg
sbb
adc
fdivrl
jo
loopne
and
mov
mov
fcoml
xchg
fldl
mov
nop
lods
frndint
scas
test
mov
fisubs
dec
ficoms
out
jae
cmp
jne
jmp
or
add
mov
popa
enter
sub
cmc
aaa
cmc
or
repz
pop
dec
xor
adc
dec
insb
mov
cs
xor
mov
push
adc
bnd
ljmp
ljmp
enter
xchg
cltd
add
nop
mov
dec
adc
lds
rorl
cli
js
loope
and
dec
sub
mov
adc
mov
dec
adcl
idiv
inc
jecxz
pop
cmpsb
inc
hlt
addr16
dec
cld
xchg
pop
daa
pop
fwait
sub
incb
and
ja
loopne
inc
add
add
dec
stc
mov
pop
sub
inc
fadd
sbb
dec
add
pop
add
add
loop
cmpsl
rorl
insl
push
das
aaa
fldt
mov
xlat
dec
inc
pop
xor
insb
int3
inc
mov
sub
mov
mov
lea
pop
daa
jecxz
je
lret
and
mov
sub
pop
lret
add
jle
jp
pop
ficomps
xchg
test
pusha
stos
inc
out
outsl
adc
pop
pop
mov
xor
jge
pop
cmp
lcall
pop
aaa
xchg
mov
rorb
es
mov
notl
sub
mov
int3
sub
imul
ret
xlat
fmul
pop
mov
xchg
push
jno
xchg
xchg
je
inc
outsb
mov
dec
out
int3
sub
mov
jb
sbb
adc
cmc
mov
mov
jo
jmp
push
jg
sbb
add
sbb
aad
xchg
pushf
cmp
sub
xchg
cmp
jle
jg
cld
dec
loope
sbb
fs
dec
dec
add
pop
add
add
and
leave
sbb
out
mov
xchg
jg
jns
sar
inc
mov
adc
cmpsl
rclb
cltd
lods
leave
push
or
cmp
cld
mov
lods
cwtl
inc
push
nop
ja
outsb
movsl
dec
or
jae
xchg
mov
xor
cltd
push
pushf
mov
lods
jmp
cmpb
cmc
inc
push
lods
mull
outsb
movsb
rcrb
fcompl
add
rcl
loope
test
pop
mov
faddl
push
xchg
dec
lahf
fs
sub
ss
hlt
jno
pop
imul
jnp
xor
ror
xor
push
mov
cmp
pop
gs
mov
test
nop
rclb
aad
mov
ret
incl
mov
test
adc
sbb
xchg
fcompl
ss
cmc
dec
add
mov
pop
add
xchg
mov
mov
mov
add
pop
add
add
lods
cltd
dec
lret
mov
bound
icebp
int
or
dec
ret
and
imul
mov
mov
cmp
lcall
hlt
lds
add
scas
orl
and
dec
and
iret
cmp
pusha
and
out
push
or
inc
cli
stos
gs
repz
jbe
add
pop
xchg
ljmp
dec
inc
jns
sub
dec
xorl
loopne
lock
push
int
icebp
jecxz
call
or
fsubrs
ret
rolb
jae
fs
dec
sbb
adc
movsl
repz
insb
cmpb
pushf
mov
aaa
repnz
in
fcoml
js
cwtl
loope
mov
cli
imul
in
movupd
cli
pop
mov
sbb
mov
inc
lcall
mov
xchg
add
inc
mov
push
push
jmp
mov
test
dec
add
pop
add
add
push
cmp
xor
lcall
cmpsb
loope
mov
xchg
mov
sbb
jmp
loopne
lock
cmpsl
loope
xchg
pop
out
sub
fcmovbe
mov
pop
xor
jg
sbb
mov
inc
loope
mov
pop
jmp
xchg
ss
jbe
out
in
sbb
imul
mov
xchg
cwtl
shlb
mov
notl
in
adc
add
popf
adc
xor
jle
xchg
popf
mov
add
popa
jge
mov
jg
and
sub
sub
out
pusha
pop
clc
mov
and
mov
testb
cmp
mov
push
addr16
lods
adc
aaa
xor
cmp
add
cli
movsb
mov
imul
daa
popa
sahf
xchg
adc
mov
call
inc
xchg
jmp
add
add
sub
cmp
cmc
push
adc
adc
cmp
add
pop
add
add
push
push
inc
cs
mov
shll
and
jnp
or
push
adc
clc
cmp
jecxz
jle
dec
cmp
xor
ficomps
or
test
fldl
into
cmpsb
cs
and
pop
cmp
in
fwait
arpl
xchg
cltd
xchg
push
cli
cmp
jns
inc
push
out
arpl
call
int
fcompl
dec
dec
je
push
jecxz
adcl
xchg
movsb
dec
jge
int
movsb
aaa
mov
lea
xchg
cmp
mov
sub
and
xor
cmpsb
aad
in
std
roll
xchg
pop
inc
mov
pop
mov
inc
or
xor
fs
xchg
or
add
jae
mov
clc
add
adc
sub
and
std
add
dec
adc
and
ja
jne
or
mov
lds
loop
push
in
icebp
shl
and
add
push
shll
out
je
pop
inc
lahf
or
add
add
add
lret
pop
out
mov
and
mov
add
adc
push
outsb
or
xchg
push
mov
mov
ds
daa
xchg
sub
sbb
iret
js
push
jmp
push
push
push
add
push
dec
lods
jl,pt
ds
iret
movsl
or
in
repz
cmpb
jecxz
jge
es
xchg
xchg
or
orb
loopne
mov
faddl
jb
mov
popf
rclb
push
jae
dec
push
sbb
push
rcll
sbbl
jge
js
cmp
and
aad
mov
outsl
inc
mov
xchg
je
push
jns
test
adc
pusha
and
mov
adc
fcoml
je
sahf
cmpsl
cmp
ljmp
fwait
roll
lds
fdivr
mov
data16
mov
pop
xor
into
xor
and
push
pushf
out
repnz
lret
fistl
outsl
leave
jp
add
out
lcall
lock
pop
cld
insl
push
add
pop
add
add
mov
test
add
pop
mov
fcomps
out
pop
je
aaa
push
xchg
xchg
fs
inc
fucomp
ss
iret
lods
xchg
push
and
fldpi
cld
movl
enter
nop
adc
xchg
je
push
or
dec
and
std
js
aad
cmp
test
or
mov
and
repz
push
inc
inc
fisttpl
ljmp
jae
ret
mov
add
jo
inc
fisttpl
sbbl
rcll
and
inc
iret
mov
cmp
test
xchg
jbe
ja
dec
lcall
fidivrs
testl
cmc
jge
js
xchg
xchg
addr16
xor
cmp
push
pop
lea
push
aaa
xchg
out
and
jmp
dec
outsl
and
xlat
sbb
bound
imul
lret
je
add
pop
add
add
nop
xor
sub
jo
push
in
js
outsb
sub
sub
out
lock
inc
pop
cmp
sbb
sub
loop
popf
negl
mov
loope
fwait
lea
jns
out
sarl
stc
mov
add
sbb
mov
repz
or
or
xchg
xor
sbb
ja
or
xchg
jno
xchg
inc
sahf
mov
inc
mov
sub
push
rorl
inc
jbe
icebp
xor
enter
in
xchg
add
sbb
je
dec
adc
inc
ret
add
ds
ret
cli
test
stc
icebp
fnstcw
cmp
sbb
aam
xchg
sbb
jb
lret
jmp
aam
aas
jg
repz
adc
mov
into
pop
cmp
mov
fldl
aas
and
das
fsubrl
mov
mov
add
add
fwait
cmp
xchg
xchg
dec
repz
rorb
add
pop
add
add
jl,pn
mov
push
test
jge
mov
add
pop
inc
loopne
lods
mov
cmpsb
pop
xchg
adc
mov
xor
sub
xor
inc
or
push
sbb
mov
mov
xchg
push
push
sub
in
pop
into
add
cld
push
enter
scas
dec
push
adc
dec
pop
test
sub
push
flds
js
xchg
adc
or
pusha
loop
mov
inc
inc
ljmp
fldl
sbb
adc
mov
loope
insb
sub
or
movsl
inc
js
stos
push
lret
push
jl
xchg
dec
mov
pusha
push
inc
outsb
add
sub
push
inc
xor
xchg
adc
daa
xchg
insb
xchg
imul
dec
orb
mov
mov
test
inc
imul
jae
fiadds
inc
push
clc
mov
mov
pop
fcomip
idivl
adcb
pop
add
add
in
shll
cmp
push
inc
fsub
or
jns
incl
dec
mov
xchg
aas
cmpsl
push
pop
push
test
xchg
in
cmpsb
stos
jg
or
dec
mov
dec
mov
mov
add
push
fdivrp
adc
xchg
scas
pop
xor
push
adc
adc
ss
mov
jne
mov
jmp
aas
insl
dec
push
push
fcmovbe
ret
fsubrl
jle
jnp
xchg
jbe
nop
rcll
aad
ss
xchg
dec
testl
inc
arpl
add
scas
int
mov
out
xor
push
aaa
sarb
pop
lret
in
ret
cmp
movsb
test
xor
loopne
push
das
sbb
mov
adc
test
mov
inc
xchg
repz
out
sub
in
imul
test
sub
lds
pop
and
add
shr
mov
xchg
test
add
pop
add
add
sub
or
dec
xchg
data16
xchg
and
out
and
xchg
adcl
loop
mov
loop
nop
jecxz
xor
out
imul
scas
outsl
jge
outsb
dec
sbb
das
cld
lea
sahf
data16
jae,pn
cmpl
std
inc
jno
sub
stos
ljmpw
add
push
fs
sbb
mov
es
adc
adcw
cwtl
adc
jo
shlb
mov
xchg
or
lods
or
fisubrs
mov
inc
push
lods
rcr
cld
arpl
inc
insb
andb
and
test
je
hlt
mov
xor
adcb
sub
das
or
stc
push
ss
out
loop
mov
sar
fdivr
ret
sbb
adc
fdiv
push
pop
mov
cltd
je
sti
andl
pop
sbb
cli
mov
or
xorl
iret
outsl
scas
loop
xor
jns
add
mov
btc
mov
nop
push
add
pop
add
add
dec
xor
add
dec
ljmp
sbb
ret
rcrb
jns
jp
sbb
out
mov
pop
sub
adc
cmp
sbb
pop
sbb
divb
sahf
in
dec
inc
into
scas
cmc
dec
pop
adc
clc
cmp
dec
cmp
lret
jb
xor
sub
loope
xchg
sbb
jge
add
adc
sbb
jecxz
jge
sbb
mov
add
iret
dec
pop
adc
lds
jo
test
outsl
xchg
ja
pop
add
rclb
aas
hlt
in
test
stos
rorl
movsl
cmpsb
cmp
xor
push
sbb
or
ret
xchg
add
push
sbb
inc
jo
adc
cmc
sbb
cld
cmp
cltd
or
inc
jp
rclb
dec
mov
or
mov
dec
fwait
nop
push
mov
mov
into
pop
or
mov
push
mov
test
add
mov
sub
pop
add
pop
add
add
add
jl
repz
lds
mov
fwait
inc
xchg
jmp
cli
pop
jbe
push
lods
pop
sub
jbe
stc
scas
fbstp
inc
jo
xor
push
inc
xor
rorb
mov
jmp
xchg
cs
sbb
rcrl
in
andl
sbb
push
xchg
jmp
jle
enter
call
mov
cmp
add
dec
lds
cmp
sbb
inc
cmp
push
movsl
mov
je
sbb
mov
dec
enter
and
xor
or
push
dec
cwtl
fstps
pusha
int3
xor
aas
mov
popf
dec
in
jle
fmull
xor
fisubrl
in
mov
mov
shll
imul
xchg
xor
push
xor
int
fs
mov
lahf
xchg
sbb
dec
fisubrs
pop
pop
stc
fwait
popa
pop
sbb
fsubl
mov
jne
ret
and
pop
add
pop
add
add
jnp
mov
mov
adc
stc
jecxz
xor
inc
faddl
mov
aas
rcrb
pop
dec
sub
jge
pushf
aaa
imul
mov
jns
cs
lods
push
sub
out
lahf
fs
in
loope
jle
mov
pop
int3
cmpsb
std
pop
hlt
mov
cs
test
les
add
jmp
dec
mov
xchg
mov
xchg
mov
clc
leave
ret
hlt
or
sub
insl
data16
cmp
xchg
sub
add
inc
push
jne
sub
pop
mov
cmp
xor
mov
fldcw
enter
adc
xchg
dec
xor
xor
iret
lods
jmp
sub
mov
inc
cmc
jg
fcomp
es
jecxz
add
push
dec
xor
rcr
jo
sub
cmpsl
xchg
add
cmp
or
fbstp
scas
adc
lahf
std
test
fldcw
movsl
pop
add
pop
add
add
mov
cmp
in
jnp
add
dec
xor
hlt
orb
sbb
rorl
dec
mov
cltd
or
jo
pop
dec
scas
pop
movsl
call
enter
and
sub
jne
in
loope
sub
xchg
fstpl
sub
add
sbb
test
insb
cmp
sarb
inc
addr16
xor
aad
cmc
es
xor
aam
int
cmc
mov
out
lcall
xchg
ljmp
xchg
ljmp
sub
repnz
sub
mov
imul
pop
mov
push
jnp
mov
push
in
imul
sbbl
lods
ss
lret
nop
pop
pop
data16
rolb
push
dec
adc
sub
insl
mov
xchg
push
cmc
cli
jecxz
subl
scas
imul
test
test
iret
pop
sbb
add
mov
pop
stc
outsl
mov
sahf
lods
pop
add
pop
add
add
fldl
fdivrs
std
jae
push
cmp
ljmp
cmp
sahf
sbb
scas
ffree
lret
int
into
xchg
outsb
ja
pop
xchg
dec
dec
pop
cmp
sbb
cld
out
and
call
das
dec
mov
xchg
in
mov
xchg
cmp
cld
in
sbb
imul
mov
add
add
lods
inc
mov
movsb
dec
leave
add
pop
int3
incl
xchg
pop
xor
push
mov
dec
add
loopne
les
xor
inc
and
or
xchg
pop
jnp
or
movsl
adc
mov
inc
cmp
ljmp
add
xor
in
fcomps
push
cmp
inc
rolb
mov
aas
test
std
hlt
stc
lock
adc
daa
lcall
adc
icebp
jno
push
lods
and
out
into
push
mov
jmp
add
pop
add
add
adc
shl
imul
cmpb
in
jle
lea
and
mov
jae
xor
dec
cmp
inc
adc
decl
gs
dec
pop
les
xlat
int3
fisttpll
or
mov
out
cmpsb
les
ret
cmp
dec
or
cmpsb
je
fld
out
mov
pop
out
jbe
loope
jbe
mov
push
cmc
rcr
arpl
repnz
inc
testl
push
add
daa
pop
jmp
lret
sub
sub
imull
xor
leave
loope
jmp
dec
jg
and
mov
sarl
pusha
shrl
inc
push
inc
scas
pop
movsb
jl
jg
mov
cwtl
inc
dec
cmp
sarl
adc
cmp
popa
mov
and
es
sbb
mov
jmp
push
pop
jge
add
mov
sub
cwtl
pop
out
jl
cmp
add
add
xchg
inc
shl
xlat
mov
sub
ds
pop
add
pop
add
add
jnp
xor
cmp
mov
xorl
aam
mov
inc
cmp
dec
outsl
les
or
sub
popf
fwait
push
frstor
fsubrl
xchg
and
out
cmp
mov
rcl
pop
hlt
in
ljmp
cmpl
sbb
pop
jae
int3
adc
daa
mov
sbb
and
in
or
xor
nop
dec
mov
and
lock
outsb
pop
dec
lret
xor
stos
inc
enter
add
dec
mov
sahf
arpl
ret
jne
xchg
jno
andl
dec
xchg
push
addb
insl
lcall
push
das
in
fcmovu
test
sub
xlat
loope
sub
insl
mov
lcall
mov
scas
mov
xchg
inc
cwtl
jle
lahf
pop
fcmovb
fcmovnb
lahf
pop
lret
inc
and
lahf
rcrl
pop
add
add
test
xchg
mov
mov
dec
push
xchg
pop
and
and
insb
scas
lods
pop
lods
inc
test
ret
ljmp
push
fs
data16
dec
shlb
cmpsl
adc
in
add
mov
sub
sub
xor
jne
adc
int3
dec
mov
or
je
fwait
les
cmp
out
or
xchg
push
jbe
pop
les
scas
cmpl
pushw
and
fcmovb
or
lds
bound
movsb
mov
push
mov
ret
push
je
pop
je
push
push
test
xchg
pop
ja
imul
cmp
cmp
push
cmpsl
cmpsl
jnp
daa
push
fs
mov
push
push
push
sub
cltd
push
cmp
xlat
pusha
sub
sti
pop
out
push
je
lret
jae
or
mov
xchg
iret
out
movsl
icebp
cwtl
cmpsl
popf
rorl
mov
test
inc
push
add
add
idiv
jg
pop
and
mov
add
pop
add
add
sti
loope
movsb
add
mov
jp
imul
jmp
pop
pushf
cs
pusha
popa
mov
add
int3
pop
mov
xor
dec
stos
sbb
out
nop
lret
call
cmpsb
push
orb
xchg
nop
xor
pop
out
mov
xchg
aam
mov
xchg
test
data16
arpl
xchg
xor
cltd
pop
mov
dec
adc
inc
xor
add
inc
and
inc
xchg
into
int
imul
xchg
movsb
lods
add
push
and
inc
mov
pop
xchg
fstp
arpl
sbb
cmp
push
fists
push
ja
mov
xor
mov
lods
mov
jbe
push
cmp
or
test
sbb
push
es
cmp
roll
movsl
adc
dec
stos
sub
add
jno
inc
cmc
repz
sbb
roll
add
add
pop
mov
mov
xchg
cwtl
dec
iret
pusha
add
pop
add
add
in
mov
pop
xor
xor
imul
cmp
jb
push
pop
sbb
sub
and
std
lea
ds
xchg
shlb
pop
iret
ds
ds
jmp
sbb
push
push
xor
adc
cmove
imul
mov
cmp
imul
fwait
cmp
out
xchg
ss
mov
mov
push
jl
test
jnp
and
sub
sbb
xchg
in
inc
jae
repz
jl
mov
insb
clc
dec
ljmp
sub
ret
clc
add
fistpll
mov
inc
jns
xorl
cmpsb
mov
mov
icebp
insb
mov
and
loope
ret
push
mov
int
test
enter
fwait
sbb
scas
xchg
xor
push
xor
jne
in
jo
pop
pop
dec
cmp
cmc
push
dec
int3
push
mov
es
add
repnz
movsb
jle
stc
test
popa
jb
loope
popa
add
pop
add
add
sbb
out
sbb
lcall
push
outsl
push
adc
sub
jmp
lock
es
js
cmp
test
fcmovb
ljmp
rcrb
mov
fld
jo
lret
cmp
insb
fldenv
xor
lods
cltd
aas
jge
pop
push
xchg
mov
mov
sub
add
adc
dec
gs
loopne
mov
loope
movsb
icebp
mov
adc
in
sbbb
ja
and
dec
jns
xchg
dec
mov
test
mov
cmc
mov
mov
xchg
push
lods
lcall
jle
pop
int3
stos
lock
scas
pushf
outsl
mov
xlat
pop
mov
cmp
mov
xor
mov
shrl
push
xchg
leave
push
ss
mov
add
mov
pop
dec
les
pop
mov
or
push
fstl
pop
popf
mov
pop
push
fnstsw
lret
pusha
out
out
fsubrl
bound
stos
sub
stos
out
jmp
sub
ss
leave
frstor
add
add
add
xlat
mov
xchg
mov
je
call
filds
pop
cmp
sub
jl
lahf
fwait
mov
roll
ss
jno
add
fimuls
es
pop
dec
mov
cmp
and
sbb
pop
lret
icebp
shrb
and
sbb
nop
movsb
outsl
jg
aas
mov
pusha
cmp
fdivl
mov
pop
push
dec
jmp
fs
xor
cli
mov
mov
jnp
mov
mov
or
jmp
sbb
and
sbb
mov
scas
clc
and
ja
dec
jb
adc
dec
ljmp
out
aaa
sbb
xchg
test
test
aam
mov
add
and
faddl
push
cltd
fs
int
or
cmpsl
dec
stos
arpl
aam
cmpsb
shl
rorl
fs
jp
pop
bound
lods
adc
push
push
ljmp
aam
scas
popa
fnstcw
or
sbb
xchg
adc
shll
fnstenv
adc
mov
add
add
add
andb
cli
sar
test
cmp
adc
fistl
dec
jbe
mov
hlt
pop
fsubrl
js
fmul
pushf
hlt
dec
add
mov
js
fistps
test
call
aam
addl
sbbb
sti
adc
mov
mov
or
xor
or
inc
sbb
fidivl
test
push
sub
inc
mov
inc
cmp
aam
shrl
sbb
push
iret
push
sub
test
ja
adc
pop
dec
imul
inc
push
push
dec
test
xchg
stos
movsl
xchg
adc
and
pushf
cmpsb
out
fldl
or
xchg
bound
outsl
xchg
xchg
in
mov
dec
xlat
add
mov
ds
cmp
xchg
mov
addr16
js
xor
push
mov
ret
rcr
push
repnz
in
cmp
and
mov
sub
cld
je
jbe
decl
rcll
add
pop
add
add
aam
rclb
adc
xchg
sbb
jne
mov
out
inc
sbb
sbb
cmp
roll
sahf
fnstenv
shll
outsl
leave
or
dec
jp
sbb
sarl
cmp
mov
jp
test
dec
inc
xchg
test
pop
into
ss
jmp
or
bound
lcall
fiaddl
sahf
adc
cwtl
aam
in
stos
xorb
mov
push
sub
cmp
jl
ds
xchg
icebp
mov
and
fcom
adc
out
mov
popf
dec
or
out
inc
mov
bound
ja
test
add
mov
mull
pop
inc
aad
in
imul
jo
dec
fnstcw
sub
add
dec
push
dec
dec
jne
mov
cli
push
les
std
clc
bound
nop
lds
cmp
mov
jae
add
addl
push
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
jno
shl
inc
sub
call
adc
outsb
and
faddl
inc
scas
add
cmp
add
rclb
pop
mov
scas
xchg
pushf
test
push
vmovdqu
lods
orl
insl
aad
mov
test
dec
shlb
shrl
jmp
push
jae
pusha
mov
mov
mov
xor
lahf
pop
inc
pop
movq
mov
leave
pop
mov
stos
xor
mov
or
and
mov
sbb
pop
jne
and
mov
xor
movsb
out
loope
xchg
jmp
loope
sbb
fdiv
test
jmp
inc
cmp
xchg
cmpsb
cmc
test
lahf
in
arpl
dec
rorl
aad
les
into
lahf
or
lea
popa
fs
nop
in
fnstcw
inc
jne
push
pop
jg
ffreep
jnp
dec
cmp
bswap
sub
fdivl
lods
addr16
fst
cmovae
jae
push
mov
mov
push
jg
shll
stc
add
pop
add
add
vmwrite
repnz
stos
sub
or
jmp
popf
xorl
sub
nop
jp
stos
addr16
add
mov
push
arpl
stos
nop
pop
dec
ss
pop
movsl
cmp
addr16
mov
cmp
test
lahf
fiadds
push
fdivr
dec
pusha
jg
jo
jno
mov
mov
pop
mov
mov
dec
jae
sub
fcoml
cli
iret
jno
push
mov
sbb
rcrl
scas
cmp
jb
mov
test
push
xor
inc
enter
adcb
shl
dec
push
rorb
jg
lcall
orb
and
enter
inc
jb
mov
testl
jge
dec
movsb
mov
jne
shrb
or
aam
cmc
into
pop
lods
and
push
ret
sub
std
popf
mov
add
mov
fucomip
lock
cmp
push
add
xor
jnp
adc
mov
add
push
push
xor
mov
inc
jge
mov
mov
into
movsl
adc
add
outsb
sbb
div
cmp
lret
icebp
sbbb
int3
cmp
or
mov
mov
or
cwtl
mov
mov
mov
add
addw
adc
ror
jmp
pop
dec
push
and
xor
and
bound
mov
adc
call
xchg
jmp
cs
lock
test
push
inc
jp
loop
jae
lcall
add
mov
enter
lock
repnz
lods
or
lods
mov
mov
test
mov
cld
jge
hlt
mov
jl
aas
int
out
dec
aad
movsb
dec
outsl
or
push
jp
call
pop
es
shlb
sub
xchg
imul
dec
out
iret
jmp
das
mov
icebp
push
pop
imul
add
xor
je
popa
ja
inc
icebp
iret
test
leave
adc
insl
or
mov
push
cmp
jle
stos
cmpsb
pushf
dec
ret
dec
xchg
mov
test
sbb
fldl
jae
out
lods
xorl
xchg
movsb
aam
xlat
mov
mov
sbb
mov
mov
xchg
sub
scas
add
cld
dec
or
jb
mov
mov
sbb
add
ss
sub
popa
mov
add
and
mov
pop
in
lcall
loopne
jo
std
mov
stos
or
mov
cmc
push
mov
mov
sti
test
clc
push
out
lods
stos
cwtl
in
cmp
xchg
jl
insb
push
hlt
xlat
mov
jo
loop
aas
addr16
fdivrl
out
ljmp
adc
shlb
mov
mov
mov
mov
cmp
cmpsb
push
jnp
std
cmpsb
pop
or
lret
aam
jno
push
add
add
add
popa
and
fsubs
out
dec
inc
ds
jl
mov
sti
xor
dec
mov
mov
bound
fnsave
lret
loopne
insb
jle
xor
mov
repnz
push
push
or
rorb
push
pop
sub
mov
sub
xor
jge
xor
mov
push
scas
mov
sub
sbb
sbbl
inc
inc
jg
pop
adc
push
insb
mov
jecxz
cmp
mov
call
sar
sub
testl
popa
pop
mov
mov
adc
aas
lock
or
cwtl
in
pusha
dec
mov
lods
inc
mov
imul
dec
cmp
mov
or
cmp
pop
pop
mov
sbb
shlb
sbb
or
add
ret
addb
fists
lret
pop
push
insl
push
cli
dec
test
add
jecxz
push
cmp
add
add
neg
std
fsubrs
adc
imul
pop
add
add
fistpll
enter
out
enter
ds
xchg
push
lahf
movsb
lahf
aaa
cmc
sbb
cltd
in
mov
sbb
jp
push
xchg
pop
mov
add
testb
faddl
aad
insl
and
pop
subb
das
fisubl
in
cmpsl
pushf
add
fdivrs
jecxz
lods
add
test
add
or
rorb
cld
stc
mov
or
push
lret
inc
sbb
cmc
jo
gs
aaa
dec
mov
and
pop
jge
push
mov
lahf
push
adc
xchg
mov
mov
pop
pushf
or
pop
pop
pand
push
repnz
xor
fldenv
and
xchg
jmp
dec
out
cmp
leave
aad
rcll
mov
push
push
aad
mov
sarl
mov
movsb
jae
ds
addb
test
mov
jb
clc
jl
sahf
xor
add
push
subb
in
push
mov
enter
sbb
add
pop
add
add
es
js
fcomps
outsb
xor
rcrb
and
push
push
mov
jge
cmp
mov
dec
fldl
hlt
pop
inc
mov
mov
jno
push
movsl
loop
mov
jp
in
movsl
mov
jl
jmp
mov
sub
and
sbbl
add
scas
jle
jg
jo
push
push
jl
inc
loope
subl
daa
in
pusha
lret
cmp
mov
js
ds
pop
and
pop
cmp
cmp
dec
push
outsl
sbb
mov
mov
and
sub
dec
cmp
ficomps
xlat
xor
int3
shlb
push
mov
into
int3
dec
or
xchg
jno
cltd
lods
mov
xor
and
jmp
popa
xor
hlt
mov
xor
nop
jbe
jmp
sub
cmpsb
fwait
pushf
test
loope
cmp
call
lret
sub
lcall
out
and
outsl
fdivs
mov
add
pop
add
add
mov
sub
fcoms
dec
pop
jecxz
sub
jbe
jae
add
movsb
lea
rorl
iret
orb
cmp
push
or
push
cmp
loop
and
pop
mov
or
int3
imul
adc
xchg
sbb
test
rorb
nop
adc
leave
jp
loop
aam
test
ffree
push
lods
bound
js
je
pusha
std
inc
call
jge
adc
jne
lods
andl
into
sub
push
pop
mov
dec
imul
scas
cmp
repz
iret
mov
dec
jb
push
mov
jne
inc
and
add
outsb
pop
adc
pop
mov
mov
jno
and
mov
inc
push
sbbb
fadds
mov
adc
lcall
xchg
ss
aas
push
scas
sub
loop
daa
sub
ja
aad
add
cmp
add
pop
add
add
mov
adc
or
inc
mov
pop
pop
dec
stos
ja
pusha
inc
mov
pusha
push
daa
sbb
or
int3
loop
dec
dec
jle
sahf
insl
cwtl
mov
sbb
sub
or
ret
enter
out
bswap
xchg
push
aas
pushw
mov
mov
mov
pop
xor
mov
clc
fnstcw
sbb
mov
ljmp
or
jmp
pushf
inc
cmp
xorl
div
lcall
adc
add
mov
pop
sbb
mov
xor
jge
xor
xorl
cmp
bound
jns
mov
push
div
lret
pusha
push
mov
jecxz
pop
pop
je
mov
dec
fdivl
mov
in
xor
shlb
imul
lock
insb
lods
inc
add
cmp
jnp
inc
cmp
outsl
mov
xor
add
add
add
mov
and
mov
outsl
lcall
xlat
xchg
jge
mov
jecxz
addb
insl
inc
fmuls
fdivrl
inc
mov
scas
push
jns
xor
das
sub
inc
mov
xchg
push
dec
bound
xchg
add
fistpll
or
jl
in
dec
jge
fbld
adc
inc
inc
xor
fistpl
mov
movsl
jmp
stc
jns
shll
add
xchg
fimuls
in
jecxz
xchg
mov
sarl
shr
mov
call
js
xor
rcr
insl
push
mov
fidivs
pop
sub
loope
inc
or
ss
jg
xchg
outsl
adc
fwait
inc
stc
sub
mov
inc
fdivs
adc
js
cld
adc
cli
mov
dec
push
jle
test
fnop
pop
cmc
sbb
int3
cli
sub
ret
mov
xchg
push
mov
cli
xchg
jle
rol
call
cmp
add
add
add
cmp
mov
into
and
std
sbb
sbb
mov
xchg
jp
icebp
xchg
pop
scas
in
sbb
cs
aaa
pop
test
or
ret
sbb
mov
insl
popf
into
mov
int
xchg
ljmp
aaa
mov
mov
jp
cmp
mov
ds
mov
shl
pop
pop
jp
push
xchg
ljmp
ljmp
int3
loop
pop
stos
ss
and
xchg
shll
ret
test
cmovp
and
or
pop
repz
loope
mov
mov
cmp
jae
popa
push
or
mov
ficoms
or
xor
paddsw
shrb
cmpsl
lahf
mov
dec
mov
and
insb
lea
mov
xchg
push
jmp
adc
faddl
jno
mov
inc
aaa
dec
fwait
jnp
aad
push
adc
stos
aas
jno
add
add
add
push
push
push
and
ljmp
fsubrl
inc
scas
jecxz,pn
jmp
add
push
and
dec
or
fmull
jp
sbb
inc
xchg
mov
shll
stos
xor
pop
dec
xchg
jne
jns
sbb
and
inc
sub
jge
lods
out
add
bnd
inc
push
mov
andnps
mov
add
lret
addl
pop
jns
push
test
jns
fldenv
pop
ret
jne
popa
add
pushw
sbb
shlb
in
cmpl
test
push
xor
ss
imul
shlb
jnp
push
adc
mulb
mov
push
sti
sub
pushf
fs
in
rcpps
ljmp
pushf
sbb
and
jnp
stc
int
dec
leave
das
notb
icebp
jle
aas
or
out
mov
std
mov
fbstp
cmpsb
sub
jb
add
add
add
lods
pusha
jb
cli
dec
pop
roll
sbb
jno
pop
rcl
jp
pusha
add
dec
sahf
ret
dec
aad
sbb
int
sbb
mov
arpl
loopne
jne
push
pop
testb
hlt
into
push
inc
jp
push
sbb
loopne
cmp
clc
pop
pop
stc
sbb
out
pop
inc
cmpsl
enter
xchg
enter
insl
and
push
jo
dec
filds
jmp
mov
sbb
je
stos
out
xor
lods
leave
cmpsl
hlt
add
cli
jge
sub
negb
fnstenv
leave
call
xchg
mov
push
fcomp
add
pop
pop
aam
std
push
aaa
rorl
cmp
gs
mov
inc
pop
dec
inc
mov
xchg
jne,pt
xchg
push
adc
or
xchg
sbb
lcall
pop
inc
xor
test
std
stc
cmp
add
adcl
xchg
filds
xchg
xor
dec
jae
add
add
add
cli
adc
jae
stc
decb
testl
aam
mov
rclb
mov
mov
into
movsb
repz
push
xchg
lret
shrb
or
jo
mov
insl
xor
test
pop
pushf
push
ret
stos
push
lret
sbb
arpl
in
hlt
mov
out
add
or
cmpsb
iret
fcomp
stos
sbb
je
adc
mov
cmpsl
xchg
xor
dec
adc
or
test
mov
dec
neg
loope
pop
rcr
lea
lds
xchg
mov
outsb
notb
mov
in
ret
mull
cmp
jecxz
mov
lds
mov
push
pop
or
inc
cmp
dec
stos
repnz
orb
xor
sub
iret
mov
mov
add
mov
in
push
sbbb
push
cltd
clc
cmp
nop
jl
fldcw
sub
inc
cwtl
push
or
push
jb
ss
or
cltd
add
bound
lahf
aaa
inc
or
je
add
add
add
fldenv
aaa
loope
xchg
in
xchg
mov
mov
por
ljmp
clc
test
lds
call
into
ja
stos
pop
out
fwait
jg
rorb
lret
cmp
in
arpl
fnstcw
cs
test
xchg
loope
fnstenv
jnp
pop
mov
and
add
ss
inc
out
xorl
add
dec
add
popa
pop
rol
out
out
subb
ljmp
or
pushf
jns
lcall
or
inc
imul
repnz
iret
cmp
dec
incl
sub
inc
arpl
jne
push
outsb
sub
lahf
movb
iret
sbb
outsl
xchg
inc
ret
test
sub
jmp
pusha
jg
ss
decl
jno
hlt
fsubrl
fmuls
ret
and
inc
push
or
fwait
repnz
pop
lock
add
add
divl
dec
jno
andb
push
pop
jne
add
add
add
xchg
xchg
test
adc
cld
in
mov
pop
cmpb
or
mov
lret
insb
je
movsb
lods
insb
inc
add
cmp
jbe
xchg
add
int
mov
dec
add
inc
enter
xchg
mov
dec
rorl
jl
adc
jb
scas
mov
jecxz
fdivrs
mov
xchg
and
pop
push
mov
cmpsl
adc
inc
push
jns
and
enter
fisubrl
rorl
pop
or
xor
dec
cltd
pop
rcl
inc
cmp
gs
data16
in
add
stc
or
mov
shr
pop
insl
pop
cmp
inc
nop
or
jle
sbb
mov
fsubr
adc
mov
insb
repz
pop
cmc
dec
dec
push
imul
ret
inc
xchg
enter
cmp
popf
xchg
cmp
inc
in
push
sub
in
mov
pop
clc
cmp
lock
inc
ret
xchg
add
fisubs
mov
xchg
inc
lock
xor
jg
bound
add
add
add
sbb
or
flds
je
imul
stc
push
xor
add
xchg
xchg
repnz
push
cmp
aas
dec
stc
out
inc
cmpsl
mov
and
jmp
pop
adc
out
dec
test
or
aam
sbb
pop
xchg
jnp
and
push
push
mov
adc
das
jle
mov
push
cmp
mov
mov
lea
xor
sahf
jl
xchg
mov
divl
js
mov
ficoms
aaa
pop
into
adc
dec
adc
sbb
sbb
pop
aam
or
mov
mov
xor
and
into
popf
dec
add
push
imul
int3
data16
mov
popw
movsl
pop
int3
add
nop
sar
or
ret
insb
add
mov
push
hlt
mov
sbb
fcmove
xor
lahf
sbb
sub
pop
mov
fs
cmc
push
push
fstpt
and
add
add
mov
outsl
jne
ljmp
jmp
add
pop
add
add
arpl
push
out
inc
cmp
in
subb
test
out
mov
insb
iret
push
mov
pusha
sub
mov
mov
fldl
pop
xor
ds
lods
icebp
movsl
jg
mov
jbe
cmp
hlt
ret
xchg
push
inc
mov
dec
cltd
push
imul
js
loop
xchg
or
imul
lds
push
stc
xchg
sbb
movsl
lods
iret
test
pop
jne
lcall
lret
sbb
cli
mov
and
jne
test
or
inc
xchg
cmc
jne
xor
jne
cmp
add
adc
adc
movsl
in
ror
and
js,pt
orl
push
out
shr
pusha
jg
rclb
clc
xor
sarb
sub
xchg
xorl
bound
and
das
jo
adc
sub
push
roll
orb
decl
push
inc
or
add
pop
add
add
loopne
out
fsubs
and
cwtl
cld
dec
outsl
xor
mov
loope
andb
lea
imul
stc
dec
cmp
shll
mov
push
fnstsw
sbb
repz
int
jge
mov
cmpb
mov
repnz
loopne
aas
int3
xor
fstl
dec
pop
jo
shrl
cmp
ret
and
jns
nop
ds
and
cmp
cli
dec
pop
sbb
dec
fwait
push
ljmp
decb
fs
dec
sub
push
enter
pop
xchg
mov
dec
movsl
dec
cmp
adc
sub
subl
mov
leave
scas
xchg
daa
pop
xchg
inc
jl
aam
je
pop
cmp
jb
fistps
xor
xor
lret
mov
lahf
push
out
sub
rclw
insl
aas
lret
out
mov
pop
in
clc
mov
in
add
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
cmp
and
out
and
mov
jmp
jl
lahf
inc
xor
test
jns,pn
sub
sub
mov
adc
out
loope
dec
adc
sbb
adc
sti
and
mov
and
insb
xchg
insb
dec
add
xor
inc
mov
mov
jg
mov
mov
rolb
call
popa
mov
mov
and
pop
and
sub
push
or
dec
cmc
scas
lret
dec
nop
in
mov
es
subl
pop
sti
bound
sbb
fdivrs
fcomi
std
outsb
xchg
scas
loopne
mov
arpl
cmpsb
mov
fcoml
pop
js
jns
mov
jecxz
mov
rolb
dec
pop
xchg
shll
push
add
lret
and
test
pop
mov
lret
fcmovnbe
push
sub
pop
pop
mov
inc
dec
jo
lods
inc
push
or
push
jl
js
mov
cmpsb
lods
rcrb
cmp
jp
add
add
add
int3
push
push
jecxz
and
mov
xor
adc
dec
or
clc
mov
rcrb
jnp
xchg
jge
pop
jns
push
mov
repnz
pop
mov
sbb
out
dec
push
not
push
or
dec
arpl
sub
seta
jg
inc
daa
aas
xchg
xchg
push
dec
fwait
ret
subl
in
lea
mov
adc
sbbb
daa
jge
cltd
stos
loopne
insb
movsl
xchg
adc
out
xor
loop
rorl
sub
jae
sbb
jnp
jp
jae
rolb
mov
cmc
scas
xchg
sahf
cmpsl
outsl
pop
dec
inc
enter
jnp
adc
cvtps2pd
stos
gs
movl
mov
or
repz
test
ljmp
fucomi
fisttps
rorb
sti
fmuls
mov
fidivs
xor
cli
mov
sti
dec
xor
add
add
add
ljmp
sti
js
aam
sahf
push
pushf
jmp
mov
adc
dec
mov
add
sbb
scas
mov
dec
lea
faddl
inc
out
inc
add
adc
or
adc
ja
mov
inc
push
inc
xor
mov
push
mov
pop
cmp
sbb
outsl
das
xor
ret
jmp
rorl
or
data16
jle
mov
mov
lret
mov
bound
mov
push
ja
push
or
sti
fistps
xor
arpl
xchg
scas
sub
inc
jbe
test
es
mov
mov
mov
lret
nop
mov
pop
add
inc
lahf
push
mov
xchg
ljmp
xor
pop
cmp
adc
adc
ret
sub
test
mov
std
test
inc
jbe
stc
arpl
decb
add
aad
hlt
popa
mov
inc
clc
jg
xor
loopne
lcall
lea
add
cwtl
push
push
push
lea
add
mov
out
dec
je
push
mov
test
icebp
mov
sahf
mov
sub
sbb
pop
jns
jns
xor
dec
xchg
jmp
sub
dec
mull
mov
scas
in
add
mov
sub
jae
loop
loope
or
ret
fwait
stc
clc
mov
and
adc
insl
icebp
xlat
ret
loopne
in
cmpsb
xchg
pop
insl
cmp
jge
push
cmp
dec
add
les
inc
decl
push
jae
enter
movsb
push
cltd
cmp
dec
xchg
dec
cmp
xchg
loop
pop
mov
sbb
sti
inc
mov
xchg
mov
lret
sub
mov
pop
xchg
mov
dec
xchg
hlt
roll
sarl
dec
xchg
jl
jb
sbb
xchg
clc
add
xchg
xchg
jns
dec
out
movsb
arpl
inc
adc
add
add
xchg
push
mov
loop
and
push
call
or
ss
lret
loopne
sub
add
push
leave
iret
in
adc
int
xlat
cmp
arpl
ret
out
stos
sbb
stos
imul
dec
or
rcll
cltd
insl
sahf
bound
jo
and
inc
jle
pop
ret
dec
cmpsb
movb
mov
div
push
inc
stos
mov
add
inc
cmp
pop
enter
or
pop
add
jbe
sub
adc
push
subb
loope
jg
jp
cmp
outsl
inc
into
jb
in
call
out
cli
add
js
inc
inc
js
frstor
jge
or
outsb
xor
out
push
push
lahf
mov
mov
lock
rcr
fisubl
je
jns
jb
out
jbe
lea
je
in
fs
loopne
cwtl
lods
push
aaa
ret
mov
pusha
call
add
scas
lcall
xor
xchg
rcr
rcrl
add
enter
in
xchg
or
xchg
fmuls
int
sbb
mov
insl
cmp
inc
pop
popa
mov
std
or
fwait
push
or
dec
xchg
jle
jecxz
inc
mov
inc
xchg
subb
ret
adc
mov
jae
test
adc
imul
sbbl
int3
outsl
sub
cmpsl
push
mov
add
jb
in
jecxz
stos
pop
dec
jnp
xor
mov
mov
mov
mov
pop
fwait
aaa
popa
add
xchg
cwtl
jno
cmp
xchg
loop
xchg
out
add
sbb
outsl
andl
fsubl
scas
aam
cwtl
int
or
xchg
sub
mov
repnz
xchg
sub
out
push
lahf
loope
sbb
test
push
and
repnz
lahf
push
lds
push
lahf
adc
popf
subb
lret
jbe
sbb
fistpll
add
mov
idiv
fnsave
jne
enter
add
add
add
fisubrs
mov
bound
cli
mov
mov
add
pop
push
pop
subl
inc
adc
scas
mov
jb
dec
or
add
movsl
pusha
jo
adc
pop
scas
cli
sbb
dec
cmp
cmp
pop
xor
pop
movsl
adc
push
mov
cmp
cmpsb
nop
pop
orb
add
jmp
fcmovb
xor
arpl
loop
cmp
mov
outsb
cmpsl
mov
andb
ja
jp
insl
ja
mov
int3
pop
frstor
ror
cwtl
sbb
xchg
imul
cmp
sarl
mov
daa
insb
pop
insl
rcll
stos
jne
cwtl
divb
loop
fstpl
aas
call
out
or
xorb
adc
push
inc
dec
cmp
jg
das
dec
inc
fcmovnb
pop
fldcw
jecxz
imul
xchg
jb
lea
inc
mov
jno
jle
xchg
call
push
xchg
push
test
add
pop
add
add
insl
and
fisttpll
nop
sbb
ffreep
mov
or
in
aam
xor
lcall
fdivrp
cltd
int
pusha
wrmsr
addr16
cwtl
jmp
push
push
enter
ret
push
push
mov
xlat
adc
test
lea
scas
inc
and
inc
aam
in
cwtl
adc
into
call
mov
push
loop
sub
jne
cli
bound
pop
xchg
xchg
mov
stos
dec
dec
sub
or
lods
stos
repz
xchg
enter
aaa
cmp
in
inc
jne
hlt
lea
int
jg
popf
mov
mov
push
test
outsl
dec
adc
jmp
sbb
mov
mov
popa
sub
lret
or
fdivs
and
aam
rcll
mov
cmp
lea
loop
sub
mov
in
scas
subb
pop
leave
out
mov
jno
out
pop
dec
xchg
insl
push
stos
add
sti
iret
test
sub
xlat
xchg
jmp
scas
addl
add
mov
dec
shr
fdivl
shl
xlat
jg
xor
fsubrl
rorl
cmp
inc
push
push
sub
cmp
jno
and
add
or
pushf
sarb
and
jne
and
lret
sti
xchg
adc
fwait
clc
xor
push
mov
mov
aam
pop
xchg
adc
fdivrl
push
fimuls
scas
sbb
sbb
dec
sub
mov
imul
imul
into
add
int3
jmp
xchg
test
leave
imul
lock
and
outsl
shrb
xchg
xchg
jo
movb
dec
push
leave
mov
bnd
stos
or
call
je
scas
and
fwait
sub
not
int3
mov
add
mov
sarb
inc
add
aas
jns
out
call
rcrb
cltd
push
mov
nop
movsb
and
add
outsl
xchg
inc
lahf
sti
hlt
out
mov
mov
dec
mov
add
pop
add
add
adc
ret
popa
jecxz
aaa
or
fisttpll
adc
inc
cmpsl
pop
jne
loope
inc
push
in
pop
jae
dec
or
and
push
test
xorb
call
repz
rcr
pop
cmp
pop
jle
sub
mov
jnp
fcomps
out
xchg
mov
adc
scas
scas
fnstenv
shlb
mov
dec
cmp
daa
fwait
sbb
and
out
mov
je
test
sbb
jb
out
pop
ds
ret
add
int
push
add
lret
fdivrl
mov
inc
out
lods
adcb
mov
das
add
test
jno
and
bound
test
mov
setbe
xchg
aas
cld
imul
inc
fs
int
loopne
and
rcll
mov
in
fnstsw
lret
push
cltd
dec
dec
test
testl
add
add
mov
cmp
jb
mov
pop
add
add
xchg
jne
out
jae
pop
jle
repnz
cltd
dec
call
and
mov
aam
and
push
mov
ljmp
fildl
sbb
and
jne
and
stos
xchg
pop
repnz
hlt
lods
imul
pop
enter
xchg
sub
sbb
push
fiaddl
jno
push
data16
in
dec
mov
cltd
pop
shrl
mov
sbb
cli
int3
out
jne
xchg
push
movsb
jl
push
or
mov
in
jge
push
mov
inc
or
dec
or
js
and
push
dec
add
pop
js
xchg
xor
jb
xor
lret
iret
jbe
jmp
xchg
ret
nop
test
dec
stos
xchg
inc
jle
add
jl
movsl
adc
movsl
or
inc
push
je
or
into
in
outsb
add
lcall
add
pop
test
ljmp
roll
repnz
add
jae
sbb
fiadds
cmpsl
pop
sbb
pop
sub
dec
jge
pop
repz
push
push
push
sbb
rclb
and
fs
movsl
dec
inc
loopne
dec
push
test
dec
mov
mov
cs
fimuls
mov
adc
jecxz
into
xchg
in
jmp
aaa
imul
mov
push
mov
mov
gs
cmpsb
loope
lcall
cmp
es
push
sub
aad
into
test
mov
test
dec
adcb
push
jecxz
pop
mov
into
nop
xor
ljmp
out
ss
int3
lods
inc
inc
mov
pop
jle
ja
lods
xor
jg
int
mov
into
xchg
dec
mov
add
xor
sbb
sti
outsl
add
xchg
add
outsb
ret
cmp
sub
adc
pop
add
add
add
arpl
jnp
sbb
adc
push
or
test
add
add
add
je
lret
lret
cmpsl
mov
xchg
hlt
dec
or
pop
repnz
dec
nop
es
cmc
sub
mov
imul
push
push
cltd
or
and
push
dec
adc
mov
and
push
adcb
inc
pop
sub
sahf
cmp
pop
mov
xor
arpl
jnp
push
push
inc
mov
incb
inc
fstp
sbb
cli
shr
inc
jo
mov
in
insl
cmp
out
or
xchg
dec
cmp
hlt
jle
in
out
std
stos
cltd
lods
inc
jbe
loope
ds
mov
pop
jns
push
push
dec
mov
cmp
sbb
and
mov
push
ds
mov
xor
mov
filds
and
sub
test
sbb
outsb
sbb
orl
xchg
pop
adc
fwait
jl
mov
cmpl
into
cmpsb
and
pusha
add
push
aas
or
mov
out
mov
rolb
add
dec
ljmp
push
das
adc
push
popa
jnp
fdivl
inc
sarl
dec
pop
int
and
insb
daa
les
mov
mov
hlt
jecxz
xor
repnz
in
mov
cld
ds
je
dec
iret
andl
insb
pop
dec
ljmp
jl
mov
aam
jb
or
addb
pop
dec
sub
std
es
dec
or
les
andb
cs
shll
and
adc
lock
fisubs
aam
andl
stc
mov
xchg
xor
xchg
add
sub
cmp
insl
jo
fidivrs
scas
rorb
aad
xor
fwait
mov
notb
repz
jecxz
cli
fistps
add
mov
lret
push
je
xchg
aad
mov
cmp
insb
adc
push
in
gs
lea
pop
int
insb
fidivl
sub
in
push
push
flds
add
nop
fildl
call
dec
jle
dec
add
fcomps
popf
add
and
sub
fisubrl
mov
je
cltd
je
sbb
push
and
nop
gs
jmp
fldl
pop
xor
pop
push
add
fidivrs
fs
outsb
mov
adc
nop
dec
or
pop
stos
xchg
xchg
shlb
je
push
pop
sbb
jl
or
cmpsb
sahf
cli
dec
sti
xor
push
in
adc
aas
dec
add
inc
popa
ljmp
xor
test
in
sub
in
push
adc
ljmp
push
fbld
pop
nop
inc
mov
aam
mov
daa
movsl
movsb
pop
je
andb
jle
pop
inc
mov
idivb
test
sub
inc
jne
in
xchg
scas
pop
popa
addr16
imul
inc
mov
and
and
cmp
mov
xchg
lret
loopne
add
pop
add
add
sbb
or
pop
mov
mov
and
push
adc
cld
sub
fsubl
mov
xacquire
std
pushf
jg
add
cmp
cwtl
les
fwait
mov
xchg
lods
dec
inc
int3
inc
imul
or
cmp
sar
jle
std
lcall
lcall
push
pop
lea
xchg
scas
xchg
push
stos
call
mov
mov
xchg
xchg
fstps
daa
dec
push
and
xchg
jg
test
xlat
ds
shrl
cmc
fidivrl
sub
test
enter
fs
pop
insb
adc
data16
sub
ljmp
mov
inc
cs
push
mov
roll
imul
cld
cwtl
pop
repnz
ret
mov
jl
xchg
xor
pop
imul
sar
inc
idivb
and
push
push
mov
lcall
add
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
mov
adc
and
loopne,pn
fnsave
hlt
fistpll
sub
jmp
cwtl
jmp
fcoms
addr16
cmpsb
scas
jg
jle
lcall
pop
nop
mov
adc
xor
jge
jl
std
sub
aaa
jo
and
adc
ret
stos
fcmove
xor
rolb
pop
aas
pop
aaa
adc
and
dec
push
test
cmpl
sarl
adc
pop
iret
ljmp
inc
mov
pop
sbbl
xchg
inc
mov
ljmp
add
sahf
ds
adc
mov
sbb
nop
imul
lds
in
jo
cmp
cltd
xchg
shrb
push
cmp
sub
cmp
cmc
scas
and
or
daa
mov
dec
addr16
lds
sbb
inc
ss
mov
add
fcomps
movsb
dec
inc
das
gs
ja
mov
add
adc
std
and
xchg
rorb
mov
add
add
add
mov
clc
ja
repnz
adc
inc
lds
dec
push
mov
insl
into
adc
and
scas
jl
or
repz
pop
push
cld
adcb
add
sub
or
inc
cmp
mov
test
mov
cmc
pop
xchg
add
inc
ljmp
stos
pop
mov
jl
add
loopne
mov
push
insl
add
mov
sub
gs
xchg
loop
add
add
inc
add
mov
xor
add
scas
leave
mov
dec
sbb
xor
cmp
jecxz
push
cmp
cld
ds
mov
imul
push
leave
lahf
or
mov
push
dec
mull
scas
loope
ficomps
mulb
orl
xchg
push
adc
jmp
popf
push
shl
push
mov
pop
dec
jg
mov
ss
hlt
in
mov
add
mov
add
cmc
mov
add
add
add
sbb
jb
xchg
test
test
hlt
repnz
xchg
and
push
pushf
jb
sub
stos
leave
test
sar
jae
xchg
pushf
hlt
sbb
and
in
dec
sub
push
jo
mov
lods
mov
stc
xchg
leave
pop
dec
lds
nop
int
mov
sahf
fst
xor
scas
out
inc
div
movsl
mov
popf
mov
mov
fldcw
jge
repz
push
mov
or
push
jb
xchg
push
add
xchg
xchg
push
jae
data16
lcall
lds
aad
jne
in
push
mov
dec
data16
call
sti
fnsave
jbe
mov
cli
icebp
mov
in
ret
stc
es
mov
mov
push
jne
movsb
xchg
dec
hlt
inc
sbb
mov
test
fcmovnb
notl
aas
lret
es
mov
pushf
cmp
jno
and
mov
pop
incl
andl
inc
or
test
out
xchg
out
movsl
fs
mov
add
add
add
inc
inc
mov
mov
and
loop
adc
mov
shlb
add
sub
inc
push
shl
inc
xchg
nop
lods
cli
stos
std
pusha
pop
adc
jnp
daa
mov
push
out
lcall
cmp
sbb
sbb
std
mov
cld
out
je
xor
adc
or
jae
aaa
hlt
incl
iret
sub
or
ret
pop
xor
mov
and
pusha
pop
lret
js
sahf
jp
in
xchg
push
in
jno
inc
jmp
xor
mov
adc
inc
cmp
fadds
jbe
mov
dec
movsl
xchg
movsb
insl
decl
dec
int
dec
leave
dec
hlt
insl
gs
cmp
stos
lcall
imul
xchg
scas
ljmp
push
mov
out
test
mov
cmp
ljmp
ljmp
dec
push
ret
movsb
add
add
add
lret
add
or
dec
aad
add
push
rorl
hlt
lret
out
ljmp
push
cltd
punpckhwd
in
sti
push
or
cmp
in
sub
in
xor
xchg
testl
popa
jne
sub
xchg
or
push
push
dec
add
into
clc
inc
mov
push
push
daa
and
jle
cmpsl
stc
mov
dec
andb
dec
mov
jecxz
jmp
xchg
pop
filds
dec
ss
popf
roll
push
cmp
xor
mov
pop
stc
shll
mov
pop
call
test
ss
pushf
push
push
das
jne
sbb
jle
inc
out
aad
fists
std
lcall
jge
fcoml
imul
aaa
js
jbe
std
adc
fbstp
mov
pop
mov
js
std
sub
xor
add
add
add
aaa
shlb
cmc
div
mov
shrl
or
add
sti
movsl
mov
cwtl
adc
loope
adc
outsb
sbb
les
leavew
adcb
popf
icebp
jns
dec
jmp
pop
inc
and
pop
mov
xor
add
out
mov
or
leave
push
orb
inc
mov
mov
fwait
add
inc
inc
mov
stc
dec
mov
jmp
fimuls
in
shrb
jnp
or
push
cld
sbb
test
orb
push
fs
add
inc
add
jmp
dec
pop
in
lcall
jbe
push
jae
push
pop
push
mov
leave
mov
outsb
fadd
outsb
sbb
or
or
loop
xor
jbe
mov
hlt
jmp
lret
fistpl
std
mov
outsl
pop
jno
lahf
daa
push
or
inc
ds
ret
jge
mov
dec
lds
cltd
enter
xor
mov
popf
loop
pushf
cmpsb
push
add
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
popf
ds
scas
inc
mov
lret
xor
cmpb
int3
hlt
add
and
test
ljmp
sub
add
add
ret
xchg
and
in
and
out
test
gs
repnz
outsb
daa
add
add
out
xor
fsubp
lods
out
add
xor
cmp
popa
arpl
add
mov
pop
jmp
flds
nop
xchg
push
xor
addb
nop
inc
and
outsb
loope
or
ret
ret
mov
mov
out
stos
cmp
jg
add
test
adc
pop
pop
or
sbb
inc
mov
push
xor
cmp
adc
incl
insb
cmpsb
outsl
sbb
ret
mov
inc
cmp
mov
mov
stos
loopne
loop
sub
xchg
jb
sbb
add
arpl
cmpsb
jcxz
mov
add
sbb
add
arpl
ljmp
mov
imulb
cwtl
clc
jbe
cmpl
adc
mov
ret
test
lcall
orb
or
shrb
repnz
ret
push
xchg
jg
in
cmp
mov
mov
sbb
xchg
inc
inc
xchg
cltd
adc
add
fsubs
in
add
imul
mov
xchg
outsb
fcoms
outsb
jne
mov
cmp
andl
sbb
push
mov
sbb
mov
dec
shrl
cmp
and
daa
lock
lret
lcall
sub
adc
xchg
test
push
inc
out
inc
leave
mov
mov
cld
pop
jle
jne
mov
insl
jb
add
lahf
cmp
push
imull
push
dec
iret
sbb
insb
push
mov
clc
jnp
jg
in
cli
push
mov
add
add
add
add
jecxz
orl
inc
mov
mov
jbe
jo
cmpsb
in
in
mov
fdivrl
mov
jae
push
add
jge
cltd
sti
cs
fisubrl
ljmp
pop
rcrl
mov
inc
push
mov
mov
xchg
rorb
addl
pusha
xor
mov
jo
ja
mov
mov
fstps
mov
jg
inc
fmull
pop
pop
fcomps
add
sub
inc
pop
or
pop
in
mov
push
xchg
mov
stos
cmp
cli
imul
push
adc
pop
dec
jmp
fstl
mov
addr16
pop
jge
dec
push
add
iret
push
push
shrl
pop
cmc
mov
imul
add
rcr
push
jns
test
scas
add
add
lods
faddl
fbstp
cld
fidivl
in
fldt
xchg
add
pop
add
add
pop
xlat
push
clc
insl
xor
lds
je
sub
std
shrb
pop
mov
outsl
or
ret
pop
dec
out
adc
ljmp
pop
push
dec
mov
push
sub
or
add
arpl
add
xchg
mov
push
bound
xchg
adc
popa
add
cmp
sub
sub
rcrl
lcall
inc
mov
push
push
mov
lret
rol
inc
ljmp
popa
inc
jbe
into
lret
adc
fadds
lea
xor
cs
negb
push
jmp
sbbl
stos
cmpsb
push
jns
in
dec
cmpl
sub
xor
imul
cmp
icebp
pop
loop
sbb
lahf
and
test
test
dec
cmp
jmp
mov
iret
es
inc
test
jl
sar
std
jle
testb
cwtl
int
loop
xchg
add
pop
add
add
or
daa
fildll
adc
xor
jle
fst
ds
or
popf
test
fnstsw
push
int
sti
xchg
mov
xor
mov
pop
jge
bound
and
cmpsl
pop
movsb
out
inc
cld
inc
jne
cmp
jno
lods
hlt
push
sbb
enter
jmp
pop
es
pushf
adc
test
ds
sahf
or
xor
dec
addr16
lahf
jne
xlat
cli
mov
sahf
push
or
aaa
mov
paddq
xor
sbb
scas
jns
push
mov
call
loopne
xor
in
sahf
add
jmp
sti
pop
and
enter
dec
imul
jle
out
repnz
cmp
push
sub
clc
fisttps
mov
mov
test
rorl
adc
xchg
jecxz
push
lods
aam
add
cwtl
or
stos
xchg
cmp
mov
xor
add
pop
add
add
addb
dec
sahf
nop
imulb
lods
pop
sub
pushf
or
dec
test
pop
bound
ss
push
push
dec
sahf
sbb
xchg
mov
sbb
inc
xor
mov
pop
pop
test
loop
mov
outsb
or
sbb
hlt
or
repz
leave
jne
push
ja
add
gs
or
push
loop
pop
jne
popf
loop
sbb
cmpsb
mov
ljmp
sbb
loop
mov
sub
mov
sbb
fst
adc
arpl
push
mov
orl
cmp
je
mov
pop
push
cmp
xorb
inc
xor
es
or
lret
mov
leave
pushf
mov
or
leave
mov
mov
jmp
push
pop
jae
bound
cmp
cmpsl
lock
dec
sahf
loope
test
add
fwait
and
popa
mov
sub
mov
pop
add
add
scas
ret
adc
push
ret
push
sbb
mov
out
dec
insb
push
dec
loope
mov
aas
imull
sub
sub
ja
mov
adc
fbstp
out
mov
sbb
cld
ljmp
cmp
out
jnp
inc
bound
jg
inc
pop
pop
jns
jb
or
jmp
mov
mov
lock
inc
fwait
aas
mov
repnz
lods
out
aaa
adcl
mov
dec
idivb
mov
out
or
mov
mov
xchg
pop
into
cmp
add
scas
mov
sahf
mov
or
sbb
stos
push
cmp
ret
clc
pop
xchg
mov
pop
mov
xchg
add
repz
jo
rclb
pop
lods
inc
mov
out
mov
mov
aam
iret
cmc
xchg
jns
and
fwait
mov
ret
push
and
xlat
aas
insb
lods
ret
mov
or
add
pop
add
add
sahf
scas
sub
sub
push
out
or
xor
dec
lcall
or
adc
xchg
loop
ficompl
out
sub
rcll
push
scas
lock
cltd
imul
mov
mov
decb
mov
cs
rol
montmul
cmpsb
xchg
dec
ficomps
rcll
xchg
sahf
hlt
jbe
mov
stc
es
adcb
pop
mov
int
sarb
in
lret
call
inc
xchg
lock
push
fnstsw
lahf
lcall
stos
xor
push
gs
add
cli
das
cmp
out
pop
int
mov
jge
push
lret
out
xchg
adc
sub
xchg
xchg
push
ret
mov
fdivs
pop
dec
fmulp
sbb
pop
in
in
dec
add
dec
dec
into
out
pop
dec
jno
ret
mov
sub
imul
outsl
fistpll
fcoml
add
pop
add
add
aaa
das
cld
out
add
jb
enter
pop
jmp
addr16
add
rorb
rcrb
test
in
dec
jne
xor
push
sub
ljmp
test
sbb
bound
leave
iret
pop
mov
ja
mov
ja
cltd
dec
nop
sbb
lcall
mov
inc
push
xlat
fnstsw
lret
cmp
mov
pop
sbb
add
mov
scas
js
xchg
xchg
push
mov
mov
scas
jbe
mov
push
ret
jecxz
xchg
insl
cli
loop
and
orl
pusha
jp
and
cltd
loop
jecxz
xorb
fcomi
sbb
aas
repnz
pushf
and
insb
mov
mov
insl
pop
cmp
nop
and
pop
es
ss
mov
pop
ret
push
fdivl
mov
push
pop
outsb
daa
pop
imul
loopne
rcll
sub
jmp
fildl
mov
mov
add
lret
sbbl
xorl
cld
mov
add
pop
add
add
inc
ss
sub
cmpsb
aad
push
call
js
inc
inc
lods
arpl
xor
or
mov
adc
xchg
aaa
les
mov
adc
jae
inc
mov
sbb
adc
mov
sbb
jg
aas
jbe
sub
in
or
jnp
cmpsl
aam
sti
and
xchg
pop
lahf
mov
sbb
mov
movsl
into
adc
pop
mov
movsb
fs
cmpsl
insb
cmp
stos
and
pop
je
clc
lret
mov
mov
cmp
add
sbb
sub
cltd
roll
cmp
mov
ljmp
xchg
push
cld
xor
aad
dec
aas
hlt
icebp
nop
in
gs
shll
mov
fnstenv
sub
cmpsl
shrl
jns
pop
lock
lock
iret
in
shll
mov
add
cmpsl
mov
add
mov
imul
sbb
leave
dec
hlt
cltd
fists
add
pop
add
add
movsl
ljmp
sbb
lea
cmp
aam
scas
jno
mov
xchg
fldt
fs
imul
pop
adc
rorb
outsl
mov
pusha
sub
xlat
lret
push
insb
test
aas
repnz
ret
push
cmp
addb
inc
adc
test
and
je
pop
stos
fmull
xlat
cmp
loopne
aas
nop
pop
adc
adc
cltd
fstpl
adc
mov
std
shll
dec
mov
mov
push
stos
sub
push
and
mov
test
pusha
sbb
sbb
and
movsl
insl
enter
xchg
addr16
sub
rclb
push
ret
arpl
jge
daa
in
test
or
adc
or
test
push
insl
sti
jns
div
jb
jl
fidivrl
filds
shrb
add
mov
cs
stos
xchg
xor
add
add
add
push
pushf
adc
jmp
jg
ja
stos
dec
dec
sub
iret
jo
mov
sbb
push
out
scas
push
jno
scas
mov
aaa
inc
push
lds
sbb
out
arpl
in
loopne
aas
mov
pop
loop
imul
push
lret
or
sbb
and
xchg
fisttps
and
test
or
addb
xor
push
add
daa
mov
sub
or
cmpsb
cmpsb
inc
or
aaa
adc
hlt
outsl
push
lret
outsl
xchg
pop
rcrl
shrl
shl
pop
sbbb
inc
pop
icebp
icebp
jge
push
sub
or
iret
sbb
push
std
mov
test
xchg
cwtl
mov
xchg
jne
jbe
pusha
enter
xchg
outsb
ficoml
mov
test
add
popf
or
pop
dec
arpl
ss
cs
arpl
test
add
ja
out
xor
cld
pop
ljmp
pop
add
add
popf
out
mov
cld
mov
push
xchg
or
push
inc
cld
pop
rclb
mov
sub
and
fcoml
adc
mov
mov
xchg
jge
jge
adc
pop
mov
popa
mov
cmc
or
xor
pop
mov
or
push
mov
add
mov
dec
out
cwtl
mov
pusha
into
rorb
cs
jnp
je
jne
test
push
aaa
scas
mov
repz
lret
push
movl
fstpt
adcl
lcall
in
xchg
sub
inc
xor
cmpsb
loop
adc
dec
inc
mov
inc
cmp
icebp
gs
inc
aaa
mov
xchg
cmp
js
mov
mov
rep
jns
and
sub
mov
roll
add
mov
rcrb
es
or
imul
cmc
int3
rol
inc
cmp
xor
xchg
add
pusha
test
je
push
sub
fdivrs
popf
add
pop
add
add
mov
shrb
int
in
adc
push
cs
out
scas
or
mov
mov
icebp
cmp
jmp
jl
ds
push
imul
cltd
outsb
data16
jne
mov
cltd
xlat
sub
movsb
xchg
imul
mov
or
dec
test
mov
imul
and
push
jae
push
mov
sarb
imul
cltd
add
pop
mov
xor
lods
mov
and
cwtl
sbb
xchg
in
pop
sbb
xchg
xchg
fstps
outsb
pop
int3
stos
popa
pushf
fmull
cmp
in
push
imul
xchg
and
mov
mov
xchg
stos
stos
scas
pop
cs
cmpb
scas
sahf
mov
push
or
stos
into
xorb
lret
wrmsr
pop
inc
aam
shlb
bound
cs
mov
inc
sbb
fistpll
push
mov
ds
inc
or
stos
add
add
mov
repz
repz
andl
add
add
outsl
dec
sbb
call
pop
in
iret
popa
repz
sbb
js
popf
pop
push
cmpsl
mov
xor
aaa
push
scas
mov
jle
and
xor
lret
shll
je
and
mov
mov
jecxz
mov
call
xor
in
dec
xor
and
or
mov
subl
xchg
js
mov
stos
xchg
xlat
mov
ds
loopne,pn
jns
ljmp
scas
es
stos
lock
push
adc
sbb
mov
cmpsl
cld
mov
mov
fldenv
and
xchg
outsb
or
aaa
fcmovnbe
idivb
jle
xchg
lret
outsl
cmp
xchg
inc
cmp
lret
fnsave
ficoms
mov
xchg
fbstp
xor
nop
stos
fcmovnb
adc
push
movsl
fistpl
in
in
movsb
mov
mov
pop
or
jb
lahf
add
pop
add
add
add
lea
dec
rorb
cwtl
sub
ds
inc
cmpb
sbb
addr16
insb
pop
mov
xor
enter
dec
fsubs
int3
aaa
and
bound
addb
in
ss
cld
xor
pop
jge
sbb
adc
cli
fists
pop
sub
lock
mov
push
sbb
ja
mov
out
ljmp
inc
or
repz
inc
sarl
push
push
js
stos
mov
sub
pop
xchg
adc
rorb
cmc
repnz
int3
mov
push
fistps
scas
push
lods
xor
mov
pop
into
jbe
push
aas
stos
adc
push
mov
jo
rorb
filds
lret
ja
lods
out
cs
and
cmp
imul
hlt
cmpsl
push
pusha
cmp
and
lods
addb
xlat
or
sbb
stos
sbb
repnz
dec
mov
cmpsb
lods
add
leave
cmc
adc
out
pop
dec
adc
adc
inc
xor
lea
popf
pop
mov
sbb
ja
enter
inc
into
sarb
cltd
jo
push
imul
inc
stos
inc
call
jmp
out
push
imul
imul
stos
sbb
cs
dec
cwtl
shll
loopne
xor
sub
inc
ja
mov
xor
mov
not
lods
test
sub
fsubrl
jge
lcall
and
jno
outsl
and
addb
jl
jp
fisttps
jns
int
les
jns
hlt
popf
int3
sub
repnz
gs
imul
gs
or
cld
sbb
pop
pop
ret
ret
mov
pop
mov
shll
inc
lret
popf
pop
push
popf
stos
xor
jmp
mov
incl
push
inc
fdivl
push
adc
pop
add
add
pop
stos
jle
sbb
mov
mov
sbbb
les
pop
cmpsl
adc
test
fildll
dec
push
shrb
out
lcall
sbb
xor
adc
in
out
xchg
bound
ret
ds
push
fistps
mov
sahf
push
inc
popa
into
xchg
shlb
push
sti
insl
mov
sub
orl
sub
nop
pop
jnp
or
popa
ljmp
out
repz
gs
xchg
inc
test
and
les
into
and
jle
cltd
and
add
adc
lods
pop
ret
imul
icebp
pop
dec
je
jge
rolb
add
sbb
sbb
leave
test
rolb
arpl
ds
xor
cmpsl
xchg
mov
cmp
mov
mov
nop
pop
and
adc
mov
push
push
mov
mov
add
add
lods
cmp
and
or
pushf
divb
int
cmp
cmc
pop
les
loopne
adc
faddl
cmc
fcmove
adc
mov
ret
jbe
xchg
dec
addl
mov
icebp
fnsave
arpl
or
or
loop
pop
jne
jp
in
sahf
mov
sbb
adc
cld
enter
stos
cmpsb
xor
push
les
cmp
das
sbb
adc
js
xor
push
xchg
jecxz
jne
jmp
push
lods
in
and
xlat
xchg
adc
sbb
sub
or
mov
jns
push
inc
scas
nop
repnz
and
or
or
mov
outsl
push
sub
mov
cli
and
shrb
icebp
mov
es
imull
call
push
jmp
xchg
mov
lret
mov
inc
xchg
idivl
jne
push
in
stos
lret
jmp
add
stos
hlt
jmp
jmp
adc
add
pop
add
add
and
pusha
dec
int
and
sub
addb
add
fwait
push
movsl
cmc
pop
lods
rolb
mov
dec
dec
pop
loopne
mov
push
push
movsl
push
iret
lds
jb
pop
push
mov
dec
call
pushf
cmc
lcall
xor
imul
outsl
cltd
sbb
jl
iret
clc
das
xchg
scas
adc
mov
or
or
push
insb
mov
push
icebp
sbb
addr16
cmp
je
mov
insl
or
jns
or
and
dec
or
push
outsb
inc
nop
add
xor
lahf
xor
clc
aaa
or
fcomps
cmpsl
mov
out
int3
pop
negb
ds
cld
fs
jmp
in
cld
gs
mov
sbb
xor
into
fidivl
adcb
pushf
push
loopne
mov
cmp
adc
jmp
push
cs
popa
ss
jmp
push
movsl
dec
add
push
nop
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
adc
arpl
push
repz
sub
jo
cmpb
fistpl
inc
sbb
add
mov
icebp
xchg
and
aam
ds
out
aam
sbb
jno
jl
fstpt
dec
sarb
sahf
inc
pop
sarl
add
xor
jle
fdivrl
sbb
imul
aaa
mov
lcall
movsb
cmp
pop
out
pop
aas
dec
popa
push
fsubs
jg
enclu
mov
outsl
add
repz
sbbb
and
pusha
mov
mov
lahf
mov
popf
loop
shll
cld
add
cmp
push
cld
movsl
lds
mov
je
push
sbb
or
cwtl
push
lcall
adc
inc
outsl
dec
insb
or
pop
test
notl
int3
push
xlat
loopne
mov
push
jno
xor
mov
cli
add
lahf
ret
xchg
sub
in
mov
add
mov
inc
fwait
lds
push
sarl
lock
add
add
add
push
adcl
mov
lds
cli
jg
fsubrl
jl
iret
out
dec
out
cmp
das
push
cmp
adc
push
sti
and
cwtl
push
and
mov
xchg
stos
int
scas
mov
andl
dec
rclb
add
push
mov
aam
subb
imul
pop
into
lret
bound
or
or
mov
dec
lret
loopne
out
add
les
mov
and
add
and
jmp
testl
or
jecxz
mov
xor
adc
mov
sub
enter
cmp
loopne
jge
fcomps
mov
xchg
push
jecxz
adc
cwtl
xor
lods
repnz
pop
ja
pushf
sarb
cs
ret
jmp
xchg
or
fstp
out
mov
add
lcall
std
in
mov
cltd
stos
cmpsb
add
pop
add
add
in
out
push
orb
pop
mov
addr16
sub
pop
repnz
dec
jbe
rcr
outsl
pop
adc
nop
std
cmp
mov
or
dec
std
aam
mov
adcb
inc
xor
hlt
fdivl
lcall
sub
cmp
and
jp
mov
lock
gs
inc
out
mov
shlb
ds
pop
push
jle
loop
push
es
fwait
add
loope
push
add
mov
mov
pushf
xchg
pop
ja
xor
sbb
pop
dec
sbb
adc
mov
pop
test
fistpl
sbb
jae
fadds
out
test
mov
push
leave
inc
jmp
add
je
mov
push
cwtl
dec
fcoms
lcall
push
mull
push
mov
cmc
xor
dec
xor
fs
cmp
sub
out
rolb
lret
jnp
sti
jmp
pop
dec
pop
movsb
xchg
jle
add
cmpsl
add
pop
add
add
mov
inc
or
imul
inc
data16
out
jo
enter
popf
pop
stos
ds
sbb
inc
sbb
xchg
call
fcomip
das
dec
leave
pop
cmpsb
cs
sub
dec
adc
pop
pop
push
cmpsb
pop
push
insb
inc
enter
std
or
testl
lret
mov
mov
dec
push
outsb
xchg
mov
mov
sub
adc
adc
xchg
lret
sbb
das
out
negb
out
fsubl
pop
add
push
movsl
push
pop
lahf
xchg
cmpb
cmc
add
iret
xchg
xchg
dec
add
inc
inc
movsb
pop
and
int
or
mov
outsb
pop
in
movsb
adc
outsl
fwait
out
add
push
shll
cltd
pop
insb
jno
xor
dec
pop
lock
sub
mov
jns
dec
stc
push
negl
mov
jns
jecxz
inc
pop
mov
addb
add
add
jecxz
lock
fmuls
mov
pop
add
add
mov
mov
ds
sarl
xor
cltd
xor
aam
push
xor
xchg
or
out
insl
jecxz
mov
insl
fld1
mov
mov
sbb
push
xor
or
add
lock
sbb
push
sub
popa
mov
add
jle
dec
sbb
mov
bound
test
cmpsb
push
pop
pop
cmc
xor
mov
and
mov
std
add
adcb
cmpl
push
mov
cmp
gs
jg
cmp
fwait
mov
dec
sbb
ljmp
mov
movl
jl
pop
mov
cmp
inc
ret
add
stos
sub
adc
lds
daa
dec
and
cmp
sbb
rorl
js
icebp
lds
mov
in
ja
int3
jns
mov
out
lock
stos
push
add
push
jle
fdivr
add
add
add
cld
mov
add
shl
shrb
add
iret
mov
shr
sub
sbb
ds
sbb
aam
push
out
test
les
shrl
xor
or
mov
sub
sti
pop
ljmp
push
adc
ss
test
mov
cmp
int
xchg
cmpsl
and
dec
stos
fldt
pop
loop
mov
add
cmp
roll
pushf
lret
xor
out
sub
jge
mov
fimuls
cld
inc
cmp
xor
sub
insb
push
test
in
push
and
pop
jg
enter
aas
ds
das
cmp
add
inc
lock
mov
rclb
aam
inc
mov
insl
jle
aas
loopne
push
dec
pop
negb
mov
mov
into
gs
push
dec
jmp
adc
call
test
add
xchg
xchg
fisttpll
push
pop
push
mov
mov
jge
and
jl
das
fiadds
xor
dec
adc
add
out
cmc
mov
and
aam
stos
add
pop
add
add
das
jle
add
mov
js
and
lods
xchg
fmuls
adc
xorl
mov
jne
adc
gs
lret
adc
je
dec
ret
fcmovb
dec
jae
ret
popf
test
out
scas
mov
mov
xchg
inc
ret
xchg
out
mov
and
sti
push
mov
mov
pop
mov
ss
mov
bound
jb
mov
in
inc
mov
mov
jo
xor
xchg
adcl
sub
pop
fisubrl
arpl
mov
gs
push
cld
sbb
or
adc
es
into
add
daa
ds
cmpsb
outsl
dec
inc
mov
mov
std
dec
cmp
mov
les
add
imul
inc
xchg
pop
and
inc
jb
mov
nop
dec
testl
loopne
add
out
std
dec
std
pop
cmp
cmp
mov
stos
add
pop
add
add
gs
scas
cmp
mov
mov
test
add
mov
test
test
mov
xchg
shr
repz
add
stc
jno
and
xorb
add
repz
fnstenv
das
sbb
sub
test
or
xor
mov
aam
mov
mov
imul
push
push
sarl
xor
fdivrs
ljmp
aam
and
icebp
lret
stos
out
push
or
cmp
in
xor
fwait
mov
cmp
mov
pusha
sbb
sub
aam
dec
jb
lret
push
rorl
xor
xor
sbb
cmc
push
mov
in
movsl
and
lret
divl
or
fcom
dec
fs
xchg
lds
fisttps
and
add
imul
pop
movsl
cmp
pop
js
lds
jbe
add
fidivs
loop
ljmp
scas
outsl
xchg
aad
add
pop
add
add
push
aaa
bound
mov
clc
in
mov
sbbb
mov
push
adc
insl
jecxz
push
je
adc
xchg
stos
xor
inc
movsl
cmp
or
or
xor
mov
mov
dec
ds
cmpsb
mov
aam
cmp
mov
mov
jo
ss
push
lahf
scas
push
dec
or
stos
and
scas
inc
dec
push
and
loop
pop
scas
data16
mov
std
aaa
mov
push
lahf
push
addb
gs
fcomps
sub
pop
inc
adc
repz
push
orl
sbb
ret
lods
xchg
mov
jg
and
fildl
push
shrb
jge
dec
test
outsl
cmp
hlt
xor
in
jecxz
test
shrl
pop
dec
movaps
dec
sbb
and
fmuls
add
xchg
jg
jmp
std
push
int
mov
lods
add
pop
add
add
jae
mov
or
push
stos
ljmp
sarb
in
ret
sub
in
dec
popf
jecxz
icebp
std
stc
dec
push
dec
push
lcall
push
scas
or
out
ja
xchg
les
jae
inc
hlt
andb
inc
roll
jmp
imul
in
cwtl
sub
aas
mov
ret
mov
out
call
jge
push
mov
mov
cmp
cmp
data16
mov
pop
hlt
mov
sbb
mov
sub
pop
dec
dec
aas
data16
sub
scas
push
sbb
pop
lea
mov
shrl
xchg
jae
scas
add
xor
sar
inc
pusha
xchg
lods
loopne
adc
je
jp
sbb
icebp
out
inc
mov
aad
adc
add
out
testl
cld
fsubr
cmc
push
mov
sbb
jl
push
divb
dec
sarb
jo
fcmovbe
jecxz
add
pop
add
add
mov
adc
js
add
outsb
push
xor
sub
inc
mov
rcrl
pop
xor
pop
push
pushf
push
push
cld
aaa
jmp
push
les
pop
dec
hlt
roll
add
stos
cmp
test
iret
mov
std
mov
sbb
jnp
adc
mov
insl
xor
mov
or
aaa
xchg
hlt
pop
ret
incb
xchg
int3
and
adc
dec
sub
pusha
xchg
or
sahf
out
cmp
insl
sahf
inc
jmp
fcmovnbe
pop
push
lods
cmp
orb
jg
ljmp
lret
repnz
push
sbbb
pusha
lcall
pop
repnz
jp
inc
pop
push
cmp
addr16
and
pusha
outsl
sbb
fcompl
fildl
test
repz
jmp
mov
cmpsb
mov
scas
inc
jbe
orl
pop
jno
mov
test
aam
add
stc
adc
dec
inc
fs
push
pop
xor
cmp
or
ljmp
add
cmp
shll
jnp
xchg
loope
ror
rcl
lods
inc
sarl
pop
add
mov
cmpsb
fisubrs
lods
push
clc
sbb
and
orl
jl
adc
imul
mov
pop
lret
xor
cmc
mov
xor
scas
scas
repz
fildl
lahf
xchg
lock
outsb
cmp
lods
mov
jmp
mov
add
mov
pusha
xchg
xor
push
movsb
scas
in
loope
jb
fistpl
cmp
mov
pop
cmp
and
int
xchg
fimuls
cmpsb
inc
cmp
aas
xchg
dec
add
out
subb
ret
pop
fs
in
and
ja
dec
sub
pushf
ljmp
and
inc
sbb
adc
fs
push
mov
dec
xchg
xorb
xchg
jo
inc
test
stos
mov
es
les
mov
ret
ja
test
push
movsl
icebp
mov
add
add
add
mov
adc
ss
xchg
add
sub
lock
subl
xchg
stos
fildll
cmp
test
cmp
xor
pop
in
xor
jmp
sbb
inc
outsl
out
das
adc
mov
dec
jbe
loop
into
sti
cld
ficoml
sub
sti
out
or
mov
pop
xchg
inc
adc
mov
add
loope
das
pop
cmp
adc
pop
mov
nop
std
and
add
adc
lods
in
in
js
cmp
lret
sbb
mov
in
sub
add
imul
mov
outsb
and
sbb
sub
mov
out
jne
xchg
shl
mov
jae
outsb
lock
aam
out
add
sub
push
add
xchg
and
dec
cmp
push
xlat
cli
aam
jno
test
add
clc
pop
stc
out
push
push
xchg
data16
adc
cmpsl
sub
pop
add
add
sub
adc
cli
out
dec
push
mov
popf
xchg
test
out
lock
outsl
imul
xor
js
jle
xchg
lret
adc
dec
mov
shll
std
and
repnz
mov
mov
test
adc
shll
pop
rcr
mov
sbb
xor
mov
pusha
push
loopne
sub
fcomp
mov
mov
mov
xor
call
sub
push
mov
std
inc
loopne
repz
andl
sahf
sbb
xchg
rcll
and
jae
sub
push
mov
rol
jno
icebp
inc
and
or
pop
test
jl
sub
or
in
xlat
adc
dec
daa
stos
mov
jg
xlat
adc
xor
pop
popf
sub
lds
lods
das
test
mov
dec
movsl
arpl
mov
dec
insb
ljmp
sbbl
mov
add
add
lds
cli
lcall
test
pushl
add
cmp
sub
jns
cltd
popf
and
outsb
mov
cmp
jecxz
loop
jb
cli
mov
adc
imul
in
push
sub
test
call
std
mov
dec
mov
adc
cmp
fldt
sub
add
stos
jle
and
add
imul
inc
jge
filds
push
sar
loop
stc
push
das
jmp
add
inc
fwait
mov
xchg
popf
movsl
fbld
call
jne
cmp
dec
inc
xchg
fsub
je
mov
pop
shlb
fisubs
fdivrl
push
xchg
mov
lds
add
sbbb
cmpsl
outsl
nop
push
std
xchg
mov
insb
lret
inc
pop
scas
int3
fwait
rclb
in
mov
aaa
mov
repz
jns
push
push
sub
cmp
jecxz
inc
stos
sub
inc
and
add
jne
mov
xchg
movsl
jns
neg
out
push
mov
add
add
add
roll
hlt
rorl
xor
sarb
sub
in
push
jg
or
aas
xchg
sbb
pop
xchg
insl
push
bound
loope
in
in
movsb
push
rclb
scas
and
or
fstp
cmp
sub
or
in
jae
clc
pop
lahf
jne
pshufw
loopne
daa
movsb
or
loop
xor
pop
daa
sub
pop
icebp
cmp
aam
jge
es
and
mov
ret
icebp
cmp
loop
sti
dec
cs
cli
lds
movsb
push
and
aam
pop
orps
or
into
sahf
test
in
out
mov
mov
rcll
rolb
sbb
fsubs
add
ss
loopne
sub
pop
push
xor
fwait
cmp
push
enter
imul
testb
mov
push
xor
ret
loope
cwtl
push
sub
inc
fimull
push
or
dec
pop
pop
sbbl
cli
test
sub
hlt
dec
or
add
add
jne
jbe
mov
lea
xor
xor
ret
push
xchg
popa
adc
sti
adc
fs
sub
pop
jae
stos
push
sub
ljmp
ret
xlat
movsl
call
add
in
mov
orl
push
ljmp
push
mov
xor
movsl
jmp
mov
jne
jae
dec
popf
scas
adc
or
fs
lods
sbb
xor
enter
cmp
add
mov
cmpsl
push
and
lret
ret
mul
sub
add
push
scas
xor
pop
mov
in
xchg
incb
pop
sub
mov
cmc
pop
test
mov
int3
push
jae
xchg
into
aad
pusha
mov
nop
aas
push
out
fstps
shll
sub
insl
lea
or
rorb
sbb
stos
movsb
mov
pop
cmp
loop
xor
clc
in
sbb
mov
loop
add
in
mov
jecxz
out
arpl
sbb
jecxz
adc
add
pop
add
add
pushf
sub
fwait
xor
jg
jmp
test
das
or
xchg
lds
and
lock
jmp
stos
arpl
icebp
xor
xor
xor
pushf
pop
mov
and
mov
out
mov
sub
mov
adc
out
ja
sti
ret
or
outsl
adc
in
addr16
jnp
leave
inc
in
movsb
sti
cmpsl
pop
in
and
adc
and
lods
into
int
mov
adc
sbb
out
sbb
addl
dec
mov
dec
cwtl
mov
dec
enter
or
or
and
push
xor
sub
mov
icebp
add
loopne
cld
xchg
xor
pushf
les
mov
je
daa
add
mov
jle
rol
in
aam
jae
pop
jnp
push
and
add
insb
jmp
aad
shlb
enter
add
std
test
jg
xor
stos
in
cld
xchg
cwtl
sbb
add
jmp
call
xchg
les
mov
sbb
dec
inc
jp
inc
fwait
mov
repnz
xor
std
mov
fnsave
inc
cmp
adc
ret
in
test
mov
in
cmp
daa
lea
mov
fstpt
arpl
cs
outsl
inc
out
push
mov
int
lahf
fucomp
cmpsl
mov
mov
cmp
cs
xchg
push
push
or
mov
xchg
mov
out
in
and
fiadds
xchg
mov
push
movsb
lcall
mov
repnz
popa
popa
mov
mov
movsb
es
pop
call
inc
xor
xor
lahf
sbb
fldenv
imul
sahf
out
jns
rcll
inc
outsb
loopne
dec
sete
lds
mov
jns
mov
test
or
pop
inc
adc
mov
dec
das
cmpsl
xchg
int
jl
lock
in
lcall
xor
shlb
add
add
add
jno,pt
insl
lahf
mov
add
daa
lret
mov
mulb
insl
popa
lock
xchg
cmp
call
lret
pushf
push
push
dec
adc
ja
push
pop
jg
lcall
cs
cmp
xor
and
jnp
loope
out
addr16
lret
pop
add
mov
xchg
or
sbb
pop
into
leave
or
inc
daa
cmp
dec
push
pop
cmp
insl
stos
add
jae
xor
jge
std
movsl
out
push
pop
pop
add
shl
hlt
mov
test
adc
js
jb
fsubl
mov
shll
mov
add
mov
clc
insb
adc
jle
in
fdivrl
enter
mov
out
les
cld
cmp
adc
inc
mov
loopne,pn
lds
push
and
lret
adc
jae
insb
inc
addb
dec
add
sub
jg,pt
adc
outsl
xlat
stos
mov
sub
add
mov
loope
adc
cmp
out
es
call
mov
jo
mov
jecxz
mov
push
push
cmp
mov
mov
std
xchg
loop
mov
cmpsl
mov
mov
popa
add
xchg
inc
inc
adc
ss
jae
js
lods
and
xchg
je
lret
cmp
push
pop
dec
outsb
fsubrs
sbb
sahf
setno
xchg
jecxz
mov
dec
mov
mov
mov
scas
into
mov
mov
cs
cmc
add
mov
aam
jne
xlat
mov
mov
in
fsubrl
pop
pop
mov
rcll
push
push
jecxz
push
out
pop
ljmp
xchg
cld
lock
decl
adc
das
mov
sub
xchg
cmc
xchg
lea
xor
mov
pop
mov
mov
std
repnz
ja
leave
add
out
idiv
outsl
mov
jmp
xor
mov
add
pushf
addb
jecxz
pop
ret
mov
dec
xchg
push
inc
sbb
jp
data16
or
and
lret
dec
in
out
and
xor
mov
cmp
lcall
out
fcoms
xchg
aad
adc
jle
push
fsubrl
cmp
push
push
jo
out
jg
or
push
fmull
orb
ret
out
fwait
dec
xchg
dec
sbb
jae
out
imul
cmp
in
outsl
or
mov
test
lcall
clc
mov
gs
loopne
stos
ss
ja
inc
xorb
sbb
jmp
stos
rorl
ljmp
aad
movsb
jns
negb
aas
cmp
outsl
mov
sarl
stos
push
cmpsl
pop
dec
ret
into
enter
or
jmp
and
adc
add
repz
fisttpll
jo
add
inc
fbld
mov
jge
mov
add
mov
push
imul
cwtl
lods
jno
daa
sbb
inc
or
xchg
jne
mov
fnstenv
fsubp
sub
pop
xchg
fstps
outsb
sbb
fmul
jge
xorl
xor
shlb
cmc
push
loope
push
sarb
dec
outsl
fs
into
push
pusha
ds
movsl
jne
pop
or
inc
pop
xchg
aaa
iret
push
dec
add
xchg
pop
and
mov
enter
sub
repnz
shll
mov
fisttpll
xor
or
lret
pop
mov
ret
or
mov
ret
xchg
leave
andl
xchg
mov
gs
and
or
push
cwtl
dec
xor
lock
cltd
mov
lock
imul
mov
xchg
xchg
nop
dec
jno
ja
test
imul
or
xor
and
sub
ljmp
loop
mov
add
fistpll
call
shrb
add
pop
add
add
pushf
fwait
jns
add
iret
pop
add
stc
sub
or
mov
in
pop
jl
pop
jae
mov
and
xor
sbb
cmp
into
gs
and
pop
inc
das
xor
adc
xor
dec
gs
jbe
and
sbb
adc
insl
imul
pushf
mov
mov
loop
inc
stos
push
sbb
sub
cwtl
inc
and
shlb
add
fildll
lock
lods
movsl
mov
addr16
lock
rcrb
lods
pop
inc
shrb
mov
out
insl
pop
scas
xchg
jl
pop
hlt
inc
fwait
cmp
or
lgs
adc
adc
cwtl
subb
ss
xchg
adc
rclb
inc
aam
insl
mov
xor
jno
or
mov
sub
aad
mov
int3
pusha
insb
adc
gs
scas
dec
faddl
xor
je
mov
dec
into
dec
lods
inc
lcall
add
add
std
sti
leave
sti
iret
jmp
dec
mov
mov
pop
add
add
mov
fisubl
popa
push
sbb
fdiv
jo
sub
lret
jp
cmp
adc
xchg
add
arpl
mov
lret
mov
clc
xchg
lods
mov
cs
icebp
xor
out
lock
subb
jno
inc
xchg
mov
xor
xchg
adcl
xor
mov
inc
dec
dec
dec
into
jl
rcrl
pop
fldenv
sahf
fwait
imul
pushf
mov
in
sbb
jle
orl
sbbl
out
leave
mov
push
addl
push
dec
xchg
xor
and
ds
jle
mov
add
lock
fcomps
cmpsb
aad
fstpl
sbb
lret
out
lea
jg
scas
jl
movsl
les
das
jg
out
ss
sbbl
jge
int
cmp
xor
repnz
lods
nop
in
jle
xor
lahf
hlt
frstor
push
dec
xor
lret
add
mov
xchg
pop
mov
mov
add
roll
or
shr
scas
dec
inc
lea
or
sub
dec
push
not
in
adc
mov
add
adc
sub
sbb
aaa
ficomps
add
jl
int
inc
or
js
je
dec
inc
adc
jmp
gs
imull
add
iret
rcl
mov
aaa
jecxz
movsl
lcall
nop
xchg
bound
mov
inc
and
ficoml
sub
dec
mov
and
adc
dec
add
insl
movsb
xchg
xchg
push
je
push
xchg
mov
jbe
pop
daa
mov
shrb
mov
jbe
dec
mov
xchg
mov
std
mov
aaa
and
outsb
xor
scas
cmc
scas
cmp
dec
lcall
lcall
push
das
pusha
inc
divb
fists
lcall
mov
push
dec
arpl
pop
sbbl
add
fwait
mov
or
jg
mov
xor
sub
push
mov
add
xchg
pop
loop
and
std
mov
ljmp
mov
in
xchg
add
and
fildl
je
push
std
das
sub
js
out
and
lret
add
mov
enter
mov
dec
jae
mov
sbb
inc
dec
pop
mov
jo
mov
arpl
or
push
add
adc
jbe
fdivrs
cmp
pop
dec
push
aaa
add
sub
push
or
and
and
push
aaa
sub
dec
aad
test
mov
sbb
jge
xchg
push
pop
or
pop
shlb
outsl
dec
xor
jnp
fsubs
push
xor
rcl
outsb
xor
shll
icebp
fdivs
xchg
scas
inc
jae
mov
icebp
add
lods
cs
cmp
pop
dec
cltd
dec
nop
js
pusha
xor
cld
dec
inc
into
dec
push
adc
jge
xchg
add
inc
enter
pushl
into
fnstcw
pop
rolb
pop
add
add
fcomps
inc
mov
jecxz
mov
xchg
add
insb
xor
test
xchg
jle
mov
mov
shll
test
jbe
aam
je
mov
cmpsb
xchg
aad
dec
dec
push
inc
jno
imul
bound
jbe
or
pop
cmp
jecxz
test
push
cmpsb
test
aam
jnp
ret
fdivrs
ja
mov
jecxz
insl
mov
lret
bound
jns
test
aas
or
mov
outsb
pop
and
add
addr16
shrb
and
out
lock
push
mull
aas
ffreep
cmp
xor
mov
stos
xchg
inc
test
aas
mov
jae
mov
movsl
push
test
mov
enter
xchg
shlb
sbb
nop
in
and
push
cli
cmp
lcall
in
xchg
aas
jg
jl
fwait
push
jno
cltd
roll
call
jae
xlat
pushf
shrb
xchg
mov
lock
roll
pop
add
add
xor
cmc
rcr
cmp
pop
push
cwtl
lcall
imulb
in
mov
imul
cmp
pop
in
jecxz
mov
push
adc
mov
nop
shl
sbb
cmp
incl
cmc
jmp
xor
sbb
leave
pop
loope
into
jecxz
insl
add
jbe
adc
insb
push
lret
stc
or
iret
loope
lods
sarl
out
inc
xor
outsb
sub
xlat
dec
mov
inc
xchg
mov
out
jae
test
das
jmp
rorl
inc
sbb
movsb
aad
popf
cs
and
fidivrs
and
pop
subb
and
xor
popf
dec
inc
jnp
in
nop
add
jl
lcall
pop
and
pop
cmc
mov
fstl
add
pusha
scas
into
and
je
scas
aam
lds
xchg
mov
out
or
ds
xor
fnstcw
aad
mov
add
test
mov
fucomip
imul
add
add
adc
jne
stos
dec
jae
decl
xchg
rcr
ljmp
mov
sti
insl
mov
rorl
fwait
hlt
clc
push
hlt
xchg
xorb
sbb
add
sub
popf
jae
or
gs
fisubrs
movsl
xorb
jle
lods
dec
jns
pusha
jne
in
jl
addr16
lea
testl
mov
or
mov
xchg
arpl
lock
or
mov
sbb
pushf
hlt
mov
push
jne
arpl
jge
ret
cmp
je
and
aad
movsb
jge
push
loope
shlb
pop
loop
mov
leave
cmp
ss
mov
mov
jne
lea
adc
cmp
mov
fcoml
shlb
mov
adc
cmp
jle
fnsave
adc
mov
jl
xchg
loop
add
into
push
cmp
lret
std
xchg
sub
add
jne
jne
jg
loop,pt
lret
inc
add
ret
add
pop
add
add
loopne
bound
push
cmpb
sub
xchg
addr16
sbb
mov
pusha
sysexit
push
push
and
test
stos
sbb
pop
mov
je
enter
and
fisubrs
jg
lock
int3
in
mov
xchg
repz
roll
addb
in
enter
jae
push
push
mov
imul
pop
stos
jae
lret
cmpsl
imul
out
inc
mov
push
subl
shll
mov
add
cmp
jmp
mov
dec
hlt
or
jl
repnz
sub
dec
sub
mov
xchg
orl
in
adc
pop
or
fsubrs
add
inc
cs
popa
jno
and
cld
cmc
fs
jbe
xor
push
mov
loopne
jmp
loop
hlt
bound
pop
xor
xlat
push
pop
out
ljmp
jbe
loop
dec
cli
bswap
xchg
push
mov
aad
pop
arpl
sbb
mov
mov
dec
add
stos
inc
jbe
add
pop
add
add
and
lahf
xlat
mov
insb
nop
and
push
add
sbb
and
sbb
ret
cs
addr16
outsl
ds
aad
jmp
je
mov
je
xchg
pushf
sub
dec
push
or
adc
bound
mov
insl
test
sahf
jno
test
fadds
aad
sub
and
mov
and
xor
idivb
mov
jo
punpcklbw
popf
jge
sbb
cli
test
in
cmp
shll
aad
xor
jp
mov
or
jns
lods
mov
and
rcr
xchg
mov
add
fwait
push
ret
ret
je
jns
adc
scas
addr16
ja
xor
or
lea
add
mov
int3
mov
sub
aaa
mov
mov
lcall
inc
push
outsb
and
es
pop
push
js
sbb
add
add
outsb
jle
lods
testl
jl
sarl
add
pop
add
add
movsl
popa
sub
notl
mov
ret
sbb
mov
or
es
ret
inc
adc
xchg
movsb
bound
repz
je
push
pop
fstl
add
bound
fidivrl
out
call
mov
ret
fimull
or
sti
fsubs
jg
cmp
fdivs
out
stos
pushf
dec
aas
mov
xor
jp
int3
or
scas
notb
lret
enter
repz
or
loope
in
mov
std
cmpsb
or
popf
shrl
xor
test
xlat
mov
popa
imul
out
adc
in
aas
xor
mov
sub
in
scas
test
xor
int
imul
sub
scas
sub
jns
inc
aaa
push
daa
jne
adc
and
or
in
mov
lret
lahf
or
or
sub
push
mov
sbb
pusha
sbb
adc
dec
sub
add
add
add
mov
arpl
and
cs
movb
pop
add
add
inc
notb
dec
mov
inc
sbb
imul
test
addl
push
xchg
mov
sub
loop
or
xchg
mov
jp
xchg
push
mov
ss
shll
push
push
inc
aam
stos
outsl
xchg
mov
aas
repz
mov
or
outsb
lds
dec
push
add
iret
shl
xchg
aam
push
jmp
jae
fbld
ss
mov
mov
xchg
mov
pop
pop
pushf
scas
inc
cltd
rorl
int3
xor
lods
cmp
es
jmp
dec
mov
push
daa
in
jmp
cwtl
pop
cmpb
les
push
sbb
ljmp
dec
xor
cmp
mov
scas
or
inc
jbe
mov
mov
lods
cld
mov
data16
jbe
lea
fstl
add
setne
rorl
dec
lds
lret
cmp
or
test
sbb
xlat
push
aam
or
xchg
and
add
add
add
add
loop
mov
sbb
mov
and
pop
xchg
jbe
sbb
dec
fwait
dec
jecxz
push
jne
jmp
rclb
adc
cmc
push
mov
repnz
xor
popf
inc
mov
jnp
xor
inc
mov
push
sbb
lods
jbe
fdivrl
cmp
jb
mov
jge
jo
inc
jno
cmp
in
aad
inc
xchg
mov
cmc
stos
adc
fidivs
cs
pushf
push
movsb
or
popa
mov
in
cld
mov
dec
mov
xchg
stos
adc
daa
mov
xchg
mov
lret
or
mov
pop
pop
cmc
cltd
pop
add
repnz
jns
repnz
test
pop
popf
lret
xor
mov
mov
or
mov
ret
adc
in
sub
inc
out
sbb
ds
sub
cmp
jg
dec
das
pop
mov
iret
cltd
xchg
enter
add
add
mov
imul
sbb
add
cmp
xlat
xorl
ljmp
gs
lea
xchg
or
ret
xchg
inc
lods
cmc
add
out
in
xor
or
mov
out
or
cmp
xchg
rcll
and
cltd
sbb
hlt
clc
push
mov
punpckhdq
sub
and
pop
mov
adc
jle
mov
dec
jecxz
jle
add
mov
stos
adc
fcmove
call
sbb
int3
pop
repnz
in
cmp
int
xor
orb
fsub
ja
mov
mov
xlat
jle
sbb
jmp
xor
pop
adc
xor
decl
pop
add
xor
push
loop
inc
add
inc
jle
jo
pushf
xor
cmp
mov
sub
repnz
int3
add
dec
and
std
daa
add
xor
fistpll
out
repz
shll
add
add
fucomip
sar
xor
pop
arpl
or
call
lds
inc
pop
pop
insl
fisttpl
dec
xor
pop
sbb
rolb
add
fcoml
setb
and
loope
mov
dec
out
dec
and
push
or
cli
xchg
mov
push
add
cmc
mov
mov
mov
sub
sub
out
mulb
hlt
subl
fdivs
in
dec
cwtl
inc
enter
arpl
add
and
outsl
cmp
and
sbb
out
xchg
inc
decb
sarl
sbb
cwtl
xchg
lret
dec
jne
mov
jl
xor
outsl
xor
mov
mov
sub
dec
aad
pop
lcall
adc
or
fst
mov
or
sbb
push
sub
and
mov
sbb
cmovne
inc
mov
add
mov
and
lret
pop
add
add
pusha
jns
mov
cmpsb
inc
cmpsb
lds
in
cvtpi2ps
inc
in
into
xchg
pop
mov
mov
mov
mov
sarl
push
mov
call
add
push
imul
fld
xor
adc
in
sti
and
inc
lret
pop
push
hlt
xor
push
test
push
xchg
gs
dec
fcmovne
aas
scas
dec
sahf
cmp
jbe
jne
cmp
jnp
mov
pop
ficompl
sub
js
in
popa
ret
test
popl
fimull
sbbl
aad
loope
decl
adc
add
popf
and
jbe
and
mov
in
dec
in
xchg
lods
sbb
dec
hlt
jge
jo
aaa
rclb
clc
dec
xor
add
iret
cvttps2pi
or
inc
add
dec
pop
pop
enter
push
test
mov
push
adc
or
mov
xchg
rolb
add
add
enter
in
adcl
cmpsl
lret
add
pop
add
add
mov
aam
subb
enter
xor
dec
iret
or
outsb
xchg
xchg
stos
test
shll
pop
in
lret
cs
loopne
or
aad
add
lock
xchg
outsl
addl
adc
cmp
jp
repz
jecxz
cld
cmp
cli
dec
ret
push
lock
out
add
aam
sub
out
into
jmp
mov
and
fisttps
jp
scas
jnp
dec
sub
mov
fs
sbb
sbb
call
sub
jbe
out
ljmp
clc
bound
cmp
mov
sbb
icebp
lds
cmp
inc
dec
fsub
aas
dec
push
mov
push
icebp
hlt
adc
xchg
fs
cmp
cmpsb
ljmp
std
test
test
lods
test
push
into
xor
inc
mov
lcall
adc
clc
mov
dec
dec
and
rclb
movsb
jnp
sub
js
iret
xor
or
jne
imul
cmc
decl
outsl
data16
int3
add
pop
add
add
cltd
mov
pop
xchg
movsb
jb
lock
insl
shll
mov
in
jne
and
or
adc
sub
cmpsb
sub
stos
loop
adc
mov
adc
mov
xchg
mov
mov
testb
stc
insl
pop
lock
add
push
and
xor
dec
dec
mov
mulb
jno
sub
test
lds
xor
imull
pop
dec
mov
movsb
mov
sbb
mov
jecxz
adc
pushf
outsb
hlt
dec
lock
aaa
rorb
dec
enter
xchg
jno
jbe
mov
xchg
xor
sbb
push
mov
fucom
into
xor
and
test
rolb
mov
daa
pushf
dec
ss
pusha
xor
clc
fidivrl
or
repnz
xchg
jl
aaa
dec
adc
and
mov
or
mov
fxam
ret
movsl
mov
iret
arpl
or
test
xor
int
add
add
add
pop
nop
lret
jp
adc
ret
jno
and
push
xchg
sti
or
sti
popa
lods
push
pusha
xchg
into
stos
lret
pusha
inc
repz
mov
in
aas
loopne
xor
and
into
mov
cmpsl
loop
xchg
push
and
aaa
or
outsb
pop
bound
pusha
push
add
das
jbe
ror
push
pop
fimull
loop
in
mov
ret
mov
fisttpl
jecxz
mov
adc
mov
dec
dec
jmp
sbb
dec
leave
jnp
xlat
dec
inc
loope
in
mov
in
sub
cmp
daa
and
mov
fsts
mov
or
xchg
jns
add
mov
shrl
and
and
pop
shlb
ret
push
sbb
rclb
mov
mov
cmpsl
pop
push
mov
pop
or
dec
or
dec
push
daa
stc
stos
stc
cwtl
mov
xchg
adc
mov
jg
lods
jnp
mov
out
out
out
into
shlb
pop
out
mov
add
add
jg
stos
test
mov
fsubrp
jge
int3
mov
aad
clc
jge
iret
repnz
push
sub
lahf
loop
xchg
dec
mov
jns
pop
cmp
out
add
xchg
fisttpll
or
roll
sub
stos
adc
adc
jg
mov
test
es
sub
movsl
inc
sbb
and
scas
aaa
int
int3
pop
xchg
sbb
jns
xchg
or
aas
lds
in
mov
loop
xlat
scas
inc
mov
jle
mov
imul
mov
shrl
cwtl
mov
aad
leave
push
outsl
lds
inc
aad
xchg
add
je
mov
fdivp
jbe
subb
or
adc
pusha
xor
in
push
out
xchg
es
lods
fwait
aas
push
ds
ljmp
sub
repnz
cmp
push
mov
cwtl
in
ljmp
mov
data16
add
clc
jo
lock
pop
add
xchg
and
je
out
mov
push
cmpsl
sbb
pop
add
add
dec
sbb
mov
sbb
jnp
mov
rol
in
xor
test
xchg
jno
rorl
ljmp
xor
add
and
stc
aas
pop
pop
or
fldl
test
ss
push
mov
jecxz
in
inc
push
xorl
idivl
jle
sbb
adc
outsl
push
fisubrl
xchg
popf
sub
xor
aas
pop
add
xchg
cltd
sbb
xor
jb
and
inc
mov
sub
adc
outsb
mov
push
pop
xor
xor
push
sub
aaa
out
pop
sub
rcr
clc
out
mov
mov
xchg
or
or
push
push
lock
scas
scas
es
sbb
sub
js
fs
mov
aad
push
js
addr16
sbbl
dec
mov
xor
and
sahf
inc
push
inc
xor
cmp
cmp
add
dec
daa
dec
das
outsb
imul
sub
stos
xchg
inc
lret
add
add
add
sub
sub
jp,pn
and
aam
dec
mov
mov
inc
imull
mov
test
jge
sub
sbb
sbb
cmp
test
inc
lcall
inc
or
rolb
ret
add
std
xchg
sbb
in
nop
jne
and
sahf
push
push
hlt
daa
lock
mov
dec
dec
pop
sbb
mov
std
pop
aaa
add
cld
push
aas
pop
adc
mov
sbb
mov
and
ret
gs
xor
in
xor
dec
fdivl
in
cld
rorl
or
cmc
cmp
dec
into
aas
jg
jb
repz
fwait
mov
sahf
fsubs
mov
inc
popf
iret
loop
das
ljmp
out
mov
mov
stos
stos
dec
outsb
push
int3
mov
subb
addl
xor
imul
nop
ss
icebp
dec
and
mov
call
out
lahf
xor
add
rcl
add
pop
add
add
shlb
dec
mov
out
mov
or
xchg
movsl
mov
shll
sub
pop
fistpll
and
inc
xchg
sbb
inc
clc
iret
push
jbe
pop
lcall
or
and
jns
pop
dec
xor
push
pop
push
pop
xchg
cwtl
pop
loopne
lahf
inc
push
push
lods
out
pavgw
fmull
lcall
pusha
pushf
insb
lahf
jp
jae
pop
sbb
or
cs
outsb
pop
mov
cmp
in
and
faddl
mov
cmc
adc
cld
adc
fldl
inc
fisttpll
loope
sub
pop
pop
negl
bt
popa
fcos
ljmp
test
dec
test
imul
mov
add
dec
inc
mov
aaa
cmpl
es
jae
add
dec
lods
in
nop
out
add
neg
outsl
xor
fldcw
dec
mov
rolb
add
add
add
sbb
inc
dec
call
or
and
or
mov
addr16
out
lcall
test
lret
sbb
push
ss
movsb
iret
mov
fsubr
mov
shlb
xor
addl
fisttps
dec
pop
idivl
inc
lcall
addr16
dec
jo
sbb
lcall
inc
les
mov
cmpsl
sbb
adc
push
sahf
dec
shll
pop
out
call
inc
insb
inc
movsb
scas
push
icebp
in
cli
ss
push
leave
xchg
jo
js
push
inc
ds
dec
xchg
push
xor
scas
jb
push
mov
aaa
stos
mov
pop
fists
jb
adc
rcl
dec
shl
sub
mov
icebp
dec
insb
cmpsl
pop
xchg
jns
loopne
cli
aad
js
mov
rol
mov
nop
imul
xchg
jmp
jne
outsb
sbb
cmp
add
add
sbb
in
and
add
pop
add
add
ljmp
lock
push
mov
popf
fdivp
lds
loopne
cmpb
pop
jae
repz
mov
xlat
mov
lds
hlt
int
push
sbb
mov
in
jne
mov
xor
std
clc
jle
jo
fisubrs
pop
add
sub
into
xor
shrb
cmpsb
lcall
add
repz
rorl
fimull
adc
xchg
mov
ds
mov
dec
in
jmp
dec
push
mov
push
xchg
push
subl
push
imul
dec
pop
lcall
icebp
jo
dec
js
jg
jg
mov
mov
sarb
jno
jle
insb
icebp
test
ret
fcomip
mov
ja
imul
sbb
fildl
dec
loope
adc
aaa
mov
xchg
in
loop
and
pop
jnp
sub
cmp
scas
add
ds
stc
call
aam
add
add
add
iret
adcl
aad
call
sbb
add
out
and
adc
lret
add
cwtl
mov
add
out
fidivrs
jmp
xchg
mov
jl
insl
add
or
imul
jne
push
adcb
icebp
clc
or
and
aad
int
push
rcrb
cmp
int
andps
loope
test
xchg
xchg
add
mov
xchg
mov
push
aad
xor
fldenv
mov
mov
inc
daa
or
stos
test
add
xchg
adc
std
shl
sbb
inc
rcrb
sub
in
in
xchg
shll
mov
dec
and
push
or
xor
push
movsl
pushf
inc
stos
xlat
xor
cs
push
mov
cmc
adc
or
mov
stc
inc
clc
pop
bound
repnz
jns
sbb
xor
loopne
call
xor
jo
push
inc
and
leave
add
lcall
fnstsw
aad
add
add
add
lods
arpl
mov
xchg
movsb
inc
sbb
xchg
test
test
xchg
and
jns
xchg
push
xorl
mov
sbb
xor
enter
mov
xchg
idivl
addl
jg
sub
adc
mov
arpl
mov
pusha
push
pushf
push
cmp
pop
scas
cld
jmp
shl
lret
mov
add
adc
das
bnd
shr
je
ljmp
pushf
flds
xchg
inc
insb
mov
dec
fisubl
mov
aaa
jo
subl
sti
mov
sbb
lea
sub
daa
push
mov
and
pop
jne
jb
mov
fnsave
in
outsb
lret
gs
in
sbb
jo
and
pop
or
test
into
outsl
mov
stos
xchg
inc
dec
sub
cmpxchg
imul
add
xchg
ja
push
jg
xchg
mov
rclb
add
pop
add
add
cmpsb
out
jle
cli
imul
int3
mov
pop
imul
dec
arpl
dec
fiadds
popa
jns
out
in
xchg
pop
push
lea
xchg
add
ss
pop
in
inc
dec
cmpsb
dec
in
push
fwait
lret
nop
add
aas
sub
cwtl
nop
dec
sbb
aaa
push
icebp
addr16
jno
das
mov
dec
jno
cmpl
xchg
mov
cld
push
sub
sahf
sbb
icebp
and
enter
dec
dec
xchg
adc
pushf
lret
andb
adc
xor
rorb
fidivrl
pop
addr16
cmp
dec
mov
xchg
lcall
push
daa
or
out
ret
movsl
popa
xchg
ret
movsb
mov
adcb
bound
enter
jno
ret
inc
cs
insb
cmp
addr16
out
jg
lock
sbb
outsb
cmp
mov
into
add
int
out
out
imul
aas
cld
push
cwtl
in
imul
pop
add
add
cld
int3
lahf
mov
ss
testl
mov
mov
push
xchg
and
dec
or
mov
inc
jl
ss
aad
test
imul
cld
xor
push
stc
mov
xor
mov
pop
sarl
inc
add
or
cmpsb
sub
xchg
sub
push
jl
xchg
mov
cld
mov
inc
pop
je
fs
pop
cli
inc
push
adc
inc
or
jnp
mov
cmp
sub
arpl
mov
jo
leave
add
push
jmp
sub
adc
je
int
cmp
lods
fucomip
rorb
mov
nop
xchg
sub
es
testl
add
imul
mov
xor
loop
hlt
xchg
lahf
in
push
jge
lods
cmc
std
mov
imul
popa
fisubl
xchg
and
fisttpll
shrb
out
fldcw
push
adc
xchg
sbb
mov
add
pop
add
add
fcoml
arpl
mov
dec
sub
and
cli
fimull
xor
aaa
dec
mov
pop
add
push
jl
cmp
push
or
jmp
xchg
pop
cltd
lods
mov
jb
sbb
jnp
sbb
notl
enter
inc
notl
popa
dec
xchg
orl
arpl
shl
cmp
jle
ficoms
pusha
les
ret
dec
dec
pushf
mov
sahf
pop
fildl
or
out
sahf
mov
addl
out
dec
bound
mov
cs
fwait
les
in
cmpsl
mov
mov
adc
imul
sbb
adc
or
cli
dec
mov
cmp
xor
xchg
scas
inc
mov
daa
scas
popf
inc
pop
cmpsl
out
scas
adc
cmp
dec
xor
ret
xor
or
or
dec
add
scas
mov
push
and
in
sbb
sahf
cmc
fsubrp
jnp
push
xor
ja
dec
or
add
pop
add
add
nop
dec
lock
inc
cmp
adc
mov
jecxz
stos
es
xchg
mov
xchg
mov
jecxz
into
xlat
xor
stc
jbe
sahf
xchg
lahf
inc
push
xchg
xor
and
popf
push
testl
fstps
repz
daa
push
roll
mov
les
in
jmp
cltd
dec
scas
sbb
push
in
sti
inc
aad
hlt
int3
adc
or
outsl
pop
push
arpl
mov
imul
sbb
mov
outsb
cmp
mov
cmpsl
mov
xchg
leave
push
inc
cmpb
inc
les
mov
xor
rcl
fstpl
inc
sub
stos
mov
out
cmp
sarb
cmpsb
or
xchg
inc
pop
pop
mov
les
mov
in
cmp
out
jae
out
test
stc
inc
push
or
dec
insl
insb
lret
xor
pop
push
cli
cmp
mov
out
lcall
cmp
push
mov
fs
gs
fwait
inc
inc
ss
xor
add
jle
jg
std
fisttpl
inc
push
inc
adc
adc
fildl
add
add
add
loopne
and
das
unpckhps
lret
xchg
sub
ljmp
or
sbb
lea
addb
iret
divl
roll
mov
push
repnz
push
ds
jo
mov
sti
mov
or
cmp
pop
inc
outsl
xchg
ds
pop
lret
xchg
divb
sbb
inc
jl
xchg
push
js
jl
or
xor
int3
fisubl
inc
xchg
mov
outsb
int
sbb
sar
sbb
lret
mov
push
mov
lret
and
ja
sub
loop
bswap
jecxz
loopne
es
xchg
stos
cmp
arpl
movsl
fdivl
idiv
fwait
push
in
repz
stos
add
sub
xchg
dec
test
mov
cmp
mov
popa
ret
mov
int
and
adc
inc
xchg
add
mov
sti
idiv
lods
push
mov
xor
pop
add
add
enter
shrb
es
shll
lds
mov
bnd
dec
xor
orl
jmp
xchg
ds
sbb
add
aad
cmp
inc
lret
ljmp
inc
insl
popf
addb
mov
sbb
mov
sahf
lock
push
in
scas
inc
sub
and
imul
mov
mov
ds
movsb
or
insl
fildl
jg
mov
or
sub
sub
mov
dec
mov
data16
pop
dec
jecxz
xchg
mov
mov
sbb
repz
xor
jg
mov
and
lcall
pusha
icebp
cmp
sub
mov
cmp
mov
dec
cs
pop
lods
pop
or
sbb
sub
lret
ss
push
movsl
icebp
int
cmp
adc
lods
loopne
mov
adc
leave
jmp
addr16
shlb
add
pop
add
add
push
mov
mov
std
dec
adc
dec
out
shl
mov
jge
xor
fsub
mov
adc
loopne
mov
jnp
icebp
jbe
out
jg
push
mov
sub
clc
stos
adc
movsb
stos
out
jp
sbb
cmpsl
stos
adc
notl
jl
mov
aam
sub
mov
mov
jecxz
or
fadds
jp
div
js
jne
adc
imul
cs
jg
jb
add
xor
dec
into
ds
jmp
lods
inc
stos
lea
out
or
shrl
cmpsl
pop
cmp
ljmp
movsl
or
ss
pushl
mov
pop
rcrl
movsb
mov
sbb
mov
mov
jbe
outsb
inc
popa
aam
inc
outsl
sub
and
push
xor
push
hlt
mov
jb
mov
add
push
out
jb
shrl
and
add
add
cmp
jns
rcrl
out
mov
cmp
jne
dec
xor
mov
sub
in
push
int3
outsl
jl
jmp
arpl
inc
out
repnz
jno
xor
xchg
mov
xchg
jne
dec
xor
in
mov
cmp
xchg
push
test
repz
leave
push
jle
pop
shll
call
add
mov
outsb
add
lcall
pop
sub
mov
sub
push
push
icebp
fsts
push
loop
out
jmp
add
pop
xchg
aad
adc
test
fcoms
mov
fstl
mov
insb
mov
ja
leave
inc
out
in
dec
ljmp
and
cmpsl
testl
dec
jb
shll
mov
push
int3
push
or
int3
insl
ja
dec
pop
aaa
pop
imul
mov
pop
mov
inc
add
mov
lcall
iret
mov
stc
out
mov
sub
add
pop
add
add
es
pop
dec
daa
movsb
mov
mov
add
mov
rol
andb
repz
mov
jecxz
fcoms
int
xor
repnz
pop
psubsw
aas
in
inc
push
popf
arpl
jl
push
and
mov
xchg
je
cmp
pop
pop
jno
stos
pop
lea
scas
ja
pop
pop
xchg
test
out
adc
or
aad
insl
wbinvd
cmpsb
stos
inc
mov
mov
aas
sub
sub
mov
sarl
sarl
aad
sub
insl
xor
or
lss
xor
loope
jl
in
imul
inc
test
jnp
adc
xchg
sub
or
and
jbe
icebp
enter
into
mov
jge
mov
jbe
dec
pop
mov
push
push
imul
mov
push
popa
xchg
mov
push
mov
jmp
pop
jns
movsl
adc
sub
jle
dec
bound
sbb
jns
in
fs
mov
add
add
add
mov
cli
movsb
inc
and
and
xchg
fldt
ja
jge
xorb
pop
popf
adc
pop
pop
cs
push
cmp
jb
test
es
adc
rcrb
push
pop
lcall
sub
dec
and
ds
lds
push
sbb
lock
jbe
push
push
pop
xlat
xor
adc
fcmovbe
in
mov
dec
outsb
adc
data16
sbb
out
icebp
out
faddl
test
in
pop
add
iret
pushf
pushf
xchg
mov
ficomps
into
cld
pop
and
or
fcmove
ljmp
jecxz
addl
daa
cmp
adc
sub
dec
dec
sbb
cmp
sbb
mov
mov
lret
lods
pop
cmpsl
jg
mov
nopl
sub
xchg
pop
mov
jmp
xchg
mov
or
bound
imul
aam
adc
add
add
jae
fadd
fsubp
jnp
mov
and
cmp
add
pop
add
add
cld
into
aas
lret
push
outsl
test
mov
push
cmpsl
dec
fists
imul
fldenv
sub
cmp
nop
sbbb
cli
dec
cs
mov
icebp
int3
ret
mull
hlt
sbb
cli
jns
int
jge
adcb
out
cmp
xorb
lret
jle
mov
insl
xor
aam
adc
sub
dec
pause
divl
sbb
mov
roll
jno
sbb
ret
xchg
sbb
lahf
sbb
aas
jns
fidivrl
mov
ja
js
ficoml
addr16
decb
movsb
aam
push
daa
add
insb
aaa
mov
addb
mov
stc
add
sub
loop
and
nop
in
push
arpl
xorb
inc
imul
sbb
cmpb
pop
mov
dec
xor
add
add
add
sub
cld
cli
jle
fmuls
jb
mov
add
add
add
push
imul
cmpsl
xor
push
mov
push
movups
setge
mov
pop
xchg
pop
mov
loop
out
mov
pop
mov
in
addr16
xchg
dec
cld
dec
out
or
mov
push
jne
add
mov
mov
push
push
jg
es
in
shll
fmull
repz
je
into
mov
push
dec
jecxz
sbb
dec
jae
and
shrb
inc
clc
mov
jo
aas
xchg
xchg
and
cmpl
lock
inc
cmp
leave
bound
inc
inc
push
shr
cmc
movsb
out
in
adc
push
loope
cmp
ret
mov
bound
cmp
test
and
repnz
push
lock
and
scas
je
popa
xor
xor
sbb
dec
daa
cmpsl
mov
arpl
adc
mov
clc
inc
addb
add
add
ja
sti
ret
or
pop
imul
sahf
dec
jecxz
add
add
add
adc
ud0
xchg
sub
outsb
sbb
stos
insb
lods
jnp
sbb
fadds
pop
fistpll
lods
xlat
loope
int
scas
addr16
lcall
jne
popf
cmp
stos
sbb
gs
scas
out
pop
in
sub
rcl
movsl
insb
fs
or
xor
imul
inc
push
cli
sbbb
mov
cmpsb
push
cmp
adc
lahf
call
sbb
inc
cli
adc
xor
movsl
data16
jle
rorb
test
inc
sub
push
lea
jle
mov
aam
rcl
sarb
popf
ficompl
lea
adc
push
fscale
sarl
cltd
mov
mov
adc
mov
pop
jo
test
into
xlat
cmc
popa
loop
or
cld
into
pusha
push
jge
in
sbb
xchg
and
popa
xor
daa
in
dec
dec
cmp
cmp
dec
cmpsl
inc
lret
and
add
into
arpl
cmp
and
pop
add
add
mov
jae
xor
fs
pop
mov
outsb
stos
push
jae
xor
push
pop
dec
mov
rcl
cmpl
mov
xchg
cmp
and
cmp
popa
fdiv
fstl
sub
in
mov
and
ds
imul
iret
cmp
sbb
test
aam
xor
aam
xchg
repnz
int3
dec
xlat
and
push
cli
cmpl
push
loope
dec
and
lcall
xchg
xchg
xchg
stc
push
ds
mov
push
add
divb
xchg
sti
call
or
imul
insb
push
sti
in
adc
jbe
repnz
lock
or
lock
sub
pop
cltd
inc
notb
orb
cmp
jns
cmp
subl
and
dec
loop
ret
add
ja
incl
add
jge
in
add
add
add
xor
data16
iret
lock
push
xor
rcrb
sub
mov
test
xor
pop
fwait
pop
push
mov
xorl
inc
insl
lods
daa
sub
push
mov
sub
rclb
jl
inc
and
sbb
dec
push
dec
fldenv
jae
leave
stc
adc
rcrl
jne
loope
pop
sub
inc
sysenter
mov
adc
push
push
xor
fxch
mov
cmp
dec
int
lea
or
movsl
lock
arpl
shrl
cmp
jle
popa
pushf
lock
xchg
mov
push
fimull
jecxz
ja
cmc
inc
test
insl
cmp
nop
mov
sahf
ss
notb
adc
cmpsl
mov
stos
and
jge
bound
mov
adc
mov
xlat
neg
aad
testb
sbb
xor
ljmp
adc
jo
in
or
movsl
ds
subb
repz
lock
jg
mov
jb
pop
out
add
add
add
sub
pop
rcll
fbld
jl
sbb
xchg
mov
adc
jbe
and
clc
sub
xor
fs
mov
sbb
lock
and
mov
and
clc
cli
mov
aam
cmp
in
inc
jg
adc
loope
sbb
cmp
ja
pmuludq
push
push
negb
sti
mov
mov
mov
enter
popf
push
das
add
mov
or
pop
outsl
pextrw
jl
fcmovnb
rcr
jecxz
lea
pushf
ss
shl
mov
xchg
jp
clc
push
mov
pop
sub
mov
in
jbe
hlt
jg
xchg
xchg
push
sbb
add
jle
xlat
inc
pop
cmpsl
xchg
loop
mov
push
xchg
mov
clc
lret
and
sahf
xorb
arpl
lahf
std
ficoml
aam
ret
scas
fistps
mov
sub
mov
xchg
fwait
cwtl
pop
popf
pop
xlat
fldt
push
xchg
fs
add
add
add
cmp
lahf
add
lods
testb
adc
iret
xchg
pusha
and
mov
vxorps
int3
xchg
inc
shrb
mov
mov
dec
jns
dec
push
inc
dec
mov
and
xor
call
loope
aad
mov
mov
and
out
cld
mov
mov
cld
mov
movsb
bound
jl
ja
popf
pop
rcrl
push
shrb
jl
pop
loope
dec
and
shll
xchg
push
shlb
jecxz
fisttps
push
xchg
xchg
ds
dec
testl
push
mov
inc
inc
cld
mov
sub
imul
cmpsl
add
aaa
push
xchg
mov
jbe
dec
fld
mov
pop
push
push
pop
xchg
js
int
add
outsb
sbb
stos
and
repnz
imul
stc
mov
dec
js
stc
mov
mov
jno
call
add
add
add
fmul
jnp
stos
jle
mov
adc
xchg
insl
icebp
sub
mov
and
add
cmpsb
xor
pop
lods
add
hlt
mov
cmp
pop
jle
jbe
push
aas
fsub
movsb
ror
inc
xadd
das
adc
int3
shrb
out
in
aaa
jne
int3
push
out
fistpl
notl
xor
pop
in
loop
sahf
cmpsl
sub
lods
int3
xchg
add
pop
xchg
jno
call
mov
inc
lcall
ret
jmp
sub
lock
ret
xor
jo
aas
mov
lods
cs
xchg
mov
add
inc
jp
jnp
xchg
xchg
rol
fstps
xor
scas
das
repnz
je
dec
jp
addr16
mov
dec
xor
iret
nop
rorl
ret
scas
sbbb
add
dec
lods
adc
and
mov
add
insl
repz
jae
jg
sub
add
add
add
jmp
divl
insl
mov
inc
cmp
insb
aam
pop
jecxz
mov
xor
aaa
stc
or
and
mov
pop
or
imul
cmp
cs
fs
lock
xchg
xchg
popl
in
fs
pop
bound
pushf
fcomps
test
dec
jnp
xor
cs
popf
ds
shlb
cmp
cltd
xor
and
cs
cmp
pop
movsb
popa
fmuls
jb
frstor
stos
inc
stos
dec
xchg
imul
lret
dec
mov
cmc
aam
and
clc
sbbb
out
push
mov
les
mov
jae
and
rcll
stos
adc
xchg
mov
outsb
fcoml
xor
lea
or
fwait
imull
rol
inc
mov
push
xchg
loope
mov
pop
je
sub
add
mov
pxor
jnp
es
shlb
add
pop
add
add
push
stc
xchg
inc
cltd
addl
mov
clc
jle
lret
insl
bndstx
or
inc
and
jnp
adc
pop
movsb
leave
xchg
stos
jle
or
iret
jne
dec
mov
lret
mov
jno
ja
out
rorl
rorl
adc
sbb
pop
mov
in
mov
js
and
pop
addr16
or
in
cmpsb
push
xchg
loopne
loopne
or
sub
cmp
ljmp
enter
flds
daa
mov
add
or
gs
lcall
movsl
adc
or
push
xchg
mov
lods
bound
pop
pop
inc
pop
out
mov
dec
fyl2x
fcmovb
mov
jns
mov
aam
xchg
mov
push
mov
in
aam
jbe
or
cli
xchg
lcall
arpl
cli
pop
xchg
jae
mov
push
pop
aad
jl
out
lods
xor
aas
xlat
jns
mov
repz
add
add
add
arpl
enter
inc
xchg
jl
sbb
inc
mov
aam
mov
outsb
xor
ds
arpl
leave
xor
repz
orb
sti
mov
pop
jp
in
add
pop
adc
test
mov
shll
and
pop
jae
in
aam
loope
pop
jle
ljmp
and
jecxz
dec
lods
arpl
out
jle
pop
lods
rolb
or
cs
les
cmc
ret
pop
and
popf
js
hlt
xor
scas
jmp
cmpsb
xchg
arpl
arpl
lcall
stos
cs
add
aas
ss
adc
fdivs
sub
cmpsl
shll
cmp
les
xor
enter
or
scas
xorb
aas
orl
sti
aas
or
test
push
out
dec
ret
pop
ja
fidivrl
aam
jg
xor
add
add
jb
scas
incb
out
dec
out
addr16
lock
add
add
adc
mov
dec
outsb
add
mov
inc
pop
shll
lods
cli
stc
push
add
insl
xor
daa
xchg
pop
es
enter
std
mov
or
inc
cmp
ja
mov
in
inc
adc
xchg
ljmp
mov
pop
imul
cmp
andb
mov
xlat
adc
xchg
pop
test
pop
jns
xchg
lods
adc
pushw
in
inc
nop
sbb
pusha
inc
sbb
test
imul
xchg
cmp
and
popa
lahf
dec
jbe
dec
lods
ret
cld
cs
scas
and
add
cmp
jecxz
xchg
cmp
sbb
and
mov
in
dec
sub
mov
into
mov
cltd
mov
cmp
test
test
or
arpl
push
js
lods
ljmp
add
add
xlat
mov
xor
add
pop
add
add
bound
idivb
or
xchg
arpl
add
insl
aaa
rclb
mov
xor
fnstcw
bnd
sub
push
pop
dec
imul
sub
xchg
sbb
xor
mov
dec
cmp
or
mov
mov
iret
popf
addr16
mov
and
dec
fdivrl
scas
outsl
jp
stos
inc
mov
push
les
pop
insl
das
fidivrs
fidivl
jo
xor
or
adc
adc
ret
xchg
test
aas
mov
xor
shlb
int
sbb
sbb
out
and
out
nop
mov
sub
ficoms
jno
out
loopne
cmpsl
xlat
fidivs
push
fstps
jne
rorl
push
mov
sbb
bound
int
filds
xchg
fistps
pushf
mov
xor
aaa
sbb
fs
lods
cmp
lods
aas
mov
mov
add
add
add
sbb
push
mov
sub
in
adc
lock
or
and
cmp
cld
jnp
adc
int3
je
push
xchg
pop
mov
mov
test
jno
sbb
repnz
or
inc
rclb
in
clc
sahf
shll
sbb
xchg
rolb
inc
dec
lcall
ret
mov
testb
lcall
mov
inc
orl
push
push
stos
push
jo
pop
scas
fbstp
cmp
cmpsb
mov
mov
fisubrl
popf
arpl
in
pop
mov
or
js
pop
sahf
shrb
lahf
lret
push
loop
jo
pusha
scas
in
xlat
inc
jmp
lds
inc
test
icebp
cmp
jns
sbb
repz
and
out
mov
ljmp
mov
loopne
pop
mov
add
adc
sbb
loopne
ret
dec
pop
ss
aaa
cwtl
clc
dec
sbb
adc
mov
leave
jno
loop
fadd
sti
mov
out
push
loope
pushf
out
add
pop
add
add
into
jo
mov
shll
lods
xor
pop
dec
or
sbb
outsb
addl
inc
fisttps
out
das
xor
testl
add
inc
push
cmc
push
orb
mov
test
imul
idivb
dec
mov
movsb
call
or
ds
mov
hlt
les
jnp
mov
pop
js
xchg
stos
xor
lret
andl
push
imul
inc
lods
call
icebp
lods
das
dec
jae
push
rcll
or
push
xor
pop
fistpll
xchg
add
mov
push
sub
sbb
repz
sub
xchg
jo
adcb
mov
sbb
aas
bnd
in
fwait
fwait
rcrb
jle
inc
mov
daa
pop
hlt
shrl
repz
pop
and
lds
mov
fadd
loope
into
cli
jl
adc
ds
sti
cli
add
into
adc
neg
jge
mov
stc
push
push
loope
mov
add
add
dec
test
call
push
aam
push
shrl
push
in
repz
daa
jge
popa
in
dec
imul
adc
mov
cmp
ret
xchg
mov
nop
sub
fadd
js
xchg
pop
lds
cmp
pop
sbb
fcmovnb
sub
stos
call
jmp
and
cmp
icebp
jnp
outsb
mov
inc
hlt
or
loop
loope
fnstsw
sub
sarl
pushf
dec
mov
xor
inc
mov
jge
push
and
aaa
xchg
loope
pop
mov
push
jae
rorb
cmpsb
test
int3
xchg
mov
inc
mov
sahf
mov
cmp
mov
addr16
push
mov
std
cmpb
addr16
ljmp
aad
clc
cmp
into
jg
xchg
push
add
pop
cmp
outsl
jg
jg
xor
mov
add
pop
add
add
cli
inc
ret
pop
or
ficompl
lods
ss
aaa
movsb
test
xchg
adc
cmp
insb
inc
pop
add
pop
inc
lds
je
cmp
insl
pop
jge
rcr
pusha
mov
sbb
pop
push
mov
stc
jb
gs
movsb
sbb
sbb
or
jg
add
mov
cmp
es
and
test
xor
or
mov
add
and
stos
pop
arpl
or
cwtl
sub
lods
or
jge
sub
shl
jo
imul
push
dec
fadds
xor
or
leave
or
inc
sbb
sbb
fcmovnbe
mov
or
jmp
iret
mov
lret
int3
into
cltd
add
pop
mov
repz
test
add
imul
push
jnp
pop
imul
lret
lret
movsb
xchg
mov
jbe
ret
ja
and
aaa
divl
sbb
mov
add
pop
add
add
add
pushf
mov
jecxz
out
and
push
jae
adcb
jb
pop
sub
sub
js
xchg
cmpsl
data16
pusha
mov
dec
mov
and
popf
or
sbb
enter
cmp
lcall
mov
xchg
cmp
cld
lcall
pop
ret
xchg
pshufw
or
inc
xor
jge
sbb
arpl
jecxz
and
jle
cltd
pop
subl
ljmp
sbb
pusha
fwait
xorl
ror
xor
add
push
mov
dec
cmp
xor
adc
sti
adc
std
test
mov
insl
imul
arpl
ret
sti
int3
jl
pop
loopne
push
mov
mov
stos
dec
jbe
pop
mov
xor
push
fdivl
or
data16
in
add
mov
cmc
mov
cld
nop
jne
mov
add
add
call
mov
pushf
out
push
jecxz
xchg
idiv
mov
mov
rcl
push
and
test
add
in
xchg
jl
add
aam
push
cmpsl
int3
jp
pop
test
inc
sub
mov
jbe
push
inc
push
nop
jp
rclb
rorb
mov
pop
sbb
pop
xchg
push
rorb
test
or
scas
in
icebp
sahf
adc
cmp
jne
or
dec
jle
test
cmp
mov
movsl
dec
ret
inc
jecxz
push
or
xor
aad
mul
movb
scas
xchg
mov
sub
inc
add
or
fstp
shl
out
inc
mov
mov
pusha
mov
jge
xor
jno
lahf
out
push
out
cmp
decb
xchg
inc
cli
push
jo
pushaw
loopne
loopne
shll
mov
cltd
pop
adc
nop
mov
mov
loope
add
jne
add
movsl
lcall
add
out
pop
push
adc
faddl
xor
cmp
sbb
mov
jno
ret
sbb
xchg
sub
outsb
jno
pop
or
push
cmpb
inc
mov
bound
xchg
fwait
push
mov
adc
test
ffreep
jl
adc
pop
cmp
imul
adc
ljmp
movl
fstps
test
test
fldcw
mulb
pushf
push
nop
jo
mov
shrb
outsl
scas
pop
pop
or
xchg
push
and
xor
ljmp
dec
call
fisubrs
pop
addr16
cmc
fs
std
cwtl
add
aad
jb
loope
and
push
lods
push
mov
nop
and
dec
mov
cmp
ret
xchg
or
push
scas
add
imulb
idivb
push
in
adc
pop
add
add
test
mov
loop
mov
fistpll
inc
mov
lcall
xor
loop
cmpl
sub
pop
ljmp
sbb
scas
dec
sub
int3
pop
test
push
inc
pop
mov
out
and
sub
pop
insl
jge
sbb
or
and
hlt
popa
shrl
cltd
or
mov
enter
addr16
xchg
sub
push
pop
cmp
fs
dec
mov
cmp
rclb
aam
xorb
out
jmp
pop
xchg
call
add
inc
xor
xor
shl
int
or
inc
cmp
icebp
jp
jno
mov
je
jb
arpl
fcoml
add
mov
ret
push
icebp
fwait
mov
inc
mov
dec
sahf
sti
and
rclb
or
repnz
add
add
add
xor
sub
sbb
int
add
pop
add
add
sbb
push
mov
mov
stos
push
pop
cmp
pop
fcoms
adc
out
mov
adc
fisttpll
out
add
fimuls
xor
cli
cmp
jl
add
mov
ss
subl
push
shlb
jne
push
dec
pop
mov
sub
jle
mov
push
cmpb
pop
std
loopne
mov
stos
jmp
and
sti
sbb
dec
testl
sub
push
mov
cltd
pop
xchg
cmpb
in
cld
rolb
in
adc
fisubl
dec
push
loop
orl
rolb
and
ret
sub
addl
test
or
dec
sarl
leave
lock
loopne
test
fcomps
lea
or
out
jmp
ret
push
sbb
add
add
ds
in
idivl
call
sbb
movsb
aam
add
pop
add
add
leave
pusha
jecxz
or
and
mov
sub
mov
xor
shrb
xor
mov
push
aaa
test
xchg
mov
fstpl
xchg
sbb
or
push
enter
pop
jp
cmpsl
int
xchg
test
aas
scas
test
mov
or
push
mov
add
xchg
dec
cltd
insl
leave
dec
subw
mov
bound
xchg
fmuls
add
jb
mov
xor
cli
rorl
xor
js
addb
lret
ror
outsl
leave
xor
jp
adc
xchg
testb
bound
push
fisubrs
cltd
mov
cmp
jns
cmc
xchg
sbbb
pop
push
mov
mov
arpl
bound
out
hlt
lahf
mov
dec
lahf
add
in
cmp
enter
cmpsb
add
loope
sbb
stos
es
sbb
add
jecxz
inc
cli
aas
clc
fdiv
jne
xor
add
add
add
adc
or
mov
add
cmpsl
aad
jbe
or
mov
push
push
mov
inc
pop
in
and
cmpsl
lds
pop
popa
cmpsb
or
cltd
xchg
cmc
in
pop
lret
push
adcb
mov
shlb
stc
cltd
icebp
push
jbe
fldcw
sbb
ss
lcall
jns
sub
cmp
xorb
ja
add
fmulp
loop
hlt
iret
cmp
xlat
or
in
lcall
dec
fldl
cmpsb
adcl
and
sub
enter
roll
rcrb
jge
push
js
jp
jg
xorb
dec
outsb
data16
bound
pop
repnz
dec
adc
sbb
sbb
and
xor
lock
pop
mov
sahf
fidivrl
mov
pop
mov
shrl
inc
sahf
mov
adc
mov
sti
pop
dec
push
add
lcall
out
mov
loop
add
pop
add
add
xor
ds
iret
imul
lret
cmpsb
shll
mov
inc
lret
lret
xchg
fidivrs
insb
mov
fdivrl
cltd
jle
imul
mov
mov
andb
cmp
negl
call
push
xchg
lahf
mov
scas
jns
test
xchg
push
jl
insb
insl
adc
ljmp
outsl
sbb
lret
add
pushf
stos
push
cld
fdivrs
xor
inc
and
vmovsldup
je
imul
mov
lcall
ret
imull
sbb
pop
cmp
lret
shlb
or
jge
mov
add
loope
jmp
pop
out
rclb
jns
cmc
dec
out
xchg
push
mov
in
jbe
jne
in
add
mov
xor
push
cmp
jmp
dec
xor
addb
add
add
jae
cltd
dec
mov
jge
or
cli
add
pop
add
add
cs
in
fcompl
fstpl
pop
add
add
nop
lds
gs
push
and
xor
push
xchg
push
push
fildll
mov
imul
ret
lods
daa
mov
fidivrl
fs
xchg
out
clc
lods
mov
movsl
mov
out
shl
in
pusha
stos
dec
xchg
test
repnz
sub
iret
sbb
fcompl
xchg
cmp
std
test
dec
ret
cmp
mov
pop
dec
js
sbb
jmp
mov
jecxz
aaa
mov
xlat
test
jle
mov
js
sbb
jne
fidivs
gs
mov
mov
ds
movsl
mov
xchg
mov
mov
bound
rcrb
mov
mov
loopne
imul
mov
xchg
daa
pop
and
loopne
sub
adc
lods
cmp
adc
stos
jl
ds
into
nop
out
cwtl
jle
pop
or
out
adc
sti
add
pop
add
add
mov
adc
pop
xchg
xor
test
in
in
cmp
sbb
or
pop
jns
sbb
lods
fimull
add
test
dec
mov
iret
sbb
jno
adc
xchg
nop
lea
js
scas
inc
clc
jno
xor
and
jns
lods
les
ficompl
mov
mov
lcall
pusha
pop
in
call
outsb
in
pop
cltd
mov
jnp
push
test
adc
mov
xchg
inc
movl
push
and
xor
adc
or
pop
insb
loope
es
adc
xchg
in
dec
jae
nop
add
bswap
fucom
sbb
mov
or
pop
push
gs
sti
sbb
jg
shlb
lock
mov
dec
jno
jg
add
mov
fidivrs
cmp
cmp
xchg
int
frstor
push
jle
push
cwtl
add
test
jg
in
jmp
push
xor
add
pop
add
add
arpl
jnp
addr16
and
mov
push
sbb
shll
inc
fnstcw
push
jne
test
outsl
ljmp
clc
mov
push
adc
scas
and
in
test
jle
hlt
jg,pn
inc
outsb
wrmsr
test
bndldx
shlb
mov
je
push
mov
mov
or
jmp
xchg
ss
mov
aad
xor
mov
mov
insl
mov
daa
xor
pop
sbb
xchg
xchg
mov
cmp
mov
fs
xor
je
lock
outsl
xor
push
sbb
sbb
fsubrs
pop
cli
xchg
arpl
loope
and
sbb
aad
mov
mov
push
and
push
sbb
cmpsl
or
push
aas
lods
dec
popl
fcmovu
dec
ja
jl
xor
popf
movb
or
test
adc
movsb
push
in
cmc
jne
rorl
aas
std
add
pop
add
add
pusha
cmp
xchg
inc
xchg
out
xor
hlt
push
fs
dec
dec
stc
pushf
mov
mov
rcrb
stc
mov
and
movsl
sbb
push
push
jmp
jns
lods
or
mov
xor
movsb
dec
loop
divl
lds
and
adc
out
mov
out
inc
dec
fs
enter
cmp
push
push
mov
pusha
stos
les
test
cmpsl
cld
inc
lcall
ss
cmp
dec
or
loope
roll
jbe
pop
pop
jo
pop
xchg
stc
enter
in
in
push
sub
stos
xor
cmp
out
fisubrs
ljmp
jmp
dec
lea
xchg
mov
movsb
jne
movsl
add
js
mov
xchg
push
xchg
mov
call
out
cmp
ret
jmp
dec
cmp
gs
das
jl
pop
cmp
add
out
shlb
aas
out
sbb
add
add
add
adc
dec
fldl
pop
push
out
jne
add
loopne
fidivl
jb
mov
mov
sub
lock
jl
clc
dec
je
xchg
aad
or
dec
mov
hlt
jmp
cli
adc
scas
test
test
test
or
push
cs
pop
out
mov
sbb
mov
idivl
sahf
cs
negb
outsl
rolb
mov
adc
aam
std
rcll
iret
and
sbbl
repnz
test
adc
jecxz
mov
rorl
xchg
cwtl
negl
incb
testl
idivl
sti
rorb
sbb
jne
fdivrl
and
or
inc
pop
xchg
dec
cwtl
mov
inc
lahf
cltd
mov
jp
sbb
cld
adcl
in
sub
incb
fsts
out
jecxz
mov
aam
add
mov
lcall
push
adc
pop
add
add
jmp
cld
add
xchg
dec
ds
pop
nop
xchg
mov
add
inc
and
jno
inc
add
out
out
cmp
lods
cmp
scas
das
aaa
adc
mov
dec
inc
sub
fsubl
mov
test
mov
fldl
rcll
bound
lods
cmp
or
inc
inc
xor
in
mov
aad
stc
pop
aaa
add
jo
lahf
ja
jp
movb
ret
insb
add
out
inc
es
xor
jno
lods
push
enter
or
pop
jns
addr16
xor
bound
enter
test
nop
rcll
sbb
mov
xchg
cmp
lock
imul
mov
and
or
ret
repz
fldt
faddp
out
add
ret
bnd
int3
jae
adc
or
in
adc
add
pop
add
add
dec
int
push
rcll
mov
jle
add
rcrl
bound
movsb
dec
mov
rcll
add
jbe
fstpl
and
adcb
pop
adc
out
push
add
jp
pop
lds
out
xchg
inc
and
mov
sbb
cwtl
add
into
inc
movsb
xchg
in
jmp
jns
hlt
and
mov
outsl
or
lds
stos
ud1
sub
ljmp
lahf
mov
and
insl
imul
push
xchg
dec
lock
fldcw
cmp
jo
dec
mov
lahf
movsb
movsl
mov
jne
scas
jmp
xchg
data16
enter
fmul
xchg
jnp
fwait
push
lret
add
sahf
or
jg
mov
mov
lock
cmp
ljmp
mov
jmp
scas
fcoml
adc
ja
push
call
sbb
pop
add
std
aaa
mov
mov
lret
pop
sbb
add
pop
add
add
xor
sub
scas
adc
outsb
xchg
jae
jae
ljmp
add
xor
pop
cld
pop
daa
clc
stos
mov
cwtl
filds
cltd
lods
dec
movb
cs
stos
unpcklps
mov
mov
aad
push
cmc
imul
xchg
and
inc
sbb
aaa
mov
push
and
or
dec
push
testl
ds
adc
mov
es
add
adc
mov
pushf
cmpsl
pop
dec
jecxz
lock
lds
push
cmp
adc
fmulp
mov
mov
inc
jne
mov
pop
aaa
push
arpl
xorb
jae
push
in
popa
jp
in
jmp
pop
push
and
inc
xchg
push
xlat
lds
mov
push
pop
shrl
inc
or
out
push
jae
adc
mov
and
sub
repnz
pop
cwtl
add
insl
aam
mov
mov
mov
add
inc
add
add
xor
fsubl
std
mov
adc
adcl
sti
and
das
and
lcall
cli
mov
or
or
jmp
gs
dec
add
xchg
add
add
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
ss
add
ss
add
ss
add
ss
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
xlat
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
aad
out
jge
xchg
mov
mov
jnp
cld
adc
add
dec
cmp
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
