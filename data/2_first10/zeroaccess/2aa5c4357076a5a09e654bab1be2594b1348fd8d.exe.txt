push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
cmp
lcall
jo
rcl
aad
ror
rol
pop
push
add
pusha
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
jp
cli
cmovb
movsb
sub
sti
movb
icebp
shlb
dec
js
adc
clc
xlat
mov
pop
jge
add
or
sbb
xchg
and
cli
mov
cmp
adc
rorl
mov
xor
nop
incl
mov
dec
jmp
inc
adc
movl
xchg
push
push
stc
out
or
icebp
mov
nop
jl
xor
sbb
mov
mov
fiaddl
mov
push
popl
push
stos
xchg
xor
das
test
add
mov
sbb
cmpsl
inc
mov
cmc
jecxz
aaa
pop
xor
mov
imul
mov
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
out
in
jo
in
jo
nopl
push
rolb
cmp
push
loope
or
sub
lea
jle
mov
xchg
cmp
sahf
shlb
add
repnz
inc
std
fdivp
test
fisubs
pop
sti
mov
or
mov
adc
mov
rcrl
cwtl
test
ljmp
jnp
cld
insb
add
jle
dec
pop
mov
cmp
in
lahf
outsl
push
adc
and
and
sub
out
xchg
fistps
stos
sbb
pop
mov
inc
pop
movsb
fistpll
test
inc
cmc
iret
adc
mov
fcmovne
paddusb
xchg
scas
fucomi
insl
xchg
pop
sbb
add
inc
push
pushl
sub
mov
push
stos
inc
push
test
xchg
mov
and
and
cmp
sub
insb
jbe
xor
outsl
adc
test
cld
xor
inc
loopne
ficompl
cmpsl
push
scas
mov
loopne
mov
inc
cli
cmp
int
inc
subb
shr
xchg
add
and
or
fcomip
xchg
xor
lahf
xlat
xorl
xor
mov
pop
call
mov
dec
lock
pop
enter
dec
lcall
dec
cmp
aam
test
add
add
pushf
sbb
pusha
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
push
jo
in
jo
mov
push
dec
sbb
jae
jl
enter
dec
out
push
cs
insl
push
xchg
ds
mov
pop
and
or
pusha
xor
cmpsl
jbe
pop
sbb
xor
inc
sub
mov
mov
imul
adc
test
dec
xlat
pusha
cmpl
add
mov
daa
bound
pop
mov
mov
int3
cmc
movsl
stos
xchg
inc
bound
stos
pop
fsubrs
ds
aas
out
dec
or
inc
jmp
add
mov
jmp
data16
filds
xchg
fidivrl
fs
arpl
movb
call
sub
int
push
sub
xor
inc
pop
sahf
cmp
push
and
sub
cli
mov
jp
negl
enter
aas
out
jp
jecxz
xchg
js
mov
in
sub
imul
push
jno
inc
out
fisubrs
xchg
push
cmp
lock
lods
xor
xorb
cs
mov
popf
mov
xchg
nop
mov
pop
jg
test
movsl
gs
lods
ret
xchg
loope
out
push
sbb
cli
pushf
sbbl
push
and
sbb
push
lods
rorb
xor
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
sub
jo
in
jo
testb
push
aaa
lret
daa
faddl
mov
inc
shrl
out
inc
add
and
f2xm1
push
push
mov
mov
push
xor
jg
or
sti
inc
imulb
lret
mov
shrl
mov
in
cmpsb
add
movsl
sub
rcrb
sub
icebp
dec
sub
cmpsb
jbe
mov
lods
lea
ffreep
sub
inc
jbe
xchg
dec
cmp
or
test
xchg
je
addr16
pop
imul
fcomp
dec
pop
ss
mov
jb
cmp
add
cmp
rcrl
test
or
cli
mov
mov
test
adc
fwait
cmp
iret
aas
cmp
sahf
bound
adc
mov
jne
or
cmp
cmp
and
xchg
xor
mov
dec
sbb
sbbb
xchg
sub
cmp
testl
dec
int3
mov
cwtl
or
cld
inc
jae
mov
dec
mov
stos
into
sahf
xchg
js
call
adc
sub
dec
fcmovnu
int3
test
imul
mov
cmc
xor
mov
push
es
cs
ret
rorb
mov
pop
xchg
jg
andb
pop
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
sub
into
movsb
jnp
jo
jge
jo
sub
mov
mov
mov
movsb
mov
shrb
leave
sub
or
dec
psllq
adc
adc
outsl
adc
pxor
addl
inc
pop
in
cmpsb
or
les
sub
das
jmp
insb
cltd
and
pusha
mov
movsb
jge
lods
cmp
ss
adc
pop
clc
arpl
into
or
test
push
jecxz
cs
add
int
loopne
imul
loopne
pop
in
or
sub
pusha
or
jns
pushf
push
lods
fadd
and
add
or
and
imul
imul
pop
mov
sbb
movsb
fnstcw
push
inc
bound
push
into
fists
xchg
sub
jo
sbb
jns
jbe
and
add
mov
aad
xor
sbb
ds
or
in
repz
popa
pop
sbb
mov
shll
test
pushf
push
les
stc
cmp
inc
fsubl
insl
clc
and
sbb
lret
jno
cld
push
xchg
shl
dec
adc
cwtl
std
inc
adc
sti
dec
nop
scas
nop
leave
jl
xchg
imul
jecxz
gs
jg
movl
pop
cltd
fs
fcomps
sub
dec
or
mov
xchg
mov
out
xchg
mov
lods
mov
lret
in
outsl
mov
jno
adc
jle
lret
mov
rcrl
pop
pushw
mov
push
rcrl
or
popa
jecxz
mov
outsb
mov
adc
sub
repz
xchg
sti
adc
rorl
imul
arpl
gs
fisttps
sub
push
push
mov
lret
divb
xlat
imul
movsb
push
dec
add
sbb
xchg
push
push
ja
add
ss
push
ret
cmc
scas
pop
mov
sbbb
cli
mov
and
int
pop
sbb
and
xor
fimull
dec
mov
adc
or
mov
and
and
insb
loope
add
into
sbb
mov
jns
data16
or
sbb
jg
movsl
and
pop
push
pop
and
movsl
gs
insb
rcll
test
mov
add
fadds
pop
xchg
lret
shlb
test
and
pop
test
test
into
in
scas
cmp
sub
das
xchg
mov
ret
out
mov
mov
or
push
jecxz
sbb
jge
mov
pusha
jp
pushf
adc
dec
jno
mov
shrb
imull
and
repnz
popf
cmp
out
dec
rclb
sub
push
lock
rep
insl
xor
mov
clc
stos
fwait
cmpsl
xor
popa
jl
mov
sbb
and
insl
cmp
repz
repnz
lret
ficoms
lret
mov
mov
lahf
add
mov
js
jae
inc
jns
adc
jge
out
enter
imul
stos
mov
mov
sbb
xor
xor
push
xchg
sbbl
in
notb
inc
fwait
push
pop
push
lea
aad
jl
sbb
xchg
jecxz
push
fucomip
mov
xor
mov
sub
mov
sbbl
jmp
add
arpl
push
pushf
test
xchg
jge
jo
addb
aad
sub
push
icebp
push
xchg
dec
mov
xor
popa
sahf
fildll
inc
outsb
divl
mov
aas
pop
xor
or
mov
dec
sub
mov
xorl
mov
fdivrp
fwait
inc
xchg
xor
inc
loope
sbb
das
cmp
imul
mov
lcall
mov
pop
out
push
sbb
inc
sbb
outsl
adc
jb
mov
mov
test
je
mov
cmpsb
stos
push
rclb
pop
shrb
fsubrs
push
sbb
rcll
xchg
negl
mov
pushf
data16
push
or
pop
dec
imul
daa
or
stos
out
stc
xchg
push
xchg
push
les
clc
push
sbb
in
xchg
imulb
mov
mov
mov
scas
sbb
daa
repz
ret
lods
mov
call
in
test
lock
mov
leave
jecxz
in
in
push
push
mov
imul
lahf
test
mov
mov
xchg
mov
hlt
xchg
mov
or
xor
mov
popa
jle
or
dec
mov
lods
fstpl
in
add
int
sbb
and
mov
andl
mov
mov
pop
mov
and
je
repz
xor
pop
xor
aas
loopne
or
jae
in
ja
repz
or
into
leave
pop
mov
jle
jne
negb
xchg
push
sub
std
xchg
not
clc
adcl
nop
rol
testb
lock
xorl
loopne
adc
xor
cli
in
xchg
mov
fwait
lahf
in
in
pop
mov
arpl
inc
aam
inc
enter
push
aad
mov
cld
mov
andb
sub
loope
dec
stc
scas
test
sub
dec
inc
dec
jno
mov
add
adc
adc
mov
sub
pop
push
mov
lods
dec
jmp
clc
arpl
outsb
inc
xchg
mov
sub
xor
inc
xchg
aad
shll
adc
xor
inc
add
adcl
cli
mov
in
fxch
mov
stc
xor
cltd
and
gs
ffreep
in
dec
dec
cmc
sub
into
xchg
xor
adc
mov
pop
pop
mov
mov
and
pop
or
mov
ret
pop
mov
mov
pop
and
ds
sub
fwait
push
lea
dec
or
lods
or
mov
sbb
and
aam
fs
cmp
fisubl
inc
imul
and
jb
dec
test
shll
sti
xor
lahf
add
stc
pop
xchg
jne
pop
stc
icebp
shrd
cld
pop
repz
ljmp
lods
mov
ljmp
sbbb
int
test
mov
es
ljmp
scas
pop
xchg
xchg
fadd
or
into
push
xchg
arpl
shl
add
push
inc
xor
inc
into
adc
adc
xor
fadds
pop
mov
dec
mov
les
xor
and
mov
add
xor
test
stc
jl
dec
outsl
movl
mov
mov
sbb
jmp
in
lock
mov
push
scas
int3
cmpsl
lea
jo
xchg
jge
jo
mov
mov
test
pop
repnz
test
daa
mov
shrb
adc
sbb
mov
pop
ds
push
push
pushf
mov
adc
xor
loope
cmp
imul
xor
lods
sarb
sub
outsb
fidivs
jb
inc
js
and
gs
dec
push
shlb
jbe
hlt
fsub
add
cmc
or
fldenv
jnp
push
icebp
iret
and
cmp
insl
test
inc
iret
cmp
sbb
mov
icebp
loopne
mull
mov
push
sub
jb
mov
aad
sbb
hlt
test
mov
das
or
std
sbb
stos
mov
stc
mov
push
mov
sbb
or
into
call
xchg
xor
sub
adc
sub
mov
xor
sbb
jge
fldl
loope
inc
ljmp
push
xor
imul
push
daa
subb
test
sbb
jle
in
enter
dec
cwtl
aas
add
out
outsb
movsl
sbb
fcomps
lret
push
frstor
in
mov
pop
out
pop
cwtl
adc
lcall
imul
mov
in
jne
repz
jmp
mov
mov
mov
adc
out
pop
add
pop
fistps
and
cmpsl
adc
stc
pop
cmp
push
test
into
in
jns
insb
add
mov
jle
das
loopne
mov
mov
mov
test
or
mov
lock
adc
and
lahf
repz
sub
sbb
jo
cld
sbb
int3
xor
inc
daa
enter
into
dec
lds
or
shlb
sub
mov
popa
mov
or
imul
jo
jae
push
out
lcall
xchg
inc
and
xchg
dec
xchg
aaa
sbb
xor
xor
in
das
pop
data16
and
pusha
cmp
xchg
and
insb
pushf
jne
and
sbb
sahf
push
inc
xor
mov
jb
ret
inc
mov
pop
xchg
dec
imul
dec
or
daa
or
sbb
pop
sbb
sub
pop
mov
ret
mov
inc
pop
sbb
mov
jne
jmp
les
dec
jg
pop
pop
mull
es
adc
out
or
pushf
and
inc
imul
ror
jbe
cmp
xchg
sbb
cmp
push
stos
mov
loopne
inc
mov
outsl
and
inc
and
cld
sub
push
pop
mov
pop
jae
imul
shll
je
pop
push
cmp
jg
jecxz
xchg
pop
lods
lds
cmpsl
adc
popf
add
test
lahf
in
ret
add
in
mov
out
push
int3
inc
in
jge
loop
xlat
adc
mov
movsl
out
aam
xchg
xchg
sarl
and
stos
cld
mov
add
arpl
inc
pop
lods
pop
lcall
sti
sub
sbb
pop
inc
aaa
scas
lcall
or
shr
out
and
mov
bound
subb
mov
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
rcr
adc
jmp
jge
jo
push
stos
adc
jl
jnp
int3
scas
mov
mov
mov
inc
or
jl
pop
insl
xchg
adc
in
push
add
sbb
adc
std
setno
cld
xchg
jmp
pushf
xchg
into
xor
cmp
adc
pusha
dec
sbb
xchg
add
xchg
adc
stos
cltd
and
push
inc
or
xchg
and
fsubl
mov
aaa
mov
or
rcrl
clc
xchg
add
or
insb
rcrl
movsl
jno
mov
cmpsl
fmull
stos
xchg
into
xchg
test
or
popf
inc
add
xor
mov
mov
popl
std
and
fwait
popf
aam
mov
dec
cmpsb
lds
enter
fnstenv
loopne
in
xor
mov
jns
jbe
mov
mov
xchg
push
mov
and
scas
push
sbb
sub
jle
scas
lock
lcall
je
loopne
ss
iret
js
fstl
pusha
and
mov
push
cmpsb
and
pop
cmp
ljmp
push
aaa
sbb
xor
cmc
adc
fidivs
inc
jp
pop
cmc
out
inc
add
xchg
push
pop
std
push
sbb
jg
sub
push
aam
fs
lds
test
scas
ret
jae
lods
movsl
push
hlt
jnp
mov
scas
in
scas
sub
rorb
decl
subb
popa
popa
add
push
fistl
lods
xchg
mov
and
mov
pop
leave
pop
jp
rolb
fwait
cltd
pushf
adc
stos
inc
jp
fcompl
lret
fmul
nop
mov
lret
add
movsb
call
inc
push
cmp
loopne
mov
test
xchg
call
push
push
leave
adc
dec
push
inc
cmp
cmpsl
mov
repnz
outsb
pop
std
fcomp
imul
popa
adc
orl
inc
lcall
test
insb
cmp
fcomps
fnstenv
jg
mov
adc
mov
sub
imul
int3
mov
or
in
add
inc
addr16
dec
add
cmp
lret
lahf
xor
js
repz
ljmp
jg
sbb
das
add
cmp
cmpsb
scas
xor
dec
mov
add
adc
inc
shll
push
or
fisubl
mov
es
push
shlb
xor
outsb
loope
iret
pop
ja
lahf
cmp
inc
mov
notl
test
pop
sbb
or
sbb
daa
out
test
push
pusha
jg
jle
push
or
dec
xchg
xor
dec
icebp
lahf
jge
adc
std
sub
mov
loop
jb
lods
xlat
stos
inc
lret
xchg
out
sbb
clc
nop
repz
sbb
adc
loope
xchg
mov
or
or
mov
ret
inc
ss
sbb
je
mov
sbb
pop
filds
bnd
xchg
stos
addr16
or
arpl
pop
dec
cmpsl
or
dec
ret
sub
push
mov
lock
jg
mov
pop
sbb
jp
cmp
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
push
insb
add
jo
jge
jo
iret
dec
mov
mov
popa
cmp
xchg
mov
sub
lahf
enter
inc
dec
inc
and
sbb
cmp
add
cmp
add
data16
sub
je
insb
daa
mov
xchg
neg
push
mov
jne
pushl
adc
int3
adc
nop
jae
out
mov
rolb
mov
push
sub
push
aad
dec
popf
stc
or
adc
out
lret
loope
push
and
roll
in
icebp
leave
dec
lds
cwtl
dec
xchg
push
insb
aam
push
mov
ficompl
push
jp
jecxz
xabort
dec
xchg
push
or
push
subl
jmp
je
jne
hlt
je
fidivrl
popa
pop
subb
andb
pop
jns
sti
lods
andl
sti
pusha
pop
xor
xchg
cmp
mov
movl
inc
jecxz
test
and
loop
xchg
gs
sbb
jo
dec
and
xchg
pop
inc
xor
je
data16
loop
or
cld
push
cltd
sahf
push
push
push
sub
adc
and
xchg
sub
or
icebp
inc
test
rorl
and
fwait
adc
mov
mov
lret
xor
push
ret
mov
and
scas
arpl
int
push
pop
mov
stc
faddl
lret
xor
loop
int
xor
add
adc
xchg
cmp
mov
push
mov
enter
pop
les
jecxz
and
adc
dec
sbb
scas
push
adc
and
das
adc
cmp
push
scas
push
push
test
jge
xor
mov
icebp
sbb
pop
shl
jmp
sbb
movsl
decb
lret
dec
sub
adc
lods
push
add
sahf
and
test
loopne
lods
or
aam
sti
adcb
ret
cmpsb
push
setg
cmp
lods
sbbl
std
nop
xchg
lods
std
test
push
or
mov
rcr
push
mov
inc
fdivp
insb
sbb
pop
stos
adcl
pushf
add
inc
add
jp
popa
dec
sub
lods
aaa
rolb
cmp
mov
int
mov
test
int3
mov
fsubr
shrd
fs
loopne
adc
xchg
lret
arpl
xchg
negb
int
mov
addl
fwait
jb
or
inc
cld
xchg
test
arpl
enter
jg
pushw
xor
cmp
xchg
enter
bndldx
out
cwtl
idivl
cmp
lods
repz
lds
and
int3
push
scas
xor
jle
arpl
push
adc
or
xchg
lods
adc
xor
mov
test
dec
xchg
repnz
inc
lahf
pop
scas
dec
int3
cmp
stos
jb
mov
mov
inc
fists
sar
out
mov
pop
ret
mov
std
rorl
dec
push
lret
xchg
sbb
xor
push
in
aam
sarl
outsb
jle
cld
pop
lock
dec
lcall
cld
jmp
cs
loopne
in
jnp
jmp
pop
push
add
jge
jo
push
in
mov
into
ud2
and
insw
icebp
rcrl
push
insl
mov
cmp
popf
inc
lcall
out
aaa
pminsw
sub
bound
lcall
cmp
xchg
imulb
cmpb
lea
xchg
push
leave
scas
mov
gs
inc
mov
dec
mov
out
dec
out
test
adc
adc
inc
in
xchg
lcall
popl
mov
xchg
hlt
cmp
pushf
int
ret
popf
addl
fnstsw
mov
xchg
jae
std
scas
xchg
fiaddl
mov
xchg
outsl
enter
pushf
ret
adc
pop
push
fisttps
fstpt
push
sahf
xchg
loop
push
scas
insl
sub
cmpsb
dec
pop
push
mov
pop
mov
aad
divl
pop
pop
or
ret
test
sti
adc
int
xchg
sbb
ss
or
retw
stc
enter
or
pop
pminub
test
test
dec
cmp
fxtract
clc
or
jmp
lcall
pusha
iret
push
ss
je
cmp
cmp
rorb
cmp
outsb
mov
inc
les
pop
inc
jcxz
sub
mov
push
bound
xchg
xor
pop
out
xchg
jne
das
data16
adcb
dec
jnp
xor
push
in
mov
lret
fidivrs
popl
sbb
fs
idivl
fisttpll
lods
inc
out
add
xor
xchg
lods
lcall
pcmpgtb
icebp
xor
jnp
aad
xor
and
jl
ss
imul
mov
mov
jge
xchg
aas
inc
xchg
jns
add
xor
imul
in
aad
and
imul
in
sub
loopne
out
sub
add
andl
xchg
mov
pop
sub
rclb
mov
shrl
cmp
imul
filds
push
push
cmp
xorb
mov
or
pop
inc
out
outsl
pusha
scas
xchg
ss
cmp
sub
leave
std
adc
inc
add
mov
leave
test
sbb
cmp
cmc
sbb
mov
push
insl
mov
rcrb
insb
test
cli
jbe
iret
filds
lods
jnp
xchg
lret
xchg
mov
loop
data16
pushf
xor
xchg
fcoms
clc
jb
sub
gs
mov
in
repz
and
imul
mov
mov
cltd
lahf
std
xchg
sti
fidivs
das
out
cmp
fdivl
mov
dec
push
lods
pop
loope
cmp
rcr
aas
imul
pop
sbb
jnp
pop
push
es
enter
jne
scas
outsl
imul
std
insb
addr16
stos
pop
xchg
push
fwait
xor
mov
ficompl
leave
push
or
mov
xchg
jg
mov
imul
lcall
add
jnp
push
and
jge
scas
sti
xchg
jmp
sbb
in
mov
or
push
outsl
bound
xchg
fs
mov
mov
mov
add
data16
in
int3
jne
popa
jno
imul
lcall
jo
mov
adc
call
add
lret
xchg
and
xchg
sub
and
loopne
cmp
arpl
jl
mov
xchg
push
stos
mov
and
pusha
test
vmwrite
add
jnp
or
fisttpll
cmp
ret
xchg
lods
lods
iret
out
cmp
xlat
test
jmp
imul
sub
inc
dec
mov
mov
daa
or
push
pop
leave
jl
popa
fidivs
pushf
mov
daa
fdivrl
cmp
loopne
and
or
in
psubq
mov
jp
jge
stc
jmp
jnp
jecxz
jns
dec
negb
aam
cmp
orl
js
popa
pop
mov
aas
or
cmc
dec
hlt
mov
mov
xadd
sub
add
pop
inc
mov
icebp
dec
mov
lcall
test
inc
cmp
fcomi
inc
cmp
jns
cmc
pop
push
mov
cli
push
js
fninit
ss
lds
jge
test
loope
fistps
cmc
mov
inc
cmp
imull
out
test
xchg
cmc
js
sbb
push
and
lock
testl
adc
iret
or
cmp
psubd
push
bnd
ss
outsl
mov
pushf
fucomi
cli
cmp
inc
adc
sub
mov
jg
adc
jne
popf
xor
jno
xlat
punpckldq
mov
xorb
cmp
mov
pop
fiadds
push
enter
int3
repnz
pop
jno
lods
in
les
and
arpl
call
mov
scas
mov
cmp
fnstsw
xchg
mov
add
dec
arpl
les
rorb
addr16
mov
getsec
lods
dec
or
and
das
inc
mov
cmpsb
ljmp
hlt
xchg
stos
or
mov
js
shl
sub
insb
in
sub
push
dec
sbb
cmp
repz
add
mov
adc
mov
das
int
xchg
dec
ss
loop
enter
call
pop
inc
fmull
add
add
adc
adc
loop
sub
lret
jl
lea
adc
pop
inc
sahf
mov
sarl
adc
cld
xor
fisttps
push
lock
dec
mov
icebp
ds
aam
iret
enter
adc
sub
add
mov
and
sub
and
rcrl
jle
roll
xchg
shlb
jge
test
push
pusha
inc
test
movsb
loop
cmp
fcoms
dec
test
lock
cmp
cmpl
jge
jge
std
sub
arpl
adc
xchg
arpl
adc
or
sbb
and
dec
push
sub
enter
xor
icebp
in
mov
lret
sbb
pop
incl
inc
ss
mov
fcoml
in
cwtl
in
ja
repz
in
sbb
fisttpll
jmp
xor
fs
decb
cli
mov
jmp
jle
mov
xchg
icebp
repz
aas
pop
sbb
xchg
jge
jo
enter
push
pop
in
jbe
andl
and
lods
lods
je
inc
push
in
stos
add
aad
cmp
or
lahf
inc
push
out
rcrb
mov
mov
xchg
push
loopne,pn
add
rorl
cmp
roll
and
lods
ljmp
jecxz
leave
xchg
mov
repnz
in
bound
sbb
jmp
and
inc
pop
cs
test
inc
dec
js
popa
mov
cmpsb
pushf
dec
lret
cmc
cmp
fdivrp
sbb
or
fucomip
jg
ret
ffree
sahf
sbb
mov
push
push
testb
movsl
adc
push
inc
jmp
xchg
pop
jecxz
jp
sbb
sbb
dec
insl
sub
xor
mov
div
lock
scas
mov
adc
jmp
xchg
decb
adc
mov
rcrl
sub
xchg
sub
pop
popa
jp
xor
push
xor
loopne
pop
imull
movsl
scas
sub
outsb
lret
sub
dec
dec
and
pop
cmpsb
les
jo
xor
into
jle
cmp
das
cs
mov
push
daa
cmp
xlat
xor
sub
lods
in
jecxz
es
pop
mov
pop
xor
or
sub
push
pop
push
jl
int
shr
test
in
inc
cld
pop
push
test
aaa
outsb
mov
sti
test
xchg
hlt
adc
mov
fisubs
cmp
xor
jmp
push
mov
adc
jle
pop
idivb
push
pop
push
dec
bound
and
add
out
push
mov
push
cld
mov
jnp
aam
cld
sbb
pop
lcall
rcrl
ret
xchg
aas
sbb
mov
and
xchg
into
xor
inc
xor
mov
dec
or
scas
inc
jp
icebp
mov
out
mov
push
in
cli
add
loope
repz
mov
mov
int
push
lret
mov
iret
out
ja
jmp
andl
fbstp
jg
icebp
out
loopne
fbld
jbe
pusha
mov
mov
push
adc
xor
xor
repnz
xchg
adcb
lret
mov
imul
xor
scas
push
comiss
adc
inc
add
pop
gs
mov
ret
push
push
fisubrs
push
inc
test
adc
js
lods
cwtl
push
repnz
popa
inc
push
xchg
pop
cmp
xchg
stos
and
cmp
adc
fstps
popf
xor
nop
cmp
adc
loopne
fsubs
notl
arpl
dec
push
cmc
mov
cmp
pop
cmpsl
sbb
fidivl
inc
xchg
xor
jo
bound
adc
dec
cmp
out
insl
or
mov
sti
cld
aas
arpl
dec
cwtl
cmovnp
jl
inc
rorl
daa
xlat
and
jae
and
add
mov
imul
add
cmp
shll
rcrl
mov
and
shrb
insl
int
out
add
and
repnz
subb
iret
sub
out
cmpsl
or
sbb
mov
pop
xor
mov
imul
in
add
std
cmp
outsb
rorl
push
dec
sub
jnp
lods
or
xorl
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
jmp
jo
sbb
jo
imul
xlat
jl
adc
test
stc
cmp
dec
push
js
sarb
push
out
or
popf
mov
mov
adc
imul
push
mov
bound
pop
mov
xchg
pop
andl
not
xchg
repnz
fistl
sub
cmpl
out
or
jmp
ret
gs
dec
outsb
jecxz
imul
sub
into
xchg
ret
daa
cmp
mov
add
stos
je
repnz
pop
mov
jl
stc
imul
test
adc
hlt
pop
jns
cmp
negl
hlt
inc
xchg
in
jae
test
adc
and
jecxz
sub
cmc
es
and
out
jae
cmpsb
push
cmp
mov
sbb
pop
les
in
nop
mov
loope
mov
mov
dec
jmp
lods
cmp
subb
xor
xor
bnd
das
stos
dec
push
fdivr
pop
fcmovbe
movsl
mov
lret
je
leave
mov
inc
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
sbb
icebp
cmp
sbb
jo
movsl
pushf
out
nop
mov
shll
shrb
fmuls
xchg
lea
lock
lock
xor
dec
or
pop
adc
adc
mov
cmc
jnp
push
es
cmp
cmpsl
xchg
xchg
xchg
icebp
mov
pop
shrb
jno
rorb
mov
movsl
pop
inc
dec
jne
je
jno
cmpsl
xchg
int3
pop
push
lea
shlb
popl
imul
xchg
xor
cmp
xor
mov
loopne
leave
or
adc
rcrb
sub
jecxz
test
and
iret
fimull
dec
repnz
pop
aas
loopne
fnsave
jp
push
enter
std
lock
loop
ret
jecxz,pt
lahf
ljmp
movsl
and
jg
into
sub
adc
push
xor
js
nop
sahf
je
mulb
cmp
imul
dec
daa
xor
pop
jp
fmul
cli
addr16
std
insl
inc
outsl
xchg
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
xchg
sub
sbb
sbb
jo
jg
jo
fiadds
mov
cwtl
mov
gs
sar
add
jb
out
xor
imul
pop
mov
pusha
sbb
cmpsl
mov
adc
cs
popf
mov
cmp
pop
adc
mov
push
hlt
mov
sub
inc
mov
dec
lcall
popa
mov
lods
cmp
push
movsb
pushf
pop
xor
cmc
mov
mov
sub
mov
mov
mov
ja
add
cmc
mov
and
cmp
ret
fmul
xchg
push
dec
sahf
or
fstl
jb
mov
dec
xor
dec
mov
mov
cli
jnp
cli
fwait
outsl
dec
adc
cltd
lcall
add
cmp
add
mov
subl
fisubrs
cmp
pop
sub
sbb
stos
push
pop
and
pusha
pushf
mov
add
repnz
cmpb
xchg
pop
in
scas
dec
push
add
sbb
fistpll
and
cmp
pop
add
inc
icebp
cltd
mov
in
mov
add
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
int3
lock
sbb
jo
fldl
mov
sub
mov
sub
sub
push
push
aaa
sar
sbb
outsb
lods
pop
iret
mov
lret
mov
scas
mov
inc
ds
xlat
mov
push
jbe
lods
stc
mov
jg
negl
lcall
push
in
cmpsl
add
rcrl
in
mov
or
lea
call
xlat
daa
mov
push
xor
movsl
jae
dec
lret
add
jb
rcrl
fsubr
imul
add
insl
jbe
sbb
push
xor
inc
inc
int3
int3
mov
js
scas
pop
in
mov
lcall
mov
adcb
sub
fmull
cmc
lock
in
cmp
fistps
imul
mov
sub
cld
pushf
xchg
pop
xchg
and
orl
orb
cmp
xchg
lds
cmp
imul
mov
cli
lock
in
cwtl
push
ret
jne
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
cmp
push
inc
mov
fbld
cmp
add
mov
jne
bound
lods
rorb
add
out
pop
nop
cld
push
ret
call
mov
leave
js
outsb
cmc
stc
or
ret
push
in
loope
scas
test
push
stos
lods
pop
pop
cltd
negb
mov
pusha
fwait
cmc
inc
mov
pop
pop
mov
les
and
xor
inc
inc
in
add
mov
add
pop
pop
aaa
mov
mov
into
pop
push
lods
movsb
and
cmpl
sahf
inc
test
mov
int3
fnstsw
mov
iret
push
xchg
and
mov
mov
lahf
jb
mov
ret
sahf
ds
inc
sbb
dec
jge
movsb
inc
test
mov
lock
in
movsb
inc
ret
movsl
and
enter
add
mov
push
pop
pop
fdivl
dec
pop
stc
or
pop
fwait
inc
or
lds
xor
test
jne
js
cli
dec
dec
xor
add
mov
mov
xor
add
jmp
ffree
adcb
mov
adc
jo
sbb
jo
lcall
push
xor
decl
pop
fidivl
idivl
loopne
sbb
cmp
sbb
sbb
fistpl
ret
cmp
cmc
stc
jmp
mov
mov
fst
xchg
add
addb
daa
mov
xchg
call
adc
push
rcl
mov
xchg
cmc
lcall
push
loopne
repz
mov
loop
ret
lcall
in
test
stc
fdivp
pop
int3
fidivrl
fidivrs
aam
and
cltd
dec
and
add
les
stc
stc
mov
and
les
push
pop
lods
mulb
lods
pop
movb
lea
xchg
addr16
imul
daa
cmp
sub
cmp
ret
popf
and
xor
aas
jg
add
iret
ret
sbb
or
std
loop
pop
sbb
mov
aad
or
pop
aas
dec
and
scas
jecxz
or
xchg
popa
push
and
dec
xchg
shl
add
or
push
cmp
je
mov
mov
jmp
scas
or
repz
test
roll
adc
daa
jo
sbb
jo
xorb
repnz
inc
and
js
pop
or
xor
ret
mov
sub
call
lods
cmpsb
dec
adc
pushf
xlat
sarl
xchg
es
hlt
xchg
dec
jae
ja
call
notb
xchg
pop
mov
outsb
mov
and
push
sbb
and
xchg
fwait
pop
dec
lods
inc
pop
push
push
std
mov
aam
test
into
rcrl
xor
lods
jmp
gs
dec
pop
inc
loope
bound
inc
test
sub
test
mov
adc
out
cmp
frstor
jge
insb
es
ja
sub
pop
mov
dec
je
jle
sub
xchg
jnp
xor
pop
add
jge
outsb
aaa
cmp
push
xchg
je
hlt
xchg
or
add
cs
xchg
lock
inc
push
dec
aas
cmp
add
incl
js
sbb
mov
mov
out
jmp
mov
loopne
mov
push
jne
shll
fsubl
jmp
sub
or
arpl
mov
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
lret
out
es
sbb
jo
push
lcall
into
mov
pop
jb
sbb
call
ljmp
imul
push
push
ja
ficoml
inc
push
or
xchg
insb
loopne
cmp
xchg
loopne
andl
xchg
adc
mov
push
ret
jge
mulb
mov
adc
addl
popa
ffree
testb
test
mov
addr16
mov
out
jl
add
fimuls
mov
call
mov
and
inc
dec
notl
imul
sub
ja
lea
fldcw
and
cmp
adc
and
inc
xor
mov
pop
sub
ss
and
inc
int
bound
pop
call
loopne
add
jg
adc
sar
mov
repnz
sbb
in
sahf
scas
pop
subl
shlb
inc
lret
insb
insl
test
pop
dec
jge
testb
jg
sub
adc
sub
insb
clc
cmp
push
addr16
stos
or
push
or
mov
cmp
jmp
mov
gs
nop
sbb
dec
add
and
jo
dec
inc
daa
jo
sub
inc
sarb
and
dec
stc
lods
dec
aaa
push
dec
roll
cmpsl
fcomip
ss
add
and
pop
push
imul
sti
or
xchg
xchg
and
push
pop
rcrl
mov
jg
outsl
push
cmp
imul
test
dec
lret
xor
inc
pop
js
test
sbb
nop
xor
cli
popf
mov
or
jmp
jbe
add
or
cltd
xchg
push
ret
loop
push
jbe
jmp
cli
test
dec
sbb
fstp
adc
pop
gs
out
push
dec
jecxz
or
jl
mov
pop
hlt
mov
dec
cmp
cmp
jp
loop
into
lret
adc
ror
or
loopne
inc
ljmp
les
es
xor
cmpsb
imul
sti
and
cli
dec
add
mul
shrl
jnp
lahf
cwtl
adc
jecxz
andb
in
shlb
jg
mov
ljmp
xchg
mov
add
add
inc
call
jmp
aaa
dec
rcrl
jno
repz
enter
inc
inc
pop
cmpsb
push
and
jo
jg
jo
push
clc
sbb
xor
pusha
das
mov
mov
neg
aas
ficoml
push
mov
xchg
outsb
pop
mov
or
xor
fdivrl
jmp
pop
in
sub
and
gs
mov
push
pop
jmp
dec
mov
scas
mov
cmp
fwait
inc
mov
cltd
cmp
sahf
inc
dec
iret
in
in
lods
aad
xor
je
push
dec
shrb
aad
and
mov
sub
xchg
daa
jecxz
inc
dec
or
dec
xchg
aas
repz
sub
mov
daa
push
sbbl
jp
xlat
fcoms
or
pop
push
lods
fs
inc
pop
fsubr
adc
inc
dec
popa
outsl
inc
xor
push
add
rcrl
mov
jmp
cmc
mov
xor
sub
sub
adcb
iret
jae
cmp
out
popf
push
hlt
push
in
nop
cli
lretw
xchg
sbb
jnp
mov
lods
shrb
jecxz
test
rorb
shlb
cmpb
xchg
push
repnz
cmpsb
cwtl
pop
outsb
stos
hlt
ss
nop
cmp
decb
in
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
loop
idivl
and
out
dec
inc
fbld
jle
sub
sbb
add
lret
out
or
lcall
out
jnp
mov
pop
les
scas
cmp
das
es
sbb
lret
inc
cmp
push
dec
cld
and
jno
mov
inc
xchg
sub
mov
scas
jae
cmp
rorl
and
adc
adc
pop
xor
pop
dec
mov
mov
in
push
jge
jge
ss
push
int
mov
loope
faddl
in
outsb
movsl
rclb
sbb
mov
adc
lds
sahf
shld
insl
adc
jge
xchg
pusha
repnz
inc
stos
aam
xor
jbe
fdivl
daa
adc
mov
fildll
or
jb
inc
lret
sub
pop
push
in
adc
test
das
cmp
and
call
or
ss
inc
or
cmp
clc
pop
or
in
add
or
push
dec
imul
les
mov
inc
or
ds
jmp
cmp
xor
sarl
cld
popf
repz
and
jo
sbb
jo
cmpsb
fidivrl
pop
cmp
ds
data16
in
scas
fdivl
cmpb
inc
aam
xchg
in
adc
jo
sti
packssdw
jns
add
sub
fstp
pop
sbb
mov
lret
sbb
stos
and
mov
mov
push
pushf
divl
mov
or
sub
push
xor
xchg
xchg
imul
loop
test
adc
mov
jmp
aam
daa
add
subb
mov
les
fbld
dec
cmc
add
fldl2t
push
test
or
xor
mov
inc
push
in
iret
addr16
inc
or
bound
sub
movsl
xchg
mov
js
push
cmc
cmp
adc
push
aas
sahf
mov
out
pop
cs
ret
nop
adc
adc
and
cmp
sub
push
inc
fisubrl
scas
stos
mov
xadd
dec
push
fstpl
jae
aad
popa
dec
dec
mov
inc
lock
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
cmp
jbe
mov
cltd
xchg
push
pop
insl
fidivrl
sarb
mov
cli
pop
sub
push
arpl
ss
fisubs
das
adc
adc
inc
mov
sub
shll
lods
jle
pop
outsb
inc
xor
cvtdq2ps
enter
ljmp
xor
imul
ss
mov
mov
xchg
lret
pop
dec
pop
add
inc
push
mov
fsubrs
lret
into
and
pop
aaa
fimuls
insb
mov
shll
fsubr
jne
jns
enter
jge
ret
int3
push
hlt
dec
inc
dec
xchg
cmp
fdivrs
test
imul
push
cmp
xor
test
sbb
add
sbb
clc
xchg
pop
test
rcrb
push
out
test
cltd
pushf
push
push
push
jp
pop
jae
pop
cmpsl
mov
test
dec
push
pop
add
push
mov
xor
gs
adc
rcrl
add
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
std
test
hlt
das
jo
fnstcw
jo
push
cmp
jecxz
jg
push
mov
pop
arpl
or
imul
lret
lods
or
outsb
push
xchg
mov
push
loope
adc
mov
inc
and
mov
dec
sahf
in
rol
mov
stos
out
dec
dec
mov
or
inc
jl
pop
adcl
aaa
mov
icebp
or
inc
ljmp
dec
jl
add
jo
in
adc
dec
and
fwait
outsb
mov
mov
test
xchg
jo
mov
roll
add
std
ss
and
outsb
and
dec
push
aas
xor
jmp
test
imul
jl
or
pop
clc
jmp
add
cmp
insl
cld
inc
dec
lds
add
mov
jmp
addr16
iret
fcmovnb
inc
cmpsb
sahf
mov
mov
sub
adc
clc
std
jne
lea
or
xor
into
cmp
sub
dec
cmpsl
into
imul
pop
shr
cmp
add
es
stc
pop
xor
scas
ficoms
mov
movsl
loop
dec
sbb
gs
adc
sub
loop
pop
adc
mov
and
clc
pop
adc
mov
adc
mov
adc
into
adc
loop
xchg
or
xor
inc
in
and
mov
arpl
sbb
jg
jo
adc
push
or
mov
jmp
pop
cmpsl
xlat
loop
enter
jle
inc
outsb
push
jo
cmpsb
rclb
mov
mov
mov
xchg
jmp
imul
rcrb
daa
fidivrs
mov
xchg
xor
icebp
pop
push
pop
mov
pop
sbb
cmp
dec
jns
scas
and
inc
or
xchg
push
out
jns
jb
cli
arpl
cmpsl
nop
fisubl
add
pop
stc
lds
cmp
popf
mov
fiaddl
and
ficompl
cmp
lock
pop
lea
add
xchg
gs
shll
jb
addb
dec
cmp
fs
nop
adc
scas
add
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
pusha
stos
inc
pop
sub
jo
lods
lods
sub
adc
jb
adc
out
mov
xchg
pop
lret
aam
cmp
nop
jmp
loop
mov
in
push
test
lods
in
jl
adc
sbb
jecxz
mov
dec
insb
xchg
add
icebp
daa
xchg
mov
cmp
jmp
inc
sub
dec
mov
pop
push
call
adc
aaa
adc
cld
je
mov
fimull
fstps
push
xchg
xor
call
fincstp
pop
pop
mov
adc
jg
rolb
xor
cmp
add
push
arpl
dec
dec
pusha
enter
mov
pushf
mov
shl
inc
popw
cmc
jb
add
dec
out
cmp
mov
and
or
mov
ss
lods
cmpl
pop
cli
sbb
add
inc
test
stos
sub
or
fs
add
mov
fsub
sbb
int3
push
insl
xchg
leave
mov
jbe
or
or
orl
inc
mov
and
lods
popa
or
es
dec
and
sbb
repnz
xchg
pop
inc
lock
xchg
fs
fsubs
cltd
sub
shlb
mov
stos
xchg
fldl
je
mov
fcmovu
sbb
fdivl
pop
sbb
hlt
pop
cwtl
je
mov
jg
pop
xor
push
arpl
dec
push
cld
push
sub
fidivl
jg,pn
jp
sub
lods
sti
mov
enter
lret
cld
pusha
pushf
inc
mov
jnp
cmp
pop
fidivl
mov
imul
lods
out
pop
int
dec
add
xchg
push
dec
fisttps
in
rclb
sub
sbb
xor
lods
and
or
mov
nop
and
mov
mov
pop
cmp
mov
lods
jae
sub
das
adc
pop
rcrl
gs
mov
test
adc
mov
sub
ss
stos
outsl
out
mov
inc
sbb
dec
inc
add
inc
pop
pop
shlb
in
mov
mov
sbb
push
sub
pop
hlt
aas
sub
out
jo
inc
dec
ss
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
mov
jo
jle
jo
adc
repnz
and
inc
and
icebp
ret
addr16
jmp
ja
shll
es
cmp
jnp
arpl
sbb
xchg
and
stos
repz
subl
fwait
and
push
push
jae
cmp
sbb
cmp
out
std
mov
jp
inc
adc
ficoml
pop
cltd
mov
xchg
and
pushf
jbe
mov
add
jg
je
inc
ror
sub
or
pop
dec
fcompl
jno
stos
sub
jbe
cmp
mov
pop
cmp
sub
sti
xlat
repz
push
addr16
adc
or
lea
es
cmp
inc
xchg
pop
xchg
int3
std
fwait
push
adc
mov
pop
jg
std
and
mov
scas
sahf
cltd
out
loop
rol
xchg
jne
std
out
mov
pop
xchg
xchg
add
out
xchg
insl
rclb
movsl
loop
cmpl
rorl
push
jne
xor
xor
test
or
mov
or
out
mov
xor
mov
mov
outsb
lods
xor
loop
push
dec
adc
icebp
mov
adc
jae
cmp
dec
out
mov
jecxz
mov
pop
xor
in
icebp
sub
dec
adc
or
or
or
mull
negl
cmp
xor
arpl
jecxz
dec
inc
sahf
das
popa
ljmp
ficompl
xchg
cmp
and
stos
repz
stos
lahf
or
leave
bound
divl
loop
adc
clc
adc
sbb
out
inc
mov
stos
push
ret
jl
into
clc
mov
aaa
pusha
lea
rcrb
cmp
pop
lahf
cld
test
std
neg
push
fiadds
test
add
aaa
jb
aas
std
in
xor
and
aad
emms
cmp
test
push
les
movsl
push
and
push
sarb
rorl
in
push
mov
sbb
inc
lods
loopne
je
loope
mov
push
mov
push
push
test
nop
les
cwtl
cs
add
je
sahf
ret
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
inc
scas
sub
les
jo
mov
ret
push
lods
leave
stos
mov
adc
xchg
xor
push
aam
clc
mov
jb
xchg
je
inc
lds
mov
xor
xchg
push
sbb
arpl
lret
ret
mov
adc
insb
out
pop
cmp
lock
inc
cmp
and
out
xor
lret
inc
add
dec
popa
out
mov
out
mov
jne
inc
int
in
add
test
test
dec
fisttpl
mov
outsl
jb
mov
fisubrs
pop
loopne
sub
inc
in
mov
and
scas
test
jb
push
lock
xor
pop
add
mov
sahf
movsb
jno
mov
mov
imul
in
stos
cmp
push
inc
and
imul
push
js
stc
xor
ds
mov
or
test
add
ljmp
nop
mov
adc
fwait
push
and
mov
or
hlt
push
and
xchg
fsubs
mov
loopne
imul
arpl
lods
mov
or
dec
cmp
mov
aad
stos
mov
sti
lods
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
js
cmp
jo
les
jo
pop
fstp
pop
sub
add
mov
push
loop
ja
lahf
gs
xchg
inc
nop
in
sbb
xchg
incl
inc
mul
int
jecxz
das
or
dec
xchg
cmp
inc
and
data16
pop
sarb
call
int
push
jle
cmp
mov
aas
pushf
fldcw
add
mov
and
call
mov
jae
jo
aas
sar
mov
negl
mov
dec
jb
and
pop
in
xchg
sbb
or
cli
xchg
mov
pop
sbb
inc
push
fiadds
lret
jbe
mov
sahf
add
jmp
or
je
push
roll
jge
push
cmpsl
lock
bound
jg
adc
pop
scas
or
xchg
jle
xor
jno
sti
push
jg
xor
pusha
nop
and
dec
add
testl
and
mov
fstl
push
cmc
add
sub
mov
jo
jl
jno
mov
xchg
pushf
addr16
or
xchg
sar
sub
push
iret
and
in
pop
sbb
cmpsl
push
scas
out
mov
cltd
pushf
call
pop
stos
scas
dec
inc
ss
shl
sub
roll
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
xor
jo
mov
push
or
in
cmp
mov
dec
ja
and
sub
push
or
outsl
std
add
pushf
stos
imul
sub
cmp
xlat
mov
dec
dec
mov
and
mov
mov
leave
push
xchg
xchg
cmp
mov
adc
dec
aaa
sbb
mov
xchg
jb
pushf
xor
or
ja
add
xchg
dec
js
add
or
mov
ss
repz
lods
xor
sub
ss
int3
int
outsl
lcall
cmp
shlb
jo
xor
loop
aas
dec
adc
dec
cld
or
cmp
andb
push
lds
cs
cmp
es
icebp
adc
daa
stc
cmpsl
xchg
sbb
into
hlt
test
imul
sbb
dec
popa
pop
inc
add
aaa
jecxz
mov
aad
pop
jne
fimuls
sub
fisubrs
cmp
push
cmpsl
jle
cs
dec
stos
sub
je
push
sbb
out
repnz
xchg
mov
into
push
xor
jb
icebp
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
mov
xor
jo
jge
jo
call
cli
loopne
adc
cld
ja
mov
cmp
out
mov
lea
dec
fcompl
ds
cltd
jb
addr16
mov
push
std
addr16
orl
sbb
cmp
lds
test
jle
es
lods
loope
pushf
lret
insl
aad
lock
cltd
test
xor
adc
leave
jl
adc
std
xchg
cmc
ret
adc
or
pop
enter
inc
and
xchg
adc
enter
and
pop
mov
sub
xchg
jecxz
mov
lret
cmp
iret
sbb
movsl
iret
mov
je
mov
xor
cwtl
inc
jmp
aam
xor
mov
or
inc
aam
xchg
les
cli
and
mov
loope
icebp
or
push
pushf
cmp
pop
adc
xchg
sub
mov
addr16
push
mov
mov
lret
xor
pop
mov
pop
aad
cld
ss
iret
mov
inc
or
push
xchg
in
dec
popf
cli
roll
dec
pop
dec
fidivrs
sub
adc
in
mov
xchg
lret
cmp
pop
out
and
fcompl
and
mov
mov
sarl
stos
cmc
sbb
fstl
jmp
sub
icebp
std
mov
into
and
in
cs
sti
lret
arpl
aaa
mov
loop
and
test
out
mov
push
jbe
outsb
dec
data16
inc
adc
sub
leave
xor
dec
or
nop
lods
aaa
ret
adc
mov
hlt
mov
popf
lods
roll
nop
add
xchg
and
mov
inc
incb
pop
test
mov
mov
das
movsl
sahf
cld
outsb
add
repz
cmp
jecxz
push
ja
xchg
arpl
mov
inc
xchg
inc
inc
shl
fistpll
add
sbb
mov
cmp
fisubl
xor
and
jecxz
stc
push
lea
xor
jno
dec
and
xor
mov
push
out
add
mov
lea
and
lcall
out
pop
cs
int3
hlt
das
nop
adc
push
dec
inc
dec
cs
fisttpl
pop
sti
mov
lock
push
test
inc
sub
ds
inc
and
call
cmc
mov
adc
lods
pop
mov
sub
push
xor
inc
mov
rclb
adc
pop
clc
shrb
sub
push
mov
mov
int3
sub
stc
imul
dec
popf
or
dec
rcr
aas
mov
xor
cld
mov
fists
shll
sub
aam
aas
pop
xchg
in
out
adc
push
arpl
and
jno
jp
std
mov
mov
sub
cmp
lcall
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
orl
jo
and
jo
pop
xor
test
ja
xor
cwtl
dec
xor
cld
in
adc
mov
xor
and
lret
xchg
jg
out
out
popa
sahf
rcrb
or
les
xchg
ret
out
inc
das
xchg
jno
sbbb
aas
xor
sub
mov
jp
call
inc
dec
sub
out
ret
in
nop
aas
aam
gs
xor
and
scas
lahf
dec
std
mov
dec
shr
loop
lock
in
dec
cs
sbb
sub
dec
mov
rcrb
ret
pop
fidivl
repz
ror
adc
enter
lock
enter
jbe
insb
cmc
xor
icebp
cmp
dec
sti
notl
ret
das
cmp
mov
dec
insb
daa
sahf
add
cmp
roll
pop
out
dec
in
mov
jbe
cli
ret
jge
insl
aam
pop
stos
fdivs
insl
dec
push
rcrb
xchg
ret
inc
dec
jns
xchg
add
pop
in
hlt
in
test
mov
mov
stc
adc
mov
outsl
mov
pop
arpl
sbb
or
mov
ljmp
dec
sub
int
outsl
ficompl
std
cmc
bnd
aas
cwtl
adc
pop
jae
pop
pop
fmul
pop
dec
rorb
sub
push
cmc
int3
movsl
inc
xor
rcll
add
mov
pop
sbb
mov
jnp
js
andb
push
inc
ret
cmp
lods
lahf
aas
jae
xor
cmp
cltd
stos
sbb
lods
adc
inc
mov
hlt
xor
nop
jl
aas
hlt
xchg
mov
inc
bound
loope
imul
mov
fldl
aaa
in
icebp
xchg
lret
dec
adc
adc
or
movsb
ja
cld
mov
mov
mov
mov
icebp
cwtl
test
add
cmpsb
adc
lods
and
test
cmp
dec
orl
cltd
mov
dec
add
or
mov
fidivrl
sbb
js,pt
mov
fdivl
sub
xor
adc
js
femms
mov
xor
mov
push
push
int3
xor
insb
xchg
mov
xor
or
mov
mov
mov
cmpsl
ljmp
sti
push
in
out
ja
imul
pop
pop
mov
or
push
mov
and
ret
and
xchg
mov
mov
into
fsubrl
adc
jae
imul
gs
lret
jecxz
popf
sub
js
xchg
pop
rcrb
ljmp
xchg
inc
hlt
push
aaa
dec
inc
mov
mov
mov
mov
or
xor
mov
jg
lret
push
mov
xchg
mov
adcb
insl
sub
ficoms
pause
jge
xchg
jno
je
dec
test
repnz
sbb
xchg
add
es
add
inc
fdivs
mov
clc
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fbld
sbb
and
jo
ljmp
sbb
and
ret
loope
jge
mov
das
jb
sarb
leave
xchg
in
sbb
jno
mov
int3
sbb
fadd
push
and
lret
sbb
sarl
aad
push
cld
jo
pop
out
sub
je
mov
jge
popf
add
jl
nop/reserved
sub
imul
gs
mov
aad
aad
cs
gs
cmp
ljmp
or
xor
repz
incl
ret
out
mov
and
jmp
shrb
or
arpl
dec
mov
out
jg
jae
mov
shrl
sbb
loop
test
cmp
xlat
int
sbb
jl
in
js
push
aaa
popa
cmp
into
add
push
aad
xor
and
rep
rorl
xor
ret
data16
pop
jno
mov
push
shl
xor
cltd
sti
mov
ficomps
sarl
stc
pusha
popf
nop
mov
scas
xor
cmp
cmp
xchg
and
xchg
loope
sbb
mov
xchg
negb
mov
out
cmp
aad
mov
dec
push
pop
int3
les
loopne
lahf
ret
shr
in
in
arpl
mov
mov
add
dec
mov
mov
jb
mov
stc
int3
outsl
xor
icebp
inc
jmp
xchg
mov
dec
or
mov
mov
popf
popa
jno
std
hlt
add
notl
lds
lret
pushf
jae
xchg
adc
ss
pop
pop
push
data16
mov
into
sub
cmp
mov
into
mov
es
and
sub
in
movsl
dec
mov
jns
pop
cmpsb
ficoml
shl
inc
roll
add
pop
adc
loope
loopne
mov
imul
lds
mov
lcall
cmp
fisubrs
inc
sbb
bnd
stos
push
push
mov
aam
das
bound
add
dec
add
sbb
jae
push
inc
mov
pop
or
data16
divb
pop
jecxz
aad
icebp
pop
orb
sub
outsb
fnstenv
xchg
shr
rolb
jmp
pop
insl
aam
shlb
mov
jp
leave
sti
lret
data16
jge
fmull
inc
sub
xor
mov
xchg
sarb
imul
or
neg
lods
and
and
jns
popa
xchg
and
mov
pop
leave
dec
cmp
js
nop
in
subl
sub
arpl
fidivs
inc
shl
and
mov
das
je
andb
lea
insb
sbb
mov
leave
or
add
dec
test
dec
cmp
icebp
mov
fcmovb
addr16
jl
lcall
cmp
fwait
dec
aas
fdivrl
sub
xlat
test
movl
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
mov
stc
sbb
jo
and
jo
adc
mov
andl
cmc
mov
inc
lret
je
cld
pop
fidivs
aad
sub
in
pusha
push
jp
aas
mov
xchg
push
rclb
ja
outsb
adc
mov
push
adc
roll
xor
xlat
adc
enter
or
pop
push
rol
xchg
or
lret
and
adc
push
enter
cmpsb
mov
inc
insb
mov
stos
sbb
out
lods
pushf
loope
enter
dec
xchg
mov
cmp
sbb
ss
pusha
sub
stos
jp
repz
cwtl
movsb
out
or
xchg
rcll
sub
call
scas
scas
test
mulb
mov
jno
add
mov
pop
jp
aad
cli
jge
loopne
dec
push
or
sbb
mov
scas
imull
xor
adc
js
lahf
mov
xor
xor
lahf
cli
jl
mov
fnclex
and
adc
jae
add
into
mov
ds
adc
ret
mov
pop
flds
pop
bound
and
xchg
test
aad
mov
xchg
pop
push
ds
push
dec
sbb
test
jnp
movsl
ljmp
cld
shll
fwait
stos
test
into
mov
into
rolb
mov
pop
adc
push
fidivl
push
data16
sarb
cmpsl
hlt
lock
mov
and
inc
xchg
nop
sbb
out
and
repnz
aaa
dec
add
cmp
mov
aam
or
xchg
or
mov
add
leave
jae
pop
mov
pop
xchg
jo
imulb
cmp
bound
and
push
in
push
out
mov
mov
mov
pop
mov
fimuls
clc
stos
ja
mov
sub
adc
jge
popf
jmp
out
ljmp
int3
sbb
pop
fidivrl
cmpsb
cltd
in
test
cltd
jmp
cmpsl
ret
enter
cs
and
xchg
and
popf
fmuls
sbb
sub
jbe
mov
adc
pushf
pop
shll
pop
aam
push
push
jnp
js
int
enter
inc
cmp
or
enter
fucomi
sbb
inc
mov
dec
clc
pushf
shl
out
mov
sub
inc
push
push
rcrl
push
js
lret
sbb
pop
pop
inc
cmp
mov
sbb
je
add
push
in
dec
xchg
jl
orb
xchg
shr
push
loop
sbb
mov
xor
daa
pop
cs
cmp
cs
cmpsb
or
clc
ret
and
fistpl
dec
mov
lret
sbb
ret
xchg
xor
insl
rcrb
xor
pusha
or
mov
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
xor
jo
jge
jo
aam
mov
adc
pop
iret
scas
cs
mov
jns
scas
in
inc
rcrl
mov
les
fiadds
sbb
dec
fists
and
mov
xor
outsl
mov
push
xor
or
fucom
das
adc
sti
sbbb
insl
lea
ds
movsb
add
dec
nop
das
pusha
xorl
test
xor
mov
testb
std
inc
push
mov
xchg
mov
fisubrs
xchg
mov
xchg
xlat
mov
js
jecxz
push
outsl
inc
rcrb
sarl
adc
xor
ss
mov
xchg
std
sarl
insl
push
aaa
xchg
les
mov
mov
add
push
int
inc
fstps
mov
lock
push
not
dec
sbb
mov
fsubs
push
pop
pop
data16
push
popa
popl
mov
dec
nop
cmpsb
xchg
addb
and
push
mov
xchg
cmp
inc
stos
sbb
add
pop
add
mov
mov
pop
sbb
fisubrs
xchg
or
mull
bswap
sarb
dec
pop
pop
gs
xor
xor
and
cmp
sbb
xor
xor
andb
movsb
aad
repz
jle
test
and
push
xchg
into
ja
clc
fdivrp
fstl
jl
les
lret
insl
dec
jno
xor
inc
xor
cld
xor
out
push
enter
or
test
test
sar
frstor
sbb
ret
pop
cmpsb
pop
fcomps
and
addr16
pop
cwtl
mov
das
add
fldcw
jbe
or
jl
imul
rcrb
inc
mov
sbb
dec
add
aad
dec
and
sbb
fisubl
in
mov
adc
pop
ror
push
and
jne
repz
test
push
outsb
cmpsb
test
and
push
je
sbb
and
push
popl
mov
gs
mov
pop
fisttps
ret
jnp
jmp
jecxz
in
imul
lret
les
mov
test
xlat
stos
dec
cmp
lret
sub
int
inc
adcb
scas
inc
push
mov
test
jl
mov
mov
sbb
xor
sbb
xor
scas
dec
shl
movsb
mov
fwait
pop
std
pop
test
outsb
pop
sarb
or
sub
fs
out
adc
cli
hlt
test
sbb
jecxz
ror
sbb
das
push
scas
jle
cmpsb
sbb
std
push
insb
pop
cltd
test
add
mov
aad
or
aad
arpl
cwtl
mov
mov
mov
ss
mov
or
pop
push
das
cmp
in
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
and
or
mov
out
sbb
push
push
je
mov
mov
cmp
pushf
fwait
adc
adc
adc
fwait
dec
push
in
lock
xchg
push
outsl
dec
adc
imul
les
xor
sub
fbld
fistpl
leave
mov
lds
dec
push
sub
loop
out
gs
rcll
sahf
or
es
movsl
mov
fadd
stos
cli
sbb
xor
out
aas
mov
inc
xchg
pop
sbb
jg
or
sbb
mov
pop
bound
mov
lcall
faddl
pushf
push
repz
je
or
or
add
adc
inc
and
inc
fwait
and
inc
jp
mov
mov
push
les
cmp
cld
mov
adc
mov
movsl
out
sub
mov
ret
pop
sti
ljmp
lods
adc
cmp
lahf
test
ret
mov
and
dec
into
fcomps
adc
mov
dec
hlt
jb
ljmp
pushf
into
inc
call
or
aas
mov
xor
out
aas
insb
fstps
mov
push
xchg
cltd
jge
jmp
inc
in
push
mov
loope
cld
mov
mov
das
mov
andb
pop
inc
sub
jmpw
pusha
cld
imul
adc
stos
iret
cmpsl
push
mov
cld
lock
jns
rorb
push
fiaddl
sub
ret
push
inc
in
ds
fdivrp
pushf
sahf
xchg
fwait
dec
out
insl
jb
cmp
adc
push
pop
lea
sbb
jae
and
lfs
sahf
xchg
push
cmpsb
dec
fiaddl
jne
sub
jge
pop
mov
in
cltd
or
jecxz
mov
ljmp
jge
push
cmp
cmp
data16
xor
push
insb
into
push
push
cmpsl
mov
and
jb
sub
or
ret
sub
dec
hlt
pop
mov
cmp
add
shr
xor
test
repnz
push
mov
repnz
aad
leave
mov
out
cmp
cmp
lock
nopl
inc
fsubl
fistps
push
adc
sub
dec
mov
rclb
mov
mov
add
mov
adc
adc
lret
sti
test
xor
mov
dec
stc
xor
push
dec
stos
in
repz
jl
mov
xchg
mov
mov
dec
popa
test
xchg
mov
pop
in
js
push
out
stos
fstl
inc
xorl
cwtl
scas
cmp
sbb
add
data16
dec
cmp
arpl
ficoms
mov
sbbb
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
push
adc
stos
shll
jge
jo
mov
cmc
inc
mov
dec
lcall
cmp
sahf
iret
sbb
push
test
fisubs
pushf
push
insl
inc
add
adc
cmpb
jno
stos
fdivs
imul
cmp
mov
stc
xchg
dec
rcrl
adc
fnstsw
jge
iret
scas
cmpsl
jle
enter
scas
pop
jl
sbb
and
movsl
sub
fstp
stc
mov
icebp
xchg
sahf
stc
loope
cwtl
or
cmpsb
lcall
pop
adc
das
jo
insl
insb
or
xor
lods
stos
pop
lds
insl
aad
adc
leave
dec
xor
jns
sbb
inc
sub
icebp
mov
sbb
or
stos
in
lret
jecxz
jnp
push
sub
repnz
xor
in
cmp
ja
cmpb
dec
pop
pusha
pop
ds
ds
outsl
call
xlat
adc
adc
jmp
arpl
pushl
ljmp
mov
aas
push
inc
imul
inc
push
pop
js
cmp
imul
dec
or
outsb
inc
pop
stc
imul
adc
out
bound
mov
test
push
xchg
adc
ja
orl
aas
push
je
inc
insb
inc
scas
cltd
in
dec
aaa
shrl
scas
inc
sbb
fcomps
stos
cmp
jns
roll
bswap
imul
loopne
dec
xchg
pop
inc
rolb
and
xor
adc
or
icebp
repnz
loopne
enter
push
in
mov
pop
test
lcall
aad
cmpsl
adc
sti
cld
jae
cmp
roll
addb
shlb
and
shlb
add
mov
xor
xchg
push
clc
lods
ret
and
rcl
movsl
inc
pop
add
mov
or
js
ret
int
cmp
or
and
sbb
je
imul
call
or
mov
mov
pop
iret
mov
xchg
mov
pop
sbb
in
jbe
in
mov
mov
cmpb
sbb
dec
lods
aad
fistps
xchg
xchg
fsubrs
jle
pop
sbb
adc
aaa
aam
addl
push
xchg
push
inc
mov
add
xorb
push
mov
xor
lods
les
data16
cs
inc
dec
xor
pop
mov
das
popf
push
sub
ret
sahf
ja
icebp
scas
out
mov
mov
sbb
mov
mov
push
or
rep
push
scas
or
ja
push
and
insl
and
mov
sub
scas
jmp
xchg
outsl
sub
loopne
dec
outsl
or
cwtl
jnp
out
dec
adc
es
cmc
mov
test
rorl
or
push
cmc
stos
scas
pusha
pmullw
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
loope
pop
dec
pop
into
jo
imul
rorl
fstpt
imul
hlt
rorl
jl
dec
jmp
lret
dec
or
push
inc
imul
loop
les
pop
lds
pushaw
data16
dec
movsl
sub
add
sbb
adc
sub
inc
mov
das
dec
dec
adc
pop
cmp
push
push
inc
orl
and
push
dec
and
pop
lock
mov
mov
inc
cwtl
repnz
xchg
push
mov
mov
lods
jmp
insl
cltd
inc
pop
push
sbb
stc
mov
push
mov
lahf
cmpsl
scas
dec
pop
adc
jns
mov
aas
popa
hlt
in
subb
jp
adc
fldcw
cmc
dec
inc
mov
cmp
xchg
pushf
cltd
test
cmpsl
and
icebp
bswap
jne
mov
ret
fcoms
ja
push
pop
repz
pop
stos
out
push
adc
lods
sbb
jmp
in
xor
pop
and
sbb
mov
pop
in
jle
mov
xchg
js
and
das
hlt
sbb
sti
out
andl
sub
shll
je
mov
adc
push
dec
mov
pop
insb
cmpsl
dec
sbb
stos
sbb
cmp
fsubrp
push
adc
imul
scas
push
xchg
scas
jmp
jecxz
and
lods
xchg
ds
cmp
or
nop
les
pop
mov
push
pop
add
les
fsub
lahf
sub
mov
mov
add
pop
ljmp
icebp
push
add
adc
shll
sbb
les
ret
enter
sub
fsubr
xchg
in
jecxz
jl
xor
dec
inc
pop
push
dec
xchg
ds
lea
jp
popf
stc
cmp
sahf
or
sbb
shl
arpl
ds
ret
jg
cmp
pop
jg
pop
movl
add
movl
mov
sub
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
jp
push
int3
jo
imul
and
xor
xchg
std
or
jmp
sbb
hlt
fprem
ffree
push
imul
out
loop
dec
mov
sub
xchg
sbb
popl
cmp
in
mov
outsl
shrl
mov
popa
in
push
pop
inc
fs
cld
cmc
xchg
sub
inc
andb
xor
xlat
insl
mov
pop
mov
fidivrl
mov
ja
mov
pop
push
xchg
mov
mov
ja
clc
push
and
push
popf
or
ljmp
loop
dec
inc
jae
icebp
cmc
fwait
and
add
sbb
mov
gs
xor
mov
dec
inc
loope
aas
xchg
aam
sub
lea
divb
mov
cld
and
and
inc
cwtl
insb
xchg
lock
insl
sub
addr16
push
scas
inc
in
pop
pop
pop
je
out
pop
xorb
stos
dec
js
in
das
in
pop
jl
push
pop
rclb
jo
or
sub
and
inc
mov
aam
jmp
jae
movsb
sbb
mov
pop
jge
dec
lea
ds
jge
mov
mov
push
inc
loopne
popa
out
fwait
jg
push
jmp
cmp
cmp
in
push
movsl
adc
lahf
lds
mov
das
dec
adc
xchg
mov
pop
xor
lea
stc
inc
cmpsl
pop
outsl
sub
mov
pop
or
jno
cmpsl
into
xchg
call
xor
mov
leave
pop
mov
mov
ss
out
push
cld
jmp
xchg
sub
insb
mov
jo
lods
shll
adc
and
add
aaa
pop
popf
sbb
xor
pop
push
xor
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
pop
or
jo
jg
jo
jecxz
adc
jns
cwtl
loopne
mov
cld
fnstenv
cli
loop
sub
filds
mov
jnp
mov
lret
insl
fistl
mov
sub
aaa
sbb
mov
mov
fbld
add
mov
dec
jns
jo
and
jmp
dec
mov
fisubl
rcrl
lea
inc
jno
popa
add
dec
xchg
in
ret
sbb
mov
addr16
cltd
xchg
xor
xchg
push
sub
xor
or
mov
icebp
mov
inc
xlat
xchg
jmp
ss
mov
mulb
inc
decb
test
mov
jbe
popa
mov
pusha
movsb
iret
addb
jecxz
add
dec
cltd
test
movsl
fsubrs
xor
mov
popf
sub
repz
push
cmp
push
std
je
loopne
loopnew
lds
xlat
sub
dec
ljmp
hlt
cs
in
test
push
mov
lock
lret
pop
repz
xchg
lds
out
rol
addr16
mov
das
jge
int
cmp
adc
in
cmp
push
sub
sbb
dec
bound
mov
adc
mov
sti
and
mov
div
inc
mov
ss
mov
jmp
jae
xchg
push
popf
mov
cmp
xchg
imul
int
mov
scas
jmp
lret
xchg
loope
sbb
out
sub
adcb
add
shrl
hlt
inc
incl
mov
pop
sbbl
test
fistl
push
sbb
xchg
xor
fidivs
cmp
sbb
add
cmp
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
jns
mov
jo
jg
jo
adc
rcll
mov
cltd
push
push
and
leave
inc
push
dec
in
xor
ret
subb
sti
not
fisubrs
xchg
test
cmc
mov
sbb
insl
hlt
shlb
and
or
call
jns
jl
fsubs
jno
pushl
jp
sub
clc
inc
ja
mov
mov
ljmp
negb
push
pop
and
pop
pop
pusha
sbbl
jmp
pop
jp
jno
cmp
dec
push
pcmpeqd
sbb
aas
movsb
ret
mov
sub
lret
xlat
arpl
data16
mov
test
mov
and
xchg
pop
cltd
les
add
fiaddl
and
and
pop
mov
pop
lods
push
test
xor
xchg
inc
pop
push
dec
push
test
sbbl
loope
rorb
xlat
cmp
jmp
mov
push
test
ljmp
or
xchg
fsubr
xchg
ret
cltd
scas
pushf
mov
push
ljmp
adc
xchg
test
stos
imul
xorl
xor
inc
mov
iret
push
js
sub
and
xchg
stos
call
out
xchg
es
arpl
ret
mov
adc
iret
andb
cmpsl
pop
adcb
movsb
call
test
shrb
sub
fisubs
push
call
je
jge
mov
cbtw
loop
add
dec
push
push
cmpsb
pop
push
mov
shll
cltd
repnz
mov
push
insb
mov
fwait
sbb
push
ljmp
mov
das
jmp
sub
mov
insb
mov
fistpl
sub
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
cmp
jo
imul
mov
int
sub
in
stos
mov
dec
in
mov
rcrb
jl
cmc
iret
ret
sbb
jo
fdivs
ja
sub
push
mov
mov
lahf
fnstsw
jnp
sbb
and
and
adc
test
icebp
xor
inc
mov
xchg
test
mov
push
pop
mov
imull
insl
and
pop
mul
dec
das
xchg
out
outsl
lcall
imul
xchg
dec
mov
pop
fsubs
aas
outsb
icebp
in
imul
stc
adc
cmpsb
inc
mov
cmp
lds
jb
shl
and
adc
jo
pop
mov
add
pop
jmp
outsb
jmp
daa
push
push
pop
mov
adc
jecxz
pop
sbb
or
pop
dec
xchg
dec
cmp
mov
xchg
add
je
sub
or
xchg
in
rcl
push
les
pop
mov
sub
inc
dec
test
repz
push
push
jne
fsubl
ds
mov
movsl
hlt
lret
outsb
mov
in
add
cmpsl
setnp
inc
xchg
scas
rorb
movsb
push
rcrl
xchg
and
hlt
out
pop
sbb
xor
pop
ja,pn
jbe
enter
cmpsl
int
pop
outsb
rcll
movsb
hlt
jb
jge
sub
in
sub
dec
mov
sbbb
push
daa
punpckldq
ficoml
mov
loopne
cmpsl
mov
loopne
pusha
scas
in
cmp
mov
call
jnp
sbb
mov
flds
xor
je
push
scas
pop
lahf
jmp
mov
push
pop
xchg
leave
push
and
mov
xchg
pusha
enter
lds
cmp
and
fcompl
push
movsb
decb
subb
add
lds
add
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
out
movsl
shlb
jo
imul
mov
sbb
inc
insb
arpl
rorb
xchg
test
jle
test
jns
cmp
lahf
jb
scas
aas
inc
sub
les
inc
iret
pop
fiadds
sbb
lock
nop
sub
push
pop
js
adc
pop
inc
mov
loopne
imul
push
add
sub
push
xor
in
push
inc
jmp
and
mov
jnp
outsb
cmp
roll
fcoml
das
imul
das
sbb
lds
in
mov
jno
cmp
cli
mov
mov
hlt
pop
or
jae
sbb
stos
jbe
xchg
insl
test
aam
lds
clc
adc
xlat
sub
mov
js
mov
jmp
or
inc
mov
movsl
sbbb
pop
adc
push
push
dec
test
out
ret
fadds
mov
and
arpl
and
xchg
int
jae
rcrb
in
lds
daa
imul
ljmp
mov
int3
leave
ror
cmp
and
out
inc
jge
movsb
jmp
nop
cmc
in
das
sbb
push
xorb
xlat
fnsave
gs
mov
push
push
xor
pop
and
arpl
ljmp
mov
mov
ja
mov
xchg
cli
mov
mov
arpl
lods
ficomps
test
sub
stc
fwait
in
pop
mov
and
in
mov
aad
xchg
imul
pop
mov
fucom
push
dec
sub
xor
movsl
jmp
inc
xchg
dec
mov
push
cmp
pop
not
ss
xor
fisubrs
loopne
push
repz
fidivrl
jle
ret
lds
adc
xor
push
cld
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
xor
jg
jo
imul
orl
lcall
cmc
push
stos
jge
sub
cli
mov
decl
sbb
mov
sbb
ss
fstps
mov
xchg
je
cmp
cwtl
movsb
xchg
jl
ret
in
adcl
xor
push
popf
cmp
nop
data16
movb
dec
iret
in
stos
scas
lock
cmp
xchg
sub
mov
xchg
or
inc
mov
xchg
fimuls
pop
les
sbb
popa
adc
or
mulb
int
push
or
sub
cltd
fwait
sub
jp
push
arpl
fisubs
repnz
aas
imul
mov
das
or
out
idivl
lds
lret
sbb
add
pop
jae
lea
sub
arpl
mov
mov
loop
fnstsw
repnz
in
aaa
js
fistl
lret
insb
ret
fisubs
inc
in
pop
movsb
dec
sbb
cmpl
cpuid
bound
add
rcrb
xor
and
or
fst
xchg
gs
xor
orb
jge
add
mov
fiaddl
xor
imul
stc
xor
in
stos
mov
jp
rclb
cmpsl
or
fnstenv
fmull
iret
inc
jbe
dec
xor
dec
and
fdivr
repnz
jl
testb
out
cmp
cmpsl
stos
xlat
xchg
cmpsl
sbb
in
lret
push
outsl
mov
add
sub
rcl
divb
jecxz
or
push
xchg
outsl
shl
rcll
inc
adc
cmp
xor
mov
ss
iret
aaa
or
jle
aam
jg
stos
or
inc
imul
or
xchg
cmp
or
push
sbb
loope
shll
jge
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
fwait
in
int
shlb
imul
or
gs
xor
call
xchg
sub
push
lods
and
pop
in
cmp
lret
cmp
mov
mov
xor
jo
test
inc
lods
inc
or
fiaddl
lret
bound
aas
movsl
jg
cli
dec
xchg
sub
lods
cwtl
lods
stc
xchg
rcl
inc
fnstsw
sub
imul
ss
test
je
dec
jo,pt
mov
xor
pusha
es
and
dec
test
cmpsb
test
mov
mov
or
add
cmp
dec
icebp
ja
pop
popf
xor
nop
out
mov
aas
pop
outsb
sbb
lahf
lods
jecxz
or
push
stos
ss
cmp
mov
adc
push
arpl
clc
dec
fwait
pusha
bound
cmp
rcll
test
push
loope
mov
and
in
fwait
mov
mov
pop
cwtl
and
xchg
cli
cmp
cmpsb
iret
dec
push
and
jp
das
cmpsb
je
aaa
jp
xchg
xchg
daa
add
add
mov
dec
cli
mov
inc
lret
call
push
out
jle
cmp
add
cmp
in
lret
mov
jmp
cs
fidivrl
or
pop
mov
pop
jle
popf
adc
jbe
cmpsl
pusha
jmp
sahf
xchg
idiv
lock
cmpsl
arpl
inc
pop
inc
and
xchg
psubb
xor
sbb
js
lock
cmp
insl
ss
xor
fs
jle
fstl
subl
jge
add
inc
xchg
fsubrp
sub
and
dec
jl
push
mov
inc
shll
ss
jle
sbb
ja
xchg
pushf
and
mov
sub
or
push
lcall
and
mov
xor
movl
pop
fildl
dec
xchg
lret
out
push
hlt
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
imul
jo
js
fildl
mov
or
add
cmp
out
enter
negl
pushf
in
aas
mov
xor
push
mov
xchg
inc
movsb
aam
in
sub
enter
ret
xlat
cmp
addl
sar
les
mov
jg
push
hlt
cld
cs
mov
pop
pop
js
xchg
pop
mov
ret
leave
cmpsl
ret
push
jo
aas
push
adcb
ss
adc
or
mov
into
mov
dec
ss
mov
lods
jg
sbb
jmp
out
in
stc
inc
cmp
xor
xchg
sar
or
mov
stos
out
test
mov
jnp
jp
cmpl
fistpll
pop
sub
addr16
and
stos
add
mov
scas
add
push
xchg
cmpl
shll
dec
sbb
cli
mov
pop
fucomip
mov
pmaxsw
push
subb
pop
and
push
pop
jnp
jne
pop
cmp
sub
or
inc
mov
loopne
sbb
and
in
xchg
lahf
pop
daa
mov
cmp
lds
pop
sub
fs
out
scas
pop
mov
jle
and
inc
push
out
adc
cltd
je
mov
inc
dec
jmp
sbb
fs
fxch
push
rcll
sub
dec
in
dec
mov
ss
jo
lret
mov
push
imul
add
jl
pop
dec
jo
inc
jo
add
gs
cmp
test
popa
lea
ss
dec
daa
scas
or
sti
mov
imul
ret
fdivrp
or
jl
push
aad
sahf
ljmp
scas
mov
test
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
das
dec
adc
imul
sar
shlb
jle
mov
inc
push
bswap
test
fwait
mov
adc
icebp
inc
ret
repnz
daa
or
in
movsl
out
fcmovne
data16
hlt
push
push
lea
daa
shll
dec
dec
jecxz
push
fisubrl
xchg
jge
gs
dec
scas
add
mov
imul
clc
repnz
out
sbb
jecxz
mov
popf
jns
dec
out
scas
sub
inc
add
divl
xor
jp
lods
mov
es
dec
out
lcall
lahf
aam
jmp
mov
shlb
ret
test
cltd
add
cmc
cld
movsb
lret
in
aam
in
test
sub
pxor
jp
aad
or
movsl
dec
xchg
add
rcl
pop
mov
data16
push
incb
or
ret
test
imul
push
lds
sahf
pushf
push
jae
dec
jle
and
mov
jne
aam
fcomps
pop
lods
lret
adc
mov
lods
and
mov
mov
pop
mov
xlat
xchg
data16
cmp
sub
xchg
push
mov
test
imul
iret
daa
inc
fists
scas
sbb
scas
jmp
fimuls
bswap
push
lods
leave
cmpb
pop
jp
push
mov
sbbb
dec
les
sahf
inc
dec
popf
xchg
sbbl
sarl
xor
pop
cli
movsb
mov
adc
sbbb
xchg
mov
and
jle
cli
repz
sbb
repz
cmpsb
cmp
pop
and
std
sub
inc
test
into
jns
cmpsb
inc
aaa
xchg
inc
push
push
adc
sarb
add
jmp
sbbb
cltd
js
mov
jae
daa
das
test
jo
imul
sub
je
dec
add
les
pop
mov
add
pop
lods
pop
hlt
int3
dec
ja
popf
mov
negl
flds
xor
or
aad
pushf
xchg
fdivrs
imul
clc
enter
or
pusha
iretw
xor
sbb
orb
sahf
xchg
loop
enter
cmp
mov
js
lea
movsb
dec
aad
lcall
aas
aam
cmp
pop
cltd
fistpll
sub
gs
jmp
cmpsb
mov
mov
mov
mov
xchg
aas
xchg
push
cmp
adc
jne
push
sti
leave
clc
fdivl
test
xor
pop
mov
js
mov
xchg
adc
and
mov
cmp
jne
xor
testb
imul
mov
lods
dec
mov
clc
stos
fsubrl
jl
dec
mov
repnz
shrb
packuswb
mov
cmp
push
lret
push
inc
mov
pop
lret
push
loop
dec
cmp
jle
into
jge
mov
sub
les
mov
add
iret
int3
data16
lea
lods
stos
adc
and
mov
xor
mov
push
outsb
lock
inc
pop
data16
add
pop
mov
clc
outsl
repnz
jno
mov
cmp
pop
inc
xor
int
gs
push
or
xchg
jne
mov
sub
push
and
mov
iret
repz
add
stos
cmp
js
xchg
mov
aas
movsb
icebp
jnp
sub
sub
push
inc
mov
cs
aam
imul
jmp
clc
icebp
mov
icebp
ficompl
mov
jo
jg
jo
mov
push
call
sub
pushf
xchg
mov
into
sti
pop
aaa
dec
call
and
lcall
out
mov
sub
jmp
push
into
das
lret
sub
jbe
int
add
jnp
xor
nop
lahf
mov
pop
lods
pop
xlat
xchg
pop
cli
lods
xchg
cmpsb
out
bnd
addr16
incl
dec
pop
cmc
or
test
adcl
pop
fsubrs
cmpsl
jb
ljmp
and
mov
int
inc
movsl
mov
cmp
push
loope
fimull
orb
xchg
push
fwait
out
lods
inc
js
jno
sbb
sbb
fcoms
lea
jb
hlt
out
lock
xchg
sahf
jae
sti
iret
cmpsb
push
pushf
cmc
xchg
mov
pop
xchg
sbb
mov
xlat
ret
add
cmc
sub
sahf
adc
inc
in
jno
or
lods
ljmp
xchg
fnsave
fdivrs
outsl
insb
es
je
lcall
xchg
dec
jae
call
je
xchg
mov
push
xor
lods
add
pop
pop
push
nop
in
add
addr16
mov
push
xor
jl
fwait
lods
adc
sub
mov
mov
addr16
in
sbb
fisubrl
loop
pop
gs
out
sbb
mov
and
jae
sub
pop
push
add
add
add
mov
mov
pop
push
orl
push
inc
mov
add
negb
jmp
add
adc
testb
lcall
ja
sahf
sub
loop
mov
fsub
sub
imul
outsb
and
and
and
jbe
push
xchg
gs
add
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
sti
cs
mul
jo
imul
cs
xchg
jecxz
push
jo
dec
js
mov
xchg
negl
scas
aaa
gs
push
gs
loopne
mov
rcrb
aam
rol
sub
xchg
fisubs
dec
mov
xor
sti
mov
enter
test
test
jp
test
pop
pop
sbbb
dec
and
in
mov
fadds
es
fnstcw
cld
call
and
pop
test
cmpb
push
inc
int
cmp
xor
mov
mov
sbb
repnz
daa
jg
cltd
in
pop
mov
adc
out
mov
jle
loop
ret
mov
xor
mov
pop
adc
mov
add
out
dec
xor
das
imulb
imul
cwtl
pop
xorl
dec
mov
call
and
adc
inc
and
mov
mov
daa
leave
xchg
pop
xor
imul
xchg
loop
dec
add
cmp
or
aas
and
les
mov
add
pushf
and
push
jae
jne
mov
mov
cmpb
inc
pop
test
dec
mov
push
inc
adc
subb
jge
cmp
pop
cmc
sub
fcomps
arpl
adc
imul
pop
sarl
xor
stc
cmp
test
xchg
and
arpl
vmovmskps
outsl
cmc
jae
push
popa
cmpsl
hlt
hlt
cltd
movsl
int3
add
negl
sub
mov
addr16
scas
push
repz
hlt
stc
divl
add
leave
add
in
or
out
movsb
in
aaa
mov
or
xor
out
ds
movsb
xlat
out
or
aaa
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
and
int3
loopne
jo
imul
pop
jae
lea
push
out
shll
pusha
jmp
xchg
pop
and
test
xor
test
add
stos
jecxz
jne
mov
push
pop
inc
inc
xchg
jae
in
cltd
mov
mov
rcrl
sub
addl
stc
popf
stos
dec
stos
push
fdivr
sbb
rcll
outsl
mov
cmp
sti
jnp
add
adc
cmpsl
adc
rcll
push
push
ljmp
movsl
stos
fsubl
pushf
das
in
dec
mov
mov
gs
repz
gs
jno
xchg
arpl
sbb
xchg
cmc
icebp
cmp
rcl
lods
cs
ret
xor
pop
insb
push
mov
jb
mov
cltd
ss
imul
iret
pop
xlat
aad
mov
mov
mov
insl
cmp
sub
loope
jecxz
add
pop
adc
bound
xchg
clc
int
xlat
inc
in
pop
popf
jns
pop
inc
rorb
push
jmp
pop
push
mov
rclb
leave
imul
aaa
push
pop
out
mov
je
js
nopl
push
cwtl
xor
lahf
repnz
push
xlat
pop
cmp
jle
push
xchg
inc
divb
je
xchg
sub
pushf
dec
pop
test
mov
mov
scas
lahf
and
lret
pop
cld
cs
xchg
mov
mov
mov
stos
scas
jg
rclb
mov
or
mov
dec
dec
mov
jbe
je
jbe
jae
pop
or
in
or
outsb
ljmp
testl
shrl
xchg
sbb
push
arpl
sub
jns
or
sbb
pop
loop
push
sub
pop
mov
addr16
adc
repz
jae
jge
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
insl
jl
jo
imul
loop
add
xor
cld
pop
testl
mov
jns
les
popa
imul
xor
pop
inc
popf
mov
je
xchg
bound
fwait
popf
lods
pop
mov
push
jnp
mov
inc
sbb
jae
push
sub
insl
outsl
mov
mov
lea
out
scas
aad
fisubl
or
push
imul
roll
aaa
push
xor
jl
xorb
xchg
or
out
fidivrs
pop
jge
or
imul
bound
xchg
into
ljmp
in
lods
mov
xchg
stc
mov
push
push
ss
mov
int3
pop
pop
jl
scas
imul
mov
pop
mov
or
mov
mov
and
bound
stos
cmp
pop
inc
test
adc
aam
mov
andl
cmp
in
cltd
sbb
outsl
loope
adc
push
lods
pop
push
mov
inc
inc
xchg
popa
xchg
addl
xchg
dec
insb
jno
sub
insl
adcl
loope
pop
arpl
jo
js
mov
bnd
aas
push
or
sbb
sbb
cmc
and
add
and
push
stos
in
mov
out
xchg
pop
pop
cli
cmp
adcb
dec
xchg
xor
adc
xchg
inc
dec
insl
xchg
xor
push
jecxz
ret
inc
ljmp
cmp
ja
sbb
outsb
movsb
fldt
push
xchg
xlat
mov
push
lods
stos
bound
push
fidivrs
insb
pop
lock
mov
jle
movsb
push
mov
mov
enter
push
stc
outsb
push
or
cmpsl
and
in
push
out
lea
enter
sub
mov
popf
test
mov
inc
and
cli
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
outsl
lahf
mov
jo
jg
jo
fidivl
pop
dec
leave
fisubs
and
je
imul
dec
repz
cmp
es
loope
jb
sub
cwtl
je
out
xchg
fwait
adc
xchg
repnz
into
testl
sub
inc
push
lock
mov
mov
enter
adc
dec
or
jle,pt
xchg
xor
xchg
fadds
sbb
inc
and
jmp
cmp
push
into
adc
xlat
inc
jle
sarl
stos
sub
jb
cli
enter
ja
dec
jo
frstor
icebp
clc
cld
mov
push
lahf
scas
scas
test
div
pop
adc
mov
sbb
push
stc
pop
in
adc
or
insb
and
cs
fs
add
inc
cmp
test
cmp
adc
xchg
inc
jg
inc
or
ficoml
dec
aaa
scas
sbb
jge
and
and
push
jg
ja
pop
data16
in
dec
into
test
inc
adc
leave
push
or
xchg
cs
stc
out
dec
push
icebp
xor
cmpsb
lods
pop
js
jnp
inc
jae
xchg
bound
pop
xchg
mov
and
rcrb
iret
addl
and
out
popa
es
sub
inc
cmpsl
hlt
scas
mov
out
or
jge
push
jmp
mov
jae
jno
mov
hlt
or
inc
int
ja
jo
xchg
jg
jo
jne
cmp
push
cwtl
mov
xor
addr16
addr16
popa
and
ljmp
mov
hlt
cmpsl
subb
xchg
not
sub
ds
inc
inc
test
into
movsb
daa
jle
stc
bound
cmp
cwtl
xchg
mov
or
popf
push
out
cltd
fisttpll
push
out
or
sub
mov
test
aad
addr16
insb
mov
jno
imul
dec
fnstcw
popf
pushf
stc
aam
xchg
and
pop
std
jbe
cmp
sarb
push
in
test
roll
xor
scas
stc
cmp
mov
push
jg
sbb
jno
adcl
mov
mov
cwtl
out
cs
cwtl
icebp
ja
push
push
mov
jg
sbb
adc
dec
scas
mov
push
enter
into
dec
xor
imul
stos
add
push
jae
hlt
gs
popf
adc
mov
mov
movsb
sub
imul
ret
mov
push
jg,pt
aad
addr16
cmp
movsb
lds
and
xchg
mov
push
sbb
hlt
inc
add
mov
push
pop
mov
adc
das
sub
mov
mov
jns
pop
inc
pop
mov
xor
fisttpll
scas
stos
cmp
xchg
les
pop
cmc
sub
fwait
jbe
fildl
fdivl
mov
mov
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
fbstp
mov
jo
xchg
jg
jo
pop
arpl
sub
xor
push
cvtps2pd
in
sub
in
sub
jl
cmp
movsb
pop
adc
out
faddl
call
call
dec
inc
cmc
in
dec
rcrl
adc
outsl
jmp
mov
adc
mov
inc
andb
mov
mov
aad
lock
or
rolb
push
xor
sahf
popf
into
clc
lods
mov
pushf
rcrl
data16
and
movsl
dec
sti
push
leave
inc
testl
rolb
mov
mov
dec
xor
ljmp
pop
jl
jp
and
aam
push
icebp
jo
dec
movsl
sbb
sahf
inc
sbb
lret
dec
and
rcl
imul
int
adc
mov
jns
pop
ja
xchg
in
push
pop
add
hlt
loop
mov
aam
xchg
mov
inc
dec
pop
inc
rorb
pop
sub
loop
roll
pushf
test
sbb
xchg
ds
cltd
add
xchg
scas
iret
jo
mov
sbb
paddsw
jmp
mov
aam
push
fwait
stc
jnp
scas
icebp
aaa
orl
notb
mov
dec
push
das
stos
cmc
push
pop
aam
addr16
mov
pop
mov
xchg
and
cmp
pop
pop
aam
dec
lret
mov
imul
push
pop
cmc
int3
cltd
mov
mov
push
les
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
add
xchg
int3
and
jo
xchg
jg
jo
mov
cmp
cmp
mov
cmp
arpl
inc
add
outsl
mov
push
xor
inc
xchg
mov
or
testb
mov
mov
pop
shl
mov
inc
sbb
fs
imul
mov
test
lret
or
int3
dec
insb
mov
ret
mov
jae
push
jo
negb
aas
fsubs
fdivl
int
add
test
add
movsl
aaa
adcl
rep
lfs
popf
loope
push
xor
mov
lea
shll
push
xor
mov
xchg
shlb
jg
inc
in
and
pop
dec
or
and
fwait
movsl
js
push
mov
andl
ss
into
pop
testl
and
inc
insl
bnd
loopne
and
orb
rol
out
adc
jmp
aad
fs
aad
dec
fdiv
dec
adc
cmpsl
add
xor
lret
push
push
out
js
cmp
jnp
stos
mov
jecxz
or
pop
ljmp
fadds
std
daa
out
jmp
cmp
mov
inc
dec
or
add
cmpsl
jp
push
xchg
mov
test
mov
pop
cs
ret
mov
flds
push
jns
sub
push
in
pop
cld
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
je
pop
fiaddl
jo
xchg
jg
jo
sub
pop
inc
cmc
mov
inc
popf
enter
std
loop
xor
scas
les
out
pop
mov
andb
jl
xor
inc
mov
push
cmp
repz
push
xor
adc
dec
insl
sub
cmp
adc
add
inc
inc
add
pop
cmp
std
lcall
into
into
fistpl
imul
or
fidivrl
cltd
sub
sub
mov
rorb
ret
std
lahf
pop
out
cli
xor
mov
lahf
sub
cmp
and
jne
pop
fwait
ss
out
xchg
fisttpll
les
and
push
adcl
or
mov
ficomps
push
cmp
lock
adc
push
add
mov
pop
or
xor
lahf
movsb
xchg
add
sbb
pop
test
add
sbb
or
scas
or
mov
stos
andl
push
ja
pop
imull
aaa
stc
ljmp
popa
pop
imul
stos
cwtl
add
push
inc
or
cmp
or
jg
push
add
ret
nop
cmp
mov
pop
cmc
mov
xchg
push
test
push
jnp
pop
sbb
sbb
lret
or
jae
ds
mov
shrb
mov
mulb
jecxz
add
mov
xor
mov
sub
jg
lods
dec
mov
jae
adc
sbb
imul
inc
clc
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
mov
call
jo
das
scas
leave
in
push
loopne
in
mov
imul
dec
mov
imull
cmpsl
jno
decb
aad
pop
or
xor
sahf
sub
sbb
sbb
jne
outsl
repnz
cmpsl
mov
xlat
inc
jno
sti
ljmp
aaa
imul
mov
in
stc
mov
insb
arpl
jmp
dec
xchg
mov
shll
cltd
sub
stc
mov
daa
sbb
icebp
movsb
dec
push
lret
pop
repz
jg
int
inc
inc
mov
int3
add
mov
insl
fdivr
test
jae
pop
out
lret
xor
orb
and
mov
mov
pop
je
lret
pop
mov
or
imul
inc
scas
out
loope
lcall
adc
outsb
inc
lret
or
dec
scas
aas
mov
mov
xchg
lret
or
imul
push
ds
outsl
mov
cli
loop
movsb
rorb
ret
add
daa
jns
outsb
cld
je
jmp
dec
mov
dec
cmovl
mov
call
xchg
push
inc
out
inc
enter
mov
cld
and
and
mov
repnz
lret
rcr
mov
movsb
push
cli
stc
stos
jp
xchg
fcoml
cmp
sub
pop
pushl
std
aam
mov
xchg
stos
fadd
sbb
add
mov
mov
add
push
loopne
inc
mov
test
add
inc
mov
jmp
mov
icebp
in
icebp
mov
push
movsb
push
adc
jo
xchg
jg
jo
or
pop
outsb
xor
add
xchg
dec
jb
loopne
or
lock
add
loop
sub
out
push
mov
push
negb
iret
fsubrs
in
inc
cld
out
call
enter
stos
mov
clc
out
or
inc
sbb
lret
sahf
aaa
lods
dec
popf
arpl
dec
xchg
in
pop
jg,pt
cs
ret
xor
sarb
roll
jne
sub
test
rorb
push
fs
rorl
pop
daa
lret
cmp
xchg
imul
dec
push
pop
sbbl
jne
fiaddl
mov
dec
out
sbb
aas
mov
add
xchg
pop
mov
xor
movsl
outsl
inc
inc
in
pop
pop
adc
decl
pop
cmpb
adc
cmp
adc
jmp
shrl
jne
loope
jle
aam
xchg
xor
fucomi
push
jae
xchg
adc
test
shlb
cmpsl
pop
fidivrl
jl
lods
add
popa
enter
rcll
cmp
cltd
push
lret
test
dec
and
mov
jo
pop
sub
clc
push
int
inc
sbb
gs
fisubrl
mov
pop
pop
mov
in
xlat
fdivl
cltd
dec
fisttpl
pop
outsl
jle
mov
or
sbb
sbb
lret
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
in
lret
xchg
cmc
jo
xchg
jg
jo
call
jp
jg
stos
in
jmp
ret
imul
idivb
scas
dec
sbbb
mov
pop
or
aam
mov
jae
mov
xchg
xchg
test
fcmove
xor
add
out
sub
cmp
add
call
push
fldenv
sti
inc
fsubp
xchg
adc
sub
xchg
out
test
fsubrs
mov
and
cmc
xchg
inc
mov
pop
cmp
mov
hlt
lock
rolb
jmp
fimull
int
pop
daa
xchg
cmpsb
cmp
dec
mov
mov
or
jp
xor
jecxz
xchg
fdivrl
mov
push
mov
lret
cmp
rorb
push
dec
xor
add
xor
aaa
lcall
divb
adc
lock
push
out
jmp
out
mov
mov
fisttpll
mov
sbb
mov
mov
mov
mov
inc
cmp
mov
jbe
or
adc
mov
std
das
repz
mov
push
mov
xchg
jg
cmp
pop
push
inc
sbb
mov
insl
push
repnz
mov
loopne
fsub
xor
stos
lock
shr
lcall
xchg
lahf
insl
icebp
push
xchg
jp
sbbb
in
fnsave
movsb
in
adc
and
insl
xchg
push
sbb
rcrb
jns
iret
mov
mov
jmp
frndint
std
imul
mov
xor
repz
xchg
jg
jo
push
fildll
xchg
adc
xchg
dec
popf
shlb
cmpsl
push
mov
lahf
push
adc
outsb
pop
popl
mov
addr16
pop
mov
icebp
jmp
int3
xor
sbb
sbb
xchg
adc
jecxz
mov
lahf
jp
ja
push
fsts
jl
pop
sbb
jnp
cmp
mov
jge
test
popf
ljmp
pop
xor
fists
ds
movsb
sub
adc
mov
cmp
cmpsl
or
js
jb
ljmp
mov
pop
xor
pop
inc
mov
ds
stos
sbb
imul
pushf
test
dec
and
dec
adc
popf
div
movsb
in
roll
or
jle
inc
xchg
enter
repnz
or
jns
inc
adc
xchg
scas
lret
jb
add
pop
push
test
testb
psllw
or
xor
mov
mov
es
mov
sbb
les
inc
in
fsubrs
stos
leave
or
dec
shll
rol
sub
mov
pop
inc
ja
xor
shll
cmc
and
sbb
outsb
into
adc
xchg
test
jnp
rol
push
xor
add
or
stos
rcrb
sti
arpl
fadds
jg
xchg
xchg
dec
xchg
shll
shl
push
and
sbb
sub
rcrl
stos
add
push
loopne
sbb
sbb
mov
jp
js
add
add
jmp
hlt
sbb
rep
cmp
aaa
lea
lret
dec
bnd
xchg
jg
jo
or
arpl
loop
cmp
push
pop
cld
clc
cmp
insb
ret
cld
insl
xor
inc
adc
movsb
mov
add
push
add
inc
xor
sbb
jmp
xchg
xchg
insl
mov
lods
mov
and
icebp
sarl
adc
mov
adc
dec
je
lret
mov
jno
inc
push
and
adc
cwtl
rorl
jns
xchg
insb
jmp
xor
add
andb
pop
repnz
mov
in
aam
imul
cmp
mov
in
jecxz
and
pop
and
pop
adc
lods
shll
ljmp
scas
int
sbb
dec
aad
stc
fstps
lret
adc
xchg
repz
mov
add
dec
jne
out
stc
inc
sbb
cli
rorl
sbb
les
mov
inc
xchg
sub
aaa
push
fisubrl
dec
add
rol
lock
scas
or
sub
jne
inc
xchg
xor
jmp
sarl
mov
out
mov
and
addr16
frstor
sahf
pop
fwait
sahf
pop
fldl
mov
lock
loopne
test
sbb
and
dec
inc
fstpt
and
cmp
add
out
add
adc
int
fnsave
push
xchg
mov
mov
cmpl
cli
int3
dec
fs
push
enter
fcom
ja
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
jge
in
jo
xchg
jg
jo
loope
cmc
mov
aaa
lahf
outsb
movb
addr16
stos
mov
imul
cmp
sub
ret
pop
inc
loope
lods
pusha
test
pop
xchg
and
shll
scas
push
inc
frndint
push
sub
push
lret
lcall
in
into
inc
shr
arpl
aas
pop
push
lahf
dec
push
aad
cld
in
enter
or
push
jecxz
test
jge
adc
mov
addr16
stos
mov
sti
ss
shll
js
es
sbbl
push
jge
mov
fimuls
cli
imulb
jmp
adc
sub
mov
gs
sbb
test
in
pop
outsl
mov
xor
aas
out
arpl
out
dec
std
jg
divb
inc
push
dec
push
push
scas
and
sbb
movb
loope
sbb
and
out
mov
lea
sbb
jle
pop
ds
xor
enter
xchg
cmp
add
stc
fwait
loopne
cmpsb
cmc
push
xchg
fimuls
pop
imul
bound
fstps
pop
push
fdivl
dec
push
std
bound
pop
movsl
push
sub
push
repz
js
add
inc
movsb
inc
xchg
pop
pop
cmp
mov
int
cli
out
xchg
push
js
fiaddl
pop
out
jl
movl
adc
adc
ret
jmp
clc
inc
out
sub
push
xchg
jmp
dec
jnp
clc
fistps
inc
repnz
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
popf
hlt
jne
pushf
pop
loope
cli
jg
stc
cmpsl
lcall
inc
push
insl
xchg
cmp
inc
ja
dec
iret
lahf
addr16
fwait
sub
mov
or
into
lret
and
mov
pushf
bound
orl
add
ret
std
and
push
mov
and
push
insb
mov
test
adc
add
ja
ds
aaa
mov
stos
xor
les
loop
jecxz
sub
imul
nop
sbb
sub
fsubrl
jb
pop
mov
xorb
and
enter
jge
lret
sbb
jmp
icebp
test
push
mov
lret
nop
cmp
es
insl
aas
sahf
inc
cmp
jbe
or
notl
imul
and
or
stos
or
fmul
test
sbbb
shl
xor
imul
jae
in
nop
xchg
test
inc
pop
pop
repnz
scas
jne
jae
push
cs
scas
mov
mov
sbb
adc
aad
aam
sbb
orb
mov
lds
es
ja
mov
jp
addl
ss
add
mov
cmpl
jne
sub
sahf
sbb
inc
xchg
shl
repnz
xchg
mov
in
mov
scas
add
aad
sbb
xlat
fmuls
mov
pusha
lret
rcl
push
inc
pop
jno
jecxz
dec
add
data16
jne
sbb
call
push
loopne
mov
push
pop
rclb
or
mov
lea
nop
lds
jne
and
or
push
xor
in
lods
cmp
and
push
jmp
test
push
or
and
add
inc
add
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
cld
jo
jb
jo
xchg
sub
jl
mov
xchg
add
cmp
adc
adc
and
cmp
out
lret
cmpsb
jne
or
xor
aam
xor
jmp
push
lock
call
out
cmp
test
adc
leave
sbb
pop
or
pushf
inc
xchg
dec
idivb
jno
jge
jle
outsb
push
movsb
gs
dec
sub
xchg
sbb
ficomps
aam
mov
dec
clc
out
lock
mov
inc
mov
int3
jae
lcall
mov
pop
and
jmp
add
add
lods
pop
rcrb
jne
into
repz
incb
shrb
lods
fbld
loope
fsubl
xor
outsb
pop
pop
loopne
inc
cmpsl
fsts
test
nop
das
lods
fisubrl
stos
xchg
aam
aam
out
into
cmp
clc
xor
sarb
xchg
arpl
jecxz
outsb
movb
xchg
rcrb
dec
xchg
fsub
add
mov
pop
sbb
roll
xor
outsl
push
loope
cltd
mov
and
fcomps
aam
aad
pop
fimuls
push
or
cmc
dec
jbe
sbb
inc
and
ljmp
xchg
in
hlt
push
push
or
int
dec
fisttps
dec
push
xorl
push
into
outsb
mov
mov
es
test
push
pusha
add
sbb
cmc
dec
iret
test
push
les
pusha
fstpt
add
jl
and
iret
pop
pop
or
cmp
cld
jecxz
fs
push
inc
adcl
fs
sub
inc
push
dec
jg
or
or
imul
icebp
mov
xchg
daa
push
fdiv
test
inc
cmpsl
push
cld
push
or
push
insl
fbld
in
test
mov
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
leave
or
cli
jo
jb
jo
inc
xor
mov
pop
fsubs
lret
cmpsl
fimuls
test
dec
ja
jl
jle
pop
inc
mov
insb
lcall
mov
ja
aas
cltd
clc
notb
je
ljmp
fsub
rorb
mov
inc
jl
scas
dec
test
mov
add
mov
jb
je
inc
sbb
pop
adc
movsl
inc
daa
test
scas
dec
lock
sahf
repnz
shrb
sbbl
or
inc
test
jmp
rol
fiaddl
xchg
jb
fadds
xor
pop
loop
inc
arpl
jne
push
shl
jb
xchg
cld
push
shrb
je
pop
lahf
out
mov
mov
sbb
cmpsl
out
inc
mov
sbb
sbb
fwait
arpl
fldenv
movsb
xor
ret
mov
ret
scas
negl
mov
out
ret
mov
cmp
jae
cmpsl
dec
cld
jno
xlat
jmp
insb
push
pop
test
shll
lods
fs
fistpl
cmp
test
sbb
xchg
aas
add
mov
mov
and
out
ljmp
and
xchg
pop
ljmp
mov
mov
inc
mov
xchg
inc
jns
jg
jl
dec
fnstsw
add
repz
xchg
xchg
cmpsl
sub
inc
mov
pushf
mov
push
test
sbb
adc
sub
data16
mov
lea
repz
xchg
push
cmp
outsb
sub
jb
test
int3
sbb
mov
stc
mov
lcall
fcmovnu
pop
sbb
addr16
mov
loopne
adc
mov
iret
sahf
aaa
dec
in
lods
sub
add
xor
inc
mov
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
inc
call
jo
jg
jo
or
sbb
xchg
xor
dec
xchg
lds
lret
stos
loope
iret
enter
rcrb
mov
ret
xor
push
outsb
in
int
jne
jl
adc
shl
adc
das
pop
pushf
outsb
pop
mov
xor
mov
push
xchg
jg
out
xlat
aad
cld
ss
pushf
mov
daa
inc
cmp
push
pop
into
inc
scas
stc
fs
movsl
add
call
push
or
cmp
push
pushf
dec
shlb
xor
cmp
testb
sub
mov
out
aam
fs
add
push
or
rcrb
fsubrl
cmp
mov
or
rcrl
stos
lea
stos
aas
push
daa
jbe
xchg
mov
mov
into
push
nop
mov
arpl
inc
pop
mov
push
or
xchg
jne
stos
mov
or
movsl
ret
lods
adc
fisttpl
test
jl
add
and
xchg
push
sbb
mov
shlb
jns
insb
or
pop
lcall
loopne
mov
int
leave
decb
aam
subl
iret
pop
pop
icebp
je
shll
enter
fcmove
mov
lds
test
stos
sbb
lods
xchg
pop
jae
pop
test
jne
sbb
jmp
jbe
push
xchg
pop
sbb
add
jle
into
scas
xor
and
push
jge
rol
add
pop
mov
cs
jbe
icebp
mov
pop
rcrb
hlt
or
xchg
adc
fstl
cmp
pop
jne
lret
hlt
int
push
pop
orb
addr16
jle
fdivrl
sbb
inc
in
cmp
popf
fstps
mov
sub
inc
sub
inc
in
or
int
push
or
jmp
jnp
xchg
les
sub
mov
xchg
jb
jo
rcl
jp
jnp
sub
inc
push
mov
in
mov
bound
insb
adc
pushf
out
stos
mov
sbb
pop
out
or
and
xchg
fs
xchg
jnp
sti
or
sbb
xchg
dec
xchg
repnz
and
lds
cmc
sbb
out
in
and
xchg
inc
pop
dec
aas
repnz
jbe
sbb
or
test
add
sub
mov
paddusb
mov
mov
jo
repnz
aad
inc
cmpsb
outsb
stc
push
add
loopne
inc
sbb
in
sbb
pop
xchg
popa
mov
cmp
pop
push
add
push
out
dec
xchg
xor
arpl
mov
clc
mov
inc
dec
mov
es
xchg
jl
aad
dec
cmp
mov
out
sbb
jno
pop
lds
sbb
les
adc
cmp
repnz
test
sub
das
daa
movsl
fs
mov
push
xlat
pusha
mov
bnd
push
cwtl
adc
pop
loop
mov
lods
sbb
lods
mov
sub
mov
dec
aad
sub
xor
icebp
loop
mov
jmp
out
fidivs
cmpsl
sub
or
sub
jle
std
jnp
out
pop
or
in
sbb
mov
pop
push
out
sub
arpl
push
and
dec
push
and
or
shlb
push
xchg
pop
sbb
mov
imul
fists
adc
push
fdivl
test
loope
lds
fs
add
cmc
jge
test
cmp
adc
cmp
daa
lcall
cltd
loope
push
les
out
hlt
dec
sarb
and
add
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
shll
jae
jo
leave
jle
jo
rcl
scas
sbb
sbb
xor
stos
xchg
js
ficompl
test
imul
aad
pop
std
pusha
repnz
and
aaa
arpl
mov
mov
cmp
pushf
lcall
mov
add
jl
in
add
rorl
xor
pop
sub
add
dec
cmp
loope
mov
cmpl
fmul
dec
in
inc
xchg
fwait
shrb
mov
bound
and
ret
mov
imul
cs
test
xchg
cmpsb
sbb
ret
jecxz
cvttps2pi
nop
iret
mov
sbb
fdivs
sarl
es
cs
pop
adc
js
xor
jne
lahf
mov
mov
fdivrs
xchg
xor
fs
jbe
notl
xchg
sub
fndisi(8087
imul
or
iret
sub
or
rcl
adc
push
data16
enter
mov
xor
pop
cmp
roll
neg
mov
dec
fsubrl
jno
lods
xor
xchg
aam
rcrl
cwtl
pushf
lods
ret
push
mov
es
js
sti
push
into
and
pop
rorl
cmpsl
lds
dec
cmp
lea
call
lcall
or
ror
movsb
pop
pop
adc
into
inc
test
jg
mov
cwtl
sbb
test
out
xchg
lcall
xchg
cmp
inc
push
int
sub
or
in
jns
dec
imul
sbb
fs
int
inc
cwtl
ret
push
push
inc
sub
std
inc
repz
pop
sub
lock
pop
mov
mov
cmp
cmc
mov
call
push
push
cmp
das
xchg
xor
imull
in
adc
xchg
sbbb
hlt
push
pop
popf
dec
add
std
jno
adc
imul
mov
sarb
inc
sbb
pusha
add
jmp
fisubl
in
pop
ret
pop
std
inc
push
or
mov
cwtl
push
pop
mov
fdivrp
mov
cmpsb
lcall
test
add
add
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
push
outsl
jns
int3
xorb
jle
jo
mov
pop
call
out
sub
je
mov
rcl
das
pop
mov
xchg
cmp
hlt
jb
xchg
pop
iret
dec
jmp
lcall
cmp
xchg
test
std
rclb
xchg
jae
mov
cmc
stos
pop
or
mov
push
cld
shrl
and
fisttpl
sbb
pop
in
push
jns
add
mov
or
mov
dec
aas
rclb
jb
fidivrl
inc
lea
pop
pop
adc
adc
stos
je
xchg
inc
mov
pop
push
lahf
test
test
xchg
out
imul
ret
arpl
mov
jp
fcomps
mov
push
bnd
iret
mov
mov
push
out
and
stc
repnz
outsl
aam
push
lea
mov
mov
inc
mov
push
push
mov
insb
gs
push
punpckhdq
push
or
xor
cltd
sbb
or
adc
mov
cmp
adc
and
mov
rclb
and
jle
outsl
insb
mov
jns
rolb
std
int3
push
adc
test
inc
jo
xchg
cmp
enter
mov
inc
mov
inc
mov
js
inc
dec
test
mov
loope
cmpsb
inc
imul
in
push
lock
mov
fwait
aad
sub
push
adc
add
pop
dec
std
adc
movb
adc
mov
jne
or
rorb
sbbb
arpl
and
dec
imul
push
bnd
mov
pop
pop
jbe
lods
test
add
xchg
out
xchg
inc
mov
xor
cmpsl
bound
aas
mov
sarl
sarb
xor
mov
xchg
push
stc
mov
push
mov
movsb
imul
sbbb
lods
push
mov
inc
aaa
fstpl
pop
cmpsl
ret
sti
imul
jno
dec
loop,pn
jns
push
add
jmp
ja
and
dec
xchg
mov
jo
jle
jo
out
push
cltd
aaa
pop
lahf
movsb
loop
fimull
into
lret
fdivr
je
fistl
mov
dec
popa
sbb
mov
ficoml
and
xchg
cmc
jo
stos
fidivrs
cmp
daa
ss
fadds
and
add
jo
and
sub
bound
mov
imul
inc
mov
repz
fdivl
addr16
jo
orb
or
lret
int
sti
sbb
or
inc
jmp
pop
sti
stc
repnz
ret
push
in
mov
popf
clc
mov
stos
test
jbe
les
call
jb
and
push
mov
pop
adc
jne
jmp
fcompl
rcr
fisttps
das
jge
push
jnp
sbb
lds
jns
pop
andl
cltd
cmp
mov
sbbl
jg
insb
inc
xor
not
and
lahf
movsb
jnp
jecxz,pt
data16
cli
xor
mov
mov
in
jmp
jb
mov
js
or
adc
repnz
cld
mov
std
pop
xor
stos
xchg
sbb
mov
ja
ficompl
push
es
and
sub
xor
adc
inc
je
sub
popa
cmp
pop
stos
fisttpll
sub
jae
and
sti
or
mov
mov
jb
push
xchg
dec
adc
sahf
sarl
sub
cmp
and
xchg
jbe
popf
dec
jmp
sbb
adc
dec
gs
inc
cld
jnp
push
rorb
fisubrs
popa
jecxz
addb
and
ja
mov
into
xor
loop
lret
nop
inc
cmp
sysret
arpl
inc
dec
mov
lret
and
adc
mov
mov
push
mov
adc
xchg
mov
aas
scas
jbe
insl
dec
xchg
sbb
dec
sbb
int
stos
adcb
add
push
fnsave
push
icebp
rcl
mov
ja
cmp
adc
addr16
mov
outsl
fcmove
test
cli
mov
push
icebp
mov
ret
fnstenv
pop
xchg
mov
sbb
inc
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
push
cmp
lea
dec
jge
jo
fisttpl
fwait
sub
cmp
mov
out
repnz
pop
mov
sarb
sbb
xor
jl
loop
fcoml
clc
testb
fwait
dec
jno
push
jo
jge
jmp
movsb
ret
ljmp
dec
aam
aaa
repz
sahf
daa
stos
push
leave
lahf
insb
out
pop
jae
xorl
imul
bnd
adc
movsl
adcb
inc
sub
cwtl
ss
arpl
mov
icebp
fldt
xchg
stos
sbb
outsb
mov
adc
sub
inc
push
rep
sbb
pop
pop
mov
bound
inc
std
push
pop
imul
cmp
and
lret
aas
xor
dec
shll
into
add
hlt
cmp
ficomps
mov
and
lahf
faddl
sbb
inc
adc
cld
addr16
lahf
xchg
pop
adc
or
or
dec
mov
xor
push
mov
and
mov
dec
fisubs
dec
pop
test
push
imul
add
test
push
dec
push
lea
icebp
mov
jl
pop
data16
mov
repz
xlat
xchg
sub
pop
mov
fmuls
jg
dec
lcall
add
leave
cmp
mov
xor
lret
loope
int3
repz
je
or
je
mov
cmp
je
pop
cmp
pop
jle
mov
inc
push
cmp
pop
call
jle
sbb
dec
subl
add
xlat
or
mov
shlb
dec
iret
mov
loop
push
push
jmp
pop
sub
add
cmp
push
addl
mov
out
mov
push
mov
outsb
jnp
cs
xchg
iret
or
or
xor
rcrl
loope
repnz
push
jo
adc
icebp
fists
int3
pop
aad
int
sub
pushf
loopne
sbb
dec
adc
cmp
lods
dec
ss
xor
loop
popf
or
inc
cmp
in
push
pop
sahf
fmuls
pop
jb
sub
add
mov
push
aaa
mov
leave
xlat
cmovae
cld
test
adc
fs
leave
lds
shlb
dec
and
mov
push
cmp
movsb
test
into
sub
push
cmpsb
pop
fstps
push
cwtl
and
pop
mov
adc
dec
push
xor
dec
inc
fs
int3
loop
hlt
xor
inc
xchg
scas
sub
mov
stos
test
add
pop
lds
dec
mov
cmc
outsb
and
js
push
js
cld
es
xchg
nop
ja
fisubs
cmp
fisttps
rcr
or
push
pop
cs
push
adc
leave
xchg
hlt
fstpt
ja
daa
adc
push
mov
test
fcom
mov
fwait
cwtl
arpl
ja
notb
push
pop
add
cli
xor
pop
and
outsb
idivl
push
imul
insl
push
je
mov
xchg
aad
push
lret
sbb
out
mov
dec
xchg
push
jno
ss
xchg
movsl
sarb
and
pushl
mov
hlt
out
mov
lahf
mov
sub
lahf
pop
inc
int
xchg
into
movsb
outsl
adc
adc
push
data16
lret
add
shrl
pop
fs
pop
rcrl
insb
mov
inc
int3
aad
popa
mov
adc
sbb
popa
adc
loope
cs
js
push
push
mov
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
adc
jo
jge
jo
push
jno
addl
into
xor
pop
mov
stc
inc
xchg
jns
lods
shlb
inc
dec
mov
out
mov
push
ja
mov
mov
cmc
add
or
sub
mov
outsb
notb
or
gs
inc
jae
jecxz
and
mov
sub
or
lds
jp
imul
mov
stos
test
pop
cwtl
xchg
push
cmc
fneni(8087
mov
mov
testl
add
mov
std
mov
ljmp
cmp
scas
dec
fldt
into
int3
pop
mov
adc
int
clc
pop
fstl
cwtl
xchg
std
lahf
shll
cwtl
mov
lds
ret
jg
push
loope
inc
std
stos
cmp
cmpsl
jno
ds
adc
fs
push
es
pop
inc
jl
sbb
mov
xor
ret
ret
push
mov
dec
sbb
decb
mov
mov
lods
mov
mov
or
neg
dec
mov
inc
add
cmpsl
pop
pop
addl
inc
inc
mov
xor
add
daa
stc
jmp
jl
clc
cli
insl
dec
add
test
sbb
push
xor
sbb
clc
mov
sbb
push
sub
aad
xor
mov
sbb
loop
int3
orl
xchg
xor
or
push
push
cmc
mov
fmull
ja
mov
nop
cmpsl
xchg
cmc
lds
xor
insl
fistpll
int3
mov
clc
pop
loope
out
mov
popf
push
and
inc
nop
or
loopne
popa
dec
or
out
mov
xchg
es
lods
outsl
fistpl
scas
xor
push
or
adc
test
out
adc
inc
xchg
dec
inc
pop
icebp
cmp
dec
out
fldl
sbb
jno
pop
and
jp
ss
mov
mov
or
call
imulb
jge,pn
push
mov
nop
fcoml
leave
push
xor
lods
cwtl
pushf
gs
jecxz
iret
pop
push
mov
fsubrl
adc
xchg
jecxz
pushf
jecxz
cmp
in
mov
sbb
lret
into
pop
pusha
add
pop
test
repnz
xor
mov
out
dec
outsl
pop
inc
bound
jmp
jmp
push
inc
add
mov
loope
movsl
lods
ss
fstpl
ret
or
in
movsl
dec
dec
sbb
inc
jo
xor
jge
pop
xchg
xchg
lock
jae
aas
clc
cwtl
ljmp
or
repz
xor
jbe
jecxz
sub
and
push
inc
mov
es
loopne
pop
stos
aas
xor
insb
loop
aaa
adc
in
test
xchg
cmp
mov
fdiv
hlt
sbb
mov
xchg
pop
and
out
cmp
and
mov
mov
sti
or
xor
sti
mov
ss
ja
sbb
cmc
pop
dec
sub
aas
jnp
mov
fidivs
sub
jecxz
in
mov
int
jle
movsl
mov
inc
inc
fdiv
adc
movl
sub
lds
fistpll
rcrl
jle
mov
in
into
mov
scas
enter
fmuls
sub
loopne
js
ficoms
xchg
mov
mov
mov
mov
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
orb
xchg
jo
dec
jge
jo
out
insl
mov
add
jb
add
mov
out
ret
ret
out
out
into
sub
pop
scas
lods
cli
pop
push
or
std
popa
push
sahf
shll
add
mov
iret
lods
pop
aad
xchg
xor
lcall
pop
xchg
inc
enter
mov
insb
mov
outsb
mov
stos
int3
xchg
dec
mov
push
pop
lret
aas
pop
xorb
add
xor
push
dec
sti
dec
lret
push
cld
pusha
jg
cltd
leave
push
push
ss
adc
ljmp
clc
fs
ja
inc
mul
adc
push
test
mov
adc
fcom
pushf
ja
push
stc
xorl
cmp
fadds
je
inc
jnp
or
cmp
sbb
jnp
movsb
repnz
ja
adc
mov
push
mov
sub
das
push
stos
ja
movsb
jns
cltd
xorb
ljmp
out
xchg
sub
out
decl
inc
loop
ljmp
scas
mov
or
test
mov
hlt
int3
xor
dec
cmp
sbb
jae
sub
jne
mov
data16
mov
fildl
adc
inc
ret
push
lods
test
or
ljmp
adc
js
mov
adc
ljmp
mov
xor
scas
imul
ss
dec
les
adc
dec
js
sub
mov
pop
adc
add
cmc
mov
jecxz
mov
adc
stc
xor
mov
mov
lods
sub
xchg
mov
es
in
sbb
cmp
sbb
aam
adc
sbb
scas
rcl
enter
mov
iret
sarl
jl
pop
loop
pop
fdivr
push
jno
lods
adc
movsl
jp
test
hlt
cli
es
mov
pop
pop
in
fimuls
sti
dec
xchg
sub
jb
jnp
xchg
mov
loopne
sbb
inc
mov
jo
cmp
lods
call
pop
xchg
mov
cwtl
xchg
dec
add
adc
cmp
ljmp
aam
mov
ret
leave
pop
xorb
dec
dec
or
xlat
lods
popa
int3
adc
cmp
sub
pop
pop
cmp
lods
rcll
jo
aam
push
mov
or
jae
cld
mov
adc
movsl
roll
add
fsts
rcll
insl
pop
xchg
sti
sub
sub
inc
dec
mov
dec
loopne
dec
add
push
jae
fnclex
push
movsb
xchg
push
mov
dec
push
ret
jb
lock
inc
sub
out
and
push
mov
and
cli
aad
outsb
imul
inc
int3
out
cld
test
mov
movsb
aaa
adc
icebp
mov
mov
sub
xchg
jae
add
js
and
pop
mov
sbbl
daa
daa
xchg
xchg
lock
xchg
lret
and
cmp
incb
jle
mov
jg
pop
jecxz
mov
shl
mov
call
test
jne
and
dec
mov
xchg
pop
dec
push
subb
and
nop
add
mov
jle
mov
shll
stc
xor
fwait
or
popa
mov
imul
ret
fmuls
jp
mov
cmpb
adcb
fs
bound
orb
stos
out
push
push
mov
push
sbb
xchg
insb
or
mov
xor
xor
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
subb
jge
jo
inc
mov
sbbb
enter
mov
fstps
daa
sub
push
popa
xor
or
add
cli
mov
push
push
jg
push
es
into
cmc
arpl
movsl
movsl
inc
fs
popa
xor
fnstsw
and
dec
and
xchg
mov
xor
dec
xor
push
mov
pop
inc
mov
cmp
pop
popf
pop
clc
cmp
sarb
dec
lahf
ret
dec
pusha
jmp
and
mov
xor
mov
scas
lds
inc
mov
dec
hlt
and
sub
mov
push
bnd
mov
push
jae
cmpsl
mov
fs
jne
pop
adc
addl
sbb
outsb
icebp
pop
pop
bound
subl
adc
gs
sbb
mov
test
xorb
sbb
clc
fbstp
divb
cmp
push
mov
mov
dec
sub
xchg
xchg
push
sub
xlat
adc
push
dec
push
cmpsb
add
inc
add
add
push
adc
scas
xchg
rcrl
inc
shl
mov
rcrb
and
adc
enter
rolb
xchg
out
sbb
test
int
aas
mov
push
data16
bound
hlt
adc
sbb
cltd
arpl
addb
mov
sbb
pusha
cmpsl
push
jnp
seta
pop
repz
out
mov
pop
outsl
gs
mov
push
lea
jno
imul
mov
pop
pop
lret
xor
call
push
or
inc
dec
lods
adcb
les
jge
into
call
das
jge
lock
fidivrl
xchg
daa
fcomip
jg
sub
xor
outsl
test
negl
out
mov
mov
xchg
das
jmp
sub
jo
pop
sub
add
sti
and
fstpl
jg
xchg
xchg
mov
pop
lods
cmp
xor
das
clc
shrb
rclb
mov
popa
incb
mov
das
or
push
outsb
cmp
jp
xchg
pop
repnz
jg
push
ret
aam
test
arpl
psubw
xor
sbb
das
out
rolb
mov
push
mov
sub
lea
call
lock
cmp
xchg
mov
lret
test
sahf
or
in
imul
je
iret
js
daa
dec
jnp
xchg
pop
mov
repnz
sbb
roll
jae
addr16
mov
mov
cmp
cmp
ss
push
lret
push
dec
dec
adc
stos
xor
jnp
adc
lods
mov
in
pop
stos
cmc
into
jne,pn
sub
jnp
add
mov
jp
fdivrl
push
add
and
popa
cld
add
mov
xor
call
mov
hlt
cmpsl
jge
cmp
pop
pop
push
incb
shrl
cmc
popf
add
cmpsb
insb
pop
fs
sahf
cmp
pop
push
test
ficoms
xchg
call
popa
lret
leave
notb
xor
test
and
imul
xor
das
dec
push
xlat
adc
jmp
lret
mov
sarl
add
jmp
cmpsl
mulb
stos
xchg
xchg
dec
nop
inc
fimuls
out
jle
xchg
mov
and
test
imul
cmp
add
sub
jecxz
ljmp
sbb
add
mov
addb
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
and
cmp
sahf
jo
dec
jge
jo
mov
scas
cmp
pop
xchg
pop
ja
test
xchg
or
cld
xchg
flds
decb
mov
dec
cmc
sub
cmp
cmp
mov
cmc
sbb
call
jl
fnstcw
and
mov
roll
sarl
popf
xor
inc
pop
mov
jo
fidivl
cmc
cmp
scas
out
push
scas
fldl
das
lods
dec
stc
mov
popf
inc
imul
jnp
push
pop
adc
cld
lret
lods
push
jl
push
mov
and
adc
mov
ret
or
es
sbb
xor
dec
push
dec
daa
test
cmpsb
mov
lock
inc
sbb
lret
daa
mov
mov
mov
mov
setg
popa
jno
sbb
push
scas
popa
lods
test
add
push
xchg
andl
dec
sub
add
pop
imul
cmp
add
stc
jae
nop
xchg
testl
fdivrs
mov
lcall
loopne
mov
icebp
rcl
andb
pop
jb
stos
sbb
cmp
jnp
and
xchg
sbb
or
xchg
mov
outsb
xor
call
dec
or
pop
inc
adc
fcmovnb
cmc
jp
push
inc
iret
out
push
dec
xor
mov
aas
and
icebp
mov
mov
imul
adc
ficompl
and
lahf
jae
scas
adc
ret
in
inc
aas
cmp
adc
adc
int3
xor
loope
lahf
inc
cld
cwtl
repnz
pop
fisubrs
stc
mov
es
adc
movsl
pop
cmpsb
add
popa
push
inc
mov
sti
xlat
aam
sub
test
pop
or
mov
imul
imul
mov
mov
push
roll
lock
inc
cmc
pop
or
xor
push
mov
fldl
xor
sahf
sub
adc
jecxz
fstpl
cltd
jge
jns
test
and
icebp
icebp
add
jg
nop
pop
fadd
jne
shrb
add
jl
fcoml
pop
xchg
mov
iret
dec
sub
mov
pop
test
jnp
jb
movsl
int3
loop
mov
pop
ret
xchg
sub
mov
popa
mov
cmp
negb
jns
mov
xor
fcoml
cmp
stos
iret
and
cmpsl
pop
or
push
or
pop
jp
enter
iret
pop
aas
call
inc
xor
lds
pop
stc
dec
leave
cmp
mov
jle
call
xchg
lods
fistl
adc
imul
fs
or
fsubl
shlb
fwait
adc
sbb
push
mov
add
pop
mov
sub
mov
mov
sbb
out
xchg
jns
or
adc
aad
scas
stc
out
loopne
cmp
dec
aam
call
xlat
push
pushf
inc
cmc
xchg
movsl
mov
cmpsb
shll
jle
movsl
ret
inc
adc
mov
pop
pop
scas
popf
js
sbb
jbe
lods
sbb
pop
mov
movsb
push
mov
adc
scas
push
mov
inc
jae
pop
mov
inc
add
test
mov
das
adc
push
movb
fcmovnb
andb
fnsave
mov
dec
iret
sbb
cmp
ss
ds
mov
shlb
sti
into
lock
addr16
movsl
push
aas
pop
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
leave
adc
dec
jge
jo
jbe
je
cwtl
adc
mov
dec
or
lret
inc
cwtl
fists
fldt
dec
jnp
fiaddl
push
push
push
test
sahf
test
and
adc
out
adc
xchg
adc
adc
pop
nop
dec
push
sbb
in
mov
js
lcall
ja
scas
insl
and
inc
push
sbb
sbb
ret
out
sbb
jmp
cmp
stc
cmp
sbb
dec
push
ljmp
or
lret
jle
lea
repnz
mov
push
xchg
add
xchg
ljmp
cmp
gs
syscall
sub
push
sarl
xchg
fstpt
mov
mov
xlat
and
mov
popf
mov
push
ljmp
pop
inc
add
mov
push
cmp
xlat
push
push
adc
das
sub
and
popf
insl
outsl
pop
sub
nop
cmp
mov
dec
cmp
jne
arpl
rcrb
fildl
leave
jbe
repz
jne
or
std
fnstcw
jg
leave
iret
and
sbb
xor
shr
leave
sbbl
xchg
orb
jl
rorb
shlb
dec
jl
lock
push
or
aas
test
push
adc
and
insb
xchg
cmc
test
aaa
mov
lods
dec
jl
lea
daa
fmull
xchg
sti
cmp
gs
xor
xchg
aas
lea
push
dec
clc
scas
movsl
or
popf
pop
out
add
push
adc
rcrb
movb
jnp
mov
lods
pushf
xchg
or
inc
push
imul
in
inc
inc
jmp
fcmove
in
out
das
add
jae
and
movsb
cmpsb
jp
repz
sti
repnz
dec
xchg
out
dec
movsb
adc
pop
loopne
pop
push
push
loop
mov
xchg
fstl
push
subl
mov
pop
je
fcompl
push
xchg
adc
or
cpuid
xchg
fdivl
int3
leave
shll
sarl
mov
in
cli
cmpsl
or
loop
and
jecxz
push
leave
adc
gs
jo
jne
imul
xchg
shl
jno
roll
iret
add
idivl
or
ss
sbb
cmp
push
and
adc
push
rcll
pop
mov
mov
orl
rcl
inc
or
or
push
jbe
add
dec
fdivs
adc
iret
or
rorb
pop
test
clc
insl
dec
adc
mov
stos
insb
pop
jg
mov
sbb
push
divl
popf
out
push
push
mov
sub
fnsave
sbb
push
push
jnp
cmp
xor
and
je
test
ret
arpl
es
ja
mov
data16
pop
jecxz
nop
cmp
cmpsb
or
inc
pusha
xchg
leave
mov
fbld
add
daa
push
outsl
test
rclb
dec
imul
dec
stos
ficomps
pop
xlat
dec
out
rclb
popa
push
pushf
addr16
xchg
daa
int
lock
adcl
stos
lea
xor
jl
or
mov
push
add
push
mov
das
pop
lret
or
sub
addr16
adc
pmullw
xchg
cmp
mov
mov
inc
mov
push
lcall
push
sbb
push
call
in
clc
aam
jg
push
sub
out
insb
dec
inc
push
ljmp
pop
jbe
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
enter
jo
jge
jo
mov
mov
std
aad
sbb
ljmp
into
in
adc
inc
mov
xor
lods
add
fadds
repz
dec
mov
jne
pop
les
repz
dec
mov
lods
push
lea
imul
mov
push
jmp
lods
in
fisubrs
pop
ljmp
and
mov
cmpsb
lods
fldl
xchg
jne
inc
fsubrl
test
std
add
lea
pop
add
fnstenv
dec
xchg
clc
mov
adc
sti
mov
imul
xor
sti
lods
inc
nop
mov
sub
xor
insl
mov
jo
and
jl
push
cmp
or
dec
movsl
ljmp
or
dec
push
aaa
ds
pop
fadds
dec
fwait
dec
sub
bound
and
and
pop
fstp
dec
es
jmp
add
fcoml
movsl
sbb
cmp
xchg
fdivl
movsl
pop
jl
sub
inc
jb
sbb
mov
push
lods
sub
pop
mov
sbb
cwtl
and
fldl
repz
fbld
and
mov
es
mov
inc
lods
aad
mov
xor
adc
sbb
xchg
cmp
jp
incb
mov
in
out
xchg
pop
xor
subb
bound
push
jbe
mov
mov
fwait
jb
mov
xor
or
lahf
xor
cs
out
popf
aaa
outsl
loope
and
xorb
push
js
push
adcb
lahf
pop
lock
pop
or
pop
inc
sbb
mov
iret
sbb
xlat
jo
pop
rcll
jb
xor
enter
mov
dec
pushf
lea
or
pop
sahf
fsubl
dec
add
add
add
mov
push
fldt
cmp
xchg
aam
ljmp
lea
push
shr
xchg
add
jns
sub
cmc
test
mov
push
jo
push
push
mov
insb
inc
and
movsb
cmp
xor
rcrl
pop
ret
pop
or
mov
lret
push
pop
xchg
jnp
out
add
pop
pop
inc
movl
xor
dec
mov
and
cld
xor
fildl
test
sarb
mov
addr16
xlat
mov
in
cmpsl
aaa
jecxz
adc
cmp
add
into
hlt
sbb
int
dec
xchg
jo
and
lret
or
divl
imul
or
pop
jge
insl
popa
mov
mov
mov
ds
int3
dec
push
or
adc
mov
iret
sbb
push
inc
test
pop
push
jle
inc
push
inc
mov
rclb
ja
dec
lret
mov
shll
push
mov
loopne
inc
xor
lahf
loopne
inc
cmp
jg
fldt
in
out
or
adc
sub
xor
cs
pop
xorb
xchg
sub
jle
jno
icebp
test
notl
push
hlt
push
pushf
inc
and
aas
xlat
cwtl
and
jo
popf
out
bound
popf
arpl
cmp
addl
xchg
gs
test
das
mov
or
xor
inc
fsubrl
mov
cmc
hlt
or
xchg
push
pop
fists
cmp
mov
add
mov
mov
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
loopne
out
mov
jo
push
out
cli
popa
and
je
mov
outsb
jl
jmp
cltd
xchg
push
and
push
xchg
loope
es
fldcw
and
mov
cmp
aaa
mov
jns
pop
mov
push
bswap
sub
mul
or
mov
cld
aaa
mov
mov
push
lock
push
push
sub
dec
insl
rorl
push
mov
jp
sarl
in
cmp
push
in
movsb
addr16
repz
adc
data16
outsb
lods
mov
bound
sbb
cwtl
loope
bnd
jno
mov
loopne
inc
icebp
arpl
repnz
test
stos
mov
lret
lcall
mov
inc
test
pushl
repnz
dec
insl
pop
ficomps
fldl
pop
outsb
fwait
pop
mov
jne
push
mov
sbb
sbb
mov
addr16
pop
les
iret
adc
cmp
jecxz
call
pop
fnstsw
fscale
fiaddl
sbbl
and
adc
cmpsb
pop
outsl
outsl
jbe
sarb
popf
lret
xchg
ds
and
cltd
outsb
sub
mov
cmp
mov
jo
pop
xchg
cli
movsl
jmp
out
arpl
mov
xchg
xchg
cmp
dec
fadds
lods
xchg
aaa
addr16
and
fcomi
insb
jle
shrb
test
mov
clc
pushf
loop
pop
imul
mov
xlat
pop
sbb
jg
jecxz
lock
das
jmp
scas
enter
js
lock
dec
dec
dec
fildl
add
mov
sbb
jp
lods
das
fiadds
shll
push
jae
cmpl
jne
push
rcll
or
cltd
inc
test
xor
stc
lcall
add
idivb
and
lahf
cmpsb
sti
loop
je
insl
scas
or
cmpb
sub
jecxz
push
lds
dec
dec
mov
in
notl
jnp
fldpi
inc
dec
stos
sti
pop
xor
mov
loope
cld
cs
mov
xchg
pop
gs
iret
movsl
sbb
jge
cld
mov
fidivrs
pop
jg
xlat
cmc
xor
movsb
out
cmp
adc
movsb
push
add
loopne
add
sbb
push
pop
pushf
rorb
fnstcw
xchg
jbe
pop
hlt
xchg
xchg
jb
xor
or
mov
aaa
mov
jp
jle
fs
xchg
add
fistps
mov
pop
addr16
stc
nop
stos
inc
jecxz
pop
loop
les
sbb
jge
sbb
sbb
dec
out
jmp
dec
push
daa
pop
xchg
vmaxps
inc
inc
int
icebp
xchg
es
in
outsb
lret
mov
js
pop
pop
mov
aas
mov
sbb
dec
cmp
lock
adc
fiaddl
imulb
cmp
gs
xchg
inc
xchg
pop
xchg
mov
test
jae
inc
fs
andl
and
cmp
push
dec
mov
lock
pop
outsl
daa
mov
jmp
mov
mov
mov
push
popa
clc
call
iret
xor
push
cmp
jbe
sbb
mov
fidivl
jg
mov
or
and
xlat
fs
xchg
xchg
sbb
int3
or
adc
call
cmp
jp
test
sbb
scas
xchg
push
pop
loop
xchg
les
inc
sbb
jns
insl
scas
loop
push
push
or
or
gs
jb
nop
pop
addr16
mov
lea
xor
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
cmpsl
xchg
mov
scas
jo
dec
jge
jo
lock
mov
inc
sbb
sub
mov
pop
scas
fmull
cmp
mov
arpl
add
and
into
in
inc
and
out
aam
mov
fsubs
movsl
dec
jo
add
js
cmp
or
push
lret
jno
cmp
mov
mov
insl
mov
std
inc
xor
xor
push
add
mov
mov
test
mov
and
loopne
clc
cmp
push
repz
shll
sbb
aam
rclb
mov
jecxz
adc
mov
out
fstps
or
pop
les
lcall
adc
frstor
out
jp
mov
data16
xor
lods
sbb
or
cmp
repnz
popa
andl
pop
idivl
stc
icebp
pop
xlat
pushf
das
push
mov
add
jl
test
ret
cwtl
add
enter
and
lods
jno
adc
sbb
int3
mov
test
xor
mov
or
stos
and
mov
push
aam
jle
cwtl
jl
stos
pushf
mov
jle
cmpsb
lcall
push
sbb
in
dec
sub
xchg
dec
mov
lea
or
add
ficompl
cmp
inc
dec
cmp
stc
push
rorb
lds
cmpsb
mov
add
cmp
testl
xchg
inc
cli
pushf
movsl
add
out
mov
pop
dec
xorb
jg
out
sbb
pop
dec
dec
in
mov
sahf
dec
movsl
out
lahf
dec
loope
das
xchg
dec
cmpsb
iret
sub
pop
dec
in
aad
addr16
in
fiadds
fstpt
cmpsl
sahf
fldl
lods
pop
push
jl
add
xchg
lcall
or
shrb
jbe
popa
ret
push
outsl
stc
xor
aas
out
push
neg
mov
daa
std
lock
xchg
dec
add
jge
or
bound
cmp
leave
cs
xor
or
fmull
out
jb
and
sbb
stos
ret
xchg
adc
mov
push
xlat
and
and
repz
cld
push
or
adc
mov
loop
xor
scas
xchg
adc
mov
scas
xor
sbb
mov
out
cmp
out
or
sbb
icebp
and
add
loope
pop
adc
lods
dec
in
lods
outsl
dec
mov
scas
loopne
jbe
xchg
repz
xor
dec
lcall
mov
mov
aad
xchg
std
outsb
fld
out
add
int3
leave
in
addb
loopne
cltd
mulb
sbb
scas
adc
pop
decb
stos
xor
mov
inc
leave
dec
shl
insb
imul
cmpsl
repnz
aaa
movsb
mov
mov
inc
mov
es
ja
shlb
pop
in
stos
pop
imul
or
add
dec
mov
mov
jno
cltd
xchg
xchg
je
loop
nop
ret
iret
lcall
or
xchg
xor
into
outsb
sbbb
cmp
mov
and
lahf
ja
repnz
popa
mov
pop
inc
adc
jge
scas
sub
mov
mov
loope
out
add
mov
xchg
jp
lea
xchg
rcrl
cmc
fbld
les
imulb
lcall
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
js
and
dec
jge
jo
cmp
mov
mov
adc
sbb
arpl
pop
dec
cld
xor
adc
xor
pop
jno
ja
popf
mov
xor
xor
and
xchg
xchg
stos
cltd
push
mov
xchg
xor
ss
fisttpll
adc
mov
mov
sbb
sub
mov
and
mov
push
dec
xor
mov
push
cli
cmc
loopne
addr16
mov
pushw
jbe
xor
stc
inc
dec
jmp
loop
outsl
push
int3
push
js
pop
jnp
cmp
bound
cmp
jp
out
mov
jbe
data16
sub
and
sbb
pop
inc
mov
and
xchg
dec
sarb
jne
lods
test
iret
ret
jg
push
or
xchg
inc
cmova
dec
fists
and
mov
daa
inc
mov
pop
cmp
and
test
add
and
rcrl
sbb
jl
ds
lret
and
cld
lcall
add
or
out
fadds
scas
or
fldl
movsl
dec
mov
fwait
pop
pop
jno
test
pop
mov
scas
inc
mov
gs
cmp
push
xchg
dec
push
call
jne
iret
subb
pusha
lock
scas
or
adc
push
popf
sbb
test
xchg
or
bound
inc
fidivs
fildll
dec
js
lods
lds
mov
mov
insb
loop
mov
rorl
jle
push
sbb
xor
int3
or
out
adc
fmul
pop
add
pop
int
add
pop
jne
lahf
fisttpl
iret
cmp
roll
sub
insl
outsb
rcrb
mov
fwait
lahf
test
xor
aam
pushf
mov
icebp
push
dec
stos
dec
pop
stos
pop
in
sbb
mov
jnp
pop
pop
lret
adc
mov
jecxz
add
iret
shll
cltd
push
jl
aas
pop
xchg
rcrb
insl
cmpsb
ffree
std
mov
fisubrs
push
filds
cmpsb
push
jno
push
jns
inc
fndisi(8087
addr16
fisttpl
sub
fs
push
mov
leave
cmp
fdivrs
mov
xchg
out
enter
mov
cmp
aad
push
loop
bound
jge
jo
xlat
jb
mov
ret
hlt
mov
sub
sbbl
and
add
lahf
xor
test
filds
mov
jle
stc
inc
out
xchg
push
mov
imul
push
sbb
addl
pop
xor
roll
movsb
mov
lods
decl
cmp
sbb
imul
pop
je
andl
adc
cli
fs
or
pop
add
adc
fimuls
lahf
stos
scas
pop
icebp
clc
call
jno
test
movsl
aaa
les
jo
pusha
test
mov
mov
andb
loope
std
add
lods
sbbl
cwtl
fdiv
mov
addr16
mov
scas
scas
test
pop
cmpb
mov
jp
jo
test
adc
pop
out
dec
repz
jb
cmp
push
cmp
sbb
loopne
cmpb
mov
insb
into
je
sbb
pop
lahf
ja
out
pop
into
adc
cmc
into
fists
jecxz
aam
mov
sub
sub
xor
cli
rclb
lcall
pop
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
and
fdivs
jo
mov
xchg
test
mov
xchg
mov
lea
roll
mov
mov
sub
lods
orb
inc
xchg
cmp
fisubs
inc
xor
push
imul
outsl
jb
xchg
or
int3
dec
pop
shll
push
aas
add
inc
popf
sub
adc
xchg
lods
xor
xchg
test
js
into
and
xchg
mov
dec
scas
jle
ljmp
jnp
insb
jmp
jecxz
cmc
cmp
ljmp
mov
hlt
sub
pop
xchg
mov
dec
fcompl
std
ljmp
lret
xchg
outsb
push
movsb
enter
add
or
fcmovne
pushf
adc
ljmp
sub
das
bound
mov
inc
cltd
pusha
int3
and
xchg
add
int
sub
or
loop
int3
loop
lods
repnz
loop
cld
mov
push
aaa
jno
fstpt
mov
jns
rorl
mov
lock
orl
int3
rcrl
mov
xor
faddp
adc
sbb
cmp
arpl
mov
je
push
aad
xchg
nop
out
shrb
pop
inc
push
aad
rolb
aad
movb
popf
xor
xor
and
dec
fisubrl
decl
out
xchg
test
ret
pop
mov
cvtps2pi
sub
inc
aas
ss
cmp
or
adc
mov
mov
xor
mov
add
mov
sbb
adc
icebp
adc
scas
rcl
popl
lock
pop
aad
aaa
pushf
sub
mov
int3
jecxz
sbb
push
lahf
pusha
cltd
out
xlat
rorb
jns
pop
test
xor
push
mov
xor
jmp
loopne
inc
dec
fcmovu
inc
adc
xchg
je
test
or
inc
aad
ret
adc
cmp
or
cmp
call
adc
out
loop
mov
out
pop
inc
mov
jg
push
fldl
push
inc
mov
or
jecxz
push
cld
inc
jnp
lea
fdivrl
mov
xor
jl
sbb
mov
sub
fisubrl
lret
pop
mov
int3
jo
outsl
aaa
lea
add
stos
xchg
ret
cs
ret
pop
inc
movsl
push
xor
repnz
cld
cmp
gs
stos
xor
repz
xor
icebp
add
mov
arpl
lret
rcrb
xchg
lea
pop
xchg
adc
pop
jp
test
lods
std
popa
gs
mov
addr16
repz
mov
or
cli
ror
inc
push
jae
mov
cmc
adc
shlb
or
std
mov
pop
xchg
in
cmp
xorb
mov
dec
sub
jo
push
lcall
xor
mov
pop
xchg
negb
js
xchg
stc
ficomps
mov
pop
add
out
jnp
push
lret
sbb
add
and
add
sub
dec
sbb
ss
dec
leave
or
or
notb
mov
push
xor
push
rolb
add
int3
andl
pop
mov
xor
sti
xchg
xor
mov
ja
pop
jecxz
mov
sub
fbld
and
orb
cmp
jne
mov
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
jbe
in
xor
jo
out
ret
cmp
xchg
mov
inc
je
into
dec
das
pop
testb
inc
inc
xor
push
mov
add
mov
jno
xor
call
inc
push
cmpsb
std
jbe
add
push
lea
dec
mov
add
sbb
sub
pop
fcomps
xor
mov
dec
icebp
mov
cmpl
stos
adc
adc
push
imul
mov
and
xor
enter
das
shrl
stc
push
mov
jmp
popa
and
inc
and
jp
mov
mov
addr16
cmpsb
xor
in
out
popf
aaa
stos
mov
adc
loopne
pop
ja
adc
sbb
xor
icebp
xor
xor
iret
stos
xchg
sub
inc
push
and
dec
icebp
repnz
movsl
leave
pusha
sbb
sbb
xor
popf
or
pop
cs
ret
div
lods
pop
pop
push
and
and
lret
into
fimull
orl
dec
loopne
hlt
xchg
das
js
sahf
cmp
add
adc
pop
cld
popa
jbe
mov
pop
cmp
or
xor
gs
loop
loopne
jge
sahf
aas
imul
loop
jne
dec
mov
dec
jge
push
push
cwtl
xor
mov
insl
mov
inc
pop
ja
inc
dec
in
mov
sbb
jo,pt
push
or
mov
or
std
push
stos
mov
mov
mov
pop
sub
xorb
push
stos
mov
ss
fsubrs
ds
jmp
lcall
push
iret
mov
rcll
js
push
and
movsb
data16
adc
sub
aam
insb
add
xor
iret
adc
pop
shrb
xchg
je
out
xor
es
insl
xor
in
or
xchg
cmp
notl
stos
xchg
out
divb
je
cwtl
fs
push
ja
mov
jb
js
and
jmp
insl
sarl
std
inc
je
xor
adc
rol
ds
jne
jbe
lods
insb
aad
push
ljmp
fucomp
xchg
sub
lock
mov
or
ds
sub
sbb
push
nop
xchg
dec
dec
inc
sub
sbbb
rorl
xor
mov
test
jmp
leave
sub
fucomip
fwait
jg
dec
push
ljmp
in
iret
sbb
adc
cmpsb
xchg
xchg
mov
imul
cmp
jbe
pop
mov
mov
add
test
dec
add
xchg
rorl
lret
dec
jecxz
xor
in
xchg
or
inc
xchg
stos
cmp
jp
pop
mov
popf
je
repz
popf
loopne
xlat
add
fistps
push
xor
pushf
push
or
rcrl
pop
push
sub
mov
test
call
es
sub
imul
ret
in
push
mov
ret
mov
xlat
push
rolb
shl
dec
lods
test
lahf
xor
and
into
rcl
cmp
push
daa
int
aad
fistps
es
cmp
jle
call
dec
mov
push
cli
insl
and
or
nop
add
ffree
jmp
scas
xor
push
cltd
cmc
emms
jmp
das
jnp
movsb
sbb
pushf
ret
lcall
outsl
xchg
aad
insl
pusha
jl
test
test
jne
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
fadd
test
dec
jge
jo
and
ss
dec
and
out
movsb
lea
pop
loop
lret
sbb
out
cmpsb
pop
sahf
push
pminsw
out
and
cmp
sub
clc
cmp
push
jge
scas
sbb
cmpsl
rorl
cmp
push
sbb
cmp
int
jg
aaa
stos
push
gs
fldenv
push
mov
ret
xor
mov
stos
jle
jecxz
xchg
and
cmpsl
xor
aas
cltd
icebp
dec
fwait
add
jae
inc
bound
cmpsb
jo
mov
push
icebp
xorb
pop
cmp
pop
mov
lret
scas
andb
cmpsb
in
int3
dec
and
inc
pusha
rcr
add
mov
out
fsubrl
arpl
adc
inc
in
into
xchg
sbb
mov
shr
shlb
mov
pop
test
add
shll
js
fwait
cmp
xor
ljmp
xchg
cli
sti
out
pop
sbb
sbb
aad
mov
lds
cmc
sahf
lods
push
push
lods
pop
fisubrl
stc
int
jbe
les
and
jb
outsb
inc
mov
out
mov
insb
shrl
int
out
lahf
jge
mov
and
mov
lea
dec
clc
rcll
outsl
adcb
cmc
mov
js
inc
mov
pop
add
into
cmpsb
cmp
filds
imul
lahf
frstor
int
and
and
je
pop
xchg
insl
or
mov
mov
mov
in
shll
sbb
lods
and
daa
add
je
sar
cltd
mov
cltd
or
packuswb
mov
divl
add
orl
lods
add
shll
jge
addr16
jle
jg
xchg
adc
dec
push
ret
cmp
lret
leave
cmp
or
int
std
outsb
pop
lods
mov
mov
jmp
out
cmp
je
dec
lahf
mov
adc
xchg
sahf
dec
out
addb
int
cmpsl
or
sar
mov
fcmovnb
push
inc
inc
popa
fs
gs
movsb
xchg
test
inc
sbb
pop
mov
sti
je
lret
fistpl
bound
push
test
ret
test
test
inc
subl
pop
jbe
sarl
pop
dec
sbb
leave
xor
popa
sbb
jb
cmp
mov
sti
xor
dec
sub
push
or
mov
mov
enter
mov
sbb
cwtl
loop
sbbb
or
mov
mov
or
ret
sbb
inc
repz
aas
add
mov
add
push
sub
inc
sbb
iret
dec
aad
fs
les
pushf
adc
adc
mov
jae
std
outsb
aas
xchg
in
mov
push
dec
jnp
mov
shll
jo
lea
sar
sub
and
lret
scas
push
fiaddl
and
sbb
mov
repz
repnz
les
aaa
add
sahf
xor
sub
rcll
cs
movsl
inc
kaddw
sbb
push
add
sbb
aam
out
movsl
repz
sbb
mov
fists
loop
xor
jg
xor
or
pop
idivb
dec
mov
inc
les
mov
push
iret
fptan
add
cmc
mov
dec
or
hlt
lret
mov
add
imul
mov
or
fisttpl
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
pop
adc
andb
jo
jge
jo
in
mov
xchg
mov
pop
sub
push
xorl
test
daa
mov
or
or
test
xchg
cltd
in
lcall
sub
daa
aam
jp
bound
push
fildl
and
imulb
movsl
sbb
and
fisubs
adc
jne
inc
out
repnz
or
add
fwait
mov
sahf
mov
shrb
out
xor
lcall
push
mov
ds
in
shr
mov
std
sub
ljmp
mov
inc
inc
sbb
cs
dec
sub
fmul
ja
mov
sahf
ja
out
inc
push
and
sbb
or
pop
cli
xchg
xchg
shlb
decb
pop
add
pop
nop
xchg
in
pushf
in
ljmp
sub
jb
sarb
xor
and
scas
sbb
call
outsb
and
lahf
inc
test
gs
cmpsb
jns
icebp
dec
fisubrl
mov
lock
add
jbe
xor
push
xchg
ljmp
popf
push
cmp
cltd
sarl
mov
ret
jo
fdivl
sub
adc
jg
mov
mov
mov
out
ja
mov
mov
rolb
je
sbb
je
enter
jmp
and
lods
aad
push
sbb
mov
pop
jmp
mov
inc
jecxz
sub
es
lods
xor
out
lahf
in
loopne
pop
jle
fdivrl
outsl
push
mull
and
or
xor
outsb
mov
repz
jg
mov
in
adc
pop
leave
divb
sbb
mov
push
out
std
andnps
push
cmpsb
pop
fstl
jae
dec
test
lahf
sarb
pop
mov
mov
push
sahf
outsl
add
xor
rcr
or
cli
fistps
lods
loop
mov
mov
test
mov
pop
mov
mov
orl
cmpsb
add
les
cmc
or
in
mov
pop
lods
lds
rcrl
sarb
cmc
sbb
jge
mov
push
pushf
inc
and
lods
xchg
push
inc
pop
and
lods
fdiv
imul
lods
push
clc
cmpsl
cli
inc
addl
lock
jecxz
and
ljmp
in
push
push
xchg
xchg
dec
inc
or
pop
mov
frstor
mov
outsl
fucomi
mov
dec
xchg
and
mov
push
sahf
push
jecxz
xlat
rcll
fbld
dec
pushf
test
push
les
xchg
inc
ret
dec
movsb
adc
pop
leave
repz
and
ret
stos
sub
cmp
popaw
push
sbb
je
sub
aas
mov
popf
out
push
push
jg
stc
loop
addl
sbb
xor
rcll
push
sahf
push
push
outsb
adc
shlb
xlat
pusha
mov
push
jnp
add
dec
in
pop
and
pop
lcall
xorl
out
dec
incl
lds
scas
sbb
pop
xor
cwtl
cmpl
dec
mov
xchg
xchg
out
sbb
fbstp
mov
xorb
daa
jnp
sub
aam
xchg
loop
and
dec
rcll
stos
xchg
divb
pop
mov
and
repz
fcmovne
and
repnz
xchg
insl
les
ss
add
jo
aad
ljmp
mov
add
add
fisttpl
jp
xchg
mov
mov
jge
jo
push
inc
cltd
sbb
and
sbb
pop
inc
or
pop
mov
sbb
pop
cmpsb
outsl
cmp
jns
arpl
nop
subps
rorl
fwait
adc
push
mov
dec
daa
or
nop
mov
fidivs
pop
adc
testb
and
jns
and
and
in
mov
and
pop
aam
out
test
cwtl
aas
daa
push
ljmp
iret
packuswb
stc
dec
adc
in
push
imul
fldl
push
cpuid
push
adc
shlb
adc
jns
pushf
push
in
inc
test
add
mov
pop
dec
mov
mov
rcll
fbld
sbb
popa
adc
ret
sub
push
inc
sbb
arpl
cwtl
js
pushf
data16
mov
jnp
jno
inc
xor
ss
mov
adc
das
xlat
add
mulb
jecxz
sbbb
sti
lcall
call
loope
adc
cmp
rorl
lahf
ja
dec
push
cltd
insb
inc
pop
sub
lcall
and
sbb
cmp
push
enter
fisubs
jne
js
push
jne
jge
roll
dec
and
lock
mov
add
dec
sub
shl
ret
xchg
adc
mul
push
add
mov
pusha
dec
push
mov
and
jl
add
dec
mov
rolb
sub
sti
mov
mov
jmp
mov
jb
movsb
sarb
insl
xor
cld
add
cmc
dec
mov
pusha
sub
sub
loope
and
adc
in
roll
ja
cltd
out
or
mov
inc
mov
enter
in
icebp
cmc
aam
int
ja
mov
add
pop
into
inc
scas
call
popa
popa
das
fwait
out
outsl
icebp
add
dec
mov
jnp
adc
sbb
xor
mov
test
mov
fimuls
push
pusha
or
mov
cmc
lods
cmp
out
jmp
je
das
mov
mov
xchg
lods
dec
xor
mov
outsb
fnstenv
inc
mov
pop
and
jbe
jg
nop
mov
in
stos
mov
jns
addl
lahf
lods
push
pusha
push
loopew
mov
fcoml
fcmovbe
cmc
sar
lret
insl
out
push
push
dec
add
cmp
push
inc
add
jmp
mov
aam
je
icebp
jbe
pop
sub
scas
iret
test
dec
iret
fucom
ljmp
test
iret
rolb
pop
divb
pop
stc
jecxz
ss
adc
inc
sub
fisubs
stc
push
inc
aas
mov
mov
outsb
xor
cs
fucomp
sub
movsl
mov
or
xlat
or
lea
lock
paddsb
xor
add
pop
mov
test
shlb
jb
rcrb
jl
hlt
ret
sbb
mov
les
test
xchg
arpl
push
pop
pop
push
out
imul
rorb
enter
int3
adc
lock
xor
test
xchg
and
cmp
pusha
pop
dec
decb
loop
and
xor
xchg
xlat
or
scas
icebp
cld
orb
add
out
insl
pop
xchg
pop
dec
mull
xchg
adc
rcll
push
pop
bound
dec
test
iret
gs
or
inc
aas
xor
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
js
or
inc
jo
dec
jge
jo
movsb
and
mov
jne
fld
jne
pop
aam
ret
ja
into
dec
pusha
scas
cmp
jbe
pop
mov
dec
and
mov
push
fldenv
lahf
ds
sub
lods
xchg
sub
fldenv
imul
add
fisubrl
mov
xor
inc
ret
sahf
adc
filds
daa
mov
lea
xchg
sub
or
xchg
add
adc
iret
jmp
sbb
test
sahf
daa
jns
rcrl
pop
arpl
pusha
sbb
imul
xchg
cmp
xchg
dec
rep
or
out
ror
pusha
addr16
mov
cmp
fistps
ds
cmc
and
xchg
push
mov
adc
mov
repnz
jp
js
loopne
xchg
insb
frstor
mov
lds
shr
cwtl
das
push
test
mov
mov
shll
jg
mov
call
xchg
dec
rolb
cld
sub
loop
inc
pop
push
lahf
sub
adc
hlt
mov
scas
or
cmp
mov
mov
les
sti
je
mov
and
mov
nop
pop
flds
jmp
xchg
adc
rcrb
xorb
imul
inc
inc
out
ja
fidivrs
jmp
pop
dec
xor
mov
mov
ja
xchg
xchg
hlt
into
inc
inc
inc
fstps
adc
cmp
lds
repz
std
and
mov
fildl
pop
xlat
jno
pop
mov
or
call
or
mov
test
leave
popf
pop
mov
dec
jne
movsb
xor
or
adc
dec
pop
shll
insl
loope
popl
pop
dec
xor
pop
sub
pop
mov
gs
fucomi
mov
push
in
lds
imul
inc
into
xor
mov
jbe
test
fcmovnbe
adc
push
pop
lahf
imul
scas
sbb
jns
nop
and
pop
fs
cmpsb
mov
dec
inc
mov
mov
test
cmp
les
lret
or
add
push
loope
dec
test
mov
aas
cmc
jmp
daa
or
jg
mov
push
xchg
push
adc
movsl
iret
negl
mov
rcrb
mov
pop
fimull
shlb
mov
test
sbb
xor
mov
mov
xlat
sahf
sbb
andb
aad
xchg
sub
xchg
imul
icebp
jle
dec
enter
test
cs
xchg
mov
cmc
dec
xchg
adc
nop
iret
xchg
mov
mov
int3
das
test
inc
cmpsl
jmp
mov
shlb
insb
or
xor
dec
xchg
nop
xor
dec
add
movl
inc
pop
divb
out
in
or
ljmp
gs
inc
inc
out
sbb
stos
mov
nop
fidivrl
mov
and
adc
and
pop
mov
lock
jp
insl
cmp
jp
mov
inc
xor
bound
ret
and
xor
lods
inc
pop
int
and
popf
das
pop
mov
push
lret
sub
xchg
mov
mov
mov
ret
sub
lods
ja
mov
add
dec
jmp
add
int3
insb
jmp
dec
sarb
jecxz
movsl
je
and
dec
jg
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
jbe
out
inc
jo
dec
jge
jo
and
dec
add
jmp
push
pop
daa
mov
ja
test
cmp
test
sbb
scas
jbe
xchg
mov
imul
lret
loopne
clc
xor
pop
sub
testl
mov
iret
sbb
or
add
pop
pop
lea
pop
sbb
imul
shll
xor
in
adc
pop
lcall
dec
mov
rcrb
jbe
pop
or
or
arpl
or
or
xor
xchg
clc
xchg
xchg
cmp
fwait
dec
test
scas
pop
ss
rcr
pop
jne
es
xor
sbb
fdivl
xor
xlat
fistpll
pop
fstpl
bound
add
nop
pop
pop
insb
ds
loopne
mov
xchg
cmpsb
and
mov
pop
insb
push
test
loop
fsubl
adc
dec
xchg
cld
aam
nopl
pop
push
in
xchg
loopne
and
andb
add
stos
jnp
push
sbb
cmpb
jae
xchg
pop
out
cmpsb
hlt
bound
aad
ljmp
sbb
xchg
subb
cwtl
outsb
cmpsl
mov
cmp
ss
fidivrl
or
jp
lahf
mov
inc
xchg
pop
cmp
inc
fdivrs
lret
inc
ret
icebp
test
xor
js
jmp
jle
cwtl
or
and
dec
mov
enter
adc
movsl
iret
or
popa
sbb
xchg
mov
fcmovnbe
pop
push
sub
jg
pop
dec
push
cmp
pop
push
shl
leave
cli
into
pop
ljmp
sbb
testb
clc
in
stos
lods
adc
inc
lret
add
xchg
sbb
or
cs
xchg
int
xchg
mov
jnp
subb
xor
jl
ret
or
jmp
jg
test
xchg
sub
out
inc
xlat
and
imul
xchg
scas
add
das
xlat
fs
inc
cmpsb
mov
and
pop
xor
out
add
pop
rcl
lods
fdivrl
data16
clc
addr16
add
mov
and
out
dec
leave
adc
jecxz
pop
lahf
or
inc
loope
mov
gs
pop
mov
mov
mov
push
pop
jo
fwait
mov
std
lods
adc
pushf
repnz
dec
jl
jle
xchg
push
cs
int3
and
pop
ja
movsl
push
fsubrs
leave
stc
xchg
dec
adc
arpl
or
sub
jle
jp
cld
sub
push
clc
addl
leave
and
mul
cld
mov
or
sub
or
into
xor
addr16
or
jbe
test
sbb
xchg
jmp
inc
std
push
mov
cs
and
lret
es
iret
sub
inc
or
inc
mov
loopne
dec
test
jnp
sub
push
adc
cmp
dec
add
cmp
leave
push
in
xchg
popa
jo
stc
fs
cmpsl
inc
leave
movsb
or
cmp
add
idivb
or
sbb
push
outsb
cmp
std
xchg
add
xor
or
in
arpl
clc
in
xchg
sbb
fisubl
mov
in
mov
icebp
inc
push
sub
mov
lahf
movnti
jl
rolb
xchg
in
stos
push
shlb
stos
aaa
push
ss
mov
inc
mov
inc
cld
pop
insl
jle
fwait
stos
xchg
shll
pop
xor
lea
push
push
les
test
out
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
mov
dec
jo
dec
jge
jo
mov
aaa
mov
mov
push
xor
xchg
inc
mov
push
in
testl
inc
xchg
jns
xchg
ss
add
jle
push
xchg
jnp
xor
call
jb
fistl
js
pusha
pop
repnz
adc
adc
into
in
push
add
lcall
or
loope
in
inc
xchg
add
hlt
out
mov
addr16
leave
int3
or
cmp
xor
fs
pushfw
insl
add
ja
adc
sti
inc
cmp
add
int
jl
ljmp
daa
aad
inc
push
mov
daa
adc
cmc
aad
ds
xchg
loope
dec
adc
mov
cmc
cmp
add
and
sbb
call
js
pop
pop
cmp
and
pop
xor
mov
cli
std
sbb
jl
and
scas
enter
in
sahf
jns
dec
mov
cmc
enter
xchg
dec
pusha
jb
call
aaa
inc
jp
stc
out
idivl
jo
popf
gs
test
mov
into
aad
movsb
mov
sahf
push
push
jb
movsl
addr16
adc
inc
pop
xor
or
dec
into
mov
adc
mov
test
push
pop
jl
ficoms
sbb
push
es
outsl
sbb
aas
das
lea
cmc
adc
xchg
cmp
adc
ret
mov
sti
mov
repnz
roll
jbe
cltd
scas
sahf
outsb
inc
sar
sub
pop
pop
in
mov
mov
das
mov
sub
jne
xchg
ja
cs
sbb
xchg
dec
fdivl
loop
sti
aas
mov
fcmovne
xchg
mov
jle
pop
mov
cmp
clc
movl
adc
jbe
into
popa
jne
es
jae
ret
test
mov
jl
add
xor
pusha
push
push
loope
aam
dec
xchg
adc
insl
stc
imul
mov
pop
int
int
or
sbb
in
push
pop
dec
sbb
pop
dec
sub
lea
pcmpgtb
mov
or
jg
mov
iret
pop
sbbb
sbb
in
mov
dec
mov
scas
xchg
sbb
adc
jmp
xchg
andl
cmpsl
cmp
aaa
push
and
inc
inc
imul
pop
test
sbb
lret
dec
adc
jge
out
stos
pushf
mov
xchg
sbb
cld
lds
xchg
inc
sub
cmp
add
stc
jae
cmp
sbb
and
adc
dec
cmova
push
movsl
mov
push
stc
test
inc
cmp
test
out
leave
test
mov
add
in
jo
sbb
mov
lds
sti
push
fimuls
pop
xchg
lret
inc
sbb
inc
stc
pop
es
sbb
jbe
roll
lahf
loopne
mov
insl
mov
cmp
inc
jbe
dec
mov
mov
pop
mov
fwait
jae
push
dec
bnd
jb
ja
imul
insb
lcall
adc
pop
aas
mov
std
mov
out
jp
dec
jns
stos
std
or
sub
jle
inc
and
mov
adc
mov
shlb
prefetch
or
xchg
leave
pop
adc
test
pop
pop
daa
inc
push
in
inc
cld
or
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
and
mov
dec
jge
jo
rorl
dec
mov
pop
mov
sbb
cld
pop
clc
std
adc
call
arpl
add
cmp
cmp
and
pusha
xor
cld
jae
xchg
jne
push
cmp
int3
int3
mov
imul
jno
insl
jle
mov
and
push
ja
scas
loop
ljmp
pop
pusha
and
ds
xor
shll
and
add
test
test
jecxz
lods
add
mov
scas
out
pop
es
and
mov
rcrl
xchg
xor
cld
scas
cmp
sbb
bnd
sbb
test
daa
or
je
jp
push
push
mov
mov
popa
lock
cmp
mov
or
jecxz
push
nop
cwtl
cld
push
addr16
mov
pushf
outsl
rorl
jb
aaa
lret
jno
shrl
mov
out
xchg
dec
fs
adc
ds
adc
outsl
in
leave
dec
push
outsl
inc
mov
addr16
xorl
mov
add
call
pop
mov
mov
mov
jp
jns
repz
or
sub
pop
xchg
dec
std
mov
inc
inc
mov
xchg
mov
xor
pop
jo
inc
orb
cmpsl
mov
cmp
cwtl
dec
inc
sbb
lret
and
popf
das
or
nop
push
loopne
lds
ret
aad
jnp
bound
inc
cmp
jp
jo
adc
ss
pop
sti
ljmp
mov
rcrl
std
pop
jmp
inc
arpl
xchg
aas
lret
mov
imul
loopne
sbb
push
add
fs
xchg
or
push
pop
dec
aas
mov
jno
mov
scas
add
std
push
jne
pop
les
adc
dec
aam
rol
out
int3
xor
push
add
nop
xchg
loopne
gs
mov
xlat
hlt
fcomi
push
xchg
bound
add
icebp
cmp
cmc
in
and
cld
aam
dec
fwait
pushf
jae
es
in
in
pop
movsl
sub
in
adc
add
adc
mov
adc
add
pcmpgtw
leave
cmpsb
xchg
lods
fs
sub
aam
cld
add
or
push
pop
mov
xchg
les
pop
xchg
ret
push
jb
or
mov
in
mov
sbb
pusha
push
sbb
pop
jne
push
fldcw
jno
outsl
lods
mov
cmp
dec
decl
imul
xor
scas
adc
into
xor
sub
inc
lret
jg
dec
in
pop
dec
shl
mov
cmc
cmp
mov
jp
popa
xchg
xor
iret
push
mov
pop
movsl
xchg
lahf
cmp
push
inc
inc
lea
jmp
mov
adc
mov
inc
or
shrb
shlb
repnz
pop
sub
dec
mov
arpl
sub
into
and
push
pop
je
scas
mov
js
out
sbb
imull
stos
popf
cmp
pop
mov
dec
daa
call
ja
mov
jmp
ja
decl
cmp
lcall
mov
ja
jne
cmc
mov
xchg
imul
mov
inc
stos
imul
dec
jle
std
jg
mov
fstpl
popl
mov
push
decb
hlt
dec
inc
xchg
lret
iret
cwtl
jnp
cmpsb
xchg
daa
adc
adc
test
and
push
enter
jae
push
cmp
mov
mull
cmpsb
cmpsl
stos
adc
jmp
cmp
and
fisttpl
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
