push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
dec
xchg
pop
xchg
jle
movsl
add
fld
fcom
enter
leave
cld
icebp
fmulp
filds
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
rol
cmp
cld
hlt
into
into
out
iret
xlat
stc
rcl
icebp
call
out
loope
enter
cmc
shr
out
leave
xor
repnz
fcom
xor
fsub
icebp
xchg
add
mov
fcoms
in
xchg
aam
out
cmp
sarb
cmp
test
out
in
jmp
out
loop
adc
jmp
fcmovnbe
cmp
clc
addb
fdivp
mov
call
loope
jecxz
in
cli
fistpll
ret
test
out
ror
filds
jecxz
icebp
hlt
into
in
into
cmp
fstpt
cmp
jmp
cli
stc
rcl
fldl
jecxz
out
cld
xchg
repnz
loop
ret
leave
in
bnd
cld
jmp
cmc
out
fucom
std
xchg
fcomi
int
mov
xor
in
cmp
clc
int3
aas
hlt
stc
lock
out
fdivr
loop
loope
jmp
lock
in
not
jmp
jmp
int3
cmp
aaa
icebp
cld
xlat
stc
cld
clc
shl
sti
mov
int
repz
into
clc
out
iret
iret
ret
sar
icebp
lret
hlt
iret
clc
fucom
xchg
filds
stc
xchg
decl
loop
sarb
cmp
cld
inc
shl
orb
cli
out
jmp
lock
into
test
fmul
out
ljmp
loope
shl
sti
std
in
std
out
into
jecxz
xchg
into
rol
hlt
cmp
clc
fdiv
jmp
aad
aam
cli
cli
mov
out
xchg
in
aam
ror
clc
iret
in
clc
div
rolb
xlat
loopne
faddl
fcmovne
mov
nop
ss
aam
into
hlt
shl
rcr
in
out
fsub
rol
lret
addl
cmc
cmc
repz
out
test
cli
out
rol
shl
lea
mov
jmp
loope
cli
enter
into
fdiv
cmp
lock
aas
cmp
rcr
fld
sti
test
out
ret
xor
cs
clc
out
fcmovnu
in
jecxz
call
in
leave
leave
loop
mov
out
call
stc
in
fcmovu
lret
and
jmp
ds
or
ljmp
rcr
ss
cmp
ljmp
cld
aam
xlat
ljmp
xchg
out
in
clc
aad
xlat
repz
aam
fsqrt
loope
ret
in
fstp
test
mov
sti
fmul
nop
fildl
das
enter
lret
jmp
aam
fsqrt
shl
ret
lret
addl
lock
xor
cmpb
sti
shl
iret
lock
repz
test
in
divb
fdecstp
out
hlt
leave
filds
aas
fdivr
leave
cmc
loopne
std
test
xchg
mov
rcl
xchg
repnz
in
xor
repz
fdivl
repz
ss
loop
call
fisttpll
out
or
aad
shl
not
lret
loope
fidivrl
clc
fndisi(8087
ror
fcmovnb
stc
lock
mov
call
enter
xor
into
int3
cli
cmp
in
xlat
sar
xlat
fcmovb
fisttps
hlt
repnz
shll
icebp
idiv
lock
in
and
cmc
call
fucom
in
out
lret
in
in
cmp
lock
fsubrp
sarl
rcr
fstpt
mov
loopne
incb
xchg
cmc
aaa
xor
icebp
loope
ds
in
loopne
call
nop
sti
in
test
imull
aaa
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
mov
movsl
add
movsl
add
out
clc
sbb
not
in
fadd
ffree
into
mov
mov
cmp
not
lret
xor
fsqrt
fyl2xp1
fidivrl
repnz
cmc
cmp
inc
clc
clc
test
in
leave
lret
out
jecxz
call
call
ds
out
repnz
loope
call
bnd
div
repz
cmc
cmc
cmc
shl
rcr
repz
out
jmp
jecxz
in
int
nop
out
ret
cli
cmp
stc
cmp
hlt
and
cmp
mov
lret
fcoms
cmc
repnz
lret
cmp
addl
add
testl
aad
xor
rcl
cli
sti
int
cmp
xchg
enter
test
call
in
out
jmp
idivl
repz
jmp
ret
cli
rcl
icebp
ret
jecxz
in
in
mov
xchg
xlat
loopne
out
fsubr
out
leave
rolb
cmp
in
jecxz
sti
loopne
lret
sub
ret
aaa
jmp
in
in
fcmovu
in
cmp
out
incl
testb
and
lock
out
fptan
cmp
xor
sti
aaa
stc
fxam
ljmp
fists
xchg
out
xor
jmp
xor
cmp
xor
addl
cli
fnstsw
out
in
mov
out
fcmovb
sub
rol
cmc
repnz
xlat
call
cmp
xchg
out
jecxz
jmp
ret
das
jmp
in
rcr
into
icebp
aad
cmpb
int3
lret
nop
in
xchg
lret
xchg
ljmp
out
sar
adc
loopne
ds
test
fimuls
out
out
loope
aad
ss
sti
not
aam
fsubp
cmp
repnz
hlt
ret
cmp
mov
clc
ret
jmp
sti
fninit
loop
call
fcmovu
ret
std
aad
sbb
enter
jmp
call
cli
aam
cmp
or
mov
cli
ljmp
in
loopne
xchg
in
fidivl
call
cmc
in
cmp
cmp
fsqrt
rcr
mov
mov
xchg
cmp
xchg
test
in
jmp
repz
xor
icebp
fcomip
test
addl
loopne
int
repz
vmovq
enter
cld
fistpll
rolb
int3
lret
mov
in
jecxz
xlat
cli
int
cmp
cld
rcl
cmp
les
out
std
mov
loop
xor
out
cmp
jmp
in
aad
shl
les
jecxz
in
in
adc
xor
aad
out
icebp
ljmp
in
loopne
mov
fcmovne
icebp
cld
in
repnz
shl
xor
cmc
cld
shr
sub
out
or
out
loope
decl
out
nop
orl
fdiv
ds
icebp
loopne
int
loopne
cld
call
mov
ljmp
mov
out
ret
aaa
iret
clc
lock
xor
out
int
repnz
rcl
cld
mov
out
mov
leave
lock
hlt
lock
rcl
fdivr
cmp
sar
into
aam
repnz
xlat
incl
cmp
out
cmc
mov
xor
clc
shlb
out
aad
cmpl
icebp
cmp
loopne
fisttps
icebp
int
ret
ror
cmp
fnstsw
xor
addb
loop
lret
fsub
call
adcl
repz
std
fstpt
lret
lock
ds
fsubp
out
incl
out
xchg
test
repz
clc
div
in
leave
shr
hlt
in
clc
icebp
aas
xchg
loope
leave
jecxz
bnd
test
xor
call
fidivrl
adc
rol
loope
test
xlat
sti
test
icebp
xchg
in
in
xor
enter
fildl
cmp
shl
clc
enter
mov
and
xchg
aam
in
leave
cmp
stc
fstp
neg
xor
cld
fdiv
imul
test
cmp
lock
shl
xor
clc
aad
clc
adc
sar
fadds
leave
dec
xchg
sbb
lock
repnz
test
repnz
les
loopne
xchg
int
bnd
xor
cmp
cmp
add
mov
fadd
leave
int
bound
inc
aad
xor
jle
add
cld
out
mov
faddp
vpsubusw
xchg
xchg
out
in
out
xlat
leave
aaa
ror
enter
cmc
aas
ret
out
cld
fsub
aam
std
mov
shr
fucomi
lret
int
lret
jmp
cmc
iret
repz
repz
cmp
orb
mov
xlat
ds
int3
lret
std
cmc
out
cli
std
out
fmul
jmp
test
lret
leave
aad
xor
sar
icebp
icebp
icebp
movl
repz
lock
aaa
repnz
loopne
sbb
in
in
fiaddl
aam
fdiv
cli
mov
ss
into
hlt
cmp
aam
loope
cld
out
addb
rol
cli
lret
ljmp
aaa
repnz
mov
jecxz
mov
cli
out
mov
hlt
jecxz
cli
aam
cmp
aas
jecxz
lock
xchg
neg
ret
into
out
sti
mov
int
xchg
ljmp
out
in
stc
out
push
ret
rolb
lds
xchg
orb
into
cmp
repnz
roll
fimull
out
std
mov
test
shl
cs
shr
fmul
fbstp
adc
fdivrl
stc
in
loope
sub
in
out
cmc
sub
fsubr
fsubr
fstp
cld
aam
in
fcom
jecxz
ret
loop
lock
fucomip
ror
jmp
out
sarl
ror
rcr
xor
cli
iret
cmp
add
ret
mov
jmp
vpaddw
aad
loop
hlt
xor
cmp
fcomp
stc
incl
in
cld
sbb
dec
shl
fstpt
repnz
repnz
rcl
in
std
shl
out
call
jmp
lret
in
cmp
xlat
xor
repnz
ret
sti
cmpl
fiaddl
roll
cmp
cmp
jmp
out
cmp
aam
cli
testl
out
mov
lret
xor
sti
fmulp
hlt
lret
repnz
sar
fld
std
int3
cli
lea
filds
in
stc
aaa
shl
aad
cmc
cmp
out
in
call
in
cmc
out
xchg
in
int3
cmp
out
int3
ss
xor
sti
test
in
addb
rorb
repz
sti
lret
loopne
cli
stc
test
xchg
repz
shl
in
ficoms
fisttps
clc
aam
lret
stc
aam
fst
clc
sti
call
lret
out
mov
leave
xchg
call
xor
int
in
hlt
cmpb
in
fdiv
hlt
sbb
xchg
and
out
in
aam
xchg
out
shl
out
cs
cmp
stc
not
out
fstp
incl
jmp
divb
enter
sar
shl
clc
fcmovnu
jmp
sbb
jmp
loop
rcl
in
enter
lret
out
loope
repz
cmp
rcr
xchg
cli
mov
loop
shl
jmp
hlt
repnz
not
in
fucom
aas
out
mov
fldl2e
test
shlb
sti
icebp
hlt
out
std
sbb
cmpl
out
mov
out
mov
mov
xlat
stc
jmp
fcmovu
into
aas
loop
in
test
or
fildl
enter
xchg
hlt
cmc
hlt
jecxz
lock
iret
into
cmp
ss
loopne
roll
sub
mov
fcmovnu
fimuls
cmp
lock
fnstsw
ds
sar
dec
cmp
add
mov
sub
mov
repz
std
test
xor
clc
fcmovnu
cmp
test
in
repnz
repz
mov
in
icebp
int
leave
cs
out
in
and
ljmp
xchg
iret
enter
hlt
in
iret
out
cli
stc
out
fdivrp
sti
leave
cmp
out
fadd
enter
ret
out
call
hlt
mov
xor
repz
ss
ljmp
testb
out
xchg
lret
loop
jecxz
ss
jmp
repz
hlt
out
aad
add
fisttpll
sbb
loopne
test
hlt
fldln2
cmp
int3
in
std
jmp
fnstsw
enter
lea
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
imul
jle
add
call
cld
cld
call
aad
out
enter
imul
int
std
repnz
fucom
in
xchg
flds
out
popl
iret
into
aad
repz
aaa
shl
fdiv
clc
fisttpll
xchg
rcl
fmul
fstp
cld
ss
fcmovnb
icebp
out
out
xlat
xlat
cmc
in
inc
loop
xchg
xchg
fisttps
repnz
cmp
xor
fiadds
hlt
mov
loope
mov
mov
mov
adc
xor
mul
idiv
aaa
xlat
fildl
leave
ljmp
sti
ljmp
test
repz
lret
shr
aas
aam
cli
jecxz
out
fmulp
jecxz
jmp
xchg
sar
in
loop
ror
leave
sar
xlat
cmp
aas
int3
cmp
lock
std
sub
test
xor
call
rcl
lock
loop
fidivrs
enter
testl
jmp
div
ds
iret
into
into
fistpll
rol
stc
fcom
cld
out
xchg
loop
shl
loope
jmp
out
out
cld
lret
test
fcomi
ljmp
dec
xchg
mov
fsubr
enter
into
icebp
xlat
into
sarl
idiv
cli
in
ror
out
cld
jecxz
ljmp
aad
int3
int
ds
sbb
std
fyl2xp1
fcmovu
test
out
lret
out
aad
xor
icebp
hlt
enter
clc
div
incl
orb
mov
filds
xor
neg
jmp
ret
shl
ret
xchg
stc
std
or
loopne
clc
jmp
ror
out
int3
rcr
ret
in
jecxz
test
xchg
ror
xor
repz
ljmp
in
test
sar
mov
fiaddl
out
int
ret
in
icebp
cmp
jmp
shr
int3
in
xor
fiaddl
repnz
test
jmp
ret
into
out
in
stc
std
aas
rolb
mov
sub
loop
cmc
aam
out
xor
cmp
cmp
jecxz
mov
sti
faddl
xchg
xchg
shl
repnz
fdivs
into
int3
cmp
fdivp
repz
std
call
ljmp
lret
loop
out
out
xor
in
in
leave
ljmp
jecxz
testl
loopne
leave
into
adc
sub
ret
lret
xor
cmp
in
aam
rcl
xchg
out
lret
xchg
loop
out
xor
stc
out
out
cmc
fsubrp
xlat
ret
incb
in
nop
out
ljmp
fcom
xor
fxch
cmp
aaa
cmc
test
cmp
cmc
ret
in
loop
xor
call
in
sar
clc
lret
cmp
cmc
iret
test
loope
ret
std
xor
xor
cli
repz
xor
call
test
repnz
in
mov
cli
ljmp
test
div
cli
aad
hlt
rol
repnz
test
lea
or
aad
xlat
jmp
into
repz
and
lret
push
not
or
xlat
idiv
ljmp
adc
fdivs
icebp
iret
shll
roll
int3
out
fsubp
stc
xchg
xchg
xchg
repz
xor
hlt
rcl
cmp
in
ret
xchg
test
fsubp
fcmovne
mov
out
test
shr
ror
int
sarl
ret
xlat
fnstcw
sti
xchg
cmp
out
shl
xchg
icebp
loopne
loop
xor
test
xlat
ljmp
fldl
fxch
in
out
jmp
rcr
lret
fcom
shr
fadds
addb
dec
in
icebp
shl
icebp
out
stc
aaa
stc
repz
in
sti
loopne
in
rcr
jmp
neg
out
call
fsubr
aam
fsubrl
sarl
div
hlt
fcomi
hlt
sti
clc
mov
out
dec
xchg
int
iret
div
rcl
int
cmp
stc
aas
icebp
iret
std
iret
shl
stc
test
jmp
out
lret
repnz
enter
fucomi
cmp
lock
cmp
out
lret
xchg
int3
mov
lret
mov
jmp
int3
rcl
aad
int3
call
sub
jle
add
in
in
ss
xor
jmp
out
sti
aaa
out
sti
repnz
jecxz
incb
in
ljmp
out
div
fnstcw
aaa
sarb
test
xlat
leave
mov
lret
aas
xchg
test
iret
mov
ss
imulb
int
ds
in
f2xm1
repnz
aad
out
mov
adcb
in
imul
lock
flds
fimull
fucomip
xchg
imul
clc
call
shll
in
fdivrp
clc
jecxz
sub
test
into
lock
jmp
cmp
lret
int3
iret
incb
test
hlt
ret
in
fcmovnu
xlat
into
movb
imul
in
lret
aad
icebp
sub
xchg
aad
out
lret
pop
fisttps
loop
out
leave
enter
ss
and
jmp
mov
loope
in
stc
in
fcmovu
rolb
lds
jecxz
loopne
mov
xchg
xor
xor
aam
shr
xlat
shl
mul
repnz
ret
filds
xchg
jecxz
out
cmp
ljmp
aam
cld
loope
cli
jmp
jmp
enter
rcl
call
hlt
ror
in
fcmove
ds
std
fmuls
in
iret
mov
xor
leave
lret
stc
ffree
jmp
test
icebp
call
fadd
in
fcmovne
out
into
ljmp
das
ljmp
and
fdivr
mov
aam
mov
jmp
popl
out
xor
lret
stc
int3
fnstcw
sarl
stc
ret
xchg
leave
repnz
sbb
enter
call
int
sub
rolb
loope
mov
lret
lock
ljmp
xor
cmp
ror
leave
into
idiv
ret
clc
rcr
hlt
loopne
int3
stc
lock
mov
aad
xor
cli
call
cmp
shl
icebp
sbb
lret
cli
mov
adcl
fdivs
cmp
int
xor
repz
sarb
sub
test
test
iret
out
jmp
cmp
into
aad
ds
loope
aam
lret
loopne
out
jecxz
loope
in
xchg
lock
repz
xor
in
out
cmp
std
sti
xchg
faddl
cli
std
fcos
mov
mov
sub
repz
cmp
testb
out
out
mov
aaa
jecxz
out
out
enter
fcmovnbe
fildl
stc
clc
fchs
test
mov
repz
divl
rcl
xor
fcomp
cmp
aad
lock
xchg
jecxz
mov
xchg
jecxz
neg
ss
out
in
fst
shl
std
icebp
ret
test
cmp
cld
mov
ljmp
out
out
ljmp
into
jecxz
cli
test
cli
jecxz
mov
xchg
shrb
int3
xor
jmp
hlt
xor
clc
loopne
aad
call
neg
leave
int3
nop
icebp
fsubrp
xor
shl
int3
cmp
idiv
xor
test
sti
ret
xchg
int3
call
in
lret
cmc
ss
xor
lret
fmul
repz
cld
fadd
in
ljmp
mov
out
out
shr
shll
fdiv
loope
out
rcl
cmc
out
roll
std
mov
loop
in
aad
xor
cmp
repnz
xor
into
test
cld
xlat
ret
aas
hlt
cmc
ret
addb
roll
ss
xlat
cs
cmp
in
aas
test
fdivrp
loop
mov
lea
mul
ror
shl
cmp
xlat
cmc
xor
dec
jmp
movl
lret
out
xchg
cs
xor
leave
jmp
fdivrs
std
cli
mov
fmull
enter
xchg
stc
xor
xor
fdivrl
stc
out
shl
ret
icebp
in
loope
in
int
cmp
jmp
hlt
cmp
clc
aam
icebp
div
fcomp
fcmovbe
lret
mov
cld
loope
shl
lret
cmc
xor
fcomp
loop
out
cmp
hlt
out
in
mov
std
fldl
in
and
add
add
rcl
fstp
fldt
inc
mov
jle
add
out
cmp
jmp
cli
ret
out
leave
fxch
fisttpll
out
into
cli
enter
xor
neg
lock
in
in
in
xchg
filds
repnz
cmp
lock
imul
add
jmp
shl
call
iret
repnz
jmp
xor
ret
out
int
test
stc
into
sub
out
aad
sub
aam
int
out
cmp
les
std
enter
fcmovu
stc
lret
into
repnz
xchg
repnz
jecxz
std
fdivp
shl
rcr
fnstcw
test
imul
jmp
into
out
call
enter
fdivp
std
out
mov
cmp
int3
orl
in
call
jmp
out
in
cmp
stc
mov
jmp
enter
stc
into
int
fmull
enter
fucomi
lret
repz
rol
jecxz
enter
test
sti
aam
xchg
call
imul
out
xor
loope
addb
fldl2t
addb
int
vpcomq
shr
std
aas
idivl
test
cmc
shl
in
cld
in
jmp
mov
iret
xor
xor
fdivrp
cli
iret
fcom
sbb
jecxz
leave
in
test
mov
jmp
jecxz
in
ljmp
loopne
sub
adc
jecxz
idiv
loope
movb
fsub
cmp
aam
hlt
testl
testl
loope
call
xor
loope
shl
loopne
clc
in
int3
test
mov
lret
mov
xchg
xchg
out
shl
enter
lret
xor
ret
or
in
in
jecxz
jmp
and
xor
lret
cmp
out
jmp
out
cmp
fld
repz
lea
cld
out
shr
rcl
lds
xabort
sti
roll
cld
jmp
lret
sub
into
ret
out
int
jmp
cmp
sbb
aad
lea
std
and
xchg
clc
out
ljmp
aaa
div
fdivrs
rcl
sbb
fstp
in
xchg
xchg
cs
in
into
ljmp
cmp
lock
out
hlt
hlt
call
ljmp
icebp
int
ret
cs
cmp
hlt
cmc
icebp
cli
repz
ljmp
mov
cmp
int
stc
stc
jmp
loopne
stc
fdivr
call
jecxz
leave
mov
jmp
icebp
cmp
stc
cmp
mov
fucomip
out
xchg
rcll
sar
fsubr
fcomip
loopne
cmp
xchg
enter
mov
xchg
divb
loope
lret
xor
not
in
rol
test
cli
ds
ror
testb
mov
loope
xor
cmp
std
cmp
loopne
hlt
loop
ljmp
mov
aam
shl
sub
stc
les
lret
incb
neg
jecxz
mov
xlat
int3
stc
call
iret
xor
enter
repnz
clc
fdivr
shl
loope
ret
and
fsub
jmp
xchg
aad
ror
in
sar
cmp
repz
out
xor
jmp
cmc
in
sti
roll
sar
leave
lret
lret
xor
xor
test
fldz
in
iret
xchg
loopne
fisttps
in
repz
fstp
lret
sar
aad
clc
clc
test
in
ljmp
int3
mov
int3
ss
shr
cmp
jmp
hlt
loop
stc
fcmovnu
call
roll
call
in
cmc
aam
loope
lret
loope
inc
shl
cli
jmp
clc
out
out
ret
call
out
out
lret
cmp
cmp
cli
icebp
cmc
lret
out
mov
xchg
shl
repnz
fnstcw
lret
fucomp
hlt
or
cmp
std
fcomip
jmp
mov
stc
xchg
in
jmp
stc
into
repnz
cmp
ss
ror
fxam
fidivrl
xchg
lret
in
in
mov
loop
sar
lock
in
xor
lea
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
stos
cltd
test
movsl
add
lret
loope
loope
call
mov
mov
and
aas
sar
fucom
lret
aaa
enter
loopne
into
rcl
clc
fmull
mov
shl
repz
in
out
jmp
cmp
hlt
loope
jecxz
repnz
stc
mov
iret
out
test
fdivl
loopne
clc
and
int
leave
addb
shr
incb
lret
imul
fsub
ljmp
repnz
fucomp
testb
out
cld
addb
xor
cmp
in
lock
repz
stc
lock
out
xchg
repnz
fmul
shl
cmp
iret
std
cmp
in
rol
lds
into
ret
jmp
mov
lret
int
hlt
cmc
cmp
shl
in
test
test
repnz
div
ret
xor
cmp
fdivrs
inc
xlat
sar
cmp
rcl
fsubr
nop
iret
cli
mov
in
xlat
in
out
cmp
out
out
hlt
cmp
in
sar
shr
loop
mov
test
jmp
in
ljmp
ljmp
shl
sbb
test
std
shr
fists
cli
mov
cmp
aam
cld
out
repz
test
repz
sti
hlt
hlt
out
loope
out
aam
clc
repnz
aam
lock
repnz
jecxz
sbb
mov
iret
ret
lret
cmp
cli
dec
xchg
cmc
inc
cli
std
in
mov
orb
ret
aad
cmp
cmp
jmp
aam
fsub
std
aas
out
ret
int
test
jecxz
rcl
loopne
ss
fst
ljmp
clc
rol
in
fmulp
out
fcompp
icebp
rorb
das
int
xor
icebp
out
jecxz
repz
xchg
test
clc
in
loope
stc
in
in
xchg
in
sub
stc
xor
cmp
aam
ret
rcr
faddl
loopne
lret
stc
imul
xor
fcom
clc
xor
sti
sarb
call
jecxz
neg
ror
xlat
cmp
sar
clc
cli
iret
not
fld
in
loopne
std
loop
shl
in
mov
rcr
lock
aad
cli
jmp
or
shr
std
fisttps
addl
in
into
aam
lret
aad
lret
ret
mul
idiv
ret
xchg
jecxz
xchg
sbb
test
int3
cmc
ljmp
fdivr
test
sti
mul
repz
fisttpll
adc
shll
fstpt
das
xlat
lock
std
in
aaa
shl
movl
repnz
mov
ss
aad
ljmp
rcl
not
adc
int
addb
shr
int3
rcr
std
mul
lock
int3
in
idiv
orl
lock
or
in
cmp
fidivrl
fyl2xp1
cmp
test
ds
stc
cld
sbb
lret
in
test
out
icebp
aad
icebp
fscale
fnstsw
adc
rcr
repnz
in
jmp
repnz
jecxz
ret
test
lock
ss
rcl
roll
ffreep
lret
idiv
loop
std
int3
out
jecxz
loop
cmp
in
ljmp
xchg
stc
enter
mov
stc
loope
loope
xchg
sub
cmp
sarl
cmpl
out
filds
hlt
cld
loopne
xor
xor
aam
icebp
std
icebp
ljmp
and
fimuls
jmp
repz
rcl
into
call
iret
fildl
rcr
in
ljmp
int
aad
lret
into
cld
out
xor
hlt
fsubp
cli
div
neg
ljmp
call
loopne
shlb
in
out
jmp
aad
roll
frndint
and
into
mov
repnz
ret
aaa
lock
cmp
hlt
clc
stc
icebp
adc
sub
mov
shr
jecxz
shr
hlt
into
cmc
out
cmp
in
cld
icebp
cmp
jecxz
fldz
repnz
stc
fimull
decb
int
out
rcl
lret
lret
aam
cmp
fptan
movzwl
jmp
ret
aas
ret
aad
aad
mov
cmc
push
jle
movsl
add
adc
fmul
test
fucom
fcoml
xlat
out
pushl
cmp
xor
out
adc
cmp
xchg
test
hlt
xchg
jecxz
vpsubsb
cmp
lret
loopne
fmul
neg
sub
faddp
loop
xchg
std
out
test
mov
cs
repnz
leave
cmp
iret
and
icebp
fdiv
xchg
in
xchg
out
mov
loop
fmulp
aam
xlat
in
xlat
aaa
jmp
loopne
loope
in
rorl
jmp
fucomp
shr
out
xor
ror
cmp
loopne
hlt
cmp
fdivr
leave
lret
fldl
jecxz
xchg
nop
int
aad
in
ss
cld
aas
repnz
addl
cli
out
in
test
icebp
int3
xchg
xor
out
sub
ret
out
fsubr
ljmp
xchg
sar
fisttps
shl
out
jmp
sar
repz
repz
xlat
dec
fcmovbe
incl
out
fcmovne
and
addb
iret
out
std
out
sti
ljmp
lock
jmp
rolb
sar
lret
out
in
ds
shl
xchg
enter
std
test
in
loopne
cmc
jmp
loop
lret
iret
aam
cmp
cmp
test
lds
iret
fdiv
aam
call
into
cli
ljmp
cmp
loopne
ret
out
jecxz
xchg
fsub
in
in
out
int
lret
lret
xor
incl
mov
stc
mov
icebp
xchg
int3
cmc
out
xor
in
xlat
icebp
cmp
fadds
xchg
in
call
out
hlt
ljmp
shll
leave
xor
addl
or
in
int
jmp
ret
out
aam
cmp
fidivl
call
out
loop
mov
test
fucomp
fistl
int3
in
xor
cld
cld
ss
addb
mov
ret
int3
mov
xor
cli
leave
cmp
out
cld
cmp
fidivrl
lret
aas
sti
ror
rolb
out
lret
fyl2x
cmp
hlt
in
ds
test
lret
into
repnz
nop
repnz
hlt
lock
leave
cmp
fiadds
in
out
loope
and
xchg
out
test
aaa
fdiv
xlat
cld
rcr
in
fsubp
loopne
loope
aad
lret
xchg
mov
loope
ret
xlat
div
lret
roll
into
roll
fmul
jecxz
mov
xchg
out
ss
repnz
into
rcl
jmp
out
cmc
rorl
out
sti
jmp
xchg
jecxz,pn
sub
cmp
ror
xor
ror
out
loope
mul
mov
sti
out
out
repnz
in
lds
rcl
neg
aad
in
out
iret
fstp
out
cld
clc
int3
loope
loope
loop
call
out
fcmovbe
fcom
in
out
shl
mul
cmp
out
or
jecxz
and
int
loope
rcl
aad
fdivr
aas
sarl
cld
cmp
orl
sub
shl
cmc
aad
stc
rcl
rolb
vpandn
ljmp
ror
out
xchg
ss
cmp
lret
aam
fcmovnu
sti
out
repz
addl
mov
mov
fxch
sti
in
rol
xor
rcl
sar
shl
fdivr
cld
xchg
mov
hlt
int
call
repz
aas
repnz
mov
mov
in
mov
ljmp
aad
iret
test
call
cmc
aad
not
adc
fimull
repz
imul
xor
aaa
lock
aaa
aas
loope
loop,pt
ret
call
ljmp
loop
dec
lret
cmp
cmp
rol
xlat
leave
aad
mov
jmp
hlt
in
ret
shl
int3
into
iret
rcl
out
loope
cmp
cmp
xlat
clc
jmp
cli
out
std
loopne
test
aad
sub
int3
cmp
fdivp
loope
cld
rcl
loope
mov
loopne
mov
xchg
sub
lret
fst
int
into
cmp
lock
loopne
fcmovne
out
add
jmp
rol
ror
rcr
fcmovnu
mov
popf
test
and
movsl
add
jmp
in
xchg
loope
into
xor
iret
rcr
shl
ds
cld
cmp
in
xchg
ret
repz
div
or
mov
call
in
xor
shl
cli
leave
fucomip
sar
fstp
loop
loope
in
lret
leave
in
xchg
repnz
xor
jmp
sarb
aad
test
mov
mov
enter
out
out
shl
out
fdiv
fnstcw
repz
or
testb
ret
fmul
out
int3
loope
xchg
ss
divb
clc
stc
out
clc
ds
fdivr
fnsetpm(287
aad
repz
call
stc
xchg
xor
ror
ss
repnz
cmp
faddp
sarl
out
mov
xchg
roll
icebp
neg
leave
fcmovne
xor
clc
loope
iret
cld
jmp
mov
stc
fsubr
mov
sar
out
xchg
repnz
sti
out
cld
icebp
repz
ret
lret
cmc
or
mov
jecxz
shl
cmp
shl
loopne
fucomp
shr
out
incl
test
out
vphsubwd
aam
out
out
fcmovne
int
iret
ror
aam
repnz
cmc
icebp
mov
xchg
decl
jmp
into
lock
iret
leave
testl
jmp
mov
fists
ret
out
fadds
out
leave
in
xor
ljmp
xchg
ror
ror
rcr
clc
ss
cmp
lock
clc
test
mov
decl
addb
xlat
in
cmp
lret
jmp
shl
mul
iret
neg
sar
std
mov
addb
in
cmp
cmp
clc
fmul
sti
xlat
cmp
fadd
fcmovnbe
stc
cmc
faddp
jmp
loop
mov
in
imul
cmp
and
out
mov
aam
loopne
out
adc
shr
cmc
in
aas
icebp
lret
loope
in
ljmp
fucomi
roll
clc
fucomp
divb
cmp
cli
stc
repz
loopne
lret
cmc
mov
xor
fcmovu
std
std
cld
fmul
shl
in
fsin
lock
ret
cld
lock
jmp
std
call
jmp
out
loop
loope,pt
clc
ret
jmp
out
leave
leave
int3
fucomip
repnz
iret
sub
cld
fucomi
fcmovu
lret
fistpll
in
fprem1
fcmovu
aam
fdivr
mov
xor
sti
cld
test
repnz
ret
iret
ljmp
fcomi
xchg
test
hlt
xchg
fsubp
mov
mov
out
adc
xor
repz
fucomi
repnz
clc
sar
clc
rcr
filds
xlat
or
loopne
jmp
xchg
int3
ror
iret
xlat
xor
lret
leave
int3
sbb
aam
sbb
mov
fmul
rolb
into
out
enter
in
in
jecxz
movb
call
out
rcl
in
int
sub
cld
cld
int3
cmp
out
cmp
leave
stc
stc
loopne
in
mov
fdivs
cmp
fcos
stc
ret
ret
xchg
mov
mov
in
iret
sarl
faddp
xor
icebp
sbb
test
mov
jmp
in
in
lret
out
xchg
mov
xor
aad
aam
aaa
aam
loopne
cli
div
mov
jmp
addb
rcl
in
iret
in
xor
vaddsubpd
rcl
stc
call
sar
fldl
fmul
orl
mov
lret
cmp
xor
ror
jmp
in
fistpll
out
cmp
cmc
lret
clc
xchg
loope
fldl
shlb
repnz
aas
cmp
loop
in
out
sbb
out
std
mov
xchg
aad
lret
lret
xor
cmp
cmc
ror
aad
mov
mov
divb
int3
iret
jmp
ljmp
ljmp
loop
int3
call
das
rcl
lret
stc
enter
cmp
shll
stc
cmp
clc
jmp
test
icebp
mov
xchg
lock
loop
out
out
hlt
repz
lock
repz
fadd
cmp
loopne
addl
shl
rcr
jmp
cmp
into
cmp
xchg
mov
call
ficoms
inc
or
mov
aad
leave
aad
fcmovnu
sub
push
lcall
add
icebp
xor
xor
aam
fstp
fnstcw
idiv
shl
fmul
in
push
ljmp
loope
popl
shl
fadd
cmp
out
cmc
sarb
cli
xchg
into
dec
mov
jecxz
call
bnd
sarb
cld
hlt
in
icebp
cmp
jmp
incb
xchg
aad
shl
ljmp
cld
xor
aas
cld
loop
stc
loope
enter
shl
repnz
sti
cld
stc
out
aaa
neg
in
rcr
fisttpl
in
int3
in
fxam
hlt
fst
cmc
jecxz
xlat
ljmp
ljmp
out
shr
aas
jmp
cld
out
pause
xchg
stc
out
shl
cli
iret
repnz
repz
shl
fadd
loopne
loop
mov
fimuls
int3
clc
cmc
test
cli
fptan
icebp
ror
fsubp
and
test
mov
repz
jmp
aam
int3
test
lock
sbb
div
sti
addb
cld
rorl
leave
xor
fstp
cld
cmpb
shl
aam
rcl
stc
in
lret
fcmovnu
enter
in
ror
xlat
hlt
out
fdivr
ret
iret
in
cmc
orl
icebp
mov
xchg
in
xchg
stc
rol
iret
xor
jmp
std
out
out
addb
in
jmp
int
xor
call
in
std
in
repz
roll
mov
shl
int3
xchg
jecxz
xlat
repnz
ss
cmc
int3
fcmovbe
aad
loop
loope
jmp
incl
xor
in
cld
repnz
ror
out
cli
cmp
or
xchg
out
jmp
int
cmp
leave
lock
rcr
lock
repz
fcmovnb
fst
mov
into
fcoml
ror
xor
repnz
stc
ror
cli
rol
ds
out
xchg
mov
stc
leave
imul
jmp
xlat
cmp
cmp
mov
mov
lret
test
mov
enter
xor
in
out
in
cld
xchg
jmp
iret
fdiv
out
in
repnz
aaa
into
out
int
adc
frstpm(287
adc
in
cmp
nop
orb
aam
ror
aad
loopne
out
aam
lds
loope
std
xchg
hlt
mov
iret
fmul
das
jmp
repz
fcmovnu
cmp
iret
aam
leave
add
in
jmp
in
xchg
hlt
call
neg
in
lret
cmp
cmpl
sar
cld
in
out
xchg
enter
clc
hlt
cmc
incb
into
repz
leave
xlat
lret
in
in
fcmovnu
int3
out
imull
in
cmp
shl
jmp
shl
hlt
xlat
testb
jmp
out
mov
decb
out
call
out
aas
in
cli
fnstcw
mov
fcomi
xchg
addb
leave
shl
repz
imul
lret
fsincos
rcl
sarb
addb
shr
mov
jmp
jmp
enter
fdivrs
aam
stc
aad
in
div
int3
fimuls
mov
rorb
jecxz
in
int
iret
shl
cmp
sti
test
leave
or
ror
idiv
out
xor
aam
cmp
ljmp
ret
cmpb
lret
imul
or
in
faddl
call
filds
and
ret
out
test
mov
call
fmul
call
test
sti
sar
loop
cmc
cmp
ficoml
rorl
in
jmp
aam
cmp
fimuls
rolb
out
sar
xor
ljmp
iret
rol
loopne
test
fsub
int
loope
mov
lret
fimuls
shlb
rcl
icebp
filds
test
mov
jmp
fildl
shl
loope
leave
enter
cli
into
int
in
repnz
ret
fsubr
mov
lret
enter
call
hlt
aad
cmp
ljmp
fimuls
jmp
std
rcl
std
jmp
enter
icebp
mov
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fucomi
xchg
ret
dec
test
jle
add
xor
cld
shr
out
jecxz
repz
fucom
cld
mov
lock
cmc
test
out
xor
fcomi
rcl
test
jecxz
loope
call
xchg
mov
iret
test
into
shll
shl
sbb
sti
cld
roll
fmuls
fmull
div
cmp
stc
cmp
shl
test
in
sti
leave
enter
orb
fcmove
stc
out
aad
rcr
ror
adc
shl
sar
cmc
in
in
call
mov
bnd
int
sub
shl
sbb
icebp
mov
mov
lock
out
and
xor
cli
out
fsubr
loope
neg
repnz
aam
sbb
lret
int3
out
loope
repz
repnz
clc
out
lret
fdivr
enter
fsubp
fsubp
ret
jecxz
out
aad
mov
in
test
into
shlb
aam
loop
aad
fadd
rcr
fsub
test
std
lret
into
fsub
loopne
xchg
lock
xor
hlt
vpmaddwd
in
ds
hlt
fabs
cmp
fildl
jmp
xchg
nop
iret
in
into
xor
int3
cld
cmp
lret
incl
out
and
fldl
rorb
in
lock
cmp
jmp
icebp
rolb
jecxz
test
out
cmc
fidivl
ss
aaa
in
repnz
fildl
mov
iret
nop
mov
in
xchg
jecxz
rcr
xor
shr
cmp
jecxz
fcom
jmp
sub
mov
int3
shl
ss
lret
ss
test
loopne
aad
test
hlt
in
mov
aam
ror
enter
std
idiv
fxam
clc
xlat
fildl
loopne
dec
std
jmp
cld
cmp
cmp
fabs
lret
test
repz
sti
loop
mov
xchg
enter
int3
test
xlat
lret
int3
faddp
push
xlat
sar
ffreep
in
call
int3
loopne
ss
aam
loopne
ret
test
cmp
enter
fdivr
mov
jecxz
in
rcr
fdivr
int
aaa
std
xor
fisttpll
nop
lret
notb
ret
xor
cmp
xlat
fcmovnb
std
enter
loope
mov
out
jmp
loope
clc
stc
int
cmp
lock
sarb
in
hlt
out
loop
and
xchg
fsubrp
lock
idiv
cmp
shr
cmc
shl
stc
aam
adc
mov
rorl
repz
mov
aaa
cmc
xor
fdivs
leave
idivl
ds
xchg
cld
rol
and
mov
lret
lock
das
int
out
aam
ss
hlt
fsubr
loope
fdivrl
fsub
xchg
out
iret
std
mov
shl
mov
out
aam
jecxz
xlat
ds
mov
fcmovbe
fmuls
xchg
ljmp
sti
into
cmp
aad
std
aad
repz
fstp
incl
loopne
icebp
call
in
rcr
in
std
leave
xlat
stc
cmp
cmc
stc
std
xlat
idiv
sub
in
lea
in
fsub
ss
xor
jecxz
or
rolb
shl
in
out
loop
mov
lret
ror
leave
aaa
lret
out
in
cli
hlt
fcmovnbe
icebp
test
sti
lock
repz
xchg
loopne
jecxz
repz
ds
cmc
imul
ret
fcmovnu
ret
loop
enter
lret
jecxz
call
aam
xor
lret
repnz
test
out
sti
aad
add
in
mov
cs
out
enter
cmp
fstpt
test
repz
xchg
loope
in
call
cmp
sar
leave
sbb
stc
repnz
orl
into
cli
clc
cmp
in
clc
loope
hlt
int
aas
shl
ffreep
in
enter
mov
test
aad
repnz
hlt
cmp
sub
lret
loop,pt
mov
shl
test
test
adc
lock
out
int
out
out
into
ret
repz
aam
test
lret
lret
int3
cmc
xchg
icebp
fcmovu
aaa
ror
cld
stc
lret
bnd
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
cmpsl
out
pop
sub
jle
movsl
add
in
rolb
adc
int3
xchg
xor
lock
out
xor
into
std
rcr
loop
fcmovnb
loope
fadd
rorl
in
jmp
cmc
ret
aam
xor
cmc
leave
sti
fidivrl
repnz
jmp
lret
xlat
clc
jmp
xchg
shlb
fnstcw
fdiv
in
icebp
cmp
stc
loopne
cld
adcb
orl
cmp
xor
cmp
loop
hlt
fstp
xlat
enter
int3
int
enter
in
out
cli
clc
std
fdivrp
sti
fcom
loope
adc
call
sbb
in
xor
shl
idivl
fcom
rcl
aam
in
test
xlat
out
loopne
shl
xchg
rclb
cmp
hlt
fdivrp
fcmovb
idiv
cli
sub
leave
int
in
repnz
aam
xor
cmp
out
fcomi
int3
cmp
xchg
mov
and
mov
icebp
cld
fldl
out
cmp
cmpb
xor
in
stc
cmc
testb
xchg
loope
jecxz
loop
jecxz
fmul
sarl
repnz
iret
aas
clc
mov
lret
in
into
and
test
in
cmc
out
lock
ror
cld
rcr
std
jecxz
mov
in
loope
jmp
clc
cs
lret
jmp
rcr
sti
testl
stc
repnz
jmp
in
repnz
xor
cmc
fdivrs
hlt
rorb
out
xchg
rcr
cmp
sti
sti
icebp
xor
cli
ret
out
icebp
jmp
loop
mov
jecxz
iret
loopne
out
enter
aad
cmp
ffreep
iret
loopne
orb
mov
hlt
in
xlat
icebp
icebp
lret
fdivr
out
aas
incb
jmp
jmp
loopne
xchg
in
icebp
xor
xor
out
fmulp
xlat
hlt
int3
push
shl
fdivrp
repnz
stc
aad
out
jmp
ror
repnz
clc
shr
repz
cmp
iret
aas
out
stc
addl
in
in
xchg
out
into
xlat
fcomp
fsub
cmp
loopne
cmc
ret
clc
out
out
mov
fsubr
cmc
rol
repnz
xor
iret
in
into
iret
ret
out
loope
out
nop
jmp
in
xor
int3
xor
rcl
xor
in
int3
iret
cmp
cld
lret
lock
mov
loop
out
fld
cmp
aaa
aam
cmp
ds
rol
clc
jecxz
call
out
sti
repz
mov
out
iret
aam
lret
out
int
xor
in
std
fldl
loope
out
out
int
int
jmp
out
call
ror
int3
cmpb
lret
mov
nop
repnz
in
jmp
leave
clc
enter
out
rcl
mul
lock
cmp
fisttpll
shl
xor
test
repnz
in
fld
loop
jmp
enter
sar
call
iret
ss
neg
ljmp
fcmovu
jmp
fucomp
mov
jmp
aad
in
clc
int3
xlat
ss
cmc
add
hlt
icebp
xchg
fstp
fsubr
fucomip
lret
fucomip
rclb
cli
lret
cmp
loopne,pt
hlt
icebp
lock
test
fcmovb
mov
lret
nop
xor
into
cmp
lret
rcl
clc
aam
fldl
leave
fcos
lret
repnz
nop
shl
ret
leave
cmp
fcmove
xor
test
xchg
call
jmp
xchg
cmp
iret
icebp
not
inc
repnz
out
out
enter
ret
mov
fimuls
shll
enter
jecxz
ret
test
aad
mov
xchg
jecxz
mov
repz
cmc
hlt
int3
fstp
iret
cmp
ljmp
xlat
xchg
or
sub
test
jmp
in
xor
call
xor
shl
xlat
fdiv
mov
lret
call
test
hlt
ss
enter
cmp
icebp
add
out
aam
call
out
addl
int
ljmp
fdivrl
xor
aam
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
inc
mov
mov
xor
jle
mov
fld
cmp
xchg
xor
xor
shl
cmp
fstpt
aad
out
adc
mov
fcmove
out
rorb
fyl2x
aad
sti
int
xor
rcl
test
orb
out
xchg
fxch
xor
in
in
test
rolb
lret
out
lock
cmp
repnz
loopne
clc
hlt
neg
lret
inc
xchg
adc
iret
xchg
xor
int3
cmc
fxch
call
std
aam
push
cmc
shl
aas
enter
fcmove
nop
xor
repz
rcr
icebp
cmp
out
aas
rcr
iret
faddp
ret
cmc
lret
addl
aam
aad
ds
fnstsw
out
fcomip
lret
mov
mov
mov
out
xor
in
clc
lret
call
cmp
loopne
or
lret
mov
in
iret
lret
jmp
xor
in
repz
sarb
fdivr
loop
in
sti
clc
test
loop
sti
test
fdiv
ljmp
out
cmp
loop
xchg
fsubrp
ffree
stc
call
or
icebp
ret
in
idiv
rcl
clc
xor
inc
call
mov
or
xchg
into
out
lret
enter
icebp
iret
ror
xor
mov
sti
mov
aam
into
repz
stc
rcl
idivb
cli
xor
jmp
xchg
xchg
iret
out
ljmp
enter
iret
fbstp
lret
shl
icebp
std
adc
and
int
rcl
jmp
in
call
ljmp
loopne
ds
in
and
fcom
repz
mov
mov
clc
ljmp
cmp
shl
cmc
fadd
mov
call
xchg
lock
out
fidivs
int3
cmp
fdivr
ret
loopne
or
xchg
cli
xor
leave
cmp
shl
ss
in
rorb
fyl2x
ljmp
xlat
in
sar
std
rcr
cmc
neg
aaa
cmpl
out
test
jmp
out
loop
lock
cmp
sar
sar
jmp
fcmovnu
in
inc
loope
lds
stc
lock
rcr
xchg
int
xor
vpminub
call
std
addb
mov
addb
jecxz
cmpb
stc
sar
xlat
cmp
aas
ds
rol
jecxz
mov
fadd
sti
fmull
lret
loope
enter
call
aaa
lret
sti
iret
repz
ftst
in
orl
rcl
rol
cs
xor
fdecstp
cld
stc
in
sar
test
test
jecxz
test
xchg
fucomi
fcomip
xor
iret
fxtract
in
cmp
sar
cmc
int3
clc
cmp
mov
and
rolb
xchg
repnz
aam
xor
xlat
sar
aas
loop
hlt
jecxz
fcmove
ljmp
out
orb
xor
lret
fxch
xor
mov
cli
stc
fldl
ret
div
xor
xor
fucom
in
frndint
fcmovbe
stc
mov
incl
loop
cld
fnsave
call
cmp
cmp
stc
mov
in
enter
xchg
loope
xlat
shll
ret
out
fstp
into
call
fcmovne
addl
test
xor
sub
div
test
iret
stc
repz
loop
xchg
icebp
call
fimull
rcl
out
loop
iret
xor
cmc
shl
repz
icebp
out
lds
ljmp
ljmp
cmp
out
loopne
in
fst
loopne
lock
or
aam
loopne
int3
cmp
iret
stc
in
cmp
ror
ret
test
cmp
lret
idiv
loope
mov
cld
and
sub
rcl
rcr
xlat
cld
loope
out
idiv
jecxz
fxch
xlat
fisttpl
out
xchg
int
aam
out
int
cmp
shl
sti
fsub
clc
roll
in
lock
out
xor
in
call
jmp
aam
hlt
hlt
fdivrs
roll
idiv
jmp
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
add
sub
cmp
movsl
add
cld
repz
jmp
aam
cmp
cmc
fistpll
ds
test
cmp
test
decb
xchg
xchg
jmp
ss
cmp
fcomi
ss
aam
not
not
cmc
mov
sub
call
out
loope
clc
lds
int3
shr
cmp
std
aam
div
in
ret
not
loope
leave
jmp
fisttpll
sar
ror
lret
xlat
leave
xlat
sarb
stc
fistpll
hlt
in
rcr
cld
fdiv
in
hlt
lret
call
lret
sti
lret
fdivr
out
ret
out
fadds
fsub
in
fcmovu
jmp
sar
iret
jmp
xor
test
loopne
sbb
ljmp
mov
xor
leave
enter
shl
clc
aad
xlat
loopne
roll
into
cli
jmp
loope
repnz
lret
xor
in
not
int3
ror
test
cmc
jecxz
ret
in
testb
fimuls
lock
repz
aad
ret
out
cmp
mov
out
fchs
shl
leave
lret
in
icebp
repnz
jmp
cmp
ret
lock
sub
clc
mov
test
ret
int
xchg
test
in
out
cmp
leave
shr
aaa
sbb
aad
testl
xchg
fdivs
clc
fcmovne
std
das
aam
ljmp
in
mov
or
fucom
xchg
fnstenv
cld
cli
sti
ljmp
in
incl
out
fmuls
call
int3
repz
out
int
sti
in
ds
repz
xchg
out
clc
loope
ljmp
rcl
jmp
cmc
aaa
icebp
rcr
in
out
loope
loopne
fmuls
xchg
loope
xchg
loope
cs
cmp
cmp
cmp
repnz
rcr
cld
loopne
stc
loopne
fstl
shll
ret
hlt
sti
sar
lret
clc
adc
orl
clc
call
xchg
ret
lock
cld
lret
int
icebp
sbb
fucom
ret
leave
sti
mov
cld
cld
xchg
icebp
aam
lret
in
jmp
sarb
fsubr
into
fimull
aad
xchg
mov
leave
popl
test
xor
lret
sbb
fadd
aas
test
call
in
push
fnstsw
xchg
int3
repnz
shll
ds
faddp
fcom
hlt
shl
rol
loope
xchg
in
fstp
fmulp
loop
clc
aad
rcl
repnz
fnstsw
call
loop
shr
cmp
test
ljmp
ljmp
neg
fdiv
iret
clc
into
hlt
loopne
loope
xlat
repz
lret
into
fimull
int
in
into
cli
cs
jmp
fmul
or
inc
cld
incl
fcmovnbe
repnz
add
leave
ss
lret
call
fcmovb
xor
test
fucom
ror
lea
int3
xor
in
aam
ljmp
loope
fdivr
fadds
mov
repnz
mov
lock
shll
aad
ret
out
sub
roll
and
lock
test
mul
cmc
int
enter
out
clc
clc
call
mov
aas
mov
lret
repnz
ss
ret
repnz
clc
jmp
in
cmp
xor
ds
loop
cli
loopne
into
lret
orl
ret
lret
sti
cmp
clc
aam
in
add
stc
imul
jmp
in
in
leave
out
out
cmp
fcmovnb
and
cld
ljmp
call
call
sarl
call
out
aas
rol
fcmovu
loopne
ljmp
xchg
adc
jmp
ss
int
rcr
rolb
test
enter
mov
iret
shl
cmc
xor
cli
icebp
neg
xor
loopne
mov
xchg
out
loope
mov
aad
out
xlat
xor
int3
fdiv
xlat
fdivrl
xor
ret
vpsubb
enter
cmp
sub
jecxz
orb
in
shlb
cmp
cld
xor
addb
xchg
jecxz
leave
mov
int
cmc
div
shl
cld
out
lret
roll
fdivr
idivb
xlat
mov
jecxz
add
jmp
fstp
je
xchg
or
and
jle
movsl
add
aad
xor
lock
ds
in
loopne
jecxz
ds
les
into
cld
fldl
ljmp
ds
int
shl
loop
fiaddl
leave
mov
rcl
xor
fucomp
ljmp
into
aas
not
cmp
lret
loope
xor
out
xor
neg
jmp
fnstcw
fcmovu
cli
ret
sti
aam
fprem1
in
out
in
iret
loope
lret
shl
in
cld
std
out
xor
cmp
addb
ret
jecxz
in
iret
int3
rclb
clc
les
out
leave
int
fstpt
aaa
loopne
imul
xchg
ret
mov
out
hlt
call
shl
lret
cmp
fidivrl
cmp
cld
add
ljmp
loope
loope
icebp
lock
ror
loopne
in
ret
aam
fadds
lock
cs
call
fcomp
cmp
ds
and
in
mov
call
fsub
cli
in
iret
faddp
not
testl
ret
jmp
ljmp
lret
in
cli
out
in
cmp
out
mov
aas
neg
sbb
mov
out
xor
jmp
cmp
int
aas
and
rcl
sbb
jmp
mov
mov
loopne
aam
test
lock
cmp
hlt
icebp
icebp
sarb
rol
cli
sub
into
mov
idivl
loop
cmp
adc
sti
shl
in
decl
mov
out
rol
in
std
shr
leave
shl
xor
jmp
sub
test
xchg
repz
out
jmp
out
aaa
out
ds
cmp
fcmovnu
repz
sti
mov
stc
out
fdivp
rclb
rcl
cmp
call
cmp
xchg
cld
in
loop
cld
icebp
call
div
xlat
ljmp
cli
cmp
not
ret
cmc
out
adc
clc
fimull
repz
vpsrad
lock
fstpt
fucomp
lock
in
xchg
test
mov
fcoml
loope
mul
in
cmp
aad
testl
sti
xlat
int
mov
xchg
jecxz
aad
aaa
out
xor
cmp
test
fcomip
aad
std
loope
mov
sub
in
int3
cmp
lret
int3
stc
cmp
aad
in
clc
loopne
mov
jmp
jmp
lock
in
in
loopne
fidivl
iret
clc
int
int
fstp
shlb
adc
jmp
icebp
rcl
icebp
jmp
fdivrl
inc
ds
cli
test
cld
rcl
lds
xchg
in
in
divl
loope
xlat
out
fcmovnbe
xlat
repnz
hlt
xlat
xor
std
ljmp
ret
mov
fsubr
aam
xor
call
in
rol
jecxz
call
rolb
das
cmp
shl
cmp
int3
enter
in
rcr
clc
stc
mov
leave
in
in
xchg
cld
jmp
clc
lret
icebp
fsub
out
ljmp
ffreep
addl
xchg
out
xchg
xlat
rol
cli
idivl
aas
test
test
test
jmp
std
mov
xorb
xlat
out
rcr
lret
call
jecxz
out
fadds
lret
inc
in
mov
mov
shl
call
cmp
loopne
cli
cmp
ret
int
lds
or
shl
not
fdivr
xor
repnz
mul
cli
std
adc
call
jmp
ss
std
rol
sar
xor
fcmovne
fadds
faddl
ror
shr
cmp
call
xor
test
cmp
loope
leave
int
int
lret
out
mul
into
lock
fsubr
sar
lock
ret
fcmovne
xchg
loope
ss
repnz
aas
adc
rcl
aam
aad
int3
out
fisttpl
ffreep
in
ret
repnz
rcl
jmp
sbb
cmp
fxch
clc
out
test
in
out
mov
jmp
icebp
iret
xor
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
loope
ret
jle
movsl
add
rol
fiaddl
shl
fadd
cmp
fildl
into
lret
fcmove
leave
lock
test
loope
jecxz
lock
jmp
xchg
loop
das
cmp
jmp
sbb
stc
cmc
xlat
xchg
testb
in
out
mul
mov
fsin
hlt
int
ret
loopne
adc
ret
mov
or
repnz
ret
aaa
ljmp
lock
fcomi
cld
mov
test
xchg
shrb
shl
sub
fld
jmp
into
aam
neg
stc
sbb
fmul
std
faddl
rol
sub
cmc
into
roll
repnz
imul
testl
iret
in
loopne
shl
cli
lock
idivb
xlat
or
loopne
fcmovnb
xchg
aam
test
lret
roll
fcmovb
lret
icebp
cld
repnz
loopne
aam
rol
repz
les
mov
fsubp
xchg
jmp
cmp
cmp
fidivrs
rcl
out
aaa
in
loop
ffree
cli
loop
leave
lea
in
ljmp
out
sarl
shll
test
repnz
fsubr
lock
mov
fsub
out
test
inc
cmc
sbb
test
test
jmp
xchg
jecxz
out
hlt
cs
sub
repnz
cmp
fldl
mov
mov
aad
into
fyl2xp1
cs
rcr
aam
rcl
sti
lds
mov
fucom
loop
into
loopne
fsub
ljmp
cmp
in
xor
lret
repz
adc
mov
mov
shl
enter
enter
repz
fdivrs
jmp
test
ljmp
xor
idivb
lret
cmp
cmp
rol
test
loope
xchg
out
shr
jmp
in
call
xlat
aam
rol
ret
shl
enter
xchg
mov
sbb
ror
cld
iret
stc
or
iret
sub
loope
in
call
rcr
xchg
sbb
fsubrs
enter
iret
loope
out
fsin
aad
mov
jecxz
jecxz
xor
sti
cmp
iret
xor
int
not
loope
movl
xor
rcr
xor
aad
icebp
out
sbb
fxtract
sbb
clc
fsubr
test
rol
repz
idivb
int3
cmp
fiadds
in
fcmovnu
int
int3
loope
mov
xchg
shl
lret
in
in
ljmp
loopne
test
cli
fisttpl
lret
mov
hlt
jmp
fcmovbe
out
cmp
xor
cmc
repz
les
mov
fcmove
roll
xor
aaa
cld
cmc
cmp
cmp
int
iret
cmp
stc
fimull
mov
mov
loope
iret
iret
fcom
int
icebp
dec
repnz
fdivr
test
hlt
or
cld
in
xchg
test
xor
into
in
ds
in
cmp
loopne
int
out
rolb
mov
mov
jecxz
aam
in
cmp
out
out
cmp
filds
test
fucom
addl
loopne
clc
out
cmp
cmp
xlat
clc
hlt
stc
idiv
clc
out
int3
mov
in
call
xor
int3
lret
cli
into
aam
xlat
addb
fmuls
loop
in
out
jecxz
xlat
cli
cmp
aad
int
stc
rcr
stc
cli
and
incl
fucom
mov
aaa
in
lock
fidivs
in
fcmovnb
fincstp
std
fdivrp
fcmovnu
lret
shr
mov
in
call
icebp
enter
cmc
cmp
repnz
repz
neg
out
sub
xchg
out
stc
jmp
clc
out
xor
cmp
aas
filds
in
clc
mov
out
in
repnz
into
in
into
xor
fucomp
lret
in
test
sti
cli
cmp
cld
xchg
iret
mov
in
int
aam
cmp
xlat
out
out
cmp
fdivr
roll
loope
sub
into
xchg
hlt
hlt
fcom
xor
cmp
loopne
repnz
cmpl
iret
mov
jmp
jmp
leave
ret
int
int
mov
mov
jle
movsl
add
mov
loope
xchg
clc
mov
jecxz
mov
out
xor
aad
fcmovb
cmc
cmc
add
and
cmp
loop
cmc
lds
icebp
in
ror
ljmp
cmp
loope
adc
mov
into
into
test
jecxz
aam
xlat
test
cmp
call
ffreep
fcom
fcmovnu
xor
rol
fucom
out
repz
in
idiv
out
test
fcomi
in
aam
fucomip
std
cli
lret
lret
fmull
call
hlt
fdivl
shr
ret
in
xchg
in
loop
out
iret
cld
mov
enter
sar
aad
flds
xchg
call
xchg
call
clc
loop
repz
ds
rcl
iret
int3
fcmovnb
repnz
fldlg2
test
orl
cmp
sbb
mul
loope
lret
test
out
fmulp
in
rclb
call
lret
rcl
cmp
fsubr
roll
mov
clc
xor
aaa
hlt
aam
aam
cmp
hlt
sarb
cmp
loope
fmulp
incb
shl
xor
cmp
cmp
fcomip
sar
hlt
fcmovne
icebp
loop
sbb
mov
ljmp
xchg
loopne
lock
neg
cld
idivl
into
repnz
fnstsw
testb
stc
mov
jecxz
mov
int3
shr
out
leave
xlat
fdivr
hlt
xor
sar
call
xchg
in
icebp
lock
aam
out
fnstenv
xlat
xor
in
cmp
test
mov
fcomp
test
icebp
jmp
ret
lock
std
ror
sbb
sbb
mov
call
mov
out
iret
out
int3
out
out
vpsllw
shr
cld
cmp
cmp
cli
fimull
lret
repz
rcl
in
jmp
ds
jmp
xlat
std
jecxz
jmp
test
fucompp
cli
std
rcll
ret
cmp
fsubp
rcl
fucomi
aas
cmc
fsubrp
cmp
fld1
rcr
nop
mov
icebp
sub
xor
lock
clc
ror
ret
std
sarb
testb
call
icebp
into
shll
fcmove
out
lds
leave
fcmovbe
jecxz
cli
out
fdivrs
leave
repz
aam
rolb
rcll
xor
xor
fmul
aas
int
icebp
out
rol
sti
cmp
into
stc
std
leave
out
loope
ljmp
neg
aaa
lret
cmp
fcomip
test
out
mov
stc
enter
dec
ret
out
cmp
aad
ss
hlt
fdivrl
fcomip
mov
int
leave
and
xor
sar
rcr
fdivrl
aas
fcmovb
sub
rcll
xor
repz
int
out
loop
loope
sar
loopne
cli
out
int3
mov
icebp
repnz
repnz
stc
int
lret
sarl
lret
rcr
aas
aaa
adc
adc
in
sub
std
ror
cli
loop
ss
cmp
lock
iret
addl
mov
cmc
cld
xlat
in
into
orb
out
lret
int
leave
rolb
roll
out
in
iret
lret
test
out
xor
shl
cmp
fcmovne
in
idiv
aas
cmp
ret
lret
fcomip
out
xchg
cmc
xor
idivl
test
fdivrp
shl
xchg
xchg
iret
and
lock
das
in
into
lret
std
cmp
aad
cmp
aam
rcr
stc
xchg
jmp
movb
lret
int
cmc
adc
cli
aad
not
cmc
call
leave
cld
out
int
mov
mov
lock
ss
icebp
aam
ss
xlat
fdivp
fucomip
ror
jmp
out
test
out
jecxz
mov
out
repz
int
loopne
cmp
mov
jmp
leave
lret
int
xor
ljmp
sti
int
std
iret
cli
iret
icebp
fimull
fadds
lea
fdivr
cli
hlt
enter
ror
aad
ret
in
enter
incb
cmp
sub
cli
aam
loopne
repz
fdiv
fcmovbe
cmp
cld
mov
xor
jmp
aam
mov
in
push
adc
add
ffree
out
cmp
in
ljmp
cmp
fidivl
cmp
sarl
out
test
fucomi
lret
enter
in
lret
into
rcr
jmp
rcl
fprem1
out
out
loopne
test
xchg
ret
cs
enter
shl
out
les
jecxz
adc
fdivr
into
dec
mov
cmp
int3
into
ss
cli
shlb
ss
in
loope
fsubp
cld
shl
in
and
jmp
xor
shlb
cld
iret
into
cmp
cmp
sarl
fxch
sub
lret
into
ror
cmp
cmp
loope
cmp
iret
mov
fld
cli
add
xchg
out
cli
cli
iret
fdivs
repnz
out
and
mul
test
sar
mov
fisttpl
in
xor
bnd
fcmovb
cmp
imul
aad
jmp
ret
into
ret
ret
lret
in
in
sbb
roll
hlt
leave
hlt
iret
xor
repnz
aaa
xor
cmp
into
sarb
stc
mov
aad
int3
into
xchg
xchg
shr
xor
fdiv
xor
aaa
aam
repnz
out
repz
lock
xchg
in
mov
clc
iret
call
cs
aad
xlat
enter
sar
idiv
xor
int3
leave
loop
xchg
out
mov
ror
int3
ret
shlb
shl
cmp
in
mul
in
enter
fadds
repnz
xchg
int
shr
out
in
idiv
stc
jmp
loop
neg
cld
lds
mov
popl
repz
in
aaa
sub
call
into
incl
cmc
out
jmp
std
in
sub
repnz
stc
ss
cmc
ljmp
div
rol
sti
leave
fstp
mov
out
xchg
jecxz
in
jmp
ret
stc
in
iret
fidivrs
ffreep
rcr
filds
ljmp
lret
icebp
ljmp
aaa
in
cmp
cmp
stc
std
out
aad
call
int3
mov
xor
xor
fcmovbe
repz
add
test
lock
shl
jmp
test
call
sti
icebp
aad
into
cmp
out
ret
in
shl
ds
lret
mov
call
loop
fdiv
ss
shr
idivb
jmp
test
out
repnz
fsubrp
repz
and
leave
cld
test
lock
shl
divb
out
repz
in
ljmp
mov
sti
in
fprem
fmulp
test
xor
bnd
lock
repz
shl
aas
std
fcomp
fiaddl
std
loop
icebp
xchg
in
into
in
repz
into
cli
fidivrs
fisttps
out
xchg
shl
ror
cmp
hlt
sar
test
fmul
test
jmp
fdivs
int3
ljmp
out
fisttps
xchg
clc
xchg
ror
in
lret
hlt
loop
out
jmp
hlt
out
repz
aaa
loope
cld
stc
add
sti
clc
out
adc
imul
xor
jecxz
cmp
imul
sarl
in
fistpll
shl
repnz
aad
ret
cld
fldlg2
xchg
stc
lock
mov
enter
clc
jmp
in
fcom
ljmp
mov
adcb
int3
repz
fdivrs
fcmovnbe
iret
repnz
mov
aam
xchg
add
fildll
shrl
enter
ror
iret
cmp
neg
loopne
mov
incb
stc
xor
iret
out
div
aad
xlat
aad
vpsrlq
or
or
loopne
out
in
in
ror
out
out
sar
push
hlt
cld
rcr
mov
in
xlat
cld
sub
nop
xor
iret
cmp
cs
aad
cmp
mul
into
out
ret
in
test
ljmp
out
xor
lock
lret
sti
les
mov
jmp
xchg
mov
aad
mul
ror
int
lock
ss
aam
fabs
in
fucomip
out
cld
in
loopne
lret
xchg
ret
lret
ljmp
in
clc
test
fdivr
leave
fsubp
in
enter
out
lret
lret
cmp
leave
ret
out
fcomp
std
repnz
fisttps
std
xchg
lea
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
mov
jle
add
iret
ljmp
lret
xlat
lret
xbegin
hlt
ds
ret
fdivr
lret
jmp
bnd
out
cmp
hlt
out
cmp
cli
loopne
std
test
movb
in
lret
stc
loop
idiv
cmc
fdivrl
sbb
loopne
add
out
xchg
decl
iret
sti
ljmp
in
jmp
cmc
aas
jecxz
sar
cmp
xlat
clc
out
mov
iret
out
in
rcl
aam
ss
sti
clc
loope
cmp
aam
in
into
enter
mov
ret
out
in
lret
cmp
shr
fdivp
loop
cmp
fmuls
loopne
xchg
test
jmp
into
icebp
cmp
xchg
shl
mov
fucomp
jecxz
ss
jecxz
jmp
div
shl
cmc
fchs
rolb
ljmp
nop
xchg
enter
out
cmp
xlat
out
cmp
push
sub
fcmovnb
in
ljmp
addl
cli
aam
leave
mul
iret
out
out
loope
std
and
mov
cld
jmp
rcr
mov
ljmp
call
cmp
in
xchg
in
mov
clc
mov
out
decb
int3
xor
in
cli
cmp
cld
aad
cmp
cli
mov
in
in
mov
loopne
loop
test
cli
cmpl
and
icebp
out
shl
loopne
shr
cld
shr
aaa
cmc
ffreep
clc
sti
ffreep
cmp
xlat
mov
mov
lds
out
repnz
shl
stc
repnz
fucomi
test
test
fucomip
into
fmull
xor
xlat
aaa
iret
out
fcomip
shl
xlat
out
flds
out
int3
ljmp
aam
lret
ss
lock
loopne
mul
test
int
div
into
cmp
ret
out
jmp
int
loopne
xchg
std
icebp
ret
ret
decl
mov
into
out
aad
hlt
cmp
sti
aam
ret
in
xlat
or
loop
shr
lret
enter
int
rcl
repnz
in
cli
xor
xlat
repz
nop
jmp
in
aaa
cmp
cmc
icebp
jmp
aas
loopne
repnz
lds
int3
faddl
mov
sarl
shrl
xor
int
out
fsubrp
cld
fcomp
roll
mov
jmp
int
shl
call
out
fstp
xor
cmp
cmp
aad
mov
loop
decb
xchg
hlt
rorl
fsubr
enter
rcr
cld
cmp
cmc
aam
in
int
loop
lock
mov
out
ret
icebp
fdivs
fmul
aad
sarl
in
lock
leave
filds
enter
xchg
shl
cmp
xor
das
fmulp
xor
cmp
bnd
rcr
out
jmp
mov
into
repz
xor
rol
jmp
fcmove
mul
test
rcl
sbb
incb
xchg
call
xor
addb
ret
sti
call
test
out
ljmp
test
cli
jmp
loop
cmp
sbb
enter
xchg
repz
into
jecxz
vpsrlq
xor
cmp
cmp
lret
test
faddl
orl
call
adc
call
cli
sti
test
int
ljmp
call
xlat
cmc
out
adc
jmp
leave
mov
hlt
rcl
xor
in
out
lds
loopne
ljmp
xor
ljmp
xchg
int3
cmp
iret
cmp
xlat
fadd
fucom
ret
mov
mov
out
nop
shr
das
jmp
cmp
cmp
in
cli
shl
flds
sti
rolb
in
cmp
into
ds
fdivr
clc
repnz
cmp
fadd
leave
cli
loopne
lret
xchg
mov
out
jecxz
ret
int
xor
jmp
sar
inc
ffree
clc
ror
xchg
in
in
out
sub
out
inc
clc
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
out
aaa
cmp
icebp
cld
mov
cmp
call
rcll
in
jmp
and
fdiv
idiv
mov
fmuls
fsubrp
rcl
rcr
cmp
cld
aad
cld
repnz
decb
fildl
xchg
into
repz
ret
lret
icebp
into
hlt
sarb
cld
aad
ret
lret
jmp
xor
cmp
xor
out
repz
ffree
in
loope
out
incb
xor
hlt
out
lret
lock
loope
test
in
xchg
inc
fxch
in
test
mov
ror
out
in
cli
cmp
aaa
call
fnstsw
out
jecxz
repz
fmull
shl
xor
sti
enter
not
iret
sti
cld
shl
mov
loope
out
out
fst
loopne
icebp
xor
cmp
sti
icebp
repnz
ds
loope
std
cld
ds
mov
adcl
in
jecxz
icebp
out
fdiv
repnz
cmp
loope
cli
mov
dec
into
loope
loopne
lret
jecxz
ror
cmp
xlat
ret
icebp
adc
xchg
mov
lret
int
xor
jecxz
out
les
ss
aas
xlat
hlt
fadd
xchg
imul
out
mov
xchg
jmp
call
shlb
fdivr
aaa
loopne
loope
rcr
std
xlat
test
ljmp
xor
ds
fcom
ret
aaa
std
clc
lock
mov
das
fmul
ret
cmp
lret
lock
cmp
test
repz
jmp
out
icebp
mov
sub
ss
shr
sub
out
addl
enter
shrl
fcomp
int
enter
xor
in
int3
sti
in
xlat
aad
rcr
mov
lret
mov
stc
cli
cmp
into
fdiv
aam
cmp
xlat
les
out
ljmp
mov
xchg
mov
enter
ss
cmp
loope
lock
loopne
mov
in
sarb
fbstp
fdivr
rcl
out
repz
cld
xchg
xor
fcom
fcmovb
cmp
not
lret
cld
rcl
loopne
add
in
mov
in
iret
in
lret
cmp
xlat
jmp
cli
xlat
loope
cmp
fdiv
aad
loope
adcl
enter
fmul
xlat
aaa
int
cmc
cli
fdivp
repz
ret
in
cld
cmp
icebp
jecxz
shl
add
loop
xor
aad
repnz
aam
hlt
stc
aad
loope
into
jmp
shl
rcr
std
xor
neg
fidivrl
inc
add
sbb
loopne
mov
rcll
sub
aaa
xor
cmp
icebp
shl
jecxz
in
jmp
enter
in
mov
xor
shr
fcmovnbe
cld
roll
cmp
repnz
leave
out
adcl
aad
clc
cmc
icebp
xor
sti
int3
loop
repnz
fcom
clc
enter
fildl
in
out
ret
jmp
ss
rcr
lret
ds
icebp
lock
mov
ljmp
pushl
xor
idivb
xlat
clc
ss
xlat
cmc
icebp
loopne
iret
call
mov
in
rcr
out
lock
leave
icebp
stc
ror
aam
repnz
call
out
leave
fdivp
and
in
mov
in
out
in
in
in
out
fldl
loop
std
cmc
in
jecxz
lret
std
sti
repz
lret
ljmp
fiaddl
stc
hlt
loope
loop
loop
xchg
mov
loop
hlt
dec
xor
out
cli
fcmovne
clc
int3
fdivrp
clc
test
xchg
jmp
fstl
cmc
cmp
int
adc
imul
aad
aam
enter
stc
out
std
orl
sub
out
idiv
sti
lock
out
cmp
std
cmp
loop
int3
test
jmp
xchg
ror
in
cli
out
stc
lret
rolb
vshufps
out
xchg
rcl
rol
lret
int3
std
iret
sbb
add
xlat
cmp
add
add
add
rol
rcl
rcl
sar
and
adc
pop
scas
or
jle
movsl
add
lock
roll
not
out
loop
jecxz
lds
in
xor
cmp
faddl
leave
test
faddp
ljmp
rol
out
ror
in
icebp
fidivs
in
jecxz
fdivrp
in
rcr
jmp
int3
mov
incb
rol
xor
out
lret
loopne
neg
adc
aam
rcr
div
in
in
out
ljmp
shll
ror
out
icebp
not
int3
loop
hlt
cmc
stc
jmp
xchg
fcmovnbe
xchg
in
repz
xor
cld
in
testb
rol
cld
loop
ret
jmp
enter
in
fmull
int3
aad
hlt
cmc
rcl
xlat
cmp
faddl
fsub
clc
ret
enter
xor
std
repz
stc
sar
icebp
sarb
out
lret
test
jmp
out
lds
out
aaa
fcomi
cld
fxch
loope
icebp
shl
loop
aas
fldl2t
ret
addl
lock
icebp
aam
stc
out
aad
loopne
loope
jmp
sar
lock
out
out
loop
loop
out
shr
out
jmp
call
sbb
lock
fmul
fxch
int
out
sbb
repz
das
ror
leave
cmc
sar
out
cld
cmpl
out
into
int
clc
not
into
iret
in
into
sarb
out
cmp
out
hlt
loopne
mov
lea
out
aad
clc
cmp
in
lret
icebp
repnz
shl
fcmovne
mov
test
fldl2e
mov
sbb
divl
stc
fmul
ljmp
cmpl
mov
roll
sti
into
jmp
ret
into
shl
aam
call
aad
rol
jmp
mov
call
out
shl
in
rcl
lret
cmc
cld
cmp
rcr
repnz
fldl
out
lock
cmp
lock
loopne
loopne
and
out
cmp
jecxz
lret
call
jmp
sar
call
aad
loope
aas
lea
xchg
out
ror
repnz
ljmp
sbb
add
hlt
mov
stc
loop
xchg
xchg
hlt
aad
out
std
cmp
int3
cmpb
hlt
orl
das
jecxz
icebp
ljmp
iret
cmp
xchg
mov
clc
mov
rclb
icebp
out
fcmovnu
enter
shl
int
shl
ret
cld
fxch
test
mov
out
repz
cs
cld
fstpt
loop
loope
fnstsw
loopne
jmp
orb
xchg
nop
das
iret
clc
in
fcomi
repz
in
leave
in
mov
lock
in
xchg
rcl
aas
xor
cmp
shl
in
mov
test
xchg
clc
test
leave
std
in
repnz
xchg
pushl
xor
cmp
stc
aaa
cmp
cli
int
fadd
loop
aad
mov
and
jmp
mov
shl
fsubr
repz
cmc
cmp
cmp
ret
stc
cmpb
call
call
xchg
mov
fadd
sar
cmp
xor
aas
loopne
in
aam
std
incb
in
mov
out
mov
int3
hlt
call
add
sbb
icebp
rcl
mov
in
lret
filds
xlat
xor
out
bnd
test
mov
in
lock
int3
lret
aam
test
out
aaa
int
test
test
fimull
nop
call
out
aam
in
aam
lret
sti
repz
out
cli
fsin
ret
leave
clc
mov
cld
iret
jmp
loope
leave
sub
aaa
xor
lock
fcomp
stc
in
aad
fstp
cli
loope
mov
repz
out
in
xor
xlat
std
into
aaa
cmp
xlat
fst
loop
icebp
div
ret
sbb
xchg
mov
mov
sarb
xor
in
cli
aad
stc
aad
loope
cmp
fcmovb
out
fcoml
shl
xor
lret
ds
xor
aam
xchg
leave
call
mov
int
in
out
stc
fcmove
fcmove
cmc
cli
fdiv
rcr
cld
rorb
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
jp
cmp
fistpll
movsl
add
cmc
fdivrp
mov
fmull
hlt
xor
ret
cmp
cli
lock
fdivrl
cmp
fcmove
mov
out
shl
int
out
out
call
xlat
sti
ret
cmc
enter
sti
stc
lea
test
icebp
enter
fcomp
loope
std
loope
loopne
out
leave
fcmovne
std
int
mov
adcl
enter
cmp
int
in
clc
in
fiadds
lret
add
loopne
loopne
iret
into
xlat
shl
lret
enter
xor
hlt
faddl
shl
repz
in
in
lock
ljmp
jmp
fdivrp
fcomp
out
addb
lock
xor
out
int
hlt
cli
clc
ds
ljmp
out
cld
enter
loope
jecxz
repnz
fadd
int
xor
out
leave
ljmp
repz
int
in
mov
icebp
cmp
iret
cmp
ljmp
sar
xchg
out
jecxz
hlt
in
jecxz
idivl
lock
fidivrs
cmp
rcr
cmp
in
in
sub
iret
popl
cmc
cmp
cmp
loopne
loope
aam
frndint
orb
lret
xchg
cmc
enter
into
aad
out
int
repnz
clc
not
or
xchg
orb
out
cli
fadd
ffree
jmp
ds
std
out
cmc
mov
cmp
mov
xchg
std
cs
test
ror
call
fdiv
in
in
test
out
sti
mov
cs
aaa
cmp
cli
cmp
fcmovu
int
cmp
fldl
aam
sbb
leave
mov
out
ret
call
hlt
aas
repnz
loopne
mov
nop
in
shr
test
in
in
shl
cmp
xor
lret
shl
loopne
test
out
fimuls
in
mov
ljmp
shl
clc
stc
clc
loope
cmp
leave
shl
mov
fst
rolb
jecxz
lock
hlt
lret
ss
cmp
out
std
sbb
mov
test
xchg
sub
divb
ljmp
flds
jecxz
div
mov
sar
into
aam
out
ss
int3
fiaddl
in
aad
ffree
fcoml
lret
jmp
ret
loope
cli
in
fld
aam
clc
std
std
fdivr
fcomip
mov
std
out
cmc
std
in
leave
out
mov
ss
clc
xor
fstp
iret
sar
in
incb
loop
mov
fninit
repz
in
lock
iret
ss
cmp
out
fdiv
lret
loope
clc
fcmovbe
mov
ret
sti
leave
loop
call
in
mov
out
aam
cmp
shr
cmp
fucomp
cmp
xchg
cld
test
out
inc
into
cmp
aaa
icebp
int
fnstenv
loop
hlt
test
std
loopne,pt
cmp
nop
and
shl
xchg
imul
xor
in
cmp
fcmovne
cmp
int3
hlt
jmp
int3
in
in
jmp
in
std
xchg
shlb
lret
shl
lock
loopne
xchg
loope
loop
mov
in
icebp
ljmp
xor
sar
int
aas
xor
ret
shl
test
fcmovb
filds
out
loop
out
mov
sub
int3
sarb
iret
cmc
faddp
flds
mul
testl
filds
in
rcl
cmp
ss
roll
out
fadd
mov
in
out
jmp
leave
sti
fcomi
aad
out
dec
not
test
xchg
fucomp
xchg
out
cmc
fpatan
xlat
ror
shr
sar
ret
roll
jmp
int3
xchg
rclb
xlat
fld
leave
in
fdivrs
clc
cld
addb
xchg
ljmp
ljmp
idiv
loopne
shl
cmc
aas
out
mul
hlt
testl
jmp
fucomip
aam
out
fmulp
cld
jmp
lret
jecxz
aaa
out
hlt
jecxz
enter
cli
cmp
rcl
orl
rcr
test
sbb
mov
in
test
dec
in
mov
jmp
int3
enter
lret
int
stos
test
xchg
shll
in
jle
add
out
icebp
roll
in
icebp
rol
cmp
aam
hlt
in
cmc
jmp
out
cmc
xchg
sub
ror
cmp
rcl
sti
xor
cld
stc
cli
ffreep
aad
xor
clc
loop
leave
fistl
ret
aad
neg
cli
repnz
test
hlt
call
ffreep
clc
ret
out
mov
nop
lock
repz
cld
repz
aaa
lret
sti
test
out
mov
mul
stc
int3
loopne
xchg
std
xchg
cmc
cmp
cmp
xor
lret
ljmp
mov
sti
in
xor
lret
jmp
fcmovnu
ljmp
lret
xchg
out
sarl
xor
cmp
into
cli
int3
int
int
fcmovu
repnz
cmp
out
addb
ror
aad
cmp
fidivs
shl
neg
out
cmc
mov
ret
stc
out
rorl
into
loop
sti
int3
cmp
ds
sarb
cmp
jecxz
jmp
cld
loop
shl
in
vcomiss
not
std
xor
xlat
loopne
sti
cli
incl
int3
in
jecxz
icebp
in
rcl
lock
int
cmpb
xor
jmp
iret
xchg
ret
xlat
hlt
cld
sar
xlat
stc
lret
clc
ret
in
loope
cmp
cli
in
fmuls
mov
sub
xor
aaa
divl
into
lret
aam
stc
loop
std
sti
rcr
call
nop
jmp
aam
stc
lock
sti
out
cmp
aam
fdivrs
testb
sti
hlt
mov
in
loope
rolb
aam
jmp
in
neg
in
sti
shl
repz
rorb
mov
in
aaa
xor
cmp
aam
shll
cmp
ds
roll
loopne
lock
cld
xchg
into
cs
xlat
aad
sti
fdivrl
loop
shl
ret
ret
test
mov
sbb
rclb
stc
aam
clc
lret
lret
iret
hlt
not
ret
out
leave
in
loop
out
out
mov
mov
sarb
divb
lds
xor
testb
testb
xchg
cmp
ficoms
fcmovbe
enter
in
sar
jecxz
shl
div
call
cld
mov
ret
out
lret
sub
into
shl
enter
cld
sub
cmp
rol
clc
xlat
ljmp
rorl
ss
lret
cmp
out
clc
into
fcmovu
fldl
std
enter
std
mov
clc
jmp
fcmovnbe
call
fadd
fcomip
incl
in
icebp
test
hlt
rcl
test
xor
xor
cmp
sarl
addb
clc
fsin
xchg
xchg
fucomp
repnz
sub
shlb
aam
shl
loopne
mov
aad
mov
in
cld
hlt
rol
lock
xor
cmc
out
adc
sub
out
std
or
int3
int3
mov
xchg
out
cmc
sti
shr
cmp
std
neg
fucomip
test
out
xchg
fsubr
xchg
in
shr
lret
ror
out
test
aad
cmp
fxam
or
iret
in
jmp
mov
int
out
xlat
cmp
cmp
in
shl
cld
sar
cmc
loopne
xchg
lret
dec
std
nop
addl
cmp
stc
fsubrp
loop
cmc
xchg
xlat
sarl
cld
in
les
repnz
das
xor
enter
lret
in
sarl
loopne
fucom
fcom
test
and
iret
out
mov
rcl
int
int
cmc
stc
xlat
std
rcr
stc
xchg
mov
fxch
out
sar
into
or
cmc
repz
sti
shr
cmp
ds
mov
mov
out
loop
fsubr
enter
mov
xor
hlt
sarl
cmp
fildl
xor
enter
out
jecxz
xchg
out
out
in
sub
cmp
xor
cmc
ljmp
imul
fstp
fmull
rcr
in
jmp
out
icebp
cmp
cmp
loope
adc
mov
fiaddl
fcmove
test
roll
fcom
shlb
int
cmp
ret
cmc
aam
aam
xchg
int3
in
xchg
iret
shl
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
ljmp
aad
fidivrl
adc
rcl
rolb
out
stc
roll
sar
enter
shlb
xor
in
xor
test
test
repnz
jmp
cmp
cmp
aad
out
jmp
out
in
sti
fstp
shl
xchg
jecxz
into
xor
xor
int3
cld
out
jmp
divl
test
ret
ret
out
stc
mov
in
sub
aad
in
xor
aad
xor
aas
xlat
out
cmp
cmpl
cmp
mov
lea
mov
aad
int
lret
leave
sti
stc
hlt
cmp
sub
cmp
aam
cld
mov
fsubrp
xchg
ljmp
out
int3
fucomip
repnz
mov
decb
loop
or
mov
in
divl
fcmove
int
and
aam
loop
cmp
int
std
in
cs
lock
iret
lret
hlt
fnstsw
out
aas
aam
out
rcl
out
stc
out
mov
int
das
shl
lock
sti
aam
clc
in
in
lret
test
fadds
dec
sub
ljmp
ror
xlat
not
lds
cmp
test
cmp
xchg
orb
ss
cli
ror
ljmp
cmp
ret
jmp
stc
ror
loop
xchg
shl
jecxz
rcl
out
sar
repnz
xlat
sar
out
shl
loope
mov
int
xor
rcr
repnz
rcl
repz
loope
cmc
xlat
mov
loop
push
mov
test
repnz
xchg
ljmp
fnsave
rcr
fabs
lock
decb
incb
repz
repz
cmp
cmp
out
out
fnstsw
mov
and
loop
xchg
loop
fsubr
shl
repnz
ss
cmc
or
stc
fsubr
sar
orl
sar
fiadds
out
stc
fdivrl
cmp
aad
and
xchg
test
loop
loopne
add
sub
xor
neg
cmc
sti
xbegin
xchg
int
test
in
lret
divb
rol
out
fidivrl
cmp
cmp
rorl
jecxz
mov
in
cmc
imul
ffree
fdivr
loopne
div
cli
loop
fcomi
sbb
mov
leave
in
mov
jmp
fmul
xor
lret
jmp
fmulp
cld
lock
ret
rol
call
lea
icebp
icebp
fdiv
mov
in
sub
cli
ss
rol
in
sti
aam
enter
rcll
aad
rol
cmc
shr
notrack
out
fst
xchg
jecxz
stc
cld
fstl
jecxz
adc
test
enter
shr
fcmovb
aam
cmp
mov
int3
in
out
xchg
xchg
mov
lret
vmaskmovdqu
cmp
lock
div
sarl
loope
jmp
cld
fucomp
rolb
aad
ljmp
test
repz
ret
clc
enter
fsubr
xchg
loopne
rorb
jmp
leave
lock
sti
into
jmp
neg
add
out
leave
sti
std
xchg
cmp
in
out
xlat
lret
cmp
or
lock
in
cld
mov
clc
in
hlt
loopne
cmc
clc
icebp
xor
jmp
jmp
sti
fucomp
rcr
incb
loopne
call
cmc
sub
xor
cmp
cmc
jmp
int3
out
in
loop
cld
addb
icebp
rcl
aad
leave
sbb
std
test
aad
loope
mov
repnz
out
ret
cmp
xor
jmp
aam
cmp
jecxz
add
sti
leave
out
dec
xchg
test
shl
inc
aad
incb
testl
into
in
out
cmp
xor
cmp
fdivrs
loopne
loopne
mov
std
fmulp
loop
out
or
cmp
aad
ss
clc
clc
jmp
test
loope
fndisi(8087
sarl
test
popl
rcl
fsubrp
rcl
cmp
cmp
clc
shr
fdivr
cli
sti
out
roll
in
aad
int
icebp
test
inc
or
movb
mov
jmp
mov
fst
fxch
jg
lods
loop
imul
jle
xlat
aaa
fdivrl
ds
xor
fdivrp
loopne
loope
ljmp
shl
icebp
vshufps
sarl
cmpb
xchg
cli
fcomp
loopne
filds
orl
leave
aad
icebp
shlb
std
out
sar
out
mov
movb
xchg
sti
aaa
iret
lock
xor
fsub
sbb
aam
in
cmc
leave
leave
sti
xchg
cli
and
in
in
lock
cmp
call
fiadds
fucom
test
test
sbb
aaa
jecxz
out
cmp
enter
repnz
out
fcmovu
loope
mov
cmp
xchg
xchg
loop
xor
enter
repz
out
out
jmp
adc
decl
cld
iret
adcl
int
ljmp
stc
xchg
out
mov
jmp
mov
xchg
adc
lock
out
aad
iret
cld
lret
ds
les
fildl
stc
into
mov
leave
lock
ror
imul
hlt
sbb
aas
jecxz
out
cmp
fmul
lret
in
ljmp
cs
ljmp
aas
cmpl
clc
rcl
sub
in
test
test
iret
ror
xor
cmp
ds
sti
rcr
sbb
in
cmc
stc
loope
sti
ret
ror
lock
call
cmc
aam
fcomi
hlt
aas
std
aaa
xchg
sti
lret
and
lret
lock
hlt
ret
call
cli
clc
call
std
jecxz
sti
std
ret
aad
call
in
in
shrb
rol
jmp
cmc
lret
xor
lock
in
test
test
lret
loope
in
xor
cmp
fnstcw
cli
jmp
fcomip
fadd
call
out
test
lret
jecxz
mov
xor
not
repz
clc
jmp
repnz
std
fprem
out
out
ret
sti
ret
lret
clc
shr
std
xchg
addl
in
aaa
in
fcom
loopne
cmc
sarb
shl
call
call
xchg
xor
repnz
xor
cmp
ret
xlat
dec
ffreep
ljmp
jecxz
std
lret
roll
out
cmp
push
icebp
ror
jecxz
cmc
cmp
out
into
addl
xchg
int
cmp
aad
stc
cmp
sub
aam
fdiv
loopne
in
add
lret
xchg
shl
repz
fdivs
enter
fdivr
cmp
in
clc
ffree
loope
fdivr
fdivrp
fimull
out
call
cmp
cmp
out
xlat
aas
sarl
cmc
fdivrp
jmp
in
sub
int
loope
xor
sub
test
aas
cli
into
cmp
out
xchg
repz
in
jmp
repz
in
shl
hlt
cmp
jmp
add
stc
in
ror
in
test
iret
std
lret
lret
mov
jecxz
fucom
repnz
iret
ds
test
mov
in
xlat
in
cld
fstp
faddl
lret
ss
dec
shl
loopne
enter
stc
call
out
repnz
ss
cmp
leave
aam
aaa
stc
ds
cmp
stc
call
xchg
jmp
nop
xchg
xchg
and
out
in
cmp
into
call
iret
stc
aam
div
mov
mov
lret
loope
jmp
xor
rolb
orl
stc
enter
mov
mov
in
aam
xor
repz
shl
stc
shl
fstp
out
addl
cmp
int
test
sbb
bnd
lea
shl
xchg
xor
ljmp
lock
hlt
in
loopne
jecxz
jmp
test
iret
fxch
aam
sti
adc
aam
aam
cmc
loope
fcmove
fadds
mov
mov
rcl
out
in
aad
cmp
sbb
jmp
jmp
addb
xor
cmp
fcom
cld
enter
stc
xlat
clc
cli
cmc
cmc
mov
and
out
aad
repz
shr
sar
loopne
cld
fadd
cmc
stc
fst
out
cli
sti
mov
loopne
in
adc
xor
cmp
cmc
clc
iret
in
cld
cmp
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
int
jle
movsl
add
cli
loope
sub
mov
cli
adc
sub
xor
cmp
lock
fdivrp
faddl
fmul
out
neg
ljmp
hlt
xor
int
xor
addl
cli
cmp
clc
cld
jmp
xlat
xor
xor
aad
fdiv
fcmovnu
rcl
rcr
iret
loope
aam
fcmovnu
int3
fucomp
jecxz
mov
ror
out
out
in
cld
sti
stc
aas
cmpl
ret
xchg
jecxz
cli
orb
xor
jmp
div
out
jmp
xchg
out
stc
ret
jecxz
loopne
in
out
in
hlt
ret
clc
repz
iret
int
jmp
sti
mov
cli
std
add
xchg
int3
sub
loop
jmp
int3
leave
sarb
into
stc
rol
orb
call
aad
out
lret
cli
icebp
das
xlat
in
cmp
shl
jecxz
cld
in
fsubr
lret
leave
rolb
ret
cmp
aaa
loope
aas
xlat
clc
fstp
aad
mov
out
sti
iret
jmp
jmp
out
aam
cmc
fdivrs
lret
lock
out
loope
sti
loop
out
cli
mul
clc
out
loop
fmuls
aam
repz
cmc
fxch
repnz
out
icebp
ffree
iret
add
sbb
leave
and
in
fcmovu
mov
mov
out
ljmp
fcmove
neg
into
xlat
sti
in
test
out
movb
rorl
into
sarl
cmp
filds
icebp
faddp
neg
addl
iret
aad
clc
out
in
lret
out
stc
stc
xlat
sti
idivl
cmp
call
cld
ret
xchg
rcl
lock
out
stc
lret
call
std
loopne
in
icebp
cld
icebp
and
in
lret
jmp
in
call
loopne
call
aam
sti
aas
cmp
clc
test
test
call
xchg
jecxz
icebp
xor
out
xlat
std
int
stc
std
aaa
loop
xchg
fdivrp
sbb
icebp
test
xchg
lret
fdiv
loope
fcomi
out
fstpt
sarb
fst
test
into
rol
jmp
std
mov
fsubp
mov
rol
lock
enter
in
shl
loop
icebp
jecxz
aad
rorb
int
leave
enter
into
out
incb
fdivrs
addl
sti
mov
mov
xor
in
into
xor
idiv
lock
ret
loop
ret
fsqrt
aas
xlat
in
int3
in
nop
int3
loopne
fadd
xabort
stc
iret
call
aam
sbb
enter
fmulp
orl
shlb
cmp
cmc
clc
lret
xlat
ljmp
cmc
cli
call
icebp
out
jecxz
out
out
jmp
leave
das
in
clc
leave
into
rcl
ds
ror
mov
aad
aas
std
xlat
test
decl
in
cmc
cli
ss
cli
cmp
sar
add
shl
loop
fsubr
jmp
into
lret
iret
test
in
cli
in
std
aam
ror
clc
ret
in
aam
fucom
loopne
enter
lret
fucom
xchg
lret
out
call
hlt
imul
cmp
ret
enter
mov
std
leave
roll
out
iret
aam
aad
cmp
fcmovbe
out
rorl
mov
test
enter
ljmp
jecxz
aas
imul
jecxz
fsub
iret
enter
mov
aad
lret
sti
in
int
call
rcl
aam
ret
in
jmp
clc
mov
mov
mov
call
lret
lret
cld
cmp
cmp
aad
out
call
xlat
leave
int
leave
loopne
out
shl
xor
loop
aad
in
std
fcmovnb
fnstsw
addl
std
aam
shlb
out
icebp
cmp
int
push
hlt
shl
sar
in
in
fsubp
into
fucomi
ror
in
test
repz
in
cmp
cmp
fld
vpmovmskb
in
xchg
test
nop
rcl
loope
leave
shll
stc
cmp
mov
out
test
iret
test
aam
iret
out
in
div
rcl
fsub
fxtract
fscale
ljmp
loopne
lock
out
shr
cmp
fcmovbe
lock
cli
ret
les
inc
or
or
mov
ror
aad
fldt
sbb
je
jle
movsl
add
fimuls
mov
cmp
shl
cmc
lock
incl
repnz
std
loop
fmul
cmp
xchg
nop
incb
rcr
fisubrl
icebp
std
loopne
fld
aam
rolb
iret
mov
mov
mov
aam
repz
hlt
repnz
sar
iret
test
fucom
shr
fcomp
mov
mov
mov
ljmp
rol
repz
lret
cmc
cmp
mov
rcl
fcmove
flds
ror
xchg
repnz
aaa
repnz
shr
int3
aam
into
roll
testl
loopne
jmp
aad
shr
cmp
repnz
loope
sti
iret
cmp
mov
mov
enter
jmp
cli
std
stc
clc
testb
fninit
leave
test
cmp
xchg
shr
sub
xor
fcmovnu
fcmovnbe
clc
cmp
xor
repnz
test
repz
xchg
sar
das
hlt
aad
rcl
iret
repnz
iret
ror
cmp
hlt
aas
out
ljmp
mov
rol
xor
enter
xor
sar
jmp
sar
fcmovb
aam
ljmp
aad
in
int3
repnz
into
in
xor
fcmovu
fdivr
repnz
test
enter
fcomp
rolb
cli
in
bnd
iret
fmul
std
ds
lds
int3
mul
out
xchg
repnz
out
xor
ret
fdivr
stc
leave
fcmove
add
rol
mov
test
div
in
cld
lret
in
in
ffreep
leave
out
fptan
idivl
out
incl
loopne
std
in
out
lock
mov
out
addb
clc
cli
leave
call
lock
adc
fcmove
in
movl
enter
cmp
cmp
cld
test
call
sbb
ror
call
repz
shrb
stc
repz
iret
aad
into
and
fidivrs
cli
out
std
in
xchg
call
xlat
in
cmp
out
cmp
sti
rcr
fcmovnu
rcr
cmp
add
leave
int3
decl
xchg
mov
loop
in
cmp
cmp
sti
rcl
stc
mov
fld
lret
mov
cli
jmp
hlt
jmp
cld
in
ljmp
cmc
repnz
aam
call
lret
out
imul
loop
icebp
xor
stc
leave
ror
in
fst
stc
sti
repnz
dec
or
shr
xor
lret
fucomi
rcl
xor
out
mov
xchg
int3
xor
xor
cmp
hlt
in
cmp
stc
loopne
enter
lret
in
lock
in
cld
lock
cmp
icebp
iret
cmp
shr
roll
call
out
ss
fcomi
cmp
enter
cmp
aas
cmp
out
stc
idiv
out
fdivp
repnz
xor
into
lock
repz
loope
aas
repz
imul
out
cmp
cld
cmc
ret
iret
into
in
addb
loop
fcmove
cmp
ljmp
lock
call
loope
rorl
out
cli
divb
sarb
sbb
xchg
imul
enter
loopne
call
int
repnz
hlt
aad
repnz
cli
int
fcom
jmp
filds
xchg
out
lock
fcmovnu
rcl
xor
cmp
clc
in
loope
rcr
call
iret
in
sti
into
out
into
loop
loope
xor
jmp
into
repnz
faddp
roll
mov
fdivr
in
test
mov
xchg
in
shl
loop
cmp
aaa
aaa
loope
shl
clc
clc
iret
testb
and
nop
out
xchg
int
rcl
xor
xor
jmp
rcr
ds
aam
call
filds
xchg
xor
out
int3
fmul
xor
cmc
fisttpl
loope
loopne
in
hlt
test
in
xor
lret
lock
fdiv
out
mov
leave
loopne
in
sar
mov
jmp
sar
fsubrp
sarb
xchg
xchg
loope
in
fadd
enter
fst
mov
into
iret
int3
repnz
sti
repnz
fsubp
std
ljmp
std
fimull
jmp
aam
iret
int3
fst
outsl
fmull
pop
lock
fwait
sti
jle
movsl
add
shl
mov
aaa
ret
xor
cld
ror
lock
lock
aas
loopne
jecxz
out
xchg
loopne
mov
notb
into
test
xlat
cmp
ljmp
lret
xchg
out
repnz
fst
cmc
idiv
roll
int3
lret
mov
lret
jecxz
in
out
fucomi
cmc
out
into
std
aad
ror
loopne
sti
loop
fadds
test
xchg
repz
cmc
iret
int3
xor
in
shr
out
loop
out
fxtract
stc
in
call
out
aaa
xor
ror
rcr
fcom
sar
icebp
shl
repnz
loope
mov
test
lock
aad
enter
out
ss
rcl
cmp
cli
clc
aad
test
out
fiadds
jecxz
jmp
add
rol
loope
ljmp
fmulp
in
mov
mov
cmc
fnstenv
in
cmp
lock
sar
call
mov
leave
orb
xlat
xor
iret
mul
iret
cmp
xlat
int
fildl
cli
mov
jmp
sti
mov
loop
cmc
ret
xor
repz
rcr
aam
out
sti
in
sar
leave
test
call
stc
repnz
sarl
test
hlt
fabs
cli
lds
loope
addb
std
ror
clc
f2xm1
in
incb
mov
aad
mov
in
xorb
lock
aaa
fnstsw
inc
into
faddp
out
loop
fadd
test
leave
shl
xchg
lret
xchg
mov
in
shl
xor
cmp
fmulp
adc
test
mov
mov
sti
sar
iret
out
ljmp
leave
aad
cmp
cmp
out
in
in
call
mov
test
iret
aam
jecxz
in
vpsubusb
fadds
loopne
ret
test
jmp
fsub
lret
xchg
or
lret
not
fmul
shr
aad
ljmp
mov
repz
out
enter
rcr
fidivl
sti
cmp
shl
loopne
int3
xchg
test
xchg
leave
out
icebp
xor
iret
clc
repz
shr
repnz
mov
clc
out
mov
shll
lds
xor
shlb
xor
fsqrt
fcom
and
inc
jmp
jmp
aad
fadd
sti
fcmovnbe
jmp
fdiv
cmp
addl
mov
aam
rol
out
xor
ss
aam
cmp
xchg
stc
fisttpll
in
jmp
mov
in
cli
cli
fdivr
cmp
mov
ljmp
repz
sar
sti
rcl
lret
fdivrs
test
cmp
call
sti
in
mov
ror
out
lock
in
sti
xor
fdivr
int3
into
xchg
repnz
aas
lret
lock
call
jmp
icebp
repz
ljmp
rorl
mov
roll
ljmp
sti
repnz
cld
loopne
repnz
jecxz
and
mul
lret
leave
sbb
in
nop
xchg
xor
enter
fdivl
in
xchg
rol
stc
rol
lea
lret
xor
iret
shlb
leave
in
cmp
addb
in
add
out
loopne
xchg
imul
lock
leave
neg
sarb
hlt
dec
incl
into
in
in
in
in
icebp
aam
aaa
jmp
stc
cmp
in
rcl
cli
and
jecxz
test
fimull
out
in
lret
in
mul
fmul
int
fcmovnbe
xor
rcl
aas
sti
fsin
xchg
test
lret
std
out
xchg
div
int3
sarb
in
into
aas
lret
shr
cmc
test
xlat
loope
clc
out
ffree
in
loop
adcl
lret
into
fcmovu
lret
fadd
cmp
fsub
cmp
lock
xor
fdivs
into
leave
sti
ds
aas
fdiv
cli
adc
mov
fmul
std
in
rol
jecxz
xor
cli
clc
cmc
lock
into
fidivrs
cmp
fiaddl
mov
jmp
in
out
iret
cli
lock
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
inc
ret
jle
add
out
icebp
aaa
fcompp
ror
xlat
test
cld
out
aam
fucompp
mov
mov
repnz
ret
in
out
lret
faddp
cmp
leave
test
rcll
sub
ret
in
out
jmp
int
test
out
fmull
xlat
out
icebp
nop
lret
adcb
in
into
imul
sarb
test
xlat
hlt
fiadds
sbb
sar
repz
xor
xor
rcl
std
cmp
icebp
hlt
test
stc
sti
in
sub
test
enter
xorl
cmp
int
lret
cmp
ret
clc
stc
loop
fimull
test
shl
rcl
ljmp
fstpt
cli
test
shr
cld
sar
mov
ror
iret
in
out
ljmp
loop
idiv
fcmovbe
std
filds
idiv
and
mov
cmc
xor
jmp
aaa
aad
jmp
cmp
mov
icebp
loop
incb
xor
aam
cli
int
out
aad
cmp
clc
adc
mov
out
loope
fsubp
cld
test
fcmovne
mul
int3
xlat
lock
loopne
lock
fdivrp
ljmp
lret
icebp
test
in
shll
jmp
div
lret
repz
fiadds
leave
stc
incb
out
xchg
xchg
out
out
repz
ds
sarb
fxch
repnz
fadd
mov
fst
xchg
in
out
imul
in
xor
in
lret
xor
neg
rcr
in
xabort
into
mov
in
jecxz
call
call
fcmove
fnstsw
iret
rol
xchg
call
cli
xchg
out
std
repz
shl
iret
jmp
hlt
out
fnstcw
lret
jecxz
hlt
clc
loopne
loopne
mov
hlt
fiadds
not
fidivrl
icebp
out
idiv
fsubp
rol
rcl
mov
and
enter
xchg
fcomip
lret
sar
aaa
fistpll
icebp
loope
sti
ljmp
jmp
repnz
out
icebp
ljmp
sti
test
xor
cmc
int3
lea
fucom
xchg
ret
in
fsubr
aam
adc
out
in
xchg
loopne
cmp
ret
clc
and
call
sub
clc
stc
clc
enter
xlat
int3
out
call
fdivr
in
fisttpl
loope
xchg
mul
fcom
vpaddsb
out
std
cld
jmp
cmp
cld
aaa
iret
rcl
aas
fcmovnb
xlat
in
lret
out
in
jmp
clc
aad
ss
cmp
icebp
cmp
shl
mov
in
cld
cld
sbb
xchg
nop
orl
enter
rcr
rolb
incb
aam
shlb
aaa
cmp
cmc
addb
orb
repz
in
in
les
cmp
fdivrs
loopne
fdiv
cli
fucomp
test
fsubr
in
sti
xchg
mov
xor
xor
lret
roll
loope
sub
fisttpll
xor
clc
call
fld
cli
fdiv
aas
faddp
aad
clc
aam
fsubr
iret
fiaddl
xor
aad
xor
out
out
xor
cmp
in
cmp
mov
cld
out
jmp
sbb
mov
rcl
call
into
lock
incb
shr
add
vshufps
in
aam
call
cli
neg
lock
fsub
ljmp
mov
enter
cmp
std
out
jmp
in
loopne
std
fcmovnbe
or
incb
test
int
clc
repz
lret
shl
sar
xchg
aas
rcl
fsin
sbb
xchg
iret
xchg
out
hlt
aad
ds
fucomip
cmp
add
stc
mov
mov
xchg
enter
ss
out
idiv
fucomp
cmp
call
mov
mov
out
loop
aam
ss
les
std
cmp
rcr
in
sar
cli
aam
rol
mov
cli
lea
dec
cld
aad
shr
repz
fdiv
xor
jmp
fcmovbe
loopne
repz
in
mov
fmul
mov
xor
rcr
jecxz
cmc
into
int3
lock
mov
mov
xor
add
jmp
rol
xlat
int
arpl
mov
pop
call
jle
movsl
add
lret
shl
fstpt
ret
leave
lret
mov
fucomi
int
jmp
add
xor
in
call
in
cmp
ret
clc
enter
orl
xlat
shl
xor
lret
in
lock
fsubr
mov
xchg
fxch
lret
mov
nop
lock
cmp
leave
shll
fdiv
xlat
aaa
vmaskmovdqu
lret
test
in
fsubrp
icebp
xor
int3
call
out
loopne
fstp
aas
loopne
shr
rol
fincstp
xchg
int3
into
fcoml
lret
cmp
cmp
sti
cmp
frndint
fucomi
in
add
sti
xchg
decb
cld
leave
cmp
iret
loopne
fcom
loop
out
loope
cld
out
lock
adcb
repz
xor
lret
int
stc
rcl
stc
decb
fcoml
xor
jecxz
icebp
imul
jmp
fprem1
hlt
fidivrs
leave
loop
iret
ret
loopne
jecxz
in
jmp
aam
repz
cmp
iret
aas
fadd
test
fisttps
int
cmp
test
stc
repz
in
jmp
clc
out
loopne
repnz
out
enter
in
shl
into
xor
enter
cmc
shr
enter
ss
cmp
xchg
xchg
jmp
repz
aas
sbb
fidivrl
fcom
mov
clc
out
mov
xchg
mov
ss
in
ror
iret
jmp
fildl
stc
adc
loope
out
lret
cld
sub
leave
fnstenv
loop
fcmovnu
shl
rol
in
mov
fiadds
cmc
repnz
cmc
int3
sti
int
loop
iret
into
loope
mov
sti
cld
enter
loopne
jmp
into
cmp
rcr
jmp
cmp
and
leave
call
lret
mov
jmp
mov
jecxz
std
and
hlt
stc
enter
shl
xor
sar
cmp
xchg
clc
into
lock
cli
adcl
fidivrl
cmp
xor
flds
xlat
enter
fcomp
loop
mov
in
jmp
fidivl
xor
ljmp
ret
cmp
xchg
loop
loope
out
jecxz
mov
int3
xor
shlb
in
fdivp
shl
ret
div
rcr
ror
call
int
cmp
int3
shlb
fmul
idivb
loopne
loopne
ds
lds
in
out
ret
aaa
shl
in
fistpll
cmp
xlat
repz
mov
shrl
cld
in
out
ljmp
rcr
stc
loop
std
cli
out
int3
fnclex
repz
test
out
ret
xor
neg
icebp
repz
inc
enter
loop
test
int
ror
jmp
aam
ror
f2xm1
addl
cmc
ret
aas
sti
stc
addb
ss
jmp
cmc
ds
cmp
int
test
lds
lds
call
ss
lock
ret
aad
mov
fsubr
leave
out
fdivp
roll
mul
int3
int3
aad
leave
sar
icebp
iret
enter
jecxz
les
xchg
in
in
rcl
jmp
cmp
ds
loope
fscale
fldl2t
fiaddl
xor
out
loopne
ror
hlt
sub
out
xor
aam
ds
enter
std
mov
addb
call
fcmovne
sti
rcl
out
ret
fcomip
movb
jmp
xchg
not
in
in
xor
jmp
rcl
lock
test
loop
cmp
mov
cli
fdivr
aas
fucompp
cmp
cmp
jmp
sbb
xchg
test
loopne
mov
mov
and
int
int
repnz
fcmovu
out
movl
fucomp
jmp
repnz
fcomip
lret
xor
fcom
xlat
sti
cmp
cmp
in
stc
test
lret
mov
loope
xor
leave
sarl
sar
fcomi
out
mov
aad
sti
filds
leave
iret
stc
les
cld
xor
hlt
adc
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
inc
js
and
add
test
mov
icebp
loope
test
sti
xor
sbb
mov
repz
test
xchg
sti
xchg
out
xchg
ret
lret
repz
cmp
sar
ror
aad
xchg
loope
fsubp
std
nop
rcll
enter
std
call
clc
rcr
loope
sbb
addb
std
mov
clc
out
jmp
lret
cli
out
test
test
std
aad
mov
out
rclb
in
cs
xor
jmp
cmp
fdiv
ffree
call
fcmovnu
in
jecxz
into
int3
loope
in
aas
xlat
repz
vpmullw
test
cmc
repnz
and
ljmp
into
ss
xor
leave
loopne
rol
rcl
loop
cmp
in
clc
adcl
in
aam
fmul
jmp
neg
lock
aas
addl
shr
or
and
enter
sti
shl
aas
into
lock
ret
loopne
ljmp
enter
loope
stc
in
in
xor
cmp
cmp
sar
orl
xor
xor
jmp
call
add
jecxz
test
iret
dec
dec
std
xchg
icebp
repz
jmp
loop
aas
into
cmp
mov
cmp
lea
fiadds
cmp
cmp
rcr
clc
aas
loope
cmp
cmp
test
jmp
out
loop
mov
loope
aad
repz
adc
cmp
out
fildl
mov
iret
xchg
in
lock
hlt
stc
fst
shr
out
int
addb
into
jecxz
out
into
and
jmp
leave
lret
cmc
fcmove
in
iret
out
clc
test
xchg
loop
fisttps
loop
loop
jmp
leave
ljmp
std
out
sti
enter
clc
nop
in
out
enter
iret
das
ljmp
rcr
into
cmp
ret
repz
in
xchg
into
out
fiadds
repz
out
iret
mov
test
aam
out
into
addl
enter
out
divl
std
cmp
fxam
ret
cld
call
test
out
icebp
hlt
xor
lret
jmp
xor
fprem1
out
aas
fildl
dec
iret
xchg
mov
aam
xor
enter
aad
ret
vpsubusw
stc
call
sti
rcll
rol
in
cmp
fdiv
xlat
into
in
cmp
cli
loope
loop
in
xchg
jmp
xor
call
fdivrs
enter
int3
iret
in
in
test
in
shl
cli
ljmp
ret
sarl
aam
cld
out
loopne
out
lock
shlb
out
aas
cli
shr
filds
in
mov
lea
int3
xor
int3
cli
xor
cmp
in
aas
std
cli
stc
loope
cmc
sbb
out
repnz
lret
hlt
cli
fidivrs
repnz
rcl
test
cli
fadd
fcom
fsubp
mul
jmp
mov
out
cs
cli
lock
in
sub
test
out
loope
stc
xchg
loope
loopne
int
xor
ljmp
loopne
ret
cli
mov
dec
out
int
out
mov
enter
fcmovnbe
lret
cmp
or
out
imul
test
enter
adcb
int3
rcr
shlb
cmp
out
in
incl
out
test
out
xchg
xchg
imul
into
icebp
xor
shr
test
test
mov
add
push
xchg
call
jmp
out
out
fmul
roll
addl
dec
out
shll
rcr
fadd
jmp
in
hlt
fxch
in
cmp
cmp
jmp
cli
test
fsubrp
in
in
xor
in
int3
cmc
call
loope
cmp
jecxz
aad
ds
out
aad
rcl
repnz
sti
frndint
into
lock
cmp
in
mov
pushl
jmp
int
into
fst
das
inc
aam
dec
sahf
adc
movsl
add
mov
addb
out
sti
cmp
sar
roll
xchg
mov
shl
xor
xor
xor
ds
cmp
in
xlat
xchg
lret
flds
int3
testb
mov
out
loope
shl
ret
cmp
aas
aad
repnz
repnz
hlt
hlt
sarb
lret
not
ss
imul
cld
icebp
int
stc
loope,pt
faddp
sub
or
xchg
int
aad
xor
mul
rcr
aad
loopne
cld
out
iret
icebp
repz
fiaddl
xchg
into
adcb
xor
test
iret
call
fildl
in
loope
ror
xlat
repnz
xor
out
in
leave
cld
cld
aad
sbb
hlt
cli
in
enter
mov
repnz
lret
in
shll
hlt
std
cmp
int
sti
fcomp
xlat
lret
jmp
dec
loop
hlt
repnz
xor
stc
int3
test
std
cli
jmp
mov
leave
test
int
sub
icebp
cs
fcmove
iret
int
fcmovnb
loop
rolb
xlat
iret
lret
iret
in
nop
divl
clc
call
cld
cmp
test
fdiv
fsub
jmp
nop
in
sar
mov
repnz
hlt
hlt
rol
cmc
sti
aad
jmp
sti
push
xlat
loopne
ds
neg
clc
in
jmp
sti
repz
test
in
rcl
leave
cmp
lock
std
xlat
fstp
iret
test
sti
fsubp
in
in
mov
jmp
xor
cmp
cmp
rcr
mov
mov
cld
aad
cli
icebp
ljmp
iret
int
neg
cmpb
cmp
fcmovbe
fld
repnz
in
in
lret
std
rcr
test
hlt
rol
shlb
fsqrt
lock
int3
clc
in
cmc
addb
fmul
sbb
xchg
lock
int3
jmp
repnz
enter
aad
fdivrs
shl
mov
fsubr
and
mov
hlt
cmc
mul
xor
leave
ret
in
cmp
cmp
test
mov
add
fisttpll
xor
f2xm1
aam
leave
leave
in
xlat
jecxz
cli
aad
std
int3
addb
loopne
ret
bnd
fdivr
icebp
int
cmp
call
sbb
in
cli
and
out
lret
cmc
repnz
cmp
roll
mov
xchg
xchg
jecxz
jecxz
cmp
leave
sti
jmp
hlt
fdivp
rcl
cmp
hlt
stc
enter
in
icebp
jmp
xor
out
repz
ret
hlt
test
loopne
cmc
mov
lea
lret
lock
dec
iret
out
lret
sar
stc
loop
repz
test
fxch
bnd
in
in
xlat
cmc
into
fsub
xlat
cmc
stc
fucomp
loopne
rcr
lds
stc
enter
icebp
xchg
lret
std
out
out
fnstcw
fsubr
aam
vshufps
out
xchg
adcl
in
f2xm1
xor
sti
sarb
icebp
loopne
cmp
lds
lock
mov
cmp
test
rcr
loope
shl
test
enter
std
sub
iret
in
mov
das
xor
icebp
int
iret
rcl
ret
sti
mov
out
icebp
mov
xor
in
std
in
lret
rcr
fdivp
lock
ret
test
clc
addb
shl
lret
cmp
repz
rol
ss
repz
and
out
leave
rcr
iret
int3
cmp
fcom
lret
iret
fcmovnbe
out
cmc
icebp
fucom
cld
enter
in
rcl
repz
ret
shrb
ss
cmp
sti
hlt
dec
cmp
loope
out
int3
test
mov
shl
rcl
cmp
shl
xor
sti
in
in
std
fcmovu
clc
xchg
in
lds
out
xor
std
lret
in
out
icebp
sti
fdivr
fldl
xchg
nop
fldl2e
in
lret
adc
lret
lret
cmp
xor
fld
rcl
std
testl
repz
clc
out
xor
lret
ror
repz
cld
in
cmp
int
fmul
icebp
mov
mov
add
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
xor
xlat
lret
in
das
fadd
xor
test
fdivp
out
mul
jmp
lret
std
fucom
int3
mov
shlb
out
cld
cli
int3
neg
fucompp
cld
fadds
into
xor
repz
shr
in
lock
shl
cmp
test
fsub
fucom
loope
mov
xchg
lock
xchg
repnz
rol
cmp
ds
aas
int
loop
fdiv
xchg
cmp
std
ljmp
cmc
repnz
lret
sub
ror
lret
stc
cmp
shl
repz
mov
xchg
mov
das
sub
leave
enter
cmp
in
cld
rcr
xchg
add
in
fucomp
fisttpl
lret
aad
fdivr
iret
in
leave
int
rcl
xchg
fildl
mov
repnz
loope
mov
int
aaa
leave
jmp
jmp
sar
in
in
hlt
out
jecxz
xchg
mov
xor
lock
jmp
sar
in
test
cld
notl
mov
cmc
in
in
clc
fprem1
jecxz
ret
test
cmp
jmp
bnd
out
repz
enter
test
incb
iret
jmp
mov
lret
lret
repz
ljmp
stc
sar
cld
xlat
fdivrp
cmp
fchs
into
enter
out
rcr
xor
sar
out
jmp
shl
ds
in
rol
xchg
fsubr
ljmp
repz
out
lock
ret
out
in
in
repnz
xchg
xchg
aam
icebp
sub
stc
lret
rcl
rcl
roll
test
add
xchg
ljmp
xor
in
mov
out
ror
fadd
loopne
testl
cld
jmp
jmp
loopne
rcl
lret
int3
int3
addb
test
in
jecxz
repz
xchg
fistpll
sub
aaa
fprem1
ds
cmp
loope
mov
mov
stc
test
xchg
shl
loope
int
xor
fcomip
stc
idiv
sar
sub
mov
fstl
and
cmp
xlat
aad
loopne
cld
cmp
std
enter
in
ljmp
cmp
cmp
cmp
shr
shr
sub
loop
call
in
call
aam
fst
shl
ret
cli
testl
les
lds
aam
cmp
out
cli
cmp
filds
inc
mul
mov
out
mul
xor
ss
cmc
loope
lret
in
cld
rcl
cmc
ret
faddp
fsubr
into
loopne
in
shrb
in
fdivs
in
out
aaa
hlt
std
adc
cld
cmp
aad
in
xlat
clc
test
loopne
int
sarl
xor
in
iret
out
out
repz
xor
sti
cld
fldlg2
ljmp
repz
ljmp
int3
loop
cmp
test
and
test
test
fcomip
mov
mov
jmp
mov
sbb
cld
out
div
call
mov
stc
fistl
ret
iret
rcr
clc
stc
int3
aad
in
cmp
sti
fisttpll
aas
mov
in
jmp
lret
lock
repz
aaa
cmc
out
cld
dec
hlt
loope
icebp
fldl
ret
clc
in
in
mov
clc
repnz
fmul
shl
into
leave
out
out
repz
jmp
sub
icebp
lret
aas
lock
into
loop
fcmove
filds
in
xchg
enter
leave
ss
cli
aam
xlat
stc
test
cmp
leave
jecxz
incl
lret
aam
ss
xor
lret
ljmp
out
rcl
aad
out
lret
leave
fsubrp
jecxz
imull
in
cmp
stc
cmp
aam
repz
rol
in
ret
fisttps
xchg
mov
out
in
leave
cmp
int3
lret
cmp
out
out
aam
out
out
mov
repnz
xchg
int3
ror
fdivl
iret
lret
aam
inc
adc
xchg
repz
cld
sti
out
fdivp
out
out
repnz
lock
sub
into
jmp
or
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
ljmp
jle
add
aad
icebp
incl
stc
lock
cmp
cld
lret
ljmp
icebp
iret
ljmp
xorl
cmp
aad
out
out
lret
adcb
hlt
xor
int
ss
div
in
sub
xor
jmp
lds
leave
into
out
repnz
clc
std
int3
loope
rcr
shlb
std
fadds
int
mov
shr
push
divb
ljmp
ljmp
testb
fcmovb
jmp
in
xor
fdivrs
clc
fidivrl
hlt
repnz
fucom
sar
mov
movb
xchg
shll
cmc
repnz
int
das
fmul
cmp
fstpt
rol
fprem1
cmc
in
out
addb
xchg
leave
repnz
jmp
icebp
aas
out
icebp
std
cmp
test
jmp
jmp
xchg
sub
sub
repnz
xor
lock
int3
ds
cmp
icebp
aad
repz
xchg
push
int3
xlat
sarl
fscale
out
out
in
aam
lret
stc
filds
fcomip
enter
cmc
lret
out
lock
ss
aas
ds
in
lret
out
in
lret
cld
neg
into
jmp
not
cmpb
sti
xlat
xchg
lock
shr
out
shlb
icebp
fdivr
sbb
sbb
out
xchg
repnz
leave
cli
xor
ffreep
cmc
cld
and
stc
fsub
xor
nop
addl
clc
cmc
sarl
cli
aam
icebp
shl
sar
sub
fdivr
in
mov
test
into
out
in
and
xor
repnz
not
aam
xlat
fcmovbe
into
loop
mov
jmp
loopne
lret
test
cld
int3
aam
xor
fcmovbe
lock
clc
cmp
cmp
cmpl
fxch
cmp
lock
fsub
iret
xor
loope
repz
cmp
fucomp
test
test
jmp
fsubrp
int3
ljmp
lret
stc
in
jmp
std
int3
xlat
std
enter
lea
lock
enter
lret
fnstsw
enter
xorb
cld
mov
call
mov
lret
shl
cmc
sti
aas
call
test
aad
test
sbb
lret
test
ret
shl
ljmp
aam
sar
cmp
cmp
ret
xchg
out
int
loop
xchg
lret
fsub
int3
ror
rcr
test
cmp
ds
inc
stc
loope
enter
xchg
call
in
into
fcmovbe
clc
cli
cmpb
aad
cmp
cmp
fmuls
fucompp
mov
test
out
into
shl
xor
aaa
cli
cmp
xlat
hlt
sbb
out
out
les
mov
repz
ret
xor
aam
icebp
ljmp
aas
cli
inc
fsubrp
jecxz
int
test
jmp
in
in
loopne
loope
int
out
out
std
icebp
fsubp
xchg
ffree
in
int
xchg
xchg
mov
int
rcl
cmp
sar
lret
sar
testl
cmp
xchg
test
xor
cmp
aam
loopne
jmp
lock
repnz
mov
fcmovne
ljmp
xchg
xor
ljmp
xor
xlat
aas
roll
cmc
mov
lret
mov
fisttpll
in
sub
cmp
into
into
test
mov
mov
dec
jmp
lret
out
loope
lock
cmp
neg
int3
fst
fstpt
int
loop,pt
rolb
ficoml
jecxz
ljmp
sti
call
cmp
aas
ret
out
hlt
loop
enter
repnz
icebp
fiadds
aam
cmc
cld
int
lock
loop
shl
repz
sar
fsubp
xchg
int3
xchg
xor
xor
jmp
in
out
cmp
incb
orl
icebp
in
nop
loop
iret
clc
in
out
out
fldl2e
sar
rcl
stc
repnz
rcr
jmp
xlat
mov
enter
mov
test
cli
fidivrl
lock
aas
in
hlt
std
stc
out
orl
mov
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
xor
sbb
add
aad
shr
xor
out
fsub
clc
stc
cli
ret
loope
std
div
jmp
xchg
std
mov
imul
in
int3
rcl
jmp
out
ss
fsub
cld
test
clc
faddp
enter
into
xchg
das
aaa
les
int
cli
cmp
fld
in
shl
mov
jecxz
repnz
aam
cmc
clc
in
out
incl
call
les
test
int3
hlt
icebp
std
aaa
clc
in
cli
aas
lock
rcl
repnz
cli
leave
loop
in
mov
aad
idivb
icebp
aam
cld
out
mov
enter
mov
jmp
aaa
ljmp
out
leave
in
test
shl
sarl
enter
in
ret
std
hlt
in
ret
icebp
jmp
ljmp
jmp
repnz
shl
mov
loope
orl
mov
xchg
ror
into
in
shlb
aaa
into
jmp
sarl
test
in
int3
aas
xor
in
jecxz
enter
lret
loope
fdivr
out
aad
add
fcoml
fucomip
shlb
jecxz
fsubr
fmulp
aas
fstpt
lock
rcl
cmp
add
lret
repnz
aad
clc
xlat
shl
enter
cmp
cmp
ret
flds
loopne
ret
ljmp
aad
sti
fcmovne
jmp
lret
int3
int
in
out
fstpt
decl
lret
ficoml
lret
xor
divb
cmp
repz
out
lock
fmuls
loop
rolb
cmp
fdivr
out
repz
loop
hlt
lret
cld
imul
dec
stc
int3
in
repz
repz
int3
cmp
out
fiadds
test
mov
call
adcl
cld
cmp
cmp
out
ljmp
fucomp
into
mov
repnz
aad
sub
neg
repz
cmp
stc
idiv
loopne
in
aad
repz
mov
loope
in
orb
clc
test
hlt
fcomi
iret
call
aas
div
enter
enter
repz
lock
idivl
int
int
xor
loop
cli
iret
loope
loope
mov
in
out
nop
int
lock
repnz
in
repnz
in
fdivp
fcmovnu
aad
fprem1
std
in
ret
cmp
xchg
aad
ret
xor
jmp
cmc
int
stc
clc
hlt
not
push
roll
lea
idiv
out
cld
clc
int3
cmp
cmp
cld
mov
mov
sbb
iret
cmc
leave
cmc
lret
aad
iret
int3
in
cmc
sti
in
out
ret
fildl
call
mov
in
in
cmp
fstp
fcmovnb
xor
repnz
cld
testl
rcl
repnz
rcl
out
cmp
out
loope
repz
fucom
lret
lret
rorl
int3
in
shr
lock
fnstsw
test
xchg
fxch
out
int3
xchg
in
shr
out
leave
aad
cld
cmp
icebp
int3
fdivrs
ret
vpsubq
repnz
repnz
xchg
in
fdivs
rcl
int3
repnz
addb
fsubp
test
out
mov
fisttpll
xlat
stc
xor
cld
ds
cmc
incl
mov
int
fsubrp
mov
aad
ret
lret
aaa
cmp
not
xlat
idiv
fcmovnu
cli
out
sti
call
ss
ljmp
loop
lock
lock
fcmovb
in
lret
ret
test
in
xchg
in
lret
lret
clc
fmulp
in
cmpb
icebp
cmc
fucomi
sbb
in
test
rcr
clc
loop
clc
fdiv
loopne
ret
repz
loope
ljmp
ret
loop
in
leave
fcmovne
int3
in
cmp
mul
shl
jmp
loop
xchg
lock
hlt
repz
das
lret
lock
into
sub
and
repz
jecxz
hlt
idiv
mov
mov
out
hlt
out
clc
jmp
loopne
faddp
shr
clc
fadds
add
add
jne
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
loop
fsubrp
xchg
xlat
neg
stc
clc
aaa
leave
aad
fadd
aam
fucom
in
test
cld
into
and
test
xor
aaa
div
sti
cmc
xor
std
in
shl
jecxz
loopne
idiv
and
lock
out
mov
aad
clc
in
xor
xor
out
mul
fiadds
loopne
out
nop
jecxz
in
out
xchg
pop
lock
cmp
cmp
not
leave
cmp
sti
cmp
rol
mov
fsubp
mov
lret
iret
in
loop
nop
out
cmp
in
icebp
fnstcw
out
lret
int
aaa
repnz
loop
fmuls
fsin
loopne
xchg
in
in
out
ffree
rcr
ds
loop
stc
test
fcmovne
testl
mov
loop
int3
out
xor
idiv
loopne
std
sti
not
fdiv
and
int3
lret
rcr
mov
sub
cli
lock
in
int
cmp
aam
out
ret
mov
mov
ljmp
rcr
cmp
aaa
aaa
into
shr
xlat
fildl
shl
out
fists
test
repnz
in
cmc
into
aaa
cmp
lock
xlat
ffreep
ds
lret
fsub
jmp
fsubrp
mov
sub
fmulp
cmp
hlt
rcr
leave
fildl
jmp
call
cmp
cmp
cmp
aas
mul
loope
ds
ljmp
xchg
adc
das
xor
sub
out
fmulp
hlt
idivl
aaa
and
int3
mov
clc
fdiv
call
jmp
sarb
ljmp
icebp
call
cmc
out
out
mov
loop
out
test
jmp
cmp
int
sti
fadd
xorl
cmp
dec
out
lock
div
sar
rcl
lret
aas
flds
xor
mov
call
int
repz
cmp
cmp
sar
hlt
loope
rorl
lock
cmp
jmp
std
shl
vpsraw
call
lock
shl
xchg
cld
repnz
clc
flds
lock
orl
leave
rorb
sub
in
sti
repz
stc
addl
loopne
jmp
test
jmp
int3
mul
iret
out
ret
jmp
cmp
mul
cli
call
loopne
fcmovb
loope
xchg
ror
lds
sti
aad
imul
jmp
fstp
aam
add
aas
aam
aam
fxch
lea
fdivrp
div
cmp
clc
fnstsw
divb
rcr
fcomi
hlt
out
repnz
hlt
lret
fcmove
ljmp
ss
ljmp
loope
out
xlat
loope
hlt
mov
cli
mov
out
xchg
in
loope
loopne
out
aam
call
fdiv
into
repz
rolb
or
xchg
loopne
fadd
rol
in
ljmp
fiadds
cli
sbb
loopne
cld
out
in
out
int3
xor
xlat
int
ret
lock
stc
call
ficoml
out
mov
xor
into
div
cmp
ljmp
aad
aam
xor
aam
aam
into
int3
lret
cmp
lret
cmp
into
xchg
loope
cli
loopne
stc
fiadds
out
in
out
xlat
jmp
leave
lret
loope
fsub
aam
std
test
fcmovb
xlat
lret
in
mov
shl
int
aad
int
jmp
loope
stc
std
mov
mov
cli
popl
repnz
cmp
f2xm1
incb
roll
fmul
in
mov
and
nop
lret
divl
leave
jecxz
cmp
rcl
ret
ljmp
enter
lret
jmp
xor
ds
aad
cld
std
rol
call
aas
inc
flds
test
fidivl
out
frndint
iret
cmp
out
out
and
addb
mov
nop
shl
ret
xor
sar
cld
ds
rcr
icebp
lock
loop
in
mov
enter
fmulp
in
shll
ljmp
ror
fiaddl
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
jle
xchg
add
fdivp
out
test
clc
cli
out
int
in
les
shl
cmp
out
aas
fadds
lds
fucomip
sti
cli
test
test
cmp
fcomip
icebp
lock
aam
loope
cmc
mul
out
out
loop
xchg
ret
cli
clc
into
ds
aam
jecxz
icebp
fsub
cmp
int3
test
filds
shl
ret
icebp
lret
rcr
int
ds
div
rolb
stc
lds
into
mov
fucomip
fmul
repz
int3
cmp
cmp
fmul
int3
imul
rol
int
fimuls
mov
hlt
in
lock
ds
cmc
add
ljmp
out
mov
xchg
xchg
test
leave
int
call
cmp
sarb
out
aam
aam
cmp
out
call
cmc
ss
cmp
out
lock
fcomi
xor
sti
lret
addl
mov
imul
in
clc
repz
mul
int
out
ds
idiv
cld
loope
stc
call
std
repnz
clc
in
in
into
enter
into
cmp
cld
mov
leave
loop
test
lret
jmp
test
repnz
jmp
call
std
cmp
test
sti
jmp
lds
jecxz
icebp
in
lret
ss
leave
cmp
cli
loop
fistpll
mul
xlat
sar
lret
in
ljmp
sub
std
ljmp
fldl
call
fcomp
std
lret
jmp
call
fidivrs
lock
ljmp
stc
mov
loopne
xchg
test
jmp
aad
int3
fmul
xor
repz
xlat
ror
fadd
ffreep
leave
add
test
jmp
fnstenv
leave
ror
aad
testl
nop
std
rcll
ret
call
lret
fucomi
test
repz
out
leave
xchg
imul
stc
cmp
icebp
cmp
in
cmp
loop
out
icebp
out
xchg
std
or
out
sti
test
in
enter
fdiv
cmp
int3
rol
mul
shl
les
std
icebp
fildl
shr
sarl
cmp
cmc
leave
loop
addb
lret
in
fucomp
fsubr
shl
jmp
ljmp
das
in
cmp
sar
xor
shl
aad
mov
sar
in
lds
icebp
ljmp
shl
into
test
xlat
mul
mul
in
fcomp
ljmp
jecxz
jmp
cmp
shl
out
test
fcomp
lret
lock
rol
repz
out
stc
aam
ljmp
cmc
lret
in
call
out
mov
out
repz
vucomisd
cmc
cmc
fnop
sti
repnz
clc
in
jmp
ror
jecxz
cmc
sub
cmp
out
in
cmp
jmp
ret
fcmovnb
loop
in
xchg
cld
mov
in
out
in
int3
mul
lret
mul
enter
aam
test
orb
mov
fdivr
in
shr
sub
cmp
rolb
xlat
mov
pause
out
mov
lret
stc
out
aam
jmp
stc
icebp
icebp
lock
jmp
int3
mov
jecxz
fucomip
lret
stc
cmp
repz
in
cmp
aad
rcr
rcl
in
xor
lock
loop
xchg
repnz
cs
std
imul
cmp
aas
addb
clc
xchg
cld
into
lret
out
mov
xchg
int
shl
cmp
rol
test
ret
ror
aam
shl
rcr
lds
shl
jmp
fdivrp
sti
sti
loopne
add
loop
ret
incl
out
ret
xor
sarb
aas
shl
out
aad
leave
out
out
nop
in
loope
in
ret
cmc
jmp
out
rcr
jecxz
int3
inc
mov
loop
fmuls
int
lock
xor
xor
fucomip
int
ret
clc
xchg
fmulp
xchg
shl
in
repnz
inc
add
or
add
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
xchg
std
gs
jle
fcmovbe
icebp
fsubr
aam
lock
jecxz
decb
iret
mov
test
shrb
lret
lock
sti
in
cmc
jmp
in
xor
sti
test
ret
push
repz
xor
ds
loope
jecxz
sar
ret
idiv
test
in
stc
lret
fisttpl
sub
lock
cmp
icebp
cmp
fistpll
lret
mov
fcomip
or
divl
cld
xlat
aam
ljmp
fstp
jecxz
aas
loopne
into
orb
out
out
leave
in
xor
aam
cmc
addb
out
out
sti
loop
aam
jecxz
ss
ss
out
loopne
out
lret
iret
iret
cmp
fcom
cmp
fchs
cld
icebp
rolb
cmp
ss
ror
add
div
fiaddl
leave
in
orb
and
xor
leave
divl
std
xor
roll
fiaddl
fisttpll
jecxz
xor
cmp
iret
sti
shl
xor
cmc
std
leave
lock
icebp
in
mov
xlat
hlt
std
call
ss
xchg
movb
fcmovnu
jmp
shr
xor
in
repnz
int
fsubr
aad
hlt
xchg
call
ret
loopne
icebp
shl
jmp
aad
fsin
sti
leave
xlat
cmp
cld
idivb
ds
mov
fldz
fcmovne
fimull
cmc
shrl
sti
ss
aaa
aam
sub
rol
roll
into
call
fists
xor
jmp
cld
shl
aas
into
fidivl
loopne
cmp
test
ret
lds
rclb
leave
sar
hlt
into
clc
fdiv
cmp
out
fstp
xchg
test
lds
mov
decl
test
aad
hlt
icebp
shl
cmp
xchg
add
cld
in
xor
int3
out
repz
int3
std
call
add
call
sti
fmul
shr
in
clc
in
cmc
clc
fdivr
fucomip
test
cmp
fsubr
sbb
or
lret
jmp
call
iret
cmp
ret
loop
in
clc
ret
shr
lret
mov
in
cmp
cli
xor
aas
sti
out
repnz
jecxz
cmp
std
fcmovne
sub
call
xlat
jmp
aad
aaa
repnz
aas
cmp
in
aad
aad
mov
movl
neg
cli
std
xor
int
cmp
fstpt
clc
cli
fadd
enter
notb
cmp
xor
int3
cmp
cmpb
icebp
xchg
enter
xchg
in
lock
in
out
iret
fsubr
iret
rcr
cmc
int
repz
aam
fcomi
stc
shl
shl
loope
out
loope
in
out
test
ror
in
cmp
cld
lret
aas
shl
leave
out
fisttpll
in
loop
rol
lret
hlt
mov
clc
cmp
ds
stc
xchg
leave
sar
fmul
test
sub
in
sti
aaa
rcr
mul
cmp
fcmove
or
in
fcomip
xor
jmp
ret
clc
shl
aam
out
aaa
loop
cli
std
roll
in
lret
out
std
lret
repz
out
cs
div
out
repz
into
jecxz
ret
mov
lret
mov
into
lret
lea
ret
jecxz
shl
imul
rol
test
mov
jmp
adcl
fdivr
int3
cmp
hlt
stc
xor
ret
repz
aas
fucomip
fcoms
test
out
lock
cs
hlt
clc
stc
out
out
fdiv
out
cli
cld
fstp
xchg
loop
div
xor
cmp
iret
xor
aas
fdiv
repz
out
out
sar
cmc
test
xor
out
dec
loope
stc
div
repz
loopne
fdivr
lret
stc
lea
jmp
rcl
in
cmp
rol
loop
repz
in
loope
ljmp
mov
cmp
in
jmp
repz
aam
leave
testb
xchg
std
div
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
cmpsl
ljmp
xchg
add
in
loopne
xlat
out
aad
fdivr
lock
fsub
addb
fucomp
in
out
xchg
xor
ljmp
icebp
loop
fucomi
test
in
adc
loop
out
xchg
shl
shrl
in
in
repz
leave
cmp
lret
lock
incb
mov
xchg
filds
mov
xor
aad
shr
fnstcw
fsub
out
ret
enter
jmp
jmp
cmc
call
xlat
fld
out
repz
repz
in
hlt
enter
mov
out
int
mov
xchg
repnz
in
cld
cmp
repnz
out
sti
and
jecxz
call
shr
xchg
aas
enter
cld
lock
neg
neg
cmp
loop
in
mov
call
fsub
int3
enter
ljmp
ror
std
cmc
sti
xlat
ds
sti
loopne
enter
ret
lret
out
loopne
aad
lret
not
out
not
icebp
fcmovnu
ds
mov
sti
cmp
into
mov
shl
loopne
lret
clc
xlat
fcomi
repz
xlat
repnz
rcr
fsubrp
clc
mul
loopne
xchg
shr
mov
ror
xor
aad
lret
sti
in
ret
sbb
in
into
out
in
xchg
loopne
mov
lock
ljmp
cmc
aad
clc
in
enter
xlat
test
out
cli
mov
jmp
jmp
shr
fucomip
lock
sti
fisttpl
int3
ror
fucom
in
rcr
shl
lock
fdivrs
stc
cld
stc
ret
in
cmc
mov
rorl
out
out
out
in
iret
jmp
hlt
cmp
roll
jmp
jecxz
cld
int3
in
loope
rcl
loope
out
out
into
in
repz
aad
faddp
out
vpsllq
jmp
loopne
repnz
jecxz
int3
fidivrl
int
fdiv
loop
cmp
jmp
test
hlt
mov
cmp
ficoms
repz
out
fnstcw
leave
in
cmp
cld
test
cld
cld
std
orb
into
hlt
iret
in
stc
sti
int
neg
iret
loop
out
cli
aam
call
adcb
repnz
into
aam
out
fucomp
sar
loopne
ret
fdivr
fsub
loop
cli
rorl
shl
out
cmp
int
loope
rolb
add
call
rolb
out
xor
fsubr
mul
dec
fdecstp
fucom
xchg
jmp
cmc
int
leave
mov
jmp
cmp
fcom
cmp
cld
sti
repnz
ret
in
test
jecxz
rorl
shl
iret
aaa
cmp
adc
hlt
jecxz
out
fsubp
loop
out
loope
lret
in
xlat
jecxz
cli
xor
cmp
cmp
cli
rcr
aas
fcmovnu
imul
loope
std
out
fmulp
loope
nop
out
xlat
xor
ror
cmp
imul
fstp
push
mov
loopne
nop
fcmovu
call
not
jecxz
repnz
xor
into
out
cld
test
mov
int
fcmovne
shr
nop
in
call
in
shl
lret
cmp
aam
iret
cmp
loopne
fadd
fdiv
test
mov
into
ror
stc
xor
aam
fnstsw
loope
cli
std
hlt
fprem1
lret
filds
ljmp
int
fdivrs
not
xchg
shl
filds
out
call
xor
shll
ror
xlat
jmp
addl
cmp
jmp
loop
in
fists
repnz
int
xor
icebp
xlat
rcr
loopne
fmul
ret
int
enter
shr
xor
xor
in
out
lret
ljmp
icebp
out
sar
out
decb
xchg
loopne
sub
ss
out
ljmp
in
stc
aam
in
clc
loope
mov
cmp
mov
out
jecxz
das
fdiv
lock
jmp
cmp
xlat
shl
mov
test
in
lock
ljmp
out
std
sti
aaa
fcmove
stc
fscale
xchg
loop
jmp
xchg
out
and
lds
icebp
repz
out
sbb
into
cli
ret
inc
stc
in
testb
mov
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
mov
mov
jle
add
out
std
leave
les
stc
cmp
lock
ljmp
cmp
in
hlt
mov
ds
nop
xchg
aad
out
divb
cmp
adc
lock
test
out
std
sub
out
cmp
aad
lock
aam
adc
rcl
in
int
mov
cli
adc
clc
xor
rol
cmp
cmp
sub
fadds
jmp
cmp
ljmp
xor
hlt
shr
repnz
out
int3
clc
loop
call
fucomip
out
cld
loopne
loopne
aad
xlat
jmp
icebp
shr
leave
shl
hlt
ret
fcmovu
in
ret
cli
leave
out
in
int3
in
xchg
xor
out
rcl
xor
int3
aad
in
aam
in
mov
xlat
sti
lock
enter
jecxz
ss
cmp
int
sti
fcmovnb
fiaddl
fstp
leave
loopne
leave
out
out
xchg
lock
nop
in
loope
xor
xor
cmc
cld
cmp
and
lock
in
fsubrp
neg
into
cli
incl
cmp
hlt
out
sarb
aam
std
cli
movb
leave
jmp
jmp
enter
out
icebp
cmp
cmp
cmpb
cmc
xlat
test
stc
aam
and
mov
leave
in
repnz
in
xor
out
int
in
in
idiv
rcl
stc
icebp
shl
adc
ret
iret
jmp
cli
in
int
xor
cmp
ret
hlt
cli
enter
fsubr
fldl
leave
repz
jmp
jecxz
mov
out
shr
ret
out
in
int
shl
push
hlt
ret
test
repnz
ret
add
sti
in
xchg
mov
aad
xor
cmp
sti
repnz
fcmovnu
clc
in
les
int
in
in
popl
hlt
lret
out
cmp
addl
loope
test
lock
aaa
in
iret
enter
cli
fcmovu
in
into
out
lock
ret
enter
jmp
xchg
fidivs
int
lret
shl
cmp
icebp
les
test
xchg
loope
aam
shll
test
cmp
cmp
out
cli
cmc
hlt
test
mov
xlat
xchg
cmc
xor
in
jmp
lock
loopne
xlat
lret
into
mov
aam
xor
hlt
idivb
shl
lock
and
in
fucomp
sti
in
aam
int
cmp
cmp
icebp
loopne
sti
xchg
loop
fimuls
cmc
out
sub
cmp
sti
call
cmp
loop
aam
clc
fucomip
in
sti
sti
out
out
loopne
lret
out
lret
lock
sar
iret
cmp
fsubrp
in
mov
dec
call
jmp
fucomip
iret
sarb
xchg
test
jmp
into
fsincos
xchg
xchg
test
xlat
cli
sar
cmp
ret
repnz
repnz
in
nop
iret
addb
not
enter
out
icebp
fildl
jecxz
fnsetpm(287
les
mov
jmp
icebp
shlb
out
shl
rcl
not
in
lock
call
jmp
rcl
test
ret
out
aad
sar
sarl
mov
out
loopne
repnz
out
xor
xor
in
iret
clc
stc
fcmove
repz
cmp
les
loopne
mov
loop
jmp
aad
sar
int
xchg
rcr
test
int
xchg
xchg
xchg
hlt
cs
hlt
xor
cld
lret
sar
std
in
test
clc
adc
addl
aam
shl
cmp
in
cmp
rcr
aad
fdivr
xchg
xchg
lret
xor
fcmove
in
repnz
fyl2x
cmc
loopne
enter
cmc
int
dec
or
add
add
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
push
mov
jle
add
iret
xchg
mov
lret
xchg
xor
ss
into
int
leave
xor
hlt
sti
xrelease
enter
mov
out
repnz
fdivrp
jmp
int
repz
cli
xlat
xchg
xlat
fsubrp
repnz
xchg
dec
fxch
jecxz
rcr
into
cmp
lock
xchg
xchg
in
test
rcll
jmp
cmp
rcl
jecxz
xlat
fcmovnb
std
ljmp
xchg
lret
int3
out
aam
sti
in
cmp
sbb
loop
repz
cmc
faddp
mov
loopne
test
out
shll
vpsllq
fcom
shl
icebp
out
mov
incl
int3
popl
ss
std
fstp
lock
lock
mov
fisttpll
mov
fdiv
shl
out
repnz
jecxz
ret
ret
fchs
loope
ljmp
rcr
clc
lret
shlb
cmp
clc
icebp
shl
xlat
test
clc
ret
hlt
fimuls
mov
ljmp
in
repnz
test
cmp
not
cmp
xlat
sti
fisttpll
int
aad
ljmp
aaa
shl
adc
shl
rol
loope
enter
incl
ljmp
out
int
into
xlat
repz
cld
rol
clc
in
mov
fsubp
jecxz
xor
out
cmp
aad
ds
ret
lock
cmc
test
fiadds
adc
hlt
out
cld
sti
ljmp
shl
shl
cld
int
out
stc
nop
hlt
rolb
iret
enter
fnstenv
loopne
aam
shr
fadds
mov
mov
rolb
iret
loope
xor
out
int
hlt
rcl
adc
call
in
icebp
and
xchg
aam
cmp
shl
cmp
fnstcw
sar
and
ret
out
mov
xchg
mov
std
in
out
mul
aad
leave
out
lret
shl
out
out
rorl
out
loope
xchg
out
xor
aad
enter
rol
repnz
clc
rolb
fldl
int3
xlat
lock
lret
enter
lock
repz
cli
lock
cli
and
test
mov
aaa
ljmp
in
sti
in
aas
aas
fiadds
in
ror
xchg
pause
mov
jmp
enter
cli
icebp
ljmp
fiadds
mov
rcl
lret
cs
clc
fdivrl
jmp
repz
icebp
cli
sti
hlt
in
test
addl
ss
fucomip
loop
ret
lock
out
xlat
ret
clc
loop
xchg
mov
xor
cmp
rcl
iret
lock
out
loope
jmp
jmp
rcl
incb
clc
out
cld
iret
aad
shl
leave
ret
fmul
stc
fucomi
test
in
loop
xchg
repz
enter
lock
fcmovne
shl
fadd
or
mov
mov
cmc
cli
jmp
icebp
ds
clc
sbb
faddl
or
stc
shr
xor
in
imul
out
adc
int
out
stc
out
rcl
cli
clc
orb
shl
cmp
shll
aam
int
out
mul
stc
clc
out
xchg
jmp
test
mov
jmp
cmp
roll
repz
loopne
and
lret
ljmp
mov
xor
ss
xlat
out
sar
addl
f2xm1
lret
int
xor
sarl
cld
out
out
icebp
std
in
repz
jecxz
rolb
in
mov
shl
aad
out
cmc
out
xor
repz
idivl
aaa
loop
rorl
testl
add
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
fcoml
mov
jle
call
mov
shlb
cld
cmp
cmp
fdivp
not
in
in
cld
call
jmp
in
lret
ljmp
sarl
aam
in
enter
in
into
int3
mov
aam
xor
cmp
jmp
fiadds
in
rcr
fcmovu
in
neg
jmp
fsubr
mov
lock
xor
ss
jecxz
loopne
cld
in
cld
jecxz
loop
xchg
xchg
out
fsub
cmc
ljmp
loope
icebp
call
flds
in
mov
sar
cmc
shl
cld
sti
or
loope
cli
test
or
sti
fsubp
mov
lock
out
out
in
out
aaa
in
out
neg
ss
in
cld
fdivrp
ret
movl
repnz
into
aad
iret
leave
sar
cmp
in
fistpll
cli
fldl
sti
neg
shl
mov
aam
xor
lock
repz
call
sarb
repz
test
out
inc
fdiv
mov
xlat
rcl
repz
cmp
aaa
out
ffree
iret
push
repnz
lret
call
into
mov
out
repz
ljmp
incl
repz
enter
fdivr
xchg
out
mov
fxch
out
cmp
jmp
sti
loop
cld
fstp
and
xlat
rolb
xchg
xchg
loopne
ss
cmp
xor
cmc
out
fcomi
loopne
lock
out
clc
lret
and
rcr
jecxz
call
in
cmp
cmp
std
in
repnz
aam
aad
rol
in
orl
icebp
aad
xor
fdivs
cli
hlt
cmp
aam
in
jmp
test
in
mov
test
xor
xor
lret
in
fincstp
ljmp
xlat
jecxz
fmuls
or
call
leave
fdiv
icebp
fidivrl
cmc
ds
shr
addb
fstp
leave
clc
and
test
in
cmp
shl
cmc
out
and
rcr
shl
fsub
mov
mov
fxch
xor
ds
cmc
in
cmp
test
int
out
loope
int3
mov
ljmp
not
cmp
ds
repnz
ret
int
into
fmul
out
mov
leave
cli
cld
xlat
loop
repz
faddl
fsubr
std
in
fucomip
in
call
in
fdivp
fstpt
repz
xchg
cld
fld1
test
ljmp
leave
fdivp
in
jmp
cmp
out
clc
adc
int3
loope
test
mov
fmul
loope
nop
repnz
xor
cmp
hlt
cmp
fst
int
std
stc
fmul
loop
in
in
enter
mov
jecxz
lret
iret
repz
cmc
cmp
test
add
in
mov
ljmp
xor
shl
repz
leave
iret
xor
shl
shl
loop
lret
mov
stc
icebp
leave
cmp
cmp
into
out
sbb
lock
jecxz
and
cld
enter
sbb
repnz
cs
out
jmp
hlt
iret
rcr
loopne
icebp
in
jecxz
or
mov
stc
int
ljmp
shl
cld
into
aad
in
addl
in
mov
ss
in
jmp
test
std
repz
out
or
rcl
in
jmp
ret
ljmp
cmpb
loop
mov
vpsubw
mov
icebp
loope
lret
int
loope
jmp
out
icebp
aad
shr
ret
rorb
jmp
loope
rorl
not
fmul
ss
cmp
cmp
cmp
cmp
test
sti
in
adc
ljmp
out
iret
addl
test
loopne
out
stc
test
add
add
rcl
fxch
fxch
jp
cmpsl
cwtl
xchg
jle
add
test
iret
in
jmp
rcl
cld
cli
cmp
clc
jecxz
cmp
test
lea
fucomp
sbb
cmc
call
ljmp
divb
addb
fmul
enter
aam
jecxz
shl
into
aad
div
int
fadd
loopne
aaa
hlt
cmp
clc
jecxz
lret
call
loopne
int
lock
icebp
cmp
leave
ljmp
ret
sbb
fsub
out
xchg
sar
xlat
shll
repz
ds
aaa
aad
xchg
mov
int3
repnz
int
mov
out
xor
xor
hlt
ss
rol
dec
std
sbb
test
lret
jmp
loopne
les
cmp
std
cld
repnz
cli
test
in
fcmove
mov
sti
cli
vpsraw
out
sar
repz
xlat
int
sar
adc
loopne
fcomp
and
stc
std
mov
xor
ret
int3
fldl2t
lret
fadds
stc
decl
xchg
loopne
test
cmc
aad
jmp
sti
icebp
cmp
faddl
out
faddl
jecxz
icebp
out
jmp
in
rcr
cld
add
enter
testl
rol
jmp
ss
in
lret
imul
stc
aas
rcr
std
rol
out
xchg
sti
xchg
loope
cs
xor
sti
out
in
out
icebp
fnstsw
stc
out
rcl
lds
mov
int3
cli
sti
repz
xor
lret
cld
fcmovne
out
lock
ljmp
enter
lret
mov
xchg
into
xor
cmp
rcr
std
cmp
fiadds
in
cld
dec
lret
nop
enter
jmp
sub
shl
lret
cmc
fldpi
cld
sti
xlat
ds
vpmaxub
loopne
ljmp
in
jmp
lret
aaa
fucom
lock
cmc
fcmovu
out
enter
test
out
hlt
ljmp
xor
lret
enter
adc
cmc
in
sti
std
call
jmp
xchg
aaa
out
lock
sti
out
stc
fmul
loope
repnz
addl
shr
adc
cmp
aam
hlt
ljmp
inc
sar
out
fndisi(8087
ret
in
test
clc
in
cld
cmp
fdivr
adc
test
stc
out
test
ror
int
xor
jmp
hlt
shlb
clc
roll
ret
lret
rorl
aad
imul
sti
int3
bnd
fninit
fdivr
xchg
xlat
cli
ret
adc
out
xor
shlb
call
call
add
aas
clc
fisttps
cld
out
xchg
repz
in
std
iret
hlt
fucom
fidivs
ret
xlat
call
loope
enter
int3
mov
jmp
fdivrs
into
lock
int
fnsetpm(287
fxam
rcr
aas
repz
mov
out
lock
cmc
lret
clc
aad
int
sti
rcl
sti
fcmovnu
cmp
cmc
in
call
loopne
out
jmp
das
loop
clc
in
out
cmp
iret
jecxz
xchg
addl
test
std
fiadds
xor
or
fcmovu
aad
ret
call
mov
xchg
fstp
xchg
ret
ljmp
aas
cmp
stc
cmp
cmp
in
loop
neg
test
addb
out
ret
ljmp
lret
aad
adc
xchg
mov
test
shr
fcomi
fmulp
into
icebp
sbb
fdivrl
lret
lret
in
jecxz
out
xor
hlt
fdivl
fcomp
rol
clc
cmp
ret
jecxz
into
test
icebp
fdivrs
repz
lock
in
hlt
loope
in
mov
aad
jmp
in
loop
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
inc
ss
inc
jle
aas
add
int
jecxz
into
vpsubusw
lret
icebp
into
ds
jecxz
jmp
fdivr
test
loopne
faddp
repnz
cmp
ss
out
iret
xlat
fldln2
cmp
movl
loopne
rorb
call
out
loope
loopne
push
test
xlat
sar
jmp
fdivr
test
fsub
call
cmc
sub
out
neg
cmp
aad
cmc
ljmp
xchg
add
cmp
call
xchg
fcmovu
loop
test
mov
call
mov
sub
cmc
cmc
xor
in
aas
incb
clc
out
cld
mov
mov
int
out
cmc
das
ss
in
shll
loope
and
stc
cmp
hlt
test
mov
int3
in
cld
xchg
aam
ss
repz
fsubrp
ret
clc
in
ljmp
xorl
shl
repz
cmp
cmp
rcr
cmc
add
loop
in
orl
shlb
lock
int
fcomip
fdivr
sub
and
xchg
cld
out
xchg
xchg
xchg
loopne
jmp
cmc
cmc
jmp
sar
fildl
icebp
enter
div
xor
fdiv
fcomip
cmpb
xchg
cld
rol
ds
loopne
mov
pushl
xor
lret
fdivrl
ror
aam
rcl
aad
icebp
aas
aam
enter
xchg
call
ret
ret
stc
ror
into
call
fcomi
sarl
mov
stc
aad
out
mov
jmp
ljmp
cmc
cmp
repnz
test
fsubp
cld
enter
mov
out
call
ret
out
cmp
jmp
icebp
fcomi
test
sti
aad
lret
addl
mov
sti
repz
cmp
xor
fsub
sarb
fstp
rorl
in
incb
loop
ret
ljmp
cmp
ds
lret
out
sti
test
sti
lock
out
xor
sar
clc
out
jecxz
fiaddl
loopne
clc
clc
int
mov
in
not
lock
out
fdivr
lret
cmp
ret
fprem1
test
shl
les
xchg
in
fnstcw
aaa
lret
repz
cld
cmp
aam
std
icebp
ret
aas
sti
fadds
fucomi
xchg
incb
xor
shlb
cmp
repnz
loopne
ret
sti
lds
iret
shl
repnz
iret
sti
loopne
aad
repnz
in
xchg
sti
ljmp
mov
loop
vmovq
fmul
loopne
cli
rolb
enter
mov
in
ss
cmp
into
xor
lock
iret
xor
or
call
aam
sub
ljmp
call
push
fldl
sti
xchg
jecxz
out
icebp
out
aaa
cs
jmp
xlat
incb
test
stc
ljmp
nop
mov
lret
fmul
lret
int3
fdivrl
std
mov
loope
call
out
nop
loope
shr
rcl
test
jecxz
iret
sti
call
ret
loope
std
std
mov
mov
out
into
shl
cmp
ds
neg
loope
aas
addl
jmp
hlt
xor
ljmp
into
cmp
shr
cmp
hlt
in
out
sti
jmp
faddp
xor
push
cmp
cmc
iret
jecxz
sar
fyl2x
jmp
fcmovu
test
mov
mov
mov
sub
ljmp
loope
shl
dec
lret
out
sbb
clc
rol
vpor
repz
xchg
test
sbb
into
sub
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
fmulp
enter
repz
xor
xlat
into
fninit
stc
and
cld
std
mov
std
test
incl
into
jmp
sar
leave
in
fcmovnbe
aas
jmp
loopne
int
repnz
shl
in
out
iret
aad
out
repnz
cmp
cmp
cmp
fld
fucom
mov
iret
int
xchg
ror
out
repnz
int3
ljmp
jecxz
not
loop
fcmovu
std
int
out
loopne
decb
in
ljmp
xlat
aam
lock
jmp
cld
faddl
lret
int
xlat
clc
aaa
xor
cmp
stc
fsubr
fsub
cmp
xor
sar
fucompp
fdiv
mov
mov
fld
lret
cli
jmp
cld
jecxz
clc
aas
cld
push
jmp
int
fucomip
into
jecxz
xchg
sar
enter
repz
shr
test
sarl
fucomi
aam
ljmp
shl
xor
xor
xor
xor
icebp
fmul
iret
repnz
cli
call
jecxz
cld
out
or
aad
xor
fdivr
rcr
faddp
and
lret
xchg
cli
pop
loope
rcr
xor
int3
in
in
lock
ljmp
loope
std
jecxz
fucom
loope
nop
xchg
out
mul
enter
iret
lock
cld
in
in
flds
enter
test
test
icebp
jmp
in
orl
sbb
aam
sub
lret
sti
lret
repnz
cmp
addl
fdivrp
mov
out
and
lret
in
shr
fcmovnu
jmp
rcl
out
ret
fsub
lret
out
test
lret
loop
ljmp
fdivs
sar
shr
xchg
addl
in
shr
leave
xor
cmp
divb
int
sti
out
roll
sbb
mov
std
lret
xor
aaa
jmp
cmp
loope
in
cld
testb
mov
mov
aad
into
das
lret
xor
xlat
jecxz
in
ret
rol
jmp
mov
fprem
fucomi
into
lret
int3
xor
lret
cmp
mul
ljmp
into
mov
hlt
mov
call
xchg
in
jmp
cmp
in
xlat
push
cld
into
sbb
std
jmp
test
call
clc
aad
lock
sti
repnz
fnstsw
iret
repz
xlat
jecxz
rorl
lock
test
xchg
shr
fdivs
fucom
shl
xchg
filds
iret
in
ror
decl
xor
jmp
icebp
cmp
shl
lock
ret
mov
lret
xchg
mov
xor
shl
into
hlt
aam
cmp
into
aas
stc
aad
jecxz
aam
flds
out
aam
in
jmp
aad
cmp
cmp
sbb
test
sti
loopne
lea
xor
aam
leave
clc
ds
int
int
repz
adc
icebp
out
out
xor
xor
std
xlat
lret
xlat
cmp
fnop
loopne
cmp
and
jmp
rol
ljmp
loop
test
shl
sar
loop
fcmovu
xchg
fucomi
mov
int
iret
xor
das
out
xlat
cmp
icebp
int3
rcr
into
fcmovb
test
loop
xor
fcmovnu
clc
fcomi
std
div
sti
aas
out
rol
and
fucomi
out
leave
out
rcll
sub
repnz
repnz
cld
fcmove
hlt
jecxz
sarb
cld
fadd
in
in
loopne
xchg
int
xor
idiv
leave
cmp
out
cli
repnz
loope
mul
cli
rcr
int
lret
lret
lret
icebp
fyl2xp1
fsubr
in
cmp
hlt
fsubp
lock
ljmp
fisttpll
clc
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
stos
in
push
fwait
dec
jle
aas
add
jmp
out
xor
icebp
hlt
std
repnz
cld
rol
xchg
sbb
sbb
mov
fcmovnu
hlt
call
sub
aas
into
out
loope
repnz
hlt
xlat
aam
mov
mov
mov
out
out
shr
repz
sarl
repz
int
cmc
loopne
in
xor
lret
aam
cli
cli
out
call
in
icebp
fstpt
shr
testl
out
cli
cld
jmp
add
fcoml
rcr
in
xlat
int3
lret
shl
sar
aam
fmuls
into
addl
out
fnstcw
ds
and
fcomip
fdivr
fsubrp
ret
xchg
lret
fucomp
iret
out
xor
enter
int3
ljmp
hlt
fcmovnbe
adc
jmp
in
iret
call
loop
ss
out
out
clc
fcmovnbe
iret
test
repz
loop
mov
loope
loope
in
aad
lret
ljmp
int
iret
shl
fld
mov
lea
iret
out
into
out
aad
aam
ljmp
enter
jecxz
call
xchg
call
into
cmp
fmul
fucomip
aaa
fdivr
repnz
out
aam
lret
aad
iret
xchg
adc
cmc
mov
fidivl
out
aaa
cmp
div
fnstsw
add
shl
fcomp
in
in
rorb
sarb
out
in
rcl
jmp
faddl
hlt
faddp
test
mov
or
test
out
fcom
xor
cmp
out
lock
repz
cmc
out
xchg
in
out
repz
shr
cld
sti
cld
enter
icebp
rolb
ret
orl
fadd
cmp
ret
cmp
jmp
xor
sar
sarb
in
xchg
in
cli
test
ljmp
out
cli
out
fcmovnbe
int
loope
roll
std
loope
loop
loope
fdivp
loopne
in
hlt
clc
in
xor
std
sti
repz
rcr
idiv
lds
loopne
test
ret
out
aas
cld
repz
cmp
call
enter
frstpm(287
loopne
shrl
leave
shr
shlb
sti
into
fiaddl
mov
fimull
xchg
hlt
cmc
out
out
xor
in
jmp
loop
xchg
test
lret
in
in
repz
xor
cmp
in
ljmp
sub
inc
ljmp
cld
xor
shlb
lret
cli
test
jmp
fpatan
in
cmp
sti
filds
mov
xchg
test
mov
repnz
cli
into
std
cmp
ret
rcl
fadds
mov
int
decb
fsubr
cmp
iret
repz
imul
lret
cmp
add
addl
cmc
out
icebp
out
ret
xlat
fcom
rcl
aas
fcmovbe
xlat
in
xlat
xchg
cmpb
int
fmuls
xchg
fdivs
out
int
ss
fsubr
out
in
fucomip
cmc
add
loope
shl
jecxz
or
out
sti
fcmovne
fiadds
ror
call
or
decb
repz
stc
int
fdivr
hlt
sarb
ds
cli
fstp
jecxz
out
fisttpl
jmp
jecxz
int
divb
cld
into
mov
xlat
mov
out
mov
out
jmp
in
ror
fcmovu
pushl
adc
ror
fsubp
xchg
fsqrt
or
sti
test
sarb
repnz
out
rcl
cmp
cmp
sbb
xlat
jecxz
mov
jecxz
out
cmc
aaa
div
xor
jmp
jmp
aam
shl
shl
aas
rol
testb
mov
out
das
jecxz
sub
xor
repz
ret
repz
testb
call
adcb
add
add
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
leave
fs
pop
push
jle
aas
add
loopne
cmp
loop
leave
out
clc
rcl
jmp
fcmovnbe
out
in
fsubp
mov
test
rolb
xlat
icebp
in
test
stc
clc
sti
lock
call
aad
adcl
out
sub
idiv
in
lret
cli
fdivr
jecxz
hlt
adc
fcmovu
loop
out
or
aam
loop
xor
iret
iret
not
cmp
std
std
fincstp
aam
cmc
fucomip
aam
fucomp
cld
jmp
mov
xor
shlb
cmp
fcomi
int3
stc
jecxz
clc
fcmovnbe
sti
mov
in
cld
mov
jmp
xor
aas
ret
mov
loop
fdivp
loope
lock
jecxz
mov
xor
cmp
xor
icebp
call
clc
lock
ds
aad
cmp
fcmovnu
in
call
out
aad
repz
neg
cmp
cmpb
mov
sti
lret
dec
jecxz
jmp
jmp
repnz
ljmp
ret
mov
fiaddl
out
in
repnz
icebp
sti
in
aam
fidivs
cld
cmp
stc
in
std
cld
hlt
out
int
int
mov
out
fdiv
icebp
jmp
aas
test
rcl
test
sti
loopne
xchg
hlt
xlat
repnz
out
jmp
loopne
loope,pt
loop
loop
test
jmp
call
fiadds
xlat
neg
cmp
cmp
clc
int3
loopne
cmpb
aam
loopne
orl
shll
ret
leave
ljmp
jecxz
icebp
idiv
ljmp
and
test
out
ljmp
rcr
sbb
repnz
clc
hlt
loopne
cld
enter
xchg
ror
sbb
fdiv
int
fdivr
cmp
in
jmp
test
loopne
rcl
jecxz
mov
out
leave
jmp
rcl
rcl
into
clc
stc
cmp
loopne
aas
in
clc
jecxz
xchg
fucomp
xchg
into
xchg
cmc
call
cmp
repz
loope
or
lock
flds
mov
loope
xchg
test
clc
fsubr
clc
icebp
int3
cld
sarb
shl
and
clc
jmp
and
call
loopne
xor
xor
idivl
fucomp
cmpl
sarb
add
hlt
fadds
sub
enter
sti
leave
lret
int
out
out
ds
rcr
mov
loop
loope
test
hlt
in
jecxz
fcmovbe
fdivs
fcmovne
rcr
test
jmp
out
jmp
lret
xchg
sti
in
dec
in
clc
shl
cmp
cmp
loopne
in
cli
clc
and
in
cld
leave
in
mov
orb
enter
call
out
loope
cmc
std
fxch
into
stc
fists
cmc
ljmp
fcomip
sar
aam
icebp
ret
add
xlat
test
leave
cld
rcl
jecxz
mul
out
shl
fcmovbe
leave
int
aas
icebp
ret
in
loopne
roll
lock
ss
cmp
in
stc
out
xlat
ror
fcomip
aaa
testb
test
clc
in
fiaddl
sub
leave
aad
lret
fidivrs
xlat
in
loop
cmp
and
or
aad
aaa
ljmp
in
fdiv
clc
icebp
cld
test
repnz
aam
test
fsub
loope
mov
out
aaa
jmp
clc
fcmovnbe
aam
stc
lock
clc
test
xlat
loopne
call
shr
xor
aaa
aaa
loopne
addb
jmp
jecxz
fildl
sub
stc
enter
out
leave
out
fdivp
sub
cmp
fadd
add
in
iret
cld
cli
jmp
out
sub
fsub
aad
ljmp
out
or
mov
stc
fisttpll
mov
xor
xor
cmp
cld
ror
cmp
ds
cld
leave
idiv
xlat
nop
rcll
push
clc
mov
jmp
ret
ror
ret
rcl
je
repz
sbb
add
xchg
lret
fcom
jecxz
jmp
cmp
int3
fdivr
out
loope
fildl
int
int3
loope
in
int3
repz
out
aad
stc
fcmove
cmp
cmp
xlat
test
std
int3
enter
xchg
xchg
call
icebp
repz
ss
rcl
add
loopne
cmp
filds
xchg
in
into
lret
sti
std
repnz
lret
rcr
addl
out
testb
loop
jecxz
xor
ss
int
jecxz
repnz
fsub
addb
out
in
shr
in
xor
xor
std
repz
adc
ds
in
mov
std
repz
ret
into
fnstenv
lret
fdiv
lock
cmp
in
loopne
aas
jmp
mov
mov
out
xor
mov
into
repnz
aaa
shlb
icebp
cli
test
aam
stc
cmc
ljmp
mov
repz
out
out
stc
not
repnz
sbb
out
test
test
out
out
ljmp
idiv
sub
into
icebp
cmp
rol
cli
xor
rorb
lock
mov
rcr
sub
repnz
stc
repz
fcmovbe
hlt
cmc
fdivrl
sti
aad
and
test
fadd
decb
lock
hlt
fdiv
cmp
mul
mov
mov
enter
fiaddl
test
shl
repz
shl
aaa
into
ljmp
stc
mul
and
jmp
ret
int3
lret
mov
into
rol
divb
leave
sti
ss
shl
iret
fldl
int3
dec
test
fmulp
fcomip
roll
cli
jmp
aaa
in
f2xm1
fidivrs
cmc
repz
cli
testl
ljmp
cld
ss
or
enter
in
mov
movl
clc
lret
lock
div
int
decl
enter
add
sub
in
xor
fmulp
in
repz
idiv
repz
in
std
and
test
or
shr
sti
repz
aad
aad
fdiv
std
std
xchg
addb
jecxz
and
jmp
cmp
aaa
shlb
lret
clc
into
loopne
loopne
cmp
fdiv
out
mov
mov
test
lds
int3
xor
cmc
std
lret
leave
stc
loopne
xlat
ss
inc
test
sti
iret
fucom
std
lret
in
imul
cmp
enter
repz
out
repnz
cli
hlt
jecxz
out
jmp
out
rorb
xor
les
aas
icebp
sbb
shl
out
sti
clc
sub
xchg
icebp
int3
ljmp
out
fcmovu
dec
int3
shl
rcl
in
stc
ds
in
iret
nop
cmc
aam
xor
loope
cmp
cmp
aam
ror
lock
fldl
jmp
out
mov
out
xor
icebp
cli
leave
idivl
in
idivl
or
out
out
lret
out
mov
into
fdivrp
xor
div
out
idivb
cmp
fstp
fcom
loope
incb
sti
fildl
ret
ljmp
in
idiv
fsubr
jecxz
sar
repnz
neg
mov
sub
ror
int
out
test
cld
neg
fdivr
cmp
cld
std
mov
out
in
stc
out
fld1
ror
clc
xor
fidivrs
shl
fcmovb
leave
fcmovnbe
cld
fstp
loop
in
sti
jecxz
hlt
out
lret
leave
aaa
cmp
out
fdiv
lret
loopne
repnz
ret
jecxz
mov
ljmp
xor
repnz
sar
std
ljmp
add
hlt
aas
movb
test
repnz
cli
rcr
fcmove
rcr
repnz
icebp
sbb
hlt
fimull
fucomip
xchg
in
imul
jecxz
lock
ds
or
out
shl
mov
out
mov
repnz
xchg
xor
jmp
int
vpaddusw
fstp
pop
mov
outsl
outsb
cmp
ficomps
jle
add
in
in
lret
rcl
testb
aad
into
call
mov
iret
xor
xor
stc
sbb
clc
aas
fcmovbe
xchg
sbb
out
loopne
mov
in
lock
xor
xor
cmp
cmp
sar
out
cli
ret
test
jmp
out
xchg
in
cmc
int
shlb
in
out
in
clc
stc
xchg
test
in
out
fprem1
ljmp
cmp
cmp
add
enter
repnz
int3
mov
rol
loop
out
hlt
fxch
fldl
call
fisttps
repz
iret
jmp
sti
neg
aam
fdivp
sbb
cmp
ffreep
incb
in
loop
in
fsub
enter
xor
icebp
clc
repnz
aad
sub
ljmp
enter
fsubrp
cmc
aad
out
xor
cmp
fcomip
aaa
rcl
test
cmc
shl
loope
call
lret
mov
in
out
aam
int
cs
clc
cmp
cmp
rcl
rcl
fcomi
cmp
std
mov
int3
mov
cmc
out
cmc
repnz
iret
in
int
shl
fiaddl
fcom
jmp
fucomp
leave
mov
loope
jmp
out
ret
fsubr
aaa
lret
iret
jecxz
ds
cli
shl
fcmovbe
fcmovnb
movb
in
out
clc
cmp
into
aas
fsubr
rcr
cmp
leave
fiadds
enter
loopne
int
iret
sub
cli
sarb
cmp
test
jecxz
roll
xchg
fdivs
shl
ror
aaa
cmp
test
sarl
cmc
cli
repz
sti
fildl
iret
repnz
iret
ljmp
aad
lret
rcr
out
sarb
in
xlat
jmp
out
shr
lock
enter
fstpt
aam
sti
repnz
fdivr
not
adc
out
out
orb
das
xor
into
aaa
cli
in
neg
fistpll
aad
fdivr
in
f2xm1
lret
dec
cld
in
ljmp
xlat
into
loop
fnstcw
cld
add
loope
fst
call
rcr
jmp
xchg
ret
out
fmul
stc
cmp
jecxz
in
cmc
add
leave
enter
xchg
repnz
lock
aaa
fstp
clc
out
aaa
ror
in
faddp
loopne
repz
lock
std
les
iret
rcl
call
xor
icebp
aas
rcr
rol
lock
test
iret
call
int
jmp
icebp
idiv
cmp
sarl
ffree
clc
stc
cld
fdivp
in
loope
mov
loop
lret
in
loope
jmp
aaa
shl
out
mov
sti
aad
sti
lret
jecxz
cmc
sub
aaa
ss
hlt
cld
cmp
cli
and
orl
xchg
loope
aam
repnz
lret
jmp
lret
hlt
aad
sti
aas
cmp
faddp
orl
fildll
clc
fdiv
in
sarl
imul
int3
shl
sar
mov
jecxz
iret
fcoms
in
jmp
sarb
ror
cmp
test
xlat
repz
lret
imul
orb
iret
cs
ljmp
sar
into
repz
sti
mov
xchg
std
xchg
jecxz
out
iret
jmp
int
sarb
in
cmp
out
ret
test
fstp
xchg
in
jmp
aam
int
lock
xlat
cld
into
sarl
cmp
lock
ret
loope
mov
out
cli
mov
lret
adc
sarl
in
ljmp
shl
cmp
rorl
xchg
fst
xchg
sti
movb
sti
out
stc
test
shr
cmp
out
cld
ret
mov
jmp
ftst
fadds
adcb
idiv
cmp
fcmovnu
cmp
sti
ret
stc
rcr
jmp
clc
jmp
fldl
add
jmp
fcom
xlat
push
xlat
outsb
rcrb
jle
aas
add
fnstenv
stc
std
ds
aam
int
test
fcmovnbe
ror
jmp
lret
mov
sti
cld
out
call
shr
leave
lret
xlat
idivl
cli
xchg
idiv
loop
out
in
call
fisttps
cli
xlat
fucomi
ss
aad
sub
fadd
cmpb
not
out
in
mov
in
aas
cmp
icebp
jecxz
jmp
jmp
xorl
cld
rcr
lds
fninit
test
iret
out
idiv
repnz
int3
sti
cld
shl
cmp
ffree
aad
mul
loop
fcom
xchg
mov
cmp
fdivl
aas
aad
shl
ret
cmp
rcr
cld
clc
lea
out
xchg
loope
aam
cmp
out
fcomip
cmp
cmp
in
loop
repnz
enter
loop
or
rol
cmp
int3
repz
sar
xchg
xchg
incb
xchg
in
enter
cmp
lret
clc
ds
adc
jmp
and
lret
xlat
rcl
stc
fnop
shlb
filds
clc
cmc
test
loope
lret
add
jecxz
sbb
lock
sub
into
into
xor
loopne
mov
lret
call
ljmp
in
cmp
sar
aam
loope
rcl
in
fsub
mov
icebp
shl
test
ljmp
jmp
aas
xor
jmp
call
ljmp
sti
fcmovne
neg
rcr
call
stc
fmulp
in
xor
in
xor
enter
push
div
cmp
cmp
ret
lret
nop
jecxz
std
mov
into
in
xor
lret
cmp
xlat
sub
test
aas
and
sbb
call
in
lret
loope
loop
testl
adcb
out
in
xor
repnz
cmp
addl
fcmovnu
mov
mov
in
jecxz
xchg
nop
xchg
test
in
cmc
xor
neg
fnstcw
out
cmp
cmc
lock
mov
test
into
out
mov
lret
icebp
shl
not
clc
int3
aam
repnz
repz
hlt
movb
hlt
jmp
in
repz
lret
sti
lret
sub
adc
call
mov
fcmovbe
mov
mov
fsubrp
lret
fcmovb
repnz
iret
ret
test
cmp
xchg
jmp
stc
xlat
orl
out
clc
xor
out
xor
int
xlat
ret
rolb
mov
icebp
hlt
not
fidivl
aas
divb
aam
fdivr
cli
in
jmp
ljmp
xchg
xor
sub
clc
cmp
fcom
std
mul
cmc
into
frstpm(287
test
fld1
mov
out
out
std
out
icebp
ss
xor
cmp
out
idiv
in
loope
mov
rcl
mov
out
call
xchg
xor
xlat
into
shl
aas
loope,pt
test
rcr
rorl
fcoms
xchg
in
iret
into
out
iret
lret
jmp
fdivrl
cmc
cmp
cld
fcmovb
xor
test
mov
sub
out
fcom
cmp
add
aas
std
lret
fmulp
stc
cld
lret
xchg
in
shr
aad
shl
clc
leave
cmp
push
repz
std
xchg
lea
xor
shr
cmc
out
aad
sarb
and
ljmp
mov
ljmp
icebp
icebp
xor
imul
and
loopne
loopne
ret
jmp
sub
fnstenv
fiadds
mov
aad
lret
fimull
xor
xor
leave
cmp
jmp
faddp
int3
stc
clc
repz
test
mov
jmp
mov
sti
cmp
vaddsubps
test
add
push
push
mov
jmp
rcl
rol
rol
rcl
mov
flds
cli
pusha
popa
jle
aas
add
xor
in
hlt
cmp
cmp
xorb
leave
and
loopne
stc
sti
xchg
ljmp
aaa
repz
ds
loope
stc
fcmovne
fsubp
out
in
ljmp
fxch
imul
into
shr
cmp
leave
jecxz
int
out
fdivr
cld
cmp
sub
loope
mov
lret
out
leave
cmp
aad
rol
repnz
mov
lret
xchg
sarl
repz
aam
cld
loopne
mov
jmp
nop
rorb
sti
cmp
out
ror
in
fcmovnbe
cmp
not
test
test
test
int
in
xchg
aaa
rcl
ljmp
ds
loope
out
test
sti
jmp
in
jmp
mov
out
out
into
aam
ds
mov
in
addl
addl
xor
cmp
int3
shr
jmp
idiv
xchg
cmp
sar
mov
rcr
in
int
shl
out
out
cmp
fucomp
xor
sti
std
fst
cld
orb
mov
test
fld
out
xor
in
aam
cld
fdecstp
out
rolb
ret
addb
sub
ss
stc
cmp
add
icebp
lock
cli
lret
aam
movb
call
aam
int3
repz
leave
in
aam
fst
stc
in
loop
xlat
fucomi
stc
loop
lock
aaa
sti
xor
xor
loop
stc
fld
ret
ret
xlat
jmp
xchg
loope
icebp
cli
into
xchg
sub
sub
stc
out
ss
cmp
cmc
ror
loop
test
call
call
repnz
xchg
ljmp
repz
shl
lret
repz
rcr
decb
and
mov
addl
out
sub
fnstsw
fcomi
cmp
loop
addl
shl
xor
in
ds
sti
rcr
lock
ftst
fcmovnb
rcl
std
in
std
mov
in
repnz
out
leave
iret
xor
xlat
lret
shr
iret
ret
fdiv
mov
jmp
mov
cmp
rorl
fucompp
enter
lock
fdivr
into
fnstcw
add
jecxz
in
and
std
xchg
call
cld
xor
fiadds
in
cli
idiv
fldl
xchg
in
icebp
cmp
fcmovnbe
out
neg
fldl
call
loope
in
call
loopne
shl
ret
cmc
cli
aad
hlt
enter
in
cli
cld
shl
ljmp
in
lret
xchg
fcmovb
iret
icebp
repnz
out
iret
shr
ret
popl
shl
mov
out
rcl
lret
ret
cmp
fcmovnu
aad
in
test
and
adc
jecxz
fcmovnbe
in
std
fabs
loope
shr
icebp
fldl
xchg
in
fadds
hlt
hlt
neg
repnz
cmp
fdivrl
shl
cmp
rcr
ret
cli
in
in
lret
mov
vpand
repnz
cli
jmp
shl
sarb
loopne
clc
repnz
stc
cld
sbb
jecxz
not
fld
xlat
jmp
cli
stc
fadds
orl
jmp
leave
into
out
fdiv
shr
faddl
loope
in
clc
clc
cmc
in
fmull
f2xm1
ror
std
out
sar
xlat
int
ret
rol
aad
test
rcr
mov
mov
in
cs
iret
repnz
repnz
icebp
repnz
cmc
enter
call
shl
call
lret
loope
in
xor
leave
cmp
out
cli
frstpm(287
fcomi
cmp
fyl2xp1
xchg
leave
cld
enter
or
jmp
in
fcmovbe
aas
std
hlt
aaa
xchg
fcomp
ljmp
jmp
nop
lock
xor
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
popa
cmp
and
jle
add
xor
fnstsw
std
ljmp
stc
ljmp
mov
in
aam
aaa
repz
ljmp
cmp
xor
fmull
test
repnz
imul
xor
fldz
push
ror
in
lock
rcl
fildl
int3
loopne
nop
fsubr
xchg
jmp
leave
hlt
leave
lock
ljmp
xchg
leave
iret
xchg
xor
xlat
or
cld
int
xchg
out
enter
repnz
icebp
shl
shl
fptan
fstp
jmp
clc
ret
std
stc
div
faddl
xor
ret
ljmp
sti
loope
hlt
fsub
loope
test
xor
test
mov
out
xor
lret
jmp
int
hlt
aam
cli
rcl
loope
testl
jecxz
sub
sarb
sti
fdivs
loopne
rcl
out
shr
mov
dec
loopne
nop
cld
rcl
shl
sub
shl
into
ss
cmc
iret
repnz
loope
fdivrs
aam
jecxz
jecxz
sti
test
ljmp
int
out
repnz
clc
shl
out
dec
ds
mov
decl
repnz
mov
xchg
iret
sub
fsubr
shlb
hlt
cmp
cmc
out
incl
mov
int
loop
ret
cld
cs
out
sub
cmpb
in
out
mov
nop
int
mov
cs
call
in
xor
fldlg2
and
in
mov
xchg
ss
cli
fucomi
int
xor
rcr
jecxz
cld
repz
xchg
xchg
jmp
xchg
xchg
fstl
cmp
shl
leave
lret
test
jecxz
shl
fprem
jmp
out
std
out
out
popl
ss
repnz
clc
cmc
xlat
test
aas
in
orl
enter
lock
frndint
inc
repnz
hlt
in
cli
fsub
aas
frstpm(287
mov
mul
addb
mov
cmp
cmc
aaa
out
jmp
push
rcr
movb
in
sti
xchg
aam
aaa
fprem1
xor
not
stc
shr
jmp
out
cli
ret
icebp
ret
xchg
fiaddl
mov
faddp
lret
cmp
cmp
ljmp
repnz
out
mov
cmc
mov
clc
aaa
xor
repnz
stc
aas
in
loop
idivl
out
repz
add
ret
ljmp
repz
sub
out
in
xlat
cli
neg
shr
std
out
sbb
cmp
cld
fcmovne
iret
xchg
xchg
xor
icebp
ret
xor
cmp
icebp
fsin
cmc
jecxz
in
mov
repz
loope
fxch
sti
fcmovne
cmp
cmc
lret
std
imul
aad
out
test
fimull
das
call
out
sbb
aad
sarl
incb
std
jecxz
cld
int
out
repz
out
stc
loopne
in
std
roll
aad
test
out
addb
mov
xor
fcmovne
sar
fcomip
out
std
out
into
lock
ffreep
fmul
out
mov
mov
aad
repnz
icebp
aad
fstp
lret
lock
xor
cmp
loopne
in
int3
fldl
out
sub
int3
rcl
in
loopne
test
cld
loopne
aam
xchg
test
call
jmp
out
ss
addb
ljmp
cld
out
jmp
aam
loop
ret
int
jmp
rol
cmp
cmp
ret
fld
enter
xchg
lret
in
lret
fucomip
xchg
out
ret
shl
bnd
fdivr
fbstp
rol
aas
call
mov
cld
repz
loopne
lret
call
cmp
cmp
cmpb
sar
sbb
xchg
jmp
xchg
int
xchg
ror
xor
leave
mov
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
fcomp
cmp
loop
jle
aas
add
cmp
into
ds
aaa
icebp
lock
loopne
idivb
test
out
out
repnz
xchg
lock
cmc
sub
aas
ror
div
cli
out
fld
xchg
leave
mov
clc
stc
out
fmulp
imull
iret
lret
fdivr
in
aad
jecxz
loope
jmp
or
cld
lret
jmp
ss
out
xor
int
test
xchg
int3
fmul
cld
jmp
clc
shl
ljmp
icebp
iret
xor
repz
mov
fmulp
xchg
xchg
sub
cli
stc
aad
out
jmp
in
rcr
shl
flds
mov
xchg
xor
jmp
in
into
cmp
cmp
jmp
stc
fcmovb
in
in
in
lock
xchg
imul
rol
cmp
div
fdivrl
cmp
into
rcl
cli
aad
fcmovnu
add
addb
shl
in
in
out
out
ror
hlt
repz
cmc
cmp
rol
lea
jecxz
mov
aaa
ss
call
lret
xor
call
in
mov
iret
in
mov
out
aam
int
into
out
sti
loopne,pt
cli
cld
xlat
clc
cld
test
orb
rcr
xor
ror
sub
int
inc
ss
cmc
aas
xchg
fldl
jmp
jecxz
out
fincstp
cmc
in
ds
jmp
sti
ret
loope
xchg
xchg
xchg
sub
popl
test
fcmove
shl
ret
shl
jmp
or
sbb
adc
int
ss
cld
sarl
adc
xchg
jmp
out
loop
mov
jmp
lock
aad
xlat
divl
cli
into
lock
ret
fcmovnu
cmc
addb
xchg
mov
test
aad
lret
out
fucom
cmp
ret
cmp
fcomp
out
leave
xlat
loop
jmp
cmp
lock
cld
sarb
int
ret
fucomi
stc
xchg
test
into
xor
int
out
cmp
fdivp
icebp
in
out
hlt
ror
vpmaxsw
out
in
jecxz
in
into
out
enter
and
int
test
faddp
out
out
out
xchg
loop
xchg
out
and
in
jecxz
stc
das
fxtract
fidivrl
or
lock
sbb
faddp
mov
repz
in
xor
cld
cld
dec
mul
imul
hlt
aas
out
icebp
rorl
nop
fucom
xchg
xchg
xor
loope
aam
sti
fcmove
jmp
test
out
imul
leave
ljmp
clc
jecxz
in
sti
jmp
in
and
enter
lea
lret
in
jmp
cmp
aam
roll
xchg
loop
ljmp
cli
in
xor
lret
stc
cld
fdivr
cld
into
test
rol
into
f2xm1
sub
call
in
xor
lret
rcr
cmc
ffreep
test
cmp
jecxz
lret
shl
adc
shl
out
ss
sti
cld
lock
repz
repnz
jmp
in
jmp
sbb
sub
cmp
enter
loop
sti
ret
cmc
aas
loop
repz
in
in
rol
out
out
orb
neg
ljmp
loopne
out
cmp
add
clc
std
int
xchg
and
shlb
cli
cli
rcr
icebp
aas
rcr
fiadds
aad
sti
out
loopne
hlt
lea
in
into
cmp
aas
cmc
shl
shl
loope
out
in
adc
fimuls
in
icebp
repnz
in
aas
shlb
cmp
in
decl
xchg
xor
shl
in
fmul
out
leave
cmp
aad
xchg
in
aam
clc
in
mov
int
shl
aad
xor
out
pop
mov
jmp
aam
fadd
fstp
pusha
shl
push
mov
jle
aas
add
repz
incl
clc
repz
test
out
xchg
xrelease
cmp
cmp
xchg
test
mul
call
mov
cmp
ljmp
cmp
aam
xlat
xlat
ljmp
mov
cmc
lock
jecxz
aam
into
stc
fdiv
cmp
les
aad
std
cli
mov
lret
in
loopne
xchg
xor
repz
in
aad
out
sar
out
in
ror
jecxz
enter
in
mov
into
out
in
aad
ss
out
xlat
xor
repnz
jecxz
lret
call
sbb
out
jmp
das
in
cmp
aam
ss
int3
in
fsub
repz
jecxz
sbb
icebp
fstp
out
out
xchg
in
into
lret
aaa
aaa
jmp
shl
fiadds
leave
ret
lret
into
iret
loop
mov
call
cs
repnz
xor
aam
repnz
out
int3
test
icebp
test
ret
xlat
int
icebp
sar
iret
cmp
repz
adc
loopne
call
cld
loop
xchg
ror
cmp
cli
out
int3
cmp
flds
fcomi
ljmp
jecxz
xlat
out
fstpt
idiv
repz
aad
call
in
stc
sti
mov
int3
nop
divb
fdivr
in
ror
stc
incl
lock
out
in
xlat
fcmovbe
xchg
enter
cmp
enter
cmc
cmp
test
test
inc
rcl
addb
roll
xlat
ss
aas
cmp
ffree
call
lret
int3
mov
test
rol
test
leave
ss
shr
cmp
cld
loopne
loopne
loopne
mov
ljmp
xchg
ret
fdivs
ljmp
loopne
jecxz
roll
jecxz
in
into
std
out
hlt
jmp
out
aad
out
dec
clc
iret
cmp
cmp
fst
and
loop
int
sti
shl
out
div
test
xchg
sbb
xlat
cmc
fcmovb
cli
test
mov
orb
aaa
xor
leave
iret
in
rcr
iret
xchg
clc
dec
loop
iret
ljmp
aaa
cmp
repz
xor
repnz
iret
fidivrs
out
ret
loope
fucomip
jecxz
fistl
sub
div
cld
cld
into
cld
repz
div
fcmovnu
cld
jecxz
sti
mov
std
in
ljmp
fsub
div
jmp
xlat
test
call
out
lret
repnz
mov
fcomp
xor
cmp
sub
cmc
jecxz
fucom
cli
jmp
loop
aad
aad
shlb
repz
jmp
xchg
inc
mul
jecxz
lret
in
out
xchg
int
shll
leave
in
iret
cmp
lock
icebp
int3
idiv
out
repnz
xlat
cmc
loopne
mov
mov
icebp
ret
cmp
repnz
call
aam
mov
jecxz
icebp
iret
dec
jmp
das
cmp
in
xlat
stc
leave
enter
fcmovnu
cmpl
jmp
mov
xor
test
in
into
std
fidivrl
test
fndisi(8087
xchg
cld
std
addb
lret
jmp
ret
shr
call
ffree
sar
ret
clc
ret
test
fucomi
or
fadd
fldcw
ljmp
rcl
in
aam
test
call
decl
sub
xor
sti
call
xlat
out
adc
cli
out
shl
addb
loope
mov
test
in
lret
call
shr
filds
in
ljmp
repz
fmulp
aam
repnz
fucomp
lret
cmpl
ret
ret
fmull
mov
aaa
hlt
fcmovne
in
mov
xor
jmp
fcomp
fistps
je
inc
pushf
std
fs
jle
add
cmc
int3
jmp
aas
cmp
cmp
and
jmp
and
repz
xor
out
cmc
fdivs
int
roll
xrelease
in
ffreep
in
nop
call
sarl
sarl
aad
cmp
sar
rcl
clc
hlt
fisttpll
out
lret
repz
xchg
jmp
cmp
cmp
xor
rol
ss
loope
cld
fdivrp
ret
fucom
lea
repnz
ljmp
out
fiadds
rcr
sti
call
int
loop
xchg
loop
out
out
in
or
adc
lret
fldl
jmp
sti
fcomp
lret
aaa
loopne
inc
xchg
cmp
clc
fprem1
lret
fcmovne
ret
int3
aam
hlt
repnz
rcr
idiv
cmp
cmp
lds
int3
dec
out
out
lret
int3
ljmp
into
idivl
iret
cmp
fadd
aam
fsub
test
aam
lret
shr
loopne
iret
xchg
out
icebp
in
in
fsub
fmul
fistpll
cmp
lock
xchg
fucom
int
cld
mov
cmc
fnstenv
lret
out
repnz
sti
icebp
jecxz
loopne
rcr
rcr
loop
in
cmc
cld
sti
fcmovb
nop
xchg
fst
shl
xor
aad
lret
ror
shl
fld
roll
fcmovne
nop
mov
out
int3
int3
clc
lds
cmp
out
repnz
xlat
into
or
repz
int3
ror
xchg
pop
xor
jmp
xor
out
rcr
xchg
not
cld
test
call
iret
xchg
jecxz
loop
out
sar
xlat
lock
leave
aaa
clc
iret
ffreep
idiv
rol
in
rolb
jmp
jecxz
int
fdivr
leave
cli
lret
icebp
std
icebp
jecxz
loopne
xchg
loop
ret
stc
call
sub
loopne
out
cli
cmp
fdivp
fmulp
cmp
in
xchg
clc
in
loope
mov
out
shlb
out
test
enter
into
shr
aas
ret
repz
cld
std
fstl
hlt
shl
into
lret
cli
jmp
cld
sarb
out
test
stc
call
imul
fxam
in
aad
cmp
not
jecxz
cld
shl
in
loop
mov
test
mov
mov
or
shr
jecxz
int
clc
cmp
imul
shl
fstpt
cmc
cmp
mov
in
lret
std
icebp
cld
rorl
shr
hlt
test
rcl
xlat
incl
jecxz
in
int
out
or
in
in
int
cli
aad
faddp
sti
enter
cmc
xchg
xchg
xchg
shl
shlb
idiv
cmp
not
cmp
int
std
enter
movl
int3
stc
xlat
stc
in
stc
test
shll
rcl
testl
lret
lret
shl
fld
cmp
aad
int3
idivb
in
cmp
fdiv
shl
in
out
jmp
fnstsw
out
adcb
aad
aad
repnz
not
test
ljmp
call
fdivrp
repnz
xor
clc
out
repnz
hlt
cmp
ret
enter
mov
rorb
xor
cmp
fdivrl
shl
cmc
out
fcmovu
cmp
fsubp
rol
fsub
lret
in
in
lret
shl
lret
fcom
addl
rorl
ror
rcl
stc
rcr
cld
adc
test
fmul
fmul
ret
out
in
xchg
aad
lret
xor
fdivrl
lret
loopne
aas
cmc
cli
xlat
test
enter
cld
mov
mul
sarb
repnz
aaa
xor
faddl
enter
test
jmp
into
dec
mov
repnz
shr
cmp
fsubr
cmp
testb
test
ljmp
icebp
fdivp
in
xor
add
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
xorl
jle
aas
add
call
loope
in
xchg
test
clc
jmp
int
faddl
lock
hlt
xor
fmul
aas
loop
in
jmp
xchg
in
call
cmc
leave
enter
fsubp
sarb
not
std
loopne
mov
out
or
xchg
iret
mul
xor
xor
int
repnz
cld
shl
in
jmp
loop
xchg
lock
out
out
idiv
cmp
call
aam
xor
test
xlat
loope
sub
loop
cld
jmp
xlat
out
icebp
cmp
jmp
fyl2xp1
fcmove
cmc
rcl
ret
aam
int
cld
test
xchg
xchg
shlb
rcl
imul
fcmovnu
int
lock
sar
loop
iret
cld
sti
in
xchg
adc
int
shl
jmp
into
shl
not
in
loope
mov
addl
rcl
hlt
jmp
rol
rcr
jecxz
mov
in
jmp
mov
call
fsub
loope
fucomi
xlat
std
test
in
add
rolb
xor
cli
leave
div
lret
shl
lock
jecxz
test
mov
aam
sbb
call
icebp
fnstcw
out
cld
sti
into
xlat
fst
xchg
loopne
lret
mov
rorb
xlat
fcom
stc
enter
sarl
iret
rcl
hlt
aad
clc
aad
loopne
and
xchg
repnz
out
std
cmp
fdiv
cmp
fst
jecxz
cmc
int3
xchg
shr
into
test
aam
fpatan
cmc
ror
enter
lret
fld
cmp
repz
fsubrp
iret
adcb
das
xor
cmp
cmp
iret
hlt
sar
stc
fxtract
sar
leave
enter
lret
sub
lock
in
hlt
xor
jecxz
xlat
ret
ret
xlat
call
out
test
into
and
in
shll
fidivrl
sti
loopne
loopne
stc
test
lds
loope
mov
jmp
in
int
in
shl
int
in
shl
movl
rcll
enter
xlat
loope
fdivrp
icebp
roll
loope
sti
std
mov
imulb
aam
icebp
enter
ds
idiv
aam
mov
out
in
fcmovne
mov
xchg
jecxz,pn
call
into
fcmovu
in
xlat
bnd
fldl2e
stc
sti
hlt
in
xorl
imul
ljmp
rcr
cmp
adc
jecxz
lret
mov
in
ljmp
fnstcw
loop
aam
in
enter
out
shlb
ret
ret
in
icebp
aaa
clc
fiadds
faddp
in
faddp
out
enter
mov
rol
sub
loop
sarb
cmp
into
icebp
ds
cmp
clc
shl
lret
std
xchg
mul
enter
xchg
out
enter
repnz
stc
aad
cld
int3
int3
cmc
loopne
cmp
roll
cld
mov
out
call
cmp
cmp
aaa
xlat
fnstcw
int
out
into
loopne
fadd
mov
enter
rcr
int3
icebp
loop
loopne
xor
les
jmp
cld
cmp
aas
loopne
ffreep
loope
sar
xlat
xchg
enter
xchg
xchg
out
xor
cmp
into
repz
fsin
jecxz
xlat
cmp
jmp
fstl
ret
xlat
out
jmp
cmp
cld
cmp
rcl
mov
loopne
fmuls
das
das
out
out
cld
lret
aaa
cmp
clc
shl
xchg
ljmp
fadds
iret
lret
shl
ss
out
std
leave
fiadds
xchg
lds
out
decl
sub
int
in
out
ds
fcom
aad
sti
loopne
adc
idiv
fsts
rcll
fdivs
hlt
in
xor
jmp
int3
rol
aad
pop
pop
movsb
or
aad
pop
out
jle
aas
add
repnz
ds
jecxz
cli
cmp
lret
mov
rolb
sub
ds
ljmp
icebp
stc
jmp
addl
shlb
das
hlt
sti
int
ljmp
mul
xchg
cmc
sar
iret
xchg
jmp
cmp
stc
jmp
cmp
std
shl
jmp
in
mov
loope
lret
clc
xor
aas
in
stc
in
loop
loopne
roll
sbb
sub
mov
fdiv
fldpi
cmp
ss
aas
rcl
aad
fcmovnu
sub
lea
sti
in
xor
cmc
out
leave
les
mov
cli
enter
sub
xchg
ret
lret
icebp
cmp
std
add
fiaddl
cmc
movl
in
hlt
rolb
les
idiv
leave
idivl
in
aam
rol
sar
mov
int
clc
cld
xchg
sub
xchg
xor
aad
cmc
ljmp
ret
aas
lock
clc
fcmove
mov
shl
out
in
fdiv
loop
fcomi
aaa
aam
cmc
or
clc
leave
out
lea
subb
repnz
in
rcl
cmp
jecxz
xrelease
jecxz
rolb
sarb
fcmovne
out
fnstenv
repnz
loop
out
out
mov
mov
faddp
cli
ljmp
mul
ret
out
rcl
ds
lret
fidivrs
add
sti
filds
call
xor
repnz
sarb
out
ret
xlat
std
ret
neg
loop
fucomi
jmp
clc
in
sti
fdivs
leave
fstp
cmp
iret
iret
fdiv
out
xchg
decb
repnz
jecxz
repz
ret
rcr
imul
stc
cmp
loop
ret
fadds
test
out
fiadds
xlat
sar
in
loopne
int
lock
repz
test
xlat
cld
iret
filds
repz
int3
cmc
test
stc
sbb
roll
idiv
test
adcb
ret
iret
xor
in
call
divb
ret
leave
fucomp
mov
out
loopne
xchg
lock
sub
out
aaa
xlat
cld
ffreep
std
aam
push
clc
xchg
jecxz
fsubr
call
icebp
mov
xlat
cli
out
ds
out
xlat
loopne
loopne
fpatan
enter
loopne
out
jmp
repz
fldcw
cli
cld
fdiv
out
ss
les
hlt
cmp
out
mov
leave
in
fmull
div
int3
iret
out
aad
jmp
repz
or
leave
out
rorl
hlt
into
aad
stc
fdivs
ror
iret
into
cmp
jmp
int3
in
stc
cld
int
in
in
xchg
enter
ss
enter
xor
sub
mov
sti
xlat
lea
std
mov
xor
ret
test
cmpb
call
call
in
loope
cmc
call
out
shl
int
lret
stc
cli
fndisi(8087
aad
ffreep
stc
cmp
int3
push
fimull
out
lret
cmp
hlt
cld
loopne
xlat
fistpll
faddl
xchg
hlt
shl
dec
out
iret
in
std
cmp
lret
fninit
fildl
fsub
mov
test
enter
ror
fcmovne
xor
ss
hlt
icebp
xor
dec
out
loop
not
into
enter
xor
ss
ret
cmp
test
out
in
int3
mov
xor
cmp
out
rcr
sar
cmp
idiv
xor
repnz
fxch
leave
iret
sti
xchg
sbb
mov
hlt
test
aaa
int
jmp
iret
aam
call
mov
into
mov
fimuls
xlat
int
fnstenv
or
add
add
ret
into
sarl
rol
rcl
ja
rclw
jle
add
ds
sti
shl
out
lret
std
lock
incl
ss
cmp
cmc
jmp
ror
xlat
mov
int
in
fmull
cli
ss
ljmp
sarl
xchg
orl
xchg
int3
cmc
loope
out
imul
fucomi
fcmovnu
fldpi
stc
out
ror
in
sti
test
jecxz
sti
int3
stc
test
orl
cmc
out
fnstsw
repz
cld
test
cli
ret
stc
out
lock
into
roll
repz
f2xm1
aam
cmpl
not
and
fsubr
lock
mov
repz
repz
in
cli
out
enter
shl
les
test
lret
mov
xchg
iret
aaa
xor
fcmovne
in
in
cmp
fst
clc
hlt
cmp
sar
mov
in
cld
jmp
lea
aam
aam
clc
fdivrs
aas
std
ret
in
rcr
loopne
in
mov
adc
lock
les
shr
in
out
sar
jecxz
fcmovu
repz
ffreep
int
mul
shll
in
sti
fdiv
clc
cmp
jecxz
cmc
fadd
call
xchg
lret
into
xor
sti
in
fmul
repz
cld
jecxz
fsubp
std
call
orb
addb
ss
shlb
cld
in
ds
into
jecxz
cmp
test
mov
lds
xor
lret
int3
aad
fidivrs
cmp
out
cmc
xlat
test
in
in
in
nop
cmc
ficoms
xor
into
xlat
enter
aam
loope
fchs
cmp
xchg
repnz
rol
aam
fdivrp
jmp
rcl
loope
aad
int3
lret
loop
out
aam
repz
leave
in
int
in
imul
sbb
sarb
fildl
out
leave
rorb
shrl
ss
cmpb
enter
or
ljmp
icebp
out
int
xor
cli
iret
cli
cmp
xlat
loop
fidivrl
icebp
cli
repz
fldl
call
in
rcl
int
jecxz
xor
ljmp
idiv
fdiv
stc
out
mov
in
and
shr
test
imulb
clc
jecxz
clc
sti
ljmp
aas
xchg
aad
ds
mov
rol
xchg
aad
sti
cmp
out
repnz
cmp
out
addb
xlat
std
clc
iret
in
lock
ljmp
xor
idivb
shl
repnz
in
ljmp
rcll
xor
sar
xor
out
sbb
cmp
addl
call
in
repz
xor
in
cmp
cmc
ss
ret
fstp
in
clc
loopne
jmp
loopne
loopne
sar
out
shl
rcr
in
rcr
hlt
lock
leave
frndint
ret
call
loop
in
in
sub
out
cmp
in
cmp
sti
jecxz
test
ret
lret
mov
xchg
aad
int
in
out
iret
aad
int3
sar
loop
test
clc
rcr
lret
clc
xchg
ljmp
fcom
aam
stc
shr
hlt
lock
clc
adc
ret
xlat
std
loope
cld
into
rcl
out
shl
repnz
aad
rcr
into
sbb
out
sbb
nop
mov
mov
ret
loop
fadd
stc
int3
xor
loopne
fcmovnbe
cmp
loopne
and
in
cld
nop
out
in
in
sti
xlat
lret
cld
fcmove
hlt
aad
in
ret
cmpl
inc
fcmovnb
stc
and
loopne
loope
out
repz
out
xlat
fst
cmp
cmp
sar
int
in
fiadds
mov
in
in
shll
ret
rcl
fcmovnbe
ss
in
int
stc
sar
xchg
in
lret
out
test
add
enter
cld
cli
rorl
je
mov
mov
jmp
leave
aad
movsb
inc
jb
xchg
jne
push
push
add
sbb
clc
aam
test
loope
repz
xchg
xorl
cmp
cld
aad
into
fistpll
cmp
lret
in
fiadds
shlb
cmp
out
aas
ret
jecxz
repz
mov
loop
shr
enter
xor
fmul
cmp
int
loop
adc
loopne
sti
test
lret
jecxz
rcl
lret
repz
adc
cmp
ss
xlat
xchg
std
jecxz
lock
nop
repz
lds
in
in
std
aas
xlat
lock
fldl
fld
test
jecxz
jmp
out
lret
rcr
cmp
imul
lret
cmp
out
cli
shl
loope
ljmp
in
sub
rcl
enter
sarl
repz
ds
ret
nop
xchg
repz
in
xchg
shrl
int
out
iret
aaa
rcl
cmc
test
ret
xchg
mov
lock
and
out
int
in
cmp
xor
loop
shl
rcl
test
loope
fstp
ljmp
ror
hlt
repnz
lret
div
lock
out
cmp
clc
fdivr
add
aad
fnsetpm(287
call
orl
sub
into
iret
cmp
test
aas
fcomi
loopne
sti
test
iret
int
lock
lret
loop
ss
cli
rol
stc
lret
shr
lock
and
fdivr
clc
loopne
rclb
sub
out
cli
int
fyl2x
ret
rcl
cmp
ret
loopne
leave
aam
out
nop
mov
leave
fdivp
lock
jecxz
aaa
int
fcom
cmp
cmp
loop
shl
mov
fcomip
enter
cld
in
icebp
fildl
loop
das
lock
ds
ffreep
cld
mov
loop
xchg
out
in
in
fnstcw
aaa
aam
in
fdivrp
cli
shl
xlat
out
aas
repnz
mov
xchg
leave
shr
div
aad
adc
ffreep
not
fdivr
fmuls
out
fidivs
in
xor
fst
loopne
aam
cmp
ds
in
mov
in
jecxz
shl
lea
fcmovnbe
xor
jecxz
ret
xchg
dec
mov
test
mov
mov
in
loope
lret
repz
ss
cmp
fld1
mov
into
aad
fadd
enter
repnz
shl
int3
lock
aad
shl
mov
fstp
int
call
cmc
xor
shr
lock
cmp
cmp
test
repz
lret
ret
ret
out
fucomi
in
nop
loopne
into
xor
shl
sti
cmp
int
fsub
fcomp
add
fucom
test
shr
fdiv
out
cli
int3
repnz
hlt
and
fsubp
or
in
loope
out
cli
loop
xchg
loop
aam
cmp
fidivrl
cmc
cmp
out
ret
test
test
in
idiv
icebp
loopne
loope
in
cmp
cmc
in
into
cld
out
cmp
not
ret
ret
repz
cld
out
sub
lock
xor
xor
leave
clc
fcmovu
cmp
aad
out
mov
repz
out
mov
xor
jecxz
aam
call
jecxz
in
cmp
loope
out
sub
ficoms
aaa
leave
das
jmp
or
addb
xchg
loopne
jmp
mov
call
icebp
out
shl
into
cmp
jmp
and
out
xchg
out
std
xchg
aad
shr
cmp
cli
aas
loopne
cmp
ret
aad
aad
vpmaxub
test
jmp
ror
mul
iret
sub
in
aam
aas
sbb
add
flds
cld
iret
mov
out
icebp
out
aaa
out
ret
idivl
int
ss
xor
test
jmp
out
faddl
xor
cmp
jmp
push
or
add
test
sub
add
add
add
into
aam
aad
fst
stc
hlt
stos
xchg
hlt
inc
mov
jle
add
hlt
cmc
cmp
aam
test
cmp
cli
xchg
xor
loop
xor
xor
hlt
int
ss
lock
lock
xchg
cld
ret
xchg
or
mov
lea
jmp
xlat
into
sti
not
fdivrs
into
fstp
test
enter
out
sar
xchg
loop
iret
out
out
int3
fcomi
fcmovne
cmp
aam
rol
jmp
jmp
rcll
call
aad
in
shl
clc
xchg
icebp
hlt
jmp
cli
mov
loope
and
out
sar
aaa
divb
hlt
sti
fcmovb
repnz
xlat
cmp
test
cld
xor
loopne
mov
aaa
sti
lret
aam
fabs
fidivrs
int3
xchg
movl
fcom
lret
stc
clc
aas
cmp
xchg
rcl
jecxz
decb
mov
aam
int3
in
in
out
int
fdivr
cmp
repz
xchg
shl
rcr
stc
lret
icebp
xchg
test
mov
shr
aad
cmp
aam
out
shl
ret
rol
out
fsubr
test
adcb
xor
repnz
std
lret
sti
into
fdivr
in
jecxz
ret
xlat
aad
idiv
out
sar
in
mov
lock
cmp
fdivrp
cmp
fdiv
lock
test
ror
jmp
jmp
repnz
leave
ljmp
aas
std
cmp
sbb
std
loope
dec
in
sti
mov
in
repz
in
sbb
cmp
aas
test
loopne
cld
fimull
mov
imull
loop
cli
out
cmp
fsincos
xor
aas
hlt
vpaddusb
clc
mov
mov
in
mov
xor
clc
xor
in
call
fdivr
shl
fdivr
cli
jecxz
fcomp
iret
ret
lret
enter
jmp
xor
clc
rolb
std
clc
sti
out
clc
in
out
nop
in
xchg
out
mul
xor
lret
rcl
rol
aad
repz
call
out
lret
in
xchg
mov
xchg
xor
ss
cmp
cmp
sar
aad
enter
mov
cli
fisttps
sub
shl
ret
out
fst
loopne
loopne
cmc
fsubp
sar
cmc
mov
fldl
xchg
cmc
repnz
out
in
clc
out
ljmp
shl
aas
lock
mov
enter
loope
leave
sti
iret
decl
fsubr
repnz
cmp
ss
cmc
lock
sti
cli
fsubr
clc
stc
test
sub
cmc
mov
shr
sti
cli
aad
xlat
adc
jecxz
xchg
fcmovnb
int3
sub
lret
adc
hlt
ffreep
das
in
in
cmp
xor
cmp
sbb
xor
aas
enter
jmp
fdiv
orl
cmp
enter
cmp
icebp
cmp
xchg
out
jecxz
repnz
iret
mov
xor
cmp
or
aas
fcos
cmc
shr
aam
leave
lock
rcr
test
ljmp
fstp
jmp
rcl
test
aad
repnz
std
cli
fsubp
test
mov
idiv
aaa
out
icebp
stc
out
fcmovnbe
hlt
sar
leave
adc
loopne
decb
loopne
loop
div
enter
in
fxch
aad
cmp
std
jmp
loop
jecxz
lock
jmp
call
enter
in
in
mul
stc
fxch
sti
not
fst
filds
xchg
out
xlat
jecxz
stc
fcmovu
enter
fcomi
lock
not
test
mov
jecxz
repnz
out
out
test
int
ret
incl
loopne
nop
icebp
std
in
lret
xchg
mul
fldcw
aaa
fdiv
fcmovbe
ror
cmp
lock
hlt
stc
sbb
icebp
dec
into
cld
int3
cmc
ret
hlt
aaa
sarl
std
cmp
cmp
call
adc
xor
xlat
aad
ror
shl
rcl
mov
movsbl
jmp
aam
aad
fstp
movsb
ficomps
pusha
ljmp
jle
out
shl
in
aas
movl
in
aaa
enter
jmp
aad
fdiv
cli
loop
mov
shl
addl
int
fidivs
loop
sarl
xor
lret
cmp
fmulp
repz
icebp
adc
xlat
test
mov
fmulp
mov
cmp
enter
lock
loop
stc
fcmovb
cli
out
addb
in
aam
out
in
stc
jmp
cmc
loopne
in
xchg
neg
in
out
fdiv
mov
xor
int
cmp
cld
xlat
xlat
sti
std
fsqrt
aad
mov
jecxz
sti
call
xchg
loopne
xor
lret
out
cli
aad
xor
aad
loop
sbb
cmc
test
fldl
rcl
not
xor
xlat
cmp
enter
cld
sarb
loope
cli
clc
sbb
fxtract
stc
fmull
shl
int3
hlt
jmp
aas
jmp
ds
call
mov
rcll
into
xor
cli
lret
aad
loopne
into
or
jmp
out
lret
fmulp
int
loope
test
fdivp
cmp
clc
test
rcr
cmp
xchg
mov
mov
sub
int3
out
enter
cmp
cmp
icebp
sti
shl
loop
out
into
out
orb
in
sti
hlt
shr
shr
aam
cmp
ret
loopne
aas
sbb
enter
loop
faddp
std
xchg
lret
call
cmp
fmul
xor
jmp
xor
fisttps
call
xlat
rcr
cmp
ds
jecxz
clc
mov
cmp
test
cld
test
aad
xor
aaa
out
icebp
aam
repnz
clc
hlt
into
bnd
clc
std
out
iret
in
jecxz
nop
aam
call
cmp
jmp
adc
orb
jmp
loopne
cmp
sti
repnz
aam
sarl
ror
aad
ret
aam
ljmp
int3
leave
out
jmp
aaa
int
idiv
aas
rcr
ds
idiv
hlt
jmp
mov
jecxz
xchg
and
enter
hlt
icebp
in
rcr
repz
testl
leave
aad
std
loopne
lea
in
shl
sti
ds
cmpb
into
xchg
rorl
loopne
lret
orb
lret
call
icebp
sti
ffree
aas
stc
fldpi
enter
clc
in
xchg
xor
imul
fcomp
cmp
ss
in
sti
test
in
cmp
out
xchg
call
rcl
lds
repnz
xor
test
sbb
sti
iret
cmc
clc
out
enter
call
rcl
repnz
incb
repz
in
in
jmp
ss
ds
ds
rcl
fmull
xchg
into
lock
cli
into
ror
lret
rcr
cmp
fstp
fcomi
sti
shl
in
std
stc
cld
lock
test
cld
into
cmp
clc
jmp
repnz
out
cld
jmp
jecxz
incl
stc
xlat
cld
cs
cmp
cmp
clc
addl
repnz
loope
int
cmc
frndint
aaa
xor
out
fcomi
hlt
in
mov
in
lret
cld
call
ss
out
shll
into
fdivrl
flds
fucom
mov
cmp
ljmp
in
loope
out
cmc
cmp
call
cld
out
mov
aaa
cmp
cli
xlat
sarl
div
cmc
cmp
loope
aam
incb
in
pop
cmc
mov
xor
out
stc
jmp
int
aaa
repz
in
fadds
xchg
nop
out
adc
cmc
ror
out
clc
fidivrl
in
fnstenv
shr
add
add
lret
enter
int
cltd
movsb
imul
movsb
xlat
lret
adc
aas
add
in
sar
and
dec
call
ljmp
aad
int
clc
fndisi(8087
clc
aas
test
fadds
into
fmull
jmp
xor
aad
leave
aaa
aam
out
fnstcw
rol
cmc
int3
test
call
faddl
aad
ret
neg
fdiv
cli
jmp
lret
in
in
mov
icebp
cld
lret
fcmovu
shl
shl
xchg
ljmp
repz
xchg
ljmp
rcl
int3
in
ljmp
idiv
in
xor
cld
lock
out
loopne
loopne
imul
out
xlat
std
clc
fidivrl
aad
cld
out
loope
out
in
into
stc
iret
xchg
fsubp
xchg
fmul
xor
iret
idiv
aas
int3
shl
into
ret
iret
mov
jmp
mov
icebp
in
xlat
divl
fnsave
loope
test
iret
sub
mov
test
test
xor
in
out
lret
cmp
idivl
loopne
out
call
mov
out
test
shl
xor
xlat
cli
sti
fcmovnbe
out
stc
cmp
aad
xor
out
fmulp
leave
nop
filds
shll
cli
idivl
hlt
repnz
repnz
cmp
ljmp
leave
orl
lret
clc
ds
sti
sti
in
rcl
rcl
jmp
cld
mov
jmp
fdivrs
repnz
aam
std
fadd
ffree
lea
in
loopne
in
jmp
divl
idiv
neg
repnz
lock
ss
clc
in
ret
iret
loope
int3
sub
leave
enter
ljmp
cmp
lock
hlt
shl
call
fmulp
enter
aad
rcl
cld
mul
mov
jecxz
nop
das
test
lret
int
cli
dec
sar
out
sub
test
idiv
nop
shl
mov
out
vpsubq
lret
loope
add
loopne
mov
mov
fldl
xchg
call
in
jecxz
aam
lock
cmp
jmp
ljmp
aad
in
repz
xor
aam
repz
ret
loopne
xchg
hlt
sti
xlat
jmp
out
dec
loopne
test
enter
in
in
stc
lret
ljmp
ret
int3
aas
test
xchg
xchg
and
cmc
repz
idiv
fcmovb
int3
in
hlt
clc
ljmp
xchg
ljmp
lret
lret
lret
lret
hlt
fnstcw
loopne
stc
clc
mov
into
adcl
xlat
in
clc
fdiv
int
repz
out
hlt
mul
clc
lret
mov
ljmp
aam
cmp
inc
sar
aad
jecxz
cli
and
cli
shr
mov
int3
enter
cmp
cmc
loopne
hlt
sarl
int
sar
fsubr
lret
fdiv
sarb
xor
cmp
loope
lock
repz
mov
call
orb
rol
out
cmpl
xchg
ds
les
decl
mov
cmp
not
sti
repz
fneni(8087
decb
fisttps
jmp
call
int
not
in
movl
lock
mov
fdiv
lret
out
sti
stc
int3
cmc
rcr
loopne
xchg
roll
flds
aad
sarb
cld
clc
ljmp
rcr
mov
std
cmpb
fdivr
test
enter
mov
sub
lret
fcmovne
shr
ljmp
and
sti
loopne,pt
lret
leave
loopne
nop
in
mov
loop
out
cmp
in
call
xlat
add
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
aad
loope
leave
cli
mov
jmp
in
iret
mov
int3
in
cmp
ror
in
loop
shl
xlat
sbb
xlat
out
mov
jecxz
jmp
cmc
xor
xor
movl
vpminub
fists
in
leave
out
xor
hlt
fcomip
clc
in
rcr
aaa
cmc
cmp
cld
jmp
lret
in
test
aam
cmc
stc
aam
aaa
fdivrp
loopne
jmp
into
aad
hlt
fiaddl
mov
xor
out
cmp
cli
sti
div
std
cmp
incb
int3
cld
in
mov
call
shr
cmp
shr
std
out
shl
aad
sbb
xor
mov
test
icebp
out
xchg
mov
xor
aaa
xor
repnz
jmp
hlt
sarb
out
jecxz
lret
xchg
cmp
loop
in
xor
in
rcl
fstp
cmp
rolb
lret
mov
test
orl
xor
std
clc
cmp
aaa
fcmovb
fdivrl
sti
rcl
rcl
call
orb
sub
rol
std
aaa
clc
fidivrl
cmp
cli
shl
mov
fcmove
testl
ret
sti
in
repz
lock
fst
fucomip
cmp
out
mov
xchg
fsubp
lret
in
loop
aam
cmp
ss
rcl
fdivr
ret
ret
fsubp
in
jmp
ror
ret
ljmp
hlt
into
hlt
shl
cld
fst
call
in
ror
xchg
cmc
dec
in
loopne
aad
out
sti
fidivrl
iret
out
repnz
out
repz
mov
aad
pop
in
and
lret
in
loop
ss
rcr
fdivr
fcmove
aad
xchg
add
mov
mov
ror
mov
ljmp
aam
stc
testb
repz
out
filds
sub
fyl2xp1
fnstcw
xor
stc
out
addb
loope
in
fucomip
cli
out
int
idivl
xlat
out
les
ds
hlt
fcmovnbe
ret
sar
mov
in
les
cmc
ljmp
cmp
lret
cmp
roll
ret
stc
sti
ljmp
xor
cli
call
aad
ds
cmc
std
out
out
out
stc
into
test
test
ror
clc
not
out
iret
cmp
clc
imul
jecxz
icebp
hlt
ret
lret
xchg
fmul
out
mov
out
xchg
jmp
out
cmp
aaa
std
cmp
in
clc
cmp
adc
call
mov
shr
ret
xor
cli
lret
fcmove
into
in
iret
test
loop
fcmovu
into
nop
ljmp
leave
cli
fsubr
repnz
loopne
repz
into
out
out
hlt
fmuls
loope
cld
sub
stc
out
lock
cmp
out
cmp
ret
call
xlat
fisttpll
cmc
enter
cli
jmp
cmc
int3
rcl
cli
in
repnz
dec
mov
int3
cmp
ror
ret
cmp
cmp
cld
cld
aam
leave
aad
mov
enter
loop
into
lret
in
int3
fdivp
int
cmc
flds
in
ret
rol
mov
int3
mov
hlt
das
cmc
out
int3
aaa
aam
in
call
int3
aam
out
xchg
sub
test
ror
out
repz
sar
cld
rorb
mov
jmp
aad
icebp
ds
lock
sar
cmc
hlt
out
enter
shl
mov
aad
out
out
lock
ljmp
loopne
xchg
idiv
lret
in
test
xor
aam
in
lret
cmp
repnz
aas
fistpll
in
xlat
clc
in
mov
orb
fadd
call
cmp
fistpll
rorb
test
push
add
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
inc
and
jg
aas
add
std
aam
cmc
test
call
or
in
out
ret
xlat
sub
rolb
flds
test
jmp
sub
fmul
fldl2e
jmp
xor
fcmovnu
out
aad
xchg
enter
mov
rol
call
std
out
int3
in
in
fcomp
add
xchg
incl
sti
icebp
jecxz
loop
rcr
xlat
lret
fucomp
fidivrl
test
cmc
jmp
and
jecxz
mov
repnz
in
jmp
test
rcl
ds
movb
and
jmp
cmp
sub
repnz
aam
xchg
xchg
cmp
jecxz
leave
aad
aam
shll
in
xlat
iret
cld
and
repz
enter
inc
cld
mov
mov
out
aaa
out
out
xor
sti
ljmp
sar
loop
mov
into
nop
in
iret
in
iret
xor
enter
into
hlt
mov
out
mov
jmp
cld
ror
loopne
aad
aam
leave
enter
sbb
fcom
icebp
test
vpaddsb
in
shr
in
jecxz
test
int
ret
int3
jmp
lret
in
xorl
out
xchg
cmp
into
lret
loope
mov
repnz
xlat
xlat
sarb
shl
idiv
in
fucomi
stc
icebp
out
repz
repz
ljmp
enter
ljmp
add
repnz
rol
out
in
sti
mov
mov
loop
fadd
fxch
ss
sti
frndint
fnsetpm(287
hlt
sti
roll
loopne
test
lret
ss
divb
std
hlt
in
aam
ret
cmc
cmc
xchg
jmp
fcmovne
jmp
iret
xor
aam
sti
fcomp
cmp
sar
xchg
repz
lret
out
mov
int
hlt
jmp
leave
call
cmc
out
addb
enter
mov
mov
out
idiv
test
ds
hlt
aas
loop
rolb
mov
mov
xlat
iret
hlt
clc
cmp
cmp
int
incb
in
mov
std
jecxz
stc
cld
mov
ljmp
out
repnz
ss
fidivrl
ret
push
cli
fndisi(8087
aam
jmp
mov
mov
test
out
fidivrl
lock
cmc
ss
sar
aam
test
ljmp
xchg
out
not
xor
shr
ffree
into
in
iret
sarl
loope
loopne
leave
int
decb
xchg
loop
int
out
cmp
ror
ds
not
mov
call
lock
aad
cmp
repz
cmc
lret
aad
iret
out
repz
repz
leave
mov
out
repz
idivb
cmp
lock
jmp
int3
cli
rcl
leave
in
cli
and
mov
sar
mov
xor
call
and
cmp
cmc
loope
in
vpaddusb
cmp
repz
ret
fnsetpm(287
fiadds
mov
icebp
decb
xor
hlt
xor
cmp
leave
in
mov
loope
fucom
int
iret
call
jmp
xor
fsubp
out
clc
sti
add
xbegin
xchg
in
call
aad
out
enter
fldl
iret
std
rol
out
mov
in
mov
loopne
div
cli
ror
fcom
testb
rcr
vpsrad
test
in
lock
out
loopne
xor
ret
fcmovne
in
fdivrs
addl
incb
push
mov
sub
sarb
xor
repz
in
fldl
stc
sti
loop
lret
ljmp
in
cmp
aam
xlat
div
hlt
lea
jmp
ret
ror
aam
mov
cmc
sub
jg
aas
add
aas
icebp
test
leave
fimuls
hlt
sub
aaa
fdiv
xor
repz
addl
or
in
xor
repz
jmp
stc
int3
idiv
repnz
fisttpll
out
fcomip
out
shl
in
sti
shl
repnz
add
cmp
fdiv
mov
jmp
in
fdivrp
xchg
leave
xchg
out
iret
out
rcl
icebp
stc
rcl
cli
fcmove
cli
test
cmp
aad
xchg
cmc
test
nop
out
mov
out
out
out
out
aad
cmp
ds
enter
add
icebp
sar
jmp
hlt
lock
aam
rol
clc
out
std
ret
xlat
incl
fsubr
or
mov
shl
int3
test
xlat
sarl
ss
bnd
aam
rcl
fxch
xlat
in
shl
mov
xchg
xor
aam
lret
xlat
cmp
jmp
rcl
sbb
sti
into
shr
out
xchg
xchg
out
lret
sarl
int3
push
cmpb
add
loopne
xchg
fdivrp
cld
sti
jmp
aad
clc
jecxz
icebp
leave
fiadds
in
out
stc
cmp
call
fists
aad
aaa
rcl
out
aaa
iret
leave
cmp
int3
cmp
ds
mov
int3
aad
jmp
cmc
aad
cmpb
int3
std
cmp
jmp
ficoms
not
leave
out
ljmp
cmp
loope
div
loop
fmul
in
popl
aad
lock
lock
sub
shl
add
ret
lea
repz
shl
imul
cmp
shl
fdiv
cmp
in
sti
test
orl
ss
ss
icebp
aad
sar
loopne
std
repnz
testl
jecxz
xchg
jmp
cmp
jmp
aam
xchg
ffree
ljmp
nop
adcl
leave
aam
in
ror
aaa
cmp
hlt
xor
fmul
sti
loopne
enter
repnz
clc
in
aam
cld
out
iret
int3
cli
fsubp
rol
repz
mov
jmp
out
lock
mov
cs
repz
out
rcr
aas
repnz
clc
std
fcom
fiadds
mov
in
orl
aad
ss
shl
not
cmp
cmc
in
jecxz
mov
mov
xchg
lea
out
xor
call
sbb
test
call
xchg
shr
mov
int3
xor
jmp
leave
sti
out
sti
lret
fadd
in
neg
mov
xchg
ss
cmp
fcom
aam
int3
jmp
ret
icebp
adc
neg
in
iret
cli
xchg
or
shll
sti
div
xor
rcl
fadds
in
out
call
mov
int
fcmovnu
cmp
repz
repz
loope
cmc
or
mov
lea
ror
aad
or
loope
rcr
xlat
repnz
rcl
ret
test
lea
out
sar
xor
aam
cmpb
out
aad
fdiv
test
fcomip
jmp
loope
in
repz
sub
xlat
sar
sarb
mov
fisttpl
ljmp
jmp
fdiv
cmp
test
hlt
fsqrt
xchg
fsubp
and
leave
xchg
icebp
rcll
test
out
fsubrp
out
rcr
test
aam
cmc
jecxz
mov
repnz
in
xor
fcmovnu
cld
sbb
mov
in
vpaddw
iret
idiv
lds
divl
lret
leave
stc
std
cld
in
repnz
loope
std
xchg
out
repnz
repnz
fldln2
fdivr
xlat
jmp
loopne
test
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
jmp
ljmp
xchg
repz
rol
hlt
ss
fidivl
in
int3
fdiv
jecxz
loop
jmp
call
int
cld
std
rclb
out
test
out
bnd
out
test
test
cli
ffreep
leave
lret
aam
int
fyl2xp1
ror
iret
push
call
fdivrp
fimull
loopne
lret
jmp
test
int
fdivr
xchg
mov
fimull
ljmp
clc
icebp
int3
out
vaddsubpd
cli
fnstenv
loopne
sbb
call
xchg
aam
in
out
cmp
cmp
rolb
in
int3
add
test
in
cli
leave
lock
std
clc
rcr
in
enter
mov
loop
in
in
xchg
test
xor
stc
jmp
ret
cmc
ret
loopne
repnz
lret
out
clc
fmulp
cmp
ljmp
idivb
int3
aaa
push
cmp
cmp
test
orl
int
icebp
ret
out
ds
fdivp
clc
cli
ss
incb
jecxz
loopne
xchg
out
dec
xor
xor
out
cli
repnz
jecxz
ret
out
lds
sbb
loop
fists
out
aaa
icebp
aam
cmp
fmul
testl
icebp
in
fcmovne
hlt
shlb
into
lret
xor
fdivrl
ljmp
iret
xchg
in
xlat
xchg
xchg
fxch
loop
repnz
adc
leave
cmp
jmp
roll
fldl
iret
fsubp
popl
xor
ss
call
out
fcmovnb
out
movl
out
in
xlat
ss
shl
xlat
xlat
fincstp
idiv
xor
rcr
stc
in
fadd
dec
in
lret
adcb
out
cmp
aad
sarl
loope
fstp
sti
and
lret
iret
mov
subb
xor
out
icebp
fcomi
cmp
cmp
mul
stc
ret
out
shl
mov
out
call
xlat
out
iret
fcmovbe
cmp
sbb
out
leave
call
std
mov
lret
cmc
jmp
leave
repnz
fdivp
fcomp
fxtract
orl
iret
fxch
xchg
repnz
hlt
xchg
out
shr
out
iret
lret
repnz
out
lock
xlat
mov
in
mov
int
lret
mov
loop
repz
int
loopne
sub
sar
adc
fcmove
int
shl
cmc
xchg
cmc
in
clc
xor
in
sti
xor
jecxz
out
test
call
in
std
lock
ljmp
lret
xor
rcl
jecxz
test
cmpl
call
repnz
in
jecxz
jecxz
xlat
into
shlb
in
in
repz
shl
jmp
rcr
into
xchg
adcl
hlt
out
aaa
fcmovne
lret
in
filds
loopne
addb
aam
xor
div
shr
fcomp
or
in
enter
mov
jmp
xchg
repz
in
xor
xlat
cli
cmc
icebp
fstp
cmp
out
fdivrl
rcl
jmp
call
lret
sar
xor
into
jmp
iret
xor
lret
cmp
rolb
out
fmull
sti
leave
xor
fnstcw
ret
test
idiv
sub
xlat
stc
lock
nop
in
xchg
xor
out
aam
ljmp
fcmovu
cmp
out
add
lds
in
fstp
xor
xlat
repnz
in
out
xor
lret
aam
in
repz
in
into
xchg
sti
fists
cmp
into
shl
in
jmp
ds
fiaddl
enter
lret
fucom
out
ret
imul
cmp
lret
cld
fdiv
sar
rcr
cmp
add
mov
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
cmc
jo
jg
aas
add
fucomip
loope
stc
enter
dec
mov
cmp
in
cmp
iret
ds
sarb
loopne,pt
ljmp
or
repnz
out
in
call
cld
int3
jecxz
std
out
neg
sar
in
in
out
fsub
mov
ljmp
fmulp
cmp
test
std
rol
out
mov
lock
loop
in
cmp
cld
in
xchg
loopne
xrelease
loopne
call
xor
stc
out
jmp
test
in
cli
testl
decb
jmp
int
ror
rcl
fdivp
cmp
loop
lret
fisttpll
ljmp
call
fnstsw
int
rol
not
sti
out
incl
mov
aad
enter
out
cmp
cmp
repz
ret
std
testl
loopne
add
in
xor
in
xor
fdivr
in
loop
fisttps
loopne
into
xchg
iret
loope
loop
shr
in
neg
cmp
cmp
sti
cli
fcomp
fisttpll
lret
mov
hlt
in
out
jmp
sar
cmp
loop
ret
xlat
test
xchg
fmul
in
nop
jmp
xchg
shr
ror
in
jmp
sti
cmp
ds
fadd
fmulp
cmc
ret
test
mov
xchg
ljmp
fcom
icebp
rcr
int3
fldl
cld
orb
in
call
xor
into
ss
fcmovbe
push
fcomip
testl
xchg
repnz
out
sar
xor
call
loope
icebp
jecxz
mov
sti
icebp
xchg
sub
repnz
ss
cmp
repnz
xchg
clc
xchg
rorb
and
jmp
in
lret
ss
fcomip
loope
hlt
jmp
and
loope
sti
or
fcom
cmp
neg
cmp
shl
aam
sti
xlat
cmc
test
cld
in
jecxz
nop
out
in
into
out
call
repnz
mov
fdivrp
call
xchg
jecxz
jecxz
cmp
cs
imul
in
faddp
roll
lea
aam
lret
in
std
aaa
adc
aam
in
ret
loope
test
in
xchg
rolb
rcl
in
cmp
cmp
addl
int
xchg
adc
xchg
ret
lret
movl
ret
lret
cld
jecxz
cli
out
filds
idiv
cld
cmc
cmp
aad
repz
iret
mov
xchg
jmp
lret
mov
mov
std
xchg
clc
xor
enter
ss
dec
hlt
cmp
icebp
enter
cli
xlat
lret
and
repnz
jmp
mov
ret
ret
enter
aas
cmp
xor
stc
and
jecxz
mov
hlt
mov
clc
iret
iret
into
out
stc
cmp
fsubrp
in
mov
mov
cli
sti
lock
adcb
xor
cmp
cli
fsubr
jecxz
in
in
jecxz
neg
int
ljmp
xor
in
cmp
icebp
aad
clc
aad
out
cli
aam
xchg
out
mov
cli
cmp
in
cmp
sar
sbb
aas
into
stc
out
std
faddp
lea
or
xchg
leave
jmp
divb
jecxz
test
faddl
inc
inc
cmp
in
ljmp
repz
cs
out
fdivs
clc
leave
jmp
test
fsubr
test
rorb
leave
shl
sar
cli
cmp
rcr
not
iret
rcr
aad
hlt
call
add
mov
shr
call
fucomi
int3
lock
fucomip
icebp
ret
lock
inc
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
sbb
movsb
xor
jg
aas
add
mov
fcmovbe
addl
cmc
jmp
out
shlb
into
clc
cmp
sar
test
fimuls
test
into
out
mov
jmp
xor
cmc
fidivrs
cmp
cmp
out
cld
out
jmp
mov
out
enter
ljmp
fldpi
iret
aaa
in
aas
into
repnz
icebp
loop
sti
jmp
int3
lock
jmp
cld
into
fists
xor
cmp
sti
fcmovnu
cmc
cmp
decb
out
fcmovne
nop
mov
jmp
fdivl
cli
aam
cmc
jmp
out
in
xchg
xchg
xor
sti
xor
ds
stc
aad
fstp
leave
cmc
out
incb
into
fiadds
cmp
out
fucomip
fucomi
cmp
int
fcmovne
jecxz
jecxz
xchg
iret
repnz
xor
into
lret
lret
lret
xor
ret
mov
aad
in
ret
in
fists
jmp
shl
lock
cmp
std
rcl
in
ret
sti
aam
jecxz
lret
out
fimuls
jmp
ljmp
std
cli
jecxz
shl
aad
mov
in
dec
out
std
rclb
xor
xor
loop
div
neg
add
into
out
shr
enter
ret
in
out
out
hlt
aaa
iret
std
jecxz
xchg
out
test
clc
lret
mov
stc
test
lret
in
decb
lock
into
xor
jecxz
cmpb
xchg
test
xchg
in
mov
adc
out
std
xor
out
in
adc
fyl2x
out
in
ret
sub
rol
xchg
out
xor
xlat
cmp
neg
cmc
into
ds
loopne
fdivp
loopne
mov
xchg
div
in
rcr
std
icebp
xor
sar
shr
cmp
out
std
loope
int3
jmp
jmp
not
in
out
fmul
fsubr
xor
int
cmp
lret
loope
loopne
iret
loope
int
repnz
cmp
shll
repz
xchg
cli
std
xchg
out
jecxz
int
aam
mov
repz
sar
fistpll
cmp
ret
aas
lret
loop
jmp
fpatan
out
loop
repnz
out
iret
in
aad
ds
or
hlt
test
fucomp
xchg
ror
leave
lret
mov
int3
aad
xlat
fmul
ror
cmp
out
in
jecxz
xor
test
in
ljmp
repnz
xor
rcl
xlat
shr
ljmp
std
stc
repnz
lret
out
ljmp
jmp
in
lret
leave
cmp
icebp
stc
faddp
lock
test
fmull
ret
stc
leave
out
in
aas
cmp
repz
loop
jecxz
stc
into
lds
rcl
iret
icebp
cmp
leave
icebp
cld
cli
stc
fldl
lret
sti
fisttps
out
ljmp
in
jmp
loop
out
test
cmc
mov
lret
leave
mov
mov
loopne
out
lret
sti
shr
fnstsw
test
cld
in
ret
mov
sbb
mov
aaa
aaa
lret
xor
jmp
hlt
div
test
int
fsubr
out
in
loope
jmp
stc
cmc
shr
call
cmp
repz
in
in
leave
rol
sti
ror
aaa
idivb
stc
fsubr
cmp
cmp
ljmp
mov
test
vshufps
leave
fadd
testb
in
fiadds
fimuls
cmc
xor
leave
fcmovu
fidivrl
shr
sbb
add
ljmp
int
in
fmulp
out
cmc
lret
jmp
jecxz
cmp
ret
in
lret
out
sti
lock
xchg
lock
int3
cmp
cmp
clc
aad
in
xor
fstp
lret
lock
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
ljmp
sbb
mov
xor
cmc
in
cld
fdiv
iret
fcmovnu
cmp
fidivrl
stc
in
in
into
in
addl
icebp
xlat
hlt
out
sar
testl
and
in
iret
jecxz
xchg
in
icebp
shr
in
cli
sarl
fcom
sarb
repz
cmp
mov
sti
std
loopne
call
rcl
loopne
xor
icebp
idiv
push
aaa
cmp
ds
fildl
loope
xlat
loope
loopne
lret
aam
cs
fcmovbe
out
aas
icebp
cmp
sti
fcmovnbe
test
clc
cli
mov
sar
incb
int
fcmovbe
out
sar
clc
xlat
sbb
icebp
clc
ljmp
in
jmp
aam
lock
repz
loop
shl
sti
aam
std
cld
loopne
adcb
cmc
call
fistpll
cli
std
out
stc
ds
jmp
xlat
into
out
sbb
cs
xor
std
fsubr
rol
into
in
xlat
fldl
icebp
test
rol
xlat
clc
jecxz
fdivr
fucomip
ds
sti
loopne
cmp
fisttps
out
out
iret
call
enter
into
cmpl
ret
int
lret
test
out
xor
leave
in
cmp
jmp
fcomp
aaa
div
lock
incl
mov
mov
jmp
iret
imul
xor
fsub
addb
test
sub
ljmp
rcl
and
in
test
fcmovne
clc
stc
xchg
in
out
out
xor
hlt
cmp
ret
in
cmp
cmp
adc
in
inc
aam
stc
mov
fisttpl
xor
aaa
in
cli
in
shr
cmp
faddp
fcmovnb
vpsubw
int
xchg
int
jecxz
stc
in
cmp
xlat
out
repz
test
test
repz
aad
incb
repnz
cmc
fmul
cmp
xor
iret
sub
icebp
int3
cld
repz
icebp
jmp
fcmove
cli
loop
jmp
shrb
call
fstp
into
cmp
jmp
bnd
mov
out
mov
call
rclb
lock
cmp
stc
aad
cmp
hlt
out
and
loope
fisttps
cmc
out
in
fbstp
sub
lret
out
cld
hlt
sar
fdivr
cld
cmp
loop
rcr
out
jmp
lock
clc
cmp
stc
hlt
test
repnz
xchg
addb
aam
out
clc
hlt
icebp
in
cmp
sar
in
out
cli
enter
mov
out
out
ror
loop
shl
idivb
shl
ljmp
call
in
neg
leave
jmp
out
ror
rcl
out
aad
xor
fyl2x
rcr
xlat
sti
adc
ret
les
fsub
fdiv
xchg
out
xchg
shl
aad
hlt
ljmp
xor
clc
loopne
rcl
ret
orb
mov
repnz
call
cli
lock
sarb
test
jecxz
sti
rclb
int3
hlt
in
int
out
hlt
enter
int3
sub
sbb
clc
ror
fstl
shl
icebp
stc
ljmp
rol
loopne
cld
rol
stc
stc
cli
int
test
loope
out
imul
aad
hlt
fcmovu
out
stc
fcomi
aad
loope
and
mov
out
xchg
lret
in
mov
ret
into
sarb
std
clc
int
icebp
cmp
in
jecxz
addl
fld
in
cmp
out
call
cmp
std
ret
in
mov
out
mov
iret
jmp
xchg
in
cs
enter
dec
jecxz
cmc
xor
in
xchg
int
int3
fucomip
in
loope
fucomp
imul
cli
roll
xor
in
add
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fst
imul
add
loop
testb
xchg
into
ror
aaa
call
out
cmp
addb
test
in
into
fldl
lret
fcomi
leave
int3
repz
std
rol
cli
adc
out
loope
xchg
out
loopne
iret
out
aaa
std
aaa
ljmp
iret
cli
test
loopne
ljmp
sub
fsub
aaa
fchs
xor
sti
sti
iret
ds
loop
fcoml
in
xor
xor
int
cmp
rcr
clc
push
shl
mov
leave
fsub
repnz
iret
shr
aad
int3
enter
fadd
les
in
xchg
out
mov
fcmovne
in
mov
ss
idiv
call
loope
les
out
xchg
repnz
xchg
jecxz
test
sub
test
cmp
shl
fucomip
out
call
fstp
fsubrp
in
lock
leave
stc
cli
jmp
call
ror
addb
jecxz
leave
test
xchg
hlt
repz
clc
out
out
into
out
clc
fnstcw
fdivrp
into
cmp
fcomi
xchg
enter
in
ffreep
iret
stc
xor
jmp
fneni(8087
cmp
leave
roll
in
lret
cmc
int3
ffreep
jmp
fsub
loopne
aad
ret
ret
fdivrp
fiadds
lret
iret
shr
in
ljmp
xor
fsubrp
fstpt
frstpm(287
cmc
out
rcr
hlt
jecxz
loope
fisttpll
lret
nop
lret
cmp
shl
xor
cmp
cmp
cmp
aas
sbb
orl
shl
in
out
stc
cmp
xor
fadds
leave
fmuls
std
iret
jecxz
jecxz
f2xm1
rcl
in
jmp
ds
repz
fscale
fdivp
int3
out
fucomi
ret
rorb
aam
aaa
ss
out
stc
cld
leave
hlt
jecxz
ffreep
add
mov
aas
mov
mov
ss
cli
cmc
clc
iret
cld
cmp
out
repnz
test
ret
test
add
icebp
out
loop
stc
sti
aaa
xor
cmp
stc
stc
cmc
call
aam
fildl
sub
cs
ss
jmp
jmp
out
shl
shl
out
incb
iret
fucomp
iret
jmp
cli
idivb
cmp
ds
in
aam
ret
cmc
shr
cli
iret
enter
ljmp
cmp
xor
int3
cmp
icebp
sub
mov
out
xchg
sub
repz
shl
fsubrp
aad
hlt
fistpll
in
les
clc
cmc
fcomip
fsub
cmp
xchg
lock
out
rol
out
cld
icebp
aaa
clc
cmp
rcr
cli
icebp
neg
cld
out
jmp
int
aad
das
iret
div
cli
rcr
shl
cmc
xlat
ds
cli
incb
in
mov
enter
aaa
lret
aad
repnz
roll
aad
sti
xchg
faddl
fsubp
call
lds
fmul
cmp
cmp
ret
clc
in
cld
fsubrp
aas
mov
sti
out
xchg
into
in
leave
aam
loope
fucom
rcl
not
repnz
stc
xchg
fmulp
sti
xchg
xchg
call
cmc
int3
sti
in
enter
fptan
icebp
rcl
repnz
test
out
mov
cmp
cmp
fcomp
in
shl
std
fcmovnu
enter
roll
repnz
stc
cmc
in
cmp
leave
stc
in
ds
sti
into
into
stc
std
flds
iret
fst
test
ss
cmp
enter
cmc
in
aad
xor
sub
adc
aam
shr
iret
imul
in
fxtract
imul
xlat
test
repnz
aam
test
jmp
xchg
and
jecxz
aaa
iret
out
iret
in
ljmp
repnz
leave
xchg
rcll
int3
aaa
loope
iret
fdivrl
cmc
cmp
sarb
std
lock
std
aam
loop
out
icebp
fisttps
loop
ss
clc
sti
in
enter
xor
aas
fcomip
std
mov
fcmovb
mov
sti
test
test
test
leave
out
in
xor
out
jmp
repnz
iret
out
cmp
jecxz
test
mov
or
std
rcl
xor
movl
xor
jmp
iret
rol
rol
or
push
aaa
in
jne
in
jg
scas
add
fmulp
lret
cmp
jecxz
in
ret
call
and
fstp
mov
lret
int
cs
cmc
fucomi
stc
ljmp
loopne
xchg
shr
clc
fmul
fcmovne
call
out
aaa
xor
les
fmul
lret
repz
in
in
cli
ror
clc
test
into
mov
cmp
out
out
call
repnz
test
ret
cmp
mov
hlt
rol
in
out
repnz
div
fcomp
fnstcw
les
lret
mov
ljmp
cmp
jmp
cli
shl
xchg
mov
fiaddl
hlt
shl
jmp
std
cmp
rolb
fcmovnb
fmuls
hlt
lock
out
shl
cmp
cld
out
rcr
aad
fucomip
stc
rcr
addl
call
hlt
repnz
shr
cmp
int
jmp
not
idiv
inc
fsubrp
xchg
ficoms
loop
in
sub
aaa
call
repnz
xchg
repz
out
mov
xchg
out
sub
xlat
repz
enter
repz
out
out
aam
std
not
test
fisttps
loop
cmp
aad
leave
lret
leave
ret
lock
xchg
out
in
out
addb
hlt
shrl
lret
ss
repz
ret
repz
cmc
adc
std
stc
add
rolb
aam
cs
iret
jmp
clc
cld
cmp
fcomp
test
mov
repz
lret
fucomi
in
hlt
div
cmpl
repnz
fadd
stc
out
fsubp
icebp
xchg
xchg
jmp
div
icebp
enter
sarb
repnz
jecxz
cli
icebp
adc
int
xchg
repnz
vpaddusw
sti
out
ror
jecxz
iret
rorl
call
cmc
shll
fyl2xp1
cld
cmp
ds
loop
fadds
sti
out
in
std
shr
shl
lret
enter
repnz
loop
out
fiadds
fucomp
in
int
ljmp
ljmp
test
leave
fcmovnbe
fucomip
sbb
out
in
nop
jmp
cmp
fxch
lret
repz
test
fnstcw
stc
cld
loop
mov
xchg
mov
xchg
clc
mul
jecxz
fstpt
into
icebp
fsqrt
aam
hlt
fadds
fcompp
nop
xchg
shl
fidivl
lret
cmc
fdivrs
out
idiv
fsubp
jmp
leave
fisttps
loope
out
lret
lret
aam
flds
mov
cli
shl
mov
loop
ret
xor
enter
loop
xchg
sti
hlt
mov
vcvtpd2dq
iret
faddl
shrl
enter
enter
aaa
out
fnsetpm(287
out
out
int
sbb
jmp
loopne
int3
loopne
aam
jmp
jmp
shl
out
cmp
aas
in
repnz
rol
in
lret
in
fmuls
std
ljmp
out
ss
icebp
repz
rcr
mov
ret
idivb
cld
sti
out
aaa
leave
fcmovbe
cmp
fmul
lret
shl
test
clc
mul
jmp
iret
out
xchg
loop
in
shr
sub
in
rcr
fidivrl
fchs
in
aam
out
vpsubw
xchg
jecxz
jmp
in
lret
out
icebp
jmp
cmc
cmp
rol
roll
lret
rolb
jmp
loope
jmp
stc
std
xlat
aad
aad
loopne
out
repnz
in
mov
fstl
xor
jecxz
fprem
aaa
shl
ret
rorl
idiv
out
jmp
shlb
in
xlat
xlat
repz
fxch
loope
cmp
aam
xchg
leave
call
roll
xchg
ljmp
sti
cmp
cmp
cld
div
std
mov
hlt
fmul
fsub
fucomp
xchg
lret
lock
push
ror
fcmove
enter
loope
ds
jecxz
out
fcmovnu
stc
fldl
nop
hlt
test
xlat
fldpi
fcomi
test
jmp
clc
sar
loop
dec
loop
add
cli
in
test
xchg
jmp
xor
icebp
in
into
in
aam
adc
cmc
icebp
out
out
movl
jmp
enter
fxch
shll
or
int
mov
scas
add
sar
lret
call
aaa
leave
int
not
lret
into
shl
jmp
aam
aad
in
rcr
call
mov
lret
loop
loopne
xlat
aam
cmc
into
cmp
in
and
in
cli
clc
call
nop
nop
lret
shrb
loope
loop
into
out
call
aam
sar
ret
sub
fisttpll
ss
ret
lock
cmp
fstpt
ret
jmp
addb
call
jmp
loope
out
cmp
icebp
in
fmul
cmc
in
test
test
in
ljmp
icebp
int3
in
fcmovnu
xor
test
xor
enter
loop
loope
popl
out
xlat
lret
ljmp
xlat
cmpb
call
std
xchg
loop
xchg
jmp
rcl
iret
int
aam
add
loopne
in
xchg
lret
ljmp
xor
fcmovnbe
shl
cmc
sar
fcmovb
icebp
fld1
ds
leave
faddl
mov
in
ret
iret
aam
cs
aam
out
in
ror
lds
enter
std
loop
loop
iret
mov
in
idivl
jmp
int
ss
sti
faddp
adc
aad
in
aad
mov
fiaddl
int3
mov
xor
cli
imul
ror
cmp
in
ffree
ds
fldl
fmulp
fucom
fmulp
in
ljmp
rcl
not
flds
jecxz
int
ror
nop
jmp
rorb
int
cld
out
int3
icebp
in
aas
fcmovne
rcl
xchg
jecxz
mov
out
mov
xchg
aad
int3
cli
lock
aam
dec
cmp
hlt
xor
std
in
xchg
in
test
divl
in
jmp
out
icebp
shl
std
shl
aam
mov
test
out
loopne
icebp
das
in
in
cmp
out
clc
out
fidivrl
rcr
shl
jmp
fld1
lock
test
iret
xor
int
hlt
ror
fmulp
clc
rolb
jecxz
xchg
loopne
in
out
loop
out
shl
vcvttpd2dqx
jmp
fneni(8087
sar
hlt
jmp
in
sti
int
and
shl
repz
fdivl
xor
shl
lock
loope
test
test
hlt
shl
sarb
in
clc
ss
int
aad
cmp
leave
fcmovnu
rol
mov
icebp
xchg
jecxz
jecxz
out
out
fmulp
shr
fxch
out
out
in
std
orb
in
cmp
ret
cmp
ljmp
into
sti
out
mov
ffree
xchg
shl
jmp
into
jmp
icebp
loop
aad
repnz
out
fimull
int
int
fmul
cmp
fsubr
cmp
repnz
cmc
fsub
fcmove
cmp
mov
jmp
xor
stc
cmp
in
cli
not
xor
icebp
shr
std
lea
test
xor
in
hlt
stc
shll
lock
sar
sti
sti
rorl
iret
int3
cmc
bnd
xor
out
cmp
aam
ss
iret
fdiv
cmp
mov
bnd
int3
xor
jmp
out
xchg
in
shl
loope
lret
fsub
fsin
repz
xchg
in
jmp
enter
cmp
repz
fmulp
cmc
shr
loopne
adc
in
test
shr
iret
jmp
ss
rcl
and
loope
xlat
test
mov
nop
jecxz
out
call
jmp
cmp
icebp
cld
aas
mov
cld
loop
ret
fsubr
filds
jmp
in
fsub
cmp
fsubp
aam
call
xlat
jmp
out
fbstp
ljmp
fdivr
fiadds
leave
enter
fcmovnb
cli
jmp
repnz
ret
iret
cmp
shr
aam
hlt
loopne
out
jecxz
nop
call
loopne
jecxz
cld
ss
iret
fadds
jecxz
out
jecxz
or
and
vpcomud
shrb
test
sbb
stc
cmc
fld
in
cmc
test
xchg
into
xchg
aad
shl
in
rcl
in
xor
mov
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
cmp
jmp
in
ret
cmp
clc
call
mov
in
leave
out
leave
fxch
test
lret
out
ds
les
hlt
std
repnz
loope
int3
faddl
xabort
aad
rcr
shr
call
fsub
loop
loope
dec
aas
cmp
ljmp
aaa
iret
fnstenv
leave
iret
lret
loopne
fcmovb
fildl
ret
fidivrl
out
jecxz
jmp
mov
sti
shr
cld
clc
aad
int3
out
or
mov
repz
int
sti
int
mov
in
fbstp
loop
ret
ret
enter
std
cld
cmc
aam
and
fst
sbb
xchg
into
fcomip
mov
int3
hlt
out
cmp
divb
ds
fldl
cmc
aad
mov
lret
out
icebp
jecxz
jmp
aaa
shll
iret
cmp
xlat
in
xor
les
mov
mov
icebp
in
xchg
or
fidivl
in
int3
jmp
stc
aad
rcl
aam
cld
ret
cli
into
ljmp
in
ret
aam
sti
jmp
aam
cmp
jecxz
sti
ljmp
xchg
vgatherdpd
loop
xchg
in
aam
xor
shr
fyl2x
in
rol
cmp
cli
clc
lret
ret
mov
rclb
xlat
out
icebp
in
hlt
int
out
div
aam
aaa
cmp
loop
loopne
jecxz
xchg
repz
stc
xor
ror
fdivp
repnz
test
addl
out
int3
into
fisubrl
int3
sti
fdivl
loopne
cmp
std
ret
repz
movl
cli
int
sarl
lret
jecxz
sti
out
fcomp
cmc
rolb
ror
rclb
ss
cmp
into
ds
leave
cmp
test
stc
test
imul
sub
into
in
clc
cmp
clc
into
xor
icebp
into
cmp
out
rolb
fcmovne
xchg
loop
ror
loop
fadd
call
aad
ret
push
out
cld
lea
nop
in
aad
out
loop
iret
rol
cmc
cli
repnz
in
fistpll
imul
sti
jmp
xlat
mov
xchg
rcr
iret
ss
std
aaa
cmpb
lds
fldlg2
cli
mov
call
out
icebp
shl
xor
cmp
into
cmp
std
sti
aam
loope
stc
test
mov
fmuls
loope
xchg
loope
ljmp
addl
jmp
lret
icebp
out
orb
cmp
aad
cmp
sarl
fst
in
test
fstp
jmp
in
and
in
loope
rcl
out
lret
enter
ror
xlat
aas
xchg
sar
cli
jmp
ljmp
fimuls
out
in
leave
loope
cmc
sar
out
fcomip
out
mov
std
jmp
fucomi
nop
rol
xchg
out
shlb
cmc
stc
leave
sti
idiv
cmp
xor
loopne
xlat
ret
test
test
out
mov
lock
out
aas
fld
shr
sarb
fldlg2
shl
std
stc
in
call
neg
int3
out
xchg
hlt
xor
leave
enter
fdivl
out
test
ljmp
xchg
loope
shr
hlt
sti
cli
xor
clc
std
int3
rcr
jmp
in
leave
jecxz
into
sub
shr
cmp
fistpll
ljmp
neg
cld
out
push
xchg
cli
jmp
xchg
ffreep
enter
int
clc
loope
fcom
cld
std
rcr
stc
in
lds
call
out
repz
repz
xlat
rol
cmpb
out
loop
cmp
test
xchg
icebp
fst
xchg
shl
loopne
out
into
iret
sti
enter
fdivr
cmp
mov
out
jmp
popl
fsubr
fsubrp
cmp
icebp
fucomp
out
repz
ret
jmp
dec
adcl
ret
cmp
ss
aad
aam
shl
fstp
inc
xchg
fcmovu
fmull
out
into
lret
rcl
aaa
aam
aam
out
cmp
rol
ds
aam
sub
in
ret
mov
in
mov
ror
iret
in
fcom
cli
stc
std
mul
fcomi
sti
addl
in
rorb
aam
icebp
not
lock
clc
lock
shl
testb
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
mov
lds
scas
add
loope
xchg
jmp
hlt
aas
cmp
lock
sub
mov
loopne
fucomip
das
clc
lock
aad
hlt
cmp
not
aaa
shl
loopne
ret
lret
out
xchg
icebp
xor
call
neg
iret
aas
cmpb
repz
rcr
cld
mov
fxch
rcr
iret
incl
enter
jmp
stc
aam
out
out
test
test
hlt
hlt
fsub
in
out
out
in
mov
out
ljmp
cmc
addb
cli
lret
in
fdivr
xchg
rcl
lock
test
shr
lret
aam
repnz
ljmp
sar
in
test
fimuls
lret
ret
lret
sub
out
repz
fcmovbe
adc
div
hlt
aas
aad
out
out
out
flds
test
shl
cmp
cmc
repnz
fstl
decl
fcmove
fmulp
sar
testl
out
test
iret
xchg
shl
stc
jmp
out
xor
in
cmp
inc
movb
jecxz
mov
call
clc
aaa
fcmovne
fdivrl
loope
cmp
std
ret
shl
jmp
testl
repnz
in
int3
cld
out
sarl
aam
out
cld
mov
cmp
ljmp
mov
xchg
xchg
jecxz
call
icebp
or
ret
std
in
mov
fiadds
ljmp
hlt
imull
cmp
fadd
iret
out
cmp
repz
ret
cld
mov
int
jmp
loope
out
lock
int
out
loopne
out
test
into
test
call
mov
xchg
xchg
xor
cmp
into
shl
incb
leave
ret
clc
jecxz
int3
nop
shl
loope
loopne
out
cld
aaa
sti
iret
cmc
aam
cmp
fildl
jecxz
loopne
in
fsubr
fimuls
shll
enter
jmp
xor
faddp
sti
mov
in
clc
enter
lret
mov
cld
lret
iret
imul
loopne
cmpl
cmp
cld
lds
popl
test
icebp
repnz
addl
aas
repnz
in
xchg
out
stc
call
into
ss
rcl
ffree
sbb
in
add
call
xchg
jmp
in
ret
repz
fdivp
cmp
rcr
sbb
sbb
mov
loop
loop
loope
aaa
lret
in
cmp
cli
ljmp
rol
fldl
cld
enter
xor
ret
jmp
xor
aaa
lock
into
rcl
out
roll
in
dec
jecxz
xchg
out
out
ret
xor
cmp
sti
xlat
cmc
hlt
xchg
jecxz
int3
stc
cld
ljmp
call
int
ljmp
in
rcl
sti
aas
lret
xchg
ror
icebp
not
repz
leave
xor
loope
cmc
test
div
aas
aad
aad
std
fldlg2
out
fucomp
xchg
aad
leave
fldcw
in
repnz
repz
ror
cmp
in
xchg
loopne
fsub
into
loopne
test
out
test
jecxz
int3
aaa
xor
shl
cmp
test
add
stc
in
call
fmull
xor
cmc
neg
lret
icebp
cmc
clc
faddp
xlat
rcr
enter
mov
nop
call
rcl
fcmovbe
cmp
repnz
aas
div
inc
jecxz
xlat
in
fiaddl
xchg
rolb
ret
in
int3
fsubr
fidivs
loopne
fucom
stc
icebp
cli
xlat
fldl
nop
rorb
cs
leave
ss
aam
shl
bnd
jecxz
call
cmc
repz
fidivrl
sbb
flds
ret
xlat
out
iret
sub
ret
xor
rcl
in
shl
fldpi
test
lret
fdiv
into
jmp
xchg
test
shll
jmp
aam
loope
dec
loopne
loopne
cmp
in
leave
out
ror
repz
sar
stc
aad
out
std
rcr
idiv
loopne
mov
xchg
stc
enter
shl
rol
shl
cmp
iret
cmp
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
cwtl
repnz
mov
lret
scas
add
fst
cld
aam
not
rcr
loop
xchg
stc
mov
shl
ror
jmp
repnz
into
fcmovne
fsubr
cli
cmp
hlt
in
stc
leave
imul
jmp
addl
in
rcl
ss
repnz
shl
shl
fdivr
fld1
jmp
mov
ljmp
rcl
ljmp
xlat
aam
icebp
out
xchg
ds
jecxz
test
xchg
out
cmp
jmp
sti
cmp
icebp
cmp
shr
cmc
fsub
rcr
ds
orl
xor
icebp
jmp
loop
cmp
loopne
shl
aam
xchg
test
icebp
icebp
in
iret
ret
fdivrs
lock
rcl
loope
cmc
cmc
xchg
jmp
in
mov
xchg
iret
out
xchg
out
icebp
leave
in
divl
neg
jmp
in
not
out
sti
ret
in
fldpi
lret
mov
loopne
mov
out
xlat
iret
sti
aad
cmc
xlat
hlt
sar
iret
stc
fadd
clc
jecxz
iret
test
out
in
popl
cld
cmc
repnz
leave
leave
into
lock
std
idivl
rcr
lds
out
loop
xchg
adc
out
lret
call
fsubrp
aas
out
out
xor
xchg
loopne
inc
std
in
in
out
in
sub
cmp
lret
idivb
cmp
icebp
sarl
mul
cld
sti
out
addb
into
xor
out
cmp
fcmovu
jmp
out
shl
mov
fmul
out
cld
jecxz
jecxz
xchg
mov
not
ljmp
idiv
out
rcl
hlt
stc
fadd
in
test
lock
sub
out
cmc
int3
aam
xor
aad
and
fcmovu
bnd
leave
in
fdivr
adc
mov
adcl
fidivl
into
aad
loopne
into
testb
out
out
mov
mov
out
icebp
lock
cmc
int3
clc
cli
aaa
aam
cmc
shr
not
sti
rcl
fmul
orl
jmp
rol
not
xlat
cmpl
out
cli
dec
loop
lret
out
nop
ror
fbstp
sub
fmul
cmp
cmp
out
ret
cmc
cld
aam
loope
shr
xchg
sti
std
mov
das
cmp
lret
out
out
fcmovbe
in
cmp
repz
vcmpsd
sub
in
in
mov
out
orl
clc
ss
fdiv
loopne
loopne
fmull
in
mov
out
aam
xorb
out
icebp
fdivr
in
repnz
sub
out
out
in
adc
out
rcll
vcvtpd2dq
fdivp
out
test
faddp
rol
jmp
int3
xchg
loop
fimuls
icebp
cmp
into
leave
int
stc
ret
rol
loope
in
jmp
sti
mov
out
xor
clc
fcomp
sti
sar
fstpt
std
xlat
fimuls
in
out
shr
jmp
clc
int
in
jmp
lret
xlat
repz
cmc
call
decb
lock
loopne
jmp
xor
jmp
cmp
aas
fcos
std
test
xlat
icebp
loope
mov
in
out
mov
add
in
loop
in
repz
cmp
vpsubusb
sti
call
les
repnz
xor
not
in
ret
fcomi
mov
ljmp
repz
xchg
xchg
xor
int
xor
cmp
jmp
clc
rcl
repz
ret
xlat
fsub
ret
and
repnz
fmul
lock
int
xchg
test
fxch
lock
int3
xchg
sub
jecxz
lret
out
cmp
cmp
cmp
jecxz
loop
mov
icebp
out
in
shl
roll
fcmovnbe
cmp
fadds
out
jmp
call
mov
enter
stc
xor
cmp
sar
aas
lret
lret
aad
out
call
fsubr
ljmp
jecxz
lds
fsubr
shl
clc
shl
clc
xchg
or
fmuls
mov
fsubr
out
into
repnz
sarb
in
cmp
nop
jmp
nop
xor
enter
int3
into
lret
in
hlt
sti
repz
aas
std
ljmp
sti
mov
shr
shr
out
out
idiv
int
stc
xlat
out
ret
mov
out
clc
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
sbb
aas
pop
into
jg
scas
add
xor
xchg
aaa
jecxz
call
iret
adc
cmp
icebp
add
mov
out
mov
in
filds
mul
into
lret
ror
lret
loopne
fiadds
leave
cld
loop
ror
rcl
loopne
lock
clc
shr
in
clc
sar
fadd
int
ret
fucom
orb
out
into
aad
fbstp
lock
fmul
fld
cmpl
ror
std
test
in
xchg
xchg
orb
cld
enter
cmp
repnz
aad
jecxz
fmull
call
out
icebp
int
cmp
aas
sti
xlat
ds
cmp
test
jecxz
sub
shl
out
ss
cmp
fstpt
rcl
call
repz
lock
int3
iret
ss
shl
cmp
in
aas
hlt
stc
jmp
ret
ret
addl
fldl
aam
icebp
aaa
int
stc
or
loopne
jecxz
lret
fxch
jmp
cli
in
mov
das
cli
cmp
in
loope
loope
incb
mov
mov
cld
fcomip
jmp
jmp
xor
aad
cmp
into
cmp
lock
sar
aad
mov
fcmovnb
mov
icebp
ss
lock
icebp
cmp
loopne
out
fcmovbe
aam
jmp
in
mov
xchg
fists
ret
ret
fmulp
call
fsub
cmc
imul
in
cmc
enter
mov
mov
xlat
fucomi
test
cmp
cmp
out
jmp
jmp
fstl
lock
out
hlt
faddp
aas
cli
rcr
cmp
ret
cmc
and
lock
leave
mov
call
call
loope
loope
sti
jmp
cmp
lret
jmp
lock
out
aam
fprem
int
into
lds
call
mov
shr
out
xor
out
ss
aad
cmp
iret
iret
std
rcl
ret
in
jmp
in
in
icebp
out
repz
in
sarl
xlat
cmc
int
stc
out
aad
xchg
std
flds
or
shr
clc
cmp
xor
sar
in
vpslld
xlat
test
xchg
xor
aaa
cld
sbb
clc
call
test
cli
ror
loopne
loope
stc
loope
cmp
ss
jmp
hlt
xlat
ret
rcr
fcmovnu
xchg
fucomi
out
loop
ret
enter
xor
neg
sarl
clc
ret
lock
mov
out
lret
rcr
repnz
out
call
cmp
aam
icebp
in
call
xchg
testl
xor
xor
fnstsw
fnop
shl
stc
test
adc
ftst
in
lret
mov
fnstenv
xlat
out
clc
cmp
int
int
cmp
loope
ret
les
nop
call
cs
enter
jmp
cmp
aaa
icebp
jecxz
neg
sbb
mov
hlt
xlat
cmp
lock
faddl
xor
cmp
shlb
ljmp
cmp
loopne
into
in
cli
jmp
orl
in
icebp
xlat
cmp
cld
sti
in
decl
mov
enter
ds
loop
cmp
icebp
aam
lret
mul
loope
jecxz
in
nop
lock
ret
in
out
aad
lret
out
ret
sti
inc
enter
in
icebp
nop
xchg
call
sti
into
shr
test
cmp
loopne
aas
std
ljmp
ret
lea
call
mul
lret
ror
adc
loope
stc
loopne
fmulp
std
lret
fcomip
shr
jecxz
fyl2xp1
rcr
out
clc
loope
loope
stc
clc
out
filds
jmp
loopne
in
loop
rclb
aam
lock
cmp
loop
rcl
loope
shl
loopne
popl
test
into
aaa
call
fincstp
incb
out
test
mov
enter
mov
xor
cli
aad
into
int
loope
stc
clc
cmc
rolb
fcmovu
cmp
out
adc
vpor
fidivrl
xor
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
hlt
iret
rol
cld
cli
filds
loope
out
xchg
xchg
xchg
shl
rcl
cmp
rcr
div
lret
cmpl
std
aam
ret
loope
icebp
nop
xchg
mov
xchg
ffreep
aaa
out
jmp
rcr
ds
cld
sar
xchg
ret
out
mov
incl
nop
in
lock
fcomp
cmp
in
hlt
idivl
inc
xlat
aad
std
xchg
ljmp
in
cmc
fcom
fld
fprem
fcmovnbe
out
jmp
aas
aas
mov
add
loope
test
shl
in
out
cmp
sarl
fsubrp
std
iret
rcl
into
loope
sub
xchg
mov
aam
int
rol
cli
lret
repnz
cld
rcl
clc
and
enter
jmp
xchg
fimuls
into
shlb
sar
cmp
repnz
cmp
cmp
cmp
addb
shl
test
int3
clc
shl
repz
lret
repz
clc
cld
repz
mov
xchg
shl
fld
lock
xor
aas
aad
test
fldl
out
sub
in
cmp
repnz
int3
aam
loop
sar
test
out
cli
leave
jmp
rorb
lret
lock
cs
aad
std
fmul
shr
testl
ljmp
sub
in
out
fdiv
ds
in
les
jmp
or
out
std
in
loop
iret
loope
in
hlt
cli
out
fdivrp
into
out
lock
cli
mov
clc
decb
fnstsw
out
rorl
xlat
rcr
test
aam
repz
shl
loopne
mov
xchg
xchg
jmp
cmp
aas
ds
fsubr
les
rol
les
jmp
mov
int3
mov
out
out
fcmovnbe
inc
cli
loope
sarb
in
or
out
call
loop
ljmp
cld
fstp
icebp
out
fincstp
xor
test
call
sbb
roll
sti
jmp
out
sti
int3
loop
shl
jmp
notl
mov
stc
out
in
into
repz
jecxz
lock
not
rol
decl
int
xor
shr
jmp
iret
shl
loopne
xchg
fisttps
or
jecxz
das
lock
repnz
cli
aaa
iret
mul
out
int3
int
rol
fiaddl
lret
nop
cli
in
movl
clc
cmp
fsub
xlat
orl
xchg
adcl
shl
fcomp
int
cmp
ret
test
rolb
loopne
mov
xchg
xchg
mov
lds
repz
cmp
lock
in
sbb
cmp
test
into
rcl
stc
aam
cmp
cmp
xlat
aas
in
clc
cmp
icebp
in
and
dec
rolb
ret
xlat
out
in
cmp
xlat
cmp
cmp
loope
in
loop
out
fisttpll
out
cmc
lock
xlat
addl
fldl
shr
shll
int
ss
loope
ret
cmp
loopne
int3
incl
ljmp
sub
sar
rcr
not
fscale
xchg
loop
mov
cld
out
xchg
loopne
xchg
test
ret
ror
icebp
sarl
cmp
iret
incl
hlt
clc
mov
into
mov
in
loop
cli
fidivl
fnsave
icebp
in
cmp
dec
ds
repz
aas
sti
xchg
xchg
mov
in
in
out
das
shll
cmp
sar
shl
int
ret
aam
mov
loope
sbb
xchg
xor
shr
call
lock
iret
ror
jmp
cld
hlt
out
aas
shr
xlat
jmp
out
cli
int3
jecxz
das
aam
ljmp
or
out
xlat
cmc
fcmovnbe
ret
out
jecxz
mov
or
xor
fistpll
hlt
stc
cmp
xchg
loop
addl
out
xchg
xor
cli
cmp
cmp
cli
cmp
lret
cmp
sub
xchg
sar
iret
in
xlat
fprem1
out
repnz
mov
sub
mov
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
xchg
push
mov
cmp
jg
scas
add
iret
xchg
lock
enter
hlt
lret
fsub
idiv
xchg
aam
xlat
lret
mov
mov
jecxz
divl
lret
rcl
rcl
cmp
testl
stc
fcmovne
int3
sbb
shl
cmc
cmp
in
lret
cmp
fnsave
not
into
ret
mov
ds
mov
orl
fcmove
xor
repz
iret
icebp
cli
fadd
fdivr
leave
out
fildl
int
ret
xor
int3
ljmp
in
loopne
loopne
out
out
test
repnz
cmp
aad
rol
in
in
rolb
cld
in
rcll
sub
lock
test
out
sbb
int
jecxz
icebp
out
repz
cmc
aam
ljmp
iret
stc
fcom
lret
mov
test
fdivrp
cld
sub
in
cmp
loope,pt
in
ret
hlt
ret
in
xchg
mov
std
lret
shl
jmp
divb
clc
xor
dec
cmp
aas
addl
in
flds
mov
out
aam
xor
out
cmc
cmp
stc
cli
cmp
in
in
out
fisttpll
loope
test
jmp
int
jmp
not
loope
aam
faddl
out
orl
out
shr
clc
fnstcw
lds
lret
filds
xor
out
leave
lret
lret
cli
cmpb
shr
fdivp
or
fildl
shl
xlat
neg
cld
neg
repz
hlt
cld
fistpll
loop
xchg
aam
stc
xlat
cli
shl
test
sub
rcr
out
dec
iret
std
idiv
cli
cli
and
fdivr
popl
icebp
in
stc
leave
vpxor
repnz
sarl
hlt
fcmovu
loop
in
fsub
xor
lret
sti
roll
out
cmp
fst
call
fst
push
ret
xchg
sar
jecxz
fisttpll
in
cmc
in
xor
cmp
xlat
cmp
loope
out
cmp
xchg
rcr
int
in
in
ret
lret
shl
loopne
cmp
out
loope
repnz
hlt
sti
mov
mov
imul
enter
stc
std
iret
cmp
cmp
sbb
call
jmp
fst
lock
cmp
int3
icebp
into
hlt
jecxz
fcmovnu
enter
in
out
loopne
in
loop
in
out
in
jmp
sar
iret
in
aas
rcl
sti
aas
out
out
jmp
fsubp
xchg
sub
int3
hlt
repnz
xor
cmp
rcr
fdivrp
ret
fadd
aas
ljmp
icebp
loopne
lock
enter
stc
cmp
rcl
test
xchg
loope
fisttps
adc
jmp
xor
int
test
xlat
decl
xlat
jecxz
loop
shl
loopne
xor
repz
cmp
fildl
clc
jmp
out
test
loope
loope
in
lret
imul
ror
out
aam
in
aam
cmp
mov
fcmovnb
lret
cmp
lea
icebp
out
call
cli
cmp
idiv
cmp
mov
hlt
xor
repnz
sarl
fadd
jecxz
aaa
out
ds
sti
loopne
jecxz
nop
in
std
mov
out
mov
xor
leave
jecxz
cmp
fucomip
ror
sar
fcom
test
cli
fsubp
enter
lret
nop
test
int3
fxch
call
aam
xlat
rcr
out
in
in
out
xchg
mov
ret
fadd
aaa
cmp
not
in
cmp
cmp
add
aad
xchg
icebp
xchg
call
loop
xor
icebp
call
jecxz
test
jmp
fsubr
out
ljmp
fsubr
in
int
jmp
icebp
cmp
rcr
mov
jmp
cld
nop
repz
lock
out
shr
cmp
aad
loopne
aad
cmp
fdivr
addb
rcr
cmp
divl
jmp
call
xlat
into
xchg
jmp
xchg
jecxz
sti
ljmp
sti
iret
in
bnd
stc
fstpt
addb
add
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
sbb
out
aam
int3
call
call
shr
xor
lret
iret
dec
inc
ret
mov
xlat
clc
test
decl
cmp
cmp
repnz
cli
xor
sti
loop
cli
shr
hlt
in
lret
repz
out
sub
enter
rcr
repnz
in
aas
ds
addb
lret
fstl
jmp
sti
lock
in
out
clc
enter
sub
out
xchg
cmp
loop
in
shl
call
dec
cmp
hlt
rol
mov
mov
loopne
jmp
lock
icebp
in
xor
ljmp
addb
clc
out
cld
mov
mov
repnz
cmc
into
aam
fld
ret
and
hlt
ret
leave
fucomp
jmp
jmp
popl
in
out
vpsrlq
repnz
repnz
les
sub
loope
enter
imul
out
rcl
test
div
test
loope
loopne
clc
dec
call
ficoms
lds
das
fcmovne
fidivl
fmulp
repnz
test
orb
fcomi
mov
ss
das
iret
cmc
xor
repnz
repnz
repz
cmp
jmp
out
loope
popl
ret
aam
clc
int3
std
cmp
loopne
lock
clc
clc
clc
out
mov
test
in
int3
xor
out
std
fnstsw
clc
testl
jmp
loope
shr
clc
cmp
ss
call
jecxz
iret
lock
out
cmp
and
mov
cmp
xor
imul
fcmovnbe
neg
lret
fldpi
jmp
loopne
repz
cmp
cli
fadd
jmp
out
test
std
lret
and
icebp
repnz
hlt
rorb
xor
xor
cmp
sar
sbb
icebp
clc
cmc
repnz
mov
sti
lret
out
repz
out
in
xlat
lret
imul
cmpb
aam
loop
aad
mov
ljmp
fyl2xp1
enter
fsubr
loope
aad
loop
sbb
ljmp
out
in
iret
std
sar
cld
ss
dec
cli
loopne
mov
fiadds
lds
into
aam
out
out
cmp
leave
cmc
clc
aad
idiv
ds
ret
fnsetpm(287
mov
fmull
xlat
ljmp
out
repnz
repnz
ret
mov
aam
lea
sub
lock
das
xor
into
iret
in
out
aam
fdivr
cld
cmpl
fsubrp
aas
jecxz
out
rolb
lock
jmp
addb
repnz
test
in
ror
fdivrs
aad
sti
fcmovnu
fildl
cld
cmc
aas
xchg
jmp
out
xchg
orb
in
fdivs
hlt
icebp
out
rolb
int3
test
cld
xchg
enter
neg
lret
xor
cmp
repz
rolb
xor
div
jmp
into
stc
aam
out
clc
repz
cld
incb
xchg
mov
lret
in
rcl
xor
cmp
in
clc
fildl
out
xchg
out
adc
in
cmp
jecxz
repz
sarb
cmc
out
clc
dec
out
out
nop
lock
repz
rcl
cli
out
int
jmp
fstp
rcr
add
repnz
sub
sti
lret
in
in
aaa
xor
lret
int3
stc
jmp
out
icebp
xchg
mov
in
aas
mul
in
mov
xchg
in
shll
repnz
shl
lret
iret
in
int3
jecxz
ret
cli
les
in
test
out
jmp
rol
stc
sar
cmc
jmp
aam
ffree
repz
stc
loopne
in
incl
aad
cld
enter
aad
lret
iret
xor
sar
fdivr
mov
neg
iret
fdiv
mov
int3
ljmp
ror
idivb
idiv
icebp
out
into
ret
jmp
sti
leave
lret
out
jmp
mov
lock
jmp
fndisi(8087
clc
out
cli
ds
call
cmp
ret
in
imul
mov
or
repz
jmp
rcl
aad
aad
shll
lea
jle
add
icebp
enter
out
cmp
jmp
out
rol
fsub
mov
out
xchg
stc
jmp
xor
cmp
fdiv
cmp
into
cmp
shl
repnz
fdivr
repnz
add
cli
clc
incb
enter
fnstcw
hlt
cmp
cmp
jecxz
cmc
sarl
repz
aam
movl
aam
iret
fdivr
ffreep
in
div
rolb
xchg
jecxz
sbb
in
sar
int3
testb
in
out
sarl
loopne
rcr
repz
rorb
mov
dec
sub
out
call
aam
int
cmpb
std
icebp
loop
loopne
loopne
iret
addb
hlt
xor
jecxz
cmp
lret
aaa
int3
neg
into
cld
adc
addl
mov
jmp
xor
shr
stc
loopne
cmp
aad
shl
cli
call
icebp
mov
mov
jmp
cmp
repnz
shl
icebp
ffreep
sti
in
clc
enter
icebp
faddl
sub
cmp
out
ds
cmc
fiaddl
fxch
aas
test
into
int
in
nop
std
not
out
repnz
jmp
loope
in
iret
call
jmp
rcll
sarl
das
in
out
jmp
out
in
sar
fdiv
enter
in
fcomp
decb
stc
shll
std
jmp
cmp
in
jecxz
ret
out
iret
sti
fincstp
add
mov
in
in
int
lret
divb
out
shr
enter
ret
cmp
enter
lret
jecxz
in
iret
in
int
into
shll
lock
rol
enter
fsubrp
sti
cld
fcomip
repnz
ret
icebp
out
filds
in
enter
incl
xchg
call
mov
loop
fucomip
lock
xchg
loope
ss
lret
and
and
in
loope
std
out
fucomp
iret
mov
in
xor
jmp
repnz
faddp
shl
div
lret
mov
xlat
mov
out
call
jmp
push
and
aad
mul
shl
in
repnz
lret
xlat
repnz
cli
lret
out
rcr
out
stc
sarl
aad
test
dec
mov
fstl
xor
fld
out
jmp
clc
aam
idivl
sar
std
neg
sti
mov
iret
lret
xchg
mov
aas
fdiv
repz
ss
sti
sti
testl
ret
out
in
flds
loopne
das
aam
cmp
call
clc
jmp
fninit
std
rcl
out
lret
in
enter
out
sti
test
aam
out
jmp
neg
stc
aam
iret
shl
in
in
loopne
mov
loop
xlat
jmp
loop
aaa
int3
cmp
cmp
sti
rcr
rolb
int3
mov
into
cld
leave
loop
lea
lret
repz
aas
sti
in
fsub
out
addl
in
in
shl
xor
int
stc
iret
test
cmp
ret
mov
in
out
sti
jecxz
fdivp
loope
lock
rcl
cmp
fcmovu
ljmp
fdivrp
loopne
out
or
xchg
in
out
ret
into
sti
cmp
rcl
sbb
rol
mul
fsub
incl
lock
aaa
sti
out
lret
into
out
std
fsubrp
cmc
into
repnz
rcr
loopne
fcmovnu
lock
mov
lock
cmc
xor
repz
fld
rcr
aad
out
test
loopne
test
ljmp
out
aam
sarl
aaa
loop
rcl
cld
icebp
clc
sbb
mov
xchg
or
aaa
int3
aam
sti
ds
cmp
lret
loope
leave
ljmp
xor
xor
int3
cmp
rcr
test
out
roll
xchg
rorb
out
rol
jmp
rcr
fsub
out
sti
rcr
lret
ljmp
loope
out
xchg
jecxz,pn
cmp
hlt
xor
div
loop
ret
neg
cmc
shl
fdivrp
iret
out
jecxz
mov
cmc
in
aam
jmp
out
cmp
out
icebp
cmc
iret
shl
call
xlat
jmp
in
cld
into
int3
iret
icebp
shr
leave
not
cmc
cmp
shl
rol
fdivrl
lock
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
scas
cmp
into
out
jle
add
shl
sub
leave
sub
test
out
mov
in
ret
rcr
shr
fcmovbe
in
in
testl
enter
sar
in
shlb
repnz
faddl
rcl
aam
stc
fxch
out
repz
out
iret
loopne
lock
cmp
into
aad
hlt
fnstsw
flds
stc
out
into
lea
aas
lock
cmp
call
out
clc
fidivrs
fsubr
loop
jmp
in
xlat
ljmp
call
leave
iret
cld
int3
rol
xchg
rol
aad
lret
into
rolb
sub
fsub
cmp
fucomi
int
in
cmp
std
aam
stc
fmuls
mov
repnz
std
shr
xor
lret
shl
les
lret
sti
sbb
bnd
cmc
out
jmp
xor
fucomp
repnz
cmp
test
loope
cld
out
int
orl
cmp
aaa
ss
repnz
sti
std
ffree
ret
stc
loope
fsts
rcr
nop
jecxz
xor
int
in
fucomp
stc
fnstsw
rcl
rcr
test
iret
lock
in
out
shlb
out
xlat
cmp
cmp
loopne
ret
stc
rcl
neg
xchg
adc
mov
xchg
lret
das
out
fsubr
out
leave
out
cmp
in
rcl
aad
fcmovnb
aad
fmul
test
jmp
lock
aaa
jmp
fstp
cmpb
sti
out
decb
int
jmp
loope
in
xor
xor
aaa
shl
int3
clc
out
fcomip
ror
cmp
in
mov
in
rcl
shl
fcmove
aaa
aad
loope
clc
out
repz
cmp
xor
loope
into
ljmp
shr
sar
xchg
fsub
repz
call
lock
loopne
mov
out
cmp
lret
cmp
cmp
sbb
clc
imul
out
out
xchg
ljmp
hlt
cmp
neg
ror
in
into
icebp
xchg
test
cmp
enter
out
out
iret
out
enter
repz
aam
aam
sar
out
fdiv
ljmp
leave
ficoms
bnd
cmc
clc
clc
enter
fucomi
fcomp
out
aam
ret
rcr
dec
in
lock
test
ljmp
into
clc
ds
lock
addb
clc
out
int
sar
jecxz
enter
int3
cli
call
in
in
sar
loopne
mov
std
clc
sti
fdivr
fucomp
adc
call
xor
leave
leave
into
int3
ds
repz
ds
mov
cmp
rol
sbb
testb
cmp
lret
icebp
int3
fidivrs
cmp
fdiv
xchg
sti
ret
lret
repnz
in
xor
sarl
shl
clc
int
aam
xor
dec
jecxz
rorb
rol
xor
hlt
sarb
ss
hlt
out
fdivp
aas
stc
call
call
nop
std
lock
sub
div
jmp
cmp
icebp
add
in
call
std
sti
xchg
mov
in
mov
aam
rcl
ds
leave
fsubr
fcomp
in
stc
in
mov
mov
std
int3
repnz
repz
test
cs
fucomp
icebp
neg
out
neg
shl
and
fadds
call
int
fnstenv
ror
lret
int
idiv
repnz
rorl
aam
ror
in
cmp
cmp
jmp
jecxz
hlt
mov
mov
cli
rorb
xchg
sub
hlt
int3
fcmovne
int
aad
lret
cmp
idivb
jecxz
out
xlat
cld
fsubr
xchg
loopne
jmp
repz
cmp
sarb
out
out
repz
fsubp
icebp
out
out
ret
cmp
decb
enter
lret
ss
xor
or
test
ljmp
divl
in
jmp
rcl
ss
aam
idiv
std
cld
loopne
fsub
jmp
out
adcl
cmp
idivl
int
roll
out
xchg
mul
out
loop
test
jmp
rcl
xor
idiv
idivl
cmp
in
aas
and
jecxz
cld
jmp
out
mov
int
inc
or
inc
or
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
lds
loop
jmp
jle
add
cs
xlat
fxch
int
cmp
loope
into
ret
out
cmp
jecxz
cli
xchg
in
loop
ljmp
cmc
ljmp
in
div
rolb
nop
out
adcb
rcl
clc
xlat
repnz
sti
ret
xlat
out
fiadds
std
lret
shl
loopne
repz
cli
aam
ror
cmp
into
sub
cmc
call
xlat
incl
call
in
lret
cmc
aaa
cli
cmp
rol
loope
fcomp
fisttps
mov
into
jecxz
repz
cmc
leave
repz
out
sti
sar
in
cmp
lds
fmuls
mov
in
repnz
aam
hlt
lret
fcmovb
in
cli
shl
shl
leave
mov
in
loopne
cmc
into
aas
ret
ror
cmp
in
ds
lret
cmp
adc
clc
mov
out
lea
orb
in
jmp
cmp
ret
in
test
in
loope
int3
mov
ficoml
jmp
xor
cld
rcl
cli
fildl
loopne
mov
cli
xchg
ljmp
add
leave
xlat
cld
shr
into
testl
incb
sti
xchg
int3
aam
lret
ret
cmc
shr
std
call
cld
rol
faddl
in
sti
lea
xor
repnz
xlat
aam
cmp
incb
out
sar
jecxz
std
in
mov
int
out
nop
ror
lret
repz
jmp
cmc
cmp
jecxz
mov
repz
xor
call
repnz
sub
fildl
xor
repnz
hlt
cmc
ds
out
lret
int3
lock
iret
mov
ljmp
shl
xchg
xchg
in
das
fnstcw
out
rcl
xlat
fmulp
xor
in
mov
cld
lea
mov
stc
rol
lock
fnstcw
lret
roll
adc
mov
out
int
fldl
repnz
out
cmp
ror
loop
cmp
stc
in
rol
fxam
out
test
call
ljmp
aaa
addb
clc
ffreep
clc
xchg
rcl
xchg
in
mov
fptan
repz
fsubp
ds
repnz
aam
std
lret
test
xchg
into
in
out
into
loop
cli
icebp
fcmovnbe
fsubr
into
incl
call
int3
mov
xchg
xchg
imul
loop
xor
cmp
bnd
repz
cli
cld
iret
leave
adcb
lret
ss
shl
icebp
test
cmp
ret
adc
fnstsw
mov
mov
ret
into
out
icebp
xchg
into
int
clc
cmc
ljmp
cmp
out
cli
mov
ljmp
test
jecxz
aaa
lret
lret
into
cli
test
ret
xor
idiv
enter
xchg
xchg
cmc
xlat
sti
cmp
into
cmp
in
fdivrp
loop
ljmp
sti
ror
fdiv
rcl
lret
aam
cli
out
std
jmp
std
xchg
fmul
int3
loopne
call
out
fnstcw
aam
fadd
out
fcmovnb
clc
mov
mov
out
mov
jmp
cmp
in
cmc
rcr
jecxz
dec
in
xchg
sbb
rorl
clc
rcl
clc
cli
rcr
loop
fucom
sar
loop
sti
leave
lret
test
mov
into
fisubrl
rcl
in
ret
in
loope
rolb
stc
jmp
std
adc
mul
lret
fxch
shr
cmp
mov
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
inc
push
iret
cmp
out
jg
or
jle
aas
aam
mov
enter
xchg
xchg
fucomip
mov
out
ss
fyl2xp1
fidivrl
ljmp
xchg
jmp
out
xor
imul
div
fsubrp
aas
loop
push
sarb
cmc
fucomi
ret
out
cld
icebp
loopne
cmc
xchg
jecxz
cmp
shr
cmp
stc
loopne
rol
ds
neg
rol
cmp
test
loopne
into
icebp
loopne
loopne
ret
cmp
icebp
cmp
cmp
int
test
cmc
mov
xchg
shl
imul
xor
neg
cmp
cmp
ror
ss
xbegin
into
mov
shl
sti
xchg
aad
rcl
imul
lret
xlat
aam
sub
shl
icebp
leave
out
test
flds
jmp
jmp
in
cmc
shl
icebp
ss
sbb
fadds
loope
sti
xchg
out
lock
fnstcw
cmc
stc
cmc
rcr
repnz
fdivs
out
repz
fsubrp
leave
in
out
xor
int3
fdivl
aad
lock
cli
stc
cmp
icebp
aad
addb
jmp
mov
loopne
out
aaa
rcl
in
jmp
iret
int
jmp
cmc
cli
mov
ljmp
xchg
loopne
lret
enter
cmp
icebp
icebp
int
cmp
shl
out
sbb
addl
divl
stc
ret
fdiv
repz
cli
fst
test
xchg
test
into
aam
cmp
loopne
xchg
jecxz
out
out
out
std
xchg
call
ror
rcl
int
shl
repnz
icebp
stc
filds
fiadds
addb
call
xor
in
rcl
cmp
int
fucom
fcmovnb
lret
fmull
std
std
xchg
xor
leave
ss
aad
lret
test
in
lock
rolb
fmuls
in
aad
xor
xor
cmp
aad
in
xchg
ljmp
out
mov
fcmovnb
imul
std
not
aad
fiadds
lret
idiv
mov
loop
add
sarb
enter
aaa
clc
fiadds
rol
testb
into
ficoml
call
hlt
shl
ds
div
cmp
loop
jmp
vcvtdq2pd
leave
or
std
call
ljmp
cmc
stc
rcl
call
xchg
out
sub
call
jmp
aas
hlt
stc
fdivr
addb
int
xor
loope
lret
vpaddsw
cmpl
xabort
repnz
fisttps
loop
jmp
shl
lret
in
rcr
imul
fdivr
cmp
jecxz
test
jmp
jmp
mov
shl
aaa
fidivrs
shr
cmc
neg
cmp
xchg
neg
repnz
sub
xchg
aam
int
rcl
lret
jmp
icebp
mov
int
clc
fsub
roll
sub
loop
mov
not
aam
cmp
jmp
shl
xchg
fdivp
call
mov
fcomip
repnz
shl
cmp
ret
cmpb
test
xlat
mov
xchg
call
ss
int3
cli
fidivs
cmp
loope
test
shl
fdiv
rcl
in
movl
cmp
fdiv
cmp
sbb
in
sar
aam
repz
loopne
std
lret
lret
into
shl
out
xlat
ss
out
cmp
xlat
aaa
into
lret
fadd
xchg
aam
loope
mul
mov
mov
xor
loope
mul
xor
leave
cmp
cmp
fistpll
loope
loope
loopne
neg
sbb
add
loope
add
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
adc
push
adc
add
fisttpll
loop
sub
xor
ret
lret
icebp
cmp
shl
cmp
stc
fucom
clc
jmp
in
mov
xchg
loope
loopne
rol
iret
xor
shr
in
aam
ror
addb
neg
int
in
in
jmp
ss
ss
cld
fdivr
cmp
in
iret
xchg
cld
div
jmp
loopne
in
ror
icebp
in
in
into
imulb
sar
shr
loopne
fabs
cli
roll
orl
add
xor
hlt
cmp
fdivrp
lock
out
inc
cli
xchg
mov
addl
lret
div
loopne
div
sar
std
jmp
xchg
call
jmp
repz
aam
xor
out
cmp
out
test
xlat
call
loopne
icebp
loop
sub
lock
in
stc
xlat
repz
cld
in
shl
into
aam
clc
std
stc
jmp
and
fmull
aad
cld
xlat
idivl
std
leave
xlat
loop
lock
loopne
out
jmp
std
aam
bnd
xor
icebp
shl
out
fucom
fdivrl
in
shl
test
out
orb
repz
xor
in
ss
lock
or
rcr
sti
sub
repz
shl
out
out
leave
std
int
imul
repnz
rcr
ds
clc
loope
mov
loop
test
loop
enter
cmp
cmp
sar
repnz
ret
cmc
fninit
stc
in
sti
int3
xchg
test
out
rcl
hlt
xor
into
lock
cmc
idiv
out
call
mov
out
sub
mov
in
rol
icebp
stc
leave
in
enter
repz
hlt
cli
repnz
mov
lock
in
xchg
mov
rcl
call
fdivrs
lret
not
sarb
out
sar
call
loope
xchg
nop
mov
in
xor
jmp
cld
cmp
rcr
cld
rolb
sbb
jmp
in
rcr
aad
xlat
hlt
xor
ljmp
cmp
fcmovu
in
in
sub
ret
out
out
in
ds
iret
cli
cmp
cmp
cld
shl
xchg
jmp
lea
ss
hlt
xor
fneni(8087
cmp
repnz
aam
sti
int3
xlat
decb
cmc
ret
ret
in
in
cmc
cmp
in
ds
stc
mul
ljmp
icebp
fimull
clc
ss
out
call
cmp
sti
loop
jmp
test
mov
adc
shll
out
ret
in
xor
ret
fst
testl
rol
lds
call
out
repnz
iret
add
test
test
in
mov
xchg
loop
shl
test
xor
jecxz
cli
ss
into
in
icebp
clc
sarb
loop
aad
xchg
fldl
xchg
stc
std
aam
repnz
sti
addb
or
in
mov
out
stc
lret
fmul
stc
out
int
clc
or
leave
enter
jecxz
in
jmp
in
xchg
div
xor
cmp
cmp
cmp
in
cmp
test
repz
out
lret
iret
ljmp
sub
cmp
in
aas
xchg
std
cld
lret
sub
iret
hlt
shl
xor
xor
cmp
int3
cmp
in
loop
mov
out
mov
out
test
in
cmc
rcl
cli
fxch
repz
sarl
shl
loop
incb
fcmovb
push
lret
xchg
fdiv
out
cmp
lret
xor
aad
fcmovu
sarb
jecxz
loop
int
out
in
out
decb
add
andl
add
adc
jmp
rcl
aad
rcrl
mov
jle
add
xor
fmul
cmp
xorl
fsub
testb
out
lret
sub
out
out
mul
lret
fsubr
cli
cmp
cmp
xchg
int3
in
lret
iret
out
hlt
out
cmc
out
cmp
stc
cmp
xor
lock
ds
loopne
mov
into
leave
fcmovnu
in
icebp
nop
nop
in
lret
in
ljmp
lret
in
fsub
iret
sti
jmp
fisttpl
addb
in
lret
aad
jmp
hlt
sarl
cli
cmp
lret
sbb
xchg
xchg
repz
shlb
leave
cmc
lock
in
cmp
ds
cmc
mov
faddp
lret
jmp
xchg
fucomip
out
shl
les
icebp
icebp
out
int
ret
out
fdivr
cld
xlat
xlat
fucomi
ljmp
call
aaa
stc
fst
into
out
xlat
shl
sti
loop
xchg
test
sub
loopne
out
xchg
out
iret
lock
xlat
fld
clc
cmp
cld
sbb
cmc
loop
or
loope
in
notb
fdiv
lret
stc
xor
loopne
mov
test
fsubrp
mov
leave
stc
sti
in
xlat
ds
lret
loope
clc
sti
loopne
xor
sbb
dec
nop
shl
loope
fcmovbe
sarb
int3
cmp
stc
faddp
lock
loop
out
int3
loopne
in
jecxz
test
loope
int
imul
cmp
cli
aad
in
fildl
in
lret
xchg
xchg
adc
in
out
lret
cmc
fmul
jmp
cmp
xchg
cmc
cmc
decl
decb
fidivl
mov
cmp
in
aaa
stc
mov
lret
loopne
in
out
faddl
fidivl
xor
aaa
ss
cmp
xor
loop
out
fcmovnu
jmp
or
xchg
adcb
int
repnz
testb
addl
clc
xchg
int
loope
into
hlt
cmc
ljmp
div
fdiv
aam
sarl
in
sub
xchg
hlt
ljmp
cmp
hlt
out
fcmovu
cli
shl
into
faddp
ret
std
call
in
mov
out
xchg
dec
clc
xor
in
jmp
sti
fdivrs
fprem
lock
fucom
cmpb
cld
jmp
ret
cmp
enter
cld
hlt
sti
jecxz
loop
cmp
loopne
int3
out
loop
int3
xchg
popl
ret
xor
cmp
fidivrs
loopne
xchg
call
cld
and
in
int
out
out
xor
loope
fcmovnbe
out
filds
hlt
cmp
lret
out
loopne
aad
cmp
out
shl
cmp
repnz
test
fsub
loop
test
xchg
jmp
ljmp
cld
out
rcl
test
rcr
call
jecxz
test
in
aam
out
shlb
ds
idivl
out
fst
jecxz
rcl
jecxz
lea
ror
xchg
xchg
sub
xor
cmc
xor
rcl
repz
xor
ret
xchg
repz
loop
leave
out
ljmp
xchg
repz
not
rcl
out
call
lock
repnz
xchg
les
mov
repz
xor
cli
out
fnstcw
lock
ds
aam
xchg
movb
into
loopne
xor
cmp
into
loopne
cmp
divb
addl
leave
xchg
cld
adc
sti
aad
ljmp
in
iret
std
rcr
test
addb
icebp
in
xor
shl
lds
fdivp
xchg
ret
in
into
iret
mov
rorl
xor
in
rol
faddl
mov
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
inc
sbb
sub
jg
roll
jle
aas
test
loop
in
sbb
stc
xchg
fsub
lea
lret
hlt
jecxz
cmp
sarl
sar
hlt
stc
stc
sar
cmp
in
mov
repnz
ror
icebp
fldpi
int
into
lret
out
cmp
ret
ljmp
out
jmp
mov
icebp
call
fnclex
hlt
in
std
test
jmp
cld
ret
xchg
out
xchg
out
loope
xor
fdivp
cld
cmp
xor
in
fdivp
test
into
rorb
sti
xor
cmp
int3
jecxz
in
loopne
fdiv
test
xor
enter
rolb
xor
lret
iret
fnstsw
cld
ds
faddp
faddl
loop
out
jmp
mov
hlt
testb
aam
cli
div
jecxz
aad
lock
repz
loopne
call
xchg
mov
out
cmp
loop
fcmovb
test
ret
in
or
cli
sub
rolb
in
mov
fstpt
neg
aad
cli
testl
test
in
rol
xor
lret
rcl
loopne
test
cmc
aad
mov
out
mov
shll
repz
test
fcmovb
repz
std
shr
fdiv
decb
orl
shl
lret
iret
cmc
fadd
int3
xor
fldl
test
fsub
clc
mov
std
iret
fists
ljmp
sar
cmp
fscale
loop
stc
out
lret
leave
fxch
int
loopne
loop
xor
out
enter
ret
jecxz
xlat
repnz
sti
loope
enter
icebp
int3
mov
in
xor
cmp
aaa
cmp
fdiv
in
cli
test
jmp
xchg
int
rclb
out
lret
fcmovnbe
xor
hlt
jmp
in
ret
aam
orb
mov
loope
out
into
into
shl
clc
repz
cmc
shl
fmulp
shr
mov
clc
mov
rorl
loop
stc
lret
fdiv
aaa
int
cmp
rcr
push
lret
ret
out
in
in
int
repnz
cmp
fdiv
hlt
xlat
in
repz
cmc
test
mov
mov
hlt
repnz
call
cmp
cmp
rolb
test
xlat
xchg
test
xchg
cmc
mov
enter
xor
ror
lock
repnz
test
in
out
xchg
fmull
loop
xlat
call
lret
icebp
loopne
sar
loopne
out
in
fxch
sbb
testb
fmul
ljmp
fsub
rcl
stc
cmp
fmulp
repz
out
repnz
shl
out
lret
in
imul
into
sti
testb
mov
xchg
nop
in
sarl
xor
jmp
cmp
loop
rol
cmp
fmull
out
int3
int
call
xor
cmc
idivl
xor
cmp
loop
fsub
aam
test
out
mov
loope
test
int
rcl
shl
int
div
rcr
lret
int
int
hlt
xchg
xchg
in
fnstenv
cli
out
aad
call
loope
lret
in
loope
addb
jmp
clc
fcmovb
clc
in
aam
cmp
testb
icebp
call
std
clc
cmp
rcl
fdiv
stc
add
xchg
std
aam
cmp
call
in
xor
xor
xor
lret
ds
std
call
xchg
std
addb
in
xor
ss
rol
std
icebp
out
out
aad
test
loope
xor
fdivr
sar
aad
xlat
xor
neg
test
jmp
xlat
out
jmp
mov
fnstenv
out
fidivrs
cmp
shl
ret
out
loope
addl
inc
clc
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
inc
inc
jg
roll
jle
jecxz
int3
ljmp
cmp
not
icebp
fucom
fadd
shr
ljmp
lret
xchg
rcl
xor
in
idivl
rcr
fst
loopne
fcom
cld
std
stc
aas
fdiv
test
enter
clc
out
fcmovbe
aad
jecxz
out
cmp
sti
in
jmp
out
into
lock
and
int3
aam
fstpt
lret
test
loop
aam
adc
out
repnz
shl
sti
call
icebp
aas
imul
cli
cmc
xchg
jmp
int
xchg
lret
xchg
lret
aad
cli
ss
repz
orl
out
in
fsubr
repnz
loope
enter
iret
inc
rcl
imul
xlat
cmc
xor
cli
aam
call
hlt
sbb
shl
ret
xor
repnz
jmp
loope
jecxz
fimull
loop
in
in
test
hlt
cmc
cmp
xor
ret
iret
rol
icebp
enter
xchg
xorl
sti
out
test
in
out
iret
icebp
aas
icebp
loope
lret
stc
jmp
xor
iret
cmp
out
repz
loopne
xchg
out
ret
aam
out
in
ljmp
leave
call
hlt
aam
stc
std
cli
fdivr
fiadds
mov
enter
fsub
xchg
xchg
fdivp
aas
xor
jmp
leave
xlat
sarl
cmp
faddl
aas
fcmovne
jmp
lock
jmp
fstpt
sti
xlat
ret
test
fsub
ret
fcom
fisttpl
loop
iret
in
int3
vpmulhw
cmp
lock
in
sar
sti
flds
leave
lret
out
xchg
test
aad
fcomi
out
std
sub
sar
rcl
hlt
leave
clc
fdiv
leave
ljmp
hlt
jmp
lock
out
hlt
div
repz
icebp
cmp
sbb
in
push
enter
stc
sar
cmp
xor
shl
cmc
out
adc
not
in
in
mov
loop
out
out
loop
into
ret
repnz
out
xor
jmp
jmp
xchg
rcr
fcmovu
loopne
faddl
repnz
xchg
aas
ljmp
lret
lock
clc
repnz
out
out
fmul
fldl
xor
repnz
fidivrl
xor
out
iret
repz
loopne
ret
cld
leave
rcr
roll
out
into
lret
cld
leave
bnd
iret
fcomp
rcl
repz
shl
test
out
in
sti
loopne
int
fadds
mov
cmp
std
mov
xor
shl
jecxz
icebp
cmp
loope
std
test
fadd
xlat
sub
cld
enter
iret
xchg
out
shr
cld
shr
fdivrl
into
and
jecxz
hlt
addl
lret
rcl
ret
vpsllq
lret
addl
cli
test
mov
cld
std
test
repnz
mov
xor
in
in
cmp
out
loop
aam
jecxz
enter
addl
int
jecxz
xor
repz
filds
fiadds
mov
mov
lea
fsub
icebp
into
into
int3
neg
loopne
ret
les
in
xlat
lret
mov
aam
jmp
cmp
xor
into
cmc
cmp
std
lock
cmp
mov
jmp
jmp
aaa
das
xor
lret
std
aas
addb
loopne
cld
loope
leave
loopne
fisttps
xor
shlb
call
fucomi
ds
fadd
out
addb
fnop
xchg
mov
test
aaa
ret
fxch
ds
iret
jmp
fstpt
adc
clc
test
in
rclb
xor
ss
lret
cld
add
in
ret
shl
loop
adc
mov
sar
in
stc
call
lret
roll
aad
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
mul
testl
xchg
fdivs
stc
in
ljmp
into
xor
cmp
clc
xlat
in
in
fimull
not
repnz
rcl
out
lock
cmp
fdivrp
xchg
fadds
vpaddusw
xchg
xchg
loop
cmc
sti
out
jmp
ret
ds
fstpt
ret
leave
sti
lret
mov
nop
loope
mov
out
lret
cld
loope
lock
cmp
sar
test
add
mov
xchg
nop
lret
loop
out
xlat
stc
cmp
cmc
loop
int3
rcr
in
fdiv
call
icebp
xchg
in
repnz
lock
rcr
in
neg
cmpl
call
xchg
aam
loop
in
divl
clc
aaa
xor
icebp
jecxz
cmp
loope
decl
lret
rorl
xor
jmp
in
cli
fchs
loopne
ffree
loopne
fsubr
jecxz
fucomi
xchg
jecxz
call
int
cmp
cld
fld
cmp
add
xchg
shr
loop
xor
cmp
int3
cmc
mov
sti
ret
out
fcmove
loop
mov
xor
cmp
stc
ret
xor
loopne
aam
int3
cmp
ficoml
dec
xor
lret
leave
cmp
jmp
iret
loop
repz
aam
filds
mov
and
xor
lret
aad
cmp
out
ror
hlt
mov
in
lret
lea
loope
sarb
cli
out
into
aas
jmp
in
fucomi
fmulp
mov
int
int3
out
jmp
das
xor
rol
fucomi
repnz
xor
out
in
fadd
in
cli
rorl
out
repnz
sub
imul
jmp
iret
aam
xchg
cmp
enter
enter
fistl
enter
sti
aam
rcr
hlt
int3
shl
out
cmp
clc
int
mov
iret
cli
test
aad
fidivrl
das
aaa
div
in
fiadds
aad
leave
int3
jmp
div
ss
fcom
ss
int3
int3
push
rol
ret
leave
ljmp
repz
in
shl
repnz
in
lock
xor
in
loopne
fsub
faddl
icebp
loopne
lret
shl
cmp
clc
in
fld
aad
rcl
cli
ret
ret
out
fsub
mov
aam
in
ljmp
cmp
std
rol
std
mov
loopne
loopne
int3
jmp
not
aad
stc
and
cli
sti
xlat
filds
loop
sbb
shl
rol
out
xor
in
xor
int3
loope
lret
cmp
out
fdivr
fucomip
clc
xchg
mov
ror
jmp
xor
cmp
test
idiv
ljmp
loopne
xchg
lret
loope
in
enter
std
cmp
aam
int3
cmp
out
fcmovnbe
movl
hlt
in
ss
xor
or
fdivr
jecxz
enter
out
lret
adcl
jmp
int
idiv
xchg
call
xchg
cli
lret
iret
shl
out
repz
jmp
ss
xor
aas
out
std
movb
into
mov
xchg
ljmp
dec
ror
dec
rcl
faddp
out
and
fildl
cld
out
mov
in
cmp
in
mul
xor
cmp
loop
cmp
mov
xlat
cli
out
fcmovne
fiadds
ret
ss
out
cmp
xlat
hlt
rol
orb
in
shl
jmp
enter
lret
cmp
jmp
jmp
addl
cli
repnz
out
std
int
cli
fistpll
call
jmp
cld
cld
lret
out
into
das
jecxz
into
cmp
inc
arpl
orl
add
imul
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
or
pop
push
and
jg
roll
jle
ljmp
int3
icebp
and
cli
in
in
fimull
iret
into
out
out
aaa
aaa
iret
cmp
out
loope
testb
shl
repz
jmp
lock
call
ljmp
enter
shl
xor
jecxz
in
aam
in
jmp
cmp
test
in
jecxz
ror
int
lea
xor
rcl
cmp
stc
out
sub
in
ficoms
loop
xlat
lret
aas
xlat
in
sar
fadd
out
mov
std
jecxz
leave
xchg
xor
sti
aam
cmp
fsubr
fadds
fmuls
xchg
loop
out
call
in
sbb
into
xor
fcmovnu
cli
in
out
push
fisttps
lret
shl
fnstsw
icebp
rol
xchg
roll
out
dec
cld
nop
test
out
fmul
icebp
divb
cld
or
loope
test
loop
mov
nop
ljmp
aad
fcmovbe
aam
int3
shr
std
rcr
out
xchg
loop
leave
lret
rcr
jmp
hlt
lock
cmp
iret
hlt
into
int
cmp
iret
aad
aad
cmp
enter
fcoms
in
out
aam
out
jmp
jmp
xlat
aas
jecxz,pt
neg
fildl
stc
cli
fsub
xor
test
out
shl
into
icebp
call
cld
stc
clc
ffreep
jecxz
ror
loopne
sti
iret
ret
fdivp
aaa
out
call
in
int
sub
cmc
filds
test
les
xlat
lock
fldlg2
cmp
lret
loope
out
aas
xchg
clc
ret
fmull
sub
ss
jmp
cli
ror
repnz
out
rcr
enter
jmp
out
fucomp
xchg
lret
cli
xor
xor
lock
in
cmc
les
fmulp
sbb
jmp
in
hlt
xor
in
aad
leave
aam
sar
iret
repnz
lds
mov
fdivrp
out
xchg
fsubrs
cmp
rol
fidivrs
jmp
loopne
test
fdivr
aas
rcr
xchg
xchg
xchg
int
cs
out
cli
in
lret
shr
aam
ret
xchg
aad
ret
cli
out
ror
fmul
cmp
icebp
mov
jmp
icebp
out
lret
fld
xor
out
std
loope
jmp
cmp
test
mov
out
loope
decb
ret
jmp
fdivrl
in
xlat
fdivr
shl
cmc
loopne
into
jecxz
icebp
call
loopne
jecxz
ror
imul
loop
jmp
fdivrs
enter
jecxz
roll
and
lret
aaa
lret
repnz
lock
in
ret
xlat
test
aam
cld
fdivr
repz
cmc
xchg
in
xor
cmp
cmc
xlat
hlt
int
addl
lret
stc
out
repz
loope
test
shl
into
cmp
aad
iret
aad
clc
enter
jmp
stc
repnz
rcr
lret
leave
out
sub
ret
neg
f2xm1
loopne
out
decb
adc
jecxz
ret
lret
xor
loopne
cmp
jecxz
loop
fmuls
out
fsubr
incl
xor
ret
aam
clc
lock
addl
clc
mov
loop
cmp
leave
test
cld
rolb
stc
leave
in
lret
aam
into
xlat
repnz
repz
enter
nop
enter
loopne
int
jmp
shl
sti
fdivp
fdiv
shl
cmp
xchg
rolb
icebp
repz
iret
jecxz
shr
clc
hlt
clc
neg
loope
xor
lds
loop
ljmp
fcmove
not
icebp
out
sar
fidivrs
clc
imul
cmp
icebp
shl
fld
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
bound
add
roll
jle
mov
xchg
ror
aad
lret
sar
cld
aaa
aad
lock
shl
fildl
mov
test
fsub
mov
call
xlat
sar
addl
add
cld
out
faddl
shll
in
call
int3
fcmovne
loopne
fdivr
xchg
fchs
loop
hlt
lock
xor
call
jmp
clc
ret
icebp
loope
orb
in
mov
into
mov
out
into
hlt
aaa
fst
out
aaa
sti
cmp
std
fldl
fcmovu
cmp
xor
xor
repz
ljmp
cli
ds
fdivrp
fsubp
cld
mov
mov
out
in
hlt
cs
jmp
lock
sti
out
ffreep
rorl
shl
jecxz
out
int
leave
fcom
out
enter
call
fcmovnbe
out
lock
cmc
leave
fcmovu
and
sbb
addb
loop
sarl
cmp
rcr
cmp
ret
test
loope
faddl
iret
mov
call
icebp
ret
loop
xor
out
fdiv
clc
fstpt
testl
jecxz
add
into
mov
xchg
repnz
xor
cmp
ret
cmp
xlat
cld
lret
test
loope
loope
fabs
ret
lock
jecxz
std
in
in
test
jecxz
jmp
ljmp
stc
lret
cmp
hlt
cld
shl
fsubr
icebp
clc
loope
cmc
fsubr
jmp
fsub
cli
cld
rcl
or
repnz
imul
iret
fnsave
xlat
in
jmp
repz
jmp
xchg
rcll
out
aad
lock
fdiv
int
addl
mov
xchg
out
jmp
ret
cs
rcl
int3
cmp
in
sar
inc
mov
loopne
in
in
jmp
xor
not
cmc
in
int3
std
rcl
roll
in
cli
into
repnz
loop
loopne
sub
sub
std
out
in
out
lock
enter
or
jecxz
sti
out
iret
into
xchg
out
aaa
icebp
jmp
fdivl
int
int
loop
std
sar
cmc
std
mov
out
mov
xchg
dec
call
neg
enter
cmpb
fcomp
cmc
sti
mov
stc
in
icebp
in
rorb
cmc
ss
aad
cmp
fldpi
repnz
in
stc
cmp
out
ret
loopne
fdivp
out
shl
jmp
cmp
hlt
iret
icebp
out
imul
test
loop
fstp
xchg
lret
fstp
test
fptan
fcmovu
fidivrl
int3
sar
rcl
in
sti
clc
adc
fcomi
cmp
shl
lret
cmc
xor
out
rcl
fdivrs
std
sti
neg
fucomip
roll
int3
enter
std
mov
test
cs
aam
xlat
std
int3
loope
cmp
cmp
hlt
sti
push
loope
lret
out
shll
xor
cmp
cmc
aaa
ror
sar
loop
cmp
filds
cmc
call
vpor
xor
rcl
cli
int3
into
cmp
lret
cmp
icebp
in
ljmp
std
ljmp
imulb
int
test
aam
xchg
stc
xor
mov
ljmp
out
xchg
repnz
jmp
aas
sarb
out
div
fildl
loop
into
sti
int3
mov
xor
repz
stc
cmp
fcmovnu
test
in
xor
leave
lret
fcmovb
rcr
in
repz
in
out
imul
into
aas
cld
aam
int
fsubrp
rorl
cmp
mov
enter
lret
int
xor
fstp
in
sbb
test
test
fcmovb
sti
int3
mov
rcl
aam
repz
das
out
aad
ds
aam
xchg
and
in
std
ret
addl
ljmp
sar
iret
shl
idiv
fld
testl
rol
cmc
lds
cmp
xor
div
lret
sti
mov
push
jmp
aam
enter
aad
cmp
and
nop
jg
roll
jle
hlt
fcomip
idiv
fdivrl
lret
fiaddl
fneni(8087
icebp
repnz
test
int
lret
stc
in
test
out
sar
and
fmulp
loope
in
jmp
lock
cli
xlat
iret
ss
aas
sti
idivl
clc
out
jmp
out
icebp
xchg
std
ffree
out
jecxz
icebp
rcl
repz
lock
iret
add
out
jmp
out
cld
fst
mov
cmp
int
ljmp
loopne
rorl
mov
in
roll
out
in
aaa
in
cmc
int
xor
mov
ret
les
notb
lret
jmp
int3
shl
cmc
into
loop
neg
stc
rcl
aad
leave
lret
fucomip
xchg
test
xor
int3
fcmovnb
stc
in
sti
clc
repz
fldl
fsubr
into
enter
sti
clc
lock
sarl
cmp
into
lock
rol
jecxz
testl
aam
clc
ret
xor
cmp
fsubrp
hlt
ljmp
aam
enter
fcomp
ljmp
ret
ss
lock
icebp
stc
loope
rcr
ret
out
shl
std
into
or
aaa
fcmove
rcl
cmc
repnz
icebp
aad
repnz
clc
aam
orl
clc
ss
xor
aad
ss
aad
cmp
fcmovnu
aam
aad
sti
cli
test
leave
fxch
mov
aaa
icebp
into
jmp
fscale
sti
ss
ljmp
in
fcomip
fimull
loope
test
call
aaa
cmc
cmp
xlat
fnstcw
repz
out
repz
vmovq
std
movl
aam
jmp
iret
aad
in
fadds
add
fucomp
in
jecxz
loopne
in
fstp
aam
lock
xlat
cmp
hlt
mov
ljmp
ss
fcmovbe
sti
sti
out
repnz
lock
sarb
test
enter
lret
int3
call
fcmovnbe
cmp
shl
hlt
and
aas
cmp
cmc
in
in
enter
iret
decl
xor
hlt
aad
aad
rol
fdivp
add
test
in
fisttpll
lret
rcr
xor
lret
fdivr
jmp
icebp
in
mov
in
rorb
ror
aad
fucom
div
sbb
sbb
ds
jmp
mov
ljmp
in
in
lret
xor
cli
call
hlt
jecxz
sti
aad
mov
mov
shl
mov
call
out
rcr
cld
into
in
std
fldl
loop
fadd
sti
mov
fsub
cld
test
std
xchg
out
shll
clc
icebp
hlt
rol
jmp
icebp
addb
test
sbb
xchg
cmp
repz
lret
loope
int
into
cld
aas
add
rcl
test
loop
xchg
les
rorl
in
in
fdiv
cmp
jmp
stc
cmc
loopne
shl
orb
in
icebp
test
jmp
aam
leave
shl
int
cmp
out
iret
in
aam
sti
stc
stc
fldlg2
out
aam
not
divl
icebp
xlat
idiv
in
shl
leave
ljmp
icebp
cli
fimuls
out
cmp
cmp
in
out
fadd
clc
xlat
fadds
icebp
out
test
mov
in
clc
shl
in
sar
xor
std
stc
loopne
aas
repz
out
leave
fsub
nop
test
out
nop
mov
in
aam
aaa
into
test
into
ds
ds
out
fmul
fdivr
movb
jmp
fcomi
lock
stc
in
iret
cmp
xchg
lret
ljmp
sub
out
cmc
incb
loope
loopne
loope
xchg
lret
ljmp
lret
rcl
sub
sar
or
sar
mov
jmp
decl
mov
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
rol
lret
rcl
std
call
fnclex
iret
sti
stc
fldl
iret
loope
orl
cli
in
stc
icebp
jmp
cmp
enter
stc
iret
fucomip
out
cld
rorl
clc
in
ljmp
fildl
aam
fimull
cmc
in
sub
xlat
shl
aad
rcl
sar
fimuls
addb
out
aam
out
int3
ljmp
int3
aam
filds
jmp
int3
xlat
jmp
in
mov
lock
ss
cmp
cmp
xlat
aad
xchg
fsubr
lret
addl
loope
into
ljmp
ror
out
int3
icebp
clc
out
ljmp
nop
out
xchg
hlt
lret
jmp
lret
cld
aam
ds
fsub
cmp
xchg
shr
fsub
xchg
repnz
hlt
cmp
rol
sar
cmp
clc
icebp
addl
out
cld
repz
out
sub
in
fyl2x
cmp
fildl
clc
dec
fdivr
dec
std
icebp
call
ret
cli
jmp
xlat
xorl
stc
cmp
jmp
xchg
lea
in
xlat
fnstenv
repnz
fld
fstpt
xchg
loop
loopne
xchg
in
jmp
in
fcmovnbe
out
in
aad
not
cmp
cmp
xor
xor
inc
std
neg
jmp
or
lret
lret
imul
rcl
lock
hlt
cld
shl
repz
mov
lret
xchg
fimuls
rcl
jmp
rolb
lds
leave
lret
lock
call
in
fpatan
cmp
out
iret
loopne
add
aam
mov
fisttpll
cld
nop
lock
in
ret
out
leave
lret
ljmp
cld
shl
cld
vshufps
in
ljmp
repnz
in
fcomip
cmp
repz
leave
in
test
int3
mov
cmc
call
jmp
fsub
cmp
aad
fsubp
fadd
xor
loope
out
in
std
mov
lock
aam
aam
in
repz
fcmovnb
sar
out
hlt
mov
cmc
test
loope
jmp
faddl
call
in
in
in
rcr
shl
fucomip
loopne
incl
loop
loope
out
icebp
xor
clc
shrb
fstp
cli
cmp
sarl
out
rorb
fbstp
xor
aam
cmp
lret
ljmp
aam
sar
fildl
call
xor
rcl
in
jmp
cld
shl
fcomip
in
out
mov
clc
add
int3
hlt
loope
enter
sti
in
lret
lret
repz
movb
fcmovne
test
aad
divl
jmp
repnz
stc
aam
not
mov
loopne
decl
shl
cmp
into
jmp
iret
int
int
roll
ffreep
fimull
call
clc
divl
jmp
ret
in
fld
fsub
jmp
fcomp
out
faddl
rcr
out
xor
std
out
sti
fnstsw
call
in
and
xchg
shr
loope
not
sub
iret
sti
loope
fcmovbe
inc
cmp
clc
incb
test
aad
cmp
in
std
out
in
cmp
icebp
loop
cmp
repz
xchg
fadd
into
std
cs
in
ss
cmp
in
loopne
loop
xchg
ljmp
rorb
aad
rol
call
clc
fcmovnb
cmc
sti
cli
loop
cmp
jmp
les
xchg
lock
ror
iret
lret
cmp
aam
cmp
aam
cmc
aad
out
test
enter
stc
xchg
cli
xchg
in
out
idivb
int
aaa
icebp
faddl
or
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
aaa
lock
jg
roll
jle
test
repz
loop
clc
cld
xchg
jmp
lret
int3
xor
lret
cli
rcl
cli
in
fcmovu
stc
addl
out
fucomip
enter
cmp
cmp
cli
xchg
ds
mov
repnz
jmp
aam
lret
fdivrp
cmp
fcmovb
ror
iret
clc
xchg
lret
out
lret
lock
aam
out
jmp
fidivrl
shl
fld
repnz
lret
out
cld
loope
in
jmp
rcr
xor
xor
cmc
loope
clc
cmp
loop
ljmp
fsubrp
xchg
xchg
divl
lret
ljmp
xlat
out
fcmovnbe
jmp
and
nop
std
xchg
idiv
jmp
cmp
idivl
out
test
ds
out
div
fsubp
nop
lock
xchg
stc
fnstcw
ljmp
fxam
les
fiaddl
ljmp
ljmp
xor
iret
int
icebp
rol
cmc
adc
testl
fabs
into
xor
cmp
hlt
aas
stc
fdivrl
xor
fdiv
repnz
in
lret
xchg
int
mov
in
rcr
aaa
rcr
shr
int
addb
loope
fisttpll
jmp
clc
aad
in
cmp
cli
jmp
rcl
sub
fiaddl
fsubr
cmp
repz
iret
iret
ror
hlt
call
sarb
loope
fcmovbe
or
cmp
out
jmp
shl
xchg
out
vcvtdq2pd
jmp
xor
int3
sti
not
shl
cli
ljmp
in
jecxz
lret
out
out
shl
in
xlat
adc
and
icebp
hlt
test
orb
int3
xchg
fucom
lds
stc
ret
rcr
cli
rcl
repnz
ret
in
fucomp
stc
or
call
repnz
fucomip
clc
stc
iret
aad
xlat
out
addb
rcr
out
out
out
enter
lock
lret
out
loop
repz
in
in
fnstsw
sti
iret
out
enter
notb
stc
leave
cmp
fadd
repz
cmp
lock
cli
fcomp
mov
xchg
int
in
xchg
sub
repnz
hlt
ss
fucomp
aas
repz
cmp
cmp
jecxz
xlat
xchg
stc
in
lret
in
les
ljmp
dec
xchg
leave
fdivr
fcomp
out
jmp
loopne
loop
ss
sub
jmp
sbb
cmp
stc
cli
hlt
fisttpll
lea
iret
xor
in
ljmp
neg
push
repnz
xchg
test
stc
fcomi
iret
jmp
ror
out
iret
jmp
shl
jmp
fdivrs
stc
aas
xchg
fcmovne
cli
and
call
loop
sti
filds
xchg
xchg
incl
imul
lret
lock
cmp
cmpl
enter
test
std
ljmp
call
int
rcl
jecxz
jecxz
movb
xchg
orb
leave
sub
call
rcl
jecxz
loopne
ret
loop
test
loopne
out
out
lret
rcl
in
aas
std
filds
fcmovne
test
out
shl
xlat
sarl
icebp
cmp
stc
in
shl
cld
rol
rcr
lret
enter
sti
icebp
mov
out
test
lret
ss
ret
rcr
ds
aam
cld
fstp
test
les
xor
in
aam
cmp
cli
lock
fcmovnb
ret
test
xchg
lret
lret
icebp
shl
fdiv
xor
cmp
std
into
repz
fisttpll
shl
leave
in
in
in
fcmovnbe
fucomp
int
ds
ds
cmc
aas
fadd
cld
fisttpl
ljmp
jmp
enter
fmul
fnstcw
movsb
psubb
jg
roll
jle
into
int3
lret
fldln2
out
ret
repz
mov
testb
and
out
loop
lret
xor
loopne
aam
aad
call
xor
mov
into
jecxz
fcmovnu
xor
fmul
fld
ds
clc
fdiv
iret
std
div
aam
mov
movb
ljmp
in
stc
cmp
loop
xlat
in
cld
out
leave
mov
int
xor
xor
aam
in
ds
ljmp
jmp
ret
fmul
std
leave
shr
mov
icebp
loop,pn
lds
stc
fstp
aas
xor
aad
repnz
aam
cld
test
lret
jecxz
icebp
xchg
xchg
mov
jecxz
loop
jmp
shr
std
fildl
xlat
test
mov
xchg
icebp
xchg
aad
xor
int3
div
cmp
in
fincstp
out
loopne
fadds
xchg
in
test
in
ror
repz
in
cmp
cmp
mul
sti
roll
fldl
xchg
jmp
rorb
repnz
sti
out
clc
cmp
in
clc
mov
stc
int3
icebp
loopne
rclb
leave
xor
stc
aam
sarl
in
cmp
fisttps
faddl
xchg
test
cld
leave
jmp
shl
shlb
sar
cmp
incl
out
hlt
out
in
fdivr
imul
hlt
cmp
into
test
stc
rcr
int3
fisttps
mov
jmp
int
jmp
flds
lock
mov
std
in
leave
repz
enter
jmp
lret
ljmp
iret
test
rol
jmp
fscale
sti
mov
int3
xchg
test
in
cli
cli
xor
lock
ds
rcl
test
mov
xchg
loop
xchg
xchg
xor
imull
rcr
lret
ret
aad
hlt
fcmovne
rol
movb
test
in
fucomip
in
sub
fnsave
jmp
icebp
aam
in
test
addl
test
in
lea
jecxz
call
idiv
out
icebp
out
adc
cli
sub
mov
sub
loop
in
int3
cmc
std
xor
test
aad
loope
test
cld
mov
mov
std
cmp
in
ljmp
cmp
fcmovnu
cmp
stc
repnz
loopne
and
sub
fimuls
int
lock
fnstcw
fcmovnu
cmp
int3
clc
repz
clc
lock
loopne
clc
lds
jmp
int
hlt
aaa
shl
out
stc
sarb
int
jmp
div
in
fildl
or
int3
xchg
xchg
out
leave
enter
mul
out
fdiv
loopne
loop
call
mul
test
stc
ret
std
sti
in
jmp
rcl
jmp
jmp
clc
int
aaa
repnz
hlt
in
xlat
clc
in
out
xor
lea
jmp
test
aad
cmp
out
shl
shr
neg
ffree
fsub
dec
repnz
ljmp
iret
leave
fdiv
roll
cmc
shl
addl
int
mov
das
xlat
xor
lret
aaa
cmc
cmp
stc
call
out
addb
addl
icebp
loopne
loop
in
leave
in
fdiv
repz
in
xlat
icebp
cmc
sti
in
clc
test
in
xchg
xor
out
in
xor
cmp
sarb
aaa
orb
in
lret
jecxz
push
loopne
xor
hlt
lock
fdivr
loope
loop
jecxz
movb
idiv
jmp
xchg
repnz
leave
xlat
clc
int3
icebp
fdiv
sar
fchs
cmp
out
mov
lea
test
ljmp
idivl
std
out
loopne
sti
faddl
rcl
xor
rcl
aad
int3
icebp
fcom
cmc
ret
rol
ffreep
add
fdivr
out
pause
cld
or
mov
in
aas
cmp
ljmp
jecxz
sti
xchg
adc
shrb
add
imul
enter
fst
ffree
and
dec
jo
rorb
roll
jle
lock
mov
repnz
int3
int
out
lret
aas
repnz
std
cmp
fscale
ljmp
rorb
into
sub
lret
shl
cmp
cmp
cld
test
cmp
jmp
fimull
shll
std
xlat
out
ds
hlt
fdivrs
sti
fimuls
subb
int3
fcmovbe
out
fscale
clc
loopne
fdivrs
fadds
fisttpll
shr
int3
rcr
rcr
sti
xlat
cmp
sbb
out
fsub
orb
xchg
sbb
shl
out
lret
test
cli
cmp
clc
lret
sti
sbb
nop
in
aaa
call
fdivl
imul
cmp
out
roll
out
test
orl
ljmp
clc
or
in
repz
out
out
jecxz
lret
testl
fldl2t
out
cmc
fidivl
fsqrt
in
loope
rolb
int
iret
shr
in
fdiv
cli
aam
cmp
xor
loopne
hlt
test
sar
aam
xchg
jecxz
mov
iret
shl
in
ljmp
xlat
xchg
cmp
out
clc
leave
or
ror
in
mul
rol
aam
hlt
repnz
xor
aam
int3
mul
sti
test
jmp
addl
das
stc
hlt
xor
fdivl
std
sar
in
adc
int3
in
mov
lds
repz
sbb
ret
aas
xchg
lret
lds
mov
vmovq
lock
shl
cmp
ljmp
cld
cld
rol
mov
nop
or
or
fcmovnb
divb
jmp
sti
aas
fxch
fsqrt
out
addb
loope
out
aam
sub
int3
in
out
fdiv
out
cld
cld
cli
in
out
cmp
fld
cld
jmp
lret
xlat
xor
fidivrs
cmp
in
jmp
in
shr
cmc
in
aaa
jecxz
int3
sar
cmp
stc
into
lds
jmp
fucom
in
xor
xor
in
sar
sti
stc
cmp
out
ror
testb
in
std
test
test
out
shll
aad
jmp
loop
fadd
ret
fcmovb
jmp
std
leave
mov
fiadds
in
out
lret
jmp
aad
cmp
shl
out
test
ljmp
in
fucomp
xor
fcmovb
shr
aad
rol
clc
jecxz
imul
sbb
mov
std
std
mov
sar
xor
ret
in
fdivr
not
cld
sar
xlat
fxch
hlt
xchg
in
out
lret
out
jmp
xchg
in
jecxz
aaa
test
out
in
stc
test
enter
test
leave
ljmp
not
shr
int
fnstcw
incb
enter
xlat
lds
mov
xchg
rol
shr
idiv
aam
hlt
icebp
fcomp
cmp
in
sar
loopne
loopne
rorb
int3
xchg
lret
ror
rcl
jmp
lret
ret
clc
ljmp
mov
xchg
fdivr
ss
fidivl
clc
ds
rcr
clc
in
fldl
fisttpl
shl
jmp
repz
shl
int
cmc
enter
mov
filds
mov
xor
stc
clc
rol
cmp
shl
test
lret
test
sar
out
neg
xlat
xor
lret
jmp
inc
shl
fmuls
enter
xchg
adc
xor
shl
cld
fucomi
cmp
cli
lret
out
fnstsw
rcr
jmp
out
sti
xlat
cli
sub
ret
aam
jecxz
fxch
out
int
rcr
int
xchg
fsubrp
nop
lock
icebp
mov
xchg
sub
das
iret
aad
fstp
cmp
add
or
add
repz
mov
movl
cmp
movl
jmp
rol
mov
xchg
sahf
adc
cmpsb
jg
roll
jle
lret
fst
std
lret
mov
mov
jmp
lret
lock
xlat
mov
clc
xor
xlat
mov
loop
mov
into
clc
orl
out
ret
xor
rcr
call
cmp
std
ror
clc
xchg
lret
out
fsubr
cld
int
iret
enter
mov
xlat
testl
div
shr
lret
in
nop
dec
fcoml
xor
bnd
aas
cmp
divl
not
xchg
filds
hlt
xchg
xor
vpsubq
cld
fnstcw
cli
fsub
decl
into
clc
fsubr
in
aad
xor
cmp
cmp
stc
fxch
imul
test
aam
cli
repnz
hlt
lret
jmp
repnz
divl
repz
cli
fcmovb
enter
fdivr
loope
cmp
mov
add
lea
in
fimuls
in
xlat
int
stc
cld
rol
aas
f2xm1
into
hlt
call
cli
imul
lret
call
rol
shr
jmp
cmp
out
roll
fsubr
aad
cli
in
xor
fiadds
fdivrs
les
fldlg2
fsubp
lret
cmp
filds
jmp
testb
std
test
mul
out
cmc
int3
cmp
ss
cmp
fdiv
roll
aad
clc
and
call
lret
aad
lret
repz
xlat
xchg
rol
in
fdivrp
in
orl
repz
sar
fdivrs
std
hlt
hlt
cmp
test
lock
fdivr
jmp
in
jmp
ljmp
call
out
aas
sar
out
enter
call
int3
xchg
xchg
cmc
shl
ret
stc
in
jmp
out
cmp
in
cmp
loop
xchg
xchg
in
xchg
in
jmp
lret
cmp
les
rolb
test
int
cmc
shl
fsubr
aas
cmp
aam
jecxz
cld
aam
loopne
test
into
jmp
mov
int3
xchg
mov
xor
int
cld
int
ljmp
in
in
loop
clc
stc
ret
enter
xchg
cmp
xchg
out
cmp
cmp
fiadds
out
test
jecxz
out
cld
loope
lret
loop
into
int
loop
rol
aad
xor
iret
aad
ds
iret
ret
jmp
jmp
clc
or
xchg
repz
cmp
aaa
lock
int
repnz
mov
fimuls
rolb
cmp
test
iret
xlat
cmp
cmc
neg
sti
cmc
in
xor
lock
in
test
mov
lds
ss
ds
rcr
test
std
sti
repnz
ret
mov
lret
hlt
jecxz
shlb
int
ss
not
ljmp
inc
test
in
mov
jmp
nop
and
add
xor
xor
sti
lock
iret
ds
aas
mov
test
aad
mov
fdivrp
in
shl
enter
ljmp
in
cmc
ret
fmuls
xlat
mov
mov
jmp
aam
lock
out
div
hlt
aas
jmp
lret
rcl
xchg
in
xlat
lret
leave
rorl
out
ss
int3
cmp
lret
add
cli
ljmp
icebp
lret
test
lock
aam
cmp
fiaddl
in
in
fisttpll
lret
in
sub
cmp
iret
fldl
in
ret
loopne
les
out
lret
fsubr
in
iret
icebp
xor
xor
fidivl
fcom
cmp
cmp
fdiv
frstpm(287
roll
clc
std
nop
sti
aad
xlat
stc
in
cmc
aaa
jmp
cmp
in
in
xchg
loopne
lock
ljmp
enter
iret
cmp
idiv
addl
shl
dec
out
in
out
hlt
out
int3
xlat
repz
cld
jmp
loop
adc
mov
in
in
orb
aaa
cmp
add
mov
test
inc
add
adc
movl
add
jmp
aas
aam
int3
aad
lret
fstl
incl
stos
jg
roll
jle
addl
cmp
stc
cmp
fadd
rol
cmp
out
in
out
iret
out
loopne
shll
cmp
xor
loope
icebp
loopne
hlt
aas
out
in
fdivrp
int
mov
ljmp
cmp
neg
lret
icebp
fst
cmp
enter
std
int
or
aad
xor
out
cmp
aam
aaa
lock
iret
into
xchg
xor
xlat
fstp
mov
icebp
mov
iret
iret
fcom
int3
int3
fmul
hlt
int
test
rcr
loopne
rolb
iret
cli
in
hlt
xor
hlt
lret
lret
into
lock
out
iret
in
ret
xlat
mov
cmp
in
fcoml
out
hlt
cmp
out
rcl
sti
loopne
cld
fstpt
sbb
loopne
int3
iret
in
rol
jecxz
jecxz
cli
icebp
ss
loope
dec
in
incl
fadd
xchg
int3
cmc
rcl
xor
xor
shr
ljmp
loope
hlt
lret
loop
rorb
test
xor
enter
fmul
fcom
out
std
cli
jmp
in
in
in
xchg
dec
test
aam
aam
ljmp
loopne
out
out
xchg
lock
lret
aad
lret
xor
aad
shr
shl
out
shl
mul
lret
in
sti
out
rcl
nop
jecxz
in
aaa
repz
into
in
out
iret
xor
repnz
loopne
imul
int3
cmc
adc
fptan
fprem
out
cli
loopne
fbstp
cli
les
ret
adc
jmp
out
xchg
aam
loope
lret
call
filds
aas
aam
repz
test
repnz
not
aaa
in
in
icebp
in
testb
lret
xchg
mov
xor
jmp
out
hlt
aas
cmp
cmp
fdivp
cld
mov
xchg
xchg
aam
cmc
loope
icebp
leave
fmul
repnz
cmp
ljmp
jecxz
sbb
sti
mov
into
ret
out
cld
idivb
sti
cmpb
fchs
fadds
in
loop
nop
xchg
mov
ret
cli
xor
out
idivl
repnz
in
loopne
test
jmp
sub
loopne
shl
cmp
cmp
idivb
jecxz
lock
cmp
fcmovnu
xchg
test
test
lret
lret
cmc
rcr
cmc
cld
cld
std
cmc
cmp
sti
int
rcl
fmulp
leave
in
jecxz
clc
loop
mov
ljmp
int
std
shr
fiaddl
idiv
icebp
cli
lock
roll
clc
clc
std
int
cmp
cli
shl
enter
enter
iret
iret
xchg
xchg
jmp
lret
in
lret
sarl
stc
rolb
std
rolb
nop
xchg
and
ret
cli
jecxz
cld
fmulp
shl
neg
ret
xlat
fnstcw
std
aas
les
fisttpll
clc
cmp
cli
cld
out
icebp
into
aam
stc
fdiv
loope
shl
xchg
cld
into
sub
mov
ss
in
jmp
int3
cli
sarl
hlt
imul
in
out
cmc
call
jmp
lret
ljmp
rcl
fidivs
idiv
test
out
fldl2e
repnz
rcl
xchg
jmp
iret
loop
cmp
fcom
repz
aam
loope
into
fcmovu
fildl
stc
fstp
cld
int
lret
adc
clc
enter
ds
aam
loop
sti
cli
stc
add
in
in
jmp
iret
mov
call
xor
fsub
cmp
aam
stc
jmp
xchg
repz
out
enter
rorb
xor
out
xlat
lret
ds
iret
rolb
aad
in
ret
out
rclb
xor
cmp
aad
cmp
ds
out
loopne
clc
sti
cli
aad
ret
int3
leave
in
cmp
idiv
lock
xor
rcr
out
lea
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
gs
xor
scas
jg
roll
jle
loopne
ljmp
cli
xchg
lock
stc
enter
jmp
vpaddq
aam
aam
mov
xchg
bnd
out
fsubr
lret
int
lock
ds
fucom
incl
orl
ror
jecxz
not
jmp
aaa
test
ds
loope
fsub
or
out
fisttps
repz
fdivr
iret
fcomi
hlt
lock
repnz
addb
mov
in
fsubp
orl
lock
cmp
fmul
div
fcom
std
cmc
std
sti
loop
in
in
rcl
mul
aas
xor
into
iret
ss
fsub
cld
cmp
ret
loop
repz
fldl
jecxz
fmulp
xor
rcl
cmp
in
cmp
sti
lock
jmp
enter
std
fcmovne
xchg
faddp
into
xor
hlt
cmp
jecxz
in
addl
mov
jecxz
iret
not
repz
cmp
cmp
icebp
loope
les
call
fsub
fsubr
ss
sti
lock
sbb
lock
cmp
out
loop
in
rcl
dec
out
shl
call
fcmovu
xor
ds
rolb
sti
xchg
shl
call
cli
cmp
xor
idiv
fmulp
call
out
rol
repz
divb
cmp
stc
sub
and
into
fcom
hlt
std
clc
cli
popl
mov
xor
repnz
leave
cli
call
in
sar
into
in
in
cmc
in
sti
addl
out
test
sub
stc
lret
in
fcomip
aaa
cmp
rolb
not
clc
fstp
jecxz
sti
shl
loope
aam
out
jmp
cmc
cli
int
rcr
fsubp
cli
in
jecxz
loope
stc
clc
out
in
decb
repz
fsubr
out
fsubr
push
xlat
shl
test
mov
out
addb
loope
loop
leave
ljmp
addl
call
or
test
in
xchg
lret
icebp
sub
iret
lret
sar
sarl
ljmp
lock
imulb
xor
repnz
in
mov
int3
loope
jecxz,pt
ffree
mov
ljmp
fsub
ret
leave
sti
xor
lret
fldz
addb
fst
xlat
in
iret
sti
in
in
fst
in
enter
in
aam
out
clc
shr
icebp
fldl
xchg
loop
lock
xor
in
call
out
test
loope
fsubr
loopne
fsub
in
hlt
std
repnz
cli
jmp
cmp
xlat
test
lds
testl
out
ret
cmp
ljmp
in
sbb
mov
add
lea
into
in
cmp
xlat
sti
loop
lret
jecxz
neg
fsubr
cmp
xlat
and
loopne
xchg
in
adc
jmp
ret
aad
xor
lret
cld
repnz
aam
rol
shr
into
mov
std
mov
ljmp
sti
out
iret
leave
sti
leave
loopne
lock
hlt
test
cmp
jecxz
mov
xchg
out
out
lret
loop
clc
in
xlat
into
cli
into
std
cmp
xor
test
repnz
loop
out
xlat
aad
and
in
aad
call
lret
cld
icebp
or
vpsllw
loop
xlat
loopne
fmul
in
out
xchg
mov
ljmp
hlt
int3
lret
cmp
in
loop
fucomp
in
sbb
out
out
loope
jmp
xlat
fsubr
out
into
cmp
hlt
loopne
fcompp
mov
loop
aad
out
xor
cmp
ljmp
mov
adcl
test
test
fst
fcomi
aam
xchg
int3
cld
xor
test
jmp
test
jmp
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
or
mov
jle
add
cmc
hlt
stc
hlt
cmp
ljmp
in
fcomp
xchg
in
cli
nop
sub
jmp
fcom
xor
clc
sti
iret
fcom
lock
int3
int
cmc
test
imul
fcomi
lret
cmp
mov
jmp
cmc
out
iret
clc
cmp
cmc
xlat
hlt
test
cld
fdivr
in
mov
rcl
repz
in
repnz
xor
cmp
icebp
cmp
loopne
ret
sbb
lret
fldl
in
in
hlt
sub
lret
cmp
ljmp
test
cmp
loopne
loopne
xchg
jmp
shll
hlt
out
xor
sti
cld
cld
addl
repz
sti
fmulp
mov
test
fprem1
xor
into
fcomp
lret
out
sub
shl
fucomi
lea
rcl
int
divb
aam
out
cmp
hlt
ret
loop
rcr
lret
leave
loop
fildl
mov
xlat
shl
xor
cmp
fdivrs
rcr
loop
std
xlat
rorl
jecxz
jmp
repz
sti
fcomp
fmulp
std
fildl
faddp
leave
out
lea
out
aam
aad
out
ss
cmc
hlt
fsin
stc
into
loop
fimull
sub
fisttps
out
sti
fdivrs
in
lret
shr
sub
fildl
lret
jmp
mul
div
loop
not
ss
cmp
rol
fucomip
hlt
fcmovnu
fimull
in
in
add
hlt
lret
fcmovbe
clc
out
in
cmp
shr
repz
rcl
incl
mov
sti
xchg
fsubrp
sub
out
rol
sarb
cmpb
in
in
repnz
mov
loopne
lock
std
xchg
in
or
out
jmp
fmul
ds
jecxz
xchg
out
addb
idiv
xchg
nop
loop
xchg
out
das
into
xor
iret
cmc
sbb
ret
fcmovnu
clc
cmp
std
and
std
out
mov
test
in
cmp
clc
cmp
rcr
in
rol
out
cli
lret
fldl
enter
lret
lret
testb
xlat
cmp
fprem
call
call
sti
cli
fucomp
aad
out
cmp
shl
jecxz
add
in
ror
stc
rcll
out
lret
fsubr
sarb
ror
neg
icebp
roll
jmp
lret
jmp
hlt
in
divl
fidivrs
enter
cld
cmp
rcl
lret
cmc
lea
shl
ret
cld
ss
cli
std
int
cmc
out
mov
ret
lea
mov
mov
cld
ljmp
in
xchg
aas
mov
cli
in
mov
in
pushl
in
aaa
jmp
aaa
cmp
fsubrp
cmp
out
out
aas
in
rorl
std
ljmp
aas
jecxz
shr
cmp
ror
idiv
idivb
in
fimuls
cld
decb
call
fsub
cmp
in
xor
cmpl
aam
addl
repz
aaa
repnz
sar
into
loopne
cmp
push
xchg
rolb
int
sti
lock
xchg
jmp
ss
stc
enter
aad
cmp
lds
mov
out
loope
loop
call
fcmovu
sarl
jmp
repz
shl
repz
roll
cld
cli
ret
in
lret
hlt
lret
sar
fsubr
enter
loopne
repz
out
fucom
out
fimuls
sarb
les
jmp
hlt
in
shl
loopne
bnd
mov
leave
jmp
out
jecxz
jmp
shr
fdivp
aad
shl
in
jmp
enter
jmp
rclb
lret
in
ss
fldl
fisttps
cmc
mov
sti
nop
mov
jmp
out
jmp
iret
xlat
repz
jmp
roll
cld
testb
sbb
add
arpl
decl
call
mov
add
add
stos
cli
push
es
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
stc
lret
lret
jmp
in
lret
aaa
rol
cmp
fucomp
in
not
ret
sti
lret
out
into
loope
cmc
iret
icebp
div
lret
imul
in
lock
aad
xchg
icebp
mov
in
test
mov
lock
xchg
cld
icebp
nop
ljmp
out
lret
cmp
ret
loope
in
aas
hlt
call
enter
mov
loopne
ror
cs
lock
jecxz
in
jmp
int3
loop
ret
into
out
call
clc
repnz
rolb
cmpl
aad
into
jecxz
xchg
mov
xabort
push
sar
int
roll
in
test
fcoml
int
enter
shr
out
leave
sar
shl
loope
sbb
jecxz
in
nop
decb
out
iret
lret
aad
fdivr
fadds
testb
fucomp
xchg
test
xorb
ret
xor
shlb
lret
cmpb
iret
test
hlt
mov
flds
ljmp
enter
call
neg
add
not
mov
in
loope
shr
aaa
stc
int
jmp
ds
loope
xlat
ret
sbb
orl
cmc
shll
incl
cmp
test
std
sbb
in
mov
in
in
xchg
call
into
ljmp
sbb
rcl
test
fdivrp
fcomp
mov
rcll
xlat
enter
cmp
fnstcw
cmc
iret
cli
out
flds
and
hlt
repz
call
xor
ss
int3
cmp
aam
rcr
rolb
mov
loop
rcr
xchg
call
aaa
sub
leave
hlt
out
aaa
cmc
lret
lock
stc
xor
cmc
cmp
clc
sbb
test
call
cmc
sarb
int3
and
cld
sti
jmp
mul
f2xm1
lock
sti
lock
loopne
cmp
repz
leave
fidivrl
lret
loop
std
rolb
into
loopne
loope
test
xchg
int
out
in
hlt
neg
sarb
int
iret
incb
cli
ret
sbb
xchg
xchg
loope
lret
jmp
out
lret
cmp
ret
loop
in
jecxz
jecxz
mov
out
into
loopne
mov
lock
leave
clc
fidivrl
fidivrs
ret
aad
stc
rcr
adc
fcmovne
xchg
xor
idiv
lret
fucomip
cli
push
adc
loope
fcos
loope
fadd
in
in
in
xchg
loopne
repnz
lret
xlat
lock
xor
fcomip
mov
jmp
lock
out
loop
lea
out
repnz
fmulp
shl
loope
icebp
fdivr
xchg
enter
jecxz
std
xchg
mov
loop
icebp
fcmovb
ret
ljmp
aad
in
rorl
loopne
addb
clc
leave
int3
hlt
rol
idiv
sar
fcmovnu
xor
jmp
jmp
popl
xchg
fadd
in
into
cmp
xor
jmp
xor
cmp
cmp
shl
in
call
decb
enter
cmp
ss
std
lock
ret
fildl
jmp
xchg
lret
icebp
clc
in
int
int
cmp
aas
hlt
aas
cmp
neg
out
jecxz
out
in
xchg
fimuls
les
icebp
out
in
testl
cld
lds
loop
fimuls
stc
fdecstp
cmp
ljmp
out
out
sti
in
call
mov
jecxz
jmp
not
in
xor
iret
ljmp
mul
loopne
cmc
sub
fcmovnu
loop
loopne
loopne
xor
cmp
cmc
fmul
loopne
ljmp
aam
leave
fucomi
mov
incb
hlt
stc
int
cmp
shr
jmp
jmp
in
test
repz
repz
mov
stc
loop
xchg
ljmp
lret
leave
std
icebp
cmpb
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
outsl
nop
push
scas
or
jle
shl
test
sar
testl
xchg
lret
test
int3
les
xlat
aad
in
ss
int3
repnz
jecxz
call
in
in
in
fnstcw
out
in
xor
fdivrs
ret
loopne
jecxz
in
fmulp
test
and
icebp
aad
loope
xlat
int3
leave
out
aad
sti
fidivrl
in
loopne
jecxz
shl
ljmp
int
out
aaa
xor
xor
cmp
xor
jecxz
lret
fmulp
mov
ficoms
leave
xor
leave
shl
cmp
lret
out
iret
sti
fdivr
loopne
sti
mov
orl
shll
enter
out
loopne
fsin
lock
leave
loop
xchg
incb
repnz
cmp
cmp
std
in
stc
repnz
fcmovnb
sti
mov
icebp
enter
in
loopne
shl
out
xor
in
jmp
mov
fdecstp
ljmp
out
out
hlt
call
out
cmp
int
clc
cmp
ret
out
cli
lock
icebp
xchg
ss
ds
fst
in
test
test
cmc
fxch
ss
jmp
repz
icebp
cmp
jmp
call
in
call
cli
stc
hlt
cmp
cli
cmp
ret
stc
stc
cld
loopne
aam
fxch
sub
and
out
out
xor
cmp
shl
jmp
int3
test
cli
adc
xlat
fdivp
fsubr
rorb
jmp
ljmp
sarb
test
clc
out
ret
in
loopne
sti
mov
in
xor
into
fmulp
shl
hlt
sarl
cmc
icebp
fxam
stc
jecxz
ret
out
lret
fstl
ror
out
cmp
repnz
ror
cmp
int
test
rcl
in
in
lret
mov
xlat
lret
std
xor
sarb
iret
stc
test
aam
cld
out
mov
out
loopne
ret
ret
into
xlat
call
in
hlt
out
fdivr
add
loope
in
out
fucomip
xchg
sub
fcom
clc
cmp
lock
leave
cld
dec
shl
add
mov
cli
xlat
fisttps
rolb
icebp
int
clc
cli
fucomi
fcomi
aas
xlat
out
fcmovbe
test
lret
fxch
fucomp
lock
nop
out
ss
hlt
fcmovu
cmp
iret
cld
or
testb
out
cld
icebp
icebp
int3
push
out
shr
jecxz
sti
imul
ds
fcmovnb
sar
hlt
icebp
in
rcr
in
lret
sti
clc
shr
test
int
cld
sti
stc
sar
rcl
lock
shr
lret
rcr
shrb
repz
lock
cmp
inc
repz
roll
jecxz
and
jmp
iret
aas
cmp
xor
int3
aam
test
cld
cmp
cli
fcmovne
clc
lock
ljmp
ljmp
cmp
cmp
cmp
jmp
sub
lock
xor
repz
cmp
test
sti
add
mov
mov
int3
cmc
in
enter
sarb
shl
rolb
add
icebp
int3
in
mov
out
clc
lret
sub
xor
sti
loope
hlt
incl
repz
jmp
adcl
in
cli
in
lret
in
lock
aas
loopne
rcr
test
jmp
mov
shl
into
jecxz
ljmp
cmc
shl
lret
fdivrs
fsin
ds
jmp
lret
enter
test
rcl
cmp
idivl
cmp
fsub
out
repnz
icebp
loop
fiadds
in
repnz
fiadds
lock
aas
shlb
repz
xchg
loopne
xlat
aam
cld
lret
in
hlt
out
ror
sub
lret
rolb
in
orl
mov
xor
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
xchg
xchg
cs
test
xor
ret
cld
addb
int
jecxz
leave
into
loop
fiadds
ljmp
cmp
test
ffreep
cld
loopne
jecxz
in
icebp
xchg
roll
rcl
icebp
cmp
lret
shr
aaa
cld
cmc
clc
stc
sti
jmp
fimull
int
das
lret
shr
jmp
cmp
in
stc
loopne
loop
div
leave
loope
cli
out
repnz
repz
sarb
dec
out
xchg
xchg
xchg
out
cld
rcl
ss
xor
icebp
aad
repnz
repz
ds
cld
repnz
call
orl
cmp
fdivrp
jmp
lret
hlt
xor
ds
fdivr
int3
loop
lret
call
das
call
leave
cmc
rcl
ret
sub
cmp
sub
fucomi
call
in
stc
fldz
xor
cmp
addb
test
shr
fldl
ss
lret
cmp
cmp
test
cmp
les
out
int
iret
fdivp
aam
ljmp
fcmovnbe
jecxz
in
into
test
in
clc
fstl
test
mov
fxch
loope
icebp
jecxz
fucomip
in
out
test
int3
sti
int
xlat
icebp
cld
repnz
clc
clc
ffree
cli
ds
rcr
mov
xchg
ljmp
lock
cld
sbb
xor
xchg
add
fsubrp
fcomi
aad
in
repnz
xlat
sti
clc
shll
cmp
repnz
fcmovu
rolb
loopne
lret
out
into
in
shr
jecxz
aam
hlt
ss
xlat
sar
out
xlat
aad
loopne
out
cld
or
in
into
sbb
xor
divb
int
leave
rcr
cmp
not
sar
fst
lds
out
lock
int
lock
xor
ss
into
shl
sar
sarb
xchg
loop
flds
jecxz
mov
iret
divl
iret
int3
cmp
sbb
ret
hlt
ljmp
sbb
int
jmp
int
cli
clc
cli
loopne
iret
fiaddl
out
mov
cmp
nop
cmc
mov
int3
hlt
rcl
std
cld
repz
aas
cli
out
loope
aad
in
into
std
fneni(8087
mov
into
xchg
ret
sti
jecxz
out
out
sti
shl
loop
fdivrs
rcl
fcmovnb
out
xlat
movb
xor
aaa
clc
cmp
jmp
fldln2
fsubp
ret
filds
repnz
sub
sti
clc
call
cmp
ret
sub
mov
jmp
int3
ror
xlat
jmp
shr
cli
jmp
cmp
sar
clc
fdivr
in
in
cld
out
loop
aad
ss
fnstenv
cmp
idiv
int
cmc
cmp
repnz
aam
int3
std
mov
int3
fst
repz
rcr
cli
mov
cmp
test
into
faddp
call
imul
call
sar
mov
sub
fadd
aaa
cmp
stc
or
aam
xchg
mov
cli
nop
mov
aad
ljmp
sti
loopne
cmp
fcmove
aaa
iret
faddl
jmp
xchg
rcr
in
xchg
out
cmp
stc
std
stc
cmp
lret
ret
ror
xchg
into
xchg
mov
ror
xor
idivl
call
rcl
sbb
out
cmp
sti
nop
shl
fisttpll
sub
cmc
int
idiv
cmp
loope
fadds
in
mov
loope
fldl
lret
int3
into
cmp
fidivrl
loop
in
addl
in
nop
int3
xchg
cs
xlat
int3
cmc
fcmove
cmc
lock
faddp
aas
aam
in
in
jmp
orb
mov
test
cmc
out
aaa
call
cmp
fmul
orl
aam
xor
sti
add
jmp
ror
rcl
mov
mov
scas
inc
jg
roll
jle
std
fcmovu
xlat
xlat
ljmp
into
xchg
rcl
iret
vpmaddwd
in
icebp
test
fdivr
lock
stc
loopne
mov
mov
fidivl
shl
out
aad
fadd
hlt
aam
loop
fdiv
stc
mov
out
iret
int3
in
ret
out
repnz
loop
shr
shl
fsub
cmp
sti
mov
call
in
cli
rcl
aaa
ljmp
test
enter
mov
test
nop
enter
fists
xor
ljmp
hlt
sti
cld
xchg
ljmp
xchg
xchg
mov
jecxz
cld
stc
fdivrs
cld
jecxz
loop
enter
xchg
jmp
out
rol
lret
shlb
cmp
dec
hlt
xor
loopne
in
and
leave
fld
mov
fucomp
fcmove
sti
test
sub
std
cld
shr
ljmp
call
mov
fsubr
out
loopne
aam
jmp
lret
cmp
idivl
cmp
stc
orl
test
call
ss
ss
std
xor
int
rcl
aad
mov
cli
rclb
int3
stc
sarl
cmp
div
cli
cli
fildl
xchg
int
cld
lret
loope
sarb
ljmp
test
incl
enter
mov
xor
leave
repz
incb
cld
aam
fucomi
test
in
out
loope
mov
icebp
xchg
call
test
cmp
xor
rol
xchg
sar
call
mov
in
sti
cmc
jmp
shl
shrl
aaa
clc
xor
out
rol
test
not
decb
mov
loopne
xlat
lret
ss
fnsetpm(287
int
cmp
int3
cld
xor
div
repnz
test
cld
sti
mov
xlat
lds
jmp
aam
fucomi
fildl
rol
enter
mov
xchg
in
in
shl
sti
xor
shr
cmc
ss
ret
out
imul
cmp
in
addb
xchg
test
ss
sarb
cmp
jmp
test
cmc
ljmp
lret
in
out
ror
aad
ss
div
sarb
ret
sbb
hlt
call
fcoml
xchg
aaa
sti
out
xor
int3
jmp
rcr
aas
cmc
testl
fiadds
shl
cmp
clc
in
in
shl
cmp
cmp
clc
leave
sti
stc
leave
in
in
decb
mov
in
out
fdivr
clc
lret
loopne
ret
rcr
cmp
jmp
ret
sti
xlat
mov
std
orl
aaa
repnz
idivl
repnz
cmc
enter
cli
sti
lock
loope
xlat
lret
out
xor
imul
jecxz
cmp
clc
shl
in
loop
lret
repnz
leave
cmp
jecxz
and
lret
notl
jmp
out
xlat
ljmp
out
cld
fdiv
iret
sar
rol
in
out
orl
das
cmp
in
xlat
cmc
cmp
std
int
ret
cli
loope
xlat
jmp
and
int
repz
int3
out
into
out
ret
cmc
repz
pushl
fcmovnu
iret
std
in
adc
fdiv
lret
out
int3
jecxz
jmp
icebp
repnz
divb
aam
fsubr
out
fdivp
int
cmp
call
mov
loopne
out
xchg
int3
xchg
icebp
in
int
iret
cmp
cmp
int
fcmovbe
cli
ret
addb
cld
dec
call
shll
div
icebp
enter
stc
add
testb
xchg
call
fdivrs
leave
sar
std
test
in
cli
in
aad
call
int3
mov
in
in
fdivp
notrack
shl
out
xchg
cli
testb
xchg
xchg
test
ret
cli
movzwl
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
sub
cmpsl
add
jle
add
jmp
int3
int
repnz
int
shl
shr
out
xlat
loopne
call
xchg
xor
in
vpsrlq
cmp
fdivr
int
mov
rcr
faddp
mov
out
mov
mov
movb
in
lret
aas
icebp
fucomip
incl
ret
cmc
decl
sub
jmp
lock
ret
cmc
repnz
shl
call
fsubr
mov
xchg
fmull
rol
aam
ljmp
test
fisttpl
jmp
sti
sti
fucomip
std
jecxz
jecxz
xor
cmc
jmp
fsub
testb
movl
mov
jmp
aam
lret
sarb
lock
sar
mov
add
mov
out
ret
not
clc
jmp
jecxz
hlt
test
sarb
stc
mov
jecxz
out
mov
ret
jmp
rcr
adc
aam
mov
fcoml
fnstenv
int
cmp
shl
or
iret
cmc
repnz
fiadds
sti
orl
icebp
aas
aam
into
loopne
hlt
rcr
in
jmp
fimuls
ljmp
cmp
clc
fadd
cmp
cli
out
testb
adc
int3
out
ret
repz
leave
in
shl
lret
shl
cli
jecxz
call
out
nop
popl
fxch
fstpt
in
neg
sarl
icebp
hlt
rol
xchg
aas
call
cld
or
cmc
lret
ret
xlat
dec
repz
stc
not
stc
std
or
leave
lret
lret
out
mov
out
out
fldlg2
xor
fcmovne
aam
rcr
xchg
test
in
std
incb
leave
lret
rol
out
shr
aad
roll
les
sti
in
out
sub
cs
shll
lock
ds
aad
clc
cmc
rolb
out
ffree
iret
in
test
loopne
shl
jmp
ss
repnz
loopne
cli
fcmovnu
aas
hlt
cmc
ljmp
fildl
loop
shr
xlat
testl
add
ret
in
clc
int3
fiaddl
mov
xor
ss
std
fstp
in
add
stc
movb
mov
loope
aad
stc
cmp
cmc
call
into
clc
out
into
sti
lock
xchg
repz
ror
cs
clc
out
lret
fcmove
cmp
aad
fiadds
fcmovb
sub
rcl
shr
idivb
out
cmp
jecxz
ret
repnz
xor
iret
enter
fld1
shl
out
lret
fdiv
clc
out
xchg
mov
loopne
loope
cmp
and
repz
ljmp
lock
not
cmp
ret
test
jecxz
loopne
repnz
shl
rcl
shrb
divl
fdivrs
lret
int3
out
xor
ret
jmp
mov
lock
sti
sbb
aad
int
int3
cli
aaa
test
rcl
test
in
xor
xchg
iret
jmp
stc
out
std
int
sar
aas
ror
std
loope,pt
lret
out
out
loop
jmp
mul
out
out
in
int
out
loop
stc
aas
fildl
test
fcmovu
out
out
mov
out
jecxz
lret
cmp
loopne
rcl
test
lock
jmp
int
clc
nop
sar
mov
xor
jmp
cli
fsub
ds
cmp
in
loope
push
in
popl
fld
cmp
fldl
in
rol
ret
jecxz
sbb
mov
lock
cli
shr
shl
enter
xlat
into
test
rcl
xbegin
out
icebp
out
shl
ror
sarb
cmc
iret
fmul
sti
sar
div
stc
ffree
jecxz
stc
orb
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
sti
ljmp
xchg
repnz
fld
out
hlt
call
cmp
aad
lock
mov
cld
int
int
test
into
jmp
iret
fdivrs
rcr
jmp
out
les
out
addl
jmp
fcom
lret
adc
sti
clc
decl
and
das
ror
rcl
cmp
leave
sub
shl
sar
aas
xchg
fimull
mov
shr
xor
sti
shl
cli
cmp
int3
lock
loope
icebp
cmp
in
out
test
cmp
rcr
sti
xor
lret
fprem
test
lock
loope
in
in
mov
xchg
rcl
fcom
enter
int3
out
lock
fdivrp
out
adcl
xlat
out
int
aad
out
out
shl
div
cld
call
neg
jmp
xor
call
lret
aad
rcl
shl
in
test
fiaddl
decl
out
call
sarb
fmul
int
sarl
ret
sbb
lret
xchg
lret
int
xor
ljmp
in
clc
shl
xchg
cmp
lret
test
in
jmp
icebp
cmc
clc
cmc
jmp
idivb
in
rolb
mov
test
out
jmp
cmc
lock
cs
loopne
icebp
and
cmp
rorl
xchg
out
fsubp
loopne
clc
repz
cmp
hlt
repnz
xlat
cli
addl
loope
mov
iret
cmc
das
hlt
out
stc
aad
cmp
cli
lock
clc
in
sti
hlt
repnz
ds
sti
in
repnz
hlt
ljmp
in
loop
cmp
out
cli
aas
jecxz
in
test
mov
mov
loopne
aam
idiv
xor
ljmp
std
xchg
mov
in
in
call
xchg
out
enter
aaa
out
in
sarb
fadds
loope
mov
sbb
sbb
into
aad
xor
std
into
sbb
ret
ret
test
lret
test
call
cmp
in
enter
fbstp
sub
cmp
icebp
adc
test
mov
jecxz
not
fcmovnb
loope
stc
clc
ret
xor
std
cmc
fst
aad
loopne
mov
int3
into
out
xchg
rcl
int
cmp
cli
loop
icebp
stc
fsqrt
out
aad
out
test
lret
xor
out
jmp
loope
clc
stc
cmp
rol
aad
stc
sub
rorl
clc
into
std
fdivrl
out
xlat
in
cmp
adc
addb
test
adc
les
into
stc
out
leave
clc
cli
aaa
repnz
rol
cmc
addl
mov
xchg
xchg
pop
rcl
cmp
in
int
aas
test
rcl
repz
mov
vshufps
mov
int3
divl
lock
call
roll
rolb
fsubrp
mov
lock
out
in
clc
repz
jmp
cli
into
fmuls
div
xor
icebp
sti
in
int3
cmp
in
hlt
fstpt
test
cli
loope
lret
fcmovne
xchg
xlat
divl
xor
cmp
lret
xor
repnz
or
test
test
icebp
xchg
repz
aam
jecxz
cld
xor
shl
cmp
fnstcw
rcr
call
sti
mov
fdivp
lret
shll
in
xor
int
out
jmp
jmp
roll
mov
adcb
jmp
xor
shl
cmp
cmc
out
cmpl
fsubrp
mov
cld
mov
clc
out
aam
test
out
leave
std
ror
iret
in
fcmovbe
repnz
repz
into
fninit
lock
jmp
xor
ljmp
scas
xlat
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
loop,pt
cmp
fcomip
fdivrs
sti
rcr
mov
mov
movl
in
cmp
cmc
aam
iret
test
cld
mov
in
lds
fdiv
repnz
in
loop
jmp
loop
in
cmp
inc
movb
sub
nop
cld
mov
aam
xor
xor
shl
cmp
jmp
out
aas
rol
cmc
cli
test
int
mov
ret
xor
sar
hlt
xlat
idiv
fidivrs
into
repnz
rolb
loop
rclb
ret
jmp
clc
into
int
xor
cmpl
cmp
mov
iret
lret
icebp
mov
test
imulb
jmp
call
shl
std
mov
ds
cld
cli
fmull
mov
enter
fucomi
xor
xlat
sti
cmp
clc
ret
addl
out
ljmp
fcmovnbe
icebp
roll
fsub
mov
cmc
xchg
int
xor
cmc
out
call
xor
xlat
xor
mov
loopne
out
fstp
in
rcr
in
ret
jmp
lret
hlt
lret
cmc
cmc
mov
cli
jecxz
cmp
nop
into
xchg
fsqrt
jmp
in
cli
iret
add
repnz
cli
repnz
stc
shl
stc
sti
out
lock
cmc
clc
hlt
icebp
fptan
jmp
jmp
sti
in
aaa
out
iret
in
test
lret
lret
into
int
xchg
in
int
lock
in
fucomp
clc
loope
lock
aas
cld
sbb
aad
call
incb
mov
jmp
ret
fxtract
lock
iret
in
filds
hlt
mov
out
repz
jecxz
out
aaa
out
out
clc
cmc
xlat
jmp
fbstp
xchg
vpsraw
xor
ret
xor
jmp
cmp
cmp
sar
cmp
in
fxch
test
divb
out
fdivs
in
xor
ds
fiadds
stc
in
fcmovne
call
fxch
aad
out
fidivrs
lret
ds
fdivrp
loop
sti
test
call
icebp
rcll
in
int3
call
lock
fnsave
testl
int3
nop
cld
aad
in
in
xlat
cli
shl
out
int3
in
idivb
lds
rcl
in
enter
in
jmp
cs
shl
int3
lds
cmp
sarl
icebp
jecxz
sti
sbb
ret
test
enter
xchg
mov
shr
repnz
fucomi
ret
call
test
fcomi
fdiv
out
mov
hlt
in
cmc
imul
leave
ds
cmp
ret
aam
in
jmp
mov
lock
in
cmp
cmp
lock
xor
enter
int
mov
ficoms
enter
call
clc
sub
icebp
icebp
fcomp
in
test
std
orl
out
stc
jmp
ds
out
fld
test
in
lret
mov
das
repnz
rcr
std
int3
leave
std
aad
int3
cld
cmc
sar
lock
out
int3
out
test
cld
jmp
mov
add
leave
aad
xabort
cld
aas
cmp
loop
shl
cli
sub
aad
lret
out
lret
mov
out
ss
cld
fcom
idivb
jecxz
ret
fmuls
inc
fninit
fxch
out
shl
call
aad
cmp
in
fidivrl
xorl
lds
mov
imul
ljmp
lret
cmp
cmp
int
loop
cmp
cmp
cmp
jecxz
xlat
fmuls
aam
xlat
xlat
test
cmp
xlat
out
cmp
jecxz
sub
std
ljmp
mov
xor
jmp
enter
lret
fcmovne
in
push
out
xchg
flds
repnz
int
rcl
in
aad
enter
fcmovnbe
ror
neg
ror
mov
jecxz
xchg
test
adc
imul
lret
mov
fildl
adc
jp
jg
roll
jle
xchg
iret
xchg
out
in
cmp
fcomp
cmp
cmpb
fnstcw
aas
add
jecxz
cmp
fiaddl
jmp
out
shlb
adc
repz
mov
fdivr
lea
vcmpps
into
ror
ds
ret
rolb
in
orb
iret
xchg
lock
in
shl
fcomi
cmp
roll
jmp
mov
and
out
out
iret
repz
int3
into
cli
lock
aad
iret
div
fadd
jmp
int3
xlat
iret
leave
mov
repnz
aad
sti
ret
fscale
ds
cmp
shr
fdivp
fimull
or
aam
ss
ljmp
xchg
cmp
in
sbb
test
loope
out
xor
cmc
std
repz
ret
cli
fdivrp
ljmp
hlt
and
xor
lock
xor
cmp
rol
aas
hlt
fiaddl
std
in
enter
xchg
in
rol
lock
lock
fdiv
xor
fcmovu
shl
lock
int
loop
iret
in
iret
icebp
loop
aam
aad
rol
cli
out
lock
int
cld
fsub
in
movl
mov
lret
cmp
repz
hlt
aad
call
hlt
les
mov
mov
sti
mov
call
ljmp
aad
int
cli
rol
or
cld
loopne
loope
in
flds
out
ss
int
fdivr
filds
stc
vpandn
cmp
lret
sti
jecxz
out
sarl
clc
repnz
idiv
cmp
aad
fcmovbe
mov
repnz
out
out
aam
loopne
loopne
ret
out
in
int3
lret
sar
fstpt
out
xchg
test
mov
lret
sarl
int
ret
icebp
fnstsw
out
lock
sar
mov
fxch
repz
out
xor
lret
cmp
out
ss
loope
idivb
dec
sub
jmp
cmc
hlt
test
xor
lock
fucomi
cmp
shl
rorb
mov
int3
mov
enter
test
hlt
jmp
fucomip
cld
icebp
neg
out
xor
loop
mov
xchg
mov
ret
ss
sarl
stc
iret
test
mul
fdiv
cli
sub
mov
in
loop
enter
out
shl
cmc
fcmovne
ss
cli
jmp
clc
shl
hlt
ror
cli
fldl
cld
out
xchg
aam
divb
cli
div
cs
icebp
stc
fdivrl
adc
and
mov
xchg
mov
xor
lock
leave
fucomp
cli
loopne
loopne
iret
mul
out
test
lock
std
cld
loope
fdivrs
lret
aam
out
xlat
fucomip
faddp
in
fdiv
aad
mov
aad
out
adc
xor
jmp
aaa
call
faddp
cmc
sti
imul
fisttps
xchg
aam
cmc
in
shr
rcr
shr
int3
lock
sti
repnz
fst
ret
loope
out
jmp
std
out
test
lock
sarb
int
aam
div
lock
out
ffreep
mov
mov
icebp
iret
jmp
out
std
fsubr
hlt
ret
aas
loope
cmp
loop
in
sbb
xchg
mov
lret
rol
iret
cmp
leave
out
adc
rol
inc
fucomi
fprem
ret
into
shr
nop
loope
in
int
das
out
div
sti
cmp
repnz
ret
mov
fucomip
mov
bnd
fstpt
lock
loop
testb
nop
xchg
leave
out
sarl
xor
loope
lret
test
fcmovnb
leave
incb
mov
push
iret
in
mul
cmp
not
cld
repz
rcl
repz
out
clc
leave
rcl
jmp
mov
in
in
aaa
int
fnstsw
cmp
orb
decl
call
add
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
xchg
aas
add
test
jmp
clc
lret
test
out
out
lret
cmc
lret
cli
fidivrs
iret
cmp
ds
lock
ljmp
fucomip
in
xchg
fcom
icebp
ror
icebp
out
lret
fstpt
stc
out
hlt
mov
jmp
rorl
call
xor
fistpll
fxtract
stc
cmp
aad
aad
fcom
mov
repz
in
hlt
cs
iret
ss
lock
cmp
int
out
and
in
jecxz
mov
fdivrp
test
jmp
shl
cmp
out
loope
lret
sarb
idivb
dec
fsubr
fucom
repnz
fmulp
xlat
aam
xlat
icebp
lret
fucomip
in
clc
aam
rcr
lock
fildl
icebp
lret
in
cmp
in
lock
cmc
std
repz
repnz
test
out
mov
xchg
out
xchg
loop
loop
out
fcomi
hlt
fdivrl
cld
jmp
roll
fmulp
out
jmp
rcl
aad
cmc
xor
leave
xor
ljmp
loop
sub
fcmove
repnz
in
cmc
jmp
xor
idiv
into
rcl
cmp
ds
hlt
flds
mov
jecxz
out
xor
ror
shl
in
fcomi
xlat
jmp
or
xchg
mov
shl
int
call
ds
repnz
cmp
sar
hlt
loopne
test
fsubr
out
in
jecxz
in
lret
aam
into
rcl
cli
ret
xlat
mov
leave
cmp
lret
jmp
lea
jmp
ror
iret
lret
rcl
loop
into
shl
rolb
enter
mov
in
aam
not
in
icebp
repz
cli
lock
in
out
mov
out
xchg
out
cmp
aad
std
out
lock
in
ljmp
cmc
cli
jmp
decl
lret
xor
ljmp
xlat
not
loopne
faddl
sti
xchg
rcll
int
xor
clc
dec
xlat
ret
iret
cmp
sub
fisttpll
decb
stc
ss
cmp
aam
or
int3
loopne
xchg
std
aad
fcmovnu
nop
fadds
in
in
idiv
rcr
cmc
sar
rolb
cmc
xchg
lret
in
les
xchg
test
repz
out
loope
fnstenv
out
int3
ljmp
bnd
leave
xchg
leave
clc
ljmp
shlb
sub
call
out
fucomi
loopne
rcl
out
out
out
in
xchg
loop
shl
into
shl
out
sti
std
aad
cmp
sarl
ret
and
ljmp
ljmp
in
clc
xor
sarl
cmp
in
std
xlat
cmp
adc
rcr
ljmp
lock
aaa
rcl
cmp
xor
lret
lock
loopne
loope
jecxz
mul
out
sti
int3
jmp
out
in
fsubr
hlt
hlt
out
cmc
out
cli
xlat
cmc
sbb
std
fcmovu
call
shl
out
ljmp
cmc
aad
loopne
ror
repz
int3
icebp
icebp
test
loopne
ret
int
stc
lret
ss
sarl
cmp
in
sti
mov
fadds
jecxz
in
out
shll
ror
xor
int
into
clc
mov
inc
into
dec
xchg
into
call
fnstenv
out
cmp
fnstenv
leave
fstpt
fucomp
fadds
call
divl
enter
into
cmp
std
std
in
mul
fucomi
cli
stc
addb
in
out
cld
enter
sar
cmp
in
fcomip
sar
stc
cmp
flds
out
xchg
aam
xor
cmp
clc
xor
xor
fldl2e
in
cld
in
jecxz
sti
jmp
lea
repz
leave
aas
fidivrl
in
jecxz
repz
sti
enter
clc
loop
lret
in
jmp
iret
shll
cmp
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
stc
repnz
testb
loop
xlat
sti
enter
in
leave
adcb
jmp
std
shl
fcomi
jmp
movb
fcmovnu
addb
ljmp
shll
shr
stc
fdivrp
cmc
clc
aad
out
cli
cmp
shl
int3
xor
clc
jmp
hlt
vpandn
loope
jecxz
jecxz
loop
ljmp
out
xrelease
leave
ret
ret
fucomp
cmp
sar
sti
cmc
in
fdivr
std
clc
mov
xlat
mov
out
ljmp
sub
in
ror
in
repnz
fcmovnbe
cld
test
xlat
enter
enter
mov
cmp
in
out
jmp
rcr
cmp
ljmp
hlt
rol
jmp
loop
cmp
fcoml
fsqrt
hlt
cmp
sti
fucomp
shl
in
std
aad
out
fdivrp
sti
lret
icebp
xchg
icebp
fdiv
enter
xor
in
sar
rcr
fcmovbe
adc
int3
xlat
loope
repnz
ljmp
shll
loope
stc
clc
repnz
ret
aam
std
in
cmp
jmp
xor
stc
cmp
shl
cld
out
out
repz
ret
loope
fsubrp
out
cli
int
iret
ljmp
xor
hlt
into
fdivrp
cmp
fdivr
cld
mov
aam
out
mov
fxch
clc
jmp
lock
and
repnz
ret
in
std
ljmp
in
into
cs
jmp
cmp
mov
fdiv
xlat
fisttpl
enter
clc
xor
sar
cmp
loope
shr
into
lds
fnclex
iret
out
jmp
loope
xor
in
iret
iret
neg
cmp
out
iret
call
loop
loopne
in
loopne
out
xchg
test
clc
cmp
into
iret
addl
decl
out
inc
into
out
lret
cmc
leave
aaa
cld
in
int
addl
hlt
loope
xlat
ljmp
fisttpll
jecxz
out
aas
enter
loopne
aam
addb
xchg
jmp
aaa
lret
enter
xor
hlt
aas
jecxz
ret
in
out
into
ljmp
sub
fcomp
sarl
stc
rcr
xlat
cmp
mov
loopne
mov
add
loop
hlt
xor
lret
cmp
xor
fcmovu
sti
cmc
cmp
mov
fadd
in
test
rcl
icebp
rcl
fdivp
fldz
in
test
out
repnz
test
cmp
loope
into
int3
in
cmp
xor
int
incl
fcomp
in
xchg
cmc
into
ss
jmp
cmpb
in
int3
ret
jecxz
rcl
test
cli
cli
and
repnz
cli
xor
ss
fstpt
loope
out
ss
cmp
cmc
std
fcmovbe
fninit
sub
mov
cmc
jmp
shll
repz
repnz
lret
fisttpll
ljmp
shll
in
sti
out
fmul
out
sar
in
aas
cld
cld
ror
call
sbb
call
loopne
icebp
test
ljmp
and
rorb
cld
mov
xchg
out
jmp
aam
shl
filds
loopne
xlat
lret
sti
ljmp
lret
addl
ror
int
stc
fcmovnb
aam
out
in
mov
jmp
out
jmp
in
divl
cmc
std
std
ljmp
mov
call
fcmovne
loopne
mov
in
rcl
call
int
adc
std
neg
jmp
mov
in
cmc
repnz
ss
clc
cmp
fdivrs
int
fadds
jmp
fmull
lret
xchg
loope
aad
ret
sti
enter
aad
clc
not
xchg
div
cmpb
pop
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
and
jg
roll
jle
aam
notb
shl
hlt
out
loope
repnz
ror
jmp
faddp
repz
stc
jmp
fmuls
out
jmp
cld
mov
xchg
sub
ljmp
loop
imul
cli
fadds
enter
repnz
enter
xor
repz
test
fmulp
mov
mov
aam
out
div
ljmp
iret
sarl
in
rcr
adc
aam
into
int3
jmp
xchg
xchg
in
xor
fld
xor
xor
sarl
cmp
jecxz
test
out
xchg
out
lret
cmp
cli
icebp
testl
mov
cli
rorb
aaa
ljmp
cld
fstp
cmc
sarb
faddl
xchg
icebp
mov
ss
stc
sti
fnstenv
aad
sti
out
lret
fcmovnbe
clc
aad
cmp
fucom
mov
test
out
xor
fyl2x
cli
cmp
aam
jecxz
ret
ret
testl
jmp
sub
jmp
repz
out
in
cmp
and
in
out
adc
loop
in
in
in
out
mov
loope
leave
stc
ss
cmp
aam
in
repz
fimull
fsubp
in
ljmp
call
cmp
aad
out
les
leave
testl
xor
clc
xor
aam
in
int
clc
fadd
adc
neg
icebp
out
in
lock
rcl
clc
xor
iret
out
addb
ljmp
jmp
xor
xor
xor
aas
clc
sar
repz
fldl
ljmp
ret
xor
int3
cli
into
lock
shl
int3
loopne
hlt
out
movl
sar
sarl
cli
leave
cmc
fdivrl
shr
ds
sar
mov
fnsetpm(287
clc
les
and
enter
xor
incl
shr
aas
sti
fadds
rorl
out
lret
iret
sti
cmp
int3
xor
fldl
rcr
in
mov
incb
rcl
fdivrs
cmp
cmp
cmp
cmc
sti
adc
cli
leave
fsub
int
mov
fmulp
jmp
shlb
call
xlat
call
ret
fdiv
test
xchg
hlt
in
orb
ror
ret
fdivs
cld
aad
loopne
cmc
repz
loopne
les
cli
ljmp
shl
int
into
clc
xor
fxch
aas
out
fld
sub
ret
sub
and
jmp
ljmp
lret
sar
stc
ss
in
fpatan
ljmp
xchg
nop
shl
enter
stc
out
rol
call
imul
fcmovu
std
ret
std
jmp
fucomip
sti
loope
call
ret
lds
jmp
cmp
div
cli
mov
lock
aad
repz
aad
in
ds
loopne
loope
addl
hlt
ret
out
leave
into
addb
hlt
xor
fcom
shl
aas
repnz
rcl
fiaddl
testl
divb
sub
loop
into
neg
ss
cmp
loopne
rorb
test
ljmp
not
out
repz
leave
ds
aas
in
in
fabs
loope
xchg
out
mov
xchg
lret
out
fdiv
cmp
cld
xor
std
sti
neg
int3
fdivr
lret
mov
xchg
icebp
das
sub
out
out
jmp
loop
shl
std
orl
xchg
loope
xor
loop
cli
idivl
not
call
clc
xchg
lock
jecxz
test
orl
sarb
lock
aad
fdiv
fdivr
std
jmp
ds
fdivrl
enter
cld
loop
sti
in
loop
hlt
lds
sar
out
das
idivl
cmp
test
leave
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
shrb
ffreep
addr16
push
add
shl
out
rolb
addl
cli
mov
repz
loop
cmp
ss
sti
iret
fcmove
in
fucomi
cli
cld
fcom
mov
loop
test
int3
mov
cli
call
cmp
ret
add
ret
loop
lret
ficoms
in
xlat
out
addb
sti
std
std
lret
cld
orb
xchg
aad
enter
clc
hlt
sti
neg
shr
loope
in
mov
mul
out
iret
out
lock
neg
cmc
xor
fnstenv
clc
xlat
cmp
fstp
stc
sar
mov
ljmp
hlt
aad
not
fmulp
ror
test
mov
rol
test
sbb
xchg
shlb
jmp
lret
sar
les
aam
mov
test
fstl
ret
out
sti
cli
leave
clc
sar
lock
xchg
cld
fiadds
xor
fdiv
fldln2
aad
fucomp
xlat
neg
hlt
xlat
jmp
mov
ret
cmc
xor
aad
cmp
aaa
sarl
xchg
mov
ret
lret
mov
out
loop
mov
mov
out
xor
rol
cmp
sar
fidivrl
loope
xchg
call
mov
in
ljmp
loope
int
repnz
rol
addl
idiv
call
mov
cmp
xor
clc
cmc
or
out
jmp
fdiv
fcmovbe
xchg
xchg
xchg
out
xor
fcom
fadd
hlt
hlt
ror
rcl
rol
aam
fcmovnbe
add
lret
enter
icebp
adcl
lock
cmp
roll
out
lea
int3
loope
aam
cmp
fdecstp
loop
fdivrl
cmp
sti
int3
out
sub
xchg
test
incb
shr
sti
xor
leave
or
rol
addb
or
loopne
lock
ss
fcmove
sti
clc
shl
cmp
ret
sti
clc
loop
enter
fsubr
loope
xchg
mov
shlb
fucomi
in
shl
ffree
in
iret
out
fadd
xlat
test
cld
xchg
sub
in
jecxz
rol
sarb
into
out
aam
xor
std
loop
cmp
std
enter
into
iret
shr
xchg
into
out
xlat
leave
rol
aam
jmp
test
out
repnz
test
xchg
test
hlt
jmp
xor
rcl
xor
fdiv
cmp
sti
cmp
into
ret
les
div
enter
fdiv
aas
icebp
fucomi
in
adc
loop
mov
mov
sti
mov
lock
repnz
int3
rol
int3
out
in
cmp
cmp
shl
flds
cli
enter
fxch
xchg
fdivp
in
repz
repz
std
sti
aas
testb
out
in
fcmovne
sbb
jmp
out
leave
jmp
aam
std
loopne
test
lds
lret
orb
lock
ret
aam
test
shl
cmc
mov
mov
out
xchg
das
jmp
xor
cmp
icebp
ss
cmp
test
out
aas
rcl
repnz
test
add
iret
xchg
out
in
das
leave
xor
test
out
fdivrp
faddl
lock
mov
enter
loopne
ljmp
test
std
mov
addl
ljmp
hlt
iret
icebp
jmp
neg
jecxz
std
inc
enter
in
ljmp
lret
repz
sarb
shl
jecxz
cmc
aad
mov
jecxz
mov
icebp
int3
sub
ljmp
ds
test
ret
mov
mov
call
out
int3
loopne
enter
fmulp
repz
hlt
roll
mov
mov
jmp
jmp
cmp
out
sti
int3
loopne
loopne
in
aam
lea
out
aaa
fcmovb
clc
hlt
repnz
fdivr
divb
sub
in
ljmp
test
xchg
xor
out
jmp
cmp
out
icebp
lock
sti
fadds
lret
out
fiadds
xor
jmp
fyl2x
xor
fcom
mov
cld
loop
clc
fldl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
cmp
sbb
jg
push
add
xchg
cmc
shl
shrl
in
cmp
sti
cmc
and
xor
mov
xchg
fmulp
call
jecxz
xor
leave
shl
iret
aad
jmp
xor
repz
xchg
loopne
in
mov
aam
repz
aas
repnz
out
shl
fnclex
loop
addl
cli
fcmovne
xchg
out
lock
xor
stc
icebp
sti
neg
cmp
cld
flds
hlt
mov
fcmovu
lret
enter
jecxz
fdivs
call
sar
hlt
cli
out
cmp
ret
mov
out
test
xchg
loop
mov
jmp
ss
mov
out
repnz
xlat
cmc
idiv
mov
xchg
jmp
fsubp
mov
imul
aam
in
jecxz
std
xor
cmp
xor
cmp
inc
filds
out
out
lret
fidivl
out
shl
xor
call
fnstcw
sti
loop,pt
fmuls
test
in
ljmp
std
call
in
cmp
rorb
sti
leave
fscale
into
loop
std
jmp
lock
jmp
ret
shl
in
sti
mov
sti
push
fadd
sti
test
call
icebp
int3
hlt
jmp
adc
out
ds
out
std
out
clc
repz
lret
cmp
lret
cmp
rol
shl
cmp
hlt
hlt
in
lret
int3
iret
lret
rorb
xlat
loop
in
xor
jmp
out
aam
ds
cmp
sti
fmuls
jmp
repnz
leave
fcmovnbe
leave
cmp
xor
fcmovnb
or
sub
mov
fisttps
xor
call
clc
sub
cmp
jecxz
xchg
xchg
lock
in
sarb
cli
in
cmp
aad
cmc
fsubr
int
fdiv
aad
decl
loope
lock
lret
icebp
in
fdivr
stc
fdivrp
cmp
sti
rcr
in
enter
mov
fcmovb
xchg
lret
test
fmulp
cmp
sarl
ds
ljmp
repnz
clc
hlt
lret
clc
out
fistpll
sti
ret
add
repz
jmp
call
faddl
int
aaa
xor
incl
repnz
repz
cmc
out
int
mov
in
in
in
cmp
aaa
cmp
hlt
out
rcr
test
ret
in
cld
ror
xor
sub
xor
iret
xor
xlat
out
fidivrs
ret
stc
icebp
in
imul
fucomi
jecxz
repnz
shl
xor
int3
enter
stc
addl
sar
rorb
ficoms
xor
div
sar
lock
repz
rcl
sti
fcomp
ret
int3
mov
jmp
lret
loopne
out
mov
ss
aaa
lock
fdiv
aas
add
cmp
dec
in
jecxz
int3
sbb
sub
ror
iret
xor
test
clc
in
test
loop
filds
int3
mov
call
xor
cmp
fcomip
lock
xchg
test
fcomp
addb
mov
ret
xor
fucomi
sbb
icebp
aad
test
rol
flds
icebp
mov
fmul
loopne
out
ljmp
addl
ljmp
in
mov
xchg
xchg
jecxz
divb
icebp
repz
shl
cmp
stc
in
movl
repz
icebp
repz
int3
ds
cmp
sarl
sti
mul
fst
testb
aad
out
jmp
cmc
xor
ds
neg
test
in
ficoml
jmp
repz
repnz
icebp
ss
int3
in
xor
jmp
ret
xchg
lock
enter
sti
sti
fmul
out
int3
test
iret
clc
loopne
mov
frstpm(287
ljmp
out
fmul
iret
aas
loope
out
or
loop
loope
ffree
xchg
fucomp
fmull
ljmp
cli
out
jmp
repz
fsubr
loopne
div
in
iret
leave
loopne
mov
not
cmc
sub
cmp
fsubrp
roll
loopne,pt
fmulp
loope
dec
in
sub
lock
repz
cli
cld
cmpb
neg
icebp
cli
fucomi
xchg
lret
mov
xchg
leave
shl
rcr
fcomi
ss
ljmp
in
shlb
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
fbstp
jg
push
add
out
in
icebp
call
out
xor
int
repz
hlt
out
clc
ret
les
mov
xchg
lock
mov
call
repnz
shr
or
fcmovbe
icebp
enter
mov
out
stc
lret
jecxz
ljmp
fnstcw
loopne
cmp
cmp
sar
sti
call
lock
std
repz
lret
hlt
lret
cmc
out
leave
sarb
hlt
xor
ret
rcl
xchg
add
in
jmp
mul
jmp
cmp
fdiv
cli
sarb
rolb
fmuls
out
in
sub
xor
not
aam
cld
loop
ret
ret
std
clc
mov
mov
call
xor
ss
call
stc
add
cmp
shl
test
fucomip
fdivr
xchg
mov
xchg
loopne
vcmpps
out
sub
aas
ffreep
in
loope
roll
mov
mov
incb
xor
out
int3
repnz
in
cmp
stc
fmuls
in
lock
cmc
fnsave
test
in
faddl
test
lret
xchg
iret
cld
icebp
jmp
ret
out
shll
clc
cmp
lock
out
fcomp
jmp
lret
in
sub
loop
int
clc
cmp
aad
loope,pt
mul
sti
cld
movb
shl
aad
into
aam
rcl
sarb
sar
in
cli
ret
fcomp
dec
test
out
out
ljmp
jmp
rolb
fdivr
call
out
mov
ss
enter
aam
icebp
xor
shr
orb
lock
nop
out
xchg
fsub
xor
vshufps
in
cld
faddl
cmc
enter
clc
in
push
loopne
loope
out
repnz
repz
cmp
repnz
inc
loop
addl
orb
ret
repz
enter
sarl
icebp
aad
ret
cmp
in
ljmp
xchg
in
leave
ror
hlt
repnz
fcomip
stc
loope
div
enter
fucom
int3
leave
test
int3
out
loopne
leave
rcr
in
fdiv
repnz
cmp
aam
sar
loopne
and
std
aas
in
testl
xor
in
cmp
aam
fsub
xchg
call
fadds
int
cmc
enter
in
out
int3
fsubr
ds
imul
repz
into
loopne
out
in
decb
mov
fidivl
shl
aad
cmp
fmul
adc
loop
fsub
into
leave
stc
mov
fisttps
out
hlt
cmc
int
repz
aam
xlat
xchg
lret
faddl
rol
in
cld
xor
enter
loopne
repz
jecxz
rol
fucom
loop
jecxz
call
cmc
cs
iret
ds
xlat
iret
sar
cld
ret
fcomip
loop
fcmovne
sbb
xchg
adc
iret
ror
in
ds
aam
fstpt
ret
cmc
ds
loop
mov
loope
enter
loopne
aam
iret
cmp
cli
aam
into
clc
jmp
fld
fcos
test
test
jecxz
fabs
jmp
fcmovnbe
push
xor
sub
cmp
cmp
lret
std
cmp
mov
clc
cli
out
nop
loop
hlt
out
xor
cmp
fdivrs
roll
ljmp
aad
fcmovb
repz
in
clc
leave
xor
shl
leave
loop
fisttpll
leave
fsubr
test
sub
aad
cmp
out
aas
roll
orb
in
das
xor
rol
rcl
ljmp
sti
in
leave
stc
std
hlt
jmp
into
mov
xor
repnz
idivb
fsubp
sar
out
ret
cld
enter
out
into
repnz
repz
std
out
lret
out
into
int
iret
shl
std
jecxz
mov
int
mov
rorl
into
ss
stc
leave
stc
cmp
fcomp
neg
hlt
shr
faddl
dec
mov
stc
enter
aad
cmp
stc
lock
hlt
fadd
decb
enter
fst
aam
hlt
aam
hlt
icebp
fdiv
jecxz
loopne,pt
call
cld
mov
xchg
jecxz
rorb
into
repz
fnstsw
push
movzwl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
iret
iret
idiv
cld
loop
enter
loop
iret
in
xchg
lock
xor
divl
aaa
fnstsw
ret
icebp
sar
enter
stc
fsubr
sar
rolb
lret
cmp
lock
addb
clc
orb
push
ror
loope
cmp
ss
cmp
fcmovu
hlt
in
aaa
jecxz
enter
jmp
xlat
stc
stc
enter
out
loope
ret
cmp
cmp
lret
aas
out
ret
xchg
call
in
sar
ljmp
imul
out
xor
cld
int
fstp
test
loop
test
lock
xlat
fldcw
sti
int
fsubr
cmc
cld
leave
cli
repnz
iret
cmp
hlt
std
sti
enter
roll
ss
ror
stc
aaa
ljmp
icebp
aam
fmul
fmul
fisttps
into
out
lock
aam
aad
shl
add
les
jmp
mov
and
xor
jmp
fcmovnu
into
cmc
ljmp
addl
fucom
fdivr
shll
iret
aaa
ret
fucomp
fsub
out
loopne
ds
les
in
in
jmp
mov
out
in
cli
shr
rcr
fdivp
sarb
iret
cmp
sar
aad
repz
out
orl
xor
into
ss
fcmovu
cld
test
hlt
ljmp
addl
ret
jecxz
out
in
hlt
rcr
loope
out
fsub
orl
fucom
out
mul
std
cmp
jmp
xor
idiv
rol
xor
in
test
mov
out
imul
sti
int
cld
sbb
clc
mov
movb
loope
add
out
rcl
out
std
cmp
sbb
xlat
ret
fadd
call
or
jmp
in
neg
xlat
cmp
fdivr
loop
xlat
fmulp
jmp
std
in
lret
test
out
xor
stc
in
aas
leave
int
divb
cmc
out
repnz
orb
divl
repz
cmp
faddp
xchg
mov
nop
cld
shl
mov
rcl
out
shlb
int3
repz
cmp
repnz
call
cmp
xchg
xor
repnz
cmp
cld
xor
fildl
in
cli
enter
in
xchg
lret
inc
lret
xor
stc
xor
loope
test
test
fisttpll
icebp
dec
jmp
icebp
lret
ror
icebp
fstp
leave
lret
rcl
repnz
out
cmc
cmc
mov
fld
loopne
mov
repz
icebp
cmp
loopne
rcl
clc
sar
jmp
in
loope
addb
icebp
lock
fcmovnbe
shl
stc
test
add
clc
loope
nop
out
jecxz
into
sar
shll
aad
test
iret
iret
fcomi
neg
in
mov
fistl
in
shll
in
leave
in
fistpll
jmp
aam
cmp
repz
hlt
mov
jmp
xlat
lret
shll
leave
cmp
clc
lret
icebp
stc
xor
mov
int
out
stc
jecxz
jmp
lret
lock
in
shl
in
fadd
fdiv
loop
enter
lock
out
std
sub
xor
in
aad
rcr
iret
clc
xor
cmp
incl
out
hlt
aam
out
aad
sti
out
xor
in
int3
jmp
loope
aam
fcmovnbe
test
out
enter
cmc
xlat
out
sti
adc
rol
cmp
in
sti
in
call
int3
in
out
enter
hlt
int
lret
iret
int
aas
rcl
call
stc
fiaddl
into
test
xor
cmp
fcom
fnstcw
cli
fistpll
aam
in
mov
enter
ret
jmp
fdivp
xchg
xor
xor
xor
ljmp
loope
fldl
out
test
xchg
xchg
call
aad
hlt
in
cmp
out
call
ds
in
filds
in
lock
nop
out
adcl
fyl2x
out
cmc
sarb
sti
fstp
sarb
orl
leave
shl
and
shr
xor
sti
std
aad
cmp
ds
rcl
test
sbb
xchg
lock
repz
roll
xchg
inc
add
inc
add
sti
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
ret
jg
push
add
in
imul
rcl
int
cmp
clc
int3
sti
sar
aas
loopne
mov
in
int3
mov
out
enter
jecxz
xlat
rcl
iret
iret
cmp
int3
aam
xor
rol
in
mul
fst
clc
mul
faddl
cmc
mov
in
xor
cmp
out
fucomip
out
shl
std
sti
fiadds
and
out
lret
loope
shr
xor
shll
cld
icebp
hlt
cmp
mul
int
lock
test
lret
fucomp
shl
loope
out
rcr
enter
loope
loop
fsub
call
fsub
cli
fiaddl
cmc
hlt
jmp
xlat
shl
int
fcmove
in
lret
test
cmp
imul
fucomi
mov
xchg
out
xchg
loope
lret
imul
aaa
shl
ret
test
lock
fucomi
out
call
loopne
ret
fdivs
f2xm1
aad
shl
aam
addl
mov
mov
leave
iret
test
lock
cmp
rcr
repz
out
xchg
mov
cli
in
out
and
xlat
in
ss
aad
aad
fdiv
mov
jmp
mov
out
cli
cmc
hlt
aad
imul
test
out
vpmaxub
iret
ror
loop
xchg
ss
fcmovu
into
aas
cmp
ret
aas
aad
in
enter
lret
jmp
fxam
jmp
repz
aad
clc
rcl
xchg
lret
fucomp
loopne
jmp
in
ljmp
lret
xorb
out
cmp
clc
xchg
and
ds
enter
loop
into
xchg
in
rol
sub
xor
idivb
xchg
fdivr
call
stc
in
inc
xchg
aam
int
shr
enter
inc
fstpt
in
addb
in
lret
xchg
nop
fnstsw
into
fsubp
xor
in
rol
cmp
hlt
dec
loope
xchg
lret
jmp
out
xor
xor
cmp
into
xlat
loope
fsubr
cmp
ret
fdivr
int3
test
jmp
iret
rcl
out
into
shl
out
int3
repz
lock
lret
lret
mov
clc
test
addb
in
into
fmul
in
repnz
fld
in
enter
in
fcoms
call
in
xor
lret
lock
rcr
mov
sar
std
out
mov
test
cmc
imul
in
repnz
call
aas
test
aad
fucomp
std
faddl
in
repnz
shl
adc
ljmp
sar
mov
mov
iret
in
std
xchg
out
leave
clc
stc
xor
ljmp
fstp
repnz
mov
lret
enter
sar
in
xor
shl
iret
fidivrs
hlt
ss
jecxz
aad
fdiv
fucomi
fcmove
into
mov
xchg
jecxz
fucomip
test
cmp
cmp
sti
enter
loopne
ret
aas
shl
jecxz
in
out
mov
mov
in
out
lret
cmp
xlat
ds
div
cld
inc
fdivp
clc
xlat
inc
lock
mov
shl
jmp
neg
out
xor
into
in
out
fsub
in
cmp
loop
iret
xchg
clc
repz
int3
in
fcmovnu
xor
leave
out
cld
fdiv
int
mov
lock
cmc
cli
aad
cmp
fdiv
out
xlat
ret
out
cmp
leave
out
out
xchg
ror
fldl
rcl
repnz
jmp
fnstcw
cmp
sar
cmc
flds
leave
fucomip
jmp
cmp
aam
repnz
repnz
fiaddl
shl
enter
mov
out
xchg
in
iret
out
cmp
repz
cmc
ljmp
shl
shl
test
aad
mov
in
iret
xor
ss
leave
loopne
ds
test
mov
fucom
sbb
mov
in
repnz
enter
std
cmp
fdiv
fsub
out
ret
jecxz
leave
mov
int3
out
mov
repz
call
lock
std
cmpb
icebp
idiv
idiv
fstp
in
stc
into
xchg
xor
in
cmp
repnz
fnstsw
idiv
fsub
iret
rcr
mov
mov
jmp
cmc
ljmp
ds
repz
in
cmp
out
lret
fldl
out
fdivp
cmc
shll
cmc
cs
int3
idiv
cmp
ret
in
lock
fcmovbe
mov
mov
movl
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
frstor
lahf
cmp
jg
jle
add
clc
xchg
lret
ljmp
fcomp
div
into
sar
lret
aam
shl
fninit
repz
stc
mov
filds
cmc
lock
hlt
fsub
repz
cli
ret
cmp
aad
loop
in
fcmovbe
shll
and
ret
fsubr
mov
in
jecxz
mov
faddp
in
xlat
cmc
leave
xor
fdivrl
in
xchg
ffree
jmp
test
out
ljmp
int3
xor
iret
idiv
fcmovnu
hlt
shl
cmp
xlat
incl
or
testb
fcomi
aam
jmp
into
sarl
in
fcmovu
mul
aad
mov
fisttpll
sub
idiv
loope
repz
in
xchg
cli
cli
loop
in
icebp
out
xor
repz
in
faddl
ss
iret
aas
rorb
rolb
in
int3
cmc
sti
cmp
hlt
call
addb
jecxz
mov
ret
loop
out
out
hlt
lret
fcmovbe
aas
in
fdivp
fsub
fcomi
out
roll
int
out
out
cmc
xchg
out
into
out
jmp
lock
sti
std
aad
aas
shl
clc
ror
xlat
loop
loop
out
int
repnz
xor
xor
aam
cmp
jecxz
filds
ljmp
cmc
mov
repnz
cs
out
cmp
iret
in
idiv
fprem
sar
repz
mov
in
mov
add
fldpi
xor
fmul
loope,pt
roll
std
std
out
out
mov
mov
repz
in
cmp
out
shl
test
xlat
neg
test
fists
ret
cmp
shrb
xbegin
icebp
ret
in
xchg
loope
inc
sub
lret
leave
orl
lret
not
xor
aam
cli
in
mov
loopne
in
ret
xor
xor
cmc
cmp
addl
int
adcb
loope
aam
lret
cmp
cmp
div
test
loope
ds
in
cld
shl
ljmp
iret
cmp
shl
faddl
mov
fcmovb
lret
out
mov
out
aaa
out
in
stc
aas
ds
test
icebp
shr
ljmp
sti
out
in
fldl
loope
stc
in
lret
leave
lret
out
in
repz
cli
movb
cmp
icebp
xchg
nop
loop
aad
xor
fucomip
aad
lock
xchg
call
out
in
cmp
icebp
cmc
fcomi
xor
aam
stc
out
movb
in
mov
adc
jecxz
stc
xor
iret
rcl
call
mov
cld
mov
out
call
cmc
cmp
fdivrl
out
fld
cmp
fiaddl
xchg
nop
in
int3
cs
xor
cli
in
sar
jecxz
sar
hlt
cli
lret
loopne
loope
shr
nop
ljmp
repz
cmc
aaa
sti
int3
cmp
in
sar
xchg
clc
ffreep
clc
xchg
out
jmp
lock
xor
cld
jmp
mul
jmp
fdivr
fsub
addb
shl
into
int3
jmp
stc
mul
iret
stc
lock
not
decb
mov
xchg
in
fyl2xp1
aad
int3
fmulp
fucomip
cmp
ds
fildl
out
loopne
jecxz
sti
ljmp
out
ljmp
hlt
ret
rcr
lret
fldz
mov
fisttps
shl
out
fnstsw
out
sbb
xlat
sub
lret
loope
sar
int3
fcomip
call
ljmp
xor
adc
orl
in
test
xchg
fbstp
not
cmp
clc
out
jmp
loope
aam
sti
leave
cli
stc
loop
loope
mov
cld
lock
xor
hlt
int3
repnz
fldl
out
mov
into
iret
loop
or
divb
rcl
test
cmp
ds
fincstp
fdivr
shl
stc
mov
cld
decb
std
in
std
hlt
loopne
in
cs
cmc
cmp
faddl
loopne
xchg
leave
jecxz
call
stc
in
out
into
cmp
lret
cmc
fnclex
cmp
dec
add
cmp
jmp
aad
aad
aad
aad
push
push
scas
and
add
jle
add
out
fucom
in
sub
test
in
xchg
int3
shr
out
lret
sti
aad
aaa
cmp
cmpl
aad
cmp
lock
icebp
test
xor
xor
in
fcomi
lret
leave
loop
out
loopne
test
xor
ljmp
std
fcomip
shr
in
jecxz
lock
loopne
fdivrs
stc
rol
aad
in
clc
mov
enter
jecxz
rcl
jmp
iret
ds
cli
ret
cmp
ret
or
jmp
loop
xor
ljmp
sarl
repz
aas
fdivrp
cld
xchg
mov
decl
in
divb
xor
fdiv
iret
cmp
stc
leave
enter
into
mov
mov
out
not
imul
jecxz
fdiv
fidivs
clc
fmul
ret
loopne
hlt
fdivr
lret
test
mov
aaa
int
enter
stc
rcl
filds
in
vpsllq
mov
adc
adc
xor
call
cmp
hlt
xlat
rcl
out
sbb
hlt
jmp
mov
loop
sub
loop
lret
xor
enter
clc
clc
repz
cmp
cmc
xchg
in
mov
jecxz
xor
xor
stc
std
leave
aaa
cld
cmp
test
loop
div
lea
lret
int3
aam
fidivl
stc
jmp
std
call
into
test
ffreep
xchg
lret
xlat
mov
out
test
or
not
cmc
int
call
cmp
aam
into
aas
not
in
in
clc
out
sti
repz
xchg
in
into
loop
int3
mov
aad
rol
testl
mov
mov
ret
ss
in
sti
cmp
loope
in
loope
mov
loop
loope
mov
aam
shrb
leave
aad
aam
rolb
call
test
xchg
fsubr
out
cmc
cli
into
aaa
out
std
aad
cmp
iret
repz
repz
fsubp
ret
enter
jmp
lret
cmc
enter
cmp
repz
movb
test
ljmp
int
das
call
iret
and
addl
repz
in
loopne
enter
out
repz
ljmp
out
lock
in
fdivr
fcompp
in
xchg
int
aam
xor
xor
aam
shl
stc
fistpll
aas
jmp
cld
frndint
fucomip
in
xchg
call
clc
out
clc
fsubrp
cmp
loope
ror
aam
test
std
xlat
idiv
xchg
int3
imul
loope
aad
in
fsubr
idiv
shl
idiv
aad
decl
mov
cld
out
fidivs
int
ret
in
cli
fsubr
fsubr
shl
rol
clc
in
neg
xchg
cld
in
xchg
in
xlat
leave
leave
lock
out
icebp
cmc
fcom
cmp
loope
out
les
in
std
lret
loop
jecxz
lock
iret
in
lock
out
ss
fcmovne
std
roll
int
mov
out
sti
incb
out
repz
in
hlt
in
in
iret
rcr
repnz
std
sti
hlt
fucom
lret
sub
shl
out
jmp
test
cmp
aam
fcmovnu
jecxz
jmp
in
jmp
xlat
xlat
ror
sti
in
in
iret
sti
stc
std
cmp
hlt
stc
out
loope
fcomi
lock
xchg
out
stc
aad
cmc
xlat
clc
stc
lret
cli
frndint
cmp
fst
in
fadds
jmp
fneni(8087
test
jmp
in
cmp
repz
fdivrp
fst
and
mov
xchg
mov
out
aad
lret
into
ss
sar
test
shl
fcomip
addb
loope
test
mov
ss
cli
cmp
cmc
aas
fdivrs
rcl
aas
leave
cmp
incb
iret
in
loopne
ret
cmp
in
aam
fdiv
aam
shl
in
ret
hlt
fucomi
fcmovu
imul
mov
call
lret
sarb
cmp
lock
mov
enter
xchg
hlt
push
loopne
sub
in
fucomi
out
xor
and
fadd
in
test
rcr
out
shr
mov
mov
jecxz
xor
clc
fcmovnb
repnz
iret
in
fcmovu
hlt
lock
clc
sbb
xchg
loope
rcl
enter
lock
dec
lock
faddp
loop
rol
call
in
jne
andl
mov
jmp
aas
into
lret
leave
aam
dec
jo
imul
jle
add
xor
sti
repnz
stc
cld
fcmovnu
cli
loope
aam
test
in
mov
ror
icebp
fcmovnbe
aam
stc
loopne
fnstsw
shl
xlat
fcmovbe
test
int3
fadds
ret
in
jmp
in
jecxz,pt
fdivr
jecxz
stc
testl
enter
ss
aaa
ds
jmp
cld
xor
sar
fsub
sti
in
testl
loope
ss
jmp
jmp
sbb
rorb
lret
in
fdivp
xorb
lock
out
xor
std
hlt
aam
in
aas
out
stc
mov
jmp
loopne
xchg
out
loop
stc
ret
xor
std
in
into
int
out
and
repz
in
jmp
cmp
rcr
ljmp
clc
cmp
rcr
repnz
cmp
cmp
aam
out
filds
ljmp
cmp
int
aam
int3
rcl
rcr
shl
ret
std
int3
stc
or
in
shr
out
into
int3
loop
lret
cli
cmp
aas
add
in
in
iret
ret
cmc
icebp
repnz
iret
fcmovnbe
out
cli
jmp
loopne
cmp
rcr
cld
fimull
leave
out
cld
nop
jmp
mov
ljmp
leave
out
jmp
call
out
xchg
aam
lret
aaa
fld
in
int3
in
aam
cli
adc
repnz
incb
xor
xor
hlt
icebp
aad
fdivrl
sarl
or
ret
jmp
in
icebp
loopne
jmp
ss
int3
aaa
cmp
aad
cmp
sbb
test
mov
into
cli
out
mov
xchg
into
fcomip
xor
xor
jmp
aaa
lock
loopne
fcmovne
fld
out
stc
enter
cli
fmull
repz
int
cld
cmp
xor
addl
mov
std
in
in
push
ss
int
lret
cmp
iret
inc
call
fsubr
xchg
and
shlb
leave
out
aaa
fdivrl
in
div
aam
iret
aad
icebp
ffree
ret
call
xchg
repnz
std
out
leave
fcmovnbe
lret
xchg
flds
xchg
nop
lret
div
aam
cmp
ljmp
test
hlt
call
test
leave
addl
idiv
loope
ss
aam
xlat
cli
fsub
jecxz
in
xchg
in
int
call
fpatan
cmp
sarb
clc
out
fdiv
faddl
lret
jmp
xchg
enter
xor
hlt
out
cmp
div
fiadds
sub
and
and
jmp
cmc
rcr
repnz
sub
cmc
loope
enter
fmuls
out
xchg
repnz
mov
aad
hlt
rcl
jmp
iret
out
aam
shl
test
int3
fld
out
test
fcmove
loop
lock
imul
xor
xlat
fcomp
repnz
iret
loopne
xlat
xlat
in
loope
into
jmp
nop
call
jecxz
int3
cmp
lret
add
aaa
clc
rorb
in
fiadds
ss
push
xor
ret
fsqrt
cli
loope
out
mov
clc
and
adc
mov
jmp
les
jmp
fsin
fcos
rcr
xchg
fsubr
xchg
repz
xchg
shl
not
rcr
cli
xor
sar
iret
loope
out
ds
cmp
xchg
test
out
sbb
xor
fdivs
xor
fcmovbe
aam
repz
rorb
repnz
xchg
ss
lock
aad
addl
in
repz
out
icebp
xor
cmp
cmp
ss
fcmovnu
icebp
repz
sbb
test
lock
leave
int
ss
int3
aaa
ds
cmp
jecxz
icebp
jmp
cli
fimull
std
not
jmp
xlat
rcl
enter
cmp
loop
sub
loopne
mov
cli
jecxz
fmul
aam
ror
xor
out
ss
dec
sarl
fincstp
cmp
jecxz
xchg
xchg
xor
xor
stc
jmp
cmp
xlat
aas
ds
cmp
test
loope
enter
repz
iret
lock
int
ror
sti
repz
cmc
xlat
shl
repz
rol
std
jecxz
inc
or
inc
cld
jmp
int3
ret
int3
int3
sahf
pushf
paddsb
add
add
addl
xor
sub
leave
jmp
loopne
filds
loope
ljmp
out
test
ror
in
enter
loopne
jmp
imul
shl
leave
in
ljmp
lock
repnz
lret
ds
fdivrp
iret
test
aam
fstp
fsubrp
lret
lret
std
into
leave
xor
sar
fdiv
fcomi
cmp
cmp
loop
incl
test
in
mov
cld
xchg
into
aam
lret
cmp
fcmovnu
cmp
loop
fidivrs
lock
mov
leave
iret
test
test
aas
shl
repz
mul
ljmp
jmp
call
mov
xor
icebp
in
aam
shl
cmc
cmc
loope
lock
aam
mov
lds
das
cmp
out
fdivp
add
into
test
in
mov
out
mov
shl
out
leave
int
aam
sarl
cli
in
sar
fucom
jecxz
xchg
test
test
ljmp
fdivp
cmp
loope
ret
test
jmp
sti
ljmp
in
loopne
xor
repnz
neg
jmp
in
fsubr
clc
in
std
call
in
rcl
loop
xor
stc
sar
cmp
cld
std
fchs
xor
faddp
xlat
sti
fiaddl
rclb
shrb
leave
sti
out
out
out
idiv
hlt
shl
cmp
repnz
ljmp
fistl
lret
lret
in
sarl
rcr
fcmovbe
loop
shl
mov
idiv
test
call
rol
rol
loop
cmp
hlt
idiv
repnz
and
jmp
rcr
repnz
fdiv
hlt
fnsave
ss
lret
roll
mov
flds
rolb
out
cmp
out
xor
repz
in
sbb
mov
repz
lock
out
ljmp
cli
adc
repnz
fadd
jmp
int3
in
and
aam
out
fdivp
fmulp
in
lock
rcr
clc
cmp
fcmovne
xchg
test
rcl
ret
neg
cmp
aaa
lret
cld
into
shl
loope
shl
aam
ftst
faddl
in
in
int
shrl
aaa
clc
out
fcmove
xor
out
repnz
testl
icebp
in
icebp
subb
xor
rcr
faddp
int3
fucom
add
mov
jmp
sub
in
stc
loope
aad
jmp
cmc
int
push
in
mov
clc
mov
xlat
test
shr
shll
xor
fmul
fsubr
fadds
test
sar
xchg
cld
iret
addl
leave
fst
cmp
cmc
cmp
clc
out
cld
loopne
test
loope
fisttps
ret
in
repz
sbb
dec
ret
rcr
mov
mov
leave
out
jecxz
test
ljmp
clc
not
xlat
out
out
shl
aam
fninit
int
fists
in
lock
cmp
in
in
fnstcw
rcr
fcomip
cmp
aam
fcmovbe
jecxz
jmp
in
xchg
rolb
clc
int3
cmp
fdivr
cmc
ret
cmp
fdivrp
loope
in
fcmove
in
xrelease
shr
cmc
in
xor
repz
into
cmp
enter
out
ret
addl
jmp
cmp
clc
add
neg
cmp
loop
addb
repnz
rcl
in
add
fdivr
shl
sti
leave
xlat
in
mov
jecxz
enter
imul
imul
call
rcr
aas
rolb
fcmovnu
test
loopne
int3
movl
imul
shlb
ds
sub
aad
out
repz
roll
ror
jmp
loopne
les
fnstsw
repz
add
std
out
out
in
icebp
ss
xor
xor
fsub
ds
cld
loop
filds
fsubrp
sti
lret
xchg
test
icebp
ljmp
fstpt
add
in
loope
mov
faddl
iret
enter
aad
xlat
ss
fdivrs
stc
sarl
ljmp
filds
fadd
sti
xor
filds
inc
or
out
add
add
lret
into
fst
fstp
bound
xchg
dec
adc
jle
add
fdivp
sti
aam
xchg
mov
xchg
shr
out
out
cmc
cmp
hlt
fdecstp
addl
ljmp
mov
popl
ret
fdivrp
not
ljmp
shl
fucomi
test
lret
shl
ror
and
iret
into
fcom
stc
call
jmp
fcmove
ds
fisttps
test
xlat
mov
cmp
cmp
cmp
rolb
loopne
out
xchg
xchg
jmp
fnstenv
fcmovu
cmp
sbb
shr
fucom
ds
jmp
ljmp
ror
xor
in
jmp
cmp
aam
cmp
test
ror
mov
test
icebp
in
cmc
lock
aam
aaa
shl
leave
frndint
aas
rcr
icebp
call
fdecstp
out
and
pop
xor
call
sti
xor
cmp
sbb
stc
xchg
mov
and
hlt
stc
fdiv
int
repz
iret
icebp
stc
orl
xchg
jecxz
in
sub
fmul
shr
fcmovnb
cmp
mov
sub
leave
testb
in
repnz
in
in
sub
out
sarb
int
clc
out
stc
rcl
aam
loopne
loop
in
shl
jecxz
repz
fmul
int3
hlt
in
ss
fld
sti
cmp
cld
cli
mov
out
rclb
call
stc
rcl
cmp
out
ret
in
cmc
cmp
xchg
decl
loopne
loope
aad
fmul
repz
or
rcr
test
faddp
addl
lret
xchg
xchg
and
cmc
xlat
lret
out
aas
clc
loop
add
cld
out
jmp
std
lret
xchg
shlb
clc
icebp
fucomp
shlb
rcl
fildl
sti
mov
int
out
fcoml
call
call
cld
aas
cmp
aad
ret
enter
ljmp
xor
xlat
cmp
fmul
hlt
std
cld
icebp
cmp
fdivr
jmp
xlat
movl
xor
ret
repz
xor
rol
aad
in
sar
lds
in
call
out
icebp
fidivl
into
std
std
shll
int3
shl
std
stc
fxtract
cmc
clc
mov
decl
repnz
iret
ror
xor
sti
cli
cmp
xlat
sarl
rcr
rcr
ds
faddl
xor
out
jecxz
mul
iret
fcmovne
cmc
repnz
jmp
stc
aad
roll
jmp
fcomi
xchg
mov
div
enter
not
fidivs
int
in
shl
loopne
aam
test
jecxz
fdivr
loopne
mov
lret
aad
out
stc
fdecstp
roll
icebp
and
test
mov
int3
leave
loope
xchg
xor
xlat
fidivl
enter
shl
in
sarl
cli
mov
fld
leave
fisttpl
int
cmp
lret
fidivrl
loopne
shr
shl
cmp
jmp
mov
loopne
cmp
into
xorl
icebp
lret
in
test
sar
mov
leave
orl
lret
loop
leave
aaa
shl
sar
in
ds
std
shl
out
div
mov
mov
xor
clc
out
lret
test
fucomp
cmp
cld
cli
fcomip
loope
cld
cli
fcomip
orl
clc
rcr
pushl
cmp
cmpb
rcr
repz
mov
loope
iret
lock
loop
cli
sti
out
ss
fadd
std
rcl
les
fsubr
out
lea
shr
shl
bnd
cmp
test
cmc
jecxz
into
lds
ror
leave
lret
fyl2xp1
cld
rol
int3
cmp
loopne
iret
into
ds
out
lret
in
in
xchg
xchg
fdivp
out
int3
xor
aad
ljmp
rol
rorl
loope
xor
lret
aam
lock
fcomi
fdivr
fstpt
loopne
aam
dec
testl
in
cld
repnz
iret
cmp
aam
fsubrp
cmp
sti
repnz
fildl
mov
xor
cs
lock
ds
fscale
mov
out
orl
loope
cld
fcomp
cmp
aam
xor
sar
orl
out
rol
hlt
xor
push
jmp
int
iret
rcl
aad
inc
xor
lahf
into
sub
pop
add
add
in
iret
cmp
lock
out
rolb
mov
stc
xlat
and
call
into
ror
in
jmp
out
idiv
lret
div
clc
faddp
loop
lret
mov
in
xchg
out
fcomip
aad
out
ret
cli
idivl
std
fdivr
cmp
jecxz
out
clc
out
fucomi
enter
jmp
in
mov
test
repnz
sar
jmp
aad
orb
inc
mov
orb
ss
out
cmp
cmp
jecxz
cmp
rorb
xor
out
lret
leave
xchg
int
in
lret
aam
int3
cmp
lock
idiv
sar
mov
incl
loop
loopne
in
jecxz
jmp
jmp
jecxz
aas
jecxz
fadd
clc
cmc
clc
ds
idiv
in
rclb
cs
ljmp
shr
fldl
out
orl
ret
icebp
xor
fcomi
out
adc
loopne
out
mov
in
cli
cli
lret
jmp
adcb
xor
cmc
call
in
out
aam
cld
cld
out
in
stc
fpatan
addl
xlat
aad
cmc
leave
repnz
addl
mov
call
mov
into
rol
in
fidivrl
repnz
rorl
aas
into
int3
out
mov
loopne
in
fdiv
rcl
aad
hlt
cld
sbb
repnz
repnz
out
loope
fisttps
aam
lock
enter
cli
cld
cmp
shl
loope
rcr
call
rorl
loop
aaa
in
aam
in
shl
cmp
ret
iret
movl
mov
std
out
in
icebp
xor
int3
call
not
aam
rcr
xlat
std
imul
jecxz
clc
nop
xchg
into
into
int
in
loopne
leave
aaa
icebp
out
repnz
cmpb
hlt
shl
adc
leave
call
icebp
in
int
leave
ljmp
out
div
cmp
rcr
icebp
fcomp
ffreep
testb
fists
in
bnd
iret
xor
clc
loopne
jmp
mov
movl
div
aad
cmp
cmp
cmp
icebp
hlt
stc
aad
adc
int3
fiadds
imull
repz
fsin
repz
aad
rcr
cli
in
fildl
in
test
in
enter
cmp
cmp
aas
stc
ret
xlat
ret
or
enter
into
jmp
jmp
loop
cmp
xor
cmp
ret
out
in
out
int3
in
iret
adcl
iret
fmul
loopne
test
iret
in
aam
sar
test
adc
ror
lret
shl
lret
out
ss
test
fucomip
in
in
cli
imul
mov
out
sbb
rol
lock
sar
in
aas
repz
not
cmp
mov
enter
ljmp
out
fst
hlt
std
loope
aam
clc
test
and
fisttpll
nop
into
repz
cmp
into
sti
cmp
jmp
cmpl
loopne
fcomp
sti
jmp
in
test
shl
lret
jmp
in
xor
xor
fdiv
cli
icebp
ret
ljmp
cmp
int
lea
icebp
in
lret
out
rcl
rol
out
shl
clc
enter
cli
std
ljmp
loopne
shr
aaa
cli
xlat
aaa
sti
hlt
test
not
testl
int
shl
jmp
clc
hlt
iret
cmp
fdivrs
repz
enter
std
lret
out
sti
in
sbb
xor
loop
enter
test
lret
ss
out
xlat
and
out
lret
fsubrp
out
jmp
fdivs
cmp
jmp
ret
cmc
addl
std
call
out
jmp
loope,pt
xor
fdivr
test
out
orb
xor
cmp
in
jmp
icebp
cmc
loopne
loop
hlt
jecxz
fucomip
testb
fninit
in
xchg
aad
sub
xor
std
idivb
in
out
sbb
cli
fstpt
fucom
stc
test
xchg
out
xchg
out
sar
fucomi
fnstsw
rcr
aam
in
fdivrl
fucompp
roll
test
out
nop
in
out
in
call
loopne
xor
repnz
ljmp
cmp
add
inc
or
out
add
add
aad
fisttpll
sub
mov
clc
sbb
jle
add
loope
in
xchg
icebp
int
cmc
repnz
cmp
xor
shl
fnstcw
test
rcl
sub
jmp
lret
cs
into
cmp
out
cmc
out
aas
into
stc
cmc
rolb
out
fninit
loopne
mov
int
xor
fnstsw
cmp
int
cli
in
cmp
ret
cli
fsubr
xchg
popl
out
in
enter
int
repz
leave
mov
in
xchg
leave
out
ljmp
in
cmp
lret
loopne
clc
ret
or
filds
lret
out
shlb
aad
clc
xlat
in
jmp
hlt
into
icebp
rcr
cmc
jmp
out
div
out
loop
loope
fnstsw
aad
in
repnz
jmp
fxtract
aad
fdivr
loop
mov
xchg
int3
das
out
out
out
aad
filds
xchg
mov
lret
cli
rolb
ss
xor
int3
cmp
imul
neg
test
fnstsw
aad
rcr
xchg
testl
jecxz
xor
shr
fmulp
dec
sub
repz
call
xchg
test
leave
mov
xchg
xchg
out
shr
cmc
xor
cmc
ret
loop
xchg
fdivr
mul
xlat
fucomp
test
loope
in
out
aaa
in
in
imul
jmp
fcomp
repz
fcmovb
mov
fmuls
shl
xchg
and
xor
lock
repnz
cmp
ss
jecxz
test
mov
sti
flds
std
cmc
jmp
rol
ret
out
cmp
std
lock
hlt
testb
into
out
xchg
aaa
fmul
cmp
in
icebp
fistpll
in
xlat
loope
neg
fcmovnu
int3
jecxz
out
std
repz
fld
clc
xlat
shll
int3
idivl
jmp
ret
fdecstp
neg
test
test
int
mov
mov
orb
jmp
out
loopne
iret
neg
sti
xlat
repz
shl
test
fsubp
lock
filds
int
cld
rol
out
icebp
aam
jecxz
loopne
in
adc
call
call
loopne
out
ljmp
fsubr
into
jecxz
loope
fcom
fadd
out
idiv
mov
loope
int
leave
fidivl
sarb
shl
out
stc
loope
lock
adc
fst
mov
das
call
ror
fsubrp
loopne
rolb
fmul
xchg
fsubr
out
lret
lock
xor
hlt
cmp
lret
stc
adc
out
xor
out
jmp
fisttpl
xchg
int
out
xlat
lret
cmp
in
roll
add
lock
int3
icebp
out
into
sub
repnz
jmp
xor
iret
aaa
rcr
std
roll
mov
xchg
out
out
aam
call
into
cmp
jecxz
mov
nop
jmp
repz
lret
enter
cmp
cld
aas
mul
out
sarb
aam
xchg
mov
repz
icebp
xor
mov
aad
cmp
xor
hlt
cmp
mov
in
test
out
icebp
cmc
jecxz
xor
icebp
into
clc
cmp
int3
rolb
lds
repnz
ficoms
in
lock
aad
cmp
mul
shl
cmp
clc
jmp
ljmp
aaa
fst
cli
rcl
cmp
int
ret
fucomi
mul
call
lret
int3
aad
lret
xor
in
das
xlat
aaa
xor
ds
mov
out
test
enter
cld
jmp
cmc
aad
out
fcmovnbe
ljmp
icebp
mov
fstp
cld
loop
leave
sti
ljmp
ss
aad
cmp
fucom
sar
aam
hlt
addl
int
into
call
icebp
loop
fcom
xor
out
loopne
in
sti
loopne
rcl
faddp
icebp
out
stc
out
idiv
test
repz
ljmp
jmp
jmp
out
shl
clc
jecxz
enter
mov
aam
iret
iret
lret
xlat
icebp
aaa
cmp
fnstsw
lock
stc
not
in
cli
lret
out
loop
icebp
in
ficoms
out
iret
fcomi
rcr
lret
shl
fcomip
faddp
xchg
out
into
lret
repz
fsubr
repnz
cli
fxch
xchg
out
or
mov
out
lret
shl
loope
aaa
enter
fucomi
into
lret
loopne
loope
jge
push
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
imul
jle
add
clc
jecxz
loope
cli
ret
out
xchg
std
sub
in
hlt
lret
ret
xlat
in
rcl
iret
shr
cmp
cmp
loope
ret
mov
test
test
nop
jecxz
sti
jmp
int3
shll
fstp
cmp
idiv
xlat
loopne
jmp
in
fsubr
cli
xchg
orl
lret
out
fdivrp
int3
loopne
cmp
repz
call
mov
lret
jmp
repnz
mov
lock
cmc
stc
lret
cmp
cmp
sti
les
std
lret
sub
mov
ret
into
shr
icebp
ljmp
ss
cmp
fsub
cli
out
out
mov
rcr
fimuls
cmp
lret
out
leave
fiaddl
std
fcom
or
mov
sbb
in
int
in
mov
jmp
enter
repz
out
std
out
cli
cli
fst
in
in
leave
out
and
aad
cmp
out
fildl
aad
fucom
xlat
cld
clc
test
test
xchg
out
jmp
repnz
xor
in
int3
icebp
repz
cmp
imul
stc
vpand
fistl
ljmp
stc
ljmp
rcl
test
sbb
mov
leave
mov
clc
sub
std
aaa
iret
fldz
mov
leave
loope
aam
enter
mov
lock
das
rcl
ljmp
cmc
sar
ret
test
mov
nop
in
xchg
int
shll
repz
fmul
fidivrl
fcmovbe
ds
test
out
cld
sbb
loopne
lret
xchg
in
ljmp
cmc
xor
out
iret
sar
cmp
leave
mov
repnz
rcr
xorb
into
lret
rcr
sar
out
loopne
loopne
ret
out
fsub
movl
iret
jmp
repz
into
fmul
fdivr
cld
fcomip
lock
rcl
xlat
mov
icebp
enter
mov
xor
shl
std
shll
aas
cmp
shl
hlt
cld
cmp
mov
jmp
xchg
rcl
lret
repnz
ljmp
iret
add
test
cmc
int3
out
mov
out
xor
shl
fiaddl
rol
idiv
in
out
shr
fimuls
in
ljmp
rcr
sbb
loopne
shl
ret
lds
nop
xchg
in
aam
jmp
in
out
aaa
aad
stc
shl
loopne
lock
in
mov
mov
xchg
lret
int
loop
in
int3
cli
cmp
jmp
aam
cli
fcomp
rol
out
enter
mov
int3
mov
xchg
xchg
inc
icebp
cmp
imul
leave
int3
cmc
loopne
cli
in
icebp
icebp
call
flds
loope
xor
clc
xor
aaa
fcomip
cmp
ret
std
enter
imul
clc
loopne
in
inc
in
in
shrb
sub
cmp
neg
cmp
adc
cmp
test
loope
fimull
leave
test
fsubrp
loope
cmc
in
fst
ljmp
cmc
fadd
cld
aas
mov
test
iret
loop
in
out
aad
in
aad
repz
out
loope
sti
cmp
jmp
xchg
call
jmp
xlat
sarb
ljmp
out
mov
mov
call
jecxz
clc
lret
iret
in
cli
cmp
enter
cli
into
jecxz
fmul
xchg
icebp
jmp
loop
loope
cld
hlt
call
aam
loopne
out
fsubrp
repnz
iret
jmp
ss
call
fcmovne
cmp
xlat
stc
rol
lds
xor
xchg
ljmp
int3
repz
fcmovnbe
xor
cli
rol
addb
std
xchg
sub
xor
clc
cmc
divl
std
cmp
repnz
bnd
mov
xchg
fnop
incb
xor
lret
lock
xor
cld
icebp
xchg
iret
cmp
idiv
cli
clc
fyl2x
sub
mov
sub
call
enter
in
iret
loope
mov
or
fsubp
jecxz
nop
jmp
test
cmc
aam
loope
cli
cmp
test
cli
in
mov
in
stc
or
jecxz
xor
lret
xor
sarl
mov
mov
clc
lock
xlat
xor
in
out
lret
shr
cmc
lock
stc
ret
stc
out
fcomp
cmc
fucom
jecxz
fsubr
enter
shlb
aam
call
mov
mov
mov
jmp
enter
int
int3
lret
xlat
ja
sti
and
or
add
add
ss
stc
sarl
out
leave
xchg
sti
add
cld
addb
xor
ljmp
add
test
hlt
shr
aam
std
jmp
nop
xchg
out
cmc
fcomp
out
aaa
out
cmp
into
shr
fcmovbe
adc
fcmovb
shl
test
mov
aad
int
repz
fsub
bnd
repnz
fimuls
iret
lret
into
int
loope
shll
icebp
int
xor
cli
cmp
ffreep
repz
loop
lret
mov
int3
cld
rcl
adc
lret
aad
bnd
add
lds
out
ret
test
test
xor
into
enter
jmp
sbb
aad
not
aam
stc
lret
fucomip
adcb
ftst
cli
aaa
fcmovnu
icebp
jmp
cmp
repz
idiv
xchg
hlt
hlt
fst
xchg
flds
ljmp
jmp
in
cmc
fnstsw
test
sar
cld
hlt
mov
sti
into
stc
orb
ror
std
shll
fsubp
hlt
aad
roll
call
loopne
loopne
fldln2
imul
into
in
cmp
lret
out
sar
sar
std
xchg
test
in
int3
icebp
fiadds
aam
jmp
ffreep
repz
lret
fcmovnu
test
icebp
out
ss
fmul
repnz
repnz
aad
cld
into
ret
hlt
cmp
out
in
sbb
call
lret
leave
in
clc
out
cmp
fcomip
into
rcl
neg
bnd
out
fimull
jmp
xlat
fucomi
cs
xor
div
rolb
in
jecxz
repz
mov
shl
enter
fcom
jecxz
fucom
in
shl
mov
idiv
in
xchg
out
int3
xchg
jecxz
ss
int3
ds
in
rol
fdivr
cld
orl
hlt
jmp
xlat
fucomi
aaa
sub
out
cld
cmp
in
out
call
nop
std
xchg
in
fnstenv
jecxz
call
ljmp
test
leave
loopne
mov
call
test
xchg
loope
ret
idiv
out
out
cmp
sti
loop
fsub
fsubp
ffree
test
xchg
int3
in
mov
hlt
in
cmp
or
repnz
mov
fisttpl
iret
test
enter
lret
imul
iret
fucom
ret
rcl
lret
ljmp
icebp
in
shr
sti
idivb
into
fsincos
lock
fldl
out
addb
hlt
icebp
aad
stc
enter
lret
adc
fdivr
idiv
sar
xchg
test
fsubr
xchg
test
cmp
ljmp
fdivrs
cli
fiadds
test
mov
test
xchg
lret
faddl
loop
ss
sarl
lret
fcom
icebp
int3
shl
out
test
ret
mov
xchg
ljmp
lret
fstpt
test
aam
fsub
xchg
jmp
lret
decb
cli
ds
div
fdecstp
incl
in
cld
imul
lret
jecxz
repnz
cld
xchg
shl
xor
ror
xlat
cmp
lock
xor
jecxz
stc
cmp
mov
int
les
cmc
das
jmp
stc
xor
shr
cmp
rol
aam
ljmp
addl
into
cmp
call
aad
aas
in
cmc
in
leave
jmp
loop
iret
out
mov
cmp
aam
fcmovnu
loopne
cmpl
stc
aad
enter
out
cmp
xor
fyl2x
xor
cmp
sar
fidivrl
loope
xlat
in
lret
xchg
aas
in
jmp
out
cmp
incb
stc
fcmovb
xchg
out
in
test
call
cmp
jmp
repnz
fsubp
sub
xlat
mov
xchg
lock
test
fdivrp
xchg
repnz
xor
cmp
fdivr
mov
sub
ljmp
xor
ss
into
in
int3
in
loopne
in
hlt
cld
out
test
fsubr
mov
ljmp
repnz
idivb
stc
jecxz
ret
leave
fimull
cli
les
lret
xlat
cmc
xor
addb
dec
out
test
in
out
mov
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
cmp
pusha
jp
add
add
fsubp
jecxz
xor
out
xor
std
enter
xor
lock
xchg
mov
fcmove
into
jecxz
mov
lock
aad
out
out
sar
cld
loope
adc
mov
or
in
iret
ficoms
imul
xor
xlat
cmp
xor
ljmp
cmc
enter
xchg
xchg
in
das
in
in
fcom
repnz
repnz
in
std
fucomip
test
fmulp
out
loopne
xchg
hlt
rol
xlat
clc
jmp
leave
fistpll
ss
fldl
fucom
in
into
int
test
out
fcomp
jmp
fdivp
test
fsubp
test
out
sbb
cmc
in
call
xlat
jecxz
idiv
sti
test
aas
cmc
lret
xchg
cli
sbb
cs
in
aam
rol
shl
cld
out
fcmovu
xchg
orl
in
iret
call
shl
ret
icebp
loope
test
jmp
xchg
ret
call
out
jmp
sar
leave
aad
fldl2t
lret
loope
icebp
mov
jmp
ss
fdivp
cmp
loope
roll
cld
cld
fcmovnbe
repz
lock
jmp
fsubp
int
icebp
in
lds
loope
fisttpl
aam
xlat
loope
lret
shr
repz
fdivrp
ret
fdivp
sti
in
loopne
cld
mov
faddl
std
repz
aad
clc
ds
into
cmp
filds
loope
loope
hlt
jmp
aad
call
inc
cmp
mov
std
fcomp
ljmp
hlt
fiadds
divl
xor
cmc
sarl
icebp
stc
rolb
out
xchg
call
sub
cmp
idiv
ss
inc
std
sti
enter
test
lock
leave
shl
xlat
hlt
xor
xor
lock
ret
clc
in
sar
out
in
icebp
jmp
aam
xorl
xor
cmp
div
xor
aas
call
fisttpll
ret
ret
int
mov
repnz
not
fdivs
lret
cmc
shl
cmp
or
loope
test
shl
into
idiv
int3
int3
fucomip
cli
fstpt
cmp
sar
in
cli
mov
idivb
fxam
repnz
clc
shlb
idiv
in
fucom
xor
mov
mov
test
stc
jmp
rcl
lock
aaa
shl
call
int
fadd
cmp
cmc
ret
shl
out
xchg
leave
sti
or
repnz
xor
fxch
cmp
int3
loopne
fucom
in
aam
in
mov
mov
mov
out
out
in
loopne
jecxz
cmp
clc
fucomip
aas
rcr
cmp
lock
repnz
ljmp
hlt
fld
fcmovnu
hlt
dec
fiaddl
out
mov
fcom
clc
fcmovb
faddp
repnz
in
xor
fdiv
repz
cmp
std
ss
mov
lret
out
out
in
into
xchg
sub
fdiv
icebp
xor
stc
and
mov
lds
sti
xchg
into
loop
int
repz
int
enter
rcl
add
hlt
sar
rol
xlat
in
sti
call
loopne
xlat
into
icebp
iret
shr
icebp
iret
jmp
aas
repz
xlat
fucom
vpsubw
push
int3
jmp
cmp
aaa
sar
sarb
out
neg
out
loope
lret
testl
in
fcmovnu
ljmp
cmp
fdivp
fsubrp
out
cli
jmp
test
ret
int
call
fcomi
cmp
std
int
fildl
notb
iret
cmp
out
aas
into
rcr
icebp
loopne
fdivr
ljmp
lret
lock
clc
rcl
fucompp
cmp
cmp
movb
cli
out
ficoms
ror
cmp
repz
fdivp
repnz
int3
mov
in
out
out
rcl
xor
fcmovne
out
out
enter
in
cmp
xlat
fcomp
ret
lock
xchg
lea
xor
xor
out
jmp
fcom
cmp
cld
hlt
repnz
mov
test
in
fcmovu
cld
icebp
out
lret
lret
xor
out
fcomi
rol
iret
rcr
loopne
inc
mov
inc
mov
add
add
int
xlat
pusha
cmp
push
das
add
add
lds
lret
shr
loope
in
repnz
out
xor
rolb
call
lds
lock
lret
iret
out
cld
hlt
in
int3
xlat
fstp
fucom
stc
mov
mov
orl
test
fnstsw
cmp
fmul
cmp
cmp
shll
aad
sar
fdivp
ret
in
jmp
fldl
shl
fstpt
cmc
cmp
cli
hlt
stc
repz
incb
xlat
mov
test
jmp
aam
cmp
in
cmp
ds
roll
test
mov
shl
xor
cmp
lock
test
aaa
fdivr
aad
xchg
lret
shr
loop
cmc
fisttpll
repnz
cmp
sar
loop
aam
fdivr
sar
out
aad
testl
xor
into
iret
lock
rcl
icebp
test
mov
mov
out
mov
not
xor
std
lock
rcr
sti
in
xlat
test
jmp
add
enter
xor
fidivrl
ds
fdivp
sbb
fcmove
mov
mov
neg
int
leave
leave
cmc
lret
push
cmp
addl
xchg
call
test
das
xor
hlt
lock
xor
xor
call
pause
into
in
in
out
iret
clc
xor
fcompp
cld
test
loop
xchg
hlt
or
stc
leave
xchg
into
lock
rcl
test
xor
lret
xor
sar
ffree
int3
into
test
mov
into
loope
xchg
icebp
loope
loop
lret
stc
loope
into
fsubr
aam
jmp
vpsubq
int3
leave
out
decl
cmc
ror
repz
into
divl
cmp
cld
test
fsubr
add
dec
shl
out
icebp
jmp
out
sti
shr
fdivrl
test
filds
jmp
loope
xchg
rol
enter
cli
lret
into
sar
sti
flds
std
jmp
fistl
int3
ror
in
shl
leave
cmp
fcmovne
int3
loope
test
hlt
add
sbb
and
xchg
iret
enter
cmp
cmp
fadd
push
cmp
aam
icebp
mov
in
jmp
decl
xor
fcmovne
sar
call
rol
xlat
cmp
int
lds
xchg
in
xor
ror
cmp
fucomip
cmp
into
fadd
aas
in
aad
les
into
test
ficoms
int3
sti
cli
in
cmp
hlt
idivl
cmp
repnz
test
fadd
mov
repnz
test
cmc
idivb
xorb
fucomp
out
loopne
ret
std
cmp
int
mov
lret
shl
shl
sub
xor
cmpb
cli
addl
mov
icebp
lret
mov
call
fldl2t
lock
enter
std
in
shl
rcr
ljmp
lret
loop
in
xchg
mul
loope
cli
icebp
jmp
int
aam
cld
rcl
sar
repnz
std
mov
fists
xchg
enter
out
aaa
cmp
repnz
icebp
fsub
xchg
out
jmp
ret
out
mov
in
in
cmc
call
rcr
cmp
roll
filds
fnstsw
iret
out
test
lret
cli
int
in
sub
cmp
test
aad
cli
into
call
cmc
rcl
cli
in
cmp
in
out
loopne
in
out
ffree
jecxz
fadds
enter
fmulp
aam
out
icebp
ss
clc
cmp
in
test
mov
fmull
repnz
hlt
fnstcw
leave
repnz
fsubrp
call
mov
into
enter
fcomip
lret
cmp
aam
xor
xchg
adcb
repnz
rol
lret
cmp
enter
cmp
std
rcl
shl
xchg
addl
into
mov
xor
xlat
xor
fsubr
cmp
loop
inc
fcomp
cld
cld
fdivr
xchg
pushl
cld
lock
sar
xlat
out
sub
sti
loope
lret
mov
rcl
test
jmp
shll
leave
rol
clc
out
addl
fists
inc
fsub
stc
in
jmp
into
add
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
aaa
fsincos
sti
ret
cmp
test
jecxz
fcmovne
in
in
out
adc
xchg
xor
in
int3
rcr
cld
repz
rol
loopne
add
repnz
loope
mov
loop
iret
int
ret
cmc
sarb
int3
lret
add
clc
repz
xlat
jecxz
icebp
cmp
aad
out
and
in
out
hlt
xor
icebp
out
fadd
repz
xor
xchg
fiadds
out
iret
sub
loop
not
aam
cmp
fldlg2
loop
shl
ret
mov
mov
enter
int3
loope
jmp
out
sar
ss
iret
aad
repnz
loop
repnz
ret
test
int
out
test
rcl
clc
xor
in
cmp
xlat
add
test
clc
mov
clc
testl
vpsubq
aad
int
fprem1
rcl
ret
clc
or
int
in
out
cmc
int
leave
in
ror
aam
testl
fmulp
jmp
jecxz
mov
in
call
hlt
xlat
sti
out
std
fucom
cmp
cmc
stc
fdiv
cmp
movb
loopne
and
out
out
xor
aad
fcmovnb
sar
enter
flds
out
mov
out
das
iret
ret
out
sti
cmp
aam
repnz
aas
inc
loop
cld
out
cld
test
mov
loop
in
enter
hlt
xor
fiaddl
fcmovnbe
vpaddw
jecxz
lret
std
out
ret
in
in
sti
cld
lret
fnsave
icebp
in
in
cmp
ljmp
lret
icebp
sti
mov
ss
iret
lock
cmp
jmp
cmp
ds
enter
in
in
fcmovu
call
in
in
mov
aas
stc
out
add
icebp
out
adc
std
out
in
icebp
mov
jecxz
fcmovu
int3
bnd
xchg
fsub
cmp
ret
mov
jmp
int3
int3
test
shl
cmc
fdivrs
xor
testb
stc
fdivrl
testl
jecxz
shl
in
clc
int
into
fsub
out
sti
fstp
enter
int3
loop
int
mov
out
aam
cmc
call
fcmovbe
xchg
repz
incl
int3
lock
divl
in
lret
cmp
rcr
repnz
cld
xlat
aad
fcomp
in
test
xchg
into
ss
xor
mov
fcomi
leave
cmp
incl
rcr
out
test
adc
into
xchg
repnz
stc
jmp
cmp
std
call
ror
hlt
loopne
les
inc
rcl
std
fdiv
in
xor
sub
in
hlt
int3
ds
cld
fdivrp
xchg
out
ret
movl
loope
loope
stc
into
cli
aaa
int
cmp
shl
sti
xlat
shl
aam
faddp
fsubr
lret
in
test
out
ficoms
shl
fdivp
rcr
cmc
loopne
rol
cmc
sbb
jecxz
faddp
xor
mov
mov
clc
out
in
out
das
ss
icebp
ds
out
call
mov
in
int3
int
jmp
mov
idiv
cmp
out
divl
hlt
xlat
int
jecxz
ret
std
enter
mov
fldz
lea
xor
leave
enter
cmp
aas
fmul
xchg
mov
loopne
test
xchg
lret
jmp
repz
div
aaa
fidivrl
stc
mul
fcmovb
stc
ret
int3
test
fucomip
mov
loope
mov
cs
bnd
loop
fyl2x
in
test
ret
ljmp
flds
lret
jecxz
mov
lock
std
fiadds
repz
jmp
xor
sar
into
enter
out
loop
stc
fsubp
rcr
mov
xchg
adc
rcl
xor
std
sarb
sarb
rol
xchg
jecxz
in
jmp
jecxz
xchg
test
loopne
xor
call
iret
shr
fchs
std
out
cmc
orb
jmp
nop
repnz
hlt
icebp
fdivs
cld
xlat
repz
fistpll
lret
loope
ds
loope
in
test
in
xchg
lea
leave
ss
fsubr
aad
cmc
in
cli
repnz
loope
mov
lret
repz
divb
in
cmp
aad
cmp
aam
aad
in
loope
loop
icebp
push
shr
icebp
shl
rol
cld
in
clc
cmp
into
cmp
cmpb
loopne
mov
repz
int3
cli
cld
mov
lea
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
ljmp
jle
ljmp
xor
int3
rcl
sub
cld
out
ret
call
mov
roll
shl
not
xlat
jmp
in
aas
ljmp
icebp
ror
leave
test
lret
jecxz
in
fisttpl
cmp
icebp
test
clc
cmp
ds
cld
cli
in
xchg
stc
in
sti
in
rclb
into
lock
cmp
repnz
aaa
lret
cmp
stc
repz
repz
sti
xchg
call
out
out
sar
jmp
fnop
adc
out
ljmp
out
into
lock
out
aaa
cmp
out
leave
jecxz
jecxz
movb
fisttpll
out
iret
fmulp
in
in
repz
xlat
fidivrl
testb
fmul
fucomi
out
into
lret
clc
neg
fucomp
loopne
rcl
repnz
repz
ds
fcmovnu
incl
into
xchg
mov
ljmp
shl
fsub
out
jecxz
mov
enter
lret
loop
xor
jecxz
lock
std
cmp
repnz
addl
into
lock
jmp
lock
fiaddl
rcl
icebp
test
in
std
lret
jmp
xlat
call
aas
jecxz
loop
aad
mov
sub
int3
loopne
ljmp
fmul
cmc
xor
rcr
and
div
loopne
out
cmp
lock
in
stc
out
in
repnz
test
ds
into
mul
cld
mul
cmc
mov
out
jecxz
xchg
xchg
ret
iret
xor
out
cmp
rcl
out
cld
ret
in
leave
std
iret
int
ficoml
loop
int3
xor
rcr
fdivr
sar
stc
rcr
fcomp
fcmove
jecxz
lock
test
xchg
jmp
ffreep
clc
fcmovu
shr
ds
out
clc
loop
cmp
mov
test
out
stc
out
lret
xlat
aam
repnz
iret
cli
aam
cmp
loope
stc
lock
fucomip
mov
jmp
not
cmp
or
repnz
cmc
leave
loop
fiaddl
std
jecxz
sarl
aaa
fcomp
mul
ds
fdiv
loop
fdivrp
in
hlt
mov
fsubp
int
into
std
xchg
call
enter
repz
jmp
clc
rcl
cmp
out
int3
out
icebp
int
call
int3
xor
in
fdivrl
loope
clc
std
out
stc
mov
mov
mov
cmp
out
fcomp
in
lock
faddp
cld
sarb
icebp
dec
fcomp
test
std
cmp
out
hlt
out
repnz
lret
sarl
fcom
sti
stc
xchg
call
sti
mov
xor
in
repnz
fldz
aas
cmp
cld
jecxz
shr
faddp
hlt
in
mov
int3
test
call
ss
in
fcmovu
into
aad
out
jecxz
cld
jmp
loope
mov
lock
hlt
cmp
rcl
fmulp
jecxz
push
loop
mov
loope
test
loope
in
xchg
xor
jecxz
cmp
xlat
fcom
int
int
test
out
in
fcomp
cmp
fmulp
xlat
into
out
ss
not
aam
std
out
aas
mov
ret
xlat
loop
mov
int3
in
jecxz
stc
in
enter
ljmp
div
mov
add
addb
xlat
lock
out
cmp
lret
std
not
addb
loop
cld
cli
int
call
aaa
sar
cmc
hlt
into
shr
sti
out
cmp
xchg
mov
in
in
repnz
int3
int3
enter
fstpt
cmc
idivl
icebp
out
ret
fucomi
leave
call
out
repz
ret
aad
in
xor
in
iret
lock
stc
fldl
cli
xlat
out
out
into
leave
repz
ljmp
std
out
hlt
cmp
mul
std
cld
not
test
loope
rolb
repz
jecxz
std
aad
loopne
in
out
ds
stc
out
add
out
fucomp
push
xchg
fsub
enter
lret
cli
xor
xlat
rorb
mov
out
repnz
fists
in
cmp
xor
out
loope
cli
jmp
shr
sti
ffree
neg
loope
and
icebp
jmp
xor
fdivr
fucom
rcr
test
stc
loope
cmc
ljmp
mov
push
jmp
ret
rcl
aam
ret
sarl
insb
repz
sarb
add
add
ror
in
loope
fimull
loope
icebp
ss
fcmovne
int3
clc
xorl
xlat
mov
mov
xchg
or
cmp
in
test
fcmovu
mov
out
out
shl
xchg
mov
lret
out
cmp
sti
icebp
ret
lock
fisttps
xchg
lock
out
stc
jmp
xor
ds
jmp
hlt
loopne
test
fiadds
repz
out
cmp
sarl
sti
aaa
fisttpl
out
mov
in
out
call
ljmp
std
test
loopne
in
mov
aad
ljmp
rolb
loopne
test
in
incb
mov
fsubr
cmp
test
int
in
in
cmc
loope
ret
in
jmp
into
enter
repz
out
out
xor
cmp
dec
and
cmc
fstp
idiv
in
fsubr
std
xchg
jmp
aaa
enter
sti
rol
sar
cmp
clc
decb
into
mov
repnz
lock
iret
aam
xlat
ror
loopne
aas
int3
rcl
cld
sarl
enter
orl
in
in
ret
sti
xor
loope
cmp
aad
cmp
or
mov
hlt
xchg
ror
aad
sti
cmp
cli
cmc
lds
aad
orb
int3
mov
in
addb
lock
ror
loopne
and
into
cmc
sti
aas
fucom
cmc
enter
xchg
cld
xchg
xchg
loop
repz
xor
cmp
fprem
inc
lock
mov
xchg
shrl
xor
in
loopne
ret
cmc
cld
cld
cli
in
fsubr
in
cli
enter
xchg
xchg
xor
lock
out
call
aad
fcmovnu
leave
std
xor
loopne
cld
ljmp
rcr
cli
cld
cli
movl
fdiv
addb
test
lock
ret
xlat
repz
fsubr
shl
out
rcr
xchg
aam
adc
xlat
mov
in
repnz
xor
ret
fdiv
testl
fsubrp
mov
test
loop
int3
jecxz
out
rcr
xor
repnz
fdiv
xor
cmp
stc
incb
int
loope
shl
aam
mov
lock
ds
loop
xlat
ret
rol
loop
mov
fcmovnb
mov
lret
icebp
in
fmul
enter
leave
cmp
stc
iret
test
rcl
cmp
testb
incl
call
cmp
dec
in
lret
faddl
mov
fld
clc
out
nop
incb
hlt
jmp
out
ss
aad
rcr
lock
cmc
xlat
loopne
sti
cli
loop
aam
xchg
out
fcmove
and
repz
das
cmc
aas
xor
into
hlt
cli
rcl
sbb
clc
lret
mov
out
lock
ss
cmp
fcomi
xlat
sar
xor
out
cmc
and
iret
stc
adc
enter
call
lock
repnz
ds
fstp
cli
jmp
ljmp
lock
int
cli
fmul
shl
lret
fnstcw
out
jmp
test
sti
loopne
les
fnstenv
iret
sti
fst
aam
aad
into
fdivr
icebp
out
roll
sti
xchg
in
std
incl
out
lret
test
loop
rol
loop
aad
test
mov
int3
fmulp
iret
out
out
ret
shr
aaa
xor
faddl
jecxz
cmp
mov
fiadds
cli
idiv
cmp
neg
lret
xlat
stc
shl
aad
out
fmuls
jmp
fucomip
in
xor
in
sar
aas
xor
sar
aad
jmp
nop
dec
test
int
cmp
cli
cli
cmp
cmp
in
aas
fcom
neg
fdivrl
or
mov
leave
sarb
faddl
loope
mov
mov
into
xchg
in
jmp
lock
das
das
lret
fdivs
iret
fcom
test
adc
jmp
test
notb
lret
lds
sar
leave
cmp
cli
sbb
cli
div
mov
test
icebp
lock
xchg
shr
shll
lock
icebp
cmp
add
jmp
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
mov
ret
add
add
neg
cmp
repnz
ljmp
fcomi
xchg
xchg
shlb
cmc
jmp
shr
sti
cmp
shl
loop
jmp
repnz
inc
int3
jecxz
adcb
aam
loope
xor
hlt
cmp
ds
aam
test
cmp
out
call
cmp
fnstsw
shl
repz
test
out
ret
leave
test
loope
in
in
fbstp
hlt
cmc
lock
std
ret
mov
cli
orl
xor
cmp
repnz
aam
ret
aam
fadd
xchg
xchg
out
xor
enter
fidivrl
cmp
rcl
clc
jecxz
xchg
fildl
ljmp
cs
xor
in
ds
ss
imul
int
xlat
repnz
jmp
mov
mov
into
xor
out
into
lret
loopne
in
cmp
cmp
out
loop
jmp
ljmp
into
and
jecxz
std
in
fnclex
mov
out
lret
fisttpl
int3
xor
repnz
call
repnz
xlat
fucom
rcl
jmp
mov
in
in
out
leave
das
xor
xor
leave
aam
cmp
jecxz
rol
jmp
loop
aam
loop
out
aad
fidivs
lret
in
fcmovnbe
filds
aas
idiv
rorb
enter
cmp
int
jmp
fadds
xchg
fcmovnu
mov
fimuls
addb
sub
repz
rolb
cld
decl
xchg
xchg
fiadds
cmp
aad
repnz
sar
int
iret
rolb
fisttpll
fucomi
fstl
xor
jmp
aaa
into
ljmp
fcmovnb
aad
ljmp
mov
stc
cli
sti
cmp
out
xor
fucomip
int
xorb
in
jmp
out
in
sti
xchg
sub
fcmovbe
stc
clc
lret
in
hlt
rol
test
xchg
sti
jmp
lock
repnz
in
fcmove
ss
iret
iret
in
clc
fldl
add
ljmp
in
into
fidivrl
sti
cmp
jecxz
fnstcw
icebp
repnz
aam
int
out
mov
mov
xlat
not
fxch
loopne
aad
repz
aas
repz
incb
int
lret
loop
call
icebp
xor
ffree
in
ds
loope
test
xchg
int3
decl
in
xor
repnz
fadd
xlat
jecxz
decb
repz
into
in
cli
ror
rcl
loopne
cli
clc
cmc
in
ret
fcmovu
cli
test
lret
fucomp
into
loope
cmp
cld
idivl
shl
cmp
and
lds
out
jecxz
ljmp
std
stc
xor
cmc
xlat
idivl
fcomip
xchg
fmulp
xchg
idiv
lret
icebp
xor
jmp
rolb
clc
shl
stc
mov
loope
jmp
cli
vmovntdq
icebp
aas
clc
clc
int3
addl
cmc
fisttpl
shl
fbstp
xor
loop
cmp
cmp
out
div
fucomi
cli
sbb
loopne
jecxz
fiadds
fucomip
iret
xor
lret
fnstsw
idivb
loop
imul
xchg
cld
mov
mov
fisttpll
fcom
hlt
std
sar
cmp
test
icebp
loop
fisttps
out
in
xorb
int
int
in
repnz
loop
filds
lret
jmp
std
test
sti
nop
sbb
not
out
fmulp
cmc
in
out
xlat
xlat
testb
nop
leave
fcoml
test
lock
out
cmp
int3
cmp
fdivrp
ftst
fdivr
loopne
vaddsubps
std
fsubp
jecxz
lock
fsub
xor
cmc
dec
int3
sar
test
mov
fsub
fadds
mov
call
xchg
repnz
int
xlat
std
ds
aas
xor
out
mov
cmp
xchg
filds
out
lock
shll
hlt
sar
loopne
rorl
mov
ss
clc
cmp
icebp
cmp
shl
clc
aad
lds
lock
loopne
into
aam
inc
in
mov
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
in
jle
add
add
sub
cmp
cli
cmp
loope
out
stc
ljmp
std
fsubrp
in
repz
f2xm1
cmp
repz
sti
clc
cmp
ret
fimuls
xor
lret
repnz
jmp
and
repz
in
jmp
sti
cli
loopne
fsub
test
out
aaa
out
out
sti
xor
rcr
iret
jecxz
out
rcr
in
cli
neg
and
cli
leave
mov
xchg
repz
cmp
lret
leave
sti
enter
sarb
repz
mov
filds
mov
xor
loop
shl
xlat
cld
enter
cmc
fdiv
fabs
rcl
addb
mov
in
lock
xchg
loopne
leave
cmp
aad
ds
fcmovnu
roll
cmc
aad
or
out
iret
int
in
out
repnz
repnz
divb
lock
loop
rol
sar
ror
fimull
lea
loope
rol
cmp
into
fldlg2
lret
jmp
out
cmc
test
repz
out
test
nop
loop
hlt
aaa
sub
clc
into
icebp
not
xor
out
cmp
rol
nop
test
xchg
out
hlt
xchg
rcl
lret
lret
out
clc
lret
aas
test
in
cli
leave
fisttps
enter
fsubrp
enter
cli
cmp
cmp
clc
ror
cmp
test
sub
cmc
mov
loopne
ret
repnz
aaa
xor
aas
cmp
test
fcomip
ret
mov
lret
mov
loope
jecxz
shl
idivb
icebp
sar
clc
lock
ds
cmc
sub
mov
aam
faddp
out
sti
xchg
cld
fcomi
ror
xor
jmp
std
xor
ret
lds
loope
call
repz
ss
leave
sar
aad
int
loop
rcr
shl
fdiv
aam
leave
leave
and
test
rcl
adc
mul
icebp
xlat
leave
leave
xor
fucomp
cmp
aad
mov
sti
ret
out
fsubr
sti
lds
xor
leave
cld
lret
xor
loop
xchg
ret
aam
or
out
loope
in
repz
repz
imul
out
into
aam
fld
ret
in
out
out
lret
fnclex
int
iret
xlat
aam
cmc
aad
into
lock
loopne
out
stc
sti
in
ffreep
in
stc
call
xor
loope
out
in
into
std
fadd
rcl
fcmovne
aas
ftst
int3
clc
fmull
shl
rcl
in
hlt
in
cmc
repnz
sar
mul
ror
cmp
jecxz
enter
sbb
xchg
iret
int
ret
fnstcw
xor
in
inc
enter
decb
test
mul
xor
repnz
int3
rcr
clc
hlt
loopne
clc
cmc
les
mov
in
in
aam
jmp
cmp
out
rcr
fmul
rcr
rcl
shl
in
std
xabort
clc
jmp
test
out
loop
xor
fstp
push
rcl
loopne
test
fcmovb
orl
shr
leave
shr
fistpll
xor
rorl
mov
fcmove
incb
in
icebp
lret
lock
clc
rcl
fdivrp
xor
cld
in
iret
sti
ficoms
stc
cli
rcl
cmp
fcmovnbe
lret
sarl
lock
idiv
ror
lret
xchg
out
out
in
nop
mov
imul
rcl
repz
cmp
in
rcr
out
test
enter
mov
xor
in
out
fcmovu
iret
fcom
cmc
sti
cmpl
addb
into
out
rclb
fdivs
ret
cli
into
cmp
stc
test
mov
movl
dec
in
shl
ror
jmp
out
repz
shl
out
fiaddl
in
repz
xor
out
divb
iret
lret
lret
aas
cmp
fnstsw
iret
fsubr
xchg
ljmp
test
or
in
out
cmp
ljmp
add
in
stc
neg
nop
lret
std
nop
not
xor
in
out
enter
cmp
sti
mul
hlt
loop
idivl
mov
iret
ret
ss
cmc
xor
shl
roll
cli
testb
test
rcl
xor
std
cmp
fcmovnb
test
sti
jmp
nop
nop
cld
mov
xor
int3
sub
int3
call
ljmp
out
jmp
inc
or
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
jbe
adcb
add
add
cli
loop
incl
out
leave
hlt
fsqrt
lret
loop
stc
cli
cmp
xchg
mov
leave
shlb
fcmovu
in
hlt
ljmp
fcomp
loop
lret
mov
fildl
rol
ret
hlt
cmc
shl
cmp
xchg
out
lock
cmp
call
in
cli
rcl
fcomp
call
out
iret
into
repnz
dec
call
loopne
xchg
jecxz
aaa
lock
cli
faddl
div
hlt
out
sti
std
std
in
mov
fucom
nop
fstl
lret
cmp
out
cli
out
ret
cmp
ffree
vcmpss
loope
sub
fstl
xor
ljmp
aas
aam
fidivrl
fucomi
clc
clc
repnz
repnz
iret
nop
in
xor
int3
jmp
sti
xlat
cmp
lret
ds
out
xchg
rorl
xlat
fcmove
cld
mov
out
ss
fidivs
hlt
in
fcmovnu
out
ror
xchg
leave
hlt
mov
int
rcll
stc
xor
xor
hlt
fucom
cmp
xchg
addb
and
rolb
int3
int
ss
aas
cld
adc
loope
shr
fcmovu
in
mov
or
jecxz
xchg
xorl
lret
lret
int
out
loope
into
in
mov
or
fcomip
xchg
fdiv
shl
cmp
aam
int
sarl
aaa
aaa
cmp
cmp
xor
ret
vpmulhuw
call
clc
hlt
sarl
aaa
in
dec
jecxz,pt
addl
jecxz
in
xchg
fdivr
out
jecxz
fdiv
in
repnz
cmc
xor
cli
fcmovu
xchg
mov
mov
mov
xor
loop
out
aaa
fdivrs
cmp
icebp
fstp
loope
mov
leave
jmp
fucom
out
int3
int
jecxz,pn
xor
aas
cld
jmp
icebp
ds
in
fldln2
sar
loope
lock
int
cmp
rcl
cld
test
rcr
filds
test
xchg
shrb
jecxz
aaa
repz
std
cmp
sbb
xlat
aad
fld
test
lea
out
fildll
out
ss
cmp
int3
out
loopne
cmp
ret
fnstcw
cmp
stc
in
lret
xchg
rorb
lds
fdivrp
rolb
les
fisttpl
mov
das
das
lret
int3
repz
cmp
add
clc
xor
jmp
mov
jmp
rcl
cmc
das
xor
xlat
ljmp
sti
cli
idiv
test
clc
movb
mov
iret
ss
cmp
out
fsubr
loopne
rcl
fdivr
shr
jmp
int3
in
ljmp
call
repz
fsub
lock
repz
jmp
mov
out
fisttpl
shrl
ss
fmul
ds
add
fsubr
fdivp
fcmovnu
loope
in
stc
lret
call
cmp
stc
repnz
cld
loopne
in
jmp
testl
leave
lret
out
cmp
aad
aas
cli
int3
sti
int
orb
fcmovnu
mov
mov
int3
xlat
stc
fxtract
fst
in
clc
fdivp
shl
ret
repnz
shl
jecxz
cld
mov
repz
out
cmc
out
repz
xor
aas
leave
cmp
ret
push
in
fisttpl
mov
xor
cmc
lret
repz
std
cmp
cld
jecxz
rcr
loope
std
in
mov
test
lock
sbb
xor
aaa
hlt
enter
repz
int
cli
test
fisttps
sti
in
in
into
aad
loop
loop
idivb
hlt
lret
in
test
out
fdivrl
aad
aad
add
loop
lock
sar
shl
in
rcl
cmp
sub
xor
ffreep
shr
xlat
stc
adc
add
mov
addl
sti
xor
in
in
jmp
ror
in
clc
out
sar
aad
idiv
lret
clc
lock
xchg
repz
ss
xor
shr
ds
xchg
rcl
fimull
leave
stc
loope
shl
jmp
fadd
xor
lds
std
stc
cmp
imul
mov
mov
int3
jmp
fxch
mul
lret
sti
in
fdivr
cmc
mul
test
jmp
xchg
int
in
jecxz
ljmp
mov
pop
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
inc
mov
jle
add
rol
mul
sti
mov
ljmp
lret
out
rcl
lret
ror
sarb
lds
cmc
out
fucom
cli
into
loope
int
icebp
xlat
lock
test
loop
int
stc
xchg
fst
in
fdivr
rol
xchg
shll
cmp
idivb
xor
cmp
fnstcw
rolb
xlat
fsub
xchg
in
lock
loope
les
ljmp
cmp
shl
xchg
out
sar
fcmove
loopne
jmp
rcr
int
fmul
loopne
repz
mov
ret
std
xchg
lea
into
fstpt
std
sar
rol
out
hlt
ret
mov
out
ljmp
nop
ret
shr
imul
xor
clc
fsubrp
cmc
loope
ret
fdivr
in
lds
int3
xchg
in
jmp
jmp
call
shl
sti
fdivrs
stc
jecxz
mov
mov
lret
decb
lret
fdivl
shl
loopne
shl
movb
mov
xchg
aaa
ljmp
ds
ret
ret
cmp
xchg
call
out
enter
leave
lret
cli
aam
stc
ds
cli
in
jecxz
fiadds
sti
jmp
fcoml
test
jecxz
in
int3
aad
lock
cmp
lret
neg
jecxz
std
leave
ret
test
cmc
nop
in
xlat
vpsrlq
clc
enter
std
fidivrl
cmc
ds
loope
ds
fucom
int
jmp
ljmp
hlt
repnz
aas
aad
lock
cld
loope
mov
leave
test
addb
ror
ret
fcmovu
cli
idivl
in
cmc
sar
loopne
leave
and
mov
nop
mov
xor
jmp
xlat
imul
stc
cmpl
iret
call
hlt
in
jecxz
rorl
icebp
in
jecxz
leave
in
fnop
fstpt
cld
ret
test
rolb
jmp
lock
out
sti
cmp
aad
cmp
repnz
cmc
sti
loopne
lret
in
out
aad
sar
enter
aaa
ljmp
rol
mov
addl
loopne
loop
xchg
lock
in
lds
fdivrs
into
aas
and
incl
orb
shr
rcl
cli
cmp
icebp
shr
dec
out
aad
int
fsub
fucomip
into
lock
out
xor
sar
sti
ret
int
cli
ljmp
addl
into
ror
xor
lret
repz
lock
sar
out
repz
out
orl
xchg
not
jecxz
in
lds
out
ret
std
aaa
test
cld
aad
jmp
mov
xchg
out
aam
loop
out
shlb
aam
int
cmp
shl
out
and
shl
xchg
icebp
jmp
into
ret
lock
cli
stc
cli
repz
lock
xlat
enter
fildl
and
in
cmp
shll
fcmovbe
mov
stc
xchg
sbb
nop
fstp
jecxz
lock
shl
fsubr
mul
rcl
aaa
loopne
sar
in
icebp
fcomip
lret
incb
iret
nop
into
bnd
jmp
in
fcos
rcl
fldl
jecxz
jmp
out
lret
shl
cs
lret
aad
rcl
cmc
rcr
fstp
loop
enter
test
jmp
iret
nop
call
shl
ret
shlb
fmul
aaa
fdivr
xor
addl
jecxz
out
nop
test
in
lret
cmp
repz
cmp
test
testl
loopne
lea
in
in
out
ss
call
hlt
roll
jmp
sti
xor
enter
xlat
cmp
repz
iret
loope
in
rcl
fsqrt
jecxz
inc
in
int
loop
orl
aaa
cli
int3
sbb
add
jecxz
xlat
loop
mov
iret
repz
xor
jecxz
xor
cmp
xlat
jecxz
loop
loop
mov
fdivrp
popl
mov
out
in
out
xor
in
out
fdivr
fst
stc
fsubp
mov
enter
in
sar
sub
in
xchg
lock
call
jmp
call
in
fcmovnbe
ret
lret
jmp
fcoml
xlat
loop
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
xor
add
int3
int3
aam
cmc
repnz
out
icebp
rcr
shlb
out
ds
div
in
fcmovnu
adcl
xor
in
sar
cmp
cmp
loopne
loope
fincstp
les
iret
mov
repz
xor
rcl
fdivrp
repnz
cmp
shr
lock
mov
std
xchg
xchg
mov
lret
cmc
icebp
ds
hlt
aas
clc
ret
jmp
fdivrs
div
in
loopne
hlt
shl
hlt
shrb
shl
in
fsubrp
idivl
call
lock
out
ljmp
mov
lock
shlb
enter
cmc
rcl
loope
std
dec
xchg
mov
call
out
xchg
test
loopne
in
fcmovu
jmp
ljmp
cmp
int3
mov
xchg
fmulp
in
cli
call
out
cli
fdivrs
rcl
repnz
xchg
fcompp
jmp
in
xchg
ror
xor
icebp
jmp
stc
cmp
aas
cmp
loopne
leave
ffreep
loopne
in
lret
xchg
int3
fdivs
ss
not
xor
cld
aad
ds
ljmp
cmp
in
xchg
mov
cmc
lret
cmp
cmp
incb
ret
ret
std
jmp
ljmp
xor
cmp
xor
enter
into
int
loopne
rcl
loope
ret
in
mov
sti
out
in
les
hlt
lret
ss
cmp
in
clc
rolb
mov
fsubr
repz
rorb
hlt
in
fdivrs
jmp
lock
aam
stc
mov
test
into
loopne
test
out
ljmp
icebp
fmul
sti
leave
iret
divb
ret
cmp
clc
iret
lret
jmp
cmp
xor
cmc
cmp
aaa
shl
std
sti
stc
cmp
fucom
fucomi
and
jmp
xor
ljmp
std
adc
loop
fsub
out
leave
leave
fcomip
fcmovbe
in
cmp
jmp
rolb
repz
jmp
fsub
mov
out
mov
sub
repz
in
jmp
cmc
rcr
inc
jmp
mov
fcoms
dec
aad
jmp
ljmp
clc
sarb
out
xchg
mov
mov
mov
mov
aad
enter
div
cmp
icebp
std
xchg
rol
mov
mov
int
lock
in
into
in
std
cld
fadd
sbb
out
out
xchg
mov
xchg
out
jmp
xlat
aaa
neg
fcmovbe
rcr
ret
repnz
repnz
int3
xchg
std
int
das
repz
xlat
shll
shlb
int
incl
mov
mov
out
loop
in
lock
jmp
shr
cmp
loop
out
in
jecxz
cmp
xchg
dec
ljmp
out
out
cmp
das
call
fcomp
ret
rolb
fdecstp
loopne
push
out
jmp
icebp
in
shlb
not
in
cmp
shl
out
xor
enter
jecxz
loopne
jmp
int
std
rcr
cmp
aad
clc
mov
test
das
int
jmp
jmp
idiv
fld
std
clc
neg
shr
in
std
sub
icebp
into
fmull
idivb
cmp
ds
sarl
mov
sti
enter
ror
lret
mov
call
fcmovbe
cmp
fnop
out
add
test
enter
idiv
jecxz
rorl
enter
int
cmp
aam
cmc
fidivrs
ret
lret
mov
jmp
xchg
test
lock
shr
repz
lock
rcr
lock
stc
iret
hlt
out
xlat
dec
and
repnz
ret
jmp
ror
shl
hlt
jmp
xchg
ret
jecxz
in
mov
icebp
ljmp
lock
cli
cld
aas
fnstsw
fcmovb
testb
jecxz
loop
in
xor
cmp
xor
repz
xchg
loope
leave
mov
shl
enter
xor
in
repnz
fdiv
cmp
xor
in
enter
out
call
lret
test
clc
lock
fiaddl
js
add
inc
or
inc
lock
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
cmp
jle
add
sar
mov
jmp
and
int
fdivp
iret
in
lret
lret
fmul
fsub
mul
and
test
repnz
mov
loope
imul
fmul
cmc
test
test
sti
lret
cld
enter
iret
int3
in
cli
lock
in
ror
ss
faddp
xchg
xchg
out
xchg
adcb
in
fdiv
fcmovbe
in
out
cmc
repnz
hlt
ret
cli
sub
ror
mov
enter
fucomp
lret
cmp
int
sar
xlat
repz
fsubp
jecxz
loop
mov
xchg
inc
out
call
cmc
call
out
fimull
cmp
leave
lds
fidivl
out
leave
rcl
jmp
ljmp
fisttpl
std
fldl
test
xor
icebp
lock
aam
out
jmp
out
fidivs
hlt
out
mov
idiv
imul
lret
nop
orl
jmp
lock
fiaddl
rolb
fcomi
sti
out
clc
out
std
jecxz
xchg
xor
into
leave
clc
cmc
neg
leave
fst
aas
loop
aaa
fld
clc
loope
test
cli
imul
fucom
incl
clc
ret
sar
fxtract
xlat
xor
rcl
aas
rcr
test
lret
mov
mov
cmp
sub
cmp
jmp
out
orl
in
call
in
das
aad
ss
cmp
std
lret
repnz
aad
int
loop
clc
jecxz
decl
xchg
ss
fidivrl
jmp
adc
fiadds
mov
out
into
aad
jmp
sti
sub
cmp
out
lret
cmp
xchg
test
int
out
repnz
in
cmc
xchg
das
int3
shl
ss
sar
shr
in
fdivr
cmp
loope
not
cli
jmp
mov
xor
sti
out
in
int3
int
aam
iret
stc
test
ret
mov
into
in
in
ljmp
xor
lock
cmp
test
addb
fmulp
loopne
incb
aaa
out
in
ror
jmp
sti
fucomp
xchg
xchg
sti
lret
cld
out
cld
std
nop
xchg
mov
in
ljmp
cld
xlat
rolb
mov
in
fsub
dec
lock
jmp
neg
out
ss
cmp
ret
out
fcomip
xchg
mov
ljmp
fnstcw
cmp
iret
rorl
loopne
mov
repnz
mov
into
shl
std
fnstsw
cli
shl
fadds
fcomi
testb
out
out
xchg
mov
clc
stc
int
out
xor
std
test
fadd
stc
movb
iret
test
nop
sub
hlt
xor
cmp
aam
rol
sar
sar
fstp
lret
iret
loop
jmp
in
ss
aaa
aad
testl
sub
fimuls
in
ss
xor
fcmovne
int3
test
aas
testb
iret
xchg
shr
xchg
out
rcl
rcr
aad
loopne
fcmovnb
jecxz
in
call
int3
lret
fmulp
loope
test
stc
out
hlt
fidivl
fsubr
loope
aas
iret
ret
jecxz
jecxz
aam
fdivr
jmp
loope
xor
les
xor
in
ror
repnz
aad
fcomi
aam
cld
cli
aad
out
xchg
aam
xor
repnz
in
loopne
ljmp
icebp
cmpb
mov
add
in
fcmove
imul
fmul
hlt
rcl
xor
testl
mov
lret
fdivl
clc
xlat
out
loopne
leave
test
call
loop
lock
in
in
std
shl
fsincos
rcl
loopne
in
jecxz
cmp
mov
xlat
xor
cs
ds
call
stc
adc
fstp
sti
cmp
fsubr
xchg
shl
xchg
aad
leave
leave
loop
out
jecxz
xlat
in
in
orl
orl
fcmovne
jmp
clc
aas
repz
out
cmp
lret
out
fcmovnb
inc
loopne
test
or
adc
mov
mov
jmp
lret
ror
rcr
lret
fistl
in
lods
pop
filds
jle
add
aad
in
loop
in
enter
jmp
sarl
lock
cli
repnz
in
fiaddl
adcb
idiv
repz
cmp
int
repnz
ret
stc
jmp
addl
out
jecxz
xor
icebp
not
in
sar
into
xlat
sbb
cmp
mov
addl
aaa
das
ret
lret
clc
fstp
out
shl
fprem
cmpb
aam
loop
mov
mov
fbstp
repnz
fcmove
out
fst
int
aaa
loopne
filds
idiv
cli
xchg
xchg
jmp
icebp
repnz
lret
out
xlat
fucomp
fcmove
cmpl
ret
xlat
icebp
test
jmp
jmp
aaa
xlat
fld
xlat
lret
clc
in
adc
rol
loope
call
cli
cld
out
hlt
ljmp
cmp
ds
cli
out
cli
out
lock
cmc
lock
loop
cli
xchg
jmp
xor
bnd
ret
ds
loope
fiadds
jmp
xor
into
sub
cli
int
fucomp
int3
xlat
icebp
cmpb
rcl
ror
test
loop
das
leave
ljmp
in
cmp
out
cmp
loope
repnz
ret
test
mov
test
mov
xor
fucompp
cli
hlt
cmp
loopne
repnz
test
stc
clc
clc
testb
mov
imul
lret
fdivr
lock
ds
ljmp
loop
mov
int
out
ljmp
cmp
rcr
std
cli
test
sar
icebp
call
cmc
sub
enter
out
xchg
mov
rcl
fcmovnbe
sti
xlat
cld
enter
test
out
and
cmc
ror
call
jecxz
mov
loopne
clc
into
out
fdivrl
cmp
cmp
stc
in
int
sarb
enter
fisttps
sub
xor
std
in
cmp
std
loopne
ss
test
in
jmp
clc
in
fcmovnu
or
hlt
loop
xlat
repnz
shll
xor
cmp
fiaddl
test
mov
fucomp
in
xchg
jecxz
cmc
out
jmp
lock
fsubr
fucomip
in
cmc
movl
sub
xlat
jmp
enter
call
out
ffree
cmpb
sti
fmull
int
and
icebp
enter
stc
ror
ss
lret
iret
aam
std
ds
out
les
ljmp
sarl
ljmp
hlt
fdivrp
repnz
aam
div
lock
sbb
jecxz
out
not
fcmovnbe
fcmovnb
loopne
decb
aam
out
fcomp
iret
lock
into
cmp
cmc
cld
fdiv
clc
mov
icebp
sub
in
cmc
ss
cmc
int
lret
hlt
mov
jmp
int3
rcr
enter
int3
ljmp
out
hlt
shl
hlt
cmp
xchg
std
clc
hlt
fdivr
lret
cmp
repz
mov
div
xor
fcmovu
rcr
jmp
jmp
sti
out
fdivr
shr
sbb
mov
ljmp
clc
cmp
into
lret
cmp
into
shl
movl
into
ror
jmp
fcmovbe
std
ror
aam
lret
cmp
repz
aad
mov
shr
jmp
into
cmc
mov
aam
jmp
out
or
ss
icebp
fidivrl
std
sub
xchg
imul
xlat
leave
ss
sarb
out
hlt
mul
ss
fndisi(8087
std
hlt
fiadds
call
loopne
ss
aaa
repnz
ss
repnz
iret
fadd
cmp
ds
in
fcmovne
fstl
imul
call
out
loop,pt
loop
loopne
fisttpl
test
jecxz
xchg
std
test
cmp
cmp
dec
imul
clc
rol
std
addl
lea
jecxz
iret
lret
sti
cmp
int3
into
lret
fdivp
fdiv
hlt
flds
incl
cmp
leave
int3
cmc
clc
into
cli
into
sarb
test
rcr
fsubp
testl
mov
hlt
ljmp
xlat
rcr
aad
test
and
flds
out
xchg
iret
out
repnz
cli
in
iret
lret
xor
jmp
enter
int
fnstenv
rcrb
stos
add
neg
fcmovbe
or
faddp
aas
clc
aam
cld
fmuls
mov
xchg
cmc
lret
cli
cli
cmp
xor
cli
fsubr
fcmove
mov
int
xchg
out
mov
aaa
leave
leave
in
lret
cld
in
ret
in
lret
std
fld
fisttpl
jmp
aam
ss
in
loop
sti
rcr
xchg
ds
mov
int
xchg
lock
test
sar
in
int
repz
int3
loop
neg
xor
clc
fstp
loope
cli
ljmp
xchg
in
shl
cmp
das
xor
jmp
fcomip
rolb
jecxz
icebp
call
shr
iret
int
cld
sti
int3
lock
rcl
out
aas
idivb
sbb
test
enter
int3
xchg
std
mov
ret
loope
call
xor
out
cld
in
ret
mov
fcomp
incl
out
decb
xor
cmp
stc
rol
fucomi
out
out
rolb
ljmp
rcr
fst
clc
fst
fsubr
mov
call
fsubr
and
aaa
jmp
cld
cmp
call
shl
stc
loop
xchg
inc
loop
repnz
lea
shl
cmp
ljmp
iret
xchg
std
out
clc
loope
mov
rorl
xor
in
repnz
fsubr
in
ds
stc
call
xchg
fcomp
call
in
repz
clc
enter
sar
cld
sar
ds
fsubp
xchg
imul
xlat
in
loopne
or
mov
sar
lret
xlat
shr
sar
aad
cmp
incb
int3
in
std
lock
not
das
repz
into
divb
lret
stc
xlat
aas
loop
cld
cmp
sti
cmp
out
testl
in
repnz
out
in
out
idivl
cmp
ret
out
fnstsw
jecxz
or
loope
loope
icebp
icebp
hlt
in
into
enter
cmp
jecxz
aad
test
in
and
sub
in
lock
std
jecxz
cmc
sarb
jmp
shr
lock
jmp
in
cli
iret
xor
repnz
call
test
lds
mov
fstl
out
fcmovbe
fsubrp
cmc
lock
out
aad
cld
call
lret
call
rorb
xor
xor
xlat
ds
aam
rol
sar
icebp
repz
test
fdivp
ret
not
into
lret
int
cmp
stc
fistpll
loop
jmp
out
addb
aam
sub
stc
icebp
divl
in
shl
repz
rol
mov
enter
lret
mov
fucomp
xchg
ljmp
std
repz
clc
cld
test
sbb
ljmp
rol
int3
shll
enter
aad
in
and
call
cld
out
icebp
jmp
iret
cld
sar
in
rcr
xlat
jmp
dec
sti
fisttps
das
ljmp
cmp
cmp
xor
stc
cli
cld
cli
loop
int3
icebp
xchg
repnz
out
xor
shl
sarb
out
sti
rcl
rcr
loop
in
jmp
fmulp
mov
leave
xchg
out
loop
out
aaa
in
shr
iret
sti
test
ds
fadds
cli
cmp
std
aam
int3
sub
aad
cld
sar
stc
aam
add
cmp
sar
fiadds
xchg
hlt
jmp
idivb
cli
fstp
loope
xlat
hlt
fdivp
std
mov
leave
hlt
icebp
ret
leave
cli
cmp
lock
xchg
rcl
test
clc
loope
rcr
call
neg
lret
sti
icebp
cli
fiadds
mov
fcmovu
fdivr
mov
in
xchg
mov
ret
call
std
repnz
jecxz
cli
cmp
clc
xchg
jmp
fmulp
std
out
in
icebp
iret
loopne
clc
repnz
rcl
cmc
in
fstp
int3
icebp
fucomip
stc
sti
aad
repz
fmull
jmp
enter
ror
into
cmp
jmp
hlt
mov
out
out
fucomi
in
into
sar
jmp
stc
into
leave
icebp
out
hlt
lret
ds
sarb
mov
sbb
jmp
ret
fmul
fcom
fdiv
jne
pop
cmc
out
xchg
add
add
xor
mov
test
sub
xor
repz
test
fcmovb
sub
rcl
testb
jmp
loop
std
loopne
sub
out
leave
std
ljmp
cmc
iret
lock
or
loop
xchg
jmp
cld
stc
enter
repnz
shl
ds
lea
xchg
sar
jmp
iret
ss
xor
fnstsw
pushl
jecxz
icebp
aas
fsub
test
fiaddl
in
mov
call
out
idivl
cmp
lds
cmc
mov
ljmp
sub
repz
enter
rcr
out
aam
test
fcomp
cmp
cld
test
out
iret
mov
repnz
loopne
call
int
jmp
rcl
ror
jmp
cli
in
loopne
xchg
cld
in
loopne
loopne
shl
cs
jmp
fcomi
cli
out
out
fcmovnu
fimuls
in
lock
in
out
imul
clc
xor
aaa
cmp
rcl
aad
aad
repnz
test
mov
ljmp
in
incb
lock
sti
lret
fadd
lret
addl
in
lret
out
fsubp
adc
aam
fcmovbe
aam
mov
iret
into
icebp
loopne
xchg
lock
in
xor
clc
out
jmp
loopne
shl
xchg
clc
in
test
test
ljmp
mul
aaa
out
out
leave
ss
aaa
repnz
in
fcmovnbe
ret
ror
call
out
into
ret
aad
cmp
into
cmp
sbb
aas
xlat
neg
shl
mov
xchg
test
shl
sti
shl
ds
xor
cmp
enter
ror
call
out
sti
mov
jmp
loop
sti
addl
fcom
iret
cmp
cmp
iret
int
cmc
ret
jecxz
jecxz
mov
in
aas
fcmovu
stc
loopne
repnz
aam
jmp
out
cmp
cmp
into
shl
aas
fnstcw
fcomip
loop
fucompp
std
cli
mov
mov
std
xchg
repz
xor
divb
neg
out
cli
div
sti
icebp
rcr
lock
repnz
mov
jecxz
int
out
out
aad
mul
stc
cmp
xor
int
loopne
rcr
loopne
icebp
hlt
mov
mov
iret
fucom
in
in
icebp
xlat
cmc
das
xlat
lret
icebp
out
neg
cmp
fnstcw
hlt
std
ret
std
test
adc
rcl
fdivp
xor
repz
int3
in
fnsave
cmpl
sub
cld
dec
lret
orb
repnz
call
loop
out
les
in
nop
icebp
mov
repnz
das
in
cmp
xlat
repz
cmp
sar
icebp
icebp
jmp
out
addl
shl
cmp
aaa
test
clc
cmp
out
out
aad
test
jmp
jmp
in
xchg
lock
repnz
cs
xlat
std
call
shl
test
ret
aad
ljmp
jecxz
in
leave
xor
into
ss
lret
in
ljmp
fxch
xchg
leave
into
in
or
test
aam
ss
icebp
into
lock
jecxz
rcr
fsubrp
out
shl
mov
lock
lret
repnz
ss
in
std
cmp
std
loopne
int
lock
in
cmc
ret
mov
in
shl
aaa
repz
out
fcmovnu
push
rcr
repnz
xchg
aam
faddl
nop
int3
loope
lret
sub
std
das
sar
fcomip
ret
cmp
loopne
fmuls
xchg
not
stc
fxch
hlt
call
cmpl
test
repz
fiadds
xchg
jmp
xchg
call
hlt
sub
xor
std
ljmp
aad
rol
out
loopne
filds
mov
aam
stc
xor
fidivrl
ljmp
std
clc
loopne
jecxz
in
lds
xchg
shrl
shl
in
fdivr
shl
iret
xor
xlat
out
fimull
int3
in
in
iret
out
xor
cli
rcr
xor
cmp
in
sar
xlat
test
call
jecxz
out
shl
clc
ljmp
aas
sarb
ds
fcomi
rcr
cld
fxch
mov
repnz
xor
or
inc
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
out
out
in
call
std
stc
out
cmc
out
mul
fucomi
out
out
out
enter
lock
in
in
sti
shl
cmp
ret
xchg
aam
sti
lret
frndint
mov
xchg
mov
imul
lret
hlt
cmp
in
xlat
fsin
repz
xlat
fsubr
lret
xlat
ljmp
xchg
loopne
int
das
lock
shl
fdivr
ljmp
out
jmp
jmp
xchg
lret
shl
xor
loope
ds
out
ds
out
loope
ljmp
loop
xor
xor
cmp
lock
fstpt
loopne
jmp
in
ret
cli
cld
cli
sti
clc
xchg
loop
shrb
mov
fstp
test
shl
into
loope
repz
leave
out
int3
xchg
cmp
fmul
call
rcl
loope
not
stc
shl
sar
xchg
lea
loop
into
sub
xor
ret
enter
repz
fdivr
repnz
lock
rol
mov
cld
into
mov
jmp
ret
stc
stc
clc
call
into
repnz
mov
fstp
lret
in
xchg
xchg
into
iret
out
cmc
xor
cmc
aam
loope
cmp
stc
std
call
mov
ror
fdivrl
out
call
sarl
call
in
fmull
into
in
fildll
out
in
jecxz
div
enter
shl
out
fnstsw
cmpb
addb
shr
out
xor
stc
bnd
xor
cld
ffreep
out
fst
cld
idiv
in
jmp
aad
fld
hlt
int
iret
aam
stc
xlat
out
shl
hlt
cmp
stc
in
loope
std
lret
xchg
xor
aam
int3
cmp
jmp
fdivr
lock
jmp
cli
test
lret
icebp
xchg
loop
int
das
xor
fdiv
cmc
rcr
aas
aas
sti
loop
aad
out
cmp
icebp
fimuls
clc
std
std
clc
shr
repnz
xlat
xchg
mov
mov
in
leave
mov
xchg
hlt
in
jecxz
cmp
xlat
iret
lret
fdiv
hlt
aad
out
loope
fsubr
in
std
mov
shrl
leave
in
fmul
into
int
hlt
test
ljmp
loopne
lret
lock
in
fmul
cmp
ljmp
rol
add
enter
dec
std
jmp
xor
xor
into
xor
cmp
into
in
xor
jecxz,pt
mov
aas
out
in
fistl
xor
out
not
hlt
aad
in
repz
cld
cmp
jecxz
hlt
addb
mov
incb
lret
cmp
lock
xchg
mov
fmul
lret
fstl
imul
das
fstpt
int
iret
jmp
jmp
cmp
cld
aam
sub
fsub
rol
xchg
sti
stc
rol
into
test
ror
loopne
xchg
xlat
mov
call
in
repnz
ret
in
icebp
repnz
into
fcmovnbe
test
test
std
mov
xchg
fnsetpm(287
xchg
xchg
hlt
icebp
iret
shl
in
fdivr
icebp
cmp
shl
div
fabs
sti
les
lock
repz
xor
shr
xor
fdiv
dec
fcmovnb
cld
incl
ljmp
repnz
notb
hlt
fucomi
shr
stc
std
loop,pt
cld
cmc
call
sti
call
lea
ror
cmp
lock
xor
cli
cli
mov
stc
lret
in
int3
cld
in
lret
xchg
loopne
shl
into
sub
hlt
cmc
ss
ret
hlt
icebp
jmp
shr
loope
xchg
into
enter
int3
ss
repnz
repz
in
aas
xlat
mov
test
lret
int3
lea
aam
cmc
rcr
iret
cmp
ds
cli
ljmp
adcl
cld
cmp
into
ret
cmp
fcmovnbe
hlt
in
int
cld
int3
cld
mov
test
int3
aaa
xor
fsubp
int
jmp
ss
lock
test
cli
xchg
lret
mov
in
roll
aam
stc
aaa
aam
cmp
aam
xlat
ds
ret
inc
hlt
ret
enter
loope
fdivr
in
sub
lret
fcomi
int3
loope
fxtract
idiv
ret
mov
sbbl
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
ljmp
jle
add
xchg
jecxz
mov
loopne
std
into
fcomi
ljmp
repz
shl
clc
stc
roll
leave
mov
aam
repz
fnstsw
xlat
loopne
lret
fcomp
loope
leave
mov
cld
call
cmc
push
aam
lret
out
sar
loopne
cmp
repz
enter
in
jmp
stc
jmp
lock
fxtract
out
in
div
jmp
imul
cld
call
aas
cmp
enter
ret
in
cld
repnz
repz
aad
cmp
cmp
cld
fcomip
hlt
clc
sarb
stc
in
ror
out
fdivrp
enter
in
int
das
icebp
xor
xor
cli
aas
int3
cld
sti
in
cld
lock
add
ret
and
fcmovb
int3
nop
int
loopne
int3
call
fcmovnbe
int
in
fcom
cld
clc
out
repnz
ljmp
mov
jmp
enter
out
out
lret
fstpt
ss
repz
loope
xchg
fmul
mov
int3
xchg
out
in
in
leave
xor
or
ret
in
mov
test
mov
fsin
loop
out
call
xor
fcmove
cmc
jmp
rolb
hlt
out
call
stc
fdivrp
loopne
call
out
ror
icebp
cmp
xlat
lock
cli
addl
xchg
into
adcl
fdivrl
sar
lock
adc
sti
lret
mov
xchg
xchg
jmp
shr
out
das
out
iret
fcomip
sbb
enter
int3
xlat
lret
icebp
jmp
shl
lock
out
cmp
icebp
fucomp
aaa
xlat
incb
loope
xchg
icebp
cld
in
fsubr
in
repnz
in
shr
lret
cmp
out
mov
repz
jecxz
out
in
test
loopne
mov
cli
divl
cmp
icebp
iret
cmp
filds
loop
xchg
in
nop
aad
shrl
shl
icebp
rcr
fdiv
xor
fcmovu
in
testl
fmul
or
iret
orl
lret
addl
aam
mov
in
mov
into
mov
out
iret
ss
lock
sarb
fidivrl
test
in
loop
xchg
test
xchg
loope
ss
xor
cmp
clc
ret
fcomi
roll
jmp
xchg
out
cmc
shl
jmp
cld
out
out
sti
cmp
leave
std
cmp
testb
decb
out
mov
out
aad
cmp
cmp
cmp
xrelease
iret
loop
call
repz
iret
clc
fidivrl
fdiv
cmc
rcl
aaa
aad
addl
fisttpll
lret
fdiv
xchg
aad
iret
aad
ljmp
ror
fidivrl
idivb
xchg
xlat
loop
cld
xchg
shr
xchg
shl
shr
rol
stc
cmp
out
hlt
out
addl
neg
test
xchg
xchg
mov
aad
cmp
loop
lret
mov
cmp
test
mov
loopne
clc
dec
std
cld
lret
divl
stc
int
int3
aaa
into
int
hlt
repz
ret
jecxz
xchg
mov
iret
xchg
ss
rol
aaa
ss
cmp
rcl
aad
loopne
rcr
rcr
sti
xchg
mov
fsub
test
mov
rcr
int
std
fdiv
loope
cmc
sti
and
test
ror
out
jmp
xor
hlt
cmp
clc
int
int
rol
ds
lret
in
test
aad
int3
clc
jmp
stc
ds
addb
call
into
out
loopne
shl
xchg
xchg
loop
call
fstpt
repnz
out
rolb
fsub
lret
mov
fsub
aam
icebp
in
fcmove
ljmp
cmp
ss
int
out
call
xchg
ss
rcr
in
std
fadds
jecxz
addb
std
out
hlt
ljmp
sarb
repnz
out
lret
xlat
xchg
jmp
out
rcl
in
fcom
jecxz
int3
call
stc
cmp
repz
cmp
out
test
in
into
aam
sub
out
in
ljmp
out
lock
mov
lret
xchg
test
xor
add
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
shll
int3
push
cmp
add
add
mov
loop
aaa
loope
fmul
fnstsw
cmp
repz
repnz
repz
in
jmp
mov
loope
cld
mov
icebp
xlat
out
iret
out
hlt
sarb
hlt
idiv
fprem
mov
mov
mov
sub
in
xlat
lret
lock
stc
rcl
test
mov
mov
cmc
lret
in
iret
aaa
lock
lock
cmp
in
std
test
rorl
hlt
iret
out
aaa
xor
cmp
rcr
clc
aad
roll
decl
int
jmp
cmp
xor
xor
cmp
cmp
repnz
inc
xlat
ffreep
call
fsubrp
xchg
mov
cmc
xchg
icebp
lock
jmp
out
repz
rcl
cmp
mov
jmp
out
fcomp
xor
ror
ror
loope
in
repz
aad
ffreep
mov
fsubr
cld
nop
sub
lret
clc
cmp
aam
lock
aad
fsub
test
test
repnz
lret
int
fninit
mov
into
in
loope
out
out
rcl
lock
out
loop
out
flds
int
fsubr
loop
in
lret
mov
jecxz
out
div
shr
cmp
repnz
hlt
fstpt
cmp
test
fiaddl
loopne
iret
out
out
cmp
aaa
xlat
lret
lret
hlt
int
cli
aam
out
xlat
mov
adcl
iret
xor
fcmovnb
idivl
sti
loop
mov
mov
enter
xchg
iret
das
fsubr
cmp
xor
enter
xlat
cmc
xorl
fadd
jmp
lret
or
ljmp
lret
call
aam
int3
int
out
imul
test
xchg
loope
out
loop
cmp
sub
not
jmp
rcr
div
fcmovbe
jmp
out
xlat
mov
out
fsubr
xor
aam
sti
xlat
lock
fsub
fsqrt
int
xor
fildl
nop
xchg
aam
xor
jmp
rol
std
std
std
out
xlat
jecxz
aam
hlt
loopne
hlt
test
sar
xchg
test
xor
fdivrl
aad
sub
loopne
shr
in
int3
in
in
int
sti
in
mul
out
out
call
cmp
cli
xlat
fiaddl
into
jmp
fld1
xchg
loop
int3
hlt
iret
leave
hlt
lock
stc
ljmp
cmp
loop
aad
idiv
int3
fsubp
lret
cmp
fcoml
loop
in
fmul
fcmovu
ds
idivb
cmp
lds
fisttpll
adcl
rcr
xor
cmp
fld
lock
out
mov
and
xor
cmp
fucomp
sbb
sar
in
test
jmp
jecxz
int3
ljmp
sar
xlat
adc
rolb
shl
in
leave
mov
int
out
xor
xlat
enter
rcr
cmp
ds
hlt
neg
fmul
movb
repz
jecxz
stc
lock
fcmovnu
into
shl
cmp
test
std
into
lret
in
repz
cli
lret
sar
xlat
jmp
int
icebp
sar
in
loope
lret
orb
divb
shlb
cmc
repz
aam
xor
hlt
test
clc
call
nop
fcmovu
xchg
icebp
call
out
stc
jmp
clc
cmp
out
fadd
jmp
loop
leave
dec
nop
xchg
mov
icebp
ljmp
enter
fnstcw
aad
jmp
leave
lea
shr
in
repz
aam
rcr
call
xchg
xor
aad
mov
in
call
loop
jmp
std
jmp
out
fildl
jmp
sub
lock
fcomip
xchg
shl
out
in
aas
out
out
loope,pt
rol
std
sar
ljmp
nop
out
nop
push
rcr
out
call
cmp
std
sub
fmuls
sti
xchg
xchg
shl
ret
call
shl
repz
shr
ret
std
fucomip
in
xchg
icebp
xchg
rorl
lret
cmp
leave
std
cld
rcr
out
out
fst
div
mov
int
in
loope
add
cmp
call
loopne
inc
fsubs
test
add
int3
rcl
ret
fldl
icebp
jno
sti
add
add
clc
cmp
jecxz
out
loop
lret
mov
mov
in
rorl
test
ss
loope
aad
ror
aam
mov
leave
mov
xlat
int3
iret
icebp
cmp
aam
fadd
sarb
out
fucom
hlt
fimull
xchg
out
cmp
fcmovne
cmp
into
aas
xor
xor
fcomi
mov
call
mov
test
jmp
loope
test
fsubr
cmp
call
lret
fucomp
loope
stc
fptan
out
cmp
fbstp
in
loop
xor
fsub
ret
leave
fsubr
in
orl
in
in
out
enter
ds
rcl
into
fiaddl
fldl
clc
int
aam
xlat
in
loopne
cld
cmp
out
cmp
sar
jecxz
test
xchg
fcos
fimuls
xor
xor
repz
out
out
testb
call
in
xchg
sub
std
sti
jmp
loope
repnz
in
push
hlt
in
les
xchg
rorb
call
int
aam
icebp
or
lds
sti
jecxz
leave
aad
jmp
cli
cld
lock
dec
ret
xor
clc
int
div
ror
shr
iret
roll
fprem1
call
int
loope
int
hlt
out
aam
hlt
shl
cld
int3
aas
addb
test
mov
mov
xchg
in
in
leave
out
jmp
cld
into
xor
cmp
ljmp
lock
div
in
int
cld
leave
rcr
xchg
ret
jmp
mov
les
mov
test
sub
ret
fcmovu
repz
in
loopne
fcomip
ds
fcmovnu
enter
clc
fstp
orb
ss
fdivrs
fsubr
std
fcmovb
cmp
std
lds
mov
xchg
xor
jmp
in
int
stc
add
fdivr
in
cli
enter
repz
or
fsincos
shlb
fcmovnbe
fnstsw
and
rcr
shr
testb
aam
hlt
clc
shr
ljmp
rol
clc
in
inc
leave
std
popl
ljmp
hlt
sti
xlat
cli
cld
clc
in
loop
stc
mov
stc
orl
loope
into
sub
sbb
sti
test
addl
test
int3
cli
loope
cld
shr
jmp
shl
aam
xorl
shl
loop
testb
xchg
int3
call
xor
stc
mov
xor
xlat
mov
in
jmp
nop
mov
cld
lret
xor
cmp
into
lock
cli
mov
mov
mov
in
jecxz
aaa
ljmp
ffree
sar
in
flds
mov
mov
in
shr
dec
aad
fcmovb
std
shl
add
jecxz
fcmovnb
in
clc
mov
lret
xchg
leave
fidivrl
in
out
jmp
sbb
aad
call
out
mov
out
fcomip
std
lock
in
cmp
aaa
fsub
aam
out
fneni(8087
vpmaddwd
icebp
fadds
out
ljmp
int3
in
in
xor
shl
ds
sti
loop
out
out
std
in
testl
repnz
shl
cmp
stc
repnz
jmp
repnz
fdiv
ffree
out
cmp
sti
out
loopne
fdiv
xor
int3
neg
ss
fdivrs
test
in
sbb
xchg
iret
xchg
mov
lret
icebp
out
ss
cmp
roll
clc
ljmp
incl
stc
xor
jmp
out
in
ds
rol
mov
lock
mov
out
loope
out
repz
xor
cmp
cld
lock
in
clc
aam
jmp
or
xchg
in
xor
in
iret
xor
cli
idivl
mov
int3
leave
stc
icebp
xchg
in
lret
mov
das
xor
lret
icebp
ffreep
filds
call
icebp
xor
xchg
shr
out
xor
fsubr
xor
shl
fdivp
lock
fcmovnu
and
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
pop
mov
xchg
addb
stos
add
xchg
mov
rcl
sub
shr
ror
idivl
fdivrl
fadds
test
leave
xor
out
lock
cmp
aad
enter
cmp
shl
rcr
call
jmp
mov
lock
out
in
loopne
aad
hlt
stc
ss
out
test
rol
cli
mov
test
icebp
xchg
enter
lret
fmul
aas
cmp
in
ret
fnstsw
enter
sti
std
in
mov
ffreep
enter
sti
clc
iret
into
xlat
cmpl
aam
leave
stc
into
mov
ret
mov
in
xchg
xchg
xor
xlat
lret
into
clc
std
int3
aam
shl
in
cmpl
in
in
int
jmp
hlt
repnz
icebp
out
int3
int
cld
cli
not
repnz
cli
fdivrp
in
lea
out
roll
out
idiv
in
lret
incb
aad
sti
xchg
jecxz
movl
xor
fdivr
test
stc
hlt
in
mov
sub
subl
ss
cmp
cli
iret
clc
cmp
sti
jecxz
leave
cld
int
repz
clc
clc
into
cmp
cmp
cmp
test
out
fistpll
in
ds
in
into
xchg
rolb
ret
cli
fxch
ljmp
cmp
fcmovb
loopne
loopne
xchg
xchg
into
xor
lret
lret
ljmp
jecxz
out
out
neg
mov
orl
out
in
int3
cmp
repz
loopne,pt
cli
jmp
std
icebp
jmp
ror
cmc
out
rol
lret
sti
aad
in
sar
test
fisttpll
mov
sub
aaa
not
repz
jmp
rol
mov
xchg
call
int3
out
xchg
lock
xor
fcmovnbe
cli
cmp
ret
in
rcr
mov
lea
xchg
loop
repz
jecxz
xor
cmpb
cmc
cmp
cld
sub
out
xchg
mov
sarl
jmp
repnz
into
dec
loop
cmp
in
mov
into
sbb
lret
test
lock
neg
ror
lret
clc
int3
fld
int
fdiv
cmp
in
ret
loop
in
mov
test
xchg
loopne
enter
lds
enter
sar
clc
cli
clc
ffree
fnstcw
test
xchg
fucomip
loope
in
cmp
out
call
in
loop
loopne
mov
leave
xchg
in
cld
in
jmp
lock
aad
icebp
cmp
clc
aas
fsubp
cmc
mov
rol
xchg
fsubr
mov
icebp
in
test
repnz
neg
xor
clc
hlt
lock
test
cli
fdiv
xlat
lea
mov
out
lret
rcl
fdivrp
icebp
loopne
cmp
repnz
fsubrp
ljmp
mov
out
out
aas
xor
icebp
jmp
sti
fdivr
sti
jmp
test
fucomi
mov
mov
ljmp
repz
lret
in
cmp
fadds
ljmp
out
jmp
ss
xor
jmp
not
aam
cli
cmp
in
sti
jmp
cmc
aam
call
neg
xor
rol
idivb
xlat
fsin
out
jmp
mov
loopne
xabort
jmp
aaa
int
cmp
in
loop
xchg
repnz
out
ret
xor
icebp
xor
xlat
sti
repnz
aad
into
cmp
xchg
rolb
lock
nop
lret
shlb
int
cmp
cmp
cmp
ds
fcomip
jecxz
ret
out
ds
ljmp
xor
in
repnz
clc
cmp
loopne
fsubp
hlt
leave
xchg
cmc
fcmovu
lret
loopne
xchg
xchg
out
test
loope
clc
divl
rolb
sti
mov
ljmp
mov
int3
iret
ljmp
fucomi
hlt
leave
int
in
cmp
fcomp
sti
and
dec
xchg
xchg
sub
jmp
cmp
das
int
cmp
aam
hlt
cli
cmp
mov
cli
testl
xor
out
divl
jmp
sub
stc
fcomip
xchg
sti
fscale
sub
lock
divb
out
aaa
movl
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
lods
idivl
stos
add
lret
jmp
lret
loop
shr
fcomip
or
out
leave
fcmovu
test
fadd
cmp
cli
out
fcmovu
loop
fiadds
fisttpll
out
leave
mov
call
aam
xlat
xor
ds
int
lock
div
clc
jmp
aas
stc
ljmp
aad
lret
aam
xor
lret
in
cmp
add
fildl
out
jmp
test
repnz
iret
imul
rcr
div
int
clc
sarb
clc
out
icebp
mov
into
aad
xor
cmp
in
int3
fcmove
cli
testl
loope
in
shr
cmc
lock
iret
into
fcomp
ljmp
fiadds
sti
lds
lock
fsubrp
lret
in
sub
rcr
loop
call
xlat
xchg
fcomp
ljmp
hlt
jmp
fadds
decb
in
xchg
icebp
loop
mov
in
ss
into
icebp
fdivr
sti
shr
cld
fstp
out
and
in
mov
mov
enter
fucomi
xlat
out
lock
rcr
rcl
ds
hlt
testl
cmc
shl
repnz
stc
repz
clc
std
std
cld
cld
mov
addb
loopne
jmp
aam
shl
shl
out
xor
loop
fdiv
cmc
xlat
repnz
neg
out
xlat
out
fxch
repnz
and
aam
xor
cmp
rcr
cmp
jecxz
rol
jmp
test
mov
mov
sub
hlt
leave
icebp
ljmp
cmp
fcomi
ljmp
sbb
hlt
jmp
xlat
cmp
rcr
fsubr
cmp
fsub
sti
sti
call
jmp
in
loope
aad
loope
jecxz
fidivl
out
std
clc
idivl
fistpll
jmp
add
lds
fldz
int3
clc
call
hlt
ret
out
repz
fcmovnu
jmp
loope
in
call
xor
shr
cmc
out
cmp
idivb
loope
in
in
movl
add
ror
stc
ljmp
aad
cmp
test
loope
sbb
xlat
xchg
hlt
loopne
repz
cmp
xor
add
add
fucomip
les
lret
mov
ret
out
xor
cld
fdivrs
lock
ffreep
fmul
loop
in
test
out
rol
xlat
xor
ss
lret
ljmp
in
test
fsubrp
fimuls
in
loop
aaa
cs
faddp
out
in
xor
fdiv
in
loopne
fcoml
enter
ss
shl
sar
cmp
cmp
repz
fld
leave
out
std
clc
mov
xor
in
icebp
stc
cld
ror
aad
xlat
and
out
icebp
addb
repnz
icebp
lret
sti
cli
cmp
testl
shr
mov
in
lock
out
out
out
std
sar
out
icebp
sti
lret
fld1
loope
stc
call
rcr
ror
cld
aam
sti
cmp
cmp
fadd
stc
stc
fmul
cmc
out
fsubr
out
test
out
int
xor
icebp
shl
repz
test
cmc
aam
out
fisttpll
icebp
jmp
in
fsqrt
fcmovnu
ljmp
inc
sti
jmp
mov
mov
out
mov
out
xor
hlt
ljmp
xor
test
test
int3
cld
loopne
iret
sub
lret
int3
sti
cmp
cmp
aam
neg
faddp
clc
sub
inc
fildl
out
xor
sarl
xor
fcomi
fsubrp
addb
repnz
fucomip
in
in
jmp
int3
sarl
call
xor
fidivrl
int3
xlat
in
jmp
mov
fldpi
div
lret
loope
fucomi
fidivrs
fcmovnbe
mov
test
mov
lock
ljmp
aad
repz
ret
cmpb
mov
hlt
inc
mov
test
iret
shll
aam
divl
idiv
loopne
adc
rcl
cmp
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
jle
iret
fildll
add
add
jecxz
fdivr
mov
int
repnz
ss
ss
fsubr
dec
loope
sti
iret
repz
mov
in
mov
sar
std
out
aad
rcl
clc
jecxz
idiv
cmc
cmp
jecxz
xchg
fdiv
jmp
in
repnz
cmp
clc
loope
int3
fcomip
cmp
call
leave
cli
loop
jmp
ffreep
mov
fadd
lock
lret
rolb
orl
lea
fcmovbe
in
call
out
loop
cmp
jecxz
add
cli
fdivr
jmp
xchg
cmp
icebp
cmc
in
aad
fsubrp
lret
fdivr
std
rcl
mov
ret
cmc
cmc
mov
mov
call
shl
fdiv
fldlg2
int3
cld
repz
addl
leave
decl
hlt
cmp
aaa
shl
jmp
rcr
xlat
fcmovu
mov
in
in
jmp
and
hlt
not
jmp
cli
in
cmp
roll
fmul
xchg
mov
jecxz
loope
repnz
out
in
hlt
fdiv
cmp
cmp
rolb
sti
jmp
fiadds
aad
clc
cmp
fldl
lret
jecxz
in
mov
lock
ss
shl
rol
xor
rcr
test
enter
mov
fst
xchg
rolb
cmp
fdivrs
into
fst
aad
faddl
fcom
int3
fdivr
sbb
shr
repnz
cmp
shl
fsubr
ret
out
test
mov
loope
clc
fisttpl
call
cmp
leave
lret
sub
idiv
fdivr
neg
cld
sti
in
cmp
test
call
cs
out
lret
cmp
aam
iret
fadds
mul
in
clc
stc
mov
jecxz
repz
int
fidivrl
xor
test
hlt
cld
rolb
lret
fcomp
inc
mov
out
jecxz
loope
out
ror
lock
sar
jmp
out
mov
xchg
cmc
imull
xor
xor
xlat
aam
rolb
clc
xor
hlt
jecxz
int3
stc
in
test
loopne
hlt
cmc
ss
sti
aam
lock
fadds
ffreep
mov
cld
dec
shl
shl
mov
icebp
cmp
leave
ds
loop
fiadds
int
mov
loope
in
int3
jmp
cmp
loope
aad
rol
or
mov
mov
loope
in
int3
xor
shl
in
clc
ds
fdiv
cmp
fucomip
les
loopne
ljmp
hlt
shll
aaa
into
rcr
xor
xor
clc
jmp
add
ret
mov
xor
aam
jmp
cmp
xor
out
mov
int3
decl
in
mov
out
int
aam
fstpt
fabs
cmp
fdivp
mov
loope
loop
jecxz
cld
ror
xor
xor
ds
jecxz
rcr
test
test
mov
xchg
call
ljmp
hlt
in
lock
int
ljmp
fsubr
in
decb
adc
ror
stc
cmp
out
in
into
inc
ret
fstpt
ret
testb
out
sarl
les
lret
cmp
loope
lds
loopne
enter
clc
jecxz
icebp
nop
lret
out
repnz
clc
in
in
cmp
in
ljmp
cmc
mov
loop
cli
test
xchg
in
int3
mov
in
cmp
into
into
fdivrp
fcmovb
aad
rcl
in
xlat
sub
xchg
mov
stc
out
fcom
fucomp
lret
addb
loope
hlt
test
cld
in
rclb
in
out
sub
fdivr
lret
fld
sti
stc
in
jmp
jmp
mov
in
xor
rol
lock
repz
enter
test
ljmp
bnd
rcr
repnz
aas
lret
not
stc
les
decl
rorl
xlat
repnz
loope
cli
loop
rolb
in
jmp
fptan
loop
out
mov
addl
mov
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
lret
pushf
mov
jle
add
in
sbb
lret
not
call
hlt
in
aam
icebp
shl
fabs
out
sti
fxch
icebp
xchg
in
jmp
testl
test
int3
std
iret
mov
cmp
cmp
xlat
enter
ret
jecxz
testl
rorl
ret
repz
in
jmp
addb
repz
ret
loop
adcb
lret
out
jmp
jmp
aad
cli
aas
cmc
out
leave
sar
sbb
out
in
out
sub
fcmovu
iret
fdiv
cmp
fcomip
xchg
lock
sub
xchg
int
sub
out
lock
hlt
clc
sarl
xor
jmp
idiv
in
int
lock
in
repz
flds
iret
ret
filds
leave
and
mov
ljmp
fcomi
fidivrs
cli
aam
lock
cli
cmc
fnstsw
call
xchg
in
int3
in
cmp
in
aad
cmp
call
in
mov
aam
div
icebp
hlt
xor
in
xor
idivl
aas
loop
incb
fsubr
out
repnz
in
out
rcl
mul
jmp
int3
aam
aad
test
filds
fmul
mov
imul
out
sti
std
sar
ljmp
icebp
xchg
in
shr
loopne
rol
out
icebp
iret
iret
jmp
loopne
rcr
loopne
cmc
loope
fildl
xchg
hlt
in
jecxz
in
sar
cmp
cli
fst
rcl
lock
mov
les
repnz
lock
in
xor
jmp
rcr
xor
std
icebp
sbb
icebp
roll
xchg
xchg
loope
out
loop
les
jmp
sti
idiv
jmp
jecxz
in
sbb
nop
cmc
xchg
jecxz
xor
stc
enter
ss
fdivr
cmp
rol
loopne
in
ficoml
mov
jecxz
in
in
call
cmp
out
ret
idivb
mov
mov
cmp
fadd
stc
in
in
fiadds
fld
out
sar
adc
int3
in
sti
cmp
xlat
hlt
leave
orb
mov
xor
call
int3
test
xlat
clc
fiaddl
mov
into
xchg
xlat
aad
out
aam
lret
icebp
cmp
icebp
shl
in
filds
std
in
hlt
in
fdivs
jmp
xor
neg
fsubp
loopne
loopne
jecxz
orb
in
xchg
rol
into
fcmovbe
in
clc
div
jmp
cli
mov
mov
loop
lret
in
xchg
or
lret
out
rcl
dec
fdivr
clc
aam
fdivrl
repnz
stc
jmp
sti
into
icebp
call
enter
cmp
aas
sar
loop
lock
loop
repz
repz
mov
out
cmp
jmp
enter
rcl
lret
add
out
add
repz
xchg
jecxz
enter
idiv
roll
out
fdivr
xchg
loope
stc
out
leave
out
out
int
fcomp
sar
call
add
cld
fucomi
ror
cli
xchg
jmp
fists
lret
out
ss
cld
shl
in
loop
in
rcr
cmp
stc
jmp
out
lock
stc
int3
in
in
fsubr
icebp
aam
aas
aas
cmc
cmp
stc
aam
out
lret
sbb
into
repnz
repnz
sti
ss
into
rol
fcomip
frndint
in
loop
mov
out
mov
icebp
fsubp
xor
das
sarl
ss
lret
ror
hlt
repnz
div
fdivr
leave
jmp
enter
jmp
mov
out
ret
jmp
out
aaa
ds
roll
mov
loope
sti
test
repnz
rol
cmp
shlb
shl
repz
loop
xor
fmul
fimuls
or
cs
shr
jmp
aam
in
loope
in
ret
rcr
in
test
in
int3
loopne
call
in
out
jmp
iret
sar
leave
lds
out
stc
rorb
xor
icebp
lock
in
leave
xlat
fisttpll
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
testb
cmp
stos
add
ds
clc
mul
test
leave
loop
in
adc
xor
divl
jmp
lock
rcr
cmp
aas
cmp
lret
test
in
xlat
mov
cld
call
ret
aaa
ret
out
enter
fcmovb
loope
out
ror
addb
mov
xchg
icebp
loope
imul
ss
aaa
jecxz
repnz
cmp
loopne
add
incb
cmp
cli
xor
icebp
stc
cmp
call
loope
stc
hlt
xchg
ret
test
xchg
call
loope
ror
idivl
clc
int3
fidivrs
int
stc
clc
fmul
mov
in
iret
mov
clc
leave
xlat
call
sarb
aas
xlat
test
aad
mov
out
loope
in
repz
fxam
fcomp
jmp
jmp
enter
out
icebp
loope
ret
aas
jmp
aad
loopne
xchg
mov
les
stc
int3
iret
sarl
icebp
in
cmp
loopne
ret
sbb
mov
std
xchg
test
das
ss
aaa
fcmovnbe
in
lret
cmp
aad
loope
fcmovbe
cli
hlt
cld
orb
fiadds
cmc
aad
cmp
aaa
out
xchg
rol
fcmovnu
fsubp
cli
into
xchg
xchg
jmp
aaa
repz
in
clc
cmp
lret
lock
rolb
fstp
int3
sbb
ljmp
idivb
jmp
out
out
fucom
cmp
mov
testb
xchg
cmc
cld
in
hlt
out
lock
ds
fsub
ljmp
cld
jmp
xchg
fdivs
enter
repnz
std
not
fdivp
rol
sbb
jmp
sti
nop
rcr
ljmp
xor
cmp
out
loope
out
repnz
not
loopne
in
loopne
in
xchg
out
lock
rol
repnz
lret
int3
clc
out
jecxz
jecxz
stc
sti
int
fisttpll
lock
lock
out
shr
fnstsw
loope
lret
repz
cmp
jmp
in
test
in
lret
orb
lret
cld
in
shr
cld
int3
iret
stc
aas
rol
std
fcmovu
fisttpll
out
loop
lret
cs
lret
fdivrp
cmp
in
adc
aas
leave
jecxz
cmp
fisttpl
loop
out
jecxz
into
xlat
in
lock
add
cli
mov
std
fcom
faddp
mov
loop
mov
xchg
xchg
hlt
into
in
enter
clc
std
rcl
cld
shl
idivb
in
ljmp
mov
lds
out
into
in
ljmp
in
in
filds
sti
out
xchg
imul
sarb
ror
cli
aad
in
loope
sti
fdecstp
jmp
fsub
nop
std
addb
xor
cmc
int
loope
hlt
stc
into
test
xlat
rorb
clc
stc
mov
out
cmc
xor
cmp
add
out
aam
test
test
xchg
ljmp
int3
in
call
aam
iret
fdivr
jmp
aas
fcmovbe
int3
fstl
cmc
clc
icebp
in
cmp
out
aas
icebp
repz
loop
jecxz
fimuls
xchg
xchg
xor
in
sarl
sti
adc
sti
cmc
aas
sti
fdiv
fabs
sar
stc
clc
fisttps
xor
in
jmp
xor
icebp
loope
rol
loop
les
fildl
repz
cld
repnz
rol
adc
rcr
jecxz
ljmp
nop
out
ret
ret
xor
sti
cld
in
clc
aam
xor
aad
lret
fldl
xchg
iret
sar
fcmovnbe
imul
sar
test
incb
out
int
adcb
cmc
imul
call
shl
rcl
mov
aad
sbb
decb
out
rol
call
aam
ret
xlat
in
shl
fyl2xp1
ret
out
mov
test
into
in
xor
call
aam
rcr
in
loope
leave
in
test
int
icebp
iret
out
loopne
lret
xlat
fst
ds
adc
enter
mov
adc
aad
jecxz
xor
in
aas
lret
aam
fdivr
shl
cld
jecxz
test
clc
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
xchg
add
add
call
int
jecxz
imul
aad
mov
aad
cmp
lret
ljmp
xchg
in
repnz
rcl
aad
int
cmp
ffreep
iret
call
fld
mov
nop
int3
in
xchg
icebp
clc
rol
int3
jecxz
cmp
sub
neg
cli
ret
mul
mov
jmp
jecxz
repz
in
xor
aam
into
idiv
cmp
shl
shl
jmp
std
orl
sub
std
xor
call
loop
sar
enter
fucom
out
loop
int3
xor
loope
leave
out
std
fidivrl
std
sarb
ffree
addl
int
xchg
out
xchg
xchg
out
out
repnz
enter
sarb
ds
ret
cmp
mov
mov
xor
in
into
out
call
hlt
cli
inc
iret
rolb
std
test
lock
repnz
jmp
rcl
int3
into
out
lds
incb
in
iret
hlt
icebp
xor
iret
cmp
rcl
cmp
fcomp
xor
lret
lret
out
test
sub
xor
dec
in
cmp
and
jecxz
sub
mov
leave
shl
out
enter
stc
cmp
cmp
cmp
call
test
mov
jmp
xchg
out
sub
fnstenv
in
jmp
lret
jecxz
in
rcr
call
sti
mov
repnz
shlb
out
ss
cmp
xchg
aam
aam
mov
and
jecxz
in
loopne
cmc
leave
cmc
fnstcw
fsub
cmp
icebp
test
sbb
iret
incb
rcl
ror
out
movb
cmp
stc
rorb
cli
mov
and
repz
xlat
cmp
ror
cmp
clc
cmc
out
out
std
loopne
loopne
fldl2t
into
fneni(8087
repz
mul
idivb
fcmovnbe
std
in
out
clc
jecxz
cmp
xlat
inc
mov
xlat
int3
orb
out
sti
fucomi
int
xlat
ljmp
repz
mov
mov
mov
out
sar
mov
shlb
xor
sti
lock
shl
cmp
ret
out
xchg
out
lret
xor
in
neg
ds
icebp
lock
faddp
xchg
testb
in
ljmp
leave
jmp
int3
shl
fcmovbe
and
mul
xlat
sub
xchg
loop
repnz
xor
into
rcr
jmp
std
fadds
mov
clc
in
in
in
lret
fstp
shl
in
test
xlat
rol
f2xm1
aam
xor
rcr
shl
rcr
loope
aam
and
mov
out
out
loopne
xor
lret
ret
aaa
out
xchg
cld
lret
ds
mov
fucomip
cmp
repz
xlat
lret
jecxz
lret
clc
fistpll
rol
test
cli
cld
std
ret
addl
mov
shrb
out
sti
aaa
cmc
int
cmp
lds
fldl2t
mov
test
cmc
lret
xchg
xor
fdivr
jmp
fnstsw
clc
fsub
ret
test
clc
rcr
mov
loopne
mov
shl
aad
iret
cli
idiv
int
sarb
cmp
loop
rol
lret
enter
xchg
loopne
xchg
and
aaa
in
shll
int
hlt
xor
ret
hlt
rol
out
enter
sbb
into
repz
loop
iret
lock
int3
aaa
iret
repnz
repz
cmpl
fucomp
jmp
enter
out
loope
aas
rol
icebp
aaa
out
lret
cmp
rcl
loopne
cmp
mov
xchg
fmul
int
int3
xchg
loop
int3
loop
cli
cli
std
sarb
into
not
loope
sti
iret
fst
xchg
ffree
mov
fdivrp
adc
sar
aam
xor
fldpi
cmp
cmp
enter
orl
adcl
jecxz
hlt
ljmp
xchg
xlat
mov
xchg
call
into
xlat
xor
cmp
stc
std
ljmp
clc
repz
sti
xlat
fcmovnu
sub
call
stc
iret
rcr
leave
lock
cmp
test
stc
ret
sar
out
enter
repz
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
out
repnz
in
out
cmp
int3
int
sar
sarl
test
mov
enter
fcomi
xor
divb
lock
in
stc
cmp
call
in
iret
mov
das
lock
aam
hlt
jmp
int3
fadd
hlt
sar
loope
xlat
enter
xchg
repnz
jmp
ss
cmp
loop
icebp
into
shl
fsub
loop
cmc
loopne
jmp
std
xchg
in
ss
enter
icebp
cli
aad
sti
cld
xchg
fsubr
rolb
std
xchg
shl
repz
lock
cmp
sar
shl
ds
and
fcmovu
out
ljmp
lock
jmp
xlat
rcl
out
not
aad
ftst
ret
xchg
lea
xchg
mov
fdivs
imul
in
sti
cld
hlt
cmp
cli
ret
mov
test
loop
stc
rorl
jmp
std
rcl
loop
cmp
aad
mov
loope
test
lock
divb
in
int
aaa
cmc
int
cmp
shl
int
into
loopne
stc
testb
cli
out
test
xor
cmp
jmp
xor
lock
xchg
cmp
cmp
stc
stc
loop
fsincos
out
aam
lds
icebp
repz
repz
cld
idivl
mov
ror
aas
frndint
movl
into
xor
cld
in
into
rolb
fcomi
rolb
loopne
out
in
aad
ret
jmp
cmp
test
aad
icebp
out
out
out
fcmovne
in
icebp
lock
rol
cmp
xor
fdivrl
rcl
cld
sarb
out
cmp
ljmp
popl
cmp
xlat
ror
testl
fxam
mul
out
nop
fadd
sti
repz
test
call
enter
cld
cmp
cmp
xor
lret
fucom
out
jmp
xchg
iret
xchg
mov
rol
xlat
fcomp
pushl
lret
cld
lock
cmp
loopne
mov
lret
xlat
lret
loopne
test
repz
mov
idivl
call
xor
jmp
ss
icebp
rcr
in
movb
filds
aaa
repnz
fsubr
loopne
in
aam
std
fsubr
fcmovb
fsub
enter
orb
xor
cmp
clc
xlat
in
xchg
repz
cli
in
xchg
repz
mov
shl
jmp
hlt
cmp
clc
sbb
fdiv
rcl
rol
aad
loop
imul
out
jmp
test
lock
fdiv
cli
shl
std
lock
lret
ret
fmul
loopne
mul
jmp
jmp
in
orb
cmp
sar
cli
rol
into
xlat
xchg
ljmp
div
vcmpps
int3
sti
xor
ror
fabs
ds
jecxz
xor
out
xchg
enter
lds
int
imul
cmp
repz
xor
cmp
mov
jmp
sub
in
lret
into
in
into
leave
in
cmp
stc
neg
out
clc
fucomp
xchg
cmc
test
into
sti
mov
mov
sub
xlat
xlat
fmul
cmp
cld
loope
call
mov
iret
test
jecxz
jmp
out
int3
hlt
fld1
aas
lret
std
out
sti
fld
jmp
fimuls
mov
roll
test
in
lret
xlat
ror
testb
fchs
out
stc
loope
xchg
int
cmp
cmc
repnz
xlat
xlat
cld
cmc
ljmp
mov
adcb
sar
sti
clc
cmp
cli
loop
int3
loop
aas
rcl
add
fucomip
lea
loope
xor
clc
enter
iret
icebp
frndint
ret
movb
out
xchg
int3
enter
out
iret
out
xor
cmp
fstpt
cmp
adc
fld
int
or
out
xor
enter
repnz
xlat
cmc
ret
cld
jmp
out
xchg
out
xlat
ret
fdivrs
cli
and
int
aad
out
hlt
fsubp
loopne
shl
sti
mov
repz
int
xor
xor
out
fcmove
cmc
faddl
fadds
cld
mov
mov
sarl
rcl
int3
in
xor
out
ret
rolb
add
add
add
add
sbb
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
mov
mov
jle
test
xchg
fcmovnu
loopne
clc
out
aaa
fucomi
icebp
cmp
ss
aam
ss
incl
int
lock
out
xchg
in
out
cmp
out
rol
cmp
rcr
rolb
lret
not
int
fucomi
mov
rol
cmc
out
aaa
cli
int
cmp
sbb
std
call
fmull
aam
xor
idivb
int
rcr
aas
clc
aam
in
int
in
xchg
sub
in
clc
in
call
fcmovne
fcom
cmc
rol
jmp
in
fists
aam
xor
xor
std
hlt
cmp
aam
sti
cmp
ret
ljmp
fcoml
stc
int
cmp
xlat
stc
fsubp
cmp
shl
leave
std
std
icebp
shr
out
in
int
lock
cmp
iret
in
rolb
cmp
int
fucomip
rcl
nop
mov
int3
cmp
std
lret
int
out
fdivr
loope
ds
fiaddl
in
in
out
aad
jmp
ljmp
fcmovb
loop
lret
out
orl
loopne
cmc
cld
cmp
into
fdivrs
not
in
cmc
into
shl
fiaddl
ljmp
decb
xor
enter
cmp
add
xchg
sbb
lret
mov
out
xchg
xchg
xlat
in
rol
aam
in
enter
clc
cmp
fdivp
loope
mov
fdivp
rorb
enter
cld
int
repnz
clc
test
roll
flds
mov
xor
cs
fcmove
shl
sti
adc
stc
adc
out
fildl
int
fsub
das
xor
lock
aas
fcmovu
clc
ffreep
icebp
fcom
std
stc
fsub
jmp
int
into
out
in
sub
stc
in
icebp
fmulp
ds
iret
shl
fsin
cmp
lret
out
ret
into
addl
int3
icebp
cld
lock
clc
cli
repz
jmp
leave
mov
in
ror
mov
aam
shr
idivb
jecxz
addb
sti
neg
sti
in
lret
test
imul
sub
div
std
lret
cld
icebp
jmp
fcompp
fcmovbe
out
std
loopne
aam
jmp
in
lea
clc
clc
cmp
cld
int
cmp
cmc
cmp
rolb
jecxz
lret
ror
sbb
loop
call
int3
ss
int
out
sar
out
in
out
into
dec
xchg
mov
in
out
leave
into
iret
lock
int3
clc
fiaddl
call
lret
notb
iret
out
lock
cmp
xor
int3
adc
ret
inc
cld
fadds
nop
mov
out
xlat
loopne
xor
fucom
repz
jmp
jecxz
hlt
hlt
stc
fldlg2
fucomip
fsubp
fimuls
enter
cmp
aad
loope
cmp
aam
jecxz
frstpm(287
cmp
in
xchg
nop
orb
fidivl
xlat
ds
incl
ret
stc
mov
out
leave
leave
hlt
repnz
into
cmp
xor
xor
std
int3
iret
int
in
lock
xchg
cld
jmp
incl
xchg
fcomip
xor
int
cld
cmp
xor
cmc
cld
lock
out
hlt
hlt
rol
cmc
clc
cmp
repnz
adc
loopne
ret
ljmp
xlat
sti
push
in
std
fdivr
int3
std
xchg
loope
faddl
icebp
stc
jmp
stc
lret
icebp
fsubr
neg
loopne
cmp
in
fisttpll
in
rcl
repz
aad
repz
ss
sub
out
idivb
cmp
int3
xlat
mov
test
ljmp
out
sar
hlt
cld
push
into
ljmp
fsub
cld
test
mov
fyl2x
shl
divl
xor
sar
sar
xchg
and
aad
repz
adc
cmc
aaa
fdivs
int3
hlt
ljmp
fucom
loop
mov
jecxz
mov
xchg
in
cmp
loop
fnop
icebp
icebp
fsub
cli
repz
cld
cmp
fxch
testl
rol
ljmp
fst
loope
shl
decl
mov
lret
cmp
jmp
fcom
rcr
fstp
fnstsw
fmull
mov
scas
xchg
jge
add
add
out
loop
leave
cmp
call
and
repz
repnz
xchg
stc
call
aam
xchg
jecxz
xor
aam
fcompp
lret
loope
add
shl
fucom
std
cli
in
in
in
sub
mov
aad
icebp
ret
in
into
aad
lret
aad
out
rolb
fdivr
int3
fimull
jmp
enter
ss
call
cmp
fpatan
aad
enter
add
fucomip
in
repnz
aam
fldz
sti
cmp
jmp
xor
out
jmp
cli
int
in
test
clc
ret
fnstenv
jmp
loop
fcmovbe
aas
mul
xchg
mov
repnz
out
rcr
fsubr
iret
aad
jmp
rol
fcomp
ret
sbb
popl
shl
aad
ljmp
enter
icebp
cli
fiaddl
mov
loopne
fmulp
mov
shlb
shl
imulb
xlat
xlat
call
cmp
mul
loopne
vpsrad
out
out
in
ficoms
xor
int
repnz
leave
roll
test
stc
fld
out
test
xchg
xchg
xor
rcr
sarl
test
xchg
out
mov
mov
repz
clc
out
sar
cld
out
int3
cld
adc
stc
out
fdivr
ljmp
out
in
idivb
enter
xlat
ror
into
ftst
fcmovnu
cli
loope
jmp
adcl
sarl
cmp
xor
ret
cmpb
fisttpll
xchg
std
in
nop
subb
ss
xor
bnd
testl
clc
jmp
nop
sbb
xchg
aaa
int
lock
cmp
in
in
shl
std
ret
rcl
loope
in
incb
std
mov
cmc
aaa
rcl
cli
out
fcom
int3
sarl
les
loop
fmulp
mov
faddl
mov
fcmovbe
repz
ds
std
cld
imul
out
fadds
nop
jmp
xlat
iret
aad
repnz
inc
fistpll
loop
fsub
aas
fdivr
xchg
mov
lock
div
out
cmp
shl
loopne
sti
cmp
sbb
mov
sti
mov
lock
lret
xor
xor
iret
repnz
icebp
shl
rcr
jecxz
enter
cmp
int
test
jmp
repnz
aaa
xor
shlb
rcr
fiadds
xchg
mov
cmc
out
fsub
rcl
cmc
fnstsw
sub
ds
ret
ljmp
out
xchg
jmp
aad
fnstcw
add
cmp
inc
in
fcmovnu
enter
std
orb
jmp
push
aad
sti
cmp
jmp
out
lret
mov
shl
shr
ss
out
loop
in
roll
cmp
xchg
repz
out
xor
ljmp
loopne
iret
stc
jmp
ffreep
fisttpl
fmull
in
iret
fidivrs
cmp
lock
fmulp
jmp
cld
enter
out
xchg
rcl
in
stc
shr
xor
aad
into
cli
sti
loopne
addl
leave
jecxz
xchg
ljmp
cli
sarb
aaa
out
in
xchg
aas
int
mov
hlt
jmp
icebp
fdivr
in
lock
out
fcmovnb
in
clc
fimull
icebp
icebp
leave
mov
shll
out
stc
fdiv
neg
in
stc
icebp
xlat
test
cmp
cmp
xchg
roll
iret
aad
cli
cmp
cld
stc
shr
jecxz
sub
addb
xchg
xlat
leave
aad
cli
in
into
fstpt
loop
in
out
hlt
jmp
loopne
loope
in
cmc
loopne
leave
sub
call
sti
loopne
out
ret
cli
test
loop
std
loope
rcl
aam
fldl2e
test
xlat
aam
cld
out
roll
cld
mov
mov
int3
xchg
jmp
in
hlt
fucomp
iret
xor
stc
fstpt
rcr
std
enter
jecxz
std
nop
int
std
repz
loopne
ret
fdivr
in
xor
ja
mov
jmp
jmp
ror
aam
aad
aam
sbb
stos
stos
add
add
cmp
sar
jecxz
out
addb
icebp
lret
iret
repz
sti
cmp
das
out
xlat
in
rcr
fsub
out
fcmovnb
test
int3
xor
ret
ret
out
fcomp
lret
fdivrp
cmp
repz
ffree
fiadds
faddp
xchg
xor
ss
shlb
in
int
rolb
rorl
test
vpsrad
aaa
out
cld
std
clc
cmp
aad
rcr
xlat
addl
xchg
aam
leave
mul
fprem
imul
flds
out
call
into
int
int
iret
sarb
loope
ljmp
addl
jecxz
adc
ror
adc
out
shrl
lock
cmp
shll
cmc
lret
xor
ds
rol
jecxz
in
jecxz
int3
int
lock
sub
ljmp
and
cld
iret
jecxz
aam
mov
std
call
call
out
cmp
stc
loopne
imul
rolb
ret
testl
iret
hlt
jecxz
loop
shl
xor
loope
jmp
fadd
mov
ffree
out
rolb
cmc
lret
cmp
int
in
faddl
stc
ljmp
fucomi
dec
test
ljmp
xlat
lock
jecxz
fdivp
aad
ds
stc
and
fiadds
out
out
cmp
repz
loopne
fsubr
rcr
ljmp
test
out
sub
jmp
hlt
cld
sbb
cmp
jecxz
aas
out
in
call
cld
xchg
in
ret
shll
repnz
clc
cmp
cmc
fdivrl
xor
mov
mov
in
or
loope
loop
out
aam
cmc
ljmp
in
fcmovnbe
ret
ret
mov
sti
popl
out
xor
xor
cld
jmp
rcl
in
rcl
out
xchg
leave
icebp
loop
nop
lea
xor
stc
in
rolb
aad
sbb
or
icebp
mov
int3
icebp
add
shl
int
xor
icebp
int3
shr
clc
ret
test
repz
mov
fcomp
loop
iret
xchg
fidivs
test
out
xlat
loopne
ret
iret
loopne
call
mov
repnz
sti
lret
out
cmp
cmp
ret
push
rol
cmp
fcmovbe
int3
call
ficoms
jmp
aam
idiv
xchg
clc
jecxz
loopne
xchg
into
loop
clc
out
out
div
out
div
xor
test
cmc
ffreep
mov
testb
test
out
xor
cmp
cmp
fnstsw
clc
cld
ds
cmc
clc
in
cli
fisttpl
shlb
xor
lock
das
stc
cmp
ljmp
xchg
addb
mov
shl
ret
shlb
fldln2
lret
xor
lock
fcmovb
stc
loop
rcr
mov
out
cmc
loopne
ret
enter
sar
test
cmp
jmp
in
fsubrp
int3
xor
mov
clc
fmul
cmp
int3
loopne
rcl
clc
cmp
loope
out
fdivp
leave
hlt
repz
shl
cmp
vpaddw
fcmove
xor
cmp
aas
ret
ffreep
lds
out
loope
xchg
loop
repnz
xor
fxch
loopne
cli
xchg
xlat
shl
in
ljmp
call
test
shr
xlat
icebp
cld
cmp
aad
testl
dec
enter
loope
call
cmc
out
out
test
stc
rolb
jecxz
fcmove
roll
cmp
in
lock
rol
lock
mul
jmp
mov
enter
out
jecxz
repnz
cmp
cli
cmp
adc
mov
roll
xchg
mov
shl
lock
sti
fdivl
fucomp
cmc
fldl
out
cli
fsub
clc
or
call
lock
dec
aas
fdivr
cmp
stc
cld
sti
rol
stc
in
out
in
mov
cld
xchg
xchg
mov
rol
shl
out
repz
cmp
ljmp
out
enter
sti
in
cli
mov
mov
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
hlt
lret
jbe
xlat
scas
add
add
call
adcb
out
out
fucomi
clc
xor
rcl
loop
leave
addl
xchg
xchg
xor
xor
iret
jmp
aaa
in
out
hlt
shl
in
aad
loopne
cli
lret
out
jmp
ret
lret
mov
xor
aad
xor
cli
repnz
clc
loop
rol
add
mov
lret
mov
xchg
nop
test
shr
cmp
xor
cmp
cmp
test
in
mov
fdivp
xchg
aad
cmp
into
leave
int3
in
out
stc
stc
cmp
loop
out
hlt
loope
cmpb
repz
out
lret
sti
sub
into
loopne
call
loop
mov
fucomi
loop
xchg
ljmp
aam
fsubrp
stc
iret
fiadds
xlat
int3
mov
xchg
xor
xchg
div
lret
out
fmul
in
icebp
ret
repnz
fildl
loop
incl
int
rcl
lock
aam
jecxz
sar
fnstcw
out
cli
fmulp
in
rcr
leave
sti
in
shrl
xlat
cmp
aaa
xor
fcmovnu
ret
fincstp
mov
ret
leave
out
repnz
hlt
cmp
stc
cld
cmp
repnz
fcmovu
cli
sar
lret
int3
fcmovne
sti
xchg
shr
xor
int3
xor
cmp
ljmp
sti
incb
loope
xchg
lock
in
xor
in
in
xor
fcom
fsub
aam
cmp
aad
faddl
or
int
out
repnz
rol
fcomi
fsubr
fmul
sti
cld
std
loopne
sti
xchg
call
out
cmp
repz
fcomip
addb
out
jecxz
in
shl
into
shll
in
imul
cmp
cmp
aas
jecxz
in
test
mov
loope
orb
in
in
shll
ss
ds
mov
ret
decl
xchg
icebp
in
fimuls
int
in
xor
jmp
cmp
jmp
cli
int
or
ljmp
leave
hlt
sar
rol
add
out
les
imul
mov
out
out
xchg
test
ror
cmp
loopne
lock
mov
clc
enter
nop
div
clc
sub
ss
repnz
hlt
test
jecxz
add
std
in
jmp
fiaddl
repz
out
int
lock
sti
loope
repz
sar
xlat
in
xor
iret
jmp
xchg
ss
xor
in
fcomip
out
cli
in
aas
jmp
mov
into
fimuls
fcom
repnz
leave
xor
iret
cli
ret
rcr
ret
jmp
into
or
in
ret
jecxz
rol
out
cmp
ljmp
mov
sti
mov
sub
icebp
in
hlt
cmc
aam
stc
lock
int
leave
shl
test
ffreep
incl
orl
lds
in
cmc
cmp
cli
int3
ss
sar
rcr
fmul
cld
loop
test
adc
shll
in
cmp
das
rcl
cmp
cli
loop
roll
incl
lock
xor
in
lock
not
int3
cmc
shl
mul
rorl
movl
ret
stc
enter
fcomp
xlat
cmp
cmp
rol
jecxz
stc
xor
int3
mov
enter
repz
int3
loop
loop
lock
fxam
cld
fcomp
fldl
repnz
in
ret
fdivs
lret
in
sti
adc
out
test
fdivrp
test
fmulp
inc
or
out
xor
fidivs
in
fld
stc
idiv
ds
std
lea
out
xor
fcomp
enter
fidivrs
in
out
loop
aas
cli
ret
shl
out
in
enter
vpslld
lock
call
xor
lret
neg
idiv
enter
lea
mov
enter
cli
rcl
xlat
int
in
call
stc
loop
test
in
into
mov
std
xor
div
lret
icebp
aam
call
dec
into
add
clc
fneni(8087
stc
rcl
mov
adc
loop
test
push
cs
clc
repnz
mov
jmp
rcl
ret
fucomp
insb
fstps
arpl
gs
add
add
jle
jle
ljmp
jecxz
clc
cld
not
out
jmp
ljmp
repz
xor
cmp
shl
neg
shl
in
decb
in
addb
xlat
shlb
and
into
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
