push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
rorl
jle
sbb
sbb
div
stc
rorb
cs
shll
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
or
add
insb
xor
imul
daa
mov
popa
test
imul
stos
div
mov
test
movsl
and
or
xor
pusha
pop
xchg
push
and
add
mov
int3
out
gs
pushf
dec
xchg
jl
mov
popl
outsb
hlt
mov
mov
rorb
xchg
ret
sub
mov
mov
ret
stos
fisubs
ficomps
push
test
test
test
xchg
xchg
int3
arpl
test
ss
or
mov
scas
mov
or
or
insl
push
lods
xchg
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
mov
adc
sbb
push
mov
ljmp
cmp
pop
stos
ds
cmpsb
adc
call
push
scas
inc
pop
stos
fisttpl
or
inc
pop
lret
aaa
cs
fidivrs
sub
adc
les
aam
xor
in
ret
fisubs
fcompl
mov
int3
xor
inc
push
in
xor
push
iret
mov
mov
outsb
jns
fisttpl
mov
shl
lock
sub
cld
mov
daa
push
sub
out
xchg
mov
cmpsl
xchg
adc
pop
addr16
mov
fisttpl
fwait
mov
xor
jg
sbb
shl
scas
add
and
push
loopne
sbb
test
dec
dec
icebp
es
push
xchg
imul
filds
adc
inc
setne
cmpb
jg
adc
scas
mov
fmuls
pop
push
inc
movsb
dec
cmp
mov
or
ror
sbb
jp
out
repz
or
and
stc
adc
pop
mov
jno
push
adc
push
in
mov
xor
gs
jae
xchg
mov
pop
rclb
mov
mov
mov
lret
jge
cmp
mov
aas
push
sbb
mov
aaa
clc
inc
sub
test
xlat
inc
test
cmpsb
jae
fcomps
movsb
loope
push
sbb
sub
fisubs
mov
xchg
loope
xchg
xchg
out
lahf
dec
sub
icebp
lret
frstor
pop
and
adc
cld
dec
mov
jp
subb
inc
pop
rcrb
out
dec
int
aad
ret
inc
dec
xlat
and
push
push
aaa
dec
repz
popa
insl
add
test
sub
xor
pop
stos
int
insl
lock
push
dec
xor
inc
adc
mov
jno
inc
aaa
adc
cmc
add
pop
add
cli
enter
subl
cmpl
shll
adc
fwait
aad
mov
dec
popf
pcmpeqw
ja
out
cmp
js
add
ljmp
jl
cmc
cmp
jle
test
insb
jmp
ljmp
mov
mov
dec
xor
jge
out
int
rorb
jns
add
cli
mov
rcll
cli
ja
jmp
iret
mov
es
jle
dec
mov
popf
jg
and
or
std
cld
jle
adc
lods
out
adc
je
xor
jl
cs
inc
jle
and
arpl
dec
iret
outsl
ja
fldl
inc
les
cmp
stos
cwtl
aas
add
pop
pusha
ret
xchg
ss
push
testb
sbb
gs
xor
les
data16
add
lahf
ljmp
repz
sbb
cwtl
ud0
popa
sbb
in
shlb
sarl
adc
loopne
aad
xchg
popa
je
leave
xor
ds
dec
lcall
or
xchg
loope
es
dec
test
imul
ret
int3
leave
jno
ds
mov
jl
jne
outsl
dec
pop
dec
icebp
jge
ret
stc
sbb
fmul
cmp
lahf
ljmp
inc
fidivl
dec
jae
ret
fstps
add
fwait
and
jmp
stos
pusha
clc
orl
lds
sub
or
inc
outsl
sbb
xchg
sbb
lods
pop
jnp
cld
mov
cmp
insb
pop
test
lods
out
in
xlat
jp
js
sbb
cmp
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
lods
cltd
mov
sahf
adc
sbb
or
add
fwait
xchg
xor
pop
jge
inc
sarl
adc
cmp
sub
jle
lret
sub
adc
pop
xchg
adc
fcmovne
sub
enter
add
add
adc
fistps
cmc
pop
or
push
cmp
add
mov
hlt
in
or
mov
pop
mov
insl
xchg
mov
sbb
popa
mov
mov
jecxz
hlt
jo
fsubr
and
decl
mov
std
imul
add
pusha
or
je
pop
xchg
pop
ret
jo
sub
out
or
add
inc
rcr
pop
rclb
xlat
out
out
sbb
movsl
push
add
xchg
sbb
xlat
bound
dec
js
shlb
loope
out
movl
mov
mov
rcr
bound
push
jle
mov
jmp
leave
push
cmpsl
sahf
xor
insl
pop
push
ficompl
pushf
ja
hlt
sbb
call
mov
pop
lcall
jae
sub
jae
in
mov
jne
lock
pop
jb
and
mov
inc
call
subl
or
sbb
call
sbb
mov
add
in
push
js
iret
movsb
test
push
data16
pop
mov
mov
pop
xlat
mov
out
cmp
pop
mov
push
test
dec
xlat
pop
sub
hlt
cltd
jp
aas
sub
sub
into
sub
std
outsl
and
fcomps
inc
adc
inc
adc
les
vpandn
xor
in
fdivr
lcall
push
mull
lea
sub
cmc
out
sti
mov
jae
inc
pop
lret
into
cmp
les
ret
dec
push
push
mov
and
fucomip
mov
jg
leave
and
sahf
cmpsl
pop
pushf
jl
ret
loop
movsb
loopne
std
loop
int
mov
mov
fcoms
call
cmc
fbld
mov
cld
adc
loope
mov
notb
mov
add
xchg
push
iret
hlt
jmp
sbb
repz
jecxz
push
in
lea
insl
xor
aam
cmp
cs
call
cld
or
sub
or
mov
addr16
inc
addr16
sub
pop
repz
xor
mov
outsl
rorb
popf
adc
sbb
jnp
sub
xchg
int
popf
lods
loope
and
push
dec
and
rolb
pop
jg
out
arpl
popa
jb
push
pop
sbb
pop
fldcw
cmpb
fcomps
loop
les
pop
out
loope
mov
scas
push
stc
std
cmp
rclb
test
pop
mov
roll
adc
jp
orl
add
pop
dec
inc
pusha
lock
lcall
inc
imul
mov
jne
mulps
adc
adc
mov
sbb
dec
push
fnstsw
jns
xchg
xchg
movsl
in
mov
imull
sbb
div
jne
mov
fbstp
add
mov
es
cmp
adc
repnz
leave
dec
dec
mov
nop
push
sub
add
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
sub
fbstp
sbb
es
mov
scas
in
stos
cmc
test
movsl
lea
ret
mov
mov
repz
inc
repz
or
inc
jecxz
gs
shll
or
push
mov
adc
pop
sub
add
sbb
or
add
add
inc
loop
or
ret
inc
mov
arpl
mov
push
add
jno
nop
dec
push
dec
fnstcw
dec
call
xchg
in
das
cs
mov
fiadds
addl
jbe
sub
insl
pop
faddl
xchg
jmp
test
push
cltd
imul
into
pop
popf
stc
sub
je
and
xchg
loope,pt
cld
insb
lods
test
jecxz
or
lods
sarb
xor
sub
mulb
aad
inc
pushf
out
adc
cli
stc
dec
out
push
dec
sbb
fistl
outsl
jns
daa
int
int
aad
xor
and
sti
jb
inc
mov
mov
lock
lea
filds
pop
repnz
jo
push
cs
mov
bswap
dec
daa
mov
jbe
inc
int3
or
push
imul
std
or
cmp
sarb
and
push
faddl
lods
and
ficompl
test
sub
adc
mov
cmp
aaa
mov
out
inc
push
adc
dec
and
jge
push
inc
cmp
or
add
mov
jle
dec
inc
jl
pop
in
add
jb
xorl
outsl
mov
loopne
loopne,pn
push
mov
hlt
cmp
ficoms
in
mov
jle
xchg
inc
adc
or
cmp
repz
mov
pop
ret
cli
leave
adc
pop
or
fwait
mov
cltd
jns
jo
push
mov
shr
rcrb
sbb
sarb
mov
loopne
pop
inc
cs
mov
push
cs
sub
add
cmp
fnstenv
xchg
sbb
sbb
daa
stos
ret
shrb
mov
es
outsb
fcoms
clc
mov
dec
popf
cmp
sbb
sub
jp
mov
jbe
jl
jle
pushf
roll
stc
rolb
psubb
push
xor
push
or
add
aaa
mov
js
cwtl
rcr
scas
scas
dec
mov
outsb
mov
je
dec
pop
clc
fidivs
dec
mov
mov
cmp
aad
adc
jb
cli
push
ja
aam
xchg
or
mov
and
popf
scas
int3
loope
jl
pop
mov
fdivrs
mov
out
jle
jmp
dec
testl
dec
les
ja
fldenv
jmp
and
inc
outsb
mov
cmpsl
adc
xchg
add
ja
xchg
fildll
pop
int3
gs
loopne
xor
adc
mov
fstpl
push
jecxz
cmc
out
xchg
xor
lds
js
ret
push
data16
push
jno
rcll
push
rorl
adc
push
sbbl
out
addr16
or
inc
pop
xchg
dec
pop
or
cmp
xlat
sub
test
ja
mov
adc
arpl
mov
sbb
int
cmpsb
adc
roll
mov
jmp
psubd
scas
dec
rolb
addb
xchg
sub
out
ljmp
scas
push
sbb
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
push
cld
sbb
sahf
adc
sbb
es
movsl
jmp
sub
lods
push
mov
and
cmp
mov
push
dec
lods
out
in
inc
mov
shlb
rcll
rcr
push
mov
inc
adc
cltd
orl
push
pop
pop
xchg
loop
mov
stos
shlb
sbb
mov
sub
subb
in
icebp
mov
cmp
out
mov
fs
sbb
stc
xor
stos
xor
popa
cmp
pop
stos
pushf
lods
mov
js
rcrb
out
push
test
lea
sbb
jbe
leave
ret
int
movsb
orl
sbb
in
mov
fcompl
cmp
jno
arpl
inc
mov
add
push
adc
xchg
cmp
adc
fdiv
fisttpl
pop
lds
mov
ret
fldcw
mov
loope
rcrb
adc
sub
add
jb
aaa
iret
push
and
cmp
test
jmp
mov
pop
jae
cmp
movl
cltd
sbb
pop
fs
test
loope
sub
scas
es
popf
jg
sub
call
lret
insb
jae
rcll
mov
lahf
ds
sub
mov
jl
inc
add
int3
push
sub
in
sti
imul
js
push
repnz
adc
add
int3
jns
push
loopne
mov
stos
sti
ret
or
sub
clc
shl
aaa
mov
popa
lahf
orb
pushf
cmp
push
add
jnp
adc
stos
cmp
mov
pop
dec
sub
sarb
inc
sub
repnz
add
out
xchg
push
sarb
shll
cmp
js
mov
sti
pop
sbb
lcall
cltd
mov
lods
insb
inc
jb
jbe
not
jae
lgs
xchg
fmuls
ds
fidivl
pop
lock
sbb
scas
test
inc
cmp
sub
jnp
popa
mov
xor
jns
outsl
mov
shll
push
insl
jmp
aaa
cwtl
mov
lods
mov
cli
or
lds
jnp
jge
mov
mov
bound
ds
xchg
sbb
jge
xchg
cmp
sbb
mov
xchg
jmp
and
int
stos
fldenv
roll
cmpsl
es
into
lcall
mov
jge
int
xchg
test
loope
mov
nop
push
jae
popf
mov
mov
cmc
arpl
movsb
mov
test
sbb
jp
jl
in
rcl
orb
outsl
adc
jecxz
xchg
pop
mov
adc
mov
jae
mov
jl
mov
mov
dec
push
push
es
aas
into
lret
sub
cli
push
ror
xchg
sbb
sahf
std
sub
push
cwtl
push
sub
and
jae
out
stos
add
xor
mov
scas
inc
popf
mov
adc
pusha
pushf
jo
cmp
pop
sub
in
out
mov
pop
test
push
call
mov
fwait
bound
jbe
cmpsb
or
loope
dec
mov
mov
iret
sub
jb
std
pop
sbb
sahf
hlt
pop
loope
sahf
in
sbb
mov
add
mov
mov
dec
int3
popf
int3
mov
testb
push
push
sbbl
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
jo
hlt
sbb
sahf
adc
sbb
adc
xor
jg
xchg
fs
lcall
or
cwtl
push
or
mov
hlt
in
lahf
int3
cmp
insb
fstpl
idivl
xlat
pop
loop
push
mov
inc
cmpsb
or
popa
xor
sub
adc
sbb
jo
hlt
les
or
orl
push
aas
cmp
mov
mov
jnp
mov
icebp
adcb
pushf
inc
inc
aas
movsl
das
push
leave
mov
test
dec
jge
mov
sti
andb
mov
bound
call
call
adc
xchg
mov
cmp
mov
lock
push
ja
adc
dec
or
adc
clc
pop
and
test
xchg
adc
movsl
push
clc
jp
and
fwait
lock
cmp
inc
mov
sub
xchg
sbbl
jae
loop
pop
fs
outsb
aam
jl
and
int3
mov
mov
les
out
push
mov
push
in
out
and
add
fdivl
jmp
stos
adc
lock
fwait
mov
push
xchg
pop
bnd
testb
add
cmpsb
mov
fsubrl
sub
mov
inc
bound
sub
cld
pop
inc
push
mov
test
jo
pop
fnsave
cmp
ljmp
mov
inc
mov
std
dec
imul
cs
cli
out
adc
sbb
push
xor
mov
shlb
sub
nop
mov
enter
in
in
in
and
stos
dec
cmp
or
push
into
and
cli
xchg
sub
scas
rep
mov
stos
push
or
jmp
mov
loopne
sub
ss
ljmp
xorl
push
push
cmp
lret
int3
mov
stc
pop
mov
xor
jns
out
daa
cmp
xchg
or
cs
and
pop
aam
je
repnz
scas
sbb
mov
in
pop
jno
jnp
pusha
pop
mov
ss
aaa
add
xor
push
iret
xchg
stc
mov
cmp
fcmovnbe
hlt
xchg
pusha
std
add
cmp
or
fistpl
movsb
jae
negl
out
push
jmp
aad
push
pop
and
cli
or
jnp
addb
push
shrl
jl,pt
cmp
insl
add
icebp
out
adc
mov
aas
out
push
jo
stos
sub
fildl
aas
mov
push
xor
xor
lods
lcall
cwtl
das
loop
mov
ret
enter
ret
jne
movl
mov
out
pop
dec
loop
cli
jge
cmp
cs
outsl
lock
push
testb
xlat
stos
cmovo
jl
mov
ret
mov
test
pop
dec
sub
jp
fidivl
lods
push
push
dec
pusha
pop
cli
adc
pop
mov
dec
xchg
stos
mov
in
adcb
shll
inc
jns
mov
push
push
jecxz
js
sub
outsb
or
add
mov
sub
pop
test
je
in
sbb
imul
sbb
jbe
and
lret
arpl
add
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
or
sbb
mov
pop
cs
ror
xchg
xchg
imul
fstps
fidivs
decb
xor
and
fisubs
pop
sarb
sbb
inc
daa
jmp
xor
mov
adc
hlt
test
aas
sti
xor
aam
push
mov
rolb
xchg
and
sbb
dec
aas
xor
rorl
adc
loope
sbb
jge
pop
inc
lea
adc
orl
adc
pop
dec
gs
lahf
stos
dec
lods
movsb
push
clc
jnp
fisttpll
adcb
xchg
mov
popa
loop
xchg
xchg
xor
inc
xchg
jne
mov
ret
cld
shrl
les
push
push
cld
test
ret
mov
push
stos
movsl
xor
xor
int
push
xchg
push
sub
ja
fstpl
cmpsb
pop
rep
popa
and
je
pop
dec
mov
adc
mov
test
pop
push
and
mov
fsubrl
dec
js
inc
push
xchg
jns
push
imul
es
lods
ljmp
xchg
loop
xchg
adc
jecxz
mov
lret
adc
andb
add
fisubs
mov
insb
gs
add
mov
sub
and
pop
addr16
adc
int
fs
cmc
subl
add
loope
mov
ja
cld
fdivs
xor
adc
dec
mov
or
icebp
stos
inc
fstl
xor
adc
enter
outsl
adc
xor
push
hlt
es
sbb
jecxz
lret
das
mov
cmp
adc
aad
xchg
xchg
je
push
test
xchg
mov
jge
test
inc
sbb
xor
xchg
and
sbb
testl
pop
mov
or
or
and
ss
and
xor
jle
adc
sub
aaa
js
jae
pop
outsb
add
aad
mov
mov
cmp
mov
mov
sub
mov
pop
out
jne
add
and
decb
cmp
dec
sbb
js
cmp
push
jge
inc
in
fidivrl
jne
inc
mov
push
sub
xor
mov
jl
std
and
inc
shr
adc
xor
lcall
testb
in
imull
aaa
leave
ljmp
push
inc
sar
pop
adc
jbe,pt
enter
cmp
fsubrs
cmp
jnp
cmp
push
lods
shr
arpl
cmp
push
jbe
inc
dec
dec
lret
xchg
enter
mov
jnp
cld
or
das
int3
cmpsb
ljmp
mov
test
scas
fdivl
scas
cmpsl
jp
push
imul
push
push
xchg
adc
or
push
cmp
inc
je
call
es
xlat
jmp
shld
les
xor
out
pop
mov
add
cli
dec
jne
nop
in
scas
inc
lds
pop
mul
loope
das
jle
das
xor
dec
bound
dec
fsts
loop
imul
mov
mov
mov
inc
stos
rorl
xor
sub
inc
aas
sbb
xor
or
pop
jle
jae
imul
add
cmc
jmp
aaa
sbb
mov
arpl
sti
jae
xchg
pushf
push
and
jle
or
andl
or
mov
cmp
movl
jne
jmp
sbb
fldt
sbb
or
test
sbb
stos
sahf
test
int3
mov
cltd
aad
xor
dec
mov
into
sub
or
mov
mov
jmp
in
add
mov
adcb
pop
push
dec
inc
mov
jp
and
cmp
lock
and
sbb
das
call
mov
sub
sahf
call
repz
dec
cltd
fcom
lods
popa
dec
movsl
addr16
mov
cmp
lret
mov
lret
arpl
ljmp
push
stos
mov
rorb
pop
mov
lds
or
dec
or
jnp
mov
mov
lods
inc
adc
fcomi
add
add
lock
pop
xorl
or
scas
jle
daa
add
lock
adc
jo
pavgw
mov
fimull
mov
bound
jp
dec
jnp
jg
dec
popa
dec
sbb
movsl
loop
jmp
jbe
xor
sbb
inc
notb
fsts
or
int3
sub
add
outsb
or
push
loopne
dec
fdivrl
ss
or
sbb
cmp
add
fcomi
add
sbb
hlt
in
xchg
jmp
daa
and
inc
popa
sub
and
enter
adc
or
jle
or
mov
jne
cmpb
pushf
loop
dec
cmp
adcl
xchg
fadd
pop
shlb
int
aam
mov
ss
lock
jne
shl
icebp
jno
ret
mov
std
scas
sti
pop
sub
sti
fnstenv
lds
scas
and
cmp
in
hlt
sar
mov
pop
in
fcoms
dec
mov
cli
cmp
iret
xor
std
cli
sahf
data16
nop
aas
mov
lods
idivb
insb
stc
movsb
mov
inc
es
xchg
loop
loopne
cld
stos
pop
and
repnz
cmp
in
jb
sahf
rcr
push
loop
dec
sbb
sub
inc
mov
ljmp
push
aas
or
pop
daa
adc
sub
push
lods
test
in
cmp
ror
sub
fisttpl
leave
cs
jo
jecxz
in
popf
xor
and
or
adc
or
test
pushl
mov
sbb
cmc
sbb
lret
test
scas
stc
sbb
xchg
push
mov
and
mov
cmp
add
mov
shl
movsl
jge
dec
jno
sub
xor
test
xor
or
xor
push
sbb
cld
nop
lret
add
cmp
aaa
arpl
push
test
adc
adc
push
data16
xchg
pushf
int3
mov
sbb
push
xchg
mov
movsb
je
inc
mov
rorl
adc
out
cmp
dec
mov
mov
out
push
push
adc
add
rorl
fstpt
xchg
add
fneni(8087
mov
push
andl
dec
mov
cltd
movsb
dec
lock
jno
mov
je
test
rclb
sbb
test
mov
add
sarl
mov
inc
insl
popf
mov
pop
leave
aaa
mov
sti
pop
dec
and
dec
and
jle
in
call
add
mov
hlt
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
adc
in
test
insl
repnz
pop
int
mov
mov
adc
rcl
int3
push
notb
loope
cli
adc
push
sub
cld
xor
and
jnp
inc
pop
scas
inc
push
int3
xor
pop
data16
xor
sbb
cmc
cmpb
adc
jmp
or
lods
fldcw
mov
jmp
xchg
push
pop
push
mov
lea
imul
sahf
inc
into
andl
dec
xor
das
mov
into
or
dec
push
ficompl
add
xchg
and
adc
aam
and
cmpsl
outsl
loop
out
sbb
jg
inc
in
fptan
jmp
dec
loope
movsl
aad
pop
inc
cmc
inc
adc
jmp
push
mov
ret
adc
cmp
push
mov
adc
pushf
inc
pushf
pop
mov
in
and
stos
jl
sbb
pop
in
jmp
push
fs
shrl
adc
test
pop
in
scas
sub
and
fcoml
xchg
jg
jbe
iret
xchg
xor
fildll
int
sbb
adc
pop
xchg
and
xchg
xchg
int3
outsb
mov
mov
sub
inc
movb
leave
cmp
cltd
xchg
jo
stc
jbe
insb
pop
and
std
jge
sbb
add
out
or
scas
addr16
movb
leave
mov
aas
dec
shll
popa
cmc
mov
pop
sbb
dec
mov
adc
into
popf
sub
or
pop
aam
pop
inc
inc
dec
in
lds
fstps
ja
jns
aaa
pop
jo
cmp
sarb
insl
adc
adc
pop
clc
sbb
cli
sub
pop
std
outsl
je
jl
jle
cmp
jle
adc
loopne
mov
push
xor
lock
inc
dec
dec
sbb
cmpsb
adc
mov
je
scas
outsb
sbb
xchg
adc
mov
addr16
pop
nop
clc
sub
mov
cmp
sub
push
adc
mov
mov
cld
dec
loop
xchg
pop
mov
and
sub
fdivs
fsubrs
xor
adc
cmpsl
lcall
xlat
inc
mov
imul
push
out
and
mov
pop
inc
pop
data16
test
mov
cmp
xchg
stos
adc
popa
lahf
jl
cmpsb
ss
rcr
test
inc
push
in
stc
xorb
in
xor
and
jns
fld
push
xchg
mov
mov
inc
inc
std
in
cmp
sbb
xchg
fildll
mov
mov
into
dec
mov
push
push
insb
mov
aad
psubusb
xor
and
inc
jle
xlat
adc
out
mov
sarl
jae
fisttpl
sub
das
mov
sahf
adc
jns
pushf
scas
test
xor
lock
addr16
adc
mov
pusha
iret
push
mov
mov
inc
pop
adc
adc
jnp
adc
imul
into
iret
mov
push
ljmp
and
andb
push
lods
repnz
es
push
adc
sub
enter
adc
into
decb
sbb
xchg
dec
cmp
sub
adc
ja
fcmovne
fdiv
mov
pop
and
cwtl
dec
addb
cli
mov
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
mov
sahf
adc
sbb
push
fistpll
push
fwait
repnz
movsb
push
push
or
addl
inc
iret
in
hlt
pop
xor
push
sbb
sub
out
out
mov
sti
test
fwait
adc
or
push
lds
mov
dec
aaa
xor
mov
jb
int3
test
and
dec
pop
bound
inc
cmp
lar
test
lods
or
aas
inc
fsubr
es
adc
adc
jno
call
inc
and
xor
or
jns
pop
xchg
jne
or
fmull
ds
or
xchg
inc
sbb
insl
out
sbb
push
xchg
data16
in
enter
call
sub
jbe
and
xchg
les
pushf
xchg
mov
insl
rorb
push
adc
xchg
mov
mov
shrl
xor
jbe
and
outsl
add
dec
xchg
adc
mov
xor
mov
into
add
jmp
out
fnsave
add
loope
pusha
rorl
and
mov
xlat
pop
pop
push
scas
jp
std
jo
in
outsb
popf
pop
dec
fs
hlt
xor
cmpsl
pop
repz
cs
mov
pop
es
fimull
and
jmp
mov
jne
or
xchg
lods
pop
mov
adc
stc
xchg
in
cmp
cs
mov
sub
ret
pop
gs
and
jge
loop
mov
mov
mov
cld
sbb
imul
call
ret
and
fists
addb
lods
ss
aaa
scas
int
mov
push
cwtl
pop
out
pop
and
jle
out
sahf
cmpsl
add
lret
scas
fiaddl
pop
push
fildll
dec
push
add
and
mov
loope
gs
out
fidivs
mov
lahf
iretw
lea
xor
popa
nop
xchg
xchg
mov
push
mov
sbb
mov
out
inc
dec
mov
int3
ss
mov
sub
or
scas
add
inc
test
dec
lock
inc
scas
insb
jl
pop
enter
lods
clc
dec
mov
sbb
cltd
dec
pop
lea
sarl
xor
clc
lahf
cwtl
je
fcompl
xchg
jae
lahf
aaa
mov
pop
stos
sbb
leave
inc
jmp
push
sti
scas
les
int3
mov
out
push
mov
data16
loopne
gs
fisttps
cmp
mov
inc
ds
xchg
dec
dec
orl
sub
mov
ret
inc
cmpsl
add
nop
cmp
mov
jle
cmpsb
lea
imul
and
and
xchg
or
fs
xchg
or
xchg
loope
std
xor
test
shl
arpl
pop
mov
lcall
subl
push
data16
and
pop
sub
cld
dec
mov
lret
pop
push
or
rcrl
icebp
scas
jnp
inc
jl
sub
pop
xor
sbb
mov
movsl
movl
cwtl
lds
test
fnsave
dec
insb
imul
sub
pop
icebp
sbb
jl
iret
in
add
xchg
imulb
push
or
mov
js
addr16
das
fsubrs
mov
mov
jmp
stos
inc
inc
jmp
cmpsl
les
adc
mov
dec
aad
int3
mov
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
fwait
dec
xchg
sbb
sahf
adc
sbb
rcr
push
cmp
jmp
xchg
inc
inc
xchg
popf
mov
lret
cmp
sbb
sbb
xchg
or
insl
push
and
inc
jne
adc
inc
std
jecxz
jae
mov
xor
rclb
lahf
in
call
in
leave
sub
mov
cmp
fisubrs
mov
fisttpll
movsb
and
stc
add
mov
cmp
mov
cwtl
mov
jae
or
or
jecxz
test
rolb
mov
inc
mov
lods
test
xor
mov
jge
fildl
sub
jg,pn
enter
mov
ret
jmp
and
xchg
mov
test
dec
lock
cli
xchg
mov
pop
mov
gs
cs
cmpsb
in
or
mov
or
das
shrl
cmpsb
loop
movsb
movsl
cmp
jl
stc
push
mov
push
subl
int3
scas
pusha
icebp
xchg
test
cli
loope
test
mov
mov
cmp
mov
sub
test
xor
out
leave
add
mov
add
repnz
inc
or
pop
mov
push
int
mov
jecxz
aas
in
stos
popf
or
pop
addr16
jno
dec
mov
iret
cmp
pop
push
aas
fidivl
lods
add
xchg
mov
and
sub
fs
imul
movsb
adcl
mov
imul
shrb
adc
add
mov
movsb
xor
cmp
outsl
jbe
movsl
add
mov
aam
sti
or
sub
ja
mov
lock
push
repnz
test
cmp
imul
push
int3
and
test
push
mov
insl
int3
mov
push
in
push
adc
push
mov
jo
mov
fwait
movsl
nop
insl
pushf
jb
lds
or
xor
std
xlat
filds
jns
cld
mov
leave
adc
jg
lods
add
mov
icebp
sub
cmpsb
leave
sti
push
vsubpd
aam
lcall
pop
adc
pop
push
or
and
fistps
dec
dec
adc
mov
outsb
push
ret
add
cmp
loopne
in
dec
int
xchg
outsb
pushf
or
adc
push
sbb
push
and
dec
inc
daa
mov
cmp
das
jno
lds
pop
push
int
lcall
mov
pop
lods
dec
stos
xchg
sti
imul
xor
shr
and
and
pop
fistps
xchg
mov
xchg
xor
and
lret
add
test
rorb
sbb
inc
cwtl
cli
jecxz
lcall
push
inc
adc
jne
aad
aad
xor
dec
xchg
pop
insb
les
pop
xchg
sub
arpl
dec
xor
push
jnp
scas
leave
add
std
mov
sub
mov
adc
fists
jne
fiaddl
push
test
out
push
or
data16
ret
negl
icebp
mov
sub
fldt
push
push
xor
or
cmp
pop
scas
pop
add
cmp
add
cmp
sub
jb
ds
add
mov
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
hlt
es
loop
jns
cmp
gs
cmp
mov
incl
adc
xor
or
cmp
fwait
adc
push
push
jp
cmp
dec
rolb
adc
jle
out
jae
mov
cld
push
ficompl
dec
xchg
daa
adc
scas
push
adc
mov
inc
insl
push
lret
inc
rolb
mov
scas
jb
bnd
clc
xchg
lret
rorb
cs
sbb
or
lock
jg
les
push
imul
inc
or
pop
and
push
mov
adc
popa
rclb
loopne
sbb
ss
test
pop
in
rcrl
pusha
mov
cmpsb
lret
adc
pusha
lods
sbb
and
mov
dec
std
je
popf
in
xchg
pop
in
xchg
cltd
cmp
and
fsubp
and
push
sbb
fcoml
fldenv
daa
xor
mov
push
adc
or
repz
scas
stos
pushf
insb
jo
sti
pop
sub
dec
loopne
jl
sbb
cli
sar
iret
lahf
das
jae
adc
ljmp
aad
sub
scas
shl
inc
sub
lock
daa
sub
fisttpll
fwait
mov
and
cmpsl
out
arpl
out
xchg
into
dec
sbb
jne
sbb
insl
out
fisttpll
push
add
xor
cmp
xchg
xchg
and
push
inc
les
mov
lret
aas
nop
fidivrs
and
inc
out
mov
and
outsb
add
insl
mov
xor
fistl
idivb
aaa
gs
pushf
xor
push
hlt
push
sbb
push
stc
movsl
dec
mov
xorl
sub
ja
dec
hlt
xchg
sub
push
fmuls
test
lret
aas
lret
jp
mov
mov
xchg
xor
mov
insl
mov
ffree
jge
mov
jmp
mov
sub
xchg
addr16
push
mov
cmp
push
or
mov
dec
shlb
fildl
adc
incl
inc
inc
ds
push
dec
sarb
sbb
das
mov
xchg
dec
cmp
hlt
dec
aas
or
mov
in
mov
push
shrl
add
call
push
inc
ljmp
push
mov
cmpsl
mov
bound
shll
jae
ret
iret
jb
and
ret
cmc
or
pop
fildl
cmpsb
pop
loop
mov
add
mov
outsl
sub
aad
lods
push
or
jne
jp
rcll
sub
pop
inc
push
sbb
pusha
and
es
scas
testb
pop
inc
sbb
int3
scas
sbbb
inc
nop
sti
cld
sub
mov
inc
xchg
pop
je
cwtl
push
xor
and
scas
lock
sub
int
xlat
dec
test
and
fcmovne
mov
and
or
jbe
enter
stc
lahf
inc
mov
push
insl
sub
mov
cwtl
nop
push
or
jp
fs
in
cmpsl
lahf
or
in
xor
mov
or
xchg
test
xchg
and
cmpsl
mov
mov
jns
ljmp
sti
shll
or
pop
jne
push
shlb
adc
xchg
sbb
out
mov
push
fs
rorb
enter
mov
test
push
push
xor
adc
clc
cmp
mov
gs
cmc
xor
stc
and
push
add
jge
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
pusha
popa
outsl
mov
rcrl
sahf
adc
sbb
jae
out
add
lret
sub
imul
shll
pushf
icebp
pop
leave
fistpll
jb
adc
and
rclb
inc
sub
xchg
inc
test
inc
mov
xchg
sti
mov
mov
mov
inc
and
or
lock
xchg
jb
test
adc
js
inc
jg
mov
xchg
mov
int
pop
mov
and
prefetch
sbb
mov
cmp
sub
pop
repz
jae
outsl
add
test
ss
adc
and
mov
stos
jno
push
loop
daa
ror
dec
shlb
push
or
mov
or
jmp
push
out
ss
loopne
jmp
jge
das
cltd
fisubs
adc
cs
xchg
shll
int3
xchg
fwait
insb
daa
loopne
sbb
dec
sub
dec
aad
mov
fisubrs
fwait
ret
sbb
cmp
cli
mov
int
cld
mov
shll
cmp
sbb
push
jmp
cwtl
xchg
mov
fldenv
xor
insb
mov
cmp
mov
cmp
add
data16
mov
test
ds
pop
jle
and
adc
sbb
int
push
adc
test
sbb
mov
sub
js
push
mov
insb
stos
inc
mov
ret
sbb
sub
cmp
loopne
xor
movsb
das
imul
pop
sbb
ljmp
pop
dec
mov
jne
add
xchg
mov
pop
ss
push
sub
fwait
lret
pop
ja
inc
mov
mov
fisubl
inc
cmp
jg
push
pop
push
outsl
xchg
and
mov
jb
mov
fisubs
add
ret
lds
popf
xor
pop
jmp
xchg
jnp
pop
sub
pop
push
push
fldl
inc
sbbl
xor
out
mov
xchg
movsb
jne
mov
xorb
mov
mov
xor
mov
rorl
xchg
dec
mov
push
mov
test
lret
inc
xor
inc
inc
push
cmp
sarl
push
scas
jge
fnstcw
adc
test
fistps
daa
ja
enter
pop
rolb
shll
les
sarl
and
aad
mov
inc
dec
inc
pop
inc
add
add
aam
das
in
xor
cmc
sbb
sarl
sbb
push
or
lret
mov
mov
into
jno
add
xor
add
stos
outsl
dec
sub
dec
inc
inc
sarb
push
mov
jl
jg
inc
nop
or
or
sti
popa
in
sub
pop
jne
inc
loope
imulb
mov
insb
insl
icebp
fs
push
pop
push
cmc
push
dec
fbld
add
int3
mov
xlat
sar
aas
in
icebp
aaa
bound
lods
xchg
stos
cmp
loopne
ret
adc
in
stos
jnp
lock
pop
inc
jne
push
cli
aas
enter
lret
adc
pushf
xchg
sub
imulb
sbb
rcrl
hlt
cmp
out
sub
repz
aam
int3
xor
push
pop
mov
insb
lcall
cwtl
gs
cld
jbe
sub
add
adc
push
in
mov
jge
xchg
sbb
push
mov
pop
aam
test
pop
mov
push
in
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
xchg
jl
mov
sbb
pop
fsub
inc
xchg
dec
or
jecxz
into
repz
fidivrs
les
add
dec
mov
in
pop
outsl
inc
xor
xchg
lds
xor
pop
xchg
mov
scas
jb
push
repz
mov
mov
arpl
adc
xor
pusha
shl
mov
inc
adcb
pushf
mov
inc
cli
test
popf
jge
cwtl
add
jns
mov
fs
int
mov
pop
jmp
mov
xchg
jle
aad
js
outsb
enter
inc
dec
push
aaa
loop
into
sub
mov
les
test
les
xchg
adc
shll
mov
ss
ret
subb
xchg
cmp
push
clc
jbe
sti
js
das
shrb
adc
sti
xchg
sub
or
cs
lea
mov
movsb
outsb
out
aam
sub
out
hlt
movsl
mov
shll
mov
ds
cltd
setp
adcl
popf
adc
pop
cmpsl
pop
or
arpl
push
test
and
pushf
mov
inc
xor
push
mov
ds
push
xor
sbb
scas
jl
sahf
lret
dec
push
fidivrl
fdivl
sbb
adc
js,pn
das
sahf
test
cmp
cmp
out
int3
lods
clc
repnz
add
cmp
addr16
rol
incb
cmpsl
andb
mov
call
jle
test
jbe
fldpi
dec
push
xor
cli
mov
lods
sub
sbb
aaa
pushf
jb
sub
mov
sbb
test
sbb
cltd
sbb
xlat
in
lea
mov
hlt
mov
loop
lods
mov
pop
pop
out
or
rorb
cmp
cmc
inc
adc
jns
popf
hlt
dec
mov
xchg
sbb
repz
out
cld
sahf
iret
add
sub
lret
jecxz
pushl
push
lcall
out
push
nop
cs
cmpsl
mov
cli
jns
cmpsl
aam
inc
out
cmp
mov
pop
jbe
lods
test
bound
sarl
lcall
jecxz
add
sti
lret
test
mov
sbb
lds
aas
push
mov
addl
mov
xchg
sub
mov
enter
frstor
jbe
ja
cmpsl
adc
push
xchg
adc
xchg
dec
xor
and
stc
loop
sbb
pop
xchg
push
pusha
jne
mov
in
push
mov
mov
cmp
jp
lods
test
inc
das
pop
mov
loopne
xchg
xchg
in
jbe
xlat
sysret
jge
stos
sub
inc
xchg
hlt
data16
mov
enter
std
push
movsb
sbb
cmp
loop
cwtl
imul
nop
stos
sub
dec
stos
sbb
sub
sbb
mov
insb
call
xchg
and
roll
push
xor
sub
ss
add
pop
sub
repz
and
mov
mov
mov
bound
mov
add
dec
insl
push
rcll
sbb
mov
cmp
lods
add
jo
cs
xchg
adc
leave
xor
cli
sub
push
icebp
std
sbb
xchg
and
mov
push
pop
dec
and
fwait
ret
bound
in
popa
mull
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
inc
mov
sahf
adc
sbb
fisubl
call
jg
sbb
fmull
cmp
jg
sbb
inc
push
jmp
pusha
ret
int
scas
lret
lock
inc
mov
inc
adc
mov
or
rcrb
aam
pop
ret
push
dec
movzbl
pushf
in
sub
sbb
popa
std
movsl
decl
sbb
jle
and
movsb
mov
push
dec
mov
dec
cltd
add
ss
jle
into
mov
sbb
fmull
jmp
lret
push
movsb
inc
sub
cltd
frstor
push
jmp
mov
test
mov
daa
lahf
mov
ret
fbld
jno
or
test
push
dec
repz
sahf
jno
jge
sub
insb
in
outsl
inc
cmp
push
xchg
stos
dec
mov
adc
jns
test
test
push
in
pop
test
sbb
or
aad
jne
cltd
stc
push
adc
in
jae
adc
or
std
mov
mov
mov
scas
insl
repnz
cli
movsl
sti
out
rclb
negb
test
jne
inc
jae
mov
pop
aas
clc
mov
mov
adc
inc
cltd
lods
mov
repnz
in
fucom
loopne
jns
push
imull
or
dec
mov
scas
outsl
mov
and
out
mov
fdivs
add
sub
mov
movsl
fs
inc
xchg
iret
cmpsl
pop
cld
les
dec
xor
push
das
mov
push
jg
pop
cmpsl
in
lea
xor
cmp
lcall
stos
mov
sub
mov
pushf
rorl
out
lock
lret
repnz
je
dec
and
xlat
lock
call
jle
sub
lahf
mov
add
xchg
pop
push
jbe
jg
dec
xchg
in
out
daa
gs
sbb
outsb
cmpsl
repnz
cmpsl
mov
and
lods
inc
adc
imul
insb
addr16
or
or
nop
add
mov
mov
jb
lcall
stos
add
jbe
ffree
sbb
mov
scas
jno
mov
dec
icebp
adc
push
cmp
orb
mov
lods
repnz
xor
jns
xchg
ljmp
xor
in
shrl
push
mov
pop
jge
mov
in
lods
sbb
cmp
orb
arpl
mov
loopne
jp
daa
cmpsl
mov
imul
loopne
xor
call
jge
aam
push
adc
and
inc
inc
aaa
hlt
add
dec
test
outsb
popf
rorl
dec
pop
bound
stos
mov
ret
pop
out
cs
jge
mov
jb
mov
inc
mov
stos
sub
mov
dec
xchg
fcomps
xor
dec
inc
jle
fisttpll
mov
push
fcmovb
cli
mov
push
outsb
movsl
cmp
mov
out
idivb
jge
scas
xor
loop
outsb
sbb
mov
mov
mov
sub
iret
dec
mov
shr
cs
sbb
inc
pop
icebp
ds
mov
xchg
add
jnp
fdivl
outsl
mov
cli
cmp
lret
std
enter
jge
mov
and
sbb
dec
mov
loopne
movsl
jns
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
adc
jo
test
sbb
out
std
stc
xor
fstps
imul
xor
mov
cli
pop
ds
cmpsb
add
out
xchg
add
sub
cld
mov
sahf
xchg
out
sub
jge
push
mov
xchg
mov
sub
lret
sbb
mov
rorl
dec
insl
push
jo
dec
mov
cmp
imul
sbb
ss
mov
inc
into
cld
push
shr
jmp
sub
loopne
lcall
jge
inc
cltd
lret
jns
or
addb
dec
add
mov
add
dec
repz
push
push
shlb
mov
cmpsb
rcrb
pop
enter
call
aaa
mov
sbb
xlat
clc
in
lret
xchg
jae,pn
pop
es
sbb
imul
addr16
adc
push
cmp
mov
push
and
or
adc
sbb
adc
mov
push
fs
xor
push
fstpl
lds
cmpsl
dec
add
insb
shlb
sub
lcall
and
pop
jns
mov
enter
fs
mov
or
adc
stc
test
push
insb
jecxz
xchg
and
out
push
or
lods
mov
test
and
popa
jg,pt
mov
mul
and
dec
lea
inc
dec
hlt
xor
push
pop
xchg
add
insb
jge
addr16
stos
rcl
xor
mov
lret
dec
movsl
sub
movsl
inc
lock
or
add
je
push
sub
mov
bound
mov
lea
inc
push
inc
cwtl
das
adc
in
cmp
call
sahf
add
sub
mov
inc
jns
rorb
test
out
cmp
test
scas
test
cmpsb
lcall
xchg
roll
xchg
movsl
shll
int
adc
addr16
push
rcrl
iret
pop
mov
std
mov
cltd
mov
pop
inc
loope
add
imul
aam
mov
inc
inc
inc
je
js
sub
or
cmpsb
imulb
popf
cmp
sub
aaa
clc
loopne
jl
mov
cmp
inc
pop
mov
rcrl
or
jl
mov
sbb
aad
cmp
inc
ja
fistl
ja
roll
call
inc
sbb
scas
mov
mov
lret
sub
in
das
outsb
fdivl
jl
xchg
es
scas
out
jne
or
les
adc
dec
int
push
sbb
mov
gs
or
cmpsl
ficomps
aam
rclb
xor
xchg
das
xlat
add
mov
popa
cmp
into
pop
inc
scas
lods
sbb
lahf
jmp
hlt
out
cmp
xchg
in
xor
lret
outsl
imul
insl
popa
cwtl
mov
xor
cmp
fwait
adc
mov
pop
cmp
loop
adc
mov
cmp
cld
rcll
adc
xchg
xchg
in
test
lcall
ret
add
test
fs
push
insl
lret
jbe
inc
add
mov
cmpsl
test
push
lret
addl
ja
cltd
jmp
jbe
adc
out
sbb
test
cmp
mov
add
stc
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
dec
shl
push
mov
sbb
incb
dec
std
arpl
inc
dec
rcrl
in
cmp
hlt
dec
dec
mov
jo
and
sub
fsts
loopne
pop
cmp
mov
jae
cltd
sub
dec
mov
pop
mov
push
fbld
pop
cmp
mov
rorb
jg
js
cmc
stc
cmp
loopne
jb
and
cmpsb
pop
out
cltd
push
int3
adcl
je
dec
fs
popa
and
ljmp
and
shr
push
sbb
inc
nop
xor
in
int
cmp
hlt
and
subb
test
std
push
ret
pop
add
mov
fcomip
xchg
sub
add
mov
fisubl
sub
in
js
lcall
mov
sub
xchg
adc
pop
pushw
dec
jge
xor
sbb
sbbb
mov
lcall
stc
pushw
data16
sarb
loope
daa
sbb
out
xchg
cwtl
inc
sbb
jo
xor
in
lahf
call
jle
pop
inc
xor
pop
popf
int
clc
sub
shlb
fwait
lds
inc
popa
sub
repz
mov
fiadds
mov
push
aas
pop
push
and
lds
adc
xor
movsb
int3
xchg
scas
xchg
cli
xor
outsl
add
push
fmull
bound
sub
cmp
xchg
pop
dec
in
test
ficompl
fwait
cmc
jl
mov
movsl
jb
push
repnz
notl
aad
sub
or
cltd
sub
movsb
mov
das
pop
pop
js
inc
ss
add
movq
test
xchg
xchg
add
mov
outsb
popa
dec
movsb
test
sub
or
cwtl
mov
ja
mov
into
sub
mov
das
sub
rcll
jmp
adcl
cmp
or
out
jle
scas
sbb
stos
xchg
pop
mov
incb
or
jo
xchg
arpl
xor
outsl
mov
and
rcl
orl
mov
movsl
sbb
sbbb
jmp
jnp
xchg
xchg
aam
fwait
test
adc
fnstenv
lret
and
daa
cmp
inc
xbegin
or
cmp
scas
jge
mov
cmc
sbb
add
pop
sub
xchg
sti
rcr
pop
sbb
push
lea
adc
lahf
add
pop
add
xchg
inc
push
mov
jge
mov
cmp
or
mov
or
cld
xchg
fs
or
insl
cmp
fiadds
lcall
and
add
adc
in
xchg
inc
inc
mov
scas
shll
add
xchg
push
cltd
cmp
fistpl
cmp
jno
es
adc
mov
std
ret
lret
movsb
xor
aaa
stos
sub
in
or
cmc
test
or
dec
stos
mov
arpl
cmp
cld
addr16
outsb
xchg
out
and
inc
out
cs
mov
push
and
in
sub
mov
hlt
les
or
push
int3
loop
dec
test
push
int3
or
loopne
ret
xchg
adc
mov
push
mov
test
lds
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
inc
xor
sub
pop
sbb
jp
lcall
pop
sub
and
xlat
cli
jmp
shr
push
lea
cmp
das
addr16
inc
out
push
pushf
call
decl
add
std
xchg
mov
mov
xchg
sub
add
notl
jmp
add
xor
jge
and
mov
insl
push
std
dec
cs
dec
lods
imul
test
jbe
mov
jl
and
add
adc
cmp
aaa
sub
rcrb
mov
push
sub
shrb
sti
out
out
testb
fildll
loopne
adc
mov
dec
in
push
adc
stc
test
push
dec
adc
push
add
aas
mov
rolb
mulb
test
fistps
inc
and
push
movsl
pop
and
push
int3
popa
mov
fs
xchg
bound
imul
loop
push
push
fadds
push
xor
fbld
adc
mov
ucomiss
inc
sub
or
cmp
into
cmc
cs
or
test
testb
xlat
push
inc
out
loopne
push
nop
repz
jnp
push
pop
fsts
push
xlat
or
into
and
loope
cmp
ret
xchg
xor
xchg
scas
pushf
fwait
sti
adc
mov
clc
insl
sti
mov
daa
add
add
into
lods
pop
sbb
std
fistl
jl
pop
mov
add
sub
enter
shll
or
mov
push
cs
lods
pop
push
inc
pop
jl
call
xchg
in
and
repz
imul
and
xor
outsb
clc
cld
xchg
psllw
xchg
or
cmp
shrl
inc
imul
lret
xchg
push
shlb
mov
sti
insb
push
mov
in
pop
inc
or
push
das
mov
adc
sbb
lret
inc
iret
inc
cmp
nop
lcall
sbbl
enter
cmp
jge
int3
loopnew,pn
aam
rorl
xchg
push
int
push
push
decb
dec
dec
lret
mov
cmc
pop
cmpsl
push
subb
dec
in
in
cmp
or
mov
std
ret
gs
xchg
jb
push
mov
mov
xchg
fstl
cmp
jp
pusha
push
and
mov
mov
jle
mov
sarl
mov
mov
mov
adc
sub
icebp
loopne
inc
cmpsl
std
sbb
test
leave
add
sbb
mov
repz
repnz
in
xlat
mov
mov
aas
pop
subl
in
cmpsl
adc
test
jl
subb
dec
sub
lods
and
cli
and
in
xchg
push
sub
dec
mov
xlat
or
mov
jmp
aad
lahf
scas
push
sub
popf
cmc
inc
jns
xor
fs
cltd
sarl
push
mov
lock
dec
in
mov
js
cltd
inc
test
sub
ficoms
sahf
stos
xor
xchg
sbb
jle
lds
sbb
mov
cli
js
ljmp
jg
jecxz
jge
inc
test
inc
call
mov
xor
xor
xlat
xlat
lods
fwait
sub
adc
jbe
ljmp
lods
out
cmpsl
mov
jmp
xor
mov
insl
push
mov
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
pop
sbb
sub
mov
ret
ja
sub
inc
inc
mov
jecxz
data16
lods
lcall
ret
lcall
mov
fwait
sbb
pop
cld
dec
addb
jne
aaa
and
inc
cmc
icebp
daa
xchg
and
orl
xchg
negb
sbb
in
dec
sbb
mov
mov
add
adc
lods
pushf
ror
pushf
pop
sub
mov
jae
sbb
cmp
dec
and
mov
xor
clc
mov
out
lea
sub
lea
int3
inc
dec
cmp
and
shl
movsl
stc
adc
sbb
or
add
mov
adc
adc
leave
dec
pop
cmp
aam
iret
outsb
and
aad
cmpsb
add
mov
insl
mov
pop
loopne
jg
sub
mov
mov
test
pop
dec
mov
lea
pusha
in
xorl
add
imul
stc
aaa
push
sahf
outsl
rorl
cs
inc
push
mov
bound
rorl
pop
jbe
inc
mov
aam
mov
scas
popa
hlt
in
sub
mov
push
jp
jmp
hlt
or
mov
cmp
jae
std
sub
pop
inc
add
pushf
loope
dec
sahf
nop
je
dec
lds
test
or
pop
out
lahf
fcoms
leave
inc
shll
mov
into
aas
mov
push
push
es
push
sbbl
test
lret
pop
addr16
inc
dec
int3
add
ret
fsubrl
std
inc
xchg
add
lods
jns
mov
lret
pop
stos
add
xor
or
sarb
xchg
scas
xchg
mov
lcall
enter
addl
test
iret
adc
orb
insl
fadds
push
lret
mov
add
xchg
pop
mov
xor
addr16
xchg
and
dec
nop
stos
jl
inc
fs
cmc
clc
cld
ret
ret
popa
push
dec
xlat
mov
and
dec
div
sub
sbbb
and
mov
xchg
test
stos
inc
aad
and
test
add
fstl
es
dec
les
int
cmpsl
cmp
fbstp
int
jp
push
int
mov
shlb
adc
mov
cmpsb
mov
add
sahf
or
call
mov
push
push
cmp
stos
or
pop
lods
push
or
jbe
pop
sbb
sub
xchg
cs
out
rcr
stc
rclb
push
mov
loop
jle
pop
in
mov
cmpsb
add
dec
scas
and
dec
add
push
hlt
adc
scas
lock
cmpsl
jno
arpl
int
xor
xchg
jne
stos
xor
je
js
cwtl
shlb
out
mull
jecxz
lock
jg
xor
push
push
maxps
mov
cmpsl
pop
test
lret
dec
and
add
mov
je
popa
cmp
mov
ljmp
ret
jl
fsubrl
sbb
adc
xchg
add
xor
mov
and
mov
enter
daa
jge
call
jne
lock
repnz
insb
test
push
inc
in
addb
jl
inc
dec
fwait
add
fcomps
lcall
xchg
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
out
in
or
sbb
cmp
fs
out
fmull
jno
add
and
and
mov
je
add
sbb
push
cmp
lret
cmpsb
and
idivl
dec
pusha
ds
push
push
repnz
cmp
arpl
popa
pushl
loope
xchg
push
out
or
stc
sub
inc
popf
or
daa
push
clc
push
or
or
insb
pop
cmp
pushf
or
ja
fs
clc
mov
sbb
and
sbb
mov
mov
push
in
dec
test
nop
andl
cmp
jg
loopne
pop
inc
sbb
inc
lock
xchg
xchg
adc
ja
dec
gs
mov
inc
add
add
and
into
xchg
dec
xchg
and
inc
mov
cmpsb
cmpsl
adc
fisttpll
jae
lods
pop
dec
sahf
fisubl
ss
clc
or
and
xor
xchg
outsb
jg
add
cltd
lods
xor
cmp
xor
ret
mov
lds
sbb
jne
les
insb
out
sub
mov
bound
addl
pusha
jp
in
in
in
cmp
cmp
int
loopne
push
push
andb
fwait
jns
loop
leave
mov
pop
cs
lock
xchg
adc
or
sbb
push
aaa
dec
fsts
movsb
mov
inc
mov
adc
jbe
shr
cmp
cmp
arpl
push
inc
mov
inc
sub
mov
leave
xchg
cmp
andb
inc
or
mov
outsb
cs
push
inc
mov
sbb
aad
xchg
orl
out
add
jns
imul
ja
pushf
xchg
cmpsl
and
jecxz
dec
adcb
jnp
push
mov
dec
pushf
mov
in
sti
dec
stos
xor
sbb
sbb
stos
lret
mov
aaa
mov
jp
xor
in
out
dec
cmpl
push
jne
cmp
lret
outsl
ret
aad
jne
pop
xorb
pop
pop
stos
jno
cltd
jne
or
aaa
jno
repnz
jecxz
testb
sbb
loope
jo
fisubl
inc
and
or
add
inc
xchg
jmp
xchg
fidivl
loope
sbb
xor
xor
aam
out
jae
xor
cmp
jbe
adc
imul
jl
movsl
in
pop
aaa
xchg
mov
sbb
xchg
adcl
loop
or
xor
or
int3
leave
mov
ficomps
or
and
fwait
cmp
filds
jmp
aam
js
pop
sbb
mov
repnz
dec
incb
subl
pop
pop
loop
add
sbb
push
sbb
pop
in
mov
adc
add
insl
es
push
inc
sbb
or
fdiv
lahf
dec
fisttps
jecxz
push
inc
mov
mov
inc
js
push
orb
adc
add
push
pop
mov
out
mov
dec
and
jb
les
fadds
test
cli
xchg
cmp
ja
dec
sarl
adc
out
shr
and
iret
sbb
sarb
lock
roll
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
cli
and
nop
test
sbb
mov
stc
push
or
jbe
xchg
les
loopne
xchg
outsb
jmp
and
aam
cmp
push
lea
mov
inc
movsb
ret
out
loopne
dec
loopne
ficoms
lods
mov
sbb
mov
and
mov
loopne
aad
addr16
repnz
fbld
out
popf
dec
mov
jmp
add
lods
std
xchg
and
shrl
mov
mov
xchg
xor
test
test
mov
leave
and
cmp
sub
aas
mov
mov
ret
mulb
pop
outsl
fsubs
rcl
or
inc
mov
pop
add
xchg
ret
popf
mov
inc
pop
push
push
or
cmc
mov
pop
and
mov
outsb
stc
daa
rcl
ljmp
fsubrs
les
adc
push
in
out
sarl
fldcw
gs
jge
fdivs
ljmp
jg
add
cwtl
add
in
pop
push
xchg
dec
stos
imul
mov
fcomp
xor
outsb
testl
mov
sub
jo
jne
xorl
sub
test
movl
orb
xchg
int
sbb
mov
xchg
and
xchg
or
or
mov
decb
sub
xor
sub
push
bound
cmc
mov
pusha
xchg
ret
push
scas
mov
decb
imul
rorl
pop
push
jl
push
pop
adc
or
cli
push
aaa
mov
xchg
aad
test
sbb
xchg
outsl
das
push
mov
cmc
mov
jle
out
rcrb
cmpsb
push
adc
xor
sbb
or
mov
cmp
sub
ja
sahf
lock
cmp
sbb
dec
dec
pop
jg
push
mov
and
mov
mov
cmp
pop
fcomip
sbbb
sti
arpl
sub
push
xor
or
xor
es
cli
sbb
sub
not
repz
outsb
lret
sbb
sbb
lret
mov
mov
pop
int
sbb
aaa
pop
mov
aad
es
mov
jbe
xchg
pop
inc
push
std
add
and
add
rcl
lods
push
cwtl
jmp
mov
stc
inc
scas
add
loope
rolb
pop
push
mov
push
pop
inc
xchg
les
call
iret
mov
adc
push
pop
icebp
leave
inc
mov
sbb
push
jge
dec
imul
xor
ret
insb
movsb
rorb
xchg
in
hlt
int
fisttpl
rcrl
pop
int
mov
mull
je
sbb
lret
push
push
lcall
jae
pusha
mov
pop
xchg
js
jl
xor
xor
push
and
loope
inc
outsb
and
add
xchg
cld
sbb
jae
mov
mov
pushf
movsl
jg
loope
mov
mov
movsb
outsl
jle
daa
dec
scas
or
repz
jecxz
sarl
push
sbb
sub
out
xor
xor
cs
jne
and
mov
addr16
and
or
mov
mov
and
mov
pop
inc
xchg
sbb
arpl
mov
movsl
mov
xor
xchg
rol
cmp
add
ljmp
fimuls
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
adc
jle
jge
sbb
ljmp
idivl
fcomps
sbb
insl
dec
loop
das
mov
sbb
mov
leave
sub
mov
dec
mov
ficompl
sbb
out
xorl
inc
in
cld
addl
mov
cmp
push
xlat
mov
in
fsubs
in
hlt
outsl
cmp
shr
cwtl
dec
add
and
popf
add
inc
add
inc
xchg
mov
xor
das
shrl
cmp
lods
les
jl
in
sub
cmp
ror
ret
lret
rol
scas
inc
out
and
pusha
rcll
cmp
sti
jns
cmp
stos
or
adc
xorb
mov
mov
mov
jg
fistps
fdiv
dec
in
and
inc
sub
call
jne
arpl
loopne
das
popa
daa
xchg
into
int3
lods
inc
cld
imul
mov
shrb
fwait
push
nop
sti
fidivl
test
ficoml
jg
xor
ja
les
jecxz
clc
aas
bound
jnp
and
dec
lock
dec
jle
add
dec
and
je
rolb
addb
mov
cltd
sahf
inc
add
xchg
add
and
mov
fistpll
xchg
repz
lahf
sbb
loope
fwait
sbb
scas
in
fmuls
dec
jbe
aam
cmp
lahf
outsl
lcall
push
adc
push
inc
or
dec
pusha
stc
jbe
and
loope
out
cmpsb
mov
pop
push
pusha
insl
jno
out
inc
and
jle
mov
aaa
push
lods
xchg
jno
fld
mov
data16
inc
out
inc
jo
data16
pop
fiadds
aas
pop
mov
scas
add
nop
fidivs
fidivl
adc
inc
daa
xor
popf
push
cmp
mov
in
mov
dec
inc
cli
mov
adc
sub
cwtl
xor
roll
add
aaa
scas
addl
insl
cmpl
sbb
scas
mov
les
adc
mov
push
xor
cmpsb
mov
xlat
adc
pusha
gs
pop
inc
jle
pusha
stos
dec
xor
push
dec
cmc
sbb
daa
sbb
fistpll
outsl
sbb
pop
xchg
sarb
clc
dec
ds
jno
stc
stc
dec
lahf
push
inc
out
sbb
and
xorb
mov
idivb
adc
cli
lock
pop
das
mov
dec
xchg
jae
roll
xchg
jecxz
enter
notl
stos
pop
popf
jmp
ficoml
in
rolb
call
and
hlt
cld
and
or
adc
mov
inc
out
roll
xchg
gs
lods
or
sbb
mov
push
jb
sar
cli
fnstcw
push
das
fcmovb
je
cmp
inc
inc
lcall
mov
decb
mov
mov
rcr
cmc
xlat
jmp
or
xchg
sarb
nop
pop
int
jno
mov
das
stos
sbb
mov
xchg
subb
pop
and
ret
or
and
inc
and
add
mov
iret
pop
xchg
inc
inc
arpl
rorl
nop
mov
dec
cmpsl
out
in
push
lods
ss
in
cmpl
rol
das
jmp
in
inc
xor
imul
lret
in
repz
jg
jb
pop
add
fldt
inc
int3
jmp
repnz
jmp
imul
pushf
pop
jle
push
mov
jne
sbb
xchg
xor
lock
cmp
mov
in
cltd
fstl
jle
incl
pushf
lods
in
pop
bnd
ljmp
js
in
test
shlb
mov
push
out
jmp
xchg
sbb
cs
or
cld
sbb
adc
pop
adc
aaa
andl
push
dec
jmp
inc
push
out
jg
ds
xchg
lret
out
scas
sbbb
xchg
dec
cltd
jne
mov
cmpsl
and
xor
stc
fadds
mov
mov
sbb
or
pop
push
aaa
nop
ret
addl
jnp
pusha
fs
leave
aad
mov
push
fsub
cmc
xchg
mov
jle
mov
aas
fwait
rol
clc
pushf
or
push
jne
stos
mov
ret
xchg
xchg
insl
mov
outsl
push
push
mov
pop
leave
jns
push
mov
fucomi
das
test
inc
mov
push
mov
add
scas
push
data16
cmp
xchg
int
dec
dec
mov
jge
out
jl
or
int
stos
shlb
mov
jbe
cli
movsb
sub
mov
cmc
popa
fstl
jmp
rorb
notb
push
leave
inc
mov
ja
mov
hlt
push
daa
bound
lcall
jg
sub
cltd
push
pop
das
test
out
addr16
pop
cld
xchg
sbb
inc
scas
outsb
add
fdivs
pop
mov
fnstenv
jge
sub
xor
mov
imul
ljmp
add
stos
adc
add
add
pop
xor
fiadds
jb
fs
test
inc
cli
mov
inc
push
xchg
mov
shlb
jecxz
cmpl
cmc
xor
sbb
mov
ret
adc
sbb
scas
or
jno
ror
scas
add
fisubrl
fisttpll
inc
mov
push
js
movsb
mov
add
xchg
aam
mov
iret
push
sbb
mov
or
or
add
outsb
adcb
in
fbstp
push
sbb
je
jbe
and
aam
outsb
cmpsl
inc
inc
test
ja
roll
addr16
ss
outsb
pushf
add
adc
inc
xchg
cvtpi2ps
pop
inc
movsl
dec
xlat
xchg
outsl
das
mov
mov
lods
pop
jge
and
outsb
cmp
inc
loope
test
adc
hlt
je
daa
jne
in
adc
stos
cmp
lahf
jle
test
addb
dec
movsl
mov
xor
testb
xor
movd
sbb
ret
sbb
pop
cs
lcall
mov
cs
mov
and
or
lea
mov
mov
or
popa
jmp
push
xchg
cmp
stc
and
push
lea
test
insb
mov
loope
ds
mov
mov
cmp
sbb
outsl
pusha
xor
pushf
push
lahf
fstpt
push
neg
mov
cmp
cltd
addb
dec
and
icebp
pop
ja
push
inc
cmp
sbb
popa
lods
dec
jbe
div
add
aaa
aam
movb
out
repnz
pop
fcmovnu
repnz
cmp
sub
mov
outsl
test
sarl
std
test
mov
popf
jl
xor
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
push
outsl
sbb
sahf
adc
sbb
pop
enter
lds
mov
aaa
fimuls
out
movsl
inc
adc
sub
cmp
aam
gs
sbb
inc
pop
jno
push
xor
push
lret
push
cmp
or
daa
and
lods
jg
aad
push
cld
pop
dec
add
aam
out
mov
into
mov
or
push
push
push
outsl
push
dec
or
jl
xchg
cmp
out
push
push
fldenv
mov
push
sub
mov
shll
fildl
es
lret
orb
loopne
imul
add
sahf
aad
and
sahf
adc
cmpsl
clc
push
icebp
aam
and
movsl
loopne
nop
adc
cs
addr16
mov
insb
in
sbb
insl
and
out
inc
cli
xchg
fbld
dec
into
scas
insl
sbb
dec
push
rorb
aam
mov
daa
mov
data16
xchg
repz
int
mov
daa
aad
inc
dec
sub
and
inc
movsb
repnz
mov
jae
movsl
mov
xor
and
fcomi
jle
sub
out
dec
cmp
dec
jle
dec
int
hlt
inc
ror
mov
ss
inc
and
sub
push
or
jl
inc
mov
sub
inc
push
lods
pop
push
imul
dec
xchg
pusha
in
scas
mov
cltd
xor
loopne
fbstp
dec
bound
pusha
cmp
add
dec
or
xchg
bound
dec
in
adc
out
pushf
push
ret
fs
call
shr
idivb
sub
jle
xor
cwtl
or
out
lock
dec
out
mov
cli
and
out
push
jnp
jmp
push
je
adc
stos
test
aaa
movsl
mov
dec
pop
in
mov
pop
xchg
rcrl
xor
adc
inc
push
ljmp
dec
push
sti
shll
dec
cld
mov
pop
ret
inc
mov
aam
sbb
scas
jmp
push
inc
inc
xlat
outsb
movsl
pusha
sahf
pop
cs
xchg
jge
test
xor
outsl
pop
jp
lea
out
push
mov
js
cmp
xchg
arpl
mov
mov
dec
addr16
es
pop
loope
andb
xchg
dec
or
cli
hlt
cmp
cmpsl
negb
or
jne
dec
mov
mov
xchg
adc
sbb
push
add
mov
xchg
jmp
test
mov
mov
stc
mov
loopne
xor
mov
out
icebp
xor
or
inc
jg
loope
out
xor
or
cld
movsb
mov
adc
cwtl
jno
sub
mov
inc
sti
daa
add
fisubrl
ret
push
mov
shl
in
jns
gs
jge
std
adc
idivl
shlb
xchg
sub
add
addr16
dec
fbstp
push
dec
test
popa
dec
sbbl
imul
xlat
cmpl
das
mov
nop
inc
push
imul
dec
sub
in
jl
cli
or
adc
mov
mov
push
stos
cmpsl
or
test
daa
test
lock
push
fisttps
lock
xchg
sbbl
insb
dec
xchg
push
jmp
xchg
loop
inc
icebp
ds
xchg
test
pusha
xchg
into
je
test
xchg
loop
iret
mov
rcll
push
push
idiv
mov
sbb
and
popf
arpl
pop
jnp
xor
popa
call
lcall
pop
je
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
jo
sbb
sahf
adc
sbb
or
push
sbb
cmp
es
scas
in
mov
jae
xor
mov
aam
adc
outsl
jns
enter
das
repnz
xchg
lcall
out
fwait
adc
test
mov
aad
cltd
pop
jb
out
mov
add
out
and
fnstcw
cmp
jbe
out
jnp
orb
dec
adcb
mov
les
lret
xchg
mov
lahf
or
out
in
dec
push
ret
not
loope
sub
jns
adc
mov
push
out
push
push
fdivrs
inc
xchg
mov
xchg
mov
sub
daa
jne
pop
xchg
rolb
imul
iret
adcb
imul
aam
or
sbb
xor
leave
clc
pop
sub
sub
iret
scas
xchg
pop
in
adc
push
mov
cli
pusha
cli
pop
outsl
aas
imul
cld
push
daa
loope
push
jg
daa
mov
out
push
mov
lret
cmp
cld
push
js
insl
mov
xorl
sub
lods
and
inc
mov
leave
mov
mov
sbb
scas
addr16
fidivrl
add
rcrl
xchg
mov
test
add
mov
ds
test
push
outsl
add
mov
test
pushf
repz
push
jmp
xor
mov
sub
or
sub
rclb
xchg
test
mov
roll
stos
outsb
int
jno
fdivs
insb
arpl
dec
cmc
cmpsb
call
jl
dec
movsl
push
movsb
cmp
push
fnstsw
movsl
incl
test
es
pushf
cltd
inc
je
xchg
fnstcw
add
mov
cwtl
lods
stos
scas
cltd
aam
call
enter
xor
jmp
adc
inc
pop
jno
xor
in
jo
dec
int3
or
pop
adc
xor
mov
cmp
ja
out
aaa
clc
loop
and
xor
lea
and
fs
mull
insl
lea
cmc
dec
xchg
mov
loope
push
es
mov
rcrl
push
lret
push
fisubrs
ljmp
rcl
andb
push
out
and
dec
dec
cmp
outsb
clc
mov
int
pop
pop
cmpsl
adc
out
in
cs
das
fsubr
pop
outsl
and
adc
loop
inc
lods
mov
repnz
loope
inc
clc
shll
push
mov
mov
pop
shr
shrl
xchg
arpl
mov
mov
mov
insl
or
mov
jnp
mov
xchg
fistpl
loop
outsl
push
mov
jbe
ret
aad
mov
xlat
sub
aaa
cmp
loop
rcrb
cmp
call
inc
cmp
cltd
xchg
dec
test
sub
push
or
jb
xchg
mov
cs
fstpt
xchg
dec
hlt
nop
adcb
stc
fdiv
int
cld
xor
xor
pcmpgtw
cmp
scas
cmp
xor
out
psrlw
sub
push
dec
pop
cmpb
inc
inc
loop
lcall
daa
pop
aam
xchg
popa
test
pop
mov
and
imul
pop
xchg
rcrb
adc
scas
cmp
add
add
movsb
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
jle
stc
loopne
cld
jne
aaa
daa
pushf
inc
mov
fisubl
leave
jno
call
sub
xchg
adc
loopne
mov
fisubl
sbb
push
add
dec
rcl
mov
orb
push
in
sub
lds
aad
mov
and
ss
mov
dec
iret
fwait
loope
mov
stos
dec
fldcw
ja
test
mov
cmpb
or
mov
psubusw
aas
lds
jbe
mov
and
pushf
mov
ljmp
mov
and
push
js
pop
sub
jmp
sbb
les
jne
outsb
xor
jno
pop
jae
jmp
pop
out
xchg
dec
adc
call
mov
push
pop
sbb
inc
data16
mov
xchg
iret
and
daa
in
xor
shrl
popf
cmpsb
lods
shlb
jae
pop
inc
imul
or
mov
lock
xchg
pop
or
or
fwait
cmp
mov
mov
lods
das
xor
xchg
test
jo
in
cmp
ja
mov
mov
dec
sbb
fnclex
cmc
inc
xor
sub
shrb
sbb
fildl
adc
sahf
jb
js
cmp
mov
cwtl
andb
stc
fwait
decb
dec
add
sub
test
mov
roll
jnp
pop
gs
in
pop
mov
outsb
repz
pop
dec
pop
pushf
jge
ja
xor
adc
jp
fwait
xor
or
out
dec
enter
jge
mov
in
push
lods
sub
cmpsb
push
test
pop
out
lods
stc
popf
in
fstl
lods
in
ret
ds
sub
imul
sar
int3
dec
sarl
sti
pop
cmp
push
jae
mov
das
mov
data16
movsl
movsb
mov
push
dec
test
push
dec
adc
jno
inc
adc
sub
mov
mov
mov
sbb
fdivp
inc
adc
cli
subl
xor
or
repnz
jl
add
leave
out
cmp
aam
iret
xchg
dec
out
arpl
add
sub
jno
and
cltd
subl
sbb
dec
ds
pop
pop
inc
fistpl
push
xchg
xor
sub
inc
dec
xor
xlat
mov
push
jmp
push
ret
aam
addb
dec
scas
test
fdivl
push
ljmp
mulb
testb
shll
xor
xchg
scas
inc
mov
iret
fwait
pop
testb
mov
aas
lds
enter
and
xor
in
cli
inc
sub
xor
es
cmp
pop
mov
pop
in
in
lods
mov
add
push
sbb
pop
outsb
int3
iret
andl
pop
xor
add
lods
ret
enter
lods
out
hlt
cmp
mov
ret
pop
push
lods
push
pushw
cmp
int3
pop
cmp
add
fdiv
in
cwtl
aaa
cmpsl
jl
cmp
adc
push
inc
or
lcall
mov
adc
fadds
mov
pop
in
loope
inc
fsubp
dec
icebp
test
adc
mov
mov
sub
fstpl
data16
mov
mov
jp
ret
dec
xchg
call
jge
xchg
testb
loopne
divl
scas
rcrb
inc
mov
mov
jmp
pop
jno
mov
xchg
mov
mov
sahf
adc
sbb
mov
mov
inc
jae
pop
pop
or
mov
js
popf
xor
mull
fnsave
mov
lods
lret
aam
lahf
sbb
xchg
cmc
hlt
ja
fs
fdiv
outsb
mov
jb
jmp
outsb
lret
fnstcw
data16
cmp
insl
and
jb
pop
push
fists
fidivrs
sti
and
ss
mov
out
sub
js
sarb
push
jno
fs
iret
mov
dec
adc
xorb
int3
mov
aas
and
fbld
pop
jp
push
cmp
xor
cmp
cmc
xor
and
iret
sub
aaa
adc
imul
add
xchg
out
adc
xchg
pop
lods
aam
xor
sub
push
lcall
pop
xchg
mov
aam
xchg
test
adc
and
add
nop
test
in
enter
inc
jbe
add
xor
add
imul
sahf
add
dec
mov
out
inc
pop
mov
pop
jnp
xor
add
test
push
and
inc
xor
jmp
bound
push
inc
pop
leave
shll
xchg
add
mov
scas
mov
sbb
sbb
add
pop
lock
lea
scas
mov
aam
pusha
push
test
fnstsw
std
jmp
add
leave
xor
push
mov
insl
add
mov
stos
pop
xchg
addr16
xchg
push
nop
into
mov
loope
dec
mov
jp
cmp
cmp
xchg
cmp
into
push
in
cmpsb
cmpsl
xor
cs
or
cmp
stc
mov
std
adc
xchg
lods
je
popa
nop
lret
cmc
mov
add
call
pop
mov
cmp
xlat
es
add
aaa
pop
mov
in
out
mov
popa
xchg
bound
data16
or
addr16
lods
das
fs
push
or
js
out
jmp
mov
sub
inc
push
cmp
xchg
icebp
lods
stos
loope
and
jno,pt
xor
mov
sbb
push
cmc
jp
sti
adc
inc
popa
inc
aas
rclb
ret
pop
sub
mov
push
mov
in
pop
out
hlt
or
sub
fcomps
insb
cmovg
ficoml
xchg
ret
aaa
jp
and
inc
xchg
adc
push
jl
push
fwait
or
jnp
add
je
shr
lret
and
mov
popa
btr
mov
cmp
add
dec
std
push
mov
ja
and
fwait
das
test
jecxz
dec
loopne
nop
jp
inc
dec
xlat
sbb
mov
out
mov
aam
clc
push
mov
aam
xchg
push
out
pushf
clc
cwtl
sub
adc
adc
outsl
jl
mov
xorb
adc
inc
mov
dec
cmp
in
fildl
in
cmpsb
dec
loopne
dec
jle
inc
outsb
push
push
jp
loopne
cmp
sbb
repz
fisttpll
sbb
hlt
into
ja
cmp
jne
xchg
mov
mov
sar
add
loop
movsb
cmpsl
jge
mov
sahf
movsl
popf
cmp
adc
inc
add
push
into
pop
push
sub
add
fcoms
ss
pusha
cltd
mov
mov
push
aam
fldenv
mov
or
adc
ljmp
test
xchg
pop
jo
stos
subl
mov
push
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
jae
inc
mov
sahf
adc
sbb
mov
mov
mov
add
push
mov
mov
sbb
sbb
xor
shlb
adc
test
pop
sub
repnz
decb
xlat
mov
sbb
sub
rol
repz
jb
or
pop
in
dec
cmpb
mov
stos
and
cli
inc
mov
adc
data16
in
ss
in
movsb
shlb
jmp
pusha
sahf
jg
and
jno
nop
xchg
xor
outsb
fildl
lds
adc
xor
testl
and
mov
xchg
iret
sub
mov
aaa
mull
xor
sbb
repz
lods
adc
and
or
in
call
sub
imul
and
arpl
mov
mov
mov
xchg
mov
mov
das
jne
push
aad
test
lahf
mov
pop
cmp
jno
in
xchg
mov
or
lods
and
mov
xchg
sbb
add
xchg
dec
outsb
xchg
out
lcall
lret
jecxz
push
fdivs
lcall
test
inc
pushf
adc
push
sbb
idiv
adc
xor
push
fcmovbe
lds
clc
mov
rdpmc
shlb
mov
mov
movsb
in
imul
movsb
xor
xchg
xchg
mov
dec
lock
arpl
clc
adc
jg
das
adc
sbb
test
sbb
mov
cld
inc
out
jp
ds
and
insl
mov
fildll
popa
sbb
pop
lock
cs
pusha
inc
mov
pop
pmulhw
or
in
sub
sahf
aaa
mov
mov
mov
je
push
sub
popf
rolb
ja
dec
sbb
lret
lods
sub
sub
dec
mov
jp
jle
inc
inc
popa
mov
add
stos
xchg
out
mov
imul
testl
pop
imul
and
inc
inc
popa
popa
inc
push
add
je
imul
popf
dec
fisttpl
cs
out
push
add
mov
cli
add
pop
aas
jmp
pop
jecxz
leave
xchg
fwait
nop
mov
xchg
mov
add
mov
sbb
and
insl
fstps
add
lret
cltd
jbe
pop
mov
sbb
gs
and
and
jl
and
pushf
xchg
dec
sbb
das
xchg
xchg
cld
neg
xchg
sub
push
pop
cmc
sbb
add
fildl
rep
iret
insl
jmp
mov
push
push
sub
dec
ljmp
leave
sbb
and
mov
fs
inc
ljmp
jmp
popl
pop
iret
cmp
sbb
add
mov
fisubrl
fwait
sub
mov
xchg
movsl
bound
mov
dec
enter
and
mov
ret
imul
ds
insl
push
and
test
and
and
out
fdivl
or
stos
sub
call
xchg
sbb
in
push
mov
je
movsl
inc
push
je
jnp
fidivs
dec
sti
jl
mov
cmp
iret
leave
add
adc
jl
dec
cli
push
pop
inc
lret
out
push
dec
mov
xor
out
and
stos
stos
lds
nop
cmp
mov
sbb
mov
cmp
adc
sub
jp
and
rorb
movsb
ret
rorl
add
add
and
sbb
aas
add
mov
sahf
adc
sbb
mov
inc
lcall
mov
aaa
mov
testb
repz
mov
movsl
test
subb
xchg
push
fcmovnu
into
imulb
sti
push
arpl
dec
shrl
mov
outsl
jle
mov
loope
pop
push
xor
sub
xlat
lahf
lods
dec
dec
and
stos
data16
xchg
xchg
int3
shl
pop
mov
mov
ljmp
lret
jbe
and
xchg
add
movsb
jecxz
popl
mov
punpcklwd
pop
in
adc
pusha
pusha
or
sub
data16
push
xchg
inc
jne
sub
ret
adc
sbb
jbe
push
gs
cmp
or
jp
cmp
sbb
sub
xchg
das
add
cmpsb
sbb
cwtl
loopne
pusha
aam
xor
jle
fcompl
mov
push
fldcw
fiadds
dec
dec
hlt
sub
push
mov
ret
outsb
push
cmp
andb
repz
xchg
dec
cmpsb
adc
xchg
inc
cmp
cltd
cmp
iret
cmc
out
fsubrl
and
inc
gs
les
lds
dec
lock
and
mov
pushf
movsb
filds
subb
in
sub
lret
frstor
das
arpl
inc
int
sbb
inc
add
sarb
inc
mov
mov
jns
xchg
mov
insl
test
fdivrs
test
mov
popf
mov
lret
pop
test
mov
or
sbb
mov
fwait
ret
fists
mov
or
int3
lock
sbb
xlat
movsb
icebp
enter
cmp
sub
jne
pop
push
fsts
inc
out
pop
int
jmp
jnp
push
cmp
pop
scas
add
adc
pushf
cmp
fstpt
lods
popa
test
sub
fucomip
jne
jbe
imul
ret
rcl
iret
sub
pop
sbb
in
out
push
push
out
sbb
add
sarl
cmp
add
bnd
shll
push
fwait
jo
adc
dec
jns
adc
cmp
bound
or
dec
fwait
push
call
pop
jge
sub
nop
lock
xchg
fisubs
negl
or
xchg
mov
gs
cld
jno
outsb
int3
in
mov
aam
mov
cwtl
pusha
cmp
mov
adc
sub
rclb
call
sub
jae
dec
push
mov
mov
xchg
ret
out
mov
or
jns
or
sub
or
sbb
dec
xor
mov
push
sbb
dec
xchg
inc
cli
out
and
mov
xchg
cmp
ds
push
pusha
add
std
stc
xor
pushl
push
lcall
xchg
repnz
cmp
sub
cmp
add
not
and
aad
arpl
jns
or
fidivs
fwait
cmp
sub
subb
jo
loop
movsb
xchg
in
fistpl
push
es
cld
push
adc
stc
or
jmp
sub
dec
mov
add
insb
loopne
lret
adc
and
inc
int3
clc
push
fimull
jl
inc
push
or
cmpsb
xor
xchg
add
shrl
out
push
shrb
xor
sub
mov
shll
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
mov
mov
sahf
adc
sbb
push
mov
push
subl
cmpsb
cmp
mov
mov
sbb
dec
out
ljmp
dec
mov
push
pop
mov
pop
loopne
test
pushf
sbbl
pushf
shrl
cmp
push
ja
jmp
es
jae
sahf
addr16
inc
jnp
ret
add
lea
inc
dec
add
ret
mov
enter
sahf
cmpsb
movsl
aas
loope
jecxz
push
dec
push
mov
loopne
xor
aad
popa
adc
adc
xor
ss
mov
push
aas
sar
enter
call
xor
pop
loopne
pop
lods
mov
mov
sbb
out
int
mov
out
pop
std
jo
shr
lods
outsb
fadd
aam
popf
ret
mov
hlt
test
ljmp
in
cs
dec
andb
jp
cltd
dec
xor
jmp
iret
jl
insl
les
sbb
pop
lods
xlat
xor
inc
sub
pop
push
mov
out
mov
ret
cmp
and
iret
movsb
xchg
outsb
jno
cltd
ja
leave
and
ja
mov
movsl
ret
lret
nop
dec
lahf
into
xor
push
dec
scas
xor
aad
movsb
and
dec
mov
cltd
push
inc
mov
lods
lret
mov
repz
mov
mov
fidivs
push
or
cltd
decl
jno
lods
cmp
movsb
mov
xor
stos
push
jp
sub
xor
in
addb
xor
pcmpeqb
pop
sbb
cmpsl
jae
add
dec
fists
dec
xor
ljmp
nop
push
jge
loop
mov
and
cmp
jl
loop
sbb
jmp
mov
xlat
mov
and
aas
test
jmp
and
ret
cmc
cmp
fldt
in
and
xor
sbb
fwait
lock
mov
in
sbb
sahf
jg
add
je
and
loope
jg
cmp
int
xor
pop
inc
inc
sub
push
in
jmp
sti
inc
adc
mov
imul
in
xchg
loopne
subl
mov
xor
test
je
xor
xchg
outsb
push
iret
cmp
js
mov
mov
push
aaa
jle
dec
leave
bound
rcll
inc
mov
in
insl
in
enter
and
jmp
jecxz
stos
std
push
dec
test
ds
sub
cmc
pop
test
fs
ljmp
ja
mov
in
mov
icebp
pop
ds
shlb
ja
loop
dec
addr16
or
int3
in
cltd
loope
ret
pop
es
rcll
jbe
scas
adc
push
jae
adc
mov
std
in
loopne
test
add
insl
shr
sbb
scas
push
or
lock
scas
clc
inc
mov
daa
jmp
mov
inc
push
jle
dec
mov
fcomi
xchg
repnz
popf
arpl
clc
inc
dec
jl
push
stc
ret
pop
out
sub
cwtl
outsb
or
lret
inc
jb
ljmp
enter
arpl
push
out
mov
insb
pop
popa
movsl
inc
and
jno
cwtl
xor
roll
mov
push
jae
fnsave
jae
icebp
mov
and
mov
jb
aaa
adc
rorb
ret
test
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
stos
int
sbb
sahf
adc
sbb
jmp
adcb
mov
inc
addr16
ja
loope
push
xchg
xor
mov
das
pop
shlb
lods
xor
adc
test
jle
inc
pop
dec
add
rolb
jecxz
jnp
scas
jl
sbb
jecxz
jbe
out
push
mov
shrl
cmp
xchg
inc
lds
int
rcr
fdivr
out
push
sub
mov
pop
inc
mov
lods
jnp
jmp
jecxz
pop
rorl
daa
sbb
mov
fdivrl
sub
fsubrs
sbb
cs
mov
ss
jne
in
stos
loopne
sarl
add
testl
shll
lret
jp
cli
lods
jle
enter
dec
xchg
mov
jle
sub
push
mov
and
mov
call
je
xchg
lock
pop
fwait
dec
mov
pop
and
aam
jle
mov
sub
loope
and
stc
test
xchg
stos
xchg
mov
push
adc
mov
cmc
icebp
int
dec
mov
rcr
ljmp
scas
sar
popl
fisttpl
in
push
pop
addl
dec
rolb
daa
push
in
lods
cmp
adc
jge
pop
scas
mov
int
enter
inc
push
xlat
push
fldcw
xchg
push
dec
add
add
jo
or
outsl
xchg
pop
repnz
gs
loope
outsb
dec
dec
sbb
ret
xchg
or
push
sub
add
clc
xor
subl
stos
xor
stc
and
ds
test
cmp
movsl
pop
mov
pop
pop
jge
pusha
lods
dec
xor
xor
mov
push
icebp
in
dec
inc
mov
lods
mov
dec
fdivs
outsb
adc
insl
sub
pop
aas
adc
andb
mov
lods
add
data16
lret
mov
imul
repnz
jge
js
jecxz
data16
dec
roll
jns
xor
mov
fstpl
jno
jns
xlat
fcomi
mov
inc
loopne
adc
mov
scas
fistps
add
popa
and
ret
shl
mov
mov
xor
jne
popfw
stc
notb
mov
mov
in
push
add
ret
mov
test
jns
mov
cld
mov
cli
xchg
out
jae
insl
and
jle
pushf
lahf
dec
or
or
sub
testl
jp
mov
shll
xchg
sbb
cmpsl
fstl
sti
pop
mov
loopne
push
mov
sub
or
inc
jne
xlat
daa
xor
stc
bound
sbb
cwtl
push
lods
mov
xchg
js
loope
cmp
lds
cld
into
mov
inc
test
mov
aam
icebp
add
and
inc
cli
dec
addr16
xchg
clc
or
test
movlhps
les
cmp
js
cmp
ja
pop
sub
repnz
push
movsb
cmp
lds
hlt
add
lret
pop
movsb
lods
jb
test
lods
popf
push
dec
stos
push
dec
das
imul
lcall
push
cmp
mov
fisttps
aas
fadd
pop
push
negb
stos
imulb
fimull
jecxz
lods
dec
inc
push
pop
mov
jecxz
add
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
xor
shll
adc
sbb
stos
xor
cld
ljmp
add
xchg
mov
pop
pop
push
negb
adc
sub
push
pop
pop
push
rorb
sbb
sbb
ljmp
mov
mov
jo
pop
ss
cld
arpl
roll
lret
ficoml
dec
and
gs
sarl
lahf
push
and
jno
push
fidivrs
mov
test
push
jmp
out
jb
shrb
inc
xchg
push
xorl
inc
inc
jno
jne
cmpsl
pop
lock
fimuls
and
ljmp
cmp
dec
xor
test
jns
imul
push
adc
jmp
dec
push
insl
popf
movsl
mov
dec
lret
mov
adc
push
sbb
xlat
test
arpl
imul
gs
je
testl
pop
pop
test
cmp
fdivl
cli
jno
les
add
add
hlt
sbb
rcl
lock
dec
or
stos
popa
jle
dec
cmp
enter
aad
cmpsb
xor
aad
mov
sbbb
fnstenv
popf
testl
cmpsl
shrl
cmp
mov
pop
jo
test
stos
les
cmp
hlt
xchg
out
push
sbb
cmpl
rol
jb
jmp
sub
and
push
and
fwait
into
adc
sub
add
pop
push
outsb
stc
lds
rclb
ss
rorb
mov
inc
or
sbb
fcoms
scas
dec
cmp
ds
adc
in
test
or
adc
cmp
lcall
jmp
sub
out
cmp
inc
aad
sbb
aaa
test
mov
mov
inc
cmpsb
outsl
das
mov
xchg
inc
repz
jnp
test
gs
mov
bound
jo
mov
pop
mov
ds
mov
dec
push
pop
aam
outsb
out
iret
sti
pop
inc
daa
dec
fistpl
cmp
movsb
push
jne
stc
andl
add
test
bound
adc
and
out
lret
push
cmc
cmp
adc
push
mov
xchg
mov
daa
lret
rdmsr
adc
call
sti
and
push
xchg
in
jmp
cltd
repz
xchg
loop
cmovs
xor
out
add
les
mov
fmull
mov
sub
je
iret
mov
rol
cmpsb
imul
xchg
pop
cld
rclb
sub
bound
sarb
add
clc
cs
fcom
adc
outsl
mov
sbb
inc
scas
adc
dec
stos
nop
push
shl
jnp
insb
test
and
ror
cmc
sti
int3
pushf
sbb
icebp
out
in
mov
mov
sub
sub
push
scas
cmc
sahf
dec
sub
jnp
push
jl
data16
dec
test
mov
mov
movsl
add
push
pop
pop
mov
mov
or
sub
cmp
add
xor
fbstp
sub
ret
and
fimull
cmp
inc
daa
pop
adc
les
jb
int3
cmpsb
mov
inc
hlt
xchg
jb
cltd
in
gs
jno
popl
jle
push
rolb
push
movl
dec
add
lods
enter
add
ljmp
out
xor
jmp
sbb
jmp
ljmp
jo
sub
sbb
pop
xor
push
push
stos
or
xchg
cmp
xlat
push
movl
dec
fisubrs
insl
mov
fisubrl
adc
inc
or
pop
push
iret
bound
add
mov
sbb
lcall
mov
xchg
es
mov
sub
fistpll
rcr
and
aam
inc
sub
push
xor
aaa
and
jmp
xchg
fdivrs
fdivrs
insb
adc
adc
cmp
test
mov
psadbw
mov
pop
and
test
repz
popf
pmaxsw
test
das
mov
mov
or
sub
adc
dec
pop
add
in
addl
push
cmpsb
inc
jle
jmp
push
and
pushl
or
mov
shrb
scas
xor
daa
gs
pop
adc
outsb
popa
jb
stos
aaa
xchg
mov
in
mov
ljmp
jmp
pop
xlat
stc
in
dec
xor
or
mov
lea
testl
pop
pop
orl
pop
and
mov
xor
dec
pop
out
arpl
stos
lret
push
popa
inc
cmp
mov
lods
pop
cli
jecxz
lock
sbb
mov
or
fmull
add
clc
xchg
pushf
iret
dec
in
lock
cmp
pop
push
cmp
negl
lcall
inc
jl
rorb
in
cmp
lds
pop
jmp
inc
int
ret
or
hlt
sbb
repnz
pop
sti
insl
ret
mov
sub
adc
rcr
pop
ds
test
inc
lahf
mov
mov
add
push
rclb
mov
mov
and
xor
testb
mov
fcmovne
xchg
shl
fs
or
push
sub
pushf
xor
popf
mov
fdivrs
jp
jbe
repnz
lock
jo
adc
dec
inc
ds
push
mov
xor
imul
jne
nopl
cld
push
in
fs
push
ret
pop
imul
call
movsl
jbe
jo
push
cmp
dec
rcr
mov
sbb
push
xor
ret
rclb
cmp
dec
fildl
push
repz
push
adc
ds
lods
add
cmp
inc
test
xchg
icebp
imul
sub
icebp
inc
add
jae
mov
rolb
adcl
adc
rcl
push
mov
and
jl
hlt
popf
ret
scas
cmp
loope
sbb
rcl
in
or
iret
pop
pop
inc
add
cli
shll
das
ss
or
xchg
ljmp
inc
sahf
es
shrl
pop
inc
ret
int
inc
lds
pop
outsl
cltd
rcrl
movsb
cmp
push
imul
inc
fstl
inc
sbb
mov
dec
cmp
xor
lods
data16
shll
push
fiaddl
xchg
mov
mov
jns
scas
pop
jno
fmul
pop
data16
push
jl
ljmp
adc
xchg
xlat
outsl
jle
pop
lahf
pop
idivl
and
jmp
out
call
dec
cltd
insl
leave
popa
cmp
xlat
xchg
in
lock
test
pushf
add
adc
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
into
xor
outsb
adc
sbb
add
jecxz
lds
in
mov
aaa
push
fnsave
idivb
mov
push
aad
ja
dec
cli
aaa
jnp
sbb
cmp
mov
ss
insb
lcall
xlat
mov
pop
xchg
xchg
sbb
xor
outsb
xchg
vmovaps
into
roll
dec
scas
jmp
fstp
pop
xor
jecxz
dec
iret
jbe
loop
incl
dec
lds
lret
and
xor
fldcw
jge
fcmovbe
pop
push
push
mov
push
xor
mov
cld
pop
ljmp
or
push
jge
pop
mov
mov
data16
addb
ja
call
xchg
inc
add
outsb
jae
xchg
add
add
dec
lods
mov
sarl
aam
bound
xchg
or
sbb
bound
push
xchg
dec
cmp
jae
lods
out
mov
add
jnp
mov
fmuls
divb
mov
pushf
cmp
outsl
mov
xchg
rsm
shll
cmp
lret
imull
jge
into
jno
push
inc
push
or
pop
ret
cmp
cwtl
adc
add
pop
cmp
cmp
and
cltd
js
std
ljmp
lret
jge
inc
out
sub
repnz
jmp
mov
push
mov
scas
push
mov
xor
xchg
iret
mov
outsb
pop
cmc
or
xor
in
fisubrl
lods
jecxz
xchg
clc
push
xchg
cwtl
sbbb
outsl
movsl
aam
int3
or
jno
or
fildl
clc
pop
roll
pusha
push
xor
iret
mov
or
loopne
mov
cmpsb
xor
repnz
xchg
cmpsl
fmull
dec
insb
push
inc
popf
jl
push
mov
out
imul
bnd
jno
roll
mov
mov
push
xlat
xchg
insb
or
ljmp
arpl
jg
jne
pop
sub
outsl
testb
xor
addr16
lods
fimull
fwait
outsb
out
mov
mov
jb
decl
arpl
jle
fisubrs
mov
cmp
xchg
sahf
dec
stc
dec
dec
cltd
mov
mov
add
pop
pop
push
xor
dec
sub
fnsave
addb
and
dec
sub
jne
movsb
out
ss
pop
lahf
int3
movsl
cmp
out
ror
mov
enter
cld
scas
push
sub
push
ds
iret
rol
xor
pop
mov
mov
popa
inc
scas
cmpsl
dec
inc
pop
inc
fisubrl
sahf
in
xchg
or
jle
aam
cmova
add
scas
loope
loope
lret
inc
dec
mov
call
pop
cmp
jge
pop
imulb
je
dec
cmp
sbbb
pop
and
enter
in
mov
insb
inc
inc
xorl
and
jp
ss
clc
insl
bound
xor
aaa
out
mov
cmpsl
push
add
or
imul
ja
pop
pop
cmpsb
pop
cld
sbbb
cmp
adc
lods
movsb
mov
pusha
and
sarl
lea
fcmovnu
fstp
mov
aaa
dec
xchg
sub
mov
pop
push
ffree
or
stos
cld
rcrl
jl
pushf
hlt
orb
stos
inc
cmc
ret
xor
jno
cmp
std
mov
movl
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
iret
push
ja
mov
sbb
outsb
adc
sbb
test
xor
pop
out
leave
cmp
int3
mov
dec
scas
cld
pop
je
jmp
xchg
das
adc
sbb
dec
adc
pop
repz
push
jae
mov
dec
lea
aaa
add
push
cmp
pop
add
sub
xchg
cltd
and
nop
sub
mov
inc
inc
and
call
xor
movsb
mov
push
test
or
sub
push
ficompl
mov
shrb
aad
icebp
repz
add
sub
shrb
jbe
js
pop
dec
lahf
lods
mov
add
xchg
add
mov
sub
and
sub
js
aas
xchg
xorl
push
dec
fld
daa
dec
adcb
in
push
mull
dec
cmpsb
sbb
in
mulb
push
aam
inc
inc
aam
sbb
cmc
sub
aam
test
incl
sarb
sbb
and
push
cmp
pop
scas
out
dec
mov
gs
movb
adc
jae
push
xchg
add
cmp
in
jae
jmp
xor
push
bound
cs
nop
test
sub
js
into
sbb
jne
in
adc
lds
xchg
mov
mov
sub
ret
or
push
arpl
xchg
dec
pop
pop
les
cmp
mov
or
xchg
and
movsb
xor
clc
dec
cli
pushf
das
inc
xchg
test
mov
xchg
rorb
jle
icebp
and
lahf
sahf
popa
mov
cmpsb
lods
push
inc
adc
inc
jno
jb
arpl
lret
lea
ret
ja
or
xchg
adc
movsb
sbb
xchg
pop
call
mov
movsb
pop
shl
or
dec
sbb
std
inc
mov
in
loopne
lret
cmpsl
iret
arpl
xchg
jo,pn
movsb
lahf
aad
cmp
repz
or
sahf
insl
pusha
std
iret
lods
out
cli
adc
cs
mov
push
sar
loop
cwtl
popa
mov
popf
mov
outsb
mov
cmp
jecxz
adc
imul
lahf
or
shrb
sbb
or
sbb
aas
xor
pop
cmp
dec
add
loop
pop
xor
into
cli
test
movsl
cld
pop
push
hlt
lea
push
ljmp
mov
movsb
cmp
daa
xchg
fmuls
out
mov
cmp
es
xor
dec
and
xor
dec
pop
fucom
scas
xchg
inc
in
jl
dec
pop
js
movsl
push
scas
bound
and
bound
jns
dec
mov
xor
or
dec
stc
xchg
loop
push
jbe
popf
jae
fldcw
mov
inc
jnp
test
aad
addr16
adc
call
bound
gs
mov
jns
fs
out
repz
push
lods
inc
adc
adc
jecxz
dec
jg
jo
or
cmp
lods
mov
dec
andb
ret
mov
lods
adc
stc
push
cmc
popa
mov
idivb
and
mov
push
fsubr
mov
push
into
sub
loop
cmp
xchg
xchg
adc
testb
pop
lcall
orl
pop
mov
xchg
pop
push
cmp
and
hlt
rcr
xchg
push
pushf
mov
pusha
add
dec
into
push
add
inc
fiaddl
popf
ret
gs
scas
add
xchg
cmp
mov
sub
pop
loop
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
add
jle
adc
sbb
sbb
pop
mov
stc
push
jge
test
outsl
or
mov
inc
fistl
repnz
xchg
popa
in
out
xor
sbbl
in
push
dec
cmp
test
mov
cmp
jo
outsl
ds
xor
mov
test
test
push
fincstp
mov
sub
jl
push
xor
and
hlt
sub
xchg
in
mov
pusha
sbb
mov
sti
sti
enter
xor
imul
ljmp
sbb
cmp
mov
xor
into
incl
pop
pop
and
out
and
inc
ljmp
addr16
mov
pop
test
sti
sub
aaa
add
sub
mov
add
sub
push
pop
jge
lods
add
dec
xchg
call
mov
inc
sub
sbb
movsl
fimuls
fcmovb
cmp
dec
icebp
sub
push
fistpl
les
cmp
insb
or
fs
inc
divb
pop
or
cli
neg
inc
xor
into
ret
add
mov
dec
jae
mov
pop
iret
rorl
aad
push
cmp
add
das
xor
or
mov
cmp
fs
icebp
rcr
jnp
int3
or
xor
into
or
rcrb
adc
push
in
js
popf
mov
in
scas
les
adcb
cmp
push
jbe
dec
into
faddp
xchg
lahf
xchg
mov
out
jmp
ret
pop
sbb
pop
inc
mov
std
shl
cmp
mov
lret
jae
insl
loop
js
pop
jl
or
inc
pop
rcrl
or
push
inc
lods
lahf
in
pop
dec
icebp
movsb
lcall
jns
sub
fsubrl
mov
cmp
test
mov
jg
mov
enter
add
pusha
mov
lahf
or
mov
sbb
popa
mov
jae,pn
test
inc
cmp
lock
aad
push
jbe
jmp
call
cli
stc
hlt
scas
xchg
imul
fsubs
add
mov
jbe
clc
cli
mov
xor
mov
mov
push
push
push
sub
adc
cwtl
jecxz
cltd
pusha
mov
mov
jno
xlat
pop
cld
jns
push
cltd
in
movsl
inc
pop
mov
test
les
pop
mov
cmp
lods
or
push
pop
ret
in
inc
xchg
ret
sub
rclb
lahf
jae
stc
jg
stc
mov
out
mov
push
pop
dec
mov
enter
mov
mov
sub
cmp
mul
inc
and
xor
inc
pop
arpl
xchg
jbe
push
jno
jbe
adc
lahf
orb
xor
pop
sub
mov
clc
aas
jns
xchg
sbb
jmp
mov
les
inc
push
mov
jmp
cltd
jl
insb
xchg
int
rclb
test
out
mov
gs
mov
add
jmp
push
xchg
movsl
inc
jle
mov
add
dec
inc
ljmp
mov
jnp
jg
push
pop
jge
sub
and
pop
sub
cmp
aad
jae
mov
aaa
cli
mov
jno
aad
inc
test
add
add
pop
std
loopne
mov
dec
mov
mov
dec
nop
stos
rcrl
pop
cmp
sub
jno
sub
pop
notl
push
push
xchg
push
cs
in
pop
std
mov
mov
mov
pop
xor
sbb
add
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
pop
sbb
pusha
or
sbb
addr16
fidivrs
test
jae
push
out
jl
push
push
dec
hlt
les
dec
mov
divb
xchg
hlt
es
jne
cmp
push
loope
or
aaa
out
mov
cmp
jle
int
cmp
dec
rorl
sarl
xor
andb
test
add
loope
inc
xchg
cmp
int3
pop
aam
addb
xor
jecxz
or
fmuls
loop
cmp
add
scas
jns
aad
insb
push
cmp
dec
negl
dec
inc
mov
push
lods
ret
das
mov
cltd
dec
or
cmp
fnstsw
cmp
popf
pop
mov
mov
sub
jo
aad
cmp
sbb
jbe
into
push
sub
fcomp
iret
mov
push
out
add
add
sbb
aaa
adc
dec
mov
mov
pop
lods
shlb
test
imul
je
pop
sbb
mov
iret
sti
xor
xor
psraw
dec
insl
add
in
stos
ret
and
mov
loopne
add
sbb
or
mov
scas
adc
pop
push
adc
ud2
dec
test
sub
lea
fcoms
and
mov
mov
iret
mov
xor
sbb
sub
add
enter
pop
cmp
lret
push
push
test
out
enter
outsl
jnp
pop
or
mov
jge
or
xchg
dec
sarb
mov
sbb
xor
std
mov
pop
cltd
adc
mov
jl
cmp
lods
or
or
fs
xor
sub
stos
dec
mov
loop
jge
imul
dec
imul
push
add
addl
repnz
xor
testb
out
or
inc
pop
aaa
dec
cmpsl
adc
cmc
mov
push
enter
xchg
mov
ja
int
rcrl
jae
cmp
sbb
out
popf
push
lcall
mov
in
inc
pop
mov
cli
inc
jae
jb
adc
lcall
push
push
dec
lahf
icebp
cmp
cmpsl
xlat
cmp
cmp
xchg
sub
negb
test
push
jmp
int
pop
lds
dec
dec
push
ljmp
icebp
mov
or
adc
pop
mov
sub
pop
movsl
mov
imul
xchg
cs
cmp
enter
dec
loop
cmpsl
dec
sbb
sahf
pop
adc
cmpb
divb
aaa
mov
push
inc
std
mov
mov
into
fldt
aas
xchg
mov
cld
popa
and
aas
and
icebp
xchg
mov
movsl
negl
pop
subb
aad
movsl
sub
outsl
into
daa
pop
outsl
or
imul
xor
shll
and
cmc
in
adc
cmp
mov
mov
pop
xchg
push
sti
and
lock
inc
sub
aam
out
sub
push
or
call
popf
js
mov
es
divl
addr16
jbe
xlat
mov
in
xlat
out
fstl
mov
xor
movl
pop
pop
add
jp
pop
xchg
repnz
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
jb
push
add
sbb
dec
je
movsb
mov
cmp
pop
xorl
fs
popl
mov
in
pop
mov
cwtl
test
clc
jne
popa
xor
dec
testl
mov
outsl
add
pop
pop
les
insl
cmp
inc
pop
imul
lret
sbb
cltd
stos
jecxz
insl
jge
test
xor
out
pushf
push
adc
pop
cmp
or
adc
test
mov
and
xchg
leave
andl
int
xchg
jmp
addb
idivl
jno
stos
into
in
cmc
popa
sbb
cmpsb
cmp
and
stc
ret
arpl
insl
fs
hlt
into
rcrb
mov
pop
subb
das
lahf
and
jecxz
popa
mov
sub
mov
stos
cmp
add
adc
pop
repnz
hlt
push
sahf
inc
bound
dec
mov
push
sbb
les
enter
stos
jmp
enter
adc
jo
pop
test
sub
pop
cmp
or
inc
les
ljmp
cli
dec
jl
inc
jmp
test
pop
lds
cltd
imul
shll
test
sbb
dec
adc
aad
adc
dec
add
repz
xchg
fst
orl
cli
sbb
cmc
mov
scas
xchg
js
lea
sti
dec
dec
out
inc
xlat
push
sub
mov
sub
jno
mov
aas
or
test
cmp
jb
enter
inc
push
cmpsb
stos
pop
dec
stc
push
dec
inc
jmp
push
cs
data16
ret
inc
cld
mov
lcall
ds
fs
aaa
jge
push
jmp
jb
mov
out
mov
inc
add
out
dec
and
clc
in
add
mov
mov
mov
sarl
fbld
test
mov
cmp
lret
jecxz
dec
ficompl
gs
xor
mov
sbb
jp
je
mov
rcrl
mov
test
out
cmc
mov
movsb
inc
fwait
lret
out
push
push
mov
lret
push
add
inc
mov
pop
xchg
cmp
dec
push
and
lcall
mov
push
cmp
and
int3
int3
and
test
jns
inc
sbb
cmp
mov
loope
and
xor
decb
mov
in
or
into
stc
mov
pop
mov
inc
and
imul
jmp
mov
lods
movsb
jge
iret
repnz
lahf
dec
pop
cmp
cmp
or
add
out
rcr
adc
mov
in
mov
inc
push
mov
lret
test
mov
movsl
xor
mov
xchg
ret
mov
dec
loop
fmuls
dec
add
notb
ss
and
aad
out
inc
les
out
inc
or
jnp
adcl
mov
pusha
test
cld
cmpl
pop
ljmp
push
pop
aam
mov
subb
lods
enter
sbb
sahf
call
sbb
push
inc
es
sbb
repnz
xchg
rcrl
scas
std
mov
sub
and
les
aas
xchg
inc
loope
call
fsubrl
cli
iret
pop
sub
fisubl
pop
and
push
sbb
subl
add
les
adc
cmp
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
lahf
inc
ja
or
adc
sbb
xchg
fisubrs
jl
flds
sbb
add
loop
adc
outsb
hlt
pop
jecxz
dec
jmp
add
in
mov
je
xlat
cmp
mov
stos
aam
imul
aad
fxch
repnz
test
inc
popf
push
push
jp
pop
xor
loope
lea
repnz
ss
bound
sbb
sbb
arpl
cmpsb
mov
and
or
out
daa
scas
and
orl
xchg
xor
push
ret
insb
push
sub
sbb
mov
adc
lahf
into
push
adc
and
sub
adc
andl
mov
sysret
jns
xlat
testb
ss
outsb
dec
lret
adc
xlat
sbb
sti
out
dec
push
push
jecxz
imul
sahf
incb
aaa
xchg
pushf
xchg
mov
cmp
test
rorb
sbb
vmovups
jno
push
push
cmc
dec
xchg
xchg
xor
jne
mov
mov
or
stc
sub
add
imul
fsubs
imul
aas
into
push
pop
aad
inc
jl
cld
xchg
jmp
pop
jae
adc
cmpsb
movsb
mov
or
pop
rolb
cmp
negl
adc
incb
call
jg
ja
inc
mov
cli
or
add
testb
test
daa
ljmp
fisttpl
cld
enter
xchg
jge
in
add
push
mov
popf
cmp
push
jg
sub
dec
stos
enter
aad
movsb
fnsave
cmp
das
sub
out
lret
mov
lock
push
jecxz
xor
add
cs
cmp
mov
es
add
cmpl
pop
mov
lods
lret
out
lret
lret
pop
pop
xchg
dec
pop
and
sub
cli
jno
into
jge
push
fcmovb
adc
hlt
mov
lea
arpl
mov
mov
aam
jne
sbb
insb
daa
sbb
stos
bound
jl
cmp
push
sub
cld
lret
adc
loope
cmp
cmc
pop
mov
out
inc
mov
mov
aad
test
arpl
xchg
insl
mov
popl
or
and
imul
je
test
push
aas
push
cs
addr16
std
lret
cli
push
adc
adc
fcoml
push
or
sarb
sub
or
mov
sti
testb
je
shlb
cmp
mov
adc
divb
insb
hlt
aas
add
push
rclb
mov
bound
arpl
nop
cwtl
int
fbld
lock
push
out
in
xchg
xor
xor
and
cmp
inc
cmp
rep
mov
and
lods
ret
pop
push
int3
shll
in
cld
jmp
lret
fstl
push
jne
lcall
in
pop
enter
and
cmovle
lret
xchg
imul
loope
and
ss
testl
xor
pop
inc
lret
xor
into
or
cmp
in
std
inc
dec
aaa
xchg
pop
fdivs
aas
lock
adc
clc
xchg
sub
test
cmpsb
mov
xchg
bound
stos
mov
and
aaa
push
outsl
xchg
mov
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
mov
cmc
sbb
outsb
adc
sbb
cs
push
cmpsl
outsb
lahf
pop
xchg
mov
push
xlat
or
add
mov
gs
dec
cs
cmp
sbb
add
pushf
std
stos
jg
fistpl
out
dec
cmp
xchg
push
dec
loop
shl
push
shll
mov
pusha
test
jl
aas
sbb
inc
cld
xor
mov
mov
mov
shll
cmp
dec
shll
lock
pop
fs
outsl
xor
lods
repnz
jmp
es
dec
mov
fnsave
lds
testl
jbe
cmc
fmulp
adc
jmp
in
repz
mov
dec
jno
adc
fisttpll
flds
imul
mov
dec
cmp
int
lods
xchg
xchg
mov
xchg
je
shlb
pop
inc
sub
mov
xor
mov
loop
out
mov
jbe
stc
pop
movsb
adcb
shlb
cmp
call
jg
sub
xor
push
out
push
xorb
daa
add
bswap
out
inc
insl
dec
movsl
sub
cmc
pop
loop
shl
cs
inc
hlt
sbb
push
jp
sbb
sbb
inc
fs
xor
cmc
out
sub
cmp
pop
mov
pop
scas
in
sub
adc
jbe
shrb
cmp
xor
movsl
imulb
es
fnstsw
fs
push
cmpsl
pop
insl
cmpsb
movl
xchg
mul
sub
daa
cmp
out
leave
out
inc
or
push
aas
stos
sti
push
shll
mov
and
inc
into
std
and
xchg
push
pushf
and
xchg
jae
fsubs
sbb
decb
sub
ljmp
mov
jmp
daa
lods
jb
ljmp
cwtl
flds
out
xchg
xrelease
jbe
mov
subl
ret
mov
pop
adc
push
div
sub
mov
or
push
jmp
bswap
sbb
shl
jge
inc
jae
aam
iret
dec
xchg
mov
lods
addr16
dec
sahf
and
cmp
xchg
xchg
xchg
dec
jge
and
xchg
in
clc
push
stos
cmp
and
outsl
test
pop
pop
nop
cmc
xor
cli
repnz
fwait
repnz
cld
loopne
sbb
sahf
and
and
das
mov
mov
lea
xor
jecxz
loope
mov
fiadds
loop
pop
out
shrl
pop
inc
mov
jnp
aad
push
not
in
mov
and
and
mov
fwait
mov
jb
and
add
jno
sbb
cmp
mov
or
pop
out
xchg
shrl
or
aaa
mov
movsl
push
fs
or
shrb
mov
sbb
movb
add
inc
div
xchg
sub
movsl
in
push
stos
aaa
mov
sub
mov
push
ja
adc
or
stc
pop
or
jp
mov
sub
stos
push
adc
mov
mov
add
addr16
dec
cmp
stc
push
xor
call
add
jg
pop
stos
jecxz
fimuls
jbe
out
popf
mov
and
mov
rcrb
pop
loop
insb
mov
jnp
sub
dec
cltd
int
out
fistps
fisubl
or
insb
push
loope
imul
adc
loopne
dec
iret
test
and
gs
and
sub
mov
xor
sub
and
fcompl
test
add
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
add
daa
pop
stos
stos
add
out
es
inc
dec
push
fcompl
jl
scas
sbb
mov
faddp
mov
xchg
movsl
sub
cmc
jns
imul
jge
jbe
jmp
ret
push
xchg
repnz
lock
push
test
push
sub
int3
in
aad
add
lcall
sbb
jecxz
xchg
and
cmp
shll
clc
lahf
mov
and
sahf
icebp
pusha
and
dec
jle
je
fldl
insb
sub
or
xor
cmp
stc
mov
push
or
and
dec
dec
rcrl
loope
mov
aas
fcmove
sbb
or
lgs
adc
sbb
clc
fstpl
addl
or
mov
cmp
int3
mov
fwait
or
lods
or
pop
call
mov
cld
sub
mov
enter
adc
sub
dec
lock
ja
std
movsb
clc
int
scas
cmp
jns
fmul
pop
xor
call
inc
test
jno
push
stos
mov
mov
jmp
or
js
pop
data16
cs
add
cmc
shll
cmpb
cmp
cmc
xor
shrl
xchg
pop
ss
add
ror
movups
es
sbb
jns
sbb
push
jmp
in
lock
leave
shrl
jns
fstpl
outsl
pop
cli
fs
imul
pop
leave
fiadds
cwtl
add
xor
je
sbb
and
cli
pop
inc
mov
lods
add
in
push
out
call
mov
sbb
pop
je
inc
cmp
es
rorb
frstor
test
in
push
adc
ljmp
mov
jae
test
push
or
mov
popa
loop
sub
outsl
cli
lret
jl
jmp
mov
inc
xchg
add
xor
dec
inc
adc
xlat
adc
scas
sub
mov
arpl
pop
das
push
lret
dec
repz
or
jbe
push
xchg
shrl
shll
add
push
fsubp
xchg
inc
stos
add
js
mov
add
fistl
mov
cmpsb
faddl
or
idivl
mov
inc
xchg
pop
push
ret
stc
add
repz
insl
mov
enter
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
or
jb
sbb
rclb
sbb
or
mov
pop
fwait
cwtl
jp
push
fcompl
lock
xchg
cmp
arpl
addl
pop
add
out
sahf
pop
jl
mov
xor
lea
cwtl
pop
mov
inc
loop
mov
adc
nop
aas
inc
mov
out
and
in
pop
imul
subl
xchg
mov
cmpsb
fldcw
cmpsb
cwtl
add
jb
xchg
or
test
out
xchg
add
pop
xchg
scas
sub
pop
movsb
push
mov
and
in
lods
jne
lods
jb
inc
jle
sarb
ss
jecxz
stos
mov
mov
icebp
sub
pop
pop
push
mov
dec
icebp
jns
ret
hlt
cmpsb
xchg
fdivs
divl
pushf
test
in
cmp
ja
gs
mov
cmp
lcall
sub
adc
aad
jo
call
xchg
lods
pusha
pop
pop
orb
aad
in
or
dec
inc
inc
xor
loopne
test
add
mov
std
sbb
inc
push
out
cmp
fsubs
sub
cwtl
dec
xor
arpl
jg
out
jbe
xor
adc
adc
std
adc
jae
fstpt
jge
loopne
call
sub
push
pushl
jge
ja
ret
adc
xor
out
jle
arpl
loop
popa
das
or
js
movsb
sbb
mov
out
xchg
cmp
push
das
mov
lea
cmp
popf
jnp
nop
insb
mov
push
repz
sarl
sti
leave
mov
add
imul
xor
cltd
stos
push
xchg
data16
decl
jo
sbb
pop
push
divb
fwait
iret
or
fnstcw
es
icebp
ret
push
rclb
dec
and
movsb
pop
add
push
loopne
fnsave
mov
sub
mov
not
mov
je
int3
cmp
push
fimull
nop
cs
and
aaa
mov
jno
inc
mov
cmp
testl
inc
movsl
sub
jl
jo
pop
adc
stc
sbb
das
scas
jae
lea
sbb
pop
fwait
xchg
mov
pop
jne
inc
pushf
jg
das
fistl
rolb
lods
jae
pmulhuw
xor
and
daa
pop
push
fsubs
lds
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
xchg
sub
sbb
rclb
sbb
and
mov
and
fbld
sub
aaa
or
sub
in
mov
jnp
inc
lods
and
inc
cmpsb
arpl
pop
push
xor
cmc
jae
fimuls
dec
les
dec
insl
nop
movsb
test
pop
mov
mov
xchg
push
aad
pop
xlat
dec
arpl
mulb
xchg
jae
adc
popf
sarl
loopne
add
repnz
xor
lods
pop
jno
lods
out
dec
and
decl
vmovapd
daa
scas
push
ds
lret
dec
or
arpl
inc
pop
inc
mov
ret
mov
mov
stos
fldcw
test
ret
sbb
lahf
sarl
pop
sbb
not
xor
jmp
xchg
outsl
mov
push
sub
mov
push
fldenv
mov
sahf
stos
pusha
lea
loope
xlat
daa
xor
aaa
gs
xchg
or
in
xor
sub
push
sub
fdivrl
sub
xor
jns
adc
xchg
data16
mov
jnp
adc
test
and
xchg
rcrb
push
push
jle
inc
rorl
stos
fidivrs
scas
cmp
ds
lahf
push
xchg
ja
fs
cmp
mov
dec
scas
and
popa
xchg
sub
jp
insb
lock
jle
mov
inc
insl
xchg
adc
mov
xchg
inc
stos
cmp
pop
jmp
lahf
and
and
cmpsb
stos
jne
push
or
add
movl
adc
lods
adc
cli
adc
in
pop
xor
and
xorl
pop
mov
mov
fistpll
mov
in
sub
sti
cmp
inc
xchg
push
jmp
mov
clc
mov
xor
add
jnp
aas
pop
imull
jp
loope
iret
adc
icebp
dec
aad
je
add
push
insb
cs
stos
ffree
bound
add
or
xchg
ret
insl
xor
ds
adc
pop
mov
adc
lock
insl
in
lock
pop
std
pop
push
hlt
push
out
outsl
mov
sub
or
je
nop
or
fistl
lret
dec
mov
in
pushl
xchg
push
aaa
leave
push
in
add
outsb
cld
test
adc
adc
dec
xor
out
mov
cmp
jnp
out
fwait
mov
cmp
mov
loope
mov
push
xor
jmp
pop
fdivs
sbb
pop
into
sbb
jae
shrb
mov
rclb
sbb
and
fnstsw
sub
icebp
and
mov
cmp
sbb
jbe
dec
sbb
mov
mov
orl
mov
pop
notl
icebp
mov
outsl
jb
pop
xchg
xor
jmp
js
in
dec
add
fildll
pop
add
and
jnp
sub
pop
popf
mov
jne
inc
mov
xor
mov
or
push
addr16
cmp
and
jns
iretw
call
pop
das
fmul
push
pop
or
mov
xchg
leave
cmc
loop
add
mov
pop
ret
xor
jb
or
xchg
xlat
jecxz
aaa
sbb
sub
xor
xchg
int
mov
repnz
lods
daa
inc
push
fistpl
or
mov
jmp
cmpsb
out
cmpsl
rclb
cwtl
push
js
inc
aad
loop
call
cmp
lret
int
adc
ljmp
push
repz
push
and
pop
dec
xchg
aad
sub
cli
mov
cltd
lock
jmp
imul
mov
push
inc
and
push
sub
or
adc
stos
push
outsb
idivl
xchg
sbb
mov
add
sub
mov
aam
rolb
movsl
jl
pop
test
sub
sbb
cmp
dec
ljmp
pop
stos
cwtl
and
pushf
mov
pop
les
sbb
dec
xor
sub
jno
mov
push
pushf
jle
xlat
and
xorl
adc
shlb
ja
and
mov
push
aad
ja
fstpt
outsb
test
mov
inc
mov
inc
ret
adc
outsl
psrad
xchg
insl
push
adc
fsubr
andb
cmp
insl
daa
sub
xor
aad
or
mov
cli
sbb
lret
divb
fisttps
xchg
leave
mov
push
in
mov
sbb
pop
mov
xor
dec
adc
mov
fdivrs
push
add
int3
or
dec
jbe
mov
cmpsl
dec
and
push
xchg
sub
dec
fwait
movsl
in
mov
ds
add
ljmp
mov
mov
add
jl
pop
popf
insb
push
sub
mov
mov
pop
shrl
test
sub
push
int
dec
in
xorb
cmc
bound
or
mov
mov
gs
js,pt
popa
jp
lret
fstpt
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
mov
rclb
sbb
jle
testb
jge
je
fdivl
push
inc
outsb
imul
and
testb
adc
pop
mov
pop
movsl
lcall
in
pop
jg
cmp
pop
loope
data16
pop
mov
cmp
add
pop
loopne
fidivs
mov
test
sti
or
dec
addr16
inc
ja
adc
sub
dec
inc
sbb
pushl
mov
xchg
lcall
mov
inc
inc
adc
test
push
add
imul
fisubl
jnp
push
fsub
lcall
xchg
adc
ret
sbb
fsubl
call
jle
dec
xchg
mov
jne
fs
push
dec
pop
and
jae
push
sub
stos
imul
mov
sbb
xchg
gs
adc
adc
pop
sbb
push
sti
mov
es
jmp
cld
cmp
fstp
shrl
adc
ret
aaa
faddl
ret
in
shr
jno
std
inc
cld
int
pusha
xchg
xchg
mov
jnp
jno
mov
popf
es
fs
ds
xor
and
mov
rclb
mov
cmp
lahf
dec
cld
xor
cld
push
out
int3
lds
add
imul
repnz
test
stos
inc
lahf
mov
xchg
mov
int3
pop
es
inc
inc
popf
sub
push
push
sbb
pop
lods
lcall
xchg
push
cmp
xor
adc
mov
xchg
movsl
push
mov
ja
jns
andb
push
scas
inc
pop
inc
ror
loop
cmp
push
jns
movsl
cld
push
and
pop
adcl
push
loopne
add
sub
adc
add
aas
pop
pop
pop
push
or
or
xchg
mov
insb
xchg
imul
dec
jb
movsb
sarb
mov
xchg
adc
push
pop
add
inc
rclb
xchg
inc
imulb
xchg
test
call
fs
bound
push
leave
adc
or
ja
dec
or
sbb
int3
lock
imul
adc
lds
cmp
arpl
mov
mov
ljmp
pop
jg
dec
ficoms
mov
lods
cmp
cmp
lods
jo
leave
int
inc
or
add
add
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
movsb
sbb
sbb
adc
sbb
sub
push
imul
mov
fldenv
push
je
sub
clc
cmp
mov
xchg
in
inc
add
jmp
popa
sbb
cli
lret
ret
sti
dec
fbstp
fisubrl
in
adc
add
js
mov
lds
fdivrl
test
cmc
psrlw
rolb
mov
pop
mov
xor
push
adc
fmuls
popa
mov
pushf
mov
clc
sbb
cli
call
js
xor
sub
adc
jmp
addl
mov
imul
mov
mov
hlt
jb
dec
push
sbb
jg
rcrb
lret
mov
mov
scas
mov
adc
fisttps
add
xchg
adc
mov
imul
cmp
cmpsl
aad
sub
xor
sub
pop
std
leave
scas
shll
cwtl
sbb
xlat
adc
push
stos
adc
insb
daa
jns
adc
mov
push
fldcw
jbe
push
cmpl
adc
xchg
test
sbb
pop
cs
lret
addr16
push
lahf
and
mov
lods
xor
adc
out
popa
adc
pop
xchg
mov
daa
xor
loope
jae
les
jecxz
sub
jmp
ja
and
out
jo
imul
pop
int3
pop
in
loope
xchg
inc
push
shrb
test
mov
ds
rol
jle
push
sub
movsl
add
fstpt
les
pushf
and
push
test
fucomp
das
aad
push
pop
xchg
inc
out
mov
js
in
scas
rorl
dec
push
sbb
mov
pop
aas
je
cmp
repnz
or
and
imul
or
mov
dec
mov
jae
int3
stos
jg
jb
in
xchg
jne
fstl
fmuls
test
ja
es
psraw
push
call
xchg
lea
cmpsl
add
movsl
mov
mov
out
out
jns
or
cmp
cltd
jg
sti
test
inc
repnz
or
add
and
test
insl
xor
daa
into
mov
aam
outsb
fsubrl
mov
push
xor
int
lock
aam
test
shlb
jae
mov
das
das
in
js
adc
cmc
shl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
fidivs
push
int3
sbb
rclb
sbb
mov
cmpsl
xor
jp
mov
sbb
cmpb
mov
cld
inc
in
push
daa
imul
sub
mov
or
dec
push
inc
shl
clc
shlb
cltd
mov
pop
lods
cmp
jg
cmp
mov
jne
push
xchg
jmp
mov
loope
xchg
inc
ss
adc
aaa
sti
dec
daa
add
add
popa
fs
sub
movsw
push
cmp
xlat
and
xchg
sub
and
nop
mov
and
or
inc
neg
push
jle
shrb
push
inc
pop
ficoml
or
movsb
mov
mov
mov
roll
pop
xor
mov
pop
js
xchg
lahf
fildll
xorl
inc
adc
inc
pushw
add
mov
popa
sub
mov
mull
stos
pop
sbb
fisubs
xchg
bound
cs
icebp
outsb
or
cmp
add
sarl
mov
gs
frstor
mov
sbbl
test
mov
repz
es
and
or
pop
jns
or
and
mov
fdivr
mov
pop
adc
jno
subb
jnp
das
mov
aam
lret
stc
loop
shll
pop
mov
stos
cmp
inc
xchg
sub
mov
inc
cld
dec
push
cltd
fwait
cmp
cmp
inc
into
or
clc
sub
jns
insb
ljmp
mov
sub
ja
fstl
xor
jg
cmpsb
mov
lea
xchg
test
push
dec
push
scas
mov
mov
mov
jl
cmpsb
mov
inc
fldenv
mov
aam
lsl
mov
loop
lea
dec
jmp
lods
popf
movsl
mov
push
leave
or
mov
push
mov
jb,pt
jns
mov
mov
pop
in
add
push
jno
hlt
jno
inc
add
push
iret
cs
mov
cld
fiaddl
pop
adc
fadds
dec
inc
jecxz
in
in
push
sbb
push
lods
dec
mov
popf
adc
xchg
gs
lock
cmp
and
dec
jle
inc
mov
cmpsl
push
gs
jl
jbe
adc
push
test
lock
in
pop
inc
lahf
xor
lahf
mov
xor
add
jmp
sub
mov
inc
pop
and
leave
out
jle
popa
iret
jo
enter
adc
sbb
inc
repz
cmp
fs
int
dec
lea
dec
sbb
test
out
imul
and
ljmp
stc
pop
cli
xlat
addr16
mov
sub
pop
mov
mov
das
lret
repnz
and
mov
cltd
fcmovnu
mov
cwtl
xor
xor
shll
push
in
cmp
mov
adc
int3
pop
repnz
jnp
sbb
push
cwtl
jno
jns
sub
sbb
cmp
cmpsl
clc
add
repnz
sub
mov
stos
dec
addr16
add
adc
mov
sub
push
std
adc
cmp
dec
aam
xlat
loope
pop
jl
lea
fs
push
mov
mov
loope
jbe
xchg
test
in
sbb
pop
out
es
nop
sti
jae
addl
test
jb
ss
ret
enter
test
cmp
and
inc
lods
pop
cmp
fucomip
test
fildl
ljmp
dec
xchg
fs
sub
xor
in
cs
ja
mov
mov
call
cmpsl
test
mov
cmp
movsl
cmpsl
gs
mov
sub
shll
js
push
add
ja
and
sbb
out
cmp
ljmp
clc
fadds
adc
stos
xor
add
cld
adc
addr16
fs
add
mov
ficomps
sub
jecxz
jne
dec
aaa
dec
movsb
mov
outsb
fisttpl
mov
mov
ret
orl
in
fnstsw
fcomps
clc
inc
push
jmp
mov
fisubs
sarl
loop
sti
frstor
mov
mov
adc
stc
jp
loopne
fdivrs
xor
int
sbb
xor
dec
lcall
out
lods
testl
aam
iret
loope
dec
push
into
or
fwait
rcrl
push
andb
pop
leave
sub
jns
pop
cltd
sbb
push
test
adc
es
pop
mov
dec
sub
pop
shl
popf
dec
cmp
push
push
push
mov
jmp
dec
jae
sub
fisubl
out
incb
sub
std
imul
mov
xor
call
inc
xchg
mov
scas
hlt
mulb
jae
mov
xor
add
decl
cld
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
jb
mulb
shrl
stos
out
mov
cs
popa
sbb
inc
in
aam
lret
xor
fst
pop
roll
ret
aas
xchg
push
mov
jne
inc
push
xchg
or
and
xor
or
sub
ror
push
inc
leave
ljmp
sbb
ss
xchg
insl
jb
jecxz
stos
sub
sbb
sbb
mov
jp
cmp
jae
xchg
int
lds
mov
bound
out
pop
jle
cmpsb
cmp
xchg
push
mov
aaa
pop
imul
xor
jge
xchg
fisubrs
sbb
adc
int
sbb
push
sub
fcompl
dec
mov
int
fdivs
xor
stos
pop
lods
jecxz
mov
pusha
ds
mov
test
mov
sub
xor
int3
popf
mov
push
cmp
cs
xor
lcall
lret
filds
repnz
mov
jp
test
fwait
or
jge
pushf
xchg
rorl
nop
or
pop
pop
icebp
add
inc
push
ss
aam
jnp
adc
idivb
sbb
leave
sub
and
add
sub
push
cmp
scas
pop
pop
nop
subl
push
bound
movsb
inc
aaa
out
add
ffreep
xorl
in
int3
sbb
imull
xchg
imulb
push
sub
jno
adc
inc
ret
je
ljmp
rorl
mov
add
popa
loopne
push
inc
fldcw
and
add
call
out
dec
mov
xor
or
test
mov
dec
lds
sub
inc
add
cltd
mov
inc
sti
pop
fsubl
adc
bound
xchg
dec
js
mov
popf
sbb
test
sbb
lea
iret
fsincos
mov
mov
mov
dec
into
sub
in
shll
out
notb
xlat
dec
pop
mov
test
jae
and
dec
enter
lea
xor
lret
popf
xchg
xor
icebp
mov
orb
ljmp
dec
outsb
jb
add
xlat
stos
xor
nop
jb
pop
sbb
dec
xlat
fwait
add
lods
loope
jb
lahf
imul
jl
push
ss
fwait
inc
in
dec
mov
mov
cmp
outsb
push
subb
or
or
add
inc
or
pop
loopne
inc
fmull
inc
fmul
popa
add
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
mov
inc
push
mov
sbb
dec
imul
push
mov
push
icebp
and
dec
xchg
js
pop
and
push
insl
arpl
xchg
mov
cli
repz
andl
cmp
or
aam
jp
mov
stos
mov
scas
and
jmp
popf
jb
push
cld
jbe
xchg
ja
sbb
sbb
je
mov
jb
inc
hlt
mov
jns
pop
mov
pop
clc
adc
mov
xor
pop
filds
or
xchg
dec
xchg
hlt
inc
mov
clc
jb
cmove
mov
ss
loope
jg
push
imul
ficoml
jl
shlb
mov
push
mov
sub
cld
lcall
and
lcall
int3
into
adc
fisttps
cli
fs
movsl
add
pop
push
push
inc
push
ljmp
mov
in
push
and
fdivs
adc
xchg
lret
dec
call
pop
out
cltd
das
icebp
mov
dec
dec
in
out
pop
iret
adc
cmp
xorl
xor
loop
mov
negl
and
xchg
mov
adc
sub
aas
xor
mov
inc
lods
push
mov
outsb
adc
je
movl
cwtl
rcrl
jecxz
cmp
dec
leave
mov
pop
cmpsl
mov
outsl
xor
dec
aad
and
sbb
and
push
sbb
xor
mov
adcl
push
sti
mov
out
icebp
jae
pop
test
das
xor
aam
aas
mov
in
or
lds
cmpsb
imul
cmpxchg
mov
mov
xchg
mov
adc
je
lret
repz
add
fwait
pop
sub
je
mov
popa
int
adc
xlat
xor
bound
sbb
popa
mov
add
in
sbb
notl
ret
dec
sub
cmpsl
inc
mov
mov
or
push
mov
je
mov
ss
fdivs
lahf
and
mov
xor
cmp
orb
xchg
scas
mov
mov
pop
mov
push
mov
and
cmpsl
mov
lods
jb
fs
mov
mov
sub
fisttps
pop
add
repnz
sbb
dec
insb
lock
jb
dec
out
jae
js
sahf
sbb
pusha
mov
jae
neg
xchg
shl
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
push
jns
std
mov
sbb
cmpsl
pop
fidivrs
pop
pop
adc
in
jno
popf
fwait
lahf
push
mov
cmp
push
jp
and
push
add
or
pop
aad
push
sbb
in
std
sub
mull
call
shll
sarb
cwtl
xor
aam
shlb
xchg
sbb
xchg
negb
sub
mov
aaa
mov
sub
scas
mov
jp
insb
dec
into
xorb
ret
lock
pop
and
xchg
cltd
jp
pusha
xlat
sub
dec
mov
or
push
mov
aas
in
es
jae
sarl
int
mov
mov
clc
mov
adc
jns
mov
je
aad
fldl
xchg
or
testb
fwait
dec
call
popa
pop
pop
and
mov
shlb
cmpsl
push
out
xor
lcall
mov
mov
ficoms
imul
adc
sub
imul
sbb
lret
pop
sti
ret
imulb
aas
call
out
cmpb
dec
dec
pop
pop
rolb
xchg
push
sub
ret
cmp
dec
insb
mov
cmpsl
push
gs
cwtl
in
inc
jo
lret
fldl
sbb
rcll
icebp
mov
scas
mov
push
or
and
jmp
push
mov
rorb
push
push
lock
cwtl
push
imul
dec
andl
push
loopne
pop
pop
and
adc
fs
mov
dec
xchg
js
xor
inc
dec
ret
xlat
mov
repnz
and
dec
xchg
movsb
jg
les
mov
pop
popa
push
cmp
lret
and
movsl
lcall
mov
das
js
pop
or
mov
dec
cmp
hlt
or
shrl
pushf
incl
insl
jne
fistpl
inc
aam
adc
fld
mov
xor
jo
std
sbb
cmp
push
xchg
cmp
sahf
sti
push
shlb
sub
test
sub
add
jne
adc
jae
pop
cmp
cld
je
push
mov
mov
xchg
cmpsl
cmc
sub
jge
push
shll
fimull
adc
mov
shll
movsl
jae
push
repnz
cltd
jne
aas
push
lret
test
mov
out
add
and
add
xor
add
cmp
jmp
cmp
daa
sub
ja
sbb
adc
sbb
pop
imul
jo
sar
mov
xchg
adc
lea
pop
or
inc
add
adc
stc
rcr
pop
call
icebp
arpl
outsl
xchg
subl
nop
movsb
inc
jl
push
or
lea
jae
push
jnp
add
cmpsl
fildll
sbb
lods
sub
outsl
xor
jb
mov
cmp
fstpl
and
jae
sub
pop
cmp
loopne
int
xor
mov
jl
xor
sbb
inc
icebp
jne
lods
cmp
mov
or
imul
mov
pop
sti
xor
shlb
pop
lea
lock
xor
adc
jl
inc
pop
rcrl
mov
push
out
aaa
mov
adc
or
cld
sahf
push
sub
dec
xchg
in
mov
xor
sbb
lds
sbb
das
mov
pop
and
dec
scas
call
out
and
lcall
lds
fwait
and
mov
xor
push
mov
jmp
faddl
add
xchg
das
loopne
mov
mov
add
ds
paddsb
jg
ljmp
movsb
xor
sarb
and
add
inc
push
pop
iret
mov
inc
add
mov
adc
into
lret
sbb
jg
movsl
mov
xchg
loope
push
daa
and
dec
mov
adc
test
cmp
add
xor
pushf
jno
fimuls
gs
jo
mov
shll
add
lods
jmp
test
mov
cmp
insb
pop
dec
fcoml
js
inc
mov
popf
xchg
mov
aas
ror
mov
inc
and
xor
dec
pop
iret
ja
fstps
adc
adc
cmp
jns
notl
arpl
push
xor
inc
mov
mov
jns
xor
xchg
xor
dec
notb
xchg
fucom
lock
push
push
or
ljmp
jne
lock
loope
subb
jge
out
xchg
mov
fcoms
mov
fidivl
int3
call
and
or
shll
dec
mov
out
pop
cli
jns
fdivrs
lcall
mov
mov
inc
lcall
cmp
scas
sbb
rclb
sbb
mov
mul
mov
out
push
or
sbb
cmp
xor
gs
sarb
add
fidivrs
test
rcll
sahf
mov
lahf
xor
cmp
sti
add
loop
and
sub
sbb
push
lret
add
ljmp
and
push
leave
sbb
movsb
mov
das
orb
xchg
inc
mov
push
push
fwait
out
cmp
push
inc
inc
push
flds
sarb
lret
loopne
int3
cmp
mov
loope
rolb
adc
repz
or
or
sbb
jbe
jmp
shlb
xor
xor
lea
std
or
aaa
popa
mov
adc
adc
inc
clc
cmp
into
and
movsl
mov
sar
mov
mov
ret
movsl
mov
cltd
rcr
dec
rorb
insl
pop
jmp
or
sbb
push
iret
in
rcrb
jmp
roll
dec
sub
dec
loope
sar
test
scas
cmp
dec
rcr
in
test
xchg
out
dec
fwait
clc
xchg
inc
and
pusha
sahf
clc
xchg
stos
fwait
pop
xor
pop
insb
popa
and
mov
scas
xlat
mov
out
pop
sbb
fimull
aaa
jl
cmpsb
icebp
shlb
pop
pop
xchg
hlt
jl
dec
xor
inc
dec
daa
push
mov
fcompl
call
pop
or
inc
fprem
clc
mov
push
or
in
push
jb
inc
cmpsl
cli
gs
lret
mov
clc
push
xor
ret
into
fwait
popf
cs
inc
cmpsl
mov
out
dec
roll
mov
test
dec
mov
push
pop
stc
stc
gs
lcall
mov
cmp
sub
cli
or
push
add
xor
add
sub
pop
icebp
cmp
mov
pop
gs
push
mov
jecxz
loop
loope
push
push
sbb
add
ljmp
mov
jp
dec
adc
sbb
dec
mov
popf
fs
cmp
mov
cld
test
hlt
inc
push
lods
mov
add
std
dec
dec
lret
cmp
out
inc
mov
mov
cmc
test
lea
jmp
mov
sub
in
lret
xlat
insl
jg
enter
mov
repz
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
cmp
mov
mov
popa
fwait
clc
test
aad
ja
add
icebp
dec
aaa
cmp
enter
es
inc
push
int3
push
xchg
xor
mov
inc
scas
loopne
scas
jbe
pusha
push
cmp
inc
mov
icebp
sub
das
xor
mov
and
xlat
dec
lret
mov
fsts
jns
pusha
es
addr16
lret
xlat
sub
out
mov
add
loope
cmp
push
out
lret
cmpsl
mov
jne
adc
fs
loopne
push
loop
gs
mov
in
fidivrs
inc
fdivl
aam
dec
jmp
push
inc
mov
les
dec
mov
in
jecxz,pn
data16
pop
imul
dec
inc
out
sbb
jb
es
lea
sbb
and
xchg
sbbb
pop
fiaddl
stos
mov
mov
lds
add
lds
mov
mov
mov
test
popa
dec
cmp
dec
fbstp
push
dec
pop
sub
sub
xchg
das
mov
cli
xor
adc
sbb
add
lret
mov
mov
cwtl
lods
data16
push
sti
jno
test
push
sbb
adc
ja
aas
out
repz
pop
js
or
icebp
mov
aas
mul
movb
jne
cmp
jmp
sbb
int
fistps
popf
jbe
ficomps
or
movlps
dec
cli
add
leave
push
adc
ja
cmpsb
into
out
mov
mov
and
xlat
pop
or
adc
push
daa
cmp
insl
sbb
movsb
cmp
ret
pop
mov
popf
lret
sahf
in
mov
pop
jmp
xchg
mov
in
testl
icebp
add
movsb
jae
fucomip
je
test
fwait
stos
pop
jecxz
jb
mov
js
in
xchg
pop
addb
mov
sbb
ret
out
pop
push
jge
fnstcw
xor
mov
mov
in
mov
sbb
repz
dec
es
mov
pop
pop
arpl
adc
aam
xor
sub
xchg
in
fmuls
es
ret
adc
inc
lahf
xchg
fcompl
popa
jno
cmpsb
adcl
sub
pusha
mov
orb
addr16
sti
lock
mov
dec
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
into
stos
jmp
cmp
imul
adc
outsb
ret
arpl
rcll
stos
popa
dec
xchg
cmp
xor
scas
push
and
jp
aad
in
and
int3
push
jg
sub
pop
cmp
sub
and
push
pushf
push
outsw
xor
mov
mov
or
in
mov
mov
in
inc
mov
mov
pushf
shr
rolb
push
in
adc
int
ja
out
hlt
outsb
mov
loope
sbb
jnp
inc
fwait
mov
in
cmp
sbb
inc
mov
outsb
testb
iret
add
ljmp
mov
dec
mov
dec
popa
clc
jo
push
ja
ljmp
xchg
mov
xor
dec
lods
fcomps
fstpt
jp
shrl
dec
pop
jp
movsl
in
sub
rcll
sbb
pop
stos
daa
xchg
add
lods
jmp
cmp
scas
cmp
cmpsl
mov
inc
xchg
mov
mov
push
or
xchg
out
dec
repz
popf
pop
scas
fisubrs
cmp
or
cmc
hlt
pusha
xchg
shll
push
pop
inc
pop
xchg
loopne
inc
xchg
bound
xor
fildl
adc
sub
add
iret
bound
push
mov
mov
repz
cld
jb
sbb
jns
leave
mov
cmp
jecxz
ljmp
jae
jle
imul
out
fiadds
lret
or
dec
cltd
push
mull
mov
sarb
in
fstp
bnd
pusha
mov
push
aad
mov
mov
leave
leave
fbstp
dec
fmul
jb
es
clc
push
insb
cmp
adc
int
sub
sbb
in
ds
call
mov
lret
sub
and
add
jns
xor
jb
xor
adc
int3
out
or
and
cld
or
lret
or
dec
xchg
and
mov
pop
xchg
inc
das
add
scas
jle
cmp
popf
outsl
xor
test
mov
insl
clc
mov
shrb
sbb
fsubrp
leave
lret
jle
scas
xchg
push
scas
ror
push
inc
repnz
and
shll
mov
lret
mov
and
sbb
ljmp
out
xchg
dec
mov
mov
jmp
fwait
rclb
xchg
push
xchg
nop
jmp
cld
sub
mov
repnz
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
jle
sahf
sbb
mov
dec
clc
cmpsl
push
xor
ja
sbb
push
imul
repnz
loopne
push
out
clc
xor
or
or
mov
fwait
and
daa
lea
xchg
test
fs
inc
outsl
mov
jmp
loope
cmp
add
into
test
pop
icebp
cltd
xchg
rolb
xchg
add
or
jb
xchg
jnp
xchg
imul
stos
insb
mov
loope
ja
adc
aas
jg
or
test
bound
jle
lock
repz
in
push
out
inc
cltd
insl
popf
loop
pushf
dec
mov
xchg
pop
stos
cmp
rolb
dec
ficompl
ss
and
or
rclb
in
test
dec
xlat
js
xchg
jno
inc
dec
push
sbb
ja
or
jg
clc
push
idivb
arpl
jmp
fwait
push
call
jg
repz
inc
and
mov
mov
icebp
loopne
dec
inc
call
ljmp
outsb
scas
cmp
and
aas
cmp
popa
dec
mov
bound
in
jp
cmpsb
jae
aas
rclb
rol
sbb
mov
subb
mov
mov
and
inc
xor
push
lret
mov
cmp
ficomps
inc
jle
cmp
shlb
in
push
lods
in
mov
mov
cmp
sbb
imull
out
mov
das
xchg
mov
push
pop
les
inc
cmp
dec
sbb
mov
out
mov
mov
inc
or
loope
cli
nop
push
jno
mov
fdiv
iret
cmp
add
lcall
cmp
frstor
adc
and
xchg
movsl
xor
jp
cli
movsb
clc
and
sbb
outsl
pop
jns
ss
std
add
xchg
jmp
sbb
push
pop
ss
mov
in
ret
push
mov
loopne
jl
jp
fstps
lock
out
pusha
xchg
mov
ds
js
adc
test
loope
and
cmp
xlat
xchg
and
and
mov
scas
cs
jne
and
pop
sbb
mov
std
jbe
sub
ss
or
mov
test
roll
gs
dec
loop
inc
imul
arpl
adc
xchg
imul
add
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
lcall
mov
push
shlb
sub
movl
jg
push
or
test
fmull
inc
mov
gs
xchg
mov
test
loope
out
mov
lods
push
lret
jno
pop
ret
jg
lret
fwait
dec
movsb
mov
jge
xchg
ret
inc
xor
loopne
adc
sub
shld
mov
push
add
or
test
data16
mov
call
cmp
pop
push
sub
sub
sub
mov
leave
mov
mov
inc
xor
mov
or
enter
and
cmp
in
in
psrlw
in
mov
dec
mov
sbb
mov
push
and
out
inc
cmp
shlb
jge
clc
push
popa
jae
jle
sahf
scas
hlt
sub
dec
jno
into
pop
push
push
mov
cmc
or
adc
mov
and
lahf
aam
push
push
int3
or
mov
add
push
outsl
cmc
pushf
fsubs
adc
and
adc
mov
aad
push
push
push
sti
xorb
stos
pop
dec
aam
cli
jns
mov
out
mov
ljmp
les
mov
fmul
push
mulb
frstor
aam
dec
push
push
imul
fcom
lea
scas
int3
in
sub
das
mov
push
mov
shr
movsb
jg
dec
cli
xchg
xchg
rclb
mov
cmp
shl
mov
xchg
push
pusha
sbb
in
test
jg
cmc
add
mov
xchg
mov
xchg
add
cli
mov
lds
mov
xor
dec
addb
cli
ds
std
mov
ljmp
cmpl
push
int3
sbbl
push
add
cli
femms
push
sub
push
mov
jae
or
js
inc
and
test
clc
ja
sub
xor
rcr
push
jae
int
jae
popa
mov
mov
outsl
std
push
adc
mov
or
cli
ss
incl
movsb
fwait
xchg
outsb
imul
mov
or
push
les
push
scas
add
fistpll
mov
pop
data16
push
push
jge
mov
js
xor
pushf
int3
lahf
xchg
push
lahf
mov
fimuls
test
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
mov
hlt
push
xchg
sbb
mov
in
sub
subl
shlb
xchg
jo
mov
call
lret
jmp
daa
negl
pop
outsl
icebp
push
jp
dec
aad
or
or
or
fldenv
div
dec
xchg
xchg
sbb
push
cmc
push
das
in
in
cmp
hlt
push
cli
pushf
cmpsb
popa
xchg
test
rcrl
movsl
xorb
push
jg
push
cmp
and
scas
es
repz
popa
ja
pop
sarb
mov
call
in
stos
add
mov
inc
js
repnz
cli
pushf
cs
and
push
fildll
je
cmp
aad
test
xchg
and
ret
negb
repnz
pusha
test
fs
or
out
add
xchg
mov
xchg
sub
in
pop
addr16
test
out
leave
mov
pop
mov
dec
and
mov
das
add
or
ds
sbb
idivb
push
cli
movsl
fnsave
rcr
data16
std
mov
cli
adc
out
push
mov
adc
mov
dec
add
adc
lods
or
mov
pop
mov
ret
bound
aaa
cmp
addr16
push
mov
aas
push
push
shlb
mov
mov
scas
outsb
shll
jge
mov
dec
cmp
sub
cmpsl
jmp
jb
jns,pt
push
sti
lods
or
mov
inc
stc
enter
pop
lea
mov
int
push
dec
mov
push
or
addr16
sub
push
or
adc
mov
or
sti
inc
mov
ljmp
cs
cmp
sarl
jb
jg
mov
pop
jmp
add
out
into
push
adc
xor
int3
push
jbe
cmpsb
push
inc
mov
lahf
leave
and
add
jmp
rorl
scas
jb
outsl
in
sbb
jns
cmp
pusha
mov
outsl
cltd
call
fucompp
scas
int3
movsb
jo
subb
xchg
mov
or
jp
repnz
xchg
xchg
aaa
call
test
pop
add
icebp
adc
xor
fs
jge
adc
in
mov
jno
xorl
sbb
fimull
jae
pop
popa
popf
sub
push
out
xchg
xchg
je
jae
mov
shrb
mov
and
or
insl
bnd
cmp
jle
inc
fwait
xor
lea
and
lea
mov
add
cmpsl
jmp
mov
arpl
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
repnz
sbb
lcall
cs
jnp
daa
push
push
or
gs
and
fs
xchg
repz
jmp
stc
jno
xor
jbe
ret
pop
fisubs
out
mov
cmc
add
lods
repnz
push
jge
pop
sahf
jae
pushf
jecxz
xor
push
dec
jl
push
std
inc
and
loop
pop
fisttps
sbb
ret
xor
push
mov
mov
cmp
stos
jnp
push
sarb
rol
pop
pop
cli
mov
adc
push
insb
mov
add
jle
in
loop
push
arpl
out
mov
pop
cmp
lea
mov
div
inc
bound
mov
ficoml
mov
dec
cmp
cmp
push
dec
insb
repnz
dec
mov
mov
push
lock
nop
cwtl
setae
loopne
dec
jno
les
add
shrb
fldenv
xchg
pop
mov
sbb
xchg
lods
movsl
adc
xor
jmp
sub
xor
or
inc
fadds
cmp
add
ds
aam
lret
or
pop
push
lahf
subb
sti
roll
xlat
inc
inc
bound
js
lea
pushf
in
mov
je
mov
sahf
lock
add
test
push
sti
lods
push
ret
movsl
mov
popa
bound
xorl
jmp
mov
jb
lods
inc
in
loope
and
addb
imul
sbb
jae
in
aam
inc
mov
sbb
dec
lret
jbe
pop
bound
pop
in
pop
idivl
xchg
negb
ds
repnz
adc
leavew
mov
and
jge
movsb
inc
xor
shll
test
fnstsw
sahf
or
out
mov
jle
ret
xor
clc
faddl
jno
xchg
arpl
cmp
lock
int
mov
mov
inc
xchg
scas
lea
jbe
stos
fucomi
ja
push
fidivrs
pushf
pop
fcomip
dec
pop
cmp
and
mov
test
shll
movsl
xchg
push
pop
xlat
xchg
mov
inc
fisubl
shlb
sarb
scas
ret
enter
and
inc
iret
mov
cltd
data16
mov
dec
jnp
cmpsb
sbb
xchg
push
or
pop
add
stos
in
cmc
testl
sub
notl
push
add
icebp
bound
mov
lods
lock
jmp
mov
xchg
xchg
push
xor
add
jbe
xor
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
jp
mov
icebp
mov
push
outsb
xchg
cmpl
mov
faddl
jb
call
mov
push
inc
mov
pop
and
outsl
icebp
push
fadds
bound
add
push
lock
pop
lods
sti
adc
ret
adc
mov
xchg
aaa
leave
mov
call
orl
push
lahf
or
stos
and
lret
test
fldt
push
outsl
pop
push
mov
stos
es
jle
aaa
push
imul
comiss
cmp
and
out
loope
jns
inc
bound
push
xor
jae
jno
pop
xchg
jne
popf
sbb
push
sub
mov
sub
imulb
xor
andb
sub
inc
sbb
in
fldenv
fcom
mulb
inc
adc
out
loope
adc
cmpsb
jnp
jnp
lahf
cmpsb
dec
ds
lock
mov
sub
fdivrl
mov
add
mov
dec
addl
dec
inc
pop
mov
xchg
xchg
sbb
js
decb
mov
icebp
or
mov
lock
and
and
push
pop
setbe
lret
imul
negb
xchg
shrb
outsl
jae
add
lea
inc
and
les
sbb
and
push
test
jns
popf
push
or
xchg
cmp
out
sbbl
cs
mov
pop
jnp
xchg
enter
outsl
jae
lods
cmp
mov
ret
mov
jmp
add
lds
pop
ss
mov
dec
and
push
mov
xor
push
test
jne
loop
movsl
dec
int3
sub
pop
or
icebp
imul
adc
int3
cmp
rcrl
add
rolb
mov
pusha
dec
in
pop
loopne
inc
ret
lcall
fdivrp
or
cli
push
and
xchg
lods
and
push
xor
cld
mov
movsb
jecxz
test
add
add
xchg
test
mov
xor
repz
inc
mov
jmp
xchg
cld
add
xor
repz
mov
mov
lock
lret
daa
jmp
inc
aam
dec
xlat
lahf
sahf
subl
or
xor
test
andl
cltd
jecxz
std
ds
popf
pop
orl
mov
add
inc
add
sub
jmp
test
mov
push
push
shll
sbbb
lcall
xor
sahf
fwait
and
data16
or
stos
into
xchg
cmp
insl
xor
nop
and
jno
push
sbb
leave
imul
aas
imul
push
jl
mov
test
fistpll
jb
data16
and
jg
push
mov
fisttpl
sub
cmp
test
mov
sub
jo
shl
push
pop
sbb
mov
adc
dec
lcall
xchg
dec
jae
inc
cwtl
xor
call
out
jbe
movups
outsb
or
fldenv
add
sub
pop
add
enter
cwtl
pop
cld
dec
ja
scas
mov
test
pop
out
and
dec
pop
adc
jae
adc
jl
out
jnp
les
mov
push
cmp
in
addr16
dec
aad
jp
imul
xor
push
sbb
push
xchg
cmp
or
pop
fildl
mov
mov
jne
jle
pushf
and
pop
lods
das
mov
out
jb
adc
add
adcb
das
dec
mov
push
pop
lret
lods
mov
inc
push
mov
xchg
push
push
sbb
sbb
in
mov
mov
pop
sub
sub
xor
loopne
sbb
jne
add
or
cmp
pop
imul
and
lahf
adc
push
inc
sahf
add
mov
popf
test
xchg
out
sbb
mov
leave
lods
xor
movsl
or
add
sbb
into
mov
lea
fisubrl
cmpsl
lock
inc
inc
mov
iret
jp
adc
inc
mov
gs
inc
fs
xorl
xlat
add
jne
jmp
inc
cmp
or
mov
sub
jle
out
das
adc
loopne
mov
pusha
mov
cmp
mov
popf
jecxz
scas
daa
xchg
sub
jno
jae
adc
xor
out
ja
xchg
jl
or
jno
aaa
sub
mov
sub
dec
jmp
xor
mov
es
pop
dec
aad
dec
ljmp
xor
jo
mov
xchg
faddl
std
and
mov
lods
pushf
sti
inc
fnstcw
push
jl
push
js
adc
mov
lock
test
test
pop
jb
lea
add
clc
or
xchg
into
dec
adc
mov
lcall
xchg
daa
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
cld
mov
jno
sbb
js
mov
icebp
ja
mov
cmp
lcall
insb
jp
cli
lods
dec
lret
xchg
int3
jno
sbb
pop
xor
outsl
or
push
test
lods
das
lock
fwait
or
daa
ret
inc
sub
dec
sbb
int3
push
jg
fwait
je
push
mov
xchg
dec
dec
or
call
into
aad
addr16
sbb
jecxz
and
adc
out
out
lahf
outsl
jae
sub
pop
and
movsl
cmp
add
icebp
jg
xchg
mov
xchg
jno
repnz
imul
jo
pop
mov
lahf
loope
sub
lods
rorl
fs
sbb
xchg
testl
cwtl
xlat
dec
mov
cmpsl
cmp
add
inc
test
cmp
sub
fsubs
cmp
in
sbb
mov
testb
loope
cmp
cmp
pop
dec
repnz
mov
cli
mov
rorb
xor
fstl
xchg
push
xor
movsl
and
shrl
and
mov
xchg
cmpsl
arpl
push
push
out
mov
shlb
inc
push
dec
or
cmp
orl
sbb
xor
aad
jmp
js
inc
mov
mov
jb
push
lea
leave
negb
cwtl
cli
lds
cmp
push
or
ret
fwait
xor
mov
repnz
arpl
outsl
stc
mov
push
jno
test
call
insl
test
cwtl
cwtl
adc
andl
dec
jle
adc
gs
rorb
nop
leave
xor
loopne
pop
cld
add
sbb
dec
xchg
in
and
inc
add
lret
xor
xchg
imul
or
cs
xchg
movsb
loopne
fwait
cmpsl
mov
fwait
jo
lock
cmp
push
xlat
jne
add
inc
add
int
aam
dec
xlat
in
sub
or
xor
sbb
bound
imul
lea
test
in
cmc
mov
fidivl
mov
jecxz
das
inc
addr16
push
xor
sub
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
xor
sbb
sbb
xchg
xor
push
xchg
mov
iret
add
fucomip
out
nop
scas
xor
arpl
jmp
stos
mov
xor
js
mov
dec
mov
jge
adc
fs
inc
les
dec
adc
in
mov
pop
aaa
xchg
jne
pop
pusha
jecxz
mov
iret
mov
lret
lock
and
outsl
and
pop
loopne
push
pop
jae
mov
ljmp
loope
inc
mov
hlt
stos
shlb
sbb
cltd
insl
mov
push
cmc
mov
inc
pushf
mov
mov
push
xchg
push
pop
cmpsl
xor
sub
or
and
rcrb
fwait
test
fidivl
rcr
push
add
jge
insb
sbb
daa
push
clc
dec
sahf
or
and
jmp
ljmp
adc
mov
roll
dec
xor
lds
cwtl
mov
pop
cmpsl
xor
mov
lret
in
repnz
mov
fnsave
mov
sbb
xor
inc
sahf
andl
loopne
mov
sub
pop
xor
lret
jp
mov
cmp
cmp
cmp
inc
pop
mov
xchg
inc
jp
dec
lds
das
mov
mov
mov
inc
sbbb
sbb
fldl
fdivrs
sbb
and
push
jno
push
mov
stos
repz
test
insb
ss
adc
sbbb
inc
popa
mov
pop
movsl
push
jecxz
loope
adc
sbb
int
push
lods
push
and
xor
bound
dec
mov
push
mov
lret
sarl
dec
inc
mov
aaa
iret
aas
push
push
out
or
mov
push
imul
out
mov
mov
bound
imul
arpl
and
jnp
movsl
xor
dec
mov
fadd
mov
test
pop
or
and
mov
xchg
adc
sahf
in
mov
mov
xchg
out
fidivrl
repnz
ds
gs
int3
adcl
xchg
loope
loop
hlt
and
lahf
ss
jno
repz
leave
push
rcr
stos
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
cmp
jno
sbb
adc
aam
call
mov
sahf
fisttpll
enter
sti
or
fiaddl
mov
jge
movsb
mov
inc
jecxz
cmpsb
fcoms
stc
scas
repz
push
shrl
cmp
dec
addr16
lret
sbb
shll
xor
out
jmp
mov
cwtl
ja
add
out
adc
mov
fs
mov
fbstp
mov
fsubrl
jno
xchg
pop
sub
xchg
addl
pop
cli
dec
mov
pop
dec
sub
adc
cmc
cmp
leave
cmp
scas
vmread
enter
mov
insb
lret
out
mov
inc
test
test
inc
arpl
aaa
fmulp
test
movsb
imul
xor
ret
ret
xchg
cmovo
xor
add
stos
test
adc
pop
sub
in
dec
lods
or
adcb
mov
xchg
jl
int3
fsubrp
mov
mov
rcl
test
or
mov
fsubp
loop
lods
popf
data16
sub
and
add
mov
sti
add
mov
push
adc
xlat
jb
sbb
int3
movsl
push
jg
mov
jg
roll
fstl
mov
clc
pavgw
and
or
sub
mov
repz
ds
mov
mov
inc
cli
imul
mov
push
ljmp
mov
push
lea
add
out
mov
push
sbb
sub
lret
movsb
pushf
ret
stc
test
fimull
adc
lea
test
dec
and
cmpsl
mov
xor
or
bound
fcoml
xor
out
mov
ljmp
xor
mov
repz
inc
adc
hlt
pop
mov
ja
lods
test
inc
xchg
leave
out
repnz
out
stos
lret
pop
jns
lcall
fdivrs
xchg
lods
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
sbb
mov
aas
sub
push
fimuls
push
mov
adc
popf
fsts
idiv
lret
dec
icebp
ret
mov
sti
lcall
jmp
test
loop
cli
jns
adc
lods
xchg
add
mov
notb
mov
les
push
cmpsl
loopne
inc
std
js
mov
loope
lret
pop
test
xchg
push
sub
mov
ljmp
test
stos
repz
test
add
dec
mov
mov
pop
add
pop
mov
lret
gs
cmpsl
xchg
sbb
imul
clc
dec
cs
adc
clc
mov
mov
xchg
pop
cld
rol
int3
jb
pop
add
pusha
ret
imul
popf
push
or
outsb
add
lret
dec
cli
sti
sub
cwtl
dec
jbe
adc
lds
or
loopne
push
ss
ret
jmp
arpl
in
mov
popf
cmp
push
sahf
push
je
sub
xchg
or
inc
cmc
bsf
sbb
icebp
dec
push
mov
test
js
mov
bswap
pushf
scas
inc
xor
test
add
bnd
movsl
hlt
pop
fsubrs
pop
popf
scas
inc
mov
sbb
test
pop
pop
gs
je
xor
push
cmp
jmp
test
and
insl
daa
mov
inc
in
cmc
rcll
mov
stc
ss
xchg
vmovlps
inc
push
xchg
push
out
and
sarl
dec
sarl
mov
push
stos
sarl
pushf
pop
rcll
sbb
rcrl
jge
add
sbb
outsb
mov
ljmp
ds
push
ljmp
scas
mov
adc
repz
fadds
addr16
mov
push
subl
into
pop
lock
fcoms
jle
push
and
adc
sub
inc
fcoms
scas
loopne
and
subb
jge
cmpsl
in
dec
adc
mov
cmp
pop
cmp
xchg
cld
ss
push
sub
mov
jecxz
lock
cs
divb
ror
push
mov
pop
jge
lret
mov
push
mov
sbb
add
add
ret
nop
jmp
pop
and
xor
pop
sbb
dec
jle
push
sbb
sbb
xchg
negl
cltd
vmovdqu
nop
add
adc
mov
sahf
addr16
stos
mov
jl
jmp
int
decb
fdivrs
inc
cli
gs
mov
inc
arpl
and
repz
imul
int
mov
stos
loope
ror
adc
cmpsl
add
test
pop
and
loopne
mov
or
icebp
bound
inc
sub
push
inc
test
dec
lahf
shll
sub
pop
dec
or
js
fnstsw
sub
dec
fmul
pop
cmpsb
mov
xor
ja
sub
xchg
pop
push
fnstsw
xor
cmp
bound
bound
jg
xor
test
push
and
stc
adcb
jns
ret
dec
push
and
popa
mov
repnz
ficompl
pop
rcll
loope
pop
mov
mov
add
sub
cltd
push
push
int3
loope
mov
push
insl
fwait
outsl
jl
inc
jns
mov
adcl
cltd
dec
mov
adc
mov
popa
xchg
pushf
popf
jl
sbb
mov
insb
jbe
xlat
mov
xor
orl
pop
add
push
insb
arpl
scas
push
or
daa
mov
jo
sbb
jne
aaa
cld
aas
and
arpl
pop
xor
aam
out
sub
aam
jne
or
ss
lods
mov
pop
out
xchg
out
icebp
cmpsb
ds
popa
add
and
not
xchg
in
or
push
pop
inc
xchg
add
daa
cmpsl
leave
dec
mov
iret
dec
sbb
fnsave
cli
mov
call
in
sub
pop
popf
negl
jge
xchg
test
sub
shlb
lods
not
outsl
rol
lods
push
inc
pop
mov
inc
dec
add
adc
push
mov
sarl
adc
jne
es
insb
pop
aam
cmp
into
sbb
jmp
int
sub
or
pop
fmull
fidivrl
jecxz
jp
scas
out
test
cld
xchg
sahf
repnz
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
push
data16
jno
sbb
sub
sub
iret
add
pop
jge
insb
out
fdiv
cmp
aad
nop
xchg
sub
pop
mov
or
push
jne
int
sarb
or
das
inc
outsb
fstpl
mov
xchg
mov
pop
ror
bound
pop
pop
es
cli
fisubrs
jno
sbb
jne
and
aam
mov
add
cld
lea
out
ret
cmp
insb
or
call
std
scas
and
adc
or
and
scas
xchg
sbb
adc
cmp
dec
fadds
stos
fs
mov
dec
sbb
or
rcrl
xchg
enter
and
pop
jae
lods
mov
pop
mov
pop
lds
aaa
out
test
mov
les
es
orb
and
dec
push
loopne
or
inc
jo
lret
pop
mov
ss
out
popf
mov
push
sub
int
adc
shlb
add
adc
jl
jl
lods
add
rcl
imul
stos
dec
or
add
div
andb
mov
mov
ljmp
sbb
daa
mov
dec
rcll
dec
lcall
inc
mov
clts
and
lret
or
cmpsb
imull
loop
pop
aas
pop
push
mov
cmpsb
std
popa
iret
cmpl
ss
popf
clc
adc
test
fisttps
xor
sub
movsb
jno
or
xlat
dec
mov
mov
mov
dec
push
in
cmpl
test
cmc
mov
xchg
js
jo
negb
test
add
dec
xor
sbb
xchg
mov
mov
push
lea
shrb
or
push
les
pusha
incb
lods
inc
sti
xchg
add
and
sub
les
inc
popf
clc
clc
push
cmovo
fwait
and
and
mov
or
out
out
lret
sbb
test
jg
std
mov
mov
fildl
cld
lds
and
jge
pop
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
enter
pusha
sbb
jno
sbb
add
xor
push
mov
aaa
test
add
inc
xchg
pop
add
les
iret
aas
jno
mov
les
leave
xor
in
stc
aaa
test
dec
inc
add
or
ret
loope
jnp
cmp
cmovp
sub
xchg
sete
insl
fildll
icebp
pop
lods
stos
lcall
push
sub
pop
or
sbb
stos
add
addb
dec
inc
inc
roll
cmp
push
push
inc
mov
and
int3
mov
js
sbb
jle
pushf
or
mulb
lods
hlt
jo
in
jno
adc
inc
shl
and
or
mov
ss
sti
jb
dec
jle
jne
mov
mov
imul
dec
xor
xor
sub
enter
push
das
jae
cmp
cmp
adc
test
aaa
orb
lret
loopne
push
lods
mov
fisubl
fs
adc
jle
push
iret
mov
sub
mov
mov
js
aas
push
inc
xor
lret
fistl
in
nop
and
xor
push
mov
jne
aam
mov
dec
mov
es
mov
hlt
push
sbb
push
and
inc
push
adc
jmp
sub
mov
pop
int
out
mov
pop
lret
fucomp
in
in
mov
adc
stos
gs
dec
push
xchg
es
cltd
ljmp
sbb
jmp
pmaddwd
mov
fisttps
or
lds
orl
leave
mov
in
mov
jle
jae
fcomi
dec
lods
lret
cmp
mov
or
pop
insb
lock
lds
mov
cmp
or
xchg
jne
mov
mov
gs
out
push
push
stc
sti
outsb
test
ret
push
pop
pop
lods
xchg
jo
jo
gs
jne
ret
in
add
ljmp
out
lods
mov
fiaddl
pop
lahf
xchg
sbb
xor
into
cld
xchg
js
push
out
out
mov
xchg
fisubs
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
jo
push
pop
sbb
jno
sbb
dec
jp
sub
xchg
xor
js
pop
out
push
fcmove
loope
movsl
dec
or
insb
pop
aaa
cltd
das
pop
ds
pop
or
and
stos
lds
in
leave
pushf
daa
addr16
push
addr16
test
dec
inc
lock
aam
lock
lret
subb
movb
or
sbb
dec
ja
push
add
inc
xchg
lea
ljmp
popl
jbe
mov
iret
icebp
rcr
enter
mov
push
cmp
inc
add
cli
pusha
out
jbe
mov
and
bound
loop
mov
sbb
xor
pop
push
inc
cmp
push
add
nop
int3
push
dec
in
adc
in
jae
scas
add
pushf
mov
icebp
jbe
dec
mov
iret
or
xor
adc
sub
mov
or
add
mov
pop
stos
mov
xor
ja
bound
cmc
mov
movsb
clc
imul
test
sti
popf
adc
clc
stc
inc
scas
pop
xor
pop
je
add
mov
adc
inc
mov
pushf
xor
jo
inc
dec
sub
inc
cmc
int
fcmove
fwait
xchg
dec
xchg
inc
call
dec
inc
mov
xor
nop
pusha
loopne
push
es
ja
mov
ret
daa
jg
and
jg
stos
lock
push
jge
dec
or
and
imul
in
call
mov
push
mov
fisubs
pop
xchg
or
lret
add
or
xchg
pop
test
add
add
std
in
mov
sarl
and
mov
repnz
lds
pop
jg
fwait
pop
mov
push
jo
mov
cmp
out
sub
cld
mov
xchg
xor
call
fsubr
xchg
cld
imulb
imul
dec
cmp
aaa
jo
sub
xchg
sub
ficoms
stos
sub
mov
push
cmp
insl
aaa
sbb
xor
xchg
into
punpckhdq
test
int3
insl
pop
fs
lea
adc
adc
sub
and
lods
cmpsb
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
lods
or
into
push
movsb
push
pop
xchg
ds
xchg
popa
ljmp
xchg
add
cmp
ja
repnz
and
xor
stos
test
push
mov
les
je
lret
int3
call
jnp
mov
cmc
cld
inc
cmp
clc
iret
push
xor
or
mov
out
xchg
lret
mov
mov
dec
lret
into
xchg
xchg
push
sbb
jp
sbb
pop
outsb
add
jo
stos
cmp
mov
dec
inc
dec
fists
fsubs
arpl
mov
stos
sub
xchg
sub
jnp
mov
xor
les
repz
xor
fisttpll
ss
xor
push
addr16
cmp
adc
sbb
stos
ds
mov
mov
clc
jg
xor
jmp
cli
and
sbb
and
in
mov
pop
xchg
cwtl
sub
cmc
sub
xchg
xlat
xchg
js
les
sub
dec
lret
fistpl
js
push
cs
lea
out
cmc
js
xor
pushf
mov
xchg
and
mov
and
sbb
dec
inc
imull
ljmp
scas
inc
loop
subb
sub
jle
push
stos
inc
repnz
test
in
mov
popl
pop
add
push
jo
shrb
or
and
push
out
or
popa
out
jl
frstor
inc
aas
mov
and
pop
xor
xor
mov
pop
mov
xchg
dec
adc
mov
popf
push
repnz
push
mov
jno
pop
or
stc
pop
shlb
inc
outsl
stos
fst
in
add
test
int
std
je
and
pop
sbb
sub
jle
xchg
sbb
rolb
adc
iret
inc
fs
pop
fiadds
jecxz
xchg
js
or
push
aas
xchg
dec
push
rcll
pop
js
aas
stos
add
pushf
stos
sbb
inc
jne
pop
pop
cld
add
push
push
or
scas
cli
mov
or
insl
enter
adc
xor
fdiv
gs
rolb
aad
pop
adc
sub
imul
and
insb
sub
xlat
test
or
outsl
jg
and
das
sahf
jo
sbb
in
jo
xor
jecxz
cmp
leave
xor
repz
leave
jge
rolb
fsub
inc
pop
or
xor
xchg
mov
addl
xlat
cmc
ss
xchg
out
add
xor
enter
nop
stos
add
jg
out
mov
mov
sub
loope
lcall
sarl
cmpsb
aad
call
pusha
add
je
dec
or
iret
daa
cmc
inc
enter
jo
fs
repz
and
sub
push
mov
addr16
jo
mov
mov
jb
pop
push
push
mov
sbb
or
and
jg
push
sbb
testl
repz
and
insl
out
inc
mov
out
mov
jmp
ret
pop
xchg
mov
add
sub
sub
shrb
sbbl
ds
loop
cmpsl
add
sti
icebp
jbe
mov
mov
lock
imul
jl
push
dec
stos
inc
pop
roll
dec
jbe
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
hlt
push
fbld
or
sbb
int3
rcll
mov
mov
pop
push
jbe
xchg
push
add
stos
inc
sbb
stos
mov
outsl
sti
jle
xor
or
seta
fldcw
xlat
sub
pop
pop
pop
pop
mov
adc
aad
mov
xor
cmc
clc
and
out
lret
pop
stos
jbe
cmp
in
push
pushf
in
xor
and
gs
push
pushf
pop
loopne
add
inc
cmp
arpl
mov
xchg
std
imull
pop
mov
xchg
fucom
fs
jno
bound
ss
test
lret
push
ss
icebp
cmc
xor
hlt
mov
inc
lahf
cmp
aas
inc
cmpsl
dec
push
push
lcall
icebp
fstps
rep
mov
iret
mov
ds
jecxz
loope
jae
js
push
ret
add
adc
and
pop
icebp
jle
fadd
adcl
lahf
cmpsb
pop
jno
push
and
mov
cmpl
out
xor
loopne
stos
xchg
push
lock
jge
pop
fidivrl
push
sbb
insl
dec
mov
and
loope
fstps
add
jmp
out
jl
push
xor
insl
xchg
leave
xlat
push
ret
lahf
addr16
fwait
xlat
je
add
xchg
mov
and
orb
addr16
mov
shrl
fisttpll
mov
jmp
mov
and
sbb
scas
or
mov
je
insl
pop
jl
xor
rclb
inc
sub
hlt
dec
and
or
jecxz
fcompl
push
mov
insl
imul
arpl
fwait
test
repnz
fildll
fiaddl
shll
adc
ss
and
mov
push
push
mov
push
popf
dec
cmp
xchg
inc
mov
arpl
fwait
sbb
cmc
fnsetpm(287
lcall
loope
dec
bound
xchg
and
mov
cld
push
add
add
xchg
popf
push
in
and
lret
jl
push
mov
ror
mov
pop
fidivrl
pusha
pop
jne
das
jo
fidivs
and
test
dec
ret
pushf
scas
cmc
pop
das
push
out
sbb
push
inc
xchg
cmp
pop
iret
and
xor
adc
out
xchg
int3
test
scas
ljmp
jmp
or
add
pushf
xor
cmp
lea
inc
aad
jp
icebp
sbb
mov
jp
jp
shrb
cli
bound
scas
pusha
push
dec
lods
lods
in
int
lds
sub
mov
imul
push
mov
mov
jns
pushf
xchg
cmpsb
inc
je
mov
jg
aad
jle
das
push
pop
xchg
jb
je
les
cmp
imul
rcrl
adc
roll
jae
push
iret
and
pop
push
loope
shlb
cltd
sbb
test
lea
in
jbe
fcmove
arpl
push
add
adc
out
test
pop
or
push
xor
cmpb
loopne
or
dec
inc
mov
test
shll
mov
jo
or
ret
pop
adc
ret
push
repz
sbb
push
jnp
aaa
ljmp
hlt
add
push
cmc
push
daa
andb
mov
lret
pop
mov
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
and
dec
sbb
stos
adc
sbb
imull
pop
lcall
inc
cwtl
imul
xor
mov
sbb
int
xor
das
xlat
and
out
push
xchg
repnz
shr
pop
dec
imul
cmp
jae
es
dec
mov
adc
push
imul
ror
ja
and
pop
ffreep
xchg
clc
fs
add
lea
adc
insb
scas
jecxz
aam
mov
adc
ret
mov
ret
push
js
int
mov
ror
aaa
shr
and
adc
jns
xor
xor
incl
into
mov
xchg
jp
movsl
cmc
mov
inc
mov
aas
mov
int
dec
cmp
insb
decb
outsl
mov
adc
icebp
jle
out
jecxz
push
dec
push
stos
std
pop
xchg
outsl
inc
push
inc
imul
inc
pop
fs
mov
or
jle
out
xchg
jmp
cwtl
enter
mov
daa
pop
push
xor
push
ljmp
jle
or
xlat
subl
sbb
xchg
dec
mov
mov
adc
mov
int
test
aam
loop
ja
cmc
fs
dec
add
mov
mov
or
inc
lods
je
add
mov
out
adc
xchg
fcomps
repz
lcall
insl
sub
lahf
dec
pusha
jno
in
stos
inc
jbe
notb
and
js
xor
jbe
ljmp
cmpb
imul
mov
aaa
add
int
xorb
xorl
mov
dec
or
flds
je
add
ficompl
stos
repz
sbb
push
push
and
xor
pop
dec
cmp
xchg
mov
cltd
jns
out
xchg
mov
jb
xchg
jle
pop
cmp
jae
fs
leave
shll
outsb
push
push
int3
xchg
cwtl
enter
ljmp
mov
sbb
xor
fisubs
scas
mov
and
jae
sub
mov
xchg
data16
mov
sbb
sbb
adc
loopne
loope
in
mov
or
cmp
movsl
cmpsb
std
stos
js
das
xchg
lods
popa
dec
pop
shll
repnz
add
dec
mov
jecxz
mov
test
adcb
test
adc
sbb
pushf
scas
pop
jb
sarb
push
sbb
mov
jecxz
mov
pop
idivb
int
loope
adc
scas
sbb
insl
xlat
jnp
in
int
jge
aas
sbb
dec
xchg
fdivl
out
repz
ss
push
in
push
adc
cmp
dec
xor
xchg
stos
ficomps
add
in
nop
shr
je
sbb
push
stos
lock
xor
rcrl
push
fcompl
pop
lcall
roll
add
test
daa
mov
ja
xchg
xchg
cmp
aaa
bound
jge
cmc
and
or
xchg
mov
and
mov
scas
lcall
and
adc
and
int
adc
ljmp
js
ret
or
pop
mov
into
mov
outsb
xlat
ja
dec
sub
ret
popf
cmpl
sub
sti
bound
stc
es
dec
sub
sub
mov
shlb
add
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
jno
fs
sbb
stos
adc
sbb
fldt
out
insb
outsl
sub
xor
mov
dec
or
cmpsl
sbb
mov
lds
into
inc
sub
dec
iret
mov
push
push
das
into
fisttpl
push
lahf
lahf
cmp
xchg
xlat
or
jb
fdivr
in
jle
pop
sbbb
inc
fs
hlt
aas
and
loopne
mov
or
les
andl
lcall
dec
push
movsb
call
lock
lret
dec
push
sti
dec
lds
loope
lods
pop
sub
or
fisubrs
jo
aam
adc
adc
mov
add
fs
xchg
lods
inc
dec
dec
or
mov
sbb
xor
push
cwtl
jle
cmpsl
pop
sarb
inc
inc
nop
inc
aas
into
mov
aad
mov
shrl
testb
leave
out
inc
mov
lcall
sbb
data16
inc
popf
xor
fisttpl
push
and
test
stc
inc
jo
movsb
stc
mov
mov
stos
or
and
xor
adc
add
in
jns
lods
or
jae
mov
outsl
dec
aam
pop
cld
arpl
ljmp
and
in
arpl
imul
ret
jne
int
addr16
stc
and
sbbb
jge
leave
and
addr16
add
mov
data16
jl
sbb
mov
cmp
out
xor
cmp
lods
adcb
outsl
jmp
jnp
push
jno
jl
repz
xor
xor
hlt
in
and
lock
cmpsl
mov
jg,pn
hlt
xor
cmpsl
sbb
les
mov
pop
jmp
testl
int3
movups
jb
add
or
test
mov
sub
cmpsl
es
scas
nop
xor
cmp
test
cmpsl
sbb
xchg
loopne
pop
mov
pop
sub
sahf
shll
inc
and
dec
imul
mov
cmp
add
leave
mov
jbe
xchg
sti
je
mov
adc
lock
push
mov
or
pop
xor
clc
mov
sbb
out
lock
cs
xchg
in
jae
mull
mov
jmp
or
aas
rcrb
mov
into
push
and
ret
into
mov
mov
mov
sar
mov
sbb
dec
lret
imul
adc
imul
int3
jge
pop
test
push
pushl
fidivs
push
out
shll
push
test
xor
sti
fwait
jae
cltd
push
mov
adc
lock
push
mov
rorb
fadds
mov
xor
push
dec
jge
sbb
mov
xchg
and
sti
xor
add
addl
das
cmp
xchg
aad
sub
inc
inc
fcmovb
aaa
fdivrl
inc
push
pop
hlt
in
negl
std
lods
out
push
xor
popa
pop
adc
movsl
mov
in
sub
mov
pushf
pushf
fsubrs
nop
dec
mov
mov
lret
pop
sahf
lds
add
aad
xchg
stos
cmpsl
jmp
sbb
add
in
xor
jb
lods
inc
push
push
fidivs
xchg
pop
rolb
clc
in
pusha
scas
or
lahf
or
rcll
daa
mov
jle
int3
mov
inc
imul
in
icebp
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
ja
mov
stos
adc
sbb
fs
sbb
mov
adc
cld
ficomps
and
movsb
cltd
mov
or
fisubrl
and
aad
test
adc
loope
fnstcw
and
xlat
movsb
push
jns
adc
jle
test
inc
lds
cmp
lcall
orps
fldenv
mov
bswap
cs
stc
cmp
inc
inc
ljmp
sub
jae
sub
aam
iret
mov
ja
mov
in
aad
jo
cmpsl
jbe
jg
jns
xchg
push
mov
stos
stos
in
rcrb
push
addr16
pop
pop
jno
lods
cmp
je
das
das
and
test
sub
push
in
aaa
adc
jl
mov
jle
cmp
cwtl
or
mov
idivl
movsb
movsl
mov
push
xchg
incl
pushf
aad
fists
dec
add
inc
xchg
xchg
std
es
or
jecxz
mov
jl
imul
rorb
insb
ret
aam
push
xor
movsb
shl
or
push
xor
nop
jecxz
imul
or
nop
lret
jmp
cmpsl
addl
cwtl
imul
call
sub
popf
jl
imul
dec
or
fadds
adc
and
sbb
stos
mov
int
fists
shrl
call
ficoml
adc
sbb
scas
xor
std
aam
jno
bound
push
jp
fs
cs
sti
cld
sub
jae
adc
data16
jge
or
jns
rdrand
mov
es
loopne
out
sbb
jecxz
aam
test
out
sub
dec
jae
orl
jp
iret
adc
push
add
mov
adc
or
stos
cmp
mov
fs
in
jmp
scas
movsb
pushl
pop
dec
mov
fadd
orl
lahf
loop
adc
add
dec
pusha
pop
cltd
jbe
int3
and
pop
sbb
test
enter
or
orl
test
lret
xor
pusha
mov
pop
sbb
jle
in
inc
mov
subl
push
mov
lods
inc
in
pop
out
sbb
std
inc
or
sbb
mov
movsb
shl
clc
mov
and
add
leave
jp
jmp
push
test
mov
jnp
adc
xchg
mov
push
lret
mov
cmc
nop
lret
push
fwait
add
xchg
mov
je
inc
push
pop
int
mov
xchg
jne
jg
and
test
jo
stos
adc
negl
mov
or
dec
mov
aaa
jno
nop
xchg
jns
mov
push
pop
int3
lods
and
repnz
cmc
adc
inc
leave
mov
fmulp
mov
inc
inc
mov
sub
push
pop
sub
jnp
lcall
lods
div
add
daa
out
in
lret
lods
ja
mov
and
ret
xchg
es
cld
dec
loopne
clc
leave
repnz
out
aam
into
sbb
add
cmc
dec
leave
jb
and
mov
aam
push
fisubl
stc
gs
ljmp
insb
nop
or
jno
movsb
popa
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
cmp
xor
sbb
jmp
es
std
sub
lock
mov
push
mov
ja
icebp
pop
pop
pop
es
out
xor
or
mov
popa
mov
popa
les
mov
fidivs
push
pushf
ss
add
sbb
fisubrl
arpl
pop
sub
add
xchg
subl
popf
adc
lahf
jp
shlb
cmc
pusha
or
ljmp
jecxz
xchg
cli
mov
in
repnz
insb
push
insb
add
xchg
popf
ja
int3
cs
ds
mov
arpl
idivb
sub
movsb
xor
inc
xor
xrelease
sti
movl
sahf
jbe
inc
aas
cmp
jecxz
sub
xor
xchg
cld
sub
pop
sbb
or
and
sub
add
insl
dec
pop
ja
lds
fiaddl
fisubl
jnp
jo
adc
pop
aas
xchg
xor
fcompl
sarb
ret
insb
sbb
lock
xchg
mov
sti
xchg
pop
xor
mov
add
push
sbb
adc
mov
lret
push
mov
test
mov
jge
lcall
and
in
ss
es
xor
lock
mov
decl
ds
fisubl
fldcw
inc
cmp
loope
inc
xchg
pop
into
pop
arpl
sbb
xchg
inc
insl
sbb
daa
insl
pop
fs
insl
mov
aas
cmp
addr16
mov
outsl
xchg
mov
mull
iret
or
shrl
or
jge
pop
mov
adcb
sbb
xchg
push
insl
js
xchg
xor
notl
sahf
jl
cld
cmp
ljmp
dec
into
xor
adc
shll
mov
cmp
cwtl
push
fstpl
data16
jb
sbbb
movsb
cmp
jbe
cli
dec
lret
leave
fildl
adc
add
xor
sahf
xor
movsl
pop
mov
test
jge
jge
icebp
pop
jbe
inc
jmp
sbb
or
xor
lds
xor
xchg
ficompl
and
adcl
sbb
pop
lock
mov
popf
xor
or
sbb
bound
sub
sbb
xlat
enter
lds
mov
lret
aam
xor
add
idivb
sbb
js
jmp
push
inc
mov
sbb
xchg
xchg
push
xchg
jge
jne
negb
cmp
test
jbe,pn
push
pushf
adc
sbb
loop
jmp
test
sbb
xchg
add
std
rcrb
pop
int
out
jp
lods
push
test
push
ds
test
cwtl
xchg
jno
nop
push
jns
push
and
push
mov
nop
xor
mov
mov
arpl
bound
stc
xchg
dec
jmp
mov
lds
cli
mov
daa
pop
cmpsl
pop
push
pop
xchg
jae
movl
lock
rcrb
das
call
test
lods
pushf
cmpl
xor
out
pop
cld
xchg
cmovle
pop
adc
negb
mov
out
jl
mov
sub
pop
inc
mov
rolb
lock
cwtl
int3
aad
lods
pop
sbb
imul
out
fidivrs
xor
inc
add
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
sub
rclb
sbb
test
push
andb
incb
or
cli
inc
aas
or
sub
xorb
add
inc
aam
fbld
fildl
sub
fadds
mov
les
mov
stos
adc
xchg
xor
xchg
push
xchg
dec
sbb
sub
lods
mov
xlat
lret
jae
push
pop
fistpl
mov
mov
push
cmp
divl
add
ja
xor
or
stc
data16
mov
loopne
push
push
sbb
sub
orb
fistl
divb
jmp
fiadds
in
push
les
xchg
ret
out
rcr
lods
inc
and
inc
daa
cltd
ljmp
push
xor
in
or
xchg
xchg
pop
ljmp
out
pop
jecxz
pop
mov
lods
jl
push
cli
iret
not
js
negb
mov
lea
xchg
adc
mov
cmp
adc
enter
das
adc
sub
stos
in
inc
dec
sub
dec
repnz
repz
sub
fwait
xorb
shrb
add
mov
shl
test
and
push
insb
and
add
inc
cmpsb
popf
mov
aam
mov
sub
out
cmp
jle
sub
jge
fadd
xchg
cli
cmp
fidivl
cwtl
cmp
cmp
shll
cmpsl
push
sub
test
fstpt
jns
push
movsl
psrlw
fiadds
push
rcrl
lcall
stc
aaa
test
pop
jmp
fists
pop
inc
lret
cltd
mov
push
inc
mov
ss
xor
dec
jmp
mov
dec
into
lds
jg
mov
adcl
push
add
inc
mov
xchg
dec
sub
and
mov
outsl
in
inc
cmp
sarl
loopne
inc
sbb
adc
mov
popa
sub
jno
cmp
test
push
jg
jp
cmc
add
subb
ficompl
sbb
jmp
js
in
add
sti
push
fstps
inc
jge
mov
push
adc
fsubr
xchg
clc
jnp
in
or
pop
gs
imul
fcoms
jo
jmp
fst
mov
int
imul
dec
lret
test
pop
daa
cmpsb
enter
cmp
push
aaa
xchg
pop
push
inc
mov
cmp
pop
inc
aas
mov
movsb
add
outsl
xstore-rng
cmpsl
sbb
insb
dec
mov
cld
sarb
xorl
je
adc
loopne
fstps
lret
xchg
mov
mov
je
dec
mov
mov
or
fistpll
fwait
int3
icebp
fwait
inc
mov
aaa
sub
adc
in
mov
pop
lds
dec
push
das
gs
push
jmp
dec
ljmp
jg
mov
gs
movsl
scas
xor
loope
mov
aam
test
imul
adc
adc
sub
sub
mov
shrb
jg
pop
mov
mov
inc
pop
cli
mov
mov
pop
ds
and
js
clc
add
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
cmp
sbb
adc
sbb
jecxz
idivb
mov
mov
cmpsl
jp
inc
sub
jge
xchg
and
cmpsl
out
or
idivl
out
insl
cmp
pop
je
inc
mov
adc
std
fsubr
mov
xor
xor
xor
mov
out
push
dec
rorl
mov
aam
sub
gs
inc
pop
xor
push
lea
sbb
xor
ficoms
mov
imul
stc
adc
xchg
lock
lcall
xlat
lret
xor
sub
adc
sbb
andb
push
gs
sbb
insb
mov
sbb
sbb
and
and
jecxz
mov
mov
dec
lahf
inc
mov
subl
test
push
xchg
mov
jae
popf
mov
push
push
cmc
jle
jg
push
sarl
cmp
hlt
rcll
sbb
pop
pop
int3
lds
in
movsb
scas
xchg
je
jl
test
inc
es
inc
fcoml
xor
arpl
in
cli
fisttpl
repz
dec
adc
cmp
sti
jle
xor
mov
jb
push
xor
sbb
ret
in
ljmp
xor
inc
inc
adc
or
roll
loope
dec
xor
popf
xor
cld
sbb
mov
or
insl
out
push
into
xchg
movsb
dec
pop
imul
xchg
xor
sub
sub
mov
mov
mov
test
shll
add
scas
rcrb
push
mov
pop
js
rolb
push
and
rcr
add
iret
mov
xor
sti
bnd
jmp
mov
sub
scas
jae
jns
jge
sbb
or
or
push
or
mov
fwait
movsb
adc
push
dec
or
mov
mov
cmp
xchg
nop
sbb
mov
sub
repz
jl
hlt
fucomi
imul
fcom
aad
dec
xchg
cmp
and
jecxz
enter
lods
add
jmp
xchg
aaa
mov
jp
cmpsl
lods
jns
cmpsl
cltd
dec
cwtl
leave
bound
inc
and
and
dec
and
inc
outsl
or
jle
inc
aam
out
daa
fsubrp
bound
loope
pop
dec
mov
cs
add
out
ror
push
mov
push
outsb
sarl
data16
xchg
out
jle
enter
sub
sub
xor
movsl
dec
cs
ret
in
sahf
movl
or
outsb
sub
jb
inc
divl
movsb
adc
push
les
loope
pop
cmpsl
es
pop
adc
fiaddl
xchg
shlb
adc
out
enter
and
punpckhbw
lcall
cmp
adc
mov
out
pop
pop
jns
mov
loop
lods
xchg
fistps
frstor
rol
inc
cmpb
pop
jbe
xor
jmp
sbb
adc
mov
lds
adc
pop
cmp
ljmp
dec
or
mov
scas
cmp
adc
imul
cld
push
add
adc
push
ja
jp
push
mov
arpl
mov
shrb
xor
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
push
jmp
sbb
adc
sbb
decb
ret
stos
lea
lea
add
outsl
adc
cmp
sub
out
pop
pop
sbb
cmp
add
adc
add
add
mov
push
fiadds
cmpsl
repnz
add
out
je
xchg
sub
sarb
cmp
repnz
adc
lock
sahf
adc
inc
in
mov
cli
lock
movb
mov
loopne
jmp
pop
repnz
scas
jge
push
out
xlat
sti
repnz
xorb
cltd
mov
popa
mov
js
mov
jnp
mov
movl
arpl
cmp
or
mov
push
cmpsl
repnz
fsubl
sub
es
addb
sbb
stos
and
push
adc
cmp
mov
orb
mov
test
fdivrs
jb
in
sarl
push
arpl
inc
test
fdivrs
cmpsl
push
fs
mov
xchg
add
mov
sub
cs
adc
nop
shlb
inc
pop
mov
cmp
xorl
jge
pushf
scas
in
pop
imul
bound
fstp
aaa
scas
cmpsb
push
mov
push
lock
rclb
out
mov
and
add
mov
out
adcl
jp
and
xor
adc
cld
lahf
mov
pop
adc
adc
das
jbe
push
inc
pop
sub
stos
sbb
pushf
inc
mov
clc
xchg
and
aaa
pop
shll
jmp
mov
pop
mov
xor
xchg
xlat
xchg
daa
lret
jle
lret
fisttpll
jecxz
cmpsb
push
lahf
mov
and
fistps
sub
jg
imul
add
push
add
push
pop
lea
sbb
js
xchg
int3
push
or
dec
adc
popa
mov
dec
sbb
add
sub
mov
stos
loopne
outsb
cltd
stc
cltd
imul
sbb
pop
test
iret
rol
jecxz
loop
adc
sahf
jge
movsb
xchg
inc
push
pop
fdivl
call
and
jbe
xchg
inc
sbb
clc
adc
ss
mov
xorb
mov
mov
cmp
loopne
cmp
cmc
sub
movsb
inc
andl
fsubrp
xchg
inc
ret
ds
sub
mov
hlt
mov
shlb
aas
in
sbb
jnp
pushf
or
xchg
xchg
aaa
jg
idiv
mov
cld
cmp
jmp
imul
dec
mov
add
mov
inc
enter
std
or
and
ds
addr16
sbbl
leave
incb
jmp
cmp
movsb
and
call
movsb
divb
jns
out
lock
sbb
sahf
add
aaa
cli
mov
popf
push
cmp
jmp
xor
pop
fstps
adc
mov
aam
int
push
mov
jmp
xchg
int
xchg
cli
and
push
sub
mov
inc
mov
call
add
cmp
fs
in
and
add
mov
xchg
xor
push
pop
add
dec
xchg
add
cltd
dec
jmp
add
lret
loopne
mov
dec
xor
fcoms
ds
enter
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
or
sbb
adc
sbb
mov
jo
cld
push
mov
hlt
mov
adcb
imul
call
pop
in
dec
add
adc
fistl
cmc
gs
js
xchg
ror
sahf
ret
pop
push
add
jle
movsl
scas
lods
mov
lock
mov
adc
mov
inc
add
cmpsl
pop
sub
cmpsl
ds
dec
push
ljmp
mov
les
inc
shlb
mov
in
jne
rcrb
pop
push
in
cli
stos
std
les
insl
cmp
push
push
dec
xchg
mov
push
fisubs
mov
insl
inc
cs
pop
loop
cmp
decl
sub
xchg
mov
fisubrs
pop
pop
fs
fsubs
mov
or
mov
push
ret
cmpsb
jp
mov
fmul
mov
std
stos
dec
aad
mov
xchg
pusha
push
bound
dec
icebp
jne
ror
scas
lea
cmpsl
cmpsl
and
sub
mov
cltd
push
add
or
pop
or
je
sbb
mov
mull
pop
sbb
in
test
fcompl
cmpxchg
mov
dec
dec
les
sti
xchg
pushf
sub
lods
lea
cli
cmp
imul
into
jmp
out
repnz
popa
sbb
push
lcall
mov
push
pop
add
add
loope
dec
pop
fcmovb
mov
repnz
sbb
cmpsl
aam
sbb
nop
cwtl
lretw
ret
cmp
imul
adc
repz
sub
pop
scas
adc
pushf
lods
add
push
decb
add
sub
or
outsl
mov
add
mov
imul
cmp
data16
mov
insb
jg
mov
xchg
jl
dec
cmp
pop
push
add
xchg
mov
movsl
xchg
push
inc
jns
adc
loope
daa
aas
push
sti
and
push
fcomps
lcall
or
add
testl
rclb
daa
int3
sub
repz
insb
loope
es
lea
fcompl
imul
sbb
fldcw
hlt
outsl
insb
push
mov
mov
dec
fidivl
xor
jns
jne
dec
mov
or
imul
inc
clc
jbe
leave
repnz
aaa
add
in
cmpsl
adc
xchg
aas
jbe
sub
mov
xchg
xor
push
inc
gs
int
pop
cld
roll
pusha
or
lea
lock
mov
adc
sbb
xchg
iret
repz
scas
push
sbb
sub
ja
adc
cwtl
cmc
paddw
xchg
stos
or
inc
lret
stc
ficoms
movsb
nop
xchg
xchg
ds
ja
fisubl
jno
mov
and
mov
sbb
popa
fistps
cs
imul
test
les
lds
mov
adc
push
pop
pop
pusha
mov
or
rorl
add
inc
loop
stos
aas
insl
mov
sbb
dec
cs
jnp
dec
mov
xchg
sbb
ret
repz
pop
jle
mov
mov
test
out
push
and
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
xor
sbb
jge
xor
and
repnz
mov
jle
sub
inc
cmpsl
cmp
or
and
out
mov
push
add
jp
xor
xchg
rcl
jo
mov
cmp
add
pop
xor
sbb
imul
dec
scas
test
fwait
push
push
sub
jns
fnstcw
fwait
inc
mov
ret
lea
push
jle
das
dec
mov
add
mov
sbb
das
xchg
aaa
push
push
sbb
cmp
aas
and
add
cmc
insb
gs
add
loop
sbb
push
add
pop
or
js
pop
pusha
dec
ljmp
scas
mov
pop
and
ds
outsl
pop
cltd
fcomp
inc
scas
outsl
mov
xor
adcl
cltd
lea
lret
jnp
out
sub
out
insb
sbb
test
sti
aam
add
call
pushf
or
push
movsl
insb
in
or
inc
sbb
mov
xor
mov
and
cmc
xchg
lcall
loop
sahf
into
adc
dec
iret
adc
imul
das
cwtl
ljmp
aam
cmp
jmp
sub
push
push
daa
mov
push
dec
adc
adc
daa
lods
cmp
mov
arpl
sbb
clc
sahf
mov
dec
inc
jnp
pop
push
jge
lcall
jg
inc
dec
mov
fdivl
scas
aad
loope
push
add
pop
cmpl
out
push
jno
and
out
mov
and
cmp
icebp
cmpsl
notb
cmp
and
push
cmp
cmp
mov
dec
jecxz
cli
fadd
ljmp
sub
lret
mov
mov
repz
xor
icebp
repnz
int3
outsl
mov
push
jne
and
mov
pop
mov
mov
aaa
sbb
mov
and
sahf
out
dec
jo
outsl
enter
mov
cmp
add
cmp
inc
idivb
adc
cmp
pop
and
xchg
or
aad
add
in
leave
push
lds
push
pop
decb
mov
add
aam
scas
push
inc
xor
xchg
clc
call
jno
sbb
roll
lods
add
pop
fs
and
stos
cmp
xor
jne
lret
imul
es
push
test
dec
mov
mov
aad
add
out
outsl
xchg
shll
push
mov
or
jmp
mov
add
scas
imul
sub
fbstp
mov
and
inc
and
adc
add
repz
call
xchg
ss
sbb
pop
mov
out
pop
mov
sub
fisubl
push
in
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
mov
mov
mov
sbb
stc
add
daa
cmp
dec
or
inc
dec
lret
test
inc
int3
in
mov
je
or
push
xor
mov
xchg
sub
fstpl
cmp
js
adc
lds
movq
rolb
mov
jge
test
subl
and
xor
scas
les
mov
sbb
aas
xchg
lds
ljmp
adc
jmp
scas
push
pop
jle
aaa
xor
repz
ret
icebp
sub
pop
sarl
subb
cltd
fstl
cmp
mov
pushf
and
mov
in
xchg
sbb
pop
dec
call
loopne
loop
cmpsl
pop
xchg
xor
lret
sahf
adcl
cltd
push
inc
and
ret
xchg
dec
mulb
cmpsb
mov
dec
mov
stc
pop
sbb
jno
int3
test
cmp
sbbb
mov
ss
je
int
sti
bound
pop
and
dec
fidivrl
jno
adc
and
adc
sbb
int
pusha
add
pop
jo
mov
shll
xchg
imul
shlb
inc
xchg
ds
mov
scas
andps
out
test
cs
xor
out
je
sahf
cld
call
mov
movsb
testb
push
je
pop
push
stos
sbb
inc
loope
or
fiaddl
lcall
ret
int3
sahf
xchg
leave
jmp
fs
mov
and
push
cmp
xchg
lock
mov
insl
xchg
dec
leave
mov
sbb
cmp
cmp
shll
sub
enter
pushf
mov
jmp
mov
sbb
xor
int
jp
jne
adc
mov
and
sbb
mov
dec
call
push
adc
mov
pusha
in
cltd
sbb
repnz
aas
stc
test
cmc
xchg
in
push
outsl
dec
test
and
cmp
cmpb
pushl
insb
jg
mov
mov
adc
cwtl
xor
add
and
or
push
add
inc
les
mov
sub
cmpsb
shll
adc
xchg
xchg
push
ffreep
pop
pushf
sub
repz
int3
add
arpl
in
push
cltd
data16
les
mov
lret
fldenv
mov
add
xor
xchg
mov
loope
xor
pop
push
xlat
inc
mov
das
push
addr16
int
cmp
inc
jnp
aaa
lcall
sti
enter
fdivp
or
dec
xchg
repnz
hlt
jle
jp
cmp
shll
iret
dec
aam
jbe
rclb
mov
pop
cwtl
push
sarl
in
xchg
mov
push
jae
push
aam
rorb
xor
lea
nop
xor
push
xchg
push
xor
mov
pop
sbb
sbb
aad
popf
inc
dec
adc
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
jle
dec
jle
add
sbb
cs
xor
int3
or
cmp
inc
out
dec
rcrb
repz
push
je
adc
loope
in
adcl
adc
and
cmpl
aas
js
addr16
pop
mov
call
std
leave
cmovne
gs
push
pop
dec
jg
outsl
xchg
repnz
lahf
rcrb
in
test
sub
repz
mov
ret
lret
stc
mov
movsb
mov
or
mov
xchg
xchg
in
movsl
dec
add
sub
adc
aas
or
out
hlt
adc
mov
into
xorb
cld
mov
xchg
into
and
jg
inc
dec
inc
aam
dec
ret
dec
push
pushf
mov
test
xor
outsl
cmpsl
and
mov
cwtl
jmp
jo
mov
enter
push
inc
sarb
popf
popa
sbb
push
mov
inc
call
adc
ja
shrd
lret
mov
add
in
addr16
lret
mov
mov
in
sub
jo
ss
cmp
sub
testl
pop
cmpsl
pop
push
jg
push
add
pop
shlb
mov
xor
mov
lods
sub
iret
mov
inc
jmp
adc
out
aas
or
xor
add
sub
cmpsb
push
pop
add
and
lds
xor
addb
fsubrl
fldt
cmp
adc
xor
and
mov
mov
js
add
push
mov
mov
pop
sbb
mov
mov
jno
cmc
sbb
mov
ror
ficoml
sub
sub
xor
lcall
imul
sbb
cmp
mov
testb
stos
pop
jnp
mov
push
es
sub
cltd
rcl
fidivrs
insl
mov
in
xor
push
xchg
imul
inc
leave
and
test
xor
stc
sub
mov
pop
and
dec
in
or
punpcklwd
jo
fs
int3
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
jl
cld
push
sbb
lcall
scas
das
ss
sti
jmp
mov
push
jp
out
jne
push
sbb
cmp
mov
or
pop
divb
pop
neg
xlat
loop
fnstenv
int
jb
sub
pop
les
stc
dec
cltd
mov
and
push
lea
stc
adc
fnstsw
mov
test
mul
insb
xchg
fs
xchg
lods
fisubs
jns
cmp
adc
outsb
sub
bound
sbbl
stc
leave
pop
repnz
add
sahf
inc
inc
pusha
xchg
pushf
pop
lock
pop
and
out
repnz
into
dec
mov
adc
jno
insl
jno
add
mov
xor
push
mov
push
cmp
sti
sub
fsubs
adcl
cli
sub
sarb
inc
cmp
sbb
sbb
movsl
rcrl
clc
mov
adc
roll
push
inc
jge
jnp
outsl
nop
pop
gs
jge
mov
lods
jb
push
jne
cld
sahf
mov
pop
cmp
out
push
sahf
or
insl
pop
xchg
fbstp
adc
dec
push
fstl
seto
int
mov
sahf
and
push
cmc
outsl
mov
std
jno
pop
adc
sbb
mov
mov
push
cmp
ljmp
add
es
shlb
in
push
adc
xchg
pop
mov
inc
in
mov
or
lret
loope
mov
js
xlat
adc
dec
stos
je
xor
popf
enter
sub
loop
add
out
imul
and
ss
repz
pop
fcomps
jns
pop
sbb
repz
mov
loop
adc
cmp
jl
pop
mov
add
nop
sub
jbe
mov
cmp
mov
cmpsb
aas
cmp
addr16
std
push
rorl
scas
lcall
push
rcrb
cltd
fldcw
jbe
mov
xchg
leave
ja
aad
add
in
xor
pshufw
movsl
hlt
insb
pop
test
or
inc
out
rorl
aam
loope
and
inc
adc
enter
add
adc
jmp
mov
sbb
mov
stc
clc
push
sbb
inc
test
inc
mov
push
fisubrl
pop
and
ret
or
cmc
das
test
push
add
dec
out
jg
cli
fldln2
sahf
aad
dec
adc
and
sub
cli
lds
mov
data16
jl
mov
inc
ss
fnstenv
adc
pop
notl
sbb
addr16
out
aam
dec
push
mov
and
lds
and
arpl
leave
mov
xchg
jmp
push
fldcw
insb
or
jecxz
sahf
outsb
pop
push
adcb
into
jae
and
adc
in
mov
xor
sahf
push
mov
ret
int
rorl
inc
data16
and
mov
mull
ret
leave
add
add
sti
push
jle
pop
jg
cmc
xor
mov
outsl
adc
loope
lock
daa
mov
stc
lahf
cltd
imul
mov
mov
rclb
jecxz
shrb
inc
jg
xor
jle
xor
or
xchg
mul
dec
cmp
stc
xor
adc
std
div
mov
xor
jge
cmpsb
push
mov
and
adc
add
fidivl
mov
test
ficoml
ja
inc
imul
cld
popf
mov
jne
cmp
cmp
test
fnsave
jge
inc
in
cmpsl
mov
repz
shl
push
cmp
fidivrs
adc
mov
push
repnz
imul
test
cmp
imul
sub
les
mov
incl
mov
cmc
loope
xchg
inc
add
sbb
pop
jns
lods
ds
xor
aad
js
cmp
dec
rcl
sbb
adc
mov
cmp
movsb
insl
mov
out
sub
jg
pop
mov
pop
push
test
add
icebp
icebp
stos
imul
mov
xchg
xchg
cmp
fdivs
ss
jo
xchg
fisubrl
outsl
jno
mov
xlat
adc
test
mov
in
adc
rclb
inc
pop
nop
jg
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
xor
jp
push
sbb
adc
sbb
ret
add
cmpsw
fbld
cmc
xlat
mov
lods
pop
xor
push
jo
xlat
jnp
lods
sti
dec
gs
mov
sbb
mov
negl
jg
jbe
imul
movsb
call
testb
loop
int3
aaa
xchg
dec
add
inc
sub
push
cmp
jnp
push
adc
mov
das
ds
cmp
js
pop
jmp
cmpsb
into
cwtl
jmp
daa
push
adc
adc
or
leavew
idiv
cmc
mov
iret
loope
pop
jecxz
sub
addr16
push
lret
push
or
sub
addl
scas
adc
add
adc
sbb
cmpsb
cld
xor
cli
aaa
aaa
sbb
into
lret
lcall
ficoml
pop
push
dec
out
ljmp
dec
add
jnp
fidivrl
loope
rcrb
mov
mov
lret
pop
sub
aam
and
popa
subl
popa
inc
inc
stos
cltd
mov
inc
sub
cli
xor
sub
sbb
fsubs
xchg
fimuls
mov
mov
fnstenv
xchg
test
das
mov
nop
lds
xor
andl
jmp
mov
lods
out
movsb
adc
pushl
lods
pop
out
jp
mov
call
mov
sarb
fmul
cwtl
fisubl
lret
inc
cmc
mov
lcall
enter
orl
dec
xchg
jle
push
scas
pop
mov
add
mov
les
jae
push
and
inc
xchg
xchg
mov
inc
lret
jae
cs
cmp
arpl
jg
leave
push
sahf
loope
imul
jl
push
inc
xor
mov
sbb
fisttps
mov
fisubrl
jno
and
add
xlat
push
dec
insb
push
push
fsubrs
scas
aaa
xchg
or
sub
js
loope
lock
jle
inc
dec
xchg
sbb
sub
rclb
lret
aam
and
in
sbbl
mov
inc
popa
jns
in
cmpsl
es
ljmp
mov
inc
xor
pop
jno
ficoms
or
or
das
xor
xor
hlt
ja
fs
pop
inc
jg
pusha
or
lret
pop
cmp
cmp
or
popa
sub
ret
mov
aas
inc
push
xchg
mov
dec
xchg
dec
insl
popf
and
ljmp
mov
pusha
repz
pop
jnp
fadds
lods
sbb
pop
jne
movsl
in
mov
hlt
cmp
pop
in
add
out
cmc
xlat
in
or
stos
nop
lahf
mov
push
or
or
rorl
mov
cwtl
push
outsb
rcrl
scas
sahf
in
and
test
inc
lock
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
sbb
dec
stos
sub
jg
xor
and
shll
sub
or
scas
pop
sbb
aas
movsb
adc
and
push
ja
je
insb
lods
mov
inc
mov
call
sahf
xchg
call
adc
pop
xor
adc
add
in
daa
dec
add
and
mov
fimull
add
jecxz
and
pop
mov
and
and
addr16
jb
test
mov
movsl
sti
xorb
jbe
sub
sbb
xor
cmc
sub
mov
sahf
and
jo
push
jbe
lods
loopne
pop
jge
push
enter
push
xor
add
out
daa
mov
push
into
sub
pop
inc
inc
rcrb
nopl
push
cmp
pop
mov
pop
mov
xlat
xor
xor
and
or
aam
xor
lcall
ja
sbb
outsb
sbb
pop
sub
rclb
into
fisttpl
adc
jecxz
and
sbb
repz
and
je
xor
add
int3
mov
std
jae
mov
xchg
stc
std
cmc
ror
ljmp
cld
mov
jne
xor
jae
insb
mov
ret
and
ja
jae
push
mov
fsubrl
testb
xor
popa
mov
sub
adc
das
leave
fcomp
lods
xchg
inc
jmp
shr
adc
test
pusha
push
dec
cmp
inc
or
sti
pushf
call
xchg
into
push
addr16
and
xchg
push
popa
xor
popa
sbb
fmuls
or
add
cmp
xor
adc
mov
fsub
or
hlt
mov
int
lret
stos
mov
dec
jp
xchg
arpl
or
int
test
cli
shrl
js
or
and
adc
idivb
mov
aam
dec
mov
jb
jg
in
cs
adc
xor
inc
mov
jp
ds
push
mov
ja
pusha
xor
adc
cmp
cmp
je
mov
cmp
mov
ja
push
pop
jae
jo
adc
clc
lret
push
rcrl
mov
enter
lea
scas
std
mov
pop
leave
inc
call
outsl
inc
sub
xchg
mov
xor
sbb
fcoms
inc
unpckhps
into
mov
sbb
sbb
xor
loope
cwtl
sub
xchg
jecxz
std
inc
test
fsts
test
lret
mov
mov
dec
cli
add
pushf
jb
and
lock
jns
jmp
pop
arpl
ret
push
test
or
adc
sahf
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
jmp
xor
addr16
popa
sbb
and
pop
sub
roll
hlt
into
out
loop
js
and
loope
pop
es
popa
lods
cs
lea
incb
aam
or
sti
xchg
jae
pop
mov
ds
inc
bound
icebp
jo
mov
mulb
cmp
mov
pop
push
xor
cmpsb
popf
and
sti
jo
mov
or
enter
cmp
out
jp
and
mov
mov
push
out
pop
repnz
pop
addb
jo
sub
jo
cmp
lock
loope
call
jb
add
cmc
add
arpl
pop
out
add
dec
sbb
mov
out
dec
bnd
bound
inc
scas
aam
push
bnd
lock
and
imul
cltd
subps
and
adc
sbb
std
jnp
loop
stc
movsl
xchg
jp
shrl
mov
fwait
push
mov
dec
and
push
movl
xor
jmp
int3
push
mov
or
cltd
inc
hlt
inc
jge,pn
arpl
inc
sahf
push
hlt
lcall
or
and
mov
and
out
iret
mov
xchg
xchg
push
adc
daa
add
aad
mov
inc
cmp
or
fcmovb
leave
push
aas
push
fcmovnu
inc
jle
jb
leave
inc
sub
sub
xor
iret
sub
mov
mov
outsl
jb
add
jge
es
ficompl
push
mov
cli
fdivrl
icebp
xchg
inc
pop
inc
push
in
cmc
xor
or
daa
mov
cmp
cmpsl
jbe
add
push
pop
ficoms
clc
sahf
push
adc
imul
in
shr
cmp
pop
jbe
jge
xchg
and
ror
arpl
adc
sbb
or
pop
dec
dec
sbb
sub
icebp
mov
cmpsl
mov
inc
lcall
mov
aaa
out
data16
cli
test
push
sarb
pop
push
jg
into
loop
sbbb
adc
cmpb
push
arpl
mov
js
rorb
cs
push
out
sub
and
push
loopne
cmc
sbb
jnp
adc
jmp
aas
stos
sub
dec
xor
sbb
shlb
pop
inc
sub
xchg
mov
xchg
add
jb
rorl
in
xor
xchg
push
pop
dec
lods
xchg
imul
xchg
movsl
dec
adc
and
push
icebp
xor
or
lea
mov
loop
lea
xchg
lret
pushf
faddl
and
leave
xchg
add
sbb
mov
jo
mov
jle
add
imul
cmp
ret
loop
das
adc
dec
insl
fisubs
push
or
jg
iret
jnp
pusha
mov
ds
jbe
cltd
icebp
xor
ds
cmp
inc
scas
sub
xchg
add
cli
bound
jmp
jmp
mov
les
adc
sbb
in
dec
and
mov
mov
push
jl
scas
jl
mov
xchg
dec
divb
repz
rclb
xchg
aaa
pop
int
dec
xchg
inc
outsb
jno
xchg
pushf
mov
loopne
xadd
mov
clc
inc
sahf
xchg
testb
mov
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
daa
es
sub
stos
ret
imul
cmp
sub
aas
ret
stos
and
push
clc
adc
enter
jo
dec
sbb
js
push
hlt
push
xchg
jo
mov
dec
pop
lret
sbb
xchg
pop
test
inc
ucomiss
ret
lcall
out
aaa
sub
int3
les
inc
jns
push
push
and
add
push
push
ret
clc
or
push
inc
loop
mov
push
nop
sbb
push
out
sbb
push
mov
mov
popf
stos
cmc
add
adc
iret
pop
enter
jp
fisttpll
in
lock
adc
cli
push
jp
xchg
faddl
xchg
sbb
loop
out
dec
and
xchg
call
adc
addr16
and
mov
jge
pop
dec
punpckhbw
mul
scas
out
push
int
enter
aad
cld
outsl
faddl
jnp
hlt
mov
inc
mov
push
cs
out
ja
repnz
add
and
pop
in
mov
ljmp
push
cmpsb
add
adc
mov
adc
sahf
and
sbb
into
fwait
mov
jp
mov
adc
repz
test
sub
sub
cs
push
mov
cmp
add
mov
mov
mov
dec
and
mov
in
in
adc
push
pop
sub
loope
jecxz
adc
sbb
pop
adc
jno
lea
adc
roll
mov
jl
pop
jae
stos
sbb
sub
xchg
sbb
imul
mov
icebp
jmp
fsubrp
jge
hlt
pop
mov
scas
sbb
test
ja
cld
scas
sbb
jge
pop
pop
sahf
popf
insl
stc
push
pop
push
push
in
pop
push
sbb
fcomps
add
jns
ret
or
pusha
popf
pop
aas
jno
add
iret
push
and
cmp
push
mov
cwtl
lds
jge
out
sahf
imul
mov
in
sub
push
mov
xchg
addb
push
test
ret
dec
inc
jo
clc
inc
pushf
sbb
ja
les
xor
mov
aas
and
lods
stos
shll
inc
xchg
das
leave
std
dec
cmp
fsts
arpl
ds
dec
ds
pop
pushf
push
push
out
xchg
mov
out
mov
aas
pop
jae
or
inc
ds
mov
insl
mov
nop
dec
hlt
cs
cmp
clc
popf
push
mov
xchg
xor
imul
arpl
fadds
je
jae
or
aas
jno
add
mov
add
iret
mov
adc
fidivrl
ljmp
aam
lods
mov
push
xchg
inc
mov
sub
mov
sarb
pop
in
faddl
push
call
loope
sub
sahf
or
mov
xor
aaa
loopne
ficoml
xchg
jns
sbbb
mov
popf
lea
and
xor
dec
out
outsl
je
loope
sub
lret
insb
adcb
jnp
cmp
or
sub
and
xor
jmp
lret
mov
lea
and
popa
dec
cmpsl
inc
in
ja
sti
sbb
and
xor
ffree
idivb
sub
movsb
sbb
test
movl
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
inc
cmp
sbb
sahf
testb
les
loop
add
adc
sahf
push
int3
jl
add
xor
movsb
pop
adc
out
daa
mov
rcrl
call
push
sbb
fwait
cmp
scas
xchg
aas
push
sub
push
mov
pop
xchg
mov
pop
xchg
xor
je
xor
xlat
cwtl
push
dec
cmp
fmul
fisttps
lahf
mov
sbb
xchg
add
sbb
xor
push
std
addb
ret
jbe
or
cmpsl
add
int3
dec
push
outsl
cs
or
jbe
cmp
sub
or
sub
push
fwait
imull
add
iret
test
jmp
icebp
repz
add
sbb
stos
mov
push
inc
and
xchg
inc
and
mov
and
fdiv
pusha
bnd
rcrl
add
lods
cli
pushf
scas
jmp
rclb
cmp
pop
std
in
movsb
int3
call
stc
leave
jno
scas
pop
sbb
xor
aaa
pushf
lds
popa
push
and
rcrb
cmp
jo
dec
inc
mov
jae
jne
cmp
adc
jg
int3
cmpb
xchg
sbbb
xchg
out
add
inc
cmc
push
dec
loop
das
popa
cmc
addr16
int3
loop
pop
mov
mov
fwait
lahf
rcrl
lret
mov
mov
xor
sarl
fldcw
fisubrs
lret
or
fs
jae
mov
xchg
test
dec
out
mov
scas
jnp
push
stos
add
sahf
or
adc
or
mov
je
clc
jmp
cmpsl
lods
mov
cs
xor
scas
pop
cli
inc
adc
push
push
fcoms
pop
popf
push
mov
jmp
gs
es
in
xchg
stos
stos
int3
adc
or
sbb
dec
dec
ret
jno
or
push
repz
jmp
lock
fdivrs
push
daa
lods
aad
outsb
adc
add
leave
xchg
adc
in
dec
dec
popf
inc
stos
add
cmp
fiadds
pushf
add
fs
gs
js
mov
cltd
bound
icebp
out
js
mov
test
xchg
cmpsl
iret
mov
mov
ficoms
mov
adc
push
lea
push
pusha
dec
xchg
pop
jge
sbb
cli
pushf
cmp
dec
cwtl
xchg
or
push
inc
sub
add
fistpll
shl
popf
pop
push
call
xchg
adc
enter
ffreep
fucomp
mov
cmp
ret
mov
mov
mov
bnd
add
outsl
mov
fstps
adc
add
lods
cli
mov
inc
das
or
out
dec
jle
arpl
in
dec
out
jo
cmp
sbb
pop
mov
xchg
cmp
mov
loop
push
popf
fisttpll
fcompl
mov
push
jmp
jb
fnsave
fidivs
dec
test
mov
clc
or
inc
stc
loop
cmp
outsb
xchg
jns
dec
sti
sahf
cmpsl
push
or
dec
gs
mov
fcomip
sbb
mull
fs
and
or
push
push
xchg
outsl
loopne
gs
je
cmpsb
outsb
jmp
add
jo
in
adc
dec
out
xor
and
xor
cmp
add
add
movb
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
int3
add
push
rcll
sbb
leave
sub
notl
mov
lret
je
mov
enter
jge
mov
xchg
push
lods
mov
pushf
dec
dec
mov
call
jl
dec
pop
ret
sbb
or
fs
stc
xor
sarl
add
iret
js
mov
xchg
mov
mov
pusha
sarb
stos
push
jo
pop
enter
outsb
mov
call
and
and
clc
std
shr
icebp
jp
les
data16
sub
idivl
mov
pusha
loop
cs
xchg
pop
adc
jge
add
addb
std
push
sbb
shll
hlt
clc
add
or
mov
lcall
and
xchg
jge
je
mov
dec
and
in
mov
inc
mov
hlt
and
dec
inc
das
jno
js
mov
or
lahf
std
xlat
mov
out
cmpsb
jbe
dec
sbb
or
push
lret
dec
mov
inc
insb
fs
test
pusha
subl
test
das
cld
fwait
jle
push
jl
mov
jae
in
cmp
leave
jecxz
jbe
dec
mov
imul
mov
test
adc
or
or
jne
testb
sub
add
out
push
das
shl
or
test
mov
lcall
xchg
push
punpckhbw
and
jo
pop
pop
cmp
pusha
add
dec
jecxz
xchg
mov
dec
and
mov
aas
or
push
movsb
outsl
pop
and
sub
adc
lock
sti
out
and
pop
test
pop
lret
out
mov
clc
out
pop
mov
push
jle
sub
arpl
in
mov
jb
mov
dec
mov
pop
jl
inc
pushf
inc
mov
jle
aas
aas
in
call
stos
sub
test
xchg
push
jae
repz
movb
adc
int
mov
or
mov
and
cld
jecxz
test
insb
movsl
push
push
pop
rorb
sub
cmpsl
mov
inc
stos
xor
add
dec
lock
inc
stc
and
adc
fsubrl
jg
or
push
push
addb
jnp
imul
add
popf
mov
inc
sti
pushf
xor
clc
outsb
test
addr16
int
jmp
pop
adc
xchg
adc
je
and
sbb
mov
dec
test
cwtl
dec
and
push
jle
outsl
mov
ja
or
sub
fnstsw
cmpsl
into
or
dec
sbb
sub
shrb
xchg
dec
lods
pop
push
xlat
or
or
push
std
test
scas
and
data16
lods
inc
popa
cld
roll
sub
sahf
dec
mov
pop
and
sbb
mov
stos
pop
push
pop
xchg
inc
les
push
push
aaa
pop
push
xor
lret
xchg
cli
mov
mov
adc
ja
test
cld
bound
xchg
movsl
or
xchg
dec
test
mov
add
pushf
gs
dec
sbb
dec
clc
push
mov
jb
call
xor
sub
rep
mov
jg
add
jg
mov
push
mov
pop
cli
dec
or
push
andl
mov
push
cmp
out
jp
pushf
outsb
popf
scas
or
dec
and
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
jne
jl
lret
push
sbb
mov
fdivrs
dec
jge
jo
in
mov
xor
xchg
in
sbb
mov
sub
lret
inc
aad
xchg
or
sbb
add
outsl
insb
std
dec
mov
je
cmp
popa
mull
add
jp
mov
imul
xchg
cs
out
or
sti
fwait
outsl
dec
sub
pop
or
shl
out
lahf
pop
adc
pusha
xor
lcall
loop
jl
pop
outsl
sub
lahf
test
mov
push
scas
test
ljmp
inc
cmp
ds
test
jmp
xor
or
shrb
ja
mov
or
enter
sub
mov
adc
int
inc
enter
popw
pop
int
or
in
repnz
subl
push
imulb
pop
test
inc
pop
clc
shll
mov
popf
xor
inc
lds
xchg
jnp
lret
in
xchg
xor
lds
add
adc
pop
test
sub
push
lret
ds
push
jg
fwait
mov
xchg
clc
fwait
lret
cmp
inc
sub
rorl
mov
xor
mov
test
jo
lods
adc
int
stos
ret
mov
into
cltd
sub
cmp
cmovb
xor
adc
jae
out
stos
mov
dec
or
jl
pop
pop
loopne
divl
add
incb
push
inc
inc
add
sub
adc
add
lahf
jecxz
repnz
pop
in
mov
shrl
dec
stos
fwait
push
jmp
fstl
xchg
sbb
jae
out
gs
mov
andl
mov
and
push
popf
xchg
jp
loop
push
push
or
repz
popl
adc
daa
mov
ljmp
shll
mov
jnp
xchg
stc
xor
push
push
aam
subb
mov
xchg
and
fwait
dec
es
push
add
popa
mov
jno
cmc
xchg
scas
inc
movsl
jmp
adc
icebp
scas
cmp
add
push
mov
loopnew
sbb
lahf
pop
push
std
xor
xchg
loope
inc
pop
push
shll
sbbl
loopne
sub
mov
ret
cmc
out
decb
fiaddl
lods
sub
add
cmpsb
mov
jnp
int
mov
addr16
sbb
lods
int
mov
mov
stc
in
adc
lcall
rorb
daa
mov
fstl
lock
cld
pusha
push
ss
adc
add
daa
mov
orl
ret
sbb
push
jg
lods
imul
jl
adc
jns
xchg
testb
sahf
sbb
inc
adc
popl
mov
adc
cs
repz
mov
repz
fimull
mov
push
xor
xchg
pop
out
inc
sahf
std
xchg
imul
mov
mov
pop
push
push
xchg
sbb
dec
data16
stos
into
inc
test
cmp
push
fdivrl
cli
pop
push
daa
jnp
xchg
out
test
loopne
call
stos
cli
mov
test
out
sub
stc
rcrb
ds
sbb
xchg
insb
and
push
popf
nop
adc
or
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
sub
jle
ret
push
sbb
daa
stc
mov
jmp
pop
mov
popf
jl
mov
sbb
jnp
add
mov
ret
les
add
das
fsubl
mov
sbb
dec
push
adc
pop
jnp
mov
shlb
loop
inc
sarb
bound
adcl
fbld
es
and
push
sub
jle
ret
jne
out
imul
loopne
inc
push
xor
sti
cwtl
icebp
xchg
das
pop
loopne
ds
sub
int3
pop
rclb
loopne
mov
sbb
jb
or
mov
sbb
sbb
push
cmc
and
aas
iret
add
mov
add
sbb
ret
adc
ljmp
test
push
arpl
subl
dec
shrb
adcb
xchg
mov
shlb
sbbl
inc
mov
iret
inc
pop
and
mov
cmp
ret
xor
decb
int
mov
fs
sub
dec
pop
aaa
cmpsb
sbb
lret
push
fsubl
enter
sbb
mov
push
adc
jl
adc
mov
enter
or
sub
inc
mov
hlt
cmp
xchg
dec
sti
sub
lods
out
adc
inc
test
jl
mov
xchg
fsubl
push
mov
aad
test
rcr
add
cmp
notb
mov
repnz
lret
cmp
inc
pop
pop
in
add
inc
mov
jmp
xchg
rol
cmpxchg
inc
in
push
lret
push
dec
repnz
fildll
mov
push
lret
dec
xchg
iret
fmuls
mov
into
mov
stos
jg
adc
ja
je
lods
add
inc
mov
mov
je
sti
adc
jo
test
push
pusha
adc
shrb
adc
addr16
inc
cwtl
jle
ret
pushf
push
testb
leave
fists
popa
scas
xchg
xchg
clc
xchg
shlb
xor
jb
xchg
imul
stc
and
test
add
jb
and
loop
lret
imul
stos
or
dec
sahf
jbe
xorb
ja
xor
add
sbb
int
cmpsb
cmpsl
adc
dec
cmp
mov
cmp
js
lock
add
scas
cmp
jbe
loope
fcompl
fcomip
and
outsb
aad
pop
xchg
mov
sub
cld
sub
movl
dec
addr16
insb
lock
jo
or
or
push
mov
call
cmc
push
dec
and
jb
push
into
push
jne
inc
push
push
out
out
mov
movsl
fsubl
rcrl
movsl
mov
or
mov
mov
xor
cmpsb
adc
mov
sub
lods
call
mov
jge
or
xchg
aas
dec
adc
stos
push
add
or
daa
sub
popf
jne
xchg
leave
push
ss
shll
adc
sbb
test
shrl
sub
mov
imul
lock
outsl
ss
sbbl
sbb
push
subl
xor
mov
add
add
lods
enter
pop
addb
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
fiadds
jecxz
push
sbb
shrl
bnd
pop
mov
call
adc
out
call
imul
out
mov
icebp
xlat
daa
jp
xor
mov
ds
and
xchg
divl
test
int3
or
subl
fdivl
pop
test
aad
out
scas
test
xor
adc
mov
ja
movsl
xchg
push
mov
into
sbb
test
inc
mov
pop
sbb
imul
lret
out
aas
adc
test
cmpsb
cmp
sub
adc
inc
je
loopne
int
mov
jmp
orl
hlt
jmp
repz
push
mov
loop
cmpsb
fildl
repz
call
jbe
imul
nop
out
jo
dec
mov
lods
idivl
inc
btc
stos
es
iret
adc
addb
mov
ffreep
gs
ljmp
push
pusha
into
ret
rorb
inc
push
lret
jb
das
leave
mov
rclb
or
out
insb
or
cmp
lret
into
je
sbb
daa
sub
inc
xchg
aad
jne
sub
mov
into
movsb
negb
cli
sub
loope
xchg
and
cmp
mov
push
jp
inc
jae
loope
push
dec
test
test
dec
fimuls
in
xchg
inc
popa
inc
stc
mov
in
and
fists
fadds
adc
xchg
aam
cmp
pushf
cli
es
lret
cmpl
pushf
mov
xchg
push
stc
xor
sub
sbb
je
frstor
clc
iret
clc
jecxz
lock
pop
xchg
daa
push
lsl
testb
or
pop
push
jae
adc
add
addr16
lea
sbb
adc
push
pop
or
sbb
push
xchg
movsl
mov
ficomps
aam
mov
mov
int
cli
cmp
movsl
jno
inc
sub
fwait
inc
movl
inc
jne
mov
and
mov
cmc
cmc
inc
insb
out
sbb
sub
in
mov
pop
or
push
das
adc
pop
enter
idiv
ja
fisubs
and
adcb
jb
mov
xor
xor
jecxz
sub
or
jecxz
cmovge
push
testl
jnp
dec
test
mov
js
xor
mov
or
xor
scas
push
pop
mov
xlat
les
iret
adc
int3
stos
clc
jnp
mov
loop
sub
mov
adc
inc
popf
cmp
test
mov
fdivrl
idivb
data16
mov
xorl
cmp
js
lret
cmpsl
punpcklbw
xor
nop
add
iret
out
xor
and
add
mov
mov
fildll
or
repnz
inc
push
jne
push
jp
dec
pop
xchg
fisttps
jl
mov
sub
push
sbb
cmp
stos
push
and
lods
out
inc
cs
mov
pcmpeqb
test
call
fcompl
inc
mov
aad
and
lahf
mov
scas
flds
cmp
ficompl
daa
or
imulb
mov
mov
jnp
nop
push
pop
loopne
mov
mov
mov
xchg
mov
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
into
pushf
enter
jb
xchg
jl
push
addr16
pop
push
jle
sub
fistps
xchg
cltd
cmpsb
out
xlat
pop
inc
cld
clc
ja
add
mov
cld
fstpt
or
push
push
add
inc
fsubs
xlat
cmp
cmpsl
fidivl
xor
test
faddp
cld
roll
or
test
dec
mov
jo
mov
aaa
test
sbb
loope
mov
jl
leave
cmc
xor
repz
mov
scas
and
and
push
jg
add
das
nop
mov
mov
inc
sub
imul
fdivrs
pop
outsb
cltd
aam
dec
sub
cmp
dec
shl
pop
in
cwtl
adc
push
sbb
mov
test
arpl
push
and
cmp
xchg
in
ljmp
mov
fbstp
iret
ficoml
popa
mov
ds
test
jno
test
pushf
mov
mov
stos
inc
addl
outsl
fldenv
fwait
jo
loope
fbld
xor
sub
mov
stos
mov
lcall
inc
lods
sub
add
lahf
cld
xor
inc
je
mov
xchg
mull
push
pop
and
sbb
fcmove
sbb
jle
adc
xchg
xchg
xor
cwtl
popa
inc
mov
cmc
pusha
jmp
add
adc
mov
jo
dec
subl
pop
mov
xchg
cmp
dec
cmp
fwait
fs
sub
movsb
push
push
data16
inc
push
add
jl
cmp
jecxz
movl
lcall
or
insl
rclb
inc
xor
dec
xor
cmc
dec
in
pop
cmp
and
mov
ljmp
mov
inc
xchg
cmc
and
data16
inc
in
or
or
inc
aam
jae
and
push
push
sub
fistpll
mov
fnstcw
xchg
movsl
dec
test
int
add
in
bound
in
insl
int
repnz
test
fadds
sbb
fmull
inc
negb
std
push
insl
andl
xchg
mov
inc
mov
xchg
inc
mov
jno
and
pop
inc
into
mov
in
xor
xor
xchg
push
sbb
sarl
and
test
les
mov
or
jmp
mov
cwtl
push
je
sahf
shl
js
xchg
push
jle
jne
pusha
shl
mov
das
shrl
ja
and
rcrl
xchg
add
push
push
adc
dec
xor
int3
fs
pop
frndint
ret
dec
mov
shll
cmp
mov
jbe
adc
dec
adc
out
fidivl
enter
popf
stc
xor
cmp
sbb
pop
adc
jl
das
popa
mov
std
xlat
cmp
fldl
adc
es
jg
frstor
pop
pop
sbb
xlat
push
clc
pop
pushf
aaa
negb
add
jecxz
mov
xchg
cltd
popf
int3
lahf
mov
in
and
mov
push
std
enter
sub
test
imul
mov
loop
pop
add
leave
dec
shr
xlat
call
imul
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
sub
and
mov
daa
inc
daa
xchg
pushf
addr16
jno
push
iret
stc
stos
clc
fprem
mov
xchg
shl
dec
mov
and
aas
mov
sub
mov
dec
pop
pushf
shr
aam
mov
lock
fiadds
sbb
inc
hlt
sub
cmpsl
mov
pop
inc
add
inc
or
or
popa
push
mov
shll
mov
inc
mov
and
sub
xor
push
call
adc
pop
inc
inc
orl
dec
icebp
xchg
ja
ljmp
cli
inc
scas
and
add
jg
adc
pop
or
pushf
dec
cmc
sub
dec
stos
test
and
jns
cmp
sbb
dec
sbb
fsubl
sub
shlb
pop
mov
sbb
add
inc
aam
test
xor
lods
shr
repz
push
jmp
mov
xchg
dec
pushf
scas
xor
add
mov
xchg
pop
inc
mov
ja
in
bound
pop
ljmp
in
sub
cwtl
aas
int3
sbb
inc
xor
inc
test
lea
and
add
into
ss
adc
pop
sahf
cmp
mov
dec
mov
aam
popa
sbb
inc
rcll
dec
ds
adc
xor
pop
adc
leave
xchg
mov
pop
sbb
dec
faddl
and
push
xchg
adc
out
dec
pop
mov
loope
loope
mov
mov
sub
adc
push
call
and
lock
dec
shll
out
aam
popa
xor
jne
mov
or
sub
cmc
ljmp
js
push
dec
sub
jbe
sahf
cli
mov
push
pop
pusha
xor
je
adc
mov
push
ljmp
inc
imul
mov
mov
sar
pop
xchg
cmpsb
pop
daa
xor
fidivrs
dec
push
mov
lea
pop
adc
mov
cmc
in
inc
cmpb
pop
mov
sub
cmc
mov
ja
loopne
cltd
es
in
mov
lods
push
into
jbe
nop
out
adc
ja
pushf
and
ja
mov
test
dec
in
lret
ljmp
mov
jg
sbb
popa
mov
push
xchg
inc
xchg
pop
mov
sub
std
jns
dec
aas
nop
sub
pop
insb
push
or
test
notl
shrl
jp
mov
pushf
or
fninit
push
aas
mov
in
ds
xor
mov
cmp
fcmovnbe
scas
decl
cmp
sti
pop
std
addl
or
lock
sub
aam
xchg
in
repz
insb
es
sbb
lods
jno
cmc
scas
xchg
repz
pop
mov
jb
jns
int
out
jne
loop
pop
outsb
repnz
addr16
dec
stc
stmxcsr
mov
pop
shlb
add
loope
xchg
ret
movsl
loop
jmp
push
pop
mov
xchg
add
dec
iret
adc
shrl
fldenv
mov
add
daa
or
sub
jbe
repnz
loope
lret
andb
dec
and
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
test
movsl
push
sbb
and
repz
adc
cltd
push
push
sbb
xchg
lret
lahf
iret
xchg
sbb
add
mov
shrb
and
stos
pop
and
call
iret
mov
dec
jae
iret
lea
outsb
fsts
jmp
xchg
xchg
fcom
jmp
stc
ret
jbe
pop
and
shr
movsl
std
mov
arpl
dec
neg
dec
ds
cmp
cmc
push
pop
push
mov
in
pusha
xor
sub
ret
fcoml
lcall
mov
mov
aad
cmpsb
lahf
movsb
addr16
leave
ffreep
in
push
lcall
inc
xchg
and
and
int3
sbb
repz
add
out
jmp
mov
or
sbb
sbb
sbb
idivl
shlb
mov
mov
jecxz
push
test
mull
mov
pop
cmc
in
movsl
cmpb
arpl
and
jmp
loopne
addr16
dec
rcrb
arpl
dec
pop
and
pop
ret
repnz
sub
push
ffree
jle
jno
in
and
jmp
lret
add
stc
adc
ja
and
mov
sub
lock
xchg
test
or
mov
add
push
adc
push
fcom
inc
push
xchg
mov
add
and
outsb
test
xchg
negb
cs
or
int3
mov
cs
stos
orl
repnz
mov
jno
repnz
pushw
and
imull
and
ljmp
arpl
adc
mov
adcl
dec
mov
xlat
ret
sub
call
xchg
sbbl
mov
sub
mov
mov
lahf
add
int3
pop
jns
or
push
lods
cwtl
mov
push
cmp
testb
xor
sub
mov
pop
push
pop
xchg
popa
rcl
les
mov
loop
test
xchg
push
dec
mov
data16
lds
mov
xchg
popa
xchg
scas
fldenv
fwait
mov
pop
fstps
inc
mov
ss
aaa
cmpsb
cmp
mov
adc
popa
cwtl
sti
sub
jmp
mov
clc
xchg
inc
aam
or
jmp
out
adc
test
xchg
jl
xchg
call
mov
aas
add
jmp
mov
jbe
mov
jo
xchg
pop
jnp
pop
ficoms
sub
call
fs
jmp
dec
mov
or
bound
mov
inc
cmp
pop
xlat
push
rcrl
loope
jo
or
loope
arpl
mov
fisubl
inc
or
push
sti
inc
jmpw
movlps
adcl
jecxz
hlt
mov
iret
add
bound
lahf
mov
lret
imul
sbb
push
repz
shl
dec
into
xchg
cmpl
ficomps
pop
repnz
repnz
cmc
insb
pop
rorb
push
subl
xchg
dec
sti
jbe
arpl
or
adc
sbb
fistl
xchg
xchg
xor
xlat
sahf
mov
in
mov
fstpl
mov
pop
es
loopw
mov
xchg
mov
fsub
xchg
pop
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
mov
les
lods
fwait
adc
movl
cmpsl
mov
nop
shlb
mov
mov
add
or
int3
orb
insb
or
ljmp
cmpl
cmp
cmp
sbb
int
sbb
dec
dec
push
sub
ss
push
call
mov
mov
add
add
psubsw
fdivs
in
mov
cmp
std
out
adc
dec
scas
int3
mov
pop
lret
xor
sub
in
add
and
xchg
fcoml
mov
callw
cmp
shlb
les
lretw
push
add
mov
mov
or
jb
lret
jb
aam
movsl
pop
lahf
gs
aaa
shlb
push
inc
es
mov
rclb
jno
and
dec
in
gs
addb
jle
pop
leave
lea
add
dec
jae
jg
mov
sbb
add
mov
insb
xchg
fcmovu
mov
repz
fbld
mov
ret
jbe
sbb
cmp
leave
icebp
pushf
cmpsb
les
jmp
stc
mov
jo
js
mov
jb
movsl
mov
jp
loopne
test
sub
leave
unpcklps
xor
mov
repnz
mov
or
xlat
fdiv
scas
push
bound
jle
push
push
cs
icebp
push
movsb
mov
ror
aaa
pop
and
aas
and
ret
lock
add
mov
lret
dec
aad
lcall
inc
shrb
xchg
int3
ficoms
std
cwtl
push
lods
ss
and
xchg
inc
out
icebp
cs
jecxz
sbb
sbb
rclb
out
dec
dec
ret
loop
adcl
mov
ret
jns
out
sbb
mov
loop
movl
cwtl
scas
cld
mov
dec
mov
push
lret
arpl
dec
inc
fwait
lods
ds
pusha
cmp
rcll
jne
push
flds
js
mov
cli
shl
mov
popa
push
lock
cmp
dec
sbb
jns
repnz
aam
mov
sbbb
jmp
or
les
mov
gs
mov
adc
xchg
pushf
into
clc
add
les
daa
add
jb
test
es
leave
mov
out
data16
lahf
scas
mov
out
pop
jle
ds
mov
xchg
adc
pop
sbb
lahf
or
aas
inc
cltd
xchg
mov
stc
out
dec
imul
jge
push
sbb
out
mov
sbb
sbbl
and
mov
ljmp
xlat
fcomip
out
idivl
jge
lods
xchg
cli
cmp
push
cmp
rcrb
jno
out
push
and
cwtl
test
sbb
adc
xor
js
lret
mov
movsb
add
inc
into
pushf
adc
ret
mov
cmp
push
mov
mov
mov
in
mov
imul
dec
sbb
stos
stos
inc
jg
jle
push
sbb
cmpsb
addb
mov
adc
dec
ds
ficompl
xor
fwait
mov
xorl
mov
mov
push
in
aam
adc
jmp
mov
imulb
inc
js
dec
iret
aaa
xchg
inc
pop
pop
push
cmp
pop
lock
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
jne
jo
xchg
push
sbb
jmp
mov
mov
dec
ds
xchg
xor
icebp
std
cmp
subl
xchg
hlt
mov
adc
lret
xor
popa
enter
bound
js
push
jle
or
mov
adc
lahf
ljmp
xchg
incl
lret
faddl
jmp
out
popa
inc
mov
lea
jecxz
push
xchg
scas
sub
mov
mov
adc
mov
push
fwait
scas
push
inc
inc
pop
inc
cs
adc
push
jmp
pop
lds
adc
fstpt
dec
adc
aaa
mov
mov
mov
fmuls
lds
call
dec
xchg
inc
int
clc
das
loop
fcmovbe
xchg
mov
inc
lcall
das
int3
or
mov
jno
dec
mov
pop
xor
scas
add
jmp
dec
or
add
sub
icebp
mov
xor
repz
adc
arpl
jg
clc
enter
mov
add
in
adc
nop
push
inc
and
mov
hlt
sub
push
aas
les
dec
cmp
sbb
iret
sbb
or
data16
adc
inc
loop
cli
insb
les
int
out
jae
add
inc
das
inc
adc
mov
cli
mov
sub
imul
adc
cmpsl
sbb
mov
rcr
pop
dec
sub
mov
and
out
fimull
adc
imul
inc
cmp
or
imul
aas
cmpxchg
jl
fwait
popa
rorb
test
push
and
das
jne
push
or
cmp
xchg
int
add
jnp,pn
push
xor
xchg
cmp
lock
cwtl
inc
rorb
arpl
xor
dec
in
and
sub
pop
lahf
je
cltd
dec
push
ja
pushf
mov
ret
fbld
and
cmovo
test
les
pop
xchg
and
or
les
push
jae
push
cmp
add
aam
sti
inc
cmc
cwtl
or
cmpsb
fsubs
jl
xor
push
sbbl
js
into
or
pop
pop
sub
dec
mov
mov
cmp
stos
das
cltd
repnz
mov
shll
push
sbb
push
sbb
lods
jmp
jmp
loope
pop
mov
add
inc
mulb
je
mov
add
jge
out
inc
xchg
fwait
xchg
out
push
xchg
nop
push
cmpsl
adc
imul
out
pop
xor
add
cmc
or
fsubl
mov
out
imul
lods
dec
int
std
inc
jno
and
push
sbb
or
fstps
fidivrl
lds
cs
sub
fidivs
pop
aas
out
xchg
stc
jle
jmp
shll
fidivs
mov
mov
jbe
lea
push
test
clc
add
add
and
test
cs
imul
iretw
outsl
test
icebp
aad
dec
xchg
roll
dec
mov
outsb
rclb
enter
cmpb
jb
pause
xlat
jbe
cmp
adc
cmpsb
dec
jnp
dec
cmp
inc
inc
xchg
ljmp
scas
rcrl
ljmp
fucom
fwait
xchg
cmp
enter
xchg
mov
bnd
jns
shrd
shr
mov
mov
mov
jmp
push
or
sbb
cmpsb
stos
lret
jo
push
sbb
in
inc
sbb
sti
mov
imul
shrb
inc
jnp
movsl
push
xchg
sbb
aad
sbb
pop
and
lret
inc
adc
outsl
xchg
test
lahf
jl
aaa
jl
mov
xor
data16
adcb
cmc
xchg
dec
cmp
std
arpl
dec
sti
dec
jle
and
insb
imul
subl
mov
cmpsb
scas
mov
mov
add
vcomiss
cmp
xchg
mov
or
push
adc
frstor
mov
mov
or
jns
scas
dec
fprem
fildl
les
xor
enter
mov
mov
sbb
sub
mov
inc
jecxz
push
add
je
scas
mov
jle
pop
fstpl
clc
popf
or
mov
and
cmp
mov
mov
ret
mov
ja
mov
popf
push
popf
hlt
mov
mov
xorb
sar
jne
les
lret
mov
sbb
pop
test
popf
sub
cld
jle
pop
scas
js
mov
jbe
cmp
loop
aam
and
jno
cmpsb
std
cld
mov
jmp
sbb
loope
fmul
push
pop
out
adc
mov
jnp
and
xchg
xchg
daa
out
xchg
jnp
xor
enter
push
inc
int
sarl
cmp
xchg
push
and
push
push
sbb
mov
or
stos
inc
adc
adc
std
cwtl
push
int
mov
roll
push
and
das
mov
lret
adc
sti
repnz
into
ss
add
and
pop
sub
inc
mov
rep
jg
mov
sbb
mov
fbstp
mov
std
pushl
scas
leave
std
pop
mov
fidivs
or
adc
xor
mov
jle
or
lea
jle
andb
cld
fbstp
sub
cmp
outsl
in
push
es
popf
cmp
imul
mov
pop
in
cmpsb
add
adc
cli
inc
popf
sub
mov
sub
adc
sbb
cli
fnstenv
lods
jl
jge
daa
loope
xor
sub
pop
sti
test
xchg
ds
add
xor
mov
je
cmp
sub
xchg
icebp
add
jmp
cmp
pop
add
xchg
dec
shr
dec
mov
bound
push
repnz
mov
subb
fcomps
int
out
push
sbb
pushf
lods
mov
and
pop
ljmp
fisubs
icebp
lea
vshufpd
data16
add
sub
pusha
jge
dec
sbb
out
lahf
xchg
or
cmpsl
loop
mov
push
dec
repz
xchg
je
inc
cmp
mov
push
push
pop
insb
pop
mov
adc
mov
dec
cmp
push
mulb
add
loope
ds
lock
ficoms
cmpsb
ja
inc
xor
out
push
push
pop
push
jle
dec
push
add
mov
jge
inc
out
les
and
dec
fwait
call
mov
xchg
data16
fs
adc
push
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
lods
lock
mov
jno
sub
dec
cwtl
aad
or
xchg
add
test
pop
pop
mov
mov
sbb
xchg
push
xor
negb
mov
add
jge
adc
inc
xor
xchg
push
cltd
xor
insl
jno
push
and
xchg
lret
and
add
jno
ret
xor
mov
in
inc
inc
jns
int
mov
shll
sbb
cmpsl
xchg
addb
mov
mov
cmp
sbb
inc
ret
dec
mov
cld
xor
mov
insl
dec
popf
dec
inc
jnp
dec
jb
mov
mov
cs
mov
pop
clc
dec
pop
stos
pop
pop
xor
add
add
mov
fcoms
adc
cwtl
call
mov
cmpsl
cmp
xchg
insb
cltd
dec
test
dec
sub
out
fwait
icebp
or
add
push
mov
out
call
aas
lret
push
stc
mov
cmpsl
jno
sahf
inc
fidivrl
jge
in
jbe
mov
into
outsl
movsl
nop
jb
mov
fildll
xchg
inc
push
out
lock
rorl
dec
mov
push
pop
sub
pop
repnz
xchg
movsb
stc
or
dec
popf
add
test
add
arpl
sub
fs
mov
and
ret
imulb
andl
mov
dec
xlat
mov
setb
fistl
inc
les
popf
movsl
sbbb
xor
fisubrs
adc
mov
pop
xchg
pop
sbb
sbb
sti
and
push
leave
lcall
scas
inc
push
ret
gs
stos
sbb
adc
js
mov
das
sbb
enter
lock
inc
inc
das
inc
mov
inc
fcoms
jg
ret
dec
add
pop
leave
sbb
inc
mov
je
mov
sbb
fsubl
add
fcomp
jl
xor
xor
pop
enter
mov
mov
in
mov
cmp
push
adc
xor
jl
sub
dec
cmpb
xchg
inc
stos
hlt
repnz
add
mov
xor
cwtl
cwtl
stos
lods
pop
lcall
pop
inc
add
dec
cs
clc
pop
in
jns
outsl
add
pusha
inc
and
test
jbe
pop
cli
inc
sub
adc
sbb
add
pushf
and
sti
ss
sbb
fisubl
dec
push
repz
push
sbb
fldt
jo
jp
mov
push
sbbb
les
mov
and
leave
aam
sbb
inc
jns
xor
outsb
std
es
sub
inc
test
mov
mov
les
pop
leave
ds
imull
into
jmp
nop
leave
lahf
pop
sub
jle
pop
loope
scas
fiadds
xchg
sbb
add
mov
xchg
lcall
fistpl
pop
pop
outsb
cmpsb
mov
mov
xchg
pop
mov
jno
pusha
cltd
cmp
add
in
lret
arpl
jg
jbe
cmp
xor
xchg
sti
inc
mov
xor
mov
scas
test
sub
jp
pusha
in
scas
sbb
enter
mov
adcl
adc
jmp
fs
es
and
jne
pop
inc
mov
outsb
out
cld
jge
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
add
push
sbb
rcr
rclb
xchg
push
icebp
cld
shrb
add
or
sbb
mov
adcl
dec
loopne
mov
loopne
notl
add
pop
xchg
sub
dec
xor
pop
arpl
pop
jae
testl
addr16
mov
subb
lods
mov
jle
xor
fcomip
jb
jge
inc
mov
jp
mov
jo
mov
mov
outsb
lds
dec
in
xor
dec
xor
adc
adc
test
sbb
sbbl
xor
xlat
mov
mov
mov
fidivs
cmc
sub
loop
fwait
inc
out
test
cmp
test
xchg
cli
out
ljmp
fs
adc
arpl
jge
int
sbb
mov
mov
test
imul
push
iret
cmp
in
mov
lret
push
out
pop
jbe
in
sub
mov
push
fildll
mov
in
inc
insb
inc
push
jg
fldt
insl
imul
movsl
dec
pop
adc
lcall
clc
int3
pop
and
scas
pop
dec
insl
ja
xor
and
dec
mov
inc
outsb
dec
loop
fldl
pop
jg
mov
loopne
mov
sarl
jecxz
shl
pop
lock
xchg
roll
in
lods
sbb
mov
pop
push
popf
mov
icebp
stos
push
ja
inc
cmp
out
cli
or
ljmp
push
sub
and
les
sarl
jne
shrl
sub
xorb
jecxz
movsb
adc
cmp
xchg
cmp
adc
std
arpl
pop
rcll
call
sub
in
sahf
out
add
jns
ja
jg
pop
xor
orl
test
arpl
gs
mov
mov
push
add
repz
test
arpl
mov
push
add
les
out
cmpsl
xchg
hlt
dec
xor
movsb
mov
jecxz
xorl
xchg
push
insb
or
mov
aad
lods
mov
repz
aas
sarb
mov
push
loop
pop
lret
shll
shl
mov
jge
sbb
lret
std
mov
mov
xor
xor
jae
push
xlat
jns
lret
xchg
scas
hlt
popf
pop
pop
test
push
push
push
lahf
aam
dec
sbb
cmp
aaa
or
and
addr16
push
xorl
add
es
icebp
mov
aas
in
mov
adc
shl
enter
lret
xchg
xorb
inc
jae
mov
sub
jnp
inc
sbb
jbe
ret
sarl
outsb
and
push
jo
imul
shr
mov
fwait
mov
hlt
cmp
inc
mov
lahf
mov
test
loop
sub
xor
jg
ret
cli
jae
sub
or
dec
pop
push
sbb
mov
nop
inc
imull
push
xchg
jle
ds
xchg
test
mov
xchg
insb
jecxz
out
repz
or
aad
pop
mov
push
pushf
fildll
fs
popf
outsb
imul
arpl
sub
mov
push
aam
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
fistpll
jns
sbb
xor
xlat
out
leave
and
sub
push
xor
insb
mull
push
xchg
popf
lcall
insl
int
push
mov
je
int
icebp
adc
push
sub
movsl
and
setno
daa
xchg
icebp
push
fstpt
jno
cld
dec
xchg
iret
inc
xchg
cmp
mov
dec
xchg
imul
jmp
pusha
fldcw
mov
shll
dec
or
xor
in
mov
xchg
mov
fistps
loope
lds
cmp
mov
mov
mov
jns
inc
stc
push
or
push
push
inc
bound
xor
aam
jp
insb
mov
loopne
adc
roll
mov
sbb
popf
stos
fsts
mov
push
shll
push
sbb
out
loop
dec
sub
es
sub
ret
and
jo
ja
insb
xor
imul
in
fwait
jo
mov
daa
sub
in
outsb
xchg
xor
xchg
dec
pop
mov
jmp
clc
cwtl
push
movsl
add
mov
push
cmp
sbb
add
and
pop
push
adc
inc
push
inc
cmpsb
nop
sub
jmp
xchg
xchg
cltd
imul
lods
outsb
add
jle
push
loopne
add
jecxz
inc
inc
sti
pop
adc
scas
pop
push
pop
jns
and
or
xor
fdivrp
sbb
test
xor
add
inc
js
cmpsl
imul
sti
pop
mov
push
in
std
lret
ljmp
cmp
lock
mov
in
lods
pop
int3
pop
ds
sbb
adc
jae
ja
mov
fstpl
sti
shl
ds
cmp
sub
mov
out
scas
jne
scas
daa
dec
dec
jg
cltd
lds
or
out
je
rclb
adc
scas
mov
ljmp
cmp
lods
xor
daa
clc
scas
sbb
sub
jle
stos
cli
cmp
xchg
test
fidivrl
cli
sahf
xchg
dec
push
loope
pop
inc
add
push
aam
jno
pop
fmul
mov
or
pop
lcall
xor
js
and
mov
shlb
fbstp
ss
or
js
fstl
movsl
jg
shrb
dec
mov
sti
orl
push
xor
pop
out
or
int3
cltd
xchg
mov
fldcw
outsl
int
lock
cmp
ror
aad
jle
out
xor
mov
jns
mov
testb
movsl
jge
or
xchg
adc
fisttpl
xchg
popa
es
leave
and
push
cs
jmp
mov
pop
mov
dec
lods
dec
test
ljmp
rorl
xlat
or
fistpl
leave
lret
push
cs
sub
iret
movsl
cmp
in
sub
cld
xchg
mov
in
shl
mov
push
cltd
xor
inc
mov
mov
jle
in
xor
xor
std
sub
xor
cltd
jb
mov
hlt
mov
das
push
in
xchg
shll
adc
dec
dec
dec
out
clc
and
xchg
pop
scas
bound
cli
in
mov
sub
mov
mov
imul
inc
mov
jbe
sbb
sbb
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
cmp
sbb
stos
das
ljmp
das
outsl
adc
fs
mov
arpl
xchg
xchg
cmp
xor
test
mov
ret
sbb
enter
ss
daa
test
cmpb
dec
inc
lods
cmp
or
mov
push
imul
and
movsb
mov
out
adc
xchg
and
fwait
addr16
ss
jp
mov
sbb
decb
sahf
leave
xchg
ficomps
mov
xlat
addr16
mov
in
sbb
divb
adc
pop
jo
sub
cmp
clc
out
outsb
xor
fisubs
loopne
cmpsl
daa
inc
push
gs
mov
hlt
xchg
ret
lret
push
dec
incb
outsl
cmp
stc
mov
xchg
fwait
sub
sbb
data16
lds
mov
int3
cmpsl
and
lret
movsl
cmp
or
mov
adc
push
mov
out
enter
pusha
and
adc
enter
lock
es
mov
sbb
mov
and
popa
push
pop
shl
sbb
sub
ljmp
ffree
addr16
mov
imul
inc
popf
je
pop
addb
or
cmpsl
mov
arpl
inc
push
mov
test
js
loope
jmp
pop
ljmp
add
inc
sub
pop
ljmp
stc
lock
cld
mov
mov
xchg
push
jecxz
xchg
scas
jle
scas
xchg
mov
jo
xchg
bound
lcall
out
rcrl
int3
add
xchg
dec
stc
or
lret
pop
cwtl
or
jle
pop
mov
jae
sahf
int3
push
jb
sub
bound
int3
dec
lods
push
scas
out
nop
cwtl
adc
movsb
cwtl
cmpsb
fisttpll
sbb
sub
ss
mov
inc
push
xor
mov
or
or
xor
push
and
jle
dec
movsb
push
push
mov
inc
icebp
add
pop
dec
out
jb
hlt
shl
cmp
and
cmpl
add
rol
pushl
mov
xor
xor
xor
test
adc
pop
rclb
fldt
xchg
iret
popa
fidivrs
jno
data16
pop
inc
out
sbb
imul
mov
cmp
stc
and
pop
sbb
loope
test
je
pop
cltd
std
push
mov
fbstp
xor
outsb
lods
or
inc
push
add
dec
clc
pop
nop
xlat
loopne
add
xchg
hlt
or
jo
insb
jecxz
inc
mov
rsqrtps
imul
pop
popa
xor
orb
imul
hlt
push
imul
inc
mov
mov
hlt
cmp
pop
sub
sar
enter
sub
xchg
je
pop
inc
lock
das
xor
bound
mov
cmp
jns
cmp
xchg
adc
cs
dec
lret
push
xor
xchg
push
mov
aas
ja
in
mov
sbb
ljmp
imul
adc
sub
lcall
leave
xor
ffreep
push
mov
shl
sahf
fimull
push
xchg
popf
popa
ret
add
cmc
out
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
or
arpl
adc
sbb
fsubl
outsb
nop
jl
cs
pushf
test
push
cmp
push
dec
data16
pop
testl
mov
lock
add
mov
cmovs
adc
jb
cmp
lea
mov
pop
mov
and
rclb
or
xchg
push
xchg
adc
add
rorl
or
aaa
mov
mov
shrl
pusha
into
xor
fldt
xor
ret
enter
mov
dec
xchg
test
sbb
push
daa
adc
cmp
cmp
mov
insl
sub
gs
pop
or
in
fldl
inc
rclb
xor
jle
insl
or
je
cld
pusha
xchg
fldt
adc
jecxz
scas
jo
loop
mov
int3
inc
cmpsl
scas
sbb
pushf
jge
repz
stos
jb
mov
insl
fnstcw
bound
test
jns
pop
mov
xor
xchg
cmp
daa
out
test
mov
mov
dec
xchg
fs
rorb
cmc
outsl
cmp
mov
mov
inc
jecxz
nop
outsl
cli
inc
or
jecxz
push
push
lret
test
sub
popa
nop
out
gs
addb
gs
test
les
movsb
adc
lods
mov
bound
daa
stc
mov
and
sbb
enter
ret
jge
arpl
adc
cmpsb
jle
adc
pop
pop
es
and
dec
adc
ror
ss
repz
cltd
pop
enter
lcall
inc
inc
cs
push
xchg
add
pop
loope
out
pop
mov
aam
sbb
mov
mov
push
out
add
dec
int3
push
ds
add
dec
inc
cmp
sti
xchg
daa
sub
pop
fnstenv
xchg
jno
inc
rcrb
repz
mov
aaa
iret
int
dec
cmp
mov
push
mov
sbbb
fisubrs
sub
cmp
mov
jle
sub
jp
sbb
cltd
dec
inc
scas
movsl
sbb
or
iret
cmp
sub
outsb
xlat
rcrb
jnp
scas
lcall
jle
xchg
push
xor
jl
std
sbb
sub
lds
bound
mov
sub
stos
lahf
xchg
push
xchg
out
add
test
or
pop
sub
bswap
arpl
xchg
add
inc
ljmp
add
xor
cli
out
popa
dec
pusha
and
comiss
lock
test
xor
adc
imul
sub
rorb
sti
shrl
fistpl
jnp
mov
sub
push
jo
xor
mov
mov
mov
push
jp
lods
pusha
je
and
fcmovu
dec
or
fdivrl
fistps
jecxz,pn
cld
add
lret
scas
inc
int
stc
or
pop
clc
jns
push
mov
lods
movsb
fsubrl
inc
leave
cld
movsb
aaa
adcl
jae
xor
mov
lods
jp
jae
xchg
lcall
popa
les
insb
scas
in
loop
add
flds
aas
jmp
int3
repnz
pop
mov
xor
fs
je
push
enter
add
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
dec
loope
adc
insl
xor
imul
cmp
dec
popf
repz
divl
cmp
mov
xchg
xchg
mov
clc
out
cmpsl
adc
dec
out
movsl
mov
mov
sbb
rcl
mov
pop
call
cld
sbb
js
das
add
mov
xchg
test
add
xchg
inc
jge
cmpsl
sub
shl
fdiv
icebp
sarl
data16
ljmp
dec
xchg
cmp
jo
jle
jg
jecxz
xchg
jmp
popa
fisttpll
in
adc
outsl
rsm
scas
push
mov
ficompl
js
mov
jb
sbb
out
xchg
int3
mov
mov
xchg
dec
ret
jl
mov
mov
adc
cmpsb
mov
les
cmc
mov
push
or
add
inc
lea
jno
iret
jp
nop
xchg
ss
addl
addl
stc
mov
int
dec
lods
adc
out
inc
push
jl
lcall
ficomps
fadds
mov
jmp
in
pop
mov
incb
inc
dec
push
jns
pop
jl
les
mov
jl
hlt
enterw
push
imul
pop
and
or
dec
int3
lret
in
and
and
mov
mov
mov
leave
lcall
imul
xor
adc
ljmp
jo
inc
push
jle
popf
cmp
inc
das
out
ret
jle
ret
or
cmc
mov
scas
mov
int3
cwtl
push
adc
sbb
push
aad
movsl
mov
or
jge
xchg
leave
idiv
sti
sbb
mov
mov
and
in
and
loopne
push
mov
stc
icebp
cmpsl
push
lods
dec
faddl
xchg
mov
scas
fldenv
adc
fbld
lods
mov
arpl
xchg
push
lret
mov
xor
lea
scas
pushf
jl
mov
or
insl
or
imul
pop
fs
popa
mov
cltd
ficoml
mov
sbb
stc
adc
mov
js
cs
mov
test
pop
dec
lea
rclb
inc
stos
jmp
inc
add
out
ja
mov
mov
stc
or
clc
ljmp
mov
sub
or
cli
test
mov
xor
sbb
scas
ret
inc
jbe
test
and
mov
sub
sbb
test
sbb
sub
cmp
push
mov
sub
dec
cs
mov
icebp
sub
pop
mov
call
ret
push
pop
divl
sbb
mov
call
frstor
push
jbe
in
negb
int3
out
shld
adc
int
in
sbb
sbb
xor
jae
fistps
filds
dec
bnd
pop
or
cli
or
mov
cmpsl
mov
sti
dec
xchg
push
decb
fs
shrb
jae
das
mov
pmaxsw
ret
adc
out
inc
add
xchg
and
imul
add
adc
inc
mov
mov
xor
ds
mov
xor
push
aas
jmp
pop
jecxz
xchg
pop
sbbb
sbb
xor
cmp
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
xchg
inc
push
pop
push
sbb
es
inc
mov
rcl
fbld
dec
cmp
rcrb
in
cmp
bound
xor
iret
test
dec
dec
mov
adc
lcall
popa
shrb
jne
dec
push
inc
fdivl
xchg
hlt
sbb
pop
lcall
jne
xchg
push
sub
cmp
movsl
pushf
std
adc
jne
mov
loope
js
jnp
xor
xchg
stos
fisttps
fcmovb
stos
ljmp
add
inc
cmpsl
je
dec
and
test
pop
jb
pop
pop
dec
ss
mov
xchg
imul
inc
pop
repz
jno
cmp
aas
and
pop
lock
into
sub
inc
xchg
dec
pushf
mov
push
loop
rcrb
dec
dec
cltd
xchg
aaa
fcomp
xchg
fmull
mov
xor
aad
je
push
test
fidivs
insb
loop
jnp
ds
jb
mov
fdiv
fisubrl
cmp
das
jmp
pop
mov
popa
ret
subl
andl
subb
add
push
loopne
mov
and
ds
mov
or
xor
mov
icebp
mov
sbb
jge
lretw
adc
sbbb
push
mov
addr16
repz
or
hlt
push
in
adc
push
sub
jl
mov
adc
scas
xor
out
jmp
dec
sti
enter
sub
lcall
fists
fsubrp
cli
pop
jbe
pushf
test
lcall
daa
clc
out
jae
inc
imul
or
mov
dec
nop
stc
mov
cmpsb
jae
in
outsb
mov
dec
imul
sub
loopne
nop
nop
mov
inc
mov
test
mov
stos
les
sbb
dec
pop
and
jecxz
cld
adc
dec
jne
adc
pop
in
jae
sub
jnp
inc
jbe
cmp
mov
sbb
inc
and
mov
cld
jne
add
adc
rcrl
or
pop
daa
pop
cmp
lret
shlb
inc
stos
jmp
pop
xchg
mov
adc
std
gs
jp
enter
bound
or
fstp
lret
and
in
pop
insl
mov
shll
rcrl
out
adc
cmpsl
jge
inc
test
test
xchg
cmpsl
int
jge
enter
lahf
lea
mov
jo
xchg
mov
jne
jge
xor
dec
sub
movsb
leave
out
mov
test
sbb
push
inc
stos
popa
pop
jb
ljmp
int3
aas
sahf
cld
lods
movsb
ret
or
ljmp
jbe
rorb
idivl
mov
sbb
mov
pop
sbb
test
out
cmp
aaa
mov
sub
pop
test
arpl
adc
push
cmp
test
mov
lods
mov
scas
adc
or
mov
pop
mov
arpl
cmp
mov
cmp
pop
cmpl
xchg
mov
pop
jle
movl
fistl
int
xchg
lret
inc
fisttpl
inc
mov
cmpsl
test
jns
bound
push
mov
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
movhps
mov
add
mov
test
ja
sbb
ja
lret
jmp
ds
add
push
loop
pushf
xchg
pop
adc
and
adc
pop
sbb
mov
fidivrl
adc
sar
xchg
push
pop
aas
and
push
push
bound
inc
and
lret
sarl
pop
clc
jb
repz
lock
push
adcl
test
and
mov
mov
int3
adc
mov
xlat
cmpsb
loop
inc
push
cmp
aas
outsl
test
sbb
ja
call
call
push
jae
jle
mov
and
sub
push
cmpsb
negb
pop
ds
cmpb
subb
pop
inc
mov
fwait
clc
xchg
shlb
mov
adc
ud2
inc
pop
int3
sahf
pop
adcb
loopne
xchg
mov
push
das
mov
lahf
xchg
mov
test
and
stc
dec
mov
ja
loop
fisubrl
jnp
mov
dec
pushf
sbb
cmp
inc
movsl
fsts
fistps
data16
xchg
mov
aas
jg
out
add
ss
and
test
arpl
iret
je
add
ja
std
les
test
fs
idivb
ret
sbb
jne
mov
js
hlt
aam
les
call
ss
xchg
rcr
mov
je
lahf
push
imulb
imul
ficompl
mov
mov
aaa
cmp
cld
push
jmp
add
cmp
sbb
jae
jbe
mov
test
sub
jmp
xchg
js
jle
call
mov
lock
pusha
pop
add
xor
or
shrb
gs
test
mov
push
call
jp
jae
mov
out
push
mov
dec
xchg
xor
cmp
cmpsb
movsl
add
and
les
sub
xchg
inc
sbb
imull
lods
outsl
or
lods
adc
insl
ds
inc
add
lret
dec
subl
xor
test
pushf
cld
push
inc
es
clc
lret
add
sti
aas
xor
mov
mov
clc
mov
dec
mov
fbstp
pop
fwait
jp
scas
fsub
xchg
add
iret
push
push
in
inc
pop
fnstsw
jge
mov
clc
notl
test
xchg
divl
sub
int
in
stc
cli
scas
dec
xchg
jp
mov
mov
dec
mov
je
in
sub
sbb
bound
add
imul
repz
daa
pop
je
loop
je
mov
insb
es
sti
es
lret
adc
lret
xor
mov
out
and
add
inc
mov
pop
filds
or
dec
aad
jg
pusha
jecxz
fnstcw
add
aas
outsb
ror
xchg
pop
and
or
js
inc
add
xchg
out
popa
cmp
push
mov
add
mov
repz
mov
xor
in
out
pinsrw
add
or
icebp
fptan
mov
mov
mov
lds
jnp
std
in
mov
cld
divb
mov
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
jle
dec
push
sbb
fdiv
mov
lret
jge
xchg
mov
add
cmp
int3
mov
mov
pop
pop
and
add
pusha
push
je
movsl
aam
add
xchg
adcl
repz
clc
dec
imul
pop
sti
cmp
mov
mov
sarl
movsl
bnd
std
out
inc
add
adc
sbb
fdivrl
negb
cmp
push
push
sbb
xchg
and
popf
inc
or
pop
pushf
sbb
aas
xlat
jns
je
cmp
adc
loope
mov
pop
test
jb
sbb
and
lea
inc
mov
push
loop
push
aaa
and
in
repz
push
inc
cmp
xor
add
roll
das
iret
and
inc
movsb
loop
jns
add
sbb
movsb
xorl
jge
ret
repnz
es
mov
insb
jo
sub
inc
divb
dec
push
sub
xor
clc
mov
inc
mov
stos
cmpsb
xchg
inc
ret
fistpll
xchg
jge
addb
mov
clc
jg
sub
in
xchg
jnp
mov
in
mov
adc
pop
mov
jge,pt
dec
loopne
lret
incl
mov
pop
mov
mov
push
sub
shrl
xchg
push
in
add
arpl
popa
lods
sub
jnp
rclb
sub
je
pop
cmpsb
adc
xchg
popf
mov
mov
pushf
insl
mov
shl
cmp
mov
imul
jb
test
add
mov
rcl
and
or
sbb
push
inc
das
jb
iret
cwtl
mov
sbb
cmp
ret
mov
rolb
shr
lods
insb
xor
adc
movl
jp
inc
inc
mov
mov
lahf
mov
or
icebp
ss
mov
cmp
sbb
scas
mov
adc
lcall
cmpsl
das
adc
aad
movsb
js
ljmp
push
rorb
call
xchg
lods
dec
xor
sub
dec
loopne
pop
sub
and
pop
sub
inc
mov
jo
push
jl
sub
xlat
lods
cld
hlt
xor
inc
xchg
popa
in
rolb
andl
dec
add
hlt
sub
cmp
fisttpl
nop
xchg
rorb
pusha
fnstcw
and
mov
repz
shlb
call
inc
movsb
add
xor
fdivs
mov
ret
cld
jbe
mov
jae
inc
pop
adc
adc
shlb
add
xor
inc
loop
in
cltd
cwtl
insl
mov
push
mov
fnstenv
cmp
movsb
loope
ljmp
mov
scas
into
mov
and
pop
int3
out
mov
jo
aas
ja
push
push
sbb
lods
aaa
popf
lock
mov
push
idivb
in
sti
sbb
mov
dec
inc
sarb
mov
notb
nop
cmpl
js
sub
or
jmp
mov
dec
add
cmp
test
lods
cmp
leave
cmpsb
es
adc
xor
mov
mov
sarb
pusha
jecxz
pushf
pop
mov
aas
inc
and
push
test
cmpsb
mov
mov
loopne
leave
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
les
and
sbb
add
mov
and
dec
jb
sub
ds
js
adc
repz
xchg
jle
push
jne
gs
inc
popa
ucomiss
xchg
mov
mov
mov
adc
xchg
leave
out
xor
jbe
adc
sub
insb
mov
testb
fcom
xlat
movsl
push
cmp
cmp
aad
xchg
mov
dec
mov
test
cmpsb
pop
cmp
and
and
aad
pop
push
sti
stc
push
jge
out
jnp
sub
inc
pop
jg
jecxz
cs
push
popa
bound
lock
cltd
cld
cmp
fidivrl
push
add
xchg
repz
cld
mov
jbe
test
fdivrl
pusha
mov
fs
fs
jnp
fld
jmp
les
es
pop
jne
push
call
enter
mov
pusha
sahf
mov
jae
imul
repnz
jb
or
lcall
out
sub
es
add
cli
in
cmp
fldl
xchg
lcall
imul
pushf
cmpl
fdivl
sbb
pusha
pushf
mov
orl
add
lds
movsl
mov
or
xorb
inc
in
sub
movsl
stc
mov
jnp
ja
enter
imulb
hlt
sbb
cld
adc
aam
decb
imul
mov
sbb
push
mov
dec
sub
push
push
out
push
pusha
int
lods
jge
sub
cmc
jb
xor
inc
das
push
les
arpl
fld
add
add
mov
out
rcl
push
fisubl
mov
fdivr
movsl
in
scas
mov
pop
jmp
mov
imul
mov
shl
xor
cs
jmp
mov
jmp
repz
nop
negl
mov
pop
icebp
add
jl
cmp
in
xor
jns
pop
and
add
pop
xlat
movsl
cmp
out
xor
mov
mov
sbb
fisubs
in
mov
jo
add
sbb
pop
mov
push
test
rorl
in
fidivl
pop
loope
les
insl
clc
subb
call
in
aaa
sbb
add
hlt
test
sti
push
mov
push
shlb
cmp
mov
sbb
repz
jl
mov
in
mov
and
lahf
xchg
push
into
call
jle
jne
push
sbb
inc
cltd
cltd
dec
enter
cmp
mov
push
fisttps
xor
loop
out
xor
jb
and
xchg
cld
ljmp
jae
push
sbb
push
push
lods
or
stos
and
and
push
xchg
aas
jecxz
out
ljmp
fwait
add
shll
mov
pusha
push
mov
test
in
int3
mov
mov
lret
and
sub
adc
out
push
jae
loope
push
pop
loop
push
popa
call
gs
movsl
icebp
or
or
xchg
sbbl
lods
insb
lock
int
inc
xchg
adc
and
xor
adc
adc
pop
mov
inc
or
stos
movsl
sub
and
pushw
shl
inc
scas
add
and
sbb
add
inc
ret
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
cwtl
sarl
adc
sbb
faddl
loope
out
stos
sub
sub
pop
decl
imul
push
xor
inc
in
les
inc
jle
xor
pop
outsl
ret
cltd
add
xchg
test
jmp
mov
mov
lods
dec
dec
lea
jb
jmp
sbb
add
sbb
int3
pushf
push
outsl
ljmp
ds
arpl
xor
imul
push
data16
jbe
mov
mov
scas
outsb
divb
rorl
sub
lcall
mov
mov
push
mov
loopne
test
in
fsts
mov
add
jno
shrb
aaa
adc
xor
or
cmp
shld
push
xchg
js
or
xchg
lods
inc
dec
subl
and
nop
xchg
push
xchg
out
sbb
push
mov
sbbb
add
xor
ficomps
adcb
jl
in
stos
and
sbb
bound
cld
je
push
test
das
mov
insb
xor
mov
mov
add
lret
xorl
and
xor
fbstp
dec
rorb
fs
mov
adc
dec
shll
mov
sbb
xchg
add
loop
sub
cwtl
int3
ss
imul
rep
inc
fs
or
jg
lods
dec
or
popa
xor
xchg
jg
je
nop
sbb
mov
out
sbb
fstpl
icebp
inc
in
jbe
call
leave
orb
add
das
adc
pop
push
ret
cmp
std
dec
mov
mov
push
jle
mov
pop
adc
inc
addr16
mov
nop
pop
dec
jl
ss
lahf
popf
es
adc
mov
int3
push
or
xchg
test
imul
pop
sbb
inc
cmp
xorb
jecxz
hlt
fldl2t
push
xor
and
adc
ret
or
stos
xchg
dec
mov
mov
sub
int3
mov
pop
insb
out
pop
imul
negb
imul
imul
movsb
outsl
xchg
inc
xchg
and
inc
hlt
mov
mov
sbb
mov
mov
pop
xchg
jl
mov
jge
iret
gs
sub
add
in
push
repz
cmpsl
adc
inc
scas
outsb
lcall
push
xchg
out
push
mov
sub
clc
xlat
cmpsb
mov
inc
sbb
leave
push
jne
cmp
lahf
sub
test
orb
out
mov
outsl
sbb
pop
push
addr16
lods
pop
scas
mov
mov
adc
into
pop
insl
or
loopne
jne
test
out
sbb
lret
fdivrs
fisubl
in
push
cwtl
jnp
test
popa
pop
mull
xchg
aad
jl
jns
shl
shrb
int3
cwtl
xor
test
or
and
nop
add
push
sub
cmp
pop
or
inc
rolb
mov
mov
ret
loopne
sub
push
repnz
cmpsb
lahf
test
bound
icebp
cmp
jg
jg
test
into
sub
test
daa
loope
adc
pop
mov
mov
stos
test
add
shr
add
add
and
xor
popf
jge
imul
sbb
popf
das
dec
dec
pop
cltd
sub
enter
jne
lock
mov
mov
insl
sbb
in
lock
dec
jbe
and
stos
scas
push
data16
out
lret
xchg
pminsw
sub
dec
lds
jo
cltd
xchg
or
mov
mov
iret
mov
repz
xchg
lahf
inc
js
not
mov
in
sbb
out
out
je
or
into
into
dec
push
xchg
sub
mov
and
cs
lds
and
xchg
aad
inc
sub
popf
mov
jp
cwtl
stc
andb
movsb
lock
mov
sahf
cli
movsb
jns
mov
jo
cmp
sarl
and
adcl
fbstp
int
xchg
ret
call
pop
push
jp
mov
jecxz
push
ret
jmp
sub
pop
in
cmp
or
jge
pop
sti
mov
cli
push
pop
out
dec
push
movsb
clc
add
lahf
pop
cmp
orb
repz
enter
mov
mov
push
push
in
xor
fwait
addps
aas
mov
jbe
in
add
ss
lods
fucomp
mov
clc
mov
outsb
imul
mov
or
xchg
pusha
loop
cs
repnz
sar
mov
sbb
sub
ja
or
xchg
cmpsl
sub
mov
pusha
int
enter
loope
sbb
push
stos
mov
xor
jmp
sub
pop
popa
xchg
js
imul
lahf
cmpb
or
out
movsb
fs
mov
aam
jnp
push
into
mov
sarl
pop
inc
das
inc
add
lcall
out
pop
jbe,pt
stos
inc
jns
movsb
xchg
xorl
dec
sahf
pusha
es
push
sub
js
cwtl
xchg
cmp
std
adc
adc
push
sub
arpl
dec
in
mov
mov
mov
cld
xor
xchg
hlt
setae
cmp
mov
test
cltd
test
sbb
movsl
fs
inc
lds
or
icebp
xchg
les
lret
pop
jnp
push
mov
mov
xchg
cmp
mov
mov
in
test
outsl
outsb
mov
mov
mov
adc
hlt
pop
pop
out
mov
stos
in
repz
push
lds
mov
std
roll
or
mov
mov
gs
cmc
add
lahf
cmp
push
fcoml
mov
pop
leave
fs
add
test
jle
mov
pop
mov
jg
cmp
jo
insb
cwtl
jb
jp
push
das
pushf
imul
inc
enter
aad
std
push
cmp
mov
out
and
stos
repz
lds
mov
cld
aam
cld
lea
add
mov
inc
dec
add
dec
aad
ds
xchg
mov
int
pop
leave
sbb
adc
std
sahf
fmul
hlt
loop
pop
xor
inc
imul
sub
jecxz
mov
xchg
dec
loopne
lcall
mov
lret
ret
pop
sbb
mov
mov
dec
mov
imul
add
ficoml
xchg
xchg
iret
popa
mov
adc
mov
add
cmovo
js
hlt
and
popa
aad
mov
out
je
aad
enter
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
lock
jo
das
push
sbb
jle
xor
popl
push
and
jp
push
xchg
gs
jmp
dec
cmp
idivb
mov
or
subl
mov
test
dec
and
cwtl
call
push
adc
cmp
hlt
jl
stos
mov
or
pop
in
pop
or
mov
cmp
jbe
lock
in
or
xor
jmp
mov
xchg
clc
shlb
or
cmp
aam
ljmp
inc
push
jne
adc
icebp
movsl
in
call
rcrb
mov
rclw
les
incl
jmp
mov
mov
mov
xor
jp
push
jns
cs
dec
mov
in
in
gs
pop
cld
xchg
loop
jnp
xor
push
sbb
mov
push
bound
xchg
mov
popf
ret
scas
jns
in
adc
inc
inc
mov
imul
sub
xchg
cmp
jns
jg
in
pop
aad
sbb
repz
push
addr16
dec
ds
add
xor
xor
or
pop
mov
inc
fdivr
push
push
loope
je
jno
int3
addl
pop
mov
daa
data16
and
sbb
xor
mov
sub
pop
xor
repnz
inc
lds
or
testl
inc
or
xchg
add
in
int
insl
out
sub
pop
jno
push
jmp
ffree
scas
sub
out
test
inc
insb
add
sub
jnp
dec
lcall
mov
pmovmskb
push
or
xchg
push
movsl
cmp
mov
xchg
lret
test
add
add
push
cmp
ljmp
inc
mov
ljmp
test
push
inc
push
push
sbb
les
mov
jecxz
frstor
cmp
hlt
xchg
push
fldl
adc
decl
xchg
push
leave
int
mov
and
leave
sbbb
adc
jp
mov
out
std
sar
pop
fldl
pop
repz
mov
pop
pop
xchg
mov
imul
cmpsb
inc
pop
adcb
imul
push
es
xor
inc
imul
sbb
sbb
cli
cmpsl
enter
call
and
or
xchg
mov
out
imul
push
sub
lock
aam
in
in
adc
xor
mov
mov
gs
jmp
sub
out
or
xchg
or
repnz
jmp
ficoms
mov
scas
clc
sub
orb
xchg
dec
jno
outsb
and
in
xlat
mov
push
push
ljmp
les
sbb
push
fs
inc
sbbl
subb
sbb
js
sahf
mov
adcl
add
xor
xor
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
jl
sub
sbb
xchg
imul
cmpl
xchg
jge
adc
aam
dec
insb
aaa
xchg
pop
stos
inc
mov
mov
xchg
in
or
cmp
inc
pop
push
mov
mov
subb
fwait
sbb
cld
xlat
divl
ja
sbb
jno
insb
sarb
stos
cwtl
aas
xchg
ss
ret
pop
cmpsl
cmp
adc
inc
sbb
leave
imul
sub
xchg
iret
or
xchg
shlb
paddb
pop
mov
pop
cmc
xchg
add
xchg
jo
push
fimuls
dec
scas
dec
cltd
sahf
js
jmp
ret
push
mov
cmp
xchg
inc
mov
jecxz
and
or
sti
out
fwait
mov
inc
mov
lret
mov
pop
pop
out
push
jno
cwtl
pop
push
popf
pop
loopne
pop
in
and
sbb
mov
dec
mov
aad
jo
xchg
xor
jmp
ljmp
jns
iret
femms
push
pop
and
test
add
jb
jnp
mov
push
test
jb
xchg
mov
mov
ss
dec
std
stos
pop
add
xor
dec
aas
mov
mov
shrl
mov
orl
inc
push
enter
add
jns
out
pop
or
xchg
bound
pop
pop
scas
or
sbb
push
lock
lods
mov
inc
arpl
mov
jp
push
hlt
jg
call
icebp
inc
lea
mov
rorl
ror
sub
sub
sbb
sbb
rcl
lret
cmpsb
out
xchg
jl
inc
sbb
loop
fimuls
or
clc
jo
adc
fwait
cmp
stc
dec
or
or
pop
and
xchg
sbb
addl
cltd
inc
mov
in
imulb
loop
adc
jae
pop
icebp
enter
lcall
dec
popf
sbb
stc
dec
cli
jecxz
or
or
dec
outsb
lret
scas
pusha
cmp
lret
adc
sbb
mov
gs
nop
mov
or
push
cld
lahf
push
les
and
in
pushaw
cmpsb
adc
adc
test
movsb
cmc
sbb
lahf
mov
insl
mov
and
aam
or
pusha
imul
dec
jle
mov
bound
cmp
dec
mov
outsl
adc
sub
loopne
push
test
pop
int3
or
jno
subb
repz
cmp
lcall
cmpsb
jbe
mov
faddl
cwtl
xor
fidivs
fildl
popf
loope
add
xchg
pop
mov
lods
push
sub
lea
stc
pop
adc
data16
or
lret
jmp
orb
and
rcrl
or
daa
cmpl
and
xchg
in
jo
pop
movl
cmpl
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
and
and
push
sbb
cmp
popa
fisttpll
sti
out
dec
jl
insl
ss
jb
dec
popf
jge
mov
les
push
push
pushf
in
jae
mov
jp
sub
mov
mov
aad
scas
push
and
sti
push
pop
mov
inc
push
cmp
adc
inc
xchg
loop
push
and
rcr
fcompl
cmp
lret
test
iret
fsubrs
sbb
loope
bound
mov
jg
das
jg
test
or
test
dec
or
int3
ficoms
or
mov
xchg
scas
push
mov
mov
mov
inc
scas
xlat
push
fnclex
sub
sub
daa
add
or
into
cli
lahf
fldenv
push
decb
mov
or
adc
in
mov
lret
in
fld
mov
push
shlb
imul
call
cmpsb
xor
dec
mov
jl
pop
adc
imulb
push
enter
dec
inc
push
sub
lret
sub
mov
pusha
inc
add
push
push
data16
cmp
xor
loop
pop
jle
and
mov
stos
inc
jmp
mov
dec
pop
xchg
xor
repnz
xor
fimuls
push
mov
dec
mov
fs
xchg
jae
stc
in
insl
xor
dec
or
insb
jne
mov
call
sub
xor
or
sbb
or
xor
in
push
jp
dec
adc
xor
das
mov
jae
pop
add
sbb
inc
adc
xor
arpl
jno
add
popa
cmpb
shrl
jle
std
scas
or
iret
pop
sbb
xor
mov
jae
sbb
fcompl
les
mov
out
stos
jge
ljmp
jmp
push
dec
push
sbb
loope
or
xchg
mov
jne
jle
add
gs
and
fistps
adc
pop
idivb
or
or
out
les
push
popf
adc
sub
sbb
sbb
mov
aad
xor
mov
inc
das
movsb
movsl
out
lahf
mov
insl
sbb
js
fisttpll
dec
pop
inc
inc
sbb
sahf
xor
adc
cmc
mov
dec
leave
sub
in
subl
mov
push
xor
leave
jbe
mov
mov
adc
movsb
mov
mov
jae
jae
je
enter
lret
ficoml
cmpsb
out
sub
adc
inc
sub
ljmp
or
test
pop
cmc
jne
mov
pop
divl
push
or
add
int3
and
nop
popf
test
in
jns
or
test
lods
inc
or
mov
push
sahf
jo
imull
arpl
sbb
in
incl
add
addl
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
jl
lock
mov
insl
clc
mov
mov
adcb
push
movsb
jno
int3
xchg
arpl
fisttpl
add
push
aad
mov
or
mov
rorl
addr16
popf
popf
sbbb
push
xchg
xchg
fnsave
shll
lret
push
jno
jmp
clc
push
dec
rcrb
mov
scas
jle
add
xor
mov
int3
out
xchg
xchg
mov
push
bound
cmpl
lds
out
jle
push
loopne
inc
in
xchg
outsb
outsl
or
mov
rcrl
popa
pop
add
xlat
xchg
enter
aaa
mul
push
push
shlb
cmp
sbb
movsb
add
dec
lcall
fbld
cmp
cmp
loopne
shlb
adc
pop
push
sti
jne
gs
or
pop
and
push
loop
mov
mov
push
mov
lahf
popf
movsl
push
lock
pop
xor
mov
repnz
dec
xor
inc
mov
orl
cs
cmpsl
dec
lods
or
cmpsl
and
les
mov
out
in
jmp
fiaddl
mov
sbb
fs
stc
in
mov
sbb
loope
popa
adc
cmp
pushl
sahf
shrl
cmp
nop
gs
ja
andb
jns
mov
ja
adc
jl
adc
pop
and
fsubrs
cmp
xor
xor
push
ds
daa
movsb
popf
add
adc
lahf
lret
mov
loope
pop
psrlw
js
adc
sbb
inc
imul
ja
in
push
or
push
jmp
cwtl
push
lock
pushf
and
push
jb
mov
dec
adc
xchg
pop
dec
ffreep
cmpsb
arpl
pop
imul
or
cmp
int3
jne
push
push
xchg
cld
fdivrl
fidivl
jae
adc
std
mov
xorl
addr16
lds
cmc
pop
outsl
mov
cmp
mov
nop
out
fnstcw
test
sbb
mov
xor
sbb
iret
dec
adcl
xor
mov
push
js
jns
cwtl
mov
subb
dec
lods
and
mov
rcrb
fimuls
dec
imul
les
insb
cmp
int
loopne
mov
mov
outsb
xchg
lret
dec
jno
inc
psubq
and
sbb
pop
jno
dec
push
pop
sarb
frstor
nop
and
in
mov
leave
rcrl
mov
mov
daa
fwait
pop
gs
mov
cmp
or
sub
jo
das
aam
mov
mov
gs
fs
sub
jns
lods
leave
lcall
lea
sarb
pop
test
cmpsb
jecxz
jae
dec
and
sbb
cmp
and
fs
sbb
jmp
or
in
sub
push
in
mov
lcall
add
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
xchg
daa
stos
ss
push
sbb
out
daa
sub
rcrb
pushf
hlt
cmpb
adc
lods
mov
jecxz
sub
mov
mov
fcmovb
mov
cmp
shrl
imul
outsb
lea
mov
or
jg
push
les
inc
xchg
xchg
je
add
and
cwtl
insl
daa
dec
xchg
mov
add
mov
out
adc
fwait
pushl
mov
pop
fs
fdivrl
xor
xchg
push
xchg
xor
ror
mov
mov
jge
fsubr
xchg
shrl
repnz
mov
adc
fdivrp
shrl
mov
and
fsubs
lods
out
or
jle
sbb
or
lea
test
les
out
aaa
jle
sbb
jg
xor
fistl
adc
dec
in
icebp
sbb
xchg
and
stos
mov
push
int
mov
sbb
sub
dec
jnp
mov
inc
or
push
imull
cltd
into
int3
pop
and
mov
test
insl
pop
xor
jl
jns
sbbl
inc
lock
sub
js
xor
movsb
inc
insb
lcall
in
jecxz
rdpkru
sub
lcall
pop
and
push
mov
mov
pop
out
fcomip
or
mov
mov
stc
dec
ret
adc
pop
lcall
push
jbe
arpl
outsb
popa
mov
ret
xor
cmp
xchg
es
mov
shr
or
mov
shll
lea
add
cmpb
stc
or
lcall
pop
rclb
iret
repnz
out
insb
dec
push
bound
mov
shll
adc
cs
sarl
sub
xor
in
sub
jl
jmp
fcomps
in
jne
es
aad
or
mov
push
sbb
ljmp
jb
orl
cltd
sti
and
mov
mov
ret
jp
xor
and
mov
lods
int3
nop
or
sahf
pop
pushf
ss
bound
and
sub
dec
inc
test
stc
std
add
loop
xchg
adc
or
cmp
jns
lret
jno
cmp
jae
stc
xchg
iret
jg
mov
repz
mov
pop
jo
adc
cld
mov
fwait
je
cltd
xor
js
sti
mov
add
mov
dec
cli
jne
and
enter
loopne
cmp
xor
add
ret
inc
add
bsf
pop
xchg
popf
dec
lret
xor
xchg
xchg
shlb
push
jb
mov
int3
icebp
mov
repnz
mov
lods
jge
mov
xor
test
sub
test
adc
in
jae
mov
in
xchg
push
les
xor
xchg
adc
bnd
push
mov
lods
sub
add
add
xor
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
scas
jne
rorl
sbb
adc
sbb
cmp
jbe
pop
ss
cmp
outsl
test
js
pop
adc
sub
vmwrite
jge
lea
jno
scas
pop
xchg
push
cld
cmp
insl
mov
push
je
and
dec
mov
popf
sbb
pushf
popf
push
notl
nop
std
mov
xlat
nop
cmpb
aaa
frstor
inc
scas
icebp
xchg
sbb
sub
vmovss
adc
icebp
call
mov
cmp
cmpb
stc
xchg
cmc
rorl
in
or
lods
enter
aas
fstpt
mov
cltd
mov
cli
sub
mov
repz
test
inc
mov
mov
fwait
or
dec
push
scas
add
add
mov
sub
cmp
mov
outsb
test
mov
insb
jne
fwait
jnp
mov
repz
pop
clc
or
outsl
jae
fsubr
or
sub
xor
pop
cld
enter
mov
mov
xchg
xor
dec
jge
push
popf
inc
int3
gs
int
aaa
sub
add
bound
jge
in
pop
jb
mov
push
jle
sbb
or
xor
ret
push
js
sbb
adc
push
cmc
cmp
xor
jae
xchg
movsl
sti
popf
ret
out
enter
add
leave
mov
xor
adc
jno
mov
dec
das
add
movsl
and
popf
aas
nop
jnp
movsb
pop
xchg
arpl
mov
sub
add
mov
mov
inc
mov
in
data16
inc
outsb
pop
xchg
je
int
roll
shll
ret
lea
jae
sub
aam
and
and
in
mov
cmpsb
and
ret
adc
xchg
sar
mov
and
sub
xor
pop
stos
pop
cmp
je
mov
inc
sarb
cmp
add
inc
and
or
sub
mov
push
sbb
bound
std
call
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
jmp
es
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
dec
and
dec
insb
gs
arpl
push
outsl
inc
jne
jae
jb
aam
inc
add
daa
inc
add
inc
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
add
add
inc
add
inc
add
inc
add
es
add
inc
add
jle
add
daa
inc
add
inc
add
and
inc
add
add
push
movsb
scas
or
movsb
adc
inc
add
es
add
es
add
es
add
es
add
inc
add
and
push
es
add
lcall
js
inc
add
es
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
out
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
hlt
and
in
inc
add
loop
js
lcall
and
add
lock
and
addb
add
hlt
clc
sarb
sub
jle
add
add
inc
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
and
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
inc
add
inc
add
inc
add
inc
add
addl
popl
inc
add
addl
mov
addl
scas
addl
mov
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
jo
add
add
add
add
add
add
add
inc
lea
add
add
push
lea
add
xchg
add
add
xchg
add
add
pusha
xchg
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
xchg
add
xchg
add
add
bound
add
jle
add
nop
xchg
add
add
les
add
loop
add
xacquire
add
mov
add
mov
add
add
mov
add
add
add
insb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
cmp
add
mov
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
sub
add
dec
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jl
add
xchg
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sub
add
cmp
add
add
bound
add
mov
add
add
aam
add
loop
add
cli
mov
add
add
push
lea
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
add
imul
outsl
insl
add
je
outsb
arpl
jb
jb
imul
add
add
add
xchg
add
add
xchg
add
add
pusha
xchg
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
xchg
add
xchg
add
add
bound
add
jle
add
nop
xchg
add
add
les
add
loop
add
xacquire
add
mov
add
mov
add
add
mov
add
add
add
insb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
cmp
add
mov
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
sub
add
dec
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jl
add
xchg
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sub
add
cmp
add
add
bound
add
mov
add
add
aam
add
loop
add
cli
mov
add
add
push
lea
add
add
