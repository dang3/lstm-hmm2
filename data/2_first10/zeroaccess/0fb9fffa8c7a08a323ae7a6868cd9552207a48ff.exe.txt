push
mov
sub
mov
mov
cmpl
mov
movl
movl
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
push
push
push
call
add
xor
or
adc
mov
adc
movzbl
adc
sbb
orl
xorl
xorl
mov
sub
jmp
mov
cltd
jg
int
pop
xor
mov
push
inc
adc
ficoml
and
ret
ljmp
ljmp
ret
popf
adcb
aaa
ds
mov
adc
fwait
lret
imul
jb
mov
popa
sti
out
aas
imul
das
sub
ret
mov
inc
scas
and
popf
push
push
addr16
xchg
cmp
cwtl
fisttps
jp
or
push
call
add
das
movsb
out
pop
sub
ds
addl
popf
mov
sbb
pop
adc
xchg
or
pusha
cmpb
out
test
lahf
jle
mov
mov
addr16
xchg
cmc
shll
shr
add
jp
pop
je
ret
sub
mov
add
sbb
loope,pn
dec
icebp
push
xchg
mov
inc
and
sub
sbb
into
adcl
cmp
loopne
repz
sbb
cs
inc
mov
jg
mov
mov
adc
sub
inc
inc
adc
call
repnz
jle
dec
mov
sub
cmc
outsl
pop
dec
mov
movsl
inc
pusha
adc
mov
negb
adc
addr16
mull
pop
dec
jge
rcll
and
in
sar
stos
push
stos
adc
decb
mov
loop
ret
pop
cmpsl
and
cmc
scas
xchg
out
sahf
sbb
push
mov
sbb
fiadds
pop
ret
outsl
dec
dec
icebp
fs
dec
ret
mov
add
push
popa
test
dec
aas
sahf
les
jnp
add
add
jecxz
inc
out
lahf
push
sbb
in
pop
push
in
cmpsb
fildl
mov
adc
enter
sub
mov
leave
xchg
scas
xchg
aas
mov
and
add
xchg
mov
out
in
imul
sub
pop
add
xor
pop
adc
jbe
cmp
ret
and
sbb
push
dec
or
arpl
mov
sub
xor
dec
mov
inc
sbb
mov
xor
imul
xor
repnz
imul
outsl
sbb
int3
sahf
sub
mov
clc
mov
dec
vphaddbq
adc
jge
mov
sbb
movzbl
adc
mov
orl
cmpl
mov
mov
jmp
mov
cmpl
jle
pushl
push
call
sub
add
inc
xor
add
adc
sbb
sbb
adc
orl
mov
sbb
mov
or
mov
movzbl
sbb
mov
sub
mov
sbb
mov
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
push
push
push
push
call
xor
or
adc
xor
and
xor
adc
xor
cmpl
mov
movl
not
movl
jmp
movzwl
cmpl
je
pushl
call
movzwl
add
mov
and
xor
adc
inc
adcl
mov
sub
orl
orl
add
lea
xor
add
add
mov
mov
adc
mov
mov
add
xor
add
mov
sub
add
mov
andl
jmp
das
jp
mov
mov
xchg
mov
mov
mov
mov
jnp
add
push
jmp
leave
xor
push
dec
faddp
jb
repz
data16
cmp
jns
hlt
pushf
jbe
ret
dec
dec
or
fs
pop
clc
mov
sub
push
mov
test
aaa
sti
sti
pop
cmp
mov
xor
fadd
bound
mov
call
jl
ret
ljmp
scas
push
jp
mov
movsb
sub
cmpsb
sub
xchg
push
pusha
insb
sbb
out
fs
cmc
jno
movsb
shlb
jl
xchg
sbb
test
mov
insl
test
movsl
pop
ror
lcall
repz
pop
cmp
xlat
aad
je
xor
push
lods
mov
push
xor
xor
inc
push
dec
jmp
addr16
sub
in
mov
dec
add
sbb
sbb
push
mov
scas
sbb
ljmp
xor
mov
sbb
xor
and
daa
fsubp
lret
mov
or
cmp
sarb
cmp
push
loope
push
cmp
clc
lret
pushf
shll
xor
rolb
adc
incb
in
bound
loop
stos
and
sti
fstp
pop
hlt
mov
add
subb
and
lahf
and
les
cmp
push
xchg
js
fildl
movsl
test
cld
add
ja
shll
cmp
mov
xor
hlt
jl
lock
xchg
mov
mov
sbb
add
push
stc
jne
mov
jge
stos
js
les
lods
push
mov
call
xchg
mov
sub
inc
dec
inc
push
fstpt
pop
mov
sub
cwtl
cmpsl
rcrb
xchg
sub
enter
pop
mov
imul
add
mov
add
pop
scas
sub
mov
add
insb
inc
les
pushf
xchg
in
movsb
adc
push
js
mov
pop
inc
movsl
or
mov
inc
push
lds
ffreep
sahf
sub
mov
cld
add
scas
lock
cli
aaa
inc
pop
cltd
jnp
sub
pop
rolb
fbld
cmc
xchg
mov
stc
loop
mov
dec
push
dec
fistpl
inc
sbb
add
mov
mov
mov
jmp
mov
cmpl
jb
push
pushl
call
and
adc
xor
xor
xor
xorl
or
xor
mov
shrd
add
shr
jmp
xchg
cmp
push
mov
cwtl
arpl
mov
mov
cwtl
pop
popa
sub
push
imul
or
cmc
sub
into
in
sahf
call
mov
adc
sbb
in
imul
fstps
mov
enter
hlt
ss
dec
jp
fbld
ja
aam
jle
dec
ret
mov
pop
les
mov
aad
xchg
adc
mov
jnp
xlat
sub
mov
mov
sbb
sarb
mov
lods
add
rcrl
aam
mov
push
ja
lods
or
outsl
test
pusha
fdiv
pusha
mov
imul
sbb
and
sub
aad
fistpll
jp
aam
push
nop
aad
lock
inc
xchg
scas
in
fsubrl
leave
push
and
movsl
pop
frstor
sahf
sub
add
leave
shll
pop
pop
adc
test
push
xchg
mov
ljmp
out
ss
mov
jge
mov
add
js
push
add
js
sarl
lahf
pop
mov
inc
test
loope
and
gs
xor
outsb
mulb
lods
popa
jbe
xor
mov
or
sub
sub
mov
lock
xchg
push
jnp
imul
fimull
cwtl
clc
push
stc
mov
xor
sbb
scas
scas
aaa
inc
fcomip
stc
dec
sub
cmp
lods
adc
arpl
inc
mov
in
scas
push
mull
testl
repz
adc
mov
aam
and
sub
cmp
popa
mov
imul
mov
jg
xor
das
and
dec
sarl
mov
sub
daa
sub
pop
mov
mov
hlt
mov
insl
icebp
cmp
inc
sub
fstpl
icebp
xor
cwtl
xor
cmp
xchg
mov
xor
xor
addr16
jge
fisttpl
pop
movsb
enter
cmp
cmp
jecxz
shl
xchg
push
cmp
mov
sub
clc
std
int
xchg
in
popf
ret
leave
jg
inc
pushf
xor
lds
jno
mov
push
cmp
mov
aam
add
loop
ja
ds
or
adc
mov
xor
orl
xor
subl
or
sub
mov
and
movl
movl
xor
or
sbb
movl
movl
decl
movl
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
je
push
call
xorl
movl
orl
subl
andl
mov
sbb
mov
movl
cmpl
movl
mov
movl
jmp
mov
cmpl
jg
push
push
push
pushl
call
sbb
subl
or
addl
sbb
adc
xorl
movl
cmpl
mov
movl
movl
movl
jmp
mov
movl
cmpl
jge
pushl
push
call
subl
adc
orl
addl
subl
or
movl
subl
movl
movl
movl
sub
movl
or
movl
cmpl
notl
movl
jmp
movzwl
mov
cmpl
jbe
pushl
pushl
pushl
pushl
call
orl
addl
orl
sbb
addl
adcl
movl
dec
movl
sbb
movl
xor
add
mov
and
movl
sub
movl
movl
cmpl
mov
movl
movl
jmp
movl
mov
cmpl
jne
pushl
push
call
xorl
sbbl
and
orl
orl
add
andl
movl
movl
cmpl
movl
movl
jmp
movl
cmpl
jbe
pushl
pushl
push
push
push
call
addl
adc
sbbl
adcl
adcl
movl
cmpl
mov
movl
movl
jmp
movl
cmpl
ja
pushl
pushl
push
call
add
add
sbbl
andl
andl
and
andl
xorl
movzbl
xor
mov
subl
jmp
inc
jb
mov
pushf
pop
add
mov
mov
mov
sbb
ret
test
dec
hlt
mov
sbb
cmp
test
fidivs
ljmp
sbb
loop
xchg
rolb
xchg
out
dec
leave
aam
test
and
rclb
popf
xrelease
push
fnstcw
cmp
rorb
xor
or
lahf
stos
cmpsb
mov
divb
sahf
jl
stos
movsb
or
or
cli
lret
mov
inc
adc
jmp
imul
sbb
in
sbb
xor
push
out
jl
cmpsb
dec
inc
fcoms
mov
pop
adc
cmp
push
cs
and
jmp
fsubrl
fcoml
cmp
jno
js
or
sahf
daa
test
mov
sahf
adc
fwait
inc
adc
bound
sub
mov
jne
mov
xchg
aad
xchg
dec
pop
neg
dec
pop
cmp
test
pop
fldl
aas
jle
ljmp
mov
pop
ljmp
xchg
jge
mov
or
jle
stos
in
mov
outsb
push
or
pop
fucomi
inc
sbb
cs
ficoms
fdivl
jle
loop
shll
mov
push
jns
mov
sbb
insl
mov
cmp
cld
leave
add
adc
popa
xchg
aas
cmp
scas
inc
cmp
sbb
add
ret
push
data16
rcrl
out
and
pop
xchg
cs
imul
or
push
push
push
push
out
cltd
add
mov
out
mov
mov
cmpb
fwait
pop
mov
sub
xchg
shrl
insl
movsb
mov
xor
arpl
std
clc
push
clc
es
xor
jnp
mov
cmp
pop
es
sub
jb
cwtl
in
or
hlt
in
xchg
dec
dec
ljmp
dec
lcall
dec
jae
mov
test
mov
loope
sub
jne
xchg
mov
in
dec
jno
dec
dec
sbb
shll
je
out
je
adc
fstp
movsl
insl
mov
test
sbb
push
cmp
stos
xor
rcr
lcall
push
dec
mov
push
push
push
push
call
xor
mov
mov
cmpl
mov
mov
movl
jmp
mov
cmpl
jl
pushl
call
mov
sbb
xorl
adc
sbb
or
sbb
add
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
push
call
xor
add
adcl
or
adc
subl
and
xor
mov
mov
sub
mov
mov
sub
and
mov
lea
xor
or
mov
sbb
mov
mov
mov
sub
mov
adcl
or
and
movl
mov
addl
or
xorl
xor
cmp
movl
jne
mov
adc
mov
mov
mov
sub
imul
jmp
add
sub
inc
and
sbb
mov
mov
movsl
icebp
mov
mov
rcrb
leave
or
mov
in
jp
js
push
shl
movsl
lret
mov
jmp
js
aaa
in
cli
out
int
inc
dec
std
dec
adc
mov
or
add
pushf
clc
xor
enter
jle
test
adc
jbe
mov
and
mov
test
cs
add
mov
xor
sub
je
or
pop
cmp
ficompl
mov
lods
out
dec
jp
add
adc
fldenv
es
rolb
cmpsb
ja
ret
inc
lods
inc
loopne
add
popf
pop
loop
clc
movsb
mov
rcrl
inc
push
popa
shrl
dec
pop
ljmp
scas
inc
sub
xor
mov
push
mov
dec
jle
roll
sti
mov
loop
push
mov
call
pop
mov
cmp
mov
cmpsb
out
pop
ret
pop
xor
mov
xchg
xor
movsb
dec
mov
inc
int3
jp
inc
call
add
add
popa
shrb
add
dec
gs
pusha
in
sbb
shl
fwait
repnz
jae
fs
push
ss
lret
fisubs
ljmp
mov
loope
scas
lods
cmp
dec
sub
or
int
or
adc
out
icebp
fcmovbe
push
or
cmp
mov
fcompl
dec
movsl
movsb
dec
push
jle
sbb
inc
jns
adc
xchg
sti
ficoms
movsl
stos
or
push
mov
sbb
mov
jne
out
fldenv
ljmp
and
mov
pop
cs
mov
data16
loope
pop
add
push
pop
jmp
loope
add
sbb
cmc
mov
es
lock
adc
xor
jbe
popa
adc
add
cmp
pop
stos
push
pop
cmpxchg
stc
lds
xchg
push
sub
rcll
and
repnz
fs
xchg
and
and
cmp
aam
push
repnz
xchg
test
mov
bswap
aaa
cmp
mov
xor
xchg
lods
and
out
call
push
insb
test
push
add
xchg
sub
fs
and
insl
cwtl
stos
push
push
mov
shrd
addl
shr
andl
mov
andl
mov
subl
shl
xor
xor
or
movl
mov
movl
cmp
jne
cmpl
mov
mov
mov
mov
jmp
movl
movzbl
cmpl
jl
push
call
sub
notl
sbb
sbb
orl
andl
mov
mov
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
call
mov
add
or
add
or
subl
mov
adc
mov
addl
shrd
andl
mov
cmpl
mov
movl
jmp
movl
cmpl
jg
push
pushl
push
call
adc
sbbl
sub
sub
not
and
mov
add
dec
mov
xor
sbbl
shr
xor
mov
movl
xor
or
shl
movzwl
xor
mov
sub
mov
xor
mov
adc
mov
add
mov
add
mov
add
mov
or
mov
neg
shrd
shr
xor
or
mov
add
mov
andl
mov
add
xor
shl
xor
adcl
or
mov
mov
addl
shrd
shr
movzwl
sub
mov
mov
sbb
mov
orl
mov
xorl
xor
xor
sbbl
or
notl
shl
subl
lea
and
mov
notl
mov
movl
shrd
shr
mov
xor
mov
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
push
push
push
call
sub
add
xor
sub
sub
and
movzbl
or
sbb
xor
mov
xor
xor
mov
andl
xor
or
addl
shl
sbbl
imul
xorl
mov
mov
addl
shrd
mov
xor
mov
subl
xor
shr
sbb
mov
movzwl
or
mov
xor
andl
or
orl
shl
andl
sub
movl
mov
mov
cmp
jmp
sbbl
xchg
popf
xchg
mov
lcall
mov
xchg
adc
or
xlat
add
outsl
push
xchg
xor
icebp
mov
hlt
je
mov
inc
js
dec
pop
loope
subb
xchg
xchg
inc
aas
xchg
jl
add
push
addl
xchg
push
icebp
aad
dec
xchg
dec
push
lea
or
sbb
outsl
jl
ss
outsl
adc
ret
sub
outsl
mov
ljmp
xor
cmp
xchg
dec
mov
popf
lods
cmp
rol
out
leave
xor
cmpsl
fsubs
push
iret
bound
mov
mov
mov
jo
mov
mov
nop
and
mov
les
fadd
gs
fcomip
or
push
sub
dec
xchg
je
setb
adc
fld1
jb
dec
or
sub
xchg
adc
movb
jnp
popa
lret
outsb
cmp
inc
jnp
repnz
cltd
rcrl
popa
scas
or
ds
daa
lock
jb
ret
addl
pop
es
sar
mov
cli
cmc
adc
cmc
loopne
test
add
sbb
insb
sbb
shll
adc
pop
push
adc
pop
mov
loope
xor
int
fcoml
mov
call
daa
lret
adc
or
xor
jne
cmp
xchg
icebp
dec
ss
mov
xchg
push
mov
pop
add
inc
inc
cmp
mov
push
xchg
fs
outsl
in
add
cmp
jmp
inc
pop
cmpsl
lcall
push
les
fwait
add
test
inc
fcmovnbe
scas
mov
ljmp
gs
sub
push
adc
add
les
push
in
add
dec
lcall
jno
inc
aaa
push
aad
cmp
mov
dec
fwait
pop
in
stos
les
adc
repz
fdivs
rcr
je
cmc
add
cld
ds
fisubl
pop
repz
xchg
cmpb
xchg
movsl
xchg
add
int
sti
and
dec
out
es
jne
mulb
dec
or
push
repnz
mov
and
stos
jge
leave
and
repnz
jl
int
out
inc
inc
js
xor
mov
aad
outsl
ljmp
cli
mov
scas
mov
movl
mov
mov
movl
jg
jmp
pop
sbb
outsl
mov
jnp
sbb
fnstsw
mov
mov
adc
sahf
push
mov
xor
cmp
je
add
jno
outsb
cmp
inc
dec
ret
cmp
mov
pop
and
pop
in
inc
add
enter
push
sub
fadd
movsb
mov
and
rorl
repnz
push
cmc
pop
push
imul
aad
lahf
scas
notl
popa
sbbl
mov
sbb
jge
push
push
cld
pop
fnstsw
test
shlb
mov
push
test
mov
fs
lds
mov
ficomps
cmp
or
fistl
imul
xchg
mov
je
jne
push
clc
fildl
or
lahf
pop
sub
dec
dec
insb
lret
pushf
push
mov
popa
xchg
push
cmp
xchg
sbb
insb
xor
jecxz
aad
test
cld
or
in
fnstcw
jmp
jle
loopne
and
or
mov
lds
cmp
ficoms
int3
mov
pop
mov
inc
inc
incb
test
lahf
pavgb
sti
inc
jnp
xor
jg
inc
xchg
imul
mov
cmc
call
sub
mov
xchg
out
cmpsl
mov
sbb
stos
adc
sarl
xchg
mov
xchg
and
jmp
mov
data16
dec
inc
clc
and
ret
in
push
mov
out
out
mov
sub
sub
cmp
lods
aad
popf
mov
push
cli
xlat
sub
inc
mov
jg
push
in
fidivl
hlt
pusha
cwtl
das
push
dec
pop
push
dec
xchg
xor
dec
test
dec
mov
int3
mov
sti
out
out
ret
mov
push
or
inc
pop
adc
idivl
or
jne
jl
add
lods
cmp
mov
jp
outsb
jne
repz
and
ret
cmp
scas
lcall
sbb
mov
mov
cmp
mov
and
or
mov
mov
scas
leave
xor
rcl
mov
jge
fnsave
lahf
ret
loop
pusha
push
jp
in
in
inc
js
xchg
aad
gs
loopne
xchg
lods
shrd
movl
jmp
xorl
mov
sbb
jno
mov
jno
loope
mov
inc
mov
cmp
and
enter
inc
out
cmp
icebp
test
push
mov
adc
sbb
pop
push
pusha
cli
cmc
mov
repnz
cmp
fistps
imul
inc
mov
xor
sti
les
arpl
stc
loop
mov
or
cld
jbe
push
pushf
addb
pusha
and
imul
inc
leave
sub
sbb
push
mov
scas
inc
mov
push
pop
mov
mov
lret
sub
sub
lret
int
push
add
cltd
cs
lds
pop
gs
aaa
push
movl
cltd
jp
cmpsb
loopne
xchg
test
ficoms
inc
int
cmp
pop
leave
lahf
push
xlat
or
aas
inc
fldl
mov
xchg
pop
pop
sti
cmp
xchg
add
call
dec
xchg
sub
xchg
roll
in
rorl
inc
dec
jp
xchg
dec
inc
cli
or
mov
jg
inc
fcmovnu
xor
mov
add
icebp
mov
or
push
fbstp
adc
inc
add
cmp
sub
loopne
jg
mov
xchg
sub
aas
outsl
push
xchg
jg
pop
test
movsb
adc
xchg
aam
int
rcrl
and
int3
fsts
cmp
or
and
jbe
jo
loopne
ljmp
scas
pop
inc
lods
std
loop
push
sarl
xchg
mov
inc
inc
int3
hlt
test
pop
aam
mov
lcall
in
pop
dec
repz
add
pop
adc
pop
and
or
imul
mov
xchg
mov
mov
js
jmp
cmp
lea
jns
mov
or
scas
sbb
push
call
push
xor
inc
sahf
lock
xchg
lcall
adc
ror
jle
mov
leave
insl
sub
push
jge
test
movsb
ja
bsf
adc
pop
push
sbb
dec
popa
xor
pop
loopne
pop
aas
mov
jmp
mov
adc
fnsave
popa
dec
jl
jle
es
adc
leave
xor
in
ljmp
lds
jnp
xor
loopne
cli
jnp
lret
fidivrl
cmp
xor
shll
sahf
jno
lahf
in
fsubrs
jp
mov
xor
test
hlt
mov
outsl
mov
mov
mov
subl
xor
xorl
shl
notl
xor
andl
or
shr
cmpl
mov
mov
movl
jmp
mov
cmpl
jg
push
call
sub
adcl
mov
adc
movzbl
xor
mov
mov
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jne
pushl
push
push
call
adcl
neg
mov
mov
sbb
sbbl
movl
mov
addl
mov
mov
orl
shrd
shr
mov
mov
xor
mov
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jbe
pushl
pushl
pushl
push
pushl
pushl
call
subl
sbbl
or
adcl
sub
mov
or
mov
addl
mov
adcl
jmp
cmp
in
jmp
mov
movsl
sti
adc
jecxz
mov
shll
dec
in
cmp
test
hlt
sub
mov
xor
ret
xchg
add
mov
mov
xchg
cmpsl
and
xchg
in
pop
sbb
shl
jnp
dec
test
dec
loope
or
cmp
stos
pop
mov
inc
pop
cmp
cmp
dec
loope
jb
in
mov
adc
or
fbld
lock
or
leave
push
mov
call
ljmp
subl
mov
and
mov
mov
int3
js
shrb
pop
xchg
mov
adc
and
mov
dec
bound
add
addr16
cmp
ret
add
in
loop
mov
ror
lret
lods
mov
arpl
add
push
adc
addl
mov
and
mov
mov
aas
sub
or
out
shlb
push
imul
xchg
pop
xchg
mov
cmp
cmp
adcb
lods
fcomip
lea
and
andb
int3
stc
cmpsl
xor
out
dec
sbb
call
repz
std
or
fldenv
in
inc
add
loop
aaa
sarl
xor
sbb
dec
leave
fidivrs
mov
fyl2xp1
cmp
and
mov
out
jecxz
sbb
or
xor
bsf
shrb
dec
mov
inc
push
insl
lcall
mov
lock
or
aad
in
pop
add
icebp
xchg
push
icebp
lods
mov
gs
mov
and
leave
add
jl
mov
jb
jg
mov
in
xchg
in
rorb
add
lahf
jns
insb
inc
scas
pop
and
add
imul
std
inc
shrb
sub
dec
clc
sub
out
push
pop
and
imul
repz
add
sbb
xchg
mov
mov
inc
pop
xchg
mov
mov
ss
lret
testb
std
sbb
outsl
mov
aas
fisttpl
xor
aas
xor
or
mull
xchg
push
mov
push
bound
xor
xor
orl
or
addl
shl
imul
addl
sub
movl
jmp
shrd
mov
mov
addl
xor
shl
xor
sbbl
or
shr
cmpl
mov
movl
movl
jmp
movl
cmpl
je
pushl
push
call
movzwl
add
xor
neg
xor
sbb
or
mov
jmp
push
cltd
cmpsb
icebp
lods
cmc
popf
mov
add
xor
sarb
test
fidivrl
inc
push
lods
jbe
push
aam
push
dec
pop
or
loop
inc
and
popa
cli
scas
xor
mov
pushf
cmp
mov
insb
inc
dec
mov
mov
mov
mov
dec
xchg
imul
sbb
and
add
in
inc
in
add
lock
adc
gs
mov
leave
clc
or
sti
add
leave
lods
pop
iret
pop
rcrl
adc
in
int3
mov
inc
sbb
xchg
pop
and
scas
sub
add
aas
dec
add
int3
push
insl
data16
idivb
jmp
sbb
scas
cmp
cmp
fsubs
dec
xor
fisubl
roll
popl
push
push
cli
mov
push
cmp
mov
or
les
push
hlt
cmp
cld
fmull
xchg
outsl
fcoml
mov
imul
mov
mov
in
fists
outsl
repnz
in
xchg
jl
ret
mov
mov
fwait
jno
sti
jo
or
cmp
inc
jne
cld
cmpsl
pop
ss
test
xchg
pushf
pop
in
rorb
mov
cltd
cli
or
dec
xor
mov
mov
push
out
mov
mov
adc
sti
rolb
bnd
lds
notl
das
and
xor
inc
inc
insb
or
cmp
sbb
movsl
or
cwtl
bound
pushf
das
push
adc
filds
adc
push
pop
iret
pop
imul
mov
out
pop
out
and
out
mov
xor
jmp
das
mov
cwtl
sarl
loop
fs
cmp
lret
jp
lahf
popf
mov
jmp
pop
test
xchg
jne
in
inc
repz
jg
xlat
pop
pop
adc
test
jns
stos
mov
sub
ja
dec
mov
pop
fcmovb
in
push
xlat
je
cmp
push
jmp
mov
loopne
and
pop
xor
cli
pop
xchg
mov
mov
and
movsb
insl
pushf
adc
inc
mov
stc
add
cmp
shrb
jo
bound
add
cmp
test
icebp
lds
and
loope
leave
insl
push
push
dec
or
mov
mov
add
mov
shrd
addl
shr
or
mov
andl
mov
mov
addl
xor
addl
jmp
pop
dec
dec
jo
je
jae
testl
jno
lock
mov
gs
int3
adcb
fwait
push
shl
mov
add
push
into
mov
push
jae
cmp
insb
fldcw
dec
mov
out
rcrb
movsl
mov
dec
pop
dec
xlat
hlt
addr16
fcompl
or
mov
pop
call
cmp
xor
and
adc
jl
push
jne
fcmovb
aad
popf
inc
repnz
xor
cmpsb
in
and
ss
mov
rcrb
cld
rol
sub
das
cmp
pusha
ljmp
pop
mov
adc
push
mov
mov
fidivrl
mov
pop
mov
out
xor
mov
adc
shlb
mov
adcb
fwait
aad
aas
sub
addl
lock
dec
pop
mov
mov
push
sbb
mov
sub
inc
leave
pminub
adc
ja
repz
mov
icebp
ffree
sub
xor
fmull
pop
pop
or
mov
or
test
data16
jbe
adc
and
pop
cld
mov
rcll
sub
xchg
movsl
ljmp
fucomi
leave
imul
in
std
cwtl
mov
fidivrs
lods
adc
lods
mov
jg
or
adc
fucomip
xchg
test
aas
sub
mov
mov
xor
add
inc
mov
sbb
or
mov
imul
mov
inc
mov
sub
out
or
inc
gs
cmp
popa
or
loope
aam
jmp
ja
pop
stos
sbb
xchg
stos
xlat
rorl
xor
cmp
sahf
mov
loope
insl
or
jae
inc
aaa
in
test
hlt
cmpsb
enter
inc
cmpsl
add
sub
mov
fcmove
jmp
fidivrl
pop
aad
fstl
mov
into
mov
mov
adc
inc
mov
sbb
push
je
stos
aaa
cmp
jne
pusha
fwait
mov
mov
cmp
sub
int
hlt
fcomps
movl
cs
shll
xchg
jecxz
push
cwtl
sbb
ja
movsl
int3
and
lds
sub
jae
pop
bound
cmp
jecxz
loope
adc
cmpsl
out
loop
jbe
out
pop
lcall
rcl
jecxz
push
int
or
xor
or
xorl
shl
movzbl
or
add
sbb
add
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
push
push
pushl
push
call
xor
or
sbb
mov
sbb
or
subl
mov
mov
or
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
jmp
jecxz
mov
mov
xlat
cwtl
xchg
outsl
test
mov
mov
jne
jge
sbbb
mov
jle
sbb
push
mov
add
mov
loope
movsb
pop
mov
dec
out
imul
shlb
and
jmp
ret
nop
outsl
sub
test
adc
add
pop
nop
cmp
mov
push
outsb
jge
inc
cmpsl
shll
cwtl
and
jns
mov
jb
icebp
pushl
std
cmp
out
addb
test
out
mov
adc
jo
movsb
imul
and
jge
jae
rclb
jb
imul
jle
add
adc
mov
and
mov
and
js
in
shrl
fld
inc
mov
mov
insb
int3
loop
mov
lds
data16
mov
sub
loop
je
push
pop
arpl
into
outsb
add
xchg
jge
test
xor
pop
in
push
sub
out
stos
push
out
push
out
sub
mov
cmpsl
stos
lcall
arpl
fcmovnbe
mov
pop
mov
fildll
mov
insb
fdivrp
jo
cwtl
loop
mov
addb
out
xorps
xor
ret
rcrb
xchg
stos
inc
and
stos
enter
out
ret
andb
mov
jle
add
es
xchg
adc
dec
and
push
pop
ja
ja
xchg
int
inc
mov
mov
push
cltd
fstpt
or
mov
js
sbb
int3
insl
and
or
leave
fs
jp
sub
cld
xor
pop
loop
mov
cwtl
call
mov
repnz
mov
adc
mov
test
sbb
add
stos
mov
fsts
les
jge
psubusb
and
fnstsw
pop
push
data16
mov
xchg
fsubrl
cmc
fcompl
xor
lds
dec
adc
inc
out
cmp
sbb
insl
repnz
mov
repz
negl
je
xlat
clc
mov
or
or
add
cmp
dec
and
popa
xor
lahf
adc
loopne
cwtl
into
sar
rorl
out
xor
shrl
outsb
je
cmpsb
pop
mov
pusha
fsubr
imul
into
ret
aas
pop
in
xchg
adc
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
jmp
in
cli
js
mov
push
or
add
sarb
lods
or
push
pop
push
negl
jb
sbbb
fmuls
aas
cltd
pop
inc
push
cwtl
fisttpl
insb
addr16
jae
jnp
inc
iret
lods
jb
mov
jne
lahf
sub
mov
xchg
xchg
imul
push
shlb
mov
gs
mov
aas
push
xchg
pop
inc
movsl
jge
lret
mov
test
ficoms
cmp
addr16
stos
cmp
cmpsb
mov
pushf
cmc
add
mov
jno
insb
shlb
stos
xor
aas
incb
movsl
loop
testl
icebp
dec
adc
mov
data16
sarb
pop
in
inc
int
mov
loope
push
adc
shrb
adc
int
outsb
outsb
pop
mov
mov
lahf
push
ljmp
cwtl
jo
jmp
ficoms
or
push
add
add
mov
fs
pop
jge
lcall
add
cltd
flds
inc
out
sti
dec
jno
aad
movb
fwait
imul
cld
sub
roll
or
cmpsl
in
cmc
add
in
push
orb
xchg
dec
movsl
inc
pop
sbb
ljmp
out
sub
mov
mov
dec
dec
dec
cwtl
fstps
dec
mov
jmp
push
leave
mov
push
jg
push
jl
mov
iret
add
ret
jae
jne
dec
insb
fimuls
cltd
call
mov
into
mov
ja
dec
out
sub
mov
inc
adc
pop
nop
stos
sbb
adc
and
add
pushf
add
or
push
lret
pushf
xor
pop
aas
outsb
mov
mov
mov
in
and
pop
fists
xor
stos
mov
je
int
out
test
movsl
jl
pop
cli
push
stc
pop
data16
sbb
das
inc
frstor
fcomps
jnp
xor
loopne
out
int
mov
popa
iret
out
jg
inc
adc
mov
out
loop
lcall
xchg
adc
mov
dec
sub
xchg
push
jne
mov
or
push
xchg
cwtl
or
pop
cltd
mov
dec
add
stos
mov
subl
inc
sbb
dec
add
push
push
addr16
sub
pop
loop
aaa
scas
jl
push
rclb
jl
repz
and
in
fdivrs
fwait
stc
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
jmp
and
mov
sarb
lea
jno
cli
mov
mov
aam
in
into
fildl
adc
mov
enter
inc
dec
jmp
rcrb
push
pop
xchg
enter
in
add
xor
and
push
push
and
xchg
adc
lods
mov
sub
xor
sub
push
dec
push
or
dec
lock
dec
aam
hlt
push
jb
das
jbe
fs
cltd
dec
mov
inc
and
stos
fnstsw
loopne
or
divb
nop
xchg
shll
lahf
jge
icebp
insb
mov
mov
fidivs
fcomp
dec
sbb
dec
push
mov
ss
add
xor
sbb
xor
jmp
fcompl
sbb
lret
je
call
xchg
arpl
hlt
ja
pop
incl
xor
aas
cmp
sub
int3
push
repnz
sbb
imul
into
sbb
jge
inc
pop
scas
shl
call
aas
mov
int
lret
sahf
and
sub
mov
aas
rcrb
les
pop
xchg
fnstsw
movsb
mov
push
jbe
jns
mov
fisubl
or
mov
in
xchg
mov
rcl
outsl
mov
mov
roll
loopne
pop
pop
fdivl
xlat
xor
shrb
lods
int3
loop
push
imul
push
clc
xlat
sub
pop
movsl
loopne
mov
push
enter
das
lock
out
mov
mov
ja
push
out
inc
inc
sbb
pop
mov
sarb
push
xchg
xor
sbb
lock
fcomip
push
hlt
sahf
cld
fstpl
mov
cmp
les
cld
stc
dec
mov
cwtl
jo
lds
and
in
mov
mov
cmp
ja
or
and
stos
push
outsb
push
aad
sbb
xchg
ja
les
fsubrp
and
mov
fmuls
enter
arpl
xchg
pop
loope
push
mov
pop
iret
fmul
outsw
loop
and
pusha
arpl
cmc
pop
pop
push
or
push
adc
das
jmp
int
xchg
cli
test
jns
fwait
adc
out
outsb
xchg
mov
jo
mov
mov
and
mov
adc
and
icebp
ja
mov
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
jmp
push
js
jno
mov
sti
jno
lods
arpl
add
mov
rorb
adc
mov
push
aas
fwait
lea
jbe
sahf
cmp
icebp
mov
scas
push
out
xchg
xor
arpl
test
lahf
xor
and
shl
outsl
imul
cmp
pop
jmp
add
pop
add
push
jne
cltd
mov
js
call
imulb
sub
cmp
inc
rcr
adcb
into
int3
call
mov
neg
xchg
or
fisubrs
cli
insl
mov
cmp
test
inc
cwtl
mov
mov
lret
loop
ret
pusha
push
ds
mov
jae
cvtpi2ps
sub
add
cmpsl
loop
scas
mov
jle
int
add
loopne
add
popf
pop
xchg
jne
fmull
ret
test
scas
movsb
mov
scas
fistps
adc
or
mov
pop
repz
leave
or
jmp
bound
js
push
push
shlb
rolb
mov
mov
cli
or
fists
mov
cmp
mov
mov
add
stos
add
mov
sub
int
mov
cmp
cmc
iret
sahf
fldl
or
cwtl
out
pop
inc
cmc
jecxz
out
jns
fiadds
mov
sub
fs
mov
sti
and
scas
dec
cs
adc
push
sbb
xchg
cmp
pushf
inc
popl
sahf
jb
fimuls
xor
cmp
insb
sub
jno
mov
inc
lods
pop
insb
jge
xchg
loopne
or
sarb
insl
aaa
clc
and
and
jbe
pusha
jo
aam
nop
adc
xchg
jb
jmp
push
out
jae
test
push
jno
xchg
std
ucomiss
popa
mov
sbb
imul
jmp
or
mov
popf
add
das
test
mov
test
pop
and
cmpsl
jae
push
cld
add
call
and
sbb
push
dec
jecxz
leave
loope
ja
jns
inc
and
iret
push
xchg
add
mov
and
jns
sbb
popa
dec
aam
cmpsb
pop
cld
xor
es
test
pop
cmp
adc
push
jl
xchg
out
lret
shrl
mov
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
jmp
jmp
pop
add
sub
cmp
cmp
push
mov
mov
cmp
sbb
fwait
adc
sbb
jle
jo
inc
int
adc
and
bound
arpl
shlb
push
pop
out
sub
cs
and
dec
mov
in
test
inc
out
jl
mov
mov
adc
lods
push
mov
mov
sbb
fdivrs
ss
lret
xchg
ds
negl
jo
mov
es
jg
inc
xor
xchg
pop
jae
jno
pop
jbe
je
push
sbb
adc
sahf
inc
pop
pop
or
mov
or
jp
and
sbb
jmp
xor
int3
cmp
lret
adc
add
mov
sbb
clc
ja
lret
and
pop
test
mov
cmp
pop
call
fdivl
bound
jae
rorl
mov
xchg
test
arpl
sbb
mov
ss
fstp
xchg
stos
inc
out
pop
and
xor
fstpt
pop
ficomps
sahf
sub
push
iret
mov
lret
int
unpckhps
aam
mull
mov
mov
pop
mov
aas
sarb
sarb
jne
xlat
rcrl
dec
fisubrs
or
dec
stos
out
shrb
xchg
lods
push
cmp
sbb
inc
mov
xor
inc
xchg
dec
aaa
ficoml
test
xor
dec
or
mov
testb
sbb
xlat
jle
jecxz
jo
push
dec
aaa
or
in
daa
mov
mov
test
hlt
sbb
add
inc
out
sti
or
sub
jnp
inc
pop
dec
xor
mov
pop
add
and
out
mov
add
pusha
enter
in
jno
repz
xor
and
pop
mov
sbb
mov
fstpt
and
xchg
insl
inc
jo
outsl
rolb
inc
cmp
clc
mov
inc
jl
mov
pop
pop
mov
in
ds
arpl
xchg
cmp
adc
xlat
lret
in
sti
pop
ja
lret
push
mov
dec
adc
inc
in
push
adc
movsl
pusha
test
adcl
jecxz
stos
sahf
and
fadds
mov
ljmp
sbb
movsl
mov
rol
pop
loop
data16
mov
pop
in
xor
fnstsw
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
jmp
push
push
in
push
jns
in
pop
xor
jno
or
mov
sub
test
pop
sbbb
mov
in
jb
popa
xchg
mov
aas
cmp
cs
sarb
pop
je
and
lcall
push
jp
lods
push
xchg
enter
mov
mov
stos
shl
mov
mov
popa
notb
xchg
popa
mov
jns
ljmp
xor
cs
cwtl
outsb
fdivrl
adc
fldt
mov
xchg
mov
pop
xchg
sahf
into
ds
jmp
xor
repz
adc
je
inc
xchg
jp
xchg
sbb
mov
inc
addr16
mov
rorl
in
test
pop
out
or
xchg
adc
and
mov
cld
xchg
pop
psadbw
ljmp
cmpsb
clc
jp
stos
leave
cmp
test
movsb
insl
mov
fdivs
aam
movsl
and
and
mov
pusha
sbb
sbb
mov
add
add
mov
sbb
fiaddl
pop
filds
and
arpl
cmp
adc
mov
imul
mov
sub
inc
or
dec
or
popa
decb
les
outsb
xlat
sub
xorl
int
mov
stc
jl
roll
lret
xchg
mov
sar
pushf
stos
rcrb
pop
shld
cmp
add
sub
icebp
js
orl
push
fmul
insb
xchg
sub
adc
sti
mov
shl
cmc
jno
jecxz,pn
lea
lret
and
outsl
pop
fdivs
je
adc
push
mov
lea
xchg
movsb
xchg
mov
mov
call
mov
push
aas
movsl
lahf
stc
jge
shrb
push
aad
addr16
pop
jg
test
testl
es
sbb
call
negb
pusha
fimuls
inc
leave
int
mov
negl
dec
ret
xor
sub
adc
push
push
sbb
lds
addr16
sbb
xchg
div
pop
sarb
sub
iret
leave
dec
mov
lret
mov
add
inc
mov
mov
mov
dec
mov
hlt
sub
test
push
decb
mov
mov
mov
push
movb
out
std
mov
add
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
jmp
aas
std
mov
cmp
sub
das
lock
mov
push
or
mov
add
cwtl
jne
cmc
inc
inc
and
and
movsb
xor
sub
mov
mov
out
ror
mov
mov
push
cmp
push
stc
ja
add
jne
cmp
sbb
movsb
pop
mov
out
loope
or
scas
loopne
mov
jae
xor
pop
into
sbb
xchg
stos
jg
sbb
fs
inc
adc
popf
push
movsl
fimuls
addb
gs
dec
fldenv
dec
pop
bound
dec
cmpsl
stos
jnp
aam
xchg
and
icebp
xchg
cwtl
orl
push
mov
pop
xchg
xor
cmp
int3
adc
jle
and
lods
out
js
push
push
cmpb
mov
scas
xchg
pop
gs
mov
dec
stos
lret
imulb
int
inc
iret
mov
loop
push
lea
cld
icebp
dec
cmpsl
dec
pop
pop
ljmp
shrb
push
dec
mov
cmp
jecxz
or
add
mov
fs
and
jle
jle
test
xchg
pop
aaa
test
push
mov
stos
ljmp
mov
in
mov
fsubl
mov
adc
cld
pop
jb
pop
hlt
mov
or
xchg
lea
or
sbb
cmp
sub
lods
sbb
scas
and
sub
jne
adc
jb
or
adcb
or
xchg
scas
insl
fnstcw
add
enter
cmpsb
lock
jnp
in
repnz
sbb
testl
jne
das
insb
repz
jge
fwait
jl
push
pusha
jg
fcoml
and
std
or
push
jae
or
push
out
insb
pop
loopne
outsl
out
test
lods
sti
js
xchg
inc
add
adc
xchg
jg
test
xor
cmc
jge
jecxz
and
in
jecxz
cmc
and
data16
jle
int3
flds
push
fldt
int
es
cmp
add
xchg
rcll
in
push
std
fcoms
cmp
jne
int3
lcall
outsb
arpl
je
push
add
outsl
push
jg
rcr
das
setnp
pop
push
jo
mov
push
inc
int3
or
dec
mov
or
push
push
push
call
push
lret
ja
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
jmp
fs
das
ja
mov
outsl
aad
inc
inc
in
mov
lcall
mov
mov
xchg
jmp
add
push
mov
xor
xor
into
sahf
add
xor
lock
stos
sub
xor
jnp
imul
pop
add
or
inc
and
add
daa
and
cltd
cmpl
addb
movsl
cmpsl
mov
lcall
jecxz
inc
pop
jo
rclb
jmp
movq
cli
cs
mov
cmp
insb
mov
mov
add
fisubrs
mov
push
cmp
xchg
adc
xchg
jecxz
push
pop
aam
xor
mov
in
leave
xor
sub
arpl
xchg
inc
sbb
jne
rcl
pop
cmp
icebp
sbb
mov
dec
dec
xchg
adc
mov
cmpsl
imul
imul
xor
pop
out
adc
jne
xchg
push
adc
sti
dec
sbb
stos
jns
xlat
xor
test
xchg
pop
lahf
lret
or
stos
loope
sub
xlat
movsl
cmp
sub
lahf
out
lds
push
negb
lret
push
mov
push
aaa
dec
fldl
push
nopl
xor
repnz
cmp
int
mov
ljmp
adc
jmp
notl
shll
gs
cld
cmp
sub
test
scas
xchg
push
xchg
jnp
xchg
in
fcmovnu
addl
test
push
sbb
adc
mov
aam
aad
out
xchg
dec
rcrb
hlt
mov
insl
test
mov
or
or
sbb
adc
jecxz
xor
repnz
sahf
das
dec
lock
sbbb
sbb
shrb
mov
or
mov
cmp
xor
push
test
adcb
and
inc
inc
mov
pop
rcrl
loop
mov
out
imull
lea
out
shl
shll
lods
arpl
cmp
xlat
or
loope
and
sbb
jp
test
inc
popf
cltd
mov
push
jbe
dec
repz
mov
nop
in
cmp
and
cmpsl
and
ja
jno
int3
sahf
and
add
fwait
cs
cli
and
and
rcl
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
jmp
mov
mov
mov
inc
dec
or
adc
mov
mov
imul
pop
lret
outsb
mov
lods
aas
cwtl
adc
push
mov
cli
push
sbb
sbb
add
and
fs
jnp
fwait
test
push
xlat
outsl
inc
push
xchg
out
mov
clc
shlb
js
push
cmp
cs
jno
mov
test
clc
push
popa
iret
bound
addr16
out
inc
push
jmp
test
das
fs
push
movsb
add
jb
scas
push
in
dec
rcrb
or
nop
jl
dec
push
lea
mov
push
xor
mov
xor
add
in
ja
push
inc
mov
mov
fildl
pop
sbb
enter
sub
xlat
sub
loop
rcpps
dec
pushf
cmp
cld
fs
jp
imul
js
pop
push
lea
jecxz
gs
and
mov
scas
cwtl
mov
andl
push
inc
sbb
enter
je
or
mov
push
rcll
push
pop
movb
sub
sahf
push
push
cwtl
popa
pop
and
push
sbb
mov
pop
das
or
or
sbb
loop
lahf
push
rolb
repnz
rcr
out
pushf
cmp
lahf
mov
popf
jecxz
dec
or
daa
sub
pusha
jns
jl
lock
int
mov
mov
scas
or
ss
push
cmp
inc
ror
cld
push
data16
cmp
push
dec
rclb
es
lcall
je
loop
sub
daa
adc
inc
pushf
push
lret
xorl
xor
cmc
icebp
and
adc
mov
fs
mov
lret
mov
fidivrl
sbb
aas
mov
or
sub
insb
repnz
icebp
gs
pop
js
adc
cmp
repnz
stos
sbb
rorb
adc
iret
add
xchg
pop
nop
loopne
lcallw
nop
inc
xchg
enter
hlt
and
cmp
shrb
jecxz
das
scas
lods
pop
pushf
je
dec
push
and
mov
jne
push
int3
gs
in
stos
adc
cli
jle
call
inc
lea
int
cmc
inc
mov
mov
cmpsl
pop
fimull
mov
popa
inc
and
mov
and
rcll
sbbb
mov
xor
mov
mov
xor
jmp
enter
xor
fdivrs
xchg
fldenv
shrl
outsl
and
mov
mov
push
out
and
js
je
lret
sbb
fnstenv
dec
push
add
inc
andb
repz
ret
in
and
push
pop
pop
mov
ret
cltd
je
lods
sbb
imul
fwait
lret
push
xor
shlb
or
adc
push
jnp
jge
sub
inc
xor
gs
fisttpl
insb
stc
cltd
leave
pop
jae
fisubrl
jns
xor
sarl
fst
test
ja
pop
divl
fildl
lods
imulb
fwait
cmp
mov
mov
dec
dec
sbb
sub
push
or
loop
stc
pushf
xor
or
in
jne
rolb
jg
leave
mov
cmp
dec
jmp
jne
mov
jecxz
std
mov
xor
call
shlb
lahf
jno
or
sbb
jne
xchg
mov
jmp
cmpsb
out
fsub
jns
push
and
sahf
jp
shlb
mov
mov
test
out
dec
cwtl
and
fwait
inc
rol
in
jecxz
cltd
test
mov
push
jae
xor
mov
jae
scas
pop
fwait
dec
push
xchg
mov
push
and
test
cmpsl
xor
nop
xchg
int
mov
outsb
imul
pop
adc
stc
movsb
movsl
dec
les
xchg
fldt
mov
jmp
cmp
jmp
enter
in
or
lahf
scas
mov
jecxz
cmpsl
mov
dec
push
outsb
sbb
int3
add
jae
xor
daa
les
push
in
xchg
mov
dec
scas
fildl
inc
repnz
lcall
in
push
leave
into
lods
mov
pop
mov
xor
out
imul
popf
jecxz
movsl
addr16
mov
lods
ja
push
xor
mov
pop
xchg
cmp
pop
sub
sbb
jae
pop
cmpsb
test
imul
and
pop
mov
dec
repnz
ss
adc
mov
lods
mov
out
pusha
jnp
cmp
call
add
jne
imull
out
stos
call
out
test
sbb
in
ja
lahf
movsl
icebp
cmp
divl
xchg
stos
lds
mov
stos
sbb
mov
lock
pop
mov
insb
lds
xchg
dec
ljmp
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
jmp
xchg
cmp
mov
scas
out
cmp
mov
mov
mov
fcmovnbe
adc
fstl
jnp
icebp
jno
mov
shll
add
negl
div
data16
add
faddl
push
aam
andl
jno
outsl
xchg
inc
xor
insb
mov
mov
pop
add
cli
xor
mov
cmc
jl
cmp
sub
pop
movsb
push
sub
fs
mov
jbe
stc
sbb
jno
stos
leave
dec
repz
or
mov
daa
lret
repz
jo
frstor
sti
and
push
mov
ficomps
lock
insb
into
jp
gs
pop
jo
jle
push
mov
dec
adc
mov
push
mov
lea
mov
in
jbe
pop
subl
sub
mov
add
push
cmc
jmp
inc
or
jecxz
lods
outsb
push
cltd
cmpsb
cmp
lock
hlt
int
repz
not
inc
lret
test
jg
mov
sub
mov
cmp
int3
push
in
lods
fsubrl
mov
sub
stc
push
xor
mov
push
jge
ss
sahf
xchg
xor
fisttps
stc
xchg
pushf
ss
jle
lock
add
in
adcb
xlat
pop
jmp
scas
stos
stos
pop
lret
xor
inc
push
and
mov
cmpsb
sbb
scas
icebp
dec
je
movsl
or
or
adc
push
data16
xchg
mov
xchg
or
push
xor
jnp
xor
call
xchg
jecxz
push
push
jg
jo
repz
mov
inc
or
testb
cmp
int3
es
insb
or
test
push
imul
mov
mov
ror
adc
xor
divb
add
jnp
icebp
jmp
sub
lcall
stc
scas
jecxz
push
outsl
mov
call
mov
mov
pop
jmp
cmc
sbb
jb
push
inc
push
jmp
cmp
sub
or
push
test
sub
inc
dec
js
fs
repnz
loop
jae
dec
into
jmp
lcall
pop
mov
or
loope
add
add
imul
lret
jp
dec
add
bound
movsb
ret
loopne
mov
or
xor
or
xor
xor
mov
mov
jmp
mov
scas
movsb
scas
lods
cltd
cmp
mov
cmp
mov
xchg
pop
mov
ret
clc
jo
add
jle
add
fwait
inc
out
sbb
xchg
fsubrs
sbb
je
sub
roll
mov
push
push
cld
neg
cs
sub
arpl
mov
bound
fimull
dec
inc
fcompl
lret
in
arpl
es
or
inc
or
clc
mov
movsb
int
cmp
cmpsl
xor
jp
mov
mov
push
mov
in
jo
push
into
xor
push
rclb
insl
push
cmpsb
movaps
daa
pop
sub
cmp
insl
xchg
cmp
dec
push
sbb
icebp
or
lods
cmp
repz
and
xor
mov
mov
sarb
sar
mov
rorb
and
je
and
imul
mov
es
clc
xchg
orb
xor
or
cmc
mov
flds
mov
leave
and
ret
or
lock
scas
dec
sti
stos
dec
pop
mov
clc
imul
rol
sub
lods
cmp
mov
call
imul
scas
sub
loope
push
jns
and
mov
xor
pusha
shr
jmp
adc
inc
jbe
inc
imul
ror
cltd
add
iret
loope
add
mov
movsl
out
in
push
call
pop
mov
outsb
dec
jns
push
aad
jb
pushf
movsl
imul
sub
mov
icebp
xor
sbb
pop
addl
out
inc
pop
lock
outsl
das
jns
xchg
sbbb
fisubl
repz
inc
adc
daa
or
push
adc
cwtl
jno
in
pop
inc
movlps
cwtl
aad
jmp
mov
lahf
fsub
jg
idivl
in
les
jmp
fisubrs
jnp
fldt
jecxz
sub
subl
repnz
decl
and
sub
shlb
adc
add
fcoml
or
cmp
addr16
add
xor
inc
or
fimull
xor
mov
jo
inc
ja
call
icebp
inc
sahf
decl
dec
pop
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
jmp
cltd
add
popf
popf
add
mov
cmp
mov
cltd
xlat
xchg
add
mov
lret
cmp
cld
adcb
mov
imul
xorb
jge
mov
cwtl
push
mov
jne
cmpsl
repnz
sub
cmpsb
mov
mov
xchg
out
xlat
inc
mov
mov
clc
jle
mov
dec
mov
pop
jns
cmpsb
jb
add
cmp
mov
mov
xchg
into
or
jle
adc
push
inc
jge
sub
mov
and
into
inc
cmp
sbb
fld
cli
cs
shll
insb
xchg
inc
imul
hlt
clc
mov
fs
cmp
xchg
lds
xchg
push
rol
ret
mov
push
adc
rclb
lret
xor
mov
xchg
jne
fiadds
mov
stc
sbb
fildl
jp
sbb
jge
sahf
js
rorl
sub
jbe
enter
ret
or
push
dec
mov
out
pop
ret
pusha
inc
mov
pop
insb
sbb
and
les
or
pop
inc
into
push
movb
pushw
loop
fildl
scas
add
xor
mov
lcall
ret
mov
lea
push
sahf
push
sahf
in
push
adc
cld
jnp
and
xchg
out
jne
popf
and
dec
cmp
mov
pop
lahf
aam
and
push
jp
add
mov
fbld
pusha
sbb
inc
aam
cmp
sbb
popf
imul
insl
cmp
jl
loopne
out
mov
mov
aam
or
aad
pop
mov
mov
cmc
inc
movsl
cs
jne
mov
leave
test
mov
and
ret
or
adc
xor
xchg
inc
pop
arpl
and
jge
sbb
pop
lahf
xor
mov
push
test
mov
repz
pop
xor
mov
pop
adc
add
leave
mov
dec
adc
pop
dec
testb
andl
push
xchg
negb
rolb
lret
cmp
sbb
inc
shrl
sub
add
scas
inc
popa
out
sbb
ss
push
shrb
js
xor
pop
push
sbb
fs
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jmp
adc
out
or
test
cmpsl
outsl
imul
mov
mov
jnp
les
pushf
cmp
lods
jecxz
add
test
xorb
jns
dec
xor
pop
lret
lds
mov
movsb
pop
sub
mov
adc
int
jbe
movsb
adc
int3
push
jecxz
cmp
mov
lods
jmp
lcall
rcrl
pop
add
in
push
pop
push
hlt
and
cmp
shlb
test
xor
xchg
rclb
jge
scas
sub
inc
push
in
push
lret
sbb
lods
repz
add
aam
mov
mov
mov
out
adc
jae
jns
xchg
pop
add
or
jmp
adc
mov
aaa
xlat
jg
mov
xadd
sbb
sub
fsts
cmp
das
stos
dec
jmp
pushl
xchg
mov
outsl
inc
pop
movsl
add
adc
invd
cmpsb
out
xchg
jmp
das
sti
mov
dec
fs
test
push
push
xor
add
movsl
push
sbb
mov
pop
push
adc
sahf
sbb
jge
int
mov
movsb
and
jbe
das
sub
in
adc
scas
jp
cld
mov
mov
out
shlb
mov
jnp
push
in
lock
jno
mov
in
idivb
mov
sbb
out
loopne
jmp
std
adc
adc
jecxz
add
adc
mov
xor
mov
testb
mov
xor
ret
mov
mov
das
push
jmp
inc
fnstsw
xchg
dec
mov
scas
sar
addb
push
and
sahf
mov
or
mov
push
call
sub
sbb
mull
pop
adc
inc
or
push
es
xchg
stos
fmull
outsl
inc
in
add
and
mov
popf
cmpsb
mov
push
inc
daa
push
lret
jl
pop
cmp
sahf
jnp
cmp
dec
pop
scas
sbb
cld
rcr
into
leave
pop
push
adc
dec
mov
inc
cmp
xlat
fadd
iret
mov
out
mov
xor
jno
out
mov
xor
repnz
mov
mov
xor
gs
xor
test
lock
cmpb
push
or
loop
mov
jae
movl
cmp
jae
addl
shrd
shr
ret
sub
mov
andl
xor
movl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
mov
not
movl
movl
jmp
mov
cmpl
jae
push
push
push
call
add
mov
sub
sbb
movzbl
xor
xorl
negl
push
adc
push
movl
cmpl
mov
mov
notl
jmp
mov
cmpl
jne
push
call
sbbl
movzbl
and
mov
and
addl
sbbl
sub
cmpl
notl
movl
movl
jmp
mov
cmpl
jl
push
pushl
pushl
push
pushl
push
push
call
and
inc
sbbl
movzwl
adc
sbbl
orl
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jge
push
push
call
and
mov
mov
sub
and
andl
sbb
mov
and
mov
or
jmp
les
mov
out
bound
jle
xor
mov
mov
movsb
ds
mov
lea
inc
je
mov
es
mov
cwtl
jmp
dec
pop
ret
mov
sbb
flds
loope
jbe
mov
sub
test
lods
mov
fisttpll
and
adc
sar
mov
dec
inc
test
and
ja
rcll
outsl
fs
pop
mov
outsb
cmp
insb
inc
fcoms
or
enter
test
adcl
movsl
sub
cmp
add
adc
xchg
int
dec
sbb
imul
xchg
jmp
or
adc
sarb
sub
cmc
popa
mov
mov
dec
cli
jp
xor
arpl
aaa
push
xchg
outsl
loop
mov
aam
inc
fdivr
add
add
ljmp
mov
xor
pop
out
inc
jle
aas
xor
pop
xchg
cmpsl
sbb
out
loop
xchg
nop
cmp
test
mov
lret
std
pop
inc
cmc
mov
fnsave
mov
lods
or
pop
jg
xchg
bound
fdivrs
loopne
test
call
movsl
jp
bound
cmpsl
stc
loop
shlb
lds
dec
pop
rcrb
call
or
pop
push
test
jnp
dec
test
test
int3
mov
xchg
js
cmp
add
adc
cmp
jl
ds
cmp
xchg
scas
mov
xorl
jp
cmp
mov
mov
nop
dec
les
jl
cmp
add
adc
fnsave
rorb
movsl
mov
fcomps
xor
pushf
pop
xchg
add
mov
clc
pop
push
iret
fcmovb
int3
sbb
jb
jl
cmp
mov
movsl
jmp
pop
lea
inc
mov
lea
imul
loopne
ret
push
sub
je
in
imul
and
nop
shll
dec
cmp
mov
repz
mov
clc
test
inc
cmp
popf
in
sbb
xchg
out
sub
cmp
movsb
lcall
jne
add
push
mov
mov
sahf
adcb
mov
inc
dec
test
xchg
adc
mov
mov
sbb
movl
mov
and
movl
andl
mov
adcl
mov
or
decl
and
mov
mov
sub
imul
sub
mov
xor
or
mov
adc
movl
xor
movl
cmpl
mov
mov
movl
jmp
mov
movl
cmpl
je
push
push
pushl
pushl
push
call
and
sub
mov
mov
adc
sub
sbbl
xor
sbb
movl
mov
sub
mov
sbbl
jmp
jmp
sub
sub
xor
fmuls
test
cmp
mov
or
add
divl
pop
jo
shlb
mov
jmp
push
stc
testl
cmp
loope
or
pusha
or
sbb
mov
xor
adc
das
add
mov
cmp
or
dec
sbbl
jmp
pusha
add
fldcw
xchg
adc
inc
xor
jge
jnp
jl
jp
ret
faddl
into
lods
je
inc
mov
pop
rolb
mov
test
gs
popa
ficompl
pop
test
sbb
mov
xchg
mov
inc
adc
lret
repz
jle
cld
pop
repz
dec
xlat
rorl
xchg
jno
stos
or
int3
dec
aam
fcoml
pop
mov
gs
pop
lahf
das
mov
ret
out
mov
test
pop
or
cmc
sub
dec
in
jbe
xchg
or
or
pop
outsl
std
std
call
icebp
push
test
ror
xchg
call
out
push
xor
adc
adc
out
insb
push
mov
cwtl
shll
test
push
fdivs
push
push
and
imul
mov
mov
cs
cmc
sahf
and
in
mov
jge
pop
push
aas
push
mov
mov
pop
pop
mov
xor
cmpsb
out
add
sub
adc
icebp
or
cmpsb
sbb
loopne
mov
imul
jo
inc
cmp
mov
test
idivb
mov
sbb
lods
sub
bound
icebp
sub
ret
xorb
roll
sbb
mov
leave
add
inc
mov
ret
push
rorl
dec
jecxz
pop
sbb
xor
add
int3
inc
sub
lcall
add
inc
mov
sbb
mov
daa
ljmp
and
sbb
xchg
pop
dec
sub
xchg
test
push
xor
jle
mov
loope
jecxz
shll
movsb
movlps
sub
loopne
test
nop
push
addr16
int
bound
dec
mov
arpl
push
js
popf
cmpsl
leave
push
mov
imul
daa
and
scas
lcall
lahf
fcoml
xor
call
inc
add
add
and
cmpl
movl
movl
movzwl
jmp
movl
mov
cmpl
jg
push
call
add
sub
or
or
xorl
or
movzwl
or
mov
xor
div
mov
xor
sub
mov
div
mov
cmp
je
mov
mov
mov
mov
movzwl
mov
add
mov
and
mov
add
movzwl
push
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
movzwl
jmp
sub
push
adc
insl
inc
xchg
insb
call
mov
clc
dec
fs
ljmp
mov
call
bound
adc
mov
mov
dec
cmp
mov
notb
inc
arpl
fsubr
ss
pop
xor
ja
push
or
icebp
add
test
mov
rorl
cmp
jbe
das
cli
push
mov
cmc
lock
lret
push
mov
into
inc
mov
out
leave
pop
cld
pop
popa
xorl
xchg
sbb
adcb
shrb
inc
sbb
in
inc
sbb
fwait
les
sbb
ror
pop
aaa
push
and
pop
pop
out
xor
push
aad
and
in
push
mov
xchg
shll
sbb
mul
or
push
or
test
mov
cld
xor
loope
les
pop
xor
mov
orl
mov
mov
stc
pop
ljmp
xchg
lcall
dec
stc
xchg
rcr
jne
inc
mov
add
cmpsl
sub
scas
into
mov
pushf
test
push
das
out
jns
sub
jle
loope
imul
sti
out
out
rcll
dec
jns
jae
jne
mov
insl
or
aam
shll
hlt
inc
cmpsb
ja
inc
repnz
push
sbb
pop
aam
fiadds
mov
stos
jno
pop
mov
mov
add
je
sub
cmp
cltd
push
cmp
leave
pop
push
leave
aaa
gs
insl
push
cli
outsb
gs
mov
imul
inc
xchg
ret
push
mov
sbb
data16
or
inc
cwtl
enter
cmc
jb
mov
xchg
dec
lock
insl
inc
in
gs
jle
fs
cld
pop
inc
js
sbb
inc
insb
adc
outsb
xchg
lret
jge
dec
mov
pop
shlb
or
std
inc
pop
and
mov
sbb
jne
sub
push
and
adc
movsl
addr16
pop
cmp
mov
xchg
mov
stos
cmpsl
inc
fidivrl
sti
xchg
rcr
mov
sub
add
xor
out
dec
inc
jo
sub
sbb
dec
dec
aaa
xor
mov
mov
or
cltd
pop
idiv
mov
cmp
jb
movzbl
mov
imul
and
or
mov
mov
cmp
jne
mov
mov
shrd
shr
mov
jmp
in
movsb
push
mov
cmp
sti
sbb
jno
sbb
mov
lock
loop
push
daa
push
and
push
mov
add
lret
mov
mov
gs
addb
pop
cmp
jnp
call
loopne
mov
mov
test
pop
jnp
push
enter
and
inc
mov
orl
and
jns
outsb
inc
out
sbb
repnz
stos
das
popa
add
add
mov
jo
arpl
repz
lock
xor
pop
imull
mov
cmpsb
push
sbb
notl
push
push
push
call
or
test
xlat
shrl
mov
pop
aaa
cmp
mov
out
enter
sbb
sub
enter
scas
xlat
inc
std
jne
dec
daa
mov
orb
js
mov
aam
imul
aad
ja
divl
je
dec
arpl
sbb
and
add
push
jbe
inc
ret
inc
shlb
sbb
mov
and
in
adc
sar
push
push
dec
movsb
rolb
pushf
jmp
or
cmp
in
inc
ja
and
movsl
or
ret
test
mov
push
pop
mov
mov
movsl
inc
icebp
sbb
mov
scas
push
out
jp
pop
add
pop
cmc
in
scas
les
push
aam
mov
xchg
in
popa
cmp
or
movsb
push
xchg
out
iret
sti
cli
jnp
sbb
les
es
popa
mul
addr16
std
mov
imul
mov
notl
push
out
out
aad
xor
sub
fistpl
sbb
lods
lret
sbb
xor
xor
sub
mov
inc
sbb
subl
sbb
cwtl
inc
xchg
aam
jae
sub
mov
cmp
rclb
je
pop
sbb
loopne
jp
leave
sbb
or
dec
ljmp
mov
cmp
mov
push
in
inc
cmpsb
js
test
xchg
mov
gs
rep
dec
mov
mull
push
in
sub
or
adc
adc
movsl
jae
xor
mov
dec
enter
int3
movsl
movsl
stc
jbe
mov
push
fadd
loope
mov
mov
xor
mov
xor
or
mov
mov
mov
shrd
jmp
push
arpl
sbb
cmp
xchg
outsl
or
mov
cmp
pop
popf
cmc
or
mov
push
test
xor
mov
xchg
sub
hlt
cmp
out
fdivrl
aas
or
xor
jae
push
xchg
sbb
jns
push
cli
pusha
push
or
ret
add
xor
jmp
pop
dec
sbb
subb
not
push
fistps
das
ss
cmp
aaa
addb
shl
loopne
push
inc
mov
dec
and
popf
push
flds
mov
pop
sarl
rcrb
sbb
inc
lcall
dec
lret
mov
cltd
mov
push
int
cmpsb
movsb
adc
push
stos
pusha
repnz
popf
into
pop
shlb
mov
push
into
gs
cmp
cmp
lcall
arpl
in
sub
icebp
ljmp
jne
ss
pushf
sbbb
cmpsb
inc
xchg
lcall
mov
stos
subl
aas
xchg
mov
add
ret
add
clc
push
cld
pop
test
movsl
mov
inc
testl
nop
loope
sub
mov
add
xchg
xchg
mov
or
or
out
inc
test
adc
pop
or
mov
in
cmc
sbb
or
jle
sub
xchg
stc
les
add
fcompl
movlps
in
pop
dec
push
pop
inc
faddl
repz
mov
pop
mov
mov
inc
ret
cmp
sub
pop
adc
cwtl
mov
mov
xchg
xor
fs
sahf
fdiv
outsl
jle
mul
pop
adc
insb
fisubl
sti
out
popf
jae
ljmp
mov
mov
push
or
xchg
push
das
testb
aaa
cmp
mov
push
jecxz
sub
pop
jno
mov
ds
testl
pop
mov
jo
arpl
jo
int
dec
cld
clc
clc
push
or
vcvttss2si
test
into
mov
or
out
mov
mov
jge
xor
jno
sbb
jmp
fcmovb
jmp
mov
xor
xor
or
mov
movl
movl
mov
shl
mov
mov
sub
jmp
gs
pop
mov
mov
xchg
inc
into
jno
or
mov
fldenv
xchg
inc
jae
push
dec
lods
das
loopne
shrb
lahf
insb
add
in
pop
int
pcmpeqd
stos
fisubl
outsb
lods
fwait
mov
mov
inc
mov
aad
inc
push
push
out
mov
das
lods
dec
popf
jg
scas
ss
and
cmp
add
fsubr
mov
push
sbb
cmc
mov
and
aas
pop
push
mov
push
call
add
push
sub
rsqrtps
aad
stos
and
call
insl
cmp
dec
in
filds
or
cmp
sbb
or
das
jge
leave
add
call
push
call
lea
divb
lods
cltd
cmp
cmp
mov
inc
mov
inc
loop
mov
inc
push
jle
testl
push
aam
fisttpll
or
jp
mov
xor
pop
xchg
rcl
push
aas
pop
mov
mov
out
mov
loope
call
xor
jns
mov
jl
aaa
mov
lods
cmp
cmp
jbe
pusha
stc
pop
jnp
cmp
pusha
add
pop
jecxz
repz
insl
mov
outsl
mov
rcrl
adc
aas
sub
adc
push
sub
pusha
scas
in
pop
add
jb
dec
xchg
out
int
mov
into
fcmovb
adc
sub
std
push
mov
jae
push
idivl
and
xor
and
mov
lret
inc
mov
sbb
mov
lret
xchg
decl
fbld
push
mov
mov
jb
or
and
loop
cmp
sti
arpl
and
jno
pop
inc
int
jl
test
mov
pop
fisubrs
scas
in
imul
in
jge
jbe
lret
daa
les
lea
or
mov
imul
push
and
jl
cmp
xor
or
jbe
sbb
pop
sarb
and
add
scas
adc
into
insl
addr16
dec
aaa
ror
sbb
les
ljmp
xor
and
pushf
js
lea
sbb
push
fs
cmp
add
addr16
jno
mov
xor
neg
push
lock
nop
stc
jae
lods
xor
jmp
lock
mov
cmc
jp
add
add
mov
push
sbb
push
push
call
mov
mov
jmp
hlt
mov
jae
ja
mov
hlt
sbb
mov
cmp
sti
or
int3
stos
imul
fiaddl
frstor
mov
mov
sbb
movsl
fldl
testb
repnz
mov
mov
or
xor
inc
xor
leave
lret
xor
out
cld
push
jb
addr16
loope
xchg
cmp
mov
call
push
sbb
xchg
push
jne
sarb
std
mov
les
inc
xchg
fistl
insb
adc
jp
iret
andb
push
xor
mov
out
pop
or
ljmp
loope
loopne
push
mov
and
jne
cmp
loope
xchg
je
cwtl
jg
ljmp
mov
cltd
ret
insl
hlt
or
loop
fdivrs
popf
in
mov
je,pt
test
loope
push
pop
cmp
jg
add
insl
rorb
ljmp
push
pop
movsb
cmpsb
xor
lahf
mov
shrl
pop
pop
push
and
and
inc
add
mov
pop
ds
sbb
mov
push
push
aas
and
sbb
imul
stc
adc
fwait
test
das
dec
arpl
sub
pop
cs
adc
push
push
xchg
addl
or
outsl
aam
adc
cmp
add
punpcklwd
pop
mov
pop
push
push
test
push
in
xor
scas
test
jb
mov
sbb
jp
xchg
cmp
add
and
mov
sbb
aam
inc
ss
push
out
mov
frstpm(287
sbb
jne
push
pushf
andl
or
sub
cmc
jbe
push
xor
insb
cltd
push
inc
mov
inc
pop
mov
mov
test
call
inc
in
jmp
jno
push
js
test
sub
push
roll
jmp
pop
cmp
mov
in
cmp
add
inc
stos
outsb
sbb
push
mov
pop
jge
xchg
in
and
lret
xchg
xchg
sub
mov
sbb
xchg
cs
lret
mov
in
push
and
ret
clc
sub
mov
dec
gs
jg
loopne
stos
in
rcll
idivb
xlat
adc
push
and
rcl
jne
xlat
or
sbb
jb
sbb
cmp
add
cmp
add
repnz
push
push
call
mov
mov
movl
movl
movl
movl
mov
mov
push
add
push
adc
push
push
call
mov
mov
and
and
mov
mov
and
mov
and
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
shl
or
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
sub
xor
add
add
or
push
add
push
movl
movl
movl
movl
mov
mov
mov
xor
and
or
mov
sub
mov
lea
xor
mov
div
mov
mov
push
imul
imul
xor
jmp
lock
lds
dec
sub
xor
pop
mov
mov
jbe
scas
xchg
xchg
cmp
jl
sbb
mov
dec
std
xchg
dec
sysexit
cmc
inc
arpl
mov
andb
iret
inc
in
test
dec
push
mov
and
mov
mov
jmp
aad
sbb
mov
xchg
movsl
mov
xchg
adc
sbb
or
cmc
cmpsl
cmp
into
aad
inc
adc
cmpsb
add
ss
pop
sti
cmp
dec
cmpsl
mov
and
sbb
dec
pop
cwtl
sub
insb
cmp
push
loopne
lea
sub
and
or
mov
jge
repz
or
sbb
punpckhbw
fcompl
call
mov
fnstsw
out
dec
scas
inc
in
jnp
sbb
rolb
sub
xchg
dec
inc
mov
ds
or
push
mov
in
xlat
mov
enter
aaa
repnz
dec
lcall
movsb
xor
paddsw
scas
adc
shlb
push
repz
into
push
imul
fxch
minps
jle
xchg
cmp
dec
in
ficomps
sbb
sbb
add
adc
xchg
repnz
xchg
pop
xchg
or
fmuls
mov
push
ficoms
cs
jp
outsb
inc
mov
fst
sbb
outsb
lock
jnp
mov
add
push
pop
cmp
loop
xchg
pop
xchg
ds
mov
imul
push
or
jmp
in
aam
sub
mov
lock
pop
adc
xchg
sahf
movsl
jge
dec
pusha
sti
outsb
mov
or
xchg
cli
loopne
fwait
adc
inc
sbb
fs
xchg
xchg
dec
add
aas
xlat
ljmp
lock
sbb
xlat
add
push
mov
adc
dec
loop
and
mov
mov
cs
loopne
mov
daa
cs
insl
add
pop
xor
pop
into
iret
sub
mov
insl
test
inc
cmp
mov
sbb
insb
dec
mov
fwait
popa
push
lahf
mov
imul
loop
cmp
cmp
dec
std
cmp
bound
xor
test
ss
mov
sbb
jb
aaa
daa
icebp
pusha
ljmp
xor
push
inc
mov
push
jg
fs
lds
imul
xor
pop
icebp
mov
and
ds
inc
mov
mov
xor
xchg
imul
xor
or
add
stos
or
push
dec
xlat
loope
dec
cmp
in
inc
iret
shll
out
or
mov
ss
popa
xchg
mov
and
mov
sub
mov
mov
mov
mov
imul
and
xor
add
xor
add
mov
xor
xor
pop
jmp
ja
scas
test
fldenv
imul
inc
sti
fs
mov
lods
fs
loop
out
dec
rcrl
adc
repnz
imul
lret
pusha
cmp
clc
aam
adc
shr
jbe
enter
movsl
cmp
imul
sub
jns
hlt
dec
and
in
sbb
mov
fcomps
jge
push
mov
inc
enter
ret
inc
popa
add
nop
in
mov
pop
pop
push
rcll
mov
sbb
ljmp
cmpsb
sub
leave
or
jmp
stos
jno
lds
lret
lret
repnz
ljmp
divl
xchg
add
or
nop
pushf
into
imul
or
jge
jle
mov
fdivrp
inc
scas
mov
sbb
mov
lahf
pop
iret
dec
xchg
cmp
out
push
in
inc
mov
shlb
outsb
sahf
xor
jo
pusha
insl
or
mov
add
fisttps
adc
mov
nop
rorl
frstor
in
loopne
sbb
enter
out
pop
sub
push
mov
jno
mov
leave
iret
fcoms
sub
jge
outsb
inc
cmpsl
inc
gs
sub
add
fnstcw
and
adcb
stos
mov
xchg
or
fcmovnbe
repnz
inc
pop
dec
iret
push
rcrl
roll
xchg
inc
adc
push
jnp
lock
pop
mov
and
jg
movsb
lret
movsl
das
stc
outsl
cmp
fadds
dec
mov
sbb
inc
and
or
shll
mov
xor
mov
test
xchg
and
icebp
test
mov
jbe
out
daa
aad
filds
add
addl
add
sbb
add
lds
and
jns
imul
stos
fs
out
mov
cmp
mov
test
mov
fucomi
hlt
leave
outsl
adc
ds
clc
push
add
ret
dec
ljmp
popf
repz
xchg
and
pop
das
fsubs
add
imul
mov
xchg
fwait
sbb
push
dec
dec
je
xor
jne
cmc
xor
dec
inc
fcomi
pop
hlt
adc
jns
scas
xchg
inc
leave
add
rolb
mov
jmp
sub
orl
mov
ja
and
rolb
out
jns
int3
sub
addb
pop
sbb
stc
xchg
sti
mov
push
in
inc
out
pusha
xchg
cwtl
pop
outsb
out
mov
aaa
cmc
jb
lret
in
sub
pop
fimull
rorb
mov
xchg
enter
mov
cmp
and
insl
out
and
ljmp
xchg
pop
jl
loopne
mov
dec
or
mov
shr
imul
sub
xor
cmp
jb
movl
movl
movl
movl
movl
mov
mov
or
mov
or
mov
sub
mov
add
or
mov
mov
add
and
xor
div
mov
xor
xor
or
xor
cmp
jae
push
movl
xor
movl
movl
movl
mov
mov
div
mov
mov
mov
sub
add
imul
xor
jmp
jmp
fdivr
stc
stc
jmp
mov
cmp
mov
mov
shld
ret
and
dec
enter
sbb
xchg
push
test
mov
jae
cld
xchg
outsb
xchg
dec
fidivl
adc
icebp
sub
mov
pop
and
test
shll
or
add
insl
fucom
loop
cmp
xchg
mov
stc
clc
cwtl
mov
daa
outsl
xor
lds
mov
sub
jp
loopne
push
pop
test
lret
and
arpl
push
jb
movsb
mov
enter
jle
aaa
xchg
data16
in
push
jmp
repz
and
adc
outsb
jg
or
push
es
sbb
cli
fwait
cltd
clc
push
dec
notl
adc
mov
or
push
jns
xchg
popf
jb
in
outsl
push
sbb
testl
inc
pop
cmp
popa
movsb
cmpsl
das
xchg
fsubrs
pop
lods
jo
ja
bound
loop
sahf
jbe
sub
pushf
mov
push
ja
cld
lahf
xchg
inc
insl
xor
aam
xchg
add
mov
sbb
cmp
or
cmp
or
xor
imul
je
fcmovne
cmp
out
aam
in
pop
or
mov
loop
pusha
push
psllq
mov
lret
sbb
cmc
leave
adc
mov
roll
mov
pop
mov
lret
jl
gs
iret
punpcklwd
mov
inc
xchg
sub
or
mov
data16
jmp
push
stos
pop
outsl
outsl
rcrb
pop
push
in
pop
dec
inc
ret
mov
dec
xlat
scas
mov
xchg
jg
sti
mov
cmp
xchg
sbb
loop
aad
pop
pushl
jge
ret
nop
push
and
add
in
rorl
and
mov
idivl
lahf
gs
adc
pop
cmp
push
sub
dec
sub
cwtl
jp
dec
je
ret
or
ljmp
and
xchg
arpl
jg
stc
xchg
jl
outsb
sbb
dec
pop
jle
enter
in
sub
sbbl
push
das
rcrb
push
cli
lret
xorb
dec
cmpsl
mov
bnd
pop
or
clc
inc
ja
xor
dec
lahf
adc
and
fdivs
jbe
jp
dec
mov
sahf
inc
icebp
lcall
test
mov
mov
repnz
inc
aas
dec
stos
or
adc
or
and
test
je
push
aaa
xor
addr16
fwait
ss
lahf
push
or
xchg
mov
add
sub
imul
jbe
push
xchg
mov
mov
test
and
push
mov
roll
ljmp
xor
or
pop
bound
mov
add
gs
div
xor
mov
xor
sub
mov
div
mov
xor
div
mov
imul
mov
mov
sub
mov
mov
mov
mov
mov
jmp
jl
cli
cmp
inc
add
inc
jo
mov
icebp
add
inc
add
lea
cli
data16
test
and
jo
cltd
push
add
xchg
jb
scas
pop
movsb
cld
pop
daa
adc
jns
loop
add
adc
pop
fidivrl
inc
std
arpl
push
inc
and
adc
mov
out
ds
pop
push
adc
cld
or
dec
xchg
xchg
in
jbe
inc
xchg
outsb
cmp
subb
cmpsb
loop
jg
iret
xchg
scas
fwait
dec
push
sbb
repz
push
aas
mov
mov
gs
xchg
pop
sbb
cmc
in
rolb
xor
in
and
js
push
mov
and
nop
xchg
xorb
pop
xchg
pand
js
adc
mov
lods
gs
fcompl
mov
xor
add
jp
cmpsl
xchg
adc
loop
fimull
push
or
lahf
mov
pop
rol
jp
sbb
jns
dec
cli
or
pop
adc
in
dec
ja
or
push
xchg
ror
aas
sbb
cmpsl
xchg
int3
loope
shll
cld
mov
inc
nop
mov
jecxz
lock
pop
cmp
cmpsl
pop
pop
sbb
sub
or
adc
inc
xor
cmpsl
cmpsl
les
in
adc
stos
sub
jnp
mov
push
sbb
aad
dec
sbb
test
add
sub
push
push
outsl
leave
ficoms
xchg
decl
jb
xchg
inc
and
xor
xchg
aam
push
sahf
hlt
mov
mov
bound
xor
insl
fldcw
icebp
in
jle
sbb
inc
es
fbstp
in
loop
xor
or
aaa
sub
scas
ss
dec
pop
add
dec
hlt
sub
jmp
addb
ljmp
pop
subl
fcompl
gs
cltd
fucomi
out
sbbb
mov
je
xchg
lahf
hlt
call
arpl
push
rclb
jp
cmp
mov
adc
leave
mov
cmp
insb
xlat
cmpsb
movsb
cmp
insb
dec
add
push
enter
xchg
inc
rol
nop
shrb
inc
testl
jno
adc
push
cltd
pop
shll
roll
loop
xchg
cwtl
push
xchg
xchg
call
fdivrs
je
mov
cltd
movsb
test
push
xchg
daa
dec
push
push
loop
std
shll
mov
out
and
mov
pop
fwait
or
fwait
mov
rcrb
sbbl
xor
add
add
std
je
or
cmp
jb
bound
out
jmp
adc
in
sub
cli
cld
sbb
mulb
clc
push
or
test
and
mov
xor
imul
mov
jmp
add
mov
mov
das
push
fdivrs
jno
mov
mov
mov
adc
lods
inc
ds
pop
hlt
addb
jl
test
scas
arpl
sub
adcb
movsb
pushf
cmpsl
xchg
sub
scas
jo
int3
adc
pushf
mov
sub
ret
xor
jae
xor
xchg
xchg
test
testb
add
shll
out
xor
aam
cs
aad
jle
rclb
jbe
inc
nop
scas
push
es
add
adc
fisubrs
fs
repz
les
sahf
mov
mov
ljmp
sub
fidivrl
mov
xrelease
xchg
scas
push
sub
scas
roll
mov
fstpl
xchg
add
in
sub
icebp
data16
jmp
sbb
pop
lret
inc
ret
push
loop
lods
mov
fsubrs
xchg
add
add
mov
test
gs
inc
push
fisttpl
adc
push
dec
jg
dec
cld
push
out
lea
adc
push
fdivrl
sub
xor
stos
popf
jno
out
lods
add
popf
rcll
in
sti
outsl
enter
push
imul
xchg
ss
xchg
xchg
mov
out
push
xor
pop
lock
and
pop
xor
in
push
or
jmp
js
and
lds
or
jge
popa
cmpsl
add
les
insb
imul
mov
leave
add
mov
add
push
fcomip
sbbb
or
pop
xchg
lods
out
pop
mov
gs
sar
andb
cmp
movsl
insl
push
data16
aam
scas
jp
sti
dec
mov
sbb
cmp
push
es
movsb
cltd
cmp
das
cmp
cmc
add
jno
mov
and
lock
cwtl
js
xlat
shlb
xchg
cmp
daa
adc
ja
mov
jbe
lahf
push
or
adc
cmp
ror
cmp
lahf
pop
scas
decb
leave
sysexit
and
dec
daa
mov
sub
jo
sub
insb
ret
jns
cmpsb
cmp
sub
inc
xor
sub
dec
sti
fdivrs
xlat
mov
rclb
jecxz
pusha
in
fst
jmp
or
inc
aas
ja
std
iret
je
mov
dec
pop
fistpll
xor
in
scas
sbb
cmp
xchg
sbb
sub
push
std
adc
movsb
in
xchg
jb
mov
rorl
jbe
mov
xchg
leave
push
xchg
mov
loop
cmp
movsb
aad
mov
mov
dec
je
pop
pop
sub
adc
mov
or
js,pn
jbe
jnp
xchg
std
loope
or
outsl
inc
leave
ljmp
inc
and
mov
xor
fcomps
and
push
hlt
fidivs
int3
cmp
iret
mov
jbe
pop
in
sub
add
mov
mov
add
and
xor
div
xor
or
xor
cmp
jb
pop
movl
jmp
and
subb
mov
enter
sar
xchg
jl
mov
sbb
cli
add
cmp
inc
pop
jle
fmuls
das
test
ljmp
sbb
mov
pop
nop
jl
mov
jmp
pop
fiadds
addr16
cmp
xchg
enter
push
push
cmpsl
insb
pop
mov
out
xchg
pop
mov
stos
cmp
test
pop
fiadds
ljmp
fwait
xor
mov
idiv
std
jge
pop
scas
ljmp
popa
repz
pop
mov
sub
inc
scas
orl
mov
mov
or
test
in
add
jp
mov
pop
jbe
or
fistps
jno
add
push
leave
clc
call
lcall
sbb
or
test
mov
and
dec
push
mov
add
dec
rol
push
lods
mov
js
les
pop
lret
inc
dec
popf
cmp
mov
out
mov
xchg
sub
std
dec
cmp
mov
xchg
aas
iret
fbstp
mov
lahf
mov
xchg
xlat
inc
mov
push
jbe
aaa
cld
push
insl
out
lods
mov
inc
aam
or
xchg
and
testb
and
imul
rclb
mov
sti
pop
repz
aas
popa
mov
jae
or
sub
pop
mov
inc
repnz
loopw
or
daa
mov
cld
sub
in
mov
fildl
mov
inc
push
pop
or
push
icebp
push
fcoms
data16
mov
dec
jg
into
xlat
jns
or
es
fdivrs
xor
or
mov
or
add
mov
sar
jle
lea
jnp
lcall
dec
and
xor
xchg
cmp
mov
shll
pop
movsl
hlt
aam
sbb
jmp
aam
xchg
mulb
jp,pt
subb
push
jns
movsl
mov
arpl
test
data16
mov
fcoml
enter
pop
push
int3
mull
jbe
mov
cltd
lret
xchg
jne
xchg
or
scas
adc
fistps
dec
jbe
sbb
mov
cld
inc
jb
call
daa
or
out
jo
testb
add
mov
lds
faddl
xor
sub
shl
rcrl
int3
hlt
sbbl
sub
cltd
test
dec
inc
adc
ret
scas
cmp
jmp
pushf
sbb
push
inc
or
inc
mov
add
loop
in
dec
mov
ljmp
shrb
sub
push
dec
aad
dec
mov
outsb
out
adc
xchg
push
rcrb
js
mov
stc
daa
dec
push
xor
sub
mov
and
pop
movl
mov
mov
or
mov
or
add
mov
or
mov
xor
xor
movl
mov
mov
or
imul
mov
mov
imul
xor
xor
or
xor
mov
sub
mov
jmp
mov
sub
sub
scas
out
cmp
repz
sti
mov
lds
or
add
insl
addb
testl
dec
stos
fistl
sub
js
sub
mov
sti
xchg
add
loopne
xchg
adc
fadd
test
push
daa
icebp
roll
jns
into
mov
out
lods
inc
add
je
mov
pushl
movsb
push
xchg
stc
pop
add
jae
add
sub
dec
jne
jno
pop
mov
fsub
jae
cmpsl
adc
jbe
jecxz
imul
sub
xor
add
push
jmp
out
mov
int3
jnp,pt
sbb
pop
flds
sub
xchg
int
xlat
subb
icebp
fs
jbe
mov
inc
shl
imul
mov
sti
pop
in
inc
stc
int
mov
fiaddl
enter
inc
push
popf
gs
mov
push
cmp
dec
jp
xor
test
mov
lahf
xor
fiadds
out
add
ds
loope
lods
ret
push
add
mov
xor
mov
out
call
sbb
stos
ss
inc
mov
inc
enter
pop
cli
xor
push
sub
sub
lahf
mov
lock
mov
les
cmpsl
or
jmp
lock
fdivp
mov
xchg
jb
mov
mov
and
push
xchg
data16
sbb
fidivrl
jmp
fs
cld
or
je
aam
push
inc
cmp
mov
jecxz
shr
sahf
sub
jp
dec
lods
rclb
or
imul
inc
xor
mov
int3
test
mov
push
sti
dec
add
mov
in
pcmpgtb
insl
mov
and
iret
lret
in
push
and
or
mov
add
jg
lret
xor
bound
in
outsl
pop
sub
lret
clc
inc
sarl
mov
in
in
in
xor
cli
and
xor
pop
pop
sub
enter
xchg
scas
call
mov
popf
inc
das
mov
push
insl
xor
insl
pand
mov
cs
int3
push
and
jmp
lret
mov
inc
lret
shr
outsb
or
inc
test
xchg
lret
pop
pop
test
push
adc
dec
lock
adc
jmp
pop
enter
push
pusha
inc
dec
popf
jnp
xor
sti
sbb
cs
jmp
ljmp
cmp
orl
and
dec
movups
dec
adcb
dec
jge
in
test
sbb
addr16
cs
xor
sti
mov
test
test
xchg
inc
testb
inc
xor
test
adc
and
mov
mov
mov
xor
sub
mov
mov
mov
mov
mov
imul
and
mov
sub
lea
mov
jmp
fnstenv
subb
dec
sbb
lahf
push
adc
filds
mov
cmp
adc
xor
mov
insb
push
xchg
cmp
movsb
gs
sub
adc
mov
fstl
mov
jl
xchg
dec
repz
insb
adcl
pop
adcb
mov
movsb
mov
jb
mov
call
jns
inc
inc
push
sub
cmp
jle
add
xor
stos
jno
push
mov
lahf
sub
das
xor
dec
gs
push
dec
cli
cwtl
mov
mov
mov
cmp
nop
aaa
cmp
add
stos
pop
mov
dec
negb
mov
jb
mov
xor
jmp
popf
inc
fldl
mov
test
scas
sub
jmp
aas
inc
mov
xlat
mov
cwtl
xchg
sahf
cwtl
mov
nop
movsl
inc
jg
cld
popf
ret
mov
faddp
sbb
ret
bound
and
in
add
arpl
lahf
mov
xchg
jbe
push
iret
jbe
xchg
push
pop
fmull
out
mov
inc
daa
ja
fists
ljmp
mull
add
cmovg
insb
xor
xor
lahf
addr16
mov
xchg
mov
lret
push
stc
push
test
mov
cltd
xor
mov
fidivs
push
mov
xchg
out
push
inc
adcb
imul
pop
imul
push
pop
mov
dec
pushf
xchg
and
push
push
jmp
call
sbb
ja
mov
jecxz
ret
int3
popf
in
test
adc
inc
mov
js
pop
idivl
pmaddwd
or
sub
xlat
adc
jne
popa
notl
ret
shll
out
popl
loopne
push
fisttpl
outsb
cmpsl
mov
hlt
lret
sbb
adc
in
pop
adc
jecxz
in
pop
mov
int3
or
adc
push
mov
std
inc
inc
jo
imul
mov
or
mov
add
mov
or
fisttpll
and
leave
fstps
fimuls
lret
mov
xor
rdpmc
push
cmp
sbb
stc
xlat
mov
mov
stc
xor
cwtl
lret
mov
inc
push
mov
xchg
jbe
shlb
cwtl
fimull
shll
xchg
mov
lcall
rcll
pop
xlat
ljmp
orb
es
jl
sbb
loopne
pusha
ljmp
mov
outsb
sbb
lahf
pop
dec
mov
call
inc
push
pop
xchg
add
ljmp
cmp
push
sub
in
jo
pushf
test
fistl
popf
and
pop
push
xchg
cmp
aas
xlat
sbbb
insl
and
xor
sub
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
and
or
mov
mov
or
imul
imul
mov
lea
mov
movl
mov
mov
shr
and
mov
and
xor
div
mov
xor
xor
lea
mov
movl
mov
mov
jmp
movsl
jmp
add
jl
scas
cmp
mov
mov
into
cmp
mov
cld
sbb
fisttps
xchg
jnp
cmp
add
into
ret
and
test
data16
xor
or
mov
adc
jmp
mov
sbb
jle
enter
mov
cmp
sti
mov
sbb
rcrl
and
pop
jnp
or
popa
out
outsl
dec
bound
mov
jmp
mov
cmp
add
jge
mov
loopne
out
sub
adc
mov
or
pop
adc
inc
jmp
test
aad
xchg
in
repz
aam
mov
adc
push
enter
imul
lods
inc
inc
sarl
mov
pop
adc
dec
roll
pop
inc
sub
int
orb
dec
sub
es
in
out
mov
dec
pop
js
pop
lea
aad
mov
dec
into
stos
xor
inc
or
scas
ret
sbb
popa
daa
sub
das
xchg
jl
movsl
stos
xor
sbb
inc
shr
addr16
mov
popf
cmc
adc
cmpsb
push
test
mov
xorb
inc
aad
stc
dec
insl
adc
leave
outsl
or
inc
inc
dec
ljmp
add
xchg
and
cwtl
scas
sub
std
sub
mov
pop
popf
lahf
mov
xchg
cltd
jno
in
pop
mov
mov
pop
xchg
mov
jl
outsb
dec
push
das
add
cmp
inc
lret
push
loop
xor
loop
int3
repnz
cmpb
add
notb
call
sti
outsb
add
fsubrs
orb
sbb
out
sbb
xor
out
scas
cmpsl
sbb
cmp
test
pop
add
push
aaa
call
xchg
fyl2xp1
addr16
sbb
mov
jno
decl
shrb
push
jnp
cmp
out
ljmp
addr16
pop
or
test
imul
push
push
outsb
add
cmp
into
imul
mov
jae
and
pop
lea
sub
pop
mov
shrl
mov
jb
dec
mov
push
mov
cli
adc
movsl
mov
rcr
push
lods
lret
test
mov
and
or
sar
push
test
xchg
jbe
ljmp
arpl
imul
fst
mov
ret
cmp
pandn
inc
or
aaa
cmp
sbb
pop
or
aas
jg
testl
add
stc
lcall
cmp
inc
fs
and
jge
jno
andb
xchg
inc
cmp
jle
cwtl
lahf
int
cmp
and
mov
xchg
pop
fstps
rclb
enter
cmp
sarl
dec
push
cmp
loop
loope
pop
scas
mov
shll
sbb
icebp
dec
hlt
iret
jb
xchg
sub
push
adcl
mov
push
xlat
out
jge
push
push
jns
xchg
popa
mov
xor
mov
cwtl
lahf
pop
mov
ficomps
addr16
jge
xor
add
xchg
push
insb
mov
cmp
enter
inc
add
rorl
add
and
sub
mov
mov
mov
xor
shr
and
add
mov
mov
mov
imul
mov
sub
and
imul
and
sub
mov
movl
movl
jmp
jne
arpl
ja
jge
in
daa
cmc
cmp
xchg
mov
mov
jg
inc
fcompl
shrb
push
pop
shlb
mov
mov
push
pop
out
aam
int3
mov
cmc
jmp
adc
push
imul
sahf
dec
mov
bnd
push
add
aaa
aas
dec
popa
push
jno
ror
mov
mov
sbb
repz
ret
dec
cmpsl
mov
jo
jl
jge
push
ss
mov
imul
mov
fildl
push
sbb
je
push
rorl
and
lock
jno
adc
xor
movsl
scas
in
mov
ja
sub
jnp
mov
ljmp
andb
out
insl
mov
or
push
subb
int
sbb
or
dec
fwait
ljmp
sub
pop
dec
jb
push
es
cmpsb
ret
dec
xchg
in
and
lods
mov
mov
stos
call
dec
add
sub
jbe
lret
out
pop
xchg
mov
orl
int
pop
test
movb
inc
pusha
xorb
mov
mov
cld
out
shll
pop
ffreep
int
int
push
mov
dec
push
pop
cli
mov
rorb
push
repnz
adcl
mov
cli
ljmp
sbb
inc
decl
repz
test
lea
in
or
popa
jmp
pop
push
stc
fs
pop
dec
and
lcall
iret
mov
sbb
in
nop
out
movsl
add
pop
mov
daa
push
jne
pop
ret
sub
mov
iretw
add
pop
jmp
mov
pushf
cmpsb
lahf
xor
test
js
push
cmp
lcall
mov
sbb
imul
ja
push
jle
fsubrp
mov
pushf
shll
cmc
add
adc
jge
xchg
pop
sarl
pop
cmp
adc
fcoms
sbb
adc
jl
lahf
addl
cmp
cmp
out
stos
jg
pop
pop
nop
cmc
repz
sub
sbb
adcb
mov
xor
jge
jmp
repz
inc
jmp
jp
shlb
lret
jae
lods
in
jg
es
subl
sti
mov
jmp
mov
jno
sub
rep
inc
xchg
sub
in
mov
decl
push
cmp
cli
enter
add
call
jo
xchg
add
fsubrs
add
dec
std
xor
shll
sub
cmpl
je
test
or
mov
mov
test
add
or
add
repz
std
nop
adc
mov
or
mov
xchg
mov
pop
sbb
cmp
xchg
inc
inc
push
aad
fwait
mov
out
xor
lock
iret
mov
jo
loopne
jne
addb
mov
and
mov
or
and
mov
sub
mov
sub
mov
sub
mov
movl
mov
jmp
push
jnp
cmpsl
addr16
stos
loopne
shrb
inc
jno
pushf
mov
mov
fistps
movsb
loope
and
addr16
sbb
test
sbb
fidivs
adc
out
or
stc
stc
mov
push
fs
dec
pop
sti
mov
mov
fstps
dec
push
sub
pop
cmp
cmp
xor
clc
fildll
inc
jecxz
das
dec
imul
addr16
stos
popf
cmp
sbb
xor
icebp
xchg
pop
mov
js
mov
pop
test
cmp
mov
push
lret
shll
inc
adc
lock
add
js
lds
sub
pop
int
jge
sbb
test
inc
aad
sbb
add
add
pop
call
int
jbe
iret
push
daa
imulb
nop
ja
outsl
jp
xchg
jnp
and
pusha
je
pop
or
inc
mov
dec
loop
lcall
sub
outsl
xor
icebp
mov
jp
out
cmp
daa
pop
mov
movsb
sahf
pop
push
shll
mov
or
int
ret
out
or
dec
imul
pop
push
int3
xor
xor
insl
dec
or
negl
es
int
sbb
xor
lret
pop
leave
mov
push
aam
sub
jns
stos
dec
sub
inc
cld
mov
lods
adc
adc
pop
aam
sbb
inc
stos
lret
sbb
mov
or
cmp
call
push
nop
ret
lcall
gs
popf
cmpsb
movsb
jecxz
fistpl
add
hlt
lock
aas
sbb
adc
mov
iret
pop
adc
and
pop
jl
push
out
adc
fs
adc
adc
mov
push
arpl
cmc
cmpsb
inc
adc
mov
ljmp
cli
mov
sar
ja
in
add
lret
jns
iret
xchg
or
fcmovnu
test
or
add
sarl
mov
les
aad
out
test
in
popa
in
cmp
mov
imul
cmp
sub
pop
xor
push
adc
cmp
jle
lret
or
cmp
add
inc
pop
aaa
orl
pop
jb
mov
dec
mov
pop
xor
movsl
in
lret
fnstenv
pop
add
xor
dec
fdivrl
lock
push
and
sub
loope
inc
dec
jb
push
jae
sbb
movsl
pslld
inc
jle
test
add
loop,pn
xchg
or
pop
cmp
ss
dec
pop
dec
out
inc
mov
lahf
and
imul
and
mov
lahf
push
push
adc
cmpsl
push
mov
or
mov
push
leave
dec
xor
push
inc
call
adc
sarb
jbe
mov
adc
das
bound
jbe
fnsave
sub
jge
sbb
lret
aad
cmpsl
insl
pop
js
xchg
push
insl
insb
xor
daa
mov
dec
mov
cld
mov
cmpsb
jecxz
jg
mov
jb
pop
clc
lods
mov
stos
mov
or
add
div
mov
sub
mov
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
push
add
push
adc
push
push
call
push
jmp
mov
mov
outsl
pop
or
outsl
or
mov
mov
cmp
push
fsubrs
into
mov
insl
pushf
dec
lea
mov
xchg
inc
sbb
mov
pop
lahf
cmpsl
push
movsb
xor
sub
mov
hlt
jb
arpl
shll
sub
xor
mov
xchg
aam
leave
pop
dec
js
jne
adc
rorl
sbb
out
pop
dec
fdivrl
xor
pop
xor
imul
imul
mov
aad
push
push
inc
sti
sbb
adc
shrl
rdtsc
inc
fs
cmp
jo
add
jbe
je
xchg
outsb
mov
adc
mov
or
mov
push
test
add
inc
push
jo
jl
ret
jb
arpl
push
clc
neg
imull
in
cs
or
adc
jge
sub
popa
cld
sahf
jl
cs
cli
jle
pop
mov
cld
lcall
sahf
inc
and
loopne
or
lahf
xchg
sub
aam
or
push
test
jecxz
roll
cmc
jle
xchg
testb
cmpsb
pop
lret
or
push
shl
mov
adc
pop
sbb
outsb
mov
mov
xor
lcall
cmp
and
inc
sub
add
lret
iret
movsb
sbb
call
sub
add
enter
adc
add
xchg
pop
bnd
push
mov
je
and
rorb
aad
fdivs
dec
cmc
aaa
cmpsb
aaa
jne
pusha
push
pop
add
pop
push
test
subl
mov
aaa
cmp
pusha
xchg
push
push
mov
dec
dec
fneni(8087
push
out
xor
cmpsb
mov
mov
jnp
addr16
push
add
pop
xor
scas
popa
mov
ljmp
sub
mov
xchg
push
pop
test
pop
xor
addr16
es
sub
pop
cmp
mov
fs
cmpsl
push
jecxz
lods
inc
hlt
mov
cmp
outsb
adc
bound
or
inc
push
sbb
out
sub
xor
das
jbe
xchg
jp
dec
rcrl
inc
and
and
or
and
mov
cmp
sub
fcompl
xor
xchg
stos
cmc
popf
lahf
movsl
inc
mov
adc
jmp
aam
leave
subb
rcl
push
dec
repz
jnp
add
in
adc
imul
pop
lods
mov
ds
into
lret
pop
maxps
jb
repz
or
bound
testl
les
cli
inc
es
cmp
mov
lds
into
insb
das
xchg
push
cmp
inc
dec
js
mov
cli
daa
push
cmp
out
or
xor
and
mov
mov
cld
inc
subb
popa
lahf
xchg
out
lahf
xlat
mov
daa
mov
mul
fmuls
dec
leave
sub
mov
dec
jae
call
rcrb
arpl
repz
loop
shl
mov
xor
and
push
adc
push
push
call
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
xor
div
mov
mov
push
pop
add
and
xor
xor
or
mov
mov
imul
mov
imul
mov
or
xor
div
add
mov
mov
imul
mov
add
xor
mov
xor
lea
push
mov
mov
or
add
push
mov
xor
mov
or
xor
mov
mov
or
xor
add
push
mov
or
lea
call
mov
xor
sub
cmp
jne
mov
mov
or
mov
mov
or
mov
or
lea
lea
push
mov
or
imul
mov
xor
sub
push
add
jmp
dec
xchg
cmp
mov
pop
inc
lods
js
add
lds
or
sub
insl
popf
mov
in
rclb
ds
data16
repz
jmp
xchg
ss
scas
mov
idivl
xor
cmp
fistpll
js
xchg
insl
cmpsb
or
addr16
push
mov
pop
mov
jae
aas
sub
loopne
adc
es
decl
push
loope
jno
pushf
cmp
push
mov
jecxz
pop
lret
jne
mov
mov
mov
shrl
push
push
lods
mov
add
mov
xor
xor
sbb
xchg
sbb
enter
xor
mov
xchg
or
in
mov
fmuls
int3
mov
hlt
push
in
add
pusha
sbb
mov
pop
dec
or
mov
sbb
pop
pop
je
adc
jle
xrstor
mov
lahf
test
sub
movsl
adc
ljmp
mov
jle
push
jg
dec
xchg
je
test
arpl
mov
lahf
addr16
mov
movups
xlat
clc
xor
pop
push
ljmp
xchg
in
cmpsb
stos
mov
sub
mov
lret
mov
dec
inc
mov
mov
mov
xchg
xchg
mov
mov
adc
ja
push
in
mov
dec
shr
xor
std
or
xor
push
mov
cld
inc
inc
or
sub
or
mov
repnz
ja
cld
ret
repz
cmp
push
xor
cmp
sub
or
in
sub
out
mov
js
addb
scas
and
xchg
loop
mov
test
movsb
pop
mov
incb
repnz
scas
testl
cmc
sub
push
push
pop
fidivrs
jne
stc
ret
dec
push
xor
shll
movsb
push
pop
repz
jg
and
push
dec
jle
mov
jnp
and
push
xor
decl
test
fnstenv
pop
in
push
test
cmp
popf
ret
iret
fs
cmpsb
imul
adc
mov
lds
enter
inc
cld
pop
mov
pop
cwtl
jl
xor
in
fdivl
jmp
inc
pop
and
scas
add
enter
xchg
jge
inc
fwait
shlb
hlt
in
mov
pop
mov
repz
scas
loope
cwtl
addr16
notl
popa
jne
hlt
xchg
sub
mov
and
mov
out
xchg
movsb
cmpsb
adc
arpl
in
sub
adc
mov
push
js
lods
rol
jbe
dec
add
fldl
mov
xor
push
cmpsl
jle
ja
in
inc
xor
shlb
loope
mov
cmp
and
orb
pop
cmc
adc
xchg
xor
mov
popf
xor
shrb
push
xor
in
and
int
out
shlb
adc
repnz
jbe
xor
jl
repnz
fstpt
sbb
xchg
outsl
out
je
clc
dec
aad
int3
jne
or
mov
mov
xor
sub
xor
mov
div
mov
mov
sub
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
jmp
aas
or
mov
pop
hlt
mov
add
lds
adc
lret
jecxz
jno
cmp
and
push
push
xchg
add
xchg
xchg
inc
and
pmaddwd
test
inc
cmp
out
add
sti
loope
int3
push
mov
shr
sub
scas
cmp
call
pop
loopne
and
add
insl
adc
popf
mov
loopne
cmpsb
shll
in
adc
mov
xor
dec
or
and
dec
or
lahf
shll
or
cmp
push
mov
jle
mov
pop
fcoms
inc
pop
mov
pop
cmpsl
cmp
or
push
roll
sar
out
and
jp
sub
out
fcom
or
add
add
testb
insl
jl
pop
mov
bound
shl
sub
lea
scas
lret
sub
and
jl
mov
leave
fscale
sbb
jp
int3
adc
xor
jnp
adc
add
push
loopne
aas
out
xor
mov
fnstenv
loopne
sub
repz
adc
inc
outsb
je
pop
jnp,pt
test
stc
push
pop
xchg
rclb
jecxz
adc
mov
dec
cmp
in
addr16
mov
inc
mov
ret
cli
outsb
pop
aad
jbe
loopne
enter
mov
and
pop
fdivrs
mov
in
jns
pop
or
adc
cmpl
jne
syscall
out
movsb
sbb
and
lahf
push
or
and
sub
xor
cs
jmp
pusha
insb
push
push
mov
cld
aam
int3
je
xchg
fst
push
mov
add
inc
adc
sbb
dec
pop
jmp
test
xchg
jle
or
ficompl
dec
pop
xchg
and
loop
mov
or
mov
mov
mov
and
push
loopne
dec
outsb
fisubrs
popa
stos
clc
mov
xchg
mov
gs
jo
cwtl
mov
xchg
push
lcall
dec
dec
or
mov
xlat
xchg
jl
mov
jmp
shll
in
mov
sbb
and
lret
scas
mov
cmp
jmp
jo
pop
mov
sbb
mov
jae
ficompl
cmpsb
pop
xchg
stc
adc
movsb
dec
push
jle
mov
stos
lcall
pop
dec
mov
lahf
out
sub
mov
pop
jg
sub
shlb
sarb
shlb
mov
leave
das
fnstenv
pop
or
and
xlat
jnp
test
mov
aas
cmp
pop
cmp
mov
rcl
jl
xchg
push
fisttpll
mov
push
lahf
sti
xlat
imul
stc
inc
scas
imul
jmp
repz
jg
rcr
pop
mov
and
jecxz
adc
push
fcomps
dec
xchg
aam
sbb
ret
xchg
jnp
mov
dec
cld
jmp
psllw
jno
pop
stos
cmp
jno
das
adc
mov
pop
sub
rorb
push
push
mov
lods
mov
fyl2xp1
daa
in
jp
fs
fidivl
fbld
in
cmpb
jnp
xor
sbb
or
and
mov
jae
nop
xchg
dec
arpl
push
jg
xor
adcl
jle
out
xor
shr
call
adc
dec
jns
pop
popa
inc
inc
mov
dec
fdivp
sub
add
and
fucomp
int3
push
sbb
cmpsl
push
jp
dec
fisubrl
aad
inc
and
push
lock
daa
rcpps
loop
add
sahf
loope
cmp
out
inc
pop
mov
mov
icebp
dec
dec
add
xchg
int3
lods
imul
sti
and
jmp
push
aad
aad
pop
xchg
cltd
cld
fistl
imul
mov
push
mov
inc
push
std
pop
inc
sub
mov
aam
scas
and
stc
sahf
cmc
sub
pop
cli
jbe
out
cmp
xlat
xchg
sub
dec
push
lcall
dec
dec
leave
adc
es
mov
bound
adc
arpl
cld
outsb
lock
loope
and
call
inc
push
inc
mov
and
lahf
push
rcrl
and
fimuls
roll
bound
mov
les
js
mov
push
dec
push
lret
and
dec
test
repnz
out
movsl
xlat
mov
sbb
test
adc
xor
pop
xchg
add
in
push
push
or
daa
int3
popf
mov
sub
inc
mov
ret
outsb
dec
jae
xor
and
mov
es
int3
insb
clc
push
or
xorb
push
pop
cmp
mov
ret
pop
push
sbb
in
jge
xorl
mov
cmp
jo
jg
and
add
and
insb
iret
push
mov
orb
lahf
mov
cs
dec
adc
clc
cmpsl
ss
cmp
pusha
jmp
in
fisubrs
into
arpl
lea
sti
inc
inc
sahf
or
jl
mov
fwait
pop
outsb
int
sub
sub
xchg
fs
pop
test
sub
es
lahf
push
outsb
sub
repz
or
sub
dec
cli
mov
cmpsb
es
jnp
cmc
pop
aad
daa
in
pusha
push
xor
and
cltd
push
leave
pop
xchg
xchg
insl
enter
movsl
or
test
je
out
test
pop
mov
inc
mov
dec
iret
or
mov
jge
mov
or
pop
cmpsb
jg
xchg
add
mov
jmp
dec
xchg
xor
add
ja
andb
sub
sub
inc
jns
sub
mov
rcrl
cmp
jb
repz
sahf
cmp
mov
lods
add
xchg
test
out
loopne
pushf
fs
subb
sti
ret
in
cld
and
ret
add
xchg
add
lcall
loop
fnstsw
loop
dec
incl
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
jmp
lea
mov
mov
pop
inc
mov
mov
mov
pop
xchg
sbb
xchg
and
xchg
push
movsb
stos
sarl
repz
jae
mov
fdivr
add
in
push
pop
das
ss
adc
mov
aad
pcmpgtw
and
or
dec
fnsave
pop
lcall
xor
sub
subl
dec
nop
cmp
and
jg
or
jns
xor
pushf
mov
xchg
shlb
loop
mov
dec
mov
fsubrs
mov
xor
shrl
mov
rcl
jl
scas
fdivrs
or
jb
mov
jecxz
mov
sub
aas
mov
inc
mov
rclb
jp
inc
mov
xor
sbb
sub
test
sbb
inc
pop
mov
push
popa
or
sbb
icebp
divl
xorb
push
enter
push
or
sbbb
int3
lret
cs
js
daa
dec
xor
pop
loop
lret
push
addl
xchg
jnp
mov
lods
mov
xchg
and
xor
clc
fcomps
movsb
pop
xchg
and
xchg
adc
dec
push
inc
mov
or
mov
imul
fldenv
test
scas
pop
push
popf
jbe
js
add
pushf
xor
ss
xchg
dec
in
jne
xchg
scas
cmp
mov
cltd
fbld
or
xchg
lret
mov
inc
arpl
xor
add
shl
dec
lock
negb
add
cmp
mov
jg
ret
pop
leave
push
fadd
dec
int3
or
mov
inc
shrb
out
or
push
je
xor
outsl
je
test
xchg
insl
outsl
inc
xchg
imul
punpckhdq
arpl
xchg
aas
pop
gs
cmp
and
stos
lea
jmp
jg
mov
sti
pop
xor
cs
xchg
push
pop
pop
cli
repz
cli
and
call
add
sbb
mull
das
arpl
jne
fistpll
insl
ret
roll
add
int3
rcl
cmp
xchg
mov
or
mov
leave
push
loop
xor
cltd
mov
fcom
fstpl
cmp
lea
hlt
call
in
inc
xchg
shr
mov
and
imul
xchg
xchg
pop
int
shrb
and
popa
dec
adc
add
mov
cmpsl
and
or
aad
jmp
pop
xchg
ret
push
and
jg
push
into
mov
sbb
adc
mov
jae
mov
pop
cmpsb
push
push
out
ds
nop
jecxz
push
cmpsl
dec
jns
stos
test
inc
xchg
push
bswap
add
std
repnz
mov
js
xchg
jle
das
jecxz
cmpsb
xlat
inc
push
and
jmp
mov
xchg
fwait
rcl
mov
or
sub
add
jmp
dec
cmp
dec
cmp
push
xor
mov
mov
insl
fidivrl
fs
sub
pop
mov
sub
cmp
arpl
xchg
adc
pop
ret
pusha
pop
inc
xchg
xor
xchg
imulb
rorb
aas
jae
xchg
leave
lcall
inc
mov
mov
stos
imul
xor
test
pop
sub
inc
xchg
adc
mov
xor
int3
outsb
je
xchg
cmpsw
std
sbb
in
call
sub
push
orb
es
movzwl
xchg
and
xor
xor
stos
hlt
or
bound
or
mov
and
mov
bound
rcl
nop
inc
dec
sbb
mov
stos
sub
cmc
pop
fdivrl
aaa
cmp
test
cmpw
aas
fsubrl
pop
fsubs
pushf
dec
mov
xchg
les
inc
loopne
and
lds
inc
jae
inc
add
clc
lock
xchg
cmp
and
or
insl
ret
dec
add
push
or
iret
adc
int
xchg
xor
jmp
jno
sbb
fisubl
adc
xor
mov
movsb
jbe
pop
mov
jle
in
ljmp
jg
fisubrl
dec
push
inc
call
in
dec
ror
pushf
dec
rcll
push
stos
mov
jnp
sub
fstps
sbb
cmp
sbb
jbe
sti
lods
aad
jne
mov
xor
and
fidivrl
leave
xor
push
mov
jbe
push
jns
sahf
cmovne
stos
add
sbb
lock
pop
sbb
jne
add
jae
and
dec
and
or
into
subl
notb
out
cs
sbb
jecxz
test
cmc
jns
sub
dec
jge
mov
push
sub
int3
push
int3
inc
aas
or
ficomps
or
add
lcall
adc
or
xorb
inc
out
mov
push
sti
out
jmp
push
and
out
aam
jecxz
and
pop
aas
push
inc
xor
ds
rorb
jnp
or
jns
je
mov
add
ss
out
dec
popf
xor
lock
frstor
xchg
imul
inc
in
ja
mov
fwait
adc
insl
push
inc
in
fisubrs
jge
xor
in
dec
call
and
xchg
mov
pop
out
out
inc
mov
aam
cmp
adc
in
adc
push
loope
aam
cmpsb
sbb
dec
loop
fsubp
lods
push
movsb
push
aas
pop
pushl
movsb
lds
fcom
rolb
fmuls
clc
sarl
scas
sub
xchg
insl
int3
lds
in
or
inc
popa
test
push
lahf
cmpsl
pusha
insl
and
mov
dec
jg
cli
xlat
and
aaa
pop
and
shll
clc
add
outsl
sub
rcll
adc
pop
pop
lret
js
add
stos
out
jb
jl
mov
movsb
push
in
leave
push
sti
add
popa
pop
inc
inc
adc
xchg
repnz
adc
lcall
mov
add
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
xor
sub
mov
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
mov
jmp
jo
fwait
push
mov
add
jno
int3
mov
mov
daa
iret
inc
cltd
fldcw
lcall
or
mov
rorb
je
imul
xchg
test
and
inc
cmpsl
jp
mov
mov
ds
call
and
xor
aaa
push
adc
adc
fwait
push
cwtl
xor
jb
xchg
push
movsb
jbe
inc
scas
test
arpl
sbb
inc
push
dec
mov
enter
or
and
pop
push
xchg
lds
dec
xor
scas
xchg
xor
cmp
sub
xchg
gs
js
fs
icebp
sbb
ud2
cmc
lret
inc
cmpsb
add
sar
dec
test
mov
sub
test
loope
je
sbb
jge
xchg
sub
sub
repnz
mov
jl
stc
jg
xor
adc
test
sub
inc
xor
imul
std
xor
inc
stos
dec
pop
cwtl
aas
movsl
call
imul
jns
data16
or
and
xor
jns
dec
ror
stc
jp
inc
into
xor
repnz
fwait
pop
cmp
out
pop
xchg
cmp
sub
lahf
rcr
in
push
xlat
enter
sub
mov
popa
mov
rclb
inc
xchg
pop
push
popa
into
and
fldl
lods
push
loope
imul
jbe
negl
and
xchg
or
ret
sti
sub
int3
cmp
pop
jb
or
cmp
and
xor
cmp
test
jb
cld
pop
xchg
jle
sahf
dec
sarl
and
inc
mov
mov
daa
jge
push
stos
cmp
cs
jmp
pop
push
pop
push
js
push
pop
dec
shrl
jne
decb
or
mov
inc
add
mov
cs
cwtl
xchg
inc
bswap
adc
pop
cld
out
cmp
lock
flds
mov
lahf
sbb
lods
in
out
jp
out
jbe
insb
xor
mov
push
jae
shll
fwait
add
push
aaa
and
popf
mov
pop
imul
aam
and
add
stos
dec
outsb
and
xchg
gs
sahf
jae
pop
sbb
cmp
rclb
fidivs
cltd
into
adc
add
xchg
push
cmp
dec
popf
pop
xchg
xor
lahf
add
stos
popf
outsb
mov
mov
pop
mov
xchg
pop
movsb
scas
iret
or
cmp
movsl
shl
xchg
mov
movl
scas
das
mov
push
mov
push
pop
mov
orb
cwtl
push
pop
jge
jnp
idivb
mov
popa
inc
adc
sub
mov
pushf
pop
movsl
fdivrs
inc
pop
je
jno
dec
inc
shr
fcom
adc
jp
mov
enter
fwait
mov
rorl
mov
insb
popa
sub
icebp
iret
sbb
lods
js
je
lahf
pop
jmp
xchg
lret
xchg
jg
sbb
aam
jmp
xor
cwtl
pop
push
jp
mov
dec
gs
or
lods
sarb
lahf
jmp
imul
mov
xchg
cmp
call
clc
pop
xor
clc
adc
dec
sub
or
or
push
or
and
mov
cs
or
sti
jb
aas
pop
enter
cmpb
in
or
clc
and
js
mov
mov
or
add
xor
and
mov
xor
mov
movl
movl
mov
mov
add
imul
mov
imul
xor
mov
mov
mov
xor
mov
div
push
xor
pop
sub
xor
div
mov
sub
mov
mov
movl
movl
mov
mov
imul
mov
imul
and
mov
mov
movl
mov
sub
or
xor
pop
leave
ret
push
mov
sub
jmp
movsb
sub
clc
mov
mov
inc
shlb
inc
arpl
mov
mov
jns
pop
cmc
push
je
sti
scas
jge
xchg
fnsave
push
xor
sahf
leave
and
pop
push
push
xchg
push
insl
sub
or
mov
imul
and
js
mov
imul
adc
xor
shrb
loop
das
sub
sti
das
inc
mov
sub
sbb
push
fidivrl
add
sbb
pop
gs
adc
scas
not
mov
xchg
cs
mov
dec
jecxz
push
sbb
in
mov
test
adc
faddl
push
sub
dec
or
lret
out
fadds
add
jg
shll
fnstsw
adc
xchg
leave
notb
movsl
stos
movsl
cmp
pop
rcl
das
dec
lock
pop
xchg
adc
or
adc
adc
push
stos
pop
or
and
pop
jge
xchg
dec
and
jecxz
inc
mov
aam
mov
test
dec
or
or
idiv
lcall
ljmp
xor
repnz
and
add
ds
mov
aad
push
push
test
mov
pop
les
jno
daa
fisubl
imul
mov
cmp
sbb
xchg
pop
inc
mov
cmp
aas
loopne
test
jne
xchg
aas
daa
and
mov
push
push
mov
jbe
sub
dec
cmpsl
adc
pop
push
popa
mov
adc
or
cmp
mov
in
pushf
into
mov
jns
jno
cmp
int3
or
push
aaa
clc
mov
ja
sahf
sbb
jecxz
or
loopne
and
mov
jecxz
sbb
pop
cli
movsl
ds
xchg
push
rcl
jnp
stos
in
rorl
inc
inc
adcl
push
pop
mov
out
in
out
negb
cld
and
pop
sbb
inc
out
and
ds
add
jmp
mov
loopne
lock
mov
xchg
std
adc
fidivs
jecxz
mov
pop
add
xlat
outsl
xchg
lret
data16
jp
outsl
cmpsl
inc
aaa
jbe
sbb
jne
shll
jle
sahf
push
push
out
into
std
sub
jbe
popa
cmp
add
pop
popf
movsl
mov
aaa
mov
iret
add
jo
jbe
arpl
push
and
int
mov
jno
push
add
jg
jne
xor
pop
shrb
ss
mov
nop
sbb
lods
jnp
imul
repz
push
mov
mov
xorl
mov
sub
inc
sub
inc
xor
mov
adc
test
pop
cmp
pop
adc
sub
mov
and
orb
pop
bound
xlat
out
push
sub
xor
loop
adc
push
or
push
xchg
decb
inc
popf
xchg
leave
xorl
movsb
sarl
jae
ret
push
add
push
cmp
les
xchg
push
dec
jle
loopne
jle
into
pop
enter
cmpsb
mov
xchg
xchg
mov
hlt
jnp
xchg
mov
iret
enter
pop
jg
push
sbb
add
pop
aas
push
popa
repz
inc
sub
shll
fcmovnu
stos
mov
ja
mov
clc
mov
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
jo
test
lods
mov
mov
int
int3
das
xchg
mov
mov
pop
stos
cmc
push
testl
addb
lods
cmp
sub
and
pop
jbe
push
jge
jl
mov
jg
pop
add
cmp
or
mov
push
lock
test
dec
sub
lret
mov
add
icebp
stos
sbb
idivl
add
test
jae
ja
pop
adc
sbbb
lret
aas
sti
jae
out
imul
fsubrp
int3
test
xchg
mov
xor
jge
adc
cmpsl
xbegin
cmp
mov
adc
jp
add
cmp
aas
sbb
in
mov
daa
mov
and
or
insb
rcrl
out
push
pop
mov
lods
dec
jge
xor
addr16
out
inc
flds
lods
enter
push
movsl
int
pop
jl
mov
jle
movsb
imull
aad
cmc
or
testb
mov
xlat
int
push
leave
js
aam
pop
adc
cmpsl
aas
les
xchg
aam
aas
scas
out
push
mov
cwtl
and
movsb
ret
cld
inc
fisubs
mov
xlat
mov
mov
mov
push
mov
mov
and
stc
jg
cmp
sbb
pop
les
adc
pop
xchg
xor
mov
cmp
sbb
outsl
in
mov
cmp
fdivl
das
movsl
lock
xor
je
addr16
mov
pop
or
aas
outsl
and
mov
loope
lods
jae
xor
and
xor
clc
add
push
bnd
dec
and
stos
lods
jp
cltd
jbe
aad
scas
mov
mov
adc
loope
aam
cmp
addr16
inc
adc
mov
out
int3
lea
gs
fisubrl
inc
popf
or
adc
iret
int
pop
and
movsl
imul
xchg
out
add
xor
dec
xor
xchg
mov
lods
xchg
mov
cmp
es
sarb
xor
int3
fdivl
movsb
cmp
pop
and
mov
out
mov
pop
ljmp
insl
cmp
mov
pop
mov
mov
js
scas
pushf
inc
cs
hlt
or
mov
adc
das
mov
pop
pop
daa
add
xlat
xor
and
dec
and
leave
repz
cmc
pop
jle
cmpsb
rep
sarl
xor
cmpsl
xchg
dec
push
xchg
lret
inc
jns
pop
enter
imul
adc
add
adc
dec
inc
adc
into
pop
mov
out
ljmp
mov
cld
push
pop
test
sub
pop
push
cld
dec
push
mov
lret
lahf
int
add
add
mov
push
in
js
mov
push
sub
bnd
mov
mov
cltd
push
in
lods
adc
sub
jg
inc
pop
mov
mov
ljmp
adc
inc
faddl
ss
dec
mov
imul
lea
test
mov
push
pop
jno
int3
lea
iret
push
adc
stos
mov
push
mov
cmp
aad
outsl
mov
bnd
mov
data16
dec
pop
in
push
test
test
stc
sub
icebp
jo
mov
loopne
push
add
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
xor
xor
add
adc
or
mov
mov
mov
or
add
cltd
jmp
adc
fnstsw
js
xor
fidivrs
mov
ret
lods
movsl
scas
rorb
and
push
mov
add
xchg
inc
fdecstp
in
lods
roll
imul
dec
sub
in
jecxz
xor
mov
stc
fadd
mov
cmp
and
int
pushf
fiadds
pop
inc
or
arpl
adc
xlat
mov
insb
pop
in
jno
mov
mov
dec
pop
sbb
movsl
out
jo
loope
jne
lods
push
jge
mov
loopne
sbb
adc
sub
pop
popf
mov
imul
adc
jae
xchg
jmp
pop
test
subl
inc
mov
push
push
insb
pop
lods
inc
dec
mov
mov
sti
xor
or
clc
xchg
add
xchg
sub
leave
and
cwtl
stos
lcall
push
mov
push
or
pop
mov
fcoml
loope
cmp
int3
pop
push
sahf
dec
push
or
dec
xor
out
ss
shrb
leavew
lret
fistpll
arpl
add
sti
xor
ljmp
cmpsb
mov
jl
loopne
lahf
movsl
repnz
fisttps
or
jle
jno
in
sbbb
lahf
sbbb
outsl
into
and
pop
dec
mov
xor
imul
loope
sti
das
addr16
je
in
ss
add
push
push
cli
popa
mov
pop
pop
pushf
xchg
dec
sub
inc
push
push
adc
xchg
fs
aad
xchg
inc
es
mov
out
sbb
les
test
adc
fnsave
jle
push
aaa
mov
and
orb
std
push
popf
popf
sub
pop
or
movsl
data16
imul
cltd
add
mov
out
lcall
sub
aam
add
loopne
mov
sbb
jmp
xchg
pop
sbb
push
in
movsb
popa
cmpsb
popa
add
push
in
push
adc
shll
cmp
push
jbe
inc
sub
testb
out
stc
js
and
les
insl
lock
push
xor
sbb
mov
dec
pop
inc
xchg
xlat
sub
mov
cmpsb
mov
cmp
insb
rolb
push
cmp
stc
arpl
xor
jl
dec
in
push
mov
lods
notb
jne
js
push
push
push
lret
fisubrs
push
icebp
mov
fstpt
imul
cmp
fiadds
sbb
int
xchg
xor
notb
dec
call
sar
orl
mov
inc
push
adc
iret
sbb
jae
dec
or
repnz
lret
test
popf
sub
or
or
testl
jle
xchg
ret
jmp
dec
and
sub
mov
mov
mov
mov
sahf
sub
adc
mov
adcb
mov
inc
jnp
sub
mov
cltd
mov
mov
or
iret
fdivr
stos
push
orl
lret
jmp
ficompl
aaa
fsubrl
mov
xchg
jns
mov
push
popf
cmp
adc
mov
or
adc
xchg
dec
pop
mov
loopne
imul
call
jns
and
imul
xlat
adc
jne
cmp
je
mov
mov
add
adc
xor
push
xor
push
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
add
add
jmp
popf
adc
cmp
adc
mov
nop
xor
fs
mov
jae
push
jge
mov
adc
cvtps2pd
inc
xor
inc
pop
bsf
aas
dec
fldcw
sbb
fs
mov
out
cli
mov
pop
mov
or
xor
leave
in
addl
mov
inc
in
add
pop
dec
js
hlt
iret
or
inc
sub
jne
pop
adc
pop
imul
pop
cltd
daa
aaa
out
icebp
add
out
cmp
xchg
imul
dec
push
xchg
jge
mov
adc
pop
fst
ja
imul
aas
decl
xor
fs
icebp
pop
jne
dec
xor
ja
pop
push
mov
fwait
imul
loope
push
or
into
or
pop
es
lods
int3
xlat
cli
in
aaa
repnz
or
call
xchg
movsb
add
stc
test
xchg
mov
icebp
sbb
fldenv
jg
push
test
ja
ja
sub
test
test
mov
mov
shl
ret
ret
repz
mov
jno
lods
or
mov
inc
fs
daa
cmp
pop
push
and
out
bnd
mov
lea
mov
mov
repz
xlat
push
gs
cs
push
sbb
mov
push
cwtl
mov
rclb
xchg
jns
test
dec
arpl
inc
sbb
fists
out
or
lahf
js
andl
push
mov
inc
test
dec
out
or
add
xchg
repz
das
sarl
aaa
icebp
mov
adcb
fadd
mov
xor
mov
outsb
adc
sub
jb
xlat
mov
push
gs
out
sub
xchg
fucom
xchg
mov
inc
pop
dec
into
push
push
dec
loopne
lock
xor
or
inc
aaa
out
call
shl
cs
sub
mov
scas
xchg
popa
iret
dec
aas
stc
mov
xor
inc
imul
adc
stc
mov
push
insl
jne
mov
test
dec
mov
add
dec
imul
fwait
push
test
add
pop
push
rclb
test
cmp
ja
jmp
mov
xchg
mov
jno
or
adc
daa
repz
xlat
adc
add
pop
loop
inc
popf
mov
cli
xor
in
mov
adc
loop
test
mov
mov
in
sbb
cs
outsl
loopne
fldenv
test
call
loop
stos
and
mov
bound
fdivr
dec
cmp
mov
enter
cwtl
dec
push
call
std
out
test
push
cmp
cmp
mov
test
lret
shld
pusha
sub
jo
dec
sbb
ss
mov
adc
mov
pop
sbb
aaa
stos
iret
js
inc
push
mov
adc
inc
jmp
jmp
jbe
shll
mov
pop
dec
fwait
adc
int3
shl
add
ds
ljmp
push
pushf
cmpsb
mov
ja
push
add
dec
mov
mov
pop
ret
pop
out
mov
xor
mov
lea
xor
mov
mov
jmp
aad
mov
mov
shll
xor
mov
mov
adcb
fistpll
iret
pop
pop
sbbb
inc
pop
gs
mov
and
imul
je
scas
xchg
sbb
call
icebp
les
punpckhbw
xchg
mov
loope
loope
jmp
mov
adc
clc
into
adc
fldenv
fbstp
sbb
push
pusha
sub
fsqrt
aad
test
aas
xchg
sbb
cltd
mov
fs
popf
rcrl
test
xchg
inc
push
rcrb
inc
mov
repnz
lahf
sbb
pop
out
push
pop
and
xor
lea
and
test
clc
mov
scas
sub
fst
xchg
rolb
jne
sub
mov
and
cmp
jecxz
mov
mov
inc
in
and
lock
stc
push
inc
push
outsb
or
pop
andb
cli
jle
or
xchg
pop
ljmp
inc
jp
shrb
subb
movsl
cli
mov
icebp
add
scas
cmp
jb
sahf
pop
add
or
mov
or
jg
popl
sti
cmpsb
add
into
pop
outsl
stos
sbbb
in
bound
sbb
sbb
testb
cmp
or
push
lret
notl
dec
xchg
jns
sub
cs
dec
xor
scas
mov
pushf
xchg
out
les
sub
or
iret
out
adc
jns
lods
lods
out
add
sub
dec
jmp
int
loop
popa
push
cwtl
shlb
sarb
jge
inc
push
sbb
std
pusha
xor
mov
outsl
mov
enter
les
subb
inc
fcmovne
fcompl
sub
cmp
push
sub
fldcw
add
xchg
scas
mov
pusha
lret
dec
xchg
outsl
rcrb
testb
std
icebp
pop
xor
pop
lret
lret
testl
arpl
pusha
pop
add
sub
es
mov
aas
test
push
adc
dec
inc
es
lock
imul
call
ja
pushf
and
or
bound
push
andb
rcl
aaa
cmc
out
sub
leave
adc
add
jns
int3
or
add
or
je
mov
scas
fs
jp
jo
mov
pop
incb
mov
fisttps
dec
xchg
adc
xor
clc
adc
stc
add
test
cmpsl
in
leave
mov
inc
lods
mov
divl
dec
mov
push
dec
outsl
test
mov
jb
pop
movsl
mov
in
orl
ljmp
stos
or
cmovbe
mov
dec
xchg
mov
xchg
sbb
jno
fwait
ret
sbb
xchg
mov
stos
mov
sar
cmp
inc
push
les
shrl
stos
xchg
cltd
aam
mov
sub
mov
xchg
flds
jmp
push
insb
movsb
cmpsl
mov
lods
jne
dec
and
pop
repz
iret
aad
add
outsl
jecxz
js
repnz
dec
jp
jmp
lock
jbe
xor
je
loop
inc
xor
fwait
fwait
imul
and
imul
mov
sub
mov
and
sub
lea
mov
mov
xor
jmp
mov
xchg
mov
add
addr16
mov
xchg
ljmp
push
dec
and
xchg
pop
int3
loopne
outsl
mov
add
jge
shl
aam
in
jmp
ljmp
lcall
std
shrl
out
jp
pop
stc
xchg
jno
add
scas
es
mov
int
mov
pop
cmp
inc
mov
inc
loope
mov
jb
pusha
inc
mov
icebp
sub
adc
jno
shlb
xchg
mov
push
push
sub
and
fistpll
lret
inc
outsl
lret
push
sbb
icebp
outsb
push
pop
bound
pop
sbb
lcall
movb
xor
aad
mov
sub
pop
std
inc
stos
mov
mov
out
add
arpl
data16
xor
iret
inc
fcmovb
test
jne
in
insl
repnz
imul
insl
test
outsl
fdiv
inc
stos
loope
jno
addl
ficompl
mov
mov
int
inc
testl
fcompl
adcl
jo
add
addr16
sub
rolb
jae
jecxz
inc
repz
mov
lods
inc
cmp
aaa
lcall
mov
jae
cmp
push
enter
clc
loop
aaa
inc
fmull
xlat
sub
das
cwtl
pushf
mov
cmpsb
mov
cld
ds
out
pop
xor
adc
int
inc
and
add
xchg
and
mov
and
mull
insl
sbb
jmp
adc
or
mov
mov
pusha
lods
xor
xchg
push
mov
jecxz
loop
pop
aaa
fcomip
testl
fs
cmp
test
in
lds
sahf
jno
sub
insl
divb
jnp
in
ret
mov
mov
repz
adc
cmp
fstpl
je
add
sub
sti
imull
sbb
xor
fwait
leave
aaa
mov
or
iret
adc
aaa
ret
loope
pop
testb
jns
call
add
dec
and
lods
cmpsl
xchg
test
sub
cmpsl
mov
mov
icebp
dec
mov
cs
jmp
aam
ret
push
mov
push
cmpsl
inc
adc
iret
aaa
jecxz
daa
xchg
imul
outsb
stos
inc
cmp
add
mov
aas
mov
mov
dec
jge
mov
xchg
pop
dec
lret
in
cmp
stos
aad
inc
xchg
mov
sub
shll
hlt
dec
xchg
inc
pop
aaa
fdivrp
icebp
mov
xor
pop
stos
sub
inc
sbb
jecxz
fldl
adc
popa
xchg
lods
into
sub
adc
push
shlb
popa
fcompl
outsb
lahf
inc
scas
cmpsb
jle
push
mov
or
cwtl
mov
lock
pop
xlat
lcall
inc
popf
and
int3
pop
stc
adc
daa
mov
ja
repz
jmp
sbb
fdivrs
cmp
lds
cmp
lock
or
mov
andl
in
and
cmp
inc
test
aam
std
mov
enter
outsl
jbe
or
ret
fs
push
push
call
lods
jl
mov
mov
mov
imulb
push
or
sub
xor
add
mov
add
mov
mov
push
push
call
mov
mov
and
mov
and
mov
add
adc
mov
add
mov
adc
xor
cmp
jne
cmp
jne
jmp
popf
fldt
mov
xor
inc
test
mov
mov
arpl
add
fcoms
ja
bound
repnz
hlt
mulb
adc
cwtl
adc
jo
and
xchg
sbb
pop
aas
repz
mov
shrl
lret
jp
int
lret
adc
cli
push
mov
int3
add
jmp
and
pop
mov
inc
push
gs
out
xchg
pushf
jns
cltd
cmp
push
cmp
cmc
dec
sub
cwtl
mov
movsb
sub
xchg
outsl
sub
push
jo
push
iret
hlt
mov
bswap
jbe
test
out
imul
dec
mov
mov
hlt
and
sahf
mov
jns
inc
in
xchg
mov
xor
int3
or
xchg
fwait
cmpl
cld
pusha
xchg
gs
xchg
psubd
sub
dec
fs
mov
enter
adc
xorl
ja
sub
mov
notl
sbb
push
pusha
lcall
mov
xor
xchg
into
inc
je
loop
mov
pop
lahf
movsb
jecxz
jo
sub
imul
ret
sub
repnz
and
sbb
fwait
sbb
push
fxtract
test
and
cmp
in
fs
mov
cmp
jmp
lahf
push
or
pop
loop
out
mov
call
sbb
stos
daa
lock
test
mov
xchg
dec
and
roll
pxor
inc
sub
push
ret
loopne
mov
jnp
jg
cmpsl
stos
popf
mov
repz
add
adc
adc
divl
sbb
jb
dec
insb
pop
mov
addl
movsb
inc
cld
or
lods
sub
lcall
aas
dec
mov
sub
roll
lret
xchg
nop
sarl
jns
jmp
aad
or
shr
into
inc
jmp
ds
xchg
pop
add
call
pop
push
sbb
out
cli
ljmp
mov
ror
andl
imul
push
cmp
dec
pop
shll
das
jp
and
jnp
jmp
clc
and
invd
rcrb
rorl
dec
xchg
fidivrl
mov
push
ret
enter
adc
xchg
call
lock
das
into
adc
and
cltd
jo
push
mov
shlw
dec
inc
xor
int3
iret
pop
outsl
or
pop
adc
je
inc
add
dec
xchg
xchg
or
daa
fnsave
mov
enter
sub
pop
pop
xor
push
call
cmp
fs
out
mov
arpl
mul
test
jns
jno
jbe
repnz
loopne
fdiv
inc
stos
cmp
mov
mov
bound
movsb
push
mov
test
dec
push
movsl
pop
fdivl
cmp
in
movsb
fs
sub
jl
jmp
mov
sub
aad
mov
pop
mov
or
xchg
into
jne
loope
call
test
jp
loopne
mov
mov
mov
push
pop
adc
repnz
push
aad
adc
push
jb
icebp
sbb
xor
mov
push
lock
or
js
mov
mov
sub
mov
sub
mov
xor
div
mov
jmp
addr16
jecxz
ja
mov
inc
popa
jmp
sti
iret
add
mov
cmp
sbbl
mov
mov
sub
enter
ficoml
pop
inc
mov
jo
or
or
aas
add
xor
shll
mov
mov
mov
das
mov
iret
and
add
inc
outsb
cmp
jae
data16
rclb
dec
adc
adc
xor
xor
mov
js
or
js
mov
ret
adc
das
icebp
pusha
lahf
mov
adc
push
sub
add
sub
cmpsl
adc
mov
fsubp
lods
insb
cmc
cmpsl
das
dec
push
out
mov
jl
push
int3
cmpsb
loopne
test
ret
sub
push
xor
sbb
gs
test
je
arpl
loopne
mov
fwait
enter
insb
jns
xorb
add
scas
out
out
add
dec
sub
fs
aad
sub
cmp
fwait
decb
icebp
jnp
inc
mov
xchg
add
push
sub
adc
ret
clc
inc
adc
inc
loop
insl
add
test
fstpt
push
andb
xchg
rorl
push
cld
mov
cmpb
sbb
mov
sub
cli
push
sar
cmpsb
ljmp
push
test
jmp
xchg
jecxz
das
mov
sbb
sbb
cld
shr
cmc
push
pop
in
insl
mov
cmp
enter
cld
and
mov
shrb
in
fldcw
and
mov
pop
push
and
add
test
push
enter
ret
sbb
cmp
pop
iret
push
cmp
adc
xchg
jmp
hlt
std
xor
call
mov
enter
pushw
dec
mov
insl
nop
adc
mov
lock
dec
decl
shrl
cmpsl
adc
test
push
lcall
roll
xor
test
fildll
subb
xchg
dec
jp
outsl
add
xchg
inc
fistps
sbb
cmp
testb
pop
scas
ds
sti
cmpsl
cli
adc
notb
inc
add
clc
cmp
scas
ret
popf
lock
xor
sub
xchg
dec
mov
jo
dec
cs
leave
lea
clc
mov
fimuls
dec
and
adc
mov
sbb
mov
jmp
push
lea
xlat
popa
es
push
daa
mov
adc
insl
shr
pop
mov
cmp
pop
mov
cmp
adc
jns
lock
sar
pop
pusha
adcl
movsb
cli
jecxz
sarb
dec
ficompl
aad
xor
jae
daa
mov
js
fwait
mov
mov
out
clc
mov
pop
mov
divb
cmp
pop
lret
shll
or
push
mov
je
pop
test
pop
inc
inc
push
divb
dec
push
push
xor
push
inc
ret
lods
push
sub
mov
outsb
sbb
gs
pop
push
in
mov
cmpsb
std
mov
xlat
es
add
fisubs
sub
mov
sbb
inc
push
or
stos
cwtl
scas
mov
jnp
cmp
sarb
mov
lea
xor
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
jmp
fs
insb
int3
jl
gs
adc
cmp
iret
popf
outsl
add
mov
pop
popa
gs
jno
subl
mov
xor
dec
pop
dec
adc
sbb
push
daa
jmp
sub
and
and
sbb
repnz
aad
inc
xchg
pop
xchg
adc
adc
and
jp
sub
and
dec
push
mov
mov
in
repz
gs
ss
xor
xchg
sbb
fisubrs
inc
test
daa
cld
push
test
mov
mov
push
daa
adc
pop
imul
fiaddl
sub
cmp
cld
bound
ss
fs
sbb
testb
bound
rorb
cmp
cmc
cmp
mov
out
pop
orb
daa
lock
add
cmp
sahf
and
in
sbb
xor
push
in
lods
push
je
push
push
cs
inc
or
adc
mov
pushf
or
jp
mov
push
ljmp
jo
lret
sub
repz
jmp
movsl
sbb
stos
xchg
adc
and
out
cmc
imul
aad
ja
xor
ret
mov
orl
mov
ljmp
pop
jae
xchg
mov
add
dec
aad
cmp
xor
push
cwtl
ret
cmc
adc
adc
popf
rcr
inc
pusha
xchg
adc
clc
xchg
mov
or
dec
cmp
rol
imulb
xchg
int
xchg
pusha
mov
push
and
fldenv
adc
and
or
inc
daa
fwait
mov
scas
jg,pn
lods
mov
dec
ret
push
pop
mov
pop
iret
or
add
and
repnz
fs
pop
fdivl
dec
andl
leave
shll
jge
mov
bound
pop
push
mov
push
push
and
mov
cmpsb
call
cmc
ret
mov
int
lods
cmp
fucomp
shrl
loop
pop
daa
add
mov
fimuls
adc
jns
outsl
push
xlat
push
push
jp
adc
jecxz
rol
nop
fcmovnbe
push
roll
adc
out
lds
jg
out
and
and
out
add
mov
rolb
outsl
mov
stos
roll
pop
out
adc
loop
pop
sbb
jno
xlat
jmp
and
stc
repz
fld
inc
push
inc
lcall
test
ret
or
outsb
jp
icebp
dec
ss
int3
jno
in
or
mov
lahf
movb
add
pushf
mov
sub
out
les
mov
roll
pop
cwtl
dec
jno
shlb
mov
sbb
adc
xchg
cmp
mov
fstl
jl
mov
filds
mov
insl
push
das
adc
cltd
and
and
and
cwtl
scas
sbb
ret
out
sbb
clc
lret
frstor
mov
push
xor
and
and
push
push
call
mov
mov
shr
shr
xor
mov
and
mov
xor
and
mov
mov
xor
and
mov
push
push
xor
and
push
push
call
mov
mov
and
and
xor
xor
shld
shl
or
or
xor
xor
mov
mov
mov
mov
mov
sub
mov
sbb
and
and
mov
mov
mov
mov
or
or
add
mov
adc
add
adc
mov
mov
mov
mov
jmp
loop
xor
js
jae
mov
adc
mov
push
xchg
push
and
push
inc
dec
sbb
cmp
movsl
push
pop
inc
sbb
jo
ficomps
arpl
andb
pop
mov
ret
imul
arpl
add
js
out
fwait
push
inc
dec
sbb
pusha
shr
push
dec
xchg
mov
and
xchg
mov
cmpsl
stos
lock
repz
mov
and
cld
gs
jmp
add
or
mov
sub
iret
xchg
jnp
pop
jecxz
ss
repz
cmc
pop
cmpsl
addr16
ds
lods
roll
cmp
inc
push
std
out
cld
xchg
pop
mov
into
xor
jl
mov
push
daa
dec
int
pop
xchg
ljmp
sahf
cmpsb
adc
xchg
mov
or
lahf
clc
add
rorb
mov
or
fwait
bt
test
add
insb
movsb
mov
add
xchg
dec
loop
je
insl
add
js
loope
jl
mov
idivl
stos
mov
jmp
ret
add
pop
pop
xor
mov
idivb
fs
aad
stos
mov
xlat
stos
add
sti
ret
iret
or
aas
jns
jmp
insb
ja
test
fstl
sbb
mov
jmp
or
xchg
adc
xlat
loope
dec
jmp
fmull
jno
dec
mov
stos
mov
insl
ljmp
int3
out
or
cltd
imul
cltd
int
xor
mov
ljmp
pop
xchg
shrl
inc
cmp
xchg
bnd
cmp
test
sahf
pushf
insb
jg
xchg
loop
insb
hlt
cmp
in
test
jb
ret
ret
mov
mov
xlat
fldcw
push
mov
mov
adc
cwtl
sahf
xchg
mov
push
pop
mov
adc
jbe
insl
xlat
pushf
call
xchg
out
pop
xchg
scas
mov
sbb
jno
adc
xor
repnz
loopne
lea
nop
push
jg
inc
enter
shll
f2xm1
gs
push
leave
jmp
pop
inc
add
icebp
dec
into
pop
xor
jne
mov
aam
loope
jbe
add
ljmp
mov
sub
jbe
xor
jae
out
push
sahf
stos
outsl
jmp
push
push
fildl
sbb
pop
cmpsl
addr16
rcll
outsb
sub
xor
mov
ret
dec
add
out
push
dec
in
mov
mov
adc
sbb
scas
push
inc
mov
test
xor
ss
lods
dec
mov
mov
cs
jb
push
into
xor
mov
loopne
testb
sbb
pop
stos
add
out
mov
xchg
btr
popf
stos
and
or
in
pop
adc
inc
sub
popa
imul
popa
loope
cld
or
imul
pop
xchg
push
imul
xchg
dec
rolb
push
fsubl
shrl
jns
add
mov
or
mov
ja
lahf
sti
jbe
mov
mov
out
xchg
sti
rorl
inc
xchg
ja
shlb
iret
out
popa
decb
and
js
ret
xor
adc
pop
mov
fsts
pop
lods
cld
sub
sbb
push
dec
mov
in
into
pop
fsubrs
cmpsl
pop
cmp
dec
mov
lret
adc
pop
icebp
inc
cmp
enter
xchg
cwtl
and
cmpsl
gs
add
lods
xchg
repz
mov
xor
rcll
lahf
pop
push
dec
repnz
add
dec
push
dec
loop
shlb
jecxz
int3
and
mov
push
in
sub
test
jno
sbb
sub
call
push
mov
mov
cmp
push
xor
fsubrs
int3
std
pop
jp
arpl
call
int
adc
outsb
sub
mov
adc
cltd
mov
push
mov
dec
push
jbe
std
adc
xchg
popa
mov
sub
cmc
or
shr
test
das
inc
xor
adc
sbb
fidivs
jo
add
pop
mov
xor
inc
adc
gs
in
ret
enter
xor
insb
imull
test
hlt
dec
test
std
shll
ret
xchg
and
xchg
fprem
icebp
fmull
icebp
repz
sub
orb
dec
es
popf
mov
pop
pop
sahf
xchg
and
and
jb
insl
pop
lret
jecxz
pushf
cmc
ljmp
mov
push
mov
inc
sub
and
sub
mov
fadds
dec
fistps
icebp
sbb
mov
lds
push
aad
xor
pop
sbb
cmpsl
add
mov
out
cmp
adc
imul
int
loopne
sbbl
stos
xor
loopne
lret
ret
and
and
repnz
and
mov
test
inc
mov
lcall
xor
xchg
sub
add
ret
fstpl
and
clc
fmuls
dec
cs
outsl
aam
mov
mov
insb
jnp
sbb
mov
daa
and
stos
pushf
test
adc
sbb
jae
hlt
aad
mov
cmp
lcall
lret
insl
pop
sbb
xor
xchg
inc
pop
cld
xchg
psllq
data16
sbb
adc
mov
loope
sub
into
mov
sub
bound
aam
push
sbb
sbb
dec
shr
lods
sub
cmp
mov
stos
jno
fs
xchg
pushf
jo
lock
push
roll
arpl
xor
jge
pop
push
nop
add
lret
dec
dec
shrl
pop
leave
repz
movsb
cmc
adc
jbe
and
data16
xor
js
xchg
cs
sbb
cmp
push
xchg
call
sti
sbb
clc
mov
sbb
mov
jno
inc
psubsw
jg
sub
mov
mov
sub
mov
mov
mov
shl
or
xor
xor
inc
shl
add
adc
jmp
pop
loopne
out
cwtl
cmp
insl
inc
adc
add
js
mov
or
jle
jp
pop
loop
fcompl
lods
loopne
pop
fldenv
fimull
push
lods
jmp
sbbl
xchg
pop
nop
jmp
popf
inc
mov
cmc
jne
cmp
in
icebp
mov
scas
adc
in
mov
ljmp
sbb
dec
arpl
add
xchg
ret
jecxz
push
jne
int3
fistps
stos
sub
jl
jbe
fwait
stos
jl
push
sub
mov
ret
or
sub
rclb
ja
mov
pop
stos
push
mov
shrl
arpl
pop
push
sub
pop
scas
int3
mov
sub
rcll
jbe
hlt
sbb
cld
push
clc
notl
jg
xchg
pusha
daa
xlat
push
xchg
xchg
xchg
dec
add
mov
shlb
dec
xchg
sahf
lcall
movsl
or
push
dec
push
loop
mov
lods
xchg
or
adc
xchg
andb
int
xor
sub
mov
pop
cwtl
xor
xchg
adc
dec
pop
jns
mov
test
and
mov
mov
incb
add
inc
pop
sub
pop
stos
in
repnz
inc
fdivrp
shl
or
mov
adc
out
cmp
sub
enter
mov
xlat
in
fwait
jae
rcl
call
push
fisttps
mov
icebp
xchg
mov
out
mov
sbb
fildl
scas
ud2
mov
stc
push
sbb
sahf
xchg
fs
xchg
sub
mov
pushl
fsubp
roll
jnp
jl
dec
test
or
jb
add
rolb
sub
xlat
inc
xchg
dec
inc
cli
ja
mov
add
mov
int3
inc
mov
imulb
lods
sub
add
adc
jbe
lahf
mov
rcr
scas
pop
test
hlt
sbb
push
jo
cmp
ja
jbe
push
hlt
icebp
outsl
push
xor
mov
mov
adc
push
push
sub
rol
jo
sbb
adc
decb
je
jge
ljmp
scas
push
sub
jmp
out
jmp
mov
lahf
jmp
xchg
jmp
ret
dec
leave
dec
addr16
pop
jns
test
inc
inc
ret
outsl
aas
mov
pop
inc
imul
sahf
test
adc
lret
stos
scas
pop
mov
aad
jg
mov
stc
pop
lcall
pop
icebp
scas
cwtl
jmp
xchg
std
and
sbb
push
repnz
popf
add
jge
push
push
adcb
ret
ja
jb
jbe
inc
out
cltd
cwtl
sub
xchg
mov
cmp
out
mov
movsl
out
lret
pop
pusha
push
fsts
ds
dec
int
push
int
insl
cld
cmp
inc
sbb
std
lods
pop
ret
test
push
sti
mov
fcomps
fisttps
cli
fnsave
add
idivl
fwait
loope
shll
loop
ss
pop
shrb
psubw
mov
push
sub
or
movsl
inc
in
insl
out
cmpsl
shll
stos
jecxz
inc
pop
push
inc
push
inc
mov
xor
mov
mov
mov
and
mov
and
mov
push
xor
add
push
adc
push
push
call
mov
mov
add
adc
or
or
add
adc
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
mov
mov
jmp
mov
mov
jno
lahf
imull
jmp
mov
mov
cld
dec
xchg
pop
fcom
lock
pusha
pop
add
or
sub
push
ds
fwait
adc
clc
jp
insb
push
xchg
xor
sti
jno
jno
inc
imulb
aad
mov
testl
sub
test
fwait
and
sbb
scas
jg
outsl
sbb
add
push
ret
imul
mov
mov
popf
fisubrs
jge
dec
xchg
xchg
mov
jle
fs
mov
sbb
jno
dec
cmp
or
lahf
mov
xlat
iret
push
adc
or
shll
pop
xchg
and
cmp
pop
adc
hlt
ficomps
cmp
bound
or
mov
fcomi
push
lods
in
jno
in
sbb
and
or
mov
mov
cmp
aas
lds
fistpll
test
int
sub
or
cld
cmp
xor
jns
insb
nop
imul
sbb
cmp
mov
cmp
rcr
push
mov
movsb
jns
pusha
aaa
aad
jo
pop
push
ja
mov
jecxz
push
pop
fwait
inc
inc
sub
fstps
lds
lods
fistl
add
aas
xor
xchg
and
lock
dec
cmp
mov
xchg
jecxz
in
pop
push
mov
pop
lds
sub
nop
shll
bound
sub
or
and
dec
push
dec
jl
xor
inc
mov
xchg
dec
push
aas
mov
je
jge
faddl
xchg
inc
out
or
mov
xchg
hlt
iret
xchg
or
lea
sarl
dec
loop
shl
fbld
imul
in
loopne
shlb
inc
xchg
pop
int
in
loop
xchg
test
add
std
cmpsb
push
and
lcall
sbb
mov
lret
xlat
rcll
dec
push
pusha
ss
sbb
and
push
int
scas
xchg
sarl
xchg
pop
xor
test
ret
or
dec
dec
mov
lret
cmc
mov
aam
outsb
mov
mov
lock
inc
repz
aaa
cmp
int
out
xchg
out
lcall
push
scas
xchg
inc
sbb
add
movsb
mov
mov
icebp
inc
in
push
pop
test
ja
int3
cmp
bound
insl
add
fcoms
xchg
push
clc
xor
dec
sub
mov
dec
movsl
or
mov
mov
fistps
push
hlt
inc
mov
mov
mov
xchg
push
int
pop
loope
pop
push
pop
clc
loope
nop
add
sub
and
jl
mov
push
sub
pop
push
sbb
scas
sub
mov
push
sub
data16
lcall
xchg
inc
dec
in
andl
lods
int
add
faddp
loope
loope
lcall
xor
add
mov
push
push
call
mov
mov
xor
mov
xor
mov
xor
xor
add
mov
adc
pop
mov
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
es
jecxz
jecxz
cmp
xor
lea
test
mov
mov
add
mov
aam
lret
inc
xchg
lock
mov
rorb
sahf
pop
mov
mov
gs
aaa
loope
imul
push
jl
cld
xor
test
add
cmp
pop
das
fdivp
test
add
mov
cmpsb
sahf
dec
xor
std
jae
jnp
adc
les
sbb
fstpt
stos
xor
push
sbb
inc
xchg
mov
daa
fnstenv
fcom
adc
fwait
cld
push
cmp
test
cmp
iret
mov
nop
dec
std
dec
cmp
add
inc
ja
imul
sbb
inc
mov
lock
jne
dec
dec
sub
mov
jo
data16
shll
cmp
ds
adc
test
lret
xchg
pop
fistpl
mov
xor
loop
sbb
add
in
daa
fidivl
adc
fwait
test
cltd
mov
add
sub
jae
bound
and
int
out
fisubs
jl
mov
scas
pop
or
fs
loop
jg
jmp
notb
sub
adc
jp
arpl
adc
in
xor
enter
push
addr16
fwait
cmp
or
jp
push
sub
test
dec
das
pop
add
pop
nop
addr16
pmaddwd
hlt
push
iret
mov
jecxz
mov
popa
cmp
in
sbb
dec
pop
lahf
jmp
adc
push
ffreep
imul
rcrb
mov
adcb
stos
sub
mov
pop
xlat
pushf
fbld
mov
dec
jg
mov
pusha
mov
push
and
inc
pop
hlt
scas
cli
ljmp
push
xor
nop
inc
mov
dec
push
mov
ds
lahf
in
cmpsb
add
les
and
mov
push
sub
jns
push
cmp
cwtl
mov
imul
or
insl
mov
in
xchg
insb
sub
call
movl
movl
jmp
shl
sahf
aad
xchg
mov
test
inc
jno
das
mov
mov
std
rcr
mov
stos
ret
mov
jg
in
add
dec
daa
loopne
cmp
iret
adc
rclb
dec
lods
push
test
xor
pop
dec
lds
cmpsb
sub
sub
adc
inc
push
test
pushl
adc
cmc
sbb
inc
and
jb
loop
ss
xchg
sbb
clc
xchg
popa
sbb
aam
jl
xchg
fidivrl
jnp
imul
dec
push
sub
ljmp
inc
jns
dec
mov
outsl
mov
lock
repnz
xchg
xchg
cmp
and
hlt
ljmp
shll
cmp
mov
stos
xchg
sub
jnp
popa
daa
jg
repnz
scas
jo
jns
cmp
sarl
pusha
movsb
stos
int
mov
mov
imul
out
xchg
mov
test
iret
push
xor
sahf
hlt
xchg
das
stc
aaa
mov
xchg
inc
out
xchg
jb,pt
jge
adc
cmc
xlat
inc
push
aas
imul
test
mov
sbb
ja
xor
jnp
sbb
or
outsl
inc
sbb
xor
lret
inc
or
lock
imul
and
and
push
bound
fimull
pop
mov
fcom
sbb
sub
mov
rorb
xchg
cld
outsl
cmp
fbld
or
sahf
mov
lret
jb
lret
ds
jmp
jp
icebp
clc
test
lahf
pop
cs
ss
jecxz
adc
aas
push
sbb
lods
andb
jo
idivl
sarl
imul
rcrl
jmp
jne
arpl
shrl
cmpsb
out
scas
std
add
jo
add
push
mov
cmp
sub
jne
cli
hlt
cmc
leave
push
lods
mov
mov
sub
sub
insl
arpl
data16
xlat
in
das
sti
les
inc
xchg
sub
enter
xlat
push
inc
bound
add
add
add
add
xor
div
mov
xor
and
div
mov
or
jmp
arpl
push
cmp
sbb
mov
jbe
jae
or
mov
mov
or
clc
cmp
xchg
fcmovnu
fsts
int
lret
push
jl
mov
iret
sbb
inc
inc
cmp
out
imul
mov
fdivl
sbb
and
adc
fs
jmp
xchg
inc
repz
mov
adc
lret
fidivl
xchg
xchg
aas
dec
mov
pop
mov
popw
out
iret
cmp
popf
mov
sub
or
cwtl
push
shl
enter
xor
xchg
iret
mov
mov
xchg
sub
in
sarl
or
in
loope
push
mov
push
mov
popf
or
push
sbb
push
dec
clc
xlat
imul
xor
mov
push
mov
mov
jnp
mov
add
or
mov
pop
rolb
addr16
cltd
lea
imul
repz
pusha
mov
pop
push
ljmp
push
insb
jns
push
dec
ss
sub
clc
xor
cmp
sub
add
sub
adc
lods
jl
pop
sbb
clc
sti
xor
push
pop
sub
int
fimull
loope
jne
pushf
pop
mov
ret
sub
lret
das
pop
jns
das
push
and
leave
test
pop
cmp
divb
push
rcr
shll
sbb
pop
sub
inc
test
inc
fcmovbe
adc
clc
popa
jle
out
or
rclb
ret
fisubrs
in
cs
xchg
scas
cwtl
pop
jmp
cli
lea
out
int
stos
mov
fldt
shrb
push
jne
push
dec
mov
rcrb
cld
sbb
xor
ss
es
iret
xchg
pushf
stos
xchg
and
xor
pop
data16
adc
or
clc
imul
sub
jo
jns
out
lret
sbb
mov
adc
xor
add
mov
and
sub
mov
imul
mov
sub
cmp
jne
mov
jmp
cmpb
push
inc
mov
jno
aaa
mov
mov
and
add
es
fdivrs
mov
insl
out
cwtl
cmpsb
subb
cwtl
lret
aas
lods
add
out
gs
dec
dec
lcall
adcl
sbb
nop
repnz
mov
jno
jecxz
icebp
sbb
dec
aam
ret
ror
mov
popa
jecxz
mov
push
push
mov
sub
sahf
outsl
pop
dec
les
and
push
les
cmp
mov
pop
pop
ffree
xchg
xchg
sub
shrl
xchg
fists
or
push
mov
cmpsl
or
sbb
shr
pop
in
push
xlat
ret
jge
imul
sar
jo
cmc
mov
ret
subb
rol
mov
and
call
nop
jmp
mov
sub
xchg
jb
xor
jbe
jne
cmp
mov
inc
rcl
xlat
xchg
std
insl
pop
scas
mov
repz
jl
mov
xchg
mov
cld
lret
xchg
lods
sbb
ret
dec
dec
push
or
dec
cmp
lock
jmp
push
scas
insl
test
pop
jle
mov
mov
or
shlb
lahf
je
or
clc
int
gs
aad
ljmp
ljmp
cwtl
and
inc
push
push
dec
loope
mov
loop
jae
mov
stc
push
dec
jmp
mov
filds
popf
iret
mov
xlat
mov
std
or
add
repz
mov
cmp
and
and
lds
mov
adc
pop
clc
std
das
adc
sub
pop
test
insb
lcall
sbb
rorb
xor
dec
je
dec
outsl
js
jae
loopne
fldt
or
jo
ficoms
lods
add
sub
fsubp
adc
sbb
out
or
inc
clc
jmp
fbld
roll
fnstcw
jno
cmp
mov
jecxz
insl
jecxz
or
out
and
addr16
push
hlt
and
je
in
imul
dec
out
mov
std
aas
mov
jl
push
outsl
jno
loopne
out
mov
add
cmp
pop
push
out
hlt
mov
hlt
fistpll
mov
mov
sbb
push
fsubs
mov
and
inc
iret
ror
cmp
into
inc
fstpt
repz
jp
outsb
adc
out
ja
pop
ds
dec
pop
add
out
xchg
lods
cltd
aas
jne
dec
pop
iret
xchg
xchg
adc
jge
insl
cmp
sub
stos
movsl
inc
mov
in
pop
mov
mov
jmp
sub
mov
mov
mov
adc
stos
jne
add
adc
sbb
inc
mov
les
fs
mov
dec
int3
sub
fists
xchg
lods
call
mov
mov
aas
sub
icebp
out
mov
loopne
pusha
push
hlt
icebp
in
cmpsb
ja
adcb
sub
into
fimull
xchg
lea
lds
es
icebp
loope
nop
mov
int
loopne
dec
lods
pop
notl
cwtl
arpl
pop
int
das
inc
cli
push
mov
jg
jmp
push
and
mov
adc
fistl
jns
out
aad
addr16
ja
lahf
pop
add
popf
repz
xchg
int3
ficoml
fidivrs
push
int3
and
xchg
mov
outsb
stc
out
mov
dec
ljmp
movl
xchg
ret
push
push
xorb
lods
int
fnsave
sub
mov
and
pop
mov
popl
push
sub
or
cmp
add
mov
mov
mov
les
int
dec
call
pushf
jnp
ss
ficoms
movsl
jae
xchg
fwait
push
rcll
sub
incb
sbb
out
rcr
pop
pusha
mov
mov
jp
mov
loope
enter
or
mov
mov
imul
push
jmp
dec
lcall
cmp
xchg
outsl
ss
inc
jno
aas
mov
mov
out
sub
test
js
leave
lahf
std
fimuls
hlt
movsb
dec
jb
or
mov
cwtl
ljmp
andb
sahf
dec
andl
pop
or
xor
sub
jecxz
dec
mov
ss
test
jbe
sub
jle
mov
sbb
pop
mov
andb
or
fcomps
push
in
idivb
data16
addl
adc
jb
arpl
popf
outsb
js
imul
int
lea
negl
addb
fisttps
or
cmp
inc
inc
cs
fisttps
insl
rclb
mov
cmovb
addb
shlb
cmp
test
xchg
pop
cld
cmp
sub
push
inc
sbb
aaa
pushl
sbbl
pusha
xchg
lret
pusha
cli
inc
dec
cmp
ljmp
and
pop
jb
iret
jae
rorl
loop
mov
and
bound
and
sub
aam
scas
shll
or
aam
push
and
ret
push
jnp
mov
sbb
pop
and
xchg
mov
push
mov
xor
jp
int3
mov
stc
mov
rorb
repz
adc
or
dec
push
ljmp
cmp
pusha
stos
add
roll
jge
pop
es
adc
fmuls
mov
xchg
jo
mov
lods
out
inc
loop
jl
sti
rolb
push
fdivrs
in
dec
je
inc
jo
or
sbb
andb
shrb
ljmp
adc
pushl
inc
pusha
fidivrs
xor
dec
jecxz
jle
push
gs
push
jp
ss
pop
pushl
or
dec
nop
xchg
outsl
movsl
xor
sub
addr16
in
xchg
pop
xlat
dec
and
sbb
mov
jne
stc
mov
jnp
jno
int
insb
imul
in
rcrb
aad
jne
and
mov
or
mov
imul
mov
and
and
mov
shl
mov
jmp
fstps
lods
mov
repz
das
popa
jne
leave
dec
mov
mov
ret
xchg
jmp
out
das
daa
cwtl
enter
fwait
xlat
dec
xchg
pop
dec
push
call
ss
andl
xor
iret
xchg
test
hlt
fs
mov
enter
out
fs
out
cmp
xchg
orl
push
cmp
aam
cmpsb
lods
dec
inc
mov
icebp
test
out
lahf
sbb
stc
or
enter
bound
pop
popf
dec
push
movsb
xor
pop
pop
add
xchg
aas
pop
mov
je
mov
add
adc
shll
sub
fdivrs
xor
pusha
repz
mov
iret
je
cmp
push
xchg
push
cmp
jns
jns
lock
out
and
cmc
pop
ret
jnp
and
aad
ret
dec
xor
and
mov
aas
adc
mov
fcoms
rcl
add
cwtl
mov
test
fcmove
jecxz
stos
pop
push
adc
xor
xchg
push
call
icebp
sbb
aas
add
dec
sub
add
jne
dec
sbb
repz
mov
and
ret
lret
repnz
mov
jle
or
cmpsb
xchg
sbb
sub
xchg
dec
test
xor
enter
jmp
shl
add
scas
mov
jle
outsb
xor
je
jg
and
mov
out
loopne
ret
jmp
out
inc
and
loop
movsl
sbb
xchg
mov
jl
inc
xchg
popa
aaa
xchg
push
aad
mov
push
loopne
aaa
cmpl
or
push
pop
std
movsb
or
jnp
push
mov
sub
cltd
and
push
loop
movups
or
jnp
and
mov
imul
out
out
xchg
cmp
and
pushf
ss
ret
add
loop
ds
jo
pop
popa
and
das
fists
dec
fsubrp
cli
hlt
or
xor
xor
xor
add
loop
sbb
mov
add
jmp
mov
adc
or
xchg
repz
sub
or
and
adc
aam
leave
cmpsb
or
mov
add
inc
mov
mov
fisttpl
push
xchg
decb
jns
xor
lds
pop
inc
sub
cmpsl
dec
and
mov
movsb
mov
les
and
pop
iret
cld
xor
test
xchg
rcl
sbb
hlt
sub
fildl
rolb
loope
fcoml
enter
push
push
nop
lea
cwtl
lock
pop
insl
lods
push
cltd
pop
xchg
inc
das
call
adc
icebp
repz
rclb
call
and
gs
out
ljmp
outsl
pop
mov
int
testb
sub
inc
fcoml
sbb
push
mov
inc
fsubrs
adc
pop
loop
scas
pop
push
sbb
icebp
jo
adc
cltd
cltd
and
mov
sbb
les
push
cmpsl
jns
mov
lea
lods
jns
cmp
sub
ds
aaa
outsb
mov
push
mov
cmp
pushf
out
sbb
push
into
cmp
stos
dec
mov
jo
mov
mov
enter
es
sub
adc
mov
out
test
mov
dec
xchg
icebp
jl
shlb
jno
arpl
in
push
sbb
scas
stos
mov
ret
in
mov
xchg
in
int
xor
lock
inc
idiv
insb
daa
jl
mov
xchg
mov
fmuls
pop
sbb
jmp
imul
je
or
jbe
cmp
ljmp
lret
in
bound
into
in
mov
lret
sti
adc
es
mov
adc
out
lds
xchg
movsb
ljmp
sti
aam
popa
push
pusha
sub
cmp
pop
xchg
push
pop
nop
mov
sbb
dec
mov
fwait
dec
pop
xor
sbb
sub
lea
add
mov
mov
mov
or
mov
or
xor
and
mov
add
pop
cmp
je
mov
jmp
mov
mov
sub
mov
sub
mov
or
mov
and
mov
sub
add
jmp
movl
movl
movl
mov
mov
xor
add
mov
jmp
inc
xor
mov
mov
xor
jns
xor
cmp
inc
sub
mov
sub
jns
ljmp
aaa
push
in
subb
and
mov
cmp
test
sub
call
mov
pop
pop
movsl
fwait
adc
shlb
lcall
ja
test
adc
out
lcall
cs
dec
int
dec
cmpsb
cli
mov
hlt
jp
mov
in
lods
sbb
sub
aad
xchg
add
scas
inc
repz
fstp
sbb
jne
inc
fcmovne
and
lcall
xor
dec
dec
adc
jecxz
adc
sbb
cmp
add
pop
fimull
mov
mov
pop
leave
mov
sti
xchg
fs
cmpsl
into
sahf
cld
xlat
pusha
xor
repz
lods
jne
pop
jecxz
push
push
sahf
js
dec
adc
addr16
adc
xchg
push
push
sub
jg
adc
movsb
push
inc
out
fcompl
pop
dec
sub
out
mov
mov
jge
ret
and
stc
rolb
gs
sarl
add
xor
addr16
xchg
inc
mov
mov
mov
fcomps
je
cmp
push
push
jo
push
xchg
out
inc
rorb
aad
or
sub
or
loopne
clc
int3
fistpl
or
gs
in
popl
loopne
dec
pop
push
rclb
pop
sub
inc
mov
sbb
icebp
in
ss
adc
arpl
aas
cld
sub
popa
das
rcll
nop
ret
cmp
int3
push
dec
xchg
fldenv
lcall
mov
cmpb
insb
int3
lcall
stos
inc
pop
adc
push
adc
in
fs
jns,pn
xchg
dec
jge
lahf
xchg
sar
sub
push
add
add
mov
setb
push
adc
stos
inc
out
imul
aas
mov
adc
test
adc
adc
and
testl
add
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
dec
lahf
and
xor
xchg
outsl
add
fwait
sti
pop
push
mov
mov
negl
adc
movsl
adcl
ret
pushf
add
jne
push
fisubs
dec
cmpsl
mov
jmp
xor
xchg
inc
scas
xchg
pop
or
adc
popf
fimull
out
sarl
in
enter
sub
lret
or
push
test
sbb
or
mov
cmp
inc
sub
sub
jae
push
pop
mov
ds
adc
loopne
mov
jp
sub
pop
dec
mov
pop
push
mov
sbb
jmp
div
dec
mov
inc
dec
outsb
mov
cs
dec
and
pop
and
jne
insl
jecxz
dec
lods
or
dec
sti
fldenv
inc
xchg
std
adc
mov
je
mov
cmp
xor
lahf
sbb
add
enter
test
xorl
dec
arpl
inc
daa
push
jbe
repnz
insb
sbb
sbb
add
in
cmp
cmp
sbb
jle
sbb
inc
jno
insl
push
aaa
mov
jg
add
push
outsl
add
aam
je
jmp
dec
push
test
xchg
stos
popa
cmc
jecxz
jge
mov
imul
into
add
jecxz
ficomps
sti
enter
aas
xor
into
fwait
rol
hlt
xchg
mov
mov
mov
ret
stos
orl
ss
fwait
xchg
and
or
mov
mov
out
xor
sub
out
inc
sub
out
mov
jne
mov
adc
add
mov
fdivrl
les
cmpsl
and
dec
mov
jecxz,pt
in
cmp
cmpb
sub
icebp
push
jl
stc
test
jge
aas
xlat
mov
lods
aam
out
sub
or
sbb
shll
fdivrl
dec
push
inc
mov
lcall
xchg
xchg
jmp
pusha
sbb
push
idivl
mov
pushf
pop
in
out
xor
int3
daa
bound
mov
push
mov
push
jmp
cmp
rorl
dec
lahf
adc
imul
mov
aas
lahf
testb
push
rolb
pusha
out
leave
cmpsb
fs
fiaddl
push
dec
fidivs
cmp
cld
jl
mov
xor
scas
sahf
mov
lock
testb
sti
les
int3
pop
leave
sub
loope
test
push
and
pop
inc
shlb
add
mov
popa
cmp
dec
movsb
addr16
or
icebp
in
lock
xor
xor
rcll
ljmp
pop
mov
shl
cmpsl
lods
notb
scas
rorb
aas
fwait
sub
pop
int
cmp
cmp
out
sbb
shll
mov
sub
test
jno
and
sbb
cmp
xor
divb
test
push
mov
aam
cwtl
mov
push
cld
je
mov
aam
out
inc
divl
data16
sar
pop
rorl
lret
xor
mov
xlat
dec
mov
push
inc
inc
jo
or
sub
mov
popf
inc
ret
ss
inc
adc
test
insl
mov
adc
and
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
jmp
cli
mov
inc
jge
and
je
sbb
cs
mov
pop
sahf
cltd
mov
movsb
xor
in
ret
or
inc
dec
sbb
lret
pop
pop
xchg
faddl
inc
pop
bswap
and
push
and
dec
pop
mov
and
sbb
cs
fisttpl
loopne
adc
jp
popa
and
nop
data16
mov
sub
pop
add
popf
sbb
mov
push
pop
rcr
push
sti
imul
mov
xor
sub
xchg
ds
repnz
pop
cmpsl
cmp
outsb
test
jnp
sbb
or
jmp
push
movsb
outsb
lock
fistpl
ljmp
clc
mov
or
xchg
iret
inc
adc
jnp
xchg
std
mov
enter
aam
fisubl
pop
or
iret
outsb
inc
mov
mov
rcr
imul
ret
repnz
in
fcoms
mov
mov
xor
dec
jle
dec
and
add
les
add
add
xchg
push
es
sbb
outsl
out
lods
pusha
imul
jb
push
or
cltd
bound
inc
cs
aam
push
xchg
push
xchg
mul
jg
int
cmp
mov
fs
mov
sub
lcall
into
jl
xchg
popf
iret
mov
gs
mov
push
and
pop
das
ret
xor
clc
lods
daa
shll
pop
ja
sub
jae
dec
push
inc
rorb
mov
sbb
cmp
xchg
outsl
in
or
sub
pop
mov
mov
or
and
nop
scas
mov
sahf
add
dec
ljmp
pushf
sub
shll
pop
pop
pop
cmp
ficomps
push
jp
mov
jmp
push
repz
imul
mov
mov
dec
or
jo
mov
or
mov
dec
lret
pop
test
sbb
xor
or
cmc
and
outsl
sub
leave
sbb
das
xchg
inc
icebp
movsl
int
cmc
mov
idivl
hlt
icebp
add
dec
jge
pop
adc
sbb
jns
mov
mov
mov
addr16
lds
and
jb
adc
xchg
lds
push
fs
jmp
mov
and
push
adc
inc
mov
scas
test
cmp
jns
mov
and
pop
addl
and
outsl
out
das
sub
sarb
sbbb
int3
xchg
rclb
vpsllq
js
sbb
mov
sbb
movl
movl
movl
mov
mov
or
sub
or
sub
mov
imul
sub
mov
mov
xor
xor
or
mov
div
mov
xor
push
pop
mov
mov
sub
mov
div
mov
mov
mov
or
sub
or
mov
sub
mov
sub
sub
cmp
ja
mov
mov
add
and
mov
add
mov
sub
mov
sub
mov
mov
mov
jmp
mov
mov
outsl
jno
jle
inc
pop
popa
mov
mov
xlat
daa
stos
or
or
std
mov
fisttpl
lock
sbb
cmp
pop
out
and
fs
stos
es
mov
and
arpl
addr16
push
xor
jmp
sbb
adc
mov
mov
scas
repz
mov
cli
or
aaa
aad
xor
jbe
cmp
flds
in
fcoml
jmp
fs
dec
mov
mov
scas
aaa
and
imul
cmp
movsb
es
push
sub
loope
xor
dec
jne
mov
fisttps
out
scas
mov
dec
fisubrs
push
repz
mov
mov
xchg
inc
inc
and
cmpsl
push
adc
das
int3
push
roll
into
in
inc
cltd
mov
stos
pop
mulb
or
es
and
outsb
cwtl
mov
add
and
jne
jnp
and
mull
pop
add
repz
jl
clc
je
mov
stc
cwtl
testl
mov
dec
bound
pop
mov
hlt
pushf
push
subb
arpl
mov
scas
push
lcall
les
and
cli
dec
pop
jae
movsl
jo
shlb
cmpl
sub
xchg
jmp
push
sahf
pop
push
cmpsb
mov
shrb
jno
outsb
adc
mov
sub
in
shrb
aad
pop
dec
gs
sahf
mov
jmp
sbb
mov
mov
sti
adc
dec
pushf
loop
pusha
cmpsl
sub
xor
daa
dec
jmp
jb
adc
push
loope
cli
dec
aas
icebp
add
int3
out
call
mov
mov
mov
jmp
dec
adc
or
fiadds
aas
ret
pop
or
in
popa
jp
data16
add
xlat
sub
sbb
add
pop
idivl
cltd
mov
das
test
popa
imul
mov
and
addb
pop
fdivrl
scas
std
xlat
enter
cmp
mov
adc
add
stos
mov
jp
scas
mov
jle
movsb
ret
int3
jns
sbb
sub
inc
inc
fldenv
adc
dec
mov
js
popa
lock
nop
sub
or
outsb
lods
stc
mov
dec
or
scas
pop
arpl
mov
adc
dec
ja
mov
cmp
ja
cmp
cmp
jp
int3
add
jns
loopne
arpl
and
mov
fdivs
jo
enter
add
push
imul
push
ror
mov
xor
aad
mov
mov
mov
mov
mov
imul
xor
mov
jmp
repnz
mov
ja
add
and
sti
packsswb
mov
andl
lods
xchg
movsl
das
mov
jg
outsl
inc
pop
or
bound
mov
ss
and
cmc
inc
decb
adc
push
push
xor
push
and
mov
or
xchg
pusha
mov
outsb
and
sub
loop
mov
cmp
movsl
gs
adc
dec
es
inc
in
xlat
fists
cmp
movsb
fsts
dec
ret
jmp
test
stos
mov
sbb
fsubs
xor
and
mov
das
sbb
dec
or
pop
aas
test
aam
sub
mov
mov
ret
insl
mov
out
adc
dec
out
pop
cld
mov
cwtl
shl
mov
mov
xor
cmpsb
and
pop
mov
lods
lahf
inc
shlb
lret
inc
in
push
repnz
sub
push
push
adc
dec
or
jbe
adc
les
adc
mov
enter
sbb
xchg
jns
loope
sbb
xchg
mov
mov
mov
pop
inc
mov
dec
mov
jnp
nop
sub
mov
pop
aaa
call
sbbb
mov
stos
pop
je
dec
stos
nop
aaa
jnp
sbb
shlb
mov
sahf
outsl
cmp
sub
jmp
mov
sub
inc
xor
iret
mov
adc
adc
cmp
faddl
xor
out
stc
iret
repnz
adc
sbb
bound
hlt
jns
test
divl
sub
and
in
inc
mov
add
jmp
add
xor
push
add
jle
hlt
jge
pop
lcall
int
je
sbb
mov
repnz
or
xor
sbb
fwait
push
fwait
lahf
scas
popa
mov
lret
mov
ja
sbb
and
adc
stc
imul
lret
xchg
lret
test
addb
mov
pop
cld
imul
inc
inc
adc
mov
jg
fsubrl
fidivrl
jns
stc
pop
jecxz
stos
repz
xor
mov
cmc
push
pop
or
mov
mov
mov
mov
mov
popa
data16
pop
inc
adc
pop
inc
dec
setb
push
cld
jnp
cmp
bnd
cmpsb
or
pop
push
push
add
hlt
lods
adc
xchg
mov
xchg
push
iret
xor
fxch
stc
pop
mov
mov
mov
ja
mov
xor
mov
inc
aam
fdivrs
cmpsl
fwait
ret
cmp
das
fs
fcomp
sub
mov
jo
or
and
adc
js
imul
xor
mov
div
jmp
ljmp
mov
adc
mov
cmp
jns
mov
or
push
test
or
daa
jp
adc
test
arpl
pushf
push
repz
pop
in
cmp
repnz
nop
je
xor
idiv
icebp
adc
dec
in
mov
in
xchg
lds
mov
cmp
jb
cmp
and
loope
mov
test
repz
and
sbb
cmpb
pop
inc
push
push
mov
mov
push
ljmp
loope
xor
loop
rorb
jae
jg
pop
orb
dec
daa
loope
mov
cltd
mov
repz
pop
mov
hlt
push
dec
fs
pusha
xchg
insl
stos
add
mov
loopne
and
lock
clc
loope
lahf
pushf
out
jg
and
dec
out
movl
jbe
adc
push
aaa
es
test
leave
jbe
insl
or
push
jmp
add
addr16
daa
pop
stc
mov
decl
adc
push
fs
cld
in
push
sbb
out
mov
push
lods
mov
imul
sbb
adc
lahf
sub
adc
xorl
in
xchg
repz
fsts
hlt
les
outsl
out
out
adc
push
gs
pop
aas
or
pop
mov
fisttpl
data16
and
mov
xor
pop
and
nop
sub
sbb
sub
xor
mov
mov
stos
push
arpl
lret
movsb
ss
xchg
cld
sub
stos
dec
pop
jmp
pop
int
test
dec
mov
shll
popa
out
mov
dec
ret
pushf
dec
dec
cmp
push
daa
mov
in
movsb
xchg
movsb
or
imul
scas
mov
les
icebp
ret
jae,pt
enter
fiaddl
pop
jb
aaa
insl
adc
push
and
int
and
mov
dec
sub
sbb
jb
adc
divl
aam
in
repnz
mov
inc
fcmovbe
inc
push
call
sarb
bound
jb
adc
fisubrl
and
lret
pop
jae
jp
dec
jmp
xchg
decb
push
rcr
jae
movsb
or
jge
scas
dec
popf
in
dec
mov
push
xor
mov
mov
aaa
push
test
inc
movsb
and
push
mov
mov
in
push
or
enter
ljmp
in
addr16
nop
add
aas
inc
adc
xchg
loop
push
pop
or
cmpsl
dec
cld
test
pop
push
sbb
jbe
or
sub
ret
inc
mov
imul
hlt
imul
xor
xor
push
add
mov
or
mov
div
mov
xor
sub
mov
mov
pop
div
mov
mov
or
sub
or
mov
sub
mov
jmp
adc
inc
xorl
imul
out
subb
jns
mov
push
neg
scas
dec
scas
ljmp
rorb
xor
std
mov
or
fldt
jge
pop
push
ljmp
jge
add
gs
dec
or
dec
and
jo
mov
hlt
das
aam
adc
pop
pop
jae
push
ret
cmp
jmp
mov
mov
xor
fstps
jge
daa
sub
popf
rcll
mov
pop
into
jge
mov
sarb
rcrb
jmp
nop
xchg
fwait
cmp
mov
scas
aas
pop
sti
mov
popf
sub
xor
xchg
or
dec
leave
sbb
leave
dec
testl
call
cld
xor
loopne
fadd
shll
jecxz
xchg
mov
pusha
jmp
cmc
cmp
lret
dec
sbb
inc
fsubs
stos
sub
dec
pop
xor
dec
pop
pop
scas
mov
cmp
xor
mov
push
dec
repnz
loope
or
gs
xchg
jge
xor
jbe
ds
mov
add
pop
scas
or
cmp
push
icebp
test
inc
cmpsb
pusha
push
test
mov
jmp
cmp
rcl
nop
in
mov
and
pop
in
das
and
dec
mov
js
adc
push
mov
rol
jno
cmc
dec
fs
or
popf
add
mov
sbbl
mov
adcl
ret
dec
inc
push
in
std
jo
and
xchg
icebp
hlt
nop
adc
movsl
or
pop
fcmovnb
scas
mov
shlb
lea
add
out
pop
in
je
mov
insb
nop
inc
xor
ret
shll
stos
dec
fnsave
movsb
pop
out
adc
lret
call
and
stos
movsl
cltd
inc
cmp
cmc
pop
sbb
iret
add
sbb
movb
mov
daa
xor
xor
das
jle
outsb
das
in
push
ds
mov
movsb
jne
push
lods
gs
mov
fwait
fwait
ret
test
mov
dec
pop
pop
pop
pop
lock
cmp
call
xor
mov
xor
pop
lahf
mov
or
icebp
push
fsts
push
pop
mov
aas
fmuls
sbb
loopne
test
or
sbb
adc
loop
movsl
cld
mov
cmp
jmp
lahf
insb
jle
inc
mov
adc
push
outsl
inc
shlb
lods
cli
pop
xor
into
xchg
fwait
sbb
dec
rolb
lret
jne
jmp
sub
xchg
cli
mov
rcrl
orps
ljmp
lret
or
js
pop
sub
jmp
xlat
out
jae
jae
xchg
aaa
xor
imul
test
inc
jns
mov
popa
jo
or
mov
gs
cli
pop
test
repnz
add
mov
mov
stos
dec
cli
fnstenv
daa
dec
mov
jbe
cwtl
scas
xchg
test
pop
adc
and
fwait
pop
inc
pushf
cmpsb
push
in
add
ret
add
pop
aas
push
lea
mov
shll
idivb
dec
xchg
sub
and
js
push
scas
jecxz
adc
or
ljmp
into
add
mov
inc
cmp
js
mov
into
iret
enter
repnz
cld
gs
outsb
lea
es
push
push
loopne
cmpsl
pop
in
mov
in
sahf
mov
cmp
dec
bound
mov
testb
mov
and
inc
jp
xchg
mov
movsb
jno
jl
test
lods
mov
aaa
push
push
leave
jae
test
jbe
outsb
mov
mov
test
ficoml
test
inc
or
cltd
data16
and
mov
lahf
xor
adc
push
inc
jo
popa
jne
loopne
imull
xor
dec
stos
hlt
inc
into
ljmp
xchg
lock
cmp
sub
ds
jbe
test
sub
and
je
xor
shrb
mov
push
push
in
and
ljmp
and
in
test
sbbb
fstpt
add
in
push
jno
pop
cmp
fwait
inc
and
jg
into
mov
sub
mov
mov
negl
or
fildll
fsubs
aam
cs
decb
inc
push
cmp
pop
es
jae
cmp
lea
gs
mov
fnstenv
mov
stc
lods
dec
jns
idivl
test
repnz
fsubs
xor
dec
scas
xchg
orl
sbb
movsb
mov
mov
and
adc
mov
stos
out
push
mov
xor
adc
mov
or
cli
mov
sbb
mov
and
aas
push
gs
adc
scas
scas
sub
pusha
es
test
lret
add
mov
leave
jo
xchg
jmp
cmp
iret
decb
mov
ret
mov
sbb
shrb
mov
pop
outsb
movsl
lods
pop
or
repnz
loop
sub
or
pop
inc
jnp
int
lods
jmp
jp
pop
lods
push
imul
cs
mov
add
leave
mov
movsl
mov
cmp
jmp
out
cmp
ficompl
push
mov
xor
jnp
mov
cmp
mov
hlt
mov
fidivrs
in
xor
jmp
pop
adc
mov
mov
stos
bound
aas
push
int3
pop
inc
cmpsl
sbb
cmp
out
cmc
clc
or
jmp
or
ds
fwait
inc
pusha
in
or
add
cmpsl
xor
and
out
adc
push
jno
lds
mov
scas
adc
lea
fwait
mov
inc
xchg
shlb
cmp
repz
bound
and
mov
add
adcb
adc
sbb
mov
lea
adc
std
mov
rolb
lret
loop
stc
xchg
inc
or
pop
mov
xchg
aaa
xlat
pop
les
fisttpll
or
sbb
shl
pop
xorb
cld
xor
cs
int3
imul
sub
and
cwtl
cmp
jle
sub
sbb
shlb
scas
int3
aad
sbbl
pushf
sbb
fcmovnbe
mov
pop
es
jle
pusha
pop
pop
sbb
divb
aad
push
dec
stos
cmpsb
dec
iret
incl
dec
idiv
cmpsb
addr16
and
xchg
test
or
dec
sbb
pop
filds
mov
or
mov
divb
mov
cmpl
loopne
cli
pop
xor
inc
inc
pop
mov
inc
pop
jae
insb
push
aam
push
and
inc
mov
xchg
out
cmp
mov
inc
ret
roll
and
jo
bound
rol
mov
mov
insl
insl
roll
xchg
dec
and
leave
push
mov
sbb
scas
or
or
mov
dec
push
push
ljmp
lcall
dec
xchg
adc
mov
fsubr
pop
in
or
dec
push
lcall
push
jns
mov
lock
add
and
xor
push
xor
pop
scas
cmp
push
arpl
adc
movsl
sub
push
jbe
xor
mov
mov
add
mov
enter
mov
mov
or
pop
test
es
cmp
mov
loop
aaa
mov
arpl
mov
enter
sub
push
mov
push
addr16
sub
loop
cmp
mov
cmp
jge
loop
add
mov
pop
pop
ret
jecxz
nop
dec
add
mov
sub
pop
add
cmp
mov
imul
lods
mov
iret
enter
or
shll
fucomp
jl
cmp
mov
in
lcall
pop
leave
ret
push
mov
sub
push
push
push
mov
and
mov
and
shrd
shr
andl
mov
or
mov
neg
xor
cmpl
movl
mov
movzwl
mov
jmp
mov
mov
cmpl
jg
pushl
pushl
pushl
pushl
call
or
xor
mov
sbb
mov
xor
mov
xor
or
sbb
mov
mov
jmp
lods
cmp
xchg
dec
mov
popf
outsl
cmpsl
cmp
mov
mov
adc
cmp
inc
mov
es
or
cmp
test
xchg
sar
sbb
cli
or
sbb
push
sti
xor
add
fiadds
mov
popf
push
jmp
and
inc
insl
popf
mov
push
push
scas
outsb
inc
pop
icebp
dec
mov
aad
repz
push
push
scas
jg
stc
or
jo
icebp
sbb
daa
push
xchg
mov
mov
sub
sbb
pop
push
and
sbb
test
jb
jb
jp
fdivs
gs
sbb
inc
xchg
lods
or
loope
clc
xchg
rcrb
outsl
and
mov
cmp
dec
jle
xlat
stos
in
data16
xor
fwait
sbbb
mov
cmpl
ficomps
add
sbb
mov
popf
ret
insb
sub
scas
adc
scas
rcrb
fisttps
insl
pushf
push
adc
addr16
iret
lods
jl
pop
lods
dec
js
mov
sub
gs
nop
adc
xchg
insb
mov
mov
test
push
repz
adc
pop
jmp
jmp
fwait
add
dec
pop
testl
stos
negb
push
les
adc
and
enter
addr16
push
adc
cmp
or
push
sti
adcb
add
test
in
add
lock
inc
aas
aam
out
into
jg
das
fstpl
je
out
mov
std
jge
sbb
xchg
xor
lea
add
xchg
imul
and
jb
mov
push
pop
outsb
dec
cmp
ljmp
lcall
mov
scas
scas
inc
pop
mov
push
or
out
ret
fisttpl
fdivrp
or
mov
dec
pop
call
dec
sbb
sub
movsb
cmp
push
hlt
fdivs
dec
fisttpll
xor
add
lods
cltd
pop
jp
jb
loop
or
mov
hlt
cltd
mull
xchg
clc
mov
xchg
push
and
scas
fwait
cwtl
jle
cmc
dec
pusha
sub
shufps
jge,pt
xor
nop
jae
and
jns
pop
and
xchg
mov
fsts
xchg
iret
outsb
imul
jbe
gs
mov
out
xchg
cs
adc
jbe
push
or
dec
mov
mov
adc
jg
push
pushf
push
bound
negl
mov
cmpb
xchg
ss
mov
movsb
enter
jns
cmp
fdivrs
insb
cmp
or
iret
push
adc
clc
lret
fwait
pushf
inc
daa
push
sub
fadds
adc
jns
adc
or
sbb
out
mov
mov
sub
pop
or
mov
mov
and
mov
in
or
sti
dec
shrl
adc
sti
sub
arpl
loop
stos
das
pusha
inc
dec
mov
dec
add
sbb
cmpsl
pop
std
test
dec
lods
push
out
orl
cltd
pop
es
shl
mov
shrd
xor
or
shr
and
mov
mov
xor
mov
xor
add
sub
xor
or
add
mov
mov
mov
sbb
mov
mov
add
mov
mov
xorl
mov
adc
mov
and
mov
mov
adc
shl
xor
addl
shld
mov
adc
shl
mov
mov
sub
or
mov
neg
mov
mov
cmpl
mov
mov
jmp
mov
mov
cmpl
jg
push
push
push
call
mov
add
mov
neg
sbb
adcl
xor
add
mov
orl
xor
notl
xor
movl
movl
movl
mov
movl
cmp
jne
movl
cmp
movl
je
cmpl
movl
movl
mov
jmp
movl
movl
cmpl
jg
push
call
subl
sub
xorl
addl
subl
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jne
pushl
call
subl
movl
sub
adcl
adcl
sub
mov
addl
xor
subl
shld
shl
xor
cmpl
mov
mov
jmp
movl
movl
cmpl
jbe
push
call
sub
and
movzwl
add
dec
and
xor
mov
add
or
mov
xor
mov
mov
movl
cmp
movl
jne
movl
cmp
je
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
call
sbb
inc
sub
and
mov
mov
movzwl
add
push
notl
jmp
xor
je
mov
inc
jno
shrl
nop
lds
or
inc
cli
ret
xchg
mov
or
mov
cmpsl
int3
cmpsl
adc
sbb
pop
lock
lcall
lods
out
test
into
and
or
stos
lahf
js
pop
aaa
aaa
pop
or
mov
jbe
stc
lea
cwtl
and
or
jns
inc
sub
repz
mov
sbb
cli
and
lea
ret
sub
out
mov
mov
pop
mov
xrelease
inc
mov
jae
cmp
add
aas
jle
xor
jle
in
clc
mov
adc
jmp
and
jp
sti
scas
rcrl
leave
mov
xor
rep
mov
frstor
aaa
fidivrs
iret
pop
and
ljmp
js
adc
daa
xchg
lock
stos
loop
cs
add
les
dec
test
out
out
adc
rcll
sub
das
mov
cmp
test
pop
xchg
and
mov
jl
push
out
xchg
push
pop
xor
das
mov
mov
cwtl
ret
lock
stos
fisubs
add
lret
or
or
cmp
pop
outsb
push
push
add
out
scas
iret
and
pop
lret
loop
lcall
roll
enter
cmc
inc
cmp
shr
ret
dec
cmp
push
mov
jmp
outsl
mov
dec
add
aaa
loope
aas
fcoml
movsl
adc
mov
push
mov
push
sub
out
cmc
shr
iret
fs
add
pop
test
repnz
data16
std
sub
and
insb
ljmp
loopne
mov
lock
push
mov
sti
movsl
push
movsb
movsb
adc
movsb
pop
aam
fwait
mov
fs
shl
mov
int
jl
hlt
fcmovnu
sub
pop
or
jno
push
lcall
loope
clc
xchg
cld
fidivrs
ja
in
pop
jbe
enter
lods
jb
imul
pushf
not
mov
jno
repnz
bound
jno
sub
cmp
test
loopne
insl
addr16
push
adc
in
movl
cmpsl
inc
out
sub
stos
jecxz
lea
movsb
mov
sbb
jns
lods
jmp
inc
or
sub
jl
inc
cmp
sbb
mov
scas
ja
mov
jecxz
xor
mov
int3
sub
in
std
mov
pushf
jbe
pop
cmp
je
xor
inc
pop
and
or
mov
inc
out
and
jl
hlt
push
cmp
adc
imull
xor
push
movsb
icebp
andb
push
daa
jecxz
and
movsb
add
cmpsl
daa
aam
mov
subl
jno,pn
adc
ficoml
lock
or
cmpsb
in
add
sbb
push
out
rcrl
imul
mov
and
sbb
add
pop
and
push
shl
sar
mov
pusha
daa
lods
shl
rclb
xor
or
xor
movzwl
sub
mov
shl
cmpl
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
push
push
push
call
adcl
xor
xor
sbb
sub
mov
mov
sbb
or
mov
xor
mov
sbb
mov
xor
shr
or
sub
mov
cmpl
movl
mov
jmp
movl
mov
cmpl
je
push
pushl
call
neg
xor
xor
add
xor
add
sbbl
mov
mov
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
push
push
pushl
call
xor
sbb
xor
sub
mov
mov
and
mov
push
movzbl
adc
pop
movl
jmp
cmc
outsl
mov
loope
jno
ret
sbb
mov
pop
aam
or
sbb
std
jmp
out
push
adc
and
popf
push
arpl
out
xor
clc
ret
test
movsl
stos
pop
cmp
test
sub
push
pushf
dec
add
add
movb
xor
lock
fstpl
mov
outsb
fists
lods
jg
ffree
imul
ret
mov
out
pop
stos
les
mov
cs
and
jge
pusha
and
inc
leave
mov
std
data16
mov
or
dec
repz
xor
mov
arpl
and
sub
jmp
and
push
pushl
inc
repz
pop
repnz
loope
push
aad
push
fs
mov
loopne
xor
pop
ret
xor
dec
out
aam
fs
addr16
nop
xchg
movsb
sbb
imul
mov
adc
inc
test
xchg
mov
ret
adcl
aas
mov
nop
fnstsw
pop
pushf
je
dec
enter
xchg
cltd
mov
bound
push
hlt
jns
jno
push
dec
jge
fisttpll
daa
aad
enter
jecxz
mov
outsl
pop
add
push
lods
out
das
xchg
je
and
test
ror
insb
imul
jmp
jb
pushf
into
inc
test
push
das
mov
scas
clc
scas
out
cmc
inc
shrb
cmpsl
jp
lret
leave
xor
in
jg
mov
jle
jno
push
push
dec
pop
scas
add
or
dec
imul
sub
xor
sub
jbe
popa
cmp
int3
cmpsl
out
aas
inc
or
inc
hlt
in
aad
out
adc
sbb
test
lds
dec
mov
sbb
imul
cmpsl
cli
outsb
push
loopne
icebp
xchg
call
arpl
ds
cmp
iret
xchg
ss
lret
xchg
data16
push
fstpt
mov
stc
push
and
mov
fdivrs
mov
mov
fyl2x
jne
testl
sbb
or
sbb
aaa
xlat
loope
shlb
push
and
xor
stos
xchg
mov
out
out
fwait
das
mov
cmp
das
cmp
test
mov
sbb
sub
addl
pop
aam
mov
pop
sub
repnz
sub
test
dec
imul
mov
push
ljmp
scas
push
or
cmp
push
mov
insb
add
out
cltd
or
adc
xchg
push
cwtl
xor
shlb
add
push
mov
or
jle
test
in
addr16
jecxz
cmp
data16
xchg
xchg
popfw
mov
push
inc
jle
sub
std
popa
shl
add
add
push
inc
push
test
mov
movsb
lds
imul
ljmp
or
jle
arpl
sti
shrl
dec
fwait
jb
sub
push
iret
nop
lods
xchg
pop
xor
outsb
mov
lods
xchg
scas
mov
fcmove
xor
xchg
dec
fisttpll
adc
popa
and
push
xor
popf
dec
mov
inc
mov
or
inc
ss
adc
shl
mov
add
mov
movzbl
or
lea
cmpl
movl
not
jmp
mov
cmpl
jb
push
pushl
push
push
push
call
sbb
mov
mov
adc
adc
and
adc
neg
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
cmpl
jb
pushl
push
pushl
pushl
call
and
xor
xor
sub
mov
movl
adc
adc
and
mov
mov
xor
add
sub
or
mov
and
mov
xor
adcl
xor
xorl
shr
andl
shl
notl
or
neg
jmp
xchg
or
adc
test
sti
std
push
arpl
cltd
mov
mov
adc
add
stos
sbb
icebp
pushf
cmp
pop
mov
sub
mov
in
and
daa
mov
movsb
sbb
js
pop
and
lea
lods
push
shrl
add
movzwl
loopne
push
fisubl
rorb
mov
mov
pop
jmp
repnz
cmp
ss
and
clc
dec
aas
insl
scas
out
inc
insb
sti
outsb
outsb
sbb
cmp
pop
and
insb
xchg
jbe
inc
pop
dec
jbe
scas
test
cmp
int3
mov
int
dec
test
clc
cmc
xchg
test
mov
fadd
jns
inc
les
mov
mov
pop
fistpll
push
fs
inc
rol
mov
push
and
int
and
sahf
cmc
data16
cmp
clc
adc
and
cwtl
dec
repnz
push
mov
sbb
pop
add
mov
imul
dec
cmpsl
or
add
ret
rcrb
adc
add
fs
les
push
and
ss
loope
and
clc
jnp
adc
fildll
dec
in
test
repz
mov
inc
sbb
neg
into
adc
or
xor
adc
push
and
or
cmp
jp
sbb
inc
movsb
adc
iret
sub
stc
mov
jle
sarb
push
fsubp
xchg
testl
aam
mov
push
fsubp
or
adc
out
pop
call
mov
imul
cmp
xorl
stos
in
jbe
xchg
inc
insb
sub
push
pop
cltd
cli
mov
xchg
icebp
push
push
dec
clc
aas
mov
or
in
mov
loope
push
lret
lret
dec
cmp
aas
fists
test
push
fwait
pop
inc
ret
popa
imul
jmp
mov
outsl
aam
fs
bound
out
insl
mov
pop
jmp
mov
xor
dec
ja
sub
mov
cmc
pop
leave
pop
or
imul
push
pop
rclb
popf
ljmp
adc
sub
adc
mov
xchg
cs
pop
es
add
xchg
dec
mov
lahf
or
push
out
out
cli
outsb
lret
fsubr
stos
sub
inc
xchg
iret
pop
out
add
sub
in
xchg
xchg
or
add
std
or
add
stos
lcall
mov
mov
inc
pop
sub
cld
mov
leave
test
xlat
int
decb
mov
andb
push
jno
test
sbb
pop
dec
add
pop
sbb
popf
cld
push
jo
pushl
sahf
push
push
test
xor
ljmp
arpl
test
xchg
enter
cmp
mov
arpl
fnstcw
fbstp
and
cvtdq2ps
xor
sub
movsl
lods
aad
cmp
push
scas
inc
and
mov
cli
fisttpll
jg
jmp
int
sub
add
fimull
xchg
addl
addb
and
add
add
add
shr
imul
add
add
mov
rolb
add
jae
push
push
push
push
push
push
call
xor
xor
add
sub
mov
adc
add
or
addl
movl
mov
mov
jmp
xchg
xor
xor
popf
mov
mov
fwait
mov
mov
inc
xchg
imul
push
pop
mov
cltd
cmc
out
cmp
jnp
push
int3
dec
and
sbb
push
ret
faddl
mov
lock
movsl
jp
cmpsl
jp
rcll
inc
cmp
out
or
iret
jmp
jecxz
jmp
movsl
in
movsl
int3
pop
push
inc
cli
daa
xchg
pop
jge
rorb
outsb
test
dec
cmp
rol
and
sbb
inc
ja
inc
sbb
sub
pop
jg
in
sahf
cmp
push
mov
ljmp
inc
xor
int
cmp
negl
imul
jl
adc
orl
add
subl
mov
inc
lods
je
xchg
sub
adc
cld
loop
insl
inc
sbb
cmpsb
mov
pop
andnps
jmp
cld
mov
jo
add
das
or
loopne
adc
mov
dec
ja
push
imul
aas
jp
fwait
mov
cmpl
insb
and
sub
lcall
repnz
and
rcr
test
jbe
push
push
repz
pop
es
pop
mov
jmp
adc
sub
push
xchg
jae
jp
mov
dec
lret
inc
test
out
sub
jnp
int3
lock
outsb
push
faddl
xor
dec
cmc
xor
dec
jmp
movl
and
sub
and
out
fmull
hlt
adc
orl
fnsave
test
mov
push
mov
mov
mov
pop
push
pushl
or
aad
xor
xchg
imul
jle
sarl
mov
ja
add
cmpb
clc
mov
pop
in
aas
call
outsl
outsl
xor
aam
lret
shlb
outsb
jbe
fisubrs
lahf
xchg
cs
pop
and
push
adc
pop
and
test
inc
and
iret
sub
jae
insb
sub
sarl
shll
fcmove
inc
inc
enter
jb
shr
inc
dec
cmp
lahf
add
leave
mov
aad
addr16
pop
jp
orb
pop
shrl
dec
mov
pop
testl
mov
scas
lahf
movsl
or
dec
ss
sub
mov
cwtd
pushf
xlat
push
sbb
and
pop
rcrl
or
test
arpl
jne
jl
mov
hlt
cmp
fisubrl
push
mov
popl
mov
dec
dec
outsl
mov
add
aas
js
lcall
pop
scas
jge
cmp
adc
cmp
data16
fdivl
lcall
pop
testb
fsubs
add
aam
jl
adc
es
aad
xchg
fidivrl
xor
out
mov
xor
subb
out
les
ret
push
ss
into
pop
sub
pop
cmp
imul
or
cmpsb
and
enter
inc
fmull
jae
fiaddl
jle
inc
xchg
pop
mov
movsb
fstpt
repz
mov
push
or
adc
insb
cmp
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
jmp
and
sub
xchg
and
lret
mov
mov
push
aas
outsb
repnz
outsl
in
loop
mov
pop
loope
adc
and
jmp
mov
jmp
or
insl
adc
and
jl
mov
mov
pop
jmp
mov
sub
outsl
jge
pop
push
sub
xor
pop
adc
xchg
jb
shll
movsb
jo
fstps
sti
jge
sub
lock
lock
xchg
cmp
int
jae
sbb
test
popf
sar
ficoml
les
push
or
lock
add
int
cwtl
or
and
push
and
insl
push
mov
mov
adc
fadd
mov
ss
xchg
jmp
add
loope
mov
icebp
sahf
or
incb
arpl
stos
sub
or
daa
fs
xchg
repnz
cs
dec
js
ljmp
rcl
adc
xchg
ljmp
xor
mov
add
lods
mov
fiadds
dec
rcll
call
push
ds
clc
or
in
stos
add
outsl
inc
test
cmpsl
stos
pop
sbb
xor
cmp
xor
jne
push
jle
xchg
popf
xchg
cmp
xor
sbb
dec
xor
ja
mov
lcall
push
dec
fadds
xchg
add
xor
sub
jecxz
jle
int3
jmp
test
sahf
in
nop
xor
add
testb
adc
or
hlt
or
adc
fcompl
lret
lcall
pop
mov
push
pop
adc
imul
lds
enter
insb
inc
mov
sub
clc
out
adc
dec
cmc
push
push
adc
push
or
xchg
decl
test
cmpsl
xchg
sub
aam
lret
inc
out
scas
and
mov
or
paddusb
pusha
push
dec
xor
push
cmpsb
mov
sbb
jns
enter
add
icebp
in
mov
outsb
jb
out
push
and
out
xor
sub
cmc
nop
dec
cs
jl
pop
add
sbb
loope
popf
dec
push
xor
ljmp
es
into
mov
xor
dec
and
outsl
pop
mov
or
ret
inc
xor
test
cmp
arpl
in
jo
push
pop
loop
mov
ss
jo
mov
sub
jecxz
sbb
and
icebp
push
das
mov
into
cs
jg
jp
iret
sarl
jnp
or
outsl
push
sbb
dec
inc
shlb
outsl
rcrl
in
add
jle
shlb
aaa
icebp
dec
int
mov
add
sbb
inc
and
pop
add
lods
adc
and
sbb
inc
mov
cmp
inc
shll
in
leave
inc
idivb
daa
push
xor
mov
icebp
movsb
mov
cmpsl
cs
jnp
sbb
xchg
push
adc
test
jge
add
push
aas
movq
sub
pop
xorb
std
push
testl
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
jmp
inc
aaa
mov
mov
mov
inc
sbb
sti
aaa
fwait
pop
inc
mov
lds
or
adc
ds
pop
ja
push
shlb
push
push
dec
mov
test
lock
pop
push
mov
cmp
enter
or
lods
lods
imul
mov
fcomp
or
inc
bound
cmp
or
sbb
dec
je
pop
cli
jmp
add
stos
mov
pop
addr16
neg
imul
mov
enter
scas
cmc
lret
sub
pop
xchg
rolb
adc
movsw
sbb
popa
sbb
cmp
cwtl
adc
test
in
push
idivb
imul
mov
sub
sti
scas
mov
mov
jg
stos
mov
pop
push
dec
lret
pop
cmp
int3
mov
stc
jbe
xor
rolb
mov
cmpsb
fidivs
jmp
insb
or
xchg
mov
cmpl
push
push
pusha
jmp
icebp
push
add
out
addr16
rcrb
sub
shrb
cmp
into
xchg
mov
pop
mov
sti
jno
sti
xorb
pop
adc
stos
fcomps
xor
out
js
jnp
cwtl
xchg
xchg
loop
popf
inc
int
or
fdivrs
cs
out
or
adc
xchg
int
shl
cwtl
sbb
sahf
dec
push
add
mov
push
cmp
adcl
lds
fnstenv
jno
idivb
pop
inc
pop
or
pusha
into
pop
mov
ljmp
out
daa
daa
cmc
cld
add
and
loope
sbb
rcl
dec
push
fadd
cld
shlb
jno
fnstsw
fistpl
inc
andl
leave
bnd
jle
lret
jmp
mov
pop
mov
mov
out
bound
push
sub
fstpl
jns
sub
in
inc
push
add
push
mov
imul
mov
adc
aas
xchg
sbb
sbb
repz
pop
cmp
mov
or
sub
mov
js
icebp
xchg
dec
cmp
in
ds
xchg
mov
test
roll
inc
push
mov
push
and
adc
clc
xorl
and
pop
out
and
imul
and
sti
aad
cmpsl
int
push
xchg
mov
mov
cltd
push
ret
jns
xor
pop
out
stos
pop
cmp
inc
nop
mov
and
jae
outsl
lret
mov
cmp
pop
adc
insb
aas
int
popf
lea
hlt
scas
jge
movsb
cmpsb
mov
xor
cmpsl
arpl
or
dec
ss
jge
mov
mov
sub
sbb
arpl
fdivrl
cmp
mov
ret
das
add
clc
mov
mov
ficoms
pop
add
jg
dec
jno
jmp
leave
pop
xor
mov
and
imul
xchg
lcall
aaa
xchg
jbe
out
int
imul
in
shl
mov
dec
inc
scas
mov
cmp
jmp
stos
add
and
push
and
enter
mov
lods
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
jmp
int
adc
cmp
fnstsw
fcoml
outsl
outsl
scas
mov
mov
mov
pop
andl
lds
mov
jg
cmp
mov
mov
call
out
inc
cld
hlt
movsb
push
sub
sbb
xor
and
icebp
xor
fidivrl
jae
fdivr
mov
or
inc
lahf
pop
ss
inc
das
inc
test
sbb
sub
pop
sbb
test
arpl
jns
bound
loope
stc
ljmp
les
jle
xor
mov
push
imul
pop
sub
adcl
xor
jg
inc
cmp
mov
mov
in
ds
or
mov
out
adcb
pop
cmp
ret
fwait
ss
cmp
pop
cmp
movsl
fsubrp
cld
stos
mov
movsb
dec
ljmp
stos
mov
aas
js
scas
cmp
insb
lret
add
jmp
pop
js
hlt
enter
adc
insb
fldt
shlb
int
sbb
stc
mov
mov
xor
mov
cmp
jo
jno
ret
sbb
shlb
jno
repnz
arpl
lcall
shlb
cmp
neg
inc
aam
jle
cs
or
ret
aas
mov
cmp
push
add
jge
adc
mov
pop
xor
loop
xchg
aaa
call
pop
sub
in
and
or
xchg
inc
xor
add
mov
hlt
cmc
pop
dec
xor
inc
push
sub
push
pop
xchg
cli
out
mov
mov
jno
jo
scas
pop
lods
xchg
pop
cwtl
frstor
cmpsb
pop
popa
ss
push
mov
add
and
sub
jp
xor
cmc
cmp
mov
sbb
inc
imulb
sub
lods
mov
inc
mov
hlt
sarb
lds
adc
daa
dec
push
shlb
repz
sbb
xor
lods
adc
repz
test
cs
imul
cmp
sahf
and
loopne
dec
dec
jns
frstors
addr16
xor
adc
icebp
addl
in
out
pop
fistpll
push
push
in
mov
stc
mov
in
mov
addr16
sub
cli
bswap
sbb
xor
daa
mov
arpl
mov
ret
xchg
xchg
jecxz
jo
lret
lds
lock
pop
popf
add
or
popa
mov
push
clc
jg
sbb
out
lea
adc
xor
jbe
jne
push
addl
repnz
pop
test
mov
or
adc
xorb
sub
out
jne
fldt
jg
or
insl
enter
xor
cmpl
enter
mov
scas
mov
fnstcw
es
imul
xchg
cmp
enter
cmp
test
test
lods
or
loop
and
addr16
test
sbb
popa
push
bound
bound
fidivrl
xor
cmp
xchg
fwait
cmp
mov
xor
scas
sub
stos
mov
jl
arpl
lcall
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
jmp
fdivrs
mov
mov
adc
mov
mov
mov
mov
enter
mov
loop
popa
dec
dec
push
xchg
mov
jae
and
js
loopne
xchg
cli
js
insb
cmc
movsl
push
add
push
mov
pop
sub
sub
inc
jo
push
inc
movl
xchg
push
cmpl
or
jle
adcb
movsl
mov
add
stos
push
jne
push
push
adc
rcll
sub
movsl
loope
mov
out
jg
insl
jnp
adc
jae
xor
dec
test
sbb
pop
lret
je
pop
rorl
cmpsl
scas
add
jl
or
pop
xor
sti
mov
pop
test
into
mov
flds
mov
es
fnsave
dec
fidivrs
iret
inc
sub
aas
popf
jo
add
mov
rcl
outsb
push
gs
inc
imulb
inc
insb
lock
mov
xchg
insl
int
cmpsl
mov
mov
enter
out
mov
mov
js
test
jo
loope
or
sub
cmc
ret
push
push
mov
iret
xchg
inc
add
dec
cmpsb
adc
fs
pop
mov
mov
dec
jno
mov
js
mov
xchg
dec
les
mov
shl
cli
push
out
leavew
mov
out
int3
stos
mov
mov
and
jne
dec
and
mov
jne
test
enter
push
push
jecxz
pop
in
push
mov
xor
or
dec
in
cmp
shlb
add
sbb
lock
in
mov
popf
ficoml
jmp
pop
sahf
fisubrl
jecxz
jmp
cmp
fwait
test
fwait
jo
xchg
pushf
fsubp
das
shll
push
dec
mov
xchg
jg
fisubs
dec
call
nop
fst
and
jo
or
sbb
add
sahf
stc
mov
inc
lods
push
sub
jl
stc
mov
xchg
lods
xchg
orb
and
mov
stos
pusha
jmp
arpl
and
add
mov
repnz
inc
sbb
lahf
iret
repz
in
or
fxch
aaa
xlat
add
inc
pop
ds
js
ficomps
stos
add
notl
fildl
loop
jg
sub
mov
sub
mov
push
mov
xor
sub
pop
aad
add
xchg
jp
mov
nop
xor
in
aaa
lea
inc
fisubs
mov
push
jne
mov
or
jo
jmp
into
lret
dec
sub
fstpl
inc
adc
cld
or
adcl
and
fnstsw
mov
jns
inc
fstpt
xchg
mov
dec
loopne
adc
mov
jo
add
inc
jae
sarl
mov
in
test
out
sar
xchg
mov
lret
jno
mov
dec
mov
jg
cmpsb
mov
in
jno
sub
clc
dec
or
sbb
jle
ljmp
inc
fidivrs
push
in
pop
leave
sbb
shrd
shr
xor
mov
mov
xor
or
add
lea
jmp
and
cmp
andb
insb
cmp
rdtsc
adc
sarl
sti
adc
dec
test
in
out
mov
xorl
xchg
dec
out
push
ljmp
push
iret
jp
xchg
adc
jmp
or
mov
cs
enter
loope
ss
std
sub
mov
data16
mov
xchg
and
mov
push
dec
das
sbb
cmp
push
movsb
dec
and
or
dec
aas
cmc
add
jl
test
popf
inc
sbb
push
pop
jae
pop
xlat
neg
test
gs
add
adc
and
sbb
fdivs
lods
cli
mov
ret
out
and
mov
dec
lea
data16
inc
ror
xor
fisttps
add
ss
inc
test
push
push
cmp
dec
pop
inc
mulb
mov
xchg
add
mul
inc
push
or
repnz
and
jno
or
test
sbb
stos
jecxz
rorb
cwtl
sub
scas
es
xor
insl
je
add
sub
aad
fcmove
aaa
xor
sub
sti
xchg
jno
cmp
inc
stos
clc
jo
dec
lods
mov
loopne
mov
dec
or
cltd
test
enter
mov
xchg
test
and
cmp
add
and
or
xor
lret
inc
in
fcmovu
sbb
xchg
sub
adc
mov
mov
dec
pop
out
inc
pop
sar
cwtl
and
movsl
roll
loopne
pop
popa
xor
mov
mov
cmp
jo
mov
jl
mov
add
outsl
int
mov
rol
je
mov
xchg
pop
inc
insb
push
pop
imulb
sub
mov
mov
lods
pop
jmp
push
adcb
icebp
pop
js
xchg
jmp
cld
push
loopne
ja
cmp
add
and
xchg
negl
ret
mov
cmp
mov
insl
test
sub
or
dec
sbb
pop
pushf
jge
ljmp
jmp
scas
mov
lods
xor
inc
ds
inc
adcb
negl
lahf
inc
mov
ret
ljmp
jnp
mov
inc
xorl
lods
xor
add
mov
addr16
mov
or
lea
lods
sub
outsb
jno
movsl
in
imul
jno
push
imul
cmpsb
xchg
dec
les
jo
dec
cmp
movsl
xchg
pop
sub
lcall
aas
or
lods
inc
pusha
jmp
jl
xlat
int
pop
test
mov
add
inc
xor
insb
into
repz
hlt
test
mov
inc
imul
in
cwtl
fcmovnb
sub
jo
mov
pop
in
jecxz
push
jno
mov
mov
xchg
mov
adc
pop
fnstenv
hlt
mov
jl
xor
cltd
sbb
jns
sarb
mov
xchg
das
test
and
addb
jns
mov
aam
inc
or
xor
push
push
andl
pop
adc
mov
adc
fxtract
sbb
mov
sahf
iret
insl
push
xchg
stc
mov
loop
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
fbld
pop
mov
push
cltd
outsl
jmp
lds
push
push
lcall
lods
sbb
dec
or
fmuls
sbb
sbb
mov
xchg
nop
sahf
and
inc
sbb
fsubrl
mov
test
sub
pusha
out
imul
jle
pop
mov
outsb
or
sahf
add
loope
mov
push
dec
inc
ljmp
movsb
mov
lods
or
and
mov
push
cmp
jg
jle
jl
mov
sarl
inc
dec
sahf
push
mov
and
ret
adc
cltd
and
add
in
sarb
test
ficompl
adc
pop
scas
jns
int
les
sbb
pop
mov
mov
test
ficomps
fstpt
js
arpl
negb
cs
into
ret
cli
lretw
pushf
aad
xchg
shll
sub
xlat
adc
ja
xchg
popf
aas
ljmp
in
sahf
mov
int3
jbe
mov
mov
jae
arpl
ret
jnp
mov
fidivrs
addr16
jo
into
jecxz
xchg
jp
cmp
jnp
outsb
inc
mov
inc
push
mov
mov
cs
cld
xor
out
push
cld
fldt
add
push
sbbb
repnz
test
mov
popf
paddusw
jmp
push
insb
lcall
push
idivb
movsb
icebp
loop
cmp
iret
fnstenv
lock
push
ret
ret
mov
outsb
clc
add
lahf
sub
mov
stos
or
and
cmc
mov
movsb
dec
adc
push
mov
or
test
fsubl
xchg
pop
add
lret
aam
mov
xor
xchg
xchg
movsl
sub
adc
cld
jnp
add
cmp
aas
shlb
mov
inc
scas
aaa
rcrl
xchg
mov
pushl
test
movsb
jg
adc
daa
subl
mov
movsb
add
push
loopne
fnstsw
popf
pushf
ljmpw
aad
push
mov
sbb
stc
mov
pop
rolb
add
xor
imul
jo
mov
mov
fadds
aaa
dec
aas
in
add
mov
fldl
mov
mov
and
mov
push
mov
and
loopne
fidivl
inc
adc
fwait
shlb
fistpl
add
mov
out
xlat
dec
inc
ss
adc
add
into
ret
xor
add
test
scas
xchg
xchg
push
ss
sub
aam
fcompl
addr16
fwait
daa
cltd
je
add
jae
and
and
test
push
dec
push
add
sub
cli
push
addl
or
out
call
jns
mov
add
mov
adc
negl
sub
cmp
std
mov
push
jp
daa
push
xlat
hlt
push
fstpl
in
fcomps
test
in
jns
rcr
les
data16
xlat
mov
aaa
sbb
push
push
aad
aad
scas
dec
mov
push
mov
mov
push
jmp
cmpsb
inc
push
nop
mov
lods
jl
rcrl
xor
jbe
jno
lret
sarl
jg
cmp
sub
push
pop
mov
out
pop
stc
stos
dec
ret
fcompl
lea
fisubl
adc
inc
and
pusha
repnz
cltd
sahf
lea
sbb
jmp
lock
pop
push
cmp
ljmp
in
adc
pop
mov
jb
sub
jbe
jmp
je
dec
scas
out
pop
xor
xchg
and
pop
xor
jge
bound
mov
cmp
push
pop
adc
test
xor
scas
fucomi
fwait
jl
aam
sub
aam
cmp
mov
inc
stos
pop
ja
dec
in
lcall
popa
cmp
shll
add
xor
mov
lahf
je
sbb
jnp
sub
rolb
in
xor
cmp
mov
scas
jmp
sub
popa
int
out
lock
xchg
and
cltd
jge
leave
and
in
mov
pop
aad
sbb
inc
into
icebp
sbb
mov
mov
insl
jnp
adc
dec
push
fstpt
jno
mov
mov
sbb
shl
push
nop
cwtl
push
and
xchg
jo
cmpsb
dec
lret
sbb
mov
cli
xor
lock
sbb
or
xchg
push
and
pop
and
inc
sbb
mov
push
adc
adc
je
nop
insl
xchg
jne
loopne
loopne
dec
cli
daa
mov
pop
inc
test
jno
in
sarl
fiadds
sbb
out
sub
jb
mov
ret
in
cs
lock
or
xchg
mov
imul
push
add
popa
icebp
and
call
lret
jmp
enter
rorl
inc
out
add
jge
jnp
pusha
flds
pop
and
cmc
cli
inc
ret
sahf
iret
or
loope
pop
and
push
insb
das
and
in
jnp,pn
fildll
mov
icebp
sarb
ret
ss
in
mov
dec
aad
aad
jne
arpl
lods
inc
andnps
cmpl
enter
stc
pop
lds
pop
and
pop
mov
sub
daa
sti
lods
mov
fldt
sbb
push
mov
movsl
aam
sub
hlt
xor
mov
mov
jns
jns
aas
add
push
adc
fwait
in
js
jbe
mov
push
jne
jnp
outsl
cmp
fisubs
sahf
pop
sti
das
pop
xchg
movsl
test
ja
repnz
pop
rol
pop
mov
or
mov
cli
hlt
rcrl
sbb
sub
fildl
mov
add
mov
in
cli
cmc
jle
push
jg
sub
pop
out
je
mov
and
lock
pop
dec
lahf
sti
lods
fcompl
mov
mov
cli
lds
testl
int
int
push
shrl
mov
jecxz
notb
add
leave
sub
pop
fdiv
shr
jle
and
popa
pusha
adc
cwtl
xchg
stos
or
out
int
sub
jo
fdivs
cmp
loope
call
lea
push
mov
jmp
imul
xor
das
aad
mov
fwait
jmp
dec
jns
outsb
sub
lock
ja
push
sub
cmc
mov
xor
cld
gs
scas
mov
push
cmp
xor
movsl
mov
dec
push
adc
pop
xor
mull
jmp
dec
jb
pop
xor
dec
mov
adc
dec
or
in
xchg
push
mov
pop
sub
pop
icebp
lret
jns
scas
dec
divb
sub
stos
add
enter
arpl
or
and
arpl
adc
stc
adcl
inc
xor
inc
lds
jno
or
aad
mov
cmpb
fstps
lret
lahf
mov
push
push
inc
pop
es
jmp
add
fwait
shlb
push
hlt
inc
aas
xorl
out
fisubs
popl
or
lods
hlt
sarb
adc
ret
in
add
sub
inc
pushf
movsb
in
cmpl
dec
sbb
cmp
hlt
xchg
sbb
mov
movsl
dec
pop
mov
add
lods
div
rcrl
push
repz
adcb
adc
hlt
xchg
jg
xor
push
xchg
out
mov
jmp
sarl
ljmp
loop
ss
pop
scas
add
xchg
movsl
daa
outsl
fcomps
push
xor
lea
add
mov
jg
into
jo
pushf
adc
cld
stos
dec
xor
cli
inc
mov
bnd
in
into
ret
inc
cmpsl
mov
cmpsl
cmp
imul
add
popa
repz
das
sbb
je
in
or
aaa
addr16
jne
fsts
popa
jp
inc
arpl
pop
xor
movsl
icebp
rcl
idivl
scas
nop
mov
inc
cmpsl
pop
mov
lret
lods
adc
push
arpl
ficoms
js
jge
rorb
outsl
cltd
cmp
stc
loopne
mov
mov
push
and
cli
loop
adc
pop
or
xchg
sahf
mov
ficompl
subb
ret
fst
cmp
dec
pop
testl
and
xor
push
imul
int
insb
or
dec
scas
sbb
pop
clc
sub
xchg
and
mov
push
jae
imul
rorl
outsl
test
lods
in
add
aas
dec
stc
dec
clc
lret
push
inc
push
in
cmp
ds
cmc
push
push
mov
xchg
in
in
jno
add
jno
imul
mov
leave
dec
jb
cld
dec
addl
xor
hlt
insb
shll
ret
das
adc
mov
notb
dec
sub
jo
cmp
xchg
xchg
fbld
sbb
fstps
aaa
adc
and
loope
push
mov
mov
bound
mov
mov
mov
jns
add
cmpsl
jo
outsb
xor
in
das
out
xchg
gs
out
lahf
ds
cmp
movsb
jae
cmp
inc
arpl
xor
pop
lea
sbb
mov
mov
decl
enter
add
adc
xor
jmp
mov
cltd
mov
outsl
push
xor
sarl
test
push
div
inc
cmp
dec
frstor
mov
flds
xor
flds
mov
sbb
lcall
stc
lods
cmpsb
mov
mov
fxch
test
push
outsb
jne
push
les
scas
test
cwtl
iret
xchg
popa
inc
lods
sbb
jg
dec
push
ja
cmpsb
idivb
pop
mov
lds
mov
clc
sbb
pop
lret
loope
mov
mov
dec
dec
push
loope
hlt
mov
sbb
push
mov
sub
cwtl
pop
enter
jae
xrelease
outsb
jg
mov
inc
sbb
lods
movl
fistpl
je
cmp
mov
stos
aad
lret
mov
sbb
cmpsl
das
push
scas
popa
and
inc
shrl
hlt
fidivrs
mov
lret
repz
and
popa
cmp
call
popf
repz
jae
shrl
jge
ds
in
fidivrs
sub
inc
push
lods
sub
and
mov
add
loop
loope
loope
repnz
fisubrs
cmp
enter
pop
dec
arpl
repz
mov
dec
jmp
mov
mov
scas
ja
scas
mov
aas
cmp
jp
in
inc
test
pop
pop
mov
lret
test
rolb
cli
hlt
pop
sbb
jo
dec
dec
out
movsl
cmp
push
and
and
repz
outsl
ret
lret
mov
and
jecxz
outsb
xchg
std
leave
int
xor
mov
movsb
adc
or
xor
sbb
push
test
pop
sbb
cmp
cmc
nop
mov
adc
inc
imull
mov
pop
test
ret
and
pop
imul
or
loope
xchg
dec
jle
inc
popf
test
mov
dec
call
pop
inc
sub
mov
std
cmp
cwtl
mov
hlt
test
pop
add
in
push
jle
push
inc
movsb
jns
mov
mov
scas
call
call
mov
neg
add
or
adc
jno
xor
pop
xchg
push
adc
and
push
push
jb
xorl
inc
add
fucomip
es
les
nopl
mov
loope
push
aaa
xchg
mov
mov
enter
mov
push
arpl
out
inc
cmp
stc
or
inc
xor
adc
dec
sub
adc
movsb
dec
and
jo
cmp
mov
loop
cmp
sti
xor
test
mov
and
or
sub
cmpsb
mov
call
rcll
jae
pop
jl
sub
repz
or
enter
das
ljmp
lcall
cltd
sbb
testl
mov
insl
cld
testl
xor
mov
addr16
dec
fisttps
outsb
pusha
icebp
mov
jae
add
enterw
insb
repnz
pusha
rolb
dec
cli
leave
sbb
lcall
cld
jp
int
xor
pop
mov
or
mov
mov
push
pushl
jmp
lock
ficompl
in
xor
rcr
mov
add
nop
lds
adc
ja
sbb
and
aam
jmp
sarl
cmp
push
xor
mov
jmp
xchg
inc
mov
cmp
aaa
cmp
push
dec
data16
shll
mov
sbb
dec
data16
das
jecxz
mov
negl
dec
aas
push
or
xchg
jge
mov
mov
movsb
sarl
scas
xor
mov
jbe
ljmp
mov
add
stos
jle
adc
lods
and
mov
pcmpeqd
stc
xlat
mov
mov
sbb
mulb
sub
faddp
int3
imul
push
insb
adc
lea
xor
out
jb
or
icebp
inc
int3
fdivrl
mov
popf
push
cmp
and
dec
into
daa
subb
push
lea
push
jp
ja
mov
mov
repz
pop
xorb
sbb
out
cltd
or
mov
xor
mov
lcall
call
insb
or
mov
stos
pop
pop
sti
cmp
jecxz
push
test
jmp
jge
xchg
add
fsubr
loopne
pop
mov
inc
out
push
xchg
and
xor
add
jp
adc
cmp
addb
mov
and
outsl
inc
ds
iret
and
fdivrp
js
pusha
ret
iret
andl
jae
pop
push
sub
push
jmp
mov
mov
jmp
pusha
mov
mov
add
mov
es
popa
or
popf
loop
inc
pop
fs
lds
sbb
ds
pop
data16
mov
repz
pop
adc
lods
adc
iret
sbb
lods
pusha
mov
fidivs
stos
mov
push
out
out
leave
clc
repnz
add
sub
cmp
mov
sub
sbbb
addr16
dec
add
test
sbb
jmp
insb
pop
mov
dec
sub
mov
addr16
loopne
cmp
lods
insl
jle
hlt
pop
and
cmp
add
push
push
cwtl
out
push
stos
adc
mov
imul
arpl
stos
mov
xchg
test
mov
mov
push
jb
stos
roll
or
popf
xchg
out
bound
or
inc
push
gs
cmpsb
sbb
in
xor
movsl
ja
and
pop
xchg
loopne
iret
mov
push
inc
jnp
dec
mov
push
stc
jmp
xchg
je
sub
sbb
negl
xchg
mov
or
mov
jmp
aaa
add
cli
xor
inc
test
sbb
xchg
jnp
or
jecxz
incl
and
lahf
popf
mov
pop
scas
jno
push
in
je
jo
sbb
cmp
fs
mov
adc
daa
mov
sub
imul
nop
mov
mov
mov
aad
mov
xor
push
inc
out
mov
sti
xchg
mov
push
jae
xchg
shl
call
mov
mov
mov
mov
mov
mov
jmp
scas
int
jge
mov
add
outsl
out
mov
fadd
outsb
push
stos
pop
in
arpl
cmp
pop
and
in
loope
cmpsl
adc
push
lea
fbstp
arpl
push
psubsb
or
push
inc
out
pop
jge
sub
lcall
jge
movsb
mov
in
in
xchg
push
pop
imul
xor
sub
pop
add
fucom
mov
or
imul
push
negb
xor
xor
push
cmp
shrl
mov
cmp
fidivrl
scas
push
mov
mov
popa
mov
scas
rorb
push
ljmp
jbe
mov
sub
mov
mov
dec
push
cmc
icebp
ret
mov
in
mov
push
and
mov
insb
pop
cmp
inc
pusha
mov
sbb
push
pop
xchg
cmc
pop
or
movsb
sbb
push
mov
inc
sbb
cwtl
mov
in
fdiv
sbb
or
or
lcall
call
cmp
sbb
mov
pop
aas
mov
lds
iret
mov
adc
xor
inc
cmpb
jns
sbb
dec
dec
xchg
and
sbb
shrb
test
cmp
fidivs
adc
lea
stos
imull
inc
sbb
lcall
std
pop
mov
or
mov
jg
mov
or
js
and
pop
cld
sub
fdivrs
pop
inc
addb
mov
jns
ss
lods
mul
loope
mov
jmp
xchg
add
std
mov
mov
mov
and
out
mov
out
das
pushf
cs
icebp
inc
test
xlat
xor
mov
out
push
ja
rclb
dec
sub
mov
testb
out
jne
pop
mov
mov
dec
mov
inc
mov
shrl
mov
lods
xor
nop
aas
ss
jb
call
mov
adc
imul
fisttpl
xor
mov
popf
fwait
inc
push
fdivrs
xor
adc
popa
jge
xchg
call
add
out
jmp
push
cmp
test
lcall
cmpsl
sub
cli
or
aaa
dec
ljmp
and
or
repnz
sub
jmp
xchg
xchg
inc
cmp
outsb
pop
push
testl
jl
adcl
and
shll
mov
jne
out
xor
mov
mov
andnps
pushf
xorb
fisubrl
add
movsl
sub
test
pop
mov
mov
mov
mov
dec
jnp
mov
aaa
iret
pop
popa
xchg
adc
or
imul
mov
xor
insl
dec
ja
pop
cmc
dec
je
push
cmp
out
es
pop
push
xchg
xchg
mov
adc
xchg
mov
into
enter
rorl
std
inc
push
add
divb
jae
mov
cli
fldcw
pop
pop
std
mov
mov
scas
pushf
push
cmpsb
xor
cmp
je
jmp
xor
stos
mov
mov
cmp
lock
push
push
add
cs
orl
pop
test
mov
push
mov
hlt
mov
cmp
lcall
icebp
jl
mov
or
pop
sbb
outsl
xor
push
mov
mull
xchg
mov
add
in
repnz
dec
mov
push
sub
sbb
pop
mov
sbb
icebp
dec
in
sbb
mov
test
sbb
dec
cmp
popf
xor
mov
cmp
sbb
dec
lret
xchg
ljmp
mov
imul
int3
shlb
push
cmpsb
lods
fimuls
push
dec
aas
dec
fcompl
xor
nop
orl
scas
mov
popf
jo
cmpsb
mov
jg
jmp
call
xchg
dec
lds
or
inc
mov
add
and
dec
push
and
cli
cwtl
in
or
in
test
mov
je
hlt
scas
pusha
incl
in
sbb
test
lret
js
and
pushf
das
lods
adc
pusha
jbe
and
adc
and
orl
mov
xor
imul
dec
lock
lods
lods
dec
sub
fistpl
lea
das
int
push
adc
out
jg
insb
pop
lods
xor
dec
std
je
adc
xor
push
imulb
lds
mov
ss
adc
in
or
cmp
cli
xchg
imul
imul
or
and
push
outsl
inc
inc
daa
xchg
mov
into
hlt
and
jo
pop
fstp
cs
lret
repz
jbe
clc
fisubs
int
in
xor
je
loop
js
out
pop
pop
mov
in
int
xchg
or
xchg
cmp
mov
mov
mov
sub
scas
adc
mov
inc
lahf
mov
out
xchg
lods
les
push
stos
pop
es
dec
call
insb
sbb
push
pop
sub
mov
inc
jmp
fsubl
movsl
push
cmp
pop
pop
enter
dec
popf
cmp
inc
add
cmp
mov
jecxz
push
test
movsl
xchg
bound
shrl
or
mov
pop
dec
outsl
and
loope
push
and
lds
and
fiaddl
xchg
mov
pop
pusha
int3
cltd
push
repnz
sbb
inc
xlat
pusha
clc
jb
pop
loopne
dec
ljmp
xchg
add
push
in
fmull
fs
push
js
or
cmpsl
fstl
inc
dec
inc
addr16
inc
lret
xchg
cmc
pop
insl
sbb
cs
sbb
filds
cmp
lahf
insl
dec
push
shll
sahf
cmp
and
mov
xor
popf
jnp
les
out
dec
sahf
mov
or
addr16
dec
ss
call
pop
inc
mov
outsl
and
pop
divl
loopne
push
mov
xchg
nop
xor
mov
mov
icebp
std
adc
mov
js
pop
movl
mov
xor
test
je
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
jmp
fwait
adc
xchg
mov
lahf
xor
adc
ljmp
mov
push
scas
fimull
hlt
jp
cmp
loope
mov
loopne
push
sub
insl
fs
jg
push
and
fldenv
adc
insb
xor
popf
insl
mov
pop
sub
mov
push
fdivl
jns
call
out
shl
pop
in
pop
out
test
in
or
sbbl
sub
pusha
dec
repnz
insb
outsb
stos
loope
or
fcmovu
sbb
push
dec
clc
iret
je
popa
sbb
push
into
out
sbbl
pusha
pop
and
loopne
cli
push
mov
push
jge
cmp
jp
pop
addr16
push
inc
inc
faddl
mov
outsb
cmpsb
fcmovnu
dec
mov
scas
mov
pop
ljmp
roll
dec
mov
ret
xchg
mov
mov
insl
aad
jg
test
and
jae
cltd
sbb
je
push
clc
cltd
push
cli
push
mov
push
jb
lods
pop
xor
pop
test
jno
push
push
mov
bound
pop
cltd
aas
gs
xchg
mov
cmpsb
shrd
xchg
arpl
int
fidivl
jg
jl
adc
fsubr
push
push
push
sub
fwait
jbe
lds
mov
loope
mov
loope
fdivl
pop
jns
sub
jg
adc
jmp
sbb
add
dec
fcmovb
mov
inc
mov
and
jecxz
mov
push
or
push
xorl
pop
cmp
or
in
mov
repz
fidivrl
not
mov
lea
scas
ds
push
xchg
or
bound
xchg
loop
adc
and
repz
jl
lds
sbb
push
dec
sub
xchg
mov
sub
sbb
scas
cmpsb
lcall
adc
mov
mov
stos
insb
loop
jge
mov
lods
movsl
iret
divb
mov
jg
sub
ret
insb
int3
addr16
cmp
or
adc
ja
push
pop
mov
mov
into
out
dec
movsb
mov
dec
add
stc
mov
dec
ret
in
loop
pop
test
sbb
sbb
gs
pop
sbb
mov
mov
sbb
pop
jne
mov
lods
xchg
mov
enter
cwtl
insb
jecxz
mov
pop
cmc
ja
push
leave
and
lahf
clc
loope
xor
push
inc
add
cwtl
or
ljmp
hlt
push
jecxz
pop
scas
cs
pop
test
out
mov
xchg
aas
popf
push
cmp
mov
test
insb
popa
pop
sbb
outsl
aas
int3
inc
sub
mov
stos
pop
cmp
in
outsb
add
and
arpl
imul
jle
sub
jno
arpl
xlat
push
mov
xchg
scas
add
jmp
xchg
adc
add
push
xor
lea
mov
mov
scas
jp
ret
andl
or
inc
push
outsb
and
cmp
ds
fwait
xchg
pusha
mov
js
pop
inc
fnsave
sub
fwait
sbb
sbbl
aaa
scas
xor
pop
in
xchg
add
add
mov
ljmp
mov
rorb
mov
mov
inc
cmp
jb
jmp
into
or
cmpsb
mov
pop
in
adc
jo
mov
mov
dec
push
nop
scas
subb
lds
dec
sub
push
nop
xchg
push
push
jae
pop
or
inc
rcrb
mov
sbb
mov
test
shrl
sub
aam
add
sub
repnz
call
push
adc
call
mov
movsb
out
fstl
fiaddl
xchg
ljmp
jmp
xor
bound
outsl
adc
jno
xor
repnz
gs
loope
pusha
and
xchg
or
pop
and
movsb
sub
mov
pushl
in
loop
cmp
jmp
xchg
mov
jns
pop
mov
jb
insl
sbb
cltd
add
out
divl
stos
or
sti
push
push
mov
in
out
mov
mov
pop
fisubl
int
lea
adc
sub
loopne
cmpsl
cmp
lret
pop
inc
jg
sub
xor
xor
sbbl
lods
std
xchg
sbb
add
and
sbb
inc
loope
cmp
xor
leave
inc
subb
mov
inc
mov
lods
lret
rorb
adc
fbstp
leave
rcrl
ret
cli
xchg
clc
push
mov
add
insl
adc
nop
cs
cmp
iret
mov
xor
xor
scas
sub
and
add
shlb
enter
mov
gs
addr16
cmp
les
rorl
pop
dec
incb
sub
js
sub
add
push
xor
inc
jne
adc
ss
ljmp
mov
push
fcompl
loop
jbe
dec
shlb
fmull
es
mov
pop
xor
out
sub
push
daa
jge
mov
and
or
mov
push
xor
aas
inc
hlt
ficompl
mov
push
sahf
stc
sub
mov
mov
cli
xor
lock
jp
push
mov
cmp
cmp
pop
fldcw
jns
icebp
in
inc
hlt
out
xchg
daa
inc
jnp
fiadds
stos
sbb
jne
icebp
clts
repnz
sbb
dec
cmp
fldcw
xchg
xchg
jne
outsb
gs
or
dec
inc
mov
outsb
sbb
loope
or
xchg
lcall
out
gs
sbb
ja
jecxz
jnp
arpl
fimull
push
mov
rcrl
jge
push
push
xchg
popf
add
mov
fistl
mov
pusha
sahf
pop
or
out
and
fwait
es
adc
sar
pop
movl
repz
daa
imul
xlat
arpl
enter
or
jg
mov
popf
sbb
out
mov
jle
cmp
xchg
mov
call
pop
sti
fs
lea
ret
shrb
adc
stos
in
shr
ficoml
aas
adc
cmp
push
mov
adc
pop
test
jo
leave
sbb
arpl
mov
mov
ret
inc
scas
mov
popf
or
dec
cmp
test
cwtl
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
hlt
aam
mov
and
insl
inc
xchg
jbe
add
nop
lds
or
add
sub
aam
dec
movsl
daa
mov
and
dec
rclb
dec
and
movsb
add
lret
cmp
pop
pop
std
std
sub
xchg
jmp
push
xchg
cmp
cmp
and
fmulp
dec
pop
testl
jmp
aaa
cmp
inc
xchg
jbe
xor
sbb
lahf
das
jo
pop
imul
jne
or
cli
xor
outsb
clc
xchg
sbb
iret
mov
push
testb
fistps
movsb
in
int
adc
push
sti
sbb
pusha
and
mov
pop
sbb
call
clc
int
sbb
cmpsl
sbb
stos
inc
mov
stc
cs
ffreep
bound
jb
add
adc
pop
lret
mov
or
sarb
push
lcall
jbe
les
pop
popa
addr16
mov
mov
push
cmp
aad
xlat
sub
pop
xchg
out
cmp
fwait
xor
fisttpll
ret
add
add
or
jnp
loope
repnz
leave
cmp
mov
stos
jnp
mov
repz
loopne
das
sub
mov
je
inc
rcrl
pop
and
std
imul
push
adc
scas
mov
cs
sub
jno
sbb
lret
mov
inc
add
cltd
dec
dec
xor
icebp
dec
ja
dec
in
mov
fsubr
dec
add
lret
jp
jns
mov
movsb
xchg
bound
jg
jg
cmp
out
inc
cmp
xchg
imul
in
in
out
insl
rorl
inc
mov
outsl
mov
inc
int3
leave
push
in
nop
mov
cltd
ljmp
jecxz
and
insl
sbb
add
data16
mov
dec
loope
push
stos
pop
dec
jbe
in
pop
stc
or
cmp
fs
pusha
rorl
out
in
mov
adc
insb
or
enter
jge
inc
sbb
in
pop
jne
ja
stc
daa
adc
ret
inc
stos
aaa
mov
les
or
aam
repnz
xchg
mov
adc
mov
push
mov
xchg
test
cmc
sahf
adc
cld
cli
xchg
scas
push
cld
popf
mov
xchg
push
fisttpll
nop
mov
into
sbb
dec
mov
dec
shr
sub
pop
leave
pusha
rcll
push
mov
push
ljmp
sbb
cs
sahf
adc
xchg
arpl
movsb
or
out
or
arpl
popa
outsl
mov
pop
inc
popf
int
daa
cli
stc
push
sbb
and
leave
dec
int3
into
pop
out
sti
dec
fdivl
xor
mov
jno
add
sbb
sub
int3
movsl
ljmp
ret
ret
adc
dec
sub
aam
push
and
and
test
mov
cmp
pop
in
mov
cmp
outsb
mov
or
push
or
or
cmp
mov
test
jg
int
test
test
sbb
insl
push
push
clc
mov
iret
cwtl
popf
mov
popf
sahf
push
mov
aad
shlb
push
pop
dec
sub
xchg
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
not
push
push
sub
mov
orl
or
jne
adc
jmp
enter
lea
popf
pop
cmc
sbbb
sbb
sarl
clc
inc
or
repnz
pushf
xlat
mov
stos
andl
int
mov
sarl
arpl
insb
ja
xor
and
je
aaa
js
mov
adc
loope
cli
clc
cld
jns
xchg
lds
mov
iret
xor
idiv
pop
daa
sarl
gs
fwait
mov
pop
and
ret
jmp
shrl
push
in
add
call
mov
ret
shlb
fnstcw
mov
mov
mov
ss
aad
arpl
hlt
and
fsub
out
push
mov
xchg
push
ljmp
mov
xchg
out
jo
pop
pop
sbb
int3
jecxz
test
jmp
jecxz
iret
push
nop
cmc
push
cmp
in
pop
daa
loop
ret
mov
popf
or
jb
xchg
adc
fisttpll
lahf
lds
jmp
stos
ret
ret
jg
dec
pop
addr16
push
aaa
rclb
pop
push
and
cwtl
rcrl
inc
cmp
dec
aas
cmc
jge
sbb
and
mov
mov
mov
notb
inc
add
aam
movsb
cld
dec
cmp
dec
and
cli
xchg
cmpsb
xchg
and
xchg
inc
out
inc
repz
dec
movsb
xchg
mov
mov
mov
xor
sbb
adc
lock
ret
clc
ds
adc
dec
in
jecxz
and
lds
sarb
lods
data16
orb
pop
or
cmp
lret
sbb
mov
in
icebp
xchg
in
dec
in
xchg
gs
aad
decl
sbb
jne
sbb
data16
scas
adc
sub
ljmp
push
add
adc
xchg
call
xchg
xchg
mov
scas
push
add
addl
sub
push
xor
sti
bndstx
outsb
lods
movsb
adc
or
lea
push
lock
ljmp
and
ret
fists
fstpl
jne
and
mov
push
mov
mov
stos
stc
push
loop
rorb
out
mov
xchg
pop
xor
hlt
daa
aad
adc
sbb
arpl
mov
lret
inc
jmp
jne
dec
mov
mov
mov
es
sbb
mov
pop
in
jne
push
int
adc
fildll
sti
push
mov
xor
notb
sarl
lahf
leave
orl
pop
fs
pusha
cmc
clc
fwait
push
pop
sub
adc
xor
test
add
cmp
cld
in
pop
sub
xchg
mov
scas
inc
xchg
push
es
imul
sbb
roll
xchg
add
xor
xchg
mov
ja
lcall
out
lcall
or
and
into
pop
mov
fcom
pop
push
data16
into
fstp
ret
adc
inc
and
xor
and
div
mov
and
mov
notl
div
pushl
pop
mov
jmp
mov
mov
sub
sub
mov
mov
cmpl
movl
mov
mov
not
jmp
movl
cmpl
ja
push
push
pushl
push
call
sbb
add
xor
mov
sub
orl
sbb
adc
sbb
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
jmp
in
lahf
shrl
sub
outsl
cmp
mov
sbb
or
jmp
push
into
std
or
push
xor
std
pushf
in
pop
mov
scas
jb
ja
ret
sub
xchg
repz
shlb
repnz
jp
ficoml
jo
out
dec
imull
adc
push
into
adc
xchg
orl
mov
loop
lret
rolb
inc
in
pushl
push
cmp
popf
fadds
ret
sub
stc
mov
lahf
lods
in
out
addr16
cmp
ja
repnz
fildll
cmp
fwait
insb
scas
mov
loopne
popa
cmp
xchg
loope
push
xchg
sbb
cmp
sub
pop
dec
cmpsb
dec
jge
and
ljmp
inc
outsb
pop
js
mov
lock
sub
mov
sub
lret
push
negl
dec
mov
dec
cmpsl
test
das
loope
sbb
dec
inc
cmp
notl
addr16
outsl
jo
cmc
add
add
mov
mov
inc
pop
fisubrs
subb
mov
shlb
pop
sbb
jle
cmc
mov
push
f2xm1
lret
or
sub
pop
add
test
mov
dec
mov
leave
int
push
cmp
jns
sub
xchg
cmp
rcrb
dec
in
jmp
xchg
add
femms
cmp
cmpsb
cmp
sbbl
mov
mov
xor
loopne
xchg
and
xchg
cmp
repz
inc
mov
xor
dec
xchg
stc
jge
test
imul
inc
les
daa
jmp
and
leave
mov
ficoms
sbb
jae
mov
xor
mul
pop
faddl
mov
out
std
push
testl
arpl
and
outsl
sub
pop
jge
icebp
pop
flds
cltd
dec
mov
add
jno,pt
cmp
rorl
ror
push
mov
arpl
xchg
mov
adcb
test
jge
stc
test
pop
ja
mov
in
sub
inc
xor
lahf
sub
adc
out
and
lret
mov
int3
xor
stos
inc
sub
and
das
scas
xor
sub
mov
iret
cld
xchg
dec
mov
push
jnp
fwait
adc
add
xlat
test
push
mov
fadd
sub
cli
insb
inc
lock
loopne
push
outsl
stos
fdivrs
xchg
dec
imul
pop
mov
pop
lahf
jl
iret
insb
cmp
adc
inc
jne
inc
les
jns
xchg
or
push
add
adc
and
shlb
push
sub
jo
mov
adc
cli
addr16
cli
scas
push
adc
push
pusha
fldt
xor
aad
sub
cld
mov
pop
stc
mov
xchg
out
push
push
add
inc
mov
fstpt
cmp
clc
or
push
jne
leave
dec
pop
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
add
or
mov
xor
or
mov
jmp
add
mov
mov
cmpsl
outsl
jle
add
inc
lds
or
clc
adc
pop
dec
inc
sub
sbb
pop
ja
push
fisttps
push
sub
xlat
enter
aas
sbb
sub
mov
push
push
js
mov
cmp
sub
inc
inc
sub
add
insl
sarb
in
in
cld
pop
loop
jae
dec
andb
mov
loop
les
gs
sbb
inc
test
movsl
xchg
jecxz
popf
inc
inc
out
aad
sbb
mov
rcrb
lock
and
out
pop
jb
xchg
or
mov
adc
push
mov
push
adc
leave
outsb
fcmovnu
imul
xor
fiadds
pop
cmp
xchg
mov
xchg
stc
mov
xor
test
pop
subl
push
jmp
mov
mov
fsubs
push
pop
call
ret
test
mov
fdivrl
andb
adcl
scas
mov
ffree
cmc
shl
je
add
pop
pop
aad
sbb
mov
outsl
pop
mov
in
xchg
jb
rorl
jle
push
imul
out
dec
pop
push
add
jecxz
popa
fldl
cld
mov
cmp
ss
outsb
insb
inc
hlt
btc
xchg
inc
int3
push
sub
xorb
stc
xchg
lea
fildl
xor
inc
add
ds
jb
fxam
mov
mov
xchg
ficomps
ret
push
aam
sub
add
pop
fidivrs
roll
repnz
sub
rorl
dec
sub
leave
xchg
dec
int
mov
and
lods
scas
fwait
xor
xor
inc
aas
cmp
ret
mov
in
mov
mov
call
je
sbb
fistl
add
js
push
in
xchg
negl
mov
in
xor
or
adc
rolb
xor
mov
xchg
cli
add
negl
push
pop
xor
mov
xchg
pop
lds
push
test
mov
xchg
imul
pusha
and
xchg
push
mov
push
pusha
xor
notl
jmp
xorb
sbb
push
jo
iret
mov
mov
pusha
lret
pusha
cmpsl
add
xor
and
jmp
mov
and
sti
add
negb
push
push
dec
dec
ja
mov
cmp
pop
mov
jno
inc
fcoml
cmpsb
adc
add
or
xchg
mov
insl
test
stos
jns
mov
or
and
les
sbb
xor
mov
mov
pop
aam
cmpsl
popf
test
push
roll
std
mov
out
ds
mov
mov
dec
inc
fwait
adc
xchg
loopne
push
inc
leave
and
or
mov
xchg
pop
push
jae
fidivrl
inc
hlt
mov
xor
div
xor
mov
push
add
xor
or
div
pop
mov
sub
mov
and
mov
sub
add
cmp
ja
push
movl
movl
mov
mov
imul
add
imul
mov
xor
xor
mov
sub
mov
mov
xor
push
jmp
jns
filds
dec
std
sub
sbb
mov
lcall
bound
add
dec
jge
mov
inc
aad
idivb
ja
gs
inc
push
add
fiaddl
jge
add
int3
pop
pop
cmp
movsl
inc
lcall
loope
cmpsb
out
and
dec
sub
js
inc
lret
sub
cmp
mov
pushf
push
pop
ficoml
sub
xchg
sbb
sahf
pop
mov
mov
dec
iret
stos
imul
pop
mov
fcmove
shlb
cmp
les
mov
push
ljmp
mov
xor
inc
mov
dec
jb
push
pop
aam
push
lds
add
add
mov
adc
sub
jno
pop
jge
adc
shll
dec
mov
push
add
pop
mov
test
les
mov
ror
jbe
xlat
in
icebp
mull
and
scas
sbb
decb
subb
xchg
pop
iret
sbb
push
cmp
int3
jmp
adc
add
pop
in
inc
scas
mov
inc
push
in
push
dec
test
ror
in
roll
cmp
jb
movsl
test
mov
inc
mov
or
mov
cwtl
xchg
in
bound
pop
jns
mov
testb
ss
xchg
sbb
daa
mov
call
mov
bound
std
mov
dec
mov
dec
ret
outsl
out
sbb
mov
sti
hlt
aaa
rcrb
lds
push
and
xchg
or
adc
rclb
dec
or
mov
or
mov
sub
loop
cmp
test
jnp
shll
cltd
movsb
faddl
jnp
imul
incb
loope
movsb
aas
in
int3
pop
jge
pop
mov
mov
adc
ss
push
push
adc
lcall
ds
adc
mov
inc
movsl
mov
enter
pop
aad
push
fldt
jae
arpl
cli
repz
pop
or
scas
mov
sub
lret
sti
sub
push
mov
shll
les
cwtl
jmp
push
xor
inc
push
and
sahf
xlat
mov
xchg
cwtl
add
cmp
lahf
mov
dec
adc
sbb
in
add
cmp
in
adc
mov
clc
dec
lret
or
xlat
aas
addr16
rcl
test
test
and
or
cmp
mov
adc
sbb
adc
adcb
jp
clc
gs
adc
xchg
jp
hlt
jae
fwait
cmp
test
jecxz
mov
cmp
mov
dec
mov
dec
iret
pop
xor
ds
jae
pop
push
aad
aam
xor
xchg
xor
bound
cwtl
pop
ljmp
xlat
push
push
mov
adc
cli
inc
xor
sub
je
scas
int3
dec
pop
div
mov
mov
push
or
xor
add
lea
mov
mov
mov
mov
mov
xor
add
and
mov
xor
xor
or
mov
add
mov
add
xor
div
xor
mov
or
div
pop
sub
mov
and
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
pushl
jmp
jle
mov
lods
sbb
stc
das
cld
and
mov
inc
jno
push
ja
mov
xor
popf
adc
add
into
and
or
mov
aaa
popa
in
mov
push
clc
lock
cmovbe
aaa
and
cs
mov
sbb
ljmp
ss
adc
mov
inc
neg
mov
xchg
jbe
push
sar
push
cli
data16
push
vpsubb
orl
jbe
jbe
fcmovb
jl
xchg
mov
sbb
adc
jecxz
call
cmp
xor
pop
and
dec
ret
leave
loopne
andl
nop
push
test
in
int3
repnz
push
lods
mov
push
xchg
mov
and
jo
xchg
add
jl
aas
pop
shr
lds
movsl
cmpsb
lret
in
inc
xchg
jp
dec
xchg
xor
cltd
mov
adc
jb
nop
or
rolb
and
jno
popf
loopne
mov
inc
xchg
jmp
nop
sub
lret
clc
cmp
cld
pusha
in
jl
lds
jo
mov
fistl
mov
cmp
pop
shlb
mov
stos
rclb
push
sub
adc
outsb
push
push
xor
adc
push
subps
ss
std
movsb
mov
xchg
repz
jnp
pop
icebp
in
push
dec
mov
std
or
mov
loope
bound
inc
cmp
pop
inc
xchg
stos
mov
out
dec
inc
lods
enter
xchg
mov
lds
push
inc
sub
ds
into
cltd
loopne
cmpsb
andl
lret
push
inc
cmc
jge
ret
xor
int
add
les
jl
ljmp
into
xchg
js
sbb
fisttps
lret
fsubrs
push
sbb
dec
dec
push
xchg
inc
push
cli
subl
or
aad
xchg
shll
jl
into
inc
sub
cmp
pop
in
dec
setns
iret
adc
cltd
mov
sub
cmp
cwtl
or
insl
aas
jns
ljmp
imul
pop
das
es
ds
xchg
sbb
mov
rolb
scas
shr
mov
in
icebp
jo
adc
pop
popa
mov
repz
xor
stos
sbb
call
test
je
xor
jmp
mov
xor
pushl
subl
call
cmpl
mov
mov
jmp
not
cmpl
ja
push
call
sbbl
mov
adc
sub
sbb
add
sbbl
or
movl
xor
movl
adc
movl
cmpl
mov
movzbl
mov
movzbl
jmp
not
cmpl
jbe
push
push
push
push
push
push
call
andl
movl
or
add
sub
jmp
dec
mov
insb
mov
ficomps
xor
sarl
gs
cmp
mov
ret
sub
ret
mov
jne
clc
push
addr16
jbe
test
cmpsb
pop
dec
div
and
lock
push
outsb
movsl
outsl
add
sbb
aaa
hlt
sub
js
inc
test
cmc
testb
inc
call
and
xchg
mov
pop
leave
es
xor
jnp
ficomps
xchg
mov
movsb
cmpsb
sub
hlt
pop
fwait
mov
stos
loop
jne
adc
xchg
add
mov
iret
push
stc
jle
mov
jmp
pop
push
push
sbb
mov
lcall
jl
mov
push
lcall
lea
lods
ds
jecxz
add
pop
xor
or
aaa
mov
jb
stos
aas
adc
xchg
jle
out
arpl
filds
stos
cwtl
movsb
mov
sbb
push
leave
xor
inc
cmp
sub
push
sub
out
jns
rcrl
flds
xlat
or
push
dec
ds
jge
stc
mov
sub
lret
xchg
jle
test
cmpsl
mov
inc
mov
push
leave
gs
je
mov
jge
loope
sbb
xchg
int
jno
dec
dec
roll
fnstsw
rorb
cmp
mov
loopne
inc
mov
clc
adc
pop
pop
fsub
fstpl
dec
ds
and
and
arpl
sbb
adc
iret
mov
or
pop
out
mov
sbb
xchg
push
mov
outsl
rcrl
sti
xchg
mov
push
leave
xor
jns
push
gs
adc
dec
jmp
adc
adc
hlt
or
push
cmp
jo
leave
or
lods
mov
lret
jl
fldcw
pop
dec
iret
or
sub
and
and
adc
or
addr16
or
adc
fsubrs
and
mov
add
fwait
adc
cmc
in
inc
xor
test
leave
adc
std
test
mov
shrb
mov
dec
push
cmp
mov
pop
cmp
xchg
fs
out
cld
xor
mov
ss
stc
lea
inc
mov
adcb
fucom
shrl
jecxz
pushf
and
pop
enter
sub
inc
and
mov
and
orl
mov
subl
add
or
addl
mov
adcl
xor
xor
mov
and
movl
movzwl
and
movl
subl
mov
sbb
mov
xor
xor
div
adcl
mov
andl
xor
andl
add
movl
cmp
movl
jne
notl
movl
movl
movl
movl
jmp
push
adcl
push
orl
push
call
orl
dec
movl
jne
movl
cmpl
mov
mov
jmp
mov
movl
cmpl
jle
push
call
or
xor
and
or
adc
mov
sub
mov
sbbl
mov
addl
movl
mov
andl
call
lea
mov
mov
xor
add
sub
imul
lea
or
mov
cmpl
mov
movzbl
mov
jmp
mov
cmpl
jae
pushl
call
movzwl
sbb
mov
decl
neg
adc
sbb
xor
xor
xor
sub
decl
mov
mov
and
mov
mov
cmpl
mov
mov
movzbl
mov
jmp
notl
movl
cmpl
jle
push
push
push
pushl
pushl
call
and
adcl
add
sbb
add
decl
xor
jmp
pop
sti
or
cwtl
cmp
cltd
xchg
pop
inc
loop
add
test
mov
or
or
xchg
aam
mov
pop
jb
add
adc
popa
inc
mov
sbb
pop
ljmp
sbb
ds
mov
inc
out
icebp
popf
or
sub
repnz
add
xlat
xlat
inc
les
and
sbb
inc
inc
pusha
shrb
cltd
lds
mov
enter
sbb
and
mov
rolb
stos
sti
outsb
clc
mov
add
mov
pop
or
data16
lods
mov
int
pop
div
xor
sbb
or
sarl
add
pop
aaa
and
mov
mov
inc
insl
fwait
or
jbe
push
test
sub
sarl
imul
iret
mov
daa
adc
pushf
je
jmp
fs
mov
jns
jns
pop
sub
mov
stc
sbb
shl
mov
fucom
in
repnz
adc
lea
outsl
out
sub
call
stos
xor
pushf
outsl
nop
xor
popa
mov
js
jmp
clc
jne
cwtl
jo
sbb
shr
mov
inc
mov
push
inc
and
jo
add
andb
cmc
cmp
das
clc
lahf
or
and
cmp
cmp
das
ljmp
std
pop
sbbl
inc
in
int3
sbb
jge
push
in
sub
inc
test
jl
and
cmpsl
mov
mov
mov
lock
sti
out
aam
push
push
ret
pop
std
xchg
pop
cwtl
and
int
insb
fstpl
in
mov
out
mov
mov
cld
jo
mov
and
ds
add
shrb
jne
icebp
jle
add
stc
jae
jmp
dec
jle
adc
or
push
sbb
int
into
out
insb
test
mov
sbb
leave
pop
ja
popf
fmuls
dec
divl
xlat
scas
or
mov
push
add
std
pushf
sbb
shr
push
imul
push
mov
fst
cmc
fcomp
mov
jmp
dec
shl
test
mov
jg
mov
adc
pop
out
jno
sub
fiaddl
or
push
cmpl
not
movl
jmp
movl
movl
cmpl
ja
push
call
adc
xor
xor
or
xor
or
xor
inc
not
xor
cmpl
movl
mov
notl
jmp
movl
movl
cmpl
jne
push
push
call
or
movzbl
add
mov
add
xorl
add
xor
or
sub
sub
orl
mov
xor
xor
sub
sub
shr
cmpl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
call
subl
xor
adc
xor
or
mov
or
mov
movl
mov
or
mov
cmpl
mov
mov
jmp
not
cmpl
ja
pushl
pushl
call
xor
xor
mov
sub
sub
adc
movl
sbb
xor
subl
and
adc
mov
adc
mov
andl
mov
cmpl
movl
mov
movl
jmp
movl
cmpl
jg
pushl
call
xor
xorl
mov
or
xorl
adcl
xorl
shrd
cmpl
mov
mov
mov
jmp
mov
movl
cmpl
jge
push
push
pushl
call
or
add
movl
mov
add
mov
sbb
subl
and
shr
and
mov
sbbl
mov
xorl
xor
xor
decl
or
mov
adcl
push
pushl
movl
lea
push
andl
shl
movl
call
lea
push
orl
mov
addl
mov
lea
push
movl
mov
orl
lea
sbbl
mov
adcl
mov
andl
mov
push
call
push
push
pushl
call
sub
mov
cmpl
mov
movl
mov
jmp
movl
mov
cmpl
jae
pushl
push
pushl
call
movzbl
adc
adcl
adc
neg
sub
mov
mov
mov
andl
shr
subl
shl
or
mov
addl
xor
subl
mov
adc
lea
cmpl
notl
movzbl
mov
not
jmp
mov
cmpl
jne
push
push
call
movzwl
add
xor
mov
sub
mov
neg
xor
movzwl
adc
mov
mov
lea
xor
mov
mov
mov
sub
and
mov
movzwl
adc
mov
sub
lea
xor
cmpl
movl
movl
jmp
mov
cmpl
jge
push
push
pushl
push
push
call
sbb
sbb
sub
and
orl
sbb
movl
jmp
std
je
mov
mov
cmp
jno
xor
mov
xor
cmp
negb
loope
mov
lret
lret
ret
test
data16
out
jg
loopne
test
sahf
jp
adc
sbb
add
xchg
les
xlat
sbb
sbb
lret
mov
pop
lods
scas
aaa
mov
out
rolb
jns
inc
shrd
push
mov
pop
out
or
in
cmp
rol
pop
movsb
jge
outsl
sti
mov
mov
insb
mov
enter
adc
inc
xor
mov
test
jg
push
or
and
adc
into
mov
mov
int3
cmp
jo
test
out
push
xor
mov
mov
aam
pop
jl
mov
sub
xor
cmp
es
das
pushf
test
cmp
sub
push
add
push
out
ret
push
pop
push
decl
enter
in
insl
pand
cmp
pusha
iret
add
fwait
cs
insb
mov
cld
jge
imul
jnp
fs
jp
xor
dec
mov
popa
lea
ret
mov
lcall
mov
inc
pop
dec
jb
leave
fsubs
test
mov
pop
das
inc
cmpsb
icebp
xor
inc
mov
mov
fcoml
cli
cmp
cmp
loopne
add
lcall
mov
sbb
cltd
in
aam
pop
pushf
mov
xchg
es
mov
ffree
leave
clc
push
and
mov
sti
jecxz
aad
js
and
jecxz
stc
in
shlb
add
mov
xor
xor
call
dec
mov
sbb
int3
repz
cwtl
les
imul
cmp
jnp
idiv
jno
lcall
jmp
lds
pop
add
sub
xor
inc
mov
int
jne
hlt
adc
movsl
cmp
aad
mov
ss
outsb
pop
or
aaa
mov
jbe
repnz
mov
je
les
adc
shr
les
loopne
adc
fs
test
hlt
sbb
lock
dec
cmp
sbb
xor
repnz
or
push
add
dec
movl
and
movl
movl
add
mov
mov
movl
push
subl
push
push
push
subl
call
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jl
pushl
push
call
andl
xor
and
or
xor
or
sbb
add
mov
xor
mov
sub
movl
sbb
cmpl
mov
mov
movl
jmp
mov
cmpl
jae
call
mov
mov
sub
sub
dec
movzwl
add
mov
andl
mov
add
mov
mov
mov
sub
mov
sbb
mov
sub
sbb
or
or
mov
mov
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
push
add
push
adc
push
push
call
mov
mov
or
mov
or
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
movzwl
mov
add
mov
jmp
std
aas
jge
jge
jge
int3
pop
stos
cmp
cmp
mov
pusha
jne
add
iret
lahf
sbb
mov
fsubrl
mov
cld
push
mov
push
jno
mov
mov
push
int
rol
scas
and
lret
push
push
arpl
and
add
rorl
lret
cmc
movsl
test
mov
jecxz
lods
pop
out
inc
repz
cmpsl
insb
inc
shlb
scas
scas
mov
mov
idiv
lods
cmc
mov
aad
xchg
xchg
movsb
sub
fs
movsb
mov
add
icebp
push
out
sar
add
push
daa
std
mov
jae
add
xlat
push
pop
movsb
cmpsl
cmp
jae
cwtl
jge
sbb
push
push
and
add
loopne
mov
push
mov
iret
inc
or
push
aas
jecxz
adc
insb
testb
sbbl
dec
lock
adc
mov
add
lcall
in
jno
adc
xor
push
clc
sbb
int
leave
imul
daa
push
popf
lcall
shrl
dec
mov
add
jge
cmp
sahf
pop
shl
mov
dec
sti
mov
aad
xchg
pop
cmp
bound
inc
jbe
fwait
and
repnz
mov
mov
loopne
push
sarl
cmp
lods
mov
dec
bound
movsb
adc
mov
push
push
mov
mov
sub
add
lods
cli
test
sbb
aaa
fistl
insl
cli
lock
cmpsb
cmp
scas
xor
inc
fsubrs
jo
scas
mov
fidivrs
icebp
in
js
rol
mov
stc
test
je
leave
sub
push
push
adc
and
and
mov
cmc
dec
test
scas
lret
push
in
ss
mov
pop
lret
int3
push
movl
xor
jne
mov
fsubr
lea
stc
mov
insl
sbb
mov
rorl
scas
jmp
mov
mov
jp
xchg
pusha
add
stos
adc
in
pop
xor
cwtl
scas
imul
fbstp
inc
pop
in
cmp
mov
or
cmp
sub
loope
es
xor
push
aam
add
gs
mov
xchg
das
aad
push
fsts
add
movzwl
push
sub
mov
xor
inc
mov
movzwl
mov
and
movzwl
cltd
idiv
pop
movzwl
cltd
idiv
mov
movzwl
movzwl
and
mov
movzwl
cltd
idiv
mov
cmp
je
mov
mov
jmp
jg
xchg
ret
popl
sbb
push
xor
mov
cli
inc
pusha
push
jae
or
mov
mov
and
lahf
sub
ljmp
and
pop
push
lds
and
aam
es
in
lods
dec
iret
xchg
sbb
sub
mov
test
xchg
and
std
add
push
or
lds
xchg
fstpl
push
imul
cmp
inc
jb
mov
nop
hlt
mov
aas
andl
cmp
inc
or
pop
test
gs
inc
dec
mov
jns
push
sub
lods
lcall
testl
mov
in
inc
jp
hlt
or
fucomp
cltd
jns
call
out
les
adc
in
call
testl
sub
sub
test
mov
push
add
xor
pop
jo
pop
push
fcomps
mov
jo
leave
mov
mov
sub
cmpsl
pop
add
sbb
sahf
mov
rcrl
mov
sarl
insl
popa
cmp
subb
popa
sbb
leave
shr
cmpsl
jmp
je
pop
inc
cmc
out
jns
mov
ja
jge
and
pop
push
ret
insb
pop
cld
enter
xorl
push
sahf
test
jmp
std
push
in
fcomi
push
sbb
ja
sti
js
xchg
sbb
test
xchg
mov
push
lahf
pop
sti
adc
push
adc
mov
cs
xor
inc
loope
mov
cmp
pop
add
xor
inc
mov
pop
mov
int
push
test
push
jb
repz
xchg
sub
push
mov
js
imul
fisttps
push
add
cwtl
xchg
gs
out
sbb
in
jecxz
xchg
mov
jl
jge
jecxz
mov
push
cmpsb
in
std
lahf
ljmp
or
mov
dec
in
outsb
jb
xor
std
out
in
pop
xor
cmp
mov
mov
test
dec
sbb
sbb
sbb
sub
mov
add
cmp
inc
stos
cs
in
xchg
mov
sbb
test
stc
push
je
int
jb
push
in
sbb
push
cs
lds
push
mov
lret
cmc
adc
leave
shld
jmp
mov
out
divl
cmp
leave
shrb
sarl
fsubl
push
or
shll
cltd
fs
cli
test
rol
dec
dec
jecxz
cmc
inc
aad
xchg
pop
jns
jge
push
nop
lds
aam
out
or
fsub
cmpps
jp
xor
mov
negl
pusha
xor
or
inc
jg
scas
and
push
aam
cmpb
mov
cld
leave
push
and
or
fldcw
or
fistpll
sti
pop
xor
mov
int
mov
pushf
arpl
jo
and
dec
jae
cli
pop
ficoms
lds
jne
out
cmp
imul
imul
loope
mov
imul
add
inc
cmpsb
xlat
mov
sub
sbb
sbb
dec
xchg
mov
xor
mov
call
and
cmp
and
stc
test
jne
sub
nop
out
fstpl
out
mov
adc
sub
or
pushf
push
call
call
inc
gs
aaa
aas
push
and
je
fwait
sar
sbb
pop
mov
add
adc
xchg
shrl
idivl
add
mov
ja
dec
lea
push
add
sbb
mov
and
arpl
dec
inc
or
sti
and
rcrb
pushf
jno
pop
pop
mov
outsl
mov
imul
enter
stos
xchg
pop
jnp
aas
and
loop
loope
pop
lods
jnp
imul
repz
roll
pushf
mov
mov
jno
mov
mov
pop
and
and
mov
mov
imul
pushf
cmpsb
mov
inc
loop
push
dec
lds
out
fsubrs
rorl
adc
out
popf
xchg
xor
in
movb
mov
sbb
daa
nop
repnz
mov
sbb
test
and
mov
dec
fidivs
inc
xor
les
push
ss
dec
cmp
and
mov
fidivrl
push
mov
mov
mov
and
pop
or
jle
gs
pusha
dec
lcall
loope
fcomps
sti
std
aam
mov
xor
call
adc
shl
mov
mov
mov
xor
jmp
lcall
mov
add
cmp
dec
sarl
aad
add
jns
das
je
and
pop
mov
je
fcomps
pop
out
sub
cmp
xchg
test
sti
and
scas
cltd
pop
sahf
adc
push
repnz
insl
sub
lods
ficoms
mov
jp
cmp
in
jg
gs
mov
pop
test
pop
fmuls
ret
add
pusha
jp
jne
lock
pop
cmp
fs
cmp
mov
jne
out
sbb
lods
repnz
stos
mov
and
xchg
cmp
mull
push
fisttpl
push
sbb
jge
xchg
je
jne
xchg
mov
mov
cmp
add
pushf
add
adc
int3
mov
lds
lock
shrl
les
call
jns
xor
xor
movsl
into
gs
loopne
jb
aaa
jae,pn
xchg
inc
mov
js
pushf
jg
inc
gs
push
fscale
js
mov
push
pop
inc
xor
adc
add
mov
pop
or
mov
inc
adc
js
scas
ljmp
fadd
mov
lret
and
test
dec
inc
and
sub
or
pop
and
hlt
aaa
jae
or
inc
fdivrl
pop
daa
sub
jg
fadds
fidivrs
cmpsl
adc
popf
and
lcall
mov
push
sbb
and
cli
pop
inc
shlb
sti
adc
pop
mov
and
jo
fildl
stos
inc
imull
add
sbbl
ret
and
jecxz
fdivrl
mov
pop
jmp
inc
int
mov
and
js
arpl
inc
int3
push
dec
insl
rsqrtps
insb
mov
xchg
mov
imul
loope
jmp
leave
fmul
ficoms
adc
cmp
adc
lcall
cmp
nop
stc
cmp
xchg
test
pushf
mov
out
test
and
pop
adc
mov
ljmp
mov
push
xorl
scas
dec
aaa
mov
jmp
aas
mov
mov
sbb
push
lods
outsb
shll
push
and
clc
mov
into
mov
cmp
jne
cmp
je
jmp
sbb
cmpsl
popf
or
pop
pop
inc
dec
dec
sarl
pop
and
das
jmp
xor
fsubrs
xchg
inc
push
mov
jbe
inc
fwait
adc
mov
ret
or
push
fadd
lods
cmp
inc
xor
cmp
sbb
out
mov
arpl
pop
pop
mov
push
or
roll
mov
ret
iret
pop
cli
add
push
push
addb
add
enter
fldcw
lret
enter
out
lds
cmp
testl
sbb
push
lret
inc
out
mov
aas
test
xor
jmp
sahf
std
mov
add
dec
sub
jmp
pop
notb
call
dec
adc
int3
pushf
sahf
xor
out
add
je
xchg
xchg
in
jecxz
pusha
std
xchg
lds
push
push
add
js
cmp
orb
dec
test
inc
jb
fcmovnu
iret
or
sahf
test
mov
pop
push
repnz
inc
stos
lret
ja
lods
rcl
rcrl
inc
jle
lahf
pop
fists
mov
or
mov
pop
popa
ds
adc
scas
push
fistl
inc
sbb
or
daa
inc
pop
mov
fnstenv
testb
and
push
testl
pushf
mov
xor
fidivs
push
xchg
ljmp
or
pusha
mov
hlt
mov
or
pop
aaa
push
loop
sub
shlb
shlb
mov
cmp
test
out
mov
sub
int3
add
fisttpl
das
int
jle
mov
popf
dec
lret
cmpsb
add
adc
cmp
cli
lret
and
inc
mov
das
js
sbb
adc
jb
inc
add
sub
mov
adc
les
out
movsb
mov
pop
dec
jl
lcall
push
adc
push
pop
jbe
pusha
push
dec
push
adc
mov
scas
fs
adc
sbb
subl
xchg
sbb
push
push
fimuls
and
test
ret
mov
out
sub
rorl
sbb
fs
inc
xchg
inc
and
cmp
je
mov
mov
xor
jmp
mov
mov
insl
movsb
sub
inc
xor
mov
inc
shlb
sbb
push
dec
mov
arpl
shrl
xlat
sub
daa
insl
push
pop
imul
pop
ja
xor
xchg
push
shrb
dec
cmpsb
cmpsl
pop
push
adc
jl
ds
enter
out
pop
push
das
shlb
addr16
add
inc
std
adc
sub
xchg
pop
iret
add
outsl
pop
stos
call
shl
sahf
mov
sbb
sbb
ss
divps
std
xor
out
sub
outsb
add
push
mov
or
mov
shll
fdivl
mov
xchg
mov
jnp
xor
bnd
push
sbb
xchg
leave
fisubs
int3
or
jmp
gs
das
push
insb
mov
cmp
sarl
dec
fwait
mov
dec
mov
jl
mov
lds
enter
inc
decl
ret
push
loope
pop
pop
inc
mov
sahf
testl
stos
mov
mov
mov
push
xchg
testl
push
sub
jo
fildll
fstps
jge
sbb
test
fiadds
and
mov
push
into
hlt
mov
sub
xchg
jl
mov
or
fisttpll
cld
sub
rcrl
pop
js
jge
push
jbe
ljmp
mov
addr16
push
push
push
jecxz
adc
fdivrl
mov
xchg
or
adc
aad
adc
into
je
mov
inc
es
aas
test
mov
pop
dec
bound
mov
fwait
xlat
nop
out
push
shlb
mov
gs
inc
push
cmp
imull
push
out
adc
insl
pop
inc
add
cmpl
or
or
addr16
fstps
div
add
fsub
mov
es
and
jl
popf
dec
dec
mov
cs
sub
cwtl
xor
leave
push
ja
jo
mov
bound
jmp
ljmp
ljmp
inc
in
cli
js
nop
add
push
leave
dec
adc
jmp
and
ds
or
mov
ja
mov
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
jmp
out
mov
mov
data16
jno
xlat
pop
inc
and
mov
test
test
dec
stc
or
fwait
shll
mov
in
dec
iret
jae
cmp
testb
xchg
and
and
popf
int3
je
push
add
pop
imul
mov
xabort
mov
clc
and
insb
mov
jnp
daa
out
push
mov
inc
jmp
aam
and
cld
add
test
pop
or
stos
add
daa
cmpsb
sbbl
pop
or
je
icebp
mov
xchg
into
or
or
jns
les
aad
mov
fiadds
adc
popa
arpl
pop
bound
xchg
movsb
jo
fsubrs
sahf
inc
add
dec
or
ret
pop
xchg
and
mov
adc
daa
mov
pop
call
call
nop
test
bound
jb
les
adc
insl
ljmp
xchg
jl
stos
jo
xchg
mov
fchs
adc
and
popf
imul
inc
aad
es
imul
lods
mov
inc
das
ds
pop
sub
inc
outsl
push
icebp
pop
aad
loopne
jmp
add
pop
jl
rorb
clc
movsl
mov
push
mov
in
orps
mov
subb
pop
pop
lods
pop
adc
xchg
call
sub
aas
xchg
sti
orb
rorb
sub
cmp
jbe
sub
lods
sbb
cmpsl
in
ljmp
sub
xor
mov
pop
xor
leave
das
out
sti
aad
pop
inc
mov
push
xchg
inc
imul
or
das
and
sub
imul
sub
xor
push
jle
loope
loopne
xor
mov
lds
sbb
ljmp
sub
jnp
xor
ficoms
inc
loopne
dec
mov
mov
sub
push
pushl
cs
faddl
int3
pop
idivb
out
cmp
mov
mov
pop
call
bound
and
sbb
lret
cmp
sub
mov
imul
jne
cmp
jne
movl
movl
mov
mov
mov
xor
jmp
mov
std
rcrl
test
pop
sarl
insb
loopne
adc
js
les
jle
add
mov
in
mov
in
int
ficompl
pushf
popf
inc
movsb
sub
das
popa
lods
in
shll
adc
cmp
nop
addr16
mov
xchg
jmp
pop
cmpsw
cmp
lods
data16
xchg
pop
in
dec
adc
adc
adcl
lods
call
hlt
lds
js
mov
dec
jmp
cli
mov
cld
pop
mov
xchg
push
pop
lds
sbb
call
addr16
popf
xchg
mov
dec
sarb
cmpsl
xchg
test
bound
jl
sub
flds
cs
adc
lcall
shrb
in
mov
cmc
scas
decb
rcll
lock
mov
fisubs
cmpsl
xchg
int
repnz
mov
inc
adc
push
mov
stc
inc
add
push
push
and
sbb
cwtl
push
xchg
in
dec
mov
add
sub
data16
ss
fmul
sbb
mov
xorb
loop
push
push
in
test
mov
push
push
mov
inc
dec
xor
arpl
lods
mov
push
xchg
push
jmp
push
stos
push
fstps
inc
outsl
dec
out
aad
pop
push
movsb
xor
add
rorl
mov
push
outsl
sbb
dec
iret
movsb
xor
out
fs
jle
clc
mov
mul
ret
outsl
shll
arpl
mov
lahf
jecxz
lods
sbb
rorb
add
adc
in
int3
dec
xchg
lcall
cmp
call
je
xor
rcl
out
cmp
xchg
and
push
test
pop
fistps
jecxz
jbe
mov
out
mov
call
sti
fdivr
dec
inc
lret
pop
mov
and
or
or
stc
stos
stos
mov
xor
out
stos
dec
jnp
mov
mov
push
pop
dec
mov
mov
adc
sub
daa
cmpsl
adc
aam
roll
sub
sub
js
fwait
fwait
testb
xchg
or
pop
stos
aam
pop
pop
aaa
add
mov
ret
sbb
hlt
test
push
call
movsb
roll
loopne
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
cmp
insl
scas
mov
or
cmp
mov
sarl
andb
dec
insb
aad
xchg
or
repz
mov
pusha
mov
outsl
mov
aas
inc
test
in
ljmp
cmp
xor
push
sub
daa
mov
aas
shl
fwait
adc
push
inc
in
hlt
pushf
add
lds
aas
fisubrs
clc
arpl
outsl
mov
jp
test
adc
in
push
pop
and
jg
ret
pop
xlat
or
dec
aas
pushf
mov
mov
pop
ss
addb
movsb
loope
cmc
xor
sub
dec
mov
add
notb
addl
fwait
lds
out
sub
in
int
imul
loop
push
and
jbe
lahf
cmp
inc
aaa
pop
mov
or
cmp
cmp
outsl
dec
xlat
mov
add
fnstenv
imull
iret
call
stc
iret
or
mov
mov
ficoms
mov
dec
add
adc
jge
adc
pop
call
xlat
push
std
mov
mov
mov
mov
or
es
outsl
mov
leave
pushf
mov
add
in
mov
cmpsl
push
cmp
push
mov
mov
in
push
mov
xchg
lods
mov
push
in
xchg
mov
xchg
repnz
outsl
in
fldl
adcb
fimull
out
mov
cmc
and
shlb
lods
insl
repz
pop
ljmp
ljmp
icebp
inc
dec
stc
fs
inc
push
add
lret
push
in
adc
mov
idiv
or
sbb
pushf
outsl
xchg
add
sarb
mov
sub
xchg
mov
adc
insl
out
xor
jecxz
push
dec
jbe
lods
movsb
and
dec
fldt
loopne
es
cmc
xor
fnstcw
insl
push
jp
mov
orb
insl
shr
push
or
xchg
nop
popa
hlt
dec
pop
add
jg
fbstp
stc
outsb
dec
mov
ss
stc
into
push
xlat
sti
or
xor
movsb
inc
mov
clc
pop
into
and
lcall
cs
xor
or
mov
mov
jmp
dec
fistpl
jb
lea
das
mov
or
shr
and
xchg
bound
aam
bound
nop
repz
push
das
out
cmp
mov
xor
insl
lock
mov
and
jns
pop
sub
mov
mov
scas
inc
test
shl
adc
inc
dec
ret
lea
inc
jecxz
cmpsb
add
test
mov
fmuls
sub
std
xor
or
inc
pop
orb
inc
jns
sbb
add
int3
or
daa
mov
fstpl
dec
aad
fnstsw
adc
inc
add
bound
adc
repz
aas
shl
and
add
sub
roll
dec
mov
cmc
sub
fdivp
cmpsb
repz
mov
adc
hlt
inc
fmull
lock
xor
mov
test
lcall
sub
jecxz
clc
out
mov
inc
movsb
jp
enter
or
movsb
sub
push
mov
mov
jb
mov
add
push
les
and
cmc
loope
xor
insl
fdiv
pop
push
insl
adc
sbb
push
push
pusha
repnz
imulb
ret
fld
jg
leave
movsl
flds
cli
in
mov
test
iret
aaa
scas
das
mov
dec
sbb
jmp
lret
ss
popa
icebp
dec
cwtl
xor
xchg
pop
mov
fldt
mov
mov
xchg
outsb
adc
inc
test
mov
inc
xor
push
push
lds
and
stc
cmp
insl
leave
jb
std
jecxz
or
cli
or
stos
sub
iret
pop
ds
sti
cwtl
lret
or
xchg
inc
mov
pop
rorl
fldl
in
push
out
int
push
pop
dec
adc
push
sbb
in
inc
xchg
pop
mov
les
sub
push
loope
ss
mov
and
mov
cmp
jp
mov
xor
mov
test
lods
ja
or
cmp
or
push
dec
or
and
push
jbe
les
mov
cltd
pop
xchg
mov
cmpsl
push
nop
dec
mul
lods
push
dec
negl
stc
jo
mov
decl
dec
push
or
push
mov
add
test
and
and
inc
and
or
adc
mov
and
and
or
mov
mov
mov
add
xor
add
xor
cmp
ja
mov
mov
and
sub
add
shr
mov
movl
mov
and
push
xor
pop
div
mov
imul
cmp
je
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
in
je
jge
in
jge
scas
or
enter
test
mov
or
jne
iret
sbb
ret
jle
orl
out
sbb
xchg
aas
sbb
cltd
xchg
sbb
das
popa
adc
pop
and
sbb
jge
pushf
push
dec
xor
lret
std
adc
push
add
dec
call
push
lret
adc
inc
mov
rcr
cmp
ja
movsl
cmp
push
stos
pop
pop
enter
mov
icebp
or
cmp
shlb
adc
sub
pop
ds
mov
imul
mov
push
cmc
popf
jecxz
call
repnz
pop
sahf
xor
jge
shll
cmpsb
and
stc
sbb
adc
stc
imul
rclb
hlt
add
int3
xor
frstor
or
xor
cmp
out
xchg
repnz
outsb
dec
test
sahf
mov
fs
fcomip
sub
jnp
pushf
fidivs
inc
lcall
push
sbb
jg
inc
mov
push
mov
xchg
mov
loope
mov
push
repnz
fidivrs
lods
test
cli
ret
dec
inc
mov
inc
es
cld
lock
add
pop
add
xor
js
call
stos
push
mov
jmp
and
pusha
pop
popa
xchg
mov
lahf
lret
cs
cmp
aaa
hlt
roll
and
mov
jne
jge
jns
aad
push
cmp
les
lcall
pop
cmp
push
push
dec
mov
cmp
fiadds
notb
xchg
xor
push
cs
adc
icebp
or
out
jnp
and
cltd
xchg
iret
and
stc
sti
insl
jnp
xchg
push
pop
mov
cltd
shlb
mov
mov
jecxz
dec
enter
int
lret
inc
scas
loop
pop
mov
pusha
in
repz
xchg
xchg
mov
sti
push
sarb
in
jmp
into
stc
mov
cmp
or
mov
xorb
lahf
xchg
cmp
or
imul
push
xchg
mov
dec
push
inc
cmp
push
mov
mov
inc
aad
mov
push
mov
pop
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movzwl
jmp
jno
lods
bound
mov
sar
scas
push
mov
and
incb
into
loopne
mov
push
sub
jae
cmp
push
push
iret
xor
repz
xchg
movsl
mov
mov
or
loope
jp
jne
aam
stos
roll
test
adc
or
lret
jp
or
repnz
jne
loopne
push
and
mov
into
ja
dec
cmpsl
cmp
push
sub
sbb
pop
js
mov
ljmp
add
mov
movsb
mov
outsb
stc
and
mov
xchg
jns
out
xor
mov
scas
inc
jae
pop
mov
bound
ret
add
xchg
xchg
pop
inc
mov
sub
mov
les
jmp
jle
dec
lcall
mov
fwait
cmc
leave
scas
insl
sub
pcmpeqd
js
les
add
ljmp
pusha
mov
jmp
fs
setb
bound
jg
push
gs
icebp
push
xlat
and
repz
cs
into
mov
cmp
std
xor
cmp
push
pop
ret
sbbb
pop
mov
push
ss
cmp
push
xor
rclb
int3
mov
or
xor
sbb
jle
sub
jno
jns
bound
out
cmp
mov
and
sub
sbb
add
outsb
dec
lock
cmp
bound
push
mov
and
bound
push
mov
mov
add
mov
mov
orb
dec
xor
ror
jmp
outsb
pop
addb
xchg
mov
jo
push
pop
xor
fiaddl
daa
pop
or
les
inc
dec
adc
pop
and
push
pop
test
xor
aam
jle
nop
mov
test
cmp
in
or
lds
je
mov
adc
pop
push
mov
addr16
pop
cmpsl
in
mov
xor
rcll
popf
xor
cmp
imul
dec
les
enter
dec
dec
jb
fsubrl
hlt
dec
mov
mov
push
hlt
dec
sbb
xor
sbb
pop
pop
push
pop
clc
cmp
pop
cmpsl
sbb
insb
sahf
inc
movsb
cmp
stc
movl
add
and
mov
xor
mov
imul
mov
sub
mov
add
mov
mov
shr
and
jmp
jbe
popf
test
adc
sti
in
fsubrl
je
mov
mov
mov
dec
out
sbbb
ret
bound
or
cmp
lods
pop
dec
out
ret
sub
les
mov
fbstp
fcoml
inc
dec
iret
in
nop
mov
aas
addl
cmpsb
fs
aam
jmp
add
clc
push
lret
rol
xor
addr16
call
push
mov
mov
in
push
jp
and
lea
push
xor
adc
adc
subl
mov
in
cmp
lret
xchg
mov
sahf
outsb
inc
jge
push
bound
xchg
popa
loop
add
daa
movsb
xlat
lock
adc
inc
dec
nop
iret
inc
ficomps
and
popf
adc
cli
adc
stos
jae
icebp
lret
fisubs
pop
push
dec
cmpsl
loop
xchg
xor
in
cmp
cmpsb
dec
adcb
stos
pop
imul
dec
ss
shlb
mov
push
cmp
pushf
int
xchg
fcomip
fdivs
cmp
or
lock
jno
xor
sub
push
push
mov
fistpl
mov
aad
mov
cmp
mov
shrb
pop
aam
ss
mov
std
imul
aam
inc
int
add
jnp
mov
cmpb
mov
adc
enter
repz
push
jmp
jo
lss
jne
pusha
mov
btc
lods
cs
xchg
push
test
sub
add
fistpl
aam
push
jmp
std
inc
push
xchg
pop
adcl
lahf
call
pusha
imul
xchg
in
mov
pushl
negl
adc
outsb
subl
lcall
pusha
stos
jl
popf
loopne
push
clc
adc
dec
dec
clc
xor
sub
mov
jp
sub
test
cld
adc
xlat
test
pop
cmc
mov
add
xchg
sbb
shlb
data16
sbb
jle
or
les
arpl
and
repnz
add
adc
shr
mov
lea
dec
out
mov
or
mov
imul
mov
xor
mov
cmp
jbe
lea
push
lea
push
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
jmp
inc
cli
add
jno
xor
rcr
aaa
add
test
mov
or
and
mov
add
je
dec
mov
push
add
mov
das
aam
or
inc
aaa
xor
fst
mov
adc
insl
and
cmpsb
jmp
lea
pop
add
iret
leave
lods
gs
sbb
pop
insb
dec
lea
loopne
leave
daa
stos
mov
or
gs
push
shll
out
ret
pop
xor
xlat
mov
shlb
push
mov
inc
aad
sub
xlat
pop
xlat
rol
push
xchg
in
cli
mov
test
pop
adc
insl
lcall
andb
fisttps
pop
sahf
pop
pop
popa
mov
hlt
cli
push
decb
jbe
sbb
add
dec
cs
mov
or
cs
mov
lcall
add
jge
lock
out
or
jbe
mov
test
push
in
sti
jo
shlb
popf
pop
out
sti
xor
clc
adc
sbb
sub
cli
stos
daa
clc
adc
push
lock
orl
enter
and
mov
aaa
sub
dec
jmp
hlt
xchg
sbb
and
dec
jle
shl
jne
mov
jp
sub
push
outsb
and
mov
jecxz
popa
cld
xchg
pop
fstp
or
dec
hlt
xlat
hlt
jp
in
mov
cmc
into
lods
loop
cmp
lds
xor
shll
lods
xchg
fistpll
outsl
jnp
mov
sbb
mov
pop
sub
adc
ja
jge
dec
pop
push
mov
fimull
adc
jge
data16
out
mov
fisubl
ret
in
ficomps
movsl
push
inc
sub
ja
xchg
push
cmp
jmp
bound
rcrl
ljmp
dec
int3
fbstp
loop
cmp
arpl
in
or
ja
mov
enter
orb
vpsubb
shl
fcomi
jle
data16
and
dec
mov
adc
or
xor
dec
push
lock
jle
imul
xlat
sub
test
xchg
jg
cmp
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
jmp
mov
ja
mov
int3
push
or
mov
sbb
out
or
push
xlat
aaa
jge
xchg
fbld
test
in
mov
fiadds
repnz
sub
cltd
ljmp
adc
and
insb
fimull
mov
inc
rcrl
enter
xlat
xchg
push
mov
nop
es
xor
cli
lret
xchg
sbbb
cmpsb
lods
jno
iret
sbb
lea
pop
adc
out
push
mov
repnz
pop
ret
mov
mov
fidivrs
or
dec
mov
out
sbb
test
movsl
imul
or
push
iret
inc
add
adc
fwait
push
push
hlt
out
xchg
out
add
add
loope
fs
insb
adc
lds
sub
sub
imul
lea
cmp
repnz
push
lods
js
mov
mov
dec
int
adc
mov
and
push
stc
loope
mov
sti
inc
adc
popf
js
xor
sub
inc
insl
and
aas
push
insl
xchg
jno
idivb
mov
popw
xchg
hlt
or
out
xchg
and
adc
or
dec
test
out
jle
add
bswap
xchg
movsl
xchg
xor
jle
adc
sahf
mov
lods
cltd
aas
mov
cmp
push
fnstenv
push
and
pop
xor
daa
jp
sbb
dec
mov
into
mov
jb
xchg
xlat
push
adc
pop
xchg
push
daa
fs
and
mov
or
adc
mov
flds
xor
loop
nop
or
xchg
xor
pop
dec
mov
data16
les
cmpsb
lret
ljmp
enter
mov
mov
xchg
sub
jno
pop
jl
or
adc
xchg
inc
inc
lock
fisttps
lods
in
mov
sub
add
dec
outsb
inc
mov
cmc
mov
scas
cltd
call
clc
pop
add
fisubl
pop
outsb
gs
mov
dec
into
push
pop
ret
je
xchg
pusha
or
mov
mov
jg
sub
sarb
push
daa
jle
sti
inc
jns
loop
inc
test
adc
fldl
inc
add
negl
inc
incb
es
dec
sbb
mov
ret
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
jmp
push
sub
stos
scas
sbb
jno
xor
mov
sbb
fsub
mov
jb
and
sbb
rorl
mov
repz
push
xor
pop
scas
pop
sbb
lret
mov
pop
rcrl
test
out
sti
mov
iret
adc
ds
dec
es
aas
and
mov
clc
push
jns
jne
push
jns
popa
mov
cltd
subb
jbe
fcoml
sub
jae
cmc
int
mov
adc
out
push
js
test
inc
and
cltd
in
inc
je
ja
cmpsl
notl
jmp
dec
lods
hlt
loop
mov
mov
or
lret
mov
cli
sub
mov
cmp
lds
xchg
jmp
or
push
adc
mov
mov
lods
addr16
jbe
mov
fdivrs
mov
or
pop
inc
icebp
fidivrl
insl
test
loop
daa
fisttpll
jno
lcall
inc
fdiv
mov
xlat
mov
ja
data16
dec
fs
push
outsb
pop
mov
add
int3
jne
pop
xchg
mov
insb
fldenv
dec
lea
xchg
adc
and
test
fistps
mov
mov
outsb
repz
ret
divb
scas
lea
shl
daa
adc
cmp
xchg
insl
es
cltd
jnp
jnp
sbb
daa
sub
scas
andl
pop
push
push
es
xchg
and
mov
dec
mov
nop
jl
add
das
sbb
or
sbb
xlat
or
call
adc
sbb
inc
imul
jge
add
fdivrp
out
frstor
insb
aas
mov
sub
clc
or
sub
shrl
mov
roll
xchg
orl
jns
push
sbb
dec
rorb
inc
fidivs
and
out
icebp
jmp
mov
gs
lsl
mov
lret
cs
rcrl
adc
sbb
icebp
into
clc
ffreep
add
clc
fstpt
inc
add
jae
xlat
stos
mov
not
int
movsl
loop
push
subb
aas
jmp
push
cli
xchg
dec
mov
movsb
sbb
cwtl
pop
orb
pop
pop
mov
pop
ret
push
mov
sub
xor
push
push
movzbl
add
mov
push
movl
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jg
call
sub
movzwl
or
adc
add
sbb
movzwl
add
movl
mov
add
mov
mov
cmpl
movl
mov
mov
jmp
mov
cmpl
jae
push
push
call
mov
xor
xor
sbb
xor
or
or
sub
and
add
add
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
call
mov
xor
sbb
mov
sub
mov
mov
sub
and
sbb
xor
addl
add
mov
xor
div
cmpl
mov
mov
movl
jmp
mov
movl
cmpl
jge
pushl
push
call
xor
add
mov
xor
or
sub
imul
sbb
or
sub
subl
not
mov
xor
movl
and
sbb
sub
mov
cmpl
movl
mov
movzbl
jmp
movl
mov
cmpl
jae
pushl
pushl
pushl
call
subl
negl
mov
mov
sbb
and
add
mov
or
movl
movl
and
mov
mov
mov
sub
add
xor
imul
mov
mov
sub
sub
xor
cmpl
movl
movl
movl
not
jmp
movl
cmpl
jge
push
push
pushl
push
push
call
neg
xorl
sbbl
adc
andl
inc
sub
mov
neg
movl
movl
movl
mov
sbbl
mov
xor
mov
sub
mov
xor
xor
cmpl
movl
mov
mov
jmp
movl
cmpl
jge
pushl
pushl
pushl
push
push
push
call
sbb
subl
andl
sbb
or
xor
mov
imul
sub
mov
sub
adcl
mov
movl
xor
mov
notl
xor
incl
jmp
mov
pushf
xchg
add
xor
mov
adc
xchg
fisubrs
mov
ret
pop
mov
rorl
into
mov
and
xchg
mov
xchg
cmp
push
mov
sahf
sub
jl
mov
xlat
adc
add
adc
push
mov
or
in
mov
add
add
in
jecxz
dec
adc
stos
je
icebp
xchg
jecxz
idivl
push
xor
fistpl
in
loopne
jb
popa
add
test
sub
xlat
mov
push
jae
xchg
mov
dec
out
test
mov
ss
jge
jns
adcl
or
push
push
jmp
je
sub
popa
mov
inc
popa
gs
bound
adc
xor
aas
icebp
mov
js
aam
std
adc
xchg
pop
leave
mov
cmp
cmp
mov
test
dec
mov
and
adc
mov
mov
lea
pop
gs
in
inc
bnd
mov
xchg
mov
popa
in
xchg
ds
in
cli
test
jns
shl
out
or
ret
je
test
and
or
or
dec
xor
pushf
cs
jno
in
mov
cld
push
push
xchg
sbb
mov
mov
in
xchg
cmp
jle
pop
ljmp
add
jne
mov
jmp
xchg
js
subb
loop
pop
cmpl
add
sar
insb
xchg
lcall
test
pop
mov
inc
addr16
inc
mov
or
pop
outsl
xor
mov
cmp
sub
stc
pop
dec
push
and
addb
add
dec
jb
mov
inc
int
mov
cmpsb
loope
inc
nop
and
inc
dec
push
mov
test
stos
inc
repz
push
orb
and
mov
xchg
out
subl
fwait
pop
or
or
mov
fwait
enter
xchg
adc
xor
push
out
mov
fstpt
js
movsb
scas
int3
sub
shr
sub
cltd
mov
fcmovnbe
lcall
fimuls
or
xor
ret
dec
or
stc
div
mov
xor
mov
adc
mov
subl
mov
xorl
lea
xor
or
adc
mov
mov
cmpl
movl
mov
jmp
movl
mov
cmpl
jle
push
push
call
add
orl
and
sub
mov
mov
add
andl
adc
mov
mov
orl
sub
xor
sbb
imul
add
dec
mov
sub
mov
cmpl
not
mov
mov
mov
jmp
movl
cmpl
jbe
push
call
add
add
movzwl
xor
subl
movl
subl
mov
andl
xor
xor
movzbl
or
jmp
adcl
sbb
mov
cmp
mov
xchg
or
jno
cmp
pusha
and
cmp
mov
into
mov
or
aad
xor
mov
jg
ja
push
sarb
mov
sbb
enter
mov
cwtl
push
jl
jne
xadd
add
push
adc
cmp
xchg
or
sbb
movb
es
or
loop
dec
imul
jmp
inc
adc
in
xchg
jbe
lret
pusha
pop
wbinvd
ret
or
cmc
das
push
outsl
outsb
repz
movsb
mov
jge
mov
add
push
test
xchg
sbb
fmuls
aaa
cmpsl
lret
test
mov
jle
and
fldl
dec
adc
xchg
repnz
add
rorb
test
cmp
daa
aad
das
imul
push
cmpsb
sbbb
fisubl
jbe
shrl
fs
add
in
cld
xchg
add
ss
aas
shrl
rorl
test
insl
mov
jecxz
addr16
sub
push
jne
repnz
fcmovu
and
adc
sahf
mov
jae
pop
or
insl
add
addr16
and
rolb
pushf
sub
je
scas
dec
push
dec
pop
shr
push
xor
sbb
or
aaa
movsb
rolb
sbb
jns
dec
pop
push
xor
dec
scas
dec
jl
aam
outsb
lods
pop
out
dec
push
inc
sti
add
fidivl
push
lahf
and
daa
cltd
arpl
rcr
xor
ss
aam
cwtl
es
stos
les
inc
fdiv
add
roll
fnstenv
dec
scas
sub
lods
ljmp
add
push
repz
or
movsb
mov
lds
inc
imul
test
call
cwtl
adc
adc
and
push
popa
inc
jbe
out
ret
adc
negl
cmpsb
mov
cmp
cmp
push
sbb
pop
jb
xchg
inc
iret
xchg
push
stos
repnz
push
sbb
dec
jns,pn
or
stc
add
pop
jns
pmulhw
or
es
and
fdivrs
sbb
std
mov
add
add
addb
adc
add
cmpl
movl
mov
not
jmp
movl
cmpl
jb
push
push
call
dec
inc
andl
andl
mov
xor
mov
mov
sbbl
movl
adcl
mov
or
imul
and
mov
sbbl
sub
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jae
pushl
push
pushl
pushl
call
xorl
not
sbbl
adcl
neg
add
sbbl
mov
andl
imul
add
mov
xorl
and
xor
or
mov
sbb
movl
mov
or
mov
mov
add
mov
addl
xor
subl
div
cmpl
movl
not
jmp
movl
movl
cmpl
jg
push
call
neg
or
add
sub
xor
or
orl
andl
or
mov
sbb
sub
mov
subl
mov
xor
jmp
mov
sbb
mov
cltd
outsl
adc
mov
mov
ror
cmp
xchg
jae
adc
aad
shll
xor
movsl
push
out
xor
jecxz
mov
jbe
dec
sar
add
adc
out
xorb
into
out
or
loop
arpl
cltd
push
push
sub
test
add
pusha
push
xor
xchg
ja
ja
jle
loop
and
fisubs
pop
and
pop
and
mov
pop
in
movsl
js
xchg
jnp
push
lret
push
jo
jp
xlat
outsl
push
sbb
jno
mov
fwait
dec
mov
cmp
iret
mov
mov
out
imul
call
xor
sbb
mov
or
mov
cmp
jns
sbbl
add
or
pusha
loop
mov
pop
loope
push
les
xchg
test
cltd
push
stc
push
ljmp
and
mov
add
mov
sub
jecxz
adc
inc
add
sbb
push
jno
adc
loop
cmp
jle
pop
ljmp
in
and
dec
js
pusha
inc
mov
loope
cmpsl
in
adc
test
mov
mov
push
or
mov
fsubr
inc
fwait
andb
test
inc
scas
stc
cmp
push
push
ret
add
add
sbb
add
arpl
cmp
sbb
iret
rcl
jae
dec
cmc
add
mov
mov
jns
pop
popf
mov
in
nop
cmpsl
sbb
nop
dec
xor
fwait
xchg
sbb
sub
cmp
fldz
sbb
imul
imul
lahf
arpl
test
das
je
mov
dec
jne
mov
add
cli
addr16
dec
add
in
dec
cmpsb
sbb
nop
adc
insl
scas
cmp
out
xor
inc
popf
stc
outsb
push
dec
cltd
sub
popf
inc
pop
scas
xchg
push
sub
vmovlps
shrl
mov
mov
fwait
push
sbb
lods
add
insb
sub
lods
out
jb
adc
mov
stos
and
xor
lcall
lods
jle
hlt
nop
push
add
mov
add
xchg
loope
push
test
scas
mov
scas
and
push
jo
pop
push
inc
mov
mov
xor
cmpl
mov
movl
jmp
movl
cmpl
jb
push
pushl
push
push
call
xor
xorl
mov
or
mov
mov
xor
mov
xorl
adc
dec
xor
push
pop
xorl
div
shr
and
push
cmpl
mov
not
not
jmp
movl
cmpl
ja
push
pushl
pushl
push
call
xor
xor
add
or
sbb
or
cmpl
mov
mov
jmp
mov
mov
cmpl
jl
push
pushl
push
call
xorl
movzwl
add
mov
adc
sub
adc
sbbl
xor
or
mov
xor
pop
sub
mov
movl
mov
or
and
orl
add
cmpl
movl
mov
mov
mov
jmp
mov
cmpl
jge
push
call
orl
andl
xor
xorl
mov
xor
mov
and
mov
sub
neg
mov
adcl
movl
cmpl
movl
movl
jmp
movl
cmpl
jb
pushl
pushl
call
sbb
subl
xor
xor
and
adc
cmpl
movl
mov
not
mov
jmp
movl
not
cmpl
je
pushl
push
push
call
andl
or
xor
and
xorl
or
xor
jmp
sub
aaa
xchg
dec
aas
adc
inc
fisttps
mov
xor
or
xchg
pop
xchg
in
mov
dec
mov
jge
mov
test
cmp
push
jno
and
pop
push
jp
stos
cmp
jle
mov
dec
imul
in
jns
or
and
cwtl
mov
jecxz
in
add
mov
in
mov
ss
adc
add
xor
jnp
xor
mov
fidivrs
loopne
enter
js
sub
adc
cli
dec
rorb
stc
sub
jnp
lahf
in
test
rcr
jg
mov
sub
jo
stos
fdivrs
mov
xor
jge
pop
dec
je
mull
cmp
mov
mov
sub
push
mov
pop
xor
lahf
imul
add
imul
adc
xchg
leave
sub
daa
sub
daa
mov
aas
repz
leave
sti
lods
insl
js
sub
add
daa
sub
or
lea
adcb
sbb
das
nop
es
inc
adc
clc
pop
cmp
lods
mov
mov
cli
cltd
xchg
mov
das
ds
add
dec
test
emms
insb
dec
stos
lock
in
cmp
push
imul
sub
cli
jge
lods
repz
pop
push
daa
shl
mull
mov
xor
cs
jns
inc
test
dec
mov
fiaddl
test
mov
hlt
sub
push
cwtl
pop
jnp
js
cmp
lds
and
sahf
aam
mov
mov
cmp
adc
push
enter
mov
xchg
sub
xor
stos
sbb
dec
or
push
xchg
mov
dec
mov
cmp
movsl
incl
mov
or
pop
imul
push
xchg
insl
lods
ret
pop
pop
pop
shlb
or
incl
mov
mov
mov
mov
gs
ja
and
push
fsubs
orl
adcb
nop
mov
and
mov
stc
dec
arpl
sub
lods
sbb
dec
imul
fwait
mov
xchg
or
das
stos
adc
imul
or
mov
jl
inc
hlt
fiaddl
add
xor
xor
mov
sub
imul
movl
cmpl
movl
not
movl
movl
jmp
mov
cmpl
je
push
pushl
push
push
pushl
call
sbb
mov
add
sub
dec
adc
mov
sub
mov
sub
mov
mov
sub
and
mov
add
imul
imul
movl
mov
sub
subl
add
push
call
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jae
pushl
push
call
xor
or
or
mov
orl
adc
xor
adc
mov
cmpl
not
mov
movzwl
jmp
movzwl
movl
cmpl
jle
push
pushl
push
push
push
push
call
mov
sbb
mov
or
add
or
sbb
and
mov
mov
or
movzwl
or
mov
subl
xor
subl
div
mov
sub
and
cmpl
movl
movl
jmp
movl
movl
cmpl
je
push
pushl
call
sub
xor
mov
or
add
mov
or
decl
add
lea
sub
mov
sbb
movl
movl
sub
mov
mov
xor
mov
xor
cmpl
mov
movl
movl
jmp
movl
cmpl
jne
pushl
push
pushl
pushl
call
xor
add
mov
or
mov
adc
and
xor
sub
add
mov
sub
adc
sub
xor
or
sub
mov
adc
lea
neg
mov
mov
mov
sbb
mov
or
imul
cmpl
movl
movl
movl
jmp
movl
cmpl
je
pushl
call
xor
or
add
adcl
adcl
dec
xor
or
sub
mov
imul
xor
cmpl
mov
mov
mov
jmp
movl
cmpl
jge
pushl
pushl
pushl
push
push
call
andl
xor
xor
adc
or
or
negl
and
sbbl
mov
sbb
andl
and
cmpl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
call
and
mov
mov
sub
add
subl
add
mov
sub
mov
xor
add
mov
movl
cmpl
movl
mov
notl
mov
jmp
movl
cmpl
jbe
push
push
push
push
push
call
add
or
xor
sbbl
sbb
adc
movl
cmpl
mov
movl
movl
movl
jmp
movl
cmpl
jae
pushl
pushl
push
call
sub
or
sub
and
sub
dec
incl
mov
mov
sub
xor
movl
movl
cmpl
movl
movl
movl
mov
jmp
movl
not
cmpl
jg
push
push
push
call
and
xor
adc
or
sbb
add
mov
sub
mov
mov
xor
xor
xorl
mov
orl
call
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
pushl
pushl
pushl
pushl
call
adcl
orl
or
orl
dec
sbbl
sub
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
jmp
negb
mov
mov
or
and
sarl
inc
clc
adc
push
imul
popf
movsb
jno
or
ret
dec
outsl
out
jp
jl
mov
flds
aad
jnp
cwtd
lock
das
scas
scas
js
inc
sub
pop
cmp
push
mov
je
adc
ss
lea
hlt
lcall
pop
cmp
jle
mov
mov
mov
dec
in
fiadds
lds
cs
repnz
adc
add
clc
push
cli
ud2
xchg
xor
jae
int3
xor
cmpsl
push
shrl
dec
idivb
cmpsl
mov
pop
cmpsl
imul
add
xor
inc
bound
ds
loop
fs
xchg
dec
cmpl
scas
xchg
mov
out
jmp
cmpsl
xor
and
jecxz
ret
adcl
jne
sub
dec
dec
mov
negb
lea
jbe
aam
test
lods
push
add
clc
pop
stc
mov
in
add
out
sub
lea
lahf
or
pop
or
bnd
cmpl
repz
ja
jle
test
mov
jns
stos
pop
sbb
ret
testl
roll
in
test
andb
add
xchg
lret
jecxz
inc
pop
lcall
mov
push
sub
shll
int3
stos
pusha
mov
jmp
or
mov
adcl
dec
lods
aam
movswl
cmp
mov
push
inc
into
and
push
jge
pop
push
mov
sbb
lahf
ret
sub
mov
cltd
movsb
and
rcrl
mov
jne
repz
jbe
pop
stos
jb
daa
sbb
adc
lret
movsb
jl
sbb
dec
xchg
sbb
rol
dec
ror
out
out
int
flds
rcll
loop
add
jbe
cmp
add
mov
ret
sub
cli
mov
test
xor
xchg
dec
pop
cli
cmpsl
jne
xchg
xlat
pushf
pop
dec
sarl
pop
mov
std
or
adc
cmp
adc
in
cmp
and
push
rorb
je
xor
xchg
ret
lret
inc
sub
pop
out
jg
aad
jle
clc
or
enter
pop
mov
cmp
jne
mov
mov
jmp
mov
or
popf
lea
xor
cld
add
mov
mov
cmp
sbb
jmp
cmp
repz
xor
int
pop
into
jnp
imul
gs
fnsave
xchg
iret
ret
pop
loopne
push
or
lock
jg
fwait
xor
bound
rclb
and
inc
and
and
dec
sbb
mov
outsb
das
int3
jg
cwtl
cmp
adc
cmp
mov
mov
out
or
cmc
jns
test
xor
xor
inc
lods
cmp
add
fs
cltd
andl
into
cs
dec
popa
xor
icebp
rcrb
xor
test
mov
andb
je
cs
and
roll
add
jg
pop
test
pop
pop
lret
aaa
mov
adc
push
cs
enter
push
mov
dec
inc
fsubl
pop
cmp
xor
lcall
push
js
or
inc
lret
push
stc
lahf
pop
pop
insb
mov
mov
sbb
test
movsl
sbb
add
test
and
mov
or
mov
adc
enter
sub
inc
and
pop
mov
rcr
xor
out
adc
xchg
mov
jbe
test
mov
or
mov
pop
push
xchg
dec
cmpsb
jno
jl
and
mov
dec
in
sbb
cmc
pop
bound
pop
int3
sub
pop
lahf
mov
cmp
inc
or
or
pop
repnz
ja
aad
fidivl
push
push
cmp
or
fstp
fmull
or
cwtl
ds
out
aad
filds
jnp
loope
mov
lock
pop
aas
and
mov
adc
mov
stos
push
out
lock
cwtl
call
jno
pop
push
inc
mov
int
insb
repz
sarb
sbb
testl
pop
aas
or
pop
shrl
ljmp
jmp
add
repz
repz
sub
outsl
xor
mov
mov
shrl
or
daa
mov
hlt
fcoms
fs
dec
rcrl
insb
cmpsl
negb
repz
sti
push
xlat
adc
sub
pushf
xor
xchg
fs
inc
adc
sub
fninit
out
daa
repnz
ja
cltd
xor
mov
leave
jo
scas
lds
jbe
mov
xor
mov
jmp
dec
inc
imull
jns
gs
loopne
cmp
mov
mov
inc
ss
fstpt
sub
scas
dec
mov
test
cmp
mov
jne
pusha
add
inc
sbb
jb
sbb
xor
mov
setnp
mov
dec
or
push
cmc
int
test
xchg
jbe
std
mov
insl
mov
dec
dec
sbb
cld
mov
into
and
movsl
mov
xlat
ds
xlat
or
inc
mov
lret
cmp
scas
xchg
mov
and
add
mov
cmpsb
sbb
shll
push
test
sub
leave
cmp
jg
iret
jecxz
mov
popf
sub
aaa
or
addps
clc
pop
sarb
push
xchg
dec
das
xlat
movsb
xchg
xor
xor
mov
notb
jbe
js
insl
rclb
sbb
decl
or
sub
mov
mov
lcall
xor
lods
test
shll
push
test
lds
push
in
and
and
jno
adc
or
out
push
loop
pminub
sti
lea
add
jno
test
mov
xor
pop
dec
pop
lahf
and
cwtl
movsb
jns
cwtl
push
sti
jge,pt
addr16
mov
movsb
mov
sbb
inc
mov
add
test
int
out
mov
and
pop
cld
scas
scas
inc
pop
leave
filds
xlat
push
inc
sbb
scas
jl
iret
lds
lea
fiaddl
cmpsb
mov
or
icebp
push
enter
push
and
popa
inc
ja
push
inc
imul
addr16
jecxz
mov
jge
xchg
push
mov
add
popf
adc
push
pop
aaa
fcom
xlat
int
and
push
push
mov
dec
pop
add
inc
mov
test
dec
mov
xchg
mov
hlt
dec
cltd
fildll
pop
fcompl
pop
jl
repnz
loop
sti
addb
addr16
stos
fistl
call
out
mov
cwtl
push
scas
jle
ret
cmp
hlt
mov
sub
add
outsl
and
stos
jl
cltd
jmp
sbb
adc
dec
repnz
inc
stos
shrl
imul
fucomip
loop
decl
add
push
push
lods
push
lods
mov
push
mov
ja
inc
or
mov
imul
nop
xchg
jg
rcrl
rolb
mov
dec
pop
cmpsl
mov
ror
std
or
jae
xchg
xchg
sti
into
or
out
adc
iret
int3
sub
insl
in
and
das
sub
xor
sti
shlb
cmpsb
sub
inc
fincstp
cmp
xor
dec
scas
mov
insb
out
push
push
nop
jae
xchg
test
lods
lret
lods
push
jl
movsb
das
or
sub
xchg
jg
setae
int3
jae
mov
fcomps
sbb
fdivrs
mov
xor
mov
dec
loopne
pop
dec
jle
lret
dec
adc
lods
into
jmp
push
mov
cmp
aas
sbb
xchg
popa
daa
adc
insl
xchg
jmp
sbb
xchg
out
mov
scas
call
les
out
aas
lea
pop
or
test
popa
sub
in
jecxz
in
lret
mov
pop
and
imul
pop
repnz
xor
rcr
sub
sbbl
dec
in
inc
sub
out
in
repnz
sub
sub
dec
cld
shr
jecxz
aas
inc
in
outsl
popf
add
pop
inc
fmuls
sub
or
or
adc
mov
call
clc
xor
jge
and
or
push
ficoml
icebp
insl
pop
adc
xor
lock
push
mov
xchg
insl
out
mov
mov
mov
or
and
dec
push
lock
push
cmp
daa
dec
into
push
add
rorb
fcmove
shrb
das
inc
arpl
push
insb
mov
ficompl
movsl
xchg
dec
jo
mov
jo
leave
pop
vmwrite
sub
xor
xor
mov
pushf
mov
sub
in
sbb
flds
or
pushf
mov
jne
xchg
sbb
movb
lock
fcoms
imul
jnp
in
inc
int
fildl
test
in
pop
jns
cmp
and
pop
nop
jno
loop
shr
popl
lcall
test
pop
daa
aas
cmpsb
sub
data16
imul
or
dec
icebp
popa
lock
lret
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
jmp
insl
inc
push
in
js
jge
and
fcmovnb
das
add
sarl
imul
hlt
lahf
jne
push
and
adc
add
out
out
or
pop
int
push
mov
mov
push
mov
xchg
cmpsb
pop
shl
xchg
ficoml
gs
test
enter
cmpsl
xchg
cs
pop
jbe
mov
roll
js
push
loop
aaa
insb
lcall
fcmovnu
adc
das
mov
aas
mov
aas
jnp
lret
xor
or
scas
xor
cmpsl
and
mov
add
cli
mov
adc
mov
sub
ret
in
call
ljmp
ss
in
pop
push
cli
lods
mov
inc
cmp
cmp
adc
test
mov
cmpsl
push
cmp
test
test
dec
jmp
pop
imul
push
jmp
mov
imul
imul
mov
cwtl
adc
mov
mov
mov
xchg
lret
lcall
xor
mov
push
icebp
mov
mov
inc
cmp
mov
push
xor
sub
push
mov
push
scas
dec
dec
mov
xchg
adc
nop
fucompp
xor
outsb
out
out
aas
leave
mov
int3
adc
sbb
xor
arpl
rcl
add
test
pop
loopne
dec
test
cld
xchg
xor
cmc
adc
mov
push
jnp
fldcw
jge
sbb
xchg
addr16
jl
inc
stos
popf
jno
sub
mov
mov
aaa
fsubs
repz
cmp
repnz
aam
ja
xchg
and
inc
jecxz
lea
rorl
add
pop
pop
rorl
pop
int
or
xchg
add
push
dec
or
push
repz
unpckhps
or
xor
and
ret
jo
adcb
movsl
cmp
movsb
dec
sbb
aam
push
cmp
pop
pop
fs
pushf
xchg
xchg
mov
rolb
or
jg
xchg
add
mov
pop
popa
xchg
pop
cmp
dec
out
scas
sbb
insb
fildl
ljmp
sub
rolb
insb
dec
xchg
mov
xlat
pop
push
xchg
dec
adc
decl
decl
inc
add
test
pushl
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
jmp
dec
gs
hlt
addr16
jge
sub
push
xor
mov
mov
sbb
adc
shlb
fnstcw
repz
leave
inc
xlat
jmp
dec
add
addl
pop
pop
pop
mov
icebp
ljmp
out
lret
pop
ja
in
bound
cmp
add
ja,pt
sbb
int
and
xchg
mov
adc
cmpsl
push
lods
scas
mov
lock
popf
and
mov
jmp
sbb
lahf
pushf
insb
xchg
ljmp
incb
mov
shrl
loope
mov
mov
xchg
sub
scas
hlt
lods
jl
dec
call
jbe
and
scas
out
sbb
cmpsl
pop
push
adc
mov
xor
rorb
add
mov
fldl
push
into
jl
sbb
mov
mov
sub
dec
ss
xchg
cli
jg
and
xchg
mov
out
icebp
push
lock
fcmovnbe
cmp
rclb
pop
mov
and
stc
sub
icebp
in
aas
or
aaa
or
in
out
xor
hlt
jae
mov
addr16
dec
call
fmulp
dec
out
pop
mov
jbe
jp
dec
xchg
push
lahf
fisubrs
repnz
jnp
sbb
add
jae
popa
cmc
sbb
mov
sbb
jo
fisttpl
mov
ljmp
js
rorb
mov
mov
jmp
pop
jns
and
and
pop
mov
jbe
cmpsb
cmpb
mov
push
cld
push
test
je
cmp
dec
mov
dec
sub
adc
inc
push
mov
cmp
pusha
inc
ror
jmp
outsb
fsubrs
adc
cmpb
push
mov
aam
rcl
jo
mov
andb
movsb
sub
sub
mov
sbb
or
loop
mov
or
push
call
sub
xchg
rol
xchg
ret
scas
cmp
es
aaa
adc
fisttpl
negb
jns
pop
push
imul
cs
outsl
sti
xor
pop
stc
cmpsl
mov
and
lock
mov
xchg
adc
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
jmp
ret
adc
testb
loopne
jno
mov
mov
sbb
inc
fcom
adc
cwtl
or
mov
adc
mov
inc
in
or
inc
arpl
or
inc
sbb
lahf
les
into
inc
je
stc
mov
push
push
adc
aas
pop
shlb
fidivs
mov
pop
and
jge
or
and
jns
push
jo
cwtl
gs
out
cmc
and
sub
pushf
in
dec
popf
jne
jae
fdivs
in
mov
push
push
scas
cmovns
adc
mov
mov
xchg
push
jmp
stc
es
std
mov
pop
in
xchg
test
and
jp
out
test
iret
mov
in
pushf
mov
push
fcomps
xchg
push
and
pop
sbb
shlb
push
jno
leave
shll
mov
and
shl
push
test
rcr
push
std
push
inc
and
or
aad
mov
inc
ret
mov
xor
sub
pop
test
fadd
pop
stos
sti
std
or
push
cwtl
fnstcw
aad
movsb
into
sbb
sub
push
aas
mov
inc
push
insb
iret
ja
cltd
jge
pop
dec
daa
jne
out
pop
pop
pop
push
mov
les
push
pop
mov
sub
adc
mov
bnd
data16
notl
into
push
fsubs
out
pop
std
data16
and
pop
and
jl
push
out
xor
xchg
testb
sbb
adcb
sub
popf
lret
push
push
sub
mov
fmul
in
dec
mov
pop
das
mov
dec
lds
adc
dec
or
pop
into
mov
imul
and
xchg
fwait
cmp
xor
push
mov
mov
jns
iret
push
call
shrb
xchg
mov
fiaddl
in
pop
push
dec
outsb
stc
pop
push
lahf
jbe
sub
ds
enter
adc
movsl
push
dec
fdivs
gs
scas
fdivl
stos
cmp
imul
shl
scas
fisubrs
in
fisttps
mov
push
adc
mov
sub
subl
push
enter
jae
mov
iret
xor
push
ss
cltd
movsb
outsb
notb
sub
cmc
cmpsl
push
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
lahf
pop
push
leave
push
mov
jge
loope
fsubrs
mov
mov
push
push
dec
add
jl
xor
data16
cli
xor
push
roll
push
test
push
dec
adc
test
add
lahf
test
enter
mov
rol
sub
pop
daa
mov
lahf
cmpsl
xchg
and
push
shl
xchg
xor
aaa
aaa
aad
mov
fisubs
push
and
scas
popa
mov
es
jg
adc
inc
jmp
dec
inc
cmc
int3
xor
arpl
or
test
and
dec
mov
insb
fdivrp
les
sti
push
mov
das
or
aaa
mov
push
ja
lret
and
xor
jbe
cmp
push
stos
sub
cltd
cmp
imul
dec
push
sahf
mov
lahf
dec
cmp
inc
into
lcall
addr16
fcompl
jb
pusha
lcall
enter
adc
dec
das
sbb
jge
mov
mov
nop
in
imul
popf
sti
dec
sub
or
insl
push
mov
jecxz
sti
xorl
add
add
push
call
lds
cmp
outsl
mov
push
adc
dec
js,pn
cmp
scas
jno
ss
aad
scas
xor
pop
popa
lcall
mov
mov
pop
sbb
lods
mov
mov
adc
sub
push
das
mov
ss
into
mov
push
mov
dec
xchg
aad
mov
icebp
lds
push
xor
inc
in
test
ret
xchg
out
test
sti
les
xchg
sti
xchg
dec
xchg
scas
xor
test
inc
sub
inc
mov
fs
outsb
ljmp
shl
push
push
add
pop
adc
adc
cld
inc
enter
adc
mov
xchg
inc
shlb
pushf
push
fs
pop
dec
das
adc
add
add
and
cli
mov
push
stos
mov
sub
or
loope
pop
lcall
push
mov
mov
data16
sub
jg
sbb
mov
clc
outsb
dec
rorl
mov
clc
cmp
pop
inc
fcoms
int
inc
dec
ds
xlat
insb
inc
imul
out
dec
subl
dec
and
pop
decl
test
decl
pushl
xor
mov
call
or
or
jmp
test
cmp
ljmp
mov
add
inc
jnp
arpl
and
sub
inc
test
test
repz
test
stc
mov
adc
mov
fldt
push
cmp
push
mov
mov
fcom
mov
test
movsl
adc
dec
aad
sub
rcrl
dec
push
add
xchg
or
xorb
adc
rorl
test
adc
je
insb
fcompl
lea
mov
leave
leave
into
pmulhw
imulb
cltd
or
int
insb
cmp
test
jl
fwait
jbe
adc
mov
in
lahf
mov
loop
mov
pop
add
xor
xchg
adc
mov
sbb
lahf
lds
xchg
xor
adcb
test
ja
and
pop
addr16
stos
dec
dec
lahf
and
fistl
mov
int3
push
push
in
int
xor
inc
sub
pushf
or
push
inc
aad
sub
adc
push
mov
ret
inc
popf
leave
inc
shrb
xor
lcall
pop
jmp
aas
or
dec
jb
push
ja
enter
xchg
cli
outsl
and
mov
test
roll
orb
and
push
nop
pop
mov
aas
jmp
clc
push
cmp
insb
cmp
inc
inc
inc
xor
mov
xchg
fdivrs
xor
adcb
out
and
dec
out
or
hlt
inc
mov
fwait
in
pop
push
insb
iret
pop
xor
mov
push
aaa
mov
mov
xor
addb
adc
lock
fnsave
out
outsb
jae
out
inc
cmp
xor
dec
mov
movb
inc
iret
mov
pop
sub
out
jp
ret
aam
push
add
loopne
insl
mov
sub
jnp
mov
ret
push
outsb
imul
movsl
test
or
lahf
ljmp
cmp
subl
push
sub
mov
mov
jmp
cmp
pop
inc
cmp
stc
xchg
clc
scas
adcl
sub
js
xchg
leave
sbbb
negl
jge
inc
testl
std
mov
ret
pop
orl
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
imul
mov
or
add
imul
mov
xor
mov
lea
jmp
dec
or
popf
lods
scas
mov
sahf
movsl
fsubrs
enter
sarl
fsubs
sbb
cmp
clc
rcl
ror
faddl
fcomp
mov
in
jb
inc
xor
xchg
cmpsb
mov
inc
inc
adc
aad
loopne
dec
jns
jmp
mov
dec
cld
js
lea
and
xor
jecxz
or
push
out
mov
inc
or
roll
mov
cmpb
sub
lret
rol
adc
std
shll
ja
mov
mov
or
lods
iret
mov
cs
and
lea
outsb
fisubl
add
subb
and
ss
daa
test
pushf
jb
mov
sbbl
mov
lds
pop
mov
out
sub
inc
sbb
inc
push
inc
ss
pop
add
mov
push
imulb
ja
mov
push
jp
jle
lods
push
jne
and
cmp
adcl
addr16
cmp
adc
push
push
daa
fmull
push
pop
push
daa
xorl
dec
adc
loope
mov
lods
fdivrl
test
xlat
cmp
stos
sarb
jae
fstl
jmp
imul
test
insb
insb
mov
xchg
lock
jecxz,pt
jle
ss
xchg
out
repz
mov
sbb
or
inc
insb
icebp
popa
aaa
or
je
insb
insl
outsb
call
aad
sub
push
xor
push
xchg
call
push
push
fsub
mov
mov
pop
cmp
mov
jbe
push
lods
cmpsl
jae
fcmove
mov
insl
xchg
sbb
jne
call
nop
or
pop
mov
call
sbb
cmp
je
inc
inc
cld
jg
add
movl
movl
movl
movl
mov
imul
mov
xor
mov
sub
mov
lea
mov
xor
mov
sub
xor
push
pop
div
mov
and
mov
or
mov
mov
xor
div
mov
or
xor
push
pop
div
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
mov
imul
and
mov
sub
add
mov
or
xor
add
mov
xor
push
pop
div
and
mov
add
or
and
add
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
imul
mov
xor
mov
and
mov
lea
mov
and
mov
sub
mov
imul
mov
xor
add
mov
sub
imul
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
ja
push
call
adc
orl
add
add
or
adcl
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
adcl
subl
cmpl
je
addl
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
movl
jae
shld
shl
ret
neg
mov
adcl
xor
andl
and
shl
ret
xor
xor
ret
