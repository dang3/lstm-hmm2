push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
mov
sbb
sbb
adc
sbb
sub
rorb
cs
push
mov
psubw
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
hlt
adc
mov
insb
xchg
cmp
add
inc
add
fistpll
pusha
shll
daa
in
scas
ret
xchg
in
je
shrl
xchg
aaa
adc
push
jecxz
mov
int3
stos
ficoms
jp
jnp
sub
test
loopne
inc
hlt
sub
and
and
cmp
adc
das
loop
arpl
pushf
ljmp
jo
pop
sbb
test
sbb
stos
jmp
lods
cmp
xchg
lea
xor
mov
xor
scas
fmull
loope
mov
in
scas
and
jne
div
inc
sbb
mov
and
sub
xchg
xor
sub
and
cmp
push
rcl
jle
cmp
psubusw
fidivrl
fists
mov
lea
mov
sbb
xchg
jnp
mov
push
cmp
movsl
insb
or
jnp
imul
arpl
popf
sub
sub
mov
fsts
or
sahf
add
or
add
mov
stc
xor
mov
cld
inc
ljmp
cld
adcl
jno
jg
lock
aaa
in
inc
cmp
push
sbb
adc
mov
mov
sbb
mull
lock
dec
pop
hlt
pushf
push
out
rolb
dec
pop
push
out
fpatan
mov
add
ffreep
pop
or
gs
insl
push
inc
xchg
cmp
jg
sahf
mov
cwtl
mov
sbb
orb
scas
leave
jns
int3
aad
jbe
sub
ret
enter
lahf
or
mov
or
fnsave
cmpl
push
pop
and
lea
push
adc
cmpb
sbb
mov
push
lret
mov
jp
subl
inc
mov
mov
out
sahf
xchg
loope
adc
mov
into
xor
pop
lds
adc
sub
lret
out
lahf
fistpl
adc
xchg
cmp
mov
adc
pop
out
insl
cs
jg
mov
outsb
cwtl
mov
call
inc
xchg
mov
fistps
pop
xchg
sub
test
call
lret
sbb
push
cmp
push
repz
inc
adc
xchg
out
or
addr16
adc
push
or
shrl
dec
sub
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
mov
repnz
rcrb
cmp
popa
je
pop
and
pop
or
pop
cltd
psrlw
xor
or
mov
les
pop
jae
xchg
push
add
cmp
imul
jbe
icebp
cmpsb
fidivrl
mov
dec
add
cmc
lds
mov
adc
lock
lret
out
mov
dec
js
outsl
and
and
pusha
push
mov
mov
lret
mov
jbe
dec
sub
fwait
cltd
pop
fiadds
cmc
nop
sbb
inc
xchg
call
lods
inc
mov
mov
out
test
and
enter
lret
push
mov
dec
mov
xchg
stos
movsl
cli
sahf
mov
adc
pop
adc
fsubrl
imul
aad
jnp
sarb
cmp
out
std
and
or
test
jbe
aaa
and
add
jecxz
and
hlt
jae
sbb
xchg
xchg
cwtl
test
lds
sbb
push
adc
js
add
mov
mov
pop
dec
xlat
sub
cwtl
out
mov
test
mov
mov
aaa
add
xor
lcall
mov
roll
subl
push
mov
push
ja
add
ret
inc
xchg
pop
test
adc
jo
fidivl
jl
xor
sti
fsubs
pop
mov
stos
das
mov
stos
repz
into
lock
xchg
mov
mov
jl
xor
sub
and
imul
imul
jge
and
jge
imul
imul
data16
ds
jns
cmp
add
call
int
pop
mov
inc
nop
lods
neg
cmp
fldcw
push
and
pop
enter
cmp
aaa
xor
jo
adc
mov
dec
sub
mov
xchg
mov
mov
fnsave
add
jbe
add
push
jmp
outsb
mov
xchg
inc
ret
and
ss
add
xor
mov
pop
cwtl
repnz
repz
jnp
xor
mov
aaa
sub
lods
mov
out
mov
cmp
dec
mov
inc
subb
mov
stos
pop
cli
ret
ds
push
and
incl
mov
rorl
jle
faddp
adc
adc
sub
mov
mov
push
inc
or
in
sarl
xor
mov
js
xchg
lea
xor
cmp
shll
add
xchg
add
cmp
sbb
jbe
mov
xorb
add
mov
inc
cmp
xor
out
rclb
jno
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
jbe
push
mov
sub
push
pop
shrb
push
jae
xchg
jmp
call
mov
and
mov
pop
pop
pop
mov
fmul
adc
mov
push
xchg
and
les
and
pop
arpl
push
in
jae
into
into
stos
aas
mov
add
lret
es
iret
scas
push
jle,pt
lock
push
add
rorb
lods
mov
xor
addb
insb
out
jnp
jb
inc
gs
jmp
xchg
test
test
in
shrl
sti
cwtl
mov
mulb
and
insl
gs
pop
mov
test
mov
pop
insb
pop
xchg
cmp
add
stos
pop
or
jp
loop
out
pop
daa
mov
lcall
jb
adc
popf
lea
mov
test
xlat
pushf
or
mov
mov
mul
jge
pop
sbb
mov
pop
adc
roll
inc
inc
dec
jnp
aad
lcall
sub
aaa
dec
loopne
inc
mov
mov
aaa
fidivs
sahf
push
adc
add
aas
out
mov
xchg
loopne
pop
cwtl
fbstp
int3
stos
jge
sbb
mov
pop
fnsetpm(287
adc
jle
fsubrl
cli
cmp
out
sub
jbe
ss
push
mov
lahf
call
repnz
mov
and
sahf
lcall
fistl
xor
jecxz
sbb
movb
lods
out
mov
sub
inc
mov
popl
jbe
lock
out
add
mov
jecxz
sbb
add
dec
ret
loope
pop
xor
xchg
jae
add
mov
mov
stos
push
daa
enter
adc
popf
jnp
cmp
jecxz
ficompl
outsl
into
and
pop
movsl
dec
enter
mov
inc
mov
sbb
add
outsl
je
adc
arpl
add
js
mov
mov
xlat
sbb
subb
mov
mov
add
mov
ret
je
mov
inc
hlt
mov
test
inc
cltd
jecxz
fpatan
imul
test
jae
mov
pop
cmp
sub
aad
xor
out
ljmp
movsb
dec
fisubl
loope
cwtl
add
fisttpll
outsl
push
mov
inc
repz
add
std
rorb
fnsave
in
jo
push
shr
mov
repnz
or
push
sub
repnz
jbe
push
into
sub
or
pushf
xchg
int
dec
jp
out
mov
add
ja
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
jno
mov
and
sbb
mov
hlt
sbb
ds
pop
xor
out
xchg
cmp
xchg
mov
mov
adc
rolb
cmc
jp
push
dec
push
outsl
cmp
popa
dec
sub
adc
or
mov
jae
cmpsb
push
jae
pop
arpl
in
sub
sbb
mov
sbb
jmp
ja
testl
add
movsl
or
and
mov
sub
cmp
outsl
pop
dec
lret
cmpl
sub
aad
leave
pop
test
cmp
push
ret
mov
fsubs
add
jmp
lods
mov
mov
ret
mov
das
jmp
js
test
mov
aam
insl
cmp
call
out
cwtl
aas
fwait
bound
or
daa
jecxz
cmp
jle
in
xor
and
push
mov
data16
and
inc
ds
cmpsl
ljmp
rolb
inc
in
cmpsb
sub
mov
mov
addb
fs
lcall
and
or
and
repnz
in
adc
mov
daa
mov
mov
jge
jecxz
repnz
lock
ds
xor
roll
xchg
iret
or
outsl
push
cwtl
fucomip
fadds
repnz
sbb
adc
pushf
call
enter
aad
pop
rol
scas
dec
mov
add
fmuls
je
mov
xor
lea
push
xchg
xchg
jp
roll
movsl
sbb
cmpsl
aaa
lea
lods
xchg
pop
xlat
sub
negl
mov
adc
jp
nop
xor
adc
stc
std
neg
rolb
mov
into
jl
aas
and
jbe
into
or
popf
mov
jbe
fwait
mov
xor
push
push
pop
cmpsb
sti
and
cltd
mov
adc
jno
jg
fcoms
icebp
mov
dec
add
sub
xchg
xor
out
mov
add
ja
jae
and
ret
fbstp
orb
out
and
mov
adc
scas
lahf
mov
push
data16
outsl
jp
cld
push
cmp
xchg
fistpll
adc
pop
or
and
or
push
mov
add
lods
mov
ss
or
test
out
cmc
rcl
mov
adc
cmpsb
stc
jecxz
pop
in
mov
or
push
mov
sub
sbb
inc
mov
iret
pop
xchg
mov
mov
dec
inc
pop
add
loope
dec
cmpsl
or
js
and
jno
mov
and
call
add
inc
icebp
xor
adc
in
repnz
mov
mov
aas
add
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
outsl
call
sbb
and
sbb
sbb
inc
sub
int3
ljmp
xor
cmp
mov
or
repnz
aaa
jbe
shlb
mov
fwait
in
bound
stos
lods
popa
sbb
jns
lods
imul
dec
mov
les
divb
adc
push
mov
mov
jl
mov
jnp
fwait
cmpb
popf
pop
flds
addr16
in
in
loope
sub
dec
mov
loope
int3
add
xchg
adc
jo
stos
push
inc
xor
ret
das
lret
ret
cmp
push
xor
jecxz
xor
int
sub
mov
orb
and
js
jl
test
cmp
sbb
xchg
clc
xlat
mov
mov
bound
test
sbb
cli
push
arpl
sub
es
pop
mov
lock
divl
xlat
mov
jmp
pop
mov
sbb
arpl
jle
sbb
or
call
sbb
pop
inc
ret
mov
test
mov
inc
les
dec
ja
xchg
push
inc
lret
push
or
adc
add
into
sub
and
pop
cld
push
xor
mov
mov
xor
mov
add
ss
addb
add
and
and
pop
xor
lahf
xor
inc
in
inc
lret
jno
mull
hlt
popl
aad
popa
dec
leave
fsubrs
xchg
incb
sub
adc
clc
inc
jo
fldenv
dec
mov
inc
cwtl
xor
ror
xchg
push
xchg
jbe
iret
je
mov
pusha
and
popf
ret
lods
mov
mull
in
std
xlat
outsb
jne
push
loop
out
test
fldcw
cmpsb
sti
in
out
jmp
adc
xor
sbb
mov
mov
loop
pop
iret
mov
xchg
push
cmp
jecxz
sub
adc
jnp
adc
push
mov
mov
movsl
rcrl
addr16
sbb
popf
dec
out
jge
inc
mov
or
hlt
fisubl
jg
fcompl
movsb
into
daa
cmp
xor
pop
fs
pop
insb
bnd
aam
clc
adcl
mov
xlat
xorb
roll
and
popf
adc
push
test
xor
jb
mov
fisttps
pop
addr16
mov
int3
cltd
xlat
lea
xor
jne
pop
pop
shr
in
fadds
xor
stos
sbbl
and
fdivp
or
or
push
pusha
mov
pop
sysexit
stos
mov
loop
out
sti
inc
dec
ret
in
sub
mov
xor
loopne
add
aas
pushf
xor
addl
add
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
call
sbb
and
sbb
and
stc
test
jb
aad
dec
mov
sub
lret
xor
pop
fdivrs
or
mov
cmp
insl
in
xchg
ljmp
or
jl
and
jg
xchg
mov
insl
mov
pop
mov
push
and
add
dec
xor
add
call
push
ja
gs
xor
adc
test
pop
sub
lea
je
mov
testl
pop
daa
push
ret
cmpsl
pop
lods
xchg
rorl
outsl
lahf
cmp
mul
das
jno
cmp
jbe
stc
sub
sbb
mov
imul
out
cld
jp
mov
rcll
dec
cmp
out
andb
jb
push
push
cmc
test
add
jae
adc
jnp
mov
mov
orb
aam
leave
sbb
lods
pop
push
dec
add
or
xor
jno
push
cmc
sbb
decb
or
or
inc
pop
inc
push
xorl
mov
bound
inc
jbe
pop
mov
out
pushf
pop
imul
cmc
aaa
push
or
xchg
nop
in
jb
jle
ljmp
fwait
push
or
repnz
jae
mov
push
sbb
outsb
sbb
mov
cli
inc
les
icebp
sub
push
adc
repz
push
cmp
imul
fwait
out
inc
sbb
sti
pop
jge
push
dec
sub
xchg
push
xor
pop
rorl
in
mov
xor
sbb
dec
pushf
adc
jmp
sbb
mov
xor
add
lahf
int3
push
sbb
mov
sbb
mov
cs
pop
scas
cmpsl
mov
or
cmp
sahf
repnz
sbb
and
fstp
xchg
jns
push
cmp
imul
out
push
add
sub
ss
enter
mov
mov
insb
and
cs
cld
out
test
stc
cmp
lea
push
mov
add
jmp
call
scas
xchg
adc
pop
lods
cwtl
xchg
adc
mov
pusha
enter
iret
dec
into
stos
addr16
cltd
mov
movsl
mov
sub
adc
jns
shl
jl
pushf
sbb
test
ljmp
and
dec
cmpsb
and
aad
dec
call
push
jmp
cmp
dec
aam
aaa
push
cli
jg
push
pop
loop
aam
cmpsl
sarb
jne
nop
dec
cwtl
fisttpll
lret
or
jnp
fldln2
and
mov
into
xchg
cmp
mov
pop
imul
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
dec
in
dec
negb
sbb
adc
sbb
aas
sub
fidivrl
pop
jnp
sub
pushf
mov
pop
inc
inc
aaa
pop
test
jno
and
iret
mov
int3
out
xchg
test
push
ja
push
lret
mov
lea
popf
xchg
xchg
dec
je
and
or
lods
fsubrl
mov
movsl
xchg
aam
loopne
push
daa
shlb
or
push
ret
adc
lds
aas
jno
or
or
pushf
xchg
xchg
sar
scas
and
stos
jecxz
inc
jne
cltd
es
sbb
nop
orw
cld
call
xchg
and
xor
pop
cmp
test
add
push
cmp
add
cli
and
xor
dec
cltd
mov
mov
testb
sbb
inc
out
insl
inc
les
xor
scas
push
xchg
sub
paddusw
adc
callw
rorl
negl
std
or
mov
fstps
divb
add
mov
push
push
dec
lods
sti
sub
add
scas
arpl
jbe
xchg
call
pop
xor
add
xor
addr16
ljmp
scas
and
iret
gs
push
call
in
mov
fdivl
add
insl
cmp
int3
push
aaa
es
fucom
pop
xchg
xchg
loopne
jg
add
sub
testl
push
test
mov
xor
mov
inc
or
out
ret
inc
push
mov
call
stos
cmp
pop
test
in
mov
aaa
pop
dec
data16
pop
jo
xchg
sub
add
xorb
inc
ljmp
cmpsl
xchg
inc
enter
xchg
or
lahf
inc
rolb
addr16
sbb
adc
fnstsw
push
hlt
sbb
dec
stos
or
push
das
mov
adc
fidivrl
cmp
jnp
push
and
cld
insb
inc
adc
push
test
ljmp
iret
mov
push
shrb
cmp
scas
mov
push
add
aas
adc
xchg
jns
ret
push
xor
fimuls
or
push
in
sbb
int
sub
inc
enter
pop
nop
das
loope
pop
scas
scas
or
out
ljmp
insb
adc
fcmovu
xchg
pop
xor
sub
call
and
fcoms
pop
or
call
daa
jnp
sti
add
inc
movb
stos
mov
pushf
mov
mov
mov
add
jp
push
dec
mov
fsub
xor
scas
in
jb
subb
mov
mov
test
cmp
mov
cmp
xchg
cld
mov
mov
xor
movsl
enter
pushf
mov
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
sub
sbb
adc
sbb
sbbb
jl
push
jno
inc
lcall
mov
jae
mov
inc
cmpsl
out
clc
mov
push
inc
add
adc
repnz
or
test
js
jge
inc
and
stos
scas
iret
les
shrb
call
test
sbb
xchg
bound
ret
mov
lcall
add
inc
insl
jmp
cmpsl
les
sub
out
or
xor
xor
andl
shl
bound
mov
aas
je
push
sbb
imul
xor
nop
movsl
lret
test
push
pop
stos
pop
and
or
cs
fmull
cs
in
out
add
mov
mov
out
cmp
push
in
lret
shll
jae
sub
cs
sbb
pushf
adc
mov
jo
xchg
pop
push
pop
inc
and
xchg
mov
adc
inc
inc
stos
hlt
ss
movsl
fdivrl
push
icebp
mov
mov
ret
sbb
fistpll
rcr
cmp
mov
divl
xlat
adcb
std
mov
pop
nop
push
jnp
aad
les
pop
mov
mov
xor
ret
add
adc
arpl
jnp
data16
fldenv
sub
fidivrs
mov
js
add
adc
add
xor
jp
mov
mov
pusha
sbb
push
cli
loopne
push
mov
sbb
aad
inc
jge
sub
sub
bound
dec
add
jmp
push
add
add
and
pop
mov
sti
outsl
out
and
rorb
xchg
loop
cmp
aad
adc
in
mov
test
in
xor
add
xchg
jecxz
sti
jecxz
pop
push
mov
xchg
xchg
rcrb
js
test
mov
pusha
inc
lcall
cmp
mov
cmc
ja
push
arpl
rcrb
or
or
inc
lcall
lcall
sbb
lahf
outsl
movsl
fstpt
xor
jp
mov
xor
fwait
movsl
jmp
test
xor
shrb
cmpsl
or
push
mov
mov
jge
and
in
addr16
lret
mov
xor
mov
pusha
or
fs
sahf
imul
ss
cmc
mov
in
cs
mov
mov
in
xchg
cmp
sub
in
mov
xor
xor
sub
imul
jmp
das
jo
je
push
xor
in
lahf
inc
xor
lret
mov
ret
arpl
int3
inc
push
int3
pop
and
in
cmpsb
icebp
movsb
repz
cmp
mov
shrd
jmp
out
push
push
push
mov
dec
sub
sbb
adc
sbb
into
push
sub
push
dec
mov
dec
js
jmp
pop
adc
dec
shrb
xchg
push
mov
enter
push
push
jecxz
mov
insb
and
pop
mov
adc
lret
push
sub
xor
push
out
pusha
jae
mov
jae
and
mov
xor
xchg
add
movsb
mov
cmp
xor
lock
mov
push
bnd
stos
inc
pop
adc
fildll
inc
ficompl
mov
mov
out
adc
popa
shl
inc
int3
cmp
popa
sbb
mov
jge
out
es
inc
outsl
out
sbb
ja
cltd
mov
dec
cmpb
xchg
sbb
pop
je
stos
out
pushf
roll
out
xor
nop
push
cwtl
faddp
and
add
jne
sar
inc
cli
push
inc
jmp
adc
gs
or
or
sti
lahf
inc
fsubs
cltd
and
cmp
pusha
std
daa
xor
push
and
add
sbb
sub
movsl
push
andb
jb
or
adc
mov
mov
popf
xchg
ret
cmp
xchg
sarl
sbb
out
in
push
xchg
cmp
and
pushf
in
subl
lahf
add
pop
xchg
in
adc
and
arpl
xchg
mov
xchg
ja
add
dec
mov
mov
cltd
jno
xor
and
add
mov
jle
daa
pusha
mov
dec
fisttpl
lahf
aas
ret
rclb
lahf
daa
xlat
cmc
dec
jno
adc
orl
dec
xchg
or
jo
pop
pop
add
enter
jo
movsl
jns
sbb
pop
inc
xor
mov
les
sub
jnp
jbe
loope
dec
test
mov
mov
xchg
and
mov
mov
and
jl
dec
fsubs
jp
ds
push
add
push
and
addl
leave
mov
mov
sahf
mov
pop
mov
mov
gs
shl
dec
adc
mov
in
leave
lret
and
out
outsb
jle
jno
js
mov
lahf
scas
sbb
add
movsb
mull
cmp
mov
fstpt
push
ljmp
adc
inc
dec
daa
scas
std
enter
or
adc
dec
sub
rcll
lret
cmp
lock
shl
xlat
loop
int
jecxz
and
imul
imul
sub
xchg
pop
and
sub
loopne
add
fldenv
lea
push
fisttps
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
lret
xor
and
sbb
mulb
aam
adc
mov
or
cwtl
xchg
xor
test
xor
mov
push
push
add
xchg
lds
in
out
movsl
roll
adc
repnz
adc
ds
push
cltd
mov
addr16
add
fsubrl
in
add
sub
clc
mov
stc
int
cli
jl
sub
popa
mov
push
bound
sbb
fdivr
pop
mov
mov
add
jecxz
roll
lds
mov
mov
or
xchg
inc
jnp
dec
loopne
addb
addl
lds
add
loope
push
pop
aaa
xchg
rcrl
movsb
out
inc
push
push
mov
jb
xchg
add
push
or
mov
xchg
push
ret
cltd
lret
jno
fistpll
iret
in
cwtl
out
mov
sbbb
mov
xor
jl
xchg
mulb
xchg
adc
icebp
push
inc
iret
leave
mov
mov
and
adc
sub
lret
adc
movsl
jle
push
xchg
sbb
mov
inc
scas
fstpt
xacquire
int3
ss
push
dec
sub
lahf
mov
loop
inc
out
pop
gs
lahf
push
mov
das
cmp
aaa
int3
mov
mov
mov
cld
cmp
jae
leave
negb
ss
and
test
sbb
loop
stos
and
jmp
jle
in
out
mov
int
jbe
cwtl
insb
mov
or
sub
outsl
push
cmp
out
xchg
pop
dec
in
int3
outsl
mov
jle
into
push
fbstp
jae
lcall
ror
outsl
mov
popa
add
mov
pop
sbb
dec
incb
je
cld
scas
pop
js,pt
fnstsw
movsl
and
pop
lcall
add
adc
xor
inc
call
shr
movsb
shlb
mov
dec
mov
adc
cmpsb
add
push
cmpsb
sarl
cmpsb
test
shr
sbb
je
dec
lock
jp
jnp
push
leave
pushf
sbb
mov
or
xor
test
and
inc
lods
cwtl
sahf
push
push
jne
xchg
rcrb
mov
push
add
sahf
fsubrl
mov
das
lods
cltd
jbe
lds
push
fcomip
gs
xchg
mov
in
daa
mov
out
inc
in
mov
push
imul
stos
movsl
lea
push
shrl
ror
push
xchg
mov
jle
sbb
imul
orb
into
stos
mull
mov
jp
mov
lcall
test
mov
ret
or
add
add
les
or
push
arpl
push
fistps
sbb
adc
sbb
cmc
push
cld
call
cmp
mov
shll
xorl
or
stos
jno
shlb
or
test
sub
jae
adc
inc
cmp
push
push
inc
jge
in
movd
call
inc
hlt
pop
lcall
mov
and
cld
push
out
xchg
push
cld
test
mov
nop
mov
mov
pushf
test
loop
jo
jnp
cmp
mov
int3
test
and
xchg
clc
adc
and
xchg
dec
and
nop
and
cmc
push
stos
popa
cmpsl
outsl
iret
stos
xor
xchg
imul
jne
xchg
mov
mov
popa
cs
shll
test
mov
flds
jmp
xor
pop
push
push
sub
fmull
mov
xlat
xchg
jmp
mov
mov
orb
into
inc
add
int
push
and
push
adc
sbb
rorb
mov
mov
xchg
inc
cwtl
loopne
inc
clc
mov
sub
mov
in
rorl
scas
roll
jle
test
sub
mov
mov
loopne
dec
cmpsb
sbb
sbb
out
push
xor
xor
xlat
add
pop
scas
push
and
leave
mov
jnp
fstps
out
iret
repnz
mov
jmp
mov
insl
pop
dec
and
int
xlat
mov
out
outsl
aad
sar
and
sub
jp
adc
fidivs
dec
pop
jo
leave
add
addl
out
notb
adc
mov
push
xor
fisttpll
jbe
xchg
jne
stos
scas
int3
and
movb
int
xlat
scas
aaa
xchg
dec
mov
and
sub
add
lock
loope
mov
push
aad
dec
sbb
push
stos
jmp
push
xchg
sarl
jo
ficompl
inc
pusha
ret
mov
dec
cmp
test
rcrl
mov
test
sbb
cmp
push
dec
pop
cmp
es
test
add
mov
push
add
lods
ds
fstpt
fsubp
loopne
dec
fcomps
shrb
mov
loop
adc
mov
cmp
mov
mov
outsl
push
insl
adc
iret
aad
xchg
outsb
rol
push
call
lret
cld
mov
sbb
imul
ja
stos
dec
and
xchg
out
xchg
pop
mov
fstps
in
popa
sub
das
das
add
inc
out
cltd
std
add
xor
pusha
and
jl
cmpsl
out
mov
push
stc
ret
scas
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
addr16
sub
inc
arpl
xor
jge
inc
es
in
mov
inc
pusha
leave
inc
add
dec
aad
fsubs
inc
ret
cmp
xor
cmp
jb
orb
cmp
push
inc
test
in
or
pop
incb
scas
xchg
dec
adc
and
scas
ds
mov
mov
push
mov
out
sbb
jb
dec
jnp
cmc
mov
imull
lock
lret
xchg
sbb
mov
fdivl
dec
push
dec
mov
repz
data16
loope
xchg
cmpsl
sbb
iret
cmp
inc
xlat
pop
outsb
and
test
insl
pop
xchg
sbb
dec
shll
aad
or
add
mov
or
mov
cmp
mov
aad
out
push
mov
sub
rorl
or
ss
js
jno
xchg
xor
rolb
push
mov
test
aam
pop
mov
or
jp
mov
iret
sahf
jge
or
test
cmp
imul
or
push
insl
aam
cwtl
addr16
sbbb
mov
mov
xchg
out
jnp
in
mov
jae
add
mov
fildll
dec
sbb
stc
push
cmp
xchg
add
into
ljmp
mov
pop
sarb
inc
aam
insb
push
sbb
add
fs
into
or
inc
js
in
sub
in
adc
fisubs
jge
mov
and
stc
push
mov
stos
addl
inc
push
pop
lock
in
out
movnti
inc
jb
cmp
arpl
lods
push
dec
sbb
in
and
fnstenv
or
cmpsb
rcrl
mov
fiadds
daa
dec
test
push
push
dec
xor
mov
adc
jl
adc
addr16
xchg
mov
sti
aaa
outsl
xchg
daa
and
cmp
jl
xchg
aad
incb
lret
mov
pop
mov
inc
popf
dec
sub
push
movb
or
icebp
mov
adc
fwait
insl
cltd
mov
sub
jecxz
inc
std
dec
aaa
imul
fwait
pop
test
js
loop
or
inc
mov
jo
out
fnsave
jge
xchg
testb
loope
fsubp
movsl
xchg
imul
nop
adc
adc
imul
sbb
loop
jno
in
mov
clc
inc
in
cwtl
aaa
das
or
sbb
adc
fsubs
popa
jg
scas
and
nop
sub
rorb
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
and
rcrl
sbb
adc
sbb
dec
pop
add
movsb
xchg
push
push
sbb
jo
mov
lock
in
and
clc
or
adc
data16
adc
and
mov
mov
jo
dec
jecxz
jmp
test
ret
inc
not
inc
dec
aad
mov
fwait
sbbl
das
lret
and
mov
cmp
popf
and
add
jmp
mov
xor
cmp
add
xchg
sbb
enter
decb
jmp
rclb
out
xchg
sub
add
adc
or
sti
shr
or
addb
sbb
xchg
push
cltd
mov
xchg
push
in
push
jb
fnstenv
adc
or
popf
loopne
xor
adc
loope
mov
xorb
xchg
loopne,pn
rolb
or
mov
loop
jo
mov
aad
sti
mov
and
push
rcll
es
mov
and
stos
or
movsb
inc
call
add
pop
push
fisttps
mov
jg
mov
jmp
dec
pop
mov
xchg
inc
ret
sahf
into
push
xchg
xchg
pop
add
dec
or
call
ds
jmp
xchg
xor
ljmp
sub
jns
jo
sbb
push
mov
pop
dec
fwait
in
push
clc
add
xor
sbb
popa
pop
pusha
jp
xor
or
cmp
repnz
nop
pop
je,pt
add
push
dec
xchg
sub
lea
icebp
mov
enter
jecxz
insl
not
hlt
fwait
mov
xor
insb
aam
push
jp
add
shlb
loop
mov
add
cwtl
xchg
ja
push
aas
or
add
out
cmpsb
sbb
jbe
dec
int3
or
xor
into
lret
ficoml
mov
lcall
dec
xchg
into
popf
sti
in
inc
orl
int
test
ret
fs
daa
jo
ds
popa
dec
mov
popf
and
mov
nop
mov
mov
popa
jb
pop
cmp
push
mov
fcoms
mov
sarb
push
sub
push
push
lods
xor
cld
imul
xlat
inc
dec
jg
enter
push
pop
sbb
mov
repz
imul
sbb
mov
dec
mov
inc
loopne
clc
repz
popf
pushf
and
jmp
cbtw
mov
push
aad
xchg
aas
in
sbb
inc
mov
lahf
lods
in
pusha
mov
and
pop
fsubr
xor
lods
lods
or
jbe
aaa
push
inc
xor
and
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
test
loope
or
sbb
adc
sbb
pop
sub
mov
les
loopne
mov
cltd
pop
test
pop
push
ljmp
jmp
cltd
pop
xor
bound
stos
dec
ljmp
mov
insl
aas
dec
sub
mov
gs
insl
popf
rorb
out
dec
outsl
orl
xchg
xchg
sbb
jne
sti
mov
adc
push
dec
sbb
loop
adc
or
bsf
mov
hlt
cmp
hlt
outsb
scas
in
mov
xchg
mov
shrb
aaa
outsb
inc
pinsrw
sub
addr16
push
cli
sbb
bound
lahf
cld
stc
mov
jge
gs
shrb
sub
icebp
scas
test
aad
push
jle
arpl
out
sbb
and
add
lods
int3
add
inc
fwait
ud2
insl
popf
xchg
inc
daa
insb
jmp
push
imul
mov
addr16
jae
test
in
xchg
cli
movsb
mov
pushf
mov
jae
paddusb
sub
call
adc
dec
ret
mov
enter
cmp
in
pop
xor
pop
stos
test
pop
popa
xorl
mov
push
sub
das
frstor
dec
decb
mov
test
mov
xchg
mov
je
add
dec
pop
xor
cmpsl
ss
xchg
and
add
clc
mov
lret
in
shrb
cmp
add
lret
sbb
ds
add
fists
xchg
jbe
sbb
adc
fwait
cs
frstor
mov
dec
cmp
jmp
jle
cmp
sub
mov
xor
add
ficompl
sbb
flds
aad
movsl
mov
das
or
jecxz
mov
dec
subb
enter
imul
or
xlat
add
jno
insl
sbb
sub
imulb
ret
jne
insb
pop
jg
push
push
xchg
pop
and
rcll
jp
mov
mov
push
jo
push
lds
mov
pop
mov
ficompl
mov
adc
push
test
aam
test
mov
call
dec
jae
fiadds
mov
enter
idivb
lahf
mov
neg
sbb
pop
ficompl
cmc
iret
int
imul
adc
sub
push
pusha
jg
sub
mov
in
mov
xor
ja
rcl
add
push
pop
mov
pop
out
mov
adc
ret
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
mov
and
sbb
mov
push
iret
pop
or
into
jns
mov
je
mov
push
and
adc
cmp
and
and
mov
push
push
iret
and
pop
fcomps
add
test
adc
sbb
mov
xchg
mov
mov
pusha
aaa
mov
mov
rcl
and
sub
inc
test
fidivrs
sub
lahf
mov
jl
imul
cli
cmpsl
ret
lret
cmp
mov
inc
sbb
mov
cmpsb
sbb
cmpsl
out
mov
xchg
jp
xor
xor
gs
test
int3
push
fs
insl
jg
lods
int3
fistl
out
aas
jmp
jl
pushf
std
inc
frstor
shlb
xchg
xorb
push
xchg
dec
scas
push
lods
pop
rorb
sbb
dec
mov
push
fwait
mov
bnd
inc
into
in
mov
add
push
adc
mov
movsl
das
xchg
mov
lahf
dec
je
mov
xor
imul
add
cmp
jns
lahf
fiaddl
fildl
fwait
lock
push
cmp
jns
fists
test
cmp
xchg
or
adc
aaa
pop
insl
lds
out
xor
enter
lea
insb
in
jae
pop
stos
shll
cs
imul
shlb
out
mov
in
xchg
stos
popa
mov
movsb
xor
sbb
push
xor
inc
test
xchg
or
or
jge
sbb
cmp
lds
jle
pop
rcrb
outsl
xchg
fs
negb
mov
rcrb
mov
add
ja
das
in
pop
or
scas
and
in
mov
sub
mov
lock
pop
jecxz
inc
stc
xor
jno
daa
popf
shlb
mov
adc
mov
push
daa
push
scas
mov
imul
rcr
jp
andb
aam
and
pusha
sahf
lock
dec
xor
cmpsb
cmpsb
jl
push
sub
addr16
jns
xor
sub
andl
faddp
mov
dec
mov
inc
cwtl
sbb
sub
inc
mov
popa
xchg
xchg
in
lahf
mov
mov
roll
lods
sbb
mov
data16
fidivrs
movsl
jge
adc
or
add
jmp
das
cmpl
nop
inc
jp
sbb
sub
popf
push
cmpsl
test
push
sahf
movsb
jo
pop
ljmp
push
jbe
and
mov
std
movb
and
mov
jecxz
out
divl
lods
inc
jnp
call
icebp
ja
jns
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
mov
sbb
and
sbb
test
orl
cmpsl
mov
iret
stos
notl
jle
cmp
hlt
and
scas
inc
dec
mov
add
add
jmp
pop
xor
inc
andl
shlb
mov
add
mov
cmp
or
jae
sub
jo
sub
sub
cmp
mov
call
in
aas
pushf
lcall
adc
pop
pop
out
xor
pushf
push
or
or
imul
iret
hlt
dec
pushf
mov
movsl
rorb
mov
pop
arpl
mov
and
je
js
pop
rolb
outsl
mov
jmp
mov
sbb
xchg
mov
fsts
hlt
fwait
bound
mov
jle
xchg
pop
sbb
jnp
sbb
push
test
pop
push
jne
jnp
ljmp
push
in
imul
mov
sarl
aad
lea
scas
adc
lea
das
and
dec
icebp
xor
mov
rcrb
jbe
sub
fld
xor
push
arpl
pop
cmp
jne
fdivs
inc
push
add
mov
out
cmpb
cmp
push
cmp
lcall
and
fists
adc
inc
fnstcw
jl
jle
leave
cmpb
xlat
dec
xorl
cld
ret
rolb
callw
adc
mov
fdivrp
mov
test
fcoml
clc
adc
out
adc
stos
movsl
xchg
xchg
push
out
pushf
iret
shll
mov
dec
sbb
mov
and
pusha
dec
mov
sub
xor
dec
dec
rorl
mov
sti
iret
add
add
movsb
mov
cwtl
fsubs
das
pop
push
and
or
iret
repz
imul
cmp
sbb
addr16
add
fadd
push
lret
mov
xchg
test
add
mov
repz
pop
push
xor
aad
mov
lock
push
push
stos
push
lret
inc
xchg
sahf
cwtl
paddq
dec
clc
repnz
push
fs
inc
lock
rcll
movsb
mov
sahf
enter
xor
pop
xchg
ret
sahf
lds
sbb
cmp
imul
movl
sub
outsl
in
add
mov
mov
push
dec
insl
inc
xchg
das
cmp
loop
mov
fisubrs
add
int3
es
rolb
xor
daa
in
das
out
add
sbb
aad
bswap
fmul
repnz
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
push
mov
sbb
xchg
xor
push
fs
lods
and
dec
leave
idivb
sbb
mov
test
sarl
mov
enter
adc
rcr
repz
pop
inc
push
sub
nop
xchg
mov
push
orb
mov
inc
jno
dec
pop
dec
xchg
xchg
or
cmp
es
xor
test
dec
notl
inc
add
sub
mov
lods
lcall
and
popf
fs
sbb
mov
cli
pop
xchg
push
outsb
pop
insb
lcall
ret
out
repz
test
sahf
jnp
test
imul
lods
clc
roll
pop
add
xchg
cmp
and
inc
sti
inc
sbb
popa
adc
clc
jns
je
sub
aaa
dec
shll
pop
xchg
push
adc
jg
psadbw
fmul
adc
fimuls
sub
jo
or
sub
stc
mov
sub
rclb
inc
call
testl
mov
xor
push
add
orb
xor
dec
call
mov
push
cs
lret
sbb
cmp
das
mov
les
out
xor
dec
das
lods
jmp
mov
sbb
sbb
jg
sub
mov
lea
ret
cmpb
pop
pop
mov
std
sub
bound
ja
std
loop
sub
adcl
cli
iret
icebp
fwait
shr
pop
push
rolb
xchg
mov
jg
fildl
ljmp
cmp
adc
mov
ljmp
outsl
fistl
es
iret
dec
lds
fidivrs
cmp
ljmp
xor
xorb
daa
jmp
inc
aaa
xchg
inc
lods
jbe
test
hlt
push
mov
sub
notb
xchg
int
les
frstor
jns
outsl
or
xlat
mov
rol
repz
mov
mov
mov
and
bound
mov
cmp
loopne
adc
jg
push
clc
inc
jecxz
test
int
xchg
pop
subb
inc
xchg
dec
sub
adc
int
sbb
mov
das
sbb
xor
gs
shrl
push
loopne
adc
jne
or
or
adc
mov
test
cmpsb
jge
cltd
cmp
sbb
cmpsb
push
lea
lahf
and
adc
mov
and
test
sub
out
sti
aas
mov
mov
clc
adc
nop
mov
les
xlat
aaa
mov
sub
pop
pop
xor
into
pop
je
daa
gs
xor
jne
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
mov
sbb
adc
sbb
inc
loope
cld
movsb
js
cs
imulb
dec
leave
ret
movsb
jbe
dec
cmp
lret
sti
pusha
add
xchg
fildl
test
xor
scas
jb
mov
xchg
mov
outsl
popa
out
sbb
xor
xchg
sbb
in
jns
adc
push
aas
repnz
sbb
incb
insl
push
jb
xchg
dec
pop
sub
rcr
loopne
or
out
aaa
flds
call
adc
cmpsl
aam
cmp
enter
mov
xchg
out
out
imul
push
in
mov
dec
jbe
in
sahf
xor
or
test
repz
cmp
lock
mov
popf
addr16
rorl
in
in
call
adc
push
outsl
jmp
add
xor
je
mov
movsb
sbb
test
jne
xor
rcrb
or
jmp
in
jbe
or
ja
fmuls
add
sub
cli
mov
out
je
push
fcoml
xor
fs
mov
inc
inc
arpl
hlt
adc
stos
mov
mov
adc
fmull
mov
in
pop
adc
mov
pushf
inc
add
cmp
mov
pop
or
sbb
push
orl
rcll
lds
jle
call
mov
jns
push
sub
arpl
lock
fwait
sub
arpl
lods
xchg
xchg
inc
mov
pop
repnz
pop
movsl
xchg
pop
cmp
jbe
xchg
dec
fwait
push
mov
jno
negl
andl
xchg
jecxz
icebp
imul
xchg
inc
push
cmc
push
jl
enter
push
aaa
adc
aad
insl
mov
xchg
pop
sub
hlt
ds
cld
lret
add
push
popf
cmpsb
dec
je
fbld
add
mov
insb
xor
fadd
cmp
outsb
movl
xor
pop
popw
pop
inc
fsubrl
loope
movsl
and
fsubrl
lods
jbe
xchg
add
and
ret
mov
data16
jns
aad
enter
dec
xor
sub
popf
mov
test
cmp
xor
xchg
add
movsl
fxch
divb
cmp
iret
movb
mov
and
pop
dec
js
push
mov
sub
test
leave
inc
fxch
sti
outsl
aas
aam
adc
adc
cwtl
push
mov
jno
pop
inc
repnz
mov
xchg
jno
cmp
pop
mov
bnd
mov
fbld
dec
lcallw
add
inc
out
and
out
dec
aam
or
popf
jo
test
jno
mov
add
sbb
add
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
push
cmp
mov
sbb
and
dec
dec
sbb
lahf
lea
cmp
mov
cmp
sub
cmp
imul
cmpsb
sbb
cli
lret
arpl
aam
imul
pop
xor
imul
sbb
loopne
lcall
push
stos
push
mov
daa
xlat
lock
outsb
push
fwait
mov
xchg
test
ret
lahf
jp
loope
imul
sbb
outsl
inc
and
push
mov
imul
lods
cwtl
mov
inc
sub
icebp
xor
adc
cmp
xor
movsb
filds
and
in
xchg
dec
data16
out
or
jle
xchg
cmp
xchg
js
xchg
popf
rolb
roll
push
xchg
fs
xchg
in
sbb
mov
je
cs
add
lret
mov
jno
enter
push
and
or
stos
test
sbb
and
sbb
outsl
aam
ja
ja
arpl
fs
movsb
sub
sbb
xor
mov
xchg
sbb
inc
or
xor
pop
add
fwait
daa
fists
fwait
icebp
cltd
xor
pop
inc
mov
dec
sbb
sub
shlb
shll
dec
pop
pop
shll
adc
sbb
arpl
shlb
inc
lahf
pop
jmp
mov
test
lret
aaa
out
inc
in
push
push
fdivp
add
mov
inc
pop
aam
subl
loope
sbb
sti
xchg
mov
popa
xchg
sbb
cmp
pop
add
pop
mov
test
xchg
push
lods
add
pop
and
jge
xchg
scas
push
cmp
cmp
xor
mov
stos
adc
xchg
loope
test
ds
xchg
lret
inc
inc
iret
xor
lahf
jo
lock
out
lods
sub
outsl
insl
mov
jg
adcb
incb
insb
push
rorb
xchg
sarb
adc
gs
push
hlt
cmp
xlat
mov
pop
sar
test
loopne
mov
cmp
xchg
sahf
faddp
xchg
mov
mov
lock
add
push
inc
sub
fildll
icebp
xchg
fistps
add
ss
pop
or
or
jae
jns
sub
push
dec
sbb
dec
int
or
test
inc
int3
cmp
xor
adc
dec
push
daa
sub
sub
lcall
mov
dec
orl
jg
jg
insl
pop
push
sub
es
leave
movsb
aas
sub
adc
popa
inc
sub
mov
lods
ds
iret
aas
enter
xchg
nop
mov
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
bound
mov
sbb
and
sbb
imul
test
xor
cs
inc
shlb
mov
push
mov
mov
xchg
or
sti
mov
jae
and
adc
mov
and
insl
inc
std
stos
ret
mov
add
adc
cld
mov
inc
aas
mov
movsl
mov
das
repz
push
dec
imul
inc
loope
jmp
ss
cmp
lods
cld
lret
push
mul
and
sbb
push
loope
xchg
sub
jo
cmpsl
mov
sub
dec
mov
std
xchg
xchg
sub
aaa
into
das
int3
mov
push
cmp
sahf
pop
ja
pop
xchg
es
jmp
mov
push
xchg
fdivr
loopne
popa
int
lcallw
xor
cmp
movsb
lret
andl
hlt
lret
sbb
sbb
fstpt
sub
sbb
out
out
cmp
and
cmp
inc
loope
scas
mov
xor
dec
cld
aam
cwtl
xchg
sub
mov
inc
xchg
sbb
push
jle
ret
ret
jnp
xlat
ljmp
adc
out
or
sbbb
mov
insb
push
addr16
mov
add
dec
jl
jge
adc
cmp
aad
mov
xor
test
cld
stos
std
sub
sbb
push
cmpl
mov
sar
ret
inc
scas
sub
jnp
jne
push
icebp
lea
arpl
repz
cmpsl
pop
mov
adc
aaa
push
xor
or
cmc
sbb
push
mov
fcoms
push
cltd
or
repz
inc
rorl
sub
test
shrl
adc
sbb
pushf
out
nop
orb
rolb
pop
dec
xor
and
push
push
push
pop
pop
clc
mov
inc
popf
sarl
in
fxch
loop
test
scas
or
lods
insl
mov
fstps
adc
dec
push
gs
stc
shlb
out
add
push
mov
lock
fstp
in
xchg
popf
adc
loop
inc
dec
insb
mul
add
or
cmp
sbb
and
inc
lret
jnp
outsb
data16
test
xlat
into
das
ret
and
mov
adcl
out
push
adc
push
mov
nop
sbb
mov
adc
iret
cmp
js
pop
flds
fistpll
sbb
roll
xor
mov
out
fsts
or
clc
icebp
and
pop
dec
fisubs
test
sti
int3
inc
cld
add
cmp
cmc
push
pop
aad
adc
pslld
mov
pop
xchg
adc
ljmp
das
lahf
push
xchg
jae
loop
mov
add
ret
dec
mov
lock
push
and
sbb
js
imul
cmp
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
jno
mov
adc
sbb
jno
xchg
into
mov
sti
push
pop
cmc
imul
pop
insb
fsubr
add
mov
xchg
outsl
mov
cmp
and
fstps
in
ret
outsl
insb
out
daa
push
adcb
push
popa
jle
add
push
loop
incb
xchg
into
sbb
inc
fiadds
mov
shl
addr16
mov
ljmp
and
adc
hlt
push
pop
xor
movsl
xchg
das
fbld
mov
pop
push
jno
push
cltd
movsl
xor
fisubrl
cld
push
hlt
jae
sti
add
dec
fucompp
rcr
addr16
mov
fisttps
xchg
jle
sbb
arpl
pop
stos
inc
inc
add
fidivs
mov
inc
cmp
push
call
push
sarb
adc
push
loop
aaa
or
mov
inc
jns
add
cmpsb
fidivl
lcall
mov
pop
jmp
shl
pop
iret
out
mov
das
ss
inc
mov
or
call
cwtl
jge
push
and
cmp
pop
fmuls
mov
rcrb
mov
ljmp
fnstcw
mov
cmp
add
ja
lock
data16
ss
div
xor
arpl
lods
test
and
bound
arpl
add
sub
add
push
outsb
adc
mov
test
sbb
jae
mov
jp
mov
dec
stos
mov
data16
push
loop
pop
mov
lds
pushf
xchg
insl
xchg
mov
sub
jmp
cmpsl
leave
and
xchg
adc
jle
sbb
lcall
into
les
xlat
sub
xchg
std
repz
or
popa
dec
add
movsb
cmp
sbb
adc
adc
mov
ret
mov
int3
stc
mov
lcall
inc
dec
pop
stc
scas
movsl
or
xchg
out
mov
cli
mov
daa
mov
repz
sub
pop
dec
adc
outsl
mov
fwait
xchg
test
arpl
pop
sbb
addr16
fisubrl
xor
xor
loope
dec
pop
jne
mov
mov
mov
pop
push
subl
mov
cwtl
mov
aad
pusha
cmp
lods
loopne,pt
lea
nop
mul
ljmp
add
push
jle
xorl
mov
push
xchg
icebp
daa
jmp
push
jne
scas
scas
imul
xor
jle
cmp
mov
push
or
jecxz
in
in
stc
out
pop
lds
addr16
pop
in
mov
sub
cmp
mov
xchg
movsl
mov
mov
enter
inc
adc
stc
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
repz
stos
rcrb
sbb
dec
sub
pop
push
std
dec
xor
fs
push
outsl
outsb
xor
xchg
sub
xchg
inc
jp
lret
int3
lock
rorl
stc
scas
ret
xor
shll
dec
sub
inc
cli
pop
pop
push
jo
push
shlb
cmp
sub
mov
and
jg
add
push
mov
stc
or
jmp
repz
sbb
fldcw
push
pusha
mov
adc
add
jmp
sbb
or
into
fisubl
repnz
xor
out
mov
mov
shll
imul
test
cmpsl
stos
in
push
jno
repz
orb
xor
dec
sti
sti
mov
pop
xchg
test
ret
cmp
mov
test
cmp
mov
aam
add
and
push
loopne
push
hlt
add
icebp
bound
pop
pop
xor
and
or
inc
mov
xchg
mov
add
iret
jg
dec
das
inc
sbb
mov
mov
mov
cmpsl
loope
mov
cmp
adc
push
mov
adc
test
xchg
xchg
outsb
hlt
lret
dec
enter
fcompl
subb
aad
add
mov
loope
in
leave
addb
cmp
jbe
dec
in
sub
push
mov
fsubrl
sbb
iret
mov
daa
inc
pop
cmp
add
rcll
cltd
movlps
das
call
jge
xlat
test
movsl
or
sub
stos
jns
sbb
lock
inc
mov
outsl
sahf
lret
jno
xorb
cmpsl
lods
sbb
adc
bnd
aas
jp
push
loop
ficomps
cmc
aam
or
daa
mov
repnz
mov
xlat
outsl
mov
fsubl
jns
push
stos
mov
dec
push
mov
ss
add
test
scas
jbe
fsubl
xor
mov
xor
adc
loop
loopne
jmp
rcrb
and
out
dec
fimull
fisttps
adc
jne
es
or
xchg
rcrb
mov
inc
dec
inc
dec
mov
test
iret
fstps
sbb
outsb
mov
in
out
xchg
pop
mov
push
or
pop
adc
cmp
push
sub
sub
dec
push
sbb
pop
jmp
loope
outsb
xor
pop
pop
and
mov
lds
gs
mov
movsb
mov
and
pop
mov
movsb
push
jb
clc
icebp
fxch
icebp
imul
adc
test
pop
and
pop
xchg
pop
addb
test
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
and
sbb
test
fbstp
jae
fs
pop
mov
das
jne
test
movsb
xlat
mov
popf
sbb
leave
vsubps
cmp
sub
fiadds
xchg
add
jbe
and
shlb
clc
inc
es
call
adc
lahf
push
mov
das
enter
movsl
jmp
mov
mov
jno
imul
stos
ror
pop
leave
pop
inc
or
cmp
push
xor
aad
cmp
loop
aas
dec
rorl
xchg
cltd
xchg
in
scas
dec
adc
mov
dec
test
addr16
out
xor
mov
adc
mov
jl
push
push
cmp
mov
mov
ja
xchg
outsb
les
xchg
addr16
xor
jp
pop
push
mov
mov
ss
loopne
or
fwait
sbb
or
inc
mov
jae
sahf
lods
xor
bound
inc
popa
cmpl
mov
adc
mov
fsubl
jmp
jnp
imul
mov
push
xchg
jp
mov
ja
lret
jmp
popa
xlat
iret
gs
mov
pop
addr16
lea
mov
xor
add
fwait
orb
and
xor
lcall
ja
stc
bound
push
xor
ja
jno
js
movsl
mov
in
and
xor
inc
push
std
sbb
sbb
push
fstps
iret
mov
mov
test
sub
or
and
mov
sub
and
and
sbb
pop
cmp
sub
or
js
out
inc
lods
xchg
icebp
psrlq
pop
pop
into
vsubpd
and
mov
push
dec
ret
shl
in
pusha
adc
into
dec
js
stos
xlat
add
push
out
mov
daa
cmpsl
jb
imul
mov
ss
aas
lods
cmp
mov
dec
lcall
add
imul
movsb
mov
inc
pop
jnp
adc
sbb
push
dec
mov
sti
sub
jmp
inc
in
aas
xor
cmp
fsub
inc
outsl
bound
fwait
stc
cld
imul
int
mov
test
push
xor
add
fisttpl
or
mov
sub
jg
int3
and
out
daa
adc
cmpsl
jae
jmp
inc
fiaddl
hlt
dec
shl
pop
bound
xchg
fcoms
sbb
pop
loop
jecxz
fidivl
jmp
pop
sbb
int3
stos
shlb
movsb
nop
ja
jns
lahf
push
into
jo
out
frstor
pop
sbb
fcoms
cltd
aaa
ds
jbe
jp
gs
out
stc
imul
pushf
aaa
shl
jb
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
sbb
rclb
sbb
leave
push
pop
daa
cmc
add
sub
or
int3
cmpsl
cltd
loopne
sub
aaa
aas
daa
mov
test
xchg
je
cs
out
fisubl
jns
adc
adc
jmp
sub
mov
cmp
cmp
fs
cs
imul
dec
movsl
dec
xor
rolb
insb
pop
jo
jmp
xor
dec
clc
mov
cmpsl
negl
lret
cmp
iret
pop
arpl
and
push
jmp
jnp
xchg
jnp
adc
add
stos
add
shlb
or
mov
and
mov
cwtl
xchg
or
xchg
pop
push
or
nop
repnz
flds
mov
pop
cmp
xchg
iret
push
jnp
fiaddl
pusha
lret
sbb
or
aad
scas
xlat
fidivl
cs
jg
mov
inc
dec
cmpsl
push
xor
pop
loopne
or
popa
sbb
fisubrs
xor
xlat
rcll
ret
xchg
lock
je
pop
dec
test
lds
xor
cld
and
jg
stc
ljmp
lods
aam
adcl
subb
icebp
fldenv
out
mov
daa
inc
int
mov
inc
aaa
dec
push
lret
push
in
inc
jle
jmp
mov
jbe
ds
js
call
jecxz
in
outsb
push
fnsave
subb
dec
orl
sub
jnp
add
data16
xchg
arpl
std
sbb
jb
fiaddl
inc
fstps
aad
jno
out
into
or
fdivs
in
jmp
pushf
inc
or
in
sub
xor
mov
rolb
sbb
cld
push
dec
jp
stos
jae
xor
mov
ret
add
fmuls
cmp
cld
stos
mov
mov
push
loop
lea
pop
daa
add
pop
pop
add
leave
mov
jecxz,pn
mov
and
jo
cmp
adc
push
ja
ficompl
imul
cwtl
jg
pop
cmp
scas
sbb
roll
push
sbb
outsb
lock
mov
xchg
daa
and
pop
add
xchg
aam
add
fldenv
ja
shrb
pushf
add
lcall
test
adc
fwait
push
pop
inc
insl
and
cmp
lods
pop
pop
int3
xchg
loope
mov
cmp
mov
and
add
jmp
stos
inc
enter
dec
sub
mov
push
pop
mov
out
repnz
gs
sbb
mov
mov
jns
mov
scas
cmp
repz
in
xor
push
mov
fsubrs
mov
xchg
xor
sti
xor
mov
mov
pop
iret
js
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
push
in
clc
pop
fiadds
dec
pop
loope
pop
mov
mul
cmp
or
orl
and
outsl
test
lret
enter
ja
dec
insl
mov
test
cmpsb
inc
adc
pop
ret
popf
lods
add
inc
push
mov
sbbb
mov
movsl
in
pop
add
jge
mov
xchg
xor
sub
mov
jp
adc
mov
or
jns
adc
ds
push
scas
inc
movsl
xchg
out
pop
vunpckhps
popa
pop
ds
int
je
fimuls
push
sub
push
outsl
repz
movsl
inc
pop
or
adc
sub
negb
xchg
adc
xor
mov
shrl
xchg
sbb
sbb
inc
push
push
es
in
sbbb
ss
xchg
and
out
inc
das
fsubs
data16
push
data16
aad
adc
cmpsl
cmp
sub
mov
xchg
and
andl
stc
test
andb
sbb
sti
repz
mov
mov
xor
pusha
call
cmovp
add
ds
or
leave
int
fiaddl
xor
lods
push
cmp
cmc
sahf
out
rolb
xor
mov
push
filds
sbb
jb
movl
cmpb
bound
add
push
xor
dec
movsb
testb
cmp
cmp
jge
cmp
push
adc
adc
stc
xor
ss
sub
sub
fisubrl
movsl
jp
repz
test
and
jl
stc
xlat
adc
cmpsb
mov
pop
xor
int3
dec
pop
movsb
xchg
fucomp
xor
pop
test
in
push
mov
dec
cmpsl
movsl
imul
es
cmp
sar
fwait
je
enter
in
fsubs
pop
mov
cmc
xor
loop
push
int3
call
mov
mov
and
repz
adc
rorl
es
sbb
jl
outsl
pusha
and
mov
popf
inc
lds
jae
mov
test
inc
add
xchg
cmp
adc
test
cmpsl
in
sahf
stos
imul
mov
lods
adc
ret
jge
andl
pop
add
roll
les
sar
jmp
lea
mov
in
lock
sub
xor
into
cmc
sub
data16
popa
mov
pop
lods
dec
mov
pop
insb
or
push
insb
xchg
cmp
ss
add
test
xchg
lret
pusha
in
mov
sti
push
das
pop
adc
divl
outsb
dec
and
cmc
lea
pushf
ljmp
mov
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
dec
or
test
sbb
adc
sbb
adc
sub
stos
adc
lds
das
nop
cs
popa
fcmovne
pop
in
pop
addr16
add
cs
sub
scas
dec
nop
xchg
jno
icebp
jnp
push
adc
jo
arpl
fldt
lret
dec
xchg
and
enter
daa
int
aas
sub
loopne
add
rolb
jae
mov
fcmovb
cmp
call
mov
xor
jns
jp
sbb
push
cmp
xchg
imul
lret
inc
call
add
popa
inc
fiadds
sbb
pop
mov
cmovns
mov
stos
inc
xchg
in
daa
xchg
sub
test
in
adc
adc
hlt
mov
jne
incl
fs
sahf
inc
movsl
add
push
movb
pop
incl
cmp
jnp
jle
adc
outsb
adc
cmp
sti
popf
clc
cmp
call
mov
fs
pop
icebp
jnp
hlt
scas
popa
in
adc
loop
or
xor
jl
rcl
imul
and
fsubrs
pushf
jecxz
mov
lds
movb
into
frstor
pushl
cmp
dec
ljmp
lock
adc
lods
sbb
and
mov
sub
sub
pop
cmpsl
sbb
rcrl
mov
push
les
adc
xchg
sub
push
stos
je
les
cmp
mov
fstpl
adc
jp
into
hlt
jg
daa
pop
lahf
lock
mov
adc
incb
add
or
nop
mov
out
pop
fmull
pop
movb
std
mov
pop
cmp
leave
mov
insb
and
add
addr16
cwtl
shlb
dec
ljmp
sub
adc
or
in
daa
mov
push
pop
es
mov
sarl
cmc
cmp
add
and
outsb
aas
jno
shrd
std
out
inc
popa
cmp
leave
xchg
test
sub
pop
push
push
push
push
sbb
mov
ret
sbb
iret
cmp
mov
add
pop
and
scas
cmpb
lods
outsb
lcall
stos
pusha
out
mov
xor
dec
repz
mov
jo
cmpsl
pusha
push
xlat
scas
aam
loope
pusha
add
aad
test
adc
hlt
rcrl
pop
aaa
inc
jg
sahf
cmp
in
movsb
out
jmp
aas
cwtl
enter
aad
mov
fcompl
and
adc
ss
lret
dec
rorl
ljmp
pop
popa
loop
mov
fisttpl
or
mov
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
push
jg
sbb
adc
sbb
jnp
adc
mov
mov
pop
cld
cmp
cmp
pop
fs
adc
or
xchg
pop
pushf
sbb
lahf
stos
dec
pop
out
xor
xor
divb
dec
jno
je
in
dec
inc
xorb
mov
lods
jno
add
and
ret
scas
out
bound
fsubrs
inc
mov
das
pop
pop
lret
mov
sub
cmpsb
pop
xchg
int3
ficomps
sub
sahf
pxor
dec
or
fmull
jmp
ds
movnti
cmp
sub
shll
daa
cli
test
lods
stc
inc
movsb
mov
enter
pop
push
jecxz
mov
lods
push
pop
mov
push
loope
outsl
lahf
pop
insl
test
faddl
and
call
sub
fwait
rcrb
dec
in
or
fwait
cmp
xchg
hlt
push
mov
lods
jbe
les
aas
sbb
mov
xchg
mov
ja
loopne
pop
sbb
mov
mov
pop
ud2
sub
loopne
stos
pop
lcall
lahf
movsb
scas
cmp
js
jo
inc
cmp
cmp
mov
pop
mov
add
mov
adc
imull
jg
out
xchg
add
je
fsubl
pop
add
hlt
popf
jg
fistpll
push
repnz
cmp
xchg
insb
sub
addr16
in
jmp
imul
test
jae
push
test
inc
subl
and
xchg
aad
and
mov
repnz
pop
iret
cmp
std
xchg
aad
or
pop
mov
je
cmp
je
sub
adc
loopne
aad
pop
sub
fwait
and
in
sbb
out
leave
inc
fwait
and
adc
push
push
mov
push
and
pop
xor
fs
xlat
pop
in
add
mov
push
add
add
mov
mov
imul
sbb
jg
lcall
fstpt
cmp
jnp
pop
insl
lock
rolb
add
push
movsb
cld
sbb
sarl
push
push
adc
pop
pop
adc
jne
adc
int3
test
pop
jg
out
cmp
push
push
jnp
jne
sub
dec
enter
loop
xorb
mov
test
clc
and
dec
jmp
push
fdivrl
out
mov
jecxz
iret
cmpsb
mov
push
fwait
push
pop
lahf
lea
sbb
lods
push
lea
or
test
rcrl
sbb
sahf
xor
arpl
pop
mov
hlt
push
add
xor
mov
mov
inc
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
shll
jns
sbb
adc
sbb
in
xor
pop
add
fsubrp
outsb
mov
sbb
mov
and
loop
add
icebp
ja
xchg
rcl
mov
mov
push
into
testl
lahf
mov
inc
aad
jl
ss
cmc
add
les
icebp
cs
dec
in
rolb
outsl
leave
mov
inc
dec
fsub
out
pop
xchg
ret
je
sbb
fcmovu
mov
out
loop
push
and
stc
repz
inc
add
cs
jb
rol
mov
mov
inc
jecxz
and
rcr
xor
sbb
add
cltd
insl
mov
pop
cmp
hlt
lds
xchg
cld
mov
out
loope
xchg
rolb
sub
ret
movsl
xchg
popf
movsb
test
js
in
lds
sbb
pop
ret
pusha
sub
or
inc
pop
sbb
mov
dec
outsb
sbb
cmp
bound
scas
outsb
pop
addl
repz
iret
jp
pop
mov
jmp
adc
lods
das
scas
adc
and
and
cwtl
xchg
xor
jo
jnp
push
sub
jno
stc
scas
aam
xor
push
pop
sbb
je
pop
adc
pop
sub
fdivrs
jge
fimuls
xor
push
lret
mov
and
lcall
out
inc
adc
xor
icebp
cmp
movsl
or
pop
cs
aaa
cmp
or
dec
jecxz
jg
sub
jl
pop
inc
clc
cwtl
sbb
repnz
dec
and
aas
push
dec
sarl
int
push
or
sbb
jmp
pop
shrb
repnz
push
mov
sbb
xor
cmpsl
mov
or
and
and
dec
movsl
cs
pop
mov
outsb
rcrb
mov
jle
jecxz
pop
push
rcrb
sub
cld
ficompl
sbb
dec
or
icebp
mov
out
and
jne
jg
lods
data16
mov
xchg
sarb
aad
test
ljmp
scas
fistl
push
mov
mov
cmp
nop
and
enter
orl
jnp
sub
add
ljmp
in
jae
sbb
ds
lea
xorb
hlt
sub
jle
mov
cld
sub
outsl
iret
mov
test
mov
inc
lahf
jno
fwait
xchg
test
leave
jae
and
fadds
mov
dec
mov
nop
aam
mov
mov
and
mov
mov
ret
xor
jo
hlt
gs
addr16
pop
les
nop
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
push
dec
sub
mov
push
push
insl
add
pop
cmp
push
dec
jl
fwait
stos
cmp
ffree
and
xlat
cmp
mov
addr16
icebp
movsb
mov
leave
in
dec
data16
jmp
aad
adc
imul
sbb
mov
pop
cli
js
dec
movsl
adc
call
enter
loope
jle
adc
fcmovnbe
mov
sahf
fdivl
push
push
and
movsb
into
idivl
adc
cmp
cmpsl
flds
or
add
jo
dec
xor
adc
repz
mov
loop
lret
add
or
and
push
xor
xchg
insl
outsl
adc
cwtl
sub
sub
imul
leave
sub
in
mov
xlat
jge
mov
cmp
adcb
and
dec
adc
hlt
dec
mov
call
jo
je
lock
adcb
push
adc
or
fists
je
scas
aaa
or
mov
sbb
cmpsb
mov
push
mov
add
xchg
and
scas
jmp
and
pand
fldcw
in
ss
sub
pop
rolb
push
cli
imulb
add
fistpll
jle
lods
daa
mov
jo
sti
sbb
mov
jp
or
out
mov
je
sub
inc
outsb
icebp
inc
xchg
lret
adc
mov
xchg
and
xor
add
outsl
scas
cmc
popa
les
movsb
roll
jae
lcall
test
or
mov
sub
push
fcomp
out
push
jg
shlb
push
xlat
jb
sub
add
imull
call
cld
repnz
inc
inc
imul
push
xor
xor
movsl
add
cmpsl
or
lret
mov
das
repz
mov
inc
push
jge
loopne
dec
and
pusha
dec
hlt
notl
sub
cltd
sub
inc
add
sub
movsl
cltd
sub
jnp
sub
ftst
in
fucom
in
js
les
inc
cwtl
jg
pop
add
sbb
add
add
jg
enter
addr16
dec
mov
adcl
rorb
cs
outsl
xchg
enter
inc
in
aam
cli
push
pop
mov
add
jns
cmpb
pop
push
push
mov
cmp
adc
dec
mov
int3
gs
xchg
into
aas
mov
shlb
sub
push
aas
or
mov
inc
popaw
pop
adc
js
lret
jae
lods
jno
lret
fldenv
push
ficompl
cmp
pop
pop
push
shlb
jle
add
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
popf
jns
add
sbb
adc
sbb
fsubp
mov
lds
sub
mov
bound
mov
dec
out
pusha
mov
xor
sbb
xchg
and
add
push
and
mov
dec
jo
ss
or
jge
fstl
fwait
add
insl
xchg
inc
fsubrp
addl
pop
lods
sbb
mov
scas
and
les
inc
dec
or
into
int3
jecxz
out
push
jo
mov
mov
jmp
mov
insb
test
jo
cwtl
mov
sbb
les
dec
inc
xchg
sti
mov
push
jp
call
inc
orb
xchg
and
lahf
cltd
fsubrl
dec
ljmp
xor
in
or
scas
lret
mov
mov
xchg
push
and
xor
imul
push
fucomi
xor
mov
test
fwait
cs
mov
cmp
adc
leave
into
inc
mov
nop
rorl
fcoms
in
jbe
imul
aad
mov
cmpsb
push
dec
scas
mov
and
loopne
jecxz
arpl
push
cmc
out
mov
adc
xchg
mov
cld
and
pop
std
lock
aaa
loopne
ffree
repz
jno
pushf
add
sub
int
pop
adcb
fwait
test
jle
in
stc
adc
leave
pop
repz
std
in
hlt
rorb
push
push
pop
pushf
mov
sarl
enter
add
mov
nop
cmpsb
mov
cmp
inc
fistl
outsb
and
fldt
pop
int
jp
in
lds
push
xchg
xchg
mov
xchg
add
push
popf
test
and
jg
loope
pop
cmpsb
pop
outsb
das
pop
mov
mov
xor
inc
les
fstp
xor
xchg
pusha
and
jge
pusha
xlat
xor
sbb
enter
fs
out
and
sarl
mov
daa
adc
xchg
insl
daa
xor
push
clc
divb
adc
movsl
out
loopne
ss
fsubp
cmpsl
rcrl
xchg
popa
dec
xor
sub
xor
in
pop
mov
dec
fsts
or
shll
loope
aaa
mov
jae,pn
ljmp
ds
jg
out
sub
xchg
lock
mov
sbb
loop
inc
mov
aam
fs
incl
in
fidivs
jne
sbbl
ret
adc
push
xor
mov
loope
inc
mov
repnz
ret
scas
push
xor
mov
arpl
stc
jb
repnz
and
jmp
fisttpl
sbb
pop
sbb
sub
in
and
mov
mov
addr16
sbb
or
dec
inc
out
fdiv
sbb
lods
enter
add
ljmp
and
push
sbb
push
ret
fwait
jo
sbb
and
sbb
and
cs
push
add
out
lahf
cmpsl
ret
mov
sub
xchg
mov
lret
stos
aad
mov
pop
out
fistl
lcall
cmpsb
fcmovbe
jne
mov
orl
aaa
adc
pop
lock
ja
dec
sub
scas
pop
pop
mov
cltd
clc
jno
xor
sbb
mov
pop
jecxz
dec
inc
or
fldcw
movsb
mov
and
enter
cli
cli
inc
sbb
push
or
push
adc
cltd
jns
mov
mov
mov
dec
shll
push
inc
push
shl
daa
pushf
out
mov
out
sbb
push
pop
rorb
add
cld
mov
and
cmp
mov
daa
mov
jne
mov
movsb
xchg
test
andl
sbb
or
mov
xor
dec
inc
xor
cli
std
dec
and
cmc
mov
loope
fs
ds
or
or
xor
push
bound
sub
adc
sub
sahf
dec
xchg
test
mov
adcl
sub
add
mov
sbb
and
fwait
bound
movsb
inc
imul
cltd
shl
mov
stc
jg
mov
imul
aaa
or
or
adc
sarb
xchg
pop
xor
imul
cli
push
xor
push
mov
fsubrp
pop
ret
adc
mov
pushf
shrb
cli
stos
cmc
jge
sbb
jae
cmc
out
sub
cmpsl
sbb
or
jbe
or
and
out
or
outsb
scas
mov
pop
push
push
xorb
shrb
jg
adc
sub
adc
popf
mov
movsb
jo
jle
cmp
cmove
mov
jg
mov
out
push
nop
mov
mov
cmp
dec
call
dec
insl
les
sti
jle
xchg
push
ja,pt
mov
fcmovnb
sbb
std
inc
movsl
mov
lods
add
daa
sbb
movsl
les
repnz
in
add
push
fsubr
mov
xor
fisubrs
xorb
or
rcrb
xor
sbb
xchg
inc
xor
lret
loop
inc
xchg
mov
push
outsl
xor
add
dec
subb
push
add
lahf
dec
jmp
adc
loope
jns
adc
jecxz
dec
mov
hlt
fimull
adc
push
int3
pushf
repz
leave
add
icebp
cltd
outsl
cltd
stos
mov
fwait
iret
nop
ljmp
adc
inc
push
fisubs
jl
jo
js
push
cs
mov
xor
push
test
pop
aas
out
je
subb
outsl
sarb
fsubrp
jns
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
leave
jl
popa
sbb
and
sbb
mov
xchg
lea
push
dec
les
sub
and
ds
xor
lods
aam
cltd
jb
popl
sub
adc
jns
rcrb
xchg
xchg
mov
aad
xchg
iret
jmp
jbe
sbb
jb
lret
imul
jg
add
inc
cmpl
xchg
sbb
rclb
and
and
mov
divb
int3
pop
int
push
popa
and
xor
push
outsl
adc
push
ret
lods
movsl
dec
lret
lahf
push
adc
push
inc
xchg
sub
jp
mov
xchg
cmp
imul
sub
hlt
aad
fidivrl
cmpsl
jnp
inc
loope
sar
sbb
iret
dec
je
inc
fs
orb
push
jle
or
mov
cli
xchg
insb
xchg
mov
cmp
cmc
dec
add
xchg
mov
lods
dec
cwtl
out
push
push
movsb
sub
inc
mov
popf
jno
rolb
icebp
fisttpl
sub
adc
aas
add
xchg
ljmp
add
in
xchg
sub
cmpl
jns
movsb
mov
daa
cmp
or
cli
dec
pop
mov
ffreep
jbe
xchg
mov
cmp
mov
sub
mov
xor
mov
xchg
movsb
sub
into
mov
adc
stos
aas
jne
xchg
xchg
mov
jnp
insl
jbe
adc
movsb
xor
movsb
lds
sbb
arpl
xchg
xchg
fmulp
es
test
out
cld
cmp
dec
into
pop
jmp
and
pop
enter
push
testb
hlt
and
cmpsl
mov
test
enter
mov
and
stc
mov
fidivrl
je
inc
adc
jl
pop
xor
pop
mov
test
mov
bnd
fstpl
mov
in
outsl
and
imulb
rorb
xchg
dec
or
insl
call
jne
adc
mov
addb
mov
out
xchg
or
lahf
ds
xlat
mov
jns
popa
dec
insb
xor
adc
sbb
sbb
adc
pop
daa
pushf
xor
mov
jp
scas
cmp
iret
out
xchg
mov
cltd
xor
fwait
cmpsb
jl
lock
ds
in
jnp
aam
xchg
add
sti
jl
sub
pop
push
popf
xchg
add
mov
test
hlt
popa
jl
repnz
lret
xchg
cwtl
cmpsb
ss
cmp
out
pop
xchg
stos
pop
fcoms
jno
mov
enter
lods
push
sub
jmp
hlt
inc
ja
fmull
mov
push
lret
js
movsb
mov
cmp
or
outsb
inc
pop
mov
pop
loope
or
scas
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
push
hlt
push
pop
sbb
and
sbb
inc
jnp
xchg
mov
inc
push
mov
inc
outsl
into
or
push
aas
movsl
xor
loop
adc
mov
mov
dec
out
rcrb
add
insb
lds
xor
dec
insb
es
jg
stc
xor
xchg
ret
pop
mov
mov
and
insl
jmp
popw
or
cmpsb
sub
mov
sbbl
addb
loop
adc
push
push
je
pop
push
mov
hlt
fwait
ret
stos
fisttps
push
push
int
pop
mov
push
fldenv
movsb
or
aaa
les
xchg
xor
sbb
ret
mov
xor
sti
cmp
pop
test
mov
sub
lret
ss
or
sub
mov
sub
add
iret
or
xor
inc
cpuid
notb
test
lods
aam
movsb
mov
xchg
mov
repz
cmpsl
adc
ficompl
and
in
or
sahf
es
loopne
fstl
inc
int
aaa
jo
je
or
in
fdiv
mov
push
out
loopne
cwtl
mov
pop
enter
adc
xchg
mov
adc
into
sti
pop
cmp
sbb
lret
mov
or
jae
popf
jb
sub
mov
and
lds
into
ret
pop
in
inc
mov
test
dec
sbb
add
dec
sub
les
jo
cltd
push
push
or
pop
mov
sahf
add
js
sbb
aas
adc
test
mov
xchg
ja
fbstp
test
push
mov
fnstsw
outsl
out
fadd
mov
cwtl
daa
or
adc
addl
xor
mov
sub
aad
mov
fsubrp
test
fldl
mov
lods
mov
icebp
cld
push
and
mov
imul
inc
pop
leave
dec
dec
ss
in
arpl
push
xlat
popl
inc
pop
or
xchg
or
cmpb
inc
mov
dec
adc
push
jl
movsl
aam
mov
test
int
jns
jns
sub
lret
into
cmc
and
mov
xchg
mov
push
lcall
mov
insl
xchg
adc
stos
loopne
imull
adcb
ss
mov
fwait
cmp
arpl
pop
test
dec
imul
xlat
push
jbe
repnz
jo
arpl
add
in
pop
xchg
and
mov
in
ret
int3
iret
popa
lock
in
movsl
mov
cmc
cwtl
nop
fstpl
cmp
push
or
mov
pop
call
shlb
rcr
pusha
jecxz
popf
sub
add
add
adc
ja
jns
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
pop
xor
inc
subl
arpl
ja
fisttpl
push
dec
sbb
test
inc
mov
in
sbb
nop
cmpsb
jns
push
cmp
mov
jnp
dec
or
punpcklwd
hlt
push
pusha
lods
jp
xchg
aas
lret
push
mov
push
add
sub
or
mov
out
xchg
dec
mov
cmp
jle
mov
mov
mov
pop
icebp
and
dec
sub
enter
fsubrp
mov
push
cmp
dec
out
mov
test
and
mov
fistps
xchg
cmp
clc
sbbb
mov
push
inc
mov
mov
and
ss
ljmp
sub
popf
test
je
mov
lods
int3
ljmp
jno
fwait
mov
mov
xor
and
out
lret
mov
or
into
push
lock
les
mov
insb
sub
adc
cltd
int
xchg
adc
add
add
pusha
pop
push
push
cld
xor
adc
sbb
fcom
ret
xchg
andl
loopne
fiaddl
or
movsb
mov
dec
inc
pop
js
out
sahf
inc
roll
xor
mov
or
cmp
out
les
mov
sub
movsb
mov
scas
roll
lds
lret
mov
cmp
sub
sub
sbb
xor
jle
lcall
movsl
xchg
cld
sbb
adc
adc
jl
mov
inc
rorl
dec
xchg
cmp
je
xchg
mov
pop
shll
lahf
jg
int
pop
sbb
into
add
aas
int3
shll
cli
pop
lret
lret
mov
lret
mov
xor
jnp
xor
pop
out
pop
les
xor
sbb
in
xor
sub
ss
mov
std
adc
xchg
dec
or
out
sbb
aad
outsl
xchg
aaa
mov
sbb
push
dec
shlb
cmp
popf
and
in
jle
mov
rorl
mov
inc
dec
fistl
out
in
je
out
hlt
repnz
or
jg
add
sarl
clc
pop
lret
sbb
sub
pop
add
ret
out
aam
push
adc
jbe
ret
jp
xor
ret
add
mov
mov
xor
sar
push
pushl
jns
xor
xor
mov
add
bound
mov
cmpsb
mov
adc
psubusw
shll
push
cmp
les
jne
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
out
or
jmp
mov
inc
pusha
mov
ret
xor
aad
push
bound
push
mov
and
pop
daa
mov
lods
push
in
int3
repnz
in
add
int
dec
shll
mov
dec
popa
iret
dec
mov
push
jne
gs
fsubl
push
cmp
sbb
les
sahf
push
sbb
inc
lcall
sub
lcall
das
icebp
addr16
add
scas
adc
mov
hlt
movsl
sub
ret
int
mov
add
adc
add
xor
sub
fistpl
pop
mov
in
xchg
and
ljmp
xor
mov
lahf
jae
jle
add
pop
in
push
cs
add
sahf
fnsave
xchg
jno
sub
mov
loop
inc
push
shlb
es
flds
int
pop
ja
cwtl
xorb
pop
add
inc
push
jmp
push
dec
stos
stc
jnp
add
push
int3
and
mov
cli
shrl
xor
xor
mov
leave
in
mov
mov
xchg
subl
into
inc
pushf
outsb
jnp
or
push
inc
push
jno
test
xor
ret
lods
ja
fstp
mov
cmp
gs
xor
and
inc
call
cmp
add
pop
mov
push
mov
sub
xchg
outsl
std
movsb
test
push
dec
data16
mov
sbbb
cmp
cmp
test
lods
ret
test
pop
cld
mov
inc
cs
or
test
sti
xchg
xchg
mov
popf
mov
into
das
int3
pop
cmpsb
into
scas
icebp
stos
and
push
es
scas
out
and
pop
add
push
aaa
add
and
mov
loope
cmc
dec
dec
dec
repnz
xchg
lods
lock
xor
iret
xor
in
cmp
pop
ljmp
mov
aas
dec
dec
rcr
inc
mov
das
xor
loopne
or
in
imul
mov
lods
sub
mov
lret
pop
mov
wbinvd
inc
lds
loope
mul
daa
fsubrp
cmp
out
inc
mov
das
sub
popa
or
test
repz
mov
stc
xchg
add
arpl
clc
js
pop
cmpl
xlat
cmpsb
outsl
test
push
inc
fmul
nop
incl
mov
sub
jb
ja
dec
out
movsl
into
sbb
mov
and
pop
mov
mov
mov
dec
pusha
jmp
xchg
xor
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
inc
xchg
mov
add
sbb
cmp
enter
adc
popa
push
adc
enter
dec
negl
movsb
jno
and
xor
aam
mov
sbb
xor
stos
or
std
lahf
push
aas
test
pminsw
cmc
popf
xlat
xor
lea
mov
xor
rcrb
arpl
test
mov
jp
test
imul
mov
aas
push
lock
mov
ja
inc
icebp
arpl
movsl
sbb
dec
xor
arpl
enter
loope
cli
outsb
dec
bound
lods
jg
inc
cmp
sarb
ret
sbb
mov
notb
repnz
push
dec
xchg
xor
add
mov
shl
adc
outsl
mov
fsubr
aas
pop
sbb
popa
sbb
das
mov
inc
mov
mov
into
aad
xchg
and
mov
std
ret
loope
je
adc
or
and
into
in
cmp
fildl
xor
inc
arpl
push
xchg
push
dec
lcall
cmc
mov
shl
mov
add
jno
adc
sbb
pushf
dec
ficoml
lods
sub
mov
sahf
mov
mov
dec
std
lods
lret
test
arpl
in
and
enter
xor
mov
xchg
or
daa
cli
pop
clc
int
cmp
xchg
lret
cs
arpl
subl
dec
pushl
jle
mov
rorl
sahf
push
lret
into
jge
fstp
pushf
xor
lret
loopne
xor
pop
je
adc
rcrb
inc
adc
adc
sub
adc
adc
xor
adc
test
xlat
fidivs
xlat
popf
jmp
cmp
mov
pop
jo
xchg
ret
in
xchg
mov
repnz
je
xchg
adc
insl
sub
mov
gs
imul
add
shl
sbb
cs
fwait
jl
movlps
mov
jae
jne
push
popf
dec
fidivl
lret
push
stos
pop
mov
in
orl
jmp
jge
aad
push
repz
mov
fldt
test
xor
loopne
in
pushf
mov
repnz
aaa
in
jl
ret
sbb
gs
mov
stos
insb
pusha
xchg
aas
mov
incl
popf
add
stos
arpl
out
lock
fidivrs
cmc
xchg
mov
dec
ret
adc
lds
hlt
mov
dec
fcoms
xchg
sub
popl
jb
or
and
xchg
xor
inc
dec
xchg
add
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
sar
popa
jo
inc
sbb
add
sbb
lahf
int3
xor
pop
xor
inc
cld
push
add
inc
mov
popf
subl
popf
das
xor
inc
je
mov
mov
sub
in
inc
sub
cmp
imul
jle
clc
aaa
outsl
and
sub
jns
adc
jmp
xchg
out
call
in
inc
cmp
pop
jge
mov
pop
sbb
adc
les
nop
outsl
inc
not
pop
enter
push
and
cli
add
sbb
push
xchg
scas
fimull
loopne
adc
cmpsb
mov
pop
or
cs
pop
jns
jmp
insb
xchg
lahf
test
cwtl
jbe
pop
shrb
xor
call
xor
mov
popf
or
fdivs
insb
in
cmpl
cltd
shrb
pop
sti
rorl
push
pop
inc
rclb
push
inc
mov
repnz
pop
mov
jb
outsl
pop
repz
sub
pop
rorl
rcl
ret
ljmp
aam
inc
les
cmp
imul
jg
subb
insb
lretw
sbb
pop
jl
andb
xchg
loopne
pop
sub
pop
ss
cmp
sub
lret
xchg
and
aas
lods
test
add
testb
leave
imul
mov
push
xchg
sbb
scas
loopne
sub
jg
push
rolb
sub
stos
ds
adc
lock
scas
enter
sub
lock
push
cmp
push
dec
sub
popa
dec
mov
mov
stos
pop
pop
out
xor
sbb
je
arpl
ja
lahf
test
int3
fidivs
and
dec
adc
mov
mov
and
and
gs
xchg
pop
js
es
scas
les
lahf
shl
jae
xor
cmp
xor
adc
push
xchg
mov
mov
cli
sub
ljmp
jmp
lcall
icebp
jle
stos
iret
les
pusha
ror
adc
sti
xor
jmp
adc
adc
mov
inc
add
mov
fisttpl
shrl
das
jge
je
scas
mov
into
cmpsb
jg
xchg
xchg
xchg
jb
lods
cmp
sbb
hlt
repnz
sti
or
ds
sbb
fimuls
mov
xchg
loop
xor
fwait
shlb
idivl
dec
mov
arpl
cld
xor
mov
add
sub
mov
imulb
push
test
pop
ror
jl
mov
ds
lods
ret
xor
inc
nop
mov
pop
mov
hlt
scas
mov
or
fisttpll
ret
cmp
sti
into
push
data16
or
jl
test
xor
rorb
fsubs
psubq
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
js
insl
mov
cmp
sbb
inc
pop
popa
das
je
cmc
jnp
mov
push
insb
jae
push
fidivrl
out
mov
mov
fwait
mov
and
aas
xor
popa
dec
cmp
add
mov
mov
mov
cwtl
call
add
push
shlb
lods
adcb
xor
sub
int3
mov
setb
adc
xor
dec
inc
and
sub
inc
and
aad
bound
xor
inc
stos
lahf
das
add
data16
pop
dec
mov
icebp
jnp
aad
test
std
aad
mov
idivb
neg
out
outsb
arpl
jns
mov
outsb
mov
add
mov
popf
ret
leave
push
jge
sbb
outsl
mov
gs
test
cmpsb
and
in
jae
hlt
pop
stos
mov
sbb
sub
lret
imul
mov
mov
cwtl
dec
ss
fistps
sbb
or
sar
mov
fcoml
lahf
fwait
ss
jp
out
cbtw
or
mov
in
mov
push
out
addr16
lea
jb
ljmp
pop
adc
cmc
or
push
data16
xchg
test
jg
cli
sbb
jb
adc
mov
addb
pop
xor
rorb
ljmp
xor
cmc
cmp
or
sub
frstor
ret
into
adc
inc
pop
lcall
lcall
jae
imul
cmc
dec
xor
or
cmp
leave
gs
mov
and
adc
adc
aam
lds
inc
push
hlt
jb
sti
leave
inc
dec
xchg
mov
in
mov
fmuls
mov
out
pop
lds
xlat
loopne
jl
fcoml
push
or
mov
testl
or
sub
popf
cmpsl
nop
cmp
and
rorl
gs
mov
mov
and
test
loop
xchg
and
pop
mov
xchg
jae
sub
xchg
fucomi
jbe
aad
dec
dec
nop
mov
cmp
inc
lock
and
mov
scas
bound
es
or
add
or
clc
fs
cmp
nop
lods
data16
push
or
or
cmp
mov
jnp
or
daa
push
dec
imul
push
pop
adc
or
cmp
xchg
movsl
dec
add
icebp
push
scas
sub
inc
sahf
or
cwtl
nop
cwtl
adc
lods
jle
cmp
push
sub
inc
push
insl
bnd
xchg
pop
pop
mov
rcrb
cmpsl
push
mov
aas
sbb
cs
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
fstpt
aaa
sbb
add
sbb
incl
pop
mov
add
insb
or
aas
xor
into
mov
push
jb
rcl
lcall
dec
jl
mov
and
jb
adc
adc
dec
xor
ss
popa
addr16
fs
sbb
mov
push
test
out
les
add
or
xlat
loopne
or
jae
cld
aas
lea
fldenv
or
jbe
inc
cmpsb
mov
fistpll
loopne
js
push
mov
inc
xchg
mov
or
cli
adc
sub
and
gs
ret
cmp
dec
mov
inc
pminsw
xchg
cmp
addl
dec
mov
mov
stos
inc
mov
sub
inc
loop
dec
fstpl
test
cmp
mov
sbb
dec
jmp
fcomp
hlt
mov
out
xor
and
or
jo
xchg
push
lahf
js
adc
out
inc
push
clc
xor
les
add
mov
dec
xchg
push
cmp
sahf
cwtl
fisttpll
inc
je
add
dec
jge
aam
cltd
call
xlat
sbb
mov
arpl
sub
movsl
xorb
jne
stos
iret
sub
daa
inc
and
mov
popa
dec
dec
mov
fwait
xchg
jae
ret
push
movsb
pop
lahf
sbb
into
push
jecxz
ss
dec
mov
or
push
mov
pop
sbb
dec
loop
mov
sbb
shlb
add
push
push
jg
popa
out
insb
ss
rol
repz
xlat
fisttps
push
xchg
push
cmp
jnp
daa
push
insl
sbb
lret
enter
inc
cld
sub
add
mov
sub
add
imul
xor
push
pop
add
and
cmpsl
lods
out
in
add
push
dec
xchg
xchg
mov
pop
ss
dec
scas
scas
ret
fadd
loope
and
ret
inc
gs
cmp
pop
jno
adc
lret
mov
sbb
cmp
mov
leave
push
int
mov
das
sub
aad
fwait
je
inc
aaa
mov
movsb
rcl
adc
dec
mov
mull
repz
adc
shll
push
xchg
in
cmpsb
sbb
jecxz
inc
imul
gs
popa
pop
fisubs
mov
fdivrl
inc
movsb
ss
test
inc
stc
cmp
roll
mov
mov
pop
popa
mov
sub
loop
shrl
xor
adc
mov
mov
lds
mov
loope
cs
cmpsb
xchg
mov
add
mov
mov
push
int3
push
mov
shlb
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
inc
push
xor
sbb
adc
sbb
dec
mov
xchg
or
jae
xor
mov
paddd
andl
lret
aam
push
jae
cmp
lret
jne
mov
push
test
add
insl
pop
xor
clc
shr
cmp
xor
outsl
xor
sub
sbb
jns
out
cmp
notb
fldpi
nop
pop
mov
or
nop
insl
push
jb
fcmove
test
mov
outsb
hlt
lods
int
adc
loopne
jecxz
dec
cmpsl
sbb
push
fstl
push
push
or
push
call
push
xor
hlt
fsub
mov
fildll
int3
dec
lret
lods
fsubl
push
or
pop
xor
cmp
mov
adc
enter
subb
push
jge
cli
or
add
sbb
bnd
ljmp
adc
mov
push
xchg
in
cmp
ja
jg
jmp
rcl
popa
and
dec
test
test
mov
pop
inc
xor
xlat
les
jp
inc
mov
fisubs
lock
adc
lods
out
mov
push
in
mov
mov
pop
pusha
jae
cmp
inc
insl
pop
leave
scas
call
sahf
aad
test
nop
mov
pop
mov
lret
adc
pop
xchg
test
jno
sub
jno
jbe
dec
pop
lahf
loopne
dec
jecxz
inc
dec
fsubrl
ret
sub
adc
jae
pushf
pop
mov
arpl
sti
cwtl
pop
outsb
pop
sarl
popa
cmp
rcrl
xchg
sti
in
xor
mov
lret
cmp
movsb
push
xchg
inc
fistl
dec
mov
movsl
mov
jecxz
out
xchg
pop
fiaddl
daa
add
jbe
das
add
mov
mov
push
ret
push
fbld
mov
mov
push
adc
xor
mov
push
mov
je
dec
inc
cwtl
ret
dec
mov
inc
sahf
and
xor
push
sub
mov
jecxz
js
push
idivb
mov
dec
and
inc
lahf
mov
pushf
js
push
notb
xchg
push
inc
int
push
rcll
cmp
sbb
and
aam
xchg
mov
shrl
jmp
out
mov
cmc
pop
dec
dec
mov
mov
scas
adc
mov
shll
aam
dec
jno
in
lods
xchg
push
xchg
rorb
mov
aad
pusha
adc
mov
sub
ret
xchg
fisttps
adc
xor
jmp
sarl
and
jno
stos
sbb
push
test
xchg
lcall
insl
lock
inc
loop
call
mov
mov
mov
adc
jl
add
sub
add
add
push
sbb
ja
sbb
sub
sbb
adc
sbb
andb
mov
je
jb
into
bound
adc
test
push
sub
xchg
add
pop
cmp
fstpt
data16
xlat
dec
stos
aam
add
and
push
mov
push
rorl
fists
out
lock
jno
sbb
mov
iret
das
adc
aam
jns
pop
mov
sbb
lods
inc
cmp
aas
lods
mov
inc
sarb
dec
xor
sub
xchg
xchg
js
xor
xor
mulb
scas
movsb
scas
test
arpl
pop
mov
ja
sub
out
int
jl
mov
jns
test
inc
cmp
sbb
lret
xchg
xor
out
mov
sbb
add
fisubrs
fbld
add
ljmp
nop
sbb
cmp
sbbb
add
push
push
xchg
push
mov
mov
aad
pusha
int
rol
icebp
je
test
sub
xchg
push
cmp
cmpsl
in
cmp
push
sub
jno
pop
add
decl
outsb
test
rcrl
pop
xchg
scas
test
pop
mov
stos
enter
xor
jne
out
dec
xchg
in
mov
xchg
pop
xchg
sti
dec
cmp
icebp
mov
lods
popf
cmp
out
mul
xchg
or
push
mov
fcoms
push
leave
xor
cli
imul
cli
sbb
and
jle
stos
rcr
lock
push
in
sub
push
jp
and
cmpsb
jmp
push
adc
dec
sub
xlat
roll
pop
loopne
jae
jae
and
scas
movsl
sahf
or
pop
and
cmpb
scas
xlat
sbb
cltd
addr16
mov
jge
data16
nop
fcomps
aaa
cli
jmp
xchg
pop
adc
xor
sbb
test
inc
fcmovne
adc
fnstsw
and
pop
cmc
mov
adc
lcall
xchg
sahf
pop
cwtl
cs
arpl
mov
and
fistl
aad
push
divl
push
dec
add
inc
sub
pop
in
pushf
mov
daa
and
jge
mov
ss
ja
roll
movw
jb
sbb
lea
mov
lcall
cmpl
fidivrl
cs
idivb
xchg
mov
push
inc
xchg
popf
dec
jp
scas
pop
mov
dec
ds
stc
aam
push
and
inc
adc
jo
sub
or
orb
cmp
call
lret
test
xorb
mov
divl
add
sbb
insb
stos
dec
pop
leave
insl
in
or
mov
lods
stc
in
jno
gs
out
sbb
mov
jg
push
xchg
cmp
and
lods
or
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
push
sbb
add
sbb
clc
sbb
sbb
bound
add
xlat
cmpsl
fdivl
jo
xlat
cmp
in
xchg
sbb
andl
mov
mov
pop
adc
or
mul
mov
xchg
mov
into
push
incb
and
xchg
mov
add
sbb
pop
aaa
ljmp
imul
arpl
mov
shlb
rcrl
mov
adc
push
je
aaa
push
inc
push
dec
imull
inc
mov
repz
mov
in
orl
popf
or
jmp
xor
jnp
cmp
test
xchg
or
shr
add
fwait
in
out
cld
fcoml
mov
dec
xor
aaa
mov
jp
sub
out
les
mov
jge
sbb
push
mov
lea
pop
mov
fildll
cs
adc
or
mov
sub
mov
add
push
repz
mov
insl
decb
pop
leave
cwtl
cmpl
or
push
test
and
mov
fwait
pop
popa
jle
mov
mov
cli
mov
lahf
xchg
sub
mov
or
mov
cmpsl
movsl
jecxz
add
sbb
loopw
addb
sub
dec
repz
imul
bound
push
out
ljmp
xor
sbb
push
xchg
dec
jns
inc
inc
adcl
mov
mov
jecxz
les
aaa
ds
push
ret
push
sub
inc
inc
mov
push
shl
mov
mov
and
mov
neg
rorb
sahf
add
mov
push
test
cltd
cltd
out
and
and
mov
sub
std
mov
stos
pop
insb
test
pop
mov
sbb
xchg
aam
pushf
enter
xor
adcb
sti
sbb
rcrb
out
hlt
fucomp
pop
test
cli
pop
lcall
cltd
stos
es
add
popa
mov
sbb
arpl
rolb
sub
jns
out
frstor
sub
in
pop
inc
or
insb
or
cmp
stos
or
out
and
aam
pop
cmp
cmp
testb
mov
in
repz
hlt
dec
std
sub
in
dec
aad
push
shl
nop
xor
mov
inc
loopne
sahf
jl
mov
pop
pop
pop
inc
movsl
add
xchg
pushf
pop
js
add
pop
ret
xchg
add
je
repnz
xchg
fidivrl
das
add
pop
adc
enter
clc
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
int3
lock
add
sbb
test
jno
mov
pop
lret
sbb
sbbl
or
faddl
jg
lahf
nop
mov
cmp
mov
xchg
pop
ret
sbb
push
stos
std
pop
cld
pop
dec
pop
push
test
inc
mov
jns
insl
in
jnp
and
insl
cmpsb
popf
inc
icebp
push
xchg
mov
rclb
pop
xlat
mov
daa
dec
add
inc
mov
mov
mov
adc
dec
mov
sti
xor
iret
mov
cmp
dec
cwtl
loop
lret
sbb
shl
inc
dec
mov
fnstenv
pop
pop
loope
aaa
mov
int
frstor
stos
rorl
scas
xchg
mov
inc
movsb
je
mov
jle
sbb
xor
add
jecxz
lret
mov
outsl
cmp
out
add
mov
outsl
cmpsl
dec
fisttpl
loop
jle
cli
mov
jge
jae
hlt
xor
aaa
mov
ljmp
xchg
sbb
ror
cs
mov
mov
dec
pop
stos
push
pop
push
inc
stos
mov
pop
push
out
in
inc
daa
inc
push
push
dec
inc
subb
pusha
mov
scas
pop
test
sti
jne
std
jb
cld
lods
scas
mov
dec
fdivrs
les
push
mov
xor
push
xorb
mov
dec
push
sub
adc
mov
fwait
push
jae
jbe
fsts
add
daa
xor
std
sarb
pop
mov
cmovnp
cli
lret
scas
jle
lret
or
cmp
cmp
cld
lods
cmp
cmp
add
cwtl
test
push
xchg
or
fs
mov
mov
aam
dec
adc
cld
dec
mov
xlat
cmp
or
sub
mov
xchg
in
jecxz
pop
ljmp
repnz
xchg
in
jg
repz
or
add
les
call
std
out
movl
inc
mov
mov
fiaddl
pop
jbe
or
das
push
sbbl
mov
clc
aas
push
sub
adc
push
mov
mov
in
xchg
jbe
sbb
mov
arpl
scas
into
pushf
test
sbb
push
sbb
popf
stos
es
mov
notb
sbb
add
loope
xchg
jno
mov
cld
mov
inc
out
push
or
dec
arpl
shlb
and
pop
jno
sub
mov
or
mov
push
inc
inc
sahf
add
xor
rcrl
pop
ficoms
dec
in
xchg
ret
xchg
les
pop
dec
int3
rcll
in
les
adc
fiadds
lret
inc
push
adc
push
dec
add
js
scas
js
mov
pop
shll
mov
sbb
mov
movsl
cmp
test
lods
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
push
sbb
sbb
adc
sbb
push
sub
adcl
int3
jne
fs
mov
and
movsb
orl
inc
out
cmp
mov
mov
dec
pop
scas
test
push
fs
xor
add
or
add
push
push
jl
jnp
lods
je
nop
mov
insl
imul
cmpsb
adc
in
cwtl
cmp
test
rclb
std
mov
and
xchg
pushf
mov
adc
lahf
idivl
inc
inc
gs
fadds
and
das
push
inc
jo
sub
leave
push
cli
daa
jno
cmpsl
clc
mov
mull
dec
mov
out
hlt
xchg
je
or
cmc
sbb
scas
and
or
mov
xor
push
jge
lahf
and
test
into
sti
inc
call
nop
and
push
shll
xor
movsl
lahf
lsl
cmp
dec
adc
in
add
sub
xor
pushf
mov
xchg
and
push
inc
jecxz
imul
std
cmp
ja
aaa
dec
ds
or
push
imul
jmp
jo
xchg
or
cmc
cmp
add
pop
xchg
inc
push
je
mov
mov
push
adc
test
sub
test
outsb
sti
jne
push
cmp
xchg
dec
inc
mov
xor
lcall
sub
rcrb
mov
mov
and
xor
divb
in
je
push
gs
int3
les
pop
inc
lock
sahf
out
into
hlt
sbb
mov
int3
into
jmp
sub
bound
cs
in
jle
jge
shlb
jnp
sub
movsl
xchg
imul
insl
or
stc
xor
mov
hlt
arpl
sbb
or
nop
pop
outsb
sub
adc
xchg
cmpsl
jg
inc
push
sub
iret
aad
daa
mov
sbb
ret
int
sti
insb
add
inc
divb
rcrl
ret
sub
out
push
in
jo
loopne
push
mov
pop
mov
mov
mov
inc
xchg
adc
leave
push
jo
loop
dec
mov
cld
or
and
fidivs
pop
dec
dec
ljmp
push
and
adc
and
repnz
sub
adcl
inc
fwait
movsb
cmp
or
popa
popa
clc
je
andb
insl
fisubrs
add
dec
mov
push
mov
ds
xchg
and
adc
cld
and
bound
aas
and
ss
div
add
sarl
push
cmp
jp
mov
inc
ljmp
aas
xchg
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
movsb
xchg
adc
pop
adc
sbb
adc
sbb
or
inc
movsl
lock
add
xor
or
or
jmp
xchg
in
mov
push
call
sbb
xchg
mov
loop
mov
pushf
loop
or
xchg
sti
xchg
cmp
lahf
sub
sbb
fstp
push
lret
mov
mov
mov
loop
ret
jb
test
push
and
iret
jbe
add
scas
adc
nop
cs
aaa
add
divl
ret
enter
mov
dec
cmp
lods
and
and
scas
inc
aam
pop
lret
ds
sub
mov
and
xchg
push
cmc
repz
push
dec
mov
dec
xchg
jae
cmpsb
fcoms
ds
mov
fwait
ja
or
and
xchg
outsl
xchg
push
aas
loopne
popa
jle
sub
lret
push
mov
lret
jae
pop
sti
pop
or
push
rol
mov
dec
es
in
in
pop
push
ds
mov
xor
sbb
aaa
mov
popa
loop
sbb
addr16
push
push
in
add
cmp
sub
movsb
sti
inc
jle
mov
stc
push
adc
mov
pop
mov
push
pop
repnz
push
mov
add
cld
fistpll
sub
mov
stos
into
dec
insl
cmp
add
ja
push
xchg
mov
pop
pop
push
xchg
push
ret
addb
addr16
test
jo
notb
lret
adc
mov
inc
jle
call
pop
jg
mov
movsb
xor
cld
ficoml
jmp
jg
or
adc
pop
mov
pushf
clc
cld
lock
push
dec
imul
test
or
mov
ret
sbb
and
inc
add
lods
push
shlb
andb
pop
scas
pop
icebp
jge
in
cmpsb
and
or
mov
mov
jo
stos
stos
mov
add
shll
stc
scas
movsl
cltd
gs
mov
inc
xchg
call
adc
test
inc
mov
outsl
in
pop
mov
cli
in
stos
in
dec
add
lods
js,pt
push
pop
mov
nop
insb
pop
clc
pop
xchg
jmp
in
lds
repz
xchg
dec
xorl
dec
pop
popa
or
push
mov
ds
mov
push
in
cwtl
fiadds
psrad
jp
in
push
jle
jo
in
rclb
add
imull
xchg
mov
cmp
loopne
jae
inc
mov
mov
ficompl
cmc
lods
mov
leave
stos
int3
xlat
xchg
pop
mov
xlat
out
stos
cmc
pop
mov
rclb
fcomps
mov
stos
imul
jle
sbb
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
cmp
stos
inc
or
sbb
or
sub
es
jl
dec
faddp
and
ljmp
movsb
test
hlt
sti
scas
lahf
jmp
push
fdivrl
js
push
inc
pop
sbb
int
into
xor
jno
test
add
mov
mov
orb
mov
in
test
stc
and
stos
shl
inc
xchg
inc
and
xor
fstpl
and
je
imul
xchg
int
dec
pop
jne
push
sbb
out
in
xchg
fldcw
xor
mov
in
lods
sbb
mov
xchg
popa
xchg
cmp
movups
pop
in
xor
test
mov
sbb
out
loop
inc
les
stos
cmp
cld
or
fcoms
mov
inc
sbb
mov
negb
mov
out
mov
add
fldt
sarl
enter
xchg
fldl2e
int3
add
mov
icebp
jns
xchg
jg
pop
repz
mov
add
mov
or
jp
mov
inc
mov
fnstcw
iret
imul
jl
lds
outsl
push
mov
aad
mov
sub
inc
pop
adc
hlt
out
dec
leave
inc
dec
dec
shlb
jl
jp
shrl
sbb
pop
cmp
fld
sahf
cli
and
mov
cmp
out
and
push
mov
adc
sbb
and
mov
xchg
fwait
mov
xor
jle
clc
dec
sti
pop
scas
mov
mov
ds
sub
jbe
pop
jns
and
ret
lahf
xchg
mov
addb
daa
push
movsb
mov
mov
sub
pop
out
sub
pop
pushf
adc
add
push
sahf
inc
mov
pop
lahf
fiadds
popf
xchg
mov
xchg
jbe
add
jae
loopne
cmp
sbb
mov
or
jmp
movb
lea
pop
dec
or
mov
movaps
lock
stos
repz
xor
js
and
and
stos
in
push
mov
hlt
mov
enter
clc
mov
push
xchg
xor
leave
pusha
flds
dec
jnp
call
jmp
scas
or
xchg
lret
pusha
out
or
jp
push
out
mov
fsub
cmpsb
mov
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
cmpsl
hlt
push
pop
sbb
test
sbb
xchg
jge
aad
js
inc
dec
xor
stc
dec
dec
sub
test
inc
jle
call
dec
sbb
add
clc
sub
loop
adc
mull
mov
or
cmp
push
or
mov
and
mov
out
orb
out
arpl
out
popf
add
pop
push
xor
adc
add
cmpsl
dec
movsl
xchg
jbe
cmovs
sar
sysret
out
dec
push
xchg
cs
xchg
test
mov
gs
fstpt
fnsave
out
xor
xchg
jno
insb
test
shlb
call
jno
mov
mov
mov
aas
cmc
add
stos
xchg
mov
and
loop
mov
jns
lods
sub
mov
lds
in
out
jmp
rolb
mov
push
jno
outsl
and
push
sub
subb
jae
pop
and
mov
fs
push
jbe
leave
xchg
xchg
mov
mov
add
adc
sub
ja
add
in
lock
sbb
mov
sahf
xorb
mov
movsl
popf
sub
repnz
daa
loop
roll
outsl
jmp
pushf
or
sbb
lea
add
mov
sarb
and
pop
or
adc
and
pusha
xlat
xor
daa
jg
adc
inc
daa
push
cmp
xor
inc
add
cld
dec
sbb
aas
ja
jge
shl
or
pushf
mov
repnz
out
int
incb
hlt
and
aas
cwtl
jecxz
mov
xor
aam
mov
imulb
push
xchg
icebp
xor
repz
push
outsb
sub
clc
fwait
outsl
nop
jno
repz
jno
adc
jg
xchg
xchg
shl
mov
orb
frstor
mulb
jns
sbb
stos
aam
and
jae
xchg
idivb
test
jle
nop
nop
outsl
or
mov
dec
mov
inc
fstpt
lret
and
mov
btc
mov
inc
mov
mov
rcrl
push
aas
mov
pusha
jae
imul
inc
dec
cltd
loopne
inc
out
scas
cwtl
xchg
into
and
movsl
stc
mov
cmp
repnz
lods
icebp
adc
pop
hlt
jecxz
jge
sbb
stos
cmp
call
popa
dec
scas
dec
cld
cmp
sub
inc
jo
add
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
out
mov
test
sbb
test
inc
pop
push
pop
push
sbb
mov
jb
and
stc
jl
ljmp
stos
mov
dec
add
push
sub
arpl
into
jo
stos
dec
sub
add
push
out
fwait
jmp
adc
ds
xchg
jae
ror
testb
or
insb
xor
jge
push
sub
cwtl
push
mov
adc
test
shl
pop
mov
les
lods
inc
inc
pop
xor
std
es
inc
xchg
xchg
cmpl
test
flds
jp
test
adc
aad
das
jb
adc
mov
orl
sub
add
xchg
loopne
xchg
xchg
and
add
xchg
cmp
push
pusha
inc
pop
mov
jmp
cmp
sahf
mov
int3
ret
add
jb
mov
inc
cmp
add
mov
sbb
popa
xchg
loopne
cltd
xchg
mov
sbb
fiaddl
inc
scas
push
inc
adc
mov
push
fdivs
xor
add
mov
je
dec
inc
inc
and
mov
repz
pop
fldcw
cli
std
movsb
sbb
mov
movsb
inc
or
stos
sbb
stc
inc
add
mov
ret
fwait
mov
jno
mov
mov
mov
js
pop
inc
jnp
hlt
hlt
out
mov
xchg
fildl
lret
add
std
loopnew
push
lahf
jp
xor
loop
push
loopne
mov
mov
daa
pusha
push
inc
imul
mov
and
outsb
std
mov
out
jo
pop
rorb
push
cmc
pop
cmpsl
mov
xchg
fcompl
dec
inc
imulb
cli
push
mov
sbb
push
sub
cmpsl
mov
jge
es
shlb
jmp
cmp
inc
ret
les
cmc
aad
stos
ret
xchg
push
ret
int
cmp
movsl
out
sub
shrb
loope
mull
add
es
imul
loop
push
adc
mov
stos
inc
into
mov
movsb
std
pop
xorb
insb
jp
clc
ret
in
loope
mov
je
cmc
fwait
nop
mov
dec
repnz
jle
fildll
jecxz
jae
mov
pop
outsl
and
mov
leave
cld
sbb
jg
shlb
mov
jns
mov
fnstenv
jl
imul
mov
aam
mov
jmp
cmc
lahf
or
pop
gs
mov
ret
fmuls
scas
ret
or
add
sarb
lret
mov
ljmp
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
ffreep
jl
sti
sbb
test
sbb
pop
inc
aam
cld
in
test
dec
xchg
and
fs
adc
aad
jb
lods
fcoml
pop
movsb
cmp
loope
fwait
cmpsl
inc
jl
adc
mov
scas
inc
add
push
mov
pop
mov
shl
mov
push
arpl
test
mov
es
mov
add
sub
cmp
icebp
inc
mov
xor
or
out
inc
jg
hlt
xor
sub
cmc
add
dec
xor
and
push
shrl
adc
and
sub
dec
xchg
js
pop
shl
fistl
and
and
inc
jmp
in
cmp
out
sbb
loope
push
pop
mov
nop
sbb
je
jecxz
shll
cmp
inc
mov
inc
lock
stc
mov
push
sbb
ss
mov
add
mov
push
call
or
ret
cmc
sub
inc
pop
dec
pushf
add
mov
cmp
hlt
cmp
pop
pop
in
jns
inc
xor
sahf
dec
adc
cltd
or
nop
pop
dec
jmp
xchg
nop
cs
in
cltd
inc
int3
add
pop
adc
sbb
ss
jnp
push
loop
mov
scas
pushl
ficomps
inc
sarl
jnp
cmp
mov
fcomi
movsb
imul
inc
pop
mov
in
mov
sarb
or
outsb
out
loopne
mov
roll
sbb
lds
jb
fmull
jne
sub
into
aam
jae
lods
in
push
in
xchg
shll
fwait
or
xor
pop
std
jbe
xor
cli
sbb
push
cmpsl
loop
das
xor
mov
pop
insb
mov
insl
adc
xor
pop
les
mov
add
popa
pop
add
dec
sbb
mov
std
sbb
push
les
xor
cmp
cmp
in
sub
ret
fnstsw
and
mov
or
lds
cmp
mov
call
inc
mov
cmp
test
cmp
sub
shll
push
cmp
pop
sub
adc
cs
xchg
cmp
adc
ret
arpl
cmp
or
inc
sub
pop
cmp
and
mov
sbb
push
adc
cwtl
and
aam
dec
sbb
popf
ja
sbb
repz
mov
jns
mov
movl
movl
movl
movl
jmp
push
mov
fistpl
push
fisubs
xor
sbb
inc
xor
dec
inc
stos
insl
imul
push
out
adc
or
ret
outsb
adc
and
popa
xchg
or
das
push
or
push
aad
xchg
jl
push
push
dec
xchg
or
dec
and
test
mov
cmpsl
xlat
loope
fists
test
push
loop
cmc
aad
insb
stc
sbb
out
aaa
call
jg
xchg
imull
pop
xchg
xchg
movsl
add
scas
adc
aam
incl
push
lea
ljmp
lods
inc
adc
aaa
bound
insb
pushf
jno
rcll
adc
xchg
jno
icebp
inc
cmp
aam
jmp
cmp
aam
add
push
pop
fimuls
mov
aas
ret
in
das
das
xchg
add
gs
push
sarb
aaa
mov
lret
jl
cmp
stc
inc
pop
xchg
pop
add
mov
jecxz
orl
test
push
inc
sub
aad
sub
mov
mov
js
mov
dec
jmp
popa
add
jl
lret
dec
mov
lret
mov
add
jl
jg
or
dec
daa
out
insb
fdivrl
out
in
lret
loopne
movsl
inc
cwtl
adcb
add
sahf
out
ret
sti
call
inc
dec
mov
sbb
push
loope
xor
cmp
pop
js
pop
or
ret
fs
xchg
test
scas
sbb
lods
dec
in
sbb
mov
or
or
es
pop
adc
xor
addb
mov
dec
cmp
add
push
faddl
sub
out
std
add
push
dec
out
call
add
stos
data16
mov
dec
push
inc
and
fs
jge
jnp
stos
scas
jno
sbb
jle
ss
ret
mov
iret
call
aam
pop
pusha
out
mov
mov
ss
aas
or
pop
pop
pop
movsb
add
and
call
test
mov
xchg
cmp
push
jne
outsl
sbb
std
div
notrack
xchg
mov
aad
loope
and
repnz
sub
pop
sub
adcb
push
faddl
mov
pop
sub
clc
lods
ss
xchg
in
out
pop
cmpsl
xchg
rcrb
cmp
jle
lods
lds
push
loop
loop
cld
sahf
outsl
and
push
push
das
pop
pop
inc
fcompl
xor
dec
sub
frstor
xor
movl
movl
jmp
aas
mov
mov
dec
mov
shll
adc
sbb
shrb
mov
dec
dec
cltd
jno
push
rcrb
in
xor
adc
pmuludq
xor
or
jge
dec
add
cmpl
add
pop
push
xor
pop
adc
in
in
cmp
push
or
fists
cld
lods
adc
sti
loop
and
adc
jp
inc
sub
les
mov
push
pop
jns
jae
dec
xchg
pop
push
pop
dec
sbb
pushf
ljmp
or
cmp
or
sbb
and
cwtl
dec
mov
push
outsb
sub
movsl
pop
fnstenv
dec
dec
xor
ja
cmpsl
and
jbe
lahf
test
inc
aam
cmp
jno
push
nop
push
add
mov
mov
mov
jo
cli
fisttps
insl
xor
fidivrl
pop
or
push
and
mov
test
xlat
sbb
lcall
hlt
mov
sbb
aad
fdivs
pop
arpl
dec
mov
and
ret
cmp
outsl
ret
pop
pop
pop
push
sub
js
sbb
adcl
pop
sti
fnstenv
or
movsl
inc
sarb
dec
push
xchg
sti
push
enter
and
jne
out
test
cwtl
cmp
xor
movsl
loop
lahf
mov
popf
push
add
pop
adc
test
or
jnp
cli
subl
insl
stos
or
mov
filds
cmp
xchg
inc
push
enter
lea
sub
sbb
push
imul
mov
arpl
in
insb
test
data16
sbb
je
mov
inc
stc
push
sahf
pop
sbb
sub
loopne
xchg
dec
in
cs
das
fs
mov
andl
out
cmpsb
add
xchg
mov
scas
imul
cld
cld
imul
lock
out
push
or
stos
xchg
jo
cmp
nop
mov
scas
rcrl
push
enter
dec
mov
push
fbstp
push
int3
test
cwtl
mov
fnsave
jmp
jae
test
clc
arpl
jns
in
xchg
push
jmp
adc
lahf
nop
ret
and
adc
xchg
into
gs
incb
es
mov
lcall
push
mov
push
add
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
pop
dec
jle
ljmp
fbld
dec
add
mov
mull
test
sbb
pop
xor
ret
pop
jp
sub
jmp
jo
lret
shrb
sahf
pop
inc
imull
sub
insl
out
test
lcall
loope
cmp
jp
bound
dec
test
push
mov
arpl
pusha
es
jecxz
imul
pop
mov
daa
sub
movsl
dec
cmp
fnsave
cmc
push
jnp
and
cmp
pop
aas
xor
push
mov
sbb
out
add
xchg
pushf
and
mov
sub
mov
jmp
jmpw
cmc
scas
xor
or
mov
aam
dec
xchg
jecxz
stos
mov
ret
adc
stos
mov
jle
jb
push
icebp
loop
aam
inc
mov
push
cmp
dec
xor
jl
aaa
sub
cmc
jl
das
pop
xor
orb
icebp
imulb
lret
lret
subl
data16
sbb
jmp
jb
and
call
mov
fiadds
adc
insl
out
xor
shrl
sbb
or
cmp
sti
repnz
jns
sbb
in
push
es
or
out
ljmp
jno
rcrl
jp
jecxz
pushf
mov
arpl
ss
outsl
scas
pop
and
aad
fbstp
inc
inc
ja
es
jb
lahf
stos
jnp
lret
jp
push
cltd
or
nop
ljmp
stos
pusha
test
jl
sbb
in
ret
inc
pop
add
rclb
dec
pop
or
adc
xor
xchg
jno
cmp
int
cwtl
and
inc
dec
dec
loopne
push
cmpsb
out
lret
aaa
jecxz
cmp
xor
xchg
dec
popf
cmp
and
mov
mov
cmp
stos
int
jae
add
hlt
mov
or
dec
push
lret
jge
jmp
cmp
push
jg
mulb
gs
jb
fisubrs
das
sbb
dec
cmp
xor
pushf
xchg
pop
dec
movsl
mov
ret
test
xchg
mov
test
imulb
push
stc
mov
sub
fwait
inc
loope
loope
insb
pop
or
imulb
movsl
in
ljmp
mov
data16
mov
stos
xor
lcall
pushf
pop
lcall
add
add
ret
fmull
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
testl
test
sbb
cltd
bound
xchg
divl
xchg
das
adc
rolb
mov
rorl
ds
jg
repz
inc
or
sbb
push
idivl
mov
adc
add
fcoms
stc
nop
rorb
lahf
imul
cwtl
ja
sub
mov
js
xchg
mov
dec
jge
mov
test
sub
daa
mov
cmpsl
push
call
or
or
adc
and
or
mov
jl
xchg
cmp
cmp
pop
sahf
nop
pop
imul
adc
add
fwait
into
ret
jbe
jecxz
dec
out
push
sti
dec
mul
inc
leave
stos
test
mov
mov
loope
mov
adc
fsubrl
cmp
loope
mov
cwtl
rclb
pop
jno
es
add
mov
push
mov
sbb
fisubs
aaa
mov
jne
cmp
call
in
sbb
dec
jmp
dec
loope
iret
in
lret
sub
aad
insl
hlt
push
sub
and
mov
fstl
push
repnz
and
pop
jnp
jg
xorb
add
in
push
mov
jp
ljmp
in
xor
aaa
adc
fsubrs
and
xchg
and
shr
loopne
sbb
pop
lret
mov
aas
mov
sub
adc
lea
mov
faddl
out
repnz
cmp
jl
sub
inc
jne
idivl
jp
scas
out
es
push
jl
inc
call
or
sbb
inc
cmp
ret
and
inc
cmpsl
mov
pusha
pusha
in
cmp
or
imul
rorb
fiadds
stc
dec
dec
test
popl
adc
xchg
add
rolb
icebp
sbb
dec
xor
and
push
cmp
adcl
test
xchg
xchg
cmpsl
int3
out
or
mov
shlb
pop
mov
inc
fst
jecxz
jmp
or
movl
repnz
outsl
inc
cmp
es
in
and
into
test
adc
ds
daa
mov
mov
or
xchg
fiadds
xor
outsb
xor
pop
jno
push
cmp
cmp
push
movsb
xchg
xchg
mov
jmp
outsl
lret
jg
mov
pop
and
int
xor
cmp
test
sub
ret
add
ret
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
stos
shl
sbb
mov
sub
adc
mov
cmpsb
xchg
dec
int3
addr16
mov
inc
ficomps
sub
pushf
cld
mov
call
lret
or
outsb
pop
stc
pop
inc
pop
mov
or
aad
mov
add
rcll
add
aas
dec
dec
fidivs
out
mov
daa
push
test
lea
movsl
sbb
nop
out
pcmpeqb
cmp
lock
daa
lret
stc
shr
xorb
push
jo
mov
push
popf
and
pop
es
sarb
mov
pop
loop
and
jne
dec
loope
shl
xor
push
xchg
mov
sub
movl
loope
add
jg
jne
in
rolb
scas
mov
push
negl
jne
lds
jecxz
hlt
fnclex
ss
and
je
out
pop
stc
stc
imul
jnp
imul
dec
jb
cmc
xor
inc
or
sbb
loopne
shrl
insb
ret
adc
sti
sbb
lea
dec
fdivrl
insl
insb
push
cmp
push
push
pop
and
and
pop
jae
inc
data16
cmp
push
int3
in
adc
test
decb
mov
repz
out
xor
mov
or
or
xchg
out
inc
inc
lahf
lea
or
ja
xchg
loop
add
sub
sarl
inc
sbb
xor
aaa
xlat
mov
xorl
mov
mov
sub
mov
sub
loop
jbe
fsubl
imul
outsb
mov
pop
rol
dec
xor
mov
iretw
ja
push
ss
neg
xchg
jnp
jmp
subl
mov
sub
notb
sub
out
xchg
ficompl
int
dec
imull
mov
outsl
dec
test
pop
mov
sub
fdivr
loope
xchg
mov
jns
sti
adc
out
sub
or
lcall
add
int
mov
mov
sar
pop
fsub
movsb
jno
and
scas
pop
aaa
repz
and
mov
subl
insl
inc
add
or
dec
fs
or
ret
adc
lcall
inc
sbb
dec
ljmp
xchg
adc
mov
xor
loop
imulb
pop
ret
fisubs
popf
stos
decl
out
add
dec
cwtl
push
clc
int3
dec
fstp
out
hlt
jmp
popa
std
cwtl
and
test
inc
in
push
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
mov
sbb
adc
sbb
pushf
loope,pt
sbb
sub
xchg
js
daa
es
xchg
add
mov
mov
outsb
fs
xchg
sub
add
pop
test
popf
adc
xor
sbb
mov
aaa
test
dec
mov
lods
sbb
dec
test
push
add
xchg
ret
cmp
and
xchg
aas
xor
iret
jp
dec
ljmp
sub
cs
aas
pop
add
sub
mov
pop
pop
out
into
mov
cmp
pop
outsl
das
int
pop
out
lahf
lods
mov
aad
mulb
in
add
cmp
mov
push
mov
lock
lods
cmp
sbb
mov
rolb
xor
in
push
fsubrl
movsl
mov
dec
ljmp
lcall
test
or
aas
fidivl
int
sarb
sahf
cltd
mov
sbb
call
jae
jnp
pusha
cmp
jl
push
sahf
inc
xchg
pushf
pop
inc
mov
xchg
jo
test
call
iret
mov
jp
mov
adc
push
mov
aam
incl
in
mov
sbb
orl
fcmovne
insb
cmp
adc
lock
mov
push
push
add
adc
push
shld
push
loop
jae
push
push
push
subl
popa
out
inc
in
mov
icebp
cmpsl
lret
jp,pt
dec
and
loopne
dec
jo
dec
mov
imul
fcoml
rorb
jmp
loopne
mov
in
jbe
mov
cmp
test
sub
cmp
cmp
and
jno
rdmsr
ss
push
mov
and
mov
mov
stos
repz
stc
pop
cmp
sub
push
jmp
fldl
xchg
cs
sbb
cld
push
cmp
and
jmp
cmp
fistl
lods
xchg
pop
fmull
mov
lds
push
loopne
out
mov
into
mov
and
stc
and
aaa
fstpt
mov
cmp
adc
inc
and
pop
push
inc
add
test
mov
cmpl
add
repz
push
out
adc
or
outsb
out
cld
and
btl
lcall
jp
stc
out
out
mov
jns
push
jmp
pop
mov
shl
hlt
fs
add
iret
mov
or
out
or
testl
adcl
les
push
sub
dec
orl
xor
stc
lcall
push
in
ret
add
cmp
add
fisttpl
cmp
movsl
push
outsb
cmp
add
pop
cmp
imul
in
push
mov
enter
subb
es
lock
shll
mov
mov
xor
fcomi
idivl
sbb
jbe
push
xor
push
in
lahf
jl
mov
mov
xchg
fsubrs
leave
mov
xchg
mov
sub
mov
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
out
addr16
xor
sbb
push
pop
mov
xchg
insl
cmpsb
mov
push
or
iret
dec
nop
mov
call
das
inc
pop
cli
push
xchg
mov
sbb
out
into
inc
aas
sub
aad
or
mov
pop
sbb
incl
cmc
lea
stc
inc
ja
adc
dec
popa
insl
rcrl
stos
mov
bndstx
stc
cltd
sarb
jbe
mov
outsl
rolb
xor
pop
mov
popf
dec
or
xchg
xchg
add
jmp
jb
cmp
lds
fs
loopne
cs
add
jp
mov
xor
idivl
les
lcall
push
es
jb
cmpsb
or
out
and
push
jg
jle
fnstcw
jo
cmp
mov
notl
inc
cmp
jg
lret
icebp
xchg
xor
fs
pop
insl
mov
mov
push
inc
movsb
add
das
ljmp
movsb
je
addb
jmp
pop
mov
push
jns
push
xchg
inc
jae
ret
in
or
cmpsl
nop
lret
add
push
xor
ljmp
add
data16
enter
orl
xchg
mov
mov
adc
or
cmp
ja
addb
push
xchg
or
ja
cmpsb
xlat
into
scas
adc
dec
jne
scas
popa
insb
xchg
xor
mov
jge
xchg
es
repz
aad
test
sahf
mov
daa
cmp
loope
inc
cli
mov
stc
ret
xchg
cmp
clc
mov
mov
xor
call
cmp
xchg
jbe
mov
into
cmp
pop
and
adc
or
pop
das
jmp
stos
adc
aad
push
je
cmp
ret
lea
ja
xchg
lods
aam
sbb
mov
xlat
cmp
ret
mov
sbb
loope
inc
aas
out
dec
rcll
shufps
jmp
pushf
dec
cmpsl
inc
sar
mov
movsb
cmp
cmp
push
cmp
ret
sub
lea
stos
mov
daa
nop
jp
nop
jmp
in
sbb
xchg
ljmp
mov
ss
add
pop
cmp
lock
sub
xchg
push
cwtl
mov
daa
outsl
imul
inc
aas
lret
cmp
xchg
outsb
sub
or
xor
push
cmp
shrb
add
and
sub
mov
out
divb
gs
pusha
mov
aaa
and
mov
cmp
daa
subl
dec
dec
xor
push
mov
repnz
mov
test
dec
je,pn
mov
mov
js
fadd
mov
mov
lahf
mov
jge
movsb
adc
icebp
inc
add
out
mov
cmp
and
push
loop
clc
adc
xchg
lcall
mov
lret
adc
fbld
aad
push
mov
jae
rcrl
sbb
pop
mov
sbb
cmp
or
rcr
push
decl
and
mov
aam
pop
mov
jmp
stc
popf
jecxz
push
push
es
ret
inc
movsb
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
or
mov
cmc
setbe
rcr
cmp
rol
mov
cltd
loopne
fisttpll
imul
enter
adc
xor
imul
hlt
insb
xor
push
in
xchg
repz
inc
aad
add
mov
sbb
xorl
mov
das
notb
jp
cmp
xchg
test
mov
push
sti
shlb
mov
fs
xchg
xchg
add
std
in
or
xchg
cmp
add
inc
xchg
notb
jnp
mov
and
xor
lret
pop
shl
mov
loop
out
push
into
dec
mov
aas
jnp
loop
xchg
and
fmull
lret
push
or
sub
sub
inc
cmc
hlt
xchg
pop
out
and
dec
loop
shlb
andb
sbb
mov
inc
push
mov
leave
sbb
mov
push
jmp
fmul
nop
sbb
sbb
fwait
test
lods
push
rolb
push
xor
sarb
mov
movsl
in
pop
fcmovnbe
and
sub
lea
xchg
stc
xchg
adc
cmpsl
jnp
lods
je
mov
mov
int
dec
pop
aas
fnsave
mov
or
rcrb
and
inc
ljmp
add
push
inc
inc
insl
pusha
pushf
mov
jo
mov
inc
pop
lahf
or
out
cs
adc
sahf
sub
imul
in
or
rolb
adcl
xchg
movsb
mov
mov
lods
xchg
aad
push
inc
test
shrl
push
jbe
out
pop
lcall
dec
cmp
decb
mov
jae
push
jmp
xor
cs
ret
dec
int3
xor
cli
mov
push
xor
js
imul
ret
lods
dec
std
sub
mov
mov
ret
out
in
and
add
dec
fucomi
mov
aaa
and
cli
xor
shll
sbb
dec
adc
nop
fwait
dec
jb
mov
sbb
or
test
cli
mov
ficompl
jnp
clc
lea
mov
fcmovnb
mov
fcomi
std
movsl
mov
gs
push
scas
xorb
movsb
xchg
mov
jbe
or
loop
mov
in
sbb
push
sti
xchg
cmpsl
test
push
test
data16
jae
nop
mov
dec
fsubrs
and
daa
xor
push
pop
cwtl
ss
jl
pop
shlb
sbb
daa
outsl
pop
fdiv
outsb
ret
push
cmp
mov
lds
push
or
decb
arpl
jnp
and
bound
testb
aaa
mov
mov
lahf
cmp
pop
jb
xlat
div
xor
hlt
in
adc
test
lret
pop
bound
fisttpl
ficomps
or
inc
adcl
lret
mov
and
cld
or
push
mov
and
and
outsb
adc
pop
mov
dec
mov
ljmp
cmc
rcl
pop
xchg
je
inc
daa
sbb
js
jbe
add
mov
mov
mov
adc
push
cmpsl
loope
movsl
push
hlt
pop
or
fstps
push
mov
jge
sub
jp
mov
inc
add
sbb
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
and
sbb
xor
sbb
xchg
mov
roll
jmp
pop
pop
mov
or
push
adc
movsl
ds
jns
loop
bnd
mov
jb
fidivl
stos
pop
out
xchg
ret
xchg
jnp
mov
push
adc
mov
add
jmp
imul
xchg
lods
jbe
call
stos
inc
mov
mov
imul
test
jo
aas
fcoms
cs
leave
lret
pop
pop
mov
xlat
lods
movsl
shlb
xor
xor
inc
clc
shll
fmulp
adc
add
cs
lcall
stos
jge
in
mov
add
xchg
and
mov
or
mov
add
cld
or
xchg
jae
and
dec
cli
mov
add
lea
mov
fnstcw
mov
push
xor
or
lods
and
adc
cmp
mov
adc
lea
pop
push
stc
in
enter
jmp
test
test
int3
mov
lret
scas
pushf
dec
mov
ss
xchg
mov
nop
iret
pop
sbb
mov
and
add
out
jae
sbb
fbstp
pop
pop
imul
xchg
pop
cmp
stos
and
testl
stos
lock
and
mov
sbbl
sbb
jne
cmp
std
push
out
call
rcrl
arpl
push
call
es
call
iret
inc
ja
out
adc
ret
inc
daa
cmp
xchg
add
and
mov
stos
stos
dec
cmpb
iret
outsl
fwait
testb
jp
data16
xchg
sbb
sarb
dec
je
je
push
push
cmp
jecxz
stos
bnd
pop
outsb
cltd
testl
sbb
pusha
out
stc
cwtl
mov
xor
fstpt
cli
push
push
dec
ljmp
shrl
int3
in
inc
adc
in
stos
cmp
pop
dec
adc
and
loope
push
nop
or
push
nop
mov
push
sbb
imul
imul
pop
mov
int3
and
clc
and
dec
push
aas
das
repz
insb
pushf
sbb
leave
cld
mov
imul
mov
mov
dec
sbb
lea
pushf
mov
aaa
je
jmp
ficoms
xchg
movsl
inc
shl
lods
pop
jle
in
popf
jecxz
mov
cltd
pop
jp
std
adc
jns
xchg
dec
fbstp
xchg
mov
lcall
cs
loop
lcall
pop
and
mov
add
cld
pop
lret
fwait
cmpsb
cli
cmp
mov
data16
mov
fs
mov
out
add
test
in
imul
lods
push
fs
or
xchg
adc
inc
push
jbe
outsl
mov
into
mov
arpl
mov
lretw
dec
add
cli
in
pusha
cmp
adc
cs
jnp
sbb
in
mov
dec
insl
sbb
out
inc
gs
mov
mov
dec
jae
cwtl
pusha
and
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
cli
aaa
push
mov
sbb
xchg
rclb
je
mov
mov
sbb
popa
out
cmp
dec
mov
imull
pop
inc
and
adc
dec
mov
lock
mov
sahf
clc
sub
push
adcl
jmp
pusha
int3
or
jnp
mov
repnz
insl
shrb
lods
adc
mov
pop
aaa
enter
mov
pop
loop
pop
push
cmp
es
add
scas
or
fdivl
sahf
add
sub
xchg
jne
mov
out
scas
sbb
jne
push
sub
pop
sbb
inc
mov
loop
mov
mov
scas
mov
cmp
mov
popl
inc
rclb
outsl
mov
std
mov
dec
xchg
xchg
mov
inc
shl
mov
fdivs
test
iret
xlat
sbb
adc
sbbb
xor
test
adc
or
ret
sub
nop
pusha
in
xchg
pop
loopne
fwait
xchg
lock
adc
sub
xchg
lds
add
jl
add
and
and
push
hlt
pop
adc
rcrb
fisubrs
aas
int
cmp
enter
arpl
repnz
and
xor
and
push
fcmovne
insl
jb
cmp
shrb
aam
lods
scas
aad
xchg
adc
test
sbb
insl
sbb
add
fstp
xchg
adc
int
popa
push
xchg
inc
mov
aam
pop
mov
test
mov
in
out
push
loop
addb
lock
ja
fiadds
das
fstl
insb
loop
popl
adc
dec
dec
int3
cmpsl
xchg
sahf
pop
xor
jo
out
sbb
push
popf
aad
or
inc
rorb
pop
ja
imulb
xchg
add
xor
sbbl
xor
mov
xlat
sahf
repz
inc
dec
pop
test
cmc
int3
push
fcoml
sub
jp
pop
xchg
mov
sub
mov
jge
mov
mov
jle
out
shrl
ja
pop
fstps
mov
sub
fiadds
push
or
cmpsb
loop
jnp
push
xor
imul
call
stos
popf
mov
rclb
leave
out
dec
pushf
dec
inc
int3
test
push
xor
dec
arpl
mov
lcall
push
or
roll
xlat
mov
in
sbb
pop
scas
push
adc
xor
and
inc
push
leave
mov
cmc
pusha
arpl
repz
insb
or
and
jne
ret
and
das
jb
stos
mov
subl
dec
out
jns
les
stos
int
add
stos
daa
stos
jle
rcl
popf
and
sub
xorb
mov
ret
int3
add
lea
mov
pushf
inc
test
sarb
jg
popa
call
das
push
sub
xchg
pusha
dec
sbb
aam
fwait
or
xor
sbb
dec
int3
clc
mov
mov
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
mov
stos
enter
xor
sbb
leave
adc
nop
cwtl
and
jge
ss
sub
imul
push
add
imul
mov
xor
sbb
imul
out
push
cltd
mov
fucomp
add
std
jae
dec
sub
lret
xor
cs
js
pop
outsl
emms
sbb
or
int3
and
enter
mov
mov
in
sub
insl
sahf
lret
jecxz
mov
push
mov
test
or
inc
scas
sub
sahf
jg
xchg
sbb
movsl
xchg
and
sbb
sub
lcall
addr16
test
aad
dec
icebp
adc
dec
leave
mov
pop
test
jne
push
cmp
mov
pop
mov
fisubrs
movsl
imul
pop
inc
dec
cwtl
adc
mov
sub
push
mov
add
or
out
decb
pminub
cld
jnp
negb
adc
pop
mov
sbb
cmpsb
or
mov
jp
sarl
addl
push
lods
pop
adc
push
test
pop
push
lcall
loopne
pop
leave
int
imul
stos
notl
or
daa
mov
mov
inc
nop
push
inc
test
sbb
dec
into
gs
out
rclb
stc
psraw
leave
insl
push
adc
cmp
sbb
mov
test
or
inc
and
dec
iret
jle
add
xchg
es
ds
push
push
pop
lcall
jae
repz
push
andb
loope
loope
pop
mov
push
push
mov
mov
movb
xor
repz
and
pop
xchg
cmpl
popf
mov
cmp
mov
sbb
sti
xor
and
lcall
inc
and
dec
aas
xchg
mov
test
int
inc
ss
leave
neg
add
jecxz
dec
jns
mov
jns
iret
int3
das
and
lahf
sti
fidivs
mov
cwtl
pop
mov
ja
scas
jge
sbb
inc
xchg
das
pop
in
pop
jmp
push
iret
loope
outsl
sbb
cmp
jo
mov
pop
pop
push
icebp
arpl
mov
inc
test
push
inc
fwait
jmp
jmp
inc
enter
cmp
js
test
xor
adc
push
ror
jmp
fld1
jb
adc
stc
or
enter
test
xor
cmpsb
cmp
jecxz
nop
jae
insl
gs
jmp
or
inc
setae
xchg
sarl
mov
sub
movsb
cmp
mov
ret
jge
add
arpl
sub
mov
dec
ljmp
mov
scas
imul
mov
xchg
aam
cld
or
orb
mov
fistpl
addr16
fmul
rolb
iret
or
stos
xchg
lret
sbb
dec
rorl
mov
lahf
loopne
and
bound
data16
rcl
push
popa
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
mull
sbb
adc
sbb
inc
loope
in
mov
xor
out
int
dec
xlat
out
mov
fprem
cmpl
mov
rorb
mov
dec
shll
mov
pop
data16
insl
in
subl
pop
mov
xor
movsl
pop
inc
mov
and
mov
sub
fwait
xchg
cmp
mov
push
aaa
push
xchg
lret
inc
test
push
call
ljmp
or
jo
jg
jnp
loopne
nop
mov
cmpsl
call
ja
sarb
fsts
sti
imull
xor
loop
aas
out
in
mov
jne
dec
subb
repz
jecxz
jl
or
adc
cmp
pop
sahf
and
and
dec
xchg
lahf
fs
xor
mov
mov
inc
inc
popa
mov
call
adc
jmp
fs
mov
cmp
aam
xchg
adc
in
ja
bnd
jno
inc
push
int3
call
push
popa
icebp
xchg
xor
lods
inc
add
adc
fwait
mov
jb
pusha
mov
or
adc
jns
push
lret
jmp
pop
and
decb
mov
stos
std
fildl
ljmpw
das
cmp
js
test
out
xchg
fdivl
sub
inc
pop
cwtl
stos
ja
and
or
mov
fnstsw
jbe
fisttps
mov
mov
sti
push
ljmp
aad
mov
aas
add
jae
or
fsts
cmp
xor
jns
jne
cmp
xor
lods
pop
scas
sbb
aas
movsb
nop
or
mov
mov
cli
or
xchg
std
fisubrl
jb
lret
stos
imul
mov
leave
vpmulhw
das
and
push
scas
xchg
insb
loope
shlb
out
mov
fucom
push
xchg
mov
xorl
mov
and
insl
inc
loop
and
loopne
mov
lods
dec
cmpsl
cmp
ret
adc
sub
xchg
push
fisttpll
jno
js
pop
xlat
inc
mov
xor
js
mov
mov
in
jp
movsb
jle
adc
outsb
xchg
cmpsl
test
cmp
lock
mov
test
pop
inc
fs
add
lds
arpl
or
push
stos
jnp
xchg
sar
inc
hlt
xchg
mov
adc
fwait
sti
cld
sbb
adc
sbb
in
mov
dec
inc
pop
les
jge
sbb
mov
popf
cmp
shll
mov
jne
outsb
pop
jo
adc
mov
mov
int
xchg
push
jno
scas
scas
fbstp
lods
cmp
add
inc
repnz
je
sub
push
lds
pushf
mov
sti
aaa
aaa
out
arpl
leave
ljmp
fsub
mov
aad
push
dec
fisubl
jg
hlt
mov
adc
sub
repz
pusha
lea
flds
aaa
in
pop
clc
aas
xor
sub
inc
popa
mov
pop
loope
sbb
loop
loope
inc
or
aaa
repz
jae
push
andl
sbb
outsl
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
out
lea
stc
stos
sbb
test
adc
testl
hlt
cld
pop
cmpsl
call
inc
sbb
inc
cmp
loope
push
aas
sbb
mov
mov
out
xchg
push
mov
cmp
mov
mov
or
sbb
ret
inc
pop
inc
mov
imul
cld
in
std
mov
loope
and
out
push
xor
data16
lcall
das
pop
xchg
gs
cmp
out
xchg
pushf
jge
mov
fstpt
cs
jmp
psllq
adc
adc
xlat
adc
push
rorb
mov
outsb
and
leave
dec
pop
dec
xchg
or
fmull
outsb
sbb
in
push
shl
mov
lea
outsb
pop
aas
ret
adc
outsb
cmp
fidivrs
push
jno
aad
repnz
stc
push
arpl
rcr
ret
les
or
dec
fwait
mov
adc
test
call
mov
mov
lret
pop
sub
adc
outsb
or
xchg
jb
xor
mov
xor
hlt
pushf
xchg
cmp
mov
mov
cld
mov
mov
pop
stos
xlat
dec
jne
lds
sub
cwtl
and
hlt
roll
lea
mov
ljmp
jb
push
dec
in
rclb
add
push
testl
cwtl
data16
dec
popa
pop
orl
addr16
sub
pop
jne
push
shll
pop
shlb
and
push
adcl
jo
dec
rcrb
dec
das
and
aaa
and
fisttpll
push
iret
mov
mov
mov
mov
xchg
iret
movsb
jns
imul
jg
addb
or
inc
popa
pop
popa
push
adc
je
inc
test
testl
sti
or
sub
xchg
aas
cmpsl
stos
jbe
jne
sub
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
addr16
stc
negb
loop
inc
adcb
cmp
push
call
inc
xor
mov
push
les
xchg
xchg
shlb
cmc
mov
pop
mov
dec
jbe
pop
pop
mov
lahf
mov
arpl
add
inc
sahf
cmp
popf
ljmp
cwtl
loope
ret
shll
int3
loope
mov
sbb
fwait
mov
pop
iret
mov
xchg
mov
outsl
jmp
subl
clc
mov
bound
out
cmp
aaa
icebp
jmp
dec
mov
jp
xchg
adc
sar
pop
scas
adc
out
test
cmp
cmp
jo
into
clc
sub
sbb
js
movsb
sub
dec
lea
pop
test
cmp
adc
loop
hlt
clc
and
push
xchg
cli
dec
nop
xlat
cld
mov
arpl
mov
xor
fbstp
jl
mov
cs
xchg
in
xchg
add
inc
in
popa
cs
xchg
dec
mov
cmpsb
xchg
push
cmp
dec
gs
xor
pop
add
ljmp
mov
push
sbb
aas
in
mov
sub
mov
not
fucomip
sti
xor
ret
adcl
inc
mov
sub
loop
lahf
push
jae
pop
shrl
dec
ss
push
stos
pop
xchg
adcb
out
xchg
sar
adc
pushf
inc
xor
int3
and
and
mov
or
sub
mov
mov
sbb
dec
jmp
imull
nop
dec
pusha
decb
outsb
loope
jb
sbb
pusha
xchg
test
mov
aad
sbb
or
cmp
pop
push
test
lods
idivb
enter
imul
notb
adc
mov
fwait
sbb
clc
lret
lret
fwait
outsb
mov
loope
sub
sti
repz
insl
xor
jbe
into
stos
mov
call
cmp
sub
test
xor
xchg
mov
pop
sahf
lods
mov
or
inc
call
push
lock
push
jmp
sub
and
jb
push
stos
push
stos
sbb
sbb
push
subb
pop
fwait
scas
mov
out
dec
or
flds
xor
in
mov
shll
fwait
icebp
mov
negl
mov
movb
jae
test
xor
cmp
lcall
inc
lret
xchg
push
pushf
out
jmp
out
jmp
stos
pop
sbb
inc
int
nop
mov
pop
in
cmp
sub
xor
or
rcl
cmp
cmp
cmp
sti
push
push
sub
in
adc
adc
push
dec
push
lods
test
pusha
sub
out
mov
imul
nop
in
pop
xchg
xchg
pop
xor
or
mov
sub
lea
andb
cwtl
and
xchg
outsb
xchg
mov
jnp
sbb
rcll
std
iret
popf
jl
in
and
inc
icebp
sbb
jb
pop
push
inc
ror
xor
xchg
loope
and
lea
jns
push
das
jl
imul
mov
or
xor
and
xchg
lea
iret
popf
cmc
repnz
out
pushf
and
adc
ret
fnstenv
or
loopne
jb
xchg
sbb
cltd
aas
ljmp
aas
orb
imul
ficomps
lret
out
pop
jbe
push
lea
dec
xchg
lods
js
fnstcw
sbb
enter
mull
lea
icebp
mov
out
leave
cmpsb
mov
inc
filds
push
add
mov
push
enter
pop
scas
xor
stos
cmpl
test
add
push
add
lods
push
leave
sub
rcl
add
orl
cmpsl
adc
mov
mov
gs
ficoml
jnp
cs
in
adc
push
push
dec
iret
xchg
add
mov
mov
orl
or
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
xchg
jmp
test
adc
sbb
mull
out
cltd
mov
add
cwtl
push
cmp
jecxz
mov
insl
negb
movsl
test
loopne
in
push
dec
sub
xchg
ret
out
push
mov
push
out
adc
and
jp
inc
sub
push
push
mov
xchg
adc
sti
in
or
dec
mov
scas
jnp
test
stos
push
in
rorl
add
sub
pop
lds
dec
lods
push
ret
xchg
mov
divb
mov
cmpsl
push
mov
test
fcoms
dec
xchg
jne
mov
inc
fwait
das
test
xchg
xchg
lret
push
scas
outsb
out
mov
mov
mov
aam
push
psrad
xlat
mov
test
jmp
pop
inc
leave
adc
xchg
scas
and
cmp
sbb
xor
xorl
out
dec
jbe
mov
fmulp
dec
inc
and
jl
dec
mov
dec
jnp
lods
lret
out
push
xor
leave
loop
xchg
xchg
mov
xor
dec
fimull
out
sub
adc
pop
loopne
outsb
das
hlt
add
mov
lret
sbb
or
loopne
cmp
aam
jge
enter
aam
imul
mov
sub
test
rcll
movsb
fiaddl
ja
cmpl
cmp
push
mov
lea
cwtl
sub
shrb
jge
xchg
push
icebp
movsb
push
sti
cmp
vmovapd
xchg
int3
sahf
js
dec
mov
imul
pop
mov
shlb
inc
push
sbb
imul
ljmp
movsl
lahf
add
into
xchg
cli
mov
in
pop
test
sbb
xchg
lods
daa
pop
dec
push
dec
push
pop
xchg
fcoml
test
xchg
ffreep
mov
jp
mov
sub
pop
aaa
fwait
push
sti
icebp
jae
pop
in
sbb
cmovb
push
rcrb
shrb
add
cmp
loopne
ss
daa
mulb
aas
imul
add
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
add
sbb
test
scas
clc
stc
daa
sub
popa
mov
mov
mov
in
lods
dec
jbe
cmc
dec
inc
add
leave
out
mov
ret
bound
lret
in
jl
stc
lcall
out
pusha
in
lret
sbb
mov
xor
dec
sub
inc
push
popf
leave
push
cs
js
out
ljmp
and
leave
hlt
and
mov
fistpll
sub
mov
mov
push
orl
imul
push
inc
lcall
adc
arpl
add
jnp
jl
mov
stc
outsl
xchg
rcrb
adc
mov
cwtl
mov
test
push
std
and
repz
jle
aas
mov
out
sar
inc
mov
fists
mov
dec
and
jecxz
js
pop
loop
jae
adc
xchg
ds
jecxz
lods
push
fistps
mov
or
inc
jae
dec
sbb
push
xchg
inc
and
stos
lock
sbb
and
mov
aaa
cmpsl
sub
cmp
jno
dec
out
subb
add
push
ja
sahf
out
mov
xchg
sarl
jbe
aad
mov
rorl
ja
add
mov
lahf
scas
stos
lea
push
jle
shrb
popf
andb
outsl
jnp
dec
mov
imull
sbb
cmpsl
fs
cs
sbb
adc
jae
pop
nop
cmc
es
fsubrl
jecxz
jnp
shrl
sbb
mov
mov
pop
mov
pop
out
shll
mulb
cmp
pop
popa
inc
cmp
or
sbb
mov
sahf
or
add
cltd
enter
mov
arpl
into
loop
jne
loop
mov
and
inc
icebp
pop
push
jbe
or
add
push
movsb
sbb
das
cli
lods
push
mov
mov
cmp
jecxz
add
sub
shlb
push
pop
dec
xchg
push
data16
push
testb
mov
test
mov
hlt
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
pop
and
loope
pushf
pop
data16
aad
mov
lcall
and
std
sahf
adc
in
add
mov
mov
pop
cwtl
int3
pop
fwait
scas
dec
dec
mov
xchg
leave
sarl
pop
add
sarb
clc
loopne
and
jb
and
push
rclb
cli
clc
xchg
or
xor
inc
rorl
jb
int
push
push
mov
repnz
jecxz
orl
or
cmp
loopne
xchg
lock
cltd
or
sbbl
adc
push
mov
out
ror
sub
inc
or
jmp
mov
loop
adc
fs
pop
pop
sbb
pop
xchg
push
sub
fs
mov
mov
lahf
mov
ficoml
test
loop
add
cmpl
fwait
add
xchg
inc
cmp
mov
push
sub
mov
stos
push
shlb
push
xor
push
orb
mov
add
jnp
dec
cmp
mov
sub
dec
mov
aam
sbb
test
faddl
or
fwait
mov
fmuls
jmp
cmpsl
jns
dec
repz
push
xorb
sbb
inc
mov
pop
pop
sub
mov
mov
jp
int3
js
cmp
pop
push
pop
sbb
jg
stos
enter
push
mov
and
and
xor
outsb
test
out
aaa
cmc
jb
fchs
and
in
movsl
push
adcb
xchg
ja
jle
add
jecxz
dec
icebp
mov
adc
mov
or
adc
and
fwait
imul
cmpsl
jo
jns
inc
imul
add
add
cwtl
xchg
testb
int3
ror
mov
xchg
sarb
icebp
jbe
mov
in
xor
or
jmp
push
and
mov
jo
nop
sbb
test
movsl
out
xor
js
fcomi
ret
stos
inc
int3
es
mov
out
rorb
movsl
loopne
outsl
movsl
and
les
icebp
pop
out
call
mov
push
jg
fcomp
xchg
test
clc
ds
in
jle
jb
test
sub
fiaddl
stos
test
cmp
or
xchg
jecxz
push
sub
push
pop
aad
rorb
scas
icebp
add
push
pop
pushf
arpl
mov
dec
cmp
push
cmp
xor
mov
and
cmp
jg
sbb
mov
or
test
mov
jnp
mov
mov
bound
push
jg
mov
out
pusha
cmp
dec
test
sbb
fldt
fucomp
pop
inc
pop
mov
stos
test
jne
ja
dec
in
jp
mov
movsb
rorl
or
pop
pushl
std
push
add
mov
sahf
rcrl
ss
inc
xor
dec
adc
sub
or
mov
adc
or
push
iret
pusha
test
sub
cld
mov
mov
jae
scas
mov
sti
fcoms
call
jbe
xor
xchg
jle
push
cwtl
test
sub
mov
test
es
pop
jae
sahf
inc
hlt
lcall
pusha
inc
or
push
or
mov
mov
mov
imul
fcoms
jl
add
lods
push
sahf
fs
loop
int
fidivrs
test
dec
dec
andb
movsl
dec
orb
es
sti
in
cli
fisttpll
add
fldt
sub
roll
int
mov
dec
xor
test
or
or
or
add
das
scas
sti
add
div
jmp
insl
mov
or
ret
cmp
iret
data16
inc
cld
and
fadd
dec
or
and
sub
add
cli
inc
lahf
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
fnstcw
adc
sbb
leave
or
jnp
mov
mov
je
dec
flds
inc
ss
std
in
cmp
adcl
shl
jne
sub
sbb
in
int3
stc
mov
xor
je
outsb
jecxz
cwtl
inc
insl
js
cmp
xchg
bound
roll
inc
cwtl
fists
fwait
xchg
add
push
enter
or
xchg
pop
or
or
stos
lea
aad
mov
loope
add
das
sub
fs
cs
jo
das
cmc
insl
jp
xor
inc
movl
loopne
push
rcll
push
sub
pop
or
pop
mov
and
inc
push
stos
lock
jo
in
mov
adc
push
inc
movsl
int3
jns
rcl
movsl
cwtl
out
sub
aam
decl
out
rorl
shrb
mov
jecxz
cmp
leave
loopne
cli
icebp
ret
or
jle
pop
push
rcll
xlat
add
ficomps
cld
fimull
or
add
and
int
nop
xchg
jl
add
jnp
stos
cmpsb
fs
mov
push
sub
jg
dec
aas
int3
or
daa
out
sahf
fidivs
pop
ret
lods
insl
xchg
add
dec
or
sbb
mov
pop
out
jb
outsb
mov
lcall
fcom
pop
dec
dec
xchg
test
adc
and
pop
int3
jge
js
cs
cltd
jle
fcoms
xchg
pop
xor
cltd
cmp
inc
paddd
mov
out
lcall
sub
out
jl
and
and
mov
loopne
ja
mov
sub
jo
push
call
out
mov
sbb
adc
push
es
and
shr
cs
test
mov
lahf
sbb
adc
pop
xchg
adc
adcb
or
adc
xchg
mov
fwait
rorl
and
mov
inc
ja
xchg
xabort
enter
mull
gs
ror
test
lret
test
or
dec
or
shrl
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jl
xchg
sbb
sbb
dec
xlat
fmulp
pop
pop
pop
push
inc
ret
lds
dec
add
mov
xor
fstl
jnp
cmp
and
xlat
mov
lods
mov
mov
in
lea
repz
adc
mov
movsb
jne
lea
mov
jo
out
dec
mov
mov
inc
outsb
push
or
fs
xchg
iret
stos
add
flds
cld
cli
cwtl
das
or
jg
xlat
insl
mov
sbb
push
lcall
les
hlt
lods
repnz
push
data16
sti
shlb
outsb
pusha
in
leave
xor
jmp
or
mov
sbb
inc
xor
pop
or
imul
fsubr
sti
out
jbe
ja
ljmp
mov
daa
jl
ror
addb
orl
cwtl
xor
pop
fcoml
imul
stos
and
dec
add
xchg
sbb
lret
add
push
or
mulb
inc
sbb
jno
push
jae
mov
and
ss
enter
push
imul
mov
fistps
xor
xchg
idivb
testb
cmp
int3
pop
enter
push
loop
mov
jmp
xchg
mov
addr16
jmp
mov
sub
sarb
jns
cmp
pop
nop
pusha
add
ljmp
jmp
push
push
dec
mov
sar
aad
lods
call
xor
mov
idivb
stc
jne
mov
xchg
push
sahf
neg
and
cltd
fdiv
sbb
out
mov
sub
mov
push
aad
sti
aad
push
jle
and
sub
and
ret
int
cmp
popf
in
sub
jmp
loop
mov
roll
mov
insb
out
icebp
enter
outsb
aad
test
popa
mov
pop
dec
pop
or
call
inc
dec
cli
unpckhps
sbbl
mov
test
outsl
movsl
sahf
notl
cwtl
movsl
sub
inc
jmp
xchg
test
les
outsl
aas
cmp
push
pop
sbb
inc
mov
xchg
jno
xchg
or
mov
mov
jmp
subb
jl
insb
add
mov
sti
mov
xchg
mov
popa
and
add
inc
clc
cs
jge
mov
cmp
pop
int
in
push
xor
testl
aas
out
sub
shll
stc
pop
lret
mov
pop
add
ds
into
xchg
repz
adc
mov
jecxz
jecxz
call
mov
cld
sub
and
xor
inc
mov
repz
lahf
cmp
xchg
cmc
les
adc
inc
sahf
test
and
lret
mov
jg
repz
lock
aam
mov
add
outsl
fs
pusha
mov
push
fiadds
inc
iret
xor
test
mov
insb
add
add
jne
inc
sbb
pop
clc
push
mov
sbbb
jns
sbb
out
jecxz
and
dec
push
ljmp
jmp
test
in
nop
in
push
dec
mov
xor
bound
clc
aaa
sbb
fsubrs
jns
std
fld1
dec
sti
es
mov
cmp
clc
stc
xor
or
mov
stos
dec
push
icebp
pop
jge
dec
mov
faddp
ffree
dec
xor
addr16
push
lock
aam
mov
jmp
sti
cli
js
test
lea
inc
stos
gs
jns
jmp
scas
jns
cmc
rorl
or
mov
jmp
out
ret
scas
push
inc
in
gs
cltd
int3
nop
push
adc
fisubs
lea
pop
pop
movsl
cmp
and
sbbl
ret
inc
outsl
or
mov
daa
and
mov
xchg
movsb
bswap
cmp
cmpsl
notl
outsb
cmp
dec
icebp
pushf
int
mov
inc
pushf
sub
adcb
call
add
mov
sub
insl
stc
xchg
mov
pusha
jb
pop
cltd
lods
mov
pop
rcrb
and
xor
mov
push
push
xor
lods
ljmp
inc
lods
jo
into
mov
xchg
popf
adc
mov
or
das
out
or
clc
stc
fadd
sti
cld
jno
mov
inc
lret
clc
xor
xchg
xor
and
mov
ret
test
xor
mov
push
pop
jno
stos
fildl
add
popf
pop
in
mov
pop
adc
cmpsl
and
test
adc
in
mov
test
dec
add
lea
cltd
sub
mov
fmul
loopne
add
dec
cmp
fldenv
xor
inc
sub
dec
or
fs
dec
xor
popa
pop
stos
sbb
lret
dec
sub
aas
adc
mov
cmp
clc
outsb
fstps
lret
mov
adc
orl
pusha
mov
test
repnz
mov
lea
bound
cmpsl
mov
cmp
or
daa
mov
mov
mov
test
test
or
sub
jne
shll
mov
stc
call
jle
and
mov
xchg
orl
ret
mov
push
mov
dec
mov
cmp
orl
jae
mov
repz
jg
testl
xor
mov
in
in
mov
jae
fstpl
bound
dec
cmp
stos
aam
sbb
fsubp
movsl
cld
mov
or
sub
xchg
cmpsb
jecxz
adc
jmp
addr16
lcall
js
data16
cmp
mov
stos
mov
lahf
sub
and
push
mov
js
fdivl
mov
xchg
xorps
mov
fdivs
popa
mov
sbb
rcll
push
push
pop
dec
lds
push
cmpsb
and
cmpsl
test
fsubrs
sbb
sub
adc
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
jno
movsl
das
mov
or
repnz
fistl
sub
fisubrs
mov
mov
daa
stos
pop
fsubrs
add
cltd
mov
ljmp
scas
neg
lds
sbb
jge
addb
sbb
xchg
pop
xchg
lods
mov
sbb
aas
pop
mov
inc
add
enter
xor
scas
or
aaa
jo
aad
sar
lcall
fdivr
icebp
or
jns
xor
imul
mov
imul
push
mov
in
imul
mov
adc
jge
cmp
test
popf
jno
imul
cmp
mov
or
inc
and
std
inc
cmp
out
jg
xchg
jg
clc
add
push
iret
notl
or
fidivs
dec
outsl
xchg
fists
dec
jg
xchg
pop
sbb
lret
xor
inc
jmp
mov
push
inc
cmp
cmp
or
push
arpl
test
fwait
push
ret
pusha
xchg
arpl
fisttps
fstl
mov
repnz
lods
les
mov
add
adc
rcrb
mov
hlt
mull
cli
push
mov
repnz
cmp
out
push
push
xchg
fcomi
cli
add
push
inc
sbb
xchg
movlps
negb
int3
jecxz
lret
shlb
icebp
add
lods
xchg
pushf
add
inc
jl
clc
ja
jge
xor
cmp
movsl
mov
sub
pop
cld
mov
adc
pop
jns
adc
xlat
inc
xchg
sub
cwtl
sbb
es
fiaddl
push
test
dec
cmp
jmp
push
cmp
les
rcrl
jbe
cmpsb
push
sbb
xchg
int
pop
test
xor
xchg
scas
repnz
sbbb
sarl
xlat
adcl
aaa
and
repz
inc
nop
ret
mov
adc
into
stos
mov
sbb
ljmp
mov
stos
cltd
repz
add
jo
shrl
sbb
repz
in
test
xchg
xchg
iret
push
ljmp
pop
add
sub
in
cmpsl
in
cwtl
push
scas
dec
adc
push
push
fs
gs
bnd
xor
adc
movsl
mov
sub
in
outsb
out
int
adc
dec
mov
mov
xchg
loop
jbe
dec
jmp
inc
inc
jmp
mov
inc
testl
daa
call
jb
lea
dec
sub
iret
xchg
cltd
jg
outsb
lahf
xchg
jns
adc
xchg
scas
mov
add
mov
imul
push
sbb
add
mov
pmuludq
add
and
xor
sbb
repnz
jl
fnsave
mov
jle,pn
dec
inc
mov
out
and
orl
lods
imul
cmp
pushf
pop
lods
stc
ljmp
repnz
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
xchg
daa
hlt
stc
pop
inc
std
mov
test
add
mov
fwait
adc
and
fsts
out
sub
fwait
push
jg
popf
dec
adc
insb
sub
into
nop
repz
cmp
push
int
xchg
xchg
jne
xchg
outsl
adc
xchg
push
push
imul
pushf
sbb
adc
mov
vpcmpgtb
in
sub
in
and
lods
rcrl
jp
mov
jno
mov
xor
stos
xor
push
mov
inc
jbe
dec
out
cltd
mov
xor
outsb
jle
test
jno
or
mov
or
cmpsl
icebp
cmp
cmp
jl
mov
jle
out
jle
mov
mov
mov
iret
xchg
nop
dec
hlt
mov
add
stc
rcrb
push
popf
dec
and
in
add
sub
xchg
cmpsb
loope
in
cli
cmp
lea
push
bound
inc
test
xor
js
hlt
bound
cmpsl
and
and
sub
sub
push
test
dec
enter
in
into
iret
popf
adc
fcmovnb
loop
jbe
into
call
mov
xchg
subb
popa
jg
inc
arpl
and
scas
adc
fdivs
add
cmp
jns
sbb
pop
daa
adc
test
loopne
pop
fldenv
sahf
pushf
push
popf
popf
aas
and
xchg
mov
xchg
dec
push
cmp
arpl
jecxz
lahf
jo
shr
mov
sub
sahf
lahf
cmp
jecxz
daa
les
push
fimull
mov
push
xchg
cmp
imul
and
mov
mov
repz
aaa
rcll
jae
cwtl
push
inc
cli
cmp
jge
test
push
fsub
loop
out
pop
cli
mov
fadd
out
clc
push
xchg
pop
add
add
push
sbb
fcomip
and
jae
mov
cs
lea
jnp
out
dec
bound
ljmp
lods
cltd
sub
sbb
adc
xchg
push
mov
or
lds
jno
mov
xor
fbld
fcoms
out
and
adc
mov
scas
js
ss
push
repz
ror
xor
or
int3
push
sub
test
je
and
or
movsb
mov
stos
mov
rcl
add
mov
inc
minps
adc
mov
inc
jmp
cmp
adc
sbb
cli
repz
jo
es
es
ljmp
gs
mov
das
cmc
mov
imul
pop
fmulp
nop
xchg
or
test
das
sub
loopne
sub
jle
pop
mov
xchg
stos
inc
out
ds
inc
inc
stos
dec
inc
add
xchg
stos
lret
sahf
pop
sbb
xchg
jl
loop
in
orb
mov
hlt
adc
stos
and
fcmovb
ljmp
jae
scas
iret
adc
fdivrp
push
and
hlt
test
movsb
jge
push
insb
fistpll
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
test
push
insb
sbb
jns
sbb
dec
and
rcll
mov
rorb
and
mov
lret
movsb
cmc
cmpsl
movsl
pop
mov
dec
sti
data16
dec
loope
dec
jo
adc
xchg
mov
mov
arpl
arpl
add
stos
sbb
adc
shll
cmp
fstpt
mov
dec
cld
imul
xchg
sub
test
lahf
popa
es
in
push
cwtl
mov
iret
fdivrs
inc
daa
add
xchg
and
sub
mov
aas
cs
jbe
fmuls
cmpl
scas
int3
in
push
loope
sub
fdivrl
dec
int
sbb
popa
int3
cwtl
push
fildl
fwait
dec
lea
xchg
add
dec
jo
lahf
ficoms
rcr
inc
aam
push
pop
fcompl
xchg
movswl
pop
in
sub
in
std
mov
cmc
mov
fwait
stos
push
add
shlb
rol
fisubl
scas
ror
cmpl
cmp
xorl
insb
xchg
and
mov
mov
jb
add
jbe
aas
jge
sub
and
scas
mov
lahf
and
nop
or
in
mov
scas
push
sub
nop
add
mov
push
and
orl
out
or
popf
or
bound
xor
or
loop
adc
movsl
pushf
fisttpll
adc
lds
aas
scas
lock
xchg
fmul
in
out
dec
inc
xchg
add
loopne
push
and
pop
or
xchg
mov
or
sbb
dec
sbb
xchg
pop
addr16
faddl
rorl
and
stc
mov
popa
mov
daa
std
push
mov
outsb
mov
add
and
add
cli
je,pt
and
pusha
and
outsb
lods
daa
movsb
cmp
adc
cli
cmp
dec
test
sbb
shrl
lcall
cltd
outsb
pusha
or
dec
imul
jge
mov
repz
addr16
sub
ret
add
aaa
and
lds
jp
leave
pop
add
test
sbbb
stos
dec
call
cmp
dec
xchg
push
cld
mov
jmp
shll
and
aam
xor
pop
sbb
sbb
mov
addl
ja
and
test
icebp
and
stc
sahf
mov
dec
andl
sbb
xchg
cmp
inc
fnstenv
pop
gs
lock
idivb
ret
inc
mov
jbe
dec
fildl
filds
cmp
fs
mov
and
xchg
cli
add
push
data16
ds
icebp
lea
mov
inc
mov
into
rcrl
pop
outsl
sub
push
sub
cmp
add
mov
mov
adc
imul
mov
mov
aaa
sub
add
lret
mov
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
jbe
imul
adc
sbb
gs
mov
pop
cli
sahf
push
jbe
add
xchg
mov
popa
sbb
jns
mov
sbb
popa
pop
cmpsl
iret
and
cmp
cwtl
call
sbb
or
fdivr
and
mov
xchg
sub
std
stc
xorb
xchg
lds
or
pop
mov
jne
jo
lods
loop
cmp
push
pop
add
and
dec
pop
inc
inc
test
pushf
jbe
icebp
cwtl
in
cwtl
mov
ss
out
mov
int
and
fcoml
mov
testl
jle
push
hlt
cmpl
pop
out
addr16
jecxz
inc
fisttpll
call
push
std
sbb
inc
push
sub
lahf
xor
push
mov
sub
sarb
pusha
jo
int3
movsl
fwait
or
movsb
out
rcl
mov
cmp
les
pop
cwtl
mov
inc
aas
mov
clc
in
stos
pop
push
xor
out
or
mov
jg
lods
pop
mov
fldl
sbb
and
popf
mov
add
sub
sub
dec
and
ss
out
mov
cli
jo
jbe
or
and
push
jns
adc
sub
popa
inc
ss
sbb
xor
jmp
aad
xchg
mov
mov
lahf
cmp
add
fnstenv
fidivl
inc
jmp
aas
mov
xchg
mov
imul
leave
lret
aaa
out
stc
jno
fistpl
fidivrs
lds
pop
fstps
sbb
jne
into
mov
mov
mov
xor
aam
sub
jae
add
sbb
cmpsl
push
das
jle
inc
xlat
icebp
incl
sub
dec
addr16
mov
loope
push
pop
cltd
bound
jge
add
and
inc
xor
ds
icebp
cli
cmp
sub
xchg
lcall
and
popf
mov
xor
push
xchg
movsb
out
stc
mov
mov
jbe
cmp
call
stos
xor
outsl
ret
pop
enter
ja
inc
lods
xor
test
sti
in
mov
add
mov
add
adc
loop
movsl
outsl
mov
lds
inc
cmp
cmp
shl
frstor
sub
fbld
mov
adc
aaa
aaa
dec
add
dec
rol
cmp
loop
mov
and
ret
cmp
lds
jg
and
mov
xchg
out
mov
pop
mov
out
sub
mov
cmp
daa
mov
mov
jo
pushf
clc
xor
addr16
hlt
dec
lcall
js
push
inc
jno
imul
pop
pop
jns
add
push
sbb
jno
pop
sub
insb
ss
arpl
das
cmp
roll
sbbb
repz
sub
rsqrtps
scas
cmp
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
imul
sbb
jns
sbb
jle
xlat
fidivrs
mov
inc
push
adc
mov
test
fwait
sarl
xlat
add
sbb
ss
lods
xchg
mov
imulb
dec
clc
mov
ret
dec
stc
pop
cmp
and
or
adc
mov
imul
add
cmp
mov
je
cld
sbbl
in
sub
imul
sbb
adc
xchg
adc
nop
mov
imul
jg
mov
test
loop
sbb
imulb
xlat
cmp
lea
mov
mov
inc
cmpb
sub
inc
sbb
stos
call
hlt
adc
jmp
mov
cmpsb
out
pop
stc
test
mov
mov
mov
mov
inc
cmp
fcmovnbe
pop
pop
mov
lea
adc
les
xlat
aad
mov
daa
mov
imul
sbb
inc
cwtl
cmp
mov
jle
pop
cmc
adc
imul
cltd
outsl
mov
loop
mov
js
pop
js
daa
mov
fs
xor
stc
aad
fcoms
in
test
or
mov
pop
sti
ss
fimuls
xchg
mov
push
xchg
rcl
sub
loop
dec
mov
sbb
jns
mov
icebp
pop
sub
in
push
test
pop
xor
das
call
xlat
or
loopne
or
daa
cmp
jle
les
xchg
repnz
jb
adc
outsl
fbld
popf
mov
ljmp
jl
push
in
or
and
xor
pop
mov
lcall
push
movb
xor
in
hlt
rclb
inc
stc
pusha
mov
mov
cld
pop
ss
jno
ss
dec
jae
ja
imul
push
mov
rcr
mov
mov
repnz
xor
jbe
fnstenv
pop
shl
popa
xlat
pop
sahf
or
fsubrs
clc
out
fs
shrb
popf
jns
lods
cmp
mov
faddp
cmc
and
call
inc
mov
mov
and
push
mov
std
nop
ret
jmp
sub
outsl
ss
mov
nop
mov
ret
lahf
jp
cmc
dec
loop
jp
mov
popf
jl
or
inc
inc
jo
testl
std
rolb
pop
mov
andl
call
ds
test
cwtl
jns
aaa
mov
addr16
and
xchg
dec
in
xchg
jae
sbbb
cli
movsb
sub
pop
adc
bnd
sbb
xchg
fildll
xor
pop
out
xor
repnz
sbb
inc
ret
xlat
test
movsb
dec
adc
mov
cltd
and
sbb
sub
sbb
xchg
jb
in
into
xor
stos
adc
xor
subb
pop
xor
inc
mov
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
loop
mov
pop
sbb
je
sbb
and
jno
jb
add
fs
js
leave
fsub
mov
dec
pop
ljmp
dec
pushf
bound
push
push
cmp
jl
fmul
cmp
jo
flds
push
push
ja
out
aaa
shrl
shll
aaa
pop
sub
inc
dec
add
das
pop
or
test
jbe
dec
adc
clc
popf
outsb
iret
mov
inc
mov
adc
cmc
and
or
and
dec
lods
inc
stc
or
aaa
cwtl
mov
mov
into
adc
das
xor
jg
imul
adc
xchg
aas
nop
jle
rorl
push
sbb
mov
cmp
adc
cmpsb
shrl
adc
fstps
mov
das
mov
mov
or
jb
jnp
pop
ret
xchg
xor
in
or
and
in
or
pop
jno
movsl
int3
jae
outsb
jne
into
sbb
sub
std
pop
sub
es
sbb
push
adc
mov
dec
push
loope
cmp
addr16
test
shlb
inc
rorl
es
jnp
adc
jno
cmp
rcrl
cmpsl
inc
jmp
mov
in
pushf
fstps
repz
mov
mov
push
fidivrl
mov
xor
xchg
mov
push
ror
insl
mov
jmp
lea
cwtl
lods
mov
push
add
js
fwait
mov
scas
mov
push
mov
sbb
jl
fists
in
lahf
insl
orl
cwtl
shll
dec
xchg
mov
shrb
scas
add
cmpsb
add
mov
dec
cmpsb
pushf
jge
push
xchg
xchg
popf
inc
pushf
sbb
leave
fsubp
jle
mov
sub
imul
jg
lcall
pop
sub
aas
sub
add
pop
sbb
mov
sub
jp
add
repz
and
mov
fimuls
bound
addl
frstor
int3
and
scas
or
or
rorl
cmp
pop
push
fwait
mov
and
sub
out
mov
dec
sarl
pop
jmp
sahf
fiadds
and
dec
xor
ljmp
lods
das
xchg
stos
lcall
fucomi
pop
xchg
test
xor
and
arpl
xchg
in
ja
mov
scas
sti
xadd
arpl
popa
or
add
loope
inc
enter
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
jns
jne
sbb
and
sbb
rorl
ljmpw
inc
insb
add
pop
nop
push
inc
popf
xor
jns
lea
push
jae
imul
lds
push
movsb
xor
dec
movsb
xor
aaa
int
dec
jbe
push
sarl
test
shll
pusha
xchg
dec
sbbl
lods
scas
jg
mov
lods
std
jns
icebp
sbb
push
pop
push
adc
sbb
push
lcall
scas
aas
push
insb
pavgw
inc
mov
loop
pop
push
mov
notb
lcall
addl
sub
into
jae
xor
push
lea
mov
ja
cwtl
xchg
jae
push
aaa
jecxz
fdivrs
andb
fwait
adc
xor
pop
add
inc
imul
mov
cs
clc
pop
inc
mov
stos
repnz
fistl
cwtl
iret
mov
ja
cli
imul
jns
add
xorb
andl
add
push
std
add
push
xchg
inc
or
pop
jmp
or
stos
xlat
cmp
sti
daa
lret
inc
mov
iret
jecxz
insb
jns
pop
jg
rclb
mov
mov
rclb
fsubrl
and
push
bound
sub
mov
inc
lock
test
test
out
mov
or
add
shrb
jl
pusha
push
cmc
movsl
sahf
rcrl
and
pop
jg
jecxz
std
mov
in
aad
mov
mov
mov
testb
movsl
test
fisubs
fldt
pop
dec
cld
dec
scas
xor
xor
pop
push
sti
xor
mov
cmc
movsl
mov
out
leave
sub
outsl
leave
cmp
ljmp
sbb
cmp
fistpll
xchg
js
mov
std
arpl
cli
mov
sub
aaa
xor
cmc
inc
sub
rolb
iret
adc
jg
insl
inc
das
mov
push
push
aam
out
ret
mov
mov
cmpsb
pop
xchg
clc
negl
xorl
sub
or
fmull
inc
test
ss
mov
mov
idiv
inc
mov
les
or
scas
ljmp
pop
gs
cli
out
cli
xchg
inc
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
mov
sbb
scas
adc
sbb
sarl
aam
adc
inc
loope
movsb
mov
cld
push
movsl
shlb
test
int
daa
mov
cmc
adc
push
push
ficoml
test
pushf
pop
movsb
xchg
lock
negb
std
push
shlb
pop
stc
cltd
arpl
mov
xchg
push
mov
daa
cli
pop
mov
je
lds
and
xor
lock
xchg
test
inc
aaa
and
sbb
sarb
addb
test
lcall
sbb
dec
pop
jmp
scas
and
jmp
cmpsl
xor
pushf
mov
dec
cld
pop
or
in
inc
inc
call
push
int3
push
scas
ficomps
mov
adc
sub
mov
inc
lcall
or
pushf
test
test
sbb
sub
lahf
mov
aam
sub
outsl
xchg
push
fildl
out
xorb
dec
fisubs
out
pop
or
jbe
jns
xchg
mov
dec
jmp
scas
add
xchg
push
jg
jae
les
cmp
call
sbb
xchg
jne
mov
jbe
adc
jl
movsl
xor
mov
stc
mov
shrb
outsb
call
sbb
dec
adc
dec
imul
ss
ljmp
cmp
xor
in
mov
mov
movl
es
inc
push
call
loopne
notl
pop
xlat
ret
mov
cwtl
cmp
pcmpeqw
fldl
pop
inc
fstpt
jg
nop
jno
mov
sbb
jns
psrld
test
mov
cmp
push
cmpb
cwtl
push
lcall
add
sub
cmp
gs
daa
mov
adc
lods
outsb
xchg
jg
cmpsb
and
and
sbb
sbb
dec
cwtl
mov
shll
pop
mov
std
iret
loopne
sub
jg
and
push
add
and
int3
mov
jbe
insb
fsub
loop
loop
icebp
subb
sbb
js
jb
xchg
xchg
stos
push
sar
pop
divl
lcall
btr
mov
or
or
pop
lahf
stos
pop
sbb
cmpsb
hlt
pop
pop
mov
cmp
mov
xchg
cmpl
jge
sub
xlat
in
leave
pop
sub
mov
popf
sbb
push
mov
pop
push
xchg
pop
jae
inc
dec
mov
cltd
repz
mov
test
jnp
cmp
mov
mov
lods
fdivr
cli
add
jl
push
aaa
sub
ror
aam
imul
mov
sub
dec
add
inc
popf
jne
nop
nop
incl
jmp
in
bound
mov
popf
or
mov
mov
cmpsb
in
loopne
adc
xor
add
vpshld
test
jns
sub
pop
or
ss
push
cmp
sub
inc
xchg
out
cmpsb
enter
ret
xchg
cmp
ret
xchg
jo
movsb
or
xchg
pop
loop
xchg
leave
mov
adc
xor
push
jmp
pushf
jne
ret
jmp
pop
cmp
cli
xor
scas
cmpsb
scas
mov
ja
js
loopne
in
or
cmp
xor
sub
push
mov
outsl
xor
ljmp
sahf
rolb
outsl
mov
int
fld1
mov
inc
and
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
mov
sbb
scas
adc
sbb
fstps
fsubl
enter
in
stos
nop
sub
push
and
test
pop
das
pop
iret
mov
adc
inc
aaa
scas
repz
push
iret
out
mov
mov
xchg
neg
test
pop
setl
jnp
out
in
or
pop
cmp
push
shlb
scas
mov
mov
mov
iret
mov
mov
mov
push
subb
in
lret
or
sbb
and
sub
jl
inc
adc
sub
and
enter
lds
adc
test
repz
rcll
adc
sub
out
iret
mov
pop
gs
movsl
cmc
lock
dec
lods
xor
pop
or
lcall
or
imul
repnz
mov
fisubl
mov
mov
lods
push
pusha
mov
push
mov
mov
in
dec
flds
fld
ds
fsubrs
ficoms
sti
ret
arpl
int
dec
push
fcoms
jp
push
mov
push
xor
insl
sub
jo
mov
mov
jnp
push
push
mov
adc
scas
cmp
scas
or
fisubl
sub
push
shll
sarb
xor
mov
test
push
mov
cmp
and
stc
push
mov
lock
mov
pop
stos
xchg
and
dec
dec
js
shlb
mov
push
pop
cmp
pop
lcall
js
or
mov
popf
mov
push
mov
mov
mov
xlat
sbbl
scas
push
adc
mov
add
data16
mov
pop
cltd
sub
inc
adc
pusha
push
sub
sar
cltd
jg
push
xchg
pushf
push
int
push
inc
mov
push
cld
cmp
push
xor
daa
nop
or
mov
sbb
cld
int3
insl
adc
xor
dec
push
or
cmp
and
aam
or
xchg
mov
mov
pop
cmc
adc
ret
cmp
ss
dec
adc
in
iret
xchg
jg
dec
insb
orb
mov
pop
fdiv
movsb
mov
ljmp
xchg
fistpll
cld
mov
lods
test
sub
pop
push
dec
mov
pop
sbbl
in
imul
adc
or
aaa
jns
inc
sub
rorl
adc
mov
inc
es
inc
out
mov
xchg
inc
xor
hlt
jne
inc
push
fiadds
dec
or
lret
dec
xor
in
popf
in
mov
inc
adc
inc
push
adc
push
push
or
jnp
scas
mov
mov
lret
mov
cmp
adc
fldcw
popf
mov
adc
out
imull
inc
aad
mov
dec
adc
in
push
call
test
rorb
rclb
mov
pop
and
les
faddp
jnp
push
aam
in
push
cwtl
add
out
ja
inc
sti
repz
adc
pop
jecxz
push
push
sbb
sahf
jp
sub
mov
lods
dec
call
push
xchg
enter
das
adc
push
and
xor
mov
cwtl
lods
pop
in
xor
outsl
mov
in
mov
fst
dec
pop
out
sub
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
dec
sub
sbb
adc
sbb
or
cld
mov
dec
sbb
movsb
out
xor
ret
mov
jmp
push
jne
fcmovnu
scas
mov
jmp
adc
mov
outsb
cmpl
inc
cli
aaa
jb
mov
jae
dec
lock
mov
cmc
aas
scas
dec
push
cmc
loopne
pop
popa
aas
scas
lock
mov
add
repnz
and
xlat
rolb
shlb
lea
rorl
out
sub
stc
repz
leave
and
aaa
adcb
dec
hlt
xor
push
cwtl
mov
je
push
xchg
pusha
pop
mov
xorl
push
inc
fdivrs
sub
in
dec
jle
scas
push
out
shl
sub
scas
mov
out
mov
mov
dec
xchg
pop
cmp
lds
push
xor
jnp
jae
rorb
push
mov
pop
lahf
sub
out
outsl
iret
mov
push
cld
add
cmp
or
clc
shlb
mov
mov
sahf
jl
mov
cmpsb
pushf
outsl
cmpsb
and
fbstp
mov
xor
aas
test
sbb
imul
enter
or
out
mov
inc
cmp
scas
ja
add
aas
stos
dec
sti
pop
mov
xor
dec
fcoml
loop
mov
cmp
jns
xchg
mov
imul
divb
cmpb
sub
leave
jle
inc
jno
mov
fsubl
nop
add
icebp
sbb
ja
lods
xor
dec
cmp
int3
shll
mov
dec
movq
dec
aad
sub
mov
scas
lea
xlat
shll
mov
hlt
pusha
sub
outsl
mov
out
xor
les
shl
stc
nop
jecxz
ret
repz
adc
out
stos
bound
or
loope
dec
mov
sarb
add
add
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
pop
sahf
or
xchg
sbb
notb
sbb
jl
cmc
or
mov
test
fmull
xor
mov
inc
fildll
mov
push
add
sbb
bound
out
sub
add
jge
xor
jnp
sti
or
inc
cmp
fwait
scas
dec
lds
mov
inc
xchg
addr16
push
test
andl
in
call
unpckhps
cmp
push
jo
insl
dec
inc
lret
cmc
push
cwtl
hlt
imul
cli
out
arpl
mov
mov
fs
lea
out
cli
mulb
sti
lds
push
add
hlt
mov
cmp
popl
imulb
fiadds
inc
into
push
js
mov
into
out
rcrb
fcom
push
idiv
mov
in
pop
cmp
pop
xor
out
imul
push
inc
xchg
pop
decl
cmp
lcall
jno
xor
jle
cmpsb
mov
adc
andl
inc
xchg
ds
pop
or
or
sub
movsl
movsl
loop
rcll
fs
nop
inc
ret
dec
adc
dec
xchg
xlat
or
push
jecxz
sub
jne
test
or
iret
jae
pop
jnp
xor
stos
cmp
xor
insb
lret
cmp
push
aad
out
arpl
cltd
or
inc
aam
xlat
sub
mov
out
insb
fdivs
xor
stc
push
loop
insb
xor
bound
daa
aas
mov
mov
xchg
add
jecxz
pop
or
xchg
mov
sub
pop
sub
mov
jle
movsl
adc
adc
imul
cmpsl
insb
jl
mov
popl
pop
mov
mov
outsl
pop
mov
cltd
dec
adc
push
push
imul
sti
fdivrl
mov
xor
mov
fists
adcb
push
leave
jne,pt
shr
shlb
ljmp
cld
add
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
add
sbb
notb
sbb
icebp
dec
filds
arpl
ss
inc
js
inc
aad
inc
or
push
adc
inc
stc
inc
or
add
cmp
jae
mov
addr16
jns
ss
stc
in
ljmp
lret
pop
repnz
mov
and
repz
xchg
push
repnz
arpl
rcrb
fdivl
jp
ret
mov
movsb
xor
into
pop
jg
pop
into
push
daa
adc
mov
pop
sti
push
add
in
inc
in
xlat
icebp
pop
jnp
popf
nop
les
mov
ss
pop
gs
dec
ds
mov
scas
jle
repnz
lcall
lahf
pusha
dec
std
mov
add
push
dec
and
mov
mov
push
mov
mov
mov
cmc
cmpsl
add
fmuls
or
mov
movq
xchg
dec
push
icebp
push
push
add
mov
xchg
shll
sub
scas
jg
xor
mov
sarb
out
jbe
and
sbb
les
dec
imul
push
sub
sub
sub
add
and
mov
bts
cmp
mov
xchg
mov
test
aad
inc
cmc
rclb
dec
ljmp
aas
mov
cmp
ja
and
data16
lret
mov
jge
sbb
aad
clc
xor
lods
jo
leave
mov
ret
push
test
add
rolb
je
out
adc
frstor
cld
adc
sahf
cmc
add
add
mov
mov
hlt
sub
test
inc
jl
xchg
push
mov
dec
fnstsw
add
push
clc
sbb
ret
lods
test
jge
or
dec
push
cmp
dec
push
jle
clc
shr
jmp
cmp
or
mov
shlb
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
xchg
fisubrs
adc
cmp
or
cld
fsts
repz
mov
jecxz
cmp
loop
repnz
adc
nop
push
imul
xchg
inc
ja
clc
out
jmp
and
add
mov
push
pop
stos
jmp
or
pop
ret
aas
mov
ret
test
in
lods
sbb
out
mov
jp
pushf
jns
xchg
mov
pop
inc
sub
dec
insb
pop
push
inc
inc
in
push
pop
call
jno
jecxz
sahf
es
aas
mov
pop
imul
xchg
cmp
mov
push
xor
jnp
sub
jno
add
lods
adc
pushf
cmc
leave
repnz
inc
idivl
stos
jmp
adc
push
mov
idivl
mov
rcll
or
push
dec
lods
jns
ljmp
hlt
call
in
inc
pop
fcomps
dec
xor
sahf
mov
sbb
das
mov
dec
aaa
cmp
mov
divl
dec
lret
mov
sbb
cltd
lret
je
mov
adc
fwait
test
cli
repnz
push
aas
rcl
rorl
mov
sub
in
pop
jl
jl
es
push
xchg
jp
cs
xor
xor
xchg
adc
test
cmp
push
lret
mov
lods
ret
dec
call
and
dec
mov
sarb
les
inc
dec
mov
mov
jmp
push
mov
adc
or
push
pop
push
mov
and
jnp
sbb
movsb
xor
push
sub
xor
fstpt
pushf
das
lock
mov
xchg
test
cltd
inc
les
clc
bound
pop
sti
pusha
xchg
insb
dec
or
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
xchg
mov
dec
push
pop
adc
stos
pop
push
sbb
int3
push
jne
jo
cmp
lea
xchg
lock
pop
fwait
mov
lock
dec
fnclex
movsb
rcl
xor
stc
cmp
lds
cmp
sahf
mov
push
pop
jge
jns
repz
mov
sahf
and
add
jo
les
in
fstps
das
sbb
scas
adc
out
pop
into
add
xchg
loope
mov
dec
popa
cwtl
xchg
adc
mov
xchg
push
ljmp
pop
adc
xor
xchg
popa
xchg
jmp
mov
dec
sbb
aas
sbb
dec
sbb
insb
popa
jg
out
lcall
popf
gs
dec
push
jmp
outsl
push
xor
mov
sarb
cli
imul
pop
loop
rcrb
jno
arpl
dec
das
roll
mov
jbe
out
cs
mov
mov
ret
stos
xchg
addb
in
scas
mov
dec
leave
subb
scas
mov
mov
jle
inc
xlat
adcb
aad
enter
push
jb
pop
dec
mov
and
jno
sbb
popa
and
outsl
or
popf
call
repnz
lods
out
in
sbb
outsl
mov
add
mov
cmc
mov
add
rclb
mov
and
xchg
rcrb
notrack
pop
cmp
aas
iret
sub
push
jecxz
popa
adc
out
pusha
test
mov
aas
fcomp
lea
xor
or
add
call
or
xor
or
xor
xor
lods
mov
out
sbb
inc
mov
add
out
test
xchg
mov
xor
xchg
jns
dec
lock
enter
inc
push
mov
mov
jmp
aaa
and
dec
mov
push
out
fwait
push
or
sub
sbb
adc
sbb
iret
sub
lahf
adc
or
and
fs
jcxz
dec
insb
fcomps
fidivs
in
ljmp
and
push
and
xor
xchg
call
jno
adc
pop
leave
movsl
xchg
push
rcr
xchg
push
cwtl
fidivrs
movsb
pmuludq
fwait
sahf
inc
dec
push
push
cmp
jg
test
mov
out
aaa
mov
sar
stos
xchg
sbb
icebp
dec
fcmovnb
xchg
insl
js
je
pop
mov
in
dec
inc
push
mov
mov
pop
pop
pop
or
cmp
jno
stos
rolb
clc
sbb
data16
sbb
mov
mov
xchg
jae
jmp
xchg
jbe
cmc
sbb
addl
inc
shl
je
pushf
lcall
loop
push
test
jmp
ret
xor
sub
jne
dec
loop
test
jb
push
sahf
iret
add
fisttps
xchg
cmp
inc
xchg
push
xor
dec
jle
ljmp
movsb
icebp
push
clc
dec
dec
mov
push
test
push
into
jbe
jne
pop
int3
shrd
shr
test
or
xor
lret
sub
mov
out
das
jg
pop
sbb
xchg
pop
or
iret
pop
jbe
mov
mov
nop
sub
mov
test
das
adc
icebp
andl
stos
ffree
call
test
add
xchg
lock
xchg
pop
mov
push
int3
into
fadds
sti
dec
push
pop
inc
adc
pop
enter
rol
cli
jle
imul
cmpsb
pop
inc
cmp
sub
pop
xor
mov
sub
push
dec
mov
in
mov
mov
mov
imul
mov
out
enter
out
or
jecxz
dec
mov
cmc
ds
mov
add
data16
popf
ja
lret
or
fwait
adc
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
test
rol
pop
fucomp
rcll
cwtl
js
add
movsb
jo
mov
or
mov
xchg
mov
mov
orb
cli
pop
dec
cld
sbb
mov
push
lea
jnp
ljmp
pop
push
loop
lods
push
orl
or
mov
andl
pop
scas
mov
cmp
mov
xchg
sbb
fsts
pop
cmp
test
cmp
pop
aas
mov
fcmovu
pop
aam
pop
stc
ss
imul
pop
mov
sbb
mov
popf
stc
xchg
cmpsb
es
dec
jae
das
lock
sbbl
xor
sbb
xchg
in
sub
stos
mov
outsb
ret
outsl
outsb
push
push
test
lds
scas
dec
les
rcr
mov
lcall
aam
sub
jns
mov
add
ret
lret
jae
push
pop
lret
jmp
mov
xchg
into
sti
out
push
xchg
nop
aaa
mov
jle
cmp
xchg
gs
lea
aaa
std
out
test
fcmovb
int
cmp
data16
pusha
push
xor
and
aas
and
shr
adc
dec
pop
mov
push
cmp
cmp
lock
movsb
cltd
addr16
cli
hlt
inc
ljmp
mov
out
insl
xchg
mov
mov
mov
stc
mov
sbb
inc
xchg
lock
push
pusha
mov
cwtl
cmpsb
pop
arpl
dec
cwtl
dec
div
jmp
push
push
adc
negb
pop
cmp
sub
and
inc
mov
push
sahf
dec
mov
push
stc
cwtl
insb
and
nop
int
cs
out
divl
imulb
mov
and
fisubrs
in
or
jl
jae
mov
sbb
adc
sti
fs
mov
jge
inc
aas
cmp
dec
int3
sahf
mov
jp
mov
adc
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
popf
clc
out
add
loopne
jbe
sbb
scas
imul
or
insl
jnp
xchg
jl
in
jns
in
sti
sbb
and
cmp
sbb
mov
or
push
dec
enter
rorl
sbb
inc
xor
in
add
sbb
dec
jo
loope
pop
push
cmp
cs
push
mov
mov
xchg
paddsb
inc
add
aaa
data16
inc
mov
cwtl
mov
fnstsw
out
push
cmpsl
jo
dec
lods
xchg
pop
call
mov
mov
gs
int
and
mov
jbe
scas
cmp
repnz
inc
dec
add
fbstp
je
mov
decl
sub
out
xor
push
ffree
hlt
push
je
cltd
sahf
cwtl
xor
add
rorb
insb
mov
leave
jae
js
movsb
mov
es
test
aam
in
or
loopne
mov
mov
out
jns
inc
fdivs
mov
adc
pop
and
mov
loope
sbb
dec
bound
sbb
sbb
jne
mov
dec
enter
popa
rcrl
lds
sbb
into
std
cwtl
out
mov
lahf
aaa
sub
adc
pop
push
pop
sub
inc
inc
iret
inc
mov
adcl
lods
xchg
or
jnp
rolb
test
push
cwtl
jecxz
filds
shr
mov
cli
sbbl
pusha
mov
ss
addl
adc
jbe
jnp
es
shrl
and
cwtl
insl
mov
es
xchg
cli
and
dec
adc
aam
sbb
jb
inc
mov
imul
outsl
lock
insb
popf
shll
jge
vcvtsd2si
pop
les
sbb
sti
enter
enter
hlt
mov
int
inc
aaa
int3
add
repz
mov
xchg
sub
pop
cmc
push
mov
jnp
imul
je
inc
mov
lea
pop
xlat
popa
aam
mov
stc
push
xor
cs
and
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
aad
mov
pop
adc
sbb
push
hlt
xchg
stc
dec
jno
jne
fisubrs
cmc
pushf
xchg
je
rcrb
mov
pushf
test
xor
add
jae
bswap
sbb
sub
lods
xor
and
jae
lea
ja
rol
out
mov
sahf
test
add
jge
icebp
test
sbb
pop
mov
lcall
dec
xor
or
xchg
test
cmp
scas
aad
fisubl
clc
jecxz
jle
mov
sub
push
popf
pop
and
pop
mov
rorb
cs
cwtl
int3
pop
or
sub
cmp
dec
aad
enter
loop
mov
repnz
jmp
lea
pop
and
push
sub
rclb
and
and
inc
lahf
xor
shlb
stos
orb
pop
sbb
xlat
stc
out
cwtl
push
adc
add
jno
and
js
out
jne
or
dec
daa
xor
bound
movsl
add
loop
add
stos
push
sbb
push
aad
mov
fidivs
repz
adc
jp
fdiv
int
or
push
push
test
push
cli
ljmp
in
mov
stos
sub
mov
leave
xor
cmp
mov
in
push
add
jnp
dec
mov
xchg
ja
push
sbb
inc
or
push
push
add
subl
and
rcrb
in
mov
in
and
mov
sub
jecxz
shll
aam
fsubl
inc
scas
jle
push
std
pop
adc
repnz
movsb
imul
or
pop
jg
loopne
call
scas
cmp
cmpsl
ds
sub
and
inc
mov
sub
cltd
cwtl
push
push
pop
jo
pop
pop
pop
mov
jbe
jmp
mov
pop
popf
jmp
es
pushf
cmpsl
mov
aaa
xor
cmp
push
xchg
adc
shrb
subl
cmpsb
fs
aam
sbb
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
mov
sbb
sbb
js
dec
fbld
pop
test
xchg
push
ljmp
ret
incl
nop
hlt
xlat
ds
dec
and
pop
cmpb
ds
dec
cwtl
mov
pop
stos
mov
lahf
cli
cmpb
add
sub
xor
jbe
add
je
ss
es
cltd
sbb
or
aaa
or
ror
or
mov
mov
into
stos
sahf
pop
nop
and
dec
push
nopl
inc
dec
adc
mov
ret
mov
push
mov
cli
xor
and
pop
add
mov
jg
rolb
pop
ds
jnp
test
mov
xchg
or
subl
addb
mov
cmc
cmp
adc
insb
and
lds
xchg
mov
cld
cwtl
add
adc
cmpsb
loop
jle
inc
pop
incl
cwtl
pushf
aaa
cmp
mov
stc
pop
adc
add
int
and
inc
cmp
dec
dec
sarb
pushf
repnz
push
test
inc
insl
adc
mov
adc
jbe
sbb
dec
add
frstor
ss
cli
ja
out
cmp
pop
dec
neg
lcall
push
sbb
pop
cld
int
outsl
push
les
mov
outsl
add
pop
call
xor
xor
xchg
fimull
fisttpl
push
or
mov
popf
xchg
out
adc
inc
xchg
pusha
dec
in
lret
fs
jne
adcl
mov
push
jmp
xchg
jns
xlat
add
sti
test
sbb
ljmp
sbb
add
or
inc
mov
add
fwait
clc
clc
pop
inc
cwtl
push
push
pop
movsb
lret
arpl
in
mov
je
add
jo
js
ret
lahf
xchg
inc
dec
xchg
add
fdivl
inc
dec
lret
in
jmp
in
cmp
icebp
xor
sbb
int
fcomps
cld
mov
dec
fwait
adc
sbb
and
pop
lret
fwait
ss
repnz
in
in
movsl
cmpsb
xchg
shl
mov
orl
sub
inc
cmp
das
add
loopne
mov
enter
pop
xchg
vmread
xor
inc
cmp
mov
arpl
cmp
push
xchg
pminub
aaa
hlt
stc
or
orb
in
stc
addl
add
fs
cmpsl
fidivs
add
lahf
jnp
outsb
add
fisttps
dec
out
test
notb
mov
in
sbb
xchg
enter
cmp
add
or
imul
sub
mov
dec
or
inc
push
orl
pop
repnz
pop
dec
mov
push
sub
flds
das
nopl
mov
and
cmp
jns
pusha
dec
mov
pop
lock
cmpsl
cli
and
jno
pushf
aam
push
ret
jge
jbe
push
adc
add
iret
es
add
cmp
mov
out
sahf
mov
jle
pop
repnz
inc
mov
jge
mov
push
sub
in
mov
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
loope
mov
sbb
adc
sbb
inc
loope
xchg
pop
mov
pop
mov
adc
data16
ss
xor
test
push
in
insl
jbe
cmc
out
fcom
popa
cmc
mov
push
lock
mov
lock
scas
sub
pop
jnp
ds
mov
in
iret
sbb
inc
inc
mov
inc
inc
mov
test
scas
or
mov
push
dec
add
call
loop
pop
sbb
lods
and
push
andl
inc
or
pop
lea
mov
pop
jle
jl
cmp
popf
jp
pop
xor
push
jl
pop
jns
test
inc
mov
and
cmpsb
fcomp
and
cmp
inc
scas
clc
sbb
xchg
gs
cltd
out
data16
movl
int3
or
std
push
adc
inc
test
and
pusha
insl
scas
inc
and
out
jl
mov
xchg
repz
cld
mov
pop
inc
jle,pt
sub
mov
cmp
leave
popa
or
insb
bound
push
outsb
mov
adc
ds
or
mov
add
cmp
popa
iret
push
call
xchg
orb
adc
jmp
stos
xchg
xor
jg
scas
cmpsb
pop
mov
fidivrl
xchg
sub
push
push
subl
ljmp
pop
xor
dec
jns
inc
clc
dec
rorl
jbe
or
ret
rorb
ficoml
test
int3
pop
pop
andb
stos
shlb
mov
push
xchg
lods
insl
enter
std
or
dec
sub
mov
xchg
push
and
leave
xchg
inc
arpl
jg
pop
or
mov
loopne
xchg
add
or
dec
jns
and
stos
add
inc
popa
adc
ja
pop
mov
cmc
or
loope
repz
pop
pop
test
mov
cwtl
push
js
cwtl
mov
stos
daa
adc
int3
dec
mov
test
inc
push
sbb
inc
push
adc
jae
scas
cmpsb
iret
gs
mov
mov
jecxz
insl
inc
dec
and
outsl
push
and
outsb
out
add
jns
adc
xor
icebp
push
movsl
js
inc
out
cltd
adcl
xor
enter
lret
ljmp
jns
pusha
sub
pop
push
inc
int3
jo
shrd
add
push
inc
jno
mov
xchg
shl
repz
cmp
xor
xchg
test
cmp
cmp
out
add
insl
icebp
cmp
adc
mov
arpl
cmc
insl
shrl
xor
mov
loope
dec
push
xor
in
notrack
jnp
repnz
test
lcall
jl
imul
das
loope
mov
adc
add
mov
daa
adc
mov
and
cmc
jo
call
imul
int
xchg
cmp
repz
push
pop
mov
mov
and
add
cmp
pop
pop
rolb
and
push
push
xchg
dec
dec
fmulp
das
dec
ja
jns
pusha
jne
jp
sbb
mov
inc
rcll
push
out
mov
lea
lods
jmp
xchg
xchg
lahf
xor
jb
pop
imul
rorb
shlb
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
dec
dec
push
or
sbb
adc
sbb
push
lret
data16
sbb
insb
xor
comiss
xor
xor
rcrl
es
xor
mov
mov
inc
fsubrs
in
es
push
ljmp
aaa
and
jmp
mov
push
adc
out
in
mov
aas
and
jno
orb
lock
mov
js
jp
lods
pushl
and
dec
inc
cmp
jmp
and
sbb
out
or
sub
or
jbe
test
ret
and
inc
out
inc
xchg
pop
out
and
iret
add
sbb
mov
and
shlb
ficompl
inc
sarb
mov
clc
fcmovb
mov
mov
movsl
setp
lds
cmp
xor
jle
mov
dec
lds
jns
xor
sub
inc
arpl
and
nop
daa
int
popf
rclb
and
aam
fimull
pop
lock
mov
pop
lea
mov
fiaddl
outsb
loop
dec
add
orb
out
gs
dec
or
aas
add
icebp
or
dec
icebp
mov
mov
popa
dec
data16
icebp
jecxz
cwtl
sarb
mov
pop
clc
jbe
inc
inc
idivl
loope
dec
sbb
fwait
adc
mov
mov
xor
divl
cmp
dec
movsl
and
push
sub
mov
fildll
jns
flds
add
fmull
data16
flds
mov
dec
jge
stos
xor
js
call
fwait
call
push
adc
mov
ljmp
pop
fdivrl
outsb
sub
adc
push
rcrb
scas
outsb
arpl
pop
addl
mov
movsb
mov
add
inc
call
pop
popa
addr16
insl
inc
jge
pop
mov
filds
xor
mov
addb
lods
xchg
lods
clc
xor
loope
lea
mov
into
lahf
aam
stos
xchg
push
shll
outsb
inc
sub
inc
jle
bound
adc
cmp
popa
imul
xchg
insl
cmc
into
jle
gs
clc
cmp
imul
es
cmp
daa
add
shlb
mov
jle
sub
push
std
ljmp
cmp
out
push
inc
ret
iret
or
pusha
mov
lahf
in
sub
out
dec
push
nop
push
addr16
lods
daa
push
clc
xchg
lods
pop
lods
pop
sub
mov
adc
sub
imul
fisubl
in
lea
xchg
push
push
iret
push
imul
add
test
imul
iret
enter
xchg
sub
adc
leave
dec
notl
repnz
adc
test
add
daa
push
pop
pop
xchg
int3
mov
sti
cld
cmc
adcl
add
lahf
pop
push
mov
sbb
push
pushl
movb
cltd
or
pop
ds
enter
inc
dec
jg
push
in
mov
xor
pop
iret
jg
ja
aam
insb
jmp
movl
and
subl
jmp
mov
push
in
xor
mov
inc
add
sbb
adc
sbb
or
push
js
adc
and
mov
dec
xorb
pop
and
pop
pop
decb
xor
mov
xor
cmc
dec
cld
scas
pop
dec
jbe
dec
movsl
sbb
sbb
daa
gs
data16
jnp
mov
jge
incb
gs
jno
pusha
mov
leave
dec
orb
mov
mov
dec
cmp
mov
add
or
lods
jl
dec
lret
mov
mov
push
add
pop
repnz
je
sub
mov
test
sub
jo
inc
mov
dec
fcom
or
nopl
adc
mov
lret
ret
mov
insb
iret
sbbl
leave
je
push
loope
cmpsl
cmc
fcoms
fnstenv
call
lea
out
sbb
rol
ja
cld
mov
imul
in
adc
xchg
sub
and
push
push
stc
nop
pop
add
shrl
arpl
jno
aad
sub
jae
and
add
cmp
lock
mov
repz
mov
cmpl
xlat
lods
sub
ljmp
nop
xlat
mov
fwait
add
sarl
xchg
hlt
or
cmc
mov
dec
push
mov
popa
push
negb
mov
out
xor
mov
push
lahf
inc
stc
pop
xchg
or
clc
or
out
cmp
sub
lods
jnp
ljmp
pop
sbb
jle
aam
push
mov
cmpsb
dec
jne
jns
repz
xor
sbb
cli
add
sti
sub
mov
cmp
and
jg
repz
test
in
xlat
push
lcall
popf
outsb
movsl
inc
jo
adc
adc
jle
push
mov
orl
outsl
or
in
push
incl
mov
sbb
movsb
loop
xchg
xchg
jg
mov
jp
pop
and
cmp
jle
cmc
sub
pop
add
rcll
into
stc
mov
mov
cmp
push
or
cld
fsubl
das
sbb
fcoms
mov
jno
add
fwait
mov
cwtl
jo
add
outsb
and
xor
loopne
add
mov
in
inc
cli
pop
cmc
pushf
roll
jnp
jg
adc
mov
inc
dec
add
out
call
roll
fisubl
or
out
sbb
pop
xor
cli
jne
sub
es
dec
cltd
gs
xlat
repnz
pop
dec
jle
or
imul
push
roll
adc
mov
jmp
rclb
pop
int
inc
sbb
adc
pop
or
xor
enter
in
cmpsb
and
push
inc
mov
scas
xchg
out
mov
sub
decb
sbb
mov
xchg
inc
xor
cmp
jmp
or
rcll
mov
cld
mov
sub
or
mov
fistl
sub
mov
aas
int
cwtl
mov
fstpt
jae
popa
sbb
mov
in
adc
incb
xor
mov
xor
jle
inc
add
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
inc
iret
sub
lods
je
add
aas
push
cs
cmc
pop
jg
jbe
sbb
outsl
cld
daa
xor
pop
jmp
stos
dec
add
sbb
imul
push
mov
push
repnz
cmp
out
gs
sub
push
clc
aas
rorb
repz
imul
xchg
ja
div
xor
mov
inc
or
pop
fdiv
jecxz
popf
out
and
pop
xor
repnz
pop
and
sarl
inc
pop
notl
mov
pop
sub
sub
jmp
or
stos
push
mov
pop
adc
les
add
sahf
movsl
inc
out
xor
add
scas
pop
mov
and
nop
cmp
sarb
in
jl
mov
popf
hlt
sub
stos
out
sbb
aas
stos
push
pusha
and
xchg
aaa
or
pop
adc
jmp
lods
cltd
mov
outsl
dec
jmp
mov
icebp
fsubs
xor
lcall
cltd
scas
or
cmp
mov
push
cltd
jne
cmp
out
inc
test
inc
out
pop
fs
outsl
mov
adc
xor
push
add
repz
lea
cmp
push
inc
out
rclb
aas
mov
xchg
inc
pop
jmp
int
push
sti
jmp
or
das
arpl
mov
xchg
nop
addr16
cmpsb
pop
lret
xor
jl
sub
rcrl
jecxz
xor
outsb
inc
jo
add
imul
test
enter
sbb
fdivp
test
or
test
das
mov
dec
add
iret
mov
rorb
outsl
add
repnz
jl
popf
jle
push
adc
push
lods
aam
sahf
cli
inc
cmp
dec
or
inc
adc
sub
mov
test
cmp
cli
test
dec
and
scas
jne
jae
test
jne
push
orb
ljmp
xor
sub
fwait
push
push
jo
jmp
xlat
js
jae
mov
pusha
fs
or
lahf
in
xchg
aad
sahf
shll
lahf
inc
sbb
mov
mov
pop
push
jecxz
imul
sarl
push
and
mov
adc
sub
imul
sbb
add
jecxz
pusha
xchg
jle
adc
xor
dec
into
aad
sub
jo
repnz
dec
pop
sub
push
jle
pop
jecxz
pop
mov
xchg
xor
sbb
call
or
pusha
cld
sbb
adc
lds
push
scas
push
pop
fisubrs
cli
xchg
stos
jp
cmp
mov
cmp
sbb
adc
xchg
pop
stos
sub
lods
cmpsl
pop
adc
xor
lret
idivb
xor
int
sub
jno
pop
xchg
add
inc
iret
sahf
sub
mov
fadds
ja
cmc
loopne
cmpsb
mov
outsl
aaa
push
xor
adc
pusha
int3
stos
xor
leave
mov
outsb
mov
mov
xor
out
loopne
pop
dec
mov
cmp
mov
popf
lds
push
jg
rorl
enter
add
add
fimull
test
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
pop
loopne
stos
inc
notb
sbb
adc
sbb
inc
push
sub
mov
lahf
pop
push
jne
jle
shll
icebp
sbbl
xor
xchg
popa
pop
in
cmp
push
jbe
sbb
mov
inc
dec
or
clc
ret
pushf
rcrl
insl
cmp
lcall
push
in
rcll
mov
sbb
int
cs
inc
lock
lds
fstpt
mov
mov
out
or
pop
aaa
loop
cmp
push
inc
dec
adc
scas
and
inc
loope
sbb
xor
add
mov
shlb
test
xor
sbbb
xor
arpl
xchg
fildll
adc
stc
out
push
cmp
xor
and
test
push
xchg
idiv
repz
mov
xlat
push
push
mov
pop
out
insl
cmpsb
std
imul
ret
and
cli
lahf
fistl
xor
xchg
loop
and
loopne
test
stc
xorb
push
push
mov
adcb
jne
pop
xor
mov
out
and
outsl
mov
jge
fcom
mov
dec
push
xor
repnz
scas
xor
mov
xchg
fmuls
int3
fsubs
xorl
andl
push
int
outsb
pop
lds
mov
leave
mov
push
fwait
sub
mov
fucomp
and
adc
rcll
mov
jl
scas
ja
mov
add
mov
sbb
mov
jl
std
lret
out
push
fldl
xor
into
mov
push
daa
loop
jl
inc
cmp
push
loopne
mov
mov
jo
adc
and
sar
popf
int
adc
or
out
mov
sub
testb
add
je
lds
pop
xor
pop
stc
push
sub
lea
xchg
popf
xchg
add
cmp
loopne
sbb
or
nop
xchg
out
sbb
jecxz
fucom
rcrl
xchg
mov
hlt
xlat
pop
adc
lcall
xchg
dec
andl
mov
popf
xchg
popf
xor
push
jle
stc
or
pop
jb
inc
and
fwait
sub
mov
add
lods
pop
jp
sbb
fldcw
iret
je
cmp
aaa
dec
mov
dec
imul
iret
and
mov
mulb
inc
add
fucomp
jle
mov
pop
sbb
inc
jg
stc
imul
cmp
sbb
sarb
insl
xor
jge
ret
aad
leave
inc
stc
addr16
sbb
iret
clc
lods
mov
out
test
lret
sahf
stos
ficoms
subb
loop
jbe
xchg
xchg
icebp
mov
shl
icebp
jecxz
mov
ss
cmp
mov
data16
sbbl
out
scas
push
in
lods
dec
mov
pusha
outsl
and
popw
int
jle
jecxz
addr16
jns
insb
adc
jns
ss
popf
les
dec
clc
adc
fisubl
sub
xchg
mov
outsb
dec
test
cmp
ds
repz
jne
jmp
xchg
dec
iret
cwtl
push
aaa
push
add
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
cmp
inc
dec
add
leave
daa
repz
cmpsb
mov
pop
pop
jo
cmpsb
xchg
xlat
lcall
xlat
jp
mov
fldcw
sub
packssdw
push
inc
ficoms
out
js
xchg
adc
test
inc
sbb
insl
sub
imul
xchg
jl
cmp
jp
jb
and
ds
cmpsb
xchg
scas
test
dec
cmp
cs
sub
inc
lea
xchg
or
pop
daa
pushf
jae
xor
inc
sbb
pop
loop
pusha
fsubrl
pop
inc
add
or
add
jo
inc
lcall
and
mov
daa
pop
mov
test
mov
xlat
inc
mov
push
addl
fildll
push
jmp
jp
repz
enter
push
add
aam
cs
adc
inc
insl
pop
aaa
add
gs
push
je
loopne
bound
sbb
or
inc
rcrb
faddl
push
repz
mov
sub
mov
fists
js
movsl
cmc
push
add
in
jge
fmull
push
jle
pop
out
jl
ja
stos
xor
enter
sahf
popa
in
mov
sub
call
cli
lea
adc
mov
pop
les
mov
pop
aaa
lods
incb
nop
mov
pop
sarb
popa
xor
lods
lcall
lods
mov
int3
and
cld
rclb
in
cmp
sarb
xchg
sbb
cs
fbld
or
or
mov
lock
xor
test
cmc
sahf
es
fsub
rep
js
aaa
test
mov
into
call
push
shll
jl
push
aad
push
push
pop
cmpb
das
subl
mov
out
jo
dec
mov
xor
mov
mov
test
mov
xchg
mov
test
inc
fs
mov
fidivrl
jo
into
lcall
push
pop
adc
cmp
push
enter
mov
fadds
sub
jecxz
out
adc
or
or
ss
or
jg
fsubr
out
cmp
das
cmp
cmp
xchg
jae
in
xchg
test
sbb
or
push
sahf
jle
mov
add
in
dec
push
cmpsl
loop
pushf
xor
mov
dec
sbb
mov
cmp
icebp
cmp
cld
lods
add
fs
ljmpw
mov
outsl
push
push
stos
je
hlt
mov
push
das
add
pavgw
sub
xchg
push
in
cmc
js
mov
nop
jmp
lahf
testb
popa
data16
pop
xchg
push
cld
aad
or
mov
add
test
sub
xchg
and
jp
add
outsl
adc
popw
sbb
sbb
in
ret
adc
cli
je
icebp
mov
push
dec
xchg
ficoms
loopne
xchg
or
addl
stos
and
sub
jae
cmp
fsubr
jmp
iret
lret
neg
test
mov
pushf
or
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
pushf
dec
and
sbb
sbb
jno
inc
daa
or
and
fistps
pop
xchg
dec
dec
icebp
or
clc
xor
cld
jmp
mov
cvtdq2ps
push
lds
jne
jne
push
inc
sub
mov
mov
add
cmc
stc
aam
lds
inc
xor
loopne
push
pusha
cmc
mov
xchg
xor
sbb
cmp
mov
icebp
inc
add
cmp
mov
or
je
test
cmpsl
mov
pop
int3
repnz
cmp
push
cmc
ret
stc
pusha
aas
ret
push
pop
add
sub
rol
mov
stos
adcb
xchg
xchg
push
je
inc
daa
fadd
shll
adc
sub
push
loop
mov
push
pop
lea
jnp
sti
bound
jecxz
out
pop
in
push
mov
int
ret
lea
jl
mov
cmp
cmpb
scas
lods
repz
adcl
in
jbe
xor
push
adc
ret
push
pushl
push
adc
jo
push
lret
stos
adc
fld
push
arpl
jg
stc
jae
dec
movsb
shlb
jmp
push
xor
negb
aad
call
inc
dec
shl
in
icebp
out
and
or
insb
pop
jne
sub
push
mov
ud0
xchg
fucomip
adc
cld
jbe
mov
xor
mov
mov
xchg
sub
movsl
arpl
arpl
xchg
test
xor
rolb
out
and
dec
cmpsl
loop
lock
ljmp
es
mov
lcall
xchg
sbb
jae
or
xor
call
mov
popa
addr16
jno
repnz
sbb
jno
repz
pop
sbb
adc
and
cmp
fldt
loope
imul
pusha
mov
dec
adc
cmp
push
cmp
push
mov
add
stc
dec
or
inc
les
jp
jae
inc
xor
jne
push
sbb
xor
addl
mov
out
lods
gs
loopne
or
cmp
push
ljmp
cmp
pop
es
and
inc
or
rcl
push
pop
das
xchg
dec
aad
lahf
lcall
call
stos
or
out
pop
mov
mov
fdivp
or
add
xor
movsb
adc
nop
xor
pop
ret
mov
lahf
stos
sub
nop
jge
fidivrs
arpl
jns
pop
fsub
dec
add
outsb
aad
mov
add
adc
inc
cmc
clc
gs
pop
popf
bnd
ret
lock
dec
pop
mov
lock
mov
pop
insb
insl
fucom
jge
xchg
fwait
cmp
jbe
cmpsb
xor
lds
sbb
push
movsl
fcomp
scas
ja
idiv
iret
pop
imul
lods
adc
push
mov
cmp
mov
inc
add
mov
inc
cmpsl
jmp
mov
popaw
lret
cmpsb
movsl
es
sbb
into
fucom
cmp
and
xchg
add
bound
in
jne
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
das
mov
sbb
sbb
imul
xchg
or
xchg
subb
sbb
jb
xorb
sbb
add
push
add
xchg
pop
mov
dec
leave
mov
jle,pn
addr16
adcb
sbb
inc
pushf
pop
aam
dec
cltd
sub
mov
shlb
xchg
jge
or
neg
mov
stos
jmp
stos
je
lret
ss
jns
inc
and
stos
mov
mov
fdivs
adc
dec
testl
in
icebp
lret
sbb
arpl
sti
and
sub
add
mov
ja
jb
sahf
jne
cmp
je,pt
xchg
xor
loop
loopne
mov
pop
ret
pop
jg
mov
fisttpll
or
or
shll
ret
pop
stos
pop
or
sbb
fidivrs
inc
lcall
test
and
mov
cmp
andb
fsts
div
dec
ss
cmp
popl
lods
mull
rcrb
sub
fistpl
sbb
cs
imul
xor
xchg
test
cmp
and
and
pop
call
loope
sbb
pop
shl
fildl
ret
mul
out
and
dec
and
push
mov
add
jae
test
call
lea
repz
mov
jmp
push
les
pop
pop
pop
xchg
lret
push
or
sub
fwait
mov
dec
test
pop
js
pop
jp
adc
or
xor
and
jge
sbb
js
sbb
popf
pop
loope
clc
dec
repz
add
sub
inc
stc
jl
push
mov
repz
inc
push
push
mov
push
push
cld
cmpsb
leave
mov
cmp
sbbb
or
lods
jo
xchg
aaa
dec
cmp
int
ja
dec
and
pop
shll
push
aad
call
cmp
pop
repnz
xchg
test
movsl
push
ret
mov
sahf
mov
pop
out
mov
pop
addr16
mul
mov
mov
sbb
cmp
dec
stc
das
mov
cwtl
mov
cmpsb
xchg
jnp
sub
cmpsw
sbb
out
mov
and
cltd
mov
test
mov
stos
stc
insb
shl
push
jb
out
inc
aas
fildl
add
rep
cmp
lret
sub
lods
push
in
inc
xor
mov
push
roll
inc
dec
mov
cmp
leave
adc
leave
dec
js
movsl
pop
cmc
mov
stos
adc
and
jle
adc
jp
arpl
mov
jbe
ljmp
test
int3
jmp
test
sbb
fcmovbe
imul
mov
fs
nop
inc
mov
push
dec
daa
mulb
imul
ret
out
xor
icebp
je
ljmp
lret
push
mov
sbb
push
pop
mov
cmc
fcmovnu
push
pop
fimuls
or
clc
icebp
sub
out
outsb
stc
fstl
mov
cmp
sbb
in
sbb
lds
mov
repnz
repnz
out
gs
arpl
repz
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
sbb
fistl
sbb
adc
sbb
push
fistps
outsb
movsl
push
je
aas
rcrb
cmp
cmpsl
or
and
push
adc
addl
mov
sub
mov
fsubl
hlt
push
dec
test
cmp
frstor
push
sub
les
xchg
jbe
mov
add
int3
mov
push
sub
popl
xchg
test
shrb
lock
leave
cmp
and
jnp
pop
out
rclb
into
mov
cltd
or
test
sub
mov
lahf
cltd
pop
push
xchg
jo
insb
adcb
lahf
add
xor
or
imul
mov
mov
mov
leave
scas
adc
xchg
cli
mov
nop
ret
mov
sbb
pop
mov
scas
addl
orb
ss
aas
or
cli
adc
out
xor
pushf
xor
inc
jmp
pop
sti
cltd
icebp
mov
daa
rorb
pop
add
and
imul
lret
and
lock
push
test
cwtl
lods
sbb
ljmp
cmpsb
xchg
adcb
scas
or
stos
jo
sti
mov
or
icebp
in
adc
loopne
jae
mov
push
idivl
lea
mov
jmp
or
hlt
jle
jne
das
into
inc
mov
inc
inc
or
push
fisubs
stc
mov
outsl
into
push
sub
lds
imul
pop
aaa
out
mov
popf
cwtl
loopne
xchg
aaa
xlat
test
jb
adc
sub
xchg
mov
mov
inc
mov
std
mov
int
clc
nop
nop
rcr
push
pop
loope
sub
or
leave
sahf
out
xor
adc
xchg
adc
xor
xchg
jns
andb
mov
movsl
cmp
loope
adc
cmp
jl
or
jae
cltd
js
sub
adc
cmp
jne
flds
sbb
inc
popa
in
icebp
add
in
js
mov
nop
pop
aas
test
fstps
mov
wrmsr
cmpsb
imul
sub
cmp
popf
dec
repz
rclb
mov
mov
in
dec
mov
pushf
mov
sarl
addb
cmpsl
jecxz
add
add
jp
stos
xchg
xchg
dec
jb
sbb
or
mov
rolb
xchg
loopne
iret
pushf
cli
lcall
divl
les
clc
push
add
push
mov
loop
test
sarl
jo
adc
dec
pop
cmp
jmp
inc
cmp
inc
xchg
repnz
and
sbb
and
repnz
ss
loop
fdiv
lods
lods
mulb
sub
out
mov
or
fs
push
clc
sahf
fsub
cld
pop
shl
inc
xchg
loope
adc
fidivl
icebp
add
orb
out
mov
loope
mov
mov
jno
imul
movl
repnz
push
pushf
jecxz
addr16
shl
test
and
scas
sti
ds
icebp
push
add
cmpsb
push
push
stos
adc
lcall
inc
cltd
or
mov
out
aas
xor
push
and
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
hlt
jbe
mov
rcll
sbb
adc
sbb
pop
das
ljmp
jnp
xchg
xchg
in
ret
mov
dec
or
scas
std
ret
sarb
leave
lock
push
and
dec
leave
pushf
pushf
lahf
into
loop
ja
ret
inc
and
sbb
add
lods
add
cltd
push
fwait
sub
jecxz
sarl
mov
mov
lods
cmp
aam
cltd
dec
mov
adcl
or
or
daa
pop
push
mov
clc
js
stos
fdivrl
stc
jle
mov
lcall
pop
pop
std
xchg
ss
lret
and
xor
mov
or
or
cmp
dec
push
inc
bound
push
sbb
loope
push
jae
pop
adc
or
sub
out
or
inc
sahf
daa
lods
addr16
jge
and
cs
aaa
cmpsl
dec
popl
mov
int
mov
stos
mov
push
xchg
or
inc
pop
jb
data16
cld
xchg
sbb
xchg
push
cmp
push
pop
cmp
int3
sbb
push
loopne
pop
imul
add
inc
movsb
dec
fbstp
cld
adc
pusha
jns
test
sub
mov
shlb
xor
sub
mov
add
xchg
sbb
or
sub
pop
xor
in
xchg
loope
pop
inc
aaa
popf
mov
ret
jg
stos
ror
xchg
subb
lods
scas
xor
pushf
imul
adc
mov
sahf
add
fwait
mov
into
shrb
mov
in
lods
aam
leave
test
hlt
add
sti
call
scas
jno
or
jnp
pop
add
aaa
inc
mov
fldenv
fwait
xchg
shl
arpl
out
in
test
jb
cmpsb
hlt
les
repnz
rep
bound
lahf
test
sbb
sti
in
pop
inc
cwtl
mov
jns
add
xchg
in
lret
jnp
rolb
pop
test
xor
xor
jo
jp
jne
inc
lea
add
push
fs
sbb
mov
rol
add
ljmp
loopne
and
pop
jmp
jg
nop
jp
fadd
jle
dec
or
lret
push
adc
cltd
dec
mov
push
dec
inc
adc
cmpsl
int
lret
jae
xchg
js
cmp
shlb
aaa
cld
lret
jae
out
stos
cmpsb
xchg
rcrb
jmp
inc
or
push
shlb
sbb
outsl
popf
stos
xchg
pop
mov
adcb
insl
jmp
js
lods
stos
or
xor
lds
adc
jnp
mov
insl
out
push
into
aaa
ds
xchg
fsubrp
push
sbb
cltd
clc
arpl
adc
roll
or
or
jmp
jo
jb
mov
pushf
xor
mov
or
jl
or
pop
mov
mov
ds
jmp
pusha
adc
inc
xchg
mov
in
in
stos
imul
ss
adc
out
outsb
mov
jp
je
add
inc
inc
rep
sbb
repz
xor
outsb
push
out
sahf
xor
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
fistpll
int
sbb
adc
sbb
xchg
pop
test
icebp
pushaw
xor
add
cmp
dec
xchg
pop
adc
mov
test
jge
push
cwtl
je
bound
mov
pop
inc
sub
sub
pushf
push
addb
data16
inc
adc
cmp
movsl
xchg
adcb
out
lods
jns
es
aam
push
xchg
ficompl
sbb
leave
sahf
jb
shl
xchg
sahf
mov
mov
lods
jnp
push
add
xor
cmc
inc
adcl
push
cltd
xchg
mov
test
insl
imul
jnp
push
pop
adc
stc
fisubrl
insb
stc
mov
sub
pop
adc
sbbw
mov
loope
loop
aad
leave
stos
mov
cmp
cmp
push
cltd
les
out
mov
insl
xchg
jge
test
add
mov
hlt
call
mov
ja
sub
cmc
arpl
lods
xchg
mov
jmp
mov
push
sub
mov
mov
sbb
fadds
icebp
mov
inc
rcll
ret
fists
push
inc
jbe
mov
add
sbb
push
test
dec
push
xchg
cli
imul
push
mov
repz
mov
xchg
push
loop
mov
call
cld
ltr
add
insl
adc
pop
pop
outsb
out
fistpll
fs
dec
cmpsl
push
es
mov
shlb
out
popa
mov
lret
xchg
sub
xor
and
push
das
lods
cli
je
sbb
pop
arpl
call
mov
dec
test
xchg
leave
dec
fisubrl
loopne
push
es
popa
ret
pop
ja
inc
int
mov
and
and
adc
jle
ds
mov
adc
push
inc
cmp
mov
and
in
pop
xchg
lock
cs
clc
xor
sbb
xchg
xchg
push
or
push
hlt
rclb
pop
mov
jp
lock
or
in
and
sbb
jle
pop
js
mov
cmp
mov
mov
loop
testl
mov
jae
in
ret
jo
stc
jp
and
cwtl
cmp
popa
inc
mov
and
das
addr16
ds
dec
rorl
sbb
daa
cmpb
sti
ljmp
inc
rcrb
pop
std
and
arpl
xchg
ret
mov
mov
cltd
jb
dec
inc
adc
xchg
lcall
outsl
rol
xor
mov
imul
inc
pop
clc
push
adc
add
mov
add
inc
lret
mov
xchg
push
ja
test
dec
addr16
mov
xor
aaa
shll
mov
pop
jo
fucomi
into
jg
addr16
loopne
mov
jl
mov
push
fisttpll
lods
sub
inc
adc
bound
in
cmp
insb
push
or
adc
sahf
aad
es
mov
aam
mulb
pop
ret
enter
pop
jbe
fcoms
popa
cmc
ss
cmp
popa
mov
ret
ljmp
dec
xchg
outsb
sarl
outsl
mov
cwtl
ds
in
sbb
mov
add
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
sbb
jle
lds
sbb
adc
sbb
pushf
xor
or
dec
fimull
int
push
push
sbb
pop
dec
sbb
add
cmpsl
jmp
or
sti
adc
xor
pop
test
mov
jnp
push
xlat
xchg
leave
in
in
neg
mov
rcrl
clc
or
jp
and
pop
cmpsl
lahf
scas
or
subl
pop
movsl
adc
stos
push
pop
pop
leave
jne
dec
in
or
inc
iret
arpl
mov
jmp
inc
push
shr
jecxz
cmp
pop
adc
and
sub
inc
add
xlat
mov
or
mov
mull
mov
sub
ds
iret
lahf
inc
int
dec
dec
out
mov
call
int3
lods
das
out
out
mov
add
in
or
pushl
stos
fstl
cli
dec
sub
dec
sbb
cmp
and
out
push
mov
fs
push
fcmovnbe
incb
test
mov
push
arpl
rep
push
sub
in
fcmovu
ret
push
push
mov
ljmp
test
pop
jnp
call
leave
div
sbb
pop
mov
in
mov
add
mov
repz
mov
in
pop
cltd
fisttpll
out
cwtl
sbb
push
sahf
mov
arpl
sbb
ror
sub
push
sbb
icebp
xchg
sbb
xchg
mov
imul
stos
out
and
sub
ds
push
icebp
out
mov
push
popa
enter
mov
jb
data16
in
daa
sub
pushl
or
mov
jl
jb
xchg
push
sbb
lret
ss
addr16
dec
mov
or
popf
sahf
cs
and
mov
in
dec
icebp
push
inc
xchg
pusha
movsl
pusha
jmp
aas
ret
push
and
test
xchg
adc
mov
sub
mov
xchg
sbb
pop
dec
xlat
mov
inc
idivb
sub
adc
and
xor
js
mov
mov
dec
xchg
push
jmp
leave
pusha
testb
aad
jecxz
fcmovnu
mov
push
sbb
fstpl
push
imul
dec
adc
fsubrp
mov
pop
adc
dec
fldenv
adc
and
data16
lea
aad
inc
pop
movsb
lcall
test
fbld
stc
cmpsl
int
ficoml
pop
dec
outsl
mov
adc
out
pop
xchg
xor
jae
in
rorb
hlt
adcb
pop
jno
jb
xchg
cld
es
xor
jg
pushf
cwtl
cmc
fistpll
mov
mov
cmp
mov
mov
repz
jae
mov
cmp
adc
mov
mov
fcoml
xor
dec
mov
adc
sahf
jnp
bound
into
xlat
or
into
icebp
mov
cld
cmc
jb
adc
punpckhdq
dec
mov
int3
outsl
out
lods
int3
fistps
push
imul
stos
aam
inc
movsb
pushf
xchg
fsubl
add
adc
sahf
adc
clc
inc
mov
adc
lock
dec
mov
push
movsl
pushf
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
mov
sbb
xor
das
inc
rcl
push
fucom
mov
adc
lret
pop
ror
test
or
mov
pop
decl
dec
inc
push
dec
movsl
je
bound
ds
enter
push
stc
add
push
mov
outsl
addb
add
stc
xchg
aad
push
dec
fbstp
fs
mov
int
cmp
decl
shl
popf
iret
imul
cmp
jae
sbb
fcoml
add
mov
or
pop
insl
or
cmpsl
sub
push
inc
dec
mov
mov
ljmp
inc
pop
add
xorb
sbb
in
add
mov
imull
mov
sbb
and
pop
jno
inc
mov
imul
clc
into
hlt
test
xor
xchg
int
cmp
pop
ficomps
cmp
mov
cmp
ss
imul
lods
mov
push
sub
orl
aas
mov
data16
add
fisttpl
xchg
mov
rorb
ds
xor
jnp
mov
stos
in
das
push
aam
xchg
fldl2e
repz
jge
ficompl
ficoms
scas
enter
cltd
sub
sbb
inc
fbstp
ficompl
adc
out
lret
mov
push
mov
mov
adc
sarl
divl
xorb
std
stos
xchg
ds
lcall
pop
dec
and
imulb
xor
into
adc
and
loope
adc
leave
or
adcb
cmp
cmp
mov
insl
or
imul
in
mov
push
popf
jne
sub
pushf
xchg
stos
or
mov
and
pusha
iret
cmp
testl
neg
xchg
add
aam
mov
jb
dec
andl
push
arpl
rcll
push
jnp
or
cwtl
mov
cmc
in
mov
loopne
repnz
pop
sbb
xchg
cmp
es
dec
jmp
and
cmc
int
dec
dec
into
or
fwait
adc
mov
jns
lock
call
push
sub
or
leave
pop
addl
cmp
sub
jp
sub
mov
and
test
test
xchg
mov
cld
stos
clc
pop
int
daa
and
mov
lcall
pop
sbb
movsl
cld
mov
mov
ret
cs
or
loope
mov
sub
call
mov
xchg
hlt
jne
jae
inc
loop
loope
push
jp
addr16
ljmp
subb
jle
xchg
cmp
mov
push
sbb
adc
xor
inc
xchg
mov
sbb
add
xchg
lahf
mov
sbb
scas
xchg
test
out
ljmp
lods
lds
iret
dec
push
cld
adc
cmpsl
adc
hlt
lock
push
jge
mov
mov
cmpsl
sahf
lret
decb
test
in
dec
fcmovnu
out
or
mov
jne
popf
adc
fimuls
adc
mov
mov
mov
jo
mov
mov
fnstcw
mov
mov
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
mov
pop
lret
rorb
xor
xor
in
rcr
aam
sbb
sbb
cmpb
adc
xchg
ljmp
mov
xor
pop
dec
jp
mov
mov
xchg
movsb
fwait
mov
inc
cmp
test
jb
fsubr
rol
or
lret
mov
sub
fstp
cmc
fldcw
jb
pop
fwait
movsl
dec
push
sub
mov
jmp
cmp
or
out
inc
iret
adc
push
mov
mov
gs
hlt
lds
es
mov
xor
or
iret
ss
pusha
dec
mov
nop
adc
adcb
jl
loope
and
je
mov
ficoml
cmp
jnp
pop
cmp
or
xchg
jle
mov
lahf
adc
cmc
mov
outsl
adc
pop
or
fld
inc
add
loope
insb
sbb
adc
leave
arpl
out
mov
mov
pusha
or
icebp
imul
out
rcrb
mov
insb
sbb
adc
fdivs
jns
shr
sbb
bound
sbb
fwait
mov
cmp
adc
pop
mov
cmpsb
fidivrl
stos
mov
mov
and
ret
cmpsl
mull
xchg
sub
lds
add
sbb
popa
popf
dec
lcall
es
mov
cmp
and
add
fcoms
stos
es
jecxz
mov
add
jp
loopne
or
clc
dec
xor
jmp
mov
and
cmp
mov
sbb
xchg
pushf
add
movsb
adc
push
pusha
call
imul
and
jo
std
xlat
ds
pop
adc
jne
cli
push
enter
push
mov
nop
push
sub
pop
rcrl
xchg
fsubl
sub
jge
inc
mov
jae
jmp
push
aam
stos
nop
jp
in
cmp
ljmp
xor
xchg
scas
sbb
ret
sbb
adc
mov
xchg
outsl
mov
and
dec
xor
out
jecxz
mov
int3
mov
push
adc
repnz
int3
movsl
adc
mov
cs
shrb
cmpl
icebp
into
push
jl
cs
shll
pop
cmp
jge
sti
iret
insb
hlt
pop
aaa
pop
aam
int
mov
imul
fidivl
push
mov
out
inc
and
jb
ja
push
cld
dec
push
mov
push
pop
shrl
or
pop
adc
or
mov
push
mov
aad
dec
jp
xchg
int
inc
negb
and
inc
inc
mov
ja
pusha
pop
push
and
int3
scas
mov
inc
push
das
adc
iret
cmpsl
sarl
dec
ret
or
add
cmp
je
mov
aad
push
jnp
jg
fldl
outsb
xor
mov
aas
dec
sbb
xchg
or
inc
add
fmull
movsb
es
icebp
inc
mov
sub
fwait
into
bound
xchg
and
int
cli
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
aam
cmp
mov
sbb
aas
mov
jl
mov
js
pop
fwait
jle
call
mov
push
or
sti
int3
ds
pop
mov
lcall
fsubl
and
jbe
dec
stc
mov
add
cmp
out
ret
loop
loop
sti
adc
sbb
insb
call
btcl
adc
dec
pop
imul
pop
sbb
sbb
cmpsl
push
add
fnstcw
sbb
lods
xorl
lret
cmpsl
jbe
icebp
inc
jns
pop
jnp
aam
inc
mov
jae
and
push
push
pop
cwtl
ljmp
adc
xchg
in
cmpsb
inc
sbb
movsl
pop
imul
into
test
cmp
insb
xchg
xchg
adc
cli
shr
inc
ja
fcmovne
jg
mov
dec
or
xor
pmulhw
jns
aas
lea
notl
addb
dec
sbb
dec
jns
dec
lods
insb
jmp
rclb
inc
adc
adc
push
cmp
test
xor
mov
ret
clc
sarb
push
andl
imul
sub
xor
mov
in
dec
mov
cmp
loopne
xchg
xchg
inc
jl
pop
adc
loop
xchg
fsubr
cmc
js
rcrl
repz
mov
bound
push
mov
cwtl
xchg
test
ret
dec
inc
pop
adc
test
adc
xchg
shrb
mov
push
js
push
outsb
sub
cmp
inc
dec
inc
out
xchg
sub
ja
xchg
sub
inc
xor
scas
pop
mov
jle
insl
out
ljmp
push
cmp
andb
xchg
ret
fstpl
add
mov
hlt
cs
pop
fistpl
cmp
dec
mov
mov
lea
aas
inc
inc
inc
je
cmp
les
outsl
popa
mov
insl
xchg
repz
push
fmull
nop
sub
movsb
cltd
pop
pop
pop
lods
loop
cmp
mulb
adc
aaa
cmp
inc
sahf
mov
mov
hlt
push
clc
cmc
mov
movsl
lret
pushf
mov
jmp
cmc
add
or
es
mov
fwait
add
and
mov
std
mov
xchg
xchg
xor
mov
pop
add
imul
xorb
xchg
push
cmpsb
mov
ds
lret
sub
push
push
jl
loope
cmp
arpl
mov
dec
pop
out
sarb
push
addr16
or
push
ss
pop
xor
roll
sahf
es
cmpsb
xor
jge
daa
push
rcrb
imul
sbb
ja
roll
movsb
hlt
sbb
pop
popa
mov
pop
sbb
xchg
arpl
xor
xor
test
jg
inc
inc
sbb
and
jge
outsb
jge
fcmovbe
push
ret
bound
or
movsb
jmp
jmp
jg
divl
es
sbbl
pop
negb
gs
mov
mov
sti
and
aas
rclb
jb
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
iret
inc
push
test
sbb
cmpsl
in
adc
imul
xchg
je
jmp
xlat
push
jmp
xlat
add
test
cmp
ret
jmp
cs
dec
das
test
call
rcll
pop
push
jb
lret
xor
or
jnp
sub
or
mov
xlat
dec
test
in
into
xchg
fsubrl
adc
stc
mov
cmp
in
sbb
js
adc
jl
push
in
push
sub
gs
mov
insb
mov
dec
push
shl
fisubs
pop
test
loope
test
mov
lds
jp
dec
push
pop
jg
mov
scas
insl
insb
stos
push
inc
and
mov
nop
adc
jge
rcr
dec
dec
mov
mov
lret
mov
insl
push
mov
add
fwait
insl
fdivr
or
arpl
test
std
std
movsb
imul
jge
or
mov
push
in
scas
movsb
aas
aam
mov
cld
and
cmp
int3
fistps
push
mov
push
icebp
cwtl
or
rolb
stos
sub
repz
add
adc
dec
data16
or
push
icebp
mov
ret
push
dec
insl
sub
cmpsb
xor
fdivrl
mov
scas
jle
insl
push
out
mov
stos
in
mov
xor
jb
jmp
je
je,pn
inc
shll
shll
fbstp
aas
and
xor
jno
jecxz
mov
sub
mov
pop
sub
or
popa
bound
inc
adc
xor
or
outsb
std
cmp
push
lock
mov
out
xlat
sbb
rclb
or
xor
into
andb
dec
mov
xchg
cltd
insl
aam
insb
sbb
cltd
cmp
cmpsl
sbbl
in
lret
shlb
lret
scas
fwait
xchg
add
les
jbe
loopne
jmp
inc
fwait
cltd
dec
xchg
sbb
insb
out
cmp
or
or
sub
push
xchg
jbe
nop
dec
aas
mov
sbb
or
xor
mov
popa
mov
add
shl
fldt
rol
imull
mov
out
mov
push
xor
je
jno
dec
and
adc
sub
xchg
clc
inc
lds
pop
fadds
pop
inc
sbb
xor
gs
xor
inc
cmp
mov
movl
add
bound
stos
bound
dec
push
testb
jl
and
xor
pop
cltd
cld
jae
in
mov
fsubrs
add
mov
out
pop
mov
bound
je
pop
sahf
fld1
pop
adc
lock
add
pop
clc
outsl
jmp
arpl
jbe
sub
pop
mov
xchg
int
mov
fcom
xor
sbb
add
or
mov
xor
push
mov
add
and
xor
into
in
fwait
cs
xchg
imul
jne
fiaddl
jnp
adc
adc
repz
cli
add
dec
rorl
adc
mov
popf
sbbb
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
adcb
mov
and
sbb
sbb
add
sbb
outsl
flds
push
loope
cmp
xor
lret
cmp
arpl
inc
enter
dec
fiadds
je
xacquire
pushl
mov
repz
orl
cmp
xchg
push
pop
cld
jl
fisubs
push
adc
xchg
out
idivl
cmp
ja
lcall
push
mov
adc
xor
and
fdivrl
jge
mov
mov
mov
rcrl
cmpsb
jecxz
out
cmpsl
imul
insb
inc
xchg
cmpb
jo
pop
push
fucomi
divl
sbb
cmp
xchg
mov
popf
in
hlt
push
sbb
jl
cs
and
call
les
fdivl
ret
ret
cld
jo
pop
push
sbb
jmp
cs
outsb
popa
mov
cld
pusha
inc
dec
xor
or
notb
cmpsl
aaa
add
adc
push
mov
pushl
mov
push
adc
iret
jecxz
movsb
cmp
cmpsl
push
jl
mov
stos
adcl
and
out
fcmovbe
jbe
rcr
xor
scas
cld
dec
out
xchg
jno
sti
test
mov
fs
mov
cmpsl
adc
out
add
cld
in
pop
xchg
insl
sub
rcrl
andl
dec
shlb
stos
push
mov
lods
stos
add
mov
jmp
push
mov
arpl
lods
vpbroadcastb
bnd
js
icebp
test
scas
imul
scas
add
pop
add
push
mov
or
xor
cmp
ds
scas
js
inc
xchg
fsubs
testl
fnsetpm(287
dec
mov
pop
xor
inc
xor
push
add
sbb
daa
adc
and
jno
pop
shll
outsl
fdiv
iret
pusha
inc
stos
mov
outsl
inc
je
cltd
push
enter
dec
push
lods
dec
add
sbb
aaa
int
jae
mov
inc
dec
inc
subb
arpl
adc
out
shl
inc
cs
das
and
lea
sub
outsl
dec
scas
mov
pop
sti
das
mov
movsl
outsl
mov
test
stc
mov
loopne
daa
lods
imul
push
and
bound
inc
xchg
enter
mov
iret
outsl
lret
push
and
jecxz
push
add
movhps
rorb
fdivs
rorl
sbb
mov
out
adc
into
pop
stc
ret
fsubrs
filds
hlt
xchg
pop
jo
stc
movb
aad
loope
mov
sub
dec
or
adc
adc
imul
pop
ret
and
rorb
outsl
ret
sbbl
and
insb
adc
mov
mov
mov
daa
in
cmp
add
xchg
ljmp
cmp
fldl2e
fildl
hlt
cld
adc
clc
mov
pop
sbb
sub
xchg
jmp
std
xor
out
and
add
or
mov
adc
mov
fistps
mov
pop
inc
jae
xchg
mov
xchg
idivb
mov
xchg
leave
push
sbb
sbb
mulb
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
add
fwait
push
sbb
adc
sbb
addr16
sub
mov
add
dec
cs
data16
rcll
push
or
loopne
ljmp
xor
cmp
inc
mov
or
push
pop
xor
clc
je
sbb
cmpsb
popf
push
in
ljmp
lret
or
dec
adc
out
dec
add
add
and
mov
aad
lock
es
sbb
xchg
ret
dec
pop
sbb
fiaddl
das
inc
lcall
insb
adc
arpl
pop
mov
pop
shrl
hlt
iret
inc
push
dec
fisubl
popa
inc
push
push
into
enter
loop
xor
les
std
mov
nop
mov
icebp
xlat
ljmp
sub
and
sub
arpl
xor
xchg
sbb
mov
jno
repz
cmpsb
out
icebp
sarl
pop
in
mov
or
hlt
and
fistl
ss
out
adc
sub
rolb
sti
xchg
in
sti
fsubl
push
pop
mov
lea
js
mov
jno
test
cli
mov
roll
mov
test
je
mov
pop
cmp
push
sbb
mov
repz
push
push
jle
incl
mov
jns
js
out
cmpsb
mov
push
mov
ds
sub
xchg
cmpsl
mov
cwtl
xlat
jge
sbb
aaa
subb
sub
inc
adc
inc
sub
xor
sbb
lea
rclb
inc
jb
sbb
mov
mov
js
xor
jp
sub
imul
and
rcrl
fdivl
pop
int3
dec
or
bound
ret
xor
or
pop
mov
repnz
or
push
mov
mov
enter
pop
nop
aam
imul
lock
into
in
lods
pslld
insb
loopne
das
dec
gs
push
jns
push
push
xor
jge
mov
sub
subb
pop
aam
mulb
mov
lods
adc
jb
push
pop
test
popa
repz
ja
xchg
clc
test
jns
push
pop
rolb
xchg
icebp
inc
jne
out
inc
fdivrl
pop
or
inc
repnz
dec
adc
lods
or
or
gs
mov
lock
push
pusha
xor
int
insl
outsl
or
loopne
mov
cmp
sbb
imul
pop
jle
adc
dec
inc
inc
fcomps
pushl
push
pop
loopne
ret
pop
call
and
aam
sbb
xchg
outsl
daa
adc
ljmp
jbe
mov
sub
pop
pop
pop
repnz
adc
inc
sub
nop
cli
and
fs
or
mov
insl
dec
sub
fisttpl
loopne
cmp
call
xlat
loop
test
push
jb
xor
loope
lods
jae
mov
mov
testl
sub
lock
imul
jle
enter
inc
aaa
pop
mov
sti
push
pop
inc
scas
push
push
push
sarb
aaa
test
rcll
imul
xchg
addb
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
adc
sbb
adc
sbb
mov
xor
push
add
add
cwtl
enter
popf
pop
movsl
enter
out
das
subl
shll
mov
sub
std
fcoms
out
mov
pushf
jns
negb
fsubl
push
sub
xchg
bound
fs
mov
nop
bound
jg
outsl
jbe
lds
xchg
xlat
sbb
cmpsl
imul
jbe
mov
aaa
sbb
adc
cmp
adc
adc
pop
imul
xchg
js
fidivl
jp
rorb
repz
cltd
mov
adc
fisttps
scas
loop
repnz
inc
fs
mov
sarl
fnsave
out
cmpsl
cmp
lahf
inc
sub
or
repz
xchg
jnp
subl
mov
add
or
xor
mov
repnz
inc
cwtl
mov
xor
sbb
loop
jmp
popf
jecxz
xor
cltd
xchg
pop
sbb
pop
mov
popf
hlt
gs
stc
fs
lret
movsl
cmp
sti
jle
sbb
stc
jns
loop
jns
jge
ds
repz
test
jmp
push
mov
dec
push
mov
sbb
aas
mov
decb
repnz
sbb
sbb
cli
adc
iret
inc
mov
daa
mov
out
cmp
push
add
xchg
mov
xlat
aaa
jb
movsl
je
xor
popf
repnz
ljmp
aas
push
push
enter
sub
lods
popf
adc
cmp
xchg
xor
insb
cmp
add
pop
cmpsl
mov
mov
mov
inc
iret
adc
and
inc
mov
dec
sahf
aam
popf
mov
pop
adc
push
sub
popa
xor
fdivl
enter
imul
movsl
mov
add
lcall
rcll
push
fisubl
clc
push
movsl
jg
sbb
loopne
das
out
test
sbb
jmp
cltd
les
adc
inc
pusha
daa
jno
push
push
repz
add
add
out
insb
aaa
pusha
dec
sub
push
push
imul
sub
jg
inc
or
in
pop
mov
sbb
pop
ret
jmp
pop
mov
pop
mov
pop
call
pop
aas
add
sti
add
jl
or
mov
cmp
mov
inc
pusha
cs
jbe
jle
or
mov
mov
pop
in
xor
pop
lret
movsl
hlt
je
push
ret
loopne
pop
push
fcmovnbe
adcl
and
ss
mov
inc
iret
out
stos
mov
jbe
pop
data16
mov
dec
inc
dec
mov
js
ja
scas
inc
mov
lock
fcos
icebp
pop
or
fwait
sbb
out
push
shlb
in
sbb
pusha
scas
xchg
mov
mov
mov
popf
jp
std
std
mov
std
mov
mov
or
stos
and
mov
or
or
into
dec
jmp
or
outsb
aaa
popf
data16
icebp
push
repnz
and
sub
and
test
mov
pushf
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
jae
cld
mov
and
sbb
pop
ljmp
xlat
ret
inc
pop
cltd
push
shrb
mov
fstpt
pushf
sub
and
shlb
sbb
adc
in
cld
lcall
jl
rolb
pop
lea
mov
inc
sbb
sahf
pop
out
lahf
in
mov
dec
sub
push
out
cmp
ret
pop
pop
inc
mov
sbb
cwtl
push
inc
fstl
out
test
mov
pusha
jge
sbb
cmpsb
mov
lret
jae
inc
stos
test
pop
cld
fidivrl
roll
sub
ljmp
xchg
aas
pop
or
stos
mulb
aam
lea
sahf
and
sbb
cs
jb
sub
int
shrb
fcomip
dec
arpl
rol
es
movsb
leavew
sub
stos
daa
dec
mov
cltd
and
lods
daa
mov
or
push
pop
call
pop
leave
mov
fiadds
int
lods
mov
sub
js
ds
inc
ret
jle
out
sub
cmp
aaa
ret
jno
or
jae
aad
lea
xchg
insb
aas
jae
adc
shlb
leave
jns
mov
mov
aam
fistpl
xor
cmp
lcall
push
stos
xchg
sub
inc
cmpsl
data16
enter
test
sub
or
sub
xchg
jmp
cld
fstl
mov
aas
lods
bound
fldenv
jae
pop
mov
jl
repz
bound
xorl
gs
dec
addr16
test
shlb
jle
pop
sbb
hlt
das
jmp
mov
in
mov
xchg
sbb
into
mov
or
in
push
test
rclb
aas
mov
dec
mov
jmp
out
push
lds
or
cmp
cmp
aad
mov
fucomip
mov
xlat
mov
stos
clc
shll
cld
movl
enter
mov
call
mov
add
cmp
ja
dec
xchg
pop
inc
bound
bound
dec
out
aad
inc
shrl
int
push
and
sub
int
jge
and
xor
pop
add
mov
ficompl
hlt
pop
loop
mov
adc
jns
nop
push
jle
fistps
pop
push
pop
fnclex
adc
jnp
repz
decl
in
sub
lret
outsl
jmp
out
inc
sti
jne
xlat
and
hlt
gs
loop
js
pop
sahf
daa
arpl
sub
pop
push
aas
enter
cmp
test
mov
inc
push
jae
es
stc
and
inc
ret
mov
cmp
cmpsl
sbb
mov
xchg
add
repz
cltd
sbbl
mov
pop
xchg
jecxz
xor
add
push
ret
add
push
sbb
outsb
pop
loopne
xchg
sub
push
mov
popf
or
cwtl
gs
sbb
xchg
dec
mov
jge
loope
xchg
jb
adc
shl
ds
pop
rorl
cld
ljmp
scas
xor
adc
popa
mov
test
pushf
add
dec
jns
daa
xor
mov
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
inc
jecxz
js
push
sbb
adc
sbb
mov
sub
sub
leave
push
scas
mulb
adc
lock
imul
cld
sub
or
lahf
das
xchg
jb
arpl
and
sahf
hlt
xchg
fwait
sub
and
xchg
adc
arpl
jo
into
sub
jo
jge
es
sbb
inc
or
sbb
and
add
testl
xchg
push
int
fistpll
add
aam
ret
or
cmpsl
mov
iret
ret
mov
xchg
das
or
sahf
stc
xchg
cmp
push
jp
xchg
sub
jb
push
push
dec
and
xor
sbb
mov
mov
cmc
xor
outsb
mov
shl
data16
mov
shrb
sbb
aad
or
xchg
adc
sahf
cmp
sbb
cmc
outsl
sti
rclb
iret
xchg
sbbb
add
jp
xorb
mov
jo
fisubl
add
add
pop
adc
pop
xor
ret
pushf
xorl
adc
mov
sub
xchg
dec
dec
jle
inc
add
adc
loop
out
test
pop
push
cli
and
in
mov
rclb
xchg
aam
xchg
xchg
inc
cmpsl
imul
arpl
cmp
stos
push
ds
fsubl
xchg
cmpb
dec
stos
cmpsl
lea
mov
pop
subl
outsb
push
lods
sub
push
push
in
dec
push
subb
outsl
inc
xchg
test
lock
xchg
fistpll
inc
xchg
aam
sarl
mov
icebp
mov
dec
cmp
insb
pop
lods
call
pushw
mov
pop
xchg
fimuls
leave
xchg
push
add
and
lock
test
repnz
push
aas
mov
push
cltd
adc
enter
loopne
and
stos
xor
mov
add
and
out
ret
addr16
scas
xchg
mov
insb
jmp
outsb
pushf
adc
xchg
push
mov
and
push
enter
sbb
lret
push
movsl
popa
je
jno
push
xchg
or
das
or
in
rcll
cwtl
lods
xor
cmp
jle
adcb
enter
inc
scas
loop
dec
xchg
mov
int3
mov
mov
mull
imul
js
mov
mov
mov
aam
add
fwait
jb
mov
dec
int
inc
imul
hlt
pushf
add
mov
sbb
dec
pushf
inc
bound
inc
adc
ss
jge
cmp
gs
cmp
sahf
jbe
pop
popa
fs
inc
and
lea
decl
mov
mov
movsb
xor
sti
mov
pop
fstl
cltd
arpl
cmp
leave
cwtl
or
shll
mov
shll
aam
dec
pop
lret
insb
xchg
dec
js
or
lret
and
aad
pop
imul
arpl
std
adc
aam
rcll
addr16
mov
and
jecxz
and
sub
jp
sahf
dec
and
addr16
and
loop
sbbl
into
loope
cmc
adc
les
int3
xchg
xchg
out
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
xchg
mov
and
sbb
push
lods
sbb
sub
push
jge
arpl
adc
addb
push
add
or
jg
pop
cmpsb
sbb
xchg
out
pop
call
cmp
sbb
jo
mov
fdivs
lret
push
cli
sbb
test
cmp
pop
mov
push
dec
stos
inc
jmp
jo
pop
aaa
add
cmp
pop
lds
mov
pop
repnz
inc
pop
sarb
out
lret
mov
cmp
mov
mov
rolb
out
inc
dec
scas
xor
mov
out
es
and
sbb
pop
pop
jns
mov
hlt
mov
cmp
xor
sbb
mov
and
popa
pusha
lods
adc
xor
mov
repnz
mov
ljmp
aas
jmp
jbe
jecxz
xchg
test
icebp
repnz
imul
jb
aas
inc
lcall
push
rcrl
sahf
call
xchg
cmpsl
cmpxchg
xchg
xchg
sub
mov
test
sbb
or
pop
inc
sub
pusha
inc
pop
cmp
in
aam
outsb
sti
inc
adc
xchg
ret
stos
mov
cltd
push
pop
test
cld
jmp
jb
cld
push
shrb
xchg
mov
lahf
imul
rclb
int
mov
pop
jg
in
in
int
sbbl
fcmovb
inc
jmp
pusha
jns
mov
push
and
pop
scas
lods
sti
dec
push
or
clc
mov
scas
pop
xchg
out
jmp
push
lea
push
jo
arpl
sub
daa
pushf
xchg
loope
mulb
mov
sub
pop
pushf
sub
loope
add
dec
push
cltd
sub
test
cmp
imul
jge
dec
test
and
in
or
or
mov
jbe
adcb
sbb
push
mov
jecxz
out
sti
aam
jne
test
aaa
xchg
mov
shll
aam
stos
dec
lcall
in
pop
int
ss
orb
mov
jno
mov
pop
xchg
loopne
jae
mov
mov
unpcklps
push
or
pop
aad
cmc
addr16
lods
pop
mov
mov
cs
cli
add
nop
and
cltd
add
xchg
inc
mov
test
aas
mov
adc
sahf
out
mov
mov
mov
pop
gs
jb
mov
xchg
mov
jmp
or
mov
outsl
mov
sub
dec
movsb
stos
xchg
fiadds
jnp
addr16
cmp
cmpsl
sub
cli
std
or
frstor
xchg
ss
xchg
mov
jp
mov
daa
filds
fistpll
loope
fucomp
ror
addr16
fldt
dec
imul
add
jecxz
mov
shll
cmc
psubsb
mov
mov
mov
call
out
rcrl
jmp
sbb
inc
sahf
test
adc
push
cld
aas
mov
in
rcl
cmc
mov
pop
mov
or
lcall
pushf
pop
aam
repnz
fdivrs
cli
mov
adc
push
test
pop
push
pop
push
sub
cmpb
add
pop
scas
ds
loope
or
inc
xchg
jge
and
sbb
add
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
mov
jns
sbb
adc
sbb
and
cs
test
mov
pop
mull
out
mov
ror
add
test
icebp
hlt
es
decl
push
adc
sub
mov
imul
push
add
aas
push
adc
push
jge
or
and
xor
and
leave
nop
imul
enter
pop
cmp
dec
lock
pop
inc
inc
cmp
xchg
sub
xor
xchg
push
xchg
or
je
jge
sbb
mov
dec
insl
cmc
mov
sbb
mov
push
sbb
scas
popf
pop
out
clc
push
push
stc
jl
mov
mov
test
fdivrl
rcrb
sub
imul
stos
mov
mov
dec
adc
push
jo
outsb
aam
push
jb
inc
data16
ljmp
push
pushf
stc
ss
xchg
mov
stos
outsl
inc
ret
into
cmp
mov
pusha
or
xchg
jmp
xchg
das
pop
cli
or
pop
or
ljmp
mov
push
cmp
test
sbb
popa
cli
push
loope
stc
inc
or
inc
scas
dec
push
popf
jno
cmp
roll
cld
rclb
les
sbb
in
lea
add
enter
jmp
sub
arpl
je
sub
outsl
xlat
sti
lret
stos
pop
fiaddl
out
imull
loope
inc
sbb
aam
gs
cmc
jno
or
testl
jmp
mov
jg
pushf
insb
push
sbb
jp
adc
adc
mov
mov
cmp
addr16
or
pop
sub
es
out
testb
insb
cmpsl
add
jne
cltd
inc
fxch
loope
leave
out
xorb
jmp
push
or
cmp
lods
push
or
inc
mov
jl
and
jg
jp
jp
adc
mov
andb
mov
cld
mov
pop
inc
mov
loope
lcall
jg
fldcw
dec
sub
dec
lcall
push
dec
pop
mov
movsb
stc
ret
scas
bound
stc
adc
out
cmp
push
and
sbbb
or
cmp
out
jb
lret
and
sti
mov
add
mov
dec
loop
sbb
jg
fstl
pop
imul
cmc
inc
outsl
cli
pop
imul
push
rolb
adc
mov
das
test
add
mov
xchg
subl
xor
js
andl
push
cs
pop
add
gs
mov
jne
xlat
js
ja
dec
add
dec
pusha
scas
aam
mov
inc
icebp
jae
inc
sbbb
sbb
cltd
fdivrl
arpl
mov
sahf
inc
js
loopne
imul
mov
std
daa
mov
push
fistpll
outsl
inc
fidivrs
shll
scas
out
les
sbb
popa
or
or
shrb
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
jmp
jo
jno
sbb
adc
sbb
cmc
xor
pushf
and
adc
testb
ret
dec
in
mov
addr16
jmp
add
pusha
jns
or
sbb
pop
and
into
int3
push
mov
pop
out
testl
sahf
out
dec
lds
mov
stos
iret
or
lods
or
scas
in
sbb
ret
sub
add
jb
out
mov
movsb
out
xor
cli
loop
mov
xchg
sub
jbe
mov
jmp
ffree
popa
clc
sub
mov
fcomps
out
lret
aaa
and
mov
add
aam
fsubl
int3
stos
leave
out
or
or
jmp
lods
cmp
out
arpl
pop
into
dec
int
add
cli
shlb
in
mov
jp
sbb
aaa
adc
lock
int
aad
push
cmp
fnstsw
out
push
outsb
pusha
push
rcr
ja
js
cmp
inc
outsb
cmp
dec
imul
cmpsl
scas
jnp
decl
je
std
xor
das
jno
xor
add
or
bound
pop
add
popa
mov
mov
in
fs
out
adc
sub
imul
dec
or
int3
push
jle
xchg
fiaddl
pushf
dec
push
cs
adc
jae
pusha
aad
push
jmp
clc
sub
adc
dec
add
ret
popa
imul
push
and
adc
pop
iret
mov
mov
andb
stc
dec
adc
mov
xchg
cmp
pop
mov
insl
jnp
dec
jne
sbb
dec
imul
mov
cmp
dec
mov
sub
insb
aas
arpl
enter
popf
jle
mov
pop
addr16
gs
iret
nop
nop
add
mov
cmpsb
xor
daa
or
out
adc
in
or
xlat
cmpsl
dec
jne
int3
and
and
xchg
push
mov
xor
fsubr
adc
ja
cmp
xchg
lret
sti
sbbb
dec
popf
fst
sbb
int3
arpl
test
mov
pushf
lcall
shr
test
sbb
mov
mov
test
cmp
sub
mov
ja
dec
imul
sahf
int3
scas
xchg
inc
jl
fs
push
outsl
dec
ret
int3
test
mov
or
xchg
adc
sbb
add
push
inc
call
loopne
mov
sub
cltd
inc
xchg
dec
jns
jne
cmp
mov
xor
test
sub
mov
inc
pop
xor
stos
xor
add
test
jae
ret
gs
xchg
into
stc
jmp
cmp
leave
lret
mov
aaa
pop
lret
cmp
jge
aad
adc
push
inc
int
lock
rcll
jl
push
mov
mov
in
mov
arpl
lret
jmp
xor
push
ds
aas
xor
bound
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
and
stos
mov
adc
sbb
push
sub
pop
les
cltd
std
shrl
daa
icebp
popf
mov
or
fstpt
and
ror
dec
lock
jns
adc
sbb
popa
rol
test
stos
mov
mov
inc
dec
jne
cmc
mov
mov
out
xor
mov
and
std
push
jg
movsb
in
popf
xchg
stc
jmp
ds
jecxz
and
xchg
dec
xor
popf
add
popf
and
pop
xchg
mov
adc
jle
testb
das
sbb
cmpsl
mov
push
xchg
and
xor
sbb
mov
imul
adc
fimuls
xchg
imul
xchg
stc
cmp
mov
jg
lret
push
and
lods
push
xlat
lods
aam
stos
jnp
sub
dec
sti
push
fcomi
ja
test
clc
mov
mov
push
test
cli
das
jp
int3
dec
outsb
fnsave
sti
int3
mov
adc
dec
sub
in
shlb
test
loopne
sub
push
mov
mov
hlt
mov
push
arpl
loop
pop
sbb
xchg
mov
xchg
jno
adc
scas
jp
test
stos
jl
scas
dec
or
xchg
sbb
add
inc
xchg
pushf
test
dec
scas
sub
adc
jae
popa
pop
nop
jb
call
out
das
rcr
xor
cmp
ss
push
lret
inc
pop
sarl
outsb
push
repnz
mov
ret
icebp
mov
pop
dec
out
aam
stc
loop
and
fucomip
xchg
mov
add
aas
cmp
cmpsl
xor
jbe
push
dec
addr16
pop
jmp
mov
aad
cmc
xchg
mov
pop
sarl
push
mov
int
mov
xorb
cmp
movsb
mov
pusha
mov
cltd
orl
jnp
xor
hlt
mov
and
mov
loopne
cmp
aaa
aas
pop
js
xchg
js
mov
mov
movsl
fcompl
lods
sbb
cs
or
aad
or
insl
sub
dec
sbb
push
mov
push
out
fldcw
cmp
sbb
outsl
test
sbbl
jmp
movsl
jbe
popa
out
pshufw
inc
xlat
jp
shr
cli
scas
lret
dec
xlat
mov
imul
clc
and
ds
jecxz
hlt
sti
xor
pop
es
cmove
scas
mov
cmc
cmp
xor
dec
pop
sbb
in
mov
dec
fs
cmp
push
jae
out
fistl
mov
cmp
cmp
in
xor
lock
divl
fistpl
jno
pop
jg
in
and
test
ss
lock
dec
push
push
mov
mov
jmp
or
aas
cmpsb
push
je
cld
jecxz
sbb
in
dec
jl
pop
lret
or
adcl
gs
pop
xor
pop
decb
cwtl
mov
xchg
adc
ja
mov
ret
mov
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
xor
int
stos
arpl
sbb
adc
sbb
loopne
pop
movsb
and
ljmp
pop
jb
and
push
adc
jne
fdivl
call
data16
rclb
mov
mov
xchg
pusha
sbb
push
push
popf
pop
nop
outsb
cmp
xchg
push
rcrl
jnp
dec
rolb
mov
jle
std
cmpsl
sbbl
test
jg
xor
addl
xor
pop
fnstsw
idivb
cld
cs
add
mov
test
clc
fwait
inc
push
in
cltd
lret
push
push
jae
push
xorb
cmp
mov
aaa
les
insb
mov
outsb
cmp
aaa
mov
loop
fdivs
and
orl
jg
aas
adc
lahf
rorb
and
fiadds
loope
ret
bound
int3
jp
dec
sub
icebp
inc
cmp
std
mov
mov
dec
stc
or
fs
adc
cld
adc
cmpb
mov
or
pop
mov
xchg
dec
pop
sub
shl
stc
xchg
imul
push
xor
orl
sub
jge
sub
loopne
movsl
pusha
enter
nop
filds
jo
loopne
imul
bound
imul
jmp
sub
xchg
pop
mov
or
add
inc
int3
popa
jo
cltd
into
in
out
out
iret
repnz
pop
test
sub
lcall
ljmp
pop
out
outsb
inc
scas
leave
push
dec
add
pushf
test
dec
jae
push
loope
sub
fwait
jae
mov
inc
and
xchg
cmc
int
pusha
mov
push
inc
mov
mov
ret
cmpsl
or
jle
mov
mov
insb
fstl
mov
fs
jg
push
mov
dec
jo
insl
ficompl
iret
xchg
repnz
adc
xor
push
cmp
mov
test
iret
add
aaa
lea
xchg
jae
inc
xor
cmpsl
fs
test
movsb
and
insl
sbb
mov
lods
dec
xchg
test
in
popf
sbb
pop
loopne
loope
fadds
mov
stos
bound
sti
repz
push
xor
ja
push
mov
stos
lret
sbb
mov
test
sbb
loopne
jl
icebp
in
ja
add
pop
arpl
push
mov
pop
cmp
aas
rcll
or
lea
das
jg
hlt
adc
daa
mov
mov
outsl
out
pop
sbb
nop
cltd
inc
pop
imul
filds
mov
sub
mov
dec
add
jecxz
adc
cli
xlat
cmpsb
push
ljmp
mov
stos
lahf
jo
loop
push
sub
add
mov
inc
in
sub
mov
leave
cmp
push
cmpb
fidivrs
lock
mov
outsl
xor
pop
mov
sbbb
dec
in
out
rcpps
mov
cmp
pop
add
dec
ldmxcsr
loope
xchg
int
pop
lods
push
mov
int
out
arpl
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
dec
or
pop
push
sbb
adc
sbb
xchg
fs
xchg
xchg
push
mov
inc
mov
add
lods
jle
cmpl
add
jae
ss
inc
lods
adc
movsb
bound
pop
jbe
jae
jnp
iret
ret
xchg
mov
push
add
or
gs
adc
xor
stos
pop
jge
aad
xchg
cmpsl
mov
cpuid
out
ljmp
dec
add
pop
sub
fcomp
ret
fs
outsb
nop
adc
rol
or
mov
icebp
aam
test
addr16
sbb
roll
mov
fiaddl
out
dec
mov
or
xchg
add
mov
mov
pop
fsubs
enter
scas
sub
push
mov
cmc
inc
stos
pop
mov
movl
add
or
xor
int
adc
ds
pop
xlat
outsb
inc
lret
mov
and
lods
xor
lret
sbb
rcrb
cmp
mov
jnp
in
shlb
ret
lods
add
nop
mov
dec
mov
cli
sub
mov
jo
rcrb
and
les
ja
and
cmpsb
inc
mov
aam
andl
popf
sbb
scas
pusha
nop
clc
mov
or
mov
cmp
mov
loopne
lods
xor
cmp
cmpl
lock
cld
lds
out
test
xor
clc
jle
insb
mov
bnd
xchg
aad
or
dec
sub
add
adc
shrb
imulb
aas
mov
or
shlb
std
jp
adc
lods
push
aas
cmpsl
inc
out
scas
jge
mov
arpl
lahf
sarl
cmp
xchg
jnp
jge
inc
cmc
insl
shlb
xor
pusha
jmp
adc
pop
xchg
inc
cmp
inc
jecxz
test
ja
ror
mov
jns
insl
aaa
test
loopne
cli
aad
stos
lahf
jecxz
movsb
xor
or
dec
dec
lock
cltd
ss
xor
push
fnstsw
and
stos
rolb
testl
sub
mov
rcrb
jecxz
and
mov
jns
shll
sbb
dec
loopne
mov
in
mov
scas
lret
pop
lret
aam
xchg
fmul
fsubrl
add
cltd
adc
popa
pop
popf
out
fbstp
rolb
adc
xor
insl
push
sbb
mov
pop
sbb
xchg
je
data16
inc
jnp
sub
and
cld
push
cs
adc
jp
jl
cli
mov
ljmp
fidivl
inc
dec
cltd
xor
and
push
ljmp
in
aaa
inc
sub
mov
mov
mov
xor
pop
cmp
mov
xchg
lahf
jp
stc
pop
sub
mov
sbb
negb
fisttps
movsl
mov
push
scas
jo
fisttpl
test
push
adc
mov
into
fiadds
ret
movsb
lret
mov
or
jo
pop
call
js
stc
lea
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
push
sbb
sbb
adc
sbb
push
imull
lock
out
loopne
inc
dec
sbb
jnp
mov
rcr
add
pop
xor
movsb
shl
xor
mov
jbe
mov
jp
jecxz
das
shrl
in
icebp
adc
add
fildl
repnz
xor
sbb
inc
mov
pop
imul
xor
xor
mov
push
dec
test
add
jmp
roll
lahf
out
xor
in
xchg
notl
mov
gs
test
mov
mov
scas
dec
cmp
gs
in
mov
adc
int
push
or
pause
stos
int
xchg
xchg
push
outsl
daa
imul
insb
or
push
push
js
cmp
pusha
test
scas
inc
mov
aaa
aaa
fwait
xor
add
rcl
xor
inc
push
inc
mov
popf
clc
testl
push
popf
adc
das
mov
jae
outsl
xchg
divb
xchg
imul
mov
mov
dec
test
jmp
lahf
cmp
jo
sbb
enter
pop
or
lods
notl
mov
clc
push
cld
data16
jge
lea
pushl
data16
cvtps2pd
dec
lods
mov
loopne
mov
pop
stos
bound
mov
mov
and
jecxz
addr16
stos
pop
enter
xchg
int
imul
mov
mov
das
scas
jb
jbe
or
cmp
pushf
dec
mov
xor
inc
daa
xchg
movsl
push
mov
scas
test
popa
ss
sub
inc
cmc
movsl
mov
mov
inc
and
jecxz
pop
out
mov
and
imul
aad
jmp
jp
push
sbb
sub
mov
mov
cmp
cwtl
repnz
push
sbb
mov
fsts
cmc
inc
or
test
popf
lret
aam
imul
roll
scas
gs
fldt
cmp
xchg
test
add
es
xchg
cmp
cltd
mov
cmp
fmulp
lea
lret
pop
ja
loop
in
shll
fisttpll
push
add
inc
push
test
cltd
out
adc
ds
xchg
rclb
int3
les
sub
addr16
rcll
lahf
aad
lods
mov
ja
movaps
repz
push
or
dec
push
push
insb
pop
sub
pusha
jb
clc
negb
nop
mov
ja
pop
mov
subl
dec
pop
jno
pop
xor
shl
adc
std
mov
mov
sarl
xor
pop
mov
in
inc
nop
fldenv
gs
arpl
std
int3
stos
pop
into
lods
inc
push
fbstp
mov
mov
aaa
rorl
xor
sbb
jb
lret
push
push
call
xor
mov
sbb
sub
mov
rorl
xchg
in
ds
pop
mov
xchg
loop
xlat
push
or
add
cmp
push
push
jne
xchg
dec
dec
jecxz
xchg
push
cld
jg
je
pop
adc
call
jmp
stos
lcall
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
movl
sbb
adc
sbb
aad
outsl
and
es
cmpsb
cmpsb
dec
sbb
push
mov
mov
outsb
call
jbe
stos
mov
add
in
pop
int3
mov
jbe
mov
push
das
in
aam
loopne
mov
cwtl
add
roll
mov
push
shl
xor
sub
sbb
mov
inc
orb
cltd
jns
mov
ds
test
fisubrs
cmp
adc
pop
mov
xchg
arpl
fcomp
add
push
ds
testb
adc
insb
push
mov
scas
sub
int3
add
xchg
adc
fucomp
pop
ss
aas
mov
inc
or
loop
sbb
sbb
xchg
shr
jo
cs
jecxz
aam
jle
dec
xchg
jo
dec
stc
xchg
mov
and
push
mov
mov
sbb
out
mov
popa
insl
or
sub
pop
gs
xlat
pop
dec
sbb
jno
xor
mov
mov
ljmp
sahf
ss
aam
int
loopne
insl
xchg
push
movsb
inc
dec
iret
shl
cmpsb
sbb
push
xchg
xchg
mov
movsl
lods
pmaxsw
shlb
lcall
stos
push
dec
movsl
out
lcall
adcl
push
cmp
repnz
jno
xchg
jne
int3
iret
pop
push
dec
or
test
popf
and
pushf
testb
xchg
pusha
mov
push
push
xchg
add
or
push
push
stos
add
adc
xor
adc
xchg
mov
jg
and
inc
lret
cmp
jbe
test
fnsave
aas
imul
inc
adc
rcrb
lock
imul
pop
mov
mov
pop
mov
scas
les
add
popl
negb
repz
rcrb
inc
or
stc
aam
mov
pop
mov
xor
sub
imul
inc
sub
and
icebp
ja
pop
out
pop
in
loope
adc
gs
or
push
xor
loopne
dec
mov
jne
push
cmpsb
sub
jns
xchg
xor
push
ljmp
test
adc
aad
std
jmp
mov
cltd
mov
mov
shrd
pop
lds
lahf
je
hlt
in
add
nop
add
dec
jecxz
pop
xor
and
mov
add
push
or
jno
xchg
lret
sub
jbe
sub
and
ret
mov
push
adc
xchg
cmp
lock
add
sarl
mov
cltd
mov
xor
jl
mov
or
dec
imulb
stos
mov
push
fidivl
and
pop
sbb
adc
push
xchg
sbb
or
add
mov
call
pop
mov
rcrl
cmp
imul
adc
or
ja
aam
xor
inc
shlb
imul
cwtl
sti
mov
xchg
outsl
inc
aaa
sub
test
movsb
sbb
std
adcb
xor
iret
call
vmread
cmp
inc
push
lds
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
jnp
mov
and
sbb
icebp
shrb
inc
inc
std
xchg
je
aas
sbb
dec
out
cli
fsubl
mov
jns
cwtl
outsb
inc
testb
dec
cmp
jle
or
xchg
mov
insl
repz
dec
clc
out
negb
aam
iret
push
insl
cmp
insl
and
mov
clc
shlb
pop
inc
rcrl
sub
sbb
cmp
or
mov
stos
stos
xor
lods
xlat
push
out
aad
and
add
xchg
in
mov
mov
sub
sub
sti
jbe
xor
aad
mov
jno
mov
jns
mov
lcall
and
jl
ss
sbb
out
shrb
cmc
mov
inc
cmp
push
inc
cmp
jbe
pop
inc
mov
roll
sbb
ss
scas
xchg
or
adc
mov
divl
sbb
jl
mov
imul
int3
push
add
scas
orl
jo
pop
ds
dec
inc
inc
imul
jo
push
and
mov
ja
mov
xor
repnz
mov
and
mov
mov
pushl
in
stos
pop
sbb
mov
xor
push
inc
icebp
add
xchg
sbb
js
inc
mulb
lods
push
sarb
stos
mov
push
and
fisubrs
loope
aam
jecxz
mov
xor
push
loope
into
js
pop
enter
or
cli
push
ja
test
sbb
mov
repnz
test
mov
rorb
pop
jge
xchg
mov
or
adc
dec
add
pop
xor
fnsave
gs
sbb
jge
or
xor
subl
jnp
sub
fwait
pop
pop
mov
int3
push
loopne
aas
jo
rcll
std
les
mov
push
push
mov
dec
aas
sarb
push
xor
xor
add
movsl
push
cmp
sbb
lret
sub
data16
out
lret
pop
jecxz
cltd
ss
add
fsubp
pusha
test
out
inc
mov
inc
sbb
add
mov
lahf
pop
clc
adc
stos
loopne
loope
cmpb
mov
daa
cmpsl
jno
cmpl
cmp
cmp
dec
sub
fwait
cmp
push
out
in
mov
cmpsb
add
mov
cmpl
movsl
fnstcw
adc
sbb
mov
scas
inc
adc
jnp
addl
subb
xchg
in
dec
cwtl
push
mov
dec
cwtl
sbb
in
cs
nop
pop
jecxz
out
xor
inc
jno
mov
cs
sub
mov
enter
sti
jp
and
mov
xlat
fildl
mov
dec
jno
adc
or
dec
adc
ja
sub
xlat
pop
pushf
frstor
cmpsb
push
dec
dec
imul
dec
cld
repz
in
pop
add
mov
xorl
dec
in
mov
xchg
mov
fcmovnbe
scas
sahf
subl
repnz
pop
and
sub
mov
test
jle
add
mov
dec
push
int3
neg
push
andb
adc
jno
adc
or
das
inc
shr
add
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
jg
fidivrs
into
dec
ljmp
inc
popf
aad
add
test
xor
test
lods
lahf
xchg
add
or
push
mov
jbe
mov
je
cmc
jle
or
cltd
mov
adc
sbbb
mov
pusha
push
sbb
mov
jae
dec
inc
lret
je
jo
test
push
insb
sbb
aad
bound
mov
adc
lahf
fiadds
int3
mov
stc
inc
mov
cmp
push
out
push
push
cltd
hlt
cmpsl
dec
jbe
outsb
adc
cmp
cmp
xor
hlt
xchg
sbb
xlat
addr16
push
fisubs
dec
sbb
adc
mov
lods
jg
flds
and
test
fmulp
or
imul
mov
outsb
cltd
movsl
cmp
testl
jno
jno
lret
xlat
jl
dec
push
cmp
int
cltd
es
jae
gs
gs
mov
push
call
cmpsb
repz
xchg
jae
push
lcall
std
cvtdq2ps
pop
push
mov
sarb
fcomp
rolb
add
push
out
cmpsl
mov
xor
jb
xor
adc
jl
jge
decb
in
cmp
mov
cmp
out
and
mov
mov
icebp
pop
lods
dec
jns
mov
sahf
movsb
fucomi
clc
in
jmp
jecxz
dec
es
inc
das
outsb
stc
ret
jle
sbb
sub
pop
jl
jmp
fdiv
pushf
dec
lahf
cmp
addr16
and
pop
aam
add
push
pop
push
push
shlb
xor
fsubr
push
mov
shll
lea
pusha
stc
inc
out
bound
push
fs
in
test
mov
leave
faddp
out
rcrl
out
xchg
xchg
fsin
mov
push
loopne
pop
imul
pop
in
mov
push
insb
xchg
repnz
add
mov
rclb
jmp
xor
pop
cmc
negl
xor
clc
movsl
js
ja
jns
movsb
add
adc
add
cmp
mov
sti
or
andb
or
lret
xchg
push
jno
and
repz
mov
cmc
scas
popf
ljmp
pop
mov
jno
fwait
jns
push
pop
addr16
insl
jp
sbb
pop
xchg
push
add
mov
aas
out
xchg
jo
gs
sub
xchg
sub
jecxz
in
jmp
outsl
push
push
out
stc
adc
push
insb
mov
shl
dec
dec
xor
push
es
sbb
sub
push
and
or
out
aaa
jnp
incb
mov
mov
movsb
test
dec
adc
fcomps
hlt
fwait
stc
mov
sbb
jg
in
out
pop
inc
push
mov
jo
inc
push
into
test
cmp
xchg
cmp
js
mov
ficoms
gs
mov
faddl
jecxz
ficompl
sub
mov
cmp
add
lret
enter
xchg
and
xchg
adc
roll
call
and
mov
lds
mov
dec
das
dec
adc
out
and
test
pop
les
xchg
mov
daa
ljmp
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
stos
out
push
sbb
adc
sbb
inc
inc
sub
and
inc
dec
ja
xchg
xor
test
bound
outsl
repnz
rcll
je
cmpsl
and
out
in
ss
je
and
pusha
dec
adc
idivl
and
das
pop
add
xchg
ret
mov
jne
out
in
inc
push
rcrl
dec
int3
cmpsl
inc
push
xchg
mov
cmp
dec
std
fisttpl
mov
ret
push
dec
lea
test
jle
std
shlb
in
int
stc
mov
cmpsb
repnz
mov
mov
push
hlt
add
movl
adc
adc
ja
jne
adc
xor
in
jmp
outsl
mov
test
mov
gs
xchg
lds
push
lods
or
int3
or
dec
pop
jbe
imul
adc
mov
mov
xchg
jg
int
and
cs
wrmsr
cld
out
mov
cwtl
mov
push
mov
out
fmul
shrb
dec
mov
shlb
mov
fstl
shl
pop
cmpsb
lock
pop
push
pop
mulb
loop
fwait
sub
addl
int3
icebp
dec
lret
movq
adc
inc
stos
sti
out
mov
js
xor
mov
xorb
ja
sti
push
sbb
jo
mov
dec
mov
js
mov
pop
add
movsl
es
in
or
cwtl
add
pop
rcrl
lods
test
clc
push
scas
cmp
pusha
flds
pop
cwtl
std
mov
and
lahf
push
cmpsl
jae
mov
sub
divl
pop
inc
sbb
mov
or
cmp
lcall
jl
imul
pop
in
cld
push
int3
lcall
adc
imul
in
sub
dec
hlt
cmp
aam
xchg
add
cmp
aas
adc
xchg
test
ret
stos
gs
imul
ljmp
in
call
test
jp
xlat
adc
cmpsb
call
cwtl
push
pop
fsubl
pop
outsb
jne
mov
ret
cmp
or
test
xor
xor
dec
mov
inc
addb
mov
lds
jmp
cmp
adc
inc
adc
pusha
xchg
cltd
jae
adc
mov
clc
adc
mov
sub
call
ret
imulb
mov
ss
push
sbb
push
sbb
std
mov
xchg
add
ret
in
lea
insl
cltd
mov
sbb
pop
xor
xor
jo
push
push
push
push
lods
ret
mov
subl
fimull
loop
cmp
add
add
test
daa
int
fsubrs
movsb
jno
push
jb
jb
jg
xor
inc
xchg
pop
or
insl
and
gs
scas
push
out
or
push
fcmovnu
enter
add
add
mov
shll
out
data16
push
mov
nop
mov
jb
dec
popa
lods
cmpsl
pop
rcr
push
lahf
sarl
in
and
cmp
jp
mov
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
repnz
push
xor
sbb
adc
sbb
les
mov
push
out
mov
cs
xchg
xor
test
inc
in
pushf
leave
test
jge
and
les
in
and
xchg
xchg
sub
pop
add
mov
cltd
jo
add
adc
adc
sub
js
lret
out
and
and
aad
in
push
mov
leave
sbb
cwtl
add
movsl
scas
frstor
or
dec
jecxz
mov
mov
and
pop
ja
stc
imul
jmp
sbb
and
inc
rclb
cli
jae
mov
mov
or
movsl
and
or
jo
daa
adc
cli
jns
mull
xchg
cmp
lret
nop
lahf
inc
mov
dec
sbb
divb
in
fwait
sarl
cmp
xor
shl
cmp
mov
leave
push
mov
sbb
arpl
xchg
jg
mov
out
ficoml
mov
fldt
scas
mov
cs
sub
xchg
jl
imul
dec
and
in
xchg
jmp
and
out
xor
shlb
shlb
inc
bound
push
pushf
cmp
dec
mov
mov
fstpt
add
cmp
xchg
neg
loop
xchg
psubusb
add
xchg
mov
shl
dec
into
pop
mov
and
mov
push
ljmp
and
jnp
or
adc
jmp
jecxz
jne
insb
adc
cmp
adc
dec
mov
incb
ret
or
inc
ret
push
scas
mov
popf
pop
lahf
movsb
jmp
ljmp
mov
mov
fidivrl
push
pop
add
jecxz
push
sub
or
inc
dec
stos
mov
mov
cmp
out
lret
jns
fisubs
mov
movswl
adc
mov
xchg
fmuls
pop
mov
mov
adc
cmp
ljmp
add
pop
arpl
jmp
fwait
dec
mov
pop
sbb
push
dec
fdivs
and
lahf
mov
jno,pt
popf
imul
in
mov
pop
pop
loopne
mov
repnz
ficomps
enter
push
add
cmpb
sub
push
cmpsl
outsl
inc
add
xorb
ret
cmp
adc
in
in
jno
pop
lds
sti
adc
push
je
lods
psadbw
fwait
ljmp
and
jbe
sbb
mov
cmpl
cmpsl
stos
int
je
in
xchg
test
dec
adc
push
mov
xchg
pop
in
mov
adcl
mov
std
sub
fucomp
bound
mov
sub
dec
mov
inc
or
push
iret
cwtl
mov
nop
call
rsm
cs
mov
gs
cmp
adc
pop
sbb
movsl
hlt
cmp
test
push
nop
push
xchg
jge
sti
mov
dec
mov
lock
loop
jae
mov
and
popf
fsubs
ficoml
inc
xchg
aas
cli
popf
jecxz
jo
icebp
jae
inc
push
out
add
push
popa
jge
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
pop
inc
push
sub
sbb
adc
sbb
ret
mov
xlat
xchg
add
cmpsl
mov
imull
dec
sbb
xor
sub
fbld
xor
cmp
mov
mov
in
shrl
bound
ss
adc
pop
cli
shll
clc
mov
cmpsb
mov
ret
inc
sahf
test
aaa
imul
and
iret
arpl
adc
mov
mov
movsl
mov
mov
xchg
shlb
scas
sti
mov
jae
push
jb
in
pop
inc
mov
sbb
adc
je
inc
pop
xlat
pushl
pop
movsl
sub
mov
dec
jb
fisttps
push
sbb
jae
add
out
pop
pop
out
and
sbb
shll
push
idiv
adc
xchg
mov
adc
and
sub
or
cmp
xlat
sbb
or
or
cmp
or
test
xlat
pop
maskmovq
mull
sub
jb
or
sbbl
pmaddwd
xlat
jno
fnstenv
add
gs
dec
sbb
jmp
fidivl
cmp
pop
divb
adc
lods
sub
imul
ds
stos
test
push
dec
mov
das
push
push
push
aaa
jp
push
cmp
inc
xchg
mov
or
push
pushf
lods
outsl
jge
xor
ds
and
fidivl
mov
repz
inc
mov
dec
mov
push
ficoms
jmp
dec
and
sbb
scas
fdivp
ja
pop
aam
incl
jne
arpl
cmpsb
xchg
iret
fadds
mov
mov
fwait
add
popa
xchg
jae
inc
data16
xor
enter
fsts
sbb
cmp
pop
xchg
xor
push
inc
mov
test
add
lods
leave
xchg
xchg
or
xchg
ret
inc
fldl2t
dec
pand
push
inc
push
dec
add
aaa
push
ficomps
add
push
stc
pop
mov
cmp
mov
inc
loop
jbe
loope
andl
adc
fcomps
test
mov
mov
sbb
mov
stos
shrb
rcll
push
repnz
push
push
mov
dec
fmul
or
pop
dec
out
mov
lcall
shr
push
cli
push
popa
dec
shlb
or
nop
cmp
dec
scas
divl
neg
inc
jmp
mov
fwait
daa
cmpsb
sbb
sti
int3
inc
sahf
mov
aaa
sub
add
stos
push
lcall
or
or
cmc
sub
cmp
push
xchg
inc
push
xor
pop
mov
cmpsb
scas
stos
xor
xor
and
dec
cmp
inc
cld
cli
adc
push
fisubl
lds
std
fcomps
es
out
or
mov
popa
mov
scas
cmp
fs
mov
dec
dec
scas
out
ror
mov
pop
push
cli
inc
ljmp
ret
inc
push
dec
xchg
add
ret
sbb
xchg
sbb
inc
loop
mov
and
int
mov
sbb
loop
sub
sub
fcoms
bnd
add
dec
mov
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
add
and
sbb
push
popa
sub
popf
cmp
inc
out
pop
pop
mov
xchg
pop
mov
xchg
xchg
lret
jmp
outsl
xlat
inc
repnz
js
dec
rcrl
nop
gs
dec
pop
cmp
out
nop
mov
cmc
inc
pop
js
pop
add
cmp
pop
push
xlat
sbb
out
aam
jl
cmp
jo
mov
sub
stos
xor
arpl
and
cwtl
push
daa
and
jg
xor
jne
sub
dec
sub
cmpl
mov
xor
int
imulb
sub
jne
cmp
mov
add
sahf
icebp
inc
push
popa
bound
push
test
mov
dec
or
xchg
fs
in
pushf
fwait
xchg
inc
lods
cmp
and
fisttpl
ss
pop
ficompl
mov
inc
push
sbb
lds
mov
jl
dec
dec
cwtl
addr16
pop
or
mov
lret
loopne
addr16
push
lahf
lods
pop
xor
xor
pop
dec
add
out
test
lods
xchg
xor
pop
hlt
int
mov
ds
push
imul
out
add
or
xchg
jecxz
inc
cltd
mov
push
icebp
mov
imul
dec
xlat
js
arpl
inc
cmpsb
imul
add
or
sti
fidivs
push
push
fldcw
pop
in
cmpsb
sahf
xchg
cli
sbb
cmp
or
pop
xor
jo
shlb
or
push
int
aam
sbb
cmp
cmc
xchg
dec
std
fiaddl
xchg
hlt
dec
add
dec
sbb
xlat
fisubrs
or
mov
insb
lea
jbe
das
dec
inc
dec
mov
dec
testl
loopne
stc
cld
jp
jb
sahf
push
and
inc
insl
jmp
outsb
fldpi
out
xchg
int3
fdivrs
inc
insl
repnz
arpl
xchg
hlt
mov
movsb
xchg
add
or
inc
and
mov
mov
shl
pop
jg
pop
jnp
out
jecxz
mov
jp
dec
adc
jbe
ds
sbb
insl
or
clc
pop
mov
cmc
repz
ret
scas
ret
test
lcall
cs
call
lds
addr16
mov
sub
in
sub
jg
daa
jnp
lret
stos
mov
sub
iret
push
rcrb
sub
int
pop
stos
hlt
ret
and
lds
icebp
movsl
adc
sarl
sarl
add
jns
or
fisttpl
mov
jg
dec
cmpsb
cmpsb
shll
jns
daa
ficoms
or
sbb
out
ret
fiadds
push
ret
cmp
loope
fs
mov
add
rol
daa
orb
shr
test
in
inc
in
addr16
aad
xor
adc
dec
js
pop
lods
mov
jne
lods
rcrl
xchg
in
adc
xor
enter
addr16
cmp
repnz
fsubrl
outsl
mov
adc
pop
cmp
imul
xchg
fxch
inc
cwtl
push
rclb
xor
mov
je
pop
scas
add
mov
pop
push
sub
push
jecxz
add
cld
mov
cli
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
sarl
sbb
sbb
mov
mov
and
out
leave
movsl
inc
mov
vmread
fmull
xchg
jnp
push
sub
jo
sarl
jns
mov
inc
ljmp
das
dec
cli
cwtl
xlat
scas
lea
push
add
test
xor
mov
pop
pop
cmpsb
mov
jb
mov
add
test
adc
dec
in
mov
adc
pusha
jnp
aas
add
jo
lock
out
adc
sub
or
test
in
mov
loopne,pt
or
leave
pop
push
cld
sbb
scas
mov
bound
mov
mov
xor
lahf
into
adc
or
xor
test
dec
push
mov
shlb
pop
mov
jae
cmp
daa
shlb
push
xor
movsl
pop
inc
cmp
push
rcrl
jnp
jno
aad
pop
test
lret
cmp
sbb
rolb
testl
pop
ret
in
lock
mov
lea
in
sahf
pop
jae
sbb
dec
shlb
rcr
push
xor
test
add
fdivrl
add
jp
xchg
pop
jg
sbb
mov
jo
mov
mov
roll
fs
int
mov
jbe
sarl
lea
add
xor
sub
loope
enter
call
stos
inc
in
push
cld
cmpsl
cld
in
sbb
and
aam
add
in
mov
es
cmp
pop
loop
cmpsb
sbb
loopne
gs
dec
adc
dec
cltd
inc
shrl
push
in
shll
sub
jne
mov
adc
fdivr
jbe
mov
aam
lret
sarb
xchg
or
lods
dec
mov
pop
pop
frstor
shrb
notb
adc
cltd
jp
pop
ror
lock
pop
rcrl
or
pop
and
mov
ss
adc
ret
test
rclb
dec
mov
add
ret
out
push
dec
pop
cwtl
pusha
hlt
jle
sarb
sahf
loop
inc
nop
jnp
int
sbb
sbb
and
sub
loope
fcomip
fscale
aam
ja
sub
mov
push
cwtl
pushf
cmpsb
add
xor
inc
or
inc
mov
push
mov
cltd
inc
lds
shrl
inc
or
inc
dec
or
jns
or
mov
iret
inc
mov
or
sti
xchg
lock
lret
mov
lret
adc
mov
or
pop
add
cmp
out
popf
sahf
sbb
dec
push
mov
mov
int
jns
jnp
push
test
mov
jbe
jp
inc
jge
idiv
cmp
sub
loop
jle
add
arpl
dec
ret
ficoms
fmull
mov
push
je
mov
rcrl
sub
iret
jne
jle
ret
push
adc
stos
mov
insb
shrl
addb
adc
mov
mov
xchg
gs
cmp
stc
cs
aaa
dec
rolb
sbb
scas
lcall
or
jp
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
stos
sbb
push
sbb
adc
sbb
jnp
sub
mov
ja
jmp
testl
lahf
xchg
pop
xor
xchg
cltd
sbb
xchg
cld
lcall
cwtl
iret
jmp
fdivl
inc
outsl
fwait
cmpsb
xor
ja
out
add
into
mov
add
push
sub
test
fstl
or
add
and
nop
scas
aas
add
aad
dec
push
in
frstor
jge
imulb
xchg
pshufw
cmp
cmp
ret
shrb
sbb
add
or
into
or
mov
cld
rolb
push
dec
push
incl
or
push
call
repz
dec
fs
sbb
pop
test
addr16
fstpl
mov
add
imul
mov
push
les
dec
sub
push
sub
lahf
mov
add
mov
or
test
in
cmp
cmpsl
leave
imul
add
mov
mov
mov
push
lret
into
rolb
movsl
mov
jb
mov
xor
mov
sub
xor
daa
ds
andb
xchg
mov
jmp
lret
popa
pop
mov
lret
in
repz
mov
int3
dec
leave
xor
cmpb
mov
divl
nop
in
shlb
mov
sti
shlb
or
movsb
push
stos
xor
out
xor
arpl
or
mov
out
je
aam
movsb
mov
fbld
cltd
push
js
shlb
cmpsb
pop
subb
insb
shl
xchg
jns
imul
sbb
imul
mov
inc
jle
jae
inc
and
jmp
pop
mov
push
mov
push
push
jge
mov
aad
push
push
pop
into
cmc
es
icebp
arpl
sbb
roll
mov
stos
pop
inc
arpl
pop
pop
mov
inc
fstl
sbb
add
mov
inc
and
out
add
in
std
test
mov
repnz
mov
push
jge
add
and
xchg
and
jmp
push
outsb
pop
jbe
mov
adc
repnz
xor
mov
mov
cmp
cmp
daa
lods
ret
mov
mov
push
insb
mov
aad
insb
jne
lret
push
stos
test
sbb
ficoml
aam
or
jecxz
push
mov
mov
stos
jbe
mov
jo
cmpsb
std
inc
or
mov
lods
xchg
jecxz
ja
or
imul
andb
sbb
bound
outsb
xor
dec
ret
dec
ret
loopne
inc
sub
or
jbe
pop
cmpsl
mov
adc
add
dec
cmp
out
add
leave
insl
std
les
int
sbb
fsubr
cwtl
push
pop
daa
repnz
adc
and
add
mov
add
push
jmp
les
sub
jnp
xchg
jmp
xchg
addr16
addr16
scas
adc
cld
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
cmp
and
push
sbb
adc
sbb
push
fistpll
dec
aaa
popa
sbb
in
sbbb
in
pop
and
xor
movsl
gs
mov
fdiv
jg
cmp
fstps
mov
xor
xor
clc
add
push
in
pop
xor
call
xor
repnz
mov
pop
pop
or
int3
inc
pushf
cmc
push
push
or
mov
add
cs
pop
push
popf
or
sbb
outsb
mov
xchg
jb
push
aaa
test
lret
fnstcw
cmp
stc
rcrl
fidivrs
adcb
aas
insb
ror
push
data16
into
shrb
jg
mov
and
inc
fnstcw
add
dec
push
push
aam
dec
loop
and
pop
mov
out
sub
fcmovnu
jno
adc
lods
adc
cmp
nop
add
fstl
adc
cmp
nop
mov
push
rcrb
outsb
jns
mov
cmc
imul
sbb
gs
ret
jg
sub
mov
addb
hlt
jmp
push
inc
push
mov
cli
ja
push
enter
xor
xchg
jno
ds
test
mov
xorl
lock
fstps
mov
outsb
xchg
add
imul
mov
test
add
sub
vpsubusw
xor
dec
imul
adc
sti
pop
xchg
or
jbe
push
push
xchg
mov
bound
sarb
sub
imul
scas
rcll
mov
shll
pop
xor
jns
rcll
push
add
fnstenv
mov
jle
sbb
xchg
push
jecxz
dec
add
aaa
les
icebp
jle
inc
cmp
mov
sbb
lahf
push
cmp
jecxz
push
xchg
xchg
and
ss
fidivl
addr16
leave
ss
sahf
ret
scas
stos
mov
mov
sbb
mov
adc
cld
adc
jbe
dec
int3
fcomi
lods
and
mov
ja
jecxz
inc
xor
mov
or
mov
in
std
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
mov
add
stos
xchg
add
nop
add
add
add
mov
add
push
nop
add
or
add
and
add
faddl
add
add
add
add
clc
test
add
xchg
add
cld
test
add
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
in
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
cld
daa
inc
add
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
insb
and
add
inc
add
sub
fs
add
inc
add
daa
inc
add
daa
inc
add
inc
add
add
daa
inc
add
es
add
push
movsb
scas
or
movsb
jl
inc
add
inc
add
inc
add
add
add
inc
add
es
add
es
add
inc
add
inc
out
in
inc
add
es
add
xchg
mov
add
inc
add
rcl
pop
xor
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
pusha
and
add
sub
add
add
scas
lcall
das
dec
add
pop
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
fiadds
inc
add
addb
addb
addb
addb
addb
addb
addb
addl
or
inc
add
addl
sbb
inc
add
addl
mov
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
addl
out
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
incb
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
jbe
inc
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
test
add
add
xchg
add
lods
test
add
test
add
test
add
test
add
test
add
test
add
xchg
add
add
xor
add
inc
xchg
add
add
add
push
xchg
add
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
add
jle
add
mov
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
je
add
mov
add
mov
add
ret
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
inc
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
bound
add
mov
add
add
add
mov
add
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
add
jl
add
xchg
mov
add
add
rorb
add
testb
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
