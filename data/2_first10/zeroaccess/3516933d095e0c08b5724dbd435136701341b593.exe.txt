push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
jae
push
jp
jp
xlat
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
xchg
dec
mov
faddl
xor
mov
sbb
cmp
nop
mov
jmp
or
xchg
jl
mov
xchg
loope
fs
dec
ja
fidivl
sub
xchg
test
adc
into
lds
xchg
sub
enter
mov
in
inc
out
in
movsl
sbbl
test
and
into
aam
xchg
cli
es
das
adc
cmp
movsb
push
orb
and
xlat
jmp
in
mov
popf
xor
jl
adc
adc
out
sub
cli
repz
stos
push
shlb
xlat
mov
and
or
sub
jbe
adc
cwtl
cmp
cmp
loop
pop
or
fistps
xchg
mov
cwtl
mov
roll
fwait
testl
pop
or
movsl
call
mov
mov
stc
pop
orl
dec
jle
mov
push
inc
pop
lods
xor
test
add
jbe
lea
mov
cwtl
lret
fsubs
lcall
cmpsl
add
repz
push
test
push
fld
mov
pop
clc
lea
dec
sub
mov
dec
movsl
inc
jns
sub
ret
xor
inc
xor
adcb
xor
jne
mov
test
in
push
cli
popa
mov
jge
bound
adc
mov
ret
and
mov
test
lahf
sub
mov
imul
lds
in
seto
loopne
loopne
sbb
addr16
in
mov
xchg
pop
lea
repnz
push
mov
into
and
xor
test
or
xchg
loopne
cmp
ret
rcr
add
or
mov
into
and
popa
jb
mov
mov
stos
push
call
int
push
fidivrl
call
lret
jmp
dec
mov
sbb
repnz
movsb
cmpsb
cs
add
icebp
fidivs
mov
mov
test
ffreep
fdivl
cmpsl
movsl
dec
pop
and
lods
es
out
xchg
arpl
ficomps
iret
or
test
xchg
in
adc
xchg
sub
ret
pusha
frstor
jl
into
mov
sub
push
packsswb
icebp
dec
mov
iret
dec
shlb
jmp
mov
jno
push
push
insb
pop
test
arpl
int3
aad
mov
xchg
xor
push
divl
add
movsb
dec
or
shr
jne
popa
sub
jge
mov
mov
sbb
dec
push
shlb
mov
mov
cmp
mov
fisttps
fucom
hlt
movsl
je
xchg
roll
mov
ja
movsl
sub
lock
insb
gs
sahf
pop
and
cmp
jbe
dec
xor
sub
inc
xchg
dec
pop
ljmp
mov
in
adc
push
add
fwait
pop
std
inc
xor
xor
fstpt
arpl
insl
mov
cltd
test
lret
fmuls
jnp
and
jo
mov
and
in
pop
aam
pop
push
jecxz
lcall
mov
mov
hlt
fildll
xchg
push
sub
push
inc
lods
aas
inc
mov
xchg
dec
pop
aas
ja
rcrb
inc
or
dec
xchg
fdivs
das
push
and
push
or
mov
mov
fiaddl
stc
or
fstps
xchg
idivl
fisttpll
dec
pop
popf
xchg
call
lahf
inc
jbe
jo
hlt
sti
aad
pop
testl
fs
cs
cmp
mov
xchg
daa
into
add
pop
xchg
popf
sahf
add
dec
sbb
jnp
jno
mov
pop
inc
mov
out
or
jo
sub
sub
adc
xchg
and
test
shr
fisubrl
xchg
and
jmp
sahf
fcomi
popa
subb
xor
add
rorb
push
xor
inc
or
jb
cmp
addb
arpl
pop
xor
mov
rcrb
and
push
mov
and
cli
out
pushf
mov
or
fwait
adc
in
adc
int
sbb
stc
lret
jno
cmp
pop
jnp
ret
ds
cmpsl
xor
sbb
fbld
and
mov
push
scas
aas
daa
fsubrl
aas
popa
cmp
inc
orl
shrl
and
jecxz
clc
daa
scas
out
icebp
mov
push
add
and
adc
mov
popf
in
sbb
sbb
shlb
in
nop
adc
enter
adc
pop
in
loope
cmpsl
pop
imul
adc
and
adc
dec
jne
add
xchg
push
or
out
stos
stos
popl
das
jp
fnstsw
mov
popa
lock
ljmp
push
rcr
loop
fimull
dec
cmc
stos
or
popa
add
cmp
jmp
movsb
cs
sqrtps
add
stos
mov
adc
je
jecxz
fcoml
cld
sub
nop
movsb
inc
push
push
fwait
lea
int
es
bound
adc
aaa
stos
jno
hlt
push
sub
cwtl
sub
scas
mov
scas
pop
fcom
sbb
std
test
daa
repz
jle
es
jle
mov
jnp
repz
or
xchg
lahf
xchg
xchg
jecxz
aad
dec
repz
add
and
sahf
jbe
push
dec
cmp
push
aam
sbb
in
sbb
iret
icebp
mov
mov
aaa
lods
lahf
mov
push
or
andl
and
sbb
stos
lea
dec
into
pop
test
jecxz
sbb
jge
jnp
xchg
fstpl
adc
popa
xor
adc
es
fs
call
outsb
push
sub
and
mov
inc
loopne
js
add
xchg
adc
sbb
pop
add
into
lods
aas
dec
sbb
jns
and
inc
hlt
movsb
lods
jecxz
adc
jb
inc
insl
lahf
jno
jg
outsb
mov
pop
notl
cmpl
test
mov
clc
call
pop
dec
lds
pop
xchg
out
dec
cmp
lods
xchg
dec
negl
nop
cld
jge
mov
sbb
fadd
aad
cwtl
fcom
inc
pop
nop
lcall
popa
add
pop
ss
nop
fsub
cmpsl
push
popf
jno
and
inc
popf
fmuls
loope
divl
sub
fistpll
dec
mov
lods
int
or
xchg
test
test
cli
dec
fildl
xchg
cltd
mov
in
adc
aad
fwait
out
inc
sbb
push
lods
mov
arpl
imul
jp
lahf
inc
aaa
add
test
xor
xor
lea
inc
mov
out
enter
popa
xor
push
xor
jle
jg
fdivr
mov
adc
pop
jge
sub
imul
stos
mov
mov
int
lods
rcrl
lods
in
push
inc
push
pop
daa
or
add
sbb
inc
int3
pop
fs
ljmp
xor
mov
fnstsw
jns
ja
lock
outsl
xchg
in
test
insb
adc
inc
dec
into
into
test
jno
rorl
ret
xchg
mov
decb
dec
xchg
out
data16
xlat
and
mov
or
mov
fsubrl
add
pop
xor
jle
outsb
outsb
stos
mov
aaa
xchg
and
and
test
xchg
pushf
sub
jae
mov
mov
dec
les
pop
dec
pop
add
stos
repnz
push
adc
inc
push
popf
pop
ja
mov
clc
in
mov
enter
hlt
iret
and
ja
mov
paddsw
icebp
add
addr16
and
or
jo
push
bound
aaa
movsb
inc
lahf
inc
sahf
test
ror
fwait
repz
push
fsubr
jmp
cmp
mov
cmp
pop
pop
aaa
cmp
dec
push
in
add
sbb
xchg
or
mov
adcl
and
cmpl
mov
or
je
mov
fnstsw
inc
repz
push
aad
sbb
push
fldl
push
decb
lcall
mov
inc
lods
sub
in
fs
in
shll
fsubr
scas
cmp
sbb
inc
incb
addb
sarl
and
pop
push
ret
loope
in
out
cmp
rorb
sub
add
or
lret
out
inc
inc
lcall
dec
out
xchg
das
mov
jns
xchg
pop
inc
popf
imul
shll
push
sub
pop
push
dec
and
push
sbb
sbb
inc
outsl
mov
and
loop
mov
test
pop
mov
rorl
cmp
test
jb
cmp
aaa
repz
xor
int3
and
sahf
sar
cltd
push
les
fsubrs
lea
out
mov
inc
jl
test
aas
ficompl
ds
or
stos
loopne
fwait
stos
cmp
lcall
mov
aas
rcr
mov
movsl
mov
inc
mov
out
popf
push
vmulss
dec
bound
jmp
xchg
div
out
pop
adc
test
call
dec
sub
icebp
mov
lods
repz
jle
jno
in
ja,pt
in
lret
imul
in
xchg
dec
push
out
pop
inc
popf
adcl
cmp
std
jae
pop
bnd
fs
stc
rcl
adc
fstps
clc
testb
mov
popf
lock
scas
xor
bound
lahf
mov
insl
leave
and
lahf
mov
sti
call
ret
int3
sbb
dec
inc
movsb
inc
int
sbb
lock
push
sub
jo
and
mov
dec
mov
movl
dec
cmp
sub
jmp
call
inc
xchg
mov
je
mov
fcoms
jns
mov
jbe
xchg
dec
mov
pusha
lcall
fnstenv
inc
xlat
adc
jo
arpl
jecxz
ja
jp
out
cmc
sub
pop
xchg
push
jmp
mov
das
sbbb
mov
xor
repnz
loope
fs
fldl
cmp
push
enter
push
inc
test
lods
inc
mov
mov
sub
xchg
rcll
adc
xor
icebp
clc
aaa
push
pop
add
cwtl
or
cli
int3
in
mov
mov
mov
cmp
sub
cmpb
call
mov
push
imul
lahf
adc
push
repnz
mov
jnp
cli
jecxz
aas
nop
dec
push
push
mov
ds
mov
fldenv
inc
fisubs
pusha
jl
movsl
xchg
mov
popa
sub
jle
or
subb
inc
jb
daa
fwait
dec
ss
xor
ret
loopne
and
clc
aad
test
int3
aam
xor
pop
pop
movsb
jecxz
sahf
out
inc
iret
fistps
aaa
mov
pusha
or
sbb
and
cmp
fneni(8087
dec
inc
cwtl
fistps
dec
dec
add
je
outsb
out
gs
jge
mov
pop
loopne
hlt
cmpsb
scas
addr16
add
pop
fisubrl
push
sbb
test
cmp
jp
xchg
rclb
or
jbe
cli
lret
call
jbe,pn
outsl
popf
mov
jns
mov
jb
push
push
jno
adc
sbb
and
push
dec
mov
lahf
pop
pop
xor
xchg
push
mov
push
adc
xchg
in
push
and
fimuls
inc
ljmp
cmp
leave
and
es
adc
repz
mov
lea
insl
mov
pop
ds
ret
cmp
cmp
or
arpl
cs
shrl
jmp
jmp
mov
add
push
jmp
fidivs
mov
push
in
int
adc
test
inc
sub
xchg
pushf
cli
mov
fdivs
mov
jnp
mov
adc
lods
popf
cwtl
and
push
das
xor
fwait
nop
lahf
bound
outsb
pusha
cmpsb
out
arpl
test
roll
rorb
jg
rcrb
jne
jae
ja
test
xor
and
inc
dec
pop
dec
xchg
lock
mov
and
add
xorl
cmp
cmp
pop
mov
movsl
jo
push
and
add
lcall
orl
fs
jmp
mov
xchg
mov
out
sbb
adc
jnp
and
mov
aaa
sbb
cld
mov
ds
rcrl
cmp
jle
cmp
or
inc
fistl
dec
sbb
pop
xchg
mov
sbb
mov
cmpsl
insl
movsl
dec
add
and
fidivl
pop
and
stc
lods
cltd
out
jo
mov
into
inc
les
jo
lret
hlt
push
gs
xchg
push
ja
add
or
or
mov
add
int3
lret
negb
in
leave
push
push
mulb
inc
ror
repz
inc
arpl
xor
mov
mov
mov
lcall
andb
push
cli
outsl
stc
dec
ret
leave
nop
adc
fbld
dec
jo
cmp
push
stos
das
jno
push
cltd
push
inc
test
cltd
lods
dec
imul
adcb
jbe
ret
std
je
ja
inc
push
xchg
stc
xchg
aas
ja
push
inc
mov
in
pop
imull
push
mov
dec
xor
fwait
sub
push
imul
add
push
cmp
pushl
push
leave
push
mov
add
xchg
stc
mov
or
and
jb
jb
mov
popa
test
mov
inc
mov
notb
mov
lcall
dec
jne
xor
cmc
test
pusha
pop
sub
inc
cld
jmp
test
xlat
pushf
mov
mov
setle
repnz
push
jb
shlb
in
popl
rdmsr
xchg
bts
jno
dec
dec
jo
jl
pusha
stos
nop
jns
jmp
xchg
loope
add
inc
outsb
adc
pop
out
cltd
test
aam
xor
shrb
sub
imul
ficomps
into
xchg
out
ss
mov
fisubrl
sub
push
jecxz
xor
lea
pop
jecxz
mov
lret
shrb
cs
das
clc
sub
cmp
shl
lds
insb
sub
dec
mov
cmpl
jne
adc
es
xchg
xchg
dec
clc
adc
mov
or
fbld
push
dec
scas
xchg
dec
adc
mov
add
push
or
pop
icebp
mov
test
xor
outsl
pop
imul
mul
in
leave
outsb
rol
rolb
stos
stc
hlt
adc
mov
adc
fnstenv
ljmp
roll
add
cmpsb
test
pop
adc
mov
mov
aas
stos
bound
mov
xor
in
inc
add
pop
pusha
test
addr16
mull
imul
xlat
scas
push
test
out
in
aam
in
inc
xchg
movsb
xor
daa
scas
mov
xchg
scas
xchg
xor
imul
call
sub
or
in
hlt
fdivl
pop
mov
or
out
sbb
xor
mov
push
push
imul
fdivs
in
aad
ds
add
jge
xchg
xlat
pusha
dec
loopne
mov
push
in
mov
sub
mov
in
fcmovnbe
cwtl
mov
sub
ds
xchg
inc
jge
mov
jbe
lods
hlt
test
cmpl
shll
dec
adc
sbb
lods
andb
mov
cmp
and
sar
fisubl
shr
shr
js
lea
jecxz
in
sub
test
cmp
jns
cmc
into
inc
inc
lcall
push
push
inc
mov
xchg
nop
ret
hlt
mov
pusha
add
mov
or
loop
sub
mov
sub
hlt
jbe
inc
jl
out
lds
xchg
push
pop
add
lods
aaa
jb
sub
rorl
xchg
cmpsb
sarb
dec
inc
mov
mov
cmpsb
cltd
test
mov
mov
nop
cmpsb
jge
repz
inc
rcll
jmp
dec
cld
ljmp
mov
mov
xor
adcb
leave
call
xor
fcomi
push
pusha
xor
lret
and
aad
and
movsb
sbb
call
or
popf
ret
xchg
sbb
push
sbb
jle
icebp
sub
dec
mov
insl
mov
or
xor
add
xchg
sub
mov
adc
pop
push
sub
adc
into
lret
cltd
xchg
pop
sbb
imull
jmp
lcall
jge
scas
movsb
xchg
lods
mov
stos
movsl
stos
push
jns
xchg
pop
imulb
fidivl
add
imul
jae
aas
jae
jmp
push
pop
mov
mov
iret
add
repnz
sti
test
push
fsubrs
jge
sbb
loopne
push
clc
ficompl
test
lds
xor
mov
xor
xor
xchg
sarb
das
push
mov
dec
hlt
sub
mov
jmp
or
in
nop
aas
xchg
xchg
mov
test
icebp
aas
daa
jge
jg
inc
nop
loope
bound
cmp
fdivrl
jmp
adc
sar
and
inc
mov
xchg
pop
std
pop
push
jmp
pop
push
pop
mov
dec
push
jb
inc
push
push
push
ss
sbb
sbb
test
imul
xor
and
pop
pushf
inc
add
and
lea
sar
inc
adc
out
mov
push
mov
mov
inc
jno
xchg
sti
mov
stos
mov
or
pushf
daa
int3
and
out
cmpsb
fs
popa
roll
fldl
add
mov
rcr
and
mov
into
xor
shl
sbb
sbb
xchg
aas
mov
imul
and
sbb
shll
test
adc
push
sub
das
adc
fwait
ljmp
test
push
jp
test
xor
ja
jmp
adc
aad
sbbb
xchg
lret
xchg
repz
in
mov
adc
bound
push
push
cwtl
and
sbb
fwait
dec
stos
mov
imul
xchg
or
lods
mov
pop
add
jmp
pushf
repz
addr16
fcoms
dec
cmpsl
rolb
push
adc
shl
jno
xor
jae
mov
fldenv
mov
mov
in
cmp
popa
or
or
xchg
adc
scas
js
xor
dec
add
cmp
dec
dec
call
bnd
call
push
xchg
and
js
loop
std
pusha
inc
dec
stos
dec
inc
and
imul
add
jge
sbb
jle
and
push
andl
mov
fldcw
lods
shlb
sbb
repnz
imul
ret
stos
dec
mov
xchg
sbb
dec
xor
push
mov
test
scas
scas
lcall
xchg
dec
mov
ja
nop
insl
movsl
mov
xchg
std
cld
in
out
adc
test
push
mov
push
adc
sub
rclb
mov
adcl
cmpsb
add
push
dec
mov
ljmp
stos
orb
test
mov
fwait
sub
out
icebp
lret
out
mov
call
add
lret
in
dec
test
cmpsb
stc
ja
sbb
call
rol
add
lea
or
mov
lods
aas
dec
fwait
mov
xchg
sbb
sbb
push
cmc
mov
or
or
lock
xchg
push
aam
sbb
cmp
mov
add
fildl
mov
dec
cmp
mov
inc
scas
fadds
and
dec
insl
jno
movsb
mov
xor
and
pop
or
aaa
loop
pcmpeqw
pusha
out
jns
bound
xchg
and
push
pusha
aad
dec
or
leave
icebp
inc
aam
lods
scas
pop
lock
mov
lret
repz
stos
stos
mov
mov
cmp
jecxz
cs
repnz
or
lret
and
dec
aaa
mov
and
dec
push
or
dec
sbb
gs
emms
mov
xorb
movsl
pop
push
mov
insl
mov
pop
mov
int
insl
std
or
loope
xlat
xchg
dec
leave
or
lea
loopne
mov
ljmp
js
sahf
jl
mov
push
ss
sub
pop
and
mov
ds
inc
cwtl
and
test
int
in
inc
repnz
sub
mov
push
sarb
testb
popf
adc
sub
call
lret
ret
sub
mov
imul
pushf
cltd
lock
sub
stos
and
jae
incb
rclb
jnp
jb
lods
je
pop
test
sub
inc
adc
inc
popa
fcomip
pop
fnstenv
mov
add
andl
mov
insb
test
xchg
jne
dec
lret
dec
fsts
mov
pusha
imul
jno
outsb
stos
pop
xor
jno
adc
leave
and
ljmp
mov
popa
mov
int
inc
loope
ss
xchg
into
std
xor
mov
inc
hlt
gs
push
mov
or
shl
les
xchg
loop
loope
in
sbb
jg
push
cmc
sahf
sub
cmpsb
sbb
mov
push
test
fldt
push
outsb
cmp
jl
fwait
out
out
data16
les
sub
nop
ret
mov
sub
sub
and
scas
inc
ss
adc
sbb
adc
bound
jge
sbb
push
and
scas
mov
push
or
mov
mov
arpl
outsl
inc
dec
mov
add
pop
sub
mov
out
fisubl
mov
rclb
testl
adc
negl
js
jmp
push
dec
leave
mov
negl
dec
pop
xchg
cmp
repnz
movsl
cli
pop
add
mov
int
dec
inc
sbb
scas
movsb
shlb
push
rcrb
test
out
out
insl
mov
ljmp
nop
pop
mov
sahf
sbb
push
ja
dec
aad
jb
in
lret
inc
add
adc
arpl
mov
dec
lea
add
lcall
sub
mov
jecxz
jle
push
mov
movsb
xchg
aaa
lds
push
loope
add
mov
push
xchg
pop
divb
jae
pusha
mov
popa
inc
mov
jne
adc
lds
mov
js
sub
add
std
adc
imul
mov
daa
movsb
sbb
xchg
xor
mov
inc
dec
push
lea
xor
cmp
and
in
int3
pop
arpl
adc
imul
shl
mov
xlat
mov
imul
push
sbb
lods
mov
loope
mov
xchg
adc
jmp
mov
pusha
add
push
je
add
xchg
repnz
insl
jb
pop
or
jle
push
popa
xchg
adc
xorb
sub
push
or
mov
orb
por
int
dec
mov
xor
sbb
cmp
adc
xchg
repz
push
pop
add
jmp
jae
cwtl
inc
daa
aas
xor
mov
add
mov
xchg
sub
dec
aad
inc
or
adc
fucomp
or
repz
adc
imul
stc
sbb
fnstcw
loope
or
adc
push
jge
daa
stos
mov
sbb
xor
rcll
push
frstor
adc
mov
xor
jl
fdivl
out
add
xchg
inc
pop
test
sbb
sub
pushf
inc
pusha
inc
sub
adc
or
scas
cwtl
fbld
mov
out
repz
sbb
xchg
sbb
jnp
out
pusha
lahf
test
daa
loop
add
or
mov
cmp
push
xchg
insl
push
push
xor
loop
inc
mov
into
cli
mov
popa
push
mov
sub
das
xor
shll
sub
push
outsb
test
andl
gs
arpl
jle
mov
test
dec
decl
xchg
sbb
scas
roll
dec
pop
push
inc
mov
imul
pop
xchg
xor
shll
push
xchg
push
andl
and
xchg
outsl
pop
mov
mov
ficoml
shl
aaa
cmpsb
fnstsw
or
jo
popf
mov
mov
test
or
idivl
jge
jnp
pushf
cmp
push
insl
idivb
cmp
xchg
pop
cmpsl
jno
test
sbb
hlt
test
jle
inc
sbb
addr16
js
cld
or
dec
les
xorl
in
push
push
mov
out
scas
push
inc
jno
inc
xchg
push
pop
sti
and
or
loope
jp
adc
pop
adc
fwait
divb
inc
pop
and
mov
inc
sbb
sbb
ficompl
subb
rcll
push
ds
sti
into
and
xor
ja
mov
stos
imul
sbb
cmp
add
xor
loope
and
mov
sahf
and
lods
in
adc
mov
jns
lret
xchg
clc
pop
sar
mov
imul
mov
dec
fistpl
pop
inc
cmp
popf
xor
fcomps
jle
shll
dec
cmp
xor
cli
loop
out
inc
shlb
mov
cmp
fwait
icebp
mov
push
shll
or
cmc
mov
sti
lods
data16
jge
mov
dec
or
and
out
insb
rolb
add
popa
test
pcmpgtb
pop
in
jno
outsl
cmp
jne
jbe
xchg
cmp
jb
js
stc
xor
test
inc
lods
push
lea
das
push
add
jo
inc
ja
mov
lods
shll
out
data16
jno
bound
pop
mov
das
cmp
ljmp
icebp
test
xor
mov
sbb
testl
lahf
jno
mov
jecxz
jnp
and
push
call
cmpl
outsl
lea
lods
xor
push
iret
cs
insb
xchg
loopne
mov
imul
adc
lahf
add
sarb
cmp
push
add
pop
mov
inc
and
mov
testl
mov
es
push
aas
je
stos
fwait
mov
and
lcall
pop
pop
mov
or
cmpsl
xchg
bound
mov
pop
adc
int3
out
and
movaps
divb
mov
gs
mov
add
test
sbb
lret
nop
mov
jns
mov
or
xchg
test
xchg
pop
aad
sub
pusha
jnp
pop
xchg
call
sbb
or
cwtl
mov
ja
and
sbb
push
outsb
decb
repz
bsf
xchg
idivb
sub
cmp
push
test
pop
repz
or
mov
cmp
subb
pop
dec
imul
repz
jbe
ret
and
imul
mov
xchg
aaa
sub
mov
dec
pop
scas
fcmovu
cmp
xchg
cmc
imul
sbb
aas
lock
adc
mov
push
and
movsl
push
and
inc
jle
jnp
ror
and
cmpsl
shll
xlat
sarb
cltd
testl
pop
scas
je
xor
pusha
jnp
mov
and
es
xlat
rorb
pop
add
pusha
pop
sti
ljmp
mov
frstor
jae
call
jl
push
adc
adc
jno
push
xchg
jmp
lahf
mov
and
popf
sahf
in
lods
in
xchg
cmp
addr16
ja
jne
in
and
int3
and
cmp
push
pop
js
int3
cmpb
mov
and
mov
and
clc
add
mov
sub
mov
sub
push
xchg
push
sbb
shrl
add
push
in
xchg
ljmp
ss
push
jb
pop
popa
data16
sub
dec
cmp
cmp
mov
loope
test
mov
ljmp
out
imul
pop
shlb
test
xchg
xchg
mov
adc
add
movsl
xchg
dec
mov
out
imul
adc
jmp
repnz
daa
and
rcl
push
int3
and
stos
mov
dec
scas
sub
test
jmp
xor
orl
push
sahf
out
and
rolb
mov
inc
mov
shrb
sub
call
loop
in
dec
les
mov
aaa
inc
cmp
call
push
cwtl
cmpsb
test
cmc
jo
push
std
mov
pop
or
push
aad
dec
mov
adc
mov
mov
cmp
adc
jg
pop
adc
repnz
stc
dec
in
iret
push
out
cmpsb
and
mov
push
adc
jne
and
stos
aam
adc
in
dec
lret
dec
cmp
or
mov
jmp
dec
dec
lret
cmp
cmp
push
push
mov
push
mov
push
lcall
sub
imul
mov
sub
scas
sbb
aaa
mov
add
dec
xor
cmp
dec
out
mov
dec
scas
xchg
mov
xsaveopt
push
sbb
insb
jbe
pop
popf
sahf
dec
push
xchg
push
lcall
aam
sub
testb
or
mov
sbb
sbb
out
scas
test
xor
int3
sbb
mov
sbbb
sub
hlt
dec
xchg
push
pop
inc
or
xlat
xor
ljmp
aaa
adc
adc
add
sahf
repnz
dec
nop
cmp
fstps
mov
and
and
and
cmp
xor
mov
mov
in
add
nop
mov
fmuls
dec
xchg
ljmp
negl
cmp
inc
xor
xor
pop
xchg
push
mov
insb
cmpsb
pop
jge
fnstenv
pop
xchg
inc
mov
lock
dec
test
mov
fstpt
in
stos
push
sub
inc
ror
stc
cmp
sbb
add
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
idivb
pop
jp
xor
ficoms
pop
inc
add
iret
mov
pop
inc
popf
xchg
dec
inc
outsb
out
cmpsl
testl
stc
jae
rorl
mov
xchg
mov
fmul
add
sub
int
inc
lock
mov
shrl
jb
pop
fistpl
jne
push
adc
stos
subl
or
movsb
std
add
mov
sti
lcall
fcompl
inc
fistps
test
ret
arpl
push
add
inc
jno
fs
mov
push
dec
pop
push
mov
add
imul
pushl
bound
rcll
dec
mov
add
xchg
mov
mov
xlat
je
sub
fcmovnbe
jmp
cmp
test
push
std
add
sbb
sub
inc
loope
testl
xor
pop
rolb
test
inc
jae
mov
and
cmp
in
stc
ret
mov
mov
sti
inc
xor
sbb
shrl
je
sub
std
sbb
dec
dec
mov
cmp
filds
pusha
jo
hlt
negb
pop
adcl
ja
int3
std
mov
test
add
push
jge
mov
mov
nop
jmp
cwtl
dec
imulb
lahf
out
inc
jmp
pop
aas
jecxz
inc
sbb
movsb
popf
xchg
in
inc
mov
test
outsb
jnp
xchg
aam
ja
pop
sbb
push
mov
mov
sahf
xchg
adc
mov
cmpsb
cmpsl
stos
negl
fstpl
lahf
xor
cmp
lret
adc
addr16
push
add
dec
out
sbb
xor
sbb
lret
mov
push
popa
pop
sti
cld
sbb
or
xchg
inc
and
pop
add
sbb
rcrb
pop
mov
popf
lcall
decb
mov
adc
out
icebp
aad
in
cmpsl
mov
es
lret
cmpsl
je
pushf
mov
mov
jg
xor
jno
pop
push
mov
ds
out
mov
sbb
scas
jmp
xchg
or
cmpsl
xor
mov
xor
sub
aad
ret
js
cld
push
movb
xor
or
mov
lret
add
loop
adc
dec
rorl
jmp
mov
adc
stos
or
dec
rcrl
subl
leave
dec
jo
rcrb
popf
mov
xchg
fidivrl
mov
dec
sub
inc
mov
mov
movb
inc
xchg
negb
jbe
clc
push
mov
xchg
in
mov
daa
into
daa
add
lods
and
or
repnz
test
mov
pop
jge
fs
je
dec
add
xchg
in
sub
lock
push
sbb
push
jp
push
hlt
rol
cmp
and
adc
pop
movsl
je
xor
cwtl
lods
push
cwtl
in
ret
fcmovnbe
mov
or
mov
setne
cltd
and
jmp
cmpl
les
ljmp
ret
sbb
popf
subb
je
lret
jnp
scas
cltd
sub
or
mov
lock
mov
je
iret
inc
adc
adc
fs
iret
inc
rcl
not
out
cmp
lcall
jae
xor
push
xchg
das
clc
cmp
and
jle,pt
mov
mov
mov
out
sbb
pop
fucom
jbe
daa
fnstsw
pop
cmpsl
push
fsubr
outsl
push
fisubrs
inc
scas
lds
and
and
add
lcall
mov
mov
leave
xor
and
out
leave
mov
mov
mov
addl
cmpsl
hlt
sub
cmc
dec
push
adc
rol
int
push
out
and
imul
cld
mov
popa
jg,pt
jb
adc
mov
and
push
cmp
pusha
ds
sti
in
negb
cwtl
mov
in
jbe
orl
jecxz
mov
and
rorb
sti
sbb
inc
clc
jno
add
sub
outsl
in
daa
test
fldpi
jge
inc
mov
xchg
lock
orb
cs
push
mov
clc
mov
dec
iret
dec
dec
mov
in
loopne
mov
pop
jno
sbb
inc
jge
daa
nop
mov
in
roll
or
out
push
jnp
leave
mov
out
pop
or
test
test
orl
arpl
jge
outsl
sahf
les
jbe
and
inc
xchg
pop
faddl
nop
call
sbb
fistpll
cmp
arpl
sub
pop
std
push
js
and
inc
lods
int3
or
cli
clc
dec
mov
xchg
mov
xor
aad
add
stc
arpl
inc
fwait
jge
inc
and
dec
sub
pop
cmovl
inc
mov
fnsetpm(287
cmpb
es
mov
cmp
rcrb
mov
add
pusha
dec
nop
inc
call
ds
sbb
add
mov
ds
sbb
inc
imul
pop
sub
int3
sub
ror
mov
out
adcb
add
popf
and
inc
push
xchg
pop
mov
sbb
mov
pop
in
jae
mov
xchg
xchg
inc
arpl
cli
push
cmp
stc
or
add
dec
jl
add
idivb
jle
mov
xchg
sub
pop
in
lret
lods
mov
sub
push
dec
and
xchg
cmp
cmp
jnp
xor
inc
pop
sbb
andb
movsb
inc
shl
mov
inc
and
xlat
fists
sub
inc
dec
mov
dec
mov
xchg
ret
cli
mov
push
mov
cld
mov
mov
sbb
call
inc
pop
mov
imul
js
push
cmp
jl
ret
in
in
call
call
pop
jae
out
out
add
popa
cli
in
mov
or
in
outsb
movq
imul
in
mov
dec
cmpsl
aaa
stos
xor
jo
inc
call
mov
dec
mov
dec
insb
sbb
sti
sub
mov
or
xor
scas
rorl
xchg
gs
sub
scas
addl
lcall
sbb
inc
in
mov
rclb
jbe
mov
xor
mov
xlat
xor
xacquire
mov
sbb
inc
inc
data16
aam
es
imul
jae
xor
sar
mov
push
adc
and
jmp
xchg
call
stos
shlb
inc
push
pop
insb
sub
ljmp
xchg
cld
mov
shlb
std
sbb
mov
sbb
sti
push
insb
insb
clc
push
add
outsl
xchg
rcl
cmp
rcr
cmpsl
cmp
out
stos
mov
mov
xchg
fucomp
mov
and
or
jg
mov
insl
lea
and
mov
sbb
adc
gs
adc
xchg
jp
lcall
pop
in
mov
dec
adc
jecxz
pop
mov
pop
xor
dec
aam
and
xor
mov
sti
lahf
mov
push
mov
out
mov
adc
rcl
mov
add
ficomps
mov
into
cmp
lock
dec
xchg
pop
push
les
push
push
addb
fiaddl
add
popa
ja
cli
mov
ret
cmp
adc
shrl
push
pop
xor
cmpsl
or
sub
mov
push
pop
je
xor
sbb
or
jo
mov
mov
or
or
faddl
inc
inc
out
dec
xlat
ljmp
pop
ljmp
cmp
xor
lods
pop
gs
mov
mov
subl
lahf
cmp
add
push
cwtl
je
xorl
dec
leave
fs
idivb
inc
adc
sub
stos
movsl
mov
pop
pop
movsl
icebp
mov
imul
inc
sbb
cld
fldenv
inc
enter
int
lods
icebp
into
daa
cmp
xor
aam
lods
cmp
xor
mov
add
mov
mov
dec
dec
adc
xlat
mov
std
add
fisttpl
loop
incb
push
mov
popf
movsb
ja
inc
stos
inc
mov
sub
aas
cmp
mov
xor
push
dec
mov
mov
scas
xor
mov
ss
cs
pop
out
push
out
inc
cs
lahf
and
hlt
cmc
push
stc
push
adc
sub
adc
mov
or
lea
push
ret
stos
xchg
inc
in
mov
aad
or
repnz
xor
pop
fs
push
int3
shr
sub
adc
std
xchg
mov
inc
xchg
pop
sahf
inc
outsb
xchg
pusha
and
popf
cmp
movsl
mov
shlb
push
sub
cld
outsl
insb
popf
inc
lds
lret
repz
sti
in
cmpsl
pop
shlb
imul
jmp
cmp
dec
mov
imul
das
xchg
cmpb
jb
sbb
aam
xchg
lods
cmp
fdiv
sbb
sbb
lods
push
pusha
out
out
mov
xchg
add
imull
mov
cmp
jecxz
aas
sbb
dec
dec
push
mov
test
xchg
mov
lret
sub
xor
mov
and
fisttps
cmpsb
hlt
add
inc
fidivrs
cmp
mov
mov
jb
loop
lock
lret
iret
mov
daa
add
sub
mov
fwait
mov
sbb
pop
icebp
jg
fcomps
mov
or
jae
push
push
jne
cld
mov
jg
jp
ss
cld
into
scas
and
hlt
lahf
inc
or
sbb
pop
stos
ficomps
addl
cmpl
call
loopne
inc
mov
xchg
dec
cmp
iret
mov
movsb
cmp
cmp
loopne
stos
xchg
and
push
or
sub
cs
lcall
xchg
les
jle
and
dec
push
loope
testb
outsb
cli
cmp
mov
cmp
nop
xor
lcall
inc
sub
xor
insl
call
mov
es
imul
jae
jae
repz
fdivrl
test
movsl
sbb
mov
enter
dec
test
lret
cwtl
icebp
sahf
or
out
mov
jnp
push
xchg
shll
pushf
in
pop
push
ss
mov
test
int
pop
repz
mov
ficompl
test
addr16
add
inc
push
or
aas
push
mov
lret
lcall
sub
and
push
adc
xchg
mov
jp
aaa
arpl
adc
mov
sbb
orl
push
cmp
push
dec
inc
in
mov
add
out
scas
dec
mov
or
push
mov
jns
lods
popf
icebp
pop
mov
jl
inc
jmp
data16
xchg
adc
pop
int
cli
out
fcomp
mov
sub
les
xchg
jle
repnz
lahf
mov
push
lock
in
sub
and
sub
ffreep
out
xor
fcompl
shrb
fxch
push
mov
and
adc
cmp
pop
jne
out
imul
jecxz
loope
and
mov
sbb
ss
cmp
jle
nop
mov
imul
cmc
gs
mov
sub
fiadds
and
in
sub
outsl
pop
out
jl
inc
pop
popl
lea
jne
js
mov
enter
push
rclb
pop
mov
das
aas
cmp
gs
cwtl
inc
dec
mov
dec
lods
int3
sub
cmp
adc
push
inc
je
enter
push
daa
pop
push
popf
mul
xor
and
mov
jmp
xor
arpl
sbb
ss
js
cmp
cli
push
test
sbb
imul
dec
cs
ja
push
push
out
jae
add
nop
fisttps
inc
cmp
gs
dec
or
lcall
xor
jle
cli
and
and
inc
pop
gs
jnp
push
sub
cmp
into
ret
scas
dec
mov
out
fsubrl
je
sub
shll
enter
pop
sub
cmp
mov
mov
ljmp
mov
pop
iret
js
push
jl
mov
fcoml
xor
push
mov
pop
int3
xchg
rclb
leave
mov
lods
and
dec
aas
cwtl
lock
adc
ret
push
in
cmp
cmp
lcall
cmp
pop
lods
pop
adc
dec
dec
scas
pushf
pop
sbb
mov
test
add
js
mov
std
jns
xchg
pop
fs
lahf
jb
xor
cs
lods
sbb
and
aam
insl
mulb
push
push
cs
push
test
inc
push
cltd
lcall
mov
inc
je
movsl
sub
mov
mov
int
xor
popa
sahf
cwtl
jb
jge
bound
mov
shl
xor
mov
inc
dec
cmp
inc
jmp
mov
dec
mov
jmp
pusha
mov
popa
in
data16
pop
push
mov
xchg
ss
cmpsl
sbb
outsb
jmp
mov
aas
dec
nop
xchg
inc
insl
cmp
enter
shlb
scas
lretw
mov
jle
ljmp
fnstenv
sub
and
and
je
addr16
pop
adc
ret
imul
movsb
cmp
dec
push
push
xchg
in
or
mov
jae
push
lds
add
dec
ficoml
dec
loopne
sub
out
or
sub
xchg
mov
cld
addb
or
lret
push
and
adc
and
movsb
cltd
rcrb
mov
sbb
daa
and
cmc
in
jnp
cmpsl
dec
or
xor
fisttpll
mov
jmp
push
xchg
dec
cmp
in
pop
and
icebp
and
out
orl
mov
jne
inc
roll
pushf
and
mov
mov
sbb
test
jecxz
jnp
add
mov
pop
lret
incb
sbb
orl
cmc
and
mov
jne
push
insl
movsb
or
outsb
stos
fs
dec
jb
mov
outsb
into
sub
adc
add
inc
inc
add
stos
cmp
cmpsl
nop
out
and
xchg
fs
inc
pushl
jno
pop
gs
cmp
inc
sbb
or
sub
push
fcomp
mov
cli
inc
movsl
adc
lret
mov
push
subl
into
pop
cmp
sub
arpl
je
call
cmpsl
leave
ret
insb
push
jb
fistl
cmc
aas
dec
iret
mov
xchg
add
xchg
mov
int3
fldcw
pop
enter
call
outsl
push
push
fsubs
popf
ljmp
jno
ficompl
cwtl
push
pushf
cld
mov
dec
nop
fbld
mov
cmp
sbbl
arpl
dec
fldln2
mov
pop
shl
movsl
mov
jg
add
rcll
aam
mov
jae
sbb
jl
mov
jnp
in
inc
jae
lea
imul
xor
loope
lds
out
mov
pusha
push
loopne
pop
daa
icebp
dec
cmp
push
pop
cmp
loop
xor
mov
ret
lods
lret
into
dec
inc
xlat
mov
testl
shlb
push
call
inc
pop
insl
dec
je
cli
andl
jnp
stc
arpl
rcr
sub
pop
scas
sub
test
fnstsw
es
clc
imul
adc
fwait
cmc
sub
cmpsl
rcrl
adcl
sbb
jne
fisubs
xchg
inc
out
add
and
add
fbstp
jp
enter
icebp
push
and
mov
cmp
decb
int3
pop
andl
cmpsl
push
push
cmp
and
test
xchg
adc
jg
sub
jle
cltd
sbb
add
icebp
and
or
push
mov
fwait
jbe
xorb
pusha
adc
enter
sarl
ss
popa
movsl
lock
mov
lds
add
push
les
mov
pop
pop
test
cli
jecxz
xchg
lahf
ficomps
aad
cmp
mov
or
jo
ja
sarb
pop
and
jl
ficoml
push
int
mov
mov
cmp
sbb
xorl
sbb
mov
ds
popa
icebp
jp
arpl
lcall
xchg
dec
mov
in
sbb
jns
ss
test
cld
adc
test
sarl
movsb
or
js
stos
fsubs
insb
inc
xchg
jge
scas
cmp
add
pop
push
xor
pusha
lahf
or
add
or
mov
mov
icebp
rcll
lahf
rclb
mov
adc
mov
test
jmp
rcrl
in
lock
xchg
inc
xchg
xchg
or
outsl
jo
shll
and
outsl
jnp
stos
xor
and
lcall
cmp
inc
xor
mov
xchg
cmp
xchg
clc
mov
decl
jae
cmp
adcb
fcoms
push
stc
dec
movsb
sbb
add
int
push
mov
jecxz
jbe
test
pop
xlat
addr16
push
add
cmpsb
std
push
xor
movsb
cmpsl
loope
mov
sub
fmuls
hlt
mov
and
dec
movsl
mov
ret
test
jle
decb
mov
sub
call
inc
xlat
iret
imul
push
dec
sarb
and
frstor
lahf
jo
mov
sbb
jmp
sbb
lea
push
outsb
and
xor
and
xchg
adc
mov
xchg
and
neg
imul
popf
int
pop
sbb
je
lret
adc
cmp
cmp
in
push
dec
sub
push
push
in
mov
lcall
push
pop
sbb
pop
jecxz
add
dec
add
xchg
pop
pop
nop
jp
imulb
and
pop
push
dec
dec
push
pop
aad
fsubs
dec
aas
cmp
ss
cmpsl
pop
jmp
ret
sub
stos
and
pop
inc
cmp
push
pop
xchg
rclb
push
dec
aad
int3
in
add
or
enter
fstpl
andl
test
dec
pop
adc
test
leave
and
dec
push
cmpsb
and
loope
insb
jne
xchg
add
push
test
out
lock
cmp
inc
cwtl
sub
xchg
add
mov
ljmp
movsl
in
jecxz
mov
orb
pop
mov
imul
repnz
inc
shrd
repnz
push
cwtl
movsb
movsl
jne
stos
add
mov
sbb
in
cmpl
mov
pop
cmc
inc
aam
rolb
inc
pop
and
add
xchg
fmul
push
mov
xchg
pop
sahf
dec
loope
sbb
pop
movsl
mov
add
mov
sbb
dec
outsl
add
cld
das
loop
push
xchg
sarb
jae
push
push
fstp
push
sub
and
adc
lcall
pop
loop
sbb
inc
inc
dec
and
stc
int3
add
idivl
outsl
out
pop
mov
or
pop
pop
lods
repnz
push
mov
lds
mov
jp
inc
dec
fsubr
dec
inc
mov
outsb
incb
jge
lock
jg
ljmp
jne
inc
mov
lret
mulb
clc
std
sub
fs
int3
in
pushf
add
jbe
xlat
xor
dec
mov
sbb
out
add
sbbl
mov
int3
xchg
pushf
imul
lods
xchg
cmp
push
mov
test
inc
mov
and
repnz
xor
adc
cmp
push
inc
rcrb
jge
pop
or
cmc
jg
icebp
lods
mov
xchg
adc
lret
aam
pop
adc
and
outsl
xchg
and
inc
stc
mov
mov
loop
lea
or
scas
inc
xlat
push
les
jg
loopne
sbb
cld
pop
mov
dec
lahf
rol
sbb
sbb
inc
addb
push
clts
incl
pushf
xchg
daa
push
xor
cmpsl
lods
filds
mov
pop
inc
call
xchg
lcall
lods
test
mov
cli
jnp
xchg
xchg
jb
mov
clc
in
scas
cs
mov
cld
and
adc
in
mov
jmp
scas
cs
mov
pop
pop
lahf
push
sbb
lret
push
std
fmuls
xchg
ret
push
dec
in
lcall
xchg
lods
fimull
xor
or
daa
push
in
mov
mov
xor
mov
jecxz
add
fisttpl
or
lock
aad
cli
sbb
add
repnz
dec
call
loope
and
mov
pop
popa
add
ret
sub
pushf
in
jp
mov
add
dec
add
test
inc
pop
add
popf
jne
dec
jnp
add
inc
jg
add
jo
std
loope
cmp
aas
or
jl
xchg
jmp
lcall
inc
and
int
jns
add
int
pushw
sbb
jae
fsubrp
push
push
pusha
fdivp
xor
xchg
data16
out
cli
adc
enter
icebp
dec
mov
hlt
pop
cltd
add
fisubrl
imul
sub
push
fldenv
xchg
aaa
mov
pop
mov
add
out
push
or
inc
les
lret
mov
lods
xlat
inc
ret
mov
loopne
loope
pop
imul
xor
jmp
xchg
cmpsl
pusha
push
mov
outsl
mov
push
mov
icebp
jp
adc
lods
jge
add
ds
add
jp
mov
mov
iret
jne
imul
es
mov
nop
add
int3
and
fs
jb
outsl
inc
mov
addr16
shlb
mov
xchg
int3
xchg
or
into
repz
xchg
dec
aad
scas
scas
xor
or
xchg
stos
adc
stos
hlt
insl
cld
sti
call
shll
adc
fwait
je
bound
cmp
and
push
xchg
loope
jle
jl
mov
mov
pop
int3
aas
int3
xor
mov
movsb
sbb
shrb
mov
jge
data16
mov
mov
xor
daa
test
push
cld
std
mov
dec
insb
iret
std
ds
fisttpll
aaa
daa
movsb
pop
push
pop
cmp
cmp
adc
xor
inc
and
mov
jnp
sbb
mov
stc
pop
cwtl
and
mov
jl
mov
mov
jnp
popf
mov
test
lods
movsb
sbb
jnp
test
loopne
ds
out
loope
mov
lahf
xor
testl
mov
sbb
jnp
scas
mov
sbb
jae
and
xchg
cli
ret
mov
mov
popf
fs
or
mov
sbb
inc
stc
cmp
dec
imul
test
fwait
hlt
or
mov
je
out
lods
sbb
and
sahf
rolb
sub
xor
push
cs
jl
jge
nop
sub
cmp
dec
mov
mov
or
pop
adc
xchg
and
mov
sub
mov
ficoms
or
adc
adcl
mov
mov
flds
pop
xchg
mov
stos
lods
clc
outsb
mov
mov
mov
js
xchg
adc
cmp
sub
sub
add
xchg
push
icebp
mov
and
xlat
xchg
add
cmpsb
test
pop
ret
cmp
sbb
cmpsl
std
cmp
popa
xor
icebp
enter
fldt
hlt
les
adc
mov
inc
or
setb
mov
lcall
fimull
aaa
xchg
cld
subb
adc
sbbb
out
aaa
xor
xchg
push
mov
lret
xorl
ds
add
enter
mov
add
sbb
and
pop
pop
xchg
or
xor
pop
mov
pop
outsb
xor
stos
xchg
decb
lcall
int3
and
adc
lcall
sbb
push
imul
rcll
push
adc
push
jle
shlb
mov
rol
jg
inc
add
ljmp
lret
jae
or
imul
lock
cmp
xlat
cmc
lcall
cwtl
push
mov
jb
xlat
xchg
mov
or
mov
jle
pop
inc
rclb
mov
sbb
mov
xchg
das
fld
push
cs
leave
test
push
or
pop
inc
sar
add
mov
in
xchg
ret
fisubs
mov
adc
mov
cmpsb
call
jo
xchg
jns
into
xchg
add
or
xor
and
mov
push
mov
sub
lcall
imul
sub
lods
es
sbbb
mov
popf
int3
adc
dec
mov
adc
xchg
jb
xor
inc
push
dec
or
pushf
xchg
sbb
stc
test
sbb
or
aaa
in
and
add
lods
pop
das
xor
lahf
in
cmpsl
inc
jecxz
xchg
sub
popa
xchg
mov
pop
sbb
push
jecxz
pusha
negl
dec
push
xor
add
outsb
mov
pop
stos
leave
lods
aad
out
mov
stos
cmp
jne
dec
mov
mov
add
xchg
ret
ret
dec
test
cmp
gs
xchg
mov
cmpsb
rcl
loopne
jle
loopne
pusha
cs
jmp
data16
adc
inc
out
add
aas
in
push
and
ret
test
mov
sahf
lds
nop
mov
rclb
setp
pusha
mov
and
jmp
and
push
jp
test
pop
cmpsb
mov
adc
or
xchg
mov
cmp
dec
fildll
mov
sbb
outsb
sbb
dec
aam
lahf
cmp
cld
push
sbb
jne
cli
sub
mov
inc
inc
inc
lods
imul
daa
loope
orl
aaa
jl
cmc
fstpl
dec
test
and
inc
pop
lods
pusha
jg
cmp
adc
ljmp
sub
adc
jge
mov
fsubr
shll
pop
sub
jne
mov
or
mull
xchg
fs
ret
je
out
or
adc
push
mov
lods
cmp
les
lock
stos
ljmp
fiaddl
dec
nop
ret
adc
cmp
dec
jb
rcll
pop
mov
fstp
nop
jb
xor
push
push
into
mov
je,pt
stos
mov
loope
jb
movsl
mov
out
mov
cs
mov
and
lods
mov
sub
shll
sti
adc
mov
xchg
dec
in
std
insl
cmp
fdivrl
adc
jg
andb
int
cmp
sub
mov
ds
pop
mov
lcall
pop
jns
jns
in
ficoml
or
and
dec
pop
push
mov
aad
gs
nop
stc
push
xor
ficoml
jae
fsubl
inc
movsl
jbe
dec
lods
sbb
xor
in
pushf
movsb
js
jno
cli
cmp
mov
cmp
sbb
add
xor
push
lea
sub
cmp
aad
sbb
sub
jmp
mov
inc
push
inc
xor
loopne
fwait
in
jno
lods
roll
loop
shll
mov
mov
in
out
mov
adc
add
lea
jle
sahf
sub
adc
add
mov
jge
xor
push
mov
shll
pop
jp
push
sarl
test
sub
add
pusha
fcmovnb
push
mov
popl
js
xchg
xchg
or
enter
stos
inc
and
loope
sub
push
jnp
pop
xchg
push
fcmovbe
in
andb
pop
repz
nop
mov
mov
adc
sub
ds
push
pusha
jnp
sarl
mov
or
dec
addr16
mov
mov
nop
out
xchg
fwait
je,pt
divl
add
in
mov
rclb
popa
in
gs
xchg
add
out
jle
bound
jmp
cmpsl
stos
push
fwait
js
rclb
push
lock
and
push
daa
scas
imul
outsb
xchg
in
xor
ljmp
fwait
es
xchg
cli
popa
fildl
aaa
in
outsl
pop
mov
dec
icebp
or
jle
rcr
rclb
jge
jp
loope
and
adc
sti
pop
push
sbb
adc
push
or
cld
sub
add
add
imul
jns
mov
xor
jne
inc
in
ljmp
jge
sbb
imull
scas
cmpsl
fwait
lea
add
aad
out
out
xchg
test
fucomip
inc
outsb
popf
shrb
xchg
mov
pop
das
repnz
call
mov
fwait
in
and
loop
movsl
push
push
clc
mov
fwait
adc
stos
testb
imul
ss
pop
aad
adc
out
jb
test
out
arpl
adc
mov
fists
ss
and
icebp
lock
pop
daa
lods
arpl
aas
shlb
push
mov
mov
xlat
repnz
xchg
fwait
jnp
leave
pop
inc
and
xchg
jp
lds
mov
pusha
insl
test
imul
add
orb
lea
dec
mov
aas
jo
or
dec
push
mov
popf
xchg
stos
cmpsl
push
subb
mov
dec
xchg
popf
std
push
popf
stos
xor
iret
outsl
or
push
stc
fldl
aaa
fmull
daa
mull
xor
outsb
sub
and
fdivs
out
pop
adc
in
imul
push
mov
push
loop
pop
mov
push
ret
cmp
xor
outsb
mov
push
sbb
or
aad
mov
sub
pop
add
ret
jne
pop
cs
jnp
outsl
imul
loopne
xchg
push
cmp
in
popf
shrl
add
iret
fistpll
dec
fwait
imul
xchg
dec
mov
daa
daa
insb
jl
mov
mov
and
mov
pusha
les
stc
xchg
sub
fcoms
ja
ds
inc
push
imul
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
out
mov
and
imul
pusha
dec
adc
addr16
inc
dec
xchg
sub
fistl
jb
cmp
mov
mov
xchg
arpl
fbstp
pop
dec
mov
ss
or
divl
push
mov
cmpsb
xchg
mov
mulb
xor
cltd
sbb
std
insl
sub
xor
cmp
pushl
jle
fwait
mov
and
cmp
dec
test
leave
test
pop
in
out
dec
or
into
dec
fdivs
int
addr16
push
and
mov
mov
insl
mov
divps
ret
add
push
pop
aaa
in
mov
pop
sub
and
cmpsb
popf
dec
sub
addb
lds
fnstsw
movsl
fwait
xor
or
pop
mov
xor
jge
cltd
lods
xchg
dec
lods
jnp
fcomi
test
cs
test
adc
insb
push
into
sbbl
dec
scas
repz
xor
lahf
popf
and
lahf
in
je
cmp
repz
mov
pusha
stos
or
mov
xchg
popa
cmp
sub
rol
cmp
inc
lar
in
cmp
add
out
push
aaa
pop
sub
mov
jecxz
aam
int
sub
mov
pop
adc
shl
mov
clc
jns
loopne
mov
jns
adc
ds
cli
lahf
inc
lods
add
mov
inc
xor
sar
fwait
xor
nop
push
sub
int3
dec
bound
cmc
bound
or
lret
and
repz
aas
jl
movsl
xchg
lret
pop
jg
aad
mov
lods
sub
push
push
iret
cmp
xor
adc
pusha
clc
clc
xchg
cltd
mov
or
pop
pop
adc
fidivrs
fcomp
cli
sbbl
adc
fcomi
data16
shll
mov
in
inc
fisttpll
or
icebp
clc
mov
adc
mulb
int3
les
dec
scas
loop
dec
shl
cmpsb
out
jl
adc
imul
push
or
in
arpl
cmp
or
xchg
sbb
xchg
push
mov
and
adc
test
stos
push
or
imul
push
jns
lahf
test
jl
pop
je
test
push
aaa
add
cmp
out
xor
sbb
jne
pop
test
jle
xchg
mov
push
lea
and
cmp
test
lret
imul
pusha
sub
repnz
sti
stc
push
mov
xor
pusha
sub
xchg
iret
data16
or
mov
or
mov
in
int
sbb
pop
mov
clc
jno
loop
fisttpl
loop
rcll
es
push
push
and
frstor
enter
nop
adc
jp
add
xor
ljmp
pop
sub
addr16
fnstenv
cmc
leave
aam
rorl
or
int
fiaddl
add
mov
jb
cmc
enter
out
xor
pop
aad
cmpsl
push
push
iret
mov
cmc
fs
aad
jo
sbb
cmp
sbb
pop
rcr
cli
inc
fildll
sbb
jecxz
arpl
xor
rcrb
xor
outsl
xchg
daa
aam
push
push
add
ret
sbb
fsubrl
pop
cmp
sbb
repnz
loop
sbb
jno
mov
test
adc
stc
hlt
call
lods
sbb
into
ljmp
gs
repz
mov
imul
or
pop
movl
add
call
push
in
adc
lcall
imul
int3
icebp
rcrl
add
fs
or
insb
xchg
jbe
mov
mov
sarb
mov
cmpsb
push
jbe
mov
je
in
fs
ret
lret
test
mov
xchg
ds
fiadds
cmp
int3
arpl
sbb
pop
add
lret
rclb
mov
lahf
xor
jmp
nop
mov
or
jmp
jecxz
push
imul
or
and
pop
shl
push
inc
push
push
sub
mov
mov
add
ds
stos
or
and
aas
subl
sbb
add
push
mov
jbe
pop
pop
ffreep
sub
fcomi
pop
mov
bound
push
sbb
or
lahf
add
fmul
xor
fistpl
cmp
inc
pop
xlat
movsb
repnz
push
pop
sbb
cmp
jb
lock
fildl
cmp
jnp
push
fistpl
negb
scas
mov
aam
push
dec
mov
cmp
rclb
jmp
sub
clc
dec
sub
jno
sub
add
movsb
nop
lcall
mov
ja
orl
push
daa
mov
scas
xor
dec
pop
je
push
inc
cmp
or
lea
andb
xchg
pop
dec
orb
or
dec
lret
pop
popa
jecxz
or
mov
ja
loope
or
out
fdivs
int3
xor
ret
les
mov
push
mov
sub
repz
xchg
xor
jnp
xchg
int3
testb
xor
push
mov
repnz
andb
dec
je
cmpsb
enter
jae
iret
push
push
sub
sub
hlt
mov
push
mov
mov
inc
pop
es
ret
or
into
test
cli
notb
mov
dec
pop
xchg
xchg
xchg
pop
or
out
aad
ret
inc
adc
lds
and
xchg
adc
push
test
movsbl
xchg
sub
push
les
sbb
in
test
cmpsb
and
push
stos
stc
mov
iret
test
or
push
cmp
stos
or
cmpsl
imul
and
mov
iret
add
mov
ret
cmpsl
std
shl
es
imul
mov
sbb
jmp
pusha
cwtl
jmp
or
popa
mov
mov
shlb
ss
repnz
or
xor
or
push
ja
pushf
insl
repz
cmpsb
jl
inc
mul
lret
out
cld
jle
xor
adc
adc
sub
mov
xchg
bound
jbe
rolb
jle
daa
mov
inc
pop
and
push
or
and
push
insl
dec
push
cmp
jnp
pop
dec
xor
xchg
fmuls
in
and
mov
inc
pushf
add
xor
out
fnstsw
lret
out
movsb
pop
dec
and
popf
or
jmp
cld
outsb
sti
clc
in
sbb
xor
inc
mov
xchg
mov
jmp
inc
fdivrs
dec
pop
stc
sbb
jne
int3
pop
mov
xchg
push
sub
sub
insb
xchg
push
stc
xor
jg
cmp
jecxz
or
lret
into
jecxz
add
xchg
mov
pushf
pop
arpl
mov
dec
sub
lahf
lds
ljmp
bound
jb
imul
or
pusha
push
inc
push
lods
scas
jp
mov
push
mov
jl
xchg
push
out
mov
cmp
xor
nop
aas
mov
xor
insl
es
jmp
inc
cmpsl
dec
scas
in
or
pop
adc
int3
mov
sbb
pop
fcmovbe
mov
pop
jp
imul
push
and
or
test
fld
popa
aas
stos
int
jnp
jnp
push
out
ret
mov
mov
jne
mov
sbb
stos
out
sub
arpl
xor
sahf
push
out
cmpsb
arpl
test
jnp
in
add
sbb
mov
addr16
inc
mov
dec
pop
cmpl
loop
pop
jmp
loop
jne
in
ret
into
into
xchg
sbb
lods
mov
repnz
clc
push
dec
xor
imul
test
sahf
scas
jl
adc
sbb
xor
fcmovnb
cmp
inc
jecxz
xchg
sub
clc
xchg
cld
loop
popa
mov
push
jl
ret
lret
or
nop
lock
dec
std
std
xor
out
cli
add
push
insl
jno
push
mov
or
mov
mov
lods
pop
push
or
jns
out
mov
xchg
pusha
hlt
adc
imul
adc
rclb
icebp
jo
fidivrl
rcll
imul
rdseed
dec
daa
pop
jp
push
cmp
pusha
mov
mov
jo
lock
adc
pushl
loopne
out
sub
cltd
and
loope
nop
inc
out
and
in
sbb
or
rorb
add
add
aam
cli
fs
andb
or
test
adc
les
loopne
mov
jnp
cmc
popa
xchg
sub
pop
ficoms
pop
fwait
mov
adc
add
popa
iret
cmpsl
push
in
inc
aaa
xor
gs
mov
push
jnp
in
xor
push
mov
lock
mov
inc
data16
icebp
fld
mov
or
shll
cmp
cmp
pop
sub
popf
push
cmp
inc
icebp
inc
test
mov
inc
inc
inc
das
mov
adc
loopne
es
mov
mov
lret
inc
outsb
add
push
inc
mov
leave
push
pop
jae
aaa
jne
cli
push
fwait
jle
and
add
sub
dec
in
cmp
xor
fcomi
mov
jno
lret
jae
sub
mov
icebp
mov
icebp
pop
mov
inc
push
inc
add
pop
lds
test
sbb
insl
popa
push
xchg
push
popf
xchg
push
stc
lock
stc
xlat
cmp
mov
cld
out
or
cmpsb
std
jge
test
popf
xchg
lahf
ja
cmp
inc
mov
rcr
and
sbb
pop
pop
les
sub
adc
sub
mov
gs
cmp
mov
xor
xor
jmp
pushf
inc
mov
mov
xor
push
push
aam
and
cmp
js
ret
les
jno
popf
xor
sbb
adc
mov
sub
scas
fimull
ret
xor
into
push
xchg
mov
lret
das
push
jmp
dec
push
and
loop
lock
jae
jle
lods
mov
test
adc
push
jecxz
xor
mov
int3
jne
mov
sti
sti
loop
cmpsw
push
outsl
xchg
shlb
mov
jp
adc
dec
push
or
int
xlat
xor
mov
jp
cmp
lret
mov
dec
fcoms
jae
push
daa
dec
dec
icebp
and
sbb
sbb
test
jnp
sub
sub
and
jp
outsl
rclb
cwtl
add
and
and
xchg
loop
dec
mov
mov
insl
pop
xlat
push
aaa
outsl
repz
push
add
test
jns
xchg
dec
inc
je
mov
sbb
mov
dec
daa
hlt
stos
mov
or
xchg
fsubrp
stos
ret
enter
xchg
adc
jmp
mov
xchg
rorb
xchg
das
cmp
mov
pop
popf
rcl
cs
rclb
push
push
xchg
push
movsl
jl
inc
jecxz
mov
lods
loop
jne
cmp
std
add
mov
test
lahf
pushf
dec
rclb
adc
xchg
jb
xor
addr16
mov
push
lea
mov
lods
les
cli
cltd
popa
cmp
mov
jmp
in
and
mov
faddp
or
cltd
test
lahf
pop
xchg
fists
adc
mov
sbb
sbb
xor
sub
xor
rcr
cmp
mov
sarb
scas
xchg
ror
inc
jg
inc
mov
mov
push
xchg
inc
mov
push
ja
or
std
mov
inc
in
inc
adc
repz
test
or
jae
aaa
or
xor
push
fdivp
push
mov
adc
mov
rol
hlt
push
xchg
jae
mov
push
cmp
add
add
jno
xchg
cmp
jl
xchg
or
lea
popa
cmp
dec
out
and
inc
popa
xchg
iret
in
mov
stos
pop
arpl
sahf
insb
cmpsb
repz
mov
cmpl
fsubs
hlt
push
xchg
shll
popf
lcall
jecxz
mov
stos
aaa
jl
mov
stos
sub
adc
out
push
divb
dec
into
in
jmp
sub
xchg
gs
adc
subps
cmp
push
dec
add
fdivs
das
outsl
jns
imul
inc
enter
imul
mov
pop
jle
das
cmp
dec
aam
xchg
sbb
inc
mov
in
lods
dec
aaa
pop
push
jmp
pop
mov
add
lret
lcall
xchg
mov
sarb
rcrl
loope
mov
pop
imul
test
push
pop
cmp
and
jns
into
mov
mov
cmp
cli
inc
sbb
fisttpl
dec
and
xorl
scas
js
xor
sti
lret
lods
shl
xchg
and
jl
repz
jo
arpl
movsl
inc
hlt
add
jp
mov
dec
jp
push
dec
push
fwait
jno
stos
es
mov
gs
cmpsl
pop
xchg
cs
mov
mov
decl
jo
popa
push
rorb
mov
mov
sbb
sub
in
push
scas
pop
mov
push
or
sub
mov
add
dec
sti
push
ret
inc
jp
shrb
ja
popa
adcb
xor
and
aad
scas
jle
outsb
test
shrb
dec
aas
mov
xor
cmp
data16
lods
std
and
stos
pop
mov
mov
adc
jmp
loope
mov
and
or
pop
test
ljmp
rorl
daa
sbb
arpl
xor
stc
dec
dec
jl
scas
mov
inc
pop
mov
inc
sbb
add
pusha
push
shll
and
cmpsb
mov
loop
lret
jbe
pushf
movsl
and
aaa
movsl
and
xchg
adc
into
push
cmp
add
ljmp
outsl
imul
jo
sub
dec
push
jmp
adcl
aas
aad
loop
dec
aas
or
jb
jge
out
dec
mov
xorb
mov
test
mov
mov
loop
fildl
mov
push
sub
sub
jge
mov
rcrl
dec
ja
inc
movsl
or
push
add
push
into
je
aam
pop
dec
aad
gs
push
jno
sbb
in
orl
add
sub
scas
icebp
add
or
shrl
sbb
mov
insb
push
or
sub
mov
outsl
scas
adc
ret
xchg
or
jb
cmc
jo
leave
jp
jae
gs
js
std
pop
sbb
adc
aaa
push
ja
jb
xor
add
les
pop
scas
mov
or
sbb
sub
mov
in
mov
pop
gs
mov
pop
adc
mov
leave
xchg
pop
test
lcall
mov
insl
pop
inc
inc
mov
and
jmp
aad
int
adc
xchg
pop
sub
loopne
rcr
jmp
sub
xchg
mov
andl
jnp
call
in
cmp
lock
sbb
into
leave
xor
xor
push
lahf
mov
sbb
mov
push
mov
push
test
sbb
nop
test
jbe
out
cld
cmp
mov
xor
lds
dec
subl
jnp
gs
mov
lods
in
jp
add
mov
out
popa
ja
cmpsb
add
int3
mov
add
dec
out
stos
xor
mov
mov
out
pop
stc
mov
or
in
cmc
xor
sbb
jo
cmpl
nop
add
fs
lcall
gs
push
push
ds
cmc
mov
inc
aaa
mov
fs
fildll
pop
mov
inc
arpl
jl
xorb
mov
mov
shr
std
or
mov
xchg
mov
cld
es
dec
jle
insb
fwait
lret
adcb
or
dec
loopne
mov
movsl
ret
in
repz
aaa
pop
push
pop
movl
dec
and
imul
mov
mov
inc
jmp
call
fidivrs
push
cmp
mov
ret
les
sbbb
mov
adc
xchg
int
mov
inc
movsl
into
rcr
fadd
or
jb
and
sahf
and
jle
inc
xchg
repnz
or
test
mov
popf
xorl
inc
dec
filds
in
inc
cld
in
loope
xchg
imul
lcall
ja
rclb
xchg
mov
and
ret
adc
xchg
mov
cmp
lods
jae
std
inc
pop
xchg
mov
call
jnp
mov
sub
inc
push
stos
xlat
out
loop
mov
mov
lods
das
mov
in
jne
ss
lods
mov
test
movsb
rorb
fwait
push
addr16
mov
push
xor
jns
aad
das
insb
push
in
adc
es
xchg
mov
mov
pop
pop
cltd
test
or
scas
jmp
xchg
jecxz
sub
xor
movsb
into
lds
sahf
push
shrb
mov
push
in
jnp
mov
jl
mov
test
sub
pop
push
inc
movsb
dec
lcall
enter
sti
sbb
mov
mov
add
icebp
xchg
pusha
out
xchg
jecxz
push
cmc
pop
clc
in
imul
hlt
out
mov
mov
imul
cmp
add
jo
aad
adc
push
insb
mov
pop
pop
das
and
pop
and
loop
or
and
push
mov
enter
aas
add
mov
and
fidivs
pop
in
add
fadds
jbe
and
push
sti
imul
jl
loopne
test
into
popl
sub
ja
xchg
hlt
stos
int
jmp
mov
add
lahf
inc
rolb
add
imul
ss
sub
sub
loope,pt
push
imul
fwait
aad
sti
and
aaa
and
pop
add
fcmovnbe
xor
pop
jp
sbb
out
int
hlt
cmp
xchg
sbb
sbb
pop
inc
mov
fcmovnbe
aas
stos
hlt
xor
mov
push
stos
jno
mov
xchg
xchg
cli
popf
dec
add
je
xor
adc
xchg
fdivrs
cltd
add
sbb
aaa
add
lea
rclb
xchg
notl
xchg
push
andl
push
nopl
mul
pop
scas
pop
stos
cmp
push
dec
pop
mov
inc
mov
adc
fs
ja
and
pop
out
xor
xor
ds
aad
push
adc
mov
jno
dec
fwait
in
fwait
ja
jmp
test
mov
inc
idivl
adcb
cltd
into
mov
add
sbb
xchg
loop
je
dec
rcrl
jp
out
lret
insl
sti
jbe,pt
ret
popa
icebp
pop
stos
push
mov
lock
mov
fistps
test
jbe
fwait
addl
mov
cmpps
cli
sub
int3
mov
idivl
int
loopne
mov
xchg
mov
or
and
cmp
lahf
mov
or
out
in
inc
in
push
mov
outsb
adc
cmc
sti
xchg
in
add
pop
inc
lds
add
fsubrs
mov
loope
jmp
cmp
mov
jg
scas
pop
movsb
lock
xchg
arpl
dec
popa
fbld
test
out
loop
mov
aas
mov
mov
stos
cmpsb
mov
sub
aaa
inc
jns
cli
popa
adc
push
out
rorb
outsl
popf
push
in
jo
scas
sahf
scas
aas
inc
in
dec
fsubrl
sub
into
adc
push
cmpsb
nop
test
jbe
leave
pop
out
jno
shr
das
call
sbb
in
inc
addl
lock
rol
in
in
push
cltd
jl
xchg
pop
iret
fdivrl
loop
lods
cmp
out
inc
pop
fldt
sbb
pushf
idivl
mov
ret
and
xchg
fistpll
pop
push
add
pop
shrl
push
mulb
lock
add
into
mov
sbb
cmc
sub
nop
loop
mov
add
and
lret
repnz
sbb
and
fs
ret
je
dec
adc
inc
mov
dec
mov
and
outsb
jmp
mov
imul
push
xchg
xchg
push
mov
cs
inc
push
rorl
xchg
andl
or
and
pusha
das
sub
ds
sub
adc
stos
divps
nop
dec
and
call
lcall
mull
push
sbb
push
dec
cmpb
mov
outsb
pushf
cmp
int3
shlb
pop
mov
xor
xchg
fs
add
les
clc
ljmp
fcomip
push
mov
je
in
xchg
mov
ret
cmp
add
pop
pop
or
fs
mov
sbb
push
xchg
pop
cmp
xlat
addr16
sub
cmpsl
nop
jl
daa
sbb
js
add
adc
cmp
repnz
rcrl
sahf
xor
in
repz
sti
cld
sbb
test
cmp
ret
push
jb
mov
rclb
daa
vandps
xor
add
daa
stos
add
dec
sub
hlt
inc
popf
xorb
stos
mov
xor
xchg
xchg
repnz
cmp
mov
cld
pushf
add
loop
cli
adc
bound
aaa
dec
dec
cmp
jo
out
add
dec
pop
sbb
pop
adc
iret
xchg
mov
xlat
loopnew
mov
cmp
mov
jp
xchg
daa
iret
sub
xchg
popf
cmpsl
int3
mov
ss
movsl
push
popl
pop
adc
sti
mov
mov
add
mov
mov
loop
enter
mov
xor
pop
pusha
cltd
out
addl
dec
mov
dec
sahf
xchg
xchg
xor
cmp
cmp
movsl
xorb
mov
lcall
mov
and
inc
in
mov
lock
mov
imulb
inc
les
icebp
dec
rclb
movsb
adc
je
or
hlt
scas
testl
sbb
dec
stos
popf
xor
xchg
aam
loope
popa
lahf
add
jge
fdivrl
dec
ret
or
cmp
out
or
inc
cltd
mov
fsubrs
fcomps
test
mov
sahf
test
je
jns
add
or
std
testb
cli
int
popa
dec
in
sub
ds
std
sbb
push
je
pop
inc
roll
dec
mov
stc
lret
adc
sbb
shl
mov
rclb
push
leave
pop
adc
mov
adc
cmp
je
mov
jo
jae
xchg
sub
adc
sub
jecxz
cld
loope
dec
ss
push
push
fucomip
push
pop
adc
pop
jp
ljmp
lahf
and
and
jnp
ja
ljmp
add
sbb
test
inc
inc
nop
imul
repz
bnd
dec
mov
mov
fs
cs
aas
std
loope
fcmovb
xor
mov
stc
fcompl
push
jne
decl
dec
and
cmc
mov
cmc
jno
enter
pushf
mov
insb
or
jle
popf
jge
push
out
push
and
push
fwait
xchg
sub
lods
mov
repnz
pop
dec
or
fucomip
iret
fidivs
fildl
push
pop
scas
stos
cmp
push
movsl
mov
mov
jge
les
mov
data16
mov
movsl
cmp
push
sub
stc
pop
xor
sti
movsl
sub
arpl
sub
mov
sbb
mov
push
push
jecxz
mov
call
mov
mov
sarl
hlt
adc
sar
or
mov
stos
cmp
sbb
fwait
subb
cs
mov
addr16
pop
sbb
outsb
ljmp
nop
iret
sub
into
sarl
jbe
xorb
push
jns
test
pop
int
gs
push
mov
enter
and
xor
nop
insl
int
dec
mov
mov
mov
test
or
das
add
roll
dec
or
and
or
xchg
mov
sbb
bound
out
dec
dec
inc
cmp
push
roll
rcll
xchg
add
cld
add
mov
cs
jg
lock
mov
pop
jl
in
sbb
lret
sbb
std
inc
outsb
rorb
and
sub
test
jecxz
pop
xor
daa
std
mov
ljmp
xchg
std
inc
jae
sbb
xor
dec
lock
jnp
sbb
inc
xchg
push
icebp
ja
std
clc
ljmp
into
add
sbb
aad
mov
imull
xor
xlat
sbb
enter
xor
stos
jp
cmpb
nop
imul
clc
pop
rorl
xorb
shlb
push
jp
jo,pn
insl
hlt
add
ret
cmp
int3
jle
push
fimuls
lcall
pushl
xchg
push
xor
mov
movsb
cmp
dec
inc
packuswb
fmul
pop
scas
pop
out
scas
xlat
sar
repz
sahf
add
gs
jb
mov
sbb
push
mov
mov
and
pop
stos
inc
push
mov
in
dec
push
pushf
fimuls
enter
fwait
adc
mov
mov
adcb
xchg
insl
je
daa
jmp
mov
andb
xor
inc
ss
pusha
inc
dec
mov
xor
push
mov
and
gs
mov
fadds
fnstcw
into
xchg
mov
iret
loope
stos
cmp
add
jmp
jo
jg
jo
push
adc
fisubl
stos
jo
sbb
add
gs
ret
sbb
fs
popa
pop
call
mov
andl
ret
repz
xchg
adc
insb
ds
jmp
roll
or
or
nop
inc
xor
inc
push
mov
loop
icebp
add
sarb
fwait
xor
enter
pop
movsb
movsb
notb
in
xor
cmpsl
or
scas
cld
mov
icebp
ja
xchg
cltd
lret
pop
out
fcomp
xchg
orb
cmpb
jo
jp
test
repnz
pop
aad
test
pushf
pushf
lret
add
or
fwait
clc
sub
pop
cwtl
pushf
jg
add
or
lret
popa
test
int3
fisttpll
mov
jnp
mov
jno
cmp
in
in
mov
sbb
cmpsb
scas
outsl
push
out
fwait
xor
fsubrp
mov
rclb
pop
decb
pop
xor
fsubl
add
out
mov
nop
mov
scas
jns
mov
fnstenv
jns
or
sub
dec
lea
jo
lods
aas
adc
movsb
dec
adc
and
adc
or
mov
inc
addr16
outsb
data16
mov
adc
out
xchg
out
aam
rcl
dec
add
jecxz
fldl
repz
inc
add
push
out
lds
pop
add
pop
and
in
cld
dec
mov
xchg
insb
addr16
sub
sub
sbb
fisttpl
and
aas
adcl
pop
imul
in
mov
mov
clc
mov
mov
and
dec
stos
test
out
nop
dec
aad
xor
cs
clc
cmp
mov
dec
neg
cmp
stos
ss
xor
pop
cmp
xchg
cmp
shl
sbb
outsb
out
ret
shlb
enter
sbb
dec
cmpsb
fdivs
inc
addr16
in
jae
mov
inc
nop
adc
imul
adc
xchg
add
into
mov
leave
hlt
mov
inc
mov
enter
push
fistpl
test
push
xchg
fistpl
mov
cmp
loopne
lds
insl
jne
and
inc
cld
lods
or
ja
mov
aaa
jns
jns
and
ja
xchg
sbbb
and
lea
int3
mov
dec
xchg
xlat
dec
iret
push
xor
add
pop
addr16
dec
cmpsb
mov
xlat
je
xor
rcll
xchg
push
xchg
movsb
mov
aas
and
sti
adcl
dec
adc
nopl
jp
pop
rcrb
loop
cld
adc
add
fisubl
imul
pop
push
dec
data16
test
int
aas
pop
in
cwtl
loop
xor
in
cmp
mov
fxch
dec
insb
stos
loop
and
aas
fwait
std
inc
into
dec
movsb
lret
mov
xchg
cld
xchg
sub
adc
mov
sti
cmp
jmp
loopne
mov
test
rorl
stos
loope
lock
pusha
jecxz
das
mov
ljmp
out
push
pop
xlat
mov
adc
inc
stos
push
mov
div
inc
jne
es
and
and
fstps
pop
nop
xor
movsl
hlt
push
dec
sbb
out
in
xchg
dec
pusha
fucomip
mov
cmpsb
into
push
jle
pushf
xchg
mov
adc
mov
add
lcall
cmp
push
cmp
dec
adc
cld
out
mov
dec
mov
pop
add
jge
ljmp
jb
mov
xchg
shl
cli
or
or
sbb
sbb
mov
dec
mov
pop
aas
negl
leave
jne
aas
jl
mov
in
mov
adc
sti
mov
jmp
pusha
jg
test
sub
and
shlb
jmp
cmpsl
sbb
lahf
lret
data16
inc
and
addl
clc
mov
inc
stc
sbbb
ljmp
mov
jp
ja
in
repnz
mov
mov
leave
movsl
rol
hlt
ret
ficoml
xor
int3
and
mov
mov
imul
lods
addb
dec
arpl
xor
repz
bound
sarb
inc
sbb
adc
cmp
int3
xchg
loopne
std
lods
mov
sahf
pushf
cmp
jg
mov
add
aaa
fdivrl
arpl
cli
sub
jns
cs
lock
cmp
jmp
sbb
leave
xchg
cmpsl
mov
insl
sbb
lahf
mov
dec
mov
orb
int3
je
test
jle
jb
cmp
stc
sub
outsb
pop
mov
adc
inc
lea
into
mov
mov
mov
into
pop
and
sbb
pop
scas
jbe
and
add
adc
mov
dec
loope
cmc
xchg
out
sub
lcall
fwait
mov
mov
sub
jge
rcrb
ficoms
scas
cmp
cli
std
inc
jg
jecxz
mov
dec
mov
loope
mov
aad
sbb
adcl
imul
push
dec
jnp
xor
outsb
dec
or
sub
and
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
ret
stc
push
insl
add
jp
pop
jp
fcmovnu
cwtl
scas
fdivl
lahf
in
rol
lods
dec
add
adc
mov
xchg
dec
mov
sbb
xchg
lods
bound
cmpsb
cmp
dec
cli
or
decl
and
mov
ljmp
neg
dec
mov
std
and
or
das
das
mov
push
xor
fisubrl
shll
jne
xchg
cmp
pop
scas
clc
ss
jo
sti
in
aad
mov
adc
sub
mov
notb
mov
movsl
stos
pop
out
pop
xchg
add
jg
orl
faddl
mov
scas
inc
cmpsb
shll
jg
fimull
jnp
jns,pn
push
fisubl
mov
repnz
arpl
js
adc
jno
iret
xor
aas
dec
bound
iret
push
incl
pusha
sarb
shll
pop
jae
add
or
lcall
push
jmp
lret
shlb
loopne
ljmp
imul
jmp
mov
in
andl
inc
rcrl
rol
stc
jl
repnz
mov
push
xchg
xor
mov
jns
fsubrl
mov
or
pusha
mov
add
mov
call
push
arpl
repz
mov
or
sbb
xor
xchg
sbb
cmp
out
in
adcl
and
sub
cld
mov
add
add
scas
xchg
xchg
jp
mov
imul
or
aas
inc
cmp
pop
ja
mov
int3
andl
sti
and
inc
pushf
aam
movsl
ds
in
xor
adc
sahf
test
mov
sbb
mov
mov
aam
lret
add
adc
rclb
aam
in
mov
mov
test
imul
inc
push
xchg
pop
mov
lahf
icebp
lcall
mov
xor
cld
js
pop
dec
fldt
mov
mov
cmc
xchg
add
mov
pop
pop
movsb
dec
jg
jnp
stc
jb
add
push
xor
ds
xor
hlt
sbb
sbb
mov
mov
imul
jb
inc
mov
bound
xor
xchg
pop
push
testb
aad
in
cmp
dec
fcmove
out
sub
xchg
inc
and
cmp
inc
jecxz
jl
jmp
and
pop
pop
mov
xor
add
and
rcll
test
jb
jle
mov
add
scas
out
lahf
xor
jl
pop
lret
negb
mov
loopne
ds
pop
push
push
dec
adc
or
test
dec
mov
outsl
add
cmp
inc
inc
jl
call
mov
adc
lcall
pop
fsubr
nop
flds
pop
fwait
mov
insl
repnz
cmp
aad
push
push
out
mov
mov
mov
dec
pushf
lahf
lcall
xor
cmpsl
add
mov
dec
fdiv
cld
stos
sub
loopne
popf
xor
sub
xlat
mov
sub
dec
lds
out
testb
xor
and
icebp
dec
or
inc
shrb
pushl
adc
xchg
mov
mov
sbb
add
inc
lret
jns
push
xor
xchg
sub
stc
rcll
jle
cltd
fsubs
lods
jne
jl
rcll
push
sbb
pop
data16
jb
mov
mov
push
ljmp
xor
pop
cwtl
das
fsub
sbb
xor
mov
sub
mov
jo
jg
sub
mov
add
jns
pop
sahf
aam
das
call
cmovs
shlb
test
cli
sub
sub
cwtl
xor
xchg
adc
pop
repnz
push
pop
clc
xor
negl
add
jge
xchg
movsl
cmp
sub
mov
stos
aas
bound
mov
add
pop
or
add
fstl
mov
popa
jl
stc
adc
mov
adcb
iret
cli
adc
stos
lret
inc
jno
int
mov
gs
aam
mov
lcall
dec
adc
and
std
fnstsw
xor
sahf
or
pop
mov
pop
or
lret
cwtl
shll
test
lret
popf
sarl
push
outsl
add
arpl
js
and
shlb
out
mov
dec
adc
xchg
add
cmp
in
ljmp
add
sub
rcrl
in
out
shr
sbb
lds
stos
inc
je
add
cltd
int
and
jmp
mov
adc
pmulhw
adc
cmp
xchg
cwtl
fimuls
xor
hlt
iret
cmp
orb
mov
in
sti
repz
mov
out
pusha
push
xor
nop
daa
stos
stc
push
pop
jl
cltd
gs
out
push
in
mov
mov
xchg
ret
pop
and
mov
and
repnz
xchg
mov
push
rdmsr
sahf
inc
sub
mov
cwtl
arpl
pop
cmc
push
sbb
mov
ficoml
int3
adc
jo
divl
sti
shr
int3
xor
mov
out
or
mov
dec
sbb
mov
cltd
pop
test
leave
mov
sti
stos
fidivrs
sahf
outsb
mov
mov
mov
test
adc
xchg
std
sub
into
push
frstor
add
repz
mov
popf
in
sti
dec
shrb
xchg
add
ret
ja
mov
fs
pop
cs
inc
insl
hlt
test
mov
imul
sub
repz
jg
xchg
popa
pavgw
call
jns
dec
push
inc
lahf
hlt
add
xchg
lods
fdivrs
cmp
xor
out
outsl
mov
lahf
cltd
imul
aam
rol
out
mov
pop
rcl
push
jae
ljmp
jne
jle
mov
jmp
mov
mov
orl
xchg
inc
dec
jbe
dec
and
fwait
xchg
popf
fdivrp
mov
mov
addb
icebp
lock
ds
jmp
stos
jns
cmpsb
shlb
inc
int3
imul
addr16
popa
cmp
sbb
sbb
dec
adc
or
inc
test
dec
outsl
pop
mov
inc
adc
test
mov
pop
push
jl
mov
sbb
mov
dec
js
pop
or
pop
cmp
aaa
pop
adc
insl
bound
sbb
pop
lret
pop
dec
rcrb
adc
cmpsl
xchg
or
mov
cmp
cmp
cmp
mov
jmp
fsubr
das
mov
fmull
popa
mov
fildl
cmp
mov
les
psubusb
cmpsl
adc
push
aam
adcb
cwtl
rclb
dec
pop
ret
mov
or
jae
and
or
push
fistpl
push
pop
and
xchg
fsts
xchg
jo
outsl
fisubs
mov
mov
js
xor
ret
cmp
mov
adc
mov
lahf
gs
sbb
inc
xchg
inc
out
scas
in
sub
pop
movsl
out
mov
or
out
sub
repz
dec
mov
ds
insb
scas
jg
sar
insl
jmp
mov
mov
xchg
hlt
dec
inc
push
lds
in
js
and
cld
cmc
into
cmp
or
xorl
arpl
and
or
imul
xchg
bound
push
jnp
xchg
jmp
fldcw
add
stos
xchg
fcoml
jo
sahf
sbb
xor
div
cltd
adc
xchg
and
mov
xor
aam
mov
orb
mov
sub
inc
mov
lret
cmp
loope
add
inc
adc
cmp
call
je
inc
cmc
aad
sub
shll
inc
mov
xchg
or
sub
loope
push
push
push
test
and
jnp
push
cmp
mov
add
xlat
out
cmpsb
sbb
cmp
sub
pop
fstps
jnp
push
lock
enter
loopne
or
leave
cmc
in
push
in
xchg
cmp
insl
mov
stos
ja
cwtl
jnp
mov
cmpsl
push
sar
jbe
pushf
repnz
pop
jae
push
mov
lret
add
dec
push
dec
addr16
cli
adc
jnp
xor
mov
jmp
lds
stc
xor
arpl
lret
mov
pop
inc
push
jmp
popw
and
inc
mov
sbb
xorl
sbb
mov
in
lods
mov
pop
xchg
xchg
push
cmp
mov
cmpsl
and
xlat
add
jp
sbb
mov
mov
mov
xchg
sub
outsb
push
mov
mov
shr
mov
popf
xchg
mov
pushf
jle
jg
pop
cmp
and
mov
into
outsl
fimull
mov
xchg
cmp
ret
popa
into
ret
lods
shrl
mov
push
sub
jbe
dec
das
lret
or
fistpl
ljmp
xor
data16
mov
push
mov
addr16
xor
fdivr
push
subl
test
fcomi
cmc
in
subb
loop
add
sbb
push
mov
xchg
sub
xchg
out
add
repnz
es
mov
jg
or
lds
or
out
lods
xor
movsb
inc
cs
adc
jg
adc
jnp
es
inc
push
test
adc
leave
add
sub
mov
ljmp
mov
lds
xadd
pop
and
mov
dec
loop
mov
les
iret
push
mov
mov
mov
ja
daa
dec
cmc
jge
push
mov
sbb
test
mov
or
sbbl
das
add
cmp
xchg
push
dec
iret
mov
movsb
and
dec
mov
testl
xchg
inc
std
or
sbb
test
imul
inc
daa
adc
pop
outsl
outsb
in
cmc
push
jne
sub
xor
xor
push
cmp
mov
mov
mov
mov
xor
ds
stc
push
cmp
std
sbb
insl
shlb
mov
aas
jp
and
int
mov
lods
mov
push
add
pop
inc
fmulp
cvtps2pi
sarl
mov
push
insl
clc
push
outsl
je
leave
mov
jnp
test
xor
or
cmp
lcall
pop
mov
push
pop
imul
mov
hlt
jb
xchg
aam
pushf
and
mov
rcrb
or
or
iret
popf
push
add
lcall
ja
out
test
xlat
mov
xchg
mov
cwtl
scas
dec
jl
sbb
jmp
sub
insb
enter
pop
cmp
mov
lock
jb
rorl
ja
dec
bound
call
leave
xlat
imul
test
pop
enter
fs
mov
mov
push
or
mov
or
mov
cmpsl
jbe
jmp
lahf
ss
mov
fprem
push
out
test
jo
dec
test
imul
inc
xor
out
repnz
movb
mov
mov
nop
in
cs
xor
xchg
push
in
lods
mov
shlb
loop
push
adc
dec
mov
push
jg
cwtl
sub
ljmp
orb
arpl
and
adc
sbb
add
jno
cmp
dec
ffree
daa
xchg
std
jl
xor
sti
jns
in
gs
ja
cs
push
cmpsl
pop
sbb
mov
xchg
adc
cmp
mov
push
mov
mov
adc
xor
cmp
notb
aaa
mov
mov
out
cmp
mov
jle
inc
dec
jnp
popf
push
sbb
cmp
sbb
adc
xor
lret
insb
sub
mov
sub
fs
xor
mov
push
mov
rclb
or
in
das
mov
cmp
pushf
sub
dec
add
jp
pop
mull
pop
mov
cmp
aaa
mov
jecxz
imul
or
xlat
adc
cld
es
loope
jle
hlt
dec
loopne
shlb
lahf
cmc
test
sbb
adc
out
mov
into
mov
xor
sub
lock
les
into
xchg
mov
mov
adc
leave
push
lds
push
insb
iret
out
cli
cmp
xor
push
int3
sbb
div
sub
cmp
pop
pusha
jnp
addr16
sub
enter
inc
sbb
xchg
int
popa
fs
and
popa
push
int
decb
and
imul
push
movb
dec
and
cmp
fisttps
inc
add
ret
mov
mov
das
in
xor
insl
inc
and
push
mov
lea
in
cmovs
fnstsw
push
mov
dec
jne
cmp
dec
loop
or
inc
mov
not
cld
jecxz
loope
lods
jne
inc
loope
data16
cwtl
mov
sbb
js
sbb
lret
imul
cwtl
pop
shl
or
cwtl
jo
mov
jp
outsl
sub
push
adc
jge
mov
sub
dec
leave
xor
and
or
pusha
fimuls
xchg
es
nop
pop
out
push
nop
adc
shlb
xchg
xchg
lahf
mov
in
pop
inc
fidivl
sbb
sub
fimull
aad
outsl
pop
jns
add
inc
push
sub
out
sub
adc
out
out
add
mov
test
mov
cmp
mov
fisubrl
adc
xchg
aas
clc
sarb
cmp
gs
sub
movb
lods
mov
fldcw
inc
imul
imul
in
call
mov
lahf
cmc
mov
insl
push
xor
and
lock
sarb
out
xor
es
test
sub
sahf
enter
out
insl
adc
adc
data16
mov
adc
pop
mov
add
mov
shll
insb
or
pushf
shrl
mov
mov
lret
ret
cmpsl
mov
pop
lds
push
xor
loop
cmp
sub
shlb
pop
sbb
movsb
xchg
xor
imul
pop
jle
dec
int3
cmp
test
aad
lcall
fprem1
pusha
addr16
popf
test
xchg
inc
iret
mov
ljmp
dec
bound
popa
cld
test
pop
lahf
adc
adc
sub
nop
sbb
xor
jmp
js
sbb
cmpsl
in
mov
add
jns
adc
mov
out
jnp
jge
or
lods
push
je
pop
out
ret
test
in
push
jb
repnz
mov
pop
inc
cmpsl
add
adc
int3
and
sub
lcall
mov
xchg
shll
movsl
aaa
mov
test
push
or
int3
sahf
bound
aas
and
jg
cmp
imul
dec
or
jle
sub
mov
shll
ret
dec
adc
pop
push
lahf
into
and
or
push
cmp
push
jne
sbb
jle
push
and
add
shrl
loop
mov
or
loopne
bound
dec
adc
push
cmc
mov
and
pop
pop
inc
cld
in
inc
mov
jge
push
pop
adc
push
sub
xchg
in
fsubs
js
ss
stos
pop
pop
mov
sbb
ret
or
and
push
sbbb
mov
hlt
repz
loope
rorl
push
xor
push
out
inc
mov
pop
fst
and
icebp
cli
imul
mov
test
xlat
jne
mov
jae
xor
inc
callw
sub
stos
call
lea
or
js
divl
add
lret
popf
movsb
add
inc
mov
xchg
dec
sbb
xchg
and
add
mov
dec
xor
xor
add
mov
sub
pop
aaa
adc
inc
int
mov
and
sub
xor
dec
ljmp
xchg
xchg
shrl
shrl
loopne
std
push
jb
adcb
mov
rcl
mov
or
test
fisttpl
sbb
lods
test
adc
mov
dec
add
mov
stos
mov
mov
dec
imul
shlb
xchg
cmpl
pusha
push
aad
imull
cmpsl
xchg
outsl
sbb
mov
outsl
inc
imul
out
xor
enter
cmpsl
popf
push
mov
sub
add
inc
inc
lds
add
push
sbb
jmp
xchg
and
pop
jnp
mov
imul
ds
push
in
xor
xlat
in
or
daa
xor
loop
cmpsl
test
mov
jge
xchg
and
or
gs
int
fldz
sbb
and
jecxz
mov
cli
mov
insb
pop
addb
out
out
pop
enter
push
dec
push
aam
sub
sub
and
mov
dec
sub
mov
mov
movsb
pop
inc
arpl
xor
pusha
stc
pop
loope
sub
outsl
xchg
mov
rorl
aam
or
test
das
mov
adc
sbb
cwtl
test
push
mov
cs
add
mov
roll
and
mov
cs
fsubrl
pop
pop
xorl
jmp
mov
lea
test
scas
lcall
out
mov
sub
cmp
xor
cwtl
push
call
xchg
pushf
fists
nop
in
and
jbe
repnz
outsb
mov
imul
cwtl
dec
aad
adc
dec
nop
cli
cmc
aad
xor
pop
std
mov
pop
inc
aam
inc
addr16
add
test
xchg
sub
xor
jnp
mov
mov
test
mov
stos
cmpsl
cs
scas
rcr
xchg
jge
push
mov
push
rolb
inc
rcrb
lcall
push
insb
sbb
inc
mov
iret
xor
dec
mov
push
shlb
arpl
mov
xor
in
or
jmp
test
clc
lock
sbb
out
xor
icebp
xor
repz
mov
pop
lods
xchg
push
mov
lret
leave
sbb
insb
mov
ljmp
stos
mov
cmp
jg
sub
lock
mov
jp
rcl
ds
inc
mov
fucom
inc
xchg
push
nop
sbb
insb
push
loop
aaa
add
xchg
mov
mov
xchg
cwtl
shlb
loope
add
cmp
mov
mov
jp
sbb
inc
xorb
cld
add
mov
out
in
dec
rol
dec
andl
mov
cmp
test
mov
cmp
xor
std
pop
push
in
mov
jb
xor
sub
icebp
in
push
inc
fcmovnb
or
sbbb
enter
fcoml
xor
or
cli
mov
push
mov
scas
test
aaa
cltd
insl
idivb
stc
data16
cmp
in
and
jns
push
pop
mov
roll
int3
inc
sub
mov
sbb
mov
xor
push
enter
sub
sarb
cltd
lret
popf
adc
enter
adc
mov
mov
call
cmc
subb
ss
lods
sbb
pop
pop
popa
pusha
or
sub
mov
mov
cmpl
jg
popa
jns
xor
push
scas
push
push
into
out
outsb
mov
cmp
lcall
sub
bound
jg
in
pop
scas
mov
test
lret
cmp
sahf
jmp
es
push
into
mov
jno
faddp
adc
mov
stos
mov
sub
lret
imulb
dec
lcall
jmp
es
fbstp
mov
sbb
push
dec
mov
mov
jle
jbe
jp
js
ss
addr16
or
or
call
loopne
sbb
xor
cli
iret
and
icebp
and
aaa
ret
add
fmuls
in
sbb
add
mov
lahf
aam
aaa
mov
jmp
dec
ss
xchg
subps
cli
mov
xchg
and
fimull
cld
add
pop
pop
inc
cmp
filds
cwtl
add
push
sbb
loope
sub
xor
dec
sti
outsl
fcmovu
dec
sbb
out
sti
clc
mov
rcrb
lods
in
int3
in
sub
dec
mov
xor
fildl
loope
dec
mov
dec
aad
fcom
xlat
popf
mov
push
lods
fisttpll
pop
in
mov
mov
and
dec
sub
jno
push
dec
cmp
inc
test
or
ja
ret
pop
xchg
lods
shl
xchg
jo
lods
ret
rolb
xchg
or
fsubs
xchg
push
sbb
mov
movsb
mov
adc
ret
fwait
popa
mov
mov
add
rcr
outsl
lret
mov
xchg
sub
or
iret
push
sub
lret
and
movsl
mov
jns
or
or
mov
cmp
dec
jp
mov
pushf
inc
or
pop
aad
jmp
cmp
mov
lret
xlat
push
imulb
adc
cld
sbb
jo
xlat
and
jle,pt
std
dec
lsl
mov
sarl
dec
push
jae
sbb
sahf
sbbb
shl
pop
push
sbb
into
es
idivl
mov
pushf
out
clc
int3
cmp
iret
jo
into
popa
xchg
lock
or
popa
and
into
mov
rorb
or
jo
mov
cmp
loope
mov
dec
jae
leave
movsb
sub
call
push
aaa
ss
dec
or
push
and
jg
pushf
sbbb
cwtl
out
xor
pushf
out
inc
adc
test
das
shll
xor
fwait
xor
cwtd
outsl
fwait
mov
insb
xchg
or
push
into
mov
or
xchg
in
loopne
sahf
jmp
rcrb
in
icebp
in
lahf
in
sub
dec
je
cld
popa
inc
jecxz
aaa
call
push
nop
inc
push
or
int
push
mov
loopne
lds
daa
sub
mov
test
fdivs
and
pop
sbb
adc
push
xchg
mov
outsl
mov
adc
fdivrl
inc
outsb
cmp
sub
adc
mov
sub
cld
pop
mov
sub
test
xchg
cmc
jns
pop
and
xchg
jno
xor
ljmp
xchg
jg
or
das
loopne
test
pop
pushf
dec
xor
gs
jae
fsubr
shl
cmp
stos
repnz
mov
sarl
sub
fcomip
stos
test
je
xchg
popa
cmp
cltd
in
stos
imul
lods
jle
lret
or
gs
jne
mov
mov
xchg
sbb
ljmp
push
jecxz
mov
push
inc
sarl
inc
int
sub
shlb
mov
cmp
clc
xchg
loope
in
jp
mov
outsl
push
repnz
dec
push
leave
stos
mov
xlat
pop
xchg
js
clc
pop
repnz
adc
adc
push
pop
test
gs
ret
add
or
addl
scas
dec
loopne
loopw
scas
movsl
jne
rcrl
call
je
xor
bound
dec
jp
xchg
mov
mov
push
les
in
pop
xor
jl
les
pushf
lock
or
nop
sbb
sbb
imul
mov
pop
jno
clc
int
out
cmp
jns
mov
stos
or
mov
rorb
imul
adcl
push
sub
cmpsb
mov
fcmovnb
int3
dec
push
pop
test
into
add
jmp
push
xlat
cmpsb
inc
xor
je
and
mov
mov
xchg
inc
je
enter
inc
test
ficoml
cli
and
inc
stos
push
mov
pop
movsl
pop
fsub
pop
data16
repnz
movsb
test
add
js
cmp
pushf
sarl
mov
or
adc
jp
adc
mov
or
xor
lea
inc
fs
pop
std
mov
out
pop
cmpsl
ds
push
mov
mov
pop
mov
fwait
arpl
pop
inc
mov
mov
pop
jno
xchg
in
jb
loopne
ret
push
inc
outsb
mov
inc
cwtl
xor
dec
pop
shlb
mov
nop
hlt
pop
ja
jp
ret
nop
mov
mov
shll
add
lods
push
out
mov
inc
test
xchg
or
or
aaa
adc
adc
or
std
test
insb
sbb
lcall
and
push
pusha
cld
aad
lock
mov
pop
xchg
xchg
test
add
xlat
dec
pop
mov
push
out
cld
mov
in
lea
loope
dec
repz
inc
xchg
xor
jge
xchg
data16
add
inc
lods
lret
repz
and
mov
add
loope
pop
sbb
sub
add
loope
cmpsl
aas
idivb
sub
out
test
out
inc
clc
push
jg
test
popa
stc
xor
mov
adc
repz
xor
dec
mov
sbbb
call
test
outsl
leave
mov
inc
ss
je
loope
jbe
dec
ficomps
test
and
out
and
push
out
jb
mov
jmp
or
cmp
inc
loop
shrb
sahf
mov
mov
les
std
or
rorb
pop
shll
dec
mov
addr16
in
mov
push
test
stos
add
shlb
cmpsb
ljmp
jmp
nop
testl
push
mov
jmp
sub
dec
add
roll
ds
into
rorb
andb
scas
pop
mov
stos
push
call
add
mov
adc
aaa
cmc
and
rclb
into
mov
push
jnp
push
fcoms
and
add
mov
sub
xor
push
fld
mov
add
mov
dec
cmpsb
xlat
popa
movups
push
shrl
and
xchg
aad
xor
xchg
sub
outsb
or
add
out
xor
nop
sarb
mov
push
mov
mov
or
mov
outsb
inc
pop
lods
pop
cmpsb
inc
imul
mov
mov
int3
into
out
je
xlat
jne
dec
insl
push
mov
adc
push
sub
jmp
bound
cmpsb
xchg
adc
pop
cmpsb
pop
mov
adc
lea
call
sub
mov
loopne
inc
add
das
ret
xor
lret
xchg
js
in
inc
push
mov
and
cwtl
insl
cmp
aas
cli
add
int3
aad
fldt
addl
add
sub
int3
cli
fistpl
arpl
sbb
sub
movd
out
xor
repz
movsl
lcall
mov
and
pop
adc
outsl
adc
loope
mov
call
or
out
cltd
into
aad
mov
rorb
lret
or
in
jb
vmwrite
enter
popl
pop
sahf
jne
sbb
dec
push
mov
jne
test
pop
jecxz
lea
lcall
js
jns
pop
aas
mov
sub
inc
fdiv
clc
pop
ljmp
in
push
ja
mov
mov
mov
dec
pop
pop
divb
sub
out
or
scas
pusha
jg
data16
ret
jnp
das
lahf
js
subb
lods
cmpsl
mov
inc
ficomps
orl
jmp
movsb
stos
dec
into
shl
mov
imul
sub
mov
xchg
jmp
xchg
xchg
ret
push
xchg
fimull
fldl
loopne
sahf
fnsetpm(287
rcrb
or
xchg
add
int
jbe
sbb
inc
xchg
inc
or
and
cmp
sub
hlt
adc
or
and
imul
pop
push
mov
ja
xchg
lock
sbb
movsl
push
call
cmpsl
jns
into
adc
push
daa
inc
int3
negb
div
inc
adc
imul
inc
sbb
mov
xchg
imul
sahf
out
jle
or
sti
jne
inc
out
dec
rorl
push
mov
mov
in
jecxz
cmp
xor
lret
jl
or
out
sbb
push
cld
xchg
lock
movsl
push
dec
mov
or
sub
cs
les
jnp
addr16
aaa
push
sbb
xor
sub
lock
push
and
mov
repnz
jecxz
jno
jmp
mov
jmp
addb
xchg
mov
fwait
xchg
dec
or
jae
jle
movsb
and
xchg
sahf
lret
das
addl
and
mov
adc
arpl
fcoml
lahf
add
pop
sbb
cwtl
mov
dec
test
jp
stc
add
mov
lods
adc
fucomp
daa
repz
mov
xchg
mov
push
int3
aam
bound
nop
jg
in
pushl
popa
mov
sub
pop
loopne
shlb
add
cmp
jns
xchg
add
sbb
inc
mov
cmp
jne
mov
sub
idivb
dec
fstps
ret
sub
in
sbb
scas
add
outsb
fisttps
lock
pop
xor
mov
sbb
xchg
ljmp
insb
or
sub
outsl
dec
push
mov
adc
xchg
test
movsl
inc
add
dec
xchg
push
jnp
sarl
int3
out
out
jns
push
pop
xchg
loopne
cs
in
cmpsb
aaa
mov
cwtl
shlb
insb
xchg
fs
ret
js
pop
sub
mov
cwtl
divl
ds
repnz
rclb
cld
in
enter
popf
xor
push
sbb
xchg
ds
xchg
xchg
xor
stc
and
cli
in
add
testl
sbb
jae
mov
test
aad
arpl
mov
xchg
jp
cmp
cmp
and
jae
cmc
test
ja
pop
jge
clc
pop
loope
imul
xor
lods
fucom
andb
inc
insl
dec
rcrb
testl
xchg
sbb
cmpsb
dec
add
data16
jns
xchg
imul
jl
scas
xlat
movsb
repnz
jbe
and
das
mov
lods
adc
pop
loopne
mov
mov
and
pop
inc
jbe
or
je
xchg
or
mov
gs
loop
mov
mov
push
inc
jne
push
cmpsb
clc
and
adc
fdivrs
enter
mov
or
jmp
mov
aas
sbb
adc
push
movsl
jg
push
scas
movsl
push
shlb
push
fildll
out
data16
push
aad
ss
dec
mov
jno
rcl
cltd
ds
icebp
popf
mov
cmp
push
mov
cmp
jb
cmp
rcrb
sbb
stos
ret
add
adcl
ljmp
xchg
arpl
mov
cld
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
addl
popf
jg
insb
cmpsl
movsl
lds
in
popf
xchg
sub
inc
or
cltd
add
popa
ret
in
fstpt
mov
inc
sub
iret
mov
into
push
lods
add
inc
and
dec
xor
dec
test
push
ret
sub
or
mov
jle
pop
aam
jae
adc
sbb
xchg
push
int
ja
sbbb
push
mov
and
jge
je
xor
push
lock
inc
xchg
pushf
iret
add
addl
push
dec
pop
xlat
pushf
imul
xchg
insb
push
into
xor
sbb
ja
sarb
pop
inc
lock
lds
filds
jg
hlt
fcoms
in
outsl
mov
sbb
mov
idiv
jle
cmp
mov
pop
push
lods
hlt
dec
int
mov
rcrl
sbb
inc
test
cmp
mov
mov
mov
add
mov
inc
hlt
fucomip
aas
xor
incb
jo
in
lahf
aam
sbb
xor
dec
mov
pushf
sub
jl
dec
and
inc
arpl
loop
push
mov
idivb
jl
arpl
mov
add
shll
outsb
jno
pushf
sti
mov
int
pop
je
push
push
mov
adc
mov
sbb
cmpsb
jb
xchg
mov
dec
push
in
cmpb
xor
push
push
in
arpl
lahf
lcall
sahf
ret
icebp
test
or
getsec
cwtl
push
leave
es
xor
xchg
aas
mov
sbb
loopne
add
xchg
mov
movsb
dec
cmp
push
clc
push
lahf
cmp
test
dec
adc
adc
dec
sbb
fsubp
inc
lods
insb
add
xor
jecxz
bound
into
stc
pop
mov
call
sbb
cwtl
in
mov
movsb
loop
popf
mov
lock
pop
nop
xchg
inc
je
adcl
and
lock
xchg
leave
sbb
aam
int3
frstor
adc
aaa
scas
scas
xchg
xchg
xlat
cmpb
out
addr16
sbb
xor
imul
pop
pop
int
out
pop
fcoms
sub
nop
xchg
fwait
fwait
add
testb
fdivrp
jbe
dec
fildll
insl
cmp
push
sub
inc
not
xor
icebp
call
sbb
loopne
int
je
xchg
fxch
pop
stos
pop
inc
fwait
xchg
cmp
mov
out
push
lret
rorl
fnsave
sub
or
test
xchg
add
out
shll
xchg
scas
push
sub
cmp
aad
mov
cmp
mov
xchg
or
mov
pusha
or
jnp
mov
lods
dec
cltd
push
and
shrl
sbb
cmp
in
push
push
mov
fisubrs
mov
addr16
sbb
stc
pop
cmpsb
shlb
ss
rorl
sbb
mov
add
jmp
cmp
insl
inc
or
clc
loope
xlat
xchg
jbe
bound
sbb
cmc
out
pop
lahf
push
ret
pop
idivl
outsb
dec
mov
or
je
bound
mov
pop
cmpsb
cmpsl
scas
je
fnsave
mov
xchg
sub
inc
pop
sbbb
push
popf
dec
xchg
push
inc
and
push
jne
rcrb
test
jmp
push
mov
imul
addl
mov
into
je
adc
dec
push
test
xor
mov
pop
lock
out
dec
imul
mov
iret
fsubs
movsl
scas
mov
mov
xorl
push
sub
call
jb
fldl
jae
add
fadds
pop
out
imul
loopne
sbb
dec
mov
cmp
xor
adc
andl
dec
mov
sahf
adc
jne
ljmp
or
push
cs
mov
jle
lcall
add
inc
idivb
bound
cld
sbb
adc
mov
std
and
add
jo
popl
mov
orl
lret
call
divb
adc
mov
xchg
jno
ret
jnp
mov
scas
data16
dec
in
pop
pop
aas
fstpl
fbld
mov
pop
std
aas
jbe
mov
inc
aaa
shr
insl
insb
in
and
icebp
mov
jns
jge
xlat
into
cmp
ror
repnz
cwtl
or
bound
xchg
test
mov
fbld
jl
out
icebp
pop
mov
lods
insl
rorb
lock
or
xor
xchg
in
iret
cld
dec
call
xchg
mov
flds
dec
mov
mov
cmpsb
xchg
sbb
scas
sub
adc
dec
rorb
popf
adc
sub
daa
mov
jb
lods
out
outsl
adc
mov
and
shrb
xchg
aad
test
divl
fisttpl
push
lcall
pushf
cmp
popa
adc
push
xor
jns
mov
jmp
arpl
sahf
ret
stos
cwtl
das
mov
jnp
push
int
divb
iret
fmull
test
sti
or
push
mov
cmc
mov
filds
mov
lods
mov
xchg
imul
mov
pushf
xor
dec
push
dec
dec
jp
das
mov
inc
imul
test
push
out
mov
pop
add
lret
fnclex
and
scas
add
or
xchg
push
adc
neg
dec
stos
xlat
mov
jbe
xor
arpl
sbb
cs
jo
sbb
in
fisttps
in
mov
mov
cmc
movb
cli
xchg
mov
sbb
pop
ss
fcoml
movsb
scas
shrb
cmp
ljmp
inc
bound
push
lods
testb
insl
inc
pop
out
cmp
repnz
lock
xorl
fisubs
jae
and
jb
daa
ror
or
mov
push
shl
lcall
pop
and
jg
test
lcall
cmp
add
or
xchg
test
xlat
push
or
and
gs
repnz
mov
and
jo
jnp
in
pop
jb
adc
mov
push
add
or
mov
push
andl
or
xor
mov
mov
dec
push
xchg
xchg
imul
xor
pop
xorb
push
out
scas
add
sub
dec
jae
lods
sub
xor
sbb
push
push
stc
push
push
xchg
cmp
fcoml
pop
sbb
sbb
and
inc
dec
ja
push
scas
mov
mov
mov
test
mov
pop
inc
cmp
mov
sbb
add
leave
mov
addr16
inc
popf
pop
das
testb
inc
pop
push
push
sub
push
pusha
push
stos
cmp
ja
xor
xchg
add
dec
aam
sbb
loop
int3
mov
ret
stos
ror
les
rorb
daa
push
popf
jne
cs
pop
jnp
inc
repnz
lret
mov
pop
sbb
out
sbb
negb
shll
or
dec
int
lret
or
jmp
pop
lods
mov
adc
add
lret
fbstp
mov
jl
or
addl
jae
insl
aaa
jbe
pusha
daa
loope
xchg
dec
cmp
sbb
std
out
jecxz
inc
cwtl
loopne
mov
sbb
clc
mov
or
pop
adc
xchg
out
push
pop
dec
ljmp
ret
xor
loopne
cltd
inc
ret
push
mov
adc
mov
aad
notb
or
push
out
dec
pop
aas
lea
push
mov
movsl
jge
gs
rcrl
test
jae
idivl
popf
push
jb
xor
icebp
outsl
stc
inc
jge
xchg
stos
sbbb
pop
jge
xchg
aas
cmpsl
out
and
pop
out
cmp
mov
adc
mov
pop
leave
out
mov
xchg
adc
insl
add
push
enter
popf
inc
dec
loopne
pop
stc
or
xor
mov
hlt
or
inc
sbb
in
jo
fidivs
mov
out
jle
xor
cmp
or
insb
pop
cld
push
popf
mov
aaa
jp
test
pop
cld
negb
in
mov
and
cmp
mov
test
arpl
into
sub
or
outsl
cmpsb
loopne
in
mov
mov
push
dec
fsubl
sbb
inc
or
ja
xor
out
xor
xor
inc
sub
fidivl
imul
fstps
mov
arpl
dec
mov
es
ret
sbb
scas
cmp
mov
rorl
loopne
mov
aad
mov
push
push
and
std
loope
adc
mov
cmpsb
jle
loopne
pop
loope
sub
lea
adc
or
enter
int
repnz
mov
sbb
in
xlat
mov
dec
add
cmp
dec
lods
inc
sbb
int
inc
mov
pop
cmp
adc
pop
add
cmc
sbb
sub
xor
add
cli
lds
push
fst
mov
lock
cltd
xor
out
inc
test
lods
cmp
int3
call
in
pop
negb
and
mov
inc
movsb
mov
mov
cld
int
xor
push
es
jle
mov
dec
mov
jmp
das
jnp
fisubrs
test
fistps
mov
lds
aaa
lods
lds
sti
push
xchg
or
repz
aad
sub
mov
lcall
fcoml
in
out
and
ret
lret
sarb
das
push
jge
push
push
divl
cmpsl
mov
push
sbb
mov
and
movsl
jne
cwtl
fdivp
push
push
sbb
inc
ficoms
add
clc
and
popl
mov
pop
push
fsubrp
je
pop
sti
cs
push
ffreep
out
pop
shll
aam
mov
repz
and
and
neg
cmp
push
jo
inc
outsb
sar
clc
popf
dec
push
inc
add
das
adc
mov
jbe
push
push
and
dec
loopne
mov
add
mov
ficoms
lahf
mov
and
aam
test
jbe
jno
cld
adc
loop
sbb
inc
mov
add
pop
call
lock
stos
pavgb
pop
nop
add
call
add
sbb
fsub
sbbb
outsb
cmpsb
dec
cmp
stc
sti
mov
add
cwtl
stc
ss
lret
pop
cmp
sti
movsl
add
xchg
jne
test
sbb
inc
stos
push
cwtl
stc
xchg
pop
negl
ja
pop
scas
ja
test
push
cmp
mov
movsl
lahf
outsl
je
push
clc
mov
add
fs
sti
push
cmp
movsl
dec
xchg
dec
xor
pusha
and
sub
lcall
mov
dec
mov
shlb
loop
out
inc
out
mov
mov
sub
or
js
dec
mov
xchg
inc
dec
lea
pop
lcall
cmp
fs
outsb
add
mov
imul
mov
fucomp
mov
out
sbbb
add
inc
dec
je
mov
or
mov
xor
xchg
cmp
andb
jo
imul
xchg
dec
xlat
lret
out
mov
rcl
loope
loopne
cltd
push
leave
fwait
popa
push
les
and
xor
push
mov
lcall
pop
int3
outsl
add
adc
dec
pop
ret
lds
mov
mov
pop
add
mov
add
add
imul
cmpsl
cwtl
jb
out
les
cmp
mov
mov
jnp
inc
insb
mov
mov
inc
addl
lea
inc
shll
jnp
mov
jne
in
and
jne
fists
adc
mov
mov
scas
push
adcl
jle
imul
fmul
pop
dec
vminpd
inc
push
jmp
add
insl
int3
ret
sahf
push
out
cmp
pushf
inc
outsb
aaa
shlb
cmp
sbb
push
push
sbb
mov
xchg
sub
arpl
mov
das
xor
add
scas
and
cltd
fmul
cli
mov
leave
xchg
repnz
rol
daa
jl
and
hlt
xor
xchg
cmp
mov
dec
jmp
int
addl
rolb
mov
mov
cmc
jno
lods
push
sarl
mov
sbb
jp
add
jp
cmp
inc
sbb
xchg
movsb
jne
mov
inc
cmpsb
loopne
aam
mov
stc
iret
adc
sbb
add
mov
lds
jae
bound
xchg
icebp
scas
push
or
inc
push
cld
jb
call
sub
roll
jb
in
lcall
mov
sub
sbbb
adc
out
and
push
hlt
pop
das
cmp
fnstsw
roll
dec
scas
jae
mov
sub
cmp
xor
xor
scas
test
cs
sbb
push
out
mov
lcall
push
push
add
lods
insl
cmp
mov
dec
dec
push
fsubrl
pop
es
push
push
and
ficoms
cs
or
mov
mov
rcrl
adc
test
sub
cmpsl
std
adc
stos
adc
int3
lret
out
imul
ja
rorl
fwait
mov
outsl
aad
aas
gs
mov
or
in
int
push
gs
inc
stc
push
pop
and
adc
push
imul
inc
shll
repnz
aad
xchg
hlt
aas
aam
pusha
push
int3
adc
sub
lcall
and
add
in
sbbl
lea
cli
or
pop
in
pop
adc
jl
mov
cmc
lret
cwtl
sub
fwait
call
push
jg
sbb
andl
push
push
mull
xchg
mov
jnp
xchg
inc
test
pop
pusha
mov
andb
adc
add
leave
loop
sbb
xlat
mov
pop
xchg
call
mov
sti
insb
and
mov
daa
mov
lea
test
push
cmp
sbbb
pop
xchg
jnp
leave
mov
negb
stos
mov
icebp
out
test
notl
fisttps
in
or
jl
fsubrs
xor
add
stos
push
push
pop
push
subb
imul
add
ja
inc
xchg
push
mov
and
cmp
loop
add
add
inc
mov
xlat
nop
mov
jg
pop
push
jg
xor
iret
mov
sbb
leave
add
rclb
inc
xchg
loopne
ja
mov
in
jmp
enter
scas
dec
bound
xorb
cmp
add
int3
pop
mov
test
xchg
imul
movsl
jmp
adc
jecxz
jecxz
pop
ret
outsb
pushf
aad
jg
leave
mov
pusha
psubusb
inc
movsl
sbb
mov
jae
and
jg
xor
arpl
cmp
lahf
movb
jge
sbb
cmp
pop
sbb
mov
push
or
cwtl
mov
push
xchg
inc
inc
mov
xor
xor
in
dec
int
movsbl
push
nop
lea
xchg
mov
and
sbb
cmpsl
divb
add
out
loope
in
mov
adc
rolb
push
xchg
sbb
xchg
ficomps
popa
cmpsl
into
sub
adc
ja
aam
mov
jb
xor
ss
daa
in
in
inc
scas
out
mov
adc
pop
jnp
lcall
addr16
sub
les
pop
imul
lods
daa
jmp
test
adc
push
inc
lds
add
xor
jmp
out
mov
pop
pop
push
cltd
jge
adc
andl
aas
xchg
ror
push
pop
dec
and
and
mov
push
loopne
mov
lret
addr16
xchg
fucom
aas
pop
insl
addr16
sbb
dec
cli
mov
insb
add
cmp
hlt
add
loope
push
adcb
mov
xor
xchg
fldl2t
fisubrl
push
push
cmc
test
cmpsb
dec
dec
mov
push
pop
cltd
test
xchg
mov
cmp
push
push
cmp
jns
xchg
mov
mov
orl
push
jb
ds
dec
jp
dec
js
rclb
ret
data16
push
pop
in
xchg
imul
mov
sahf
ret
xchg
orb
out
or
outsl
inc
out
adc
insl
cmp
scas
lods
jnp
lahf
stos
mov
lock
mov
in
jnp
mov
lahf
push
mov
setbe
mov
test
adc
hlt
jp
lds
in
stos
and
jecxz
push
pop
shll
mov
nop
sub
push
mov
pop
xor
je
in
rcrl
sbb
enter
fdivs
lock
mov
sub
test
mov
testb
nop
inc
pop
sbb
mov
out
fmulp
sbb
ds
or
fbld
jbe
outsl
push
xor
std
jp
mov
das
sub
mov
nop
lahf
jmp
xchg
sub
lods
int
cmp
xchg
or
cwtl
dec
jns
stc
sbb
stos
decb
stos
cld
insb
push
inc
jae
add
add
or
add
push
mov
jg
xor
fdivrl
xchg
or
pushf
fidivrl
and
mov
lcall
mov
stos
adc
in
loopne
and
repnz
loope
ficomps
fsubl
je
and
sbb
jmp
dec
or
fs
and
mov
imul
call
ret
mov
jmp
sarb
fiaddl
mov
or
mull
fsub
or
adc
adc
int
cmp
add
push
hlt
cmp
scas
mov
xchg
scas
out
or
and
test
inc
addr16
fildll
mov
fcomi
adc
fwait
dec
lods
mov
cld
pop
add
push
outsb
xchg
mov
fwait
pop
addps
int3
jmp
aaa
out
xlat
mov
mov
ret
mov
xchg
and
repnz
popf
cwtl
aam
hlt
add
mov
cmc
stos
fsubrs
add
lock
push
sbbl
test
cmp
and
aam
cld
pop
adc
xbegin
test
shl
mov
mov
ds
fcoms
fmull
mov
jle
or
rolb
loop
cmp
dec
push
sahf
mov
jle
lcall
jns
mov
mov
and
sti
inc
cmp
cli
icebp
mov
popa
inc
lret
rcrl
int3
lods
sarb
adc
cmp
mov
js,pt
xor
adc
out
add
jmp
push
negl
rcll
je
dec
leave
sub
fbld
add
inc
or
jl
push
sarl
je
ret
xor
or
jmp
adc
xchg
dec
mov
dec
and
cld
jecxz
and
xchg
dec
xchg
stos
push
dec
dec
cmpsl
add
inc
gs
inc
add
roll
test
lods
or
pop
push
adc
inc
outsb
bnd
or
sbb
cli
shrb
bound
outsl
adc
mov
notl
cli
cmp
fwait
jns
cli
movsb
xor
out
repnz
test
in
inc
pop
sbb
add
shrb
dec
xchg
or
cs
sub
fisubrl
push
int
fistl
cmovae
mov
aad
rcll
xor
mov
call
clc
add
push
stos
cltd
imulb
in
xorb
leave
mov
outsl
insb
xchg
divb
ljmp
dec
xchg
sub
xchg
nop
shlb
adcl
jbe
das
mov
xor
sub
adc
jae
hlt
sahf
fldcw
cmp
mov
jp
sbb
lock
jg
arpl
out
jp
or
jmp
arpl
xchg
out
add
mov
mov
jmp
cmpsb
cmp
pop
mov
cmc
call
es
mov
xor
shl
mov
xchg
and
and
cmp
mov
push
or
sub
aas
out
les
push
ficomps
dec
sbb
or
inc
scas
dec
or
jnp
js
ja
fstpt
pop
jno
ds
andl
je
push
xor
ffreep
push
pop
sub
repz
xchg
ja
icebp
aam
inc
dec
addr16
push
adc
mov
loopne
inc
xchg
sbb
adc
pop
dec
fmull
std
jp
repnz
cmp
lock
es
add
jge
xor
repnz
sti
fs
add
sub
xchg
mov
imul
popf
xor
in
lret
fimull
push
inc
in
push
jbe
xlat
daa
dec
sbb
xor
daa
popa
inc
cs
mov
lds
xchg
mov
data16
and
mov
stc
or
xlat
sahf
js
dec
mov
sarl
mov
mov
fwait
push
loopne
adc
jb
adc
jnp
fs
nop
cwtl
scas
jae
mov
adc
or
pop
jo
pop
jb
pop
bound
xchg
mov
lock
shrl
lods
cwtl
pop
pop
rorl
jns
dec
cmp
inc
adc
sbb
add
in
push
ret
bound
insl
mov
and
inc
and
push
lahf
dec
add
push
xadd
mov
bnd
aad
and
jecxz
inc
pop
aad
push
out
pop
mov
mov
cwtl
into
mov
xchg
aaa
sbb
sbb
xlat
fucom
jno
imul
and
pop
xor
ljmp
jl
fisubrl
icebp
fdivrl
xchg
mov
icebp
popa
lcall
outsl
cltd
push
lods
pop
dec
in
add
movsb
adc
cmp
mov
jns
lock
movsb
pop
mov
mul
ret
sub
sbbl
pop
push
push
ret
xchg
cld
pop
push
sahf
ret
pop
mov
shll
into
cmp
pushf
mov
fmull
scas
pop
aad
dec
imul
leave
sub
xor
or
mov
hlt
out
imul
xor
fisubl
leave
push
fdivrp
pop
insb
mov
inc
scas
mov
dec
pop
pop
cmp
adc
cld
fistpll
stc
sub
cwtl
jne
out
gs
adc
jo
mov
rol
test
dec
sub
nop
jle
rorb
or
and
outsl
cs
mov
pop
and
push
ljmp
sbb
push
xchg
mov
mov
lcall
aaa
adc
ficoml
jae,pn
pop
or
push
mov
test
popa
mov
and
das
inc
sti
or
aaa
xor
movsl
lock
repnz
mov
shr
mov
push
cwtl
outsb
sbb
mov
xchg
fiadds
aam
add
lods
mov
enter
data16
loope
dec
dec
sub
mov
add
fwait
aaa
and
aad
dec
adc
stos
pop
add
jno
leave
test
movsl
pusha
inc
push
jg
arpl
movsb
lods
lahf
clc
xlat
adc
adc
fdivl
pop
jb
test
clc
xchg
pop
adc
and
push
inc
pop
sub
clc
rolb
or
out
sahf
arpl
jnp
fs
xor
stos
sub
mov
pop
call
sub
pushf
adc
pop
das
psubb
jbe
xchg
dec
mov
cmc
loop
dec
mov
add
cmc
or
aam
dec
sub
sub
ret
push
sbb
rclb
loope
push
ds
cmp
dec
loopne
jge
test
pop
or
lea
out
fists
into
movsl
cli
cmc
mov
fstl
adc
in
dec
mov
pop
or
shlb
lods
jl
push
mov
dec
sbb
sub
test
push
sbb
add
dec
push
adc
adc
ljmp
and
mov
pop
fistpll
xor
sbb
stos
and
fdivl
pop
shlb
movb
mov
mov
incl
movsl
rcll
and
xchg
rep
dec
lods
and
gs
jl
mov
fnstenv
shrb
popa
mov
jmp
dec
xchg
sbb
push
mov
shll
lcall
xor
xor
ret
fucomp
insb
mov
push
aaa
fldcw
cwtl
sub
pop
shll
jae
mov
aam
rcrl
popa
sbb
cmpsl
lods
push
addr16
gs
fimull
fildll
cmp
imul
xchg
cmp
sbb
aam
adc
xchg
aad
jnp
mov
test
loope
out
insb
sbbl
mov
bound
inc
iret
rcrl
sub
movsb
xchg
jg
sahf
adc
pusha
or
xchg
adc
pop
xadd
inc
rclb
or
test
aas
imul
popf
jno
mov
in
ffreep
popa
in
xchg
push
dec
dec
movl
sub
roll
inc
call
test
fs
jb
sub
mov
add
adc
mov
in
movsl
push
roll
data16
inc
fdivl
mov
repz
dec
bound
sub
jmp
adc
sbb
mull
push
out
sarb
repz
xlat
push
addr16
push
mov
cmc
xchg
add
push
push
ret
ret
push
cli
xorb
xor
adc
popa
dec
aad
into
mov
into
add
das
test
or
movsl
bound
push
xchg
leave
adc
xchg
jl
push
scas
push
adc
pop
jmp
insb
mov
stc
repnz
bound
in
sub
ja
hlt
xorb
hlt
fs
cltd
addr16
cwtl
ret
jbe
cld
lahf
mov
push
data16
xchg
push
ja
mov
ret
movsb
jmp
cmp
leave
mov
mov
mov
ret
jg
stos
xchg
loopne
xchg
mov
or
sbb
mov
lock
aaa
add
adc
iret
fmull
and
jl
dec
jne
inc
fsubp
push
sbbl
and
pop
jg
scas
sbb
je
outsl
das
dec
es
jge
cwtl
es
ljmp
scas
push
cmpsb
pusha
mov
addl
and
xchg
frstpm(287
or
outsb
into
pop
add
mov
and
mov
cs
and
fidivrl
mov
mov
cmpl
mov
sbb
inc
mulb
in
mov
arpl
xor
in
cmp
outsb
test
bound
add
aaa
jmp
decb
aam
xor
and
js
push
xchg
fs
lret
inc
stos
jl
stos
test
and
adc
add
push
aam
fcoms
ja
sti
ss
dec
add
or
mov
and
jno
cmc
push
jle
sub
add
cmp
test
mov
ret
rorb
inc
or
pusha
inc
ja
push
ja
mov
fcmove
cmp
mov
jb
mov
push
cmp
ja
add
push
mov
outsb
dec
movl
push
lret
pop
xchg
xlat
ljmp
ficoml
cmp
les
push
dec
in
int
cltd
sbb
pop
ss
pop
pushf
fnstenv
sbb
roll
mov
test
outsl
hlt
xor
or
shrb
lret
and
xchg
out
out
pop
jp
jecxz
jle
loop
mov
xor
loopne
shr
xchg
mov
dec
test
fcmovne
daa
push
mov
addr16
pop
or
decb
mov
add
push
cmp
adc
cmpsb
jmp
dec
ds
inc
mov
dec
jg
mov
mov
out
lret
add
jbe
lret
cmp
sbb
lock
add
enter
sahf
mov
int3
jo
aas
out
dec
testb
sub
lock
cmp
fildll
mov
jl
stos
test
repz
cmp
mov
sub
repz
xchg
xor
and
fstpl
pop
sahf
jbe
pop
or
jnp
pop
mov
lcall
or
aam
sub
push
arpl
pop
ljmp
adc
jno
add
pop
inc
mov
jno
push
je
mov
mov
out
sar
cld
call
adc
jl
pushf
add
push
shrb
pop
add
fucomi
lods
daa
hlt
mov
mov
test
cmpsb
pushf
or
lret
sbb
and
lret
dec
faddp
mov
mov
cmp
nop
bound
adc
hlt
dec
das
rorb
xor
add
icebp
sti
or
out
xchg
lea
ss
pop
inc
mov
and
dec
cmp
icebp
sub
cmpsl
push
mov
xor
gs
cmpsl
push
fimull
inc
and
fidivs
or
movaps
movsb
push
rcrb
jns
xlat
cmp
sub
cmp
push
mov
mov
add
pop
pop
mov
stc
lret
jmp
mov
lea
fstpt
sarb
xchg
jne
cld
aad
mov
and
push
xchg
mov
pop
pusha
xchg
mov
cmp
fwait
jnp
sbb
xor
sbb
out
mov
fwait
xchg
cmpsb
adc
or
movsb
je
ret
enter
stos
imul
out
xchg
mov
int3
mov
imul
inc
dec
mov
and
mov
frstor
inc
in
mov
sbb
mov
sbb
insl
or
xchg
ret
into
fistpll
pop
mov
cmp
push
dec
mov
sub
scas
hlt
fwait
icebp
cltd
mov
and
xor
test
int
push
loopne
fcompl
mov
cs
test
cmp
jbe
sbb
cwtl
rclb
push
push
les
sub
jle
shlb
addr16
jl
pushf
les
popf
add
icebp
and
addr16
mov
loop
inc
sahf
rol
push
or
roll
mov
rorb
adc
test
xor
lods
inc
out
icebp
ret
and
inc
insl
sub
daa
xor
bound
cmc
adc
or
cld
add
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
lods
fists
je
jp
sti
pop
jp
and
enter
ret
das
push
xchg
cmp
scas
add
xor
leave
inc
or
imul
mov
cmovo
mov
pop
bound
stc
inc
mov
jae
mov
sti
sbb
outsb
outsb
cmc
in
ret
push
mov
jne
and
dec
mov
or
mov
jae
jo
je
inc
pop
push
jmp
push
sbb
mov
lods
movsb
test
push
lock
shll
mov
rorb
dec
pusha
dec
in
dec
jae
push
ficompl
jl
dec
mov
mov
pusha
gs
aas
scas
fisubrs
call
mov
popf
xchg
or
cmp
out
out
xchg
push
mov
aaa
aas
jle
out
jl
fcmove
dec
jl
mov
push
add
incl
mov
popa
cmp
mov
shr
sub
xchg
adc
adc
cmp
cmp
push
out
inc
mov
jns
push
addl
add
jmp
inc
lds
test
dec
out
push
push
jle
cmpsl
mov
inc
out
xchg
mov
xor
std
add
stos
movsb
repnz
mov
ret
cmp
es
rcll
ret
cmp
cmpsl
add
out
lahf
aaa
adc
lea
mov
dec
rol
popf
scas
mov
aas
dec
aaa
jg
xor
lods
pop
mov
and
pop
sbb
inc
popf
jl
imul
iret
add
fldt
push
xchg
scas
push
loope
outsl
add
add
fisttpl
pop
sbb
shlb
movsl
test
inc
stc
clc
xchg
sub
sbbl
mov
loope
and
pop
inc
mov
inc
or
mov
test
fisubrs
mov
leave
outsl
lods
lret
dec
loop
xchg
add
fidivrs
out
adc
ljmp
aam
xor
jl
stos
mov
daa
das
fimuls
mov
xchg
xor
fmull
movsl
subb
lods
jle
add
in
jg
test
pop
ss
add
mov
movsb
mov
inc
fdivrl
sbb
or
jnp
lret
loope
mov
jbe
mov
and
xchg
imul
adc
cmp
notb
mov
mov
bound
imul
test
cmpsl
xchg
push
add
pop
or
mov
mov
jnp
test
jo
or
ljmp
dec
inc
pop
or
popl
imul
fldenv
push
movsl
inc
dec
sub
nop
in
mov
add
fistps
cmp
inc
or
sbb
sbb
bound
jle
mov
std
mov
and
or
push
adc
adc
mov
mov
dec
pop
in
sub
and
rorb
stc
mov
lea
adc
out
stc
mov
into
dec
pop
fsubrs
lods
jg
xor
es
fstpl
push
aad
adc
sbb
imul
in
adc
cmp
sub
mov
mov
imul
xor
les
movsl
pop
dec
loop
rclb
hlt
ds
imul
mov
or
jno
pop
jmp
mov
sub
push
dec
test
rcll
loopne
mov
mov
or
or
sbb
stos
jmp
mov
adc
cwtl
lods
push
pop
movsl
jp
in
mov
pop
mov
test
adc
dec
in
and
inc
ljmpw
loope
andb
jecxz
scas
cmpl
xor
mov
popa
mov
sbb
inc
fstpt
mov
jle
inc
jno
cmp
push
and
add
cwtl
push
pusha
cmp
pavgw
je
dec
mov
fiaddl
dec
push
cwtl
mov
xchg
lret
jb
cmp
int3
out
pusha
in
in
push
xchg
dec
fnstcw
test
mov
mov
xchg
repz
xchg
mov
push
xchg
fldenv
push
dec
cli
mov
iret
mov
push
mov
xor
inc
cmp
aam
mov
out
fdivl
jge
xchg
stc
in
push
sub
push
imul
push
xchg
cmpsb
ds
xchg
gs
out
sub
add
pusha
clc
jb
stc
mov
push
or
or
jg
or
sbb
sbb
aam
shll
and
rcrb
cmp
das
lods
mov
and
adc
xchg
in
mov
jmp
cmpsb
mov
ljmp
cmp
mov
sahf
loop
outsl
sbb
xchg
sub
fnstenv
aam
push
inc
call
out
push
jo
pop
sbb
rep
incl
cmp
test
jp
adc
lahf
loop
pop
paddsb
cmp
div
je
out
mov
fidivl
clc
into
adc
aas
mov
shlb
insb
movsb
out
cmc
aad
fcomps
mov
mov
imul
mov
ficompl
aas
sbb
ret
into
dec
and
and
ja
dec
xchg
enter
loopne
pop
ficoms
inc
inc
pushf
jmp
imul
aaa
int
jp
mov
push
idivb
and
cld
cltd
xchg
xchg
xchg
xor
cmp
lds
insb
dec
jl
outsl
sub
and
add
ljmp
mov
pop
push
imul
mov
xchg
push
lahf
out
mov
imul
adc
lcall
pop
dec
push
cltd
nop
pop
test
movsl
sub
stos
adc
or
or
and
xchg
jp
fs
mov
xor
ja
sbb
pushf
fimuls
daa
xlat
loop
push
sub
cld
adc
aam
shlb
add
mov
inc
out
into
clc
mov
test
icebp
mov
jle
in
movsl
es
into
cmc
xlat
jnp
mov
xchg
adc
add
jae
es
cmpsb
adc
sub
xor
jge
sti
adc
call
lret
je
cs
idivb
and
sbb
mov
fs
xchg
mov
dec
xlat
mov
mov
adc
outsl
out
iret
lods
push
sbb
jge
mov
cmpl
stc
int
mov
mov
adc
cmp
cs
add
call
xor
mov
cmp
add
sub
fucomi
and
push
mov
out
push
insl
pop
or
xlat
je
int
arpl
xor
or
push
xlat
mov
cli
into
mov
add
dec
xlat
loopne
push
sub
in
ljmp
cmp
pusha
jl
clc
leave
mov
mov
cmp
leave
call
dec
movsb
xchg
push
and
outsl
pop
sub
and
or
scas
add
dec
test
scas
fisubl
aaa
push
push
mov
data16
jae
clc
lret
mov
mov
inc
fcomps
lea
cmp
inc
aad
sub
ret
cltd
lods
icebp
push
loop
mov
outsb
add
ret
into
push
fsts
sub
icebp
xchg
sti
add
bound
sub
inc
stos
fidivrs
ret
loope
or
cmp
xorl
stos
js
xor
or
push
push
push
leave
aad
icebp
cmp
lret
adc
jb
test
je
fwait
sub
xchg
jge
in
mov
addr16
test
push
push
jle
call
dec
pop
dec
pop
sahf
adc
aad
out
xor
clc
mov
das
negl
addr16
jne
int
xchg
xor
add
cld
dec
enter
popf
adc
cmpsl
std
js
jmp
jmp
scas
add
test
jae
mov
outsl
mov
fstpt
pop
addr16
mov
sahf
sub
test
jecxz
and
adc
sub
and
cmp
les
adc
pop
test
jo
fmull
mov
test
lea
in
and
adc
test
sbb
loopne
pop
sub
fucom
push
pop
sub
mov
mov
inc
lea
test
jge
add
add
add
mov
add
add
mov
incb
and
fldcw
cwtl
dec
xor
shlb
dec
stc
pop
pop
jbe
in
mov
pop
adc
or
jle
jae
icebp
rol
mov
xchg
mov
addr16
sbb
inc
mov
add
jae
aaa
mov
mov
bound
popa
adc
mulb
pop
icebp
adc
sub
push
inc
testb
sbb
sub
lahf
out
sbb
insb
sub
mov
add
ja
test
xchg
ljmp
outsb
add
iret
sbb
movsb
testb
scas
das
and
mov
testl
pop
cmp
sbb
pushf
adc
fisubrs
lods
cwtl
std
repnz
xchg
adc
inc
cmp
lret
push
sbb
stos
dec
inc
iret
fwait
push
inc
lods
dec
test
xor
and
loop
ret
bswap
xchg
out
add
hlt
sbb
push
jg
mov
jb
push
bound
pop
enter
cwtl
and
je
and
rol
and
in
inc
add
pop
jmp
and
cs
inc
dec
repz
xor
adc
adc
jmp
xor
fimull
sbb
dec
repnz
in
lret
mov
nop
sbb
mov
xor
int
cld
gs
dec
loopne
or
outsl
sub
inc
sarl
in
sub
dec
test
test
sub
jmp
testl
call
icebp
xchg
dec
jnp
loope
aad
jmp
xlat
pop
shrb
int3
cld
cld
push
cwtl
mov
adc
xor
mov
add
cld
mov
dec
dec
fdivl
loope
xor
jnp
hlt
jns
addl
mov
mov
mov
jle
sub
stos
mov
out
mov
test
cmpsl
and
cmp
lock
mov
sub
pop
cmp
pop
and
ja
imul
ret
mov
and
jne
ja
push
jmp
lret
add
or
cmpsb
faddl
ret
or
addb
mov
adc
iret
cltd
dec
dec
push
gs
jl
lret
mov
repz
xor
mov
dec
push
xor
xchg
fnstenv
push
xchg
mov
in
incb
aas
or
jmp
and
incb
sbb
pop
stos
sbb
out
arpl
daa
dec
jg
dec
jecxz
rcll
or
ret
scas
sub
addl
jecxz
adc
enter
or
or
vcvtdq2pd
pop
jmp
sbb
or
jno
flds
mov
mov
jae
inc
repnz
jne,pn
mulps
push
sub
mov
lds
sbb
sbb
scas
sbb
lcall
sub
call
ja
fidivrl
popa
repz
add
clc
xchg
pop
cmc
push
jp
fdivr
push
inc
mov
and
dec
push
popf
and
dec
xchg
mov
sbbb
roll
test
hlt
add
aas
stc
dec
mov
out
xor
mov
sub
subl
lret
cmp
aad
hlt
pop
and
sub
and
xchg
add
outsb
loope
jne
lret
add
popa
cmpsl
adc
and
xor
es
cs
jge
movsb
mov
mov
loop
pop
push
fdivs
push
push
sti
xorl
insl
jge
or
rol
dec
jne
push
pop
sti
push
mull
or
mov
sub
mov
pop
decb
pop
xchg
mov
mov
fstl
arpl
mov
ret
pop
mov
outsb
sahf
mov
enter
pop
push
adc
or
mov
adc
daa
jns
testl
dec
jl
add
jo
cli
pop
cmp
add
xchg
add
inc
adc
jg
movsl
add
clc
and
jp
add
pop
scas
imul
jge
cmpsl
mov
push
inc
dec
loopne
aas
jae
outsb
dec
and
fcmovnb
mov
fstpt
scas
sahf
test
cmp
addb
sti
aad
in
or
movsl
in
push
sbb
dec
das
in
aam
pop
int
fsubrs
test
inc
jecxz
push
in
xchg
dec
push
ret
dec
sti
ret
pop
pop
jns
push
cmc
adc
sbb
out
mov
outsl
pand
cmp
xor
ljmp
lods
lahf
inc
pop
xchg
fs
fidivl
xchg
cmp
jecxz
in
loopne
loopne
imul
adc
xchg
orl
add
sbb
cli
loop
mov
sbb
je
sbb
insb
jbe
sub
and
sbb
jl
mov
outsb
dec
aas
jmp
test
jae
out
lock
cmp
insb
dec
or
dec
sahf
sbb
push
lahf
in
fimull
sub
add
dec
inc
mov
int3
mov
mov
jecxz
dec
dec
dec
mov
lcall
jbe
inc
je
incb
std
pop
add
mov
test
aaa
sub
hlt
and
aad
mov
incl
adc
and
inc
popf
xchg
inc
in
clc
add
add
sti
xor
or
les
into
add
into
sub
mov
sub
jo
addr16
mov
out
jle
jbe
adc
xchg
jno
pop
or
cmpsl
xchg
lock
lods
add
insb
cs
mov
into
mov
xchg
xor
pushl
sub
xchg
fildll
cmp
repnz
adc
inc
rcrb
call
pop
sub
lret
nop
out
js
fistl
dec
xor
dec
xchg
shll
das
int
nop
pop
cld
aas
sbb
cmp
jle
xchg
pushf
pop
xor
cmpl
incl
je
insb
push
push
sbb
sbbl
sbb
xor
sbb
jbe
es
mov
mov
fstps
call
or
and
addl
xchg
ja
stos
dec
int
imul
ja
negl
mov
pop
sarb
inc
xor
les
cmp
jmp
ja
dec
nop
or
mov
add
faddp
pop
imulb
rcll
setg
adc
sbb
test
adc
jg
mov
ljmp
mov
jns
xlat
ds
int3
lock
icebp
sbb
sti
out
pushf
pop
adc
sbb
mov
mov
leave
and
push
cmc
lcall
repz
mov
jne
dec
xor
push
sub
stc
pop
test
lahf
sbb
shll
out
call
into
inc
js
rorl
dec
lock
xor
pop
mov
test
lret
push
loope
mov
xor
ret
nop
fs
int3
sub
pop
mov
pop
notb
movsb
fstps
sar
mov
mov
mov
lock
sub
xlat
lahf
xchg
mov
aam
pop
adc
shll
ljmp
jbe
sarb
inc
les
mov
push
fstpl
mov
icebp
push
jecxz
leave
xchg
ret
pushf
data16
sbb
cmp
mov
or
leave
push
add
push
jno
js
push
cmp
loopne
pop
pop
pop
in
loop
inc
mov
pop
rcrl
cli
stc
mov
out
loop
adc
jns
dec
bound
roll
in
pop
mov
clc
push
movsl
mov
xchg
fwait
sbb
push
mov
call
ret
aaa
insl
mov
ja
fmul
bound
push
or
inc
pop
in
pop
add
cmpsl
mov
jge
inc
aad
sbb
outsl
xchg
fdivrp
push
gs
bound
dec
adc
icebp
mov
mov
xchg
cmp
xchg
mov
js
jge
mov
data16
jne
xchg
push
push
jle
dec
das
jbe
call
xchg
xor
dec
pop
cli
pop
jmp
scas
gs
pop
cltd
mov
dec
xchg
add
loopne
jp
je
iret
mov
lock
andb
cs
or
stos
jo
fidivs
sbbl
dec
sub
ljmp
aas
and
lods
xor
pop
push
enter
int
cmc
push
and
iret
dec
cs
mov
std
cmc
adc
inc
bound
pop
dec
mov
mov
iret
mov
rorb
cmp
jp
mov
clc
sub
sbb
js
mov
addr16
mov
lahf
jp
in
sahf
rol
mov
sub
int
dec
mov
push
xchg
mov
mov
into
leave
push
jle
jo
mov
mov
xorb
xchg
or
inc
sbb
ljmp
frndint
fmul
ret
pop
cmpsl
pop
add
or
cmp
mov
mov
fdivrs
jne
popf
sbb
lock
push
adc
pop
jne
pusha
ljmp
addr16
mov
imul
test
dec
lods
pop
lcall
sarl
cmp
inc
mov
cmp
js
scas
xor
mov
inc
cmp
or
mov
xchg
call
pusha
imul
mov
mov
data16
in
cmp
rcll
test
in
mov
das
loop
and
mov
lods
push
lods
mov
or
loop
mov
mov
jecxz
je
mov
sti
sahf
and
cmp
jg
jmp
popf
adc
jnp
jg
mov
std
outsb
js
sahf
fidivl
bound
push
and
andl
push
cli
pusha
divl
enter
daa
mov
daa
mov
jp
dec
fwait
push
dec
or
jne
inc
push
cli
xor
mov
dec
stos
xor
adc
ret
stc
addr16
leave
cwtl
mov
lods
xor
fdivl
pushf
mov
jns
idivb
test
call
or
pop
popf
iret
xor
add
pop
in
dec
xchg
dec
imul
aas
mov
push
lds
test
sbb
and
inc
and
xchg
in
jmp
je
int
adc
imul
repz
jl
shrl
mov
and
jno
aaa
fisubrl
jno
adc
daa
jno
cltd
mov
js
xchg
xchg
sub
jbe
jmp
pushf
or
cmp
xor
xor
fldl
cli
push
and
ss
pop
int3
mov
in
mov
pusha
in
push
inc
inc
ja
xchg
inc
lods
dec
push
push
mov
movsb
mov
fsubr
ja
pop
and
mov
jae
shrl
and
enter
inc
cli
inc
outsl
icebp
pusha
test
lahf
in
repnz
loop
out
mov
sbb
cltd
pop
adc
hlt
mov
and
mov
sub
cmpsl
shll
inc
xchg
mov
inc
xchg
aam
push
jg
lea
mov
cmp
jns
pop
pusha
sahf
sub
fcomps
pusha
das
test
cld
lcall
mov
fldcw
sbb
jnp
in
adc
ret
negl
arpl
fwait
adc
push
mov
iret
jl
pop
cwtl
pop
movl
xor
or
mov
mov
mov
cmpsb
sbb
arpl
test
sbb
xor
je
add
ret
xor
pop
and
repz
xchg
fidivrs
mov
xchg
add
and
push
and
in
jb
repnz
adc
xchg
insb
cmpsb
mov
imul
rclb
lods
sbb
jnp
scas
in
push
lcall
inc
lret
repz
aaa
jb
pop
int
insl
mov
add
out
jl
rcl
add
cltd
bound
xlat
sub
pop
sarl
ret
ja
xorl
repz
sub
loope
pop
push
cmp
rolb
test
mov
pop
scas
inc
jmp
and
push
aas
and
push
inc
ds
inc
lret
mov
repnz
jno
movsb
push
pop
cmp
xor
add
scas
sbb
push
hlt
xchg
repz
xor
jp
shrb
cmp
inc
popa
add
fcmovnu
sbb
xor
pop
add
mov
xor
das
es
cmp
jbe
idiv
shll
scas
dec
notl
xlat
cmpb
xlat
scas
xorl
fstl
mov
sbb
fdivs
lock
gs
into
jl
push
sub
jg
or
inc
inc
push
stc
loop
xor
mov
sub
fldt
stc
sbb
aam
outsb
lds
rolb
dec
push
addl
add
xchg
adc
rep
sti
fmuls
xchg
inc
xor
imulb
jecxz
hlt
addr16
or
das
inc
fadd
push
loope
insb
andl
pop
sbb
lock
lods
pop
orb
out
xchg
cmpsl
test
test
push
dec
inc
mov
inc
xor
mov
cmp
test
fst
daa
sbb
nop
jbe
adc
scas
push
int3
mov
std
jo
stos
imul
pop
add
popa
inc
xchg
pop
pushl
std
mov
xlat
fadd
divl
ret
aam
mov
aam
sub
cmpsb
inc
mov
cmc
mov
js
sbb
mov
pop
cmp
pop
push
xchg
js
dec
ds
add
cmp
fistps
push
lret
dec
loope
mov
mov
in
aaa
push
mov
cmc
xchg
pop
cmpsb
bound
js
int
jp
imul
mov
dec
addr16
cmp
dec
jp
xor
pop
test
inc
jo
mov
lea
cmpsl
aad
cmpsl
mov
aaa
cmp
int3
jnp
pop
push
cwtl
dec
mov
adc
fcomps
inc
shr
mov
scas
dec
and
xchg
dec
test
mov
scas
dec
mov
insl
punpckldq
inc
pop
mov
mov
adc
sbb
xchg
leave
loope
xchg
jno
js
roll
mov
mov
push
das
ficoms
mov
jnp
in
or
lcall
mov
or
hlt
mov
movsb
ret
imul
subb
inc
adc
adc
pushl
inc
sbb
xchg
xor
xor
int
cmpb
int3
inc
fists
mov
dec
and
xor
in
shl
test
mov
pop
xchg
mov
cmp
mov
repnz
fwait
punpckhdq
pop
cmpsl
inc
mov
scas
adc
mov
xor
es
add
cs
fcoml
in
shrl
in
xchg
ljmp
sbb
std
xor
sub
test
std
sbb
scas
out
lods
int
in
sbb
xchg
jecxz
cmp
pop
test
pop
leave
mov
xchg
std
mov
in
icebp
fmul
sub
cmpsb
dec
push
scas
pop
scas
movsl
das
cmp
cli
fdivrl
dec
lret
repz
in
js
and
xlat
push
ja
jbe
push
dec
jnp
enter
sub
push
sub
std
or
adc
sbb
mov
or
mov
mov
out
xchg
xchg
mov
dec
dec
clc
cmc
dec
pop
cmp
stos
adc
jl
call
add
pop
inc
mov
mov
dec
sbb
ja
mov
fs
inc
movsl
lcall
inc
addb
sti
mov
xlat
sub
mov
outsl
and
fmul
and
int
mov
xor
lret
push
adc
pop
sbb
push
aad
test
data16
in
imul
jge
inc
les
push
mov
stc
movsl
mov
and
sub
sub
inc
jae
lods
out
jmp
adc
clc
cli
imul
and
shrl
lods
pop
fists
lcall
mov
mov
sub
fstl
lcall
mov
cmp
sub
sub
test
mov
add
xchg
clc
ss
adc
fwait
mov
sahf
jle
jg
jl
ret
inc
adc
fnsave
aam
mov
aas
lock
add
jp
dec
mov
or
out
xchg
roll
jb
fdivr
dec
and
sub
sub
pushf
pusha
idivb
pop
lods
pop
lret
adc
xchg
das
mov
stos
jmp
inc
sbb
or
out
xchg
insb
or
insb
mov
pop
mov
cli
add
adc
jbe
cli
stc
nop
fldt
mov
lods
mov
add
notb
pop
sbb
sub
pop
fdivs
pop
jbe
push
fucom
xchg
int3
mov
inc
cmp
lods
sbb
cmp
sarl
lcall
lret
inc
jns
mov
sbb
dec
lods
in
out
push
push
sub
push
sahf
xor
sbb
jno
cwtl
sbb
pop
jb
mov
mov
leave
stos
test
mov
pop
jno
test
sbb
push
je
push
frstor
adc
ldmxcsr
movd
xchg
ss
xorl
xchg
push
in
loope
in
lret
test
sti
inc
xor
nop
cs
mov
popf
mov
test
sahf
out
loope
outsl
hlt
popf
and
icebp
fisubl
push
arpl
loop
orb
outsl
xor
mov
xchg
jmp
js
jecxz
cmp
inc
xor
lahf
xor
mov
leave
ds
faddl
je
addl
pop
shl
or
out
or
dec
mov
lret
ud1
mov
repz
push
fs
pop
mov
push
jle
mov
add
xchg
adc
dec
mov
cmp
into
out
add
push
js
push
add
adc
popf
cmp
inc
add
rclb
fsubrs
stc
xor
jo
mov
sahf
les
imul
jmp
dec
add
xchg
sbb
pop
add
sub
inc
int3
jl
leave
test
sbb
cld
pop
std
cs
and
mov
mov
das
fwait
and
scas
int
sbb
jp
lcall
mov
mov
hlt
mov
mov
inc
lret
stc
loopne
sbb
jge
mov
and
cmpl
mov
aas
std
adc
inc
das
mov
mov
icebp
jecxz
mov
bound
mov
xor
xorb
ja
inc
dec
xchg
jmp
je
mov
cmpsb
fbld
out
arpl
sub
das
dec
jge
sahf
inc
mov
lret
inc
in
outsl
repnz
cs
mov
arpl
pop
jle
jge
test
mov
fs
push
mov
enter
push
shll
rorl
push
jae
or
sahf
mov
bound
mov
jns
push
flds
hlt
jnp
movsb
nop
testl
dec
mov
rcrb
cmpl
xchg
ljmp
mov
movsb
idivb
call
dec
mov
mov
data16
leave
or
orl
lret
mov
pop
adc
cmp
pop
dec
ds
pop
ss
cmp
mov
imul
lock
push
mov
aaa
lcall
mov
hlt
mov
cmpsl
xor
dec
sub
and
mov
insb
mov
sub
push
add
rcrl
add
or
xchg
test
inc
fs
out
jge
mov
mov
mov
push
inc
pop
xor
or
popa
dec
cmc
push
call
jl
push
outsl
dec
pop
xor
xor
bound
mov
mov
adc
nop
sahf
adc
incl
fwait
or
xchg
sbb
ret
pop
sub
pop
sar
lock
cmp
jp
sbb
hlt
mov
mov
cmp
in
bnd
adc
mov
pop
fbld
mov
xor
cmp
push
push
lods
imul
fwait
xchg
push
and
push
out
daa
push
xchg
adc
or
repnz
xchg
pop
bound
push
rcrb
int3
andl
jno
sub
inc
dec
push
mov
adc
in
mov
mov
inc
xchg
adc
notb
mov
lahf
and
xchg
dec
push
cld
fildll
lcall
imul
xchg
pushf
mov
push
insl
inc
repz
add
int
popa
push
js
lahf
aad
shlb
cmpsb
aad
mov
fdivr
outsl
ss
out
pop
addr16
mov
or
pop
jnp
roll
adc
add
xor
inc
xor
sub
sysret
push
lods
lea
mov
jmp
out
or
scas
adc
ror
sbb
cli
mov
push
cmp
sub
lret
je
inc
jp
scas
shrb
call
out
dec
aas
adc
arpl
dec
push
mov
sub
sti
std
pop
popa
inc
adc
call
cltd
pop
iret
inc
rcr
bound
and
adc
jmp
pop
pop
pop
les
xor
cltd
testb
sti
mov
lcall
add
xor
xchg
in
cmp
sub
xchg
xor
xor
test
xor
inc
dec
in
jle
or
ss
add
sti
mov
hlt
pop
or
push
in
roll
mov
and
rcrb
push
sbb
iret
pop
pop
faddp
or
mov
push
call
sub
jb
adc
xchg
xor
xchg
cmpb
or
or
mov
add
popf
mov
mov
jno
add
mov
adc
cmc
jecxz
rol
test
int3
fsubs
mov
in
fistpll
inc
mov
cmp
mov
aam
xchg
jmp
mov
inc
xor
push
xor
and
popa
push
inc
adc
jo
in
pop
jg
cmp
adc
xor
and
cmp
test
pop
jb
lods
sahf
shl
bound
addl
lcall
xchg
dec
aam
or
movb
and
es
fbstp
jb
sbb
sti
push
or
dec
call
pushf
sbb
jns
or
dec
mov
insl
xchg
add
bound
lods
decb
fwait
loopne
pop
adc
aad
dec
fldenv
int3
dec
dec
xchg
aam
or
fcoml
xor
out
mov
jno
lods
fsubs
inc
jno
js
inc
sahf
ret
add
or
sbb
xchg
mov
sarb
mov
adc
adc
push
das
inc
push
lret
daa
fdivr
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
mov
mov
inc
mov
fsubs
push
dec
roll
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
or
add
hlt
add
add
xchg
mov
int3
xor
repz
mov
test
dec
pop
push
ds
movsl
cmp
imul
inc
ficoms
xchg
enter
sbb
repnz
jbe
cmp
bound
cmpsl
loopne
das
push
add
xchg
repz
shl
insb
sbb
pextrw
mov
std
repz
adc
sub
jae
dec
mov
mov
mov
sbb
push
fldcw
mov
add
scas
int3
rclb
fnstcw
cltd
jmp
mov
lock
jne
xor
fildl
iret
push
std
fcompl
push
cmp
fidivs
mov
jnp
and
divb
mov
stos
std
inc
iret
shl
mov
sbb
inc
daa
or
xchg
dec
cmp
mov
and
sub
ret
push
movsl
in
xchg
fsubs
fcmovu
add
xchg
xchg
mov
in
arpl
pop
pop
aad
push
int
decl
jno
sbbl
shr
scas
test
ja
mov
dec
mov
arpl
jle
adc
sub
in
test
push
sti
sbb
rorb
jno
iret
outsl
scas
mov
popf
enter
fcompl
or
pop
pop
sbb
outsb
mov
push
repz
dec
jl
cmc
cmc
hlt
sbb
mov
sub
leave
sub
cltd
ficompl
xor
xor
fidivs
repnz
jne
js
rcrl
fs
repnz
ret
add
leave
or
test
fs
dec
dec
xor
sub
xor
push
sti
lcall
mov
cltd
xor
xlat
mov
mov
popa
pop
loop
push
test
jbe
jl
dec
adc
mov
pop
jo
xchg
pop
and
stc
and
xorl
mov
fs
shlb
call
pushw
mov
dec
jecxz
fwait
iret
push
pushf
add
shlb
xchg
and
push
sub
pop
xor
xchg
aad
lods
outsb
adc
dec
lcall
add
mov
or
pop
lods
add
std
mov
out
push
popa
cmp
mov
jno
inc
push
xor
lahf
xchg
fisttpll
jp
test
cmpsb
sub
sub
pop
test
push
push
sbb
xchg
sbb
dec
pusha
cmp
hlt
ss
mov
int3
and
mov
push
inc
xchg
sub
push
cmp
ret
jae
in
shlb
mov
xor
mov
or
cmpsl
push
bound
mov
std
ret
test
inc
inc
xchg
add
dec
out
xor
push
hlt
les
inc
imul
dec
xor
les
call
in
fildll
aam
fldcw
fisttps
cmp
in
cld
lds
pop
ret
mov
pop
or
xchg
sub
mov
adc
sbb
jne
shlb
xor
push
insb
adc
or
push
aam
dec
repz
int3
imul
dec
inc
stos
xor
aas
fwait
sbb
imul
lea
loop
or
sbb
lcall
push
pop
inc
icebp
lea
mov
fs
mov
add
and
mov
aad
and
push
xchg
daa
sub
pop
pop
xchg
fwait
pop
aam
lret
or
leave
xor
cs
lret
movsb
inc
mov
mov
mov
cmpb
pop
loop
jo
xchg
in
and
call
fwait
lds
push
lcall
mov
movsb
or
sbb
fildl
pop
pop
mov
adc
dec
xchg
out
xchg
decl
shr
mov
fnstenv
inc
sub
pop
mov
std
inc
test
rorb
mov
ss
jg
push
mov
inc
test
pop
das
jp
fadds
sub
or
mov
xchg
popa
mov
cmpsl
xchg
fimull
adcb
adc
insl
inc
xorb
pop
loop
das
mov
sbb
sub
iret
sub
and
lcall
pop
adc
and
daa
aam
add
push
xor
jle
cmp
fcomps
mov
notl
decb
shrb
out
test
jnp
data16
cmp
into
int3
jl
outsb
adc
daa
push
negb
hlt
imul
mov
add
add
push
sbbb
fistpl
stos
icebp
lret
flds
add
add
add
sbbb
test
out
or
hlt
and
data16
inc
nop
mov
aam
xlat
aad
mov
cmc
cmp
out
mov
jns
je
or
iret
pop
out
sub
pop
sbb
inc
or
rorb
jge
jmp
inc
pop
popl
je
mov
sarl
std
in
push
adc
mov
or
stos
ljmp
push
push
sbbb
jo
cwtl
push
mov
dec
fldcw
insb
mov
outsb
push
xor
adc
les
lds
dec
arpl
adc
notb
inc
sub
xchg
outsb
lret
test
iret
add
adc
shlb
mov
xchg
mov
push
nop
adc
sbb
cmp
push
scas
xchg
cs
je
dec
or
xor
popf
inc
iret
cmp
repnz
mov
xchg
mov
add
cwtl
mov
sahf
jns
jle
xchg
jmp
inc
and
in
in
jo
negl
or
cmp
pop
in
jl
push
xchg
int3
mov
and
aam
mov
les
lock
mov
cli
mov
in
fs
int3
mov
fstps
outsb
or
push
je
ja
lods
pop
repz
xchg
push
in
pop
roll
push
jge
lea
shlb
test
imul
xor
jle
add
or
in
nop
test
out
sbb
jp
inc
pop
mov
aaa
fbstp
popf
cmp
push
jmp
loope
xchg
aam
mov
ja
and
dec
push
xchg
popf
cmc
outsb
lcall
mov
data16
pusha
fsub
add
subb
ljmp
movsl
lcall
mov
stos
ljmp
mov
scas
movsl
xchg
pop
adc
insb
lahf
inc
adc
mov
stos
cmp
inc
loope
jbe
mov
enter
pop
pop
iret
mov
jecxz
pop
mov
popa
mov
sar
or
and
and
add
or
into
scas
lret
notl
hlt
in
jo
inc
into
adc
add
sbb
pop
call
mov
and
or
xor
repz
jp
into
fwait
cmc
mov
adc
sbb
mov
outsl
xchg
loop
fdivl
add
mov
cwtl
inc
cwtl
fucomp
or
test
movsl
mov
popa
sti
push
dec
and
mov
dec
fists
out
cmp
fs
sbb
clc
in
jnp
mov
mov
pop
lea
in
adcb
movsb
xchg
mov
incl
outsl
out
out
push
pop
xlat
sub
into
orb
clc
pop
cmp
add
arpl
xchg
and
inc
mov
inc
dec
mov
inc
cld
repnz
sar
pusha
push
mov
xchg
push
mov
mov
int
jmp
sub
das
inc
jmp
rcl
scas
jbe
mov
sub
bound
pop
arpl
sbb
mov
je
inc
fwait
pop
int3
loopne
mov
jg
mov
into
and
lock
roll
repnz
stc
in
mov
test
mov
sbb
xchg
inc
movsb
jns
cmp
loopne
cmp
dec
mov
mov
pop
or
xchg
xchg
inc
test
jb
jbe
es
adc
or
das
div
icebp
mov
add
sub
cld
ja
lahf
incb
sub
fnstcw
sub
jns
popa
dec
jbe
xor
xchg
fldcw
popf
add
xor
int3
dec
pusha
cmpsb
pushl
inc
das
push
es
stos
xchg
jmp
lret
aam
xchg
aam
or
xor
cmp
cmp
lahf
and
stc
in
jae,pt
cmp
lcall
dec
adc
push
ss
out
cmpsb
data16
push
icebp
dec
int
incb
xor
loope
inc
cltd
push
fiaddl
and
int
bound
orb
jg
out
mov
push
fstl
out
jo
push
andl
push
out
das
pop
adc
cld
sub
enter
mov
es
xor
js
in
test
dec
sarl
faddp
push
into
mov
push
outsl
push
pop
inc
in
xor
adc
dec
push
xor
jne
sahf
or
cli
sbb
sbb
sbb
int
add
xor
into
cli
xor
inc
mov
xchg
int
jecxz
add
add
cmp
cmpsb
jg
mov
jae
loopne
inc
popa
fiadds
add
add
add
lcall
lock
icebp
test
mov
xlat
cmp
test
dec
fmul
adc
mov
pusha
and
cmp
mov
dec
outsl
jg
lret
mov
dec
sbb
adc
insl
lea
ret
sbb
push
nop
std
or
hlt
cmp
xor
leave
in
ficompl
pushf
stc
xchg
mov
xchg
and
ret
mov
ficoms
ja
imul
jle
or
int3
push
mov
adc
addr16
and
inc
loope,pt
push
in
lea
and
mov
push
mov
fidivrs
dec
dec
orb
add
jmp
push
aas
sub
and
sbb
xor
xchg
fistpll
enter
rorb
lcall
fldenv
inc
sub
and
add
bound
hlt
stc
sub
push
jecxz
xor
inc
dec
xchg
add
cmp
ja
out
pop
cmp
cld
and
out
imul
xchg
xchg
mov
mov
pusha
mov
or
fnsave
aas
sahf
bound
push
lret
jbe
pop
sbb
int3
dec
xor
dec
gs
das
test
add
inc
repz
and
rdtsc
test
pushf
mov
dec
or
iret
jl
cmpsl
and
mov
lods
outsb
sub
jo
jge
xor
lods
repz
das
mov
dec
cmpsl
ret
dec
fwait
dec
and
fwait
sub
adc
mov
inc
push
int3
inc
and
jnp
sub
arpl
jne
sahf
fstps
add
mov
lret
push
icebp
cmc
adc
lea
mov
andb
out
push
stos
jb
sbb
dec
enter
adc
jne
push
leave
outsl
cmc
mov
jo
test
jno
fists
lcall
pop
popa
clc
push
and
inc
mov
pop
push
outsl
stos
ret
cmp
sub
dec
jno
cmp
or
ja
imul
cwtl
mov
out
dec
add
xor
sbb
adcb
mov
xor
push
ret
lock
roll
xchg
jmp
into
pop
jne
jge
mov
cli
loopne
ss
sti
cmp
fsubl
jmp
sbb
mov
xchg
sbb
fadds
cmp
sub
ficomps
sahf
addr16
cmp
or
adc
ljmp
hlt
jae
cmp
xchg
pop
dec
ds
pop
lods
xor
fisttps
or
outsb
mov
mov
pop
inc
cmp
mov
arpl
fcmovu
pop
int
xchg
test
cltd
call
outsb
mov
cli
shrb
sbb
out
stos
incb
pop
stos
mov
notb
or
cmp
xchg
pop
cmpsl
jnp
pop
xlat
pop
inc
push
push
lock
add
xlat
imul
sub
xor
repnz
sti
fmul
xor
mov
sar
hlt
push
lret
scas
roll
adc
or
scas
mov
mov
cmp
jne
dec
push
adc
push
iret
and
pop
adc
mov
ljmp
lcall
fistl
es
mov
popa
clc
adc
cmp
xor
mov
aaa
imul
sbb
adc
sub
ja
fs
stos
mov
xor
mov
cli
hlt
ret
mov
jne
cli
and
stc
sub
call
dec
popl
call
sub
mov
or
loopne
lahf
mov
jae
jo
mov
icebp
in
mov
mov
sub
push
negb
adcl
mov
mov
loope
adc
imul
cmp
in
pop
in
sub
lea
dec
pop
lret
mov
push
cmpl
push
mov
fwait
or
push
orb
daa
mov
in
mov
cmp
lret
mov
fisubl
sbb
imul
pop
sarb
sahf
jb
inc
push
dec
stos
in
mov
int
push
outsb
sub
outsl
add
sti
daa
and
dec
dec
das
jl
ret
cmc
push
leave
imul
shlb
push
mov
negb
and
inc
add
or
and
sahf
sbb
and
cs
subl
out
lods
adc
cmc
jno
inc
clc
add
add
clc
pminsw
idiv
repz
lret
hlt
pop
insb
push
jecxz
add
add
add
in
daa
sbb
inc
dec
dec
ja
jle
iret
cmp
subl
xchg
pop
pop
inc
dec
les
fstps
int
inc
jmp
popa
jnp
dec
jnp
pop
pop
xchg
jle
scas
sbb
pop
loopne
jno
lret
xchg
not
push
pop
or
lret
push
iret
inc
scas
nop
je
test
mov
mov
out
inc
loop
adcb
pusha
inc
cmpsl
fildl
pop
mov
testl
push
inc
pop
sahf
xchg
stos
out
in
rol
ucomiss
mov
xchg
je
jl
mov
push
popa
sbb
aas
bound
jle
mov
cmp
inc
mov
push
lahf
xchg
add
push
pop
sub
lds
in
cmpsb
sahf
push
addb
sbb
mov
stc
mov
cmp
xchg
je
cmp
pop
inc
pushf
sbb
adc
sub
into
jle
and
mov
xor
std
xchg
jmp
sub
mulb
xchg
cld
cs
jo
jns
les
jg
test
pop
shll
push
lahf
pop
dec
dec
xchg
push
in
mov
out
dec
mov
stos
leave
mov
sbb
sbb
pop
push
stc
iret
retw
out
mov
js
stos
sbb
clc
notb
fs
pushf
ljmp
jne
jnp
jge
dec
and
xlat
clc
sar
movsl
pop
and
scas
sar
sbb
int3
jbe
fs
scas
xor
sbb
mov
test
insl
insl
push
js
pop
movsl
int3
xlat
test
inc
outsb
jno
sbb
or
adc
cwtl
iret
mov
inc
push
pop
lret
bound
test
cmp
adc
or
cmp
ror
test
mov
mov
dec
cltd
lret
sbb
sti
sahf
leave
lods
push
xchg
pop
aaa
adc
sub
repnz
mov
movsb
and
mov
jmp
sub
xor
sub
ds
aad
clc
fisubrs
lret
shrl
pushf
sub
ret
mov
fldt
shrb
imul
jo
lea
in
lcall
sti
sub
das
push
aaa
push
adc
in
mov
addb
fcmovnu
sbb
cmp
cmp
in
mov
fadds
loopne
mov
push
xchg
or
testb
fistps
jae
jns
mov
out
jg
icebp
fisttpll
sub
mov
xor
icebp
or
ss
inc
sbb
push
aad
mov
mov
sub
jne
mov
nop
insb
xorl
sbb
jno
out
sub
sub
imul
sub
xchg
loopne
lret
outsb
xchg
lods
les
jl
mov
cwtl
push
pop
sub
jp
sbb
mov
add
rorb
mov
pop
push
sub
sub
cld
fcomip
std
lea
sarl
mov
testl
scas
sahf
mov
addl
test
and
stos
pop
ja
xchg
fs
mov
dec
and
fwait
push
sbb
mov
loop
loopne
data16
sbb
push
adc
jb
add
sbb
push
mov
push
stos
xorl
pushf
das
mov
mov
testl
dec
rolb
in
mov
ljmp
fcomps
jno
jecxz
dec
mov
cmc
jbe
push
mov
mov
dec
xchg
xchg
add
nop
xor
es
adc
clc
mov
adc
jae
adc
adc
dec
dec
lret
dec
les
lcall
xor
enter
dec
loop
nop
adc
cli
jmp
decl
scas
popf
push
mov
or
leave
jo
testb
mov
sbb
xor
stc
lret
in
pop
pop
xchg
or
xor
dec
dec
dec
xchg
cmp
push
mov
repz
insl
inc
lea
roll
xchg
jle
add
test
in
pop
movsb
inc
push
fs
mov
lea
xchg
jp
iret
cmp
sub
push
mov
cmpsl
or
sahf
popf
xchg
rorb
sbb
in
repz
rorl
sbbl
leave
stc
adc
ret
iret
inc
pop
xchg
sub
movsb
sahf
clc
movsb
loop
imul
lea
mov
pop
inc
rolb
in
add
add
xchg
lret
jnp
sarl
ret
xchg
mov
call
add
and
fwait
cmpsl
mov
fwait
jae
mov
jmp
in
sub
sbb
push
jge
sub
mov
popf
out
testl
push
cltd
fistps
xchg
cli
xor
mov
pop
and
outsb
arpl
in
push
xchg
lods
push
out
ja
mov
push
rorl
aad
add
push
mov
mov
jg
and
or
xor
enter
or
cmp
inc
inc
xor
into
cmp
nop
add
mov
es
insl
stos
add
or
xor
mov
jno
mov
lret
bswap
aas
scas
and
dec
pop
pop
and
mov
es
in
mov
imul
adc
jb
xor
xchg
pop
mov
jo
insl
xor
sub
fistpl
loopne
add
fsubrp
mov
into
lds
mov
mov
hlt
sub
andl
repz
cmc
xor
ret
sub
inc
sbb
or
or
cltd
shl
push
je
mov
out
mulb
loope
xor
or
filds
out
idiv
test
push
stc
cmp
jns
add
dec
ds
add
mov
xlat
in
imul
imul
adc
cmp
xchg
push
cltd
jmp
push
jnp
jb
pop
loopne
adc
mov
insl
or
sub
pop
mov
mov
popf
ja
ljmp
mov
jo
push
mov
xchg
mov
stc
jge
inc
pop
roll
insl
popf
repz
jno
xor
cmp
sub
mov
or
inc
add
jae
imul
adc
sub
sbb
int3
push
mov
xor
rcr
mov
mov
add
daa
repnz
pop
xchg
and
jo
mov
push
stc
fwait
ds
mov
cmpsl
rorb
dec
or
icebp
pop
push
leave
inc
mov
lret
outsb
jno
push
mov
jmp
insb
fisttpll
shll
add
sbb
add
xor
inc
lret
mov
adc
sbb
jbe
push
inc
sub
movsl
cs
mov
jb
dec
les
add
loope
jb
mov
shrb
out
add
dec
sub
jg
pop
xorb
add
mov
jge
adc
and
sub
adc
cwtl
add
test
add
sbb
or
xor
pop
cli
mov
pop
subl
inc
sti
jg
shl
in
mov
pusha
cmpsb
scas
lret
adc
pop
and
mov
dec
mov
in
mov
mov
aam
sub
neg
out
in
ret
xor
sbb
adc
push
sbb
dec
call
inc
mov
test
cmpsb
call
and
mov
mov
or
pop
dec
test
stc
add
xor
push
adc
mov
mov
push
out
xchg
aaa
inc
outsl
cltd
mov
or
out
test
xchg
pop
fdivrs
and
xchg
mov
inc
je
hlt
xor
bnd
adc
lahf
cld
dec
lods
aad
ss
push
sahf
mov
push
dec
mov
sbb
pop
and
jnp
or
mov
push
das
cmp
inc
clc
mov
cmp
call
int3
push
rol
repnz
dec
mov
push
test
sub
outsb
jnp
mov
xor
xlat
xchg
rcl
pop
movsl
popf
jne
call
cwtl
mov
orl
or
jbe
fs
jbe
mov
mov
sbb
mov
mov
push
xchg
pop
inc
stos
push
mov
jno
sbb
xchg
pop
mov
das
ja
mov
fcomps
mov
call
adc
and
cs
adc
js
adc
dec
adc
mov
call
scas
mov
cld
test
jmp
aas
mov
jae
jae
sbbl
jecxz
cli
push
pop
pop
jl
inc
cld
addr16
seta
jbe
xchg
sbb
aam
rorb
lods
push
xchg
mov
negb
jle
sbb
dec
add
add
push
sub
test
adc
loopne
cmp
add
add
decl
jmp
into
cmp
loop
iret
shrl
fidivl
mov
and
push
mov
enter
mov
push
and
pusha
adc
or
pop
cmpsb
sub
jl
sub
iret
fwait
gs
add
pushf
mov
lods
cmp
adc
mov
and
mov
shlb
andl
mov
cld
data16
push
xchg
or
xchg
or
mov
xor
aas
adc
loop
fwait
rcll
jo
push
mov
loope
inc
jp
mov
cmc
inc
dec
sbb
dec
inc
fisttps
pop
inc
rcl
push
hlt
mov
sub
or
je
sbb
lea
adc
jg
jl
xor
xor
int
jnp
out
es
imul
pop
pop
xor
xor
sub
outsl
out
insb
pop
stos
ret
icebp
shlb
and
mov
and
jg
jno
add
pop
jge
pop
sbb
stos
sbb
inc
sbb
lods
lock
lret
sub
pop
fistpl
push
cs
mov
bound
stos
push
xchg
jg
cwtl
dec
cmp
fimuls
ds
sbb
les
call
pop
clc
sbb
sub
ficoml
mov
idiv
dec
mov
ret
int
popa
mov
out
loopne
imul
cld
cmpsb
or
adc
pop
pop
mov
inc
dec
icebp
imul
rolb
bound
and
test
mov
inc
sarb
cmpsl
push
decl
jae
inc
xchg
adc
inc
stos
sbb
push
test
sbb
inc
jecxz
sub
pop
popf
daa
movsb
pusha
in
in
fisubrl
das
shrb
mov
lret
ret
movsb
lret
enter
and
aad
xor
divl
jno
jne
fcompl
jg
sbb
sahf
inc
cli
aaa
pop
pop
outsb
jb
div
popf
mov
in
inc
cmp
fwait
inc
adc
mov
rcrb
test
decb
call
or
dec
jg
int3
add
mov
in
sbb
and
pop
adc
jge
std
jecxz
xchg
xor
data16
fistpll
dec
jl
popl
arpl
testl
lock
test
sub
lods
fmulp
jmp
and
das
jg
fnstsw
lret
stos
sub
andl
mov
sbb
inc
out
mov
jbe
mov
repnz
xor
cmp
ss
stos
xor
dec
dec
leave
push
push
pop
lock
xor
out
push
lock
in
sbb
dec
cwtl
mov
pop
push
mov
add
sub
loop
cltd
jmp
shrl
jle
loopne
rcr
jmp
xchg
xchg
mov
and
stos
popf
mov
inc
mov
jg
and
pop
aam
repnz
out
jnp
pusha
xlat
mov
mov
xchg
cmpsb
ljmp
mov
mov
cmp
arpl
jns
push
dec
fistpl
les
pop
cli
test
int3
repz
mov
sbb
lods
fildl
lahf
inc
cmpsb
scas
pop
jbe
jnp
ficomps
out
sub
mov
add
int
sbb
xchg
xchg
adc
int3
jmp
jmp
repnz
test
inc
js
in
mov
xchg
daa
jg
xor
jne
inc
mov
fcmovu
test
push
push
dec
sbb
orb
std
inc
pop
inc
adc
arpl
subl
iret
ja
cmp
div
bound
adc
mov
add
lret
lret
rol
mov
mov
xor
and
mov
and
inc
mov
repnz
aas
fs
orb
insl
fldt
and
pop
cmpsl
sahf
or
arpl
mov
push
lahf
push
xlat
or
add
mov
cmp
pop
sbb
xchg
cmp
jmp
mov
fstps
cmp
pop
xor
xor
xor
xchg
add
sub
fsubrp
lret
sub
mov
jne
lock
testl
stos
mov
xchg
dec
lcall
jecxz
cmp
sub
neg
aaa
fcoml
leave
mov
xchg
shr
orl
xchg
add
xchg
push
mov
mov
ljmp
sub
jne
mov
xchg
arpl
mov
cli
stos
mov
enter
addb
add
fisttps
mov
adc
lret
pop
xor
add
hlt
add
add
mov
imul
and
notb
mov
push
jmp
rcrb
divl
mov
push
dec
out
mov
mov
cs
imul
sbb
inc
imul
enter
in
sbb
and
pop
mov
lods
test
sar
pop
push
mov
mul
push
dec
frstor
movsb
lds
stos
fidivrs
lea
or
jge
mov
push
decl
xchg
mov
addl
jl
add
pop
push
scas
jp
leave
loope
out
stc
test
push
aas
pop
shll
fwait
or
mov
mov
push
les
xchg
mull
inc
jbe
pop
adc
mov
loopne
push
inc
pop
sub
ja
and
out
mov
inc
into
push
lds
xchg
aam
mov
and
lock
scas
dec
arpl
lret
sub
add
addr16
mov
idivl
push
jno
cmp
push
int
adc
lret
popf
fdivp
out
mov
cwtl
scas
das
jno
xchg
repz
jb
in
mov
jl
daa
xor
jns
dec
or
or
into
test
cmp
push
lret
iret
jle
xor
add
mov
pop
into
xor
out
and
cmpsl
fisttps
shl
mov
xchg
adc
aaa
cmpsb
dec
lcall
into
fnsave
jle
jecxz
dec
outsl
cmpsb
push
stos
cmpsb
fwait
cmpsb
js
jl
repnz
jle
pop
inc
mov
out
add
mov
sub
filds
pop
fisttpl
ret
mov
mov
cmp
mov
dec
aas
inc
or
insb
dec
adc
aaa
push
and
xchg
or
adc
inc
in
loope
adc
lahf
inc
mov
and
lret
push
fldcw
mov
xchg
ds
cmpsb
cld
arpl
cmp
xchg
in
lods
adc
lahf
in
xor
sbb
outsb
adc
lds
stc
jbe
cli
inc
add
bound
into
mov
xor
or
sbb
mov
mov
xchg
mov
cwtl
cmp
jge
lock
push
test
loope
cli
sti
ffree
jl
sub
mov
xor
les
jb
mov
push
dec
sub
mov
pop
std
fwait
lahf
sub
pop
outsb
mov
xchg
mov
jno
loopne
repz
fisubrl
ficoml
add
ljmp
and
hlt
icebp
shrl
xchg
dec
mov
fdivl
mov
fdivr
fistl
sahf
pop
mov
xchg
adc
mov
sub
xchg
xor
sub
mov
loopne
or
pop
or
in
stc
ds
adc
push
rcrb
xor
loopne
loopne
lret
lock
fs
lds
cmp
insb
rcrl
loop
es
mulb
or
std
mov
mov
scas
or
xchg
cld
adc
cmp
xchg
cmpsl
cmp
mov
insb
outsb
xchg
adcl
mov
mov
mov
data16
dec
aam
fsubs
dec
stos
cmp
cmc
jae
sahf
jmp
mov
mov
outsl
xchg
push
or
mov
call
and
mov
in
fwait
cmpsb
leave
xchg
std
sti
cmp
lret
outsb
cld
pop
pop
mov
push
iret
cmc
fcomp
adc
push
rcrl
xor
pusha
push
sub
cwtl
jne
mov
xchg
mov
sbb
pushf
rcl
in
into
xor
add
ljmp
or
push
out
dec
mov
shrl
jne
adc
inc
scas
test
mov
out
in
pushf
stos
xchg
mov
in
jp
adc
pop
lret
pop
out
ret
mov
sbb
dec
stos
repnz
xchg
inc
stos
mulb
aam
xorl
jne
xchg
or
and
jae
pop
out
in
xchg
mov
mov
jbe
std
ss
addr16
jle
mov
scas
add
sub
loopne
push
lret
and
hlt
sub
inc
rcrl
fsub
in
sbb
cmc
xchg
dec
mov
mov
popf
jbe
aam
gs
push
xchg
lea
lods
ret
outsb
imul
out
lods
jmp
pop
popa
cpuid
mov
and
mov
mov
xchg
dec
mov
sub
mov
stos
and
or
adc
lcall
lcall
jo
jmp
xlat
jo
cmp
xchg
movsb
jo
sbb
js
sahf
jmp
add
es
jno
cmc
divl
mov
movsb
and
add
add
into
arpl
in
xor
jmp
sub
sbb
lahf
into
lcall
fs
and
loop
sub
jp
xchg
inc
jns
mov
shrl
xchg
mov
stos
mov
jnp
imul
cwtl
push
iret
push
std
mov
out
push
jle
divl
xor
lret
in
leave
fwait
mov
les
cltd
push
fwait
jl
testl
out
outsl
mov
inc
cld
jmp
enter
or
sahf
mov
push
rcrl
sbb
mov
lods
mov
mov
push
jg
fwait
mov
xor
imul
mov
movsl
xchg
sarl
roll
mov
aad
add
jmp
insb
xchg
iret
mov
push
mov
xor
sub
cmp
int3
filds
xchg
cmp
aaa
push
cmp
repz
es
imul
inc
push
mov
mov
dec
out
sbb
xlat
pop
stc
sub
xlat
les
ret
add
in
test
xchg
pusha
and
pop
push
sbb
pop
jnp
push
testl
push
iret
js
sbb
pop
push
lods
and
sbb
xchg
shlb
loop
inc
std
dec
add
rsqrtps
cmc
xor
inc
mov
inc
data16
push
jns
mov
sbb
mov
pop
xchg
adc
in
xchg
mov
cmp
jae
rcrb
push
stos
or
in
arpl
pop
imul
push
je
inc
sub
add
xor
and
cmp
insl
push
adc
jo
aam
dec
or
mov
inc
and
push
cmp
pop
dec
hlt
mov
stos
pop
scas
add
lods
xchg
jmp
inc
jbe
call
xor
shlb
jle
push
xor
mov
ljmp
clc
addl
jl
jp
mov
test
push
addb
mov
push
sti
jg
insl
mov
mov
in
mov
test
rol
jmp
js
sbb
inc
jb
sbb
clc
mov
sbbb
movsl
dec
mov
lcall
cli
daa
jb
adc
mov
add
cmp
mov
push
xor
lret
jp
jp
or
cli
cli
cmp
xchg
add
out
xor
js
dec
adc
es
sbb
sbb
and
sub
outsb
popf
ljmp
and
xlat
in
lods
nop
dec
jge
xchg
dec
mov
or
in
pop
add
andnps
push
loop
sarb
imul
pop
cmc
lds
loope
iret
cmpsb
xor
xchg
in
and
sbb
mov
xchg
jns
insb
aaa
pop
loop
decl
mov
add
push
ret
xchg
push
les
out
adc
mov
inc
mov
out
ss
lods
cmp
repz
ljmp
faddl
xor
pushf
mov
mov
dec
fcmovbe
add
pop
xchg
pop
les
sbb
mov
in
mov
sub
pop
sub
xchg
imul
cltd
mov
popf
leave
out
movsl
mov
iret
dec
pushw
orl
sbb
xchg
scas
pop
adc
pop
shll
push
imul
mov
ljmp
mov
divb
pop
sarb
jno
jb
xor
aad
lahf
push
iret
mov
movsb
sti
ret
inc
cmp
mov
sahf
cmp
fldt
mov
scas
sub
es
scas
pushw
sub
out
jnp
jl
and
roll
dec
cmp
das
sub
xchg
cmpsb
push
add
out
lret
sbb
jo
jo
jno
pop
mov
xor
movsb
in
cmp
adc
aaa
sti
addr16
mov
mov
aaa
or
jae
and
dec
ja
add
imul
cmp
push
int
call
or
and
xorl
shl
mov
stc
sub
arpl
push
xor
cli
addr16
mov
sub
pop
popl
cmp
and
mov
clc
loope
sbb
std
pop
sbb
xchg
andl
pusha
add
add
add
ret
inc
fisttps
lahf
int
push
maxps
add
hlt
add
add
xchg
xchg
mov
rcl
adc
pavgw
int3
rorb
mov
cwtl
sbbl
jne
mov
testb
push
mov
push
xchg
jne
stos
sbb
loop
stc
xor
idiv
testl
popf
xor
mov
jge
fdivl
lea
and
or
push
mov
xor
xchg
repz
cli
movsl
xlat
int3
pop
test
jnp
jnp
orb
add
push
outsb
in
mov
inc
or
sbb
push
fdivrl
aad
out
xor
enter
add
es
cwtl
mov
mov
mov
mov
sbb
ret
pusha
fdivs
in
rorb
mov
jle
and
test
jp
adc
jo
outsb
mov
push
sbb
in
pop
push
stos
testb
jo
inc
das
cmp
cmp
jle
dec
cli
sub
mov
jb
sbb
push
addr16
pop
inc
lods
mov
fistpl
mov
rcll
and
das
mov
into
push
ja
xchg
std
stos
dec
pop
mov
inc
xchg
popf
je
mov
xchg
outsb
xlat
fbld
or
psubd
cmpsl
fistps
jmp
test
sub
or
pop
std
pop
ja
add
jp
ljmp
jg
repnz
mov
sgdtl
aaa
int3
inc
cmovb
sbb
and
cmp
sub
pop
jae
repz
inc
cmp
iret
cmc
jl
push
outsl
and
cmp
inc
adc
push
lcall
gs
into
jge
xor
scas
xchg
cmp
xor
aas
gs
loop
add
popf
cmp
add
hlt
xor
mov
insl
pushf
std
in
jb
in
dec
aad
cltd
mov
sub
fxch
or
mov
loopne
or
rclb
jns
mov
sbb
pushf
dec
out
fcoms
xlat
das
mov
mov
xchg
or
xchg
and
in
cmp
scas
imul
divb
scas
mov
aad
mov
ljmp
cmp
inc
fisttpl
sahf
data16
icebp
push
or
push
and
xor
pushw
cmp
dec
js
stos
cltd
jne
loop
cltd
pop
repz
sbb
les
jno
or
mov
repnz
leave
xchg
inc
aad
test
xchg
jnp
inc
lods
ret
mov
and
shrl
stos
ret
cmp
add
add
mov
out
sbb
cmova
lds
iret
push
xor
loop
pop
aam
repnz
sub
fstpt
pop
into
ret
or
std
pop
dec
pop
fistps
es
je
ljmp
insl
mov
aaa
sbb
adc
pop
adc
xchg
lcall
sub
imul
push
hlt
inc
in
mov
dec
jp
cmp
sti
out
sahf
jle
sbb
dec
addr16
fmull
repz
mov
adc
sti
xlat
and
adc
push
mov
cmp
jecxz
and
mov
jae
add
repz
lret
jo
xchg
and
in
shrl
les
pop
stos
scas
jge
inc
push
or
jmp
mov
jbe
sub
ljmp
cld
imul
cmp
daa
pop
fs
nop
int
out
inc
movsb
adc
js
push
cmp
mov
add
out
jae
cmp
sub
cmp
xor
mov
sbb
ret
jg
push
add
dec
mov
or
shll
int
add
flds
push
pusha
stc
dec
mov
mov
aas
jnp
bound
fimuls
mov
adc
pop
and
out
push
scas
sbb
mov
mov
daa
push
scas
xor
jo
xor
stos
cli
pop
cmp
stc
mov
add
mov
lods
popf
fwait
movl
sbb
insl
mov
sub
in
in
xor
lahf
stos
loopne
or
inc
loopne
mov
leave
mov
call
sub
mov
test
lret
and
push
add
cli
in
stc
sbb
xchg
cmp
xlat
aas
popa
adc
addl
inc
or
add
add
movsl
lea
jmp
cmpl
adc
mov
fidivl
loopne
clc
cmc
xchg
fucomi
dec
mov
pop
fnop
jo
dec
mov
hlt
in
jl
fcoml
push
cmp
mov
test
insb
addr16
push
idivb
inc
cmp
daa
aaa
sub
xor
dec
les
push
cltd
fs
sbb
push
in
negl
dec
push
cmc
lret
inc
mov
sbb
pop
inc
movsb
jo
or
and
emms
pusha
mov
push
sbb
arpl
fstpt
xchg
cmp
add
push
jo
jne
push
push
add
jle
adc
xchg
jnp
js
fcos
cmp
xor
jecxz
nop
mov
scas
out
xchg
aaa
dec
sub
pop
add
jmp
xchg
mov
cmp
mov
arpl
stos
cmc
mov
loopne
push
mov
jge
aad
sub
faddp
fsubrs
loop
inc
inc
mov
sarl
testl
mov
sahf
js
rolb
ds
or
nop
sub
dec
lock
push
popf
xor
data16
sub
inc
xchg
mov
inc
mov
test
gs
cli
sti
ljmp
jnp
into
mov
push
stos
pop
cmpsl
xor
xchg
sbb
lret
inc
lret
or
ljmp
lcall
pop
test
scas
push
inc
pop
adc
fs
jmp
xor
fistpl
pop
lods
and
cmpxchg
inc
xchg
push
scas
stc
mov
cmp
scas
pop
adc
cmp
test
test
xor
sbb
ret
jle
or
jge
xlat
and
lahf
cli
inc
fstl
xor
addb
lock
into
jb
addr16
inc
and
clc
mov
add
inc
mov
in
jae
inc
sbb
in
push
push
xor
inc
scas
jl
iret
std
mov
mov
inc
mov
sbb
cwtl
xrelease
add
iret
or
shl
mov
call
mov
cwtl
cmp
xchg
insl
cmp
out
aas
mov
enter
jae
and
xchg
rorl
mov
scas
mov
addr16
fwait
sbb
addr16
stc
pop
xchg
push
push
fmull
jno
and
xor
scas
fs
clc
mov
test
push
bound
inc
out
idivb
sub
in
lret
jp
mov
popa
test
xlat
inc
out
jp
sub
or
dec
adc
push
mov
jg
mov
inc
add
pop
xchg
insl
push
push
enter
xor
xchg
fbld
pusha
test
sbb
mov
addl
scas
lret
fwait
stos
mov
neg
jae
or
add
bound
push
out
xlat
adc
pop
scas
push
roll
dec
ja
sahf
lock
es
and
repz
mov
mov
dec
ja
inc
fistpll
shl
xor
adc
jmp
cmovs
daa
jo
int3
inc
jp
sbb
sub
ss
into
fdivr
stos
and
push
push
out
push
jmp
cli
mov
cmp
mov
dec
outsl
sbb
enter
inc
rolb
fs
xor
adc
lret
fdivrs
pop
popa
sbb
mov
or
dec
gs
add
push
faddl
sub
jnp
shr
mov
insb
sub
mov
je
std
dec
cmpsl
inc
mov
push
mov
test
add
stos
ds
dec
jns
lods
scas
data16
pop
pushf
gs
dec
add
jp
or
mov
or
shll
ss
fisttpl
loope
lahf
mov
sbb
mov
repz
pusha
movsb
mov
mov
inc
jno
repnz
mov
in
in
push
mov
jg
xor
jns
lcall
add
mov
dec
pop
dec
stc
jne
or
int3
imull
xchg
lret
mov
and
test
cmc
mov
mov
adc
divl
mov
jmp
jmp
scas
xchg
adc
inc
popf
pop
int3
lea
add
dec
cmpsb
bound
incl
lret
jmp
push
scas
and
in
mov
mov
lods
negl
xor
cwtl
in
leave
lcall
dec
or
jp
xor
sahf
insl
not
neg
mov
int
leave
stc
hlt
add
add
hlt
add
add
mov
addl
mov
loope
push
inc
daa
jae
jg,pt
sbb
js
clc
test
insl
push
bnd
pop
push
pop
in
test
mov
mov
pop
push
inc
jl
xchg
jge
and
sub
test
mov
out
imul
pop
inc
test
aam
mov
shll
test
or
add
jge
mov
adc
xchg
rolb
cmp
stos
lods
pop
adc
add
cld
inc
movsl
xlat
daa
icebp
adcl
xor
add
mov
and
sub
pop
dec
push
lahf
andl
movsbl
push
xchg
cmp
in
nop
scas
jb
rol
pusha
jae
in
repnz
outsb
sub
inc
loope
adc
arpl
xor
clc
cmp
xchg
icebp
mov
lahf
testb
pop
mov
int3
movntps
scas
ret
arpl
lahf
push
dec
push
ja
lahf
imul
inc
and
xor
icebp
cs
adc
insb
xlat
jbe
mov
push
mov
mov
mov
cmp
test
fidivrs
decb
mov
scas
add
push
ljmp
stos
inc
dec
lds
scas
mov
jge
mov
add
subl
and
imul
mov
jbe
jle
arpl
dec
cli
pop
ss
fiaddl
mulb
loop
movsl
outsl
das
push
cmp
insb
pop
pop
fcomps
bound
pop
adc
jmp
sbb
call
mov
gs
stos
mov
sbb
ljmp
out
out
cmpl
add
repnz
push
and
pop
scas
rol
xchg
adc
adc
out
fistps
adc
mov
in
mov
inc
pop
mov
push
imul
and
outsb
imul
iret
leave
lcall
daa
xchg
in
stos
jmp
outsb
nop
and
sbb
push
movsb
popa
into
inc
imul
pop
pop
mov
sbb
add
pop
loop
in
cmpsb
sti
daa
stc
jmp
jne
popa
sarb
push
cmp
pop
add
sbb
xchg
push
outsb
jmp
gs
add
or
ficompl
mov
pop
pop
icebp
outsl
test
pop
mov
addb
ljmp
sahf
inc
out
jp
jle
outsb
xor
xor
mov
cmp
lahf
sub
iret
push
jg
repnz
enter
cli
mov
insl
cld
dec
cmp
mul
inc
mov
jmp
aaa
sbb
les
in
and
inc
pop
mov
xchg
cltd
lock
add
and
jb
push
stos
dec
or
into
fsubl
bnd
xor
pop
lods
jl
jne
xor
dec
call
sarl
jne
and
add
cli
mov
hlt
lods
xor
cmpsb
and
cmp
pop
sub
pop
in
in
mov
incl
out
mov
stos
xor
jmp
sbb
pop
inc
outsl
dec
xchg
pushf
test
push
pusha
dec
sub
sub
fucompp
jae
fisubl
loopne
mov
cmpl
pop
add
sub
rorl
mov
into
pop
fiadds
clc
push
addr16
sub
mov
pop
push
adc
mov
lods
push
dec
jns
pop
push
call
enter
adc
mov
lods
cld
or
movsl
ss
nop
and
mov
pop
add
loopne
mov
jge
fs
fs
push
gs
add
push
add
push
fs
subps
cmp
push
xlat
dec
shl
jb
shl
das
mov
es
jecxz
or
adc
ds
mov
add
rorb
movsl
xor
and
jo
cli
xchg
sub
add
sahf
enter
pop
jae
jge
insl
jno
loope
jno
xchg
aas
mov
fs
aas
sbb
jp
mov
pop
mov
add
ret
mov
jnp
mov
in
lock
rolb
mov
lcall
push
push
out
std
mov
push
jg
mov
cmc
or
add
add
add
lahf
mov
out
xor
sbb
sub
mov
and
dec
lret
dec
aaa
jmp
xchg
fnsave
shrl
in
push
push
fdivl
out
repz
pushf
std
and
jbe
jmp
push
dec
icebp
movsb
cmpsl
adc
mov
or
lds
pop
and
int3
xchg
xor
das
mov
scas
and
adc
scas
pop
mov
xor
repnz
mov
into
gs
jecxz
xor
and
das
pop
lahf
aam
mov
stos
push
cmc
inc
add
mov
mov
clc
sub
pop
jle
cmp
add
sbb
mov
lahf
mov
xchg
outsl
mov
mov
mov
or
add
testb
push
insl
dec
xor
ja
xor
scas
push
stos
mov
push
setp
sbbl
repnz
cmp
rolb
jmp
loope
add
dec
cmp
sti
cmp
add
cmp
js
aad
into
adc
into
and
jl
arpl
repz
jl
pusha
ljmp
jg
scas
push
sbb
or
cmp
pop
push
sbb
jbe
lret
mov
subl
add
jp
xchg
dec
add
and
pop
clc
movsl
push
pop
out
out
rolb
fwait
jge
mov
aad
movsl
sub
insl
loope
mov
xor
shrl
jno
repz
jl
pop
sar
nop
mov
pop
jge
into
add
push
dec
cmp
sub
aas
shll
sub
jl
and
cwtl
inc
aas
pop
or
pop
pop
fwait
aaa
pop
or
rol
inc
enter
pusha
jne
mov
nop
test
add
popa
loop
xor
repz
ret
or
and
inc
mov
loop,pn
sub
pop
xchg
push
push
aas
aad
lret
inc
inc
or
xchg
rcl
stos
idivb
fcoms
lret
cmp
sub
sbb
jno
and
adc
push
jnp
idiv
xchg
xchg
std
ljmp
lock
and
mov
rcrl
ret
das
shlb
arpl
popa
gs
imul
fistps
ficomps
pop
xchg
pop
pop
sbb
out
into
int3
shlb
clc
lahf
add
mov
mov
lds
xor
and
fsubrl
popf
loope
push
jle
sub
int
mov
les
cmpsl
pop
mov
stc
add
repnz
out
dec
int3
push
jp
and
fwait
mov
jg
cmp
jnp
jl
mov
adcb
fwait
inc
xchg
mov
leave
mov
or
mov
and
jb
mov
lock
mov
ljmp
push
and
adc
lock
nop
in
mov
dec
icebp
lods
aad
out
push
int
adc
std
loope
lds
shll
mov
pop
icebp
sbbl
mov
out
add
cmp
xchg
lock
jne
xchg
bound
bound
sub
popa
loopne
xchg
cmp
bound
rclb
mov
mov
shll
inc
test
roll
movsl
cwtl
mov
or
inc
inc
jnp
jae
cmp
xchg
js
sub
xchg
fldcw
push
lret
popf
mov
popa
jecxz
jge
jmp
aas
cmc
mov
lds
and
cs
add
cmp
mov
sahf
inc
lds
arpl
fisubl
mov
push
std
aam
pushf
out
js
js
icebp
jg
or
in
xchg
add
cmp
push
and
pop
and
aaa
lcall
and
stos
mov
jno
hlt
dec
push
or
sbb
stos
adc
popa
mov
push
jno
scas
sub
push
jmp
push
in
xchg
addb
dec
dec
and
mov
insb
mov
jno
in
mov
sahf
xchg
xchg
outsb
pop
ss
lock
push
in
sbbl
adc
push
scas
sub
or
aaa
sbb
pusha
ret
popa
sbb
lea
hlt
pop
stc
cld
pusha
push
and
inc
movsb
pop
or
xchg
loop
jnp
mov
jl
fimuls
sbb
xchg
jnp
push
or
dec
mov
sbb
push
and
not
add
loop
xchg
bound
scas
inc
out
push
testb
add
inc
push
lret
in
out
dec
add
cli
xor
sgdtl
hlt
add
add
fisubl
adc
scas
das
pop
jmp
inc
xchg
adc
mov
adc
sbb
push
in
push
das
xor
clc
xchg
xchg
repz
int3
inc
push
sbb
xchg
sub
jnp
movsb
jbe
dec
pop
xchg
cmpsl
mov
jp
loop
div
jbe
imul
push
mov
push
ds
dec
mov
stc
mov
std
sarl
push
mov
repz
pop
std
fildll
loope
pop
and
add
push
icebp
mov
pop
data16
push
lds
and
mov
push
jnp
pushf
pop
mov
rol
pop
xchg
fnsave
or
pop
jnp
loope
push
inc
xchg
cmpsl
and
xlat
fadds
clc
out
dec
push
and
jns
pop
jbe
int
inc
popf
pop
insb
or
sub
dec
cmc
adc
inc
ss
push
cmpb
cmp
cld
out
dec
sti
cltd
pop
push
outsb
dec
ret
cmp
idiv
imul
xchg
jns
xor
decl
inc
mov
jbe
shll
adc
mov
cmpb
outsl
cmc
test
jbe
je
xor
nop
dec
shll
pusha
loopne
cld
int
dec
cltd
orl
xor
inc
pop
out
cltd
inc
mov
xchg
popf
movsb
xor
movsb
mov
fisttps
jnp
jge
je
loope,pt
outsl
mov
dec
pop
add
je
and
divb
rclb
flds
and
add
ss
xor
std
xor
mov
sahf
lret
inc
push
xchg
xchg
adc
xlat
es
cmp
and
andl
dec
movsbl
mov
xchg
mov
shl
scas
jb
in
push
les
ljmp
pop
sub
push
pusha
adc
xchg
xlat
xchg
in
xchg
dec
push
mov
mov
or
enter
xor
xchg
loope
xor
out
jp
sbbl
test
sahf
xchg
loopne
insl
jne
pop
loope
pop
mov
pusha
ret
sbb
add
sbb
stos
mov
inc
lds
insb
sub
sub
jo
out
cltd
je
fdivl
adc
cltd
cmp
aam
hlt
sbb
mov
dec
stos
xchg
pop
dec
or
loopne
xchg
or
enter
loope
sbb
dec
mov
add
mov
pop
cmp
dec
aas
arpl
and
fimull
shrl
push
jl
push
fs
test
imul
mov
xchg
repz
xchg
or
vmread
jle
jle
fwait
ljmp
xchg
inc
popl
push
and
inc
fwait
jns
pop
roll
jo
shl
idivb
mov
movsb
dec
push
push
std
shll
or
test
inc
xor
and
push
mov
rolb
xchg
mov
enter
mov
mov
sbb
jns
lret
out
addr16
sbb
sti
xchg
leave
sbb
lret
pop
jl
out
or
aam
sti
xchg
xor
je
jg
mov
or
enter
or
clc
adc
lret
out
mov
hlt
cld
lret
add
ret
js
or
inc
cmp
jb
mov
or
xchg
mov
cmc
jmp
call
and
in
adc
fs
sahf
pop
mov
ss
and
daa
adc
xchg
std
pop
sub
cmpl
mov
into
xchg
inc
cmp
mov
lods
or
pop
sbb
inc
imul
mov
push
in
xor
in
popf
inc
sub
dec
rcrb
out
dec
icebp
adc
es
sti
bound
push
pop
xchg
mov
or
xor
std
adc
js
push
mov
iret
add
push
ja
ds
cmp
push
and
mov
enter
xchg
add
mov
imul
shr
jecxz
out
push
aas
stos
pop
jno
sbb
sbb
jb
test
call
sub
loopne
or
lock
loopne
idivb
inc
mov
or
mov
cld
hlt
cltd
insb
mov
pop
mov
xchg
mov
inc
popf
add
mov
pop
mov
repz
xchg
int3
jge
es
arpl
bound
sub
mov
add
push
xor
fadds
jb
test
add
jae
das
add
mov
and
out
jmp
pop
xor
cmp
dec
jmp
add
add
je
std
mov
shlb
das
imul
adc
add
add
add
fisubl
daa
js
adcl
xchg
push
lods
dec
addr16
cmp
adc
roll
mov
movsl
cmpsb
pop
stos
imul
jmp
inc
in
movsl
out
bound
imul
mov
ljmp
repz
mov
mov
jno
cmp
int3
cmpsl
mov
jl
cmp
cld
cmp
push
dec
push
or
push
addr16
outsl
sti
fistl
xchg
push
xor
push
pop
jnp
sub
add
rclb
pop
sbb
mov
jg
dec
xor
test
jl
loopne
adc
jle
sub
cmp
push
push
dec
push
dec
out
in
push
je
lods
mov
addl
or
xor
sub
inc
shl
out
repz
cmp
mov
xchg
dec
cmp
xchg
movsb
mov
and
jb
insb
shl
cmc
sbb
push
out
push
popl
dec
and
inc
pop
fistl
mov
stos
xchg
xchg
adc
jmp
or
mov
ret
inc
cltd
popa
jns
loop
sti
xchg
push
clc
int3
jecxz
aas
int3
lods
jnp
data16
sbb
mov
shrl
scas
add
enter
jmp
fsubrl
mov
pop
lcall
enter
jmp
addr16
ljmp
test
sbb
mov
cmp
or
jns
pop
xor
hlt
fldl
dec
adc
jae
cmp
test
adc
adc
xchg
push
out
dec
cs
inc
jle
out
test
and
lret
cmp
push
fnsave
sar
sarb
aaa
inc
add
cmp
inc
fmull
mov
test
push
push
shrb
aad
lods
and
ljmp
sub
cs
es
fbld
mov
jmp
hlt
jg,pn
popf
movsb
in
cwtl
cli
aad
test
cli
pop
ret
jo
push
xchg
movsl
pop
cmp
gs
leave
ss
out
je
cltd
add
and
lret
test
jle
loope
xchg
ljmp
loop
stos
je
fcoms
jg
mov
push
cli
test
out
pop
push
outsb
pop
and
pop
mov
in
and
inc
dec
pop
mov
test
cmpl
sbb
push
push
pop
jle
push
sub
or
ja
push
push
ljmp
or
xchg
add
pop
data16
cmc
jns
scas
lret
les
mov
lret
sub
sbb
pushf
or
jns
push
mov
mov
dec
shlb
ret
cld
ljmp
addr16
mov
xor
push
stc
rclb
test
jb
sbb
inc
int3
pop
mov
loope
dec
cmp
or
and
shl
push
fadds
mov
mov
or
dec
andl
popf
int
sub
add
je
mov
aam
add
arpl
sti
push
out
push
adc
dec
push
push
mov
idiv
jae
push
std
das
cmp
pushf
pop
push
mov
push
into
sub
xor
std
pop
imul
scas
scas
ret
int3
imul
xchg
sub
or
xor
sub
mov
ss
pop
pop
and
loop
mov
ss
cltd
and
jo
xchg
pop
cmp
mov
xorb
add
inc
and
add
in
push
std
cs
mov
jno
aaa
inc
jp
sub
push
jne
std
adc
mov
xchg
ja
les
in
mov
push
cmp
xor
ljmp
je
dec
pop
xchg
stc
lahf
bound
jo
stos
div
pusha
insb
testb
dec
cwtl
xor
push
mov
testl
stc
pop
adc
pushf
sbbb
xor
mov
repz
and
push
mov
mov
xor
pop
cwtl
lods
cmc
jbe
orl
pop
daa
jne
test
cltd
or
call
push
nop
outsl
fsubl
add
inc
loop
fwait
mov
pop
mov
lods
adc
inc
and
mov
ja
cmp
cmpsl
mov
lahf
push
in
lret
push
enter
xor
push
pusha
inc
fs
jne
int
push
mov
ss
adc
cmp
iret
mov
sub
fidivl
cmp
dec
cmp
mov
fwait
scas
pop
xor
enter
sahf
sub
xchg
add
add
mov
fs
lods
in
or
sub
rcrl
add
hlt
add
add
nop
cmpb
imul
sarl
fdivrs
pop
or
adc
push
cmpsb
xor
or
stc
pop
imul
lea
movsb
mov
test
pop
mov
out
cmp
adc
xchg
adc
mov
mov
inc
popa
sub
test
xor
test
and
roll
sub
fcoms
mov
xchg
jnp
addr16
int
sbbb
arpl
outsb
mov
fs
add
push
ret
push
iret
xlat
addr16
lahf
pop
cmp
incb
pmaxub
dec
mov
es
or
fisubl
xchg
test
xchg
nopl
iret
test
push
cmp
mov
push
int
notl
jmp
in
es
xchg
aam
xchg
adc
out
imul
mov
lds
xchg
adc
imul
push
sub
ret
in
aas
and
out
sbb
int3
dec
sub
aam
insl
cmc
aam
jbe
jl
xor
pop
inc
add
xchg
jnp
je
imul
pop
or
xchg
orl
rcrl
out
fsubr
aaa
in
test
in
mov
inc
and
and
mov
stos
inc
inc
std
and
push
inc
movb
inc
xchg
push
in
out
ja
mov
fstpt
adc
das
sbb
xchg
mov
inc
cmc
mov
arpl
push
sbb
adc
int
enter
cmc
mov
das
ret
xchg
loop
insl
ja
cli
sub
in
xlat
std
int3
mov
je
pop
aad
inc
adc
push
ljmp
jl
mov
loope
sub
loop
mov
mov
into
sbb
mov
in
lds
addr16
dec
fstpl
push
xchg
dec
outsb
jne
or
cmpsl
push
jae
es
xchg
sub
leave
dec
fnstenv
aad
fcompl
dec
dec
loopne
inc
fiadds
push
les
popa
popa
jl
pop
nop
dec
ret
pop
inc
int
loop
mov
les
pop
leave
pop
arpl
jmp
xchg
push
lret
int
pop
mov
push
loope
lcall
add
das
icebp
sti
cld
or
orl
adc
jns
test
or
push
inc
inc
sbb
jns
test
fdivl
aam
das
loop
push
mov
pop
es
cmp
mov
repnz
aad
or
sub
int
and
aas
mov
xchg
loop
xchg
pmulhw
out
jo
xor
jge
sub
out
mov
xchg
out
sub
pop
mov
or
inc
ficoml
negb
cmp
and
cmc
roll
inc
loopne
js
mov
or
and
xchg
pop
xchg
add
or
inc
popf
mov
pusha
loopne
lds
cmp
push
push
or
jb,pn
mov
and
sbbl
aad
out
push
in
xor
mov
in
sbb
sbb
mov
lea
int
mov
shl
jb
xor
inc
push
outsl
mov
pushf
ret
out
nop
xchg
shll
fstl
iret
adc
repnz
pusha
es
shlb
jno
xchg
adcb
jecxz
fiadds
jg
jecxz
mov
pop
notl
xchg
rcl
fsubp
push
mov
cmpb
stos
or
in
pop
shrb
in
imul
jl
loop
add
mov
loope
sbb
out
loop
mov
fiaddl
data16
clc
stos
xor
inc
in
dec
cmp
mov
lock
in
stos
xchg
test
and
jecxz
test
adc
mov
inc
sub
gs
pop
mov
push
adc
outsl
loope
jo
jle
add
push
mov
repz
sbb
pop
mov
mov
pusha
pop
ds
adc
dec
xor
out
fsubs
jnp
in
mov
and
icebp
xchg
xchg
xor
lret
sub
stos
addl
cmp
repz
sub
and
std
dec
jp
add
dec
xor
cmpsb
inc
cmp
pop
call
sub
filds
lret
sbb
and
lock
into
push
scas
sub
push
les
sbb
dec
test
mov
outsl
mov
and
out
bnd
xchg
loope
xchg
stos
jno
and
add
add
sbb
add
lods
test
gs
add
sub
hlt
add
add
pop
inc
mov
dec
ljmp
addr16
dec
gs
jnp
sbb
cmp
cmp
mov
or
es
and
mov
leave
pop
mov
shl
shlb
inc
ficoms
ja
in
xor
bound
cld
insl
cld
mov
loope
adc
push
xor
mov
xorl
jmp
xchg
movsl
cld
push
aaa
xchg
push
push
and
push
cld
and
daa
scas
xchg
das
and
push
jae
test
adc
inc
mov
sbb
pop
push
xchg
ds
popf
rcll
in
lds
leave
sub
mov
popa
adc
add
subb
loopne
cmpsb
fxch
mov
scas
jle
loopne
xor
inc
jno
les
push
dec
int
push
adc
pop
incb
inc
mov
stc
icebp
or
mov
pop
jnp
lds
pushf
ja
cmc
mov
movsb
mov
test
dec
out
xchg
int3
jge
sub
rcr
cmc
arpl
dec
push
sbb
sub
jmp
push
popf
out
in
fnsave
jl,pn
mov
inc
imul
jae
pop
dec
lods
mov
mov
test
setnp
dec
int
xchg
fdivrs
dec
xchg
sahf
push
testl
pop
mov
imul
add
pop
mov
sbb
popf
andl
mov
cmp
divb
ds
and
ret
daa
mov
lock
jp
cmp
mov
dec
mov
xchg
pop
icebp
testl
ss
rcrb
hlt
inc
mov
and
sbb
push
insb
dec
mov
push
bound
lret
sub
dec
and
shlb
inc
jo
dec
loope
jb
pushf
rcrl
adc
leave
mov
call
loope
outsb
push
and
jns
mov
int
sub
push
shll
pop
mov
mov
sub
lock
xchg
loope
mov
lahf
mov
push
inc
adc
sbb
pop
in
sbb
xchg
je
xor
ficoml
add
fbstp
xchg
lods
sbb
rcl
les
outsl
inc
add
or
outsl
and
outsb
mov
push
out
mov
xchg
pop
ja
add
dec
repnz
test
mov
xchg
push
sbb
xor
mov
ror
loopne
add
lret
in
mov
lods
dec
pop
lock
xlat
loope
and
mov
xchg
or
adc
adc
les
sbbb
cli
scas
jmp
loopne
repz
shrb
jmp
aas
sbb
cwtl
push
cmp
cmc
idivb
stos
pop
stc
sbb
cmpsb
es
push
das
ficomps
sbbl
sub
xchg
add
jo
cld
xchg
rclb
sti
bnd
push
mov
imul
fwait
popa
and
in
popf
cmp
jge
pushl
sub
out
sub
data16
pop
push
push
and
sbb
or
data16
cmpsl
push
mov
jp
mov
mov
cmpsl
inc
mov
add
cmp
movsb
xorl
in
sub
pop
xor
jo
mov
push
mov
rcr
lds
sbb
inc
cmp
push
sbb
adc
popa
out
ror
xchg
adc
push
xchg
sbb
mov
stos
sbb
pusha
cmpsl
pop
mov
decb
add
cwtl
gs
inc
mov
jae
pop
mov
mov
dec
jo
xchg
call
imull
inc
dec
mov
cltd
xchg
push
fnsave
push
test
jae
ret
xchg
inc
push
adc
jo
mov
mov
int
pop
mov
imul
jno
test
fdivs
nop
push
lahf
rcrl
cmp
js
ret
pop
lret
fsub
mov
mov
and
dec
add
mov
jg
popf
leave
inc
push
in
dec
push
mov
call
outsl
hlt
fstps
test
pop
xor
sbb
inc
lds
pusha
sbb
sbb
or
mov
sub
cmp
arpl
sbb
gs
in
xor
out
jmp
xchg
or
sub
fwait
shll
mov
cwtl
xchg
stc
sarb
add
add
je
jne
pop
outsl
out
aaa
jae
fmuls
add
add
add
rcrl
rep
xchg
mov
pop
imul
aaa
addl
jl
loop
ret
adc
jbe
fldenv
test
jo
xchg
ds
aas
or
sarb
subb
xor
mov
and
sbb
sbb
xor
xor
sbb
cwtl
cmp
addl
js
cmp
mov
push
insl
hlt
sub
xchg
int3
push
fisttpl
xorb
mov
mov
jp
and
out
push
dec
test
sub
adc
es
push
cld
sbb
and
push
sbb
xor
add
and
xchg
in
mov
subb
ja
inc
outsb
push
inc
jb
lods
mov
sbbl
mov
movsb
cmp
and
in
sbb
xlat
out
add
push
inc
cmpsb
push
lcall
xchg
and
or
mov
mov
movsb
dec
stos
push
insl
fcmovnb
mov
mov
xor
or
mov
pop
dec
xlat
add
sub
xchg
je
outsb
adc
call
rcrb
jne
ret
jle,pt
mov
popa
sub
ret
adc
add
pop
pop
repnz
or
inc
add
loopne
fwait
dec
outsb
loopne
stos
shrl
adcb
sbb
and
xchg
inc
xor
fcoml
fldl
sub
push
mov
shll
stos
adc
mov
insb
inc
or
xor
push
mov
and
jo
jno
andb
or
loope
shl
in
das
fistl
stc
mov
xchg
jno
add
or
mov
push
aam
aas
and
bound
xchg
adc
push
xor
add
jp
sbb
sbb
cmp
jnp
mov
adc
push
mov
xchg
insb
aad
pop
in
shrb
out
cltd
pop
aad
sub
in
fstl
decl
fwait
lods
cmp
cld
jnp
scas
push
div
cmp
jnp
ss
xchg
dec
cmp
repz
pop
cmpsb
imul
pop
lods
add
xor
leave
pop
outsl
or
mov
xor
sbb
fmuls
outsb
lea
mov
or
mov
sub
push
jae
ficompl
loope
imul
popf
sub
dec
mov
fwait
into
push
sub
mov
adc
divl
out
push
sub
cld
pop
dec
popa
mov
jne
ret
fidivl
push
aam
and
push
xor
mov
push
arpl
scas
daa
out
mov
pop
adc
fsubrs
add
fistl
les
pop
push
jl
jbe
xor
adc
fwait
push
pop
daa
sar
jnp
adc
sbb
pop
jb
xor
mov
shrl
repnz
mov
nop
xchg
push
fisubrl
cmp
insb
mov
cwtl
pop
mov
arpl
stos
cmp
and
dec
mov
xor
test
xchg
jg
add
lcall
mov
cmp
and
in
dec
mov
rolb
add
mull
dec
clc
call
cmp
cli
adc
cmp
int
insl
shll
push
sub
rorb
xchg
jp
pop
sub
gs
lret
sub
sub
lcall
inc
notl
push
cmpsl
and
cmpsb
ret
sbb
fwait
cmpb
jbe
lods
imul
pop
sub
mov
incb
insl
and
das
movsl
stos
addr16
movsb
fcomps
addps
mov
imul
out
addr16
jecxz
movsl
mov
vsubsd
or
lahf
idivl
test
out
inc
push
outsl
fisttps
lds
inc
pop
push
imul
cmp
js
rcl
or
aam
fwait
in
cmpl
inc
jmp
pop
cltd
push
popa
add
lret
out
mov
push
sbbl
or
add
mov
into
mov
xchg
jb
cmpsb
mov
cmp
pop
test
dec
aas
jne
out
xor
ja
leave
jmp
dec
das
pop
cli
into
rcl
iret
cli
pop
xor
sub
out
jo
jnp
in
add
sub
inc
sti
enter
fsts
and
mov
xchg
inc
mov
mov
mov
leave
adc
lea
leave
pop
sbb
or
in
rolb
rcr
inc
add
add
dec
dec
ss
std
iret
cmp
cld
lahf
fwait
in
sub
add
add
outsb
in
cs
je
lcall
add
shl
sub
gs
lds
pushf
fs
and
adc
sti
push
shl
and
in
or
js
mov
or
das
incl
outsb
dec
loop
lock
inc
and
push
cmp
push
insb
push
enter
mov
or
mov
fmull
xor
neg
mov
int3
pop
lcall
mov
stos
sub
xchg
xorb
mov
cmpsb
pop
daa
cmp
pop
or
dec
repnz
adc
jb
in
mov
stc
imul
inc
sub
and
ficompl
sub
daa
xor
sbb
push
xchg
fwait
icebp
outsb
pop
cltd
cmp
test
shlb
sbb
cwtl
ret
test
jmp
imull
sti
push
fcoms
or
aad
mov
xorb
dec
into
and
in
inc
and
or
dec
das
xor
repz
test
divb
sarb
sub
xor
xor
popa
or
daa
mov
lea
cmc
cmp
cwtl
stos
pop
sti
sub
idivb
dec
jo
in
mov
and
mov
cmc
inc
xlat
test
sub
push
rcll
les
arpl
out
fidivrl
cmpb
dec
mov
cmp
push
ss
and
insb
dec
xor
outsl
leave
andb
mov
popf
shll
mov
cmc
pop
sub
cs
inc
adc
fstpt
iret
mov
xchg
xchg
adc
bswap
jle
roll
lods
jo
mov
fidivrl
sti
test
arpl
out
push
mov
mov
gs
mov
pop
jle
adc
pushf
dec
int
int3
into
push
fxtract
lods
popa
or
add
arpl
pop
lcall
push
loop
adc
ja
daa
jne
add
jbe
lret
dec
jmp
adcl
insl
xor
adc
lds
cmp
mov
mov
jmp
lahf
xchg
add
pop
imul
pop
popa
dec
roll
adc
inc
aaa
es
inc
mov
in
enter
push
sbb
dec
cs
cld
mov
xchg
jbe,pn
fldt
jge
dec
lods
mov
pushf
dec
xor
xor
cmpsb
sbb
test
lahf
je
lock
stos
mov
jecxz
bound
inc
out
jbe
pop
cwtl
enter
enter
inc
les
add
mov
loope
clc
push
jl
lcall
scas
jns
sbb
xchg
inc
adc
stos
add
xor
sub
int3
test
aaa
cwtl
enter
jno
enter
xchg
jno
iret
ja
push
xchg
and
mov
fimull
stc
test
jo
inc
cltd
repz
lds
push
push
push
xchg
icebp
add
push
mov
imul
out
pop
outsl
mov
imul
add
pop
cltd
cltd
scas
sbb
mov
pop
enter
loop
mov
sub
xor
mov
notl
daa
fcmovne
push
adc
movsl
stos
sti
dec
mov
add
or
inc
gs
mov
cwtl
lea
xchg
icebp
fnsave
repz
cmpsb
arpl
subl
and
jno
push
fdivl
sub
clc
jbe
jg
jle
mov
lods
push
and
cmpsl
into
cwtl
mov
je
add
into
cmpsl
cld
pop
repnz
xchg
inc
jns
mov
cli
jge
std
mov
jbe
fucomp
cmp
insl
xor
repz
lret
in
inc
imul
stc
pop
mov
lret
or
mov
add
pop
add
pop
adc
push
pop
pushf
ret
leave
xor
or
cltd
mull
ds
and
pushf
lock
rorb
pop
pusha
pop
adcb
sbb
cmp
out
stos
out
insb
xor
dec
or
movsl
js
cwtl
sbb
into
ljmp
pusha
mov
lret
bound
nop
in
dec
sahf
cmp
gs
jle
mov
out
adc
addr16
fdiv
loopne
mov
jb
push
outsb
pop
xchg
xor
pushf
in
sbb
dec
ss
scas
dec
cmpsb
jge,pn
jmp
jnp
push
adc
mov
repz
add
xchg
push
scas
pop
and
lret
cmc
leave
xor
je
pushaw
add
jae
jno
pop
fucom
aaa
dec
negl
in
and
mov
xchg
popf
test
rorb
add
add
es
mov
jmp
fdivrp
lcall
add
add
add
aaa
fisttps
push
rclb
inc
gs
or
or
stc
sub
ret
je
adc
pusha
outsl
jae
dec
test
dec
inc
fs
pushf
xor
mov
adc
stc
mov
adc
push
adc
jmp
jmp
jmp
push
jl
in
push
sub
push
mov
in
lods
push
icebp
mov
mov
sbb
repz
mov
mov
enter
mov
gs
jno
test
jno
adc
mov
mov
lods
js
fsubrs
enter
in
and
pushf
unpcklps
xor
mov
inc
add
mov
and
insl
pop
subl
push
sarb
bound
or
xchg
call
cmpsb
push
jnp
xor
and
filds
cli
xor
into
mov
xchg
je
leave
leave
jo
lds
data16
je
inc
sbb
jbe
or
sbb
test
jne
scas
mov
push
push
inc
stos
outsb
test
shlb
cmc
jg
daa
and
arpl
pop
xchg
cwtl
lahf
pusha
movsb
das
inc
mov
xor
pop
mov
push
jg
out
sbb
sbb
mov
xchg
inc
ret
mov
pop
addb
cltd
shlb
adc
sub
dec
cmp
imul
add
pop
cli
inc
pop
subl
pop
pop
lret
rcrl
lret
add
mov
jnp
lret
adc
mov
fsub
add
xchg
sbbb
xchg
pop
sub
dec
and
imull
xchg
test
ss
jb
sti
jle
sti
inc
fcmovb
mov
ret
cmc
push
sub
or
adc
cli
xor
cmpsl
xchg
fldcw
shll
int
cmc
dec
pop
das
shrl
test
icebp
pop
push
jcxz
sub
test
fists
push
nop
mov
ja
cmpsl
xor
and
ficompl
xor
jle
unpckhps
popa
lret
enter
lahf
repnz
push
add
lods
push
inc
inc
shll
lods
mov
mov
pop
push
bound
jns
or
pop
fwait
popa
or
jbe
mov
mov
dec
es
std
mov
mov
ss
mov
xchg
dec
test
cmp
or
mov
gs
pop
pop
jno
or
fwait
cmp
inc
cmp
mov
and
mov
out
popf
lds
jno
sbb
cwtl
add
js
cmp
dec
push
les
xor
mov
xchg
inc
fsubrp
xchg
mov
dec
sbb
dec
pop
das
push
loopne
adcb
add
mov
into
lahf
sbb
outsl
pop
cmp
std
push
mov
mov
pop
cmp
xchg
dec
int3
push
fidivrl
or
repnz
sub
imul
jae
je
sti
push
xchg
mov
mov
add
stc
das
fadds
sti
push
add
mov
shrl
sbb
xor
jl
pop
xchg
sub
jmp
mov
hlt
sub
and
mov
or
push
mov
loop
jle
pop
mov
push
test
jbe
jmp
or
test
mov
sub
pop
shlb
test
mov
daa
push
cli
and
fldenv
add
jns
out
mov
jg
jb
mov
subb
jo
cli
mov
pushf
nop
mov
insb
mov
data16
sbbb
std
add
fwait
pop
iret
lret
fwait
nop
pop
movsl
lods
int3
inc
mov
shll
add
pop
out
inc
push
mov
loope
xor
movsb
lods
loope
leave
jb
mov
pop
pop
aam
sahf
adc
rcrb
add
fsubs
popa
test
cmp
sub
xor
aas
xchg
test
addl
movsb
pushf
xchg
gs
cmpsl
jle
in
in
cmpsl
or
mov
sti
sahf
insb
xchg
negb
inc
dec
add
jg
push
jno
push
and
repnz
mulb
test
or
adc
int
push
add
add
dec
pop
add
jmp
pop
int
mov
pop
pushf
insb
call
xchg
push
test
test
adc
xchg
and
sti
mov
mov
hlt
pop
movsl
lahf
mov
add
xchg
mov
icebp
mov
xchg
lea
adc
popf
xchg
pop
push
cmc
jb
adc
cmp
cli
xchg
push
pusha
movsl
lea
aad
mov
add
add
aaa
sti
addr16
out
fidivs
push
dec
aaa
lods
xchg
xor
add
add
add
mov
mov
xchg
inc
dec
xchg
dec
mov
sub
mov
adc
imul
xor
movsl
fdivrl
push
dec
push
pop
xchg
dec
dec
cmp
ja
and
dec
int
dec
jle
jle
repz
lods
orb
movsl
dec
push
mov
lcall
or
pop
fcmovnu
mov
adc
inc
adc
or
and
or
iret
in
int
sbbl
dec
arpl
pop
inc
xchg
push
stos
enter
incb
pop
aam
push
les
in
pusha
sub
test
pushf
mov
mov
and
mov
add
rcl
out
jge
mov
pop
js
inc
int3
les
gs
jmp
xchg
repz
mov
and
mov
jle
mov
stos
jo
fsubs
xchg
pop
cmp
pop
sub
push
mov
inc
dec
xchg
in
in
loope
dec
cmpsb
mov
jmp
js
or
or
pop
leave
mov
rorb
fwait
addr16
mov
xchg
ficomps
cmp
test
and
push
mov
das
insb
loopne
test
in
pop
dec
or
jbe
lods
les
add
mov
mov
aad
xchg
add
sarb
pop
scas
mov
arpl
push
mov
mov
pop
xchg
dec
sbb
out
mov
mov
in
pop
lods
jle
outsb
mov
pop
js
test
repnz
in
fldl
fstpl
or
and
pop
dec
les
push
ret
mov
fbld
jge
in
pop
je
sub
jno
leave
pop
mov
addr16
mov
ret
test
adc
sbb
test
sub
outsl
loope
dec
mov
aas
cmp
and
mov
xchg
adc
and
icebp
and
movsl
sbb
and
je
xchg
xchg
mov
lods
pusha
ret
sbb
fs
out
push
mov
data16
out
fmul
fiaddl
cmp
jb
nop
or
add
loopne
inc
push
inc
lret
cli
mov
jno
jns
imul
add
pop
repnz
rolb
mov
je
pushf
leave
jl
std
daa
add
jo
sub
gs
cwtl
push
dec
or
adc
inc
sbbl
jb
jb
ret
stos
inc
mov
pop
jnp
dec
adc
xchg
in
mov
insl
fmul
inc
xlat
imul
ret
aam
jmp
and
aam
jne
stos
push
inc
icebp
icebp
in
sub
test
pop
or
xchg
lods
js
stos
es
add
dec
ljmp
add
cmp
scas
lods
sbb
lahf
mov
sub
adc
test
adc
jge
xor
xor
dec
repz
mov
shll
into
stc
pop
adc
dec
jo
mov
mov
xchg
fisubs
data16
hlt
push
xchg
mov
outsb
fildll
inc
jmp
mov
in
dec
jns
sub
mov
mov
idivl
push
cmp
xchg
mov
pop
push
nop
shrl
dec
mov
ds
pop
lahf
add
adcl
aas
mov
iret
sti
into
shll
push
clc
imul
into
out
pop
aaa
out
je
dec
jge
mov
test
sbb
gs
inc
ret
mov
enter
rorb
mov
data16
xor
mov
mov
add
adc
cbtw
pop
jle
icebp
cmp
mov
add
xchg
jb
xchg
stos
pusha
bound
cmpsl
fildl
adc
notl
jb
es
sahf
pop
rolb
aam
pop
inc
jmp
data16
cmc
dec
test
xor
mov
xor
sub
xor
add
lret
test
cmp
inc
mov
repnz
cmp
add
sub
imul
add
pushf
imul
add
mov
notl
divb
mulb
addr16
sti
pop
pop
sbb
adc
imulb
xchg
inc
adc
mov
ss
jnp
sbb
pop
fcoms
cmpb
dec
out
stc
into
lea
sub
dec
pop
push
std
repz
call
cmc
shrb
cmc
bswap
cli
imul
and
out
sbb
repz
mov
add
hlt
add
add
data16
insb
inc
jo
mov
mov
add
into
lahf
mov
xor
push
pop
cmc
fnstcw
js
mov
inc
push
dec
clc
xlat
jmp
psraw
movd
std
or
dec
js
inc
dec
ss
sbb
add
dec
push
or
popa
mov
mov
xor
adc
daa
adc
dec
call
lret
or
push
std
cmp
jl
and
lea
fucomp
pop
sbb
outsl
mov
sub
add
out
mov
pop
xor
pop
push
push
mov
scas
imul
adc
lret
addb
cmc
daa
stc
enter
test
xor
or
push
shrl
cmp
cmp
fmulp
mov
js
lcall
jns
inc
mov
xchg
push
js
push
outsl
xorl
xor
loop
js
negl
push
mov
arpl
mov
std
pop
cltd
xchg
jb
jge
xor
pop
repnz
pop
enter
lods
test
popf
lds
xor
or
lret
ds
push
shrl
imul
xor
scas
pop
aad
fidivrl
xchg
mov
sarl
inc
sbb
mov
dec
pop
pop
daa
mov
loopne
jbe
and
jmp
sbb
xor
das
test
jne
sbb
sbb
shl
xor
fmul
insb
jnp
je
sbb
hlt
divb
mov
pop
repnz
adc
or
cltd
pop
jmp
dec
int3
pop
push
clc
jg
mov
push
pop
adc
and
gs
and
xchg
icebp
leave
cli
push
int
bnd
loopne
cmp
push
jmp
arpl
and
mov
cmc
xor
fwait
push
mov
pop
imulb
int3
lcall
add
push
add
adc
mov
outsl
imul
cmp
hlt
add
mov
add
dec
mov
mov
andb
scas
ret
imul
push
hlt
movb
in
lret
xchg
dec
cmp
mov
inc
pusha
cli
xor
jns
sub
shlb
mov
cmp
mov
push
and
pop
sti
fld
lea
ss
xchg
lods
stos
ret
mov
pusha
rorb
fcmovnb
adc
mov
mov
adc
mov
js
test
out
or
xor
dec
stos
xor
push
jmp
fcomps
adc
pop
mov
nop
mov
mov
pusha
ret
mov
in
dec
cmp
mov
addr16
or
cmc
jno
aad
cmc
aad
lahf
sub
xchg
ret
push
sub
mov
fcomps
mov
shlb
or
aaa
lea
mov
jae
hlt
push
sbb
jo
inc
je
imul
movsl
xchg
inc
inc
jae
and
pop
loop
sub
icebp
int
ficompl
cli
xchg
call
sub
call
imul
jg
add
sbb
cmp
or
ficomps
dec
dec
dec
in
bound
sbb
pop
pusha
inc
bound
xor
dec
push
ror
jmp
aaa
sti
adc
out
sbbl
lret
xlat
or
pop
jno
gs
mov
mov
icebp
lea
mov
mov
mov
rcrb
add
pop
dec
xchg
xchg
jge
rcrb
ret
aam
movsl
or
sub
pop
rcrb
fwait
ret
pushf
pop
insl
sbb
lock
push
jae
inc
pop
push
loope
sbb
addb
movsl
pop
or
roll
push
mov
js
pop
into
dec
inc
dec
jae
add
xchg
cmc
mov
push
int3
adc
mov
pop
test
out
daa
shll
pusha
mov
rcrb
out
inc
push
jg
inc
sub
and
mov
xor
js
push
rclb
mov
daa
enter
sahf
push
cmp
ljmp
rclb
shrb
jge
call
adc
inc
push
jbe
cmp
add
lods
xlat
sub
imul
scas
enter
lods
mov
jae
cld
mov
inc
jne
xchg
aas
dec
pop
testl
push
push
addb
cmc
jno
int
or
pop
cmp
roll
add
add
mov
movb
jge
add
hlt
add
add
jmp
aad
or
repnz
js
add
mov
xchg
xchg
mov
fsubrs
cmpsb
sbb
cs
stos
or
rcll
inc
dec
mov
mov
cwtl
xchg
cwtl
mov
out
jle
es
cmp
adc
sbb
lods
ficoms
ljmp
loopne
push
cli
jnp
inc
test
add
add
fs
cli
sbb
mov
sub
and
dec
push
aaa
sbb
dec
inc
add
pop
je
and
mov
push
xor
popa
cmpsl
out
out
out
push
stos
sbbb
mov
dec
xor
pop
adc
jne
cvtpi2ps
stos
and
xchg
jl
push
out
outsb
adc
out
cmc
call
add
cmp
mov
iret
cwtl
out
xor
pushf
ljmp
movsb
js
sbb
mov
pop
sahf
and
ret
xchg
lds
pusha
stc
loopne
cmpsl
sahf
out
cmp
fstl
jecxz
mov
imull
mov
or
or
sbb
shrl
leave
pop
or
inc
je
fbstp
cmpsl
add
test
pop
iret
roll
js
inc
daa
and
aam
imulb
mov
repz
loop
stos
push
pop
mov
dec
or
loop
cmp
sbb
pop
push
sahf
jp
les
sub
pop
mov
or
not
dec
dec
int
es
mov
mov
les
insb
or
pop
pop
push
ret
pop
repz
lods
pop
jecxz
sbb
std
pop
fs
arpl
xchg
push
push
inc
inc
sbb
bound
jae
jb
xchg
mov
and
cmp
mov
call
inc
mov
arpl
sub
and
rorb
cmp
jp
imul
push
rorb
cmp
pusha
xchg
jmp
push
pop
jecxz
nop
movsl
roll
mov
les
mov
imul
stos
xor
pop
jle
scas
and
sub
fs
fildl
mov
gs
jno
nop
stc
inc
push
lret
push
push
cltd
in
les
push
push
fwait
and
idiv
test
or
mov
pusha
fcoms
sbb
in
xchg
jge
jne
dec
nop
jbe
dec
insl
adc
aad
push
ds
cmpsl
stos
and
mov
pop
movlps
mov
push
sahf
xlat
xchg
inc
jl
mov
icebp
les
pop
mov
outsb
pop
cltd
add
jmp
sub
jb
inc
insl
shrl
pop
dec
pop
pop
hlt
mov
les
pop
dec
jecxz
ja
aas
shll
push
mov
inc
xor
pusha
out
mov
stc
add
cmp
cmovle
sub
cmpsb
push
insb
fcmove
push
sti
lahf
or
mov
lcall
imul
inc
outsl
sbb
mov
pop
push
push
jno
mov
lret
jno
and
sbb
jb
add
xor
mov
test
adc
adcl
sub
jl
xor
mov
ljmp
ja
in
lods
iret
sbb
mov
jp
jl
scas
pop
iret
lods
dec
cmp
push
mov
lea
cmp
mov
sub
clc
xor
xchg
xor
add
mov
sbb
addl
or
fsubrl
jmp
jl
add
cmc
stos
movsl
push
push
into
ds
mov
aam
mov
cmp
into
mov
test
mov
xor
jno
sub
fists
cwtl
sbb
icebp
movsb
sbb
mov
pop
icebp
mov
or
ja
outsb
add
invd
stc
sahf
add
adc
jnp
xchg
sahf
or
aam
sub
call
pushl
push
and
mov
jge
and
mov
out
pop
test
aad
push
mov
out
inc
push
xor
pusha
sub
daa
lods
scas
mov
rol
cmp
stos
clc
add
ljmp
sti
sbb
aad
sbb
xlat
cmpsl
sbb
rcrl
push
mov
nop
mov
cmc
shll
imul
mov
mov
xchg
jbe
xchg
test
jae
or
daa
push
repz
cmp
push
aam
xor
popf
jae
in
mov
jle
mov
loop
out
xor
gs
add
add
add
adc
dec
negl
mov
cmpsl
cld
call
hlt
add
add
pop
jp
pushf
jp
lods
or
imul
xchg
out
fchs
cmp
cmp
xchg
ds
pop
rclb
mov
mov
mov
int
inc
dec
xchg
js
dec
dec
idiv
insb
xchg
sub
jae
and
pop
fs
push
xor
adc
push
dec
inc
xlat
push
cmp
lea
add
lret
push
adc
xor
nop
loop
ret
add
mov
add
rclb
cmpsb
sbb
sub
mov
cmp
int
pop
rcrl
aad
shrb
mov
insl
xchg
test
ja
and
mov
xchg
xor
mov
inc
gs
jmp
ds
mov
fldt
add
call
cld
adc
sbbb
stc
xchg
cmpsl
xor
repz
jns
aas
mov
lcall
testl
or
xor
in
imul
cmpl
subb
mov
push
xor
xchg
jl
xorb
imul
push
clc
or
dec
ret
adc
loop
imul
scas
mov
adc
shrb
jo
sub
movsl
mov
inc
outsl
xchg
pop
cli
xchg
roll
lcallw
daa
pop
fcmovnb
mov
in
or
into
fldl
lods
pop
pusha
lahf
inc
xchg
gs
ret
pop
jbe
and
cmp
cmp
xor
mov
jb
sbb
es
cmpsb
mov
mov
sbb
mov
adc
es
das
push
jp
xor
jns
in
stos
stos
int3
inc
mov
inc
dec
pop
pop
sbb
pop
into
jo
jb
mov
mov
stc
mov
and
adc
lcall
xor
mov
cli
outsl
mov
inc
cwtl
mov
aaa
adc
stc
and
cmpb
or
mov
pop
push
inc
jno
sub
inc
or
push
lods
jp
xor
inc
pop
cwtl
insl
add
nop
repnz
sbb
mov
test
lods
jo
dec
lea
fxch
mov
mov
adc
inc
insl
lods
sub
scas
and
aas
xchg
inc
xchg
pop
lods
or
pusha
imul
mov
xchg
jge
loope
jbe
mov
popa
jp
adc
mull
roll
cmp
xchg
push
adc
ljmp
mov
ds
add
clc
aas
xor
pop
mov
xchg
repz
insl
and
mov
test
dec
lea
mulb
ljmp
loopne
mov
mov
and
aaa
leave
ss
sub
outsb
mov
test
mov
inc
mov
cmc
pop
adc
jge
rolb
push
fxam
and
pop
ret
fsub
push
pop
mov
push
neg
cld
icebp
dec
or
fxch
inc
add
fcmovnb
test
iret
push
stos
pop
gs
stc
popa
arpl
fwait
inc
cltd
movsl
aaa
push
mov
or
push
inc
xlat
call
pushf
inc
inc
xchg
mov
hlt
fstl
and
cmp
addl
pop
call
cmc
dec
or
sti
fldcw
ret
push
or
cld
shll
jmp
repz
cmp
mov
jo
stc
lods
daa
jg
pop
push
mov
mov
adc
cs
addr16
popa
sub
jmp
sub
inc
mov
and
sbb
pusha
xor
cmc
data16
loopne
dec
out
pop
insl
push
sub
mov
mov
push
je
xor
neg
fistps
adc
iret
es
push
ds
push
xorb
out
cmp
mov
in
loope
movsl
idivb
inc
xor
cld
adc
scas
fcoml
push
cmp
mov
jns
xor
fidivrl
xor
cs
mov
pop
dec
add
ja
dec
dec
test
inc
ret
mov
mov
pop
sub
in
es
inc
xchg
jb
xor
cmc
mov
ss
mov
mov
xchg
xor
adc
clc
xor
out
cmp
jecxz
cmp
js
imul
fstps
mov
xor
mov
pop
out
bound
imul
loope
jne
pop
ss
jecxz
and
push
int3
insb
cmpsl
dec
add
pop
aas
jmp
add
pop
add
add
in
mov
fdivp
cld
ds
daa
cmp
cmp
gs
add
hlt
add
add
insb
xchg
cmpsb
mov
rcrb
jnp
sub
leave
cmp
addl
das
lea
repz
push
jbe
mov
movl
jg
lret
jp
es
outsb
sub
call
mov
pusha
mov
cmc
xlat
jp
xor
add
inc
je
xchg
addr16
addr16
jle
mov
out
push
repz
adc
lret
fld
mov
jo
lahf
test
mov
fmull
ja
enter
nop
xor
movsb
adc
or
popf
fsts
push
mov
push
bound
or
adc
or
dec
pop
pop
sub
mov
sahf
jns
mov
and
xor
xor
xchg
pusha
xchg
test
jae
sbb
leave
out
mov
int3
push
js
cs
mov
lret
push
lods
int3
adc
movl
push
sub
int3
in
stos
fsubrl
loopne
xchg
add
add
jb
repnz
jae
mov
xor
dec
or
je
cmpsl
and
imul
push
adc
int
and
test
xor
stos
adc
jno
jae
or
sbb
mov
cmpsl
popf
popa
jb
neg
insb
jbe
test
mov
ljmp
dec
mov
sarb
mov
and
jmp
mov
std
sbb
mov
out
cmp
pop
mov
inc
sbb
call
data16
inc
testb
insb
pop
or
mov
cld
mov
add
push
in
mov
arpl
xor
xor
pusha
mov
loop
daa
push
lea
push
mov
push
mov
fstl
mov
xchg
and
xchg
jle
aam
jmp
sub
cmp
adc
pop
pop
clc
jg
fstl
add
dec
pop
pop
mov
in
xchg
outsl
pop
std
mov
mov
add
or
das
out
outsb
cmp
mov
nop
push
shlb
jbe
sbb
shlb
loope
pop
cs
cli
sub
stos
xor
add
sbb
xorl
out
movsl
es
xchg
dec
sub
dec
xor
sub
xchg
lahf
or
cs
pushf
xor
ret
scas
jo
idivb
jg
cmp
adc
add
xchg
lahf
push
dec
icebp
cltd
out
mov
jmp
aas
call
add
movsl
xlat
or
adc
jae
sub
xchg
and
jp
popl
leave
cli
pop
lock
das
icebp
xchg
or
popa
mov
insb
add
push
push
mov
loopne
mov
cwtl
sbb
pop
xor
clc
and
cld
cmp
dec
fs
xchg
xchg
xchg
ljmp
in
jp
inc
ret
mov
mov
mov
mov
sub
loopne
pop
push
cmpsl
movsl
push
insl
jno
jns
pop
ret
je
out
test
jle
sub
lods
stc
pop
mov
mov
daa
enter
fistpl
mov
cld
dec
lods
shrl
aad
jmp
call
pop
in
and
add
push
xchg
push
mov
mov
adc
arpl
push
xor
dec
cmp
subl
ljmp
fstp
push
loope
add
fldpi
mov
push
jmp
jno
lds
iret
cltd
sbb
stc
test
cmp
add
push
sub
inc
push
dec
inc
je
in
sbb
pop
movsb
xlat
pushf
cmp
add
lahf
jmp
pushf
out
add
lret
and
mov
add
jp
fistpl
xchg
mov
int3
mov
js
es
push
testl
jb
shlb
sbb
sub
push
jb
aad
fwait
sub
xchg
inc
roll
xchg
out
dec
inc
movsl
adc
insb
daa
icebp
or
pop
pop
loopne
aas
jns
push
sbb
xchg
inc
xchg
mov
outsb
and
pop
cltd
jne
stos
int3
loope
jp
movswl
loopne
mov
orb
std
imul
flds
lods
and
fcomps
inc
xor
mov
clc
mov
xchg
dec
insb
inc
cmp
cmpb
mov
div
add
xchg
flds
add
mov
xchg
outsb
dec
imulb
iret
out
jge
out
inc
mov
test
sub
jnp
mov
ret
cmc
or
add
add
xor
jg
sbbl
pop
dec
add
hlt
add
add
ficomps
add
inc
cltd
mov
test
sub
sbb
in
adc
test
cmp
ret
and
jl
dec
das
adc
jmp
imul
fldl
mov
cmpsb
mov
mov
dec
add
xchg
cmp
pop
in
xchg
loope
mov
adc
out
add
repnz
adc
push
adc
je
adc
or
cmp
dec
jne
xlat
adc
je
fstpt
adc
jno
pop
inc
arpl
pop
sarl
pop
jp
adc
add
cli
imul
mov
adc
das
repnz
sbb
cmp
jne
and
loope
jae
xor
mov
cmp
mov
mov
addr16
pushf
xchg
lods
jae
pop
dec
fdivs
lcall
loop
enter
xchg
imul
cmpsl
je
imull
rcl
lahf
pop
jae
xor
mov
cs
aam
or
iret
push
mov
mov
aaa
sub
jbe
out
inc
fsubs
add
out
mov
das
fucomip
je
and
cmovb
in
nop
arpl
ja
push
out
inc
nop
in
sbb
aam
pop
mov
out
fstpt
mov
ljmp
popf
out
jb
dec
jb
push
xchg
mov
inc
sbb
jb
sub
or
push
enter
pop
and
cmp
out
dec
jecxz
cli
pop
mov
scas
fwait
pop
loop
fadds
addr16
pop
inc
ja
adc
sbb
lods
cs
fcompl
data16
rcrl
in
js
insb
jnp
repnz
lahf
xor
mov
add
or
xor
arpl
shll
jbe
inc
cs
xor
aaa
adcb
leave
dec
insb
iret
dec
pop
sbb
aam
cmp
dec
lods
sub
push
aad
pusha
test
sub
fists
int
ficomps
aaa
push
push
pop
cmp
stos
jmp
loope
faddl
push
sbb
xlat
jne
inc
xchg
sub
lds
and
inc
pop
sub
mov
pop
mov
mov
rorb
adc
movsb
add
mov
rcll
daa
or
add
cmpsb
jp
mov
push
cmpsl
mov
cmp
outsl
jae
or
mov
ret
inc
pop
inc
popa
in
jl
and
or
xchg
mov
mov
xchg
inc
clc
add
pop
push
cmpsl
sub
mov
dec
jmp
cmpsl
or
adc
dec
sbb
subl
loopne
rorb
shr
or
cmp
ds
and
sbb
imul
mov
add
sub
xchg
inc
mov
cmp
mov
push
sahf
out
sub
jo
out
lock
xor
push
movsb
shlb
stc
push
inc
xor
pushf
out
repz
xchg
inc
or
xchg
pop
dec
cmp
lea
adc
pop
cwtl
aam
dec
andb
xchg
mov
sbb
inc
or
cmc
sub
pop
ljmp
adc
data16
imul
cmc
ds
sbb
dec
jle
jg
sbb
mov
stos
push
add
mov
lea
popa
and
xchg
inc
adc
add
add
enter
pop
sbb
loopne
and
mov
and
add
fildl
mov
adc
sub
mov
mov
mov
pop
fs
test
or
sub
ljmp
cmp
add
pop
mov
scas
and
xchg
lret
adc
repz
outsb
xchg
mov
mov
outsb
repnz
mov
inc
test
add
push
pop
shlb
push
dec
jl
test
lret
mov
shll
lret
lea
pop
mov
pop
add
ffree
fsubrl
jg
add
insl
or
aas
imul
sahf
push
push
cli
fidivrs
mov
and
mov
mov
and
es
push
dec
imul
pop
push
sar
cltd
aaa
es
divb
stos
jnp
popf
jge
popa
cmc
and
jle
shrl
mov
scas
in
pop
pop
cli
ficomps
mov
sub
call
jno
xlat
insl
dec
fwait
jg
push
into
and
aaa
nop
sbb
add
add
add
loop
add
mov
pop
and
hlt
add
add
aam
jae
jns
cs
add
shlb
lea
xchg
test
loopne
outsl
test
inc
repnz
mov
dec
arpl
cmp
dec
mov
shl
and
xchg
test
jge
mov
mov
mov
xor
les
xor
add
pop
mov
pop
fidivl
gs
mov
mov
sbbl
pushf
mov
and
test
mov
inc
adc
adc
mov
out
cmp
cmp
ret
sub
clc
daa
in
or
mov
push
jno
fldl
sbb
das
icebp
mov
push
add
sbb
in
cmpsb
sub
mov
cltd
std
out
and
mov
fs
jbe
cmp
add
adc
jno
dec
fistpll
imul
mov
pop
adc
js
mov
rorl
adc
xchg
aam
jnp
sub
adc
and
sahf
test
cmp
ret
insl
push
outsl
jb
repnz
repz
cmp
mulb
leave
sahf
in
fiaddl
push
pop
jmp
leave
jmp
xchg
testw
cli
out
add
adc
push
adc
sub
clc
jg
add
repnz
dec
mov
or
xchg
mov
mov
xchg
xorl
movsl
mov
inc
or
inc
jmp
into
les
xor
dec
stos
flds
ja
cli
xor
test
cwtl
stos
push
mov
mov
mov
lea
nop
pushf
pop
fiaddl
loopne
push
stc
decl
and
int
mov
addr16
push
fcompl
xchg
test
pushf
xchg
cmp
lcall
out
push
mov
xor
je,pn
int3
mov
mov
arpl
sbb
and
dec
sti
shrb
mov
ret
dec
add
rclb
sub
pop
test
lret
std
stos
or
test
rclb
or
dec
sbb
jg
fistl
xchg
mov
outsb
in
adc
movsl
decl
hlt
icebp
xor
mov
dec
fidivs
leave
jg
aad
fmulp
push
add
xchg
mov
sub
lret
loope,pt
test
fs
ss
pop
inc
cld
mov
adc
stos
jg
popa
jo
cmc
shll
adc
std
sbb
jno
xlat
mov
prefetchw
or
cld
lret
bound
adc
imul
xor
dec
pop
movsb
lahf
push
popf
mov
das
sbb
adc
cmovo
aas
mov
enter
push
imul
pop
test
mov
outsl
inc
test
add
push
push
adc
rcl
dec
xchg
ret
mov
inc
loopne
and
xor
fisttps
sub
insb
cmp
sub
das
xorl
test
cwtl
xor
xchg
pop
pop
and
fdivr
cmp
lds
mov
push
mov
jb
lret
test
adc
decb
add
bnd
push
js
mov
outsl
inc
leave
jg
inc
cmp
jae
sarl
stc
jmp
out
scas
and
push
xchg
mov
lock
jnp
movsl
inc
incl
out
outsl
and
pushf
mov
sbb
and
ficoml
shll
mov
jns
push
cmp
xor
es
ds
mov
mov
pop
mov
leave
jle
mov
ja
jnp
adc
lcall
les
push
lods
dec
jbe
inc
out
test
test
sbb
push
inc
push
loope
mov
dec
lock
ja
lock
dec
and
loop
cmp
psubusb
call
out
xor
out
adc
ss
mov
fsubrs
dec
adcb
jmp
push
jb
es
int
stos
xor
jb
mov
jae
in
mov
pop
cmpsl
dec
jo
stc
add
test
sub
popa
mov
incb
adc
pop
sub
mov
push
jp
cmp
sub
addl
fistpll
jmp
sub
pop
and
and
aad
mov
dec
pusha
mov
pushf
cmp
inc
jno
and
add
add
loope
loope
fistpll
adcl
cld
leave
jmp
inc
push
add
hlt
add
add
xor
inc
arpl
xlat
imul
aas
int3
push
cwtl
outsb
fdivp
jecxz
jmp
mov
lods
pop
sbb
push
aas
push
sub
add
aas
or
fstpl
sub
idivw
aas
push
sub
sbb
out
pop
or
into
test
sub
lahf
jp
fwait
jns
mov
jne
inc
hlt
sti
cmp
mov
sbb
mov
jge
cmp
cmp
ja
mov
mov
xor
insl
dec
jl
mov
pushf
cmc
or
arpl
adc
sahf
pop
iret
and
inc
mov
add
and
mov
sbb
and
jp
rcr
inc
sub
rclb
add
out
lds
add
jne
dec
aam
adc
mov
std
mov
arpl
jle
inc
sti
mov
or
cmpsl
mov
xchg
in
jne
aas
jns
scas
fwait
inc
lods
mov
lea
cmp
sub
xchg
push
add
xor
paddsw
dec
cld
or
sbb
mov
rcrl
test
sbb
pop
test
xchg
pop
lcall
add
dec
sbb
dec
daa
pop
inc
add
sub
and
inc
sub
adc
iret
mov
jle
pop
movsl
enter
cmp
scas
push
sub
xor
mov
mov
sub
aaa
dec
das
adc
mov
outsb
test
cmp
sbb
shll
adc
jno
adc
pop
lret
pop
and
xor
jne
int3
mov
mov
nop
mov
jmp
in
jp
cltd
aaa
stos
adc
add
gs
add
jne
adc
cmpsl
push
in
push
push
mov
mov
lea
insb
gs
js
repz
mov
movsl
imul
jbe
mov
stos
cmpsl
push
nop
cmc
in
imul
fnop
pop
inc
addr16
push
js
jnp
scas
cmp
enter
out
dec
adc
cmp
cs
mov
call
aas
pop
mov
test
bswap
cld
ret
rol
test
cltd
shl
aad
loopne
in
xchg
and
testb
psubd
pushf
fdivp
mov
xor
or
xor
sbb
int3
insb
ret
push
imull
adc
xor
loopne
adc
or
mov
sub
and
jnp
mov
sbb
mov
fsubl
sub
add
xor
leave
addr16
xor
sahf
fldl
push
mov
inc
shr
add
xchg
push
test
mov
push
repnz
jl
repz
or
xchg
mov
dec
dec
in
mov
dec
inc
rorb
test
inc
cli
and
jg
lods
xor
mov
int3
or
xchg
xchg
pop
xchg
sbbl
je
xchg
rol
mov
arpl
hlt
adc
sahf
insb
in
or
jnp
pop
sub
mov
pop
push
pop
rcrl
filds
adc
jno
lock
aas
pop
xchg
pop
push
jnp
stos
adc
jns
in
and
and
inc
push
pop
adc
lcall
shll
out
mov
or
xor
cmpsb
pop
or
xor
jge
jge
scas
fdivl
in
nop
adc
mov
adc
in
pusha
pushf
lods
push
cmp
test
aad
icebp
adc
dec
repz
das
dec
test
stc
sub
mov
sbb
mov
lret
lea
cmp
adc
addr16
sub
xchg
mov
mov
mov
ds
hlt
mov
xchg
arpl
jmp
iret
pop
shlb
sbb
sub
push
out
test
mov
mov
and
pop
jp
pop
into
movsb
out
push
sub
loopne
fs
inc
frstor
popa
loopne
adc
jae
add
mov
mov
sub
inc
iret
popa
iret
sbb
jno
pop
adc
adc
mov
test
or
jb,pn
adc
in
int3
scas
dec
or
fucom
mov
rcrb
push
hlt
jg
mov
adc
cs
lds
xchg
test
pushf
pop
insl
mov
add
cmc
xchg
sub
insl
data16
push
outsb
movlps
and
push
nop
jmp
loope
xchg
out
notl
hlt
dec
ror
pop
add
hlt
add
add
ret
sub
adc
js
loopne
pop
jbe
inc
and
in
ret
sarl
jno
cwtl
lret
dec
rcrb
xchg
or
push
and
sbb
pop
movsl
jae
fsubrl
ds
out
cmp
mov
jge
fidivrl
jl,pn
or
pop
in
add
mov
adc
dec
int3
mov
inc
ret
dec
and
into
lds
lretw
lahf
shll
push
push
pop
jp
adc
pop
in
add
divl
mov
adc
mov
and
sti
ret
imul
loop
hlt
xor
push
dec
cmc
push
addb
repz
movsb
in
dec
ret
mov
lea
in
xchg
sub
jo
xor
lea
sub
push
and
cmp
xchg
hlt
fldl2e
inc
ss
cmp
xorl
mov
movsl
shll
adc
mov
in
sbbb
cmpsb
shrl
cmp
data16
add
mov
into
mov
cmc
jae
xor
stos
xchg
inc
mov
mov
dec
cmp
sbbl
or
and
shlb
icebp
ja
xchg
out
adc
and
imul
xlat
mov
jbe
mov
mov
mov
xor
ljmp
out
aad
bound
into
xor
rcrb
in
or
push
mov
repz
in
jmp
out
insl
and
idivb
dec
xor
fidivl
popf
test
jl
pop
dec
imul
mov
pusha
push
or
aam
ror
rol
jns
movsl
adc
lcall
rcrl
out
cmp
xchg
mov
dec
push
dec
xlat
js
sbb
mov
cmp
lea
in
and
call
mov
stos
cmpsb
imul
jp
lahf
mov
cmp
xlat
and
js
add
fwait
cmp
cltd
mov
push
dec
scas
bound
cmp
push
stos
mov
ret
loop
jmp
sbb
xchg
pop
sahf
push
imull
xchg
iret
and
add
cmp
pop
mov
jmp
daa
pushf
daa
lock
test
sub
rcrl
pop
adc
rcll
fcmovb
mov
mulb
push
xchg
je
xchg
xchg
mov
jns
xor
stos
pop
inc
xor
cmp
dec
sub
push
out
push
addr16
test
jge
dec
dec
test
push
add
dec
pop
pushf
or
dec
ljmp
scas
adc
xor
pop
cmpsl
fsubrp
xchg
or
cmpsb
fisttps
push
fildll
mov
aas
push
shll
lret
xchg
call
jg
jle
add
inc
adc
cmp
add
gs
test
aaa
imul
dec
aam
mov
add
cmc
sahf
aad
inc
pop
jg
cmp
xor
xlat
sbb
sub
add
call
sti
push
jnp
push
pop
cmp
jo
cmpsb
aas
sahf
lahf
sub
pushf
cld
jne
jg
xchg
mov
push
nop
or
aad
mov
xor
mov
cwtl
and
dec
cltd
jp
popf
stos
mov
cmp
cmp
mov
test
inc
in
pop
add
lret
xchg
jno
mov
icebp
pop
jmp
and
mov
jg
or
popa
add
aaa
pop
out
stos
or
out
sbb
js
jne
movsl
adc
or
enter
mov
add
mov
in
mov
xchg
jns
or
mov
mov
and
mov
movsb
cmpsb
data16
in
and
je
and
xor
popf
cmpsl
jmp
mov
movsb
int
les
cltd
and
dec
outsl
test
idivl
xchg
fstpt
fildl
fildl
sahf
int
imul
pop
or
push
test
xor
sub
push
cmp
sahf
push
pop
mov
xor
and
leave
cmp
std
mov
pop
jne
in
out
mov
xor
mov
cmp
push
leave
stc
pusha
jg
or
stc
xor
lds
sbb
sti
push
inc
mov
mov
mov
xchg
xchg
jp
sbb
leave
mov
daa
push
lods
mov
das
pop
andl
int3
and
xor
and
in
mov
ss
push
pop
dec
es
fdivrs
dec
adc
and
mov
repnz
inc
test
cmp
xor
sti
ds
dec
test
mov
lock
add
add
cmp
loope
mov
leave
xor
pop
add
hlt
add
add
fildl
jp
xorl
insl
lahf
call
pop
add
lret
fneni(8087
adc
outsb
iret
sarb
ret
insb
scas
mov
cli
lods
fnstenv
out
and
add
int
push
pop
pop
mov
ss
mov
std
xchg
dec
stos
loope
push
push
popf
mov
push
xor
cmp
lods
repz
jnp
mull
popa
mov
cmp
jae
and
mov
mov
sbbl
dec
test
das
mov
cmp
out
ljmp
jo
pop
push
lea
test
jne
pop
iret
frstor
mov
push
loopne
mov
and
mov
dec
cmpsb
push
stos
inc
clc
inc
pusha
and
xor
dec
push
mov
xchg
insl
and
lock
pop
mov
and
frstor
add
sub
enter
xchg
xchg
jecxz
push
ds
aam
or
scas
cmc
mov
or
inc
push
push
inc
and
repnz
sub
sbb
jecxz
aas
or
fnstsw
pop
lea
mov
sbb
cmp
cld
inc
loope
gs
mov
jle
dec
test
icebp
jp
cmpsl
out
xor
xchg
fnstsw
mov
cld
dec
ja
or
dec
int3
xor
shl
jmp
aam
ljmp
lods
inc
push
add
xlat
outsl
std
stos
inc
or
push
mov
and
or
mov
mov
and
inc
stc
pop
dec
in
xchg
in
push
stos
jno
add
inc
cmp
fdivrl
mov
leave
add
int3
pop
loop
movsb
mov
mov
je
adc
jecxz
mov
test
sbb
jns
push
sub
adc
pushf
scas
out
dec
mov
pop
or
push
shl
mov
pop
leave
fdivs
inc
lahf
cmp
test
int3
fmuls
cmpsb
adc
incl
in
mov
sbb
mov
dec
shll
or
lcall
adc
mov
lahf
pusha
jmp
inc
mov
pop
leave
imul
mov
loopne
in
in
imul
data16
lds
push
test
loop
int3
aas
and
xor
ret
sti
or
add
lods
test
test
xchg
inc
sbb
aam
add
scas
stos
js
scas
shll
inc
fwait
ret
xorb
mov
std
jge
jg
outsb
sbb
mov
idivl
cli
outsb
in
mov
mov
add
push
push
stos
mov
popa
mov
jo
out
mov
mov
lock
loop
call
dec
outsb
mov
es
jo
inc
mov
cmp
lcall
scas
in
push
dec
and
insl
adc
sahf
data16
push
and
adc
mov
mov
mov
mov
push
and
sti
adc
je
les
ja
xchg
data16
sti
push
push
xchg
std
mov
aam
pop
rclb
mov
test
inc
cmp
mov
push
imul
enter
das
dec
inc
popl
lret
mov
dec
pop
cmc
sbb
out
cltd
inc
das
rcl
mov
push
or
lret
jb
jnp
aas
adc
stos
shrl
and
dec
or
leave
dec
mov
jae
fbstp
int3
sbb
xor
and
jecxz
cmp
imul
hlt
xchg
push
push
adc
inc
lahf
inc
add
idivl
adc
adc
mov
insl
call
mov
mov
out
std
jnp
lcall
pop
add
addr16
push
inc
mov
sbb
xchg
ds
pusha
cwtl
orb
idivb
test
out
or
sbb
stc
hlt
icebp
inc
in
sti
adc
jo
addb
jae
imul
insb
les
call
sbb
loopne
jecxz
jg
loopne,pt
inc
mov
xchg
es
xlat
cli
clc
call
popa
addr16
je
ss
insb
sbb
imul
test
jno
mov
fnstenv
inc
sbb
jp
mov
add
cld
mov
pop
cmp
jl
lretw
and
and
stos
leavew
push
ds
lret
mov
lcall
jbe
cmp
push
lock
test
xchg
aaa
pop
jae
inc
ja
lahf
jecxz
xor
into
mov
mov
mov
mov
add
add
jg
mov
jp
ret
jge
or
sbb
add
add
int
iret
imul
pop
add
fidivs
xchg
aad
in
pop
jp
repnz
add
cmp
mov
std
stos
mov
inc
cmp
mov
andl
add
xor
mov
push
jl
dec
sbb
pop
push
out
push
sarb
repnz
push
nop
and
mov
push
sbb
lds
mov
hlt
orl
dec
cwtl
enter
and
push
mov
pop
adc
ret
loop
rolb
jno
fwait
leave
lock
fidivrl
sbb
pop
cltd
adc
mov
mov
mov
lcall
pop
push
sbb
jmp
cmp
popf
pmulhw
fwait
xchg
jb
das
out
mov
out
xor
or
mov
sbb
mov
repnz
inc
sbb
hlt
fwait
into
and
and
xchg
dec
scas
jo
add
mov
mov
sbb
mov
sbb
push
test
dec
and
and
xchg
mov
jno
xchg
fisttpll
lds
jne
jl
mov
mov
jno
push
lock
leave
add
cmp
loop
sarl
clc
or
cld
push
stos
adcb
push
hlt
fstpt
out
jmp
sub
fs
fisubrl
jne
hlt
outsb
ret
cwtl
mov
jnp
cs
mov
sub
nop
dec
jno
lcall
jno
cmc
and
mov
inc
jb
jnp
cltd
call
sub
push
add
imul
jne
aaa
push
mov
fildll
jae
roll
push
mov
shlb
fisttpll
fs
or
cmpsl
shl
fistps
lret
inc
push
jmp
jmp
jmp
fistpll
and
outsb
test
inc
inc
cmp
insb
gs
fimull
add
adc
inc
outsb
inc
xor
ret
mov
test
cmp
scas
or
nop
andl
push
and
hlt
jnp
xorl
aam
neg
pop
cmp
fdivs
loopne
rorl
push
pop
pop
scas
xchg
fwait
jge
mov
sub
subb
repz
outsb
and
ficoms
cmc
add
fisubrs
cmc
popa
pop
aas
lods
lret
push
mov
fwait
lods
fnsave
out
sbb
cmc
push
jp
and
into
gs
mov
lods
repnz
adc
or
repnz
mov
or
and
ret
or
xor
popf
sarb
push
xor
or
mov
out
push
pop
ret
fiaddl
jbe
in
insb
lods
xchg
mov
and
bts
mov
push
mov
wrmsr
pop
mov
and
dec
das
sbb
sub
mov
fstp
repz
outsl
mov
mov
test
ret
aad
push
mov
and
scas
fld1
xlat
arpl
in
push
xor
lret
or
clc
jnp
sbb
stos
es
stos
pop
dec
push
inc
add
xor
mov
xor
push
jl
mov
sub
jmp
cs
cmc
inc
mov
mov
mov
into
add
ret
fwait
js
push
sub
and
mov
jo
fisttps
test
loop
mov
adc
loopne
push
push
movsb
mov
movsb
subb
ds
add
sbb
push
adc
mov
sti
inc
test
insb
fadds
pop
dec
pushf
push
sub
lret
test
rorb
push
fadds
mov
pop
test
sbb
jb
push
xchg
cs
bswap
lret
movsb
xor
xor
or
pop
scas
push
roll
es
cmp
insb
test
mov
xchg
pop
int3
loopne
jns
jl
dec
mov
jl
lock
ljmp
inc
jns
sbb
xchg
ss
scas
je
rorl
pop
incl
in
mov
xor
cmp
xor
loopne
sbb
push
xor
repz
pop
pop
mov
je
fnstenv
push
dec
lods
shll
cmp
enter
sbb
mov
fisubrs
mov
xor
cwtl
out
jg
pop
and
push
cltd
inc
mov
roll
adc
test
bound
push
pop
int
mov
pushf
mov
sarb
adc
sti
xchg
pop
addl
add
cmp
cmp
push
pop
mov
lahf
sbb
add
hlt
add
add
sahf
mov
jae
xchg
inc
loopne
fcomp
inc
orl
js
inc
rol
inc
mov
pop
movsl
mov
sbb
xchg
mov
mov
pop
pop
movsb
aam
cwtl
daa
sub
push
aaa
test
mov
out
mov
sarl
pop
xchg
jmp
arpl
lret
dec
shrl
les
jecxz
xchg
adc
jns,pt
adc
dec
testb
stos
mov
mov
divl
xor
dec
sub
push
ja
gs
sbb
mov
pop
xor
mov
ja
add
out
fdivrs
js
int
pop
or
aas
outsl
sub
enter
push
fnstenv
push
bound
jl
cmp
les
and
les
outsb
addr16
aam
add
mov
push
in
mov
movsl
pop
add
stos
mov
adc
dec
jle
mov
stc
push
test
mov
or
mov
clc
sbb
ret
xlat
lea
lea
dec
jge
mov
ficomps
sub
dec
push
push
dec
scas
adc
xor
inc
mov
nop
fcos
out
and
cs
mov
jb
adc
cmc
es
outsl
lret
jno
imul
cmp
jo
jecxz
out
repnz
cmc
jb
dec
test
stos
popl
xor
cmpl
inc
mov
mov
ss
ret
and
les
imul
jmp
movsl
or
inc
jns
inc
xor
insl
test
lcall
sbb
pop
inc
clc
pop
out
mov
test
adc
lods
std
mov
adc
xlat
les
les
das
pop
addr16
in
fnsave
jo
ss
jle
add
add
jo
outsl
leave
sbb
rcrl
rol
dec
xchg
xchg
add
pop
stos
mov
mov
mov
cmpb
and
adc
mov
test
xchg
mov
or
xor
or
stos
imul
or
test
mov
mulb
addr16
add
jno
data16
sub
mov
dec
and
mov
jbe
mov
sub
sub
pop
xor
sub
inc
and
xchg
push
inc
lds
push
sbb
int3
gs
loopne
cmpl
das
subl
sub
sbb
repnz
in
xchg
xor
outsl
jg
jns
mov
fnstenv
or
mov
cmc
cltd
cli
loop
daa
mov
jbe
or
pop
fs
mov
sbb
mov
inc
fwait
and
sub
pop
int3
add
pushf
rorl
sarb
lahf
and
pusha
push
test
xchg
pop
scas
in
push
jbe
out
push
and
mov
out
mov
in
dec
lds
mov
mov
add
adc
adc
pusha
pop
sub
add
pop
dec
insl
adc
jl
push
push
cs
outsl
dec
scas
dec
in
pop
fadds
ss
shr
icebp
std
lret
mov
mov
adc
adc
mov
out
mov
xchg
push
mov
stc
into
jg
aaa
out
scas
lret
fistps
in
int
push
lock
ror
sbb
icebp
std
jge
int
and
fildl
out
mov
int
xor
decl
fldl
lock
lods
dec
movsl
scas
jecxz
daa
lcall
jecxz
adc
mov
test
sub
neg
adc
mov
jbe
or
ss
inc
and
xchg
mov
dec
loope
enter
loopne
fildll
repnz
push
xchg
adc
test
mov
push
stos
cmpsl
push
mov
sub
insb
sbb
leave
xlat
mov
push
loope
inc
call
adc
ds
mov
subl
mov
inc
add
cmpsb
lret
popa
cltd
jge
xchg
or
scas
mov
fsubs
sub
xlat
movsb
dec
ficomps
add
lds
aad
data16
add
loopne
sahf
mov
fbld
sub
movb
loope
arpl
inc
mov
mov
orb
add
leave
inc
fiadds
and
push
call
push
outsl
lock
repz
stc
adc
inc
or
push
inc
xchg
mov
mov
push
lods
sbbl
sub
jg
test
out
adcb
arpl
add
add
dec
lahf
into
inc
insb
into
sarb
ss
ss
cmp
xor
out
mov
and
mov
leave
jbe
sar
mov
sub
nop
push
fistpl
jae
push
daa
xchg
test
imul
mov
cmp
cmpsl
test
push
and
push
int
fwait
shll
and
in
jb
lods
cmp
dec
adc
test
or
cmp
imul
xlat
insl
mov
jne
aas
mov
mov
fldcw
test
adc
pop
int
pusha
movsb
xlat
test
sbb
movsb
out
cs
inc
fistpll
cmp
dec
xor
and
sbb
jmp
iret
aaa
ret
in
pushf
xor
jb
jno
xlat
cmp
ja
outsl
jge
int
mov
pop
pop
and
hlt
mov
mov
mov
int
xchg
jmp
sbb
in
out
leave
push
dec
enter
lock
jns
fisubs
cld
int
xchg
push
lahf
pusha
sub
inc
pmaxsw
orl
ljmp
jbe
inc
mov
dec
inc
cmp
sbb
or
push
ds
outsb
orb
loope
and
fs
add
xor
cli
inc
mov
mov
push
data16
xor
fdivrl
pop
mov
and
movsb
lods
pop
mov
pop
cmpsb
call
xchg
rclb
cmp
mov
pop
fwait
and
push
mov
sbb
push
push
movsb
add
sub
daa
nop
test
flds
popf
inc
shl
mov
bound
cmp
leave
test
pop
dec
and
sub
xor
pop
sbbl
movsl
stos
ja
scas
adc
dec
sahf
push
movsb
jge
sbb
jmp
mov
cmp
push
stc
test
cmpsb
sub
mov
or
test
ret
sahf
sbb
out
psadbw
ror
insl
rcll
lahf
cli
xchg
test
lock
push
nop
and
xor
fimull
dec
pop
shl
cmp
cmp
test
call
in
sub
dec
xchg
fbld
mov
push
push
xchg
mov
ja
cmc
sub
stos
shrl
pop
cmpsl
daa
xor
test
std
jne
shlb
scas
and
push
fbstp
fbstp
mov
scas
xchg
add
mov
test
mov
xchg
add
mov
push
loope
pop
xlat
mov
shll
inc
stos
sub
inc
gs
int3
dec
xchg
out
scas
data16
cmp
lret
jecxz
pop
mov
pop
jle
push
out
pop
jge
xor
add
pusha
pop
jb
stc
jecxz
cwtl
cmpsb
data16
cmp
push
mov
xor
inc
mov
xor
arpl
cmp
int3
enter
mov
out
xchg
stos
adc
icebp
push
mov
mov
test
int
test
test
xchg
jns
cmp
cli
xorb
in
lcall
imulb
aad
lock
xchg
fmuls
stos
mov
jbe
jno
jge
mov
nop
lret
inc
mov
adc
nop
mov
incb
inc
rolb
rorb
sbb
outsl
add
xchg
fisubrs
scas
ret
cmp
dec
mov
stos
imul
sbb
sbb
xor
sti
rorb
scas
int
adc
loopne
insl
xchg
int
test
das
fdivrl
dec
inc
pop
jmp
pop
push
jb
inc
and
and
push
fcom
int3
add
jle
call
or
mov
mov
dec
mov
icebp
inc
pushf
in
sub
cltd
daa
je
mov
cwtl
fwait
dec
xor
mov
or
jge
inc
lret
and
jmp
sub
das
jo
push
test
sbbb
mov
leave
and
dec
push
shr
pusha
mov
pop
cwtl
jg
cs
test
and
fisubrl
in
add
icebp
push
divb
adc
out
shll
jge
mov
mov
inc
push
icebp
int
in
iret
lret
xlat
mov
or
and
dec
ficomps
test
mov
sti
sbb
stos
adc
cmp
or
push
fistpll
in
lock
pop
insl
call
nop
adc
cmp
sbb
popf
pop
xorb
sub
shl
dec
out
mov
in
outsb
inc
dec
dec
adc
push
addr16
lods
mov
mov
enter
stc
aam
xor
mov
outsl
cmp
add
add
mulb
repnz
out
xor
repnz
stc
jb
add
add
add
sysret
add
nop
mov
xchg
loope
pop
fsubrs
test
add
aas
lret
std
adc
nop
test
daa
adc
pop
data16
mov
fisttps
in
or
pop
xlat
int
cmp
frstor
inc
gs
push
aam
push
inc
aam
mov
loopne
mov
push
sbb
push
mov
cltd
xchg
add
insl
xchg
repnz
xor
add
js
jg
cli
lock
sbb
shlb
sbb
repnz
aam
cs
xchg
daa
imul
adc
subl
dec
mov
xor
mov
push
mov
setne
xchg
jg
pop
adc
mov
enter
or
dec
xor
shll
jne
icebp
push
mov
or
mov
leave
push
pop
push
xlat
lods
sti
repz
xchg
je
es
fsubl
movsl
std
jle
xchg
in
jmp
outsl
or
and
jno
adc
ss
outsb
jo
fnstsw
aas
cld
xorb
daa
adc
dec
adc
push
jmp
iret
test
mov
stos
dec
lock
stos
cmpsb
lods
outsl
cs
jne
outsl
mov
jmp
pop
js
lret
add
out
dec
out
movsb
xchg
mov
rcr
int3
xor
shl
xor
orb
mov
mov
xchg
scas
nop
xchg
push
cmp
jge
lods
xlat
pop
mov
jae
js
lods
inc
xchg
cmp
out
pusha
jp
pop
dec
xlat
leave
sbb
mov
andl
es
mov
popa
xor
xor
push
jne
pop
fildll
jne
push
mov
jns
cmp
sub
push
adc
fidivrs
std
mov
mov
addr16
rorb
lea
and
cwtl
lret
ret
mov
rcr
movsb
outsb
stos
or
push
fsts
lods
pusha
les
mov
cmp
dec
iret
out
cmpsl
mov
sbb
and
inc
fmull
loope
cmp
into
sahf
iret
jns
jp
lock
cwtl
outsb
sbb
lock
outsb
or
insb
test
dec
aad
push
xchg
cmc
sbb
inc
iret
cmovs
jb
clc
cmp
mov
pop
mov
inc
ret
add
shlb
and
push
push
int
and
pop
loopne
stos
cli
adc
scas
clc
push
jae
push
xchg
jns
sbb
cmp
hlt
lret
lahf
add
leave
jg
ljmp
and
fidivl
or
outsl
incb
es
movsl
jb
pop
jae
push
pop
ja
repz
test
xor
mov
test
nop
and
shrl
nop
mov
push
cmp
stc
pop
jne
sbb
dec
std
cwtl
out
ds
sub
cmp
fimuls
dec
iret
xchg
push
inc
xchg
negl
es
push
mov
pop
xchg
outsl
or
jae
dec
jge
scas
mov
in
test
or
int3
push
cmp
sbb
mov
in
lods
mov
movsl
fdivl
nopl
fnsave
inc
pop
or
cmc
dec
arpl
xor
es
stos
aas
pusha
orl
shrl
sbbb
clc
xchg
fsubl
out
test
lcall
adc
sbb
daa
imul
outsl
mov
mov
popa
mov
push
outsb
stos
lcall
dec
ljmp
mov
ret
ja
cmpsb
fwait
leave
adc
sub
push
jae
add
push
loopne
sub
stc
int
js
fucom
and
aas
inc
cmpl
push
inc
aam
mov
add
lods
sub
inc
adc
decl
or
adc
push
cmpsb
outsb
mov
adc
in
adc
leave
dec
je
push
lahf
add
mov
xor
pop
or
pop
cmp
addl
xor
stos
mov
ja
jae
xlat
cmp
stc
and
and
push
arpl
mov
repnz
stos
vpand
mov
adc
stc
out
pop
fldenv
cltd
mov
scas
push
add
std
bound
ret
scas
adc
sbb
jns
loopne
mov
sbb
popa
fadd
push
in
sarl
sbb
testl
xchg
fistpll
xchg
jmp
sbb
pop
inc
fisubrs
adc
and
loopne
mov
dec
outsl
cmp
adc
mov
out
cli
dec
xor
iret
and
add
add
mov
mov
mov
add
cmp
ja
add
add
add
pop
scas
mov
push
ljmp
or
pop
daa
out
insb
jle
fcomip
mov
hlt
jae
xchg
sbb
mov
pop
xchg
sbb
mov
sbb
mov
jmp
add
out
push
jne
sub
cld
repz
ret
test
xchg
cmp
sub
jecxz
jnp
mov
inc
adc
in
adc
dec
pusha
add
sub
ljmp
sub
sti
and
or
sbb
outsb
mov
inc
roll
mov
ljmp
push
in
xchg
js
jl
aad
mov
icebp
jns
push
push
sbb
and
xor
cmpsb
mov
insb
aad
pop
frstpm(287
cmc
jle
push
sub
insl
cmpsl
and
sbb
pop
mov
ljmp
fwait
inc
xchg
or
in
and
ud1
cltd
aaa
push
xchg
dec
mov
imul
xchg
in
xchg
loopne
inc
mov
xchg
lahf
fs
lret
sti
sub
xchg
xor
andl
xor
pop
push
inc
add
das
stos
mov
ror
roll
je
mov
loope
mov
xchg
adc
and
test
and
pop
pop
sub
push
xchg
daa
jecxz
stos
dec
push
rcll
mov
cmp
mov
mov
int
mov
inc
cmp
mov
push
bound
cmp
adc
enter
movb
mov
jae
mov
out
bound
stos
sarl
std
fdivs
dec
mov
inc
loop
pop
test
push
adc
lret
mov
cmp
es
popl
repz
popf
mov
lret
lock
jno
scas
inc
push
jne
pushf
sbb
movsl
aam
cltd
sbb
and
cmc
mov
sbb
inc
jno
push
mov
seta
in
mov
les
ja
mov
out
push
mov
fmuls
add
mov
test
push
lock
aam
push
xchg
clc
jns
mov
testb
push
add
mov
jl
lea
loop
data16
std
arpl
nop
push
mov
bound
push
jge
cmp
xor
xchg
jecxz
dec
les
mov
cltd
xchg
aaa
popa
out
xor
in
out
fmulp
mov
jns
add
in
imulb
pop
idivb
repz
test
add
jl
cmc
push
add
mov
cmp
ffreep
mov
sub
inc
pop
xchg
stos
repnz
inc
xlat
add
cs
pop
jecxz
cmp
push
insl
or
xchg
movsb
cmp
mov
or
and
cmp
jno
xlat
mov
jp
push
scas
cmp
sub
and
outsl
repz
mov
dec
fs
sub
jae
fists
lcall
nop
sbb
sbb
push
adc
sahf
xor
sbb
addr16
cmp
cltd
aam
gs
cmpsl
enter
sbb
ret
xchg
mov
mov
out
push
jns
mov
stos
decl
jae
push
xor
arpl
into
add
cmpb
aam
shll
pop
std
and
int
loop
xor
mov
loope
fs
cmp
and
fiaddl
mov
loop
aad
push
aaa
jg
into
popf
shlb
call
push
in
pusha
adc
sub
dec
jmp
xchg
roll
mov
mov
popa
pop
lret
data16
icebp
lret
out
and
jmp
jb
xlat
inc
mov
aas
push
adc
mov
sahf
push
push
adc
ja
outsb
stos
push
daa
add
leave
sub
inc
imul
test
add
es
test
fmull
loopne
dec
ret
cmp
sbb
mov
xchg
jo
out
mov
jbe
mov
dec
and
ljmp
sub
or
mov
and
dec
mull
ljmp
lcall
adc
test
jb
pushf
out
or
arpl
mov
pop
or
mov
stos
cmpsb
push
or
movsb
pop
adc
mov
jecxz
aam
inc
call
test
mov
jbe
xor
and
xchg
test
push
mov
and
push
js
hlt
add
add
enter
jl
dec
addr16
jmp
icebp
jp
fisttpll
push
dec
mov
or
and
js
sarb
push
in
cmp
push
in
pop
insb
data16
push
inc
arpl
fisubrl
jle
xor
int3
loopne
inc
mov
jne
insb
and
test
movsl
inc
push
cld
in
inc
add
jl
mov
pop
xor
jecxz
iret
inc
mov
cmp
lods
mov
mov
inc
push
jo
or
jp
outsb
rorb
adc
hlt
insb
dec
lcall
call
lcall
cmpsl
mov
mull
aas
sub
dec
outsl
lods
mov
sbb
enter
add
in
jp
dec
sahf
loop
jns
inc
mov
loop
and
pop
dec
mov
push
repz
xlat
inc
ret
shr
js
fwait
sub
mov
std
push
xchg
sbb
fldcw
xchg
cmc
negl
push
into
xchg
out
dec
mov
or
fsubs
sub
call
clc
fcmove
call
aam
sub
mov
cmp
mov
add
xlat
dec
out
stos
addr16
push
lods
cmpsb
sub
mov
xchg
insb
mov
xchg
inc
jbe
xor
ja
lds
mov
or
inc
aaa
mov
out
push
repnz
pop
push
push
xchg
xchg
out
lret
pushf
neg
fcoms
push
es
pop
arpl
pop
push
lahf
popf
push
shrl
insl
push
mov
dec
jecxz
sub
xchg
outsl
mov
xchg
je
loopne
in
pop
push
xor
rorl
nop
dec
inc
arpl
pushf
add
mul
mov
dec
or
mov
add
icebp
cwtl
fisubrs
inc
rorl
push
jno
pop
cmp
push
in
sub
rcrb
test
jge
shrl
fdivr
xchg
imul
dec
shll
lahf
cmp
lock
cwtl
rcrb
jl
push
in
xor
inc
fwait
xchg
fdivrl
mov
jmp
inc
out
addr16
insl
pop
insb
cmc
inc
mov
dec
mov
inc
mov
adc
inc
inc
divl
mov
adc
jp
in
addr16
or
dec
inc
sub
push
mov
lret
jle
test
xchg
cmp
fiadds
sti
cmp
mov
fcomps
icebp
shlb
mov
lret
or
mov
out
test
hlt
xor
call
rcll
int3
mov
push
adc
int
in
in
fiaddl
popf
push
and
pushf
rolb
stos
cmp
pop
dec
jno
ja
mov
jno
stos
orl
adc
mov
std
sub
mov
rorl
inc
mov
lret
mov
fwait
dec
sbb
outsb
adcb
inc
cs
push
icebp
push
pop
jae
xchg
xchg
cli
add
mov
faddp
fidivrl
lret
arpl
lods
in
mov
ja
sub
mov
jmp
xchg
pop
adc
orl
pushf
jb
adc
push
inc
in
orb
jmp
push
hlt
add
clc
jo
addr16
hlt
xor
xor
dec
xor
dec
inc
fwait
test
test
pusha
fsubrl
mov
loop
xchg
test
in
mov
imul
dec
mov
inc
leavew
mov
push
insl
lds
addr16
roll
hlt
pop
cltd
lds
sahf
sbb
adc
xor
cmpsl
jo
sub
jge
mov
cwtl
repz
jge
lcall
mov
dec
mov
mov
inc
cmp
loop
xchg
inc
or
inc
iret
sub
sahf
test
out
cs
jp
fwait
xchg
popa
add
push
rcrb
stc
cmp
pop
sbb
cmc
pop
out
push
xor
mov
dec
jo
mov
sti
bnd
ja
out
movsb
stos
jnp
xchg
lcall
jmp
jg
arpl
sub
dec
rol
cmp
lret
popa
icebp
jmp
cld
addr16
scas
mov
clc
out
outsl
data16
jp
fldl
xchg
dec
sbb
lds
jne
dec
das
clc
xor
cmp
cmp
pop
std
outsl
insb
in
out
adc
xchg
cmp
adc
es
mov
mov
fwait
pop
mov
mov
jg
dec
icebp
imul
cld
mov
add
add
and
fldl
inc
sti
aas
jb
add
test
aad
add
hlt
add
add
mov
int3
mov
loop
lahf
in
stc
pusha
fdivr
mov
flds
test
in
and
inc
mov
fcmove
jmp
jmp
add
xor
dec
cmp
mov
sti
push
jb
add
sbb
daa
cmp
xchg
ja
xor
addr16
xchg
push
inc
hlt
pushf
test
addr16
mov
aaa
lods
scas
outsb
ja
pop
sub
dec
hlt
mov
adc
out
add
push
or
lods
or
sti
out
cwtl
inc
out
rorl
in
and
push
hlt
mov
push
jo
push
mov
rcrb
pop
and
inc
dec
push
scas
mov
in
loop
bound
cli
fs
xchg
jecxz
ljmp
cmc
fcoms
nop
cmp
cmp
nop
test
xchg
adc
sbb
jo
pop
xor
rcrl
inc
leave
addb
xchg
add
xchg
adc
test
pop
fiadds
push
jno
aaa
push
and
xchg
fidivrl
jp
hlt
jg
outsl
shr
push
and
or
ja
mov
cmp
sti
shrl
and
cmp
inc
pop
pushf
push
cmpsl
pop
inc
daa
ss
and
mov
sbb
pop
xchg
in
imul
pushl
std
add
xor
jno
push
cwtl
test
inc
int
xchg
jno
and
push
mulb
in
ret
sbb
adc
mov
gs
or
mov
rolb
cmc
lock
inc
sub
int3
adc
int3
pop
fdiv
mov
mov
sbb
imul
outsb
shr
cltd
dec
cld
nop
in
rclb
test
mov
adc
mov
dec
gs
icebp
rorl
lea
scas
fs
sbbb
jns
arpl
push
add
sub
or
jne
jns
jg
mov
insl
push
pop
add
mov
test
lds
add
fsubrp
xor
and
or
dec
sbbl
stc
jb
mov
push
jae
jge
jbe
inc
xlat
fstp
lahf
push
pop
sub
cmp
pop
inc
stos
fstpl
aam
bound
xchg
stos
imul
jne
dec
xchg
icebp
daa
lock
sub
xchg
in
shrl
xchg
fbstp
xchg
adc
push
sub
sub
mov
cmp
dec
adc
ljmp
pop
cmpsb
out
cs
mov
jle
jl
mov
sub
inc
dec
nop
addr16
cmp
cmp
jg
cmpsb
cmp
pop
ss
int3
movsb
dec
cmc
shrb
mov
sub
movsb
xchg
jl
je
inc
js
test
hlt
ds
mov
inc
push
inc
cmpsl
jne
xchg
pop
jbe
mov
aaa
test
loop
mov
or
cs
xchg
lret
insb
jo
in
inc
xchg
test
mov
addr16
fidivs
mov
jb
lea
test
xor
in
aam
xchg
pop
cltd
mov
int
add
fists
xchg
iret
cltd
out
jmp
cmpsb
cli
aas
pop
mov
mul
sbb
aad
xchg
push
sbb
lret
loope
scas
jmp
int3
arpl
sbb
loope
call
pop
pushf
gs
cltd
adc
dec
insl
hlt
repnz
in
mov
insl
cmpsl
clc
stos
xor
push
pop
lock
mov
lret
jae
popl
sub
stos
int3
sub
xorb
data16
insl
stos
cmp
test
mov
or
mov
shrl
hlt
adc
jae
test
jp
push
cmc
inc
loope
out
loopne
pop
pop
movsl
jge
fsubs
repnz
imul
nop
mov
test
mov
xchg
daa
test
addr16
fwait
insl
insb
mul
and
mov
fdivl
mov
mov
rcrb
pop
dec
push
cld
out
sub
sub
dec
enter
mov
cmp
push
test
jns
pop
adc
and
ss
jnp
hlt
push
cwtl
xor
popf
mov
sbb
push
ret
push
movsl
dec
jae
repz
in
mov
mov
mov
fxam
pop
and
push
pop
adc
andl
fwait
jle
push
jmp
xchg
fs
ret
cld
mov
push
test
fidivl
sbb
add
xchg
scas
loopne
add
add
add
mov
or
push
leave
xchg
add
add
add
fmuls
jmp
jae
call
icebp
and
lods
ljmp
push
jnp
sub
jnp
iret
insl
mov
xchg
jecxz
data16
xchg
aam
inc
shll
inc
pop
sti
or
jno
test
movl
stos
mov
nop
fimull
sarb
lds
lods
push
mov
xchg
sbb
popf
ret
sbb
adc
inc
dec
dec
sahf
int
lret
mov
mov
stos
xchg
addr16
out
jp
stos
stos
xchg
xrelease
push
and
jae
sbb
aam
cmp
xchg
xor
mov
sbbl
mov
je
scas
add
rcr
sub
mov
dec
js
inc
scas
dec
sbb
mov
sbb
add
cmp
adc
hlt
sbb
andl
pop
adc
jnp
hlt
push
repnz
push
and
shlb
je
dec
or
sub
and
jae
loop
jae
sub
mov
add
xor
fadds
sub
lret
fdivr
inc
es
sbb
lahf
sbb
jp
mov
push
inc
into
mov
add
mov
in
jecxz
je
jno
inc
iret
push
jmp
adcb
sbb
lret
push
je
or
add
scas
or
jl
xor
loopne,pn
mov
xchg
ficompl
out
test
fwait
in
nop
imulb
dec
lock
or
arpl
ss
mov
mov
mov
cmp
xor
int
jge
sti
dec
pop
pop
lret
cld
adc
push
mov
outsb
flds
adc
add
push
addl
subps
mov
push
push
mov
mov
aam
insb
mov
sbb
add
in
mov
sbb
or
addr16
inc
scas
jne
cmpsb
loopne
lods
xchg
in
repz
popa
lds
sbb
stc
push
rcrl
test
loop
cmp
out
imul
out
inc
mov
jnp
mov
repz
es
invd
mov
add
subb
mov
pop
mov
rcrl
xchg
nop
xchg
aam
rcr
mov
xor
rcr
adc
jbe
out
aad
hlt
xor
imull
enter
xor
movsl
test
inc
leave
fimuls
push
pop
and
out
subl
aam
inc
pop
adc
push
lret
std
lret
stos
xchg
in
out
aad
cmpsl
and
cmp
pop
ret
add
cmpsb
sub
jmp
mov
leave
sub
jno
push
out
or
pop
xor
xor
test
fsub
mov
xor
mov
xor
std
test
jg
out
cmc
les
fxch
clc
movsb
lock
mov
cmp
stos
ds
cmp
pop
mov
xchg
sarb
push
jnp
or
jns
sub
or
jmp
inc
cwtl
mov
push
dec
aam
aaa
hlt
cwtl
lcall
sbb
dec
pop
mov
andb
repnz
addr16
push
inc
xor
nop
outsl
das
mov
outsl
xorl
adc
outsl
cli
and
mov
imul
add
cmpsl
rorl
lss
loop
arpl
pop
push
test
repz
dec
jbe
filds
fcoml
sahf
outsb
jecxz
jo
jbe
sub
mov
and
push
sahf
mov
jae
cmp
adc
sub
pop
mov
push
push
sahf
jo
rorl
jecxz
adc
jp
fwait
xchg
pusha
shl
push
add
mov
sahf
xchg
mov
push
or
aaa
cmp
adc
jb
dec
out
outsl
es
lahf
in
dec
aas
pop
scas
testb
push
mov
push
adcb
mov
clc
pop
lcall
and
insl
mov
fiaddl
jne
hlt
in
pop
xchg
dec
adcb
or
dec
jo
adc
loop
fnstenv
xchg
and
cmpsb
fsub
je
inc
lods
out
xor
inc
pop
aam
dec
imul
add
pop
into
lcall
push
pop
clc
out
jo
test
add
lds
test
hlt
mov
imul
into
data16
pop
gs
pop
push
push
in
sub
sti
cltd
mov
lcall
fbstp
pushf
or
add
add
mov
cmp
push
add
hlt
add
add
mov
or
xchg
inc
outsb
out
xchg
int
dec
lock
fmuls
data16
inc
adc
mov
mov
stc
dec
inc
jl
pop
icebp
and
in
fisubrs
das
pop
or
and
mov
out
push
addr16
out
fld
cwtl
push
pop
faddl
inc
push
daa
cmpsl
xchg
push
fcoml
bound
add
sbb
push
lret
int
push
pushf
cmpsl
xor
into
andb
xchg
pop
fildll
sub
jno
inc
cwtl
rcrl
add
push
sti
fsubs
xchg
das
int
outsb
das
sub
mov
addr16
mov
pop
dec
out
add
pop
sti
xchg
mov
je
cld
jle
cld
cmp
call
jo
or
imul
dec
adc
cltd
lcall
cmpsl
lock
cmpsl
scas
pop
pop
ja
jo
sbb
xchg
bound
cmpsl
sbb
lock
shlb
adc
inc
sub
sahf
sarb
outsl
cmc
insl
js
pop
adc
jge
cld
sti
arpl
leave
cmp
mov
cmp
sbbl
iret
mov
mov
inc
mov
enter
add
inc
push
mov
out
jne
cs
mov
or
and
mov
xchg
xor
ret
dec
stc
sbb
and
mov
xchg
stos
lcall
je
jg
fimuls
mov
out
dec
xor
mov
repnz
sbb
dec
out
mov
xor
cmp
shrl
sbb
or
out
popa
shll
mov
repz
push
lea
sub
pop
jnp
jmp
in
cmp
out
sub
pop
iret
into
pop
in
mov
push
jno
popa
add
test
lret
xchg
add
into
xchg
outsl
jo
ds
xor
mov
mov
aam
cmc
pop
push
cmp
jne
add
daa
cli
jne
sbb
cli
mov
jns
popf
mov
dec
pop
stos
faddl
mov
xchg
popf
movsb
lret
je
imul
idivb
cmp
fadd
addl
ss
scas
push
adc
out
stos
sarl
adc
jmp
icebp
mov
fisttps
push
gs
inc
test
lds
lods
shll
cmp
and
lea
jnp
arpl
rorb
push
add
mov
and
ds
in
or
push
jle
push
mov
stos
adc
xchg
jmp
jb
lods
add
aam
pop
mov
test
lret
fcoms
add
sti
push
icebp
add
daa
loope
addr16
xlat
mov
addr16
pop
mov
out
setb
out
inc
lcall
movsb
lods
push
ror
xchg
ret
sbb
or
pop
jg
jno
popf
pop
push
dec
clc
dec
rorb
das
out
cwtl
cmp
and
lahf
int3
movb
cltd
inc
or
outsl
das
int3
aam
pushf
lahf
insb
lea
shlb
fwait
jp
cmp
cmp
dec
mov
adc
push
loope
mov
mov
inc
das
aaa
mov
pop
lfs
add
ja
cmc
mov
mov
and
dec
lods
fwait
call
jno
pop
pop
int
jo
out
sbb
push
sbb
dec
ret
jne
repz
cli
cld
and
sbbb
jle
jb
xchg
pop
xchg
icebp
mov
xchg
nop
cs
aad
loope
pusha
leave
xchg
xor
mov
lret
xchg
add
pusha
inc
mov
mov
push
mov
jge
mov
cmp
lock
les
or
emms
xchg
dec
nop
ds
mov
mov
gs
mov
adc
cmpsl
test
addr16
and
cmp
repnz
bound
dec
add
and
or
and
mov
and
in
sub
in
xlat
test
xchg
cmp
nop
aam
out
nop
fs
mov
mov
xchg
out
mov
push
lea
push
outsl
jle
pushf
int3
es
xor
sahf
mov
lods
add
enter
jle
test
out
movsb
mov
xchg
mov
imul
imul
dec
fcoml
add
shlb
in
or
shrb
imul
adc
fldenv
push
shrl
arpl
jmp
out
iret
or
testl
and
es
sti
std
sbb
adc
lods
mov
add
hlt
add
add
fdivl
fistpll
negb
pusha
push
inc
pop
push
and
and
lds
outsl
xor
xor
ds
call
orl
sbb
inc
test
sti
and
xlat
mov
cmpb
mov
dec
pop
adc
bound
mov
movsl
push
in
xchg
dec
scas
dec
cltd
pop
adc
jl
xor
jl
xor
js
fdivs
mov
int
clc
and
ret
std
pop
stos
addr16
mov
sub
adc
leave
sbb
add
hlt
scas
addr16
outsl
scas
push
push
outsb
and
mov
and
push
popa
shr
rcll
cld
cltd
scas
push
scas
xor
lret
or
sub
ljmp
test
scas
push
icebp
pusha
mov
jae
xor
enter
sbb
in
out
fmuls
fwait
ss
pop
mov
and
adc
scas
in
pushf
dec
fs
mov
push
js
lret
jne
jno
ret
scas
mov
loop
popf
ret
es
movsl
cmp
lds
xor
xchg
jmp
pop
mov
sahf
or
into
jbe
mov
jle
push
mov
das
ret
int3
js
pop
cltd
xchg
mov
mov
xchg
ret
in
bound
inc
jb
push
lods
inc
dec
pop
sbb
mov
outsb
mov
mov
and
xchg
popf
rol
mov
fistps
cli
fwait
lahf
les
aaa
sub
mov
xor
ja
ss
jo
lea
mull
cld
sub
out
sbb
leave
xor
inc
xchg
push
sub
adc
mov
adc
cmp
into
jmp
or
jmp
add
es
testl
and
dec
sbb
bnd
mulb
lret
adc
and
out
stos
xor
jns
cmp
ret
fadds
adc
pop
push
notl
push
inc
pop
mov
push
jo
mov
shlb
arpl
std
cmp
fninit
add
shll
or
xor
add
psraw
mov
pop
test
xor
or
imul
fs
sbb
inc
xchg
ja
out
lods
in
lret
fadds
loop
cltd
sbb
dec
mov
fsts
jl
push
push
mov
cmp
sbb
test
lret
push
imul
add
adc
add
dec
push
sub
cwtl
pushf
xorb
cmc
rorl
mov
aaa
scas
sahf
imul
sti
push
test
and
or
jbe
add
insb
xchg
leave
imul
push
pop
cmp
mov
pop
sub
bound
cmp
adc
gs
cmpsl
pop
idiv
add
jnp
mov
stc
andl
sahf
xchg
jne
dec
dec
jmp
lods
test
lcall
popf
or
insl
adc
mov
pop
and
xchg
push
jle
push
jp
push
sbb
or
lods
fdivrp
inc
popf
push
rorb
inc
jecxz
les
mov
push
jp
scas
div
mov
cmc
jb
pop
scas
pop
jge
sbb
cmpsl
xor
xor
or
call
test
mov
push
mov
mov
mov
daa
cmp
adc
in
sarb
push
outsb
repz
lcall
mov
add
fdivrl
mov
add
scas
cmp
mov
and
sub
int
dec
mov
loope
addb
and
negl
mov
pop
inc
scas
fmul
push
les
sub
loop
test
out
mov
jbe
sub
lods
pop
inc
ret
das
cwtl
inc
pushl
fcmovbe
jae
fildl
jge
xor
sub
push
nopl
push
lock
outsb
lods
xor
aaa
rcrb
test
pop
mov
int
add
mov
popf
out
faddl
cs
cmp
dec
jp
repnz
add
xchg
mov
push
mov
movsl
gs
dec
data16
movsl
cs
or
loop
int3
mov
cld
sbb
das
arpl
xlat
loopne
cmpsb
stos
xor
rep
lret
mov
movsl
jmp
jge
xor
adc
mov
fstp
mov
daa
push
adc
mov
addl
add
sbb
jg
lcall
dec
movsl
xchg
add
hlt
add
add
pop
or
daa
call
push
sub
push
loope
or
insl
jmp
lret
lret
rcrb
cmp
repnz
mov
ret
or
mov
add
das
inc
lret
mov
jns
push
aam
fisubrs
dec
jg
pop
loop
cwtl
and
test
ficoml
inc
rolb
inc
outsb
ret
sahf
aam
addb
mov
cmpsl
adc
in
push
insb
pop
push
xor
adc
jns
ret
lock
jp
int3
or
sbb
jmp
add
sub
xor
xor
push
or
pusha
push
mov
cmpsl
xor
dec
imul
hlt
aas
lods
or
mov
daa
pop
movsl
cs
adc
push
js
fisubl
mov
or
stc
ljmp
push
int
mov
and
jg
sbb
xor
push
loopne
sub
les
repz
nop
cmp
movsl
insl
int
cmp
xchg
jns
scas
push
and
pop
enter
imul
xor
popa
clc
xor
sbb
ret
cli
adc
fstl
adc
pop
xchg
push
cmpsb
fimuls
popa
popa
insb
mov
xor
sub
lods
and
js
mov
jno
pop
jp
out
or
scas
inc
aad
hlt
push
sub
ja
and
adcb
cs
pop
in
xchg
repz
cmp
nop/reserved
popa
movsl
jno
shrb
push
addr16
push
add
dec
mov
ds
imul
pop
cmp
stos
adc
outsb
imul
fs
sbb
cmc
push
ds
jge
mov
and
gs
sub
xchg
test
cmpsb
out
dec
je
test
lods
out
pop
mov
pop
das
lahf
jge
test
jmp
lea
add
test
ljmp
and
dec
mov
repz
push
aas
into
subl
mov
lret
in
pushf
inc
jbe
pop
pop
sbbb
imul
xor
mov
out
jns
inc
cld
test
arpl
jle
int3
das
push
push
jo
push
mov
mov
jge
mov
movsb
insb
xchg
pusha
into
mov
xor
xor
and
lods
push
loope
cmpsl
adcb
mov
or
mov
mov
cwtl
inc
mov
adc
cmp
inc
inc
cmpsl
div
add
add
adc
add
jecxz
sbb
inc
or
fstl
and
mov
mov
loop
and
pop
cmp
and
es
push
pop
lds
xor
insb
leave
push
loopne
rcll
sub
pop
mov
jns
xchg
mov
pop
add
int3
inc
or
stc
and
or
imul
sarl
fsubrl
popa
in
imul
test
mov
rclb
test
and
mov
into
xor
or
xchg
in
mov
nop
fsts
add
orl
in
jae
mov
leave
cs
out
testl
inc
mov
mov
xor
bound
dec
jp
pop
movsl
ret
push
rolb
outsl
repnz
aaa
sbb
push
fs
ljmp
mov
mov
jg
stos
rcll
dec
dec
repz
lock
push
insl
cmp
movsl
mov
inc
mov
sti
and
lcall
fs
cltd
cli
xor
popf
xchg
sti
or
xchg
mov
fistl
pop
inc
mov
pop
jae
divb
ss
mov
pop
inc
ret
mov
mov
js
fiadds
in
mov
push
add
cltd
iret
mov
add
or
clc
iret
mov
mov
push
xlat
mov
mov
in
xchg
and
or
xchg
dec
add
mov
cmc
sbb
out
aas
mov
frstor
popf
lret
push
leave
xor
dec
daa
dec
lret
enter
xchg
hlt
jnp
lret
imul
adc
lods
xchg
incb
mov
ret
push
mov
mov
loopne
mov
sbbl
int3
jb
cli
sub
cmc
adc
clc
fstpl
cs
test
repz
bound
cmp
mov
sub
sti
push
inc
sbb
fidivrs
xchg
nop
repnz
pusha
xchg
cmp
cmp
sub
xor
stc
and
add
add
stc
pop
sub
stos
jns
dec
sub
pusha
fidivs
cltd
lcall
mov
mov
test
mov
mov
sti
insb
or
jle
jg
mov
outsl
adc
outsl
aas
testl
outsb
xchg
rolb
cmp
mov
dec
out
lds
xchg
jae,pt
and
mov
js
pop
xchg
dec
ds
xor
aam
jge
sbb
std
fldcw
mov
adc
add
mov
cwtl
pop
xchg
or
fcoms
push
in
xor
inc
loope
xchg
xor
mov
int3
sbb
in
push
push
sub
fwait
stos
or
jmp
push
cwtl
inc
fs
adc
aam
leave
stos
mov
jns
iret
std
sti
mull
cmpsb
pop
lea
jns
xchg
mov
inc
xor
neg
popa
scas
push
and
call
leave
cmp
cli
inc
mov
xchg
cmp
in
repz
adc
cld
cs
push
adc
ljmp
loope
lcall
or
iret
je
mov
mov
imul
and
jl
sbb
test
imul
mov
sar
lret
lcall
xchg
adc
xchg
je
push
jo
sbb
sbb
arpl
mov
push
push
daa
repz
fstl
mov
mov
pop
mov
mov
lret
adc
lods
pop
jg
mov
mov
std
cmp
aas
add
dec
cmp
lcall
xchg
add
xchg
out
cs
cld
jp
ds
sub
ss
shlb
mov
cmp
xchg
cmp
std
cmc
add
fisttpll
fucomp
cmp
imul
jp
cwtl
add
nop
hlt
mov
sarb
daa
shl
mov
inc
fidivl
scas
test
enter
sahf
fsubl
cs
repnz
cmovge
jnp
mov
jns
xchg
xchg
lea
arpl
sub
decl
or
mov
pushf
aad
xor
fnsave
jp
test
mov
and
xchg
rcrl
loopne
jo
jmp
cmpsb
lcall
sub
push
sbb
paddusw
lahf
xchg
push
pop
leave
sub
jo
hlt
ds
and
cmp
pop
xchg
in
leave
hlt
lret
inc
mov
js
pusha
icebp
dec
sbb
mov
stc
inc
pop
cld
push
pop
sub
mov
mov
adc
xchg
mov
fsubl
mov
daa
fwait
mov
out
mov
clc
pop
push
xor
decl
sbb
push
or
sub
mov
call
cld
or
dec
cwtl
icebp
lods
out
lret
out
dec
pop
cmpsl
pushf
sub
movsl
cmp
in
je
push
js
sbb
jne
sbb
test
fidivs
xchg
push
mov
mov
movb
rcll
mov
lods
xchg
ret
out
in
xlat
cmp
ret
lods
dec
fmull
pop
sbb
arpl
outsl
iret
sti
and
xor
out
aas
push
into
or
dec
jecxz
and
dec
and
les
fldl
xchg
fsubrs
in
mov
les
jp
jb
xor
dec
and
mov
fdivrl
mov
mov
hlt
add
push
mov
shlb
cli
inc
out
pushf
cltd
sbb
dec
xchg
jge
pop
imul
mov
enter
dec
xchg
jl
xchg
mov
xor
loope
mov
or
loope
lods
xor
or
in
repnz
cli
scas
inc
cmp
adc
xor
sbbb
add
stos
mov
es
ljmp
enter
stos
lea
cmp
cmp
mov
cmpsb
daa
aad
mov
movsl
icebp
and
push
mov
mov
and
and
and
mov
sbb
mov
lret
sbb
into
cmp
stc
fbstp
cmc
fwait
xchg
jo
mov
rolb
hlt
fbstp
xor
xor
loopne
aaa
jo
aaa
icebp
lret
mov
mov
push
xchg
add
add
lret
dec
jge
xchg
outsl
jge
lcall
add
hlt
add
add
mov
popw
or
insl
sub
out
adc
xchg
xchg
fcomi
and
push
fnstenv
xchg
jl
pop
enter
and
lods
jl
pop
cmc
mov
fildll
adc
int
fbld
pusha
test
insb
fmulp
jp
test
adc
fcompl
ret
sub
ficompl
pop
xor
jp
mov
pop
imul
nop
fidivs
nop
jmp
lods
sti
outsb
jp
fbstp
adcb
je
pop
or
mov
test
jns
xchg
test
mov
mov
or
mov
jnp
and
ljmp
in
scas
jo
mov
repz
fisubs
fsubr
add
sub
cli
outsb
leave
out
dec
in
pop
adc
subl
popf
lods
rcrb
data16
mov
ret
jne
ds
test
inc
rorb
outsb
cmc
xchg
push
cs
cmpsl
adc
jl
ret
popa
test
mov
lret
hlt
inc
push
inc
out
mov
dec
aad
insl
stos
sbb
pop
mov
pop
sub
mov
scas
jo
jecxz
push
inc
jecxz
inc
aaa
sbb
icebp
push
insb
test
jbe
imul
sbbl
les
rorl
inc
or
or
test
mov
or
pop
test
push
movsb
loopne
popf
daa
mov
push
fstpt
repz
push
sarb
out
fwait
pop
add
pop
test
loopne
pushf
addr16
popf
push
lret
daa
xchg
jecxz
cltd
xchg
jne
sub
push
add
xchg
mov
add
out
and
push
dec
or
ret
arpl
jg
movsl
insb
adc
pop
or
pop
xchg
cwtl
dec
xor
xor
lcall
lock
jl
in
and
pop
mov
lret
xchg
rorl
notb
and
and
cli
adc
cmp
mov
and
jecxz
in
clc
cmp
add
or
das
pusha
pop
loope
loopne
xor
div
enter
or
push
dec
sbb
icebp
sub
ljmp
imul
pop
pop
push
aaa
lahf
jl
shll
cmc
push
cld
fcmovnbe
mov
xor
pop
dec
cld
scas
fdivs
jae
jp
mov
mov
int
push
lock
mov
pop
push
sbb
fisttpll
sbb
fisubrl
add
gs
sti
lret
cmp
adc
aam
jp
push
push
pop
and
shr
ret
sahf
cmp
xchg
mov
ljmp
out
test
pushl
adc
pop
sub
or
sti
cmpsb
add
cmpsb
mov
push
sbb
add
in
dec
andl
das
ror
or
or
ljmp
enter
subl
enter
test
mov
pop
je
mov
cli
out
fistpll
rolb
or
fnstsw
mov
fstps
out
adc
mov
aam
push
xchg
ja
or
loopne
loope
ret
pop
pusha
es
fcmovne
in
bswap
dec
jge
inc
mov
outsb
in
cltd
icebp
inc
mov
sub
jb
adc
mov
out
xchg
addl
cmp
sbb
inc
aad
out
sbb
mov
inc
mov
jnp
sub
clc
xor
push
mov
xchg
call
sub
andl
mov
add
lahf
les
jge
rclb
push
add
or
jnp
not
lret
push
mov
daa
call
or
pusha
sarl
out
shlb
inc
ss
push
popf
or
cs
mov
adc
jle
lret
inc
mov
xchg
push
sti
xchg
jge
xchg
hlt
arpl
inc
enter
lahf
cmp
repnz
sbb
inc
push
shl
pop
sub
sub
or
pop
test
std
scas
imul
int3
mov
mov
icebp
das
arpl
cmp
and
inc
and
mov
add
scas
imul
fwait
push
gs
fdivr
loope
cwtl
je
xor
xor
jo
shrl
in
aaa
test
mov
jnp
push
adc
cld
lcall
add
or
jl
loopne
sbb
mov
pop
sub
add
add
xlat
hlt
push
ljmp
sub
cmp
andl
inc
out
mov
lahf
xor
call
loopne
imul
mov
push
call
push
pop
pusha
or
sub
pop
xor
ljmp
mov
out
pop
jnp
popa
test
xchg
inc
sbb
adc
cld
jbe
ljmp
scas
daa
xor
or
lds
adc
and
sub
sub
dec
push
or
xor
xlat
rorl
icebp
pusha
loop
dec
dec
push
xchg
cmp
insl
adc
fstpt
enter
pop
adc
dec
mov
add
in
into
jp
mov
lods
add
lcall
in
popa
cmp
lods
sub
dec
hlt
mov
add
pushf
cmp
push
fistpl
xchg
insl
fstl
mov
mov
push
xor
iret
jp
add
sub
jb
dec
push
fcomi
dec
in
clc
or
decb
push
lret
dec
xchg
out
test
fs
test
sub
and
jae
vrcpps
sub
ret
call
lods
cmpsl
sub
lea
push
ret
adc
in
call
inc
dec
subl
pop
xor
sub
cmpsb
enter
cld
dec
add
shll
sub
adc
pop
das
sbb
cmpsb
loopne
push
outsb
jge
dec
movsb
orb
lret
xchg
jmp
loopew
call
sub
add
mov
das
cmp
add
negl
jle
or
or
mov
in
push
aad
jg
sub
pop
inc
adc
and
push
sbb
ror
out
and
addb
lret
adc
xchg
xchg
les
imul
xor
cmpsl
push
cs
mov
jno
pop
fcompl
arpl
jecxz
mov
imul
repnz
push
pusha
bt
push
sub
dec
dec
inc
icebp
popf
cmp
push
mov
mov
inc
pop
xorl
push
out
mov
xchg
sub
add
test
sub
sbb
pop
push
faddp
jg
jp
sarb
jne
jle
fcom
cld
cli
nop
outsb
jno
mov
addr16
jp
jmp
repnz
pushf
xor
out
inc
sub
xchg
pop
shlb
xchg
mov
jge
sub
pop
jle
fxch
loop
mov
imul
fdivl
pushf
xor
pop
arpl
mov
fs
cld
push
lahf
inc
jge
mov
jb
or
ret
andl
in
and
xchg
jne
fisubrs
sbb
std
and
and
nop
mov
or
lahf
arpl
lods
and
pop
push
mov
fwait
mov
pop
push
lea
sahf
dec
imul
and
push
cld
mov
insb
leave
inc
jmp
std
cwtl
stc
mov
nop
test
in
mov
dec
repnz
mov
les
inc
adc
pop
adc
adc
in
inc
cmp
dec
sub
dec
pop
adc
scas
xor
cmp
stos
lock
cmp
pop
mov
xor
pop
xchg
cltd
fdivr
cli
pop
sbbl
movsb
sti
inc
sbb
into
pop
ret
inc
js
testl
fbstp
fsubrs
pop
jge
ljmp
sbb
je
js
push
ljmp
loop
lds
sub
inc
ds
mov
xchg
cmp
inc
dec
mov
lea
ja
adc
sbb
cwtl
xor
mov
lods
daa
pop
jo
mov
call
hlt
lods
dec
or
xor
inc
cld
call
fwait
mov
add
imul
mov
jnp
ds
lods
mov
mov
das
mov
out
mov
iret
loopne
lods
loope
sbb
imul
jno
in
ret
jae
pop
pop
test
or
js
sbb
xchg
xor
test
aas
cmp
mov
addr16
inc
divb
addr16
inc
jno
mov
mov
mov
pop
and
mov
call
shlb
loop
jnp
mov
mov
cs
sti
aam
fs
dec
loope
or
mov
outsb
pushf
mov
sbb
jne
imul
ret
sbb
mov
das
cmp
sub
lret
incl
xchg
and
das
imul
sub
lcall
sbb
cvtdq2ps
dec
sar
adc
test
add
add
cmpb
icebp
cmp
loop
jg
inc
pop
xor
xchg
or
sub
dec
xor
xchg
xchg
out
mov
mov
stc
inc
adcl
mov
daa
jmp
push
out
add
cli
pusha
negb
lods
mov
cmpsl
fcoms
mov
filds
xchg
insb
call
cs
adc
orb
in
adc
gs
scas
sbbl
xchg
mov
inc
pop
orl
mov
call
dec
dec
movsl
dec
dec
jmp
add
mov
sti
popf
push
popa
packssdw
hlt
xchg
loopne
rol
pop
pop
mov
cmp
movl
insl
enter
repnz
add
mov
aam
jmp
jns
sub
adc
popf
mov
ret
or
mov
mov
jge
fdivl
cmpsl
push
icebp
into
xchg
and
ja
fsubr
pop
in
scas
inc
jp
jle
ja
mov
adc
cld
pop
repz
mov
inc
mov
pop
fildl
jecxz
iret
rcll
cld
and
sahf
xchg
scas
adc
addr16
pop
ds
add
add
stc
int
cmpsl
sbb
inc
push
popa
nop
pop
out
and
dec
lahf
cld
mov
andl
cmpsb
scas
push
aas
sub
xchg
popf
or
bswap
jecxz
jno
lods
or
add
cmc
or
into
into
and
sbb
cmp
mov
insb
js
dec
in
fisubl
jmp
decb
dec
fcomps
hlt
mov
int3
popf
pmuludq
mov
xchg
sarl
adc
filds
ret
cli
mov
sub
or
jecxz
pop
repz
pop
lock
int
adc
lods
insb
mov
repz
or
call
inc
out
pushf
cwtl
xchg
pop
cmpsb
cmc
cs
stc
push
mov
loop
jl
ljmp
jge
or
rol
cmp
mov
mov
ss
lret
mov
fildll
fwait
loopne
dec
clc
cli
pop
xor
sub
jl
pop
push
outsb
mov
mov
jge
xchg
mov
inc
and
inc
daa
mov
and
mov
xor
or
bound
jl
push
fmulp
movsb
xor
lock
in
adc
or
fstpt
imul
sbb
push
mov
stos
lcall
mov
push
andl
adc
xor
inc
popf
jbe
insb
jg
iret
sbb
xchg
mov
sub
ss
bnd
jnp
add
test
jns
into
mov
or
pop
repnz
mov
aad
popa
push
sti
pop
dec
cmp
into
push
cmp
sbb
cmpsl
add
or
or
or
push
mov
ljmp
mov
test
js
orb
lret
fs
mov
inc
int3
aaa
test
dec
fisubs
cmp
in
sub
jae
mov
dec
ss
lcall
jle
jg
xorl
or
cli
xor
fwait
mov
adc
and
sbb
test
and
cmp
cmpl
jp
int3
lcall
ja
mov
sbb
jecxz
push
test
push
jae
rcrl
xchg
loope
cmp
in
imul
je
int3
mov
inc
dec
sti
xchg
mov
in
subl
mov
pop
jp
xchg
cli
movups
xor
movsl
pop
pop
cld
cmpsb
xlat
fcoml
pop
push
gs
xchg
out
pop
cmp
mov
cmpsl
jns
mov
loopne
pop
pop
sbb
jns
mov
ror
push
push
mul
in
loope
sub
iret
dec
movsl
daa
mov
jg
in
cwtl
inc
insl
pop
stc
adc
mov
xor
outsb
jae
cmp
out
cmp
xor
out
inc
pop
lcall
mov
das
imul
imul
push
fstl
les
pushl
add
fst
repz
and
mov
cmp
sbb
fisttpll
mov
pop
cmpb
inc
insb
xor
mov
add
mov
les
je
into
mov
pop
mov
test
hlt
add
sbb
daa
popa
cmp
jl
sub
xchg
test
test
push
dec
mov
lret
mov
fistpl
xor
add
hlt
add
add
out
adc
fistpll
cmpsb
hlt
xor
mov
mov
jl
rol
inc
test
mov
mov
pop
xchg
lods
shll
aas
loopne
insb
jae
mov
adc
mov
dec
fiadds
cmp
dec
mov
stos
mov
or
lds
psubw
jg
std
ja
iret
adc
mov
movsb
pop
leave
lahf
cmp
xchg
sub
xchg
pop
inc
pop
roll
or
mov
xchg
cmpsb
out
xchg
adc
mov
xor
dec
jp
adc
cmc
out
push
in
gs
sub
push
push
add
or
nop
lds
inc
jo
js
in
xor
mov
sub
xor
jecxz
cld
cld
dec
insl
jne
inc
movsl
mov
into
aad
push
sub
push
repnz
int
xor
fs
mov
or
loop
pop
adc
sbb
xor
fsts
add
stos
pop
adc
ret
fildl
shl
xorl
push
or
sub
inc
xor
mov
les
in
xor
aad
pop
xchg
movsb
lcall
or
mov
pop
scas
rcrl
fcmovne
pop
mov
pusha
int
cmp
mov
sti
test
xor
push
jmp
push
dec
out
inc
xchg
fwait
xchg
fbstp
imul
xchg
shll
inc
sub
pushl
pushf
or
or
mov
jnp
xchg
mov
ret
adcl
mov
rcr
sbb
jmp
sbb
pop
clc
adc
mov
lahf
mov
fisubrs
inc
jp
movsl
jg
mov
or
or
inc
cwtl
rcrl
mov
andl
add
xor
pop
cmp
mov
lret
mov
sbb
movsb
sbb
and
jmp
insb
addr16
ja
fistps
ret
lods
jecxz
sub
mov
scas
cli
adc
out
rclb
nop
cltd
mov
dec
in
inc
and
jmp
mov
or
mov
mov
cltd
movsb
movsl
test
outsb
ret
hlt
and
sub
pop
shl
les
pop
adc
cmpsl
mov
xchg
mov
repz
mov
add
scas
or
add
movb
adc
cwtl
test
push
gs
test
jns
jae
sbb
jns
imul
cs
jmp
jnp
fiaddl
adc
dec
ljmp
mov
fisubrs
lock
lock
xor
test
and
xor
lds
out
cmp
dec
in
pop
cld
out
mov
lahf
mov
fcompl
mov
rcl
inc
daa
sub
pop
jp
sbb
ret
bound
xor
jae
imul
das
and
mov
cltd
mov
loope
test
cltd
bound
sbb
and
and
adc
ret
stc
and
out
movsl
outsl
jne
stos
ds
gs
mov
inc
test
in
mov
xor
cmp
dec
je,pt
movsb
icebp
push
call
cwtl
inc
fstl
out
iret
in
xchg
imul
mov
insl
push
icebp
fidivrl
shrl
test
ja
outsb
mov
cmp
push
repz
sbbl
sahf
mov
xor
adc
mov
xor
fs
or
or
inc
psrlq
sbb
dec
inc
movsb
mov
push
test
push
and
sub
pusha
pop
jecxz
pminsw
or
and
fistpl
and
xchg
mov
add
cmpsl
mov
stos
int3
xor
jge
xchg
xor
fstp
fcmove
push
cmpsb
pusha
and
frstor
sbbb
push
sti
push
divl
xor
mov
jle
or
sbb
movsl
add
sbb
jl,pn
or
jns
or
adc
inc
mov
pusha
cmpb
dec
xchg
lods
bound
les
inc
xor
stos
hlt
mov
jbe
adc
pusha
mov
pop
pop
adc
shll
lahf
fistps
daa
pushf
scas
aam
pop
aam
stos
inc
sbb
test
mov
out
inc
out
dec
rcrb
xlat
sti
test
lcall
stc
jg
mov
cwtl
repz
mov
dec
lret
sbb
push
adc
lahf
aas
aaa
add
add
inc
xchg
daa
cmp
mov
and
pop
mov
add
add
add
jbe
shr
add
and
push
in
cwtl
arpl
ljmp
in
fldcw
xor
daa
test
xor
call
push
in
sbb
out
stos
movsb
or
xlat
inc
cmpb
and
mov
dec
adc
popa
out
mov
and
jbe
aad
or
jecxz
sbb
cmp
add
andl
pop
pushf
movsl
sbb
or
sub
xchg
xor
sbb
jnp
stos
roll
rorb
mov
cmp
push
pushf
pop
loopne
mov
es
jge
xor
mov
out
gs
outsb
or
shlb
hlt
mov
jmp
mov
insl
int3
outsl
stc
or
mov
fiadds
adcl
xor
and
imul
test
call
pop
fmulp
pop
jg
push
cmpsb
jnp
test
out
adc
or
leave
pop
les
xor
and
fwait
add
addr16
xchg
cmpsb
lds
ljmp
cwtl
jne
fistpl
lock
adc
push
ret
mov
pop
insl
arpl
cmpsb
hlt
jnp
mov
sti
bound
outsl
in
jns
add
mov
or
out
js
mov
fnstenv
xor
fwait
mov
mov
xchg
mov
ficompl
lods
mov
cld
aam
push
popa
stos
fidivrl
rcrl
xor
lea
rcrb
and
xchg
arpl
mov
pop
mov
pop
hlt
or
push
shrb
sbb
jo
adc
ss
fmull
mov
inc
lock
and
leave
dec
xchg
dec
fdivrs
sub
cli
xchg
call
jbe
lods
mov
rclb
and
mov
xor
mov
push
cmp
es
cmpsl
pop
leave
jg
mov
fstp
pop
xor
clc
lcall
nop
out
mov
and
ds
pop
popa
pop
dec
jae
outsb
sub
sub
lea
shll
fsubl
add
add
pop
popf
mov
jg
stos
jns
dec
jp
and
inc
lods
and
sub
sbb
aam
pop
arpl
jno
sahf
push
mov
leave
ds
mov
jg
out
orl
scas
and
out
cltd
and
mov
xchg
mov
pop
push
test
and
into
xor
mov
mov
or
pop
mov
dec
pop
adc
adc
mov
jbe
push
push
fwait
mov
jo
dec
mov
adc
je
flds
sub
mov
xchg
insl
mov
jne
or
les
lret
insl
or
dec
adc
cmpsl
push
in
sub
sub
jge
imul
or
test
fsub
dec
adc
sub
out
cwtl
out
test
cli
mov
jno
andl
inc
sbb
fdivrl
and
adc
scas
jle
aam
in
dec
pop
inc
mov
cltd
mov
sub
or
movsl
adc
add
mov
push
jo
popf
cmp
cmp
xor
inc
xchg
dec
or
xor
in
mov
repnz
cmp
jp
in
sbb
adc
sbb
push
mov
sub
cmpsb
and
sahf
inc
adc
pushf
cmp
push
xlat
jns
sub
out
aam
addb
nop
test
imul
aaa
pop
fdivrp
push
sbb
cmpb
idivl
sarl
mov
jns
add
jp
nopl
xchg
add
xor
pop
call
iret
mov
mov
mov
sahf
loopne
adc
xorb
ss
xchg
fistpl
and
sub
cltd
in
cmp
and
les
pop
inc
fsubr
loope
xchg
cmp
adc
cmc
cli
out
int
ret
xor
sbb
sbb
out
call
pop
mov
mov
test
aas
movsb
jb
lcall
jb
jno
add
arpl
push
lret
fistpl
sbb
les
mov
in
notl
out
mov
jp
sbb
xor
ljmp
add
sar
data16
mov
out
fimull
fidivrs
mov
add
dec
jle
movsb
mov
push
int3
jne
inc
jg
cld
movsl
outsl
lds
mov
lock
xchg
ror
sub
aad
xchg
sbb
xchg
arpl
cmp
jmp
clc
out
ja
jge
push
cmp
je
movsb
cld
or
xlat
loop
ja
repz
jmp
loop
add
loopne
loope
mov
orb
imul
or
lds
adc
es
outsl
jle
stos
cmp
add
insl
xor
sub
cmp
mov
push
mov
insl
stc
push
push
aas
pop
dec
test
jo
rcrl
sub
sub
inc
test
std
add
jno
lahf
adc
mov
in
ljmp
mov
jnp
pop
cmp
hlt
xor
roll
arpl
fbstp
xor
ret
mov
cli
jge
andb
xor
inc
leave
and
aaa
arpl
movsl
or
cmp
push
ss
inc
sbb
popa
insb
out
adc
std
imul
cmp
js
or
cmp
repz
fcmovnu
pop
mov
ja
mov
das
xchg
inc
jl
pop
and
lahf
insl
mov
mov
hlt
mov
lret
cltd
nop
fdivrl
sub
push
cmpsl
mov
jge
call
fwait
lahf
xlat
jp
push
push
aam
outsb
dec
ret
divb
push
clc
sbb
xchg
push
jne
out
push
sbb
or
push
sti
mov
pop
sbb
mov
loopne
mov
in
jno
decb
enter
sbb
lds
insb
dec
in
pop
jle
imul
sbb
fsubr
xchg
leave
test
pop
out
lds
sbb
mov
cmpsb
xchg
xor
mov
iret
mov
and
iret
stos
std
pusha
add
pop
dec
mov
rcll
dec
pop
mov
mov
pop
leave
movl
jecxz
daa
mov
aad
xorb
std
and
inc
push
push
jnp
pop
pop
fwait
test
xchg
sub
or
push
mov
aaa
ja
mov
add
les
jbe
jb
pop
dec
imul
lock
popf
add
aam
adc
outsl
in
fstpt
fdivr
ret
add
lods
sub
jle
jmp
sub
and
sub
pusha
shrb
scas
xor
shll
mov
fstl
mov
add
push
stos
pusha
stc
movsb
jo
outsb
xor
xor
add
fimuls
pop
push
es
mull
lea
fs
or
pop
adc
xchg
xor
insb
ror
popa
lods
sbb
repnz
test
xchg
out
pop
popa
lret
pop
sahf
bound
add
imul
and
dec
jb
jmp
data16
outsl
add
xor
xchg
xchg
push
test
leave
cld
pushf
test
xchg
add
mov
loopne
out
mov
and
lcall
lea
orb
and
dec
pop
add
setae
cmpsl
push
sbb
add
outsb
inc
out
jnp
es
jl
adc
mov
cmc
jmp
fcoms
addr16
aas
aad
pop
pop
in
cmp
idiv
push
int3
mov
xor
cwtl
push
inc
xor
dec
cmpsl
iret
and
rcr
sahf
lcall
jno
imull
jae
test
out
lcall
into
jb
iret
popf
sub
push
fnstcw
dec
mov
jmp
cli
sbb
andb
jecxz
mov
int3
mov
adc
arpl
roll
mov
es
sahf
dec
inc
out
inc
mov
pusha
jge
mov
xchg
icebp
out
out
push
insl
into
fstpt
xor
jne
mov
xor
dec
cmpsl
cmp
adc
xchg
cmp
orl
cmp
push
movsl
popf
rcrl
pop
mov
hlt
inc
cmpsb
imul
push
cmp
mov
icebp
flds
lods
stos
lods
pop
inc
sbb
mov
jno
jecxz
mov
mov
mov
cs
mov
ja
outsb
rolb
cli
decb
filds
into
and
xor
add
movb
push
add
repz
outsl
pushf
sbb
ss
stos
adc
fistps
add
fs
sbb
jbe
fcmovnbe
xor
or
jmp
cmp
js
aas
pop
jb
scas
jb
sbb
notb
lahf
sbb
sub
iret
cmp
outsl
jecxz
push
insl
out
lret
inc
mov
add
inc
daa
xchg
into
arpl
insl
shlb
cmp
xchg
and
movsl
inc
test
sub
ds
pop
lods
hlt
push
lods
pop
dec
clc
pop
cmp
out
dec
and
popa
xchg
lret
mov
jo
push
pop
cmp
jle
jp
dec
or
mov
shrb
mov
insl
shr
sti
sbb
je
ljmp
into
lods
pop
not
pop
ret
cltd
stos
sub
lea
lods
imulb
adc
std
pop
and
ret
mov
adc
mov
stos
xchg
rol
daa
int3
pop
aaa
scas
sbb
pop
pushf
mov
mov
and
lock
sub
aas
or
pop
mov
aad
lods
xor
fimull
out
fisubl
sbb
aaa
inc
cmc
mov
jle
sub
aaa
push
imul
adc
inc
arpl
jle
pop
dec
in
inc
movsb
out
aas
in
ret
arpl
divb
or
xchg
pop
pop
loopne
sbbb
icebp
mov
aad
mov
xor
scas
stos
sbbl
int
loopne
push
int
ret
pop
jge
cmc
cmc
push
test
lret
enter
jmp
in
jae
aam
testb
outsb
enter
les
iret
mov
dec
sbb
cmp
push
js
sbb
dec
xchg
cs
inc
testb
inc
pop
mov
in
inc
popf
in
mov
ja
sub
lret
in
cs
shll
mov
dec
addr16
rolb
jmp
push
icebp
sahf
or
mov
ret
insl
enter
inc
and
and
leave
and
xor
ja
inc
rcll
addr16
adc
stos
loope
fbstp
mov
and
mov
xchg
xchg
adc
js
mov
push
insl
ss
insb
stos
mov
sub
shrl
adc
movb
je
imul
sub
cs
push
add
or
lcall
test
dec
cmp
int
cwtl
sub
push
sub
jne
add
push
cltd
aad
sub
gs
mov
icebp
loop
cmpsl
mov
jmp
inc
and
loopne
xchg
enter
add
mov
arpl
push
mov
adc
adcl
insl
sub
pop
sbb
and
clc
jp
dec
rcll
inc
aas
cmp
mov
rolb
or
scas
leave
mov
xor
scas
mov
loopne
xchg
inc
mov
xor
mov
gs
sbb
or
sub
or
adc
sbb
jl
inc
push
xchg
push
mov
or
push
sub
push
xchg
fwait
or
loope
mov
lds
jle
lret
in
add
cmp
inc
add
es
cmp
mov
push
jp,pt
pop
push
loopne
ds
sarl
push
cmp
dec
sti
push
jns
mov
adc
cmp
dec
ret
mov
lea
mov
sbb
out
movsl
cmp
int3
and
shlb
aad
insl
std
pop
mov
xchg
jl
insb
enter
xlat
fsubs
add
push
lcall
push
mov
push
and
and
sti
mov
stc
inc
mov
fdivl
pop
jle
push
outsl
or
or
pop
or
push
pop
and
cmc
jns
les
loop
sub
xorb
data16
dec
sub
jns
es
fsubl
xchg
jg
cmp
lock
mov
adc
rorl
jns
aad
add
clc
scas
mov
sub
aam
aas
out
out
popf
fimull
cmp
js
xor
mov
add
fldt
mov
push
pop
in
iret
sbb
loopne
jle
inc
inc
shll
inc
pop
push
rcrb
mov
call
pop
js
out
dec
popa
insb
xorl
xor
call
pop
insl
into
rorl
mov
hlt
adc
mov
push
enter
je
push
fidivs
push
pop
aam
sub
xor
sbb
loop
adc
mov
mov
cmp
iret
xor
das
xchg
jge
push
scas
xchg
gs
xchg
xor
cmp
sbb
mov
test
loop
std
out
push
mov
pusha
mov
mov
popf
lahf
add
push
inc
inc
add
add
add
adc
push
std
and
fwait
mov
add
hlt
add
add
and
ss
mov
jl
cmp
inc
popf
insl
pusha
dec
jg
stos
mov
xchg
loope
jno
xchg
cld
into
cmp
test
mov
rorl
out
push
xchg
shll
pop
imul
subl
inc
cmp
xor
push
inc
mov
and
xor
jl
inc
imul
sub
jmp
fcmovnb
jmp
std
leave
push
lock
leave
dec
ficoml
pop
jno
stos
test
or
notrack
lret
mov
push
mov
cs
push
push
mov
enter
inc
cmp
or
push
cmp
subl
jecxz
dec
xor
scas
xchg
lods
call
jb
push
push
cmp
dec
loopne
in
stc
insl
mov
xchg
jle
popa
push
xlat
addb
inc
jp
and
lods
cmpsb
test
repnz
sub
faddl
xchg
dec
jmp
fcmove
pushf
jl
addr16
test
lahf
sbb
bnd
sahf
add
dec
push
sar
sub
fs
testb
iret
outsb
pop
push
add
inc
subb
idivb
idiv
cld
ficomps
cmp
or
sub
das
sub
out
popf
outsl
out
test
popf
mov
ljmp
movsb
outsb
ljmpw
sbb
cmp
mov
or
ror
ficompl
xorb
push
fisttps
lcall
jb
stc
jo
mov
inc
inc
out
test
adc
lock
jecxz
ds
cmp
dec
bound
unpcklps
cmp
cmp
loopne
inc
call
pusha
enter
lods
fbstp
mov
call
test
or
mov
sbb
rol
sbb
ficoml
imul
jg
push
mov
push
jae
dec
push
lret
fisttpll
and
add
xchg
push
leave
ja
pop
out
scas
in
xor
cmp
or
mov
scas
jle
mov
mov
dec
jecxz
rorb
pop
inc
inc
arpl
add
mov
jns
out
jp
mov
iret
subb
test
xchg
call
ret
dec
repz
inc
jmp
scas
jg
fcomps
iret
sbb
std
adc
and
adc
and
fistpll
filds
testb
lods
stc
push
pop
xor
lahf
stos
or
pop
cmc
lret
sub
mov
pop
popa
inc
mov
dec
inc
push
popa
call
fincstp
dec
cmp
out
ret
mov
adc
and
test
push
xor
bound
pop
leave
cmpsl
test
mov
fisubrl
pop
push
xor
aam
mov
jne
sub
repnz
cmp
mov
clc
lahf
iret
aad
jnp
mov
push
enter
mov
xlat
adc
scas
sahf
jg
popf
js
sbb
jge
lret
pushf
mov
sbb
in
iret
xlat
inc
xlat
sar
inc
ja
pop
add
sbb
lcall
rcrl
aad
call
jecxz
jb
mov
or
lods
insb
gs
daa
adc
mov
xchg
les
mov
xchg
dec
cli
dec
dec
dec
and
xchg
outsb
or
mov
insb
push
pop
sub
rorb
pushf
or
iret
and
stos
aaa
push
mov
test
cmp
push
insl
icebp
sbb
gs
inc
mov
imul
lock
inc
dec
repz
fistps
xor
out
add
movsl
popl
inc
push
movsb
xor
add
and
test
pop
adc
dec
mov
rcrl
jnp
mov
shl
decl
xchg
inc
push
fidivrs
ret
push
cmp
pop
and
pop
or
or
mov
iret
push
notb
xchg
push
jne
pop
fs
std
dec
fnstsw
fiadds
fsts
aad
int
gs
xlat
add
rep
and
cmc
inc
pop
pushf
push
call
flds
out
pop
mov
push
cltd
jp
or
or
sub
cmp
add
lock
xor
call
ja
xor
xchg
adc
xlat
nop
xor
xchg
jnp
mov
loopne
and
mov
sbb
mov
addb
bswap
test
dec
or
clc
lcall
add
push
mov
push
lods
add
cltd
push
leave
cmc
test
imul
dec
popa
sahf
mov
loop
cli
and
into
or
ret
and
sub
clc
andb
shrb
push
push
jbe
mov
push
fisubrs
mov
jmp
cltd
mov
cmp
insb
fnstcw
or
sti
out
test
cmp
and
jo
ja
xor
dec
cld
loope
mov
xchg
or
ljmp
outsb
andl
lahf
je
cmp
data16
mov
sub
jp
fs
dec
xchg
or
cmc
shlw
xlat
sub
pop
adc
jge
xchg
jbe
or
call
mov
mov
xchg
shll
jecxz
push
or
shrb
sbb
std
and
lcall
insl
and
push
popf
out
xchg
fcmovnb
adc
testl
push
dec
and
add
cmpsl
insb
dec
imul
idivl
sahf
push
mov
dec
ljmp
stc
xlat
cmc
cmpb
or
and
dec
push
mov
xor
inc
pop
leave
jg
subb
bound
aas
call
xchg
sbb
push
sarl
fidivl
stos
das
fwait
jbe
push
dec
cmpsb
call
aad
fidivs
and
and
mov
add
inc
enter
stos
add
jl
push
pop
je
cmpsl
mov
sbb
and
test
add
sbb
std
cld
in
sar
cld
inc
sub
dec
insb
shrl
add
mull
hlt
shll
popf
dec
or
jnp
pop
xor
xor
fptan
js
mov
das
inc
jae
pop
cmpsl
mov
adcb
jg
out
data16
lret
mov
stc
xchg
add
idiv
inc
out
jo
es
pushf
fwait
jl
fwait
xchg
nop
data16
mov
rorb
insl
popf
rorb
jo
lds
add
pusha
jnp
push
int3
addl
mov
jecxz
sahf
xchg
rcrb
aas
sub
jge
jnp
sti
dec
mov
call
inc
cwtl
mov
jbe
das
xor
or
cmp
js
pop
cmp
jo
mov
and
in
mov
leave
movsb
pop
sbb
add
popa
lds
fsubp
push
or
pushf
test
decb
scas
mov
out
mov
mov
sub
mov
and
jo
out
popf
and
dec
fs
je
or
out
cwtl
and
and
stos
daa
movsl
push
push
pop
pop
or
xchg
nop
mov
xor
stc
int3
jb
mov
xchg
popf
xchg
in
pop
inc
jl
push
sbb
imul
arpl
inc
outsb
inc
fwait
stos
xchg
sub
cmp
test
or
aad
negb
cmc
mov
adc
pusha
mov
dec
adc
sub
mov
xchg
mov
leave
xor
cmp
popf
mov
aas
xchg
imul
lcall
sub
dec
enter
bound
mov
psllq
loope
xchg
and
cmpsl
fsubrs
test
push
popf
out
aam
into
cwtl
nop
pop
add
cld
mov
jmp
stos
ss
xlat
push
inc
xchg
sbb
inc
sub
pop
repz
push
popf
push
dec
fldt
mov
scas
inc
repnz
test
mov
push
fisttpll
adc
and
add
jle
dec
shl
in
jl
cmp
scas
scas
xor
push
jge
cmpb
ja
mov
mov
and
gs
cmp
movsl
mov
add
iret
clc
pushf
push
inc
test
pop
xchg
sbb
pop
fisubrl
testl
js
mov
push
andl
shll
mov
cmp
cwtl
out
stos
push
xchg
mov
mov
into
add
adc
add
adc
shlb
jg
ret
fstl
ret
lahf
xor
mov
mov
add
mov
arpl
inc
pop
jns
push
repnz
test
shrb
loope
or
imul
mov
fnstenv
dec
xor
sub
cmpsl
xlat
shlb
and
lea
loopne
divb
xchg
mov
mov
add
scas
or
push
or
jns
insb
jne
ficompl
add
add
fwait
push
pusha
outsl
out
jg
cmc
or
shl
fildl
add
add
or
xchg
outsl
dec
ss
daa
js
xorl
adc
shll
dec
and
xlat
and
out
jge
inc
xor
dec
bound
push
std
insb
filds
aam
adc
rcll
dec
pop
xchg
sub
or
fs
add
in
inc
jae
sbb
sub
ljmp
xorb
sahf
and
xchg
jge
xlat
in
test
dec
pop
mul
push
xchg
sub
mov
push
push
sub
adc
cmc
and
sti
inc
or
jl
xchg
in
add
jle
ja
mov
test
je
repz
in
jle
adc
dec
fisttpl
adc
nop
fs
mov
pushf
pop
andl
popf
sub
or
cmpsb
add
cmp
and
je
aaa
pop
inc
add
arpl
mov
adc
inc
cmp
test
cltd
enter
mov
push
lods
pop
aaa
pusha
or
push
mov
push
inc
jne
cld
pop
cmp
sbb
shl
push
jbe
outsb
popa
xor
icebp
jae
jecxz
mov
stc
jp
mov
lds
jns
mov
pop
xchg
xchg
adc
adc
xor
cld
pop
fldenv
insb
aas
int
enter
nop
add
loope
mov
popa
fistps
lret
loop
in
mov
rcr
imul
jb
mov
rcrl
pop
push
jp
cmp
loop
out
pusha
xor
imul
andl
out
ss
cwtl
cltd
adc
inc
sbb
jmp
jge
mov
mov
fiaddl
rorl
adc
enter
jb
or
hlt
in
dec
out
pop
inc
jns
ret
je
cvtps2pi
fsubrs
push
xchg
xchg
pop
lds
js
das
push
ret
jnp
fmull
jae
in
mov
fists
jecxz
das
or
sbb
mov
mov
aad
add
and
adc
or
and
xor
ja
jmp
insb
or
sub
adc
cld
jno
pop
mov
xchg
fisttps
cmp
fsubrl
push
bound
lock
xor
push
or
push
lock
push
inc
imul
adc
xor
cltd
fmull
dec
mov
pop
fwait
or
xor
mov
push
cmpsl
addr16
add
mov
incb
xchg
stos
bound
sti
iret
dec
ret
sbb
jle
mov
mov
sub
pop
add
pop
in
mov
dec
addb
cmp
cmpsl
adc
pop
sbb
xor
xor
les
popf
mov
xor
cmc
cmovl
cs
mov
mov
enter
lods
adc
jae
test
out
and
xchg
jae
xor
aas
out
dec
fildll
icebp
and
xlat
das
shl
div
mov
nop
cmp
xor
mov
adc
fisttps
addr16
rcll
and
outsl
out
inc
ds
or
loope
push
mov
push
ss
mov
inc
jmp
sti
mov
leave
sub
stos
lods
fdiv
mov
or
iret
mov
ljmp
clc
mov
jo
gs
sub
sbb
xor
into
adc
xchg
add
jne
lahf
pusha
jo
mov
out
push
sbb
out
mov
xor
inc
dec
cmpsb
frstor
jne
imul
test
add
cmp
hlt
xchg
lcall
mov
xor
pop
test
scas
xchg
dec
inc
mov
xchg
lock
or
stc
dec
scas
nop
stc
das
inc
enter
jg
movsb
cmp
and
popf
pusha
xor
mov
adc
inc
jnp
scas
stos
aam
cmp
loope
mov
icebp
outsl
cmpl
push
lret
repnz
enter
adc
shr
pusha
xchg
jge
xor
add
add
sub
inc
rclb
inc
lret
in
jno
dec
popf
fbstp
push
cmp
xchg
or
cld
cmp
dec
inc
and
push
xor
addr16
in
pop
mov
jl
push
mov
cmp
pusha
je
sub
test
mov
lea
movlps
push
fstl
add
iret
ja
jns
and
movsb
mov
les
cmp
adc
inc
lock
dec
mov
in
mov
xlat
lods
and
lods
or
add
add
add
outsb
out
lds
push
or
hlt
add
add
and
dec
movsl
scas
sbb
in
xor
lret
dec
and
sbb
jno
jo
lcall
data16
xchg
jns
mov
mov
lods
test
or
and
push
add
mov
push
sbb
sbb
mov
jo
dec
xor
popa
nop
xchg
fdivrp
ret
inc
lods
orb
pop
pshufw
sub
push
adc
cmp
ficomps
xchg
sbb
xor
mov
dec
push
fisttpl
ljmp
out
lods
mov
add
rcr
subl
push
push
add
cmc
fsubs
les
push
jno
mov
sarl
leave
and
jmp
je
mov
push
call
xorb
mov
ja
cmp
pop
mov
pop
pushf
notb
lock
cmp
in
push
test
xor
jp
aad
xor
outsb
add
shrl
stos
jbe
inc
outsb
les
imul
aad
xchg
cltd
lock
xchg
je
into
test
rorb
add
lret
cmpsb
cmpsb
imul
xor
mov
xlat
sub
xorl
xorb
aad
sub
sub
inc
rcrl
sbb
lock
data16
or
and
stos
aam
cli
pop
outsb
gs
or
pushf
mov
stos
pop
mov
lea
xchg
sub
lea
mov
push
lahf
jmp
inc
mov
fs
add
adc
popa
mov
fidivs
push
jl
bnd
and
and
push
mov
fimuls
cs
mov
jp
mov
xor
inc
rcll
imul
inc
sub
shll
loopne
and
and
popa
lcall
sub
and
rolb
lahf
adc
adc
cmc
inc
mov
es
repz
sbb
dec
push
or
jae
push
add
and
xchg
mov
push
sbbb
cld
mov
adc
cmp
iret
mov
xor
push
enter
in
pop
or
jp
imul
dec
js
insl
sbb
xchg
xor
fdivl
sub
jno
negl
push
es
jnp
pusha
jmp
xchg
ficoml
aam
xlat
mov
cmp
dec
iret
push
or
inc
dec
sub
sbb
jmp
dec
shlb
in
cs
and
imul
mov
mov
ljmp
sub
and
xchg
push
ja
mov
adc
into
jo
push
in
call
out
xor
and
cmp
sub
je
jecxz
fcmovbe
push
fsubrp
das
sub
or
sub
fisubrl
mov
xor
std
cmp
inc
or
adc
dec
cmc
sbb
movsl
addl
add
dec
daa
jb
out
popa
movsb
jbe
hlt
fsts
add
shlb
mov
dec
ret
and
adc
cld
add
or
div
mov
xchg
adcb
xor
mov
jge
sub
out
fs
ja
jg
cld
imul
xor
jb
inc
mov
add
mov
lock
aad
jno
sarl
push
mov
idivb
jno
dec
push
push
cmpsl
outsb
pop
sub
mov
pop
insl
mov
inc
or
cs
loop
aad
and
fistpl
pop
push
add
outsl
rcrl
push
out
or
sub
xchg
lds
sahf
xchg
hlt
mov
dec
outsl
push
cld
stc
xchg
push
push
mov
mov
pop
push
js
sarl
cli
or
sub
mov
jno
popl
in
out
dec
cmp
mov
out
cmp
dec
call
cld
aam
sub
cwtl
lds
sbbb
lds
xchg
aad
push
ret
int3
lret
inc
in
icebp
jno
push
and
pushf
or
cmp
or
mov
popa
mov
icebp
xchg
push
fisubrl
jne
stc
test
repnz
leave
adc
adc
test
add
lret
lods
xlat
sti
mov
out
or
add
hlt
add
add
hlt
icebp
loop
xor
loopne
jecxz
or
ret
cmpsl
notb
aam
add
outsl
gs
jbe
push
pop
lods
movsl
lcall
pop
pusha
mov
aam
dec
mov
mov
cmp
pop
adc
rolb
adc
add
fwait
mov
xor
ds
xchg
aad
pop
jnp
xchg
xor
sarb
fsubrp
push
jmp
push
jne
inc
push
cmpsb
push
cltd
in
in
sub
pop
pop
pusha
lods
ja
mov
std
and
add
dec
xlat
lahf
jb
cmp
fnsave
xchg
push
sub
rcrb
mov
cmp
popf
dec
int
jl
jno
inc
into
outsb
sub
sbb
js
push
xor
pop
movsb
sub
jnp
aad
test
and
movsb
int
add
inc
jae
mov
and
inc
fsubrl
ss
sub
out
repnz
aad
dec
sub
mov
add
loope
xor
mov
pop
int3
mov
push
adc
mov
leave
cli
push
test
loope
rcrl
sbb
add
pop
lods
std
mov
add
or
pop
hlt
add
mov
test
mov
fnsetpm(287
out
push
sbb
out
mov
aas
mov
sti
cmp
sbb
aam
les
movsb
push
ljmp
lods
xchg
test
lods
fdiv
in
push
mov
adc
dec
adc
out
xor
cltd
lea
xlat
push
popa
jae
sub
sbb
ds
add
xor
sbb
jne
cwtl
rorl
pop
add
and
fstl
into
cmpsl
clc
push
mov
int
int3
pop
inc
dec
ficoms
in
push
push
xlat
and
loopne
pop
xchg
idivb
adc
sbb
or
shr
stc
out
push
xchg
mov
sti
sbb
dec
jno
stos
scas
inc
adc
imul
mov
sahf
outsb
mov
dec
push
jne
pop
hlt
call
addr16
std
neg
xchg
jl
hlt
clc
jne
xchg
pop
aam
jns
imul
fbstp
inc
outsl
std
mov
imul
call
jmp
pop
hlt
cli
pop
rcr
popa
mov
arpl
jle
lret
or
mov
adc
adc
call
pop
cmp
add
shr
push
add
mov
push
ds
repz
mov
fsubs
add
pop
fsubp
jne
mov
cmp
idiv
stos
xor
andb
rclb
xchg
xor
inc
scas
pop
push
aas
push
ret
pop
xchg
scas
inc
xchg
push
ficoml
inc
jl
mov
jae
ss
mov
rol
xchg
mov
or
popfw
ss
fwait
sarl
movsl
mov
mov
aas
popa
enter
out
mov
sub
cmp
sub
movsl
fstl
mov
xorb
sbb
xchg
xor
adc
adc
loope
lock
cmp
mov
and
mov
shll
xor
mov
mov
sub
mov
xor
call
stc
and
loop
test
lock
movsl
js
xor
rol
or
xor
les
rcll
gs
mov
out
push
mov
push
imul
jmp
lret
jo
clc
lods
jns
scas
leave
push
dec
cmp
cmpl
mov
pop
ficompl
push
lret
sbb
and
pop
mov
jb
cmpsl
jl
cmpsl
ja
imul
sub
xchg
mov
mov
cwtl
cmp
adc
pop
cwtl
pop
lret
imul
push
js
sub
bsf
rorb
cmp
adc
dec
addr16
xchg
out
xor
cmc
insb
insl
add
shll
mov
mov
roll
mov
inc
mov
dec
xor
and
sub
mov
mov
dec
sub
subb
dec
dec
sub
and
nop
xchg
rorl
adc
divl
inc
hlt
imul
and
movsb
jmp
push
cmc
ds
mov
sbb
fsubs
scas
pop
lret
clc
into
pusha
repz
jecxz
in
ds
fists
pop
aas
xchg
xor
rolb
jge
into
adc
lahf
and
movl
rcll
movsb
push
fwait
lcall
add
jno
loop
bnd
fcomi
mov
mov
fiaddl
add
add
add
inc
adc
mov
fisubs
mov
xchg
fsub
rorb
fcom
xchg
aas
push
insb
xor
push
stos
dec
xchg
stos
stos
pushf
push
popf
add
or
or
xcrypt-ofb
cmpsl
outsl
out
bound
sbb
sbb
subb
sahf
out
lock
aad
cmpsb
jno
xor
and
test
mov
jecxz
outsb
sahf
inc
in
adc
mov
or
jge
adc
cs
fisttpl
jg
mov
ret
js
xchg
xlat
cmpsb
mov
jmp
test
xor
mov
scas
jl
and
movq
inc
sbb
mov
mov
add
dec
dec
pop
mov
sbb
cmp
repz
and
ja
into
mov
aas
jnp
and
test
add
insb
scas
fisubrs
mov
ficoml
movsb
or
inc
jecxz
or
jbe
mov
pop
xor
mov
add
add
jmp
sarl
push
mov
cmc
stos
add
rclb
int3
xor
nop
fucomp
push
adc
xor
clc
scas
jns
clc
lcall
daa
lret
imul
jmp
fistl
loope
mov
stc
or
mov
push
push
ljmp
inc
cmp
inc
sub
add
dec
imul
cmc
mov
sub
jp
inc
cmpsb
mov
pop
inc
push
push
xor
arpl
icebp
in
dec
inc
aam
sub
cmp
rorb
scas
out
lahf
and
repnz
fidivs
rcll
push
sbb
lea
out
add
lcall
jmp
xor
dec
push
xchg
in
xchg
push
mov
leave
pop
popa
int
lret
cmp
pop
push
stos
pop
jbe
popf
jb
sbb
push
mov
pop
fstps
inc
int3
jae
pusha
ss
call
repnz
insl
cli
xor
jmp
and
scas
xor
mov
ret
or
nop
adc
sbb
sti
mov
jmp
ja
push
jmp
cmpsb
call
jo
sub
jae
lds
shl
out
adc
fstpt
pop
and
into
test
lcall
pop
cmpsl
insl
and
scas
das
and
out
push
pop
cmp
xchg
mov
jno
enter
sub
iret
xor
shr
mov
ds
dec
je
adc
mov
and
pop
dec
fisubs
cmpsb
push
data16
ret
and
mov
fcoml
mov
test
xor
push
ljmp
adc
fcmovnu
fldenv
xor
add
dec
pop
xchg
sti
sbb
jle
mov
ljmp
and
cmc
cmp
mov
sub
xchg
add
aaa
mov
enter
inc
mov
outsl
add
mov
mov
cmp
add
daa
dec
imul
mov
jecxz
cld
aam
mov
adc
setbe
out
push
mov
or
dec
xor
testl
dec
push
xchg
repz
sbb
sahf
and
fs
lods
dec
push
aad
pop
fwait
and
lods
xchg
inc
or
leave
mov
push
mov
das
add
mov
jnp
push
cld
fbld
in
fdivs
sti
dec
cmp
jne
in
divl
mov
adc
sbb
sbb
ficompl
scas
cmp
push
and
push
pop
xchg
aam
mov
scas
clc
dec
pop
adc
aaa
insb
mov
popl
in
jne
adc
sub
shl
push
out
stc
dec
repz
dec
push
pop
jbe
ret
xor
add
mov
mov
test
mov
lahf
nop
dec
lcall
pop
mov
xor
inc
fstpl
jecxz
or
jmp
dec
lea
sarl
mov
aad
mov
jno
pushf
add
insb
les
add
pop
ja
iret
mov
sbb
cmpsb
jp
xchg
repnz
filds
pop
aas
push
loopne
pusha
fidivs
adc
cmp
shrl
mov
push
test
fsubs
adc
and
leave
cmp
in
and
cmpsb
fcoml
push
cwtl
xchg
aad
aad
clc
sub
sub
in
scas
sbb
jb
push
mov
add
add
andl
ss
in
inc
xor
filds
add
add
add
dec
outsl
fsubl
inc
in
stc
inc
shr
popf
clc
es
push
cmp
inc
or
jmp
pop
and
faddl
dec
js
es
test
and
sahf
out
jns
xor
fmull
dec
pop
in
inc
and
jne
xor
fldcw
jle
ret
cmp
add
push
xchg
fwait
test
jnp
clc
xchg
pop
sub
add
testb
jbe
sbb
cmc
adc
and
xor
inc
sub
and
mov
repz
dec
dec
sub
adc
add
adc
xchg
shrb
jne
sub
arpl
add
test
push
imul
enter
dec
push
and
push
dec
les
inc
movsl
repz
sbb
pushf
mov
cmp
sub
xchg
cltd
nop
or
adc
dec
out
ret
xchg
das
fiaddl
outsl
xchg
mov
jo
jecxz,pt
shl
test
scas
fwait
repz
imulb
inc
add
aam
jp
sub
mov
repz
lds
clc
in
jae
jg
jp
pusha
scas
insl
insb
pushf
repz
dec
cmp
adc
cmpsl
pop
arpl
jne
fnstsw
inc
sub
aas
aas
aad
push
in
sub
push
jns
push
in
movsb
popa
cmpsl
lock
js
out
adc
sti
ja
adcb
ja
cmp
mov
adc
enter
mov
mov
and
mov
jns
insb
fsubl
jo
mov
jns
inc
or
add
pop
sbb
in
repz
push
int3
sub
mov
mov
or
repnz
nop
popf
jle
dec
cmpsb
insl
in
push
loop
mov
int
aad
and
jle
in
out
pop
in
fwait
mov
bound
shlb
insl
in
fnsave
push
push
inc
fmull
push
mov
mov
jmp
cmp
scas
stc
sbb
in
xchg
and
push
or
insb
sub
cmpb
out
stos
jmp
mov
push
daa
fdivp
sbb
js
dec
lock
mov
sahf
clc
xchg
inc
in
mov
mov
mov
sti
cmp
jl
ja
or
js
enter
cmp
jp
aam
mov
les
inc
out
sub
jmp
clc
lock
je
push
aam
cld
adc
test
shlb
ror
sbb
pop
outsl
dec
scas
cmc
inc
jne
repnz
cld
inc
jmp
iret
sbb
lahf
cmpsl
leave
in
inc
cld
xchg
cmpl
push
and
and
hlt
adc
lds
adc
inc
sbb
jg
or
je
mov
sub
pusha
sub
inc
pop
and
movl
mov
shrl
xchg
jmp
aaa
dec
cmp
sbb
shll
cwtl
pushw
jp
pop
mov
mov
sub
pusha
sti
xor
push
mov
in
mov
enter
ror
pushl
jb
int
lret
iret
mov
dec
scas
call
push
cmp
lcall
sbb
jae
fdivrp
cmp
cs
shr
leave
or
int3
out
fists
pop
mov
test
inc
push
fstps
mov
cmp
rorl
addr16
jle
jecxz
xchg
stc
dec
loopne
cmp
loope
cli
add
or
sbb
xorb
jne
aad
aaa
mov
imul
lcall
adc
cmp
and
rcrb
cltd
ss
into
mov
stos
mov
and
imul
add
cltd
and
mov
and
es
sbb
pushf
insb
fistps
pop
mov
and
cmpsb
push
sbb
mov
ds
cmp
xchg
mov
cmc
daa
pop
pop
inc
mov
push
lock
sbb
prefetcht1
data16
push
daa
inc
push
xchg
in
and
add
xor
cmc
mov
out
inc
daa
xor
sbb
adc
or
push
ja
inc
shrb
std
test
inc
repz
jecxz
sbb
mov
and
add
adc
sar
pusha
sbb
push
lods
std
adc
es
pop
adc
mov
add
pop
jno
es
std
jbe
addr16
pop
movsb
mov
xchg
pop
pop
fbstp
cmp
dec
mov
add
add
roll
lock
in
add
hlt
add
add
int
ja
pop
lcall
mov
jno
cmpl
inc
jmp
mov
sahf
push
ja
add
scas
adc
scas
sbbl
push
jnp
lock
jmp
dec
aas
mov
dec
mov
test
sub
rolb
outsl
lcall
lcall
lea
or
jmp
incb
or
les
lds
hlt
inc
inc
shrb
xchg
mov
push
xchg
cmc
jnp
lods
add
test
test
xlat
push
jmp
addr16
mov
arpl
xor
mov
in
pusha
test
jbe
loopne
je
or
xor
loop
bound
int
pop
cs
pop
adc
inc
mov
mov
in
dec
mov
sarl
pop
je
push
jo
or
imul
cs
je
jbe
xchg
ss
inc
and
xchg
push
inc
fistl
leave
jno
and
mov
mov
data16
xchg
loopne
test
push
push
mov
mov
jg
xor
repnz
idiv
mov
lock
in
and
leave
daa
jno
push
add
pop
pop
mov
xlat
jno
dec
add
lock
mov
push
sub
mov
das
imul
inc
cmp
out
outsl
mov
mov
imul
xor
adc
jne
rorb
jnp
mov
adc
sahf
sub
jb
fdivs
test
inc
adc
pop
movsl
std
cmc
cmpsb
and
fstl
and
into
mov
loopne
popf
inc
jp
adc
sahf
fisubrl
mov
xchg
fwait
cmpsl
scas
iret
fistpll
inc
in
sbb
pop
test
pusha
inc
mov
dec
loopne
and
stos
dec
pop
in
test
stos
int
jg
fmulp
pop
leave
sbbb
adc
dec
and
cmp
arpl
adc
pop
stos
mov
push
or
adc
rcr
and
scas
cli
jbe
cmpsb
jmp
jnp
fwait
mov
cmp
and
add
lods
cmpsl
std
xor
das
jmp
pop
jb
mov
dec
push
push
mov
mov
iret
js
notl
pop
int
push
add
sahf
and
adc
cmp
imul
add
lock
stos
lret
sbb
ret
rcrl
mov
rcll
dec
repnz
mov
fdivs
adc
gs
rcrb
adc
jb
pusha
cmpsb
jmp
das
mov
cmp
add
sbbl
lret
add
cli
in
inc
mov
stos
lret
lods
test
popf
mov
and
dec
adc
bound
xchg
call
fidivrs
ret
lahf
cwtl
rcrb
dec
sarb
adc
jno
aam
sbbl
pop
mov
jmp
std
pop
insb
dec
sub
repz
lods
dec
outsl
bound
into
and
repnz
dec
fs
fistps
jle
and
shll
int
jp
jno
stos
repz
bound
add
cmp
sub
jle
fwait
mov
lea
xchg
fcoml
jg
push
push
rcrb
pop
pop
fcomps
fldcw
xor
popa
jecxz
or
lcall
and
les
addr16
mov
mov
adc
mov
or
xchg
sbb
lahf
mov
loope
clc
test
jo
adc
cld
push
mov
scas
push
aas
inc
fdivrs
and
addb
lret
das
movsb
jg
sub
jecxz
jecxz
jne
mov
jnp
rcrl
push
jl
cs
adc
inc
mov
loopne
int3
insb
in
jle
mov
lcall
xor
or
push
sub
fwait
cmp
pushf
test
jno
popf
jbe
inc
jecxz
or
jmp
fs
xchg
inc
dec
jle
icebp
push
mov
mov
arpl
popa
out
sbb
aad
xchg
loop
daa
test
fimuls
mov
in
outsl
imul
mov
fstpt
lods
das
mov
and
mov
fisubl
mov
mov
mov
jmp
popa
pop
push
aad
hlt
lods
sub
cmpsl
add
push
pushf
in
mov
mov
add
add
xchg
std
repz
inc
test
xor
add
add
add
scas
sub
shlb
and
movsb
out
scas
test
cs
cmp
cmpl
dec
xchg
es
sub
xchg
bound
push
shlb
inc
push
cmp
xorl
adc
fadd
stos
jno
in
push
mov
mov
xlat
cmpsb
push
jns
xor
insl
cmp
xchg
fstpl
pusha
mov
jl
aam
xchg
ret
pop
xchg
in
pop
sbb
adc
and
mov
push
std
into
dec
stc
dec
mov
pushf
rclb
sbb
xchg
and
pop
jo
xchg
aad
mov
test
sbb
aad
adc
sbb
shrl
dec
xor
inc
inc
ds
mov
inc
sub
adc
shlb
sbb
js
dec
adcl
jne
add
cmp
inc
lock
popa
pop
mov
lods
js
repz
flds
es
push
cwtl
or
rolb
iret
jecxz
mov
imul
cltd
lret
loopne
enter
push
mov
dec
adc
mov
dec
inc
addr16
mov
adc
loopne
add
push
insb
xor
jecxz
scas
cmpl
fnstenv
cmp
out
push
xchg
push
sub
sbb
ss
mov
subb
cli
repnz
mov
insb
pop
out
dec
lret
push
push
fisubl
addr16
mov
sbb
cmp
lret
mov
sbb
jae
add
shll
sbb
jae
sahf
sub
adcb
stc
cmp
sub
nop
mov
mov
lds
xchg
test
push
test
in
push
jecxz
xor
jl
xchg
jge
stc
add
push
jg
test
push
push
movsl
mov
mov
repnz
daa
push
xchg
sarb
out
nop
aad
outsb
filds
mov
arpl
jns
cli
out
into
repz
sbb
cld
sub
push
fisttpll
xchg
add
mov
test
jne
xchg
dec
or
arpl
jno
mov
jl
xor
shlb
dec
out
test
loop
loopne
fisttpl
sub
mov
cmp
call
test
sahf
lock
dec
jecxz
fs
out
pop
mov
cmp
or
xchg
mov
adc
sub
sub
and
data16
popa
sub
mov
dec
test
adc
sub
stc
jge
out
push
jle
jo
lea
xor
lock
std
push
arpl
lcall
mov
fildll
sub
lret
or
mov
outsb
shll
test
xchg
sub
imul
in
or
add
and
mov
rcrb
daa
out
xor
mov
jg
xchg
daa
aam
add
inc
jl
lock
dec
push
cmp
xchg
mov
dec
pcmpgtd
int3
cmp
mov
mov
inc
ljmp
ficoms
jmp
popa
push
push
push
fs
mov
xchg
pop
mov
cwtl
xchg
push
into
sub
pushf
mov
pop
sbb
repz
movsb
dec
leave
ss
cld
mov
cmp
or
lret
sub
mov
sub
add
pusha
mov
kmovw
stos
xchg
mov
lock
inc
inc
fidivrs
sahf
out
pop
fistpl
pop
inc
das
or
fsts
sti
jmp
cwtl
cmp
nop
das
movsb
loop
cld
sahf
mov
jecxz
lods
incb
outsb
pop
mov
ljmp
sub
mov
push
push
popf
lea
out
jle
sbb
lock
cmp
mov
add
lcall
out
push
dec
fdivrs
mov
adc
inc
mov
cwtl
push
es
es
sub
pop
or
cli
out
push
sbb
and
hlt
mov
pop
mov
aas
frstor
ss
fwait
js
rcll
pop
mov
imul
xchg
xorb
mov
das
test
sub
lret
mov
mov
inc
outsb
ja
and
sub
jns
pushf
mov
xchg
adc
mov
iret
pop
pop
sub
scas
and
popf
ret
nop
aas
ds
outsw
mov
test
mov
jge
cwtl
adc
test
cld
jg
into
add
add
or
mov
std
mov
xchg
inc
xchg
int
add
hlt
add
add
mov
es
or
leave
out
sbb
aam
xchg
and
mov
cltd
sbb
inc
loope
sub
or
xlat
mov
xchg
aaa
mov
cmp
xchg
mov
std
add
addl
int
je
push
test
in
loopne
nop
and
or
stos
mov
lahf
mov
les
inc
mov
in
mov
xor
movl
push
and
cmpl
adc
rcr
ret
out
fisubrs
cmpsb
mov
stos
lock
data16
stc
push
repnz
cmpsb
inc
sti
and
or
and
jg
arpl
xchg
int
push
call
push
xchg
lock
push
ret
out
and
dec
adc
push
xor
ret
xchg
popa
lret
inc
add
mov
adc
adc
push
sub
stos
std
fs
loope
jecxz
push
cli
sbb
pop
addr16
fldl
mov
xchg
adc
into
imul
pop
inc
xor
pop
inc
xor
inc
mov
dec
insb
sub
leave
xchg
or
fcoms
or
popa
aas
lcall
ja
ljmp
jmp
das
pusha
sbb
and
bound
cmp
add
idivl
fcoml
out
mov
ds
aad
jle
icebp
mov
push
sahf
pop
nop
pop
dec
xchg
sub
outsb
popa
fcoml
pop
dec
sub
xchg
adc
dec
scas
jge
out
jg
push
sub
outsb
fimull
mov
lods
popf
jo
xor
sarb
jnp
lret
adc
int3
imul
and
sti
cltd
int
insb
mov
jns
notl
sbb
sub
ja
jae
mov
push
jmp
sbb
sbb
mov
in
jmp
pop
jnp
arpl
xor
stc
js
ret
popf
jno
pushf
inc
ljmp
xchg
fidivl
in
xor
test
pop
xchg
mov
movsl
repnz
sub
insl
fnstcw
insl
sub
lret
mov
or
daa
bnd
fmul
cmpsb
push
add
dec
outsl
loop
mov
outsb
addb
fsubrs
iret
push
adc
ss
shrl
call
iret
jg
outsl
cmpsb
add
out
jle
push
shll
gs
mov
imul
dec
nop
push
sub
icebp
xor
sub
cmp
add
mov
ret
movhps
xchg
push
cmp
sub
add
jge
inc
mov
dec
xchg
sub
mov
dec
inc
cmp
xor
lret
sub
cs
cld
push
cmp
icebp
sbb
frstor
mov
ficoms
sbb
adc
arpl
sbb
mov
sub
ss
ret
in
bound
adc
daa
ds
repz
mov
dec
sar
sbb
xchg
push
icebp
inc
imul
call
movl
xchg
pop
pop
stos
repnz
movsl
push
push
pusha
int
mov
sbb
rcl
cmpsb
cs
adc
lds
adc
xor
mov
rcrl
xchg
sub
mov
jl
mov
push
data16
sub
out
fnstenv
xor
out
outsb
sub
and
mov
dec
lret
mov
je
inc
sbb
inc
in
or
or
inc
mov
push
pop
lods
push
sahf
xor
rcll
shll
add
je
inc
xchg
cmpl
pop
or
sbb
mov
gs
popa
arpl
sti
add
cmp
stc
jmp
mov
inc
outsl
movaps
je
pushf
xchg
in
fxch
jbe
cltd
xchg
loopne
mov
pop
aam
cs
mov
jo
sub
mov
cmp
push
inc
pop
sub
scas
jb
sub
pop
into
push
mov
push
aam
push
jo
scas
sbb
aad
int3
or
sub
inc
data16
stos
xchg
pop
mov
mov
lods
pop
test
mov
pop
mov
lock
cs
mov
xor
sub
ds
movsl
push
jo
add
int3
test
cs
test
cmpsl
dec
call
cmpsb
mov
cs
sbb
pop
jns
ds
shr
sub
in
mov
pop
dec
dec
aam
mov
repnz
xchg
add
push
xchg
in
es
add
loop
jo
mov
mov
inc
xchg
jg
dec
or
out
out
or
ja
push
dec
shr
jg
push
mov
lret
repz
hlt
add
add
scas
inc
outsl
cmp
cmp
jl
jb
mov
stos
sarb
pusha
cs
rorl
cmp
lods
and
inc
test
insb
push
scas
ret
mov
mov
divb
or
inc
mov
pop
cmp
stc
test
add
lcall
adc
dec
outsl
jo
add
jmp
and
in
test
lock
push
rol
scas
inc
mov
les
sbb
nop
push
jnp
lret
in
xor
outsl
sbb
adc
xchg
xchg
pop
jnp
popa
sarl
fsub
test
mov
sbb
popf
dec
adc
ds
scas
cltd
xchg
push
clc
inc
repz
sbb
ljmp
pop
movsb
movsb
lea
scas
xchg
mov
sbb
xchg
jns
push
mov
jle
loopne
gs
mov
movsl
mov
jle
stc
or
and
fwait
pop
dec
mov
loop
mov
outsb
ja
adc
cld
les
adc
adcb
jno
std
push
sbb
dec
fildll
push
or
inc
sbb
add
ja
das
popa
jl,pn
add
es
popf
bound
dec
adc
dec
dec
sub
outsl
js
sti
bound
add
jnp
pop
fisttpl
aam
pop
nop
lahf
cmp
out
add
cwtl
xchg
cmp
jns
scas
je
bound
pop
aam
mov
icebp
aam
js
push
int
sbb
xchg
repz
dec
inc
mov
and
mov
jge
push
mov
xchg
jns
push
test
push
jbe
cli
fcmovnbe
inc
mov
adc
or
cli
jbe
lea
inc
and
lahf
rclb
insb
inc
clc
jp
int3
lahf
data16
pop
sbb
add
lret
pop
adc
jle
fldl
mov
rcrb
adc
jno
inc
stos
cli
jbe
inc
insl
xor
and
lahf
insb
pop
cmp
pop
mov
and
push
jae
in
fnsave
pop
push
sub
repnz
inc
scas
call
mov
dec
dec
outsb
and
lret
loopne
pop
cmp
dec
push
xlat
cltd
push
xchg
subb
repnz
dec
stc
lahf
sub
aas
sbb
shl
pcmpeqd
dec
cmp
jg
outsl
dec
mov
lret
out
into
out
push
repz
xor
jle
clc
sbb
movsb
xor
in
add
int3
adc
sbb
inc
cmpsb
push
sbb
ljmp
add
push
ret
js
fdivl
sub
into
shrb
mov
ss
push
jnp
lds
cwtl
mov
adc
in
mov
xchg
mov
and
pop
stos
sbb
fdivl
push
fldl2t
in
pop
icebp
sub
adc
jge
mov
addr16
loope
add
mov
jno
rcrb
push
sbb
cltd
sbb
sub
mov
and
outsl
mov
adcb
jns
mov
in
rcrb
jb
xor
scas
jmp
dec
cmp
mov
adcb
test
addr16
mov
jge
cli
jle
cmc
xchg
cmp
pop
xor
inc
clc
sub
cmpsl
roll
adc
mov
adc
and
cmp
push
dec
xor
mov
cmpsb
push
xchg
sbb
out
lods
mov
sub
je
inc
int
cmp
test
dec
dec
testl
test
sarl
inc
add
lahf
loop
shl
cld
inc
jbe
and
test
sbb
add
xchg
les
daa
xor
pop
shl
and
jno
std
pushf
fsts
and
sbb
js
jbe
ret
popf
cmp
push
pushf
and
or
push
jmp
jecxz
fdivs
and
aam
xchg
xchg
mov
xchg
xor
mov
rdpmc
notb
xor
lds
gs
nop
or
sti
mov
sub
or
leave
loopne
add
shrb
lea
dec
lea
jne
imul
mov
sub
dec
scas
std
mov
pop
into
ds
std
loope
dec
iret
rcl
mov
rsm
and
xchg
cwtl
and
push
lods
test
xor
ds
sbb
add
add
movsl
push
movsl
shl
divl
add
push
call
push
and
mov
cmpl
and
dec
rcll
sti
and
jge
lods
inc
ds
jp
test
fidivrl
mov
out
lret
jnp
inc
mov
mov
or
fstpl
and
sar
andl
out
insl
mov
lret
adc
ds
loop
cmp
sarl
lods
imull
das
scas
xor
jnp
cmp
sub
into
shlb
aad
jmp
push
popa
test
aas
push
das
lcall
mov
out
pop
mov
push
jg
adc
or
in
sub
jecxz
aam
daa
adc
mov
fwait
or
ja
test
sub
add
mov
xchg
and
aam
and
lods
pushf
xor
cmpsb
xchg
test
push
sbb
je
jnp
test
shrl
adc
ret
loopne
and
jl
mov
fnsave
test
fnstenv
lock
fucomi
mov
mov
loope
and
mov
xchg
dec
cmp
stc
push
lods
clc
cmp
dec
mov
pop
int
mov
les
add
sahf
push
aam
and
pop
sub
xchg
dec
sbb
pop
add
add
jbe
push
push
adc
test
loop
icebp
jo
arpl
dec
xor
leave
in
or
adc
jo
push
fisttpll
push
jg
dec
imul
sub
hlt
pop
jns
mov
movsl
aaa
fcomps
popf
in
push
or
jl
push
jbe
dec
leave
cmp
mov
enter
mov
loop
pop
out
mov
insb
arpl
xlat
je
adc
fadds
loope
sub
les
mov
fildl
inc
pop
ja
adc
outsl
call
mov
sub
and
sbb
add
jae
push
outsl
push
lret
pop
mov
cwtl
add
adc
dec
addr16
pushf
sub
cmp
jbe
add
mov
rcr
xchg
jg
roll
add
aam
ss
mov
xor
dec
inc
and
xchg
into
and
enter
sub
push
xor
xchg
inc
adc
push
sbb
xchg
adc
xchg
ret
mov
jmp
es
aas
sbb
and
std
hlt
fimuls
sbb
adc
daa
lahf
fstps
clc
mov
notl
dec
inc
rol
divb
fistl
cmp
and
fcomps
cltd
fbld
lock
aam
pop
cmpsb
mov
xor
mov
push
pop
cmp
xchg
in
xchg
pop
addr16
js
mov
adc
cmpsl
cmp
pop
pshufw
pushl
outsb
mov
bound
mov
or
pop
xchg
leave
push
fs
mov
mov
add
lds
clc
pushf
arpl
xchg
cmp
cmc
push
mov
pop
cmpsl
sarl
adcl
mov
inc
or
sub
pusha
cmpsb
icebp
mov
es
testl
mov
sub
dec
lock
fisubrs
mov
test
lret
add
or
mull
mov
inc
int
sbbb
jno
ret
sub
ficomps
cmpsl
popf
enter
push
movhps
pop
fldt
scas
cs
pop
xor
popl
std
test
mov
mov
int3
orl
mov
jno
aaa
cmp
lahf
mov
pop
sub
cmp
outsb
cld
adc
movsl
sub
mov
testl
xor
inc
cltd
pop
push
xchg
stc
dec
fcomi
push
in
sub
cmp
fbstp
mov
mov
arpl
jne
and
rolb
mov
mov
aas
in
int
dec
or
xchg
popf
jo
inc
lcall
fwait
lcall
fidivl
push
pop
scas
and
dec
fdiv
dec
dec
stc
or
jle
daa
xor
mov
nopl
aas
cmpb
xlat
lret
outsw
mov
dec
pop
rcll
fsubl
ret
lret
jmp
in
pop
frstor
mov
cmpsb
cld
cmpb
add
and
and
ljmp
jo
lods
std
aad
mov
fstl
in
mov
shll
lret
fwait
cmc
pop
.byte
