push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
push
mov
jle
jle
movsl
add
fld
fcom
enter
leave
cld
lret
iret
adc
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
lock
flds
xlat
cld
rcl
mov
call
sub
xor
fxch
ss
cmc
test
sti
aad
cmc
aam
mov
xchg
orb
iret
div
std
call
stc
clc
loop
xchg
inc
out
xchg
test
repnz
ss
lret
neg
xor
shl
loope
ret
loope
lret
sti
mov
aam
into
sub
sarl
fcmovnbe
loopne
repnz
fdivrs
in
fildl
out
fdivp
jecxz
xor
cmc
xlat
cld
out
lock
icebp
loopne,pt
cmp
clc
idiv
fdivr
xchg
repz
aad
hlt
iret
xor
mov
xlat
cmc
cmp
into
ret
icebp
aam
xchg
fsubrp
mov
incb
out
aaa
fnstenv
aam
test
sar
adc
sar
mov
out
xchg
xor
repz
imul
enter
aaa
cmp
fcomip
fadds
ret
test
out
mov
lret
call
xlat
aaa
int
cmp
ffree
fidivrl
repnz
mov
sub
incl
jecxz
in
out
cmp
cmp
repz
aaa
lret
lret
repz
rcl
fldl2t
out
std
into
xchg
xchg
int3
icebp
lret
fdivrp
roll
ljmp
out
test
lret
fdiv
cmp
repnz
jmp
lret
xlat
in
out
frstpm(287
call
xlat
fadds
call
enter
lock
aad
shlb
in
cmp
std
xlat
cli
stc
lret
in
fcomi
xchg
ljmp
jmp
sti
roll
cld
ljmp
call
lret
mul
lret
int3
out
fcmovu
int3
addb
std
jmp
addl
jmp
icebp
call
int
xchg
add
hlt
mov
frndint
fsts
aam
xor
ljmp
cmc
cmp
int
aas
cmp
lret
lret
jmp
ret
enter
aam
clc
rcl
cmpb
out
into
test
sbb
fcmovne
faddp
out
leave
fcmovnu
xchg
xchg
mov
shl
in
das
hlt
clc
repnz
loopne
out
fdivrp
or
enter
addb
repz
cmp
xlat
cli
div
rolb
jecxz
cld
xchg
repnz
xor
fnop
fcmovnu
xor
std
in
fldl
out
std
out
cld
loope
std
loope
xor
out
xor
iret
cmp
aas
fcmovnbe
in
ret
fadds
out
mov
aaa
iret
xor
cmc
repnz
in
add
loop
xlat
xor
int
mov
loopne
xor
aaa
jmp
cmp
int3
ror
repnz
xor
fscale
into
into
mov
out
ror
jmp
xor
out
aaa
loop
clc
xchg
mov
mov
out
in
xor
cmp
enter
stc
cli
in
rcl
fldl
cli
loope
int
ror
xchg
out
jmp
shl
ljmp
repnz
sar
ljmp
xchg
fldl
in
bnd
loop
cli
fdivrl
jmp
in
out
call
rcr
addb
out
cld
cmp
cmp
cmp
test
xchg
sbb
sti
stc
enter
fadd
xchg
ss
iret
in
jmp
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
add
movsl
add
fmul
cmp
std
aas
test
in
xchg
out
cmp
hlt
in
xchg
loope
lret
cmp
ds
aas
lock
in
repz
ret
aad
testb
nop
aam
vpsubsw
lret
int3
ror
rcr
jecxz
lock
call
fimuls
mov
cmp
out
ds
sti
shl
ds
in
repnz
xchg
mov
shl
cmp
enter
or
ret
or
ret
neg
fxch
jmp
xor
fcom
out
loope
xor
mov
shr
xchg
jmp
out
mov
fadd
aaa
ss
in
aam
fcomip
sti
loop
mov
call
mov
stc
xlat
imul
cmp
int
in
sarl
repz
cld
cmc
ret
jmp
in
hlt
aad
shl
cmc
test
lret
aad
fdivrp
clc
loope
out
out
fcos
cli
nop
cli
xchg
in
ret
out
stc
out
loopne
repnz
test
ret
sar
stc
in
nop
into
std
out
ljmp
cli
xor
in
loopne
shl
in
rol
fadd
ret
filds
test
shl
lret
clc
ss
aaa
fidivrl
neg
cmp
cmc
mul
std
lock
loopne
shl
hlt
divl
xor
fsubr
lret
cmp
aaa
ret
repz
hlt
not
out
vpsrad
cli
xchg
mov
sub
cmp
cmp
fbstp
add
lret
mov
fucomip
sbb
in
xor
fldz
in
repnz
clc
ds
ror
shl
in
in
std
stc
fcomp
loop
in
rorl
ffree
sti
out
lock
in
sti
in
sti
repnz
jmp
jecxz
int
ljmp
enter
div
fildl
hlt
mov
pushl
aad
xor
cmp
into
stc
sarl
cmp
icebp
test
incl
mul
fisttpl
les
xor
fcomp
xor
out
cli
sti
cmp
idiv
mov
mov
mov
ss
aaa
cmp
dec
iret
and
int3
out
fcom
shl
xchg
xchg
xchg
mov
int
int
cmc
cmp
leave
cmc
stc
cmp
stc
repnz
repz
loopne
in
jmp
out
ljmp
div
repz
in
jecxz
div
loope
sub
lret
in
cmp
fstl
leave
stc
loope
repz
xchg
clc
hlt
movl
neg
out
in
lock
xor
test
loope
shl
xlat
cmp
loope
cmp
mov
div
cmp
xor
sar
lock
cli
cmp
loop
fsubr
test
testl
std
repnz
xlat
clc
jmp
in
out
out
in
iret
cmp
std
stc
leave
mov
test
int
xchg
rol
in
fstp
fsubrp
call
fildl
jmp
sti
fisttpl
cmp
cmp
std
cld
int
lret
aam
xchg
stc
call
mov
jmp
repnz
addb
xchg
cld
mov
xchg
loope
repnz
lret
xor
call
icebp
sti
shlb
rol
loopne
cmc
sbb
mov
loopne
mov
call
cmp
xlat
cmp
repz
div
int3
jmp
cli
out
aam
ret
cmp
idivb
idiv
leave
xor
add
in
cmc
leave
cmp
cld
xchg
test
cmc
ss
fnstsw
call
rol
cmp
repnz
loop
addl
jecxz
xchg
lock
xor
in
aaa
vpandn
sti
repnz
fsub
rolb
enter
out
shl
out
xor
iret
iret
into
fucomp
iret
enter
rcl
cmp
fiaddl
mov
neg
flds
shl
int
lret
lret
fdivp
in
rcr
cli
xchg
cmp
into
lret
icebp
in
enter
ss
lret
cmp
cmp
test
enter
xchg
enter
test
loopne
lock
aam
fcmovne
fmul
jecxz
fimull
add
fadd
leave
int
bound
inc
aad
mov
jle
movsl
add
xlat
iret
icebp
jmp
testb
notb
jmp
clc
cmp
jmp
loop
cmp
loope
jecxz
jmp
adcb
ror
cmp
jmp
int
fcmovne
fdivr
fdiv
inc
clc
fsubp
clc
or
xchg
jecxz
out
enter
fcomp
repnz
loop
rol
rcr
ljmp
out
cmc
mov
xor
int3
int3
repz
ret
sti
in
neg
cmp
icebp
addl
lock
out
fdivp
cmp
sti
div
aam
loope
loopne
mov
out
iret
out
ror
mov
stc
ret
lret
iret
clc
fstp
lock
xor
loop
decb
jmp
mov
dec
xor
call
cld
adc
jecxz
enter
aad
mov
loopne
out
xchg
idiv
iret
clc
shlb
adc
cld
mov
flds
decl
shl
cmc
cld
clc
lret
cmp
cld
aas
in
loope
test
xchg
test
leave
mov
cld
out
jecxz
clc
xor
push
sti
cmc
iret
icebp
ffree
sti
repnz
test
fsubr
mov
in
cli
out
call
cmpl
repz
aad
in
xchg
int
xchg
divb
jecxz
xlat
cmp
cmp
call
lock
out
filds
mov
mov
xchg
test
std
fdivp
fscale
ret
fneni(8087
add
mov
jmp
icebp
cmc
iret
in
clc
sarl
in
out
out
leave
lret
cmp
aam
cmc
cld
aad
loope
adcl
out
xor
ror
xor
xlat
sarb
clc
fdivp
leave
loop
incl
out
fsubr
sti
leave
idivl
jecxz
in
in
in
fcmovnb
fcmove
aad
lock
nop
xchg
vpcomub
ljmp
cli
fxtract
div
rolb
fisttpll
fucomip
mov
fcmovnb
fnstcw
fptan
aaa
in
xor
testl
in
cmc
int3
xchg
cmp
int3
int3
ljmp
cmp
sar
mov
jmp
out
jmp
das
call
xor
aam
ret
call
into
mov
sub
in
cmp
sti
test
cmpl
cmp
inc
mov
fldl2e
enter
lock
loop
sub
cld
cmp
test
aaa
fdivr
jmp
stc
repz
mov
fcoml
mov
xor
xor
aaa
leave
rolb
cmp
jecxz
mov
loop
leave
decb
out
ror
xor
out
loopne
aas
out
aad
testl
enter
in
hlt
xlat
call
fildl
loopne
movb
xchg
mov
test
int
fdivrl
stc
test
shl
fld
loopne
in
ffree
enter
xchg
xchg
ret
rcl
jmp
sar
out
fidivrl
mov
sti
ljmp
out
cmc
ss
int3
sar
ror
iret
or
out
out
stc
cli
jmp
out
xor
fidivl
lret
int
lock
xlat
into
iret
out
clc
and
movb
neg
loop
shr
lret
in
ss
cmp
xchg
clc
roll
ret
mov
sub
icebp
ret
iret
cmp
ror
repz
iret
mul
xlat
not
fiaddl
mov
jmp
in
lret
jmp
cmp
aaa
loopne
jmp
out
fstp
shl
lret
mov
call
xlat
sub
hlt
cmp
xlat
repnz
shl
lock
sti
xchg
cld
in
leave
fdivr
out
ror
aam
shr
in
out
ljmp
add
testb
lret
add
lds
out
ss
loope
ret
fcomip
mov
or
mov
int
mov
test
cmc
lret
ret
fcmovnu
std
ds
in
ret
in
rolb
out
jecxz
and
mov
cld
aad
fnstcw
idivl
out
out
in
sti
in
add
lea
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
push
jae
jle
movsl
add
jmp
and
sub
cmp
xor
out
xor
aam
cli
test
loope
decb
in
shl
jmp
shr
fcmovbe
lret
cli
cld
lock
sarl
fcomip
hlt
mov
into
ljmp
loopne
xor
sar
loop
int
fdiv
xlat
fdivr
aad
stc
cld
call
mov
cmp
neg
or
std
test
sti
std
fucom
out
mov
or
repnz
cmp
ret
faddp
rcr
incl
repnz
repz
lea
in
aam
fcmovbe
enter
mul
inc
out
icebp
hlt
xchg
sti
jmp
loopne
jmp
nop
icebp
icebp
jmp
nop
lock
cli
cmc
rcr
std
rcr
lock
fcomip
jecxz
mov
fndisi(8087
ljmp
aad
aam
fxam
out
cmp
cmp
cmp
cmp
rorl
out
fcmovne
ret
xchg
leave
xor
cmc
rcl
shr
cmp
in
ffreep
int
shl
add
jmp
fcomi
mov
clc
das
shl
xor
cmp
xor
clc
cmp
mov
ret
sti
addl
call
icebp
iret
cmp
cmp
in
jecxz
aad
hlt
test
test
les
xor
in
lret
stc
in
aad
hlt
ret
in
shl
in
leave
mov
mov
test
int3
addb
lock
clc
aad
out
in
cmp
rol
loopne
ret
mov
in
loope
fdivp
repz
shl
ror
cmp
sti
cmp
int
rorb
xlat
sbb
mov
call
ljmp
call
cmp
xchg
orl
nop
shl
xchg
lock
fcmovne
int
in
xlat
cmc
rcl
imul
in
fildl
in
mov
icebp
cs
call
int3
ljmp
rolb
shl
fndisi(8087
div
loope
shr
fdivl
repz
xlat
aad
out
hlt
aam
lock
cmp
mov
stc
test
icebp
test
fistpll
xor
jmp
lret
lock
shlb
idivl
shr
ret
loopne
out
aad
loop
xchg
ror
out
out
repnz
cmp
ss
cld
xor
in
repz
xchg
test
adcb
shr
jmp
hlt
ret
lock
jmp
jmp
jmp
loopne
out
fcomip
in
ret
in
fnstcw
sar
fcmovb
xlat
xchg
out
jmp
xchg
fisttps
aad
repnz
fsubr
sbb
xchg
sti
in
out
in
icebp
sar
loopne
aam
sub
cmp
fcompp
rcl
cmp
fstp
clc
sti
out
stc
xchg
loope
call
fmul
cld
xor
add
cld
stc
sarl
out
sti
in
loop
sub
cld
out
lock
fadd
cmp
loopne
hlt
xchg
mov
stc
jmp
add
out
int3
clc
out
jmp
incl
aam
sti
jecxz
loop
cli
jmp
loope
loope
jmp
xor
shl
int
out
jmp
xlat
cmc
cmc
ffree
mov
int
in
int
ljmp
iret
ljmp
rcl
repz
fcmovnbe
xlat
sar
in
fadds
aad
hlt
loopne
fdivr
aam
cli
cld
loopne
icebp
call
ret
jecxz
xchg
jmp
int3
repnz
loop
int3
sub
lret
testl
ffreep
lret
in
xchg
mov
ss
ss
fdivp
into
cmp
xlat
jecxz
fsub
std
in
in
hlt
leave
sbb
jmp
fdivrp
in
rcl
lds
lock
div
rcr
lock
xlat
repnz
clc
loopne
ljmp
lret
nop
xchg
out
cmp
ljmp
shl
jecxz
fdiv
rcl
lret
sbb
rorb
repnz
ljmp
shl
shr
xchg
mov
fdiv
iret
xor
call
in
jmp
les
test
clc
xchg
cmp
jmp
mov
clc
fldz
jecxz
into
shl
int3
in
test
out
fcom
vpor
cli
ljmp
add
mov
rcl
aad
int3
call
in
sbb
movsl
add
icebp
repz
fadd
sti
int3
cs
fcmovne
fcom
addb
out
xlat
fiadds
test
icebp
cmc
nop
out
xor
hlt
rcr
shr
ds
rcr
out
sbb
loop
loop
test
sti
out
std
xchg
ror
in
cli
stc
clc
int
lret
ror
lds
testl
jecxz
loop
aaa
jmp
call
xor
out
out
ftst
in
iret
ljmp
clc
stc
repnz
and
jecxz
test
sar
cmp
fiadds
in
int
loope
xchg
repnz
xor
int3
repz
xor
repz
out
in
clc
cld
lret
orl
icebp
jecxz
lret
fdivrl
sar
shl
shl
call
decb
loop
xchg
xchg
aas
lret
sti
sub
hlt
cmp
testl
flds
test
leave
fdivs
shl
xor
idivl
shl
cmp
testl
ss
xor
repnz
std
out
ds
aad
fadd
fdivr
test
sar
enter
in
call
out
in
fnstcw
aad
in
jecxz
roll
in
in
xchg
imul
clc
div
out
jmp
shl
cmp
jecxz
fimuls
in
repnz
xchg
xchg
enter
loop
fidivrl
fdiv
aad
div
lds
in
lret
fsincos
loope
in
div
int3
rcl
iret
aas
in
or
cmc
in
loopne
aam
out
out
test
in
in
loope
sub
xor
cmc
lret
incl
test
repz
enter
lret
std
repz
int
fdivr
shl
clc
cld
call
ror
loop
cmc
rcl
lret
nop
shr
sbb
fsub
jmp
enter
test
iret
loop
ret
out
in
in
cmc
call
sti
in
xor
aas
xlat
imul
repz
xlat
faddp
in
mov
cmc
out
jmp
int
adcb
aad
cmc
std
xor
cmp
shl
ret
out
repnz
enter
addb
idivb
fbstp
sarb
in
cld
jecxz
fdivp
ret
jecxz
mov
mov
nop
orl
cs
jmp
int3
faddl
not
in
xlat
in
xchg
out
in
hlt
cmc
cmc
loop
stc
jmp
stc
cmp
xor
faddp
out
mov
enter
fucomip
xor
loopne
xor
fmulp
iret
cmp
ret
ret
clc
faddl
sbb
icebp
fucomp
fadd
shlb
jmp
cmc
ds
call
loop
std
xchg
lret
jmp
aam
out
idiv
aam
cmp
idiv
jecxz
mov
sti
std
lret
xchg
sar
fcmovne
in
fmulp
cmp
in
aad
xlat
test
and
in
stc
sti
call
xchg
ficoms
shr
sar
fnstsw
aad
in
rcr
hlt
cmp
fdivr
leave
xchg
ret
xchg
fimuls
aad
sti
xor
imul
stc
out
fmul
out
out
shl
in
les
into
cmc
repz
cmp
shr
out
push
xlat
or
lock
ret
fmull
lret
jecxz
loop
xor
enter
call
fdivr
test
fcomp
mov
incl
xchg
lock
lock
out
aaa
cld
out
cmp
rcl
cld
cmc
iret
ds
aad
test
mov
lock
ljmp
cmp
repnz
std
aam
cmc
in
mov
ljmp
in
int
in
not
lock
cli
clc
cmp
aam
aam
cmp
into
sti
int
cld
nop
aam
shlb
lret
sti
adc
loopne
add
leave
out
sbb
xorb
xlat
enter
cli
repnz
std
stc
aam
shl
call
sub
in
mov
in
repz
xor
div
std
cld
fsub
lret
xlat
fcmovu
iret
stc
icebp
loop
out
icebp
into
das
lock
xor
rcr
faddp
loopne
xlat
fyl2xp1
idiv
test
mov
sub
shrb
out
movl
jmp
int3
rcl
fstp
fldt
lcall
movsl
add
lret
fdiv
cmp
repnz
jmp
aam
in
call
cli
lret
add
mov
jecxz
jmp
rol
cmc
cld
fdiv
fdiv
aas
cmp
mov
fcmovnu
or
iret
xchg
rol
out
xor
lret
xor
stc
int
fstpt
in
rcr
cld
fdivr
clc
lret
out
mov
in
nop
ljmp
icebp
fistpll
repnz
std
xlat
in
not
jmp
leave
lret
xchg
jmp
cld
call
out
cli
xor
enter
repnz
cmp
shr
jmp
loopne
icebp
mov
xchg
out
repz
into
cmp
leave
std
fsincos
fcomip
aad
fdivrl
loop
out
hlt
jmp
cmp
cmp
fdivrs
in
in
int3
out
hlt
sub
sar
in
ffree
rcr
loopne
lock
loop
fld
xor
jmp
sarb
ds
int3
div
aaa
xchg
jecxz
cli
ror
addl
cli
les
lret
fdivrp
icebp
push
ret
in
aam
sti
in
lret
xchg
lret
int
shl
repz
in
into
std
and
loopne
fadd
fildl
test
test
cmc
leave
cmp
xlat
cmp
jecxz
fdivr
sbb
cld
rorb
hlt
iret
ljmp
rol
cli
shl
out
aam
movb
jmp
ss
ret
sti
neg
icebp
lret
icebp
fstp
fcmovnbe
ds
sub
test
repz
iret
out
out
out
ror
sar
xlat
icebp
hlt
int
mov
loop
mov
fisttpll
xchg
shll
jmp
out
in
fucomi
aad
fmuls
xchg
mov
jmp
sti
fst
icebp
cli
fucom
loope
hlt
std
loope
jmp
mov
mov
cld
int
out
in
hlt
fcmovnb
aaa
cld
fsubrp
enter
cmp
bnd
rcr
stc
out
jmp
in
sub
ror
hlt
into
leave
xlat
int
fdivr
loopne
inc
add
stc
out
fildl
shl
leave
fdiv
sti
neg
lret
into
imul
cli
sti
ljmp
out
cld
fsubp
repz
into
out
out
out
int
lret
repz
sti
fld
std
fstp
cli
clc
fcmovnu
test
int
in
icebp
xor
aad
aad
leave
clc
lret
cmp
repnz
aad
leave
cmc
and
enter
pushl
ss
repnz
cmp
rcr
jecxz
mov
out
std
out
ljmp
clc
cmp
rol
roll
fcmovu
sbb
fcmovne
in
out
shrb
sub
xor
testl
and
enter
lret
mov
in
lock
sti
fidivrs
rol
in
cmp
out
cld
mov
xlat
out
loopne
call
aas
lock
iret
cmp
cli
jmp
cmp
jmp
clc
std
out
repz
mov
loopne
loopne
jmp
ljmp
cmc
int3
out
idivl
enter
shl
movl
into
icebp
into
hlt
sub
lock
int3
fcmovbe
fiadds
aam
adc
aam
enter
test
ret
xor
hlt
in
shl
repz
ds
cmp
cli
out
lret
sbb
xchg
mov
clc
ss
cmpb
iret
clc
std
vpmaddwd
cmc
fsubr
decl
das
fld
cmp
imul
hlt
imul
cmp
les
leave
jmp
test
and
out
das
in
jmp
aad
aad
and
hlt
xlat
frstpm(287
cmp
test
mov
ret
icebp
xchg
ror
in
shl
jmp
cmp
int
cmp
int
cld
std
ret
sti
xchg
mov
fsubrp
in
lock
clc
fdivrl
rol
fcmovnbe
ret
loope
decl
xchg
neg
lret
ljmp
ror
int
repz
out
cli
jecxz
mov
xchg
test
xchg
mov
fmul
sti
fcmovnu
cld
ljmp
jmp
test
into
loopne
test
ret
hlt
enter
in
repnz
shr
shl
clc
cmp
aad
out
fmull
out
ror
leave
repnz
std
shr
lea
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
mov
sbb
movsl
add
jmp
sarb
adc
cmp
out
call
leave
cli
cs
aas
cmc
shr
out
loopne
fadd
test
orl
icebp
xchg
repz
repz
out
aas
stc
xlat
icebp
loopne
aam
cld
loopne
ret
cmp
nop
fimuls
shr
out
icebp
xor
fmul
aad
stc
cmp
clc
in
cld
clc
ret
fdivrp
fld
out
xchg
xchg
orb
out
out
lret
clc
sbb
repz
and
stc
mov
out
nop
mov
lret
cli
cmp
loope
aas
std
neg
idiv
test
ret
in
fmull
shl
xor
jmp
stc
rcl
out
fcmovu
lret
iret
lea
aas
loope
lds
fdiv
repz
cmp
shr
ret
aad
cmp
xchg
mov
xor
call
in
shl
xlat
in
std
stc
jecxz
shr
jecxz
lret
xchg
sub
repnz
repnz
hlt
out
icebp
rolb
test
test
ret
in
int3
enter
mov
repnz
cmp
fcmove
cmp
sti
jecxz
incb
out
faddl
mov
loopne
aam
int
cli
ds
lret
std
fstp
sarl
aam
sti
stc
out
fsubr
mov
xchg
call
repnz
in
fcom
leave
cld
shl
test
icebp
xchg
xchg
xchg
ror
std
in
mov
addl
repz
stc
fcmovb
shl
cmc
roll
iret
shr
mov
lock
ss
repz
in
into
test
xchg
rorl
lret
jmp
loope
in
fcomi
cmp
stc
sar
loop
jmp
testb
cs
cmp
bnd
test
out
fucom
sar
loopne
shr
out
std
mov
sub
std
cmp
in
aas
ror
sbb
enter
and
jecxz
icebp
jmp
in
cmp
mul
not
incl
les
jecxz
into
icebp
out
jmp
cmp
div
enter
std
sar
icebp
test
call
xchg
in
xor
cmc
xor
aam
int
loope
aas
in
sar
aas
xchg
test
loopne
cld
out
std
mov
ror
cmp
aad
sar
aad
loop
idiv
cld
ret
fdivrp
aam
std
loopne
out
lret
loope
les
repz
cmc
out
hlt
shr
repnz
out
aad
sub
orb
test
call
aas
jecxz
cmpl
neg
test
jecxz
incb
cmp
xor
out
fucomi
in
aad
test
cld
rcl
idiv
std
sti
mov
out
in
test
aam
cmp
int3
lret
iret
std
int3
out
ret
fsubr
in
xchg
lret
loopne
std
sub
shrl
ror
jmp
call
repnz
jmp
out
xchg
std
cli
int
std
mov
xchg
ror
repnz
mov
int
lock
cmp
cmc
cld
jmp
out
in
xchg
lock
xchg
sarb
cld
cs
dec
test
cmp
ljmp
les
rol
sti
jmp
lret
fucomp
shl
repz
ret
loop
sti
cmc
int3
std
fsts
div
int3
cmp
fcomi
fmul
jmp
aas
out
xlat
ds
clc
out
fcmovne
mov
in
rorl
cmp
in
out
aad
loope
div
ds
xlat
cmp
ljmp
out
leave
fisttpll
cmc
aam
fcmovne
jmp
into
int
cmc
jecxz
xchg
cmp
nop
xchg
shl
aad
sar
aaa
repnz
fildl
out
sar
out
stc
loope
test
in
aam
shl
ss
out
xlat
rcl
loope
in
ret
in
xlat
fdivr
test
loope
in
xchg
xlat
loop
aaa
ss
repz
shl
out
shr
in
call
loope
jecxz
clc
cmp
xor
cli
sub
rcr
ljmp
sti
std
in
out
stc
call
xor
shl
cmc
shl
testb
leave
jmp
ret
aas
ret
aad
aad
mov
lret
jle
movsl
add
jecxz
lret
sti
fcmove
ret
orb
in
repnz
aaa
sar
icebp
out
aad
loopne
fcmovb
xchg
jmp
orb
iret
fidivs
iret
xlat
cmp
clc
clc
jecxz
lret
xlat
lock
fimull
loop
cmp
aad
stc
aad
ffree
clc
fxch
sarl
stc
enter
lret
cli
xchg
in
adcb
jmp
repnz
sti
lock
jecxz
in
aas
ret
fildl
leave
lock
mov
aam
xor
in
aad
in
leave
cld
aas
cmp
jmp
hlt
in
out
out
icebp
out
enter
out
out
iret
cli
shl
fcmovnb
add
mov
in
add
loope
hlt
ljmp
fidivrl
repz
bnd
fdivrp
mov
jecxz
repnz
vpsllw
icebp
cli
rcr
aas
sbb
sarl
aad
lret
fcmovu
leave
jmp
lock
out
aad
aam
fdiv
leave
out
filds
fiaddl
test
repnz
jmp
aad
int
in
std
hlt
ror
cmp
in
repz
loopne
cld
xchg
in
xchg
lret
hlt
hlt
rcl
iret
xor
int3
fst
clc
cld
xchg
cli
stc
cmp
inc
out
lret
cld
faddl
clc
aam
ffree
dec
icebp
loopne
aas
in
lock
xchg
in
leave
in
clc
mov
fcom
in
test
out
xor
iret
xor
ror
lret
xlat
cmp
aam
sti
test
test
cli
in
out
int
xchg
rol
aaa
jecxz
in
cmp
enter
cld
int3
fsub
test
out
mov
test
mov
int3
and
fstl
icebp
out
lock
int3
icebp
into
xor
cli
roll
out
cmc
into
fucomi
std
iret
jmp
test
iret
out
lds
int
in
cli
testb
jmp
in
inc
icebp
lock
loope
ljmp
test
testl
out
xlat
in
ljmp
out
rcr
xor
fistpll
ret
loope
ret
in
mov
ret
test
jmp
fcmovne
repz
aam
lret
out
clc
out
cmp
repz
in
mov
cmc
jecxz
sub
loope
out
aad
rcl
lock
loope
loop
div
cmc
xor
rolb
testb
test
aam
rcl
rcr
ret
icebp
enter
in
in
mov
fdivrp
out
lds
sub
cs
cld
iret
icebp
in
sar
cli
loop
lret
mov
fmul
out
int
into
xchg
sub
jecxz
xor
ss
cmp
loope
aam
mul
test
decl
mov
out
xor
icebp
icebp
hlt
call
ret
in
test
jmp
fucom
mov
out
in
enter
aad
cmc
lret
xor
lock
hlt
cmp
aam
out
out
icebp
xchg
out
sub
in
ret
ss
sbb
fstp
mov
mov
in
fisttpll
cmp
jecxz
cmp
rcl
sti
into
repz
sbb
repnz
sar
out
mov
fcmovbe
xor
icebp
out
fcmovu
hlt
sti
testb
out
incb
xorl
out
iret
cmp
repnz
repnz
ror
push
mov
imul
xor
cmp
jmp
cmp
inc
lea
or
das
leave
jmp
rcl
cmp
sar
cmp
xchg
xchg
call
stc
orl
enter
xor
cmp
ret
adc
jmp
out
cld
cli
in
int3
into
adcl
iret
lret
cld
in
iret
out
icebp
loop
cli
jecxz
ret
rcr
out
out
mov
clc
aaa
stc
xlat
cmp
ds
sar
fadd
in
mov
or
enter
int3
rorl
xor
iret
cmp
int3
fmul
cmp
out
clc
fcmovb
test
in
inc
aad
into
rcr
xor
out
ror
mul
ljmp
mov
xchg
into
cmp
in
fmul
fadd
int
fprem1
fisttpl
cld
addl
add
rol
ror
rcr
fcmovnu
mov
loop
cmpsl
and
movsl
add
fsub
leave
in
call
aad
lret
fsqrt
cmp
fcmovnu
rcl
rol
out
and
ret
mov
ljmp
icebp
aas
in
int3
in
cmc
fucomi
fcmovnu
sbb
xchg
rcl
fimuls
lock
test
cmc
cmp
fcomi
imul
jmp
and
cld
out
out
out
out
jmp
iret
leave
fsub
icebp
in
rcl
loop
iret
ret
sti
rol
rorl
icebp
mov
in
rolb
xor
cmc
rcr
pushl
loopne
cmc
ds
repnz
cld
movb
lret
repnz
call
cli
sti
test
int3
loopne
in
fldl
cld
stc
in
fsubrp
out
or
in
aad
call
rolb
cli
lret
lret
in
mov
xchg
repz
aaa
jmp
dec
roll
ret
jecxz
cmp
cmp
leave
iret
std
mov
int
enter
jmp
loop
repz
fcmovb
enter
test
out
into
sub
in
aam
fsubr
rol
test
out
rorb
loopne
in
rcl
cmc
sub
xor
loope
cmp
lock
call
enter
int
int
hlt
inc
xor
divb
enter
loopne
hlt
shl
ds
enter
in
in
std
out
sub
into
xor
fdivrl
sti
idiv
aas
out
ljmp
call
testb
xor
int
fidivrl
int
neg
cmp
in
cmp
out
out
into
int3
divl
ret
out
sti
int3
cmp
cmp
loop
in
mul
fucomi
out
in
leave
sti
lock
xor
xor
jmp
fxch
fcmovbe
xor
test
jmp
in
mov
out
out
ret
lret
repz
roll
xlat
mov
int3
aad
lea
mov
fmul
cmc
fadd
xor
cmp
fmul
std
ret
add
test
cmc
loop
addb
repz
loope
hlt
in
ljmp
rcl
rolb
sub
mov
inc
lret
fsubp
aam
imul
xor
aad
cld
cmp
sbb
and
loope
jmp
lock
cmc
xor
jmp
leave
loopne
std
hlt
loopne
in
rol
shl
xlat
test
sbb
nop
xchg
xor
into
out
test
sarb
aad
cmc
loopne
fsubp
lock
xor
jmp
shlb
iret
aad
rcl
int
cmp
repz
fsub
jmp
jmp
xchg
shl
jecxz
shr
sti
iret
cmp
in
shl
test
ret
cld
sti
addb
lret
ror
enter
rcl
fucom
ror
test
aas
out
leave
ds
mov
jmp
fiadds
xlat
lret
aas
cmp
fsub
lret
sti
cli
neg
fmull
ljmp
cmc
into
fld
out
loop
cli
vcvtdq2pd
mov
loopne
xor
into
aaa
stc
cld
fldl2t
rcl
inc
rcl
fnstcw
cmc
shr
lret
xchg
enter
xor
rol
aas
fidivrs
sbb
xlat
xchg
test
xchg
xchg
repz
repz
aad
fmul
std
lock
divb
aas
cmp
repnz
enter
jmp
mov
test
out
xor
enter
sti
lret
jecxz
out
les
test
lret
iret
icebp
mov
fdivr
jmp
fsubrp
fstpt
xor
lock
mov
jmp
int3
ror
shl
xchg
hlt
das
aaa
fcmovnbe
cmp
int3
xlat
clc
repz
rol
cld
in
jmp
fucom
fidivs
xor
jmp
enter
sarb
in
inc
mov
cld
mov
lret
fstp
int
loop
aad
repnz
xlat
xor
out
lock
rcl
cmc
fchs
addl
stc
repz
loop
icebp
xor
repz
leave
jmp
clc
in
test
lock
out
test
fmul
out
std
call
in
cmp
aam
lock
idiv
xlat
xor
hlt
test
vpaddsb
mov
mov
jmp
ret
leave
aad
fcmovnu
sub
lcall
movsl
add
mov
call
xlat
lret
int3
sti
hlt
in
in
xor
mul
call
jecxz
loope
aaa
enter
sar
out
enter
stc
filds
cld
test
loop
enter
fildl
xor
out
aad
out
cld
aad
xlat
rcl
fistpll
loope
ljmp
fsubp
and
out
repz
cmp
repz
fmul
lock
out
ffreep
test
out
cld
ljmp
int
shrl
lock
int
pushl
cmp
test
mov
push
addb
rcr
lret
jmp
enter
cmp
rcr
cmp
mov
icebp
call
xor
shl
int3
clc
fprem1
out
lret
ds
ljmp
jecxz
enter
out
lret
clc
cmp
rolb
repnz
clc
xchg
std
in
in
icebp
test
cmc
ds
fiaddl
in
addl
cld
roll
in
cmp
std
vpmaxsw
shl
aad
test
sar
repz
jmp
out
mov
in
mov
repnz
clc
cmp
iret
cli
cmc
fdivp
shl
cmp
ds
xchg
fildl
into
repz
repz
xor
jmp
in
test
sbb
cli
repz
aad
ljmp
ror
cmp
aam
in
idiv
test
mov
loope
jmp
sbb
into
enter
sar
out
lret
jmp
sti
xchg
mov
test
xlat
orb
enter
hlt
out
fidivl
idivl
icebp
shl
xchg
mov
enter
out
rolb
ret
ljmp
loope
ds
test
in
int3
in
jmp
nop
mov
iret
divb
lret
sarb
fcomip
iret
xchg
ret
lret
enter
faddl
fxam
cli
cmp
fcmovbe
std
sti
xlat
std
loop
repz
fsub
out
flds
mov
ss
xor
neg
neg
in
cmp
out
sar
fadd
cmp
out
mov
incb
xor
iret
cmp
rcr
faddp
jecxz
orb
fimull
repnz
enter
cli
cmp
addl
loope
in
stc
ljmp
xor
aaa
cmp
xor
lock
loop
call
leave
fisttpl
int
lret
icebp
out
jecxz
out
clc
lock
aas
rcl
out
test
lret
mov
mov
out
in
out
iret
shll
ljmp
out
in
test
adc
loope
loope
lret
xchg
orl
cld
lds
rcl
int3
int3
and
repnz
add
mov
adcl
xor
call
icebp
loopne
jmp
div
mov
call
stc
test
xchg
xchg
lock
ljmp
jmp
repnz
int3
ljmp
cmp
test
aaa
leave
iret
fabs
cmp
out
inc
hlt
ret
mov
xchg
lret
xlat
loop
shl
into
sti
leave
cmp
aam
icebp
aam
fprem1
test
into
in
iret
fsub
fiadds
loop
int3
in
xor
jmp
xor
fsub
cli
fmul
lret
sbb
adcb
in
ljmp
cli
cmc
sti
shl
xlat
enter
in
int
and
cmp
jmp
cld
stc
addb
mov
fcompp
mov
in
cmp
lock
ss
fdiv
cmp
aad
in
ljmp
out
shl
out
shl
cmp
in
rcr
cmp
sub
mov
testb
jmp
int3
mov
aam
in
lock
aam
xlat
in
cmc
int
cli
lock
roll
cmp
out
repz
stc
xor
int
cli
test
loopne
call
jmp
sti
repnz
xor
repz
jmp
in
in
rcl
decl
test
jmp
icebp
shl
mov
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
iret
int
test
jle
add
fst
fndisi(8087
leave
cmp
fidivrs
idiv
in
test
jmp
lret
out
xor
sti
sar
xlat
cmc
shl
sar
jecxz
mul
int3
jmp
ljmp
ret
xor
stc
enter
fadds
call
aam
clc
int3
into
call
xchg
in
cmp
xor
xor
idivb
out
icebp
cmp
cmp
filds
lret
repnz
out
clc
ret
rol
cmp
loopne
cmp
cmp
cmc
cmc
xchg
int3
int3
pop
out
xchg
rcr
xchg
cld
in
rcr
out
cmp
aas
faddp
sarl
fcmovu
fsincos
add
leave
jmp
xchg
call
repz
stc
xor
cmp
cmp
aas
in
std
cmp
in
rcl
sti
loopne
loope
out
cli
out
cmc
out
xor
cmp
fildl
shl
into
fsin
xchg
xor
into
cmp
cmp
repz
cli
cli
test
ret
movb
loope
nop
xchg
vshufps
repnz
clc
ss
std
xlat
out
cmp
adc
fdivrp
orl
shrl
int
into
in
cmp
aam
stc
aad
shl
fadds
mov
into
std
jmp
in
xchg
ljmp
out
xor
in
in
test
rol
out
fiadds
jmp
std
adcl
hlt
lret
icebp
faddl
sti
mov
loop
lret
nop
mov
lds
out
aam
iret
cmp
repz
in
ret
div
in
fsub
stc
cld
into
lock
ljmp
int3
cmp
in
in
fsubp
lret
loopne
ficoml
out
repnz
icebp
in
std
clc
hlt
xor
in
fcmovb
vpaddusb
in
xchg
test
xor
ret
ljmp
fcmovnu
icebp
faddl
clc
nop
int
iret
call
iret
xor
fdiv
vpaddsw
loop
loop
iret
icebp
lock
roll
mov
fsubrp
xchg
test
cmp
lret
loope
fnstcw
or
fsub
fadd
fsubr
nop
fucom
out
int
xchg
icebp
leave
jmp
in
into
cmc
lds
test
int
shl
in
hlt
out
shr
jecxz
stc
xlat
sbb
repnz
clc
loop
cld
fidivrl
ret
xchg
movb
jmp
jmp
out
shlb
out
sti
ss
icebp
cmp
cmp
and
mov
lock
aad
hlt
hlt
into
std
rcr
fdiv
adc
div
loope
cld
aam
ljmp
lock
test
cmc
iret
lock
repnz
ret
cmp
in
in
mov
ljmp
jmp
cmp
cmp
mov
cld
dec
lock
out
cmp
iret
call
jmp
out
sar
aam
aad
in
in
jecxz
rolb
in
xor
jmp
ror
cmp
in
aaa
jecxz
call
xlat
neg
out
int3
out
jmp
repz
xor
lret
not
loopne
xlat
ljmp
ror
ljmp
in
mov
ljmp
iret
dec
or
in
fcmovbe
leave
in
jecxz
push
out
call
in
cmc
in
ljmp
cld
aad
cli
cmp
lret
cli
jmp
in
out
ret
cli
cmp
rol
cmp
lock
loop
jmp
les
lds
xor
jmp
fsubr
sti
stc
int3
cli
int3
stc
clc
jecxz
aam
xor
call
fsub
mov
int3
int3
out
aaa
xor
fdivl
or
lock
hlt
test
lret
mov
fstl
ret
idiv
out
cmp
aam
out
rcl
stc
jecxz
in
fcomi
sti
in
in
int3
ret
out
fincstp
sti
shl
fmul
lret
cmp
stc
repnz
imul
mov
test
or
in
mov
out
fsubrs
lret
fcmovnbe
fidivs
idiv
not
clc
loopne
fcos
xchg
mov
fisttpll
sarb
cld
int3
repnz
addb
clc
loope
call
mov
xchg
mov
jmp
repz
lret
shr
fimuls
test
and
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
pusha
jns
sub
xor
movsl
add
rcr
fistpll
test
mov
jmp
enter
iret
in
ss
ss
repz
fiaddl
ret
and
cld
xchg
in
loope
xchg
clc
lret
in
xor
lock
fidivrl
fdivr
mov
in
cld
out
out
imulb
jmp
cmp
aad
sti
cmpb
xor
enter
jecxz
in
xor
out
lret
iret
div
fdivrs
ret
out
xchg
ror
int
fiadds
orl
icebp
fcmovnu
xor
dec
in
in
clc
aam
fidivrs
fmul
stc
out
in
in
enter
stc
repnz
fdivr
int3
lock
hlt
roll
aad
fsubp
inc
int
ljmp
hlt
std
jmp
std
loopne
ljmp
jmp
jmp
fcom
fnstsw
div
fucom
xchg
in
mov
loopne
call
xchg
loopne
hlt
into
cli
iret
hlt
lock
cmp
loope
ret
fpatan
div
sarl
ret
fmull
mov
rcl
fmul
jecxz
in
xlat
cmp
repz
rcl
fdivp
fsub
fdivp
clc
std
mov
mov
sar
imul
ffree
xlat
jmp
inc
fcmovne
rcl
hlt
mov
out
out
xchg
mov
les
sub
cli
faddl
icebp
aam
rcl
jmp
repnz
aam
cmc
in
cmp
lret
out
stc
int
cmpl
ljmp
loopne
shl
in
icebp
out
int
cmp
shl
enter
fidivrs
jecxz
mov
cmc
in
mov
shr
loop
int3
loope
in
jecxz
sar
xor
out
rcr
cmp
repz
sti
mov
lret
cld
lret
test
shl
sti
rcr
xor
incb
jmp
stc
lret
shr
out
xorl
lret
fdivrs
repz
jecxz
fcom
fxch
imul
testb
hlt
ror
fcmove
ljmp
inc
cli
fcmovnu
not
push
decb
out
popl
lret
in
cmp
rcl
sbb
test
aas
call
xchg
stc
fiaddl
out
in
shl
clc
cmp
hlt
into
cmp
repz
mov
jecxz
mov
enter
call
cmp
imulb
aad
leave
fistpll
cmp
call
rol
rol
mov
in
out
in
in
cli
ret
clc
std
icebp
add
in
lock
jmp
sti
xchg
mov
xor
repz
cmp
out
fst
rcr
xchg
int3
lret
fstl
rcl
mul
out
lock
fmul
aad
loopne
cmp
in
cli
fisttpll
jmp
fsubr
leave
sarb
ds
cld
cmp
in
not
mov
orb
loop
out
hlt
out
xlat
enter
cld
cmp
cmc
mov
mov
clc
out
cli
in
test
jmp
clc
in
std
clc
cld
aas
clc
iret
cmp
test
int3
xlat
fdivr
jecxz
jecxz
addl
ds
ret
aam
in
cmc
ljmp
cmc
mov
out
lret
ror
ljmp
cli
fsub
in
int3
fcomip
test
xor
test
out
xor
mov
aad
nop
mov
nop
rol
xor
xlat
fmul
iret
iret
int3
cmp
aad
fstpt
rcr
fucom
jecxz
xchg
int3
out
mov
loop
xor
fnstenv
idiv
shll
addl
fdivr
lret
xchg
repnz
das
repnz
shl
out
ds
fcmovu
addb
idiv
test
loop
ljmp
fcmovbe
jmp
icebp
repz
loopne
repnz
cli
ljmp
fsubr
in
in
out
xchg
aaa
loope
cmp
lret
cmp
aaa
jmp
fnstsw
test
stc
imul
jmp
fcmovnb
lret
mov
shl
jmp
cmc
lock
lock
cmp
add
fdivp
mov
test
rcl
aaa
fptan
shl
ss
ror
loop
aam
stc
mul
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
jb
popf
mov
jle
movsl
add
test
fdivr
jmp
into
in
into
xchg
hlt
das
fdiv
fnstsw
in
jmp
aad
out
call
call
test
ljmp
in
sub
iret
int
xor
cmp
sti
aad
xchg
ret
loope
sbb
xchg
out
lret
cmp
shll
aas
repnz
fcomip
out
sti
leave
test
jmp
iret
repz
ljmp
repz
aam
rol
rcl
sarb
ljmp
fldl
rol
out
xlat
jmp
jmp
rcr
loope
sar
ret
in
loope
xchg
in
mov
xor
lret
stc
cld
loopne
cli
mul
clc
stc
mul
out
mul
fxch
xchg
in
in
in
out
xor
iret
aad
fcmovbe
shr
aam
repz
cld
clc
out
ret
enter
fsubrp
rorb
stc
repz
jmp
leave
in
lret
iret
repz
mul
shl
aam
ds
mov
incl
mul
sar
xor
lock
repnz
testl
out
hlt
rclb
lock
int
xor
in
clc
cmp
fcmovbe
ljmp
jmp
adc
cmc
div
fdiv
fldt
clc
hlt
cmp
iret
xlat
loopne
ret
fimull
faddl
in
repnz
hlt
lock
sarb
loop
fucomp
repz
loopne
out
lock
jmp
sti
cmp
loope
std
cli
vpsubb
fcomp
fdiv
fdivp
jmp
int
icebp
xchg
orb
cmp
in
loop
cmc
in
out
std
loop
hlt
in
aas
out
fyl2x
ficoml
in
repz
cli
ret
cli
enter
lock
int3
xchg
xchg
call
fcmovu
icebp
cmc
ret
cmp
sbb
mov
fisttps
lds
xor
ljmp
shl
fcmovnu
movl
hlt
test
icebp
loop
les
repnz
aas
int
clc
add
fucomp
std
leave
xchg
out
xor
test
leave
out
fldz
rcl
aaa
rol
repz
clc
cli
ret
ror
in
hlt
int3
xchg
aaa
xlat
fld1
cmp
dec
cmp
sarb
xor
movl
in
fld
fcmovbe
stc
into
into
mul
icebp
cmp
sar
rcl
out
call
mov
lret
rol
jmp
cmp
cmp
cmc
out
add
aas
cld
incb
in
movl
jecxz
out
xor
fnstcw
add
fdivr
loop
jmp
dec
sub
jmp
out
xor
cmp
mov
fstp
in
xchg
repz
jecxz
ret
ret
cmp
shl
ds
xor
out
hlt
ret
mov
ret
lret
into
mov
int3
xchg
shl
loop
into
in
int3
divb
lret
rcl
loopne
rol
fsubp
fcmovnb
shl
in
out
mov
out
out
call
in
hlt
repnz
call
fcmovb
shl
fcmovnu
stc
xchg
sub
xor
hlt
loop
hlt
out
xor
iret
cmp
xor
aas
ret
loop
jmp
xchg
cmc
in
cs
out
xor
out
iret
shr
repnz
out
iret
loopne
shl
test
loope
call
int3
lret
xor
cmp
loopne
jecxz
shl
mov
mul
mov
jmp
dec
xchg
jmp
loop
jmp
loopne
shl
sar
loopne
in
cmp
out
ljmp
in
not
leave
cmc
lret
iret
sarl
cld
cli
jecxz
clc
jecxz
xchg
xchg
in
icebp
fimuls
xor
fcom
fcmovb
rcl
aam
out
sti
shl
cmp
stc
std
shl
fucomi
jecxz
mov
test
in
cmp
cmp
loop
in
rol
cmp
fildl
fimull
rol
out
jmp
cmc
xor
fmulp
cmp
iret
rolb
aas
ss
ss
fsubr
not
into
std
shl
call
mov
mov
out
jmp
int
xor
ror
cld
ljmp
test
add
xchg
jecxz
pushl
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
repnz
jno
cmp
movsl
add
orl
cli
xor
int3
jmp
ror
ljmp
adc
xchg
jmp
faddp
aam
in
out
ss
aaa
shl
xchg
lock
jmp
decb
mov
iret
div
leave
aaa
fldln2
cmp
fpatan
int3
test
ret
call
cld
fsubp
fildl
mov
lret
hlt
sub
out
jmp
test
ret
idiv
aad
xchg
dec
out
jmp
mov
loope
int
leave
sub
aam
xlat
fidivrs
jecxz
ret
stc
clc
std
fcmovne
lret
xchg
int3
in
icebp
loope
fldz
xor
aad
sti
ds
xor
icebp
sar
les
cli
in
decb
jecxz
jmp
int
stc
aad
cmp
shl
addb
incl
lret
fstl
out
cmp
leave
leave
jmp
int
ds
div
loop
fucomi
mov
adcb
sub
into
hlt
out
ljmp
ret
in
loopne
leave
sti
lret
sbb
test
leave
aam
cs
sti
int
shl
call
sar
int3
ljmp
mov
hlt
shlb
iret
in
repnz
cmp
cmc
cld
std
out
cmc
fcomp
mov
shr
icebp
xor
in
out
sarl
loopne
sar
div
mov
leave
out
sti
stc
out
out
lret
cmc
in
repz
cli
icebp
cli
cmp
mul
loopne
fnstsw
repnz
shl
mov
icebp
repnz
cli
into
std
idiv
cmp
out
cmp
cmp
addb
loop
fdivr
repz
in
ljmp
iret
stc
ds
shl
hlt
stc
call
loope
iret
lret
and
loope
leave
repz
xlat
ror
int
int3
ss
adc
in
lret
mov
mov
loopne
jmp
hlt
aas
cmc
call
cmp
and
jmp
ds
ffree
cmpb
leave
mov
cmc
aam
clc
repz
fucom
out
mul
jecxz
iret
ret
sar
ret
sub
jmp
hlt
out
repz
in
leave
shl
into
int
xor
cmp
xlat
in
mov
aam
xor
ret
iret
std
cli
out
cmc
icebp
rcl
aam
xchg
loope
int3
ljmp
test
int3
lret
stc
ljmp
cld
fst
mov
test
out
out
jmp
les
loop
in
xor
fadd
xchg
iret
rcr
or
loopne
in
fcmovne
in
ljmp
cmc
loope
lock
sbb
cli
aad
lret
xlat
in
shr
xchg
xchg
out
aaa
jmp
out
cs
cmp
in
cld
les
fildl
cld
xchg
fsubrp
call
fsubr
xor
rcr
std
ret
xlat
ret
in
sti
lret
leave
fndisi(8087
xchg
xchg
xor
lds
ror
sarb
out
fst
cmc
int3
ss
fsub
out
fimuls
call
loope
fucom
int3
xor
fdiv
lret
fcmovnbe
ds
into
ljmp
movl
repz
xchg
ret
sti
shl
ss
jmp
xor
xchg
loope
fsubrp
jmp
and
fmul
jmp
imul
aaa
cmp
in
xchg
cmp
leave
mov
enter
repnz
cmc
xor
xor
sarb
cmp
aad
hlt
in
call
mov
repnz
enter
not
out
into
cmp
hlt
xlat
aam
shl
lret
int
mov
in
jmp
leave
int3
jmp
xor
call
out
out
ror
out
sti
int
fisttps
jecxz
int
repnz
fidivrs
iret
cmp
stc
cmc
cld
test
fld
test
sbb
into
aaa
xor
xor
cmp
iret
repnz
mov
loopne
stc
or
fistl
vpsubsw
int3
lret
clc
fdivrp
cmp
repz
decl
loop
in
int
xchg
loope
call
in
shl
bnd
cld
xlat
mov
loop
in
rcll
jmp
xlat
stc
inc
sti
int
ret
clc
call
in
lret
mov
aam
xor
add
add
fcom
fstp
je
xchg
or
and
jle
movsl
add
xlat
out
cmp
std
not
in
cli
addl
out
mov
leave
loope
icebp
rcl
out
stc
in
lock
lret
fdivl
cmp
fldl2t
in
neg
int3
fildl
xchg
int3
shl
repz
int
ss
lret
div
ds
fucom
aad
clc
in
into
xor
mov
ror
cli
ror
leave
in
rcl
not
test
test
in
mov
xlat
mov
mov
xchg
in
lret
shl
ss
repz
std
cmp
sti
shl
hlt
cmp
call
out
nop
repz
repnz
xor
test
out
loopne
hlt
sti
into
rcl
leave
std
loopne
out
in
out
in
repnz
into
shr
fistpll
rcr
rcl
rolb
aam
clc
stc
cli
addb
aas
jmp
xor
cmc
cmp
ror
sti
fcmovnbe
mov
loop
int3
out
lret
out
xchg
in
aam
xor
leave
int3
sub
aaa
rcr
fucom
sti
ret
jecxz
jmp
test
rol
shr
lret
xlat
jmp
int
in
icebp
icebp
cli
addl
loop
shr
loop
icebp
mov
nop
loopne
ret
fyl2xp1
cmp
shr
jecxz
test
ds
enter
sti
out
nop
xchg
xlat
cli
sarb
int3
clc
shr
loope
xor
jecxz
out
call
lock
out
in
int
jmp
fcmovbe
loop
fmul
into
xchg
cmp
mov
xchg
div
icebp
cmp
rcl
xlat
ljmp
out
jecxz
in
into
out
stc
into
lret
repz
loop
cmp
ss
cmp
xlat
cmc
addb
aad
adcb
cmc
cmc
jecxz
stc
in
fcos
cmp
sarl
ret
ljmp
repnz
jecxz
out
xor
in
fucomi
cmp
aas
hlt
fcom
in
sarb
std
out
test
in
in
xchg
lea
repnz
cli
fstpt
aaa
aas
ds
cld
ds
addl
int
lret
das
aam
xor
jmp
into
sti
out
call
xlat
in
sti
clc
into
stc
mov
repnz
imul
in
repz
enter
cli
fucomp
rcr
ret
rcl
sti
cmp
in
loope
out
in
fucomip
in
clc
xabort
hlt
out
in
int3
ds
loopne
shl
cli
fucomp
call
fdiv
icebp
xor
lock
aad
cmp
lret
cli
rcr
shl
roll
fsub
jecxz
in
mov
in
jecxz
leave
out
fnsave
ds
roll
stc
mov
sti
mov
in
ljmp
xor
cmp
aad
stc
flds
out
addl
sbb
hlt
xor
in
int
rcl
into
cmp
aad
ret
leave
testl
in
out
sub
clc
aad
icebp
loopne
out
sarb
in
decl
in
xchg
fcomip
lock
aaa
aad
cld
std
sarl
ret
aas
rol
sti
out
test
lock
jmp
jmp
cmc
fadd
fcomp
sar
fdivr
repz
in
fucomip
shr
lret
enter
fldl
int
xor
das
fcmove
sar
shr
aad
iret
out
test
fxch
enter
and
sar
fcmovu
ffree
idivl
repz
enter
lock
fucom
jecxz
aam
aaa
enter
fdivr
cmp
repz
hlt
jecxz
enter
fxam
call
loopne
xchg
xor
int
int
out
fld
int3
cli
cmp
fcom
test
ror
xor
stc
shll
out
imul
stc
loopne
ds
hlt
enter
lret
into
fimuls
aad
int
fucom
cmp
sar
rcl
cmp
int3
enter
jmp
mov
hlt
mov
jmp
fnstcw
aam
aaa
fcmovnu
out
loope
int3
jecxz
ljmp
out
repz
aad
in
jmp
shll
jmp
test
in
xlat
aad
lock
jmp
xchg
loopne
loop
in
int
cld
sti
lock
ds
out
hlt
repz
std
testl
loop
ror
xlat
cmp
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
jo
ret
jle
movsl
add
sarl
idiv
ret
fdiv
mov
lret
loopne
std
in
xchg
nop
leave
not
into
in
in
not
clc
icebp
into
loop
neg
sti
icebp
enter
sar
lea
into
hlt
cmc
test
aam
ds
sar
mov
xchg
fimuls
in
loope
call
out
jmp
incl
xor
sbb
fimull
xchg
fildll
sar
out
cld
fcomip
ss
inc
neg
test
rol
mov
in
xor
sub
cli
hlt
fnstenv
icebp
mov
lea
lea
ror
aaa
icebp
jmp
lret
fadd
repz
std
adc
adcl
stc
out
aaa
fcmovne
fld
jmp
ror
fdivrp
fcmovbe
fsubp
icebp
ret
xchg
test
out
sti
xlat
fucomi
cmp
cld
fcmovu
std
stc
inc
loop
cmp
sbb
shl
int3
xor
cmc
ss
jmp
cmp
mul
rorb
clc
test
test
xor
in
stc
cmp
lret
dec
loop,pt
incb
fdivrp
lret
movb
jecxz
aaa
jmp
xor
aad
stc
fucomp
out
into
fcomp
faddp
jmp
cmc
out
cli
cmp
lret
out
aaa
loop
iret
into
shl
loopne
fidivrs
loope
jecxz
loop
clc
fmuls
xchg
ret
rcl
cmp
xor
cld
fisttps
out
xchg
xor
jmp
hlt
out
fmulp
cmc
loopne
cmp
test
std
cmp
enter
xchg
in
aam
jecxz
icebp
xor
std
icebp
cmp
cmp
xlat
cmc
in
lock
cmc
cli
out
fmuls
cld
leave
ror
lock
cmc
cmc
int
jmp
fdivr
cmp
cmp
ret
aad
jmp
addl
rclb
int
in
ffree
loopne
out
in
into
cmc
cli
in
out
sti
jmp
jmp
into
orb
xor
cmp
cmp
cmc
xchg
jmp
out
lret
idiv
decb
out
shr
aaa
div
enter
loopne
cli
cmp
std
fcom
sar
enter
test
cld
in
loopne
aaa
out
lret
fdivr
out
sub
cmp
repz
in
icebp
in
mov
loope
icebp
lds
enter
xor
leave
jmp
fucom
cmp
cld
loope
add
mov
in
icebp
mov
xor
xor
clc
aad
cmp
cmp
stc
cmc
loopne
cmp
loope
out
repnz
in
lds
ljmp
cmp
sti
cmp
mov
int
in
mov
out
jmp
repz
xor
sti
ds
int3
cmp
inc
out
in
orb
sub
sti
out
int3
shl
loope
jecxz
in
cmp
out
mov
nop
fsubp
jmp
jmp
sbb
out
cmp
xlat
std
in
fsubr
in
decb
iret
cli
fidivrl
std
cmp
icebp
loope
sti
jmp
fsub
mov
cmp
cmp
rcl
int
repnz
rcl
clc
mov
jmp
out
nop
int
test
leave
hlt
lret
out
repnz
clc
fadd
aad
fucomi
in
mov
mov
loope
mov
xor
xor
int
cmp
xlat
in
leave
mov
loop
iret
xchg
xor
aad
cld
int3
cmp
cmp
xor
hlt
testl
ficoml
in
lret
icebp
iret
aad
icebp
or
int3
jmp
cmc
fisttpl
lret
incl
add
xor
repz
repnz
jecxz
fcmovu
aam
jmp
mov
xchg
xor
aad
cmp
in
cmp
aas
test
xor
mov
loop
lret
test
out
clc
leave
stc
enter
into
cmp
loop
cmpb
movb
iret
xchg
subl
xor
fdivrs
cmp
out
cmp
repnz
shl
rol
inc
fucomip
loopne
dec
in
or
sar
xor
rcr
enter
in
fnsave
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
or
out
enter
add
loop
jmp
in
fucom
fiadds
loope
jmp
neg
lock
mov
cmp
fsub
cli
sti
test
stc
stc
aam
aam
call
stc
loopne
stc
fdivr
lret
mov
test
repz
cmp
cmp
hlt
cli
cmpb
fchs
cli
out
repz
mov
in
xor
leave
fidivrl
cld
neg
repnz
addl
mov
in
clc
int
cld
xchg
rclb
clc
sti
out
lret
cld
icebp
clc
lock
fcmovnu
loopne
test
repnz
sub
ret
into
cld
out
repnz
fcmovnb
adc
fiaddl
out
rclb
aaa
cmp
lret
rcr
in
cmp
cmp
fcomip
loopne
fsubp
loopne
lret
decl
ljmp
icebp
leave
loopne
fcomp
rcl
xlat
ret
fucom
sti
testb
out
imul
xor
cmp
ror
xor
ds
not
loop
add
out
cld
ljmp
clc
divl
shl
out
cmp
int
icebp
jecxz
fcmovu
out
mov
loopne
repnz
nop
int
xchg
in
jmp
cmp
out
out
repnz
flds
sbb
sti
imul
leave
jecxz
into
mov
leave
sti
fdivl
int3
shl
aam
adc
shl
jmp
fdivr
clc
in
add
in
xchg
jmp
lret
rcr
aas
test
cli
test
mov
ljmp
sti
popl
int
cmc
xlat
repnz
idivl
aaa
lret
testb
fucomp
jecxz
test
sti
lock
mov
enter
lret
stc
in
cmp
fdivrs
cli
cmp
xor
lock
test
mov
shr
int3
xor
cmc
cmc
repz
sarl
rcr
cmp
sar
test
ret
ljmp
repnz
iret
cmp
loopne
mul
repnz
cld
mov
in
iret
xor
call
into
jmp
std
out
mov
leave
xor
addb
iret
in
test
jmp
out
ds
cmpb
hlt
rcr
enter
std
in
iret
jmp
xor
out
cmp
cmc
ds
fxch
loop
sbb
fdivrp
in
lock
rcr
out
divl
lock
cli
in
shl
repz
test
loope
nop
mov
call
loop
aam
fdivrp
in
idiv
rcr
shl
add
test
and
addb
xor
jmp
cmp
stc
std
filds
in
orb
into
loop
in
sub
in
repnz
aad
lock
cmp
not
out
cmp
repz
out
nop
mov
out
in
lock
aad
fmul
aaa
neg
in
out
rcr
fst
fld
loopne
fsubrp
int3
in
out
addb
aad
into
cmp
xor
sarb
faddl
jecxz
in
in
jmp
mul
in
cld
cmp
xlat
ret
rcr
rcl
xchg
mov
enter
jmp
cmp
cld
cmc
repz
sbb
f2xm1
and
clc
testl
sub
das
aam
aam
xlat
out
idiv
stc
int
fdiv
ret
cmp
mov
in
mov
stc
mov
in
in
xchg
int3
cs
loop
cmp
out
ror
repnz
jecxz
stc
repz
sti
mul
idiv
test
repz
aam
repz
rcl
mov
cmp
sarl
sti
ret
cmp
jmp
out
sti
sar
mov
cmp
int
out
cld
adc
shl
in
test
fdiv
out
ljmp
xchg
xchg
sar
xlat
aam
fcmovbe
loopne
rcl
addb
sti
loopne
out
adcb
aad
loope
xor
cmp
cmp
test
mov
repnz
int
aad
repnz
lret
clc
jmp
shl
loop
fld
cld
fst
ret
loop
enter
ljmp
repnz
in
fcomip
cmp
fdivrl
cmc
inc
out
cld
in
fiadds
rolb
rcl
cmp
cmp
xor
enter
clc
in
xlat
fimull
xor
jmp
aam
mov
lods
sub
adc
add
mov
jmp
fisttps
enter
cmp
cmp
sarb
cmp
bnd
out
call
xchg
das
fsub
in
lret
ljmp
cld
not
and
fdivr
decb
mov
aaa
in
das
iret
cmp
fnstsw
roll
jmp
mov
nop
in
sub
xor
cld
fidivrs
stc
xlat
rol
loop
loop
xchg
ret
fldl
int
in
ljmp
out
rcr
repz
out
xchg
filds
xchg
adcl
cmc
div
repz
int3
xor
clc
int3
lock
ror
sub
loope
rolb
hlt
call
in
int
cmp
loope
fimuls
test
stc
mov
lret
aad
div
xlat
out
repz
rcr
aaa
loop
fcomp
out
jmp
in
cld
sbb
aad
repnz
ljmp
test
test
in
mov
mov
fdivrp
repz
xchg
test
jmp
cmc
fcmovnu
fsubp
fiadds
and
in
loopne
orl
ror
int3
fdivp
cmp
hlt
test
cmpb
jmp
or
mov
nop
in
repnz
sub
ror
in
aam
xor
out
lret
loop
in
out
aad
sarl
shr
out
dec
lret
repnz
jmp
cli
xor
icebp
shr
ret
test
fstp
faddl
lock
repnz
repnz
out
int3
fdivr
shr
int
xlat
cli
cmp
cld
clc
and
in
mov
in
rcl
enter
cmc
jmp
xlat
aad
in
out
jmp
lret
icebp
enter
sbb
jmp
leave
sbb
loope
ss
call
or
jecxz
repz
loop
ljmp
rcl
out
cmp
shl
mov
faddl
xor
loop
in
fcomi
loopne
xor
cli
fcmovnbe
fdivp
jmp
cld
mov
in
leave
xchg
out
out
xlat
std
int3
out
imul
test
enter
stc
sub
out
shl
out
cmc
lret
out
idivb
rolb
jmp
loop
out
rorl
sub
xlat
ljmp
idivb
sti
fiaddl
loopne
mov
mov
cmp
divb
jmp
clc
cmp
repz
cli
repz
cld
loopne
std
fsub
and
and
das
jecxz
call
in
clc
cmp
repz
ds
and
adc
xchg
in
in
rcl
rcl
iret
jmp
in
test
hlt
cmc
addl
in
in
into
fsubp
loop
adcb
in
fcomi
out
out
lret
out
sar
xchg
in
shl
fsubr
mov
hlt
jecxz
iret
aaa
repnz
shr
incb
loopne
sti
ljmp
test
std
nop
ret
loope
test
sarb
roll
xlat
xlat
push
jmp
fisttps
out
fnstcw
int3
out
fcomp
fdivrl
fnstsw
loop
fidivrl
repz
in
out
nop
test
cmc
out
loopne
div
in
fldlg2
int3
stc
lret
sar
std
addl
out
out
aam
cmp
call
fdiv
clc
cmp
rcr
add
sub
shl
lret
aam
xor
fadd
xor
jmp
repz
fiadds
fmul
in
jecxz
jmp
aad
shr
cld
fdivr
jmp
lret
out
xchg
cmc
jmp
cmp
lret
xchg
shl
call
out
fcom
fcomi
ret
icebp
test
in
inc
jecxz
loopne
out
loopne
stc
aam
into
in
fnstcw
fidivrl
loop
ds
in
test
mov
std
mov
out
out
icebp
aaa
leave
aam
iret
jmp
hlt
fcmove
cmc
loop
ds
in
test
xchg
lock
cmc
xlat
jmp
std
out
sarb
sti
out
ds
cmc
rorl
in
mov
testb
fstp
ss
cmp
in
sar
fisttpl
out
leave
xchg
xchg
orb
add
inc
cld
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
ds
insl
mov
add
jmp
ffreep
das
out
aad
neg
leave
cmp
loope
icebp
and
out
in
out
fisttps
aad
cmc
int3
iret
lock
sti
fnstsw
clc
xlat
xor
call
cld
rolb
fdivr
icebp
cmp
out
sub
div
div
lret
in
call
mov
ljmp
xlat
fdivp
fbstp
iret
in
idiv
repnz
test
fst
fcomi
jmp
das
ret
fcmovbe
xor
cmp
cmp
in
cld
enter
push
sub
in
enter
fcomi
ss
ret
lds
aam
aad
cli
cli
popl
shlb
into
lret
ljmp
std
cmc
into
aad
sbb
in
fiadds
mov
cld
xchg
xchg
icebp
aam
aaa
int3
int
rolb
aam
enter
fprem
fucomi
std
test
jmp
aad
aaa
rcr
aaa
out
ret
std
neg
fcmovnu
sti
int
mov
test
loop
call
iret
xlat
out
loopne
imul
stc
roll
or
sti
loope
repnz
enter
cmp
aad
loope
cmp
cld
fsubp
fcom
fsub
testl
xchg
div
shr
enter
call
repz
out
fxam
rolb
jmp
rorb
sti
call
repz
repnz
std
loope
testl
xor
int3
xor
xlat
cmp
repnz
std
loopne
jmp
jmp
fsubr
fmul
repnz
in
int3
cmc
cs
cmp
cmp
std
roll
in
mov
call
call
out
out
into
shl
jmp
aad
std
fdivp
xchg
out
mov
icebp
addl
out
cmp
sbb
cmc
fxtract
xlat
in
loop
rcr
xchg
rorl
cmp
xor
ljmp
and
cmp
addl
jmp
cs
ret
vpaddsb
shr
repnz
cmp
mul
stc
mov
out
sti
in
test
aam
xchg
in
repnz
fdiv
aas
aad
dec
int
ret
push
repnz
jmp
mov
test
cmc
in
ffreep
jmp
xor
fndisi(8087
ljmp
roll
jecxz
loop
cmc
lock
jecxz
jmp
repnz
shr
std
lock
clc
lds
cld
orb
mul
lock
cld
int3
leave
cmp
ror
in
sbb
mov
flds
shll
leave
repz
lock
cmp
roll
call
loop
fucom
out
icebp
shr
loope
les
xor
int
sbb
cmp
cmp
and
decl
pause
xchg
int
aad
cmp
cmp
cmp
sub
fcmovnu
adc
xchg
xchg
adc
shll
into
fsubp
cmp
stc
clc
out
mov
xchg
xchg
aam
test
fdivs
jmp
les
rcr
jmp
std
cld
out
in
int3
mov
lret
lock
leave
mov
aam
shlb
fcmovb
xlat
xor
cmp
cmp
mul
icebp
ret
cli
test
rorb
in
cmp
int
cmp
orb
ret
loope
xchg
ret
jecxz
in
int
repnz
xor
iret
in
or
fmul
xlat
and
in
fcmovbe
jmp
leave
loopne
out
hlt
dec
call
ljmp
in
fcomip
fmul
xchg
aam
aad
xchg
xchg
fcomip
int3
aam
aam
fidivl
rcl
cmp
ds
cld
in
test
vpminsw
shrb
repz
enter
sar
cld
rorl
mov
in
out
jecxz
out
repz
iret
shr
cmc
cmc
out
ss
cli
in
shr
mov
in
out
mov
cmp
imul
lock
idiv
idiv
rcl
aam
sti
jecxz
loope
lret
jmp
in
frstpm(287
out
aam
xor
repz
xor
clc
aaa
sarb
cli
out
cld
xchg
cmp
mov
mov
rcr
in
int
inc
clc
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
iret
fdivrp
stc
fadd
cmp
loope
addb
into
mov
repz
jmp
loope
fdivr
faddl
int
mov
lea
iret
xor
cs
stc
enter
rcr
out
loopne
call
ljmp
ss
aaa
xor
fcmovbe
cmp
loop
loopne
sti
add
neg
ret
movl
xor
cmp
call
fmul
rcl
stc
aam
xchg
xlat
enter
mov
int
xor
rcr
fdiv
cmp
loopne
xchg
shl
test
fcmovnbe
cld
sti
iret
std
xchg
jmp
not
out
sub
jecxz
xor
loopne
xchg
cld
fsub
cld
repnz
shl
iret
stc
stc
clc
jecxz
into
lock
loopne
mov
test
rcl
in
repnz
not
in
fdivrp
out
cmpb
repz
stc
out
enter
cld
xchg
xchg
rol
xlat
xor
cmp
out
rcr
cmp
cmp
aas
lock
mov
aam
xchg
ror
addl
leave
cli
ljmp
faddp
out
fdiv
mov
loop
int
mov
lock
lret
cmp
ror
loope
cmp
shl
loope
aas
cmc
hlt
idiv
orl
ret
cmp
std
aaa
icebp
idivb
hlt
fcmovbe
std
sti
cld
test
jmp
std
cmc
jmp
xor
ror
stc
sar
jmp
sti
ds
test
out
xlat
jecxz
leave
ror
loope
out
shr
test
mul
fyl2xp1
sar
iret
ret
addl
fdivr
or
aam
xchg
int
repnz
aam
leave
lret
ljmp
jmp
loope
test
xchg
jmp
icebp
fcomp
ljmp
rcl
sti
xchg
mov
leave
xchg
xchg
mov
sar
vpaddusw
cmp
xlat
iret
rol
call
xlat
in
out
out
out
fsubp
cmc
into
cmp
fcmovne
in
ljmp
call
call
out
loope
loop
int
das
cmp
in
lock
xor
cmp
clc
fcmovu
jmp
xlat
fcmovbe
fucomi
shl
shr
enter
in
fidivl
hlt
idivl
rcr
in
stc
xlat
mov
neg
leave
in
mov
int
xchg
shl
ret
iret
enter
in
rol
incb
test
ret
int
or
loope
test
ror
int3
out
rcl
repz
ret
leave
into
fsubrp
xchg
xchg
clc
stc
aam
repz
or
cld
adc
int
mov
xchg
loop
in
xor
in
out
xor
out
std
cmp
addb
jmp
sub
out
lret
fstp
shll
icebp
xor
in
test
cmp
ret
in
inc
in
in
call
call
cld
mov
aad
cld
in
cmp
fdivr
call
std
xchg
into
aam
repnz
lret
cmp
cmp
ret
xchg
int3
push
lret
div
xlat
lret
sar
idivb
rcr
xlat
cmp
jecxz
fsincos
xchg
cld
into
incb
rcr
lret
call
sar
lock
fsubrp
mov
test
movl
lret
aam
cmp
div
sti
fnstcw
out
cmp
in
cmc
stc
in
xlat
mov
enter
fdiv
in
xchg
shr
xor
rcr
lock
repnz
ror
repz
out
hlt
mov
mov
stc
add
cs
out
cli
std
iret
cmp
rcl
loopne
loop
ljmp
rolb
xor
int
mul
in
out
sbb
cmp
add
mov
sti
orb
ljmp
stc
ror
fdivrs
roll
in
in
loop
and
rcll
out
out
stc
rcl
leave
cmp
ror
ret
fiaddl
lea
hlt
jecxz
xor
ljmp
sti
cmp
repz
cmp
cmc
loope
mov
decb
leave
xchg
call
xor
aaa
shl
movl
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
fstpt
movsl
add
div
into
fucom
repz
ret
loopne
in
repz
xchg
in
rcl
hlt
lret
cmc
int
hlt
ret
cmp
testb
int3
call
out
mov
lret
in
enter
fcom
cmp
lret
ds
fcmovbe
stc
out
incl
into
mov
hlt
cli
ss
sti
xor
repz
fcmovnbe
ds
mov
fsubr
nop
xchg
jecxz
jmp
ret
not
fdivr
hlt
leave
ror
lock
mov
not
call
xchg
fimuls
sub
cmp
aaa
sti
rcl
loop
in
fld
rcl
ror
call
lret
repnz
icebp
jmp
hlt
std
aas
in
out
shl
filds
ljmp
call
fyl2xp1
aam
repz
aad
xlat
shl
fcmovnbe
flds
lea
loopne
int3
ljmp
cmp
out
jecxz
in
sar
mov
fmul
in
loop
std
repnz
in
xlat
out
in
iret
cmp
iret
stc
cmp
adc
test
test
repz
mov
int3
cmp
clc
call
fucom
out
fcmovu
aam
lret
xchg
leave
stc
xchg
xchg
int3
lret
mov
call
lds
jmp
sbb
clc
stc
fdivrp
add
out
repnz
iret
in
xor
ljmp
in
in
out
cli
xchg
aam
call
or
icebp
jmp
out
stc
sti
cmp
fnstsw
out
clc
enter
mov
jmp
rclb
vpsubb
ss
hlt
jecxz
cmp
sar
xlat
loop
stc
nop
lock
in
jmp
jmp
int
fnstcw
clc
shl
cmc
div
cli
loop
mov
dec
lock
jmp
fsub
cmp
aaa
icebp
jmp
int
iret
repnz
ret
addb
test
lock
icebp
cs
hlt
jmp
jmp
fdivrs
ret
cli
fcmovnbe
in
lret
rolb
out
int3
ljmp
fxch
ss
loopne
stc
fsubp
loope
leave
and
int
out
out
rol
cmc
fdivl
lret
icebp
cli
fdiv
int
cld
ror
int3
in
xor
in
sub
stc
cmp
loopne
jmp
faddp
fnsetpm(287
decb
out
iret
in
orl
hlt
shl
cmp
xor
aam
out
fadd
add
xchg
vphaddwq
shr
int3
cld
fistpll
cli
ret
call
out
fstp
repz
ret
in
out
ds
aam
sti
shr
test
repz
fiadds
iret
cli
lock
in
in
cmp
sti
rcr
clc
fstp
aas
rol
cmp
cli
lret
vpmulhuw
xchg
xor
clc
lock
not
clc
repz
sar
out
xchg
aad
in
cli
fistl
repnz
xlat
int3
enter
cmp
out
clc
out
and
fstp
imul
xchg
std
repnz
divl
cs
out
icebp
rol
in
xlat
shl
fnstcw
xchg
in
loope
xchg
ror
hlt
cld
iret
out
cmp
sub
fsubr
test
call
std
fmulp
repnz
ljmp
cmc
cld
rol
fsubp
xchg
iret
incb
lds
mov
std
neg
inc
repnz
fadd
hlt
xchg
lret
std
decl
ss
neg
cmp
aad
shr
cli
hlt
fsubp
loopne
clc
aad
loope
loopne
loope
xorb
clc
xor
cmp
fdiv
call
fdivr
in
fmull
icebp
repz
int3
repnz
ror
not
jmp
cmp
fucom
flds
in
jmp
addl
out
out
sarl
repnz
cmp
aam
stc
repz
mov
in
enter
nop
int
ss
sar
fidivrs
int3
repnz
out
inc
enter
adcb
xchg
in
lock
fxch
aad
cmpb
repnz
sti
in
mov
test
shlb
xor
cmp
cmp
cmp
sub
dec
clc
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
clc
add
movsl
add
hlt
fsubrp
mov
loop
jecxz
mov
in
cmp
cmp
adc
std
hlt
ret
aam
sti
jecxz
loopne
lret
in
cli
xor
in
out
sub
loop
xlat
in
rcl
fsub
enter
mov
adc
fstpt
cmc
cmp
out
into
hlt
aas
cmp
shl
fcmovnbe
imul
in
lret
int
out
fmul
fmulp
loop
shl
icebp
aaa
imul
sti
clc
enter
cmp
sar
repz
rol
ljmp
mov
cmc
in
fadd
leave
test
aam
ds
aad
test
ret
rorb
xchg
lret
jmp
in
fdivrs
in
loope
jecxz
cli
lret
lret
cmp
adcl
stc
fcmovnbe
out
loope
cmp
hlt
leave
in
ljmp
fisttpl
sub
xor
xor
test
in
loop
call
sti
into
flds
in
call
cmc
aad
aaa
cmp
out
jmp
sar
sbb
in
leave
lea
sub
fxch
shl
xor
loope
leave
rorb
hlt
loopne
loop
enter
aam
sti
test
cld
lock
mov
fyl2xp1
mov
popl
leave
xor
iret
int
inc
fistpll
fiadds
jmp
loop
mov
in
in
shl
out
fld1
repz
sarb
cmp
loopne
sti
cli
lock
test
jecxz
enter
lds
in
xor
cld
aad
in
aad
mov
mov
sub
xor
jmp
rolb
jmp
or
mov
faddl
int
cmp
cld
sub
xlat
int3
out
iret
rcr
xchg
lret
fcomip
call
imul
out
cmp
aam
into
fidivrl
faddl
fiadds
mov
jecxz
in
test
cmc
or
xor
cmp
cld
cmp
jmp
out
out
jmp
fmulp
test
xchg
loopne
mov
call
stc
ds
ds
test
loop
jmp
call
aam
call
ffreep
repz
clc
nop
loope
mov
cmp
jmp
int3
fidivrl
cmp
out
mov
inc
out
xchg
loope
lock
out
shl
aam
ss
cmp
out
out
clc
aam
fsub
leave
out
loope
in
xchg
jmp
lock
idiv
fmulp
shl
std
out
aas
fcmovbe
call
in
fucomp
addb
fstpt
fcomp
out
out
leave
icebp
repnz
into
rcr
adc
mov
iret
iret
test
xlat
rol
repz
fdivs
fucomi
stc
fndisi(8087
cmc
fst
in
fsubp
shl
lret
enter
call
shl
leave
cmp
rol
loopne
repz
test
sti
ret
aas
mov
lret
dec
test
repz
ret
xor
leave
sbb
xlat
icebp
incl
aad
out
sar
int
hlt
sub
lret
leave
div
repnz
fdivr
ds
hlt
cld
loope
jmp
ljmp
xchg
loop
out
xor
cmc
aam
fucomip
cli
stc
ret
rolb
fucomip
fimull
int
hlt
xchg
into
loop
fld1
in
dec
shl
faddl
test
sti
iret
icebp
nop
test
xchg
repnz
lret
repnz
aam
repnz
cld
loope
ret
in
fucomp
xlat
ljmp
ljmp
in
repz
fnstsw
rcr
idiv
loopne
in
fadds
mov
jecxz
in
lret
in
fucomp
aaa
sti
cld
cmp
out
xlat
addb
leave
in
fucomip
test
shr
lret
xlat
call
cmc
xlat
test
fdivrp
fadd
cli
test
out
icebp
rclb
xor
jmp
repnz
sar
loope
shr
ds
cli
out
loop
stc
in
jecxz
shl
xchg
sub
out
repnz
cld
jmp
cli
in
loop
flds
repnz
ss
in
in
shr
cmp
loope
int3
rcl
cmp
sti
decb
popf
add
mov
mov
jmp
int3
enter
lret
int
stos
test
jo
imul
in
jle
add
in
ljmp
shr
cmc
repz
jecxz
fdiv
repz
clc
std
loopne
lret
jmp
mov
aam
icebp
enter
repnz
cmp
testl
aad
mov
repz
in
loopne
imul
imul
neg
sar
rcr
xlat
in
jecxz
in
loop
lret
mov
movb
xor
into
fcomp
fiaddl
cmc
loop
movl
in
mov
xchg
lret
lock
out
cmp
jmp
aad
hlt
repz
loope
test
xlat
lock
jecxz
xchg
cld
jmp
leave
cmp
fdivl
cmp
sti
hlt
hlt
xor
call
loopne
mov
nop
int3
fmul
ret
cmp
aam
call
fdivrp
fdiv
cmc
jmp
test
stc
in
mov
in
loop
icebp
shrl
lock
icebp
cmp
out
cmp
clc
in
aas
in
ljmp
leave
xchg
xchg
mov
aas
icebp
ret
fnstenv
lret
enter
in
cmp
jecxz
lret
enter
in
test
int
std
int3
aad
int3
fcmovnbe
add
cmp
out
xchg
cli
out
xchg
xchg
hlt
icebp
jmp
xor
jmp
mul
cmp
aad
hlt
fsubp
mov
mov
cs
stc
lret
stc
enter
test
fucomp
sti
addb
mov
xchg
out
iret
std
xchg
in
out
clc
shr
rol
iret
xor
loope
cmp
sar
cli
test
cld
icebp
jmp
loopne
shl
out
ror
in
ss
int
shl
loopne
clc
loop
fadds
repnz
loope
shll
cmp
ror
cmp
out
rcr
lock
addl
mov
xchg
das
xor
repz
aaa
aad
in
rolb
fimuls
test
test
jmp
hlt
jmp
aam
cmp
out
cld
shl
in
aam
out
leave
and
in
xchg
in
divl
ret
jmp
std
not
aam
into
loope
add
mov
mov
icebp
lock
rcll
int3
leave
lret
cmp
jmp
shlb
jecxz
clc
lds
mov
fsubr
int
repnz
cmp
cmp
dec
ds
loope
imul
fdiv
fmull
loope
into
xor
out
cmp
cmc
fcmove
lock
jmp
shl
xchg
in
test
jecxz
test
bnd
out
cmp
inc
cld
cld
fcmovnu
out
ds
nop
jmp
in
aaa
clc
stc
cmp
out
lret
lock
fprem
add
enter
fcmovne
test
xlat
shl
into
ret
out
cmc
shr
cmp
cmp
shr
loope
shl
std
lret
test
xchg
aad
in
das
cli
fucom
stc
ds
stc
orb
out
xchg
dec
fbstp
leave
out
cli
lret
rcl
hlt
xor
stc
xlat
xchg
aam
test
mov
mov
fmulp
test
nop
enter
sar
out
repnz
shl
shl
aad
ret
fmulp
int
in
rcl
hlt
ss
aaa
call
xlat
sarb
aad
ds
testl
in
icebp
ror
into
jecxz
repnz
cmp
xlat
std
lock
out
cli
leave
cmc
out
cli
xchg
xchg
cmp
cmp
xor
in
ss
fcom
shr
fdiv
xlat
repz
ret
loopne
mov
test
nop
cs
xlat
fcmovnbe
loope
sti
neg
idiv
cli
test
ret
jmp
std
test
fimuls
in
div
fcmove
cli
loop
icebp
aad
ret
jmp
add
mov
out
in
xchg
iret
out
cli
xlat
xor
clc
sti
out
in
std
mov
out
test
hlt
repnz
xor
std
aaa
cmpb
hlt
int3
ret
repnz
jmp
sbb
out
icebp
in
repz
loopne
jmp
fdivr
cmp
aas
test
loop
cld
out
call
shlb
enter
xlat
std
ss
cld
fmulp
test
in
cmp
cli
cli
nop
call
aad
sub
call
fistpll
rorb
into
std
decb
loopne
add
int
add
add
rorl
add
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
mov
rcl
xor
repz
cld
lds
jecxz
orb
loopne
cs
in
in
out
cli
in
icebp
fdivp
les
aad
repz
into
nop
mov
iret
test
testb
lock
lret
jmp
cmp
fstpt
stc
sbb
mov
mov
sar
adcb
fdivrs
idiv
std
hlt
aad
fmuls
mov
dec
icebp
repz
loopne
out
shr
clc
cmp
int3
test
hlt
in
aas
shl
out
ret
mov
leave
fstl
lock
cmp
lret
in
test
out
cmp
ret
fxch
lret
in
mov
ss
xor
repz
icebp
xor
fucomi
ret
ljmp
jmp
out
lock
stc
fdiv
call
test
lock
stc
enter
mov
lea
test
in
out
jmp
fstpt
iret
repnz
iret
shl
out
xchg
or
iret
xorb
div
leave
xor
xor
ljmp
movb
out
out
ret
mov
jmp
adc
sub
out
aaa
das
fcomi
in
aam
cmp
sub
sar
rorl
into
addl
call
cmpb
in
out
fdivr
test
lret
shl
jecxz
ret
icebp
cmc
in
aaa
call
aas
repnz
adc
call
add
rol
xlat
iret
iret
jmp
out
aam
aad
hlt
repz
jmp
mov
mov
cmp
aam
fcmovnu
aad
ss
aas
into
repnz
adc
stc
jmp
in
test
out
into
repz
cmc
lret
loope
repz
xchg
out
rcr
xchg
std
fadds
loope
jmp
out
stc
aaa
loope
repnz
fcomip
ds
xchg
enter
decl
loope
cmp
lret
div
clc
std
cmp
testb
int3
nop
in
mov
roll
ret
imul
repnz
repz
int3
lock
in
sub
out
repnz
iret
leave
imul
loop
cmp
repnz
jmp
mov
out
aad
lret
int
ljmp
repnz
fidivrs
loop
fucom
in
icebp
int
mov
call
sar
fidivrl
aad
sbb
std
fmulp
div
out
jmp
loope
jecxz
in
xor
enter
fst
lret
xlat
cld
shl
out
loopne
jmp
mul
leave
fisttps
clc
cmc
icebp
int3
cmp
ror
aas
shll
cli
xchg
lret
cli
out
test
ljmp
cmp
fdecstp
int
xor
cmp
or
out
cli
call
int
mov
xor
in
int
jmp
aam
aam
fdivrp
and
fucomip
rolb
xchg
lds
sar
repnz
jecxz
icebp
fildl
loope
xor
mov
xor
xlat
int
xor
fcom
fcomp
loopne
clc
xchg
aam
stc
in
in
mov
sti
lock
aam
loop
mul
out
stc
fsubr
into
xor
fisttpll
cli
lret
test
das
rcl
stc
repz
fcomi
in
rcr
fdivrs
sar
lret
xchg
call
lret
loope
jmp
ret
cmp
cmp
ds
loopne
idiv
leave
mov
testb
test
xchg
hlt
loop
aaa
clc
int3
cmp
div
lock
in
test
mov
lock
cld
mov
divl
fdivs
leave
ror
or
jecxz
sar
cmp
ret
mov
out
xchg
shl
lret
cmp
std
aam
call
test
aas
xlat
add
xchg
leave
sti
xchg
nop
out
les
shll
call
loop
cmp
xchg
cmc
shl
aad
mov
out
fcmovne
in
jmp
loope
jmp
int
jmp
in
hlt
fcomi
in
xlat
out
call
into
in
repnz
xchg
sub
hlt
sarl
lds
rcr
cmp
fldpi
out
clc
aad
ret
or
lock
leave
hlt
cmc
xchg
xlat
lret
cmp
jmp
inc
or
movb
mov
jmp
mov
fst
fxch
jg
lods
loop
addb
cmpsb
in
jle
movsl
add
in
into
stc
fcomp
cmp
fucomp
xlat
fcmove
imul
ljmp
das
xor
hlt
int3
cmp
out
ror
adc
in
aam
clc
call
out
sbb
loope
out
lret
in
clc
std
ss
xlat
cmc
fdivr
sbb
stc
clc
aam
mov
iret
test
roll
clc
in
lret
repz
hlt
loope
fildl
orb
mov
mov
icebp
lret
enter
into
jmp
loope
iret
std
ret
shr
xchg
add
ljmp
out
jecxz
ljmp
xlat
fsubp
lock
repz
addb
int
out
lock
shr
jmp
in
in
lds
call
fildl
aam
jmp
xor
icebp
sar
lock
rcl
clc
fisttps
out
repnz
xchg
sbb
clc
in
lret
repnz
int3
rcr
xor
lock
jmp
cmp
roll
int
sarb
iret
sti
fdivr
ds
rcr
add
fld1
mov
ljmp
into
hlt
stc
fidivrs
into
hlt
sti
neg
cld
call
stc
mov
mov
call
cld
cmp
jmp
rcr
xchg
jmp
loopne
out
xchg
rolb
cmp
fsubrp
enter
incl
ror
loopne
stc
test
lret
fdiv
jecxz
iret
cmc
jmp
lret
cmc
in
and
ret
stc
incl
jmp
sar
sub
in
ljmp
aad
test
mov
in
stc
nop
loop
out
shl
ror
icebp
fucom
not
ds
cli
cmpb
fcomi
jecxz
jmp
loopne
int
addb
ss
into
aas
sar
lock
lock
xchg
fdivr
lret
repz
repnz
vpmaxub
fcmove
sti
iret
sarb
fcmovu
cmc
call
in
mov
fldl
ljmp
int
clc
lock
fdivp
test
sar
xchg
std
enter
mov
mov
in
sarl
xor
iret
shl
test
in
testl
loope
call
mul
shr
idivb
loope
xchg
cmc
idiv
neg
popl
mov
repnz
test
in
loope
int3
into
neg
filds
int3
mov
jmp
hlt
clc
ret
call
cmc
fdivp
cmc
cmp
lret
lds
sti
test
int3
test
repnz
rcl
fsubr
xlat
cld
mov
xlat
and
xchg
orl
sar
ss
xlat
hlt
hlt
test
lock
sbb
fisttpll
and
in
xor
cs
iret
clc
icebp
std
fld
sarb
push
loope
fimull
hlt
hlt
xchg
repnz
lret
lock
fdiv
cmp
rol
cld
hlt
ret
cmp
loop
xlat
cld
icebp
fisttpll
stc
enter
fidivs
cmp
ds
out
cmc
in
fndisi(8087
fstp
in
out
adcl
in
cmp
aam
cmp
aad
mul
cmc
int
stc
fdiv
aam
xchg
in
ss
icebp
ds
fdiv
in
test
cmp
repnz
sti
incb
fdivr
loopne
lock
sar
lock
fmul
cmc
loopne
fcomip
sar
ret
sbb
mov
out
testb
in
out
sub
rcr
fmul
icebp
in
cli
ljmp
stc
mov
stc
shr
int3
cmc
cmp
neg
repnz
mov
ffreep
xlat
clc
lret
stc
stc
jecxz
out
in
aad
int3
rol
hlt
clc
out
out
ljmp
fcmovbe
sub
jmp
in
mov
lret
cmp
jmp
cld
cmc
fninit
repz
mov
hlt
fcom
jmp
cld
loopne
mov
jmp
hlt
enter
cmpb
out
hlt
repz
clc
enter
orl
leave
xor
jmp
shl
stc
loopne
rcr
enter
sti
ljmp
xor
aad
cli
aad
mov
les
in
movb
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
int
jle
movsl
add
xchg
ffreep
or
loopne
orl
xlat
aaa
sarb
cmp
fucomp
in
out
filds
clc
out
icebp
int3
fcmove
mov
mov
shl
ljmp
cmpl
sti
mov
xchg
test
mov
fucom
xchg
std
ljmp
fsincos
stc
cmp
adc
hlt
out
repz
leave
ret
xlat
test
fcmovu
nop
repz
fildll
lret
jmp
cmc
lret
std
sti
out
div
shl
mov
out
jmp
leave
fadd
std
cmp
repz
fucomp
cld
sar
rcr
fadd
dec
lds
jecxz
icebp
xor
ret
cmc
hlt
xor
ljmp
stc
addl
xchg
ljmp
rcl
out
aad
lret
rol
dec
repnz
cli
in
div
fcmovnu
nop
loope
fldl
ret
leave
xor
ror
shl
aam
test
clc
aad
in
incb
xchg
xchg
shrl
imul
sar
cmp
rcl
xlat
repnz
xor
int3
lret
xchg
in
out
shl
int3
xor
int
rcr
cmp
fsubrp
aaa
in
sarb
cmc
push
fldl
aad
repnz
in
ljmp
into
std
ret
in
fucom
test
stc
xlat
in
lret
lock
jmp
shl
fcomp
rol
out
clc
aam
hlt
lret
jmp
mov
hlt
loope
shr
div
out
cmp
fcmovbe
cmp
fcmove
sbb
aad
jmp
jmp
incl
imul
repnz
fcomi
neg
out
lret
in
xlat
icebp
fmul
rol
jmp
xchg
std
into
mov
in
in
clc
into
enter
ret
in
ffree
ljmp
fmulp
test
aam
fcmovnu
icebp
cmp
out
xor
loop
ret
aad
fsubr
cmc
test
ljmp
icebp
cmc
out
fdivrs
repz
iret
fsubr
lret
loop
aas
call
ljmp
cmc
xchg
xor
call
fistpll
ds
shl
loope
imul
sti
sti
loopne
std
sar
nop
xchg
xchg
mov
shl
sti
out
jmp
call
loope
repnz
std
sti
loope
out
int3
fisttps
xorl
in
aaa
jmp
addb
movb
clc
loopne
sti
fdivr
ljmp
ss
aam
aad
fcmovne
loopne
stc
sbb
in
mov
mov
fcmovb
xchg
not
icebp
out
fsubr
into
xlat
lock
rol
out
cmc
cmp
enter
loopne
hlt
add
clc
xor
sub
ror
ss
repnz
aam
filds
xchg
out
call
xor
into
hlt
in
iret
int3
xlat
shl
cld
ret
not
lock
fdivrp
mov
sti
xchg
test
loope
xor
iret
shl
aad
aam
fsubp
hlt
lds
std
xchg
nop
hlt
xchg
xchg
imul
cmp
call
push
out
loopne
fcom
lock
jmp
mul
ror
leave
fst
shl
xor
repz
cli
aaa
in
into
xor
call
clc
orl
xchg
fucomip
ljmp
not
call
out
ret
loope
aam
in
loopne
in
rcl
mov
stc
lret
cli
iret
ljmp
sti
std
testl
int3
into
out
ret
cmp
call
cmp
in
leave
mov
sub
mov
std
int
xchg
adcl
stc
shr
lret
ret
loope
aas
fdivr
enter
jmp
sub
ljmp
jmp
fcos
cmp
ds
call
stc
mov
test
loope
call
ss
cld
cmp
aas
call
into
in
cld
xor
stc
les
movl
xlat
ror
div
in
std
cmp
in
cmpb
enter
mov
testl
lds
rcr
int
lock
out
fcmovb
out
call
fucomp
mov
call
repz
aad
cmp
in
std
hlt
jecxz
fmul
fcomip
neg
out
fiadds
xchg
aas
out
cmc
xlat
shll
repz
add
roll
mov
mov
jmp
aam
int
aad
fldt
sbb
je
jle
movsl
add
out
lret
xchg
out
loope
mov
fnstcw
xor
and
int
ds
jecxz
cmp
in
repz
out
ror
fsub
cmp
divl
jmp
rol
loop
cld
shr
orb
fdiv
adcl
loopne
cmp
aas
in
jecxz
in
test
fmulp
out
std
ljmp
shl
cmc
xlat
stc
sub
fnstsw
icebp
div
bnd
mov
aam
mov
repz
int
xor
fcos
cli
in
aas
adc
ffreep
test
sti
call
lret
in
fdivr
xor
fmulp
call
rcl
lock
std
shl
aam
out
enter
out
enter
cmp
in
jecxz
icebp
aas
out
xchg
std
fucomip
mov
loop
into
out
cmp
xor
repnz
cmp
out
in
shl
fsubrp
cmp
jecxz
loopne
out
loopne
lret
xchg
out
ret
out
in
int
rcl
sarl
shl
lock
sarl
lret
mov
clc
in
mov
incb
aam
lock
into
sti
shlb
cmp
shl
and
cld
movb
fldl
das
fxtract
out
fmul
in
std
cld
stc
addb
aad
out
fcmovne
out
loop
and
rcl
cmp
shr
xor
faddl
cmp
enter
fcmovne
leave
jmp
icebp
std
out
int3
das
aam
out
clc
icebp
iret
leave
aas
cmp
neg
cmp
shr
jecxz
stc
fadd
in
icebp
and
loop
stc
cld
aaa
cmp
stc
cmp
rol
ljmp
int3
ficoms
xor
repz
iret
iret
icebp
cmc
aam
ret
les
out
test
fucom
aam
in
out
jmp
int
in
lock
out
jmp
out
in
pop
adc
xchg
in
rol
stc
in
out
repz
jmp
les
fisttpl
std
hlt
cmc
cmp
ss
in
cmp
lret
loopne
cmpb
xchg
fndisi(8087
out
mov
out
ror
repnz
in
ss
in
xchg
jmp
mov
into
loope
test
xor
xor
aad
enter
cmp
cli
fstpt
aad
test
cli
jecxz
into
mov
jecxz
mov
sub
aaa
jmp
repz
std
adc
aaa
xlat
rol
aam
int3
lret
adcl
fcmovbe
aam
div
ror
jecxz
cmp
mov
out
neg
int
fsubr
out
aas
xor
ret
in
cs
out
std
lock
cmp
repz
mov
sti
clc
loopne
test
test
jmp
repz
sarb
test
out
cmp
or
lds
lret
xchg
test
loopne
xlat
xor
frstpm(287
lret
hlt
aad
xlat
incb
loop
ret
out
mov
incb
das
ret
fcmovbe
lret
out
ret
cmp
mov
mov
movb
in
out
ljmp
in
stc
rcl
rolb
in
fcomp
lret
sti
mov
repz
repz
std
inc
ffreep
in
ret
xchg
cld
mov
xchg
call
enter
cmp
cmp
fdivr
xchg
out
loope
cli
lock
loop
out
fdivr
iret
out
fcomip
into
fdivp
jecxz
push
fst
in
in
loop
addb
fucomip
stc
in
enter
lret
cmp
loope
xchg
testl
jmp
loop
shr
fnstenv
adc
test
std
lock
lock
fcomp
aaa
cmp
aas
icebp
ds
stc
test
cld
xchg
ljmp
into
xchg
aaa
jmp
cmp
cmc
imul
sbb
xchg
mov
in
xchg
or
xor
lret
clc
call
cmp
hlt
and
in
std
call
and
jecxz
lock
hlt
aaa
sar
repz
cmp
aam
loop
fmull
sti
sar
fldl
jecxz
stc
fdivs
sarb
stc
test
out
mov
leave
out
mov
add
jmp
aam
iret
int3
fst
outsl
fmull
dec
mov
movsl
add
in
xchg
hlt
in
cmc
sub
in
jmp
sarb
fcmovb
fcmovnb
repnz
fadd
sar
jecxz
in
xor
iret
repnz
stc
cmp
loop
xor
sti
ffreep
and
mov
xchg
ror
lret
clc
leave
fcmovnu
xlat
fsubrp
lock
cli
in
fiaddl
orb
rcl
fsub
aas
out
repz
icebp
ljmp
loope
int3
fisttps
cmp
stc
in
std
repnz
ret
aad
fst
faddp
xlat
idiv
int3
sti
mov
loopne
out
leave
xor
divb
stc
leave
repnz
out
ss
hlt
fstp
mov
hlt
out
cld
call
xchg
and
ljmp
ftst
aad
fstp
ret
fmuls
jmp
out
mov
in
sub
jmp
lret
fucomip
fdivp
sar
call
aas
cmp
test
fdivs
leave
lock
aad
in
jecxz
aas
xor
loopne
loope
into
in
and
dec
out
repz
in
jmp
xor
clc
clc
ret
cmp
jmp
sti
jmp
lret
xchg
jecxz
iret
lret
out
stc
xor
call
cmp
orb
fildl
xchg
in
int3
fprem
shll
ljmp
fdivp
jecxz
imul
ror
in
mov
sub
shl
fyl2x
xlat
clc
rcr
in
cmp
repz
sbb
in
xchg
out
ljmp
ss
repnz
out
fidivrs
shl
jmp
out
lret
out
mov
loopne
jmp
aaa
cmp
aam
cmp
fld
out
mov
in
xchg
nop
addl
out
cmp
xor
ss
ret
loope
xchg
clc
fcmove
mov
loope
sub
fcmovu
int
ds
cmc
fdivrp
in
fcomp
loope
mov
cli
loop
hlt
repz
xor
fcomi
leave
aam
fmul
clc
sar
in
aad
in
mov
or
shl
add
shl
repz
xor
jecxz
loopne
loope
xlat
cmp
into
loope
loop
in
xor
shr
xor
cmp
hlt
leave
iret
in
rcr
loop
repnz
fldl
shl
icebp
loop
shl
ret
ret
jmp
shl
sti
ret
jmp
call
stc
fmull
rorb
repnz
sti
clc
iret
cld
addb
les
out
out
out
sbb
ljmp
rcr
aas
int3
fcmovbe
xchg
int
fisttps
imulb
ret
cmp
das
xor
cmp
sar
fcmovnb
rcl
jecxz
lea
nop
fucomip
and
cmp
out
out
shl
fcomp
aas
dec
enter
loopne
fsub
in
fsubr
out
enter
jmp
cmp
ror
cmp
cmpb
std
ret
hlt
add
std
loop
xchg
hlt
aad
shl
leave
enter
fucomi
xor
stc
hlt
mov
lret
loopne
xchg
lret
xor
rcl
shl
testl
adc
jmp
into
in
in
test
shl
clc
ss
cld
out
leave
rcr
sarb
cmpl
mov
std
xchg
out
aaa
enter
aam
lret
loope
shl
cmp
dec
and
sti
inc
cli
ljmp
int3
fcmovnbe
int3
in
aas
in
ds
cmp
xchg
test
call
shl
clc
hlt
div
aaa
test
repnz
in
in
test
mov
out
in
out
loop
lock
out
in
xlat
enter
ds
sar
xchg
std
into
out
in
jmp
cmc
sub
ljmp
sti
out
aad
test
sar
mov
cld
ds
out
xor
in
mov
hlt
out
icebp
in
aam
int3
idivb
ds
fsubp
shl
fucomip
fcmovnb
stc
and
iret
mov
jmp
loopne
out
xor
stc
fdivrp
icebp
stc
rcr
in
out
clc
out
xchg
jmp
iret
rorb
fcmovbe
out
ror
roll
fstp
repnz
out
std
xchg
xchg
aad
loope
in
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
push
ret
jle
add
leave
hlt
cli
std
into
cmp
add
cmp
imul
sub
lret
ret
ss
cmc
in
shl
xor
out
bnd
clc
rcr
movb
fucomp
loope
shr
loopne
lock
aam
fdivr
loopne
test
sti
ljmp
fcmovnu
in
mov
mov
ss
cld
int3
stc
aad
loope
neg
out
into
repnz
loopne
loopne
out
out
mov
rol
cli
fucomi
fnsave
fcomip
lock
sub
jecxz
sub
fimuls
stc
out
leave
enter
shl
xor
in
in
xlat
in
jmp
and
aaa
clc
lock
fyl2xp1
cmc
rcl
shr
cld
cli
idiv
mov
out
mov
leave
out
enter
cmp
clc
jecxz
test
les
fcmovu
cld
xchg
into
xchg
aam
add
in
cli
cmp
test
xchg
fsubrp
jmp
xchg
sti
dec
loope
iret
leave
clc
lret
jmp
cmp
out
test
call
clc
mov
jmp
mov
xor
jmp
xor
clc
cmp
cmp
enter
enter
fisttps
in
lret
cmp
cld
aas
loopne
rcr
jmp
and
fldz
lock
lret
aad
xlat
in
out
leave
cmp
shl
xlat
test
sarb
test
hlt
sti
out
cld
xor
lret
into
xlat
cmp
hlt
shl
out
repz
fcmovu
jecxz
xchg
cli
out
loop
sub
out
xor
jmp
repz
int
ds
out
test
ret
clc
mov
and
leave
jmp
loope
div
jecxz
lret
fucomi
leave
cmp
aas
sti
jecxz
sti
mov
xchg
mov
fiadds
xlat
aad
in
out
int
fadd
in
jecxz
test
adc
inc
mul
out
in
aaa
aad
fcmove
xor
out
lret
fsubrp
hlt
jecxz
rcl
in
mov
cmc
sti
cld
out
xchg
std
nop
cmc
ss
int
clc
call
xor
icebp
std
loope
hlt
neg
fmull
xchg
aam
sub
iret
lock
out
repnz
cli
loope
aas
call
in
mov
int3
xchg
loopne
jmp
cmp
sti
cmp
aaa
ds
in
idiv
out
rcr
call
std
movl
hlt
in
int3
lret
aaa
out
not
test
in
icebp
enter
lock
and
ss
out
ror
shr
clc
hlt
test
dec
in
xchg
sti
shl
xchg
leave
loop
neg
jmp
rcr
xlat
shl
xlat
cmc
fadd
test
jmp
call
cmp
loope
fadds
leave
lret
mov
mov
mul
cmp
fdivrp
adc
ret
cmp
enter
in
in
fcomi
jmp
ret
out
cmc
xor
sarb
out
aaa
loope
std
cld
fcmovu
sbb
repz
xlat
icebp
lock
neg
enter
enter
call
fiaddl
push
out
in
mov
loop
sub
enter
in
cmp
jmp
not
xchg
in
call
enter
iret
shr
mov
fmul
call
cld
ret
hlt
ret
xlat
repnz
decl
ret
fldl
enter
clc
clc
aad
in
roll
in
fmul
out
int3
int3
out
icebp
loopne
xor
xchg
jecxz
das
out
ret
jmp
lock
div
jecxz
sbb
lret
test
mov
mov
rol
cmp
in
ljmp
enter
aam
loopne
enter
test
aaa
in
cmp
jmp
adc
aas
neg
shl
leave
enter
or
iret
cmc
ljmp
int3
cmp
cmp
fcmovnbe
ret
enter
fildl
repnz
xchg
iret
int
jmp
ljmp
aas
repz
mov
repnz
lret
lret
cmp
stc
out
fcomip
aam
repz
out
cld
rol
xchg
loop
out
lret
in
ljmp
jmp
cmp
je
mov
mov
xor
add
jmp
rol
xlat
int
arpl
mov
aam
push
mov
movsl
add
cmp
repz
incl
loopne
cld
hlt
lock
sub
in
iret
xor
jmp
icebp
cmp
mov
ret
test
mov
fld
test
cmp
xchg
ret
call
cmp
xorb
sti
int3
cmpl
clc
call
ficoms
in
test
call
in
out
hlt
fsubr
rcr
ret
testb
std
icebp
in
shr
in
fcomi
sar
f2xm1
in
in
jmp
incb
in
in
out
cmp
out
cmp
loopne
rcr
fcmovnb
sti
ret
ffreep
test
rolb
out
das
clc
stc
lret
not
aas
cli
ret
mov
xlat
out
loop
jecxz
out
call
lret
xlat
repnz
call
fidivrs
cmp
in
testl
out
shll
jecxz
xlat
test
cmp
cmc
out
fucomip
rcl
ffreep
cld
aam
int
mov
xchg
icebp
cs
enter
lret
fucom
ret
out
fcmove
jmp
ftst
loopne
in
xchg
neg
imul
lret
ret
lock
ffreep
sti
cld
mul
fsin
fdivr
fcomip
xchg
mov
lret
enter
clc
fmulp
in
shl
jmp
rol
incl
call
xchg
hlt
mov
out
out
lret
sarb
ss
cmp
loop
cmp
sti
loope
xchg
icebp
lea
cs
in
sti
rol
lock
aam
test
xlat
loopne
mov
mov
into
xor
int3
lock
icebp
in
icebp
fimull
out
in
ljmp
xlat
lret
fsub
cmp
out
aam
fsub
ret
mov
xchg
aad
cmp
lea
lret
hlt
call
out
idivl
stc
rorb
mov
loopne
cmp
out
in
ss
repnz
repz
loopne
cmp
fldl
mov
fsub
clc
loope
in
into
call
fincstp
int3
not
jmp
xlat
iret
repnz
in
lock
fucom
xchg
fimuls
shl
out
clc
jmp
cmp
cli
jecxz
call
cli
pop
lret
jecxz
in
clc
xor
xlat
std
cli
rolb
incb
repnz
shl
clc
fldlg2
fdiv
in
hlt
push
cmp
into
aas
aad
fisttps
std
lock
mov
loopne
aam
ret
leave
fst
fucomp
cmp
rcr
lock
cli
loope
leave
ret
fstp
fildl
shr
lret
in
in
rcl
in
in
call
test
in
faddl
sub
out
test
jecxz
xor
aaa
xor
call
rcr
shl
jecxz
mov
lea
test
out
cs
fidivrl
stc
xor
fdiv
iret
ret
cmp
hlt
xchg
jmp
lock
imul
xor
lret
aad
div
jmp
aad
std
xlat
enter
orb
shr
enter
test
sar
fldln2
aas
rcr
test
repz
loope
std
test
xlat
fptan
iret
out
ss
fidivrs
roll
idiv
fsubrp
loope
loope
rcl
ret
neg
ss
lret
test
out
test
loop
in
sub
std
lock
in
clc
rcl
fdivrl
ffree
fnclex
loop
out
ret
jmp
loop
lret
mov
repnz
ret
xor
cmp
out
lret
adc
decb
enter
into
ljmp
in
in
fmul
sti
aaa
jmp
sarl
movl
out
out
out
in
cmp
icebp
cmp
sti
in
sub
addb
repz
int3
test
fcom
xor
cld
leave
ss
loope
in
in
rorb
rcr
shl
cmc
iret
into
lret
repnz
in
stc
shr
into
sarb
in
loop
out
leave
mov
loope
out
in
fprem
out
aad
enter
les
rolb
out
lds
in
int
rcl
in
stc
fidivl
cmp
stc
les
xchg
add
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
push
add
iret
nop
mov
movsl
add
cmp
test
ror
out
out
out
leave
in
xor
cmp
out
cmp
rolb
test
cmp
sub
int3
xchg
ror
out
xor
leave
shr
ror
iret
shr
int3
imul
rol
repz
in
xchg
rol
fimuls
iret
out
aad
enter
sti
xlat
hlt
xchg
icebp
fdiv
ljmp
fcomi
mov
lret
loope
sar
leave
fsubr
fcmovu
call
addb
cli
test
fdivp
sbb
hlt
test
iret
out
cmp
loopne
xor
jmp
mov
sti
rorb
rcl
sub
stc
cmp
iret
shl
fndisi(8087
cmc
into
neg
fdivr
cli
mov
clc
mov
shlb
xor
out
cmc
lret
lret
rol
rcr
cmp
enter
clc
addl
icebp
call
xor
in
int
iret
cmp
fimull
loopne
into
xchg
in
fcomi
loopne
sub
fcmovu
enter
cmp
rcl
loope
fld1
jmp
shl
and
int3
mov
aam
sub
jmp
jmp
iret
icebp
cmc
test
cmc
out
fsub
out
decl
xor
jmp
in
hlt
aam
out
out
in
icebp
shl
sub
fsubr
jmp
loopne
lret
test
hlt
shr
div
in
iret
ljmp
test
call
ljmp
jmp
into
out
fdivr
aas
repz
fildl
xchg
jmp
clc
mov
in
sub
out
xor
stc
out
icebp
aad
clc
xlat
mov
fcomp
or
out
stc
xchg
fisttps
sarb
leave
lock
repz
test
cld
fdivr
repnz
in
std
stc
sub
hlt
icebp
out
jmp
aad
call
xor
clc
ret
mov
leave
sub
xchg
int
in
nop
cs
ftst
out
cmp
rcl
loopne
cld
aad
call
lds
call
out
aaa
cli
cmp
aaa
in
hlt
int
les
loop
mov
cmp
xchg
iret
shl
jmp
fscale
hlt
sti
stc
rcl
sbb
mov
test
fcmovb
rcl
fcomip
xchg
aaa
idivb
cmp
fsubrp
add
rcl
ljmp
int
fucomip
or
out
xor
cmp
fsubr
int
fdivr
cmp
out
test
out
test
int
in
fscale
mov
lret
aaa
int3
cmp
xor
loopne
add
enter
std
xchg
imulb
ror
icebp
lock
out
int3
shl
stc
hlt
loopne
fsubp
mul
sti
fstp
cld
out
jecxz
bnd
in
fidivl
sti
stc
loop
shl
xlat
rcl
loop
cmc
xlat
clc
test
int3
repz
cmp
aam
aad
fmulp
in
repz
call
out
loope
nop
adc
sub
lret
cmp
sarl
lret
flds
incl
in
shr
out
shl
imulb
lock
jmp
in
out
out
fdiv
call
cld
std
popl
int
ror
icebp
neg
cmp
iret
aas
test
sti
mov
test
fldl
hlt
leave
hlt
fcmove
in
clc
jmp
into
xchg
rcr
test
aad
mov
sub
xor
fdiv
aam
les
jecxz
testl
ljmp
out
rcr
iret
out
jecxz
loopne
ret
jmp
xchg
iret
nop
jmp
cli
jmp
stc
in
cmp
cmp
loop
icebp
rcr
decb
in
hlt
xchg
loop
sarl
jmp
repz
sarb
in
out
fst
cmp
decb
fst
xchg
int3
ss
jecxz
fcmovu
shl
aaa
fidivrs
lret
sti
fcom
shl
rcr
in
xchg
xchg
mov
ror
in
loopne
rcl
aaa
lret
ljmp
fucom
mov
jmp
ljmp
mov
in
xor
leave
cli
cmp
icebp
fistpll
call
mul
test
int3
in
lret
xchg
xchg
out
lret
xor
stc
in
repnz
xchg
pushl
jmp
int
into
fst
das
inc
aam
sahf
cmp
jle
add
jecxz
mov
lock
divl
sti
icebp
cmp
ds
int
loope
cli
cmc
fadds
leave
std
mov
clc
jmp
xlat
das
xor
cmp
shlb
aad
loop
sti
mov
mov
lret
in
xlat
int3
in
cmp
lret
fucomi
repnz
mov
sbb
jmp
int
xor
lret
fyl2x
call
in
leave
mov
repnz
mov
in
aad
mul
int
rcl
aad
cli
fdivr
test
std
cld
xlat
ljmp
into
mov
hlt
repnz
into
idivb
sti
sti
inc
out
stc
mov
mov
in
out
mov
xchg
in
das
repnz
in
sti
fmul
xlat
cmp
loope
fdivr
fucom
loop
ret
and
loopne
mov
loopne
loopne
repnz
xor
ds
fnstsw
cmc
loopne
clc
testl
jmp
lret
xor
call
clc
icebp
sbb
ds
shl
stc
call
test
int3
ss
enter
out
lock
div
xor
std
fdiv
lock
xchg
ret
lock
cmp
aam
out
cmpl
in
fndisi(8087
xchg
xchg
cmc
shl
leave
xor
aad
loope
cmc
clc
incb
neg
in
in
imul
cmp
hlt
xor
aam
hlt
icebp
loop
clc
loop
aad
test
add
in
adc
adcl
out
in
cld
shr
lock
aaa
loop
sarb
addl
sti
jmp
jmp
cmp
cmc
cmp
incb
repz
in
mov
stc
mov
mov
mov
mov
stc
call
fsub
aad
lock
test
fcmovu
cld
in
xlat
ljmp
cmp
not
int3
cli
cmp
xor
int
jecxz
cmp
roll
jmp
loop
clc
mov
shr
cmp
aam
addb
fisttpl
int3
leave
cmc
call
cmp
fnstsw
in
and
sub
fcmove
out
out
call
jmp
out
das
clc
fdivrl
into
fcmovnu
out
lock
sar
loopne
sbb
in
out
cld
mov
int
hlt
mov
enter
clc
aam
fcmove
iret
fucom
cli
std
idivb
repnz
xchg
out
xlat
std
out
cld
mov
repz
enter
std
icebp
rcr
neg
std
aas
mov
out
filds
mov
imull
fcmovne
call
cld
fcomp
std
repz
out
jecxz
addb
cmp
hlt
fucomip
rcr
hlt
test
neg
aas
repz
jmp
mov
shrb
ljmp
cmc
or
out
loope
xlat
sti
loopne
in
xor
iret
aam
cmc
repz
shr
shlb
shl
aad
fsub
out
int3
call
iret
iret
xor
lret
out
in
xlat
sub
jmp
out
cli
int3
mov
repnz
nop
mov
repz
cmc
fdivrs
repz
in
jmp
cmc
in
cmc
and
fiadds
out
in
and
iret
cli
aad
incl
add
cmp
stc
jmp
in
clc
decb
iret
jecxz
shl
cmp
sarl
aad
ds
out
out
cld
xlat
repz
call
lret
div
testl
push
fcmovnu
std
test
loopne
loop
into
hlt
iret
xor
aaa
sar
cmc
repnz
jmp
sar
aad
in
test
fldpi
rcl
loopne
ljmp
fcmovnu
cld
inc
repnz
fadd
fadd
clc
test
int
out
repnz
lret
out
in
lret
in
sti
fdivl
jmp
aam
fdiv
xor
rolb
call
mov
jmp
idiv
ds
repnz
fmul
stc
iret
aam
xchg
xchg
cmc
call
and
les
ljmp
ds
xchg
lea
xchg
shlb
ret
sti
lock
idivl
out
fcomi
xor
cmc
fcmovu
int
nop
sub
hlt
iret
xchg
call
mov
cmp
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
out
shr
jmp
cmc
cmp
sar
shl
out
testl
cmc
addl
stc
cmp
int
roll
rolb
filds
out
jmp
cmp
cmp
fdivrs
aas
lock
enter
iret
cli
and
into
hlt
aam
stc
icebp
out
lock
loope
faddp
ds
aam
rcr
test
icebp
lret
aas
in
xor
shr
repnz
in
in
shl
xlat
ret
std
int
mov
cli
lret
leave
in
jmp
cmp
repz
aam
loopne
ret
out
fldl
mov
sbb
xchg
xlat
xor
aaa
loope
xor
cmp
repz
rcr
loope
orl
shlb
xor
out
fldln2
icebp
lret
std
loopne
into
rcl
fdivp
loope
mov
mov
out
rol
lret
iret
aad
repz
ljmp
loopne
xlat
fdivrp
inc
stc
int
decb
lret
cli
aad
cld
in
fprem
fucomi
roll
hlt
loop
xlat
fsub
loopne
lock
out
xor
xlat
int
int3
rcr
out
clc
fdivr
aam
repnz
flds
repnz
mov
out
divb
sti
shr
lret
fdiv
std
fmul
icebp
lock
enter
jmp
ss
shll
in
icebp
int
in
sarl
addb
enter
loopne
in
test
out
rcr
repz
cmc
enter
rorb
lock
into
enter
cmp
cmp
aam
hlt
shl
fxtract
in
iret
mov
adc
in
cmp
int3
cmp
loop
xor
loop
test
lret
jmp
int
mov
out
lret
aam
int3
cld
int3
ffree
cmp
fistpll
ret
aad
in
fsub
cmp
test
xchg
int
lock
xlat
shr
cli
xor
icebp
jecxz
repz
ljmp
int
imul
xor
hlt
in
aam
jmp
cmp
adc
lret
loopne
leave
xchg
lret
test
rcr
loop
lret
shr
into
fdivrl
idiv
cmp
faddl
mov
cld
ret
repz
int
call
into
jmp
shl
in
aas
cli
mov
enter
in
ror
xchg
repz
lock
cli
aad
repnz
int
iret
cmp
fadds
clc
xchg
jmp
fucomi
lret
aad
xlat
stc
repnz
aad
cli
roll
fcomip
hlt
call
mov
repnz
rcl
fbstp
das
out
repnz
aam
in
hlt
loop
aas
rolb
ljmp
sub
xchg
iret
xor
ror
out
enter
not
sti
repz
rcl
std
xchg
stc
jecxz
sub
fldl
jecxz
fcmovu
out
loopne
out
loopne
aam
iret
loope
ret
shl
cld
fcmovnu
mov
in
xor
xor
aas
aaa
clc
roll
mov
in
lea
nop
sub
cmc
fmul
ljmp
cld
rol
fld1
fldl
out
in
rcr
fsubr
shl
jmp
fdivr
out
cmc
test
ret
hlt
mov
sti
loope
std
out
mov
lock
shlb
into
xor
cmp
cmp
ljmp
cmp
incl
jmp
mov
lock
jmp
rcl
fstp
repnz
mov
stc
mul
add
xchg
xchg
xor
xor
cli
cmp
jmp
shl
lock
loop
fimuls
nop
out
out
divb
sub
ljmp
lock
sti
fiadds
in
lret
lock
cmp
jmp
in
aad
neg
test
repnz
fsubrp
sbb
add
sti
idiv
jmp
cli
int3
loope
dec
clc
fmull
loop
sti
cmp
divl
hlt
xlat
ds
cmc
icebp
int
int
fidivrs
repz
out
lock
jecxz
hlt
xchg
test
repz
fxch
out
cld
rcr
int
fadds
in
add
loopne
out
iret
xchg
std
xchg
cmc
out
shl
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
cmpsl
mov
jle
xchg
add
std
std
fucom
addl
cmc
rcl
fldl
leave
fisttpll
int3
jmp
rcl
into
shr
jmp
rol
sbb
test
jecxz
aad
xchg
out
fiadds
xor
fadd
aaa
lret
sti
sti
loope
fadds
jmp
mov
rorl
stc
fdivr
aaa
xor
fstp
cmp
lock
or
xchg
call
mov
leave
fmul
into
cmp
aad
fsubr
int3
jmp
cmp
cli
cld
lret
fcmovne
mov
fsubp
xor
lret
ljmp
mov
jmp
out
out
fucom
test
lock
xor
in
addb
xlat
rol
clc
xlat
fsubp
fmulp
int
icebp
nop
mov
frstpm(287
stc
shll
xlat
in
cmp
mov
orl
cmp
lock
icebp
iret
jmp
out
rcl
fcmovnbe
lret
addb
fucom
call
aad
out
jmp
stc
ret
in
cmc
loop
fadds
icebp
in
and
sub
out
in
xor
lret
cld
aad
jmp
test
int3
in
cld
lds
aad
jmp
stc
call
jecxz
cmp
stc
aad
mov
fadds
int3
dec
mov
xchg
ljmp
ljmp
adc
out
incl
into
in
into
out
iret
lock
shl
lret
rcl
aad
shr
loop
test
fdivr
in
ret
fmull
loop
xorl
ror
ss
repz
ljmp
test
fdiv
jecxz
or
loope
shl
das
cmp
leave
jmp
std
fnop
ds
out
addb
jecxz
out
out
lock
out
in
stc
stc
shlb
xor
jmp
mov
add
test
jmp
clc
leave
divb
lret
clc
or
aas
aas
iret
hlt
roll
lret
leave
in
mov
out
shrl
rol
enter
idiv
sti
sti
icebp
sbb
fsub
cli
xchg
xchg
repnz
jecxz
hlt
sarl
in
enter
cld
int3
sarl
repz
ljmp
mov
lds
jmp
roll
loopne
jmp
in
int
sti
in
xchg
jecxz
lock
fdivs
rcr
rcl
cmp
hlt
cmc
jecxz
sti
mov
jmp
nop
rolb
loope
ljmp
lock
rcl
mov
jmp
xchg
repz
out
into
shl
int
in
aad
fcomi
in
cli
xchg
aas
in
into
out
out
mov
repnz
loope
in
rcl
cmp
out
out
cmp
xlat
les
std
jmp
enter
fdivr
jmp
ret
icebp
cmp
xor
cld
sar
loope
jmp
shl
ret
repz
out
in
in
orl
out
rcl
ljmp
stc
sbb
std
call
loop
fdivr
roll
shl
iret
stc
divb
aas
into
in
lock
hlt
imul
add
out
test
in
out
loope
int
xor
ds
test
int
xchg
test
loope
int
adcb
out
cli
stc
ljmp
fimuls
into
iret
out
xchg
aam
jecxz
cli
lock
lret
rcr
repnz
cld
ret
mov
mov
lret
repnz
out
cld
not
icebp
cmp
aam
jecxz
out
cli
addl
mov
ret
frstpm(287
lock
rcl
ret
loope
ret
aad
std
loope
ljmp
fdivp
out
hlt
aad
ss
iret
iret
fiaddl
iret
xlat
test
cli
rol
enter
repz
mov
into
repnz
fcmovbe
leave
std
aaa
rcl
in
loop
iret
adc
aad
sub
out
rolb
cmp
int
cmp
out
int
fildl
mov
fucomp
stc
loope
xchg
mov
int3
lret
xor
out
ds
icebp
div
sbb
int3
sti
out
nop
adcb
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
pushf
jle
xchg
add
fsubrp
clc
fsub
fcomp
std
cli
out
repnz
loop
ret
xchg
out
cmc
ror
in
xor
xor
rcl
aas
aas
aam
call
jecxz
sub
xchg
fcmovnu
stc
repz
rcl
in
clc
icebp
rolb
testb
rorl
aad
cmp
jmp
fucomip
cld
loop
fmull
enter
cld
adc
icebp
xlat
repnz
in
lds
or
xchg
cmp
xlat
ret
sub
in
sub
shl
out
loopne
jmp
sti
aad
xchg
xlat
rcr
sub
leave
lock
ror
nop
mov
jecxz
les
xor
hlt
icebp
xlat
sbb
les
loope
stc
xchg
jecxz
int
cmc
iret
xor
sub
xor
into
rcr
cmp
sti
addl
int3
mov
cs
lret
rcl
adc
jecxz
cmp
out
ljmp
out
jmp
ret
clc
icebp
enter
out
cld
iret
loop
out
hlt
addl
fmulp
ljmp
out
lret
fcmovu
jmp
sbb
fdivrp
hlt
fdivr
call
out
xchg
out
ror
in
ret
hlt
ljmp
les
loopne
test
ret
fucomi
ljmp
int3
int
repnz
rcr
cmp
loopne
test
cmp
lock
mov
fsubp
ret
das
in
lret
stc
cmp
cmp
loop
jmp
loope
out
addb
ror
std
lret
int3
hlt
out
hlt
in
test
jmp
test
jecxz
in
sbb
rcl
imulb
sar
in
fnsave
jmp
jecxz
sar
ret
out
repnz
loop
aaa
cmp
xor
std
adc
xor
fdivr
sbb
lea
mov
xchg
out
in
ss
fdivrp
cmp
cmp
loopne
idiv
loop
repz
test
repz
enter
cmp
ljmp
sar
shl
sti
loop
int3
leave
in
xchg
jmp
xor
fxch
jmp
cmpb
ret
icebp
roll
mov
ret
fcmovu
call
in
ss
ds
int
repz
rcl
std
fstl
nop
jecxz
in
out
clc
cmp
cmp
in
fdivp
lret
push
mov
fdivr
rolb
in
aad
call
int
lret
fadd
sub
loopne
cmp
and
rolb
in
cmc
rcr
idivl
enter
in
ret
fcmovb
in
out
xlat
test
xor
iret
xor
leave
into
jmp
out
fcmovnbe
fdivr
sbb
fadds
in
sti
jecxz
jmp
sti
enter
rcr
sbb
into
repnz
cli
neg
mov
out
in
xchg
shl
rol
aaa
xor
repz
leave
fcomi
lret
std
les
std
loopne
into
stc
test
fisttpl
xor
leave
ret
std
int
aaa
shr
rcl
lock
xchg
int
jmp
xchg
rol
ret
aaa
fmul
ss
in
sub
sar
jmp
cmp
mov
lock
lret
in
in
icebp
rcl
out
fstp
xor
cmp
shl
imul
out
and
jecxz
out
xchg
repz
repnz
ss
loop
stc
aas
sub
std
mov
xchg
out
aad
ljmp
fcomip
fnstcw
test
jmp
loope
aam
xchg
out
aam
clc
cld
int3
ljmp
int
lock
xchg
fdivr
lret
out
out
xchg
out
into
aad
in
aaa
leave
cmp
filds
std
fdivrp
in
lret
nop
lret
xchg
out
idivl
fdivr
clc
fdivrl
out
ffree
cmp
int
hlt
rolb
out
fiadds
aam
das
xlat
xor
cs
cmp
fdiv
aad
ret
std
call
out
lock
xor
out
lds
fcmovnu
sti
aaa
hlt
flds
incb
mov
inc
add
add
jne
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
cmp
mov
into
xchg
into
jmp
loope
in
out
out
cli
cmp
cld
cmp
test
ljmp
shl
call
int
repz
aaa
clc
fincstp
fucomp
sti
enter
decb
ljmp
jmp
cmp
xor
sarb
incl
call
jmp
xchg
lret
jecxz
cmp
shll
fdivp
lret
jmp
cmp
testl
test
mov
out
repz
rcl
shr
faddl
add
fdivr
in
lea
shlb
hlt
out
out
fcomp
cmc
shlb
loope
les
lret
lea
int3
jmp
ss
cmp
out
aad
out
loopne
loop
leave
mov
icebp
xchg
ret
shl
clc
out
filds
std
rcl
fxam
fdivrp
xlat
fst
test
mov
call
cmc
fmul
rcl
into
test
lret
addl
in
aad
das
shr
imulb
push
neg
sti
repz
rolb
lock
stc
xor
jmp
sti
out
ret
aas
lock
in
xor
in
int
loopne
out
in
divb
out
shl
jmp
sti
aad
addb
nop
int
out
cmc
jecxz
in
cld
sti
into
aad
xor
aad
shr
call
sub
xchg
fiadds
loope
sub
repz
in
int
repnz
jecxz
fdivrp
loopne
inc
sti
ror
repnz
ss
shl
stc
lret
or
roll
in
xlat
lret
jmp
lret
jmp
xor
sarl
ftst
ds
shl
in
xchg
mov
mov
aaa
repnz
shr
cli
shr
shr
lret
fxch
ror
fdivrs
loopne
mov
fldl
loopne
xor
into
lock
call
in
sbb
rcl
jmp
and
mov
cli
out
jmp
std
mov
sub
lret
hlt
jmp
ds
div
shl
lock
cli
repz
test
mov
out
aad
hlt
fxch
std
div
cmp
iret
cmc
fdiv
ds
inc
addl
in
test
xchg
lret
loop
out
cmp
cmc
lret
and
shl
test
cmc
lret
movl
out
fcmovnbe
leave
cmp
into
in
jecxz
jecxz
hlt
aas
fcmovnbe
decb
int3
mov
cld
cld
movl
into
loope
aad
shl
test
mov
int
repz
xchg
mov
das
xlat
cmp
lret
leave
stc
sti
fcmovbe
fiadds
stc
ret
fsubr
mov
fdivrp
lret
faddl
aam
out
lock
push
cld
leave
fcmovnbe
out
fidivrl
inc
fldl2t
add
lea
int3
clc
call
sbb
loope
testl
loop
std
fistl
xlat
cmp
in
aam
leave
shr
icebp
cli
sbb
xchg
mov
test
aam
lret
aad
cs
fdivr
rolb
cmp
in
fprem
dec
cmp
into
aaa
sar
divl
cmp
aam
loope
in
sti
in
fucomp
fucomi
in
cld
fsts
iret
test
neg
lret
clc
stc
cld
aad
icebp
rcr
hlt
fcomip
loop
mov
test
ljmp
aad
sti
xor
rcl
fdivrl
flds
clc
aam
sub
xchg
leave
xchg
xchg
xchg
xor
icebp
in
cmp
ss
lret
rcl
ret
call
lret
in
repz
mul
iret
jmp
in
enter
ret
aad
icebp
jecxz
sbb
cli
loop
cld
fcomi
testb
leave
cmp
out
cmp
fdivp
in
out
stc
faddp
xchg
popl
call
lret
das
icebp
sarl
hlt
cld
lds
rolb
xchg
iret
ror
lds
jmp
cmp
or
test
fildl
mov
jecxz
in
shlb
shlb
jmp
roll
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
test
xchg
add
loope
shl
loop
clc
xlat
test
repnz
mov
shr
rcl
fidivrl
iret
loopne
aam
sti
imul
out
ret
lret
int3
into
lret
fcmovne
not
fbstp
cmp
fiaddl
cmp
fsubrp
xchg
mov
test
sti
fdivl
clc
into
fcmovbe
imul
fadd
test
loop
rolb
in
lock
rcr
sti
imul
lret
iret
aas
rol
repnz
test
filds
jmp
rcl
xor
xor
into
fdivr
jmp
out
fcmovbe
shr
xchg
xchg
xchg
cld
in
test
xchg
incb
repnz
xor
loop
cmp
cmp
and
decb
testb
fmul
xor
lock
iret
loop
leave
in
lret
lds
in
xor
call
cli
aas
cmp
ret
hlt
clc
fiadds
lea
mov
lock
aaa
xlat
lock
and
lock
shl
lock
in
sub
out
loope
lret
sti
iret
leave
cmc
shlb
fidivrl
jecxz
out
cmc
enter
ret
loop
lret
in
mov
out
enter
cmp
fcomip
hlt
hlt
sar
fcomp
lds
loope
cmc
call
aaa
out
shrl
aam
hlt
fnstcw
test
incb
xlat
enter
jmp
iret
leave
rcl
in
shlb
fincstp
jmp
icebp
fsin
cmp
jecxz
jmp
out
enter
xchg
repz
sti
cli
leave
fnstcw
out
int
mul
and
in
xacquire
fadd
aad
cmp
cmc
leave
call
loope
std
adc
loop
in
cli
in
cli
out
icebp
ljmp
xor
lret
ds
orl
cli
cld
out
in
xchg
lock
idivb
int3
rcl
cmc
lret
roll
xchg
fldl
add
xchg
int3
hlt
mov
aaa
cmp
shr
jecxz
leave
out
loope
ror
rorb
enter
cli
cld
fmul
aam
in
fidivrs
cmp
orl
mov
xor
xor
jmp
rcl
cmp
shll
iret
lock
loopne
cld
sub
lret
xchg
jecxz
icebp
icebp
jmp
leave
cmp
test
jmp
lret
filds
fmull
xor
shl
fdivs
lret
or
aas
clc
lock
jmp
int
out
xchg
xor
ljmp
aad
iret
ds
sti
call
xchg
xchg
out
xchg
in
stc
enter
aaa
in
into
xchg
aad
fsubp
lret
lret
jmp
out
shl
lret
clc
hlt
aad
into
das
into
aad
repz
cld
xrelease
popl
fildll
cmc
jecxz
aad
in
adc
repnz
addl
loop
enter
test
fsubp
out
aad
cli
icebp
call
aam
aas
stc
shl
in
ret
in
in
test
in
out
xchg
call
xlat
jecxz
test
cld
aad
ds
fldl
rolb
movl
fcomi
aaa
into
fcmovne
fimuls
jecxz
test
test
enter
int3
repz
std
aam
decb
jmp
in
orb
xor
xor
shl
out
aam
xor
out
fiadds
neg
aad
into
mov
int
into
in
repz
bnd
cli
idivb
fdivs
loope
test
enter
mov
in
leave
xchg
rcl
int3
int
aam
in
out
into
call
test
clc
sbb
lret
xchg
sub
ljmp
xlat
cli
cld
into
ljmp
mov
into
call
repz
jecxz
repnz
aam
cmp
stc
ljmp
std
xchg
fucomip
jmp
mov
ret
leave
jecxz
xchg
jmp
idiv
std
not
aam
lock
test
ljmp
jecxz
mul
in
out
sti
add
mov
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
or
jle
add
cmp
hlt
sarl
jecxz
sarl
leave
repz
ds
out
fimull
leave
shr
cmp
ss
clc
cmp
int
test
fmul
loopne
cmc
leave
iret
int3
or
xchg
shl
leave
call
leave
leave
fcomip
sti
fdivr
cmp
rcr
std
aad
cmp
out
hlt
imul
out
jmp
cmp
fcomi
ffree
rcl
enter
jecxz
int3
in
enter
repnz
loop,pn
clc
aad
int3
aas
in
cmc
out
jmp
std
flds
icebp
aad
mov
xor
int3
das
sarb
repz
aaa
neg
rol
mov
testb
into
jmp
xor
in
sti
int
testb
lret
std
neg
jmp
xchg
loopne
iret
jecxz
shl
cs
cmp
cmp
aad
stc
xor
call
xchg
enter
lret
mov
aam
sarl
std
cld
cmp
test
aam
sti
out
hlt
sti
lret
fsubrp
sub
test
ljmp
out
cmp
hlt
cmp
hlt
cli
clc
jmp
rcll
leave
sub
aaa
hlt
clc
out
aaa
faddl
repnz
fcmovnu
jmp
shl
xor
in
hlt
cmp
jmp
xlat
aaa
idiv
cmc
xlat
lock
cli
mov
flds
in
jmp
fists
clc
cmp
rcl
aas
icebp
int
rolb
mov
fsubrp
incb
in
fsubr
mul
cmp
ljmp
clc
mov
enter
loop
aam
repz
ljmp
leave
ljmp
in
icebp
filds
jmp
mov
aaa
clc
aam
sar
stc
fucomip
ds
out
fcmovne
clc
cli
clc
clc
aad
in
std
stc
fiadds
out
shl
ljmp
testb
test
stc
testl
lret
icebp
repz
ljmp
lock
cmp
test
test
icebp
icebp
lret
xchg
call
std
lret
icebp
cld
fidivrl
testb
testb
out
xchg
rcl
out
int3
in
repz
out
sarb
sti
sbb
test
out
in
adc
cmc
cli
cld
jmp
xor
aaa
std
lret
int
shl
lock
loop
stc
ret
int3
mov
mov
int
xchg
int3
shlb
in
stc
cmp
into
rol
cli
cmp
fmulp
pop
xchg
xchg
in
clc
leave
sub
sti
cld
hlt
stc
fcmovnbe
test
div
clc
int
roll
mul
xor
cld
lock
fcomip
repz
stc
out
out
mov
leave
fsub
movl
shl
sti
xlat
int
adc
cmp
loop
in
out
fsubr
out
xchg
sub
xor
aad
repnz
loope
in
mov
mov
mov
sub
cmp
fdivr
in
out
cld
shl
test
clc
out
mov
loope
out
xchg
in
lret
cmp
loope
add
xchg
ret
xchg
xchg
fsubp
in
shll
int
adc
ret
idiv
out
cld
not
hlt
test
jmp
bnd
test
fcmovu
sarl
flds
aas
mov
mov
dec
fists
ss
cmc
cmp
std
fstp
out
std
in
ret
cli
sti
out
fcomp
leave
jmp
rcl
int
hlt
loopne
stc
sarl
ljmp
rolb
fmul
cmp
shl
lret
int3
fdivrp
ret
xlat
clc
enter
test
mov
out
xor
aaa
rcl
loop
and
loopne
mov
fucomip
xor
out
repnz
jmp
in
into
test
repz
jecxz
loopne
out
lret
lock
in
in
xor
jmp
sti
aad
into
int
lock
addl
ljmp
enter
jmp
cmp
in
jecxz
lret
jmp
lock
jmp
div
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
cmp
std
scas
jle
xchg
add
jecxz
loope
cmp
cmp
aad
div
jmp
in
cld
shl
xlat
fcmovbe
mov
into
sti
mov
in
pushl
ret
lret
xor
ret
test
incb
cli
mov
fstl
mul
jmp
cmc
repnz
sar
rolb
out
fldl
leave
enter
aaa
cmc
sti
icebp
cli
in
iret
int3
cmp
flds
mov
lret
int3
xchg
imul
out
sub
cli
cmp
repnz
in
shl
call
test
int3
hlt
xorb
ror
out
clc
xor
xlat
out
in
addb
fmuls
in
xor
icebp
int
cmp
into
repnz
cmp
addb
roll
repz
xlat
jecxz
xlat
lret
ds
fildl
fcomip
out
loope
int3
int
out
test
in
mov
xor
out
out
lret
lock
rcr
cmp
cmpb
xchg
jmp
enter
stc
cli
cmp
lock
rorl
rolb
out
xor
fcmovu
xor
repnz
addl
fdiv
pop
stc
test
out
std
and
das
in
ret
fdivp
jmp
out
in
cli
cmp
addl
ficoml
xchg
jecxz
in
in
repnz
loopne
leave
xlat
roll
fdivr
test
into
lock
icebp
xchg
xchg
int
aad
icebp
in
icebp
cmp
fcom
and
cmp
int3
testl
repz
jmp
aam
sti
icebp
stc
cmc
int
div
cmp
mov
cld
in
xchg
jmp
leave
addb
jecxz
test
jmp
shr
sub
out
int
ss
ljmp
aad
mov
jmp
repz
vpor
cmc
fsqrt
aaa
fdivrp
xor
std
hlt
fld
fld
int3
test
fisttps
shr
icebp
int
xor
int
aam
ds
idiv
fadd
fcmovnb
jecxz
lret
lock
rolb
out
sub
shr
cmp
ds
ds
cli
jecxz
and
mov
loopne
hlt
cmp
ror
cmp
stc
rcl
aad
sar
idiv
ret
in
lret
dec
test
int
xor
stc
lret
sti
aas
into
fyl2xp1
fsubr
stc
mov
loopne
std
mov
mov
cmc
in
cmp
cld
aad
cmp
aad
shl
ret
hlt
mov
lret
mov
mov
div
stc
aad
call
ret
add
out
in
mov
out
nop
in
cmc
xchg
out
xor
fidivl
cmp
cmc
sti
repnz
ror
in
clc
fchs
loop
cli
fcmovnu
mov
int
jmp
idivl
sar
stc
cmp
shl
mul
mov
ret
fcmovu
out
fldl
aad
mov
leave
out
in
std
loopne
lret
jecxz
rcl
rol
adc
in
mov
out
jmp
repnz
in
cli
cmp
fdivr
out
loope
aam
leave
lds
int
cmc
enter
leave
cmc
cli
call
cmc
cmc
jecxz
xchg
movb
mov
mov
hlt
xor
int
iret
cmp
cmp
cmpb
out
test
sbb
mov
int
in
ror
xchg
in
shl
lret
out
sti
cli
into
fst
jmp
stc
fildl
loopne
shl
mul
shl
out
in
lret
out
sar
ret
enter
loop
jmp
std
test
xchg
loop
repz
cmp
ds
stc
ret
cmp
shl
loop
cld
orl
lock
cmp
std
lret
cmp
shl
and
fisttps
test
test
hlt
xchg
cs
in
int3
cmp
addb
add
mov
in
out
out
das
call
cmp
cld
aad
icebp
addl
std
loopne
orb
fnstenv
fxch
xor
int
in
fucom
aad
adc
mov
loopne
leave
stos
sbb
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
or
and
adc
add
mov
int
xchg
hlt
mov
shrl
xlat
shr
aaa
jmp
cmp
clc
test
filds
fucomip
xchg
in
test
adcl
out
int
sti
ffreep
icebp
div
les
icebp
in
xchg
loope
xor
int
jmp
iret
icebp
leave
sarb
sti
shl
aam
cmc
leave
out
cli
out
clc
lret
xchg
test
rol
loop
fcmovnbe
into
fidivl
cmc
shlb
xlat
fcom
hlt
loope
out
mov
icebp
nop
fiadds
jmp
cmp
aad
clc
loopne
sti
aas
cmc
xlat
rcr
cli
xchg
ljmp
shl
fcmovne
stc
lock
aad
rcr
in
cli
mov
jmp
lret
icebp
mul
iret
leave
loop
aaa
cmp
lret
rcr
fsub
rol
cld
ret
fsubr
shl
ror
int
lret
cmc
div
mov
out
lret
lret
loope
ret
bnd
jmp
jecxz
test
int
jmp
cmp
cld
cmp
hlt
addl
fcomi
xor
in
jecxz
xor
leave
ljmp
pushl
test
fisttpl
repnz
mov
xor
out
enter
idiv
iret
in
cld
repz
leave
lea
ss
in
out
std
cmp
lret
repnz
fsub
std
cli
call
loop
out
fmulp
loop
jmp
aad
rol
ljmp
cmp
cld
std
out
idiv
loope
jmp
out
jmp
aad
xor
out
ss
in
ror
cld
aam
addl
orb
test
ror
in
shr
jmp
mov
fxch
xchg
loopne
ret
sub
out
call
not
shl
sti
icebp
leave
call
into
mov
repnz
call
shl
xor
rcl
int
out
lret
cli
ds
ret
aad
enter
mov
xor
repnz
std
aad
shl
repz
out
std
aam
in
out
in
lret
ret
mov
test
xchg
adcb
sti
sarb
roll
cld
hlt
hlt
enter
in
fistl
hlt
clc
xor
out
sti
fcomp
rcl
xchg
repz
ret
in
test
enter
out
enter
jmp
aaa
cmc
cmp
cmc
loopne
cmc
fld
sti
leave
ror
xchg
jmp
jmp
lret
ss
loop
lock
fmul
pushl
fdivp
jmp
sarb
repnz
leave
out
jecxz
test
aad
xor
aad
hlt
cmp
sar
rol
jmp
cmp
loopne
out
into
xchg
iret
and
lret
in
fnstcw
clc
aad
into
lock
stc
hlt
xlat
addb
ljmp
hlt
cs
sarl
cmpl
fdiv
mov
or
leave
iret
in
xchg
xchg
out
imul
out
icebp
iret
leave
shr
cmpb
icebp
mov
mov
out
loop
mov
rol
mov
rcr
cmp
fiaddl
aam
xchg
idiv
ljmp
leave
mul
lock
fcmove
in
xlat
in
cmc
shl
fcmovnu
lock
in
fcmove
in
out
lock
in
mov
imul
iret
xor
addl
leave
ret
out
mov
shl
in
lock
idivl
ds
int
sti
ret
loopne
ljmp
into
repnz
div
call
lret
xlat
lret
loopne
fcom
shl
fldz
jecxz
nop
lret
loopne
xchg
out
in
xor
ljmp
in
shl
aas
rol
mov
sti
mov
fsub
test
in
ffreep
shl
lret
into
ss
lret
cmc
fxch
fst
cmp
int3
xchg
dec
sub
jmp
cli
lret
shl
shr
call
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
add
mov
jle
add
sti
mov
jecxz
into
shrl
iret
vpmulhuw
shr
cmp
xor
not
out
clc
ret
cmp
xchg
loopne
fldl
fld
xlat
repnz
incb
xlat
loop
mov
out
jmp
leave
sub
test
enter
testl
repz
xor
stc
into
cld
rcl
loop
in
xchg
mov
out
shl
decb
enter
into
cmp
cmpl
in
fucomi
nop
shl
cli
call
idivb
cld
out
aaa
cmp
hlt
fsub
cmc
idiv
cmp
fldl
mov
in
idiv
xor
rcr
lret
cmc
loop
clc
test
cmp
fstp
mov
loop
in
repnz
sti
icebp
sar
call
jecxz
out
enter
out
in
out
loop
in
out
divl
ret
aaa
aaa
shr
ss
idiv
fld
jmp
into
out
incl
out
leave
clc
xor
hlt
cmc
repnz
cmc
out
addb
jecxz
lock
loope
in
loope
aad
sub
aas
jmp
not
shl
shr
mov
xchg
roll
repz
in
rcr
stc
sub
fnstcw
cmp
mul
test
xchg
in
mov
adcb
call
std
ret
cmp
aas
sti
ftst
jecxz
fld
xchg
int3
loope
in
repz
jmp
enter
fcomip
ljmp
ret
xchg
out
jmp
loopne
mov
loop
leave
int
fidivrs
hlt
cmp
sbb
test
iret
ljmp
ss
out
into
fdivp
cmc
idiv
out
fildl
ljmp
aam
lret
repnz
jmp
shl
cli
fxam
xchg
std
ljmp
cli
lock
enter
div
into
icebp
loope
fidivrl
xlat
rolb
or
mov
repnz
in
repnz
cmp
out
hlt
icebp
cmp
cli
loop
repnz
mov
sub
loope
imulb
imull
std
clc
repz
ret
hlt
sarb
ds
out
int3
sub
fcmove
lret
xlat
sub
lret
fnstenv
shr
xor
shl
out
aam
loop
hlt
test
into
mov
ss
out
jmp
icebp
stc
leave
std
or
hlt
fcmovbe
std
test
jecxz
aad
in
fimuls
int
hlt
into
out
lret
fucomi
fsincos
push
aaa
repnz
rol
loope
decl
int
xor
not
in
ret
out
cli
hlt
not
loopne
xchg
out
test
aaa
sti
mul
clc
clc
lock
shl
fmulp
fsubp
ftst
xchg
imul
adcb
lock
lret
ljmp
sti
loopne
aam
cmpb
and
jecxz
jmp
leave
iret
in
out
fcmovu
in
lret
fnstenv
cmp
hlt
fsubp
int
int
leave
fsubp
loop
xchg
jmp
repz
icebp
jmp
lock
cli
cmc
test
neg
int3
cld
ljmp
in
lret
lock
shl
test
cld
filds
out
call
hlt
xor
loop
fsubr
std
aam
roll
sar
mov
les
in
test
jecxz
leave
int3
loop
xor
cmp
div
xchg
repz
fiadds
jmp
leave
shl
out
out
lret
rcl
aas
cld
test
repnz
in
mov
clc
ljmp
aad
cmc
repnz
aaa
aam
int
idiv
repz
cmc
rol
aad
out
mov
std
mov
loopne
cli
ret
icebp
cmp
into
cmp
sarl
fcmovnbe
out
stc
in
and
cli
movzwl
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
fstl
aas
add
mov
loopne
loopne
xchg
xlat
int3
call
neg
fnstcw
ds
repnz
rcl
mov
jmp
rcll
call
out
in
fdiv
lret
int3
lret
in
cmp
sti
and
shl
fcomip
out
leave
xchg
ffreep
jecxz
xor
fmul
cmp
repz
xlat
sbb
cmp
jecxz
call
jecxz
adcl
repz
imul
call
aas
aam
jecxz
clc
call
jecxz
iret
xchg
addl
xor
jmp
out
stc
shl
fucom
ret
incb
mov
out
lret
out
loope
test
ljmp
iret
xor
int3
repnz
rol
loopne
xchg
stc
lret
mov
rcl
shlb
aam
ror
test
aad
aam
mov
fstl
rol
mov
icebp
divb
cmc
out
bnd
std
out
xlat
xlat
faddp
ret
imul
lret
int3
test
loop
enter
fldlg2
out
xlat
fldlg2
cli
shl
fnsave
rol
loopne,pt
in
cld
lret
fdivr
rclb
aam
divb
jmp
aam
cli
xlat
loop
test
xchg
rol
loope
cld
cmp
ds
loopne
cmp
into
aad
fmul
ret
lea
and
lret
jmp
cmc
incb
repnz
mov
xchg
nop
loope
int
shl
loopne
xor
into
fmul
xor
aad
fmul
shr
clc
mov
or
neg
jecxz
mov
ret
test
idivl
fadd
out
test
testb
repnz
das
ljmp
test
icebp
iret
fcmovnb
aam
decb
xchg
out
cli
jmp
in
shr
div
hlt
jecxz
rcl
jecxz
std
in
lock
xchg
fiadds
icebp
lret
shr
xor
clc
shl
fld
clc
stc
sti
loope
xchg
aad
call
lret
rcr
in
lret
repnz
mov
std
ret
fcmove
int3
icebp
loope
out
cmc
iret
out
lret
ds
adc
out
aas
lret
xchg
mov
mov
and
call
out
aad
fdivrl
mov
fadd
in
stc
idiv
xchg
in
orl
clc
clc
ljmp
movb
stc
int
test
ret
ss
xorb
aad
loope
clc
sti
loopne
mov
loopne
int
loop
lret
xchg
in
jecxz
fcmovu
out
ss
fadd
jecxz
aam
stc
in
xlat
stc
cli
mov
out
loop
cli
rcl
shr
ss
jecxz
int
enter
sar
fnstsw
call
jmp
shl
in
aad
xlat
fninit
fsubr
aaa
int
hlt
fsubr
out
roll
test
lock
cmp
xbegin
test
fcmovnbe
adc
cld
lds
push
cmc
shl
leave
rcl
in
hlt
jmp
push
repz
sbb
loope
int3
mov
leave
out
roll
out
xor
cmp
stc
enter
roll
aad
mov
int
in
jmp
repnz
lret
loop,pn
sub
hlt
fnstsw
lock
call
mov
mov
in
shlb
xor
aaa
in
rcr
jmp
std
hlt
fcmovu
ret
ret
loopne
fld
sbb
loopne
hlt
repnz
stc
in
in
fsubrp
iret
lret
ret
cmp
ror
mul
cld
call
mov
int
shl
lock
cmp
cmp
ds
ret
fsub
sbb
in
loope
out
jecxz
lret
enter
notrack
repnz
cmp
shl
loopne
out
in
orl
jecxz
out
icebp
std
out
jmp
loop
repz
aad
std
fucom
in
clc
loop
inc
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
jnp
pushf
adc
jle
aas
add
ftst
mov
mov
ror
hlt
out
fnop
repz
sarl
cld
xchg
jmp
aad
cmp
lret
loopne
aas
stc
jecxz
out
iret
hlt
addl
ret
loop
fsubr
jmp
out
nop
jmp
fst
neg
cmp
roll
call
fisttpll
ljmp
ss
sarb
cmp
cmp
aas
aad
test
xchg
in
jmp
out
orl
ljmp
out
repnz
rcr
xchg
xlat
xchg
jmp
cs
xor
out
clc
lock
aad
out
in
test
mov
hlt
shl
inc
xor
into
jmp
cli
loope
sarl
aam
in
cli
mul
loope
xchg
in
call
out
aam
call
hlt
cmpl
jmp
leave
xchg
xchg
jmp
int
jmp
ds
into
jecxz
rol
out
clc
jmp
mov
int3
mov
jecxz
xor
out
sti
fxch
in
mov
out
mov
test
jmp
shlb
icebp
in
aaa
test
cli
adc
aas
stc
faddl
in
addl
loope
out
call
lock
shl
cmp
mul
loope
cmc
cld
fmuls
adcb
xlat
out
fcom
jmp
in
cmpl
in
in
xchg
fsub
xchg
fadd
jmp
out
xlat
out
xlat
stc
fdivr
cmc
mul
repz
flds
jmp
loope
fdivr
ror
xor
out
cli
stc
shlb
out
cli
not
ror
fildl
lret
stc
icebp
loopne
fdivrp
rclb
cmp
aaa
cmp
jmp
sarb
jecxz
in
dec
mov
into
mov
out
xor
cmp
sti
fucom
adc
idiv
filds
in
leave
in
les
ljmp
cmc
lret
loop
aad
fpatan
sti
std
out
fadds
test
int
cmp
or
in
fiaddl
in
div
mov
adcb
xor
repz
repnz
fiadds
loop
xchg
jmp
mov
fsubrp
mov
xchg
loope
sub
fnop
jmp
ds
repnz
fabs
in
fld
aad
sti
jmp
cmp
ret
icebp
test
shr
int
fcmovnb
into
loopne
ret
mov
cmc
std
addb
rcl
xor
cmp
std
repnz
cmc
shl
in
jmp
dec
orl
rcl
lret
ss
out
ds
jmp
std
cmp
repnz
xchg
fcmovu
shl
int
in
cmp
out
cmc
xor
cmc
cld
fsubr
sbb
fcomp
xchg
fdivrp
loop
aam
lock
cmp
shr
fucomip
clc
out
into
movl
mov
ljmp
aam
ljmp
shl
out
mov
call
lock
lock
nop
out
aam
les
xor
iret
aad
aam
fucomip
add
repz
in
cmp
jmp
xchg
jmp
leave
lret
icebp
ss
xor
fistpll
ret
cli
cli
mov
ffreep
mov
int3
fisttps
fstpt
xor
ds
icebp
ds
aas
loop
frndint
in
loope
xchg
int3
xchg
hlt
repz
fld
cmc
xor
cmp
in
loop
test
sti
jmp
ljmp
in
xor
lret
les
sar
clc
cmp
call
in
out
and
in
loope
lock
loope
stc
lret
shl
aad
test
aas
loopne
aas
out
enter
in
movl
enter
stc
shr
jecxz
cmc
push
fninit
jecxz
clc
lret
movl
inc
add
add
add
add
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
xchg
jle
aas
add
out
test
xlat
fcmovne
out
fcmovnbe
shl
stc
sti
sub
clc
fld
in
xlat
mov
nop
call
aaa
leave
out
into
repz
fdiv
hlt
cmc
hlt
cmc
ret
repz
dec
test
int3
fcoms
nop
loop
int
ror
int
rcr
fmul
shl
shl
cmp
enter
clc
ljmp
sarl
int3
xlat
int
aam
hlt
int3
ret
inc
iret
cli
xlat
jmp
lret
jmp
into
aad
out
rcl
imul
cli
cmp
jmp
int
cmp
in
les
xchg
jmp
xchg
call
xor
xor
xor
in
mul
cmp
orb
out
fsubrp
or
out
cmc
out
cmp
out
cmp
ret
enter
jmp
shl
test
in
cmp
cs
aad
cmc
xlat
fadd
repnz
jmp
icebp
xchg
out
cmp
xlat
cmp
sarl
shl
rcr
cmp
mov
mov
cmc
fptan
xor
cmp
std
leave
loopne
testl
lret
icebp
loope
fcoml
loope
xlat
int
fsubr
loopne
icebp
stc
aad
cmp
out
mov
ljmp
into
call
out
int
cmp
std
in
cld
std
sar
test
ffreep
sti
iret
lret
popl
loop
lret
cmpb
roll
cmc
les
ljmp
xor
shl
cmp
int
not
fndisi(8087
hlt
xchg
leave
movb
mov
call
xor
ror
call
lret
jecxz
cmp
xchg
mov
cld
in
out
lret
ror
ret
leave
cmp
lret
out
shr
fsub
aas
rol
test
ret
sub
mov
loopne
rol
sub
call
xor
repz
mov
hlt
incl
loope
mov
shrb
aad
int
cmp
out
out
sub
out
int
xchg
leave
iret
jmp
xor
into
fdivrs
lock
jecxz
orb
enter
std
mov
ss
into
clc
sti
hlt
jecxz
ss
aam
cld
clc
clc
jmp
mov
rolb
hlt
fidivl
aam
aaa
repz
into
out
hlt
aad
jmp
clc
or
xchg
xor
stc
cmp
cmp
sti
loope
out
cli
cmc
out
int
in
in
xchg
jmp
xor
int3
aam
out
repz
fmulp
inc
iret
rcl
in
mov
orb
in
in
cmc
jecxz
test
lock
test
mov
jmp
rolb
out
fnstcw
ss
cmp
fdivr
fldl
xchg
mov
into
out
cmp
sti
lret
int3
addl
mov
jmp
mov
mov
loop
ljmp
xor
sbb
repnz
out
out
nop
cld
out
shl
mov
xor
ss
hlt
cmp
in
stc
int3
clc
and
out
in
inc
les
jmp
mov
shl
idiv
fdivrl
iret
dec
cli
loopne
stc
div
cmp
jmp
xchg
rclb
out
jmp
jmp
not
cmp
iret
sbb
aad
rcr
stc
jmp
int3
sbb
rcll
not
leave
repz
imul
cmp
div
test
ds
mov
in
lret
cmc
rcll
leave
sti
fcmovu
cli
aas
stc
ss
in
not
mov
fsubr
xlat
xlat
mov
jmp
std
mov
aaa
out
out
cmp
fldl2t
call
cmp
not
hlt
stc
sub
mov
mov
xchg
mov
rcr
stc
call
repz
int3
into
repnz
cmp
fmul
jecxz
orb
les
add
add
xor
add
inc
clc
and
inc
lock
test
inc
add
or
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
fmul
lock
lock
int
out
cmp
into
std
int
xchg
std
fadds
cmp
jmp
div
int3
cmp
int
call
out
repnz
cmp
loope
in
test
enter
fxch
sti
hlt
push
fdivr
std
ret
lret
jmp
xchg
fcoml
ret
frndint
cmp
lock
out
xlat
fdivr
sti
mov
in
leave
ret
div
jecxz
xchg
cmp
repnz
fcomp
int
aam
cmp
sti
hlt
out
test
test
lret
aas
loopne
rorl
ret
fsub
cmp
cmp
cli
int3
enter
std
clc
clc
idivl
hlt
loope
fsub
mul
mov
cli
out
xchg
in
cmp
fidivl
cmp
lock
aas
test
les
jecxz
xchg
bnd
aad
icebp
aad
std
sti
fmulp
fdivs
flds
jmp
out
cld
std
orb
int
enter
int
not
aad
icebp
call
mov
jmp
repnz
lock
aas
rcl
shr
cld
sub
ljmp
icebp
icebp
sub
aad
in
clc
in
xlat
xlat
notrack
hlt
out
out
hlt
test
mov
jecxz
loope
rcl
iret
div
ror
cmp
hlt
ret
bnd
loopne
mov
out
fcomip
nop
in
aam
lret
aaa
lret
cmp
aas
ljmp
icebp
sti
std
jmp
cli
call
in
aam
jecxz
jecxz
jmp
out
int
aad
into
sar
xchg
roll
fscale
decb
shr
out
ror
xor
xor
sti
into
sub
ljmp
enter
adcl
rcr
int3
fcmovu
iret
lret
ret
loop
test
ret
stc
mov
out
adcl
loope
repz
xor
fsin
out
test
mov
test
ljmp
ss
ret
sti
jmp
stc
into
repz
lock
clc
out
iret
in
loope
xchg
cmc
clc
lock
div
xor
cmp
loopne
aad
ds
loop
loope
sbb
cmc
loope
into
loope
ljmp
cmp
fcmovb
iret
aad
cld
xchg
idiv
orb
in
jecxz
aaa
out
in
ss
out
shll
ds
test
out
test
jmp
jmp
jmp
shlb
ror
not
ljmp
cmp
cmc
fcmovnu
cmp
mov
out
icebp
cld
cmp
aam
fcomi
fdivr
fadd
hlt
aas
fcomp
xor
in
mov
cmp
xor
fucomp
shl
aam
rcl
in
fadds
aam
mov
cli
orb
jmp
div
sarb
sti
aam
xlat
clc
in
rcr
out
addb
in
out
lds
in
leave
jecxz
jmp
sub
fdivp
std
or
jmp
int3
xchg
shlb
sub
cmp
hlt
lret
shr
loope
aam
test
mov
out
mov
fucomip
in
nop
int
icebp
in
iret
jmp
jmp
int
cmp
test
fcmove
sti
fstp
in
ljmp
repnz
lret
int3
stc
test
cld
icebp
loopne
fcmovnb
aad
fcoms
xor
int3
in
xlat
div
aaa
adc
fucomip
sar
test
xchg
in
fimull
mov
call
das
cli
lret
sarb
icebp
aas
mov
in
hlt
fadd
mov
dec
lock
fldl
fcmovbe
call
fistpll
flds
ret
lret
int3
out
loope
cld
repnz
jecxz
clc
repnz
std
out
fcmovb
cmp
test
test
hlt
orl
int3
roll
xor
repz
fmul
aad
flds
adc
fcmove
in
mov
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
sti
push
mov
aas
add
in
rol
out
repnz
lret
ds
jmp
les
incl
jmp
mov
ret
fnstcw
aam
xlat
fisttpl
call
in
out
rorl
out
lret
test
cmc
loopne
xlat
shl
div
fsubr
mov
std
mov
repnz
jecxz
sti
cli
jmp
int
add
flds
lock
fst
mul
int
in
fcmovnbe
stc
shl
icebp
cmp
std
loope
sub
fdivrp
mov
roll
repz
in
cli
call
aad
clc
out
sar
shl
loopne
imul
lea
fucomp
repnz
ror
in
fcmovbe
out
and
iret
cmp
test
xchg
out
cli
lret
int
xchg
div
in
hlt
ds
cmp
addl
movb
std
call
loop
shll
in
fyl2x
shl
sar
cmp
push
mov
cli
out
in
sti
call
out
leave
int3
rcr
div
sub
out
cmc
or
loopne
clc
int3
xlat
stc
mov
jmp
shl
cld
shr
neg
icebp
jecxz
loop
ror
cmp
mov
enter
iret
shl
adc
call
cmp
sarb
div
out
cmc
test
std
int
repnz
lds
lock
lret
aaa
int3
aaa
shr
fdivrs
roll
jmp
into
fucom
lret
out
sti
lret
in
rcl
repz
lock
sti
jecxz
in
ffreep
rcr
jmp
nop
lock
iret
adc
into
enter
in
repz
cmp
fscale
xlat
test
out
fucomip
cli
fmul
fnsetpm(287
fisttps
ljmp
lret
out
ret
enter
mov
loope
loope
loope
repnz
icebp
cmp
rcr
fnstcw
repnz
testb
lock
loope
fdivr
xor
hlt
sarb
not
cmp
stc
fcomp
aas
aas
lock
hlt
xchg
jmp
ljmp
xor
fcmovbe
hlt
clc
jmp
into
lock
in
out
xlat
xchg
loopne
lea
into
aam
aad
cmc
lret
xor
aas
test
fsubp
testl
lret
jmp
in
in
sti
loope
idiv
jecxz
fcompp
shl
cld
aam
out
enter
lock
test
cmp
icebp
loopne
shl
fiadds
enter
xlat
cmp
std
xchg
fcoml
repnz
xor
lock
icebp
loop
fdivrp
fmulp
out
in
iret
jmp
int3
repnz
fadd
loop
shl
call
std
cmp
idiv
repnz
ret
fdivr
clc
cli
in
iret
lock
sub
ret
lock
repz
fdivl
repz
loop
fdivrp
loopne
clc
loopne
lret
int3
lret
icebp
or
ss
int
into
lock
xor
jmp
in
leave
xchg
mov
xor
out
imul
ss
shr
imul
int
cli
icebp
xbegin
xchg
and
and
out
shll
out
stc
iret
in
cmp
loope
int3
xlat
out
icebp
idiv
jmp
dec
fcmovnu
out
fiadds
ror
stc
int3
fucomi
fdiv
cld
testl
int
call
jmp
ljmp
add
xchg
sar
ljmp
jecxz
iret
aam
iret
shlb
ror
fdivrl
in
repnz
jecxz
loop
test
addb
in
jecxz
rcl
cmp
jmp
fidivrl
fistpll
repz
and
in
sti
mov
lock
icebp
ret
leave
icebp
jmp
cmp
cmpl
sar
orb
in
fsubrp
orb
shr
lock
cmp
out
cmp
clc
fcmovnu
cld
sti
xchg
leave
out
adcb
add
add
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
adc
jle
aas
add
xchg
in
ljmp
cmp
in
ror
lret
cli
std
ret
inc
out
cmc
mov
mov
fucomip
out
lret
out
xor
cmp
fcom
lret
repnz
std
ret
aam
incb
ftst
call
loopne
test
lret
lret
cmp
cmp
int3
clc
ss
imul
loope
mov
xchg
ffree
sti
repz
rcl
xor
hlt
cmp
fidivrs
fxtract
aaa
test
jmp
loop
mov
mov
xor
in
cmp
xor
loopne
cld
in
orl
mov
iret
into
icebp
lock
iret
xor
aaa
sti
jmp
rolb
rol
filds
fcmovnu
mov
mov
hlt
xor
xor
repnz
das
cmp
cmp
cmp
aam
ret
jmp
out
cld
fimuls
repnz
aaa
stc
fucompp
lock
cmp
fimuls
or
jecxz
out
sub
cmp
jmp
aas
shl
stc
xchg
aam
aam
or
jmp
into
in
cmp
sar
lock
enter
roll
mov
in
lret
mov
jmp
xor
lret
xor
cli
out
fcomp
ljmp
out
bnd
hlt
fucomip
ljmp
ret
xor
enter
in
test
aad
cmc
repnz
aam
aas
int3
fcmovu
aas
out
iret
loopne
xlat
mov
lret
int
mov
cmp
cmp
lret
rol
in
movb
loope
int
cld
shl
hlt
aad
leave
cld
fxtract
fidivrs
cmp
repnz
cmp
aad
out
ljmp
inc
mov
loop
ret
sarb
not
ds
rol
call
fsub
sti
fisttpll
bnd
in
out
incb
in
rol
in
cmc
orb
hlt
sbb
vpmullw
xor
std
cld
sarl
rcr
ds
stc
loope
cli
lret
enter
addb
jmp
sub
in
sarb
xchg
loop
mov
mov
leave
mov
in
aam
cmc
in
lds
loopne
sarl
repnz
ret
loop
in
in
jmp
xor
out
int3
lret
std
cmp
cmp
mov
stc
cmp
in
test
mov
nop
mov
aaa
int
xbegin
rol
xlat
fcmovu
rol
sar
xchg
ljmp
xchg
lock
fmul
out
call
shl
fxam
mov
cmc
mov
test
loope
lret
call
divl
jmp
iret
into
out
addb
out
and
iret
fildl
fbstp
into
cli
ss
xor
cli
fsubr
lret
aam
out
test
les
rclb
xor
cmp
icebp
lret
stc
cmpl
sar
fcomip
aad
cli
fmulp
int3
ljmp
fdivs
in
std
leave
sti
fcomip
loope
ss
call
fucomip
test
leave
icebp
in
repnz
into
div
lock
shr
in
sti
idivl
loope
shl
icebp
lret
mov
shr
in
das
rcr
xor
cmp
jmp
loop
out
idiv
xchg
test
in
ljmp
call
hlt
aad
not
aam
fiadds
mul
xor
xor
in
lock
enter
shl
in
std
fdivr
test
rcl
enter
test
xor
mul
aam
fidivl
xlat
ds
cmp
loopne
xchg
div
call
jecxz
clc
fucomi
fmul
repnz
fdivrl
lret
in
cmp
xchg
leave
mov
fmuls
cld
mov
xchg
iret
jmp
rcr
stc
into
cli
not
cmp
sar
aas
ffree
in
in
in
lret
in
mov
mov
mov
jmp
ret
ror
ret
rcl
je
repz
sbb
add
jecxz
repnz
fnstcw
fucomi
cmp
stc
ret
cmc
sarl
cld
fimull
xor
cmc
ljmp
in
repnz
bnd
jmp
loopne
cld
orl
cld
cmp
loope
aam
icebp
cld
shl
jmp
loope
sti
mov
jmp
jmp
cmp
hlt
rol
loop
ror
loope
xchg
mov
cli
test
test
xor
divl
loopne
cld
std
les
loop
jmp
leave
stc
mov
out
cmp
in
fcmovnb
cld
int3
xor
add
out
fiaddl
in
test
mov
lea
lret
jmp
call
icebp
rcl
jecxz
ffreep
aad
fsub
cmp
enter
loop
out
ret
das
repz
fcmove
jmp
cmp
in
ret
fcomi
imul
in
imul
test
out
test
aam
out
cmp
cmp
add
sar
mov
enter
loop
loope
xor
out
aad
test
aam
fldl
xchg
in
mov
in
clc
into
shl
cmp
enter
in
aas
in
clc
mov
fcomip
jmp
loopne
fcmovnbe
ljmp
aam
idiv
not
sti
fsubp
cli
add
dec
test
int3
loop
cmp
xchg
jecxz
lock
cmp
lret
out
hlt
loop
shl
testb
and
leave
out
lock
icebp
aad
xor
idiv
shl
shr
sbb
lret
jecxz
out
test
xor
xor
iret
int3
repnz
ds
loope
ret
loope
loop
fcmovnbe
ret
sti
in
aad
divl
xor
repz
fnop
cld
fld
fcmovne
out
hlt
lret
cld
into
out
loope
fst
out
jmp
xlat
xor
cmc
cmp
repnz
clc
lock
in
enter
clc
fcmovne
loop
mov
sar
int
in
aas
cmp
neg
std
shl
fsub
stc
fidivrl
in
faddl
test
xor
iret
jecxz
ljmp
fildl
fdiv
movl
enter
lret
ss
cmp
sbb
mov
fmulp
repnz
int3
test
fcmovnb
out
std
rcl
out
aad
sar
cmp
int3
lret
lret
in
mov
xlat
out
repz
fcmovb
loopne
cmp
cmp
and
loope
xchg
fldlg2
rorb
stc
cmp
test
in
fdivrp
fsubr
sar
div
leave
mov
enter
lea
xor
leave
jecxz
enter
std
cmp
cmc
aaa
testl
cli
mov
sub
xor
sub
cli
fildl
xchg
int
in
xchg
into
mov
shll
sarl
xor
enter
in
cld
sar
fucomip
repnz
mov
int3
xchg
jecxz
loopne
xchg
repz
out
cmp
idiv
in
ret
xlat
div
aam
jmp
lret
xchg
fninit
lret
xchg
aad
rcr
fldl2e
in
cld
fcom
repnz
and
add
in
fdivr
fucomp
lret
testb
jmp
rcl
out
add
sub
jmp
aam
ljmp
xor
cld
cmp
aad
fdiv
rol
aad
jmp
in
xchg
std
mov
clc
ss
shrl
leave
jmp
loope
test
stc
leave
out
fdivrp
and
or
out
ret
aam
aaa
not
cmp
fmul
aam
out
rol
std
clc
fdivr
fcmovnu
into
ret
in
repnz
repz
fcmovnbe
fcmovbe
cli
lret
cmp
aad
repz
jmp
lds
xchg
repz
xor
cmp
div
leave
ss
ret
hlt
in
cmp
jmp
jmp
fstp
lea
pop
add
add
iret
vpaddusw
fstp
pop
mov
outsl
mov
in
ficomps
jle
add
fbstp
xor
call
int
int
fadd
cmp
call
out
jmp
sarb
cmp
fxch
lret
cmp
fst
lret
test
fcmove
fcmove
into
sub
shr
loope
clc
icebp
lret
in
shr
sti
iret
ds
in
rcr
leave
xchg
fisttps
jmp
lock
xor
loopne
int
ret
aas
sarl
ret
ljmp
iret
mov
fxch
divb
out
aaa
lock
out
shr
cli
fcmove
std
aad
cli
loope
lret
and
test
in
ss
out
lock
sarl
rcl
xlat
xchg
fucom
fcomp
xchg
enter
out
cs
sti
lock
shl
test
mov
or
loope
mov
cli
xlat
int3
xor
jecxz
shl
testl
orb
in
ret
clc
icebp
lret
xlat
int3
rcl
out
loope
fcomp
call
movb
int
mov
out
shr
icebp
aas
lock
icebp
jecxz
lock
out
mov
icebp
xor
idiv
iret
repz
cmp
cmc
idivb
add
icebp
loop
fcmove
jmp
int3
shl
ret
lds
in
fiadds
jecxz
shl
repnz
and
mov
in
mov
nop
imul
fnstenv
sar
std
ror
sti
repz
xor
jmp
xlat
loopne
xchg
into
enter
int
ror
int
ret
clc
fstp
rol
faddp
mov
test
shll
test
int3
cmpl
in
call
out
fdivr
ljmp
rcl
out
jmp
cmp
fsubr
ret
rolb
iret
ret
cld
into
shr
fxam
stc
sti
into
out
in
hlt
cmp
sar
fldl
loopne
clc
in
xchg
les
ror
aam
leave
std
div
jmp
test
clc
rcl
cmp
out
sti
test
std
loope
sti
fists
xlat
cmp
cmp
fld1
fcom
aad
aas
neg
cmp
in
loope
xchg
fimuls
out
fdiv
std
cmp
icebp
idiv
icebp
aas
and
out
hlt
ret
fucomip
test
int3
loopne
mov
in
shr
stc
leave
ljmp
dec
sti
fdivrl
in
loope
cmp
mov
out
out
ljmp
add
test
cmc
stc
loope
shl
lret
lock
not
fnstsw
neg
leave
aas
in
rolb
clc
cld
fiadds
in
xchg
bnd
ror
in
fidivrs
xor
xlat
sar
enter
xlat
fdivr
in
std
loope
leave
xor
int
cmp
in
int3
lret
ds
lock
cmp
test
shr
testb
xchg
loope
in
xor
clc
xor
cmp
std
out
out
cld
shl
mov
fdivrp
fadd
lret
jmp
out
out
cs
cld
aas
stc
cmp
xor
xlat
orl
lea
jmp
das
cli
aad
into
hlt
cmp
cmp
aam
xor
out
fsubp
fdiv
loopne
nop
cmc
out
divb
not
into
xlat
cmp
idivb
cmp
std
faddp
icebp
out
fisttpll
into
fsub
out
call
xor
leave
in
cmp
std
cld
aas
int
repnz
movb
cmp
jmp
in
in
enter
fdivr
ljmp
sar
xlat
shl
fincstp
in
incb
in
mov
fdivr
lock
jmp
aam
rol
aas
adc
std
fadd
loope
lret
xchg
xor
stc
int
cli
jmp
out
testl
mov
jecxz
cld
in
in
test
in
call
ljmp
ftst
rcr
fisttpl
cld
nop
std
out
testb
jmp
fcom
xlat
push
xlat
outsb
sar
add
sbb
add
in
test
fidivl
in
int
leave
repz
shl
fcmovbe
in
ret
fmuls
xchg
loope
lds
out
out
shlb
cli
sti
int3
addb
mov
enter
ror
xchg
aas
out
into
into
out
jmp
and
lret
addl
hlt
ss
aad
xabort
rcr
cli
aas
loope
ljmp
in
out
orl
fucomp
int3
cmp
fdivrl
fstp
xchg
test
fisttpll
clc
leave
call
cld
ds
cmc
loope
fucom
repz
test
int
lret
cmc
int3
mov
ret
sarl
aad
shll
jmp
in
rorl
out
movb
fld
sub
sti
clc
call
cmp
cmpl
and
xchg
roll
repnz
repz
fcmovnb
ds
fdivr
sarb
hlt
mov
lret
xchg
icebp
sti
xchg
jecxz
mov
out
out
into
aas
aad
cmp
test
rcr
stc
roll
cli
icebp
fsubp
dec
lret
lock
hlt
cld
loope
ret
test
aad
xlat
cmp
in
into
nop
ljmp
cli
shl
jmp
xor
cmp
fmull
xlat
jecxz
cld
xchg
mov
dec
hlt
xor
fcmovnu
repnz
vpsubsb
cmc
test
in
pop
into
out
ss
aaa
aam
in
xor
repnz
stc
test
test
lds
cld
loope
jecxz
aaa
aam
cli
cmp
lret
in
jecxz
test
leave
mov
in
into
test
xchg
xor
call
into
out
jmp
loop
shl
out
cmp
repz
neg
mov
into
jmp
xchg
ror
into
divl
clc
stc
idivb
aad
out
leave
shl
aas
jmp
int3
jmp
sub
aam
jmp
lret
cmpb
test
icebp
cmp
ret
mov
call
call
out
sarl
aam
bnd
fstp
addb
cli
loopne
int3
lock
xor
in
cmp
ljmp
out
lret
lret
test
mov
loop
repnz
xor
in
out
xor
cmp
jmp
fstp
enter
test
shl
in
fidivl
cmp
aad
rcr
out
in
sti
sar
xchg
adc
hlt
in
repnz
cmc
clc
aad
out
int
fdivrp
sbb
idiv
call
xchg
aad
lock
out
stc
cmp
shlb
mov
sbb
fst
lds
call
fdivr
ss
test
cmp
call
mov
in
std
xchg
xchg
ljmp
into
xlat
sarb
repnz
fsin
loope
addb
call
jecxz
sub
hlt
sti
out
loope
rcl
fcmovnbe
loope
sar
rcl
jmp
lret
cmc
xchg
imul
in
ss
xor
in
cmp
out
enter
clc
jmp
in
fmulp
out
icebp
out
cmp
aaa
lock
xor
out
lret
lret
int
fcos
enter
mov
neg
orb
shl
xor
enter
fnstsw
sti
cmp
cmp
out
mov
mov
in
mov
and
out
in
fsubr
cmp
ds
fdivr
in
in
aad
mov
cli
into
int3
nop
loope
lret
cmc
ljmp
ror
sti
cmp
ret
out
xchg
clc
mov
fldl
jmp
out
cs
out
jmp
out
loope
jecxz
hlt
aam
xchg
xchg
int3
jmp
stc
ss
lret
cld
std
cmp
int
sarb
testl
fbstp
cmp
je
push
push
mov
jmp
rcl
rol
rol
rcl
mov
lods
insb
ja
popa
jle
aas
add
lret
aad
fdivs
icebp
std
in
in
loope
mov
adc
aas
lret
addb
xor
leave
in
cli
test
cmp
loop
fimuls
mov
repz
hlt
ret
out
fdivr
lret
idiv
std
adc
out
hlt
shr
fcomp
cli
icebp
in
out
loop
cmc
xor
call
in
std
int3
loopne
in
cmp
call
cmp
lret
nop
xchg
aas
xor
sti
leave
ss
int
repz
loop
stc
repz
sar
aad
jmp
jecxz
mov
in
ss
rcl
xor
lret
cmp
cmp
test
ret
out
mov
mov
int
out
fucomip
rorl
sti
aam
flds
xlat
in
out
ret
leave
shr
adc
fucomip
jmp
in
out
xor
repz
test
int3
in
flds
neg
cld
fdivr
in
repnz
sub
idiv
xor
int3
fcmovu
hlt
sar
movb
shl
rorb
in
lret
lock
incb
popl
loope
adc
aad
int
out
stc
add
fsubp
ret
hlt
loopne
test
enter
xchg
cmc
imul
jecxz
hlt
ss
out
cli
cmp
out
ljmp
xchg
lock
jmp
xor
cmp
loop
repnz
test
mov
test
mov
rolb
out
in
out
fdiv
out
cmp
into
stc
fcos
out
xlat
call
in
in
lea
ret
lret
cli
fldpi
xor
ret
iret
orb
out
in
mov
xor
call
test
xchg
fcomip
clc
out
iret
ljmp
sub
rcl
jmp
aam
aaa
fcmovu
rolb
enter
int
divb
repz
cli
in
sar
jmp
fadd
ret
icebp
xchg
xchg
fsqrt
into
mov
mov
cmc
xor
divl
hlt
cmp
sar
xor
out
rcr
hlt
adc
decl
rol
test
aad
ss
xlat
cmp
cli
cmp
enter
int3
mov
sti
test
lret
xchg
icebp
not
loopne
icebp
cmp
lret
int
loope
ljmp
mov
sbb
fcoml
int
shl
in
in
sarl
cmp
cmc
ret
ret
filds
icebp
lea
call
lret
cmpb
sti
aam
fnstsw
in
loop
fadd
leave
mov
adc
xchg
rol
xor
ss
aaa
aas
div
int3
cmp
in
aad
fdivr
call
jecxz
shl
test
sub
fcmovnbe
div
xlat
fmulp
cmp
enter
test
fmuls
repz
out
hlt
ror
lret
out
leave
repz
into
cmp
xlat
and
cld
mov
in
enter
aaa
aam
ss
sar
fcmovnu
cmc
ret
rol
fisttpll
out
rorb
leave
das
int
sti
das
icebp
xor
fcomi
cmc
fnstsw
ret
xchg
div
xchg
call
xor
ss
hlt
in
ss
rcr
ret
xchg
filds
cli
mov
iret
in
int
xor
fmul
shl
leave
jmp
xlat
repz
idiv
cli
out
mov
int
mov
cli
aam
leave
fxtract
idivl
cmp
out
call
fmuls
fstl
xor
jmp
int3
loop,pt
aad
out
rcl
test
out
out
std
call
sub
idiv
in
sti
test
sti
out
out
iret
mul
cld
stc
fdiv
testl
jmp
sub
ss
repnz
out
sarl
add
jmp
clc
in
test
int
loop
xor
repz
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
aas
inc
jae
and
jle
add
enter
int
cli
out
in
cmc
loopne
lock
leave
loop
mov
fcmovu
loope
xchg
xor
lock
int3
lock
jmp
cmp
clc
in
out
aam
clc
in
jmp
jmp
xchg
in
shrb
sarb
iret
lret
loopne
add
test
sarl
clc
call
xchg
lret
in
xor
cmp
into
xor
aam
sti
aaa
ret
dec
cmp
in
jecxz
sti
int3
lret
lock
clc
fcmovnb
cmp
cmp
in
fcmovnb
sar
jmp
nop
out
xor
in
ljmp
int3
fcmovnbe
ljmp
test
popl
fists
cmc
in
out
fidivrl
call
stc
cmc
not
sar
test
mov
in
and
in
out
cs
shl
enter
int3
rcr
sti
hlt
loope
roll
ljmp
aam
xor
aaa
fcmovne
loope
aam
cmc
aas
in
in
cmp
in
cld
xor
mov
hlt
sti
sarb
in
call
into
inc
out
xchg
sti
out
std
lret
mov
xchg
in
lret
in
stc
fnstenv
cli
icebp
hlt
ss
ret
clc
loop
in
leave
out
sub
rcl
std
loopne
int
iret
hlt
idivb
ljmp
test
cmc
in
faddl
stc
hlt
stc
cmp
out
aas
aad
or
iret
call
mov
xchg
shr
icebp
out
fxch
call
cli
stc
fadd
rcr
add
lret
in
out
out
fcoml
loope
cmc
cld
out
sarb
or
cmc
rcl
not
stc
sub
mov
mov
aad
int
in
leave
into
xlat
in
int3
ljmp
ret
call
clc
fsub
xchg
out
in
out
cli
int3
out
lret
hlt
jecxz
test
cmp
decb
stc
in
out
in
into
xor
lret
ljmp
out
cmc
test
fisttpll
test
fsubrp
out
out
ljmp
stc
cmp
fcmovnb
addl
fcmovu
testl
lock
aad
fcmovnu
not
shl
aas
and
sti
and
movl
das
lock
out
cli
lock
cmp
cmp
cmp
stc
lret
fstp
filds
into
lock
rcl
in
fcmovnu
clc
out
rcl
cmp
in
out
neg
shr
ret
fisttpll
xchg
shrl
aam
repz
icebp
aas
xor
in
hlt
rol
rolb
call
shl
xchg
jmp
out
aam
in
aad
cmp
in
cmc
shl
fcomip
jmp
lret
loope
test
ror
sarl
rcr
int3
in
fstp
mov
lret
nop
std
int3
in
sarb
iret
out
ss
int3
test
fst
aad
ret
cld
aas
fdivr
fucomp
orl
out
ss
cmp
out
aad
and
sti
test
lock
or
out
repz
cli
ss
sarb
loope
jecxz
fmulp
add
jmp
hlt
in
jecxz
rcl
lret
loope
lret
fsubr
cmp
ret
lret
fstp
in
test
loope
ljmp
aad
out
ljmp
fidivrs
cmp
test
test
shl
aad
in
sarl
into
stc
int3
out
cmp
xchg
fcomi
iret
in
fucomip
test
xchg
clc
repnz
lret
lret
ljmp
fcom
sti
lret
cld
cld
out
in
fstl
ljmp
sti
sar
int
ret
stc
clc
aad
repnz
ret
leave
in
lock
mov
xchg
xlat
out
lret
cmp
imul
fucomp
aas
out
int3
repnz
xlat
aas
imul
repz
faddl
sti
iret
loop
mov
cmp
repnz
mov
mov
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
pushf
add
aam
push
jle
add
xor
jmp
adc
repz
out
out
clc
jecxz
dec
fsubrp
mul
stc
out
in
out
lock
cmp
iret
clc
out
rcr
icebp
repnz
clc
sti
decl
mov
xor
fdivr
sar
cmp
cli
ffreep
fucom
cmp
fildl
xchg
xchg
rorb
int
stc
cmp
out
leave
lret
ss
aas
xchg
jecxz
mov
fiadds
cs
cmp
ljmp
cmp
loop
jmp
lea
out
in
test
fdiv
out
cli
loopne
test
cld
incb
out
out
into
rcl
aad
call
ljmp
call
jecxz
mov
xchg
aaa
ljmp
iret
leave
xor
iret
inc
aam
xlat
mov
std
lock
loop
xor
cmp
lret
cmp
ds
lock
out
fildl
cmc
test
icebp
ror
hlt
ret
icebp
out
mov
aam
jmp
clc
fbstp
xor
rcl
fdiv
jmp
iret
nop
mov
fsub
xor
enter
in
cmc
std
add
vpavgb
sub
test
int
hlt
sar
out
jecxz
aaa
in
cmp
in
shr
fucom
lret
in
movl
ret
aaa
aaa
aaa
jmp
ss
out
fiadds
fdivr
fcmovu
xchg
xor
lock
in
enter
icebp
into
fcom
sti
cli
fld
out
addb
nop
not
loope
test
jmp
cmp
ds
out
mov
out
enter
lret
lret
rcr
test
fdivr
fcmovu
in
cmp
hlt
icebp
lock
out
xchg
loop
jmp
in
cld
cld
lret
clc
jmp
clc
hlt
out
aam
ret
ds
rol
sbb
fucomp
cli
repz
into
filds
hlt
repz
loopne
test
loope
hlt
cli
in
aad
in
lret
jmp
in
nop
in
loope
ret
stc
repnz
jmp
cmp
icebp
fsubp
out
loopne
in
jecxz
call
das
jmp
divl
cmp
out
fdivrl
in
out
repz
cld
int3
loop
iret
repz
xchg
sub
std
aaa
fmul
repz
imul
jecxz
testb
mov
xchg
mov
out
hlt
clc
stc
ret
hlt
stc
lret
cmp
std
lock
add
out
int
into
fsts
lret
out
iret
in
int3
cmp
aas
xlat
fcmovnbe
std
shl
xlat
incb
out
xchg
out
in
jmp
out
cmp
repz
into
adc
out
fcmovnu
test
mov
fmul
into
leave
loope
sub
cmp
fsubr
out
inc
stc
hlt
sti
iret
and
mov
ret
shr
call
ret
ret
sti
xor
ljmp
mov
hlt
into
leave
xor
jecxz
aad
in
cld
call
clc
xchg
sti
call
xor
cmc
cmc
fdivp
jmp
xor
addl
frstpm(287
mov
out
rorb
lret
lret
leave
fdivp
aas
shr
xor
out
hlt
xor
fscale
jecxz
clc
mov
loop
mov
ljmp
rcl
cmp
push
lock
mov
mov
aad
sub
enter
xlat
jmp
icebp
sarl
cli
vpxor
repnz
out
lds
test
rcl
icebp
clc
iret
xor
filds
decb
add
mov
in
stc
out
ror
sar
cld
xor
fcom
cmp
std
fdivrp
imul
mov
stc
ljmp
in
cmp
div
cmc
shr
cmp
std
roll
std
mov
fmulp
xchg
xchg
out
mov
xor
xor
pop
mov
jmp
aam
fadd
fstp
pusha
shl
imul
mov
add
aaa
enter
jmp
in
into
test
bnd
call
fucom
in
loope
jmp
xor
test
lret
std
std
sti
fsubr
lock
fst
enter
sti
in
std
xchg
lds
shl
in
stc
in
roll
out
roll
in
test
and
xchg
fnstenv
out
cmp
fnsave
jmp
push
aam
sar
std
fdiv
ret
stc
jmp
fcomip
shl
xchg
out
int
cmp
xlat
xor
cmp
cmp
xor
enter
cld
les
call
stc
divl
aam
test
fadds
fisttpll
in
adcb
sarb
shr
fsubr
fdivrs
sti
int
test
movb
sti
in
cld
fldl
aad
fucompp
cmp
jmp
out
adc
lock
test
in
clc
mov
jecxz
inc
hlt
test
clc
leave
out
rcl
fmulp
into
cmp
fcmovbe
fdivrp
call
cmp
mov
lock
into
out
shl
cmp
loopne
out
loopne
ffreep
call
sbb
xchg
rol
iret
aam
aaa
cli
aam
repz
repnz
ret
cmp
in
sti
out
xchg
in
int
faddp
rol
clc
fst
fcmovu
cld
cmp
fadd
enter
mov
shl
loop
das
cs
repnz
cs
fdiv
icebp
out
shl
fsub
loop
fincstp
std
fadd
cmp
mov
hlt
aad
shr
cmp
ds
fdivl
ret
out
jecxz
stc
loopne
cli
test
icebp
mov
out
jecxz
out
lret
enter
fidivrl
lret
icebp
aam
fcomi
sbb
out
out
in
loop
lret
int3
iret
loop
into
cmp
stc
fucom
into
loopne
test
enter
out
mov
xor
stc
iret
cmp
aas
cmp
fstp
incl
lret
int
into
mov
mov
cs
ljmp
cmp
in
jecxz
fucomip
stc
in
mov
leave
xor
clc
in
ljmp
in
fidivrl
shr
ret
testb
mov
cs
in
lock
out
fdivrp
shl
in
aam
jmp
in
in
test
out
xchg
aas
sub
cmc
xor
cmp
shr
stc
mov
jmp
lret
shr
call
neg
enter
jmp
int
in
mov
ret
call
mov
call
shl
cmp
xlat
idiv
cmp
rol
xchg
jecxz
in
lret
mov
xchg
sub
ret
in
fdivrp
icebp
cli
int
aas
ffreep
test
mov
jmp
out
test
call
fidivrs
cmp
fidivl
in
icebp
fcomip
mul
out
fucomp
ljmp
fdiv
ret
xor
in
repnz
loope
mov
xchg
cld
or
cs
cmc
out
cmp
cmp
int
iret
cmp
fdivr
cmc
jmp
test
jmp
iret
nop
mov
fcomp
int3
cmp
test
rolb
test
out
out
mov
repz
mov
call
fcmovne
jecxz
ret
call
int3
fcmovne
mov
xchg
aam
jecxz
xor
cmp
hlt
int3
shr
loope
test
stc
idiv
xor
xchg
out
out
fcmovb
jecxz
das
icebp
std
cmp
aas
cmp
adc
testb
call
test
repz
enter
ljmp
xchg
sti
fsubr
mov
xchg
xchg
leave
lock
aaa
ds
cmp
clc
icebp
hlt
sti
jmp
lret
out
nop
mov
call
cmp
ret
test
sar
loop
mov
into
mov
fisttpll
call
mov
xor
jmp
fcomp
fistps
je
jp
icebp
fs
jle
add
call
idivl
aas
out
hlt
fsub
xchg
neg
loop
fst
fists
rol
out
hlt
xlat
xor
in
ror
fstp
xchg
sti
in
std
test
xchg
mov
int
ss
lock
cmc
ret
jmp
in
leave
in
test
cmc
lea
shl
not
fcom
int
fabs
out
cmp
cli
xchg
clc
xchg
xchg
in
shl
in
cmc
stc
out
cmp
lret
in
fsqrt
jmp
flds
out
xchg
fimuls
int
xor
les
imul
ret
ret
loope
fucompp
out
std
inc
repnz
and
rcr
cs
fprem1
repnz
adc
clc
cmp
loope
mov
fdivrp
loop
rolb
sarl
xor
xor
into
les
xchg
loop
cmc
leave
out
loopne
int
out
xchg
xchg
in
xor
shr
cmp
cmp
fucom
cmp
sti
leave
addl
into
int3
cmp
int3
lret
cmp
aaa
jmp
cld
cld
mov
loope
in
icebp
test
lret
loope
xor
int
ror
into
sarb
repnz
testl
dec
int3
xor
xor
fdivrl
std
std
rcr
cld
ret
nop
fdivrp
addl
fidivrl
cmp
in
std
fdivrl
std
mov
cld
movb
out
in
out
ss
idivb
call
icebp
iret
sti
addl
fsubp
fimuls
ret
jmp
leave
out
ljmp
ljmp
test
nop
ljmp
xor
cmp
cmp
cmp
mov
xlat
jecxz
fsubp
out
fcomip
fsub
jmp
rcr
cmp
or
clc
fiaddl
nop
test
out
rorb
vpsubd
out
shl
repz
fld
ds
rorl
mov
mov
jmp
rcl
cmp
xlat
sti
fld
test
int3
xchg
cld
out
sti
int3
xchg
std
xchg
xor
int3
sub
fptan
test
int3
test
lock
faddl
out
leave
xchg
mov
aad
hlt
aaa
in
fmul
cmp
lock
cmp
or
lret
cli
in
sub
in
cmc
in
leave
repnz
stc
out
fcomi
loop
test
ret
rolb
in
roll
fsincos
in
aaa
idiv
aam
sti
shl
sarb
ret
orl
mov
lret
lock
xlat
aam
enter
xlat
stc
std
fcmovu
loope
fcmovnb
aad
test
fiadds
into
clc
loopne
xor
out
stc
out
cmp
shr
repz
out
jecxz
not
test
loopne
enter
mov
jmp
test
loop
rol
in
call
mov
xchg
ljmp
call
neg
repnz
aas
xor
test
mov
repnz
mov
into
lret
fadd
call
lock
loop
in
in
mov
int
in
fstp
test
ljmp
aad
fidivs
cli
fcmovnb
xchg
repz
fcmovb
iret
loop
mov
fstl
rcr
xlat
jmp
div
cmc
fldl
test
mov
cmp
in
out
iret
into
xor
jmp
xor
repz
aad
ds
xlat
in
in
lock
fsubrp
out
xor
aad
sarb
out
cmp
out
aam
hlt
shl
stc
fcmovnu
call
sub
icebp
loope
into
sarb
xlat
int3
loope
fcmovnbe
fucom
add
mov
aad
mov
repnz
out
call
cmp
hlt
cmp
cli
aas
out
cmp
iret
and
lock
repnz
fnstsw
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
orl
jle
aas
add
cmp
ret
aam
xor
lret
addl
cs
lret
cmp
loope
sub
filds
lret
cmp
dec
hlt
in
jmp
in
cmp
hlt
repnz
fsubp
fiadds
addl
jmp
fdivr
cmp
jmp
test
filds
lock
in
sbb
out
jmp
enter
cli
sbb
repz
addb
sti
iret
in
mov
out
int
loopne
cmp
aas
cmp
lret
lds
mov
cmp
icebp
cmp
flds
sti
idiv
cli
call
loopne
int3
in
in
in
int3
lret
sub
cmp
in
flds
hlt
xor
in
or
int
addb
fcmovbe
icebp
repnz
sbb
ret
leave
out
out
leave
clc
enter
loopne
int3
hlt
aam
xlat
lret
cmc
cli
jmp
cmp
adc
loopne
in
xchg
in
mov
enter
out
lret
in
ds
adc
sarb
in
jmp
in
mov
jmp
loop
xor
rcl
cmc
std
jmp
dec
out
fsubr
ss
enter
aad
fcmovu
ret
hlt
xchg
jecxz
rol
aam
rcr
jmp
out
aam
in
shl
cmc
call
mov
xor
aad
das
jmp
out
into
sti
aam
aad
roll
fcom
loope
ret
xchg
jmp
loope
mov
xor
icebp
sarb
out
fdivp
rcr
cmp
faddl
ds
std
iret
test
int3
not
jmp
cmp
repz
loopne
testl
addl
rol
enter
imul
not
xlat
into
fdivr
jecxz
clc
xchg
std
ret
xchg
jecxz
jecxz
jecxz
fdivr
in
in
int
int3
ds
fdiv
test
roll
fucom
loopne
test
into
clc
xor
jecxz
std
call
sbb
in
loope
loopne
fcmovne
sti
mov
loopne
cmc
int3
ror
int3
out
cmp
ljmp
out
shl
loope
ret
fcmovne
cmp
iret
adcl
lock
repz
orb
loop
ret
cli
xchg
xchg
xchg
out
in
fcom
shl
cmp
in
cmp
clc
ret
fcmovnb
xchg
ret
cmc
fstp
xlat
fcmove
icebp
mov
loopne
sub
lock
sti
fcom
out
rol
ljmp
leave
orl
hlt
fst
ss
cmp
jecxz
fcmovnbe
in
xchg
fcmovnu
xchg
mov
in
int
aam
in
lret
call
xor
std
shl
aad
cmp
lock
jmp
aad
aad
jmp
clc
cmp
aam
repz
cli
sti
in
mov
test
sar
out
xor
ss
repz
ljmp
adc
and
ljmp
leave
aam
in
in
not
aam
stc
sbb
cmp
cld
sti
lret
in
call
loop
cmp
fnop
rcl
sti
lock
xor
addb
lret
test
ss
leave
cli
int
fcomi
div
sbb
out
cmp
mov
in
fisttpl
ficoms
cmp
cld
ds
pushl
fstpt
mov
in
addb
lret
rcr
loop
in
repnz
fcmovu
hlt
ss
in
cmp
loopne
test
in
fldl
loope
in
cld
call
int3
cmp
fadd
addl
ljmp
adc
out
in
xor
fcomip
icebp
adc
addl
lret
std
addb
call
leave
call
pop
add
add
rol
aad
pop
pop
movsb
or
jnp
jle
add
fldpi
int
out
fildl
and
out
mov
aam
hlt
repz
ds
cmc
cmp
vpsrlw
enter
jecxz
in
ljmp
int
clc
cmp
xlat
loope
in
aas
in
sarb
repz
mov
xchg
adcl
sar
in
cmp
loope
cmp
iret
ret
faddl
lret
repnz
loope
dec
enter
xor
fst
sti
fsubr
into
sti
fcmovbe
cmp
stc
ljmp
aaa
stc
loope
fdivr
ss
enter
div
fidivrs
fdivrp
fxtract
xchg
sbb
xchg
loop
call
lret
rcr
int3
cmp
incb
fiaddl
int
sub
shl
xor
lock
aam
jmp
lock
ret
sar
jmp
test
loopne
jmp
xchg
jmp
call
fcmovnu
into
cmp
out
push
out
test
mov
xchg
xor
fstpt
in
jmp
in
aad
std
jmp
clc
fucomp
addb
enter
enter
rcr
shl
sti
ret
in
inc
ljmp
hlt
in
out
hlt
divb
stc
shll
idivl
loop
int
aad
xchg
test
cmc
ljmp
sar
xchg
div
lret
cmp
idivb
repnz
sar
loop
cmp
movl
jmp
icebp
icebp
shr
aaa
ss
cmp
cli
divl
jmp
hlt
testl
adc
xchg
out
fdivr
jmp
ljmp
jecxz
mov
xlat
sti
fmul
rorb
hlt
xor
ror
int
sti
cmp
fildl
in
cmp
out
or
out
cmc
rcr
in
test
icebp
loope
aad
mov
call
test
loope
loop
out
lret
cmp
cs
ds
fnstsw
loopne
icebp
sub
ljmp
xchg
xchg
sub
aaa
fdivp
sti
cmp
stc
fmull
xor
icebp
std
xchg
mov
neg
repz
xor
hlt
jmp
rcr
roll
in
int3
cli
xchg
mov
cmc
loope
in
cld
cmp
jmp
incb
rol
jmp
xchg
std
shl
bnd
sub
iret
lock
mul
addl
in
decb
into
xor
int3
loopne
xor
rol
cld
out
test
loope
lret
mov
sti
xchg
lock
in
ss
neg
shr
neg
hlt
ret
inc
xchg
into
ret
mov
out
out
div
lret
lret
aaa
repnz
sarl
fsubr
stc
loopne
test
loop
ror
loope
loop
xor
repz
ds
cmp
fcmovbe
ret
test
fcmovu
nop
loope
repnz
xchg
bnd
cmp
div
aad
cmp
in
icebp
leave
sti
mov
mov
jmp
out
jmp
dec
loopne
stc
in
xor
std
out
ret
in
out
sti
xchg
iret
int
aad
fdiv
out
repnz
aam
cmp
shl
shl
fdivrp
call
stc
fsub
inc
jmp
ret
int3
ljmp
aaa
shl
jmp
call
int
in
ljmp
cmp
aas
fldl
std
enter
mov
xchg
aad
fstpt
in
jmp
test
cld
shl
jmp
fldlg2
jecxz
xchg
call
ss
cmp
rcr
fbstp
cmpl
mov
enter
lret
loope
repnz
out
xlat
loop
ss
icebp
ljmp
rcr
add
ret
stc
into
sti
in
into
and
hlt
shl
int
into
dec
enter
inc
or
add
add
ret
into
sarl
rol
rcl
ja
cs
rorl
jg
aas
add
out
repnz
rcr
fdivp
leave
les
ror
hlt
in
out
in
call
int
icebp
flds
loop
decb
testl
into
int3
icebp
cmp
enter
xor
cmc
repnz
jmp
ret
fcmovnb
sti
fdivrp
mov
int
jmp
ror
std
ror
repz
iret
fcom
rcl
addl
orl
ret
cmp
call
iret
hlt
ds
xchg
mov
jmp
mov
fildl
jmp
les
rcl
int
cmc
call
cmc
imul
lret
cmp
in
inc
icebp
iret
in
idiv
into
cmp
rcl
icebp
stc
icebp
mov
in
repnz
not
xlat
rcl
aam
das
out
into
int
ds
mov
clc
jmp
iret
out
jmp
loope
shr
sti
aaa
lock
hlt
loope
ret
out
out
leave
xchg
in
hlt
repz
std
ror
cmp
rcr
in
cli
xor
enter
xlat
cli
out
loop
icebp
loop
clc
lock
cld
cmp
cmp
sti
in
repz
fcomp
mov
out
adc
aad
xlat
sar
lret
fmulp
xor
sub
test
or
loopne
mov
int
xor
int
xor
dec
lret
out
fmull
in
aas
jmp
aaa
or
fadd
test
loop
lret
iret
stc
in
xchg
xchg
loope
cmc
xor
out
clc
out
cli
jmp
fcomi
loop
out
div
ds
and
int3
lret
call
jmp
lret
out
int3
cmp
cmp
les
int3
fadd
int
ror
int
loopne
jmp
out
cmp
in
sarb
xchg
test
clc
aam
int3
leave
lret
mov
cld
loopne
inc
in
fdivr
idivb
stc
shr
std
aam
fucom
in
ljmp
jecxz
lret
xor
ljmp
xorl
imul
out
cmp
lds
int3
in
xor
out
ss
int3
xor
rorb
cld
rorl
lock
aad
sti
xor
repz
mov
aad
xlat
loopne
testl
ljmp
leave
ds
shl
mov
and
jmp
fdivs
lret
rcl
cmp
add
icebp
cmp
test
loopne
xchg
lock
faddl
clc
cmp
fsubr
into
and
fdivrs
loop
sti
test
clc
out
xchg
out
cmc
fcmovb
xor
jmp
cmp
xlat
aad
repnz
filds
icebp
ss
cmp
cmc
std
not
fst
cmp
out
cli
stc
out
mov
cli
mov
stc
cld
fmul
ljmp
fdiv
xlat
cmp
std
mov
fucom
xchg
xchg
in
int3
bnd
cmc
aaa
cmp
cmc
out
lock
loope
aas
xchg
sbb
mov
out
xchg
xchg
repnz
lret
cld
fidivrs
cli
repnz
cmp
test
push
cs
bnd
not
icebp
test
fdiv
addb
jmp
call
ss
cmp
cmp
ret
flds
jmp
fimuls
repnz
xlat
cmp
out
fcmovnu
mul
lock
cli
icebp
enter
xor
jmp
test
ror
ljmp
fsubrp
cmp
sti
std
addl
in
mov
jmp
xor
std
into
jmp
ret
out
leave
out
lret
addb
xor
out
mov
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
lahf
bound
jecxz
add
aas
add
idiv
xor
mov
jmp
out
fucomp
jmp
rcr
clc
aaa
icebp
sar
lock
ret
cld
ljmp
dec
call
cmc
repz
lret
cmp
xor
loop
fsub
xchg
mov
ror
fsubrp
test
lret
in
int
sub
leave
icebp
std
int
int
fcomi
std
add
incb
std
test
into
mov
jmp
call
leave
leave
xor
ror
shr
shl
test
xchg
jmp
cld
loopne
jecxz
shl
lret
aad
cld
lret
fcmovbe
jmp
cmp
cli
cmp
mov
fcmovb
ljmp
xor
out
enter
repz
cmp
fdiv
aam
fcmove
cld
testl
xlat
stc
aam
fucomip
jmp
ror
xor
xlat
std
xlat
mov
icebp
jecxz
mov
cmc
int
in
aaa
out
cmp
fdivp
ds
in
and
cmp
mov
incb
out
neg
ss
stc
aas
fmul
repnz
iret
loopne
inc
stc
loope
and
xchg
xchg
mov
loopne
xor
aaa
lock
xor
cmp
xlat
idiv
in
in
clc
in
call
out
leave
cmp
idivb
ret
call
call
cmc
repnz
ret
shll
in
sti
fcomp
ret
hlt
ret
addb
in
call
call
into
rol
fiaddl
out
ret
ret
out
fsubr
jecxz
fcomip
call
icebp
fucomi
std
in
icebp
hlt
cmp
in
in
lret
lock
xchg
lea
repz
das
cli
out
cld
cmp
mov
in
iret
test
loopne
not
jmp
xor
out
rcr
neg
shll
in
cmp
jecxz
call
mov
call
ret
hlt
int
aaa
cld
cld
test
repnz
aad
mov
addb
fdivs
cmp
ror
cmp
cmp
ret
lock
in
fimuls
iret
loope
repnz
into
int
fld
sarl
cmc
sub
clc
cli
shr
sbb
div
out
jmp
fucom
in
xchg
iret
rol
sub
ss
repnz
cld
fmulp
ret
clc
aas
jecxz
decl
leave
stc
aam
aaa
clc
sti
xlat
sarl
iret
out
ror
cli
cmpb
lds
nop
jmp
xchg
aad
xor
sarl
sarb
hlt
cmp
aad
fld
loopne
in
stc
ljmp
out
cs
aas
shl
cli
cld
test
out
loopne
loopne
jecxz
cld
jmp
xor
in
in
ss
cli
cmp
clc
loop
fadd
testb
idiv
repnz
ror
int3
icebp
shl
in
into
out
repz
int3
into
cmp
ffreep
fcomi
testl
imul
int3
xor
call
hlt
adc
loope
loop
in
lret
adcb
clc
call
in
std
cmc
out
cmp
repnz
rcr
loop
lock
icebp
jecxz
lret
aad
cli
in
fprem1
into
in
lock
in
not
fcmovnu
in
test
mov
xchg
xchg
int3
ret
in
jmp
idiv
lock
repz
mov
ljmp
lret
cmc
fucomi
stc
jmp
test
in
in
std
filds
rorl
cli
cmp
sti
in
cmc
xlat
into
adc
out
fucomip
mov
sbb
out
int3
fucomip
xchg
jecxz
int3
icebp
vpsubusw
lret
xor
shl
clc
cmc
test
cli
test
aam
lret
int
enter
or
int
lret
shl
jmp
cmp
hlt
cmc
out
lret
fucom
mov
ss
out
clc
rorb
test
sub
add
add
add
into
aam
aad
fst
stc
hlt
stos
xchg
mov
or
aas
add
fmul
repnz
cmp
stc
xchg
dec
in
out
jmp
in
xor
xor
stc
call
and
repz
flds
ljmp
cmc
lock
jmp
fdivp
repnz
fsub
test
orl
lock
repz
call
into
xor
in
ds
fcmovnb
loope
loope
ds
loop
lret
orb
shl
std
xlat
ror
xor
incl
ds
mov
enter
xchg
loop
loope
out
repz
cmp
iret
cmp
iret
out
shl
mov
aam
ljmp
lock
aaa
xlat
int3
out
jmp
out
cmp
rcr
cmp
in
xor
jmp
loop
nop
into
out
ljmp
cmp
rcl
cmc
fxch
loope
hlt
ret
and
cmp
testl
call
fdivrl
shl
test
lret
jmp
in
loope
cmc
iret
out
call
ss
cli
add
loope
sti
ret
orb
jmp
call
cmc
xor
into
cld
loope
cmp
icebp
std
test
or
fldl
lret
sti
out
sar
ror
ret
mov
lret
test
xchg
jecxz
test
xor
xor
fucomp
aaa
cmp
rol
test
movl
das
iret
out
cmp
out
cld
rcr
lret
ds
mov
lret
out
int
call
jmp
divl
cmp
rcl
shl
hlt
jmp
jecxz
fsubr
and
shr
int3
xchg
xchg
roll
xor
into
cmp
loope
aam
ds
shl
mov
ftst
mov
in
xchg
xchg
mov
ror
xor
repnz
sar
out
std
rol
decl
mov
jmp
sar
fidivl
fstpt
enter
repz
cmp
test
int3
ror
lret
sti
into
fdivrl
sti
repnz
add
mov
rcl
ret
stc
out
ret
jmp
aad
cli
ss
out
jmp
lea
repnz
ss
xor
aad
les
jecxz
clc
fsub
xlat
orb
cmp
xor
in
lret
out
int
fsubrp
iret
ss
xchg
out
xchg
in
idiv
jmp
jmp
fisttpll
cmp
idivl
repnz
xlat
sti
jecxz
rolb
loopne
out
aam
loopne
out
out
in
jmp
fmul
jecxz
not
ror
out
testl
int
enter
repz
jmp
fiaddl
aam
rol
mov
faddl
xchg
iret
aam
hlt
in
in
out
fdivrl
sarb
mul
cli
sti
xor
std
stc
in
mov
xchg
and
lret
lret
jmp
aas
ret
fiaddl
sti
ror
lock
incb
in
aam
fcomp
adc
in
test
mov
out
ficoms
out
ss
rcl
out
aas
aad
addb
aad
fmul
xchg
xchg
in
out
in
repnz
repnz
xor
aam
repnz
out
test
mov
out
imul
iret
cmp
ss
loop
jecxz
into
clc
inc
add
cld
ljmp
out
rcl
lret
fincstp
rcr
aaa
rolb
mov
xchg
std
out
out
in
aad
fcmovnu
int3
jmp
aam
xchg
rol
stc
cli
cld
ljmp
shll
aaa
fsubr
ljmp
repz
movl
lock
cmp
lock
icebp
decl
adc
pop
add
add
rol
aad
fstp
movsb
ficomps
mov
aas
add
idivb
clc
jecxz
out
lret
fisttpl
out
xchg
xchg
xor
xor
cmp
not
cmp
in
loopne
loopne
lret
icebp
decl
fadd
in
mov
out
xor
stc
cmc
addb
test
clc
jmp
in
lret
out
enter
sti
clc
ss
jmp
ret
adc
neg
xlat
int3
loope
sub
rorb
ftst
ss
jmp
int
cmp
repz
rorl
ljmp
xchg
icebp
iret
cli
call
sbb
aad
out
loop
adc
loopne
cmp
call
loope
xor
leave
not
rcr
cmp
loopne
ret
cmp
fucomp
in
fimull
adcb
not
repz
int
aam
cld
fsub
shl
aad
lret
out
mov
fsubr
int3
icebp
repnz
rcr
aaa
xor
fxch
cmp
rolb
test
sti
fabs
into
xchg
sub
clc
int3
repnz
cmpl
xor
in
cmp
test
iret
xchg
in
in
leave
cmc
jmp
fdiv
cli
loopne
ret
sbb
cld
lret
stc
in
mov
iret
hlt
into
into
ss
imul
cmp
fdiv
loop,pt
shl
xor
mul
loopne
call
aad
or
icebp
shl
in
in
out
into
in
in
call
test
into
cmp
sar
shl
icebp
fsub
les
iret
fdiv
shl
ret
cmp
cmp
cmc
rolb
sti
into
test
xchg
jmp
out
repnz
shl
cmc
jmp
lret
cli
push
int
xor
cmp
testb
stc
xchg
icebp
out
nop
ss
fsub
fxch
int3
hlt
lock
aas
fnsave
in
test
rolb
into
leave
lret
out
icebp
xchg
aaa
hlt
repz
aaa
fst
cmp
jecxz
aam
leave
aad
out
into
jmp
hlt
xchg
int
fadd
xlat
cli
jmp
in
test
xor
cld
ret
out
mov
mov
decl
cmc
repz
out
into
std
not
fiadds
mov
mov
addb
mov
cmp
cmp
int3
out
fxtract
mov
fsub
test
xchg
out
xchg
ljmp
fdivr
shl
fcmovnbe
cmp
icebp
rcr
cld
ds
in
sti
iret
lea
cmp
call
cli
lret
hlt
xor
clc
clc
fmulp
loope
std
mov
mov
lret
repnz
repz
repz
std
rcl
rcr
fnclex
in
neg
aad
lret
mov
xchg
out
or
lret
lds
div
cmc
sub
aam
cmp
in
xlat
jmp
out
jmp
out
fmul
cmp
in
xor
std
loope
cmp
hlt
jmp
mov
enter
xor
xor
icebp
clc
cli
rcl
clc
aam
cld
fmul
jecxz
jmp
or
xorl
call
enter
in
fsubr
lock
loopne
cld
loopne,pt
lret
mov
mov
in
in
ror
fucomp
loopne
cli
fdivp
cmp
fcmove
mov
loop
xchg
lea
in
mov
loope
clc
lock
not
add
and
xor
mov
xor
out
jmp
fdivr
loopne
out
fdecstp
aad
cmc
fneni(8087
jmp
call
mov
aam
cmp
in
cmp
lret
fcmovbe
loopne
into
faddp
cld
call
mov
enter
out
xor
xor
fcmovnu
repnz
loopne
addb
aas
jmp
sti
fsubp
mov
repz
das
xor
clc
ljmp
in
lock
roll
out
fcomp
fsubr
xchg
out
call
int3
cmp
xor
aad
xorb
jmp
ret
lret
enter
int
cltd
movsb
imul
and
adc
aas
add
repnz
hlt
cmc
cmp
lret
mov
das
xor
sarb
into
call
in
fadd
repz
in
les
out
jecxz
hlt
neg
test
fcmovb
std
cmp
enter
aam
in
jmp
out
out
fsubr
icebp
mov
call
fsincos
out
fcmovnbe
in
cmp
into
clc
out
mov
ret
out
sbb
xchg
icebp
in
in
sar
cld
lret
xlat
xor
jmp
aad
loope
cmc
xchg
loopne
std
int3
cli
in
int
xchg
icebp
xchg
out
out
repnz
iret
neg
ror
cmpb
cmc
cmpl
xchg
lret
loop
fsubr
loop
enter
mov
hlt
aaa
ret
jmp
cmp
stc
div
rol
bnd
xlat
fprem1
std
dec
test
hlt
iret
loopne
loope
aam
int3
fmul
cmc
sti
shl
sar
rol
repnz
in
leave
into
fisttps
cli
xor
int
in
call
repnz
rcl
lret
aas
xchg
jecxz
xchg
loop
loopne
ret
ret
shl
iret
fadd
repnz
ffreep
ret
test
cmpb
fildl
out
dec
call
lock
call
cmp
cli
out
out
sti
int
test
mov
aam
call
cmp
jmp
sti
call
jmp
ljmp
loopne
aaa
into
leave
cmc
xlat
xor
out
in
in
cmp
loop
rcr
out
out
fldpi
test
in
iret
shl
aad
sub
lock
fst
std
clc
sti
mov
cld
leave
fadd
in
hlt
hlt
xchg
int3
call
lret
rcl
cmp
std
iret
loopne
div
jecxz
lret
fucomi
in
ljmp
out
iret
call
lret
roll
fcmovnb
xchg
loop
xchg
mov
xor
loope
repz
aam
lret
cli
clc
xchg
xchg
mov
mov
fninit
int3
xchg
loop
icebp
xor
ss
xor
or
loopne
rcl
repz
cmp
in
lret
lret
mov
in
rcl
aas
stc
in
shr
lret
fdivp
loope
cld
repnz
cli
lock
sub
call
leave
loope
cmp
xlat
int3
aam
iret
in
fstpt
lea
sar
xchg
jmp
in
hlt
int
std
fnstsw
cmp
out
loope
int3
dec
aam
aad
idiv
push
jmp
shlb
xor
into
ss
repz
test
xchg
loopne
mov
rcl
clc
out
cmc
ljmp
cli
rcr
iret
xlat
iret
loope
leave
test
lret
loop
fucomi
sti
lret
cld
lret
xchg
sub
repz
cmp
testb
mov
mov
jecxz
into
mov
icebp
out
cmp
test
ror
fst
ret
addb
out
jmp
ljmp
leave
out
fmul
ss
clc
hlt
hlt
ds
rolb
stc
cld
xchg
lret
fldl2t
jmp
in
lock
fdivrs
ret
cmc
hlt
iret
rcr
sti
xchg
test
std
cld
lret
xor
jmp
neg
clc
div
bnd
cmp
mov
cld
cli
in
out
into
into
into
fucom
in
lock
icebp
stc
int
hlt
clc
lock
cld
ds
xchg
in
into
testl
in
cli
icebp
in
rcl
rol
fnstsw
ret
mov
std
lret
jmp
in
leave
std
fimuls
icebp
les
test
xor
push
cmp
shl
fdiv
repz
orl
call
in
out
jmp
jmp
and
inc
aad
testb
adcb
in
out
lock
fxch
aam
int
roll
out
mov
std
test
into
in
hlt
shr
out
in
cmp
lock
xchg
jmp
fsub
orl
cmc
ljmp
add
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
shl
aad
enter
fcmove
jmp
into
call
hlt
int3
cmp
into
jmp
shl
addl
mov
mov
jmp
into
mul
xor
leave
cld
cmp
cmp
fmul
jmp
mov
ljmp
dec
rcl
not
out
cld
xchg
leave
aas
jmp
mov
sti
xchg
xchg
xor
lock
xor
fxch
jmp
shr
cmc
cld
cmp
xlat
ljmp
fmull
into
icebp
clc
in
iret
xor
sbb
cmc
loope
test
jecxz
fucom
xchg
xchg
lds
aad
jecxz
cmp
in
fcmovnb
div
cld
shl
fsub
sbb
ret
test
out
ljmp
xor
call
fmul
into
sbb
fadd
aad
rorl
out
int
out
mov
xor
cmp
loope,pt
cld
fdiv
into
ret
fmulp
mov
int3
xchg
xchg
in
addb
fldl2e
cmp
repz
testl
in
repz
shl
stc
xor
fnstcw
iret
icebp
stc
shl
and
out
fsubrp
xchg
shr
in
hlt
into
hlt
in
lret
loopne
lret
fcmovnu
hlt
out
sbb
cld
sti
out
lret
repz
inc
ss
xor
out
or
out
std
std
loop
cli
cli
leave
test
fdivr
xchg
ljmp
vaddsubps
cmp
loop
hlt
out
hlt
xlat
int3
test
test
xchg
clc
loop
fidivrl
cld
rcl
int
frndint
adc
loope
loop
aad
jecxz
lock
jmp
in
repz
ljmp
loop
loop
neg
cmc
imul
cld
cmc
mov
mov
xlat
shll
shr
xor
lret
addb
fimull
out
fucomi
test
repnz
xor
lock
std
fdiv
ret
out
clc
cld
out
in
in
fmulp
mul
jecxz
shl
in
cmp
adc
adc
xlat
fadds
sar
sub
imul
ror
fnop
enter
cli
cmc
int3
aas
repnz
idiv
lret
addb
in
in
fmul
loope
lock
movl
ljmp
out
hlt
mov
icebp
aad
fucomi
shr
in
fdivrl
std
xlat
adc
mov
test
out
icebp
lock
leave
divb
in
lock
test
aas
loope
lret
out
mov
lret
cld
repnz
in
clc
xlat
out
lock
cmpl
jmp
addb
std
jecxz
out
ror
das
in
xor
fxch
shll
mul
lock
shl
fadd
jecxz
stc
ds
cld
out
fucomip
std
lret
mov
loopne
ror
aad
cmc
int
imul
cld
mul
iret
out
ret
in
ffree
out
fcmove
out
shl
jmp
aaa
clc
xor
xor
aam
aam
out
cmp
cli
dec
mov
test
xor
aad
rcl
fcmovbe
std
jecxz
aad
cmc
loope
and
filds
ljmp
xor
out
repz
out
aam
in
fsub
jecxz
jecxz
stc
int3
loope
icebp
and
in
fcomi
int3
fldpi
fdivl
aam
xor
stc
sti
xor
lret
ljmp
divb
out
hlt
into
xor
into
repnz
into
lock
call
orl
incb
jmp
cmp
shr
out
loop
jmp
test
call
cmp
stc
ss
lret
sbb
clc
out
clc
aam
fsubr
iret
sti
mov
call
int3
ss
aam
out
hlt
ret
fucomi
in
icebp
aam
call
in
int3
in
xchg
and
iret
loop
fsubr
hlt
fcmovne
call
sarb
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
aad
sub
sub
add
cmc
ds
in
std
fcmovne
fsub
lret
iret
xchg
in
int
in
ret
xor
xor
out
fst
in
loopne
fiadds
cld
ljmp
in
repnz
fmul
fcmovnbe
std
sar
ror
shr
fnstcw
test
aad
sub
in
loope
in
cmc
sar
in
int
icebp
enter
repnz
aas
fcomi
div
std
test
incl
repz
fidivs
rcl
hlt
int
clc
ror
into
aad
sbb
stc
mov
mov
lock
rorl
out
cmp
in
cmp
cmp
faddp
mov
hlt
ljmp
fcmovnb
ljmp
fsubr
clc
aaa
std
clc
shl
into
fcmove
addl
mov
jmp
int
mov
leave
loop
aaa
into
aam
fdivr
xor
into
out
cld
loope
ret
sub
iret
mov
aad
fadd
iret
xlat
std
repnz
fdivr
fnstsw
sbb
repnz
fdiv
lea
call
loopne
aas
rcl
xor
ljmp
cli
sti
cmp
loopne
cli
in
rcr
cld
out
rclb
enter
aam
loopne
push
dec
repz
in
fmulp
or
mov
cs
ret
xor
into
fcomi
aas
in
out
out
cmp
mov
int
stc
int
call
sub
iret
aam
fadd
test
and
cmp
lret
xchg
cli
ljmp
sar
xor
aaa
ljmp
aad
loope
addl
xor
xor
das
idiv
lret
aaa
aaa
cmp
or
fisttpl
stc
leave
loop
loopne
in
mov
sub
shr
aaa
aaa
aaa
int
std
cmp
mov
lret
mov
adcb
lret
fdivrl
out
sti
testb
in
loope
lret
out
in
aam
repnz
shlb
rcr
lock
aam
loope
ret
int3
fistpll
rorb
xchg
lock
ficoms
out
in
cmp
in
cmp
test
loopne
cld
std
repnz
xchg
mov
hlt
xor
in
jmp
cmp
loop
cld
fdivr
mov
loop
leave
lret
sub
in
cs
aad
lret
cli
clc
xlat
fcomip
cli
xchg
stc
add
or
mov
iret
jmp
das
aad
fcomi
out
cmp
hlt
out
out
mov
sub
jecxz
call
xchg
loope
das
out
in
fstp
cmp
cmc
iret
jecxz
fdivr
cmp
fsubr
xchg
loop
jmp
xchg
shr
shll
cli
aaa
in
ror
or
ffreep
testb
jmp
ret
mov
out
test
lret
fmul
sti
lock
aaa
lret
jecxz
test
std
test
fcomp
fcmovne
in
addb
sub
in
call
sarb
cld
sti
fisttpll
xchg
cmp
lret
test
fsub
rcr
xor
cmp
rol
sar
cmc
int3
jmp
movb
jmp
int3
xlat
fucom
enter
ror
cmp
std
fdivr
test
faddl
sub
xor
shl
in
in
aam
xor
roll
jmp
lock
iret
fprem
lock
cmc
leave
adc
shl
out
aam
jecxz
ret
lret
mov
xchg
fstl
in
aad
into
cmp
out
sarl
loop
hlt
aam
aas
jmp
leave
mov
cld
fiaddl
shlb
les
xlat
out
jmp
aam
iret
fdivr
cmp
in
lret
lret
leave
hlt
jmp
aaa
enter
icebp
cmp
out
fidivl
cmp
rolb
mov
sti
sbb
call
aaa
in
repnz
jmp
dec
loope,pt
hlt
fiaddl
cmp
icebp
fsubp
das
jmp
int3
xor
out
in
int
fcom
iret
adc
pop
add
add
ror
int3
aam
mov
sbb
sbb
jle
mov
test
mov
aam
out
enter
cmp
int3
out
lock
rcl
ds
test
mov
out
cld
shr
mov
call
vpsrld
cmp
jmp
out
repnz
aad
fmulp
testb
std
xor
ljmp
hlt
lock
cmp
rcr
hlt
repz
hlt
clc
in
loopne
orl
jmp
das
leave
cs
fdivrp
fcomi
cmc
xor
shl
repnz
mov
in
cli
in
xchg
ljmp
cli
xor
hlt
stc
call
sti
out
jmp
mov
mov
aam
xor
lock
cmp
xlat
ds
cmp
ret
lret
in
nop
leave
xchg
xchg
in
loopne
jmp
loope
ljmp
cmp
cmp
loope
cmp
repnz
repz
xchg
xchg
rol
cli
jmp
clc
sbb
aam
out
test
test
jmp
enter
xchg
jmp
out
cli
int3
fcmove
jmp
hlt
xorl
ffreep
test
ljmp
divl
into
aam
fdiv
int
ror
fmul
fmul
leave
fld
fld1
in
out
in
loopne
hlt
loope
call
jmp
cmp
lret
std
fadd
in
fst
rcr
test
clc
icebp
in
out
in
out
jmp
aam
imul
sarb
roll
aad
std
enter
xchg
xchg
in
repnz
icebp
ljmp
cmpl
sti
filds
pop
jmp
in
in
shl
out
repz
call
clc
fcomi
fildl
in
ljmp
test
jmp
in
loopne
cmpb
fsubp
cmc
hlt
std
test
cli
fdivr
decl
hlt
mov
shr
xor
rcl
call
stc
ror
xchg
test
mov
int
mov
xchg
lret
shll
ror
iret
stc
aas
loopne
fnstsw
roll
cld
in
rcr
icebp
sbb
xor
aaa
repnz
ss
fcmovbe
loope
roll
leave
stc
test
leave
shl
orl
std
icebp
fcmovne
shl
sar
in
movb
or
repz
fidivrl
out
or
and
idiv
loop
incb
xchg
xchg
out
test
xor
ds
aaa
roll
lock
fsubr
in
loopne
repnz
ljmp
xor
loope
cmp
rcr
loop
roll
stc
orl
into
jmp
fnstcw
into
in
in
test
clc
aad
aam
jecxz
sti
leave
clc
out
jmp
in
loop
sub
fsubr
mov
rcr
sti
fucom
repnz
stc
int3
into
in
or
mov
cmc
out
incb
xlat
hlt
cmp
test
jecxz
iret
int
xchg
int
jmp
int3
int
cmp
lret
addb
hlt
mov
lret
sti
out
in
nop
ljmp
out
int
stc
lret
sti
sbb
cli
mov
into
fildl
sub
xlat
hlt
lock
cmp
std
xchg
sar
call
out
aam
ret
enter
cld
lret
icebp
stc
sti
repnz
iret
call
out
mov
ficoml
divb
ret
out
cmp
in
repnz
decb
fst
into
mov
clc
iret
fmul
cmp
lock
loop
ret
test
cli
cmp
test
lret
into
loope
fstp
aad
enter
repnz
aam
repz
ret
aam
repz
mov
stc
cli
enter
fcmovnbe
xchg
shlb
out
leave
xor
leave
iret
cld
cmp
jmp
stc
into
in
fsubrp
leave
stc
cmc
into
loopne
xor
call
mul
cs
fucomi
out
test
in
out
rorl
in
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
sar
repnz
loopne
xchg
lret
mov
iret
xor
into
clc
repz
jmp
stc
in
int
cli
xchg
lret
clc
xlat
fucomi
cld
test
test
aam
sar
shr
icebp
lret
repnz
sar
in
jmp
loopne
fmuls
mov
sub
lret
fmul
int
int
addl
cmc
enter
fdiv
mov
mov
fdiv
out
shl
lret
aad
fcmovb
in
fistpll
faddp
mov
icebp
xchg
repz
loop
xor
repnz
cld
sti
jmp
xor
xlat
xchg
test
jmp
out
std
sti
out
in
in
aaa
xor
jecxz
cmp
rcr
ljmp
cmc
jmp
int
fists
test
stc
sti
test
ss
sti
inc
idiv
test
out
sti
out
mov
icebp
rol
iret
enter
icebp
loopne
repz
fadd
fiaddl
cld
jmp
in
cld
lret
lret
out
stc
rcl
fsub
cmp
lret
stc
rcr
enter
jmp
xchg
shrl
shrl
cmp
leave
fbstp
cmp
rcr
shl
fiaddl
ret
enter
lock
loope
xor
lret
fxch
clc
clc
rcr
in
fisttpll
in
adc
rcr
cmp
fmul
stc
int
xor
out
and
xchg
fdiv
out
out
in
call
iret
jmp
icebp
rcr
cmp
mov
fisttpll
test
shr
jecxz,pn
out
repz
cld
int
lock
cld
sti
in
loope
shr
fcmovne
jecxz
mov
test
rcl
cmc
lock
repnz
rcr
rol
div
loop
leave
cld
les
call
repz
test
rcl
ret
xchg
std
lret
and
sbb
mov
fdivs
aaa
idiv
ljmp
std
fdivr
ds
int3
fsubrp
clc
out
leave
mov
mov
ret
shl
clc
fcmovnu
jmp
xchg
icebp
loope
mov
in
std
cli
icebp
leave
icebp
iret
mov
rol
xlat
cli
sar
repz
leave
xor
ds
loop
std
lret
cld
repz
xor
ret
cmp
xor
int3
ds
cmc
sub
repz
fcmovnb
incb
xchg
xchg
repnz
out
idiv
idivl
std
cld
stc
sti
add
jmp
sbb
in
mov
enter
jmp
call
fmulp
rcl
vpsubd
lds
call
into
xlat
xlat
shr
in
cli
call
in
shl
fcomp
out
in
fneni(8087
lret
in
aam
sub
imul
rcr
lret
int
cli
cmp
in
xlat
iret
fsubrp
mov
lret
clc
lret
loope
hlt
xchg
cli
cmp
cld
hlt
enter
fdiv
in
loopne
aam
lds
repnz
rcl
repnz
cmp
out
fistpll
cmp
rcl
stc
fst
mov
xchg
lret
repz
out
cmp
xlat
int
cmp
cld
in
aam
mov
mov
in
xor
repz
lret
idivb
aaa
fcmovu
fsub
cmc
repz
mov
sti
int
jmp
jecxz
out
in
fidivl
fcom
cmc
lret
cmp
cmp
cli
cmc
cli
enter
faddl
call
xor
fcmovnu
cmpb
cld
cli
repz
sti
ffreep
test
shr
decb
cli
xor
cmp
fcom
addb
out
decb
test
in
xlat
sub
cs
idiv
repz
jmp
nop
mov
call
out
jmp
testb
aam
repz
jecxz
fadd
leave
loopne
mov
jecxz
jmp
cmp
lock
idiv
push
lock
faddp
fadds
pop
mov
mov
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
xor
jg
aas
add
cmc
jecxz
stc
sti
in
sar
roll
lret
lock
das
out
shl
in
aas
loop
rol
inc
idiv
std
incl
xchg
mov
sub
loop
mov
hlt
sub
add
out
mov
cld
jecxz
call
adc
ret
ss
in
in
sarl
int3
aam
iret
shl
mov
call
test
iret
xchg
jmp
std
lret
into
cmc
ret
fcmovbe
call
out
ret
test
ret
out
ljmp
cli
aas
ret
out
sti
jmp
lret
fldl
mov
xor
iret
repz
into
cmp
clc
in
cmc
mov
jmp
out
rorl
fcmovbe
cmp
repnz
repnz
cli
aad
fcmovu
test
out
cmp
iret
jmp
enter
xlat
cmp
loop
test
aas
iret
aam
hlt
fucompp
int3
mov
out
fisttps
jmp
cmp
leave
repnz
ret
neg
fdivr
rcl
sub
jmp
mov
in
enter
fidivl
cmp
shr
test
mov
mov
int3
fxch
fisttps
rol
xor
in
das
lret
cmp
clc
fsub
call
in
xchg
mov
jecxz
incb
lret
aam
shlb
aad
sti
jmp
clc
test
vshufps
loope
sub
cmp
lret
ljmp
rcr
cmp
aam
mov
test
cmp
xor
out
lret
cmp
int
roll
mov
fdivrp
enter
sbb
out
in
sub
cmpl
shl
test
fcmovb
orb
rorl
xor
aaa
rcl
std
sti
cli
sti
int
in
aad
test
xlat
jmp
lock
in
ss
xlat
cld
cs
aad
call
roll
xor
xchg
mov
iret
test
loope
in
out
iret
leave
fst
fcomi
int
shl
imul
sarl
ljmp
xor
in
in
fidivl
loop
aad
xchg
cld
repnz
jmp
cld
lock
fsubrp
xor
fdivs
ds
in
ror
in
aam
mov
int
fdivr
cld
mov
xchg
test
out
divb
leave
iret
test
sti
fsubr
loope
and
mov
mov
mov
orl
vpaddsw
fmul
in
jmp
in
jmp
in
mov
repz
out
call
cmc
aaa
lret
cmp
fmul
lret
aam
jecxz
decl
call
fmul
cmp
clc
rcr
shr
in
cld
repz
stc
mov
jmp
add
jmp
iret
jmp
iret
rol
jmp
xor
faddl
repz
cmp
jmp
sub
repnz
repz
fmul
int
fidivrs
ror
repz
fmuls
in
into
loope
hlt
xchg
xchg
xor
loop
repz
dec
int
cmp
fdivrs
aam
jmp
jmp
xchg
iret
mov
stc
enter
aad
fsin
in
mov
out
ljmp
out
xchg
test
shl
cmp
out
xlat
rcr
aas
cmp
xor
out
xchg
addl
ss
xor
cli
hlt
repz
fcmovnb
shr
lds
out
lock
xor
fyl2x
cmp
cmp
ret
sti
fcmovnu
mov
fadd
mov
mov
ljmp
cmp
icebp
fcmovnbe
ret
clc
test
fstp
int3
out
into
sub
addl
sarl
fsubrp
int3
sarb
fcomip
cld
addl
jmp
ror
call
shl
in
out
out
cmp
jmp
in
cmp
inc
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
out
adc
sub
aas
add
enter
fdivrp
xchg
int3
incl
loop
xor
shl
aaa
lret
loope
aas
rorl
fisttpl
in
ljmp
icebp
cld
cmc
xor
or
stc
std
vpsubsw
idiv
cli
int3
mov
out
xchg
xchg
ret
clc
into
out
not
cmp
enter
rcr
std
sar
fsub
xchg
int
nop
loope
xchg
shl
fbstp
ret
iret
cli
leave
call
sar
aas
fcmovbe
fcmovu
xchg
mov
test
int
stc
xlat
fdiv
cld
repnz
loop
adc
call
rorb
cmp
mov
jecxz
mov
xlat
repnz
aam
in
lret
std
aas
test
ljmp
subl
in
sti
fnstenv
repz
cmp
stc
lock
aad
fucom
ret
lea
fucom
xor
rcr
fxch
idivb
adc
sub
fstp
xchg
fabs
mov
mul
fsubr
and
out
hlt
int
int3
ss
cmp
shl
jecxz
ffree
repz
mov
ret
sti
mov
test
xchg
cs
in
cmp
out
ds
cmp
xor
aas
xchg
idiv
div
mov
call
in
call
ss
in
lret
hlt
cmp
sti
fdivp
hlt
loope
out
lret
jmp
out
ficoms
hlt
sarb
ljmp
incl
faddl
mov
sub
fcmovb
fmul
cmp
rcr
shl
iret
sti
sub
hlt
fucomi
iret
xchg
out
xchg
lret
cmp
call
rcl
out
lock
fsub
lret
iret
int
shr
imulb
xor
shr
in
fdivrs
cmp
cld
loopne
adc
icebp
jecxz
test
ror
leave
iret
out
in
fdiv
int
neg
out
ss
incb
stc
lret
jmp
cli
out
call
out
in
rol
ds
cmp
rcl
shl
roll
lret
fucomp
loop
test
div
ror
ss
out
sar
in
in
ret
jmp
mov
enter
shr
out
cmc
lret
into
fdiv
out
ds
ljmp
roll
jmp
jmp
icebp
jmp
shr
cmc
ss
rcl
iret
cmp
mov
lret
mov
mov
fldl
cmc
lock
out
jmp
fcom
iret
icebp
mov
lret
test
or
call
repz
xor
call
cmp
cmp
fidivrl
out
in
fcomip
in
in
test
out
sti
cmp
sarl
cli
fcmovu
cli
cmp
out
fucomp
sub
aam
out
jecxz
cli
loopne
out
loop
out
xlat
int
fucomi
idiv
cmp
xlat
test
aam
sar
mov
int3
cli
mov
cld
jmp
xlat
out
cmp
rcr
cmp
cmp
lock
mul
xchg
fildl
fucomip
cmc
not
xlat
xor
into
cmp
cmp
stc
out
xlat
cmc
mul
mov
addl
loop
mov
in
lret
clc
cmp
iret
aas
out
aas
cld
sti
out
test
fiadds
lock
into
loop
enter
xlat
in
hlt
repnz
repz
cld
ret
stc
fiaddl
or
xor
in
rcl
das
fdivrl
cmc
in
out
std
clc
ret
fstp
xchg
stc
int
call
icebp
iret
cmp
int3
rcl
sti
fnstcw
int3
roll
cld
std
fiaddl
xchg
mov
cmc
ljmp
fsubp
clc
int3
out
clc
fistpll
sar
aas
adc
lret
in
rorl
ror
xlat
cmp
aam
rcl
cmp
xchg
int3
stc
pop
out
iret
ffreep
div
jmp
fnstcw
std
ljmp
iret
sti
ret
ret
leave
fimuls
mov
mov
lock
out
jmp
aad
loopne
jecxz
loope
loopne
inc
lock
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
jmp
stc
sti
in
orl
repnz
cmp
idivb
ret
cld
cmc
rcr
sar
in
out
std
mov
fmull
fcom
stc
out
cli
cld
xlat
repz
xor
shl
neg
in
filds
test
loopne
xchg
int3
loopne
cmp
in
out
clc
int3
cmp
mul
test
enter
loopne
test
xchg
test
icebp
into
out
call
cld
ret
ds
int3
fsubp
jmp
xchg
ljmp
cmp
rol
jmp
aad
std
int3
stc
out
xchg
int
call
frndint
ljmp
sarb
clc
sti
mov
test
jecxz
rcl
shl
jecxz
jmp
rcl
lret
rcr
ret
test
fsub
fimull
mov
jmp
into
shll
cli
int
cmp
out
out
fucomi
cmpl
mov
test
nop
addl
loope
enter
lret
int3
jecxz
call
call
xchg
mov
repz
cmp
jmp
icebp
stc
ljmp
std
loopne
stc
enter
out
lock
aam
loope
cmp
into
divb
leave
adc
roll
test
xlat
fmuls
out
into
divb
out
out
jmp
out
cmp
cld
test
in
icebp
out
in
in
or
fdivs
lret
ds
shl
repz
test
lret
xchg
in
into
in
not
jmp
shl
add
shl
rol
fdiv
cld
sti
addb
addl
stc
icebp
xlat
sar
into
and
call
idiv
lock
aad
in
fidivrl
int3
fsin
sti
cmp
fxch
xor
ret
in
fmul
out
shl
xor
stc
ret
lret
fdivrs
cmp
ss
iret
cmc
faddl
xlat
jmp
rorb
cmp
out
cli
out
sar
xor
xor
cmp
neg
ds
fsubp
loop
in
fimull
jmp
cli
cmc
repz
fdivs
std
int
icebp
fadd
cmc
cmpl
test
xchg
popl
lock
cmp
int3
in
xor
leave
in
fmuls
orl
out
enter
cmpb
cmc
xlat
iret
rolb
lret
int3
mov
fcoml
xor
lock
repnz
clc
loopne
faddp
rolb
in
ffree
loopne
ret
loopne
test
ljmp
aad
repz
aam
call
jmp
loop
fucomp
ror
hlt
call
aad
hlt
aas
leave
rolb
loope
loopne
orb
test
leave
ljmp
iret
int3
ss
out
mov
fdivrp
mov
mov
xchg
sar
call
stc
xlat
in
rcl
cmc
repnz
int
ret
cli
xchg
aam
sbb
in
jecxz
int
das
int3
out
in
int3
int
std
repz
lret
int
int
jmp
ret
xlat
xor
out
aas
mul
not
loope
shl
cmc
xlat
leave
sub
decl
in
jecxz
clc
fcmovu
in
loopne
in
not
fadd
in
ds
mov
in
dec
nop
shr
out
cmp
cmc
cmp
lock
out
ss
rolb
leave
jmp
testb
rol
fnstsw
xor
divb
loop
aam
vshufpd
nop
nop
call
xlat
imulb
cmp
iret
leave
lret
fistpll
out
icebp
shl
hlt
cli
jmp
in
in
cld
mov
loope
fxch
aaa
leave
xor
aam
cmp
sbb
addb
loop
nop
out
repz
int
icebp
rcl
in
ror
fdivrp
xlat
out
addb
add
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
frstor
xor
scas
add
addb
out
aam
cmc
in
call
ljmp
ds
test
mov
div
sub
aam
sar
fcmovnu
cli
test
loope
orl
fsubr
icebp
repnz
int
ror
cmp
out
into
lock
cli
xor
call
lock
repnz
xchg
fsub
ror
cmp
cmc
int3
cli
loope
shl
clc
aas
out
loope
push
stc
mov
jmp
icebp
aam
fsubrp
fcmovne
imul
cmp
sar
aad
stc
stc
cmc
sar
cmp
in
sti
shl
loop
ret
lock
fxch
cmp
jecxz
loopne
mov
rorb
xor
repz
lock
jmp
sti
out
aad
and
stc
addb
rol
xor
fcmovnbe
fsub
cld
neg
test
xlat
jecxz,pt
cld
call
xchg
xchg
aam
clc
std
std
out
sar
cli
rol
lret
in
stc
fsubr
and
in
lock
fcomi
aad
iret
out
shr
loopne
sarb
loope
cmp
faddp
sub
lock
sub
cmp
int
fdivrp
out
testb
icebp
lock
xchg
incl
rol
out
xor
hlt
sbb
fildl
clc
leave
fucomip
ljmp
out
into
aam
xor
sti
fsubp
cmp
shl
rcr
cmc
cld
hlt
jmp
stc
sti
out
loopne
in
in
xor
xlat
xor
cld
iret
aam
fdivp
icebp
rcl
mov
jmp
aas
lret
iret
cld
int
xchg
xchg
test
xor
in
out
std
ss
hlt
loope
sti
cmp
loopne
loop
fadd
loopne
jecxz
repnz
jmp
sti
addl
repz
mov
popl
lock
cmp
cmp
rcl
aaa
cli
xlat
icebp
loopne
clc
cmc
hlt
xlat
xchg
loope
out
leave
iret
jmp
bnd
ret
fcomip
icebp
lds
loop
cli
in
mov
repz
neg
repnz
fcomp
sti
cli
add
xchg
mov
mov
std
loope
mov
in
shl
iret
ljmp
iret
in
fcmovnu
fucomi
dec
fdivrp
neg
aad
fisttps
aas
repz
lret
out
lock
stc
aad
cli
repnz
mov
mov
mov
xchg
fisttpll
imul
aam
int
cmp
int3
in
sbb
repz
mov
lret
nop
cld
out
xchg
aad
loop
out
rcl
cmc
cmp
hlt
not
loope
cmc
out
lds
filds
loopne
ljmp
sarb
clc
shl
aad
loop
cli
xchg
mov
mov
loop
out
adcl
cmc
int3
cld
sar
cmp
faddp
shl
cli
xchg
fdivrp
les
in
icebp
int3
xchg
loopne
repnz
cmc
int3
out
out
dec
xlat
repz
rcl
mul
xchg
in
ljmp
out
imul
enter
out
fcom
aam
ss
out
sbb
dec
stc
loop
fptan
ljmp
rcr
xor
hlt
xlat
in
iret
loopne
sub
mov
fst
imul
loope
xchg
loop
divb
sub
in
lret
aad
icebp
aad
lock
out
call
mov
mov
jmp
loop
decl
repz
cli
call
int
cld
out
cmp
xchg
mov
sub
in
ret
repz
into
xor
cli
imul
ror
jmp
hlt
std
testb
jmp
xlat
cmp
stc
sar
fxch
xchg
ror
in
fst
loope
vgf2p8mulb
in
sti
icebp
fistpll
dec
ret
fadd
jecxz
call
in
lret
jecxz
jmp
fmul
cmp
sbb
fmulp
aas
ret
sti
jecxz
jmp
fdivr
xchg
xor
xor
call
out
cld
repz
cld
loope
vpsubusb
testl
cs
ss
ds
shl
aaa
lock
cmc
jmp
and
out
xor
rcr
cmp
stc
fistpll
clc
jecxz
into
call
and
mov
mov
cli
or
repnz
ljmp
clc
xor
jmp
iret
rol
rol
or
push
aaa
add
aaa
jg
scas
add
std
repnz
hlt
rcl
jecxz
jmp
test
xlat
fsubr
mov
hlt
lret
loope
cmp
leave
repz
cmp
hlt
test
fsub
loopne
lret
cli
fucomp
enter
out
in
fildll
clc
rcl
enter
ror
fstpt
repnz
aad
ret
leave
xlat
into
mov
jmp
out
cmc
idivl
int
shl
ss
ljmp
aam
ljmp
aam
fdivp
rcl
out
clc
icebp
aad
lret
loop
ret
fsub
lock
cmpl
jmp
ljmp
cld
fld
fucomp
lret
cli
cmp
in
loop
in
stc
int3
jmp
call
shl
test
jmp
ljmp
in
in
das
jmp
cmp
neg
aam
test
rol
in
sti
fmul
pop
out
push
push
jecxz
fpatan
lret
in
icebp
aam
out
addb
jmp
loope
jmp
mov
rol
hlt
jmp
ds
shr
and
test
call
loop
xchg
xchg
aad
ljmp
clc
lret
lret
cmp
cmp
call
out
into
test
ret
das
int
xor
flds
repz
cli
fucomi
int
cld
cld
enter
jmp
ret
out
out
sti
aad
ret
in
test
fneni(8087
std
out
test
jecxz
jecxz
xor
iret
stc
sarl
in
cmp
test
xchg
rcr
call
fucomip
out
shl
loopne
hlt
in
fcom
das
rcl
iret
out
cmp
loope
shl
cld
cld
idiv
or
in
mov
not
fdivr
ljmp
inc
stc
cmc
sti
fcmovb
xchg
clc
decl
ror
clc
xor
xor
jmp
xchg
cmp
out
shr
repz
in
xlat
loopne
test
roll
jmp
out
test
out
jmp
cmc
ffreep
icebp
aam
fdiv
fcmovnu
enter
cmp
add
rcl
mov
mov
xchg
fmulp
shll
repz
hlt
fneni(8087
iret
lret
cmp
repnz
ret
cmp
sbb
in
xchg
aad
out
into
ss
das
fucomip
ror
rcr
aad
repnz
xchg
repz
out
in
jmp
in
in
jecxz
jecxz
aad
out
fdivrs
aad
repnz
fucom
adc
in
iret
jecxz
rcl
icebp
shl
cmp
fdiv
div
fistpll
xchg
xbegin
lret
or
in
out
in
xchg
mov
clc
ljmp
into
fildl
lret
xlat
stc
into
into
mov
rolb
call
xlat
addl
faddp
leave
in
leave
int3
test
int
in
int3
out
divl
jmp
fsubr
cmp
sar
fildl
rcl
mov
in
jecxz
xor
int3
cmp
sarl
fdiv
lock
aam
ret
aad
lret
loop
xchg
jecxz
rorl
lret
jmp
test
loop
fdivr
cmc
cmp
ret
xlat
rol
xchg
lret
loope
out
out
ret
in
sti
into
sar
ss
clc
ds
cld
shl
idiv
aad
cld
out
in
xchg
cmp
int
fsubrl
into
cmp
fcomip
cli
imul
test
in
fst
jmp
mov
xlat
xor
call
repnz
ds
adcb
out
leave
stc
in
cmp
out
roll
not
jmp
in
xchg
lret
hlt
out
jmp
aaa
repz
fcmovne
adc
rcl
idiv
aam
ds
mov
ficoms
repz
ret
hlt
cmp
incb
xlat
xchg
cmc
xlat
fstp
neg
mov
lret
lock
rcl
int3
in
clc
std
std
fidivl
clc
xchg
cld
xlat
ljmp
shl
int
int
ljmp
icebp
xor
std
out
clc
clc
cmc
loop
loopne
int3
out
mov
xor
cli
lret
enter
clc
in
jecxz
repnz
xchg
int3
lret
cmc
mov
in
icebp
jmp
cld
call
cmc
loope
rolb
mov
pushf
clc
jmp
enter
fxch
shll
or
outsb
js
adc
add
in
filds
int3
aad
xor
int3
ss
hlt
cmp
cld
and
in
iret
loope
rcl
jmp
sarb
ss
cmp
lret
into
xlat
cmp
out
dec
addl
lock
xlat
enter
aad
jmp
ret
fcmovnb
out
out
in
aad
sub
int
out
out
fbstp
cmp
lret
ljmp
out
out
fucom
cld
mov
rcll
xor
rcl
xor
jmp
cld
ljmp
out
jecxz
aam
dec
sti
mov
int
xor
cld
jmp
in
add
call
jmp
xchg
out
in
fcomip
fyl2xp1
stc
rcr
in
out
shr
loope
out
fcmovne
jmp
mov
jmp
jmp
call
in
iret
leave
cmp
ret
testl
adc
into
lret
shl
test
cmpb
and
std
ror
ds
mov
lea
out
sar
fdivr
cmp
test
cli
icebp
hlt
repz
adc
stc
stc
int
int
xchg
repnz
out
out
icebp
jmp
out
icebp
out
iret
cmp
loopne
enter
into
call
repz
ljmp
clc
rolb
les
ret
idiv
in
cli
and
leave
jmp
neg
xor
clc
fsubrp
cmp
in
xchg
fadd
fiadds
into
out
out
out
aaa
leave
ret
fdiv
das
out
out
repnz
not
rcr
out
fstpt
aad
neg
into
lea
xchg
enter
out
enter
loope
testb
incl
out
sub
xorl
aam
xor
xlat
repnz
cmp
sarb
test
clc
call
cmc
lret
std
in
in
repz
sub
jmp
sub
ret
neg
cld
enter
mov
fstl
xor
out
xor
icebp
xlat
sti
fcmovnb
aad
sti
fst
stc
jmp
mov
int3
repz
icebp
int3
iret
xlat
int3
aam
ror
cmp
loope
xchg
fiaddl
ljmp
incb
leave
cmp
aaa
aam
loope
test
fcmovbe
std
lret
mov
out
jmp
aas
in
leave
out
enter
jecxz
shl
sar
rorb
leave
iret
fucom
fimuls
out
loop
icebp
stc
cld
xlat
shl
hlt
roll
nop
xchg
jmp
sub
std
stc
fucomp
cmp
fcmovu
fcomp
jecxz
lds
out
loopne
clc
call
cmp
hlt
int
xor
lds
sti
jecxz
loop
xchg
and
mov
xor
jmp
cli
xor
lret
int3
in
fadd
cmc
test
in
cli
into
std
in
rorb
xor
int3
rcr
fstp
aas
hlt
shl
cmp
mov
cmp
ret
decl
xlat
cmp
int
neg
stc
xor
aad
std
xchg
mov
orl
sub
out
fcmovnb
aad
ljmp
stc
enter
aam
loope
shl
leave
call
xor
lock
stc
lock
cld
cmp
loopne
dec
in
int
sub
mov
not
call
in
xlat
xlat
cmp
clc
stc
ror
clc
neg
aam
fdivr
lret
cli
fmulp
rolb
jmp
out
cmc
fscale
loop
fiaddl
mov
jmp
mov
xchg
xchg
int
das
loop
jmp
fscale
cmc
jmp
xlat
aas
aas
adc
sar
out
decb
incb
in
out
fstp
xlat
cmc
std
lret
jecxz
xchg
lea
iret
in
lock
aad
cmp
cmp
rcr
aad
testl
fsub
int3
hlt
cmp
cmp
jmp
cmc
sar
clc
cld
leave
lret
xchg
cld
fmul
in
lret
call
jmp
ljmp
jecxz
loop
in
mov
in
in
mov
out
shl
out
loop
cmp
enter
xlat
sarb
sbb
sbb
test
orl
mul
repnz
in
cmp
rolb
adc
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
in
ds
cmp
out
out
jecxz
jecxz
lock
test
aam
shl
jmp
imul
div
fcmovnbe
cmp
sbb
testb
xchg
aaa
out
in
clc
xor
aam
out
cmp
fcmovbe
loope
out
loope
adc
clc
mov
cld
lret
xchg
ret
shl
into
sarl
xlat
jecxz
shl
and
jmp
repnz
repz
ljmp
aad
cmp
fcmovu
stc
lock
stc
std
test
lret
mov
jecxz
in
int
loopne
sub
rcl
les
aaa
cli
fcomp
loopne
cld
repz
xchg
adc
sti
neg
out
mov
mov
int
sbb
lret
out
clc
fucomp
aad
into
cmp
and
shl
testb
lret
loop
mul
xlat
xor
xor
repz
in
clc
out
xlat
cld
ret
adc
mov
in
mov
in
jmp
cmp
ss
xor
adc
iret
cld
sbb
jecxz
call
mov
jmp
sar
aad
cmp
aad
cmc
loope
in
cli
in
cld
lea
ljmp
fxch
in
lock
mov
mov
in
loope
xlat
repnz
f2xm1
hlt
test
rcr
orb
ret
fildl
cmp
jmp
shll
in
aaa
aad
fadds
rol
loop
mov
mov
sti
in
std
repnz
hlt
cmp
cmp
rcl
sar
xor
loope
mov
aad
into
in
cli
shl
mov
shrl
lret
lret
cmp
cmp
cmp
cli
cmp
loop
cmc
in
sti
mov
test
int
sar
mov
xor
xor
sbb
fcmovnu
rol
fdivp
fcmovb
loope
orl
out
in
out
jecxz
xor
ljmp
adc
cli
icebp
jecxz
adc
aam
mov
out
jmp
in
icebp
int3
cmp
fcmovnu
enter
fucomp
ss
xlat
xlat
enter
sti
cmp
fucompp
cld
ljmp
xlat
xlat
fidivrl
cli
iret
ret
cmpl
sbb
xchg
repz
xlat
aaa
neg
jmp
lock
out
cmp
aas
jmp
fcmovb
jecxz
loop
int3
aad
out
xor
enter
repz
jmp
int
fcmovnu
xchg
call
mov
iret
mov
into
loop
cmp
hlt
iret
in
shl
into
cld
out
filds
in
ret
in
leave
jmp
hlt
aam
cmp
fcmovne
aad
into
cmp
xor
enter
loopne
xchg
xchg
xchg
into
in
fsub
sarb
sti
xor
in
adc
test
out
ljmp
out
out
loope
leave
out
cmp
aam
repnz
idiv
test
in
roll
cld
jecxz
mov
xchg
out
xor
repz
adc
aad
rolb
xlat
leave
in
repnz
fst
xchg
ss
sarb
jmp
cld
xor
aad
ds
and
loopne
repz
ret
cli
clc
out
xchg
jmp
in
div
lock
dec
cmp
cmp
loop
jmp
std
orb
ret
rcl
cmc
stc
std
in
jecxz
cmpb
addl
orl
cmp
test
jecxz
icebp
test
and
test
inc
lret
xchg
mov
lret
fcmove
in
lock
clc
test
mov
in
sub
repz
fdivs
int
cmp
out
lret
fucom
shl
cmp
clc
mov
mov
lret
lds
xchg
aam
out
call
ror
loopne
loopne
lock
loop
loopne
cmc
not
fucom
lock
mov
cmc
aad
icebp
aas
loopne
std
test
repz
rcl
inc
fmull
fstp
aad
leave
out
lret
rcl
cld
in
cmp
clc
adc
test
ds
cli
jmp
test
mov
out
sarl
aam
fst
lock
xor
out
test
adc
mov
lds
mov
rcl
out
loope
into
xor
das
call
in
aad
jmp
xlat
fadds
xchg
jmp
filds
not
icebp
xlat
ret
les
dec
or
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
lea
das
test
jle
xchg
shl
cmp
clc
in
fcompp
adc
aas
hlt
mov
cld
sbb
jmp
sti
test
jecxz
out
out
cmp
jmp
fst
icebp
stc
rcl
not
sbb
mov
out
lea
repz
cmp
lock
lock
cmc
in
clc
fneni(8087
xchg
leave
in
ds
nop
stc
std
call
sub
clc
lock
adc
shl
loope
stc
loopne
cli
int3
icebp
mov
lret
xchg
xchg
in
out
enter
out
leave
inc
ret
repz
shl
test
mov
xchg
lock
jmp
cmp
loope
std
cld
les
orb
xchg
rcr
in
xor
out
cmc
aam
aam
in
cmp
cmp
loop
lret
aad
fucomip
in
jecxz
roll
loop
stc
sti
shl
loope
fbstp
loope
clc
loopne
mov
out
xchg
mov
mov
mov
in
icebp
das
cld
fstp
fcomp
std
aas
incb
jmp
enter
repz
sub
xor
in
and
shl
jecxz
mov
fmuls
loopne
shr
in
sub
leave
int
in
fdiv
sti
aam
rcl
xlat
repz
xor
mov
roll
xlat
enter
cmp
aas
lret
loop
ret
rcr
fmuls
in
call
clc
fdivs
int3
hlt
ljmp
adc
mov
rcr
test
mov
lret
aad
xlat
aad
jmp
testl
jmp
mov
xor
std
das
div
fidivrl
fdivrs
fstp
loopne
call
int3
mov
mov
into
xchg
hlt
sub
cmp
cmp
out
hlt
fxch
iret
fucomi
adc
in
in
testl
lret
hlt
stc
std
fsin
ret
test
and
loop
lret
lret
nop
adc
sti
sar
fcmovnu
into
lret
cli
in
roll
jmp
movb
lock
aam
rcl
in
clc
or
testb
rol
mov
int3
cld
fldl
cld
cli
repz
xlat
out
aad
mov
leave
test
xchg
xchg
ffreep
leave
out
icebp
ror
hlt
rol
aam
int
ret
loope
lret
aam
in
ror
repnz
cmc
ds
out
in
inc
test
std
mov
mov
int
shl
aaa
ret
in
cmp
out
xlat
faddl
repnz
sti
lret
mov
push
adcl
ss
cmc
fdivrs
repz
aas
enter
sti
xchg
aam
fdiv
shll
lret
cmp
xor
ds
orl
std
rcl
loope
shl
fcom
xor
jmp
jecxz
xrelease
fsub
out
repnz
out
mov
bnd
rcr
fucomip
idivb
into
rcl
ret
xor
loopne
fst
nop
nop
jmp
lret
cmp
cmp
fdiv
cmp
jmp
fdivp
fcmovbe
std
test
in
mov
repnz
nop
hlt
rol
enter
out
lret
std
into
int
cmp
xlat
aam
mul
test
icebp
cli
shr
mul
repnz
int
idiv
fdivrp
fucomp
std
and
faddp
cmp
rol
loop
in
in
xchg
sbb
out
cmc
call
out
sti
stc
roll
jmp
loope
int
push
out
icebp
jmp
sar
cli
repz
iret
cmpb
jmp
incl
neg
cld
or
jmp
call
cmc
xor
aam
fucomi
xor
ss
not
loop
in
loope
xchg
lret
sub
fcom
xlat
into
fdivrs
repz
enter
mov
test
xor
jecxz
das
ss
cmp
out
fst
aam
add
aad
movl
xor
out
jmp
in
idiv
ss
test
fst
cld
in
fcomp
mov
jmp
repnz
cmp
fdivrs
sar
test
lret
cli
sub
lea
sti
xor
loopne
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
call
lret
scas
add
cmp
cmp
xlat
stc
fst
fstpt
and
std
into
xchg
mov
out
xlat
cmp
ljmp
xchg
out
fsubr
std
into
jecxz
mov
xor
sar
out
lret
ds
cmp
std
into
fsubp
cmc
sti
loop
call
test
xchg
jecxz
hlt
aam
aam
jmp
loop
lock
xchg
ret
xchg
enter
inc
cmp
cmp
rcl
enter
ret
out
cmp
sub
rol
int
call
aaa
leave
stc
sarl
out
clc
shl
sar
loop
dec
repnz
fxch
ljmp
xchg
cs
xor
out
clc
aad
fnstsw
xlat
fcmovnu
fld
fsubr
out
call
jecxz
aad
call
enter
ret
sarl
mov
sbb
xchg
jmp
loopne
into
shl
int
aad
cli
repnz
neg
loop
fnstsw
xchg
xlat
mov
sub
into
cmp
fucomi
out
mov
sub
lock
cli
icebp
fucom
ret
vpand
test
roll
out
test
xchg
out
ss
icebp
out
xor
loope
cmp
ret
out
mov
repz
cmc
cmc
stc
std
rcl
cmp
not
shl
ret
jecxz
icebp
fucomi
xor
xchg
stc
xlat
sub
out
into
sar
or
fldl
cli
or
fcmovu
lock
aad
enter
repz
stc
addl
loope
lret
lret
iret
xor
lret
xor
shl
into
fcmovbe
shl
fsub
in
inc
add
int
dec
out
out
xchg
fsubrp
xlat
out
in
cmp
out
aaa
call
shl
sbb
sar
fnstcw
in
loop
into
ror
hlt
std
repz
aam
out
fxam
int3
sti
loopne
rcr
sar
out
call
clc
sub
repnz
jecxz
stc
shl
cmp
or
aad
cmp
clc
cmp
jmp
cs
shll
clc
in
cmp
fyl2x
cmp
cld
cmp
fadds
shr
ret
jmp
std
sarl
shl
std
mov
addl
in
div
iret
in
shll
and
std
mov
mov
orl
loopne
xchg
out
sub
fcomi
out
int3
neg
aas
not
loope
fstp
mul
bnd
cli
in
or
neg
in
icebp
cmp
fcomp
add
not
stc
leave
test
lock
xlat
xor
cmp
cmc
int3
fldz
ret
int
aad
jmp
leave
out
leave
leave
call
ret
repz
xlat
shl
fcomp
into
out
cmp
loopne
stc
jecxz
in
mov
in
xchg
out
repz
ret
cmp
icebp
cmp
loop
lock
rcl
xchg
ret
ljmp
cmc
sub
test
out
repnz
loopne
cmp
loopne
fsin
lret
sti
repz
mov
fmul
jmp
std
in
lock
int3
cli
and
ret
jmp
test
mov
xlat
clc
cld
out
loope
hlt
out
xor
in
repz
int
loopne
lret
repz
in
cmp
std
fmulp
xchg
rcr
sbb
fstl
xor
icebp
fidivrl
xlat
cmc
aam
ror
in
in
cmc
cld
nop
dec
nop
repnz
fdivr
aaa
lret
not
cmp
cmp
fndisi(8087
lret
leave
test
adcb
into
out
fcomp
into
test
aam
xchg
sti
ffreep
jmp
lret
lea
xor
sti
repz
jmp
cmp
aam
cmp
loop
sbb
orb
divl
neg
lret
shl
call
aad
aad
hlt
neg
clc
mov
lock
lret
hlt
xchg
loopne
xor
enter
xor
cmp
loopne
test
out
lret
addl
cmp
cli
hlt
fnsetpm(287
repz
out
fdivrp
nop
xchg
mov
not
sti
int
aas
fdiv
cmpl
fdivr
leave
out
dec
mov
adc
rcr
in
ljmp
loope
repz
mov
loop
cld
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
negb
push
scas
add
in
out
in
sub
xor
sar
ljmp
cmp
loopne
aad
ret
loopne
fxch
lret
lret
leave
shl
loop
repnz
cmp
fnop
rcr
iret
mul
jecxz
cmp
test
and
out
lock
test
icebp
lret
repz
cmp
rcr
in
lret
loopne
test
mov
jecxz
leave
ss
repz
cmc
and
xor
cli
cld
out
mov
lock
leave
xor
out
out
lret
in
cld
loopne
ret
icebp
imul
fdiv
ljmp
nop
loop
xchg
shl
test
xor
into
aaa
cmp
repz
cmp
orl
mov
mov
lret
lret
repz
repnz
out
xor
cld
fscale
loope
stc
fnstsw
std
mov
loope
jmp
icebp
leave
mov
in
in
jmp
lock
cli
flds
mov
fisttpll
xor
cmp
in
fdivp
cmp
not
cld
leave
repnz
fldl
sti
repz
int3
subb
lock
ret
jmp
cmp
sti
cli
aad
in
mov
loop
loopne
dec
test
jmp
lret
repnz
cli
lret
repz
repnz
neg
les
mov
xchg
iret
in
rcl
lock
xor
sarl
sbb
sti
sbb
out
ror
out
jmp
jmp
xchg
iret
xor
sti
cld
jmp
cli
neg
sar
cmp
incb
jmp
out
iret
shlb
aaa
jmp
in
jmp
cmp
aas
adc
iret
xchg
mov
shr
xchg
mov
xor
lret
ljmp
jecxz
ret
in
xchg
jmp
shl
xchg
lret
in
out
ret
cmp
aaa
ffreep
std
and
loope
cli
jmp
and
enter
out
in
icebp
loopne
stc
out
loop
xlat
lret
stc
hlt
cmp
call
sbb
jecxz
into
into
aam
call
aad
sbb
xchg
xchg
xchg
ljmp
cmp
cmp
not
int3
aas
div
in
lock
add
test
xor
in
mov
xchg
aam
mul
into
fucomi
lock
jmp
fstp
add
addl
out
jmp
test
sub
sub
aad
jmp
cmp
rcr
into
test
addb
xchg
test
icebp
loope
in
shr
test
aad
cmp
jmp
int
ret
out
enter
sti
in
lret
orl
std
call
fnsave
out
out
jmp
mov
loop
cld
repz
lock
enter
lock
aas
lret
ds
cld
idiv
jmp
mov
out
in
mov
div
iret
out
jmp
leave
icebp
ret
loope
out
div
not
mov
int3
jecxz
decl
xor
ljmp
aam
rcl
jmp
enter
mov
mov
iret
cli
sub
test
repnz
in
cld
bnd
lret
leave
les
mov
iret
std
cmc
imul
lret
aaa
ljmp
fst
mov
aad
out
lret
xchg
mov
out
loopne
out
lock
cmp
int3
dec
ljmp
mov
cli
cld
movb
lret
xchg
mov
aam
xor
sarl
out
cmp
fxch
ss
std
cmc
fadds
xchg
out
in
lock
ror
ss
out
int
out
out
out
out
fldl
enter
jecxz
leave
ljmp
sub
sti
rcl
loope
loop,pt
ljmp
sub
shr
out
loopne
aaa
int3
xor
xor
cmp
sti
int
jecxz
aas
div
fcmovnb
xchg
xlat
mov
call
repz
xor
aaa
jmp
int3
ret
test
aam
f2xm1
orb
mul
in
in
in
cmp
div
xor
rolb
test
sub
in
fstl
leave
out
aaa
cmc
jmp
lret
iret
out
out
xchg
cld
out
mov
int
shlb
das
clc
lret
int3
sti
lret
idivl
repz
fcomp
out
mov
stc
flds
fisttps
shr
fdivrs
shl
clc
cmp
ret
add
add
fadd
fcom
fld
pop
into
shll
mov
jg
scas
add
cld
sti
rol
xchg
cld
enter
sti
mov
sbb
aad
ror
fdivrp
cmp
loop
sarl
sti
test
inc
and
incb
lret
in
int
enter
cli
fdivr
cmp
std
idiv
neg
ret
iret
in
add
out
xlat
stc
fidivrs
xor
fsubp
ret
cli
stc
cld
ds
addb
jmp
int3
xor
int3
cmp
test
out
not
addl
in
fcomip
shlb
call
leave
clc
sarb
xlat
lock
rcl
mov
xchg
mov
aad
int3
cmp
lret
out
test
fdivrp
idiv
in
jecxz
rcl
xchg
roll
iret
fcomip
enter
fucom
cmp
addl
fcmovu
out
xchg
xor
int
lret
out
into
clc
cmp
out
fsqrt
addl
cli
clc
cld
ljmp
int
cld
jmp
shl
div
ret
jmp
fucomip
loopne
ljmp
xor
clc
cmp
lret
loopne
fdivrl
xchg
addl
out
fucom
int
out
ror
clc
clc
cld
rcl
cmp
cmp
cmp
mov
leave
out
test
and
ret
cmp
lret
sub
cmp
filds
fmuls
mov
lea
in
xlat
clc
jmp
clc
cmp
aaa
loop
lret
stc
ret
in
cld
aam
out
into
in
lret
ljmp
aaa
ret
xor
cli
out
stc
ljmp
fiadds
out
stc
std
cld
out
xchg
lret
hlt
jmp
sti
std
cld
jecxz
xchg
repz
enter
in
test
xor
in
lds
xor
clc
jmp
jecxz
xlat
mov
xchg
notl
xchg
iret
mul
repz
fdiv
ror
rcl
shl
int3
rolb
xchg
loopne
fiaddl
out
out
lret
xor
ds
faddl
repnz
fmuls
xchg
int
imul
xor
rcl
cmp
xlat
std
jecxz
aad
clc
incb
nop
fcmovb
decl
cmp
in
xlat
out
bnd
rcr
xor
add
loopne
leave
in
in
rorl
xor
shrb
ds
leave
clc
loopne
fdivrp
loop
mov
jmp
fsub
cli
ljmp
xor
enter
cmp
lret
aas
testl
icebp
in
push
fsub
in
in
cmp
cmp
lock
repz
sarl
ret
mul
in
fsubr
in
mov
roll
shlb
sar
icebp
out
aas
cmp
in
fadds
jmp
cli
sbb
cld
in
out
not
jecxz
int3
fcmovbe
cmp
ret
fdivp
roll
clc
rorb
sub
aad
aad
cli
rcr
clc
sti
idiv
cmp
fscale
sub
mov
rol
into
in
repnz
cld
repnz
xor
rcr
call
cld
fucomi
xchg
xchg
divb
rol
fdiv
lret
out
neg
std
out
rol
cld
rcl
ret
lret
mov
fisttpll
out
xor
cmp
aad
lock
xlat
fdivrl
fsub
test
lret
shl
xlat
xor
ror
fmul
xorl
fcmovnu
faddp
ljmp
lea
ljmp
int3
aam
fnstcw
not
ret
jecxz
into
lret
lret
std
into
out
lret
call
fcom
std
jmp
into
fldl
lret
nop
mov
shl
out
xor
iret
enter
repnz
incb
enter
call
nop
aas
cmp
fucomi
xlat
not
int
xlat
roll
aam
leave
icebp
int
aam
subb
lret
repz
cld
fcomp
out
out
fdiv
hlt
mov
cmp
std
jmp
lock
leave
lock
fucomp
aas
ds
cmp
rol
test
and
addb
in
xchg
ljmp
cmp
repz
clc
div
rorl
out
loop
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
mov
or
scas
add
nop
mov
call
xlat
out
fst
clc
cmp
adc
jecxz
fmul
mov
repz
cli
lds
lock
stc
icebp
loope
icebp
lock
cmc
incb
enter
shl
iret
lret
or
in
cmp
repz
xlat
jmp
cmp
jecxz
int
mov
loopne
cmp
int3
lret
lock
rolb
out
out
mov
shl
iret
int
in
cmc
int
fyl2xp1
cmp
out
xchg
fadd
shl
out
xor
jecxz
in
adc
iret
cmc
cmp
in
sti
std
aam
cmp
rol
ret
test
xchg
enter
mov
div
hlt
aam
xor
incb
hlt
sti
xlat
clc
clc
leave
int
in
mov
mov
enter
test
out
cmp
cmp
sti
jmp
roll
int3
out
fldl2e
dec
xchg
and
out
cmp
lock
stc
aaa
ror
icebp
cmp
sar
jmp
xlat
out
in
lret
orl
cmp
leave
aaa
aaa
fstp
icebp
neg
sti
cmc
testb
fiaddl
xchg
hlt
loope
cmc
iret
ljmp
idiv
sti
clc
icebp
repz
cli
cmc
test
in
fmull
lock
iret
out
fdiv
repnz
shr
iret
cld
stc
call
xchg
shl
icebp
shr
repz
repz
call
out
cmc
ret
or
testb
xchg
int3
loopne
out
ljmp
add
fchs
out
xchg
fucomp
out
fucomip
in
fsubrp
in
loope
in
ret
xor
xor
ds
aas
sar
xlat
cld
hlt
mov
in
and
ret
sbb
mov
ror
xor
sar
aam
aaa
ljmp
jecxz
leave
cmc
call
lret
xchg
subl
call
ss
fidivrl
aad
cmp
ljmp
decb
divl
aaa
lds
cmp
out
repnz
in
xchg
loope
jmp
sbb
clc
clc
ret
fidivrl
xor
xor
addb
or
fxch
iret
or
rorl
xor
enter
jmp
icebp
cmp
loop
cmp
mov
out
lret
lock
aam
call
in
shr
cmp
loopne
ljmp
in
in
lea
xlat
icebp
fcmovu
lret
aam
cmp
ds
call
loopne
fsubp
jecxz
mov
in
in
in
bnd
cld
ss
ret
out
iret
cli
xlat
ret
out
jmp
lds
rcr
fmul
in
hlt
repnz
fsubr
cli
out
decb
repnz
cmp
out
lock
into
shl
aas
jmp
mov
hlt
in
fcmovne
rorl
shl
ljmp
cli
repnz
clc
xor
enter
clc
ret
in
nop
into
mov
out
idiv
div
cmp
cmp
cli
repnz
int
cmc
loop
rcr
ret
out
mov
int
enter
in
xchg
lock
xor
call
loopne
loope
mov
roll
call
in
xchg
out
out
cmc
xor
out
xor
rcr
xor
fcmovne
lock
test
icebp
icebp
cmp
in
std
cmp
in
cmp
sbb
iret
xchg
call
out
ljmp
xor
leave
cmp
out
rcr
cmp
cmpb
repz
hlt
idiv
std
lret
loope
fstp
ret
ljmp
lret
clc
loope
sarl
int
xchg
rcl
jmp
nop
in
out
xchg
das
xor
das
int
sarl
xor
out
mov
jmp
fdivr
or
repz
imul
call
xor
xchg
xchg
cli
or
in
rol
aaa
xor
cld
out
cmp
clc
in
stc
cmp
fcmovnb
leave
mov
out
xchg
in
std
jmp
cmp
mov
cmp
repz
int
rol
testb
shl
into
icebp
repz
jmp
stc
aam
in
repz
aaa
xlat
lock
lock
aad
stc
fildl
loopne
ljmp
lock
enter
fidivrs
add
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
icebp
rcr
call
enter
into
repnz
shl
xor
in
shr
enter
xchg
repnz
call
lock
aad
cmp
sti
leave
repnz
clc
in
rcr
fcmovnbe
in
in
and
cld
xchg
cs
lret
out
cmc
rcl
into
ds
repz
ret
out
jmp
xlat
ljmp
xor
rol
sti
cld
cmp
cmp
xlat
repnz
std
aad
loopne
loope
mov
movb
sub
imul
jecxz
repnz
ror
or
xchg
ljmp
out
out
out
cmp
fstp
in
out
rolb
sti
in
std
lret
int
das
neg
in
cmc
jmp
cmp
cmp
addb
loope
out
fadd
leave
jmp
out
icebp
lock
ret
aaa
fcmovnu
aas
ror
cli
rcr
out
out
cli
cli
icebp
fcmovnb
stc
addl
xor
out
cmp
mul
stc
cmp
cmp
xchg
test
in
ret
jecxz
adcl
out
lock
shl
cmp
cmp
and
xchg
xor
stc
or
out
xchg
int3
shll
test
iret
and
out
jecxz
enter
in
orl
in
call
jecxz
cmp
fld
mov
clc
jecxz
fdivr
jecxz
loop
int3
fmull
out
ss
out
test
ffree
clc
jmp
aad
in
push
out
mov
int
cmc
icebp
fsubr
cmp
rcr
int
in
fyl2xp1
repz
flds
fldl
into
stc
sti
neg
sarb
shl
ret
sbb
dec
cld
fcmovb
jmp
shl
aam
xor
out
xor
fistpll
test
call
in
sub
stc
jmp
xchg
add
div
repz
std
std
loopne
int3
cld
sti
loope
ret
hlt
fsubrp
enter
std
mov
mul
aaa
hlt
iret
imul
fmulp
cmp
cmp
jmp
jmp
cli
repnz
rorb
call
aas
xorb
call
cli
out
rcl
loopne
sub
das
lock
hlt
call
stc
ffreep
faddp
call
cld
test
test
loope
repnz
fmul
xchg
iret
ljmp
cmp
cmp
rcl
shr
roll
in
orl
call
fmul
sti
repz
rcr
cmpl
imul
fmuls
xchg
xchg
out
clc
xor
div
loopne
loope
xlat
aaa
roll
in
clc
out
sti
in
mov
filds
repz
call
repz
mul
icebp
stc
fdivr
les
out
test
lock
lret
cld
ss
not
in
lock
ret
rcl
stc
ljmp
std
xor
out
cld
out
in
rcr
cmp
loopne
leave
stc
div
xchg
call
decl
ss
lret
aam
repz
loope
cld
neg
jecxz
ret
in
fchs
out
xchg
mov
enter
xor
in
enter
ftst
incl
cmc
out
int3
int
iret
call
sti
xor
lret
aaa
fistpll
ss
div
neg
call
ljmp
lret
cmp
cmp
int
clc
fninit
test
ret
ds
cli
in
loop
out
loope
or
cmp
xor
out
xlat
loope
fmul
fiadds
fcomp
jmp
enter
xchg
cld
in
shll
in
aam
sti
ljmp
fucom
out
ffreep
enter
fcmovbe
filds
xor
aad
jmp
sbb
xchg
mov
mov
cmc
testb
test
imul
in
aam
lock
aas
and
fldl
sti
fimull
aam
rol
jmp
stc
cmp
jmp
loope
sti
ljmp
fldl
rcr
fcmovbe
out
fistpll
aad
in
mul
fiadds
mov
int3
xchg
fsub
ret
cld
cmp
cmp
ljmp
shl
shr
fdivr
jecxz
and
mov
mov
jmp
rcl
aad
aad
shll
inc
add
popf
loope
jle
add
mov
repz
lock
cmc
ret
out
out
ljmp
jmp
mov
int3
call
clc
aas
lret
aas
xchg
call
test
shl
lea
aad
jmp
cli
sti
cli
fcomi
fmulp
xlat
loop
flds
sbb
std
xchg
int
into
test
lret
int
cmp
out
int
hlt
test
mul
cmc
loopne
loopne
fiaddl
xchg
xor
imul
in
hlt
lret
cmc
in
cmp
hlt
repnz
cmc
int3
xchg
stc
addl
fucomip
cli
out
in
out
cld
fcmovnu
lret
fdivp
stc
sti
fadds
out
clc
sub
test
out
int3
lret
call
call
hlt
loop
aad
fdivr
in
xchg
jmp
int
in
jecxz
xor
cld
clc
sarb
int
aas
cmp
loope
jecxz
fcmovbe
out
out
sbb
fdivr
out
shlb
sub
stc
fcmovne
enter
in
aad
repnz
cmp
out
movb
fdivs
xor
ljmp
cmp
test
test
jmp
xlat
mul
out
lret
jecxz
in
fdecstp
ss
ds
inc
shl
cmp
cli
ljmp
mov
int
call
cmp
stc
repnz
xlat
add
test
fnstcw
mov
std
mov
shl
enter
leave
cmp
inc
cmp
stc
stc
fdecstp
fadd
in
int
fucom
aas
fsub
cmp
lret
xor
inc
cmc
call
neg
stc
sub
shr
fbstp
in
xor
ss
int
rol
sarl
hlt
loopne
enter
xor
int3
lret
sti
in
cmp
ds
rcl
icebp
rcl
repnz
jmp
sti
testl
stc
repz
fcomp
int3
fdivr
xlat
cmp
xlat
out
icebp
fst
sbb
int3
mov
xchg
aad
out
xlat
into
sti
into
ljmp
shr
rcr
loopne
repz
in
mov
mov
aaa
ljmp
cld
fstpt
cmp
shl
loopne
clc
mov
and
incb
xchg
xor
aad
into
lret
aad
xlat
add
loopne
vpaddb
lret
xchg
xchg
in
int3
clc
clc
out
fsubr
in
shl
cmp
loopne
adc
clc
out
lret
sti
out
stc
loopne
rorl
ljmp
cld
shl
shl
ljmp
in
adcl
in
cmp
cmp
loop
fcomip
sar
shl
mov
in
repnz
ljmp
rcr
ljmp
sti
flds
fimuls
aad
aas
loop
xor
shrl
sti
stc
in
bnd
test
rorl
xchg
test
xor
int3
cli
clc
std
cmp
iret
lock
flds
decl
mov
loopne
ljmp
int
aaa
cmp
cmp
clc
neg
rcl
sti
neg
in
lret
shl
mov
call
aam
rcr
fstp
fsub
loope
repz
mov
mov
xchg
xor
aam
sarl
cmc
fdivr
xorl
ret
movb
mov
jmp
icebp
nop
xchg
clc
lret
int
aad
aaa
fsub
xlat
addl
out
jmp
cld
leave
int
out
int3
jmp
int
sti
fnstsw
clc
cmp
ret
rcl
cmp
sbb
jecxz
leave
clc
cmp
neg
xor
rolb
rol
loope
rcll
ret
xlat
cs
in
fst
ljmp
mov
cld
clc
ljmp
jmp
shll
divb
call
clc
hlt
sti
fstp
leave
clc
lret
in
in
loopne
call
stc
iret
call
stc
lret
int
lock
xchg
jmp
test
fcmovb
ror
cmp
idivl
cld
jecxz
ffreep
icebp
in
stc
fdiv
fildl
jecxz
out
imul
fldlg2
xor
aam
aad
rcr
std
xlat
jecxz
call
ds
fucomp
std
jmp
rorl
lret
lock
jmp
shl
hlt
repnz
out
cmp
mov
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
sti
adc
sbb
scas
add
test
mov
cli
loopne
test
int
repz
das
sub
xor
rcl
int
lret
aad
in
call
sbb
test
nop
cld
mov
xlat
out
imul
aad
cli
cmp
cmpl
rol
out
fcmovb
fsts
cmp
enter
sarl
hlt
xchg
sar
loop
in
call
out
sub
cmc
enter
cmp
lret
fidivs
xchg
jecxz
loope
fsub
ljmp
fsubr
xor
cmp
call
repz
incb
lock
cld
repnz
loop
xor
xor
repnz
aam
cld
loop
cmp
rcr
mov
lret
xchg
loop
into
mov
out
aaa
repnz
icebp
clc
sti
cli
ds
ds
adc
jmp
test
loop
iret
loopne
out
clc
shlb
enter
idiv
aam
loopne
cmc
ret
out
lret
out
loope
xchg
nop
nop
aad
iret
call
int
cmp
xor
aad
cmc
lret
filds
repz
shr
int3
clc
in
int
lret
cmp
xlat
fucomi
test
call
out
rclb
repz
sti
cmp
lret
cmp
cmc
cmp
rol
xlat
call
xchg
xchg
shl
shl
xor
cmp
int
cmc
fadds
or
jmp
iret
lret
out
addb
leave
fdivl
in
cmc
cmp
cmpb
jecxz
call
repz
into
out
bnd
loopne
into
cmp
test
clc
fcmovnu
fisttpll
icebp
in
xchg
leave
lock
rcr
jmp
imul
int
in
imul
mov
ret
jecxz
into
int
enter
out
cli
aad
aad
fmulp
cmp
inc
lret
ljmp
ror
int
cmc
in
fdivr
fst
fucomip
adc
out
cli
cld
lret
lret
fucomp
in
ret
loop
lret
idiv
ret
rcl
fcmovnbe
fiaddl
dec
ljmp
in
xor
lret
out
loop
shl
aam
loope
fisttpll
ror
loope
xchg
enter
ljmp
aam
cld
aas
rcl
aas
xchg
fcmovu
mov
repnz
cmp
cmp
out
fsub
fisttps
fcom
fdivr
call
aas
jmp
shl
stc
repnz
in
stc
sti
clc
stc
cld
addl
xor
fcmovnbe
lret
cmp
loope
sti
sti
clc
dec
jecxz
jmp
call
ljmp
shlb
aaa
adc
aas
addb
lret
lret
xchg
loope
in
iret
out
call
aaa
loope
fimull
out
orl
cmp
xor
xlat
int
loope
cmp
stc
out
mov
out
roll
in
in
xor
aaa
int
leave
fidivrs
ffree
xor
call
fcmovne
stc
mov
and
ficoms
xlat
in
int
not
int3
shl
addl
cli
fildl
xchg
loop
sub
rcl
icebp
repnz
shl
ljmp
adc
out
fisttpll
in
lret
jmp
cmp
cmp
jmp
fiaddl
push
cmc
int3
in
xor
cmp
mul
ds
not
test
test
stc
into
test
sub
xchg
repz
out
aad
in
lret
xor
cmp
fdecstp
fdivrp
jmp
imul
int
int3
or
out
aam
lret
in
xor
sar
div
xlat
ds
jmp
lock
mov
fdivr
imul
out
jmp
mov
ret
cmp
int
lock
icebp
xchg
test
out
loopne
loope
int3
into
shll
ret
fdiv
in
fcmovne
cmp
incl
enter
mov
loope
sub
xor
cmp
aad
fistpll
cli
cmp
call
out
jecxz
loop
loop
mov
in
loop
lret
into
enter
loope
loope
aad
out
out
fcmove
filds
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
fdivs
jg
jg
or
jle
xor
jmp
enter
fucomi
cli
aad
cmp
fadd
sti
xchg
aam
fisttpll
loopne
iret
lock
aam
out
cmp
sti
in
jmp
fdivr
testb
xor
cli
out
repz
jmp
cmp
adc
out
aad
icebp
fmul
lds
xchg
call
xor
hlt
hlt
fidivrl
sti
sar
jmp
jecxz
lock
mov
test
cld
incb
in
into
lret
cli
int
ffree
lret
roll
test
cld
fdiv
mov
orb
shl
lret
repz
incb
ret
addl
mov
mov
jmp
fidivl
cmc
ss
icebp
cmp
cmp
icebp
in
xchg
cmc
out
xlat
int3
stc
call
ret
int
idiv
ffree
sar
fcmove
clc
cmc
lock
xchg
testb
test
aad
repz
call
ret
ret
shl
test
fadds
loope
subl
cli
aam
xor
aad
fdivrs
lock
add
sub
leave
iret
loope
les
in
xor
sti
shl
loop
aad
loope
call
stc
mov
out
rcr
test
jecxz
repnz
std
shr
jmp
in
cmp
sti
lret
aad
int
jmp
rcl
ss
ss
in
cmp
loopne
div
rcl
mov
lret
fdivr
out
rcll
rol
in
out
lret
out
clc
cmp
not
idiv
cmp
enter
sti
call
nop
xchg
into
in
xor
cmp
xlat
incl
aam
jmp
lret
xchg
out
in
loope
out
out
jmp
aaa
stc
cmp
loopne
into
cmp
xlat
fucom
add
mov
repnz
repnz
in
ss
xor
lret
in
cmp
out
mov
cli
test
out
loop
shl
out
lret
sar
in
int3
ds
ljmp
enter
test
shr
jecxz
out
neg
aam
out
std
ror
int3
test
loopne,pt
out
test
movl
imulb
xor
cmc
cmc
cmp
idivb
sbb
cmp
lret
mov
addb
sub
hlt
neg
enter
xor
aad
fsub
ds
xchg
rorb
xchg
icebp
fld
sarb
xlat
ds
test
ret
clc
or
inc
std
sti
lret
rcl
jecxz
rol
out
leave
xlat
xor
out
cmp
sar
rolb
jmp
filds
out
mov
cmp
loopne
cmpl
testl
and
fimuls
xor
out
jmp
cld
cli
ds
leave
call
rol
out
test
jmp
aas
shl
aad
jmp
cli
cmp
shl
shl
cmp
mov
jmp
in
out
xchg
incb
aad
ror
fnstcw
testl
ljmp
in
mov
in
ret
cli
hlt
fcomi
int3
hlt
fldln2
iret
loop
loop
aam
xlat
test
orb
loop
xchg
int3
aad
aad
ss
xor
repnz
aas
fldl
dec
mov
mov
adcb
out
jmp
into
icebp
rcr
loop
out
hlt
repnz
lret
enter
cld
enter
xchg
sub
out
cli
repnz
out
out
fucomi
rolb
std
testl
shl
cs
cmp
call
into
jmp
repz
cmp
mov
jecxz
mov
xchg
jecxz
jmp
in
xlat
decl
clc
cmp
add
add
icebp
add
add
and
add
ror
rcr
fstp
aam
cmp
lods
jmp
cmp
jle
add
aad
loopne
loope
rcl
cld
ds
cld
xchg
jmp
lock
iret
xor
into
test
shl
clc
cmp
ror
xor
std
xchg
rcr
xchg
test
call
repz
aas
fstpt
hlt
fsubp
addl
movb
mov
fucomi
in
enter
loop
repz
xlat
aad
sbb
decb
aam
xor
xlat
int
ljmp
hlt
lock
mov
mov
and
in
ss
fidivrl
enter
out
loope
out
addl
out
mov
addl
fcomi
fucomip
leave
cmp
icebp
test
xlat
loopne
lret
stc
addl
cmp
in
call
sti
jmp
sti
in
rcr
aad
filds
icebp
shl
loopne
lret
fcmovne
fdivr
lret
adc
flds
call
mov
in
iret
cld
sub
cs
int
fdiv
out
aam
clc
std
sar
loope
rolb
leave
enter
leave
sarb
cmc
cld
cmp
flds
sar
xchg
in
fcmovne
in
in
cld
nop
out
loope
aad
hlt
clc
ljmp
mul
test
loope
loopne
cli
jmp
test
xchg
mov
xor
in
lret
cmp
hlt
clc
loop
in
out
stc
fsub
fisttps
xchg
fiadds
repnz
xor
bnd
ds
rcr
mov
test
xchg
loope
in
icebp
xor
int3
icebp
int3
std
xor
out
repz
in
aad
fcmovnbe
xlat
clc
cmpl
mov
loop
shr
shl
out
fmul
xor
rcl
test
aad
out
stc
stc
in
out
mov
jmp
div
repnz
jmp
sti
shr
lret
add
fld
hlt
aam
mov
lret
lock
in
leave
out
hlt
aad
ds
cmpb
cmpl
shl
in
cli
loop
rcr
mov
lret
xor
fmul
aad
fxch
in
lret
cli
in
shl
push
in
aam
mov
in
aam
ret
jmp
rorx
fdivp
fadd
in
fabs
fucomip
ds
loope
fdiv
ljmp
out
cmp
lret
cmp
loope
fcomi
aam
jecxz
sti
ljmp
addb
xor
enter
aam
adc
iret
stc
fcmovb
out
iret
into
cli
sbb
sub
int
fdivs
fdecstp
jmp
sti
test
in
xchg
lock
aad
cmp
sarl
inc
cld
aam
and
cmc
cli
ljmp
loopne
ss
lock
cmp
clc
into
cmp
fadds
stc
test
call
ret
sti
enter
aaa
into
out
ret
ds
aam
roll
mov
jmp
int3
into
leave
jmp
ljmp
test
aad
fsub
jmp
enter
out
xchg
fbstp
out
loop
clc
cmp
jmp
cli
rol
cmc
repz
xchg
stc
mov
incl
div
in
xor
int
enter
cmp
cmp
in
lret
int
hlt
xor
test
int3
xlat
cmp
adc
jmp
in
les
out
out
in
in
aam
repnz
hlt
ret
out
cmp
stc
out
in
call
repz
test
repnz
cmp
adc
shl
stc
not
stc
mov
mov
fcomip
rcl
jecxz
in
cs
icebp
iret
ret
clc
shl
cmp
repnz
mov
enter
arpl
loope
add
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
jl
adc
adc
add
test
out
xorl
in
out
in
shr
cmp
std
loopne
ret
lea
cld
hlt
out
loope
ret
in
int3
clc
in
lret
ror
in
cmc
rol
ljmp
out
mov
rol
out
xor
fcmovnu
xor
and
fnstcw
in
sbb
mov
cmc
out
out
int3
aam
in
and
loop
jecxz
test
faddl
test
out
jmp
fcmovne
xor
in
ljmp
out
in
in
mov
cmp
ror
ljmp
adc
fiadds
in
aam
xor
cmp
sti
enter
fcomip
stc
cmp
aam
cld
cmc
clc
fadd
int
test
jmp
jecxz
call
neg
ror
loopne
ds
ret
clc
clc
test
ret
mov
int3
cld
mov
into
cmp
fld
fdivp
icebp
cmpb
ds
clc
xchg
out
hlt
div
lret
cmc
loopne
shl
cmp
leave
loop
call
jmp
xchg
mov
rcl
xlat
into
cmc
ror
loop
into
rolb
clc
cld
jecxz
incb
xor
cmp
cmp
aam
xlat
rcr
in
cmpb
ds
and
in
loop
mov
test
fdivr
jmp
imul
cld
clc
fcmovb
ds
stc
cld
mov
leave
ret
sbb
test
icebp
xchg
xchg
in
jmp
out
call
ljmp
rol
jecxz
fmul
jmp
out
shl
aad
stc
out
out
repnz
out
fcom
rorl
incb
mov
in
xlat
stc
xlat
shll
aad
sar
call
std
mov
int
jmp
aas
out
fadd
sti
in
cmp
fadds
xchg
ret
out
xchg
int
out
sbb
xchg
sub
cmp
repnz
xor
adc
mov
in
int3
test
ret
rcl
int3
cmc
cmp
in
call
int
in
test
lret
cmp
rcl
imul
loop
ret
ret
shr
cmc
xchg
mov
mov
test
xchg
ljmp
xor
ss
shlb
mov
xlat
lock
cld
in
xchg
out
xor
lret
in
rol
aas
repnz
loopne
loopne
addl
mov
iret
lret
cli
cmp
fsin
std
call
cmp
iret
add
loop
jecxz
in
mov
ljmp
rcl
cmp
dec
sar
repnz
repnz
fucomip
lret
out
out
in
cmp
lds
leave
adc
cmc
jecxz
ffree
rcl
mov
mul
out
fucomi
loop
shl
in
xor
xor
fdiv
int3
cmp
repz
ljmp
iret
mov
sub
in
shll
cmc
std
cmp
repnz
aam
xchg
sti
push
mov
int3
jmp
mov
enter
out
lock
loopne
aas
repnz
out
aam
call
fcmovbe
int3
fsub
jmp
loop
iret
leave
cmc
repnz
in
ljmp
jecxz
enter
loop
stc
call
cmc
out
call
aad
and
cmc
aad
xchg
add
lds
jmp
ret
shlb
repz
cmp
ljmp
out
cmp
dec
incb
loop
jmp
repz
out
hlt
out
out
into
int
sti
sub
xchg
cmc
orb
hlt
jecxz
aad
idivb
add
andl
add
adc
jmp
rcl
aad
rcrl
fcomi
and
jg
or
jle
out
out
fnstenv
loopne
ror
ror
fmull
enter
sbb
call
xor
shl
ljmp
stc
fiadds
int
jmp
out
lret
mov
loope
jecxz
xor
cmc
cmp
stc
xor
cmc
test
loope
fcomip
aad
loope
jmp
ljmp
jmp
jmp
ljmp
test
out
inc
int
jecxz
ffreep
ror
xchg
sub
int3
cld
int
cli
loopne
jecxz
aad
in
loop
leave
sti
out
fstl
in
repnz
repnz
sti
lock
cmp
cli
fucomi
xlat
loope
call
xchg
xchg
in
test
xor
out
cli
iret
stc
cld
aam
icebp
cmp
ret
loop
out
xchg
mov
jecxz
in
hlt
loopne
ljmp
rcl
fnstsw
in
aad
mov
test
mov
cld
faddl
lock
ss
in
rcl
cmp
rcr
and
rcl
in
lea
fisttpl
in
clc
jmp
out
aas
sar
out
into
aad
loope
fstp
jecxz
lret
jecxz
in
mov
lret
xchg
xor
repnz
out
filds
fadd
sbb
lret
cmp
adcl
enter
cmc
idiv
div
loopne
in
leave
jmp
in
test
orb
rol
aaa
in
aam
fcmovnbe
rcl
sar
mov
lret
cld
into
repnz
mov
aaa
icebp
hlt
ss
icebp
aaa
cmp
std
cmp
cli
sbb
ret
mov
test
lret
iret
rcl
test
mov
jmp
rcr
repnz
stc
mov
fcmovne
jmp
ljmp
sar
enter
rcr
loope
cmc
fisttpl
jmp
call
xacquire
hlt
fidivl
cmp
jecxz
cld
iret
mov
fadds
stc
shl
lret
mov
call
aad
jecxz
jmp
out
cld
lret
xchg
xchg
lock
loop
lds
in
out
aam
int3
fsubr
neg
shl
cmp
fucomp
std
shl
lret
nop
xchg
in
sti
in
cmc
loopne
int3
neg
aam
ffree
sti
dec
add
fisttpl
and
cmp
fcmovu
lret
shl
fildl
aad
fldl
mov
lret
clc
call
enter
repz
call
jmp
xchg
in
xlat
ljmp
repz
out
sub
ljmp
or
iret
ret
jmp
hlt
rcr
repnz
ss
loope
jecxz
enter
jmp
test
loopne
imul
ret
jmp
aam
lret
fcomi
cmp
cmp
fucom
orl
out
xor
aam
shr
xlat
jmp
ljmp
lret
decb
cli
fstp
aad
not
xor
std
not
int3
lret
repz
aad
imul
hlt
repz
flds
out
mov
cmc
int3
ljmp
cli
lret
xor
icebp
aas
lock
fcmove
in
test
xor
cmp
fcmovnbe
rcl
ror
xlat
cld
cli
in
repz
xlat
enter
loopne
ret
jmp
shr
xchg
sub
cmp
out
ror
sar
cmc
rcl
out
ret
in
cmc
mov
fyl2xp1
movl
iret
repnz
lret
ds
loope
out
cmpl
jmp
out
std
lds
xchg
lock
int
jmp
repz
cmc
xor
test
cmp
cmc
in
cld
cli
jmp
iret
out
into
xor
in
std
std
shl
mov
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
xchg
inc
mov
jle
add
adc
mov
test
lret
in
mov
jecxz
and
call
cmp
fcmovnb
icebp
cmp
sar
repz
jmp
jmp
icebp
iret
lock
xor
cli
xor
cmp
fadds
mov
int
loope
mov
and
icebp
xor
shr
fcmovne
cmp
rcl
cmc
aas
hlt
rcr
std
loopne
in
into
out
jecxz
call
xchg
cli
repz
clc
loopne
lret
rolb
cld
mov
fisttpl
in
lret
in
xor
idiv
test
not
call
testb
shr
adc
loop
cli
fchs
xlat
repz
enter
lret
fmull
aam
hlt
repz
jecxz
push
fsubrp
cmc
les
orl
lock
rcr
fsub
fcmovbe
lock
neg
call
cli
in
jmp
int3
in
ret
xlat
fdivl
out
fdiv
cmp
aam
fisttpl
mov
icebp
rcl
in
xlat
aad
call
cmp
loope
cmp
cmp
ret
cmc
mov
in
std
sbb
out
out
icebp
loope
ror
icebp
clc
repnz
aaa
cmp
aas
mul
xchg
aad
call
test
out
jmp
cld
int3
idivl
stc
ljmp
bnd
lret
int3
test
sti
iret
int3
lock
ljmp
cmc
cmpb
loopne
call
aad
mov
rolb
xor
int3
fcmovbe
repnz
jecxz,pt
mov
and
push
xchg
xor
out
fcmovu
das
fcmovnbe
repz
out
roll
lret
sti
loopne
out
ror
mov
loopne
xor
in
out
in
rcr
cld
rolb
aad
test
xlat
fxch
repnz
xchg
hlt
xlat
lret
aad
in
repz
lock
or
loope
leave
xlat
les
cld
leave
loop
xchg
in
shll
fnstsw
roll
fsubrp
enter
ljmp
shll
out
shr
into
lret
hlt
in
xor
roll
clc
out
shr
in
out
les
in
cli
in
ljmp
fcomp
ret
call
ffreep
int3
incb
repz
xlat
repnz
lret
int
xlat
out
out
orb
shl
sti
mov
lret
jmp
into
aaa
int
loope
loop
rcl
aam
mov
imul
in
inc
icebp
xchg
vcomiss
jmp
fcmovne
fidivrs
cmp
cmp
decl
out
mov
enter
xor
lret
fdivs
int
aad
int
std
out
loopne
cld
mov
test
out
lret
clc
icebp
repz
fsub
test
xchg
hlt
call
ror
cmp
cli
cld
cmp
aad
aad
xlat
cld
fiaddl
cld
fimull
shrl
ss
out
cld
ljmp
xchg
fnstcw
stc
and
out
loop
cli
call
sar
enter
out
test
loopne
fsubr
aad
fisttpl
mov
icebp
jecxz
shl
div
ss
in
loopne
cld
hlt
add
ret
leave
imul
in
mov
lock
stc
cmp
lret
aam
roll
fsub
in
enter
mov
xchg
or
xor
shl
cli
les
mov
mov
roll
xor
jmp
idivl
xlat
shl
loop
jmp
xchg
xchg
shl
xor
fdivrs
cmc
sub
and
fsubrp
flds
or
int
aad
das
out
xor
in
repz
shr
cmp
sar
stc
jmp
loopne
and
call
inc
clc
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
cmp
jg
roll
jle
fucomip
ss
neg
into
fsubr
rol
loop
fcmovnb
leave
mov
fcomp
mov
icebp
out
xchg
mov
xlat
aad
stc
xlat
repz
cmp
sar
fildl
in
addb
in
xor
fidivrl
int3
in
sarl
out
sti
aam
cmpb
fxch
out
loope
int3
jecxz
stc
out
hlt
ret
out
divl
repz
sti
aam
repnz
out
shl
xchg
mov
xchg
into
clc
xor
aaa
out
das
lock
aas
test
incb
ljmp
mul
hlt
int3
in
jmp
ljmp
ret
jmp
fadd
lret
out
iret
shl
iret
xor
sti
repnz
call
repz
and
jecxz
out
iret
loopne
in
enter
fsubr
out
sti
sti
out
loopne
cmp
cmc
out
call
lret
loopne
fsubr
fucomip
icebp
shl
or
in
icebp
cmc
iret
imul
call
cli
fcomi
ret
fsub
xchg
ror
shr
xchg
in
int
not
idivl
xlat
aas
idivl
ljmp
int
in
xor
out
xor
int
out
cmp
icebp
add
fcmovnbe
ljmp
mov
xchg
out
aaa
int3
cmp
stc
fucomp
rcl
fdivr
out
rcr
cmc
shl
enter
test
mov
in
cmp
aaa
aad
out
cmpb
out
out
out
out
leave
loope
sti
fsubrp
test
fucomi
sbb
xor
aam
cmc
xor
hlt
rolb
stc
in
xlat
mov
int
repz
in
lret
lret
sti
stc
cmp
cli
out
aas
loopne
out
out
neg
ljmp
leave
cmp
ss
cmp
loope
shl
leave
fdivp
sti
jmp
int
xchg
int3
lret
xchg
lock
icebp
lock
std
xlat
ret
ss
sti
loop
sbb
leave
orl
lret
out
out
cmp
out
cmp
cmp
roll
cmc
in
dec
fst
fldl
ret
icebp
stc
out
aas
rolb
clc
xlat
in
fisttpll
jmp
call
in
aam
repnz
shr
out
fadd
cmp
loope
fiadds
mov
lret
icebp
lret
int
ret
xor
cld
out
shr
rcr
and
fdivp
clc
ret
mov
leave
lea
shl
xor
fildl
aam
aas
aam
lret
call
out
mov
jmp
jmp
lret
fcomip
roll
in
addb
call
xchg
rol
xlat
lock
std
std
cli
roll
mov
fisttpll
aam
xor
std
cmp
addb
jmp
call
call
cmp
hlt
xor
jmp
idiv
addb
xlat
jecxz
int3
jecxz
repnz
jmp
jmp
aaa
cmp
xlat
xlat
std
sti
jecxz
test
into
iret
fiadds
repz
clc
xor
fmul
sar
lock
fiaddl
lret
jmp
call
xor
loopne
xlat
ror
test
mov
out
in
cld
mov
out
out
sar
icebp
fdiv
xlat
cmp
testb
mov
jecxz
out
test
repnz
roll
lret
cmp
iret
leave
in
rcl
xchg
fcmovb
loopne
cmpl
into
sti
icebp
aam
loopne
iret
int3
hlt
out
cmp
cmp
lret
into
icebp
icebp
cmp
fsubr
int3
repz
xchg
xchg
cmc
in
in
sarb
call
in
iret
shl
movb
sbb
repnz
out
fmul
aaa
in
aad
out
hlt
aas
cld
cmp
aam
sti
into
dec
xchg
cld
xchg
std
out
xor
xor
aaa
aaa
rolb
ret
rcr
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
cmc
cmp
xor
dec
in
leave
int
out
jmp
rcl
and
loop
jecxz
clc
fcmovnu
shr
bnd
in
cmp
hlt
fdivrs
sarb
cli
incl
aam
int3
xchg
loopne
fsubp
fistl
xor
fnsave
hlt
cmp
cmc
lret
aas
call
mov
sub
loope
inc
shl
das
imul
aad
rcl
aam
fsubr
lret
fildl
shl
clc
neg
stc
mov
jmp
xchg
xchg
aad
in
loop
cld
aad
loopne
aas
jmp
xlat
rol
cmp
std
out
fstl
cs
rol
cmp
lock
cmp
fcomip
test
aad
leave
shl
enter
cld
jmp
ret
cmp
stc
mul
aad
fst
aad
fdivrs
clc
xchg
repz
test
sti
leave
xor
cmp
loopne
cmp
fsubp
fdivrl
addb
clc
nop
repnz
int
xor
cli
lret
cmp
shl
xor
stc
aam
jecxz
fiadds
loopne
in
out
xchg
xchg
ljmp
xor
loopne
fldln2
repz
sbb
sti
xchg
mov
rcl
out
lock
ror
int
loope
cli
fcmovu
mov
lret
loopne
dec
shl
jecxz
fnsave
repz
int3
out
in
shr
clc
aad
jecxz
incb
mov
loopne
ljmp
ds
lock
sarl
mov
fucomi
sar
and
int
out
cmp
aad
clc
loopne
repnz
fildl
aas
in
test
in
xchg
mov
loopne
test
jmp
lock
ljmp
addb
ljmp
lret
loope
out
aaa
fdiv
out
cmp
sti
cli
cli
cmp
jmp
lret
nop
fucom
mov
out
lock
cs
out
lret
aas
sti
lock
mov
lret
loope
leave
fdivp
in
aad
cli
fcmovnb
cs
fcmovbe
idiv
div
cmp
rcl
in
rcr
sub
xchg
lret
mov
xlat
out
cmc
or
out
fdiv
aam
out
flds
xchg
jecxz
imul
in
xlat
clc
jmp
xlat
repz
test
loop
addb
xchg
ljmp
xor
leave
clc
cli
out
shl
clc
ror
sar
in
or
loopne
jecxz
clc
xchg
lret
leave
sub
hlt
aad
out
int3
loope
lock
test
idiv
jmp
out
loope
out
aam
lret
lock
jmp
repz
cmp
out
cld
test
fdiv
aad
out
fcomip
mov
clc
xor
iret
ljmp
clc
cli
out
adc
xlat
lock
mov
xchg
xchg
mov
das
fprem
in
int3
out
iret
cmp
in
les
loopne
ret
call
jmp
not
hlt
in
xlat
into
int3
fcmovbe
sti
aad
aad
fdiv
cli
out
mov
mov
xchg
cmp
hlt
aam
cli
icebp
imull
aad
std
aas
shl
stc
lock
xchg
cli
lret
call
aam
enter
xor
hlt
jecxz
xor
jmp
movl
sub
cmp
rcl
rolb
add
lret
xchg
xchg
loop
imul
enter
div
cmp
cmp
testl
jmp
ret
sar
int3
xchg
rcr
rcr
in
sarb
aad
out
test
ljmp
iret
repz
ljmp
out
loopne
addl
fcomp
mov
mov
lock
loop
out
aam
shl
cmp
repnz
lock
ds
fcmovu
stc
in
fildl
test
iret
aaa
ljmp
fadd
faddl
ret
mov
ror
sti
std
mov
xlat
sarl
repnz
inc
arpl
orl
add
imul
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
mov
outsb
test
jg
roll
jle
hlt
lock
fcmovnu
stc
fldl
cmp
ffreep
sub
out
cld
jmp
repnz
xor
stc
fdiv
sub
int
cmp
ret
aam
stc
mov
in
mov
ljmp
das
int3
cmp
orl
nop
dec
lds
ret
lret
loopne
aad
in
cmc
test
hlt
testl
ljmp
xor
ss
into
fmul
cmp
sti
sar
fcmove
sti
movb
mov
out
loop
out
out
fcomi
cmp
repz
fsubr
int
mov
jecxz
xor
ret
jmp
out
fucomi
std
jmp
cmpb
in
in
jecxz
incl
xlat
ljmp
ljmp
xchg
test
sub
test
test
lock
neg
lock
cmp
out
lret
cld
fldl
in
adc
test
out
loop
adcb
jmp
shr
fucom
shr
fcmovnb
shl
ret
or
loopne
xchg
fucomi
cmp
sarl
div
clc
testl
into
cli
shl
sbb
jmp
xor
iret
idivb
xor
stc
addb
enter
out
ljmp
ss
enter
rcr
aam
std
fistpll
xchg
mov
fdiv
call
ror
loope
shlb
int3
imul
in
stc
loopne
cmp
addb
neg
sbb
fcmove
std
adc
neg
leave
ret
out
int3
repnz
loopne
aad
fsin
mov
mov
jmp
xchg
sub
lock
leave
fcmovne
cmc
cmp
iret
fstpt
sar
cli
shl
repz
leave
in
faddl
into
lock
xor
xor
icebp
fcomp
cli
xor
fimull
mov
and
jmp
hlt
jecxz
repnz
lret
out
shl
aas
mov
mov
in
clc
out
ljmp
xor
jmp
sar
shll
fsubp
std
stc
xchg
fcmovnbe
cmc
repz
fdivr
xchg
int3
std
in
cmc
repz
shr
iret
fidivs
aam
lock
sti
xchg
sbb
out
mov
mov
into
loope
and
aad
or
fcmovnb
xor
in
shr
in
ret
aaa
jmp
into
jmp
in
out
adc
in
out
fsubrp
call
test
int3
into
loopne
jmp
enter
repz
fdiv
int3
cmp
sar
rcl
in
loope
mov
test
int3
ror
call
repz
icebp
int
ljmp
loop
ror
fdivp
sti
adcl
xor
fcom
lret
repnz
stc
shr
aad
ror
cli
sbb
xchg
in
mov
xchg
leave
in
repnz
aaa
repz
or
test
xlat
ljmp
lret
in
xor
in
divb
loope
add
aaa
lock
xchg
repz
xchg
ret
in
mov
sub
ss
call
cld
into
in
lock
fucomip
xlat
in
out
icebp
mov
mul
mov
idiv
xor
xor
hlt
out
adc
fucom
fadds
loop
in
loope
jmp
cmp
cmp
rcl
out
loope
shl
rol
aam
lret
idiv
fiadds
decl
xor
fiaddl
iret
rol
clc
mov
xchg
leave
cli
adc
roll
xor
cmp
jecxz
hlt
sti
out
ret
ljmp
mov
loop
mov
leave
ljmp
rcl
cmp
sti
incl
lret
ret
fimuls
nop
lret
lock
in
cli
into
rcl
aas
aad
cld
cli
test
stc
lds
xchg
loope
repnz
cmp
bnd
cmp
jecxz
loope
jmp
mov
inc
or
add
add
add
add
or
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
bound
pop
and
mov
roll
jle
sti
test
stc
fpatan
in
int
in
idiv
xor
hlt
rol
mov
fucom
fucom
lret
nop
mov
ret
ljmp
rcr
int
fnop
cmc
leave
sar
out
out
loopne
ljmp
sti
rcl
fucom
filds
icebp
out
fucomip
loopne
cld
iret
stc
fsub
in
out
xchg
ret
into
aam
out
into
cli
jmp
iret
repz
hlt
jmp
out
mov
out
xlat
clc
icebp
leave
lock
out
idiv
loopne
test
mov
out
enter
out
out
out
cmc
out
aaa
fsubrl
cmp
testl
test
mov
leave
cmp
ss
jmp
loop
in
in
cmp
ret
loopne
ljmp
xchg
in
in
xor
aad
cmp
cld
cmc
lds
mov
icebp
rol
leave
aam
int3
fidivrs
fcomi
loop
aam
sbb
ds
mov
addl
cmp
cmp
hlt
into
rcr
aas
call
enter
call
enter
cmp
div
clc
divb
neg
test
sti
cmc
jecxz
out
cli
nop
int
xchg
leave
shl
out
hlt
into
xlat
clc
in
sbb
shl
clc
ret
jecxz
lock
mov
lret
fcomip
icebp
cmp
int3
mov
dec
rcl
cmp
test
icebp
lock
or
mov
out
neg
fsubr
aas
test
xlat
fsubp
icebp
clc
fcomp
in
sti
into
test
shr
shll
jmp
lret
ljmp
icebp
lds
cld
icebp
cmp
jecxz
test
lea
xor
fstp
xor
int3
or
ret
roll
jmp
sti
icebp
in
pop
sub
out
idiv
lret
icebp
lock
hlt
rorb
in
out
iret
idivb
iret
lock
shr
fdivr
loopne
loope
roll
fimuls
xchg
aad
ret
xor
out
fsin
in
call
neg
ds
fsub
stc
nop
fisttpll
ftst
icebp
enter
loopne
div
repnz
in
in
test
xchg
ss
xor
aam
out
ror
cmp
cld
repz
out
xchg
xchg
sbb
rcr
xchg
fiadds
icebp
lret
lret
cld
out
xor
ds
rol
out
repz
mov
int3
mov
jecxz
mov
xchg
rcl
ret
aad
leave
fsubr
not
loopne
sti
call
lret
fiaddl
in
nop
nop
ljmp
xor
cmp
ret
xlat
cmc
std
fcmovnbe
test
test
mov
icebp
jecxz
cmp
xlat
cmp
aas
lock
in
lock
test
xchg
push
xlat
cli
cld
jmp
int3
out
aam
rcr
rcr
faddp
std
lret
out
in
xchg
out
ljmp
rcl
cmp
call
cli
div
fnstcw
clc
shl
les
out
in
enter
in
std
enter
in
fcomi
icebp
aaa
out
cli
loop
xchg
nop
loopne
jecxz
out
test
leave
int3
cli
out
xor
xlat
fucom
out
loope
fisttps
repnz
orb
cmp
lret
fldl2t
cld
int3
cld
shl
aas
ret
fdivr
ret
int
jecxz
leave
xchg
inc
int
iret
ljmp
sti
repz
fdivp
sub
fsubr
xchg
xchg
xchg
ret
fdivr
xlat
cmp
aaa
ror
xlat
loop
enter
orb
in
mov
ss
aaa
xor
xor
fdivrs
aad
loopne
faddp
in
sbb
fsubr
ljmp
out
cs
std
repz
fcmovnb
hlt
repnz
fcmovne
shl
rorb
aaa
repnz
fst
in
ss
sarl
mov
push
jmp
aam
enter
aad
cmp
and
nop
jg
roll
jle
ret
rolb
fldl
enter
into
ljmp
cmc
rol
rcl
xlat
sbb
cld
clc
out
xlat
sbb
xlat
in
fdivr
ficoms
loop
int3
xlat
aam
jmp
shr
aaa
xlat
leave
repnz
stc
into
lret
fucom
mov
roll
repz
shr
std
lock
jecxz
in
shl
sti
inc
addb
mov
stc
enter
out
ljmp
iret
in
mov
loopne
xchg
lock
xor
aam
jmp
call
xor
sbb
jecxz
xlat
lret
call
jmp
ret
repnz
cmp
icebp
ret
fildl
jmp
into
icebp
shl
clc
int
cmp
into
xor
int3
xor
in
shl
loopne
test
sbb
fnclex
xchg
cmc
repnz
jmp
in
fcmove
int3
icebp
aas
inc
lock
vpsubsw
int3
stc
lret
jmp
cmp
iret
call
fdiv
cmp
ffreep
filds
nop
out
sub
iret
call
int
lret
xlat
fld
adc
hlt
aam
jecxz
fsub
faddl
enter
cmp
int
jmp
aam
ffree
aas
fdivrl
sti
faddl
fucomip
in
loop
lock
fxtract
shl
loope
loop
decb
lock
jecxz
loopne
mov
xor
xor
sar
loopne
fnstcw
sarb
repz
ljmp
repnz
out
aam
icebp
call
xlat
in
ret
out
clc
fcmovnbe
jmp
lret
in
aam
mov
xor
xor
xor
cmp
fxch
in
int3
aam
aam
mul
test
aad
xlat
fdivr
int
loope
test
mov
aaa
cmp
neg
cmp
fadd
shr
in
std
out
nop
sti
out
xlat
clc
xor
enter
int3
jmp
shr
repz
loop
in
sti
adcb
bnd
jmp
icebp
cmpb
aad
test
repz
stc
sbb
fldl
aam
jmp
int3
ds
cld
test
idiv
lret
addl
in
sar
cmp
cmp
jecxz
out
leave
movl
ljmp
fsubr
cld
out
jecxz
icebp
ds
fisttpl
icebp
enter
xchg
jmp
rol
xor
clc
sti
fbstp
sub
test
clc
loope
fcom
fstp
movl
test
xor
cmp
fdivrp
ds
mov
lret
out
xchg
nop
in
xchg
jmp
fcom
repnz
fdiv
int
in
cmp
loopne
fldl
cld
hlt
loopne
mov
iret
xor
lock
cli
add
cmp
push
in
loopne
out
ffreep
out
popl
xor
cmc
cld
jmp
repnz
sbb
in
mul
loopne
fisttpl
aad
xor
jmp
sti
cli
aam
cmc
ds
repz
repz
call
test
in
fucomip
fcmovbe
fcmovne
fptan
fnstenv
iret
testl
clc
mov
fsubrp
mov
ror
fldpi
fyl2x
out
mul
std
neg
sar
aas
out
fsubr
int3
test
out
decb
clc
loop
fstp
fcomi
cmc
jmp
testl
xchg
nop
fisttps
leave
leave
ret
xor
loope
cmp
not
neg
ret
in
in
rcr
out
sbb
aaa
jmp
idivb
icebp
sti
rcl
rcl
aas
mul
loopne
jmp
xchg
orl
cmp
shr
out
fidivrs
int3
aad
in
shl
loop
shl
mov
or
test
xchg
nop
shl
out
call
out
cmp
test
xlat
lock
mov
jecxz
int
std
push
mov
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
int3
xor
jmp
fst
lock
jmp
cmp
aad
rol
sub
mov
and
into
xor
std
aad
rcl
incb
loope
loope
loope
loop
hlt
nop
subl
stc
fprem
fcmove
hlt
int3
fsubr
addl
in
xchg
jmp
rcll
aad
call
ds
fxtract
shl
cmc
std
mov
std
cli
jecxz
sar
adc
ror
ret
into
xlat
lret
aad
clc
xchg
addl
jecxz
sti
vpsubsw
sub
stc
in
cmp
aad
into
rol
add
xlat
loop
ljmp
icebp
xchg
out
xor
jecxz
out
not
rcl
xlat
cld
not
repnz
shl
cmp
clc
test
into
xchg
out
icebp
in
adc
cmp
xor
sar
lock
xlat
shl
clc
aam
aam
in
inc
lock
shr
out
sarl
enter
ss
aad
addl
fsubr
sub
incl
rcl
xor
fstp
call
fneni(8087
out
fcmovnu
imul
hlt
jecxz
xchg
lret
lret
fistl
xor
jmp
lret
repz
sar
addb
cmp
fmull
not
lret
xor
lret
shr
into
iret
repnz
rcl
out
jmp
cld
xchg
cld
xchg
test
repnz
jmp
into
xor
fcmovnbe
fnstsw
jecxz
and
or
jmp
cli
mov
lock
lret
jecxz
int3
cmp
loopne
cmpb
les
enter
incb
xor
div
aad
hlt
cmp
aad
cmp
hlt
fdivrp
loop
out
sbb
out
mov
hlt
int3
call
cmp
int
in
fsubrp
cmpb
not
xlat
xchg
fcmovnu
test
xchg
xchg
xchg
out
ret
lock
lock
cmp
idivb
fimull
lret
jmp
in
xchg
iret
in
loope
xor
ret
fsubr
rcr
iret
aad
jmp
repnz
loope
shr
fdivr
xlat
loop
fildl
shl
aam
sti
xor
fiaddl
repnz
fisttpll
in
jmp
xchg
repnz
rcl
in
cld
shll
shr
cld
fmulp
in
shl
std
mov
lock
in
xchg
shl
in
clc
cmc
lock
repz
out
cli
mov
add
out
out
mov
sar
loope
xor
cmc
in
fdiv
not
cld
div
ret
lock
neg
test
fxch
out
ror
test
aam
lret
repz
out
fxtract
sti
ffree
test
and
sub
call
out
icebp
in
lret
imul
sub
out
int3
leave
call
shl
not
in
in
test
jmp
adc
repz
aaa
cmc
repnz
int
iret
cmc
jecxz
ret
jecxz
out
nop
cld
sbb
int3
hlt
neg
in
aad
sti
ds
ffree
out
call
in
jmp
mov
out
ljmp
lret
in
iret
cmp
out
ret
enter
ljmp
ljmp
cmp
cmc
cld
add
ror
fcmovne
out
test
and
lret
leave
fptan
int3
out
leave
dec
fstpt
flds
std
test
in
xchg
incl
clc
leave
shlb
lret
xor
fcomip
aad
jecxz
xlat
or
fimuls
ret
ret
div
jecxz
repnz
xlat
xor
fstpt
repz
xlat
ret
test
mov
xchg
orl
fstp
fcomip
cld
cmp
jecxz
faddl
mov
or
jecxz
enter
into
stc
xlat
shl
lret
in
sti
aas
rcr
in
cmp
lret
lret
mov
repnz
lret
mov
fdivrl
jecxz
xchg
repz
mul
in
jmp
out
xchg
xor
hlt
rcr
fdiv
not
fst
push
loope
neg
mov
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
and
cltd
jg
roll
jle
aam
xchg
loopne
cli
mov
loop
lret
aaa
cmp
fcmovnb
call
ror
xchg
out
addb
xchg
jecxz
lret
int3
icebp
ss
cli
aas
out
rolb
ret
cmp
xchg
shl
lret
leave
in
leave
div
jmp
ret
cli
rcr
stc
cmc
mov
mov
mov
into
jmp
out
cmp
out
sarl
cmp
ret
cli
fists
int3
hlt
shl
lock
int3
clc
pushl
in
lret
fsubr
test
icebp
mov
div
in
fldlg2
mov
out
xchg
fcom
das
sti
int3
xlat
in
ds
ret
fiaddl
mov
aad
mov
std
lret
int3
pushl
bnd
enter
ror
into
cmp
ret
aas
loopne
sti
cmc
addb
sbb
xchg
mov
shrb
in
iret
clc
cs
test
cld
iret
cld
in
cmc
jmp
and
int3
int
int
jmp
repnz
int3
hlt
stc
testl
orl
fyl2xp1
xor
xlat
call
fnstcw
rol
xlat
clc
fisttpll
call
loopne
xor
out
in
in
leave
fxtract
aad
testb
loopne
jmp
out
ror
in
mov
sarl
icebp
fsubr
cmp
addb
mov
mov
les
add
ret
ret
out
cmp
fcomip
rcr
sti
xchg
xor
jmp
in
lret
aam
hlt
sub
xor
stc
int3
incl
testb
call
out
cld
xchg
mov
icebp
out
rcl
fsubrp
rcl
adc
fptan
enter
jmp
sbb
mov
ret
xlat
ret
int3
xlat
cmp
lret
xor
aam
cld
sti
xlat
aas
call
out
jmp
lock
out
xor
cli
cmp
aam
flds
ffree
mov
stc
lret
xchg
xchg
jmp
ret
lret
cmp
adc
fcomp
loope
mov
int3
int
orb
lock
icebp
xor
fninit
loop
incl
loope
xchg
icebp
repz
loop
jmp
sub
not
in
fmulp
std
sar
fnstsw
test
sub
rcr
lock
mov
repnz
fcmovnbe
aad
out
fucomip
sub
jecxz
cmp
cli
loop
ljmp
jmp
call
xor
cmp
cmp
lret
clc
cmp
jecxz
call
std
ljmp
mov
repz
cld
xor
cmc
into
loopne
jecxz
shl
mov
sub
loop
das
aam
fmul
jmp
sar
int3
lret
cmp
icebp
out
mov
fcmovb
xchg
mov
out
dec
shl
int3
lret
aad
fnstcw
sti
cmp
add
clc
fmul
cli
fildl
into
repnz
cli
out
out
stc
in
int
into
cmp
ret
aam
xchg
mov
fucomip
ljmp
out
cmp
cmp
not
xchg
fldl
in
test
shr
icebp
xchg
icebp
aad
xor
jmp
rcr
ret
fisttpll
jmp
stc
movb
ret
idivb
shr
out
icebp
leave
shl
loope
icebp
addb
fdivp
addl
cli
idiv
in
iret
lock
imul
loopne
into
in
cld
ret
enter
xor
lret
aad
in
out
lret
rolb
fcom
addl
loop
in
loope
cs
loop
in
ljmp
lds
fsincos
in
cli
sub
adc
cmp
out
out
cmp
xor
lock
lock
out
sub
lret
int3
aad
sarl
cmc
hlt
hlt
loop
cmc
enter
lds
rorb
iret
into
xor
jmp
enter
fmul
fnstcw
or
add
jg
roll
jle
out
lock
ds
aad
repz
loop
stc
cli
and
fld
loop
or
jmp
xor
sarb
aad
addb
clc
vpminub
call
int3
fcom
leave
in
xor
fdiv
cmp
loopne
repz
aam
or
fmull
xchg
repz
lret
lock
cmp
ds
in
sbb
icebp
out
fucomip
in
xchg
lock
aam
in
xor
hlt
int
leave
leave
fldz
aas
loopne
out
aas
fisttpl
in
loopne
xchg
shl
out
int
iret
sti
xor
out
fldl
fndisi(8087
cli
mov
out
out
clc
idiv
cmp
cmp
lock
jecxz
test
out
mov
jmp
enter
lret
xchg
repnz
les
in
in
jmp
fnstsw
fst
out
ds
mov
leave
fucomi
test
xor
cmp
not
cmp
icebp
aad
rol
ljmp
loope
test
repz
clc
fdivrp
cmp
incl
xchg
cli
std
leave
in
repnz
lock
loop
repnz
cmp
fcmovnbe
xor
cli
cld
hlt
mul
out
nop
in
std
xchg
leave
in
rcl
cli
aaa
inc
ljmp
out
ret
shl
mov
loope
in
fbstp
test
ljmp
flds
repnz
clc
fmull
cmp
icebp
into
fmul
call
lock
repz
repnz
test
sar
lret
int3
push
leave
leave
aaa
cli
out
fnstsw
cmp
repnz
fst
repnz
loop
xlat
fcmove
xchg
ljmp
aaa
in
repnz
testl
ljmp
stc
lret
orb
ret
out
cmp
loope,pt
out
incl
fcmovbe
ret
jmp
xchg
jmp
cmp
std
sarl
xor
aam
addl
rolb
repnz
xor
in
out
shr
call
ret
aas
fcmovb
sti
jecxz
in
addb
icebp
out
into
fsubrp
out
fcmovne
int3
fmul
out
clc
repnz
fxch
std
ret
leave
nop
mov
fbstp
shlb
rcl
xlat
leave
out
cld
iret
addl
roll
loope
loop
repnz
into
in
cli
cmp
fsin
lret
fidivrl
neg
loop
shl
in
stc
cmp
testl
call
ss
ljmp
mov
loopne
cld
kmovw
loop
into
add
out
aad
sti
cmc
fucomi
int3
sti
stc
test
xlat
out
xlat
fucom
mov
int
incb
lock
fsubr
cmp
ds
fidivrs
in
lret
inc
xchg
shr
lret
iret
out
call
leave
stc
hlt
cmc
fcmovu
aam
lock
movb
in
incl
ret
lret
repnz
stc
repnz
in
lret
cld
jecxz
cmp
fildl
icebp
xchg
in
faddl
not
out
fistpll
repz
aam
xor
out
in
test
mov
aaa
jecxz
hlt
int
aaa
ss
cli
not
cmp
std
add
mov
sbb
orl
neg
clc
lret
std
loop
in
lock
filds
iret
incl
jecxz
shl
int3
clc
call
and
fiaddl
aam
xlat
in
in
in
int
into
out
repnz
sub
icebp
fmul
into
aam
jmp
loopne
out
xchg
clc
int3
std
jmp
test
out
rcl
ss
lret
sar
sar
cmp
ret
loope
repz
jmp
into
ljmp
xor
enter
jmp
in
ds
loope
xchg
cmc
cmp
int
loope
out
xlat
xor
ljmp
aad
inc
mov
in
movb
shrb
add
imul
enter
fst
ffree
and
dec
jo
aad
ficoms
mov
jle
dec
loopne
xchg
into
lock
divb
sar
cmp
loope
into
loopne
xchg
fildl
lock
int
xor
sar
cmp
leave
int3
icebp
cld
cmp
cld
cmp
aam
ret
fildl
in
das
ret
lds
sar
out
std
ds
cmp
sar
in
xchg
sti
fchs
frstpm(287
test
hlt
jecxz
mul
repnz
cmc
ss
ljmp
stc
in
mov
jmp
call
test
aaa
repz
out
fidivrl
aad
ret
rolb
xchg
fsub
xchg
fsubrp
adcb
aam
repz
cmp
cmp
lds
enter
xchg
rcl
ret
pushl
in
xlat
out
repz
fdivr
std
fld
mov
out
loope
nop
out
shl
out
ret
cmp
out
lock
loop
cli
ret
cmp
test
loope
nop
into
int
icebp
xor
std
out
loope
aas
stc
loope
fldl
loopne
addl
repz
out
fdivr
ss
rcr
cli
xchg
fdecstp
rol
test
in
rcl
jecxz
xchg
hlt
ljmp
xor
xor
xlat
or
fxch
fisttps
int
call
cmc
ret
fsubr
xor
rcr
stc
std
cmc
cld
cld
stc
xchg
ret
into
lret
jecxz
mov
enter
xor
ljmp
cmp
fcom
fdivp
rol
mov
fdivr
xchg
int
aaa
enter
fdivp
push
repz
cld
fcmovnb
fadd
cld
out
out
pop
xchg
jecxz
repz
jmp
sarl
aas
into
out
add
loop
enter
mov
fucom
fildl
jecxz
cmp
fdivrs
cmp
and
flds
mov
mov
loopne
aaa
int
int
cmp
faddp
rol
aad
in
test
fildl
addl
imul
fcomip
clc
div
iret
addb
leave
aad
lock
icebp
test
int3
out
ret
aad
loopne
jmp
ds
movl
fmull
xor
into
in
shl
ss
ret
ss
cmp
fcomp
out
mov
loop
xchg
mov
jmp
aam
fdiv
aad
mov
loopne
call
xchg
test
call
lret
neg
in
rcl
loop
sti
out
std
out
shr
rorl
shl
hlt
iret
cmp
in
addb
repnz
nop
lret
jmp
in
shr
cmp
std
ss
out
cmp
faddp
jmp
out
xchg
lea
xor
repz
cld
lock
fcmovnbe
stc
aad
cli
jmp
in
call
into
fmul
jmp
lret
cmp
rcr
aad
aad
xchg
sti
ffreep
loope
ljmp
cmp
ds
rcl
aam
aam
leave
iret
xchg
lock
fcomp
enter
loope
clc
iret
iret
xchg
std
fsubp
icebp
xchg
addb
repz
jmp
aad
fstp
aam
aam
cmp
out
lea
in
lock
in
shr
in
cmc
in
cmc
int3
shl
clc
xchg
aam
jecxz
enter
mov
repnz
shl
cmp
hlt
xlat
ror
loop
cmc
iret
repnz
cli
fcmovb
xchg
clc
ljmp
call
aad
lock
clc
icebp
cmp
repz
adc
loop
out
nop
repnz
xchg
out
cld
shr
leave
cmp
test
cmp
fcmovnbe
fsubr
loope
xchg
call
fsubr
out
into
ljmp
fdivrs
icebp
enter
ret
cmp
loopne
sub
ljmp
enter
cmp
lret
iret
cli
cmp
shlb
add
arpl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
xchg
fcomps
jle
add
ds
sarb
loop
fcmovb
mov
fdivrp
icebp
out
out
call
aad
sti
cmp
icebp
iret
std
in
cld
stc
hlt
xchg
jmp
in
repz
das
rcl
cmp
iret
clc
in
fmull
int3
out
xchg
jmp
shrl
iret
sar
jmp
int3
stc
rol
cmc
sarl
repz
in
fucompp
ljmp
jecxz
int
clc
fcomi
test
loope
sti
icebp
sar
cmp
cmc
orb
xchg
mov
int3
ljmp
hlt
aaa
out
fidivrl
xchg
aam
mov
into
xchg
out
std
mov
mov
lret
rcr
out
fidivrl
shl
iret
out
sti
addb
xchg
mov
test
out
rol
icebp
fcomip
fcmovu
cmp
ror
ret
xlat
iret
shr
int3
jmp
les
int3
fcmovne
lret
fucomi
shr
idivl
in
cmc
mov
std
fldl
loope
leave
fdiv
sti
into
ror
loop
sti
ret
fldl
aam
mov
out
xchg
cmc
aam
xor
xor
xor
cmpb
rcl
fsub
rcr
loope
xchg
in
call
shr
int3
repz
das
ret
rcr
cs
fcmovu
shl
fldl
jecxz
testl
or
xor
in
sti
repz
cmp
cld
repz
stc
jmp
mov
fsts
mov
int3
lock
mov
cmp
addl
xchg
out
aad
loop
repnz
into
icebp
fdiv
cmp
ret
fcmovnbe
out
fcmovb
stc
fmuls
lret
out
out
mov
clc
jmp
call
cmp
out
cld
rol
cld
fcomi
loopne
out
fucom
out
nop
test
repz
aaa
int3
xor
push
shl
addl
fcomp
mov
hlt
iret
leave
in
fucomip
cli
jmp
xorl
jmp
in
ljmp
shrl
jmp
xor
fnstcw
lret
out
div
cmp
mov
fcmovne
xchg
mov
lret
loopne
icebp
xor
xor
fdivrl
int3
xlat
in
xchg
xchg
fdivrp
in
loop
addb
aaa
cmp
icebp
cmp
cmp
ret
loopne
sbb
test
adc
in
mov
in
iret
cmc
jmp
aad
sti
icebp
leave
adc
or
cli
lock
hlt
out
les
sti
fcomi
in
jmp
icebp
cli
rcl
enter
fistl
and
shll
xor
fcmovnbe
mul
filds
fimull
jecxz
ror
lret
jmp
fstp
in
cli
ret
lret
test
call
call
lds
cmp
fsubp
aad
out
out
ret
aas
fdivrl
fucom
testb
loopne
out
loope
xor
xlat
xlat
shl
cld
icebp
rcl
fadd
cmp
ljmp
mov
in
fsubp
repnz
call
neg
addl
flds
in
fisttps
xor
xor
cmp
cmp
bnd
fadds
enter
xchg
loop
clc
fisubrl
aaa
leave
hlt
cmp
idivl
rcr
add
ret
mov
lret
iret
mov
enter
repnz
ljmp
shr
in
xchg
fcmovnu
fmul
in
loope
icebp
incb
lret
in
sarb
in
out
sti
xchg
ds
in
mov
sub
call
clc
jmp
ljmp
neg
cmp
fsub
icebp
xchg
xchg
int3
call
leave
out
xor
adc
shl
icebp
out
cmc
fdiv
loope
jmp
rcr
cs
int
repnz
icebp
cli
ljmp
xlat
les
mov
ljmp
aaa
cmp
add
mov
test
inc
add
adc
movl
add
jmp
aas
aam
int3
aad
lret
fstl
lret
xchg
jle
xchg
xchg
xor
int
aam
fstpt
test
add
int
leave
lret
out
in
jmp
lret
cmp
fucomi
out
repz
fldl
stc
in
fcomip
jmp
enter
into
int
xor
out
aaa
int
test
loopne
mov
mov
mov
xchg
mov
cmc
fstpt
div
shl
aam
stc
ljmp
out
mov
out
into
fcmovbe
out
cmc
fldl
aad
ret
test
cli
lea
loope
repnz
sub
jmp
fiadds
loope
in
stc
test
mov
adcb
xor
shr
flds
repnz
in
test
loopne
nop
aam
out
test
aam
leave
rcr
aaa
cli
cmc
sarb
aas
testb
shr
repz
hlt
out
xor
ljmp
jmp
cld
out
xlat
icebp
incl
loop
cmp
repnz
repz
aaa
in
cmp
jecxz
jecxz
loope
mov
in
xlat
call
cmp
jmp
cli
out
std
cmp
xchg
xchg
jmp
icebp
xchg
in
out
jecxz
neg
hlt
out
in
hlt
not
icebp
test
in
cli
and
fldl
sub
ljmp
stc
addb
std
fcmovnu
sbb
mov
ljmp
repnz
loope
fsqrt
cmp
sbb
call
mov
call
xor
into
sbb
in
aaa
filds
in
fcmove
icebp
mov
int3
xor
out
idivl
shll
xlat
in
mul
add
jmp
jecxz
movb
adc
xor
fxch
shlb
cmc
out
leave
sti
in
loope
out
cmc
addl
loope
out
icebp
shl
ss
cmp
leave
fdivrp
fdivrs
fsub
testl
xchg
xchg
mov
lret
fnstenv
out
jmp
fucomi
cld
and
ds
hlt
test
leave
iret
in
ljmp
icebp
ljmp
std
xor
jmp
xchg
out
in
out
out
in
in
aaa
in
fcom
sar
cmp
fucomp
cli
repz
call
fxch
int3
sti
call
call
cli
flds
addl
fimull
xchg
mov
xor
iret
enter
repnz
cmp
aam
addb
loope
ljmp
fidivl
fcmovnu
cmp
out
ljmp
sbb
aam
sub
std
jecxz
in
xchg
loope
icebp
out
stc
iret
in
sarb
cmp
test
jecxz
loope
xlat
out
cli
lret
jmp
ror
in
ss
fcomip
xor
loope
ffreep
vshufps
fsub
fnclex
mov
lret
in
repnz
xor
adc
in
jmp
jecxz
fildl
xchg
cs
loope
int3
in
xor
aad
cmp
xchg
xlat
jmp
ljmp
int
not
clc
into
aaa
ss
aas
sti
rol
xlat
out
add
call
loop
faddl
shr
out
aas
loope
aas
cmp
rol
out
cmc
in
lret
test
enter
xchg
xchg
int
repnz
cs
lret
in
fdivrp
sti
aad
xchg
hlt
hlt
ljmp
in
test
shl
jmp
ds
test
cmp
cli
out
int3
mov
shl
jmp
iret
sub
shr
clc
lret
lock
cld
mov
into
jecxz
adc
repnz
xlat
sti
cmp
fidivrs
iret
cmpb
lock
leave
loop
xlat
xchg
sti
and
mov
iret
shl
hlt
sar
hlt
xor
ss
xor
xor
bnd
and
add
add
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
mov
add
imul
roll
jle
cmp
rcr
jmp
mov
ret
leave
lock
repnz
shl
aad
lock
in
roll
ror
cmp
in
hlt
ss
ret
mov
std
enter
xchg
repnz
jecxz
ret
shl
out
lret
cld
aam
xchg
rorl
stc
jmp
leave
in
aad
in
out
xlat
shl
clc
loopne
cld
neg
cld
fdivr
ljmp
in
stc
jmp
div
imul
cmp
loope
ret
loope
cli
fucomi
xchg
mov
xchg
adc
not
std
xor
cmp
rorb
out
stc
cli
out
xchg
ljmp
out
aad
out
cmp
jmp
rcr
repz
out
in
mov
iret
xchg
iret
jecxz
mul
cmp
in
ss
cmp
iret
icebp
rol
fcomip
rcl
int3
vaddsubps
xchg
fucomp
filds
call
cld
aas
shl
sti
sar
mov
aad
test
test
in
ror
mov
out
cld
vpsubusb
int
fxam
fcmovnbe
out
rcl
cmp
fisttpl
fst
into
lret
in
enter
adc
in
fst
out
test
in
repnz
int3
jecxz
lret
in
out
xor
stc
loop
aas
loop
mov
cld
iret
cmp
xchg
ljmp
aaa
in
cmp
sar
fcom
repnz
aam
fsub
in
test
lret
xchg
mov
cmc
imul
in
in
fcomip
cmc
sar
rcl
in
loop
enter
xchg
dec
ror
in
in
aam
incl
ds
iret
cli
sar
loope
movb
in
repnz
shlb
into
lock
fimuls
mov
mov
xor
shr
cmp
ds
fcomp
cmp
loop
rcl
lret
stc
in
fmul
xor
xlat
rcl
repz
int
and
testl
fsubrp
int
lock
fnstcw
in
int
aaa
std
xlat
stc
rol
icebp
rcr
in
aam
lret
enter
addb
fld
icebp
repnz
fld
cmpb
div
lret
orb
out
shll
in
mul
icebp
into
sbb
jecxz
icebp
repnz
sar
int
stc
test
call
ret
jmp
test
cld
stc
std
ret
fcom
idivl
ljmp
std
jmp
enter
into
imul
cmpl
loope
fneni(8087
mul
orb
roll
lret
cld
lock
int3
cmc
roll
inc
loope
test
fists
cmc
out
cs
lock
cmp
cli
xor
out
mov
clc
fcmove
mov
xchg
in
in
vpsubd
sti
xor
out
test
loope
jecxz
xchg
rol
hlt
cli
mov
clc
xchg
repz
clc
iret
in
ss
aaa
loop
shl
cld
hlt
cmp
out
out
ljmp
sub
in
ljmp
fcmovnb
hlt
shr
std
loop
clc
mov
mov
call
lret
fcomi
int
loopne
leave
fdivr
rolb
mov
lret
jmp
clc
clc
in
call
das
into
out
int3
lock
cmp
or
out
sbb
stc
xchg
mov
addb
enter
fcom
sti
cmp
sti
repz
mov
test
loop
icebp
loopne
cmp
xchg
jmp
call
xor
clc
lock
les
out
hlt
xchg
mov
ret
xor
cmc
hlt
hlt
cmp
out
cmp
hlt
shl
jmp
xchg
jecxz
test
jmp
jmp
f2xm1
ljmp
xchg
sti
jmp
leave
out
in
popl
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
dec
push
roll
jle
repnz
cmp
loope
ds
fiaddl
jmp
aas
sti
into
out
test
aam
out
xor
les
rcl
loop
not
aam
cli
ljmp
xchg
lret
imul
fsubr
repnz
icebp
loope
out
test
mov
addl
out
fxch
aaa
clc
sarb
sub
mul
fsub
vpaddusb
fstp
addb
in
xor
aas
idivl
sti
fucomp
test
lret
ret
xchg
test
cli
int3
leave
icebp
enter
cmp
div
addl
mov
shl
jmp
hlt
shr
stc
std
fnstcw
aas
cmp
lock
or
fnclex
add
lret
jmp
cmp
fsubrp
lock
icebp
cli
mov
lret
jecxz
mov
repnz
repz
in
cmp
out
repz
std
ret
test
jmp
orb
shl
leave
iret
fdivr
ds
mul
fldl
in
mov
out
in
fdivr
aad
cmp
fmulp
cld
adc
fcmove
sar
cmp
neg
fcomi
add
repnz
aam
divb
ret
out
cmc
fucomi
fsub
repnz
loope
loop
loopne
ret
lret
mov
icebp
adcl
xlat
ret
into
fxam
clc
fcmovne
lret
cmpl
lock
leave
ret
imul
ror
mov
roll
aad
enter
rcl
cmp
div
hlt
in
aad
fmul
enter
fcomip
add
loope
cmc
fdivrp
frndint
jecxz
fld1
loop
mov
mov
clc
mov
xchg
nop
mov
shl
jecxz
lret
into
fdivrp
xorb
neg
test
loope
in
lret
mov
in
shl
xor
repnz
testb
in
decl
call
clc
hlt
enter
cmp
loop
rcl
rcl
test
aas
loope
leave
mov
das
xor
enter
aaa
fdivr
shr
cmc
fcomp
fdivrl
test
mov
adc
xor
cmp
adc
sti
neg
adc
hlt
loopne
lret
test
lock
mov
jecxz
cmp
sar
repnz
ror
repz
nop
loop
test
aad
les
lock
repnz
ds
sti
jecxz
fdivr
aas
mov
out
fucom
xor
fucomp
ss
loope
repz
loopne
mov
fiaddl
int
enter
mov
jmp
loop
lret
enter
loope
jecxz
fcomp
fcomip
test
pause
repz
cmc
repz
icebp
in
ror
ss
rcl
in
cmp
orb
ror
aam
in
sub
iret
into
cmp
sti
loopne
repnz
repz
int3
int3
incb
nop
sub
int3
shl
out
repz
repnz
fcomp
xchg
clc
sti
mov
lret
aam
loop
shlb
in
out
das
rcl
out
fcomip
roll
testl
mov
int3
xchg
fdivrs
cmpl
clc
loope
icebp
fidivrs
test
loop
addl
cld
xor
test
xor
int
test
call
cmp
leave
cli
loop
cmc
cmp
mov
fmuls
xchg
int3
addl
ror
cmp
cmp
sbb
fidivrl
int
cli
cmp
stc
xchg
iret
sub
in
ljmp
in
ss
cmp
bnd
loope
std
aam
lock
fucomip
call
ljmp
cmp
cmp
cmp
aam
std
xchg
and
adcb
xor
iret
icebp
shl
fdivrp
out
fistpll
shl
in
xor
rolb
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
in
in
iret
out
std
not
icebp
cmc
cmp
neg
stc
repz
shl
call
cli
xchg
in
out
xor
sti
divl
out
cli
repnz
les
jecxz
lret
and
lea
cmp
repnz
aas
shr
loop
sti
in
xchg
sti
leave
mov
xchg
std
out
test
in
clc
in
out
fcom
out
cld
inc
idiv
call
add
rorb
jecxz
out
xlat
out
in
int3
leave
cmpb
rcl
cmpb
test
loope
mov
fstl
iret
neg
jmp
idivl
idiv
adc
aad
clc
aad
iret
icebp
incl
out
out
int3
cmp
int
repz
cmp
sti
icebp
repnz
sub
out
mov
shlb
out
aam
ljmp
clc
xchg
int3
stc
in
mov
xchg
out
aaa
sub
fdivrp
int
iret
loopne
loopne
enter
jmp
in
rolb
les
loop
cli
into
jmp
iret
cmp
xchg
std
mov
int3
fiaddl
mov
jmp
out
icebp
fcmovnbe
cmp
icebp
shl
loopne
movl
adc
aaa
test
divl
cmc
stc
rcl
sbb
sti
aad
faddp
leave
fiadds
and
in
clc
cld
out
cli
cmp
repz
sar
mov
out
icebp
jmp
loopne
aam
xor
out
jmp
loope
testb
std
out
into
in
enter
ror
repnz
lock
enter
fndisi(8087
repz
repnz
mov
neg
cld
fimuls
lea
cli
clc
out
idiv
sarb
idiv
leave
xbegin
mov
icebp
loop
repnz
xor
shll
rcl
cmc
out
lock
into
int
hlt
orb
out
fisttpl
xchg
shr
cmp
aam
idivb
xlat
sti
std
test
faddp
repz
jmp
test
lock
ljmp
iret
stc
cmp
fdivrl
cmc
cmp
stc
loope
test
cld
adcl
in
hlt
cmp
in
repz
iret
cmc
xlat
fnstsw
loop
test
in
int3
xlat
ss
imul
jmp
fcmovu
out
flds
out
lds
out
and
repz
cmp
aas
int3
shl
fistpll
xchg
xor
out
mov
in
int
fimuls
divb
jmp
sti
div
int3
out
aam
stc
in
cmp
mov
fsub
jecxz
ficoms
call
stc
repz
ss
leave
fcmovne
int3
lock
xchg
mov
aam
fsubr
call
icebp
cmc
jmp
ret
jmp
mul
fneni(8087
fcmovne
frstpm(287
aas
hlt
lret
in
mov
or
loop
sti
xor
into
out
call
xor
loop
les
clc
out
icebp
mov
shll
lock
out
int3
cli
stc
loop
hlt
fcomi
mov
faddp
jecxz
test
nop
jecxz
out
nop
in
aad
shl
in
ror
sar
in
fld
in
sbb
test
rcr
and
fdiv
out
iret
iret
lret
aas
in
test
shl
xchg
ret
lret
out
in
leave
loope
out
das
not
xor
jmp
and
cld
cmc
std
in
in
fadds
shll
iret
cmc
ret
lock
cmp
ror
jecxz
loopne
cmp
test
out
lret
mov
jmp
jecxz
cmp
inc
icebp
int3
cli
loope
aad
out
repnz
mov
jecxz
rorl
xor
cmp
repz
cmp
in
mov
call
in
icebp
repz
icebp
cmp
aam
sar
cmp
cmp
rol
hlt
aad
sbb
xchg
loop
xchg
out
iret
xor
xor
fstp
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
or
jp
or
jle
rolb
stc
rcr
fcmovb
mov
jmp
sar
iret
jmp
loop
cmp
int
aas
jmp
incl
faddp
int
int3
sti
lret
fmulp
test
sub
dec
shl
fdivp
imul
cli
jmp
mov
mov
addl
rcr
aam
aam
cmp
cmp
xlat
incb
fld
out
vpsrlq
aam
repz
lock
std
aas
add
fsubp
jecxz
mov
sbb
fneni(8087
in
or
call
cmc
in
jmp
cmp
rcl
out
enter
xchg
in
mov
shl
int
into
in
aad
cld
cmp
fprem
fcmovbe
rcl
leave
ret
cmp
xchg
loope
in
xchg
xor
jecxz
out
in
in
call
aad
mul
stc
mov
aad
fucom
les
leave
ljmp
out
loop
aas
out
cld
fucomi
and
sti
out
out
or
fpatan
jmp
leave
cmp
cmp
cmp
and
movb
mov
int
xor
cmp
ss
cli
ds
repz
fsub
test
incl
mul
sub
shl
cmp
test
ffreep
aas
lret
push
int3
orb
in
jmp
lret
repz
ds
ds
aas
fcomi
ffreep
xchg
loope
aad
xor
fdivs
out
ss
fdivrl
cmp
out
test
out
xchg
out
mov
fcomi
jmp
jecxz
xlat
xor
ljmp
ret
jmp
out
loope
int
ret
jmp
stc
aaa
std
and
in
test
cmp
out
leave
jmp
jmp
mov
int
shr
iret
cmp
std
in
hlt
ds
jecxz
fiadds
xlat
in
int
std
loopne
jmp
lock
aad
xor
ljmp
clc
aam
cmp
hlt
std
fisttpl
int
lock
xor
mov
fcom
cmp
out
fdivp
shl
out
cmp
ffreep
sti
in
in
in
loop
xchg
hlt
shl
clc
cmc
cmp
ljmp
clc
clc
fcmovb
xchg
in
loope
mov
jecxz
xchg
xor
clc
lret
testb
inc
mov
in
mov
addb
out
cld
int
aam
test
hlt
div
clc
fildl
loopne
sub
int
sti
cld
cmp
jmp
shl
movl
fldpi
xchg
into
shl
out
out
into
xor
lret
int3
sti
fcmovbe
repnz
cmp
jmp
addl
leave
not
iret
cmp
hlt
cmp
aas
cmc
icebp
cmc
aad
std
jmp
xchg
xchg
enter
lock
iret
ljmp
loopne
add
fdivp
xlat
xlat
in
std
mov
rolb
test
clc
leave
lret
cli
rcr
loop
call
mov
out
cli
cmp
ret
lock
lock
repnz
clc
loope
jmp
stc
in
lret
repz
xchg
rcl
xor
int3
aam
fstp
int
ret
rcr
not
loopne
leave
lret
test
mov
loope
shr
xor
int
repnz
out
in
loope
ret
mov
xchg
hlt
lock
sub
iret
hlt
xor
xor
int3
iret
cmp
fiadds
lret
fucomi
in
xchg
loopne
ljmp
cmp
sti
cmp
in
cmc
out
cmp
fadd
repnz
hlt
fsubp
into
flds
int
xlat
neg
iret
in
lret
aad
int3
out
and
jecxz
fld
ret
mov
icebp
ljmp
loope
lret
repz
aaa
xor
sti
iret
repnz
les
clc
into
fcmovbe
out
aad
rcl
fsubr
cmp
test
inc
cli
cmp
enter
into
leave
mov
je
mov
xor
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
out
mov
neg
out
cmp
aad
repnz
jecxz
movb
sti
xchg
into
rcr
lock
ljmp
sar
jecxz
cmp
mov
fimuls
int
int3
ror
shr
ds
fyl2x
add
fsubrp
cld
fisttpl
lea
jecxz
icebp
fmul
rcr
fcom
inc
icebp
cld
test
mov
and
clc
out
fcmovu
aam
ljmp
adc
jmp
loopne
ror
into
shll
out
int3
in
lret
fndisi(8087
repnz
sbb
loopne
fsubr
test
std
out
mov
xor
fcmovne
jmp
xor
orl
lret
out
test
shr
ljmp
cmc
rcl
dec
fdiv
out
xchg
lock
testl
out
shl
icebp
push
fnstsw
addl
rcr
in
cli
fmul
out
xchg
icebp
in
cmc
lock
fucomi
shl
xlat
ds
fneni(8087
test
out
adc
mul
lock
iret
ljmp
rcl
hlt
fcmovu
mov
mov
rorb
xor
int3
sar
in
out
loop
out
fsub
decl
in
ror
fnstcw
rcl
jmp
stc
cmp
fcomi
aas
fadd
aam
mov
iret
nop
xchg
in
xchg
ror
sar
sti
rcl
cmp
cmp
les
mov
out
int
jmp
test
cli
in
in
repnz
loopne
rcr
fcmovne
loope
mov
mov
jecxz
int
lret
jmp
loope
ds
not
rcl
sbb
in
ljmp
shl
cs
in
cmp
stc
std
aam
in
jmp
xchg
rcl
repz
lret
loopne
int3
in
repz
in
xlat
imul
orl
cli
in
lret
leave
sti
xlat
repz
xlat
fdiv
repz
and
test
mov
leave
mov
fcomi
call
aad
out
in
fildl
jecxz
aad
inc
cld
in
lret
mov
mov
xor
fsubp
testb
shl
rorb
nop
rolb
repz
leave
enter
aas
out
cmp
test
ret
sti
shl
loope
test
shr
incl
fcmove
rcr
shl
jmp
f2xm1
out
rcr
fdivp
in
loope
jecxz
xchg
icebp
mov
out
lret
idivl
in
lret
fidivrl
int3
lret
cmp
loope
cmc
in
out
imul
lret
in
loopne
leave
xchg
repz
shr
in
int
ds
aad
cld
cmc
ret
fiadds
jecxz
in
xlat
enter
clc
iret
xor
aas
fsub
aas
aas
loop
clc
fxch
rclb
lret
xchg
fabs
ret
xlat
int3
cmp
aam
xor
cmpb
call
loopne
cld
test
mov
cmp
in
lock
loop
hlt
ljmp
jecxz
out
repz
in
hlt
lret
das
fdivrp
ljmp
xchg
jmp
jecxz
xchg
mov
dec
ret
lds
fcom
ljmp
cmc
repnz
test
mov
ror
xor
icebp
fcmovnb
fld
adc
mov
into
xchg
mov
out
fcmovb
cs
cmp
not
jecxz
fucom
in
xlat
test
jmp
xchg
repz
loop
in
aam
cmp
clc
lds
xchg
leave
mov
icebp
jecxz
xchg
loopne
into
loop
fcomp
fmul
sar
aam
loope
out
clc
cli
aad
into
in
in
in
movb
xor
icebp
out
out
fdivrl
fcomi
neg
mov
mov
mov
mov
xor
add
jmp
ror
rcl
mov
xchg
xlat
scas
inc
jg
roll
jle
rol
inc
in
mov
xchg
test
loopne
shl
icebp
in
enter
xor
rolb
lret
cmc
mov
mov
stc
sti
xor
cmp
lret
out
cmp
sub
fsub
rcr
fadd
sub
lret
xchg
into
shl
repz
neg
stc
in
loopne
in
repnz
fldlg2
jecxz
fstl
xor
enter
out
cmp
cmp
shl
out
xlat
out
xchg
mov
loope
jecxz
in
cmc
repz
cld
call
out
jecxz
call
out
rcl
jecxz
int3
repz
out
iret
shl
rcl
add
adc
ljmp
hlt
out
jecxz
xlat
jmp
idiv
ds
cmp
mov
loop
out
leave
int
aam
out
shl
stc
sar
sti
cmp
fcomi
icebp
fld
out
mov
loope
in
in
call
test
in
lock
lret
xlat
int
rcr
aam
cmp
fcmovb
std
loope
xchg
shr
icebp
ret
aaa
std
sti
xor
clc
fcmovbe
clc
or
sti
cmp
fsub
mov
call
call
xor
hlt
or
clc
test
lret
mov
out
out
mov
fsubr
test
sub
in
lret
fucom
iret
fistpll
rcr
icebp
std
enter
fcmovne
or
mov
aam
rcl
shl
cmp
testb
fcmovnbe
enter
iret
lret
xchg
fcomp
out
cmp
cmp
sar
lock
rcr
repz
mov
popl
in
cmp
not
aas
div
sar
in
leave
mov
fsubr
xlat
loope
addl
into
aad
repz
hlt
int3
fadd
out
rol
cmp
clc
mov
les
sub
out
lock
fnop
test
rol
adc
mov
out
stc
lret
in
ret
int
aam
ds
lret
out
fdivrl
int3
repz
shl
clc
ftst
sbb
or
rcl
xchg
xlat
fcom
fildl
not
cli
xlat
fdivrl
jecxz
jmp
mov
loop
lea
aad
aam
ljmp
movl
in
xchg
std
in
rol
ss
stc
in
incl
aas
loopne
test
loop
nop
fucom
mov
mov
iret
jmp
xor
xlat
int
repnz
int3
cmp
cmp
add
rcl
xchg
mov
xchg
test
rol
aad
fptan
lock
cli
test
loopne
cmc
shl
cmc
jecxz
lock
repz
mul
xlat
lock
in
fxch
ds
ret
cmp
push
loop
xchg
xor
leave
into
int
test
in
in
lock
int3
lret
and
fucomip
divl
ror
rcl
cmp
jecxz
cmp
clc
mov
mov
rolb
aam
shr
ss
cmp
cli
in
jmp
and
rcl
cmp
sti
lds
cmp
stc
sti
fcomip
cmp
addb
fcmove
cli
test
test
cmp
cmc
ljmp
std
loop
mov
shr
and
cmc
into
xor
xor
div
loopne
std
xchg
stc
ds
and
out
out
int3
fcmove
aam
lret
ss
out
repz
out
out
jmp
int3
mov
test
cmc
out
loope
out
jmp
shl
lret
aas
cmp
sar
mov
in
out
loop
mov
iret
repnz
shl
xor
cli
loopne
loopne
repnz
fucomip
mov
xchg
xchg
into
mov
mov
and
leave
cmp
out
fadds
fcomip
rol
hlt
mov
fucomip
jmp
test
int3
xchg
mov
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
mov
add
jle
add
lret
rcl
fxch
loope
sti
fsub
roll
in
lock
xor
sub
shr
cli
out
jmp
int
cmp
cmpb
sar
les
int3
out
icebp
shll
lret
loop
xor
in
xorb
xlat
faddp
stc
shl
rcr
loopne
test
int3
sub
cmp
in
aam
in
shll
in
sub
ds
inc
in
test
loopne
xlat
shr
sti
cmp
xor
test
sarb
repnz
cmc
shr
out
jecxz
enter
in
int
repnz
in
out
enter
lret
cmc
rolb
stc
rcl
stc
mov
fsub
rcl
fisttps
int3
out
ljmp
rcr
jecxz
sti
ret
enter
in
leave
cmc
rorl
cmp
hlt
ss
std
cld
jecxz
mul
mov
cld
cli
call
xchg
loop
out
mov
rol
stc
aad
lret
ror
cmp
ret
loope
aam
sti
jecxz
imul
int
repz
iret
call
xor
cmc
jmp
xor
faddp
sti
mov
jmp
mov
shl
xor
ret
cmp
ds
fcom
idivb
std
stc
mov
loop
in
lret
repz
std
iret
in
aad
fsub
repz
jmp
std
decb
int3
sub
sti
iret
repz
fldl
ffreep
sub
mov
loop
cld
repz
cmp
xor
lock
into
cmp
call
rorb
hlt
jmp
stc
lret
into
cmp
xor
cmp
in
loop
rcl
jmp
jecxz
jmp
xchg
cmc
out
xor
xor
fcmovne
loop
addb
ds
cld
mov
shl
into
rcl
mov
lret
sar
ss
fidivrs
cmp
loope
fnstcw
cmp
adc
lret
in
into
in
fiadds
ljmp
loop
cld
fdivr
neg
clc
fmull
cmp
cld
std
out
aad
in
ror
int
out
out
sar
rcl
cld
sti
out
test
ret
leave
ljmp
loop
out
lock
int
repz
ret
fdivr
jmp
mov
incb
sub
out
stc
aaa
out
cmp
cmp
fdivr
vpsubusw
lret
out
sar
roll
das
hlt
cld
out
xor
aam
sar
ret
jmp
xlat
enter
mov
and
in
loop
lock
ds
ss
fistpll
shl
fdivr
loop
filds
loop
shl
iret
in
shll
int3
neg
loop
sarb
test
leave
rcr
test
out
mov
call
jmp
ljmp
rcr
jecxz
mov
test
cld
in
xchg
lret
out
in
aad
jmp
stc
icebp
out
lret
enter
repnz
sar
loope
loope
loope
into
mov
jmp
cmp
in
cmp
cmp
iret
xchg
cmp
jmp
mov
nop
xchg
out
xor
aam
xlat
cmp
iret
cmp
shl
fistpll
sbb
orl
loope
xor
xor
jecxz
leave
lret
cmc
fcmovnu
int3
aad
fsub
mov
ljmp
xchg
xchg
sub
ret
xor
rcl
repnz
iret
roll
jmp
mov
rorb
ret
ss
std
cmp
shl
ffree
cld
cld
mov
out
enter
shlb
cli
ds
fcmovnb
jecxz
std
test
out
fxch
lret
std
in
repnz
hlt
xor
xor
in
xchg
repz
cli
fcomp
jmp
mov
out
iret
xlat
jecxz
lret
leave
in
aas
clc
or
aad
inc
xchg
out
int3
mov
aad
mov
cmp
in
cld
out
aas
rolb
push
clc
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
ret
test
mov
test
in
cmp
in
hlt
rcl
cld
xor
xchg
int
cld
int
rcl
rorl
lret
ror
aam
sti
cmp
out
cmp
fpatan
ret
fisttps
loop
xchg
int
lret
cmc
aas
test
jmp
hlt
rcl
ds
fcmovb
mov
fmul
mov
aaa
xlat
shl
cli
repnz
int3
cmp
test
fdiv
loop
incb
jmp
hlt
lret
repz
call
cmp
stc
fcomip
lock
hlt
loope
testb
cmc
xor
int
int3
fdiv
aad
out
out
test
rolb
xor
mov
in
fiadds
ret
out
into
cmp
test
std
shl
adc
out
cld
int3
xchg
in
aaa
cmc
enter
call
leave
std
int3
fucom
aam
fstpt
test
jmp
cld
iret
out
sar
lret
xchg
cs
leave
sti
aam
cmp
aad
stc
cld
call
fmul
jmp
jmp
loop
xchg
out
xor
hlt
in
cmp
aas
fistpll
fdivrp
std
ret
fsincos
out
lret
enter
mov
shl
jecxz
idivb
cli
fcomi
lret
loope,pt
loop
idivb
test
stc
cld
ds
fucom
loopne
push
in
jmp
cmp
cmp
icebp
rcl
clc
test
cmc
fincstp
mov
mov
aad
cs
ss
xor
div
in
fdiv
shl
fildl
mov
icebp
xchg
out
xchg
xchg
in
cmp
aas
lock
loop
aam
rcl
add
idiv
call
ljmp
cmp
call
shl
ffree
ret
jmp
ljmp
int
test
cmp
xor
cld
fdivl
jmp
into
in
repz
decl
jmp
xor
repnz
in
cld
cmp
fcomi
fsub
fldl
loopne
ljmp
ror
fdivrl
out
fcmovbe
rcl
shl
not
repz
cmc
out
incb
shr
loopne
xor
in
hlt
hlt
xlat
xor
loop
sbb
fdivp
cmp
test
mov
xchg
xor
out
vpmullw
fdivrp
loope
cmp
repnz
hlt
in
int
ljmp
cmc
in
aam
jmp
rcr
std
shl
aas
fsin
loope,pt
jecxz
lret
ljmp
hlt
int3
in
jmp
repnz
out
xchg
loop
test
test
ljmp
clc
out
into
lock
cmp
fucomi
cmp
shl
flds
jmp
xchg
xchg
leave
in
out
cld
fdivr
not
int3
ljmp
call
enter
into
call
leave
xor
lock
jmp
aam
add
cli
ret
jmp
xchg
ljmp
idiv
cmp
repz
ds
sti
ffreep
out
fisttpl
rolb
xor
cmc
idiv
stc
int
lret
ss
jmp
in
addb
xchg
mov
repnz
out
cmp
adc
cmc
repz
cli
xlat
loope
out
shr
jecxz
loop
in
das
cli
out
xor
hlt
cmp
fsubp
shl
mov
stc
fstp
mov
jmp
mov
rcl
icebp
out
sub
xor
std
loop
ret
rcl
loopne
fdivrp
lock
ljmp
aad
fnstcw
out
ljmp
cmp
mov
loop
cmp
loope
cmc
repz
rcr
stc
sar
out
out
loope
cld
cld
repz
mov
xchg
repnz
into
repz
cmp
fcom
rcr
aas
ret
cmp
xlat
cmc
rorl
mov
in
xor
hlt
stc
out
ds
rcr
fcmovnbe
sar
leave
jecxz
mov
bnd
stc
in
in
in
in
aad
xor
add
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
enter
rol
ret
int3
call
xchg
in
rorb
fadd
jmp
out
xlat
out
into
ret
and
cld
loopne
in
faddl
neg
int3
in
not
stc
jmp
loopne
out
loopne
aam
test
flds
xchg
in
int
sti
aaa
out
xor
stc
aaa
cmp
or
sti
fcmovu
out
sti
in
lret
filds
ret
in
neg
iret
aad
in
into
aam
jmp
int3
fcmovb
fmulp
mov
not
loop
cmp
lret
into
cli
int
cmp
rol
xchg
lret
xchg
loop
aaa
shl
aam
cmp
sti
sar
neg
hlt
cmp
aam
in
lret
in
in
shl
ror
int
cli
repnz
shr
fiadds
out
loope
in
mov
int
xchg
aam
into
xor
cmc
in
cmp
lret
int
clc
adc
call
cld
push
cli
mul
add
lret
mov
ljmp
xor
shl
aam
repnz
ret
out
jmp
filds
xchg
into
rorl
in
in
xor
ror
fsub
test
shl
leave
testl
xchg
shrb
int3
out
out
aaa
leave
cmp
in
in
mov
xlat
cli
jmp
fstp
shr
out
mov
leave
jmp
cmp
int3
ljmp
cli
xchg
mov
mov
or
repnz
std
xchg
loopne
imulb
lock
cmp
loope
rolb
testl
jmp
lock
enter
icebp
cmp
aam
out
cli
cld
jmp
adcl
shl
ror
sarl
in
jmp
cmp
lock
jmp
movl
div
aad
ret
not
cld
cmp
fidivrs
cmp
ret
cmp
in
sti
dec
test
xchg
into
lret
hlt
repnz
rcr
cmc
rcr
cmc
jmp
clc
cmp
dec
in
out
int
ljmp
rcl
cmpb
cmp
shl
aad
jmp
idiv
lea
fmulp
loop
cmp
in
xor
and
xchg
out
std
jecxz
mov
icebp
lock
ss
clc
jmp
cmp
out
repz
xlat
ror
xchg
loop
out
std
mov
xchg
int
jmp
cmp
stc
icebp
cld
cmp
repz
icebp
ret
test
xchg
sar
xchg
repz
int
stc
xor
aad
cmp
cmc
cmp
ror
aad
mov
call
call
int3
shl
xor
cmp
int
out
clc
call
loop
call
out
in
clc
loope
cmp
out
into
std
into
fdivr
lock
jmp
cmp
xchg
mov
in
enter
fcmovbe
cmp
cmp
icebp
mul
addb
lock
repnz
cld
in
aam
out
lock
aam
jmp
aad
fidivrs
loop
xchg
hlt
and
mov
nop
xchg
rcr
div
repz
int3
cmp
repz
hlt
fildl
mov
xlat
xchg
in
loope
xchg
shr
loopne
aaa
aam
int3
repz
call
rcr
mul
loop
loop
ret
sub
orl
cs
lret
fcmovne
sti
icebp
sarb
out
hlt
aas
fiaddl
leave
mov
int3
fimuls
repz
out
cli
ret
mov
in
test
aas
sar
neg
idiv
decl
faddp
loope
out
shl
aam
in
cli
cmp
aad
shr
int3
fcmove
mov
leave
cli
mov
cmc
shl
out
sti
cmp
repnz
cmp
neg
cmp
enter
or
fimuls
fyl2x
repz
cld
leave
rcr
idiv
test
in
loop
mov
mov
lock
in
rcl
fcmovnbe
out
enter
out
out
clc
jmp
imul
lret
mov
fildl
adc
jp
jg
roll
jle
jecxz
shr
aam
stc
xor
cs
jmp
int3
repnz
aas
rol
test
div
out
out
out
iret
loope
in
xor
fcmovu
aam
std
ret
repnz
cli
leave
leave
ljmp
icebp
mov
loope
ljmp
in
fnstsw
in
in
aas
cmc
mov
mov
leave
decb
ljmp
cmp
std
lock
cmp
ret
faddp
not
faddl
fmuls
out
loope
loope
cld
rcl
fstp
loope
jmp
xor
incb
mov
loopne
stc
loop
xchg
mov
rol
repnz
std
stc
fdiv
loop
sbb
lock
std
mov
filds
aaa
out
lock
aad
lret
rol
ds
ret
cmpl
sti
ljmp
xor
enter
lret
dec
loopne
fdivrs
cmc
lret
and
clc
nop
out
lret
jmp
xor
imul
in
sar
cmp
fadd
fst
jmp
in
fcomp
fucomip
xchg
mov
fnstenv
enter
div
lret
in
loopne
xchg
hlt
fsubr
lret
iret
mov
int3
aaa
into
out
enter
aaa
xor
jecxz
div
aas
fcomi
fisttpl
fisttps
iret
loopne
sub
xor
div
loope
rcl
cmc
loopne
fsub
jmp
loop
ret
iret
out
lock
lock
cmc
sti
hlt
leave
lret
lret
ds
cmp
xchg
xchg
aam
in
fcmovu
call
mov
shl
iret
fcomi
out
sti
lock
cld
cmp
fucomi
lret
mov
loopne
xchg
in
in
enter
lock
int3
in
fsub
jecxz
ffreep
shl
loope
in
lret
mov
ret
cmp
cmp
out
int
fsub
neg
fst
std
in
in
in
loopne
lock
ret
into
jmp
repz
sarl
fdivp
in
hlt
fmul
fcmovne
out
lea
test
jmp
iret
cmp
jmp
aaa
test
fimuls
in
enter
fmulp
xchg
jecxz
enter
int3
in
std
in
shr
out
and
icebp
aas
fcmovu
fucomi
int3
ljmp
mov
xor
lock
ror
fst
int3
rolb
cli
cmp
jmp
jmp
repz
hlt
lock
in
hlt
std
std
out
fnstcw
test
cld
repz
in
mov
fptan
jecxz
xchg
mov
imul
ret
stc
fmul
fsub
out
ret
clc
out
call
idiv
mov
rolb
cli
out
ljmp
std
ds
test
std
out
jmp
cs
aad
fstp
fdivr
aam
stc
xor
fdecstp
int3
xchg
mov
xchg
loop
loope
xor
shl
fsub
ljmp
jmp
vpmovmskb
in
repz
iret
jmp
icebp
xor
leave
cmp
cmp
aas
cld
aas
test
mov
cld
loope
into
xchg
xchg
in
in
shlb
jmp
lret
hlt
addl
ret
nop
repz
call
stc
aaa
out
loopne
cmp
into
add
add
mov
in
repz
out
fcmovu
out
aam
enter
fsubp
sti
cmc
mov
std
neg
mov
mov
mov
aad
lret
out
idiv
cmc
int3
fdiv
loop
aas
inc
xlat
out
mov
xor
sar
lea
aad
xor
lret
loop
fdivrl
sbb
out
cli
out
roll
int
xor
int3
fdivrs
aaa
rcl
icebp
ret
in
testl
icebp
xchg
call
cmp
rol
shl
stc
aas
sti
out
out
fcmovu
or
lret
nop
in
out
xlat
das
icebp
cmc
repz
loopne
ror
sar
aad
sar
mov
fildl
nop
in
xchg
fmul
jmp
in
cmp
into
sub
loop
mov
jmp
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
xrelease
leave
xchg
cli
jmp
out
enter
iret
lret
rcl
adc
test
in
fcoms
out
loope
cmp
cld
cmp
lret
in
loope
cmp
cmc
aad
sti
idiv
stc
loope
in
xchg
in
lret
jmp
aam
out
xlat
into
int
loopne
sarb
mov
ljmp
and
jecxz
jmp
in
les
in
jmp
enter
lock
cld
ds
cli
aas
testb
xchg
lret
addl
out
iret
leave
fcomp
inc
filds
aad
neg
inc
mov
rcr
push
xor
clc
loop
into
jmp
cmp
cmp
idiv
clc
cli
jmp
fistl
repz
jmp
cmp
aad
lock
aas
and
jecxz
aad
fsub
fldl2e
out
std
icebp
test
repz
out
xor
ss
call
aad
icebp
hlt
cmp
xchg
repz
cld
fsubr
lret
out
in
rol
loopne
out
out
cmp
aad
icebp
cmp
add
leave
out
call
mov
jmp
hlt
xlat
ljmp
loope
repnz
loopne
ljmp
out
jecxz
or
int3
ss
lds
cmp
fprem
int3
loopne
loope
out
lret
cli
mov
xlat
nop
test
xor
in
aam
call
out
shl
out
repz
shr
lds
xchg
aam
xor
icebp
cmp
cmp
ror
stc
std
lock
loop
test
xchg
decb
shll
loopne
ljmp
loope
fldl2t
cld
leave
adc
mov
xchg
aaa
loope
sarl
lret
std
bnd
int
mul
ret
sar
rcr
int3
loop
enter
mov
out
cmp
xor
repnz
aas
jecxz
repz
sub
xchg
loop
out
cmc
lret
shl
test
lock
or
xchg
clc
ret
test
in
sti
loope
jmp
loopne
in
in
repz
in
out
iret
neg
aam
stc
or
fmuls
mov
fsub
out
hlt
call
out
xor
cmp
cmp
fadd
call
aad
in
xor
into
int
and
repz
das
repnz
repnz
sti
cmp
rcr
ret
rcl
enter
jmp
loope
loop
out
sti
out
lret
cmp
clc
cmp
cmc
sti
rcr
fiaddl
in
and
imul
lret
in
leave
aam
clc
into
loopne
mul
cmp
xchg
neg
cmp
std
orb
in
in
aaa
int3
cmc
xlat
ljmp
aad
into
cmc
rcl
shl
aam
flds
in
xchg
nop
rcl
lock
xor
enter
sti
fsub
hlt
fcmovnb
repnz
filds
xchg
cmp
jecxz
test
loopne
aam
divl
out
cmp
lock
fmuls
mov
lock
jmp
test
in
ret
das
call
fadd
mul
roll
mov
repz
call
xor
icebp
vmovq
imul
ret
shl
cmp
in
aad
clc
jmp
int
ficoms
call
cmp
ds
fld
shr
out
mov
in
loop
ljmp
fmul
into
aam
in
jecxz
testb
in
mov
mov
aad
jmp
sub
in
aaa
shl
out
cmp
stc
out
out
in
loopne
fcmovne
into
ljmp
clc
shll
ror
jmp
xlat
icebp
icebp
jecxz
xabort
fiadds
leave
cld
repz
iret
cmp
sar
ror
repnz
cmp
test
dec
mov
xchg
adcb
ss
out
cmp
fcmovbe
aad
in
roll
int3
shr
ror
xchg
rcr
call
out
cmp
call
xchg
xchg
xchg
xchg
ljmp
sti
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
into
leave
leave
fidivl
hlt
loopne
sbb
ffreep
xchg
repz
xchg
in
jmp
mov
in
in
rol
out
fdecstp
sar
test
out
icebp
loopne
fdivp
fildl
repz
shl
in
int3
shr
cmp
in
loope,pt
icebp
lock
hlt
xlat
xchg
cld
fcmovne
popl
into
xor
fdivs
out
cmp
flds
cld
repnz
dec
idiv
fiaddl
ret
out
out
lret
shr
loop
fdiv
aad
add
out
fcmovnu
int
mov
mov
xchg
sub
xor
sarl
int3
repnz
jecxz
loope
rol
mov
jecxz
std
jmp
jmp
les
ljmp
xor
jmp
sarb
in
ljmp
xor
out
mul
out
repz
sti
in
icebp
and
hlt
cld
out
addb
aaa
out
ljmp
aaa
ds
loopne
stc
ljmp
in
loop
out
lret
rcr
icebp
les
cmp
stc
icebp
aam
clc
in
testl
sti
lds
xor
stc
out
std
out
ljmp
ret
sbb
aam
fdivrp
jecxz
loope
mov
in
cmp
in
out
faddp
call
repz
rcr
fistpll
decl
jmp
in
repnz
out
cmp
aaa
leave
fst
fadd
loopne
loop
loope
pop
int3
mov
cld
rcl
iret
sub
xlat
lock
lret
out
clc
fdiv
cmc
rol
clc
lock
in
xchg
ror
lock
repnz
cmp
cmp
fdiv
lock
mov
cli
loopne
sti
lea
jmp
aad
ror
in
cmp
int
cmp
lret
jmp
int
xchg
aam
lret
cmp
rol
faddp
call
filds
into
nop
in
xlat
icebp
out
int
cmp
xor
adc
and
int
cmp
cmp
out
call
idivb
cmc
lock
jecxz
xchg
loop
and
test
sti
cld
cmp
xor
out
cld
icebp
cmp
les
loop
lret
sub
sti
out
into
aas
xlat
xor
int3
int3
lock
repnz
clc
not
aad
rcr
loopne
popl
ror
rcr
aam
in
clc
fld
xlat
aam
repz
xchg
out
fmull
mov
test
shrl
lock
fadds
les
repz
faddl
out
in
cmp
xor
cmp
aas
clc
jecxz
shr
loopne
mov
fucomi
xchg
xorl
lds
sti
cmp
int
jmp
xlat
lock
xchg
out
std
jmp
incb
ror
xlat
cli
lds
enter
out
xlat
iret
stc
in
fsubr
std
std
stc
clc
std
out
mov
in
out
xor
aad
cld
cmp
int
faddp
or
movl
icebp
xchg
sarl
xlat
xor
ror
out
icebp
cld
repz
ret
fldl
xchg
repz
aas
loop
out
enter
test
loope
shl
fsub
ljmp
out
hlt
icebp
sub
shr
ds
iret
iret
iret
loop
cli
int
mov
out
das
les
cmp
cmp
cmp
in
test
enter
divb
loop
xor
enter
cmp
fdivr
cmc
cli
sti
hlt
and
fcomip
out
add
test
out
ljmp
xlat
int3
test
stc
test
mov
icebp
sti
filds
lret
out
fcmovne
imul
aas
cmp
vpminub
in
out
jmp
jecxz
lret
xchg
call
lret
rcr
cmp
fadds
addl
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
mov
roll
jle
int3
int
test
jmp
rcr
in
rcl
xlat
int3
idivb
xlat
fneni(8087
sub
test
in
rclb
shr
in
leave
jmp
repnz
out
sti
jmp
fildl
int3
in
das
cmc
ror
fsub
xor
notrack
cmc
lock
stc
out
xchg
into
fcmovu
mov
test
int
in
call
in
call
test
repnz
aad
xlat
xbegin
popl
shl
aaa
in
rcr
xor
xlat
fdivrp
out
jmp
fimull
jmp
ror
cmp
fdivp
ss
xlat
jecxz
test
in
int
xlat
jmp
mov
into
out
lock
shl
shlb
aaa
fsubrp
fnstsw
aad
rcl
fcmovnb
fsubrp
fmuls
std
lret
cmc
in
aad
in
idiv
repz
sti
int
mov
leave
hlt
loopne
lea
vpmullw
fcmovne
icebp
ds
ror
iret
fsub
aam
aad
cli
movb
xchg
aaa
xor
hlt
jmp
xor
aad
std
aad
aaa
std
aas
cmp
leave
stc
in
adcl
leave
iret
test
stc
xor
icebp
hlt
in
idiv
fcmovne
ror
loopne
out
out
lret
fstl
in
iret
lret
out
ror
loopne
fdiv
sar
shl
int3
fmul
loop
repnz
xchg
mov
leave
repnz
std
rol
fcmove
rolb
cli
loopne
xlat
out
ljmp
into
ljmp
lret
cmp
out
int3
jecxz
or
rcl
clc
jmp
xchg
int3
mov
int3
in
out
out
ljmp
aas
imul
sbb
out
stc
mov
loopne
loopne
xchg
enter
xor
aad
lret
aam
cld
test
std
mov
jmp
mov
jecxz
ds
not
sar
rcr
mul
neg
loop
addl
in
stc
icebp
fdivr
fdivrp
rcl
fsub
mov
faddl
enter
leave
cld
int3
cli
xor
out
out
repz
fdiv
fcmovne
mov
ror
repnz
loope
div
rcr
icebp
rcr
aad
cmp
out
in
out
loopne
test
ljmp
clc
into
aam
aas
ds
shl
stc
rcr
mov
test
loopne
jmp
cmp
hlt
fsubrp
int3
shr
lock
loop
stc
fdivr
out
test
lock
xchg
ljmp
cld
fdiv
sub
rolb
jmp
xchg
jmp
aad
loope
cmp
jmp
cmp
not
loopne
fdivr
fiadds
lret
shl
out
mov
mov
in
lock
stc
ss
lock
jecxz
ds
aad
enter
incb
into
in
aam
repnz
int3
fmul
mul
cmp
out
fsqrt
test
test
cmp
call
in
out
lret
int3
leave
enter
aaa
shl
int
fdivr
shl
jecxz
sub
mov
rcl
in
xor
cmp
loopne
int
adc
xchg
test
stc
std
cld
in
int3
rorl
int3
repz
enter
aaa
icebp
leave
rol
aad
idivb
ret
in
in
out
in
test
jmp
lret
lock
out
jmp
into
hlt
fdivr
in
cld
mov
hlt
fucom
test
jmp
int3
fcmovne
out
aaa
int3
loope,pt
shl
ror
cmc
bnd
enter
nop
lea
lret
ret
xor
lret
cmp
fidivrl
in
fucomip
test
jecxz
loopne
xlat
out
test
loop
call
xor
jmp
shr
in
lock
out
div
in
lret
jecxz
enter
lret
into
jmp
cli
aas
cmp
std
out
out
fisttpll
fnclex
std
xchg
out
clc
jmp
out
clc
repz
cmp
test
leave
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
test
addr16
push
add
in
std
std
sti
ret
call
shl
ljmp
std
nop
int3
xchg
loope
shl
int3
xor
fsubr
cmp
xor
in
shl
cmc
call
clc
lea
shl
aaa
aad
xor
rol
cmp
cmp
xlat
out
xchg
in
mov
sub
ljmp
leave
hlt
neg
ret
faddl
out
fadd
in
in
nop
out
fsubp
enter
lds
out
hlt
fdiv
iret
cmp
iret
out
rol
test
loop
leave
jmp
mov
cld
lret
in
repz
cld
into
into
into
call
lock
sti
les
out
out
loopne
ljmp
ss
shlb
xor
cmp
sar
repnz
test
sti
into
jmp
in
in
into
repnz
sub
xlat
call
xlat
in
hlt
ret
repz
xor
loope
lock
int3
imul
stc
fidivrl
std
cmp
aas
ljmp
xlat
cld
ror
testb
shl
in
nop
cs
call
cld
testl
fsubrp
testl
xor
ljmp
loopne
hlt
in
roll
xchg
iret
ljmp
xor
xor
cmp
lret
fnstsw
fisttps
out
out
aam
out
aaa
xor
ss
jmp
repnz
idiv
stc
int3
out
in
in
icebp
rolb
repz
fcmovbe
out
shr
sti
cli
fcom
fadds
fdivr
stc
jecxz
into
mov
out
repnz
lret
aam
aam
ss
cmp
fadds
incl
mov
shr
jmp
int3
not
shr
rol
fdiv
fidivrs
orb
mov
adcb
in
shl
fdivr
cmp
sbb
flds
cld
test
fstl
aaa
lock
out
clc
out
repz
xchg
loopne
ffreep
call
int
loope
mul
aam
stc
xor
out
cmp
cmp
jecxz
in
fabs
cld
std
jmp
orl
leave
jmp
icebp
loop
aam
xchg
cmc
fcmovnb
in
in
test
out
into
call
cli
sti
call
loope
or
mov
test
ss
xor
sub
flds
ljmp
ror
iret
xchg
les
rcl
out
out
roll
std
repnz
test
jmp
lret
jmp
shr
int
das
out
in
sarb
xor
cmp
out
sub
xchg
rol
shll
fprem1
lret
int
clc
fsin
sti
std
ret
mov
cli
aad
fdivr
jecxz
repz
fsubrp
xor
enter
out
shl
cmp
ret
fimuls
out
in
lock
int
lock
xor
cmc
out
fchs
out
loope
loopne
idiv
hlt
cli
jmp
in
jmp
cmc
leave
aad
iret
repnz
out
cmp
adc
fcmovbe
test
in
out
in
cmp
clc
std
cli
test
loopne
fdivr
ljmp
mov
xchg
fdiv
xor
lret
sarl
jmp
cmc
cmp
stc
test
mov
lret
mov
ret
int3
test
icebp
cmpb
cmp
fcomi
clc
jmp
in
in
repz
out
ror
cmp
lock
repz
leave
xrelease
lret
fdivr
fdivrp
orl
int
in
jmp
ljmp
in
icebp
or
stc
loope
call
into
mov
loope
jecxz
xor
lret
xlat
fcmove
icebp
out
jecxz
clc
xchg
out
xchg
add
int
sti
lret
in
xchg
xor
out
repnz
aam
out
call
fucomp
orb
mov
int3
test
lret
xchg
out
aaa
in
xor
stc
xorl
vpsubw
lret
cld
jecxz
adc
shr
in
jmp
cmp
in
lock
fdivrl
ret
out
mov
mov
fucom
movb
hlt
lock
cmp
fiadds
mov
jmp
jmp
xor
int3
xlat
cmc
in
cmp
shl
fcmovnu
loop
fxam
mov
out
sti
lock
fucom
push
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
insb
jg
push
add
mov
leave
ljmp
cmp
std
sti
aad
ds
std
aam
test
loop
int3
ror
xchg
iret
iret
xor
icebp
stc
testb
out
sti
enter
std
mov
fimull
shl
imul
xor
xor
cld
in
fcmove
hlt
jecxz
repnz
add
jmp
decb
xchg
jecxz
loopne
hlt
out
cmp
in
ds
cmp
push
cmc
mov
dec
faddp
lret
out
loopne
icebp
in
xor
out
xor
test
fiadds
in
mov
lret
fmulp
ret
cmc
lock
hlt
xlat
iret
lret
fdecstp
sti
sbb
in
int
in
or
hlt
xchg
mov
lret
dec
fndisi(8087
imul
loope,pt
cmp
fdiv
fimull
out
out
fucomi
imul
repz
cmp
fiaddl
in
mov
icebp
into
loop
icebp
add
rcl
repz
cmp
lock
cli
std
ret
lock
mov
xchg
xchg
fldl
xor
xor
aam
std
rolb
loopne
incb
out
jmp
int3
repnz
jmp
icebp
imul
test
xlat
cld
fmulp
call
xchg
mov
rcl
int
shl
shr
cmc
out
cmp
int
cmc
in
fabs
xlat
aad
mov
in
in
jmp
in
sub
clc
enter
in
cmpb
aam
in
sti
xchg
ret
sti
enter
orl
into
xor
xlat
repz
fucomip
std
fnstsw
in
xchg
aam
cmp
clc
xlat
xor
icebp
cld
mov
fdivr
in
fdivrs
aas
xor
std
sar
loope
fcomi
cmp
enter
test
lds
cmp
enter
idiv
clc
repz
out
std
ffree
ret
lret
mov
loop
ror
xor
icebp
ss
fcmovbe
call
repz
xlat
test
out
lret
icebp
jmp
aad
loopne
jmp
aaa
fcmovne
out
out
stc
xlat
cld
xchg
neg
loop
clc
out
fcoml
in
cld
lret
cmp
rcl
out
add
repnz
in
fsqrt
fcoml
out
call
out
cmp
iret
icebp
fldl
test
xchg
sub
rclb
ror
cli
rcr
cmp
xor
stc
ffree
mov
out
sbb
ljmp
sub
rcl
int3
sti
rcr
out
fdivrs
loope
div
out
out
loope
loopne
fcmove
xchg
xchg
loope
mov
out
cmc
aas
in
shr
sarl
call
jmp
orb
out
lret
fmul
cmp
sar
into
aad
fistpll
clc
xchg
ds
call
lret
cmp
lea
lock
div
cmp
cmc
shl
cmp
fdivr
div
iret
lret
repnz
sub
rcr
ljmp
ret
rcl
fisttps
lret
int3
xchg
hlt
out
shlb
repnz
into
cmp
fbstp
icebp
loope
idivl
mov
in
or
icebp
loop
xor
int
xlat
rcl
cmp
sarb
test
loopne
clc
hlt
stc
in
int3
in
adcb
in
cmp
out
in
lret
lret
cmp
rol
mov
std
xchg
out
ljmp
aam
out
ljmp
and
dec
hlt
mov
xchg
xchg
loopne
test
fcmove
stc
fcomi
shr
ret
mov
ljmp
rol
icebp
lock
enter
cmp
mov
fimuls
ljmp
stc
iret
xlat
rcr
call
std
in
mul
jecxz
in
mov
mov
xchg
mov
int3
ret
std
aad
fsubr
fcos
hlt
rcr
repnz
aad
leave
out
fmull
in
test
into
leave
xlat
cmp
hlt
fcomip
aas
test
aas
int
icebp
out
in
int3
cmc
testl
div
loop
lret
repz
rolb
mov
fsubr
xchg
std
sub
xor
out
shll
roll
int
ds
stc
fcmovu
neg
fdivr
jmp
incl
out
jmp
clc
jmp
in
aam
sti
repz
sti
fucomi
out
fisttps
iret
cmp
test
cmc
clc
fxtract
cmc
ret
clc
fcmovnu
xor
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
call
push
add
sar
addb
ror
call
icebp
lock
out
ss
shr
icebp
stc
test
out
test
lock
int3
aad
jmp
sarb
loope
sar
shl
cmp
xchg
jmp
mov
fdivs
jmp
fucomp
sub
clc
loope
mov
mov
mov
shl
xor
xlat
iret
into
cmp
dec
cmpb
cmc
rcr
out
dec
test
xchg
mov
clc
aad
xlat
std
aaa
sarl
loop
in
cli
fisttpl
loop
lret
fxch
leave
cmp
out
test
std
enter
clc
jmp
mov
std
into
sub
ljmp
fsubrp
int3
int3
lock
cmp
xchg
mov
int
enter
xchg
jmp
xor
cmp
std
clc
hlt
shl
fst
mov
iret
nop
xchg
loope
xchg
fmul
ss
neg
stc
aam
aas
fcmovnbe
sarb
add
fstp
fdivp
loopne
in
out
mov
sarb
in
sti
shl
rcl
roll
ljmp
fmulp
fucomip
or
in
lret
int
cmp
dec
leave
cmp
aam
jmp
xlat
std
mov
ljmp
cmp
xor
int
idivl
test
repz
out
jmp
loop
in
mov
ljmp
xor
jecxz
cmc
aad
flds
hlt
ret
out
cld
in
or
out
aad
repz
repnz
lret
cli
sti
fcom
fcmovnbe
xchg
xchg
jmp
mov
xchg
xchg
aaa
iret
int
lret
ss
sarl
icebp
ret
fcmovb
sti
cmp
loopne
mov
shrb
aam
ror
shr
shl
lret
cmp
fcmovnu
fisttpll
in
rcr
std
test
mov
jecxz
xor
shr
fnstcw
and
cld
shl
aam
faddl
iret
lret
adc
shl
fsubr
lret
xlat
out
iret
cmp
aam
xchg
loopne
xchg
in
jmp
xor
cmp
aad
aam
in
clc
aam
lock
loope
fcmovne
fscale
xchg
loope
xchg
dec
out
xor
repnz
xor
xor
hlt
cmc
loopne
orl
in
repz
shll
ljmp
cmp
sbb
fsubp
test
sti
cld
fsubr
int3
adc
in
out
out
shll
xor
aaa
hlt
in
adc
sar
fld
cmp
test
mov
rcll
fadd
ljmp
aas
fcmovnbe
in
shl
shl
fistpll
in
in
cld
into
fcmovbe
into
adc
in
lock
cld
into
lock
fdivr
xchg
aas
mov
fsubp
loopne
fucomi
xchg
in
in
int3
lret
xor
clc
int
dec
sti
icebp
fstpt
call
test
mov
xchg
into
loope
test
cmp
rol
clc
fiadds
aam
cmc
and
in
out
repnz
xchg
ss
aaa
repz
aam
cmp
loopne
in
add
sar
cmp
fmulp
iret
test
in
in
cmp
leave
rolb
ss
mov
loope
in
call
hlt
iret
out
in
aad
icebp
iret
aam
aaa
into
fsubr
loopne
cli
aaa
cmp
xchg
loope
iret
in
out
std
in
into
into
ss
xor
fucom
ret
cld
xlat
call
mov
repz
fsub
cli
enter
xor
cmp
cmc
loopne
fadd
clc
in
sti
test
int
xchg
das
shr
clc
cmp
das
aad
rcr
sbb
roll
cli
in
out
out
test
in
into
repnz
xor
sti
fmul
cmc
out
sarl
std
fadd
cmc
fcompp
ljmp
xchg
xchg
icebp
aam
ss
cs
ljmp
incb
in
xchg
fcomp
sbb
test
repnz
call
stc
lock
cmc
and
hlt
aam
std
out
loope
cld
sub
ljmp
aad
ds
ds
fadds
in
jecxz
adcb
test
xlat
lds
iret
div
ret
test
faddl
loope
cld
mov
ljmp
aam
ret
sti
fcmovbe
jmp
ljmp
cli
in
movl
fst
lret
xor
clc
int
rcll
mov
int3
arpl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
aaa
hlt
ds
fst
in
not
fcomp
in
loop
jmp
in
xchg
mov
fcomp
ljmp
hlt
neg
loop
xchg
rcr
in
imul
rcl
xchg
xchg
shlb
xor
out
enter
lret
fidivrl
cld
fcmovb
sti
mov
ljmp
cld
icebp
xchg
cmc
icebp
xor
shl
xor
repz
addl
fucomip
loopne
aaa
cmp
hlt
cmc
fnsave
int
rcr
fincstp
ds
cld
mov
mov
aam
enter
into
call
cmp
xor
shl
fcmove
lret
mov
mov
hlt
leave
ljmp
repz
repnz
inc
mov
jmp
xchg
addb
into
mov
fidivrs
into
fxch
lock
adc
int3
fsubr
dec
shl
faddl
in
aam
cmp
call
shl
aad
cmp
adcl
repnz
iret
sub
fsub
clc
ss
fsubrp
std
incl
sar
xchg
int
test
loope
mov
stc
into
rcr
rcr
aaa
out
aas
xlat
cmp
fmul
lret
int3
out
test
ljmp
xor
aam
fsubrp
lock
loopne
fcom
test
in
mov
loopne
in
iret
jmp
out
lret
cmp
lock
aaa
shl
ret
repz
loop
ljmp
loop
cli
ss
cmp
out
cmp
in
test
fdiv
fsubp
test
int3
in
in
loope
xor
rol
lock
fdiv
rcr
ss
jecxz
fxch
cmp
orl
out
xchg
rol
xor
aad
hlt
cmp
cmc
lret
testb
mov
mov
std
ret
xchg
sar
jmp
hlt
int3
sar
loope
out
icebp
idiv
mov
stc
fmul
loop
fcmovu
fimuls
repz
shl
jmp
sarb
std
enter
leave
notl
test
enter
hlt
cli
in
ds
jmp
ds
lret
and
xor
incb
in
in
sti
cmc
xor
fstpt
cmc
repnz
ret
loop
int
fiaddl
repz
repnz
divl
fld
loope
bnd
lret
lret
std
orl
in
xlat
jmp
ds
out
idivl
rol
std
mov
ljmp
ljmp
int
ror
aaa
cmp
cmp
loope
stc
jmp
leave
add
incl
lock
shl
cmc
xor
in
lock
ds
cmc
rcl
shr
ret
fstp
lret
in
sar
adcb
out
cmp
test
jmp
ljmp
out
out
clc
cmc
leave
cs
std
jmp
fsubrp
cmp
lret
ljmp
xchg
mov
in
int
cli
out
cmp
test
out
clc
jmp
std
ljmp
out
test
neg
test
rol
sti
cmp
in
mov
cli
test
loope
xor
xor
int
aad
shr
cmp
loope
int
enter
out
into
mov
in
clc
int3
shlb
out
aad
cmp
hlt
repz
mov
add
jmp
rcll
into
ljmp
jmp
xlat
stc
cmp
enter
into
xchg
xchg
clc
imulb
xor
xor
xor
int
fdiv
aam
aam
xchg
cld
mov
nop
int3
ljmp
xor
shl
xchg
jmp
int
push
aaa
neg
div
cmp
cmp
loopne
rcr
mul
mov
lea
mov
ljmp
enter
cli
ds
std
or
addl
cmc
lock
iret
flds
lock
aad
aas
loopne
enter
in
xchg
hlt
aaa
xor
cmp
cmc
cmp
add
cmp
jmp
shl
xchg
aaa
fdiv
hlt
xlat
cld
fcomip
cmp
clc
aas
enter
cld
clc
mov
mov
repnz
repnz
aam
fstp
shl
lret
neg
cli
rorb
loop
in
fdivp
and
inc
lock
lods
bound
inc
arpl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
ss
jp
jle
add
not
neg
rcl
int3
int
loopne
out
sub
stc
xchg
jmp
test
jmp
cmp
call
jmp
hlt
adc
sub
jmp
loope
out
out
sarb
repnz
cmp
xor
rcl
hlt
fmul
jecxz
mov
mov
jmp
in
shlb
in
cmc
out
xor
loope
loop
jecxz
iret
aam
repz
test
mov
filds
xor
in
ror
cli
out
ljmp
loopne
std
not
cmp
jecxz
lret
xchg
test
imul
cmp
int3
out
cmp
rol
and
vcvttpd2dq
out
enter
enter
jecxz
ljmp
ret
cmc
jecxz
ret
hlt
fstp
stc
loop
mov
out
in
test
iret
out
jmp
fucomp
xor
cmp
icebp
lret
icebp
cld
repnz
fimuls
sub
xchg
ret
repz
fmul
jmp
sarl
sti
roll
lret
xlat
ret
in
mov
cmc
call
cmp
aas
clc
loopne
out
incb
xchg
loopne
sti
rol
in
jecxz
ret
rol
call
loopne
sti
loop
rcr
loope
cld
xor
cmc
fstp
test
sub
lret
xor
in
cmp
sbb
cmp
fsub
flds
orl
out
cld
fcmovbe
iret
aam
jecxz
out
repz
flds
leave
ljmp
cmc
in
cmp
in
xor
addb
out
cld
sbb
xchg
cli
repnz
xor
cmp
in
jmp
call
xlat
aam
rcr
neg
jmp
loope
out
rorl
leave
in
ss
hlt
ror
cld
cld
xlat
aam
xor
testb
cld
leave
xchg
mov
xor
xabort
xlat
in
call
ds
adc
in
out
mov
icebp
nop
fsub
lock
xchg
sarb
into
fstpt
call
rcr
in
and
test
fimuls
call
xor
repnz
ror
aaa
cli
fcomp
into
rcl
fmulp
test
mov
out
lret
clc
in
clc
lret
cmc
sti
aam
repz
xchg
jmp
ret
lock
lret
out
shl
sarb
faddl
cmc
out
test
mov
call
repnz
jmp
xor
aaa
cmp
out
in
rol
test
call
jecxz
leave
fiadds
in
clc
rcr
in
lret
fdivp
int
rcl
fildl
out
enter
test
repnz
int3
cmp
aas
fdivr
repnz
into
stc
test
leave
jmp
loopne
ljmp
ror
iret
cmp
ss
fld
xchg
loopne
clc
test
ret
stc
mov
repnz
call
jecxz
loopne
ds
cld
xchg
out
call
leave
cmp
into
jmp
test
icebp
stc
mov
call
fucomi
sar
aam
hlt
shl
xor
xor
lret
jecxz,pt
rol
mov
int
rolb
aaa
into
in
xlat
in
lret
lret
lret
int3
lock
std
mov
fiaddl
xchg
xchg
adc
in
in
xlat
cmp
fstp
ss
notrack
sti
loopne
mov
ljmp
xchg
jecxz
loope,pn
hlt
hlt
in
cmp
adc
cld
in
call
int3
lock
xchg
loop
int
out
sarl
out
int
iret
in
shl
cmp
ret
test
jmp
jmp
ljmp
repnz
out
out
icebp
loope
fidivrl
filds
jmp
test
ljmp
call
frndint
lret
mul
loope
rcr
inc
lret
jmp
hlt
call
ret
in
aaa
icebp
aam
xor
sti
xlat
inc
jecxz
jmp
lret
jmp
in
orb
jmp
cld
fdivrp
lock
loope
hlt
xlat
decb
leave
lret
test
rcl
shl
enter
hlt
loopne
shl
repz
aam
loopne
lret
std
sti
rcr
sti
test
int3
rol
sar
std
fcmovu
jmp
ret
hlt
hlt
mov
int
popl
rcl
divl
xlat
in
lret
cmp
faddp
loop
mov
ret
addl
add
lret
push
add
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
xor
jg
jle
add
loopne
loope
cmp
out
fcomp
mul
out
out
fstpt
rcl
rcl
enter
fisttps
loope
mov
lret
cs
lret
call
fcmovu
out
shl
jmp
icebp
out
incb
aad
lret
xlat
cli
leave
cmp
shl
div
vpextrw
clc
in
out
ljmp
loope
aaa
cmp
iret
in
aas
jmp
aam
rcr
aam
enter
mov
lret
out
shr
into
fcom
enter
out
rcr
flds
xchg
out
aam
loope
cld
xchg
fucomip
repnz
int3
lret
xlat
cmc
iret
int3
cld
fidivrs
lret
lret
in
jmp
mov
in
imul
shll
sar
stc
cmp
cli
shl
rcr
sub
shl
xchg
mov
sti
jmp
cmp
ss
lock
aad
loopne
call
mov
aam
repz
out
shll
cs
fnstcw
stc
cmp
aad
filds
ljmp
ljmp
int
out
in
sar
out
loop
mov
test
jecxz
sbb
into
rcl
call
cmp
aam
lret
fnstcw
leave
aam
out
in
out
bnd
nop
int
int3
shr
imul
lret
loopne
test
shr
aad
mov
sti
out
lock
cmp
lock
div
dec
repz
icebp
and
sti
jmp
hlt
in
lret
xchg
xchg
jecxz
out
dec
mov
lret
fcmovnu
jmp
ret
out
testb
jmp
neg
out
fldl
ljmp
cmc
repz
clc
cmp
fsub
cli
inc
cmp
fdivr
lret
jmp
std
in
hlt
mov
aaa
in
les
call
cli
sbb
into
repz
test
cld
fcom
jmp
sbb
in
repnz
enter
repnz
int
int3
cmp
in
std
cmp
shl
out
xchg
xchg
xchg
shr
aad
fdivrl
out
aam
aam
jecxz
iret
repnz
out
test
cld
fsub
test
in
call
shrb
neg
clc
in
out
std
imul
fdivr
loop
into
in
loop
lock
cmp
sti
loopne
aad
aam
sar
out
in
and
xchg
fimuls
sarb
lret
fyl2x
cmp
adc
fsubp
std
shl
rcr
lds
test
repz
iret
sti
cld
aad
loope
cld
test
int3
leave
lret
stc
mov
sti
xchg
repnz
into
shr
not
aam
xor
cmp
stc
sti
cld
cmc
loopne
cli
iret
out
iret
in
loop
enter
cmc
in
lret
sti
ffreep
icebp
int3
xchg
in
sbb
in
out
xchg
xchg
mov
iret
cli
cmp
aam
int
cmp
in
xor
ret
fcomp
filds
jmp
fdivs
fldl2e
in
out
ds
lret
jmp
clc
out
les
cmp
shl
xchg
aam
jecxz
ljmp
not
repz
fcmovbe
fisttps
rolb
xchg
hlt
int3
repnz
cmp
leave
cmpb
out
sti
repz
jmp
mov
out
test
xchg
incb
jmp
in
fcmove
mul
lock
in
into
loopne
repnz
test
nop
icebp
jmp
jmp
imul
hlt
aad
enter
aad
lret
clc
jecxz
rcl
test
in
mov
rolb
sub
aam
fstpt
ljmp
cld
fsubp
jmp
out
mov
in
lea
aad
xor
rcr
iret
rcr
into
repnz
icebp
out
fcomi
mov
filds
loope
lret
out
sti
rcr
in
jecxz
jecxz
rcl
cld
fildl
decl
cmp
shll
aam
int3
rcl
sar
ds
test
neg
jmp
fucomi
repnz
iret
loope
sti
out
out
hlt
ss
cmp
xlat
cli
loopne,pt
aam
mov
into
jmp
divl
jmp
in
cmc
hlt
out
repz
ret
mov
fstp
incl
imul
in
call
stc
ss
sar
mov
leave
addl
lea
fstpt
lock
aam
ds
sti
std
cmp
aad
mov
vpsubsb
fcomi
fsubp
xor
xor
aad
aaa
xlat
lock
jmp
cmp
jmp
aad
aad
aad
aad
push
push
scas
sbb
movl
stc
addl
stc
testl
test
lock
cmp
leave
lret
in
sti
rol
fildl
jmp
fsubp
iret
hlt
ss
in
cmp
aad
cmp
cli
neg
ret
hlt
call
addl
xor
repz
in
out
out
fdivr
iret
xlat
in
test
leave
fmull
lock
xor
out
stc
aas
loopne
faddp
cli
aas
cmc
std
mov
sbb
jmp
mov
loop
lock
out
cmp
in
test
mov
loope
fstl
out
sub
out
hlt
xor
cmp
std
loope
ret
cmc
shl
rol
div
out
mov
xchg
in
xor
into
fdiv
repz
sar
cld
into
aam
test
enter
fdivrp
and
in
xlat
call
out
cmp
lock
int
out
shl
and
jecxz
addl
ret
test
cld
lret
lock
xlat
fucomi
jmp
call
ret
lds
out
icebp
int3
fdivrs
int3
hlt
out
call
fmuls
fimull
aam
ss
xor
int3
out
in
lret
shl
icebp
xchg
jmp
jmp
lret
xchg
fimuls
hlt
mov
sbb
xlat
bnd
cli
testb
mov
jmp
xor
clc
fmul
repz
cmp
hlt
xor
iret
fsub
cmp
fmulp
mov
fmul
and
cmc
out
in
out
fstp
in
and
fadds
loop
icebp
enter
aaa
aaa
jmp
rcl
xor
rol
repnz
jmp
mov
decl
aad
cmp
fadd
into
shll
int3
cmp
cld
cld
fdivr
in
sar
lret
jmp
rcl
icebp
xor
shr
std
loopne
int3
loopne
fisttps
rorl
int
jmp
fcmovnb
enter
leave
cli
into
aad
aam
filds
loopne
mov
xor
enter
xor
ss
in
stc
mov
cmc
addb
xchg
repnz
jmp
xor
into
xor
icebp
in
cmc
iret
call
clc
leave
out
call
int3
das
fdivs
out
ds
cmp
cmp
enter
loop
in
test
lock
test
xor
call
out
enter
cmp
lret
int
out
mov
rorb
xor
int
iret
cld
in
sbb
in
cmc
mov
movb
mul
sub
xor
in
ds
xor
cmp
aam
cmc
clc
rcr
fst
sub
jecxz
iret
into
shl
mov
aam
iret
out
rcl
idiv
lret
sti
clc
std
cld
hlt
sti
vpsubq
int3
in
jmp
out
out
das
cmp
cmc
int3
cmp
lock
cmc
loopne
cmp
lret
lret
filds
jmp
fldz
cmp
lret
loop
call
cli
test
nop
icebp
xchg
iret
lock
push
ljmp
out
std
fnstsw
rcr
sbb
mov
and
out
repz
out
xlat
call
aas
testl
loopne
rorb
aaa
call
out
xor
in
loopne
cmp
repz
ljmp
xchg
int
repz
lret
jmp
xlat
int
xchg
mov
xchg
jmp
xchg
hlt
aad
ret
repnz
ffreep
out
and
repnz
enter
test
mov
mov
in
xor
xor
cmc
fucomip
rcl
ret
xchg
std
test
lock
repnz
repz
clc
add
ds
out
lock
in
fidivl
cld
cmp
out
aam
loop
shl
loopne
stc
jmp
cli
std
jecxz
and
enter
repnz
in
loop
faddl
xchg
hlt
xchg
jecxz
enter
clc
hlt
cld
cmp
cmp
sti
in
cmp
sar
ljmp
jmp
fucomp
mov
call
fistpll
out
sti
cli
in
hlt
fadd
loop
int3
test
enter
lock
loope
in
xor
test
sbb
add
inc
clc
jmp
aas
into
lret
leave
aam
dec
jo
fisttpl
loopne
or
jle
add
test
cmp
out
sar
rcr
clc
fdivrl
in
test
mov
mov
xchg
nop
xchg
test
jecxz
in
lret
cli
or
out
cmp
cli
cld
aas
mul
fndisi(8087
out
std
fsubp
mov
cmc
xor
shr
jmp
lret
ror
cmc
fsubr
ret
mov
mov
rcl
nop
mov
lret
stc
in
mul
cld
cmp
cmc
shl
sti
hlt
clc
in
fdivrs
testb
in
icebp
jmp
xor
fcmovu
fstp
iret
ds
out
ret
test
in
mov
flds
aam
das
call
aad
stc
neg
int
cli
lds
in
out
orb
rol
test
cmp
cmp
fxam
lock
loope
orl
lret
in
das
sub
ss
int
repnz
cli
sti
loop
ret
cmp
loope
testb
addb
sti
cmp
lock
jecxz
fucomp
mul
ret
call
loopne
enter
xor
xor
neg
rcr
rol
in
out
hlt
ror
sub
fsubp
repnz
sub
ljmp
cmp
test
xlat
stc
in
ret
or
mov
fsub
loope
xor
enter
cmp
cmp
incb
stc
leave
jmp
filds
call
fcmovnu
rcl
iret
clc
div
jecxz
test
jmp
std
call
mov
int
call
leave
repnz
int3
cmp
ds
shl
repnz
aam
xchg
loopne
xchg
test
rol
ret
cmp
sti
fbstp
int
stc
aas
hlt
call
out
ljmp
loope
shr
lock
cmp
sti
cli
jmp
and
mov
addl
cmp
out
aaa
aas
lock
cmc
test
mov
mov
out
int
enter
fbstp
clc
in
cmp
jmp
loop
aas
rcr
cli
hlt
fdivrp
test
mov
call
fldz
fnstenv
std
cmp
idiv
test
addb
std
icebp
stc
xchg
lret
fucomp
cmc
xlat
lock
jecxz
cli
sar
call
adc
cli
icebp
clc
ljmp
sti
call
xor
fcmove
aaa
sarl
ret
jmp
sti
out
fildl
lret
xchg
sub
cli
in
repz
xor
fcmovb
orb
in
lea
xlat
repnz
sar
lret
loop
icebp
ror
std
out
testb
call
xor
call
jmp
cmp
rcr
ljmp
mov
icebp
cld
popl
out
repz
cmp
into
push
repz
repz
xor
idiv
iret
jmp
mov
xor
sub
fcmovnbe
aaa
jmp
loope
cli
hlt
lock
filds
out
or
out
shl
cmp
aas
loope
rolb
jmp
fimull
test
xchg
fucomip
in
cmp
lock
cld
fneni(8087
loopne
aas
test
orl
xchg
clc
das
out
repnz
lret
cmp
xlat
adc
stc
cmp
std
mov
test
in
orb
cmp
cli
repz
cmp
out
xchg
jecxz
loop
lret
xchg
shl
shl
stc
idiv
aad
out
into
int
clc
repnz
xchg
mov
jecxz
in
mov
xchg
mov
fsubr
rol
jecxz
xor
enter
shl
xor
in
leave
out
fucomip
mov
and
iret
cmp
xlat
fnstcw
clc
stc
cmp
ret
adc
test
fmuls
loop
out
into
iret
int
aam
cmp
idivl
aam
fsub
cli
leave
fcmovnu
fsubr
roll
call
clc
cmp
loope
cmp
and
fcmovb
in
hlt
mov
loop
out
ljmp
repz
cmp
ds
jmp
test
xchg
nop
test
int
leave
idivb
rcl
and
cld
loope
iret
mov
leave
xor
call
xor
sbb
in
sar
repz
mov
enter
cmc
lret
aam
jmp
std
repnz
jecxz
cli
flds
inc
or
inc
cld
jmp
int3
ret
int3
int3
sahf
pushf
gs
adc
push
add
lock
loopne
ljmp
out
ljmp
loop
cld
inc
sar
test
fsubrp
adcl
xlat
repz
cmc
ss
fcmovnb
adc
into
mov
test
loope
stc
and
int
xor
aaa
hlt
cmc
repz
in
cld
test
shl
cld
xlat
incb
in
in
loope
mul
cli
xor
leave
lock
jmp
fcomip
ret
out
call
ret
xchg
mov
mov
clc
out
ror
in
cmp
ljmp
faddp
orb
loop
and
enter
cmp
sti
into
ret
fst
mov
in
loope
nop
into
sub
shrl
cmp
incb
in
enter
in
fmulp
and
loop
dec
xor
cmp
call
lret
jmp
fistpll
loopne
sti
jecxz
cli
fisttpl
aam
ss
cmp
xor
xlat
test
repz
stc
mov
in
call
aam
ljmp
lret
repnz
and
std
ffreep
in
mov
shll
fdivr
aad
lock
neg
into
jmp
aad
hlt
fucom
cmc
fisttps
loope
xchg
repnz
repnz
cs
xlat
into
fcmove
int3
cmp
cmc
loopne
cld
mov
mov
test
nop
loopne
jecxz
cmp
fcom
cmc
repz
fdivr
out
in
cmp
cld
ret
out
addb
mov
test
lret
fdivrl
in
cmp
icebp
not
addb
sti
leave
test
in
int
out
fucomi
iret
lret
xor
cmp
xlat
clc
xlat
mov
in
icebp
xchg
xchg
int
lock
ljmp
call
loopne
faddl
mov
fisttpl
out
enter
cmc
cmc
fcmovne
cli
fnstsw
into
aam
mov
ret
lret
test
fsqrt
xchg
out
jmp
into
jecxz
int
fdivrl
jmp
std
rcr
cmp
shl
int3
fsubp
jmp
test
fprem1
xor
jmp
rcl
lock
icebp
loopne
cmc
loop
div
fdivr
jmp
ret
jmp
notb
aaa
repz
xor
in
jecxz
xor
sar
test
mov
out
lret
filds
cli
into
xor
imul
sti
in
sti
cmp
and
std
test
xchg
enter
out
xlat
aam
repz
cmp
cmp
ret
rol
fldl
loope
ljmp
repnz
cmp
cmp
cmp
aas
test
cli
jecxz
lock
xchg
loopne
test
lret
xor
lret
aaa
fcmovb
ljmp
shl
hlt
out
imul
ffree
call
jmp
shlb
shr
hlt
fistpll
ds
ffree
repz
roll
mov
rol
out
shl
xor
in
cli
leave
jmp
lret
loopne
jecxz
fcmovu
dec
cld
mov
xchg
xlat
jecxz
cmp
lock
int3
ds
aam
cli
filds
in
int
mov
in
out
cmp
jmp
aaa
in
iret
jecxz
into
xlat
test
jmp
orl
in
rcl
jecxz
idivl
shr
enter
int
fsubp
shr
loope
mov
leave
jmp
adcl
clc
lret
jmp
adc
sbb
out
in
sti
in
in
xchg
ljmp
cli
shr
int
out
cmp
cmp
aas
repz
sar
cmp
xchg
out
xchg
loopne
sub
sti
cli
aad
sub
test
repnz
leave
out
int
into
xchg
divb
int
call
shl
int
out
sti
mov
fsub
in
mov
shl
ljmp
rcl
std
cli
stc
sarb
stc
aam
sbb
xlat
ljmp
fsubp
loop
xlat
xor
shr
iret
iret
idivb
out
addl
xchg
out
xchg
call
xor
call
cmp
in
fdiv
ror
lock
sub
enter
ljmp
aaa
icebp
cmp
xorb
sar
mov
xlat
sbb
iret
call
lock
lret
clc
shl
lock
sti
call
in
xlat
call
cmc
mov
repnz
int3
xor
int
out
sti
sar
rcl
inc
or
out
add
add
lret
into
fst
fstp
bound
mov
push
add
ret
lock
jmp
mov
and
repnz
aad
xlat
lret
cmp
ret
loop
rol
call
mov
leave
filds
out
sub
repz
xlat
repz
fld
fincstp
rorl
out
jecxz
ljmp
xor
into
in
fadds
call
mov
xor
xchg
fisubrs
xor
xor
repz
lock
not
hlt
in
cli
std
mov
call
ljmp
jmp
lock
cld
mov
loopne
sbb
xor
push
clc
iret
xor
repz
ljmp
test
call
jmp
test
jmp
xchg
ret
lock
stc
rcl
cmp
aas
cmc
lret
aad
div
fcomi
les
loop
loop
in
in
aad
stc
out
cld
into
leave
divb
in
div
aad
aad
aam
shl
lret
fmul
ret
jecxz
jmp
not
lock
idivb
fdecstp
cmp
shr
loopne
cld
fchs
call
in
lock
xchg
aad
cmc
in
int3
repz
shl
repnz
jecxz
test
out
fisttps
jecxz
call
fdiv
iret
into
clc
shll
lock
cmp
cli
or
fninit
loope
mov
out
sti
test
or
out
out
call
repnz
fsubp
sbb
in
stc
fdivr
int3
in
nop
xchg
xchg
xchg
mov
mov
jmp
sarl
loopne
fdivr
xlat
hlt
rcr
xchg
fiaddl
incl
cmp
xor
hlt
into
cmp
test
out
loope
out
fucomp
call
mov
enter
out
clc
leave
std
out
cmp
bnd
fst
ffreep
addb
shl
das
test
out
sar
stc
rcl
lret
out
lock
enter
inc
nop
fbstp
lock
cmp
fcmovnbe
jmp
in
repz
fdivr
in
or
rcl
int
sub
cmp
cli
jmp
in
or
fdiv
incl
repnz
and
repnz
rcl
fst
fst
fnstcw
cld
hlt
cmp
ds
or
out
ret
xor
out
aam
not
out
loopne
aam
frndint
fildl
adcb
fdiv
les
cmp
shl
cmp
push
mov
sub
and
sub
lret
cmp
leave
div
jmp
fsub
xlat
cli
clc
cmc
jecxz
std
lret
in
xchg
icebp
xchg
mov
xor
cmp
cld
lret
out
fstpt
cmc
in
xlat
loopne
sub
fstp
ljmp
xor
loop
cmp
enter
ror
and
cmp
xchg
mov
or
iret
jecxz
repz
loope
repnz
xlat
test
loopne
std
fucomi
call
in
icebp
testb
in
xor
fcom
stc
repnz
shl
mov
ret
roll
int
repnz
in
fnstsw
int
std
cmp
xlat
rcr
fstp
in
loope
out
loopne
addl
aad
call
aas
repz
sar
lds
nop
cld
repz
test
in
sarl
into
stc
loop,pt
repz
xlat
call
fucom
fldpi
fsub
xchg
iret
xchg
leave
shl
in
cmc
aaa
jmp
shl
in
loope
lret
enter
xchg
mov
out
loop
cli
iret
sti
cmc
not
jmp
in
addb
clc
mov
int
mov
out
fabs
xlat
out
stc
aam
fsubrp
cmp
repnz
orl
mov
iret
lret
in
lock
stc
adc
cmc
out
loope
cmc
loope
addl
xor
jmp
stc
out
loopne
icebp
sti
iret
cld
mov
into
mov
lret
call
out
repnz
aad
clc
jmp
jecxz
aam
repnz
fucomip
sti
mov
cmc
imul
out
cli
enter
clc
xor
into
jecxz
loopne
fmuls
cld
std
clc
fcomi
fmulp
ljmp
imul
iret
fcomp
shr
ror
ret
cli
xchg
testb
ljmp
lret
lret
ret
in
rcl
rcl
cmp
out
mov
fcmovbe
orl
add
add
aam
rcl
aad
inc
xor
mov
pop
add
add
in
rcl
stc
loopne
fcomip
ror
out
adc
stc
in
repnz
icebp
in
enter
out
shl
cmp
rol
in
sar
jmp
in
test
xchg
roll
xor
cmp
aaa
incb
in
cld
fiaddl
call
mov
fsubp
jmp
imul
jmp
sar
shlb
fsubr
into
aas
cmp
fucomi
shl
in
aas
out
in
in
rorb
ror
neg
lock
enter
out
sub
fmull
int
icebp
addl
in
in
xor
fld
out
int
int3
int
out
cmp
fucom
ljmp
aaa
leave
lret
xor
repz
loopne
test
cli
mov
loop
neg
jmp
jmp
xor
icebp
loope
sar
repnz
xlat
cmp
cli
test
clc
sub
fcmovnbe
shl
sub
sti
fldpi
in
testl
xchg
cld
int
xor
ret
cmp
std
xor
int3
sti
int
loop
out
jecxz
lret
and
mov
repnz
cmc
enter
fstpt
aas
faddp
fsub
cmp
movl
not
out
leave
leave
ljmp
cmp
sti
into
repnz
mov
mov
cs
jmp
hlt
enter
cld
fdiv
std
cli
mov
hlt
ret
out
call
xchg
ret
ror
fdivs
cmp
loope
xor
iret
jecxz
sar
fdivrp
test
lock
int
aam
repnz
hlt
fnop
clc
aad
sarl
cmp
test
jmp
addl
test
hlt
shll
out
cmp
addl
aad
mov
jmp
in
fsubrp
out
loop
fcomp
in
aaa
xor
repnz
sti
fisttpl
int3
ljmp
in
shr
cli
jmp
aam
repz
clc
shl
rol
loopne
ljmp
lock
lock
repz
stc
lock
loopne
icebp
cmp
aad
ret
in
mov
out
hlt
int
das
ret
stc
cmp
rcl
cmp
cmp
test
jecxz
into
mov
enter
fcmovne
aam
shl
aam
test
test
fcmovb
jmp
test
in
xchg
imul
iret
lret
cmc
ss
clc
sarb
std
cmp
and
int3
xchg
jecxz
in
lret
xchg
out
fmul
xor
xor
xor
fcmovnb
ljmp
fcmovne
leave
mov
in
rorb
hlt
int3
idiv
xor
cmp
in
add
or
fadd
out
test
xchg
orb
repz
iret
fmul
shr
int
cmpl
mov
int
xor
xor
cmc
cli
xor
jmp
hlt
cmp
roll
loope
jmp
ljmp
stc
out
xor
icebp
cmp
fucomip
div
out
lret
jecxz
in
in
xor
icebp
icebp
in
cmp
rcr
repz
rol
xlat
call
lret
mov
into
xchg
int
xor
cmp
shr
aam
cmp
int3
cmp
ret
fiadds
lret
int
jmp
loope
ret
out
int3
call
cmp
testb
mov
std
ror
jmp
cmp
in
cmp
cmp
test
test
sub
decb
ror
sub
sub
lock
into
faddl
xchg
clc
hlt
xlat
enter
incb
cmp
leave
xlat
sti
ss
jecxz
int3
ret
sti
jmp
ret
loopne
cld
sti
out
mov
ljmp
aaa
repnz
hlt
in
cmpl
out
leave
clc
in
xchg
in
test
lret
call
into
cmp
ret
aam
rorl
sti
std
jmp
ror
xor
out
lock
ror
in
loopne
loope
repz
mov
test
jmp
enter
jecxz
cmp
in
or
shl
in
fld
lret
in
in
jecxz
lret
jmp
in
shlb
out
cmp
repz
out
call
repnz
iret
sar
stc
xlat
cmp
rcl
lock
clc
les
shl
adc
xchg
call
incl
jmp
mov
fcmovnu
or
sub
adc
add
add
sti
call
mov
in
div
cli
in
out
sti
xchg
std
loop
idiv
fucomi
xchg
sti
jmp
out
iret
fsubr
jmp
ss
cmp
lret
std
fdivrl
aam
shl
enter
out
fdivr
mov
jecxz
aas
shl
call
imul
aam
jecxz,pt
sbb
call
lea
mov
cmc
aaa
xor
aam
cmp
jmp
fldl
ret
loop
fneni(8087
jmp
in
rcl
clc
in
fcom
fcomip
out
cmp
out
rol
fst
xchg
jecxz
fsqrt
call
ror
sti
int3
lret
jmp
shr
lock
xchg
orl
loop
roll
aad
call
hlt
not
ds
mov
dec
adc
icebp
iret
sub
call
clc
ror
aas
cmp
ret
lret
fadds
iret
push
call
sub
lret
xlat
fidivrl
ret
loope
int3
int3
stc
leave
ret
xchg
into
cli
rcr
div
cli
std
aaa
int
ss
hlt
fcomip
cli
cmp
leave
xchg
ljmp
imul
cld
cmp
jmp
rolb
rolb
popl
int3
repz
ret
xor
cmp
call
out
loope
aam
cli
ljmp
leave
jecxz
repnz
mov
std
lret
fcomp
test
shl
fadds
jecxz
sbb
into
int3
mov
not
xor
ljmp
in
rcl
lock
out
decl
shr
iret
jmp
lock
fst
idiv
lret
cld
loopne
cmp
fmul
cmc
xchg
int3
mov
xor
aad
out
ffree
sti
out
cmc
aas
sar
ftst
fadd
stc
idiv
into
loopne
leave
xchg
int
ret
shl
cmp
cmp
cmp
shl
std
addb
fmuls
out
xor
int3
ret
icebp
xor
fcomi
jmp
add
cmpb
ret
jmp
lret
sbb
call
aaa
icebp
int
shl
int
jecxz
lock
shl
loope
in
orl
out
iret
sti
leave
cmp
out
ror
jmp
rcr
out
incb
rcl
fldl
cmp
fdiv
not
out
cmp
incb
cli
fcomp
stc
xchg
lret
ljmp
cmp
shl
enter
aas
ror
roll
cmp
loop
faddl
loope
repnz
div
xor
cmp
lret
fnstsw
int
icebp
test
xlat
ret
rcr
ret
lret
xchg
xchg
ljmp
lret
into
repnz
hlt
sar
mov
out
jmp
in
iret
fdiv
xchg
icebp
lret
jmp
aam
in
lret
loope
sar
ret
repnz
fidivrs
test
loopne
fucomi
out
mov
shl
call
aam
idivl
addb
in
mov
in
fdivrp
ror
aad
lret
in
xor
cld
clc
cld
out
loope
leave
mov
loop
test
loopne
fyl2x
xor
aad
out
roll
shl
aas
fcomip
loop
int3
mov
lock
icebp
cmc
leave
out
int3
leave
repz
fdivrp
test
aas
cld
mov
std
jecxz
repz
xchg
in
ret
shlb
repz
shll
int3
int
cmc
std
iret
mov
shr
stc
int3
fiaddl
int3
not
cli
repz
jmp
fadd
shr
out
cmp
test
adcb
sti
lock
cmp
cmp
lock
loope
loopne
mov
jmp
iret
shr
into
cmp
in
cmp
inc
shl
rol
fiadds
lret
lock
loope
xchg
leave
jmp
fstpt
clc
lret
in
in
fabs
fsub
xlat
ret
int
lret
hlt
xchg
aad
sub
ret
ljmp
aam
lock
in
sar
cmp
les
into
shr
jmp
lock
rcr
stc
cld
or
aas
lds
mov
rolb
call
cmp
shl
flds
xlat
loope
in
testb
loop
loope
iret
out
call
repnz
cld
test
out
faddl
int3
mov
int3
int
xchg
loopne
int3
jmp
clc
fcmovu
into
fucomi
xlat
out
jge
push
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
push
loopne
into
and
jle
add
fsubp
xor
sub
out
xchg
xchg
xchg
jmp
icebp
enter
fmulp
fdiv
cmp
shl
les
nop
in
cmp
jmp
aad
std
enter
xlat
iret
in
hlt
ror
ljmp
in
in
cs
xor
enter
ds
in
sar
cli
les
xchg
xchg
out
out
ret
ret
out
sarb
cmp
repz
repnz
aas
rcl
cli
ffreep
cli
imul
fsubrp
xchg
repz
icebp
lock
out
iret
lret
aaa
lock
leave
call
in
xchg
jmp
shl
enter
ror
out
test
repnz
shr
addl
out
out
das
into
clc
out
test
int
cmp
cld
aas
rorl
neg
test
jmp
ret
leave
fcom
cli
cmp
rcl
rolb
test
loop
loope
out
out
out
xor
in
leave
xor
int3
cmp
sar
fdivrl
hlt
xchg
rcr
out
leave
in
lock
out
mul
xor
call
out
leave
fsubr
or
not
xlat
sti
clc
leave
fxch
lret
jecxz
ror
mov
in
into
cli
xor
out
ljmp
call
out
testl
in
iret
lret
lock
std
lret
fcom
icebp
xchg
out
loope
mov
fcmovnu
fucomp
and
xor
iret
cmc
fucomi
cli
clc
in
sarb
xchg
fdivrp
mov
loopne
out
std
iret
test
lock
not
rolb
out
idiv
leave
lret
hlt
test
mov
ljmp
hlt
aaa
enter
rcl
cli
ds
loop
orl
mov
sub
cmp
stc
in
fdivp
ret
fadds
fadds
int3
clc
lret
repnz
in
sarb
hlt
xchg
repz
mov
mov
loopne
fst
mov
clc
aad
repnz
enter
aaa
fdiv
out
shl
into
mov
repnz
fcos
cli
ror
in
in
out
ret
enter
lret
fldln2
lret
repz
fmull
int
loop
xor
shr
cli
cmp
sbb
not
or
mov
aam
mov
nop
in
fst
enter
xor
ror
repz
out
aad
xlat
aad
ret
in
loope
in
fistl
iret
xor
shll
lret
cld
idiv
sbb
call
testb
in
hlt
call
rcr
fdivrs
idivl
sti
cmp
in
xlat
cmp
test
xchg
loop
cld
xchg
jecxz
xchg
test
ljmp
fiaddl
rcl
fisttpl
cld
lock
rcr
mov
cld
lret
clc
sarb
fld
cmc
stc
test
loop
fisttps
out
loope
xchg
divl
xor
out
cld
sar
in
cmp
shl
in
fld
cli
fldl
mov
xchg
shll
lret
cmc
xor
into
clc
out
stc
faddp
popl
or
shl
ljmp
rcl
cmp
out
cmp
testl
leave
ret
cmc
cli
rcl
lock
cmp
aam
repnz
fcom
call
fmull
das
imul
lret
mul
xor
sar
clc
test
sti
ror
fcmovnb
fsub
or
addl
in
int
repnz
shl
fnsave
repnz
clc
cld
fildl
add
out
fiadds
ret
cmp
aaa
in
cmc
cmp
icebp
lock
xchg
cmp
clc
jmp
in
ffreep
in
mov
call
xor
fdivl
ror
out
mov
out
idiv
in
fcomi
int3
fsub
mov
out
int3
into
in
aad
ds
loop
loop
std
loop
add
call
std
or
int
cld
call
xlat
adc
loope
ds
cld
in
in
int3
loope
xchg
mov
cmc
mov
in
xor
cli
rol
cmp
not
addb
aas
imul
fsubrp
fmulp
iret
out
repz
jecxz
cld
aam
lret
int
shr
loopne
sti
fadd
decl
and
mov
out
in
aad
sarl
loop
hlt
into
cmc
fsubp
adc
into
leave
out
test
shl
ret
lret
inc
mov
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
add
add
repz
roll
out
fcmovu
lret
loope
popl
xchg
shl
in
xor
cmp
shr
xor
test
loope
fidivrs
jmp
fcmovu
out
into
repnz
cmp
xor
roll
cli
mov
fdiv
cmp
sti
rcl
jmp
xor
into
xor
rcl
cli
aad
cmp
cli
std
or
int
mov
fimuls
ljmp
loope
sti
int
rol
clc
in
call
test
rolb
call
aad
out
cmp
test
jmp
loope
addb
test
cmc
shl
in
int
jmp
cmc
shl
in
mov
mov
fsts
out
cmc
vpsllw
dec
fcmovnu
aad
cld
vpaddw
aam
fcmove
hlt
repz
fsubr
out
rol
int3
rcr
icebp
adc
in
fisttpl
jecxz
adcb
enter
sti
xor
sti
flds
out
loopne
std
rcr
stc
aad
out
rcl
loopne
out
lock
in
int3
in
aaa
clc
aam
stc
repnz
aam
rcr
out
incb
in
mov
rcll
imulb
ss
add
ds
in
in
fcmovne
rorb
iret
hlt
xlat
sub
clc
aaa
out
icebp
repz
loop
std
aad
ljmp
or
in
sub
repz
enter
cld
aad
cmp
repz
fmull
jmp
in
mov
repnz
sub
icebp
shr
shl
sti
stc
add
addl
cli
fcmovbe
mov
mov
lret
out
loope
sub
testb
ret
incb
loopne
ftst
fimull
idiv
in
ror
fstpt
int
in
out
repnz
sbb
fiadds
mov
cmc
loop
xor
test
jmp
out
jmp
clc
rcl
aam
aas
fucom
cli
ret
in
fucomp
into
out
int
aad
out
ss
in
shl
jmp
out
in
cmp
fcmovb
testl
jmp
lret
xor
lock
aas
iret
addl
rolb
lret
test
jmp
xlat
fdiv
call
cmc
clc
icebp
rol
aad
ror
jmp
jmp
jmp
out
fldz
xor
out
aaa
aas
ret
test
loopne
addb
jmp
jmp
repnz
xor
das
cmp
fdivr
in
xlat
out
addl
loopne
rcr
xchg
out
cmp
hlt
lret
out
std
icebp
aam
out
std
int3
iret
fnstsw
mov
cli
call
out
sar
xchg
mov
sti
lret
stc
xor
fst
out
xbegin
fadd
in
or
in
sub
int3
into
in
clc
fistpll
aam
cmp
loope
fcmovb
mov
aas
in
loop
in
mov
loop
repz
jecxz
jmp
out
stc
icebp
lret
shl
not
repnz
out
test
fld
xchg
fistl
xor
shl
icebp
rcl
ffree
idiv
cmp
rolb
out
fadd
out
shr
aam
fdiv
ljmp
fcomi
sub
test
xchg
jecxz
xchg
adcb
cmp
shr
cmp
ds
cmp
int
in
shl
shl
out
mov
test
xchg
shl
aad
cmp
int3
cmpb
rcl
in
out
repz
cli
in
fmull
call
ss
cmp
aad
cmp
cmp
rcr
hlt
std
fninit
fadd
or
inc
into
call
shlb
xor
ds
icebp
testb
int
loop
xor
xor
cmc
int
int3
lock
call
cmp
mov
in
stc
xlat
out
out
repz
xor
in
cmp
cmp
add
aam
xchg
fmul
loop
lret
mov
test
mov
fnop
stc
xor
fiaddl
fdivrp
cmc
fucom
fiadds
mov
clc
cmp
in
fidivrl
div
not
in
fdiv
sti
icebp
ljmp
cld
lret
out
into
mov
aaa
icebp
cmp
cmp
loop
aam
jecxz
shl
std
ret
ffreep
fcmovu
fsub
mov
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
xchg
mov
jle
add
std
xchg
and
call
xlat
out
in
adc
xor
aam
clc
in
out
mov
std
mov
adcl
in
divb
les
fdivrp
rol
ljmp
xchg
iret
faddl
ret
shl
cmp
iret
hlt
loope
aam
idiv
cld
hlt
fsub
aad
lret
faddl
int
les
repnz
icebp
repz
cld
jecxz
sbb
fsubr
loop
aas
std
mov
xor
mov
out
out
loope
hlt
int
ss
std
aad
iret
shl
mov
out
fiaddl
loopne
lock
int
xlat
repnz
sti
rolb
enter
aam
and
shr
jmp
jmp
repnz
cmp
cmc
fsub
loop
loop
in
fsubr
jmp
int
stc
cmc
xor
cmc
out
lock
aaa
cmp
and
cli
cmc
ljmp
out
fucomp
out
idiv
aam
lret
loopne
test
shl
roll
roll
out
leave
hlt
int
ss
aas
icebp
call
fdivp
fdivr
mov
frndint
loopne
out
int3
lret
int
in
ss
jmp
xor
stc
clc
testb
std
std
mov
std
lret
out
rcl
ljmp
cmp
fadd
in
cmpb
enter
loop
xchg
xor
xor
xlat
in
lret
loop
loop
loope
aam
sbb
loop
ljmp
lret
div
loope
repz
sbb
in
or
in
or
cmp
lret
iret
loop,pt
std
neg
faddp
xor
int3
popl
iret
fdivp
iret
int
jmp
rcr
mul
out
loop
loopne
test
cmp
mov
jmp
notb
jmp
cmc
inc
jmp
in
testl
clc
fucom
hlt
out
rolb
repz
hlt
int
cmp
repnz
xchg
faddl
xchg
loop
int3
fdecstp
out
rcl
aaa
enter
cmp
cmp
shl
test
lret
mov
aaa
in
aad
xlat
hlt
call
out
shl
shl
xchg
lock
jmp
in
shr
sti
repz
sti
sarb
rcr
aas
cli
cld
mov
aas
std
loopne
out
nop
nop
mov
in
jmp
icebp
sti
rcr
cmpb
icebp
in
out
loop
sti
fimull
jmp
xchg
in
fcomip
out
in
cmc
cmp
das
ljmp
iret
testl
shl
mov
fincstp
shl
cmp
xor
roll
mov
stc
into
sbb
mov
cmc
xor
repnz
loop
lock
loopne
stc
ret
test
in
fcmovne
fdiv
in
out
xor
cmp
lret
call
iret
hlt
ds
fmul
loop
leave
sti
ljmp
rcl
jecxz
sar
fsubr
cld
repz
cmp
stc
shl
xlat
call
jmp
in
xchg
xchg
jmp
divb
aaa
sar
mul
cld
test
jecxz
ljmp
adcb
aam
aaa
lret
and
out
out
out
mov
cli
xchg
lock
sub
cmp
in
cmp
sbb
xlat
test
out
out
in
jecxz
xchg
in
iret
out
rol
sti
enter
xor
aad
cmp
shl
call
xchg
mov
shl
jmp
jmp
cmc
sti
cmp
leave
repnz
call
shl
mov
ss
in
out
rcl
xor
fsub
loop
test
leave
testb
loopne
xlat
repz
aam
ror
fcomp
testb
mov
jmp
lds
imul
sar
leave
cmp
xor
aad
test
int3
in
mov
in
repnz
mov
into
out
xor
not
clc
test
stc
in
aam
sbb
in
call
rorb
lret
into
out
cld
adc
fdiv
push
std
cmc
fmul
mov
int3
xchg
ret
int3
repz
fadds
sti
ds
mov
jecxz
enter
xchg
in
loopne
in
xor
test
roll
inc
mov
add
add
int
xlat
into
pop
loope
das
add
add
aas
fcmovbe
std
mov
in
incb
ljmp
std
lret
repnz
repnz
fneni(8087
jmp
mov
loope
rcl
icebp
das
cmp
aad
div
fucomi
lret
std
fcomp
loopne
cmc
enter
int3
orl
sar
xor
lret
xor
aas
shl
lret
movl
repz
aad
divb
idiv
cmp
icebp
into
xor
aad
shr
cli
not
dec
cli
mov
out
sub
xor
mul
int
test
mov
std
test
orl
xor
ss
idiv
lock
test
addl
sbb
icebp
hlt
xor
lret
fdivs
call
lock
fdivp
jmp
cmp
std
sar
icebp
xchg
shl
cs
lock
out
fdivrp
lock
stc
in
fdiv
cli
std
mov
leave
jecxz
loope
cmc
fisttps
fdivr
das
hlt
in
cmp
fcom
loopne
rol
out
fucom
jmp
mov
cmp
enter
cld
not
fcmovu
ret
repz
aam
xlat
and
lock
lock
not
enter
into
xor
lret
jecxz
out
hlt
repz
incl
leave
out
rolb
hlt
sar
cmp
int
out
adc
loop
loop
in
lock
in
lock
shl
ret
fcom
stc
divb
lds
loop
jmp
out
jmp
shr
cld
cld
cmc
fsubp
ret
out
loopne
leave
fucomp
xchg
loopne
in
clc
lock
in
repnz
lock
loop
repz
add
stc
in
out
incl
lret
out
enter
aam
icebp
out
rol
ror
out
in
ljmp
rcl
out
ss
mov
loope
fldl
out
mov
nop
lret
out
repz
shl
xor
icebp
xor
out
cmc
ds
in
in
in
repnz
fmulp
loope
aad
jmp
in
out
out
ljmp
fsubrp
std
repz
test
fst
jmp
xor
enter
cmp
fmulp
out
fadd
xlat
rcr
loopne
iret
int
lret
loope
aam
hlt
cmp
std
cmp
std
cmp
xchg
loop
stc
aad
mov
test
and
aam
in
into
hlt
cmp
cld
sti
hlt
orb
stc
repnz
xor
out
ss
jecxz
repz
cmpl
xchg
enter
iret
leave
cmp
cmp
sub
aad
hlt
cmp
cmp
lret
faddl
out
aam
xor
in
cmp
std
repz
ret
and
loope
adc
icebp
ror
mov
imulb
int3
ss
lret
sar
stc
cli
hlt
push
mov
int
in
aam
xchg
int3
lret
int3
aad
aaa
cmc
shr
int3
add
repz
leave
loope
in
xchg
out
xor
ret
ret
enter
in
ds
cmp
xchg
addb
repz
xchg
ror
repnz
cmp
ljmp
loop
sti
ffree
loopne
stc
test
mov
loop
icebp
clc
cmc
enter
hlt
in
sarb
aad
hlt
stc
not
sti
clc
in
fcmovne
leave
in
mov
lret
pushl
cli
clc
repnz
enter
int3
lds
lret
repnz
jecxz
in
call
cmp
xchg
aad
call
int
in
call
rcl
int3
cmp
jmp
fnstsw
fcmovb
test
fcmovnu
mov
ror
mov
jmp
jmp
out
fdivl
idivl
neg
shl
repnz
imul
xchg
ret
fsub
lea
lret
aaa
icebp
cmp
idiv
ds
std
addl
ljmp
xor
stc
cmp
aaa
in
sarl
out
jecxz
idivl
into
rorl
fucompp
clc
leave
jmp
out
out
lret
idiv
clc
jmp
ffree
fiaddl
out
dec
stc
jecxz
out
into
sub
cli
fadd
lock
ffreep
cmp
xlat
testl
xchg
iret
out
das
int3
idivb
jmp
add
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
fucomip
faddl
filds
int
sub
jmp
mov
repz
ljmp
out
in
cmp
out
fdivr
sti
sti
faddp
add
into
test
out
sti
int3
cmp
lret
hlt
cmpb
clc
loope
rcl
fdiv
xor
fchs
loopne
out
xor
ljmp
ss
cld
sti
loop
sar
shl
call
adcl
call
lret
sti
clc
int
out
loope
ds
fld
cld
in
lret
std
ljmp
fcomip
aam
cmp
xlat
aaa
fcmovu
cmpl
loopne
mov
xchg
jmp
in
ss
xlat
cmp
xlat
cmc
fdiv
sub
aas
xlat
call
jmp
lock
int
test
call
int3
jecxz
in
loop
xchg
fdivrp
aam
out
into
out
test
fdiv
into
in
aaa
icebp
xor
std
aas
cmc
testb
xor
jmp
out
shl
lret
fcmovbe
xor
in
xlat
jmp
fpatan
loope
in
int3
xchg
out
fiadds
repz
into
into
jmp
repnz
test
ds
fst
bnd
mov
out
loop
jmp
ljmp
out
int
cmc
rcl
sarb
cmp
jmp
mov
out
test
shl
icebp
out
sarb
cmp
fsubr
sti
or
xchg
loopne
rcl
out
in
in
jecxz
iret
xor
lret
cmp
ljmp
icebp
fdiv
jecxz
sti
movl
div
int
divl
jmp
cmc
iret
ret
in
fmul
in
mov
pop
aam
ret
in
xor
jecxz
cmp
cmp
iret
in
jmp
call
repz
mov
jecxz
enter
jmp
hlt
out
aad
cmc
sti
call
fucom
shl
loopne
loopne
out
testl
cmp
iret
icebp
xor
cmc
lret
shr
in
call
fucompp
in
jecxz
shl
xchg
sarb
iret
aad
enter
hlt
ret
out
fsubr
neg
loopne
mov
std
repz
loop
icebp
int3
xor
aad
loope
in
cmp
into
lock
sar
aad
loop
sub
hlt
ljmp
cmp
aaa
cmp
adc
out
iret
jecxz
testb
test
loope
cmp
fdivr
xlat
aad
cmp
sti
loopne
icebp
cmp
sar
xlat
cmc
mov
mov
call
into
in
jmp
fnstcw
icebp
testb
xchg
fadds
mov
mov
or
std
out
repz
cmp
aas
repnz
addb
mov
fiadds
xor
aad
fdivr
int
in
cmp
adc
xchg
xchg
mov
aas
ss
hlt
clc
shl
hlt
icebp
lret
repnz
fdivp
shl
in
jecxz
in
popl
mov
repnz
in
cmp
repz
cmp
icebp
jecxz
fadd
cmc
filds
xchg
lock
int3
jmp
out
cmp
fistpll
fcmovnb
repnz
hlt
jmp
in
fucomp
sar
into
xchg
call
fucomi
jmp
fcmovbe
rcr
xchg
div
loope
fsub
mov
jmp
shl
jmp
iret
in
fsubr
clc
repnz
loop
out
in
xlat
imul
leave
sti
loopne
mov
repz
fdivp
leave
in
xor
shl
xchg
xchg
xchg
iret
out
rol
xor
shr
int3
fldl2e
cmpb
cmc
shl
aad
mov
sbb
sub
out
out
lock
jmp
rcr
fcmovbe
shl
clc
sti
dec
std
lret
std
nop
jmp
clc
aaa
xor
clc
clc
addb
aas
sti
loop
xor
cli
out
int3
lock
loop
int3
in
ss
jecxz
shl
out
and
cld
jecxz
ljmp
jmp
cmp
in
cmp
lret
cmp
test
loopne
ljmp
jmp
hlt
lret
jecxz
out
into
in
cmp
hlt
cmp
cmp
fmul
repnz
clc
test
cmp
icebp
jmp
xor
test
aaa
icebp
fcmovne
cmp
rcr
ret
in
test
fld
int3
mov
iret
fimuls
int
call
shl
ror
out
jmp
lock
mov
neg
lret
xchg
cmp
lea
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
sub
push
add
lret
out
xbegin
fdivr
cmp
aas
clc
shl
shl
cli
mov
test
call
sti
out
cmp
in
ffreep
ret
cmc
loope
int3
or
cld
repz
xchg
int3
shl
lret
aaa
cmp
incb
test
out
fadds
call
shr
stc
xor
into
ds
stc
stc
stc
out
loop
div
rol
leave
in
mov
in
bnd
aad
cmp
ror
stc
sarb
fucom
test
jecxz
sti
cmp
jmp
mov
and
mul
ljmp
fnstsw
fst
aam
cmp
cli
movb
xchg
mov
shl
repz
into
call
repz
roll
cmc
xor
loopne
xlat
out
ljmp
jmp
ljmp
test
repnz
fmuls
jecxz
xchg
enter
cmp
ljmp
loope
fucomip
std
out
jmp
fiaddl
test
div
xor
roll
aad
mov
enter
xchg
repnz
icebp
loop
sti
out
cld
repz
cmp
int
out
cli
icebp
loope
std
fxch
hlt
xchg
xlat
lock
out
cmp
ds
loopne
aas
hlt
sti
rcr
incb
lock
in
fcomip
xchg
into
cmp
out
rcl
in
int
cmp
stc
call
jmp
in
in
fdivp
jmp
call
jmp
ds
roll
enter
in
jmp
lret
in
cs
cmc
aaa
aaa
aad
cld
fcmovu
fscale
ret
fdivrl
loopne
lret
enter
mov
rcl
xlat
ret
rcr
into
hlt
stc
cmc
enter
fnsave
sar
icebp
neg
ljmp
rcr
incl
in
repnz
iret
cmc
sarb
repnz
loop
lret
int
mov
xor
repnz
out
fidivrl
cli
cmp
cli
shl
test
mov
mov
leave
sar
adc
lock
rcl
fstp
fldlg2
out
int
incb
aad
int
mov
fdivs
aad
repnz
aaa
aas
ds
xor
addb
cmc
or
fisttps
sti
ss
int
cmc
ret
in
hlt
fcomp
mov
sub
in
xchg
xor
out
cli
shl
loop
test
incl
hlt
xchg
leave
int3
mov
xor
out
cmc
out
roll
shl
jmp
out
xchg
std
iret
xchg
loopne
in
jecxz
div
aam
rcl
call
ret
repz
idiv
cld
ljmp
mov
lret
cmp
fcomp
sar
repnz
stc
rorl
nop
fucomip
rorb
loope
leave
out
stc
in
loopne
fldl
xchg
imul
ret
fdivp
in
int3
ljmp
repnz
rcl
inc
fdivp
aam
xchg
cmp
stc
out
out
test
sub
lret
fcomi
fsubr
fdivrs
out
test
out
mov
sti
leave
fcmove
xchg
cmp
shr
ss
call
cmp
inc
out
lret
jmp
mov
aam
out
lret
repnz
lret
fcomip
hlt
icebp
neg
out
out
ror
int3
stc
lret
shl
cld
jmp
fdivrs
cmp
out
ror
idivl
aad
cli
add
cmp
incb
leave
aam
in
shl
neg
cs
aaa
lret
int3
stc
loop
mov
fucomi
into
fninit
in
call
stc
cmp
ljmp
aad
iret
fidivrl
std
cld
ljmp
xchg
hlt
int3
xor
in
xor
cmc
test
cmp
hlt
flds
add
leave
loop
stc
in
call
cmp
fcomp
cmp
cmc
leave
cmp
jmp
iret
ret
rorl
out
xlat
lret
fsubr
out
xchg
hlt
shl
cmc
xor
lret
cmp
cmp
in
cmc
enter
cld
and
xchg
loope
lock
out
call
fcomip
rcl
clc
aad
loopne
std
stc
orb
loopne
in
in
hlt
clc
shl
ss
cmc
cli
lock
xlat
int
xor
mov
out
aad
cld
out
call
int3
clc
repz
sti
lds
cld
fucomp
rolb
enter
movb
push
mov
push
jmp
ret
rcl
aam
ret
sarl
adcl
jle
xlat
neg
out
pop
fucom
mov
fdivr
lds
cmc
stc
rol
enter
fiaddl
out
loope
out
hlt
call
cmc
leave
leave
call
into
fadd
repnz
clc
out
iret
shl
enter
sub
iret
xor
std
cmc
cmp
loop
cli
fiaddl
iret
test
mov
lret
mov
fdivrp
imul
out
rcr
push
lret
xchg
fcoml
aaa
xor
ljmp
fucom
test
cld
ret
fstp
fadd
rolb
into
in
rcr
call
fdivr
cmp
fcomp
cmp
xchg
leave
cmc
jmp
ret
fcmovbe
sar
add
repnz
sarl
repnz
lret
cmp
ds
cli
cmp
nop
fiaddl
xlat
cs
clc
in
div
xlat
cld
rcr
push
aad
cmp
aam
loopne
faddp
mov
fistpll
ss
loop
enter
fidivrl
rcr
out
loope
in
sti
out
loop
sti
iret
icebp
loope
out
call
cmp
aaa
cmp
cmp
repnz
loop
stc
loopne
in
in
xchg
jmp
lock
hlt
shl
aam
rol
cli
fsubp
stc
incb
call
mov
lret
rcl
cmp
icebp
icebp
loope
rcr
mov
cmc
mov
out
ljmp
int3
in
repz
shr
aam
leave
lret
aaa
cmp
hlt
cmp
call
add
lret
in
loope
ss
int3
int3
cmp
dec
shr
ss
aas
rcr
rorb
ror
xchg
lret
out
ret
int
idiv
fmul
aad
lret
rcl
cmp
xlat
loopne
ret
repz
enter
call
sbb
int3
xlat
ss
fmul
loope
icebp
stc
rolb
in
mov
mov
shr
mov
int
out
clc
out
xor
icebp
in
icebp
cmp
rcl
xlat
movl
rol
lret
call
std
ds
call
loope
xchg
xchg
jmp
int
aam
aas
in
loopne
fdivr
rcl
enter
loop
out
ffree
out
repnz
cmp
cli
xlat
xlat
fst
fcmovu
test
fcmovu
fcmovbe
in
jecxz
fisttps
sar
out
iret
into
clc
imul
shr
cmp
out
cmp
icebp
sarb
sti
fstp
adc
in
lret
std
and
in
repnz
repnz
int
repnz
call
in
enter
cld
icebp
mov
xlat
jmp
aad
fucomi
fst
fstpt
out
repnz
lock
out
in
test
ret
lock
cmp
out
fcmovnbe
loope,pt
loopne
fiaddl
out
lret
mov
hlt
xchg
repz
jmp
call
jmp
incb
stc
or
in
out
test
vpsubw
xor
lock
xlat
divb
in
loopne,pt
out
cld
std
rol
out
leave
in
rorb
in
xor
enter
loopne
or
rol
cli
imul
lret
inc
leave
hlt
fisttps
cli
clc
xor
xlat
icebp
hlt
sbb
xchg
aas
stc
fucomip
std
jecxz
repnz
out
int3
int
xor
fst
xlat
call
fsub
loopne
loope
hlt
ret
xlat
loopne
in
rorb
shr
out
ss
repnz
lret
test
vcmpps
fucomp
mov
test
icebp
int3
repz
repz
sti
fdivr
cmp
roll
xchg
std
nop
loop
xchg
xor
aad
jmp
repz
std
cmp
sbb
repnz
out
jmp
out
shl
xchg
iret
das
in
fcomi
int3
div
idivb
shl
repnz
mov
xchg
jmp
loopne
sub
test
xor
loopne
hlt
fildl
fcom
clc
leave
dec
xchg
rcl
loopne
int3
ljmp
int3
aam
fucomp
sub
div
bnd
fsubrp
stc
mul
in
mov
and
hlt
xlat
xor
cmp
repz
stc
in
icebp
cmp
shl
xlat
cld
fldl
filds
leave
loop
in
out
aaa
xor
cmp
roll
shl
fsub
xchg
test
sti
rcr
xchg
xchg
cmc
das
int
lret
aam
aas
icebp
aad
sarl
cli
jmp
out
xchg
enter
in
xchg
loope
fldln2
shr
ss
icebp
xor
add
or
add
add
test
add
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
mov
xchg
xor
ret
add
add
cmp
out
clc
les
movb
rcl
repz
ljmp
aam
fadds
stc
inc
mov
rcr
in
into
sub
std
repnz
clc
cmp
shr
fldl
cli
enter
sti
mov
xor
in
ljmp
jmp
in
aam
mov
stc
cmc
xchg
sub
jecxz
fsubr
xchg
xchg
in
xor
aaa
lret
fcmove
cld
std
loop
ret
not
jmp
out
leave
fdivr
jecxz
and
xchg
clc
xor
fidivrs
cmp
ror
cmp
cmp
cld
int3
add
loop
in
xchg
sub
int
out
fdivl
repnz
adc
aam
test
loope
mov
xchg
fnstenv
aam
fcmovu
lock
stc
into
ds
rcl
test
enter
in
xchg
loopne
in
xor
xor
xor
ds
aad
xchg
repnz
aam
in
jecxz
xlat
jmp
jmp
xchg
div
cmc
adc
iret
out
bnd
cmc
icebp
fcmovu
cmp
fidivrl
sarl
out
mov
ret
hlt
fmuls
repnz
ljmp
out
out
stc
cld
aam
xlat
and
mov
addl
rorl
into
in
std
out
into
jmp
fnstcw
cmc
inc
std
and
mov
xchg
shl
xor
fcmove
incl
fcmovnb
or
fcmovnu
xchg
iret
fsub
int
adc
repnz
into
into
cmp
fucomip
lock
loope
shl
xchg
sbb
or
lret
jmp
ljmp
cmp
icebp
cmp
in
jecxz
in
lock
out
into
fnstenv
repnz
fucom
leave
ds
into
repnz
mov
loope
fcmovnbe
in
sti
call
fcom
cmc
jecxz
xlat
in
cld
cmp
fnop
lock
in
call
int
in
in
xchg
loope
xor
hlt
repz
enter
ret
in
adc
loopne
ret
test
mov
lret
cmp
jmp
jmp
sar
out
icebp
cmp
out
dec
in
out
fxam
xchg
out
into
fstp
mov
call
cmp
repnz
lret
hlt
cmp
iret
ret
fimuls
int
enter
ljmp
xor
loopne
hlt
out
loop
div
loop
out
stc
xchg
out
lock
jmp
aad
cmc
loope
mul
aam
ret
fmul
enter
clc
mov
out
loopne
iret
stc
xor
cmp
inc
clc
cmp
call
mov
xor
xchg
jmp
lret
call
clc
std
fucomi
stc
ret
ret
std
inc
les
mov
fsubr
cmp
lret
xor
lret
dec
cmp
lock
std
in
rcl
mov
xchg
fcmove
xor
hlt
xchg
rcl
ror
hlt
fdivs
icebp
shl
and
fcmovu
hlt
cli
mov
in
repz
in
in
repnz
clc
jecxz,pt
sarl
filds
out
mov
int3
fcomip
xor
neg
fcmovnbe
out
lock
aad
cmp
fcmovne
cld
loope
orb
loop
ss
out
int3
ss
cmc
jmp
sti
not
clc
stc
movl
mov
xor
lret
out
iret
out
aam
in
fsub
test
leave
sub
in
in
nop
xchg
xchg
in
lock
repz
cmp
stc
cmp
lret
aaa
loope
fidivrs
inc
ret
ljmp
loop
call
repz
xlat
lds
fcmovnu
cmp
shl
xor
test
xlat
lret
mov
xchg
aaa
loop
fdiv
xor
repnz
xlat
fdiv
aad
rolb
in
or
xchg
test
loop
sub
cmp
cli
lock
aaa
lock
div
flds
nop
test
out
in
repnz
xor
std
idivb
cld
into
not
loope
cmp
faddl
ret
out
cmc
imul
rol
cmc
in
out
ror
xor
xlat
ret
incb
in
ret
mov
lret
xchg
xlat
sub
iret
std
sti
ss
leave
cmp
test
cli
fld1
call
lret
lret
mov
shl
test
xlat
cld
fcom
cmp
icebp
in
into
clc
mov
test
stc
xlat
out
cli
mov
mov
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
pop
push
pusha
jle
add
add
out
rcl
aad
lret
xor
into
fdivrl
adc
ret
clc
jmp
adc
cmp
aad
fucomp
repnz
rcl
cmp
imul
cmc
out
iret
loopne
mov
mov
repnz
int
int
cmp
sti
shl
ret
cli
shl
fst
movb
iret
test
ror
ss
xor
cld
int
int3
out
fdivr
addl
ljmp
xchg
shrl
iret
int3
lock
lret
in
cld
sar
cmp
out
roll
xchg
or
xchg
cli
into
cmc
jmp
cmp
vcmppd
in
ret
lret
lret
fnsetpm(287
iret
out
test
das
xor
xor
loopne
and
out
addb
call
rcl
mov
rcl
loop
rcr
jmp
leave
cli
xor
sbb
std
clc
clc
fxch
int
in
int
hlt
call
cmp
push
test
cld
cmp
test
out
out
rclb
into
enter
call
loope
fsqrt
lock
fsincos
in
mov
test
loopne
icebp
repz
enter
hlt
fdivrl
cmc
shl
xlat
and
in
out
out
shl
ret
clc
cmp
cmp
cmp
cmp
xor
mov
in
fmuls
or
test
loop
jmp
enter
shl
rcl
aad
fcmovnu
mov
stc
xchg
sub
push
test
cmc
int3
into
cmp
cmp
cmp
fdiv
shl
shl
test
sbb
cmc
shlb
lret
in
cmp
cmp
shl
fcomi
fisttpll
loopne
ret
fst
jmp
jecxz
icebp
frndint
int3
lret
aaa
cmp
fst
cmp
sub
loop
stc
lock
fcmovne
rcr
shr
repz
test
mov
cmc
stc
mov
clc
icebp
call
into
shl
ljmp
cmp
std
std
xchg
faddl
loop
xchg
xchg
lock
shl
icebp
cmp
ds
xor
les
mov
xchg
into
aad
clc
cs
sti
cmc
leave
fld
cld
cmp
mov
ret
sti
fcmove
sbb
aam
jmp
out
int3
fcmovnbe
int
hlt
test
filds
xlat
lock
mov
xchg
xchg
repnz
leave
xor
cli
cmp
fcom
aas
shl
lock
addb
or
out
xor
sar
jmp
xchg
test
loop
mov
loopne
lock
mov
stc
rol
xlat
cs
cmp
aas
test
mov
clc
fiaddl
in
clc
ret
jmp
aam
sarb
cmp
ret
stc
lret
fucom
xchg
rcl
iret
leave
cmp
xor
fcmovne
int3
ss
into
out
loopne
loope
cmp
mov
xchg
not
out
fcmovb
cli
xor
repnz
cli
sar
ffree
mov
orl
mov
mov
loop
cmp
enter
ret
fstp
rorl
enter
std
fildl
lret
jmp
cmc
leave
fcmovne
jmp
cmp
aas
aad
add
nop
addb
hlt
in
cmc
icebp
xlat
rolb
ret
std
add
loop
sti
cli
call
loopne
ror
xor
cmc
cmp
std
into
sti
ror
fdivrl
ret
fndisi(8087
loope
test
adc
ss
stc
out
out
fucomi
hlt
aaa
cmp
icebp
jecxz
loopne
aad
in
in
in
loopne
xchg
sub
cmp
aam
lret
std
lret
out
fcomp
roll
in
fsin
call
cmc
out
clc
ss
cmp
cmp
repz
cli
shl
xchg
fucomip
fmull
std
in
loope
icebp
cli
lret
fldl2t
into
aaa
xor
repz
cmp
jmp
jmp
in
xchg
mov
into
xor
out
int
xor
aad
repz
fistpll
jmp
aas
stc
out
jmp
fisttpl
out
repz
out
cld
aam
std
sti
cmc
hlt
ret
loope
fsubp
in
xchg
orb
cmp
in
aad
fmulp
repnz
ds
loop
lret
xchg
out
adc
in
icebp
shll
iret
sti
cmp
out
iret
xor
cmp
aas
sti
fdiv
test
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
dec
lds
nop
push
int3
add
add
adc
in
loope
jecxz
mov
out
fidivs
fsubr
loopne
not
loopne
in
and
cld
nop
lock
cmc
sbb
shl
sti
cmc
shl
cmp
clc
ljmp
xrelease
test
mov
xchg
loope
cs
xor
shr
fnstsw
cld
icebp
cli
ds
fld
jecxz
aam
jmp
fildl
mov
das
in
rcl
fdiv
jmp
xor
not
leave
fld1
incl
mov
call
rcl
xlat
into
repnz
out
fidivrl
call
xlat
test
iret
cmp
ljmp
lret
mov
enter
lret
in
aad
jmp
cmp
fxam
rol
fsubr
fiadds
xchg
in
jmp
xor
cli
neg
cmc
lret
stc
shl
aad
sar
out
cmc
xlat
int
xchg
adcl
fucomi
clc
out
std
out
cli
aas
cmc
jecxz
rcr
leave
out
fxch
in
incb
neg
lock
not
into
in
stc
aas
cli
cmc
leave
loopne
mov
in
loop
jecxz
repnz
loop
cmp
repnz
cmp
push
call
icebp
test
xchg
cld
out
out
cmp
cmc
call
xlat
std
loopne
cld
in
lock
cli
lret
mov
out
jmp
ss
sar
cld
lret
into
xor
rcr
xchg
repnz
fsubrp
xchg
rolb
out
das
test
rcl
rcr
clc
out
fldl2e
adc
int3
fcmovbe
xchg
in
addb
out
cmc
cmp
xor
fdivr
xor
imul
fsubp
out
std
loopne
ljmp
out
out
addb
xlat
fiaddl
mul
ret
aad
cmc
icebp
lret
cmp
std
in
stc
jmp
xor
roll
out
xlat
xor
cmp
cmp
rcr
push
add
lret
mov
in
aam
shr
das
repnz
stc
loopne
cmp
rcl
shl
ljmp
test
out
xchg
out
lret
test
icebp
int
cmp
aas
shl
jmp
incl
xor
das
xor
into
hlt
fnstcw
jmp
fsub
rol
sbb
stc
jmp
test
loopne
in
in
int3
cmp
cmp
fdivp
aad
ffreep
aam
fcmovnb
loope
xchg
mov
stc
xor
call
jmp
test
cmp
test
lret
faddl
rclb
cli
out
in
xor
lret
loope
int3
faddl
not
test
nop
into
in
in
rcll
ret
rcr
cmc
filds
stc
xchg
xchg
fsts
rclb
ret
clc
cli
in
cld
aam
xor
out
clc
cmp
loope
lret
xchg
loopne
icebp
xchg
loope
clc
xor
jecxz
aam
call
aam
jecxz
cmp
loope
in
out
lock
test
cmc
shr
leave
fnstenv
int
repz
repnz
cmc
cli
ret
aas
and
xchg
addb
ror
aad
repnz
cld
decl
lret
stc
fdivrp
loopne
loopne
sub
out
rcr
int3
repnz
aas
std
add
mov
fcmovne
int3
out
aam
aad
xlat
jecxz
jmp
aas
xor
cmp
loop
hlt
lret
mov
sbb
enter
ret
cli
xlat
dec
cmp
iret
repnz
test
addl
cmc
out
mov
div
xlat
shr
in
sarl
enter
std
in
into
jmp
repnz
xchg
stc
rcl
repz
loopne
cld
repz
xor
hlt
fcmovnbe
int3
out
int3
repnz
loopne
loope
repnz
cld
aad
cmp
int
xchg
loop
orl
out
cmc
int
repnz
sti
ror
rolb
clc
cli
loop
std
sti
lock
ljmp
out
xor
rcl
rolb
xchg
adcb
loope
ljmp
aad
sarb
xlat
stc
test
jmp
out
loopne
cld
fsub
out
jmp
repnz
jecxz
into
enter
std
aas
flds
faddp
leave
in
out
out
xchg
aad
stc
hlt
vpaddusw
fprem
aad
int3
mov
pop
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
push
int
stos
roll
jle
add
loope
in
in
fdivrp
repz
stc
sub
xchg
cld
std
xchg
iret
enter
lock
std
call
cmp
cld
in
mov
sub
lret
xchg
ss
cmc
iret
cmp
call
rcl
stc
ljmp
nop
in
aad
stc
icebp
fsubr
out
loopne
sti
cmp
in
fadd
cli
cmp
jecxz
xchg
leave
adc
icebp
xor
repz
fcomip
into
sti
repnz
ret
shl
cmpb
int
xchg
and
jmp
cld
stc
filds
in
testl
mov
loopne
mov
mov
loopne
hlt
int
stc
in
xor
fidivs
cmc
fidivrl
jecxz
loope
jmp
in
xchg
xchg
adcl
lock
aam
std
fnstcw
fcmovbe
iret
jecxz
testl
cmp
repz
out
jmp
leave
repnz
fptan
in
mov
cli
ret
jecxz
fisttpl
repnz
cmc
into
fucomi
lock
lret
cmp
out
mov
stc
fcmovnb
nop
jmp
std
in
ret
out
out
std
aam
in
lock
ror
cmp
test
loope
out
in
mov
fnstcw
cli
in
xlat
in
sti
stc
shl
repnz
xlat
cli
fmulp
popl
jmp
jmp
xlat
out
stc
fcomi
aaa
std
fnstcw
test
mov
int
fcoms
sub
ret
fcmove
cld
xor
std
lock
std
cmp
test
iret
icebp
enter
rcl
out
icebp
lock
ljmp
aad
hlt
loope
cli
flds
nop
shl
std
loope
nop
enter
iret
out
ljmp
repz
repz
xchg
in
fimull
aas
clc
fxam
int
fdivrs
fidivrl
fmull
out
lea
jmp
repz
lret
divb
cli
ss
jmp
stc
xchg
out
jmp
testb
cld
in
shl
divb
xor
xor
out
cmp
call
sbb
mov
fdiv
mov
xchg
fucompp
out
xchg
xchg
in
icebp
loop
int3
cmp
test
test
enter
in
loopne
jmp
in
aad
repnz
aam
aam
lock
hlt
cmp
shr
fdivp
les
cld
jmp
xchg
cld
lret
jmp
icebp
ret
int
sti
int3
std
sbb
stc
movb
mov
call
out
int
repnz
call
aaa
stc
test
xor
test
vshufps
cli
out
in
mov
roll
xor
out
cmp
cmp
fstp
cmp
lret
testl
aam
int
rcr
ljmp
into
cli
out
xchg
loope
mov
in
shl
iret
lock
stc
shr
jmp
repz
fidivrs
cld
filds
cmc
std
fucomp
call
xchg
repnz
lock
lock
cli
fnstsw
repz
sti
aas
fdiv
ret
rorl
mov
addb
int
std
clc
lock
in
cmp
not
shr
test
xabort
jecxz
hlt
fisttpll
call
std
aaa
loope
hlt
cmc
rcr
out
ret
sti
cld
and
call
mov
shll
cmp
xlat
in
lret
aad
and
repz
mov
mov
enter
loop
mov
jmp
fucomi
aad
test
sti
aad
xchg
fucomp
sti
mov
mov
ret
ror
clc
stc
enter
cmpb
icebp
repnz
lret
in
out
or
mov
mov
xor
in
test
ljmp
faddl
ljmp
sti
sub
int
incb
xlat
in
in
in
repnz
xor
in
rcl
xor
rcl
cmp
loopne
incb
mov
fdivp
loopne
xor
aad
ffree
stc
cmp
or
repz
sti
enter
xlat
in
roll
xor
leave
call
aad
aad
addb
mov
xchg
mov
loop
clc
cld
sti
aas
out
cmpb
cli
ret
aam
test
in
loopne
test
iret
icebp
in
imul
in
xor
hlt
lock
cli
loope
mov
lret
repz
lea
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
filds
add
int3
sar
sar
iret
aaa
into
div
cmpb
fcmovbe
test
sar
cmp
call
xchg
enter
icebp
std
fnstcw
cmp
test
cmp
aam
idiv
loopne
testb
int
test
out
divl
call
jmp
lret
into
jecxz
rol
fisttpll
mov
sbb
aad
int3
sub
out
xor
push
div
std
enter
sub
decl
aad
ror
repnz
neg
out
cmp
icebp
cmp
mov
filds
repz
jmp
ret
xlat
cmp
sar
cmp
loop
loop
in
cmc
in
mov
decl
iret
jmp
icebp
divb
lock
enter
imul
in
cmp
mov
test
test
cmc
pushl
int3
jmp
in
repnz
ljmp
movb
leave
cld
lea
vpmaddwd
out
sarb
shr
in
rcr
sar
aas
cmc
rol
fadd
lret
repnz
in
out
cmp
cmp
cmp
sub
out
aas
aad
test
jmp
int
hlt
out
xor
loope
jmp
cmc
cmc
in
in
jmp
call
ret
std
lock
std
xlat
roll
mov
fld
loopne
fiadds
div
cmp
cmp
cld
rcl
rcr
not
into
out
xlat
out
xlat
faddl
fisttpll
stc
in
cmc
cmc
repz
rcr
in
xor
repz
cli
jmp
test
ljmp
jmp
lret
jmp
in
cmc
fidivrl
fdivrs
leave
into
loop
jecxz
lret
hlt
loope
out
xor
fnstcw
xor
fstp
cld
aad
mov
fldl
xchg
jmp
jmp
jmp
rolb
out
in
ljmp
lret
cmc
aaa
icebp
repnz
ret
rol
repz
sti
xlat
clc
lds
addl
decl
idiv
fcmovne
fistpll
icebp
rolb
shl
fadds
int
repnz
not
ss
aaa
clc
movl
xlat
in
test
in
out
mov
xlat
aam
jmp
cmp
jecxz
out
mov
ljmp
jmp
fldl2t
cmp
int
repz
ret
ds
icebp
cmc
shl
mov
call
nop
mov
in
ss
in
out
fstp
cmp
fucom
in
into
iret
idiv
jmp
mov
loope
decb
repnz
cld
lock
xlat
sbb
cmc
fsincos
cmc
call
jmp
aam
icebp
lret
in
imul
cmp
cld
cmc
cmp
shr
rcr
test
in
std
out
in
xor
fiadds
in
rcr
rcr
cld
ret
aam
jmp
cli
sti
rcll
xchg
in
shr
in
ljmp
div
flds
xchg
test
mov
ret
into
xchg
lock
aam
out
into
repnz
xor
shl
roll
cmc
lds
movb
in
xor
enter
adc
stc
xchg
cmp
mov
adcl
cli
in
shl
ror
cmp
shr
loopne
ljmp
lret
call
lret
hlt
ret
aaa
fmul
sarb
out
sar
sub
mov
fiaddl
aam
lret
ss
ljmp
fadds
imul
loope
sub
mov
xor
xor
leave
in
clc
stc
icebp
jmp
xor
shl
fildl
jmp
fmull
shlb
shl
enter
cmpb
ret
stc
rolb
adc
or
iret
enter
xor
cmp
aaa
adc
fadds
in
out
rorl
int
cli
int3
into
sarl
hlt
jmp
jmp
shl
out
ds
mov
mov
ror
mov
xor
cmp
out
xlat
sti
std
enter
dec
call
ret
ret
out
ds
mov
loope
repz
enter
fucomi
cmc
fildl
sub
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
mov
lock
add
in
fcomip
lret
sbb
mov
shlb
out
leave
jmp
in
loope
repnz
xchg
in
xlat
out
xchg
test
out
jmp
repz
clc
aad
faddl
fld
cmp
in
mov
int3
xchg
xchg
std
loop
das
jecxz
ljmp
shr
cmp
aas
jecxz
incb
in
in
xor
in
out
fstp
lock
sarl
loop
rolb
jecxz
mov
fxch
ret
lret
std
in
xor
out
iret
rcl
fucomp
clc
out
cmp
iret
in
stc
lock
xlat
adc
out
xchg
out
jmp
iret
out
vpandn
stc
ds
test
shl
rorl
fdiv
test
xchg
fstp
loop
shr
into
fst
aam
in
loopne
and
fcomi
cld
mov
clc
sub
int3
shl
rol
repz
aas
ret
call
mov
cli
cli
decb
loope
cmc
cs
fdiv
cmp
fcomp
rcl
clc
test
push
loopne
in
ljmp
nop
xor
aad
xor
leave
out
leave
jmp
ret
ret
mov
out
in
xchg
out
xlat
xor
xor
cmp
cmp
mov
movb
iret
xor
aam
cmp
cmp
push
ds
std
loope
repnz
stc
stc
call
ror
std
in
out
xor
jmp
ror
cmp
stc
roll
fyl2x
enter
cld
fsub
enter
jmp
in
shl
in
fcompp
lret
sar
hlt
shl
fadd
orl
test
into
int3
ror
rcr
lret
hlt
cmp
lret
cmp
and
xlat
cmc
out
ficoms
cmc
shl
in
cld
ror
rcl
aas
cld
ljmp
call
out
sbb
out
mov
repnz
lret
iret
out
enter
std
sbb
faddl
jmp
fsubrp
lret
loope
xor
into
xor
fmul
loopne
fld
shl
hlt
aam
out
in
into
test
sub
enter
out
clc
icebp
fistpll
rol
xchg
loope
addl
in
out
xchg
lock
enter
adc
xlat
loop
mov
nop
xchg
loopne
mov
xor
lret
in
repnz
rol
sti
clc
testb
test
in
shr
into
xor
not
cmp
icebp
aad
in
cmp
leave
std
lret
in
xchg
rol
ss
ss
repnz
shl
in
add
cmc
fscale
mov
loope
lret
sbb
lret
fxch
xor
jecxz
cmp
test
enter
into
xchg
mov
into
repnz
sti
xlat
icebp
repnz
ror
aam
rolb
xlat
aad
fstp
iret
leave
mov
std
rol
cmc
clc
lds
repz
sar
faddl
clc
clc
lret
adcl
xorb
fsubr
lret
lock
cli
xor
std
test
std
stc
std
cmpb
icebp
test
int
xchg
hlt
out
in
enter
lock
rcr
shl
loopne
or
cld
jmp
sub
sarb
int
fucomip
aaa
int3
cmp
rol
roll
sti
repnz
lret
loop
cld
rcl
cmp
sti
out
xchg
test
cld
mov
fcmovu
in
shl
in
enter
sti
into
lock
int3
cmp
fcom
aas
ljmp
lret
mov
filds
aaa
out
cmp
out
aas
iret
loop
jmp
xor
in
test
leave
out
lret
addl
cli
out
ror
adc
loop
adc
ffree
orb
out
xor
cmp
ss
leave
jmp
fcmovnu
out
cmp
fsubr
in
int3
adc
iret
xchg
enter
idivl
out
cmc
shl
cmp
shl
xchg
mov
test
leave
std
stc
fsubrp
fucom
repnz
aam
lret
sarb
shl
fcom
cli
xor
enter
cli
lock
mov
mov
mov
std
out
call
sbb
hlt
roll
nop
lret
movl
sub
mov
notl
mov
mov
jmp
lret
ror
rcr
lret
fistl
aam
pop
filds
jle
add
mov
cmc
call
sarl
int3
cmp
incb
movl
sub
lret
aad
ret
hlt
iret
ss
test
shl
test
in
loop
xlat
cli
inc
leave
int3
loop
int3
repnz
sti
fdivr
sarl
int
aas
div
out
rol
mul
cmp
loope
roll
lret
clc
fcmovnbe
enter
int3
repz
roll
or
loop
call
out
lds
aam
lret
leave
cmp
hlt
rol
aas
jmp
movb
xchg
xchg
xchg
icebp
fldcw
ds
ds
ffreep
rcr
shl
jecxz
into
lock
leave
lret
xchg
leave
repz
leave
xor
cmp
in
call
hlt
jecxz
fdivrp
clc
mov
test
loopne
sub
cld
in
fstp
stc
shl
rolb
test
int3
mov
mov
shl
repnz
ss
lret
ss
jmp
aas
shr
fstp
shl
cli
div
cld
jecxz
lock
mov
hlt
int
aaa
cmc
shl
in
sar
cmp
ljmp
aam
hlt
loopne
lock
fsincos
out
out
mov
das
aam
out
std
ss
stc
xlat
rcl
out
into
ret
stc
call
orl
jmp
in
sti
ss
cmc
jecxz
cld
repnz
loopne
decb
xchg
and
in
test
dec
out
rcr
adc
xlat
leave
orb
int3
xor
ljmp
leave
stc
cmc
into
test
in
loopne
mov
xchg
mov
mov
xor
incb
cmp
xchg
jmp
nop
enter
fsubrp
repnz
ror
not
xlat
imul
hlt
aad
ret
addb
mov
fsubp
lret
ror
cli
divb
cmp
test
clc
out
xlat
shl
lds
loopne
std
cmc
shl
in
out
aad
std
in
sti
aad
cmpl
out
repz
ror
mov
orb
leave
out
std
sti
in
cmp
in
cmp
loope
loop
add
lret
iret
lea
test
xor
aam
int3
in
cmp
ror
iret
sbb
out
out
mov
out
icebp
lea
call
cmc
out
jecxz
fcmovnb
loope
cmp
mov
in
add
aad
clc
divb
test
jmp
sar
sub
roll
aad
xchg
xlat
xchg
sub
loop
shl
cmp
shl
cmp
test
ror
in
fcmove
lret
fucomi
mov
xor
fdiv
out
out
clc
fcom
enter
hlt
clc
jecxz
mov
orb
enter
imul
int3
std
repz
fcmovnbe
loope
fildl
loopne
and
leave
in
jmp
ljmp
cmp
in
adc
decb
mov
frstpm(287
ljmp
in
jmp
cmp
xchg
jmp
jecxz
in
ljmp
rol
loop
icebp
les
stc
cmp
out
jmp
cmp
cld
in
mov
sti
testl
out
enter
not
lret
icebp
loopne
hlt
cld
in
stc
jecxz
fildl
into
lea
shl
cmc
cmp
lock
rcr
roll
fimull
xchg
jecxz
neg
xlat
cmp
cli
int3
jmp
aas
xlat
cli
out
addl
xchg
stc
addl
aam
idiv
stc
aam
lret
xlat
faddl
cld
stc
call
iret
loopne
in
in
cmp
repnz
shl
sti
xlat
mov
stc
fcmovnb
cmc
jecxz
lock
into
out
lret
shll
out
aaa
iret
in
int
lret
cmp
sti
cmp
loop
stc
rolb
fucomip
out
jmp
rol
cmp
in
leave
cld
fucomp
faddl
loop
test
int
mov
push
ret
aam
xor
leave
fabs
icebp
in
std
fildl
testb
test
out
ss
aam
std
sti
cmc
loope
shl
out
std
shl
lret
test
enter
in
lret
repnz
jmp
enter
int
fnstenv
cmc
ret
in
jle
add
in
cli
xlat
xlat
in
cmp
loop
fld
xor
mov
fstp
loope
repnz
into
xor
lock
shr
cmp
addb
out
stc
jmp
ret
lock
fcmovbe
int
fmul
cmc
rol
push
jmp
mov
out
lret
rorl
call
dec
sti
cli
adc
fnsetpm(287
out
orl
fldl
xor
cld
repz
xlat
out
int3
lret
in
cmc
vshufps
mov
mov
mov
loop
xor
cli
stc
in
cmp
out
out
icebp
add
fsubrp
fmul
lret
ljmp
aam
in
xor
cmc
call
sarb
fcmovb
int
test
fsubrp
in
out
sub
xchg
out
out
cli
into
xor
sti
cmp
cmc
idivb
cld
jmp
jecxz
fdivp
inc
incl
pop
ret
hlt
out
repnz
icebp
ds
in
inc
rolb
xchg
into
loop
sti
fdiv
xchg
iret
aaa
ljmp
loopne
adc
cmp
cmc
sbb
mov
lret
mov
hlt
in
out
dec
clc
cmp
ds
cli
call
incl
lea
fdivr
cmp
ss
fistpll
into
xlat
aam
call
int
adcl
aad
out
repz
iret
add
out
cli
hlt
fcomip
call
in
repz
jecxz
xlat
out
ss
shr
repnz
or
aad
cli
in
test
out
lret
leave
and
in
iret
xchg
icebp
ss
repnz
fxch
cli
aaa
aad
sarb
std
shl
mov
lock
iret
int
bnd
stc
cmp
lret
cmp
cmp
aas
jecxz
test
ljmp
jmp
ret
into
lock
jmp
fdivr
rcr
sarb
iret
rorl
int3
int
inc
shl
xchg
clc
imul
cmp
std
shr
repz
cmp
mov
loope
pop
jmp
lret
leave
xlat
fst
std
ds
out
fcmovnu
mov
sbb
out
lea
icebp
clc
rcl
sti
cmc
test
inc
faddp
shr
stc
enter
rcll
leave
out
clc
xor
sarb
aam
jecxz
test
xchg
leave
icebp
xchg
repnz
stc
lock
lock
repz
fst
clc
xchg
test
int
clc
stc
in
mov
imul
lock
stc
cmp
fldl
loopne
fildl
repnz
rclb
fmul
into
stc
xor
enter
ret
xchg
rol
in
aad
jmp
test
xchg
shl
xor
clc
int3
into
into
hlt
cmp
call
xchg
cld
sub
mov
nop
mov
sub
out
hlt
aam
clc
iret
cmp
cmp
in
fsubr
stc
fdiv
xabort
clc
lret
std
out
in
aam
enter
xor
in
lret
int3
ljmp
fsubp
ljmp
loope
in
aas
shll
in
aad
repz
cmp
ret
int3
fildl
icebp
fldl
repz
cmp
enter
cld
jecxz
filds
xlat
sbb
jecxz
jmp
out
aaa
fcomi
lock
fidivrs
ret
aad
in
mov
fldl
imull
leave
xor
int3
fdivr
cli
sbb
roll
mov
leave
loope
mov
jmp
shr
in
neg
push
aam
mov
fmulp
out
out
out
shr
shr
out
shr
out
fidivrl
sar
mul
sar
rolb
lret
mov
xchg
ss
cmp
fsubr
hlt
int
jecxz
jmp
sti
loope
in
xchg
jecxz
not
xor
iret
aad
rcr
div
cli
in
aaa
cmp
mov
fcomip
cmp
lock
icebp
loope
stc
aaa
das
aad
xor
stc
ret
test
cmc
mov
fucom
in
in
out
sar
in
in
in
ret
sti
ret
rcr
leave
stc
jmp
cmp
fdivp
stc
ljmp
xchg
jmp
out
cmp
fstp
rolb
rolb
xor
sbb
jmp
ret
fmul
fcom
fdiv
jne
aaa
xchg
outsb
loopne
jmp
jle
cli
fiadds
cmc
jecxz
sub
aam
idivb
out
leave
ror
xlat
int
icebp
test
ror
cmc
in
mov
in
nop
int3
jmp
ret
xor
in
repnz
fucomp
rcr
repnz
in
aas
and
in
dec
test
out
xorl
xlat
out
fidivrl
cmc
iret
in
in
test
mov
xlat
mov
in
mov
shl
lret
out
into
vpaddsw
out
cmp
xlat
xchg
mul
loopne
jmp
lret
xor
xor
loop
repnz
int3
out
repnz
in
out
out
aam
fsub
mov
mov
mov
leave
div
iret
xor
fdiv
testl
mov
out
fcmovne
filds
repz
les
jmp
lret
repz
out
cli
cmp
adc
out
out
int3
out
out
lret
repnz
out
cmp
inc
fcmovnbe
rcr
xchg
fldl
lock
lret
mov
sub
repz
dec
shl
in
fistpll
jmp
xlat
int
fsubr
loopne
in
ffreep
fcmovbe
in
cmc
fcomip
fdiv
sar
lock
cli
inc
stc
leave
test
out
mov
push
rcr
lock
lret
int
hlt
idiv
aas
test
ffree
aam
and
neg
cld
sbb
ror
mov
in
xor
lds
stc
cmp
jecxz
icebp
sti
in
fcmovb
lds
lock
into
shr
cmc
int3
cmp
out
sarl
std
cld
loop
hlt
cli
mov
lret
jecxz
lret
in
int3
mov
int3
cli
jmp
sti
cmp
cmc
sti
shl
mov
xchg
rol
mov
icebp
repz
icebp
cld
fcomi
in
aas
std
rcr
xchg
mov
nop
in
cmc
xor
in
clc
fcmovbe
aaa
cmp
lret
sar
loopne
test
out
xchg
fsubr
std
jmp
rol
in
fmul
enter
rcl
fld
call
mov
mov
xchg
hlt
int3
int3
xor
lock
xor
xlat
icebp
rol
adc
leave
out
out
xchg
or
xor
stc
out
lret
int
aam
icebp
mov
cmc
shl
fldl
out
out
jmp
cld
in
xor
std
ret
xor
repz
addl
jecxz
xor
xlat
in
xor
int
roll
ljmp
aam
into
ret
lret
shll
cmp
shr
imul
stc
out
cmp
jmp
shr
in
fildll
test
leave
jmp
xlat
shr
cmc
icebp
fcmovb
fcmovu
icebp
xor
mov
leave
jmp
xlat
sar
jmp
aad
sti
in
cmp
fsin
ret
sar
xlat
loopne
int
mov
lret
leave
icebp
ss
out
aad
jecxz
std
out
enter
vshufps
adc
repnz
loope
cld
iret
int3
fsubr
ds
cmp
rol
xor
jmp
mov
xchg
in
cmp
cli
shl
lret
into
rcl
testl
loopne
lret
incl
xchg
cmc
loope
in
shr
int3
cmp
shl
xchg
xchg
out
repnz
sti
add
lret
loope
repnz
in
ds
ds
cmc
ret
loope
lret
jecxz
iret
call
cmp
div
iret
idiv
fucomp
ds
cmc
loop
ret
loope
out
nop
mov
enter
loop
repz
leave
icebp
jmp
neg
lret
into
enter
test
jmp
std
out
test
xor
cmp
cmp
xlat
clc
lock
xchg
fmul
sub
jecxz
int3
shll
xor
stc
xor
cmp
cli
loopne
ds
sar
mov
loop
in
repnz
shrl
out
aaa
push
ljmp
hlt
filds
mov
iret
filds
enter
lret
ds
ss
fcomi
inc
out
orb
lret
call
out
out
clc
sub
stc
fnstenv
fstp
ljmp
cld
test
out
fucompp
cmp
int3
xor
ljmp
repz
cmp
adc
sbb
mov
leave
jecxz
xchg
rcll
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
aad
div
cmp
fcomip
sar
cld
fadds
cmp
out
loopne
rorl
sub
not
in
fucom
and
cmp
aas
cmc
enter
stc
lret
icebp
int3
xchg
cmp
aam
ror
fmul
clc
testb
roll
fistl
not
repz
lret
in
sarb
cmp
repnz
in
loopne
aam
in
rcl
cmp
cld
xlat
into
lock
rcr
cmc
cld
rolb
fmul
into
lret
repnz
cs
shll
shr
enter
cmc
lock
shl
fdiv
not
xchg
jmp
sbb
repnz
out
lret
cmp
in
cmc
fsubrp
cli
rcr
aad
fadds
lret
in
out
mov
aad
ljmp
leave
stc
sarl
xlat
fcmovnu
clc
rol
addl
loop
hlt
cmp
cli
call
fcmovu
cmpl
repnz
cld
clc
fdivp
jmp
mov
loopne
shlb
imul
aad
int
cmp
std
xor
and
fcmovnb
lret
xchg
repnz
out
rol
sub
shr
iret
fcmovne
fcmovu
ror
out
loop
xchg
fsubp
lret
std
call
icebp
xor
fdiv
ljmp
rorl
dec
out
ljmp
shl
cmp
sti
cld
loopne
stc
ds
loop
out
fsubp
incl
xchg
in
xor
in
int3
out
lock
cli
int3
jecxz
shl
repz
in
repz
xchg
div
jmp
xor
lret
out
repnz
ffreep
stc
cld
mov
lock
int
xchg
idivb
sub
jecxz
leave
repnz
leave
lock
fcmovnu
fstp
cmp
stc
cld
in
out
shl
cmc
rorl
cli
repnz
in
fcomp
imul
aad
fldl
sti
fdivrp
lret
mov
lret
in
fst
aas
ffreep
iret
loop
cld
in
stc
in
loopne
std
test
jmp
in
enter
in
std
iret
out
into
in
lret
test
call
sbb
fucomip
int
out
stc
shll
mul
aad
cmp
int3
sti
icebp
cmp
fld1
cmp
fmull
rorb
xor
cli
rcr
cmp
fdivrs
sbb
std
lock
stc
test
repnz
xor
cmp
repnz
aaa
hlt
neg
rcr
shl
clc
std
mov
mov
leave
rorb
cmp
aam
fstp
fmulp
in
cmp
add
repz
loopne
out
iret
ljmp
jecxz
xlat
rcl
jmp
aas
loope
fcmovne
fcomi
rcr
sti
ret
lret
out
enter
std
jecxz
icebp
xor
call
fsubr
fdivr
div
into
idiv
idiv
mov
sti
loop
iret
out
fadd
leave
jecxz
leave
cmp
cld
lret
cmp
xor
flds
in
std
xor
nop
into
loop
jmp
int
fnstcw
shr
lock
mov
movb
in
xor
repnz
into
loope
int
test
aam
std
loop
ret
std
jecxz
rcl
call
sar
lock
sar
idivb
sti
lds
out
stc
ret
out
int
out
sub
repz
call
ds
jecxz
jecxz
out
out
mov
roll
in
aam
stc
call
jmp
aam
call
sbb
leave
into
test
leave
jecxz
clc
out
in
fcom
cmp
lret
fdivr
neg
in
aam
enter
fiadds
test
repnz
aaa
dec
ror
out
rcr
cli
shl
jecxz
jmp
std
int
out
in
in
in
hlt
rcl
sar
fyl2xp1
aam
aas
ret
fdiv
int3
fdivr
fcomp
out
mov
jmp
cli
out
in
fmulp
cmpl
shl
icebp
clc
faddl
out
not
rol
aaa
cmp
in
fnstcw
stc
into
sbb
std
loope
leave
out
out
cmp
fstl
into
cs
hlt
repz
sar
test
ds
cli
fsubp
fcmovu
mov
in
addb
sar
in
leave
fdivr
shl
rorb
mov
push
add
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
fsubr
dec
imul
jle
test
ret
jecxz
xlat
sti
in
and
adc
enter
sar
jmp
ds
cmp
loope
shr
aas
ret
ljmp
lock
into
stc
das
lret
lock
int3
in
icebp
in
fimuls
jmp
out
aam
sub
lock
int3
rcl
ror
cld
cmp
rcl
repnz
out
in
in
cld
sub
xchg
xchg
das
aam
lock
cld
call
shl
sti
test
fsub
repnz
cmc
in
out
xchg
out
xchg
ss
out
mul
repz
int3
int3
cmp
fidivrl
in
out
cld
test
call
fcmove
shl
xchg
icebp
test
enter
sti
lret
cld
xlat
out
stc
cmc
lock
loopne
aam
lret
nop
mov
xchg
div
shl
cmp
int
hlt
cmc
clc
cli
in
fdiv
fld
lret
xlat
out
out
leave
lret
jecxz
mov
xchg
cmc
shrl
ljmp
loope
flds
ret
aas
leave
lret
mov
xchg
not
out
cmp
cmp
hlt
in
repz
mov
loopne
jmp
lea
sub
cmp
cmp
cld
cmc
cmp
aam
cmp
loop
out
loop
int3
and
or
fcmovnbe
ss
loopne
std
stc
sti
jecxz
cmp
sarb
movb
in
cmp
in
call
out
das
sti
cmc
repz
cmp
call
mov
shr
jmp
lock
lret
hlt
fidivrs
int
ror
fdiv
shl
enter
fldl
fcomip
ljmp
std
jmp
in
fsub
loope
test
icebp
in
out
sar
call
enter
cld
adc
iret
xlat
movb
int3
int3
in
iret
loop
jmp
jmp
aam
clc
adc
fdivrs
neg
fucom
sti
in
lret
lret
rcl
xchg
iret
repnz
imul
std
jmp
aam
sbb
shl
cmp
out
call
jmp
out
xchg
enter
ret
into
cmc
lret
loope
xlat
neg
rol
and
mov
mov
iret
pushl
rol
lret
in
out
fucomi
lret
loope
sar
mov
ljmp
int
out
xlat
leave
in
shl
ds
sti
fcmovu
test
sbb
out
mov
out
sarl
cmpl
cmc
cmc
enter
in
lret
lea
int
lock
sarl
in
enter
xor
int
out
xor
xlat
addb
std
mov
fxch
int
stc
xor
div
in
jecxz
fdiv
fidivrs
xlat
jmp
mov
std
repz
ljmp
jmp
enter
incb
ret
aam
out
xchg
into
adc
fidivl
in
in
cmc
clc
sar
int
cmp
xlat
cmc
jmp
orl
shr
out
rcr
cmp
sarl
iret
out
addl
cld
fcmovnbe
mov
aaa
repnz
xor
cmc
enter
fld
cmp
div
fadd
enter
sbb
cmp
loopne
shl
repnz
in
cmp
cmp
fdivp
test
xchg
enter
in
jmp
fcomp
out
and
ror
xor
idivl
sti
fcmovne
cmp
fst
sti
cld
xchg
loop
shl
mov
jmp
test
loop
div
call
stc
aas
mov
fisttpl
fcmovnu
in
fildll
out
aaa
fnsave
lret
test
hlt
loopne
fistl
cmc
loopne
out
int3
out
in
iret
aad
roll
idiv
aad
int3
and
leave
mov
out
mov
leave
ret
in
clc
cli
cmp
testl
ret
jmp
out
in
cld
repnz
out
aad
cmp
in
idiv
lock
cmc
out
cmc
repnz
xchg
stc
enter
test
adcl
cld
cmp
cmp
rolb
mov
fdivr
into
xchg
in
jecxz
call
int3
leave
frndint
ds
xlat
cli
aad
rcr
xlat
int3
xor
iret
in
addl
ljmp
shl
clc
out
lret
in
lret
out
mov
xor
add
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
mov
cmc
idivb
testl
jle
mov
jmp
loop
int3
aad
fcomi
xor
fdiv
lock
xlat
enter
adcb
shl
loopne
lret
sub
ljmp
ret
loopne
enter
loope
shr
fists
sarl
icebp
in
out
xor
fucomp
out
into
out
neg
xchg
cli
mov
xor
ljmp
ljmp
out
sti
call
ds
xlat
cld
clc
xchg
loope
movb
fcomip
shr
lret
fdivrs
into
aaa
ds
shl
hlt
xlat
ret
div
xchg
lret
ljmp
divl
idivl
cli
fdivr
fiadds
mov
stc
enter
lret
in
lret
cmp
fsin
cmp
cld
ds
cmp
movb
out
loop
fistl
lock
int
idiv
int3
cld
cmp
out
fldl
cmc
and
cmp
cmp
out
call
aad
xor
fcmovu
aad
in
mov
iret
cld
ljmp
repnz
cmp
repz
in
lock
rcr
aam
stc
stc
jmp
loope
loopne
in
divl
out
cmp
xlat
roll
xlat
testl
lock
in
xlat
ret
int3
stc
enter
in
aas
iret
ds
rol
in
jmp
mov
in
fsubp
rcl
sub
out
jecxz
leave
lret
rol
cmp
rcr
fnstsw
fstp
sti
xchg
faddl
clc
in
cmp
cmp
fst
fdivrl
not
xlat
fdivp
sti
incb
xchg
popl
xor
fnstcw
in
in
aad
neg
cmp
in
lret
xchg
repnz
rcl
out
cmp
xlat
dec
sub
cmp
out
test
shl
call
loopne
in
lret
cmc
iret
ljmp
icebp
hlt
incl
rclb
in
call
aaa
lret
fsubr
out
int
in
ret
sti
fcmovnu
xlat
repnz
clc
fimuls
ror
xor
out
call
fiaddl
cmp
loope
lret
nop
jmp
nop
out
call
aad
idiv
std
int3
shlb
xlat
lret
mov
mov
xor
in
cmp
jmp
cli
cmp
loop
test
lret
jmp
xchg
in
out
aaa
lret
shl
sar
lret
cmp
cmp
out
shl
ret
cmc
loop
mov
ss
into
rcr
lock
cmp
cli
aas
aas
ffreep
std
clc
nop
std
out
int3
in
ljmp
jmp
test
adc
repnz
jmp
fsubr
jecxz
fcmovnbe
repnz
fcomip
shll
aam
lock
xor
rol
std
sbb
leave
ljmp
xchg
sbb
out
in
xor
cmp
in
ss
repnz
aas
jecxz
in
icebp
loopne
sbb
into
test
loop
aaa
leave
in
fdivrl
aam
jmp
cmp
out
rol
div
mov
jecxz
in
out
and
cs
lds
stc
xor
cmp
aas
faddp
loope
xchg
out
lret
ljmp
cmp
icebp
loope
clc
fisttpl
lret
stc
iret
fildl
clc
aad
sub
ror
xlat
aas
ss
call
xchg
test
xchg
mov
cli
fnstsw
in
leave
fndisi(8087
sti
jecxz
ret
loopne
jecxz
xchg
mov
rcll
ss
stc
rcl
roll
xlat
jecxz
inc
jecxz
add
nop
loop
mov
iret
aaa
xlat
hlt
lock
into
lock
cmp
cmp
xlat
cli
xlat
sar
icebp
xlat
fdiv
test
leave
mov
out
ret
int3
stc
cmp
cmp
sar
shl
aad
enter
test
xchg
int3
fdivrs
shl
cli
aam
shl
cld
ret
in
out
ret
mov
repz
repnz
test
fidivrl
out
in
nop
out
out
xchg
xchg
test
cmp
out
neg
int
fst
cli
fst
fcomip
test
test
xchg
lock
xor
fdiv
icebp
ffreep
inc
fsubs
test
add
int3
rcl
ret
fldl
rcll
push
add
icebp
aam
call
cmp
loop
jmp
out
fildl
xchg
out
test
in
repz
hlt
into
aad
int3
cmp
stc
aam
clc
testl
nop
ret
fsincos
icebp
in
ds
test
test
lret
in
in
fst
and
jmp
out
hlt
fxch
imul
rcl
cld
out
rcl
clc
int3
mov
jmp
in
rcll
lret
iret
leave
cli
aas
fsubr
cld
out
jecxz
aad
jecxz
jmp
cmp
mov
aad
int
fdivs
in
fdivp
rol
lock
rol
in
jmp
lret
addl
cld
in
fsubr
xor
idivl
repz
rcl
in
lret
lret
mov
rorb
cmc
iret
enter
jecxz
into
xlat
into
icebp
ds
neg
int
in
out
repnz
aad
sub
stc
xor
idivb
into
aas
or
out
loopne
leave
ret
roll
in
fyl2xp1
iret
fucomi
xlat
iret
and
aad
hlt
loopne
jmp
ljmp
test
int
bnd
in
clc
xor
aas
jecxz
into
loopne
out
mov
mov
cmpb
loopne
repz
jmp
xor
out
lret
cli
leave
roll
neg
out
in
mov
call
jmp
repz
fcmovu
ds
loop
adc
rol
out
loop
iret
jmp
loopne
adcb
out
fcmovnbe
fsqrt
loope
fdivp
lock
enter
fsubr
leave
inc
sar
fucom
aam
lds
into
fcmovne
in
xlat
fcmovbe
in
icebp
cli
ret
jmp
in
mov
jecxz
ss
in
out
repnz
shl
in
in
icebp
cmp
loop
sub
test
lock
xchg
jecxz
std
divl
shl
hlt
into
out
fcmove
div
add
loop
fsub
in
in
leave
std
out
out
leave
int
jmp
int
fidivrl
icebp
hlt
cld
cld
ffreep
repz
add
jecxz
ret
leave
lret
repnz
aam
repnz
fidivrl
jmp
jmp
cmp
out
into
loope
cld
fucomp
loop
sti
sub
ficoml
in
xor
fcomi
fcmove
int
aaa
xlat
cli
cld
aas
icebp
sub
in
ljmp
mov
loopne
loop
jmp
jmp
shr
stc
in
xchg
ret
xchg
clc
lret
mov
fcomp
fyl2xp1
std
sub
cmp
mov
jecxz
in
lret
xchg
sar
out
out
repnz
rol
in
pushl
xlat
loopne,pt
iret
in
rorl
call
repnz
iret
loope
sub
hlt
cmp
fnstcw
ds
cmc
sti
loope
jmp
jmp
xchg
in
mov
int
cmp
int3
out
out
roll
div
ret
test
loope
out
rolb
xlat
cmp
into
cli
out
cmp
sti
in
test
call
aad
lds
lock
out
rcl
int3
icebp
ss
hlt
roll
ffree
cli
in
icebp
mov
les
call
cmp
fdiv
aam
aaa
xchg
repnz
fsub
in
movb
not
cmp
rcr
xor
hlt
out
ror
out
clc
repz
fincstp
cli
mov
loop
idiv
out
ljmp
aas
fsub
cmp
cmp
loop
test
idiv
mov
in
xor
xor
out
aaa
repnz
cmp
into
sbb
vpmovmskb
fisttps
mov
mov
loope
hlt
cmp
std
ljmp
stc
fiaddl
test
in
lea
fbstp
enter
aad
cmp
clc
cld
jecxz
rolb
in
mov
fmull
in
icebp
ss
fldpi
aad
in
cmp
cld
rcr
fiadds
push
cmp
repnz
out
mov
aad
jmp
hlt
leave
fdivrp
loope
addl
mov
into
stc
and
cmc
adc
leave
cmp
int3
lock
loope
icebp
cmp
sar
aam
clc
in
into
shl
xchg
and
int3
in
loope
fadd
lock
call
idiv
sarb
fidivrs
mov
xchg
fucomi
std
lock
call
int3
std
in
test
sar
ljmp
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
push
std
jl
addb
stos
add
into
ljmp
enter
fidivl
stc
lock
loope
out
in
loop
aas
fadd
fisttpll
out
cld
jmp
out
fmul
in
repnz
xor
iret
jecxz
call
fcmove
cmc
loopne
cs
cmp
cmp
into
loop,pt
hlt
mov
repz
lock
hlt
out
in
ret
ret
sar
cmp
cmp
in
adc
stc
mov
out
and
out
out
repnz
vpsubb
fdivrl
rolb
lock
loopne
loopne
jmp
mov
into
fdivp
cmc
aaa
xlat
cmp
fdivp
clc
repnz
sarl
leave
lret
test
out
into
jmp
out
shl
shlb
rcl
xor
fidivrl
cmp
shl
aas
fiadds
test
sar
mov
mov
iret
std
fsubr
xor
clc
aas
cmp
xchg
cmp
jmp
std
int3
cli
xchg
repz
loop
div
shll
repnz
repnz
fst
ds
in
jmp
fiadds
lret
jmp
hlt
call
into
loopne
out
out
in
lds
shr
decl
loope
ss
in
hlt
xor
rolb
test
ret
lret
xchg
lock
out
in
int
iret
aad
fcmovnu
repnz
stc
testb
sbb
fsubr
std
orb
out
sub
ss
xor
xlat
cmp
fistpll
rol
add
test
jmp
lret
ret
out
in
cmp
into
int3
or
aas
fdivp
xchg
stc
mov
cmp
fnstcw
rcr
clc
fsubr
lret
rcr
not
fcmovnu
repz
stc
int3
loope
test
idivl
xor
iret
cld
ds
xlat
repnz
loopne
add
in
dec
loopne
xchg
addl
aad
shl
in
ret
xchg
test
jecxz
xchg
lock
cmp
jmp
lock
cld
in
fsubrp
xor
fld
repnz
out
ss
ljmp
loopne
hlt
int
aam
test
lret
cld
int3
test
in
mov
xchg
in
ljmp
shl
leave
into
idivl
cmp
sar
rcr
addl
cli
fisttpll
icebp
stc
cli
xlat
in
iret
fiaddl
jecxz
shl
cld
jmp
jecxz
incl
mov
int
out
aaa
cmp
std
cld
lret
out
cmp
lds
mov
orb
cmc
cmp
loop
imul
call
cmp
xlat
fisttpll
enter
nop
test
test
loop
ror
cmp
jmp
fsub
mov
inc
cld
fcmovnb
out
xchg
lret
hlt
out
repz
lret
in
call
shr
rcr
cmp
std
call
imul
int3
nop
int
xchg
mov
enter
icebp
aad
fcomip
xor
loope
aam
test
jecxz
ds
enter
fucomi
lock
out
fcom
cmp
jmp
sub
faddl
orb
in
iret
xbegin
fcompp
aas
loopne
frndint
jecxz
aam
xchg
in
ljmp
rcl
das
loopne
shll
ror
in
fidivrl
aad
iret
std
into
shl
loop
fdivrp
mov
fists
lret
rcr
rcl
rcr
ss
into
or
test
jecxz
ret
out
out
loop
adcl
aaa
into
xor
leave
iret
cmp
jecxz
xlat
leave
cmc
decb
jmp
out
aaa
xor
fstp
into
cmp
in
div
cmp
rcl
out
in
iret
int3
mov
shl
xor
iret
cmc
repnz
into
fadds
enter
cli
ffree
stc
sar
int
xor
leave
aam
aad
ljmp
loope
fsub
fcom
loopne
test
mov
xor
cmp
iret
fadd
rcr
cmp
bnd
aad
fstl
xchg
repnz
stc
enter
iret
cmp
int3
hlt
in
aas
fcmove
out
rorl
stc
fimuls
jmp
stc
xor
in
xor
fcmove
aad
sub
hlt
rolb
xchg
repnz
mov
inc
int3
cmp
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
xchg
pop
push
ret
jle
add
cmp
std
jmp
xor
stc
out
fcomip
cmc
lret
lret
aad
in
cli
aam
pop
xor
cmp
xor
divb
loopne
xchg
sar
lret
int3
idiv
int3
fcmovne
out
icebp
jmp
repnz
fsubr
lret
fcos
cli
loope
rcl
sti
aad
repnz
clc
lret
lds
fucom
not
in
ror
into
out
loope
jecxz
ret
rcr
fptan
leave
clc
test
nop
call
imul
loope
rcl
enter
jmp
aas
out
loopne
dec
mov
stc
jmp
out
sar
lret
in
ljmp
cmp
fcmovnu
adc
xor
xchg
mov
xchg
out
icebp
int3
int3
cmp
int
loopne
out
div
xor
lret
fstp
jmp
stc
out
sti
shl
xor
xor
loopne
aam
in
out
icebp
xchg
xchg
out
in
int3
shll
repz
jmp
aaa
repnz
cmp
std
mov
test
movl
sti
enter
aaa
sti
cmc
in
shl
cmc
aam
hlt
shr
incb
out
test
lret
enter
jmp
ret
cld
aaa
out
icebp
cmp
roll
xchg
in
jmp
aaa
out
div
ljmp
ret
test
test
mov
orl
test
loop
icebp
repnz
cmc
leave
cmpb
cmp
lret
out
nop
xor
xchg
loop
mov
leave
in
std
lret
fmulp
fcom
icebp
rcl
hlt
in
in
cmp
std
out
mov
mov
hlt
clc
lret
icebp
out
fnstenv
sti
fidivrl
int
cmpb
in
out
xlat
fisttpll
int
jecxz
aad
out
iret
aad
aad
out
rcr
idiv
fimuls
mov
loope
xor
cmp
loopne
stc
jmp
loop
cli
enter
loope
jmp
xor
jmp
aad
cmp
loope
in
out
aas
aas
hlt
loopne
cmc
mov
cld
fcmovnbe
in
leave
roll
cmp
lds
cmp
cmp
cmp
sti
in
repz
sar
out
jecxz
xchg
out
shl
xor
sti
fadd
xor
out
stc
iret
test
loopne
ljmp
out
aad
xor
fsub
rcr
rcl
lret
adc
loopne
test
in
nop
mov
int3
enter
leave
cmp
clc
cli
ret
rcr
out
adc
in
in
mov
loopne
out
enter
repnz
fiadds
in
div
vpsubusw
mov
repz
xor
cld
out
cmp
leave
out
aad
hlt
repz
in
std
ljmp
icebp
in
xor
ljmp
out
fnstsw
aas
cli
cmp
loop
loopne
enter
call
ljmp
repz
cli
orb
in
mov
mov
mov
iret
loope
jmp
cmpb
clc
fmul
stc
cli
xlat
loopne
test
jmp
icebp
iret
rol
lret
into
xor
ljmp
fstp
roll
xchg
hlt
iret
xor
fucomi
lret
loope
cmp
sbb
in
out
in
mov
loopne
out
out
jecxz
divl
cli
iret
fst
ret
ret
in
rcr
idiv
lret
fdivrp
jmp
mov
in
jmp
dec
add
aas
cmp
orl
ljmp
xchg
in
sub
into
in
das
out
div
adc
in
sar
enter
out
loope
std
loopne
out
repz
shl
in
jmp
into
cmp
in
fabs
hlt
fistpll
in
jmp
loopne
loope
out
nop
mov
fsubr
out
sti
rcl
lret
xlat
addl
hlt
xchg
jmp
repnz
aad
xor
shr
cmp
fsin
std
cmp
lock
stc
fucomp
loope
sti
loope
repz
out
xor
stc
jmp
cmp
call
idiv
push
les
add
std
sub
test
in
loope
ret
idivl
roll
fcmovnu
jmp
clc
ljmp
xchg
shr
xor
cld
call
cmp
and
rcr
cmpl
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
pop
divb
outsl
mov
jle
add
test
rcr
fucomi
in
loop
into
fucomip
xchg
shl
ljmp
aad
into
lock
mul
shl
in
or
lea
aaa
xor
in
fstpt
loopne
incl
shl
clc
nop
repz
and
xor
call
cmp
test
fildl
mov
ljmp
jecxz
repz
cmp
std
leave
cmp
jmp
addl
xchg
shr
xchg
into
rorb
idiv
into
sti
cmp
loope
fstp
lret
leave
mov
mov
leave
incb
jmp
stc
out
cmc
aad
jecxz
lock
loopne
mov
mov
adc
subl
repz
iret
call
aas
fcmovbe
out
ljmp
icebp
xchg
lock
call
cmp
iret
jecxz
cmc
loopne
aad
ret
loopne
xchg
sub
loopne
int
int
repz
jmp
lock
addl
ljmp
loopne
mov
int3
int3
cmp
aad
icebp
xor
div
fildl
in
fucom
xchg
out
in
jmp
cld
cld
fstp
test
testb
call
jmp
in
leave
iret
cmc
hlt
xchg
hlt
stc
in
repnz
aaa
int
ds
fcmovnb
div
filds
cld
xbegin
ljmp
xor
icebp
aas
cmp
cmc
aad
in
jmp
cld
addl
icebp
jmp
in
in
loope
into
in
aaa
rcl
xchg
out
jecxz
clc
fmull
lret
ljmp
sbb
xchg
cmpb
jmp
vpsubq
clc
fcmovbe
sti
mov
call
aaa
out
sar
icebp
aam
fdivrs
hlt
loop,pt
xlat
cli
loope
test
enter
or
call
xlat
std
clc
cmp
xlat
aad
mov
ret
xchg
mul
icebp
aad
shll
iret
iret
leave
fucomp
addl
call
xchg
aad
cmc
ror
loop
out
das
repnz
repnz
lock
cli
out
nop
cld
out
orl
out
cli
flds
cli
repnz
decb
into
fucomi
icebp
int3
loop
out
lret
ss
aad
loope
testb
rorl
cmp
hlt
into
cli
into
leave
cli
jecxz
cli
fldl
hlt
fiaddl
xchg
icebp
int3
sub
sarb
into
in
cmp
int3
ljmp
fdivrp
stc
jmp
sub
enter
mov
ror
out
shl
cmpl
int
mov
shr
into
repnz
xor
fcmovb
xor
clc
in
rcr
shr
xor
fdivrs
fstp
in
sti
fsubr
mov
div
rcl
aaa
stc
jmp
jmp
loopne
out
xchg
jecxz
loop
aas
shl
hlt
roll
out
sti
jmp
repz
in
aam
out
sar
add
out
out
icebp
cmc
xor
int
cmp
lret
fsin
iret
int3
cmp
repz
sbb
std
lock
xchg
jecxz
into
fdivs
lock
imul
shlb
in
out
out
rcr
ret
rcl
cmp
fiaddl
loop
aad
jecxz
aam
lds
call
jecxz
loopne
out
loop
leave
fstp
clc
out
stc
xchg
sti
mov
test
ror
enter
cmp
in
shl
cmp
mov
out
mov
in
clc
aaa
lock
cmp
out
rol
addb
std
clc
nop
out
int3
shl
ret
out
idivb
xor
repnz
ret
fiadds
mov
iret
mov
iret
mov
jecxz
vucomisd
xlat
sti
rcl
std
ds
cmc
test
leave
leave
stc
loopne
rorl
aaa
repz
ss
out
cmp
jmp
out
mov
mov
out
in
out
imul
jmp
ds
addl
mov
std
aam
ror
fcmovnu
fcom
faddl
out
loopne
cmc
jmp
mov
mov
loopne
rorb
js
inc
add
jge
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
fst
sti
pushf
mov
jle
add
cmc
int
xor
xor
ss
sar
hlt
shl
aad
xlat
repz
mov
xchg
mov
ss
sarl
ljmp
loope
jecxz
fdiv
stc
test
test
sti
jmp
loop
test
in
jmp
call
fcmovnu
in
aas
cmp
aas
icebp
roll
std
mov
and
ss
aaa
fcomp
loopne
cmp
fdivr
cmp
stc
jmp
mov
aam
aam
sarl
idiv
loope
clc
adc
call
sti
fcoms
mov
int3
xor
rcr
in
fdivp
loope
jecxz
loope
xchg
shr
iret
divb
jmp
in
out
aaa
fmul
fxch
ret
cld
ret
loopne
int3
int
out
test
shr
out
fisubrs
int3
out
shr
cmc
out
lret
aam
rol
mov
repz
fucomi
fiadds
mov
lock
fdivrl
repnz
aad
aad
rol
stc
cmc
cld
fabs
fsubrp
iret
sbb
clc
vpsubb
aaa
rcl
lock
in
fisttps
iret
loop
xchg
xchg
aam
mov
fxch
fcmovne
div
idivl
shl
xor
stc
test
mov
in
lret
shr
in
cli
repnz
loop
lock
sti
aam
sar
movb
adcb
leave
int
int
fdivr
loop
adc
testl
enter
ret
jmp
hlt
std
repz
std
out
aad
xchg
sarl
jmp
in
out
icebp
loopne
shr
in
fucomi
ss
rcl
fsubp
ds
xchg
aam
loopne
mov
out
hlt
hlt
loope
loope
ret
enter
adc
aad
stc
lds
ret
nop
test
lret
repz
iret
loop
sub
in
std
ljmp
mov
lret
fst
lock
rcl
enter
cmp
loop
fildl
fdecstp
xchg
xor
sti
das
call
cld
ss
xchg
in
loop
mov
out
ljmp
cmp
neg
loopne
addb
fmul
test
in
fucomip
sub
rcl
mul
test
jmp
out
test
lret
fucomi
nop
xchg
mov
sbb
aaa
shl
enter
fidivrl
aam
loop
xlat
cld
hlt
aam
cmc
in
out
std
jecxz
in
in
ror
stc
xor
cmp
out
fdivr
sti
hlt
loopne
loopne
addl
test
jecxz
xchg
test
call
std
fscale
jecxz
ret
loop
ret
mov
decb
ljmp
jmp
ss
addb
ret
ret
out
in
repnz
hlt
fsub
enter
in
sti
fmul
cmc
idiv
cmc
cmp
call
xchg
lret
aam
clc
out
repz
add
mov
roll
lea
aam
enter
clc
stc
leave
repz
into
cmp
fsqrt
loop
sarb
in
test
jmp
mov
mov
out
xor
shl
enter
call
cld
aam
aad
std
aad
faddl
int
out
shl
frndint
test
ds
repnz
xchg
incb
into
int3
xor
ss
xor
cmp
in
out
fnstsw
cli
filds
ret
loope
out
loop
out
repnz
div
jecxz
aam
int
or
out
ret
clc
faddl
xchg
xlat
in
rcr
cmc
cmp
loope
jecxz
rcl
jecxz
xchg
fdivrs
iret
jmp
xor
aad
aad
ljmp
fucomip
adc
stc
or
mov
hlt
xlat
shl
xlat
iret
cmp
hlt
fmulp
aaa
inc
ret
sti
jmp
jecxz
jmp
loop
xor
lret
sub
in
not
lret
ljmp
vpmaxub
testb
lret
mov
jmp
xor
clc
xlat
cmc
loop
xlat
fsubr
rcl
cmc
fstp
mov
out
fcomp
fmull
xor
aam
cmp
cmc
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
mulb
clc
gs
xchg
add
add
jmp
cmp
jecxz
cmc
loopne
lret
nop
loop
hlt
sub
int
jmp
idivl
inc
out
icebp
xlat
cmp
jmp
hlt
popl
xor
jmp
stc
fstp
lock
loop
fst
fimuls
test
sbb
enter
aas
fdivl
cmp
ds
dec
sub
out
lock
fldl
xor
mov
aaa
int3
loopne
out
faddl
mov
mov
out
out
fmull
clc
clc
fyl2x
enter
cmp
loopne
icebp
in
mov
enter
mov
sar
std
mov
xchg
xlat
enter
out
shr
cmp
cmp
sti
cmc
loopne
imul
ret
test
out
in
mov
xchg
out
ret
loop
jmp
jmp
cmc
loop
test
rcr
ret
cld
mov
test
out
ret
xor
into
int
ljmp
shl
dec
loopne
ret
jmp
rcll
shl
loop
int
sar
clc
fsqrt
into
fprem
xchg
sbb
cld
clc
out
std
faddl
aaa
xor
repz
cmc
ljmp
rcl
inc
cli
test
jmp
sti
mov
out
lock
lret
out
xlat
ljmp
iret
test
hlt
nop
mov
xchg
jmp
aad
neg
ss
xor
test
lret
mov
lret
int
rcr
shl
jmp
leave
imul
into
and
cmpl
incb
faddp
int3
orl
jecxz
shl
ss
stc
xor
aas
and
xchg
ljmp
shl
repz
not
push
ror
cld
stc
cli
and
mov
loop
jecxz
int3
call
xor
jecxz
lret
leave
not
cld
fdivr
xlat
cld
cmc
xlat
cli
std
out
loopne
pop
int
repnz
xchg
loopne
out
xor
sar
test
inc
fdivr
cli
mov
mov
out
xchg
test
out
rcl
idivl
lret
cmp
loope
out
xor
jmp
fadd
stc
clc
shl
xchg
mov
rcr
lds
lret
sub
jmp
idiv
rcl
rorl
out
in
in
cs
stc
xlat
sti
jmp
repnz
sbb
sar
ljmp
out
test
sti
cmp
neg
hlt
cmp
std
lock
clc
loopne
aas
fucomi
jmp
xchg
ss
ror
sti
fndisi(8087
rcr
and
addl
fdiv
filds
int
fcmove
cmp
adc
xlat
out
shl
xlat
loopne
ljmp
sub
cli
out
jmp
iret
in
repz
repnz
roll
sub
enter
cmp
icebp
imul
cmp
fcmovnb
repnz
aad
imul
addb
jecxz
fcomip
xorb
xor
lret
cmp
xor
fcomi
cmp
lds
xchg
jmp
mov
out
lea
icebp
lret
cmp
into
out
test
xlat
filds
std
fldl2t
xchg
xchg
in
shl
int3
xor
sub
in
sar
xor
int
iret
out
ret
aad
fimull
into
xchg
cmc
das
out
xor
cmc
fmul
std
int3
idiv
int3
cmc
out
and
jmp
in
push
mov
repz
in
lock
int3
out
fdiv
cmp
repnz
lret
fucom
aad
out
call
iret
xchg
xchg
iret
xchg
sub
enter
cld
cmp
ss
in
out
and
test
orb
sti
bnd
cld
cli
aam
aad
faddp
jecxz
out
lock
in
shr
sarb
enter
sar
loopne
repz
fxch
jmp
in
xchg
test
les
xor
shll
idivl
hlt
rcr
cmp
aas
cmp
fneni(8087
cld
jmp
aad
lret
int
leave
hlt
cmp
fcomp
and
faddp
cmp
mov
iret
ljmp
call
jecxz
clc
cmp
cli
repz
mov
cli
ret
addb
cmc
repnz
fidivs
xlat
faddp
repz
loopne
ret
jecxz
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
push
push
jbe
add
add
loop
sar
lret
iret
iret
aas
enter
xor
out
fcmovnu
test
xchg
enter
call
in
out
div
in
imul
rol
cmp
icebp
loop
ret
jmp
stc
loop
iret
test
mov
clc
enter
out
loope
aad
ret
rol
adc
cld
call
loope
iret
int3
int3
xor
das
call
int3
aas
ljmp
movb
lock
fucomi
mov
out
sub
ss
iret
repnz
rcl
rcl
cmp
neg
les
hlt
sub
mov
in
cmp
xor
std
std
idivl
jecxz
int3
aad
in
ret
mov
mov
repz
repnz
cmp
int3
into
loopne
cmp
test
jmp
xlat
loopne
fldl
repz
aam
cli
bnd
in
cmp
cmp
out
xor
cld
ljmp
in
int3
icebp
idivl
idivl
fucomip
out
hlt
lret
lret
test
hlt
in
loopne
icebp
int
fmul
jmp
iret
xchg
dec
neg
lret
jecxz
loop
loopne
out
orb
ret
out
jmp
std
ret
div
jecxz
decb
leave
fcmove
jmp
xchg
xor
out
into
fdivrl
xlat
repnz
loop
icebp
loopne
xchg
mov
cld
sti
repz
rol
cld
ds
clc
test
add
cld
ljmp
les
xor
in
ss
not
jmp
ds
xchg
into
cli
fcmovne
cld
out
fmulp
xchg
xor
in
aad
jmp
out
hlt
cmp
loope
iret
xchg
repz
fsqrt
cli
xchg
in
iret
repz
jmp
clc
xor
int3
in
icebp
fyl2x
hlt
ds
call
testb
lock
aam
rcl
cmp
stc
in
rcr
roll
testl
xchg
rcl
xor
out
ds
fdivp
repz
cld
std
call
cld
sbb
in
xor
vshufps
aam
out
cmp
cmc
aad
neg
loopne
addl
test
out
div
lock
in
xlat
cmp
fucom
les
xchg
xchg
cld
and
mul
std
xor
out
aam
xor
iret
loopne
aas
loope
rcl
hlt
ret
xchg
xchg
lret
out
lock
aaa
cli
out
fscale
lret
aad
addb
repnz
lret
jmp
int
clc
int
call
repz
rcl
out
xlat
in
repz
mov
repz
in
stc
jmp
loopne,pt
fcom
cmp
out
ret
cld
fisttpl
jecxz
repz
ret
enter
fsubr
std
into
rcr
aad
rcr
shl
cli
test
cmc
call
shl
int3
out
loop
call
std
or
clc
fsub
aaa
loopne
cli
jecxz
loopne
out
mov
lock
fld
jmp
ds
testl
lret
xchg
loopne
out
out
enter
imul
fmul
fsubrp
out
loope
cmpb
jmp
rorl
xor
xlat
repnz
out
clc
aaa
leave
xlat
int
fcmovb
sarl
fsub
clc
ds
cli
xchg
xor
into
int3
loopne
shr
lret
clc
sar
ds
shl
repnz
out
in
out
cld
jmp
cld
iret
mov
sti
out
loop,pt
shl
hlt
loope
in
filds
sti
call
clc
out
aam
fdivrs
int3
int3
cld
in
in
loope
incl
cli
test
into
nop
loope
into
icebp
fisubrl
lock
loope
cmp
and
mov
test
xchg
rolb
aam
out
ss
cmp
int
test
faddp
out
stc
int
lret
lret
std
xchg
shl
ret
enter
lret
icebp
lret
test
inc
aad
jecxz
dec
iret
mov
jmp
in
into
idivl
aaa
xor
jmp
ds
loope
mov
stc
xchg
repz
into
in
cli
repz
xlat
cmp
flds
aad
loop
mov
mov
jmp
icebp
imul
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
repnz
jmp
lret
loop
jmp
xchg
clc
iret
loope
popl
cli
in
std
xor
clc
aas
shl
loop
cmc
sti
cld
loopne
rcr
hlt
int3
xchg
lret
fimuls
jecxz
lret
repnz
loop
ret
xlat
hlt
mov
xchg
int3
ret
xchg
fmul
cli
fucomip
xchg
out
leave
shll
call
cmc
out
loop
rcl
std
jecxz
mov
in
iret
test
sar
xor
hlt
in
hlt
jmp
jecxz
sti
not
cmp
mul
cmp
mov
jecxz
rol
in
cs
ljmp
fucomip
call
lds
fimull
fcom
cmp
icebp
ss
fnstsw
cmp
test
test
into
lock
ror
sarb
cmp
in
enter
jmp
lock
fst
call
xlat
iret
nop
fdivp
mov
jmp
out
fidivrl
ss
xor
cmp
jmp
fsubr
fmuls
jecxz
cmp
hlt
hlt
repnz
lret
loope
sarb
xor
in
out
addl
imul
xor
in
xor
jmp
push
fdivrp
test
ljmp
call
rol
ret
lret
into
shl
in
fcmovnu
xchg
icebp
aam
testl
rcl
lret
in
fnsave
stc
int3
cli
int3
rol
icebp
cli
neg
loopne
cli
cli
incb
into
shr
iret
hlt
cld
idivb
out
cmp
loop
icebp
aam
decl
icebp
in
enter
clc
out
fsubrp
bnd
cmp
iret
jecxz
not
fisttpl
mov
xchg
xchg
cmc
dec
cmp
and
fdivr
jmp
stc
call
int
lret
aaa
in
into
ss
dec
sarl
push
aad
rcl
leave
int3
jmp
out
in
out
lock
cmc
cmp
aaa
jmp
ror
rcr
shl
out
clc
test
sub
out
lock
cld
cmp
lret
ss
fisttpll
aad
out
nop
xchg
xchg
lret
jecxz
repnz
hlt
fsub
fdivrp
aad
ret
aam
xchg
addl
nop
fbstp
cmc
ret
cmp
cmc
out
iret
cmp
in
shl
xlat
cmc
fiaddl
test
repz
jmp
fildl
flds
lret
ljmp
nop
test
ror
cld
repz
cli
div
cli
hlt
sti
out
cmp
in
idiv
mov
leave
into
icebp
fdiv
shlb
xlat
fpatan
cld
ffree
in
stc
cmc
out
fmull
jmp
lock
lret
aad
enter
repnz
aaa
lock
shl
lock
rcl
cld
vpsraw
fcmovnb
rcl
rcr
ljmp
mov
lock
jmp
fldl
aad
out
in
call
loopne
call
cmp
aas
xor
cmc
std
sub
test
addl
leave
fcmovne
jmp
out
cmp
mul
call
mov
enter
stc
fdivrs
ror
in
shr
jecxz
xchg
fcmovbe
repnz
decb
shl
aaa
aaa
int3
in
call
lret
ss
std
mov
jmp
out
loopne
sub
xchg
test
cmc
iret
jmp
fcmovb
icebp
iret
shl
movb
xchg
nop
lret
out
test
rol
ljmp
cli
clc
neg
idiv
aam
addb
repz
out
cmp
xlat
iret
fcmovnu
iret
cmp
xorl
lds
xchg
test
repz
icebp
sti
stc
lock
loope
rolb
cmc
call
icebp
iret
int3
loopne
aad
loop
out
imul
sti
add
addl
iret
fstl
in
ljmp
jmp
fadd
repnz
test
cld
test
out
jmp
repz
std
rcr
cli
in
ffree
cmc
jmp
jmp
incb
clc
loope
icebp
cmp
xor
sub
ds
mov
rolb
add
add
add
add
sbb
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
and
mov
jle
jmp
loop
mov
xlat
lock
ljmp
fscale
iret
jmp
fsubr
test
in
rcl
loopne
into
shl
sarl
hlt
into
neg
xor
fisttpll
loopne
call
shlb
in
ror
jmp
xlat
jmp
add
xchg
out
lock
in
iret
lock
ljmp
jecxz
fsin
fstpt
in
out
loopne
enter
xchg
aam
icebp
fmul
out
out
enter
aas
cld
ds
fdivr
mov
hlt
loop
clc
cli
repz
cmp
cmp
lret
xlat
fdivp
xchg
lds
call
aaa
cmp
aaa
cmp
ljmp
sarl
aam
cmc
loopne
enter
in
xchg
mov
out
xor
sar
loopne
inc
icebp
cmp
jecxz
cld
testl
out
jecxz
loope
aad
jmp
repnz
filds
sbb
int3
lea
into
lret
out
xor
cmp
cmp
sarb
cmp
idivl
loop
leave
ljmp
jecxz
hlt
iret
cld
sti
sti
jmp
loop
les
loop
ljmp
cmc
test
in
lret
jmp
cmp
fcomip
adc
enter
int3
lret
repz
cmc
leave
cmp
cmp
cmp
cld
in
into
and
enter
call
enter
call
shr
out
shl
lds
loop
into
out
fsubr
loopne
in
xchg
in
ret
neg
filds
inc
decl
ljmp
into
mov
out
out
icebp
jmp
imul
cmp
cld
idiv
cmc
shl
lret
rol
cld
mov
in
cmc
fmulp
out
clc
and
shl
cmp
int3
out
sti
lret
jmp
loope
aam
lret
mov
aam
jecxz
sti
bnd
aad
enter
int3
int3
shl
test
divl
fnstcw
into
aam
ss
cmp
and
roll
jecxz
mov
loopne
xchg
call
enter
cmc
cmp
icebp
loop,pt
out
int
fcos
orb
fsubr
lock
clc
aad
cmpb
test
fcmovne
lea
das
leave
out
cmp
xor
shr
in
repnz
in
ret
testb
aam
sub
cmp
test
fsubr
int
cmp
loopne
aam
in
fsts
call
out
not
enter
into
xor
faddp
fst
loope
test
sub
repnz
icebp
aaa
leave
icebp
hlt
aam
repz
hlt
cmp
sub
in
mov
leave
out
call
out
aam
out
jmp
loope
fcom
call
mov
out
fldl
hlt
iret
ljmp
cmp
mov
out
fucompp
lock
loop
rorl
out
rol
clc
icebp
fcmovbe
sar
aas
ret
cli
in
fucom
mov
lea
mov
fdivr
fcmovne
into
neg
rolb
out
fcmovu
imul
ljmp
ror
in
fmul
xor
xor
into
ret
and
xchg
shr
test
mov
icebp
in
call
jmp
fiaddl
cld
test
fucompp
rcl
in
stc
jmp
xchg
in
in
aam
ljmp
cmc
iret
test
repnz
fdivr
in
cld
jmp
in
fists
xor
lret
cmp
fstp
repz
fadd
ret
cmc
into
jmp
in
rcl
lock
fdiv
ss
aaa
icebp
jmp
aas
testl
sti
cli
cld
fcmovu
mov
jecxz
jmp
out
in
jmp
xor
and
incl
fucomip
in
cli
decl
xor
xor
cli
loope
fdivp
sarb
fxch
cli
stc
shl
in
jecxz
loope
ret
imul
idiv
std
fstpt
jmp
cmp
loope
icebp
xor
ljmp
addl
fucompp
lds
add
aam
rcr
fstp
fnstsw
fmull
inc
pop
inc
je
movsl
add
add
mov
xor
cmp
aad
out
icebp
std
rol
test
repnz
cli
fmul
jecxz
mov
xchg
repz
cmc
loope
xlat
cmc
cli
ljmp
sti
fimuls
mov
in
xlat
into
clc
xlat
sarb
aaa
hlt
clc
in
shl
fdivrp
aas
aad
cmp
xchg
aad
out
rcr
call
test
out
xlat
loopne
jmp
lret
loopne
shl
xlat
jecxz
lret
int3
cmc
not
aas
out
shl
adc
aas
fucom
int3
ljmp
std
test
int3
fcmove
xor
cmp
rcl
cmp
cmp
hlt
in
icebp
rcr
out
fadd
iret
into
ljmp
jmp
lock
xlat
lret
cmp
rcl
enter
test
xchg
nop
incl
ret
std
roll
fpatan
test
rol
jmp
jmp
loop
iret
lea
fucomi
lret
repnz
ljmp
aad
jmp
decl
xor
out
stc
ror
sub
fnstsw
fcmovnb
loope,pt
ljmp
std
out
int
fildll
xor
ljmp
clc
cld
fcmovbe
cmp
cld
rcr
add
iret
incl
jmp
aaa
out
cmp
sarb
rol
xlat
xchg
loopne
test
iret
leave
rcr
icebp
shrl
cmc
aaa
xor
iret
cmp
call
repz
filds
test
in
in
ret
lock
xlat
xor
in
hlt
in
call
xlat
mov
ret
sbb
lret
int3
in
xor
aad
icebp
cmc
ljmp
aas
hlt
mov
cld
in
ljmp
fmul
out
shl
cmp
loopne
jecxz
in
cmp
loopne
xchg
mov
fucom
out
cmc
out
aad
ret
sarb
rcr
lock
fdivr
roll
fldlg2
out
and
test
ss
sti
cmp
jmp
hlt
cld
ret
ret
cld
xlat
mov
lret
loop
shr
hlt
lds
jmp
enter
fdiv
hlt
shl
out
mov
mov
adcb
clc
loope
shr
lret
leave
in
aas
loop
loope
mov
sti
flds
lock
aam
cmc
sbb
sarb
std
stc
clc
lret
into
leave
out
ljmp
cmp
aam
int3
lret
loopne,pt
adc
cld
sti
in
in
jmp
in
shll
xlat
xor
std
cmp
hlt
int
in
fadd
jmp
in
mov
mov
in
cli
ljmp
adc
hlt
cli
std
mul
leave
mov
xchg
repz
out
lock
cli
aam
in
repz
xlat
rorb
dec
fmulp
cmc
xchg
jmp
int
ss
int
les
lds
mov
cld
mov
sti
cs
fdivp
lock
div
xor
mov
testb
call
fidivl
lret
out
cmp
in
cmp
xlat
std
fcmovnbe
and
xor
sbb
out
loope
adc
shll
rcl
cli
idivb
jecxz
repz
movl
loope
loop
xor
int3
cli
repnz
fucomip
cmp
rcr
faddp
idiv
loopne
shr
stc
mov
repz
ret
jmp
cmc
cmp
fmul
ds
mov
jmp
fmul
cmp
cld
cmp
fstp
push
stc
in
loope
xlat
iret
stc
incl
out
int
in
cmp
std
cmp
fdivrp
ret
in
out
jmp
mov
call
mov
in
xor
rolb
ret
ret
loope
fidivrl
out
cli
shr
repz
ljmp
std
lret
icebp
rolb
fdivrp
mov
out
mov
cmc
jmp
ss
fcomp
jmp
rcl
jecxz
vpaddw
mov
lret
sti
cli
fcmove
cld
jecxz
iret
sbb
sub
enter
lret
fdivrp
incl
enter
out
loopne
mov
in
ret
in
ret
cmp
iret
cmp
fimull
xchg
add
add
or
add
lds
add
leave
aam
aad
aam
sbb
stos
stos
add
add
ror
in
loop
jmp
fucomi
decl
out
ss
jmp
out
incl
xor
in
jmp
out
out
enter
clc
lret
lock
not
aaa
icebp
fucom
out
fadds
mov
shl
int3
iret
out
out
jmp
dec
in
rcl
std
int
dec
xchg
out
out
nop
xchg
test
test
shl
cmp
cli
stc
cli
icebp
into
into
cmp
cli
loop
aas
fcomi
dec
std
xchg
xchg
ss
shll
sar
shl
aam
out
in
rol
ds
addl
xchg
out
les
shr
rol
aam
cld
loopne
repz
sti
cmp
rcl
out
xchg
cli
xchg
sar
in
cmc
in
shl
fdiv
hlt
imul
adc
loopne
mov
out
fcmovne
addl
div
out
hlt
fcomip
sarl
in
lock
cli
lret
loopne
xlat
mov
out
out
in
int
fldz
cmp
addb
fdiv
xor
int3
fildl
loope
fcmovnbe
ror
int
cmp
cmc
rcl
vpsubb
jmp
lret
in
icebp
fucom
mov
shl
out
stc
iret
enter
fdiv
cmp
out
fcmovnbe
addb
jmp
loope
shl
repnz
xor
mul
call
jmp
sti
xchg
loope
test
ret
lock
fcmovnu
int3
call
call
shr
clc
xlat
xchg
clc
xlat
xlat
testl
shl
in
fcom
lock
fcom
ret
in
sti
loopne
mov
sub
mov
lock
in
jecxz
sti
repnz
add
aad
incb
out
loop
in
jmp
icebp
cmp
out
int
iret
ret
fildl
stc
sbb
cmp
iret
out
into
shr
jmp
repz
cmp
iret
fucom
aad
mov
sti
lret
loop
lret
shl
sub
jmp
sar
cmc
aad
or
leave
popl
mov
xchg
in
hlt
out
out
cli
jmp
aaa
int
cld
loope
ret
rol
vshufps
and
mov
mov
test
enter
loopne
roll
mov
in
lret
cli
shr
loopne
repnz
jmp
fcomip
aaa
sub
out
cli
in
sar
mov
aad
leave
cli
nop
leave
rcll
cli
into
std
std
xor
in
lock
stc
aas
repnz
loopne
loop
adcb
shll
out
out
repnz
cmp
jecxz
shl
addb
out
test
leave
repz
jmp
aaa
leave
xorl
repnz
rcr
fxch
fucom
loope
out
icebp
out
mov
jmp
into
lock
clc
shl
cmc
std
out
int
fcmovnbe
roll
nop
mov
xchg
call
out
xor
cmc
enter
cmp
not
div
test
xlat
int
xchg
jmp
addb
cmp
icebp
aam
in
loope
ret
aad
xchg
leave
jmp
hlt
loop
cmc
xor
stc
mul
fsubr
cmp
aas
stc
cmp
lock
aam
leave
faddl
lock
jmp
shr
xor
aaa
stc
fmulp
jmp
sar
xlat
jecxz
fucomp
loope
int3
fdivr
out
jmp
ror
fidivrl
enter
stc
cli
aam
ret
cmp
mov
fmulp
addb
in
in
into
clc
call
cmp
jmp
repnz
sub
xchg
test
div
ret
stc
int3
repz
int3
in
xor
in
fstp
sti
loopne
mov
std
in
ret
mov
into
nop
orb
icebp
sti
enter
cmp
aas
loopne
fdivr
repz
aas
out
in
leave
into
int3
loopne
aam
call
call
lock
leave
cli
jmp
jmp
fdivrp
xor
in
cmp
fucomi
rcl
into
rcl
jecxz
mov
aad
xchg
sub
jmp
enter
cmc
rcr
flds
cmc
neg
imul
shl
jecxz
out
out
out
out
sti
out
aad
loopne
aas
hlt
add
lret
mov
mov
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
cs
jecxz
xlat
scas
add
add
test
loope
shlb
shr
cmp
div
loop
loopne
and
and
jecxz
sti
loope
lret
int
out
aad
icebp
leave
cmp
fmul
int3
fidivrl
shl
ret
aad
clc
addl
lret
lret
cmc
xchg
add
icebp
std
fistpll
into
cmp
test
jmp
out
jmp
ficoms
cs
out
jmp
aad
out
shl
sar
clc
sub
faddl
hlt
jmp
out
enter
fsubrp
jmp
cmp
xchg
fucomi
test
out
into
aam
cmp
sar
cmp
fdivr
shl
cmp
cmp
sbb
call
cmc
jmp
lret
cmp
aas
int3
hlt
fucompp
lret
in
idiv
sub
loop
xor
ret
xor
cmp
fdivr
loope
stc
aam
out
aam
leave
lret
std
into
jecxz
call
int
cli
out
aaa
lock
in
fnsave
xlat
xchg
sar
mov
xchg
call
test
loop
in
sti
ljmp
or
add
adc
out
mov
in
ljmp
fstp
ds
cmp
loop
shr
mov
std
fnclex
ljmp
rol
ret
loop
jecxz
icebp
lret
shl
sti
cli
cli
rcr
in
repz
in
in
ljmp
in
div
xor
jmp
cmp
cmp
shl
incl
leave
loop
lret
out
loope
loope
aam
hlt
sti
fnstcw
ds
jmp
shr
fdivrs
stc
add
loop
mov
loop
mov
mov
out
stc
fcmovnbe
int3
xor
fxch
repnz
shl
in
mov
in
in
ror
shlb
out
shr
rcl
icebp
cmp
fbstp
ds
std
out
repnz
in
mov
lret
repnz
loope
out
addb
vpand
mov
sub
ljmp
enter
repz
jecxz
icebp
in
aad
lret
cmp
mov
xchg
mov
fld
rcl
not
enter
lret
or
hlt
fucomip
fimuls
xor
rcl
lret
ror
cmp
repz
ret
icebp
ljmp
test
mov
leave
out
out
in
in
cmc
neg
repz
out
test
leave
shl
sti
xchg
loopne
hlt
shl
fcmovnbe
lret
cmp
repz
faddl
mov
test
repnz
xchg
xor
xor
rolb
std
xchg
ds
cli
in
addb
out
nop
in
ss
shl
leave
xlat
icebp
idiv
ljmp
aam
cmp
jmp
xchg
out
into
aas
iret
loope
call
cmp
icebp
iret
sti
lea
nop
fisttpll
shl
cmc
stc
clc
fabs
out
and
xchg
lock
cli
and
and
xchg
into
in
divl
cmp
iret
rcr
loop
stc
sub
sbb
fimuls
xchg
cs
lret
fdivrp
loope
cmp
repz
iret
aad
out
lret
hlt
mov
in
jecxz
hlt
std
in
out
rcl
in
imul
idivb
fcmovbe
loop
repnz
mov
test
nop
fsubrp
mov
fcom
out
cli
sarb
ljmp
rcr
fcmovbe
in
mov
xchg
out
sti
incl
out
enter
imul
leave
aad
cli
loop
in
flds
rorl
fld1
sub
icebp
ror
loopne
faddp
repz
fsubp
mov
xchg
roll
bnd
cmc
rcl
cmc
call
cmc
loopne
loopne
loop
enter
hlt
lret
cli
shr
shr
mov
call
cmp
loop
ror
cld
aas
fstp
clc
loope
jmp
leave
fldl
call
jmp
cmp
lock
loope
out
in
mov
mov
shr
aam
int
xor
in
sbb
mov
lret
ljmp
sub
in
rol
iret
cmp
out
add
rol
stc
jmp
mov
fsub
mov
cli
repz
mov
jmp
rcl
ret
fucomp
insb
fstps
movsb
fmulp
lea
add
jg
jle
aam
fdivrl
aam
clc
cmp
mov
ret
dec
xchg
lret
lock
aam
call
leave
std
iret
fidivrl
fildl
fxch
enter
out
xchg
call
jmp
not
xor
repz
and
fsub
filds
cli
mov
in
loop
cld
lret
cmp
lret
xlat
incl
les
in
xchg
in
rcl
rcr
icebp
iret
sti
into
sar
xor
call
into
xor
in
rcl
out
cmc
stc
in
fmul
xor
fdivp
cmp
fdiv
cli
aad
test
mov
test
fucomp
call
mul
cld
aad
loope
xlat
push
in
fcmovnbe
out
leave
in
and
ror
repz
jmp
cmp
cmp
xor
test
loope
imul
fucomi
shl
xchg
out
into
xor
icebp
cmp
cmp
rolb
sarb
fdivrs
jmp
fcmove
ficoms
xchg
xor
fxch
neg
int
not
icebp
cld
icebp
std
rol
aas
cmc
lret
out
iret
fmul
repnz
jmp
cmp
test
fdivr
sti
rol
fcmovu
leave
hlt
cli
in
neg
lds
addl
cld
out
xor
inc
in
jecxz
call
ljmp
repnz
out
enter
cmc
jmp
sarl
in
test
adc
in
cmp
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
