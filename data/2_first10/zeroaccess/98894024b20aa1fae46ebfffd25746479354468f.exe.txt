push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
xlat
push
pushf
jo
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
scas
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
fdivr
xchg
fisubl
adc
jecxz
ljmp
loop
push
test
repnz
xor
cmpl
adc
mov
clc
adcl
dec
stos
fidivrl
fsubl
or
aas
adc
iret
lret
pop
xor
gs
je
in
mov
xchg
daa
shlb
stos
test
imul
int
inc
inc
outsb
or
pop
insb
xchg
dec
jmp
cmpsb
cmpsb
addb
icebp
pop
jo
shr
push
inc
sbbl
das
mov
xor
cmp
push
outsl
dec
sub
lock
jmp
imull
aas
icebp
pop
hlt
inc
outsb
mov
shlb
clc
mov
out
daa
add
sub
mov
mov
cmc
into
lahf
xchg
mov
test
xor
cli
mov
jmp
push
dec
sbb
adc
loop
mov
imul
aaa
jns
insl
leavew
dec
adc
lods
or
pop
or
ret
mov
lahf
jge
lods
fisubs
fs
in
push
fwait
cmp
push
out
mov
jmp
clc
icebp
mov
icebp
ficompl
cmp
jo
jo
mov
cli
insl
sub
jl
adc
in
gs
sbb
mov
adc
test
test
rcl
cmc
daa
cmc
decl
adc
sub
dec
mov
jb
insl
lret
shlb
fnstsw
mov
adc
iret
sub
sbb
push
fcom
inc
jle
sub
sbb
sahf
sbb
movsl
imul
mov
cmpsb
jbe
jl
xchg
imul
fwait
mov
sbb
pop
dec
adc
jbe
add
cmc
jo
movsl
xchg
lret
mov
fcoml
cmp
mov
pop
std
push
pusha
int3
rcll
mov
je
or
sbb
int3
hlt
or
cltd
sub
sti
test
jmp
push
cmp
dec
xor
lock
pop
sub
cltd
jmp
outsl
inc
cmpb
pop
xor
xchg
outsl
hlt
push
aas
lcall
outsb
insb
mov
out
test
inc
mov
or
fiadds
inc
mov
adc
push
std
insl
inc
pop
lods
ret
addr16
xchg
and
jbe,pn
fidivl
ljmp
and
add
and
std
inc
jl
leave
fs
mov
lds
sbb
into
loop
push
lcall
dec
sahf
and
sar
dec
xchg
xchg
sub
int3
xchg
pop
daa
pop
bound
ret
xlat
mov
xchg
sbb
aas
stos
ret
pusha
mov
or
shlb
or
aad
or
cli
pushf
in
push
add
retw
add
xor
xor
push
sbb
data16
lods
sahf
xor
or
iret
movsl
addl
or
mov
cmp
xchg
cmpsl
loope
mov
cltd
loopne
repnz
push
insl
hlt
bound
imul
pop
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
pop
fdivrl
jo
jo
jo
jo
fcmovu
sti
imul
adc
xchg
jbe
xchg
mov
xor
push
pop
idivl
adc
aad
movsl
fbld
mov
outsl
movsl
fdivrl
adc
clc
adc
dec
mov
mov
inc
repz
in
add
mov
dec
cmc
lods
frstor
or
movsl
daa
call
incb
daa
je
sbb
xchg
mov
addr16
jge
add
cmpsb
and
xchg
sbb
pop
dec
xor
sbb
push
lock
flds
aad
pusha
sub
mov
cmpsl
cwtl
aaa
aaa
jle
mov
mov
rolb
nop
sbb
jns
mov
jae
ljmp
mov
popa
stc
outsb
imul
es
push
xchg
stos
mov
cmp
stos
adc
jb
lock
mov
xor
push
or
lahf
test
and
sbb
jbe
pop
push
add
insl
inc
mov
rorb
xor
lcall
and
inc
push
or
std
addr16
pop
js
pop
jne
test
in
jno
pusha
jne
test
pop
fistpl
mulb
mul
stos
lds
sbb
jbe
xchg
hlt
add
jb
test
or
mov
fcmovbe
insb
mov
xor
lods
cli
sub
adcb
lock
xor
mov
into
jns
rcl
xchg
imul
outsb
lea
rcrb
pop
inc
lret
mov
dec
test
into
jecxz
adc
fnstsw
fnsave
adc
sahf
test
mov
mov
in
fdivp
adc
inc
aad
loopne
sahf
or
inc
fwait
test
jne
adc
sbb
stos
adc
clc
inc
ljmp
aam
xchg
je
fcomi
test
imul
pop
adc
and
pop
push
xor
push
fstl
dec
xchg
mov
pop
xlat
dec
jnp
dec
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
mov
xchg
jo
jo
jo
jo
pop
cmp
pop
arpl
int3
cmp
insl
fsub
cmpsl
repz
in
arpl
aam
ljmp
push
in
out
cmp
movsl
test
inc
loop
repz
shr
mov
fidivl
into
xor
shrb
jp
pusha
rcll
test
push
xchg
loopne
mov
cld
dec
lcall
bound
adc
cs
mov
dec
mov
cmp
shl
aam
pop
or
test
inc
shl
insb
aas
and
jmp
movsb
add
adc
fstpt
cmp
outsb
clc
mov
pop
call
sbb
or
push
sahf
pop
stc
insb
ja
cmp
inc
pop
pusha
call
outsl
popa
push
adc
or
mov
jecxz
or
in
in
in
mov
test
pop
outsl
addr16
jno
mov
lcall
xchg
jns
pop
jne
add
loop
push
inc
nop
punpcklwd
test
data16
push
dec
fistps
insb
sti
push
sbb
insb
outsb
in
ljmp
inc
cmc
sarl
loopne
jns
inc
sbb
xor
jmp
xor
addr16
in
add
nop
addb
lahf
sbb
jmp
mov
push
andnps
pop
jbe
aas
jp
mov
out
pop
push
jg
imul
mov
push
cmp
imul
xor
cmp
lahf
push
fcompl
mov
jo
sub
pushf
ljmp
inc
cmp
mov
push
scas
sahf
ret
or
cmp
fcomp
pop
decb
mov
std
call
gs
lods
mov
nop
lock
loopne
xchg
jae
push
jnp,pt
sarl
adc
int
or
ffree
imull
roll
pop
and
sbb
fstpl
jne
ret
fildl
ljmp
bound
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
pusha
add
jo
jo
cwtl
jne
arpl
clc
mov
add
and
adc
push
xchg
lods
shlb
or
movsl
or
jmp
addb
cld
filds
adc
sbbl
mov
pop
sbb
sub
loopne
ljmp
push
jno
mov
adc
iret
mov
mov
jmp
and
dec
into
jg
fistl
jl
cmp
or
pop
dec
sbb
push
loop
mov
sub
addl
mov
fisttpll
cmp
xlat
cs
out
test
lods
test
gs
mov
test
cmpsb
push
test
mov
test
scas
fnstenv
inc
and
pushf
cmpsb
adc
fstpt
dec
ljmp
jecxz
stc
dec
jne
adc
sbb
mov
in
cwtl
shrl
cmp
jae
sbb
pusha
jb
popf
push
aad
loop
xchg
mov
sub
jp
mov
fwait
add
mov
xor
popf
push
fs
jb
movsl
insl
loopne
jbe
sub
jg
scas
arpl
insb
jo
mov
mov
movsl
add
mov
cmp
or
out
xor
and
icebp
sbb
xor
popa
shll
and
daa
paddusb
xchg
jmp
add
shrl
xor
rcrb
jmp
icebp
jp
adc
push
lods
and
adc
sahf
sub
fldcw
int
lret
push
shrl
mov
data16
cmp
sbb
push
aas
jp
in
in
pop
in
je
les
ds
test
fistpl
mov
rcr
push
dec
push
negl
dec
les
mov
jbe
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
sub
jo
jo
jo
add
sub
clc
push
add
in
jbe
ficompl
push
inc
inc
mov
xchg
out
mov
push
xchg
sub
mov
and
dec
popa
lcall
call
fs
dec
push
in
sbb
cmp
xchg
outsb
in
fisubrs
cmp
add
outsb
push
xchg
sbb
jmp
xchg
inc
mov
mov
lods
mov
in
dec
mov
adc
movl
fistpl
and
cmp
or
fildll
cmp
lcall
mov
stos
loopne
dec
movsb
add
mov
and
xlat
sbb
lcall
int
sbb
int
aas
loope
cmp
add
ret
addr16
inc
xchg
xor
pop
adc
jb
dec
pop
xchg
jne
scas
loopne
aaa
loope
inc
sbbb
lahf
gs
je
shlb
mov
imul
cmp
fucomip
sbb
adc
stc
sbb
mov
push
imul
es
js
pop
fnstsw
mov
test
clc
ret
and
sahf
inc
je
imul
ja
and
mov
inc
cmp
mov
push
adc
sbb
loop
inc
inc
and
cmp
push
daa
push
adc
scas
sbb
imul
hlt
hlt
dec
lcall
add
xchg
movsl
stos
jo
mov
jp
lods
push
push
lcall
inc
test
and
mov
pusha
mov
fs
dec
pop
aaa
imul
xchg
adc
sub
or
imul
xchg
cmp
scas
popa
adc
lret
add
and
mov
loope
xor
cmp
repz
inc
or
add
cmp
jmp
ret
gs
cmpsl
insb
sbb
xor
add
jo
jle
jo
je
jp
or
cli
leave
sbb
dec
jmp
ja
cmp
aad
loope
mov
push
dec
dec
dec
pop
pusha
and
cltd
ljmp
push
inc
mov
ret
ja
push
gs
mov
mov
xor
xchg
insb
push
cmp
movsl
test
cmpsb
jns
loop,pt
ret
pusha
int
daa
push
stc
inc
pusha
adc
aad
adc
mov
push
xchg
mov
mov
cmp
fildll
insb
lea
jmp
movsl
jbe
pop
cld
ss
adc
aas
daa
movsl
ss
xor
jp
fsubrl
mov
add
lret
andl
add
push
xchg
jb
sahf
popl
sbb
dec
and
imul
js
cmp
sub
sti
push
jb
push
dec
pop
roll
adc
sub
dec
out
fisubl
mov
xchg
or
fnsave
push
jbe
sub
enter
sub
xchg
fsubrl
lea
pop
xchg
xchg
les
imul
cmp
xor
xchg
inc
in
outsb
popa
xchg
data16
mov
xchg
sbb
adc
mov
out
imull
sbb
dec
loop
mov
loope
xor
pop
out
jns
ret
cltd
movsb
popa
add
sub
push
jmp
nop
mov
xchg
movb
mov
xchg
sub
jle
sub
in
cld
sub
lahf
lret
cmpsb
xor
sbb
xor
sbb
shll
mov
dec
mov
cld
inc
jno
or
push
add
jmp
fisubrs
mov
nop
push
outsb
add
pop
push
clc
mov
jno
ljmp
cmc
mov
sub
mov
daa
addb
test
addl
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
pop
mov
jo
jle
jo
mov
push
xor
inc
lcall
pushf
clc
arpl
xor
das
fildl
dec
lds
add
sbb
push
dec
add
pop
inc
dec
aaa
pop
and
mov
pop
and
and
or
cmpsl
add
jge
mov
fmuls
mov
cmp
sub
dec
xor
fwait
inc
into
shlb
ret
cmp
sbb
or
push
xchg
insl
pop
addr16
iret
push
push
popf
aad
xchg
pop
sbb
cld
rol
adc
mov
lea
jg
adc
xchg
mov
xchg
adc
sahf
dec
fisubrs
call
xor
lods
adc
ror
and
inc
out
xor
adc
sbb
add
mov
nop
ds
xor
xchg
mov
mov
dec
add
loope
xor
jp
in
imul
dec
or
nop
mov
das
pop
and
cwtl
and
and
mov
rcrl
cmc
and
and
faddl
faddp
loope
je
dec
mov
xchg
rorl
push
mov
and
cmp
outsl
outsl
adc
insb
movsl
test
pop
xchg
push
call
pop
sbb
mov
test
jmp
xor
cltd
and
mov
cmp
test
cs
sbb
inc
xchg
adc
ss
out
imul
pop
mov
popf
mov
mov
mov
cltd
lods
xchg
inc
aas
iret
sbb
mov
mov
xchg
push
es
test
push
add
dec
cmp
fdivrs
rclb
xchg
xor
and
fsubs
std
repnz
adc
pop
mov
sub
rcrl
sub
dec
push
push
ret
and
or
push
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
iret
jo
jo
jo
jo
xchg
data16
pcmpgtb
dec
jle
pop
xor
adc
loope
add
mov
dec
inc
pop
cwtl
push
pushf
cmc
pop
jl
sub
xchg
sub
add
dec
mov
xchg
push
jo
loope
mov
cmp
fiadds
push
cld
jne
sub
rorb
pop
ret
fisttps
mov
out
lock
repz
out
sub
gs
cmp
stos
cmp
xor
outsb
fisttpl
dec
movsl
icebp
insl
imul
scas
sub
out
fmulp
adc
nop
mov
jge
dec
pop
call
jl
pop
jbe
inc
or
push
mov
inc
aaa
fbld
sbbl
rorl
sub
push
mov
int
lods
xor
int
fcomps
cmp
fcomp
pusha
jmp
sbb
out
imul
mov
fisttps
in
mov
and
mov
mov
cs
fidivrs
add
fisubl
test
ret
inc
ja
jno
ja
sub
sub
neg
sub
add
fidivl
adc
sahf
scas
rolb
sahf
sbb
mov
ror
stos
cltd
ret
adc
pop
shll
jge
shll
jle
push
das
into
jle
outsb
cmp
pop
adc
rorb
jp
aad
inc
lcall
fs
scas
cmp
push
movsb
shlb
lock
call
fildll
or
rcrl
in
insl
push
adc
or
sbb
imul
and
dec
loopne
incb
clc
jnp
out
push
adc
mov
pop
push
sub
mov
stos
sbb
push
lret
ror
lock
xor
and
push
jg
inc
and
or
leave
movsl
adc
out
add
fnsetpm(287
mov
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
shl
sbb
fists
xor
adc
cmp
jno
dec
lcall
lods
out
sub
sarb
js
mov
out
add
xor
dec
ja
sbb
mov
into
sub
aad
test
out
cwtl
or
push
and
pushf
sbb
push
pop
imul
in
sub
xor
sub
jne
in
mov
dec
mov
sub
cmp
xor
push
dec
ss
lret
jmp
push
dec
push
jge
movsb
scas
clc
cmpsb
loop
loopne
stos
sahf
or
mov
and
clc
js
pop
sbb
and
push
std
cmpsb
mov
fcoml
mov
ss
jmp
orb
ret
loope
loop
or
sbb
inc
push
jae
mov
xchg
cltd
dec
loop
fwait
mov
popf
pop
lret
push
pop
add
roll
stos
cmpb
add
mov
lret
push
or
sbb
fisttpll
popf
add
sbb
or
test
cmpsb
sar
outsb
pop
out
ds
popf
cvtdq2ps
pusha
clc
xor
rcrb
jmp
mov
out
push
int3
xcrypt-cbc
cmpsl
adc
cltd
pop
test
shl
outsl
pusha
xor
ja
sahf
jnp
shrl
inc
jg
xchg
out
dec
gs
pop
aas
shlb
lret
xchg
jnp
jne
add
adc
aaa
jbe
and
into
sti
mov
dec
int
ret
mov
mov
mov
mov
and
mov
push
sbb
dec
out
adc
sarl
fldcw
xchg
adc
je
stos
icebp
mov
xor
ds
mov
inc
repz
push
xor
stc
fcmovnu
or
push
in
jne
push
xchg
mov
mov
shrb
add
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
sbb
jae
mov
sbb
push
add
insb
ret
pop
fsub
nop
fisttpl
pop
into
cwtl
push
cmc
push
iret
popa
mov
imul
xchg
jl
clc
jl
fs
ljmp
pop
sti
mov
mov
data16
pop
fidivl
inc
inc
push
cld
adc
insl
pop
sub
inc
inc
fstl
add
lock
lahf
add
xchg
add
test
push
jp
inc
ss
xchg
mov
cmpsb
mov
lret
int3
cs
push
filds
add
add
jbe
push
and
ret
pop
mov
jmp
jo
xchg
leave
out
push
mov
mov
or
or
cld
push
push
nop
orb
jmp
fwait
xchg
jno
divb
jl
scas
movsl
into
or
add
sbb
sbb
pop
mov
fildl
bound
jbe
cmp
gs
negl
mov
adcb
jecxz
dec
mov
daa
add
xchg
jp
scas
mov
sub
shr
add
push
shll
hlt
xor
and
cmpb
xor
jno
test
mov
push
xchg
add
mov
mov
xchg
fstps
les
hlt
fisubl
push
jl
sub
ret
mov
sub
mov
ds
push
inc
sbb
addl
push
jno
pop
test
popf
inc
sbb
mov
fadds
mov
sti
shl
jne
cwtl
addl
sti
pop
mov
sti
cmpsb
pusha
stos
sub
lcall
jno
es
jne,pn
jg
enter
jp
in
xor
inc
or
pop
cmp
pop
mov
jns
push
fldcw
fcomi
pop
pushl
sar
pop
stos
jg
inc
cmp
xchg
cld
imul
leave
sbb
imul
mov
arpl
ljmp
les
adc
in
sahf
and
sbb
div
mov
dec
out
int
cwtl
lock
int3
inc
or
aad
dec
rclb
sbb
lret
jbe
dec
aad
jno
ficoml
or
push
jmp
and
inc
cmp
js
adc
pop
and
xchg
movsb
ss
inc
add
mov
mov
arpl
insl
shlb
sahf
inc
push
fs
dec
andb
ds
mov
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
push
mov
pop
mov
jle
jo
and
xor
outsb
test
add
in
and
mov
cmpsl
stos
int
mov
cmpsb
mov
push
xchg
xchg
int3
mov
scas
mov
mov
fsub
xchg
lods
lret
out
push
int3
push
ret
in
jl
test
xchg
std
lods
xchg
pop
mov
sub
adc
cld
inc
test
iret
sub
ja
sar
aam
xchg
jmp
mov
call
loope
mov
sbb
jle
inc
fistpl
cmp
sbbl
js
out
xor
and
ret
cmp
mov
loope
btc
mov
add
pop
cwtl
dec
cld
jne
lahf
sbb
decl
fdivl
and
jle
or
repz
aad
lahf
jl,pt
imul
leave
jge
xor
jb
enter
fidivs
adc
push
cmpsl
pop
aad
test
cmp
jb
dec
cmp
in
test
outsl
sbb
jg
mov
sahf
jecxz
mov
arpl
insl
jge
inc
cmp
and
or
jle
push
xchg
and
mov
cmp
cmp
and
shrb
mov
daa
cmc
xchg
je
leave
hlt
or
sbb
mov
aas
sub
daa
cltd
pop
mov
sbb
and
adc
lahf
pusha
jnp
jmp
xchg
ret
test
inc
lcall
test
call
sar
jle
jae
xchg
sub
add
mov
mov
test
rcll
pop
sub
call
pop
mov
dec
lret
out
orb
sub
xchg
mov
pop
mov
inc
cli
cmc
xlat
sbb
or
sub
sahf
fsubs
push
shlb
inc
sub
ror
jns
xchg
mov
fstl
testb
dec
push
test
movsl
add
mov
out
jge
cmp
dec
mov
shlb
fstpl
xor
add
xlat
iret
cltd
loope
mov
idivb
rol
inc
add
sbb
andl
add
pop
xchg
mov
mov
push
or
push
push
lds
addr16
cwtl
add
fs
jl
cmp
mov
xchg
mov
in
scas
jl
adc
xchg
sbb
call
clc
jo
inc
push
leave
xchg
es
data16
push
and
fistps
xor
mov
mov
xor
add
jmp
fistl
loope
lds
add
sub
jo
jle
jo
negl
sub
sub
gs
sbb
gs
rcrl
mov
sub
negb
js
xchg
dec
or
adc
add
jbe
xor
pop
pop
sub
pop
push
dec
jle
mov
cltd
xor
testl
mov
aad
push
lods
adc
xchg
insl
xchg
aam
or
test
xchg
jl
inc
sub
test
add
lret
mov
fdivr
lea
push
ret
in
mov
pop
stos
sbb
fcoms
daa
jno
test
dec
imul
aaa
movsl
imul
fldenv
inc
sub
add
out
pop
or
scas
sbb
bound
aaa
sbb
inc
inc
in
mov
cmp
sbb
mov
mov
cli
mov
data16
dec
cmc
mov
aaa
mov
adc
pop
and
dec
data16
ret
adc
xor
push
pop
scas
dec
loope
fmuls
xchg
jg
mov
roll
push
xchg
es
push
mov
pop
sti
jmp
xor
js
inc
mov
ljmp
lods
in
mov
mov
sbb
movsl
and
sbb
or
dec
into
insl
mov
in
adc
in
ljmp
insl
mov
stos
aam
mov
sub
mov
rcll
pop
aam
mov
inc
sbb
jb
jecxz
add
and
ss
jnp
shlb
jp
sbb
or
or
daa
int3
sbb
aam
clc
loop
ss
stos
std
lret
mov
cmp
popl
inc
mov
aad
les
xchg
cmp
push
movsb
movsl
mov
mov
adcl
jbe
jp
inc
daa
mov
or
mov
mov
shlb
stc
sub
or
das
add
mov
test
or
je
xchg
inc
ja
push
mov
jns
orb
dec
adc
dec
sbb
jnp
add
push
mov
loope
sub
add
and
sbb
cmpsl
inc
popf
fstpt
jns
es
pop
inc
pop
pop
adc
outsb
je
and
imul
add
in
mov
fmuls
rol
pop
jp
sbb
cmpl
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
or
inc
ja
adc
jo
jle
jo
repnz
shll
xor
and
cmp
ss
inc
mov
loopne
jle
leave
iret
out
cld
dec
fisttpl
imul
ljmp
sub
or
mov
iret
push
int
mov
mov
mov
fdivrl
xor
inc
pop
pop
fwait
enter
cmp
jl
cmpsb
ret
mov
rcll
imul
stos
push
aaa
or
xor
mov
mov
cwtl
pop
repnz
testl
ds
push
lea
and
push
outsb
cmp
jae
pop
dec
es
movsl
and
fstpl
adc
aam
loopne
movsl
xor
push
ret
jbe
ss
scas
mov
sbb
dec
mov
xor
ret
xor
mov
ret
sub
es
shrl
xchg
lcall
ja
sbb
mov
stos
shrb
cmovbe
dec
sub
push
ss
dec
test
xor
cli
push
decb
sub
dec
lock
mov
fnsave
sbb
mov
addr16
mov
arpl
mov
repnz
mov
out
lea
fs
pop
jl
out
sub
add
cmp
or
fisubl
sub
or
add
aam
shrb
jecxz
add
adc
adc
xchg
mov
pop
sahf
icebp
jo
lods
mov
rcrl
das
pushf
adc
notb
cltd
or
es
cs
sub
ja
and
repnz
mov
cmp
repnz
pop
sbb
xchg
les
test
flds
jbe
push
movsl
mov
sub
stos
sub
add
pop
xor
mov
sbb
adc
leave
mov
sub
popa
int3
adc
pop
pop
insb
jo
cmp
mov
repnz
dec
cmpsl
cld
mov
rolb
sub
sub
xor
mov
cmp
mov
cmpsl
js
js
dec
pop
adc
ja
scas
mov
movsl
out
adc
clc
out
mov
or
nop
dec
lods
fdivl
outsl
jmp
fwait
loopne
sub
loop
fxch
es
jle
pop
pop
pop
mov
ds
push
lods
daa
inc
dec
dec
xor
mov
mov
adc
and
fistpl
dec
mov
fisubl
cwtl
loopne
arpl
inc
shlb
pusha
and
cmp
ret
ja
inc
cli
leave
xchg
xor
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
jnp
pop
js
jo
cmp
mov
vpminsw
pop
lods
mov
pop
jp
arpl
dec
xchg
cmp
or
cmp
sarb
movzbl
daa
inc
or
xchg
jb
ljmp
sub
push
das
scas
stos
sub
inc
inc
ja
lock
cmc
mov
adc
adc
std
call
sub
les
push
mov
adc
aaa
ret
cli
sbb
pop
lret
xor
jmp
int
stc
sub
inc
push
push
cmp
lods
ja
sub
xor
mov
cmpsl
iret
movsb
fmul
dec
sbb
sub
aad
fdiv
lret
ret
loop
out
push
lock
xchg
mov
dec
mov
xchg
push
es
mov
or
mov
fistl
outsb
sub
call
cli
or
roll
mov
xchg
dec
les
mov
mov
cmp
subb
test
sbb
adc
punpcklbw
nop
lods
sub
loop
popa
or
movsl
fsts
ja
imul
mov
push
push
packssdw
jne
sahf
mov
lods
xchg
adc
or
mov
or
push
scas
bound
dec
cmp
in
jbe
sarb
add
jmp
imul
mov
loope
adcb
and
pop
addb
insl
inc
aam
pushf
and
sub
dec
popf
je
pushf
push
test
inc
cmp
stos
int
rorl
ja
in
addl
loope
xor
lret
mov
mov
mov
add
mov
xor
hlt
mov
repz
xor
addb
outsl
rclb
mov
repnz
cmp
inc
adc
outsl
out
sbbb
mov
push
les
xlat
dec
push
mov
cmp
xchg
lds
or
mov
jl
icebp
rolb
aaa
sub
mov
cli
jl
pop
rorl
data16
and
adc
outsl
xchg
cmpsl
fdivrs
testb
jbe
lds
or
or
or
inc
jge,pt
cmova
cmc
push
call
push
fdivrs
shl
ror
loopne
das
dec
mov
lds
inc
in
xor
sbb
cmpb
or
pusha
int
mov
xchg
and
add
cmp
and
adc
adcb
push
cltd
in
mov
call
adc
fistpll
cmpsb
dec
pushf
push
jns
inc
pop
repz
icebp
jae
dec
ret
push
out
out
mov
in
sub
fdivr
adc
int
mov
lahf
pop
aaa
nop
mov
fwait
ss
sbb
or
lret
ret
add
or
sub
test
cmp
mov
add
sub
fdiv
xlat
mov
outsb
xchg
repnz
cmp
iret
loopne
inc
decl
mov
jmp
inc
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
pop
lds
jo
cmp
imul
lcall
enter
js
sbb
push
xchg
enter
lods
adc
xchg
rcrb
call
push
clc
xchg
pop
push
mov
mov
sbb
pop
into
jae
or
ret
dec
daa
bound
mov
xor
add
pop
mov
xor
movsb
js
adc
add
std
jns
mov
and
mov
sbb
loop
sub
sub
push
popw
imul
push
loope
lcall
xlat
mov
or
xchg
adc
push
inc
ret
add
loope
push
adc
into
icebp
cmp
fnstcw
bound
bound
inc
xchg
add
mov
cs
fs
fisubs
fisubs
lds
test
xor
mov
ss
es
jne
jg
fcoms
leave
imul
mov
cmc
clc
enter
leave
sbb
pop
pop
je
and
xchg
fbld
pop
mul
mov
xchg
and
aas
xor
xor
xchg
gs
mov
fwait
pop
push
mov
mov
out
xlat
and
mov
mov
jnp
leave
fimull
movsb
insb
pop
xchg
cs
sub
jle
faddl
jae
add
mov
ja
and
mov
cwtl
gs
add
popf
outsb
clc
les
cld
sti
mov
mov
jge
shufps
lock
jae
cltd
pop
cmp
shl
cmc
and
lret
lds
aaa
mov
pop
pop
rol
test
mov
fnstcw
xchg
adc
sub
push
fiaddl
outsl
inc
mov
cwtl
xchg
xchg
shll
outsb
xor
jle
sbb
xor
jne
pop
sub
jne
repz
inc
adc
push
inc
decl
fsin
jl
insl
std
out
sahf
mov
ret
jnp
fwait
adc
sbb
in
gs
mov
fs
pushf
mov
or
ds
xorb
jb
jmp
pop
add
lds
or
sbb
loope
icebp
sbb
pop
and
mov
rclb
pusha
arpl
je
in
lahf
mov
cmp
mov
ljmp
pop
nop
xor
xchg
mov
inc
scas
push
jecxz
cmovno
cmpsl
sti
outsl
jae
mov
sahf
add
clc
push
or
push
sub
mov
adc
adcb
rorb
mov
sbb
cmp
leave
mov
jle
xor
add
sbb
mov
popf
jle
sti
push
lcall
dec
pushf
notl
mov
loop
punpcklbw
mov
or
jmp
aas
std
outsb
mov
mov
aas
xor
xchg
sub
xor
adc
movsb
subl
sbb
or
popa
arpl
mov
push
sub
push
pusha
clc
shr
mov
push
inc
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
cmp
sbbb
jo
jge
jo
sti
xchg
ror
test
ja
xor
mov
ds
arpl
mov
fidivrl
test
mov
pop
jnp
add
jg
xor
test
frstor
ret
jae
mov
sbb
fldt
pop
jl
cmp
fisttpl
push
xor
cmp
inc
in
cmp
lret
sub
fsubs
adc
sub
mov
dec
dec
adc
movsb
ret
sti
les
mov
jecxz
lret
mov
lret
jmp
gs
jmp
out
xchg
mov
ror
jno
imul
in
movhps
lock
and
leave
sbb
jecxz
adc
aam
pop
cmpsl
js
jne
jne
cli
mov
mov
mov
cmp
sti
insb
test
rcrl
push
cmp
cmp
jg
add
std
adc
xchg
shl
or
push
std
inc
mov
dec
sub
imul
sarl
sbb
mov
addr16
sbb
sbb
sbb
mov
in
push
into
mov
lock
sbb
sub
insl
xchg
lods
cmp
rcrb
stc
mov
xchg
xchg
sub
jnp
mov
adc
jb
mov
in
dec
fisttps
pop
pop
or
xchg
nop
pusha
scas
pop
xchg
xor
movsb
cmp
iret
leave
gs
or
shrb
xchg
sub
inc
aas
sarl
mov
push
je
push
pop
jne
mov
imul
or
call
ds
and
movsb
sbb
test
dec
push
jae
sbb
and
adc
out
das
std
jno
hlt
mov
imul
in
mov
das
pusha
dec
inc
adc
mov
iret
sbb
xor
pop
stos
int3
mov
int
pinsrw
push
into
pushf
or
imul
ss
outsb
dec
into
orl
and
sbb
jo
aam
push
outsb
pushf
leave
adc
int3
decb
add
inc
repz
mov
sbb
idivl
fiadds
lret
and
ret
inc
dec
jnp
in
insb
gs
or
pushf
pop
lock
aaa
dec
xor
sub
out
ret
mov
cwtl
cmpsl
sahf
inc
daa
sbb
ret
jmp
cltd
clc
cmpsb
cli
push
dec
in
pop
jecxz
xchg
push
cwtl
xorb
loope
push
sbb
adc
inc
ljmp
push
shll
notb
imul
scas
cwtl
ja
cli
out
ja
lea
rclb
cmc
loope
in
jl
out
iret
sahf
popa
push
and
dec
cmp
push
cmp
jo
loope
ljmp
in
push
push
inc
stc
sub
mov
dec
push
lock
xchg
sub
sti
test
dec
mov
int3
arpl
push
sbb
mov
mov
adc
lods
fnstsw
clc
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
shld
inc
dec
sbb
cmp
jp
lock
fstpl
pop
or
into
fnstsw
cmp
and
xchg
add
add
inc
mov
test
cmp
mov
sub
pop
js
sub
std
or
and
sbb
sub
adc
or
loop
cli
ss
test
mov
jne
dec
xchg
mov
jge
xor
or
out
mov
daa
xlat
mov
mov
in
repz
push
cmpsb
leave
mov
xchg
sbb
push
ja
cmpsb
fimuls
sub
movsb
jp
mov
dec
imul
int
sti
lahf
outsb
movsl
popa
jle
hlt
push
jecxz
popf
jne
int
mov
hlt
mov
mov
push
jmp
xchg
jmp
ja
add
xchg
movsl
stc
xchg
xchg
lea
and
inc
pushf
dec
dec
repz
mov
ljmp
push
pop
nop
xchg
xchg
fstl
in
sbb
ljmp
push
ljmp
mov
jbe
inc
mov
or
jp
mull
mov
les
mov
xchg
add
add
xchg
repnz
mov
stc
stos
shlb
jnp
sub
or
xor
pop
scas
mov
test
xor
in
adc
mov
out
jno
movl
fildl
scas
and
mov
and
and
jno
xorl
sbb
pop
aad
add
inc
jne
mov
imul
icebp
mov
ds
mov
push
dec
fwait
js
sbb
pushf
fdivs
lock
aam
lret
in
test
mull
sub
lods
add
inc
push
out
jl
push
xlat
into
repz
push
ss
sahf
jge
jno
or
pushf
push
clc
add
pop
inc
mov
loopne
mov
xchg
pushf
lea
mov
insl
add
sahf
jno,pt
int3
pop
ss
cmp
loopne
hlt
imul
popa
movsb
jno
daa
rol
cmpsl
insl
aad
es
fidivl
cmp
outsl
decb
test
push
fcoml
inc
lds
push
jne
arpl
jl
mov
fcom
mov
neg
push
add
addl
shrb
lock
adc
sub
or
sub
test
out
jge
pop
jb
adc
pop
lret
sub
data16
mov
mov
jg
mov
lcall
cmpsb
adc
mov
scas
repnz
pusha
std
lock
movsl
adc
mov
lea
ja
adcb
mov
aas
jecxz
sbb
ficoms
dec
jecxz
pop
subb
cmp
pop
fcompl
lcall
inc
dec
mov
cmovg
or
sub
mov
push
and
jp
xchg
mov
push
lret
lea
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
lret
mov
jo
cmp
insl
dec
movsb
sarl
mov
or
adc
jno
shll
jg
and
pop
dec
sbb
inc
stos
mov
pop
lret
mov
dec
cld
test
in
and
rclb
add
jae
vpsrlw
pand
sub
mov
push
jnp
inc
xchg
sbb
pop
into
in
cmpsb
xchg
rcrb
and
adc
pop
push
dec
mov
divb
outsl
or
movsl
sub
inc
jb
xchg
inc
scas
xchg
dec
rcll
pop
getsec
insl
mov
lds
dec
mov
pop
ficoms
and
xchg
test
stos
cwtl
xor
aad
push
flds
bound
adc
loope
stos
aad
mov
xchg
lods
mov
xchg
cmp
add
adc
notb
cmp
cwtl
pop
cmp
aaa
or
out
imul
sahf
push
jecxz
clc
lods
jo
jo
mov
lcall
cmp
mov
je
imul
ret
out
cwtl
lret
cmp
add
and
ret
adc
aas
scas
adc
sbb
and
and
push
aad
into
jns
adcb
mov
ja,pt
pushf
push
cwtl
adc
ss
pop
mov
dec
inc
sbb
cmpsb
jp
push
jnp
movsl
cvttps2pi
lcall
ljmp
xchg
mov
sbb
aad
insb
sub
jecxz
add
mov
adc
pop
repz
data16
outsb
dec
ds
call
pop
pop
out
push
push
and
outsb
xchg
fsubrs
cmc
nop
and
add
xchg
int3
xor
iret
mov
fsubp
sub
out
das
scas
leave
mov
icebp
out
gs
ds
jns
mov
mov
push
adc
jbe
shrl
inc
xchg
xchg
enter
xor
rcll
jge
dec
jg
mov
std
xchg
into
imul
imul
incl
sahf
aam
inc
mov
rorb
xor
sub
add
mov
loopne
sbb
adc
inc
fdivrs
xchg
movsb
pop
mov
xchg
adc
adcl
gs
aam
inc
dec
or
sti
movsb
out
mov
in
in
je
mov
mov
nop
jbe
aas
rolb
in
bswap
out
mov
idivb
pop
lcall
inc
icebp
inc
imul
test
in
pop
jno
int3
cmp
push
stc
mov
mov
adc
test
mov
jnp
dec
rolb
jmp
mov
mov
sahf
fldenv
xchg
pop
xor
push
aad
inc
adc
sti
fcmovnb
push
pop
shrb
ljmp
push
dec
push
mov
lods
add
imul
mov
push
lret
in
push
inc
cltd
testb
lods
dec
clc
sub
pushf
aaa
outsb
mov
push
inc
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
dec
loop
xchg
and
cmp
mov
push
jb
sub
cld
or
fldt
out
leave
adc
mov
xor
mov
fmull
push
mov
push
ror
pop
lret
jno
data16
push
repz
lcall
in
test
out
or
sub
mov
mov
cmpsl
dec
push
xlat
test
addl
mov
jne
add
and
je
xchg
scas
daa
and
cltd
shrb
ret
push
stc
outsb
or
test
jmp
pop
cmp
scas
push
in
testl
mov
and
xchg
inc
das
aam
jmp
movsb
ret
sti
imull
mov
lcall
push
push
jp
dec
jl
sahf
shlb
pop
dec
ljmp
sbb
jmp
lcall
std
in
dec
mov
cmp
push
andb
cltd
movb
shrl
cmp
inc
sub
sub
or
in
cmp
dec
ljmp
xchg
pushf
mov
test
insl
mov
push
mov
mov
xor
jmp
movsb
aad
cld
adc
sbb
push
jmp
jo
jns
dec
inc
enter
popl
stos
mov
xchg
add
push
test
mov
mov
out
aas
ljmp
cwtl
pop
or
movb
jbe
scas
fdivl
push
jmp
pop
cwtl
fstl
test
mov
adc
push
jnp
add
in
loop
push
shll
shr
mov
imulb
nop
jmp
adc
jns
cmpsb
xchg
dec
ds
outsl
stos
inc
mov
jecxz
adc
mov
cld
adc
xchg
scas
repnz
xor
and
dec
iret
sub
or
sub
mov
mov
popf
sbb
inc
sub
jne
mov
mov
dec
ret
cld
push
in
nop
sbb
ficompl
ret
in
jb
out
lahf
lahf
jo
stos
adc
fadd
jae
mov
or
add
xchg
pop
dec
and
mov
shll
daa
pop
mov
rcll
sbb
dec
push
mov
xchg
mov
arpl
push
cwtl
pop
dec
fstps
pop
pop
fmuls
pop
jbe
sbb
push
mov
add
imul
lods
cmp
push
lret
mov
pop
stc
bound
xor
faddp
mov
jo
in
or
sub
xchg
pop
ss
xor
in
test
je
aas
xor
shlb
sbb
sbb
test
in
test
and
shl
mov
ja
jns
inc
fstpt
js
mov
jno
mov
xor
sbb
inc
pushf
test
add
xchg
xchg
loope
lods
lods
jnp
lods
shlb
pop
xor
and
pop
sub
imul
cltd
add
inc
ja
movb
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
jmp
jo
cmp
inc
and
fs
adc
fcmovne
xchg
xchg
or
jmp
sub
bnd
mov
jmp
mov
int3
jns
jge
cmp
movb
flds
aas
cltd
in
pop
repnz
xchg
popa
ja
cld
cmpsb
sub
scas
repnz
pop
movsl
jle
aaa
in
fcmovnu
xor
and
mov
mov
call
jp
cmpl
imul
jecxz
sbb
sahf
scas
add
jle
in
aaa
adc
hlt
dec
hlt
in
or
sbb
inc
divb
aad
fildl
stc
cli
sub
add
or
jecxz
mov
cli
mov
mov
outsl
movsb
pop
orb
call
stos
jg
jne
cmp
inc
lcall
jnp
xchg
fisubs
xchg
push
cwtl
lds
xchg
mov
cmpsl
xor
and
or
push
in
cmc
mov
cmp
outsb
aaa
cld
add
cwtl
aam
inc
shll
aam
out
lods
mov
mov
pop
dec
rcrb
std
divl
mov
pop
sbb
testb
movsl
je
push
cltd
out
push
mov
clc
xchg
outsb
pop
fldt
adc
je
aaa
jbe
push
pop
sar
mov
mov
clc
mov
jbe
or
cs
lods
dec
ret
inc
pop
or
or
cld
in
test
divb
sbb
ret
mov
leave
sbb
das
lods
xchg
xchg
imul
jp
push
addl
sti
push
ss
cmp
adc
inc
dec
test
mov
jb
mov
jge
pop
mov
pop
mov
repz
xchg
jge
inc
mov
inc
jo
out
dec
test
pushf
inc
push
pop
add
mov
shrb
xchg
outsl
or
and
sar
push
out
negb
mov
mov
mov
ds
and
aas
fcmove
xchg
push
in
adc
jl,pt
cmp
sahf
fnsetpm(287
sub
jmp
faddl
xor
push
andl
fidivl
pop
push
lea
xchg
or
xchg
add
add
in
rclb
fwait
mov
dec
jle
sti
adc
js
jns
xor
mov
aad
jns
mov
add
mov
xchg
frstor
jnp
cmc
push
sub
pop
or
mov
mov
shrl
sub
mov
sub
rorl
xor
sub
mov
pusha
sbb
add
into
pusha
cs
mov
mov
dec
jnp
xchg
add
push
daa
mov
ljmp
ljmp
push
and
add
cmp
push
ljmp
mov
sbb
scas
test
mov
push
push
add
iret
ret
jecxz
lret
add
cltd
gs
imul
adc
jp
xor
pop
es
jbe
adc
jnp
sbb
dec
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rcrl
push
xchg
push
sub
cmp
ror
push
imull
xchg
cmp
push
and
cli
clc
mov
lea
sub
jmp
leave
mov
or
inc
gs
fiadds
xor
push
adc
ljmp
sahf
stos
mov
xchg
insb
in
sahf
lds
out
xchg
loopne
and
test
fsubp
add
mov
loop
adc
scas
es
sbbl
add
fdivrs
or
or
mov
pop
sti
int
cmp
xor
jge
and
and
mov
xor
lea
fldl
or
add
scas
imul
dec
fistpll
lock
daa
mov
lret
mov
lcall
ja
ja
cwtl
popf
adc
sbb
rorb
jle
test
int3
mov
mov
mov
cmpsl
xor
icebp
mov
int3
sub
imul
mov
sbb
daa
out
jb
in
test
outsb
mov
mov
mov
add
add
adc
sbb
pop
push
aad
mov
insl
lahf
loopne
xor
and
inc
testb
xor
insl
mov
xchg
cmp
outsl
pop
add
and
jge
jge
testb
xor
dec
inc
ljmp
outsl
add
out
outsl
sbb
and
addl
out
mov
std
jp
popf
dec
add
mov
dec
repnz
enter
jne
push
in
adc
cwtl
into
popf
sub
decb
dec
and
es
mov
xchg
frstor
cmpsl
roll
cmp
mov
incl
leave
pop
jmp
inc
sub
jge
imul
mov
ja
sbb
enter
and
mov
jo
xlat
shll
sbb
cmpsb
push
cltd
and
pop
xchg
add
pop
in
hlt
int
xor
ja
jnp
mov
mov
mov
xchg
iret
dec
popa
xchg
repz
cmpsb
sub
xchg
repz
sti
and
mov
movsl
xchg
aas
add
aad
xor
push
xchg
sbb
xor
pop
and
lds
jmp
mov
mov
pop
mov
xor
in
jecxz
in
movsb
and
int
aas
out
pushf
or
cmpsl
stos
nop
pop
enter
cli
dec
shrl
cli
push
mov
dec
lea
repnz
out
mov
adc
sub
jo
jae
data16
or
mov
sub
and
pop
cmp
inc
popf
sub
xchg
pop
sbb
or
pop
mov
les
pusha
imul
xlat
ja
hlt
scas
andb
enter
mov
aad
mov
imul
dec
push
inc
js
pop
pop
mov
frstor
xchg
sbb
jns
or
ljmp
sub
mov
push
mov
pop
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
ds
jb
adc
jo
stos
jle
jo
xor
jp
mov
mov
cmc
cmp
loope
xchg
xorb
push
cmc
adc
insl
addl
dec
ja
iret
dec
xchg
pop
js
ljmp
jg
adc
addr16
xchg
ss
xchg
leave
pop
ret
je
fcoml
adc
lods
inc
pop
and
inc
mov
call
flds
lahf
clc
or
jae
rcr
push
xchg
mov
clc
mov
scas
cld
sbb
lock
mov
xor
cmpb
aaa
dec
andb
add
andl
lock
pushf
mov
ret
adc
lock
mov
and
call
popa
ret
mov
insb
or
and
cmpb
or
enter
add
mov
xchg
clc
cltd
mov
or
mov
adc
and
jg
push
xor
jle
pop
lods
push
dec
or
mov
scas
sbb
ret
decl
add
push
imul
adc
and
cmp
dec
stos
mov
cmp
pop
or
enter
ss
push
fs
mov
cmp
cmp
aas
pop
arpl
pop
mov
adc
or
xor
fldcw
adc
mov
scas
jbe
lods
xchg
cmpsl
xor
or
test
dec
jle
fcomps
iret
and
sub
pop
cli
push
jbe
pop
test
cmpsb
repnz
mov
push
in
sbb
xchg
gs
mov
imul
adc
loop
inc
jo
mov
cwtl
push
sbb
lds
aam
push
pusha
and
in
pop
cwtl
scas
ss
sarl
pop
mov
test
inc
test
adc
shlb
mov
int3
je
pop
xor
jl
outsb
sahf
cmpl
sub
nop
mov
sbb
test
je
and
push
aam
movsb
data16
lcall
mov
pop
and
xor
mov
pop
stos
sbb
data16
ja
or
mov
sarl
stc
cwtl
sbb
clc
pop
das
jmp
mov
lods
loopne
mov
lods
loop
xchg
idiv
add
jle
xchg
inc
sub
sbb
mov
cltd
adc
mov
ret
mov
mov
popa
inc
push
movzwl
and
mov
jmp
ja
and
dec
xchg
insb
jnp
xor
jo
sub
lds
call
insb
push
imul
xchg
int
cmp
fdivrl
jns
sub
mov
sbbb
pop
dec
shll
popf
mov
test
xchg
js
mov
je
clc
popf
add
xor
sub
test
out
push
xor
shll
jb
push
sbb
rorl
jno
jnp
test
scas
jle
and
mov
daa
sub
cmpsl
aad
xlat
repnz
loopne
out
lods
jl
pop
into
ds
inc
repnz
jnp
rcrl
inc
dec
mov
xchg
rolb
adc
sti
jo
push
sbb
adc
je
test
filds
pop
orb
dec
mov
inc
sub
mov
leave
jp
std
xchg
pop
adc
dec
arpl
movsl
sbb
leave
pop
jmp
jne
cmp
int3
xchg
dec
mov
xor
arpl
mov
adc
inc
pop
xchg
mov
sbb
jnp
inc
mov
mulb
jecxz
stos
xchg
test
pop
es
mov
je
cmpsb
cmp
xchg
movnti
icebp
out
fidivrl
scas
jle
fwait
in
in
pop
stos
xor
ret
aad
mov
es
out
movsl
push
and
adc
mov
ljmp
scas
cmp
adc
fwait
push
xor
fcom
scas
adc
xor
data16
xchg
sub
push
mov
mov
cmp
in
push
rorb
cltd
mov
or
dec
inc
or
loopne
iret
mov
push
repz
in
cltd
mov
pop
mov
fmulp
jp
out
or
jne
jns
stos
xchg
nop
inc
enter
sub
xor
dec
adc
cmp
dec
dec
popf
fwait
sub
std
sbb
into
pop
mov
sbb
lcall
and
in
stos
daa
fistl
icebp
cld
mov
lahf
dec
fsub
mov
and
loop
add
sub
and
andb
inc
add
fnstcw
xchg
add
sub
sbbb
mov
pop
ret
inc
xor
popa
dec
lods
push
mov
mov
push
movsl
flds
sub
xor
mov
mov
jge
ret
out
pop
fdivrl
lds
cmpsl
jne
adc
lods
aam
xchg
int3
jnp
mov
xor
adc
dec
xlat
jbe
arpl
push
cmp
nop
daa
pop
jg
pop
leave
divl
fisubl
in
adc
xchg
mov
dec
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
xor
xor
stos
jle
jo
push
jmp
sbb
rorl
test
mov
sub
or
lret
pop
iret
mov
cmp
jnp
inc
cmp
sti
mov
xlat
mov
call
xchg
dec
or
adc
pushf
test
jp
pop
fidivl
xchg
mov
push
insb
inc
mov
rcrb
xlat
push
mov
out
lret
stos
test
pop
adc
cld
dec
pop
inc
or
mov
outsb
pop
xchg
jl
push
divl
out
shrb
jns
in
inc
scas
inc
jge
mov
es
xchg
das
test
sub
incb
mov
and
addr16
sbb
dec
mov
cmp
sub
xchg
std
mov
fists
and
and
and
ja
out
pop
stos
mov
adc
lods
adc
outsb
mov
mov
add
scas
addr16
jmp
rcrl
pop
das
std
mov
repnz
sub
lret
push
or
scas
mov
mov
sub
lcall
fimull
and
dec
adc
inc
xor
xor
and
add
out
sahf
cli
adc
ljmp
push
je
and
add
imul
jg
rorb
sub
jnp
push
adc
add
sub
mov
sbb
mov
sbb
out
mov
mov
mov
add
ret
fxch
loop
inc
cmp
adc
jnp
xor
sbb
adc
dec
loop
mov
lret
adc
jae
sarb
pop
arpl
or
pop
jle
fcomps
adc
arpl
sub
inc
test
mov
xor
aam
jne
clc
je
movsb
xchg
and
cmp
or
cmc
xor
fldcw
sbb
inc
lret
and
adc
pushf
imul
and
sbb
loop
aad
mov
dec
lret
jl
mov
pop
pop
cmpsb
testl
sti
testb
aas
mov
mov
add
iret
sub
mov
cmp
cmp
sbb
push
jnp
mov
inc
sub
out
out
fcmovnu
mov
push
jo
mov
pop
data16
rcl
mov
roll
rcrl
and
ss
mov
js
pushf
sahf
in
repnz
lds
or
out
dec
movsl
and
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
in
jb
aas
jo
cmpsl
jg
jo
xor
push
pop
shlb
sbb
lret
adc
or
inc
leave
aad
xchg
mov
testb
shrb
and
in
adc
adc
add
adc
dec
arpl
push
shrl
sbb
adc
daa
out
or
cltd
aad
sub
pop
addr16
fbld
incl
xchg
or
push
jo
es
push
or
dec
repz
jns
test
cwtl
sub
jmp
repz
iret
mov
cwtl
test
xor
insl
sahf
xlat
popf
dec
sbb
dec
cmp
subb
push
rorb
and
sahf
adc
shlb
sahf
sbb
sub
insw
pusha
test
jg
pop
fwait
push
xchg
mov
mov
cmpsl
sub
and
rolb
xchg
and
cmpsl
add
mov
ret
leave
inc
push
mov
pop
mov
mov
add
or
adc
xchg
cld
mov
push
mov
mov
enter
xor
mov
pop
rolb
popa
outsl
loopne
pop
add
lcall
cmpsb
gs
mov
xchg
mov
pop
dec
pop
mov
loopne
jp
outsl
dec
out
adc
aam
notb
scas
and
mov
in
ret
movsl
aas
outsl
jmp
push
xor
popa
push
cmp
xor
push
pop
ja
scas
xchg
inc
or
mov
in
add
jno
mov
xor
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
adc
jo,pt
cmpsl
jg
jo
rcll
inc
mov
aam
dec
add
pusha
or
push
movb
fs
jne
sbb
fbld
inc
push
movsl
and
fld
aas
cmpsl
adc
jns
lock
inc
ljmp
dec
rcrb
dec
xor
popa
cmp
adc
dec
mov
dec
push
cmp
inc
pop
mov
or
jnp
ss
push
push
loope
pop
mov
jne
mov
scas
xor
dec
in
aas
idivl
in
mov
jo
pop
mov
data16
jl
adc
adc
cs
popa
scas
pushf
pcmpgtd
lea
push
adcl
pop
pop
in
or
adc
movsw
imul
mov
mov
enter
pop
jle
stc
add
jne
dec
mov
xchg
jo
or
mov
pop
adc
test
jle
cmp
frstor
sbb
scas
dec
cltd
inc
mov
jle
je
rcrb
cmc
and
into
jl
test
es
lar
fstpl
jmp
repnz
mov
lahf
rolb
xchg
fnsave
les
ficomps
test
sub
and
adc
fsubrs
test
mov
test
cld
lods
xor
cmc
cwtl
nop
pop
out
adc
sar
orb
mulb
mov
js
arpl
ret
push
andb
sbb
push
inc
es
imul
imul
adcl
sub
xchg
inc
add
repz
add
jb
inc
add
add
add
add
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
mov
loop
mov
jo
jg
jo
lret
sub
cmpsb
fisttps
addr16
adc
xor
cmpsb
stos
jns
or
mov
sahf
jnp
jo
insb
mov
pusha
iret
or
lock
std
push
mov
jnp
jp
jb
aas
jle
mov
push
aas
mov
push
sbb
lahf
out
mov
dec
pop
das
or
je
shll
aas
shlb
das
outsb
jp
sub
in
cmpsl
std
add
cmpsb
icebp
pop
in
jne
ds
ss
test
scas
sub
add
sbb
out
sbb
fmull
mov
sub
jnp
xor
je
pop
fcmovnbe
xor
int3
and
stos
mov
sti
adc
inc
orl
icebp
mov
lock
or
inc
cltd
mov
out
inc
push
sub
lea
in
popl
popf
fidivs
rolb
ljmp
sub
je
or
icebp
and
ret
mov
adc
rcll
or
movsb
popf
pop
xchg
sbb
leave
ja
mov
vpsadbw
sahf
shrl
pop
lods
imul
repnz
or
jl
into
imul
mov
popa
sub
xchg
nop
dec
in
testb
cmpsl
ss
shl
scas
or
test
jb
mov
insb
jmp
popa
lods
adc
jmp
into
leave
iret
movsl
test
ret
pop
or
ds
push
mov
xor
dec
pusha
push
fbld
in
sbb
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
int3
xchg
pushf
push
xor
jo
loop
jo
sbb
or
pop
nop
mov
movsl
testb
mov
adc
push
push
out
es
icebp
sub
xchg
push
mov
xchg
and
into
into
int
mov
push
into
dec
mov
in
add
xchg
push
push
push
js
cld
push
dec
data16
push
sub
jno
xchg
dec
cmpsb
cmpsb
outsl
mov
inc
out
adcb
dec
dec
mov
cli
lock
dec
or
lret
cmp
push
icebp
mov
ret
sbb
mov
or
movsl
fdivs
jo
dec
subb
sbb
sbbl
push
push
rorl
inc
js
and
pop
outsb
mov
dec
xchg
dec
xlat
mov
pop
and
aaa
or
and
idivb
sub
cmp
clc
pop
movsb
jb
sbb
and
loope
lods
in
add
jmp
lock
sbb
mov
mov
inc
or
mov
and
mov
inc
jo
adc
lods
scas
inc
lock
and
aaa
add
xor
lock
rcrl
sub
xor
fwait
sbb
sti
add
rorb
ja
aam
insl
mov
cmpsl
xor
xchg
add
imul
roll
in
data16
jo
cmp
test
popf
jne
xchg
cmp
mov
sbb
and
add
inc
cmp
pop
adc
add
or
orl
test
fisubrs
in
iret
adcl
mov
fisttpl
repnz
out
mov
push
out
shrb
out
push
fldl
popa
repnz
decl
pop
icebp
iret
imull
fnstenv
les
fld1
sti
lret
jge
mov
cltd
xchg
xchg
loope
pop
or
stos
push
imul
push
sbb
dec
and
fcompl
xchg
jecxz
jb
jnp
insl
or
mov
popa
xchg
dec
mov
push
popa
push
lret
std
jb
int
xor
sahf
cmpsb
push
pop
in
xchg
mov
or
or
repz
push
pop
lock
jle
or
test
shll
dec
xchg
fcompl
movsl
mov
add
outsb
popf
popf
lcall
sbb
jle
sub
inc
mov
out
fsubrl
adc
lea
adc
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
test
jo
loop
jo
cmpsl
sbb
int3
push
test
and
lcall
mov
fistpl
call
cltd
mov
or
xor
enter
inc
ss
mov
inc
iret
shrb
das
les
pushl
std
fwait
mov
leave
mov
jp
int3
stos
stc
cmp
cmp
stc
data16
xchg
mov
add
xor
adc
and
pusha
outsb
mov
sbb
push
loop
mov
repz
movsb
push
leave
movsl
mov
lret
lahf
movq
inc
cwtl
sbb
xchg
bound
push
scas
std
pop
sub
pushf
int3
mov
mov
adc
push
rcll
add
sahf
adc
and
aas
and
test
add
aas
mov
cs
rcrb
ss
icebp
xchg
fdivr
sub
inc
cmp
movsl
and
cmp
push
pop
orl
cli
loope
pop
and
out
fsubrs
adc
out
sti
mov
xchg
adc
test
jns
push
add
sahf
pop
mov
or
dec
nop
mov
xor
ret
das
test
sub
mov
rcl
cmp
stos
std
add
ss
jnp
test
xchg
push
idivl
xor
xchg
mov
aam
jb
inc
xor
mov
nop
out
inc
pop
pop
outsl
sub
rep
int3
xchg
cmp
xchg
jne
iret
repnz
shr
daa
cli
sub
mov
lock
mov
push
sbb
or
ljmp
inc
testb
insb
cli
xchg
fs
data16
dec
testl
loope
dec
repnz
adc
es
in
es
cmp
out
and
repz
mov
mov
and
dec
icebp
sub
js
cmc
inc
adc
mov
scas
fisttpl
inc
xor
inc
mov
in
and
pusha
leave
idivl
or
xchg
mov
out
cltd
lods
mov
je
sub
jle
ret
and
in
fmuls
ss
push
cmp
and
jmp
leave
stos
outsb
xchg
push
xchg
roll
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
jp
lock
lds
and
jo
dec
cmc
lret
jb
xchg
pop
insl
lock
lcall
clc
jp
inc
aam
movsb
lods
mov
and
scas
sahf
aam
ds
mov
jmp
mov
xor
mov
adc
cmp
mov
dec
repnz
popa
mov
loop
pusha
jbe
pop
inc
pop
inc
push
and
sub
fwait
cmc
pop
int
add
or
sub
mov
xor
xor
lcall
mov
jae
out
xchg
dec
test
xchg
popa
aad
arpl
cmp
pop
mov
outsb
leave
or
jb
in
xchg
dec
mov
fs
outsl
into
incb
into
cmpsl
mov
jns
test
dec
lock
cwtl
ds
mov
stc
mov
sahf
push
lods
mov
movsl
cli
in
dec
mov
das
cmp
das
jbe
out
sbb
arpl
jb
fistps
subl
push
pop
popf
or
push
imul
push
dec
push
cmpl
xlat
sbb
cmp
outsb
ss
cs
adc
mov
jge
jb
mov
xchg
aam
pcmpeqw
mov
lcall
add
out
push
mov
xchg
mov
and
int
push
and
xchg
pusha
cld
hlt
cmp
pop
lahf
xor
push
clc
cld
xchg
dec
add
push
rcl
adc
cmpl
popa
jne
add
mov
shrb
dec
or
cmp
lods
xor
insb
or
push
dec
dec
outsl
mov
mov
push
xor
mov
jl
sbb
mov
and
cmp
test
dec
fs
in
cmp
jbe
std
cltd
pop
ss
lods
xchg
out
je
aad
mov
ja
xchg
lods
pop
movups
mov
test
aas
xchg
lret
xchg
or
hlt
inc
mov
inc
mov
inc
scas
leave
mov
testl
movsl
cmp
gs
push
scas
sbb
xchg
add
sub
icebp
mov
arpl
mov
and
and
push
pop
jge
into
out
pushf
rorb
dec
inc
xchg
ficoml
addr16
cmpsb
sub
cmp
add
insl
jle
xor
jp
cld
xor
xchg
gs
imul
xor
mov
sbb
in
fistl
jb
mov
test
and
pop
adc
es
int
jo
mov
mov
push
movsl
int
or
lahf
loop
lea
scas
arpl
inc
or
int
mulb
mov
push
jmp
xor
into
insl
cltd
mov
sub
mov
and
inc
jl
insb
pop
inc
jl
aas
mov
jg
out
call
nop
clc
lret
cmp
inc
int3
xor
jb
inc
add
out
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
ret
and
jo
pop
mov
stos
dec
jno
lahf
and
sbb
loop
jmp
icebp
xor
insb
movsb
movsl
fcompl
jle
inc
fstps
testb
lret
adc
lcall
testb
mov
push
mov
cld
mov
adc
stos
decb
lret
dec
adc
inc
subl
es
mov
xchg
jle
int3
push
adc
and
enter
jb
sub
cmp
out
cmp
outsl
jg
mov
jae
add
aaa
hlt
in
test
xor
cmp
shl
jecxz
cli
dec
mov
inc
mov
sub
repnz
ret
sbb
and
mov
hlt
push
push
or
mov
repz
popf
jns
jg
ret
adc
mov
jne
push
bound
or
xchg
pop
add
push
jbe
stc
repz
jno
sub
pop
push
sbb
mov
in
outsl
aaa
jno
mov
repnz
fidivrs
or
lahf
ds
mov
pop
jb
push
xor
cmpsl
aam
sbb
jmp
xlat
cli
sti
es
push
loopew
jb
mov
jl
cmp
or
lret
push
fsubs
jge
es
sub
mov
sub
and
jp
insl
shlb
xchg
mov
int
jp
je
movsl
loope
popf
pusha
mov
rolb
scas
xchg
pop
dec
imul
mov
mov
sbbb
pop
jb
stos
fwait
push
out
fstl
das
sarb
push
repz
out
jecxz
jge
test
pop
aaa
cmp
sub
repnz
dec
fsts
insl
push
in
ss
mov
pop
or
add
enter
jb
cmp
lcall
pop
repz
lock
dec
iret
inc
sub
out
sbb
jecxz
ljmp
ds
loope
dec
fwait
cmp
sbb
les
xor
sub
and
addb
xor
shrb
pop
iret
cwtl
mov
push
push
inc
in
mov
imul
jnp
jl
xchg
lahf
jne
pushf
jo
mov
test
sbb
sbb
daa
iret
dec
adc
lods
xchg
mov
in
or
mov
lods
cwtl
aaa
jle
cmpsl
xchg
push
xchg
popf
out
cmp
or
jmp
mov
xor
int
ja
mov
iret
out
sbb
out
push
les
sbb
mov
clc
cld
push
or
sub
popa
xchg
push
and
gs
add
je
js
add
mov
dec
mov
push
imul
mov
mov
int3
sbbb
lret
hlt
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
mov
iret
jo
and
jo
in
inc
lods
mov
push
jp
mov
jb
scas
fildll
das
test
in
scas
xor
sbb
aam
jnp
jg
dec
and
pop
mov
les
fnsave
adc
mov
xchg
jb
stos
int3
fisttpl
mov
or
lock
out
xchg
pop
mov
loope
les
adc
pop
pop
call
jl
nop
sbb
fs
mov
inc
outsl
scas
pop
cmp
sbb
lret
stc
test
mov
sub
sub
loop
in
dec
dec
dec
sbb
jl
push
int
sbb
int
lds
shlb
push
subb
and
push
shlb
mov
call
push
jo
adc
lahf
xor
xor
loope
inc
jl
loope
sub
sbb
repnz
ds
and
mov
addr16
das
sti
cli
mov
xchg
push
adc
mov
lahf
pop
data16
xor
mov
js
adc
loop
pop
mov
in
out
insb
xchg
clc
test
aas
and
sub
mov
lcall
push
cli
push
out
rolb
popa
js
int
mov
xor
loopne
nop
data16
cwtl
cmpsb
mov
push
pusha
push
or
ljmp
arpl
mov
in
push
cli
test
cmpsl
subb
rorl
inc
pop
jle
outsb
xor
cwtl
inc
jb
fstl
xor
mov
sbb
mov
pushf
scas
cmp
imul
mov
sbb
aad
pusha
xchg
fs
lret
es
insl
bound
hlt
pop
nop
inc
cltd
mov
sub
aad
adc
push
cmpsl
adc
xor
call
xchg
movb
jecxz
and
insl
mov
mov
push
std
rcrl
mov
mov
cmp
hlt
mov
mov
push
sub
frstor
sub
aam
jno
jno
aam
cmp
push
mov
and
into
or
mov
fadd
xor
sti
inc
pop
scas
dec
in
push
pop
push
push
push
arpl
mov
mov
stos
btrl
inc
daa
jno
push
jecxz
iret
bswap
stos
js
jno
iret
xchg
fs
cmpsb
pop
and
shr
mov
or
mov
inc
jne
dec
popa
mov
ljmp
shlb
into
enter
incb
mov
jns
ret
xchg
sbb
cmpsl
sbb
mov
andl
fisttpll
aaa
out
cmpsb
flds
dec
push
cwtl
stos
add
pusha
or
push
sbb
mov
movsl
mov
adc
enter
lret
fldt
xor
push
andb
jp
imul
adc
jns
ljmp
jl
dec
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
fadds
das
cmpsl
int3
jo
and
jo
and
mov
or
jae
add
nop
mov
cltd
lock
cwtl
enter
mov
or
push
jb
sub
fsubs
dec
lods
fidivl
lret
and
and
std
stc
ljmp
mov
pop
xchg
fidivs
jg
ljmp
out
shrl
inc
mov
popf
repz
xchg
or
mov
fwait
imulb
out
mov
push
push
push
fildll
jbe
add
cmovae
xchg
mov
mov
push
add
stos
js
xchg
ffree
or
stos
inc
jecxz
inc
push
sub
into
adc
ja
insl
mov
adc
cs
repz
loop
or
movsb
mov
ret
shll
test
loope
bound
sub
in
adc
rolb
fldenv
cmpsb
mov
mov
xchg
pop
and
adc
push
ss
fcompl
pop
movsl
leave
and
les
in
adc
xchg
mov
dec
mov
lea
xchg
cmp
shll
mov
mov
in
call
sbb
cmp
mov
outsl
pusha
test
jmp
cld
mov
int
cltd
pop
xchg
mov
mov
outsb
hlt
fs
outsb
jp
push
in
xor
push
ljmp
jmp
test
sub
out
call
xchg
ret
icebp
dec
pop
and
aas
sahf
rorl
cmp
lret
adc
out
lds
dec
out
jmp
mov
add
inc
out
mov
jmp
pop
mov
popa
cmp
js
sbb
dec
and
mov
sub
sahf
mov
clc
jnp
mov
idiv
lods
aam
xchg
std
stos
aam
sahf
add
fisubs
jle
xchg
lods
data16
fistpl
push
cmp
scas
daa
sbb
addr16
ret
mov
fmul
aas
test
jnp,pt
and
test
sbb
loopne
ret
xor
push
call
test
push
push
cmp
les
out
aas
fwait
add
lock
add
mov
jo
hlt
cmp
mov
fwait
stc
icebp
pop
ret
test
and
stc
jecxz
pushf
push
fnclex
inc
jb
arpl
or
cld
dec
lret
mov
pop
and
aam
mov
lret
pop
fistpll
or
mov
xor
inc
test
fadds
fidivl
gs
out
data16
and
dec
ret
push
lret
xor
pop
mov
xor
add
std
mov
xor
dec
stos
and
add
iret
push
mov
pop
cmpsb
sub
pop
movsl
mov
roll
adc
fstpt
xchg
xor
aas
jo
inc
cmp
mov
and
mov
xchg
or
mov
mov
outsl
data16
test
dec
jnp
ffree
pop
and
xchg
dec
adc
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
dec
ret
sarl
jge
jo
jo
push
mov
test
add
outsb
loop
dec
xchg
push
lods
dec
mov
scas
mov
cmpsb
lret
in
les
test
and
xchg
xor
repz
fs
out
mov
push
sahf
ret
std
and
mov
aad
repz
ja
test
or
cmpsb
jb
test
push
lret
push
repz
mov
cmc
and
xor
mov
push
faddl
inc
xchg
fwait
jp
add
and
xor
mov
arpl
adc
pop
roll
lods
adc
sub
outsl
lret
test
sbb
das
pop
or
dec
dec
repz
stc
outsb
xor
push
xchg
cmp
std
add
cmp
and
pop
jnp
sub
inc
outsb
stc
imul
xchg
ficompl
mov
cmp
imul
popa
mov
mov
inc
pop
jmp
popf
repz
cltd
pop
mov
dec
xor
xchg
cwtl
adc
push
dec
or
fcomps
ret
xchg
xor
nop
cli
jge
out
or
es
mov
add
mov
sub
push
hlt
pop
int
imul
int
popa
dec
divb
rcll
ss
xor
das
cmp
std
add
jb
sub
pushf
daa
out
pop
stos
fcomi
shrl
pop
pop
or
aad
sbb
adc
cmpsl
cmp
sahf
cltd
mov
lcall
sbbl
sbb
add
push
test
sub
loopne
fstpl
lret
mov
sub
jbe
pop
lock
jl
lods
dec
xor
mov
pop
jmp
or
icebp
call
or
ffree
jbe
xchg
push
adc
jp
add
jo
pop
lods
sbb
aad
push
ds
lods
cmp
jle
clc
xor
xchg
fldenv
mov
repnz
aad
cmp
test
outsl
int3
lods
in
pop
notb
mov
std
pop
mov
imul
and
fisttps
lods
aad
int
stc
scas
lahf
lahf
addr16
push
cmpsl
dec
fisttpll
addr16
cmpb
pop
insb
jne
out
fsubrs
aas
cmc
leave
xor
in
jb
fnstenv
jns
push
push
add
pop
xchg
sbb
out
sub
imul
int
fdivrl
cwtl
or
push
dec
pop
lahf
dec
inc
repz
roll
jl
push
xchg
push
dec
jl
pusha
mov
jne
mov
out
neg
bound
dec
xchg
sub
imul
inc
lret
movsl
jno
xchg
out
aam
pop
jg
iret
adc
mov
mov
add
decl
cwtl
cmc
scas
fucomip
push
sub
lods
pop
xchg
ret
pop
movsb
inc
push
xor
dec
or
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
mov
jo
and
jo
jnp
mov
xlat
in
inc
imul
push
cmp
test
in
adcb
repz
jns
sub
movsb
loopne
inc
jae
hlt
inc
mov
lods
aas
inc
dec
mov
aas
xchg
cmp
xchg
jge
add
dec
sbb
ret
out
loop
push
outsl
jo
pop
sub
aas
push
mov
rcr
xchg
sub
stc
add
lret
adcl
cmp
sub
loopne
or
fdiv
and
adc
jno
in
cli
rcr
stos
sbb
inc
out
cmpsb
notl
int3
rorb
mov
ret
mov
repnz
out
cld
insb
mov
mov
nop
loope
mov
add
fistpll
icebp
inc
sub
daa
test
pusha
daa
xor
loope
lods
xor
xor
sbb
sahf
xchg
stos
stc
mov
jge
cmp
mov
xorb
add
mov
es
inc
std
std
orl
xchg
or
jmp
jecxz
xchg
pushf
fimuls
cmp
aad
pushf
icebp
mov
icebp
pushf
fimuls
or
fisttpl
mov
lret
adc
mov
cli
mov
jo
mov
fstpl
xchg
jge
repnz
mov
mov
adc
stos
fnstsw
ja
mov
sbb
dec
mov
bound
insb
xchg
and
clc
and
or
mov
mov
sbb
pushf
or
cmp
mov
test
iret
sbbb
add
jne
cmpsb
pop
add
add
pushf
cmpsb
or
xchg
dec
or
movsl
shl
in
decl
push
sub
sahf
stos
movsl
push
cmp
and
aas
loop
in
or
xor
and
movsb
inc
pop
mov
jns
jecxz
push
pop
addr16
adc
or
inc
stos
dec
mov
dec
aad
dec
imul
sbb
add
mov
in
pop
incb
mov
cltd
or
enter
mov
int
dec
xor
dec
imul
arpl
sbb
pop
pop
ss
sarl
imul
push
sti
push
pop
scas
in
gs
and
inc
arpl
enter
stos
stos
insl
cmc
mov
pop
jg
adc
sub
dec
adc
push
mov
adc
pop
test
sahf
dec
xchg
adc
mov
pop
daa
popf
jb
clc
aaa
in
pop
dec
mov
add
ja
jae
xchg
xor
pop
push
loopne
push
ja
cmc
pop
loopne
cmpl
cli
inc
jle
fcompl
cmp
jl
xchg
out
in
je
lods
scas
mov
jg
test
mov
daa
pop
into
adc
int
wbinvd
add
xor
sbb
cli
js
dec
out
pop
testb
jecxz
xor
ja
cmp
jg
add
cmp
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mov
mov
shlb
and
jo
bound
ljmp
fnstcw
push
addl
orb
dec
sbb
adc
shlb
outsl
pushf
scas
outsl
stos
mov
outsl
out
movsl
sub
xor
adc
jbe
out
pop
mov
aas
pop
insl
adc
ss
cwtl
repnz
mov
fnstsw
xor
insl
xchg
inc
add
mov
inc
or
mov
inc
sbb
adcb
cli
pop
mov
into
scas
loopne
dec
test
jecxz
mov
pop
sarl
je
dec
push
push
pop
inc
inc
ja
add
dec
das
sbb
sbb
stos
aas
cmc
gs
sbbb
repnz
mov
imul
repz
jns
mov
xor
xor
mov
push
addl
mov
xor
push
imul
sbb
jbe
std
sub
xchg
shlb
loope
dec
xor
jl
and
nop
shll
push
xlat
mov
jae
mov
and
addr16
int
ds
jp
repz
cmp
add
aad
stos
lds
loope
lcall
lds
sub
sub
or
dec
push
adc
sbb
cmc
xchg
mov
jae
inc
jb
and
dec
mov
jmp
sbb
push
rcrb
int
xchg
frstor
push
dec
sub
push
imul
pop
mov
js
lea
arpl
test
and
sub
call
inc
pop
sub
lods
insb
pop
mov
mov
ficoml
mov
inc
mulb
lcall
sub
mov
cmp
das
jne
lock
inc
adcl
pop
fimuls
xor
hlt
jnp
sub
inc
loop
jnp
xchg
sub
jg
mov
adc
rcrl
add
out
adc
mov
clc
call
mov
out
push
in
pop
mov
mov
dec
loopne
rcll
ljmp
loope
mov
and
mov
add
hlt
xor
fdivl
insb
loope
jae
fmulp
orl
pop
add
push
insb
jns
adc
xor
scas
data16
jmp
std
xor
sbb
les
test
div
les
cmp
or
add
mov
inc
add
mov
dec
or
mov
mov
aaa
fnstsw
sbb
pop
sbb
cmp
in
mov
dec
cmc
cwtl
cmp
adc
enter
mov
add
cmpb
imul
sub
sub
mov
js
outsb
xchg
into
hlt
push
push
iret
stos
dec
lock
int
loop
push
in
lds
jne
movsl
adc
fidivrs
scas
cmp
test
fwait
jl
aas
mov
pop
stos
fwait
pop
pop
inc
loopne
push
xor
add
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
imul
or
fs
and
mov
adc
dec
into
sbb
xchg
xlat
sub
cltd
call
adcl
stos
rorb
xchg
ljmp
sbb
mov
in
fnstcw
test
cmpsl
jbe
outsb
cmp
jo
iret
sahf
push
ja
sbb
jl
ljmp
mov
or
xor
and
and
pop
divb
dec
push
das
add
pop
je
cli
lcall
pushf
shl
push
lret
repz
xor
mov
dec
aas
or
xor
mov
insl
ja,pt
nop
jge
fsubrl
mov
mov
jmp
inc
sbb
jbe
test
roll
imul
scas
sbb
or
pop
mov
xchg
clc
push
ficomps
outsl
loop
jbe
mov
fidivrl
cmp
xorb
push
mov
fwait
sub
sbb
mov
repnz
rol
repnz
inc
or
rolb
out
sbb
cmp
popa
and
int3
test
xchg
in
shll
mov
add
sub
mov
cmp
sub
fwait
shlb
repnz
xor
jb
adc
xchg
repz
cmp
and
fisttpll
adc
mov
xchg
mov
mov
insb
popa
insl
mov
je
or
call
filds
inc
adc
movsl
leave
push
hlt
cmp
adc
loope
arpl
sarb
mov
mov
inc
shrl
sbb
jnp
push
loop
mov
mov
popa
adc
push
popf
or
adc
inc
cmp
add
jnp
shlb
pop
ja
push
push
inc
lock
dec
scas
arpl
push
into
add
xor
scas
sub
fdivs
add
xchg
in
pop
fadds
mov
mov
enter
mov
fcoml
mov
int
pusha
jae
jns
xchg
ffreep
xchg
outsl
xor
jno
mov
dec
in
out
sub
dec
or
jecxz
mov
and
pop
push
mov
shrl
jmp
stos
jae
pop
push
xchg
jg
mov
mov
xlat
jne
mov
in
jae
std
out
cmp
movsl
aaa
decb
imul
adcb
add
outsb
imul
in
es
push
and
sub
mov
arpl
scas
pop
mov
fistps
cs
and
jnp
lds
inc
ljmp
mov
dec
xchg
add
icebp
std
adc
addr16
jecxz
ds
inc
in
inc
test
xorl
fistpll
dec
scas
fs
pop
cmc
pop
mov
cmc
push
push
sbb
jae
pushf
sub
hlt
imul
mov
inc
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
test
jle
fdivl
and
jo
outsl
aas
sarb
sbb
sub
popa
adc
and
mov
push
dec
js
das
mov
js
lcall
add
subb
stos
loop
fs
pop
icebp
jbe
adc
ret
mov
pop
jns
je
jnp
call
insb
lock
pusha
jb
cmp
lods
jle
lcall
xor
push
and
sar
inc
xchg
cli
fisttpl
xor
pop
adc
lock
sbb
into
mov
fnstsw
repz
and
add
mov
in
jl
lods
jle
stos
sub
icebp
jl
add
or
vunpckhpd
xorl
pop
dec
sbbl
pop
jp
fstpt
les
pop
lret
pop
cmp
cld
cmp
inc
ljmp
mov
mov
out
mov
sahf
add
iret
inc
clc
pop
and
dec
adc
orl
jbe
cli
scas
cmpsw
pop
mov
sbb
pop
gs
clc
inc
int
sarl
loope
adc
mov
sub
das
lods
repnz
add
test
sbb
cmp
fucomip
mov
shll
repz
cli
mov
pop
stos
mov
jo
xchg
jge
aas
pop
or
jns
inc
out
xchg
lcall
push
jo
and
mov
jns
and
dec
xor
xchg
or
adc
hlt
addr16
sub
mov
shlb
xchg
loop
loopne
scas
ret
pop
jp
mov
xchg
pop
cmp
aaa
aam
je
dec
daa
cwtl
dec
lcall
imul
cli
shrl
mov
mov
cmp
jbe
jl
cmp
int
pop
incl
lea
int3
and
xchg
cmp
and
dec
xchg
sbb
sbb
mov
jecxz
xchg
adc
jns
clc
ret
movsl
lock
fidivs
xchg
cs
xor
inc
in
ror
mov
push
push
mov
mov
xor
jp
add
mov
inc
xor
mov
inc
mov
xchg
pop
das
xor
imul
and
aaa
movsb
xorl
xchg
mov
jl
lcall
push
inc
push
jae
sti
jmp
ljmp
adc
in
insb
popl
insb
sub
xchg
xor
add
add
xchg
or
xchg
pop
mov
call
jge
jmp
cmp
push
or
cmp
in
sahf
repz
aam
jge
aam
mov
iret
xchg
out
enter
pop
or
cmpsb
and
xchg
and
ficoml
mov
les
push
jns
idivb
xor
add
dec
jl
xor
icebp
xchg
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fnstenv
and
jo
std
rolb
pop
arpl
fistps
adc
idivb
fdivl
jne
scas
pop
cmp
movsl
aaa
mov
mov
inc
int
xor
dec
sub
push
dec
inc
in
sbb
mov
int3
lods
or
insb
fildll
sub
and
or
inc
push
out
popa
mov
icebp
subl
xor
sbb
or
ret
jp
outsb
or
and
jno
cmpsl
inc
pop
xchg
lahf
das
dec
xor
pusha
lea
push
test
sub
dec
pop
dec
cmpb
dec
lret
pop
xchg
pusha
leave
dec
lods
inc
pop
in
adc
stc
or
or
pusha
jle
movsb
loope
mov
movsb
xchg
adc
into
in
incb
ficompl
dec
jp
nop
adc
xchg
ljmp
cli
repz
repz
or
hlt
sub
ret
inc
movsl
inc
xor
aam
scas
sbb
jno
fimull
test
cwtl
mov
pop
inc
repnz
xchg
push
adc
cwtl
xorb
jo
or
mov
mov
pop
fs
outsb
bswap
std
shrl
mov
into
pop
add
mov
pusha
enter
mov
push
aad
mov
ret
xor
mov
in
insl
xor
mov
dec
xor
dec
jne
data16
mov
xlat
aaa
dec
jmp
fsubl
clc
push
pusha
insl
push
ficompl
mov
inc
loopne
inc
int3
sbb
sbb
or
out
daa
push
out
sub
ret
imul
cmpb
add
ss
out
jnp
decl
sti
sbb
cltd
cmpsl
push
push
mov
movsl
lods
dec
cmp
and
fdivr
jne
lret
inc
iret
cs
jmp
outsb
fstp
lock
movl
fnstsw
xchg
xchg
xor
in
test
and
imul
pop
addl
movsb
add
mov
sub
stos
repz
push
ja
pop
pusha
loopne
aas
sbb
jno
inc
inc
and
mov
or
sub
ljmp
push
out
hlt
xor
sbb
movsl
sub
xor
in
lcall
add
pop
repnz
mov
jge
xchg
inc
sti
pushf
fldl
xchg
ret
je
js
or
dec
sub
push
out
sahf
ret
jecxz
mov
push
dec
mov
add
shrl
adc
repz
sahf
imul
or
test
xchg
jo
pop
adc
push
mov
cltd
add
xor
xor
xchg
push
test
push
lods
xor
rorb
cmp
add
dec
orl
bound
mov
dec
xor
shlb
test
xchg
push
cmp
adc
shrb
xchg
xchg
mov
icebp
mov
lcall
out
sub
xchg
adc
adc
xor
add
dec
add
add
out
out
xor
call
mov
dec
ja
jo
and
jo
pop
subl
push
insl
jno
sbb
inc
xchg
mov
sti
xchg
arpl
push
aas
repz
test
frstor
add
roll
jmp
aas
in
push
cmp
sub
add
mov
push
shll
test
mov
sbb
sbb
out
scas
test
cmp
rcll
adc
cmp
mov
sti
and
fs
fs
jns
js
mov
popa
cltd
push
jmp
inc
sbb
jb
fcoms
xchg
popa
dec
add
loopne
push
xor
sub
mov
into
jno
mov
push
cmpsb
inc
nop
pop
pusha
dec
inc
ror
das
stc
mov
sti
imul
cmp
xchg
and
dec
xchg
stc
sub
test
idiv
ljmp
mov
int3
out
rcr
aad
mov
sub
cmp
cmp
arpl
xor
pop
pop
xor
xchg
push
xchg
push
ss
xor
jle
mov
fists
inc
out
ret
cmp
ja
stc
cmp
sti
gs
inc
lret
jecxz
jae
jmp
addb
xor
fidivs
pop
popa
inc
pop
or
dec
inc
bnd
sub
decl
test
mov
jbe
jae
inc
mov
stos
mov
sbbb
in
mov
pop
es
and
stc
push
dec
ret
adc
je
js
xor
or
inc
sbb
sub
fistpll
mov
xchg
mov
jbe
lcall
add
ljmp
ficoms
aad
push
scas
ss
stos
lcall
cmp
mov
mov
or
aam
stos
xor
dec
test
cmp
stc
inc
flds
jo
rorl
in
push
outsb
and
out
mov
xchg
jge
mov
add
clc
loopne
xchg
push
jo
inc
aaa
cmpb
mov
and
std
or
pop
xor
sub
xlat
out
xlat
and
sbb
dec
xchg
imull
lock
inc
mov
or
add
ljmp
outsl
int
iret
or
imul
pop
dec
sbb
cs
flds
pop
call
pop
mov
jnp
test
xchg
inc
mov
notl
ss
xchg
xor
cmpsl
mov
div
add
nop
sub
cli
mov
and
shrb
cmpsl
cmpsl
test
dec
jp
xchg
mov
jl
ja
jnp
enter
add
bound
xchg
int3
cld
inc
mov
xchg
sub
sbb
in
imul
xchg
pushf
jno
sbb
push
sub
add
xchg
cmc
outsl
inc
daa
imul
cmp
insl
bound
jns
incl
pusha
mov
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
adc
jo
and
jo
popf
loope
xchg
in
push
loop
inc
pushw
dec
push
sub
pop
stc
jl
cwtl
push
aaa
mull
test
jmp
fadds
pop
enter
mov
shr
pop
jmp
cmp
mov
nop
inc
jge
fwait
cmpsb
les
insl
xchg
and
jmp
dec
in
mov
outsl
repnz
negb
jae
mov
and
jno
outsb
dec
adc
push
cmp
xor
cmp
imul
fdivl
cwtl
mov
mov
and
pop
out
fstps
out
xchg
adc
aas
adc
push
int
dec
shlb
inc
mov
cmpsl
out
xchg
push
mov
xchg
lcall
dec
mov
xchg
fisubs
in
divb
mov
movsl
sbb
movsl
inc
adc
loopne
lods
test
flds
push
dec
andb
push
adc
roll
aaa
inc
mov
out
mov
cmp
out
ret
cmp
call
call
loop
push
sarl
out
lods
stos
cmp
hlt
data16
adc
push
mov
fldt
sarb
vstmxcsr
lea
inc
lea
enter
jmp
sbb
push
cli
jle
xlat
mov
loopne
and
adc
lret
or
add
imulb
out
adc
std
popa
clc
ja
mov
pop
and
and
mov
out
xlat
stos
or
sahf
arpl
adc
aad
cmp
mov
repz
push
pop
arpl
sti
loopne
loope
out
movsb
ss
in
dec
sti
mov
repnz
xlat
mov
rclb
cs
jmp
fists
test
iret
test
or
and
xchg
call
cmp
loope
je
ja
cs
daa
mov
dec
cli
inc
xor
or
negb
mov
aad
cmp
and
frstor
dec
mov
push
mov
mov
pop
mov
clc
ljmp
push
aam
push
in
jne
scas
fcoms
cmpsb
movsl
je
adc
inc
push
pop
cmpl
lret
movsb
add
jns
xor
xor
fsubs
aad
lret
fsub
pop
mov
push
or
call
mov
scas
pop
roll
lds
inc
push
cmp
or
inc
out
inc
gs
ret
fs
inc
decl
cmp
out
jo
stos
scas
loop
cmp
scas
stc
stos
xchg
jmp
shlb
aam
lds
cltd
sub
pop
loopne
cltd
nop
cmp
shll
ret
arpl
je
pushf
pop
or
imul
push
nop
int3
jo
mov
mov
jmp
add
cs
fcoml
jns
shlb
mov
call
mov
mov
jmp
out
mov
ja
add
xchg
inc
xchg
xlat
out
jo
and
jo
repz
sbb
insb
inc
lret
xor
xchg
int
into
mov
xchg
call
shlb
inc
test
inc
ret
cmpsb
cld
mov
shl
mov
mov
mov
popa
dec
sbb
jbe
jmp
inc
xchg
sbb
pop
xor
aad
sbb
movsl
int
imul
push
dec
lahf
lret
and
xchg
testl
out
mov
popa
inc
int3
call
or
roll
jmp
mov
pushw
jp
push
sub
push
adc
andl
push
cld
inc
xchg
insb
xchg
xchg
stc
mov
mov
outsl
pop
arpl
cmp
fsubl
inc
sbb
lods
scas
add
cmc
out
loop
xor
shl
stos
insb
mov
push
shrb
pop
jmp
fisttpl
int3
mov
pop
xchg
mov
aaa
ss
ret
lret
movsb
sub
pop
mov
or
pop
xchg
repz
push
aaa
inc
fbstp
out
jno
rsqrtps
mov
addl
insl
cmpsb
mov
lret
rcrl
outsb
insl
pop
inc
fbstp
daa
loope
pop
js
jge
sub
ficoms
imul
cmp
into
in
iret
lahf
mov
scas
jo,pt
repz
xchg
adc
sar
cmp
push
sbb
mov
in
mov
sbb
mov
inc
pop
daa
cmp
mov
in
popa
sub
push
stc
push
sarb
in
cli
push
mov
cmp
enter
imulb
dec
cmp
mov
xchg
inc
loope
xchg
daa
sarb
push
cwtl
dec
ret
negl
push
mov
fldcw
shlb
lret
les
pushl
sbb
iret
pop
jb
les
xchg
in
pop
test
mov
mov
imul
je
loopne
jns
and
xor
ror
or
in
fmull
and
push
das
pop
or
decl
call
dec
das
pop
incl
fimuls
adc
lret
xchg
mov
sbb
adc
adc
stos
scas
lock
adc
add
and
pop
insb
nop
into
in
std
into
adc
mov
jle
jns
cmpsl
mov
shll
out
fimuls
inc
push
ss
dec
repnz
adc
add
shll
in
pop
jne
ret
jge
fldl
cmp
mov
mov
xor
insl
iret
mov
cltd
jnp
sub
bnd
mov
leave
lea
mul
out
push
and
push
mov
pop
out
mov
ja
stc
cmp
xchg
test
cmp
push
cmpsl
shl
push
jp
cli
pop
xchg
push
inc
jge
and
test
adc
or
mov
xor
int3
adc
fisttpll
in
sbb
scas
popa
mov
int3
mov
fists
xchg
out
sub
dec
xor
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
testl
jge
jo
and
sub
popf
xor
mov
ret
mov
jo
bound
fs
ret
rcr
xchg
xchg
aas
inc
aam
inc
fmul
sbb
mov
xchg
sbbl
sbb
nop
cmp
push
lret
fdiv
xor
push
pop
mov
jnp
pop
mov
or
add
mov
mov
xchg
xchg
aaa
jns
jl
inc
xchg
push
push
popf
in
pop
popa
bound
push
loope
addr16
lods
pusha
scas
adc
shl
jle
imul
inc
data16
push
imul
xchg
pop
jbe
mov
mov
xchg
andl
jge
mov
xchg
mov
lret
stc
xchg
dec
aas
pushf
sti
arpl
in
mov
into
sub
sahf
mov
mov
fwait
push
insl
add
inc
and
xchg
in
jl
clc
jge
cmc
adc
mov
lret
pop
pop
push
loope
pop
xchg
scas
outsb
sarl
pop
jmp
lods
and
pushf
hlt
out
xchg
mov
stc
movb
mov
sbb
jmp
dec
dec
pop
pop
in
pop
das
xchg
icebp
xor
dec
pop
outsl
cmp
dec
lods
pop
mov
ret
stc
pop
ja
imul
cs
out
into
sbb
ret
jno
test
enter
outsb
pop
dec
mov
xchg
out
daa
mov
adc
cmp
add
incl
push
push
pop
test
cli
lods
icebp
hlt
lods
jne
or
jb
fldcw
in
imul
mov
cli
fwait
scas
inc
pop
mov
movnti
rcll
xor
gs
ds
xchg
insl
fisttpl
es
stos
cmp
dec
jno
push
arpl
pop
adc
mov
and
dec
mov
pop
mov
fisttpl
sub
divb
sub
mov
xchg
dec
adc
loopne
xchg
adc
xor
mov
pop
sub
add
orb
xchg
clc
push
int
mov
inc
ret
ds
jb
inc
cwtl
sub
sbb
push
sbb
mov
es
inc
aas
jno
xchg
cmp
jg
adc
or
adc
jb
int3
outsw
lods
mov
mov
sub
fcompl
negl
mov
mov
stos
push
mov
lret
jl
mov
adc
jb
push
xchg
nop
enter
or
push
and
addr16
stc
xchg
insl
imul
cli
cmp
push
adc
sbb
out
loop
ja
outsb
and
ss
scas
cld
out
mov
mov
jp
mov
jo
scas
mov
daa
sbb
mov
lods
fimull
into
movsb
push
scas
out
cmpsl
xchg
sbb
or
cld
or
and
int
xchg
cmp
cwtl
addr16
pop
cmp
into
mov
sbb
out
das
jle
lds
cmp
sub
arpl
lcall
out
loopne
cmpsl
adc
push
jp
sub
dec
into
les
ss
imul
mov
jns
inc
push
iret
mov
cmpsl
mov
xchg
inc
lahf
clc
xor
jp
std
jge
repnz
inc
arpl
dec
mov
scas
dec
out
mov
mov
cmp
lods
repnz
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
movl
jge
jo
xchg
mov
jno
fdivp
fsubr
or
stos
sub
mov
adc
jp
sar
sbb
pop
mov
pop
or
xor
sub
in
in
mov
fcomps
sub
int
jb
pop
ror
pushf
push
jns
adc
out
dec
jmp
add
jmp
aad
aaa
mov
xchg
jg
push
sbb
stc
mov
jl
sbb
mov
lds
xchg
xorb
sub
push
outsl
in
jmp
lods
dec
stc
xor
adc
ja
sbb
sub
add
add
pop
test
xor
pop
call
mov
mov
push
mov
jle
cmp
jmp
jl
inc
pop
push
pusha
data16
add
mul
fsubrs
add
pushf
aad
out
hlt
dec
sbb
pop
mov
add
sub
push
pushf
dec
xchg
mov
mov
mov
shrl
ficompl
or
or
mov
gs
insl
xor
inc
cli
push
push
jns
inc
mov
add
jne
fcompl
jle
popf
inc
jge
enter
jl
jle
js
mov
sub
add
mov
loopne
loop
and
pop
mov
insl
xchg
clc
xor
sub
repz
xor
fcmovb
hlt
inc
mov
fistps
push
mov
in
jb
adc
sub
mov
pop
js
jno
repnz
push
jns
and
mov
push
push
jmp
jno
out
jb
inc
cmp
push
jle
cmpsb
popf
mov
push
nop
out
adc
mov
dec
dec
arpl
xlat
mov
std
inc
adc
dec
sti
loopne
pop
lods
stc
and
and
sbb
cmp
push
test
cmpl
and
and
rol
lahf
out
or
fiadds
add
xor
aad
xor
inc
std
decl
test
data16
dec
loop
daa
sti
jle
mov
pushf
bound
or
pushf
cwtl
jo
les
sbb
shlb
mov
jmp
je
mov
ffree
cli
imul
sub
push
xor
stos
popa
icebp
js
xor
cmp
movl
push
test
jne
test
dec
jns
add
hlt
sbb
mov
inc
jmp
shrb
cmpb
cmp
int3
ret
adc
outsl
add
jbe
fmull
inc
inc
icebp
cmp
test
sub
xchg
jne
mov
aas
xchg
testl
cmpsl
pop
mov
insb
ds
pop
inc
jg
add
pop
loope
xchg
jp
in
inc
pop
cmp
sbb
pop
and
lcall
pop
test
subl
jmp
xchg
test
xchg
addr16
push
stos
cmp
dec
lret
sbb
stc
xor
add
xor
stos
push
adc
dec
and
aas
movb
inc
mov
pop
jno
pop
call
pop
pusha
std
inc
jp
imul
dec
in
leave
cmp
xchg
and
adc
xor
xorb
ja
rcrl
cmpsl
cld
or
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
sti
cli
mov
inc
cmc
jo
lahf
jge
jo
push
jg
jb
lds
insl
mov
add
inc
push
and
cli
test
mov
xlat
imul
jg
mov
out
cmp
loope
cwtl
inc
cmp
aad
stos
mov
pop
out
lds
sbb
pop
and
mov
ds
or
pop
imull
popa
sahf
in
jle
adc
out
lock
gs
popa
inc
and
mov
loope
stc
ljmp
mov
cmp
and
imul
or
and
add
ja
pop
cmp
call
cmp
jl
push
loope
pop
xor
mov
push
add
jo
push
jno
and
and
xor
xchg
jg
dec
aam
dec
or
ficomps
and
das
stc
inc
leave
negb
xor
push
ret
clc
jnp
cli
lahf
mov
mov
mov
push
and
fstl
push
and
rcrl
lret
pop
jae,pt
je
push
mov
mov
cmp
shrl
jnp
xchg
in
mov
les
fwait
lods
mov
add
push
rclb
add
mov
push
or
sub
sahf
pop
jnp
pop
or
xchg
mov
push
sub
jo
push
mov
ret
es
hlt
mov
imul
ja
xchg
in
jb
add
pop
pop
xor
push
fs
xor
or
dec
mov
mov
jg
push
ret
and
out
inc
ret
mov
jbe
sub
xor
das
sbb
jo
pop
ret
and
stos
ja
cwtl
int
cmc
ret
jnp
inc
arpl
pop
fldl
lret
popa
test
adc
filds
mov
or
mov
repz
dec
call
insl
mov
adc
in
stos
cmp
sub
add
jle
out
sub
ret
push
push
rcll
sbb
adc
cmp
test
add
and
sbb
lahf
lret
pop
cmp
mov
mov
mov
pop
rorl
inc
in
dec
outsb
roll
outsl
or
ret
into
dec
dec
or
pushf
pop
add
add
divb
loop
icebp
lock
xchg
orb
dec
mov
xor
pusha
hlt
adcb
add
push
pop
pushf
mov
inc
cmp
rcll
sub
lods
push
cmp
push
outsl
add
std
sti
add
sbbb
and
inc
ficomps
pop
repnz
push
and
inc
pop
mov
sarl
dec
shlb
or
inc
push
cltd
xor
in
movsl
and
insl
mov
cwtl
dec
xchg
xchg
outsb
jno
dec
dec
outsb
xor
jae
sahf
or
scas
aas
jb
push
ds
roll
pop
loope
cmp
pop
iret
or
fwait
mov
push
xor
push
and
dec
xorl
cld
xchg
icebp
xchg
or
decb
stos
push
pop
mov
inc
jnp
jb
in
insl
scas
pop
mov
jne
imul
in
lret
test
ret
dec
adc
fsubs
mov
daa
lock
dec
cmc
test
jno
jp
out
iret
sbb
dec
inc
cmpsb
pop
dec
cli
dec
inc
push
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
ja
xor
lahf
jge
jo
icebp
sub
in
mov
insb
fmuls
stc
jge
cmp
and
mov
les
dec
pop
push
scas
jno
dec
and
decl
ja
sub
loop
cs
neg
adc
addl
clc
xor
mov
mov
jle
clc
lods
push
out
incb
push
sarb
es
movsl
outsl
jbe
cmovo
fcomip
sti
aaa
rcl
je
xchg
add
push
push
mov
test
cmp
inc
insl
mov
cwtl
jmp
xchg
or
outsl
pop
adc
shll
out
and
or
xchg
sbb
je
js
lahf
push
inc
loope
lret
xchg
mov
jnp
jmp
pusha
jmp
fldenv
pop
imul
mov
xlat
insl
push
mov
dec
or
xor
outsl
cld
call
repz
shl
and
mov
out
fidivs
mov
pop
jl
stos
insl
ja
aaa
lods
xor
gs
insb
mov
out
repnz
out
mov
inc
test
and
int
out
dec
loopne
sar
iret
xchg
jns
lea
imul
or
push
out
aad
pop
adc
mov
or
sub
dec
lret
sub
sbb
pop
popf
jg
mov
scas
mov
and
lcall
ror
cmp
lds
cli
cmpsb
aaa
jl
jnp
sub
inc
add
and
popa
and
loop
dec
int3
clc
cld
subl
sbb
mov
fcmovnu
test
pop
adc
cmpsl
lret
or
xchg
dec
mov
mov
sbb
std
sbb
cmp
push
pop
pop
jmp
testb
orl
mov
ret
jns
inc
jg
rcll
or
stc
pop
je
pop
aad
mov
std
fucomi
stc
insb
adc
lds
enter
jne
das
mov
cmp
adc
pusha
and
xchg
fisubl
int3
mov
inc
push
cs
sbb
lock
pop
inc
adc
xchg
icebp
xor
dec
into
aas
jmp
fstpl
das
ljmp
lds
leave
dec
sub
push
pop
dec
inc
prefetch
mov
mov
dec
pop
pop
imul
mov
pop
pop
stc
jae
mov
pop
aad
std
adcl
push
pop
sbb
stos
sbb
dec
mov
ret
add
pop
mov
scas
mov
xchg
cmpsl
je
mov
push
or
je
or
jge
scas
outsb
inc
push
dec
lds
pop
add
pop
rcrl
insl
subb
and
push
into
inc
pusha
sub
lahf
push
dec
cmp
mov
fisubrs
dec
sbb
jo
mov
cmp
xor
pop
enter
cmpb
add
addr16
sti
mov
cmp
xor
push
fbld
test
sub
dec
repnz
call
dec
out
mov
das
dec
imul
shl
or
dec
movsb
cmpsl
in
fdivr
test
cwtl
cmp
push
or
mov
bound
inc
stos
sbb
bound
adc
push
in
add
mov
xchg
lea
in
loop
push
notl
jo
scas
test
mov
sbbb
rolb
add
out
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
xchg
pushf
cmc
add
jo
lahf
jge
jo
repz
gs
idivb
sbb
mov
lret
pop
iret
pop
cmp
sbb
xorb
loop
pop
mov
push
addr16
loope
sub
sbb
jp
and
sbb
inc
aas
outsl
xchg
rcrl
push
inc
sbb
inc
ja
mov
int3
or
jmp
adc
iret
arpl
xor
hlt
push
fidivrs
inc
addr16
and
dec
inc
sub
fwait
cli
daa
repnz
or
ds
xor
cmp
jo
lret
pop
aaa
int
mov
repnz
xchg
aam
sbb
aad
test
fimull
dec
xor
dec
std
mov
js
sub
add
iret
enter
std
into
xor
xor
dec
inc
outsb
mov
cltd
mov
lret
out
daa
fsubs
mov
xor
loop
pop
call
mov
outsl
jns
inc
sbb
mov
imul
dec
and
pusha
mov
mov
or
push
jl
push
jg
fisubrl
jbe
cmp
cmp
ja
pop
jg
lock
push
bound
test
push
fisttpl
push
mov
mov
nop
sbb
push
movsl
or
dec
jne
dec
inc
rep
sub
loop
xor
inc
mov
xchg
aaa
cmpsl
mov
jae
aad
and
mov
imul
loop
sub
lods
sub
std
inc
ljmp
push
jnp
inc
notb
sbb
dec
jno
inc
mov
adc
lahf
ret
fisubrl
dec
cmp
shl
push
pop
xchg
mov
arpl
and
sbb
aad
cli
adc
add
sarl
leave
cmpsl
inc
add
cmp
add
dec
inc
mov
push
xlat
jecxz
dec
ja
push
fldenv
imul
mov
inc
sbb
sbb
cmp
push
mov
xor
pop
icebp
insb
loopne
mov
in
dec
push
testb
fcomip
or
lcall
inc
jecxz
push
and
lods
int3
ds
inc
cli
push
mov
xor
pop
and
andb
lahf
nop
sti
xorb
sbb
popa
repz
in
and
mov
inc
hlt
notl
orl
pop
mov
shrl
leave
sub
and
test
xchg
xchg
pop
xchg
fxch
sbb
aas
loop
negb
pop
les
jle
arpl
xlat
cmp
pop
xor
and
dec
push
pop
test
jbe
xor
pop
sbb
inc
shl
stos
cmp
xor
jae
insb
in
cmp
jbe
inc
les
sarl
cmp
loope
pop
fidivrs
push
cmp
in
lock
sub
scas
pop
and
mov
stc
mov
leave
nop
sub
push
xchg
xor
mov
mov
data16
fnstenv
sbb
repz
nop
stos
sbb
adc
insb
xor
and
fwait
aad
inc
int
inc
xchg
lret
lock
xchg
ds
inc
adc
cmp
bound
movsl
add
inc
cltd
cmp
jnp
adc
out
cmp
out
push
loope
in
mov
shr
mov
jne
sub
lret
mov
cli
jo
lahf
jge
jo
js
or
fidivs
ret
inc
push
lods
inc
push
inc
push
xchg
aam
fisttpll
and
pop
fisubs
std
iret
lods
stc
pop
inc
dec
in
and
inc
movl
outsb
push
cmp
adc
ljmp
aad
dec
mov
adc
mov
mov
and
push
xor
test
jno
add
in
loopne
cmp
adc
in
jne
lods
gs
bound
sbb
outsl
sub
cmc
in
addl
lahf
push
mov
or
orb
mov
aam
daa
xchg
es
jle
ret
lret
sbb
or
cltd
pop
cltd
in
nop
sub
fnstenv
nop
inc
pop
add
aam
jns
jo
div
mov
mov
lods
add
pop
in
fnstenv
adc
aad
pop
and
jbe
fisubl
fcomp
add
imull
pushf
sub
into
dec
fnsave
jecxz
out
fucomi
mov
sub
pop
and
push
mov
mov
shll
sbb
cmp
ljmp
inc
mov
in
sbb
pop
fadds
mov
dec
cwtl
or
popf
xor
movsb
jmp
imul
ljmp
clc
mov
jle
fwait
in
shll
ljmp
in
setno
aaa
sub
out
xor
cmpsl
sub
dec
sbb
mov
out
jnp
xchg
mov
stos
mov
push
xorl
push
push
and
pop
xor
popl
lods
std
pop
mov
aas
adc
or
lds
repz
cmp
stos
stos
or
mov
fstpl
mov
xchg
or
std
cmpsl
cmp
cmp
mov
js
imull
mov
and
sbb
pop
push
cwtl
add
cltd
cli
mov
fidivrs
es
adc
std
bound
or
sbb
pop
jo
sti
in
out
xor
lcall
loopne
or
dec
mov
subl
imul
sbb
je
gs
add
mov
int3
lret
fwait
mov
sub
sahf
sti
or
mov
imul
int
xchg
pop
adc
xor
mov
sub
dec
mov
jne,pt
outsl
in
xlat
mov
cwtl
xor
jmp
mov
sbb
ljmp
mov
sbb
outsl
push
adc
xchg
adc
daa
xchg
and
fstpl
jns
ret
sub
pop
jne
xchg
std
inc
sbb
and
inc
mov
and
test
or
mov
sub
add
popa
movsl
push
insb
int
jbe
sbb
sub
addb
mov
push
jno
jle
xchg
stc
jo
jp
aas
sub
mov
aam
ss
mov
fdivs
dec
aaa
fstps
pop
jg
fistpll
out
in
negl
loop
scas
push
dec
add
ja
fcomps
jnp
fs
mov
fwait
or
cwtl
xchg
adc
push
mov
cmp
and
out
and
pop
mov
testl
mov
in
mov
loop
cmp
pushf
fldcw
adc
scas
xor
jge
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
sub
xchg
lahf
jge
jo
push
lcall
cwtl
arpl
int3
out
pop
stc
push
cmp
cwtl
inc
xor
xchg
in
movsl
es
lret
inc
or
xchg
mov
push
out
cld
jne
daa
mov
pop
outsl
gs
xchg
lods
jp
out
nop
and
loopne
cmp
xor
fs
xor
sub
rcll
aas
pop
jbe
sub
jecxz
jb
leave
test
and
iret
mov
imul
add
sti
test
mov
mov
mov
xchg
push
loop
or
dec
xchg
mov
mov
jbe
cmp
out
fdivs
inc
xor
xor
pop
mov
sub
mov
adc
cmp
jecxz
insb
mov
mov
add
push
dec
js
dec
push
jnp
pop
addr16
jle
jae
mov
mov
in
mov
dec
fld
sub
xchg
push
jnp
pushw
repz
rcrb
sbb
ds
imul
test
pop
push
clc
leave
dec
inc
cld
test
dec
test
lds
lds
enter
sbb
mov
lock
lret
pop
sub
mov
sbb
jg
lds
dec
hlt
push
loop
xchg
enter
cs
arpl
mov
sub
lret
add
jb
fcoms
movb
lret
inc
inc
inc
lahf
ret
inc
js
dec
stos
cmp
stos
xchg
stc
cmp
xadd
inc
xor
cmp
dec
and
or
adc
out
filds
and
sub
xchg
jecxz
mov
std
loop
into
and
insl
in
psadbw
out
fidivl
push
in
sub
gs
leave
test
dec
adc
cmc
adc
push
mov
jmp
dec
jmp
in
push
inc
cmp
pop
lcall
cmp
ljmp
andb
sahf
mov
arpl
or
jo
adc
enter
lods
pop
mov
add
fdivrs
and
pop
push
outsb
stc
and
add
aam
in
js
nop
mov
push
jle
sahf
jns
fs
ficoml
jns,pn
shr
mov
inc
pop
cmpsl
aad
jbe
insb
les
cmp
pop
dec
into
mov
jp,pt
cmpsb
add
pusha
jg
dec
lcall
shll
and
and
dec
ret
push
pop
jo
repnz
sub
cmp
adc
pop
cli
inc
dec
xchg
adc
sbb
xor
mov
mov
mov
xchg
and
aas
xchg
mov
pop
lret
fisubrl
adc
push
mov
stos
fld
inc
jno
xchg
mov
jb
movb
rcrb
sbb
pusha
mov
sub
jl
andb
leave
inc
dec
in
frstor
dec
xor
loope
mov
in
in
out
pusha
pop
jno
pushf
sub
jmp
jge
hlt
adc
stos
in
mov
das
outsl
scas
fstpl
in
into
inc
je
cli
lock
std
loop
or
lcall
movsb
rorb
fsubl
dec
adc
pushf
push
mov
shl
cwtl
test
cs
and
or
addb
lds
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
xchg
cmc
pusha
xorl
jge
jo
push
push
cmp
adc
aad
mov
jmp
push
push
mov
pop
jg
add
inc
mov
and
adc
mov
into
in
mov
sbb
cmpsl
insb
sbb
and
or
stc
js
mov
enter
jbe
out
loop
mov
dec
or
popf
into
fstpl
out
push
adc
fcomi
mov
inc
out
hlt
sbb
popa
neg
mov
mov
push
les
in
jl
ds
and
or
aas
mov
stos
or
push
addr16
mov
push
cmp
cmp
ss
xor
inc
popf
xchg
lret
jns
jmp
movb
adc
cs
pusha
xchg
popf
andl
imulb
fdivrp
push
fbstp
das
mov
pop
mov
bnd
imul
fs
sbb
out
pop
xor
cmp
mov
pushf
mov
ss
pop
push
cmp
ret
ss
scas
xchg
jo,pn
xchg
dec
into
dec
rcr
into
jo
xchg
pop
js
jmp
and
mov
push
xor
cmp
mov
push
mov
inc
dec
and
mov
or
adc
loope
divb
loope
ficoml
cltd
mov
xchg
jle
pop
xchg
roll
push
and
or
loopne
jb
jbe
cld
mov
paddusb
push
mov
stc
cltd
ret
cmpsb
fiadds
cmp
ljmp
leave
cmp
sub
out
rorb
les
push
cs
ficoms
push
leave
jbe
loop
sarb
xor
jle
add
jle
pop
sub
push
xchg
adc
and
imul
mov
lcall
or
shl
cmp
fcoms
dec
mov
popa
inc
int
jns
pop
lods
mov
mov
add
lahf
std
mov
pop
clc
clc
les
scas
shlb
das
imul
shll
mov
mov
pop
dec
test
or
sbb
jns
push
mov
hlt
mov
loopne
push
mov
pop
out
add
les
or
pop
aas
and
push
xor
push
adc
mov
insb
push
aad
scas
adc
rcr
rorb
push
repnz
popa
and
jne
in
inc
pushf
lds
into
fs
mov
mov
movsb
ja
rclb
mov
loopw
pop
jb
jl
adc
dec
sub
out
mov
cs
cmc
sbb
icebp
or
mov
movsb
lcall
int
iret
cmpsb
popf
inc
mov
pop
cmp
aas
mov
mov
adc
mov
in
scas
in
or
bound
inc
or
sub
mov
fdivrs
sub
and
mov
cld
repz
mov
mov
movsb
rcrl
add
xor
xchg
adc
xchg
notb
sar
dec
inc
sbb
xchg
not
cmp
adc
aam
in
loopne
lcall
clc
in
pushf
outsb
insl
dec
mov
lea
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
ret
jo
lahf
jge
jo
sub
mov
cmp
or
icebp
sbb
mov
ret
pushf
jge
push
push
test
js
jl
jp
inc
fnstenv
daa
jmp
ss
inc
mov
or
jnp
ja
jo
dec
inc
xchg
call
mov
iret
push
fisubl
pop
outsb
xchg
and
push
subl
cmp
shlb
js
mov
cli
dec
dec
or
push
xchg
sub
sub
cmp
insb
cmpb
stos
fistps
jo
sub
cld
or
mov
fistpll
push
sbb
out
and
cmc
push
dec
lahf
inc
and
daa
scas
test
lret
xor
stos
roll
dec
dec
fldl2e
call
mov
gs
xchg
jno
sub
dec
and
add
imul
sbb
fcmovb
inc
mov
mov
jp
enter
sarl
testb
lods
and
das
rcrl
mov
push
scas
movsl
dec
mov
cld
xor
lods
inc
mov
bound
or
adc
adc
mov
xchg
adc
test
leave
pop
dec
adc
out
rclb
test
popa
das
push
add
mov
int3
cmp
stc
adc
lcall
movaps
and
ja
dec
daa
loope
ficomps
jecxz
push
xchg
push
repz
data16
cmpsl
cmc
int3
mov
push
js,pn
inc
adc
stc
jmp
test
js,pn
cmp
rorl
sbb
std
add
add
repz
scas
jp
cmp
cs
mov
adc
cs
lret
in
xchg
mov
outsl
in
cmp
fstpl
push
hlt
mov
xchg
into
inc
sbb
in
dec
les
mov
push
mov
int3
pop
mov
and
neg
jle
imul
pop
in
add
pop
push
mov
xchg
andb
mov
inc
inc
fimuls
lahf
jb
mov
or
cmp
hlt
stos
loop
xor
iret
fldt
add
outsl
push
insb
shl
push
mov
in
fsubs
sbb
push
cmp
mov
mov
loopne
jg
inc
jl
pop
jge
mov
xor
sti
imul
aam
popf
popf
jo
or
int3
and
add
inc
adc
jp
shrb
inc
das
test
lret
repz
ljmp
sbb
sbb
push
inc
adc
push
add
ljmp
mov
and
and
jmp
das
inc
pop
addr16
ret
push
pop
call
and
adc
insl
mov
repz
iret
bnd
lods
jle
mov
or
out
mov
fidivrs
scas
mov
mov
pusha
insb
xorl
dec
mov
adc
sub
leave
jmp
inc
out
mov
loope
and
js
add
jns
addr16
push
aas
lret
into
orb
cmc
jmp
pop
jb
into
mov
cmc
enter
stos
ret
pushf
xchg
ss
push
xchg
add
aam
xchg
dec
or
xor
xchg
dec
clc
es
aam
cmc
fwait
mov
inc
mov
push
les
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
mov
jge
jo
ficoml
test
jp
cwtl
je,pt
stos
jns
xor
xchg
mov
cmc
sub
push
fs
jecxz
ja
pop
movb
dec
insb
fs
arpl
xchg
lret
ja
test
psubusw
insl
xchg
idivl
lahf
test
out
adcb
xchg
lock
loop
aaa
push
xchg
outsb
pop
dec
xchg
mov
pop
ret
mov
dec
mov
in
pop
pushl
addb
add
scas
addr16
push
mov
pushf
xor
mov
outsl
popa
push
test
int
das
lret
sub
add
jl
xchg
movsl
inc
and
scas
jno
jecxz
inc
arpl
hlt
jns
dec
icebp
or
paddq
inc
and
popf
mov
jg
xlat
std
pop
inc
lock
test
pop
addr16
mov
cmpl
sbb
inc
stos
dec
out
out
std
push
lods
adc
jns
aas
dec
add
xchg
cs
hlt
cwtl
in
out
mov
mov
gs
cmp
push
addr16
cmp
pusha
dec
mov
cltd
pushf
jecxz
dec
jne
dec
sti
cs
clc
int
loope
int
mov
nop
pop
add
mov
adc
cmp
fdivs
adc
pop
out
fstpl
jne
cmp
lcall
xchg
outsb
pop
std
xchg
mov
add
aas
mov
mov
mov
outsl
repnz
ja
mov
jmp
mov
ja
in
mov
icebp
ss
mov
push
inc
fnsave
mov
sbb
repz
sub
lahf
push
mov
les
inc
inc
pop
ljmp
lcall
jns
inc
outsl
adc
ja
sbb
push
and
or
push
shlb
repnz
cmpsl
notb
pop
ret
or
sbbb
xchg
in
adc
cmc
test
insl
push
orl
add
jae
stos
stos
xor
pusha
mov
fsubl
out
sbb
inc
pop
movsb
addb
ds
jg
add
in
xchg
mov
mov
rorb
xchg
xchg
ja
cli
pop
jecxz
sub
ret
clc
cmp
in
adc
sahf
test
cltd
in
inc
imulb
leave
mov
sbb
sbbl
outsb
and
fwait
cmp
cld
jmp
cmpl
scas
or
inc
xchg
push
rolb
or
and
add
sub
jp
orl
stc
xor
pop
adc
sub
xor
and
xchg
jl
cwtl
mov
push
mov
sbb
aas
dec
adc
fs
enter
cli
mov
lret
mov
mov
cmp
mov
imul
in
lcall
shl
push
xchg
cmp
jae
sbb
pusha
push
push
mulb
into
or
xlat
repz
es
adc
iret
cmp
into
pusha
pushf
stc
push
clc
mov
jae
or
dec
pop
push
sar
push
cltd
or
orb
push
test
push
sti
sbb
fs
xor
xchg
dec
mov
dec
mov
push
out
in
outsb
or
jmp
sub
sub
repz
adc
mull
mov
push
ja
repnz
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
mov
mov
lahf
jge
jo
push
mov
lds
adc
add
fiaddl
shrb
lret
call
fdivrl
stc
test
test
sub
mov
jne
ret
pop
nop
in
pop
xor
enter
in
in
jae
dec
jnp
pop
add
dec
or
mov
adc
stos
movsl
cmpsw
rorb
jl
mov
adc
sbb
xchg
mov
jnp
call
mov
es
ret
cltd
fstpl
adc
inc
shll
xor
and
push
nop
sbb
syscall
xor
bound
in
xchg
sbb
stc
out
jge
nop
cmp
imul
inc
shl
sahf
test
sub
sbb
jecxz
cmp
adc
mov
cld
xchg
cmp
add
insl
xchg
push
daa
and
decb
sbb
xor
push
adcl
pop
stos
mov
or
jae
rcll
sbb
in
add
mov
pushf
sbb
pop
mov
outsl
cli
inc
push
dec
in
adc
popa
push
addr16
or
ret
jg
and
movsl
inc
pusha
pop
pusha
pop
mov
lods
cmp
scas
push
pop
sahf
mov
movsl
lods
add
popf
xchg
jo
jg
imul
inc
scas
sub
fwait
mov
jne
mov
cmpsb
call
mov
mov
std
jno
and
push
xor
dec
xorb
lahf
pop
inc
sbb
pop
push
sub
add
in
ja
popf
pop
xor
jae
push
xchg
test
pop
fidivl
inc
fdivr
jmp
test
mov
repnz
rorb
sbb
pop
stos
mov
pop
cmpsl
adc
jle
sahf
mov
dec
dec
jmp
outsb
scas
fisttpl
mov
in
mov
jae
data16
mov
lds
cltd
jb
js
push
xor
push
adc
or
movsb
or
popa
hlt
mov
lods
add
dec
jp
add
divl
scas
and
push
test
mov
cmpsb
jecxz
xor
push
std
pusha
loop
add
shrb
in
movsb
mov
test
sbb
mov
sub
mov
imulb
push
lds
adc
or
jg
sub
stc
and
xchg
insl
cmc
push
push
sbb
mov
ficompl
xor
mov
inc
andl
pop
rorb
mov
int
sub
shll
addr16
cs
mov
adc
pop
fidivrl
rolb
es
xchg
mov
xor
scas
inc
mov
fs
ret
es
add
imul
test
add
retw
cmpb
mov
mov
in
lods
cmp
ret
clc
in
arpl
test
lock
or
and
inc
xlat
mov
test
xchg
daa
push
insl
adc
hlt
sarl
or
lock
sub
mov
xorb
pop
jp
es
xchg
jns
filds
jp
rclb
xor
pop
les
jmp
fs
mov
icebp
cmp
mov
mov
rcr
push
push
fs
adc
pop
push
mov
icebp
out
mov
jl
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
sub
fwait
inc
in
xchg
jo
lahf
jge
jo
sub
jle
repnz
cs
add
and
and
dec
pop
loopne
repz
jl
movsl
mov
aaa
jnp
adc
jnp
call
fidivl
cmp
mov
fsts
add
inc
xor
hlt
inc
jbe
outsb
pop
inc
loope
pop
ss
lcall
rcrl
in
mov
mov
adc
add
inc
ret
sbb
pop
mov
idivb
cmp
test
jne
repnz
push
mov
push
test
roll
lds
popf
xor
jae
jae
pop
ljmp
jle
shlb
xchg
dec
sbb
rcrl
adc
mov
pop
aas
adc
aas
jecxz
push
pusha
outsl
js
dec
sbb
pop
and
stos
fcompp
outsb
mov
mov
fimuls
lods
sub
fistpl
cltd
mov
cmp
jmp
jb
fdivrp
mov
int
xchg
or
adc
data16
push
neg
mov
cmp
jge
cmp
std
jle
hlt
loop
stos
orl
push
or
or
mov
mov
inc
inc
test
dec
mov
cltd
movsl
pop
or
jle
xor
mov
xchg
adc
jle
pop
mov
sbb
dec
xchg
add
lcall
fstps
lds
mov
fucomi
inc
mov
lods
adc
pop
shrl
vmovdqa
ja
stos
or
pop
lods
mov
in
xlat
sub
xchg
mov
lret
fwait
or
mov
loope
sti
sbb
and
sbb
jno
cmpsl
push
outsb
inc
fildll
bound
pop
out
mov
lahf
xor
xchg
jnp
ds
test
insl
je
fnstenv
imul
mov
leave
fcomps
cmpsb
ljmp
add
les
imul
adc
mov
inc
and
sub
add
push
inc
pusha
xchg
jb
push
xor
js
pop
xchg
dec
lret
in
adc
scas
mov
jae
imul
jp
mov
push
jp
mov
sub
repz
mov
stc
lods
push
xchg
sub
jecxz
cmpsb
adcb
sbb
and
jne
and
pop
sub
sub
jge
mov
dec
mov
cmp
and
or
pop
mov
stos
mulb
daa
std
ljmp
pop
call
xorb
mov
in
test
or
nop
jge
push
das
fimuls
leave
push
pop
fs
cmpsb
ficoms
sub
push
push
out
mov
iret
incb
movsb
inc
outsb
xchg
pop
and
mov
jle
out
int3
xlat
mov
inc
jne
lea
jae
imul
and
mov
sbb
lret
inc
nop
or
mov
dec
dec
ss
lods
jl
sub
fldt
xor
fs
mov
lods
out
mov
addr16
addb
loopne
inc
add
sub
stc
cli
inc
rcrb
mov
popf
jne
push
pop
mov
push
cmpsb
arpl
add
xor
sub
xorl
clc
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
cmpl
and
nop
jo
lahf
jge
jo
js
lea
fsubrs
fadds
call
jb
jo
and
imul
insl
mov
mov
and
aad
ds
pop
mov
xchg
add
pop
sbb
inc
andl
sub
in
iret
mov
out
xor
jmp
jns
or
imul
dec
pop
pop
mov
push
jl
xchg
xor
fdivs
pop
cmp
jp
out
sub
mov
pusha
stos
mov
pop
rorl
pop
sahf
fsubrp
loop
int3
jo
push
adc
inc
xchg
or
popf
repz
mov
rolb
xchg
adc
dec
dec
ret
insl
push
call
sub
pop
xchg
daa
and
dec
cmp
outsb
mov
dec
inc
imul
daa
std
mov
pop
adc
or
ss
dec
lcall
fmull
mov
push
or
stc
in
or
dec
sahf
iret
mov
lods
mov
jae
imul
ret
jg
fdiv
insb
mov
lret
inc
jmp
mov
jne
ljmp
andb
repz
jb
adc
push
out
imull
out
iret
pop
fcompl
ret
xorb
xor
jg
shll
mov
sub
movsb
jne
jnp
mov
jle
mov
sub
icebp
lea
aaa
test
loop
aas
in
sahf
xchg
or
int
in
stc
sub
sub
in
dec
nop
ret
imul
add
in
stos
into
xchg
mov
cs
rorl
adc
shll
test
xchg
mov
enter
mov
and
test
stos
lahf
mov
loope
loope
mov
bound
scas
scas
add
in
sub
outsl
pop
adcl
pop
lock
adc
mov
sbb
push
cmp
lcall
pushf
adc
mov
movsb
jp
jbe
xchg
imul
mov
jae
aad
cwtl
adc
pop
mov
cs
ficoms
cs
mov
pop
cmp
stos
dec
inc
scas
push
in
lods
sarb
inc
popf
dec
rol
sub
in
fwait
popf
add
push
push
enter
mov
gs
push
out
sbb
sub
inc
sbb
cs
add
les
inc
push
outsb
stos
fadds
in
push
xor
mov
cmpsb
cmp
add
outsl
std
mov
push
mov
lea
sub
rcl
aas
inc
mov
lret
jae
jbe
xchg
mov
ljmp
xchg
jecxz
cs
cmp
pop
aad
sbb
shlb
xchg
scas
cld
ljmp
lock
xor
xor
rorl
xchg
inc
jnp
xchg
dec
adc
mov
and
push
and
mull
scas
outsl
xor
insb
add
int
adc
jmp
data16
sahf
lods
and
paddq
pop
std
add
add
mov
fs
popf
dec
pop
mov
or
ror
arpl
xor
data16
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
imul
jo
jge
jo
cmp
mov
jns
psubb
hlt
xchg
bound
xchg
std
mov
cmp
addr16
cli
iret
cmp
into
mov
xchg
push
pop
add
shrl
jecxz
xchg
jp
pop
cmp
dec
pop
or
pop
aas
mov
jecxz
das
fwait
dec
incb
in
stos
out
sti
xchg
stos
test
fs
scas
inc
mov
enter
cmpsl
xchg
xchg
fmull
or
dec
adc
mov
add
insb
clc
sarl
xor
xor
dec
push
scas
adc
mov
mov
loope
dec
inc
inc
inc
inc
iret
pop
add
cmp
sub
mov
mov
cwtl
addb
adc
sti
shrb
mov
jle
loope
movl
pop
fldenv
push
cmpsl
inc
mov
bnd
flds
mov
xor
push
xchg
iret
xchg
cmp
push
and
xchg
into
sub
and
jl
loop
leave
sub
out
lock
leave
jns
test
insl
or
dec
push
lahf
dec
cmp
divb
jecxz
adc
mov
and
adc
daa
dec
mov
and
aam
fildll
push
rorb
in
mov
loope
imul
es
loope
and
movsl
add
mov
xchg
jb
pop
fs
inc
sub
push
add
lds
xor
sti
xchg
shlb
dec
repnz
inc
das
insb
pop
cmp
cmp
adc
mov
mov
pop
and
pop
aam
mov
fwait
mov
lds
jo
call
jne
push
negb
ret
popa
sti
xchg
cltd
div
or
data16
xor
and
xchg
push
mov
rcrl
push
sub
push
outsb
mov
out
js
xchg
sar
mov
sbb
mov
add
pop
push
hlt
mov
lcall
xchg
shrb
aam
fsubr
adc
sub
scas
pop
adc
scas
sub
aam
aas
or
mov
test
mov
cmp
push
add
orl
rcll
and
cmp
xchg
push
nop
mov
call
xchg
cli
cwtl
adcl
fstps
and
mov
sub
icebp
or
arpl
repnz
sbbb
in
stc
sbb
aam
pop
sahf
fs
cmp
xor
dec
mov
daa
jp
lods
fnstcw
movsb
int
xlat
pop
mov
fldt
mov
pop
dec
inc
mov
popa
inc
test
pop
xor
inc
inc
popa
cmp
mov
iret
push
cmp
pop
and
mov
addb
cmpsb
mov
shl
loopne
dec
loop
leave
js
jae
dec
dec
pop
pop
jge
sub
hlt
inc
scas
add
or
sahf
cmp
xchg
inc
push
mov
sbb
push
and
adc
shrb
cli
movsl
lods
jle
push
repz
fs
sub
outsb
nop
cmp
dec
push
std
xchg
stos
out
jns
xor
scas
pop
cltd
outsb
dec
mov
xor
ret
sub
cs
icebp
cmpsl
loope
and
inc
sub
mov
adc
fsub
stos
ds
pop
jmp
clc
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
pop
cmp
cltd
jo
lahf
jge
jo
and
iret
cmc
std
in
mov
fisttpl
xchg
imul
xor
test
cltd
inc
sub
lods
lahf
rclb
ret
jge
xor
enter
out
mov
sbb
mov
or
mov
and
sbb
inc
mov
fdivs
sub
push
loop
lahf
mov
push
mov
mov
cmp
sbbl
or
pop
std
lcall
pop
icebp
icebp
push
ds
daa
mov
push
out
xchg
jmp
pop
push
xor
pop
stos
sub
int3
and
js
scas
lods
inc
mov
loopne,pn
pop
dec
inc
pop
pushf
cmp
adc
jmp
test
call
ror
addb
jns
add
idivb
push
mov
lcall
ret
push
insb
out
pop
scas
mov
inc
jne
cld
into
test
pop
adc
and
in
jae
call
inc
cmp
and
lret
test
inc
push
movsbl
in
ds
inc
popf
stos
mov
sarl
jnp
pop
xchg
imul
sbb
lea
ss
call
out
std
out
pop
das
jge
stc
fxch
outsl
adc
sub
bound
xchg
pop
push
sahf
leave
int
sahf
xchg
insb
fs
jbe
cld
or
loop
test
lret
and
aam
or
pop
sbb
cmpb
and
or
adc
sahf
push
xchg
sti
jb
inc
pop
sbbb
pop
xor
repz
mov
pop
test
lods
sub
out
xchg
cmp
fstl
mov
mov
sbb
jge
test
dec
iret
cmpsl
pop
cltd
leave
roll
cld
adc
mov
stos
push
mov
lret
jge
jge
stc
lock
fimuls
and
jle
pop
adc
test
nop
pop
je
cmp
scas
mov
aad
cli
sarl
nop
je
ss
aad
loopne
xchg
mov
int3
leave
dec
popa
mov
mov
rorb
mov
add
dec
xor
pop
fdivrl
test
mov
stos
mov
and
jle
fwait
push
xchg
cmovae
fsubl
mov
stos
inc
movsb
pop
gs
ja
pop
fdivrp
mov
mov
xchg
and
xchg
in
pushf
fisubrs
nop
mov
int
imul
adc
sbb
mov
pop
cld
fidivl
lods
scas
cmp
pop
popa
repz
adcl
jbe
int3
sub
loopne
dec
sbb
add
shl
or
shll
add
leave
xor
jg
loop
cli
adcl
mov
pop
int3
push
frstor
fwait
iret
push
xor
jns
out
sbb
mov
ret
jns
shrb
push
out
aas
add
fs
jg
icebp
mov
pop
xlat
rolb
xlat
and
cld
add
push
add
ja
push
dec
or
add
stc
add
cli
push
mov
mov
pop
inc
or
es
addb
or
pushl
pop
mov
fisubl
push
add
clc
pop
mov
or
jnp
inc
out
sbb
jle
add
mov
mov
adc
fisttpll
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
and
cmpsb
jo
ret
jg
jo
jp
and
add
loope
pusha
mov
or
mov
push
aam
jnp
xor
mov
cli
add
fnstcw
or
scas
ja
add
jo
mov
gs
or
push
std
pop
addb
out
popf
xchg
cmp
adc
add
pop
cmp
js
rorl
das
mov
test
sub
dec
cltd
xor
popf
jle
stc
jo
push
or
xor
sbb
jae
push
andl
cmc
mov
cmp
mov
add
mov
ret
sar
fs
stc
mov
jnp
xchg
mov
repz
push
fnsave
or
xor
pcmpgtd
xchg
adc
xchg
fwait
jp
pop
repnz
dec
jmp
and
cmpsb
pop
lea
xor
rcr
addr16
in
aas
ss
adc
adc
sar
ja
dec
movl
jmp
and
ret
cmp
cmp
push
and
add
daa
add
aaa
call
push
sbb
jecxz
cltd
add
inc
jge
ljmp
push
and
stc
mov
mov
xor
cmp
or
lock
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
mov
movsb
jo
ret
jg
jo
movsl
mov
dec
jge
scas
inc
jns
and
mov
jb
imul
cmp
sub
inc
adc
call
mov
jns
inc
lcall
pop
mov
add
call
ret
movsl
sub
into
enter
dec
inc
xchg
test
outsb
daa
mov
xchg
pop
test
dec
lret
cld
sub
inc
pop
and
jno
jnp
fwait
sbb
adc
push
pop
xchg
es
dec
jl
dec
fisubs
int3
or
insl
cmpsl
into
mov
jb
sbb
shrb
sbb
fildll
mov
mov
in
shll
jb
fldl
push
and
roll
mov
nop
imul
loop
int3
and
popa
int3
or
cmp
repnz
in
cmp
cmp
icebp
movsb
sub
inc
dec
mov
jno
mov
adc
inc
mov
and
out
incb
out
rcrb
and
mov
sbb
mov
mov
ljmp
add
iret
loope
pushf
pushf
out
mov
pop
loopne
adc
leave
mov
mov
outsb
add
fxtract
gs
les
inc
call
and
lea
mov
jmp
rorl
sbb
cmpsb
hlt
mov
jo
push
lock
test
and
pop
lret
into
fsubs
sub
idivb
fs
outsl
jae
les
addr16
push
repnz
leave
cmc
ljmp
fsubrl
enter
adc
loop
aaa
inc
out
gs
in
es
mov
sarl
push
mov
add
std
mov
dec
jnp
in
cmp
notb
je
or
xor
inc
xchg
test
out
inc
xchg
sti
cmpsl
jl
jl
jbe
pop
push
sbb
dec
lcall
sub
stc
aas
int
pop
into
jp
xchg
add
sbb
sub
pusha
adc
cmp
clc
rcll
cld
mov
mov
lock
adc
and
cmpsb
lds
dec
inc
jecxz
jbe
ss
adcl
outsb
push
rclb
add
xchg
sub
dec
jle
outsl
mov
imul
loope
sub
inc
loope
movsb
popa
sub
mov
sahf
inc
fcomps
mov
arpl
dec
cmc
sub
decb
adc
add
rorl
mov
jmp
daa
shlb
int
mov
inc
call
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
mov
jo
jg
jo
cmpb
cmpsl
cmp
imul
shll
xchg
mov
pusha
sbb
push
popa
xorl
xchg
jno
mov
pusha
sahf
dec
inc
fmuls
cltd
and
je
lret
out
pop
popa
jmp
push
nop
es
or
mov
ret
idivb
icebp
test
arpl
sbb
hlt
into
outsl
daa
pop
mov
push
xchg
pop
arpl
outsb
adc
jbe
xchg
sbb
cmc
js
sti
imul
in
sete
test
jb
cmp
ja
jne
out
push
fistpl
gs
popf
and
add
lret
into
aad
mov
or
stc
scas
sbb
push
or
pop
daa
fsubl
ret
fistpll
pop
xchg
push
pop
push
xchg
cwtl
mov
leave
jns
ss
out
les
out
sarb
sti
ja
stos
mov
mov
mov
loop
imul
cmpsl
mov
mov
movsb
lods
and
jl
pop
and
cmp
mov
orb
ja
push
sbb
adc
or
int
insl
ss
fldcw
call
rorb
loopne
sbb
cld
inc
add
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
pusha
lods
int
and
jo
ret
jg
jo
mov
inc
sahf
add
add
call
sahf
cmp
int
out
cmp
in
sahf
setnp
push
cltd
xchg
jmp
cltd
clc
or
ficoml
and
dec
pop
adc
sbb
movb
cltd
jp
add
imul
mov
cs
push
jge
or
add
mov
mov
xor
rorl
out
lret
pop
mov
xchg
jb
jns
xor
loop
aas
sar
xchg
add
inc
xor
ss
mov
dec
xchg
cmp
inc
cmc
shlb
cld
icebp
jne
call
xchg
ljmp
jp
jge,pt
sub
idivl
lahf
mov
pop
jae
stos
adc
adc
pop
mov
jo
stos
ds
imul
and
lods
adc
sub
sti
add
aam
mov
adc
lea
fldt
inc
push
pop
mov
sub
pop
aas
inc
rep
clc
add
out
js
mov
pop
sbb
xor
movsb
inc
lahf
mov
xchg
cmpsl
mov
repnz
cli
scas
popf
sbb
add
add
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
or
jmp
scas
jo
ret
jg
jo
push
xchg
addr16
adc
std
dec
insb
cmc
fmul
jne
test
fidivrl
lcall
xlat
jae
xor
pushf
adc
xchg
out
add
inc
dec
je
xor
in
mov
inc
mov
into
mov
mov
and
cwtl
cmpsb
ja
adc
into
inc
add
jne
sbb
je
loop
or
popa
cwtl
xor
ret
outsl
movsl
xchg
jp
lret
jno
sbb
frstor
xchg
mov
inc
ret
mov
jmp
scas
pop
pop
out
xor
adc
mov
mov
es
out
addb
dec
repnz
push
dec
sbb
test
jno
sar
add
and
fildll
rolb
rorl
cmp
mov
test
movsb
pop
lret
sbb
add
stc
outsl
es
mov
xor
fists
mov
stos
shl
push
jmp
adc
addr16
int3
jne
xchg
adc
lret
push
xchg
ret
ljmp
xchg
dec
fsubr
ss
lcall
or
xchg
arpl
pop
aad
pushf
cltd
roll
pop
mov
cmp
adc
repz
cwtl
xchg
aaa
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
mov
je
scas
jo
ret
jg
jo
or
jnp
out
repnz
lcall
imul
cwtl
xor
xor
jae
mov
adc
negl
xor
jmp
sbb
addl
and
xor
push
pushf
pop
lds
into
sub
cmp
inc
dec
jns
outsl
cmp
cmc
jl
das
lods
call
les
and
or
cmpsb
pop
repnz
push
inc
test
rolb
imul
loop
pop
sti
push
shll
and
repnz
fldl
cmc
pop
dec
mov
sub
add
inc
popa
push
xchg
leave
sbb
movsl
aam
jmp
adc
movsl
push
cmpsb
roll
jns
add
pop
lea
fldt
cmp
xchg
mov
ffreep
sti
mov
fcomps
inc
jo
mov
mov
idivl
or
adc
repz
aad
dec
loope
pop
add
dec
sbb
lds
imul
mov
push
add
mov
dec
rcrb
test
add
cli
lds
daa
mov
jbe
ljmp
jp
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
jmp
icebp
or
jg
jo
leave
jecxz
adcl
jae
push
mov
xor
repz
loope
mov
pusha
iret
and
es
sbb
stos
xchg
or
mov
cltd
or
mov
leave
dec
in
insb
stos
or
insb
jmp
cld
pop
pop
ja
push
rcrl
int3
fsincos
fsubrl
inc
jl
rclb
mov
imul
hlt
mov
mov
test
push
scas
xor
es
cmp
push
imul
jbe
ljmp
lods
pop
jne
mov
push
scas
push
push
inc
and
push
xchg
shll
add
sbb
mov
jge
cltd
push
cmpb
sub
jnp
adc
xchg
sub
mov
hlt
push
inc
les
cmpsl
inc
mov
in
jmp
cmp
pop
mov
xor
mov
mov
shlb
shlb
add
stc
arpl
cltd
iret
int
cmp
push
fcomps
adc
sarb
loopne
pop
mov
xor
lret
sbb
fcomps
jo
push
lret
push
dec
call
fsubr
sub
or
lods
lea
stos
and
or
insb
fldl
push
cmpsl
mov
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
xorl
jo
dec
rcrb
les
push
jne
sarb
daa
rcll
pop
bound
mov
mov
out
mov
inc
mov
or
je
test
jae
dec
pop
ret
jl
sub
cmpb
xorb
and
and
lcall
imul
cltd
add
mov
rolb
aaa
pop
scas
jno
push
ljmp
out
mov
iret
aam
mov
leave
dec
in
push
or
cltd
inc
xchg
adc
or
movsb
push
cmpsl
je
inc
sub
push
push
push
mov
xchg
lret
mov
int3
cmp
xchg
mov
test
or
dec
jo
sbb
jae
jp
imul
in
push
pop
or
shll
mov
jg
or
xchg
fs
rcrl
pop
cmc
test
xchg
mov
cmp
scas
lock
xchg
xor
mov
cwtl
and
outsl
mov
iret
cmpsb
repz
or
cmovbe
pusha
in
nop
rep
shll
cmpl
jl
or
packsswb
mov
push
leave
shll
push
gs
sbb
cmp
js
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
lods
mov
jg
jo
or
lahf
std
rolb
ret
xchg
xor
push
movsb
push
mov
aaa
stos
jb
rol
imul
and
cmp
xchg
fstpl
cmp
mov
in
imul
inc
out
jg
lahf
enter
cltd
or
xchg
inc
jmp
jb
int3
sub
xor
dec
aam
add
adcb
scas
inc
mov
mov
and
or
stos
loop,pt
pop
divb
mul
cltd
fsubrl
sbb
inc
inc
sarl
xorl
arpl
sbb
inc
loopne
xchg
sub
dec
cmp
mov
inc
in
ret
dec
iret
xor
jp
insl
pusha
jne
add
shrb
repz
icebp
sbb
inc
pusha
fildll
out
fnsave
push
sti
or
add
fsubs
cmp
cmpps
les
movsb
sahf
cli
and
sub
dec
pushf
clc
mov
pop
popa
sub
sub
jns
jge
pop
call
ret
cmpsb
into
movsb
cmp
pop
mov
or
add
in
jmp
push
and
int3
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
shlb
jo
ret
jg
jo
mov
cmp
pop
pop
cmp
inc
and
push
jg
pusha
ds
add
repnz
ja
add
dec
fwait
repnz
pop
xchg
iret
dec
fs
int3
add
jp
cmp
shll
cli
mov
xchg
fdivrl
inc
loop
cmp
cmp
dec
push
dec
icebp
inc
lcall
fcmovnbe
inc
sub
sahf
mov
sbb
sahf
xchg
xchg
inc
and
out
cmp
dec
fisubs
mov
je
rol
sub
or
cmc
or
cwtl
lea
insl
push
lcall
dec
loop
outsb
mov
nop
lret
jb
inc
cltd
push
rcl
cmp
aaa
add
sar
jns
test
sbb
loope
fnsave
pop
out
hlt
fld
jb
cmp
add
lret
decl
lock
iret
mov
lcall
fbld
pop
cmp
out
jle
xchg
push
es
leave
cmp
xchg
push
mov
jno
int
stos
adc
pop
push
mov
sub
inc
mov
push
in
push
sub
popf
adc
shl
aad
push
dec
pop
xchg
loopne
lock
mov
jmp
inc
gs
icebp
imul
inc
mov
jo
ret
jg
jo
mov
das
cmp
pop
fadds
mov
xor
rclb
hlt
cld
dec
dec
hlt
iret
and
pop
cmp
movsl
mov
call
ds
inc
jle
in
cmpsl
int
pop
ds
insb
rcll
or
fs
ja
dec
inc
dec
dec
and
popa
push
xorb
incl
dec
sub
js
push
mov
jb
pop
xor
mov
xchg
push
rol
push
xchg
pop
test
adc
and
ljmp
lock
adc
popf
mov
call
daa
test
jmp
cltd
js
mov
xor
int3
pop
dec
and
add
push
pop
sub
lods
and
nop
addr16
jecxz
adc
mov
mov
sub
dec
adc
add
enter
and
sub
add
fwait
in
pop
pushf
ret
out
lods
scas
cwtl
pop
jne
sbb
pusha
stos
lret
cmp
pop
cmpsb
xchg
xchg
mov
sbb
inc
lods
pushf
fisttpll
out
into
icebp
add
push
ljmp
test
es
jb
and
mov
jne
test
daa
cmpsb
and
sahf
mov
call
insb
notl
stos
mov
and
jp
sbb
jmp
xchg
push
imul
cmp
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
or
dec
mov
jo
sub
xchg
popf
mov
mov
jnp
add
xchg
mov
loopne
cmp
mov
inc
cmovp
sub
movsb
test
mov
adc
cli
push
xchg
push
jg
stos
and
add
sub
push
xor
push
and
fistpl
es
enter
lea
into
inc
insb
xchg
xchg
sbb
pop
add
dec
icebp
jne
mov
lret
mov
add
push
aad
js,pt
cmpb
imul
inc
add
xchg
pop
dec
mov
fs
test
pushf
xor
jae
mov
xchg
or
out
inc
test
rol
fldl
add
adc
ds
mov
mov
cs
das
inc
negl
stos
xor
cmpsb
lods
xorb
js
xchg
pop
cmp
push
out
sub
inc
sbb
jp
xchg
sub
in
outsb
cwtl
pop
inc
dec
add
bound
ss
pop
sub
imul
sbb
popa
je
mov
xlat
daa
xchg
movsb
add
pop
scas
cmpsb
adc
sub
int
icebp
mov
lret
mov
loopne
or
fmull
or
or
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
gs
jo
mov
movsb
xchg
dec
xchg
push
push
jne
cmpsb
mulb
clc
push
call
sub
ret
ja
xor
repz
mov
ljmp
and
jl
inc
jae
mov
iret
lret
sbb
xchg
js
test
jmp
add
mov
fwait
adc
dec
xchg
or
or
jl
and
cmp
adc
in
jne
lods
mov
mov
adc
pop
movaps
out
adc
xchg
into
rcrb
mov
aam
xchg
dec
pushf
jecxz
leave
gs
loop
daa
push
mov
cmp
in
in
outsl
sbbl
jg
int3
ljmp
push
aam
fiadds
push
pusha
movsl
pop
jl
or
es
sbb
iret
mov
add
incb
mov
and
adc
aad
sbb
add
cmpsb
jbe
test
jecxz
test
arpl
fidivs
leave
cmp
pop
xor
adc
push
sub
leave
shl
add
mov
xchg
pop
push
bound
or
lret
sbb
xlat
inc
scas
push
js
dec
stos
mov
push
ret
aam
aam
xor
or
mov
mov
or
push
sub
push
add
addb
repz
xlat
push
lea
mov
in
pushf
lock
cmp
repnz
cmp
lret
test
fnstsw
loopne
add
in
xchg
mov
add
xchg
mov
cmpb
xchg
cmpsl
leave
xchg
push
test
outsl
imul
stc
inc
loopne
and
imul
inc
adc
pop
mov
cmp
es
sub
pop
in
xor
jne
adc
inc
mov
push
aaa
or
ds
xchg
push
bound
jne
and
xchg
cld
iret
xchg
mov
mov
jns
xchg
and
lock
xchg
jg
mov
xchg
ja
xchg
js
jg
push
stos
add
pop
lods
fwait
and
mov
push
jo
rorb
loopne
dec
aad
and
icebp
jno
fsubrs
dec
sbb
xor
or
in
shlb
sub
push
sbb
or
cs
dec
pop
dec
insl
cmp
sbb
mov
in
pmulhw
sub
scas
in
in
cmp
addr16
mov
out
lods
or
pop
pushf
in
dec
sbb
adc
pop
addr16
pop
cli
std
jbe
fldcw
rorl
xor
dec
push
out
daa
adc
lret
pusha
push
mov
jbe
mov
icebp
and
rcl
push
lea
lret
or
ds
sub
mov
fs
mov
scas
xrelease
adc
fdivl
in
loope
and
pushf
test
bound
pop
lret
mov
xchg
out
loope
cmp
push
cmp
fstps
sarb
into
popa
test
or
jns
in
or
inc
out
flds
out
orb
xor
aam
fistl
pop
cmp
jl
insb
cmp
push
push
sahf
xrelease
bound
push
shr
adc
dec
sub
sub
xlat
sarl
cmp
scas
loope
push
negl
jmp
mov
cli
xor
testb
adc
jo
jge
jo
sub
mov
cmp
rol
test
adc
dec
inc
movsb
push
ljmp
and
push
and
adc
push
cmp
adc
xor
xor
push
rorl
loopne
push
enter
cmp
out
rcrl
fdivl
mov
dec
psubd
push
xchg
inc
sub
inc
inc
out
cmpsb
cld
in
stc
jns
jb
xchg
jl
pop
push
lret
dec
mov
or
sbb
and
ret
cmp
and
jecxz
sub
push
leave
int
sub
outsb
int
pop
movsb
pop
ss
nop
jbe
or
add
sub
jg
and
mov
push
push
testb
stos
xor
in
sbb
pop
push
outsl
lods
push
jmp
in
sti
dec
movsl
jae
inc
jno
rcrl
jmp
push
jb
stos
out
inc
vaddsubps
add
push
xor
pop
lds
addr16
jecxz
fsub
push
or
xlat
xlat
jns
lea
dec
inc
sub
sub
mov
hlt
inc
lods
mov
xchg
push
mov
test
sbb
xchg
adc
out
dec
xchg
inc
loop
fs
push
jne
lods
mov
add
lods
call
ljmp
dec
movsb
push
into
into
inc
sbb
in
pop
movsb
mov
lahf
addl
ljmp
inc
jge
inc
in
mov
mov
test
xorb
pop
mov
mov
xchg
lock
jmp
push
fs
nop
add
mov
or
pop
jg
loope
sbb
lret
mov
bnd
orl
into
cmc
xchg
cmp
sbb
cs
jmp
xor
test
sbb
mov
lret
dec
pop
sub
cmc
idiv
mov
fadds
sar
push
loopne
lea
das
xor
test
insb
cs
sti
inc
cmc
lods
add
out
push
pop
in
cmp
fmull
jmp
sbbl
and
and
nop
call
sub
loope
lods
xchg
or
pop
mov
nop
add
in
mov
jo
jno
cmp
imul
xor
push
push
sahf
mov
push
push
mov
sbb
xor
cmp
imul
pop
insl
cmp
fucomp
mov
int
inc
jl
mov
test
clc
insl
mov
sbb
xor
xor
repz
add
rclb
pop
adc
js
dec
mov
std
in
xlat
adc
adc
iret
test
adc
cmp
repnz
movl
inc
adc
jmp
dec
outsl
and
xchg
adc
fnstsw
mov
popf
scas
cwtl
mov
lret
out
mov
mov
push
shl
leave
adc
lret
cmp
jmp
fisubs
es
scas
aad
adc
push
xor
in
in
sbb
push
stc
push
loopne
dec
and
scas
mov
out
out
sub
adc
out
les
push
ret
pop
inc
cld
xor
or
loope
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
nop
sti
inc
test
mov
lods
repz
test
inc
bound
arpl
cmc
rolb
insb
mov
xor
pop
in
mov
mov
cmp
enter
xchg
push
mov
mov
sbb
push
xor
cmp
paddw
dec
or
pop
jl
sub
lcall
cs
sub
push
ret
int3
cmpsb
orb
pop
sti
dec
pop
lds
add
or
dec
pop
call
xchg
xchg
test
jmp
adc
jecxz
mov
mov
lock
popa
into
mov
fldt
movsb
jp
daa
mov
leave
fs
int3
sub
aas
fcompl
cmc
inc
push
pop
hlt
add
add
xlat
jl
push
dec
sbb
aaa
xchg
scas
xchg
push
fwait
sbb
inc
nop
mov
ja
sub
sarl
enter
dec
outsb
cwtl
mov
jae
and
sahf
jmp
push
adc
testl
inc
icebp
mov
adc
call
aas
xchg
add
lods
in
dec
mov
dec
xchg
mov
pop
lret
rep
lret
dec
adc
gs
xchg
addr16
fucomp
cmpsl
mov
imul
or
repz
push
dec
sbb
test
mov
int
add
dec
push
dec
adc
cmc
add
jb
cs
cwtl
inc
insl
addr16
fstps
mov
cli
xchg
je
loop
cmp
cmpsl
dec
enter
or
pop
fyl2xp1
movsl
cwtl
dec
mov
test
out
cmp
push
pushf
out
jnp
cmc
shlb
iret
xor
sbb
mov
push
mov
inc
stc
mov
stos
and
imul
arpl
bound
adc
lcall
dec
cmp
call
cmp
mov
pop
insb
roll
xchg
push
push
data16
in
pop
das
inc
adc
cli
mov
cli
gs
aas
cmp
test
adc
lret
in
out
addr16
daa
jo
cs
xlat
in
scas
mov
xchg
or
jecxz
or
sbb
pop
inc
adc
shlb
adcl
jl
mov
icebp
dec
jp
mov
adc
push
cmpsb
inc
cld
mov
aad
dec
imul
xchg
dec
mov
jne
push
pop
push
in
inc
or
mov
adc
inc
add
test
enter
mov
mov
mov
mov
adc
sub
or
imul
dec
xor
pop
lret
aad
add
cmp
mov
push
sbb
out
fisubrs
mov
mov
pop
js
mov
jge
imul
ret
mov
mov
je
movsl
cmp
out
or
jo
jp
stos
test
pop
mov
fnsave
mull
push
daa
xor
stc
bound
push
jge
ljmp
fdivr
push
xor
ret
fdivs
mov
fisttps
push
je
popf
sub
mov
and
sbb
mov
push
mov
xchg
mov
mov
push
xor
nop
popa
aam
rclb
mov
in
mov
adc
xlat
loopne
add
in
in
pop
jecxz
lock
push
fnsave
xor
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
jmp
push
or
enter
sar
push
mov
in
adc
mov
jle
clc
mov
push
pushf
sub
fisttps
mov
jmp
jns
pop
sbb
dec
sbb
imul
lcall
mov
add
lea
inc
stc
fwait
aaa
int
outsl
cld
pop
je
sti
sti
push
push
mov
scas
insl
enter
cmpsl
int3
lea
xor
xor
leave
clc
xor
sub
fdivs
loopne
and
push
and
mov
test
mov
leave
xor
pop
xchg
aaa
sub
in
lea
mov
popf
aad
jnp
mov
sarb
xor
in
push
sub
mull
mov
xor
mov
xor
imul
stos
mov
lock
fcomps
enter
pop
dec
fs
insb
add
fcoml
sub
mov
int3
imul
push
movb
lds
mov
and
adc
mov
aam
cmp
mov
int3
call
add
imul
jae
push
jbe
rclb
ror
sbb
and
fadds
jecxz
push
sub
xchg
sbb
out
outsb
jb
sti
out
sbb
cli
imul
mov
cmp
jno
jae
jle
idivb
cli
bnd
push
aam
inc
clc
test
add
push
cmp
imul
adc
out
sbb
sbb
daa
lock
scas
scas
les
sub
dec
pop
std
mov
ret
stos
sub
xor
mov
in
out
inc
ret
xchg
ret
rep
test
jb
push
sbb
adc
or
push
dec
mov
mov
mov
pop
inc
jae
nopl
cmp
sub
sahf
push
mov
mov
mov
mov
jnp
jb
mov
push
pop
mov
push
ljmp
jne
dec
lret
cmp
test
lds
dec
pushf
aam
sbb
out
jecxz
sub
subl
imul
and
jecxz
dec
mov
jno
sub
lcall
dec
cwtl
lods
aas
adc
mov
loopne
test
lcall
mov
xchg
aam
mov
and
or
mov
stc
in
xchg
ror
lds
inc
data16
dec
push
dec
andl
test
jbe
addr16
inc
divb
cmpsl
push
sbb
flds
repnz
out
xchg
mov
sbb
shrl
jo
push
jno
dec
mulb
out
inc
insl
push
mov
pop
push
aaa
and
rolb
push
icebp
inc
mov
pop
mov
cs
inc
daa
scas
lds
xchg
xchg
clc
popa
xchg
addl
jo
outsb
test
mov
fdivrp
mov
test
and
jp
xchg
pop
cmpl
iret
rcll
pushf
sbb
mov
inc
sbb
push
insl
xchg
pop
popl
dec
iret
push
xchg
xchg
ljmp
mov
push
cmp
xchg
lret
cmp
push
insb
loopne
call
pusha
call
loopne
ljmp
pop
push
add
repnz
shll
shll
jp
xchg
popa
mov
jl
jg
mov
sub
outsl
inc
xchg
es
add
mov
add
jmp
outsl
mov
or
imul
movl
jo
cli
adc
push
movsl
fldenv
mov
push
mov
sbb
js
aaa
xor
sbb
lea
and
jne
push
cmp
out
ficomps
insb
push
jl
sbb
sub
leave
jae
dec
dec
adc
out
movsl
mov
add
xchg
aad
out
push
lods
popa
sbb
out
xchg
loop
in
mov
and
mov
filds
jmp
sahf
andb
fisttpl
data16
push
push
push
dec
inc
call
cmp
cli
movsb
movsb
push
xchg
jl
xor
movsb
ret
push
in
ret
into
add
mov
or
test
sbb
jns
mov
bound
pop
sti
cmp
adc
inc
stos
aas
sub
adc
loope
ret
sbb
rcl
test
push
xchg
rol
ret
push
xchg
mov
push
arpl
ret
test
mov
es
xchg
mov
adc
inc
in
adc
lds
syscall
dec
cmc
pop
repz
cmpsl
sbb
dec
push
inc
adc
cwtl
ds
mov
pop
fistps
aaa
cmpsb
std
add
mov
lds
adc
sahf
push
cli
lret
push
es
add
pusha
adc
jle
pop
nop
pop
lret
mov
mov
xchg
jne
mov
lret
ficompl
inc
mov
add
in
dec
outsl
sbb
ret
inc
gs
add
psubq
or
lret
bound
and
leave
out
leave
sub
sbb
mov
adc
out
mov
mov
and
data16
mov
out
mov
mov
xchg
mov
or
fiaddl
xchg
cmpsb
dec
or
into
push
lret
mov
fcomps
cmp
or
jecxz
cld
orb
sar
add
xchg
data16
in
mov
adc
fs
push
ret
dec
orl
fwait
dec
adc
out
mov
adc
shll
lahf
out
pushf
daa
scas
dec
mov
or
xchg
dec
mov
mov
mov
rcll
icebp
mov
lret
and
pop
dec
xchg
int3
lea
fadds
enter
push
or
mov
dec
jo
fs
sti
stos
cmp
in
mov
sub
cld
pop
test
xchg
stc
pop
int
cmp
outsb
push
push
test
aad
and
or
sub
in
fidivl
ret
pop
jl
ljmp
out
xchg
xor
xchg
daa
mov
lret
loope
mov
insb
adc
adc
orb
inc
mov
leave
mov
adc
pushf
outsl
outsl
pop
cld
test
jge
icebp
mov
aas
sub
gs
leave
sbb
push
pop
fld
and
pop
lds
push
das
xchg
iret
or
dec
adc
divps
pop
movsb
mov
insl
fsubs
and
jae
cld
mov
call
stc
sahf
scas
sti
jle
mov
sbb
fdivs
push
lds
bound
cmp
adc
into
add
and
dec
sahf
lahf
aam
inc
inc
sbb
pop
pop
mov
aad
enter
lds
push
push
enter
fidivrl
xor
pop
add
mov
push
in
add
les
clc
fsubs
xchg
test
mov
xchg
loop
loope
push
inc
dec
or
sub
rol
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
and
cmpsl
ds
jo
pop
jge
jo
ret
adcb
cmpsb
loop
sbbb
add
scas
mov
int
ret
subb
dec
inc
rol
idivl
inc
xlat
or
fbld
lock
fcompl
mov
add
xchg
sbb
fadds
push
inc
sbb
pop
std
test
fwait
ss
clc
push
lret
push
ficompl
sbb
push
inc
xor
sub
jne
mov
add
mov
into
push
inc
lock
adc
call
insb
mov
xchg
jmp
lret
inc
cmp
je
cwtl
pop
movsl
popf
push
xlat
fwait
rol
sarl
xchg
push
std
popl
push
daa
xchg
imul
outsl
mov
fisubrl
jnp
in
sbb
jmp
sarb
addl
stos
mov
adc
push
mov
dec
pop
mov
das
push
sti
imul
mov
fs
repnz
jb
fucomip
into
jl
add
mov
push
adc
xor
cltd
push
outsb
nop
je
into
out
rorb
pushf
jmp
add
add
jl
mov
push
leave
adc
je
dec
cmp
add
lret
xor
mov
lret
fsub
jge
aas
loop
mov
int3
xor
pusha
mov
lock
das
ss
sub
sbb
or
clc
mov
imul
into
pop
sarb
jl
sar
adc
aas
adc
mov
jb
call
dec
rcl
mov
dec
test
push
cmpsl
out
pop
pop
cli
es
pop
lcall
xlat
add
ja
mov
sahf
in
mov
jae
push
mov
std
sub
mov
in
loope
mov
or
cld
sti
mov
or
cmpsl
sbb
les
cmpsb
inc
mov
push
ds
xor
xchg
cmp
xor
mov
and
aaa
or
movsb
std
sub
pop
push
mov
adc
inc
sbb
sub
or
push
stos
in
jb
sub
and
sahf
je
test
popf
movsb
xchg
cmc
nop
imul
jbe
cmp
pop
and
aam
push
test
cmp
lret
pop
mov
scas
gs
push
xor
sarb
int
test
sub
or
sub
hlt
mov
divl
mov
sub
sbb
sub
jns
aad
mov
mov
shl
out
movsb
sub
cmp
pop
mov
jg
and
add
dec
or
xchg
dec
in
adc
sbb
bound
xor
nop
lea
ficoms
in
pop
fadds
pop
scas
divl
or
repnz
int
rclb
sti
fiaddl
int3
inc
xor
xchg
sbb
xchg
int
push
xchg
mov
ret
push
xlat
pop
dec
mov
repz
fucomi
dec
xchg
sbb
in
je
jecxz
push
popa
dec
or
xor
data16
std
popf
test
or
push
ljmp
cli
loop
arpl
decb
dec
push
or
flds
sub
mov
xor
lret
push
ja
ss
mov
adc
xchg
out
aas
sbbb
fwait
test
shl
pop
rorb
dec
jo
cmc
stos
push
cmpsb
sbb
mov
cmp
out
pop
adc
cmp
push
cmpsb
rclb
mov
cmp
cmp
in
mov
mull
cmp
xchg
dec
aad
lahf
pop
jecxz
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
adcb
sub
mov
cli
test
jne
scas
dec
fs
jmp
and
cwtl
jp
sub
dec
and
imul
divl
mov
pop
stc
xor
pushf
into
addr16
push
fcmovne
pop
cmp
icebp
shlb
lret
dec
test
cs
jmp
icebp
sbb
fdivr
jns
lea
mov
sbb
mov
xchg
pusha
xchg
jnp
mov
cltd
jl
sub
ss
aaa
mov
push
sub
iret
ds
dec
dec
fildl
add
addb
call
outsl
leave
enter
dec
xchg
mov
test
mov
mov
xor
dec
fbld
fsubl
addl
cmpsb
xchg
cmp
je
push
lcall
sub
push
shll
sbb
pop
loopne
jne
fwait
add
cwtl
xchg
cld
or
and
test
jmp
shlb
ret
adc
sub
mov
xor
xor
movsb
gs
mov
sbb
fadd
inc
sub
repz
jbe
testl
inc
inc
fists
and
xor
jo
js
or
pop
loop
aas
out
sub
iret
xor
mov
pushf
inc
mov
imul
xlat
pop
mov
mov
push
lods
cmpsl
or
in
mov
push
shlb
pop
jmp
mov
sbb
pop
std
inc
subl
pop
push
lds
xchg
sbb
lcall
cli
xor
push
jb
xchg
in
jo
adc
jg
in
jns
push
dec
out
pop
jp
jo
adc
mov
xchg
jo
dec
enter
push
sub
cld
mov
stos
dec
push
inc
push
cld
int
dec
dec
cwtl
xor
sahf
sbb
pop
jg
pop
cltd
je
mov
mov
xchg
loop
xchg
lods
dec
lea
xchg
adc
ficoms
add
push
repnz
cli
adc
dec
aaa
xchg
push
sbb
inc
fimull
mov
xor
movsb
addr16
xlat
and
mov
mov
dec
push
adc
cmp
mov
sar
jp
in
enter
inc
jns
lret
out
popa
mov
into
jg
pop
jae
ljmp
fst
push
push
dec
and
rcrb
mov
push
cs
pop
xchg
cli
scas
mov
mov
adc
aad
or
or
scas
mov
pop
pop
push
ret
cltd
lods
mov
or
scas
mov
pop
lahf
es
mov
pop
sahf
jmp
or
mov
pusha
outsl
jp
sbb
push
shrb
aad
or
jno
mov
mov
pop
cmp
inc
mov
fs
jle
orl
pop
push
jg
cmp
hlt
ljmp
outsb
mov
push
in
add
push
or
mov
inc
dec
dec
mov
and
lret
sub
lret
sub
jg
pop
xchg
sarb
ret
pop
mov
inc
orl
cmp
outsb
sub
pop
aam
mov
mov
rcrl
mov
pop
push
mov
adcb
icebp
dec
int3
dec
push
sbb
ret
mov
xchg
or
xchg
outsl
pop
mov
xor
inc
cmpsl
out
dec
jno
pop
insb
gs
push
pop
add
cwtl
jbe
mov
out
mov
pop
mov
sahf
in
mov
lea
cmp
lods
mov
and
pop
or
push
cs
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
adc
jo
pop
jge
jo
mov
mov
out
pop
imul
cmp
movsb
fdivrs
dec
out
in
sbb
sbb
mov
pop
inc
jnp
mov
dec
int3
or
mov
dec
int
repnz
push
adc
jo
jmp
es
dec
sub
mov
notb
jmp
fld1
fadds
mov
xorb
in
ss
inc
xor
cmp
cmp
jns
pop
cli
icebp
xchg
popf
js
lea
data16
inc
sbb
scas
fdivrl
or
push
into
inc
sub
pop
scas
inc
dec
jae
leave
adc
and
cmp
icebp
xor
push
pop
mov
movsl
iret
ret
add
fsubl
push
stos
cmpsl
dec
adc
rcrb
xchg
lods
mov
mov
jecxz
jl
jne
insl
pop
push
pop
jne
sbb
out
ss
or
stos
add
movsb
jl
icebp
lea
jae
out
mov
sub
jb
jecxz
pop
push
aas
fcompl
cmp
xchg
and
mov
add
in
adc
and
mov
mov
movsl
outsl
push
leave
jb
ret
jnp
pop
std
lea
out
cmp
lods
push
cmpsl
neg
mov
outsl
xchg
and
cmp
mov
in
repz
sahf
push
out
mov
in
fldl
mov
cmp
or
jno
cmp
cmp
mov
sub
mov
les
lods
lcall
jmp
dec
mov
divl
xchg
and
mov
arpl
cltd
sbb
sbb
push
and
out
jno
mov
inc
mov
sub
loop
fstps
in
mov
and
imul
xor
inc
xchg
jne
add
cmpsb
jle
int3
push
sbb
xor
das
int
cmpsl
ljmp
nop
lock
div
aaa
test
cltd
lods
fistpl
mov
lret
pop
fsubrs
mov
and
xchg
scas
sub
mov
mov
cmp
fwait
dec
jno
mov
inc
adc
sahf
mov
cmpsl
push
jne
in
xor
sbb
fidivl
fstps
sub
add
dec
scas
or
sub
cmpsb
mov
fs
sbb
lock
adc
or
mov
pop
mov
stos
shll
push
aas
xrelease
and
test
mov
mov
adc
mov
pop
sarl
and
sbb
cmp
xlat
sbb
and
inc
cmp
stos
or
outsl
xchg
repz
adc
pop
push
shll
or
xchg
out
lret
lock
pop
shll
xchg
jns
enter
push
cmovb
outsl
dec
addb
out
xchg
test
pop
ret
sarl
push
sub
xchg
xchg
scas
mov
cld
mov
cmpsl
jp
fdivr
add
xor
adc
scas
lahf
imul
mov
fstpl
fstl
sbb
jbe
push
add
clc
pop
movsl
xor
and
test
or
hlt
cmp
push
cmp
sti
js
inc
call
xchg
mov
push
mov
mov
loopne
sub
filds
adc
adc
push
lahf
sbb
inc
mov
jno
pop
xchg
cld
stos
adc
imul
mov
or
mov
imul
cmp
imull
es
and
inc
mov
jl
mov
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
movsb
jbe
jo
pop
jge
jo
adc
ficoms
in
pop
mov
pop
mov
add
inc
loopne
bts
inc
cmpsb
lcall
insl
xchg
lret
inc
daa
push
in
pusha
into
and
arpl
std
sbb
aas
loop
push
imul
dec
addr16
sti
adc
inc
mov
pusha
xchg
bound
sbb
imul
sub
xchg
mov
jns
loopne
outsb
cmp
sbb
jb
adc
mov
and
xchg
xor
lock
push
jle
push
inc
cmp
pop
mov
adc
push
add
in
popl
lds
test
into
aam
xchg
xchg
sub
inc
adc
add
push
call
xor
xor
xchg
lret
in
aaa
aas
push
test
cltd
xchg
out
push
int
inc
mov
mov
cltd
cmp
decl
jl
jl
dec
repnz
pusha
inc
cmp
rcrb
adcb
sti
mov
repnz
cmp
inc
fimull
ljmp
lock
xchg
dec
xor
pop
push
pusha
dec
jecxz
out
push
lret
mov
jmp
fcmovu
lds
adc
sbb
les
add
cmp
xchg
sub
and
dec
dec
push
call
imul
xchg
sti
lods
mov
jge
cvtps2pi
jge
xchg
pop
ret
es
mov
in
js
push
xchg
jo
and
push
cmpsb
xchg
aas
mov
sbb
dec
ret
jmp
cli
jns
cmpsb
dec
mov
aaa
lock
lcall
icebp
lret
sub
and
jne
jecxz
rcr
pop
sarl
adc
stc
sbb
mov
jmp
inc
push
jb
ljmp
rcll
ficoms
rcrb
sbb
loopne
arpl
push
aad
pop
flds
fimull
and
jle
insl
rcrl
or
je
dec
cmpsl
les
imul
stos
out
cwtl
scas
mov
sbb
and
mov
stos
or
lods
jmp
sub
jle
mov
dec
push
std
mov
mov
push
pushf
jge
ds
push
dec
mov
fucomip
add
adc
sbb
lds
fadd
adc
mov
pop
mov
aas
and
stos
cmp
add
test
scas
push
incb
xlat
and
mov
ficomps
clc
xchg
ret
push
push
jnp
pop
cmpsl
insb
jbe
ffreep
lret
xor
pop
sti
scas
push
fstps
movsl
addr16
pop
out
pushf
xorl
loopne
pusha
insl
movsb
mov
mov
add
sbb
js
mov
mov
pop
stos
sbb
mov
int
je
arpl
adc
mov
xchg
mov
push
xchg
lds
mov
nop
out
mov
cmpsb
sbb
pop
loopne
subl
mov
lcall
insb
sbb
popf
xor
mov
push
dec
dec
mov
insb
lods
shll
rcrl
adc
lds
cmpsl
aad
mov
clc
adc
xchg
icebp
shl
mov
cltd
ss
pop
push
lods
mov
mov
adcl
jp
iret
adc
into
sub
minps
enter
in
mov
push
pop
subb
xlat
or
nop
sub
mov
sub
into
sbb
nop
loop
mov
repnz
adc
enter
xor
sub
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
mov
jo
pop
jge
jo
aad
and
xchg
aas
imul
push
das
loope
push
cmp
sahf
in
cmpsb
xchg
mov
popf
sub
lar
mov
int
cwtl
nop
shlb
jnp
jns
mov
inc
mov
jnp
outsl
aas
iret
das
pop
data16
je
js
lea
push
inc
repz
sti
add
pusha
loopne
ss
jbe
sub
pop
push
subb
dec
hlt
adc
mov
dec
popa
sub
shl
outsl
inc
mov
adc
in
aam
insb
in
out
movsl
pop
pop
addr16
or
shrl
movsb
aam
pushf
cmp
daa
ret
cmpb
pop
incb
iret
call
push
insl
loop
nop
mov
scas
aaa
push
inc
jge
ficoml
sbb
rclb
or
dec
dec
negb
insl
jp
xchg
adc
in
loope
inc
fcmovnu
fcmovbe
inc
adc
out
pop
ds
dec
fwait
xchg
or
mov
cld
hlt
push
mov
adc
lock
aam
add
and
push
aad
dec
pop
inc
add
es
stc
dec
fwait
pop
data16
dec
mov
jp
mov
ret
inc
xor
outsl
dec
mov
push
ja
mov
ficompl
sub
lahf
orl
std
xor
imul
cmpsb
adc
popa
stos
gs
test
adc
pop
pop
je
mov
mov
test
inc
xchg
mov
mov
lcall
cltd
add
cltd
hlt
and
mov
test
jmp
inc
or
out
mov
inc
mov
jge
inc
xchg
mov
sub
mov
and
repnz
pop
dec
fdivs
sbb
outsl
stc
cmp
sub
es
ja
das
pop
add
nop
pop
add
fcomip
xor
in
loop
rol
pop
add
dec
jb
push
sub
lock
xlat
mov
leave
out
out
lret
pop
mov
sti
cmp
add
and
testl
fcoms
push
idivb
icebp
pop
cli
mov
std
loop
loope
jmp
lret
out
lock
dec
jp
rorl
push
std
fsubs
fcom
jbe
sub
std
mov
and
nop
or
push
inc
xor
xor
xchg
cmp
mov
loopne
lahf
push
push
orb
jb
imul
push
mov
push
cmp
mov
cmpsl
mov
imul
fcoms
movsb
jns
dec
xchg
sub
jno
jne
or
cli
std
int
sub
and
lea
iret
ret
in
out
lcall
stos
and
xlat
mov
gs
shlb
pop
aam
jecxz
es
xor
mov
je
outsb
nop
and
shl
andb
rcr
jb
mov
adc
push
in
or
xchg
jecxz
mov
add
mov
pop
test
sbbb
dec
pop
xchg
pop
pop
imul
jns
imul
or
das
add
mov
popf
loopne
shr
sbb
sarl
inc
nop
bound
sub
push
int3
popf
push
cltd
xchg
ficoml
in
xor
sub
movsb
test
mul
test
mov
lret
mov
push
xor
sub
push
sub
mov
call
mov
mov
inc
addb
negb
inc
pop
mov
movsb
pop
cmp
add
push
adc
jae
fnstsw
mov
arpl
mov
mov
in
icebp
dec
mov
or
popa
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
jge
and
jo
mov
add
pusha
cmp
push
leave
mov
dec
out
mov
jmp
fimuls
mov
xor
adc
xor
inc
add
add
mov
test
mov
loop
sub
icebp
jecxz
xchg
loopne
in
push
inc
add
or
mov
idivb
je
pushf
cli
push
push
push
pushf
std
aaa
adc
or
scas
loopne
cmp
jmp
or
les
fdivrs
negb
cmp
sbb
ljmp
sub
ljmp
sbb
sti
movsl
in
mov
imul
fsubrs
into
les
jne
mov
hlt
pop
adc
jo
xchg
jbe
mov
lods
sbb
xchg
jmp
sub
repz
add
mov
cmp
outsb
or
in
and
cs
sahf
daa
into
xchg
aaa
cli
jnp
push
add
pop
sbb
cmp
loope
insb
imul
pop
daa
addr16
lods
rolb
dec
testb
push
fbstp
rcrl
lahf
movsb
adc
lds
inc
xchg
adc
test
mov
and
jb
in
pop
add
mov
or
mov
les
mov
lods
jle
jge
aas
jmp
stc
xchg
cmp
das
cmpsb
addr16
xchg
in
mov
mov
inc
xchg
fnstsw
ds
mov
frstor
sbb
mov
mov
cmp
repz
sub
dec
and
out
cmc
in
adc
xchg
jl
lahf
roll
aad
aam
mov
cmpsl
inc
daa
adc
int3
subl
xlat
inc
mov
clc
imul
enter
imul
cmp
movsb
cld
lods
sbb
jmp
pop
mov
aas
mov
fcoml
jae
ficoml
cmp
andb
cvtdq2ps
inc
ret
rorl
outsb
push
insl
ds
int3
sbb
cmp
neg
dec
push
insb
lcall
adc
cmpsb
test
jno
push
rolb
sbb
ret
pextrw
sbb
repnz
aad
cld
sbb
sub
xchg
push
mov
sub
xchg
out
xor
andb
or
scas
mov
lds
sbb
repnz
adc
scas
mov
fwait
inc
fsqrt
pop
shrb
aas
mov
shrb
lret
mov
stos
mov
hlt
sub
imul
andb
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
push
les
jo
jle
jo
or
and
je
and
and
sub
stos
push
rorl
cmp
icebp
mov
xor
sub
jo
or
rorl
dec
xorb
pop
adc
dec
sbb
pop
test
add
or
cmc
addb
out
mov
cmc
insb
stos
push
fs
stc
add
push
sub
pop
je
outsb
cli
icebp
inc
mov
loop
jns
push
rcll
lods
mov
movsl
cmp
cwtl
pusha
xchg
jnp
mov
dec
cld
cld
fsubrs
sbb
sub
xchg
cltd
push
jnp
je
clc
lret
prefetch
or
sub
arpl
adc
ret
mov
xor
sub
shll
jecxz
scas
cltd
or
shr
adc
nop
cwtl
mov
push
xlat
mov
fcmovnb
aas
pop
sub
add
jo
lods
mov
sbbl
dec
test
dec
lcall
mov
icebp
cmp
das
cmp
int
test
jno
idiv
insb
loopne
dec
cmc
daa
inc
dec
mov
and
xabort
jle
rcrb
and
pop
jmp
ret
sbb
sub
xchg
pop
lcall
aaa
mov
in
in
test
aaa
xor
mov
push
sbb
addb
icebp
or
sbb
mov
cli
scas
mov
loopne
jg
xor
in
fdivrs
in
and
std
sub
cmpsb
xor
arpl
and
cli
into
mov
pop
mov
push
jg
inc
mov
lcall
ret
jecxz
jmp
std
repnz
cmp
fsubrl
fcomps
mov
inc
push
xchg
ja
out
movsb
lcall
xlat
add
or
push
jo
xor
test
xchg
loope
int3
pusha
imul
test
xor
daa
sbb
enter
push
jle
inc
pushf
jno
mov
ljmp
mov
lret
sub
loope,pn
jbe
test
movsl
xlat
adc
dec
lock
dec
jmp
arpl
sub
popa
pop
adc
and
hlt
xchg
movsl
test
adc
in
adc
mov
jae
pusha
push
aas
lahf
cmpsb
push
in
andb
push
pop
imul
mov
or
loope
sbb
jl
mov
sub
jae
js
jecxz
mov
in
enter
cmp
sub
jno
sub
adc
gs
rol
add
aad
cmp
ljmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
aad
nop
enter
mov
pop
or
cli
mov
scas
add
fucomi
bswap
fdiv
push
xchg
mov
std
repz
mov
jnp
push
enter
bound
mov
loop
xor
jb,pn
lret
xchg
ds
enter
and
roll
cli
and
fcmovnb
in
inc
push
or
mov
inc
fwait
xor
cmpb
outsb
inc
cli
cwtl
js
dec
stos
mov
push
iret
pop
imul
mov
xorb
mov
mov
xchg
jle
mov
adc
cmp
sti
sbb
sgdtl
cltd
hlt
lds
stc
das
add
lods
lods
jg
mov
sbb
and
iret
wrmsr
leave
or
sbb
and
enter
pushf
cmp
cmpsb
std
dec
daa
fidivs
add
mov
das
or
adc
add
pop
pop
in
test
std
cmp
lcall
mov
out
imul
ja
adc
sub
loopne
and
sub
push
std
cmp
xchg
sub
mov
adc
pop
hlt
dec
jecxz
cmp
mov
insl
add
popa
js
pop
dec
test
cmpsb
or
xor
push
aam
lea
xor
popf
ja
test
fcomp
and
mov
bound
clc
ljmp
clc
mov
add
and
and
push
out
fistps
xchg
cmp
repnz
cmp
push
xor
sub
sarb
lcall
je
xchg
pop
cmpsb
mov
dec
scas
push
popa
xor
rep
lock
xchg
fmul
lcall
addr16
in
iret
daa
ret
imul
int
shll
bound
stc
mov
push
pop
inc
outsl
fcom
mov
movsb
dec
jns
inc
shll
jb
pmuludq
mov
add
adc
mov
inc
dec
sbb
enter
dec
mov
pop
mov
ds
loopne
in
pop
or
icebp
mov
cmpsb
jg
mov
test
notl
inc
fdivr
into
xor
and
or
dec
es
push
out
dec
cmp
sbb
sub
xchg
and
or
jb
std
xchg
in
lahf
mov
pushf
rcll
fcmove
pop
dec
fstpt
dec
mov
sbb
lret
or
lods
lock
adc
mov
adc
add
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
cmpl
jo
js
push
mov
cs
adc
mov
movsb
sub
lahf
movsl
ja
push
mov
dec
pop
jl
push
out
outsl
pop
pop
mov
and
rcrl
mov
sub
jnp
inc
int
fwait
push
sarb
fwait
rcl
push
and
gs
add
icebp
lods
test
cmpsb
adc
cli
out
loope
jne
rorb
cmpsb
push
sahf
or
out
mov
pop
into
push
movsl
push
and
or
jmp
push
adc
in
aaa
ljmp
cs
cmp
movsl
insb
call
and
xchg
lret
push
loope
xchg
icebp
xchg
int
sub
das
fs
jno
dec
sub
movsl
xor
push
and
ficoms
ja
rolb
fstpl
xchg
sub
cmp
and
cltd
fsts
es
cmp
xor
adcb
mov
stos
push
pop
stc
xchg
dec
sbbb
popa
repz
add
push
cmp
movb
xchg
sbb
insb
test
dec
xchg
adc
aad
push
sbbl
jecxz
iret
cltd
insl
daa
adc
jg
ret
sbb
loop
push
in
icebp
scas
aaa
cli
mov
xchg
ljmp
mov
enter
ret
jecxz
xor
ret
lea
pop
adc
mov
inc
dec
fsubs
cmp
icebp
xor
push
iret
or
ja
cmp
test
dec
vmwrite
int3
test
sub
iret
lods
dec
daa
jb
pop
in
pop
mov
movsl
sub
in
sbb
push
jbe
sahf
ds
mov
je
and
mov
pop
and
mov
push
cld
and
clc
xchg
adc
xchg
jbe
rol
and
mov
leave
sbb
push
cmpl
add
gs
push
push
xchg
inc
popf
push
xlat
aas
cmpsb
adc
test
andl
dec
adc
dec
call
and
mov
int
and
fdivs
insb
jl
sbb
lcall
fidivrl
jns
fdivr
daa
or
outsl
dec
push
lods
popa
mov
mov
push
lcall
sbb
fisubrs
mov
loop
lods
add
gs
int3
and
sbb
adc
andl
ret
imul
jb
shl
mov
fcomps
add
add
cvtpi2ps
or
jns
jecxz
push
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
fs
mov
test
fwait
ret
aas
mov
or
xchg
cmpsb
pusha
and
pop
xchg
jp
cmpsb
mov
and
pop
jmp
sub
fsubl
push
xchg
rolb
stos
testl
add
icebp
repnz
xor
fwait
pop
stos
out
call
daa
aad
jbe
test
mov
in
leave
aas
addr16
into
cmc
movsb
pusha
dec
mov
negb
or
or
mov
cmp
cld
insb
push
dec
clc
pushf
xlat
inc
mov
dec
jae
lcall
mov
pushf
lds
out
pop
add
das
aas
or
aad
arpl
or
inc
pusha
insl
shll
dec
push
pop
lret
sbb
les
ja,pt
scas
inc
les
push
sahf
xor
xchg
xor
jle
in
repnz
pusha
fadds
mov
jnp
icebp
push
outsb
jp
mov
cmc
push
mov
pop
sub
rorb
fnstsw
xor
repnz
mov
call
xchg
pop
lods
cld
add
mov
mov
sbb
fucom
fs
inc
pop
repz
loope
jae
sarb
mov
push
and
dec
adc
xor
push
mov
mov
mov
mov
sbb
rclb
sub
add
and
jp
lcall
xor
jbe
pusha
popf
mov
jne
rcrb
in
xchg
das
gs
mov
loop
aas
xchg
pop
movsb
cmp
and
sub
jb
pop
lea
push
or
les
jb
subb
mov
or
mov
into
sbb
pusha
clc
fsubrs
and
mov
sbb
inc
shrb
adc
mov
popa
rcl
and
stc
cmp
pushw
subb
jno
sbb
lods
cmp
aas
lods
inc
daa
pop
pop
mov
push
cmp
push
dec
jb
pop
cmp
in
leave
mov
cmp
ja
xchg
sub
push
rcl
add
sahf
xchg
push
icebp
inc
addr16
or
shrl
sub
mov
mov
pop
outsb
addr16
pop
pop
cmp
mov
and
sti
aam
sub
xchg
loopne
das
xor
mov
inc
push
sbb
cmpsl
mov
add
mov
adc
sub
lcall
dec
iret
xor
mov
sahf
jl
das
mov
jne
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
mov
mov
jo
jle
jo
negb
and
sahf
lret
inc
int3
sbb
stos
pop
hlt
int3
in
lods
loop
sub
mov
mov
js
rcll
lret
aam
push
cmp
sbb
xor
mov
push
sbb
fs
jae
mov
sarb
aaa
shlb
pushf
add
idivl
mov
inc
shlb
xchg
inc
shll
adc
jnp
js
inc
cmp
scas
mov
adc
sbb
mov
andb
in
xor
out
sahf
ficoms
adc
repnz
push
lods
push
clc
cmpsb
test
lahf
jb
sbb
aad
lret
dec
lock
and
popa
jmp
test
dec
cli
inc
xchg
mov
test
sub
imul
adc
subl
push
jnp
mov
jb
sub
cs
imul
rol
cld
mov
push
cmp
addr16
xor
pop
mov
loopne
stos
fwait
mov
mov
scas
or
add
jp
pushf
les
adcb
iret
cltd
cmp
jno
fdiv
sbb
les
cmpsl
sbb
test
jne
adc
popa
test
push
popl
push
imul
cli
xor
jg
push
aam
xor
fwait
mov
push
out
adc
bound
pop
pop
cmp
inc
add
push
mov
imul
and
push
out
and
jns
movsb
add
icebp
pop
test
fiadds
in
data16
pop
mov
daa
and
and
movsl
iret
insl
js
sub
daa
in
ljmp
movsb
lret
imul
fdiv
and
nop
push
out
xlat
mov
dec
mov
fs
mov
rolb
icebp
sbb
imull
push
add
icebp
lret
clc
repnz
or
fs
add
loop
mov
or
sbb
clc
fcmovb
les
pop
or
jnp
push
sub
xchg
cmpsb
mov
push
mov
lret
popa
div
or
cld
push
iret
jmp
fwait
cmp
test
fnstsw
cltd
mov
push
addr16
stc
sub
push
inc
lds
loope
test
subl
lcall
inc
add
sbb
inc
push
imul
mov
jo
push
cld
mov
nop
bound
inc
scas
jne
enter
mov
xchg
adc
ss
imul
gs
pop
arpl
lcall
dec
pop
test
sbb
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
xchg
outsb
jo
mov
cmp
in
jo
movsl
scas
and
or
pop
or
call
sbb
insb
push
mov
mov
add
cld
jp
gs
pusha
xor
mov
lea
out
icebp
pop
out
push
ljmp
and
adc
pushf
jle
or
pop
or
adc
fisttpll
out
cmp
out
push
push
xor
mov
subl
scas
or
mov
test
lds
insl
stos
dec
jae
sti
jo
xchg
lods
fistl
fnstenv
mov
dec
stc
mov
push
js
push
xchg
dec
cmp
xchg
mov
mov
and
cmp
push
push
out
xor
daa
in
test
pop
jl
or
in
xor
daa
and
xchg
and
gs
cmpsb
mov
cltd
jp
test
stc
stos
add
fnsave
das
adc
cmp
ss
outsl
jecxz
pop
dec
in
xchg
mov
ficoms
pop
movsb
nop
mov
sub
sbb
popf
cmc
repnz
sub
arpl
mov
aam
scas
adc
icebp
negb
mov
add
push
loopne
je
scas
push
sbb
sub
jo
pop
mov
dec
movb
pop
rorb
je
sub
inc
cmp
int
test
aam
mov
mov
lcall
adc
cmp
mov
insl
les
and
insb
sbb
sbb
dec
popa
leave
mov
mov
lods
imul
fwait
les
sbb
lret
pop
in
aam
outsl
and
pushaw
stos
pop
jge
enter
ss
ja
push
or
nop
cmp
jle
or
push
aad
out
pusha
imul
inc
and
pop
mov
lret
popa
scas
cmpsb
mov
mov
add
cld
cmp
mov
out
lds
sbb
mov
pop
sub
rolb
cmp
sbb
test
out
cmp
mulb
test
pushf
dec
jge
rcr
sub
es
sbb
outsb
fwait
pop
jp
es
mov
mov
or
stos
xlat
and
je
aas
mov
pop
or
push
or
shll
xchg
shr
adc
jnp
loop
inc
js
scas
into
fiadds
push
repnz
jg
add
fcomp
andb
cmp
dec
push
lods
jne
add
pusha
sub
cmc
or
or
jmp
lds
idivl
clc
jne
pushl
jmp
and
lods
shrb
in
lret
inc
xor
jle
jo
or
rcll
xor
adc
stos
add
test
test
stos
mov
pop
call
mov
jns
fisttpll
call
inc
mov
cs
sub
imul
inc
repz
repz
fnstsw
les
mov
jbe
packuswb
and
pop
or
pop
popf
mov
or
xchg
jnp
add
aad
stos
or
xchg
out
mov
ds
out
inc
cmpsb
jmp
add
pop
daa
xchg
xor
mov
or
pushf
mov
adc
push
xchg
aam
mov
pandn
out
mov
stos
loope
sbb
sub
aas
xchg
or
loop
aas
mov
int
push
pop
jp
cmp
in
xor
int
or
addb
pushf
aad
mov
pop
pop
push
pop
bound
xchg
xchg
dec
aaa
into
fidivrl
scas
dec
adc
and
jb
lods
fcompl
icebp
jp
pop
sbbl
out
ja
mov
in
mov
jle
jbe
scas
cld
cmp
inc
jecxz
mov
fnstsw
divps
movsb
adc
jae
stc
push
outsl
push
rorb
push
dec
ret
out
adc
in
sti
push
inc
dec
or
and
mov
mov
jnp
mov
out
sub
cmpb
aaa
test
jbe
pop
mov
sti
or
filds
push
jp
ja
popf
pop
icebp
cmp
pop
or
in
sub
es
mov
lock
cmp
and
stos
push
inc
iret
push
add
and
push
jecxz
cs
jb
mov
add
and
cli
and
jl
mov
and
ds
stos
mov
mov
roll
scas
dec
push
mov
sub
clc
xor
test
out
imul
fs
mov
imul
arpl
sub
mov
push
fwait
addr16
add
mov
mov
jp
call
sbb
cmp
sbb
js
cmpsl
popf
mov
adc
dec
add
xchg
pop
insl
setle
ds
add
cli
lea
add
adc
cmp
dec
fstpt
push
enter
outsb
sti
sbb
mov
xchg
sub
hlt
repz
pop
xor
arpl
nop
mov
les
movsl
out
adc
xchg
into
movsb
jp
jmp
aaa
mov
test
fimuls
jp
and
dec
sub
cli
xor
cmp
fidivs
mov
sbb
mov
ja
jmp
pop
insl
and
xor
insl
jp
or
ljmp
jo
jle
jo
add
xchg
pushl
jnp
adc
jo
push
xchg
cltd
pop
mov
out
add
cltd
sub
inc
jge
es
jae
or
inc
or
xor
inc
imul
testl
dec
inc
jbe
add
mov
mov
rcrl
shll
dec
enter
jo
xchg
mov
mov
mov
or
repz
into
or
ficomps
mov
cld
sbb
int
mov
inc
add
shll
fstps
mov
xchg
jecxz
rcrb
sahf
lea
repz
jbe
mov
ss
xlat
flds
movsb
add
loope
xchg
cmp
repz
stos
je
mov
repnz
out
addl
mov
jns
pop
popa
iret
xchg
or
mov
divl
int3
mov
test
mov
mov
test
add
shr
xchg
adc
lret
cwtl
cmc
dec
int3
test
lahf
test
adc
ljmp
lcall
sub
repz
mov
sub
sbb
xchg
call
mov
push
dec
jns
push
enter
imul
push
jb
push
cmp
cmc
mov
jmp
sbb
int
pushf
push
sbb
and
ds
mov
jl
adc
aad
cs
fisubl
cli
mov
lret
outsb
add
xchg
mov
pop
mov
aaa
inc
xchg
lret
pop
out
lret
dec
lea
lods
ljmp
or
dec
faddl
jmp
or
and
scas
sbb
mov
inc
or
mov
ret
xor
sub
push
adc
adc
in
pop
or
xchg
fildl
jmp
adc
loop
fadds
sbb
fistpll
hlt
addps
popa
mov
cmc
or
cmp
xchg
lcall
enter
cmp
jo
mov
loope
inc
imul
hlt
pop
fs
add
loopne
sbb
repz
and
inc
ds
xorl
jecxz
jb
jl
cld
pop
dec
dec
push
xor
cwtl
out
das
xchg
pop
dec
hlt
daa
push
jecxz
mov
bound
cmc
das
dec
xchg
or
jle
jmp
fimull
jnp
fisttps
aaa
push
lret
hlt
xor
dec
daa
daa
dec
jnp
jae
mov
lea
popf
mov
jmp
cmpsb
dec
andb
test
push
jb
jmp
outsl
filds
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
push
aam
icebp
inc
jbe
jo
jle
jo
inc
or
pop
xlat
pop
pop
xor
sub
add
push
jecxz
pop
and
aam
sub
push
sub
fwait
xchg
pop
push
mov
cli
data16
loope,pt
xchg
push
sub
adc
enter
push
xchg
add
or
adc
push
mov
inc
in
inc
test
fldcw
inc
sub
icebp
xor
adc
or
enter
jp
push
call
sub
insb
inc
inc
imul
sbb
js
sahf
int3
cs
rorb
jg
test
xor
mov
sub
arpl
cmovle
int3
pop
dec
push
push
addr16
aad
push
mov
push
or
sbb
aad
add
ss
xor
pop
xchg
pop
jns
adc
orl
das
lods
jl
lret
div
sbb
jmp
mov
cmp
popa
or
adc
test
sbb
push
pop
std
mov
outsb
lahf
and
test
push
jmp
in
sub
in
and
ljmp
movsl
sahf
popf
aad
mov
or
inc
add
mov
movsl
add
xor
stos
pop
ds
loope
cmp
cmpsb
push
dec
jb
dec
shlb
adc
pop
dec
cli
jl
pop
mov
repz
nop
sbb
xor
loop
ds
adc
out
xchg
and
jle
jo
jge
push
lods
insl
insb
xor
test
cld
das
in
xchg
cmpsl
les
ret
pop
lret
mov
das
je
jae
fistpll
push
inc
mov
cltd
ss
mov
rcl
dec
or
dec
jge
xor
pmulhuw
mov
les
ss
loope
test
mov
xchg
xchg
arpl
outsl
pop
mov
lsl
ret
imul
fsubr
movb
cmp
mov
mov
xor
push
out
das
stc
outsl
sahf
shlb
pop
jge
imull
shl
ret
call
lods
mov
jle
repz
mov
call
out
xor
loope
mov
mov
inc
pop
icebp
push
jae
addr16
sub
repz
jne
mov
scas
test
inc
fldl
xor
pop
icebp
jae
pop
rorb
xchg
lcall
mov
dec
icebp
ja
arpl
inc
mull
cmp
inc
sti
rcr
rolb
pop
pop
xchg
add
ds
jg
movsb
out
mov
loope
cmpsl
out
push
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
out
cmp
jle
jo
pop
cmpl
inc
call
popf
loopne
cmpsb
lds
test
les
mov
inc
cmp
jne
xchg
or
sbb
push
sbb
inc
into
mov
mov
das
inc
push
mov
adc
fwait
push
sahf
in
mov
mov
inc
push
mov
test
scas
fs
ret
jmp
pusha
add
fbld
jbe
icebp
andl
mov
mov
pop
lahf
dec
and
mov
enter
dec
mov
dec
xchg
sub
jbe
adc
aas
in
dec
lea
xor
std
pop
mov
jae
push
add
mov
repz
inc
pop
jmp
mov
clc
test
mov
addr16
in
in
pop
add
add
xor
lock
mov
sub
test
mov
sub
pop
sub
mov
pop
bound
fsubr
push
mov
lcall
inc
loopne
pop
ljmp
fldt
les
pop
pop
scas
stos
push
hlt
adc
fisttps
in
je
ds
repnz
shlb
out
das
bound
inc
bnd
repz
lods
xchg
in
pop
push
jb
lods
xor
sarb
push
lods
into
mov
or
mov
aam
cld
aaa
and
pop
cs
push
imul
add
outsl
dec
cmp
push
dec
sub
adc
ja
mov
mov
xchg
popf
loopne
push
fdivs
jnp
mov
scas
jmp
inc
dec
jb
jmp
push
xor
decl
mov
cmc
cwtl
test
inc
mov
int
mov
mov
movsl
push
mov
in
sbb
js
sub
int3
arpl
sbb
mov
sbb
xchg
jge
out
ret
jo
fdivrl
loope
pop
pop
or
jb
cmp
scas
and
xor
mov
mov
inc
add
mov
cmp
push
repnz
xor
adc
or
int3
adc
mov
push
fwait
shlb
sbb
mov
fs
es
outsl
add
adc
call
popa
mov
je
add
pushf
cmpb
ja
out
cmp
xor
loop
inc
dec
adc
fistpll
sub
xchg
sbb
fstps
stos
test
outsb
sbb
pop
mov
jae
push
mov
test
imul
pop
loope
inc
pusha
out
jmp
lahf
cmpsb
push
in
add
ljmp
xchg
not
je
ret
loop
aaa
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
xchg
mov
jo
jo
jle
jo
mov
insl
inc
mov
xor
mov
arpl
jae
lcall
mov
mov
iret
xor
pop
push
pop
frstor
inc
call
out
loopne
shl
xor
movsl
or
in
mov
aam
test
push
mov
mov
fstl
jmp
mov
xchg
jp
fwait
js
lea
adc
or
aas
and
xor
sbb
loop
pop
js
sti
adc
jns
xchg
inc
xchg
or
sub
ja
imul
mov
roll
sti
sbb
push
fildll
pop
lret
stos
lods
cmp
pop
add
sub
cmp
jb
out
adc
enter
xchg
scas
jmp
gs
popf
mov
in
jmp
dec
add
pop
gs
mov
or
adc
in
orl
lret
xor
jl
dec
and
in
into
out
xchg
ja
pop
loope
push
loopne
jnp
cmp
xlat
das
adc
imul
aas
sbb
fwait
lahf
mov
push
pop
cmc
lret
inc
push
adc
sbb
mov
jl
push
addb
sub
insb
add
popa
ret
xlat
imul
jnp
dec
leave
pop
sub
lods
push
xchg
cmpsl
jb
adc
pop
ja
test
sub
scas
das
int3
cmp
or
sbb
xchg
xor
sbb
repnz
jb
sub
add
or
sbb
mov
inc
in
pop
das
mov
ret
out
into
pop
mov
bound
test
aam
cwtl
push
ret
mov
scas
push
and
test
ja
stc
push
cmpsl
shl
sbb
mov
add
lods
movsl
popf
insl
adc
aam
cmpsb
push
mov
out
jg
dec
pop
ret
fnstenv
aas
dec
leave
je
mov
out
dec
daa
rcrb
mov
jb
and
sbb
mov
movsl
sarb
jo
and
jp
adc
mov
imulb
xor
sbb
jg
sbb
rcr
fnstenv
sti
ljmp
stc
addb
push
mov
xchg
adc
sarl
push
es
dec
jmp
sub
ficoms
sbb
xor
push
insl
dec
mov
xchg
fsub
shr
dec
sbb
inc
lods
call
pop
dec
es
and
daa
pop
mov
orb
push
pop
jmp
add
mov
jb
jge
jge
pop
mov
mov
movsl
cmpsb
loopne
inc
mov
test
xor
jp
sub
pop
mov
cld
and
lahf
mov
cmpsb
mov
push
rcrb
rclb
add
mov
dec
cmp
mov
xchg
xor
sbb
in
jns
das
dec
pop
shrl
cmp
pusha
push
fs
mov
enter
fsubrs
push
pusha
add
mov
popa
iret
xlat
rcl
pushf
lcall
lret
inc
sub
mov
mov
xlat
out
repnz
push
mov
pop
mov
ficomps
jb
hlt
loope
push
cmp
mov
outsl
add
adc
jle
jae
dec
cltd
sbb
inc
push
pop
sbb
rsm
aad
mov
mov
stos
xor
lods
cmp
pop
and
andb
fwait
push
jns
mov
das
rcll
lahf
inc
jbe
test
cmpsl
aaa
xorb
sub
cmp
mov
testb
mull
or
xchg
jne
pop
add
mov
lods
jge
push
ficomps
inc
notl
dec
mov
out
into
pop
ret
mul
sti
cli
mov
inc
ljmp
gs
push
sbb
dec
test
sahf
jno
push
das
out
dec
adc
and
ja
sahf
mov
xchg
rclb
pop
push
scas
or
mov
xor
outsl
dec
mov
out
stos
daa
cwtl
ljmp
jae
jns
xor
sbb
xor
inc
mov
cmp
enter
cs
pop
lcall
fsubrs
or
mov
stos
xchg
stos
sub
jo
cli
pop
shl
hlt
int3
pop
jae
test
out
jno
out
inc
push
rcrb
pop
repz
and
bound
or
test
and
cltd
pop
popa
lds
sbb
sbb
or
daa
into
mov
cmp
xchg
cmp
insb
movsb
sar
divl
arpl
shlb
inc
sahf
fimuls
fiaddl
mov
pop
mov
test
jp
push
sbb
in
cmp
and
jb
jmp
inc
in
les
adc
add
cwtl
lds
mov
xchg
and
lret
fdiv
fcmovnbe
pop
cltd
js
pusha
cmpsl
inc
lock
loope
inc
or
dec
push
jne
sbb
bound
xor
mov
mov
sub
pop
dec
sbb
std
mov
jge
cwtl
idivl
mov
je
pushf
jmp
ret
in
sbb
inc
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
outsl
sbb
or
jg
mov
jl
jle
jbe
in
out
test
xchg
mov
repnz
mov
out
je
and
shl
dec
clc
mov
lahf
out
jne
fldenv
push
adc
fs
sti
cmp
push
cmc
mov
test
push
xlat
les
mov
sub
sub
sub
jge
lods
jle
lret
mov
xlat
sbb
xchg
or
je
cmp
dec
int
and
ja
inc
in
inc
fidivs
into
jmp
cli
fisttps
clc
jmp
fistl
add
mov
aad
out
pop
imul
fistpl
fdivrs
dec
or
nop
fdivl
addr16
jno
push
outsl
cmp
dec
ret
and
fidivrs
dec
mov
adc
sbb
xchg
aaa
mov
imul
sub
xor
movl
out
jo
cmp
xchg
test
das
sub
call
adc
mov
xchg
cmpxchg
inc
xchg
or
roll
movsl
mov
jnp
push
sbb
jo
pop
repz
mov
arpl
rclb
out
xchg
or
es
test
add
xorl
addl
ds
push
push
lock
int
ffreep
enter
cli
cmp
movsb
and
movsb
dec
stos
mov
mov
pop
aas
dec
movsb
test
hlt
ficoms
fldcw
xor
and
xchg
cmc
dec
es
test
inc
loope
xor
cmp
dec
mov
sbb
push
xchg
push
inc
popf
mov
or
shlb
sbb
pop
test
or
fistpl
mov
cmp
push
and
xchg
nop
xchg
loop
loopne
mov
fnstcw
sti
push
fistpl
sub
cld
sub
icebp
fwait
xchg
aas
data16
xor
or
cmp
jmp
sub
fidivl
cmc
jg
enter
adc
sbb
or
adc
test
pop
lret
out
mov
lcall
rorb
cld
jae
pop
mov
jae
movsb
test
rcrb
jno
xchg
out
loope
mov
imul
loopne
cmp
and
sub
das
and
add
xor
or
mov
jecxz
sbb
jecxz
enter
fs
fisttpl
jl
sub
add
push
pop
aad
xor
sbb
dec
nop
jmp
jnp
loopne
sub
mov
fcomps
das
mov
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
mov
adc
movsb
js
jo
jle
jo
mov
or
sbb
hlt
mov
outsl
cltd
out
push
cmp
fisubl
push
xchg
pop
out
xor
fucomip
mull
and
push
and
add
adc
in
leave
or
pop
gs
int3
and
aas
addl
or
cmc
js
test
in
pop
or
int
dec
faddp
cwtl
push
xchg
and
int3
addr16
sub
and
mov
ja
movsb
mov
filds
fnstenv
mov
cmp
hlt
imul
mov
dec
imul
iret
inc
and
lds
jnp
xlat
sbb
add
aam
mov
mov
test
or
mov
mov
lret
aas
movsb
xor
pop
xor
mov
sub
mov
mov
xor
push
and
mov
int
push
sahf
rcll
pop
add
xchg
inc
fistpl
scas
or
bound
sahf
adc
sbb
aam
imul
xor
orb
lock
test
adc
ss
xlat
mov
adc
fcmovb
push
mov
inc
insl
shrl
ret
out
out
inc
push
es
movsl
dec
jb
mov
dec
mov
dec
sbb
mov
pop
aaa
stos
insl
lods
testl
push
daa
imul
and
cmp
add
aam
mov
xor
iret
stos
sbbl
fwait
pusha
adc
rcl
in
stos
negl
dec
or
xchg
popf
inc
jl
rorl
rorb
es
cmpsl
xchg
into
xchg
movsl
pop
mov
jne
int
nop
popf
cmp
sub
ljmp
clc
inc
int
lea
xchg
ljmp
pop
sub
mov
mov
cmp
sahf
lods
pop
movsl
pusha
out
out
adc
icebp
jne
xor
xchg
cmc
push
mov
call
mov
mov
out
sbb
inc
sbb
cwtl
add
and
jge
sub
jp
lcall
lea
stos
lret
shrb
sbb
mov
lods
jmp
scas
dec
xor
test
ds
mov
pusha
cmp
cld
xor
ficomps
push
in
mov
insl
in
cmc
fiadds
dec
fcomps
or
sub
stos
pop
test
fnstsw
inc
xor
fwait
fisubrs
out
filds
into
xchg
dec
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
xchg
out
in
add
jo
xchg
data16
xchg
mov
jge
cmp
gs
inc
rcr
dec
aas
pushf
jae
inc
addr16
enter
cmp
mov
nop
and
xor
insb
scas
sbb
pop
movsb
insb
jecxz
cs
shrb
sub
rorl
xor
outsb
cmp
test
fs
into
jnp
rcrb
sub
popf
pushf
push
dec
jnp
xchg
dec
stc
pusha
scas
pop
jp
je
adc
jae
inc
sub
ss
xchg
into
cmp
mov
mov
add
shlb
push
insb
inc
data16
lea
sub
lea
mov
add
addr16
fimuls
pushf
mov
xlat
jmp
cmpsl
push
dec
mov
jecxz
ljmp
loop
push
cmp
jecxz
xor
sbb
sub
mov
sbbl
test
push
pop
or
xor
or
shrl
movsl
mov
sbb
sbb
and
and
xlat
movsb
jo
or
xlat
and
fldt
xchg
add
sbb
or
addl
inc
or
loope
cmp
jmp
dec
cwtl
push
imul
fistpll
and
clc
es
lock
in
mov
xor
leave
xor
jl
stc
dec
stos
cmp
add
fcoms
loopne
cmp
scas
add
xor
stos
xchg
ds
iret
or
mov
mov
lret
leave
popf
scas
js
fsts
and
outsl
and
xor
loope
xchg
addr16
jge
adc
lea
mov
xchg
movsb
add
js
push
jo
movsl
out
lret
pusha
mov
call
test
mov
push
jmp
fidivl
sub
cmp
jnp
in
imul
add
repz
push
cld
sbb
movsb
sbb
pop
mov
sub
out
imul
add
aam
xor
jl
push
push
xchg
adc
jg
movsl
and
mov
cmc
inc
add
mov
mov
mov
fsubs
inc
mov
lcall
mov
and
outsb
xor
arpl
into
mov
lock
in
js
xchg
pop
ret
testb
jp
adc
out
sub
xchg
jnp
cmp
fs
test
daa
pushf
popl
or
mov
inc
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
push
xchg
add
mov
scas
int
loopne
aaa
das
cmc
cmp
add
pop
xchg
or
jmp
rcr
cmp
call
movsl
push
test
in
decb
push
nop
xchg
pop
mov
sarl
popf
mov
mov
mov
jmp
mov
lcall
aad
in
mov
stos
or
adc
xchg
ss
cmp
andl
jno
movl
xchg
testb
outsb
mov
adc
mov
push
jae
or
insl
pusha
arpl
mov
sbb
cmpsl
stos
mov
push
out
call
push
xchg
pop
leave
mov
adc
cmp
bound
cmpsb
scas
add
rorl
push
add
orb
inc
or
push
xchg
push
sbb
xor
aam
pop
inc
je
outsb
pop
sbb
rol
lret
pop
sub
data16
aaa
icebp
and
cltd
test
adc
out
and
rclb
stos
les
aaa
rclb
fstpl
add
jmp
xor
in
int3
out
xor
pop
movsb
jge
lret
xchg
jge
mov
leave
jl
inc
cmpsl
pop
cli
push
mov
sti
jp
in
cmp
push
push
mov
pop
sbb
fwait
pop
or
push
aam
xlat
mov
sbb
ficomps
repz
and
stc
enter
sbbb
ret
sub
adc
push
pop
push
fidivrl
push
push
add
and
and
fistps
mov
repz
dec
jle
sbb
inc
jne
test
sbb
lahf
stos
clc
notb
movsl
inc
mov
les
pop
adc
inc
jp
mov
add
adc
dec
testl
iret
addr16
lods
dec
mov
jl
dec
fiadds
push
daa
lcall
addr16
out
pop
xchg
fldl
or
enter
dec
fiaddl
sub
jae
add
shrb
jae
shrb
mov
mov
insl
ret
xchg
sub
push
and
or
and
test
jns
cmpsl
fistpll
adc
int3
xchg
stos
inc
sub
das
lods
mov
push
ret
cltd
dec
andb
push
mov
cld
xchg
sbb
adc
mov
lret
inc
jmp
mov
fs
sbb
ret
pushf
xchg
add
mov
mov
std
jp
sbb
cmp
sti
cmp
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
xor
lcall
jo
sbb
cs
mov
add
inc
negb
mov
push
test
sub
sbb
sbb
adc
test
iret
cli
pushf
mulb
pop
and
pop
out
inc
out
mov
add
sahf
mov
jp
icebp
aam
dec
pop
mov
cmpsl
popa
add
fcoml
mov
cmpsl
inc
jmpw
aaa
test
xchg
xorb
test
dec
roll
inc
ja
cli
xchg
pushf
subl
cmpsl
fs
out
dec
das
push
test
and
stos
popa
jns
loope
fdiv
shrl
aas
add
mov
mov
and
rolb
adc
jg
inc
mov
dec
hlt
fs
pop
icebp
jno
sbb
push
mov
jb
mov
jg
pusha
cmpsl
xlat
pop
test
test
mov
iret
int
sbb
dec
jae
xchg
and
push
loop
enter
ss
or
hlt
sbb
push
and
cmp
repz
xchg
mov
sub
pop
and
fmuls
scas
xchg
std
test
loopne
sub
push
push
xor
pusha
add
int3
jge
mov
jns
mov
push
sub
pop
fdivs
mov
sti
xor
mov
cltd
fcmovnbe
jl
sti
fwait
xchg
inc
jno
lds
das
pop
inc
fisubl
lods
mov
jnp
xchg
jo
xchg
stc
push
lahf
cmpsb
lock
lret
clc
pop
push
les
jecxz
pop
int3
xor
xchg
xchg
mov
sub
cmp
mov
add
rcrl
fnstcw
pop
xchg
popf
push
in
lcall
inc
loope
inc
dec
outsl
adc
aas
cmpsb
in
mov
dec
jmp
stos
or
mov
pop
xor
sub
mov
mov
stc
mov
lret
pusha
cmp
leave
call
adc
subl
popf
lcall
les
loop
lahf
push
lret
out
mov
mov
test
mov
dec
jo
and
outsl
xorl
data16
pop
xchg
pop
movsl
xchg
mov
lods
enter
cmp
mov
add
adc
cmp
lock
jo
mov
je
imul
in
jge
pop
int3
xchg
adc
pop
mov
bound
mov
shll
nop
call
lds
mov
mov
loopne
inc
fsubs
jbe
pop
mov
push
xor
lea
jmp
sub
mov
popa
pop
xchg
aas
mov
or
jo
in
addr16
sub
pop
mov
dec
dec
jle
test
pushf
xor
lock
shll
loopne
xchg
bnd
lods
incl
testl
cs
scas
pop
bound
jno
dec
xor
outsb
mov
push
push
push
std
aaa
cltd
int3
int
jp
inc
negb
movsl
popa
shrl
lret
sub
pop
out
pop
repnz
jae
aam
pop
pop
orb
loop
mov
leave
dec
decb
cs
inc
add
repz
js,pn
dec
es
sahf
mov
pop
pop
jmp
scas
inc
cmp
lahf
dec
xor
jmp
cli
pop
es
stc
stc
imul
mov
xor
pop
jnp
bswap
add
mov
pop
in
inc
stos
clc
aas
iret
mov
insl
jb
xor
inc
inc
test
ss
outsl
ja
pop
cmp
cmpsl
mov
sbb
jnp
adc
inc
mov
pop
imul
mov
jnp
and
adc
xchg
lds
push
inc
cmp
cltd
test
repz
aaa
jge
pop
cwtl
sub
adc
push
pusha
xchg
pushf
jmp
lret
movsl
imul
and
int
mov
mov
movsl
or
lcall
fcomi
lahf
lcall
xor
xchg
sbb
test
es
std
push
loope
mov
inc
xor
and
aas
xchg
push
add
fnstcw
xchg
outsb
cmc
ds
addb
pop
sbb
insb
fistps
sub
sar
mov
iret
mov
jl
cmp
ret
xor
inc
int
xchg
xchg
and
jne
sbb
dec
mov
add
sub
outsl
cmp
xor
outsb
jae
jecxz
cmp
sub
xor
lea
mov
call
mov
mov
push
inc
and
movsb
lret
push
xchg
jmp
scas
rcr
cwtl
data16
mov
push
inc
cmpsl
int3
dec
xchg
sbb
or
std
dec
popa
mov
dec
sub
xor
aaa
sahf
mov
ds
pop
lods
imul
or
xor
mov
mov
cmp
ret
test
sbb
idivb
imul
or
jmp
push
outsl
xchg
xchg
xor
mov
mov
dec
insb
pop
rcl
fildll
repz
imul
rcr
xchg
mov
cmc
imul
shrl
loope
mov
inc
push
cmc
das
dec
mov
xchg
popa
pop
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
dec
sbb
mov
mov
mov
inc
mov
stos
jb
dec
in
pop
cmp
jb
sub
loopne
pop
sub
mov
jmp
push
icebp
std
rcrb
sub
or
sub
jns
jo
cmpsl
mov
xchg
cmp
fwait
divb
jmp
pop
add
int
jae
jmp
xor
sub
sbb
outsb
adc
imul
in
rorb
int3
xchg
outsb
insl
in
lea
lcall
rorb
scas
adc
lock
mov
test
popa
cmp
bound
ret
jns
lret
lods
inc
add
sbb
ds
xor
test
fidivs
ljmp
or
incb
scas
add
xchg
jg
jle
or
sub
lods
dec
test
loope
pop
xlat
stc
call
loope
mov
jp
sbb
dec
cltd
cmp
cmp
mov
adc
pop
push
and
cld
sub
aas
scas
add
sub
pop
pop
dec
lahf
aam
mov
leave
insl
hlt
incb
cli
pop
xor
jmp
in
dec
cmp
rorb
sub
cmp
pushf
mov
xchg
and
pop
jmp
mov
pop
sbb
sahf
js
xchg
popf
add
lock
pop
inc
cmp
sbb
sti
jle
pop
dec
xchg
cmovs
pushf
sbb
push
outsl
lcall
imul
call
lret
fdivl
cmp
mov
xchg
mov
or
pop
scas
lods
push
stc
xchg
xchg
jp
sahf
repnz
pop
jp
daa
mov
adc
xchg
imul
cmp
lock
stc
xchg
in
imul
sbb
cmp
xchg
sahf
test
out
sub
sarl
mov
push
aaa
aad
divb
xchg
pushf
loope
sarb
jp
xor
push
dec
dec
mov
xor
cmp
mov
js
or
mov
push
inc
dec
ret
inc
outsw
daa
imul
push
dec
xor
sbb
mov
ljmp
leave
out
negl
inc
jo
jg
adc
clc
cwtl
outsb
xchg
lahf
jnp
mov
pop
xchg
outsl
cmp
sub
icebp
test
les
aas
test
out
add
push
sbb
pop
adc
subb
shl
fnsave
push
lea
loopne
sub
push
or
cmp
jnp
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
ret
mov
mov
xchg
int3
mov
aam
lret
xor
push
test
cmp
cltd
inc
iret
je
scas
pop
cmp
pop
dec
outsb
jle
addr16
inc
xor
bound
inc
cmp
add
mov
pop
fistps
js
iret
jecxz
xchg
jp
jbe
or
sub
setp
pop
in
pop
sub
xchg
jns
flds
loop
inc
mov
mov
push
pop
push
and
sub
repz
pushf
mov
in
in
mov
jmp
mov
fdivr
cli
lock
mov
mov
inc
mov
arpl
sbb
cmp
movsb
lods
or
test
push
xor
cltd
xchg
cltd
popf
or
or
mov
addl
jg
dec
pop
nop
sbb
pop
and
sub
push
ds
or
xor
jp
add
popa
aad
lea
jg
aas
sti
xchg
out
adc
imul
stc
pop
int
fsubs
dec
icebp
or
or
jp
xchg
les
iret
ret
jmp
cltd
sarb
loop
xchg
rorl
sbb
mov
daa
dec
mov
xor
addr16
push
rol
lea
push
shll
outsb
shlb
mov
sbb
cmp
ds
mov
adc
outsl
rcrb
mov
sti
adc
jp
bound
and
into
add
xor
mov
jle
stos
data16
push
and
xlat
aaa
xchg
imul
outsl
les
mov
ret
loopne
fnsave
pop
mov
rcll
sub
inc
in
stc
pusha
inc
mov
ret
xchg
roll
mov
ret
stos
dec
stc
mov
loop
dec
xchg
xchg
push
sub
jnp
daa
cld
sbb
jmp
ljmp
mov
mov
mov
mov
inc
push
daa
adc
jbe
imul
jl
sub
pop
sahf
cltd
adc
lock
xor
mov
pop
inc
lods
dec
pop
loop
scas
add
and
ds
xor
and
inc
push
out
arpl
fistpll
and
sbbb
push
sbb
hlt
xor
not
mov
sahf
repnz
push
mov
sahf
pop
pop
das
imul
loope
mov
dec
mov
mov
xor
dec
pop
dec
xor
test
mov
or
lods
jmp
ss
push
push
mov
mov
add
mov
adc
pop
aas
and
pop
push
repnz
or
loopne
push
test
inc
add
jbe
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
mov
adc
jo
jle
jo
lods
aaa
imul
loop
cmp
out
frstor
pop
test
pop
push
jae
inc
in
pop
xchg
lcall
int
or
push
pop
in
mov
inc
pushf
and
mul
mov
sub
push
cmp
adc
in
popf
inc
mov
cmp
cld
rorl
jb
movsl
int
in
aaa
jno
cmp
popa
ja
andb
xchg
add
xchg
cld
int3
adcl
xor
mov
loop
cmpsl
loopne
cmpb
ja
dec
adc
adc
fdivr
lds
testb
adc
cmp
addr16
cmpl
jb
pop
mov
jns
lret
out
cli
xchg
mov
test
xchg
adc
lods
sbb
hlt
pop
repz
pop
shr
test
lods
pushl
insl
xchg
lods
push
in
into
shll
lock
cmpsb
mov
xchg
es
leave
push
andl
ljmp
xchg
and
callw
jp
jge
int
dec
pop
aam
jl
mov
mov
xchg
dec
xchg
xor
xor
xchg
aaa
aad
test
inc
pop
outsb
and
mov
cmp
nop
pop
mov
pushw
cmp
inc
ss
xchg
in
or
pop
sub
mov
adc
xchg
into
jmp
cmp
mov
dec
out
aas
and
sbb
outsl
fsubrl
sbb
mov
mov
xor
or
pop
cmp
cmpsb
adcl
pop
repz
xchg
leave
xor
sarl
das
fwait
pushf
fstpl
insb
repnz
xchg
inc
cmpsb
fidivrs
add
and
cmp
lret
fsub
scas
movsb
sub
cltd
popf
pop
fisubs
fdivrl
mov
arpl
mov
mov
inc
and
push
stc
test
in
loop
xor
out
xor
test
fstpl
mov
int
setno
and
dec
xchg
dec
mov
mov
inc
jmp
fstps
dec
xchg
jb
fsubl
pop
pop
inc
cmc
enter
adc
ljmp
push
test
ljmp
sarl
les
pushf
insl
cld
pusha
adc
je
loop
pop
mov
int
and
xchg
push
fsubrs
cltd
or
jecxz
pop
and
aad
insl
enter
push
adc
jle
push
push
xor
xchg
ja
ss
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
int
arpl
jo
jle
jo
mov
cmp
pushf
aas
mul
aas
dec
add
pop
lock
dec
adcb
jo
das
mov
cmp
and
and
dec
pop
inc
daa
sub
mov
dec
cmp
sbb
or
imul
cmp
cmp
push
ret
or
fimuls
jae
movsl
fwait
dec
in
jo
fisubs
cmp
adc
loopne
jno
sub
adc
leave
mov
ffreep
scas
cli
stos
push
xchg
dec
js
ffree
and
std
ja
pop
xor
mov
jae
les
jge
mov
mov
xchg
loope
scas
in
in
cli
jle
std
pop
into
xor
in
xchg
xor
ja
fisttpl
mov
loope
ja
ljmp
sub
jae
xlat
test
xchg
sbb
in
into
mov
xor
and
add
push
or
bnd
insb
das
and
insb
sbb
scas
lock
cmp
dec
pop
insb
je
or
sbb
sahf
mov
rol
sub
scas
aas
arpl
inc
xchg
test
mov
add
das
cs
rcll
sub
cmpsl
ficoms
clc
add
pop
std
push
fbstp
mov
sbb
inc
loop
je
cmpsl
insl
add
in
add
fwait
test
ss
xadd
sbb
fs
pusha
shlb
test
fildl
inc
aaa
lock
mov
test
std
into
xor
lret
pushl
sub
mov
sub
in
pop
lock
cmp
mov
loop
add
mov
js
jp
cmp
mov
sbb
js
xchg
ret
std
jg
hlt
cmc
cmp
pop
cmpsl
ss
adcl
add
and
jo
push
arpl
mov
sub
sub
or
sub
cltd
imul
adc
jne
cmp
dec
mov
cmovbe
xchg
in
notb
jb
pushf
lods
sbb
mov
notl
mov
fsubs
push
mov
ss
mov
jp
es
jns
mov
adc
mov
test
insb
mov
or
js
clc
cli
scas
jno
aas
push
mov
mov
divb
scas
orl
xor
jmp
jge
xchg
jmp
cmc
std
fs
jno
mov
inc
popa
jp
movsl
pop
jg
mov
test
lods
out
cmpsl
andl
mov
xchg
in
sub
xlat
sarb
push
xor
adc
scas
and
aad
jnp
bound
xlat
dec
pop
push
cmp
ljmp
pop
jecxz
dec
push
sub
or
cmp
jbe
push
rorl
cmc
mov
mov
adc
dec
dec
out
mov
cmp
testb
mov
add
adc
dec
int3
mov
cmc
lret
mov
xchg
mov
pusha
pop
cmp
ret
fidivrl
repnz
movsb
or
aaa
fstps
fiaddl
shlb
cltd
xchg
cld
jl
sub
inc
leave
aad
les
addb
mov
mov
xchg
aas
push
sub
inc
push
lret
jo
test
xchg
std
or
xor
negb
dec
or
add
adc
fstl
insl
cltd
outsb
test
push
cmpb
aad
orl
out
test
sbb
insb
sub
sbb
xor
fs
mull
adc
sbb
ss
mov
push
sbbb
cltd
fidivl
mov
mov
mov
cmp
icebp
movsb
dec
inc
loopne
or
mov
insb
andb
push
cmp
icebp
leave
lea
mov
pusha
adc
pusha
jmp
imul
jmp
cwtl
or
adc
cmp
dec
clc
and
mov
mov
mov
pop
mov
sbb
dec
ret
add
push
cli
xchg
scas
out
aas
mov
test
or
xor
ficompl
jp
sahf
test
mov
pop
dec
xrelease
es
iret
in
mov
xchg
test
arpl
lods
fists
xchg
insl
mov
pushf
sbb
popf
movsl
adc
ret
jmp
add
sub
sbb
mov
xor
jecxz
or
jmp
xor
in
nop
lock
pop
cwtl
sbb
jbe
sti
pop
mov
call
loopne
pop
dec
add
pop
fwait
pop
hlt
ss
iret
out
mov
mov
gs
sbb
ds
mov
hlt
ljmp
sbb
pop
scas
out
shll
iret
lret
push
mov
jecxz
and
fdivrl
and
icebp
push
dec
pusha
icebp
aam
inc
test
in
jns
inc
mov
enter
cmp
mov
iret
mov
and
pushf
arpl
and
imull
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
out
mov
out
sbb
jo
jle
jo
xor
aaa
fistps
pop
jns
mov
adc
sub
ret
into
mov
ret
xchg
aam
sub
push
scas
dec
push
mov
mov
adc
cmp
adc
or
fimuls
jnp
cmc
sbb
mov
cmp
xchg
clc
push
dec
xor
data16
outsb
iret
out
aad
add
mov
inc
mov
jmp
and
mov
pop
or
outsb
push
adc
jecxz
push
subb
fdivrs
notl
xchg
dec
inc
or
jl
lods
xchg
adc
pop
addb
imul
ror
xchg
pop
jb
jecxz
mov
out
in
gs
push
jae
lahf
dec
bnd
insl
push
ret
mov
clc
sub
fxch
push
push
pushf
mov
xorb
jg
lcall
xor
add
push
xchg
dec
inc
ds
and
mov
rep
hlt
sbb
mov
mov
jmp
sub
fcomip
xor
popa
add
pop
push
js
jmp
mov
ljmp
wrmsr
ljmp
jno
dec
loopne
push
push
jge
jg
inc
daa
mov
inc
jl
sarl
cmpl
add
lods
icebp
das
fs
xor
dec
lahf
dec
push
divb
mov
cmp
gs
sbb
mov
outsl
mov
pop
cmp
fcompl
jb
cwtl
sub
movsl
dec
push
xor
mov
fdivrs
arpl
lret
nop
adc
cmp
or
jecxz
lret
mov
adc
push
xor
or
cmp
ljmp
mov
or
cwtl
dec
mov
mov
imul
ret
mov
sub
popf
or
pop
aad
xchg
out
out
icebp
loop
add
mov
or
mov
dec
rcrb
mov
sbb
or
mov
ljmp
xor
and
pop
pop
jge
scas
xor
jle
mov
and
sbb
cld
jb
inc
cld
das
outsl
inc
mov
xchg
adc
or
jle
and
fs
cli
test
adc
jb
shrb
mov
cwtl
adc
loop
push
cli
add
je
mov
addl
mov
ret
adc
stc
fdivs
jno
imul
push
xor
popf
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
sub
sbb
mov
mov
cltd
call
in
sbb
ret
icebp
test
dec
call
imul
add
and
bound
push
or
out
fdivl
xor
loope
hlt
sbb
sbb
inc
mov
inc
fadd
cwtl
test
addr16
jno
add
inc
shlb
sub
lods
aaa
hlt
leave
push
mov
cli
push
adc
loopne
mov
insl
or
hlt
addr16
mov
adc
xlat
fs
stc
jne
push
les
aaa
cmp
and
and
aam
shrl
ds
add
mov
xor
stos
fidivrl
mov
dec
lret
jle
or
xchg
movsb
jle
fistl
jmp
push
aad
fwait
ss
daa
adc
mov
dec
js
adc
mov
jae
or
and
mov
dec
mov
adc
lods
lahf
aaa
mov
repnz
pop
jle
addb
push
pop
mov
mov
adc
mov
stos
mov
mov
jle
addr16
or
icebp
add
stos
loopne
fldenv
hlt
xchg
pop
xor
sub
jo
rolb
rcll
scas
dec
add
out
dec
clc
pop
shrb
loopne
in
xchg
sub
sub
jo
fcom
xchg
pop
lret
iret
inc
mov
out
popa
cmp
adc
movsl
enter
cltd
adc
add
das
fmull
ret
rcr
clc
pop
pop
push
adc
sbb
push
call
pop
negb
fcompl
in
stos
je
pop
sub
dec
cmp
sub
ljmp
out
test
lods
and
lds
cltd
test
outsb
jp
pop
inc
mov
int3
jno
and
push
adc
adc
das
push
sub
sub
pop
loopne
adc
je
add
pop
and
push
sbb
movsl
fistpll
imul
fbld
lcall
xchg
les
int
test
xchg
jb
loop
and
lcall
sub
inc
sub
je
push
pop
je
mov
ja
shrl
xchg
mov
inc
lret
roll
int3
or
outsl
xchg
mov
or
add
and
mov
mov
int3
pop
jge
icebp
and
pop
fisubs
popf
jb
mov
out
push
xchg
add
push
or
aaa
sub
cltd
xor
repz
arpl
sbb
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
mov
bts
jg
mov
mov
ret
lret
fidivs
dec
fs
cmp
push
xchg
cmp
or
or
mov
hlt
inc
enter
test
jo
stos
popf
or
adc
bound
mov
jne
pop
sub
popf
pusha
mov
hlt
repz
es
lret
aaa
sbb
fwait
cld
sbb
test
popa
mov
pop
adc
xchg
push
repnz
push
mov
xor
adc
lret
out
int3
stos
jge
lock
push
and
jns
imul
cwtl
sub
adc
dec
sbb
fcompl
mov
out
adc
adc
fidivl
sub
cmp
dec
ja
cmp
inc
or
add
add
xorb
dec
push
mov
xor
and
inc
jno
xor
dec
fisttpl
das
shlb
dec
jns
inc
scas
or
data16
push
push
idivb
push
outsl
test
in
test
sub
jmp
mov
addr16
push
ret
and
add
adc
sub
push
loopne
jbe
pop
in
sub
test
lret
hlt
out
mov
shrl
fcomps
test
push
out
push
jb
cltd
inc
push
push
adc
outsl
repz
test
fsubl
cltd
push
xchg
rorb
lds
adc
inc
iret
sbb
mov
repnz
lds
enter
sub
add
loopne
push
jecxz
call
rcll
subl
mov
gs
ljmp
sbb
mov
sahf
aam
push
sub
gs
inc
mov
and
aas
out
xor
rclb
sub
std
arpl
pop
in
mov
fidivrl
loop
cwtl
cs
adc
lea
jecxz
test
push
mov
mov
rcll
rolb
mov
clc
inc
aaa
dec
std
pop
adc
aam
add
mov
jl
movsb
notl
jmp
cmp
nop
xchg
rclb
stc
leave
pop
and
in
loop
movb
inc
inc
cmp
dec
pop
fnsave
xor
out
lahf
jne
or
adc
jo
mov
addr16
push
out
mov
repz
mov
push
mov
rcrb
mov
sbb
pusha
and
lret
push
cmc
inc
push
mov
sub
aaa
test
sub
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
jg
mov
adc
jl
out
jge
dec
in
jl
popf
rcr
aas
int3
sbb
std
push
lret
jae
push
rol
ss
sub
jge
dec
fidivs
push
dec
xchg
add
in
aam
shrl
dec
push
ss
pushf
xor
fimuls
insb
dec
dec
movsl
push
push
adc
mov
jo
jp
jl
stc
popf
mov
fisttps
mov
mov
popa
test
inc
fimuls
xor
sbb
ljmp
and
rcl
mov
addr16
leave
xor
mov
jmp
mov
daa
lahf
inc
lods
das
fisubrl
sbb
pop
xor
jmp
pop
js
and
ljmp
in
shll
push
out
mov
push
cmpsl
dec
movsl
pxor
xchg
push
mov
or
add
push
ss
adcl
and
push
jo
jge
ret
cmp
stc
inc
nop
pop
xchg
iret
add
push
lcall
add
mov
dec
mov
or
jg
bound
xlat
jo
dec
aad
popf
fs
and
fidivrl
int3
or
jne
mov
cmp
insb
push
dec
cs
pop
call
inc
fisttps
pop
cmp
jp
orl
ja
decl
and
lret
cmp
xchg
mov
xor
pushf
fsts
out
sbb
sbb
jo
std
jl
je
xor
int
test
mov
rcrl
pop
sbb
lret
sbb
out
imul
adc
das
sub
dec
pop
push
xlat
arpl
mov
stos
stos
cltd
out
push
ret
jo
stc
jg
cmp
mov
jno
mov
mov
pop
mov
mov
stos
jmp
sahf
sub
lods
cmp
out
lahf
aam
addr16
insl
jle
jmp
inc
push
ds
xor
adc
test
pop
pushf
jne
scas
leave
jne
fs
jb
mov
xchg
xor
adc
pop
jp
lahf
xor
aad
lea
sbb
xor
sbbl
mov
imul
jbe
mov
les
xchg
and
and
popf
cmp
mov
or
out
jo
outsl
lods
in
stos
decl
andl
jnp
inc
push
stos
addl
pop
pop
sbb
loopne
inc
push
inc
dec
jns
mov
in
pop
cmp
jle
insl
jp
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
